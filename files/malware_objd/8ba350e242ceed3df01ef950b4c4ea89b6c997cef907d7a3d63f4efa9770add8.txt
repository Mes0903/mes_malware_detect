
8ba350e242ceed3df01ef950b4c4ea89b6c997cef907d7a3d63f4efa9770add8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	sbb    DWORD PTR [ebx],esp
  401170:	mov    esp,0xd09591b1
  401175:	sub    DWORD PTR [eax+eiz*4],0x7f
  401179:	aad    0x7f
  40117b:	mov    WORD PTR [edi-0x362067af],es
  401181:	mov    al,ds:0xac60bcdd
  401186:	loope  0x401205
  401188:	scas   eax,DWORD PTR es:[edi]
  401189:	xlat   BYTE PTR ds:[ebx]
  40118a:	in     eax,dx
  40118b:	xchg   BYTE PTR [esi-0x32],dh
  40118e:	cmp    DWORD PTR [esp+0x15],edi
  401192:	or     DWORD PTR [eax-0x62fafd83],ebx
  401198:	iret   
  401199:	mov    ds:0x2b18b51,eax
  40119e:	out    dx,eax
  40119f:	xchg   esp,eax
  4011a0:	jb     0x4011f6
  4011a2:	cdq    
  4011a3:	xor    dl,BYTE PTR [eax]
  4011a5:	loope  0x40121f
  4011a7:	push   ebp
  4011a8:	inc    esi
  4011a9:	into   
  4011aa:	mov    ebp,0x33d47675
  4011af:	add    al,0x6c
  4011b1:	test   BYTE PTR [esi-0x28eaf61d],dh
  4011b7:	popa   
  4011b8:	pusha  
  4011b9:	sar    BYTE PTR [ecx+0x640d4118],1
  4011bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011c0:	scas   al,BYTE PTR es:[edi]
  4011c1:	int    0x2
  4011c3:	jmp    DWORD PTR [esi+0x57]
  4011c6:	in     eax,dx
  4011c7:	fisttp WORD PTR [ebp+0x4a]
  4011ca:	icebp  
  4011cb:	into   
  4011cc:	push   ss
  4011cd:	ja     0x40123f
  4011cf:	and    DWORD PTR [ebx+0x6b],0x7e09fcbf
  4011d6:	pop    ecx
  4011d7:	std    
  4011d8:	jb     0x40117c
  4011da:	aad    0x1
  4011dc:	add    dh,BYTE PTR [eax+edi*8+0x21c08b94]
  4011e3:	mov    ecx,0x2800314f
  4011e8:	jle    0x40119b
  4011ea:	les    edi,FWORD PTR ds:0xfe34e17d
  4011f0:	std    
  4011f1:	adc    DWORD PTR [esi+ebx*8+0x49],0xffffffb1
  4011f6:	jg     0x401265
  4011f8:	test   al,0x87
  4011fa:	repz or dh,0x19
  4011fe:	gs data16 into 
  401201:	push   ecx
  401202:	inc    edi
  401203:	xor    al,0x60
  401205:	test   BYTE PTR ss:[edx-0x28619730],bh
  40120c:	fistp  WORD PTR [ebp+0x17]
  40120f:	int    0xaf
  401211:	(bad)  
  401212:	lock fistp DWORD PTR [eax]
  401215:	out    0xb3,eax
  401217:	(bad)  
  401219:	in     al,0xa5
  40121b:	imul   esp,DWORD PTR [esi-0x19b2cc9a],0xffffffd4
  401222:	addr16 mov esp,0x4522ebf9
  401228:	hlt    
  401229:	fwait
  40122a:	imul   esi,DWORD PTR [ecx-0x14],0x4a225082
  401231:	lahf   
  401232:	in     al,0xbd
  401234:	jp     0x401209
  401236:	mov    bh,0xb2
  401238:	jmp    0xbd2d2dc5
  40123d:	push   0xffffffc6
  40123f:	mov    esp,0xbd0932db
  401244:	mov    WORD PTR ds:[esi+0x5b0f3be4],?
  40124b:	cmp    eax,0xd30522e0
  401250:	mov    al,0x5e
  401252:	add    eax,0xb03d3492
  401257:	and    ebp,DWORD PTR [ebp-0x1e]
  40125a:	and    al,0xa
  40125c:	not    BYTE PTR [edi-0x28ef1340]
  401262:	pop    es
  401263:	pop    edi
  401264:	xlat   BYTE PTR fs:[ebx]
  401266:	mov    dl,BYTE PTR [edx+eax*8]
  401269:	ins    BYTE PTR es:[edi],dx
  40126a:	push   es
  40126b:	mov    eax,ds:0x613c5fff
  401270:	mov    dh,0xa2
  401272:	jb     0x40122d
  401274:	outs   dx,BYTE PTR ds:[esi]
  401275:	inc    esp
  401276:	addr16 sbb eax,esi
  401279:	nop
  40127a:	repnz mov ds:0xb24df63c,eax
  401280:	sub    eax,eax
  401282:	scas   eax,DWORD PTR es:[edi]
  401283:	mov    dl,0x2e
  401285:	enter  0x8a52,0x38
  401289:	cld    
  40128a:	ins    DWORD PTR es:[edi],dx
  40128b:	add    DWORD PTR [edx],esi
  40128d:	ds jmp 0x4012da
  401290:	fwait
  401291:	xchg   esp,eax
  401292:	jae    0x401239
  401294:	xor    al,0x5d
  401296:	mov    eax,ds:0x1bce6753
  40129b:	sub    DWORD PTR [ebp-0x5e],ebx
  40129e:	data16 fcom QWORD PTR [ebp-0xb2d027c]
  4012a5:	fist   DWORD PTR [eax+0x4c364fa8]
  4012ab:	pop    eax
  4012ac:	stos   DWORD PTR es:[edi],eax
  4012ad:	fdivrp st(1),st
  4012af:	sbb    BYTE PTR [esi-0x3322246c],dh
  4012b5:	push   ds
  4012b6:	mov    eax,esp
  4012b8:	adc    BYTE PTR [esi],0xc5
  4012bb:	jg     0x4012e4
  4012bd:	or     dl,BYTE PTR [edx-0x19e46ce9]
  4012c3:	ja     0x4012a8
  4012c5:	pop    esp
  4012c6:	cmp    al,0x9b
  4012c8:	div    ch
  4012ca:	push   0xfffffff9
  4012cc:	or     al,0x1a
  4012ce:	repnz clc 
  4012d0:	add    al,bh
  4012d2:	mov    ebp,0xc466e1ba
  4012d7:	mov    edi,ebp
  4012d9:	push   ecx
  4012db:	dec    esp
  4012dc:	cdq    
  4012dd:	jns    0x4012c1
  4012df:	mov    bl,0xdc
  4012e1:	outs   dx,DWORD PTR ds:[esi]
  4012e2:	or     cl,BYTE PTR [esi]
  4012e4:	loope  0x4012cc
  4012e6:	or     BYTE PTR [eax+0x23],al
  4012e9:	bnd gs jge 0x4012f5
  4012ed:	inc    ebp
  4012ee:	dec    ecx
  4012ef:	stos   BYTE PTR es:[edi],al
  4012f0:	cmp    cl,ch
  4012f2:	rol    DWORD PTR [edi],0x8f
  4012f5:	push   esi
  4012f6:	mov    DWORD PTR [edi],0x79e810b2
  4012fc:	jmp    0x5946b6f1
  401301:	mov    esi,0x68bb3adf
  401306:	pop    ds
  401307:	cwde   
  401308:	jae    0x401379
  40130a:	push   edi
  40130b:	adc    al,BYTE PTR [edx+edx*4-0x567f2520]
  401312:	add    al,0x9f
  401314:	adc    bh,BYTE PTR [edi-0x27]
  401317:	inc    edi
  401318:	data16 add BYTE PTR [edx-0x32],0x3b
  40131d:	jle    0x401320
  40131f:	dec    esi
  401320:	scas   al,BYTE PTR es:[edi]
  401321:	inc    esp
  401322:	adc    cl,BYTE PTR [edi]
  401324:	xchg   BYTE PTR [ebx-0x79],dl
  401327:	pop    esp
  401328:	les    edi,FWORD PTR [edx]
  40132a:	pop    ebp
  40132b:	mov    BYTE PTR [ecx-0x468306e4],0xc5
  401332:	sbb    dh,BYTE PTR [edx]
  401334:	and    DWORD PTR [ebx+ebp*2+0x5e22f45],0x843b1fc3
  40133f:	das    
  401340:	(bad)  
  401341:	out    dx,al
  401342:	call   0x653d6e54
  401347:	mov    esp,0x95ca7994
  40134c:	sub    eax,DWORD PTR [ecx]
  40134e:	push   ss
  40134f:	ffreep st(3)
  401351:	aam    0xd1
  401353:	imul   eax,DWORD PTR [ecx+eax*2+0x68ff38f],0x7d
  40135b:	push   es
  40135c:	jecxz  0x4013ab
  40135e:	push   eax
  40135f:	mov    ecx,0x2cd71b27
  401364:	daa    
  401365:	pop    ebx
  401366:	adc    ebp,ecx
  401368:	pop    eax
  401369:	and    eax,0xe4bf63cb
  40136e:	or     DWORD PTR [ebx-0x19],eax
  401371:	and    dl,cl
  401373:	les    esi,FWORD PTR [ecx+0xd]
  401376:	add    eax,0x8c0425e5
  40137b:	mov    edi,0x5d276dfe
  401380:	mov    ebp,0x97fb3280
  401385:	dec    esp
  401386:	jmp    0x2d3205c0
  40138b:	mov    bh,0x24
  40138d:	jb     0x401311
  40138f:	xor    DWORD PTR [ecx],esp
  401391:	mov    ds:0xb0bea76d,al
  401396:	stc    
  401397:	mov    eax,ds:0x148b676
  40139c:	(bad)  
  40139d:	loopne 0x4013a2
  40139f:	sbb    DWORD PTR [edx-0x69a47ffa],esi
  4013a5:	push   ebx
  4013a7:	pop    ebx
  4013a8:	ins    DWORD PTR es:[edi],dx
  4013a9:	pop    ss
  4013aa:	pop    ecx
  4013ab:	scas   eax,DWORD PTR es:[edi]
  4013ac:	sbb    eax,0xe4153940
  4013b1:	ret    0x6cdf
  4013b4:	test   DWORD PTR ds:0x6360338a,ebp
  4013ba:	ficom  WORD PTR [ebx]
  4013bc:	xchg   edi,eax
  4013bd:	fisttp DWORD PTR [esi]
  4013bf:	or     BYTE PTR [edi-0x29897618],ah
  4013c5:	(bad)  
  4013c6:	jo     0x4013ca
  4013c8:	jle    0x401447
  4013ca:	adc    esi,DWORD PTR [edx]
  4013cc:	ss jg  0x401394
  4013cf:	inc    ecx
  4013d0:	xchg   esp,eax
  4013d1:	mov    dh,0xea
  4013d3:	cld    
  4013d4:	push   ebx
  4013d5:	ins    DWORD PTR es:[edi],dx
  4013d6:	ja     0x40140b
  4013d8:	pop    esi
  4013d9:	xor    al,0xbe
  4013db:	xor    DWORD PTR [esi+0x4a516d18],edi
  4013e1:	xor    eax,0x37927007
  4013e6:	sbb    BYTE PTR [edi-0x15af17d2],ah
  4013ec:	adc    DWORD PTR [ecx+eiz*1-0x33],eax
  4013f0:	fidivr DWORD PTR [ebp-0x73]
  4013f3:	pushf  
  4013f4:	mov    ds:0xdb49c8cd,eax
  4013f9:	dec    esi
  4013fa:	scas   al,BYTE PTR es:[edi]
  4013fb:	out    0x66,eax
  4013fd:	xor    eax,0x457feebf
  401402:	lahf   
  401403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401404:	fs cs ss mov ecx,0x7ce40753
  40140c:	push   edx
  40140d:	xor    eax,0x9d8b0e84
  401412:	or     DWORD PTR [edi],ecx
  401414:	inc    esi
  401415:	mov    ebx,0x7bb68893
  40141a:	loopne 0x401445
  40141c:	(bad)  
  40141d:	clc    
  40141e:	jno    0x4013ca
  401420:	mov    edx,0x9316d367
  401425:	mov    es,WORD PTR [ebx]
  401427:	pop    edi
  401428:	push   ecx
  401429:	mov    ecx,0x4f8eeccb
  40142e:	mov    dl,0xc6
  401430:	mul    dl
  401432:	mov    WORD PTR [edx-0x248a4e6f],ds
  401438:	sbb    al,0xba
  40143a:	push   ss
  40143b:	pop    eax
  40143c:	xchg   esi,eax
  40143d:	cmp    ecx,ebx
  40143f:	shr    DWORD PTR [ebp+0x5ef625c1],cl
  401445:	sbb    al,0xce
  401447:	pop    ecx
  401448:	push   0x2dc5fbc7
  40144d:	sub    DWORD PTR [edx-0x751ef7a6],esp
  401453:	adc    esi,DWORD PTR [ebp+0x4d9b4cd8]
  401459:	sub    edi,DWORD PTR [eax]
  40145b:	xlat   BYTE PTR ds:[ebx]
  40145c:	(bad)  
  40145d:	out    0x4e,eax
  40145f:	sbb    eax,0x7372c989
  401464:	loop   0x401498
  401466:	xchg   edx,eax
  401467:	mov    ebx,0xc0b6b11c
  40146c:	mov    bl,dh
  40146e:	lfs    ecx,FWORD PTR [ebx+edi*4-0x3f990f18]
  401476:	mov    dh,0xd5
  401478:	xor    ecx,DWORD PTR [ebx+0x58]
  40147b:	sti    
  40147c:	(bad)  
  40147d:	repnz in al,dx
  40147f:	jmp    0x3b99a47
  401484:	lock leave 
  401486:	push   edi
  401487:	shr    DWORD PTR [edx+edx*2-0x37],1
  40148b:	inc    ecx
  40148c:	mov    WORD PTR cs:[ebp-0xaff37cc],cs
  401493:	rcl    DWORD PTR [ebx-0x72],0x6d
  401497:	ret    0x8b5a
  40149a:	arpl   WORD PTR [edx+0x4b],ax
  40149d:	sub    ch,BYTE PTR [ebx+0x1f]
  4014a0:	sub    eax,0x224b0f33
  4014a5:	in     al,0x6e
  4014a7:	ds (bad) 
  4014a9:	call   0x3267:0x38897b7c
  4014b0:	jecxz  0x401527
  4014b2:	dec    ecx
  4014b3:	xor    cx,WORD PTR [edx]
  4014b6:	(bad)  
  4014b7:	mov    dl,0x4c
  4014b9:	jmp    0xe03f:0x5fc492d5
  4014c0:	mov    edi,0x41ed06b9
  4014c5:	pop    ebx
  4014c6:	(bad)  
  4014c7:	loopne 0x40153f
  4014c9:	seta   BYTE PTR [esi+0x445eab33]
  4014d0:	or     eax,0x8ba435f1
  4014d5:	jb     0x401537
  4014d7:	xor    ebx,DWORD PTR [ebx+0x2f]
  4014da:	test   eax,0xe09e5ce9
  4014df:	cmc    
  4014e0:	mov    dh,BYTE PTR [ebx-0x1eeb1125]
  4014e6:	fcomip st,st(3)
  4014e8:	lods   eax,DWORD PTR gs:[esi]
  4014ea:	dec    edi
  4014eb:	leave  
  4014ec:	mov    cl,0x18
  4014ee:	xchg   ebp,eax
  4014ef:	inc    edi
  4014f0:	fsubr  DWORD PTR [esi-0x690c2da4]
  4014f6:	ja     0x401553
  4014f8:	add    al,0x86
  4014fa:	retf   0x4126
  4014fd:	xchg   esp,eax
  4014fe:	in     al,dx
  4014ff:	stos   DWORD PTR es:[edi],eax
  401500:	(bad)  
  401501:	shl    DWORD PTR [ebx+0x74236019],cl
  401507:	sbb    al,0x0
  401509:	xor    al,0x24
  40150b:	inc    ebx
  40150c:	adc    BYTE PTR [edx+0x7bd0b93a],cl
  401512:	xchg   BYTE PTR [edi+0x23a27441],cl
  401518:	jnp    0x401542
  40151a:	cmc    
  40151b:	fcmovne st,st(6)
  40151d:	imul   DWORD PTR [edx+0x38ce92dd]
  401523:	fstp   TBYTE PTR [edx+0x3ce03fd]
  401529:	mov    ebx,0x717fe415
  40152e:	or     ebx,DWORD PTR [ebx+0x20]
  401531:	in     al,dx
  401532:	fxch   st(6)
  401534:	push   es
  401535:	inc    dx
  401537:	icebp  
  401538:	aas    
  401539:	sub    al,0x44
  40153b:	sub    eax,DWORD PTR [ebx-0x11]
  40153e:	xchg   edx,eax
  40153f:	test   eax,0x8692bae
  401544:	out    dx,eax
  401545:	xchg   edx,eax
  401546:	jmp    0x22a94917
  40154b:	and    BYTE PTR [esp+ecx*2+0x7f],cl
  40154f:	imul   edi,DWORD PTR [eax],0x3d
  401552:	push   eax
  401553:	(bad)  
  401554:	cs mov edi,0xb58489c9
  40155a:	ror    DWORD PTR [edi-0x36a7d1f3],1
  401560:	ins    BYTE PTR es:[edi],dx
  401561:	push   0x493be1a3
  401566:	mov    edi,0x3b19ae7d
  40156b:	push   esp
  40156c:	add    ah,BYTE PTR [edx-0x29]
  40156f:	and    eax,0x2d4b190e
  401574:	push   es
  401575:	rcl    esp,cl
  401577:	xchg   esi,eax
  401578:	cmp    BYTE PTR [eax-0x2d3e9e9c],ah
  40157e:	adc    dl,dl
  401580:	iret   
  401581:	mov    BYTE PTR [esi+0x52],bh
  401584:	inc    ebx
  401585:	call   0x9f05:0xf93f68d7
  40158c:	pop    ds
  40158d:	or     BYTE PTR [ebp-0x7c],bl
  401590:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401592:	xchg   ecx,eax
  401593:	popa   
  401594:	mov    cl,0x95
  401596:	int    0x35
  401598:	pushf  
  401599:	add    al,0xe0
  40159b:	add    eax,0xfbf7e84c
  4015a0:	mov    ?,WORD PTR [ebp-0x52]
  4015a3:	jmp    0xe5a9:0xf77d5e35
  4015aa:	rol    edx,1
  4015ac:	loope  0x4015b4
  4015ae:	ret    0x650a
  4015b1:	push   ecx
  4015b2:	mov    al,ds:0x7a427cf8
  4015b7:	xchg   ebx,eax
  4015b8:	(bad)  
  4015b9:	outs   dx,BYTE PTR ds:[esi]
  4015ba:	inc    eax
  4015bb:	popf   
  4015bc:	add    al,0xa8
  4015be:	call   0x8b4abb4d
  4015c3:	test   ah,ch
  4015c5:	test   BYTE PTR [edi],dl
  4015c7:	inc    ebp
  4015c8:	sahf   
  4015c9:	jmp    0x40161e
  4015cb:	ja     0x4015b5
  4015cd:	push   ebx
  4015ce:	jno    0x40155e
  4015d0:	cmp    al,0x2e
  4015d2:	mov    WORD PTR [ebx],ss
  4015d4:	adc    eax,0xd6267ab8
  4015d9:	ds scas eax,DWORD PTR es:[edi]
  4015db:	mov    bh,BYTE PTR [ecx-0x1958e88e]
  4015e1:	mov    ds:0x5017dd6d,al
  4015e6:	sbb    BYTE PTR [esi-0x41b76604],ch
  4015ec:	mov    esp,0x46e0ef37
  4015f1:	mov    esi,0xd476ec43
  4015f6:	shl    DWORD PTR [ecx+0x3bde5776],cl
  4015fc:	(bad)  
  4015fd:	loope  0x401583
  4015ff:	mov    esp,0xc709656a
  401604:	(bad)  
  401605:	pop    ecx
  401606:	enter  0x84f6,0x87
  40160a:	shl    DWORD PTR [esi+0xba17077],0xe6
  401611:	out    0x88,eax
  401613:	adc    ecx,DWORD PTR [edx+0x2dcba09e]
  401619:	test   DWORD PTR [edx-0x4c],edi
  40161c:	ins    DWORD PTR es:[edi],dx
  40161d:	cmp    DWORD PTR [esp+eiz*4],edx
  401620:	je     0x4015e4
  401622:	dec    eax
  401623:	jne    0x40165b
  401625:	inc    DWORD PTR [edi-0x2844ba18]
  40162b:	out    dx,eax
  40162c:	not    DWORD PTR [edx+eiz*8]
  40162f:	dec    ecx
  401630:	dec    eax
  401631:	or     BYTE PTR [ebx],ch
  401633:	add    dl,0xea
  401636:	mov    esp,0x117b48e6
  40163b:	cmc    
  40163c:	repnz (bad) 
  40163e:	sbb    cl,ch
  401640:	xchg   edx,eax
  401641:	mov    edi,0x80cd3557
  401646:	pop    ds
  401647:	adc    eax,0xa0b62a0a
  40164c:	jbe    0x4015d5
  40164e:	pop    esi
  40164f:	out    dx,eax
  401650:	or     edx,DWORD PTR [eax-0x632b78b6]
  401656:	xchg   cl,ah
  401658:	fsub   QWORD PTR [esi-0x40]
  40165b:	mul    BYTE PTR [ebx]
  40165d:	ja     0x401664
  40165f:	aaa    
  401660:	(bad)  
  401661:	icebp  
  401662:	aad    0x5e
  401664:	(bad)  
  401665:	retf   
  401666:	test   ch,0x3a
  401669:	popf   
  40166a:	xor    BYTE PTR [ebx+0x53fdc9b6],ch
  401670:	test   eax,0x40fa2c6d
  401675:	mov    cl,0xed
  401677:	pop    ss
  401678:	call   FWORD PTR [ecx+eiz*8+0x3b046b5]
  40167f:	and    ch,BYTE PTR [edx]
  401681:	xor    BYTE PTR [esi+0xb],dl
  401684:	or     BYTE PTR [esi+0x2cd22f5d],dh
  40168a:	leave  
  40168b:	xor    DWORD PTR [eax+0x128bb85],edi
  401691:	imul   edx,DWORD PTR [eax+0x22854ee6],0x35e04b20
  40169b:	icebp  
  40169c:	lea    esi,[edi-0xdd579f]
  4016a2:	adc    ebx,DWORD PTR [esi]
  4016a4:	loope  0x40166f
  4016a6:	test   DWORD PTR [ecx+ecx*8],ecx
  4016a9:	mov    ecx,0x53d08081
  4016ae:	psrld  mm6,QWORD PTR [esp-0x1]
  4016b3:	jns    0x40170a
  4016b5:	jg     0x4016df
  4016b7:	or     ebx,DWORD PTR [edi]
  4016b9:	inc    esi
  4016ba:	jae    0x40164a
  4016bc:	push   ebp
  4016bd:	jl     0x4016a9
  4016bf:	scas   al,BYTE PTR es:[edi]
  4016c0:	pop    ds
  4016c1:	push   es
  4016c2:	(bad)  
  4016c3:	ror    BYTE PTR [ecx+ebx*4-0x5bd2679f],1
  4016ca:	mov    edi,0x18259ee9
  4016cf:	dec    ebp
  4016d0:	mov    dl,0xa5
  4016d2:	inc    eax
  4016d3:	jo     0x40173a
  4016d5:	or     al,bh
  4016d7:	dec    ebp
  4016d8:	or     al,0xba
  4016da:	std    
  4016db:	pop    ebp
  4016dc:	add    al,0xcf
  4016de:	sahf   
  4016df:	lods   eax,DWORD PTR ds:[esi]
  4016e0:	jmp    0x7b4f:0xacb0d6f9
  4016e7:	test   esi,0x863f4346
  4016ed:	sbb    dl,dl
  4016ef:	jae    0x401682
  4016f1:	mov    cs,edx
  4016f3:	sub    al,0xb7
  4016f5:	sahf   
  4016f6:	fadd   DWORD PTR [ebp+0x21102ce9]
  4016fc:	add    al,0x51
  4016fe:	adc    ah,bh
  401700:	fisub  DWORD PTR [esi+eiz*2+0x3e334a03]
  401707:	sub    BYTE PTR [eax-0x3b],cl
  40170a:	(bad)  
  40170b:	repnz and edx,eax
  40170e:	jo     0x40178a
  401710:	data16 (bad) 
  401712:	push   esp
  401713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401714:	jns    0x401761
  401716:	adc    edx,DWORD PTR [edx-0x9]
  401719:	scas   eax,DWORD PTR es:[edi]
  40171a:	cmp    ch,dl
  40171c:	mov    ebp,0x3d609072
  401721:	adc    BYTE PTR [ebx],al
  401723:	fild   WORD PTR ds:0xcc786957
  401729:	mov    dl,0xc3
  40172b:	push   esp
  40172c:	inc    esp
  40172d:	addr16 pop ds
  40172f:	mov    bh,0xaa
  401731:	jmp    0xe710027f
  401736:	ds mov eax,0xef37d25b
  40173c:	xchg   ecx,eax
  40173d:	xlat   BYTE PTR ds:[ebx]
  40173e:	jmp    0xe04e8489
  401743:	and    cl,BYTE PTR [eax+0x29]
  401746:	cdq    
  401747:	pop    ds
  401748:	js     0x40170e
  40174a:	cwde   
  40174b:	pop    ebp
  40174c:	mov    cl,0xdc
  40174e:	push   edi
  40174f:	jnp    0x401710
  401751:	adc    BYTE PTR [edx],bh
  401753:	sbb    edx,edx
  401755:	push   edi
  401756:	push   ds
  401757:	cmp    al,0x89
  401759:	jecxz  0x40178d
  40175b:	pop    eax
  40175c:	rol    BYTE PTR [edx-0x6e],1
  40175f:	sub    BYTE PTR [edi-0x1849570a],cl
  401765:	out    dx,eax
  401766:	mov    dl,0x77
  401768:	fwait
  401769:	xor    cl,BYTE PTR [edi-0x13]
  40176c:	push   ss
  40176d:	out    0xe,al
  40176f:	jns    0x4017aa
  401771:	shr    DWORD PTR [esi],0x7a
  401774:	fiadd  DWORD PTR [eax+ebp*4]
  401777:	jle    0x40179e
  401779:	clc    
  40177a:	loope  0x4017be
  40177c:	sub    dh,BYTE PTR [ebp-0x6d68e1b7]
  401782:	sub    al,0x4f
  401784:	mov    ebp,0x82da57d3
  401789:	mov    WORD PTR [edx+0x4d],es
  40178c:	adc    al,0x72
  40178e:	fld    TBYTE PTR [eax-0x64]
  401791:	enter  0x1847,0xcd
  401795:	dec    ebp
  401796:	fisub  WORD PTR [esi-0x60]
  401799:	pop    ebp
  40179a:	imul   ecx,eax,0xfffffff3
  40179d:	push   ebp
  40179e:	jbe    0x401794
  4017a0:	sbb    edx,DWORD PTR [ebp+edi*2+0x41719b5a]
  4017a7:	pusha  
  4017a8:	mov    WORD PTR [ecx],ds
  4017aa:	push   edi
  4017ab:	jmp    0x23d4:0x57a5f57d
  4017b2:	xchg   DWORD PTR ds:0xfb3901d7,edi
  4017b8:	fmul   QWORD PTR ds:[edi+0x5c]
  4017bc:	mov    ebp,0x4b1840ab
  4017c1:	add    eax,0xf624cd36
  4017c6:	fbstp  TBYTE PTR [edx+0x201cdbdb]
  4017cc:	push   0x64
  4017ce:	pop    edi
  4017cf:	stos   DWORD PTR es:[edi],eax
  4017d0:	jmp    0x6c221be8
  4017d5:	fchs   
  4017d7:	daa    
  4017d8:	xchg   ecx,eax
  4017d9:	aad    0xb2
  4017db:	sbb    eax,0x5d6e0920
  4017e0:	pop    ebp
  4017e1:	jmp    0x4017b7
  4017e3:	pop    eax
  4017e4:	jae    0x401833
  4017e6:	fwait
  4017e7:	inc    edx
  4017e8:	jns    0x40177f
  4017ea:	aaa    
  4017eb:	add    DWORD PTR [edi+esi*4],ebp
  4017ee:	jg     0x401803
  4017f0:	jge    0x4017ae
  4017f2:	or     bl,BYTE PTR [edi+0x5eb990ce]
  4017f8:	daa    
  4017f9:	daa    
  4017fa:	adc    BYTE PTR gs:[ebx],bh
  4017fd:	and    eax,0xf8f89990
  401802:	xchg   edi,eax
  401803:	mov    edi,DWORD PTR ds:0x8a97ff23
  401809:	loopne 0x401799
  40180b:	jmp    0xee20:0xd7f3992c
  401812:	push   ds
  401813:	clc    
  401814:	sbb    DWORD PTR [ebp-0x1c],0xe5183a71
  40181b:	xchg   ebx,eax
  40181c:	out    0x2f,eax
  40181e:	loop   0x40180e
  401820:	sahf   
  401821:	mov    al,0xc9
  401823:	push   es
  401824:	jp     0x401878
  401826:	sub    DWORD PTR [ebx+eax*1-0x31],ebp
  40182a:	mov    al,0x55
  40182c:	es inc esi
  40182e:	out    dx,eax
  40182f:	and    DWORD PTR [ecx],ecx
  401831:	pop    ebp
  401832:	jno    0x40188f
  401834:	test   eax,0xf4798182
  401839:	lock mov bh,0xa6
  40183c:	xor    al,0x76
  40183e:	and    DWORD PTR [ecx-0x587d7788],ecx
  401844:	clc    
  401845:	mov    cl,0x6b
  401847:	jge    0x4018c5
  401849:	rcr    DWORD PTR [edx-0x5d],1
  40184c:	mov    es,WORD PTR [edi-0x7fbd9ab2]
  401852:	jne    0x401833
  401854:	xor    DWORD PTR [ebx+0x39c79b64],ebx
  40185a:	loope  0x401811
  40185c:	retf   
  40185d:	scas   al,BYTE PTR es:[edi]
  40185e:	add    edx,0xffffffd2
  401861:	bound  ebx,QWORD PTR [ebx]
  401863:	lods   eax,DWORD PTR ds:[esi]
  401864:	adc    edx,DWORD PTR [ecx+ecx*2+0x21]
  401868:	push   eax
  401869:	mov    edx,0x86a61708
  40186e:	in     eax,dx
  40186f:	pop    ebx
  401870:	rol    DWORD PTR [ebx-0x5],1
  401873:	fwait
  401874:	aaa    
  401875:	xchg   edi,eax
  401876:	cmp    bl,ch
  401878:	push   0xb14c16b0
  40187d:	outs   dx,DWORD PTR ds:[esi]
  40187e:	jp     0x401865
  401880:	in     eax,0xde
  401882:	cmp    DWORD PTR ds:0x228545c0,edx
  401888:	ja     0x4018b3
  40188a:	xchg   ebx,eax
  40188b:	arpl   WORD PTR [edx+0x60],cx
  40188e:	stc    
  40188f:	sub    al,0xc2
  401891:	mov    edi,0xe07d76ad
  401896:	adc    BYTE PTR [esi],dl
  401898:	in     al,dx
  401899:	mov    bl,0xf2
  40189b:	xchg   DWORD PTR [ecx+0x61683e4d],ecx
  4018a1:	push   ebx
  4018a2:	in     al,dx
  4018a3:	mov    ebp,0x4f2dcad7
  4018a8:	pop    edi
  4018a9:	hlt    
  4018aa:	jge    0x401886
  4018ac:	add    esp,DWORD PTR [edx+0x3903c946]
  4018b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018b3:	icebp  
  4018b4:	nop
  4018b5:	inc    ebp
  4018b6:	dec    ebx
  4018b7:	sbb    eax,0x953e9849
  4018bc:	xchg   edi,eax
  4018bd:	and    dh,BYTE PTR [ebx-0x327b85a0]
  4018c3:	mov    esp,0x642df2d2
  4018c8:	push   cs
  4018c9:	lds    edi,FWORD PTR [edi-0x1bfaf01f]
  4018cf:	mov    dl,0x1e
  4018d1:	aad    0x41
  4018d3:	mov    edx,0x5bc06fbb
  4018d8:	aaa    
  4018d9:	data16 cli 
  4018db:	lock cmp al,BYTE PTR [edx+0x78877ec5]
  4018e2:	mov    WORD PTR [ebp-0x66fd9a94],ds
  4018e8:	jo     0x401905
  4018ea:	cmp    eax,0x5a808212
  4018ef:	stos   BYTE PTR es:[edi],al
  4018f0:	and    edx,DWORD PTR [ecx+eax*4-0x105d1cd]
  4018f7:	jg     0x4018da
  4018f9:	loope  0x4018aa
  4018fb:	xlat   BYTE PTR ds:[ebx]
  4018fc:	push   esi
  4018fd:	or     ah,BYTE PTR [edi]
  4018ff:	stc    
  401900:	mov    esi,DWORD PTR [eax+0x55b259fc]
  401906:	scas   al,BYTE PTR es:[edi]
  401907:	mov    DWORD PTR ds:[edx+0x32519aee],0x34ef0f9a
  401912:	js     0x4018ad
  401914:	cmp    dl,BYTE PTR ds:0xf7a18897
  40191a:	xchg   edx,eax
  40191b:	sub    ebx,edx
  40191d:	mov    ah,bh
  40191f:	int3   
  401920:	mov    ebx,0x58559018
  401925:	dec    ebx
  401926:	xchg   ebp,eax
  401927:	pop    edi
  401928:	dec    esi
  401929:	ds pop edx
  40192b:	fadd   DWORD PTR [esi+edi*1+0xd16901f]
  401932:	lds    edi,FWORD PTR [ebx+ecx*1]
  401935:	pushf  
  401936:	and    BYTE PTR [eax+0x3b114122],cl
  40193c:	xchg   DWORD PTR [esi+0x21138a9a],esp
  401942:	daa    
  401943:	dec    ebp
  401944:	adc    ch,dh
  401946:	and    DWORD PTR [ebp+0x3f16b784],0x84de80f7
  401950:	(bad)
  401953:	jle    0x401986
  401955:	xor    BYTE PTR [edx],dl
  401957:	pusha  
  401958:	push   cs
  401959:	inc    esi
  40195a:	mov    al,ss:0x6ed9e526
  401960:	push   eax
  401961:	les    esp,FWORD PTR [ebx+0x3e]
  401964:	xchg   DWORD PTR [esi-0x6d332db8],ecx
  40196a:	cmp    dh,dl
  40196c:	jne    0x401933
  40196e:	sub    al,0x4c
  401970:	fild   DWORD PTR [edx+0x2f]
  401973:	pop    ecx
  401974:	in     al,dx
  401975:	fbld   TBYTE PTR [edi+0x2e]
  401978:	(bad)  
  401979:	mov    dl,0x78
  40197b:	fmul   QWORD PTR [eax-0xf]
  40197e:	dec    ecx
  40197f:	in     al,0x2c
  401981:	cmp    ebp,DWORD PTR [edi+0x30e0430c]
  401987:	add    ecx,esi
  401989:	push   eax
  40198a:	adc    al,BYTE PTR [esi+eax*2-0x57]
  40198e:	xchg   ebp,eax
  40198f:	cdq    
  401990:	mov    eax,ds:0x5fe00073
  401995:	dec    ebp
  401996:	sub    ebx,DWORD PTR [esp+ebp*8-0x3c]
  40199a:	ja     0x4019af
  40199c:	loop   0x401985
  40199e:	add    esi,DWORD PTR [eax]
  4019a0:	aam    0x3f
  4019a2:	es dec ebp
  4019a4:	cwde   
  4019a5:	pop    edi
  4019a6:	xor    DWORD PTR [ecx-0x7],edi
  4019a9:	sbb    cl,dl
  4019ab:	shl    DWORD PTR [ebx-0x9],1
  4019ae:	xlat   BYTE PTR ds:[ebx]
  4019af:	jl     0x40196b
  4019b1:	shl    DWORD PTR [ebx],0xe7
  4019b4:	cmp    eax,0x239ca2c6
  4019b9:	hlt    
  4019ba:	es test eax,0x625e85d9
  4019c0:	adc    eax,0xa81ec86f
  4019c5:	mov    ds:0x3accd1ed,al
  4019ca:	rcl    DWORD PTR [eax],1
  4019cc:	clc    
  4019cd:	add    eax,0x35c5a330
  4019d2:	inc    edx
  4019d3:	mov    ebp,0xcd2db6e5
  4019d8:	adc    eax,0x93fb2d8d
  4019dd:	inc    ecx
  4019de:	push   edx
  4019df:	data16 add bh,BYTE PTR cs:0xc1a01647
  4019e7:	scas   eax,DWORD PTR es:[edi]
  4019e8:	fwait
  4019e9:	xor    bl,dl
  4019eb:	(bad)  
  4019ec:	out    0xce,al
  4019ee:	or     DWORD PTR [eax+ebx*1],edx
  4019f1:	mov    ebp,0x1bba0a2
  4019f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f7:	cmp    edx,esi
  4019f9:	mov    ebp,0xacaa99e7
  4019fe:	mov    ds:0x5067083c,al
  401a03:	repnz adc DWORD PTR [bx-0x463c],0x5790f4d5
  401a0d:	inc    ebp
  401a0e:	xor    eax,0xf11456b7
  401a13:	dec    ebx
  401a14:	retf   
  401a15:	enter  0x471e,0x53
  401a19:	jecxz  0x401a33
  401a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1c:	cmp    edx,esi
  401a1e:	mov    esi,0x60ecc8de
  401a23:	lods   al,BYTE PTR ds:[esi]
  401a24:	jb     0x4019f5
  401a26:	es fcom st(2)
  401a29:	adc    esi,DWORD PTR [ecx+0x78]
  401a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a2d:	fisttp QWORD PTR [eax]
  401a2f:	xor    DWORD PTR cs:[edx+0x6bc18633],0x7a
  401a37:	dec    ebx
  401a38:	pushf  
  401a39:	mov    al,ds:0xb2b96a92
  401a3e:	xchg   DWORD PTR [eax],eax
  401a40:	inc    ecx
  401a41:	cmp    eax,0x9178fe
  401a46:	jge    0x4019eb
  401a48:	mov    al,ds:0xf8029322
  401a4d:	xor    ch,BYTE PTR [ebx-0x32]
  401a50:	fst    QWORD PTR [ebp-0x210f6c48]
  401a56:	or     edx,DWORD PTR [edi+eax*2+0x63]
  401a5a:	add    ch,BYTE PTR [ebp-0x45]
  401a5d:	pushf  
  401a5e:	and    al,0xd1
  401a60:	xchg   esi,eax
  401a61:	int    0x3d
  401a63:	or     al,0xd
  401a65:	cmp    al,0xa
  401a67:	xor    bh,BYTE PTR [edi]
  401a69:	fadd   DWORD PTR [ecx+ebx*2]
  401a6c:	dec    ecx
  401a6d:	and    edi,DWORD PTR [ebp+0x4ba2d2a3]
  401a73:	mov    edi,0x34ad083
  401a78:	mov    ebx,0xffe9f49a
  401a7d:	in     al,dx
  401a7e:	sub    ebx,DWORD PTR [edi]
  401a80:	mov    dl,0xd9
  401a82:	mov    ebx,0x8e144fdf
  401a87:	inc    edx
  401a88:	push   ecx
  401a89:	ds jne 0x401b07
  401a8c:	repz mov esi,0x177e480e
  401a92:	sbb    eax,0xb7fddfa5
  401a97:	ror    DWORD PTR [edx],cl
  401a99:	shl    cl,cl
  401a9b:	pop    ebp
  401a9c:	sbb    BYTE PTR [edi-0x4afb5398],0x8f
  401aa3:	adc    esp,DWORD PTR [edi+0x586bd8d2]
  401aa9:	int3   
  401aaa:	addr16 aad 0x12
  401aad:	jne    0x401a53
  401aaf:	shl    BYTE PTR [esi+0x59e7dc4e],0x7e
  401ab6:	ins    DWORD PTR es:[edi],dx
  401ab7:	(bad)  
  401ab8:	(bad)  
  401ab9:	mov    ch,0xfc
  401abb:	adc    DWORD PTR [ecx+0x2541ac67],ebx
  401ac1:	xchg   edx,eax
  401ac2:	add    BYTE PTR [eax+0x20],dl
  401ac5:	xor    ebp,ebx
  401ac7:	adc    eax,0x19f6a253
  401acc:	rol    BYTE PTR [eax-0x30],1
  401acf:	mov    ecx,0x4a2b3d52
  401ad4:	jnp    0x401a77
  401ad6:	int3   
  401ad7:	fnstsw WORD PTR ds:0xa6ffdd8c
  401add:	out    dx,al
  401ade:	fxtract 
  401ae0:	cmp    bl,BYTE PTR [ecx+0x1eb19a9e]
  401ae6:	cmp    DWORD PTR [ecx+esi*2-0x7d],ebp
  401aea:	ins    BYTE PTR es:[edi],dx
  401aeb:	mov    cs,WORD PTR [esi-0x21]
  401aee:	mov    ecx,0xc1534651
  401af3:	adc    ebx,DWORD PTR es:[edx]
  401af6:	scas   al,BYTE PTR es:[edi]
  401af7:	cmp    dl,BYTE PTR [ebx-0x1f]
  401afa:	fistp  QWORD PTR [edx-0x1]
  401afd:	pop    esi
  401afe:	and    dh,ch
  401b00:	jl     0x401aa0
  401b02:	adc    ch,BYTE PTR [ebx]
  401b04:	jb     0x401adb
  401b06:	test   DWORD PTR [edx+0x7458bfad],edi
  401b0c:	lds    eax,FWORD PTR [ebp-0x34b21e84]
  401b12:	outs   dx,BYTE PTR ds:[esi]
  401b13:	mov    ebx,0x47c65c41
  401b18:	clc    
  401b19:	sbb    cl,cl
  401b1b:	inc    edi
  401b1c:	xlat   BYTE PTR ds:[ebx]
  401b1d:	and    DWORD PTR [esi],ebx
  401b1f:	xchg   BYTE PTR [ebx-0x10f23420],dl
  401b25:	push   esp
  401b26:	fild   DWORD PTR [eax-0x58]
  401b2a:	inc    edx
  401b2b:	push   ebp
  401b2c:	lods   eax,DWORD PTR ds:[esi]
  401b2d:	test   ebp,edi
  401b2f:	or     ecx,DWORD PTR [edx+ebx*1+0x2f]
  401b33:	cli    
  401b34:	iret   
  401b35:	jns    0x401bab
  401b37:	or     dh,BYTE PTR [eax-0x2dc0ce3a]
  401b3d:	pop    edi
  401b3e:	out    dx,eax
  401b3f:	stos   BYTE PTR es:[edi],al
  401b40:	push   0x44
  401b42:	jg     0x401b95
  401b44:	cmp    ah,BYTE PTR [esp+ebx*8]
  401b47:	test   al,0x76
  401b49:	imul   ecx,edx,0xffffff9a
  401b4c:	fst    QWORD PTR [esi]
  401b4e:	and    DWORD PTR [esi+0x487cfae4],esi
  401b54:	call   0x38ba:0xbabbe76f
  401b5b:	pusha  
  401b5c:	sar    bl,cl
  401b5e:	hlt    
  401b5f:	pop    ebp
  401b60:	push   eax
  401b61:	shr    BYTE PTR [edi],cl
  401b63:	mov    ecx,0x8cf23b1f
  401b68:	sub    ch,BYTE PTR [edx]
  401b6a:	mov    ds:0xa217221a,al
  401b6f:	jo     0x401b20
  401b71:	xchg   ebp,eax
  401b72:	dec    ebx
  401b73:	in     eax,0xfc
  401b75:	sahf   
  401b76:	jbe    0x401b14
  401b78:	and    al,0x33
  401b7a:	dec    esp
  401b7b:	and    eax,esi
  401b7d:	pusha  
  401b7e:	inc    esp
  401b7f:	sub    al,0xe8
  401b81:	pop    ss
  401b82:	call   0x1fd4cab8
  401b87:	das    
  401b88:	mov    edi,0x7ca34968
  401b8d:	data16 or al,0xfe
  401b90:	out    0x3e,al
  401b92:	call   0x7cb0:0x85f7ac88
  401b99:	mov    eax,0xdf3f37a0
  401b9e:	mov    WORD PTR [esi],cs
  401ba0:	pop    ds
  401ba1:	mov    dl,0xba
  401ba3:	outs   dx,DWORD PTR ds:[esi]
  401ba4:	(bad)  
  401ba5:	fidiv  WORD PTR [edi-0x12d9fd93]
  401bab:	leave  
  401bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bad:	mov    dl,0x3a
  401baf:	sub    bl,dh
  401bb1:	xor    DWORD PTR [ebx+ebx*4-0x2d7f49ae],ebp
  401bb8:	mov    ch,0x3b
  401bba:	in     eax,0x4
  401bbc:	mov    WORD PTR [ebx],cs
  401bbe:	inc    edi
  401bbf:	mov    esp,0xc68b268c
  401bc4:	in     al,dx
  401bc5:	(bad)  
  401bc6:	arpl   ax,cx
  401bc8:	cmp    al,0xda
  401bca:	pop    ebx
  401bcb:	aad    0xb0
  401bcd:	inc    ebx
  401bce:	inc    eax
  401bcf:	int3   
  401bd0:	sub    ecx,ecx
  401bd2:	addr16 aas 
  401bd4:	fsubr  QWORD PTR [ebx]
  401bd6:	and    eax,0xa4cad13a
  401bdb:	add    BYTE PTR [edi],al
  401bdd:	addr16 icebp 
  401bdf:	test   eax,0x81d0146e
  401be4:	mov    dh,BYTE PTR [ebp+eiz*8+0x36]
  401be8:	push   ss
  401be9:	clc    
  401bea:	jecxz  0x401c27
  401bec:	rcr    DWORD PTR [edx],cl
  401bee:	ins    DWORD PTR es:[edi],dx
  401bef:	int    0xdb
  401bf1:	call   0xebfc:0xe18fc96e
  401bf8:	in     al,0x90
  401bfa:	aam    0x43
  401bfc:	xchg   dh,bl
  401bfe:	jg     0x401c21
  401c00:	mov    eax,ds:0xad07882f
  401c05:	out    dx,eax
  401c06:	xor    al,0xcb
  401c08:	inc    ebp
  401c09:	ins    DWORD PTR es:[edi],dx
  401c0a:	jmp    0x401c5d
  401c0c:	dec    ecx
  401c0d:	dec    esp
  401c0e:	out    0x1f,al
  401c10:	sub    eax,0x17a32fa4
  401c15:	push   esi
  401c16:	xchg   edx,eax
  401c17:	les    edi,FWORD PTR [esp+0x66]
  401c1b:	inc    esi
  401c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c1d:	fdivr  QWORD PTR ds:0x3dc9e7a9
  401c23:	scas   eax,DWORD PTR es:[edi]
  401c24:	pop    ss
  401c25:	(bad)  
  401c26:	fwait
  401c27:	push   ss
  401c28:	mov    esp,0x73870a16
  401c2d:	(bad)  
  401c2e:	cmc    
  401c2f:	mov    BYTE PTR [edx+0x4878d55c],bl
  401c35:	fdivr  QWORD PTR [ebx-0xc]
  401c38:	fistp  DWORD PTR [ebp+0x1f300188]
  401c3e:	push   esi
  401c3f:	pop    ss
  401c40:	mov    ebx,0x90639e1a
  401c45:	mov    ?,ebp
  401c47:	xor    BYTE PTR [eax-0x79],bh
  401c4a:	or     al,0x5e
  401c4c:	gs and al,0xab
  401c4f:	aad    0x13
  401c51:	(bad)  [ebp-0x15]
  401c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c55:	xor    DWORD PTR [edx-0x79],ebx
  401c58:	out    dx,al
  401c59:	pop    ecx
  401c5a:	xor    al,0x69
  401c5c:	cmp    eax,0x720a46c2
  401c61:	sbb    ebx,DWORD PTR [ebp+0x56]
  401c64:	mov    esp,0xe860613d
  401c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c6a:	inc    esi
  401c6b:	dec    ebp
  401c6c:	mov    edi,0x9c31b2ac
  401c71:	jo     0x401c4c
  401c73:	out    dx,eax
  401c74:	sbb    DWORD PTR [ebp+0x25],edx
  401c77:	add    dl,cl
  401c79:	mov    edx,0x3f5891d0
  401c7e:	ret    0xa2dc
  401c81:	fs cmc 
  401c83:	pop    es
  401c84:	outs   dx,BYTE PTR ds:[esi]
  401c85:	xchg   DWORD PTR [ebx+ecx*4+0x4048cd49],esp
  401c8c:	cmp    eax,0x358d85d9
  401c91:	push   0x26384470
  401c96:	add    DWORD PTR [edx+ebx*8-0x14],ebx
  401c9a:	adc    eax,DWORD PTR [edx]
  401c9c:	fisubr WORD PTR [eax-0x206189fd]
  401ca2:	mov    ah,0xae
  401ca4:	lods   al,BYTE PTR ds:[esi]
  401ca5:	jns    0x401c8a
  401ca7:	clc    
  401ca8:	mov    ebx,0x1b592c77
  401cad:	sub    al,0x19
  401caf:	fisubr WORD PTR [ecx-0x4a02dc79]
  401cb5:	mov    ds:0x6579b23a,al
  401cba:	nop
  401cbb:	leave  
  401cbc:	add    al,0xf1
  401cbe:	out    dx,al
  401cbf:	std    
  401cc0:	mov    ecx,0x2fcb6b81
  401cc5:	je     0x401c7f
  401cc7:	(bad)  
  401cc8:	out    dx,al
  401cc9:	js     0x401c4c
  401ccb:	jne    0x401d00
  401ccd:	xchg   DWORD PTR [edx+0x50fbe229],ebp
  401cd3:	int    0x9
  401cd5:	in     al,dx
  401cd6:	imul   edi,DWORD PTR [ebx+0x53323df6],0x23c3ba2c
  401ce0:	fimul  WORD PTR [edi]
  401ce2:	mov    bh,0xee
  401ce4:	xchg   ebx,eax
  401ce5:	sbb    eax,0x32ff09d4
  401cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ceb:	popa   
  401cec:	arpl   WORD PTR [edi-0x73],si
  401cef:	icebp  
  401cf0:	inc    eax
  401cf1:	ja     0x401d11
  401cf3:	mov    bh,0xe1
  401cf5:	inc    ebx
  401cf6:	mov    al,0xda
  401cf8:	cmp    al,0x46
  401cfa:	std    
  401cfb:	nop
  401cfc:	mov    BYTE PTR [ebx],0x4e
  401cff:	repnz pop esi
  401d01:	or     eax,0xeac12059
  401d06:	ins    BYTE PTR es:[edi],dx
  401d07:	ds pop ds
  401d09:	and    BYTE PTR [ebp+esi*2+0xd],0x30
  401d0e:	cmp    eax,0x60d2b12d
  401d13:	sti    
  401d14:	aam    0xfc
  401d16:	cmp    BYTE PTR [esi+0xe6cbd19],dh
  401d1c:	popa   
  401d1d:	ins    DWORD PTR es:[edi],dx
  401d1e:	xor    al,0xd2
  401d20:	mov    ebp,edx
  401d22:	stos   BYTE PTR es:[edi],al
  401d23:	inc    esp
  401d24:	jns    0x401d99
  401d26:	popf   
  401d27:	jmp    0x401d44
  401d29:	lahf   
  401d2a:	jge    0x401d66
  401d2c:	sub    ecx,esp
  401d2e:	retf   
  401d2f:	jge    0x401d1f
  401d31:	js     0x401d35
  401d33:	cdq    
  401d34:	popa   
  401d35:	or     edi,esp
  401d37:	int    0x82
  401d39:	mov    ebp,edx
  401d3b:	xchg   ebx,eax
  401d3c:	rcr    DWORD PTR [edx],1
  401d3e:	fmul   QWORD PTR [ebp+0x63]
  401d41:	mov    ebp,0x911a9881
  401d46:	jno    0x401ce0
  401d48:	(bad)  
  401d4a:	add    DWORD PTR fs:[esi-0x609ab7c1],0xafc86bd7
  401d55:	sbb    DWORD PTR ds:0xdad57a9b,ebp
  401d5c:	out    0x45,eax
  401d5e:	int    0x56
  401d60:	and    al,0xa9
  401d62:	popa   
  401d63:	jl     0x401d4e
  401d65:	jo     0x401d77
  401d67:	xchg   ebx,eax
  401d68:	or     DWORD PTR [edi-0x42],ebx
  401d6b:	pop    eax
  401d6c:	jne    0x401cf2
  401d6e:	fnsave [ebp+ebx*8-0x2f]
  401d72:	lahf   
  401d73:	fwait
  401d74:	push   cs
  401d75:	test   al,0xaa
  401d77:	std    
  401d78:	push   edx
  401d79:	mov    edx,0xdf110d9f
  401d7e:	and    al,0xf9
  401d80:	scas   al,BYTE PTR es:[edi]
  401d81:	xor    al,0xa8
  401d83:	lea    ebp,[edx-0x7e]
  401d86:	popa   
  401d87:	shr    DWORD PTR [esi],0x75
  401d8a:	cmp    ebp,ebp
  401d8c:	fist   WORD PTR [ebx+0x1a271118]
  401d92:	xchg   ebx,eax
  401d93:	arpl   WORD PTR [edi],ax
  401d95:	fwait
  401d96:	fs pop ss
  401d98:	jmp    0x401e04
  401d9a:	add    dl,BYTE PTR [edi]
  401d9c:	gs (bad) 
  401d9e:	mov    esi,0x563a9719
  401da3:	enter  0x797,0xbc
  401da7:	adc    al,0x6a
  401da9:	ret    0xf881
  401dac:	inc    edx
  401dad:	out    0xb4,al
  401daf:	shr    ebx,0xdb
  401db2:	jb     0x401d84
  401db4:	fs std 
  401db6:	ja     0x401ddb
  401db8:	mov    al,ds:0x8ae2853a
  401dbd:	jo     0x401db3
  401dbf:	cmp    BYTE PTR ds:0x57a8a4fc,0x58
  401dc6:	mov    ?,WORD PTR [ebx+edx*2]
  401dc9:	adc    dh,bl
  401dcb:	and    BYTE PTR [esi-0x385484d2],ch
  401dd1:	stos   DWORD PTR es:[edi],eax
  401dd2:	add    dh,BYTE PTR [edx+0x45]
  401dd5:	in     al,dx
  401dd6:	rcr    DWORD PTR [ebx+esi*8-0x4dd51889],cl
  401ddd:	(bad)  
  401ddf:	push   ebx
  401de0:	mov    esp,0x513b66a1
  401de5:	out    0x53,al
  401de7:	test   DWORD PTR [ebp+0x13e95d54],0x87c7dbbc
  401df1:	mov    al,0xaf
  401df4:	xlat   BYTE PTR ds:[ebx]
  401df5:	dec    eax
  401df6:	int    0x16
  401df8:	(bad)  [ebp+esi*1-0x5147ddc8]
  401dff:	out    0x86,al
  401e01:	popf   
  401e02:	lahf   
  401e03:	xchg   esi,eax
  401e04:	aaa    
  401e05:	dec    esp
  401e06:	retf   0x6378
  401e09:	mov    ah,0x81
  401e0b:	mov    esp,0xa0294cf3
  401e10:	or     cl,BYTE PTR [ebx-0x570399cb]
  401e16:	data16 lods al,BYTE PTR ds:[esi]
  401e18:	or     eax,0x67b0bd68
  401e1d:	enter  0xc37f,0x48
  401e21:	aad    0xe8
  401e23:	int    0x4d
  401e25:	and    al,0x85
  401e27:	lds    ecx,FWORD PTR [eax]
  401e29:	inc    ebp
  401e2a:	cs jmp 0x401e16
  401e2d:	out    dx,eax
  401e2e:	outs   dx,BYTE PTR ds:[esi]
  401e2f:	cmp    edx,DWORD PTR [ebp+0x3f698820]
  401e35:	xchg   DWORD PTR [esi-0x63],ebx
  401e38:	js     0x401e6e
  401e3a:	xchg   esi,eax
  401e3b:	push   esi
  401e3c:	sbb    al,0xe2
  401e3e:	loopne 0x401e26
  401e40:	pop    edi
  401e41:	retf   
  401e42:	stos   BYTE PTR es:[edi],al
  401e43:	nop
  401e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e45:	stos   BYTE PTR es:[edi],al
  401e46:	sub    dh,BYTE PTR [esp+eiz*2]
  401e49:	add    bl,ch
  401e4b:	inc    esi
  401e4c:	or     BYTE PTR [edi+0x61],ch
  401e4f:	mov    dl,dh
  401e51:	test   al,0x8d
  401e53:	call   0x8071cb74
  401e58:	push   es
  401e59:	dec    ebx
  401e5a:	jb     0x401e2b
  401e5c:	xchg   esp,eax
  401e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e5e:	sub    bh,0x2a
  401e61:	(bad)  
  401e62:	sub    esi,ebp
  401e64:	sar    DWORD PTR [eax-0x5584eecb],0xf0
  401e6b:	aad    0xa6
  401e6d:	in     al,0xf2
  401e6f:	pop    esi
  401e70:	or     ecx,DWORD PTR [ebp+0x46]
  401e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e74:	mov    ah,0x37
  401e76:	in     eax,0x73
  401e78:	cmc    
  401e79:	add    al,0xe7
  401e7b:	jne    0x401ebf
  401e7d:	icebp  
  401e7e:	stos   BYTE PTR es:[edi],al
  401e7f:	dec    edx
  401e80:	fdivr  st(4),st
  401e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e83:	inc    ebp
  401e84:	dec    ecx
  401e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e86:	jae    0x401e32
  401e88:	test   eax,0x1b5ab5f1
  401e8d:	lock pop eax
  401e8f:	iret   
  401e90:	mov    esi,0xd519c043
  401e95:	sbb    DWORD PTR ss:[esi-0x35],ebp
  401e99:	aas    
  401e9a:	xchg   edi,eax
  401e9b:	out    dx,eax
  401e9c:	xchg   DWORD PTR [eax],ebp
  401e9e:	or     eax,0x811deaa7
  401ea3:	rcl    BYTE PTR ds:0xf0bf4d16,cl
  401ea9:	pushf  
  401eaa:	inc    edi
  401eab:	or     BYTE PTR [ecx],bh
  401ead:	sahf   
  401eae:	mov    bh,0xa3
  401eb0:	or     al,BYTE PTR [edx*2-0x1c9dbc28]
  401eb7:	pop    edi
  401eb8:	mov    al,es:0x4e893aa6
  401ebe:	repz pop esp
  401ec0:	jmp    0x401e5e
  401ec2:	pop    esp
  401ec3:	mov    eax,ds:0xc0231747
  401ec8:	sbb    al,0xeb
  401eca:	(bad)  
  401ecb:	gs int 0xfe
  401ece:	push   ebp
  401ecf:	ret    
  401ed0:	mov    ebx,0x4c684f9
  401ed5:	jns    0x401f4c
  401ed7:	(bad)
  401edb:	aaa    
  401edc:	pop    ebp
  401edd:	dec    eax
  401ede:	sub    bl,BYTE PTR [esi]
  401ee0:	sbb    eax,0xadca7bab
  401ee5:	lock mov bl,0x3e
  401ee8:	mov    al,0xea
  401eea:	hlt    
  401eeb:	push   esp
  401eec:	(bad)  
  401eed:	pop    ds
  401eee:	sub    cl,BYTE PTR [ebp-0x5b]
  401ef1:	inc    ecx
  401ef3:	dec    ebx
  401ef4:	jge    0x401edb
  401ef6:	stc    
  401ef7:	jae    0x401ea5
  401ef9:	pop    ebx
  401efa:	fcos   
  401efc:	ds mov cl,cl
  401eff:	mov    ebp,0xdb9c49e7
  401f04:	cld    
  401f05:	dec    edi
  401f06:	test   al,0xe3
  401f08:	and    eax,0x3834ec6a
  401f0d:	sti    
  401f0e:	rcl    DWORD PTR [edx-0x69],0x99
  401f12:	push   esi
  401f13:	pop    ds
  401f14:	mov    bh,0x8b
  401f16:	jmp    0x759:0x210f5ab6
  401f1d:	sbb    al,0x15
  401f1f:	sar    DWORD PTR [ecx+0x654315b0],1
  401f25:	test   BYTE PTR [eax+ecx*8-0x1a],cl
  401f29:	aam    0xb1
  401f2b:	div    BYTE PTR [ebx]
  401f2d:	mov    ds:0xf48c6bea,al
  401f32:	shl    DWORD PTR fs:[edx-0x495b23d1],cl
  401f39:	leave  
  401f3a:	daa    
  401f3b:	and    ah,BYTE PTR [eax+0x7643234e]
  401f41:	push   cs
  401f42:	jmp    0xee16a62
  401f47:	mov    ebx,DWORD PTR [eax-0x7e]
  401f4a:	adc    al,0x2f
  401f4c:	out    dx,eax
  401f4d:	and    bh,BYTE PTR [edi-0x18]
  401f50:	inc    ebp
  401f51:	mov    ah,0x14
  401f53:	test   DWORD PTR [esi],edi
  401f55:	sub    BYTE PTR [ecx+0x702c5ab4],bh
  401f5b:	jge    0x401f97
  401f5d:	push   esi
  401f5e:	adc    al,ah
  401f60:	addr16 pop ds
  401f62:	nop
  401f63:	imul   ebp,DWORD PTR [edx+0x37],0x4e03849b
  401f6a:	jns    0x401f2d
  401f6c:	xchg   ebp,eax
  401f6d:	sahf   
  401f6e:	(bad)  
  401f6f:	rol    al,cl
  401f71:	in     eax,dx
  401f72:	mov    ecx,0x236a984f
  401f77:	sub    DWORD PTR [ebp-0xe4fa7db],esi
  401f7d:	add    al,0xc0
  401f7f:	mov    edi,0xfa8a8ac4
  401f84:	cmp    ebx,ecx
  401f86:	hlt    
  401f87:	das    
  401f88:	in     eax,0x78
  401f8a:	sbb    eax,ebp
  401f8c:	in     al,dx
  401f8d:	int3   
  401f8e:	cwde   
  401f8f:	repnz push ds
  401f91:	push   ecx
  401f92:	mov    esp,0xe058b07a
  401f97:	test   BYTE PTR [ebp+0x36],ah
  401f9a:	pop    ds
  401f9b:	inc    esp
  401f9c:	and    esi,esp
  401f9e:	pop    ebp
  401f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa0:	mul    BYTE PTR [edi-0x6f8e0e0]
  401fa6:	jle    0x401f9b
  401fa8:	dec    esp
  401fa9:	mov    BYTE PTR [esi],bl
  401fab:	cwde   
  401fac:	sub    al,0x39
  401fae:	pop    ds
  401faf:	outs   dx,DWORD PTR ds:[esi]
  401fb0:	mov    ds:0x6dd58f2a,eax
  401fb5:	jnp    0x40200a
  401fb7:	jns    0x401f47
  401fb9:	aaa    
  401fba:	iret   
  401fbb:	xor    bh,ch
  401fbd:	cmp    eax,0xa0e5e2c2
  401fc2:	lds    ebx,FWORD PTR [edi+0xa]
  401fc5:	pop    edx
  401fc6:	or     BYTE PTR [ebx+0x6d2fa518],ah
  401fcc:	inc    edi
  401fcd:	pop    ebp
  401fce:	in     eax,dx
  401fcf:	and    al,0xee
  401fd1:	xor    DWORD PTR [ebp-0x55],edx
  401fd4:	lods   al,BYTE PTR ds:[esi]
  401fd5:	sbb    BYTE PTR ds:0x15263d00,dh
  401fdb:	mov    cl,0x4d
  401fdd:	add    ebp,DWORD PTR [edi]
  401fdf:	aad    0x33
  401fe1:	ins    DWORD PTR es:[edi],dx
  401fe2:	inc    esp
  401fe3:	cli    
  401fe4:	dec    edi
  401fe5:	das    
  401fe6:	cmp    eax,0xfd48969b
  401feb:	inc    esi
  401fec:	inc    ecx
  401fed:	frstpm(287 only) 
  401fef:	xor    eax,0xffffffcd
  401ff2:	push   esp
  401ff3:	mov    ecx,0xa0e8f16a
  401ff8:	outs   dx,BYTE PTR ds:[esi]
  401ff9:	inc    ebx
  401ffa:	xchg   esi,eax
  401ffb:	xchg   ecx,eax
  401ffc:	xlat   BYTE PTR ds:[ebx]
  401ffd:	mov    edx,0x8e3fed4
  402002:	clc    
  402003:	inc    ebx
  402004:	add    BYTE PTR [ebx],bh
  402006:	push   edi
  402007:	adc    eax,0xd64c7cc1
  40200c:	jo     0x401fbe
  40200e:	push   es
  40200f:	lds    eax,FWORD PTR [ebx+0x206b9b14]
  402015:	out    dx,al
  402016:	mov    bl,0x9e
  402018:	mov    al,0x98
  40201a:	loope  0x401fb1
  40201c:	push   cs
  40201d:	out    dx,al
  40201e:	div    DWORD PTR [edi]
  402020:	mov    ds:0xfeb86efc,eax
  402025:	adc    al,0xd8
  402027:	jae    0x401fd3
  402029:	jmp    0xb3fb2483
  40202e:	lock push edi
  402030:	pushf  
  402031:	shl    BYTE PTR [edi-0x5e0d0d63],0xfd
  402038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402039:	jcxz   0x401fc7
  40203c:	and    al,0x63
  40203e:	in     eax,0x97
  402040:	ins    DWORD PTR es:[edi],dx
  402041:	stos   BYTE PTR es:[edi],al
  402042:	outs   dx,BYTE PTR ds:[esi]
  402043:	hlt    
  402044:	repz jl 0x40204a
  402047:	test   BYTE PTR [ebp+0x3c2e776f],0xe7
  40204e:	fcom   DWORD PTR [ebx]
  402050:	and    DWORD PTR [edx],0x6766af5f
  402056:	or     dl,dh
  402058:	inc    eax
  402059:	mov    dl,0x54
  40205b:	(bad)  
  40205c:	(bad)  
  40205d:	sbb    DWORD PTR [edi-0x35f08240],edi
  402063:	push   edx
  402064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402065:	and    eax,0xf8ae957f
  40206a:	mov    es,ebp
  40206c:	test   eax,0x2b45055c
  402071:	out    0x72,eax
  402073:	sbb    edx,ecx
  402075:	or     eax,0x56f85280
  40207a:	xchg   ecx,eax
  40207b:	std    
  40207c:	mov    DWORD PTR [ecx+0x23],edi
  40207f:	mov    BYTE PTR [edi-0x46],dh
  402082:	fwait
  402083:	rol    ecx,1
  402085:	aas    
  402086:	mov    WORD PTR [edx+0x77],es
  402089:	xor    BYTE PTR [edx+0x74162d6f],bh
  40208f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402090:	stos   DWORD PTR es:[edi],eax
  402091:	dec    ecx
  402092:	out    dx,eax
  402093:	and    bh,BYTE PTR [esi-0x60]
  402096:	xchg   esp,eax
  402097:	push   edx
  402098:	inc    edx
  402099:	or     ecx,DWORD PTR [eax+0x70d48d00]
  40209f:	adc    eax,0xb8ee3999
  4020a4:	xchg   esi,eax
  4020a5:	jo     0x4020f5
  4020a7:	add    esi,DWORD PTR [ebp+0x3ce13ba6]
  4020ad:	fbld   TBYTE PTR [eax]
  4020af:	sbb    edi,DWORD PTR [ebp+0x40]
  4020b2:	jp     0x4020b8
  4020b4:	pop    ebp
  4020b5:	stos   DWORD PTR es:[edi],eax
  4020b6:	test   al,0x30
  4020b8:	or     esi,DWORD PTR [eax-0x2bb33b71]
  4020be:	sub    al,0xb
  4020c0:	sti    
  4020c1:	xchg   ebx,eax
  4020c2:	enter  0x7f9c,0x26
  4020c6:	mov    cl,0xdc
  4020c8:	inc    esi
  4020c9:	test   BYTE PTR [edx-0x149d10],0xfc
  4020d0:	out    0x53,eax
  4020d2:	xrelease xchg DWORD PTR [ebx],edx
  4020d5:	add    al,BYTE PTR [edx+eiz*2+0x3a]
  4020d9:	jae    0x4020c0
  4020db:	add    dh,dl
  4020dd:	add    DWORD PTR [esi+0x7d40c6ce],ecx
  4020e3:	aam    0x2e
  4020e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020e6:	dec    ebp
  4020e7:	mov    eax,ds:0x16f2c886
  4020ec:	aaa    
  4020ed:	adc    dh,BYTE PTR [edx+0x94fb498]
  4020f3:	and    dl,BYTE PTR [edx-0x3c]
  4020f6:	fist   WORD PTR [eax+0x2f]
  4020f9:	test   al,0x58
  4020fb:	jge    0x4020bd
  4020fd:	es adc eax,0x228f00f
  402103:	(bad)  
  402104:	sub    DWORD PTR [esi-0x52ad1d69],ecx
  40210a:	jecxz  0x4020b1
  40210c:	rcl    BYTE PTR [edi+0x57],1
  40210f:	call   0xd4b0c5a5
  402114:	mov    ecx,DWORD PTR [esi-0x2f]
  402117:	ret    0xa07c
  40211a:	sub    cl,ah
  40211c:	xor    eax,0xd6602500
  402121:	mov    ebp,0x5fe8b07d
  402126:	cli    
  402127:	shr    BYTE PTR [eax+0x77],cl
  40212a:	js     0x4020f9
  40212c:	inc    ecx
  40212d:	out    0xca,eax
  40212f:	cmc    
  402130:	imul   DWORD PTR [edi-0x1850e392]
  402136:	pop    esi
  402137:	sub    dh,cl
  402139:	popf   
  40213a:	scas   eax,DWORD PTR es:[edi]
  40213b:	scas   eax,DWORD PTR es:[edi]
  40213c:	shl    eax,0x88
  40213f:	test   BYTE PTR es:[eax],cl
  402142:	add    BYTE PTR [eax],dh
  402144:	mov    edi,0xd651cd14
  402149:	push   eax
  40214a:	inc    esp
  40214b:	out    0x6c,eax
  40214d:	mov    WORD PTR [edi],ds
  40214f:	or     ah,BYTE PTR [esi+0x287c8629]
  402155:	sbb    esi,edx
  402157:	ins    DWORD PTR es:[edi],dx
  402158:	mov    al,0xf
  40215a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40215b:	cmp    edi,DWORD PTR [ecx-0x45e79696]
  402161:	adc    DWORD PTR [eax+0x35],eax
  402164:	jno    0x40219e
  402166:	in     al,0x2c
  402168:	jmp    0xd9da:0x71319754
  40216f:	pusha  
  402170:	in     al,0xed
  402172:	inc    DWORD PTR [esi-0x4b]
  402175:	pop    ecx
  402176:	lahf   
  402177:	lea    edi,[ebx+0x61106e63]
  40217d:	gs call 0x7686:0xb53a0332
  402185:	icebp  
  402186:	stc    
  402187:	sub    BYTE PTR [edi+0x64ce2b2e],bl
  40218d:	outs   dx,BYTE PTR ds:[esi]
  40218e:	aam    0xbe
  402190:	pop    ebp
  402191:	fld    DWORD PTR [esi+0x61]
  402194:	push   edx
  402195:	(bad)  
  402196:	out    dx,al
  402197:	dec    esi
  402198:	(bad)
  40219b:	sbb    eax,0xc926e310
  4021a0:	jne    0x4021e5
  4021a2:	dec    esi
  4021a3:	jp     0x5a936994
  4021a9:	xchg   ebp,eax
  4021aa:	cs dec esi
  4021ac:	out    dx,al
  4021ad:	cwde   
  4021ae:	xchg   BYTE PTR [edi+0x8],ah
  4021b1:	pop    esi
  4021b2:	pop    ds
  4021b3:	cmpxchg dl,bh
  4021b6:	add    BYTE PTR [esi+0x30],al
  4021b9:	imul   esi,DWORD PTR ds:0xa7767bf7,0x7c
  4021c0:	push   esp
  4021c1:	cli    
  4021c2:	aad    0x15
  4021c4:	dec    esp
  4021c5:	or     eax,0x47b8a4a8
  4021ca:	sahf   
  4021cb:	xchg   ecx,eax
  4021cc:	jno    0x4021e1
  4021ce:	jp     0x4021ff
  4021d0:	push   edx
  4021d1:	dec    esi
  4021d2:	test   al,0x9a
  4021d4:	dec    esi
  4021d5:	mov    dh,dh
  4021d7:	stos   DWORD PTR es:[edi],eax
  4021d8:	mov    al,ds:0xc2dc445
  4021dd:	sbb    eax,0xc884794f
  4021e2:	mov    eax,ds:0x1505db17
  4021e7:	or     ecx,ebp
  4021e9:	stc    
  4021ea:	jnp    0x4021fd
  4021ec:	gs jno 0x4021d0
  4021ef:	push   ds
  4021f0:	jns    0x402268
  4021f2:	and    dl,BYTE PTR [ebx+0x5c]
  4021f5:	jle    0x402267
  4021f7:	pop    esp
  4021f8:	ja     0x40220d
  4021fa:	inc    esp
  4021fb:	aam    0x56
  4021fd:	push   0xfffffffe
  4021ff:	sbb    bl,ah
  402201:	inc    edx
  402202:	aas    
  402203:	aaa    
  402204:	retf   0x4c11
  402207:	ins    DWORD PTR es:[edi],dx
  402208:	out    dx,eax
  402209:	mov    dl,0x2b
  40220b:	xchg   edi,eax
  40220c:	pop    eax
  40220d:	and    al,0x3
  40220f:	jo     0x4021c7
  402211:	rol    BYTE PTR [esi],1
  402213:	int3   
  402214:	pusha  
  402215:	add    ecx,DWORD PTR [edi-0xdf843f5]
  40221b:	stos   BYTE PTR es:[edi],al
  40221c:	push   ss
  40221d:	rcl    DWORD PTR [ebp-0x67],0x3b
  402221:	sbb    esi,esi
  402223:	into   
  402224:	cs mov esi,cs
  402227:	jl     0x402256
  402229:	add    al,0x65
  40222b:	mov    ds:0xfb847dac,al
  402230:	jb     0x4021ed
  402232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402233:	jae    0x4022a0
  402235:	xchg   edx,ecx
  402237:	fbstp  TBYTE PTR [esi+0x11]
  40223a:	into   
  40223b:	addr16 inc edx
  40223d:	shr    DWORD PTR [eax],0x47
  402240:	add    eax,0xdd25e3ab
  402245:	pop    esp
  402246:	sbb    DWORD PTR ds:0x23befad2,edx
  40224c:	jnp    0x40223c
  40224e:	mov    ds:0x7ee756db,eax
  402253:	sbb    al,0x97
  402255:	or     BYTE PTR [ebx+0x7d7c707e],0x98
  40225c:	inc    ecx
  40225d:	jp     0x40220c
  40225f:	adc    ebp,DWORD PTR [edx]
  402261:	xchg   esp,eax
  402262:	sub    BYTE PTR [edi-0x16],cl
  402265:	fcomp  QWORD PTR [ebp-0x64e9265e]
  40226b:	sti    
  40226c:	out    dx,eax
  40226d:	pop    esi
  40226e:	inc    ecx
  40226f:	test   DWORD PTR [esi+0x1f],edi
  402272:	pop    edx
  402273:	push   esi
  402274:	cmp    dl,ah
  402276:	cli    
  402277:	inc    ebp
  402278:	in     al,0xfb
  40227a:	ret    0x71e5
  40227d:	push   es
  40227e:	jbe    0x40229c
  402280:	sahf   
  402281:	sub    DWORD PTR [edx+0x44],ecx
  402284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402285:	adc    al,0xdd
  402287:	or     al,0x67
  402289:	mov    WORD PTR [esi+0x2ead5300],fs
  40228f:	test   al,0x39
  402291:	add    BYTE PTR [esp+ebp*1-0x5f],bl
  402295:	push   es
  402296:	imul   ecx,DWORD PTR [ebp-0x65],0xffffffdf
  40229a:	inc    ecx
  40229b:	mov    al,0x8e
  40229d:	popa   
  40229e:	inc    edi
  40229f:	sub    BYTE PTR [edx],al
  4022a1:	fwait
  4022a2:	mov    esp,0x2ec6fbdf
  4022a7:	fidiv  DWORD PTR [edx]
  4022a9:	inc    esi
  4022aa:	les    ebp,FWORD PTR [edx+0x414b209d]
  4022b0:	cmp    al,0x7b
  4022b2:	adc    dl,BYTE PTR [esi]
  4022b4:	retf   0xe210
  4022b7:	mov    al,0xe
  4022b9:	sahf   
  4022ba:	mov    bh,0xa8
  4022bc:	mov    ah,0xd7
  4022be:	retf   0xf572
  4022c1:	sbb    DWORD PTR [edi-0x40],ecx
  4022c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022c5:	add    eax,0x88e86c1b
  4022ca:	dec    edx
  4022cb:	push   edi
  4022cc:	clc    
  4022cd:	iret   
  4022ce:	int3   
  4022cf:	jne    0x40227d
  4022d1:	mov    ds:0x737b88b2,al
  4022d6:	sub    DWORD PTR [esi],ebp
  4022d8:	dec    edi
  4022d9:	popf   
  4022da:	imul   edi,DWORD PTR [ecx],0xffffffdf
  4022dd:	out    0x54,al
  4022df:	test   al,0x29
  4022e1:	call   0x4027067c
  4022e6:	(bad)  
  4022e7:	or     eax,0xc9b5a8d5
  4022ec:	stc    
  4022ed:	push   ecx
  4022ee:	imul   DWORD PTR [esi+0x3a]
  4022f1:	fsqrt  
  4022f3:	fs jg  0x40230b
  4022f6:	mov    dl,0x84
  4022f8:	sbb    eax,0x33f97fc8
  4022fd:	mov    al,ds:0xb31749f7
  402302:	jmp    FWORD PTR [edi-0x158159e1]
  402308:	mov    eax,0x517bc0db
  40230d:	repz push 0x886dc122
  402313:	mov    bh,0xc7
  402315:	sti    
  402316:	sahf   
  402317:	test   eax,0xddbd4fe8
  40231c:	out    dx,al
  40231d:	adc    eax,0x2d4488d
  402322:	out    0x8c,al
  402324:	mov    ch,bl
  402326:	and    al,0x2b
  402328:	mov    al,ds:0xbbb98c56
  40232d:	cdq    
  40232e:	mov    dl,0x6f
  402330:	xor    ebx,DWORD PTR [edx-0x692420eb]
  402336:	pop    ecx
  402337:	(bad)  
  402338:	enter  0x6d38,0xaf
  40233c:	add    DWORD PTR [ecx],esp
  40233e:	outs   dx,BYTE PTR ds:[esi]
  40233f:	add    al,0x11
  402341:	or     ebp,ebx
  402343:	push   esp
  402344:	inc    ecx
  402345:	(bad)  
  402346:	daa    
  402347:	repz jp 0x4022f7
  40234a:	cld    
  40234b:	add    DWORD PTR [edx],edx
  40234d:	push   ss
  40234e:	sbb    ah,bl
  402350:	les    edx,FWORD PTR [eax]
  402352:	cwde   
  402353:	xchg   BYTE PTR [ebx-0x78],dl
  402356:	das    
  402357:	sbb    eax,0xa2af274
  40235c:	neg    DWORD PTR [edx]
  40235e:	out    0xa2,al
  402360:	mov    ecx,eax
  402362:	jb     0x40236f
  402364:	sub    al,0x85
  402366:	cmp    ch,bh
  402368:	pushw  ds
  40236a:	sbb    BYTE PTR [esi-0x746c173c],bl
  402370:	(bad)  
  402372:	push   ebp
  402373:	or     dl,bl
  402375:	jnp    0x40231e
  402377:	mov    esp,esi
  402379:	repz out dx,al
  40237b:	mov    bl,0x84
  40237d:	and    cl,bh
  40237f:	dec    eax
  402380:	xor    BYTE PTR [esi-0x4b],ah
  402383:	clc    
  402384:	or     DWORD PTR [ebp+0x4b646bc3],ebx
  40238a:	ret    0xb091
  40238d:	icebp  
  40238e:	lods   eax,DWORD PTR ds:[esi]
  40238f:	out    0x54,al
  402391:	add    ebp,DWORD PTR [eax+0x7f]
  402394:	adc    DWORD PTR [ebx],ebp
  402396:	ja     0x402351
  402398:	nop
  402399:	xor    DWORD PTR [ebx],ebx
  40239b:	outs   dx,DWORD PTR ds:[esi]
  40239c:	aas    
  40239d:	rcl    DWORD PTR [esi+0x32],0x18
  4023a1:	lock fidivr WORD PTR [eax]
  4023a4:	(bad)  
  4023a5:	sahf   
  4023a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a7:	out    dx,eax
  4023a8:	leave  
  4023a9:	(bad)  
  4023aa:	dec    esp
  4023ab:	xchg   DWORD PTR [ecx],ecx
  4023ad:	das    
  4023ae:	popf   
  4023af:	pop    esp
  4023b0:	mov    WORD PTR [ebp-0x47],?
  4023b3:	loope  0x4023f9
  4023b5:	cld    
  4023b6:	into   
  4023b7:	mov    ch,0x71
  4023b9:	jns    0x4023ad
  4023bb:	test   eax,0x156d69da
  4023c0:	push   0xffffffd5
  4023c2:	add    al,BYTE PTR [edi]
  4023c4:	or     ah,BYTE PTR [edx]
  4023c6:	mov    bh,0xdc
  4023c8:	push   esi
  4023c9:	stos   BYTE PTR es:[edi],al
  4023ca:	or     BYTE PTR [ebx-0x1df51582],ch
  4023d0:	adc    DWORD PTR [ebp+0x13],eax
  4023d3:	push   esi
  4023d4:	jo     0x402389
  4023d6:	(bad)  
  4023d7:	cld    
  4023d8:	jg     0x40236c
  4023da:	imul   dh
  4023dc:	xchg   ebx,eax
  4023dd:	add    DWORD PTR [ebx+0x50],eax
  4023e0:	hlt    
  4023e1:	cwde   
  4023e2:	dec    esp
  4023e3:	xor    bl,BYTE PTR [edi-0x44]
  4023e6:	xchg   edx,eax
  4023e7:	add    ebp,DWORD PTR [ebx+0x43]
  4023ea:	imul   esp,DWORD PTR [edi],0x46
  4023ed:	jp     0x4023ee
  4023ef:	in     eax,dx
  4023f0:	popa   
  4023f1:	cdq    
  4023f2:	xchg   edi,eax
  4023f3:	jmp    0x402405
  4023f5:	fwait
  4023f6:	xchg   ecx,eax
  4023f7:	hlt    
  4023f8:	add    ah,al
  4023fa:	pop    esp
  4023fb:	in     al,dx
  4023fc:	ss (bad) 
  4023fe:	in     eax,0xa2
  402400:	mov    ch,0xdf
  402402:	outs   dx,BYTE PTR ds:[esi]
  402403:	jae    0x4023ce
  402405:	mov    al,ds:0x3a034920
  40240a:	imul   edi,DWORD PTR [eax+edx*4],0xffffffc9
  40240e:	xlat   BYTE PTR ds:[ebx]
  40240f:	inc    edx
  402410:	sub    dl,BYTE PTR [edx]
  402412:	jecxz  0x402412
  402414:	mov    al,0xb5
  402416:	bound  esp,QWORD PTR [ebp+0x7d20086a]
  40241c:	out    dx,al
  40241d:	jg     0x4023bb
  40241f:	cmp    ebp,DWORD PTR [ebp-0xa]
  402422:	std    
  402423:	xchg   edx,eax
  402424:	jg     0x4023cc
  402426:	mov    ds:0x9244ff0f,eax
  40242b:	mov    ebx,0x3a0015d2
  402430:	fdiv   DWORD PTR [ecx+0x4d]
  402433:	xchg   ecx,eax
  402434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402435:	(bad)  
  402436:	xor    eax,ecx
  402438:	enter  0xe8d1,0x43
  40243c:	popa   
  40243d:	popa   
  40243e:	jecxz  0x402452
  402440:	xchg   esi,eax
  402441:	pop    esp
  402442:	aaa    
  402443:	cmp    bl,ch
  402445:	rcr    BYTE PTR [edi+0x7eec3cd5],cl
  40244b:	fstp   TBYTE PTR [edx-0x14]
  40244e:	std    
  40244f:	cmp    al,0x2b
  402451:	imul   esi,DWORD PTR [esi+esi*8],0x2ff38688
  402458:	push   eax
  402459:	rcl    BYTE PTR [ecx+0x7a44daa3],0xfd
  402460:	in     al,0xf4
  402462:	xchg   esi,eax
  402463:	shl    DWORD PTR ds:0x286e10b4,0x15
  40246a:	out    0x4f,eax
  40246c:	int    0x4f
  40246e:	adc    al,0x3e
  402470:	mov    edx,0xd6ea9a81
  402475:	mov    ds:0xf7af0248,al
  40247a:	in     eax,dx
  40247b:	cld    
  40247c:	loop   0x402448
  40247e:	ins    BYTE PTR es:[edi],dx
  40247f:	test   al,0xae
  402481:	cmp    DWORD PTR [edx],eax
  402483:	push   ds
  402484:	push   esp
  402485:	outs   dx,BYTE PTR ds:[esi]
  402486:	fwait
  402487:	add    edx,eax
  402489:	shl    BYTE PTR [edi],cl
  40248b:	or     bl,BYTE PTR [eax]
  40248d:	mov    esp,0x7a4fe26f
  402492:	fbstp  TBYTE PTR [edx+0x57]
  402496:	or     DWORD PTR [edx-0x24150b7a],0x74e6976a
  4024a0:	push   0x6b
  4024a2:	fs aaa 
  4024a4:	scas   al,BYTE PTR es:[edi]
  4024a5:	out    dx,al
  4024a6:	in     al,0x1c
  4024a8:	bound  ecx,QWORD PTR [ebp-0x21]
  4024ab:	xchg   BYTE PTR [edx],dh
  4024ad:	jl     0x402469
  4024af:	cld    
  4024b0:	fisubr DWORD PTR [eax+0x2b]
  4024b3:	dec    esp
  4024b4:	out    dx,eax
  4024b5:	dec    esp
  4024b6:	dec    ecx
  4024b7:	pop    eax
  4024b8:	add    eax,DWORD PTR [edi]
  4024ba:	fadd   DWORD PTR [edx+0x41]
  4024bd:	inc    edi
  4024be:	sti    
  4024bf:	dec    edx
  4024c0:	out    0x91,eax
  4024c2:	or     DWORD PTR [ecx-0x2b],eax
  4024c5:	or     DWORD PTR [ebp+ebx*2+0x242956c0],ecx
  4024cc:	mov    al,ds:0x7d629486
  4024d1:	push   edi
  4024d2:	mov    edx,0x6e29d233
  4024d7:	mov    ds:0xc9910ddc,al
  4024dc:	dec    esi
  4024dd:	icebp  
  4024de:	jle    0x4024a7
  4024e0:	lock (bad) 
  4024e2:	cmp    al,0xc3
  4024e4:	sbb    eax,0x375c267b
  4024e9:	js     0x4024b2
  4024eb:	repnz clc 
  4024ed:	js     0x402507
  4024ef:	outs   dx,DWORD PTR ds:[esi]
  4024f0:	fmul   st,st(5)
  4024f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f3:	xchg   esp,eax
  4024f4:	pop    ds
  4024f5:	add    esp,DWORD PTR ds:0xed86527d
  4024fb:	sbb    eax,0x32c81580
  402500:	dec    edx
  402501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402502:	dec    ebp
  402503:	mov    WORD PTR [esi-0x5913dc8b],es
  402509:	lahf   
  40250a:	in     al,dx
  40250b:	out    0x33,al
  40250d:	out    0xe5,al
  40250f:	pop    esp
  402510:	and    BYTE PTR [edx+eiz*2+0x5f],bh
  402514:	out    0x8,eax
  402516:	push   es
  402517:	cmp    al,0x7
  402519:	mov    cl,0xee
  40251b:	in     al,0x1e
  40251d:	mov    ds:0xbb68693,eax
  402522:	jecxz  0x4024bb
  402524:	aam    0xb
  402526:	pushf  
  402527:	inc    ecx
  402528:	in     eax,0x8
  40252a:	jle    0x4024e0
  40252c:	inc    edi
  40252d:	jmp    0x6bf4218c
  402532:	xchg   ecx,eax
  402533:	inc    esi
  402534:	mov    esp,0x9f225e6b
  402539:	lahf   
  40253a:	sbb    ebx,DWORD PTR [ecx]
  40253c:	sub    ebx,ebp
  40253e:	or     al,bh
  402540:	sbb    BYTE PTR [eax],cl
  402542:	mov    ds:0xceecb070,eax
  402547:	push   esp
  402548:	cdq    
  402549:	iret   
  40254a:	mov    esi,DWORD PTR [ecx+0x71]
  40254d:	jno    0x4024fc
  40254f:	imul   edx,DWORD PTR [edi-0x68],0xdbb7802c
  402556:	es jb  0x4024e6
  402559:	mov    esi,0x399cf9aa
  40255e:	das    
  40255f:	xchg   ebx,eax
  402560:	jae    0x402538
  402562:	sbb    ebx,DWORD PTR [eax+esi*4]
  402565:	xchg   ecx,eax
  402566:	mov    esi,0xf1213a48
  40256b:	call   0xd4a4:0xf9d1ef8a
  402572:	clc    
  402573:	adc    ecx,edi
  402575:	iret   
  402576:	pop    ds
  402577:	loop   0x40256f
  402579:	aaa    
  40257a:	mov    edi,0x64e94e3c
  40257f:	aam    0xdd
  402581:	test   DWORD PTR [edx],0x5dc587de
  402587:	fld    QWORD PTR [esi-0x7a]
  40258a:	mov    dl,0xd1
  40258c:	retf   
  40258d:	mov    ah,0xe8
  40258f:	cmp    DWORD PTR [ebp+0x3922dc01],ebx
  402595:	jecxz  0x402564
  402597:	aam    0xb0
  402599:	jle    0x402525
  40259b:	cwde   
  40259c:	jmp    0x272e6cab
  4025a1:	(bad)  
  4025a2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4025a4:	test   eax,0xdaa44662
  4025a9:	mov    ds:0xc5a6851b,eax
  4025ae:	xchg   esi,eax
  4025af:	jns    0x40254c
  4025b1:	lods   eax,DWORD PTR ds:[esi]
  4025b2:	add    DWORD PTR [edx],esi
  4025b4:	test   esp,eax
  4025b6:	xor    eax,eax
  4025b8:	aam    0xa6
  4025ba:	(bad)  
  4025bb:	loope  0x4025c6
  4025bd:	jg     0x4025b4
  4025bf:	pop    ss
  4025c0:	add    dh,BYTE PTR [edx]
  4025c2:	xor    al,0x5c
  4025c4:	in     eax,dx
  4025c5:	cld    
  4025c6:	xor    cl,BYTE PTR [esi-0x68]
  4025c9:	imul   eax,DWORD PTR [edi+edx*4+0x75],0x65af4bf4
  4025d1:	fistp  QWORD PTR [edi+0x27]
  4025d4:	fwait
  4025d5:	or     eax,DWORD PTR [eax]
  4025d7:	lods   eax,DWORD PTR ds:[esi]
  4025d8:	ja     0x4025b6
  4025da:	ja     0x402575
  4025dc:	mov    edi,0x3f6c09a1
  4025e1:	fisttp DWORD PTR [ebp+0x3cd09dd1]
  4025e7:	call   0x61f7:0x55a7aaed
  4025ee:	icebp  
  4025ef:	iret   
  4025f0:	sbb    eax,0x6a4f2c5
  4025f5:	loop   0x402669
  4025f7:	mov    bh,0x1e
  4025f9:	mov    ebp,0x713b035
  4025fe:	(bad)  
  402600:	pop    ds
  402601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402602:	cdq    
  402603:	pop    esi
  402604:	cmp    edi,esi
  402606:	test   DWORD PTR [ebx-0x76],esi
  402609:	push   0xffffffcd
  40260b:	mov    bh,0x63
  40260d:	(bad)  
  40260e:	mov    ch,0x70
  402610:	aad    0x89
  402612:	or     DWORD PTR [edx-0x56763685],ebp
  402618:	ret    0xcbcb
  40261b:	xor    BYTE PTR [ebx+0x5a],al
  40261e:	jnp    0x4025f4
  402620:	pop    edx
  402621:	inc    esp
  402622:	pusha  
  402623:	rcl    DWORD PTR [eax+0x30],0xa8
  402627:	push   ebp
  402628:	push   ebx
  402629:	push   0x6d16a932
  40262e:	dec    eax
  40262f:	pop    edx
  402630:	iret   
  402631:	jb     0x40262a
  402633:	push   edi
  402634:	xchg   esi,eax
  402635:	cmp    DWORD PTR [ecx],ebx
  402637:	adc    eax,0x38690c6a
  40263c:	mov    al,0xb9
  40263e:	je     0x402611
  402640:	and    al,BYTE PTR [edx+0x48fa4da4]
  402646:	inc    ebx
  402647:	push   ebx
  402648:	mov    cl,0x10
  40264a:	cmp    eax,0x113c0bcc
  40264f:	ror    DWORD PTR [edi-0x2d6b48f8],1
  402655:	pop    ebx
  402656:	sub    ebx,DWORD PTR [edi-0x15]
  402659:	shl    BYTE PTR [ecx],0xa1
  40265c:	ja     0x40264d
  40265e:	pop    esi
  40265f:	rcr    BYTE PTR [ebx-0x688e9262],0x84
  402666:	sub    al,0x11
  402668:	and    ebx,esp
  40266a:	pop    ecx
  40266b:	or     bl,ch
  40266d:	retf   0x886a
  402670:	inc    ebx
  402671:	int3   
  402672:	fist   WORD PTR [eax-0x6fa81299]
  402678:	ret    0x4667
  40267b:	inc    ebp
  40267c:	jge    0x4026f0
  40267e:	or     BYTE PTR [edi-0x6cab2e02],dh
  402684:	inc    ebp
  402685:	mov    ch,ah
  402687:	push   0x1a
  402689:	adc    BYTE PTR [ecx],0x13
  40268c:	mov    ah,0xc7
  40268e:	xor    ecx,DWORD PTR [edi+edi*4+0x56f8a6bb]
  402695:	pushf  
  402696:	dec    ecx
  402697:	into   
  402698:	data16 shr BYTE PTR fs:[ebx],0xff
  40269d:	lea    esi,[eax]
  40269f:	pop    ecx
  4026a0:	mov    eax,0xf1c5d9c9
  4026a5:	pop    ebp
  4026a6:	stos   DWORD PTR es:[edi],eax
  4026a7:	int3   
  4026a8:	add    dh,cl
  4026aa:	(bad)  
  4026ab:	outs   dx,BYTE PTR ds:[esi]
  4026ac:	in     eax,dx
  4026ad:	(bad)  
  4026ae:	pop    ss
  4026af:	clc    
  4026b0:	sbb    DWORD PTR [ebx+0x5c],esp
  4026b3:	pop    es
  4026b4:	retf   
  4026b5:	iret   
  4026b6:	push   ebp
  4026b7:	stos   DWORD PTR es:[edi],eax
  4026b8:	xor    eax,0x254a2ec7
  4026bd:	in     eax,dx
  4026be:	pop    edi
  4026bf:	xchg   ecx,eax
  4026c0:	repnz repz in eax,0x5
  4026c4:	and    eax,eax
  4026c6:	xchg   dl,al
  4026c8:	dec    edi
  4026c9:	inc    ecx
  4026ca:	jb     0x402673
  4026cc:	cmp    DWORD PTR [edi-0x195424e7],esp
  4026d2:	(bad)  [eax+0x28]
  4026d5:	dec    esi
  4026d6:	stc    
  4026d7:	jmp    0xe643736
  4026dc:	jne    0x402667
  4026de:	mov    ah,0xc1
  4026e0:	or     ebx,DWORD PTR [ebx+0x6a]
  4026e3:	pop    ds
  4026e4:	xchg   esi,eax
  4026e5:	mov    WORD PTR [eax-0x28f1b1d8],?
  4026eb:	mul    DWORD PTR [edi]
  4026ed:	push   ecx
  4026ee:	xchg   esp,eax
  4026ef:	icebp  
  4026f0:	lods   al,BYTE PTR ds:[esi]
  4026f1:	pop    ebx
  4026f2:	fs cmp eax,0xd89e06a6
  4026f8:	test   al,0x6
  4026fa:	rcl    DWORD PTR [esi-0x75],1
  4026fd:	pop    eax
  4026fe:	inc    ebx
  4026ff:	mov    ch,BYTE PTR [ebx+0x4]
  402702:	(bad)  [ecx]
  402704:	cmp    eax,0xff2d6df0
  402709:	or     ch,BYTE PTR [eax]
  40270b:	xchg   edi,eax
  40270c:	adc    DWORD PTR [edx],edi
  40270e:	les    eax,FWORD PTR [ebx-0x47fed958]
  402714:	pop    eax
  402715:	xchg   DWORD PTR [ecx-0x41],ebp
  402718:	push   0xa24a55c4
  40271d:	push   edi
  40271e:	jo     0x4026b8
  402720:	mov    ecx,0x12b92148
  402725:	xchg   esp,eax
  402726:	sub    BYTE PTR [ebx+0x13d6d543],0xe3
  40272d:	es dec edi
  40272f:	imul   esi,DWORD PTR [ebx+0x19],0x97532c36
  402736:	call   0x5f65bfbb
  40273b:	pushf  
  40273c:	sar    BYTE PTR [eax],0xf0
  40273f:	sbb    al,0x56
  402741:	push   ss
  402742:	mov    dh,0x4a
  402744:	(bad)  
  402746:	sbb    BYTE PTR [ecx-0x26694715],bl
  40274c:	xchg   ecx,eax
  40274d:	push   ecx
  40274e:	mov    al,ds:0xd650c489
  402753:	xor    bh,BYTE PTR [edi-0x1a]
  402756:	xchg   edi,eax
  402757:	es imul edi,esi,0x27039c52
  40275e:	and    esp,DWORD PTR [esi]
  402760:	and    DWORD PTR [ebp-0x73933136],esi
  402766:	adc    al,0x4c
  402768:	jmp    0x4026f8
  40276a:	call   0xb258f4cd
  40276f:	xchg   ebp,eax
  402770:	add    esi,DWORD PTR [edx-0x1a]
  402773:	sub    al,0x92
  402775:	aas    
  402776:	xchg   ecx,eax
  402777:	jmp    0x6f9b:0x2f98ba11
  40277e:	sbb    BYTE PTR [edi-0x44bc4c9],0x6b
  402785:	(bad)  
  402786:	dec    ecx
  402787:	fisttp WORD PTR [ebp+0x69a476d]
  40278d:	out    dx,eax
  40278e:	sbb    esp,ebx
  402790:	int    0x41
  402792:	sbb    al,dl
  402794:	jmp    0x30cef965
  402799:	add    al,0xc3
  40279b:	lock clc 
  40279d:	lds    ebp,FWORD PTR [ebx+0x56a196]
  4027a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a4:	imul   eax,DWORD PTR [eax+0x41],0x69f332da
  4027ab:	mov    esi,0xaf867bdf
  4027b0:	push   esi
  4027b1:	sbb    al,0x83
  4027b3:	scas   eax,DWORD PTR es:[edi]
  4027b4:	adc    al,0xeb
  4027b6:	and    BYTE PTR [ebp+0x2f61e1ff],cl
  4027bc:	adc    al,0x0
  4027be:	sub    BYTE PTR [edi-0x3577dec2],cl
  4027c4:	out    dx,al
  4027c5:	mov    dl,0x7a
  4027c7:	arpl   ax,ax
  4027c9:	push   es
  4027ca:	pusha  
  4027cb:	add    ebx,edx
  4027cd:	aaa    
  4027ce:	repnz arpl WORD PTR [ecx],ax
  4027d1:	aam    0x38
  4027d3:	hlt    
  4027d4:	sbb    eax,0x50d11269
  4027d9:	shl    bl,0xf
  4027dc:	dec    esi
  4027dd:	aad    0xa4
  4027df:	cmp    dh,bh
  4027e1:	sbb    bl,ah
  4027e3:	jno    0x40281d
  4027e5:	cmp    al,0x6
  4027e7:	cmp    DWORD PTR [edx],esp
  4027e9:	mov    dh,0x41
  4027eb:	outs   dx,BYTE PTR ds:[esi]
  4027ed:	aas    
  4027ee:	call   0x199f:0x408e8655
  4027f5:	push   ss
  4027f6:	stos   DWORD PTR es:[edi],eax
  4027f7:	inc    ebp
  4027f8:	orps   xmm3,XMMWORD PTR [ebp+eax*1+0x6b7697eb]
  402800:	jle    0x402783
  402802:	mov    ebx,0xec0d4c46
  402807:	mov    ch,0xe7
  402809:	inc    esi
  40280a:	ins    DWORD PTR es:[edi],dx
  40280b:	test   ecx,ecx
  40280d:	adc    eax,DWORD PTR [esi+edx*2+0x50a64647]
  402814:	or     eax,DWORD PTR [eax+esi*8]
  402817:	iret   
  402818:	adc    eax,0x560a9f02
  40281d:	xchg   edx,eax
  40281e:	or     ebp,esi
  402820:	add    esi,ecx
  402822:	into   
  402823:	push   es
  402824:	jmp    0x402895
  402826:	add    al,0x1c
  402828:	sbb    edi,DWORD PTR [ebx]
  40282a:	in     al,dx
  40282b:	mov    bl,0x67
  40282d:	repz mov WORD PTR [esp+esi*1-0x7648c6f3],?
  402835:	outs   dx,DWORD PTR ds:[esi]
  402836:	in     eax,dx
  402837:	xor    edi,DWORD PTR [edx+0x5efea2e0]
  40283d:	dec    edi
  40283e:	or     ch,BYTE PTR [ebx]
  402840:	pop    ebp
  402841:	stc    
  402842:	xor    ebp,DWORD PTR [ebx-0x291f9ee1]
  402848:	sub    ecx,esi
  40284a:	call   0x2251:0xdb4abb71
  402851:	sti    
  402852:	cwde   
  402853:	lods   eax,DWORD PTR ds:[esi]
  402854:	lea    edx,[esi-0x5]
  402857:	lahf   
  402858:	call   0xc002:0xee338e78
  40285f:	dec    ecx
  402860:	cld    
  402861:	repnz adc eax,0xfb3907ba
  402867:	jmp    0x402890
  402869:	xchg   esi,eax
  40286a:	mov    dh,0x5f
  40286c:	dec    esi
  40286d:	inc    esi
  40286e:	ror    ch,1
  402870:	xor    edi,DWORD PTR [eax+0x39]
  402873:	adc    DWORD PTR [eax+0x7e3548a9],ebx
  402879:	jmp    0x1c58ae28
  40287e:	fdivr  QWORD PTR [ebp-0x131163b7]
  402884:	inc    ebp
  402885:	stos   DWORD PTR es:[edi],eax
  402886:	pop    esi
  402887:	jno    0x4028db
  402889:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288b:	dec    edi
  40288c:	clc    
  40288d:	and    DWORD PTR [esi],ecx
  40288f:	cmp    eax,0xbe28b4c9
  402894:	pop    esi
  402895:	xor    eax,0xc184fa29
  40289a:	inc    esi
  40289b:	(bad)  
  40289c:	std    
  40289d:	add    DWORD PTR [ebx+0x32],ecx
  4028a0:	in     eax,0xc2
  4028a2:	(bad)  
  4028a3:	mov    bh,0x41
  4028a5:	cli    
  4028a6:	lahf   
  4028a7:	stc    
  4028a8:	sar    BYTE PTR ds:0xe7bc5e4b,cl
  4028ae:	or     BYTE PTR [edx+0x11a6571f],bl
  4028b4:	dec    ebp
  4028b5:	and    al,0x9
  4028b7:	push   esp
  4028b8:	sahf   
  4028b9:	mov    ebx,0x93372d83
  4028be:	xchg   edi,eax
  4028bf:	jmp    0x5a439fa4
  4028c4:	cwde   
  4028c5:	fcmovnu st,st(4)
  4028c7:	mov    cl,ch
  4028c9:	nop
  4028ca:	dec    ebp
  4028cb:	push   esp
  4028cc:	push   eax
  4028cd:	je     0x4028a1
  4028cf:	add    BYTE PTR [esi],dl
  4028d1:	xor    DWORD PTR [esi],eax
  4028d3:	lods   al,BYTE PTR ds:[esi]
  4028d4:	lea    ebx,[esi+0x2d6019dc]
  4028da:	out    0x20,al
  4028dc:	pop    esi
  4028dd:	add    BYTE PTR [edx+0x2673788d],dl
  4028e3:	mov    cl,0x8a
  4028e5:	call   0x2f74:0x48726b23
  4028ec:	sbb    al,0xf6
  4028ee:	popf   
  4028ef:	sub    esp,DWORD PTR [ecx]
  4028f1:	popa   
  4028f2:	pop    esp
  4028f3:	fsubr  QWORD PTR ds:0xd768061f
  4028f9:	mov    ebx,0x6884c63b
  4028fe:	sbb    al,0x1c
  402900:	mov    ah,0x92
  402902:	mov    dl,0xbb
  402904:	push   ss
  402905:	pop    ds
  402906:	call   FWORD PTR [ebp+0x3d]
  402909:	pop    ds
  40290a:	pop    ds
  40290b:	adc    cl,dh
  40290d:	sbb    eax,DWORD PTR [edi]
  40290f:	cmp    dh,dl
  402911:	ja     0x402955
  402913:	mov    dh,0xf7
  402915:	jp     0x40293e
  402917:	xchg   edx,eax
  402918:	jnp    0x4028ba
  40291a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40291b:	or     dl,BYTE PTR [ebp-0x24]
  40291e:	lods   eax,DWORD PTR ds:[esi]
  40291f:	adc    esp,esp
  402921:	inc    esp
  402922:	ds sub al,0x1e
  402925:	add    ecx,DWORD PTR [eax]
  402927:	jbe    0x4028ee
  402929:	adc    al,0x74
  40292b:	out    dx,al
  40292c:	mov    ?,WORD PTR [edx]
  40292e:	test   al,0xeb
  402930:	push   ecx
  402931:	xor    BYTE PTR [eax+0x15],0xf
  402935:	xchg   edi,eax
  402936:	add    cl,BYTE PTR [ebx]
  402938:	scas   al,BYTE PTR es:[edi]
  402939:	jmp    0x402987
  40293b:	xlat   BYTE PTR ds:[ebx]
  40293c:	daa    
  40293d:	stc    
  40293e:	jo     0x402953
  402940:	and    ch,ch
  402942:	sbb    eax,0x9f581896
  402947:	inc    ecx
  402948:	ins    DWORD PTR es:[edi],dx
  402949:	xchg   BYTE PTR [edi-0x91513bd],ch
  40294f:	sbb    eax,0xac0486cf
  402954:	aas    
  402955:	mov    bh,0x81
  402957:	fdivr  st,st(5)
  402959:	nop
  40295a:	pop    ds
  40295b:	pop    esp
  40295c:	adc    eax,0x2dfd679f
  402961:	inc    esi
  402962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402963:	ins    DWORD PTR es:[edi],dx
  402964:	sbb    eax,0x11824e05
  402969:	fwait
  40296a:	pop    esi
  40296b:	aas    
  40296c:	out    dx,eax
  40296d:	(bad)
  402971:	pushf  
  402972:	mov    bl,0xca
  402974:	and    BYTE PTR [edi],0x35
  402977:	mov    ?,WORD PTR [ecx]
  402979:	xchg   DWORD PTR [edx+0x6f],eax
  40297c:	or     eax,0xcebc37d4
  402981:	xchg   esp,eax
  402982:	xchg   ecx,eax
  402983:	inc    edx
  402984:	call   0x69a565ae
  402989:	in     eax,0x75
  40298b:	lahf   
  40298c:	fstp   TBYTE PTR [ebx]
  40298e:	call   0xd644b3ad
  402993:	enter  0x223d,0x7e
  402997:	rcl    DWORD PTR [edx],cl
  402999:	inc    esi
  40299a:	shr    DWORD PTR [edi+0x70],cl
  40299d:	xchg   esp,eax
  40299e:	ret    
  40299f:	in     eax,0xd1
  4029a1:	jle    0x402929
  4029a3:	or     esp,esp
  4029a5:	sub    al,ch
  4029a7:	iret   
  4029a8:	aaa    
  4029a9:	jmp    0x81334ecf
  4029ae:	ss jmp 0x7277:0x5c86f4db
  4029b6:	cmp    BYTE PTR [ebx-0x6f],dl
  4029b9:	push   ds
  4029ba:	test   eax,0x5e079651
  4029bf:	inc    esp
  4029c0:	adc    eax,0x52367013
  4029c5:	or     DWORD PTR [eax-0x4b8c4c26],esi
  4029cb:	cld    
  4029cc:	mov    ebx,0x9af5a5a4
  4029d1:	hlt    
  4029d2:	sub    eax,0x2cbd849
  4029d7:	pop    ecx
  4029d8:	jmp    0x4029a5
  4029da:	dec    eax
  4029db:	adc    DWORD PTR ds:0x3a124d6d,edi
  4029e1:	ins    BYTE PTR es:[edi],dx
  4029e2:	pop    esp
  4029e3:	dec    ecx
  4029e4:	add    ecx,DWORD PTR [edx+0x10e513fe]
  4029ea:	or     BYTE PTR [ebx-0x4],dl
  4029ed:	repnz mov ch,BYTE PTR [ebp+0xf]
  4029f1:	jns    0x402a32
  4029f3:	(bad)  
  4029f4:	aad    0x3
  4029f6:	inc    ecx
  4029f7:	daa    
  4029f8:	inc    edx
  4029f9:	adc    BYTE PTR [edi+0x4d9c4434],dl
  4029ff:	xchg   edx,eax
  402a00:	jne    0x4029c4
  402a02:	shr    BYTE PTR [edi+eiz*1],1
  402a05:	out    dx,al
  402a06:	sbb    edx,DWORD PTR [edx+0x259eea61]
  402a0c:	popf   
  402a0d:	fwait
  402a0e:	dec    edx
  402a0f:	and    BYTE PTR [ebx+edi*4+0x109959b6],dh
  402a16:	push   esi
  402a17:	popa   
  402a18:	cli    
  402a19:	sbb    ah,0x7f
  402a1c:	call   0x7da38116
  402a21:	jle    0x4029d2
  402a23:	stos   DWORD PTR es:[edi],eax
  402a24:	dec    ebp
  402a25:	test   al,0x25
  402a27:	ret    0x13b3
  402a2a:	mov    esp,0xa11633cd
  402a2f:	cs and dl,ah
  402a32:	addr16 cmp al,0xeb
  402a35:	repz mov dh,0x19
  402a38:	data16 int3 
  402a3a:	inc    edx
  402a3b:	fidiv  DWORD PTR [eax]
  402a3d:	jg     0x402a1e
  402a3f:	rol    ebx,0xf9
  402a42:	xchg   edx,eax
  402a43:	lock and eax,0xbfd3ab85
  402a49:	hlt    
  402a4a:	out    dx,eax
  402a4b:	out    dx,al
  402a4c:	(bad)
  402a4f:	adc    al,0xb6
  402a52:	mov    ebx,0xf58f7dbf
  402a57:	adc    al,BYTE PTR [ebp+0xa]
  402a5a:	lahf   
  402a5b:	jge    0x402a9c
  402a5d:	leave  
  402a5e:	jl     0x402ac1
  402a60:	dec    ebx
  402a61:	cmp    al,0xd0
  402a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a64:	xchg   ebx,eax
  402a65:	test   eax,0x6c0472e4
  402a6a:	sbb    dh,bl
  402a6c:	sub    esi,DWORD PTR [edi+eax*1]
  402a6f:	lods   eax,DWORD PTR ss:[esi]
  402a71:	fsubr  DWORD PTR [ebp+0x4b403de9]
  402a77:	xchg   esp,eax
  402a78:	push   ebx
  402a79:	leave  
  402a7a:	mov    al,0xde
  402a7c:	ds dec esi
  402a7e:	sahf   
  402a7f:	(bad)  
  402a80:	ss out 0xe1,al
  402a83:	push   0x56
  402a85:	in     al,0x7f
  402a87:	xchg   ebx,ebp
  402a89:	mov    ebp,DWORD PTR [ecx]
  402a8b:	jecxz  0x402ab8
  402a8d:	dec    ecx
  402a8e:	xor    eax,DWORD PTR [ecx+0x3f9ca42c]
  402a94:	fst    DWORD PTR [eax]
  402a96:	push   edi
  402a97:	scas   eax,DWORD PTR es:[edi]
  402a98:	loopne 0x402b16
  402a9a:	xor    ah,BYTE PTR [ecx-0x61745dfe]
  402aa0:	or     DWORD PTR [edx],0xe88160af
  402aa6:	sahf   
  402aa7:	xchg   ebx,eax
  402aa8:	aam    0xb8
  402aaa:	sbb    ebx,DWORD PTR [ecx-0x61fcd71f]
  402ab0:	add    al,0x24
  402ab2:	cmp    BYTE PTR [edi-0x51cb2f3],dl
  402ab8:	jge    0x402add
  402aba:	sbb    DWORD PTR [edi+eax*8-0x7e],ecx
  402abe:	mov    dh,0x84
  402ac0:	xchg   ebp,eax
  402ac1:	leave  
  402ac2:	jnp    0x402a9b
  402ac4:	xor    eax,0xbefabfe9
  402ac9:	lods   al,BYTE PTR ds:[esi]
  402aca:	sub    edi,ebp
  402acc:	in     al,dx
  402acd:	(bad)  
  402ace:	xor    dl,dl
  402ad0:	jb     0x402b2b
  402ad2:	adc    bh,BYTE PTR [ecx+0x74]
  402ad5:	xor    eax,0xf5648145
  402ada:	dec    ebp
  402adb:	clc    
  402adc:	xor    edi,DWORD PTR ds:0x95312768
  402ae2:	or     al,0x38
  402ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae5:	jae    0x402ac3
  402ae7:	(bad)  
  402ae8:	cmp    BYTE PTR [ebx],cl
  402aea:	(bad)  
  402aec:	xchg   edi,eax
  402aed:	enter  0x2e56,0x57
  402af1:	fs pushf 
  402af3:	xor    DWORD PTR [edx],edx
  402af5:	xchg   ebx,eax
  402af6:	sub    DWORD PTR [eax+0x53],eax
  402af9:	stos   BYTE PTR es:[edi],al
  402afa:	xor    ecx,DWORD PTR [edi]
  402afc:	sub    BYTE PTR [ebx],0x59
  402aff:	imul   edx,DWORD PTR [edi],0x35
  402b02:	scas   eax,DWORD PTR es:[edi]
  402b03:	int    0xe8
  402b05:	daa    
  402b06:	push   edx
  402b07:	out    dx,eax
  402b08:	bound  eax,QWORD PTR [eax+edx*2-0x86a5870]
  402b0f:	cmp    ah,ch
  402b11:	pusha  
  402b12:	dec    eax
  402b13:	dec    DWORD PTR ds:[ebp+0x12]
  402b17:	pushf  
  402b18:	test   eax,0x93d67a21
  402b1d:	sub    ebp,ebx
  402b1f:	or     BYTE PTR [ebx+ecx*2-0x76f475cc],cl
  402b26:	mov    edx,0x45641156
  402b2b:	push   esi
  402b2c:	dec    ecx
  402b2d:	fdivr  st,st(4)
  402b2f:	fdiv   DWORD PTR [eax+0x1a17cbc2]
  402b35:	in     eax,0xb1
  402b37:	mov    bl,0x5a
  402b39:	popf   
  402b3a:	jmp    0x34e6:0xeb2143d5
  402b41:	inc    edi
  402b42:	ins    BYTE PTR es:[edi],dx
  402b43:	arpl   WORD PTR [ebp+esi*4-0x15],ax
  402b47:	bound  ebp,QWORD PTR [ebx+0x24]
  402b4a:	repnz inc ecx
  402b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b4d:	jmp    0x402b6a
  402b4f:	es mov cl,ah
  402b52:	in     al,dx
  402b53:	(bad)  
  402b54:	and    al,0x13
  402b56:	out    dx,eax
  402b57:	mov    edx,DWORD PTR [ebp+ebx*2-0x507a92d0]
  402b5e:	adc    al,0x44
  402b60:	and    edx,DWORD PTR [edi]
  402b62:	lods   al,BYTE PTR ds:[esi]
  402b63:	adc    eax,0xb303b7ed
  402b68:	xor    ebp,ebp
  402b6a:	adc    esi,edx
  402b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6d:	in     eax,dx
  402b6e:	cmp    al,0x81
  402b70:	mov    dl,0x8e
  402b72:	in     al,dx
  402b73:	cmp    edi,DWORD PTR [eax]
  402b75:	pop    ebp
  402b76:	add    edi,ebx
  402b78:	iret   
  402b79:	pop    eax
  402b7a:	cwde   
  402b7b:	cmc    
  402b7c:	inc    edi
  402b7d:	sbb    BYTE PTR [ecx+0x763a859c],0x2d
  402b84:	sahf   
  402b85:	push   ebx
  402b86:	stos   DWORD PTR es:[edi],eax
  402b87:	dec    ebp
  402b88:	inc    edx
  402b89:	lods   eax,DWORD PTR ds:[esi]
  402b8a:	fwait
  402b8b:	xor    bl,BYTE PTR [eax+0x27]
  402b8e:	mov    ds:0xc0a5b812,eax
  402b93:	xchg   ecx,eax
  402b94:	ror    BYTE PTR [edx],0x94
  402b97:	jbe    0x402b59
  402b99:	sub    cl,dh
  402b9b:	loopne 0x402b4d
  402b9d:	in     al,0x95
  402b9f:	ins    DWORD PTR es:[edi],dx
  402ba0:	cmp    eax,0x650dcb2
  402ba5:	pusha  
  402ba6:	push   es
  402ba7:	and    al,0x78
  402ba9:	cld    
  402baa:	ror    DWORD PTR [ebp+0x487fd1fe],0x5d
  402bb1:	pop    esp
  402bb2:	test   BYTE PTR [ebx-0x1d],dl
  402bb5:	fs imul eax,esp,0x54
  402bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bba:	es in  al,dx
  402bbc:	push   ebp
  402bbd:	xchg   ebx,eax
  402bbe:	mov    edi,0x3da2319f
  402bc3:	mov    eax,ds:0x69e6a35e
  402bc8:	hlt    
  402bc9:	inc    edx
  402bca:	sub    ecx,ebp
  402bcc:	pop    ecx
  402bcd:	or     BYTE PTR [edx-0xefab24a],0x1a
  402bd4:	xor    BYTE PTR [ebx+0x6a],al
  402bd7:	jmp    0x9c3c8d7c
  402bdc:	ja     0x402c57
  402bde:	push   esp
  402bdf:	cmp    ch,bl
  402be1:	xchg   ebp,eax
  402be2:	inc    ebp
  402be3:	inc    edx
  402be4:	mov    eax,0x9be197e8
  402be9:	or     BYTE PTR [ebx+0x5],0x99
  402bed:	clc    
  402bee:	sti    
  402bef:	out    dx,eax
  402bf0:	mov    ds:0x3b9a1078,eax
  402bf5:	in     al,dx
  402bf6:	cwde   
  402bf7:	pop    ss
  402bf8:	jecxz  0x402bc2
  402bfa:	retf   0xfb6a
  402bfd:	shl    WORD PTR [esi],1
  402c00:	test   eax,0xa4c5fa
  402c05:	aad    0xa5
  402c07:	jno    0x402c2c
  402c09:	lahf   
  402c0a:	fiadd  DWORD PTR [edi+0x1e60e73f]
  402c10:	mov    al,ds:0x31ed2798
  402c15:	sub    BYTE PTR [eax],ah
  402c17:	getsec 
  402c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c1a:	cmp    bl,BYTE PTR [ebx+0x23]
  402c1d:	inc    edi
  402c1e:	mov    dl,0x33
  402c20:	push   ebp
  402c21:	dec    esp
  402c22:	push   ebx
  402c23:	sbb    dh,BYTE PTR [eax-0x14]
  402c26:	stos   BYTE PTR es:[edi],al
  402c27:	les    edi,FWORD PTR [eax-0x2fc582bd]
  402c2d:	(bad)  
  402c2f:	push   ds
  402c30:	je     0x402c38
  402c32:	test   eax,0x4db9aef8
  402c37:	and    dh,dh
  402c39:	stos   DWORD PTR es:[edi],eax
  402c3a:	pop    ds
  402c3b:	dec    eax
  402c3c:	adc    eax,0x28a03ef2
  402c41:	or     esi,esp
  402c43:	sar    esi,cl
  402c45:	lods   al,BYTE PTR ds:[esi]
  402c46:	ret    0x7649
  402c49:	sub    al,0x90
  402c4b:	and    ebx,eax
  402c4d:	(bad)  
  402c4e:	cmp    BYTE PTR [edx-0x60161cb9],dl
  402c54:	sub    bh,0x0
  402c57:	repnz mov ecx,0x49ec0588
  402c5d:	or     ebp,DWORD PTR [eax]
  402c5f:	xchg   ebx,eax
  402c60:	add    eax,0x7aa02ac8
  402c65:	jno    0x402c43
  402c67:	adc    edi,DWORD PTR [ecx-0x781a758c]
  402c6d:	daa    
  402c6e:	mov    edx,0xc06a7a51
  402c73:	(bad)
  402c77:	mov    ds:0x7e5f016c,eax
  402c7c:	ficomp DWORD PTR [edx-0x80]
  402c7f:	push   esp
  402c80:	or     DWORD PTR [eax],ebp
  402c82:	not    DWORD PTR [esi+0x5d]
  402c85:	sti    
  402c86:	std    
  402c87:	jmp    0x402c65
  402c89:	out    0x82,eax
  402c8b:	adc    ebx,DWORD PTR [esi]
  402c8d:	adc    edx,ebx
  402c8f:	lock test eax,0x418aef89
  402c95:	in     eax,dx
  402c96:	sbb    ebp,DWORD PTR [eax-0x36]
  402c99:	pop    ss
  402c9a:	adc    BYTE PTR [ebp+0x68f1db76],ah
  402ca0:	xchg   ebx,eax
  402ca1:	bsf    eax,DWORD PTR [esi-0x36]
  402ca5:	loopne 0x402ced
  402ca7:	stc    
  402ca8:	xchg   ebx,eax
  402ca9:	mov    dh,0x85
  402cab:	mov    ds,WORD PTR [ecx-0x644910be]
  402cb1:	daa    
  402cb2:	aad    0xc7
  402cb4:	imul   BYTE PTR [esi+edi*8+0x23]
  402cb8:	mov    eax,ds:0x4cf1d59
  402cbd:	adc    eax,0x3cd8388c
  402cc2:	sub    edi,esi
  402cc4:	addr16 in eax,dx
  402cc6:	xor    ebp,ecx
  402cc8:	int3   
  402cc9:	(bad)  
  402cca:	mov    ecx,0x2de50c3b
  402ccf:	arpl   WORD PTR [ecx-0x32e9393f],bp
  402cd5:	cdq    
  402cd6:	ins    BYTE PTR es:[edi],dx
  402cd7:	and    eax,0x38d1e41e
  402cdc:	sahf   
  402cdd:	mov    ds:0x77b36960,al
  402ce2:	into   
  402ce3:	xchg   esi,eax
  402ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ce5:	cld    
  402ce6:	test   BYTE PTR [esi+0x4f],al
  402ce9:	loope  0x402d09
  402ceb:	sbb    al,0x2f
  402ced:	push   0xd
  402cef:	push   eax
  402cf0:	mov    dh,0xa2
  402cf2:	mov    bh,0xf2
  402cf4:	repnz mov al,ds:0xc506fa4c
  402cfa:	popf   
  402cfb:	pop    edi
  402cfc:	mov    bl,0xc
  402cfe:	adc    BYTE PTR [edi+0x322605bf],0x6e
  402d05:	retf   0x2ba
  402d08:	imul   esi,ecx,0x9f8d4be8
  402d0e:	inc    eax
  402d0f:	cs inc esi
  402d11:	int    0xd4
  402d13:	push   ecx
  402d14:	mul    DWORD PTR [edi-0x74807901]
  402d1a:	mov    ah,0x42
  402d1c:	fbstp  TBYTE PTR [edx]
  402d1e:	neg    DWORD PTR [ebx+0x68940c55]
  402d24:	inc    esp
  402d25:	sahf   
  402d26:	pop    ds
  402d27:	fld    QWORD PTR [eax+0x2b]
  402d2a:	sbb    bl,BYTE PTR cs:[ebx]
  402d2d:	xor    BYTE PTR [ebx-0x4b],bh
  402d30:	lods   al,BYTE PTR ds:[esi]
  402d31:	jl     0x402d8e
  402d33:	jne    0x402d48
  402d35:	lock sub edi,DWORD PTR [edi-0x62]
  402d39:	mov    ecx,0x82958f5
  402d3e:	data16 aad 0xef
  402d41:	hlt    
  402d42:	jl     0x402d42
  402d44:	mov    ds:0x4152b379,al
  402d49:	hlt    
  402d4a:	jge    0x402cd1
  402d4c:	jne    0x402d9f
  402d4e:	stos   BYTE PTR es:[edi],al
  402d4f:	stos   DWORD PTR es:[edi],eax
  402d50:	adc    eax,0x66eb3330
  402d55:	sbb    al,BYTE PTR [esi]
  402d57:	sbb    al,0xe9
  402d59:	push   ds
  402d5a:	js     0x402d80
  402d5c:	das    
  402d5d:	pop    eax
  402d5e:	sti    
  402d5f:	and    dh,BYTE PTR [edx+0x6a]
  402d62:	test   al,0x80
  402d64:	scas   eax,DWORD PTR es:[edi]
  402d65:	test   ebx,ebp
  402d67:	or     al,0x2c
  402d69:	sub    BYTE PTR [edi-0x2657bc55],dh
  402d6f:	cmp    DWORD PTR [edi+ebp*2+0xfce32a2],ebx
  402d76:	retf   
  402d77:	loopne 0x402de2
  402d79:	je     0x402d92
  402d7b:	jl     0x402d6e
  402d7d:	push   edi
  402d7e:	shl    DWORD PTR [edi],0xdf
  402d81:	mov    dh,0x94
  402d83:	(bad)  
  402d84:	xchg   ecx,eax
  402d85:	or     cl,bh
  402d87:	mov    edx,0x4973b199
  402d8c:	ret    
  402d8d:	dec    ebx
  402d8e:	pop    es
  402d8f:	mov    ecx,0x681f98c0
  402d94:	lahf   
  402d95:	or     ecx,DWORD PTR [edi]
  402d97:	mov    ebx,0x68f32db0
  402d9c:	mov    cl,0x58
  402d9e:	mov    ebp,0x365a6690
  402da3:	and    al,0xb0
  402da5:	mov    dh,0xfb
  402da7:	mov    edi,0x23885c9d
  402dac:	pop    ebx
  402dad:	mov    bl,0x96
  402daf:	adc    DWORD PTR [ecx-0x64fe7378],0xffffffe8
  402db6:	jmp    FWORD PTR [edx+0x34a4c809]
  402dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dbd:	iret   
  402dbe:	add    eax,0x1c7a15a3
  402dc3:	dec    esp
  402dc4:	sbb    eax,0x6c1192b6
  402dc9:	ror    BYTE PTR [edx+eax*1-0x16],1
  402dcd:	std    
  402dce:	fs and ebp,ebp
  402dd1:	sub    ah,ah
  402dd3:	aas    
  402dd4:	scas   al,BYTE PTR es:[edi]
  402dd5:	mov    ds:0x6469d98f,eax
  402dda:	fwait
  402ddb:	mov    bl,0x60
  402ddd:	xor    BYTE PTR [esi-0x9f85bc5],ah
  402de3:	pop    ecx
  402de4:	cmp    al,0x2b
  402de6:	shr    DWORD PTR [ecx],0x73
  402de9:	pop    eax
  402dea:	loop   0x402d91
  402dec:	mov    dl,0x1a
  402dee:	aaa    
  402def:	inc    ecx
  402df0:	(bad)  
  402df1:	xchg   esi,eax
  402df2:	stos   BYTE PTR es:[edi],al
  402df3:	inc    edi
  402df4:	pop    edi
  402df5:	xchg   esp,eax
  402df6:	repnz es ror ch,0xbe
  402dfb:	(bad)  
  402dfd:	out    dx,eax
  402dfe:	lock cmp eax,DWORD PTR [ecx-0x31c4032b]
  402e05:	std    
  402e06:	jbe    0x402df0
  402e08:	cli    
  402e09:	cmp    ebp,ebx
  402e0b:	icebp  
  402e0c:	pop    edi
  402e0d:	fild   DWORD PTR ds:0xd47b5b3a
  402e13:	xor    edx,ebp
  402e15:	loope  0x402dfc
  402e17:	xor    ecx,ebx
  402e19:	cs dec ebx
  402e1b:	and    esi,DWORD PTR [esi*4+0x46a0e102]
  402e22:	ret    
  402e23:	pop    es
  402e24:	in     al,0xfa
  402e26:	call   FWORD PTR [ebp+0x3e]
  402e29:	and    DWORD PTR [ecx],ebp
  402e2b:	in     al,dx
  402e2c:	or     eax,0xdcc077ce
  402e31:	ss in  eax,dx
  402e33:	xor    eax,0x363d970f
  402e38:	or     esi,DWORD PTR [edx-0x6390b763]
  402e3e:	(bad)
  402e41:	icebp  
  402e42:	and    esi,ebp
  402e44:	xor    ah,dh
  402e46:	sub    BYTE PTR [eax],ah
  402e48:	or     dh,al
  402e4a:	idiv   BYTE PTR [edi]
  402e4c:	hlt    
  402e4d:	ds out dx,al
  402e4f:	xor    DWORD PTR [ebx+0x3416ea8d],0x1b232755
  402e59:	push   esp
  402e5a:	mov    al,ds:0x543b0338
  402e5f:	mov    ds:0x30c65786,al
  402e64:	jp     0x402ebe
  402e66:	xchg   edi,eax
  402e67:	test   al,ch
  402e69:	pop    edi
  402e6a:	ins    DWORD PTR es:[edi],dx
  402e6b:	sub    ch,BYTE PTR [esi]
  402e6d:	add    BYTE PTR [ebp-0x1d61da5f],ch
  402e73:	dec    ebx
  402e74:	test   edi,0xa2506f09
  402e7a:	adc    ch,ch
  402e7c:	pop    ebp
  402e7d:	ret    
  402e7e:	rcl    BYTE PTR [esi],cl
  402e80:	in     eax,dx
  402e81:	daa    
  402e82:	cld    
  402e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e85:	mov    esi,0x341a7dde
  402e8a:	xor    eax,0xbf32e9e
  402e8f:	shr    DWORD PTR [eax-0xe],0xc1
  402e93:	inc    esi
  402e94:	leave  
  402e95:	cld    
  402e96:	pop    edx
  402e97:	pop    edi
  402e98:	cmp    DWORD PTR [ebx-0x54],ecx
  402e9b:	out    0xe6,al
  402e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9e:	aam    0x34
  402ea0:	int3   
  402ea1:	shl    BYTE PTR [esi+0x2c],0x0
  402ea5:	aaa    
  402ea6:	jo     0x402ee3
  402ea8:	retf   0x96e8
  402eab:	jb     0x402ea9
  402ead:	push   0x7a
  402eaf:	pop    ecx
  402eb0:	and    ebx,DWORD PTR [ecx+0x6b]
  402eb3:	out    dx,al
  402eb4:	mov    eax,0x27a4a6b8
  402eb9:	ss loopne 0x402ef7
  402ebc:	add    DWORD PTR [esi],esi
  402ebe:	fimul  DWORD PTR [ebx-0x60909ee9]
  402ec4:	ja     0x402ee7
  402ec6:	xor    BYTE PTR es:[edx-0x74],al
  402eca:	aam    0xd8
  402ecc:	push   0xf1f576ec
  402ed1:	icebp  
  402ed2:	dec    edi
  402ed3:	loopne 0x402edd
  402ed5:	mov    edx,0x1198a9ca
  402eda:	add    al,0x62
  402edc:	dec    ebp
  402edd:	pop    edx
  402ede:	int3   
  402edf:	(bad)  
  402ee0:	in     eax,dx
  402ee1:	retf   
  402ee2:	retf   
  402ee3:	push   ds
  402ee4:	push   ecx
  402ee5:	cmp    al,0x7b
  402ee7:	sub    BYTE PTR [edx+eax*1-0x26],ah
  402eeb:	(bad)
  402eee:	mov    al,ds:0x206b29bf
  402ef3:	jbe    0x402f2b
  402ef5:	jnp    0x402f3e
  402ef7:	xor    eax,0x72ab656d
  402efc:	dec    esp
  402efd:	and    BYTE PTR ds:0xd4fefed5,bh
  402f03:	retf   
  402f04:	fucomi st,st(7)
  402f06:	stos   BYTE PTR es:[edi],al
  402f07:	and    eax,0x4f72190
  402f0c:	daa    
  402f0d:	mov    ds:0xb25266c8,eax
  402f12:	pop    edi
  402f13:	(bad)  
  402f14:	pop    ebp
  402f15:	push   0x36
  402f17:	loopne 0x402ec0
  402f19:	pushf  
  402f1a:	mov    ecx,DWORD PTR [ebx]
  402f1c:	push   ds
  402f1d:	sub    al,0xbb
  402f1f:	xchg   esi,eax
  402f20:	sti    
  402f21:	jp     0x402ec4
  402f23:	and    al,0x40
  402f25:	data16 jnp 0x402f94
  402f28:	and    al,0x46
  402f2a:	dec    edx
  402f2b:	mov    ch,0xb2
  402f2d:	sar    DWORD PTR [edi],1
  402f2f:	jecxz  0x402ebe
  402f31:	sub    al,0xd1
  402f33:	add    eax,0xf1c3a37c
  402f38:	sub    eax,eax
  402f3a:	xlat   BYTE PTR ds:[ebx]
  402f3b:	dec    edi
  402f3c:	ror    eax,0xdc
  402f3f:	ins    DWORD PTR es:[edi],dx
  402f40:	es push cs
  402f42:	sbb    DWORD PTR [ebp+0x74],esp
  402f45:	ror    BYTE PTR [edi+0x5f],0x52
  402f49:	ja     0x402f71
  402f4b:	scas   al,BYTE PTR es:[edi]
  402f4c:	outs   dx,DWORD PTR ds:[esi]
  402f4d:	retf   0x9041
  402f50:	stos   BYTE PTR es:[edi],al
  402f51:	ror    ch,1
  402f53:	or     dl,BYTE PTR [edx]
  402f55:	ds retf 
  402f57:	xchg   edi,eax
  402f58:	push   esp
  402f59:	sbb    dh,BYTE PTR [ecx+0x57ed534c]
  402f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f60:	lahf   
  402f61:	pop    edx
  402f62:	mov    cl,0xd4
  402f64:	sbb    BYTE PTR [ebp-0xc57e640],cl
  402f6a:	stos   BYTE PTR es:[edi],al
  402f6b:	adc    eax,0x4cd1bdf0
  402f70:	or     al,0x59
  402f72:	mov    bl,0xdb
  402f74:	mov    DWORD PTR [edi],ecx
  402f76:	pop    esp
  402f77:	lahf   
  402f78:	and    ecx,DWORD PTR [edx]
  402f7a:	push   di
  402f7c:	das    
  402f7d:	(bad)  
  402f7f:	cld    
  402f80:	sbb    al,0x95
  402f82:	or     ebp,DWORD PTR [ebx]
  402f84:	mov    esp,0x9d6c61f3
  402f89:	lods   eax,DWORD PTR ds:[esi]
  402f8a:	xchg   esp,edi
  402f8c:	jle    0x402fed
  402f8e:	sub    ch,BYTE PTR [ebp+0x2e21800]
  402f94:	sub    eax,0x577951f8
  402f99:	test   BYTE PTR [ebx-0x1057d6bf],ch
  402f9f:	clc    
  402fa0:	dec    ebp
  402fa1:	sbb    eax,0x555dc6be
  402fa6:	dec    edx
  402fa7:	mov    ch,dh
  402fa9:	(bad)  
  402faa:	shl    bh,0x6a
  402fad:	or     eax,0x86744ad5
  402fb2:	fbstp  TBYTE PTR [eax]
  402fb4:	mov    WORD PTR [eax+esi*1-0x1713f11b],?
  402fbb:	scas   eax,DWORD PTR es:[edi]
  402fbc:	mov    ah,bl
  402fbe:	add    esi,eax
  402fc0:	fild   WORD PTR [edi+ebx*8+0x769889f6]
  402fc7:	xchg   BYTE PTR [ebp-0x43],dh
  402fca:	lods   al,BYTE PTR ds:[esi]
  402fcb:	dec    esi
  402fcc:	cwde   
  402fcd:	xlat   BYTE PTR ds:[ebx]
  402fce:	dec    edx
  402fcf:	xchg   edi,esi
  402fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd2:	cli    
  402fd3:	mul    BYTE PTR [ebx+0x6de58091]
  402fd9:	push   cs
  402fda:	imul   ecx,DWORD PTR [ebx+0x42614e0e],0xffffffa5
  402fe1:	mov    dl,0xbd
  402fe3:	pop    esp
  402fe4:	dec    edi
  402fe5:	mov    ebx,0xb138ff68
  402fea:	mov    ebp,0xf0b549e7
  402fef:	jmp    0x402ffc
  402ff1:	xchg   esi,eax
  402ff2:	pop    ss
  402ff3:	stos   BYTE PTR es:[edi],al
  402ff4:	mov    ecx,0xf7706a2e
  402ff9:	jmp    0xebff:0x5f14faab
  403000:	jge    0x402fd9
  403002:	sub    dh,ch
  403004:	out    dx,eax
  403005:	jp     0x40303d
  403007:	in     al,0x9a
  403009:	fld    TBYTE PTR [ebp+0x322206a6]
  40300f:	jo     0x403084
  403011:	test   al,0xa2
  403013:	xor    ecx,DWORD PTR [ebx+0x32]
  403016:	push   0xa9ec8b58
  40301b:	cmp    al,0x3
  40301d:	mov    BYTE PTR [eax],cl
  40301f:	mov    al,0x75
  403021:	cwde   
  403022:	neg    DWORD PTR fs:[ebx-0x3fc0844e]
  403029:	dec    ebx
  40302a:	sub    DWORD PTR [ebp+0x14d401be],esi
  403030:	mov    ds:0xd54d7e75,eax
  403035:	sub    esi,DWORD PTR fs:[edx]
  403038:	push   0xffffff84
  40303a:	jb     0x403022
  40303c:	lea    ebp,[edi+eax*4+0x28]
  403040:	add    bh,BYTE PTR [ebx]
  403042:	rcr    DWORD PTR [edx],0x41
  403045:	add    DWORD PTR [eax-0x19],esp
  403048:	fnstenv [eax+0x178ff42f]
  40304e:	in     al,dx
  40304f:	aam    0xdd
  403051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403052:	dec    DWORD PTR [eax]
  403054:	aas    
  403055:	dec    ecx
  403056:	repnz mov edx,DWORD PTR [eax]
  403059:	rcr    cl,1
  40305b:	push   ebp
  40305c:	pushf  
  40305d:	cmc    
  40305e:	popf   
  40305f:	adc    ah,dh
  403061:	test   al,0x67
  403063:	mov    ds:0x6e50742a,al
  403068:	aaa    
  403069:	mov    cl,0x32
  40306b:	into   
  40306c:	pop    ds
  40306d:	out    0x53,eax
  40306f:	outs   dx,DWORD PTR ds:[esi]
  403070:	rcl    BYTE PTR [edx+0x1d],1
  403073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403074:	ror    esp,1
  403076:	xor    eax,0xc01ce6c0
  40307b:	inc    esi
  40307c:	imul   edi,ebp,0x97e60292
  403082:	ret    
  403083:	ja     0x403077
  403085:	pop    esi
  403086:	add    BYTE PTR [ecx-0x28],ch
  403089:	ins    BYTE PTR es:[edi],dx
  40308a:	adc    al,0xb3
  40308c:	iret   
  40308d:	in     al,0xa9
  40308f:	ror    DWORD PTR [edx],1
  403091:	add    bh,bh
  403093:	push   es
  403094:	rol    DWORD PTR [ebx+0x22a9799d],1
  40309a:	in     al,0xa4
  40309c:	fucomi st,st(3)
  40309e:	sar    DWORD PTR [edx-0x76],0x3d
  4030a2:	aad    0xf2
  4030a4:	xor    DWORD PTR [edi],ebp
  4030a6:	push   edx
  4030a7:	add    ch,dh
  4030a9:	cwde   
  4030aa:	outs   dx,BYTE PTR ds:[esi]
  4030ab:	pop    eax
  4030ac:	enter  0x2324,0xc3
  4030b0:	inc    edx
  4030b1:	cmp    dh,bh
  4030b3:	mov    esi,0xeaf523dc
  4030b8:	mov    bh,0xc9
  4030ba:	cmp    al,0xdd
  4030bc:	(bad)  
  4030bd:	cmc    
  4030be:	xor    ebp,eax
  4030c0:	cmp    BYTE PTR [ecx],al
  4030c2:	cmp    eax,0x5bd9a3de
  4030c7:	mov    al,0x14
  4030c9:	or     bl,ch
  4030cb:	dec    ebp
  4030cc:	les    edi,FWORD PTR [ecx]
  4030ce:	xor    al,0x7b
  4030d0:	pop    edi
  4030d1:	add    DWORD PTR es:[ecx],eax
  4030d4:	test   al,0x93
  4030d6:	lock call 0xfbe3cb17
  4030dc:	jne    0x403089
  4030de:	dec    esi
  4030df:	xchg   edi,eax
  4030e0:	std    
  4030e1:	mov    cl,0x78
  4030e3:	aad    0x2e
  4030e5:	xchg   esi,eax
  4030e6:	sar    BYTE PTR [esi],1
  4030e8:	sub    eax,edx
  4030ea:	aas    
  4030eb:	xlat   BYTE PTR ds:[ebx]
  4030ec:	adc    DWORD PTR [edx+0x2e7171f6],edx
  4030f2:	leave  
  4030f3:	aas    
  4030f4:	pop    edi
  4030f5:	fisub  DWORD PTR [ecx]
  4030f7:	jg     0x4030dc
  4030f9:	jmp    0xa28d7e06
  4030fe:	mov    esp,0x71ac6c56
  403103:	repnz inc ecx
  403105:	sbb    edi,DWORD PTR [esi-0x46d4064]
  40310b:	xchg   DWORD PTR [edi-0x6649ad69],ebp
  403111:	inc    dx
  403113:	daa    
  403114:	or     ebx,edx
  403116:	fstp   DWORD PTR ds:0x2a9020e5
  40311c:	pop    edi
  40311d:	mov    ds:0x79969814,eax
  403122:	ret    
  403123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403124:	sub    BYTE PTR ss:[eax],0x6a
  403128:	cwde   
  403129:	gs out 0x46,eax
  40312c:	and    DWORD PTR [ebx+0x530336cc],esp
  403132:	(bad)
  403136:	jge    0x403157
  403138:	jb     0x4030d5
  40313a:	ins    DWORD PTR es:[edi],dx
  40313b:	inc    ecx
  40313c:	and    BYTE PTR [ebx],dh
  40313e:	jp     0x403178
  403140:	dec    edi
  403141:	jmp    0xb06d:0xd235eb1f
  403148:	(bad)  
  403149:	add    al,0xf8
  40314b:	cmp    DWORD PTR ds:0xdfa50dda,0x5532f26
  403155:	dec    eax
  403156:	push   eax
  403157:	dec    esi
  403158:	pushf  
  403159:	sbb    BYTE PTR [ecx+0x3cbb0ddb],dl
  40315f:	cmp    ah,BYTE PTR [edx-0x76603752]
  403165:	push   ebx
  403166:	int    0x94
  403168:	inc    eax
  403169:	div    dh
  40316b:	pop    ecx
  40316c:	div    ecx
  40316e:	cli    
  40316f:	adc    ah,BYTE PTR [esi-0x1f]
  403172:	sub    BYTE PTR [edx+0x0],0x3e
  403176:	xchg   ebx,eax
  403177:	(bad)  
  403178:	sbb    cl,bh
  40317a:	or     al,BYTE PTR ds:0x5f83aa9e
  403180:	xor    BYTE PTR [eax+ebp*1-0x265c25a6],dl
  403187:	shl    DWORD PTR [edi+0x7],0x86
  40318b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318c:	ret    0x277c
  40318f:	rcr    BYTE PTR [edi+0x53],1
  403192:	pop    eax
  403193:	shl    DWORD PTR [ebp-0x688c057e],0x73
  40319a:	dec    esp
  40319b:	push   cs
  40319c:	out    dx,eax
  40319d:	jge    0x403130
  40319f:	or     DWORD PTR [ebx],ebp
  4031a1:	xchg   edx,eax
  4031a2:	mov    dh,0x40
  4031a4:	mov    bh,0x51
  4031a6:	inc    esi
  4031a7:	js     0x40317a
  4031a9:	repz add dl,bl
  4031ac:	out    0xab,eax
  4031ae:	sbb    bl,BYTE PTR [edx]
  4031b0:	and    ecx,DWORD PTR [edx-0x9]
  4031b3:	imul   cl
  4031b5:	inc    esp
  4031b6:	int3   
  4031b7:	aaa    
  4031b8:	jmp    0x403192
  4031ba:	sub    eax,0x16330b2b
  4031bf:	add    DWORD PTR [esi-0x62],esi
  4031c2:	xchg   ecx,eax
  4031c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c4:	outs   dx,BYTE PTR ss:[esi]
  4031c6:	jne    0x403244
  4031c8:	xor    BYTE PTR [edi-0x2b],dh
  4031cb:	mov    bl,0x2f
  4031cd:	cmp    bh,BYTE PTR [eax]
  4031cf:	enter  0x4073,0xde
  4031d3:	add    BYTE PTR [edi-0x46e7334f],bl
  4031d9:	mov    BYTE PTR [edi-0x22],cl
  4031dc:	jmp    0x45e0:0xd491df03
  4031e3:	xor    al,0x20
  4031e5:	push   0xfffffff9
  4031e7:	dec    esp
  4031e8:	in     eax,dx
  4031e9:	repz popa 
  4031eb:	leave  
  4031ec:	xchg   esp,eax
  4031ed:	lea    esp,[ebx-0x1]
  4031f0:	daa    
  4031f1:	lea    esi,[edx+0x321aea38]
  4031f7:	stos   BYTE PTR es:[edi],al
  4031f8:	sub    esp,ebx
  4031fa:	mov    eax,es:0xcf026403
  403200:	adc    al,0x79
  403202:	int    0x6f
  403204:	push   ebx
  403205:	out    dx,al
  403206:	fnstcw WORD PTR [edi]
  403208:	cmp    DWORD PTR [ecx+0x673472b2],ebp
  40320e:	pusha  
  40320f:	mov    bh,0x5b
  403211:	call   0x95d2:0xe2dd296c
  403218:	xchg   ebx,eax
  403219:	ror    BYTE PTR [edx+0x20],0x29
  40321d:	jbe    0x4031da
  40321f:	test   DWORD PTR [esi],ebp
  403221:	mov    eax,ds:0x4cad6f83
  403226:	or     BYTE PTR [edi+0x2b0bd6ef],bh
  40322c:	push   ds
  40322d:	sub    eax,0x1d4cf55b
  403232:	dec    BYTE PTR ds:0x5c3c57ef
  403238:	aad    0x5d
  40323a:	jmp    FWORD PTR [ecx-0x47d5db25]
  403240:	cmp    al,0xc1
  403242:	dec    esi
  403243:	xchg   ecx,eax
  403244:	popa   
  403245:	and    cl,BYTE PTR [ecx+0x406c7c08]
  40324b:	scas   eax,DWORD PTR es:[edi]
  40324c:	mov    esp,0x562b2108
  403251:	in     al,dx
  403252:	mov    esi,0xdaddd83e
  403257:	leave  
  403258:	push   ds
  403259:	enter  0x7765,0x5f
  40325d:	push   ss
  40325e:	xor    eax,0x1d5679d6
  403263:	ret    0xf30a
  403266:	lea    esp,[eax+0x6a486864]
  40326c:	mov    ds:0x19d0ae06,al
  403271:	(bad)  
  403272:	daa    
  403273:	test   eax,0xce07213c
  403278:	rsm    
  40327a:	nop
  40327b:	in     al,dx
  40327c:	mov    BYTE PTR [edi+ecx*2-0x5050f06b],dl
  403283:	loopne 0x4032d6
  403285:	leave  
  403286:	dec    esp
  403287:	ret    0x15e
  40328a:	push   esp
  40328b:	(bad)  
  40328c:	(bad)  
  40328d:	test   eax,0x49ce0946
  403292:	push   eax
  403293:	(bad)  
  403294:	iret   
  403295:	les    ecx,FWORD PTR [edi-0x5d0ac711]
  40329b:	fild   QWORD PTR [edx]
  40329d:	mov    ds:0xc7cc2e50,eax
  4032a2:	inc    edi
  4032a3:	rol    BYTE PTR [edi],0x55
  4032a6:	aaa    
  4032a7:	cmp    DWORD PTR [esi+edx*1+0x5c],ecx
  4032ab:	out    0xbb,eax
  4032ad:	ret    
  4032ae:	mov    eax,0x54b2374
  4032b3:	in     eax,0xca
  4032b5:	xor    BYTE PTR [esi],ch
  4032b7:	loope  0x403282
  4032b9:	outs   dx,BYTE PTR ds:[esi]
  4032ba:	jo     0x403324
  4032bc:	inc    esi
  4032bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032be:	bound  ebp,QWORD PTR [edx]
  4032c0:	mov    ch,0x8d
  4032c2:	dec    ebx
  4032c3:	bound  ebx,QWORD PTR [edx+0x7855e36]
  4032c9:	push   edx
  4032ca:	sub    ebp,edx
  4032cc:	or     dh,0xd4
  4032cf:	ins    DWORD PTR es:[edi],dx
  4032d0:	mov    WORD PTR ds:0x15b7104c,?
  4032d6:	xor    BYTE PTR [edx],cl
  4032d8:	aad    0x6b
  4032da:	inc    ebx
  4032db:	sbb    DWORD PTR [eax],0x2d8ef450
  4032e1:	(bad)  
  4032e3:	inc    esp
  4032e4:	mov    WORD PTR ds:0x369e6ea3,?
  4032ea:	in     al,0x56
  4032ec:	not    DWORD PTR [eax]
  4032ee:	and    DWORD PTR [edx+esi*4-0x3c6600fd],0xffffff91
  4032f6:	cmp    eax,0x4a7fdd76
  4032fb:	sbb    eax,0xa9064ae5
  403300:	cmp    eax,0xc9e9fcf2
  403305:	inc    edx
  403306:	jae    0x403309
  403308:	and    al,0xd0
  40330a:	add    edx,ebx
  40330c:	push   0x3b
  40330e:	sub    BYTE PTR [ebx+0x3cd86971],ah
  403314:	test   al,0xa8
  403316:	mov    ebp,0x6d82dbd6
  40331b:	stos   BYTE PTR es:[edi],al
  40331c:	aaa    
  40331d:	and    ch,0xbb
  403320:	leave  
  403321:	jo     0x4032ea
  403323:	and    DWORD PTR [edx-0x57],ecx
  403326:	aad    0xc7
  403328:	gs lahf 
  40332a:	sub    al,BYTE PTR [ecx]
  40332c:	fwait
  40332d:	pop    esp
  40332e:	dec    ecx
  40332f:	mov    esp,0xeef86282
  403334:	dec    esp
  403335:	add    BYTE PTR ds:0xbfb1531f,dl
  40333b:	int3   
  40333c:	cmc    
  40333d:	xchg   esi,eax
  40333e:	(bad)  
  403340:	nop
  403341:	xchg   esp,eax
  403342:	lock jnp 0x40331d
  403345:	mov    cl,0xb6
  403347:	daa    
  403348:	stos   BYTE PTR es:[edi],al
  403349:	lock cmc 
  40334b:	clc    
  40334c:	sub    BYTE PTR [ecx+0x121bbed0],ch
  403352:	and    DWORD PTR [ebp-0x7b],edx
  403355:	or     esi,DWORD PTR [edx-0x24]
  403358:	push   DWORD PTR [eax+0x17056acf]
  40335e:	mov    bh,0x2f
  403360:	inc    ebx
  403361:	xor    bh,al
  403363:	mov    eax,DWORD PTR [ebx+0x4db523d0]
  403369:	push   es
  40336a:	aas    
  40336b:	cld    
  40336c:	icebp  
  40336d:	xchg   DWORD PTR [ecx+0x43d80843],eax
  403373:	cmp    esi,eax
  403375:	out    0xf8,eax
  403377:	jns    0x4032fa
  403379:	xchg   ebx,eax
  40337a:	popa   
  40337b:	inc    ecx
  40337c:	(bad)  
  40337d:	jl     0x40338f
  40337f:	addr16 mov dl,0xf1
  403382:	xchg   esi,eax
  403383:	nop/reserved BYTE PTR [ebx+0x14]
  403387:	push   ds
  403388:	xor    esp,edi
  40338a:	aas    
  40338b:	push   ss
  40338c:	in     al,0x4
  40338e:	mov    ecx,DWORD PTR [esi+ecx*1]
  403391:	ret    
  403392:	inc    eax
  403393:	retf   0xb5d9
  403396:	push   esi
  403397:	pusha  
  403398:	mov    ds:0xf6f4ed3,al
  40339d:	push   ebp
  40339e:	push   edx
  40339f:	xchg   BYTE PTR [ebp+0x5c],ch
  4033a2:	mov    cl,0x64
  4033a4:	xchg   ebp,eax
  4033a5:	loop   0x403328
  4033a7:	jbe    0x4033bb
  4033a9:	ror    dh,1
  4033ab:	mov    al,0x94
  4033ad:	mov    WORD PTR [edi+0x6f],?
  4033b0:	push   es
  4033b1:	or     ah,BYTE PTR ds:0xee5f05f6
  4033b7:	(bad)  [ebx]
  4033b9:	pop    es
  4033ba:	mov    esp,0xdab3c903
  4033bf:	cmp    bl,al
  4033c1:	dec    esp
  4033c2:	stos   BYTE PTR es:[edi],al
  4033c3:	fild   WORD PTR [ecx-0x39]
  4033c6:	mov    dh,0x1c
  4033c8:	jo     0x4033e6
  4033ca:	inc    ah
  4033cc:	adc    eax,0x17e16ed9
  4033d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033d2:	sbb    BYTE PTR [edx-0x24815d25],cl
  4033d8:	add    eax,0xc9deb5a3
  4033dd:	out    0xb3,eax
  4033df:	xchg   edx,eax
  4033e0:	out    dx,eax
  4033e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e4:	and    al,0x58
  4033e6:	popa   
  4033e7:	jo     0x4033f9
  4033e9:	adc    edi,ebp
  4033eb:	addr16 mov eax,0xdf29fcae
  4033f1:	fmul   QWORD PTR [ebp-0x2e]
  4033f4:	cmp    BYTE PTR [esi-0x25],bl
  4033f7:	or     BYTE PTR [ebx-0x1bd310bf],dh
  4033fd:	fsubr  st,st(3)
  4033ff:	jg     0x4033cf
  403401:	mov    ch,0x2d
  403403:	pop    ds
  403404:	dec    ecx
  403405:	fdivr  DWORD PTR [edi]
  403407:	fst    DWORD PTR [edi]
  403409:	hlt    
  40340a:	and    ch,BYTE PTR [edx-0x24]
  40340d:	and    al,0x70
  40340f:	ret    0xd838
  403412:	jle    0x40345b
  403414:	cmp    ch,BYTE PTR [edi+ebx*4]
  403417:	mov    ah,0xa0
  403419:	push   es
  40341a:	loop   0x4033b9
  40341c:	loope  0x403441
  40341e:	retf   
  40341f:	dec    esi
  403420:	nop
  403421:	popa   
  403422:	adc    esp,edx
  403424:	rol    DWORD PTR [esi-0x70b52373],1
  40342a:	add    bh,BYTE PTR [ecx-0x74]
  40342d:	add    DWORD PTR [ebx-0x3e],ecx
  403430:	push   es
  403431:	daa    
  403432:	mov    ds:0x9b9d1659,eax
  403437:	jns    0x403434
  403439:	ret    0x87b5
  40343c:	pop    ebx
  40343d:	imul   edx,DWORD PTR [esi-0x7373ca27],0xd2591793
  403447:	sub    ebp,esi
  403449:	push   ss
  40344a:	mov    edi,0x3764b3ff
  40344f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403450:	jmp    0x4ce3:0x60c75a50
  403457:	int3   
  403458:	dec    edx
  403459:	adc    BYTE PTR [esi+0x65],0x14
  40345d:	jb     0x4033e1
  40345f:	xchg   edi,eax
  403460:	ret    0x5ccc
  403463:	adc    edi,esi
  403465:	and    BYTE PTR [ecx-0x71],0xf5
  403469:	(bad)  
  40346a:	stc    
  40346b:	dec    eax
  40346c:	call   0x4b18:0x4f3ac588
  403473:	sahf   
  403474:	loop   0x4033ff
  403476:	sahf   
  403477:	jbe    0x40345c
  403479:	xor    al,0xe9
  40347b:	addr16 and al,0x95
  40347e:	cdq    
  40347f:	gs mov ah,0xaa
  403482:	imul   eax,DWORD PTR [ebp+0x49],0x5c
  403486:	ss adc dh,cl
  403489:	xchg   BYTE PTR [edi-0x16],al
  40348c:	xchg   ebp,ecx
  40348e:	mov    edi,gs
  403490:	(bad)  
  403491:	data16 jl 0x403482
  403494:	int3   
  403495:	push   ecx
  403496:	nop
  403497:	(bad)  
  403498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403499:	clc    
  40349a:	cmp    BYTE PTR [edx],0xf9
  40349d:	rol    ch,1
  40349f:	inc    esp
  4034a0:	dec    esp
  4034a1:	mov    ah,0x77
  4034a3:	sahf   
  4034a4:	inc    eax
  4034a5:	loopne 0x403478
  4034a7:	je     0x403435
  4034a9:	add    BYTE PTR [ecx+eax*2+0x668f7162],ch
  4034b0:	dec    esi
  4034b1:	test   BYTE PTR [ecx-0x38336a40],cl
  4034b7:	ins    DWORD PTR es:[edi],dx
  4034b8:	push   0xffffffb3
  4034ba:	or     BYTE PTR [ebp+0x3ed94887],dl
  4034c0:	mov    bl,0x20
  4034c2:	pop    esi
  4034c3:	movlps QWORD PTR [ebp-0x3f],xmm3
  4034c7:	and    eax,0xba1c17ca
  4034cc:	iret   
  4034cd:	ins    BYTE PTR es:[edi],dx
  4034ce:	push   ss
  4034cf:	dec    eax
  4034d0:	into   
  4034d1:	iret   
  4034d2:	cmp    eax,0xddb05d0f
  4034d7:	ins    DWORD PTR es:[edi],dx
  4034d8:	mov    DWORD PTR [ecx+0x2927afd4],edx
  4034de:	test   al,0xf
  4034e0:	mov    bl,0xa6
  4034e2:	rcl    bh,cl
  4034e4:	das    
  4034e5:	add    eax,0xef39a2d5
  4034ea:	pop    eax
  4034eb:	or     ebp,DWORD PTR [eax]
  4034ed:	mov    al,0xcb
  4034ef:	mov    esp,0x6c54dac3
  4034f4:	jae    0x40352a
  4034f6:	mov    al,0x58
  4034f8:	retf   
  4034f9:	jecxz  0x4034d5
  4034fb:	mov    DWORD PTR [ecx+0x121b2939],edi
  403501:	imul   ebx,eax,0x52
  403504:	(bad)
  403507:	inc    esp
  403508:	movups xmm7,XMMWORD PTR fs:[ebp-0x381c3aa2]
  403510:	mov    ds:0xc94542d,al
  403515:	cdq    
  403516:	ffree  st(1)
  403518:	clc    
  403519:	outs   dx,DWORD PTR ds:[esi]
  40351a:	pop    edi
  40351b:	int3   
  40351c:	cmp    BYTE PTR [ecx],bl
  40351e:	stos   DWORD PTR es:[edi],eax
  40351f:	mov    eax,0xa73c6ce9
  403524:	in     eax,0xd4
  403526:	sub    cl,BYTE PTR [eax-0x34]
  403529:	pusha  
  40352a:	or     BYTE PTR [edi-0x67362dbf],cl
  403530:	sub    eax,0xc24cb847
  403535:	jmp    0xff0a311a
  40353a:	loop   0x403549
  40353c:	adc    bl,BYTE PTR [ebp+0x11c44e36]
  403542:	pop    edi
  403543:	and    eax,0x9279b70a
  403548:	xor    DWORD PTR [edi+0x31],ecx
  40354b:	addr16 (bad) 
  40354d:	cmp    ebp,DWORD PTR ds:0xa075ac8e
  403553:	xor    al,0x8f
  403555:	push   ebp
  403556:	jbe    0x4035a4
  403558:	sub    dh,ch
  40355a:	hlt    
  40355b:	int    0xa
  40355d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40355e:	pop    esi
  40355f:	ds stos DWORD PTR es:[edi],eax
  403561:	popa   
  403562:	mov    eax,ds:0xbf78b721
  403567:	popa   
  403568:	fs inc esi
  40356a:	xor    eax,0xb41c2861
  40356f:	aad    0x14
  403571:	sbb    dl,BYTE PTR [eax+0x7b1be280]
  403577:	add    eax,DWORD PTR [edx]
  403579:	cmc    
  40357a:	hlt    
  40357b:	mov    esp,DWORD PTR [eax-0x4c632504]
  403581:	mov    ebx,0x338a067d
  403586:	ficomp DWORD PTR [eax-0x19]
  403589:	in     eax,0x44
  40358b:	mov    bh,0xbd
  40358d:	xor    DWORD PTR [ebx+0x3a],esp
  403590:	cmp    eax,0xac467523
  403595:	cmp    BYTE PTR [eax],dl
  403597:	pusha  
  403598:	inc    ecx
  403599:	xchg   ebx,eax
  40359a:	push   es
  40359b:	or     al,0x61
  40359d:	scas   al,BYTE PTR es:[edi]
  40359e:	push   ds
  40359f:	les    edx,FWORD PTR [eax+eax*4]
  4035a2:	sbb    DWORD PTR [ecx+edi*4-0x77],ebx
  4035a6:	adc    edx,DWORD PTR [esi-0x3c8ca82f]
  4035ac:	mov    ebp,0x56c7406
  4035b1:	dec    esi
  4035b2:	cld    
  4035b3:	js     0x4035da
  4035b5:	and    edx,edi
  4035b7:	inc    edi
  4035b8:	(bad)  
  4035b9:	jl     0x40360b
  4035bb:	lods   eax,DWORD PTR ds:[esi]
  4035bc:	pop    eax
  4035bd:	cmp    BYTE PTR [esi+0x31a66533],ch
  4035c3:	adc    al,0x2d
  4035c5:	adc    eax,0xb02f7ec
  4035ca:	push   cs
  4035cb:	sar    DWORD PTR [ebp+0x22c1c60e],0x26
  4035d2:	in     al,dx
  4035d3:	jnp    0x403645
  4035d5:	pop    edx
  4035d6:	hlt    
  4035d7:	xchg   esp,eax
  4035d8:	and    eax,DWORD PTR [ecx-0x15]
  4035db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035dc:	push   ds
  4035dd:	dec    BYTE PTR [ecx]
  4035df:	jo     0x4035e0
  4035e1:	fild   QWORD PTR [eax+0x21]
  4035e4:	out    dx,al
  4035e5:	inc    esi
  4035e6:	and    edi,edx
  4035e8:	call   DWORD PTR [edx+0x4a6361f2]
  4035ee:	sar    BYTE PTR [esi],0x2f
  4035f1:	push   ds
  4035f2:	mov    BYTE PTR ds:0xcba9b7a4,ch
  4035f8:	add    al,0xc7
  4035fa:	mov    bh,0xe3
  4035fc:	hlt    
  4035fd:	outs   dx,BYTE PTR ds:[esi]
  4035fe:	adc    edi,DWORD PTR [esi+eax*8]
  403601:	or     bl,BYTE PTR [edi+0x5532ff7d]
  403607:	xor    BYTE PTR [ecx],cl
  403609:	xchg   ebx,eax
  40360a:	inc    edx
  40360b:	xchg   ecx,eax
  40360c:	sbb    bh,BYTE PTR [eax-0xd22f2fb]
  403612:	iret   
  403613:	mov    dl,BYTE PTR [eax-0x4fddb033]
  403619:	jae    0x4035e6
  40361b:	or     BYTE PTR [ebx+0x67],dh
  40361e:	call   0xca21642f
  403623:	call   0xed94af19
  403628:	pop    edi
  403629:	dec    ebp
  40362a:	mov    esi,0x2a8c0f91
  40362f:	retf   
  403630:	xor    al,0x96
  403632:	add    cl,BYTE PTR ds:0xa008b457
  403638:	sbb    al,0x2d
  40363a:	retf   
  40363b:	inc    edi
  40363c:	adc    edx,esi
  40363e:	lea    ecx,ds:0xa56f9532
  403644:	cdq    
  403645:	rcl    DWORD PTR [ebx],0x18
  403648:	fs mov ebp,0xc2ad3b10
  40364e:	mov    bh,0xe6
  403650:	xor    BYTE PTR [ebp-0x3cfb754],al
  403656:	hlt    
  403657:	inc    ah
  403659:	mov    bl,0x73
  40365b:	inc    ebx
  40365c:	mov    ds:0x1ec878a3,eax
  403661:	or     eax,0x36211cfb
  403666:	aam    0x93
  403668:	xchg   esp,eax
  403669:	xor    DWORD PTR [ebx-0x3f336fc],0x55dfbbbb
  403673:	cmp    DWORD PTR [eax-0x44],0x473066b7
  40367a:	mov    ds:0xec3fce15,al
  40367f:	or     DWORD PTR [ebp+0x7c9bb01c],ebx
  403685:	fistp  WORD PTR [ecx+0x6b5cba38]
  40368b:	inc    eax
  40368c:	mov    al,0xf0
  40368e:	stos   DWORD PTR es:[edi],eax
  40368f:	xchg   BYTE PTR [ebx+0x56],ah
  403692:	or     eax,0x46862fad
  403697:	inc    ebx
  403698:	enter  0xa354,0xa3
  40369c:	cmp    ebp,DWORD PTR [ebx-0x3716051f]
  4036a2:	inc    edi
  4036a3:	jmp    0xaea8830c
  4036a8:	ins    BYTE PTR es:[edi],dx
  4036a9:	scas   eax,DWORD PTR es:[edi]
  4036aa:	mov    esp,0x1afe49e1
  4036af:	fdivr  QWORD PTR [edx]
  4036b1:	dec    ebp
  4036b2:	push   esi
  4036b3:	sbb    dh,BYTE PTR [esi+0x68]
  4036b6:	push   cs
  4036b7:	cmc    
  4036b8:	bound  ebp,QWORD PTR [ebp-0x7b9d74a4]
  4036be:	sbb    al,0x8b
  4036c0:	adc    al,0x76
  4036c2:	jns    0x40371c
  4036c4:	dec    esp
  4036c5:	test   al,0x83
  4036c7:	or     BYTE PTR [edi+0x7f5631d4],cl
  4036cd:	pop    edi
  4036ce:	fimul  WORD PTR [edi+0x33ac7438]
  4036d4:	mov    BYTE PTR [edx-0xf],bh
  4036d7:	in     eax,0x44
  4036d9:	ffreep st(2)
  4036db:	or     esp,DWORD PTR [ecx]
  4036dd:	frstor [esp+ebp*4]
  4036e0:	aad    0xbc
  4036e2:	xchg   edx,eax
  4036e3:	xchg   ebp,eax
  4036e4:	pop    ecx
  4036e5:	neg    BYTE PTR [ebp-0x37b61cc6]
  4036eb:	dec    edi
  4036ec:	dec    esp
  4036ed:	sbb    bh,BYTE PTR [esp+ebp*2+0xd]
  4036f1:	(bad)  
  4036f2:	std    
  4036f3:	sahf   
  4036f4:	sahf   
  4036f5:	and    al,0x74
  4036f7:	pop    eax
  4036f8:	cmp    cl,ah
  4036fa:	ror    ah,0xe3
  4036fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036fe:	mov    bh,0x83
  403700:	push   edi
  403701:	mov    esp,edx
  403703:	xchg   ebx,eax
  403704:	ror    BYTE PTR [ebx],0xa9
  403707:	ss (bad) 
  403709:	popf   
  40370a:	mov    BYTE PTR [eiz*4+0x480a422a],dl
  403711:	or     al,0x39
  403713:	mov    fs,WORD PTR [edx-0x365c48c]
  403719:	aas    
  40371a:	and    DWORD PTR [edx],ebx
  40371c:	pop    ecx
  40371d:	push   ds
  40371e:	adc    ecx,eax
  403720:	mov    bl,0x9d
  403722:	sub    DWORD PTR [ebx+0x63861190],eax
  403728:	sub    esi,edx
  40372a:	push   ss
  40372b:	and    ah,BYTE PTR [ebx+0x39]
  40372e:	add    eax,0x62c656d9
  403733:	fmul   st(6),st
  403735:	ins    BYTE PTR es:[edi],dx
  403736:	jmp    0xce1b974c
  40373b:	push   ecx
  40373c:	test   DWORD PTR [ecx],0xb069d178
  403742:	aaa    
  403743:	jo     0x4037a0
  403745:	jmp    0x5fbf7190
  40374a:	lock pop ebp
  40374c:	enter  0xad96,0x1
  403750:	retf   
  403751:	(bad)  
  403752:	dec    esp
  403753:	push   cs
  403754:	mov    bl,0x31
  403756:	leave  
  403757:	fsubr  DWORD PTR ds:0x58b0f77c
  40375d:	aas    
  40375e:	pop    edx
  40375f:	inc    edx
  403760:	sar    DWORD PTR [ebp+0x32],1
  403763:	das    
  403764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403765:	xor    al,0xcb
  403767:	and    esp,DWORD PTR [eax+0xbaa1156]
  40376d:	sar    DWORD PTR [esi-0x445f6524],1
  403773:	js     0x403791
  403775:	sub    al,0x64
  403777:	out    dx,al
  403778:	cdq    
  403779:	xchg   esp,eax
  40377a:	sbb    bl,BYTE PTR [esi+0x39fb4b3e]
  403780:	mov    bh,0x29
  403782:	stc    
  403783:	sar    ebx,1
  403785:	hlt    
  403786:	shl    ah,1
  403788:	div    al
  40378a:	and    BYTE PTR [eax],dh
  40378c:	mov    ebp,0x38b64def
  403791:	inc    ebx
  403792:	dec    edi
  403793:	ja     0x403787
  403795:	cld    
  403796:	aam    0xe1
  403798:	and    dh,dh
  40379a:	jge    0x4037fd
  40379c:	mov    ecx,0x312d1061
  4037a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037a2:	push   ebp
  4037a3:	ret    
  4037a4:	mov    al,ds:0x91c0a45f
  4037a9:	shl    edi,cl
  4037ab:	dec    ebp
  4037ac:	dec    eax
  4037ad:	inc    edi
  4037ae:	pop    ss
  4037af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037b1:	fwait
  4037b2:	lods   eax,DWORD PTR ds:[esi]
  4037b3:	push   edx
  4037b4:	push   0xa245f476
  4037b9:	or     BYTE PTR [ecx],dh
  4037bb:	cs mov al,0xac
  4037be:	add    DWORD PTR [edi-0x399315c8],esp
  4037c4:	mov    bh,bl
  4037c6:	or     eax,0x88e683f
  4037cb:	out    dx,eax
  4037cc:	shr    eax,1
  4037ce:	inc    edx
  4037cf:	inc    ecx
  4037d0:	and    DWORD PTR [edx+eax*8-0x22ec2b45],ebx
  4037d7:	inc    ebp
  4037d8:	iret   
  4037d9:	add    al,0x7a
  4037db:	or     eax,DWORD PTR [edi]
  4037dd:	fmul   DWORD PTR ds:0xdc9d8e6c
  4037e3:	adc    DWORD PTR ds:0xb716c69e,edi
  4037e9:	cld    
  4037ea:	pop    esi
  4037eb:	jne    0x403791
  4037ed:	pop    ebp
  4037ee:	mov    WORD PTR [ebx-0x72],ds
  4037f1:	cdq    
  4037f2:	popa   
  4037f3:	sbb    bh,BYTE PTR [edi+0x61cae736]
  4037f9:	sbb    edx,ecx
  4037fb:	add    dl,BYTE PTR [eax+ebp*8]
  4037fe:	mov    edx,0xbb475205
  403803:	add    al,0xea
  403805:	or     BYTE PTR [edx-0x2a03c6a5],bl
  40380b:	pop    ss
  40380c:	inc    ecx
  40380d:	jp     0x4037a1
  40380f:	jmp    0xba98659c
  403814:	cwde   
  403815:	mov    esp,0xc6633257
  40381a:	push   edx
  40381b:	std    
  40381c:	dec    esi
  40381d:	jge    0x4037d8
  40381f:	shr    DWORD PTR [edi-0x1b1db830],1
  403825:	jns    0x4037c5
  403827:	mov    al,0xfa
  403829:	xor    al,0x64
  40382b:	push   edi
  40382c:	pop    edi
  40382d:	inc    edx
  40382e:	(bad)  
  40382f:	shl    BYTE PTR [ecx-0x3a7b9f1b],1
  403835:	dec    eax
  403836:	in     al,0x6f
  403838:	mov    dl,0x59
  40383a:	jmp    0x4037fb
  40383c:	dec    esi
  40383d:	pop    edx
  40383e:	cmp    bh,ah
  403840:	pop    ebp
  403841:	sbb    esp,DWORD PTR ss:[ebp+ecx*1-0x75]
  403846:	xchg   esi,eax
  403847:	lods   eax,DWORD PTR ds:[esi]
  403848:	adc    al,BYTE PTR [ebp-0xd]
  40384b:	loopne 0x403844
  40384d:	xchg   ebx,eax
  40384e:	cmp    al,0x3f
  403850:	stos   BYTE PTR es:[edi],al
  403851:	jmp    0xb95179ea
  403856:	mov    dl,0xf9
  403858:	sbb    esi,DWORD PTR [ecx]
  40385a:	or     al,0xeb
  40385c:	sbb    BYTE PTR [eax+ebp*1+0x2ede751e],cl
  403863:	ds push cs
  403865:	cli    
  403866:	sbb    bl,al
  403868:	xchg   esi,eax
  403869:	dec    ebp
  40386a:	push   eax
  40386b:	jmp    0x403840
  40386d:	jg     0x4038ab
  40386f:	jae    0x4038a9
  403871:	sar    BYTE PTR [eax+0x53],0xa5
  403875:	outs   dx,DWORD PTR ds:[esi]
  403876:	mov    eax,ds:0xb4496c88
  40387b:	fnstcw WORD PTR [ecx]
  40387d:	pop    esp
  40387e:	jnp    0x40385d
  403880:	xchg   edx,eax
  403881:	sbb    BYTE PTR cs:[ecx],dh
  403884:	or     al,0xce
  403886:	sahf   
  403887:	in     eax,0xac
  403889:	mov    edx,0x95fc5f06
  40388e:	xor    ch,0xcb
  403891:	xchg   dh,cl
  403893:	jp     0x403866
  403895:	inc    ecx
  403896:	push   0xb570de5
  40389b:	rcl    BYTE PTR [esi-0x50],1
  40389e:	adc    bl,dh
  4038a0:	mov    dh,BYTE PTR [ecx+edi*8+0x3795cccb]
  4038a7:	stos   DWORD PTR es:[edi],eax
  4038a8:	ja     0x403888
  4038aa:	mov    DWORD PTR [edx],esi
  4038ac:	test   ecx,esi
  4038ae:	mov    esp,es
  4038b0:	xlat   BYTE PTR ds:[ebx]
  4038b1:	adc    cl,BYTE PTR ds:0xd29f5655
  4038b7:	aad    0x72
  4038b9:	pop    es
  4038ba:	mov    ebp,0x28a4ab72
  4038bf:	stc    
  4038c0:	inc    esi
  4038c1:	jae    0x403852
  4038c3:	jnp    0x4038d3
  4038c5:	or     ebp,esi
  4038c7:	or     BYTE PTR [eax+0x69348ac7],dl
  4038cd:	xchg   edx,eax
  4038ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038cf:	xchg   DWORD PTR [esi+0x3c8d9d3],esp
  4038d5:	inc    esp
  4038d6:	mov    ds,edi
  4038d8:	mov    al,ds:0xfdc50331
  4038dd:	in     al,dx
  4038de:	aaa    
  4038df:	iret   
  4038e0:	stos   BYTE PTR es:[edi],al
  4038e1:	out    0x83,al
  4038e3:	sub    al,BYTE PTR [edi-0x22]
  4038e6:	cld    
  4038e7:	dec    edi
  4038e8:	jmp    0x590c2572
  4038ed:	in     eax,dx
  4038ee:	sbb    BYTE PTR [ecx+0x691493d9],0x12
  4038f5:	jo     0x4038d0
  4038f7:	adc    eax,0xad4cfa3
  4038fc:	sub    al,0x2c
  4038fe:	mov    gs,WORD PTR [ebp+0xf]
  403901:	inc    esi
  403902:	xor    al,0x8e
  403904:	outs   dx,BYTE PTR ds:[esi]
  403905:	xor    BYTE PTR [edx],ch
  403907:	cmp    esi,DWORD PTR [eax+esi*8]
  40390a:	push   ebp
  40390b:	mov    bh,0x42
  40390d:	stos   DWORD PTR es:[edi],eax
  40390e:	and    edx,eax
  403910:	inc    ebx
  403911:	not    DWORD PTR [eax]
  403913:	pop    edx
  403914:	mov    edi,es
  403916:	ror    cl,cl
  403918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403919:	dec    edx
  40391a:	mov    cl,0xf6
  40391c:	imul   DWORD PTR [ecx+0x61c3e71d]
  403922:	adc    ecx,DWORD PTR [ecx+0x2c425388]
  403928:	rcl    DWORD PTR [edx-0x3f],1
  40392b:	inc    eax
  40392c:	mov    cs,WORD PTR [ecx-0x42ca774e]
  403932:	fisubr DWORD PTR [esi-0x70f5a78f]
  403938:	int3   
  403939:	imul   esp,DWORD PTR [edx+0x53],0x31d4a68f
  403940:	stos   BYTE PTR es:[edi],al
  403941:	xor    cl,BYTE PTR ds:[edx]
  403944:	push   ss
  403945:	mov    cl,0xdf
  403947:	add    al,0x95
  403949:	fiadd  DWORD PTR [eax]
  40394b:	xor    eax,0x451a70c1
  403950:	je     0x40396e
  403952:	push   ebx
  403953:	jle    0x40393a
  403955:	lea    edi,[ebx+0x6b]
  403958:	push   ds
  403959:	jmp    0x4039c2
  40395b:	test   BYTE PTR ds:0xa1504bf2,ah
  403961:	retf   
  403962:	inc    esi
  403963:	out    0x34,al
  403965:	dec    esp
  403966:	push   ebp
  403967:	es cdq 
  403969:	jnp    0x4039c1
  40396b:	xchg   bl,dh
  40396d:	repz cmp edx,edx
  403970:	test   al,0x46
  403972:	adc    DWORD PTR [edx-0x49b309b1],esi
  403978:	and    al,0x2
  40397a:	out    0x8e,eax
  40397c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40397d:	scas   al,BYTE PTR es:[edi]
  40397e:	dec    esi
  40397f:	gs jb  0x403948
  403982:	xor    al,0xcb
  403984:	sti    
  403985:	repz ret 0x390f
  403989:	cmp    al,al
  40398b:	sub    ecx,DWORD PTR [edi]
  40398d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40398e:	(bad)  
  40398f:	pop    es
  403990:	out    dx,eax
  403991:	adc    eax,0xb882f811
  403996:	push   cs
  403997:	xor    ebx,DWORD PTR [ecx*8+0x310b1401]
  40399e:	mov    dh,ah
  4039a0:	jmp    0x610a35a
  4039a5:	aam    0x54
  4039a7:	dec    eax
  4039a8:	je     0x40393d
  4039aa:	loopne 0x40394b
  4039ac:	inc    al
  4039ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039af:	adc    al,0x4e
  4039b1:	lods   eax,DWORD PTR ds:[esi]
  4039b2:	hlt    
  4039b3:	adc    ebp,0x9e64eccc
  4039b9:	iret   
  4039ba:	mov    cl,0xf
  4039bc:	push   ss
  4039bd:	mov    ebx,DWORD PTR [edx-0x2a]
  4039c0:	fcmovnb st,st(6)
  4039c2:	ja     0x4039f7
  4039c4:	sbb    al,0x36
  4039c6:	push   ebx
  4039c7:	std    
  4039c8:	lahf   
  4039c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ca:	(bad)  
  4039cb:	(bad)  
  4039cc:	cld    
  4039cd:	inc    esi
  4039ce:	or     dh,BYTE PTR [ecx]
  4039d0:	aaa    
  4039d1:	outs   dx,DWORD PTR ds:[esi]
  4039d2:	mov    esp,0x8a9b2e34
  4039d7:	adc    DWORD PTR [edx-0x15e23d77],edx
  4039dd:	cli    
  4039de:	inc    esp
  4039df:	inc    edx
  4039e0:	jo     0x403a40
  4039e2:	mov    ebp,0x34fcf697
  4039e7:	ja     0x4039fe
  4039e9:	ds and edi,ebp
  4039ec:	sbb    ebp,0xffffff9d
  4039ef:	inc    esi
  4039f0:	or     al,0xb6
  4039f2:	mov    WORD PTR [edx-0x37],fs
  4039f5:	fdiv   QWORD PTR [edx+0x8]
  4039f8:	lds    eax,FWORD PTR [edx+0x6e]
  4039fb:	mov    ebp,0x81acb92d
  403a00:	and    bl,0x5a
  403a03:	scas   al,BYTE PTR es:[edi]
  403a04:	adc    eax,0x22ff83d4
  403a09:	aam    0xa1
  403a0b:	sub    bl,dl
  403a0d:	adc    ch,BYTE PTR [ecx]
  403a0f:	test   al,0xc9
  403a11:	(bad)  
  403a12:	nop
  403a13:	retf   
  403a14:	inc    eax
  403a15:	test   DWORD PTR [esi+0x73],0x95d310f1
  403a1c:	jmp    0xfbb9:0x101c2ad4
  403a23:	mov    bh,0xb
  403a25:	inc    eax
  403a26:	add    eax,0x1df4a26b
  403a2b:	push   ebx
  403a2c:	and    DWORD PTR [ebp+0x60],eax
  403a2f:	or     dl,cl
  403a31:	adc    BYTE PTR [esi-0x1e],bh
  403a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a35:	scas   al,BYTE PTR es:[edi]
  403a36:	push   edx
  403a37:	test   ebx,ebx
  403a39:	mov    bl,0x9d
  403a3b:	sbb    esp,DWORD PTR [eax]
  403a3d:	rcl    DWORD PTR [ebp+0x38],cl
  403a40:	or     eax,0xd0053c8f
  403a45:	test   al,0x64
  403a47:	and    al,0x4
  403a49:	repnz pop ebp
  403a4b:	int    0x32
  403a4d:	cld    
  403a4e:	pop    edi
  403a4f:	xchg   BYTE PTR [edi+ecx*8],cl
  403a52:	jmp    0x403a5d
  403a54:	inc    edx
  403a55:	fld    QWORD PTR [edx-0x8]
  403a58:	ret    
  403a59:	neg    BYTE PTR [ecx+0x7c49366a]
  403a5f:	cdq    
  403a60:	mov    eax,ds:0xf5eb8115
  403a65:	std    
  403a66:	dec    esp
  403a67:	dec    edx
  403a68:	js     0x403a41
  403a6a:	xchg   edi,eax
  403a6b:	jmp    0x403a4e
  403a6d:	push   ebp
  403a6e:	icebp  
  403a6f:	fmul   DWORD PTR [esi]
  403a71:	in     al,0x71
  403a73:	or     ebx,ecx
  403a75:	bound  esp,QWORD PTR [edx]
  403a77:	or     cl,BYTE PTR [esp+ebp*1]
  403a7a:	sbb    esi,DWORD PTR [edx]
  403a7c:	mul    BYTE PTR [eax]
  403a7e:	add    BYTE PTR [edi],0xbf
  403a81:	xchg   edi,eax
  403a82:	jb     0x403a0b
  403a84:	inc    edx
  403a85:	push   edx
  403a86:	std    
  403a87:	mov    dl,0x32
  403a89:	mov    eax,0x1feb822d
  403a8e:	lods   eax,DWORD PTR ds:[esi]
  403a8f:	sub    BYTE PTR [ecx+0x65ee33ce],ch
  403a95:	es addr16 (bad) 
  403a99:	arpl   WORD PTR [ecx+0x0],sp
  403a9c:	test   edi,edi
  403a9e:	mov    ebx,0x6cada00
  403aa3:	out    dx,eax
  403aa4:	xchg   BYTE PTR ds:0x2d88653a,dh
  403aaa:	retf   
  403aab:	jbe    0x403a63
  403aad:	cmp    BYTE PTR [ebx-0x41],al
  403ab0:	and    edx,edx
  403ab2:	stc    
  403ab3:	sub    eax,0xafb59d02
  403ab8:	sbb    BYTE PTR [edi+0x1d],bl
  403abb:	push   ebp
  403abc:	(bad)  
  403abd:	je     0x403a89
  403abf:	xchg   BYTE PTR [ebx+0x2],al
  403ac2:	sub    DWORD PTR [ebp-0x34],eax
  403ac5:	shl    al,0xf8
  403ac8:	(bad)  
  403ac9:	aad    0x8e
  403acb:	ja     0x403a59
  403acd:	test   ebx,ebp
  403acf:	sub    cl,BYTE PTR [ebx+ebp*1+0x11412d84]
  403ad6:	fld    QWORD PTR [ecx]
  403ad8:	sbb    eax,0x2b3b7613
  403add:	(bad)  
  403ade:	pushf  
  403adf:	popa   
  403ae0:	ret    0x77db
  403ae3:	xor    esi,DWORD PTR [ebp-0x71]
  403ae6:	fmul   DWORD PTR [ebp+0x1c]
  403ae9:	sub    DWORD PTR [ecx-0x47],ecx
  403aec:	test   al,0xd1
  403aee:	aam    0xfd
  403af0:	push   eax
  403af1:	mov    dh,0xe3
  403af3:	sti    
  403af4:	mov    ecx,0x349009cf
  403af9:	repz cmp edi,ebx
  403afc:	mov    WORD PTR [ebx+ecx*2+0x6bb78c95],?
  403b03:	sbb    eax,DWORD PTR [ebp+eiz*4+0x3]
  403b07:	mov    cl,0x7e
  403b09:	stos   BYTE PTR es:[edi],al
  403b0a:	shl    bh,cl
  403b0c:	loopne 0x403b87
  403b0e:	or     cl,BYTE PTR ds:0x351b359b
  403b14:	cli    
  403b15:	imul   eax,DWORD PTR [ebp+0x1f],0xb05e3ffa
  403b1c:	mov    dh,0xde
  403b1e:	push   esp
  403b1f:	adc    DWORD PTR [eax],esi
  403b21:	and    BYTE PTR [ebp+ecx*2+0x55],dh
  403b25:	pop    esp
  403b26:	enter  0xec57,0x95
  403b2a:	fcomi  st,st(6)
  403b2c:	jns    0x403ac2
  403b2e:	and    ch,BYTE PTR [ebp-0xa]
  403b31:	dec    eax
  403b32:	pushf  
  403b33:	outs   dx,BYTE PTR ds:[esi]
  403b34:	out    dx,eax
  403b35:	inc    edx
  403b36:	sub    dl,dl
  403b38:	mov    esi,0x663589c4
  403b3d:	mul    BYTE PTR [ecx+esi*1-0x6230ba3]
  403b44:	stos   BYTE PTR es:[edi],al
  403b45:	dec    DWORD PTR [ebp-0x7e]
  403b48:	mov    bl,0x2
  403b4a:	es sub eax,0xfc48b1de
  403b50:	data16 stc 
  403b52:	(bad)  
  403b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b54:	jmp    esi
  403b56:	adc    al,0xdd
  403b58:	adc    bh,dh
  403b5a:	call   0x6aaa617a
  403b5f:	jno    0x403b6d
  403b61:	cmc    
  403b62:	gs jmp 0x403b74
  403b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b67:	sub    bh,BYTE PTR [ebx+0x6c76b985]
  403b6d:	xor    BYTE PTR [edi+eiz*2+0x5142dce7],cl
  403b74:	push   ebp
  403b75:	xchg   esi,eax
  403b76:	retf   0x60bb
  403b79:	adc    ebp,DWORD PTR [eax-0x5bf8dc70]
  403b7f:	aas    
  403b80:	sahf   
  403b81:	xor    BYTE PTR [eax-0x25],dl
  403b84:	call   DWORD PTR [edi+0x56]
  403b87:	aad    0x41
  403b89:	mov    esp,0xa6f88c71
  403b8e:	aas    
  403b8f:	sub    al,0x4c
  403b91:	addr16 fwait
  403b93:	and    bh,BYTE PTR ds:0x5fc8f1d9
  403b99:	popf   
  403b9a:	popf   
  403b9b:	popf   
  403b9c:	fstp   st(7)
  403b9e:	mov    bh,0x88
  403ba0:	dec    ecx
  403ba1:	into   
  403ba2:	sti    
  403ba3:	jbe    0x403c04
  403ba5:	and    al,0xaf
  403ba8:	lds    ecx,FWORD PTR [eax]
  403baa:	and    DWORD PTR [edi+0x288a14b8],esi
  403bb0:	sbb    dh,ah
  403bb2:	ds dec si
  403bb5:	pop    edx
  403bb6:	(bad)
  403bba:	push   edi
  403bbb:	les    edi,FWORD PTR [ebp+edi*2-0x19]
  403bbf:	sbb    ch,bl
  403bc1:	inc    edi
  403bc2:	inc    esp
  403bc3:	aam    0xf7
  403bc5:	ss (bad) 
  403bc8:	fistp  DWORD PTR [ecx]
  403bca:	mov    cl,0x93
  403bcc:	in     eax,0xac
  403bce:	jns    0x403ba3
  403bd0:	les    edx,FWORD PTR [ebx]
  403bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd3:	jno    0x403c43
  403bd5:	loopne 0x403b96
  403bd7:	add    eax,0x919739df
  403bdc:	div    BYTE PTR [esi+0x9726b6c]
  403be2:	jmp    0xc53f:0x86961f8
  403be9:	inc    edx
  403bea:	scas   eax,DWORD PTR es:[edi]
  403beb:	sub    ah,bh
  403bed:	int    0x98
  403bef:	jo     0x403bab
  403bf1:	xor    bh,al
  403bf3:	aad    0x17
  403bf5:	cld    
  403bf6:	add    ebx,DWORD PTR [edi+0x4b]
  403bf9:	out    0xd3,eax
  403bfb:	jno    0x403bb4
  403bfd:	jmp    0x403b8e
  403bff:	mov    esp,ecx
  403c01:	shr    BYTE PTR [esi],0x1e
  403c04:	movq   mm3,QWORD PTR [esi+0x58cb3c91]
  403c0b:	jge    0x403c03
  403c0d:	xchg   BYTE PTR [eax+ebp*2+0x37],ah
  403c11:	(bad)  
  403c12:	icebp  
  403c13:	scas   eax,DWORD PTR es:[edi]
  403c14:	xor    DWORD PTR [esi+0x1cd0b057],edx
  403c1a:	hlt    
  403c1b:	dec    esi
  403c1c:	and    al,BYTE PTR [edi-0x49]
  403c1f:	xchg   ebp,eax
  403c20:	mov    ch,0xec
  403c22:	push   ebx
  403c23:	xchg   ecx,eax
  403c24:	push   ebp
  403c25:	sub    DWORD PTR [eax+0x1e],esi
  403c28:	cdq    
  403c29:	or     eax,0x17652568
  403c2e:	(bad)  [edi-0x33]
  403c31:	pop    ss
  403c32:	outs   dx,BYTE PTR ds:[esi]
  403c33:	in     eax,dx
  403c34:	sti    
  403c35:	addr16 mov dh,0xc6
  403c38:	ins    BYTE PTR es:[edi],dx
  403c39:	cmp    al,0x19
  403c3b:	les    eax,FWORD PTR [eax+0x7d2abc1]
  403c41:	mov    DWORD PTR [eax-0xec39429],edx
  403c47:	cmp    BYTE PTR [edi+eax*8-0x670fe469],ah
  403c4e:	inc    eax
  403c4f:	aaa    
  403c50:	and    edi,DWORD PTR [edi]
  403c52:	retf   
  403c53:	loopne 0x403cab
  403c55:	pop    edx
  403c56:	sub    bh,BYTE PTR [ebp-0x7c588535]
  403c5c:	outs   dx,BYTE PTR ds:[esi]
  403c5d:	jnp    0x403c18
  403c5f:	cmc    
  403c60:	inc    ebx
  403c61:	mov    ebx,DWORD PTR [edx-0x1a]
  403c64:	ja     0x403c2a
  403c66:	es xchg esi,eax
  403c68:	bound  ebp,QWORD PTR [ebx]
  403c6a:	sbb    BYTE PTR [edi],dh
  403c6c:	in     eax,dx
  403c6d:	enter  0x3d6f,0xdd
  403c71:	jae    0x403c33
  403c73:	fdivr  QWORD PTR [ecx]
  403c75:	daa    
  403c76:	pop    edx
  403c77:	dec    edi
  403c78:	out    dx,al
  403c79:	sbb    DWORD PTR [ebp-0x4cdc6088],0x4c7041e7
  403c83:	inc    ebx
  403c84:	mov    ebp,0x8930bea8
  403c89:	mov    dh,0x16
  403c8b:	shr    BYTE PTR [ebx-0x30830f8a],cl
  403c91:	mov    dl,0xa9
  403c93:	add    al,0xae
  403c95:	push   0xe83842da
  403c9a:	and    ebx,DWORD PTR [edx-0x60]
  403c9d:	sahf   
  403c9e:	imul   ecx,DWORD PTR [eax],0x34c57475
  403ca4:	mov    ebp,0xbb593536
  403ca9:	addr16 pop ebx
  403cab:	aam    0x67
  403cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cae:	fwait
  403caf:	jmp    0x6028:0x7e16d137
  403cb6:	add    eax,0xc17062c7
  403cbb:	out    dx,eax
  403cbc:	sahf   
  403cbd:	mov    cl,0x8a
  403cbf:	jecxz  0x403d10
  403cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc2:	and    BYTE PTR [eax-0x776bee85],bl
  403cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc9:	pop    ebx
  403cca:	inc    ecx
  403ccb:	lds    esi,FWORD PTR [esi-0x5a9ee9]
  403cd1:	jno    0x403cbc
  403cd3:	push   ss
  403cd4:	sub    eax,0x4c038f8e
  403cd9:	retf   0xd82f
  403cdc:	sub    eax,0x79d7d4e
  403ce1:	cwde   
  403ce2:	inc    edi
  403ce3:	add    dl,BYTE PTR [ebp+0x12]
  403ce6:	mov    cl,0x27
  403ce8:	or     al,0x3b
  403cea:	xor    eax,0xb085aa5
  403cef:	sbb    ch,bl
  403cf1:	pop    esi
  403cf2:	pop    ebx
  403cf3:	aaa    
  403cf4:	mov    DWORD PTR [edi+0xf1316c3],ebx
  403cfa:	retf   0x79c1
  403cfd:	mov    ecx,0xd2b9e513
  403d02:	clc    
  403d03:	and    DWORD PTR [esp+edi*1],edi
  403d06:	in     al,0x0
  403d08:	aas    
  403d09:	and    edx,DWORD PTR [ebx-0x417cdc2a]
  403d0f:	xchg   edx,eax
  403d10:	cwde   
  403d11:	pop    edx
  403d12:	repnz popa 
  403d14:	sub    eax,0x61030d06
  403d19:	addr16 mov eax,0xbcf81676
  403d1f:	call   0xb75c:0xeb0bf7f8
  403d26:	cmp    BYTE PTR [edi+0x5366854d],dh
  403d2c:	and    DWORD PTR [edx-0x6f3b50b3],edx
  403d32:	or     dl,ch
  403d34:	pop    ecx
  403d35:	push   ebx
  403d36:	loop   0x403d98
  403d38:	das    
  403d39:	push   ebp
  403d3a:	inc    ebp
  403d3b:	xor    esi,esp
  403d3d:	add    BYTE PTR [ebp-0x41],ah
  403d40:	mov    al,0x24
  403d42:	cld    
  403d43:	xchg   edx,eax
  403d44:	(bad)  
  403d45:	leave  
  403d46:	dec    DWORD PTR [ebx-0x48]
  403d49:	rcr    DWORD PTR [ebp+0x10],cl
  403d4c:	inc    BYTE PTR [ebp-0x48]
  403d4f:	pop    ebx
  403d50:	cmc    
  403d51:	dec    ebp
  403d52:	xor    ebp,DWORD PTR [edx-0x2e]
  403d55:	xor    al,0xca
  403d57:	cmp    eax,0xcd0983db
  403d5c:	and    dl,BYTE PTR [edx+0xe]
  403d5f:	xchg   ebx,eax
  403d60:	in     al,0x33
  403d62:	mov    DWORD PTR [edx+ebp*2+0x2cca1690],edi
  403d69:	repz rol BYTE PTR [esi+0x23be4ad0],cl
  403d70:	call   0x155:0xc7aca7e1
  403d77:	push   ss
  403d78:	adc    bh,bl
  403d7a:	and    al,0x90
  403d7c:	xchg   edi,eax
  403d7d:	inc    ebp
  403d7e:	nop    DWORD PTR [ecx+0x25]
  403d82:	imul   ecx,DWORD PTR [ecx-0x48a0cf1c],0x4
  403d89:	mov    ch,0x88
  403d8b:	test   eax,0x42542217
  403d90:	push   ss
  403d91:	imul   eax,ebp,0xf6410019
  403d97:	mov    dh,0xf6
  403d99:	xchg   ecx,eax
  403d9a:	pusha  
  403d9b:	mov    cs,WORD PTR [ebx+0x7d0ef8f6]
  403da1:	cmp    al,0x49
  403da3:	inc    dh
  403da5:	push   0xf79096bb
  403daa:	pop    esp
  403dab:	icebp  
  403dac:	push   es
  403dad:	push   es
  403dae:	xchg   ecx,eax
  403daf:	inc    esp
  403db0:	iret   
  403db1:	jmp    0x403d7d
  403db3:	inc    edx
  403db4:	mov    ebx,0xda280048
  403db9:	add    DWORD PTR [eax+0x10],ebp
  403dbc:	inc    ax
  403dbe:	fistp  DWORD PTR [edx-0x37]
  403dc1:	xor    eax,0x74b53fd8
  403dc6:	lahf   
  403dc7:	push   ecx
  403dc8:	pushf  
  403dc9:	cmp    ah,BYTE PTR [ecx]
  403dcb:	cmp    al,0xd2
  403dcd:	icebp  
  403dce:	or     BYTE PTR [ebx+0x37],bh
  403dd1:	sub    ch,BYTE PTR [ecx+edi*2-0x67]
  403dd5:	pop    ecx
  403dd6:	pop    edx
  403dd7:	and    bh,0xfd
  403dda:	ds popf 
  403ddc:	test   al,0xf8
  403dde:	add    bh,BYTE PTR [ebx+ebp*1]
  403de1:	push   cs
  403de2:	lock pop edi
  403de4:	outs   dx,DWORD PTR ds:[esi]
  403de5:	rcpps  xmm2,XMMWORD PTR [edi]
  403de8:	push   0x99455aaa
  403ded:	add    ah,dh
  403def:	add    BYTE PTR [ebp+0x28ad8e2],0xab
  403df6:	dec    edi
  403df7:	rcl    DWORD PTR [edi],1
  403df9:	iret   
  403dfa:	xor    eax,0xba2c02b1
  403dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e00:	int3   
  403e01:	jmp    0xfa20:0x7355096b
  403e08:	mov    fs,WORD PTR ds:0x30715115
  403e0e:	mov    bl,0xb5
  403e10:	jge    0x403d9e
  403e12:	jp     0x403dc9
  403e14:	dec    esi
  403e15:	fistp  DWORD PTR [eax+0x464d22b]
  403e1b:	cmp    DWORD PTR [ecx-0x465b829e],esi
  403e21:	je     0x403e3e
  403e23:	jbe    0x403e6c
  403e25:	stos   DWORD PTR es:[edi],eax
  403e26:	mov    al,ds:0x81f5f761
  403e2b:	int3   
  403e2c:	shr    DWORD PTR [edi],0x19
  403e2f:	aas    
  403e30:	push   esp
  403e31:	dec    edx
  403e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e33:	push   eax
  403e34:	or     dl,BYTE PTR [ebp-0x7f]
  403e37:	mov    eax,0xe52caeb1
  403e3c:	out    0x9c,al
  403e3e:	hlt    
  403e3f:	inc    ebp
  403e40:	out    dx,al
  403e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e42:	out    0xf8,eax
  403e44:	sub    BYTE PTR [edx+0x35ac53df],dh
  403e4a:	test   eax,0xc0a5a53
  403e4f:	pop    ecx
  403e50:	jns    0x403dd5
  403e52:	mov    edi,esi
  403e54:	lods   al,BYTE PTR ds:[esi]
  403e55:	adc    al,0xa7
  403e57:	pop    eax
  403e58:	add    esp,DWORD PTR [edx+0x2bc1e556]
  403e5e:	or     BYTE PTR [ebp+0x44],cl
  403e61:	out    0x9e,al
  403e63:	popa   
  403e64:	(bad)  
  403e65:	cld    
  403e66:	ins    DWORD PTR es:[edi],dx
  403e67:	in     eax,0xdb
  403e69:	call   0xa549cc34
  403e6e:	mov    WORD PTR [ecx],ss
  403e70:	add    al,0xfc
  403e72:	popf   
  403e73:	jne    0x403ee5
  403e75:	sbb    ecx,ebp
  403e77:	and    ecx,DWORD PTR [edi-0xf]
  403e7a:	out    dx,eax
  403e7b:	add    BYTE PTR [eax+0x58],cl
  403e7e:	or     DWORD PTR [edi-0x62],edx
  403e81:	pushf  
  403e82:	(bad)  
  403e83:	sbb    esp,ecx
  403e85:	(bad)  
  403e86:	mov    ebp,0x985dc5b4
  403e8b:	scas   eax,DWORD PTR es:[edi]
  403e8c:	cmp    ebp,DWORD PTR [ecx+0x75]
  403e8f:	fisttp QWORD PTR [ebp-0x151ebc9f]
  403e95:	(bad)  
  403e97:	mov    bl,0x30
  403e99:	fidiv  WORD PTR [eax-0x2ab9e414]
  403e9f:	jmp    0x81ef:0x9a48faa2
  403ea6:	outs   dx,BYTE PTR ds:[esi]
  403ea7:	xchg   edi,eax
  403ea8:	call   0xb72086da
  403ead:	jmp    0x403e38
  403eaf:	inc    eax
  403eb0:	mov    ah,0x60
  403eb2:	scas   al,BYTE PTR es:[edi]
  403eb3:	leave  
  403eb4:	pop    esp
  403eb5:	ror    DWORD PTR [edx],1
  403eb7:	mov    ah,0x4b
  403eb9:	out    dx,eax
  403eba:	dec    eax
  403ebb:	mov    edx,0xbf77bbe5
  403ec0:	pop    ss
  403ec1:	(bad)  
  403ec2:	pop    edx
  403ec3:	ins    DWORD PTR es:[edi],dx
  403ec4:	mov    cl,0xe5
  403ec6:	mov    al,ds:0xfec242e2
  403ecb:	lahf   
  403ecc:	adc    bh,BYTE PTR [ebx]
  403ece:	add    al,0x94
  403ed0:	mov    eax,ecx
  403ed2:	scas   eax,DWORD PTR es:[edi]
  403ed3:	in     al,0x14
  403ed5:	add    BYTE PTR [edi+0x638d6ff9],ch
  403edb:	sti    
  403edc:	add    edi,DWORD PTR [eax+0x4b5430c1]
  403ee2:	test   cl,0x86
  403ee5:	cmp    al,BYTE PTR [esi-0x3afb8f1f]
  403eeb:	inc    edx
  403eec:	stos   BYTE PTR es:[edi],al
  403eed:	gs mov ch,0xe9
  403ef0:	jecxz  0x403ec3
  403ef2:	jno    0x403ec2
  403ef4:	adc    eax,0xc08fa231
  403ef9:	push   eax
  403efa:	fcomp  QWORD PTR [ebx+0x22]
  403efd:	jl     0x403ebb
  403eff:	std    
  403f00:	mov    edi,0xb8fbaa62
  403f05:	sub    eax,0xad9d7ad7
  403f0a:	mov    ds:0x77baf75d,eax
  403f0f:	out    0x11,eax
  403f11:	dec    edx
  403f12:	xlat   BYTE PTR ds:[ebx]
  403f13:	mov    esi,0x9d2f284f
  403f18:	retf   
  403f19:	jl     0x403f67
  403f1b:	out    0x9,eax
  403f1d:	or     esp,esp
  403f1f:	mov    al,0x63
  403f21:	(bad)  [edx+0x2f]
  403f24:	aad    0xff
  403f26:	mov    eax,0xa6e10804
  403f2b:	sbb    dl,BYTE PTR [ebx-0x6d0190f1]
  403f31:	inc    ebx
  403f32:	gs push ebx
  403f34:	aaa    
  403f35:	test   eax,0x2328592
  403f3a:	(bad)  
  403f3b:	or     esp,DWORD PTR [edx]
  403f3d:	and    eax,DWORD PTR [ebx+0x36]
  403f40:	into   
  403f41:	or     BYTE PTR [ebx-0x6a],0x5b
  403f45:	pop    ebx
  403f46:	or     eax,0xdb2961cd
  403f4b:	adc    esp,edi
  403f4d:	sub    ch,BYTE PTR ds:0xe32c30fa
  403f53:	dec    ecx
  403f54:	sbb    edi,DWORD PTR [esi]
  403f56:	xor    eax,0x8099bd0d
  403f5c:	mov    esi,0x938a054
  403f61:	fdiv   st(5),st
  403f63:	inc    esp
  403f64:	sti    
  403f65:	and    al,0xd9
  403f67:	test   eax,0x95279cf5
  403f6c:	sbb    ebp,DWORD PTR [ebx+0x6501597]
  403f72:	mov    al,ds:0xd977efe6
  403f77:	retf   
  403f78:	mov    dh,al
  403f7a:	mov    dl,0xdb
  403f7c:	das    
  403f7d:	xchg   DWORD PTR [ecx],esp
  403f7f:	mov    bl,0xfd
  403f81:	add    ebp,DWORD PTR [edx-0x6f]
  403f84:	sbb    BYTE PTR [ebx-0x5b2f8723],0x8
  403f8b:	cmp    DWORD PTR [edx+0x18],ecx
  403f8e:	sbb    ah,BYTE PTR [ebp-0x77]
  403f91:	mov    ax,ds:0xf6879889
  403f97:	sbb    al,0x42
  403f99:	aaa    
  403f9a:	aas    
  403f9b:	cmp    bh,BYTE PTR [ebx-0x74]
  403f9e:	mov    ch,0x72
  403fa0:	fdiv   st,st(0)
  403fa2:	(bad)  
  403fa3:	mov    edi,0xb952f082
  403fa8:	fisubr WORD PTR [ecx-0x32f0cb70]
  403fae:	inc    ecx
  403faf:	add    BYTE PTR [ebx],ch
  403fb1:	sbb    esi,DWORD PTR [esi]
  403fb3:	loop   0x40402d
  403fb5:	cmp    BYTE PTR [edi],0x9a
  403fb8:	ret    0x4349
  403fbb:	push   0xffffffd7
  403fbd:	cli    
  403fbe:	sub    esp,DWORD PTR [eax]
  403fc0:	retf   
  403fc1:	cld    
  403fc2:	pop    es
  403fc3:	inc    ecx
  403fc4:	push   esp
  403fc5:	fcomp  QWORD PTR [edx-0x3f]
  403fc8:	pushf  
  403fc9:	xchg   esi,eax
  403fca:	xchg   esp,eax
  403fcb:	ins    DWORD PTR es:[edi],dx
  403fcc:	push   eax
  403fcd:	call   0xd267:0x4e256a53
  403fd4:	inc    edx
  403fd5:	xchg   ebx,eax
  403fd6:	stc    
  403fd7:	bswap  ecx
  403fd9:	daa    
  403fda:	(bad)  
  403fdc:	retf   0x9230
  403fdf:	(bad)  
  403fe0:	sti    
  403fe1:	jle    0x404034
  403fe3:	ins    DWORD PTR es:[edi],dx
  403fe4:	xor    al,BYTE PTR [ebx]
  403fe6:	std    
  403fe7:	or     ebp,DWORD PTR [edi-0xf1b26cf]
  403fed:	mov    dh,0x33
  403fef:	rcl    DWORD PTR [eax],0xac
  403ff2:	dec    ebp
  403ff3:	sahf   
  403ff4:	clc    
  403ff5:	sub    esi,eax
  403ff7:	std    
  403ff8:	ficomp DWORD PTR ds:0x30540e77
  403ffe:	adc    eax,0xc56226ea
  404003:	data16 out dx,al
  404005:	ret    0x7e0
  404008:	jae    0x403fda
  40400a:	or     BYTE PTR [ecx],bh
  40400c:	pop    ds
  40400d:	in     eax,0xc
  40400f:	sub    al,0x9b
  404011:	inc    ecx
  404012:	mov    bh,0xe1
  404014:	dec    eax
  404015:	push   ebx
  404016:	pop    ebx
  404017:	call   0x6eb3:0x85ea7d59
  40401e:	xchg   DWORD PTR [esi+0x58],ebx
  404021:	pop    edi
  404022:	cmp    eax,0x1fe382ec
  404027:	fld    st(3)
  404029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40402a:	fisub  WORD PTR [ecx+0x3abc7e7d]
  404030:	mov    bh,0xa2
  404032:	adc    DWORD PTR [eax-0x6],ebp
  404035:	in     eax,0xc9
  404037:	push   ss
  404038:	loopne 0x404021
  40403a:	or     BYTE PTR [ebp+0x60b51fc3],bl
  404040:	je     0x40407d
  404042:	xchg   esi,eax
  404043:	stos   BYTE PTR es:[edi],al
  404044:	loope  0x403fe0
  404046:	sub    eax,0x60bbaf00
  40404b:	mov    esi,0x9bfee4f8
  404050:	push   edx
  404051:	pop    ebx
  404052:	sbb    eax,0x6095ad05
  404057:	int3   
  404058:	cwde   
  404059:	sbb    ebx,DWORD PTR [ebx-0x14]
  40405c:	out    dx,al
  40405d:	mov    edi,0x6a8f61e9
  404062:	ret    
  404063:	mov    ds:0x662fa80d,al
  404068:	repz xor bh,BYTE PTR [ecx]
  40406b:	xor    BYTE PTR [ebp-0x4b],bl
  40406e:	dec    esp
  40406f:	mov    ebp,0xe6b6ff9a
  404074:	inc    eax
  404075:	sbb    eax,0x66e9dec9
  40407a:	add    bh,BYTE PTR es:[ebp+0x26]
  40407e:	fwait
  40407f:	jmp    0x2beb:0xf7264436
  404086:	xlat   BYTE PTR ds:[ebx]
  404087:	xchg   esi,eax
  404088:	xor    al,bl
  40408a:	dec    ebp
  40408b:	sub    ah,bh
  40408d:	in     eax,dx
  40408e:	fsubr  DWORD PTR [ecx-0x2d4d780d]
  404094:	jns    0x40401b
  404096:	pop    ebp
  404097:	or     DWORD PTR [esi+0x1c062063],edi
  40409d:	xor    ecx,eax
  40409f:	adc    esp,esi
  4040a1:	lea    eax,[edi+edx*4-0x67]
  4040a5:	popa   
  4040a6:	add    DWORD PTR [eax],0x1313e525
  4040ac:	orps   xmm5,XMMWORD PTR [ecx-0x19]
  4040b0:	jg     0x4040ef
  4040b2:	or     bh,BYTE PTR [esi]
  4040b4:	stos   BYTE PTR es:[edi],al
  4040b5:	fisttp DWORD PTR [ebp*4+0x2234168f]
  4040bc:	sar    DWORD PTR [ecx],cl
  4040be:	call   0x2c7b7fa2
  4040c3:	repz inc eax
  4040c5:	shr    DWORD PTR [esi],1
  4040c7:	adc    al,BYTE PTR [ebx]
  4040c9:	mov    dl,BYTE PTR [ebx]
  4040cb:	lods   al,BYTE PTR ds:[esi]
  4040cc:	in     al,0xf3
  4040ce:	jb     0x40409b
  4040d0:	xchg   BYTE PTR ds:0x354c1299,ah
  4040d6:	push   ebx
  4040d7:	and    BYTE PTR [edx],0x16
  4040da:	(bad)  
  4040db:	add    eax,0xb0ffd46f
  4040e0:	es (bad) 
  4040e2:	adc    cl,ch
  4040e4:	dec    edi
  4040e5:	push   edx
  4040e6:	push   esi
  4040e7:	jno    0x4040f4
  4040e9:	mov    ecx,0xf2be59da
  4040ee:	jo     0x404099
  4040f0:	cmp    ecx,DWORD PTR [eax]
  4040f2:	cmp    DWORD PTR [ecx],ebp
  4040f4:	arpl   WORD PTR [esi+0x6559436b],dx
  4040fa:	mov    al,0x12
  4040fc:	xchg   ebp,eax
  4040fd:	mov    edx,DWORD PTR [eax]
  4040ff:	bound  edi,QWORD PTR [ebp-0x52]
  404102:	add    BYTE PTR [eax+edx*8-0x38ce99ef],bl
  404109:	in     al,0xd7
  40410b:	adc    al,BYTE PTR [edx+edi*8-0x74]
  40410f:	cdq    
  404110:	cmp    edx,DWORD PTR [ebp-0xaf1e362]
  404116:	mov    cl,0xdd
  404118:	nop
  404119:	add    ecx,DWORD PTR [edi+0x316d5298]
  40411f:	mov    esi,0x668df9
  404124:	xor    ch,BYTE PTR [eax+0x23569f90]
  40412a:	cli    
  40412b:	retf   
  40412c:	pop    esp
  40412d:	aam    0xd4
  40412f:	dec    DWORD PTR [esi]
  404131:	sub    al,0xe8
  404133:	jbe    0x40415e
  404135:	(bad)  
  404136:	fistp  QWORD PTR [edx-0x5ddb8969]
  40413c:	xor    esp,DWORD PTR [esi-0x4936db54]
  404142:	mov    esp,0x48f6402b
  404147:	jmp    0xcc2a:0xf5d8d060
  40414e:	xor    DWORD PTR [esi+0x2c],esi
  404151:	add    dh,ch
  404153:	cmp    eax,0x3aac45e9
  404158:	aas    
  404159:	in     al,0x50
  40415b:	(bad)  
  40415c:	das    
  40415d:	adc    DWORD PTR fs:[esi],esp
  404160:	or     ch,bh
  404162:	inc    eax
  404163:	out    0x8e,al
  404165:	mov    ecx,0x98445759
  40416a:	mov    dh,BYTE PTR [eax+edx*2-0x51]
  40416e:	jg     0x404116
  404170:	and    al,0x9b
  404172:	pop    edx
  404173:	ins    DWORD PTR es:[edi],dx
  404174:	sbb    ah,bl
  404176:	jge    0x40411b
  404178:	test   DWORD PTR [esp+edi*4+0x23],eax
  40417c:	lahf   
  40417d:	add    eax,DWORD PTR [esi-0x523db120]
  404183:	fisttp QWORD PTR [edi+0x5]
  404186:	inc    edi
  404187:	xchg   esi,eax
  404188:	push   ecx
  404189:	pop    es
  40418a:	repnz cmp esp,esi
  40418d:	and    eax,0x32291780
  404192:	rol    DWORD PTR [eax+0x1e],1
  404195:	neg    cl
  404197:	mov    bh,0xc
  404199:	or     ch,BYTE PTR [ecx+eiz*1+0x7c5990d2]
  4041a0:	xchg   dx,ax
  4041a2:	stos   DWORD PTR es:[edi],eax
  4041a3:	fimul  WORD PTR [eax]
  4041a5:	shr    BYTE PTR cs:[edx],1
  4041a8:	add    eax,0x25f56b8d
  4041ad:	bound  ebx,QWORD PTR [ebp-0x74]
  4041b0:	stos   DWORD PTR es:[edi],eax
  4041b1:	repz mov ds:0xbdb5a186,al
  4041b7:	mov    WORD PTR [ebx],es
  4041b9:	pop    edi
  4041ba:	loopne 0x40419c
  4041bc:	int    0x72
  4041be:	mov    edx,0xc85a43c6
  4041c3:	adc    al,0x43
  4041c5:	imul   ecx,DWORD PTR [eax-0x6b],0x4a
  4041c9:	xchg   DWORD PTR [ebx],ebp
  4041cb:	inc    ecx
  4041cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041cd:	inc    eax
  4041ce:	jb     0x404219
  4041d0:	and    DWORD PTR [edx-0x3e731bbd],eax
  4041d6:	pop    ecx
  4041d7:	xchg   esi,eax
  4041d8:	or     bh,dh
  4041da:	inc    ecx
  4041db:	in     eax,dx
  4041dc:	lds    eax,FWORD PTR [edi]
  4041de:	mov    eax,ds:0xa8a5107e
  4041e3:	out    dx,eax
  4041e4:	sub    dh,BYTE PTR [ebx-0x32af309e]
  4041ea:	retf   0x7ce2
  4041ed:	xor    DWORD PTR [ebp+0x5f7107f6],0x788d1ed1
  4041f7:	mov    eax,0xfcf69fbc
  4041fc:	jle    0x4041e6
  4041fe:	cld    
  4041ff:	mov    BYTE PTR [ecx-0x36],bl
  404202:	stos   DWORD PTR es:[edi],eax
  404203:	and    dh,BYTE PTR [edx+0x3f28b94a]
  404209:	inc    ecx
  40420a:	inc    edx
  40420b:	sti    
  40420c:	and    BYTE PTR [esp],cl
  40420f:	fabs   
  404211:	sbb    edx,DWORD PTR [ebx-0x4ead87e6]
  404217:	ss pop es
  404219:	clc    
  40421a:	pop    eax
  40421b:	stc    
  40421c:	adc    dl,BYTE PTR [edi-0x3bc72297]
  404222:	in     eax,dx
  404223:	xchg   BYTE PTR [ebp+0x1e],bh
  404226:	pop    eax
  404227:	fidivr WORD PTR [eax]
  404229:	sbb    eax,0xe44f289
  40422e:	push   ecx
  40422f:	ds jbe 0x4041e8
  404232:	push   0x44
  404234:	clc    
  404235:	xchg   edi,eax
  404236:	data16 sbb BYTE PTR [edi+0x72466f69],bh
  40423d:	or     bh,BYTE PTR [ecx]
  40423f:	adc    DWORD PTR [esi+0x7a],0x26
  404243:	mov    esi,0x262bcca
  404248:	sub    DWORD PTR [esp+esi*8+0x6e],0xfffffff1
  40424d:	push   eax
  40424e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40424f:	xor    bl,BYTE PTR [edx-0xd]
  404252:	gs jp  0x404215
  404255:	mov    BYTE PTR [edi+edi*2],dh
  404258:	or     DWORD PTR [ecx-0x35bdbbca],eax
  40425e:	test   al,0x42
  404260:	jg     0x404273
  404262:	jecxz  0x4042db
  404264:	loop   0x4041ea
  404266:	pushf  
  404267:	pop    ds
  404268:	add    BYTE PTR [ebp+0x9],cl
  40426b:	xor    eax,0x8ebf9b2c
  404270:	stos   BYTE PTR es:[edi],al
  404271:	cmp    bh,dl
  404273:	xchg   ecx,eax
  404274:	jl     0x4042cd
  404276:	je     0x4042e8
  404278:	cwde   
  404279:	shl    DWORD PTR [ebx+0x9],cl
  40427c:	test   DWORD PTR [ecx+0x64],0x33aa5923
  404283:	pop    esp
  404284:	aaa    
  404285:	fs pushf 
  404287:	aas    
  404288:	sbb    al,al
  40428a:	icebp  
  40428b:	pop    ds
  40428c:	in     al,dx
  40428d:	push   ebp
  40428e:	xchg   BYTE PTR [ecx-0x3e82e81d],ch
  404294:	jno    0x40423c
  404296:	adc    ecx,DWORD PTR [eax+edx*8-0x115a69e8]
  40429d:	into   
  40429e:	and    DWORD PTR [edi],ecx
  4042a0:	mov    bh,0xfc
  4042a2:	mov    ebp,0xf0de0607
  4042a7:	mov    edx,0x7111fed1
  4042ac:	jnp    0x404230
  4042ae:	xchg   DWORD PTR [edx+0x6b],ebp
  4042b1:	comiss xmm5,xmm6
  4042b4:	mov    edx,0x9e319821
  4042b9:	add    eax,0xce992a05
  4042be:	leave  
  4042bf:	xchg   edi,eax
  4042c0:	sahf   
  4042c1:	ins    DWORD PTR es:[edi],dx
  4042c2:	test   esp,0xf25469e9
  4042c8:	cld    
  4042c9:	or     bl,dh
  4042cb:	xor    edi,eax
  4042cd:	dec    ecx
  4042ce:	lds    edi,FWORD PTR [esi]
  4042d0:	cs cmc 
  4042d2:	test   BYTE PTR [ebx-0x19],dh
  4042d5:	ss fwait
  4042d7:	cld    
  4042d8:	hlt    
  4042d9:	xor    dh,BYTE PTR gs:[esi+0x4f]
  4042dd:	pop    esi
  4042de:	add    BYTE PTR [esp+edi*2],al
  4042e1:	mov    eax,ds:0x85938163
  4042e6:	mov    ds:0xa0fbf2a8,al
  4042eb:	frstor [edx-0xb566b52]
  4042f1:	ins    BYTE PTR es:[edi],dx
  4042f2:	xor    DWORD PTR [ebp+0x182b312e],edi
  4042f8:	xchg   edx,eax
  4042f9:	out    0x76,al
  4042fb:	adc    ah,BYTE PTR [ecx-0x77ee83a0]
  404301:	inc    esi
  404302:	cld    
  404303:	push   0x72c28bd
  404308:	sbb    DWORD PTR [ebx-0x3f],esi
  40430b:	sar    BYTE PTR [ebx],0xc9
  40430e:	das    
  40430f:	dec    ecx
  404310:	je     0x4042bf
  404312:	adc    al,0x9e
  404314:	mov    cs,WORD PTR ds:0x5bbd35ac
  40431a:	cmp    edi,DWORD PTR [edi+0x7a791680]
  404320:	sub    dl,BYTE PTR [ebx+0x7fc626f1]
  404326:	jo     0x40433e
  404328:	mov    ?,eax
  40432a:	popf   
  40432b:	jp     0x4042c5
  40432d:	aam    0x40
  40432f:	shl    DWORD PTR [esi-0x30c2b273],0xe4
  404336:	int3   
  404337:	jmp    0x4043a4
  404339:	outs   dx,DWORD PTR ds:[esi]
  40433a:	mov    bh,0xb6
  40433c:	jnp    0x404383
  40433e:	xchg   cl,cl
  404340:	xor    eax,0x6daa9326
  404345:	fs in  eax,0x9a
  404348:	(bad)  
  404349:	in     eax,dx
  40434a:	cmc    
  40434b:	ror    DWORD PTR [esi],1
  40434d:	add    bl,BYTE PTR [edi+0x61e958b8]
  404353:	xchg   ecx,eax
  404354:	arpl   WORD PTR [ebx-0x19],bx
  404357:	out    dx,al
  404358:	(bad)  
  404359:	imul   edx,DWORD PTR [eax*4-0x269cdbf4],0xe0716c62
  404364:	pop    ds
  404365:	dec    eax
  404366:	popf   
  404367:	(bad)  
  404368:	xchg   edx,eax
  404369:	mov    ds:0xc5595480,eax
  40436e:	adc    DWORD PTR [edx+0x4dc47db7],0x7955206f
  404378:	pusha  
  404379:	pop    eax
  40437a:	pusha  
  40437b:	std    
  40437c:	adc    cl,BYTE PTR [eax+edi*2]
  40437f:	xor    al,0xf2
  404381:	call   0x239a2014
  404386:	mov    ah,0x57
  404388:	mov    al,0xd1
  40438a:	pop    esp
  40438b:	loopne 0x4043cf
  40438d:	ret    0x8306
  404390:	in     al,0xca
  404392:	cmc    
  404393:	fimul  DWORD PTR [esi]
  404395:	sbb    ebp,DWORD PTR [ebp-0x54]
  404398:	xchg   ebx,eax
  404399:	cmp    eax,0x4f38cb25
  40439e:	in     eax,0xb7
  4043a0:	sub    al,0xcc
  4043a2:	cmp    al,al
  4043a4:	jecxz  0x4043b4
  4043a6:	jb     0x40441d
  4043a8:	stos   BYTE PTR es:[edi],al
  4043a9:	mov    ebx,0x40bfd3cf
  4043ae:	dec    edi
  4043af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b0:	rcr    BYTE PTR [edx-0x22],0x98
  4043b4:	lods   al,BYTE PTR ds:[esi]
  4043b5:	aad    0xbd
  4043b7:	test   eax,0xa959339
  4043bc:	xor    ebp,DWORD PTR cs:[esi]
  4043bf:	bound  ebp,QWORD PTR [eax]
  4043c1:	retf   0xc90a
  4043c4:	pop    ss
  4043c5:	shr    BYTE PTR [eax-0x7],0xa
  4043c9:	xchg   DWORD PTR [ecx],ecx
  4043cb:	jge    0x404413
  4043cd:	mov    eax,ds:0x8a49e781
  4043d2:	les    esi,FWORD PTR [esi+0x58]
  4043d5:	cwde   
  4043d6:	cmp    DWORD PTR [eax+0x287aec7c],ecx
  4043dc:	add    eax,0x1ecaab18
  4043e1:	lahf   
  4043e2:	sub    DWORD PTR [ebp-0x69],esi
  4043e5:	sar    ah,cl
  4043e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e8:	es in  eax,0xe7
  4043eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ec:	mov    bl,0x98
  4043ee:	xchg   edi,eax
  4043ef:	mov    bl,dh
  4043f1:	scas   al,BYTE PTR es:[edi]
  4043f2:	mov    ebp,0xe4331f6f
  4043f7:	mov    dl,0xd1
  4043f9:	dec    eax
  4043fa:	and    DWORD PTR [edi],esp
  4043fc:	sar    BYTE PTR [edi],1
  4043fe:	mov    fs,WORD PTR [edx-0x73f2ae9f]
  404404:	xlat   BYTE PTR ds:[ebx]
  404405:	pop    esp
  404406:	mov    ah,0xb0
  404408:	pop    ebp
  404409:	addr16 jle 0x4043fa
  40440c:	test   DWORD PTR [esi-0x21d1cbba],edx
  404412:	sbb    esi,ecx
  404414:	sbb    edx,DWORD PTR [eax]
  404416:	cmc    
  404417:	xor    al,0xa9
  404419:	push   edx
  40441a:	dec    ebp
  40441b:	mov    WORD PTR [edi],ss
  40441d:	out    dx,al
  40441e:	pop    ss
  40441f:	jl     0x40441c
  404421:	sub    eax,0x571413ec
  404426:	mov    al,0x50
  404428:	inc    eax
  404429:	jno    0x40449b
  40442b:	mov    ds:0x6cf7c7f4,eax
  404430:	out    0xd0,al
  404432:	outs   dx,BYTE PTR ds:[esi]
  404433:	xor    al,0x78
  404435:	dec    ecx
  404436:	retf   
  404437:	out    0xd7,eax
  404439:	cld    
  40443a:	jle    0x404479
  40443c:	icebp  
  40443d:	and    DWORD PTR [esi+0x295fbb0a],esp
  404443:	xchg   BYTE PTR [eax+0x33],bh
  404446:	enter  0x4e3,0x18
  40444a:	mov    ds:0xf04b03a5,eax
  40444f:	test   DWORD PTR [esi],0x26503f1
  404455:	and    dl,BYTE PTR [edi+0x55]
  404458:	inc    ecx
  404459:	jecxz  0x4044bb
  40445b:	push   0x69
  40445d:	into   
  40445e:	jmp    0xa583a0ec
  404463:	dec    ecx
  404464:	iret   
  404465:	xchg   ecx,eax
  404466:	push   eax
  404467:	sub    eax,0xaae83049
  40446c:	xor    ecx,ebx
  40446e:	sbb    al,BYTE PTR [ecx-0x27eae14c]
  404474:	pushf  
  404475:	and    DWORD PTR [ebx+edx*1],ebp
  404478:	adc    esp,DWORD PTR [ebp-0x57]
  40447b:	mov    ds:0xc53e44af,eax
  404480:	leave  
  404481:	loopne 0x40443f
  404483:	mov    ebp,0x94a13bbb
  404488:	out    dx,eax
  404489:	(bad)  
  40448a:	pop    ecx
  40448b:	in     al,dx
  40448c:	adc    DWORD PTR [esi+0x550d3461],edx
  404492:	push   0x35
  404494:	mov    DWORD PTR [edx-0x5b],edx
  404497:	iret   
  404498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404499:	shl    bl,cl
  40449b:	mov    esp,DWORD PTR [ebx]
  40449d:	push   esi
  40449e:	dec    esi
  40449f:	dec    edx
  4044a0:	ja     0x4044d0
  4044a2:	fisttp QWORD PTR [edi-0xf7912d8]
  4044a8:	sub    ebx,edx
  4044aa:	push   edx
  4044ab:	pop    edx
  4044ac:	mov    dh,0x57
  4044ae:	mul    DWORD PTR [edx]
  4044b0:	push   eax
  4044b1:	hlt    
  4044b2:	sbb    bh,bl
  4044b4:	xchg   BYTE PTR [ebx-0x357b3ea6],ch
  4044ba:	add    eax,0xf8993a39
  4044bf:	add    esp,ebx
  4044c1:	popf   
  4044c2:	fsub   st(7),st
  4044c4:	repnz mov ch,0x49
  4044c7:	addr16 std 
  4044c9:	pop    ebp
  4044ca:	das    
  4044cb:	inc    eax
  4044cc:	and    bl,al
  4044ce:	das    
  4044cf:	int    0x83
  4044d1:	jnp    0x40451e
  4044d3:	jae    0x4044c1
  4044d5:	inc    ebx
  4044d6:	or     eax,0xc53fd82c
  4044db:	adc    DWORD PTR ss:[edi],0x7727a46f
  4044e2:	lea    eax,[edx+0x22e712b9]
  4044e8:	sub    al,0xe8
  4044ea:	push   ebx
  4044eb:	sbb    al,0xc9
  4044ed:	scas   eax,DWORD PTR es:[edi]
  4044ee:	mov    ebx,0x35896866
  4044f3:	call   0xd0f7:0x16e92d19
  4044fa:	mov    esp,0xa0bc3e92
  4044ff:	xchg   edx,eax
  404500:	push   edi
  404501:	ins    BYTE PTR es:[edi],dx
  404502:	bound  eax,QWORD PTR [edx]
  404504:	dec    edx
  404505:	jge    0x4044e1
  404507:	xor    DWORD PTR [ebx+0x68],0x2575d7b6
  40450e:	ror    esi,0x0
  404511:	jge    0x404570
  404513:	mov    ds:0xde49a082,al
  404518:	inc    ebx
  404519:	add    eax,0x2a9a474e
  40451e:	mov    ebx,cr4
  404521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404522:	mov    ds:0x6e1f30a6,al
  404527:	xor    DWORD PTR [ebx+0x28b16941],ecx
  40452d:	mov    ebx,0x34d3a653
  404532:	adc    ah,dl
  404534:	idiv   BYTE PTR [edi]
  404536:	stc    
  404537:	and    esi,edi
  404539:	or     ebp,esi
  40453b:	adc    DWORD PTR [edi-0x76febe4a],ecx
  404541:	add    eax,0xf23b57da
  404546:	or     DWORD PTR [edx],eax
  404548:	test   al,0xcf
  40454a:	jns    0x4044ea
  40454c:	(bad)  
  40454d:	aas    
  40454e:	adc    bl,BYTE PTR [esi-0x3dae0fc5]
  404554:	mov    cl,BYTE PTR [eax+0x7d251417]
  40455a:	mov    ebp,DWORD PTR [esi+0x5a8d27bf]
  404560:	mov    dl,0x79
  404562:	pushf  
  404563:	mov    ah,0x8d
  404565:	pushf  
  404566:	stos   BYTE PTR es:[edi],al
  404567:	lods   eax,DWORD PTR ds:[esi]
  404568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40456a:	cld    
  40456b:	inc    ecx
  40456c:	or     DWORD PTR [edi-0x49],edx
  40456f:	add    DWORD PTR [ebx+0x1],0x9762a2e0
  404576:	add    BYTE PTR [ebx],dl
  404578:	cmp    BYTE PTR [ebx-0x48ac951a],bl
  40457e:	inc    edx
  40457f:	cli    
  404580:	and    cl,BYTE PTR [eax+0x2c27f2e5]
  404586:	clc    
  404587:	mov    ebx,0x59b4e
  40458c:	fiadd  DWORD PTR [ebx]
  40458e:	js     0x4045bf
  404590:	push   edi
  404591:	into   
  404592:	inc    ebx
  404593:	mov    edx,esi
  404595:	aaa    
  404596:	pop    ebx
  404597:	iret   
  404598:	mov    al,0x8d
  40459a:	mov    ebx,0x5b37d50a
  40459f:	mov    ch,0x67
  4045a1:	cmc    
  4045a2:	pop    eax
  4045a3:	(bad)  
  4045a4:	xor    dh,cl
  4045a6:	or     DWORD PTR [esi],ecx
  4045a8:	pop    ebp
  4045a9:	inc    ebp
  4045aa:	or     eax,0x7c750cdd
  4045af:	or     esp,edx
  4045b1:	mov    bh,0x75
  4045b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b4:	pop    ecx
  4045b5:	cmp    al,0xb
  4045b7:	out    0x1b,eax
  4045b9:	in     al,0x9d
  4045bb:	test   al,0x9f
  4045bd:	adc    dh,bh
  4045bf:	mov    al,ds:0x7e3d0321
  4045c4:	mov    bh,BYTE PTR [ebp+ebp*1+0x65]
  4045c8:	pushf  
  4045c9:	pop    ecx
  4045ca:	mov    al,BYTE PTR [esp+esi*8+0x36]
  4045ce:	js     0x4045c3
  4045d0:	pop    ds
  4045d1:	daa    
  4045d2:	shl    DWORD PTR [ecx+0x3c],0x17
  4045d6:	repz sbb eax,0x97fa96c7
  4045dc:	jb     0x404617
  4045de:	in     al,dx
  4045df:	out    0x8,eax
  4045e1:	mov    cl,0x0
  4045e3:	jp     0x404628
  4045e5:	cld    
  4045e6:	rol    DWORD PTR [ecx+0x49],cl
  4045e9:	mov    ah,BYTE PTR [ecx+edi*1+0x332a2295]
  4045f0:	ret    0xb87e
  4045f3:	jg     0x4045a7
  4045f5:	inc    esp
  4045f6:	xor    edi,DWORD PTR [eax*8-0xb064e4a]
  4045fd:	mov    dh,0xf2
  4045ff:	(bad)  
  404600:	mov    bh,0xd1
  404602:	xor    ah,BYTE PTR [ecx]
  404604:	pop    esp
  404605:	data16 and BYTE PTR [esi+0x13],dh
  404609:	jnp    0x4045b9
  40460b:	mov    ecx,0xc8bf3d9b
  404610:	inc    edx
  404611:	nop
  404612:	lods   eax,DWORD PTR ds:[esi]
  404613:	out    dx,eax
  404614:	cmp    al,0x3c
  404616:	mov    al,ds:0xe4f45c76
  40461b:	add    al,0x75
  40461d:	loope  0x4045cd
  40461f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404621:	mov    bh,0xa3
  404623:	nop
  404624:	push   eax
  404625:	jl     0x404683
  404627:	pop    ebp
  404628:	mov    esi,0x78880a38
  40462d:	test   eax,0x688a29f7
  404632:	stos   BYTE PTR es:[edi],al
  404633:	imul   ebp,ebp,0xffffffce
  404636:	inc    eax
  404637:	(bad)  
  404638:	fisub  DWORD PTR [ecx+edi*1-0x429ced32]
  40463f:	push   0x22
  404641:	mov    al,ds:0xcaed108d
  404646:	jmp    0x616c:0xe8283cc2
  40464d:	mov    bh,0x22
  40464f:	arpl   WORD PTR [esi+0xf],ax
  404652:	xchg   esi,eax
  404653:	aas    
  404654:	xor    eax,0x20d09311
  404659:	mov    ah,0x22
  40465b:	out    0x31,al
  40465d:	or     dl,BYTE PTR [esi+0x29]
  404660:	pop    edi
  404661:	push   0x75f5be0c
  404666:	(bad)  
  404667:	int    0xd6
  404669:	scas   al,BYTE PTR es:[edi]
  40466a:	xor    DWORD PTR [esi+0x3],edx
  40466d:	in     eax,0xab
  40466f:	add    DWORD PTR [esi],edx
  404671:	fisub  DWORD PTR [ecx-0x757494d5]
  404677:	or     dl,dl
  404679:	mov    eax,ds:0xef56f2de
  40467e:	aaa    
  40467f:	mov    bh,0x6e
  404681:	ja     0x40463d
  404683:	mov    bl,BYTE PTR ds:0x1ed44327
  404689:	das    
  40468a:	mov    edi,0x13a89b18
  40468f:	je     0x404709
  404691:	neg    BYTE PTR [edi+0x41e465b8]
  404697:	dec    esi
  404698:	leave  
  404699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40469a:	mov    edx,0x2d1fa70f
  40469f:	rcl    BYTE PTR [edi+0x26],0xe1
  4046a3:	inc    edi
  4046a4:	out    dx,al
  4046a5:	mov    DWORD PTR [edx+0x64],ecx
  4046a8:	hlt    
  4046a9:	or     dh,BYTE PTR [eax+0x6b8f323]
  4046af:	mov    dl,0xf7
  4046b1:	sub    al,0xfb
  4046b3:	(bad)  
  4046b4:	dec    ebx
  4046b5:	in     eax,0x31
  4046b7:	push   ebp
  4046b8:	mov    ah,0x41
  4046ba:	jle    0x4046e4
  4046bc:	mov    cl,0x14
  4046be:	out    dx,al
  4046bf:	sub    BYTE PTR [edx-0x41],dl
  4046c2:	arpl   WORD PTR [eax+edx*4],si
  4046c5:	addr16 dec edx
  4046c7:	vpavgb xmm7,xmm2,XMMWORD PTR [edx+0x1]
  4046cc:	sbb    eax,0xbe8f7488
  4046d1:	lods   eax,DWORD PTR ds:[esi]
  4046d2:	push   eax
  4046d3:	adc    BYTE PTR [edi],ah
  4046d5:	nop
  4046d6:	inc    ecx
  4046d7:	addr16 (bad) 
  4046d9:	mov    eax,0x32f5ec0
  4046de:	loopne 0x4046ec
  4046e0:	jmp    0x1d89:0xfa35117b
  4046e7:	xor    BYTE PTR [ebx-0x1593264e],dl
  4046ed:	push   esp
  4046ee:	jge    0x404769
  4046f0:	push   edx
  4046f1:	jo     0x404730
  4046f3:	jbe    0x404713
  4046f5:	cdq    
  4046f6:	pop    ecx
  4046f7:	mov    al,0x36
  4046f9:	arpl   WORD PTR [ecx*2+0x6a72917a],di
  404700:	ds retf 
  404702:	jmp    0x919efe4d
  404707:	xor    DWORD PTR ds:0xdc16aa18,esi
  40470d:	xor    ch,dh
  40470f:	add    BYTE PTR [eax-0x43],0x97
  404713:	aas    
  404714:	jge    0x40477d
  404716:	or     eax,edx
  404718:	sub    ebp,DWORD PTR [esi-0x3f]
  40471b:	mov    DWORD PTR [ebp-0x65],esp
  40471e:	inc    eax
  40471f:	outs   dx,DWORD PTR fs:[esi]
  404721:	mov    ebx,0x39636e38
  404726:	call   0xc05a9b0d
  40472b:	and    BYTE PTR [esi-0xb],cl
  40472e:	mov    ebx,0xd7cab98f
  404733:	gs inc ebx
  404735:	adc    eax,0x100ccf8d
  40473a:	imul   esp
  40473c:	bound  ebx,QWORD PTR [esp+eiz*2+0x654bd45e]
  404743:	push   0xb1d19749
  404748:	arpl   di,cx
  40474a:	in     eax,0xb4
  40474c:	sbb    edi,DWORD PTR [ebx+0x6]
  40474f:	dec    edx
  404750:	sub    ch,bl
  404752:	ins    DWORD PTR es:[edi],dx
  404753:	xchg   edx,eax
  404754:	pushf  
  404755:	loopne 0x404701
  404757:	mov    bl,0xdc
  404759:	fistp  QWORD PTR ds:0x1378e3a
  40475f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404760:	je     0x4046fc
  404762:	sub    eax,0xd40cfcd3
  404767:	push   esp
  404768:	imul   ebp,DWORD PTR [esp+ecx*2+0x2f],0x2
  40476d:	push   edi
  40476e:	xor    eax,0x5852578d
  404773:	in     eax,0x4c
  404775:	push   ecx
  404776:	mov    cl,0xb1
  404778:	dec    edx
  404779:	xchg   ebx,eax
  40477a:	retf   0x806d
  40477d:	das    
  40477e:	xchg   ebp,eax
  40477f:	and    al,0xf4
  404781:	int    0xb9
  404783:	mov    bl,0xff
  404785:	mov    es,WORD PTR [ebx-0x7]
  404788:	icebp  
  404789:	aas    
  40478a:	int3   
  40478b:	aas    
  40478c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40478e:	addr16 (bad) 
  404790:	jmp    0x4047d8
  404792:	imul   esi,edi,0x34c11000
  404798:	aam    0xc4
  40479a:	mov    dl,0x51
  40479c:	(bad)  
  40479d:	or     dh,bh
  40479f:	jg     0x40481c
  4047a1:	sub    ebp,DWORD PTR [ebx+ebp*1-0x25]
  4047a5:	shr    BYTE PTR [eax-0x7c0bab03],cl
  4047ab:	icebp  
  4047ac:	add    al,0xf5
  4047ae:	hlt    
  4047af:	lods   al,BYTE PTR ds:[esi]
  4047b0:	popa   
  4047b1:	shr    DWORD PTR [edi],cl
  4047b3:	retf   
  4047b4:	sub    cl,BYTE PTR [ecx+edx*1]
  4047b7:	fistp  QWORD PTR [ebx+edx*4+0x46661cf9]
  4047be:	stc    
  4047bf:	nop
  4047c0:	cmp    ch,ch
  4047c2:	cmp    cl,BYTE PTR [ebp-0x4f64adee]
  4047c8:	cdq    
  4047c9:	inc    edx
  4047ca:	lahf   
  4047cb:	shl    BYTE PTR [edi],cl
  4047cd:	sbb    BYTE PTR [esi-0x19d9678d],0xf8
  4047d4:	jle    0x4047f5
  4047d6:	mov    esp,0x109d9d0b
  4047db:	and    bl,BYTE PTR [edx]
  4047dd:	mov    ds:0xf7122020,eax
  4047e2:	inc    ebx
  4047e3:	pop    edi
  4047e4:	mov    ch,0x1d
  4047e6:	dec    esi
  4047e7:	push   esi
  4047e8:	fisttp WORD PTR [ecx+0x47]
  4047eb:	imul   eax,ebx,0xd24edae3
  4047f1:	sub    BYTE PTR ds:0x84f78f0f,0x3e
  4047f8:	inc    edx
  4047f9:	hlt    
  4047fa:	inc    ebp
  4047fb:	jge    0x404795
  4047fd:	push   0xc8c76ac2
  404802:	mov    al,0x37
  404804:	js     0x40482a
  404806:	cs push cs
  404808:	pop    ebx
  404809:	add    esp,ebp
  40480b:	jmp    DWORD PTR [ebp+edx*8-0x662ffa7a]
  404812:	jno    0x404821
  404814:	inc    edi
  404815:	jb     0x404855
  404817:	call   0xa648526a
  40481c:	sub    DWORD PTR [ebp+0xc],edi
  40481f:	push   edx
  404820:	mov    ebx,0x88b120dd
  404825:	add    eax,0x7ab0711a
  40482a:	xchg   edi,eax
  40482b:	add    al,BYTE PTR [ebp+0x44c49ca7]
  404831:	dec    esi
  404832:	sub    BYTE PTR [edi+0xf],bh
  404835:	inc    ecx
  404836:	(bad)  
  404837:	sbb    edi,ebp
  404839:	mov    eax,ds:0x5b36ff81
  40483e:	retf   
  40483f:	mov    ah,0xf0
  404841:	sbb    eax,DWORD PTR [edi+edi*8-0x5b98fc04]
  404848:	xchg   esi,eax
  404849:	pusha  
  40484a:	cdq    
  40484b:	pop    ss
  40484c:	lahf   
  40484d:	jecxz  0x40489e
  40484f:	hlt    
  404850:	scas   al,BYTE PTR es:[edi]
  404851:	out    0xad,al
  404853:	(bad)  
  404854:	jmp    0x40482c
  404856:	shl    ecx,cl
  404858:	xor    ch,ch
  40485a:	dec    ecx
  40485b:	xlat   BYTE PTR ds:[ebx]
  40485c:	adc    eax,DWORD PTR [edx+0x46b74427]
  404862:	scas   eax,DWORD PTR es:[edi]
  404863:	enter  0x4e2a,0x99
  404867:	gs icebp 
  404869:	mov    dh,0x83
  40486b:	lods   al,BYTE PTR ds:[esi]
  40486c:	inc    DWORD PTR [ecx-0x1c]
  40486f:	hlt    
  404870:	xor    eax,0xbab60852
  404875:	sub    eax,0x491e5639
  40487a:	les    ebx,FWORD PTR [ebx+0x6bd58d15]
  404880:	cli    
  404881:	dec    ebp
  404882:	aas    
  404883:	test   al,0x7e
  404885:	mov    eax,ds:0x7f348889
  40488a:	(bad)  
  40488b:	loope  0x4048cf
  40488d:	dec    edi
  40488e:	es sbb eax,0xbec51ba5
  404894:	fs jo  0x4048d1
  404897:	mov    ch,0x91
  404899:	nop
  40489a:	jno    0x40484a
  40489c:	cmc    
  40489d:	jge    0x4048a6
  40489f:	lods   al,BYTE PTR ds:[esi]
  4048a0:	adc    BYTE PTR [edi+0xd],0x48
  4048a4:	xlat   BYTE PTR ds:[ebx]
  4048a5:	push   cs
  4048a6:	add    BYTE PTR [ecx-0x5a],al
  4048a9:	pop    ebx
  4048aa:	push   ebx
  4048ab:	sbb    al,0xad
  4048ad:	sti    
  4048ae:	jmp    0x404907
  4048b0:	mov    al,ds:0xe33089f
  4048b5:	arpl   WORD PTR [esi-0x48],ax
  4048b8:	xchg   ebp,eax
  4048b9:	jo     0x4048f6
  4048bb:	call   0x462264ea
  4048c0:	mov    al,0x30
  4048c2:	or     cl,cl
  4048c4:	cwde   
  4048c5:	add    edi,ecx
  4048c7:	outs   dx,DWORD PTR ds:[esi]
  4048c8:	push   esi
  4048c9:	dec    edx
  4048ca:	int3   
  4048cb:	repz ja 0x404939
  4048ce:	pop    eax
  4048cf:	jmp    0x3045:0x64cc71c1
  4048d6:	fsubr  DWORD PTR [eax]
  4048d8:	jns    0x4048f1
  4048da:	adc    al,0x9a
  4048dc:	mov    al,0xdb
  4048de:	xchg   BYTE PTR [eax],bh
  4048e0:	add    ebp,DWORD PTR [eax+esi*4]
  4048e3:	xchg   ebp,eax
  4048e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e5:	lods   eax,DWORD PTR ds:[esi]
  4048e6:	(bad)  
  4048e7:	(bad)  
  4048e8:	sub    esi,DWORD PTR [ecx+ebx*1-0x41]
  4048ec:	and    DWORD PTR gs:[edx-0x2c273da4],edi
  4048f3:	fsub   QWORD PTR [eax+0x2cb5d244]
  4048f9:	test   BYTE PTR [ecx+esi*8+0xcfa5f46],0x29
  404901:	mov    bh,0x29
  404903:	xchg   ebp,eax
  404904:	mov    dh,0x89
  404906:	jo     0x404891
  404908:	push   es
  404909:	mov    bl,BYTE PTR [ebx+0x60e6be10]
  40490f:	or     DWORD PTR [esi+0x20a53a5f],edx
  404915:	int3   
  404916:	scas   eax,DWORD PTR es:[edi]
  404917:	jmp    0x40493b
  404919:	mov    gs,WORD PTR [edx+ecx*8]
  40491c:	add    al,0x22
  40491e:	push   edx
  40491f:	bound  ecx,QWORD PTR [esi+0x1c5ea53b]
  404925:	imul   edx,DWORD PTR [edi],0x21
  404928:	and    al,0x88
  40492a:	repnz lahf 
  40492c:	jbe    0x404946
  40492e:	and    al,0x6e
  404930:	jae    0x4048e8
  404932:	loop   0x404913
  404934:	mov    DWORD PTR ds:0x8fd9421d,edx
  40493a:	sub    al,0x2e
  40493c:	cmp    al,0x94
  40493e:	or     al,0x49
  404940:	push   edx
  404941:	push   ecx
  404942:	xor    eax,0x9dd14abe
  404947:	push   ebx
  404948:	fist   WORD PTR [edx+0x225b7be8]
  40494e:	in     eax,0x60
  404950:	adc    DWORD PTR [edi+0x41046214],ebx
  404956:	ja     0x4049d6
  404958:	lahf   
  404959:	in     al,dx
  40495a:	push   ebx
  40495b:	int3   
  40495c:	sub    DWORD PTR [ecx-0x12e92bc4],ecx
  404962:	sbb    DWORD PTR [esp+eax*8-0x116d6b78],esi
  404969:	dec    ecx
  40496a:	clc    
  40496b:	pop    esi
  40496c:	rcr    bh,cl
  40496e:	and    ch,BYTE PTR [ebp-0x22e032ac]
  404974:	sub    BYTE PTR [ecx],al
  404976:	xor    BYTE PTR [eax-0xc],dh
  404979:	and    dh,ah
  40497b:	xchg   ebx,eax
  40497c:	std    
  40497d:	sub    eax,0x8f1718d5
  404982:	lods   eax,DWORD PTR ds:[esi]
  404983:	mov    esp,0x699c320
  404988:	jae    0x4049a8
  40498a:	or     BYTE PTR [esi+ebp*2-0x4a],ch
  40498e:	pushf  
  40498f:	adc    ebp,DWORD PTR [esi+0x6e]
  404992:	push   ebx
  404993:	repz jle 0x404a0f
  404996:	arpl   si,si
  404998:	jl     0x404a09
  40499a:	or     eax,0x298bb67b
  40499f:	sub    eax,0x7cde93c7
  4049a4:	(bad)  ds:0x6198e2dd
  4049aa:	mov    gs,WORD PTR ds:0xa35b4c75
  4049b0:	retf   
  4049b1:	xor    al,0x8b
  4049b3:	xchg   DWORD PTR [ecx+0x2d],ebp
  4049b6:	std    
  4049b7:	sub    ah,BYTE PTR [eax-0x35]
  4049ba:	push   ss
  4049bb:	push   cs
  4049bc:	clc    
  4049bd:	adc    ebp,esp
  4049bf:	xlat   BYTE PTR ds:[ebx]
  4049c0:	shl    DWORD PTR [ebp+0x2c],1
  4049c3:	jns    0x404a39
  4049c5:	dec    edx
  4049c6:	(bad)  
  4049c7:	enter  0x195f,0x3
  4049cb:	pop    edx
  4049cc:	stos   BYTE PTR es:[edi],al
  4049cd:	or     cl,BYTE PTR ss:[edi+0x74b88d89]
  4049d4:	fcom   DWORD PTR [eax-0xb]
  4049d7:	add    DWORD PTR [ecx-0x10aad53b],esi
  4049dd:	xor    BYTE PTR [edi+0x435d3a34],cl
  4049e3:	adc    esi,edi
  4049e5:	in     al,dx
  4049e6:	dec    edi
  4049e7:	(bad)  
  4049e8:	repnz add DWORD PTR [ebp+0x78],edx
  4049ec:	(bad)  
  4049ed:	pusha  
  4049ee:	jo     0x404a2a
  4049f0:	jmp    0xb58d:0x8fe3f077
  4049f7:	dec    edi
  4049f8:	mov    esp,0xb47ac72f
  4049fd:	xchg   edx,eax
  4049fe:	adc    BYTE PTR ds:0xf3ef9100,bl
  404a04:	mov    cl,0x10
  404a06:	jg     0x404a4c
  404a08:	xor    edx,ebp
  404a0a:	imul   DWORD PTR [ebx+0x6d70b21c]
  404a10:	(bad)  
  404a11:	pop    ss
  404a12:	xor    cl,BYTE PTR [esi-0x6a643576]
  404a18:	std    
  404a19:	ins    DWORD PTR es:[edi],dx
  404a1a:	arpl   WORD PTR [esi+edi*4-0x193f05b5],sp
  404a21:	das    
  404a22:	int3   
  404a23:	loop   0x404a93
  404a25:	(bad)  
  404a26:	or     edi,DWORD PTR [esi+0x3be487a0]
  404a2c:	test   al,0x78
  404a2e:	xchg   ecx,eax
  404a2f:	scas   eax,DWORD PTR es:[edi]
  404a30:	add    ebp,DWORD PTR ds:0xd69a9020
  404a36:	(bad)  
  404a37:	pop    eax
  404a38:	retf   0x9b8b
  404a3b:	aas    
  404a3c:	std    
  404a3d:	das    
  404a3e:	add    esp,DWORD PTR [ebp-0x4]
  404a41:	lea    esp,[eax+0x59]
  404a44:	mov    ebx,0x5562b2e6
  404a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4a:	repz pop edx
  404a4c:	xor    edi,DWORD PTR [ebp+0x40889ece]
  404a52:	cmp    BYTE PTR [edx+eiz*2-0x38562a62],bh
  404a59:	jp     0x404a90
  404a5b:	outs   dx,BYTE PTR ds:[esi]
  404a5c:	or     eax,esi
  404a5e:	jle    0x404aaf
  404a60:	inc    ecx
  404a61:	and    edx,DWORD PTR [edx+0x3da4c676]
  404a67:	gs cld 
  404a69:	adc    al,BYTE PTR [ebp-0xa]
  404a6c:	jae    0x404ab5
  404a6e:	fist   WORD PTR [ecx]
  404a70:	push   eax
  404a71:	sbb    edx,ebp
  404a73:	pusha  
  404a74:	push   ebx
  404a75:	and    dl,BYTE PTR ds:0xf1e23ea6
  404a7b:	ja     0x404a10
  404a7d:	pop    ecx
  404a7e:	mov    dh,0x88
  404a80:	push   cs
  404a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a82:	push   0xd9e5d17f
  404a87:	jle    0x404a3a
  404a89:	mov    esi,0x832089c6
  404a8e:	jno    0x404abf
  404a90:	jle    0x404a28
  404a92:	in     al,0x3
  404a94:	or     eax,0x476fcede
  404a99:	dec    esp
  404a9a:	mov    ds:0x413550de,al
  404a9f:	stos   BYTE PTR es:[edi],al
  404aa0:	aad    0x62
  404aa2:	jo     0x404af1
  404aa4:	adc    al,0xac
  404aa6:	fild   WORD PTR [ecx]
  404aa8:	pop    esi
  404aa9:	mov    ch,0x3b
  404aab:	mov    ebp,0x36ac4311
  404ab0:	push   0xd87d94b9
  404ab5:	jbe    0x404a73
  404ab7:	mov    al,ds:0xffba1f60
  404abc:	cli    
  404abd:	xchg   esp,eax
  404abe:	dec    edx
  404abf:	out    0x28,eax
  404ac1:	mov    al,ds:0x6d80e7d0
  404ac6:	aas    
  404ac7:	arpl   WORD PTR [esi-0x3d],bp
  404aca:	pushf  
  404acb:	mov    dl,0x57
  404acd:	or     eax,DWORD PTR [edx]
  404acf:	popf   
  404ad0:	jo     0x404b51
  404ad2:	mov    ch,BYTE PTR [eax-0x1786b575]
  404ad8:	fwait
  404ad9:	pop    ecx
  404ada:	inc    ecx
  404adb:	mov    eax,0xc36fff19
  404ae0:	mov    ah,BYTE PTR [edx]
  404ae2:	cmp    BYTE PTR [edx-0x13],dl
  404ae5:	push   cs
  404ae6:	lods   eax,DWORD PTR ds:[esi]
  404ae7:	rcl    DWORD PTR [eax-0x9],1
  404aea:	cmp    edx,esp
  404aec:	push   ds
  404aed:	addr16 push ebx
  404aef:	xchg   dh,al
  404af1:	cdq    
  404af2:	(bad)  
  404af3:	cmp    al,0x71
  404af5:	mov    ch,0xeb
  404af7:	(bad)  
  404af9:	or     dh,BYTE PTR [eax+0x71]
  404afc:	mov    ch,0xdb
  404afe:	pop    edi
  404aff:	ja     0x404ab5
  404b01:	xor    dh,BYTE PTR ds:0xa7d18be6
  404b07:	inc    ecx
  404b08:	mov    ds:0xc0686ce1,eax
  404b0d:	inc    edx
  404b0e:	loop   0x404ae3
  404b10:	cmp    eax,0xca6fba4e
  404b15:	(bad)  
  404b19:	rol    bl,1
  404b1b:	idiv   dh
  404b1d:	xlat   BYTE PTR ds:[ebx]
  404b1e:	out    0x27,al
  404b20:	xor    DWORD PTR [esi+ebp*2+0x2e],0x5f
  404b25:	cmp    ebx,esp
  404b27:	adc    al,dl
  404b29:	cdq    
  404b2a:	mov    ebx,0x699818c2
  404b2f:	pop    ebx
  404b30:	fwait
  404b31:	jbe    0x404b19
  404b33:	mov    ch,0xfa
  404b35:	xor    DWORD PTR [ebx+0x5e7ed9d8],ebp
  404b3b:	aam    0x97
  404b3d:	sbb    dh,BYTE PTR [edi+0x18]
  404b40:	cmp    bl,BYTE PTR [ebx-0x68fc5771]
  404b46:	mov    ch,0xa2
  404b48:	xor    edx,DWORD PTR [edx+0x38]
  404b4b:	add    al,0xae
  404b4d:	and    edx,eax
  404b4f:	aad    0x9a
  404b51:	es js  0x404b51
  404b54:	mov    ebx,0x2ca5d07a
  404b59:	ror    DWORD PTR [ebx],cl
  404b5b:	push   ebx
  404b5c:	mov    DWORD PTR [ecx+ecx*8],edx
  404b5f:	mov    al,0xe7
  404b61:	ins    BYTE PTR es:[edi],dx
  404b62:	stc    
  404b63:	out    dx,eax
  404b64:	add    DWORD PTR [edx+ebx*2+0x2c391b75],0x81d29637
  404b6f:	xchg   ebx,eax
  404b70:	xchg   edi,eax
  404b71:	add    al,0x8f
  404b73:	xchg   esi,eax
  404b74:	cmp    BYTE PTR [ecx+0x468150a],cl
  404b7a:	inc    esi
  404b7b:	aad    0x72
  404b7d:	dec    edx
  404b7e:	and    al,0x41
  404b80:	adc    al,0xd6
  404b82:	je     0x404b17
  404b84:	lods   eax,DWORD PTR ds:[esi]
  404b85:	jp     0x404b8a
  404b87:	test   eax,0x7b6bdafe
  404b8c:	bound  eax,QWORD PTR [ecx+eiz*1]
  404b8f:	sbb    eax,0x44
  404b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b93:	das    
  404b94:	ja     0x404b8a
  404b96:	push   ebx
  404b97:	jge    0x404bce
  404b99:	mov    ebp,0xc185996
  404b9e:	adc    al,0x47
  404ba0:	cdq    
  404ba1:	dec    ebp
  404ba2:	push   edi
  404ba3:	fwait
  404ba4:	cld    
  404ba5:	retw   
  404ba7:	inc    ebp
  404ba8:	lods   eax,DWORD PTR ds:[esi]
  404ba9:	and    dh,BYTE PTR [edx+0x75]
  404bac:	cmc    
  404bad:	test   DWORD PTR [esi+esi*1],ebp
  404bb0:	out    dx,eax
  404bb1:	repz xchg ecx,eax
  404bb3:	jo     0x404ba7
  404bb5:	lds    ebx,FWORD PTR [edx-0x69]
  404bb8:	mov    ah,0xe6
  404bba:	sahf   
  404bbb:	adc    al,0x16
  404bbd:	enter  0x35ef,0x52
  404bc1:	je     0x404b6b
  404bc3:	push   0x2c
  404bc5:	mov    esp,0xab4145d
  404bca:	add    eax,0x7f3faf5e
  404bcf:	dec    ebp
  404bd0:	cmp    BYTE PTR [esi+0x6e514b4f],dl
  404bd6:	push   0x7fa36c0a
  404bdb:	js     0x404bb7
  404bdd:	sub    eax,0x7c2d7c55
  404be2:	scas   eax,DWORD PTR es:[edi]
  404be3:	idiv   DWORD PTR [ebx+0x48]
  404be6:	call   0x2c63c7c2
  404beb:	sahf   
  404bec:	mov    ah,0x11
  404bee:	or     ebx,DWORD PTR [ebp-0x116de920]
  404bf4:	cmp    DWORD PTR [eax+0x2a],ebx
  404bf7:	push   ebx
  404bf8:	out    0xe1,al
  404bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bfb:	mov    al,0xcb
  404bfd:	jbe    0x404c2d
  404bff:	push   ecx
  404c00:	mov    al,ds:0xfe492be6
  404c05:	aad    0x24
  404c07:	mov    al,ss:0xf8749c06
  404c0d:	mov    edi,0xa5930703
  404c12:	mov    al,0x80
  404c14:	mov    bh,BYTE PTR [edi+0x611c476a]
  404c1a:	iret   
  404c1b:	or     DWORD PTR [esi],ebx
  404c1d:	jp     0x404c54
  404c1f:	mov    cl,0xae
  404c21:	sbb    DWORD PTR [ebp-0x4e1aff69],edi
  404c27:	imul   ebp,ecx,0xa7e43550
  404c2d:	imul   esp,DWORD PTR [ebx],0x3235f944
  404c33:	sub    edx,DWORD PTR [ebx]
  404c35:	jmp    0x14bfbdf8
  404c3a:	add    edi,DWORD PTR [ecx+0x7c]
  404c3d:	ret    0x3b95
  404c40:	adc    al,0x46
  404c42:	mov    ds:0x2c385c0a,eax
  404c47:	loope  0x404c64
  404c49:	cmp    ecx,DWORD PTR [edx*1-0x7e0fb519]
  404c50:	cld    
  404c51:	cmp    ah,BYTE PTR [esi+0x9]
  404c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c55:	push   ss
  404c56:	xor    ebp,DWORD PTR [ebx]
  404c58:	sub    eax,0xaac07ff4
  404c5d:	mov    ebp,0x740238f9
  404c62:	test   DWORD PTR [ecx-0xa],esp
  404c65:	lods   al,BYTE PTR ds:[esi]
  404c66:	test   BYTE PTR [eax+0x32edd6e5],bh
  404c6c:	jae    0x404ca5
  404c6e:	jge    0x404c7f
  404c70:	cdq    
  404c71:	rcr    bl,1
  404c73:	add    eax,0x2c35ad3
  404c78:	mov    dl,0x5
  404c7a:	mov    dl,0x25
  404c7c:	fild   DWORD PTR ds:0x151097ea
  404c82:	shl    esp,1
  404c84:	mov    ecx,ds
  404c86:	ror    BYTE PTR [ebp+0x3b],1
  404c89:	cmp    esp,eax
  404c8b:	ins    BYTE PTR es:[edi],dx
  404c8c:	cdq    
  404c8d:	adc    dh,cl
  404c8f:	gs test eax,0x93acd5db
  404c95:	ficomp DWORD PTR [esi-0x484e44c9]
  404c9b:	div    DWORD PTR [esi-0x8]
  404c9e:	fst    DWORD PTR [eax+esi*4+0x4e]
  404ca2:	sbb    BYTE PTR [edx-0x1ad6ab9b],ah
  404ca8:	loop   0x404c8b
  404caa:	xchg   ebp,eax
  404cab:	jl     0x404ca1
  404cad:	into   
  404cae:	xchg   edi,eax
  404caf:	push   eax
  404cb0:	pushf  
  404cb1:	add    ecx,DWORD PTR [ebp+esi*4+0x6a356256]
  404cb8:	inc    eax
  404cb9:	dec    edi
  404cba:	jns    0x404ca6
  404cbc:	mov    eax,ds:0x3e799064
  404cc1:	mov    ah,0x89
  404cc3:	xchg   ebx,eax
  404cc4:	add    al,0xc
  404cc6:	loope  0x404c6b
  404cc8:	cmp    dl,BYTE PTR [eax]
  404cca:	xchg   ebx,eax
  404ccb:	fdivr  QWORD PTR [eax+0x71252080]
  404cd1:	scas   eax,DWORD PTR es:[edi]
  404cd2:	push   esp
  404cd3:	jnp    0x404c61
  404cd5:	out    dx,al
  404cd6:	pop    edx
  404cd7:	push   eax
  404cd8:	inc    ecx
  404cd9:	push   esi
  404cda:	scas   eax,DWORD PTR es:[edi]
  404cdb:	jb     0x404d4e
  404cdd:	mov    cl,0xd8
  404cdf:	in     eax,0x89
  404ce1:	pop    ebp
  404ce2:	dec    edx
  404ce3:	fs aad 0x85
  404ce6:	aaa    
  404ce7:	ret    
  404ce8:	loop   0x404d16
  404cea:	sbb    esi,DWORD PTR [ebx]
  404cec:	fstp   st(0)
  404cee:	xor    eax,0x8ea45bdd
  404cf3:	shl    DWORD PTR [esi],0xf1
  404cf6:	(bad)  
  404cf7:	xlat   BYTE PTR ds:[ebx]
  404cf8:	xchg   BYTE PTR [ecx-0x46],bl
  404cfb:	and    DWORD PTR fs:[esi-0x5f914c87],edx
  404d02:	dec    edi
  404d03:	pushf  
  404d04:	lods   eax,DWORD PTR ds:[esi]
  404d05:	mov    eax,ds:0xd73eefec
  404d0a:	xchg   edi,eax
  404d0b:	cmp    eax,0xe10cf55b
  404d10:	mov    ebp,0x77f5dd1f
  404d15:	cmc    
  404d16:	sbb    dh,cl
  404d18:	or     eax,0xa6641f98
  404d1d:	jae    0x404d9d
  404d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d20:	repz rcl DWORD PTR [edx],0xb6
  404d24:	pop    eax
  404d25:	shl    BYTE PTR [edi+0x3fa3975],0xb4
  404d2c:	xlat   BYTE PTR ds:[ebx]
  404d2d:	ins    DWORD PTR es:[edi],dx
  404d2e:	sti    
  404d2f:	ret    
  404d30:	push   0x538cedd3
  404d35:	fdiv   QWORD PTR [edi-0x686a4de1]
  404d3b:	aaa    
  404d3c:	das    
  404d3d:	xchg   ebx,eax
  404d3e:	jmp    0x404d37
  404d40:	aam    0x9c
  404d42:	xchg   esi,eax
  404d43:	scas   al,BYTE PTR es:[edi]
  404d44:	or     cl,ah
  404d46:	mov    DWORD PTR [ecx-0x5b],ebp
  404d49:	dec    ebx
  404d4a:	jae    0x404d47
  404d4c:	ss and al,0xb1
  404d4f:	inc    edx
  404d50:	mov    esi,DWORD PTR [ebx-0x4e]
  404d53:	cmp    BYTE PTR [ebx+0x7e1ac5a6],bh
  404d59:	and    DWORD PTR ds:[eax],ebp
  404d5c:	int    0xb3
  404d5e:	cdq    
  404d5f:	xchg   esp,eax
  404d60:	clc    
  404d61:	sbb    ah,BYTE PTR [esi]
  404d63:	shl    BYTE PTR [esi-0x5688923b],0xbd
  404d6a:	repz js 0x404d4b
  404d6d:	loop   0x404d73
  404d6f:	(bad)  
  404d70:	sti    
  404d71:	jmp    0x2f9f4705
  404d76:	fprem1 
  404d78:	ds mov bl,0xd8
  404d7b:	mov    eax,ds:0xbec7c0f3
  404d80:	dec    ebx
  404d81:	mov    dl,ah
  404d83:	out    dx,al
  404d84:	int    0x9d
  404d86:	loop   0x404d3f
  404d88:	bound  ebp,QWORD PTR [edi]
  404d8a:	or     ebp,DWORD PTR [ebp-0x3b2a9f79]
  404d90:	outs   dx,DWORD PTR ds:[esi]
  404d91:	sbb    cl,BYTE PTR [edi]
  404d93:	fisttp DWORD PTR [edi-0x4f254c19]
  404d99:	sar    BYTE PTR [ecx+edx*1-0x7c],1
  404d9d:	leave  
  404d9e:	add    ebx,DWORD PTR [esp+esi*4]
  404da1:	rcr    DWORD PTR [ecx+0x11889aff],1
  404da7:	add    cl,bh
  404da9:	out    dx,al
  404daa:	test   eax,0x761838d4
  404daf:	sub    BYTE PTR [edi],ch
  404db1:	data16 ficomp DWORD PTR ds:0xdc1742f5
  404db8:	push   ebx
  404db9:	adc    DWORD PTR [ebp+0x64cc6e41],0x5d4137ae
  404dc3:	repz pushf 
  404dc5:	pop    ebx
  404dc6:	hlt    
  404dc7:	out    0x9f,al
  404dc9:	mov    bh,0xd4
  404dcb:	inc    esp
  404dcc:	mov    esp,0x1c836971
  404dd1:	add    cl,0xc4
  404dd4:	pop    edi
  404dd5:	jmp    0x404de7
  404dd7:	xlat   BYTE PTR ds:[ebx]
  404dd8:	jmp    0x914a45ee
  404ddd:	mov    cl,0xab
  404ddf:	xor    ch,BYTE PTR ds:0x20e04db
  404de5:	xor    BYTE PTR [ecx+0xe],0x27
  404de9:	cmp    DWORD PTR [ebx+0x6a6b591e],esp
  404def:	fistp  QWORD PTR [edx+0x9]
  404df2:	xchg   esp,eax
  404df3:	(bad)  
  404df4:	xchg   ecx,eax
  404df5:	ja     0x404e2e
  404df7:	mov    gs,WORD PTR [ebp+0x6f]
  404dfa:	popf   
  404dfb:	sti    
  404dfc:	dec    edx
  404dfd:	out    0x13,eax
  404dff:	mov    ch,0x2e
  404e01:	cs sub eax,0x1bbd19f7
  404e07:	pop    ecx
  404e08:	sar    cl,cl
  404e0a:	mov    dl,0x2a
  404e0c:	adc    bh,BYTE PTR [eax]
  404e0e:	sub    BYTE PTR [edi-0x1a2072e2],bl
  404e14:	aam    0x19
  404e16:	mov    ecx,0xba0b4368
  404e1b:	add    DWORD PTR [edi+0x2ec824bc],0xffffff9a
  404e22:	mov    BYTE PTR [ebx+0x18ae631],0xbf
  404e29:	xlat   BYTE PTR ds:[ebx]
  404e2a:	sub    esp,DWORD PTR [esi]
  404e2c:	int3   
  404e2d:	(bad)  
  404e2e:	jge    0x404dc8
  404e30:	dec    esi
  404e31:	aam    0x93
  404e33:	add    cl,bl
  404e35:	adc    BYTE PTR [ebx-0x15],ah
  404e38:	and    BYTE PTR [esi-0x194f09fb],cl
  404e3e:	jge    0x404e2e
  404e40:	mov    ch,0xd
  404e42:	mov    WORD PTR [ecx],?
  404e44:	cs add esp,ecx
  404e47:	dec    ebp
  404e48:	push   eax
  404e49:	int    0x20
  404e4b:	outs   dx,DWORD PTR ds:[esi]
  404e4c:	cmp    eax,0x2a3ef847
  404e51:	in     al,dx
  404e52:	int3   
  404e53:	gs pop esi
  404e55:	mov    ecx,0xe56962af
  404e5a:	add    BYTE PTR [ecx],0x95
  404e5d:	mov    dh,0xfd
  404e5f:	add    al,0xac
  404e61:	fst    st(4)
  404e63:	mov    WORD PTR [esi-0x72],ss
  404e66:	stos   BYTE PTR es:[edi],al
  404e67:	dec    ecx
  404e68:	xor    dl,BYTE PTR [ebx-0x64]
  404e6b:	dec    esi
  404e6c:	pop    esp
  404e6d:	out    0x3c,eax
  404e6f:	sbb    BYTE PTR [esi+0x64a4ea19],al
  404e75:	adc    ch,BYTE PTR [ecx+0x743ec62]
  404e7b:	push   0x17
  404e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e7e:	ret    
  404e7f:	pop    ebp
  404e80:	int    0x8b
  404e82:	and    bh,BYTE PTR [esi-0x2ba68b06]
  404e88:	sar    BYTE PTR [edx-0x65],1
  404e8b:	jp     0x404ec5
  404e8d:	xchg   di,ax
  404e8f:	inc    edx
  404e90:	and    esi,DWORD PTR [edx-0x48c01811]
  404e96:	sahf   
  404e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e98:	and    BYTE PTR [esi+0x1e],0x33
  404e9c:	push   ecx
  404e9d:	jecxz  0x404eed
  404e9f:	popa   
  404ea0:	(bad)
  404ea4:	mov    edx,0xe5b5ae95
  404ea9:	mov    dh,0x3d
  404eab:	or     DWORD PTR [edx],0x628ffd14
  404eb1:	xchg   esp,eax
  404eb2:	mov    DWORD PTR [ecx-0x1152fac0],esp
  404eb8:	(bad)  
  404eb9:	xchg   BYTE PTR [ecx-0x14b23238],bl
  404ebf:	rol    BYTE PTR [edx],cl
  404ec1:	test   BYTE PTR [esi+0x46],0x67
  404ec5:	add    DWORD PTR [edi],eax
  404ec7:	add    al,0x50
  404ec9:	cmc    
  404eca:	add    ebx,0x14
  404ecd:	cmc    
  404ece:	call   0xe4de0fa8
  404ed3:	push   0x8d557d53
  404ed8:	jmp    0xa012:0x9c7003d5
  404edf:	mov    bh,0xaf
  404ee1:	rcr    DWORD PTR [edx],0x34
  404ee4:	and    al,0xaf
  404ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ee7:	dec    eax
  404ee8:	loope  0x404eec
  404eea:	pushf  
  404eeb:	popa   
  404eec:	rol    BYTE PTR [ebx-0x67c7b578],0x17
  404ef3:	shl    DWORD PTR [ebx],0x8b
  404ef6:	cmp    BYTE PTR [eax-0x3d088a6d],bh
  404efc:	push   esp
  404efd:	fnstsw WORD PTR [eax+0x1d]
  404f00:	or     BYTE PTR [esi],dh
  404f02:	jne    0x404ea7
  404f04:	add    bl,BYTE PTR [ebx+0x3b]
  404f07:	cs nop
  404f09:	cdq    
  404f0a:	xchg   edi,eax
  404f0b:	mov    ah,0x53
  404f0d:	retf   0xfeb1
  404f10:	and    eax,0xc7ff0ad8
  404f15:	pop    ebx
  404f16:	cmp    BYTE PTR [edx-0x1c9751d9],0x99
  404f1d:	hlt    
  404f1e:	pop    esp
  404f1f:	xchg   dl,al
  404f21:	xchg   edi,eax
  404f22:	jmp    0xedf4:0x5819a99b
  404f29:	test   al,0xb7
  404f2b:	cmp    esp,DWORD PTR [ecx]
  404f2d:	jb     0x404f3d
  404f2f:	sub    edx,DWORD PTR [esi*4+0x4f696623]
  404f36:	aad    0x7c
  404f38:	xchg   esi,eax
  404f39:	dec    ecx
  404f3a:	rcr    BYTE PTR [eax+0x28],1
  404f3d:	adc    ecx,DWORD PTR [eax]
  404f3f:	jb     0x404ede
  404f41:	jb     0x404f60
  404f43:	ins    BYTE PTR es:[edi],dx
  404f44:	shl    DWORD PTR [ebx+0x12],cl
  404f47:	jg     0x404f88
  404f49:	jp     0x404f37
  404f4b:	rcr    cl,0x36
  404f4e:	xlat   BYTE PTR ds:[ebx]
  404f4f:	push   edx
  404f50:	mov    eax,ds:0x7d8646a1
  404f55:	pusha  
  404f56:	mov    dl,0xc5
  404f58:	ds mov ecx,0x8ca3a903
  404f5e:	inc    esi
  404f5f:	jne    0x404fbf
  404f61:	push   cs
  404f62:	rcr    al,1
  404f64:	pop    esp
  404f65:	imul   DWORD PTR ds:0x946854a5
  404f6b:	mov    eax,0x96a39104
  404f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f71:	repnz add dl,dh
  404f74:	(bad)  
  404f76:	(bad)  
  404f77:	mov    ds:0x5b22d01d,eax
  404f7c:	pushf  
  404f7d:	ffreep st(7)
  404f7f:	dec    esp
  404f80:	out    dx,al
  404f81:	sub    ebx,DWORD PTR [edi-0x30b5027a]
  404f87:	cli    
  404f88:	call   DWORD PTR [edx-0x345162b]
  404f8e:	mov    edi,0xb9aff821
  404f93:	in     al,dx
  404f94:	fs jo  0x404f84
  404f97:	fwait
  404f98:	(bad)  
  404f99:	in     al,0xa9
  404f9b:	lock test eax,0xd94a78be
  404fa1:	pop    ebx
  404fa2:	call   0x4362:0x57699cee
  404fa9:	lea    edx,[esi+0x2c57b052]
  404faf:	adc    ebp,DWORD PTR [ecx]
  404fb1:	lods   eax,DWORD PTR ds:[esi]
  404fb2:	rcl    ch,1
  404fb4:	adc    DWORD PTR [edx-0x28],eax
  404fb7:	adc    eax,0x6596642c
  404fbc:	retf   0x7177
  404fbf:	pop    ebp
  404fc0:	ja     0x405023
  404fc2:	pushf  
  404fc3:	and    esi,DWORD PTR [ebx-0x7f48e102]
  404fc9:	fiadd  WORD PTR [esi-0x2ec1f32e]
  404fcf:	aas    
  404fd0:	xor    al,0x7d
  404fd2:	into   
  404fd3:	mov    esi,0x165e8d23
  404fd8:	jmp    0x4679:0x135823e1
  404fdf:	and    al,0xe4
  404fe1:	pop    edi
  404fe2:	bound  edx,QWORD PTR [ebx+ebp*8]
  404fe5:	fs adc al,0x76
  404fe8:	push   esp
  404fe9:	add    BYTE PTR [edx-0x70f9f3ac],0xe2
  404ff0:	xchg   ebp,eax
  404ff1:	mov    cl,BYTE PTR [ecx+edi*4-0x1e760875]
  404ff8:	addr16 enter 0xa8ee,0xd7
  404ffd:	push   esp
  404ffe:	and    eax,0xdede838
  405003:	mov    esi,0x4fe5ca4b
  405008:	sub    eax,0x5c0ed34a
  40500d:	sub    eax,0x660c6af7
  405012:	mov    ch,0xe8
  405014:	lods   eax,DWORD PTR ds:[esi]
  405015:	cwde   
  405016:	push   ss
  405017:	(bad)  
  405018:	out    0x4f,al
  40501a:	push   0x544a2dc2
  40501f:	(bad)  
  405021:	sub    edi,0xffffffc4
  405024:	pop    edi
  405025:	mov    ch,0xbb
  405027:	iret   
  405028:	pusha  
  405029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40502a:	add    eax,0x6bcb2dd5
  40502f:	mov    es,WORD PTR [ecx+0x37]
  405032:	mov    dl,0xa
  405034:	pop    esp
  405035:	outs   dx,DWORD PTR ds:[esi]
  405036:	fstp   QWORD PTR [edi-0x2c]
  405039:	xor    bl,dh
  40503b:	(bad)  
  40503d:	ret    
  40503e:	cmp    eax,0x6deee459
  405043:	mov    ds:0x417ea327,eax
  405048:	and    bl,bl
  40504a:	and    al,0xc8
  40504c:	mov    ah,0x25
  40504e:	imul   edi,DWORD PTR [ecx],0xffffff9c
  405051:	ss dec eax
  405053:	pop    ds
  405054:	jecxz  0x404fec
  405056:	add    ch,BYTE PTR [ecx+0x7]
  405059:	cmc    
  40505a:	mov    edi,0x1d8be110
  40505f:	xor    BYTE PTR [esi-0x638a1957],ch
  405065:	mov    ch,0x88
  405067:	inc    esp
  405068:	push   ecx
  405069:	imul   esp,DWORD PTR [edi+0x38f49f6],0x2c
  405070:	(bad)  
  405071:	pusha  
  405072:	sub    BYTE PTR [ebp+edx*4+0x40676d75],0x2d
  40507a:	adc    al,0xf9
  40507c:	jecxz  0x405087
  40507e:	iret   
  40507f:	jb     0x4050fc
  405081:	push   0x66
  405083:	sbb    eax,0xf027c7d3
  405088:	inc    ecx
  405089:	fcmovne st,st(5)
  40508b:	in     al,0xf2
  40508d:	lock sar DWORD PTR [ecx-0x5fe3485b],cl
  405094:	inc    ecx
  405095:	scas   eax,DWORD PTR es:[edi]
  405096:	ds adc edx,eax
  405099:	(bad)  
  40509a:	cli    
  40509b:	cmp    al,al
  40509d:	mov    ecx,0x8845ca8d
  4050a2:	push   cs
  4050a3:	mov    eax,ds:0xf9c2f881
  4050a8:	dec    esp
  4050a9:	int3   
  4050aa:	std    
  4050ab:	cmp    ah,bh
  4050ad:	dec    ebx
  4050ae:	test   al,0x5d
  4050b0:	jmp    0x4050af
  4050b2:	push   ecx
  4050b3:	add    dl,dh
  4050b5:	ficom  DWORD PTR [eax]
  4050b7:	je     0x4050f4
  4050b9:	je     0x4050c5
  4050bb:	clc    
  4050bc:	or     BYTE PTR [eax+0x38547f1b],0xe9
  4050c3:	rcr    DWORD PTR [eax+0x4e],1
  4050c6:	cwde   
  4050c7:	inc    esi
  4050c8:	aam    0x25
  4050ca:	jmp    0xbf1ac0cb
  4050cf:	fcmovnb st,st(2)
  4050d1:	in     al,0x35
  4050d3:	mov    ch,0x12
  4050d5:	mov    edx,0x8dc1e999
  4050da:	cmc    
  4050db:	(bad)  
  4050dc:	push   0xce1903d0
  4050e1:	sub    ch,BYTE PTR [edx+esi*1]
  4050e4:	out    dx,al
  4050e5:	mov    bl,0x7f
  4050e7:	and    dl,BYTE PTR [ecx-0x16]
  4050ea:	fcmovu st,st(7)
  4050ec:	xchg   BYTE PTR [eax+0x43],dh
  4050ef:	mov    ecx,0x14b36d48
  4050f4:	arpl   ax,bx
  4050f6:	leave  
  4050f7:	out    0x3,eax
  4050f9:	dec    edx
  4050fa:	js     0x405133
  4050fc:	push   cs
  4050fd:	mov    ch,0x28
  4050ff:	inc    ebp
  405100:	adc    DWORD PTR [ecx+0x3c],eax
  405103:	ror    BYTE PTR [ebp-0x3b2eb098],1
  405109:	mov    ebp,0xa5831a03
  40510e:	repz xor BYTE PTR [ecx+eiz*1-0x50],0xc5
  405114:	je     0x40517c
  405116:	sub    BYTE PTR [ebx-0x7bfe34da],ah
  40511c:	dec    ebx
  40511d:	loopne 0x40518f
  40511f:	adc    ebp,DWORD PTR [esi]
  405121:	std    
  405122:	fidivr WORD PTR [edx-0x73b15293]
  405128:	sub    eax,0xb6571f7b
  40512d:	jae    0x40512d
  40512f:	in     eax,dx
  405130:	mov    eax,ds:0xdba619df
  405135:	sub    DWORD PTR [eax],0x5
  405138:	push   edi
  405139:	lods   eax,DWORD PTR ds:[esi]
  40513a:	add    edi,ebp
  40513c:	scas   al,BYTE PTR es:[edi]
  40513d:	push   ss
  40513e:	mov    esp,0x7fff317
  405143:	aas    
  405144:	cs or  ecx,ebx
  405147:	pusha  
  405148:	adc    BYTE PTR [ebp-0x3af5cc46],dl
  40514e:	sbb    eax,0xe35aee29
  405153:	push   ss
  405154:	ins    BYTE PTR es:[edi],dx
  405155:	mov    al,0xa4
  405157:	mov    cl,0x8a
  405159:	data16 xlat BYTE PTR ds:[ebx]
  40515b:	out    dx,al
  40515c:	lahf   
  40515d:	sti    
  40515e:	add    BYTE PTR [ecx-0x3d598dc4],0xa
  405165:	mov    ebp,0x3774812e
  40516a:	shl    DWORD PTR [edx],cl
  40516c:	dec    ecx
  40516d:	lods   eax,DWORD PTR ds:[esi]
  40516e:	adc    eax,0x63264d2e
  405173:	pop    esi
  405174:	lods   al,BYTE PTR ds:[esi]
  405175:	adc    ebp,DWORD PTR [ecx+0x58]
  405178:	mov    ds:0x8ed09fef,eax
  40517d:	call   0xa98a:0x7df70c96
  405184:	cmp    al,cl
  405186:	(bad)  
  405187:	sbb    esi,DWORD PTR [eax-0x4e19f878]
  40518d:	bound  esi,QWORD PTR [ebx+0x6b6687d2]
  405193:	mov    ds:0xb7e69e9c,al
  405198:	mov    eax,ds:0x4b7d2249
  40519d:	adc    BYTE PTR [ecx],dl
  40519f:	dec    edx
  4051a0:	(bad)  
  4051a1:	xor    DWORD PTR [ebp-0x100c1a59],edx
  4051a7:	das    
  4051a8:	add    DWORD PTR [bx+di+0x1dcf],ebx
  4051ad:	cmp    ebp,edi
  4051af:	pop    ss
  4051b0:	call   0x1843:0x870d3fe2
  4051b7:	mov    edx,0xb8bfa718
  4051bc:	jecxz  0x405146
  4051be:	int    0x92
  4051c0:	inc    edi
  4051c1:	(bad)
  4051c5:	mov    al,0x38
  4051c7:	inc    ecx
  4051c8:	dec    BYTE PTR [esi-0x54]
  4051cb:	xchg   edx,eax
  4051cc:	pusha  
  4051cd:	push   esi
  4051ce:	mov    bl,0x60
  4051d0:	and    ebx,DWORD PTR ds:0x49df1950
  4051d6:	mov    ds:0x8900ac1d,al
  4051db:	fsubr  QWORD PTR [edx-0x711549d3]
  4051e1:	daa    
  4051e2:	adc    DWORD PTR [edi],ecx
  4051e4:	loopne 0x405261
  4051e6:	fwait
  4051e7:	add    eax,0x25a99dca
  4051ec:	imul   edx,esi,0xffffff8f
  4051ef:	xor    al,0xfa
  4051f1:	mov    cl,0x1c
  4051f3:	sub    bh,ch
  4051f5:	push   ds
  4051f6:	mov    esp,0x16a3863a
  4051fb:	leave  
  4051fc:	lods   al,BYTE PTR ds:[esi]
  4051fd:	mov    ecx,0x7f97b2c0
  405202:	xchg   ecx,edx
  405204:	std    
  405205:	aad    0xea
  405207:	in     al,dx
  405208:	ins    BYTE PTR es:[edi],dx
  405209:	stc    
  40520a:	mov    eax,ebx
  40520c:	pop    es
  40520d:	mov    eax,0x5825321e
  405212:	jmp    0x8a13:0xed055871
  405219:	or     ebx,DWORD PTR [eax]
  40521b:	sub    esi,DWORD PTR [esi-0x24]
  40521e:	shl    BYTE PTR [edi-0x7f017cf2],cl
  405224:	je     0x405259
  405226:	add    dh,BYTE PTR [eax]
  405228:	and    al,0x25
  40522a:	pop    esi
  40522b:	push   DWORD PTR [esi-0x49]
  40522e:	mov    al,0xcb
  405230:	test   BYTE PTR ds:0x1d9c5c1f,al
  405236:	lea    ecx,[ebx+0x8]
  405239:	jmp    0xf83b:0x2918e3b1
  405240:	xchg   edi,eax
  405241:	and    DWORD PTR [edi-0x17],0x7e8894db
  405248:	xchg   edi,eax
  405249:	mov    ebx,0x769b662c
  40524e:	jne    0x40527a
  405250:	xor    eax,0xea5e38a3
  405255:	add    al,0xdb
  405257:	iret   
  405258:	bound  ebp,QWORD PTR [ecx+eax*1-0x1ac42af1]
  40525f:	scas   al,BYTE PTR es:[edi]
  405260:	fsub   QWORD PTR [edx+0x3d3078cf]
  405266:	fdivr  DWORD PTR [edi]
  405268:	adc    BYTE PTR [eax-0xc],0x8f
  40526c:	daa    
  40526d:	jbe    0x405249
  40526f:	mov    ebp,DWORD PTR [eax]
  405271:	ja     0x40521c
  405273:	aaa    
  405274:	cwde   
  405275:	cli    
  405276:	cmp    bh,BYTE PTR [eax]
  405278:	pop    ebx
  405279:	das    
  40527a:	push   eax
  40527b:	sahf   
  40527c:	jo     0x40529f
  40527e:	push   DWORD PTR [ecx]
  405280:	loope  0x4052ba
  405282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405283:	mov    ebx,0x4553d184
  405288:	das    
  405289:	jnp    0x4052f6
  40528b:	cdq    
  40528c:	into   
  40528d:	mov    BYTE PTR [esi-0x11],cl
  405290:	inc    esi
  405291:	pop    eax
  405292:	mov    edx,0xe59df081
  405297:	rcl    ebp,0xdf
  40529a:	shl    BYTE PTR [ebp+0x2f],cl
  40529d:	push   cs
  40529e:	retf   0x8b9d
  4052a1:	mov    ds:0x82e2cdf2,eax
  4052a6:	jp     0x405323
  4052a8:	(bad)  
  4052a9:	repz mov ebp,DWORD PTR [esi+0x69332774]
  4052b0:	push   ds
  4052b1:	nop
  4052b2:	std    
  4052b3:	sub    BYTE PTR [esp+edi*8-0x2cb445c],0x88
  4052bb:	mov    ch,0xcc
  4052bd:	pusha  
  4052be:	retf   
  4052bf:	enter  0x9566,0xd2
  4052c3:	stos   BYTE PTR es:[edi],al
  4052c4:	scas   eax,DWORD PTR es:[edi]
  4052c5:	jmp    0x4e0f:0x287c9b66
  4052cc:	push   0x91d98ad4
  4052d1:	mov    cl,0xc5
  4052d3:	or     eax,0x200d5dcc
  4052d8:	jb     0x4052fa
  4052da:	sysexit 
  4052dc:	mov    dl,0xd1
  4052de:	lds    ecx,FWORD PTR [esi-0x5f]
  4052e1:	push   0xa68fd4bb
  4052e6:	xchg   ebx,eax
  4052e7:	call   0x8b4:0xfc267ed8
  4052ee:	cwde   
  4052ef:	outs   dx,BYTE PTR ds:[esi]
  4052f0:	fwait
  4052f1:	in     eax,0xc
  4052f3:	test   al,0xb7
  4052f5:	pop    ecx
  4052f6:	cmc    
  4052f7:	in     eax,dx
  4052f8:	mov    edx,0x6b549e60
  4052fd:	adc    BYTE PTR [edx+0x611f7e26],dh
  405303:	and    eax,0xf4eaeeaa
  405308:	pop    ds
  405309:	cmp    al,0xb5
  40530b:	arpl   WORD PTR [ebp-0x1257ef88],ax
  405311:	test   BYTE PTR [esi+0x1e7583d9],bh
  405317:	inc    esp
  405318:	loop   0x405363
  40531a:	sub    dl,dh
  40531c:	lods   al,BYTE PTR ds:[esi]
  40531d:	popf   
  40531e:	mov    eax,0x34251cfa
  405323:	sub    BYTE PTR [eax-0xe],ch
  405326:	outs   dx,BYTE PTR ds:[esi]
  405327:	xchg   ecx,eax
  405328:	inc    ebp
  405329:	std    
  40532a:	cmp    cl,BYTE PTR [edi]
  40532c:	mov    dl,0x9e
  40532e:	xor    DWORD PTR [ecx+0x4a23fc26],edi
  405334:	dec    ecx
  405335:	test   esi,edi
  405337:	push   ebx
  405338:	sbb    eax,0x4d4fd6eb
  40533d:	cs mov ebx,0xbf7c5a7a
  405343:	out    dx,eax
  405344:	(bad)  
  405345:	push   esp
  405347:	cmp    bh,BYTE PTR [eax]
  405349:	mov    eax,DWORD PTR [esi-0x79]
  40534c:	mov    bh,BYTE PTR [eax]
  40534e:	stos   BYTE PTR es:[edi],al
  40534f:	bound  esp,QWORD PTR [edx-0x7c]
  405352:	pusha  
  405353:	jne    0x4053cc
  405355:	mov    cl,0x29
  405357:	fchs   
  405359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40535a:	mov    edi,DWORD PTR [eax]
  40535c:	dec    ebp
  40535d:	sbb    BYTE PTR [eax+0x2a],ah
  405360:	scas   al,BYTE PTR es:[edi]
  405361:	arpl   dx,bp
  405363:	xor    ch,dl
  405365:	sbb    BYTE PTR [ebx+0x57],dl
  405368:	sahf   
  405369:	push   DWORD PTR [ebp+0x7c]
  40536c:	(bad)  
  40536d:	fs jl  0x4053d5
  405370:	mov    al,0x66
  405372:	jne    0x40530a
  405374:	jbe    0x405395
  405376:	shl    BYTE PTR [ebx-0x7df34b0a],1
  40537c:	cmc    
  40537d:	mov    esp,DWORD PTR [ebp+0x5b]
  405380:	lea    edi,[edx+0x39b82f5a]
  405386:	daa    
  405387:	mov    bl,0xbe
  405389:	ds xor al,0x43
  40538c:	call   0x1c51:0x621c9391
  405393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405394:	ror    BYTE PTR [ebx+edx*1],0x80
  405398:	add    DWORD PTR [eax-0x76],esi
  40539b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40539c:	call   0xb3210fc3
  4053a1:	clc    
  4053a2:	leave  
  4053a3:	sub    DWORD PTR [eax+0x6943003d],ecx
  4053a9:	and    BYTE PTR [ebp-0x57199bdc],bh
  4053af:	xchg   BYTE PTR [eax-0x58d71b07],ah
  4053b5:	(bad)  
  4053b6:	(bad)  
  4053b7:	das    
  4053b8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053ba:	psllw  mm4,QWORD PTR [ebx+0x639f7ac7]
  4053c1:	push   edx
  4053c2:	jle    0x4053b8
  4053c4:	pusha  
  4053c5:	mov    bl,BYTE PTR cs:[ecx-0x71]
  4053c9:	pop    es
  4053ca:	push   edi
  4053cb:	xor    al,0xc4
  4053cd:	pop    ecx
  4053ce:	rcr    BYTE PTR [edi+0x7a6b4f7],cl
  4053d4:	mov    al,0xf7
  4053d6:	mov    ah,0x7f
  4053d8:	and    bl,al
  4053da:	pop    edx
  4053db:	jmp    0x314814
  4053e0:	jns    0x405430
  4053e2:	sbb    BYTE PTR [esi-0x5225e2a5],ah
  4053e8:	call   0x7b87:0xc729aefe
  4053ef:	rcl    DWORD PTR [ebp-0x18546f],0x61
  4053f6:	or     eax,0xf85778e6
  4053fb:	in     al,0x22
  4053fd:	mov    eax,ds:0x11fa825f
  405402:	dec    ecx
  405403:	mov    ds:0xd51373f5,al
  405408:	inc    ecx
  405409:	repz sar DWORD PTR [eax+0x387e197c],cl
  405410:	xor    bh,dh
  405412:	push   es
  405413:	fwait
  405414:	inc    esp
  405415:	or     BYTE PTR [edx-0x21ac4afa],dl
  40541b:	adc    ebp,DWORD PTR ds:0x4a8cfb12
  405421:	jns    0x4053ef
  405423:	or     al,0xe5
  405425:	cmp    WORD PTR [esp+ebp*2-0x6df6383d],bx
  40542d:	push   cs
  40542e:	xor    al,0xdf
  405430:	dec    edx
  405431:	lods   al,BYTE PTR ds:[esi]
  405432:	mov    edi,0x9f647c6f
  405437:	adc    al,0x25
  405439:	sub    al,0x4c
  40543b:	push   es
  40543c:	popf   
  40543d:	imul   ebp,DWORD PTR [edi+ebp*4],0x4f
  405441:	mov    esi,DWORD PTR [edx+0x29]
  405444:	or     al,0x0
  405446:	sub    BYTE PTR [edx+0x6693de18],dh
  40544c:	cwde   
  40544d:	sbb    DWORD PTR [ecx+0x4cf410f7],edx
  405453:	(bad)  [esi+0x3641ca45]
  405459:	lds    ebp,FWORD PTR [ebx+0x4d8cb19c]
  40545f:	mov    bl,0xd0
  405461:	pop    edi
  405462:	mov    ds:0xa42f783b,eax
  405467:	div    esi
  405469:	mov    cl,0x11
  40546b:	mov    eax,ds:0xe599a4ec
  405470:	adc    eax,0xf984be0d
  405475:	push   ecx
  405476:	aas    
  405477:	jp     0x405483
  405479:	xchg   ecx,eax
  40547a:	mov    ecx,0x4290a541
  40547f:	cmp    al,BYTE PTR [ebx+esi*4-0x71]
  405483:	xchg   edx,eax
  405484:	sub    al,0x2a
  405486:	adc    ah,BYTE PTR [edx-0x3e265b04]
  40548c:	jecxz  0x405469
  40548e:	aam    0xc2
  405490:	xor    esp,ebx
  405492:	inc    ecx
  405493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405494:	aaa    
  405495:	test   al,0xd9
  405497:	lds    esi,FWORD PTR [edx+ebx*4-0x13]
  40549b:	push   esp
  40549c:	mov    ds:0x3cd21b12,eax
  4054a1:	and    eax,0x3b5ac0cf
  4054a6:	jmp    0x5c770bbb
  4054ab:	cmp    ebx,DWORD PTR [eax]
  4054ad:	sbb    ebp,DWORD PTR [eax-0x7b]
  4054b0:	ret    
  4054b1:	adc    al,0xd2
  4054b3:	repnz daa 
  4054b5:	call   DWORD PTR [ebx]
  4054b7:	fidiv  DWORD PTR [edi+edx*2+0x9157a11]
  4054be:	adc    dh,BYTE PTR [edi]
  4054c0:	sbb    esp,DWORD PTR [ebp+0x59]
  4054c3:	add    eax,DWORD PTR [esi]
  4054c5:	repnz in eax,0x74
  4054c8:	test   al,0x6f
  4054ca:	call   0x2d61:0x4ad1e438
  4054d1:	sar    BYTE PTR [esi-0x10a20f9e],1
  4054d7:	out    0x15,al
  4054d9:	adc    eax,0x5fdc14e5
  4054de:	sbb    ah,BYTE PTR [esi+0xc]
  4054e1:	fldenv [edi-0x6ebf6f7e]
  4054e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054e8:	xchg   ah,ch
  4054ea:	imul   ebp,eax,0x7957d146
  4054f0:	add    DWORD PTR [ebx+0x37e596fc],0x937c8848
  4054fa:	cmp    DWORD PTR [ebx+0x64],ebp
  4054fd:	pop    edi
  4054fe:	xchg   edx,eax
  4054ff:	and    ebp,esp
  405501:	rcl    BYTE PTR [esi-0x2],1
  405504:	cdq    
  405505:	inc    eax
  405506:	lahf   
  405507:	imul   ecx,DWORD PTR [eax-0x67ecf95c],0x6a81a8d8
  405511:	mov    al,BYTE PTR [eax-0x70c210aa]
  405517:	repz inc ecx
  405519:	(bad)  
  40551a:	sbb    esi,DWORD PTR [edx]
  40551c:	pop    edi
  40551d:	ret    
  40551e:	adc    dl,BYTE PTR [ebp-0x72]
  405521:	out    dx,eax
  405522:	pop    edi
  405523:	jne    0x40551f
  405525:	(bad)  
  405526:	sbb    eax,0x27143fff
  40552b:	fstp   st(4)
  40552d:	inc    esp
  40552e:	mov    eax,0xf0de18c
  405533:	cmp    eax,0x5d299bbc
  405538:	mov    dl,bl
  40553a:	scas   al,BYTE PTR es:[edi]
  40553b:	lahf   
  40553c:	jnp    0x405526
  40553e:	lock hlt 
  405540:	push   es
  405541:	add    BYTE PTR ds:0x2e9b2137,ah
  405547:	add    DWORD PTR [edi-0x4d],ecx
  40554a:	stc    
  40554b:	jl     0x405521
  40554d:	adc    al,0x27
  40554f:	add    dh,BYTE PTR [edi+0x5d]
  405552:	fistp  WORD PTR [ebx+0x1b]
  405555:	in     eax,dx
  405556:	sub    eax,0xd9b5b817
  40555b:	rcr    DWORD PTR [ecx-0x75],1
  40555e:	ins    BYTE PTR es:[edi],dx
  40555f:	out    0x47,al
  405561:	(bad)  
  405562:	shr    BYTE PTR [edx+esi*1-0x4f],1
  405566:	fnsave [edx-0x514c89dc]
  40556c:	cmp    DWORD PTR [edx+0x98b334e],edi
  405572:	adc    ebx,ebp
  405574:	daa    
  405575:	dec    edx
  405576:	jne    0x405595
  405578:	sub    BYTE PTR [ebx],ch
  40557a:	out    0x42,al
  40557c:	fcom   DWORD PTR [eax+0xcb2f815]
  405582:	retf   
  405583:	aam    0x75
  405585:	ss jle 0x405521
  405588:	pop    ebp
  405589:	adc    al,0x4f
  40558b:	daa    
  40558c:	jae    0x405536
  40558e:	mov    bl,0x8a
  405590:	cld    
  405591:	dec    eax
  405592:	bswap  ebp
  405594:	sub    edx,DWORD PTR [ecx-0x3358d2c2]
  40559a:	std    
  40559b:	lds    esp,FWORD PTR [ebp-0x5b]
  40559e:	xchg   DWORD PTR [edx],ebp
  4055a0:	lock sub al,BYTE PTR [esi-0x799180d2]
  4055a7:	repnz jecxz 0x405563
  4055aa:	jle    0x405616
  4055ac:	xlat   BYTE PTR ds:[ebx]
  4055ad:	clc    
  4055ae:	mov    eax,ds:0x3b81726f
  4055b3:	rcl    BYTE PTR [ecx],1
  4055b5:	imul   ecx,DWORD PTR [esi+0x48837bf0],0x5298cbae
  4055bf:	mov    bh,0xf9
  4055c1:	or     al,0x7
  4055c3:	data16 outs dx,BYTE PTR ds:[esi]
  4055c5:	loope  0x4055bd
  4055c7:	mov    bl,0x8b
  4055c9:	mov    edx,0x6597d962
  4055ce:	pop    eax
  4055cf:	aas    
  4055d0:	mov    eax,0xb5e47ef1
  4055d5:	push   ds
  4055d6:	xor    dh,BYTE PTR [ebp-0x3efe3255]
  4055dc:	inc    ecx
  4055dd:	adc    al,0x84
  4055df:	int3   
  4055e0:	inc    ecx
  4055e1:	les    edx,FWORD PTR [ebx+esi*4-0x5fc55ffa]
  4055e8:	xchg   edx,eax
  4055e9:	add    eax,0x35ceaedc
  4055ee:	push   esp
  4055ef:	(bad)  
  4055f1:	test   eax,0x73b0c1e6
  4055f6:	daa    
  4055f7:	mov    al,0xae
  4055f9:	cdq    
  4055fa:	bound  edi,QWORD PTR [eax-0xb91bf1d]
  405600:	test   eax,0x5293195b
  405605:	stos   DWORD PTR es:[edi],eax
  405606:	jge    0x405628
  405608:	ja     0x405655
  40560a:	loopne 0x4055cb
  40560c:	jl     0x40561b
  40560e:	inc    ebx
  40560f:	lods   eax,DWORD PTR ds:[esi]
  405610:	jns    0x405635
  405612:	dec    edx
  405613:	sub    al,0x75
  405615:	inc    esp
  405616:	lahf   
  405617:	inc    edi
  405618:	inc    ebx
  405619:	inc    esp
  40561a:	jg     0x405610
  40561c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561d:	cmp    ecx,DWORD PTR [esi-0x9]
  405620:	mov    ch,0xc8
  405622:	jmp    0x40565d
  405624:	popf   
  405625:	dec    esp
  405626:	ins    BYTE PTR es:[edi],dx
  405627:	dec    ecx
  405628:	inc    ebx
  405629:	in     al,0x29
  40562b:	jmp    0x7318:0x5944baa2
  405632:	inc    ebp
  405633:	in     al,dx
  405634:	fwait
  405635:	out    dx,al
  405636:	data16 (bad) 
  405638:	fld    DWORD PTR [edi+0x269bcc76]
  40563e:	and    eax,0xc819c19c
  405643:	push   edx
  405644:	xchg   edx,eax
  405645:	sar    esp,1
  405647:	ret    0xf7bb
  40564a:	or     eax,0x1ec03308
  40564f:	mov    ah,0x3a
  405651:	ret    0xbbee
  405654:	sbb    DWORD PTR [edi+0x945223f],ecx
  40565a:	or     ecx,eax
  40565c:	int    0x96
  40565e:	and    eax,0xe6cc343b
  405663:	sar    edx,0x18
  405666:	cdq    
  405667:	(bad)  
  405668:	outs   dx,DWORD PTR ds:[esi]
  405669:	push   cs
  40566a:	sub    dl,ch
  40566c:	pop    es
  40566d:	mov    edi,0xf6638ee
  405672:	xor    ebx,DWORD PTR [ebp+0x1ad0fed7]
  405678:	pop    es
  405679:	xor    al,0x87
  40567b:	mov    bl,BYTE PTR [ecx-0x6ece4388]
  405681:	fstp   QWORD PTR [esi+0x320b93bc]
  405687:	dec    edi
  405688:	mov    dl,dl
  40568a:	fcomp  DWORD PTR ds:0x2af9c0e4
  405690:	pop    ebx
  405691:	es fld QWORD PTR es:0x69c1fc69
  405699:	mov    gs,WORD PTR [esi+0x68]
  40569c:	lahf   
  40569d:	rcl    BYTE PTR [ebp-0x88938fd],0x77
  4056a4:	retf   0x30bc
  4056a7:	jp     0x40564d
  4056a9:	fcomp  DWORD PTR [ebp+0x69]
  4056ac:	xor    dl,BYTE PTR [ebp+0x39]
  4056af:	shl    DWORD PTR [edx+0x4e808969],1
  4056b5:	loope  0x405681
  4056b7:	outs   dx,DWORD PTR ds:[esi]
  4056b8:	xor    eax,0xf2dfd2e7
  4056bd:	xor    al,0x21
  4056bf:	mov    BYTE PTR [ebp+0x5f],al
  4056c2:	mov    bl,0xb5
  4056c4:	in     eax,dx
  4056c5:	fisttp QWORD PTR [ecx+edx*2]
  4056c8:	fcomp  DWORD PTR [edx]
  4056ca:	dec    esp
  4056cb:	mov    ch,0x33
  4056cd:	push   ebp
  4056ce:	sub    DWORD PTR [eax],0x8ab56b22
  4056d4:	mov    dl,0x1a
  4056d6:	(bad)  
  4056d7:	outs   dx,BYTE PTR ds:[esi]
  4056d8:	add    al,0x58
  4056da:	mov    ds:0xb648ad4,al
  4056df:	push   ds
  4056e0:	mov    BYTE PTR [eax-0x5a],dh
  4056e3:	jae    0x405733
  4056e5:	jl     0x4056a7
  4056e7:	push   ebx
  4056e8:	pop    edx
  4056e9:	push   ebp
  4056ea:	and    eax,0x2b9e97a0
  4056ef:	and    edi,edi
  4056f1:	push   ebp
  4056f2:	ss mov ebx,0x7a9b346c
  4056f8:	fimul  WORD PTR [eax+0x539875de]
  4056fe:	cli    
  4056ff:	sbb    al,BYTE PTR [edi-0x45e3eb79]
  405705:	xor    cl,BYTE PTR [esi]
  405707:	xor    bl,bh
  405709:	scas   eax,DWORD PTR es:[edi]
  40570a:	(bad)  
  40570b:	(bad)  
  40570c:	mov    ch,0x3d
  40570e:	stos   BYTE PTR es:[edi],al
  40570f:	jnp    0x405738
  405711:	fldenv [eax+eiz*2+0x62]
  405715:	pop    ebx
  405716:	cli    
  405717:	(bad)  
  405718:	and    eax,0xcb6358c5
  40571d:	inc    ebp
  40571e:	push   edx
  40571f:	inc    ebx
  405720:	(bad)  
  405721:	cmp    bh,BYTE PTR [edx]
  405723:	jl     0x4056cc
  405725:	xchg   ebp,eax
  405726:	inc    edi
  405727:	pop    esi
  405728:	pop    es
  405729:	sahf   
  40572a:	or     al,0xfe
  40572c:	int    0x55
  40572e:	shr    BYTE PTR [ebp+0x77],1
  405731:	fmul   st,st(4)
  405733:	dec    edi
  405734:	mov    es:0x5473e2e1,eax
  40573a:	popa   
  40573b:	add    dh,BYTE PTR es:[eax]
  40573e:	pop    ds
  40573f:	add    DWORD PTR fs:[edx-0x5bf61826],edx
  405746:	sbb    bl,ah
  405748:	add    dh,al
  40574a:	push   ebp
  40574b:	ds push edx
  40574d:	jne    0x40575d
  40574f:	pop    eax
  405750:	add    DWORD PTR [edi],edx
  405752:	sub    DWORD PTR [esi+0x2a8cc865],0x1a87f1c8
  40575c:	xchg   esi,eax
  40575d:	std    
  40575e:	pusha  
  40575f:	ror    DWORD PTR [ebx],0x8d
  405762:	dec    esp
  405763:	out    dx,al
  405764:	jmp    0xb47876d8
  405769:	add    edx,DWORD PTR [esp+edi*4-0x6e]
  40576d:	inc    ebp
  40576e:	out    0x75,eax
  405770:	cmp    dl,ah
  405772:	push   0xffffffc1
  405774:	lods   eax,DWORD PTR ds:[esi]
  405775:	push   cs
  405776:	(bad)  
  405777:	mov    cl,0xf4
  405779:	outs   dx,BYTE PTR ds:[esi]
  40577a:	test   ebx,edx
  40577c:	xor    al,0x7e
  40577e:	push   0x7c
  405780:	cmp    eax,0x6af5be57
  405785:	and    al,0x33
  405787:	das    
  405788:	mov    WORD PTR [eax+edi*4+0x68],gs
  40578c:	out    dx,eax
  40578d:	sbb    eax,0x6d91ba2e
  405792:	push   ebx
  405793:	and    DWORD PTR [edi],0x362528e
  405799:	push   0x28
  40579b:	popa   
  40579c:	jl     0x4057db
  40579e:	xchg   DWORD PTR [ecx+0x333054],eax
  4057a4:	gs jmp 0x4057d8
  4057a7:	(bad)  
  4057a8:	dec    esi
  4057a9:	jnp    0x405797
  4057ab:	sbb    eax,0x3dec37b0
  4057b0:	inc    edx
  4057b1:	mov    esp,0xb787efe0
  4057b6:	mov    eax,ds:0x57696971
  4057bb:	xor    al,0x70
  4057bd:	push   ss
  4057be:	adc    DWORD PTR [ebx],ebx
  4057c0:	inc    ebx
  4057c1:	mov    edi,0x121d1e46
  4057c6:	pop    es
  4057c7:	cmp    eax,0xcc3492f3
  4057cc:	rol    ebp,cl
  4057ce:	and    al,0xee
  4057d0:	add    BYTE PTR [ecx-0x14adbd41],dh
  4057d6:	sub    eax,0x72bb8798
  4057db:	push   cs
  4057dc:	hlt    
  4057dd:	mov    ds:0xcb66ff21,eax
  4057e2:	sar    edi,0x84
  4057e5:	in     al,0xd8
  4057e7:	popa   
  4057e8:	add    BYTE PTR [ebx],bl
  4057ea:	(bad)  
  4057eb:	popf   
  4057ec:	into   
  4057ed:	jno    0x4057a8
  4057ef:	dec    edx
  4057f0:	mov    ebp,esi
  4057f2:	cmp    eax,DWORD PTR [edx+ebx*8]
  4057f5:	mov    bl,0xfa
  4057f7:	adc    al,0xcc
  4057f9:	adc    ecx,edi
  4057fb:	mov    es,WORD PTR [ebx-0x1c]
  4057fe:	mov    ds:0x1691a726,al
  405803:	stos   DWORD PTR es:[edi],eax
  405804:	mov    ebx,0x367fa6f
  405809:	les    edx,FWORD PTR [eax-0x31aaa48c]
  40580f:	pop    es
  405810:	inc    dx
  405812:	jmp    0x4057d8
  405814:	mov    ds:0xdfe46038,eax
  405819:	(bad)  
  40581a:	pusha  
  40581b:	(bad)  
  40581d:	jge    0x4057bb
  40581f:	lock sti 
  405821:	push   eax
  405822:	int    0x2f
  405824:	icebp  
  405825:	push   edx
  405826:	jmp    0x40584a
  405828:	ins    DWORD PTR es:[edi],dx
  405829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40582a:	jne    0x4057b0
  40582c:	lods   eax,DWORD PTR ds:[esi]
  40582d:	push   edi
  40582e:	fstp   QWORD PTR [ebp*2-0x6539ec6f]
  405835:	xchg   ebx,eax
  405836:	fisttp WORD PTR [eax-0xe]
  405839:	pop    ds
  40583a:	out    0x84,al
  40583c:	jge    0x405827
  40583e:	mov    bl,0xf8
  405840:	retf   0xb672
  405843:	shr    BYTE PTR [ebx-0x64e079e3],cl
  405849:	add    DWORD PTR ds:0xaf2214c7,eax
  40584f:	and    eax,0x6b7a3ea5
  405854:	dec    edx
  405855:	int3   
  405856:	add    DWORD PTR [ecx+0xc],ebp
  405859:	sub    edi,esi
  40585b:	cmc    
  40585c:	imul   eax,DWORD PTR [ecx+edx*2+0x36],0xffffffc3
  405861:	sahf   
  405862:	mov    ah,0xf4
  405864:	jbe    0x4058a8
  405866:	lods   eax,DWORD PTR ds:[esi]
  405867:	inc    eax
  405868:	dec    esi
  405869:	ret    
  40586a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40586b:	jl     0x4057f9
  40586d:	bound  ebx,QWORD PTR [ebp+0xc92d76d]
  405873:	es push 0x2b93f794
  405879:	int    0x6e
  40587b:	retf   0x6de1
  40587e:	or     al,0x96
  405880:	test   DWORD PTR [ebx-0x1f],esp
  405883:	lods   eax,DWORD PTR ds:[esi]
  405884:	popa   
  405885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405886:	ja     0x405812
  405888:	inc    edx
  405889:	test   DWORD PTR [edx-0x304a2243],ecx
  40588f:	hlt    
  405890:	xor    eax,0xe0d2f876
  405895:	mov    BYTE PTR [ecx+0x55e7481b],0x3e
  40589c:	mov    eax,ds:0xa9e62e35
  4058a1:	xchg   DWORD PTR [eax-0x3],esp
  4058a4:	(bad)  
  4058a5:	jbe    0x40585b
  4058a7:	or     esp,ecx
  4058a9:	jl     0x405884
  4058ab:	fiadd  WORD PTR [edx+0x4e]
  4058ae:	or     DWORD PTR [esi+ebx*1+0x7a75cec8],0x93100eea
  4058b9:	ins    BYTE PTR es:[edi],dx
  4058ba:	mov    dl,0xb1
  4058bc:	rcr    al,0xf
  4058bf:	int3   
  4058c0:	dec    esp
  4058c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058c2:	mov    ch,ch
  4058c4:	es dec ebx
  4058c6:	jo     0x405928
  4058c8:	out    dx,eax
  4058c9:	pop    ebx
  4058ca:	mov    ds:0x9109e4d4,eax
  4058cf:	jg     0x40592e
  4058d1:	jmp    0xeb6ff8d8
  4058d6:	les    ebp,FWORD PTR ds:0xabb6ca74
  4058dc:	lock (bad) 
  4058de:	rcl    esp,1
  4058e0:	stos   BYTE PTR es:[edi],al
  4058e1:	sbb    BYTE PTR [eax],0x2
  4058e4:	nop
  4058e5:	ffree  st(5)
  4058e7:	out    0x42,al
  4058e9:	and    al,BYTE PTR [esi+0x1af6722f]
  4058ef:	mov    ebx,0x453c7597
  4058f4:	outs   dx,BYTE PTR ds:[esi]
  4058f5:	sub    esp,DWORD PTR [ebx+edi*8-0x493fdc64]
  4058fc:	loopne 0x40595e
  4058fe:	fadd   DWORD PTR [edi-0x43f69d00]
  405904:	(bad)  
  405905:	sar    DWORD PTR [esi*2-0x74056982],1
  40590c:	sbb    eax,0xaf1037c2
  405911:	add    al,0xf6
  405913:	mov    ebp,0x90ef6dc7
  405918:	xchg   BYTE PTR [eax+0x61391da4],ah
  40591e:	adc    dl,BYTE PTR [ebp-0x5b3656da]
  405924:	push   ss
  405925:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405927:	adc    DWORD PTR [ebx+ebx*8-0x2397e417],esi
  40592e:	dec    esi
  40592f:	mov    ah,0x1f
  405931:	je     0x40590d
  405933:	cli    
  405934:	adc    dh,bl
  405936:	int3   
  405937:	cmp    esi,DWORD PTR [esi]
  405939:	jg     0x405969
  40593b:	lahf   
  40593c:	rcl    bh,cl
  40593e:	ficomp DWORD PTR [edx]
  405940:	mov    al,0xed
  405942:	dec    ebp
  405943:	mov    esi,0x96265e5f
  405948:	cld    
  405949:	les    eax,FWORD PTR [edi]
  40594b:	mov    esi,0x1b3b58eb
  405950:	jp     0x40596f
  405952:	lock fbld TBYTE PTR [edi]
  405955:	cmp    al,0xd3
  405957:	mov    bh,0xfd
  405959:	(bad)  
  40595a:	ins    BYTE PTR es:[edi],dx
  40595b:	inc    eax
  40595c:	shl    BYTE PTR [ecx-0x5f61fbf3],1
  405962:	retf   0xedba
  405965:	jne    0x40594f
  405967:	mov    esi,0xaae1054e
  40596c:	bound  ebp,QWORD PTR [ebp+ebx*1+0x29]
  405970:	push   ebp
  405971:	and    edi,ebx
  405973:	xchg   esi,eax
  405974:	jae    0x405976
  405976:	bound  ebp,QWORD PTR [edx-0x7d]
  405979:	call   DWORD PTR [eax]
  40597b:	or     al,0x4a
  40597d:	cwde   
  40597e:	lods   al,BYTE PTR ds:[esi]
  40597f:	clc    
  405980:	lea    ebp,[edx-0x51]
  405983:	icebp  
  405984:	retf   
  405985:	fwait
  405986:	push   es
  405987:	xchg   ebx,eax
  405988:	imul   eax,DWORD PTR [eax],0xc5153778
  40598e:	repz shl BYTE PTR [edi+0x54],0xb7
  405993:	add    BYTE PTR [esi-0x21598d88],cl
  405999:	daa    
  40599a:	xchg   edi,eax
  40599b:	ror    DWORD PTR [edi-0x67d1f805],1
  4059a1:	mov    esi,0xa599b367
  4059a6:	lock xchg DWORD PTR ds:0x1d9fa247,ecx
  4059ad:	jge    0x4059a0
  4059af:	rcr    BYTE PTR [esi-0x4a],1
  4059b2:	adc    ch,ah
  4059b4:	cmp    DWORD PTR [esi+0x26],esp
  4059b7:	or     BYTE PTR [eax+0x2f],bl
  4059ba:	lahf   
  4059bb:	mov    ebp,0xe39c4f95
  4059c0:	pop    ds
  4059c1:	push   edi
  4059c2:	repnz or al,0x6d
  4059c5:	xor    DWORD PTR [eax+edi*1+0x54eee385],edx
  4059cc:	pop    esi
  4059cd:	div    DWORD PTR [ebp+0x76]
  4059d0:	inc    esp
  4059d1:	and    DWORD PTR [edi-0x1],ebp
  4059d4:	sbb    BYTE PTR [ebx+0x4bcdd551],bl
  4059da:	cmp    al,0x14
  4059dc:	jmp    0xce3bfd7
  4059e1:	xchg   DWORD PTR ds:0x24642872,edi
  4059e7:	imul   esi,esp,0x2a032308
  4059ed:	inc    ebx
  4059ee:	pop    esp
  4059ef:	fistp  QWORD PTR [edx]
  4059f1:	fdivr  st(4),st
  4059f3:	dec    esp
  4059f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f5:	add    bh,al
  4059f7:	lods   eax,DWORD PTR ds:[esi]
  4059f8:	mov    cs,esp
  4059fa:	xor    ecx,esp
  4059fc:	out    0x21,al
  4059fe:	mov    ss,WORD PTR [eax-0x5078c0e7]
  405a04:	paddb  mm3,QWORD PTR [ebp+0x4f5243b6]
  405a0b:	imul   edi,DWORD PTR cs:[ebp-0x40],0x52
  405a10:	imul   esi,DWORD PTR [ebx-0x70df63e],0x32
  405a17:	adc    edx,DWORD PTR [esp+ebp*1+0x584b0a4a]
  405a1e:	dec    bp
  405a20:	mov    ebp,0x5160edb0
  405a25:	ror    al,1
  405a27:	mov    dl,0x8f
  405a29:	jle    0x405a73
  405a2b:	(bad)  
  405a2c:	test   DWORD PTR [esp+edx*1-0x770da169],0x7db5c68
  405a37:	jge    0x405a5a
  405a39:	jb     0x405a59
  405a3b:	icebp  
  405a3c:	mov    al,BYTE PTR [ebp-0x41]
  405a3f:	call   0x5ce29509
  405a44:	test   DWORD PTR [eax+0x66a004d7],0x345a30b2
  405a4e:	data16 ror BYTE PTR [ebp+0x23],1
  405a52:	adc    esp,ebp
  405a54:	fs ins DWORD PTR es:[edi],dx
  405a56:	mov    cl,0xf0
  405a58:	or     eax,0xfc51fa1b
  405a5d:	addr16 aaa 
  405a5f:	mov    ds:0x75d32ca6,eax
  405a64:	inc    esi
  405a65:	jne    0x405a95
  405a67:	rol    BYTE PTR [esi],cl
  405a69:	or     DWORD PTR [esi],edi
  405a6b:	sbb    BYTE PTR [esi*1+0xf0162c2],0x7f
  405a73:	mov    ds:0xe1b3d070,al
  405a78:	xor    DWORD PTR [ebp-0x39],ecx
  405a7b:	or     DWORD PTR [edx+0x7f5c09e3],esi
  405a81:	lea    eax,[esi+edx*4+0x45]
  405a85:	cmc    
  405a86:	add    DWORD PTR [edx+0x1ada5c0c],ebp
  405a8c:	aaa    
  405a8d:	xor    BYTE PTR [eax],0xf0
  405a90:	add    cl,BYTE PTR [edi]
  405a92:	(bad)  
  405a93:	hlt    
  405a94:	test   eax,0xf2eb9e6
  405a99:	rol    BYTE PTR [esi],0x6
  405a9c:	jmp    0x3fba3727
  405aa1:	mov    cl,BYTE PTR [eax-0x71e60040]
  405aa7:	add    al,0xc2
  405aa9:	sub    eax,0x117cde6c
  405aae:	ss cmp al,0x3
  405ab1:	sbb    DWORD PTR [ecx-0x30715839],esp
  405ab7:	xchg   esi,eax
  405ab8:	jl     0x405a86
  405aba:	iret   
  405abb:	jmp    0x405a77
  405abd:	jp     0x405ab5
  405abf:	pop    ecx
  405ac0:	push   ebp
  405ac1:	fmul   QWORD PTR [eax]
  405ac3:	rcl    ah,cl
  405ac5:	in     eax,dx
  405ac6:	(bad)  
  405ac7:	and    esi,edx
  405ac9:	mov    gs,WORD PTR [eax-0x5e]
  405acc:	cmp    eax,0xb50bedc2
  405ad1:	jns    0x405b43
  405ad3:	sbb    ah,BYTE PTR [ebx+0x40]
  405ad6:	jnp    0x405ad2
  405ad8:	ret    0xc2b1
  405adb:	call   0x8f098627
  405ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae1:	ror    DWORD PTR [ecx+0x32c515f3],cl
  405ae7:	push   edi
  405ae8:	(bad)  
  405ae9:	lds    edi,FWORD PTR [edi]
  405aeb:	sub    dh,ch
  405aed:	adc    DWORD PTR [ebx-0x188b5632],edi
  405af3:	push   ebx
  405af4:	mov    eax,0x612be375
  405af9:	or     al,0x60
  405afb:	sbb    al,0x25
  405afd:	ret    
  405afe:	dec    ebp
  405aff:	or     eax,0x4d642206
  405b04:	dec    esi
  405b05:	push   ss
  405b06:	into   
  405b07:	inc    eax
  405b08:	inc    ebx
  405b09:	fs clc 
  405b0b:	in     eax,dx
  405b0c:	retf   0x957
  405b0f:	shl    BYTE PTR [esi],0xa4
  405b12:	aad    0xa1
  405b14:	xchg   edi,eax
  405b15:	mov    dh,0xf9
  405b17:	sbb    eax,0xd53c462d
  405b1c:	repnz cmp ebp,DWORD PTR [edi]
  405b1f:	pop    ebx
  405b20:	sar    BYTE PTR [ecx+0x682c4399],1
  405b26:	and    BYTE PTR [ebx-0x78d35030],cl
  405b2c:	mov    cl,0x7e
  405b2e:	mov    al,0x4e
  405b30:	(bad)  
  405b31:	add    cl,BYTE PTR cs:[ebx+0x2c]
  405b35:	add    ch,BYTE PTR [eax]
  405b37:	fbstp  TBYTE PTR [esi+0x61edc8de]
  405b3d:	mov    WORD PTR [ecx+0x5fe25a18],gs
  405b43:	(bad)  
  405b44:	(bad)  [edx+ebx*4]
  405b47:	or     DWORD PTR [edi],ecx
  405b49:	inc    ecx
  405b4a:	add    DWORD PTR [ebx+0x55],ebx
  405b4d:	mov    ah,0x4d
  405b4f:	sbb    al,BYTE PTR [ecx]
  405b51:	cwde   
  405b52:	pushf  
  405b53:	jmp    0xfa1a016e
  405b58:	and    esi,DWORD PTR [eax+0x44f8a838]
  405b5e:	or     al,0x3e
  405b60:	xor    eax,0x9ce686cc
  405b65:	cmp    eax,0x2af1df1
  405b6a:	sbb    BYTE PTR [esi+0x7bd1a603],bl
  405b70:	lahf   
  405b71:	arpl   WORD PTR [ebp+0x2a01a5dc],bp
  405b77:	xor    bh,BYTE PTR [ecx+0x115486c5]
  405b7d:	test   BYTE PTR [ecx],bl
  405b7f:	adc    DWORD PTR [edx],esi
  405b81:	test   DWORD PTR [edx-0x47],esp
  405b84:	std    
  405b85:	clc    
  405b86:	sub    BYTE PTR ds:0xb1a1c5cf,dl
  405b8c:	jecxz  0x405b31
  405b8e:	arpl   WORD PTR [eax+eiz*8+0x2c6b28a0],sp
  405b95:	aam    0x7
  405b97:	mov    eax,ds:0xfed2eb91
  405b9c:	fist   DWORD PTR [ebp+eiz*1-0x52250396]
  405ba3:	(bad)  
  405ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba5:	jp     0x405bf4
  405ba7:	sub    eax,0xbe5645e7
  405bac:	out    0x75,al
  405bae:	fimul  WORD PTR [ecx-0x60]
  405bb1:	(bad)  
  405bb2:	out    dx,eax
  405bb3:	jb     0x405bf6
  405bb5:	inc    ecx
  405bb6:	and    ah,BYTE PTR [ebp+0x6512089a]
  405bbc:	jge    0x405bb7
  405bbe:	jo     0x405c0d
  405bc0:	inc    esi
  405bc1:	sub    dl,cl
  405bc3:	outs   dx,BYTE PTR ds:[esi]
  405bc4:	std    
  405bc5:	js     0x405c19
  405bc7:	fld    TBYTE PTR [esi+ebp*1-0x8]
  405bcb:	sbb    al,0x64
  405bcd:	hlt    
  405bce:	jle    0x405b7f
  405bd0:	sub    DWORD PTR [ebp+0x23d28d3c],edi
  405bd6:	sbb    ah,BYTE PTR [edi+esi*8-0x54]
  405bda:	inc    ecx
  405bdb:	in     al,0x43
  405bdd:	das    
  405bde:	cmp    edi,ebx
  405be0:	add    eax,0x47deb185
  405be5:	aaa    
  405be6:	xlat   BYTE PTR ds:[ebx]
  405be7:	push   edx
  405be8:	jmp    0x76a2f388
  405bed:	mov    ah,0x6b
  405bef:	imul   edi,DWORD PTR [edi-0x447a16f4],0xf
  405bf6:	outs   dx,DWORD PTR ds:[esi]
  405bf7:	iret   
  405bf8:	xor    eax,0xa0a64468
  405bfd:	mov    ah,0xf5
  405bff:	mov    esi,0x92d1c57e
  405c04:	mov    eax,0xb44d3005
  405c09:	mov    dl,0x67
  405c0b:	mov    edx,0xfbead75f
  405c10:	rcl    dh,1
  405c12:	push   ds
  405c13:	xor    esp,DWORD PTR [ecx+0x41]
  405c16:	fistp  QWORD PTR [edx+eiz*4+0x709981db]
  405c1e:	(bad)  
  405c1f:	loop   0x405ba8
  405c21:	fld    QWORD PTR [edx+0x3e9b84e1]
  405c27:	add    edi,DWORD PTR [di]
  405c2a:	mov    eax,ds:0x62068386
  405c2f:	mov    WORD PTR [ebx+0x50d54258],gs
  405c35:	icebp  
  405c36:	faddp  st(7),st
  405c38:	push   esi
  405c39:	shr    dh,0xed
  405c3c:	sbb    DWORD PTR [ebx+0x36a7425a],ebp
  405c42:	or     esp,DWORD PTR [ecx-0x1e52125]
  405c48:	scas   al,BYTE PTR es:[edi]
  405c49:	pushf  
  405c4a:	add    al,0x40
  405c4c:	inc    ebp
  405c4d:	popa   
  405c4e:	bound  eax,QWORD PTR [esi-0x2374c3fd]
  405c54:	arpl   WORD PTR [ecx],dx
  405c56:	cdq    
  405c57:	loop   0x405c46
  405c59:	fist   WORD PTR [ebx]
  405c5b:	les    ebx,FWORD PTR [edi]
  405c5d:	mov    ds:0xdb3b1437,al
  405c62:	xor    edx,DWORD PTR [eax]
  405c64:	push   esi
  405c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c66:	and    DWORD PTR [eax+0x7ca57840],esi
  405c6c:	push   ebx
  405c6d:	stos   BYTE PTR es:[edi],al
  405c6e:	stos   DWORD PTR es:[edi],eax
  405c6f:	add    al,0xab
  405c71:	lods   al,BYTE PTR ds:[esi]
  405c72:	inc    ebx
  405c73:	in     eax,0x25
  405c75:	sub    dh,0x5b
  405c78:	mov    esp,0x830e0c87
  405c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c7e:	xchg   edx,eax
  405c7f:	push   0x6ec7d6e1
  405c84:	add    eax,0xf82cf64d
  405c89:	push   cs
  405c8a:	cld    
  405c8b:	(bad)  
  405c8c:	repnz or BYTE PTR [esi-0x14b3d0e4],bh
  405c93:	pop    esi
  405c94:	in     al,dx
  405c95:	in     eax,0x8b
  405c97:	and    eax,0x518099d3
  405c9c:	sbb    dl,BYTE PTR [esi-0x27]
  405c9f:	idiv   BYTE PTR [edi]
  405ca1:	test   cl,al
  405ca3:	retf   0xf68
  405ca6:	mov    ebp,ebx
  405ca8:	xor    edx,eax
  405caa:	fild   DWORD PTR [ebx+0x1f]
  405cad:	or     esp,0x2f
  405cb0:	jl     0x405c9d
  405cb2:	fld    TBYTE PTR ds:0x281348b
  405cb8:	mov    esi,0x25c90348
  405cbd:	jbe    0x405c7b
  405cbf:	gs fs dec esi
  405cc2:	cli    
  405cc3:	dec    esp
  405cc4:	outs   dx,DWORD PTR ds:[esi]
  405cc5:	xchg   esp,eax
  405cc6:	ins    DWORD PTR es:[edi],dx
  405cc7:	and    DWORD PTR [eax+0x23cab3f7],edi
  405ccd:	nop
  405cce:	xor    al,BYTE PTR [ebx-0x2ce71dc7]
  405cd4:	pop    edi
  405cd5:	inc    ebx
  405cd6:	mov    ch,0xc
  405cd8:	aaa    
  405cd9:	push   edi
  405cda:	sti    
  405cdb:	push   ebx
  405cdc:	pushf  
  405cdd:	jmp    0x98e51568
  405ce2:	push   edx
  405ce3:	sub    BYTE PTR [esp+ecx*2+0x6eeb562e],dh
  405cea:	push   ebx
  405ceb:	repz add DWORD PTR ss:[esi+ecx*4-0x33],ebx
  405cf1:	ins    BYTE PTR es:[edi],dx
  405cf2:	ins    BYTE PTR es:[edi],dx
  405cf3:	dec    ebx
  405cf4:	mov    ss,WORD PTR [ebp+0x1]
  405cf7:	aaa    
  405cf8:	xor    al,0x11
  405cfa:	aad    0x2f
  405cfc:	test   DWORD PTR [ebx-0x30758a64],edi
  405d02:	in     eax,0x56
  405d04:	fdivr  QWORD PTR [eax+edi*2-0x55]
  405d08:	call   0x23e115aa
  405d0d:	mov    bh,BYTE PTR [esi+esi*1+0x63140c51]
  405d14:	(bad)  
  405d15:	xor    al,0xcd
  405d17:	daa    
  405d18:	leave  
  405d19:	sub    BYTE PTR [esi],al
  405d1b:	or     al,0xea
  405d1d:	dec    ecx
  405d1e:	xchg   esp,eax
  405d1f:	pop    ebp
  405d20:	jae    0x405d10
  405d22:	test   BYTE PTR [edi],ch
  405d24:	pop    ebp
  405d25:	jl     0x405cb5
  405d27:	out    dx,eax
  405d28:	sbb    ch,BYTE PTR [esi-0x70b77c3d]
  405d2e:	out    0x8c,eax
  405d30:	int    0x85
  405d32:	popf   
  405d33:	mov    cl,0x3c
  405d35:	sahf   
  405d36:	adc    al,0x5b
  405d38:	lods   al,BYTE PTR ds:[esi]
  405d39:	pop    esp
  405d3a:	mov    DWORD PTR [edi-0x3b],ebp
  405d3d:	and    al,BYTE PTR [edi-0x6b89b602]
  405d43:	sahf   
  405d44:	test   DWORD PTR [edx-0x43f43747],ecx
  405d4a:	xlat   BYTE PTR es:[ebx]
  405d4c:	cmc    
  405d4d:	fdivr  QWORD PTR [edx+0x2b30e815]
  405d53:	pop    eax
  405d54:	cmp    DWORD PTR [ebp+0x1c],esi
  405d57:	adc    ebx,DWORD PTR [ecx+0x3f]
  405d5a:	jns    0x405dd5
  405d5c:	jg     0x405cfd
  405d5e:	cmp    ch,BYTE PTR [eax]
  405d60:	adc    DWORD PTR [ecx],esp
  405d62:	mov    ds:0xcef0bb2,eax
  405d67:	xor    BYTE PTR [ebx],bl
  405d69:	add    al,0x4c
  405d6b:	push   eax
  405d6c:	cli    
  405d6d:	jmp    0x405d11
  405d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d70:	test   eax,0x34d50e47
  405d75:	call   0x1d90501b
  405d7a:	sahf   
  405d7b:	jecxz  0x405df4
  405d7d:	leave  
  405d7e:	jmp    FWORD PTR [edi-0x76b749f6]
  405d84:	test   DWORD PTR [ecx-0xc],esi
  405d87:	(bad)  
  405d88:	pop    ebp
  405d89:	addr16 pop ebx
  405d8b:	jbe    0x405d1f
  405d8d:	or     ch,bl
  405d8f:	pop    ebp
  405d90:	jae    0x405d88
  405d92:	pop    edi
  405d93:	into   
  405d94:	aam    0xc6
  405d96:	call   0x4d84f7c1
  405d9b:	mov    ebx,0xca1a921c
  405da0:	xchg   edi,eax
  405da1:	jl     0x405daa
  405da3:	or     DWORD PTR [esi],ebx
  405da5:	call   DWORD PTR [edx]
  405da7:	mov    DWORD PTR [ecx+eax*8+0x76],ebp
  405dab:	in     eax,dx
  405dac:	xchg   esp,edx
  405dae:	adc    BYTE PTR [esi+0xb733f8c],al
  405db4:	sbb    DWORD PTR [ecx-0x3c],ebp
  405db7:	sbb    DWORD PTR [edi],edi
  405db9:	fwait
  405dba:	xor    DWORD PTR [esi+0x7f],eax
  405dbd:	dec    edx
  405dbe:	pop    esp
  405dbf:	jnp    0x405de7
  405dc1:	jns    0x405d46
  405dc3:	push   esp
  405dc4:	xchg   DWORD PTR [ebx],esp
  405dc6:	call   0x8b6b:0xaaf4ce20
  405dcd:	pop    ecx
  405dce:	and    DWORD PTR [ebx-0x47a8431d],0xd20e845c
  405dd8:	inc    ebp
  405dd9:	mov    esp,0xed3a23a9
  405dde:	jns    0x405dfe
  405de0:	cmp    al,0x1f
  405de2:	sahf   
  405de3:	sti    
  405de4:	jno    0x405da4
  405de6:	imul   esp,DWORD PTR [ebp+0x2d],0xfffffffc
  405dea:	rcl    ebx,cl
  405dec:	neg    DWORD PTR [esi]
  405dee:	push   ss
  405def:	fild   DWORD PTR [ebp+0x3e]
  405df2:	ror    BYTE PTR [edx-0x49],cl
  405df5:	push   edx
  405df6:	std    
  405df7:	stos   BYTE PTR es:[edi],al
  405df8:	arpl   bp,di
  405dfa:	mov    edx,0x4eb0f8ab
  405dff:	mov    DWORD PTR [eax-0x7d026103],0x54e3e908
  405e09:	sbb    ah,BYTE PTR [ecx+0x352581a5]
  405e0f:	xor    esi,esp
  405e11:	jp     0x405e7e
  405e13:	outs   dx,DWORD PTR ds:[esi]
  405e14:	xor    bh,BYTE PTR [eax]
  405e16:	aaa    
  405e17:	adc    al,0xfa
  405e19:	es dec ecx
  405e1b:	pop    ebp
  405e1c:	jl     0x405dd8
  405e1e:	ins    BYTE PTR es:[edi],dx
  405e1f:	lods   eax,DWORD PTR ds:[esi]
  405e20:	pop    esi
  405e21:	ficom  WORD PTR [edx+0x4bac53f2]
  405e27:	stos   DWORD PTR es:[edi],eax
  405e28:	cwde   
  405e29:	nop
  405e2a:	test   DWORD PTR [edx-0x45dbf860],eax
  405e30:	popa   
  405e31:	adc    eax,0x742e5614
  405e36:	xchg   ebp,eax
  405e37:	lea    edx,[esi-0x1]
  405e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e3b:	mul    DWORD PTR [ebx-0x1e]
  405e3e:	push   esp
  405e3f:	aaa    
  405e40:	in     eax,0x94
  405e42:	cmp    DWORD PTR ds:0x6b27b741,ebx
  405e48:	pop    ebp
  405e4a:	cli    
  405e4b:	or     BYTE PTR [eax-0x141c06d6],ah
  405e51:	retf   0x7108
  405e54:	adc    DWORD PTR [edi],eax
  405e56:	jecxz  0x405e14
  405e58:	cdq    
  405e59:	xor    DWORD PTR [ebp+0x1bf1332a],eax
  405e5f:	cdq    
  405e60:	mov    dl,0x70
  405e62:	xor    DWORD PTR [esi+esi*8+0x72],0x397364af
  405e6a:	cli    
  405e6b:	adc    bl,dl
  405e6d:	retf   0xc38e
  405e70:	mov    edx,0xf569c027
  405e75:	ins    BYTE PTR es:[edi],dx
  405e76:	mov    bh,0x47
  405e78:	data16 rcr BYTE PTR [ebx-0xc51010b],1
  405e7f:	ins    BYTE PTR es:[edi],dx
  405e80:	fwait
  405e81:	aam    0x4b
  405e83:	or     eax,0xad37bcad
  405e88:	stc    
  405e89:	mov    ch,0x5f
  405e8b:	xor    eax,0x451906aa
  405e90:	mov    esi,0x89d1b73d
  405e95:	dec    esp
  405e96:	ret    
  405e97:	sub    DWORD PTR [esi],esp
  405e99:	xor    eax,0x12772ecd
  405e9e:	mov    bh,0xa2
  405ea0:	adc    BYTE PTR [eax+edi*2+0x43819cb7],bl
  405ea7:	push   esi
  405ea8:	xor    DWORD PTR [eax+0x557737e],ecx
  405eae:	aas    
  405eaf:	dec    edx
  405eb0:	dec    edi
  405eb1:	sub    esi,ebp
  405eb3:	ss pop ds
  405eb5:	mov    ds:0x40ea7fee,eax
  405eba:	adc    cl,BYTE PTR es:[esp+eax*4]
  405ebe:	fwait
  405ebf:	pop    ebp
  405ec0:	jae    0x405e47
  405ec2:	ja     0x405f32
  405ec4:	sub    al,0x24
  405ec6:	lock jge 0x405f04
  405ec9:	mov    ebx,0xd71a5e7b
  405ece:	push   eax
  405ecf:	vpcmpgtb xmm2,xmm1,xmm4
  405ed3:	and    al,0xc7
  405ed5:	test   BYTE PTR [di+0x1],0x18
  405eda:	(bad)
  405edd:	cmp    BYTE PTR [eax],ch
  405edf:	cmc    
  405ee0:	sbb    eax,0x761b6f5c
  405ee5:	call   0xc0b32baa
  405eea:	mov    ah,BYTE PTR [ebx+0x4d]
  405eed:	and    bh,bl
  405eef:	dec    ecx
  405ef0:	iret   
  405ef1:	gs jno 0x405f1c
  405ef4:	cdq    
  405ef5:	repz leave 
  405ef7:	sub    DWORD PTR [ecx+0x25],ebx
  405efa:	(bad)  
  405efb:	or     al,0x89
  405efd:	dec    edi
  405efe:	push   esp
  405eff:	xchg   esp,eax
  405f00:	leave  
  405f01:	push   esi
  405f02:	sub    DWORD PTR [ebx],edx
  405f04:	test   DWORD PTR [esi+0x53df4058],0x5dba7448
  405f0e:	into   
  405f0f:	cli    
  405f10:	lods   al,BYTE PTR ds:[esi]
  405f11:	loop   0x405f83
  405f13:	pop    eax
  405f14:	add    bh,BYTE PTR [edx]
  405f16:	test   DWORD PTR [ebp+0x6c57fb47],0xa1bd6a0c
  405f20:	out    dx,al
  405f21:	jecxz  0x405ec8
  405f23:	jl     0x405f32
  405f25:	push   ebx
  405f26:	push   ebx
  405f27:	mov    dl,0xb7
  405f29:	int3   
  405f2a:	push   edx
  405f2b:	div    DWORD PTR [edi+0x6e8efc58]
  405f31:	setae  BYTE PTR [eax-0x48]
  405f35:	imul   ebp,DWORD PTR [ecx-0x1a],0x50d5e310
  405f3c:	test   BYTE PTR [ecx+0x43],ch
  405f3f:	rcr    DWORD PTR [edi-0x69f6a627],cl
  405f45:	mov    ah,0xda
  405f47:	adc    eax,0xd239ff7d
  405f4c:	(bad)  
  405f4d:	jmp    DWORD PTR [eax]
  405f4f:	pop    eax
  405f50:	ret    0x6918
  405f53:	inc    esp
  405f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f55:	inc    eax
  405f56:	adc    eax,esp
  405f58:	sbb    al,0xd4
  405f5a:	xor    eax,0x75eef928
  405f5f:	adc    ah,BYTE PTR [edx]
  405f61:	push   cs
  405f62:	in     eax,dx
  405f63:	sti    
  405f64:	dec    esi
  405f65:	add    bl,al
  405f67:	and    eax,edx
  405f69:	inc    esp
  405f6a:	jmp    0x3c195808
  405f6f:	xchg   bl,dh
  405f71:	xchg   ebp,eax
  405f72:	ror    bl,0x6b
  405f75:	(bad)
  405f79:	jp     0x405fa8
  405f7b:	adc    DWORD PTR [ebp-0x52df5bed],ebp
  405f81:	sar    dh,cl
  405f83:	push   es
  405f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f85:	adc    DWORD PTR ss:[edx+0x33],ebp
  405f89:	inc    esp
  405f8a:	jmp    0x7c79:0xf9e1aea3
  405f91:	fadd   st(5),st
  405f93:	xor    al,0xa1
  405f95:	out    dx,eax
  405f96:	adc    DWORD PTR [edx],ecx
  405f98:	mov    bl,0x2e
  405f9a:	xor    eax,0x95e9f575
  405f9f:	cld    
  405fa0:	fdiv   DWORD PTR [esp]
  405fa3:	pop    eax
  405fa4:	sub    DWORD PTR [esi-0x5142966],ecx
  405faa:	inc    eax
  405fab:	cmp    ebp,ebx
  405fad:	stos   DWORD PTR es:[edi],eax
  405fae:	xchg   edx,eax
  405faf:	add    ch,BYTE PTR ds:0x930c20b0
  405fb5:	popa   
  405fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fb8:	sbb    BYTE PTR [ebp-0x49d4e8c],0xbb
  405fbf:	jo     0x405fa9
  405fc1:	fimul  WORD PTR [edx+ebp*1-0x18]
  405fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc6:	xchg   ebx,eax
  405fc7:	pop    esi
  405fc8:	scas   al,BYTE PTR es:[edi]
  405fc9:	test   al,0x20
  405fcb:	push   ds
  405fcc:	enter  0xfa52,0xaa
  405fd0:	xchg   esi,eax
  405fd1:	inc    eax
  405fd2:	(bad)  {k1}
  405fd7:	pop    ss
  405fd8:	mov    ch,0x1c
  405fda:	in     eax,0x8c
  405fdc:	add    BYTE PTR cs:[edx],ch
  405fdf:	icebp  
  405fe0:	inc    eax
  405fe1:	loopne 0x405f81
  405fe3:	sbb    eax,0x5fbbb921
  405fe8:	jns    0x406000
  405fea:	imul   edx,ebp,0xf52249d
  405ff0:	les    eax,FWORD PTR [ebx]
  405ff2:	add    bh,bl
  405ff4:	sub    BYTE PTR [edi-0x106cb0ff],dl
  405ffa:	and    DWORD PTR [ebx-0x1a],edx
  405ffd:	pop    eax
  405ffe:	xchg   ebp,eax
  405fff:	dec    ebx
  406000:	shl    al,0x58
  406003:	imul   ebp,DWORD PTR [ebp-0x71],0xffffffdc
  406007:	sub    al,0xa4
  406009:	jle    0x405fb1
  40600b:	jns    0x405fe7
  40600d:	push   ss
  40600e:	xchg   esp,eax
  40600f:	and    BYTE PTR [ecx+0x46],dl
  406012:	and    cl,BYTE PTR [ebp+0x3160f3fd]
  406018:	jle    0x40606c
  40601a:	in     eax,dx
  40601b:	pop    es
  40601c:	cwde   
  40601d:	push   0x61
  40601f:	out    0x16,al
  406021:	hlt    
  406022:	jns    0x405fa8
  406024:	fcmovb st,st(2)
  406026:	leave  
  406027:	mov    cl,0xcb
  406029:	cmp    eax,0xadbbf4af
  40602e:	call   0xf063:0xfddf9d0b
  406035:	add    DWORD PTR [ebx+ecx*8-0x50],ecx
  406039:	ja     0x405ffe
  40603b:	in     al,0x97
  40603d:	push   ecx
  40603e:	pop    esi
  40603f:	(bad)  
  406040:	rol    DWORD PTR [edx],cl
  406042:	xchg   DWORD PTR [edi],ebx
  406044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406045:	fdivr  DWORD PTR [esi+0x14]
  406048:	sub    eax,0xacee39db
  40604d:	mov    dh,0x33
  40604f:	jae    0x405fff
  406051:	push   eax
  406052:	and    al,0x86
  406054:	ds adc al,0x8e
  406057:	jge    0x406044
  406059:	sahf   
  40605a:	rol    ebx,1
  40605c:	pop    eax
  40605d:	fist   DWORD PTR [ecx+0x67e9919a]
  406063:	cmp    dh,BYTE PTR [ebx+0x1d741fc7]
  406069:	dec    edx
  40606a:	fdiv   st,st(5)
  40606c:	mov    eax,0x67778e5d
  406071:	test   al,0xf1
  406073:	mov    ch,0x2b
  406075:	stos   BYTE PTR es:[edi],al
  406076:	imul   eax,DWORD PTR [bp+si+0x5b],0xffffffd4
  40607b:	aam    0xa4
  40607d:	xchg   edi,eax
  40607e:	fidivr WORD PTR [ebp+ecx*4-0x72]
  406082:	(bad)  
  406083:	(bad)  
  406085:	xchg   edx,eax
  406086:	xchg   esp,eax
  406087:	mov    ebx,0xfdfad59b
  40608c:	cmp    BYTE PTR [edi],ch
  40608e:	lds    ebx,FWORD PTR [ebx+eax*8]
  406091:	ds int 0x79
  406094:	mov    al,ds:0x4662e0c0
  406099:	add    al,0x29
  40609b:	mov    ebx,0xaed18c2c
  4060a0:	cmp    BYTE PTR [edx-0x67],ch
  4060a3:	cmp    al,0x29
  4060a5:	pop    ebx
  4060a6:	ins    DWORD PTR es:[edi],dx
  4060a7:	out    dx,eax
  4060a8:	into   
  4060a9:	rcl    bh,1
  4060ab:	rcr    DWORD PTR [edx-0x69],0xd6
  4060af:	ss jge 0x4060df
  4060b2:	jmp    0x7479:0x944055d
  4060b9:	sbb    al,0x6d
  4060bb:	stos   DWORD PTR es:[edi],eax
  4060bc:	jae    0x40610c
  4060be:	xor    edi,DWORD PTR [ecx+0x72accaa5]
  4060c4:	xchg   ecx,eax
  4060c5:	push   ss
  4060c6:	inc    esi
  4060c7:	in     al,0x16
  4060c9:	add    eax,0x6dff636b
  4060ce:	icebp  
  4060cf:	arpl   WORD PTR [ecx+edi*1+0x6c],bp
  4060d3:	mov    al,0x38
  4060d5:	xchg   edi,eax
  4060d6:	inc    esp
  4060d7:	in     al,0x2f
  4060d9:	xchg   ebp,eax
  4060da:	push   eax
  4060db:	sub    al,0x57
  4060dd:	lods   al,BYTE PTR ds:[esi]
  4060de:	dec    esp
  4060df:	xor    edi,DWORD PTR [ebp-0x2c]
  4060e2:	(bad)  
  4060e3:	push   ebp
  4060e4:	sub    esp,DWORD PTR [edi]
  4060e6:	mov    esi,0xee18510d
  4060eb:	enter  0x7f60,0x4f
  4060ef:	mov    cl,0xde
  4060f1:	pushf  
  4060f2:	jno    0x40609c
  4060f4:	sub    BYTE PTR [edi+0x343e0d83],cl
  4060fa:	fcom   DWORD PTR [edi]
  4060fc:	imul   edi,DWORD PTR [ecx-0x37],0xcbd9ce73
  406103:	mov    ebx,0x9f8202ac
  406108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406109:	push   0x3c
  40610b:	fstp   QWORD PTR [edx]
  40610d:	jecxz  0x406163
  40610f:	mov    bl,0x3
  406111:	dec    edx
  406112:	mov    db0,esp
  406115:	das    
  406116:	xlat   BYTE PTR ds:[ebx]
  406117:	mov    ds:0x8f270cba,al
  40611c:	mov    dl,0xaf
  40611e:	mov    esi,0xae82074d
  406123:	jle    0x4060ea
  406125:	jbe    0x40613c
  406127:	dec    ebx
  406128:	popa   
  406129:	test   DWORD PTR [ebx],ebx
  40612b:	sub    al,0x41
  40612d:	or     eax,0x9efae9ae
  406132:	jae    0x40613e
  406134:	mov    dh,0xa7
  406136:	pusha  
  406137:	mul    DWORD PTR [edx]
  406139:	mov    dh,0x70
  40613b:	rcl    BYTE PTR [ecx+0x3b386c0b],1
  406141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406142:	and    dl,ch
  406144:	daa    
  406145:	(bad)  
  406146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406147:	push   0xffffffbe
  406149:	in     al,dx
  40614a:	push   esp
  40614b:	and    dh,BYTE PTR [ebp+esi*2+0x6c]
  40614f:	inc    ecx
  406150:	cmp    esi,eax
  406152:	or     eax,0x79735b41
  406157:	enter  0xc018,0xae
  40615b:	mov    bl,0x7d
  40615d:	(bad)  
  40615e:	ror    cl,0xae
  406161:	xchg   esi,eax
  406162:	outs   dx,BYTE PTR ds:[esi]
  406163:	sahf   
  406164:	mov    ch,0xfe
  406166:	sbb    BYTE PTR [edi-0x21],cl
  406169:	push   es
  40616a:	push   esp
  40616b:	xor    al,BYTE PTR [ecx-0x30]
  40616e:	dec    edi
  40616f:	or     esp,DWORD PTR [ecx-0x5]
  406172:	fild   QWORD PTR [ebx+0xc]
  406175:	inc    esp
  406176:	pop    edx
  406177:	leave  
  406178:	lods   eax,DWORD PTR ds:[esi]
  406179:	sub    DWORD PTR [ebx],ebp
  40617b:	sar    BYTE PTR [esi+esi*4-0x74],0x7a
  406180:	lea    ebp,[ebx-0x2a32453f]
  406186:	mov    ah,BYTE PTR [eax]
  406188:	and    edx,DWORD PTR [edx+eiz*1]
  40618b:	retf   0xb46a
  40618e:	lods   eax,DWORD PTR ds:[esi]
  40618f:	push   0x3
  406191:	dec    esi
  406192:	push   esi
  406193:	dec    esi
  406194:	lea    esi,[edx-0x748db6ad]
  40619a:	scas   eax,DWORD PTR es:[edi]
  40619b:	sub    al,0xb2
  40619d:	add    al,dl
  40619f:	das    
  4061a0:	xchg   esp,eax
  4061a1:	pop    es
  4061a2:	sbb    esp,ebp
  4061a4:	adc    BYTE PTR [ebp+0x38d436a2],cl
  4061aa:	sub    eax,0xbbe93b6c
  4061af:	push   bx
  4061b1:	lods   eax,DWORD PTR ds:[esi]
  4061b2:	sub    esp,esp
  4061b4:	and    edx,DWORD PTR ds:0x7b7db787
  4061ba:	adc    ecx,DWORD PTR [edx-0x15428f64]
  4061c0:	fisubr WORD PTR [edx]
  4061c2:	into   
  4061c3:	mov    esi,0x2fea57b1
  4061c8:	repz sub edi,esi
  4061cb:	and    BYTE PTR [edx+0x39b81fbf],ch
  4061d1:	loope  0x4061d8
  4061d3:	xchg   ebp,eax
  4061d4:	fwait
  4061d5:	mov    ebx,0xd7698d19
  4061da:	lods   al,BYTE PTR ds:[esi]
  4061db:	(bad)  
  4061dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061dd:	add    al,0x7d
  4061df:	call   0x2d9d42da
  4061e4:	imul   edx,DWORD PTR es:[ecx+ebx*2-0x71faeb3a],0x70
  4061ed:	out    0x1d,eax
  4061ef:	and    eax,0xa71402c8
  4061f4:	adc    ah,bh
  4061f6:	pop    esi
  4061f7:	ss xchg ebp,eax
  4061f9:	add    al,0x46
  4061fb:	test   DWORD PTR [ebx+0x16],0xa632a0a6
  406202:	adc    DWORD PTR [edi],esp
  406204:	xchg   ecx,eax
  406205:	jno    0x406283
  406207:	push   DWORD PTR [eax-0x59]
  40620a:	jg     0x4061ca
  40620c:	jmp    0x3f20:0xcab3e9fd
  406213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406214:	dec    ebp
  406215:	aaa    
  406216:	jmp    0x596cf925
  40621b:	xor    dl,dh
  40621d:	dec    edx
  40621e:	jmp    0x406248
  406220:	push   cs
  406221:	cmp    eax,0xee1af4e1
  406226:	pop    ss
  406227:	gs (bad) 
  406229:	scas   eax,DWORD PTR es:[edi]
  40622a:	inc    esi
  40622b:	sahf   
  40622c:	and    BYTE PTR [ebp+0x17],cl
  40622f:	in     eax,dx
  406230:	hlt    
  406231:	nop
  406232:	push   ebp
  406233:	inc    BYTE PTR [esi-0x1047fd1b]
  406239:	pop    ebp
  40623a:	mov    ds:0x2ecdecfc,eax
  40623f:	cld    
  406240:	(bad)  
  406241:	inc    ebp
  406242:	or     ecx,DWORD PTR [edx+edi*8+0x36]
  406246:	or     BYTE PTR ds:0x804f27e7,al
  40624c:	sbb    DWORD PTR [ecx],esi
  40624e:	mov    eax,ebx
  406250:	ret    0x5881
  406253:	xchg   edx,eax
  406254:	xchg   ebp,eax
  406255:	mov    esi,0x16b5e97
  40625a:	cmp    BYTE PTR [edx-0x72],0x77
  40625e:	mov    edi,0xbce4a749
  406263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406264:	or     BYTE PTR [ebp+eax*4+0x36e39ff6],bh
  40626b:	adc    BYTE PTR [esi+0x4dae4234],bh
  406271:	xor    DWORD PTR [ebx+0x6ad13df5],esi
  406277:	ja     0x4062c2
  406279:	iret   
  40627a:	cmp    ch,dl
  40627c:	call   0x7fe:0xc4753e9b
  406283:	and    al,0x85
  406285:	fadd   DWORD PTR [eax]
  406287:	or     al,dh
  406289:	in     al,dx
  40628a:	sti    
  40628b:	push   edi
  40628c:	outs   dx,DWORD PTR ds:[esi]
  40628d:	scas   eax,DWORD PTR es:[edi]
  40628e:	imul   edi,DWORD PTR [edx],0x2a18fa1f
  406294:	ret    
  406295:	rcl    DWORD PTR [ebp-0x7907459d],cl
  40629b:	adc    al,0xad
  40629d:	popa   
  40629e:	xor    al,0xae
  4062a0:	push   eax
  4062a1:	lds    ebp,FWORD PTR [ebp-0x7dcce75f]
  4062a7:	retf   
  4062a8:	mov    al,ds:0x1848b5aa
  4062ad:	das    
  4062ae:	loopne 0x4062fa
  4062b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062b1:	push   ebp
  4062b2:	hlt    
  4062b3:	ins    BYTE PTR es:[edi],dx
  4062b4:	adc    al,0xdb
  4062b6:	mov    esi,0xecb53867
  4062bb:	int3   
  4062bc:	arpl   dx,dx
  4062be:	in     al,0xc5
  4062c0:	and    al,0x57
  4062c2:	cmp    BYTE PTR [esi],dh
  4062c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062c5:	and    al,0xb7
  4062c8:	and    ebp,DWORD PTR fs:[ecx+eiz*8-0x44c56968]
  4062d0:	hlt    
  4062d1:	mov    edx,0xa0076084
  4062d6:	mov    edi,0x52da5d04
  4062db:	fwait
  4062dc:	mov    edi,0xd495a46c
  4062e1:	popa   
  4062e2:	fdivr  DWORD PTR [esi+0x5f]
  4062e5:	shr    eax,cl
  4062e7:	dec    esp
  4062e8:	imul   DWORD PTR ds:0x62bd9388
  4062ee:	xchg   BYTE PTR [ebp-0x5a8f7872],dh
  4062f4:	jb     0x406316
  4062f6:	scas   al,BYTE PTR es:[edi]
  4062f7:	mov    dh,0xf6
  4062f9:	pushf  
  4062fa:	dec    BYTE PTR [esi]
  4062fc:	mov    dl,0x10
  4062fe:	and    cl,BYTE PTR [edi]
  406300:	(bad)  
  406301:	mov    ah,0xcb
  406303:	retf   0x4e68
  406306:	push   edi
  406307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406308:	ja     0x4062a0
  40630a:	or     edi,DWORD PTR [ebx+esi*8]
  40630d:	test   eax,0x301e0683
  406312:	les    ebx,FWORD PTR [edx+ecx*4-0x1d]
  406316:	retf   
  406317:	cmp    esi,ebp
  406319:	jne    0x4062f2
  40631b:	daa    
  40631c:	cwde   
  40631d:	in     eax,dx
  40631e:	jge    0x4062b4
  406320:	xchg   ebp,eax
  406321:	cmp    bh,al
  406323:	dec    ebx
  406324:	popf   
  406325:	or     eax,ebx
  406327:	xchg   edi,eax
  406328:	jbe    0x4062f0
  40632a:	mov    ecx,0x8393e02c
  40632f:	outs   dx,BYTE PTR ds:[esi]
  406330:	inc    edi
  406331:	test   al,0x31
  406333:	inc    eax
  406334:	in     al,0x95
  406336:	or     al,0xc7
  406338:	cld    
  406339:	adc    eax,0xcb74d12
  40633e:	add    ebp,DWORD PTR [ecx*4-0x441bfc62]
  406345:	lea    edi,[ebx]
  406347:	add    eax,0xf1c1ab2e
  40634c:	hlt    
  40634d:	and    esp,DWORD PTR [ebx]
  40634f:	repnz out dx,eax
  406351:	mov    ds:0x4beb16c4,eax
  406356:	jecxz  0x4063d3
  406358:	test   eax,0xc5aaff5e
  40635d:	mov    ebx,0xc4bda695
  406362:	dec    ecx
  406363:	or     BYTE PTR [ecx],al
  406365:	jne    0x40634d
  406367:	jge    0x406311
  406369:	xlat   BYTE PTR ds:[ebx]
  40636a:	pop    edi
  40636b:	iret   
  40636c:	fst    QWORD PTR [ebp+0x1d]
  40636f:	sub    DWORD PTR [edi+0x3b],esi
  406372:	out    dx,eax
  406373:	mov    al,0x61
  406375:	cs jb  0x40637a
  406378:	pop    es
  406379:	pop    edx
  40637a:	jb     0x406366
  40637c:	adc    DWORD PTR [edi],edx
  40637e:	mov    ds:0x23b5d104,al
  406383:	cmc    
  406384:	aas    
  406385:	pop    ebx
  406386:	pop    ss
  406387:	mov    ch,0x38
  406389:	pusha  
  40638a:	lock mov ebp,0x8608f4d3
  406390:	inc    ebx
  406391:	push   cs
  406392:	sbb    eax,0x43198e5a
  406397:	fsubr  DWORD PTR [edx]
  406399:	push   eax
  40639a:	(bad)  [ebx+ebx*8-0x68]
  40639e:	xchg   ecx,eax
  40639f:	or     eax,0xec2e486c
  4063a4:	jae    0x40641c
  4063a6:	adc    edi,DWORD PTR [esi+ebx*8-0x37fe9b29]
  4063ad:	mov    ecx,DWORD PTR [edx]
  4063af:	cdq    
  4063b0:	ret    
  4063b1:	dec    eax
  4063b2:	nop
  4063b3:	retf   0xa29f
  4063b6:	jno    0x40641e
  4063b8:	repnz mov esp,DWORD PTR [esi-0x24]
  4063bc:	pop    esi
  4063bd:	mov    al,0xac
  4063bf:	push   0x61495bf0
  4063c4:	xchg   edi,eax
  4063c5:	mov    cl,0x62
  4063c7:	inc    ebp
  4063c8:	sahf   
  4063c9:	cld    
  4063ca:	mov    bh,0x8c
  4063cc:	pop    esp
  4063cd:	bound  ebx,QWORD PTR [esp+edx*1-0x7d654e11]
  4063d4:	std    
  4063d5:	mov    bl,0xa2
  4063d7:	and    esi,DWORD PTR [edx+0x50]
  4063da:	pop    ebp
  4063db:	xchg   edx,eax
  4063dc:	sbb    esi,DWORD PTR [eax]
  4063de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063df:	mov    DWORD PTR [edx],ebx
  4063e1:	repz (bad)
  4063e4:	add    DWORD PTR [ecx],ebx
  4063e6:	xchg   ebx,eax
  4063e7:	adc    al,0xe2
  4063e9:	push   esp
  4063ea:	xor    eax,0x9bab86a9
  4063ef:	loope  0x406371
  4063f1:	imul   ecx,edi,0x465f00f2
  4063f7:	mov    esp,0x7ec68a4
  4063fc:	das    
  4063fd:	(bad)  
  4063fe:	icebp  
  4063ff:	xor    cl,BYTE PTR [ecx-0x56]
  406402:	int    0xaa
  406404:	adc    al,0xf2
  406406:	retf   
  406407:	inc    ebp
  406408:	test   BYTE PTR [ebp-0x9e5908d],dh
  40640e:	sub    DWORD PTR ds:0x543ce206,eax
  406414:	test   DWORD PTR [ebp+0x7a4b9414],edx
  40641a:	or     ecx,esi
  40641c:	repnz inc ecx
  40641e:	cmp    DWORD PTR [eax+0x77],eax
  406421:	push   cs
  406422:	or     eax,0x8861fc37
  406427:	fcomip st,st(1)
  406429:	cwde   
  40642a:	dec    edi
  40642b:	inc    esp
  40642c:	ins    DWORD PTR es:[edi],dx
  40642d:	test   BYTE PTR [ecx],bl
  40642f:	jns    0x406483
  406431:	lds    edx,FWORD PTR [edi+0x7]
  406434:	add    ch,ah
  406436:	inc    ecx
  406437:	das    
  406438:	push   edi
  406439:	mov    cs,ebx
  40643b:	add    al,0x5d
  40643d:	adc    cl,bl
  40643f:	add    esi,DWORD PTR [eax-0x1d4e9b6d]
  406445:	mov    ah,0xf6
  406447:	pop    ecx
  406448:	cmp    dl,cl
  40644a:	(bad)
  40644d:	lock mov esp,0x601b5d9c
  406453:	xchg   edx,eax
  406454:	xchg   esi,eax
  406455:	mov    ds:0x27ade40e,eax
  40645a:	loop   0x40642d
  40645c:	pusha  
  40645d:	lidtd  [ecx-0x24]
  406461:	call   0xcf94:0x4300c9da
  406468:	sahf   
  406469:	xchg   edi,eax
  40646a:	dec    ecx
  40646b:	adc    edx,DWORD PTR [esp+edi*8-0x3b0b8a52]
  406472:	jl     0x40643e
  406474:	xor    al,0x5f
  406476:	cmp    DWORD PTR [esp+esi*8],ecx
  406479:	pop    eax
  40647a:	sbb    BYTE PTR [ecx-0x67],cl
  40647d:	sbb    BYTE PTR [edi],cl
  40647f:	rcr    DWORD PTR [esi],0x34
  406482:	xor    esi,DWORD PTR [esp+ebx*4-0x360ad7cc]
  406489:	mov    bl,0x13
  40648b:	sahf   
  40648c:	test   al,0x6
  40648e:	or     dl,BYTE PTR [ebp+esi*2+0x2c]
  406492:	dec    eax
  406493:	sbb    eax,0x92457da5
  406498:	or     DWORD PTR [esi],edx
  40649a:	pop    eax
  40649b:	mov    al,0xbb
  40649d:	mov    edx,0x1673f45c
  4064a2:	bound  esp,QWORD PTR [ebx-0x707b04ed]
  4064a8:	mov    edi,0xe1312699
  4064ad:	adc    BYTE PTR [ecx+0x2aca97c1],0xf5
  4064b4:	adc    edi,DWORD PTR [esi-0xd60154a]
  4064ba:	inc    eax
  4064bb:	mov    dh,0x2a
  4064bd:	push   ebx
  4064be:	jl     0x4064c2
  4064c0:	jmp    0xec4a7fa0
  4064c5:	popf   
  4064c6:	rol    ch,cl
  4064c8:	push   ecx
  4064c9:	mov    esi,0x45253fe8
  4064ce:	hlt    
  4064cf:	enter  0x6a0b,0x80
  4064d3:	inc    eax
  4064d4:	popf   
  4064d5:	cmp    bl,BYTE PTR [edi]
  4064d7:	out    0xfb,al
  4064d9:	xor    DWORD PTR [ecx-0x939f1af],0xc02b2b02
  4064e3:	sti    
  4064e4:	pop    ds
  4064e5:	shl    DWORD PTR [edx-0x3baf30e0],cl
  4064eb:	xor    ebx,DWORD PTR [edx]
  4064ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ee:	loop   0x40654e
  4064f0:	cmp    eax,0x8cd0dd85
  4064f5:	dec    eax
  4064f6:	push   ebp
  4064f7:	clc    
  4064f8:	or     al,0xae
  4064fa:	and    cl,cl
  4064fc:	mov    ds:0x9637559a,al
  406501:	out    dx,eax
  406502:	retf   0x9f76
  406505:	loope  0x4064fb
  406507:	hlt    
  406508:	sar    edx,cl
  40650a:	or     al,BYTE PTR [ebx+0x159ad223]
  406510:	dec    eax
  406511:	out    0xe8,al
  406513:	ins    BYTE PTR es:[edi],dx
  406514:	mov    ebp,edi
  406516:	das    
  406517:	mov    cl,0x8c
  406519:	fidiv  WORD PTR [edx-0x40]
  40651c:	xchg   edx,eax
  40651d:	idiv   DWORD PTR [ebp+0x15]
  406520:	pop    edi
  406521:	jp     0x4064ec
  406523:	scas   al,BYTE PTR es:[edi]
  406524:	pop    edx
  406525:	or     eax,0x9292a1bb
  40652a:	js     0x40653d
  40652c:	mov    esp,0x456e70f5
  406531:	jmp    DWORD PTR [esp+ecx*1]
  406534:	xchg   DWORD PTR [esi],ecx
  406536:	cmp    edx,DWORD PTR [edi]
  406538:	push   ds
  406539:	ss xchg edx,eax
  40653b:	aas    
  40653c:	rsm    
  40653e:	adc    dl,dl
  406540:	and    eax,0xf8efef6
  406545:	xor    eax,0x612667b6
  40654a:	ret    
  40654b:	and    al,0x7a
  40654d:	xor    esi,eax
  40654f:	aam    0xac
  406551:	jp     0x4064f0
  406553:	add    al,0x55
  406555:	inc    ecx
  406556:	mov    ds:0xf11c7f68,al
  40655b:	mov    esp,0x77ca9685
  406560:	clc    
  406561:	sar    BYTE PTR [esi+eax*8-0xac6fd38],1
  406568:	mov    ebp,0x6910578e
  40656d:	div    BYTE PTR [esi]
  40656f:	ss cmc 
  406571:	lds    eax,FWORD PTR [ebx]
  406573:	(bad)  
  406574:	and    eax,0x98ede5d5
  406579:	lods   al,BYTE PTR ds:[esi]
  40657a:	(bad)  
  40657b:	shl    DWORD PTR [esp+esi*8],1
  40657e:	mov    al,0xec
  406580:	ds dec edi
  406582:	cmp    al,0x37
  406584:	and    bl,BYTE PTR [esi-0x1a]
  406587:	adc    BYTE PTR [eax+0x2b0268a8],0xc6
  40658e:	sbb    al,0x81
  406590:	call   0xa7442b30
  406595:	inc    esi
  406596:	leave  
  406597:	nop
  406598:	mov    edi,DWORD PTR [edi]
  40659a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40659b:	pop    ds
  40659c:	push   esp
  40659d:	addr16 mov ah,0x52
  4065a0:	test   eax,0x7f1a2292
  4065a5:	mov    edx,0x5e72bce7
  4065aa:	sub    al,0x1c
  4065ac:	clc    
  4065ad:	dec    ecx
  4065ae:	sub    al,BYTE PTR [ecx+0x7a485bb6]
  4065b4:	xor    DWORD PTR [edx],esi
  4065b6:	clc    
  4065b7:	enter  0x71a5,0x2e
  4065bb:	test   eax,0xe0326688
  4065c0:	lock sbb BYTE PTR [ebx],dh
  4065c3:	retf   
  4065c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c5:	mov    esi,DWORD PTR [edx-0x7bc3c522]
  4065cb:	xchg   BYTE PTR ds:0xccb84956,ah
  4065d1:	adc    cl,BYTE PTR [eax]
  4065d3:	xchg   BYTE PTR [ebp-0x6b3366c7],dh
  4065d9:	add    esp,DWORD PTR [edi]
  4065db:	push   ds
  4065dc:	enter  0x612d,0xd0
  4065e0:	push   edx
  4065e1:	outs   dx,BYTE PTR ds:[esi]
  4065e2:	fldcw  WORD PTR [esi]
  4065e4:	xchg   edi,eax
  4065e5:	sub    eax,0x8f167bfc
  4065ea:	in     al,dx
  4065eb:	mov    dl,0xa3
  4065ed:	sbb    edi,ebx
  4065ef:	mov    al,ds:0xc1167ee6
  4065f4:	scas   eax,DWORD PTR es:[edi]
  4065f5:	mov    bl,0x53
  4065f7:	idiv   BYTE PTR [ebx-0x7c]
  4065fa:	ins    DWORD PTR es:[edi],dx
  4065fb:	imul   edx,DWORD PTR [eax],0xffffff9a
  4065fe:	ins    DWORD PTR es:[edi],dx
  4065ff:	cmp    BYTE PTR gs:[esi+0x4c078748],0xef
  406607:	ds cmp ax,0x3528
  40660c:	jmp    0x42a5f396
  406611:	nop
  406612:	push   edi
  406613:	and    bl,dh
  406615:	xor    ah,BYTE PTR [ebx+0x4bc9b1d9]
  40661b:	ins    BYTE PTR es:[edi],dx
  40661c:	mov    WORD PTR [ebp-0x53],?
  40661f:	out    dx,al
  406620:	inc    edi
  406621:	test   dl,0xd7
  406624:	mov    ch,0xdf
  406626:	mov    bl,0xbe
  406628:	fisttp DWORD PTR [eax-0x15]
  40662b:	not    BYTE PTR [esi]
  40662d:	out    0xf1,eax
  40662f:	and    eax,DWORD PTR [eax+0x4f]
  406632:	mov    ch,0xf5
  406634:	pop    esp
  406635:	sub    eax,0xb09d342
  40663a:	icebp  
  40663b:	pop    esp
  40663c:	pop    es
  40663d:	out    0xf8,eax
  40663f:	mov    dl,0xe5
  406641:	jg     0x406607
  406643:	jne    0x4065c5
  406645:	xor    eax,0x25e71b28
  40664a:	fld    DWORD PTR [eax+0x4130e1e9]
  406650:	mov    al,ds:0x4c16e973
  406655:	xor    ch,BYTE PTR [edi-0x477f6f17]
  40665b:	ror    DWORD PTR [ecx+0xd],cl
  40665e:	push   esi
  40665f:	pop    esp
  406660:	test   BYTE PTR [esi+0x5354edd9],al
  406666:	ins    BYTE PTR es:[edi],dx
  406667:	je     0x40667a
  406669:	mov    dh,0x3b
  40666b:	push   ebp
  40666c:	in     eax,dx
  40666d:	sub    al,0xdf
  40666f:	mul    DWORD PTR [edx+esi*1+0x6e]
  406673:	jne    0x4066c7
  406675:	rol    BYTE PTR [edi],0xff
  406678:	loopne 0x406689
  40667a:	jne    0x4066e9
  40667c:	jl     0x40666d
  40667e:	and    BYTE PTR [edi+0x22],bl
  406681:	bound  esi,QWORD PTR cs:[edx+0x64]
  406685:	and    ecx,DWORD PTR [edx-0x3765fd5b]
  40668b:	rol    BYTE PTR [esi],0xe
  40668e:	mov    ah,0xca
  406690:	icebp  
  406691:	fnsave [esp+edx*1-0x2d]
  406695:	mov    eax,0x9f8ee18f
  40669a:	ins    DWORD PTR es:[edi],dx
  40669b:	push   cs
  40669c:	mov    ebx,0x9808d30b
  4066a1:	jmp    0x4066a7
  4066a3:	cdq    
  4066a4:	mov    edx,0x5a5832ea
  4066a9:	inc    esi
  4066aa:	dec    edx
  4066ab:	data16 shr BYTE PTR [edx],1
  4066ae:	stc    
  4066af:	lea    edi,[ebp-0x12]
  4066b2:	scas   al,BYTE PTR es:[edi]
  4066b3:	ret    
  4066b4:	pop    edi
  4066b5:	sub    esi,DWORD PTR [eax+ecx*8-0x64]
  4066b9:	in     eax,dx
  4066ba:	mov    ebx,0xdfb8a967
  4066bf:	adc    cl,BYTE PTR [edi-0x6a2e16c7]
  4066c5:	xchg   edx,eax
  4066c6:	adc    BYTE PTR [edx-0x1d],ah
  4066c9:	mov    esp,0xa24990c6
  4066ce:	sub    al,0x32
  4066d0:	shl    ah,1
  4066d2:	in     eax,dx
  4066d3:	cmc    
  4066d4:	call   0xe3ba833c
  4066d9:	ret    
  4066da:	mov    WORD PTR [ebx+0x2514a0ad],fs
  4066e0:	mov    dh,dh
  4066e2:	xchg   edx,eax
  4066e3:	rcl    DWORD PTR [edi+0x48],1
  4066e6:	es adc ebp,edi
  4066e9:	and    ebx,edx
  4066eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ec:	mov    esp,eax
  4066ee:	cwde   
  4066ef:	add    al,dl
  4066f1:	lds    eax,FWORD PTR [edx+ebp*8]
  4066f4:	inc    esp
  4066f5:	xchg   BYTE PTR [edx+0x5802234e],dl
  4066fb:	js     0x4066d5
  4066fd:	pop    ebx
  4066fe:	lds    ebp,FWORD PTR [edi]
  406700:	out    0x8a,eax
  406702:	pop    edx
  406703:	push   edx
  406704:	iret   
  406705:	or     al,0x32
  406707:	idiv   esi
  406709:	mov    eax,ds:0x129941a7
  40670e:	jno    0x4066e7
  406710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406711:	out    0x9c,al
  406713:	repz add eax,0x399dbdd6
  406719:	(bad)  
  40671a:	es enter 0x73e1,0xab
  40671f:	cmp    eax,0x5559fee
  406724:	(bad)  
  406725:	fdivr  st,st(3)
  406727:	add    DWORD PTR [ebp+0x60],edi
  40672a:	adc    ebx,edi
  40672c:	and    BYTE PTR [edx],ch
  40672e:	test   al,0xd8
  406730:	mov    DWORD PTR [esi+0x1f],ebp
  406733:	bound  eax,QWORD PTR [ebp+0x1b6ca1f5]
  406739:	push   edx
  40673a:	sub    BYTE PTR [ebp+0x57],ch
  40673d:	jb     0x4067ab
  40673f:	xor    ebp,DWORD PTR [ecx+edx*2+0x76cd6620]
  406746:	add    al,0x66
  406748:	addr16 bswap edx
  40674b:	sbb    al,0x33
  40674d:	es add al,0xd7
  406750:	aas    
  406751:	jb     0x406774
  406753:	rol    DWORD PTR [edx+0x3b],1
  406756:	jnp    0x40677e
  406758:	shl    BYTE PTR [edx],1
  40675a:	sahf   
  40675b:	and    BYTE PTR [eax+0x49],bh
  40675e:	mov    ch,bl
  406760:	(bad)  
  406762:	xchg   edx,eax
  406763:	(bad)  
  406764:	and    DWORD PTR gs:[esi-0x2d],ebp
  406768:	push   0xfffffffc
  40676a:	mov    esp,0xf7c10ada
  40676f:	repz sub ebx,eax
  406772:	xchg   esi,eax
  406773:	xchg   esi,eax
  406774:	ds xchg edx,eax
  406776:	push   ecx
  406777:	xchg   ecx,eax
  406778:	mov    edi,0x50335a89
  40677d:	push   eax
  40677e:	and    BYTE PTR [ebx+eax*1+0x7ef2aa23],bh
  406785:	mov    ebx,0x984b1e75
  40678a:	pop    edx
  40678b:	push   DWORD PTR [edx-0x5bdeb514]
  406791:	(bad)  
  406792:	into   
  406793:	add    edi,DWORD PTR [edx+0x6b0d4694]
  406799:	xchg   esi,eax
  40679a:	rcr    DWORD PTR [ebp-0x7298ae12],0xbb
  4067a1:	sub    cl,0x6f
  4067a4:	(bad)  
  4067a6:	mov    eax,0xa51f083e
  4067ab:	and    DWORD PTR [eax],esi
  4067ad:	cmp    eax,0xeed8a15d
  4067b2:	adc    al,0x9b
  4067b4:	test   BYTE PTR [edx+0x3e428df5],al
  4067ba:	scas   al,BYTE PTR es:[edi]
  4067bb:	jmp    0xcbbc:0x9c337910
  4067c2:	js     0x4067ea
  4067c4:	mov    bh,0xac
  4067c6:	push   ecx
  4067c7:	jno    0x406819
  4067c9:	imul   BYTE PTR [ebp-0x199ac365]
  4067cf:	sub    eax,0x433fdf1e
  4067d4:	outs   dx,DWORD PTR ds:[esi]
  4067d5:	repz aad 0xd3
  4067d8:	rol    DWORD PTR [edx+0x6c],0xad
  4067dc:	jp     0x4067b0
  4067de:	fimul  WORD PTR [ebp+0x6a82dd99]
  4067e4:	or     BYTE PTR [esi+esi*1+0x58a0cf93],cl
  4067eb:	test   BYTE PTR [ebx-0x51],al
  4067ee:	cmp    cl,BYTE PTR [edx]
  4067f0:	push   ebx
  4067f1:	mov    dl,0x9b
  4067f3:	cli    
  4067f4:	mov    dl,0x60
  4067f6:	mov    ebp,0x99f440db
  4067fb:	xchg   edi,eax
  4067fc:	jne    0x406849
  4067fe:	mov    edi,0xe2fd7376
  406803:	mov    al,0xff
  406805:	loopne 0x4067ec
  406807:	dec    edx
  406808:	js     0x4067a1
  40680a:	and    ebx,edi
  40680c:	aad    0x3a
  40680e:	mov    ss,eax
  406810:	jo     0x406865
  406812:	ja     0x4067ae
  406814:	mov    ebx,0x20d750df
  406819:	pop    es
  40681a:	adc    dh,BYTE PTR [ecx]
  40681c:	mov    cl,0xc0
  40681e:	aaa    
  40681f:	mov    dh,0x49
  406821:	pop    eax
  406822:	jae    0x406811
  406824:	mov    dh,0x2f
  406826:	(bad)  
  406827:	div    DWORD PTR [ebx]
  406829:	(bad)  
  40682a:	cli    
  40682b:	ins    DWORD PTR es:[edi],dx
  40682c:	mov    bl,0x6
  40682e:	push   esp
  40682f:	cli    
  406830:	mov    ch,0xea
  406832:	daa    
  406833:	popa   
  406834:	jle    0x4067d1
  406836:	sub    DWORD PTR [edi],ecx
  406838:	adc    eax,0xab1c123b
  40683d:	ins    DWORD PTR es:[edi],dx
  40683e:	jmp    0xe88344e2
  406843:	inc    ebx
  406844:	repnz mov edi,0xcac2bd91
  40684a:	data16 (bad) 
  40684d:	mov    ds:0xd67c56ab,eax
  406852:	inc    esp
  406853:	mov    ds:0x7e0286fe,al
  406858:	pop    ebx
  406859:	mov    cl,0x7e
  40685b:	dec    eax
  40685c:	mov    ds,WORD PTR [eax+0x11a6bf6f]
  406862:	shl    BYTE PTR [eax],cl
  406864:	or     BYTE PTR [ebp-0x2e21e53c],0xb7
  40686b:	lods   al,BYTE PTR ds:[esi]
  40686c:	add    ebx,DWORD PTR [edx+0x6]
  40686f:	xchg   ebx,eax
  406870:	arpl   bp,si
  406872:	cmp    DWORD PTR [eax+0x7bff2775],edx
  406878:	cmp    BYTE PTR [ebx+0x17],bh
  40687b:	add    eax,0xd29b70f1
  406880:	data16 xchg cx,ax
  406883:	(bad)  
  406884:	mov    ecx,0xf2d87429
  406889:	mul    DWORD PTR [edi]
  40688b:	lock fwait
  40688d:	inc    eax
  40688e:	xchg   ebx,eax
  40688f:	ds cmp di,di
  406893:	fadd   QWORD PTR [edi]
  406895:	mov    eax,0x302bc08a
  40689a:	dec    ebp
  40689b:	pop    edi
  40689c:	push   esp
  40689d:	mov    ch,0x47
  40689f:	loop   0x406869
  4068a1:	mov    eax,0x64c6e528
  4068a6:	mov    edi,0x2e1f5add
  4068ab:	inc    ecx
  4068ac:	push   0x2358ab6d
  4068b1:	jnp    0x40689c
  4068b3:	jl     0x406871
  4068b5:	dec    ebp
  4068b6:	lds    ebx,FWORD PTR [edx]
  4068b8:	adc    dh,bl
  4068ba:	mov    DWORD PTR [ecx+0xc95f8cf],0xa634a343
  4068c4:	mov    al,0xdf
  4068c6:	out    dx,al
  4068c7:	xchg   BYTE PTR [ebp+0x4ec4925],ah
  4068cd:	jl     0x4068d1
  4068cf:	loope  0x40685b
  4068d1:	or     bh,BYTE PTR [ecx+0x4d]
  4068d4:	out    0xf6,al
  4068d6:	pop    edi
  4068d7:	jg     0x4068c7
  4068d9:	or     al,0x2e
  4068db:	js     0x4068e9
  4068dd:	ins    DWORD PTR es:[edi],dx
  4068de:	es dec bx
  4068e1:	test   BYTE PTR [edx-0x18],al
  4068e4:	iret   
  4068e5:	call   DWORD PTR [edx-0x3233e634]
  4068eb:	xchg   ebp,eax
  4068ec:	mov    dl,BYTE PTR [edi+ebx*2+0xa]
  4068f0:	fbld   TBYTE PTR [eax+eiz*1]
  4068f3:	and    al,0x5a
  4068f5:	xor    eax,0x77086493
  4068fa:	fisub  WORD PTR [ebx-0x18]
  4068fd:	mov    ds:0xa0cb80ce,eax
  406902:	lea    ebx,[edx-0x5e]
  406905:	mov    ebp,0xf9c8009e
  40690a:	and    edi,DWORD PTR [ebx+0xc009a8f]
  406910:	sub    eax,0xed602187
  406915:	xlat   BYTE PTR ds:[ebx]
  406916:	mov    edi,DWORD PTR [ebp+0x60f85240]
  40691c:	jb     0x4068ef
  40691e:	pop    esp
  40691f:	xchg   BYTE PTR [ebp-0x5e],cl
  406922:	pop    es
  406923:	mov    dl,0xfc
  406925:	sbb    BYTE PTR [edi-0x1a],ah
  406928:	sti    
  406929:	mov    ch,0x22
  40692b:	ficom  WORD PTR [edx-0x2d]
  40692e:	pop    edi
  40692f:	outs   dx,DWORD PTR ds:[esi]
  406930:	jl     0x406972
  406932:	dec    esi
  406933:	lods   eax,DWORD PTR ds:[esi]
  406934:	sbb    eax,0x3f115da0
  406939:	cdq    
  40693a:	sbb    WORD PTR ds:0x62b92889,bp
  406941:	or     DWORD PTR [ebx],ebp
  406943:	(bad)  
  406945:	and    ecx,DWORD PTR [ecx-0x2765c728]
  40694b:	mov    ah,0xcb
  40694d:	push   edi
  40694e:	push   eax
  40694f:	test   BYTE PTR [edx],ah
  406951:	pushf  
  406952:	in     eax,0xc5
  406954:	xchg   ebx,eax
  406955:	mov    bl,0x3a
  406957:	mov    bl,0x99
  406959:	mov    al,ds:0x1919a9f7
  40695e:	(bad)  
  40695f:	mov    edx,0x2b8d3b69
  406964:	bound  edx,QWORD PTR [eax-0x387765a2]
  40696a:	clc    
  40696b:	lea    edi,[ebx]
  40696d:	jp     0x406913
  40696f:	mov    eax,0x3afc4531
  406974:	icebp  
  406975:	rcl    DWORD PTR [eax-0x4e],0xd6
  406979:	inc    ecx
  40697a:	mov    ebp,DWORD PTR [ecx+ebx*8-0x59343dab]
  406981:	pop    ds
  406982:	xchg   edi,eax
  406983:	in     eax,dx
  406984:	pop    esi
  406985:	mov    fs,ecx
  406987:	jmp    0x6e1e9ea
  40698c:	add    al,0xb2
  40698e:	push   ebp
  40698f:	mov    edx,0xddb8584a
  406994:	mov    ebp,0x5549850e
  406999:	test   al,0xa3
  40699b:	xchg   esp,eax
  40699c:	pop    ds
  40699d:	pop    eax
  40699e:	pop    edi
  40699f:	jg     0x40692b
  4069a1:	dec    eax
  4069a2:	sub    esp,DWORD PTR [ecx-0x26]
  4069a5:	adc    al,0xd0
  4069a7:	mov    cs,WORD PTR [edx]
  4069a9:	es push ebp
  4069ab:	pop    ds
  4069ac:	aaa    
  4069ad:	xor    BYTE PTR [edx-0x32944048],bh
  4069b3:	lods   al,BYTE PTR ds:[esi]
  4069b4:	popa   
  4069b5:	pop    eax
  4069b6:	mov    edx,0x822211d7
  4069bb:	out    0x82,al
  4069bd:	sbb    BYTE PTR [eax+0x60],cl
  4069c0:	test   ebp,edx
  4069c2:	shl    bl,0xe3
  4069c5:	jmp    0x406a1b
  4069c7:	jmp    0x46672a73
  4069cc:	pop    edx
  4069cd:	(bad)  
  4069ce:	prefetch BYTE PTR [edi-0x1a]
  4069d2:	aad    0xb8
  4069d4:	ins    DWORD PTR es:[edi],dx
  4069d5:	mov    al,ds:0x4af048f9
  4069da:	sub    al,0xbf
  4069dc:	jmp    0x4d47:0xadbcb7fa
  4069e3:	jnp    0x406a47
  4069e5:	aam    0x28
  4069e7:	repnz lods al,BYTE PTR ds:[esi]
  4069e9:	xchg   ecx,eax
  4069ea:	rcr    edx,1
  4069ec:	sbb    al,dl
  4069ee:	add    cl,bh
  4069f0:	dec    esi
  4069f1:	fdiv   QWORD PTR [edi+0x75]
  4069f4:	lods   al,BYTE PTR ds:[esi]
  4069f5:	test   al,0x7e
  4069f7:	mov    edi,0x741cd029
  4069fc:	leave  
  4069fd:	ret    0xec58
  406a00:	xor    eax,DWORD PTR [edi-0x7b]
  406a03:	mov    dl,0xd9
  406a05:	xchg   edi,eax
  406a06:	fucomi st,st(4)
  406a08:	cmp    BYTE PTR [ebx],bh
  406a0a:	sar    DWORD PTR [eax-0x3d],cl
  406a0d:	dec    ebx
  406a0e:	out    0x2a,al
  406a10:	xchg   ecx,eax
  406a11:	clc    
  406a12:	jb     0x406a84
  406a14:	gs and eax,esi
  406a17:	(bad)  
  406a18:	push   eax
  406a19:	or     ah,BYTE PTR [ebx+0x68]
  406a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a1d:	sti    
  406a1e:	xor    bh,BYTE PTR [edx+ebp*1+0x2c3e3b9e]
  406a25:	mov    edi,0xaa5d6271
  406a2a:	cli    
  406a2b:	(bad)  
  406a2c:	test   eax,0x8852a4bf
  406a31:	nop
  406a32:	xor    eax,0xca8c532b
  406a37:	push   esi
  406a38:	adc    BYTE PTR [ecx+ebp*4],ah
  406a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a3c:	inc    ecx
  406a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a3f:	and    al,dl
  406a41:	loop   0x4069e6
  406a43:	ficomp WORD PTR [esi-0x39]
  406a46:	and    dl,BYTE PTR ds:0x4eaed2d
  406a4c:	xchg   edx,eax
  406a4d:	in     eax,0x25
  406a4f:	mov    dl,0x19
  406a51:	mov    esi,0xcc71579e
  406a56:	imul   ebp
  406a58:	mov    al,0x62
  406a5a:	in     al,dx
  406a5b:	xchg   BYTE PTR [esi+0x72],al
  406a5e:	mov    DWORD PTR [esi+edx*2],ebx
  406a61:	bound  ecx,QWORD PTR [esi+0x3f8f36cb]
  406a67:	int    0x8c
  406a69:	gs in  al,dx
  406a6b:	mov    al,0xff
  406a6d:	xchg   edi,eax
  406a6e:	sub    al,0xaa
  406a70:	sbb    BYTE PTR [eax+0x9],ah
  406a73:	popa   
  406a74:	mov    bh,0x36
  406a76:	or     al,0x5d
  406a78:	dec    edi
  406a79:	popf   
  406a7a:	push   ebx
  406a7b:	arpl   sp,dx
  406a7d:	mov    ah,0x76
  406a7f:	mov    bh,0xc8
  406a81:	rol    BYTE PTR [ebx+0x51],1
  406a84:	stos   DWORD PTR es:[edi],eax
  406a85:	ds in  eax,0x60
  406a88:	test   al,0x89
  406a8a:	btr    DWORD PTR [ecx-0x60dadd97],0xcf
  406a92:	dec    esp
  406a93:	pop    esi
  406a94:	add    ecx,edx
  406a96:	rcr    DWORD PTR [ecx-0x28c3cecb],cl
  406a9c:	out    dx,eax
  406a9d:	push   ecx
  406a9e:	xchg   esi,eax
  406a9f:	lods   eax,DWORD PTR ds:[esi]
  406aa0:	xchg   ecx,eax
  406aa1:	or     DWORD PTR [ebx-0x2],ebx
  406aa4:	pop    ecx
  406aa5:	mov    al,ds:0xe7d5114
  406aaa:	pop    es
  406aab:	xor    cl,BYTE PTR [ebp-0x48b07db4]
  406ab1:	cmp    DWORD PTR [edx-0x4f],ebx
  406ab4:	mov    dl,0x5c
  406ab6:	push   ds
  406ab7:	cmp    bl,bl
  406ab9:	daa    
  406aba:	mov    edi,0x709c1e7b
  406abf:	rcr    DWORD PTR [ecx],0xfd
  406ac2:	cmp    al,0xe1
  406ac4:	jnp    0x406b31
  406ac6:	jmp    0x1ab8276b
  406acb:	inc    ecx
  406acc:	sub    esi,DWORD PTR cs:[ecx]
  406acf:	adc    DWORD PTR [esi-0x73],0xffffff87
  406ad3:	imul   DWORD PTR [edi-0x15d52085]
  406ad9:	mov    al,0x8f
  406adb:	or     BYTE PTR [ecx],0x17
  406ade:	nop
  406adf:	ja     0x406b3c
  406ae1:	(bad)  
  406ae3:	lock push ebp
  406ae5:	call   0x6843:0x1eca94bd
  406aec:	and    dh,cl
  406aee:	fwait
  406aef:	mov    cl,ch
  406af1:	push   eax
  406af2:	jp     0x406b47
  406af4:	les    ecx,FWORD PTR [edi-0x51fdcdae]
  406afa:	addr16 jae 0x406b79
  406afd:	pusha  
  406afe:	mov    ecx,0xfe1c229d
  406b03:	xor    bl,BYTE PTR [ebp+0x6dc531d9]
  406b09:	sbb    edi,eax
  406b0b:	xchg   ebx,eax
  406b0c:	ret    0xdf3b
  406b0f:	sub    dl,bl
  406b11:	xchg   edi,eax
  406b12:	cmp    bh,BYTE PTR [esi+0x46]
  406b15:	das    
  406b16:	(bad)  
  406b17:	mov    esi,0xb4b89d8c
  406b1c:	xor    DWORD PTR [ebp-0x70492e11],0xffffff8b
  406b23:	push   eax
  406b24:	inc    ebp
  406b25:	cld    
  406b26:	pusha  
  406b27:	xor    al,0xf5
  406b29:	xor    bl,BYTE PTR [ebp-0x93f0086]
  406b2f:	mov    bh,0x5e
  406b31:	sbb    BYTE PTR [eax+0x1f],cl
  406b34:	and    dl,BYTE PTR [bp+0x6b]
  406b38:	push   ecx
  406b39:	ror    DWORD PTR [ebp-0x1d6e61b5],1
  406b3f:	(bad)  
  406b40:	jne    0x406b33
  406b42:	dec    ebx
  406b43:	popf   
  406b44:	mov    ah,0x21
  406b46:	mov    ebp,0x2785927d
  406b4b:	inc    ebx
  406b4c:	cmp    al,0x60
  406b4e:	hlt    
  406b4f:	mov    ah,0xfe
  406b51:	pop    esi
  406b52:	ja     0x406b48
  406b54:	mov    edx,0x76e0746f
  406b59:	ds out dx,al
  406b5b:	gs aad 0xaf
  406b5e:	sbb    eax,DWORD PTR [ecx-0x30]
  406b61:	cmp    edx,DWORD PTR [eax]
  406b63:	inc    ecx
  406b64:	sub    BYTE PTR [ebp+0x771e6c6c],dh
  406b6a:	fnstsw WORD PTR [ebp+0x4faa7da6]
  406b70:	cdq    
  406b71:	xor    al,0xb6
  406b73:	mov    ebp,0x6379120a
  406b78:	cs ss pop esp
  406b7b:	(bad)  
  406b7c:	out    0x6a,eax
  406b7e:	jb     0x406bd4
  406b80:	mov    bl,0x76
  406b82:	adc    cl,BYTE PTR [edx-0x48]
  406b85:	test   ah,dh
  406b87:	sbb    eax,0xf2f5db6e
  406b8c:	pusha  
  406b8d:	sbb    cl,BYTE PTR [ebp-0x51a3a229]
  406b93:	xlat   BYTE PTR ds:[ebx]
  406b94:	enter  0x223,0xcb
  406b98:	add    bl,BYTE PTR [ecx]
  406b9a:	out    0x83,eax
  406b9c:	(bad)  
  406b9d:	and    BYTE PTR [eax+0x2943f37],dl
  406ba3:	sbb    bh,BYTE PTR [ecx+0x42ebefa6]
  406ba9:	or     BYTE PTR [ebp+0x44],bh
  406bac:	mov    al,ds:0xa99a88e9
  406bb1:	sub    ecx,ebx
  406bb3:	les    ecx,FWORD PTR [edi-0x53c9d185]
  406bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bba:	xor    ebp,DWORD PTR ds:0x3424e6a0
  406bc0:	and    cl,BYTE PTR [ebp+0xc]
  406bc3:	dec    edx
  406bc4:	leave  
  406bc5:	(bad)  
  406bc6:	push   ebx
  406bc7:	icebp  
  406bc8:	adc    edi,DWORD PTR [ebp+0x101f3d60]
  406bce:	fst    DWORD PTR ds:0xeac40224
  406bd4:	mov    cl,0x10
  406bd6:	push   ebx
  406bd7:	mov    ah,0x2b
  406bd9:	xchg   al,cl
  406bdb:	scas   al,BYTE PTR es:[edi]
  406bdc:	jb     0x406bd4
  406bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bdf:	(bad)  [ebx]
  406be1:	cmp    edx,0x9
  406be4:	sub    DWORD PTR [ebp+0x6],edi
  406be7:	hlt    
  406be8:	mov    bl,0x4
  406bea:	cmp    al,0xcf
  406bec:	imul   ebx,DWORD PTR [edx-0x29],0x392d6736
  406bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf4:	imul   ebp,esi,0xffffffee
  406bf7:	icebp  
  406bf8:	call   0x5ba84bea
  406bfd:	sub    eax,0x5f78e1cd
  406c02:	mov    dl,0xc9
  406c04:	jg     0x406c1f
  406c06:	(bad)  
  406c07:	out    dx,al
  406c08:	bt     DWORD PTR [eax-0x7b236401],ebp
  406c0f:	dec    edx
  406c10:	int3   
  406c11:	ret    
  406c12:	iret   
  406c13:	fadd   DWORD PTR [edx+edi*1-0xd48e273]
  406c1a:	sub    BYTE PTR [esi],ah
  406c1c:	mov    ah,0x56
  406c1e:	cmp    al,0x11
  406c20:	mov    ch,0x95
  406c22:	sbb    eax,0xdad4e2b2
  406c27:	cmp    edx,edx
  406c29:	push   eax
  406c2a:	sub    al,0x4c
  406c2c:	(bad)  
  406c2d:	sar    cl,cl
  406c2f:	fimul  DWORD PTR [esi-0x7e]
  406c32:	add    BYTE PTR [ecx-0x1c],dh
  406c35:	ss hlt 
  406c37:	mov    al,0x8a
  406c39:	test   eax,0x5f1e30e3
  406c3e:	cmc    
  406c3f:	sti    
  406c40:	jl     0x406c0a
  406c42:	mov    ds:0x2a55a387,eax
  406c47:	add    BYTE PTR [edi],cl
  406c49:	sub    bh,ah
  406c4b:	test   al,0x53
  406c4d:	bound  eax,QWORD PTR [edx+edx*4]
  406c50:	pop    ss
  406c51:	mov    eax,0xd7c1eb5f
  406c56:	into   
  406c57:	shl    BYTE PTR [ebp-0x2675915c],1
  406c5d:	mov    bh,0x17
  406c5f:	xchg   edi,eax
  406c60:	ins    BYTE PTR es:[edi],dx
  406c61:	push   ds
  406c62:	and    al,0x86
  406c64:	shr    DWORD PTR [ecx+0x4c3bd212],0x74
  406c6b:	cmc    
  406c6c:	mov    ah,0xf6
  406c6e:	sub    al,0xf5
  406c70:	xlat   BYTE PTR ds:[ebx]
  406c71:	cmp    edx,DWORD PTR ds:0x1222054f
  406c77:	aam    0x2
  406c79:	(bad)  
  406c7a:	gs add al,0x67
  406c7d:	sbb    eax,0xa038f6c3
  406c82:	jmp    0xebff58b
  406c87:	mov    al,0xf4
  406c89:	loop   0x406c11
  406c8b:	jp     0x406ce5
  406c8d:	enter  0x2746,0xd6
  406c91:	jg     0x406cec
  406c93:	test   ecx,esi
  406c95:	jl     0x406cd9
  406c97:	xchg   esi,eax
  406c98:	push   edi
  406c99:	jecxz  0x406c44
  406c9b:	test   BYTE PTR [esi+0x50],cl
  406c9e:	pop    edi
  406c9f:	xchg   esp,eax
  406ca0:	aad    0x47
  406ca2:	adc    BYTE PTR [esi+0x67],0x0
  406ca6:	xor    edi,edx
  406ca8:	inc    esi
  406ca9:	sar    DWORD PTR [esi+0x29ae082e],1
  406caf:	ins    DWORD PTR es:[edi],dx
  406cb0:	repz adc eax,0xc458fd70
  406cb6:	(bad)  
  406cb7:	out    0xd7,eax
  406cb9:	js     0x406ca9
  406cbb:	push   esp
  406cbc:	fsub   QWORD PTR [edi+0x50]
  406cbf:	mov    bh,0x1c
  406cc1:	jno    0x406ce0
  406cc3:	sub    dl,bh
  406cc5:	adc    dh,BYTE PTR [edi]
  406cc7:	push   ebx
  406cc8:	mov    ch,0x95
  406cca:	aad    0x3d
  406ccc:	inc    eax
  406ccd:	mulps  xmm4,XMMWORD PTR [esi+0x509a9acc]
  406cd4:	pop    esp
  406cd5:	jbe    0x406d4e
  406cd7:	sub    esi,DWORD PTR [ecx-0x49]
  406cda:	dec    eax
  406cdb:	dec    ebp
  406cdc:	sbb    BYTE PTR [edi],ah
  406cde:	into   
  406cdf:	push   ds
  406ce0:	pushf  
  406ce1:	sbb    DWORD PTR [esi+eax*1-0x4a],esi
  406ce5:	fdiv   QWORD PTR [ecx+0x7c3577e0]
  406ceb:	jbe    0x406d2a
  406ced:	(bad)  
  406cee:	scas   al,BYTE PTR es:[edi]
  406cef:	pushf  
  406cf0:	mov    esp,edi
  406cf2:	outs   dx,DWORD PTR ds:[esi]
  406cf3:	mov    ds:0x63a3a5b0,eax
  406cf8:	pcmpeqb mm2,mm4
  406cfb:	push   dx
  406cfd:	nop
  406cfe:	scas   al,BYTE PTR es:[edi]
  406cff:	jge    0x406d77
  406d01:	outs   dx,DWORD PTR ds:[esi]
  406d02:	adc    ebx,DWORD PTR [ebx+eiz*2+0x49]
  406d06:	mov    cs,eax
  406d08:	mov    WORD PTR [edx+0x12768d8b],ds
  406d0e:	pusha  
  406d0f:	pop    ecx
  406d10:	jo     0x406ce1
  406d12:	scas   eax,DWORD PTR es:[edi]
  406d13:	xchg   edi,eax
  406d14:	add    ebp,DWORD PTR [edi+eax*2]
  406d17:	pop    ebp
  406d18:	daa    
  406d19:	cmp    eax,0x96850574
  406d1e:	add    ebp,ebp
  406d20:	xchg   ebp,eax
  406d21:	int    0x4d
  406d23:	retf   
  406d24:	arpl   WORD PTR [ebp-0x6e],cx
  406d27:	js     0x406d11
  406d29:	push   ss
  406d2a:	or     ah,dh
  406d2c:	pop    ebx
  406d2d:	jecxz  0x406ccd
  406d2f:	mov    esp,0xd01ca353
  406d34:	fsubr  DWORD PTR [ebx]
  406d36:	dec    edx
  406d37:	nop
  406d38:	push   esp
  406d39:	sub    DWORD PTR [eax-0x70],0x97e29138
  406d40:	push   esi
  406d41:	loope  0x406d9d
  406d43:	mov    dh,0xe3
  406d45:	sub    bl,BYTE PTR [edx-0x60]
  406d48:	icebp  
  406d49:	and    ebp,DWORD PTR [ecx-0x1f]
  406d4c:	popa   
  406d4d:	mov    bl,0xc4
  406d4f:	repz cli 
  406d51:	test   al,0xe8
  406d53:	sbb    eax,0x27d358dc
  406d58:	inc    esi
  406d59:	jge    0x406dd9
  406d5b:	mov    esp,0x23af1bae
  406d60:	dec    ecx
  406d61:	dec    ecx
  406d62:	es js  0x406d58
  406d65:	mov    dl,BYTE PTR [ecx-0x64224ecf]
  406d6b:	mov    ds:0x79731ed3,eax
  406d70:	mov    ds:0x719b24ce,al
  406d75:	or     DWORD PTR [edx],ebp
  406d77:	leave  
  406d78:	test   DWORD PTR es:[edx-0x4],0x612d1b59
  406d80:	outs   dx,DWORD PTR ds:[esi]
  406d81:	aaa    
  406d82:	jecxz  0x406d86
  406d84:	sbb    BYTE PTR [edx+0x67f7ab21],0x40
  406d8b:	das    
  406d8c:	fsubr  DWORD PTR ds:0x73e71f0d
  406d92:	jecxz  0x406d33
  406d94:	jg     0x406d56
  406d96:	cwde   
  406d97:	outs   dx,BYTE PTR ds:[esi]
  406d98:	(bad)  
  406d99:	mov    ds:0x80ea4afa,al
  406d9e:	retf   
  406d9f:	push   0x37
  406da1:	and    BYTE PTR [ebp-0x14],ch
  406da4:	pop    eax
  406da5:	or     BYTE PTR [esi],ch
  406da7:	test   al,0x3d
  406da9:	xchg   edi,eax
  406daa:	ror    DWORD PTR [edx],1
  406dac:	fldcw  WORD PTR [ebp+0x3aad6306]
  406db2:	dec    ebp
  406db3:	sub    DWORD PTR [edi-0x3b7915c3],edx
  406db9:	sub    ah,BYTE PTR [edx]
  406dbb:	scas   eax,DWORD PTR es:[edi]
  406dbc:	leave  
  406dbd:	sbb    DWORD PTR [edi+0x53],0x1c
  406dc1:	jae    0x406d78
  406dc3:	in     al,0x7b
  406dc5:	inc    edx
  406dc6:	sbb    BYTE PTR [edi+0x2ded4b2c],ah
  406dcc:	mov    ecx,0x6f4bba7d
  406dd1:	jmp    0x8197:0x140e6328
  406dd8:	inc    edx
  406dd9:	inc    edx
  406dda:	pop    ss
  406ddb:	jnp    0x406dd9
  406ddd:	repz add DWORD PTR [ebx+0x4a39efd9],eax
  406de4:	dec    ecx
  406de5:	retf   
  406de6:	fistp  WORD PTR [eax-0x6f5c956a]
  406dec:	ins    DWORD PTR es:[edi],dx
  406ded:	imul   esi,DWORD PTR [ebx],0x623e0725
  406df3:	sub    DWORD PTR [ebp+0x1d],esp
  406df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df7:	lods   eax,DWORD PTR ds:[esi]
  406df8:	mov    bh,0x3f
  406dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dfb:	cli    
  406dfc:	es and bl,ch
  406dff:	and    ebp,ebx
  406e01:	pushf  
  406e02:	fidivr DWORD PTR [esi-0x1d3bd373]
  406e08:	(bad)  
  406e09:	jo     0x406e46
  406e0b:	sbb    al,0xe
  406e0d:	imul   edx,DWORD PTR [edi-0x2d],0xffffffaf
  406e11:	dec    esi
  406e12:	xchg   esi,eax
  406e13:	pop    es
  406e14:	leave  
  406e15:	je     0x406e53
  406e17:	sahf   
  406e18:	stos   DWORD PTR es:[edi],eax
  406e19:	push   ss
  406e1a:	push   0xc8536e8a
  406e1f:	pop    edx
  406e20:	pop    esp
  406e21:	outs   dx,DWORD PTR ds:[esi]
  406e22:	or     eax,0x7a0f9d47
  406e27:	pushf  
  406e28:	pop    edi
  406e29:	add    ebp,esp
  406e2b:	leave  
  406e2c:	mov    eax,ds:0xe75c406
  406e31:	jno    0x406dc0
  406e33:	repz leave 
  406e35:	in     al,dx
  406e36:	mov    ecx,0x3a31e7bf
  406e3b:	outs   dx,BYTE PTR ds:[esi]
  406e3c:	sub    edi,edi
  406e3e:	cmc    
  406e3f:	xchg   ebx,eax
  406e40:	cmp    bl,BYTE PTR [ebx+0x32]
  406e43:	adc    DWORD PTR [ebp+0x1887c3b0],0x1b
  406e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e4b:	add    bh,BYTE PTR [eax-0x25]
  406e4e:	stos   BYTE PTR es:[edi],al
  406e4f:	inc    esi
  406e50:	push   edx
  406e51:	pop    ebp
  406e52:	adc    ch,bh
  406e54:	push   ebx
  406e55:	sbb    ch,BYTE PTR [edx]
  406e57:	imul   edx,DWORD PTR [esi],0x4dbfdc8e
  406e5d:	(bad)  
  406e5e:	outs   dx,DWORD PTR ds:[esi]
  406e5f:	ret    0xf1e4
  406e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e63:	and    bh,dl
  406e65:	jle    0x406e7e
  406e67:	jmp    0xa508:0xae6b5c29
  406e6e:	nop
  406e6f:	or     eax,0x800508e5
  406e74:	pop    ds
  406e75:	xor    eax,0x86ef1bcf
  406e7a:	xor    al,0x87
  406e7c:	push   edi
  406e7d:	mov    ecx,es
  406e7f:	push   ds
  406e80:	pusha  
  406e81:	mov    cl,0x4d
  406e83:	cmp    ecx,DWORD PTR [esp+eax*4]
  406e86:	add    BYTE PTR [eax-0x4],0x3c
  406e8a:	cmp    dh,bh
  406e8c:	jmp    0x406e7d
  406e8e:	inc    eax
  406e8f:	stos   DWORD PTR es:[edi],eax
  406e90:	mov    ecx,0x2b9d7571
  406e95:	icebp  
  406e96:	xchg   ebx,eax
  406e97:	mov    bh,ch
  406e99:	mov    ebp,0xc503e1ef
  406e9e:	(bad)  
  406ea0:	imul   eax,DWORD PTR [esi+0x6b],0xda351392
  406ea7:	stos   BYTE PTR es:[edi],al
  406ea8:	jae    0x406e57
  406eaa:	jae    0x406e2c
  406eac:	mov    dl,0x38
  406eae:	inc    eax
  406eaf:	mov    ah,0x7
  406eb1:	fnstsw WORD PTR [ecx-0x6b3481e0]
  406eb7:	addr16 in al,dx
  406eb9:	mov    fs,esi
  406ebb:	aad    0x96
  406ebd:	inc    ebp
  406ebe:	sbb    dl,BYTE PTR [ebx]
  406ec0:	xchg   edi,eax
  406ec1:	leave  
  406ec2:	cld    
  406ec3:	loope  0x406e7a
  406ec5:	mov    BYTE PTR [esi],0x3c
  406ec8:	ins    DWORD PTR es:[edi],dx
  406ec9:	lds    edx,FWORD PTR [eax+0x27]
  406ecc:	nop
  406ecd:	aaa    
  406ece:	fwait
  406ecf:	xchg   esi,eax
  406ed0:	jae    0x406ef2
  406ed2:	bound  ecx,QWORD PTR ds:0x6c91283f
  406ed8:	xchg   ecx,eax
  406ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eda:	cmp    eax,0x3622ba1a
  406edf:	(bad)  
  406ee0:	cmp    al,0x7f
  406ee2:	in     eax,dx
  406ee3:	jne    0x406ebb
  406ee5:	cmp    al,0xc6
  406ee7:	pop    edi
  406ee8:	out    0xaf,eax
  406eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eeb:	adc    al,0xc
  406eed:	jmp    0x5b04:0x2e61708b
  406ef4:	bound  esi,QWORD PTR [ecx]
  406ef6:	sbb    eax,0x9c12b108
  406efb:	daa    
  406efc:	and    DWORD PTR [eax-0x4b112f4b],0x225c7e54
  406f06:	or     al,0xbd
  406f08:	hlt    
  406f09:	pop    esi
  406f0a:	xor    eax,0xf8d7999a
  406f0f:	xchg   ebx,eax
  406f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f11:	sub    al,0xe0
  406f13:	sbb    ch,BYTE PTR [edx-0x37a6346e]
  406f19:	or     DWORD PTR [ecx+edi*1+0x153e98f5],ebx
  406f20:	push   ds
  406f21:	xchg   esp,eax
  406f22:	mov    dh,0x8c
  406f24:	sub    DWORD PTR [ebp-0x15],0xffffffa8
  406f28:	jp     0x406f06
  406f2a:	dec    esi
  406f2b:	push   cs
  406f2c:	ret    
  406f2d:	and    BYTE PTR [edi+0x594c825d],ah
  406f33:	dec    eax
  406f34:	mov    eax,0xe2f55029
  406f39:	dec    ebp
  406f3a:	(bad)  
  406f3c:	cdq    
  406f3d:	xchg   BYTE PTR [edx+edi*4+0x44],ah
  406f41:	(bad)  
  406f42:	cmp    DWORD PTR [eax+0x4b49213e],edx
  406f48:	xlat   BYTE PTR ds:[ebx]
  406f49:	inc    esp
  406f4a:	out    0x1f,al
  406f4c:	mul    DWORD PTR [ebp-0x42]
  406f4f:	into   
  406f50:	or     eax,0x84ce4978
  406f55:	xchg   BYTE PTR [edx+0x739ecd73],bl
  406f5b:	retf   0x3334
  406f5e:	push   esi
  406f5f:	xchg   esi,eax
  406f60:	je     0x406f64
  406f62:	xor    DWORD PTR [esi+esi*4],esp
  406f65:	scas   al,BYTE PTR es:[edi]
  406f66:	out    dx,al
  406f67:	jle    0x406f90
  406f69:	jo     0x406f89
  406f6b:	mov    ebx,0x1e8a68a1
  406f70:	std    
  406f71:	xchg   esp,eax
  406f72:	pop    DWORD PTR ds:0x3a60e611
  406f78:	xchg   edi,eax
  406f79:	es mov al,0x37
  406f7c:	ret    0x6bc9
  406f7f:	push   ss
  406f80:	sub    dh,BYTE PTR [edx]
  406f82:	sar    DWORD PTR [ebx],cl
  406f84:	ret    
  406f85:	neg    BYTE PTR [esi+ecx*8-0x2b613ef2]
  406f8c:	adc    ebx,esi
  406f8e:	popa   
  406f8f:	xor    esp,ebx
  406f91:	mov    ?,esi
  406f93:	inc    esi
  406f94:	push   eax
  406f95:	xchg   ecx,eax
  406f96:	jo     0x406fc1
  406f98:	inc    edi
  406f99:	int    0x74
  406f9b:	dec    ebp
  406f9c:	ror    DWORD PTR [edi+0x68ab17ab],0xc0
  406fa3:	sub    eax,0xdcc3c2b8
  406fa8:	leave  
  406fa9:	call   0xb6c6:0xe36ae745
  406fb0:	ds ret 0xdf9a
  406fb4:	xor    ecx,edi
  406fb6:	hlt    
  406fb7:	pop    ss
  406fb8:	fild   DWORD PTR [ebx+0x5163bad5]
  406fbe:	jmp    0xef67682f
  406fc3:	fcom   QWORD PTR [ecx]
  406fc5:	(bad)  
  406fc6:	div    DWORD PTR [ebx]
  406fc8:	adc    DWORD PTR [edx-0x72],esi
  406fcb:	in     al,0x50
  406fcd:	jl     0x407039
  406fcf:	xchg   edx,eax
  406fd0:	out    dx,al
  406fd1:	aad    0xe9
  406fd3:	cld    
  406fd4:	add    bl,BYTE PTR [ebp+0x7a4e91cf]
  406fda:	push   esp
  406fdb:	and    cl,BYTE PTR [ecx+0x15]
  406fde:	es adc eax,0x11e65b8
  406fe4:	jle    0x406ffd
  406fe6:	ds adc al,0xe7
  406fe9:	pop    ebp
  406fea:	sbb    al,0xe1
  406fec:	push   ds
  406fed:	arpl   WORD PTR [edi-0x60],di
  406ff0:	mov    dh,0x2
  406ff2:	(bad)  
  406ff3:	sub    dl,bl
  406ff5:	hlt    
  406ff6:	pop    ds
  406ff7:	mov    bl,0x45
  406ff9:	pop    ecx
  406ffa:	xchg   DWORD PTR [ebp-0x26],ebp
  406ffd:	add    DWORD PTR [eax+0x28d0e6ad],0xffffff80
  407004:	comiss xmm5,DWORD PTR [ebx-0x6a92de55]
  40700b:	test   DWORD PTR [edx+0x333eccb2],edi
  407011:	rcr    ecx,1
  407013:	inc    eax
  407014:	adc    eax,0xb0ab6524
  407019:	mov    ebx,0xb32e9a5f
  40701e:	sbb    DWORD PTR [ebx+ebp*2+0x630d453],ecx
  407025:	(bad)  
  407026:	mov    bl,0x69
  407028:	cmp    ecx,DWORD PTR [edi+0x40e3c325]
  40702e:	lods   al,BYTE PTR ds:[esi]
  40702f:	push   ss
  407030:	out    0xa0,eax
  407032:	scas   al,BYTE PTR es:[edi]
  407033:	mov    dl,0x57
  407035:	call   0x662c016a
  40703a:	clc    
  40703b:	scas   eax,DWORD PTR es:[edi]
  40703c:	xchg   esi,eax
  40703d:	push   edx
  40703e:	or     ebx,edi
  407040:	jl     0x406fcf
  407042:	adc    esp,DWORD PTR [edi+0x50]
  407045:	ror    DWORD PTR [ebx+0xce6acca],0x91
  40704c:	lock push ebp
  40704e:	not    ecx
  407050:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407052:	aam    0x76
  407054:	jne    0x407000
  407056:	bound  edi,QWORD PTR [edi]
  407058:	mov    al,0x4d
  40705a:	push   edx
  40705b:	ins    BYTE PTR es:[edi],dx
  40705c:	jnp    0x4070a9
  40705e:	in     eax,dx
  40705f:	adc    eax,esi
  407061:	adc    ebp,DWORD PTR [edi]
  407063:	aas    
  407064:	sar    BYTE PTR [ebx+0x3c],cl
  407067:	or     BYTE PTR es:[eax-0x50],dh
  40706b:	loope  0x40700e
  40706d:	(bad)  
  40706f:	retf   0xe1bd
  407072:	in     al,0x72
  407074:	xor    esp,DWORD PTR [edx]
  407076:	ret    0xc3ae
  407079:	cmp    eax,0xdddd8d5
  40707e:	or     eax,0x73fcf3d3
  407083:	mov    cl,0x68
  407085:	das    
  407086:	shr    DWORD PTR [edi+0x7196c285],0xf5
  40708d:	ja     0x40710b
  40708f:	sbb    eax,0x472a2514
  407094:	sbb    cl,BYTE PTR ds:0xbe0c2ce3
  40709a:	xor    ebp,edx
  40709c:	and    edi,DWORD PTR [ebx+0x61]
  40709f:	cs stos BYTE PTR es:[edi],al
  4070a1:	dec    ebp
  4070a2:	cmp    dh,al
  4070a4:	and    eax,0x6cec982e
  4070a9:	mov    eax,0x6a29a18f
  4070ae:	push   cs
  4070af:	cmp    BYTE PTR [ecx],dl
  4070b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b3:	add    al,0x9b
  4070b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b6:	mov    al,0x5d
  4070b8:	mov    dl,0xc3
  4070ba:	jmp    0x1cb5:0x16a5bfb1
  4070c1:	std    
  4070c2:	xchg   DWORD PTR [edi+0x23fd3814],esp
  4070c8:	sbb    edi,esp
  4070ca:	neg    DWORD PTR [esi]
  4070cc:	mov    eax,ds:0x41390f29
  4070d1:	push   ecx
  4070d2:	inc    eax
  4070d3:	pop    esp
  4070d4:	mov    ebx,0x5f80d40e
  4070d9:	rol    DWORD PTR [esp+ecx*4],0x69
  4070dd:	mov    edx,0x94cdebcd
  4070e2:	sub    al,0xc7
  4070e4:	adc    ecx,DWORD PTR [edi-0x1a]
  4070e7:	bound  esp,QWORD PTR [esi]
  4070e9:	xor    eax,0xaa9391f3
  4070ee:	je     0x4070b6
  4070f0:	call   0x8d7d:0xd1ec27eb
  4070f7:	test   dl,ch
  4070f9:	push   esi
  4070fa:	mov    bl,0xde
  4070fd:	mov    bl,0xb4
  4070ff:	in     al,0x3d
  407101:	pop    es
  407102:	pop    es
  407103:	cmp    DWORD PTR [edx],esi
  407105:	int    0xcc
  407107:	cmp    cl,BYTE PTR [edx-0x22fafa95]
  40710d:	rol    DWORD PTR [ebx+0x3a],1
  407110:	and    DWORD PTR [ecx-0x46],0x30d85a62
  407117:	nop
  407118:	sbb    BYTE PTR [esi+0x396db140],0xff
  40711f:	pop    ecx
  407120:	dec    esp
  407121:	mov    BYTE PTR [esi+0x5f2f74d3],ch
  407127:	in     eax,dx
  407128:	mov    ds:0xcb5d907d,al
  40712d:	cmp    eax,0xdb7c2edb
  407132:	imul   esp,DWORD PTR [ebx-0x7115d33b],0xcdd95481
  40713c:	xor    DWORD PTR gs:[esi],esp
  40713f:	int    0xd6
  407141:	leave  
  407142:	rcl    DWORD PTR [ebp+ebx*8-0xa],cl
  407146:	dec    eax
  407147:	xchg   ebp,eax
  407148:	aad    0xb
  40714a:	dec    ebx
  40714b:	ins    DWORD PTR es:[edi],dx
  40714c:	mov    BYTE PTR [ebx],dh
  40714e:	cli    
  40714f:	xchg   esp,eax
  407150:	in     eax,dx
  407151:	jne    0x407177
  407153:	xchg   esp,eax
  407154:	inc    ebp
  407155:	js     0x40711a
  407157:	fwait
  407158:	push   ss
  407159:	fimul  DWORD PTR [eax-0x2a]
  40715c:	repnz outs dx,BYTE PTR ds:[esi]
  40715e:	mov    DWORD PTR [ecx+0xb479705],edx
  407164:	mov    al,ds:0x658b52c0
  407169:	add    eax,0x18812d28
  40716e:	push   cs
  40716f:	test   eax,0xa38564bb
  407174:	jmp    0x3839:0x82c88405
  40717b:	sahf   
  40717c:	(bad)  
  40717d:	jne    0x40715e
  40717f:	xchg   ebx,eax
  407180:	mov    dh,0x38
  407182:	mov    cl,0x65
  407184:	sbb    ebx,DWORD PTR [edx+eax*2]
  407187:	push   esp
  407188:	popa   
  407189:	js     0x4071d3
  40718b:	out    0xc5,eax
  40718d:	xchg   edi,eax
  40718e:	rcr    DWORD PTR [esi-0x136192c4],0xf2
  407195:	sar    DWORD PTR [eax],0xad
  407198:	xchg   edi,eax
  407199:	sub    dh,0x6e
  40719c:	or     eax,0x435bd58b
  4071a1:	repnz imul edi,ecx,0x11532ac1
  4071a8:	scas   al,BYTE PTR es:[edi]
  4071a9:	sbb    ebp,ecx
  4071ab:	xor    BYTE PTR [esi],ah
  4071ad:	xor    bl,BYTE PTR [ecx-0x3f69adf6]
  4071b3:	jnp    0x4071a8
  4071b5:	nop
  4071b6:	dec    esp
  4071b7:	enter  0xea38,0x3
  4071bb:	clc    
  4071bc:	mov    ah,0xce
  4071bf:	jo     0x40719e
  4071c1:	fsub   DWORD PTR [ecx]
  4071c3:	inc    esp
  4071c4:	sub    BYTE PTR [ecx-0x663fdea5],dh
  4071ca:	jno    0x407237
  4071cc:	stos   BYTE PTR es:[edi],al
  4071cd:	push   eax
  4071ce:	push   ebp
  4071cf:	push   ds
  4071d0:	jnp    0x407212
  4071d2:	test   eax,0xedb9fd76
  4071d7:	xchg   esp,eax
  4071d8:	push   eax
  4071d9:	mov    ebx,0xd15c378c
  4071de:	data16 xor al,0x1c
  4071e1:	jl     0x4071e4
  4071e3:	fs je  0x407252
  4071e6:	loop   0x407233
  4071e8:	adc    edi,DWORD PTR [eax+0x2d]
  4071eb:	push   ds
  4071ec:	int3   
  4071ed:	xor    al,0x5
  4071ef:	adc    DWORD PTR [esi+esi*2+0x7583e2a4],ebp
  4071f6:	leave  
  4071f7:	bound  ebx,QWORD PTR [ebp+0x799a833]
  4071fd:	mov    al,0xaa
  4071ff:	nop
  407200:	xchg   edx,eax
  407201:	sbb    BYTE PTR [eax-0x2f],dl
  407204:	rcr    edi,cl
  407206:	icebp  
  407207:	dec    edi
  407208:	ja     0x40723c
  40720a:	sahf   
  40720b:	xor    BYTE PTR [ecx+0x64487a9e],bh
  407211:	and    BYTE PTR [ebx],ah
  407213:	fsubr  DWORD PTR [esi+0x35]
  407216:	out    0xdf,eax
  407218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407219:	mov    dl,0xbd
  40721b:	loopne 0x407251
  40721d:	test   al,0x71
  40721f:	es lahf 
  407221:	push   ecx
  407222:	adc    BYTE PTR [esi+0xc143825],0xc4
  407229:	fist   DWORD PTR [edi-0x76]
  40722c:	push   esi
  40722d:	jb     0x407221
  40722f:	cmp    bh,BYTE PTR [esi+eiz*1]
  407232:	push   edi
  407233:	add    al,0x94
  407235:	dec    esp
  407236:	mov    bl,BYTE PTR [ebx-0x3b]
  407239:	sbb    BYTE PTR [edi-0xc],dh
  40723c:	in     al,0x6d
  40723e:	mov    al,ds:0xf0fb06d
  407243:	or     eax,0x2b26bdbf
  407248:	imul   eax,esi,0xd59fcadb
  40724e:	rol    BYTE PTR [esi-0x47],0x9a
  407252:	pop    esi
  407253:	cmp    DWORD PTR [edi-0x2853a4a5],esi
  407259:	and    eax,0xf86974c9
  40725e:	push   cs
  40725f:	fbstp  TBYTE PTR [edi-0x34ebfd22]
  407265:	dec    ebx
  407266:	mov    eax,ds:0x94c26df6
  40726b:	push   eax
  40726c:	fbld   TBYTE PTR [ebx-0x64]
  40726f:	adc    DWORD PTR [eax],edi
  407271:	das    
  407272:	inc    edx
  407273:	fsubr  st,st(4)
  407275:	rol    BYTE PTR [eax+0x1b],cl
  407278:	mov    edx,0xe693fdd1
  40727d:	test   DWORD PTR [esi-0x4bda744e],0xfbf52e7d
  407287:	add    al,0x92
  407289:	fiadd  WORD PTR [edx-0x3a]
  40728c:	xor    al,0xba
  40728e:	xchg   esi,eax
  40728f:	push   ss
  407290:	in     al,dx
  407291:	sbb    BYTE PTR [eax-0x7f],0x3
  407295:	(bad)  
  407296:	rol    edx,1
  407298:	int3   
  407299:	pop    edx
  40729a:	or     eax,0xb46b065a
  40729f:	and    al,0x1a
  4072a1:	lahf   
  4072a2:	pop    ebx
  4072a3:	jno    0x407290
  4072a5:	dec    eax
  4072a6:	sbb    ebx,0x5f01325
  4072ac:	jns    0x40732b
  4072ae:	inc    ebx
  4072af:	push   ebx
  4072b0:	test   DWORD PTR [edi-0xda279d5],edx
  4072b6:	inc    edx
  4072b7:	retf   0x4e3d
  4072ba:	inc    dl
  4072bc:	stc    
  4072bd:	pop    ds
  4072be:	jmp    0x40730d
  4072c0:	cs jo  0x407315
  4072c3:	adc    ah,BYTE PTR [ecx+0x4fbb6f77]
  4072c9:	add    DWORD PTR [esi],esi
  4072cb:	ins    BYTE PTR es:[edi],dx
  4072cc:	pusha  
  4072cd:	lods   al,BYTE PTR ds:[esi]
  4072ce:	repnz xchg esp,eax
  4072d0:	adc    BYTE PTR [eax],0xd7
  4072d3:	lods   eax,DWORD PTR ds:[esi]
  4072d4:	jmp    0xcf823554
  4072d9:	dec    esp
  4072da:	and    ch,BYTE PTR [edx-0x5e]
  4072dd:	push   eax
  4072de:	rcr    BYTE PTR [ebx-0x531d38cb],1
  4072e4:	xlat   BYTE PTR ds:[ebx]
  4072e5:	push   es
  4072e6:	repz jae 0x407315
  4072e9:	dec    ebp
  4072ea:	jno    0x407317
  4072ec:	into   
  4072ed:	push   0x735987e2
  4072f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f3:	call   0x21cf98ee
  4072f8:	test   BYTE PTR es:[edi+0x7c],bh
  4072fc:	test   al,0xe8
  4072fe:	in     eax,0xe6
  407300:	mov    eax,0x912eaaab
  407305:	repz jp 0x40728e
  407308:	jg     0x407366
  40730a:	cvtps2pd xmm2,QWORD PTR [ebx]
  40730d:	bound  eax,QWORD PTR [edi+0x63c0b5bf]
  407313:	sub    eax,DWORD PTR [ecx]
  407315:	in     al,0x3
  407317:	add    DWORD PTR [ebx+0x62],esp
  40731a:	scas   al,BYTE PTR es:[edi]
  40731b:	ins    BYTE PTR es:[di],dx
  40731d:	add    ah,BYTE PTR [esp+ecx*4-0x2df6e64]
  407324:	out    dx,eax
  407325:	xchg   edi,eax
  407326:	jecxz  0x4072fd
  407328:	jecxz  0x407328
  40732a:	add    DWORD PTR [edx-0x3e],eax
  40732d:	push   ss
  40732e:	into   
  40732f:	fistp  DWORD PTR [edx+ebx*4-0x67]
  407333:	sahf   
  407334:	test   ebp,0x93a6f34e
  40733a:	pop    ebp
  40733b:	add    bl,ch
  40733d:	ror    DWORD PTR [edi+0x7d],0x1d
  407341:	push   fs
  407343:	or     BYTE PTR [edx],0xb7
  407346:	fmul   DWORD PTR [edi-0x52]
  407349:	pop    eax
  40734a:	inc    esp
  40734b:	or     BYTE PTR [esi-0x239456a7],bh
  407351:	inc    edx
  407352:	std    
  407353:	stc    
  407354:	imul   ecx,DWORD PTR [ebx-0xbf01c9b],0x4a0c679c
  40735e:	fsub   st,st(4)
  407360:	(bad)  [ecx]
  407362:	mov    ecx,0x1a2b472
  407367:	retf   0x9a11
  40736a:	ins    DWORD PTR es:[edi],dx
  40736b:	jno    0x407304
  40736d:	add    al,0x60
  40736f:	xor    bl,BYTE PTR [ebx]
  407371:	call   0xfdfd:0xbb881649
  407378:	in     eax,0xcc
  40737a:	xchg   esp,eax
  40737b:	loop   0x4073b8
  40737d:	jge    0x407354
  40737f:	fidiv  DWORD PTR [eax-0x51]
  407382:	xchg   ebx,eax
  407383:	pushf  
  407384:	inc    esp
  407385:	ja     0x40731f
  407387:	adc    al,BYTE PTR [edx+0x16]
  40738a:	adc    al,0xee
  40738c:	xor    al,0xee
  40738e:	mov    ebp,0x573f4289
  407393:	ds pop ds
  407395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407396:	loopne 0x4073fe
  407398:	mov    DWORD PTR cs:[eax],edx
  40739b:	int    0xe4
  40739d:	icebp  
  40739e:	mov    dl,0x35
  4073a0:	retf   
  4073a1:	outs   dx,BYTE PTR ds:[esi]
  4073a2:	(bad)  
  4073a3:	fcomp  DWORD PTR [ecx]
  4073a5:	popa   
  4073a6:	cmp    esp,DWORD PTR [eax+0x4088a25]
  4073ac:	retf   
  4073ad:	lock scas eax,DWORD PTR es:[edi]
  4073af:	xchg   ebp,eax
  4073b0:	icebp  
  4073b1:	dec    ecx
  4073b2:	adc    edx,edx
  4073b4:	sbb    DWORD PTR [eax],eax
  4073b6:	adc    dh,bl
  4073b8:	sbb    BYTE PTR ds:0x30a777ba,bh
  4073be:	and    BYTE PTR [ebp-0x34a9eea3],ah
  4073c4:	mov    esp,0x521b8ddc
  4073c9:	fidiv  WORD PTR [edx+0x2f]
  4073cc:	fisubr WORD PTR [ebp+0x18]
  4073cf:	dec    edx
  4073d0:	adc    eax,0xd985dee0
  4073d5:	into   
  4073d6:	ins    WORD PTR es:[edi],dx
  4073d8:	adc    al,0x0
  4073da:	nop
  4073db:	push   esp
  4073dc:	or     DWORD PTR [ecx+eax*4],esi
  4073df:	cwde   
  4073e0:	pop    ebp
  4073e1:	push   ebx
  4073e2:	ins    DWORD PTR es:[edi],dx
  4073e3:	sbb    ebp,DWORD PTR [edx]
  4073e5:	mov    ss,WORD PTR [edi+0x20]
  4073e8:	add    BYTE PTR [edi-0x5613a81c],0xff
  4073ef:	dec    eax
  4073f0:	push   esp
  4073f1:	jmp    0x6a22e6d7
  4073f6:	adc    BYTE PTR [edi],0xd4
  4073f9:	(bad)  
  4073fa:	into   
  4073fb:	push   edi
  4073fc:	xchg   ebp,eax
  4073fd:	out    dx,eax
  4073fe:	mov    ebp,0x85b70376
  407403:	xor    eax,0x4222cf6a
  407408:	ret    
  407409:	sbb    al,0x89
  40740b:	mov    al,0x53
  40740d:	das    
  40740e:	cmp    DWORD PTR [eax+0x9a32448],eax
  407414:	outs   dx,DWORD PTR ds:[esi]
  407415:	push   eax
  407416:	lea    esi,[ebp-0x19a94e7f]
  40741c:	popa   
  40741d:	xor    bh,BYTE PTR [esi]
  40741f:	push   eax
  407420:	inc    ecx
  407421:	sub    cl,BYTE PTR [eax-0x74d0509a]
  407427:	test   bl,0xd1
  40742a:	xor    al,0x5
  40742c:	out    dx,eax
  40742d:	pop    esp
  40742e:	sub    dl,ah
  407430:	clc    
  407431:	push   edi
  407432:	pop    esi
  407433:	pop    ds
  407434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407435:	xchg   ebx,eax
  407436:	jg     0x407424
  407438:	lods   eax,DWORD PTR ds:[esi]
  407439:	inc    eax
  40743a:	in     al,0x15
  40743c:	or     ecx,DWORD PTR fs:0x9f4eeeae
  407443:	jmp    0x407458
  407445:	ins    DWORD PTR es:[edi],dx
  407446:	jmp    FWORD PTR [edx-0x6c]
  407449:	loop   0x40740d
  40744b:	dec    ecx
  40744c:	cmp    BYTE PTR ds:0x57f9f899,dh
  407452:	pushf  
  407453:	inc    esp
  407454:	sahf   
  407455:	cmp    DWORD PTR [ebx],esi
  407457:	sbb    ah,BYTE PTR [ebp+edx*8+0x3e6ce2d0]
  40745e:	sbb    DWORD PTR [ecx+0x3],0x2aad5b9a
  407465:	and    DWORD PTR [bp+di+0x1cac],0x25
  40746b:	pop    esp
  40746c:	adc    al,0x5a
  40746e:	or     BYTE PTR [eax-0x3a],bh
  407471:	lahf   
  407472:	jmp    DWORD PTR [esp+eiz*8+0x17fde526]
  407479:	scas   eax,DWORD PTR es:[edi]
  40747a:	int    0xa8
  40747c:	push   es
  40747d:	cmp    al,0xe1
  40747f:	repz jb 0x407469
  407482:	sub    ah,al
  407484:	and    al,0x5
  407486:	mov    bl,0xb4
  407488:	xchg   DWORD PTR [ebp-0xd],edx
  40748b:	sub    eax,edi
  40748d:	(bad)  
  40748f:	dec    ecx
  407490:	sub    ebp,ebp
  407492:	(bad)  
  407493:	int3   
  407494:	outs   dx,DWORD PTR ds:[esi]
  407495:	out    0x9f,al
  407497:	mov    cl,al
  407499:	xor    eax,0x4ab079fb
  40749e:	shl    DWORD PTR [edi+0x36],1
  4074a1:	ret    0x2871
  4074a4:	xchg   ebx,eax
  4074a5:	push   esi
  4074a6:	aam    0x4c
  4074a8:	fild   DWORD PTR [esi+eax*1-0x20]
  4074ac:	dec    edx
  4074ad:	jle    0x407451
  4074af:	rcr    DWORD PTR [edx],0x2c
  4074b2:	xor    bh,BYTE PTR [ecx+0x5b]
  4074b5:	dec    edi
  4074b6:	shl    bh,cl
  4074b8:	(bad)  
  4074b9:	icebp  
  4074ba:	(bad)  
  4074bb:	daa    
  4074bc:	daa    
  4074bd:	je     0x4074d5
  4074bf:	lods   al,BYTE PTR ds:[esi]
  4074c0:	(bad)  
  4074c1:	es xchg edx,eax
  4074c3:	hlt    
  4074c4:	jae    0x407522
  4074c6:	sar    bl,1
  4074c8:	(bad)  
  4074c9:	lahf   
  4074ca:	add    bl,BYTE PTR [ebx-0x35]
  4074cd:	rol    DWORD PTR [ecx+esi*2+0x19],cl
  4074d1:	mov    ds:0xb7a1d77f,al
  4074d6:	nop
  4074d7:	call   0x1e90:0xe4400426
  4074de:	(bad)  
  4074df:	and    BYTE PTR [edx],dh
  4074e1:	int    0x64
  4074e3:	fucomp st(4)
  4074e5:	mov    ds:0xe7b7ea79,al
  4074ea:	test   eax,0xc60ea21d
  4074ef:	or     ebp,DWORD PTR ds:0x97fd67f6
  4074f5:	popf   
  4074f6:	loopne 0x4074ce
  4074f8:	stos   BYTE PTR es:[edi],al
  4074f9:	popa   
  4074fa:	add    al,0xc5
  4074fc:	data16 ror bl,0xfb
  407500:	in     al,0x87
  407502:	dec    esp
  407503:	dec    esp
  407504:	in     al,dx
  407505:	cli    
  407506:	cdq    
  407507:	pop    edi
  407508:	mov    ebx,gs
  40750a:	in     al,dx
  40750b:	jae    0x40751e
  40750d:	jne    0x4074dd
  40750f:	and    al,0xe0
  407511:	cmp    DWORD PTR [edi],edx
  407513:	dec    ebx
  407514:	in     eax,dx
  407515:	loopne 0x4074e1
  407517:	mov    ecx,0x73d02353
  40751c:	and    cl,BYTE PTR [eax+0x3]
  40751f:	call   0x3647:0xe3e1e001
  407526:	fwait
  407527:	adc    ah,0x53
  40752a:	pop    ds
  40752b:	xor    al,dl
  40752d:	popf   
  40752e:	leave  
  40752f:	pop    ebp
  407530:	mov    ah,ch
  407532:	addr16 sbb al,0x60
  407535:	mov    al,0x65
  407537:	out    0xe2,al
  407539:	or     ebx,DWORD PTR [edi+0x566875b2]
  40753f:	mov    ebx,0x28a4357f
  407544:	adc    BYTE PTR [edi+0x722b115f],dl
  40754a:	sahf   
  40754b:	jg     0x407531
  40754d:	inc    eax
  40754e:	adc    dh,BYTE PTR [edx]
  407550:	or     esi,DWORD PTR [eax-0x28]
  407553:	mov    al,ds:0x11763180
  407558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407559:	inc    BYTE PTR [ebp-0x24]
  40755c:	cmp    ebp,DWORD PTR [esi+0xd]
  40755f:	mov    bh,0xda
  407561:	xchg   ebp,eax
  407562:	into   
  407563:	sbb    ebp,ecx
  407565:	mov    esp,0x7ce33855
  40756a:	mov    cl,0x4b
  40756c:	cmp    eax,0x33e3c044
  407571:	leave  
  407572:	test   eax,0x5118059a
  407577:	ffree  st(6)
  407579:	xchg   esp,eax
  40757a:	mov    DWORD PTR [edi+0x7c7ed9a],edx
  407580:	push   eax
  407581:	mov    ch,0x73
  407583:	inc    ecx
  407584:	aam    0x5a
  407586:	push   ecx
  407587:	mov    dh,0x54
  407589:	jecxz  0x4075ba
  40758b:	(bad)  
  40758d:	loope  0x4075cd
  40758f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407590:	push   cs
  407591:	mov    bl,0x36
  407593:	jle    0x4075c2
  407595:	dec    esi
  407596:	rcl    BYTE PTR [esi+esi*2-0x77],cl
  40759a:	push   ecx
  40759b:	xor    DWORD PTR ss:[edx],esp
  40759e:	sahf   
  40759f:	fwait
  4075a0:	mov    esp,0xaa9ad868
  4075a5:	jo     0x407567
  4075a7:	neg    BYTE PTR [edx]
  4075a9:	or     dh,al
  4075ab:	in     al,0x4c
  4075ad:	bound  ebp,QWORD PTR [edi]
  4075af:	neg    DWORD PTR [eax]
  4075b1:	xchg   edi,eax
  4075b2:	lods   eax,DWORD PTR ds:[esi]
  4075b3:	inc    esi
  4075b4:	lds    esi,FWORD PTR [ebx+0x8]
  4075b7:	mov    ch,0x7a
  4075b9:	jno    0x4075f2
  4075bb:	enter  0x29e9,0xd5
  4075bf:	push   ds
  4075c0:	lods   eax,DWORD PTR ds:[esi]
  4075c1:	pusha  
  4075c2:	addr16 add ebx,esi
  4075c5:	aaa    
  4075c6:	call   0xcf95bf89
  4075cb:	mov    ebx,0x503900e7
  4075d0:	mov    bh,0xd3
  4075d2:	leave  
  4075d3:	lahf   
  4075d4:	mov    cl,0x4
  4075d6:	inc    esp
  4075d7:	add    BYTE PTR [ebx],al
  4075d9:	sar    bh,0x49
  4075dc:	es clc 
  4075de:	push   cs
  4075df:	dec    edi
  4075e0:	mov    eax,esi
  4075e2:	mov    ?,edi
  4075e4:	xchg   BYTE PTR [edx+0x56237c2f],dl
  4075ea:	jg     0x407641
  4075ec:	scas   eax,DWORD PTR es:[edi]
  4075ed:	or     edi,esi
  4075ef:	push   ecx
  4075f0:	test   eax,0xa842a85b
  4075f5:	jle    0x4075d0
  4075f7:	push   ecx
  4075f8:	cmp    eax,0x1a98420
  4075fd:	add    esi,ebp
  4075ff:	bnd jae 0x4075e5
  407602:	and    ebp,eax
  407604:	out    0x4d,eax
  407606:	(bad)  
  407607:	cmp    al,BYTE PTR [ebx+0x7bfe84c4]
  40760d:	and    al,0xee
  40760f:	aad    0x87
  407611:	mov    bh,0xec
  407613:	cmp    ah,dl
  407615:	xlat   BYTE PTR ds:[ebx]
  407616:	or     esp,DWORD PTR [ebx+0x56]
  407619:	jmp    0x86f5:0x767196ec
  407620:	sti    
  407621:	and    eax,0x7d8519a0
  407626:	in     al,dx
  407627:	(bad)  
  407628:	mov    ds:0x47c62d8e,al
  40762d:	and    BYTE PTR [edi+esi*8-0x34],0xe2
  407632:	das    
  407633:	pop    edx
  407634:	adc    BYTE PTR [eax+ecx*4-0x41da8f09],dl
  40763b:	ja     0x407625
  40763d:	fbld   TBYTE PTR ds:0x3864bdc5
  407643:	js     0x4075d3
  407645:	mov    cl,0x13
  407647:	sbb    BYTE PTR [edx-0x31972331],al
  40764d:	mov    eax,0xf762899d
  407652:	push   es
  407653:	xor    BYTE PTR [edx*4+0x54c71c22],0xa5
  40765b:	scas   al,BYTE PTR es:[edi]
  40765c:	sbb    DWORD PTR [eax+0x25],edx
  40765f:	(bad)
  407663:	adc    eax,0xd6f173f9
  407668:	ins    DWORD PTR es:[edi],dx
  407669:	mov    DWORD PTR [ecx],eax
  40766b:	dec    ebp
  40766c:	jb     0x40768b
  40766e:	adc    ch,BYTE PTR [edx-0x13212605]
  407674:	dec    ebp
  407675:	jo     0x4076f1
  407677:	les    ebp,FWORD PTR [esp+eax*2]
  40767a:	push   0x4f0ed66f
  40767f:	retf   
  407680:	xor    ebp,ebx
  407682:	popa   
  407683:	jae    0x4076ff
  407685:	sub    BYTE PTR [ecx+0x68fa7ec5],bl
  40768b:	jae    0x4076f0
  40768d:	dec    DWORD PTR [eax+0x47]
  407690:	ja     0x4076ab
  407692:	loope  0x40761a
  407694:	leave  
  407695:	inc    ebx
  407696:	push   ebx
  407697:	lea    edx,[eax]
  407699:	mov    bh,0x62
  40769b:	fstp   TBYTE PTR [ecx+0x35]
  40769e:	hlt    
  40769f:	xchg   ecx,eax
  4076a0:	jne    0x407714
  4076a2:	add    eax,0x5c4448f0
  4076a7:	popa   
  4076a8:	fwait
  4076a9:	ret    0xfb85
  4076ac:	pop    eax
  4076ad:	stos   BYTE PTR es:[edi],al
  4076ae:	mov    al,0xe7
  4076b0:	add    esp,eax
  4076b2:	aaa    
  4076b3:	dec    eax
  4076b4:	arpl   WORD PTR cs:[ebx-0x20],di
  4076b8:	mov    WORD PTR [ebx+0x30],es
  4076bb:	mov    esp,0x3c884fa
  4076c0:	jno    0x40773e
  4076c2:	cli    
  4076c3:	sbb    ebx,0x34
  4076c6:	inc    eax
  4076c7:	pop    edi
  4076c8:	frstor [edi+ebp*1]
  4076cb:	jmp    0x90a4f89a
  4076d0:	jmp    0x5718:0x783de273
  4076d7:	cmp    edx,esi
  4076d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076dc:	enter  0x3004,0x2b
  4076e0:	pushf  
  4076e1:	mov    ch,0x80
  4076e3:	jecxz  0x4076f1
  4076e5:	lods   al,BYTE PTR ds:[esi]
  4076e6:	mov    al,0x4
  4076e8:	gs lahf 
  4076ea:	loop   0x407715
  4076ec:	in     al,dx
  4076ed:	inc    edi
  4076ee:	and    cl,BYTE PTR [edx+ebp*1]
  4076f1:	cs xor al,0x95
  4076f4:	popfw  
  4076f6:	push   cs
  4076f7:	mov    esp,DWORD PTR [esi-0x1b8bbe50]
  4076fd:	outs   dx,BYTE PTR ds:[esi]
  4076fe:	mov    eax,eax
  407700:	(bad)  [esi-0x16]
  407703:	push   edi
  407704:	ficom  WORD PTR [esi+0x62]
  407707:	in     al,dx
  407708:	adc    al,cl
  40770a:	js     0x40776d
  40770c:	stos   BYTE PTR es:[edi],al
  40770d:	aam    0x1b
  40770f:	sub    ah,0xcd
  407712:	into   
  407713:	cld    
  407714:	dec    ebp
  407715:	cmp    al,0xd2
  407717:	jbe    0x4076c7
  407719:	lock xchg DWORD PTR [esp+ecx*1],edx
  40771d:	and    DWORD PTR ds:0x1bf56687,0x458bcd37
  407727:	(bad)  
  407728:	aaa    
  407729:	push   es
  40772a:	xchg   DWORD PTR [edi+eiz*4],edi
  40772d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40772e:	xchg   DWORD PTR [edi-0x37],esp
  407731:	mov    cl,0xa6
  407733:	lods   eax,DWORD PTR ds:[esi]
  407734:	pop    DWORD PTR [ebp-0x23d4273c]
  40773a:	(bad)  
  40773c:	rcr    BYTE PTR [ebx],0x49
  40773f:	aad    0x80
  407741:	or     edi,ebx
  407743:	cld    
  407744:	pushf  
  407745:	aam    0x8
  407747:	aad    0xd6
  407749:	mov    ebx,0x68d1bd74
  40774e:	into   
  40774f:	cs pop ecx
  407751:	pop    esp
  407752:	fmulp  st(0),st
  407754:	fild   QWORD PTR [esi]
  407756:	test   al,0xab
  407758:	lahf   
  407759:	adc    edi,DWORD PTR [ecx-0x1a]
  40775c:	lds    eax,FWORD PTR [ecx]
  40775e:	popa   
  40775f:	mov    esi,0x78a9b959
  407764:	inc    edx
  407765:	sub    eax,0x4a506ed6
  40776a:	push   ebx
  40776b:	stos   DWORD PTR es:[edi],eax
  40776c:	jmp    0x407793
  40776e:	sbb    edi,DWORD PTR [ecx+eax*4]
  407771:	stc    
  407772:	sbb    eax,0xd3a4a31d
  407777:	add    al,0x48
  407779:	cmp    DWORD PTR [esi],esi
  40777b:	xchg   DWORD PTR gs:[ecx],ebp
  40777e:	retf   
  40777f:	and    DWORD PTR [ecx],0xffffffc8
  407782:	jns    0x4077eb
  407784:	xlat   BYTE PTR ds:[ebx]
  407785:	mov    cl,0xe3
  407787:	int    0xc8
  407789:	(bad)  
  40778a:	std    
  40778b:	shr    ebx,0x8
  40778e:	neg    BYTE PTR [edi]
  407790:	dec    edi
  407791:	ret    0x74cb
  407794:	and    eax,DWORD PTR [edi]
  407796:	shl    DWORD PTR [esi],0x23
  407799:	pop    esi
  40779a:	sbb    eax,ebx
  40779c:	pusha  
  40779d:	cli    
  40779e:	sbb    eax,0x84dc2ccc
  4077a3:	sahf   
  4077a4:	pop    ebp
  4077a5:	lahf   
  4077a6:	dec    eax
  4077a7:	das    
  4077a8:	cmp    eax,0xc8077d7
  4077ad:	lods   eax,DWORD PTR ds:[esi]
  4077ae:	add    eax,0xb6ed244c
  4077b4:	test   al,0x92
  4077b6:	xlat   BYTE PTR ds:[ebx]
  4077b7:	or     ah,BYTE PTR [esi-0x2fdd5656]
  4077bd:	pop    esp
  4077be:	jl     0x407838
  4077c0:	and    BYTE PTR [edi+0x6f],bl
  4077c3:	add    DWORD PTR [ebx-0x4064ae2a],ebp
  4077c9:	or     ebp,DWORD PTR [esi+0x0]
  4077cc:	not    DWORD PTR [eax-0x9]
  4077cf:	rcl    DWORD PTR [esi+0x56d530a6],cl
  4077d5:	pop    esi
  4077d6:	in     eax,0x3f
  4077d8:	adc    al,0x68
  4077da:	gs retf 
  4077dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077dd:	adc    ebp,DWORD PTR [ebx]
  4077df:	pop    ebx
  4077e0:	icebp  
  4077e1:	sar    DWORD PTR [esi],cl
  4077e3:	ret    0xf042
  4077e6:	and    eax,ebx
  4077e8:	lods   eax,DWORD PTR ds:[esi]
  4077e9:	push   esp
  4077ea:	cmp    eax,0x892cc6e4
  4077ef:	xor    al,0x33
  4077f1:	add    eax,0xe97e1773
  4077f6:	pop    ss
  4077f7:	fmul   st(5),st
  4077f9:	out    0x5f,al
  4077fb:	(bad)  
  4077fc:	je     0x40785f
  4077fe:	xchg   bh,ch
  407800:	sbb    al,0x6c
  407802:	clc    
  407803:	pop    esi
  407804:	and    bl,cl
  407806:	es mov edi,0x6e9e4a8b
  40780c:	xchg   BYTE PTR [edx-0x31],al
  40780f:	and    DWORD PTR [eax],ebp
  407811:	jbe    0x4077b8
  407813:	sbb    al,0x3b
  407815:	push   edx
  407816:	mov    ebx,eax
  407818:	mov    dl,0xd0
  40781a:	push   0xba089174
  40781f:	call   0xe3c8:0xbac33903
  407826:	shr    BYTE PTR [ecx],1
  407828:	sub    eax,0x56a81610
  40782d:	pop    ss
  40782e:	nop
  40782f:	ret    
  407830:	test   DWORD PTR [edi-0x65cae838],ecx
  407836:	outs   dx,DWORD PTR ds:[esi]
  407837:	inc    ebp
  407838:	jno    0x4077c3
  40783a:	jg     0x4077bc
  40783c:	jbe    0x407825
  40783e:	idiv   cl
  407840:	pop    ds
  407841:	outs   dx,DWORD PTR ds:[esi]
  407842:	cmc    
  407843:	retf   0x996b
  407846:	xor    BYTE PTR [esi+0x21],0x7
  40784a:	mov    ebp,DWORD PTR [ecx-0x6860e361]
  407850:	inc    eax
  407851:	pop    esi
  407852:	mov    WORD PTR [ebx-0x39],?
  407855:	lods   al,BYTE PTR ds:[esi]
  407856:	fadd   QWORD PTR [ecx-0x72]
  407859:	xor    BYTE PTR [edi+0x656e80e3],dh
  40785f:	add    BYTE PTR [edi-0x6e],ah
  407862:	out    dx,al
  407863:	cmp    DWORD PTR [eax+0x6f],ecx
  407866:	or     BYTE PTR [edx+0x7b16eca4],ah
  40786c:	jle    0x40782a
  40786e:	pop    esp
  40786f:	jne    0x4078a2
  407871:	push   ebp
  407872:	clc    
  407873:	cdq    
  407874:	loopne 0x4078c1
  407876:	adc    BYTE PTR [ebp-0x640d9478],dl
  40787c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40787d:	les    esp,FWORD PTR ds:0x8e308483
  407883:	fucomip st,st(1)
  407885:	pop    es
  407886:	ja     0x4078d2
  407888:	jg     0x4078b6
  40788a:	shr    BYTE PTR gs:[ebp+0x3d],0xf3
  40788f:	sub    ecx,DWORD PTR [ecx]
  407891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407892:	test   DWORD PTR [edx-0x77],esp
  407895:	mov    BYTE PTR [edi+0x3e],bl
  407898:	adc    esp,0xc6dc92b4
  40789e:	fld    TBYTE PTR [edi-0x638ee289]
  4078a4:	clc    
  4078a5:	ins    DWORD PTR es:[edi],dx
  4078a6:	adc    edx,DWORD PTR [edx+0x2e]
  4078a9:	mov    dh,0x21
  4078ab:	and    ch,0xe6
  4078ae:	and    eax,0x4e93393d
  4078b3:	xor    dl,BYTE PTR [ebp-0x6]
  4078b6:	push   DWORD PTR [ebp+0x2db2af24]
  4078bc:	mov    ebp,0xe6f6d99c
  4078c1:	push   cs
  4078c2:	mov    eax,ds:0x3da2d9b8
  4078c7:	xor    DWORD PTR [eax+0x2b],esp
  4078ca:	push   0x3d
  4078cc:	dec    esi
  4078cd:	jae    0x4078bf
  4078cf:	pusha  
  4078d0:	sbb    esp,DWORD PTR [edx-0x532b0177]
  4078d6:	scas   al,BYTE PTR es:[edi]
  4078d7:	mov    DWORD PTR [ebx+edx*4],edi
  4078da:	pusha  
  4078db:	cmp    al,0x4f
  4078dd:	shl    BYTE PTR [ecx-0x39b8c63f],cl
  4078e3:	enter  0x7275,0xe5
  4078e7:	jg     0x407892
  4078e9:	jns    0x4078bc
  4078eb:	mov    DWORD PTR ds:0xf44a4a10,esi
  4078f1:	xchg   esi,eax
  4078f2:	fwait
  4078f3:	cwde   
  4078f4:	mov    ebp,0xbaf9f1cd
  4078f9:	dec    eax
  4078fa:	lock dec ecx
  4078fc:	int    0xc6
  4078fe:	xchg   ebp,eax
  4078ff:	mov    ch,0x2
  407901:	lock mov eax,0x933a8c3e
  407907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407908:	sbb    eax,0x483ba6fb
  40790d:	pop    ecx
  40790e:	mov    DWORD PTR [ebx+0x2f],ebx
  407911:	push   esi
  407912:	popf   
  407913:	sbb    DWORD PTR [edx+0x32],edx
  407916:	retf   0xc5fd
  407919:	cmp    DWORD PTR [ecx+0x78be98f7],edx
  40791f:	jb     0x4078e6
  407921:	ja     0x40793a
  407923:	push   DWORD PTR gs:[eax+ebx*1]
  407927:	mov    eax,ds:0xfe9bbf74
  40792c:	sbb    eax,0xfe222e51
  407931:	and    eax,0xc2e4b24f
  407936:	jle    0x4078d4
  407938:	popf   
  407939:	dec    edx
  40793a:	mov    al,ds:0x20fa101a
  40793f:	aaa    
  407940:	mov    ebp,0xc379eec1
  407945:	push   ebx
  407946:	xchg   edi,eax
  407947:	mov    ds:0xd76af5ec,eax
  40794c:	shr    BYTE PTR [ebp-0x71da6770],0x18
  407953:	imul   BYTE PTR [edx]
  407955:	cmc    
  407956:	popf   
  407957:	cmp    al,0xc5
  407959:	add    BYTE PTR [ebx],bl
  40795b:	add    ecx,DWORD PTR [edi-0x6b15a892]
  407961:	(bad)  
  407962:	cmc    
  407963:	loopne 0x40794a
  407965:	icebp  
  407966:	pop    edi
  407967:	addr16 cli 
  407969:	scas   al,BYTE PTR es:[edi]
  40796a:	cmp    al,BYTE PTR [ebp+edi*4-0x36a6ef37]
  407971:	in     eax,dx
  407972:	stos   BYTE PTR es:[edi],al
  407973:	rcr    BYTE PTR [eax-0x79],1
  407976:	jecxz  0x4079c2
  407978:	sbb    al,0x6c
  40797a:	cld    
  40797b:	mov    edi,0xfd52446e
  407980:	xor    BYTE PTR ds:0x5e1b74cf,cl
  407986:	mov    ah,0x84
  407988:	push   cs
  407989:	int    0xa4
  40798b:	and    eax,0x147430c6
  407990:	ret    
  407991:	mov    eax,0x60893aa
  407996:	mov    cl,0x32
  407998:	ja     0x40791c
  40799a:	je     0x407990
  40799c:	mov    ds:0xc79b0a78,eax
  4079a1:	test   DWORD PTR [ebx+0x501d0042],0x81987f27
  4079ab:	jne    0x4079c0
  4079ad:	aam    0xa6
  4079af:	shl    edi,cl
  4079b1:	out    0x76,eax
  4079b3:	jo     0x4079f9
  4079b5:	xchg   esi,eax
  4079b6:	idiv   DWORD PTR ds:0xd2603cf3
  4079bc:	cs retf 
  4079be:	mov    eax,DWORD PTR ds:0x1528cb20
  4079c4:	iret   
  4079c5:	popf   
  4079c6:	xchg   edx,eax
  4079c7:	retf   
  4079c8:	inc    esi
  4079c9:	fdivr  QWORD PTR [ebx+0x628d550f]
  4079cf:	enter  0x5c4a,0x3b
  4079d3:	nop
  4079d4:	(bad)  
  4079d5:	fmul   QWORD PTR [edx]
  4079d7:	or     BYTE PTR [ecx+0x11027531],0x1e
  4079de:	js     0x407a14
  4079e0:	pushf  
  4079e1:	stc    
  4079e2:	adc    al,ah
  4079e4:	stc    
  4079e5:	test   cl,ah
  4079e7:	shl    DWORD PTR [esi-0x5a],1
  4079ea:	mov    edx,0xea055003
  4079ef:	stos   DWORD PTR es:[edi],eax
  4079f0:	jle    0x4079fc
  4079f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f3:	repnz mov ebx,0x99ab066
  4079f9:	and    BYTE PTR [ebp+0x35ae40ba],ch
  4079ff:	push   ebp
  407a00:	add    ebp,0xffffffa6
  407a03:	jl     0x407a3f
  407a05:	pop    ebp
  407a06:	inc    esp
  407a07:	pop    ss
  407a08:	out    0x3,al
  407a0a:	(bad)
  407a0d:	cmp    esi,DWORD PTR [bx+si-0x3d]
  407a11:	shr    BYTE PTR [ecx+edi*1+0x774ff35f],0x73
  407a19:	ins    DWORD PTR es:[edi],dx
  407a1a:	cmp    al,0x12
  407a1c:	inc    edx
  407a1d:	addr16 pop esi
  407a1f:	retf   0x3d8
  407a22:	aam    0xbb
  407a24:	sbb    dl,BYTE PTR [edx]
  407a26:	adc    BYTE PTR [esi-0x60],ch
  407a29:	xchg   BYTE PTR es:[ebx+0x6da1a8b9],ch
  407a30:	out    0x35,al
  407a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a33:	aam    0xb5
  407a35:	pop    edx
  407a36:	test   DWORD PTR [ecx],edi
  407a38:	dec    edi
  407a39:	int    0x82
  407a3b:	or     esp,DWORD PTR [ebp+0x6d6f2805]
  407a41:	imul   BYTE PTR [eax-0x4e]
  407a44:	push   ebp
  407a45:	leave  
  407a46:	jnp    0x407a62
  407a48:	push   esp
  407a49:	into   
  407a4a:	jmp    0xbbe4:0x4c8909a0
  407a51:	and    al,0x95
  407a53:	xchg   esi,eax
  407a54:	cli    
  407a55:	ret    
  407a56:	in     al,0x5f
  407a58:	cmp    DWORD PTR [ebx*8+0x5deebb4c],ecx
  407a5f:	sbb    esi,DWORD PTR [eax-0x4b]
  407a62:	xor    al,0x28
  407a64:	jmp    0x73d2:0xd115228a
  407a6b:	retf   0xb412
  407a6e:	pop    esp
  407a6f:	and    DWORD PTR [ecx],eax
  407a71:	out    0x3e,al
  407a73:	push   ss
  407a74:	(bad)  
  407a75:	leave  
  407a76:	inc    ebp
  407a77:	retf   
  407a78:	scas   eax,DWORD PTR es:[edi]
  407a79:	cmp    edx,eax
  407a7b:	lods   al,BYTE PTR ds:[esi]
  407a7c:	in     eax,0xe
  407a7e:	pop    eax
  407a7f:	xchg   ebx,eax
  407a80:	lds    esi,FWORD PTR [eax]
  407a82:	jg     0x407a67
  407a84:	and    DWORD PTR [edi+ebp*4],0x52
  407a88:	out    0xa1,eax
  407a8a:	cmp    esp,DWORD PTR [edx]
  407a8c:	(bad)  
  407a8d:	xor    al,BYTE PTR [esi-0x3e447ac]
  407a93:	mov    ebp,0x3b7fcd07
  407a98:	loopne 0x407a45
  407a9a:	adc    al,0x27
  407a9c:	icebp  
  407a9d:	lea    ebp,[eax-0x63]
  407aa0:	xor    ebx,DWORD PTR [esi+0x57]
  407aa3:	pop    ebx
  407aa4:	sub    ecx,ebx
  407aa6:	mov    edx,0x9c6f4a9e
  407aab:	mov    ds:0x9126ddc7,eax
  407ab0:	inc    esp
  407ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ab2:	xchg   BYTE PTR [edi+0x68],cl
  407ab5:	jmp    0x407a7f
  407ab7:	sub    DWORD PTR [ebx-0x5e0043ca],ecx
  407abd:	lahf   
  407abe:	fcmovne st,st(7)
  407ac0:	add    eax,esp
  407ac2:	lods   eax,DWORD PTR ds:[esi]
  407ac3:	sbb    DWORD PTR [esp+ebx*1],eax
  407ac6:	rcr    DWORD PTR [ebx+0x35],0x35
  407aca:	xor    eax,0x18b26d47
  407acf:	xlat   BYTE PTR ds:[ebx]
  407ad0:	enter  0x97f2,0xd3
  407ad4:	stc    
  407ad5:	mov    ah,0xfd
  407ad7:	push   ebx
  407ad8:	dec    esi
  407ad9:	test   al,0xfe
  407adb:	xchg   ebx,eax
  407adc:	das    
  407add:	repz adc ebx,ecx
  407ae0:	mov    cl,0x9f
  407ae2:	call   0x5e7edc7
  407ae7:	xor    DWORD PTR [ecx],edx
  407ae9:	xchg   DWORD PTR [ebp-0x3a31d851],ecx
  407aef:	lea    eax,[ebx-0x7a]
  407af2:	(bad)  
  407af4:	test   DWORD PTR [ecx-0x45f15308],edi
  407afa:	rcl    DWORD PTR [ebp+0x245b64a7],cl
  407b00:	and    DWORD PTR [eax],ebp
  407b02:	loope  0x407b2e
  407b04:	or     eax,0x8a0d429f
  407b09:	call   0xb3211b15
  407b0e:	and    eax,0x8e71fb52
  407b13:	sbb    edi,DWORD PTR [ebx]
  407b15:	inc    ebp
  407b16:	jnp    0x407afa
  407b18:	retf   
  407b19:	push   eax
  407b1a:	or     bl,dl
  407b1c:	or     eax,0x480a7f65
  407b21:	mov    ch,0x13
  407b23:	ja     0x407b34
  407b25:	inc    ecx
  407b26:	pusha  
  407b27:	daa    
  407b28:	aaa    
  407b29:	loope  0x407aff
  407b2b:	cmc    
  407b2c:	push   esi
  407b2d:	add    esp,0x2
  407b30:	fnstsw WORD PTR [edi+ebx*2]
  407b33:	mov    BYTE PTR [esi-0x41955f2e],0x9
  407b3a:	sub    ebp,DWORD PTR [edi+edx*2-0x427d401f]
  407b41:	lea    esi,[edi]
  407b43:	xor    DWORD PTR [ebp+0x14],esp
  407b46:	jns    0x407bad
  407b48:	push   edx
  407b49:	aam    0xb5
  407b4b:	ins    BYTE PTR es:[edi],dx
  407b4c:	imul   esp,DWORD PTR [ebx+0x13baaf68],0xd7434d0c
  407b56:	xor    al,0x15
  407b58:	cdq    
  407b59:	jmp    0x6a7e:0x857c651d
  407b60:	fdiv   DWORD PTR [ecx+0x134f6df3]
  407b66:	bnd jae 0x407b7b
  407b69:	push   cs
  407b6a:	popf   
  407b6b:	xlat   BYTE PTR ds:[ebx]
  407b6c:	in     al,dx
  407b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b6e:	sbb    al,0x86
  407b70:	pop    ds
  407b71:	ret    0xf767
  407b74:	int3   
  407b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b76:	cmc    
  407b77:	pop    es
  407b78:	xchg   ecx,eax
  407b79:	cs inc ebx
  407b7b:	test   DWORD PTR [edx],esp
  407b7d:	mov    cs,WORD PTR [edx-0x44465ebf]
  407b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b84:	lods   eax,DWORD PTR ds:[esi]
  407b85:	jne    0x407b15
  407b87:	xchg   esp,eax
  407b88:	cld    
  407b89:	and    ebx,0x7dc76132
  407b8f:	fld    st(0)
  407b91:	cmp    ebx,ebx
  407b93:	std    
  407b94:	push   cs
  407b95:	gs nop
  407b97:	sbb    edx,ebx
  407b99:	cmp    BYTE PTR [ebp+0x416d8ed7],bh
  407b9f:	xchg   ebp,eax
  407ba0:	pop    es
  407ba1:	mov    ebx,0x6e823114
  407ba6:	int3   
  407ba7:	mov    ebp,0x84c3c5f0
  407bac:	fucomp st(4)
  407bae:	pop    esi
  407baf:	aam    0x8e
  407bb1:	xchg   ebx,eax
  407bb2:	data16 out 0xbd,al
  407bb5:	mov    ah,0xd7
  407bb7:	imul   eax,DWORD PTR [eax],0x650cf9ac
  407bbd:	adc    BYTE PTR [ecx+edx*2-0x3ceca90f],ch
  407bc4:	lahf   
  407bc5:	jnp    0x407bfd
  407bc7:	test   DWORD PTR [edx],0xe263ac5b
  407bcd:	ret    0x29b7
  407bd0:	and    eax,0x89c131e0
  407bd5:	bnd jp 0xfe0230b4
  407bdc:	mov    eax,DWORD PTR [ebp-0x7b62a2cb]
  407be2:	push   esi
  407be3:	aam    0xf5
  407be5:	or     dh,dl
  407be7:	bound  edi,QWORD PTR [ebx]
  407be9:	jbe    0x407c01
  407beb:	data16 fmul QWORD PTR [ecx-0x998825]
  407bf2:	mov    ds:0x5f74d8c5,al
  407bf7:	pop    DWORD PTR [ebx-0x66b78469]
  407bfd:	cmp    eax,0xd89b261f
  407c02:	push   es
  407c03:	dec    ecx
  407c04:	fnstcw WORD PTR [ecx-0x43f5107a]
  407c0a:	push   eax
  407c0b:	jno    0x407c5b
  407c0d:	adc    al,0xf9
  407c0f:	idiv   BYTE PTR [ebx-0x7cc488b9]
  407c15:	push   edi
  407c16:	mov    edi,0x59f23109
  407c1b:	sbb    al,bh
  407c1d:	jecxz  0x407bb2
  407c1f:	ss sbb eax,0x74a1b5c1
  407c25:	and    al,0x63
  407c27:	mov    ah,0x2f
  407c29:	mov    edx,0xbd6c4bba
  407c2e:	ret    0xb171
  407c31:	xchg   esi,eax
  407c32:	mov    ds:0xec80b361,al
  407c37:	jnp    0x407c16
  407c39:	out    dx,al
  407c3a:	pop    es
  407c3b:	mov    dl,0xfe
  407c3d:	aas    
  407c3e:	pop    eax
  407c3f:	aam    0xf5
  407c41:	mov    esp,0x5fdb9987
  407c46:	xchg   ebx,eax
  407c47:	jo     0x407c87
  407c49:	xchg   ebp,eax
  407c4a:	jbe    0x407c6b
  407c4c:	push   ecx
  407c4d:	pop    ss
  407c4e:	jge    0x407c1d
  407c50:	js     0x407c6b
  407c52:	mov    ebx,0x8071c9b9
  407c57:	stos   BYTE PTR es:[edi],al
  407c58:	jns    0x407cc2
  407c5a:	push   es
  407c5b:	xchg   BYTE PTR [edx-0x57518794],dh
  407c61:	aas    
  407c62:	in     eax,0x42
  407c64:	cmp    DWORD PTR [ebx],ebx
  407c66:	cs sbb al,0xe1
  407c69:	pop    ss
  407c6a:	jge    0x407bf9
  407c6c:	stos   BYTE PTR es:[edi],al
  407c6d:	push   0x87fc4a00
  407c72:	push   cs
  407c73:	dec    BYTE PTR [eax]
  407c75:	cli    
  407c76:	inc    ebp
  407c77:	iret   
  407c78:	sub    bh,BYTE PTR [ebp+0x5bc4bee7]
  407c7e:	lock dec eax
  407c80:	pop    ecx
  407c81:	dec    ecx
  407c82:	sbb    DWORD PTR [edx-0x2b015b52],0x9c556495
  407c8c:	and    ah,BYTE PTR [ebx]
  407c8e:	mov    dh,dl
  407c90:	jge    0x407cec
  407c92:	gs jo  0x407c67
  407c95:	hlt    
  407c96:	adc    BYTE PTR [esi],0xe6
  407c99:	cmp    al,0xcd
  407c9b:	adc    ecx,DWORD PTR [edx-0x4f]
  407c9e:	(bad)  
  407ca0:	rcr    DWORD PTR [ecx+edi*1+0x3c],cl
  407ca4:	call   0xd408:0xc3b6951e
  407cab:	jbe    0x407cee
  407cad:	sbb    BYTE PTR [ebx-0x723cfea1],bh
  407cb3:	sbb    BYTE PTR [ecx+0x68a28e44],ch
  407cb9:	stos   BYTE PTR es:[edi],al
  407cba:	dec    eax
  407cbb:	push   cs
  407cbc:	fnstenv [esi]
  407cbe:	ja     0x407d1d
  407cc0:	jmp    0xe2c4:0xf118ec45
  407cc7:	mov    ecx,0xf2602b76
  407ccc:	jmp    0x407c86
  407cce:	mov    dl,0xab
  407cd0:	jno    0x407d0e
  407cd2:	sub    BYTE PTR [eax],ah
  407cd4:	ret    0xb2c3
  407cd7:	lock add DWORD PTR [ecx+0x20],esi
  407cdb:	jae    0x407cb2
  407cdd:	mov    dl,0xf0
  407cdf:	xor    ch,cl
  407ce1:	(bad)  [edx+ecx*1-0x78]
  407ce5:	shl    al,0x28
  407ce8:	xlat   BYTE PTR ds:[ebx]
  407ce9:	bound  ebx,QWORD PTR [ebx-0x2b]
  407cec:	inc    ebx
  407ced:	bound  esp,QWORD PTR [ebp-0x2d]
  407cf0:	(bad)  
  407cf1:	call   0xc0dd:0xc58c4a3f
  407cf8:	inc    esp
  407cf9:	cmp    DWORD PTR [ebx-0x31],ecx
  407cfc:	enter  0x6214,0x11
  407d00:	sbb    eax,0x8da11777
  407d05:	sbb    eax,0x26bb7645
  407d0a:	inc    ebx
  407d0b:	pop    es
  407d0c:	lock fs ret 0x4187
  407d11:	adc    al,0x4c
  407d13:	xchg   DWORD PTR [ebx-0x1c],edi
  407d16:	cmp    al,0x8
  407d18:	sti    
  407d19:	clc    
  407d1a:	sub    al,BYTE PTR [edi+0x3d]
  407d1d:	repz fwait
  407d1f:	dec    edx
  407d20:	push   0x79
  407d22:	pop    esi
  407d23:	jecxz  0x407d05
  407d25:	cli    
  407d26:	sti    
  407d27:	mov    WORD PTR [ebx+ecx*1+0x2d5c4eca],fs
  407d2e:	sub    bh,dh
  407d30:	mov    bh,0x89
  407d32:	fistp  QWORD PTR [ebx+0x46]
  407d35:	mov    eax,0x1fb802c6
  407d3a:	jo     0x407d14
  407d3c:	add    edi,DWORD PTR ds:0xf69e27b4
  407d42:	jecxz  0x407d74
  407d44:	mov    bh,0xec
  407d46:	setne  cl
  407d49:	inc    edi
  407d4a:	or     ah,al
  407d4c:	scas   eax,DWORD PTR es:[edi]
  407d4d:	icebp  
  407d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d4f:	rcr    dh,0x15
  407d52:	lea    esp,[eax-0x73]
  407d55:	xchg   esi,eax
  407d56:	out    0x19,al
  407d58:	cmp    bh,BYTE PTR [ebp+0x5]
  407d5b:	(bad)  
  407d5c:	(bad)  
  407d5d:	not    DWORD PTR [ecx]
  407d5f:	iret   
  407d60:	mov    bh,0x33
  407d62:	psrlq  mm7,QWORD PTR [ebx+esi*4]
  407d66:	sub    bh,ch
  407d68:	cmp    ecx,DWORD PTR [edx+ecx*8+0x74678f6d]
  407d6f:	inc    edx
  407d70:	jno    0x407de4
  407d72:	retf   0xa8df
  407d75:	in     eax,dx
  407d76:	(bad)  
  407d78:	inc    edi
  407d79:	mov    edi,0x45f3017d
  407d7e:	xchg   edi,eax
  407d7f:	push   ss
  407d80:	or     BYTE PTR [edx+0x6d386675],dl
  407d86:	or     bh,ch
  407d88:	push   0x528035b0
  407d8d:	cmp    bh,BYTE PTR [eax-0x4c]
  407d90:	jecxz  0x407dc0
  407d92:	push   edx
  407d93:	jmp    0x407d24
  407d95:	push   ebx
  407d96:	mov    BYTE PTR [ebx+0x4b22344d],al
  407d9c:	iret   
  407d9d:	push   ebp
  407d9e:	nop
  407d9f:	test   al,0xb8
  407da1:	jbe    0x407df3
  407da3:	push   edx
  407da4:	or     eax,0xb330f6cc
  407da9:	(bad)
  407dad:	adc    BYTE PTR [ecx-0x29],dl
  407db0:	dec    esp
  407db1:	jle    0x407dce
  407db3:	pop    ebp
  407db4:	mov    edx,0x15262142
  407db9:	and    ebx,esp
  407dbb:	mov    ch,0x39
  407dbd:	push   cs
  407dbe:	mov    bh,0xa8
  407dc0:	lods   al,BYTE PTR ds:[esi]
  407dc1:	into   
  407dc2:	out    0xb5,al
  407dc4:	fwait
  407dc5:	mov    bl,0x7f
  407dc7:	mov    esp,0x162c47aa
  407dcc:	shr    DWORD PTR [eax*4-0x4f710e20],cl
  407dd3:	cmp    DWORD PTR [eax],ecx
  407dd5:	adc    bh,BYTE PTR [ebx+0x3b002a14]
  407ddb:	adc    DWORD PTR [ecx+0x3b],0x3afba7af
  407de2:	dec    ebx
  407de3:	js     0x407dd4
  407de5:	add    DWORD PTR [esi-0x71a51146],ecx
  407deb:	inc    ebx
  407dec:	add    BYTE PTR [eax],bh
  407dee:	inc    esi
  407def:	sub    bl,dl
  407df1:	(bad)  [ebp+0x53f1131c]
  407df7:	mov    esi,0x181f6f29
  407dfc:	and    ebx,DWORD PTR [eax+edi*4-0x5b]
  407e00:	xchg   ecx,eax
  407e01:	dec    ecx
  407e02:	xchg   esi,eax
  407e03:	stos   BYTE PTR es:[edi],al
  407e04:	jno    0x407dd0
  407e06:	out    dx,al
  407e07:	push   es
  407e08:	push   ds
  407e09:	retf   
  407e0a:	jb     0x407e58
  407e0c:	mov    eax,ds:0x59f87ab
  407e11:	jecxz  0x407dd6
  407e13:	fwait
  407e14:	gs push cs
  407e16:	xchg   ebx,eax
  407e17:	xchg   esp,eax
  407e18:	test   al,0x40
  407e1a:	sti    
  407e1b:	xor    al,0xf5
  407e1d:	in     eax,0x99
  407e1f:	or     DWORD PTR [eax],edx
  407e21:	cli    
  407e22:	dec    esi
  407e23:	in     eax,dx
  407e24:	xchg   edi,eax
  407e25:	xor    cl,ch
  407e27:	push   esp
  407e28:	dec    esp
  407e29:	gs call 0x4fff:0x9b43489
  407e31:	or     al,0xb7
  407e33:	mov    eax,ds:0xb61467dd
  407e38:	pop    esp
  407e39:	out    0x21,ax
  407e3c:	pop    edx
  407e3d:	sub    DWORD PTR [ebx-0x34],0xc9704fe7
  407e44:	in     eax,dx
  407e45:	fs add eax,0xcada7e70
  407e4b:	jl     0x407ea0
  407e4d:	(bad)  
  407e4e:	sbb    DWORD PTR [edx],ebp
  407e50:	mov    ds:0x88423d75,eax
  407e55:	lock ret 
  407e57:	xchg   esp,eax
  407e58:	push   0xfffffffe
  407e5a:	inc    edx
  407e5b:	enter  0xc37f,0x82
  407e5f:	dec    esi
  407e60:	sub    DWORD PTR [ecx],eax
  407e62:	or     DWORD PTR [ebx],edi
  407e64:	scas   eax,DWORD PTR es:[edi]
  407e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e66:	dec    ecx
  407e67:	jno    0x407e2d
  407e69:	mov    dh,ah
  407e6b:	(bad)  
  407e6c:	mov    ecx,0xef86b709
  407e71:	or     ah,cl
  407e73:	jne    0x407e7b
  407e75:	imul   DWORD PTR [ecx]
  407e77:	sub    BYTE PTR ds:0xdfbef9f5,0x34
  407e7e:	cmp    DWORD PTR [ecx+0x6a],eax
  407e81:	les    esi,FWORD PTR [ecx+0x346ea5b2]
  407e87:	lods   eax,DWORD PTR ds:[esi]
  407e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e89:	sbb    eax,esp
  407e8b:	mov    edi,0x10db2871
  407e90:	cmp    ecx,DWORD PTR [esi-0x6d]
  407e93:	pop    ebp
  407e94:	dec    edx
  407e95:	mov    bh,0x5b
  407e97:	push   ebp
  407e98:	push   ebp
  407e99:	jecxz  0x407e81
  407e9b:	stc    
  407e9c:	ret    
  407e9d:	pop    ss
  407e9e:	loopne 0x407ef6
  407ea0:	aad    0xfd
  407ea2:	in     al,0xc8
  407ea4:	retf   0x3d53
  407ea7:	mov    al,ds:0xdc093bb
  407eac:	pop    ds
  407ead:	cld    
  407eae:	lea    esi,[eax-0x26]
  407eb1:	mov    ds:0x3e139dd,eax
  407eb6:	imul   BYTE PTR [eax-0x3b]
  407eb9:	cld    
  407eba:	ins    DWORD PTR es:[edi],dx
  407ebb:	arpl   WORD PTR [ebx],dx
  407ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ebe:	xor    edi,DWORD PTR [edi]
  407ec0:	push   ds
  407ec1:	cmc    
  407ec2:	jge    0x407eb5
  407ec4:	add    BYTE PTR [esi-0x37],bh
  407ec7:	adc    eax,0xf38ff8a9
  407ecc:	cmp    dl,ch
  407ece:	or     BYTE PTR [edi+0x73],bl
  407ed1:	jbe    0x407e58
  407ed3:	mov    esi,?
  407ed5:	sub    eax,0x87e7537c
  407eda:	nop
  407edb:	call   0xf3ecc54a
  407ee0:	jae    0x407ed0
  407ee2:	push   cs
  407ee3:	mov    al,0x80
  407ee5:	xchg   edx,eax
  407ee6:	mov    edx,0x99da0445
  407eeb:	daa    
  407eec:	jbe    0x407ea7
  407eee:	jmp    0xf68db657
  407ef3:	nop
  407ef4:	(bad)  
  407ef5:	addr16 es dec edx
  407ef8:	and    dh,al
  407efa:	loop   0x407ec1
  407efc:	mov    bl,0x29
  407efe:	test   BYTE PTR [esi+0x66],ch
  407f01:	loopne 0x407f5b
  407f03:	out    0x1c,al
  407f05:	daa    
  407f06:	sahf   
  407f07:	stc    
  407f08:	add    BYTE PTR [edi],bh
  407f0a:	pop    es
  407f0b:	push   esp
  407f0c:	mov    esp,0x8738b0ce
  407f11:	inc    esp
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	sbb    DWORD PTR ds:0x1ca578ce,esi
  407f19:	add    esi,DWORD PTR [ecx+eax*8+0x7254e26]
  407f20:	mov    dh,0x7d
  407f22:	inc    esp
  407f23:	add    eax,0xb15b9922
  407f28:	pop    ss
  407f29:	mov    DWORD PTR [ebp-0x30],0xa0d6fa11
  407f30:	or     ah,al
  407f32:	arpl   ax,bp
  407f34:	xchg   esp,eax
  407f35:	mov    bl,0xd
  407f37:	cmp    dl,BYTE PTR ds:0x535b6cb
  407f3d:	std    
  407f3e:	and    cl,BYTE PTR [ecx-0x36]
  407f41:	or     al,0x49
  407f43:	ficom  WORD PTR [ebp+0x116cac43]
  407f49:	xor    eax,0x82febe62
  407f4e:	sub    eax,0xa69989bc
  407f53:	xchg   edi,eax
  407f54:	loope  0x407f4d
  407f56:	and    esp,DWORD PTR [esi]
  407f58:	inc    ebp
  407f59:	push   ecx
  407f5a:	(bad)  
  407f5b:	pop    edx
  407f5c:	inc    ebp
  407f5d:	or     dl,BYTE PTR [eax-0x30ae2f62]
  407f63:	mov    eax,0xa7472770
  407f68:	test   al,0x0
  407f6a:	fs inc esp
  407f6c:	mov    eax,0x888cb722
  407f71:	adc    eax,0x27c3239
  407f76:	mov    WORD PTR [edi+esi*8-0x7efc1175],gs
  407f7d:	push   edx
  407f7e:	mov    ch,0x67
  407f80:	jae    0x407f4f
  407f82:	dec    edi
  407f83:	sbb    BYTE PTR [esi],dl
  407f85:	aad    0xa7
  407f87:	lods   al,BYTE PTR ds:[esi]
  407f88:	(bad)  
  407f89:	enter  0xc319,0x8b
  407f8d:	aam    0x7
  407f8f:	aad    0x47
  407f91:	xor    DWORD PTR [eax-0x793628a1],esi
  407f97:	mov    edx,0x52a97475
  407f9c:	call   0x2c965c90
  407fa1:	sub    al,0x4e
  407fa3:	std    
  407fa4:	add    cl,cl
  407fa6:	jbe    0x408026
  407fa8:	adc    esp,0x4c2ffe8b
  407fae:	xor    eax,0x2ab5f89d
  407fb3:	dec    ch
  407fb5:	hlt    
  407fb6:	adc    BYTE PTR es:[edi-0x41],ch
  407fba:	push   edi
  407fbb:	mov    eax,ds:0xc460f681
  407fc0:	xchg   edx,ebp
  407fc2:	cmp    eax,0x19633f32
  407fc7:	push   ss
  407fc8:	je     0x407ff1
  407fca:	loope  0x408025
  407fcc:	int    0xc2
  407fce:	push   ebx
  407fcf:	add    cl,BYTE PTR [edi]
  407fd1:	xor    dl,ah
  407fd3:	sbb    edi,DWORD PTR [edx+ecx*1]
  407fd6:	in     eax,dx
  407fd7:	inc    ecx
  407fd8:	call   0xd4438b81
  407fdd:	and    al,0x22
  407fdf:	jo     0x407f7b
  407fe1:	mov    esi,DWORD PTR [ecx-0x1b]
  407fe4:	cmp    al,0x25
  407fe6:	mov    ecx,0x34878c77
  407feb:	mov    es,WORD PTR [edx]
  407fed:	xor    al,0xae
  407fef:	jne    0x40805d
  407ff1:	xchg   ebp,eax
  407ff2:	pop    eax
  407ff3:	jle    0x407f97
  407ff5:	into   
  407ff6:	xor    dh,BYTE PTR [ebp+0x106f405f]
  407ffc:	jp     0x408040
  407ffe:	mov    al,ds:0xcdef1259
  408003:	enter  0x1468,0xb6
  408007:	sbb    BYTE PTR [ebp-0x21],ch
  40800a:	mov    ebx,0x7ef5dce5
  40800f:	mov    dl,0xff
  408011:	inc    esi
  408012:	jb     0x407f99
  408014:	loope  0x408013
  408016:	pop    eax
  408017:	xchg   edi,eax
  408018:	push   0xfffffffe
  40801a:	fxch   st(5)
  40801c:	mov    al,ds:0xe1551381
  408021:	lods   al,BYTE PTR ds:[esi]
  408022:	outs   dx,DWORD PTR ds:[esi]
  408023:	adc    bl,dl
  408025:	in     eax,dx
  408026:	mov    eax,0x258b19a5
  40802b:	jne    0x408040
  40802d:	xor    bl,BYTE PTR ds:0x7d291beb
  408033:	adc    BYTE PTR [ebx+ebx*1],bl
  408036:	bound  ebp,QWORD PTR [ecx-0x5]
  408039:	out    0x99,al
  40803b:	aam    0x3e
  40803d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40803e:	jbe    0x408057
  408040:	repnz or DWORD PTR [esi+0x6c],0x3ccab47f
  408048:	inc    esi
  408049:	out    0x16,al
  40804b:	push   edx
  40804c:	imul   DWORD PTR [ebx]
  40804e:	add    DWORD PTR [ebx+0x3c72759d],ecx
  408054:	xlat   BYTE PTR ds:[ebx]
  408055:	push   0xffffff82
  408057:	sbb    DWORD PTR [ebx-0x1e],edx
  40805a:	inc    edi
  40805b:	fwait
  40805c:	and    edi,ebx
  40805e:	lea    edx,[esi+0x10]
  408061:	(bad)  
  408062:	(bad)  
  408063:	sbb    al,0x55
  408065:	popa   
  408066:	daa    
  408067:	jp     0x408061
  408069:	ja     0x4080b6
  40806b:	mov    ds:0x19b26a2f,eax
  408070:	or     DWORD PTR [eax-0x1fd272dd],ebx
  408076:	out    dx,al
  408077:	cmp    al,0x7d
  408079:	arpl   WORD PTR [ebx+0x4186f3d5],bx
  40807f:	lods   al,BYTE PTR ds:[esi]
  408080:	(bad)  
  408081:	js     0x40802e
  408083:	jns    0x408048
  408085:	mov    BYTE PTR [ebp+0x7],bh
  408088:	inc    BYTE PTR [edi+eiz*2+0x7d]
  40808c:	sar    BYTE PTR [edi],1
  40808e:	or     eax,0xc2479cce
  408093:	ficomp WORD PTR [eax+0x32]
  408096:	cld    
  408097:	jo     0x40808e
  408099:	inc    ecx
  40809a:	pushf  
  40809b:	add    eax,0x1d6c7ea4
  4080a0:	jmp    DWORD PTR ds:0x4a27cb00
  4080a6:	mov    bh,BYTE PTR [di-0x27]
  4080aa:	fcom   QWORD PTR [ecx]
  4080ac:	sar    eax,0xc6
  4080af:	in     al,dx
  4080b0:	add    BYTE PTR [esp+esi*4],0x5a
  4080b4:	lds    eax,FWORD PTR [eax+0x3e4ff096]
  4080ba:	ja     0x4080da
  4080bc:	and    DWORD PTR [ebp+0x780c13f5],0xffffff96
  4080c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080c4:	aad    0x27
  4080c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c7:	pop    ds
  4080c8:	loop   0x40808f
  4080ca:	js     0x40807e
  4080cc:	inc    ebx
  4080cd:	in     al,0x19
  4080cf:	cmp    DWORD PTR [edx+0x68011546],ecx
  4080d5:	dec    edi
  4080d6:	push   ss
  4080d7:	cdq    
  4080d8:	push   0xffffffb8
  4080da:	mov    ch,0xa6
  4080dc:	mov    DWORD PTR [edx+0x75],ecx
  4080df:	push   eax
  4080e0:	cwde   
  4080e1:	imul   edi,edi,0xffffff9c
  4080e4:	mov    dl,0x96
  4080e6:	xchg   edi,eax
  4080e7:	jge    0x408125
  4080e9:	push   esi
  4080ea:	push   eax
  4080eb:	push   edx
  4080ec:	push   0xeee16e3
  4080f1:	sub    eax,0x4dae58b0
  4080f6:	xchg   edi,eax
  4080f7:	push   edi
  4080f8:	in     eax,dx
  4080f9:	jp     0x40810c
  4080fb:	pop    esi
  4080fc:	js     0x408103
  4080fe:	dec    eax
  4080ff:	repz jmp 0x417e7531
  408105:	ja     0x40816f
  408107:	xor    eax,0x1bd099f2
  40810c:	pushf  
  40810d:	loopne 0x4080b8
  40810f:	mov    ds:0x4f325ff9,eax
  408114:	out    0x56,al
  408116:	lds    esp,FWORD PTR [edi+0x45]
  408119:	(bad)  
  40811a:	stc    
  40811b:	jnp    0x4080f1
  40811d:	mov    ds:0x51fc2d0c,al
  408122:	fdiv   DWORD PTR [edi]
  408124:	adc    BYTE PTR [edi-0x51252cd6],dl
  40812a:	jb     0x4081ab
  40812c:	pushf  
  40812d:	add    eax,ebp
  40812f:	mov    ebx,0xdf5ecec9
  408134:	xor    cl,cl
  408136:	or     al,0x5f
  408138:	fnstsw WORD PTR [edx-0x3a15fb69]
  40813e:	lea    ebx,[ecx+0x1e]
  408141:	inc    ecx
  408142:	(bad)  
  408143:	adc    BYTE PTR [esp+edx*2+0x75],al
  408147:	jp     0x4081c3
  408149:	push   ebp
  40814a:	shl    DWORD PTR [edi+0x53c9a517],cl
  408150:	sub    al,0x85
  408152:	div    dh
  408154:	int    0x93
  408156:	and    dl,bl
  408158:	sub    eax,DWORD PTR [edx]
  40815a:	ficomp DWORD PTR [edi+0x6980389c]
  408160:	sti    
  408161:	xchg   esi,eax
  408162:	sar    DWORD PTR [esi-0x75],cl
  408165:	mov    esi,0x974bf89
  40816a:	movups xmm2,XMMWORD PTR ds:0xe1c74220
  408171:	aas    
  408172:	push   edi
  408173:	mov    ah,BYTE PTR [ebp+0x7f]
  408176:	mov    cl,bh
  408178:	mov    edi,0xa743ffa3
  40817d:	add    esi,DWORD PTR [ecx]
  40817f:	pop    edx
  408180:	scas   al,BYTE PTR es:[edi]
  408181:	shl    BYTE PTR [eax],cl
  408183:	jg     0x408201
  408185:	mov    ?,edi
  408187:	jl     0x408189
  408189:	clc    
  40818a:	imul   edi,ecx,0x68291569
  408190:	adc    eax,0x39ed9bef
  408195:	jg     0x4081d9
  408197:	adc    bl,BYTE PTR [eax]
  408199:	jl     0x4081a8
  40819b:	lahf   
  40819c:	retf   
  40819d:	cdq    
  40819e:	push   ss
  40819f:	sbb    eax,ecx
  4081a1:	pop    esi
  4081a2:	push   ebp
  4081a3:	xor    ecx,DWORD PTR [esi+eiz*4-0xa3b6414]
  4081aa:	js     0x4081ec
  4081ac:	popf   
  4081ad:	adc    DWORD PTR [eax-0x7e5ac0f],0x48
  4081b4:	adc    al,0xc7
  4081b6:	push   esp
  4081b7:	into   
  4081b8:	jnp    0x40817b
  4081ba:	(bad)  
  4081bb:	mov    ah,BYTE PTR [esi]
  4081bd:	xchg   ebx,eax
  4081be:	pop    edi
  4081bf:	jne    0x408202
  4081c1:	mov    esi,0xd0ea026f
  4081c6:	mov    edx,0x990fa956
  4081cb:	jmp    0xd148:0xf28ad3f8
  4081d2:	mov    bh,0x57
  4081d4:	or     al,0xd6
  4081d6:	sbb    al,0x4c
  4081d8:	xchg   edi,eax
  4081d9:	fs ins BYTE PTR es:[edi],dx
  4081db:	sbb    eax,0x120ffee3
  4081e0:	pusha  
  4081e1:	into   
  4081e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081e3:	int    0x27
  4081e5:	aaa    
  4081e6:	add    al,0x7f
  4081e8:	mov    eax,DWORD PTR [esi-0x11]
  4081eb:	jl     0x40817f
  4081ed:	jo     0x40826a
  4081ef:	or     DWORD PTR [ebp+0x5c],ecx
  4081f2:	mov    esp,0x2c44d694
  4081f7:	scas   eax,DWORD PTR es:[edi]
  4081f8:	(bad)  
  4081f9:	xchg   ebp,eax
  4081fa:	mov    al,ds:0x34df3cd1
  4081ff:	xchg   esp,eax
  408200:	loopne 0x40818e
  408202:	dec    esp
  408203:	cwde   
  408204:	rol    DWORD PTR [bp+di+0x4c9d],cl
  408209:	xlat   BYTE PTR ds:[ebx]
  40820a:	sub    BYTE PTR [ebx+0x8c0c903],ah
  408210:	add    edx,edi
  408212:	mov    ch,0x61
  408214:	push   ecx
  408215:	sar    DWORD PTR [esi+0x433f2fd7],cl
  40821b:	pop    ecx
  40821c:	or     al,0xaf
  40821e:	jmp    0x36bf:0x53cc72d7
  408225:	xor    BYTE PTR [ecx],ch
  408227:	call   0x67f0:0x49727c25
  40822e:	adc    DWORD PTR [ebx+eiz*2-0x6f],ebp
  408232:	mov    dl,0x98
  408234:	repnz lods al,BYTE PTR ds:[esi]
  408236:	outs   dx,BYTE PTR ds:[esi]
  408237:	sub    eax,0x54eb7b23
  40823c:	inc    esi
  40823d:	jno    0x40829f
  40823f:	jg     0x4081d4
  408241:	test   DWORD PTR [ebx-0x4],esp
  408244:	or     BYTE PTR [edx],ah
  408246:	jecxz  0x408234
  408248:	adc    BYTE PTR [edi+0x4b],0xe0
  40824c:	pop    ebp
  40824d:	mov    edx,0x4b6f3bfc
  408252:	in     eax,0x23
  408254:	jl     0x4082a3
  408256:	mov    esp,0xab579ee0
  40825b:	cmp    BYTE PTR [edi-0x74],0x48
  40825f:	cwde   
  408260:	ins    BYTE PTR es:[edi],dx
  408261:	ins    DWORD PTR es:[edi],dx
  408262:	xchg   esp,eax
  408263:	mov    edx,0x6f5fae86
  408268:	push   edi
  408269:	lahf   
  40826a:	icebp  
  40826b:	cwde   
  40826c:	sub    eax,0x24585f66
  408271:	pop    eax
  408272:	pusha  
  408273:	or     eax,0x3e3ae5ea
  408278:	leave  
  408279:	mov    al,ds:0xc0f69a1a
  40827e:	pop    es
  40827f:	fisubr DWORD PTR [ebx-0x64695082]
  408285:	stos   DWORD PTR es:[edi],eax
  408286:	ins    DWORD PTR es:[edi],dx
  408287:	jp     0x40824e
  408289:	mov    fs:0xabbe0b19,eax
  40828f:	xchg   esp,eax
  408290:	lods   al,BYTE PTR ds:[esi]
  408291:	ds in  al,0x9f
  408294:	lods   eax,DWORD PTR ds:[esi]
  408295:	aad    0x5
  408297:	jg     0x40827e
  408299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829a:	in     al,dx
  40829b:	mov    BYTE PTR [edi+0x3e],dl
  40829e:	cwde   
  40829f:	cmp    ebx,edx
  4082a1:	das    
  4082a2:	and    ebp,ebx
  4082a4:	pop    es
  4082a5:	xor    DWORD PTR [edi],esp
  4082a7:	popf   
  4082a8:	mov    edx,edi
  4082aa:	adc    BYTE PTR [eax+0x35132171],0x86
  4082b1:	es mov cl,0x7d
  4082b4:	adc    DWORD PTR [ebp+0x3738372e],0xffffffe3
  4082bb:	outs   dx,BYTE PTR ds:[esi]
  4082bc:	test   al,0x55
  4082be:	mov    eax,ds:0x3304b11
  4082c3:	adc    BYTE PTR [ebx-0xf239a9b],0x9
  4082ca:	gs test esp,0xa0ea48aa
  4082d1:	jp     0x40830b
  4082d3:	push   edi
  4082d4:	mov    ah,0x47
  4082d6:	leave  
  4082d7:	adc    al,0x9
  4082d9:	mov    dh,0xa8
  4082db:	nop
  4082dc:	jbe    0x408301
  4082de:	loop   0x4082f7
  4082e0:	push   esp
  4082e1:	mov    ds:0x785cbbf7,eax
  4082e6:	push   edx
  4082e7:	mov    edx,0x526d638b
  4082ec:	pop    edi
  4082ed:	inc    ebx
  4082ee:	mov    dl,bh
  4082f0:	cwde   
  4082f1:	and    ah,BYTE PTR es:[edx]
  4082f4:	mov    ebp,0x77ffa7e2
  4082f9:	inc    edi
  4082fa:	stos   BYTE PTR es:[edi],al
  4082fb:	sbb    esi,DWORD PTR [ecx+0x28c46e53]
  408301:	or     esp,esi
  408303:	idiv   ebx
  408305:	inc    esp
  408306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408307:	xchg   DWORD PTR [ebx+0x7716f7],edi
  40830d:	ret    
  40830e:	fcomp  st(5)
  408310:	stos   DWORD PTR es:[edi],eax
  408311:	push   edx
  408312:	fscale 
  408314:	dec    ebp
  408315:	mov    esp,0xac1d0bd5
  40831a:	fstp   DWORD PTR [eax+0x5b311ded]
  408320:	mov    ds:0x60980c9d,al
  408325:	and    BYTE PTR [ebx+0x7ca91502],dl
  40832b:	test   DWORD PTR [ebp-0xb76a9b0],ebx
  408331:	fstp   TBYTE PTR [ebx+0x4c928d2b]
  408337:	xor    DWORD PTR [eax-0x70119b5a],0x51d3f00b
  408341:	mov    dl,0xc3
  408343:	pop    esp
  408344:	and    eax,DWORD PTR [edx-0x2ada9265]
  40834a:	jmp    0x408394
  40834c:	push   es
  40834d:	mov    esi,0x44da3778
  408352:	cmp    BYTE PTR [eax+0x56],bl
  408355:	call   0xd6e:0x5162a147
  40835c:	stc    
  40835d:	repnz stos BYTE PTR es:[edi],al
  40835f:	test   cl,0x6b
  408362:	out    dx,eax
  408363:	ds and dh,dh
  408366:	jl     0x4083c8
  408368:	lock loopne 0x4083db
  40836b:	jl     0x408398
  40836d:	sbb    eax,0x74974809
  408372:	mov    esi,0xe0787f3d
  408377:	adc    ecx,DWORD PTR [edi-0x7]
  40837a:	in     eax,0xf2
  40837c:	or     al,0xb
  40837e:	pop    eax
  40837f:	jge    0x40838a
  408381:	ds ret 0xbc9b
  408385:	lea    edx,[esi+ebp*4-0x616eb7a5]
  40838c:	mov    ds:0x92e8095a,eax
  408391:	pop    esi
  408392:	pusha  
  408393:	lods   eax,DWORD PTR ds:[esi]
  408394:	pop    DWORD PTR [ecx+eax*2]
  408397:	mov    ch,0x44
  408399:	retf   
  40839a:	dec    esp
  40839b:	xchg   edx,eax
  40839c:	cmp    al,0xee
  40839e:	mov    esp,0xcb0590cb
  4083a3:	iret   
  4083a4:	and    al,0x36
  4083a6:	mov    edi,0x2e202bb7
  4083ab:	xor    BYTE PTR [ebp-0x77],0xc7
  4083af:	and    bl,dh
  4083b1:	or     bl,BYTE PTR [edi]
  4083b3:	in     al,0xd7
  4083b5:	jnp    0x4083e7
  4083b7:	loop   0x408425
  4083b9:	mov    dl,0x3d
  4083bb:	adc    DWORD PTR [ecx-0x20fc43f9],ebp
  4083c1:	aam    0x4d
  4083c3:	nop
  4083c4:	inc    ecx
  4083c5:	adc    eax,0x2e8391bc
  4083ca:	aas    
  4083cb:	mov    eax,ds:0xc4c02eba
  4083d0:	cld    
  4083d1:	push   0x46fc2c39
  4083d6:	hlt    
  4083d7:	ds retf 
  4083d9:	inc    dx
  4083db:	mov    al,cs:0x31271a14
  4083e1:	mov    ecx,0xc322c2b3
  4083e6:	(bad)  
  4083e7:	call   0x7fbe:0x10e701b2
  4083ee:	int3   
  4083ef:	inc    edx
  4083f0:	mov    bl,0x1b
  4083f2:	pop    edi
  4083f3:	es stos BYTE PTR es:[edi],al
  4083f5:	mov    cl,0x93
  4083f7:	pushf  
  4083f8:	dec    eax
  4083f9:	call   0xc6928c21
  4083fe:	ficom  WORD PTR [eax-0x62dd9ba]
  408404:	sub    bl,BYTE PTR [eax+esi*1]
  408407:	fldenv [edx+ebx*1]
  40840a:	xlat   BYTE PTR ds:[ebx]
  40840b:	pop    esi
  40840c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840d:	std    
  40840e:	lea    ebx,[edx+0x63ecc8bb]
  408414:	jmp    0x408455
  408416:	or     eax,0xf24d9db8
  40841b:	mov    WORD PTR [ebp+0x6b],ds
  40841e:	cmp    BYTE PTR [edx+ecx*1-0x2a9b6da6],cl
  408425:	and    al,0x50
  408427:	mov    ebx,0x18bca19b
  40842c:	jmp    0x2025:0xfa0eba49
  408433:	or     BYTE PTR [esi],cl
  408435:	arpl   WORD PTR [ebp+0x692e93f9],bp
  40843b:	inc    ebx
  40843c:	adc    eax,0x6f748027
  408441:	mov    cl,0x9d
  408443:	xchg   BYTE PTR [edi-0x17251096],al
  408449:	loope  0x40843b
  40844b:	enter  0x301b,0xcc
  40844f:	idiv   BYTE PTR [edx+0x79e3d6e1]
  408455:	and    eax,0xb8040007
  40845a:	push   ss
  40845b:	xor    al,0xd7
  40845d:	cdq    
  40845e:	(bad)  [ebx-0x33aaa06f]
  408464:	jl     0x408434
  408466:	jecxz  0x40848b
  408468:	xor    BYTE PTR ds:0x8fbd5f36,cl
  40846e:	mov    ecx,0x38fee6d7
  408473:	pusha  
  408474:	enter  0xf9f0,0x7a
  408478:	imul   ecx,esp,0xbbf6aaf0
  40847e:	(bad)  
  40847f:	retf   
  408480:	sti    
  408481:	imul   esi,esp,0x1a
  408484:	scas   eax,DWORD PTR es:[edi]
  408485:	sbb    eax,ecx
  408487:	aam    0x60
  408489:	scas   eax,DWORD PTR es:[edi]
  40848a:	and    eax,0xa1083758
  40848f:	enter  0xece2,0xdd
  408493:	mov    edi,0x7abae58d
  408498:	jae    0x4084a0
  40849a:	jne    0x4084fd
  40849c:	jge    0x4084ec
  40849e:	mov    ebp,0x11361846
  4084a3:	mov    al,0x46
  4084a5:	das    
  4084a6:	mov    eax,0xad2e557a
  4084ab:	div    esp
  4084ad:	icebp  
  4084ae:	in     eax,dx
  4084af:	inc    ebp
  4084b0:	aaa    
  4084b1:	add    DWORD PTR [esi+ebx*8+0x2a],edx
  4084b5:	addr16 add dl,dl
  4084b8:	retf   
  4084b9:	clc    
  4084ba:	repz mov ch,0xde
  4084bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084be:	mov    ds:0x395f53a9,al
  4084c3:	(bad)  
  4084c4:	dec    esp
  4084c5:	cdq    
  4084c6:	adc    edx,ebp
  4084c8:	mov    eax,ds:0xe833a85b
  4084cd:	and    BYTE PTR [edi+0x5e1360c1],cl
  4084d3:	cmp    DWORD PTR [edx+eiz*2+0x14],0xfffffffc
  4084d8:	aam    0xb4
  4084da:	dec    eax
  4084db:	inc    edi
  4084dc:	adc    eax,0x8f9cfdd6
  4084e1:	cwde   
  4084e2:	adc    ebx,DWORD PTR ds:[edi]
  4084e5:	and    eax,0x8080d841
  4084ea:	mov    al,0x55
  4084ec:	sbb    al,BYTE PTR [edi]
  4084ee:	fild   WORD PTR [ebp+0x73a86a80]
  4084f4:	fstp   DWORD PTR [esi+0x714b5223]
  4084fa:	push   ds
  4084fb:	lea    ebx,[ebx-0x79]
  4084fe:	cmp    edx,DWORD PTR [edx+0x19]
  408501:	into   
  408502:	adc    BYTE PTR [edi-0x1afd6ae5],0xf4
  408509:	sar    ch,0xf1
  40850c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40850d:	add    al,0xb0
  40850f:	es jmp 0x4084de
  408512:	cmp    BYTE PTR [esi],cl
  408514:	fwait
  408515:	push   ebx
  408516:	xor    DWORD PTR [eax],esp
  408518:	rcl    dh,1
  40851a:	stos   BYTE PTR es:[edi],al
  40851b:	xor    esp,0xffffffcd
  40851e:	loopne 0x4084a8
  408520:	bound  esp,QWORD PTR [ebx+0x75]
  408523:	(bad)  
  408524:	fnop   
  408526:	test   DWORD PTR [eax-0x28],0xe491be10
  40852d:	mov    esp,0x3f154134
  408532:	mov    ch,BYTE PTR [ecx+0x67426e29]
  408538:	fsub   DWORD PTR [edi-0x72]
  40853b:	pop    esp
  40853c:	sub    esi,edx
  40853e:	(bad)  
  40853f:	mov    al,0x78
  408541:	mov    edx,0x7ec377a1
  408546:	cmp    ecx,DWORD PTR [edx]
  408548:	mov    esi,0xae0e7f79
  40854d:	shl    esp,1
  40854f:	out    0x94,al
  408551:	(bad)  
  408552:	mov    esp,0x4b817960
  408557:	popa   
  408558:	sub    al,BYTE PTR [ebx+0x53]
  40855b:	jmp    0xd20d:0xfcacb238
  408562:	mov    esp,0x59395482
  408567:	repz push eax
  408569:	adc    ebx,esp
  40856b:	shl    cl,cl
  40856d:	jle    0x408550
  40856f:	xchg   esi,eax
  408570:	add    ebx,DWORD PTR [ecx-0x3e]
  408573:	push   es
  408574:	stos   BYTE PTR es:[edi],al
  408575:	add    BYTE PTR [edi],dh
  408577:	jmp    0x4085bc
  408579:	mov    DWORD PTR [edi+eax*2+0x7],esp
  40857d:	jge    0x40855c
  40857f:	xchg   edx,eax
  408580:	sub    ebx,esi
  408582:	mov    ebp,0x86af05e0
  408587:	imul   ebx,DWORD PTR [esi-0x215ca760],0xffffffc7
  40858e:	fimul  DWORD PTR [ecx+0x1e6c952a]
  408594:	push   ebx
  408595:	aam    0xfd
  408597:	sbb    bl,BYTE PTR [edx+0x50ccbefa]
  40859d:	mov    dl,0xe4
  40859f:	cli    
  4085a0:	pop    ebp
  4085a1:	stc    
  4085a2:	sbb    al,0xf0
  4085a4:	xchg   edx,eax
  4085a5:	mov    esp,DWORD PTR [edi-0x25]
  4085a8:	add    al,0x3c
  4085aa:	sbb    eax,0x33a747b4
  4085af:	sub    DWORD PTR [edi+ebp*1],0xffffffe1
  4085b3:	add    eax,0xb21b4d27
  4085b8:	jg     0x4085a7
  4085ba:	stc    
  4085bb:	out    0x80,eax
  4085bd:	stos   BYTE PTR es:[edi],al
  4085be:	outs   dx,DWORD PTR ds:[esi]
  4085bf:	shr    BYTE PTR [ecx],0xbe
  4085c2:	pop    ecx
  4085c3:	shl    BYTE PTR [ebp-0x42],0x3b
  4085c7:	jge    0x4085ca
  4085c9:	pop    esi
  4085ca:	mov    DWORD PTR [edi],edx
  4085cc:	cwde   
  4085cd:	(bad)  
  4085d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d1:	retf   
  4085d2:	and    al,0x6b
  4085d4:	in     eax,dx
  4085d5:	mov    ds:0x2b16bdfa,eax
  4085da:	stos   BYTE PTR es:[edi],al
  4085db:	ins    DWORD PTR es:[edi],dx
  4085dc:	cmp    BYTE PTR [eax+0xb],bl
  4085df:	add    DWORD PTR [esi+0x34],ebx
  4085e2:	sahf   
  4085e3:	dec    eax
  4085e4:	(bad)  
  4085e5:	fcomi  st,st(7)
  4085e7:	mov    gs,esp
  4085e9:	xor    DWORD PTR [ebx],ebx
  4085eb:	ins    DWORD PTR es:[edi],dx
  4085ec:	jae    0x40859e
  4085ee:	and    cl,BYTE PTR [eax-0x2ca1f54b]
  4085f4:	daa    
  4085f5:	test   BYTE PTR [ebx],ah
  4085f7:	cmp    DWORD PTR [edi-0x1445975a],edx
  4085fd:	data16 cmc 
  4085ff:	stos   DWORD PTR es:[edi],eax
  408600:	or     eax,0xeddf1869
  408605:	loopne 0x4085fa
  408607:	dec    esp
  408608:	jno    0x408605
  40860a:	lock jecxz 0x4085c1
  40860d:	or     BYTE PTR [esi],cl
  40860f:	bound  edi,QWORD PTR [edx+0x25911fdd]
  408615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408616:	not    DWORD PTR [edi]
  408618:	pop    ds
  408619:	xor    ecx,edx
  40861b:	sub    dh,BYTE PTR [ebx+ebx*8]
  40861e:	jo     0x408660
  408620:	and    bh,BYTE PTR [eax]
  408622:	add    DWORD PTR [edx+0x4a],ebx
  408625:	imul   DWORD PTR [ebp-0x5310b833]
  40862b:	cmp    eax,ecx
  40862d:	ror    BYTE PTR [ebx],0x0
  408630:	pop    esp
  408631:	in     al,dx
  408632:	mov    DWORD PTR [edx+0x2c],ebx
  408635:	xchg   esp,eax
  408636:	in     eax,dx
  408637:	fdiv   QWORD PTR [ecx]
  408639:	xor    ebx,DWORD PTR [eax+edi*8]
  40863c:	add    eax,0x520aa3e9
  408641:	fcom   DWORD PTR [esi+0x29]
  408644:	sbb    bl,BYTE PTR [ebx+0x53]
  408647:	fild   WORD PTR [ecx-0x79e76990]
  40864d:	outs   dx,DWORD PTR ds:[esi]
  40864e:	ret    
  40864f:	repz aad 0xe
  408652:	mov    bl,0xd7
  408654:	mov    ch,BYTE PTR [esi-0x1dc1f742]
  40865a:	ficom  WORD PTR [ecx-0x54]
  40865d:	inc    edi
  40865e:	mov    esi,0xb908e65f
  408663:	and    ch,BYTE PTR [edi]
  408665:	add    al,0x8d
  408667:	outs   dx,BYTE PTR ds:[esi]
  408668:	(bad)  
  408669:	jb     0x408636
  40866b:	jne    0x408650
  40866d:	(bad)  
  40866e:	lods   eax,DWORD PTR ds:[esi]
  40866f:	std    
  408670:	fst    DWORD PTR [ebp-0x4b]
  408673:	jmp    0x40866c
  408675:	imul   eax,eax,0x40e16b26
  40867b:	shl    BYTE PTR gs:[edx+0x7540a696],1
  408682:	inc    esi
  408683:	lds    edx,FWORD PTR [ebp+0x4dbdcec6]
  408689:	dec    edi
  40868a:	pop    ds
  40868b:	mov    ebp,esp
  40868d:	jns    0x408645
  40868f:	push   edi
  408690:	xor    edx,ebp
  408692:	ret    
  408693:	call   0x79e8:0xc8ab458
  40869a:	shl    bl,1
  40869c:	rcr    dh,cl
  40869e:	push   0x55a9fd4c
  4086a3:	mov    ecx,0x8ee3533a
  4086a8:	jecxz  0x408723
  4086aa:	mov    ah,0x67
  4086ac:	cld    
  4086ad:	or     DWORD PTR [eax-0x52bb3b1e],edx
  4086b3:	push   esi
  4086b4:	push   ecx
  4086b5:	cmp    eax,eax
  4086b7:	rcl    DWORD PTR [esi-0x5],cl
  4086ba:	mov    edi,ebp
  4086bc:	jnp    0x4086df
  4086be:	and    BYTE PTR [eax-0x7f],ah
  4086c1:	mov    WORD PTR [edx],fs
  4086c3:	cli    
  4086c4:	fwait
  4086c5:	inc    edx
  4086c6:	pop    esp
  4086c7:	jl     0x4086d2
  4086c9:	lods   eax,DWORD PTR ds:[esi]
  4086ca:	mov    ds,WORD PTR [ebp+0x1cce3b8]
  4086d0:	aad    0x54
  4086d2:	push   esp
  4086d3:	(bad)  
  4086d4:	stc    
  4086d5:	out    0xc6,eax
  4086d7:	or     dl,BYTE PTR [edx+0x3]
  4086da:	or     al,0xdb
  4086dc:	sub    eax,0xa736f2f2
  4086e1:	jge    0x408701
  4086e3:	mov    cl,0x75
  4086e5:	mov    ah,0xe2
  4086e7:	stc    
  4086e8:	adc    DWORD PTR [ecx],esi
  4086ea:	loopne 0x408677
  4086ec:	xchg   esp,eax
  4086ed:	loopne 0x40872d
  4086ef:	sbb    DWORD PTR [ecx-0x59e1353d],edi
  4086f5:	cmc    
  4086f6:	outs   dx,DWORD PTR ds:[esi]
  4086f7:	mov    eax,0x56256a64
  4086fc:	into   
  4086fd:	loope  0x4086ca
  4086ff:	cwde   
  408700:	xor    eax,0x80db4937
  408705:	mov    eax,0x620fe0c1
  40870a:	inc    eax
  40870b:	jle    0x40872d
  40870d:	in     eax,dx
  40870e:	and    esp,DWORD PTR [ebx-0x11]
  408711:	or     eax,0x90aaa736
  408716:	mov    bh,dl
  408718:	fisttp DWORD PTR [ebx]
  40871a:	add    al,0xa6
  40871c:	add    DWORD PTR [esi-0x1840c93a],esp
  408722:	outs   dx,BYTE PTR ds:[esi]
  408723:	retf   
  408724:	test   ebx,0x1394d7b6
  40872a:	mov    eax,ebx
  40872c:	loop   0x40878f
  40872e:	jmp    0x58d224d8
  408733:	mul    BYTE PTR [eax+0xbed0c5a]
  408739:	inc    edi
  40873a:	pop    edi
  40873b:	dec    ebx
  40873c:	sub    esp,0x808c30ff
  408742:	data16 add bl,dh
  408745:	push   es
  408746:	inc    edi
  408747:	cdq    
  408748:	pop    ebp
  408749:	or     cl,BYTE PTR [esi]
  40874b:	jge    0x4086ec
  40874d:	xchg   ebp,eax
  40874e:	aad    0x94
  408750:	sub    ch,BYTE PTR [edx+0x69a30f4a]
  408756:	pop    esi
  408757:	fsqrt  
  408759:	test   eax,0xb41dda52
  40875e:	add    DWORD PTR [ebp+0x258ccc1],esp
  408764:	mov    DWORD PTR [ecx+esi*8],ebx
  408767:	pushf  
  408768:	sub    al,0x14
  40876a:	mov    bh,0xc6
  40876c:	mov    DWORD PTR [esi+0x47],edi
  40876f:	mov    BYTE PTR [edi+0x2f480fd2],al
  408775:	lods   al,BYTE PTR ds:[esi]
  408776:	mov    ds:0x6578a755,eax
  40877b:	jbe    0x408707
  40877d:	add    bl,ah
  40877f:	lds    esp,FWORD PTR [edx+0x4c3f45a9]
  408785:	fdivr  DWORD PTR [edx+ecx*8+0xc86b089]
  40878c:	stos   DWORD PTR es:[edi],eax
  40878d:	mov    bl,0xd
  40878f:	push   0x55898718
  408794:	aad    0xab
  408796:	inc    ecx
  408797:	call   0x5a4b2e92
  40879c:	push   ecx
  40879d:	fnstcw WORD PTR [ebp+ebp*1-0x4c]
  4087a1:	push   ebp
  4087a2:	fs adc al,0x12
  4087a5:	fwait
  4087a6:	pusha  
  4087a7:	test   DWORD PTR [eax-0x39ef34f5],edx
  4087ad:	outs   dx,DWORD PTR ds:[esi]
  4087ae:	leave  
  4087af:	(bad)  
  4087b0:	daa    
  4087b1:	inc    esi
  4087b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087b3:	cmp    edi,DWORD PTR [ebx]
  4087b5:	sub    edx,DWORD PTR ds:[eax-0x3d30631a]
  4087bc:	push   esi
  4087bd:	jnp    0x4087a8
  4087bf:	fistp  QWORD PTR [ebx]
  4087c1:	jp     0x408815
  4087c3:	fbld   TBYTE PTR [ebx-0x77b4c5db]
  4087c9:	loop   0x4087db
  4087cb:	sub    ecx,DWORD PTR [edx+0x5f]
  4087ce:	add    al,0x2f
  4087d0:	push   esp
  4087d1:	hlt    
  4087d2:	pop    es
  4087d3:	cmc    
  4087d4:	cmc    
  4087d5:	xlat   BYTE PTR ds:[ebx]
  4087d6:	dec    esi
  4087d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d8:	pushf  
  4087d9:	clc    
  4087da:	push   ebp
  4087db:	mov    ebx,0xd24f6603
  4087e0:	gs cmp bh,0x15
  4087e4:	into   
  4087e5:	aas    
  4087e6:	mov    dh,0xaf
  4087e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087e9:	fstp   TBYTE PTR [esi+0x17]
  4087ec:	mov    dl,dl
  4087ee:	jge    0x408853
  4087f0:	in     al,dx
  4087f1:	jge    0x40878d
  4087f3:	loopne 0x4087dd
  4087f5:	test   eax,0xa47cf8fb
  4087fa:	add    edi,DWORD PTR [esi]
  4087fc:	setp   BYTE PTR [edx+0x58be9822]
  408803:	inc    ebp
  408804:	mov    eax,0x4cd998c6
  408809:	sbb    BYTE PTR [ecx+ecx*4],ah
  40880c:	pop    ebx
  40880d:	jae    0x4087ab
  40880f:	cmc    
  408810:	out    dx,eax
  408811:	push   ebx
  408812:	or     bl,dl
  408814:	fld    TBYTE PTR [edi-0x13]
  408817:	mov    edx,0x2796e229
  40881c:	(bad)  
  40881d:	sub    ecx,DWORD PTR [bx-0x44]
  408821:	or     BYTE PTR [ebp-0x38687c47],0x7f
  408828:	mov    dh,0xac
  40882a:	xchg   BYTE PTR [eax],ah
  40882c:	mov    bl,0x80
  40882e:	out    0x16,eax
  408830:	fst    DWORD PTR cs:[esi+esi*2+0x6c]
  408835:	mov    ebx,DWORD PTR [edi]
  408837:	jl     0x408851
  408839:	cmp    eax,0x14d1d4a3
  40883e:	fstp   st(7)
  408840:	fnstsw WORD PTR [edx+0x41]
  408843:	pusha  
  408844:	popf   
  408845:	mov    bl,0xe5
  408847:	dec    esi
  408848:	ret    
  408849:	mov    bh,BYTE PTR [ecx]
  40884b:	scas   al,BYTE PTR es:[edi]
  40884c:	and    ecx,esi
  40884e:	rol    DWORD PTR [eax+0x506802b1],0x3f
  408855:	imul   edi,DWORD PTR [ebx+ecx*2-0x2],0x6fef9bb1
  40885d:	mov    edi,0xa4ad2cbf
  408863:	push   eax
  408864:	enter  0x276d,0x43
  408868:	imul   ecx,esi,0x95599664
  40886e:	sti    
  40886f:	pop    ss
  408870:	hlt    
  408871:	push   eax
  408872:	dec    ecx
  408873:	lock (bad) 
  408875:	cmp    ah,BYTE PTR [esi+0x59]
  408878:	or     dh,ch
  40887a:	ror    BYTE PTR [eax],0xd8
  40887d:	push   ebx
  40887e:	pop    es
  40887f:	hlt    
  408880:	pop    ebx
  408881:	jne    0x408862
  408883:	jne    0x408878
  408885:	mov    edx,0xf9c5ea93
  40888a:	inc    ecx
  40888b:	mov    cl,0xda
  40888d:	jmp    0x408898
  40888f:	test   eax,0x511bccc6
  408894:	icebp  
  408895:	cmp    al,0x1d
  408897:	fild   DWORD PTR [ebp+0x5fef9e4f]
  40889d:	dec    ecx
  40889e:	mov    dh,0x5f
  4088a0:	inc    ebp
  4088a1:	sub    al,0xa0
  4088a3:	in     al,dx
  4088a4:	dec    eax
  4088a5:	repnz imul ecx,DWORD PTR [eax+0x306462cb],0x43b307fa
  4088b0:	daa    
  4088b1:	mov    ecx,0xe54f40c5
  4088b6:	dec    esi
  4088b7:	ret    
  4088b8:	sub    al,0x5f
  4088ba:	mov    esp,0x999aa161
  4088bf:	push   ds
  4088c0:	(bad)  
  4088c1:	jecxz  0x40885f
  4088c3:	or     al,0xe2
  4088c5:	shl    BYTE PTR [ebx],cl
  4088c7:	ret    0x2544
  4088ca:	pop    esp
  4088cb:	xor    eax,DWORD PTR [esi+0x34]
  4088ce:	bound  eax,QWORD PTR ds:0x3a953a69
  4088d4:	xchg   esi,eax
  4088d5:	repz daa 
  4088d7:	mov    ah,0x3c
  4088d9:	test   cl,0xdb
  4088dc:	or     al,0x8e
  4088de:	fmul   QWORD PTR [eax]
  4088e0:	push   edi
  4088e1:	dec    eax
  4088e2:	push   ebx
  4088e3:	inc    DWORD PTR [edi+0x11b11aec]
  4088e9:	int    0x47
  4088eb:	(bad)  [eax-0x61]
  4088ee:	in     al,0x86
  4088f0:	sub    bl,BYTE PTR [ebp-0x37d2ebe7]
  4088f6:	jbe    0x4088da
  4088f8:	lahf   
  4088f9:	fild   QWORD PTR [edx+0xdb4f191]
  4088ff:	hlt    
  408900:	arpl   WORD PTR [ebp+0x3],si
  408903:	jp     0x4088f9
  408905:	push   0xfffffff2
  408907:	inc    esi
  408908:	push   ecx
  408909:	mov    esp,0x9ed4f06f
  40890e:	adc    al,0xee
  408910:	mov    ebx,0xdde55a81
  408915:	gs push cs
  408917:	shl    BYTE PTR [edx],1
  408919:	cwde   
  40891a:	lods   al,BYTE PTR ds:[esi]
  40891b:	repz adc ecx,DWORD PTR [esi]
  40891e:	mov    esp,0xd0c77b17
  408923:	inc    ebp
  408924:	sub    ebp,DWORD PTR [ecx]
  408926:	retf   0x3a91
  408929:	sub    BYTE PTR [edx-0x73],cl
  40892c:	(bad)  
  40892d:	push   ss
  40892e:	lods   eax,DWORD PTR ds:[esi]
  40892f:	iret   
  408930:	mov    ecx,0x4d6c8629
  408935:	adc    al,0xd8
  408937:	pop    ecx
  408938:	adc    DWORD PTR [ecx-0x45],0xffffff9b
  40893c:	jns    0x40897a
  40893e:	jmp    0x7d47:0xa3703837
  408945:	xchg   ebp,eax
  408946:	dec    esp
  408947:	out    dx,eax
  408948:	icebp  
  408949:	hlt    
  40894a:	(bad)  
  40894b:	shl    cl,0x14
  40894e:	mov    ebx,DWORD PTR [ebx+0x59c8d523]
  408954:	es je  0x40891b
  408957:	test   eax,0xd95a3fd5
  40895c:	sbb    bl,BYTE PTR [edi-0x7a1ece6e]
  408962:	sub    dh,ah
  408964:	rcl    DWORD PTR [edi-0x1e],1
  408967:	pusha  
  408968:	sbb    eax,0xcfd638d3
  40896d:	sbb    bh,BYTE PTR [ebx+0xb]
  408970:	jmp    0x408967
  408972:	rcl    ecx,1
  408974:	ss pop eax
  408976:	out    dx,eax
  408977:	push   0xdb6a0650
  40897c:	pushf  
  40897d:	rcl    BYTE PTR [eax+0xd6cd698],0x1e
  408984:	mov    eax,0xfa708f97
  408989:	into   
  40898a:	mov    esi,0x7ee94622
  40898f:	ror    BYTE PTR [edi],0xd
  408992:	je     0x408a02
  408994:	stc    
  408995:	ja     0x4089ce
  408997:	mov    cl,0xaa
  408999:	mov    al,0xce
  40899b:	sbb    eax,0x5a3d947b
  4089a0:	fwait
  4089a1:	lea    esp,[edi+0x7019766e]
  4089a7:	scas   eax,DWORD PTR es:[edi]
  4089a8:	dec    ecx
  4089a9:	sbb    ebx,DWORD PTR [edi-0x46]
  4089ac:	xchg   esi,eax
  4089ad:	xchg   ebx,eax
  4089ae:	shl    BYTE PTR [edx*2-0x61cd7a],1
  4089b5:	add    al,0x66
  4089b7:	sahf   
  4089b8:	mov    al,ds:0xc76b0c9f
  4089bd:	pop    ss
  4089be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089bf:	ins    DWORD PTR es:[edi],dx
  4089c0:	rcr    DWORD PTR [ebx],0x95
  4089c3:	or     al,0xa4
  4089c5:	mov    eax,0xd069cf67
  4089ca:	call   0x7f74:0xfe841637
  4089d1:	push   edx
  4089d2:	jb     0x408a4e
  4089d4:	iret   
  4089d5:	inc    ebp
  4089d6:	pop    ds
  4089d7:	jmp    0x47e35d21
  4089dc:	lea    edi,[ebx-0x47]
  4089df:	and    eax,0x30e68c82
  4089e4:	imul   esi,DWORD PTR [ebx-0x5ec10f6c],0xf3a007b9
  4089ee:	test   cl,al
  4089f0:	(bad)  
  4089f1:	outs   dx,BYTE PTR ds:[esi]
  4089f2:	ss (bad) 
  4089f4:	sti    
  4089f5:	and    ebx,DWORD PTR [edx+0x2cb6a3cf]
  4089fb:	mov    BYTE PTR [ebx+0x3d],dl
  4089fe:	inc    edx
  4089ff:	data16 jae 0x408a63
  408a02:	and    ch,bh
  408a04:	aam    0xf1
  408a06:	es cmp ch,cl
  408a09:	aad    0x7f
  408a0b:	sbb    DWORD PTR [ebp-0x30e1b7aa],edx
  408a11:	add    BYTE PTR [eax+0x6f],0x57
  408a15:	out    dx,eax
  408a16:	push   eax
  408a17:	test   al,0xce
  408a19:	data16 fisub DWORD PTR [edi-0x5b]
  408a1d:	push   ecx
  408a1e:	gs mov cl,0x6a
  408a21:	stos   DWORD PTR es:[edi],eax
  408a22:	xchg   edi,eax
  408a23:	out    dx,al
  408a24:	in     eax,dx
  408a25:	pop    esi
  408a26:	jne    0x408a80
  408a28:	cmp    dl,BYTE PTR [esi+0x5c]
  408a2b:	sub    al,0x14
  408a2d:	push   ss
  408a2e:	mov    ds:0x8e04394e,al
  408a33:	std    
  408a34:	cmp    eax,0x7db3a639
  408a39:	jl     0x4089cc
  408a3b:	push   edx
  408a3c:	mov    dh,BYTE PTR [ebx]
  408a3e:	stc    
  408a3f:	inc    eax
  408a40:	cwde   
  408a41:	out    dx,al
  408a42:	pop    ebx
  408a43:	and    al,0x23
  408a45:	repz mov ecx,0x41afecdd
  408a4b:	pop    edx
  408a4c:	sub    DWORD PTR [eax+ecx*4+0x54686299],edx
  408a53:	and    dh,BYTE PTR [edx]
  408a55:	je     0x4089f3
  408a57:	and    BYTE PTR [edi+edx*1],al
  408a5a:	mov    ds,WORD PTR ds:0x60141c49
  408a60:	cmp    esp,DWORD PTR [ebx-0x3968a0f2]
  408a66:	loopne 0x408ad2
  408a68:	gs push es
  408a6a:	adc    al,0x80
  408a6c:	adc    eax,0xc273fe6f
  408a71:	push   edx
  408a72:	sub    BYTE PTR [esi+0x34],cl
  408a75:	in     al,dx
  408a76:	jno    0x408acd
  408a78:	mov    edi,0x466fb025
  408a7d:	push   cs
  408a7e:	or     ebx,DWORD PTR [edi-0x2637792b]
  408a84:	not    BYTE PTR [ecx-0xb2eedd1]
  408a8a:	mov    ecx,DWORD PTR ds:[edx+0x7f]
  408a8e:	mov    cl,0xda
  408a90:	imul   eax,esi,0x93d45b06
  408a96:	ret    0xe7a
  408a99:	leave  
  408a9a:	dec    esi
  408a9b:	cld    
  408a9c:	jns    0x408a34
  408a9e:	sahf   
  408a9f:	jle    0x408a4f
  408aa1:	loopne 0x408aca
  408aa3:	adc    ebx,DWORD PTR [ecx+0x28]
  408aa6:	mov    al,0x74
  408aa8:	xor    BYTE PTR [ebx-0x421c8f47],cl
  408aae:	sbb    BYTE PTR [di],bl
  408ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab2:	or     al,0x6c
  408ab4:	add    ebx,DWORD PTR ds:0x21ad5e26
  408aba:	xor    eax,0xdb1da5cf
  408abf:	xlat   BYTE PTR ds:[ebx]
  408ac0:	or     al,bh
  408ac2:	data16 or BYTE PTR [edx],dh
  408ac5:	jbe    0x408ab2
  408ac7:	and    eax,0xd76d1bdc
  408acc:	adc    bh,al
  408ace:	hlt    
  408acf:	or     DWORD PTR [esi],0x8aa7288e
  408ad5:	adc    al,0xc
  408ad7:	dec    ebp
  408ad8:	icebp  
  408ad9:	jne    0x408acf
  408adb:	jmp    0x408afd
  408add:	dec    edi
  408ade:	add    al,0xa2
  408ae0:	cli    
  408ae1:	mov    ds:0xca9686ad,eax
  408ae6:	sub    esi,0xd3899597
  408aec:	cwde   
  408aed:	jbe    0x408af1
  408aef:	pop    es
  408af0:	adc    ecx,edx
  408af2:	or     eax,0xc9fb4eaf
  408af7:	pop    eax
  408af8:	cdq    
  408af9:	pop    ds
  408afa:	add    DWORD PTR ds:0x90519b67,ecx
  408b00:	and    edx,DWORD PTR [edx]
  408b02:	sahf   
  408b03:	mov    al,ds:0xcf52082c
  408b08:	int3   
  408b09:	in     eax,0x6d
  408b0b:	cmp    al,0xf0
  408b0d:	into   
  408b0e:	in     al,dx
  408b0f:	frstor [eax-0x6fda2b00]
  408b15:	hlt    
  408b16:	rcl    DWORD PTR [ebx+0x6f405cbc],0x3a
  408b1d:	(bad)  
  408b1e:	in     al,0x7
  408b20:	rol    DWORD PTR [edx],cl
  408b22:	inc    esp
  408b23:	enter  0x2e1f,0x13
  408b27:	mov    eax,0xe50c3b58
  408b2c:	adc    edx,esp
  408b2e:	xor    esi,edx
  408b30:	sbb    ecx,0xffffffb2
  408b33:	jno    0x408ae4
  408b35:	hlt    
  408b36:	(bad)  
  408b37:	(bad)  
  408b38:	fsubp  st(7),st
  408b3a:	xor    esi,DWORD PTR [edi+0x2a6f1900]
  408b40:	jbe    0x408ba5
  408b42:	adc    ecx,edi
  408b44:	push   esi
  408b45:	nop
  408b46:	xchg   ebx,eax
  408b47:	mov    cs,WORD PTR [esi+0x7df33b86]
  408b4d:	hlt    
  408b4e:	sub    esp,DWORD PTR [esi]
  408b50:	aaa    
  408b51:	pop    ebx
  408b52:	sahf   
  408b53:	retf   0xb88f
  408b56:	and    eax,0xa4ce3ecb
  408b5b:	push   ebx
  408b5c:	dec    edx
  408b5d:	loop   0x408bc1
  408b5f:	cdq    
  408b60:	outs   dx,BYTE PTR ds:[esi]
  408b61:	sbb    DWORD PTR [esi+0x2de9f910],0xffffffdf
  408b68:	in     eax,0x10
  408b6a:	cli    
  408b6b:	out    dx,eax
  408b6c:	int    0xa6
  408b6e:	dec    eax
  408b6f:	mov    dl,0xf
  408b71:	add    eax,0xcc486700
  408b76:	addr16 push 0x4f0e5d60
  408b7c:	ret    
  408b7d:	clc    
  408b7e:	jne    0x408b29
  408b80:	and    ch,BYTE PTR [ebp+0x3a]
  408b83:	push   ds
  408b84:	and    BYTE PTR [edi],ch
  408b86:	pop    ds
  408b87:	in     eax,dx
  408b88:	dec    esi
  408b89:	adc    edx,edi
  408b8b:	inc    ebp
  408b8c:	dec    esi
  408b8d:	enter  0x2c00,0xd4
  408b91:	mov    ah,0x42
  408b93:	pop    esp
  408b94:	sti    
  408b95:	icebp  
  408b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b97:	mov    edi,0x64e358db
  408b9c:	cmp    BYTE PTR [eax],bl
  408b9e:	mov    ds,WORD PTR [edx]
  408ba0:	test   al,0x6a
  408ba2:	fiadd  DWORD PTR [ebp+0x52757ff4]
  408ba8:	and    eax,0x8ee5f3b4
  408bad:	pop    ss
  408bae:	push   es
  408baf:	inc    esi
  408bb0:	mov    eax,0x269d1ec7
  408bb5:	jmp    0x8b3e:0x3b1003ea
  408bbc:	jne    0x408c0d
  408bbe:	xchg   esi,eax
  408bbf:	push   esi
  408bc0:	push   ebx
  408bc1:	scas   al,BYTE PTR es:[edi]
  408bc2:	clc    
  408bc3:	fisubr DWORD PTR [esp+edx*8-0x4b]
  408bc7:	cwde   
  408bc8:	loopne 0x408c0a
  408bca:	adc    BYTE PTR [eax+0x31],cl
  408bcd:	sbb    BYTE PTR ds:0x4449cb33,0xac
  408bd4:	inc    esp
  408bd5:	jbe    0x408c34
  408bd7:	stos   DWORD PTR es:[edi],eax
  408bd8:	cld    
  408bd9:	mov    ds:0x627bbd83,al
  408bde:	das    
  408bdf:	imul   edi,DWORD PTR [ebx-0x3f],0x5b01813a
  408be6:	(bad)
  408beb:	pusha  
  408bec:	add    dh,BYTE PTR [eax]
  408bee:	mov    ch,BYTE PTR [eax]
  408bf0:	sbb    al,0x29
  408bf2:	leave  
  408bf3:	pop    esp
  408bf4:	or     ah,bl
  408bf6:	(bad)  
  408bf7:	fmul   st,st(6)
  408bf9:	sbb    ebp,DWORD PTR [ecx]
  408bfb:	es arpl ax,bx
  408bfe:	mov    ah,0xde
  408c00:	pop    es
  408c01:	dec    edx
  408c02:	(bad)  
  408c03:	stos   BYTE PTR es:[edi],al
  408c04:	mov    al,0x3d
  408c06:	icebp  
  408c07:	push   esp
  408c08:	int    0x42
  408c0a:	out    0x15,al
  408c0c:	outs   dx,BYTE PTR ds:[esi]
  408c0d:	sbb    al,0x8a
  408c0f:	in     eax,dx
  408c10:	mov    ecx,0x72c811e3
  408c15:	repz aam 0x50
  408c18:	sub    DWORD PTR cs:[eax+0x35],edi
  408c1c:	daa    
  408c1d:	push   ss
  408c1e:	cdq    
  408c1f:	mov    al,ds:0x86a9f773
  408c24:	mov    ds:0x6c50227b,eax
  408c29:	push   eax
  408c2a:	lods   al,BYTE PTR ds:[esi]
  408c2b:	ja     0x408bdf
  408c2d:	and    DWORD PTR [edi-0x24d91a5],esp
  408c33:	sahf   
  408c34:	inc    edx
  408c35:	mov    ecx,0x17c86f54
  408c3a:	retf   0xeae0
  408c3d:	(bad)  
  408c3f:	sub    DWORD PTR [eax-0x22],ebx
  408c42:	jmp    0x16f551f0
  408c47:	push   0xffffff8a
  408c49:	sub    cl,BYTE PTR [edx-0x48]
  408c4c:	xchg   DWORD PTR [esi-0x64],ecx
  408c4f:	push   es
  408c50:	mov    ebp,0x5eff4d97
  408c55:	(bad)  
  408c56:	push   es
  408c57:	sub    edx,DWORD PTR [esi+0x3e]
  408c5a:	lods   al,BYTE PTR cs:[esi]
  408c5c:	aaa    
  408c5d:	dec    ecx
  408c5e:	stc    
  408c5f:	or     al,BYTE PTR [ecx+0x7ecce826]
  408c65:	push   ss
  408c66:	jmp    0xdcc18bed
  408c6b:	(bad)  
  408c6c:	xor    al,0x66
  408c6e:	mov    ds:0xa53b9dec,al
  408c73:	dec    DWORD PTR [esi-0x6a2141b3]
  408c79:	pop    ebp
  408c7a:	imul   edx,DWORD PTR [edi+edx*8+0x127b7fe3],0x393bf1a7
  408c85:	mov    edi,0xbce6f53a
  408c8a:	mov    al,0xfa
  408c8c:	loop   0x408c20
  408c8e:	mov    ebx,0xcff33c1b
  408c93:	jno    0x408c42
  408c95:	xor    dl,BYTE PTR [edi]
  408c97:	add    dh,BYTE PTR [ebp-0x1ee79831]
  408c9d:	shr    DWORD PTR [ebp-0x67afb39f],1
  408ca3:	imul   esp,DWORD PTR ds:0xac294054,0xffffff9c
  408caa:	mov    eax,ds:0x4d15cc81
  408caf:	popa   
  408cb0:	and    dl,BYTE PTR [ecx+0x5bbe1246]
  408cb6:	in     eax,0x3a
  408cb8:	mov    eax,0x9c99c8f2
  408cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cbe:	test   eax,0xea737e6
  408cc3:	shl    BYTE PTR [esi-0x5f714b6a],1
  408cc9:	dec    eax
  408cca:	dec    edx
  408ccb:	ins    BYTE PTR es:[edi],dx
  408ccc:	xchg   esp,eax
  408ccd:	xor    BYTE PTR [ebp+0x71],0x8
  408cd1:	std    
  408cd2:	(bad)  [esi+0x4e]
  408cd5:	pop    esi
  408cd6:	and    cl,BYTE PTR [edx]
  408cd8:	mov    cl,0x2e
  408cda:	cmp    al,0x38
  408cdc:	dec    ecx
  408cdd:	ret    0x5dfa
  408ce0:	cmp    eax,0x237ae2fc
  408ce5:	adc    edi,DWORD PTR [ecx]
  408ce7:	cdq    
  408ce8:	into   
  408ce9:	inc    ebx
  408cea:	je     0x408cd5
  408cec:	mov    WORD PTR [eax-0x211d3774],fs
  408cf2:	xor    ah,BYTE PTR [eax]
  408cf4:	ffreep st(6)
  408cf6:	or     ah,ah
  408cf8:	stos   DWORD PTR es:[edi],eax
  408cf9:	mov    ds:0x464880ba,eax
  408cfe:	xor    ebx,eax
  408d00:	clc    
  408d01:	inc    esi
  408d02:	icebp  
  408d03:	sbb    BYTE PTR [ecx-0x4b2f30a3],bl
  408d09:	sub    eax,0x82ac483b
  408d0e:	add    esp,DWORD PTR [ebp-0x66b899e]
  408d14:	ror    BYTE PTR [ecx-0x47],1
  408d17:	enter  0xd564,0x19
  408d1b:	daa    
  408d1c:	and    BYTE PTR [edi+ebp*2-0x1cf0c5e1],ah
  408d23:	(bad)  
  408d24:	leave  
  408d25:	jo     0x408cf4
  408d27:	fsub   DWORD PTR [ebx+0x3b]
  408d2a:	mov    dh,0xaa
  408d2c:	loopne 0x408daa
  408d2e:	sbb    eax,esi
  408d30:	adc    BYTE PTR [eax-0x2cf3aa0f],dl
  408d36:	mov    dh,0xa6
  408d38:	jnp    0x408d3e
  408d3a:	lock sbb al,0x69
  408d3d:	jle    0x408cef
  408d3f:	and    ebp,0x59
  408d42:	xor    bl,BYTE PTR [esi-0x71]
  408d45:	jmp    0x408db7
  408d47:	mov    cl,0xe6
  408d49:	push   esp
  408d4a:	jne    0x408dcb
  408d4c:	pop    eax
  408d4d:	push   edx
  408d4e:	sti    
  408d4f:	(bad)  
  408d50:	in     al,dx
  408d51:	into   
  408d52:	and    al,0x53
  408d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d55:	scas   al,BYTE PTR es:[edi]
  408d56:	jmp    0x408d69
  408d58:	add    eax,0xb76e78b7
  408d5d:	push   esp
  408d5e:	outs   dx,DWORD PTR ds:[esi]
  408d5f:	pop    ds
  408d60:	adc    eax,0x28c30af3
  408d65:	mov    edi,0x2f6362b8
  408d6a:	pop    ebp
  408d6b:	mov    edi,0xb02e3bdd
  408d70:	cmp    ch,dl
  408d72:	div    BYTE PTR [edx+0x6587357a]
  408d78:	pop    eax
  408d79:	push   edx
  408d7a:	arpl   cx,bx
  408d7c:	mov    al,0x78
  408d7e:	mov    ds:0x149292af,al
  408d83:	adc    eax,0xa824eea7
  408d88:	xchg   edi,eax
  408d89:	push   esp
  408d8a:	pop    ds
  408d8b:	mov    ebx,0xc1f80d94
  408d90:	xchg   ecx,eax
  408d91:	pop    ebx
  408d92:	hlt    
  408d93:	(bad)  
  408d94:	or     eax,0x923914d1
  408d99:	mov    ah,0x5e
  408d9b:	xchg   DWORD PTR [eax+0x675b2334],ebx
  408da1:	add    eax,0x89d91d94
  408da6:	mov    edi,0x97f8efe
  408dab:	stos   BYTE PTR es:[edi],al
  408dac:	xor    esp,DWORD PTR [esi]
  408dae:	int    0x7
  408db0:	rcr    BYTE PTR [ecx+0x22],cl
  408db3:	test   DWORD PTR [esi],edx
  408db5:	mov    edi,0xc08745dc
  408dba:	push   ss
  408dbb:	lods   eax,DWORD PTR ds:[esi]
  408dbc:	or     BYTE PTR [ebx-0x1b],al
  408dbf:	jmp    0x14ee9774
  408dc4:	(bad)  
  408dc5:	test   ch,dl
  408dc7:	or     BYTE PTR [ecx],0x1f
  408dca:	jbe    0x408dcc
  408dcc:	fs retf 0x9c7a
  408dd0:	inc    ecx
  408dd1:	adc    al,0x78
  408dd3:	test   eax,0x39164c31
  408dd8:	mov    WORD PTR [ecx],ds
  408dda:	mov    dh,ch
  408ddc:	test   DWORD PTR [eax],ebp
  408dde:	sub    eax,0xce5c2cb5
  408de3:	lahf   
  408de4:	int3   
  408de5:	pop    ecx
  408de6:	and    ebp,ebp
  408de8:	outs   dx,BYTE PTR ds:[esi]
  408de9:	dec    edx
  408dea:	cwde   
  408deb:	jns    0x408e6b
  408ded:	mov    ds:0x2ca864eb,al
  408df2:	adc    edi,DWORD PTR [ecx]
  408df4:	jns    0x408de0
  408df6:	call   0x52cabaff
  408dfb:	and    eax,0xd4f5f449
  408e00:	(bad)  
  408e01:	loope  0x408deb
  408e03:	jne    0x408d9b
  408e05:	cmc    
  408e06:	mov    ch,0x41
  408e08:	and    DWORD PTR [esi],ebx
  408e0a:	mov    esi,0xd85eea58
  408e0f:	daa    
  408e10:	add    al,0x9c
  408e12:	repz mov eax,ds:0x7257bc57
  408e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e19:	push   ss
  408e1a:	pop    ebp
  408e1b:	mov    edx,0xa0e0b1bc
  408e20:	mov    edx,0x5859292
  408e25:	or     dh,BYTE PTR [esi+ebx*2-0x6cf85e4d]
  408e2c:	push   eax
  408e2d:	icebp  
  408e2e:	or     ebx,DWORD PTR [eax+0x3d]
  408e31:	test   ebx,0x86d956a5
  408e37:	in     al,0xbd
  408e39:	fsubr  DWORD PTR [ebp+edi*8-0x2d]
  408e3d:	sti    
  408e3e:	xchg   ebp,eax
  408e3f:	jae    0x408ea3
  408e41:	stc    
  408e42:	mov    esp,0xf32eaafc
  408e47:	fstp   TBYTE PTR [edx]
  408e49:	add    BYTE PTR [esi],al
  408e4b:	jns    0x408e38
  408e4d:	imul   BYTE PTR [ecx-0x5d]
  408e50:	xchg   esi,eax
  408e51:	cli    
  408e52:	jae    0x408e3c
  408e54:	inc    esp
  408e55:	ja     0x408e9c
  408e57:	sub    al,BYTE PTR [ecx+0x37588a14]
  408e5d:	mov    ecx,0x203b20ce
  408e62:	or     al,0x8e
  408e64:	daa    
  408e65:	xchg   ecx,eax
  408e66:	jecxz  0x408ea8
  408e68:	cwde   
  408e69:	mov    eax,gs
  408e6b:	jae    0x408e81
  408e6d:	test   ah,dh
  408e6f:	xor    al,0x85
  408e71:	xchg   DWORD PTR [eax-0x7],edi
  408e74:	jnp    0x408ea8
  408e76:	stos   BYTE PTR es:[edi],al
  408e77:	or     al,0xee
  408e79:	cld    
  408e7a:	add    DWORD PTR [eax+esi*1+0x6e],esi
  408e7e:	xchg   BYTE PTR [esi],dh
  408e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e81:	sub    ebp,edi
  408e83:	inc    ebp
  408e84:	in     eax,0x5b
  408e86:	cwde   
  408e87:	mov    ds:0x93eacb0f,al
  408e8c:	add    dh,dl
  408e8e:	mov    bh,0xdb
  408e90:	inc    ebp
  408e91:	dec    esp
  408e92:	js     0x408e4e
  408e94:	je     0x408ec7
  408e96:	sub    DWORD PTR [eax],ebp
  408e98:	jns    0x408e1a
  408e9a:	mov    ebx,0x15d24f5f
  408e9f:	imul   esi,edi,0xffffffb8
  408ea2:	rcl    BYTE PTR ds:0xcfc8094,1
  408ea8:	cld    
  408ea9:	imul   BYTE PTR [ebx+0x2d]
  408eac:	test   BYTE PTR [eax-0x1b],cl
  408eaf:	or     eax,0x2bc64117
  408eb4:	fisttp QWORD PTR [esi-0x54]
  408eb7:	pop    eax
  408eb8:	xor    al,0xc2
  408eba:	push   edi
  408ebb:	pusha  
  408ebc:	in     al,0x82
  408ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ebf:	push   edx
  408ec0:	push   esp
  408ec1:	sub    al,bl
  408ec3:	sbb    ecx,ecx
  408ec5:	dec    edi
  408ec6:	popf   
  408ec7:	dec    edx
  408ec8:	dec    esp
  408ec9:	mov    bl,0x54
  408ecb:	aad    0x2d
  408ecd:	je     0x408f29
  408ecf:	add    DWORD PTR [esi],ebp
  408ed1:	or     edi,esp
  408ed3:	addr16 mov edi,0xc37bd527
  408ed9:	add    eax,0xf67410ca
  408ede:	xchg   ebx,eax
  408edf:	test   DWORD PTR [ebx+ecx*4],0xbe58cdb0
  408ee6:	or     al,0xc3
  408ee8:	jecxz  0x408eca
  408eea:	repz mov edx,0x5057729
  408ef0:	push   0xfffffff5
  408ef2:	cdq    
  408ef3:	(bad)  
  408ef5:	js     0x408f3c
  408ef7:	xchg   esp,eax
  408ef8:	pushf  
  408ef9:	and    BYTE PTR [di],0x23
  408efd:	repnz icebp 
  408eff:	fld    DWORD PTR [eax+0xe]
  408f02:	adc    DWORD PTR [eax],esi
  408f04:	mov    al,ch
  408f06:	xor    DWORD PTR [esi],0x66
  408f09:	mov    ecx,0xfc53eb67
  408f0e:	cmp    eax,0x9867bf2a
  408f13:	xor    eax,0xdcee6614
  408f18:	stos   DWORD PTR es:[edi],eax
  408f19:	fcom   QWORD PTR [edi+ecx*8+0x33]
  408f1d:	inc    esp
  408f1e:	jb     0x408ee5
  408f20:	pop    ebx
  408f21:	inc    edi
  408f22:	stos   DWORD PTR es:[edi],eax
  408f23:	je     0x408f82
  408f25:	pop    ebp
  408f26:	mov    edx,0x2b5331d2
  408f2b:	inc    edi
  408f2c:	xchg   ecx,eax
  408f2d:	lds    esp,FWORD PTR ds:0x19860dc7
  408f33:	push   ebp
  408f34:	test   BYTE PTR [esi-0x16],0x30
  408f38:	push   ebx
  408f39:	adc    BYTE PTR [eax],al
  408f3b:	mov    BYTE PTR [esi-0x5c0074e],cl
  408f41:	call   0x8490:0xc34fb342
  408f48:	imul   edi,DWORD PTR [ebx-0x64],0x2c91d81f
  408f4f:	int3   
  408f50:	pushf  
  408f51:	sbb    eax,0x603c0c75
  408f56:	std    
  408f57:	sbb    ebp,DWORD PTR ds:0x1c497409
  408f5d:	stc    
  408f5e:	push   esp
  408f5f:	dec    edx
  408f60:	inc    ebx
  408f61:	test   al,0xb6
  408f63:	mov    bh,0x7d
  408f65:	(bad)  
  408f66:	mov    dl,0x8a
  408f68:	mov    ds:0xea1cec51,al
  408f6d:	push   edx
  408f6e:	mov    eax,ds:0x96614b64
  408f73:	adc    al,0x51
  408f75:	shl    DWORD PTR [edi-0x6e],1
  408f78:	sub    ebx,ebp
  408f7a:	adc    ch,BYTE PTR [eax]
  408f7c:	sub    eax,0x9c4f8a12
  408f81:	hlt    
  408f82:	push   cs
  408f83:	test   BYTE PTR [edx+0x40e2fe86],ch
  408f89:	icebp  
  408f8a:	or     eax,0xaf4047ba
  408f8f:	fs pop edx
  408f91:	fmul   DWORD PTR [esi]
  408f93:	cmc    
  408f94:	sub    eax,0x21031a2e
  408f99:	jecxz  0x408f20
  408f9b:	add    esp,ebp
  408f9d:	xor    edx,DWORD PTR [ebx]
  408f9f:	xor    al,0xe0
  408fa1:	xchg   ecx,eax
  408fa2:	mov    ebx,0x89071a36
  408fa7:	cdq    
  408fa8:	jge    0x408f7e
  408faa:	add    bl,BYTE PTR [ebx-0x73a167e7]
  408fb0:	sbb    DWORD PTR [edi-0x75c1b8c8],0xffffffad
  408fb7:	daa    
  408fb8:	test   eax,0x3c40baed
  408fbd:	pop    esp
  408fbe:	arpl   WORD PTR [ecx-0xc6da511],dx
  408fc4:	xlat   BYTE PTR ds:[ebx]
  408fc5:	mov    ah,0xf9
  408fc7:	mov    eax,DWORD PTR [edx+0x4d62bae]
  408fcd:	aaa    
  408fce:	add    BYTE PTR [ebp+0x79],ch
  408fd1:	les    esi,FWORD PTR [esi-0x16]
  408fd4:	in     eax,0xf2
  408fd6:	cmp    eax,0x13d734e6
  408fdb:	dec    edi
  408fdc:	or     ebp,ebp
  408fde:	lds    ebx,FWORD PTR [eax-0x20]
  408fe1:	aam    0xb9
  408fe3:	mov    bl,0x42
  408fe5:	inc    edx
  408fe6:	jl     0x40903d
  408fe8:	sub    al,0x43
  408fea:	inc    edx
  408feb:	lahf   
  408fec:	pop    ebx
  408fed:	cdq    
  408fee:	aad    0xf6
  408ff0:	xchg   DWORD PTR [edi+edx*8+0x6e],edi
  408ff4:	les    esi,FWORD PTR [ebx]
  408ff6:	cmp    eax,DWORD PTR [esi]
  408ff8:	test   edx,0xb8dbcad3
  408ffe:	fstp   DWORD PTR [edi+0x2a]
  409001:	pushf  
  409002:	(bad)  
  409003:	cmp    al,0x7
  409005:	(bad)
  409009:	bound  esp,QWORD PTR [edi-0x3fc88c36]
  40900f:	inc    ecx
  409010:	jle    0x40905c
  409012:	jp     0x409081
  409014:	les    edi,FWORD PTR [ecx+edi*1-0x5e]
  409018:	jnp    0x408fed
  40901a:	pop    ds
  40901b:	popf   
  40901c:	xchg   edi,eax
  40901d:	cdq    
  40901e:	fstp   st(7)
  409020:	lods   eax,DWORD PTR ds:[esi]
  409021:	sbb    ebp,DWORD PTR [ebp+0x4e]
  409024:	cmovbe eax,eax
  409027:	ja     0x409021
  409029:	jecxz  0x409094
  40902b:	mov    DWORD PTR [edi+0x5c],ebp
  40902e:	mov    ?,edx
  409030:	ret    0x8e17
  409033:	or     bl,BYTE PTR [ecx+0x2f]
  409036:	jae    0x40907d
  409038:	push   0xfffffff3
  40903a:	jmp    0x4898:0x1939e2b1
  409041:	les    esi,FWORD PTR [edi-0x54986ba3]
  409047:	push   ds
  409048:	jmp    0x6c7aabf3
  40904d:	inc    esp
  40904e:	nop
  40904f:	lahf   
  409050:	out    dx,al
  409051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409052:	out    dx,eax
  409053:	xchg   ecx,eax
  409054:	shl    ah,0x3b
  409057:	cmp    DWORD PTR [eax-0x28dd0de4],esp
  40905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40905e:	add    bh,BYTE PTR [edi-0x4afd0953]
  409064:	mov    ch,0x99
  409066:	or     ebp,DWORD PTR [ecx-0x2]
  409069:	or     ah,al
  40906b:	inc    edx
  40906c:	jnp    0x408ff0
  40906e:	and    BYTE PTR [edi+0x7f08683c],bl
  409074:	mov    dh,0x0
  409076:	mov    al,ds:0xfda69441
  40907b:	ins    DWORD PTR es:[edi],dx
  40907c:	mov    BYTE PTR [edx],bl
  40907e:	pop    eax
  40907f:	or     bl,bl
  409081:	xor    ebp,esp
  409083:	mov    esp,0x1bf92b6c
  409088:	jb     0x409057
  40908a:	stc    
  40908b:	dec    esi
  40908c:	push   0x67
  40908e:	test   BYTE PTR [edx+esi*2-0x24],ah
  409092:	mov    dh,0xcb
  409094:	stc    
  409095:	data16 out 0xe9,al
  409098:	sub    ecx,DWORD PTR gs:0xd3628d88
  40909f:	imul   DWORD PTR [eax+0x592afa81]
  4090a5:	enter  0x4b3,0x9c
  4090a9:	fsub   DWORD PTR [edi+0x6c]
  4090ac:	sbb    al,cl
  4090ae:	xor    bl,cl
  4090b0:	ins    DWORD PTR es:[edi],dx
  4090b1:	pop    edx
  4090b2:	clc    
  4090b3:	jb     0x409058
  4090b5:	enter  0x31d2,0xd0
  4090b9:	loope  0x409071
  4090bb:	das    
  4090bc:	mov    BYTE PTR [ebx-0x330929eb],ah
  4090c2:	or     al,0xa2
  4090c4:	dec    eax
  4090c5:	mov    ebx,0xaccdb173
  4090ca:	test   BYTE PTR [ecx+0x2d721594],cl
  4090d0:	pop    es
  4090d1:	movq   mm6,QWORD PTR [esi-0x1b53a48e]
  4090d8:	sbb    BYTE PTR [eax+0x26],dl
  4090db:	js     0x4090b8
  4090dd:	or     ebp,eax
  4090df:	cmp    ebx,DWORD PTR [edx+0x4e151c53]
  4090e5:	clc    
  4090e6:	retf   
  4090e7:	mov    BYTE PTR [edx],ah
  4090e9:	das    
  4090ea:	pop    ebx
  4090eb:	ss mov al,0x70
  4090ee:	jno    0x4090ce
  4090f0:	adc    bh,0xf5
  4090f3:	jne    0x40912a
  4090f5:	mov    bl,0x4c
  4090f7:	(bad)  
  4090f8:	fcom   DWORD PTR [edx+eiz*2+0x4a]
  4090fc:	xchg   ecx,eax
  4090fd:	and    DWORD PTR [ebp+eiz*8+0x29],eax
  409101:	pop    ebp
  409102:	(bad)  
  409103:	dec    eax
  409104:	fcomp  st(6)
  409106:	adc    edx,DWORD PTR [edx+0x36c083d8]
  40910c:	adc    esp,ebp
  40910e:	adc    DWORD PTR [ecx+esi*2],esp
  409111:	inc    edx
  409112:	push   ds
  409113:	xor    BYTE PTR ds:0x554b344e,0x37
  40911a:	call   0x154ab54b
  40911f:	jmp    0x4090f4
  409121:	fst    QWORD PTR [ecx+0x67]
  409124:	dec    esi
  409125:	mov    ecx,?
  409127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409128:	jne    0x409120
  40912a:	fist   WORD PTR es:[edi-0x73d716e2]
  409131:	enter  0x5dd7,0x50
  409135:	out    0x17,eax
  409137:	leave  
  409138:	outs   dx,BYTE PTR ds:[esi]
  409139:	aam    0x7d
  40913b:	pop    eax
  40913c:	jno    0x40910c
  40913e:	add    edi,0xbc912abe
  409144:	or     ebx,0xbd118f3d
  40914a:	ja     0x40913a
  40914c:	out    0x3d,al
  40914e:	inc    ebx
  40914f:	neg    dh
  409151:	add    BYTE PTR [edx-0x732ac916],dh
  409157:	loope  0x409110
  409159:	cmc    
  40915a:	mov    ss,ebp
  40915c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40915d:	std    
  40915e:	ins    DWORD PTR es:[edi],dx
  40915f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409160:	jle    0x4091c8
  409162:	push   ecx
  409163:	pop    es
  409164:	mov    edi,0x6f861a7c
  409169:	jne    0x40919c
  40916b:	adc    DWORD PTR [esp+esi*8-0x48ee7f9e],ebp
  409172:	push   ss
  409173:	arpl   WORD PTR [ebx-0x42],si
  409176:	xchg   DWORD PTR [ebx-0x3f],ebx
  409179:	arpl   WORD PTR [ebx-0x2a],bx
  40917c:	xchg   esi,ecx
  40917e:	stos   DWORD PTR es:[edi],eax
  40917f:	lea    esi,[esi-0x32]
  409182:	xlat   BYTE PTR ds:[ebx]
  409183:	or     DWORD PTR [edx],esp
  409185:	jl     0x4091e6
  409187:	inc    esp
  409188:	jmp    0x1285:0x43c5daf8
  40918f:	movd   DWORD PTR [esi-0x2c],mm2
  409193:	dec    ebx
  409194:	aam    0xb6
  409196:	push   ecx
  409197:	dec    edi
  409198:	les    edi,FWORD PTR [edx+eax*2-0x5f]
  40919c:	jns    0x4091a4
  40919e:	dec    ebp
  40919f:	stos   DWORD PTR es:[edi],eax
  4091a0:	arpl   WORD PTR [eax-0x1a],si
  4091a3:	jmp    0xff2cfad3
  4091a8:	pop    ebx
  4091a9:	std    
  4091aa:	sub    ch,bh
  4091ac:	or     ch,BYTE PTR [esi]
  4091ae:	jns    0x409179
  4091b0:	stos   DWORD PTR es:[edi],eax
  4091b1:	pop    ss
  4091b2:	or     al,0xef
  4091b4:	xchg   ecx,eax
  4091b5:	push   eax
  4091b6:	pop    ebx
  4091b7:	pusha  
  4091b8:	pop    edx
  4091b9:	aaa    
  4091ba:	(bad)  
  4091bb:	stc    
  4091bc:	push   esi
  4091bd:	out    0x4b,al
  4091bf:	fs sahf 
  4091c1:	mov    ecx,0x6a3d690e
  4091c6:	pop    ecx
  4091c7:	xor    DWORD PTR [esp+ebp*4+0x26c22bbd],edi
  4091ce:	xlat   BYTE PTR ds:[ebx]
  4091cf:	cmc    
  4091d0:	in     al,0xc8
  4091d2:	(bad)  
  4091d3:	retf   0xaf95
  4091d6:	test   al,0xc1
  4091d8:	push   es
  4091d9:	jne    0x40915d
  4091db:	sbb    BYTE PTR [eax],ah
  4091dd:	scas   al,BYTE PTR es:[edi]
  4091de:	bnd jno 0x4091b9
  4091e1:	mov    ebp,0x1a2a4953
  4091e6:	sbb    al,0x4f
  4091e8:	fld    TBYTE PTR [ebx-0x29]
  4091eb:	xor    al,0x44
  4091ed:	push   ebx
  4091ee:	sub    DWORD PTR ds:0xfae2d061,ecx
  4091f4:	fdiv   QWORD PTR [edi]
  4091f6:	cs pop eax
  4091f8:	js     0x40925d
  4091fa:	dec    edx
  4091fb:	retf   
  4091fc:	scas   eax,DWORD PTR es:[edi]
  4091fd:	push   cs
  4091fe:	repz inc ebp
  409200:	(bad)  
  409201:	and    BYTE PTR [ebx+0x5ae449a4],al
  409207:	mov    es,WORD PTR [ebx-0x63]
  40920a:	add    al,0xa0
  40920c:	sbb    eax,0x982cbea9
  409211:	and    eax,DWORD PTR [ecx]
  409213:	push   ecx
  409214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409215:	xchg   esp,eax
  409216:	dec    esi
  409217:	pop    es
  409218:	mov    BYTE PTR [ebp+0x5ab432e3],0xd0
  40921f:	retf   0xad05
  409222:	push   eax
  409223:	pop    ecx
  409224:	and    edi,DWORD PTR [edx-0x49]
  409227:	cmp    eax,0x44eeeef1
  40922c:	sub    al,0x59
  40922e:	clc    
  40922f:	jle    0x40922c
  409231:	dec    edi
  409232:	in     al,0x12
  409234:	mov    bl,0xa0
  409236:	loopne 0x409232
  409238:	test   DWORD PTR [edx+0x70144ece],eax
  40923e:	cmp    al,0xd
  409240:	jo     0x409294
  409242:	retf   0x829f
  409245:	sar    DWORD PTR [ebp+0x77eb1ef7],1
  40924b:	and    al,cl
  40924d:	call   0xe115:0x27003cb9
  409254:	mov    dl,0x49
  409256:	ret    0xd2c3
  409259:	xor    al,0x4c
  40925b:	ldmxcsr DWORD PTR [ecx]
  40925e:	mov    cl,0x8e
  409260:	mov    bl,0x2b
  409262:	jg     0x4092c1
  409264:	rcl    DWORD PTR [ebx+0x45],cl
  409267:	repnz xchg ecx,eax
  409269:	mov    ah,0x7f
  40926b:	add    al,0x90
  40926d:	inc    cx
  40926f:	add    DWORD PTR [ecx-0x435aa1b7],ecx
  409275:	sub    al,0x4a
  409277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409278:	push   es
  409279:	xchg   BYTE PTR [edi],ah
  40927b:	ret    0xefb6
  40927e:	ret    0xe6a6
  409281:	call   0x2690:0x37bf8e4a
  409288:	mov    bh,0x6c
  40928a:	fild   QWORD PTR [esi+ecx*8]
  40928d:	shr    DWORD PTR [esi+0x6dc71065],cl
  409293:	arpl   WORD PTR [eax],bp
  409295:	mov    eax,ds:0xa3333b64
  40929a:	inc    edx
  40929b:	inc    esi
  40929c:	push   ss
  40929d:	nop
  40929e:	xor    BYTE PTR [ebp+0x47],cl
  4092a1:	cmp    BYTE PTR [edx],dh
  4092a3:	cmc    
  4092a4:	fdivr  st,st(3)
  4092a6:	cdq    
  4092a7:	sti    
  4092a8:	fstp   QWORD PTR [edx]
  4092aa:	jmp    0x409248
  4092ac:	scas   al,BYTE PTR es:[edi]
  4092ad:	loop   0x409291
  4092af:	loopne 0x409313
  4092b1:	out    dx,eax
  4092b2:	dec    edx
  4092b3:	ror    DWORD PTR [esp+ebx*4],cl
  4092b6:	sbb    bl,BYTE PTR [ecx-0x5ee6cb62]
  4092bc:	sub    DWORD PTR ds:[edx-0x50517d15],ebp
  4092c3:	pop    ebx
  4092c5:	jmp    0xd9bd:0xf5e66eb
  4092cc:	call   edi
  4092ce:	nop
  4092cf:	shr    BYTE PTR [ebx+eiz*4+0x68e06d2],1
  4092d6:	stos   BYTE PTR es:[edi],al
  4092d7:	cmp    cl,BYTE PTR ds:0xd35bd2e0
  4092dd:	and    BYTE PTR [ebx],dl
  4092df:	or     BYTE PTR [ebx],dh
  4092e1:	pop    edx
  4092e2:	in     eax,dx
  4092e3:	cs adc ecx,ebp
  4092e6:	mov    ch,0x2d
  4092e8:	mov    ch,dl
  4092ea:	dec    edi
  4092eb:	sti    
  4092ec:	xor    eax,0x961c300e
  4092f1:	int3   
  4092f2:	call   0x980:0x893822d4
  4092f9:	adc    al,0xa4
  4092fb:	mov    al,ds:0x46eb4089
  409300:	mov    es,WORD PTR [eax]
  409302:	(bad)  
  409303:	imul   DWORD PTR [edi+0x71]
  409306:	jl     0x4092c4
  409308:	aam    0xbd
  40930a:	ret    
  40930b:	adc    DWORD PTR [edi],ebx
  40930d:	mov    bl,0x6a
  40930f:	push   es
  409310:	pop    ebx
  409311:	fsubr  QWORD PTR ds:0x9b3d368f
  409317:	xor    DWORD PTR [esi],ecx
  409319:	shl    BYTE PTR [ebp+0x3042a0e4],0x7d
  409320:	inc    edx
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	dec    esp
  409323:	xchg   ebp,eax
  409324:	inc    esp
  409325:	xchg   edx,eax
  409326:	jae    0x40936e
  409328:	sbb    al,0xe6
  40932a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932b:	retf   
  40932c:	or     DWORD PTR [edi-0x5a303543],edx
  409332:	ss ds icebp 
  409335:	pushf  
  409336:	push   ebp
  409337:	gs dec esp
  409339:	push   ds
  40933a:	jecxz  0x40932e
  40933c:	xor    edi,DWORD PTR [ecx+ecx*8-0x58ce6285]
  409343:	inc    edx
  409344:	test   al,0x63
  409346:	(bad)  [esi-0xe]
  409349:	mov    ds:0x6507e59d,al
  40934e:	mov    gs,WORD PTR [ebp+0x5580bdb4]
  409354:	leave  
  409355:	sti    
  409356:	push   0x6a
  409358:	mov    al,0x10
  40935a:	mov    ebx,0xd69af582
  40935f:	jmp    0xcc7fcec4
  409364:	js     0x409353
  409366:	fnsave [ecx+eax*8]
  409369:	loop   0x4092f2
  40936b:	xor    DWORD PTR [eax+0x79],eax
  40936e:	mov    BYTE PTR [ebp+0x37b8a9ba],0xab
  409375:	sahf   
  409376:	dec    edx
  409377:	out    dx,al
  409378:	inc    ecx
  409379:	ins    BYTE PTR es:[edi],dx
  40937a:	stc    
  40937b:	shr    DWORD PTR [ebx],1
  40937d:	leave  
  40937e:	jmp    0xdf0b6cdf
  409383:	mov    ebx,0x27644f09
  409388:	je     0x409403
  40938a:	inc    ebx
  40938b:	jp     0x40938c
  40938d:	jns    0x4093bd
  40938f:	jge    0x40940c
  409391:	ret    
  409392:	mov    esi,0x2b561123
  409397:	pop    esp
  409398:	cmp    DWORD PTR [eax+0x29],esp
  40939b:	dec    edi
  40939c:	fsubr  DWORD PTR [esi+ecx*8+0x2e27b30e]
  4093a3:	and    esp,DWORD PTR [bx]
  4093a6:	imul   esi,DWORD PTR [ebx+0x29a01553],0xffffff8d
  4093ad:	xchg   esi,eax
  4093ae:	xor    BYTE PTR [ecx+0x17],0xe
  4093b2:	push   edx
  4093b3:	and    dh,dl
  4093b5:	push   ecx
  4093b6:	mov    esi,0xc1b05c53
  4093bb:	stos   DWORD PTR es:[edi],eax
  4093bc:	inc    edi
  4093bd:	xchg   DWORD PTR [edi],ebx
  4093bf:	adc    bh,BYTE PTR [edi]
  4093c1:	test   ah,bh
  4093c3:	and    eax,0x9e3ca5f
  4093c8:	ficomp DWORD PTR [eax-0x11]
  4093cb:	inc    ebp
  4093cc:	jmp    0x40938e
  4093ce:	test   eax,0xfbd41934
  4093d3:	loopne 0x40943c
  4093d5:	xchg   DWORD PTR [ebp+0x5fa13a55],esi
  4093db:	rcl    cl,1
  4093dd:	repnz xor al,0x43
  4093e0:	inc    edx
  4093e1:	cmovp  esp,DWORD PTR [edx]
  4093e4:	in     eax,0x47
  4093e6:	add    BYTE PTR [edi+0x68],dl
  4093e9:	enter  0x2dd0,0x91
  4093ed:	js     0x4093db
  4093ef:	popa   
  4093f0:	ror    ch,1
  4093f2:	push   esi
  4093f3:	scas   eax,DWORD PTR es:[edi]
  4093f4:	jnp    0x4093f9
  4093f6:	inc    ebx
  4093f7:	add    al,0x46
  4093f9:	out    dx,al
  4093fa:	adc    eax,0x4d546060
  4093ff:	pop    ds
  409400:	lahf   
  409401:	xchg   esi,eax
  409402:	inc    ebp
  409403:	xlat   BYTE PTR ds:[ebx]
  409404:	in     eax,0x19
  409406:	and    al,0x74
  409408:	push   cs
  409409:	mul    BYTE PTR [ecx]
  40940b:	shl    BYTE PTR [edx],0x97
  40940e:	xchg   ebp,eax
  40940f:	adc    ecx,edi
  409411:	mov    al,0xed
  409413:	push   esp
  409414:	call   0xd92:0x1f91dbf9
  40941b:	dec    edx
  40941c:	popa   
  40941d:	xchg   DWORD PTR [edi+edi*2+0x3fc189e0],ecx
  409424:	ins    BYTE PTR es:[edi],dx
  409425:	add    BYTE PTR [ecx-0x77],ch
  409428:	lods   al,BYTE PTR ds:[esi]
  409429:	xchg   edi,eax
  40942a:	rcr    BYTE PTR [ecx+0x4f],0xa
  40942e:	push   es
  40942f:	cld    
  409430:	jmp    0xf1d62012
  409435:	mov    BYTE PTR ds:0x647603c8,0x71
  40943c:	shl    DWORD PTR [ecx+0x619d1bd],cl
  409442:	or     dl,ah
  409444:	and    eax,esi
  409446:	ins    BYTE PTR es:[edi],dx
  409447:	not    DWORD PTR [eax-0x5a]
  40944a:	ja     0x4093df
  40944c:	push   cs
  40944d:	mov    ebx,0xca413741
  409452:	outs   dx,DWORD PTR ds:[esi]
  409453:	fmul   st(0),st
  409455:	ja     0x40941c
  409457:	xlat   BYTE PTR ds:[ebx]
  409458:	inc    edi
  409459:	dec    esi
  40945a:	sub    bh,bl
  40945c:	scas   eax,DWORD PTR es:[edi]
  40945d:	ss jae 0x409441
  409460:	ins    BYTE PTR es:[edi],dx
  409461:	and    BYTE PTR [eax-0x31],ch
  409464:	jmp    0x834a:0x50ad87b5
  40946b:	mov    al,0xcc
  40946d:	and    eax,0x226c2abc
  409472:	jns    0x40942d
  409474:	cmp    dh,al
  409476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409477:	aam    0x3a
  409479:	mov    ah,0xa1
  40947b:	sub    al,0x87
  40947d:	loop   0x40940c
  40947f:	and    eax,0x399e3b81
  409484:	rcr    ah,1
  409486:	jno    0x409442
  409488:	jl     0x40946c
  40948a:	jne    0x4094bb
  40948c:	and    BYTE PTR [esi-0x2b],bl
  40948f:	aad    0xf5
  409491:	sbb    ebx,edx
  409493:	enter  0x24fd,0x81
  409497:	push   cs
  409498:	dec    ebp
  409499:	and    BYTE PTR [edx+0x3c],0xe
  40949d:	pop    ecx
  40949e:	inc    edi
  40949f:	scas   al,BYTE PTR es:[edi]
  4094a0:	push   ecx
  4094a1:	push   ds
  4094a2:	pushf  
  4094a3:	clc    
  4094a4:	in     eax,dx
  4094a5:	sub    al,0x7c
  4094a7:	lock retf 
  4094a9:	adc    DWORD PTR [ebp-0x3e],0x99177f9f
  4094b0:	xchg   ecx,eax
  4094b1:	dec    edx
  4094b2:	retf   0xe21c
  4094b5:	cmc    
  4094b6:	lahf   
  4094b7:	scas   eax,DWORD PTR es:[edi]
  4094b8:	mov    esi,0x3c662c16
  4094bd:	sbb    al,0xa5
  4094bf:	pushf  
  4094c0:	jbe    0x4094f0
  4094c2:	(bad)  
  4094c4:	inc    ecx
  4094c5:	xor    esp,ebp
  4094c7:	mov    esp,0xdee8a0d9
  4094cc:	setle  BYTE PTR [eax+0x44]
  4094d0:	xchg   ebp,eax
  4094d1:	push   ebx
  4094d2:	pop    ss
  4094d3:	int    0xf9
  4094d5:	rcr    BYTE PTR [ebx-0x7c],0xce
  4094d9:	fmul   DWORD PTR [esi+0x7d]
  4094dc:	out    0x4a,eax
  4094de:	out    dx,eax
  4094df:	js     0x409500
  4094e1:	or     al,0x37
  4094e3:	and    eax,0x61f56ca4
  4094e8:	sub    al,0xfc
  4094ea:	cdq    
  4094eb:	js     0x4094e4
  4094ed:	bound  edi,QWORD PTR [ebx+0x5bdfe39e]
  4094f3:	pop    edi
  4094f4:	fadd   DWORD PTR [esp+ebp*1-0x16]
  4094f8:	jl     0x409538
  4094fa:	mov    ds:0xbb8d5ddd,al
  4094ff:	jnp    0x4094b8
  409501:	fistp  QWORD PTR [edx]
  409503:	test   ecx,ebp
  409505:	bswap  eax
  409507:	dec    ebp
  409508:	test   DWORD PTR [esi+esi*1-0xf],0x189ad4e0
  409510:	lds    esp,FWORD PTR [eax-0x47]
  409513:	test   eax,0x103ec18a
  409518:	data16 or BYTE PTR [edx-0x521af043],bh
  40951f:	out    0xf4,al
  409521:	jle    0x40952d
  409523:	fbld   TBYTE PTR [ebx-0xa]
  409526:	fldcw  WORD PTR [ecx+eax*2-0x419d00de]
  40952d:	adc    eax,0x6926a528
  409532:	xor    BYTE PTR [eax+ebx*2+0x3642cf9d],cl
  409539:	int3   
  40953a:	dec    esp
  40953b:	xchg   esi,eax
  40953c:	fsubr  QWORD PTR [ecx]
  40953e:	(bad)  
  409540:	push   eax
  409541:	mov    cl,0x7f
  409543:	outs   dx,WORD PTR ds:[esi]
  409545:	mov    bl,0xfa
  409547:	sbb    al,0x2
  409549:	lea    esi,[edi+ebx*8+0x60405207]
  409550:	mov    ebx,0xaa0ed638
  409555:	fdiv   DWORD PTR [ebp-0x10a1339a]
  40955b:	xchg   ebx,eax
  40955c:	xor    al,0xdf
  40955e:	inc    esp
  40955f:	out    0x64,al
  409561:	push   eax
  409562:	and    al,0x82
  409564:	nop
  409565:	sbb    DWORD PTR [edi],esi
  409567:	add    al,0xda
  409569:	inc    ebx
  40956a:	pop    ebx
  40956b:	sbb    eax,0xc2bc5d22
  409570:	test   DWORD PTR [ebp-0x607548db],ebx
  409576:	cmp    DWORD PTR [ebp-0x5108eb32],ecx
  40957c:	test   eax,0xddc18dc6
  409581:	xchg   ebp,eax
  409582:	ret    
  409583:	fsub   DWORD PTR [esi+0x37]
  409586:	imul   eax,esp,0xf9755b93
  40958c:	out    0x57,al
  40958e:	(bad)  
  40958f:	mov    ecx,0xf74fbcd8
  409594:	(bad)  
  409595:	jmp    0x4095c8
  409597:	das    
  409598:	cdq    
  409599:	and    bh,BYTE PTR [esi-0x64]
  40959c:	jg     0x40958b
  40959e:	enter  0x7254,0x14
  4095a2:	not    BYTE PTR [edx]
  4095a4:	xchg   DWORD PTR [ebx],ebp
  4095a6:	dec    esp
  4095a7:	shl    BYTE PTR [ebx+0x3d],1
  4095aa:	ins    BYTE PTR es:[edi],dx
  4095ab:	imul   edi,ebp,0x30
  4095ae:	mov    ecx,0x474850e9
  4095b3:	fdivr  QWORD PTR [ebx]
  4095b5:	out    0xe7,eax
  4095b7:	sub    eax,0x90e834e9
  4095bc:	or     BYTE PTR [edi-0x31],ch
  4095bf:	repz (bad) 
  4095c1:	pop    ebp
  4095c2:	mov    ah,0x39
  4095c4:	ret    0xe6c5
  4095c7:	stos   DWORD PTR es:[edi],eax
  4095c8:	mov    esp,0xed3505a4
  4095cd:	scas   eax,DWORD PTR es:[edi]
  4095ce:	sub    BYTE PTR [esi+edi*8+0x44],al
  4095d2:	outs   dx,DWORD PTR ds:[esi]
  4095d3:	fs cld 
  4095d5:	inc    ebp
  4095d6:	and    edi,DWORD PTR [edx]
  4095d8:	jg     0x4095a4
  4095da:	cwde   
  4095db:	mov    esp,0xb1d7435b
  4095e0:	or     esp,DWORD PTR [ebp+ecx*2+0x5d]
  4095e4:	loopne 0x4095d4
  4095e6:	sub    al,0x9b
  4095e8:	loopne 0x4095de
  4095ea:	add    BYTE PTR [eax+0x2a435e38],ah
  4095f0:	fst    QWORD PTR [ebx+0x3277df8a]
  4095f6:	pop    eax
  4095f7:	pop    ss
  4095f8:	clc    
  4095f9:	mov    BYTE PTR [edx],0x1b
  4095fc:	pop    ss
  4095fd:	mov    ds:0x9103e456,eax
  409602:	inc    edx
  409603:	daa    
  409604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409605:	(bad)  
  409606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409607:	pop    ebx
  409608:	xchg   ebp,eax
  409609:	mov    ebp,ss
  40960b:	mov    ebp,DWORD PTR ds:0x4dad0b7e
  409611:	vpsubb ymm6,ymm2,YMMWORD PTR [edx-0x5efa8218]
  409619:	mov    BYTE PTR [edx+0x59c93858],dh
  40961f:	sub    ecx,DWORD PTR [eax+0xd]
  409622:	cmc    
  409623:	pop    ds
  409624:	shl    al,1
  409626:	add    DWORD PTR gs:[ecx-0x5f],edx
  40962a:	ins    BYTE PTR es:[edi],dx
  40962b:	mov    ss,WORD PTR [edx]
  40962d:	test   BYTE PTR ds:0x798a212e,dl
  409633:	adc    al,0x5a
  409635:	xchg   ebx,eax
  409636:	imul   ebp,edx,0xffffffa8
  409639:	pop    ebp
  40963a:	mov    ds:0xfb828f22,eax
  40963f:	xchg   esp,eax
  409640:	jecxz  0x4096b0
  409642:	and    BYTE PTR [esi],bl
  409644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409645:	dec    eax
  409646:	imul   eax,DWORD PTR [ecx],0x3
  409649:	inc    ebp
  40964a:	(bad)  
  40964b:	std    
  40964c:	or     dh,BYTE PTR [esi]
  40964e:	call   0x9997675f
  409653:	fld    TBYTE PTR [ecx]
  409655:	adc    al,0xc7
  409657:	call   0xb2f9:0x80f9c708
  40965e:	sbb    DWORD PTR [eax+0x48206d30],ebx
  409664:	out    dx,al
  409665:	add    BYTE PTR [ebp+0x73],bl
  409668:	idiv   DWORD PTR [ebx]
  40966a:	pop    eax
  40966b:	(bad)  
  40966d:	xor    ebx,ebp
  40966f:	inc    esi
  409670:	inc    edi
  409671:	add    BYTE PTR [ebx+0x316d3f8a],ch
  409677:	sti    
  409678:	nop
  409679:	(bad)  
  40967a:	or     al,0x56
  40967c:	fsubr  QWORD PTR [ecx+0x1f]
  40967f:	ins    DWORD PTR es:[edi],dx
  409680:	push   edi
  409681:	call   0xa0f197b
  409686:	xchg   esi,eax
  409687:	int    0x52
  409689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40968a:	cdq    
  40968b:	jbe    0x409616
  40968d:	xor    BYTE PTR [ebp+0x3eff8a86],bh
  409693:	add    eax,0x379aa339
  409698:	pop    es
  409699:	jecxz  0x40964e
  40969b:	pop    ebp
  40969c:	test   al,0x24
  40969e:	xor    al,0xf7
  4096a0:	dec    ebx
  4096a1:	fmul   QWORD PTR [ecx-0x7e]
  4096a4:	mov    edx,0x1c3efcf0
  4096a9:	xor    DWORD PTR [ebx+0xa7e7f2e],eax
  4096af:	hlt    
  4096b0:	cmp    ch,cl
  4096b2:	mov    al,0x5
  4096b4:	dec    esp
  4096b5:	test   al,0xbf
  4096b7:	mov    eax,0x55e64a83
  4096bc:	inc    edi
  4096bd:	aas    
  4096be:	and    esp,esp
  4096c0:	dec    eax
  4096c1:	xor    al,0x92
  4096c3:	adc    eax,0x215ba891
  4096c8:	aam    0x3e
  4096ca:	and    al,0x64
  4096cc:	sub    BYTE PTR [esi],ch
  4096ce:	jbe    0x40969d
  4096d0:	aas    
  4096d1:	xchg   esi,eax
  4096d2:	js     0x40970c
  4096d4:	rcr    ebp,cl
  4096d6:	scas   eax,DWORD PTR es:[edi]
  4096d7:	call   0x6b0:0x7909ee7f
  4096de:	mov    ecx,0xf7111142
  4096e3:	cmp    al,ah
  4096e5:	jne    0x40969c
  4096e7:	sbb    ch,BYTE PTR [ebx-0x2b6ff1f]
  4096ed:	jo     0x4096dd
  4096ef:	xlat   BYTE PTR ds:[ebx]
  4096f0:	mov    bl,al
  4096f2:	inc    edi
  4096f3:	call   0xb2a907e7
  4096f8:	imul   eax,edx,0xffffff8a
  4096fb:	jmp    0x94b63e99
  409700:	mov    edi,DWORD PTR [esi+ebp*4+0x9]
  409704:	div    bl
  409706:	or     al,0xc5
  409708:	fist   DWORD PTR [edi+0x37]
  40970b:	and    ah,BYTE PTR [eax]
  40970d:	jmp    0x4096f8
  40970f:	in     al,0x85
  409711:	lods   eax,DWORD PTR ds:[esi]
  409712:	inc    ebx
  409713:	mov    edx,0xbb0a514a
  409718:	ret    
  409719:	dec    edi
  40971a:	add    eax,0x456fb815
  40971f:	pop    ebp
  409720:	and    al,0x88
  409722:	stos   BYTE PTR es:[edi],al
  409723:	shl    BYTE PTR [edx],1
  409725:	sub    eax,0x87666435
  40972a:	ret    0xa242
  40972d:	fdivr  DWORD PTR [ecx-0x1034b80d]
  409733:	scas   eax,DWORD PTR es:[edi]
  409734:	arpl   WORD PTR [eax+ebx*1],bp
  409737:	xchg   ebx,eax
  409738:	mov    bh,ah
  40973a:	rcr    ecx,0x78
  40973d:	mov    edx,0x7a0951c4
  409742:	push   ebp
  409743:	or     eax,0xbff2a1e
  409748:	xchg   edx,eax
  409749:	cmp    ebx,DWORD PTR [edi+0x2]
  40974c:	cmp    DWORD PTR [esi-0x7c74d5e5],ecx
  409752:	xchg   edi,eax
  409753:	nop
  409754:	popa   
  409755:	jle    0x4097c3
  409757:	ficom  DWORD PTR [ebx+0x52]
  40975a:	and    bl,BYTE PTR [esi-0xd]
  40975d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40975e:	jns    0x40975d
  409760:	call   0xfa14:0xc37b26b9
  409767:	or     ah,ah
  409769:	data16 ins BYTE PTR es:[edi],dx
  40976b:	retf   0xb27b
  40976e:	fld    DWORD PTR [esp+esi*1]
  409771:	dec    ebp
  409772:	adc    ch,bh
  409774:	mov    eax,ds:0x35276f9d
  409779:	or     eax,0x9429269
  40977e:	mov    eax,ds:0x9a6eae92
  409783:	cdq    
  409784:	push   edx
  409785:	out    0x8,al
  409787:	sbb    eax,0x9f5f97af
  40978c:	pop    ebx
  40978d:	dec    ebx
  40978e:	sahf   
  40978f:	xchg   edi,eax
  409790:	sbb    eax,0xe3cc78af
  409795:	mov    esi,0xa33e5066
  40979a:	test   eax,0x7da05501
  40979f:	shl    ebp,0x93
  4097a2:	rcl    DWORD PTR [eax+0x570db1f1],cl
  4097a8:	jl     0x409827
  4097aa:	sbb    eax,0x728ad265
  4097af:	cwde   
  4097b0:	pushf  
  4097b1:	sar    DWORD PTR [ebp+0x41],0x62
  4097b5:	pop    ebp
  4097b6:	call   0xf0f9:0xd8bb6fb5
  4097bd:	mov    al,0x5f
  4097bf:	idiv   BYTE PTR [ebx+0x68]
  4097c2:	or     ah,bh
  4097c4:	cmp    esp,DWORD PTR [ecx]
  4097c6:	sub    ebp,DWORD PTR [edi]
  4097c8:	sbb    cl,dl
  4097ca:	push   cs
  4097cb:	jnp    0x4097ab
  4097cd:	jecxz  0x409769
  4097cf:	and    bh,0x36
  4097d2:	aam    0xe
  4097d4:	je     0x409803
  4097d6:	mul    DWORD PTR [edi+ebx*1]
  4097d9:	cs push 0x92d526ce
  4097df:	and    edx,ebx
  4097e1:	test   BYTE PTR [ebx+ebp*4],dl
  4097e4:	and    ecx,DWORD PTR [eax]
  4097e6:	sbb    dh,BYTE PTR [edi-0xad8d6b0]
  4097ec:	imul   ecx,ebp,0x3a04570
  4097f2:	into   
  4097f3:	addr16 fs pop ecx
  4097f6:	call   0x9997ca8b
  4097fb:	xor    eax,0x5a16009f
  409800:	pop    ebx
  409801:	jl     0x4097b2
  409803:	mov    ch,0xab
  409805:	add    BYTE PTR [esi+0x54],0xb2
  409809:	mov    ecx,0xcf0be02
  40980e:	mov    ss,WORD PTR [edx]
  409810:	dec    esi
  409811:	addr16 jae 0x409820
  409814:	push   ebp
  409815:	scas   eax,DWORD PTR es:[edi]
  409816:	mov    cl,0x54
  409818:	sar    al,0x1a
  40981b:	pop    eax
  40981c:	bts    ebx,esi
  40981f:	out    0xd,al
  409821:	mov    edx,0x608fe6cf
  409826:	or     ecx,DWORD PTR [edx-0x194bf3cc]
  40982c:	mov    ch,0x9c
  40982e:	(bad)  
  40982f:	jne    0x4097f0
  409831:	pop    ebp
  409832:	in     al,0xd4
  409834:	xlat   BYTE PTR ds:[ebx]
  409835:	addr16 out dx,al
  409837:	sub    eax,0xd2bf20e8
  40983c:	cmp    ch,bl
  40983e:	mov    cl,0x6e
  409840:	pop    esi
  409841:	sub    ebx,DWORD PTR [ecx-0x5e]
  409844:	(bad)  
  409845:	push   edi
  409846:	cli    
  409847:	inc    esp
  409848:	pop    ebx
  409849:	(bad)  
  40984a:	jb     0x409891
  40984c:	call   0x1414:0x183a932d
  409853:	inc    eax
  409854:	retf   0xb593
  409857:	imul   esi,DWORD PTR [ecx],0xffffffdf
  40985a:	or     eax,0x706b3ddf
  40985f:	enter  0x14c2,0x2c
  409863:	push   0xffffffcb
  409865:	pop    edi
  409866:	adc    al,0x97
  409868:	jno    0x409818
  40986a:	dec    edi
  40986b:	and    DWORD PTR ds:0x50f2ad56,esi
  409871:	jle    0x409880
  409873:	xor    ebp,DWORD PTR [eax-0x463dfdac]
  409879:	(bad)  
  40987a:	sub    eax,0x42cad1e
  40987f:	mov    WORD PTR [ebx+0x45],?
  409882:	out    0x2a,eax
  409884:	je     0x409833
  409886:	lods   eax,DWORD PTR ds:[esi]
  409887:	push   eax
  409888:	out    dx,al
  409889:	cmp    edx,DWORD PTR [esi]
  40988b:	aaa    
  40988c:	mov    ebp,0x810224f1
  409891:	or     ebp,DWORD PTR [esi]
  409893:	test   BYTE PTR [edx+0x12],0x8c
  409897:	stos   BYTE PTR es:[edi],al
  409898:	cld    
  409899:	mov    DWORD PTR [esi],eax
  40989b:	out    dx,eax
  40989c:	xchg   ebx,eax
  40989d:	(bad)  [ebp-0x1d146566]
  4098a3:	pushf  
  4098a4:	xchg   esp,eax
  4098a5:	xchg   edi,eax
  4098a6:	lahf   
  4098a7:	xchg   BYTE PTR [ecx],dl
  4098a9:	pop    ds
  4098aa:	add    eax,0x3ee12c20
  4098af:	fdivr  DWORD PTR [ecx+0x509145a0]
  4098b5:	das    
  4098b6:	les    edx,FWORD PTR [eax+0xe]
  4098b9:	clc    
  4098ba:	pop    edi
  4098bb:	sbb    DWORD PTR [ebx-0x28],esi
  4098be:	(bad)  
  4098bf:	pop    ds
  4098c0:	add    BYTE PTR [ebx],dl
  4098c2:	jmp    0xc0039ab4
  4098c7:	jmp    0xeaac211f
  4098cc:	jns    0x409942
  4098ce:	(bad)  
  4098cf:	shl    BYTE PTR [ebp+0xe],cl
  4098d2:	inc    edx
  4098d3:	inc    edx
  4098d4:	pop    edx
  4098d5:	sub    eax,0xfb0e13fe
  4098da:	cmp    dh,ah
  4098dc:	xchg   DWORD PTR [ebx+0x9],edi
  4098df:	dec    esp
  4098e0:	test   al,0xee
  4098e2:	push   esi
  4098e3:	jne    0x4098b0
  4098e5:	cwde   
  4098e6:	xor    bl,ch
  4098e8:	mov    dh,0x12
  4098ea:	sbb    BYTE PTR [edx+0x4a],0xf3
  4098ee:	jl     0x40995c
  4098f0:	push   cs
  4098f1:	inc    edi
  4098f2:	pop    ss
  4098f3:	jne    0x4098c0
  4098f5:	xchg   DWORD PTR [edi+0x40522c0b],ebx
  4098fb:	fdiv   st(3),st
  4098fd:	cmp    BYTE PTR [esp+eax*8],bh
  409900:	pop    edx
  409901:	mov    ds:0xec64990f,eax
  409906:	mov    bl,0xcb
  409908:	cmp    BYTE PTR ds:0xcc741615,dl
  40990e:	xor    cl,BYTE PTR [edi+0xb337cfe]
  409914:	sub    BYTE PTR [ecx+edi*8-0x6],dh
  409918:	cmp    dl,al
  40991a:	sbb    ebp,DWORD PTR [esi-0x14f83785]
  409920:	inc    esp
  409921:	daa    
  409922:	fbstp  TBYTE PTR [ebx+ebx*4]
  409925:	es and ax,0x1089
  40992a:	aad    0xd8
  40992c:	pop    ds
  40992d:	add    al,0xc3
  40992f:	mov    al,ds:0x8e3b2d32
  409934:	fld    TBYTE PTR [edx+ecx*8-0x5e5268f4]
  40993b:	int3   
  40993c:	and    DWORD PTR [eax-0x68],0x67
  409940:	ins    DWORD PTR es:[edi],dx
  409941:	fwait
  409942:	scas   al,BYTE PTR es:[edi]
  409943:	call   0x628bbf6f
  409948:	xchg   BYTE PTR [ebx+0x72],bh
  40994b:	dec    ebp
  40994c:	gs das 
  40994e:	push   ebx
  40994f:	jno    0x4099ce
  409951:	(bad)  
  409952:	cli    
  409953:	sti    
  409954:	xchg   esp,eax
  409955:	and    edx,DWORD PTR [ecx-0x4e]
  409958:	rol    BYTE PTR [ecx-0x28],cl
  40995b:	ret    
  40995c:	sbb    DWORD PTR [esi+0x4c55f9ea],0xfffffff4
  409963:	jg     0x409988
  409965:	int    0x4c
  409967:	xor    BYTE PTR [ebp-0x29],ch
  40996a:	mov    cl,0xb1
  40996c:	add    eax,0x1a71397f
  409971:	push   0xffffffc0
  409973:	loope  0x409997
  409975:	mov    cl,0xb5
  409977:	xlat   BYTE PTR ds:[ebx]
  409978:	inc    ecx
  409979:	or     al,0xe2
  40997b:	sti    
  40997c:	fstp   QWORD PTR [edx+0x3ab63790]
  409982:	jbe    0x4099f4
  409984:	int3   
  409985:	ss je  0x4099d4
  409988:	data16 mov ah,0x9b
  40998b:	inc    eax
  40998c:	xchg   edi,eax
  40998d:	sbb    DWORD PTR [ebp+0x13],ecx
  409990:	cs adc al,0x4d
  409993:	int    0x66
  409995:	sub    eax,0x4aeceee6
  40999a:	outs   dx,DWORD PTR ds:[esi]
  40999b:	js     0x4099c9
  40999d:	or     eax,0x9e8091bb
  4099a2:	mov    al,0xc
  4099a4:	mov    cl,0xa2
  4099a6:	jne    0x409978
  4099a8:	xchg   ebx,eax
  4099a9:	xchg   ecx,eax
  4099aa:	and    al,0xec
  4099ac:	call   0x243c:0x36f843f
  4099b3:	jae    0x4099e6
  4099b5:	jmp    0x409991
  4099b7:	(bad)  
  4099b8:	pop    esp
  4099b9:	sbb    BYTE PTR [edi-0x888fca],dh
  4099bf:	addr16 (bad) 
  4099c1:	and    BYTE PTR [ebx-0x292bef79],ah
  4099c7:	sahf   
  4099c8:	inc    esi
  4099c9:	out    dx,al
  4099ca:	jg     0x409a47
  4099cc:	mov    BYTE PTR [ebp-0x35],ah
  4099cf:	jle    0x409999
  4099d1:	popf   
  4099d2:	xchg   esp,eax
  4099d3:	mov    ebx,0xf6f04d22
  4099d8:	mov    al,0xfb
  4099da:	or     al,0x3d
  4099dc:	mov    edi,0xb6775d75
  4099e1:	mov    gs,WORD PTR [ebp-0x350e6028]
  4099e7:	adc    ebx,DWORD PTR [edx+0x688a591b]
  4099ed:	mov    esp,0x84a443c4
  4099f2:	pop    ebp
  4099f3:	push   cs
  4099f4:	imul   eax,DWORD PTR [ecx],0x6
  4099f7:	jle    0x4099d4
  4099f9:	sbb    eax,0x7b2e6e90
  4099fe:	leave  
  4099ff:	mov    ch,0xf5
  409a01:	sar    DWORD PTR ds:0x1db7fe51,cl
  409a07:	and    BYTE PTR [ecx+0x39],ch
  409a0a:	shl    BYTE PTR [eax-0x5f378ac5],cl
  409a10:	retf   0x4546
  409a13:	popa   
  409a14:	(bad)  
  409a15:	outs   dx,DWORD PTR fs:[esi]
  409a17:	xlat   BYTE PTR ds:[ebx]
  409a18:	lods   al,BYTE PTR ds:[esi]
  409a19:	ss jbe 0x4099ff
  409a1c:	or     esp,eax
  409a1e:	jp     0x409a56
  409a20:	ret    
  409a21:	mov    ah,0xcd
  409a23:	stos   DWORD PTR es:[edi],eax
  409a24:	add    esi,DWORD PTR [edi]
  409a26:	add    al,bh
  409a28:	cmp    DWORD PTR [esi],ebp
  409a2a:	pop    edi
  409a2b:	(bad)  
  409a2d:	ret    
  409a2e:	les    ebp,FWORD PTR [ebx-0x3b5a3a81]
  409a34:	stc    
  409a35:	repz hlt 
  409a37:	repnz pop ds
  409a39:	add    ebx,esp
  409a3b:	jne    0x4099fa
  409a3d:	pop    ss
  409a3e:	add    BYTE PTR [ecx],dh
  409a40:	xor    eax,0xf1008b84
  409a45:	adc    dl,ch
  409a47:	sbb    BYTE PTR [ebp-0x5],bl
  409a4a:	inc    esi
  409a4b:	sub    BYTE PTR [esi+0x3d86d3e5],dl
  409a51:	je     0x409ab7
  409a53:	outs   dx,BYTE PTR ds:[esi]
  409a54:	repnz loopne 0x409a00
  409a57:	in     eax,0x83
  409a59:	jecxz  0x409ad5
  409a5b:	ja     0x409a84
  409a5d:	je     0x409a8c
  409a5f:	and    eax,0x805084b6
  409a64:	mov    ebx,0x40cb14c4
  409a69:	cdq    
  409a6a:	ror    ah,cl
  409a6c:	call   0xc13a:0xab1afdba
  409a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a75:	mov    ds:0xf5400ef5,eax
  409a7a:	sbb    al,0x54
  409a7c:	cld    
  409a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a7e:	enter  0xd4d2,0x6f
  409a82:	mov    ebx,0xdbdd3654
  409a87:	pop    ss
  409a88:	mov    esp,0x4dbd38eb
  409a8d:	jmp    0x9a64:0x66f26a53
  409a94:	mov    ds:0x2fbabc8,al
  409a99:	lods   al,BYTE PTR ds:[esi]
  409a9a:	not    bh
  409a9c:	sbb    al,0x54
  409a9e:	imul   esi,DWORD PTR [edx],0x1b
  409aa1:	jecxz  0x409b07
  409aa3:	(bad)  
  409aa4:	sbb    dl,BYTE PTR [ecx-0x25]
  409aa7:	mov    dl,0xcb
  409aa9:	cs adc ch,dl
  409aac:	pop    esp
  409aad:	cmp    eax,DWORD PTR [edx-0x4a]
  409ab0:	pop    es
  409ab1:	mov    bl,0x8a
  409ab3:	pop    ecx
  409ab4:	adc    BYTE PTR [ebx],0xf
  409ab7:	dec    esp
  409ab8:	pop    ss
  409ab9:	add    eax,0x2601b330
  409abe:	xchg   ebx,eax
  409abf:	stos   BYTE PTR es:[edi],al
  409ac0:	fwait
  409ac1:	test   edi,esp
  409ac3:	int3   
  409ac4:	inc    ebp
  409ac5:	push   esi
  409ac6:	inc    ebp
  409ac7:	mov    ebp,0x521a0731
  409acc:	pop    edi
  409acd:	xor    al,0xf6
  409acf:	dec    edx
  409ad0:	and    DWORD PTR [ecx+0x40],edx
  409ad3:	mov    bl,0x6b
  409ad5:	or     BYTE PTR [ebp+0x47],ch
  409ad8:	mov    eax,0x3b78ab5b
  409add:	dec    eax
  409ade:	sbb    al,dh
  409ae0:	aad    0x31
  409ae2:	ret    0xc95e
  409ae5:	cs call 0x5f066f04
  409aeb:	int    0x66
  409aed:	div    DWORD PTR [esi+0x6ea39f96]
  409af3:	jl     0x409a97
  409af5:	xchg   ebx,eax
  409af6:	jmp    0x409ad7
  409af8:	les    ebp,FWORD PTR [ecx+0x53]
  409afb:	outs   dx,DWORD PTR ds:[esi]
  409afc:	push   edx
  409afd:	stc    
  409afe:	mov    BYTE PTR [ecx-0x45],bh
  409b01:	sbb    al,0xbb
  409b03:	jae    0x409b11
  409b05:	test   eax,0x1b66db0c
  409b0a:	or     eax,0x85ac7293
  409b0f:	out    dx,al
  409b10:	gs jecxz 0x409ab9
  409b13:	sti    
  409b14:	out    0x3a,eax
  409b16:	pop    esp
  409b17:	xor    dl,BYTE PTR [edx-0x55ea8a97]
  409b1d:	xchg   edx,eax
  409b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b1f:	xchg   esi,eax
  409b20:	dec    esi
  409b21:	dec    ebp
  409b22:	push   esi
  409b23:	test   BYTE PTR [ecx+ecx*4+0x6486e7ac],0xd6
  409b2b:	and    DWORD PTR [esi+0x4965d904],edx
  409b31:	push   eax
  409b32:	fwait
  409b33:	adc    BYTE PTR [ecx],cl
  409b35:	jecxz  0x409b11
  409b37:	and    ah,BYTE PTR [edx]
  409b39:	xor    ebx,DWORD PTR [edi-0x69]
  409b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3d:	mov    eax,ds:0xd839815b
  409b42:	xchg   BYTE PTR [ecx+0x7aad90e6],bh
  409b48:	cwde   
  409b49:	and    DWORD PTR [esi],0xd3b5d2a2
  409b4f:	mov    dh,cl
  409b51:	scas   al,BYTE PTR es:[edi]
  409b52:	xor    BYTE PTR [edi],al
  409b54:	fiadd  WORD PTR [esi]
  409b56:	dec    eax
  409b57:	sti    
  409b58:	clc    
  409b59:	pop    edi
  409b5a:	gs mov ah,0xd0
  409b5d:	(bad)  [eax-0x76763dd5]
  409b63:	inc    DWORD PTR gs:[edi-0x454b6abc]
  409b6a:	ret    
  409b6b:	stc    
  409b6c:	mov    ebp,0x52f384
  409b71:	fwait
  409b72:	sbb    bh,0x8e
  409b75:	mov    es,WORD PTR [eax+0x41]
  409b78:	sub    dh,BYTE PTR [edx-0x34814064]
  409b7e:	popf   
  409b7f:	cmp    dh,BYTE PTR [eax-0x44f399c2]
  409b85:	je     0x409b1a
  409b87:	mov    dh,0x6d
  409b89:	pop    ds
  409b8a:	sbb    BYTE PTR [ecx+eax*8-0x9],0xb1
  409b8f:	push   0x27275d4a
  409b94:	data16 jl 0x409b6d
  409b97:	push   ebp
  409b98:	xor    BYTE PTR [edx],ah
  409b9a:	xchg   edx,eax
  409b9b:	bound  ecx,QWORD PTR [esi-0x71]
  409b9e:	fld    QWORD PTR [edx]
  409ba0:	mov    fs,WORD PTR [eax]
  409ba2:	test   BYTE PTR [eax],bh
  409ba4:	pop    ss
  409ba5:	inc    ebp
  409ba6:	sbb    eax,0xa3a9f0ea
  409bab:	pop    ds
  409bac:	pop    esi
  409bad:	dec    eax
  409bae:	fldenv [edi+0xb]
  409bb1:	mov    WORD PTR [ebp+0x56e889c8],es
  409bb7:	pop    ds
  409bb8:	imul   cl
  409bba:	(bad)  
  409bbb:	dec    esp
  409bbc:	rcl    BYTE PTR [ebx+0x1a678c51],cl
  409bc2:	dec    esp
  409bc3:	nop
  409bc4:	dec    edx
  409bc5:	push   eax
  409bc6:	dec    ecx
  409bc7:	in     al,dx
  409bc8:	push   ecx
  409bc9:	cmp    DWORD PTR [eax+ecx*8-0xb],ecx
  409bcd:	adc    al,0xc2
  409bcf:	(bad)  
  409bd0:	mov    esp,0x6ff1911b
  409bd5:	inc    ebp
  409bd6:	sbb    DWORD PTR [ecx+esi*1+0x7be19966],eax
  409bdd:	xchg   ebp,eax
  409bde:	pusha  
  409bdf:	cmp    al,0xb2
  409be1:	in     eax,dx
  409be2:	xor    eax,0x1a931c48
  409be7:	data16 mov ds:0xeefdf4ab,al
  409bed:	sub    ecx,DWORD PTR [edx]
  409bef:	in     al,dx
  409bf0:	and    DWORD PTR [ebp+eiz*2+0x6a],ebx
  409bf4:	adc    edi,DWORD PTR [edi-0x30]
  409bf7:	xchg   edx,eax
  409bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf9:	pusha  
  409bfa:	jl     0x409c6e
  409bfc:	repnz fsubr DWORD PTR [edx+edi*1+0x48]
  409c01:	sub    al,0xc0
  409c03:	sbb    DWORD PTR [edi],edi
  409c05:	repz jg 0x409b92
  409c08:	nop
  409c09:	popf   
  409c0a:	retf   
  409c0b:	jle    0x409bbd
  409c0d:	sbb    dl,BYTE PTR [edx+0x2a]
  409c10:	push   ecx
  409c11:	fwait
  409c12:	in     al,0x9
  409c14:	push   ss
  409c15:	sub    BYTE PTR [esi-0x5462506e],al
  409c1b:	inc    ecx
  409c1c:	test   eax,0x6b3fa6da
  409c21:	test   ebp,0x72997e2c
  409c27:	fdiv   st,st(0)
  409c29:	xchg   edi,eax
  409c2a:	popf   
  409c2b:	add    ebp,ebp
  409c2d:	cdq    
  409c2e:	push   eax
  409c2f:	jle    0x409c7d
  409c31:	out    dx,eax
  409c32:	(bad)  
  409c33:	inc    ebp
  409c34:	cmp    al,0x5
  409c36:	stos   DWORD PTR es:[edi],eax
  409c37:	in     al,dx
  409c38:	push   ebx
  409c39:	add    edi,DWORD PTR [ebx]
  409c3b:	push   eax
  409c3c:	mov    dl,0xa3
  409c3e:	jle    0x409ca2
  409c40:	pop    ecx
  409c41:	bound  esp,QWORD PTR [ecx-0x37]
  409c44:	push   es
  409c45:	jbe    0x409c3c
  409c47:	sub    cx,WORD PTR [ebp-0x47]
  409c4b:	xchg   BYTE PTR [esi+0x57],cl
  409c4e:	mov    eax,0xfed5a9c6
  409c54:	inc    edi
  409c55:	pop    ss
  409c56:	test   BYTE PTR [edi],bh
  409c58:	shr    BYTE PTR [edi-0x5b4d1aea],1
  409c5e:	cs sbb edi,esp
  409c61:	mov    ah,0x8b
  409c63:	pop    ebp
  409c64:	out    dx,eax
  409c65:	or     BYTE PTR [esp+ebx*4-0x6dae5a03],cl
  409c6c:	adc    al,0xf9
  409c6e:	xor    BYTE PTR [ebx-0x7c],0x14
  409c72:	das    
  409c73:	pop    eax
  409c74:	xor    BYTE PTR [eax+0x8],0x95
  409c78:	inc    ebx
  409c79:	push   es
  409c7a:	add    dh,BYTE PTR [ebx-0x67]
  409c7d:	push   ebx
  409c7e:	push   edx
  409c7f:	sahf   
  409c80:	inc    ebx
  409c81:	push   ebx
  409c82:	fs inc edx
  409c84:	fcmovu st,st(6)
  409c86:	cmp    ebx,DWORD PTR [eax-0x655abfb6]
  409c8c:	xor    bl,BYTE PTR [eax-0xd]
  409c8f:	mov    ah,BYTE PTR [edx+0x6]
  409c92:	pop    edi
  409c93:	add    DWORD PTR [edi+0x15],edx
  409c96:	shr    ebp,cl
  409c98:	inc    ebp
  409c99:	test   BYTE PTR [ebx-0x6b],0x69
  409c9d:	fstp   DWORD PTR [ebp-0x4e]
  409ca0:	mov    al,0x9f
  409ca2:	xor    BYTE PTR [ebx],al
  409ca4:	inc    edi
  409ca5:	jbe    0x409c50
  409ca7:	in     al,dx
  409ca8:	mov    edx,0xba829b1c
  409cad:	call   0x9bd:0x59afc588
  409cb4:	mov    edi,0xe98aa551
  409cb9:	ret    0x63e2
  409cbc:	test   al,0x78
  409cbe:	xchg   edx,eax
  409cbf:	jns    0x409c81
  409cc1:	adc    bh,ah
  409cc3:	adc    eax,0x50dce192
  409cc8:	add    BYTE PTR [eax-0x5aa696fb],dh
  409cce:	fwait
  409ccf:	retf   
  409cd0:	pop    esp
  409cd1:	mov    edi,0xec09480a
  409cd6:	retf   
  409cd7:	mov    edx,DWORD PTR [edx-0x71455424]
  409cdd:	into   
  409cde:	adc    dl,BYTE PTR [esi-0x1c9a3cc4]
  409ce4:	loop   0x409c94
  409ce6:	lock xor al,0x87
  409ce9:	loope  0x409ca7
  409ceb:	je     0x409d34
  409ced:	ins    BYTE PTR es:[edi],dx
  409cee:	into   
  409cef:	xlat   BYTE PTR ds:[ebx]
  409cf0:	out    dx,eax
  409cf1:	jae    0x409ca2
  409cf3:	xor    al,0x95
  409cf5:	in     al,0x8b
  409cf7:	je     0x409ca2
  409cf9:	pop    edx
  409cfa:	mov    bl,0x17
  409cfc:	ds add esp,eax
  409cff:	das    
  409d00:	jns    0x409c83
  409d02:	add    DWORD PTR [edx+0x6308ecdd],ecx
  409d08:	cs pop ebp
  409d0a:	mov    dh,0xd3
  409d0c:	fwait
  409d0d:	mov    ebx,0x896163ff
  409d12:	arpl   WORD PTR [edx+0x266f8b00],bx
  409d18:	xlat   BYTE PTR ds:[ebx]
  409d19:	repz jo 0x409d51
  409d1c:	pop    ebx
  409d1d:	mov    BYTE PTR [edi+eiz*1-0x16251a16],0xe9
  409d25:	push   0xdeb37483
  409d2a:	cmp    BYTE PTR [ecx-0x1d],0x23
  409d2e:	mov    dh,0x5d
  409d30:	xchg   ebp,eax
  409d31:	push   0xe6c15f85
  409d36:	ror    BYTE PTR [ebx],0xd6
  409d39:	mov    dl,0x69
  409d3b:	cmp    ebx,DWORD PTR [esi-0x2d97bfef]
  409d41:	mov    esi,0x7fa3ebb
  409d46:	jo     0x409cff
  409d48:	(bad)  
  409d49:	or     esi,ebp
  409d4b:	(bad)
  409d4e:	stos   DWORD PTR es:[edi],eax
  409d4f:	cmc    
  409d50:	in     eax,0x20
  409d52:	xchg   ebp,eax
  409d53:	out    0x1,eax
  409d55:	sbb    ebp,DWORD PTR [eax-0x387ea02]
  409d5b:	scas   al,BYTE PTR es:[edi]
  409d5c:	adc    eax,0x9f2aaa14
  409d61:	cmp    esi,ebp
  409d63:	stos   DWORD PTR es:[edi],eax
  409d64:	mov    edx,0x4979c46e
  409d69:	rol    BYTE PTR [esi],0x2f
  409d6c:	xchg   DWORD PTR [edi],edx
  409d6e:	shr    BYTE PTR [edx+ecx*4-0x49],0x63
  409d73:	pop    es
  409d74:	cmp    al,0xb5
  409d76:	outs   dx,BYTE PTR ds:[esi]
  409d77:	xor    al,0x4c
  409d79:	aaa    
  409d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d7b:	idiv   DWORD PTR [edi]
  409d7d:	mov    ebp,0xf5da70fd
  409d82:	in     al,0x2f
  409d84:	retf   
  409d85:	push   edi
  409d86:	cmp    eax,0x804d6ef
  409d8b:	push   esp
  409d8c:	repnz cmp DWORD PTR [ecx-0x3],esi
  409d90:	mov    al,BYTE PTR [ebx]
  409d92:	or     BYTE PTR [esi-0x2f2068ae],ah
  409d98:	imul   ebx,DWORD PTR [edi-0x5a8cda37],0x21
  409d9f:	mov    edi,0x9d684b58
  409da4:	test   DWORD PTR [eax-0x44baea1],ebp
  409daa:	cmpxchg BYTE PTR [eax-0x47],ch
  409dae:	jl     0x409d4c
  409db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db1:	call   0x71cc1ecc
  409db6:	lock out 0x2,al
  409db9:	call   0xe1aae95d
  409dbe:	fcom   QWORD PTR cs:[esi+0x4649649e]
  409dc5:	pushf  
  409dc6:	rcr    DWORD PTR [eax+0x11],0x17
  409dca:	xchg   esi,eax
  409dcb:	inc    ebp
  409dcc:	or     ecx,esi
  409dce:	ds xchg ebp,eax
  409dd0:	inc    ecx
  409dd1:	push   ds
  409dd2:	es (bad) 
  409dd4:	(bad)  
  409dd5:	sbb    al,0xb9
  409dd7:	clc    
  409dd8:	mov    bh,BYTE PTR [ebx-0x5a55526c]
  409dde:	loope  0x409dd2
  409de0:	pop    esp
  409de1:	cmp    BYTE PTR [ecx],0x2e
  409de4:	repz es into 
  409de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de8:	(bad)  
  409de9:	or     al,0x54
  409deb:	mov    eax,0x2ac43fd4
  409df0:	bound  edi,QWORD PTR [esi+0x75]
  409df3:	cld    
  409df4:	(bad)  
  409df5:	(bad)  
  409df6:	div    DWORD PTR [eax]
  409df8:	aas    
  409df9:	cwde   
  409dfa:	test   eax,0x2598953
  409dff:	mov    al,0x29
  409e01:	sahf   
  409e02:	test   eax,0x65589b91
  409e07:	in     al,0x90
  409e09:	sub    eax,0x758ce228
  409e0e:	jmp    0x409ded
  409e10:	pop    edi
  409e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e12:	ja     0x409da9
  409e14:	and    al,0xf5
  409e16:	out    dx,al
  409e17:	jne    0x409e62
  409e19:	xlat   BYTE PTR ds:[ebx]
  409e1a:	mov    ds:0x43c84f7b,eax
  409e1f:	ja     0x409e92
  409e21:	and    DWORD PTR [esi+0x7bf1dac3],ebx
  409e27:	jnp    0x9dd88d7e
  409e2d:	stc    
  409e2e:	jge    0x409e2f
  409e30:	dec    edx
  409e31:	scas   eax,DWORD PTR es:[edi]
  409e32:	ror    DWORD PTR [ecx],1
  409e34:	rol    al,1
  409e36:	out    0xd8,al
  409e38:	lods   eax,DWORD PTR ds:[esi]
  409e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e3b:	jbe    0x409e91
  409e3d:	pop    ebp
  409e3e:	mov    edx,0xd3e44f13
  409e43:	mov    ecx,0xd110189f
  409e48:	push   edx
  409e49:	jge    0x409ec3
  409e4b:	ss inc ebx
  409e4d:	add    BYTE PTR [edi-0x5c],bl
  409e50:	adc    eax,0x9c76ae69
  409e55:	add    al,0x5f
  409e57:	mov    bl,0x9c
  409e59:	inc    edi
  409e5a:	lods   al,BYTE PTR ds:[esi]
  409e5b:	push   ebx
  409e5c:	adc    al,0xf3
  409e5e:	dec    ecx
  409e5f:	push   ebp
  409e60:	xchg   edx,eax
  409e61:	push   esp
  409e62:	jmp    DWORD PTR [eax-0x5e32deb5]
  409e68:	xchg   esi,eax
  409e69:	cli    
  409e6a:	sbb    al,0xd8
  409e6c:	leave  
  409e6d:	dec    ebx
  409e6e:	stc    
  409e6f:	adc    BYTE PTR [ebp+0x4325eaf0],al
  409e75:	(bad)  
  409e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e77:	or     BYTE PTR [ebp-0x79431fcb],bl
  409e7d:	xchg   ebx,eax
  409e7e:	rol    BYTE PTR [ebp+0x25eac8e6],cl
  409e84:	push   0xcda9ef74
  409e89:	mov    ebx,0x82b7489a
  409e8e:	mov    bh,0xab
  409e90:	popa   
  409e91:	hlt    
  409e92:	sub    ch,BYTE PTR [edx]
  409e94:	test   DWORD PTR [eax],ecx
  409e96:	mov    edx,0x7f687cad
  409e9b:	add    esi,ebx
  409e9d:	test   BYTE PTR [ebx],ah
  409e9f:	mov    al,0x79
  409ea1:	test   ebx,esi
  409ea3:	aam    0xcf
  409ea5:	pop    ecx
  409ea6:	es sbb al,0x7e
  409ea9:	jmp    FWORD PTR [esi]
  409eab:	push   ebp
  409eac:	pop    ecx
  409ead:	aas    
  409eae:	add    DWORD PTR [edi],ebp
  409eb0:	mov    ds:0x4f44e243,al
  409eb5:	mov    ?,WORD PTR [eax+0x5ade0c16]
  409ebb:	test   eax,0x880fd10c
  409ec0:	jb     0x409f10
  409ec2:	jmp    0xf4b6de76
  409ec7:	sub    DWORD PTR [esi+0x35dc764e],esi
  409ecd:	mov    eax,ds:0x6d01b498
  409ed2:	fldcw  WORD PTR [edi+0x77]
  409ed5:	dec    DWORD PTR [ecx+0x1d6976fa]
  409edb:	call   0xed8020e4
  409ee0:	pop    edi
  409ee1:	repnz fild WORD PTR [eax+edi*2]
  409ee5:	daa    
  409ee6:	add    al,0x22
  409ee8:	int    0x41
  409eea:	xor    BYTE PTR [eax+0x3fd1384b],0xcd
  409ef1:	lea    ecx,[esi]
  409ef3:	repz xor edx,DWORD PTR [ebp+0x5b]
  409ef7:	fidivr DWORD PTR [ecx]
  409ef9:	ds mov edx,0xfea90cf4
  409eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f00:	jo     0x409f57
  409f02:	cmc    
  409f03:	fdivr  st(6),st
  409f05:	dec    ebx
  409f06:	outs   dx,BYTE PTR ds:[esi]
  409f07:	pushf  
  409f08:	sub    BYTE PTR [edi],al
  409f0a:	stos   DWORD PTR es:[edi],eax
  409f0b:	shl    DWORD PTR [ebx-0x65],1
  409f0e:	sbb    ecx,DWORD PTR [ebx-0x6cdea078]
  409f14:	leave  
  409f15:	mov    dl,BYTE PTR [esi-0x3]
  409f18:	mov    ds:0xc6b1a337,al
  409f1d:	shl    DWORD PTR [esi+0x7e8111e3],0x74
  409f24:	cmp    cl,BYTE PTR ds:0x9495cb26
  409f2a:	fiadd  DWORD PTR [esi-0x47]
  409f2d:	cmp    eax,0x564f9849
  409f32:	cmp    eax,0xdce6b292
  409f37:	popa   
  409f38:	ins    DWORD PTR es:[edi],dx
  409f39:	dec    ecx
  409f3a:	jne    0x409f2e
  409f3c:	in     eax,0xcd
  409f3e:	mov    edi,0xb323b097
  409f43:	mov    ebx,0x8f7c9ece
  409f48:	xchg   ebp,eax
  409f49:	push   ebx
  409f4a:	mov    dh,0x60
  409f4c:	xchg   edx,eax
  409f4d:	retf   0x7936
  409f50:	dec    ebp
  409f51:	inc    edx
  409f52:	fmul   st,st(4)
  409f54:	add    esp,ebp
  409f56:	lea    ecx,[edx+esi*4]
  409f59:	sbb    eax,0xec5c43a9
  409f5e:	les    edx,FWORD PTR [edx+eax*4+0x50139b38]
  409f65:	aad    0x6d
  409f67:	lods   al,BYTE PTR ds:[esi]
  409f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f69:	fs mov ch,0x5d
  409f6c:	mov    BYTE PTR [esp+eax*8-0x42],dl
  409f70:	cmp    BYTE PTR [ebp-0x7b],ah
  409f73:	xor    al,0x74
  409f75:	sbb    BYTE PTR [ebp+0x4e0058d0],ah
  409f7b:	je     0x409ff3
  409f7d:	lods   al,BYTE PTR ds:[esi]
  409f7e:	cwde   
  409f7f:	dec    ecx
  409f80:	and    BYTE PTR [edi+0x354a45ba],ah
  409f86:	push   ebx
  409f87:	call   0x425d56e1
  409f8c:	ror    DWORD PTR ds:0xcb2e9c30,1
  409f92:	mov    esp,0x50e3ae8e
  409f97:	jnp    0x409ff8
  409f99:	outs   dx,BYTE PTR ds:[esi]
  409f9a:	pop    ebx
  409f9b:	pop    eax
  409f9c:	sub    edx,ebx
  409f9e:	cli    
  409f9f:	or     eax,0xb27eaf5b
  409fa4:	mov    ds:0xf5b1e7e0,al
  409fa9:	in     al,0xc0
  409fab:	bound  ecx,QWORD PTR [edi]
  409fad:	fisttp WORD PTR [edx-0x6f]
  409fb0:	imul   eax,DWORD PTR [esi-0x18],0xa1f3e380
  409fb7:	mov    ds:0xfbd2e114,eax
  409fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fbd:	add    eax,0x128b2ae2
  409fc2:	dec    esp
  409fc3:	loop   0x40a01a
  409fc5:	lods   al,BYTE PTR ds:[esi]
  409fc6:	test   eax,0x4d9b545a
  409fcb:	enter  0xc4bc,0x83
  409fcf:	aam    0x1c
  409fd1:	jecxz  0x409f86
  409fd3:	cmp    cl,BYTE PTR [edx-0x78]
  409fd6:	fidivr DWORD PTR fs:[eax+ecx*4+0x5bcb346d]
  409fde:	loope  0x409f94
  409fe0:	loop   0x40a026
  409fe2:	pushf  
  409fe3:	xchg   BYTE PTR [ecx+0x7fd7f42b],cl
  409fe9:	fcomp  DWORD PTR [ecx+0x39ee2db1]
  409fef:	mov    eax,ds:0x4f550956
  409ff4:	call   0x191b:0x4c15d1d4
  409ffb:	lods   eax,DWORD PTR ds:[esi]
  409ffc:	lock stc 
  409ffe:	fild   DWORD PTR [eax]
  40a000:	push   esp
  40a001:	cwde   
  40a002:	gs in  al,0xcf
  40a005:	into   
  40a006:	mov    esi,0x22b43009
  40a00b:	in     eax,dx
  40a00c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a00d:	or     DWORD PTR [ecx+eax*4-0x483c3bb1],esp
  40a014:	(bad)  
  40a015:	xor    BYTE PTR [eax-0x3acec0b6],ah
  40a01b:	fdiv   QWORD PTR [edi+0x67]
  40a01e:	out    0x3,eax
  40a020:	cwde   
  40a021:	test   BYTE PTR [edx+0x60],ah
  40a024:	or     ah,BYTE PTR [edx]
  40a026:	iret   
  40a027:	into   
  40a028:	inc    esi
  40a029:	imul   esi,eax,0x63
  40a02c:	es pop esp
  40a02e:	fimul  WORD PTR [ecx]
  40a030:	(bad)  
  40a031:	loopne 0x40a086
  40a033:	xchg   dh,bh
  40a035:	out    0xd5,al
  40a037:	jno    0x40a07c
  40a039:	sbb    BYTE PTR [eax+0x3],dh
  40a03c:	call   0x50168756
  40a041:	inc    edi
  40a042:	inc    ebx
  40a043:	mov    eax,cs
  40a045:	pop    ds
  40a046:	or     esp,ecx
  40a048:	shr    dh,1
  40a04a:	add    DWORD PTR [edi-0x31],edi
  40a04d:	sbb    DWORD PTR [ecx+ebx*4],ebx
  40a050:	imul   ebp,DWORD PTR [esi+0x5c],0xffffff89
  40a054:	xchg   BYTE PTR [ecx-0x1f5a0e3],cl
  40a05a:	mov    ds:0xf3b6e527,eax
  40a05f:	test   eax,0xa044a134
  40a064:	imul   ebp,DWORD PTR [esi],0xca422a49
  40a06a:	(bad)  
  40a06c:	jp     0x40a064
  40a06e:	mov    dl,al
  40a070:	inc    ecx
  40a071:	or     BYTE PTR [ebp+0x105e4587],ah
  40a077:	mov    edi,0x9392165e
  40a07c:	dec    edx
  40a07d:	rol    BYTE PTR [esi+0xb121537],1
  40a083:	push   ecx
  40a084:	pop    edx
  40a085:	push   edx
  40a086:	and    ebp,esp
  40a088:	loop   0x40a045
  40a08a:	popf   
  40a08b:	or     ebp,eax
  40a08d:	pop    esi
  40a08e:	das    
  40a08f:	xor    edx,DWORD PTR [edi]
  40a091:	mov    bh,0x0
  40a093:	enter  0xe908,0x7e
  40a097:	into   
  40a098:	jne    0x40a048
  40a09a:	sbb    BYTE PTR [esi-0x2bb170bd],0x6
  40a0a1:	push   ebx
  40a0a2:	in     al,0xd5
  40a0a4:	push   es
  40a0a5:	sub    WORD PTR [edx+0x3a059ab],di
  40a0ac:	shl    DWORD PTR fs:[edi+0x33987222],0xca
  40a0b4:	sbb    bh,BYTE PTR [esi+0x49b77b78]
  40a0ba:	jle    0x40a134
  40a0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0bd:	mov    esp,0x2029aa67
  40a0c2:	mov    DWORD PTR [eax],edx
  40a0c4:	push   edx
  40a0c5:	cs call 0xa6816174
  40a0cb:	ins    BYTE PTR es:[edi],dx
  40a0cc:	(bad)  
  40a0cd:	sbb    DWORD PTR [edx-0x7b],edx
  40a0d0:	stos   DWORD PTR es:[edi],eax
  40a0d1:	loope  0x40a142
  40a0d3:	sbb    ch,dh
  40a0d5:	xor    ebx,esi
  40a0d7:	(bad)  
  40a0d8:	jecxz  0x40a135
  40a0da:	hlt    
  40a0db:	in     eax,0x7b
  40a0dd:	es or  eax,0xbd755731
  40a0e3:	daa    
  40a0e4:	inc    esp
  40a0e5:	cmp    eax,DWORD PTR [ecx-0x29]
  40a0e8:	and    al,0x7a
  40a0ea:	cmp    ch,BYTE PTR [ecx+ebp*4-0x38]
  40a0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ef:	iret   
  40a0f0:	cwde   
  40a0f1:	popf   
  40a0f2:	ins    BYTE PTR es:[edi],dx
  40a0f3:	xor    eax,0x2ce1ab5b
  40a0f8:	xor    bl,dh
  40a0fa:	repnz cld 
  40a0fc:	arpl   WORD PTR [ecx],ax
  40a0fe:	adc    al,BYTE PTR [esi+0x381caad2]
  40a104:	pop    eax
  40a105:	jmp    0xf87c3079
  40a10a:	lds    ecx,FWORD PTR [edi+0x67]
  40a10d:	push   ds
  40a10e:	fist   WORD PTR [esi+edi*2+0xc8666fc]
  40a115:	xchg   edi,eax
  40a116:	cwde   
  40a117:	jp     0x40a12b
  40a119:	std    
  40a11a:	xchg   ebp,eax
  40a11b:	jo     0x40a0f0
  40a11d:	in     al,dx
  40a11e:	retf   
  40a11f:	sbb    bl,BYTE PTR [edx+0x25707cc1]
  40a125:	into   
  40a126:	loop   0x40a0eb
  40a128:	imul   DWORD PTR [ebx]
  40a12a:	dec    ecx
  40a12b:	jle    0x40a16e
  40a12d:	inc    esp
  40a12e:	mov    ds:0xa73480d9,eax
  40a133:	add    al,0x57
  40a135:	(bad)  
  40a136:	mov    ds:0xf244832e,eax
  40a13b:	outs   dx,BYTE PTR ds:[esi]
  40a13c:	je     0x40a16a
  40a13e:	fistp  DWORD PTR [edi+ecx*2-0x70]
  40a142:	icebp  
  40a143:	xchg   ebp,eax
  40a144:	in     al,0xec
  40a146:	aaa    
  40a147:	iret   
  40a148:	popa   
  40a149:	inc    esp
  40a14a:	inc    ebp
  40a14b:	in     al,0x68
  40a14d:	mov    ds:0xa2f9fce7,al
  40a152:	xchg   ecx,eax
  40a153:	call   0x9295:0x60d0817b
  40a15a:	cld    
  40a15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a15d:	in     eax,dx
  40a15e:	push   ebp
  40a15f:	mov    edi,0x4d4cb94c
  40a164:	mov    ecx,0xebf1fb26
  40a169:	xchg   ebx,eax
  40a16a:	aas    
  40a16b:	outs   dx,DWORD PTR ds:[esi]
  40a16c:	push   ss
  40a16d:	repz popa 
  40a16f:	cmp    BYTE PTR [edi],bl
  40a171:	int3   
  40a172:	and    dl,bl
  40a174:	out    0xbb,eax
  40a176:	into   
  40a177:	add    eax,0x7d323c03
  40a17c:	jnp    0x40a1eb
  40a17e:	mov    ah,0x73
  40a180:	mov    eax,es
  40a182:	ins    BYTE PTR es:[edi],dx
  40a183:	pop    ebx
  40a184:	(bad)  
  40a186:	js     0x40a1e4
  40a188:	(bad)  
  40a18a:	adc    al,0x64
  40a18c:	adc    eax,ebx
  40a18e:	adc    BYTE PTR [ebp+0x28],0x72
  40a192:	in     al,0x69
  40a194:	sbb    DWORD PTR [edi+0xc59b694],0x5a
  40a19b:	adc    al,0xf3
  40a19d:	add    DWORD PTR [edi],esp
  40a19f:	mov    WORD PTR [edx+ebx*4-0x18161ec4],es
  40a1a6:	aam    0xf3
  40a1a8:	int    0x8f
  40a1aa:	push   es
  40a1ab:	leave  
  40a1ac:	fstp   TBYTE PTR [edx+eiz*1+0x2f]
  40a1b0:	repnz dec ebp
  40a1b2:	jmp    0x40a1da
  40a1b4:	nop
  40a1b5:	out    0x24,eax
  40a1b7:	sti    
  40a1b8:	add    al,0xc1
  40a1ba:	add    BYTE PTR [ebx-0x27],dh
  40a1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1be:	mov    cl,0xe4
  40a1c0:	loop   0x40a185
  40a1c2:	jp     0x40a240
  40a1c4:	jns    0x40a22c
  40a1c6:	jb     0x40a1b1
  40a1c8:	loope  0x40a16d
  40a1ca:	fxch   st(7)
  40a1cc:	push   eax
  40a1cd:	shl    BYTE PTR [esi],cl
  40a1cf:	dec    ecx
  40a1d0:	je     0x40a192
  40a1d2:	test   eax,0xee352f8e
  40a1d7:	lea    edi,[ebx+0x65]
  40a1da:	lock out dx,eax
  40a1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1dd:	or     BYTE PTR [ecx+0x2379e0c],dh
  40a1e3:	mov    al,0x4e
  40a1e5:	out    dx,al
  40a1e6:	fistp  DWORD PTR ds:0xf017b9d6
  40a1ec:	rcr    BYTE PTR [eax],0xbb
  40a1ef:	add    eax,0x6c1f5ffc
  40a1f4:	xchg   edi,eax
  40a1f5:	and    edi,0xb5bfa27d
  40a1fb:	dec    edi
  40a1fc:	je     0x40a244
  40a1fe:	out    0xe8,eax
  40a200:	mov    BYTE PTR [ecx-0x119f921f],bh
  40a206:	(bad)  
  40a207:	push   0x45f37ffe
  40a20c:	inc    esi
  40a20d:	push   cs
  40a20e:	test   DWORD PTR [ebp+0x61],ecx
  40a211:	sub    al,0x27
  40a213:	cmp    al,0x39
  40a215:	in     eax,dx
  40a216:	sub    DWORD PTR [esi],edi
  40a218:	(bad)
  40a21b:	nop
  40a21c:	loope  0x40a27d
  40a21e:	daa    
  40a21f:	cs cdq 
  40a221:	xchg   ebx,eax
  40a222:	jge    0x40a248
  40a224:	dec    ebx
  40a225:	int    0x42
  40a227:	stc    
  40a228:	rol    DWORD PTR [ecx-0x14],1
  40a22b:	adc    eax,DWORD PTR [ebx]
  40a22d:	std    
  40a22e:	xor    eax,0xa1fdf908
  40a233:	mov    edi,0xc8ab75e5
  40a238:	dec    esi
  40a239:	xchg   esp,eax
  40a23a:	or     eax,0x3883adc6
  40a23f:	sbb    ebp,DWORD PTR [eax]
  40a241:	les    eax,FWORD PTR [ebp-0x46291fa1]
  40a247:	mov    bl,0x15
  40a249:	mov    ch,0x6d
  40a24b:	jge    0x40a2ca
  40a24d:	xchg   esp,eax
  40a24e:	pushf  
  40a24f:	fsubr  QWORD PTR [ebp+0x7a99278c]
  40a255:	sub    BYTE PTR [ecx+0x39],bh
  40a258:	shr    BYTE PTR [ebp-0x6f],cl
  40a25b:	mov    ebx,0xe2dc0357
  40a260:	add    ebp,ebx
  40a262:	or     al,BYTE PTR [esi-0x28370c55]
  40a268:	xchg   esp,edi
  40a26a:	mov    ds:0x7c3b748f,al
  40a26f:	fwait
  40a270:	sahf   
  40a271:	pop    eax
  40a272:	or     DWORD PTR [ebp+eax*8-0x3e],eax
  40a276:	arpl   WORD PTR [edx],bx
  40a278:	push   eax
  40a279:	stos   BYTE PTR es:[edi],al
  40a27a:	xchg   esp,eax
  40a27b:	mov    edi,fs
  40a27d:	xchg   edi,eax
  40a27e:	xchg   DWORD PTR [ebx+0x65],ebp
  40a281:	lea    ebp,[eax+0x30]
  40a284:	jg     0x40a28b
  40a286:	sub    ah,BYTE PTR [ecx]
  40a288:	pop    es
  40a289:	icebp  
  40a28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a28b:	rcr    DWORD PTR [ecx+0x33],0xe5
  40a28f:	adc    BYTE PTR [ecx+0x35],ah
  40a292:	stos   BYTE PTR es:[edi],al
  40a293:	retf   
  40a294:	out    0xd1,eax
  40a296:	arpl   di,si
  40a298:	mov    ecx,0xde55466f
  40a29d:	sbb    al,0x8a
  40a29f:	mov    edx,0x9df615c2
  40a2a4:	iret   
  40a2a5:	jmp    FWORD PTR [edx-0x5b170804]
  40a2ab:	stos   BYTE PTR es:[edi],al
  40a2ac:	dec    edi
  40a2ad:	sbb    al,0x32
  40a2af:	sbb    ch,cl
  40a2b1:	add    al,BYTE PTR [ecx]
  40a2b3:	pop    ebx
  40a2b4:	add    eax,0x8722b3a1
  40a2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ba:	outs   dx,BYTE PTR ds:[esi]
  40a2bb:	call   0x42e65119
  40a2c0:	mov    fs,WORD PTR [edi]
  40a2c2:	or     al,0xc3
  40a2c4:	xor    dl,BYTE PTR ds:0x13927944
  40a2ca:	adc    esi,ecx
  40a2cc:	repz (bad) 
  40a2ce:	rcr    DWORD PTR [esi+0x4c15550f],1
  40a2d4:	std    
  40a2d5:	pop    ss
  40a2d6:	add    al,0xf9
  40a2d8:	in     eax,0xf3
  40a2da:	jmp    0xca3b:0xb08534d7
  40a2e1:	mov    ah,0xb5
  40a2e3:	retf   
  40a2e4:	cs fwait
  40a2e6:	pop    es
  40a2e7:	shl    DWORD PTR [esi+0x1ace43b9],0xc0
  40a2ee:	xchg   edx,eax
  40a2ef:	stc    
  40a2f0:	popa   
  40a2f1:	(bad)  
  40a2f2:	in     al,0x6c
  40a2f4:	outs   dx,DWORD PTR ds:[esi]
  40a2f5:	inc    esi
  40a2f6:	dec    esi
  40a2f7:	repnz rcr cl,0xcc
  40a2fb:	gs hlt 
  40a2fd:	dec    edx
  40a2fe:	into   
  40a2ff:	ins    DWORD PTR es:[edi],dx
  40a300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a301:	(bad)  
  40a302:	dec    esi
  40a303:	jnp    0x40a342
  40a305:	push   es
  40a306:	mov    ds:0x7e218004,eax
  40a30b:	sbb    dl,BYTE PTR [edi]
  40a30d:	ret    
  40a30e:	ins    BYTE PTR es:[edi],dx
  40a30f:	mov    esi,0xcafa686d
  40a314:	dec    eax
  40a315:	inc    esi
  40a316:	push   0x18
  40a318:	inc    ebx
  40a319:	dec    edi
  40a31a:	sub    BYTE PTR [edx+0x77f6c240],bh
  40a320:	daa    
  40a321:	lea    edi,[ecx-0x5d75dfc7]
  40a327:	outs   dx,DWORD PTR ds:[esi]
  40a328:	mov    si,0x5aa7
  40a32c:	pop    esi
  40a32d:	scas   al,BYTE PTR es:[edi]
  40a32e:	lahf   
  40a32f:	fs repz mov eax,0x8c953cf5
  40a336:	jo     0x40a399
  40a338:	mov    edx,0x3854266b
  40a33d:	clc    
  40a33e:	(bad)  
  40a33f:	mov    esi,0xd642cf08
  40a344:	xchg   edx,eax
  40a345:	inc    ebx
  40a346:	loopne 0x40a35e
  40a348:	push   ebx
  40a349:	arpl   sp,ax
  40a34b:	xchg   ebp,eax
  40a34c:	pop    ds
  40a34d:	icebp  
  40a34e:	xor    bl,al
  40a350:	cld    
  40a351:	mov    edx,0x232fa935
  40a356:	out    0x3d,eax
  40a358:	cs (bad) 
  40a35a:	mov    eax,0x6360fcbe
  40a35f:	addr16 daa 
  40a361:	xchg   ebp,eax
  40a362:	jne    0x40a3b8
  40a364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a365:	mov    esp,0x82b02d85
  40a36a:	xor    DWORD PTR [ebx-0x2d],ecx
  40a36d:	js     0x40a3ca
  40a36f:	aas    
  40a370:	scas   al,BYTE PTR es:[edi]
  40a371:	arpl   WORD PTR ss:[edi-0x7f],bx
  40a375:	les    edx,FWORD PTR [ebp-0x12]
  40a378:	bound  edx,QWORD PTR [edx+0x6deffbd2]
  40a37e:	inc    ecx
  40a37f:	add    eax,0x38127ffc
  40a384:	not    BYTE PTR [edi-0x18]
  40a387:	inc    ecx
  40a388:	mov    ah,0x37
  40a38a:	imul   edx,ebp,0xc67c8d19
  40a390:	fld    DWORD PTR [edx]
  40a392:	pusha  
  40a393:	jp     0x40a3e9
  40a395:	jmp    0x6703:0xb3815e02
  40a39c:	jmp    0x1f50:0xdef2c867
  40a3a3:	lods   al,BYTE PTR ds:[esi]
  40a3a4:	ret    
  40a3a5:	scas   eax,DWORD PTR es:[edi]
  40a3a6:	and    al,0xfc
  40a3a8:	enter  0x808b,0x12
  40a3ac:	call   0x8525:0xc31424de
  40a3b3:	out    dx,eax
  40a3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3b5:	lahf   
  40a3b6:	xchg   edi,eax
  40a3b7:	push   0xe5ab3c61
  40a3bc:	add    eax,0xe57f9e6c
  40a3c1:	adc    cl,dh
  40a3c3:	(bad)  
  40a3c4:	push   esi
  40a3c5:	rcl    DWORD PTR [edx+0x417f62b7],cl
  40a3cb:	jnp    0x40a357
  40a3cd:	rcl    BYTE PTR [eax],0x25
  40a3d0:	mov    DWORD PTR [esi],esp
  40a3d2:	or     al,0x80
  40a3d4:	(bad)  
  40a3d5:	aas    
  40a3d6:	jmp    0x6748:0xe23c5943
  40a3dd:	adc    al,0x71
  40a3df:	rol    DWORD PTR [edx+edx*4],0x27
  40a3e3:	adc    eax,0x826884d1
  40a3e8:	(bad)  
  40a3e9:	(bad)  
  40a3ea:	adc    al,0xa3
  40a3ec:	mov    ebx,0x8a66aa2b
  40a3f1:	or     cl,BYTE PTR [ebp-0x33888877]
  40a3f7:	aad    0x91
  40a3f9:	push   esp
  40a3fa:	fdiv   QWORD PTR [eax-0x5f]
  40a3fd:	pop    ss
  40a3fe:	jno    0x40a3be
  40a400:	pop    es
  40a401:	mov    ebx,0x842d2b84
  40a406:	sub    dh,dh
  40a408:	dec    eax
  40a409:	cs in  eax,dx
  40a40b:	sub    eax,0x2e967548
  40a410:	into   
  40a411:	xor    BYTE PTR [esi+0x113a26b1],bl
  40a417:	push   ecx
  40a418:	xchg   edi,eax
  40a419:	das    
  40a41a:	sar    DWORD PTR [esi+0x1c],1
  40a41d:	dec    ebp
  40a41e:	call   DWORD PTR [ecx+0x74]
  40a421:	fisttp QWORD PTR [ecx-0x45]
  40a424:	daa    
  40a425:	push   esi
  40a426:	mov    BYTE PTR [ecx-0x69603446],0xf7
  40a42d:	rcpps  xmm3,xmm0
  40a430:	xchg   edi,eax
  40a431:	push   edi
  40a432:	into   
  40a433:	or     ecx,DWORD PTR [ebx]
  40a435:	stos   DWORD PTR es:[edi],eax
  40a436:	pop    edi
  40a437:	add    eax,0x8392ac3b
  40a43c:	lods   eax,DWORD PTR ds:[esi]
  40a43d:	(bad)  
  40a43e:	dec    esi
  40a43f:	xchg   ebp,eax
  40a440:	lock dec eax
  40a442:	pop    edi
  40a443:	xchg   BYTE PTR [esi-0x75],ch
  40a446:	ffreep st(4)
  40a448:	ret    
  40a449:	out    dx,eax
  40a44a:	stos   DWORD PTR es:[edi],eax
  40a44b:	adc    bl,BYTE PTR [ecx-0x53]
  40a44e:	inc    ebx
  40a44f:	out    dx,eax
  40a450:	mov    ds:0x20fc7467,eax
  40a455:	jmp    0x40a4ab
  40a457:	daa    
  40a458:	out    dx,al
  40a459:	fnstenv [eax+0x17]
  40a45c:	mov    dl,0xee
  40a45e:	dec    edx
  40a45f:	push   esi
  40a460:	iret   
  40a461:	jnp    0x40a4d2
  40a463:	in     eax,0x8c
  40a465:	push   eax
  40a466:	mov    esi,0xf8a08e46
  40a46b:	push   edi
  40a46c:	aam    0xc
  40a46e:	test   al,0x45
  40a470:	mov    ebp,0xa008f4e
  40a475:	repz ds or ebp,edx
  40a479:	std    
  40a47a:	or     eax,0x72502321
  40a47f:	push   edi
  40a480:	test   BYTE PTR [edi-0x8a7e6eb],0x75
  40a487:	les    edx,FWORD PTR [ebx+0x474f3663]
  40a48d:	jae    0x40a46c
  40a48f:	mov    ds:0x5c946957,al
  40a494:	mov    ebp,0xdedc3c26
  40a499:	push   esi
  40a49a:	mov    edi,0x14f4d233
  40a49f:	loop   0x40a470
  40a4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a2:	or     ecx,ebx
  40a4a4:	popf   
  40a4a5:	mov    ch,0xbb
  40a4a7:	or     edx,DWORD PTR [esi+0x15f42e92]
  40a4ad:	ds cli 
  40a4af:	and    dl,cl
  40a4b1:	ja     0x40a4ce
  40a4b3:	hlt    
  40a4b4:	xchg   ecx,eax
  40a4b5:	xchg   ecx,eax
  40a4b6:	push   edi
  40a4b7:	mov    ecx,0x3b2a508b
  40a4bc:	and    edx,ebx
  40a4be:	sbb    eax,0x9d955a05
  40a4c3:	mov    ebp,?
  40a4c5:	mov    ebp,esi
  40a4c7:	std    
  40a4c8:	shl    BYTE PTR [edi+ecx*1-0xe9424ea],cl
  40a4cf:	dec    ebx
  40a4d0:	inc    ebx
  40a4d1:	aaa    
  40a4d2:	adc    ch,BYTE PTR [eax-0x36eea6f8]
  40a4d8:	inc    ecx
  40a4d9:	not    DWORD PTR [ebp-0xd775379]
  40a4df:	lahf   
  40a4e0:	leave  
  40a4e1:	daa    
  40a4e2:	call   0xe19d33bd
  40a4e7:	stos   BYTE PTR es:[edi],al
  40a4e8:	loop   0x40a49a
  40a4ea:	xor    bl,BYTE PTR [esi-0x35]
  40a4ed:	test   al,0xbc
  40a4ef:	fiadd  DWORD PTR [ecx]
  40a4f1:	jl     0x40a4a1
  40a4f3:	inc    eax
  40a4f4:	adc    DWORD PTR [ebp-0x76d2b4d9],ebx
  40a4fa:	mov    ch,BYTE PTR [ebx+0x7cffe6b7]
  40a500:	ret    
  40a501:	cs dec ebp
  40a503:	loop   0x40a4c7
  40a505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a506:	out    dx,eax
  40a507:	scas   al,BYTE PTR es:[edi]
  40a508:	mov    DWORD PTR [ecx-0x3c],ebp
  40a50b:	pop    edx
  40a50c:	aaa    
  40a50d:	cmp    BYTE PTR ds:0x2c04b5ad,dh
  40a513:	jo     0x40a520
  40a515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a516:	push   esi
  40a517:	add    al,BYTE PTR [eax-0x6f40b8b4]
  40a51d:	(bad)  
  40a51e:	mov    ebp,0xfbf8b0f6
  40a523:	sbb    eax,0x38ffd142
  40a528:	loope  0x40a55f
  40a52a:	mov    edx,0xe19cdb17
  40a52f:	pop    ebp
  40a530:	mov    eax,0x311c9863
  40a535:	push   ds
  40a536:	sbb    edi,edx
  40a538:	pop    esi
  40a539:	not    BYTE PTR [edi+eax*1-0x77fe0078]
  40a540:	call   0x1292:0x80ab7a64
  40a547:	fisub  WORD PTR [esi+0x36]
  40a54a:	jle    0x40a4e1
  40a54c:	rcl    DWORD PTR [ecx],1
  40a54e:	repz cdq 
  40a550:	xlat   BYTE PTR ds:[ebx]
  40a551:	ret    
  40a552:	jnp    0x40a574
  40a554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a555:	scas   al,BYTE PTR es:[edi]
  40a556:	pop    esp
  40a557:	jo     0x40a59f
  40a559:	dec    ebp
  40a55a:	mov    cl,0xb8
  40a55c:	push   0x4efb509f
  40a561:	es daa 
  40a563:	inc    esi
  40a564:	inc    ecx
  40a565:	(bad)  
  40a566:	push   ebp
  40a567:	test   eax,esp
  40a569:	mov    WORD PTR [edx],fs
  40a56b:	jecxz  0x40a542
  40a56d:	aas    
  40a56e:	jb     0x40a572
  40a570:	fstp   QWORD PTR [esi+0x27]
  40a573:	shl    ebx,cl
  40a575:	jmp    0xee1330d6
  40a57a:	imul   eax,esi,0x366140bd
  40a580:	inc    eax
  40a581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a582:	inc    esi
  40a583:	(bad)  
  40a584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a585:	iret   
  40a586:	dec    esp
  40a587:	xor    al,ah
  40a589:	add    al,0x8b
  40a58b:	or     eax,0x767934cb
  40a590:	inc    ecx
  40a591:	pushf  
  40a592:	out    0x34,eax
  40a594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a595:	arpl   WORD PTR [eax+ebx*1],cx
  40a598:	imul   esp,DWORD PTR [ebx+0x4d],0x89da225c
  40a59f:	cpuid  
  40a5a1:	inc    ebp
  40a5a2:	mov    WORD PTR [ebp+0x53],ds
  40a5a5:	sub    ecx,DWORD PTR [edi+ebp*4-0x32]
  40a5a9:	mov    al,0x73
  40a5ab:	nop
  40a5ac:	fsubr  QWORD PTR [ebx]
  40a5ae:	cmp    BYTE PTR [edi],ah
  40a5b0:	adc    ch,dh
  40a5b2:	ss sti 
  40a5b4:	aaa    
  40a5b5:	cwde   
  40a5b6:	push   edi
  40a5b7:	pop    ds
  40a5b8:	in     al,dx
  40a5b9:	(bad)  
  40a5ba:	fidivr DWORD PTR [ecx-0x4980dcba]
  40a5c0:	jno    0x40a555
  40a5c2:	out    dx,al
  40a5c3:	fcmovbe st,st(1)
  40a5c5:	ror    BYTE PTR [eax+esi*4],0x12
  40a5c9:	or     BYTE PTR [ecx+0x2757298c],ah
  40a5cf:	pop    ss
  40a5d0:	mov    edx,0xbf7e13a
  40a5d5:	mov    eax,ds:0x21e402d7
  40a5da:	mov    al,ds:0x76b58628
  40a5df:	mov    edx,0x3ac78b80
  40a5e4:	(bad)  
  40a5e5:	(bad)  
  40a5e6:	aad    0x7a
  40a5e8:	push   edi
  40a5e9:	and    esp,DWORD PTR [edx+0x4fff4546]
  40a5ef:	rcl    BYTE PTR [ecx+0x712f6afa],cl
  40a5f5:	loopne 0x40a5c2
  40a5f7:	and    al,0xfd
  40a5f9:	xor    BYTE PTR [ebx+ecx*8-0x12],al
  40a5fd:	inc    ecx
  40a5fe:	in     al,0x12
  40a600:	dec    esi
  40a601:	pop    edx
  40a602:	test   DWORD PTR [edi-0x41],0x51e59c7f
  40a609:	jle    0x40a648
  40a60b:	rcl    DWORD PTR [esi-0x6fc5de77],0x3e
  40a612:	pusha  
  40a613:	lahf   
  40a614:	ins    DWORD PTR es:[edi],dx
  40a615:	push   edx
  40a616:	stos   DWORD PTR es:[edi],eax
  40a617:	aaa    
  40a618:	pop    es
  40a619:	jg     0x40a5ad
  40a61b:	outs   dx,DWORD PTR ds:[esi]
  40a61c:	dec    ebp
  40a61d:	jge    0x40a666
  40a61f:	add    al,0x7e
  40a622:	iret   
  40a623:	cdq    
  40a624:	aas    
  40a625:	mov    edx,0xb8a3cf6b
  40a62a:	mov    BYTE PTR [edi],0xe4
  40a62d:	pop    es
  40a62e:	fistp  DWORD PTR [ebp+0x79]
  40a631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a632:	call   0xe91d0754
  40a637:	jge    0x40a687
  40a639:	jb     0x40a5e8
  40a63b:	mov    ah,0x5
  40a63d:	outs   dx,BYTE PTR ds:[esi]
  40a63e:	sub    DWORD PTR [esi+0x3c],edx
  40a641:	(bad)  
  40a642:	div    BYTE PTR [edx]
  40a644:	xchg   DWORD PTR [eax+esi*4+0x37],esp
  40a648:	xchg   ecx,eax
  40a649:	inc    ebp
  40a64a:	and    eax,DWORD PTR [edi+0x43]
  40a64d:	dec    ebx
  40a64e:	pop    ebp
  40a64f:	jg     0x40a6b5
  40a651:	jbe    0x40a5f8
  40a653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a654:	cmp    BYTE PTR [edx],al
  40a656:	mov    ebx,0x13abfcdb
  40a65b:	sbb    al,0xf4
  40a65d:	dec    esi
  40a65e:	outs   dx,DWORD PTR ds:[esi]
  40a65f:	(bad)  
  40a660:	mov    esi,ds
  40a662:	ret    
  40a663:	mov    eax,0xcd891b2
  40a668:	outs   dx,BYTE PTR ds:[esi]
  40a669:	hlt    
  40a66a:	cmp    DWORD PTR [edx],ebx
  40a66c:	jbe    0x40a633
  40a66e:	push   edi
  40a66f:	clc    
  40a670:	std    
  40a671:	sar    DWORD PTR [eax],1
  40a673:	jo     0x40a6ac
  40a675:	cmp    dl,BYTE PTR [ebx+0xc52e2c4]
  40a67b:	mov    esp,0xf0fd6e23
  40a680:	imul   ecx,DWORD PTR [ebp-0x33],0x35
  40a684:	mov    edx,0xc009d583
  40a689:	ins    DWORD PTR es:[edi],dx
  40a68a:	jge    0x40a6ea
  40a68c:	test   ecx,ecx
  40a68e:	xchg   ebx,eax
  40a68f:	fsubr  st,st(2)
  40a691:	mov    DWORD PTR [eax-0x51],eax
  40a694:	and    edi,DWORD PTR [edx]
  40a696:	adc    DWORD PTR [eax],ecx
  40a698:	lds    esp,FWORD PTR [esi-0x31d61380]
  40a69e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a69f:	mov    edx,0x79591454
  40a6a4:	arpl   si,sp
  40a6a6:	mov    eax,ds:0xecb6de24
  40a6ab:	and    cl,BYTE PTR [eax-0x66e7cf85]
  40a6b1:	jmp    0xaac0:0x463acd44
  40a6b8:	fcomp  DWORD PTR [esi-0x6f858b22]
  40a6be:	add    ebx,DWORD PTR [eax]
  40a6c0:	(bad)  
  40a6c1:	cmp    al,0x1b
  40a6c3:	sbb    BYTE PTR [ebx],al
  40a6c5:	xchg   ebx,eax
  40a6c6:	push   ds
  40a6c7:	jno    0x40a73a
  40a6c9:	int3   
  40a6ca:	stos   BYTE PTR es:[edi],al
  40a6cb:	mov    DWORD PTR [esi],esp
  40a6cd:	enter  0x2c0e,0x69
  40a6d1:	sub    BYTE PTR [edi+0x33140938],dl
  40a6d7:	lods   eax,DWORD PTR ds:[esi]
  40a6d8:	or     edx,DWORD PTR [edi+0x2ab0f080]
  40a6de:	(bad)
  40a6e1:	mov    ds:0x1bd93b4f,al
  40a6e6:	sub    BYTE PTR [esi],dh
  40a6e8:	out    dx,eax
  40a6e9:	lds    edx,FWORD PTR [ebx]
  40a6eb:	mov    ecx,0xaa18901b
  40a6f0:	ror    BYTE PTR [edx],cl
  40a6f2:	mov    cl,BYTE PTR [ecx+0x16]
  40a6f5:	sti    
  40a6f6:	xor    al,0xea
  40a6f8:	gs inc ebp
  40a6fa:	les    esp,FWORD PTR [ebx+0x573d8a6f]
  40a700:	lahf   
  40a701:	jae    0x40a6fe
  40a703:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40a705:	cmp    al,0xfe
  40a707:	mov    ebp,0x501ba00a
  40a70c:	xchg   ebp,eax
  40a70d:	lods   al,BYTE PTR ds:[esi]
  40a70e:	ror    DWORD PTR [ebx+0x6ffdf2be],1
  40a714:	mov    eax,0xe0ec344e
  40a719:	mov    ?,WORD PTR [ebp+0x4c]
  40a71c:	xor    dh,BYTE PTR [ecx+esi*8+0x4f]
  40a720:	popf   
  40a721:	mov    esp,0x29dff687
  40a726:	cmp    BYTE PTR [esi-0x6dc2362b],dh
  40a72c:	fbld   TBYTE PTR [ecx+0x11db0aef]
  40a732:	mov    ch,BYTE PTR [ebp-0x1]
  40a735:	lods   eax,DWORD PTR ds:[esi]
  40a736:	fdivr  QWORD PTR [eax+eiz*2-0x57]
  40a73a:	(bad)  
  40a73b:	clc    
  40a73c:	lds    eax,FWORD PTR [eax]
  40a73e:	stc    
  40a73f:	xchg   ebx,eax
  40a740:	add    DWORD PTR [eax-0x19effc50],eax
  40a746:	cmp    al,0x56
  40a748:	sti    
  40a749:	mov    eax,ds:0xc7afcec
  40a74e:	dec    esp
  40a74f:	fld1   
  40a751:	mov    al,0x18
  40a753:	loop   0x40a7a1
  40a755:	sub    ch,BYTE PTR [esi+0x51]
  40a758:	mov    ah,0x8a
  40a75a:	push   edi
  40a75b:	ficom  WORD PTR [esi]
  40a75d:	adc    edx,0x3b051a1c
  40a763:	mov    esp,DWORD PTR [edx-0x2ed8ec4a]
  40a769:	jl     0x40a747
  40a76b:	pushf  
  40a76c:	mov    eax,ds:0x17cbaf83
  40a771:	hlt    
  40a772:	jmp    0x40a72a
  40a774:	cmp    eax,0xb492189d
  40a779:	adc    BYTE PTR [eax-0x6d],bh
  40a77c:	es adc eax,0x4db8637e
  40a782:	das    
  40a783:	mov    ds:0x2c087ce9,al
  40a788:	pop    edi
  40a789:	xchg   ecx,eax
  40a78a:	adc    al,0xd5
  40a78c:	aam    0x18
  40a78e:	cmp    eax,0xb84f85ac
  40a793:	outs   dx,BYTE PTR ds:[esi]
  40a794:	fcom   DWORD PTR [edi*4-0x2e42e108]
  40a79b:	(bad)  
  40a79c:	scas   eax,DWORD PTR es:[edi]
  40a79d:	sub    dh,BYTE PTR [ecx+0x49cc8be7]
  40a7a3:	sub    BYTE PTR [esi-0x65f21968],ah
  40a7a9:	out    dx,eax
  40a7aa:	inc    ebp
  40a7ab:	imul   esi,DWORD PTR [edx],0xffffffd0
  40a7ae:	mov    dl,0x88
  40a7b0:	cdq    
  40a7b1:	ja     0x40a78c
  40a7b3:	mov    BYTE PTR [esi-0x1e],dl
  40a7b6:	pop    eax
  40a7b7:	xchg   ebp,eax
  40a7b8:	sbb    BYTE PTR [esi+0x712e2fa8],al
  40a7be:	pop    ebp
  40a7bf:	pop    ecx
  40a7c0:	sahf   
  40a7c1:	pop    ecx
  40a7c2:	stc    
  40a7c3:	or     BYTE PTR cs:[esi-0x40],dl
  40a7c7:	dec    edi
  40a7c8:	xlat   BYTE PTR ds:[ebx]
  40a7c9:	(bad)  
  40a7ca:	and    al,0x3e
  40a7cc:	xor    ah,cl
  40a7ce:	xchg   edi,eax
  40a7cf:	jno    0x40a75c
  40a7d1:	ds sbb ebp,ebx
  40a7d4:	sbb    al,0x72
  40a7d6:	xchg   edx,eax
  40a7d7:	stc    
  40a7d8:	xchg   ebp,eax
  40a7d9:	mov    dh,0x23
  40a7db:	jb     0x40a778
  40a7dd:	lods   al,BYTE PTR ds:[esi]
  40a7de:	jno    0x40a7e4
  40a7e0:	shl    BYTE PTR [edi+0x4079d7d5],cl
  40a7e6:	or     al,0x21
  40a7e8:	jp     0x40a76b
  40a7ea:	mov    cl,0x46
  40a7ec:	xor    al,ch
  40a7ee:	cld    
  40a7ef:	push   ss
  40a7f0:	sbb    bh,BYTE PTR ds:0xca10c91d
  40a7f6:	dec    esp
  40a7f7:	mov    esi,DWORD PTR fs:[esp+eax*8-0xa]
  40a7fc:	mov    ebx,0x800c9cae
  40a801:	ds dec edi
  40a803:	je     0x40a7f8
  40a805:	xchg   ecx,eax
  40a806:	lock lock (bad) 
  40a80a:	sbb    cl,BYTE PTR [ebx]
  40a80c:	nop
  40a80d:	ror    BYTE PTR [ecx-0x40146b3a],cl
  40a813:	arpl   di,si
  40a815:	jmp    0xb205:0x1f572c0
  40a81c:	js     0x40a841
  40a81e:	icebp  
  40a81f:	aad    0x36
  40a821:	adc    BYTE PTR ds:0x7cb502,dh
  40a827:	outs   dx,DWORD PTR ds:[esi]
  40a828:	adc    eax,0x3ee94911
  40a82d:	imul   cl
  40a82f:	add    ebx,DWORD PTR [ecx]
  40a831:	mov    al,0xd4
  40a833:	cmp    DWORD PTR [esi+0x1acffcf4],esp
  40a839:	(bad)  
  40a83a:	jmp    0xc3df86bd
  40a83f:	mov    ebp,0x33d25c9d
  40a844:	dec    ecx
  40a845:	and    al,0x40
  40a847:	mov    WORD PTR [esi],?
  40a849:	enter  0x96d0,0x7d
  40a84d:	jo     0x40a7e3
  40a84f:	jle    0x40a861
  40a851:	push   esp
  40a852:	sub    al,0x9d
  40a854:	imul   DWORD PTR [bx+di-0x178d]
  40a859:	push   esp
  40a85a:	inc    edi
  40a85b:	sahf   
  40a85c:	or     ebp,DWORD PTR [ebx+eiz*1]
  40a85f:	into   
  40a860:	jb     0x40a856
  40a862:	(bad)  
  40a863:	adc    cl,BYTE PTR [esi]
  40a865:	mov    dh,0x4d
  40a867:	sbb    eax,0xd47420f1
  40a86c:	jo     0x40a85f
  40a86e:	adc    edx,edx
  40a870:	cmp    DWORD PTR [ecx],edx
  40a872:	push   ecx
  40a873:	add    BYTE PTR [ebp+ebp*2-0x3bead681],dh
  40a87a:	sub    BYTE PTR [ebx],cl
  40a87c:	clc    
  40a87d:	sub    ch,dh
  40a87f:	andnps xmm5,XMMWORD PTR [ecx]
  40a882:	mov    ch,0xf5
  40a884:	loope  0x40a889
  40a886:	mov    edi,0x3d9d5aff
  40a88b:	mov    cl,0xaf
  40a88d:	js     0x40a843
  40a88f:	mov    al,ds:0xd23de9ae
  40a894:	hlt    
  40a895:	sbb    BYTE PTR [ecx],bh
  40a897:	in     eax,0xda
  40a899:	pop    es
  40a89a:	call   0x49a5:0x55dc41fd
  40a8a1:	push   eax
  40a8a2:	mov    bh,0x71
  40a8a4:	xchg   esp,eax
  40a8a5:	mov    ah,BYTE PTR [esi+0x31d59a2c]
  40a8ab:	stc    
  40a8ac:	mov    ds:0x7892ba62,eax
  40a8b1:	mov    ebx,0x34cf3c49
  40a8b6:	or     eax,0xe20e24a5
  40a8bb:	jle    0x40a8e5
  40a8bd:	sub    esp,DWORD PTR [ecx-0xa770702]
  40a8c3:	(bad)  
  40a8c4:	adc    eax,0x7416fbd9
  40a8c9:	pop    ds
  40a8ca:	scas   al,BYTE PTR es:[edi]
  40a8cb:	push   ds
  40a8cc:	pop    edi
  40a8cd:	std    
  40a8ce:	sbb    DWORD PTR [ecx+0x56],edi
  40a8d1:	mov    ?,WORD PTR [ecx+ebx*1-0x66510f4e]
  40a8d8:	imul   ebx,DWORD PTR [edi+0x70],0x526f0a40
  40a8df:	push   ebp
  40a8e0:	lahf   
  40a8e1:	into   
  40a8e2:	aaa    
  40a8e3:	add    eax,0x4fbc48ba
  40a8e8:	test   BYTE PTR [esi],cl
  40a8ea:	fiadd  DWORD PTR [ecx-0x3c]
  40a8ed:	and    eax,0xf1695825
  40a8f2:	pop    edi
  40a8f3:	lahf   
  40a8f4:	bound  edx,QWORD PTR [eax-0x36]
  40a8f7:	mov    ds:0xffe6bbd5,al
  40a8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8fd:	mov    DWORD PTR ds:0x5e670c0d,ebx
  40a903:	jge    0x40a8a0
  40a905:	jnp    0x40a8ff
  40a907:	inc    eax
  40a908:	pop    ds
  40a909:	mov    ds:0xb2f3c728,eax
  40a90e:	inc    eax
  40a90f:	mov    dl,0xb7
  40a911:	or     eax,0xbe25ceb8
  40a916:	adc    DWORD PTR [esi+0x37],edi
  40a919:	jns    0x40a8a7
  40a91b:	jns    0xa303226f
  40a921:	lods   eax,DWORD PTR ds:[esi]
  40a922:	and    eax,DWORD PTR es:[eax+0x3]
  40a926:	stos   DWORD PTR es:[edi],eax
  40a927:	mov    ah,0x56
  40a929:	sti    
  40a92a:	cld    
  40a92b:	add    ecx,DWORD PTR [ebx-0x59]
  40a92e:	xchg   ebp,eax
  40a92f:	test   DWORD PTR [ecx-0x65],0xe0aa1733
  40a936:	daa    
  40a937:	in     al,0xde
  40a939:	lock out 0x71,al
  40a93c:	add    al,0x10
  40a93e:	(bad)  
  40a93f:	push   0xffffffd2
  40a941:	xor    ecx,DWORD PTR [ecx]
  40a943:	push   0x8a5d7565
  40a948:	in     eax,0x65
  40a94a:	xor    eax,0x9004eff2
  40a94f:	mov    edi,?
  40a951:	shl    BYTE PTR [edx+0xe59a7f8],0xdf
  40a958:	imul   edx,DWORD PTR [edi-0x46e5ef18],0xc
  40a95f:	jo     0x40a960
  40a961:	push   es
  40a962:	and    eax,0x49d96e09
  40a967:	pop    ds
  40a968:	add    eax,0x54f20234
  40a96d:	fst    DWORD PTR [esi+0x63]
  40a970:	rcr    BYTE PTR [ebx+0x42d1595e],cl
  40a976:	(bad)  
  40a977:	jecxz  0x40a8fa
  40a979:	cmp    eax,0xc8f31826
  40a97e:	popf   
  40a97f:	adc    BYTE PTR [ebp-0x4a25608c],dh
  40a985:	dec    ecx
  40a986:	in     eax,dx
  40a987:	loop   0x40a9b4
  40a989:	sub    eax,0x3b4cc40a
  40a98e:	cs and al,0x50
  40a991:	adc    BYTE PTR [ecx+0x40],cl
  40a994:	adc    al,0x50
  40a996:	xor    edi,DWORD PTR [ebx]
  40a998:	dec    esp
  40a999:	lods   eax,DWORD PTR ds:[esi]
  40a99a:	jmp    0x22b:0x826d91ee
  40a9a1:	mov    dh,0x9a
  40a9a3:	cli    
  40a9a4:	mov    edi,0x91b85803
  40a9a9:	rcl    DWORD PTR [eax+0x7cd9e825],cl
  40a9af:	jns    0x40aa1f
  40a9b1:	pop    ecx
  40a9b2:	adc    ah,BYTE PTR [ebp+0x0]
  40a9b5:	mov    ebp,0x69df208c
  40a9ba:	jge    0x40a959
  40a9bc:	clc    
  40a9bd:	out    dx,eax
  40a9be:	xchg   esi,eax
  40a9bf:	xrelease mov BYTE PTR ss:[esi+ebp*4+0x717627fb],dl
  40a9c8:	cld    
  40a9c9:	fisttp DWORD PTR [ebx-0x5c2bdb7c]
  40a9cf:	and    bl,BYTE PTR [edx]
  40a9d1:	mov    bl,0xe
  40a9d3:	das    
  40a9d4:	mov    esp,0x8138af19
  40a9d9:	sub    al,0x6a
  40a9db:	cmp    al,0x56
  40a9dd:	inc    ecx
  40a9de:	mov    fs,WORD PTR [ebx]
  40a9e0:	ins    DWORD PTR es:[edi],dx
  40a9e1:	icebp  
  40a9e2:	sub    al,0xe4
  40a9e4:	and    DWORD PTR [edi+0x5122bbf5],eax
  40a9ea:	out    dx,eax
  40a9eb:	call   0xb912:0x8aa4913f
  40a9f2:	xlat   BYTE PTR ds:[ebx]
  40a9f3:	test   al,0xb1
  40a9f5:	lahf   
  40a9f6:	push   ds
  40a9f7:	push   esi
  40a9f8:	push   es
  40a9f9:	sbb    edx,edx
  40a9fb:	push   esp
  40a9fc:	test   BYTE PTR [ebx+0x4ccd8d6d],bh
  40aa02:	xchg   edx,eax
  40aa03:	dec    esp
  40aa04:	xlat   BYTE PTR ds:[ebx]
  40aa05:	hlt    
  40aa06:	adc    ch,BYTE PTR [esi+0x4d]
  40aa09:	sbb    eax,0x93767e56
  40aa0e:	test   eax,0x1b9b4e45
  40aa13:	or     ah,BYTE PTR [edx]
  40aa15:	bound  eax,QWORD PTR [edi-0x7dfc6548]
  40aa1b:	jmp    0xe27063b0
  40aa20:	fadd   st(2),st
  40aa22:	cld    
  40aa23:	jmp    0x40aa6c
  40aa25:	xchg   ecx,eax
  40aa26:	sub    al,0x9c
  40aa28:	ret    
  40aa29:	sub    ch,BYTE PTR [ecx-0x737460cf]
  40aa2f:	jne    0x40aa91
  40aa31:	shl    DWORD PTR [edi-0x191047e1],0xdc
  40aa38:	xchg   ecx,eax
  40aa39:	add    BYTE PTR [edi],bl
  40aa3b:	push   eax
  40aa3c:	cli    
  40aa3d:	pop    ss
  40aa3e:	test   WORD PTR [edi],sp
  40aa41:	mov    cl,0x4f
  40aa43:	inc    edx
  40aa44:	push   eax
  40aa45:	(bad)
  40aa49:	xchg   ebx,eax
  40aa4a:	pop    ebp
  40aa4b:	sub    DWORD PTR [ebp+ecx*8+0x7c],edx
  40aa4f:	xchg   esp,eax
  40aa50:	cvtps2pd xmm0,QWORD PTR [ebp+0x6e1ff3a8]
  40aa57:	(bad)  
  40aa58:	cs push ebp
  40aa5b:	push   ebx
  40aa5c:	mov    edx,0x8c7fc76e
  40aa61:	mov    esp,0xe75de606
  40aa66:	cs inc ebp
  40aa68:	ins    DWORD PTR es:[edi],dx
  40aa69:	into   
  40aa6a:	xchg   ebp,eax
  40aa6b:	push   ecx
  40aa6c:	out    0x34,al
  40aa6e:	cwde   
  40aa6f:	mov    ah,0x4d
  40aa71:	in     eax,0x36
  40aa73:	xchg   ecx,eax
  40aa74:	xchg   ebp,eax
  40aa75:	pop    es
  40aa76:	test   DWORD PTR [eax+eiz*2-0x22e50a17],edi
  40aa7d:	xchg   BYTE PTR [edi],ah
  40aa7f:	nop
  40aa80:	mov    ch,0x9f
  40aa82:	iret   
  40aa83:	mov    ebx,0xeb692916
  40aa88:	xor    DWORD PTR [ecx],edi
  40aa8a:	call   0x816f:0x3a690f95
  40aa91:	adc    al,0x64
  40aa93:	cld    
  40aa94:	and    al,0xa3
  40aa96:	push   esp
  40aa97:	fldcw  WORD PTR [eax]
  40aa99:	xor    dl,BYTE PTR [esi]
  40aa9b:	dec    edi
  40aa9c:	dec    edi
  40aa9d:	xchg   ecx,eax
  40aa9e:	int    0xfb
  40aaa0:	sub    ebp,DWORD PTR [esi+eax*4-0x25]
  40aaa4:	mov    bl,0xe3
  40aaa6:	into   
  40aaa7:	push   esi
  40aaa8:	jge    0x40aab9
  40aaaa:	fwait
  40aaab:	cmp    BYTE PTR [ecx],al
  40aaad:	inc    eax
  40aaae:	in     al,0xcb
  40aab0:	jnp    0x40aac4
  40aab2:	and    eax,0x96004bb2
  40aab7:	mov    bh,0xc0
  40aab9:	in     eax,dx
  40aaba:	mov    eax,ds:0xfd5a2051
  40aabf:	push   ecx
  40aac0:	test   bh,dl
  40aac2:	scas   al,BYTE PTR es:[edi]
  40aac3:	sbb    DWORD PTR [ebp-0x72],0xffffffc7
  40aac7:	jmp    0x40aa9b
  40aac9:	xor    BYTE PTR [eax+edx*8+0x73f929c1],bl
  40aad0:	dec    esi
  40aad1:	or     bh,BYTE PTR [esi+0x3a001c0a]
  40aad7:	add    bl,al
  40aad9:	(bad)  
  40aadb:	std    
  40aadc:	fstp   QWORD PTR [ecx+0x1a]
  40aadf:	data16 cmp ah,al
  40aae2:	clc    
  40aae3:	leave  
  40aae4:	cmp    al,0x1b
  40aae6:	pop    ss
  40aae7:	jns    0x40aac7
  40aae9:	dec    edi
  40aaea:	pop    esi
  40aaeb:	mov    dh,0xe6
  40aaed:	add    al,0x17
  40aaef:	inc    ecx
  40aaf0:	out    dx,eax
  40aaf1:	jae    0x40ab3c
  40aaf3:	push   eax
  40aaf4:	jne    0x40aa92
  40aaf6:	(bad)  
  40aaf7:	push   ds
  40aaf8:	addr16 jl 0x40ab1a
  40aafb:	pop    eax
  40aafc:	rcl    DWORD PTR [ebx],cl
  40aafe:	cs out 0x9f,eax
  40ab01:	les    ecx,FWORD PTR [edi]
  40ab03:	push   esi
  40ab04:	ret    0xa18f
  40ab07:	icebp  
  40ab08:	and    BYTE PTR [ebp+0x37],ch
  40ab0b:	ins    DWORD PTR es:[edi],dx
  40ab0c:	mov    BYTE PTR ds:0xcb7b265b,dh
  40ab12:	mov    DWORD PTR [edx],0xddac822a
  40ab18:	and    edx,edx
  40ab1a:	mov    edx,0x7ec232c6
  40ab1f:	ja     0x40ab92
  40ab21:	in     al,dx
  40ab22:	sub    esi,ebp
  40ab24:	pop    ds
  40ab25:	push   ebp
  40ab26:	jmp    0x1c1a:0xdbcde272
  40ab2d:	rcl    ebx,cl
  40ab2f:	cmp    DWORD PTR [edi+0x3c169533],edi
  40ab35:	xor    DWORD PTR [edx-0x67],0xf8a1a41
  40ab3c:	loopne 0x40ab67
  40ab3e:	dec    esp
  40ab3f:	and    eax,0xfaa9e3a0
  40ab44:	sub    dh,0x1c
  40ab47:	jns    0x40abc6
  40ab49:	pop    ebp
  40ab4a:	rol    BYTE PTR [edx+edi*1-0x19],cl
  40ab4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab4f:	pop    eax
  40ab50:	cmovp  ebp,ecx
  40ab53:	inc    ebp
  40ab54:	mov    bl,0x5e
  40ab56:	cld    
  40ab57:	ret    0xcc3f
  40ab5a:	call   0x2f78:0xc751ddfd
  40ab61:	fnsave [esi+0x13ab6fad]
  40ab67:	jle    0x40ab9b
  40ab69:	mov    al,0x31
  40ab6b:	xor    BYTE PTR [ecx+0xd],al
  40ab6e:	add    al,0xb3
  40ab70:	shl    BYTE PTR [eax+0x20d8eea],1
  40ab76:	fdiv   DWORD PTR [esi-0x3cd47627]
  40ab7c:	mov    ecx,0xee9351cf
  40ab81:	push   edi
  40ab82:	scas   eax,DWORD PTR es:[edi]
  40ab83:	xor    dl,BYTE PTR ds:0x9802c2d4
  40ab89:	dec    ebp
  40ab8a:	add    BYTE PTR [ecx],0x7
  40ab8d:	inc    edx
  40ab8e:	add    DWORD PTR ds:0x73319ccf,esi
  40ab94:	or     eax,0x7e403e22
  40ab99:	loop   0x40abe0
  40ab9b:	adc    DWORD PTR [esi-0x708ac2a2],0x50
  40aba2:	adc    eax,edx
  40aba4:	int3   
  40aba5:	bound  ebp,QWORD PTR [edi]
  40aba7:	adc    al,0xad
  40aba9:	out    dx,eax
  40abaa:	push   cs
  40abab:	test   eax,0xb0a06ef6
  40abb0:	pushf  
  40abb1:	std    
  40abb2:	add    ch,BYTE PTR [ecx+0x43d8c93a]
  40abb8:	dec    eax
  40abb9:	adc    DWORD PTR [edi-0x6e],esi
  40abbc:	xor    edi,DWORD PTR [eax]
  40abbe:	test   DWORD PTR [edi-0x9f80f0e],ebx
  40abc4:	jle    0x40ab5e
  40abc6:	sbb    DWORD PTR [ebp+0x62],edi
  40abc9:	sub    cl,BYTE PTR [ecx]
  40abcb:	test   eax,0xd2c67290
  40abd0:	pop    edx
  40abd1:	xor    al,0xe0
  40abd3:	xlat   BYTE PTR ds:[ebx]
  40abd4:	or     esp,DWORD PTR [ebx]
  40abd6:	ret    
  40abd7:	pop    eax
  40abd8:	add    al,0x78
  40abda:	xchg   edx,eax
  40abdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abdc:	repnz shl BYTE PTR [ebx+0x6bbf9bdf],1
  40abe3:	not    BYTE PTR [esi+0x5d055f73]
  40abe9:	fild   QWORD PTR [ecx]
  40abeb:	(bad)  
  40abec:	and    al,0x5e
  40abee:	mov    dh,0x3b
  40abf0:	ftst   
  40abf2:	pop    edi
  40abf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abf4:	shl    DWORD PTR [ecx],cl
  40abf6:	retf   0xe099
  40abf9:	mov    BYTE PTR [edi+0x6a956ab4],dh
  40abff:	mov    ah,cl
  40ac01:	pop    eax
  40ac02:	(bad)  
  40ac03:	cmp    eax,edi
  40ac05:	fist   DWORD PTR [ebp-0x61]
  40ac08:	iret   
  40ac09:	dec    bx
  40ac0b:	ss jo  0x40abce
  40ac0e:	jo     0x40aba8
  40ac10:	push   esi
  40ac11:	pop    edx
  40ac12:	ret    
  40ac13:	push   ebp
  40ac14:	scas   al,BYTE PTR es:[edi]
  40ac15:	jle    0x40ac3e
  40ac17:	into   
  40ac18:	out    dx,eax
  40ac19:	adc    BYTE PTR [esi],cl
  40ac1b:	mov    edi,0xad349d84
  40ac20:	push   esp
  40ac21:	jns    0x40abdb
  40ac23:	lahf   
  40ac24:	sub    eax,0xc5a44072
  40ac29:	in     al,0x1b
  40ac2b:	inc    ecx
  40ac2c:	and    eax,0x2c280583
  40ac31:	push   cs
  40ac32:	icebp  
  40ac33:	xchg   edx,eax
  40ac34:	and    esp,DWORD PTR [eax+0x50258fd9]
  40ac3a:	push   es
  40ac3b:	es mov ebx,0xbdba14c6
  40ac41:	js     0x40ac1b
  40ac43:	push   ecx
  40ac44:	es mov al,0xf2
  40ac47:	fwait
  40ac48:	and    al,0x92
  40ac4a:	xlat   BYTE PTR ds:[ebx]
  40ac4b:	jno    0x40ac24
  40ac4d:	stos   DWORD PTR es:[edi],eax
  40ac4e:	and    BYTE PTR [ebp-0x76],ah
  40ac51:	int    0x14
  40ac53:	push   esp
  40ac54:	xor    eax,0xb22aed33
  40ac59:	xchg   ecx,eax
  40ac5a:	hlt    
  40ac5b:	and    BYTE PTR [ebp+0x3c961492],bh
  40ac61:	inc    eax
  40ac62:	stos   DWORD PTR es:[edi],eax
  40ac63:	and    al,0x7f
  40ac65:	mov    ?,WORD PTR [ecx-0x4997c405]
  40ac6b:	ins    DWORD PTR es:[edi],dx
  40ac6c:	rcr    DWORD PTR [edi],1
  40ac6e:	xor    BYTE PTR [eax+eiz*2+0x3],dl
  40ac72:	mov    ebx,0x1bfe052a
  40ac77:	fwait
  40ac78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac79:	stc    
  40ac7a:	popa   
  40ac7b:	dec    esp
  40ac7c:	hlt    
  40ac7d:	(bad)  
  40ac7e:	mov    esi,0xfec3392b
  40ac83:	scas   eax,DWORD PTR es:[edi]
  40ac84:	sbb    al,0x85
  40ac86:	ins    BYTE PTR es:[edi],dx
  40ac87:	mov    ch,0x79
  40ac89:	in     eax,dx
  40ac8a:	ret    0x74c2
  40ac8d:	xchg   ebx,eax
  40ac8e:	out    0x59,al
  40ac90:	and    al,cl
  40ac92:	scas   al,BYTE PTR es:[edi]
  40ac93:	lock mov bh,0x14
  40ac96:	retf   0x3104
  40ac99:	xor    DWORD PTR [ecx+0x76230a8e],esi
  40ac9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aca0:	test   DWORD PTR [edx],ecx
  40aca2:	pop    ecx
  40aca3:	(bad)  
  40aca4:	jns    0x40ac60
  40aca6:	lods   eax,DWORD PTR ds:[esi]
  40aca7:	sahf   
  40aca8:	cmp    eax,0xc1626996
  40acad:	es push es
  40acaf:	dec    eax
  40acb0:	and    edi,ecx
  40acb2:	imul   ebp,esp,0xfffffff0
  40acb5:	pop    ecx
  40acb6:	retf   0x41e7
  40acb9:	mov    ds:0xb76a34,eax
  40acbe:	inc    ecx
  40acbf:	add    dh,BYTE PTR [ecx+0x44]
  40acc2:	push   0x72
  40acc4:	mov    dl,al
  40acc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc7:	scas   eax,DWORD PTR es:[edi]
  40acc8:	cmp    eax,0xb3084116
  40accd:	es retf 
  40accf:	fwait
  40acd0:	dec    ecx
  40acd1:	push   esi
  40acd2:	push   edx
  40acd3:	jg     0x40acd6
  40acd5:	or     dh,BYTE PTR [esi-0x33]
  40acd8:	push   ebp
  40acd9:	cli    
  40acda:	mov    eax,0xc56ff569
  40acdf:	pop    ebx
  40ace0:	mov    ecx,0xf2d8ba82
  40ace5:	dec    ebx
  40ace6:	sar    dh,0x51
  40ace9:	inc    esi
  40acea:	sub    DWORD PTR [eax+eax*4-0x35],ebp
  40acee:	mov    ecx,0xc70faaa6
  40acf3:	sar    ebp,0x6f
  40acf6:	add    eax,0x5740dc9d
  40acfb:	dec    esp
  40acfc:	sbb    ebx,edi
  40acfe:	mov    ds,WORD PTR [ecx+esi*8+0x71477dcc]
  40ad05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad06:	adc    dl,BYTE PTR [ebp+0x56]
  40ad09:	push   edx
  40ad0a:	push   ebp
  40ad0b:	cmp    ebp,DWORD PTR ds:0x68895d98
  40ad11:	inc    edx
  40ad12:	push   es
  40ad13:	mov    ch,0xd7
  40ad15:	pushf  
  40ad16:	add    dl,ah
  40ad18:	dec    esp
  40ad19:	mov    ds:0x13a49255,eax
  40ad1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad1f:	lods   al,BYTE PTR ds:[esi]
  40ad20:	jmp    0x5a58791f
  40ad25:	mov    edi,0xece0ef46
  40ad2a:	ss push eax
  40ad2c:	jo     0x40ad8c
  40ad2e:	pop    ebp
  40ad2f:	jmp    0x570f:0x5a92f840
  40ad36:	xor    esi,edx
  40ad38:	adc    eax,0x517ad7d
  40ad3d:	int    0x17
  40ad3f:	cmc    
  40ad40:	sub    ah,BYTE PTR [edx+ecx*2+0x41]
  40ad44:	aam    0xbc
  40ad46:	xchg   ebx,eax
  40ad47:	sub    DWORD PTR [ebp-0x79d4f820],edx
  40ad4d:	push   ecx
  40ad4e:	mov    dl,bh
  40ad50:	scas   eax,DWORD PTR es:[edi]
  40ad51:	mov    WORD PTR [ebp+0x2dfdc31],es
  40ad57:	xlat   BYTE PTR ds:[ebx]
  40ad58:	push   edi
  40ad59:	mov    esp,0x2d541e01
  40ad5e:	mov    ecx,0xf04e0484
  40ad63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad64:	mov    bl,0xeb
  40ad66:	dec    edi
  40ad67:	pop    eax
  40ad68:	fidivr WORD PTR [edi+ecx*8+0x1f79e886]
  40ad6f:	js     0x40ad01
  40ad71:	out    dx,eax
  40ad72:	lahf   
  40ad73:	add    al,0xeb
  40ad75:	leave  
  40ad76:	lods   eax,DWORD PTR ds:[esi]
  40ad77:	std    
  40ad78:	shl    BYTE PTR [ecx+edx*8-0x30dc58e0],0x8b
  40ad80:	sub    al,0x61
  40ad82:	js     0x40ad8c
  40ad84:	add    DWORD PTR [edx+0x76],edi
  40ad87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad88:	cmp    ebp,DWORD PTR [esi-0x64a54097]
  40ad8e:	adc    al,0x94
  40ad90:	cwde   
  40ad91:	xchg   esi,eax
  40ad92:	push   esp
  40ad93:	sub    eax,0x9646a61d
  40ad98:	xchg   ecx,eax
  40ad99:	or     DWORD PTR [eax+ecx*1+0x2ec1b583],ebx
  40ada0:	dec    edi
  40ada1:	jb     0x40ae0b
  40ada3:	inc    ecx
  40ada4:	(bad)  
  40ada5:	addr16 inc ebp
  40ada7:	jbe    0x40ad3a
  40ada9:	popf   
  40adaa:	mov    al,ds:0x8e010e82
  40adaf:	and    BYTE PTR [esi+eax*4],dh
  40adb2:	inc    ecx
  40adb3:	aam    0x6f
  40adb5:	shr    DWORD PTR [ecx+0x1c],0x69
  40adb9:	cmp    DWORD PTR [edi+0x4b11d765],0xe
  40adc0:	dec    esi
  40adc1:	ds or  al,0xa1
  40adc4:	shl    DWORD PTR [esi+esi*2],1
  40adc7:	stc    
  40adc8:	dec    edi
  40adc9:	(bad)  
  40adca:	push   esi
  40adcb:	mov    ss,WORD PTR ds:0x3cd7a4d0
  40add1:	xchg   esi,eax
  40add2:	popa   
  40add3:	aas    
  40add4:	dec    ebp
  40add5:	and    BYTE PTR [esi+eiz*8-0x29504432],0xf0
  40addd:	pop    esp
  40adde:	push   es
  40addf:	fucomp st(3)
  40ade1:	dec    ebp
  40ade2:	in     eax,0x19
  40ade4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade5:	pop    ebp
  40ade6:	sar    BYTE PTR [eax+0x61],cl
  40ade9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adea:	push   ecx
  40adeb:	div    BYTE PTR [ecx-0x4d]
  40adee:	xor    DWORD PTR [eax+0x74546ead],edx
  40adf4:	in     eax,0x64
  40adf6:	retf   0x68d5
  40adf9:	rol    BYTE PTR [esi+0x4d],cl
  40adfc:	lods   eax,DWORD PTR ds:[esi]
  40adfd:	push   cs
  40adfe:	lock div edx
  40ae01:	xchg   ebx,eax
  40ae02:	sti    
  40ae03:	not    BYTE PTR [eax-0x74]
  40ae06:	lds    edi,FWORD PTR [esi]
  40ae08:	xchg   edi,eax
  40ae09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0a:	xlat   BYTE PTR ds:[ebx]
  40ae0b:	fadd   QWORD PTR [ebx]
  40ae0d:	sub    eax,0x6fe3a260
  40ae12:	add    al,0xf3
  40ae14:	std    
  40ae15:	dec    edi
  40ae16:	and    eax,0x2a57c073
  40ae1b:	test   eax,0x2850e6fa
  40ae20:	or     eax,0x1010e148
  40ae25:	pushf  
  40ae26:	xchg   DWORD PTR [esi-0x59],edx
  40ae29:	mov    al,0xf0
  40ae2b:	sub    ebp,DWORD PTR [esi+0x40]
  40ae2e:	xchg   ecx,eax
  40ae2f:	mov    ebp,ecx
  40ae31:	bound  edx,QWORD PTR [ebx]
  40ae33:	fldcw  WORD PTR [ecx+esi*2]
  40ae36:	stos   DWORD PTR es:[edi],eax
  40ae37:	js     0x40adee
  40ae39:	or     al,al
  40ae3b:	stc    
  40ae3c:	adc    DWORD PTR [ecx],ebx
  40ae3e:	mov    esi,0xd6ab36c6
  40ae43:	xchg   ebp,eax
  40ae44:	xchg   BYTE PTR [eax+0x40],bl
  40ae47:	and    al,0x63
  40ae49:	test   al,0x89
  40ae4b:	pop    eax
  40ae4c:	loopne 0x40ae94
  40ae4e:	sbb    dh,BYTE PTR [edi+ebx*4-0x3e]
  40ae52:	ins    WORD PTR es:[edi],dx
  40ae54:	push   esp
  40ae55:	mov    ecx,0x79cc998a
  40ae5a:	rcr    BYTE PTR [ebx],cl
  40ae5c:	adc    cl,bh
  40ae5e:	je     0x40aea3
  40ae60:	mov    ds:0xbe43159e,eax
  40ae65:	fldenv [esi-0x2db5aec8]
  40ae6b:	jne    0x40ae8f
  40ae6d:	xchg   ebx,eax
  40ae6e:	mov    edi,DWORD PTR [edx+0x56d42385]
  40ae74:	or     DWORD PTR [edx+0x39],esi
  40ae77:	xchg   ecx,eax
  40ae78:	xor    al,BYTE PTR es:[edi+0x6e]
  40ae7c:	call   0x642f:0x59785b1
  40ae83:	jno    0x40ae92
  40ae85:	mov    ecx,0xb0439b79
  40ae8a:	std    
  40ae8b:	test   edi,eax
  40ae8d:	popa   
  40ae8e:	jecxz  0x40ae21
  40ae90:	clc    
  40ae91:	add    eax,0xa5bc3ce9
  40ae96:	clc    
  40ae97:	(bad)  
  40ae98:	in     al,0xa4
  40ae9a:	adc    eax,0x7a8d51e2
  40ae9f:	fwait
  40aea0:	cs stos BYTE PTR es:[edi],al
  40aea2:	ins    DWORD PTR es:[edi],dx
  40aea3:	jecxz  0x40aee5
  40aea5:	xor    ebp,esi
  40aea7:	mov    ecx,0x90a97dd0
  40aeac:	lds    ecx,FWORD PTR [ebx+ebx*4+0x76]
  40aeb0:	pop    esi
  40aeb1:	pop    edi
  40aeb2:	adc    BYTE PTR [edx],dh
  40aeb4:	nop
  40aeb5:	jmp    0x40af04
  40aeb7:	xchg   edx,eax
  40aeb8:	addr16 mov ds:0xdd6,al
  40aebc:	xchg   ebx,eax
  40aebd:	ins    DWORD PTR es:[edi],dx
  40aebe:	int3   
  40aebf:	and    edi,DWORD PTR [esi-0x7f]
  40aec2:	mov    ebx,0x468770a1
  40aec7:	inc    esp
  40aec8:	mov    bh,0x27
  40aeca:	mov    cl,0x0
  40aecc:	fmul   st(7),st
  40aece:	or     DWORD PTR [esi],edi
  40aed0:	std    
  40aed1:	sbb    ch,BYTE PTR [eax+0x5b]
  40aed4:	inc    edi
  40aed5:	mov    DWORD PTR [edx+eiz*2],edx
  40aed8:	(bad)  
  40aed9:	ss push ebx
  40aedb:	lock jae 0x40af08
  40aede:	outs   dx,DWORD PTR ds:[esi]
  40aedf:	pop    esi
  40aee0:	dec    ebx
  40aee1:	inc    eax
  40aee2:	inc    ebx
  40aee3:	loop   0x40af0f
  40aee5:	and    al,0x9f
  40aee7:	lds    ecx,FWORD PTR [esi+0x6f1616ad]
  40aeed:	dec    ebx
  40aeee:	adc    ebx,DWORD PTR [edx]
  40aef0:	(bad)
  40aef4:	mov    bh,0xa7
  40aef6:	lods   eax,DWORD PTR ds:[esi]
  40aef7:	fadd   st,st(2)
  40aef9:	and    bl,ah
  40aefb:	jge    0x40aeef
  40aefd:	fld    QWORD PTR [ebx+0x24]
  40af00:	out    dx,al
  40af01:	push   es
  40af02:	add    ch,BYTE PTR [ebx-0x1]
  40af05:	dec    esi
  40af06:	push   gs
  40af08:	mov    eax,DWORD PTR [edi]
  40af0a:	cli    
  40af0b:	pusha  
  40af0c:	xchg   DWORD PTR [ebp+eax*1-0x26],eax
  40af10:	(bad)  
  40af11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af12:	fdivr  st,st(7)
  40af14:	push   cs
  40af15:	and    ch,BYTE PTR [eax]
  40af17:	retf   
  40af18:	test   al,0x83
  40af1a:	jmp    0xc353:0xb808c02e
  40af21:	imul   ebx,ecx,0xdfe76984
  40af27:	shl    BYTE PTR [edx-0x5b],cl
  40af2a:	fsubp  st(2),st
  40af2c:	sbb    eax,DWORD PTR [eax-0x3d]
  40af2f:	mov    DWORD PTR [esi],ebx
  40af31:	in     eax,dx
  40af32:	in     eax,0x87
  40af34:	xchg   BYTE PTR [edi-0x321f287e],cl
  40af3a:	sar    BYTE PTR [edi-0x76],cl
  40af3d:	push   cs
  40af3e:	mov    ebx,0xd5ea4dcc
  40af43:	xor    BYTE PTR [edx],dh
  40af45:	inc    eax
  40af46:	xor    al,0x9e
  40af48:	and    edx,DWORD PTR [edi-0x22edca12]
  40af4e:	fst    DWORD PTR [edi+0x78]
  40af51:	test   al,0x8b
  40af53:	dec    ecx
  40af54:	push   ebx
  40af55:	and    DWORD PTR ds:0xf48c65e5,0xe
  40af5c:	sub    ebx,eax
  40af5e:	fdivr  QWORD PTR [edi]
  40af60:	xchg   ebp,eax
  40af61:	out    dx,al
  40af62:	pop    eax
  40af63:	xor    al,0xfb
  40af65:	cmp    al,0xc0
  40af67:	stos   BYTE PTR es:[edi],al
  40af68:	jb     0x40afaf
  40af6a:	jae    0x40af1a
  40af6c:	and    bl,BYTE PTR ds:0x92e44f72
  40af72:	or     al,0x1a
  40af74:	push   es
  40af75:	xchg   ebx,eax
  40af76:	dec    ecx
  40af77:	mov    ebx,0x4461de2d
  40af7d:	ins    DWORD PTR es:[edi],dx
  40af7e:	leave  
  40af7f:	das    
  40af80:	aaa    
  40af81:	push   eax
  40af82:	and    DWORD PTR [eax+edi*1],0x7
  40af86:	and    DWORD PTR [edi],ebx
  40af88:	ret    0x3478
  40af8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af8c:	outs   dx,DWORD PTR ds:[esi]
  40af8d:	adc    DWORD PTR [edi-0x2a2ba6bd],0xffffffe8
  40af94:	and    al,0xa0
  40af96:	or     bh,BYTE PTR [edi+0x18]
  40af99:	pusha  
  40af9a:	cwde   
  40af9b:	or     al,0xc7
  40af9d:	dec    eax
  40af9e:	sub    DWORD PTR [edi],esp
  40afa0:	jae    0x40af42
  40afa2:	jmp    0x8f6d:0x44f33202
  40afa9:	aaa    
  40afaa:	aaa    
  40afab:	pop    edi
  40afac:	std    
  40afad:	jbe    0x40af4d
  40afaf:	hlt    
  40afb0:	cld    
  40afb1:	and    bl,BYTE PTR [edx]
  40afb3:	popa   
  40afb4:	jae    0x40afb3
  40afb6:	jp     0x40afa5
  40afb8:	aad    0xde
  40afba:	scas   al,BYTE PTR es:[edi]
  40afbb:	xor    ch,BYTE PTR [ebp+0x16]
  40afbe:	dec    edi
  40afbf:	fsubr  st,st(7)
  40afc1:	das    
  40afc2:	or     bl,BYTE PTR es:[ebx+eiz*1-0x64]
  40afc7:	lods   al,BYTE PTR ds:[esi]
  40afc8:	dec    ebp
  40afc9:	outs   dx,DWORD PTR ds:[esi]
  40afca:	scas   eax,DWORD PTR es:[edi]
  40afcb:	jecxz  0x40b046
  40afcd:	mov    bh,0x69
  40afcf:	jge    0x40af84
  40afd1:	daa    
  40afd2:	fisub  WORD PTR [ebp+0x4b131ef3]
  40afd8:	gs gs xor ebx,esp
  40afdc:	les    edi,FWORD PTR [esi-0x4d]
  40afdf:	jl     0x40afdd
  40afe1:	dec    esi
  40afe2:	adc    eax,0xda02784e
  40afe7:	pop    ecx
  40afe8:	pop    ebx
  40afe9:	in     eax,dx
  40afea:	add    ch,dh
  40afec:	lahf   
  40afed:	dec    eax
  40afee:	jl     0x40b06f
  40aff0:	sbb    BYTE PTR [edi+0x460bf23e],dl
  40aff6:	inc    edi
  40aff7:	or     edi,edx
  40aff9:	ss push ds
  40affb:	mov    ch,cl
  40affd:	lahf   
  40affe:	das    
  40afff:	xor    ebx,esi
  40b001:	fadd   DWORD PTR [ebx-0xe515b8b]
  40b007:	(bad)  
  40b008:	clc    
  40b009:	pop    edx
  40b00a:	leave  
  40b00b:	mov    ds:0x5a3a8dae,eax
  40b010:	lods   eax,DWORD PTR ds:[esi]
  40b011:	cmc    
  40b012:	adc    bh,BYTE PTR [ebx]
  40b014:	imul   esp,DWORD PTR [edx-0x4b54545d],0xe5af235
  40b01e:	test   DWORD PTR [ecx+0x24],esi
  40b021:	nop
  40b022:	xor    edi,DWORD PTR [ecx]
  40b024:	aas    
  40b025:	and    BYTE PTR [edi],al
  40b027:	stos   BYTE PTR es:[edi],al
  40b028:	lea    edi,[edi]
  40b02a:	js     0x40afe4
  40b02c:	cld    
  40b02d:	adc    DWORD PTR [ebp-0x292fbc95],0x2aa4360
  40b037:	pop    DWORD PTR [esi-0x4243f7ff]
  40b03d:	pushf  
  40b03e:	(bad)  
  40b03f:	mov    esi,DWORD PTR [ebp+0x7b99f34f]
  40b045:	into   
  40b046:	fisubr WORD PTR [ecx]
  40b048:	ins    DWORD PTR es:[edi],dx
  40b049:	xor    ebx,DWORD PTR ds:0x686fb24f
  40b04f:	sub    DWORD PTR [edi-0x15],ebp
  40b052:	idiv   BYTE PTR [ecx-0x1cab625c]
  40b058:	nop
  40b059:	xor    eax,0xbd9eddd8
  40b05e:	push   edi
  40b05f:	push   eax
  40b060:	fwait
  40b061:	pop    ecx
  40b062:	dec    esi
  40b063:	pusha  
  40b064:	sub    dh,BYTE PTR [edi+0x1e]
  40b067:	fisttp WORD PTR [edx+0x67]
  40b06a:	jnp    0x40b0e3
  40b06c:	arpl   WORD PTR [edi+0x3d],di
  40b06f:	jecxz  0x40b099
  40b071:	stos   DWORD PTR es:[edi],eax
  40b072:	les    edx,FWORD PTR [ebp-0x25b9869]
  40b078:	pop    edi
  40b079:	clc    
  40b07a:	mov    cl,0xdc
  40b07c:	jne    0x40b06f
  40b07e:	mov    BYTE PTR [edi-0x333c56b3],dl
  40b084:	cmp    DWORD PTR [ecx],ebp
  40b086:	mov    bh,0xd0
  40b088:	sbb    BYTE PTR [esi+0x62],cl
  40b08b:	mov    esi,0xdca11998
  40b090:	and    al,0xe4
  40b092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b093:	and    DWORD PTR [edi+0x6cc833b0],ebp
  40b099:	inc    DWORD PTR [ecx-0x5d98df60]
  40b09f:	jge    0x40b0d9
  40b0a1:	imul   ebp,edx,0xffffffa7
  40b0a4:	ror    DWORD PTR [ebx-0x2a],1
  40b0a7:	and    al,BYTE PTR [eax-0x42]
  40b0aa:	sub    BYTE PTR [ebx+0xe666ec6],dh
  40b0b0:	lds    edi,FWORD PTR [edx]
  40b0b2:	sub    DWORD PTR [eax],ebp
  40b0b4:	cmp    ecx,DWORD PTR [ecx]
  40b0b6:	xor    DWORD PTR [ebp-0x8],esp
  40b0b9:	mov    edi,0xaaf95c83
  40b0be:	stc    
  40b0bf:	or     BYTE PTR gs:[edi-0x760a84da],cl
  40b0c6:	retf   0xc3aa
  40b0c9:	inc    eax
  40b0ca:	add    bl,BYTE PTR [eax]
  40b0cc:	test   eax,0x9a2240d4
  40b0d2:	mov    ecx,0x4d14be91
  40b0d7:	pop    ds
  40b0d8:	cmp    al,0x4f
  40b0da:	sub    dh,BYTE PTR [edi+0x4e74cccf]
  40b0e0:	dec    edx
  40b0e1:	inc    ebp
  40b0e2:	out    dx,al
  40b0e3:	rol    BYTE PTR [edi],0x69
  40b0e6:	das    
  40b0e7:	sub    al,0xfd
  40b0e9:	test   al,0xa0
  40b0eb:	js     0x40b0c3
  40b0ed:	ja     0x40b126
  40b0ef:	test   dh,ch
  40b0f1:	outs   dx,BYTE PTR ds:[esi]
  40b0f2:	cdq    
  40b0f3:	aad    0x9f
  40b0f5:	mov    esp,0xe81efcbd
  40b0fa:	ror    BYTE PTR [ebx+0x842324d],cl
  40b100:	in     al,0x6a
  40b102:	fld    DWORD PTR [eax+0x0]
  40b105:	lds    ecx,FWORD PTR [ebp-0x65678ade]
  40b10b:	jge    0x40b0e6
  40b10d:	cwde   
  40b10e:	scas   eax,DWORD PTR es:[edi]
  40b10f:	mov    ch,0x60
  40b111:	pop    ds
  40b112:	jae    0x40b13f
  40b114:	pop    es
  40b115:	mov    ecx,0xcb29d771
  40b11a:	pop    edi
  40b11b:	and    BYTE PTR [eax+0x234d661d],al
  40b121:	sub    DWORD PTR [edx-0x7e6ca236],0x5c
  40b128:	cwde   
  40b129:	push   ss
  40b12a:	or     esi,DWORD PTR [ebp-0x58f79d78]
  40b130:	mov    eax,0xcb0e3464
  40b135:	xchg   edi,eax
  40b136:	sbb    DWORD PTR ds:0xe6324936,esi
  40b13c:	js     0x40b0db
  40b13e:	sbb    bl,BYTE PTR [ecx-0x2d]
  40b141:	xor    eax,0xbf9a672d
  40b146:	enter  0x83a7,0x37
  40b14a:	out    dx,eax
  40b14b:	es jbe 0x40b10c
  40b14e:	fs aaa 
  40b150:	iret   
  40b151:	jmp    0x40b12f
  40b153:	inc    ebp
  40b154:	fst    st(6)
  40b156:	in     al,0x4c
  40b158:	data16 (bad) 
  40b15a:	fisubr DWORD PTR [eax-0x5516025e]
  40b160:	leave  
  40b161:	cmp    BYTE PTR [ebx-0x15],ah
  40b164:	popa   
  40b165:	call   0xf4dc3ea6
  40b16a:	rol    BYTE PTR [edi-0x122c2750],0x3e
  40b171:	xchg   esi,eax
  40b172:	add    eax,0xe8a22fe2
  40b177:	sub    DWORD PTR [ebx],eax
  40b179:	mov    eax,0x3baf6350
  40b17e:	shr    DWORD PTR [edi+0x21],1
  40b181:	sbb    bh,ch
  40b183:	icebp  
  40b184:	sbb    al,0xaf
  40b186:	fcmovbe st,st(2)
  40b188:	pop    edx
  40b189:	adc    esp,eax
  40b18b:	jne    0x40b1f3
  40b18d:	dec    ebx
  40b18e:	pusha  
  40b18f:	repz int 0xda
  40b192:	sbb    esi,0x6a
  40b195:	pop    edi
  40b196:	clc    
  40b197:	jp     0x40b14c
  40b199:	cld    
  40b19a:	push   ds
  40b19b:	idiv   BYTE PTR [ebp-0x5c]
  40b19e:	sub    DWORD PTR [ecx+0x54294700],esi
  40b1a4:	inc    ecx
  40b1a5:	stos   BYTE PTR es:[edi],al
  40b1a6:	ror    DWORD PTR [ebx+0x2710e4b6],cl
  40b1ac:	pop    ebp
  40b1ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1ae:	or     al,0x63
  40b1b0:	out    0xe0,al
  40b1b2:	in     al,dx
  40b1b3:	test   edi,0x656604b
  40b1b9:	mov    al,0x4b
  40b1bb:	push   ebp
  40b1bc:	cmp    eax,0xd970b92c
  40b1c1:	sbb    BYTE PTR [ebp-0x70],ch
  40b1c4:	dec    esi
  40b1c5:	mov    ebx,0xbcb22f25
  40b1ca:	pop    ecx
  40b1cb:	and    cl,dh
  40b1cd:	ror    ebx,1
  40b1cf:	adc    al,0xd4
  40b1d1:	js     0x40b17c
  40b1d3:	retf   0xc84
  40b1d6:	adc    cl,BYTE PTR [ecx-0x38]
  40b1d9:	and    edx,DWORD PTR [edi]
  40b1db:	pop    eax
  40b1dc:	(bad)  
  40b1dd:	mov    cl,0xd0
  40b1df:	pop    ecx
  40b1e0:	shl    DWORD PTR [ecx-0x33],cl
  40b1e3:	adc    eax,0xadbd4423
  40b1e8:	jb     0x40b256
  40b1ea:	hlt    
  40b1eb:	loop   0x40b1b6
  40b1ed:	out    dx,al
  40b1ee:	arpl   WORD PTR [eax-0x59],bx
  40b1f1:	sti    
  40b1f2:	pop    ds
  40b1f3:	pop    esp
  40b1f4:	pop    es
  40b1f5:	inc    edi
  40b1f6:	clc    
  40b1f7:	lock adc edi,DWORD PTR [esi]
  40b1fa:	ret    
  40b1fb:	cwde   
  40b1fc:	les    ebp,FWORD PTR [ebx+0x2bf64c6c]
  40b202:	or     eax,0x4d381f59
  40b207:	cmp    eax,0x4f89567e
  40b20c:	stos   BYTE PTR es:[edi],al
  40b20d:	mov    edx,DWORD PTR [edx+0x5d]
  40b210:	xor    al,0xdd
  40b212:	fild   QWORD PTR [ecx+0x4b]
  40b215:	and    BYTE PTR [ebp-0x5937b0ca],bh
  40b21b:	fwait
  40b21c:	inc    ebp
  40b21d:	fs cmp ebx,edi
  40b220:	cdq    
  40b221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b222:	mov    ?,WORD PTR [ecx-0x5b885366]
  40b228:	and    BYTE PTR [ecx],bh
  40b22a:	sbb    eax,0x5433b122
  40b22f:	push   0xf517aee9
  40b234:	mov    ecx,0x898c1ffb
  40b239:	enter  0x5ea1,0xce
  40b23d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23e:	jnp    0x40b217
  40b240:	push   ecx
  40b241:	es (bad) 
  40b243:	int3   
  40b244:	pop    ecx
  40b245:	and    al,0x4a
  40b248:	add    BYTE PTR [edi+ecx*4],bh
  40b24b:	mov    ds:0x6127c242,al
  40b250:	jg     0x40b1f3
  40b252:	jmp    0x40b24b
  40b254:	xchg   eax,ebp
  40b256:	fmul   DWORD PTR [edx]
  40b258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b259:	mov    ecx,0xa954dd35
  40b25e:	test   eax,0x7b4175ad
  40b264:	and    eax,0xc521a210
  40b269:	xchg   BYTE PTR [ecx-0x2],ah
  40b26c:	sub    ebp,DWORD PTR [edi+0x61]
  40b26f:	outs   dx,DWORD PTR ds:[esi]
  40b270:	aaa    
  40b271:	adc    ecx,ebp
  40b273:	popf   
  40b274:	out    0xa1,eax
  40b276:	outs   dx,DWORD PTR ds:[esi]
  40b277:	not    DWORD PTR [eax-0x58]
  40b27a:	xchg   BYTE PTR [ecx+0x6e8c171d],ah
  40b280:	or     BYTE PTR [edx+0x54],bh
  40b283:	pop    es
  40b284:	mov    ebp,0x587e5bd1
  40b289:	not    BYTE PTR [eax+0x6338ccc6]
  40b28f:	retf   
  40b290:	mov    bh,0x59
  40b292:	in     al,0x7f
  40b294:	pop    ds
  40b295:	adc    edx,DWORD PTR [edi]
  40b297:	cmp    eax,0xb3c547f6
  40b29c:	pop    ebx
  40b29d:	loope  0x40b2bd
  40b29f:	xchg   edi,eax
  40b2a0:	push   ebx
  40b2a1:	sahf   
  40b2a2:	aas    
  40b2a3:	dec    esi
  40b2a4:	pop    edx
  40b2a5:	mov    edi,0x6ed0b8ba
  40b2aa:	push   ebx
  40b2ab:	add    esp,DWORD PTR [edi-0x70]
  40b2ae:	push   esp
  40b2af:	pop    ebx
  40b2b0:	rcr    BYTE PTR [ecx+0x48008c76],1
  40b2b6:	push   0x25
  40b2b8:	je     0x40b23a
  40b2ba:	in     al,0x20
  40b2bc:	int3   
  40b2bd:	into   
  40b2be:	dec    ebx
  40b2bf:	cmp    al,0x70
  40b2c1:	repnz loop 0x40b2a0
  40b2c4:	add    eax,edx
  40b2c6:	sahf   
  40b2c7:	into   
  40b2c8:	mov    dh,0xcd
  40b2ca:	imul   ecx,edi,0xaaf9de5c
  40b2d0:	dec    BYTE PTR [ebx+eax*8]
  40b2d3:	ss mov esi,0x9c2087d6
  40b2d9:	push   0xffffffb0
  40b2db:	add    edx,DWORD PTR [esi-0x41]
  40b2de:	jl     0x40b2e1
  40b2e0:	and    ebx,DWORD PTR [edx]
  40b2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e3:	mov    ecx,eax
  40b2e5:	and    esi,esp
  40b2e7:	repnz out dx,al
  40b2e9:	shr    DWORD PTR [edi+eax*1],cl
  40b2ec:	nop
  40b2ed:	dec    edi
  40b2ee:	repz mov gs,WORD PTR [eax]
  40b2f1:	(bad)  
  40b2f2:	pop    ds
  40b2f3:	repz push ds
  40b2f5:	inc    ebp
  40b2f6:	retf   
  40b2f7:	jg     0x40b31b
  40b2f9:	push   ss
  40b2fa:	xor    DWORD PTR [eax+0x7b5a1f0e],edx
  40b300:	jo     0x40b306
  40b302:	xchg   esi,eax
  40b303:	or     BYTE PTR [ecx-0x4],cl
  40b306:	rcr    DWORD PTR [edi],cl
  40b308:	sub    DWORD PTR [ecx+0x6c],ebp
  40b30b:	sbb    eax,DWORD PTR [ebp+edi*2-0x31]
  40b30f:	call   0xb7f9:0xf1e76453
  40b316:	mov    ah,0x6a
  40b318:	lahf   
  40b319:	dec    BYTE PTR [esi]
  40b31b:	adc    bl,BYTE PTR [eax+ebp*1]
  40b31e:	(bad)  
  40b31f:	test   BYTE PTR [edx],0xc9
  40b322:	push   eax
  40b323:	push   es
  40b324:	adc    al,0x53
  40b326:	test   al,0x18
  40b328:	mov    bh,al
  40b32a:	daa    
  40b32b:	(bad)  
  40b32c:	push   0x9d90efba
  40b331:	mov    ch,dh
  40b333:	fistp  WORD PTR [eax+0x31]
  40b336:	cli    
  40b337:	sbb    al,0x3a
  40b339:	add    BYTE PTR [esp+ecx*2],ch
  40b33c:	cwde   
  40b33d:	icebp  
  40b33e:	in     al,0x75
  40b340:	inc    esi
  40b341:	inc    esp
  40b342:	outs   dx,DWORD PTR ds:[esi]
  40b343:	lea    eax,[ecx+0x28097a10]
  40b349:	jp     0x40b304
  40b34b:	and    DWORD PTR [eax],edx
  40b34d:	mov    al,0x44
  40b34f:	stos   DWORD PTR es:[edi],eax
  40b350:	jnp    0x40b338
  40b352:	icebp  
  40b353:	cmp    BYTE PTR [ebp-0x2d],cl
  40b356:	cmp    eax,DWORD PTR [ebp+0x52]
  40b359:	neg    BYTE PTR [ebx+0x709a51a7]
  40b35f:	cdq    
  40b360:	mov    ds:0xdaaf4b83,eax
  40b365:	sub    eax,0x4b875983
  40b36a:	xchg   esi,eax
  40b36b:	imul   DWORD PTR [eax]
  40b36d:	popa   
  40b36e:	iret   
  40b36f:	mov    ah,0x7b
  40b371:	fcomp  QWORD PTR [eax-0x69468b16]
  40b377:	sbb    dl,BYTE PTR [eax+ebx*8+0x29]
  40b37b:	(bad)  
  40b37c:	mov    bl,0x61
  40b37e:	inc    ebp
  40b37f:	and    edx,DWORD PTR [esi-0x38]
  40b382:	fsubr  st(5),st
  40b384:	mov    al,0x32
  40b386:	aas    
  40b387:	(bad)  
  40b388:	push   ss
  40b389:	data16 test al,0xa0
  40b38c:	push   0x3e
  40b38e:	cdq    
  40b38f:	aaa    
  40b390:	pop    ecx
  40b391:	cmp    DWORD PTR [eax-0x1c291995],eax
  40b397:	out    dx,al
  40b398:	or     eax,0xce4add8c
  40b39d:	in     eax,0x47
  40b39f:	outs   dx,BYTE PTR ds:[esi]
  40b3a0:	fcmovne st,st(3)
  40b3a2:	xor    DWORD PTR [ebp-0x2d],ecx
  40b3a5:	scas   eax,DWORD PTR es:[edi]
  40b3a6:	push   ds
  40b3a7:	invd   
  40b3a9:	pop    ebx
  40b3aa:	sbb    DWORD PTR [edi],esi
  40b3ac:	sub    eax,0x99e26db2
  40b3b1:	call   0x95e:0xa0518504
  40b3b8:	push   esi
  40b3b9:	cmp    eax,0xa2168e8a
  40b3be:	inc    esi
  40b3bf:	mov    bh,dl
  40b3c1:	(bad)  
  40b3c3:	inc    esi
  40b3c4:	adc    DWORD PTR [esi+eax*8+0x40],ebx
  40b3c8:	test   BYTE PTR [edi],ch
  40b3ca:	fcomi  st,st(5)
  40b3cc:	push   0xb51014e9
  40b3d1:	aad    0xc
  40b3d3:	sub    DWORD PTR [edx-0x75925bb3],0x3c2c2e63
  40b3dd:	scas   eax,DWORD PTR es:[edi]
  40b3de:	xchg   esp,eax
  40b3df:	pop    ebp
  40b3e0:	inc    esi
  40b3e1:	retf   
  40b3e2:	aaa    
  40b3e3:	popf   
  40b3e4:	sti    
  40b3e5:	jnp    0x40b3aa
  40b3e7:	or     BYTE PTR [ecx],0x42
  40b3ea:	pushf  
  40b3eb:	retf   0xb2a4
  40b3ee:	adc    ebx,edx
  40b3f0:	aaa    
  40b3f1:	cmp    ebx,edx
  40b3f3:	rol    DWORD PTR [esi+0x71],0xe2
  40b3f7:	adc    BYTE PTR [esp+edi*4],dl
  40b3fa:	into   
  40b3fb:	inc    edx
  40b3fc:	add    al,0x12
  40b3fe:	mov    ds:0xb4163172,al
  40b403:	sar    al,1
  40b405:	mov    ds:0x6d4bc59d,eax
  40b40a:	jb     0x40b392
  40b40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b40d:	xchg   cl,dl
  40b40f:	jmp    edx
  40b411:	sbb    eax,0xb0be33ca
  40b416:	pop    ss
  40b417:	pop    esi
  40b418:	mov    cl,0x87
  40b41a:	ror    BYTE PTR [edx],1
  40b41c:	xor    ebx,edx
  40b41e:	mov    ds:0xa1a13d6e,al
  40b423:	ins    DWORD PTR es:[edi],dx
  40b424:	mov    ebx,0xd9035b47
  40b429:	mov    cl,0x74
  40b42b:	push   edi
  40b42c:	push   esi
  40b42d:	mov    al,0xe0
  40b42f:	push   edi
  40b430:	out    0xe8,eax
  40b432:	neg    BYTE PTR [ebx]
  40b434:	js     0x40b481
  40b436:	push   ebx
  40b437:	scas   al,BYTE PTR es:[edi]
  40b438:	clc    
  40b439:	cli    
  40b43a:	xchg   ebp,eax
  40b43b:	jge    0x40b3e6
  40b43d:	dec    esi
  40b43e:	dec    BYTE PTR [ebx-0x2e390962]
  40b444:	ss das 
  40b446:	sub    DWORD PTR [edi+0x38],ecx
  40b449:	pop    es
  40b44a:	loope  0x40b3d2
  40b44c:	push   esp
  40b44d:	out    0x12,al
  40b44f:	loopne 0x40b4d0
  40b451:	mov    al,0x5b
  40b453:	inc    ebp
  40b454:	mov    cl,0x37
  40b456:	push   cs
  40b457:	pop    esi
  40b458:	cld    
  40b459:	jnp    0x40b49e
  40b45b:	mov    eax,ds:0xb31e51a3
  40b460:	aad    0x7f
  40b462:	inc    edi
  40b463:	loope  0x40b4ae
  40b465:	fcomp  QWORD PTR [edi]
  40b467:	dec    edx
  40b468:	nop
  40b469:	xor    DWORD PTR [ebx-0x189e0897],ecx
  40b46f:	inc    edx
  40b470:	(bad)  
  40b471:	jl     0x40b46a
  40b473:	jo     0x40b4d1
  40b475:	mov    ss,WORD PTR [ebp+0xbf4abe5]
  40b47b:	(bad)  
  40b47c:	mov    esi,DWORD PTR [ebp-0x7558ffa8]
  40b482:	imul   esp,edx,0x69f2e4c4
  40b488:	(bad)  
  40b489:	cs ins DWORD PTR es:[edi],dx
  40b48b:	ins    BYTE PTR es:[edi],dx
  40b48c:	ins    BYTE PTR es:[edi],dx
  40b48d:	jp     0x40b42c
  40b48f:	xor    BYTE PTR [edi-0x7d],ah
  40b492:	push   cs
  40b493:	mov    esi,0x42be13ac
  40b498:	neg    DWORD PTR [edx-0x2b9940d2]
  40b49e:	jae    0x40b480
  40b4a0:	cmp    al,0x91
  40b4a2:	sub    ah,bh
  40b4a4:	dec    edx
  40b4a5:	sbb    ebp,ecx
  40b4a7:	add    DWORD PTR [edx+edx*1],edx
  40b4aa:	sbb    eax,DWORD PTR [ebx-0x10988f9f]
  40b4b0:	cmp    eax,0x5bec2bbc
  40b4b5:	adc    DWORD PTR [esi],edx
  40b4b7:	iret   
  40b4b8:	out    dx,al
  40b4b9:	or     al,0xa4
  40b4bb:	adc    al,0x35
  40b4bd:	adc    BYTE PTR [edx-0x5893d0aa],bh
  40b4c3:	sbb    ch,cl
  40b4c5:	call   0x3bd:0xf3f2c4d
  40b4cc:	push   es
  40b4cd:	inc    ebx
  40b4ce:	popa   
  40b4cf:	push   edi
  40b4d0:	adc    bl,BYTE PTR [ecx+0x52061073]
  40b4d6:	ss in  al,0x7f
  40b4d9:	and    al,0x2
  40b4db:	xchg   DWORD PTR [ebp-0x681e17d5],eax
  40b4e1:	frstor [eax-0xe]
  40b4e4:	lock sub DWORD PTR [ecx-0x58],ebp
  40b4e8:	xchg   edx,eax
  40b4e9:	neg    eax
  40b4eb:	mov    ch,0xea
  40b4ed:	mov    ch,ah
  40b4ef:	push   ecx
  40b4f0:	inc    edi
  40b4f1:	div    esi
  40b4f3:	out    dx,al
  40b4f4:	fincstp 
  40b4f6:	aad    0x62
  40b4f8:	lods   al,BYTE PTR ds:[esi]
  40b4f9:	sbb    edx,eax
  40b4fb:	js     0x40b52a
  40b4fd:	and    dl,bh
  40b4ff:	xchg   ecx,eax
  40b500:	lea    esi,[ecx+0x32]
  40b503:	sbb    eax,0xdf6c701b
  40b508:	and    al,0x64
  40b50a:	cmp    bl,dl
  40b50c:	sbb    ebp,esi
  40b50e:	cli    
  40b50f:	fistp  DWORD PTR [eax+0x5c]
  40b512:	loop   0x40b4c8
  40b514:	mov    ebx,0x286caea9
  40b519:	xlat   BYTE PTR ds:[ebx]
  40b51a:	inc    ebp
  40b51b:	mov    ecx,0x5eaf1f28
  40b520:	and    cl,bl
  40b522:	les    edx,FWORD PTR [ecx+0x7d0a59b2]
  40b528:	jp     0x40b572
  40b52a:	out    0xa5,al
  40b52c:	mov    eax,ds:0x7ed415e3
  40b531:	cmp    al,0x30
  40b533:	inc    edx
  40b534:	xchg   ecx,eax
  40b535:	sbb    DWORD PTR [eax],ecx
  40b537:	and    al,0x95
  40b539:	adc    al,0xfb
  40b53b:	inc    esp
  40b53c:	into   
  40b53d:	sbb    al,0xdc
  40b53f:	out    dx,al
  40b540:	loopne 0x40b4c9
  40b542:	xor    BYTE PTR [edi+0x21],bh
  40b545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b546:	push   ss
  40b547:	into   
  40b548:	jp     0x40b512
  40b54a:	xchg   ebx,eax
  40b54b:	sahf   
  40b54c:	mov    ds:0xca2e42b8,eax
  40b551:	(bad)  
  40b552:	(bad)  
  40b553:	cmp    eax,DWORD PTR [ebx]
  40b555:	or     BYTE PTR [edx+ecx*1],al
  40b558:	xchg   esp,eax
  40b559:	ds xchg esi,eax
  40b55b:	rol    bl,cl
  40b55d:	fadd   st(1),st
  40b55f:	adc    ebp,ebp
  40b561:	shl    ebx,cl
  40b563:	arpl   WORD PTR [ecx],si
  40b565:	mov    dh,0xc5
  40b567:	xor    DWORD PTR [edi-0xc],0x7f
  40b56b:	sub    ebp,ecx
  40b56d:	mov    edx,0x3c16104c
  40b572:	shr    DWORD PTR [ecx+0x5b],1
  40b575:	xor    edx,ebp
  40b577:	or     al,0x72
  40b579:	push   ds
  40b57a:	clc    
  40b57b:	ror    eax,cl
  40b57d:	xchg   esi,eax
  40b57e:	xor    bl,BYTE PTR [ecx]
  40b580:	inc    ecx
  40b581:	dec    edx
  40b582:	push   esp
  40b583:	fisttp QWORD PTR [ebp+0x341c8e46]
  40b589:	scas   al,BYTE PTR es:[edi]
  40b58a:	daa    
  40b58b:	repz mov ?,WORD PTR [ebp+ebx*4-0x22]
  40b590:	test   eax,0x698e5f36
  40b595:	add    eax,0x15774d0e
  40b59a:	mov    dl,BYTE PTR [ecx+0x72d5adf7]
  40b5a0:	aas    
  40b5a1:	call   0x78f9:0xc2a5c625
  40b5a8:	push   esi
  40b5a9:	pop    esp
  40b5aa:	pop    ebp
  40b5ab:	(bad)  [ecx-0x38]
  40b5ae:	jl     0x40b58c
  40b5b0:	mov    ebx,0x7ddc378c
  40b5b5:	add    bl,BYTE PTR [ebx]
  40b5b7:	adc    DWORD PTR [edi-0xd],ebp
  40b5ba:	dec    esi
  40b5bb:	xor    esi,esi
  40b5bd:	shl    DWORD PTR [ebx],cl
  40b5bf:	out    0x6d,eax
  40b5c1:	stc    
  40b5c2:	cmp    cl,BYTE PTR [edx+0x35]
  40b5c5:	push   edx
  40b5c6:	pop    ss
  40b5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c8:	and    DWORD PTR [ebx+0x3d717c7a],edi
  40b5ce:	(bad)  
  40b5cf:	(bad)  
  40b5d0:	int3   
  40b5d1:	ins    DWORD PTR es:[edi],dx
  40b5d2:	inc    ebp
  40b5d3:	and    ebx,DWORD PTR ds:0x8588c5f5
  40b5d9:	mov    ebp,0xce2b0236
  40b5de:	lods   al,BYTE PTR ds:[esi]
  40b5df:	js     0x40b566
  40b5e1:	xor    al,0x1a
  40b5e3:	lods   eax,DWORD PTR ds:[esi]
  40b5e4:	popa   
  40b5e5:	pop    edx
  40b5e6:	shufps xmm6,xmm4,0x19
  40b5ea:	sub    edx,DWORD PTR [edx]
  40b5ec:	adc    esi,DWORD PTR [ebx+0x1f6e74ca]
  40b5f2:	push   es
  40b5f3:	mov    cl,0xc4
  40b5f5:	aad    0x54
  40b5f7:	aaa    
  40b5f8:	mov    al,ds:0x657138b1
  40b5fd:	jmp    0x78db:0x937af3ba
  40b604:	fimul  DWORD PTR [esi]
  40b606:	push   esi
  40b607:	out    0x6b,al
  40b609:	and    ch,BYTE PTR ds:0x6ffb0b32
  40b60f:	xor    ah,BYTE PTR [ecx+0x19]
  40b612:	mov    BYTE PTR [ecx-0x6c],0xc8
  40b616:	ret    0xf9d6
  40b619:	loope  0x40b639
  40b61b:	and    DWORD PTR [eax],0x7f
  40b61e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b61f:	aam    0xe1
  40b621:	xchg   ebp,eax
  40b622:	call   0x7801:0x521a5330
  40b629:	ret    0x7e61
  40b62c:	ja     0x40b5be
  40b62e:	pop    edx
  40b62f:	mov    DWORD PTR [edx-0x2fd8bb75],esp
  40b635:	pop    edi
  40b636:	push   0x50
  40b638:	pop    ebx
  40b639:	xor    al,0x5b
  40b63b:	int3   
  40b63c:	lds    ebx,FWORD PTR [edi]
  40b63e:	outs   dx,BYTE PTR ds:[esi]
  40b63f:	dec    ebp
  40b640:	inc    esi
  40b641:	jb     0x40b646
  40b643:	inc    edx
  40b644:	push   ss
  40b645:	cmp    dl,0x75
  40b648:	xor    ebp,edi
  40b64a:	cmc    
  40b64b:	cmp    bl,BYTE PTR ds:0x4634ef31
  40b651:	(bad)
  40b654:	inc    ecx
  40b655:	dec    edi
  40b656:	in     eax,dx
  40b657:	cdq    
  40b658:	cmp    al,0x9b
  40b65a:	leave  
  40b65b:	fadd   QWORD PTR [edx]
  40b65d:	lock ror ch,cl
  40b660:	xor    BYTE PTR [edx],ch
  40b662:	cmc    
  40b663:	ins    BYTE PTR es:[edi],dx
  40b664:	int    0x99
  40b666:	shr    BYTE PTR [edi-0x4b5c75da],1
  40b66c:	repz push esi
  40b66e:	push   es
  40b66f:	test   DWORD PTR [esi],ecx
  40b671:	int    0x2c
  40b673:	xchg   ecx,eax
  40b674:	and    dl,BYTE PTR [esi+0x43d78ea7]
  40b67a:	sub    bh,BYTE PTR [eax+0x1a1d8f66]
  40b680:	ja     0x40b62d
  40b682:	stc    
  40b683:	push   0xffffffbc
  40b685:	out    dx,al
  40b686:	out    dx,eax
  40b687:	sub    ebx,DWORD PTR [ecx+0x4]
  40b68a:	push   edi
  40b68b:	rcl    BYTE PTR [esi-0x118ebc3],1
  40b691:	sub    ch,bl
  40b693:	jge    0x40b65b
  40b695:	cwde   
  40b696:	or     BYTE PTR ss:[esi],al
  40b699:	mov    eax,ds:0x4ca5ddfd
  40b69e:	cdq    
  40b69f:	jg     0x40b6dc
  40b6a1:	(bad)  
  40b6a2:	dec    ebp
  40b6a3:	inc    edx
  40b6a4:	cli    
  40b6a5:	xor    cl,BYTE PTR [ecx]
  40b6a7:	in     al,dx
  40b6a8:	lods   al,BYTE PTR ds:[esi]
  40b6a9:	jmp    0x40b66e
  40b6ab:	cdq    
  40b6ac:	test   DWORD PTR [edx+0x399a5082],ebp
  40b6b2:	sbb    DWORD PTR [eax+eiz*8+0x39],0xe64910dc
  40b6ba:	stos   BYTE PTR es:[edi],al
  40b6bb:	pop    eax
  40b6bc:	mov    dl,0xc9
  40b6be:	sbb    ebp,DWORD PTR [ebp-0x7aa19d94]
  40b6c4:	iret   
  40b6c5:	xor    eax,0x134bb252
  40b6ca:	fimul  WORD PTR ds:0xb840099c
  40b6d0:	gs mov esi,0x5f4c3864
  40b6d6:	dec    ebp
  40b6d7:	mov    dl,0x14
  40b6d9:	ins    DWORD PTR es:[edi],dx
  40b6da:	sub    al,0x4e
  40b6dc:	xchg   ebx,eax
  40b6dd:	cld    
  40b6de:	cmp    DWORD PTR [edx],ebx
  40b6e0:	or     ebx,DWORD PTR [ebp+0x5]
  40b6e3:	jmp    0x3d452346
  40b6e8:	das    
  40b6e9:	ret    0xdd01
  40b6ec:	mov    dl,0x4b
  40b6ee:	in     eax,dx
  40b6ef:	push   esp
  40b6f0:	pop    edx
  40b6f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6f2:	repnz data16 repnz std 
  40b6f6:	mov    ebp,0x28866307
  40b6fb:	loope  0x40b72e
  40b6fd:	pop    esp
  40b6fe:	lea    eax,[ebx-0x10]
  40b701:	add    eax,0xf927407d
  40b706:	xor    DWORD PTR [esi-0x28b3639e],edi
  40b70c:	xchg   edx,eax
  40b70d:	push   0xffffffd7
  40b70f:	dec    esp
  40b710:	ret    0x9bbb
  40b713:	iret   
  40b714:	adc    ebx,edx
  40b716:	adc    ah,BYTE PTR [edx]
  40b718:	and    ecx,DWORD PTR [edi-0x5c7023c4]
  40b71e:	ins    DWORD PTR es:[edi],dx
  40b71f:	jp     0x40b6f9
  40b721:	inc    edx
  40b722:	not    BYTE PTR [esi+ebp*2+0x300e0feb]
  40b729:	mov    ebp,0x93651f47
  40b72e:	sbb    eax,0xd82b60be
  40b733:	pop    esi
  40b734:	add    eax,0x39c754d2
  40b739:	nop
  40b73a:	cmc    
  40b73b:	jmp    0x125b:0xcba5e320
  40b742:	fwait
  40b743:	ja     0x40b75c
  40b745:	jno    0x40b706
  40b747:	(bad)  
  40b748:	mov    dl,0x6c
  40b74a:	jno    0x40b7c9
  40b74c:	mov    bl,0x4f
  40b74e:	repz repz adc ch,BYTE PTR [edx-0xa]
  40b753:	(bad)  
  40b754:	jns    0x40b77f
  40b756:	mov    esp,0x3a16cfa1
  40b75b:	in     al,dx
  40b75c:	test   eax,0x8d3798d3
  40b761:	mov    eax,ds:0xf7d14965
  40b766:	sub    al,0xa5
  40b768:	mov    ebx,0xfd9f6439
  40b76d:	adc    bh,bh
  40b76f:	dec    ebx
  40b770:	lahf   
  40b771:	ror    DWORD PTR [edx+0x6e],0xc2
  40b775:	or     ebp,DWORD PTR [edx]
  40b777:	into   
  40b778:	sbb    DWORD PTR [esp+ebp*4-0xc],edx
  40b77c:	das    
  40b77d:	mov    dh,0x55
  40b77f:	mov    dl,0x82
  40b781:	xlat   BYTE PTR ds:[ebx]
  40b782:	push   cs
  40b783:	icebp  
  40b784:	dec    BYTE PTR [edx+0x35]
  40b787:	jae    0x40b755
  40b789:	mov    al,ds:0xbc24ea07
  40b78e:	pop    ebp
  40b78f:	stc    
  40b790:	dec    ecx
  40b791:	mov    bl,0x77
  40b793:	ret    0x219
  40b796:	mov    DWORD PTR [edx-0x6f],esi
  40b799:	mov    edx,0x719d8082
  40b79e:	push   ss
  40b79f:	and    al,0xd0
  40b7a1:	pop    ds
  40b7a2:	clc    
  40b7a3:	jmp    0xb5d:0x94818625
  40b7aa:	cvtps2pd xmm2,xmm5
  40b7ad:	aam    0xb9
  40b7af:	mov    edi,0x83254950
  40b7b4:	xchg   edx,eax
  40b7b5:	xor    BYTE PTR [esi+0x15baad2f],ch
  40b7bb:	cmp    edx,DWORD PTR ds:0x90cfabc6
  40b7c1:	js     0x40b784
  40b7c3:	fadd   QWORD PTR [ebp-0x79]
  40b7c6:	dec    edx
  40b7c7:	xchg   DWORD PTR [edx-0xbd6363],ebp
  40b7cd:	add    ch,BYTE PTR [edi+0x20]
  40b7d0:	int    0xaa
  40b7d2:	cli    
  40b7d3:	sbb    ecx,ebp
  40b7d5:	loopne 0x40b79b
  40b7d7:	or     eax,0x6946929c
  40b7dc:	fld    DWORD PTR [ebp-0x6406d6df]
  40b7e2:	push   0xb
  40b7e4:	xor    dl,BYTE PTR [esp+ebp*8-0x2c4f8547]
  40b7eb:	inc    al
  40b7ed:	in     al,0x71
  40b7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f0:	dec    ebp
  40b7f1:	shl    eax,1
  40b7f3:	cdq    
  40b7f4:	sub    edx,edi
  40b7f6:	xor    ch,BYTE PTR [ecx]
  40b7f8:	ins    DWORD PTR es:[edi],dx
  40b7f9:	add    DWORD PTR ds:0xe9c56348,edx
  40b7ff:	(bad)  
  40b800:	rcl    DWORD PTR [ebp-0x5012d77a],1
  40b806:	dec    esi
  40b807:	xor    BYTE PTR [ebx-0x7edee171],ah
  40b80d:	pop    edx
  40b80e:	push   esp
  40b80f:	and    BYTE PTR [edx-0x1f],dh
  40b812:	mov    WORD PTR [esi],es
  40b814:	das    
  40b815:	out    0xbf,eax
  40b817:	clc    
  40b818:	cmp    al,0xef
  40b81a:	xor    al,0x62
  40b81c:	(bad)  
  40b81d:	adc    ebp,DWORD PTR [ebp+0x6e]
  40b820:	inc    edi
  40b821:	mov    bl,0x56
  40b823:	cmp    al,0x95
  40b825:	ja     0x40b83a
  40b827:	adc    DWORD PTR [ebx+eiz*1+0x59102198],eax
  40b82e:	adc    eax,DWORD PTR [esi]
  40b830:	sub    ebp,eax
  40b832:	inc    esi
  40b833:	mov    ds:0xdce4db68,eax
  40b838:	lods   eax,DWORD PTR ds:[esi]
  40b839:	cmp    eax,0xb56ba78c
  40b83e:	mov    esp,ebp
  40b840:	pop    eax
  40b841:	in     eax,dx
  40b842:	push   ds
  40b843:	sbb    al,BYTE PTR [esi]
  40b845:	in     al,dx
  40b846:	cmp    edi,DWORD PTR [edi-0x39ef18c6]
  40b84c:	and    esi,DWORD PTR [edx-0x3b]
  40b84f:	fild   DWORD PTR [ebx]
  40b851:	xlat   BYTE PTR ds:[ebx]
  40b852:	lds    eax,FWORD PTR [ebp-0x3d]
  40b855:	fadd   DWORD PTR [esi]
  40b857:	into   
  40b858:	pop    es
  40b859:	mov    dl,0x1a
  40b85b:	push   ecx
  40b85c:	sahf   
  40b85d:	lods   al,BYTE PTR ds:[esi]
  40b85e:	xor    DWORD PTR [edi+esi*2-0x7f8e0007],esp
  40b865:	gs retf 0xe109
  40b869:	ret    
  40b86a:	rcl    al,0x1a
  40b86d:	sub    DWORD PTR [ecx-0x78],ebp
  40b870:	stos   BYTE PTR es:[edi],al
  40b871:	and    eax,0xebe5bae7
  40b876:	dec    eax
  40b877:	and    al,0xc3
  40b879:	retf   
  40b87a:	inc    edi
  40b87b:	push   0xffffffbb
  40b87d:	mov    edx,cs
  40b87f:	ins    DWORD PTR es:[edi],dx
  40b880:	dec    esi
  40b881:	fs xchg ecx,eax
  40b883:	sbb    esi,DWORD PTR [ecx+0x7bb60807]
  40b889:	jp     0x40b816
  40b88b:	cli    
  40b88c:	jnp    0x40b880
  40b88e:	push   0xffffffb9
  40b890:	sbb    ebx,edx
  40b892:	outs   dx,DWORD PTR ds:[esi]
  40b893:	jg     0x40b8dd
  40b895:	aas    
  40b896:	jne    0x40b912
  40b898:	mov    ah,0x5d
  40b89a:	push   0xba259952
  40b89f:	cmc    
  40b8a0:	aad    0x9a
  40b8a2:	(bad)  
  40b8a3:	jle    0x40b84e
  40b8a5:	(bad)  
  40b8a6:	push   esp
  40b8a7:	lods   al,BYTE PTR ds:[esi]
  40b8a8:	sbb    BYTE PTR [edx-0x2717b990],0x5
  40b8af:	xchg   ecx,eax
  40b8b0:	std    
  40b8b1:	mov    ebx,0xda04567a
  40b8b6:	(bad)  
  40b8b7:	sti    
  40b8b8:	(bad)  
  40b8b9:	(bad)  
  40b8ba:	call   0xd6a9c456
  40b8bf:	inc    ebp
  40b8c0:	enter  0xd397,0xf3
  40b8c4:	fdiv   QWORD PTR [edx+0x2d]
  40b8c7:	sub    BYTE PTR [edi],0x13
  40b8ca:	adc    DWORD PTR es:[esi+0x4e],esp
  40b8ce:	ret    0xb92d
  40b8d1:	ins    BYTE PTR es:[edi],dx
  40b8d2:	xchg   DWORD PTR [eax-0x47a1f1c],edx
  40b8d8:	sti    
  40b8d9:	enter  0xd8aa,0x17
  40b8dd:	or     DWORD PTR [ebp-0x6aff54cd],edx
  40b8e3:	and    bh,BYTE PTR [ecx+0x4ca61a12]
  40b8e9:	ret    
  40b8ea:	fdiv   QWORD PTR [edi-0x4f]
  40b8ed:	and    ecx,esi
  40b8ef:	xchg   esi,eax
  40b8f0:	adc    bh,BYTE PTR [ebp+0x2f]
  40b8f3:	push   0x75
  40b8f5:	inc    esp
  40b8f6:	add    BYTE PTR [edx+ecx*4+0x6d038b96],al
  40b8fd:	cld    
  40b8fe:	fwait
  40b8ff:	mov    al,0x79
  40b901:	pop    esi
  40b902:	shl    DWORD PTR [esi-0x66],cl
  40b905:	stc    
  40b906:	sbb    DWORD PTR [eax+0x3f3e67cc],edi
  40b90c:	add    ebp,DWORD PTR [edi-0x276430fd]
  40b912:	ss lahf 
  40b914:	and    DWORD PTR [eax],esp
  40b916:	addr16 call 0xb5ef7377
  40b91c:	pop    ss
  40b91d:	inc    esi
  40b91e:	fisttp WORD PTR [ebx-0x1]
  40b921:	addr16 jmp 0xe58d48ae
  40b927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b928:	jno    0x40b989
  40b92a:	add    esp,ecx
  40b92c:	jb     0x40b8c3
  40b92e:	scas   eax,DWORD PTR es:[edi]
  40b92f:	loope  0x40b991
  40b931:	daa    
  40b932:	dec    ebx
  40b933:	in     eax,dx
  40b934:	add    al,0xdd
  40b936:	mov    al,bl
  40b938:	ret    
  40b939:	xor    esi,DWORD PTR [ecx-0x76]
  40b93c:	or     eax,0x5f810ed3
  40b941:	nop
  40b942:	jg     0x40b963
  40b944:	in     al,dx
  40b945:	push   edx
  40b946:	data16 jl 0x40b8ec
  40b949:	push   esp
  40b94a:	aam    0x21
  40b94c:	call   0x11e9:0x8aa5907f
  40b953:	pop    DWORD PTR [eax]
  40b955:	pop    ss
  40b956:	daa    
  40b957:	bound  ecx,QWORD PTR [eax+0x77]
  40b95a:	pop    edi
  40b95b:	add    al,0x25
  40b95d:	add    DWORD PTR [ebx+0x54],ebp
  40b960:	clc    
  40b961:	push   edi
  40b962:	xchg   ebp,eax
  40b963:	outs   dx,DWORD PTR ds:[esi]
  40b964:	mov    dl,0xee
  40b966:	mov    bl,0xa8
  40b968:	push   ebp
  40b969:	loopne 0x40b985
  40b96b:	je     0x40b96d
  40b96d:	mov    cl,0xf6
  40b96f:	sbb    edi,DWORD PTR [ecx]
  40b971:	pop    esp
  40b972:	repnz push ebp
  40b974:	sar    bh,0x57
  40b977:	xchg   ecx,eax
  40b978:	test   esp,0x4b41dd34
  40b97e:	arpl   WORD PTR [eax+ebx*2+0x30],di
  40b982:	adc    DWORD PTR [esi-0x1590a992],ebp
  40b988:	fs nop
  40b98a:	repnz shl DWORD PTR [ebx+eax*1+0x46],1
  40b98f:	sub    dl,BYTE PTR [esi+0x10]
  40b992:	test   BYTE PTR [edi+0x54],bl
  40b995:	das    
  40b996:	int    0xa2
  40b998:	push   ds
  40b999:	(bad)
  40b99d:	div    DWORD PTR [ebx-0x121f9665]
  40b9a3:	inc    edx
  40b9a4:	mov    DWORD PTR [ebp+eiz*1-0x19],ecx
  40b9a8:	xor    esp,0x42b588f2
  40b9ae:	sub    eax,0xc67331d2
  40b9b3:	imul   esp,DWORD PTR [esi],0x3c010d27
  40b9b9:	outs   dx,BYTE PTR ds:[esi]
  40b9ba:	icebp  
  40b9bb:	pop    ebp
  40b9bc:	sub    eax,0x199fc440
  40b9c1:	adc    BYTE PTR [esi+0x1e],dl
  40b9c4:	fdivr  st,st(5)
  40b9c6:	mov    esi,0xed90978a
  40b9cb:	aas    
  40b9cc:	jge    0x40b98d
  40b9ce:	cwde   
  40b9cf:	iret   
  40b9d0:	int3   
  40b9d1:	test   eax,0x9352d7f0
  40b9d6:	jae    0x40b9d9
  40b9d8:	call   0x3455:0xf0c0bcbd
  40b9df:	pop    esp
  40b9e0:	pop    esi
  40b9e1:	mov    bh,0x9e
  40b9e3:	lock out 0xe2,eax
  40b9e6:	mov    ecx,0x35721934
  40b9eb:	inc    esp
  40b9ec:	pop    ecx
  40b9ed:	push   0xffffff84
  40b9ef:	jle    0x40b980
  40b9f1:	mov    al,cl
  40b9f3:	imul   eax,DWORD PTR [ebx],0x579c9bd1
  40b9f9:	test   eax,0xc4a33087
  40b9fe:	jno    0x40ba47
  40ba00:	xchg   edi,eax
  40ba01:	and    eax,0xec4260d5
  40ba06:	adc    BYTE PTR [eax+edi*4+0xb],dl
  40ba0a:	fwait
  40ba0b:	(bad)  
  40ba0c:	retf   0x8b95
  40ba0f:	scas   al,BYTE PTR es:[edi]
  40ba10:	sbb    bl,BYTE PTR [eax+0x9]
  40ba13:	fcom   QWORD PTR [edi+0x54]
  40ba16:	dec    ebp
  40ba17:	cmp    BYTE PTR [ecx],dh
  40ba19:	les    ecx,FWORD PTR [ebx]
  40ba1b:	xchg   edx,eax
  40ba1c:	js     0x40ba89
  40ba1e:	adc    ebx,DWORD PTR ds:0x9df147a6
  40ba24:	(bad)  
  40ba25:	addr16 push ds
  40ba27:	fwait
  40ba28:	add    esp,esi
  40ba2a:	cmp    DWORD PTR [edx],ecx
  40ba2c:	jmp    0xb3d2c132
  40ba31:	in     eax,0x4c
  40ba33:	ins    BYTE PTR es:[edi],dx
  40ba34:	cli    
  40ba35:	out    dx,eax
  40ba36:	jl     0x40ba85
  40ba38:	push   ecx
  40ba39:	lods   eax,DWORD PTR ds:[esi]
  40ba3a:	push   eax
  40ba3b:	pop    es
  40ba3c:	pop    edx
  40ba3d:	nop
  40ba3e:	xchg   edx,eax
  40ba3f:	mov    WORD PTR [edi-0x541b88df],gs
  40ba45:	or     eax,0x50227555
  40ba4a:	xor    BYTE PTR [ecx],dl
  40ba4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba4d:	in     eax,dx
  40ba4e:	in     eax,dx
  40ba4f:	outs   dx,DWORD PTR ds:[esi]
  40ba50:	xchg   ecx,eax
  40ba51:	call   0xb1df:0xe8411e02
  40ba58:	in     eax,dx
  40ba59:	in     al,dx
  40ba5a:	mov    dh,0xfa
  40ba5c:	les    edi,FWORD PTR [edi-0x32]
  40ba5f:	cld    
  40ba60:	sub    al,0xb6
  40ba62:	xor    dh,BYTE PTR [ecx]
  40ba64:	les    edx,FWORD PTR [esp+eiz*4-0x3c]
  40ba68:	inc    eax
  40ba69:	fwait
  40ba6a:	mov    bl,0x1a
  40ba6c:	fwait
  40ba6d:	xor    DWORD PTR [eax+0x63],ebp
  40ba70:	fcom   QWORD PTR [edx+0x7c]
  40ba73:	or     al,0xaf
  40ba75:	out    0x26,eax
  40ba77:	leave  
  40ba78:	imul   edx,DWORD PTR [ebp-0x51],0x282e87da
  40ba7f:	lods   al,BYTE PTR ds:[esi]
  40ba80:	jmp    FWORD PTR [edi]
  40ba82:	mov    DWORD PTR [ebx-0x36],edi
  40ba85:	cmp    al,0x92
  40ba87:	(bad)  
  40ba88:	cld    
  40ba89:	out    0xd3,al
  40ba8b:	jle    0x40ba92
  40ba8d:	add    al,0x79
  40ba8f:	dec    edx
  40ba90:	mov    ebx,DWORD PTR [eax-0x32]
  40ba93:	das    
  40ba94:	pusha  
  40ba95:	jl     0x40bae2
  40ba97:	sub    ebx,DWORD PTR [ebp+0x18d9fd5c]
  40ba9d:	jecxz  0x40babc
  40ba9f:	inc    eax
  40baa0:	mov    eax,0x708de2a2
  40baa5:	addr16 fcom st(6)
  40baa8:	xor    eax,0xc4bf75c7
  40baad:	rol    al,cl
  40baaf:	or     eax,DWORD PTR [esi+ecx*8-0x1e]
  40bab3:	ins    DWORD PTR es:[edi],dx
  40bab4:	dec    ebp
  40bab5:	xchg   ebx,eax
  40bab6:	repz and DWORD PTR [ecx-0x439feaf6],esp
  40babd:	jp     0x40ba4e
  40babf:	and    DWORD PTR [edx],esp
  40bac1:	inc    ebx
  40bac2:	loop   0x40bb06
  40bac4:	mov    eax,ds:0x7beb1680
  40bac9:	repnz cmp BYTE PTR [eax+0x72],bl
  40bacd:	repz test eax,0x38f347dc
  40bad3:	jb     0x40bb4e
  40bad5:	push   cs
  40bad6:	sahf   
  40bad7:	sahf   
  40bad8:	je     0x40bb1f
  40bada:	fdiv   QWORD PTR [esi-0xa]
  40badd:	(bad)  
  40bade:	cmp    BYTE PTR [edi],bl
  40bae0:	mov    WORD PTR [ebp-0x61],?
  40bae3:	dec    ebp
  40bae4:	imul   esi,DWORD PTR ds:[ebx-0x60a771e5],0x9d4a324f
  40baef:	out    dx,al
  40baf0:	hlt    
  40baf1:	push   edx
  40baf2:	jp     0x40baeb
  40baf4:	das    
  40baf5:	inc    edi
  40baf6:	js     0x40bb47
  40baf8:	and    edx,DWORD PTR [ecx-0x9]
  40bafb:	sbb    BYTE PTR [ebx-0x125c68ad],bh
  40bb01:	scas   al,BYTE PTR es:[edi]
  40bb02:	push   0xfdb6013a
  40bb07:	lock xor DWORD PTR [ebx+ebp*1+0xac30ef1],ebx
  40bb0f:	inc    esp
  40bb10:	ja     0x40bb15
  40bb12:	sbb    cl,BYTE PTR [eax-0x55]
  40bb15:	or     BYTE PTR fs:[edx-0x4f],cl
  40bb19:	lea    ecx,[eax+0x26]
  40bb1c:	mov    al,cl
  40bb1e:	in     al,dx
  40bb1f:	fwait
  40bb20:	repnz pop ds
  40bb22:	aas    
  40bb23:	or     eax,0xf8f6fb95
  40bb28:	add    ecx,DWORD PTR [edx+0x55]
  40bb2b:	cmp    al,0x55
  40bb2d:	mov    ds:0x6740c1b4,eax
  40bb32:	mov    dh,cl
  40bb34:	inc    ebp
  40bb35:	outs   dx,BYTE PTR ds:[esi]
  40bb36:	xchg   ebx,eax
  40bb37:	pop    ds
  40bb38:	shl    cl,0x5
  40bb3b:	jle    0x40bb19
  40bb3d:	adc    dl,cl
  40bb3f:	pop    ds
  40bb40:	fcomp  DWORD PTR [edx+0x29]
  40bb43:	push   eax
  40bb44:	popa   
  40bb45:	in     eax,dx
  40bb46:	or     edi,DWORD PTR [ebp-0x59c2f2ee]
  40bb4c:	pop    edx
  40bb4d:	pop    eax
  40bb4e:	and    eax,0x801409f7
  40bb53:	js     0x40baf6
  40bb55:	mov    al,ds:0x5ed033d2
  40bb5a:	mov    DWORD PTR [edi-0x6f],ebp
  40bb5d:	mov    esp,0x40e8a847
  40bb62:	xor    BYTE PTR [eax+esi*1],ch
  40bb65:	adc    DWORD PTR [edi+0xe],ebx
  40bb68:	cmp    eax,0x5ad16a8b
  40bb6d:	and    eax,0x6b380d76
  40bb72:	xor    edx,DWORD PTR [edx+0x6cc8dc33]
  40bb78:	ret    0x230e
  40bb7b:	fldenv [ebp+0x1d]
  40bb7e:	out    0xb3,al
  40bb80:	mov    edi,0x3bf1fccf
  40bb85:	(bad)  
  40bb87:	or     al,0x9d
  40bb89:	dec    ebp
  40bb8a:	mov    WORD PTR [ecx-0x5],ss
  40bb8d:	in     eax,dx
  40bb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb8f:	pop    ebp
  40bb90:	bound  eax,QWORD PTR [edx+0x9]
  40bb93:	jg     0x40bb36
  40bb95:	dec    ebp
  40bb96:	pop    edx
  40bb97:	das    
  40bb98:	stc    
  40bb99:	jmp    0xc450d569
  40bb9e:	sbb    eax,0x5abfe3b2
  40bba3:	ret    
  40bba4:	xor    eax,0x9b60505c
  40bba9:	test   BYTE PTR ds:0xfa097d54,0xf6
  40bbb0:	dec    ecx
  40bbb1:	aad    0xf1
  40bbb3:	cmp    DWORD PTR [eax-0x48],edi
  40bbb6:	rcr    BYTE PTR [ebx+ecx*4-0x1f],0x6f
  40bbbb:	test   al,0xfe
  40bbbd:	lds    esp,FWORD PTR ds:0x4f31f584
  40bbc3:	push   edi
  40bbc4:	popf   
  40bbc5:	push   ss
  40bbc6:	sub    dl,bl
  40bbc8:	fadd   st,st(3)
  40bbca:	in     eax,dx
  40bbcb:	out    dx,eax
  40bbcc:	sbb    esp,DWORD PTR [ebx-0x79ee48a]
  40bbd2:	pushf  
  40bbd3:	mov    BYTE PTR [ebx-0x7389ac5f],dh
  40bbd9:	jge    0x40bb9c
  40bbdb:	jne    0x40bb7e
  40bbdd:	cmp    BYTE PTR [ecx-0x7d],0xbb
  40bbe1:	mov    esp,0xcc2b2421
  40bbe6:	aad    0x59
  40bbe8:	jmp    0x7808:0x648cc741
  40bbef:	in     eax,0x63
  40bbf1:	pop    ss
  40bbf2:	ins    DWORD PTR es:[edi],dx
  40bbf3:	(bad)  
  40bbf4:	fucomp st(5)
  40bbf6:	dec    ecx
  40bbf7:	mov    al,ds:0x2e3c1391
  40bbfc:	cwde   
  40bbfd:	repz loope 0x40bba8
  40bc00:	pop    esi
  40bc01:	xchg   ebp,eax
  40bc02:	popa   
  40bc03:	dec    esp
  40bc04:	loopne 0x40bc6c
  40bc06:	(bad)  
  40bc07:	addr16 lock pop ecx
  40bc0a:	inc    ebp
  40bc0b:	and    eax,0x1c3ebe2c
  40bc10:	and    dh,BYTE PTR [edi+0x0]
  40bc13:	push   cs
  40bc14:	push   0xa7a3323e
  40bc19:	mov    ah,0xb1
  40bc1b:	frndint 
  40bc1d:	sysexit 
  40bc1f:	pop    ebp
  40bc20:	dec    esp
  40bc21:	mov    edx,0xa3053314
  40bc26:	dec    ebx
  40bc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc29:	cmp    cl,BYTE PTR [edi-0x46]
  40bc2c:	leave  
  40bc2d:	lods   al,BYTE PTR ds:[esi]
  40bc2e:	pop    edx
  40bc2f:	fbld   TBYTE PTR [edi-0x383df0de]
  40bc35:	mov    bl,0x57
  40bc37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc38:	aas    
  40bc39:	imul   ecx,DWORD PTR [ebp-0x19],0xffffffb2
  40bc3d:	jne    0x40bbff
  40bc3f:	(bad)  
  40bc40:	aas    
  40bc41:	rcl    BYTE PTR [esp+ebx*4+0x50],0x71
  40bc46:	lahf   
  40bc47:	mov    ch,al
  40bc49:	fstp   DWORD PTR [edx-0xc]
  40bc4c:	add    esp,ebx
  40bc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc4f:	cs push edx
  40bc51:	adc    al,0x10
  40bc53:	sbb    BYTE PTR [edi+0x5c685231],al
  40bc59:	mov    al,BYTE PTR [edi+0x42a3294e]
  40bc5f:	xlat   BYTE PTR ds:[ebx]
  40bc60:	mov    esp,0x8c478543
  40bc65:	xchg   BYTE PTR [eax-0x2b],bh
  40bc68:	wrmsr  
  40bc6a:	iret   
  40bc6b:	cwde   
  40bc6c:	stos   DWORD PTR es:[edi],eax
  40bc6d:	scas   eax,DWORD PTR es:[edi]
  40bc6e:	scas   al,BYTE PTR es:[edi]
  40bc6f:	dec    ebp
  40bc70:	sub    ah,0x54
  40bc73:	cmp    al,0xb6
  40bc75:	sar    BYTE PTR [esi-0x16],0xc0
  40bc79:	les    esp,FWORD PTR [eax+0x788d1305]
  40bc7f:	popf   
  40bc80:	mov    ch,0x2e
  40bc82:	fld    TBYTE PTR [edx]
  40bc84:	dec    edx
  40bc85:	mov    ebp,0x2e4fee2c
  40bc8a:	push   ebp
  40bc8b:	in     al,dx
  40bc8c:	(bad)  
  40bc8d:	jb     0x40bcf5
  40bc8f:	adc    eax,0xcf5e50de
  40bc94:	repz adc edi,esi
  40bc97:	sbb    BYTE PTR [edx],ch
  40bc99:	adc    al,0xd4
  40bc9b:	sbb    eax,0x59208bc1
  40bca0:	lods   eax,DWORD PTR ds:[esi]
  40bca1:	clc    
  40bca2:	and    esi,DWORD PTR [eax+eax*8-0x4c389da5]
  40bca9:	int    0x2f
  40bcab:	(bad)
  40bcae:	xor    al,0xdc
  40bcb0:	in     al,dx
  40bcb1:	sbb    dh,ah
  40bcb3:	inc    edi
  40bcb4:	fsub   QWORD PTR [eax+0x1f]
  40bcb7:	xor    DWORD PTR [ebp-0x2e],0xfffffff7
  40bcbb:	sub    edi,DWORD PTR [ebx]
  40bcbd:	xchg   esi,eax
  40bcbe:	pusha  
  40bcbf:	jb     0x40bd22
  40bcc1:	sub    bh,BYTE PTR [edi*8-0x40802875]
  40bcc8:	enter  0xd0d7,0xef
  40bccc:	aam    0x9a
  40bcce:	lea    ebp,[ecx]
  40bcd0:	push   0x7d257728
  40bcd5:	retf   0xc031
  40bcd8:	pop    esp
  40bcd9:	out    dx,al
  40bcda:	fisubr DWORD PTR [ebp-0x7d]
  40bcdd:	xchg   ebx,eax
  40bcde:	sbb    DWORD PTR ds:0xfde6610c,eax
  40bce4:	xchg   bh,dl
  40bce6:	or     DWORD PTR [edi+0xcfe85f0],esp
  40bcec:	pop    es
  40bced:	pop    eax
  40bcee:	jbe    0x40bd31
  40bcf0:	sub    al,0x4c
  40bcf2:	mov    BYTE PTR [ebp+0x4c],0xda
  40bcf6:	jle    0x40bc7a
  40bcf8:	push   0xffffffef
  40bcfa:	out    dx,al
  40bcfb:	sar    DWORD PTR [ebx-0x593485da],1
  40bd01:	inc    ebp
  40bd02:	scas   al,BYTE PTR es:[edi]
  40bd03:	mov    ch,0x4c
  40bd05:	xchg   ecx,eax
  40bd06:	xchg   ecx,eax
  40bd07:	std    
  40bd08:	shl    ecx,0xcf
  40bd0b:	sahf   
  40bd0c:	arpl   WORD PTR [ecx-0x4d6c4b90],cx
  40bd12:	dec    esi
  40bd13:	mov    gs,WORD PTR [eax-0x16]
  40bd16:	int    0x95
  40bd18:	iret   
  40bd19:	scas   al,BYTE PTR es:[edi]
  40bd1a:	repz mov ch,0x58
  40bd1d:	inc    esp
  40bd1e:	pop    edx
  40bd1f:	imul   edx,DWORD PTR [ebx],0xecc92aaa
  40bd25:	shr    bl,1
  40bd27:	adc    ah,ch
  40bd29:	cmp    bl,BYTE PTR [ecx]
  40bd2b:	xchg   DWORD PTR [esi+esi*2-0x14924481],eax
  40bd32:	sbb    DWORD PTR [edi],edx
  40bd34:	jp     0x40bcf8
  40bd36:	or     bl,BYTE PTR [eax]
  40bd38:	add    ebp,ebp
  40bd3a:	fnstcw WORD PTR [eax+eax*4-0x40af6b67]
  40bd41:	jge    0x40bd01
  40bd43:	sub    al,0xd7
  40bd45:	jmp    0x763c:0x1dfabcd9
  40bd4c:	jecxz  0x40bd40
  40bd4e:	loopne 0x40bd10
  40bd50:	and    BYTE PTR [edi+0x541b2555],0x1e
  40bd57:	sbb    eax,edx
  40bd59:	inc    esi
  40bd5a:	bt     DWORD PTR [esi],eax
  40bd5d:	js     0x40bd0a
  40bd5f:	inc    edx
  40bd60:	sbb    ah,BYTE PTR [edi]
  40bd62:	mov    edi,edi
  40bd64:	dec    edx
  40bd65:	mov    ebx,0x86f51547
  40bd6a:	xchg   esp,eax
  40bd6b:	mov    es,esp
  40bd6d:	fist   DWORD PTR [ebp-0x3adb31e9]
  40bd73:	xchg   ecx,eax
  40bd74:	and    DWORD PTR [edx+0x66],edi
  40bd77:	and    BYTE PTR ds:0x3d045ed8,0xe9
  40bd7e:	add    DWORD PTR [ebp+0x60bdf25d],0x70
  40bd85:	and    BYTE PTR [ebx+0x2],bh
  40bd88:	(bad)  
  40bd8a:	pop    ecx
  40bd8b:	icebp  
  40bd8c:	and    esp,DWORD PTR [esp+edx*4]
  40bd8f:	add    ch,BYTE PTR [esi]
  40bd91:	leave  
  40bd92:	adc    bh,BYTE PTR [esi-0x52]
  40bd95:	in     al,0xa1
  40bd97:	cs mov ah,0x5f
  40bd9a:	retf   0xdcf0
  40bd9d:	cwde   
  40bd9e:	mov    eax,ds:0x9b29ec8
  40bda3:	in     eax,0x9b
  40bda5:	fisub  DWORD PTR [eax-0x492ec5e9]
  40bdab:	push   ecx
  40bdac:	add    al,0xad
  40bdae:	ret    
  40bdaf:	das    
  40bdb0:	mov    esi,0x5ba1448
  40bdb5:	mov    esp,0x9f96cc8c
  40bdba:	cld    
  40bdbb:	lea    eax,[eax-0x21]
  40bdbe:	and    DWORD PTR [edi+edi*1+0x2c3409ac],0x68
  40bdc6:	add    DWORD PTR [eax+edi*4+0x72971f23],edi
  40bdcd:	mov    eax,0x8a5f8320
  40bdd2:	sbb    al,BYTE PTR [esi-0x6f03b284]
  40bdd8:	sbb    ecx,DWORD PTR [ecx+0x173a701d]
  40bdde:	mov    esi,0x721586c6
  40bde3:	cmp    DWORD PTR [eax],ebp
  40bde5:	in     al,0x52
  40bde7:	sbb    DWORD PTR [eax+0x2a],edx
  40bdea:	mov    BYTE PTR [ecx],cl
  40bdec:	jmp    0xb80d:0xb8af4cf5
  40bdf3:	or     edi,DWORD PTR [edx+0x1876d93a]
  40bdf9:	dec    esi
  40bdfa:	test   al,0x11
  40bdfc:	mov    ds:0xc4920dbe,eax
  40be01:	fcmovb st,st(3)
  40be03:	mov    bh,0xce
  40be05:	cmp    bh,bl
  40be07:	scas   eax,DWORD PTR es:[edi]
  40be08:	or     esi,esi
  40be0a:	sbb    DWORD PTR [ebp-0x16243748],esi
  40be10:	mov    bl,0x5b
  40be12:	jle    0x40bdb2
  40be14:	xor    al,0xa6
  40be16:	bound  edx,QWORD PTR [eax]
  40be18:	adc    DWORD PTR [eax+edi*1+0x40ab62d6],edi
  40be1f:	rol    ecx,1
  40be21:	nop
  40be22:	mov    edi,0xd00bbb0c
  40be27:	or     edx,esp
  40be29:	fld    TBYTE PTR [esp+ebp*8-0x570ae427]
  40be30:	adc    DWORD PTR [edi],eax
  40be32:	xchg   BYTE PTR [ecx],ah
  40be34:	sub    BYTE PTR [eax],dh
  40be36:	mov    esi,0xb9ae84a3
  40be3b:	push   0xffffffdb
  40be3d:	cdq    
  40be3e:	mov    al,ds:0xa4b83dce
  40be43:	mov    BYTE PTR [eax-0x6a],al
  40be46:	stos   DWORD PTR es:[edi],eax
  40be47:	add    dh,BYTE PTR [ecx-0x109a3090]
  40be4d:	jns    0x32726dfb
  40be53:	mov    ebx,0xb48ac312
  40be58:	pop    eax
  40be59:	test   DWORD PTR [ebp+0x23],esp
  40be5c:	jecxz  0x40be28
  40be5e:	push   es
  40be5f:	xchg   edx,eax
  40be60:	push   edx
  40be61:	add    ah,BYTE PTR [esi+0x27a09ad3]
  40be67:	mov    dh,0xe7
  40be69:	pusha  
  40be6a:	fnstcw WORD PTR [esi-0x70ea68ff]
  40be70:	imul   ebp,DWORD PTR [edx],0xfffffff8
  40be73:	out    dx,eax
  40be74:	in     eax,0x9d
  40be76:	dec    esp
  40be77:	fldcw  WORD PTR [ecx+0x51d3778e]
  40be7d:	jecxz  0x40be96
  40be7f:	popf   
  40be80:	loop   0x40be5c
  40be82:	nop
  40be83:	or     al,0xd9
  40be85:	leave  
  40be86:	(bad)  
  40be88:	jp     0x40be27
  40be8a:	fistp  DWORD PTR [ebp-0x13578c2d]
  40be90:	test   al,0x63
  40be92:	xor    ah,BYTE PTR [eax-0x3a]
  40be95:	adc    DWORD PTR ss:[eax-0x64e52111],edx
  40be9c:	add    edx,DWORD PTR [ebx+0xdfd2b50]
  40bea2:	adc    al,0x53
  40bea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea5:	outs   dx,BYTE PTR ds:[esi]
  40bea6:	aaa    
  40bea7:	cld    
  40bea8:	dec    esi
  40bea9:	adc    ebx,ecx
  40beab:	pushf  
  40beac:	xlat   BYTE PTR ds:[ebx]
  40bead:	ds mov eax,0x5473876f
  40beb3:	jmp    0x8ac:0xebf94d8d
  40beba:	jg     0x40bed9
  40bebc:	adc    al,0xa
  40bebe:	js     0x40bf39
  40bec0:	mov    ebp,0xe03a6d25
  40bec5:	in     al,0xbc
  40bec7:	jae    0x40be68
  40bec9:	adc    eax,0xca708e2d
  40bece:	fld    DWORD PTR [edx+0x58738a63]
  40bed4:	test   BYTE PTR [ebx],dl
  40bed6:	sbb    edi,DWORD PTR [ecx+0x64]
  40bed9:	mov    ds:0x5840da35,al
  40bede:	xchg   edx,eax
  40bedf:	cli    
  40bee0:	xor    eax,DWORD PTR [eax+0x6a]
  40bee3:	int    0x13
  40bee5:	sub    DWORD PTR [ebx-0x483d6d87],0x8f2c63d0
  40beef:	add    BYTE PTR [edx+0x67],ah
  40bef2:	cmp    dl,BYTE PTR [ebp+0x54]
  40bef5:	leave  
  40bef6:	mov    ch,0x28
  40bef8:	jnp    0x40bf59
  40befa:	ja     0x40beb3
  40befc:	pop    ss
  40befd:	in     eax,dx
  40befe:	rol    bl,cl
  40bf00:	sahf   
  40bf01:	gs stos DWORD PTR es:[edi],eax
  40bf03:	push   cs
  40bf04:	xchg   ebx,eax
  40bf05:	or     eax,DWORD PTR [edx+0x9ccd59c]
  40bf0b:	push   ebp
  40bf0c:	push   esi
  40bf0d:	jp     0x40beac
  40bf0f:	cli    
  40bf10:	test   ch,bl
  40bf12:	fisub  DWORD PTR [edx+ebp*4-0x7b]
  40bf16:	(bad)  
  40bf17:	rcl    DWORD PTR [ecx-0x430a9165],1
  40bf1d:	add    cl,dh
  40bf1f:	mov    ebp,0xd557357b
  40bf24:	xor    eax,0x6ab113f6
  40bf29:	or     eax,0x91924e89
  40bf2e:	fwait
  40bf2f:	xchg   edx,eax
  40bf30:	cwde   
  40bf31:	mov    ecx,0xb256c11
  40bf36:	or     al,0x85
  40bf38:	into   
  40bf39:	push   0x82d93903
  40bf3e:	xchg   esp,eax
  40bf3f:	std    
  40bf40:	push   edi
  40bf41:	das    
  40bf42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf43:	sbb    DWORD PTR [esi-0x22],ebp
  40bf46:	ss push esi
  40bf48:	(bad)  
  40bf49:	mov    eax,ds:0x7478e805
  40bf4e:	sbb    eax,0x7b885c59
  40bf53:	inc    edx
  40bf54:	pop    ebx
  40bf55:	dec    DWORD PTR [edx-0x70]
  40bf58:	mov    ecx,0x4679199e
  40bf5d:	arpl   WORD PTR [esi-0x173219dd],si
  40bf63:	lsl    eax,WORD PTR [eax+edi*8-0x47]
  40bf68:	or     DWORD PTR [edi],ecx
  40bf6a:	shl    DWORD PTR [ecx-0x51],1
  40bf6d:	xor    BYTE PTR [edi],ch
  40bf6f:	dec    ecx
  40bf70:	ror    bl,cl
  40bf72:	dec    edi
  40bf73:	invd   
  40bf75:	jne    0x40bf28
  40bf77:	push   cs
  40bf78:	inc    DWORD PTR [ebp-0x7e]
  40bf7b:	dec    esi
  40bf7c:	lods   al,BYTE PTR ds:[esi]
  40bf7d:	(bad)  [edi-0x3f]
  40bf80:	test   dh,ch
  40bf82:	loopne 0x40bf3d
  40bf84:	(bad)  
  40bf85:	sbb    cl,BYTE PTR [esi+0x39d72c86]
  40bf8b:	test   al,0xb7
  40bf8d:	mov    edi,0x9ad7286
  40bf92:	mov    ds:0x5b25b42,al
  40bf97:	add    eax,0xf334e8a5
  40bf9c:	mov    ds:0x957508e3,eax
  40bfa1:	xchg   DWORD PTR [ebx],ebx
  40bfa3:	adc    ecx,DWORD PTR [eax-0x781360ab]
  40bfa9:	pop    edx
  40bfaa:	lods   eax,DWORD PTR ds:[esi]
  40bfab:	xchg   BYTE PTR [eax],cl
  40bfad:	pop    es
  40bfae:	and    eax,0xf543486
  40bfb3:	pop    ecx
  40bfb4:	cmp    DWORD PTR [edi],edx
  40bfb6:	cli    
  40bfb7:	test   eax,0x5b4f8a03
  40bfbc:	inc    esi
  40bfbd:	or     esi,DWORD PTR [esi+0x2ab2e89e]
  40bfc3:	xlat   BYTE PTR ds:[ebx]
  40bfc4:	inc    esi
  40bfc5:	mov    ch,0xe1
  40bfc7:	and    eax,0x1d685de6
  40bfcc:	or     ecx,DWORD PTR [esi]
  40bfce:	jmp    0x40bf6f
  40bfd0:	jge    0x40bf70
  40bfd2:	push   ds
  40bfd3:	ficomp DWORD PTR [edi+0x624dfb75]
  40bfd9:	int3   
  40bfda:	les    ebx,FWORD PTR [ebp+0x56]
  40bfdd:	out    0xc0,eax
  40bfdf:	pop    ds
  40bfe0:	cld    
  40bfe1:	stos   DWORD PTR es:[edi],eax
  40bfe2:	push   0x6a
  40bfe4:	ret    0x4d0a
  40bfe7:	sahf   
  40bfe8:	(bad)  
  40bfe9:	fnstenv [edi+0xc824d9f]
  40bfef:	popf   
  40bff0:	shl    DWORD PTR [edi+0x1e],cl
  40bff3:	das    
  40bff4:	ja     0x40c03b
  40bff6:	test   BYTE PTR [ebp+0x3b496f76],bh
  40bffc:	mov    edx,0x30a8295c
  40c001:	push   ds
  40c002:	jl     0x40bfb5
  40c004:	call   0x2bfa:0xe106148b
  40c00b:	mov    cl,0xc9
  40c00d:	pop    ebp
  40c00e:	push   es
  40c00f:	inc    eax
  40c010:	mov    ds:0xc2dca40b,al
  40c015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c016:	test   al,0xa4
  40c018:	add    BYTE PTR [edx-0x3d5865ea],dh
  40c01e:	jo     0x40bfb2
  40c020:	add    eax,0x8563a0f6
  40c025:	in     al,dx
  40c026:	mov    edi,0xee36da02
  40c02b:	mul    BYTE PTR [ecx-0x74]
  40c02e:	fistp  WORD PTR [ebp+0x9]
  40c031:	(bad)  [ebx-0x3bd7d642]
  40c037:	cli    
  40c038:	lds    ebp,FWORD PTR [esi+0x1734fd5b]
  40c03e:	mov    ds:0x69bb5370,eax
  40c043:	add    eax,0x43638f3e
  40c048:	sahf   
  40c049:	ds (bad) 
  40c04b:	ds sub bh,al
  40c04e:	fwait
  40c04f:	sbb    ebp,DWORD PTR [esi]
  40c051:	jle    0x40c073
  40c053:	mov    DWORD PTR [edx],eax
  40c055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c056:	cmp    BYTE PTR [eax],ch
  40c058:	aaa    
  40c059:	add    bh,BYTE PTR [edx-0xb]
  40c05c:	rol    BYTE PTR [edi],1
  40c05e:	loopne 0x40c025
  40c060:	mov    ebx,0xc98e9142
  40c065:	dec    esp
  40c066:	stos   BYTE PTR es:[edi],al
  40c067:	cmp    esp,DWORD PTR [eax+0x55]
  40c06a:	clc    
  40c06b:	or     BYTE PTR [esi+esi*8+0x4c],0xdd
  40c070:	and    ax,0x3ed6
  40c074:	push   esp
  40c075:	into   
  40c076:	xchg   BYTE PTR [ebx-0x53],al
  40c079:	jnp    0x40c07d
  40c07b:	lods   al,BYTE PTR ds:[esi]
  40c07c:	mov    esi,0x2e9977c7
  40c081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c082:	pop    edx
  40c083:	xchg   esp,eax
  40c084:	mov    edi,0x53d96bb0
  40c089:	(bad)  
  40c08a:	imul   edi,DWORD PTR [ecx],0x24
  40c08d:	inc    esi
  40c08e:	sbb    DWORD PTR [edi+0x28],eax
  40c091:	std    
  40c092:	pop    eax
  40c093:	cmp    DWORD PTR [edi],0x6b
  40c096:	lock jo 0x40c0c8
  40c099:	jmp    0x40c0b1
  40c09b:	mov    ?,WORD PTR [ebp+0x2e12c8f0]
  40c0a1:	pop    ebx
  40c0a2:	inc    eax
  40c0a3:	gs dec edi
  40c0a5:	call   0xe76b:0x5153058b
  40c0ac:	xor    BYTE PTR [ecx],bl
  40c0ae:	test   al,0x75
  40c0b0:	sub    eax,0x76433732
  40c0b5:	pop    edx
  40c0b6:	je     0x40c09c
  40c0b8:	into   
  40c0b9:	push   ebp
  40c0ba:	in     al,0x45
  40c0bc:	push   ebx
  40c0bd:	adc    al,0xec
  40c0bf:	and    al,0x4a
  40c0c1:	sbb    al,0xe6
  40c0c3:	inc    edx
  40c0c4:	retf   
  40c0c5:	mov    dl,BYTE PTR [esi+0x19]
  40c0c8:	rcr    DWORD PTR [ebp-0x3f],cl
  40c0cb:	push   esp
  40c0cc:	pusha  
  40c0cd:	mov    ecx,0x4086bc48
  40c0d2:	xchg   ebp,eax
  40c0d3:	push   ecx
  40c0d4:	push   edi
  40c0d5:	mov    dh,0x46
  40c0d7:	xor    DWORD PTR [edi],ecx
  40c0d9:	inc    edi
  40c0da:	loope  0x40c08e
  40c0dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0dd:	mov    bh,0xa9
  40c0df:	pop    esi
  40c0e0:	push   ebx
  40c0e1:	sbb    ah,BYTE PTR [ebp+0x41]
  40c0e4:	je     0x40c133
  40c0e6:	mov    WORD PTR [eax+0x7c],?
  40c0e9:	fs push ecx
  40c0eb:	lock setae BYTE PTR [edi-0x781f2446]
  40c0f3:	ficom  WORD PTR [esi]
  40c0f5:	sub    al,0x61
  40c0f7:	sbb    eax,0x4cfc7356
  40c0fc:	leave  
  40c0fd:	jo     0x40c0e5
  40c0ff:	sbb    ch,cl
  40c101:	std    
  40c102:	ret    
  40c103:	and    DWORD PTR [esp+edx*2],0x78f50dbf
  40c10a:	out    dx,al
  40c10b:	adc    DWORD PTR [ecx-0x55f1f9cd],edi
  40c111:	push   edx
  40c112:	sub    DWORD PTR [ebx-0x5f],0x33
  40c116:	adc    al,BYTE PTR [edx+0x6a7d31f9]
  40c11c:	(bad)
  40c11f:	xorps  xmm6,XMMWORD PTR [esi]
  40c122:	push   ecx
  40c123:	inc    edx
  40c124:	cwde   
  40c125:	out    0xda,al
  40c127:	adc    eax,0x88403894
  40c12c:	hlt    
  40c12d:	shl    DWORD PTR [ecx+0x1d],cl
  40c130:	and    al,0x34
  40c132:	ret    0xb9a0
  40c135:	jnp    0x40c131
  40c137:	in     al,0x69
  40c139:	fdivr  QWORD PTR [esi+0x3a34e31f]
  40c13f:	je     0x40c10f
  40c141:	sbb    edi,ebx
  40c143:	clc    
  40c144:	add    ecx,DWORD PTR [ecx-0x53]
  40c147:	ret    
  40c148:	mov    ebp,0x372653cd
  40c14d:	mov    ds:0x4b9a3277,al
  40c152:	and    BYTE PTR [edi],cl
  40c154:	sbb    BYTE PTR [edi],dl
  40c156:	sti    
  40c157:	inc    esi
  40c158:	ja     0x40c16e
  40c15a:	mov    ds:0xeaccc588,eax
  40c15f:	cdq    
  40c160:	xor    BYTE PTR [edi-0x1a],dl
  40c163:	push   ds
  40c164:	repnz popf 
  40c166:	dec    edx
  40c167:	xor    eax,0xc1646161
  40c16c:	fmul   QWORD PTR [ecx-0xb2528d2]
  40c172:	call   0xcf18:0x38f8c177
  40c179:	mov    ebp,0xd48f8299
  40c17e:	adc    dl,cl
  40c180:	push   ebx
  40c181:	int    0x39
  40c183:	sbb    esp,eax
  40c185:	aam    0x7b
  40c187:	lock into 
  40c189:	punpckhwd mm0,QWORD PTR [ebx]
  40c18c:	mov    eax,ds:0x69a44966
  40c191:	push   0x21
  40c193:	dec    edx
  40c194:	fldenv [edi+0x202bd133]
  40c19a:	out    0x9,eax
  40c19c:	mov    gs,WORD PTR [esi+0x32da9a99]
  40c1a2:	mov    bh,0xa1
  40c1a4:	mov    dl,0x2b
  40c1a6:	cs jl  0x40c206
  40c1a9:	xchg   edi,eax
  40c1aa:	xor    BYTE PTR [edi],ch
  40c1ac:	repz or BYTE PTR [esi],ch
  40c1af:	push   es
  40c1b0:	addr16 int3 
  40c1b2:	test   DWORD PTR [edx-0x4f476d58],ebx
  40c1b8:	lea    eax,[esi+eax*8]
  40c1bb:	cmp    BYTE PTR [eax],bh
  40c1bd:	sub    dl,BYTE PTR cs:[esi]
  40c1c0:	cmp    dh,ah
  40c1c2:	pop    eax
  40c1c3:	test   al,0x3b
  40c1c5:	sbb    DWORD PTR [ebx-0x39],ebx
  40c1c8:	outs   dx,BYTE PTR ds:[esi]
  40c1c9:	add    DWORD PTR [eax-0x5a4cfd49],0x79
  40c1d0:	shr    dl,0x8c
  40c1d3:	clc    
  40c1d4:	cmp    esi,eax
  40c1d6:	les    ebp,FWORD PTR [edx-0x5291770]
  40c1dc:	or     eax,edx
  40c1de:	sub    dh,ch
  40c1e0:	jg     0x40c18b
  40c1e2:	mov    al,0x80
  40c1e4:	mov    ah,0x47
  40c1e6:	or     al,0x92
  40c1e8:	mov    bh,BYTE PTR [ebx-0x5ad1522b]
  40c1ee:	gs push ss
  40c1f0:	dec    eax
  40c1f1:	fistp  WORD PTR [edx]
  40c1f3:	pusha  
  40c1f4:	dec    edi
  40c1f5:	lds    esi,FWORD PTR [ecx+esi*1+0x14]
  40c1f9:	mov    ebx,0x526c586d
  40c1fe:	or     cl,BYTE PTR [eax-0x53]
  40c201:	in     al,dx
  40c202:	push   0xf027eb85
  40c207:	or     BYTE PTR [ecx-0x5a19bce],bl
  40c20d:	test   DWORD PTR [edx+0xd],esi
  40c210:	mov    ds:0x145f9d58,al
  40c215:	jno    0x40c205
  40c217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c218:	rcl    DWORD PTR [esi],1
  40c21a:	jge    0x40c1ac
  40c21c:	adc    eax,DWORD PTR [ecx+eiz*1]
  40c21f:	xchg   esp,eax
  40c220:	lods   al,BYTE PTR ds:[esi]
  40c221:	inc    ecx
  40c222:	jmp    0xdb87eb9b
  40c227:	push   ds
  40c228:	mov    edx,0x756e9e2a
  40c22d:	mov    ah,0xe7
  40c22f:	(bad)  
  40c230:	imul   BYTE PTR [edx+0x7d]
  40c233:	jo     0x40c26e
  40c235:	add    eax,0xf5f6ec84
  40c23a:	int    0x5
  40c23c:	bound  esp,QWORD PTR [ebp-0x66]
  40c23f:	xchg   edi,eax
  40c240:	and    eax,0x45f69409
  40c245:	nop
  40c246:	test   eax,0xa197eea2
  40c24b:	or     BYTE PTR [esi],dh
  40c24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24e:	arpl   di,sp
  40c250:	adc    eax,0x84feeddc
  40c255:	jne    0x40c2c1
  40c257:	rcl    BYTE PTR [ecx],1
  40c259:	fxch   st(5)
  40c25b:	and    BYTE PTR [edi-0x74],bl
  40c25e:	sub    DWORD PTR ds:0x6ccdffa1,0xa3194367
  40c268:	xor    ebp,esi
  40c26a:	test   eax,0x1611c2fc
  40c26f:	pop    esi
  40c270:	mov    ah,0x5e
  40c272:	xor    ah,BYTE PTR [esi-0x1b7ffc0b]
  40c278:	xor    edi,DWORD PTR [ebx]
  40c27a:	fisttp QWORD PTR [edi+eiz*8]
  40c27d:	dec    ecx
  40c27e:	ss jns 0x40c2eb
  40c281:	ss out 0x16,eax
  40c284:	adc    DWORD PTR [eax+0xcc18872],esp
  40c28a:	lock pop ds
  40c28c:	add    eax,0x3a5d237e
  40c291:	adc    al,0x97
  40c293:	std    
  40c294:	sub    edi,DWORD PTR [esi+0x2fa0b315]
  40c29a:	in     eax,dx
  40c29b:	mov    ecx,0xb3c2a3b5
  40c2a0:	popa   
  40c2a1:	xchg   ebx,eax
  40c2a2:	push   ss
  40c2a3:	sbb    bl,BYTE PTR ds:0xd9bf29c
  40c2a9:	call   0x8721:0xc33dc99e
  40c2b0:	jbe    0x40c32b
  40c2b2:	push   esp
  40c2b3:	jmp    0x3a42:0x73ec46b9
  40c2ba:	sahf   
  40c2bb:	or     eax,DWORD PTR [edx-0x70]
  40c2be:	pop    ss
  40c2bf:	sar    BYTE PTR [ecx+0x4622fb7f],0x2e
  40c2c6:	or     al,0x7c
  40c2c8:	cmc    
  40c2c9:	dec    ecx
  40c2ca:	mov    dh,0x96
  40c2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2cd:	loopne 0x40c325
  40c2cf:	pop    ss
  40c2d0:	repz mov ah,0xb0
  40c2d3:	loop   0x40c29e
  40c2d5:	mov    eax,ds:0x4e1b805e
  40c2da:	adc    al,0x81
  40c2dc:	fwait
  40c2dd:	sbb    DWORD PTR [edi+0x27],ebp
  40c2e0:	mov    bl,0x75
  40c2e2:	popa   
  40c2e3:	mov    al,ds:0x2cd2a150
  40c2e8:	push   ds
  40c2e9:	jmp    0x40c295
  40c2eb:	fimul  WORD PTR [esi+0xe]
  40c2ee:	(bad)  
  40c2f0:	mov    eax,ds:0xce82afe4
  40c2f5:	pusha  
  40c2f6:	fstp   QWORD PTR [ebx]
  40c2f8:	fcmovb st,st(4)
  40c2fa:	dec    esp
  40c2fb:	cli    
  40c2fc:	xchg   ecx,eax
  40c2fd:	xor    ecx,DWORD PTR [edi+ebp*4+0x52c0217c]
  40c304:	adc    BYTE PTR [ebx],al
  40c306:	imul   bh
  40c308:	lods   al,BYTE PTR ds:[esi]
  40c309:	xchg   edx,eax
  40c30a:	push   edx
  40c30b:	test   eax,0x680b9ca5
  40c310:	mov    BYTE PTR [ebp-0x7275af47],ah
  40c316:	pop    ebx
  40c317:	js     0x40c302
  40c319:	sub    al,0xad
  40c31b:	sahf   
  40c31c:	dec    ebp
  40c31d:	in     al,0x7e
  40c31f:	sbb    eax,edx
  40c321:	call   0x8f98dcb0
  40c326:	mov    edx,0xed3002ff
  40c32b:	aad    0x31
  40c32d:	cdq    
  40c32e:	sbb    eax,DWORD PTR [ebp+0x1cf7b1c]
  40c334:	retf   0xd2d1
  40c337:	(bad)  
  40c338:	enter  0x8ebb,0x5f
  40c33c:	cld    
  40c33d:	jmp    0xb9ec51d0
  40c342:	leave  
  40c343:	test   eax,0x71453f13
  40c348:	adc    eax,DWORD PTR ds:0x259c241a
  40c34e:	enter  0x64df,0xbd
  40c352:	in     eax,0x7b
  40c354:	cli    
  40c355:	loop   0x40c356
  40c357:	popf   
  40c358:	jns    0x40c2ed
  40c35a:	outs   dx,BYTE PTR ds:[esi]
  40c35b:	cmp    eax,0x508cab48
  40c360:	pop    ebx
  40c361:	(bad)  
  40c362:	or     dh,BYTE PTR [esp+ebp*1-0x41]
  40c366:	in     al,0x7f
  40c368:	pop    es
  40c369:	daa    
  40c36a:	ins    DWORD PTR es:[edi],dx
  40c36b:	loop   0x40c392
  40c36d:	clc    
  40c36e:	mov    eax,ds:0x1ae60f86
  40c373:	ja     0x40c2f9
  40c375:	sub    ecx,ebx
  40c377:	xchg   DWORD PTR [eax+0x2d],esp
  40c37a:	(bad)  
  40c37c:	out    dx,al
  40c37d:	daa    
  40c37e:	mov    ch,0x19
  40c380:	inc    ecx
  40c381:	push   esi
  40c382:	cwde   
  40c383:	mov    BYTE PTR [esi-0x59eeb78c],bh
  40c389:	xchg   ebp,eax
  40c38a:	xchg   edi,eax
  40c38b:	xchg   esp,eax
  40c38c:	dec    ebp
  40c38d:	push   edi
  40c38e:	pusha  
  40c38f:	(bad)  
  40c390:	jno    0x40c355
  40c392:	sbb    DWORD PTR [ebx+eax*8],ebx
  40c395:	cmp    al,0x91
  40c397:	pop    esi
  40c398:	and    al,0x7b
  40c39a:	mov    ss,ebp
  40c39c:	push   esi
  40c39d:	xor    BYTE PTR [eax],bh
  40c39f:	jle    0x40c3c8
  40c3a1:	pop    ebp
  40c3a2:	call   0x39ad330d
  40c3a7:	mov    bh,0x97
  40c3a9:	arpl   bx,ax
  40c3ab:	subps  xmm0,XMMWORD PTR [edx]
  40c3ae:	sbb    ecx,DWORD PTR [eax+0xbe31f65]
  40c3b4:	push   ss
  40c3b5:	mov    edi,0x1f76c999
  40c3ba:	into   
  40c3bb:	mov    eax,0xcac01d39
  40c3c0:	je     0x40c40f
  40c3c2:	jge    0x40c385
  40c3c4:	ret    
  40c3c5:	add    dh,ch
  40c3c7:	ficomp WORD PTR [edi]
  40c3c9:	xchg   edi,eax
  40c3ca:	cdq    
  40c3cb:	ins    DWORD PTR es:[edi],dx
  40c3cc:	mov    dl,0xfe
  40c3ce:	imul   ecx,DWORD PTR [edx-0x1dee9608],0x31ea9a22
  40c3d8:	mov    ds:0xb4be597b,al
  40c3dd:	(bad)  
  40c3de:	adc    eax,0xb1fb42fb
  40c3e3:	sti    
  40c3e4:	jae    0x40c3a6
  40c3e6:	out    dx,al
  40c3e7:	jge    0x40c3dd
  40c3e9:	call   0x7bb064b1
  40c3ee:	loope  0x40c455
  40c3f0:	shl    DWORD PTR ds:0x185f4fed,0x28
  40c3f7:	mov    esi,ebp
  40c3f9:	mov    al,ds:0x7c009f47
  40c3fe:	push   edi
  40c3ff:	call   FWORD PTR [ecx+0x49c209ff]
  40c405:	add    ah,BYTE PTR [ebx]
  40c407:	mov    eax,0xb238ee3b
  40c40c:	mov    esi,0x68ec9100
  40c412:	aad    0x31
  40c414:	inc    esi
  40c415:	push   ebx
  40c416:	pminub mm5,mm4
  40c419:	inc    ebp
  40c41a:	inc    ecx
  40c41b:	jge    0x40c3a8
  40c41d:	jae    0x40c473
  40c41f:	fs hlt 
  40c421:	leave  
  40c422:	(bad)  
  40c423:	ins    DWORD PTR es:[edi],dx
  40c424:	ds enter 0x1b9c,0xd
  40c429:	lock or al,0x25
  40c42c:	stos   BYTE PTR es:[edi],al
  40c42d:	or     eax,0xfbeccb4f
  40c432:	gs xchg ebx,eax
  40c434:	and    BYTE PTR [ecx+0xe],0x39
  40c438:	sub    edx,DWORD PTR [edi-0x32649900]
  40c43e:	mov    BYTE PTR [esi-0x4c],ah
  40c441:	xchg   edx,eax
  40c442:	(bad)  
  40c443:	out    dx,al
  40c444:	ins    DWORD PTR es:[edi],dx
  40c445:	jmp    0x40c480
  40c447:	sub    cl,BYTE PTR [eax+0x4a1f7f12]
  40c44d:	and    eax,0xbfb6372f
  40c452:	push   ebp
  40c453:	xchg   ebp,eax
  40c455:	add    edx,DWORD PTR [edx-0x3fb6eb53]
  40c45b:	and    ah,BYTE PTR [ecx]
  40c45d:	arpl   WORD PTR [eax+0x29],bp
  40c460:	xchg   ecx,eax
  40c461:	adc    dl,BYTE PTR [edi+ebx*4]
  40c464:	add    esp,DWORD PTR [edi+0x49b61125]
  40c46a:	push   esp
  40c46b:	mov    ds:0xad217e49,al
  40c470:	loop   0x40c4ed
  40c472:	dec    edx
  40c473:	or     BYTE PTR [ebp-0x4d871b15],al
  40c479:	test   BYTE PTR [esp+ecx*8-0x4e],bh
  40c47d:	call   0x770f:0x10ec17
  40c484:	jge    0x40c4ff
  40c486:	mov    cs,edi
  40c488:	cmp    BYTE PTR [eax],al
  40c48a:	and    eax,DWORD PTR [ecx-0x42]
  40c48d:	int    0x24
  40c48f:	ret    
  40c490:	inc    eax
  40c491:	mov    dl,0xfa
  40c493:	push   eax
  40c494:	xchg   esp,eax
  40c495:	out    0xb8,al
  40c497:	jno    0x40c4b8
  40c499:	xchg   BYTE PTR [edi+0x577fec02],bh
  40c49f:	test   DWORD PTR [edx-0xd],ecx
  40c4a2:	or     al,0xd7
  40c4a4:	nop
  40c4a5:	ds inc esp
  40c4a7:	popf   
  40c4a8:	adc    DWORD PTR [edx+0xa1d7538],0x850bcb1e
  40c4b2:	jg     0x40c46f
  40c4b4:	lods   eax,DWORD PTR ds:[esi]
  40c4b5:	jnp    0x40c525
  40c4b7:	adc    DWORD PTR ds:0x5fddc385,esi
  40c4bd:	dec    eax
  40c4be:	jle    0x40c4af
  40c4c0:	sti    
  40c4c1:	xor    dl,ah
  40c4c3:	les    ebp,FWORD PTR [ecx-0x4b]
  40c4c6:	mov    eax,ds:0x532d1125
  40c4cb:	or     bl,al
  40c4cd:	pop    edi
  40c4ce:	fcmovu st,st(5)
  40c4d0:	cmp    eax,DWORD PTR [eax-0x4dd06f18]
  40c4d6:	popa   
  40c4d7:	test   edi,0xf61a1ec0
  40c4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4de:	fld    DWORD PTR [edx-0xd]
  40c4e1:	sub    eax,0x78627a75
  40c4e6:	dec    esi
  40c4e7:	(bad)  
  40c4e8:	mov    esi,0xfa315f06
  40c4ed:	pop    es
  40c4ee:	mov    fs,WORD PTR [eax-0x34bd1266]
  40c4f4:	xlat   BYTE PTR ds:[ebx]
  40c4f5:	stos   BYTE PTR es:[edi],al
  40c4f6:	mov    dl,0xdd
  40c4f8:	pusha  
  40c4f9:	retf   
  40c4fa:	scas   al,BYTE PTR es:[edi]
  40c4fb:	sbb    BYTE PTR [eax],ah
  40c4fd:	arpl   WORD PTR [edi+0x7bfe95bc],bp
  40c503:	pop    esp
  40c504:	inc    edi
  40c505:	cmp    BYTE PTR ds:0x1fd58a73,ah
  40c50b:	rcr    BYTE PTR [esi+0x52],cl
  40c50e:	dec    edx
  40c50f:	push   edx
  40c510:	cmc    
  40c511:	jle    0x40c4be
  40c513:	cmp    BYTE PTR [edx],al
  40c515:	cmp    al,0x60
  40c517:	push   edi
  40c518:	sub    eax,0x3e7eb1d
  40c51d:	int    0x90
  40c51f:	inc    edx
  40c520:	and    cl,BYTE PTR [ebx-0x1]
  40c523:	adc    eax,0xc0ebb262
  40c528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c529:	push   ds
  40c52a:	fs repnz pop ds
  40c52d:	leave  
  40c52e:	adc    esp,DWORD PTR [edx]
  40c530:	and    esi,DWORD PTR [ebx+0x2c771505]
  40c536:	(bad)  
  40c537:	into   
  40c538:	paddd  mm4,mm6
  40c53b:	inc    ecx
  40c53c:	jecxz  0x40c5bb
  40c53e:	clc    
  40c53f:	fnstsw WORD PTR [eax+eax*4+0x539f36a6]
  40c546:	adc    eax,0xb08ffe78
  40c54b:	ret    0xc721
  40c54e:	cmp    ch,BYTE PTR [eax+0x2613b6c7]
  40c554:	mov    bl,0x84
  40c556:	push   ebp
  40c557:	mov    ch,0x8a
  40c559:	cdq    
  40c55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55b:	xor    ah,BYTE PTR [ebx+edi*1]
  40c55e:	ror    BYTE PTR [eax],0xc2
  40c561:	jnp    0x40c5a0
  40c563:	jmp    0x7cdd:0xd2cbe6f8
  40c56a:	int    0xf9
  40c56c:	cmp    cl,ah
  40c56e:	sbb    BYTE PTR [ebp-0x45cbe2b5],ch
  40c574:	push   es
  40c575:	in     eax,dx
  40c576:	pushf  
  40c577:	push   edx
  40c578:	std    
  40c579:	aad    0x16
  40c57b:	adc    eax,0x445690f0
  40c580:	sahf   
  40c581:	test   al,0x76
  40c583:	xchg   edi,eax
  40c584:	sahf   
  40c585:	retf   0x65bc
  40c588:	push   edi
  40c589:	nop
  40c58a:	dec    eax
  40c58b:	es inc edx
  40c58d:	push   ds
  40c58e:	stos   BYTE PTR es:[edi],al
  40c58f:	jg     0x40c571
  40c591:	cmp    eax,edx
  40c593:	scas   eax,DWORD PTR es:[edi]
  40c594:	xchg   esp,eax
  40c595:	jno    0x40c5d6
  40c597:	test   BYTE PTR [eax-0x1f9aebdb],bl
  40c59d:	push   ss
  40c59e:	jnp    0x40c58e
  40c5a0:	mov    dl,0x5d
  40c5a2:	adc    ah,BYTE PTR [esi-0x6befd779]
  40c5a8:	xchg   ebp,eax
  40c5a9:	into   
  40c5aa:	icebp  
  40c5ab:	sahf   
  40c5ac:	outs   dx,DWORD PTR ds:[esi]
  40c5ad:	lds    edi,FWORD PTR [ebx-0x2714fdfe]
  40c5b3:	pop    ecx
  40c5b4:	rcr    ch,1
  40c5b6:	pop    ebx
  40c5b7:	jmp    FWORD PTR [edi-0x7f]
  40c5ba:	or     eax,ecx
  40c5bc:	vmovups YMMWORD PTR [ebp-0x4a],ymm1
  40c5c1:	es in  eax,0x14
  40c5c4:	and    ch,dh
  40c5c6:	pop    eax
  40c5c7:	mov    ebp,0xe00c7068
  40c5cc:	int3   
  40c5cd:	jns    0x40c5ef
  40c5cf:	add    al,0x96
  40c5d1:	sbb    dl,cl
  40c5d3:	div    DWORD PTR [ecx-0x5dacfcdd]
  40c5d9:	nop
  40c5da:	(bad)  
  40c5db:	(bad)  [ebx+eiz*1-0x32]
  40c5df:	(bad)
  40c5e3:	icebp  
  40c5e4:	aas    
  40c5e5:	popa   
  40c5e6:	mov    ch,BYTE PTR [ecx+ebx*1+0x724183a3]
  40c5ed:	mov    esp,eax
  40c5ef:	std    
  40c5f0:	fsub   DWORD PTR [eax+edi*2]
  40c5f3:	xchg   esp,eax
  40c5f4:	cmp    al,0x30
  40c5f6:	hlt    
  40c5f7:	jno    0x40c619
  40c5f9:	out    dx,eax
  40c5fa:	adc    BYTE PTR [ebx],bl
  40c5fc:	jae    0x40c611
  40c5fe:	fwait
  40c5ff:	push   0x3c
  40c601:	cwde   
  40c602:	nop
  40c603:	mov    edx,0x30ece27e
  40c608:	ret    
  40c609:	(bad)  
  40c60a:	push   ecx
  40c60b:	or     eax,0x8b2bfe5e
  40c610:	push   cs
  40c611:	mov    eax,ds:0xcda27f0b
  40c616:	pop    edi
  40c617:	jg     0x40c668
  40c619:	xlat   BYTE PTR ds:[ebx]
  40c61a:	call   0x21fc:0x7f7fc4aa
  40c621:	fsubr  DWORD PTR ds:[eax+edi*1-0x67d4b11b]
  40c629:	repz pop eax
  40c62b:	pop    es
  40c62c:	cld    
  40c62d:	mov    bl,0xbb
  40c62f:	inc    ebp
  40c630:	les    ebp,FWORD PTR [ebp+esi*4-0x67]
  40c634:	sub    edi,DWORD PTR [edi-0x18c4f94d]
  40c63a:	pop    es
  40c63b:	push   eax
  40c63c:	into   
  40c63d:	push   edx
  40c63e:	xor    eax,DWORD PTR [eax-0x12]
  40c641:	push   ebx
  40c642:	add    esp,ebx
  40c644:	dec    ebp
  40c645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c646:	mov    ecx,?
  40c648:	inc    edx
  40c649:	sbb    DWORD PTR ds:0xc2389fa4,ebx
  40c64f:	lods   al,BYTE PTR ds:[esi]
  40c650:	xchg   BYTE PTR [edx+0x35],dh
  40c653:	lea    edx,[eax]
  40c655:	cwde   
  40c656:	stos   DWORD PTR es:[edi],eax
  40c657:	sub    eax,0x1d5c0b35
  40c65c:	add    eax,0xd8b36a0c
  40c661:	mov    ebp,0xdf45a619
  40c666:	xchg   ebp,eax
  40c667:	jns    0x40c5f3
  40c669:	shl    BYTE PTR [ebp-0x69],cl
  40c66c:	mov    ecx,0xbb0c4cdf
  40c671:	popa   
  40c672:	sub    BYTE PTR [ebx+0x1adcbd44],0x57
  40c679:	test   eax,0x5677ef8d
  40c67e:	dec    ecx
  40c67f:	ror    al,1
  40c681:	das    
  40c682:	mov    edx,0xd64d3c11
  40c687:	sahf   
  40c688:	mov    DWORD PTR [ebp+0x4e7ee7cc],0xf1a2db6e
  40c692:	push   esp
  40c693:	mov    al,ds:0xabe79f6
  40c698:	mov    ebx,0x4804cc93
  40c69d:	pop    esp
  40c69e:	inc    ecx
  40c69f:	mov    ecx,0x9f3cdd65
  40c6a4:	in     eax,0x8e
  40c6a6:	ss hlt 
  40c6a8:	inc    eax
  40c6a9:	pop    esi
  40c6aa:	rcl    ecx,0xee
  40c6ad:	adc    dl,dh
  40c6af:	call   0xa1cfa808
  40c6b4:	clc    
  40c6b5:	aas    
  40c6b6:	lea    eax,[ebx]
  40c6b8:	outs   dx,DWORD PTR ds:[si]
  40c6ba:	add    ebp,DWORD PTR [edx]
  40c6bc:	pop    ds
  40c6bd:	mov    ebx,0x8756662
  40c6c2:	adc    eax,0x186f3079
  40c6c7:	pop    esp
  40c6c8:	(bad)  
  40c6c9:	bound  esi,QWORD PTR [esi+0x264cb78b]
  40c6cf:	aas    
  40c6d0:	fbstp  TBYTE PTR [ebp+0x6b]
  40c6d3:	jae    0x40c70b
  40c6d5:	adc    esp,esp
  40c6d7:	and    edx,0xb97f5e66
  40c6dd:	hlt    
  40c6de:	(bad)
  40c6e1:	cmc    
  40c6e2:	out    dx,al
  40c6e3:	inc    ecx
  40c6e4:	pop    ss
  40c6e5:	sub    BYTE PTR [ebx+0x38d5ae8c],0xf8
  40c6ec:	pop    ds
  40c6ed:	aad    0x6c
  40c6ef:	ror    ebx,cl
  40c6f1:	daa    
  40c6f2:	dec    esi
  40c6f3:	in     al,dx
  40c6f4:	pop    edx
  40c6f5:	(bad)  [ebp-0x427a43ab]
  40c6fb:	and    eax,0xba030cae
  40c700:	jno    0x40c709
  40c702:	inc    eax
  40c703:	les    ebx,FWORD PTR [ebp-0x34]
  40c706:	mov    ds:0xd63593e0,al
  40c70b:	fnstenv [esi+0x6d]
  40c70e:	push   ds
  40c70f:	xchg   esp,eax
  40c710:	mov    al,ds:0x9439044a
  40c715:	xchg   BYTE PTR [eax],bl
  40c717:	ins    DWORD PTR es:[edi],dx
  40c718:	(bad)
  40c71d:	inc    esi
  40c71e:	dec    eax
  40c71f:	xchg   edx,eax
  40c720:	sbb    BYTE PTR [edx+ebx*2+0x7b3769c0],al
  40c727:	and    eax,0xe875e60f
  40c72c:	cli    
  40c72d:	lea    ecx,[ebp-0x7f474aef]
  40c733:	jmp    0xc48605b7
  40c738:	cmp    esi,DWORD PTR [ebp-0x73]
  40c73b:	cmp    BYTE PTR [ebx],0xb7
  40c73e:	xor    BYTE PTR es:[ebp-0x48],dh
  40c742:	xchg   ebp,eax
  40c743:	push   edi
  40c744:	iret   
  40c745:	outs   dx,DWORD PTR ds:[esi]
  40c746:	jae    0x40c746
  40c748:	aam    0x6c
  40c74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74b:	inc    eax
  40c74c:	add    eax,0x8fef8974
  40c751:	push   0xffffffb9
  40c753:	mov    edx,0x3b54762d
  40c758:	pop    es
  40c759:	xchg   DWORD PTR [edx-0x2331c48d],edx
  40c75f:	or     esp,edi
  40c761:	and    DWORD PTR [esp+edx*1],edx
  40c764:	push   ds
  40c765:	sbb    BYTE PTR [eax],cl
  40c767:	jnp    0x40c756
  40c769:	dec    DWORD PTR [esi+0x47]
  40c76c:	xor    DWORD PTR ds:0x202dd7c4,esi
  40c772:	out    dx,al
  40c773:	pop    edx
  40c774:	in     eax,0x3c
  40c776:	ret    
  40c777:	imul   eax,DWORD PTR [eax-0x32],0x15e2d5c6
  40c77e:	(bad)  
  40c77f:	push   esp
  40c780:	sbb    bh,ah
  40c782:	cli    
  40c783:	icebp  
  40c784:	mov    al,0x90
  40c786:	xor    esi,DWORD PTR [ebx-0x3f]
  40c789:	xor    eax,0x3eebcc19
  40c78e:	xor    BYTE PTR [ecx-0x3b],dh
  40c791:	add    al,0xa6
  40c793:	xor    ah,BYTE PTR [ebx+0x13]
  40c796:	jecxz  0x40c7c7
  40c798:	push   0xffffffe8
  40c79a:	and    edi,DWORD PTR [edx]
  40c79c:	and    DWORD PTR [edi+0x15],ebp
  40c79f:	add    ecx,DWORD PTR [edi+0x34]
  40c7a2:	nop
  40c7a3:	sbb    al,BYTE PTR [eax]
  40c7a5:	gs adc al,0x1d
  40c7a8:	adc    DWORD PTR cs:[ecx],0x34
  40c7ac:	and    eax,esi
  40c7ae:	(bad)  
  40c7af:	arpl   WORD PTR cs:[edi],sp
  40c7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b3:	adc    dh,BYTE PTR [esi+0x51]
  40c7b6:	mov    DWORD PTR [ecx+0x2c],ebp
  40c7b9:	pop    ecx
  40c7ba:	or     BYTE PTR [esi+eax*8+0x61],bl
  40c7be:	cs add al,0x63
  40c7c1:	cmp    dl,al
  40c7c3:	bound  eax,QWORD PTR [ebp+0x579ed2dd]
  40c7c9:	pushf  
  40c7ca:	sub    esp,DWORD PTR [esi*8+0x7b11463a]
  40c7d1:	cwde   
  40c7d2:	add    eax,0x175d8b
  40c7d7:	out    dx,eax
  40c7d8:	or     DWORD PTR [ebx-0x6],esi
  40c7db:	outs   dx,BYTE PTR ds:[esi]
  40c7dc:	jg     0x40c7a8
  40c7de:	lock mov bl,0x47
  40c7e1:	sbb    DWORD PTR [ebp-0x69],ebx
  40c7e4:	mov    al,0xb0
  40c7e6:	jle    0x40c860
  40c7e8:	lods   eax,DWORD PTR ds:[esi]
  40c7e9:	or     DWORD PTR [esi],ecx
  40c7eb:	add    BYTE PTR [esi+0x3b],cl
  40c7ee:	arpl   cx,cx
  40c7f0:	test   eax,ebp
  40c7f2:	pop    ds
  40c7f3:	jmp    0x40c7af
  40c7f5:	cwde   
  40c7f6:	sbb    edx,DWORD PTR [ecx]
  40c7f8:	sahf   
  40c7f9:	daa    
  40c7fa:	int3   
  40c7fb:	push   ecx
  40c7fc:	xchg   esp,eax
  40c7fd:	add    al,0x65
  40c7ff:	mov    esp,ecx
  40c801:	or     al,0xef
  40c803:	jl     0x40c86a
  40c805:	mov    edx,0xf152148a
  40c80a:	fmul   st(0),st
  40c80c:	sbb    bh,dh
  40c80e:	imul   esp,ecx,0xffffffbf
  40c811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c812:	clc    
  40c813:	sbb    edx,DWORD PTR [ebx+eax*1+0x41]
  40c817:	imul   eax,DWORD PTR [eax],0x3d
  40c81a:	mov    ebp,0x3d02d6b5
  40c81f:	xor    DWORD PTR [ecx+ebx*1],ebp
  40c822:	and    BYTE PTR [ebp+0x29fa7465],0xab
  40c829:	push   0x965f8176
  40c82e:	jecxz  0x40c7d7
  40c830:	jb     0x40c88e
  40c832:	out    dx,al
  40c833:	int3   
  40c834:	in     eax,0xd5
  40c836:	in     eax,dx
  40c837:	test   BYTE PTR [edx],ch
  40c839:	fcomp  st(4)
  40c83b:	fs sbb eax,0x45d504d6
  40c841:	daa    
  40c842:	push   esp
  40c843:	mov    edi,0x99d0a4e1
  40c848:	xchg   esp,eax
  40c849:	mov    esp,esp
  40c84b:	adc    al,0x77
  40c84d:	jmp    0x6980:0x987fab0a
  40c854:	add    ebx,DWORD PTR [ecx-0x7edcd05c]
  40c85a:	cli    
  40c85b:	sub    al,BYTE PTR [esi]
  40c85d:	mov    eax,0xdcb8e8d6
  40c862:	(bad)
  40c865:	outs   dx,DWORD PTR ds:[esi]
  40c866:	jl     0x40c8e2
  40c868:	or     eax,DWORD PTR [edx+0x5e9c5e]
  40c86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c86f:	jbe    0x40c7fe
  40c871:	mov    eax,ds:0xd5776fa2
  40c876:	push   0xb835fa45
  40c87b:	imul   ebx,edx,0x46
  40c87e:	jns    0x40c86e
  40c880:	out    0xab,al
  40c882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c883:	mov    ebp,0xf13e1302
  40c888:	(bad)  
  40c889:	mov    al,0x25
  40c88b:	mov    edi,0x6c786a0b
  40c890:	inc    edx
  40c891:	fist   WORD PTR [ecx]
  40c893:	sahf   
  40c894:	push   0xa009f23f
  40c899:	mov    edx,0x99a9f354
  40c89e:	call   0xb80a:0x1b539e89
  40c8a5:	push   es
  40c8a6:	dec    edi
  40c8a7:	pushf  
  40c8a8:	or     DWORD PTR [ebx+0x53],esi
  40c8ab:	or     al,0xd1
  40c8ad:	push   ebx
  40c8ae:	pop    esp
  40c8af:	inc    ecx
  40c8b0:	cmp    DWORD PTR [eax-0x1fcd72e5],esp
  40c8b6:	lea    ecx,[ebx+0x559ea3d6]
  40c8bc:	lods   al,BYTE PTR ds:[esi]
  40c8bd:	pop    esi
  40c8be:	leave  
  40c8bf:	mov    BYTE PTR [edi+0x7a],dl
  40c8c2:	stc    
  40c8c3:	lds    esp,FWORD PTR [ebp-0x797caff4]
  40c8c9:	sbb    al,0xde
  40c8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8cc:	cmp    bl,ah
  40c8ce:	inc    esp
  40c8cf:	xchg   ebp,eax
  40c8d0:	loopne 0x40c8cf
  40c8d2:	out    0x52,al
  40c8d4:	mov    edi,0xaaf97f38
  40c8d9:	mov    esi,0x7c89e520
  40c8de:	lahf   
  40c8df:	ins    BYTE PTR es:[edi],dx
  40c8e0:	daa    
  40c8e1:	loope  0x40c89c
  40c8e3:	adc    edi,DWORD PTR [ebp-0x31bcb73d]
  40c8e9:	xchg   ecx,eax
  40c8eb:	pushf  
  40c8ec:	stos   BYTE PTR es:[edi],al
  40c8ed:	push   ebp
  40c8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ef:	mov    ch,0x4c
  40c8f1:	dec    ebp
  40c8f2:	jne    0x40c916
  40c8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f5:	dec    edx
  40c8f6:	add    DWORD PTR [esi+0x21],esp
  40c8f9:	sub    ebp,DWORD PTR ds:0x5c9c627
  40c8ff:	xchg   esi,eax
  40c900:	test   eax,0x8b5c0975
  40c905:	adc    al,BYTE PTR [eax+0x4f]
  40c908:	push   cs
  40c909:	out    0x4c,al
  40c90b:	adc    eax,0xf26a1ef8
  40c910:	pop    eax
  40c911:	add    dh,BYTE PTR [edx+0x2e9b68bf]
  40c917:	inc    ebp
  40c918:	clc    
  40c919:	mov    WORD PTR [eax],cs
  40c91b:	arpl   WORD PTR ds:0xc564bfc6,di
  40c921:	aam    0x22
  40c923:	out    0x5c,al
  40c925:	outs   dx,DWORD PTR ds:[esi]
  40c926:	push   ebp
  40c927:	mov    DWORD PTR [eax+0x185f898d],esp
  40c92d:	adc    eax,esp
  40c92f:	loopne 0x40c8c9
  40c931:	cmp    DWORD PTR [esi+0x5915aea],ebx
  40c937:	jae    0x40c973
  40c939:	cmp    eax,0x343e1573
  40c93e:	xor    DWORD PTR ds:0x658ce3fe,0x47c71a5c
  40c948:	xchg   eax,esi
  40c94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94b:	or     bh,bl
  40c94d:	mov    esi,0x32160875
  40c952:	xor    DWORD PTR [edx],ebx
  40c954:	pop    es
  40c955:	xchg   dl,ch
  40c957:	xchg   BYTE PTR [edi],dl
  40c959:	fadd   DWORD PTR [esi]
  40c95b:	clc    
  40c95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c95d:	adc    ebx,DWORD PTR [edx+0x5847cd0]
  40c963:	xchg   DWORD PTR [esi+0x5e943dbf],ecx
  40c969:	call   0x289f:0xc71d7887
  40c970:	icebp  
  40c971:	mov    esp,0x396c9e8c
  40c976:	xchg   edx,eax
  40c977:	add    ah,dh
  40c979:	xlat   BYTE PTR ds:[ebx]
  40c97a:	push   esp
  40c97b:	mov    BYTE PTR [eax-0x1a86790d],al
  40c981:	ss jg  0x40c9aa
  40c984:	cld    
  40c985:	push   cs
  40c986:	call   0xcbc6:0xb0a358c5
  40c98d:	mov    edi,0xf9afe900
  40c992:	jnp    0x40c9ab
  40c994:	loope  0x40c9a7
  40c996:	cdq    
  40c997:	outs   dx,DWORD PTR ds:[esi]
  40c998:	jae    0x40ca12
  40c99a:	lds    esi,FWORD PTR [ebx+0x74]
  40c99d:	icebp  
  40c99e:	or     ecx,DWORD PTR [esi+0x40]
  40c9a1:	aam    0x1c
  40c9a3:	jne    0x40c9d6
  40c9a5:	jno    0x40ca17
  40c9a7:	test   DWORD PTR [ebx-0x5075dced],esp
  40c9ad:	jmp    0x40c9f1
  40c9af:	push   ebx
  40c9b0:	xchg   eax,esi
  40c9b2:	fst    QWORD PTR [ebp+eax*4-0x75]
  40c9b6:	ins    DWORD PTR es:[edi],dx
  40c9b7:	fld    DWORD PTR [esi+0x364e7531]
  40c9bd:	repnz cpuid 
  40c9c0:	into   
  40c9c1:	sbb    ecx,DWORD PTR [ebx]
  40c9c3:	jno    0x40c9b7
  40c9c5:	pop    esp
  40c9c6:	dec    eax
  40c9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c8:	fdiv   DWORD PTR [eax+0x6f]
  40c9cb:	mov    fs,WORD PTR [esi+0x1c170e2f]
  40c9d1:	jae    0x40ca14
  40c9d3:	repz jns 0x40c9de
  40c9d6:	sbb    al,dh
  40c9d8:	pop    eax
  40c9d9:	mov    cl,0x2b
  40c9db:	push   cs
  40c9dc:	push   0xfffffffd
  40c9de:	(bad)  
  40c9e0:	mov    ds,WORD PTR [ecx+0x7]
  40c9e3:	xchg   esp,eax
  40c9e4:	fs loopne 0x40ca56
  40c9e7:	push   edi
  40c9e8:	jae    0x40c99f
  40c9ea:	or     BYTE PTR [esi+0x4a],0x3f
  40c9ee:	test   DWORD PTR [ebp+ebx*1-0x9],0xe6173337
  40c9f6:	push   ds
  40c9f7:	ins    DWORD PTR es:[edi],dx
  40c9f8:	add    al,bl
  40c9fa:	inc    edx
  40c9fb:	pop    esp
  40c9fc:	sbb    eax,0x53ff69fc
  40ca01:	mov    dh,0xee
  40ca03:	fs push edi
  40ca05:	or     BYTE PTR [esi],ah
  40ca07:	loopne 0x40ca55
  40ca09:	xor    eax,0x4c3147f
  40ca0e:	push   es
  40ca0f:	idiv   DWORD PTR [eax]
  40ca11:	shl    BYTE PTR [ebx-0x1b],cl
  40ca14:	popf   
  40ca15:	js     0x40ca47
  40ca17:	icebp  
  40ca18:	xor    DWORD PTR [ebx-0x1d],esp
  40ca1b:	test   al,ch
  40ca1d:	or     edi,DWORD PTR [ecx]
  40ca1f:	imul   edx,DWORD PTR [ebx+eax*8-0x25],0x2aa50628
  40ca27:	fwait
  40ca28:	or     DWORD PTR [ebp-0x1986de6b],edx
  40ca2e:	mov    esp,0x413c4c8e
  40ca33:	ret    
  40ca34:	mov    dh,0x7
  40ca36:	popf   
  40ca37:	jg     0x40ca6e
  40ca39:	movlps xmm5,QWORD PTR [eax]
  40ca3c:	test   DWORD PTR [esi+0x20aa714f],edi
  40ca42:	rcl    esi,0xdc
  40ca45:	and    edi,DWORD PTR [ebx-0x43]
  40ca48:	fmulp  st(1),st
  40ca4a:	inc    ebx
  40ca4b:	clc    
  40ca4c:	(bad)  
  40ca4d:	lods   al,BYTE PTR ds:[esi]
  40ca4e:	or     ch,ch
  40ca50:	sti    
  40ca51:	adc    al,0xb5
  40ca53:	cmp    al,0x6e
  40ca55:	int3   
  40ca56:	(bad)  
  40ca58:	popa   
  40ca59:	or     al,0x3f
  40ca5b:	inc    ebx
  40ca5c:	(bad)  
  40ca5d:	test   al,al
  40ca5f:	pusha  
  40ca60:	nop
  40ca61:	cmp    eax,0x973cf426
  40ca66:	in     eax,dx
  40ca67:	push   ss
  40ca68:	mov    eax,0x15569840
  40ca6d:	loope  0x40c9f0
  40ca6f:	pop    eax
  40ca70:	out    dx,al
  40ca71:	jmp    0xd887ba22
  40ca76:	xor    cl,dh
  40ca78:	mov    ecx,DWORD PTR [edx]
  40ca7a:	in     eax,dx
  40ca7b:	or     BYTE PTR [edi+0x44887309],al
  40ca81:	enter  0xd024,0x3e
  40ca85:	scas   eax,DWORD PTR es:[edi]
  40ca86:	dec    ebp
  40ca87:	jb     0x40cab5
  40ca89:	inc    esp
  40ca8a:	in     al,dx
  40ca8b:	sbb    al,0xf6
  40ca8d:	fld    QWORD PTR [edx+0xcdb0cd1]
  40ca93:	ja     0x40cab9
  40ca95:	in     al,dx
  40ca96:	retf   0x63df
  40ca99:	clc    
  40ca9a:	clc    
  40ca9b:	(bad)  
  40ca9d:	stos   BYTE PTR es:[edi],al
  40ca9e:	adc    esp,DWORD PTR [eax+0x5d562791]
  40caa4:	or     eax,0x9b1e43e8
  40caa9:	xchg   edx,eax
  40caaa:	call   0x185e:0xe0dc7a68
  40cab1:	inc    ecx
  40cab2:	mov    eax,0xadd32e26
  40cab7:	dec    ebp
  40cab8:	jmp    0xb334:0x3ba06fbd
  40cabf:	std    
  40cac0:	jb     0x40cb01
  40cac2:	mov    ebp,0xc7edfa3
  40cac7:	cmp    dl,BYTE PTR [edi+esi*2-0x7ca9fca3]
  40cace:	cmp    cl,BYTE PTR [edx-0x6bfed86]
  40cad4:	sar    ah,0x22
  40cad7:	jmp    0x40cac8
  40cad9:	and    ebx,esp
  40cadb:	mov    al,0xa0
  40cadd:	push   cs
  40cade:	test   BYTE PTR [esi+eax*8+0x61],ch
  40cae2:	cmp    dl,ah
  40cae4:	or     bh,cl
  40cae6:	ror    DWORD PTR [edi-0x1fc1724],cl
  40caec:	push   edi
  40caed:	push   esp
  40caee:	mov    ch,0xd6
  40caf0:	ds out dx,eax
  40caf2:	test   BYTE PTR [ebx-0x5d],bh
  40caf5:	stos   DWORD PTR es:[edi],eax
  40caf6:	jbe    0x40cae0
  40caf8:	retf   0x5714
  40cafb:	(bad)  ds:0xdbcedbe8
  40cb01:	inc    dl
  40cb03:	or     DWORD PTR ds:0x1f4fcecf,esi
  40cb09:	xchg   esp,eax
  40cb0a:	sbb    edx,eax
  40cb0c:	jle    0x40cb33
  40cb0e:	mov    BYTE PTR [ebp+0x7ce58627],0x8e
  40cb15:	(bad)  
  40cb16:	or     BYTE PTR [ebx],ch
  40cb18:	inc    eax
  40cb19:	fs mov ah,0x84
  40cb1c:	cwde   
  40cb1d:	cld    
  40cb1e:	dec    edi
  40cb1f:	inc    ebx
  40cb20:	test   DWORD PTR [eax+0x46],edi
  40cb23:	sahf   
  40cb24:	push   esi
  40cb25:	das    
  40cb26:	repz sub ebx,esp
  40cb29:	call   0xc866fdac
  40cb2e:	xchg   ecx,eax
  40cb2f:	jmp    0x40cadc
  40cb31:	jnp    0x40cad4
  40cb33:	pop    ecx
  40cb34:	pop    es
  40cb35:	fwait
  40cb36:	idiv   BYTE PTR gs:0xadafc7
  40cb3d:	retf   
  40cb3e:	pop    eax
  40cb3f:	add    esi,edx
  40cb41:	pop    ds
  40cb42:	jmp    0x79b8:0xbae0fa41
  40cb49:	xor    BYTE PTR [edx+0x15f80143],cl
  40cb4f:	ror    DWORD PTR [ebx+0x27a984a9],1
  40cb55:	(bad)  
  40cb57:	cmp    DWORD PTR [esi-0x76],esi
  40cb5a:	stc    
  40cb5b:	adc    BYTE PTR [edx],bh
  40cb5d:	dec    esp
  40cb5e:	(bad)  
  40cb60:	or     esi,edx
  40cb62:	xor    bl,BYTE PTR [ebp+0x3c]
  40cb65:	adc    al,ah
  40cb67:	sub    eax,0x53cd98e5
  40cb6c:	je     0x40cbc5
  40cb6e:	mov    eax,0xd91d6886
  40cb73:	xor    BYTE PTR [esi],bl
  40cb75:	inc    ebp
  40cb76:	adc    dl,BYTE PTR [edx-0x24]
  40cb79:	gs repz sub edx,edx
  40cb7d:	retf   0x5a19
  40cb80:	mov    ebp,0x48a23b17
  40cb85:	icebp  
  40cb86:	hlt    
  40cb87:	mov    ch,0x3e
  40cb89:	jbe    0x40cb18
  40cb8b:	sbb    BYTE PTR [edi+0x3b],dl
  40cb8e:	xlat   BYTE PTR ds:[ebx]
  40cb8f:	mov    esi,0x63099d42
  40cb94:	and    al,0x92
  40cb96:	mov    edx,0xad40282c
  40cb9b:	int    0xb0
  40cb9d:	ja     0x40cbfe
  40cb9f:	sbb    al,0xb9
  40cba1:	adc    DWORD PTR [ecx],0x382f6689
  40cba7:	(bad)  
  40cba8:	fdivr  QWORD PTR [ecx]
  40cbaa:	icebp  
  40cbab:	in     al,dx
  40cbac:	leave  
  40cbad:	ret    0xb338
  40cbb0:	push   cs
  40cbb1:	mov    dl,bl
  40cbb3:	cmp    BYTE PTR [ebp+0x58],0x7
  40cbb7:	jge    0x40cb96
  40cbb9:	es push ebp
  40cbbb:	lods   al,BYTE PTR ds:[esi]
  40cbbc:	leave  
  40cbbd:	(bad)  
  40cbbf:	jmp    0x4e314477
  40cbc4:	mov    ch,BYTE PTR [esi]
  40cbc6:	pop    ds
  40cbc7:	sub    ebx,0xda97a01c
  40cbcd:	out    0x16,al
  40cbcf:	clc    
  40cbd0:	xchg   ecx,eax
  40cbd1:	xor    BYTE PTR ds:0x5c10fbb8,dh
  40cbd7:	add    edi,ebx
  40cbd9:	(bad)  
  40cbdb:	(bad)  
  40cbdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbdd:	jg     0x40cc13
  40cbdf:	adc    DWORD PTR [ecx+0x18],ecx
  40cbe2:	stos   DWORD PTR es:[edi],eax
  40cbe3:	inc    eax
  40cbe4:	imul   eax,DWORD PTR [ecx+0x37f2190d],0xffffff9c
  40cbeb:	mov    bh,0x96
  40cbed:	adc    ebx,eax
  40cbef:	ret    0x63e1
  40cbf2:	xor    esp,DWORD PTR [edx+edx*1-0x4e]
  40cbf6:	push   ebp
  40cbf7:	pop    eax
  40cbf8:	jno    0x40cbea
  40cbfa:	stos   DWORD PTR es:[edi],eax
  40cbfb:	imul   ebx,ebp,0xfffffff2
  40cbfe:	sbb    al,0xc6
  40cc00:	or     eax,0xf67416bb
  40cc05:	fist   WORD PTR [ebx+eax*2+0x2852c7c0]
  40cc0c:	mov    ss,eax
  40cc0e:	lods   al,BYTE PTR ds:[esi]
  40cc0f:	(bad)  
  40cc10:	ins    BYTE PTR es:[edi],dx
  40cc11:	push   edi
  40cc12:	xchg   esp,eax
  40cc13:	icebp  
  40cc14:	cmp    BYTE PTR ds:0x52d6e90a,bl
  40cc1a:	xchg   ebp,eax
  40cc1b:	lods   al,BYTE PTR ds:[esi]
  40cc1c:	sar    DWORD PTR [edx+0x1b],1
  40cc1f:	out    0xb9,al
  40cc21:	idiv   ecx
  40cc23:	sub    ah,cl
  40cc25:	leave  
  40cc26:	mov    dl,0x39
  40cc28:	xor    bh,BYTE PTR [ebx]
  40cc2a:	add    al,0xb0
  40cc2c:	in     eax,0xb8
  40cc2e:	sub    dl,BYTE PTR [ebx+esi*8]
  40cc31:	inc    ecx
  40cc32:	inc    DWORD PTR [edi]
  40cc34:	adc    eax,0xb7ff792e
  40cc39:	out    0x66,al
  40cc3b:	xchg   BYTE PTR [eax+0x4f747f3],cl
  40cc41:	add    al,0x7b
  40cc43:	xor    dl,dh
  40cc45:	std    
  40cc46:	sahf   
  40cc47:	aad    0xd5
  40cc49:	or     al,0x37
  40cc4b:	call   0x23d1:0x1640f165
  40cc52:	int    0x75
  40cc54:	add    dl,ah
  40cc56:	pop    ebx
  40cc57:	fcmovnbe st,st(1)
  40cc59:	call   0x9698:0x5b325c26
  40cc60:	stos   DWORD PTR es:[edi],eax
  40cc61:	out    dx,eax
  40cc62:	pop    ds
  40cc63:	mov    edx,0x890421d8
  40cc68:	je     0x40ccd8
  40cc6a:	(bad)  
  40cc6b:	neg    BYTE PTR [edx+edi*1+0x7000dee0]
  40cc72:	mov    al,ds:0xbba0fb73
  40cc77:	jb     0x40cc57
  40cc79:	fcomp  st(4)
  40cc7b:	arpl   WORD PTR [eax+eiz*1+0x20449d6b],di
  40cc82:	rcr    DWORD PTR [esi+0x26],cl
  40cc85:	call   0xbd687514
  40cc8a:	bound  eax,QWORD PTR [ecx+0x2e]
  40cc8d:	inc    ebx
  40cc8e:	push   edi
  40cc8f:	and    eax,0xace4cf74
  40cc94:	in     al,0x91
  40cc96:	test   DWORD PTR [ebp+0x3c22c28c],ebp
  40cc9c:	shl    BYTE PTR [esi-0x32f1d81d],0x3f
  40cca3:	cmp    ah,BYTE PTR [eax+ecx*1+0x4]
  40cca7:	dec    edi
  40cca8:	cs ret 
  40ccaa:	fldenv ds:0x5e6625b2
  40ccb0:	jmp    0x40cccc
  40ccb2:	lods   eax,DWORD PTR ds:[esi]
  40ccb3:	test   DWORD PTR ds:0xcdbd23fa,0x78a0878a
  40ccbd:	mul    DWORD PTR [edi+eiz*1]
  40ccc0:	inc    ebx
  40ccc1:	retf   0x4768
  40ccc4:	sbb    ah,ch
  40ccc6:	out    0xe7,al
  40ccc8:	mov    al,0xc6
  40ccca:	dec    eax
  40cccb:	jae    0x40cc7c
  40cccd:	cld    
  40ccce:	or     BYTE PTR [eax],bh
  40ccd0:	lock lds esi,FWORD PTR gs:[ebp-0x75]
  40ccd5:	fadd   QWORD PTR [ebp+0x4bee1020]
  40ccdb:	adc    al,0xb6
  40ccdd:	icebp  
  40ccde:	jbe    0x40ccc1
  40cce0:	jle    0x40ccd7
  40cce2:	retf   0xd2d8
  40cce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce6:	fcmovne st,st(2)
  40cce8:	repz sub BYTE PTR [edi-0x78],0x14
  40cced:	int3   
  40ccee:	pushf  
  40ccef:	scas   al,BYTE PTR es:[edi]
  40ccf0:	adc    al,0x9a
  40ccf2:	sar    BYTE PTR [ebx-0x32],1
  40ccf5:	(bad)  
  40ccf7:	and    edi,edx
  40ccf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccfa:	adc    dl,BYTE PTR [ebx+0x19]
  40ccfd:	and    cl,BYTE PTR [ebx]
  40ccff:	fdiv   st(1),st
  40cd01:	xlat   BYTE PTR ds:[ebx]
  40cd02:	dec    esp
  40cd03:	imul   ecx,edi,0x78a98520
  40cd09:	sti    
  40cd0a:	xlat   BYTE PTR ds:[ebx]
  40cd0b:	cmp    DWORD PTR [edx-0x30],ebp
  40cd0e:	jns    0x40cce8
  40cd10:	jmp    0x40ccc0
  40cd12:	push   ebx
  40cd13:	imul   ebp,esi,0xe234b28b
  40cd19:	add    ecx,DWORD PTR [esi+0x5a]
  40cd1c:	mov    ah,0x1d
  40cd1e:	mov    ch,0xcb
  40cd20:	add    al,0x71
  40cd22:	xchg   esp,eax
  40cd23:	jle    0x40cda3
  40cd25:	adc    BYTE PTR [edi],bh
  40cd27:	sahf   
  40cd28:	and    eax,0xa6a9960d
  40cd2d:	mov    eax,ds:0x6b33b1b8
  40cd32:	add    cl,BYTE PTR [esi+0x51c2b535]
  40cd38:	mov    ch,0x16
  40cd3a:	mov    bl,0x6f
  40cd3c:	push   0x7a2c2c37
  40cd41:	into   
  40cd42:	mov    edi,0x369e0bf5
  40cd47:	adc    cl,bl
  40cd49:	in     eax,dx
  40cd4a:	std    
  40cd4b:	pop    esp
  40cd4c:	fs ds lock out dx,al
  40cd50:	loop   0x40cdbb
  40cd52:	in     al,0x40
  40cd54:	hlt    
  40cd55:	loope  0x40cd50
  40cd57:	mov    al,0xbd
  40cd59:	push   edi
  40cd5a:	fs (bad) 
  40cd5c:	(bad)  
  40cd5e:	retf   0xdbb2
  40cd61:	push   ebp
  40cd62:	cmp    eax,0x2e78a8ab
  40cd67:	mov    bl,0x88
  40cd69:	adc    BYTE PTR [edi],dh
  40cd6b:	and    edx,DWORD PTR [edi]
  40cd6d:	lea    edi,[eax+0x49]
  40cd70:	cmp    al,0xe6
  40cd72:	shr    DWORD PTR [ebx+0x752cd3aa],1
  40cd78:	(bad)  
  40cd79:	aad    0xb4
  40cd7b:	or     BYTE PTR [edi],ch
  40cd7d:	out    0xa,al
  40cd7f:	dec    ebp
  40cd80:	lahf   
  40cd81:	sar    BYTE PTR [ecx+0x32],1
  40cd84:	shl    DWORD PTR [ebx+0x3e],0x20
  40cd88:	add    BYTE PTR [esi],cl
  40cd8a:	loopne 0x40cdaa
  40cd8c:	cmp    eax,0xd09de8fe
  40cd91:	pop    esi
  40cd92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd93:	shr    ah,0x6d
  40cd96:	pop    ebp
  40cd97:	(bad)  
  40cd98:	out    dx,eax
  40cd99:	add    DWORD PTR cs:[ecx],edi
  40cd9c:	ds push ecx
  40cd9e:	std    
  40cd9f:	dec    edi
  40cda0:	mov    ch,0x1f
  40cda2:	sbb    eax,0x7e809418
  40cda7:	add    BYTE PTR [esi+0x33],ch
  40cdaa:	inc    esi
  40cdab:	inc    ebx
  40cdac:	es std 
  40cdae:	xchg   esi,eax
  40cdaf:	pop    esi
  40cdb0:	push   edi
  40cdb1:	addr16 sub al,0xf
  40cdb4:	mov    ecx,0xd9c94604
  40cdb9:	dec    esp
  40cdba:	(bad)  
  40cdbb:	sbb    al,0xef
  40cdbd:	cmp    eax,0xc18cd41
  40cdc2:	sbb    edx,DWORD PTR [eax-0x7ecc985c]
  40cdc8:	(bad)  
  40cdca:	js     0x40cdbd
  40cdcc:	bnd jle 0x40cdf5
  40cdcf:	fs call 0x9543ca1c
  40cdd5:	and    al,0x92
  40cdd7:	inc    esp
  40cdd8:	jnp    0x40ce39
  40cdda:	mov    ch,0x6c
  40cddc:	inc    ebp
  40cddd:	js     0x40cddc
  40cddf:	imul   ebp,ebp,0x2d
  40cde2:	mov    WORD PTR [ebx+0x5a8c87f0],cs
  40cde8:	(bad)  
  40cde9:	fcmovbe st,st(5)
  40cdeb:	jp     0x40ce30
  40cded:	je     0x40ce64
  40cdef:	iret   
  40cdf0:	mov    ds:0x349983c8,al
  40cdf5:	daa    
  40cdf6:	xor    dl,BYTE PTR [edx+0x64d7fea7]
  40cdfc:	cmp    eax,0xcd958650
  40ce01:	sbb    ebx,DWORD PTR [ebp+0x577e8c6e]
  40ce07:	adc    eax,0xca5974a8
  40ce0c:	sbb    al,0x73
  40ce0e:	scas   eax,DWORD PTR es:[edi]
  40ce0f:	cli    
  40ce10:	hlt    
  40ce11:	test   ebp,ebx
  40ce13:	xchg   edi,eax
  40ce14:	lods   al,BYTE PTR ds:[esi]
  40ce15:	(bad)  
  40ce16:	cmc    
  40ce17:	stos   DWORD PTR es:[edi],eax
  40ce18:	pop    es
  40ce19:	and    bl,dh
  40ce1b:	mov    ah,0x77
  40ce1d:	push   ecx
  40ce1e:	je     0x40ce31
  40ce20:	fs das 
  40ce22:	sub    ah,BYTE PTR [eax+ebp*1]
  40ce25:	pop    edx
  40ce26:	icebp  
  40ce27:	jecxz  0x40cdf3
  40ce29:	pop    esp
  40ce2a:	sub    al,0xf8
  40ce2c:	push   edx
  40ce2d:	push   ss
  40ce2e:	icebp  
  40ce2f:	outs   dx,BYTE PTR ds:[esi]
  40ce30:	push   ebx
  40ce31:	(bad)  
  40ce32:	ins    DWORD PTR es:[edi],dx
  40ce33:	daa    
  40ce34:	repz leave 
  40ce36:	imul   edx,DWORD PTR [ecx],0xffffffc8
  40ce39:	mov    esp,0xb8fd241e
  40ce3e:	mov    ds:0x1971bdc7,eax
  40ce43:	mov    eax,0x34648189
  40ce48:	rcr    ch,0x2f
  40ce4b:	hlt    
  40ce4c:	pop    ss
  40ce4d:	jno    0x40cde8
  40ce4f:	test   al,0x25
  40ce51:	dec    eax
  40ce52:	retf   0x735b
  40ce55:	or     al,0xd4
  40ce57:	(bad)  
  40ce58:	jno    0x40ce49
  40ce5a:	imul   DWORD PTR [ebp+0x688d100d]
  40ce60:	or     edx,edi
  40ce62:	test   al,0xe8
  40ce64:	push   ebp
  40ce65:	retf   
  40ce66:	dec    ecx
  40ce67:	mov    esp,fs
  40ce69:	mov    bl,0xa2
  40ce6b:	push   ebp
  40ce6c:	pop    ds
  40ce6d:	int    0xe4
  40ce6f:	les    ebp,FWORD PTR [edi+0x3190dce2]
  40ce75:	fisub  DWORD PTR [ecx]
  40ce77:	adc    bl,BYTE PTR [eax]
  40ce79:	or     eax,0xceffbbbf
  40ce7e:	pusha  
  40ce7f:	gs aam 0xed
  40ce82:	adc    al,BYTE PTR [ebx-0x36]
  40ce85:	dec    ecx
  40ce86:	mov    WORD PTR [esi],gs
  40ce88:	lea    esi,[esi]
  40ce8a:	fidivr WORD PTR ds:0x28527bbf
  40ce90:	or     BYTE PTR [ecx+0x675058a6],ch
  40ce96:	mov    eax,ds:0x569a419a
  40ce9b:	jns    0x40cec2
  40ce9d:	add    BYTE PTR [eax-0xb],0xa5
  40cea1:	les    esi,FWORD PTR [ecx-0x3e]
  40cea4:	xchg   esi,eax
  40cea5:	ret    0x8993
  40cea8:	mov    DWORD PTR [ecx+0x536e7594],ebx
  40ceae:	in     al,0x8f
  40ceb0:	push   0xdab8492b
  40ceb5:	mov    bh,0x66
  40ceb7:	push   0x28
  40ceb9:	in     eax,dx
  40ceba:	sahf   
  40cebb:	aaa    
  40cebc:	sub    edi,DWORD PTR [ebx+0x3aa21d09]
  40cec2:	enter  0x603f,0xe1
  40cec6:	sbb    ebx,ecx
  40cec8:	mov    ecx,0x16f5c5ea
  40cecd:	popa   
  40cece:	xchg   ebx,eax
  40cecf:	cmc    
  40ced0:	xchg   edx,eax
  40ced1:	int    0x92
  40ced3:	jmp    0xe0c54e71
  40ced8:	xchg   edi,eax
  40ced9:	add    ch,BYTE PTR [edi]
  40cedb:	sbb    ecx,0x514a9da3
  40cee1:	loope  0x40cec3
  40cee3:	dec    ebp
  40cee4:	retf   0xa4b4
  40cee7:	dec    edx
  40cee8:	dec    esi
  40cee9:	xchg   ecx,eax
  40ceea:	mov    eax,0x8a51b804
  40ceef:	mov    ah,al
  40cef1:	mov    ebp,0xc0cf9c9d
  40cef6:	mov    al,0xa1
  40cef8:	shr    DWORD PTR [ecx-0x5e],1
  40cefb:	push   esp
  40cefc:	rcr    bl,0x4
  40ceff:	dec    ecx
  40cf00:	js     0x40cea2
  40cf02:	mov    edx,0x440c96a8
  40cf07:	push   0xc98a71c4
  40cf0c:	jecxz  0x40ce9f
  40cf0e:	dec    ebx
  40cf0f:	shl    bh,cl
  40cf11:	test   eax,eax
  40cf13:	xchg   edx,eax
  40cf14:	les    eax,FWORD PTR [esi-0x26]
  40cf17:	add    eax,DWORD PTR [edx+0x4]
  40cf1a:	sub    esp,0x3cc3a769
  40cf20:	into   
  40cf21:	inc    ebx
  40cf22:	icebp  
  40cf23:	xor    BYTE PTR [ebx+eiz*1+0x44],bh
  40cf27:	mov    eax,ebp
  40cf29:	ins    BYTE PTR es:[edi],dx
  40cf2a:	scas   eax,DWORD PTR es:[edi]
  40cf2b:	push   esi
  40cf2c:	jl     0x40cfa9
  40cf2e:	fwait
  40cf2f:	or     DWORD PTR [esi+0x6e701190],edx
  40cf35:	mov    BYTE PTR [ebp-0x3577daac],ah
  40cf3b:	sar    BYTE PTR [esi],0xa
  40cf3e:	ret    0xf37f
  40cf41:	hlt    
  40cf42:	dec    ebp
  40cf43:	xor    ch,BYTE PTR [edi+eiz*8+0x3c]
  40cf47:	mov    WORD PTR [edi],ss
  40cf49:	imul   esi,DWORD PTR [esi+ebp*4],0x45
  40cf4d:	loopne 0x40cf9e
  40cf4f:	xor    ebp,DWORD PTR [ebp+ecx*4+0x28f2498d]
  40cf56:	adc    DWORD PTR [edi+0x74],ebx
  40cf59:	xchg   edi,eax
  40cf5a:	test   al,0x58
  40cf5c:	inc    esi
  40cf5d:	mov    dh,BYTE PTR [esp+esi*2]
  40cf60:	dec    ebx
  40cf61:	aad    0x9b
  40cf63:	into   
  40cf64:	loopne 0x40cf29
  40cf66:	push   eax
  40cf67:	call   0x43fc4b4
  40cf6c:	push   cs
  40cf6d:	xchg   edi,eax
  40cf6e:	push   edi
  40cf6f:	clc    
  40cf70:	pop    esp
  40cf71:	push   edi
  40cf72:	sahf   
  40cf73:	cdq    
  40cf74:	mov    esp,0xbf2ef8d1
  40cf79:	jmp    0xd5f2:0x20643d3d
  40cf80:	adc    DWORD PTR fs:[esi],ebp
  40cf83:	addr16 inc edx
  40cf85:	lds    ecx,FWORD PTR [edi+0x39d37081]
  40cf8b:	push   ds
  40cf8c:	dec    esi
  40cf8d:	mov    WORD PTR [ebp+0x6a70edbe],gs
  40cf93:	mov    WORD PTR [edx+0x32f4972c],es
  40cf99:	xor    BYTE PTR [edx-0x10dc3899],cl
  40cf9f:	call   0xf3cbdc22
  40cfa4:	xchg   esi,eax
  40cfa5:	int3   
  40cfa6:	jmp    0x98362074
  40cfab:	ins    DWORD PTR es:[edi],dx
  40cfac:	push   es
  40cfad:	cdq    
  40cfae:	pop    esp
  40cfaf:	out    0xb,eax
  40cfb1:	inc    ecx
  40cfb2:	or     al,0x4c
  40cfb4:	retf   
  40cfb5:	(bad)  
  40cfb6:	and    BYTE PTR [ebp+edi*8+0x789d8b7a],cl
  40cfbd:	adc    ebx,esi
  40cfbf:	gs fwait
  40cfc1:	jns    0x40cf8b
  40cfc3:	sub    DWORD PTR ds:0x83a2396a,esi
  40cfc9:	jmp    0xd9bb:0x439827d8
  40cfd0:	mov    DWORD PTR [ebx-0x7cc4a894],edi
  40cfd6:	in     eax,dx
  40cfd7:	adc    dh,BYTE PTR [edi]
  40cfd9:	or     al,0xe7
  40cfdb:	jle    0x40cfd1
  40cfdd:	jl     0x40d04c
  40cfdf:	cmc    
  40cfe0:	push   ss
  40cfe1:	mov    ecx,0x3ab539df
  40cfe6:	push   0x51ce5908
  40cfeb:	mov    dl,al
  40cfed:	xor    BYTE PTR [ecx+0x302d03ef],al
  40cff3:	aas    
  40cff4:	data16 sbb cl,dl
  40cff7:	rcr    BYTE PTR [ebx],cl
  40cff9:	inc    edi
  40cffa:	popa   
  40cffb:	xchg   ecx,eax
  40cffc:	jo     0x40d01f
  40cffe:	dec    ecx
  40cfff:	stos   DWORD PTR es:[edi],eax
  40d000:	xor    al,0x50
  40d002:	or     esi,esp
  40d004:	inc    edx
  40d005:	jno    0x40d053
  40d007:	test   DWORD PTR [edx-0x2a9434cc],0x28555493
  40d011:	repz jg 0x40d075
  40d014:	xor    cl,cl
  40d016:	xchg   edx,eax
  40d017:	mov    ah,0x59
  40d019:	call   0xf5540d89
  40d01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d01f:	idiv   BYTE PTR [ecx+0x63e44eac]
  40d025:	xchg   ecx,eax
  40d026:	mov    ch,BYTE PTR [ebp+0x63]
  40d029:	aad    0xb6
  40d02b:	mov    ch,0x5e
  40d02d:	out    0xcb,al
  40d02f:	and    eax,0x9de422f4
  40d034:	lea    edi,[eax-0x21f9163c]
  40d03a:	mov    eax,ds:0xaf54357f
  40d03f:	mov    bl,0x4c
  40d041:	pop    esi
  40d042:	fwait
  40d043:	sbb    al,0x44
  40d045:	mov    edx,0x45e9f2cb
  40d04a:	cmp    edi,DWORD PTR [edi+0x70fbc8ec]
  40d050:	inc    ecx
  40d051:	jmp    0x40d028
  40d053:	cs fsubp st(2),st
  40d056:	sub    DWORD PTR [edx],edi
  40d058:	add    BYTE PTR [ecx+0x40],dh
  40d05b:	inc    esi
  40d05c:	sbb    BYTE PTR [eax+0x4d22e722],0x5c
  40d063:	jmp    0x9274:0x33ccd435
  40d06a:	jb     0x40d065
  40d06c:	xor    dh,BYTE PTR gs:[esi]
  40d06f:	in     al,dx
  40d070:	xchg   esp,eax
  40d071:	push   es
  40d072:	inc    edi
  40d073:	mov    ah,0x64
  40d075:	sti    
  40d076:	lock adc ah,BYTE PTR [ecx+ebx*4+0x1c]
  40d07b:	dec    ebp
  40d07c:	mov    ah,0x9f
  40d07e:	pop    ebp
  40d07f:	call   FWORD PTR [esp+ecx*4-0x4]
  40d083:	das    
  40d084:	pop    edx
  40d085:	addr16 stc 
  40d087:	test   BYTE PTR [eax-0x19],bh
  40d08a:	mov    BYTE PTR [edx],al
  40d08c:	loopne 0x40d0c1
  40d08e:	dec    ebx
  40d08f:	sub    BYTE PTR [ebx+0x11a15c26],dl
  40d095:	jl     0x40d0d0
  40d097:	mov    dh,0x5f
  40d099:	call   DWORD PTR [edx-0x10c9edbc]
  40d09f:	shl    BYTE PTR [esi-0x58],0xd8
  40d0a3:	inc    eax
  40d0a4:	jg     0x40d059
  40d0a6:	or     bh,BYTE PTR [edi-0x24]
  40d0a9:	out    0x3b,al
  40d0ab:	bnd jge 0x40d04b
  40d0ae:	xchg   ebp,eax
  40d0af:	jp     0x40d094
  40d0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b2:	(bad)  
  40d0b3:	push   0x59d72759
  40d0b8:	adc    ah,BYTE PTR [eax+0x3ce59006]
  40d0be:	sbb    eax,0xf5aa27cf
  40d0c3:	xor    esp,esp
  40d0c5:	test   DWORD PTR [edx-0x78496c52],0xa602fb84
  40d0cf:	jmp    0xe857c772
  40d0d4:	push   ds
  40d0d5:	mov    esi,0xcf8c628
  40d0da:	inc    eax
  40d0db:	sub    eax,DWORD PTR [ebx+0x57e28551]
  40d0e1:	fbstp  TBYTE PTR [ebp+eiz*1-0x5f]
  40d0e5:	cmp    al,BYTE PTR [eax+0x8f1bf13]
  40d0eb:	nop
  40d0ec:	inc    ebp
  40d0ed:	pop    ds
  40d0ee:	push   ebx
  40d0ef:	fwait
  40d0f0:	ins    DWORD PTR es:[edi],dx
  40d0f1:	push   edx
  40d0f2:	jae    0x40d162
  40d0f4:	and    al,BYTE PTR [edi-0x73460c50]
  40d0fa:	adc    DWORD PTR [edi+edi*8-0x59],esi
  40d0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ff:	xchg   ebx,edx
  40d101:	jno    0x40d16c
  40d103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d104:	adc    ebp,DWORD PTR ds:0xf95f214c
  40d10a:	or     al,0x79
  40d10c:	stc    
  40d10d:	jmp    0x9ce6:0x38c9f1f1
  40d114:	aam    0x40
  40d116:	mov    esi,cs
  40d118:	(bad)  
  40d119:	loopne 0x40d15f
  40d11b:	pop    ds
  40d11c:	ins    BYTE PTR es:[edi],dx
  40d11d:	mov    bl,0xf0
  40d11f:	std    
  40d120:	sbb    al,0x1d
  40d122:	xchg   edx,eax
  40d123:	in     eax,0x2e
  40d125:	add    ebp,DWORD PTR [esi]
  40d127:	daa    
  40d128:	pop    ebp
  40d129:	xor    DWORD PTR [eax+0x4c3dc0a5],edx
  40d12f:	sbb    esi,0xffffffc3
  40d132:	fidiv  DWORD PTR [ecx]
  40d134:	pop    ebp
  40d135:	xor    dl,BYTE PTR [eax+edi*8-0x5f]
  40d139:	dec    ebp
  40d13a:	push   edi
  40d13b:	and    al,0x51
  40d13d:	mov    eax,ds:0xedf38906
  40d142:	into   
  40d143:	cs out 0x6a,eax
  40d146:	xchg   esp,eax
  40d147:	push   esp
  40d148:	imul   BYTE PTR [ebx+0xb]
  40d14b:	push   ebx
  40d14c:	fld    DWORD PTR [ebp-0x5a]
  40d14f:	mov    edx,DWORD PTR [ecx+0x2a]
  40d152:	test   DWORD PTR [eax+0x1c],ebx
  40d155:	icebp  
  40d156:	(bad)  
  40d157:	pop    edi
  40d158:	or     DWORD PTR [ebx+0x2ee36694],esp
  40d15e:	or     eax,ebx
  40d160:	popa   
  40d161:	in     al,0x93
  40d163:	mov    eax,ds:0x8a705b8b
  40d168:	xor    DWORD PTR [eax-0xbe0e831],edx
  40d16e:	arpl   WORD PTR ds:[ebx+0x1e],si
  40d172:	and    al,0x48
  40d174:	jbe    0x40d0f7
  40d176:	ja     0x40d1d4
  40d178:	aas    
  40d179:	xchg   edx,eax
  40d17a:	or     eax,0x1ab975a2
  40d17f:	cmp    BYTE PTR [edx+0xe5e34d5],ah
  40d185:	xchg   edx,eax
  40d186:	outs   dx,DWORD PTR ds:[esi]
  40d187:	dec    ebp
  40d188:	dec    edx
  40d189:	call   0x4ff1:0xfc5bb6a5
  40d190:	fiadd  WORD PTR [esi+edx*4+0x65]
  40d194:	call   0x8792a206
  40d199:	mov    DWORD PTR [ebx],0x369b4
  40d19f:	push   esi
  40d1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a1:	sbb    eax,0x22393fd3
  40d1a6:	adc    ebx,ebx
  40d1a8:	inc    ebx
  40d1a9:	pop    edx
  40d1aa:	js     0x40d1d1
  40d1ac:	lock (bad) 
  40d1ae:	(bad)  [ecx+0x1cd355b4]
  40d1b4:	xchg   BYTE PTR [ebx],bl
  40d1b6:	cmp    DWORD PTR [ebp-0xb],edi
  40d1b9:	inc    edx
  40d1ba:	push   es
  40d1bb:	arpl   WORD PTR [ebx-0x19],dx
  40d1be:	fisubr DWORD PTR [ecx+0x7b]
  40d1c1:	lods   al,BYTE PTR ds:[esi]
  40d1c2:	(bad)  
  40d1c3:	data16 jnp 0x40d214
  40d1c6:	sbb    BYTE PTR [esi-0x685b56b7],bl
  40d1cc:	mov    eax,DWORD PTR [ebx]
  40d1ce:	push   cs
  40d1cf:	sbb    BYTE PTR [ecx],ah
  40d1d1:	jle    0x40d222
  40d1d3:	push   0x8c7dc094
  40d1d8:	push   cs
  40d1d9:	mov    dl,0x14
  40d1db:	in     eax,dx
  40d1dc:	iret   
  40d1dd:	add    eax,0xfaa2f786
  40d1e2:	fs lahf 
  40d1e4:	and    ah,BYTE PTR [edx-0x7fcc1858]
  40d1ea:	sbb    ah,BYTE PTR [ebx+0x57]
  40d1ed:	out    dx,eax
  40d1ee:	shl    BYTE PTR fs:[ebp+0x76c335a0],1
  40d1f5:	mov    bl,0xd9
  40d1f7:	jmp    0x40d25b
  40d1f9:	(bad)  
  40d1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1fb:	pop    esi
  40d1fc:	sbb    al,0x78
  40d1fe:	adc    cl,dh
  40d200:	fimul  WORD PTR [esi]
  40d202:	(bad)  
  40d204:	jns    0x40d252
  40d206:	cmp    al,0x42
  40d208:	and    al,0x7f
  40d20a:	test   BYTE PTR [ebx+0x52000c7c],dh
  40d210:	int    0x5c
  40d212:	jmp    0x40d212
  40d214:	dec    esp
  40d215:	arpl   WORD PTR [edx-0x2f],bp
  40d218:	push   ecx
  40d219:	outs   dx,BYTE PTR ds:[esi]
  40d21a:	rcl    DWORD PTR [ebp-0x7adf28e],cl
  40d220:	lods   eax,DWORD PTR ds:[esi]
  40d221:	push   cs
  40d222:	sbb    esp,ebx
  40d224:	and    DWORD PTR [esi+0x20],ecx
  40d227:	and    eax,0x26c0dd4f
  40d22c:	cmp    dl,bl
  40d22e:	pop    eax
  40d22f:	dec    esi
  40d230:	mov    ?,WORD PTR [ebp+edi*8-0x3c89a210]
  40d237:	shl    BYTE PTR [ecx+esi*1],cl
  40d23a:	into   
  40d23b:	inc    ecx
  40d23c:	dec    eax
  40d23d:	jnp    0x40d29e
  40d23f:	dec    ebp
  40d240:	sbb    ch,BYTE PTR [esi+0x448e0fd4]
  40d246:	fst    QWORD PTR [esi+0x64]
  40d249:	sbb    eax,0x85e07ecd
  40d24e:	stos   DWORD PTR es:[edi],eax
  40d24f:	dec    ebp
  40d250:	or     DWORD PTR [eax+0x1d],ebp
  40d253:	js     0x40d22a
  40d255:	int3   
  40d256:	xchg   ebp,eax
  40d257:	mov    ecx,0x310662b5
  40d25c:	int    0x5c
  40d25e:	sbb    BYTE PTR [ebx+0x3e43efdb],0xe
  40d265:	push   esp
  40d266:	or     bh,bl
  40d268:	ss push eax
  40d26a:	pop    esp
  40d26b:	jle    0x40d282
  40d26d:	fwait
  40d26e:	retf   0x8443
  40d271:	popf   
  40d272:	pop    ecx
  40d273:	mov    cl,0xf9
  40d275:	out    dx,al
  40d276:	or     DWORD PTR [eiz*4+0x71c4ac91],0x64
  40d27e:	dec    esp
  40d27f:	out    0x88,eax
  40d281:	rcl    DWORD PTR [ebp-0x7],1
  40d284:	dec    ebp
  40d285:	push   0x557c22db
  40d28a:	push   edx
  40d28b:	mov    ah,ah
  40d28d:	mov    WORD PTR [ecx+0x388fd9a5],cs
  40d293:	adc    esi,DWORD PTR [ecx-0xc73607e]
  40d299:	pop    ebp
  40d29a:	dec    ebx
  40d29b:	mov    ebp,0x49d9b6db
  40d2a0:	inc    esi
  40d2a1:	add    ah,bh
  40d2a3:	mov    al,cl
  40d2a5:	(bad)  
  40d2a6:	addr16 xor al,0x7d
  40d2a9:	push   edx
  40d2aa:	into   
  40d2ab:	sub    esp,edx
  40d2ad:	fbld   TBYTE PTR [edx+0x2d]
  40d2b0:	dec    edx
  40d2b1:	popa   
  40d2b2:	das    
  40d2b3:	and    al,0x35
  40d2b5:	pop    ds
  40d2b6:	cli    
  40d2b7:	or     al,0xf8
  40d2b9:	fwait
  40d2ba:	sti    
  40d2bb:	dec    esi
  40d2bc:	push   ecx
  40d2bd:	in     al,dx
  40d2be:	sub    ecx,ecx
  40d2c0:	jns    0x40d2f0
  40d2c2:	and    ch,ah
  40d2c4:	int3   
  40d2c5:	mov    ss,WORD PTR [ebx+0x78ddf864]
  40d2cb:	mov    ds:0x11ac0854,al
  40d2d0:	aas    
  40d2d1:	aad    0xe9
  40d2d3:	jge    0x40d30e
  40d2d5:	or     BYTE PTR [ebx],al
  40d2d7:	xchg   edi,eax
  40d2d8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2da:	dec    eax
  40d2db:	mov    ebp,0xc0880d3a
  40d2e0:	jne    0x40d336
  40d2e2:	vunpcklps ymm3,ymm2,YMMWORD PTR [ecx]
  40d2e6:	outs   dx,DWORD PTR ds:[esi]
  40d2e7:	xacquire xchg BYTE PTR [eax],al
  40d2ea:	or     ebx,DWORD PTR [edx+edi*1-0x7f]
  40d2ee:	xchg   BYTE PTR [edi-0x1a099daf],al
  40d2f4:	add    ah,BYTE PTR [esp+ebx*2]
  40d2f7:	and    bh,BYTE PTR [edi+0x3e4808a8]
  40d2fd:	push   ebx
  40d2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ff:	shl    DWORD PTR ds:0x68e324fc,1
  40d305:	sub    eax,0x399d691f
  40d30a:	jb     0x40d2e6
  40d30c:	push   es
  40d30d:	dec    esi
  40d30e:	xor    esi,DWORD PTR [ebx+0x3878c8c8]
  40d314:	add    al,0xe
  40d316:	test   DWORD PTR [ecx-0x67],edi
  40d319:	out    0xe3,eax
  40d31b:	sti    
  40d31c:	sbb    al,0xdd
  40d31e:	fnstenv [esi+ecx*4-0x4839be9b]
  40d325:	ja     0x40d2dc
  40d327:	jnp    0x40d324
  40d329:	and    eax,0x30d7534c
  40d32e:	sbb    BYTE PTR [eax-0x7469ee4f],0x7e
  40d335:	jge    0x40d2e4
  40d337:	adc    dh,0xa7
  40d33a:	outs   dx,DWORD PTR ds:[esi]
  40d33b:	jle    0x40d37c
  40d33d:	add    al,0x54
  40d33f:	dec    ebp
  40d340:	jo     0x40d3a1
  40d342:	cmp    eax,eax
  40d344:	repz mov ecx,0xf2e0afc0
  40d34a:	adc    ch,bl
  40d34c:	push   ebx
  40d34d:	or     eax,DWORD PTR [esi-0x6a]
  40d350:	in     eax,dx
  40d351:	nop
  40d352:	xor    eax,0xdcfa5352
  40d357:	sub    BYTE PTR ds:0x93bd7c1a,cl
  40d35d:	ss dec edi
  40d35f:	mov    eax,ds:0xa09b76ef
  40d364:	bnd jl 0x40d39f
  40d367:	pop    esp
  40d368:	std    
  40d369:	push   es
  40d36a:	mov    cl,0x29
  40d36c:	pop    edi
  40d36d:	inc    esp
  40d36e:	test   BYTE PTR [ebx+0x37ec0807],al
  40d374:	jl     0x40d3f5
  40d376:	sahf   
  40d377:	pop    ebp
  40d378:	ss jmp 0x596:0x645f4595
  40d380:	mov    esi,0x4e05ead0
  40d385:	scas   al,BYTE PTR es:[edi]
  40d386:	scas   eax,DWORD PTR es:[edi]
  40d387:	mov    bl,0xd3
  40d389:	push   ss
  40d38a:	loopne 0x40d3f0
  40d38c:	dec    ebx
  40d38d:	pop    esi
  40d38e:	fld    st(3)
  40d390:	nop
  40d391:	in     al,dx
  40d392:	jp     0x40d3e0
  40d394:	int    0x91
  40d396:	fwait
  40d397:	mov    ch,0x4d
  40d399:	dec    esi
  40d39a:	repnz add BYTE PTR [ebx],bl
  40d39d:	test   eax,0x867b20f4
  40d3a2:	pop    ebp
  40d3a3:	js     0x40d346
  40d3a5:	repz (bad) 
  40d3a7:	les    esi,FWORD PTR [ebp+0x6a]
  40d3aa:	push   ebx
  40d3ab:	pop    es
  40d3ac:	push   edx
  40d3ad:	int3   
  40d3ae:	xor    BYTE PTR [esp+ebx*1-0x6dd5c9b7],dl
  40d3b5:	ins    BYTE PTR es:[edi],dx
  40d3b6:	scas   eax,DWORD PTR es:[edi]
  40d3b7:	ret    
  40d3b8:	push   edx
  40d3b9:	and    edi,DWORD PTR [eax]
  40d3bb:	mov    dh,0x18
  40d3bd:	add    BYTE PTR [ebp+0x38eda9c],ah
  40d3c3:	(bad)  
  40d3c4:	cmp    eax,0xecf6d977
  40d3c9:	cs mov ch,0xd1
  40d3cc:	pop    ds
  40d3cd:	add    edi,esp
  40d3cf:	int    0xdd
  40d3d1:	jo     0x40d387
  40d3d3:	cmp    edx,esp
  40d3d5:	rcl    BYTE PTR [ebx-0x22],0xd6
  40d3d9:	add    eax,DWORD PTR [eax-0x75]
  40d3dc:	cmp    al,0x3a
  40d3de:	stos   BYTE PTR es:[edi],al
  40d3df:	je     0x40d431
  40d3e1:	cwde   
  40d3e2:	push   esp
  40d3e3:	sub    DWORD PTR [edx+0x12],eax
  40d3e6:	inc    edi
  40d3e7:	clc    
  40d3e8:	popf   
  40d3e9:	dec    edi
  40d3ea:	push   ebp
  40d3eb:	push   ebp
  40d3ec:	fiadd  DWORD PTR [eax]
  40d3ee:	jne    0x40d40a
  40d3f0:	cwde   
  40d3f1:	and    eax,0xa045f797
  40d3f6:	neg    DWORD PTR [eax-0x12]
  40d3f9:	cld    
  40d3fa:	jne    0x40d44d
  40d3fc:	pop    es
  40d3fd:	push   esi
  40d3fe:	mov    cl,0x3
  40d400:	or     al,0xcc
  40d402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d403:	jns    0x40d469
  40d405:	mov    ah,0xcd
  40d407:	push   ds
  40d408:	adc    al,0x8a
  40d40a:	push   ecx
  40d40b:	dec    edi
  40d40c:	ja     0x40d484
  40d40e:	push   0x621da4ad
  40d413:	mov    ah,0x1d
  40d415:	mov    ds:0x74026d8d,al
  40d41a:	xchg   cx,ax
  40d41c:	std    
  40d41d:	out    dx,eax
  40d41e:	mov    edx,0xcd1b29d9
  40d423:	push   ss
  40d424:	xchg   ecx,eax
  40d425:	xor    ah,BYTE PTR [esi+0x16390017]
  40d42b:	dec    esi
  40d42c:	outs   dx,BYTE PTR ds:[esi]
  40d42d:	sub    DWORD PTR [esi],ecx
  40d42f:	call   0xc85e1b7a
  40d434:	mov    BYTE PTR [ebx+eiz*1],dh
  40d437:	add    DWORD PTR [esi+0x42],0x37
  40d43b:	repz and ch,ch
  40d43e:	retf   0x5e2e
  40d441:	test   edx,ebp
  40d443:	xor    edx,esp
  40d445:	pop    edx
  40d446:	push   ds
  40d447:	jg     0x40d430
  40d449:	xor    eax,DWORD PTR [eax-0x2b]
  40d44c:	sti    
  40d44d:	in     eax,0x5e
  40d44f:	or     eax,0x53b70f34
  40d454:	add    DWORD PTR [eax-0x1fdd20a5],ebx
  40d45a:	fild   DWORD PTR [ecx-0x5c]
  40d45d:	lds    esi,FWORD PTR [esi-0x62]
  40d460:	mov    ah,0x70
  40d462:	sar    BYTE PTR [eax],0x7d
  40d465:	and    ebp,DWORD PTR [ecx+0x501e082d]
  40d46b:	out    dx,al
  40d46c:	jo     0x40d41b
  40d46e:	dec    edi
  40d46f:	or     bh,BYTE PTR [ebp-0x68994f2b]
  40d475:	rcl    ebx,0xc2
  40d478:	add    esi,DWORD PTR [edx+0x5a]
  40d47b:	add    DWORD PTR [ecx],ebp
  40d47d:	add    eax,0x51f4be09
  40d482:	mov    eax,0xaecaad1
  40d487:	jl     0x40d482
  40d489:	clc    
  40d48a:	stc    
  40d48b:	in     al,0x20
  40d48d:	(bad)  
  40d48e:	fucom  st(6)
  40d490:	shl    BYTE PTR [edi],cl
  40d492:	mov    al,BYTE PTR [ebx-0x60a904e0]
  40d498:	enter  0xb155,0x36
  40d49c:	cmp    cl,bl
  40d49e:	pop    ss
  40d49f:	pop    ebx
  40d4a0:	xor    eax,0x340a51f9
  40d4a5:	sar    esi,cl
  40d4a7:	jb     0x40d4db
  40d4a9:	out    0x3d,al
  40d4ab:	jbe    0x40d4f7
  40d4ad:	repz rol BYTE PTR [ebx-0x6c],1
  40d4b1:	test   ecx,0x6ef2fd48
  40d4b7:	dec    ebp
  40d4b8:	ins    BYTE PTR es:[edi],dx
  40d4b9:	nop
  40d4ba:	div    DWORD PTR ds:0x4e97b8b7
  40d4c0:	stc    
  40d4c1:	fidivr WORD PTR [eax+0xb]
  40d4c4:	adc    eax,0x15f85af2
  40d4c9:	xor    DWORD PTR ds:0x46babc10,ebp
  40d4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d0:	jl     0x40d496
  40d4d2:	pop    ds
  40d4d3:	(bad)  
  40d4d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d5:	(bad)  
  40d4d6:	test   eax,0x22df8750
  40d4db:	sbb    BYTE PTR [eax],ch
  40d4dd:	add    BYTE PTR [ecx],0xe
  40d4e0:	adc    cl,BYTE PTR fs:[ebx+ebx*1-0x38]
  40d4e5:	fmul   DWORD PTR [eax-0x7c]
  40d4e8:	out    0x61,eax
  40d4ea:	sbb    edx,DWORD PTR [esi+0x45]
  40d4ed:	pop    ecx
  40d4ee:	mov    edx,0x6377aac9
  40d4f3:	mov    ds:0xf5978ca7,al
  40d4f8:	and    ebp,0xffffffea
  40d4fb:	sub    ebx,edi
  40d4fd:	mov    eax,0x2d28980f
  40d502:	sub    esi,DWORD PTR [edx-0x24e1859a]
  40d508:	xor    DWORD PTR [esi-0x4d],ebp
  40d50b:	mov    ch,0x1a
  40d50d:	lea    ecx,[eax-0x2a]
  40d510:	cmp    BYTE PTR [ebx+0x6d],dl
  40d513:	pop    es
  40d514:	add    eax,0x6c635655
  40d519:	retf   0x3742
  40d51c:	lods   eax,DWORD PTR ds:[esi]
  40d51d:	popf   
  40d51e:	cld    
  40d51f:	pop    es
  40d520:	shl    DWORD PTR [eax+ebp*8+0x32],1
  40d524:	push   edx
  40d525:	retf   0xee49
  40d528:	mov    eax,ds:0xe950dd69
  40d52d:	jge    0x40d4d8
  40d52f:	push   0x5f
  40d531:	jecxz  0x40d566
  40d533:	push   esi
  40d534:	js     0x40d559
  40d536:	xchg   esi,eax
  40d537:	in     eax,dx
  40d538:	loopne 0x40d4cb
  40d53a:	shl    bh,0x3
  40d53d:	ror    eax,cl
  40d53f:	inc    ebp
  40d540:	es push 0x5f
  40d543:	cmp    edi,DWORD PTR [esi-0x5e]
  40d546:	clc    
  40d547:	mov    ecx,0x6c013b1a
  40d54c:	xchg   edi,eax
  40d54d:	jns    0x40d4d2
  40d54f:	jo     0x40d597
  40d551:	mov    bl,0xe0
  40d553:	sub    BYTE PTR [ebx-0x8],ah
  40d556:	cmp    al,0x47
  40d558:	sub    BYTE PTR [ebx-0x64b3e280],bh
  40d55e:	xchg   esp,eax
  40d55f:	mov    esp,0xdbfef7fa
  40d564:	push   ss
  40d565:	shl    BYTE PTR [edi],0xd1
  40d568:	dec    esi
  40d569:	int    0xc8
  40d56b:	fisub  DWORD PTR [ebx]
  40d56d:	fcomp  DWORD PTR [edi+eiz*2]
  40d570:	fsubr  QWORD PTR [ecx+0x2b99c5ff]
  40d576:	sbb    eax,0x2281a5f4
  40d57b:	sbb    eax,0x33d2319
  40d580:	sub    al,BYTE PTR [ecx]
  40d582:	(bad)  
  40d583:	sbb    cl,ch
  40d585:	xchg   esp,edx
  40d587:	xchg   DWORD PTR [ebx-0x329c1ab1],eax
  40d58d:	sahf   
  40d58e:	add    eax,DWORD PTR [edx-0x6e4f53c3]
  40d594:	or     BYTE PTR [edi],ch
  40d596:	mov    al,0x3a
  40d598:	out    0x63,eax
  40d59a:	mov    edi,edi
  40d59c:	fistp  WORD PTR [edx]
  40d59e:	jne    0x40d5d5
  40d5a0:	mov    bh,0x55
  40d5a2:	ja     0x40d5db
  40d5a4:	adc    BYTE PTR [ebx],cl
  40d5a6:	sbb    dl,ch
  40d5a8:	sar    BYTE PTR [ecx-0x1d1276a9],cl
  40d5ae:	sbb    DWORD PTR [edi-0xd5d5671],ebx
  40d5b4:	out    dx,eax
  40d5b5:	sar    DWORD PTR [ecx-0x48],cl
  40d5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b9:	push   ebx
  40d5ba:	mov    edi,DWORD PTR [edx]
  40d5bc:	mov    WORD PTR [edx+0x5d],gs
  40d5bf:	imul   ebp,esp,0x89f61156
  40d5c5:	loop   0x40d584
  40d5c7:	int3   
  40d5c8:	sbb    BYTE PTR [ecx-0x41],cl
  40d5cb:	xlat   BYTE PTR ds:[ebx]
  40d5cc:	adc    eax,0x79e6f0d1
  40d5d1:	jge    0x40d593
  40d5d3:	push   ss
  40d5d4:	das    
  40d5d5:	cwde   
  40d5d6:	jb     0x40d5aa
  40d5d8:	sub    BYTE PTR [ecx-0x7c],bh
  40d5db:	push   eax
  40d5dc:	std    
  40d5dd:	(bad)  
  40d5de:	loopne 0x40d5a5
  40d5e0:	add    eax,DWORD PTR [esi+0x34a1aaf1]
  40d5e6:	sub    eax,0xd84322d1
  40d5eb:	jo     0x40d622
  40d5ed:	data16 mov ah,0x97
  40d5f0:	sub    DWORD PTR [edx],edi
  40d5f2:	retf   0x2555
  40d5f5:	sbb    edx,ebx
  40d5f7:	data16 sahf 
  40d5f9:	xchg   ah,bh
  40d5fb:	idiv   BYTE PTR [ebp-0x1bb5ef5]
  40d601:	repnz retf 
  40d603:	jmp    0x2f037cf8
  40d608:	sbb    BYTE PTR [esi+0x4e],al
  40d60b:	mov    edi,0x19a531f2
  40d610:	enter  0x9531,0x76
  40d614:	stos   BYTE PTR es:[edi],al
  40d615:	ins    BYTE PTR es:[edi],dx
  40d616:	iret   
  40d617:	pop    ebp
  40d618:	ror    DWORD PTR [ebx-0x21e2b5d7],1
  40d61e:	add    ch,al
  40d620:	test   al,0xb
  40d622:	sbb    ah,dh
  40d624:	mov    bl,0xbb
  40d626:	enter  0x122a,0x62
  40d62a:	xchg   BYTE PTR [eax+0x3b34f64a],al
  40d630:	xor    dl,BYTE PTR [eax-0x8f60b22]
  40d636:	add    esi,DWORD PTR [esi-0x40c22b28]
  40d63c:	add    DWORD PTR [esi],0xffffffdd
  40d63f:	mov    ebp,fs
  40d641:	out    0x18,eax
  40d643:	jp     0x40d5d0
  40d645:	cwde   
  40d646:	sbb    bh,dl
  40d648:	jmp    0xd2f3:0xcc7e899a
  40d64f:	pop    eax
  40d650:	add    al,0xa5
  40d652:	scas   eax,DWORD PTR es:[edi]
  40d653:	pop    ds
  40d654:	adc    DWORD PTR [eax+0x68cb1122],0xc04dda9
  40d65e:	xchg   esp,eax
  40d65f:	dec    eax
  40d660:	adc    ecx,esp
  40d662:	loop   0x40d6a2
  40d664:	push   0x85b9109f
  40d669:	rcl    DWORD PTR [edi+ecx*2+0x45],0xe3
  40d66e:	xchg   edx,eax
  40d66f:	mov    ah,0x97
  40d671:	aaa    
  40d672:	pusha  
  40d673:	popf   
  40d674:	mov    dl,0x1e
  40d676:	and    BYTE PTR [ebx],dl
  40d678:	icebp  
  40d679:	repnz (bad) 
  40d67b:	sbb    dh,bh
  40d67d:	rcr    dh,0x15
  40d680:	(bad)  
  40d681:	jb     0x40d67a
  40d683:	jo     0x40d612
  40d685:	int    0x86
  40d687:	push   DWORD PTR [ebp+0x63639c49]
  40d68d:	repz (bad) 
  40d690:	jmp    0xb6335fcd
  40d695:	push   0x78411419
  40d69a:	das    
  40d69b:	xor    edi,DWORD PTR [ecx]
  40d69d:	dec    ecx
  40d69e:	mov    dh,0x48
  40d6a0:	jge    0x40d6b0
  40d6a2:	dec    ebp
  40d6a3:	adc    edx,DWORD PTR [esi-0x71]
  40d6a6:	inc    eax
  40d6a7:	xchg   ebp,eax
  40d6a8:	sbb    al,0x99
  40d6aa:	outs   dx,BYTE PTR ds:[esi]
  40d6ab:	js     0x40d71e
  40d6ad:	or     bl,BYTE PTR [ebx]
  40d6af:	fcomp  DWORD PTR [eax]
  40d6b1:	inc    eax
  40d6b2:	dec    esp
  40d6b3:	jb     0x40d716
  40d6b5:	sbb    ch,BYTE PTR [edi]
  40d6b7:	mov    al,ds:0x8170c8d7
  40d6bc:	scas   eax,DWORD PTR es:[edi]
  40d6bd:	test   DWORD PTR [edx-0x7e],edx
  40d6c0:	pushf  
  40d6c1:	stc    
  40d6c2:	ficom  DWORD PTR [edx]
  40d6c4:	xor    al,0x2f
  40d6c6:	push   0x60a52296
  40d6cb:	aas    
  40d6cc:	and    dl,BYTE PTR [edi+0x6d]
  40d6cf:	xor    BYTE PTR [eax*1+0x126ee2e2],ch
  40d6d6:	xchg   edx,eax
  40d6d7:	push   esp
  40d6d8:	aam    0x26
  40d6da:	daa    
  40d6db:	mov    ds:0x2c9bb56b,eax
  40d6e0:	pop    esp
  40d6e1:	(bad)  
  40d6e2:	stos   DWORD PTR es:[edi],eax
  40d6e3:	pop    es
  40d6e4:	(bad)  
  40d6e5:	mov    WORD PTR [ebp-0x7c5e759f],?
  40d6eb:	(bad)
  40d6ef:	leave  
  40d6f0:	test   eax,0x9fae2066
  40d6f5:	loopne 0x40d6aa
  40d6f7:	push   eax
  40d6f8:	lods   al,BYTE PTR ds:[esi]
  40d6f9:	mov    fs,WORD PTR [eax-0x363174ed]
  40d6ff:	iret   
  40d700:	pop    edi
  40d701:	pop    ecx
  40d702:	adc    eax,0xb95aa6a9
  40d707:	outs   dx,BYTE PTR ds:[esi]
  40d708:	in     al,0x69
  40d70a:	adc    al,0x44
  40d70c:	push   0x3735a3a8
  40d711:	lods   al,BYTE PTR ds:[esi]
  40d712:	dec    eax
  40d713:	mov    ebx,0x5da4ddef
  40d718:	adc    al,0xd
  40d71a:	daa    
  40d71b:	test   DWORD PTR [ecx+0x3b05c575],edx
  40d721:	jl     0x40d6de
  40d723:	and    al,0xf3
  40d725:	leave  
  40d726:	or     bl,BYTE PTR [ebx]
  40d728:	call   0xdbb57040
  40d72d:	int3   
  40d72e:	push   edi
  40d72f:	pop    ebx
  40d730:	push   ecx
  40d731:	xor    al,BYTE PTR [esi]
  40d733:	loopne 0x40d6e1
  40d735:	cmp    eax,0xf027ee1
  40d73a:	les    edi,FWORD PTR [ecx]
  40d73c:	adc    DWORD PTR [edx],0x7c
  40d73f:	xor    DWORD PTR [edi],esp
  40d741:	mov    al,ch
  40d743:	fiadd  DWORD PTR [edx-0x1a]
  40d746:	xor    BYTE PTR [eax-0x2519af8e],bl
  40d74c:	push   eax
  40d74d:	fldenv [ecx]
  40d74f:	das    
  40d750:	aad    0xe0
  40d752:	jmp    0x40d76e
  40d754:	and    al,0xff
  40d756:	adc    al,0xbc
  40d758:	jmp    ecx
  40d75a:	xchg   edi,eax
  40d75b:	aaa    
  40d75c:	mov    al,ds:0xc16809b3
  40d761:	mov    dl,0xf5
  40d763:	cvtdq2ps xmm5,XMMWORD PTR [ebp+0x55]
  40d767:	add    eax,edx
  40d769:	in     eax,dx
  40d76a:	push   ss
  40d76b:	ficom  DWORD PTR [eax]
  40d76d:	push   eax
  40d76e:	test   al,0x27
  40d770:	fldcw  WORD PTR [eax]
  40d772:	or     edx,DWORD PTR [edi+0x3e]
  40d775:	hlt    
  40d776:	dec    edx
  40d777:	push   cs
  40d778:	sti    
  40d779:	in     al,0x33
  40d77b:	jbe    0x40d746
  40d77d:	loop   0x40d7a4
  40d77f:	jb     0x40d791
  40d781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d782:	in     eax,0xba
  40d784:	inc    esp
  40d785:	adc    DWORD PTR [ebp+0x2d8d5690],edx
  40d78b:	ret    0xd669
  40d78e:	push   cs
  40d78f:	adc    al,0xf8
  40d791:	fimul  WORD PTR [eax+edi*1-0x2c]
  40d795:	mov    ds,WORD PTR [edx+0x69904bb0]
  40d79b:	dec    edi
  40d79c:	adc    edx,DWORD PTR [esp+ebp*2-0x45]
  40d7a0:	mov    ch,BYTE PTR [edx]
  40d7a2:	mov    gs:0x8182aae5,eax
  40d7a8:	xchg   ebx,eax
  40d7a9:	ins    DWORD PTR es:[edi],dx
  40d7aa:	fstp   TBYTE PTR [esp+eax*4-0x4b]
  40d7ae:	cmp    edi,DWORD PTR [ebp-0x7e]
  40d7b1:	push   esp
  40d7b2:	cs jne 0x40d749
  40d7b5:	sub    BYTE PTR [edx],bh
  40d7b7:	sub    DWORD PTR [edx],0x3d
  40d7ba:	inc    ecx
  40d7bb:	mov    esi,0x3328a719
  40d7c0:	sub    al,0xed
  40d7c2:	jl     0x40d78e
  40d7c4:	test   BYTE PTR [ebp*1-0x47b88deb],0x94
  40d7cc:	loopne 0x40d7d7
  40d7ce:	mov    ebx,ebx
  40d7d0:	mov    esi,0xc6e4e9f
  40d7d5:	mov    BYTE PTR [eax-0x77],al
  40d7d8:	mov    ecx,edx
  40d7da:	jne    0x40d84d
  40d7dc:	int    0xf1
  40d7de:	sub    eax,0xb858e86a
  40d7e3:	cmp    eax,0xa8563988
  40d7e8:	and    ch,0xd1
  40d7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ec:	dec    esi
  40d7ed:	out    dx,eax
  40d7ee:	push   ss
  40d7ef:	xchg   ebx,eax
  40d7f0:	mov    eax,0xd60b8270
  40d7f5:	add    eax,0x2eaabc57
  40d7fa:	push   cs
  40d7fb:	inc    edi
  40d7fc:	mov    dl,0x7a
  40d7fe:	pop    ds
  40d7ff:	and    dh,ah
  40d801:	pop    ebp
  40d802:	jg     0x40d7a6
  40d804:	mov    dh,0x62
  40d806:	lahf   
  40d807:	pop    es
  40d808:	cs mov edi,0x404abb5b
  40d80e:	lock ret 0xe815
  40d812:	popf   
  40d813:	fwait
  40d814:	cmc    
  40d815:	cli    
  40d816:	sbb    cl,al
  40d818:	pop    ds
  40d819:	jb     0x40d864
  40d81b:	mov    cs,eax
  40d81d:	xchg   edi,eax
  40d81e:	ss daa 
  40d820:	ins    BYTE PTR es:[edi],dx
  40d821:	xor    esi,ebp
  40d823:	or     dl,0x58
  40d826:	xchg   ebx,eax
  40d827:	clc    
  40d828:	pop    edx
  40d829:	add    esp,eax
  40d82b:	call   0x2e22:0xefad0296
  40d832:	xchg   esp,eax
  40d833:	sub    eax,0x88fcdf47
  40d838:	sbb    eax,0xc4d96247
  40d83d:	add    al,0x1a
  40d83f:	jge    0x40d80b
  40d841:	jmp    0x702b2b4f
  40d846:	push   es
  40d847:	int    0x63
  40d849:	test   DWORD PTR [esi],edi
  40d84b:	aaa    
  40d84c:	nop
  40d84d:	lahf   
  40d84e:	ret    0x4443
  40d851:	(bad)
  40d854:	ror    dh,1
  40d856:	mov    WORD PTR [eax+0x51d9fcfd],ss
  40d85c:	mov    dl,0x74
  40d85e:	fstp   TBYTE PTR [edx+0x270ef93e]
  40d864:	adc    eax,0x43ba9817
  40d869:	push   esp
  40d86a:	or     ecx,ebp
  40d86c:	jmp    0x176ba7ba
  40d871:	into   
  40d872:	push   eax
  40d873:	popf   
  40d874:	mov    ecx,0xe2c6242e
  40d879:	jns    0x40d862
  40d87b:	xchg   ebx,eax
  40d87c:	adc    al,0xb6
  40d87e:	xor    bl,BYTE PTR [edi+0xc]
  40d881:	int3   
  40d882:	add    ecx,DWORD PTR [edx]
  40d884:	ret    0x87ec
  40d887:	in     eax,0xa4
  40d889:	adc    DWORD PTR [ebx],0xfffffff5
  40d88c:	aas    
  40d88d:	mov    ecx,0xf88b2e8e
  40d892:	xor    eax,0x9ebd1551
  40d897:	jae    0x40d8ea
  40d899:	mov    WORD PTR [esp+edx*4-0x32],cs
  40d89d:	jns    0x40d8cd
  40d89f:	or     edi,esp
  40d8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8a2:	xor    BYTE PTR [edx+0x56],cl
  40d8a5:	or     al,0x91
  40d8a7:	jmp    0xe18d:0x6903112b
  40d8ae:	mov    ecx,0xed26e0cb
  40d8b3:	sub    BYTE PTR [eax],cl
  40d8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b6:	(bad)  [esi]
  40d8b8:	mov    edi,0xd584afba
  40d8bd:	call   0x72e69314
  40d8c2:	es in  eax,0xac
  40d8c5:	or     cl,BYTE PTR [edi-0x6d]
  40d8c8:	mov    ebp,0x5ef49dc2
  40d8cd:	cmp    BYTE PTR [esp+ecx*8+0x99d141c],dh
  40d8d4:	retf   
  40d8d5:	(bad)  
  40d8d6:	fcom   DWORD PTR [ecx-0x67f37344]
  40d8dc:	repnz ss inc edi
  40d8df:	(bad)  
  40d8e1:	fsubr  QWORD PTR [esi]
  40d8e3:	cmp    edx,DWORD PTR [ebx+esi*2]
  40d8e6:	imul   ebp,DWORD PTR ds:0xe0c528f1,0xffffffda
  40d8ed:	jecxz  0x40d91c
  40d8ef:	aam    0x73
  40d8f1:	leave  
  40d8f2:	and    esp,eax
  40d8f4:	out    0x3e,eax
  40d8f6:	fidivr DWORD PTR [edx-0x194a0176]
  40d8fc:	push   0xfffffff2
  40d8fe:	das    
  40d8ff:	dec    ecx
  40d900:	mov    ebp,0xeb1da317
  40d905:	ret    0xf178
  40d908:	jmp    0xdb99afb8
  40d90d:	ret    
  40d90e:	adc    eax,0xabb2f4b3
  40d913:	xor    edi,DWORD PTR [ebx]
  40d915:	and    esi,DWORD PTR [ebp-0x6b]
  40d918:	(bad)  
  40d919:	and    eax,0x56daba6c
  40d91e:	in     al,dx
  40d91f:	mov    ds:0x30a6516f,al
  40d924:	xchg   edi,eax
  40d925:	mov    dh,0x26
  40d927:	ret    
  40d928:	retf   0x42c0
  40d92b:	out    0x2e,eax
  40d92d:	or     ebp,ecx
  40d92f:	mov    BYTE PTR [ebp-0x8],bh
  40d932:	sub    eax,0xbc0d2170
  40d937:	and    BYTE PTR [eax-0x72857ce],0xef
  40d93e:	mov    bl,0xc1
  40d940:	loopne 0x40d91c
  40d942:	jge    0x40d96b
  40d944:	in     eax,0xd7
  40d946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d947:	ret    
  40d948:	es adc eax,0xfa92c567
  40d94e:	jbe    0x40d8ee
  40d950:	or     al,0x34
  40d952:	or     esp,DWORD PTR [esp+edi*4]
  40d955:	push   edx
  40d956:	setge  BYTE PTR [ecx-0x495d343f]
  40d95d:	dec    eax
  40d95e:	jb     0x40d9cf
  40d960:	and    esp,eax
  40d962:	xor    esi,ebx
  40d964:	adc    BYTE PTR [ecx+0x6],0xed
  40d968:	ret    
  40d969:	mov    WORD PTR [ebx+0x2848cd7b],es
  40d96f:	cmc    
  40d970:	cld    
  40d971:	push   ebx
  40d972:	sti    
  40d973:	mov    dl,0xf
  40d975:	jno    0x40d934
  40d977:	push   esp
  40d978:	sub    esp,eax
  40d97a:	jp     0x40d96d
  40d97c:	scas   eax,DWORD PTR es:[edi]
  40d97d:	test   DWORD PTR [edx],ebx
  40d97f:	xlat   BYTE PTR ds:[ebx]
  40d980:	sub    BYTE PTR [eax+eax*4-0x50],0xfd
  40d985:	ffree  st(2)
  40d987:	xor    eax,0xfba75870
  40d98c:	xor    al,0x6c
  40d98e:	xchg   ebx,eax
  40d98f:	sub    al,0xb6
  40d991:	jg     0x40d9f6
  40d993:	adc    al,0x29
  40d995:	jmp    0xd932:0x1718907
  40d99c:	sbb    ch,dh
  40d99e:	and    ch,BYTE PTR [eax+0x18]
  40d9a1:	(bad)  
  40d9a2:	fiadd  DWORD PTR [edx]
  40d9a4:	das    
  40d9a5:	push   edx
  40d9a6:	aaa    
  40d9a7:	mov    ebp,0x8e5d01b3
  40d9ac:	mov    BYTE PTR [esp+ebp*8],ch
  40d9af:	ficomp DWORD PTR [esi]
  40d9b1:	cmp    DWORD PTR [ebx],ebp
  40d9b3:	(bad)  
  40d9b4:	out    dx,eax
  40d9b5:	jge    0x40d954
  40d9b7:	mov    ebp,0x5b7b08c0
  40d9bc:	mov    bl,0xda
  40d9be:	popa   
  40d9bf:	cli    
  40d9c0:	ror    BYTE PTR [edi-0xa6b99c9],0x5f
  40d9c7:	jbe    0x40d961
  40d9c9:	sub    DWORD PTR [ebp+0x12],ebp
  40d9cc:	push   es
  40d9cd:	inc    edx
  40d9ce:	sub    ebx,ecx
  40d9d0:	stc    
  40d9d1:	sub    eax,0x21dd4926
  40d9d6:	arpl   WORD PTR ds:0x5d0618b6,sp
  40d9dc:	push   ebx
  40d9dd:	jge    0x40d9b7
  40d9df:	jg     0x40da36
  40d9e1:	scas   eax,DWORD PTR es:[edi]
  40d9e2:	push   ebx
  40d9e3:	jecxz  0x40da05
  40d9e5:	mov    edx,0xbb404475
  40d9ea:	mov    ds:0xe0f16204,eax
  40d9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f0:	add    dh,bh
  40d9f2:	popf   
  40d9f3:	xor    bl,al
  40d9f5:	cmp    BYTE PTR [ecx-0x1526de6],ah
  40d9fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9fc:	dec    ebp
  40d9fd:	(bad)  
  40d9fe:	pop    edx
  40d9ff:	ror    BYTE PTR ds:[ebp-0x1d956160],0x1f
  40da07:	lea    ebp,[eax+0x3a]
  40da0a:	fsubr  DWORD PTR [edx-0x6192192e]
  40da10:	cs adc eax,0x9999e7aa
  40da16:	shl    BYTE PTR [eax],cl
  40da18:	outs   dx,DWORD PTR ds:[esi]
  40da19:	inc    eax
  40da1a:	jmp    0x8520009d
  40da1f:	sbb    DWORD PTR [eax],edx
  40da21:	jo     0x40d9f3
  40da23:	mov    ds:0x8af90886,al
  40da28:	xchg   ebp,eax
  40da29:	outs   dx,DWORD PTR ds:[esi]
  40da2a:	sbb    esi,0xffffff9c
  40da2d:	in     al,dx
  40da2e:	adc    eax,DWORD PTR [ebp+0x170bd124]
  40da34:	mov    WORD PTR [esi],fs
  40da36:	aas    
  40da37:	inc    ebx
  40da38:	iret   
  40da39:	dec    ecx
  40da3a:	mov    eax,0x53d993ea
  40da3f:	mov    edi,0xd0938ba3
  40da44:	(bad)
  40da47:	sub    eax,0x24f32760
  40da4c:	add    dl,BYTE PTR [ecx+0x7a31a6f2]
  40da52:	rcl    BYTE PTR [esi+0x34ade4d3],1
  40da58:	imul   ebp,DWORD PTR [eax-0xc],0x48
  40da5c:	jnp    0x40dac1
  40da5e:	inc    ecx
  40da5f:	dec    edi
  40da60:	or     ebp,DWORD PTR [ebp+0x504d13b6]
  40da66:	adc    BYTE PTR [eax],ah
  40da68:	cmc    
  40da69:	inc    edx
  40da6a:	push   esi
  40da6b:	mov    dl,0x51
  40da6d:	js     0x40da72
  40da6f:	sbb    al,0x5
  40da71:	in     eax,0xbd
  40da73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da74:	dec    edx
  40da75:	inc    esi
  40da76:	retf   0xfb78
  40da79:	sbb    BYTE PTR [ebp-0x28e74ca3],0x6d
  40da80:	fcmovbe st,st(5)
  40da82:	adc    BYTE PTR [ebp+0x1f],bl
  40da85:	mov    cs,WORD PTR [eax]
  40da87:	and    eax,0xb4262e29
  40da8c:	push   ss
  40da8d:	mov    edx,0x302237e1
  40da92:	push   0x1e
  40da94:	repz loopne 0x40da5d
  40da97:	repnz cwde 
  40da99:	jle    0x40da8b
  40da9b:	jmp    0x40daf4
  40da9d:	out    dx,al
  40da9e:	sbb    al,0x25
  40daa0:	call   0x4506:0x89163e68
  40daa7:	xlat   BYTE PTR ds:[ebx]
  40daa8:	cli    
  40daa9:	xchg   edx,eax
  40daaa:	into   
  40daab:	xor    BYTE PTR [edi],al
  40daad:	adc    esi,ebx
  40daaf:	in     eax,0x7
  40dab1:	pop    ecx
  40dab2:	pop    eax
  40dab3:	sub    dh,BYTE PTR [eax-0x16660f85]
  40dab9:	loope  0x40da6c
  40dabb:	icebp  
  40dabc:	xchg   bl,bh
  40dabe:	xor    ebx,DWORD PTR [eax+0x5a7e40df]
  40dac4:	sub    ah,BYTE PTR [ecx+0x79]
  40dac7:	mov    esp,0xb1e12d2
  40dacc:	es push ds
  40dace:	repnz scas al,BYTE PTR es:[edi]
  40dad0:	in     eax,0x9e
  40dad2:	popf   
  40dad3:	mov    bl,0x66
  40dad5:	jne    0x40db40
  40dad7:	stos   BYTE PTR es:[edi],al
  40dad8:	ret    
  40dad9:	pushf  
  40dada:	test   edi,ecx
  40dadc:	je     0x40db16
  40dade:	or     al,0x7d
  40dae0:	call   0xe8b2:0x4c6b0ae1
  40dae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae8:	pop    gs
  40daea:	loopne 0x40db39
  40daec:	jg     0x40dae0
  40daee:	loope  0x40dab3
  40daf0:	push   0x8922bdce
  40daf5:	xchg   ecx,eax
  40daf6:	cmp    ebp,DWORD PTR [esi-0x1]
  40daf9:	add    ecx,DWORD PTR [esi-0x5c4f4925]
  40daff:	push   ebx
  40db00:	mov    al,BYTE PTR [ebx+0x5179c82c]
  40db06:	out    0xc3,al
  40db08:	xlat   BYTE PTR ds:[ebx]
  40db09:	fwait
  40db0a:	push   cs
  40db0b:	adc    eax,edx
  40db0d:	push   ds
  40db0e:	xchg   ebx,eax
  40db0f:	sub    al,al
  40db11:	(bad)  
  40db12:	mov    cl,0xc4
  40db14:	inc    esi
  40db15:	mov    dl,0x5b
  40db17:	mov    ebp,0x86c353f
  40db1c:	ror    BYTE PTR [eax-0x6b],cl
  40db1f:	push   ds
  40db20:	lods   al,BYTE PTR ds:[esi]
  40db21:	out    0x4d,eax
  40db23:	add    BYTE PTR [ebx-0x67bb5fca],0xc3
  40db2a:	adc    bh,bl
  40db2c:	cmp    DWORD PTR [eax+0x6b04dfe2],edx
  40db32:	stos   DWORD PTR es:[edi],eax
  40db33:	pop    ecx
  40db34:	mov    cl,BYTE PTR ss:[eax-0x18]
  40db38:	aad    0xc3
  40db3a:	xchg   ebx,eax
  40db3b:	push   cs
  40db3c:	jmp    0xf44b1efe
  40db41:	cmp    DWORD PTR [esi],ebp
  40db43:	xor    BYTE PTR [ebx-0x38876457],cl
  40db49:	pop    esp
  40db4a:	and    BYTE PTR [eax+ebx*1+0x67],dh
  40db4e:	push   ebx
  40db4f:	addr16 sti 
  40db51:	xor    al,0x45
  40db53:	or     dh,BYTE PTR [ebx-0x30]
  40db56:	and    DWORD PTR ds:0xbf86c9c3,ebp
  40db5c:	js     0x40dba7
  40db5e:	xor    edx,ebx
  40db60:	jle    0x40daff
  40db62:	repz mov ecx,0x89e340fa
  40db68:	adc    al,0xc7
  40db6a:	fcomp  QWORD PTR [eax+0x25]
  40db6d:	adc    eax,0x2a96ed13
  40db72:	adc    al,0x4
  40db74:	iret   
  40db75:	jbe    0x40db2d
  40db77:	push   0x5822ddad
  40db7c:	jmp    0x7704:0xb7f58016
  40db83:	lea    esi,[ecx+ebp*1-0x58]
  40db87:	mov    cl,dl
  40db89:	je     0x40dc01
  40db8b:	fsub   DWORD PTR [esi+0x1b9f6dde]
  40db91:	push   es
  40db92:	inc    ecx
  40db93:	sahf   
  40db94:	das    
  40db95:	fcom   DWORD PTR [ecx-0x66]
  40db98:	jl     0x40db85
  40db9a:	aam    0x63
  40db9c:	mov    WORD PTR [ebp-0x58],es
  40db9f:	cmp    al,0x50
  40dba1:	lods   al,BYTE PTR ds:[esi]
  40dba2:	pushf  
  40dba3:	sub    eax,0xdb318e63
  40dba8:	mov    ebp,?
  40dbaa:	mov    eax,ds:0x3456253f
  40dbaf:	out    dx,al
  40dbb0:	stc    
  40dbb1:	fs pop esp
  40dbb3:	cmp    BYTE PTR [ecx+0x30],cl
  40dbb6:	and    edi,DWORD PTR [esi+0x39ebf096]
  40dbbc:	or     eax,0xbaac0cd3
  40dbc1:	fist   WORD PTR [edx-0x21]
  40dbc4:	and    dl,cl
  40dbc6:	pop    ecx
  40dbc7:	push   ds
  40dbc8:	mov    dh,0xf7
  40dbca:	dec    ebx
  40dbcb:	leave  
  40dbcc:	inc    edx
  40dbcd:	push   cs
  40dbce:	(bad)  
  40dbcf:	push   0xcdbffb0c
  40dbd4:	inc    esi
  40dbd5:	ret    0x9e7e
  40dbd8:	pop    ebx
  40dbd9:	sub    DWORD PTR [esp+eiz*8],0xffffff8c
  40dbdd:	mov    ecx,0x42013ec8
  40dbe2:	or     DWORD PTR [esi-0x45dd18ce],0xbae14f7d
  40dbec:	sub    ch,BYTE PTR [esi+eax*2+0x72]
  40dbf0:	mov    ecx,0x81d272e0
  40dbf5:	cmp    al,0xfb
  40dbf7:	scas   al,BYTE PTR es:[edi]
  40dbf8:	inc    DWORD PTR [ecx]
  40dbfa:	cdq    
  40dbfb:	mov    DWORD PTR [esi-0x49c48ca9],edx
  40dc01:	sahf   
  40dc02:	add    al,0x52
  40dc04:	lods   eax,DWORD PTR ds:[esi]
  40dc05:	xchg   edx,eax
  40dc06:	sbb    BYTE PTR [ebp-0x4724109d],0xf8
  40dc0d:	sbb    BYTE PTR [edx],ch
  40dc0f:	aas    
  40dc10:	jp     0x40dbca
  40dc12:	imul   ebx,DWORD PTR ds:0x679c78ba,0xffffffa0
  40dc19:	or     al,0x7d
  40dc1b:	sbb    ebp,ebx
  40dc1d:	mov    ebx,0xa353401f
  40dc22:	sbb    al,0xc0
  40dc24:	cmp    ebp,DWORD PTR [edx+0x3b395c1]
  40dc2a:	xchg   BYTE PTR [esi],ah
  40dc2c:	inc    edi
  40dc2d:	stos   BYTE PTR es:[edi],al
  40dc2e:	(bad)  
  40dc2f:	and    DWORD PTR [ebx],esp
  40dc31:	inc    ebx
  40dc32:	jb     0x40dc0c
  40dc34:	pop    edx
  40dc35:	xchg   esp,eax
  40dc36:	fadd   QWORD PTR [ebp-0x5]
  40dc39:	adc    al,0xa2
  40dc3b:	push   ss
  40dc3c:	pop    edx
  40dc3d:	jbe    0x40dca0
  40dc3f:	popa   
  40dc40:	push   ecx
  40dc41:	or     al,0x9f
  40dc43:	pop    esi
  40dc44:	sbb    al,BYTE PTR [ebx]
  40dc46:	imul   ecx,DWORD PTR [eax],0x6cad1dd1
  40dc4c:	push   ss
  40dc4d:	or     eax,0x5a7f240c
  40dc52:	push   0xf80edf84
  40dc57:	dec    esi
  40dc58:	dec    ebp
  40dc59:	pop    ebx
  40dc5a:	and    ch,BYTE PTR [ebx+0x65b0a874]
  40dc60:	shl    BYTE PTR ds:0xe923ca45,cl
  40dc66:	imul   edi,DWORD PTR [eax+0x27],0xe
  40dc6a:	repz adc cl,BYTE PTR [ecx-0x5e]
  40dc6e:	out    dx,eax
  40dc6f:	ret    0x3a9b
  40dc72:	(bad)  
  40dc74:	mov    bh,0xce
  40dc76:	adc    eax,0x1ee6cdf4
  40dc7b:	gs stos BYTE PTR es:[edi],al
  40dc7d:	out    0xce,eax
  40dc7f:	jmp    0x40dc16
  40dc81:	and    ebx,edx
  40dc83:	cli    
  40dc84:	cwde   
  40dc85:	jmp    0x40dc4e
  40dc87:	mov    ss,esi
  40dc89:	aad    0x5
  40dc8b:	imul   esp,DWORD PTR [ebp-0x57c714c5],0xffffff8d
  40dc92:	adc    al,0xb9
  40dc94:	mov    eax,0x72377476
  40dc99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc9a:	out    dx,al
  40dc9b:	aad    0x8a
  40dc9d:	mov    al,0xe1
  40dc9f:	xchg   ebp,eax
  40dca0:	xchg   ebx,eax
  40dca1:	lock mov edx,0x121d0f6
  40dca7:	mov    eax,ds:0x4f97bb06
  40dcac:	nop
  40dcad:	push   esp
  40dcae:	rcl    BYTE PTR [ecx-0x338dcd23],cl
  40dcb4:	or     BYTE PTR [edi+0x8],bl
  40dcb7:	sub    DWORD PTR [edi-0x12b01725],0x7ba733e6
  40dcc1:	sbb    eax,0x2ff99cf
  40dcc6:	jge    0x40dcd1
  40dcc8:	fs pushf 
  40dcca:	mov    ds:0x1445ac48,eax
  40dccf:	inc    esi
  40dcd0:	cmp    bl,BYTE PTR [ecx-0x21]
  40dcd3:	ror    DWORD PTR [edx],1
  40dcd5:	add    BYTE PTR [eax+esi*1-0x4c],ah
  40dcd9:	push   ds
  40dcda:	ja     0x40dd1a
  40dcdc:	mov    ah,0x54
  40dcde:	and    ch,BYTE PTR [edi+0x39]
  40dce1:	push   0xffffffba
  40dce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce4:	and    al,0x92
  40dce6:	imul   DWORD PTR [edx]
  40dce8:	pushf  
  40dce9:	cmp    ch,BYTE PTR [edi+ebx*4+0x5a051881]
  40dcf0:	add    eax,edi
  40dcf2:	popf   
  40dcf3:	lds    esi,FWORD PTR [edi-0x6390b448]
  40dcf9:	dec    BYTE PTR [esp+edi*4-0x56334717]
  40dd00:	jno    0x40dcf8
  40dd02:	mov    esp,0xa4240a59
  40dd07:	fist   DWORD PTR [ecx-0x59]
  40dd0a:	pop    ebx
  40dd0b:	xchg   ecx,eax
  40dd0c:	retf   0x50a9
  40dd0f:	mov    cl,0xc5
  40dd11:	jle    0x40dd79
  40dd13:	push   0x51
  40dd15:	push   ecx
  40dd16:	jae    0x40dd3b
  40dd18:	cdq    
  40dd19:	or     eax,0x618a16e2
  40dd1e:	test   DWORD PTR ds:0xd9268b97,0x42a59bf3
  40dd28:	xchg   ebp,eax
  40dd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd2a:	test   DWORD PTR [ebx],ebp
  40dd2c:	jg     0x40dd99
  40dd2e:	retf   
  40dd2f:	dec    edi
  40dd30:	sbb    ecx,ebx
  40dd32:	test   BYTE PTR [ecx+edx*1-0x7f],dh
  40dd36:	jno    0x40dcd0
  40dd38:	lds    ebp,FWORD PTR [ecx]
  40dd3a:	dec    ebp
  40dd3b:	int    0x69
  40dd3d:	mov    edx,0x1d7e3ee
  40dd42:	repnz or al,BYTE PTR [edx+0x2bf69e0e]
  40dd49:	mov    esi,0x51e6d1bd
  40dd4e:	dec    ebx
  40dd4f:	push   0x4bc5bc8b
  40dd54:	sbb    bh,ch
  40dd56:	inc    ebp
  40dd57:	add    al,BYTE PTR [ecx]
  40dd59:	mov    BYTE PTR [ebx+0x6d],bl
  40dd5c:	xor    dh,bh
  40dd5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd5f:	cmc    
  40dd60:	idiv   edi
  40dd62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd63:	outs   dx,BYTE PTR ds:[esi]
  40dd64:	stos   BYTE PTR es:[edi],al
  40dd65:	pop    esi
  40dd66:	sbb    ah,BYTE PTR [ebx-0x39084d14]
  40dd6c:	sub    esi,DWORD PTR [ecx+0x14]
  40dd6f:	cdq    
  40dd70:	sbb    BYTE PTR ss:[ebp-0x8033f50],ch
  40dd77:	test   BYTE PTR [edi+eiz*8+0x40],dh
  40dd7b:	in     al,dx
  40dd7c:	push   cs
  40dd7d:	mov    ecx,0x319dae3a
  40dd82:	mov    esi,0x73224fde
  40dd87:	sti    
  40dd88:	(bad)  
  40dd89:	cwde   
  40dd8a:	mov    ebx,0xf43bd1cf
  40dd8f:	shr    BYTE PTR [edx],cl
  40dd91:	shl    BYTE PTR [esi-0x346e6cc6],cl
  40dd97:	xchg   esp,eax
  40dd98:	or     al,0x89
  40dd9a:	mov    dl,BYTE PTR [edx]
  40dd9c:	xchg   ebx,eax
  40dd9d:	mov    esp,0x66118fdb
  40dda2:	cwde   
  40dda3:	push   ebp
  40dda4:	mov    ebx,0xae879008
  40dda9:	push   0xffffff84
  40ddab:	cmp    DWORD PTR [ecx],ecx
  40ddad:	sub    BYTE PTR [esi+0x46],dl
  40ddb0:	mov    ecx,0xaf0b074e
  40ddb5:	nop
  40ddb6:	mov    bh,dh
  40ddb8:	es or  DWORD PTR fs:[esi+0x6554a304],0x784b03e9
  40ddc4:	jge    0x40de0a
  40ddc6:	mov    dh,0xd6
  40ddc8:	xor    edi,DWORD PTR [ebp-0x77]
  40ddcb:	js     0x40ddd5
  40ddcd:	xor    al,0x79
  40ddcf:	dec    ecx
  40ddd0:	mov    edi,0x84dd74
  40ddd5:	inc    ecx
  40ddd6:	xchg   esp,eax
  40ddd7:	ins    BYTE PTR es:[edi],dx
  40ddd8:	inc    edx
  40ddd9:	add    eax,0xfc008cec
  40ddde:	arpl   WORD PTR es:[edx-0x37],dx
  40dde2:	dec    ebx
  40dde3:	pusha  
  40dde4:	popf   
  40dde5:	shr    BYTE PTR [esi+eax*1+0x42c5f79b],cl
  40ddec:	cli    
  40dded:	adc    dh,BYTE PTR [ebx-0x40]
  40ddf0:	cmp    DWORD PTR [ecx+0x54],esi
  40ddf3:	push   es
  40ddf4:	in     eax,0x14
  40ddf6:	mov    cs,WORD PTR [esi-0x3d798d77]
  40ddfc:	not    ecx
  40ddfe:	nop
  40ddff:	(bad)  
  40de00:	push   ebp
  40de01:	mov    ebx,0xdafa266e
  40de06:	mov    esi,0x4add7d49
  40de0b:	in     al,0x65
  40de0d:	and    eax,0xb4b67685
  40de12:	pusha  
  40de13:	aas    
  40de14:	loope  0x40de54
  40de16:	(bad)  
  40de17:	outs   dx,DWORD PTR ds:[esi]
  40de18:	fidivr WORD PTR [ebp+0x4da4807a]
  40de1e:	fdiv   QWORD PTR [edx+0x4e971d9a]
  40de24:	push   esi
  40de25:	or     eax,DWORD PTR [ebx-0x7eca9a3a]
  40de2b:	and    eax,0xfbab9acc
  40de30:	mov    dl,0xa9
  40de32:	(bad)  
  40de33:	or     eax,0xb0e61136
  40de38:	or     BYTE PTR [ebx+eiz*4+0x3f21b916],dl
  40de3f:	xchg   ebp,eax
  40de40:	adc    al,0x64
  40de42:	dec    eax
  40de43:	mov    cl,0xe7
  40de45:	jb     0x40de01
  40de47:	jns    0x40deb5
  40de49:	sti    
  40de4a:	sahf   
  40de4b:	bound  esp,QWORD PTR [esp+edx*1]
  40de4e:	or     BYTE PTR [ecx],dl
  40de50:	inc    ebx
  40de51:	push   ebx
  40de52:	or     esp,DWORD PTR [ecx]
  40de54:	pusha  
  40de55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de56:	and    edx,DWORD PTR [ebx-0x125a2d5f]
  40de5c:	jnp    0x40de80
  40de5e:	dec    esp
  40de5f:	outs   dx,BYTE PTR ds:[esi]
  40de60:	xor    DWORD PTR [ebx],0x14
  40de63:	arpl   WORD PTR [ebp+0x53],ax
  40de66:	fdiv   QWORD PTR [esi-0x736cc44e]
  40de6c:	xchg   BYTE PTR [edi],ah
  40de6e:	ja     0x40de5a
  40de70:	dec    esi
  40de71:	push   ss
  40de72:	cdq    
  40de73:	mov    BYTE PTR [edi+0x4972071b],cl
  40de79:	lods   al,BYTE PTR ds:[esi]
  40de7a:	cwde   
  40de7b:	mov    esp,0xc3d00131
  40de80:	popf   
  40de81:	xor    DWORD PTR [ecx-0x78da0b9e],0x74
  40de88:	dec    edi
  40de89:	mov    BYTE PTR [eax-0x46c96351],dh
  40de8f:	sub    cl,BYTE PTR [ecx+eax*4+0x7]
  40de93:	add    bl,BYTE PTR [ebp-0x2bd05029]
  40de99:	inc    ecx
  40de9a:	jle    0x40de81
  40de9c:	cmp    BYTE PTR [ebx],ah
  40de9e:	lods   eax,DWORD PTR ds:[esi]
  40de9f:	shr    DWORD PTR ds:0x772f4e87,0x2
  40dea6:	fdiv   QWORD PTR [esi]
  40dea8:	fwait
  40dea9:	lds    edi,FWORD PTR [eax]
  40deab:	clc    
  40deac:	inc    esp
  40dead:	scas   eax,DWORD PTR es:[edi]
  40deae:	mov    BYTE PTR [edi-0x66432997],ch
  40deb4:	call   0xa7c25e27
  40deb9:	retf   0x52dc
  40debc:	lods   eax,DWORD PTR ds:[esi]
  40debd:	ins    DWORD PTR es:[edi],dx
  40debe:	pop    es
  40debf:	push   es
  40dec0:	fdiv   DWORD PTR [edx+0x64]
  40dec3:	jmp    0xef72:0xa388f55f
  40deca:	push   0x3c
  40decc:	xchg   edx,eax
  40decd:	xchg   ebx,eax
  40dece:	mov    bl,0xb3
  40ded0:	cmp    ebp,DWORD PTR [eax]
  40ded2:	mov    ah,0x99
  40ded4:	cdq    
  40ded5:	push   0x25
  40ded7:	xchg   bh,dh
  40ded9:	pop    ss
  40deda:	fdivr  st,st(0)
  40dedc:	lahf   
  40dedd:	test   eax,0x9b9f7c37
  40dee2:	sbb    eax,0xd7c6a901
  40dee7:	mov    ?,WORD PTR [ecx-0x25]
  40deea:	xchg   edx,eax
  40deeb:	xor    al,0xef
  40deed:	xchg   ebp,eax
  40deee:	(bad)  
  40deef:	mov    al,ds:0x64c54cb2
  40def4:	push   ds
  40def5:	add    eax,0x91378cb6
  40defa:	daa    
  40defb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40defc:	sbb    eax,0x8fe63620
  40df01:	lods   eax,DWORD PTR ds:[esi]
  40df02:	xor    ch,BYTE PTR [esi]
  40df04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df05:	inc    edi
  40df06:	rol    BYTE PTR [edi+0x62dde650],cl
  40df0c:	clc    
  40df0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df0e:	push   ebx
  40df0f:	xor    ebx,DWORD PTR [edx+0x264b305c]
  40df15:	fild   QWORD PTR [ecx+0x5f]
  40df18:	sbb    BYTE PTR ds:0x79a60b91,dl
  40df1e:	mov    dl,0x98
  40df20:	ret    0xbd43
  40df23:	mov    ebp,0x84671bc8
  40df28:	repz mov esp,0xd2968b7
  40df2e:	sub    dl,0x17
  40df31:	adc    edi,esi
  40df33:	sti    
  40df34:	xlat   BYTE PTR ds:[ebx]
  40df35:	mov    ch,0x4c
  40df37:	sbb    esi,ebp
  40df39:	pop    esi
  40df3a:	push   cs
  40df3b:	add    DWORD PTR fs:[esi],edx
  40df3e:	idiv   BYTE PTR [esi-0x72]
  40df41:	inc    edi
  40df42:	stc    
  40df43:	xor    eax,0xcd74ce5e
  40df48:	or     BYTE PTR [eax-0x73],0xb1
  40df4c:	ss dec esi
  40df4e:	or     al,0xe1
  40df50:	jns    0x40df76
  40df52:	dec    eax
  40df53:	scas   eax,DWORD PTR es:[edi]
  40df54:	(bad)  
  40df55:	aas    
  40df56:	rol    DWORD PTR [eax-0x6f],cl
  40df59:	lods   eax,DWORD PTR ds:[esi]
  40df5a:	xchg   edi,eax
  40df5b:	pop    ebx
  40df5c:	hlt    
  40df5d:	and    BYTE PTR [ebx],ch
  40df5f:	jmp    DWORD PTR [ecx-0x4790de86]
  40df65:	cli    
  40df66:	sbb    dl,BYTE PTR [ecx-0x70]
  40df69:	pop    ecx
  40df6a:	daa    
  40df6b:	pop    ds
  40df6c:	arpl   WORD PTR [ebx-0x7ce56022],bp
  40df72:	(bad)  
  40df73:	jge    0x40dfe8
  40df75:	sub    eax,0x5e96fabd
  40df7a:	mov    WORD PTR [ecx-0x74bb6138],?
  40df80:	fst    QWORD PTR [ebp+0x13]
  40df83:	lods   al,BYTE PTR ds:[esi]
  40df84:	shr    ah,cl
  40df86:	retf   
  40df87:	xor    eax,0x50710f6b
  40df8c:	xchg   BYTE PTR ss:[ebp-0x27],al
  40df90:	adc    ah,bh
  40df92:	call   0x1bc3:0xe8334b20
  40df99:	adc    BYTE PTR ss:[edx],dh
  40df9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df9d:	ret    0x7433
  40dfa0:	adc    al,BYTE PTR [ecx]
  40dfa2:	push   ebx
  40dfa3:	dec    ecx
  40dfa4:	push   ecx
  40dfa5:	test   al,0xad
  40dfa7:	out    0x6d,al
  40dfa9:	mov    dh,0x6d
  40dfab:	or     esi,DWORD PTR [edx-0x380973b]
  40dfb1:	rcr    DWORD PTR [esi-0x68],cl
  40dfb4:	pop    esp
  40dfb5:	sbb    ebx,DWORD PTR [esi-0x66]
  40dfb8:	dec    ecx
  40dfb9:	shr    DWORD PTR [ecx+edx*4-0x56],0x11
  40dfbe:	jle    0x40df91
  40dfc0:	cmp    dl,bl
  40dfc2:	ja     0x40dfaa
  40dfc4:	mov    dh,0xd8
  40dfc6:	jl     0x40dfd3
  40dfc8:	shl    eax,cl
  40dfca:	lds    ecx,FWORD PTR [ecx-0x39]
  40dfcd:	jb     0x40df54
  40dfcf:	lods   al,BYTE PTR ds:[esi]
  40dfd0:	jne    0x40df86
  40dfd2:	jmp    0x20fd039b
  40dfd7:	aaa    
  40dfd8:	xchg   ecx,eax
  40dfd9:	aam    0x12
  40dfdb:	fwait
  40dfdc:	push   cs
  40dfdd:	mov    cl,BYTE PTR [edx]
  40dfdf:	test   BYTE PTR [edx-0x79],ch
  40dfe2:	cmp    BYTE PTR [esi-0x702c3df1],ah
  40dfe8:	icebp  
  40dfe9:	push   0xffffffb4
  40dfeb:	clc    
  40dfec:	hlt    
  40dfed:	pop    ss
  40dfee:	add    BYTE PTR ds:0xbe68da0b,cl
  40dff4:	clc    
  40dff5:	dec    ecx
  40dff6:	scas   eax,DWORD PTR es:[edi]
  40dff7:	sub    al,0x10
  40dff9:	mov    cl,0xb9
  40dffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dffc:	or     al,0x3e
  40dffe:	aam    0x19
  40e000:	or     BYTE PTR [eax+ebp*8],al
  40e003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e004:	ins    BYTE PTR es:[edi],dx
  40e005:	mov    edx,0x1f2690a8
  40e00a:	cld    
  40e00b:	cs retf 0x3cda
  40e00f:	push   eax
  40e010:	xor    al,0x6b
  40e012:	fcomp  QWORD PTR [ebp-0x2443f0df]
  40e018:	fst    DWORD PTR [edx-0x3a714e9]
  40e01e:	and    bh,BYTE PTR [ecx]
  40e020:	mov    dh,ch
  40e022:	into   
  40e023:	xchg   DWORD PTR [edx+0x14faaeed],esi
  40e029:	sub    BYTE PTR [ebp+0x6cb192e1],0x10
  40e030:	xchg   edi,eax
  40e031:	or     cl,BYTE PTR [edi]
  40e033:	loop   0x40e075
  40e035:	mov    eax,0x794e765d
  40e03a:	mov    ebp,0xaf4a75ba
  40e03f:	jl     0x40e02a
  40e041:	mov    ah,0x1b
  40e043:	push   ebx
  40e044:	jnp    0x40e0c5
  40e046:	cmp    BYTE PTR [edx-0x1],0x33
  40e04a:	xchg   DWORD PTR [eax+0x1560d7ee],edx
  40e050:	pop    edx
  40e051:	mov    al,ds:0xa24fe3c5
  40e056:	(bad)  [eax]
  40e058:	dec    edx
  40e059:	retf   
  40e05a:	inc    ecx
  40e05b:	jae    0x40dff2
  40e05d:	fwait
  40e05e:	xchg   bl,al
  40e060:	shl    BYTE PTR [eax],0x91
  40e063:	pop    es
  40e064:	test   eax,0xf60b632f
  40e069:	jmp    FWORD PTR ds:0xec362502
  40e06f:	pop    ebp
  40e070:	xchg   DWORD PTR [edi-0x2439bf9a],eax
  40e076:	mov    ah,0x37
  40e078:	push   edi
  40e079:	ret    
  40e07a:	mov    eax,0x671819ee
  40e07f:	pop    eax
  40e080:	mul    al
  40e082:	stos   DWORD PTR es:[edi],eax
  40e083:	jge    0x40e011
  40e085:	popf   
  40e086:	iret   
  40e087:	xchg   BYTE PTR [ecx+edi*4],bl
  40e08a:	mov    edx,0x12573ec0
  40e08f:	cmp    eax,0x2d37a259
  40e094:	pop    ebx
  40e095:	mov    eax,ds:0x8b6e3b3c
  40e09a:	inc    esp
  40e09b:	jecxz  0x40e0ce
  40e09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09e:	inc    edx
  40e09f:	fsub   QWORD PTR [eax+0x123eeb97]
  40e0a5:	push   edx
  40e0a6:	mov    WORD PTR [ebx],gs
  40e0a8:	nop
  40e0a9:	stos   DWORD PTR es:[edi],eax
  40e0aa:	lods   al,BYTE PTR ds:[esi]
  40e0ab:	or     BYTE PTR [edx],bl
  40e0ad:	add    BYTE PTR [ebx+0xe12a29b],bl
  40e0b3:	add    DWORD PTR [eax+0x2f4d9f9b],0xffffffb6
  40e0ba:	xchg   ebp,eax
  40e0bb:	adc    DWORD PTR [edx+0x46],esp
  40e0be:	jle    0x40e10d
  40e0c0:	xor    BYTE PTR [ebx+0x2bc95138],0x7c
  40e0c7:	dec    edi
  40e0c8:	push   ss
  40e0c9:	cld    
  40e0ca:	or     al,0x3f
  40e0cc:	mov    al,0x1a
  40e0ce:	cdq    
  40e0cf:	test   eax,0x9deb3ff6
  40e0d4:	xchg   edi,eax
  40e0d5:	adc    al,0x79
  40e0d7:	pop    edi
  40e0d8:	shr    DWORD PTR [edx],0x5b
  40e0db:	fimul  DWORD PTR gs:[ebx+edx*1+0xa836208]
  40e0e3:	lds    esi,FWORD PTR [eax+0x4b650d93]
  40e0e9:	mov    cs,WORD PTR ds:0x75e4049
  40e0ef:	sti    
  40e0f0:	fild   WORD PTR [edi+esi*4]
  40e0f3:	fwait
  40e0f4:	mov    al,al
  40e0f6:	outs   dx,DWORD PTR ds:[esi]
  40e0f7:	fs ja  0x40e150
  40e0fa:	jle    0x40e0e4
  40e0fc:	or     cl,bl
  40e0fe:	in     eax,dx
  40e0ff:	int    0x94
  40e101:	push   ds
  40e102:	dec    esp
  40e103:	cmp    al,0x5b
  40e105:	mov    bh,0xf7
  40e107:	push   gs
  40e109:	(bad)  
  40e10a:	ds pop ebp
  40e10c:	push   esi
  40e10d:	aaa    
  40e10e:	dec    ebx
  40e10f:	pop    ecx
  40e110:	sbb    ebx,DWORD PTR [ecx]
  40e112:	repz pop es
  40e114:	(bad)  
  40e115:	in     al,0x93
  40e117:	(bad)  
  40e118:	fs dec esi
  40e11a:	and    ah,bl
  40e11c:	jg     0x40e15f
  40e11e:	jp     0x40e160
  40e120:	sbb    eax,0x14921e67
  40e125:	push   ss
  40e126:	jae    0x40e11a
  40e128:	xor    al,0x6b
  40e12a:	xor    DWORD PTR [edx+0x763cfb83],edx
  40e130:	fsubr  DWORD PTR [edx+0x31]
  40e133:	in     al,dx
  40e134:	and    BYTE PTR [edx+ecx*1-0x1a3f1d22],0x87
  40e13c:	push   0xffffff95
  40e13e:	push   eax
  40e13f:	inc    eax
  40e140:	and    dh,bl
  40e142:	rcl    DWORD PTR [ecx],1
  40e144:	int3   
  40e145:	inc    edi
  40e146:	seto   BYTE PTR [edx+esi*2+0x17]
  40e14b:	mov    WORD PTR [esp+ebp*8-0x47b57f06],fs
  40e152:	aad    0x57
  40e154:	pushf  
  40e155:	pop    ss
  40e156:	lds    ebp,FWORD PTR [ebx-0x737415ee]
  40e15c:	nop
  40e15d:	mov    bl,dl
  40e15f:	push   esi
  40e160:	dec    edx
  40e161:	rol    DWORD PTR ds:0xd5022289,cl
  40e167:	and    al,0xa5
  40e169:	int3   
  40e16a:	(bad)  
  40e16b:	aad    0xd
  40e16d:	ins    BYTE PTR es:[edi],dx
  40e16e:	mov    al,0x42
  40e170:	mov    esi,0xafbd4d00
  40e175:	sti    
  40e176:	add    cl,BYTE PTR [edx]
  40e178:	sub    BYTE PTR [edx+0x69548f36],dh
  40e17e:	push   esi
  40e17f:	mov    edi,DWORD PTR [edx-0x26]
  40e182:	mov    ds:0xedba1536,eax
  40e187:	shl    BYTE PTR [esp+ebx*2-0x30a65eb5],cl
  40e18e:	jmp    0xa967:0x3f67250
  40e195:	pop    esp
  40e196:	cwde   
  40e197:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40e199:	scas   al,BYTE PTR es:[edi]
  40e19a:	not    DWORD PTR [edi]
  40e19c:	scas   eax,DWORD PTR es:[edi]
  40e19d:	xchg   ebp,eax
  40e19e:	data16 adc al,0xa9
  40e1a1:	jl     0x40e13f
  40e1a3:	jbe    0x40e215
  40e1a5:	stos   BYTE PTR es:[edi],al
  40e1a6:	pop    edx
  40e1a7:	xchg   ebp,eax
  40e1a8:	bnd jne 0x40e157
  40e1ab:	scas   eax,DWORD PTR es:[edi]
  40e1ac:	shl    DWORD PTR [ecx],1
  40e1ae:	enter  0xcb56,0x33
  40e1b2:	sub    al,0x22
  40e1b4:	retf   0x1397
  40e1b7:	sub    ah,cl
  40e1b9:	jmp    0xa1624aa7
  40e1be:	dec    edx
  40e1bf:	ret    0x79b3
  40e1c2:	retf   
  40e1c3:	mov    edx,0x4aff7145
  40e1c8:	xor    DWORD PTR [eax+0x3e],0xffffffae
  40e1cc:	ins    DWORD PTR es:[edi],dx
  40e1cd:	dec    ebx
  40e1ce:	shr    bl,1
  40e1d0:	or     ch,bh
  40e1d2:	xchg   esp,eax
  40e1d3:	pop    ecx
  40e1d4:	push   ecx
  40e1d5:	xchg   esi,eax
  40e1d6:	mov    edi,0x2a2af7d1
  40e1db:	imul   eax,edx,0x27
  40e1de:	lock mov dl,0x1b
  40e1e1:	mov    fs,ecx
  40e1e3:	(bad)  
  40e1e5:	ret    0x3a98
  40e1e8:	pushf  
  40e1e9:	leave  
  40e1ea:	cli    
  40e1eb:	es daa 
  40e1ed:	out    0x95,al
  40e1ef:	or     al,0x94
  40e1f1:	and    ch,BYTE PTR [ecx-0x65ea937f]
  40e1f7:	push   ss
  40e1f8:	jl     0x40e17d
  40e1fa:	in     eax,0x8e
  40e1fc:	stc    
  40e1fd:	xor    al,0x3
  40e1ff:	add    eax,0xc15b0e9f
  40e204:	pop    eax
  40e205:	push   esp
  40e206:	cmp    DWORD PTR [ecx],ecx
  40e208:	dec    ebx
  40e209:	mov    eax,0x751930bc
  40e20e:	push   ebx
  40e20f:	(bad)  
  40e210:	in     eax,0xce
  40e212:	inc    esi
  40e213:	sbb    DWORD PTR [edx-0x2518c7e1],esp
  40e219:	test   eax,0x165385d5
  40e21e:	xor    al,0x1
  40e220:	cmp    DWORD PTR [eax-0x648499b1],esp
  40e226:	mov    dl,0x36
  40e228:	in     eax,0xf0
  40e22a:	adc    DWORD PTR ds:0x131b2b07,0x78509c2d
  40e234:	xchg   ecx,eax
  40e235:	div    edx
  40e237:	mov    ecx,0x2539f675
  40e23c:	inc    ebx
  40e23d:	adc    BYTE PTR [ecx],cl
  40e23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e240:	pop    edi
  40e241:	into   
  40e242:	loope  0x40e1df
  40e244:	pop    edi
  40e245:	hlt    
  40e246:	cmp    eax,0xc438d626
  40e24b:	mov    WORD PTR [ebx+0x78],?
  40e24e:	cs mov esi,esp
  40e251:	cmp    ah,ah
  40e253:	repnz pop eax
  40e255:	test   BYTE PTR [esi-0x1ad39b1a],0x90
  40e25c:	ret    
  40e25d:	pop    ds
  40e25e:	pushf  
  40e25f:	mov    ch,0x18
  40e261:	fucom  st(4)
  40e263:	lds    esp,FWORD PTR [ebp-0x322daa1b]
  40e269:	loopne 0x40e26c
  40e26b:	fld    DWORD PTR ss:[ecx+0x1812e1dd]
  40e272:	mov    bl,0x18
  40e274:	in     al,dx
  40e275:	sub    eax,0x5e2754f7
  40e27a:	cmp    ecx,edi
  40e27c:	dec    ebx
  40e27d:	jb     0x40e27c
  40e27f:	push   0x4faf8a49
  40e284:	rol    BYTE PTR [edx+esi*2+0x42],0x83
  40e289:	test   BYTE PTR [eax+0x6a],ch
  40e28c:	push   0x6df9cd3c
  40e291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e292:	je     0x40e24a
  40e294:	sti    
  40e295:	sbb    DWORD PTR [ebx+0x47ac1535],0xcec10e6e
  40e29f:	or     dl,BYTE PTR [ecx]
  40e2a1:	ss fwait
  40e2a3:	jbe    0x40e2a6
  40e2a5:	bound  ebp,QWORD PTR [edi]
  40e2a7:	cmp    al,0x2f
  40e2a9:	cmp    DWORD PTR [ebx-0x35],0xf1a3cc72
  40e2b0:	in     eax,0x12
  40e2b2:	scas   al,BYTE PTR es:[edi]
  40e2b3:	or     al,0x4f
  40e2b5:	aas    
  40e2b6:	xchg   ebx,eax
  40e2b7:	xchg   edx,eax
  40e2b8:	lods   eax,DWORD PTR ds:[esi]
  40e2b9:	inc    edi
  40e2ba:	clc    
  40e2bb:	sbb    edx,DWORD PTR [ebx]
  40e2bd:	fild   QWORD PTR [ebx+0x7f]
  40e2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c1:	in     al,0x54
  40e2c3:	xchg   edi,eax
  40e2c4:	mov    edx,0x9524aef4
  40e2c9:	dec    esi
  40e2ca:	push   cs
  40e2cb:	leave  
  40e2cc:	mov    dl,0x65
  40e2ce:	jecxz  0x40e2da
  40e2d0:	int    0xcd
  40e2d2:	sbb    eax,0xc6b0b016
  40e2d7:	cs mov esi,0x5ecb05c6
  40e2dd:	test   BYTE PTR [edx],0xb3
  40e2e0:	inc    edi
  40e2e1:	sbb    BYTE PTR [ebx-0x65],bh
  40e2e4:	and    eax,0x2ca3f859
  40e2e9:	or     ch,cl
  40e2eb:	je     0x40e359
  40e2ed:	in     al,dx
  40e2ee:	xor    bl,BYTE PTR [ecx+0x0]
  40e2f1:	push   esp
  40e2f2:	imul   esi,ebp,0x627efcc0
  40e2f8:	dec    edi
  40e2f9:	adc    al,0xfa
  40e2fb:	loope  0x40e2d5
  40e2fd:	mov    esi,0xc7a9dba3
  40e302:	(bad)  
  40e303:	and    cl,BYTE PTR [eax-0x2c8531d5]
  40e309:	or     eax,0x1d58486a
  40e30e:	lds    ebx,FWORD PTR [ecx]
  40e310:	ins    DWORD PTR es:[edi],dx
  40e311:	idiv   DWORD PTR [ecx]
  40e313:	shr    DWORD PTR [ebp+0x4be4b379],1
  40e319:	or     eax,0x61c18dfd
  40e31e:	pop    eax
  40e31f:	push   ecx
  40e320:	pop    eax
  40e321:	test   BYTE PTR [edi],ah
  40e323:	fist   WORD PTR ds:0x8c6f1fe
  40e329:	imul   edx,DWORD PTR [ebx],0x4583d130
  40e32f:	sub    cl,BYTE PTR [edi]
  40e331:	sub    BYTE PTR [edx-0x4bd47c20],al
  40e337:	fild   DWORD PTR [ecx-0x4]
  40e33a:	add    cl,BYTE PTR [esi+edi*1-0x7caa2760]
  40e341:	pop    es
  40e342:	mov    ah,BYTE PTR [esi+0x18]
  40e345:	dec    edx
  40e346:	add    edi,edi
  40e348:	add    eax,0x87467d97
  40e34d:	and    eax,0x1162e6bb
  40e352:	pop    edi
  40e353:	mov    ds:0x44c26ca0,al
  40e358:	dec    ecx
  40e359:	add    dl,BYTE PTR [esi+0x19]
  40e35c:	(bad)  
  40e35d:	pop    esp
  40e35e:	leave  
  40e35f:	std    
  40e360:	ins    BYTE PTR es:[edi],dx
  40e361:	or     eax,0x5a2619bb
  40e366:	xor    BYTE PTR [esp+ebx*2-0x4f],dl
  40e36a:	or     dl,BYTE PTR [edi+0x4c39718e]
  40e370:	dec    ebx
  40e371:	shl    BYTE PTR [ebp-0x58c9fa0d],cl
  40e377:	bound  edi,QWORD PTR [ecx+0x7c]
  40e37a:	add    ecx,DWORD PTR [ebx+0x73]
  40e37d:	inc    esi
  40e37e:	mov    ds:0xd7357339,al
  40e383:	fs es adc edx,eax
  40e387:	sub    al,0x65
  40e389:	xchg   esp,eax
  40e38a:	out    dx,eax
  40e38b:	(bad)  
  40e38c:	enter  0x8a33,0x4b
  40e390:	push   edx
  40e391:	xchg   edx,eax
  40e392:	adc    ch,ch
  40e394:	enter  0xd928,0xa6
  40e398:	test   DWORD PTR [edx],eax
  40e39a:	and    eax,0xc1701b38
  40e39f:	push   cs
  40e3a0:	inc    ebp
  40e3a1:	xor    eax,0x5c1a4550
  40e3a6:	ficom  DWORD PTR [ebx]
  40e3a8:	sub    edx,esp
  40e3aa:	bound  edx,QWORD PTR [edi+0x34]
  40e3ad:	sub    al,0x1
  40e3af:	or     bh,ch
  40e3b1:	stos   DWORD PTR es:[edi],eax
  40e3b2:	daa    
  40e3b3:	and    eax,0x86a6ccfa
  40e3b8:	add    edx,DWORD PTR [eax]
  40e3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3bb:	add    cl,BYTE PTR [ebp+0x0]
  40e3be:	cmp    bl,ah
  40e3c0:	pushf  
  40e3c1:	xor    ebx,ecx
  40e3c3:	jge    0x40e422
  40e3c5:	jp     0x40e3e7
  40e3c7:	mov    edi,0xcc6de33a
  40e3cc:	pushf  
  40e3cd:	retf   
  40e3ce:	xor    bh,BYTE PTR [eax]
  40e3d0:	pop    ecx
  40e3d1:	xchg   BYTE PTR [eax-0x10b02fe6],dl
  40e3d7:	out    dx,al
  40e3d8:	in     eax,dx
  40e3d9:	aaa    
  40e3da:	and    DWORD PTR [eax],0x57037fd4
  40e3e0:	test   DWORD PTR [ecx+0x63],esp
  40e3e3:	xchg   ebp,eax
  40e3e4:	cmc    
  40e3e5:	pop    es
  40e3e6:	leave  
  40e3e7:	rol    BYTE PTR [edi],0x24
  40e3ea:	pop    eax
  40e3eb:	push   DWORD PTR [ecx+0x5c8662ba]
  40e3f1:	popf   
  40e3f2:	shl    BYTE PTR ds:0xc2eeb0dd,cl
  40e3f8:	xchg   BYTE PTR [edi],al
  40e3fa:	mov    ebx,0x3e4bbf48
  40e3ff:	lock sub BYTE PTR [eax+eiz*4-0xc],dh
  40e404:	inc    eax
  40e405:	imul   edi,DWORD PTR [esi+0x73],0xac06e1b0
  40e40c:	add    eax,DWORD PTR [ecx-0x15]
  40e40f:	pop    ds
  40e410:	outs   dx,DWORD PTR ds:[si]
  40e412:	adc    al,0x95
  40e414:	fbld   TBYTE PTR [edx-0x7b8884ad]
  40e41a:	pop    ecx
  40e41b:	sar    BYTE PTR ds:0x727db231,1
  40e421:	ds fs mov al,gs:0x90b48714
  40e429:	in     al,dx
  40e42a:	shl    DWORD PTR [ebx-0x15],1
  40e42d:	fs pop ds
  40e42f:	ds inc esi
  40e431:	mov    edx,0x79869114
  40e436:	shl    DWORD PTR [ebx+ebx*4+0x206687e2],cl
  40e43d:	rcl    BYTE PTR [eax],1
  40e43f:	ficomp DWORD PTR ds:0x4073068d
  40e445:	jne    0x40e441
  40e447:	xchg   edi,eax
  40e448:	mov    DWORD PTR [ecx-0x44],edx
  40e44b:	mov    ah,0x57
  40e44d:	or     ebx,ebp
  40e44f:	sbb    al,0x2
  40e451:	adc    ch,BYTE PTR [esi]
  40e453:	push   es
  40e454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e455:	inc    esi
  40e456:	sbb    eax,0x711af56e
  40e45b:	lock inc ebx
  40e45d:	(bad)  
  40e45e:	push   ebx
  40e45f:	and    DWORD PTR [eax-0x66b3ffb0],0xfffffffb
  40e466:	push   edx
  40e467:	xor    bh,bl
  40e469:	int3   
  40e46a:	pop    edi
  40e46b:	inc    ecx
  40e46c:	mov    cl,0x85
  40e46e:	ror    BYTE PTR [ecx-0x631f4e77],0xa6
  40e475:	rcl    esp,0x54
  40e478:	sbb    ecx,DWORD PTR [ebp+0x23]
  40e47b:	mov    BYTE PTR [ebx+0x22],bl
  40e47e:	(bad)  [edx+0x59b6ce3a]
  40e484:	mov    dh,0xa2
  40e486:	das    
  40e487:	cli    
  40e488:	mov    ds,WORD PTR [edi-0x3c]
  40e48b:	adc    eax,0x89c6ccad
  40e490:	pop    esi
  40e491:	push   esi
  40e492:	or     DWORD PTR [eax-0x55e23ce7],ebp
  40e498:	xchg   ebp,eax
  40e499:	push   esi
  40e49a:	imul   edi,DWORD PTR [ebx-0x30a78ca],0x49
  40e4a1:	mov    ebx,DWORD PTR [esp+edx*1+0x78219c1f]
  40e4a8:	jp     0x40e45a
  40e4aa:	out    dx,al
  40e4ab:	mov    cl,0xc8
  40e4ad:	fcom   DWORD PTR [esi+ecx*8]
  40e4b0:	lods   al,BYTE PTR ds:[esi]
  40e4b1:	adc    al,0x21
  40e4b3:	xchg   ecx,eax
  40e4b4:	lahf   
  40e4b5:	dec    edx
  40e4b6:	xchg   esi,eax
  40e4b7:	in     eax,0x50
  40e4b9:	push   ebp
  40e4ba:	faddp  st(2),st
  40e4bc:	stos   DWORD PTR es:[edi],eax
  40e4bd:	pop    ds
  40e4be:	add    DWORD PTR [edi],ebp
  40e4c0:	aaa    
  40e4c1:	mov    eax,ds:0x20c786e1
  40e4c6:	xlat   BYTE PTR ds:[ebx]
  40e4c7:	dec    ecx
  40e4c8:	sub    eax,edi
  40e4ca:	sbb    BYTE PTR [edi-0x3f],0x1a
  40e4ce:	or     DWORD PTR [ebx],ecx
  40e4d0:	pop    ds
  40e4d1:	aas    
  40e4d2:	mov    BYTE PTR [ebx-0x533972d5],bh
  40e4d8:	push   cs
  40e4d9:	mov    cl,0xb8
  40e4db:	jg     0x40e4d0
  40e4dd:	ins    BYTE PTR es:[edi],dx
  40e4de:	mov    ebx,0xc68a371
  40e4e3:	in     al,dx
  40e4e4:	or     BYTE PTR [ebx+0x56],cl
  40e4e7:	xor    eax,0xc601f391
  40e4ec:	mov    DWORD PTR [esi-0x6d],ecx
  40e4ef:	or     eax,0xd7872118
  40e4f4:	push   ecx
  40e4f5:	mov    bh,0xcb
  40e4f7:	shl    BYTE PTR [eax],0xc8
  40e4fa:	add    esi,esi
  40e4fc:	cld    
  40e4fd:	nop
  40e4fe:	jmp    0x40e4be
  40e500:	imul   ecx,ebp,0x81ac15d
  40e506:	sysenter 
  40e508:	mov    ebx,0x23415c48
  40e50d:	jecxz  0x40e571
  40e50f:	mov    esp,DWORD PTR [esi]
  40e511:	adc    ecx,DWORD PTR [edi]
  40e513:	jne    0x40e50d
  40e515:	pop    esp
  40e516:	xchg   esp,eax
  40e517:	cmc    
  40e518:	xor    bh,BYTE PTR [esp+eax*8]
  40e51b:	xor    dh,BYTE PTR [ecx+0x79]
  40e51e:	int3   
  40e51f:	js     0x40e4b7
  40e521:	dec    edx
  40e522:	jmp    0x77c4:0xd7e1308b
  40e529:	out    dx,eax
  40e52a:	mov    dl,0xe6
  40e52c:	(bad)  
  40e52d:	jmp    0x40e518
  40e52f:	jg     0x40e4c9
  40e531:	pop    edx
  40e532:	imul   BYTE PTR [edi-0x6bd1adcf]
  40e538:	jne    0x40e4db
  40e53a:	mov    ecx,0x25a602b4
  40e53f:	mov    ds:0x861c3364,eax
  40e544:	push   ebx
  40e545:	outs   dx,DWORD PTR ds:[esi]
  40e546:	loope  0x40e524
  40e548:	sbb    ebp,DWORD PTR [esi+0x6c]
  40e54b:	or     eax,0x802171a
  40e550:	or     al,0x4b
  40e552:	imul   esi,eax,0x79
  40e555:	lods   eax,DWORD PTR ds:[esi]
  40e556:	mov    edx,?
  40e558:	cmp    BYTE PTR [edx],ch
  40e55a:	call   0xf732:0xde7c9771
  40e561:	mov    bh,0x7d
  40e563:	mov    dh,BYTE PTR [edx-0x40131458]
  40e569:	sbb    eax,DWORD PTR ds:0x4daa154b
  40e56f:	push   0x23
  40e571:	test   DWORD PTR [edi+edx*1],0xd1e3d1bd
  40e578:	jecxz  0x40e526
  40e57a:	xchg   ecx,eax
  40e57b:	sub    DWORD PTR [ecx-0x33],eax
  40e57e:	int    0xb2
  40e580:	dec    esi
  40e581:	ret    0x1b9c
  40e584:	outs   dx,DWORD PTR ds:[esi]
  40e585:	adc    al,BYTE PTR [esp+edi*2-0x602315da]
  40e58c:	test   BYTE PTR [ebp+0x1a],ah
  40e58f:	jae    0x40e5ea
  40e591:	test   eax,0x81c685b2
  40e596:	out    dx,al
  40e597:	dec    edx
  40e598:	push   es
  40e599:	pop    eax
  40e59a:	sub    eax,0x12cd3949
  40e59f:	push   ecx
  40e5a0:	js     0x40e5c8
  40e5a2:	pop    ecx
  40e5a3:	or     eax,0x2b7b3957
  40e5a8:	push   0x824c9d73
  40e5ad:	repz jg 0x40e5ab
  40e5b0:	shr    BYTE PTR [ecx],cl
  40e5b2:	fcmovnu st,st(3)
  40e5b4:	test   ch,al
  40e5b6:	je     0x40e5fb
  40e5b8:	out    0x43,eax
  40e5ba:	rcr    DWORD PTR [edi-0x38],0xc1
  40e5be:	mov    edi,0x177135eb
  40e5c3:	imul   BYTE PTR [ecx+0x2043bb7c]
  40e5c9:	add    al,0x9c
  40e5cb:	and    eax,0xa0ee48b9
  40e5d0:	fcom   DWORD PTR [edx+0x3d596bc5]
  40e5d6:	inc    esi
  40e5d7:	call   0xb7ea:0xb8919f50
  40e5de:	mov    dl,0xd0
  40e5e0:	je     0x40e631
  40e5e2:	scas   eax,DWORD PTR es:[edi]
  40e5e3:	fs (bad) 
  40e5e5:	pop    ecx
  40e5e6:	mov    ch,0x36
  40e5e8:	lea    ebx,[ebx]
  40e5ea:	ins    BYTE PTR es:[edi],dx
  40e5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ec:	in     eax,dx
  40e5ed:	inc    eax
  40e5ee:	nop
  40e5ef:	sbb    ah,al
  40e5f1:	cmp    eax,0xd84f73cb
  40e5f6:	jbe    0x40e61f
  40e5f8:	mov    bl,0x64
  40e5fa:	inc    esp
  40e5fb:	sti    
  40e5fc:	test   al,0x5c
  40e5fe:	adc    eax,ebp
  40e600:	sti    
  40e601:	mov    bh,0x8c
  40e603:	sar    DWORD PTR [ecx],1
  40e605:	xchg   edx,eax
  40e606:	xlat   BYTE PTR ds:[ebx]
  40e607:	je     0x40e5be
  40e609:	and    DWORD PTR [esi+0x7],edx
  40e60c:	jecxz  0x40e5f9
  40e60e:	cmc    
  40e60f:	ret    
  40e610:	cmp    BYTE PTR [ecx],bl
  40e612:	push   ecx
  40e613:	rcr    DWORD PTR [esi],0x7d
  40e616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e617:	les    edi,FWORD PTR [ebx+ebp*1]
  40e61a:	mov    esp,0x7451e259
  40e61f:	add    edx,esp
  40e621:	push   ebp
  40e622:	sub    DWORD PTR [esi],ebx
  40e624:	mov    eax,ds:0xf7dd8b7a
  40e629:	call   DWORD PTR [ecx]
  40e62b:	sar    BYTE PTR [edi+0x6e38f20d],0xfa
  40e632:	push   ebx
  40e633:	sub    edi,DWORD PTR [ebp+0x283c6255]
  40e639:	mov    BYTE PTR [ebx],dl
  40e63b:	clc    
  40e63c:	adc    eax,0xde218955
  40e641:	jecxz  0x40e677
  40e643:	cs das 
  40e645:	inc    eax
  40e646:	sbb    dl,bh
  40e648:	mov    ecx,0xd54ec68f
  40e64d:	push   ecx
  40e64e:	cmp    al,0x82
  40e650:	dec    esp
  40e651:	add    BYTE PTR [eax+edx*8+0x34a7400c],bl
  40e658:	mov    eax,ds:0xed5e2efb
  40e65d:	cmp    eax,0x98d40563
  40e662:	(bad)  
  40e663:	mov    cl,0xfb
  40e665:	nop
  40e666:	dec    edi
  40e667:	cmc    
  40e668:	and    eax,DWORD PTR [esi+0x5a]
  40e66b:	adc    al,0x14
  40e66d:	fisub  DWORD PTR [ecx-0x71]
  40e670:	clc    
  40e671:	or     al,ch
  40e673:	jle    0x40e609
  40e675:	sbb    BYTE PTR [ebx-0x72],al
  40e678:	stos   DWORD PTR es:[edi],eax
  40e679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e67a:	xchg   esp,eax
  40e67b:	jmp    0x40e674
  40e67d:	xchg   esi,ebp
  40e67f:	jmp    0x5a6c2802
  40e684:	jp     0x85c327af
  40e68a:	dec    ebp
  40e68b:	mov    esp,0x412ae065
  40e690:	retf   
  40e691:	(bad)  [ecx-0x38]
  40e694:	dec    eax
  40e695:	cli    
  40e696:	test   DWORD PTR [esi-0x6514564b],0xe572f2a5
  40e6a0:	add    DWORD PTR [ebp-0x33f9d87f],edx
  40e6a6:	push   esp
  40e6a7:	ds pop ebx
  40e6a9:	cmp    al,BYTE PTR [edi+ebx*1]
  40e6ac:	int    0xe8
  40e6ae:	inc    eax
  40e6af:	jg     0x40e6aa
  40e6b1:	xchg   edx,eax
  40e6b2:	jmp    0xb2427c0e
  40e6b7:	add    ah,bl
  40e6b9:	inc    edx
  40e6ba:	and    eax,0xd3f254d4
  40e6bf:	mov    ah,0xfa
  40e6c1:	push   edx
  40e6c2:	(bad)  
  40e6c3:	xor    dh,BYTE PTR [edi]
  40e6c5:	xor    esi,edi
  40e6c7:	mov    ah,0x26
  40e6c9:	mov    dl,0x16
  40e6cb:	push   esp
  40e6cc:	inc    eax
  40e6cd:	dec    ebx
  40e6ce:	enter  0xac78,0xbb
  40e6d2:	add    dh,0xce
  40e6d5:	dec    eax
  40e6d6:	rcr    BYTE PTR [edi+0x42],1
  40e6d9:	mov    esp,0xbd489b84
  40e6de:	js     0x40e68a
  40e6e0:	stos   DWORD PTR es:[edi],eax
  40e6e1:	adc    al,0x38
  40e6e3:	out    dx,al
  40e6e4:	mov    ecx,0x6c0f55ba
  40e6e9:	mov    cs,WORD PTR [edi+ebp*4+0x59a6238d]
  40e6f0:	adc    eax,0xef1c8d9a
  40e6f5:	sbb    ch,BYTE PTR [ecx-0x1d]
  40e6f8:	mov    al,ds:0x4ad6efd
  40e6fd:	inc    eax
  40e6fe:	xchg   edi,eax
  40e6ff:	or     al,0xab
  40e701:	sti    
  40e702:	adc    eax,DWORD PTR [eax+0x12c84b23]
  40e708:	in     eax,dx
  40e709:	inc    edi
  40e70a:	push   edi
  40e70b:	loop   0x40e756
  40e70d:	js     0x40e740
  40e70f:	sub    edi,DWORD PTR [edi+0x6e5c7500]
  40e715:	xchg   esp,eax
  40e716:	loope  0x40e6da
  40e718:	inc    edi
  40e719:	aam    0x60
  40e71b:	lds    ebp,FWORD PTR [esi-0x7b5ec66d]
  40e721:	cmp    eax,0x2c3baef7
  40e726:	cmp    al,0xdd
  40e728:	and    al,0x8
  40e72a:	inc    ebx
  40e72b:	test   BYTE PTR [edx+eiz*4+0x214c4d5f],bl
  40e732:	addr16 aas 
  40e734:	inc    esi
  40e735:	shl    BYTE PTR [ebx],cl
  40e737:	loopne 0x40e6f0
  40e739:	outs   dx,DWORD PTR ds:[esi]
  40e73a:	fsub   QWORD PTR [ebx-0x28]
  40e73d:	loop   0x40e74d
  40e73f:	xchg   ebx,eax
  40e740:	outs   dx,BYTE PTR ds:[esi]
  40e741:	push   edx
  40e742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e743:	xlat   BYTE PTR ds:[ebx]
  40e744:	and    BYTE PTR [edi-0x3d9a7ca4],0xde
  40e74b:	pop    es
  40e74c:	jg     0x40e75a
  40e74e:	mov    bh,bl
  40e750:	(bad)  
  40e751:	enter  0x1367,0xa8
  40e755:	mov    ebx,0x28f1834
  40e75a:	mov    dl,0x7b
  40e75c:	dec    eax
  40e75d:	jns    0x40e714
  40e75f:	stc    
  40e760:	pusha  
  40e761:	test   DWORD PTR [edx+eax*4],edi
  40e764:	fwait
  40e765:	or     DWORD PTR [edx+edi*1+0x1],esi
  40e769:	add    eax,DWORD PTR [edi+esi*8+0xa]
  40e76d:	xchg   edx,eax
  40e76e:	lock std 
  40e770:	push   edx
  40e771:	outs   dx,DWORD PTR ds:[esi]
  40e772:	and    eax,0xf13157f9
  40e777:	and    cl,BYTE PTR [esp+eax*1+0x103cf82b]
  40e77e:	retf   0x6c72
  40e781:	rcl    DWORD PTR [eax+0x1d74fc20],1
  40e787:	(bad)  
  40e788:	shl    DWORD PTR [eax+0xf],cl
  40e78b:	mov    ebx,0x4de1a709
  40e790:	retf   
  40e791:	inc    ecx
  40e792:	hlt    
  40e793:	xchg   esi,eax
  40e794:	cld    
  40e795:	jmp    0x61123d8d
  40e79a:	dec    ebp
  40e79b:	je     0x40e736
  40e79d:	sub    cl,BYTE PTR [ecx-0x64]
  40e7a0:	jno    0x40e78b
  40e7a2:	cmp    ebp,0xa042ac98
  40e7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7a9:	ret    0x4f35
  40e7ac:	mov    edi,eax
  40e7ae:	mov    eax,0xf81423a
  40e7b3:	mov    DWORD PTR [ebp+0x7a],eax
  40e7b6:	sbb    BYTE PTR [edi-0x44452cae],0x45
  40e7bd:	inc    edi
  40e7be:	and    DWORD PTR [ebp-0x78b293e1],ecx
  40e7c4:	mov    gs,WORD PTR [ebx+0x5528e5e9]
  40e7ca:	shl    DWORD PTR [ebp-0x14],0x98
  40e7ce:	test   eax,0xccd20840
  40e7d3:	pop    ss
  40e7d4:	mov    ah,0x9d
  40e7d6:	outs   dx,BYTE PTR ds:[esi]
  40e7d7:	lock pop edi
  40e7d9:	and    ebp,edx
  40e7db:	or     al,0x6b
  40e7dd:	and    eax,0x79102252
  40e7e2:	adc    BYTE PTR [ebx-0x57987cc9],dl
  40e7e8:	push   0xffffffc1
  40e7ea:	ror    DWORD PTR ds:0xd70e5334,1
  40e7f0:	clc    
  40e7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f2:	cwde   
  40e7f3:	pop    ebx
  40e7f4:	mov    bl,0xa9
  40e7f6:	cmp    eax,0x4deb66d6
  40e7fb:	nop
  40e7fc:	or     DWORD PTR ds:0xb97a5322,ebx
  40e802:	dec    ebp
  40e803:	mov    ah,0xb3
  40e805:	inc    ecx
  40e806:	pop    eax
  40e807:	xchg   ebx,eax
  40e808:	or     DWORD PTR [eax-0x59],esi
  40e80b:	int    0xf0
  40e80d:	mov    dl,0x94
  40e80f:	jmp    DWORD PTR [edi+0x50]
  40e812:	in     eax,dx
  40e813:	xor    ah,dl
  40e815:	xor    eax,0xfa128761
  40e81a:	rcl    dh,1
  40e81c:	sbb    eax,0x555305d6
  40e821:	in     eax,0x5
  40e823:	jge    0x40e86b
  40e825:	in     eax,dx
  40e826:	ret    
  40e827:	pushf  
  40e828:	out    dx,eax
  40e829:	and    DWORD PTR ss:[esi],ebp
  40e82c:	xchg   BYTE PTR [edx],bh
  40e82e:	xor    eax,0xb9c5ede3
  40e833:	ins    DWORD PTR es:[edi],dx
  40e834:	scas   al,BYTE PTR es:[edi]
  40e835:	adc    BYTE PTR [eax],bh
  40e837:	mov    ecx,0x68a12d23
  40e83c:	pop    ds
  40e83d:	add    DWORD PTR [eax],edi
  40e83f:	gs xor al,0x21
  40e842:	mov    dh,0x19
  40e844:	push   eax
  40e845:	cs loop 0x40e894
  40e848:	ins    DWORD PTR es:[edi],dx
  40e849:	pop    edi
  40e84a:	jbe    0x40e7d6
  40e84c:	and    DWORD PTR [ebx+0x28],edi
  40e84f:	inc    edx
  40e850:	mov    eax,ds:0x76efa0ae
  40e855:	pop    ss
  40e856:	or     DWORD PTR [ebx+0x1c727256],0xc4ef5233
  40e860:	(bad)  
  40e862:	dec    esi
  40e863:	gs inc ebx
  40e865:	sti    
  40e866:	imul   edx,ecx,0x975362b7
  40e86c:	repz mov ebp,0x49446db1
  40e872:	or     esp,DWORD PTR [ecx]
  40e874:	into   
  40e875:	mov    edx,0x317e150e
  40e87a:	mov    gs,WORD PTR [edx]
  40e87c:	maxps  xmm4,XMMWORD PTR [ebp+0x46]
  40e880:	jne    0x40e871
  40e882:	sar    DWORD PTR [eiz*4+0x65dfa3c6],1
  40e889:	and    BYTE PTR ds:0x598f4c31,dh
  40e88f:	addr16 push cs
  40e891:	lahf   
  40e892:	outs   dx,BYTE PTR ds:[esi]
  40e893:	mov    DWORD PTR [ebp+0x65],eax
  40e896:	mov    eax,ds:0xeb0d10ba
  40e89b:	sub    edi,DWORD PTR [esi]
  40e89d:	fadd   QWORD PTR [edi+0x4632715d]
  40e8a3:	and    edx,eax
  40e8a5:	jo     0x40e920
  40e8a7:	sub    eax,0x5d05c8eb
  40e8ac:	pop    ecx
  40e8ad:	loop   0x40e918
  40e8af:	mov    cl,0xbf
  40e8b1:	or     al,0x7d
  40e8b3:	les    esi,FWORD PTR [ecx+0x3bc29e51]
  40e8b9:	xchg   esi,eax
  40e8ba:	inc    edx
  40e8bb:	shr    BYTE PTR [eax],cl
  40e8bd:	test   al,0x9
  40e8bf:	dec    esp
  40e8c0:	bound  esp,QWORD PTR [eax-0xa]
  40e8c3:	xchg   DWORD PTR [ebp-0x2c169c3a],ebx
  40e8c9:	dec    esp
  40e8ca:	fild   DWORD PTR [ebp-0x2a4d5952]
  40e8d0:	or     bh,al
  40e8d2:	rcl    BYTE PTR [ecx-0x2a],1
  40e8d5:	pop    esp
  40e8d6:	cld    
  40e8d7:	push   ebx
  40e8d8:	and    cl,BYTE PTR [edi-0x3aac6cf0]
  40e8de:	out    0xdb,al
  40e8e0:	sbb    esp,DWORD PTR ds:0x4a3a4905
  40e8e6:	(bad)  
  40e8e7:	pop    esi
  40e8e8:	jle    0x40e951
  40e8ea:	and    dl,BYTE PTR [ecx+0x3b]
  40e8ed:	sbb    ecx,eax
  40e8ef:	push   es
  40e8f0:	mov    eax,gs
  40e8f2:	mov    fs,WORD PTR [edx]
  40e8f4:	js     0x40e88d
  40e8f6:	adc    edi,DWORD PTR [esi]
  40e8f8:	dec    eax
  40e8f9:	icebp  
  40e8fa:	test   ebx,ecx
  40e8fc:	scas   al,BYTE PTR es:[edi]
  40e8fd:	stc    
  40e8fe:	adc    eax,0x5a5bc611
  40e903:	mov    eax,ds:0x942b8ae0
  40e908:	and    al,0x92
  40e90a:	gs xchg ebp,eax
  40e90c:	push   0xba269757
  40e911:	loopne 0x40e8e0
  40e913:	ret    0x3c1f
  40e916:	test   eax,0x90e4bdce
  40e91b:	xlat   BYTE PTR ds:[ebx]
  40e91c:	stos   DWORD PTR es:[edi],eax
  40e91d:	lods   al,BYTE PTR ds:[esi]
  40e91e:	loop   0x40e8c2
  40e920:	call   DWORD PTR [edi-0x60b96509]
  40e926:	cmc    
  40e927:	mov    ah,BYTE PTR [ebx]
  40e929:	in     eax,0x95
  40e92b:	repnz xchg ecx,eax
  40e92d:	adc    edi,esi
  40e92f:	aad    0xe9
  40e931:	ror    BYTE PTR [edi-0x76533c73],cl
  40e937:	(bad)  
  40e938:	adc    al,0xa3
  40e93a:	hlt    
  40e93b:	cwde   
  40e93c:	scas   eax,DWORD PTR es:[edi]
  40e93d:	mov    ebp,0xe3f28776
  40e942:	(bad)  
  40e943:	int3   
  40e944:	mov    dl,0x3
  40e946:	jo     0x40e981
  40e948:	sti    
  40e949:	hlt    
  40e94a:	jae    0x40e97c
  40e94c:	xor    bh,BYTE PTR [eax]
  40e94e:	data16 gs mov dl,0xef
  40e952:	cmp    eax,0x9bb4b8a9
  40e957:	pop    ss
  40e958:	cld    
  40e959:	xchg   edi,eax
  40e95a:	sbb    eax,DWORD PTR [edi-0x7]
  40e95d:	sbb    BYTE PTR [eax+0x4a6abd26],ch
  40e963:	aad    0x56
  40e965:	push   ss
  40e966:	jnp    0x40e908
  40e968:	cmc    
  40e969:	pop    ebp
  40e96a:	dec    ebx
  40e96b:	repz xchg esp,eax
  40e96d:	dec    ebx
  40e96e:	in     al,0x3
  40e970:	cs fs shl esi,cl
  40e974:	and    BYTE PTR [edi],ch
  40e976:	adc    esi,DWORD PTR [eax+0xc]
  40e979:	adc    ebx,ebp
  40e97b:	push   ebp
  40e97c:	rol    ch,0xa0
  40e97f:	push   esp
  40e980:	mov    al,0xda
  40e982:	(bad)  
  40e983:	jae    0x40e9af
  40e985:	iret   
  40e986:	fwait
  40e987:	mov    al,0x71
  40e989:	call   0xbd16:0xa6d8a1cc
  40e990:	mov    eax,es
  40e992:	lahf   
  40e993:	push   ds
  40e994:	adc    ah,BYTE PTR [edx+0x60]
  40e997:	or     cl,BYTE PTR [esi-0x7b0cf64f]
  40e99d:	jecxz  0x40e9dc
  40e99f:	add    dl,al
  40e9a1:	mov    ds:0x6d999ee6,al
  40e9a6:	in     eax,dx
  40e9a7:	adc    bl,BYTE PTR [edi+0x3fd48a16]
  40e9ad:	data16 cli 
  40e9af:	lods   eax,DWORD PTR ds:[esi]
  40e9b0:	dec    edi
  40e9b1:	mov    cl,0xe1
  40e9b3:	inc    eax
  40e9b4:	adc    ebx,DWORD PTR [ebx-0x1a3c4bd]
  40e9ba:	sub    DWORD PTR [esi+0x589aee4f],0xc6f49fca
  40e9c4:	mov    eax,ds:0x801f864e
  40e9c9:	into   
  40e9ca:	xor    BYTE PTR [edx-0x35],bh
  40e9cd:	hlt    
  40e9ce:	pop    ecx
  40e9cf:	(bad)  
  40e9d0:	mov    dh,0x3f
  40e9d2:	jne    0x40e9cc
  40e9d4:	adc    al,0x27
  40e9d6:	xchg   edx,eax
  40e9d7:	shl    DWORD PTR [ebx+0x22662bc4],1
  40e9dd:	xchg   ebp,eax
  40e9de:	dec    ebx
  40e9df:	xor    DWORD PTR [ebx+ebp*2-0x31],esp
  40e9e3:	or     ecx,DWORD PTR [ecx+0x1735ebca]
  40e9e9:	adc    BYTE PTR [edi-0x3e7be77],bl
  40e9ef:	popa   
  40e9f0:	add    ch,BYTE PTR [si]
  40e9f3:	test   al,0x37
  40e9f5:	sbb    al,0xad
  40e9f7:	int    0x9c
  40e9f9:	dec    ecx
  40e9fa:	xor    edx,esi
  40e9fc:	ret    0x513d
  40e9ff:	in     al,0xab
  40ea01:	jle    0x40ea40
  40ea03:	lock mov dl,0x6b
  40ea06:	dec    esp
  40ea07:	sbb    eax,eax
  40ea09:	popf   
  40ea0a:	cmp    dh,BYTE PTR [ebx]
  40ea0c:	retf   
  40ea0d:	and    DWORD PTR [edi],ebx
  40ea0f:	xlat   BYTE PTR ds:[ebx]
  40ea10:	outs   dx,DWORD PTR ds:[esi]
  40ea11:	and    ah,bh
  40ea13:	mov    dl,0x88
  40ea15:	xor    al,0x80
  40ea17:	ret    
  40ea18:	and    ch,BYTE PTR [esi]
  40ea1a:	ror    DWORD PTR [esi+ebp*2-0x33],1
  40ea1e:	cmp    ecx,DWORD PTR [ecx]
  40ea20:	fbld   TBYTE PTR [eax-0x6513c855]
  40ea26:	ja     0x40e9d8
  40ea28:	mov    bh,0x14
  40ea2a:	fdivr  QWORD PTR [ebx-0x24d4550]
  40ea30:	mov    esi,0x6d892390
  40ea35:	dec    ebx
  40ea36:	jle    0x40ea70
  40ea38:	and    esi,DWORD PTR [eax-0x639714d1]
  40ea3e:	mov    edi,0x38aa79a5
  40ea43:	jle    0x40ea9d
  40ea45:	mov    dl,0x42
  40ea47:	imul   ecx,DWORD PTR [ebx],0x81908344
  40ea4d:	iret   
  40ea4e:	xlat   BYTE PTR ds:[ebx]
  40ea4f:	and    al,0x9b
  40ea51:	pop    eax
  40ea52:	jg     0x40ea26
  40ea54:	mov    dh,0x3d
  40ea56:	xlat   BYTE PTR ds:[ebx]
  40ea57:	jl     0x40ead7
  40ea59:	gs jmp 0x33d3:0x842ff025
  40ea61:	aas    
  40ea62:	(bad)  
  40ea63:	ins    DWORD PTR es:[edi],dx
  40ea64:	rcr    BYTE PTR [ecx],1
  40ea66:	cmp    DWORD PTR [esp+ecx*8-0x3b],eax
  40ea6a:	or     dl,al
  40ea6c:	sub    al,BYTE PTR [edi-0x5f425fad]
  40ea72:	and    dl,BYTE PTR [ebx-0x67]
  40ea75:	adc    al,0x8
  40ea77:	daa    
  40ea78:	pop    eax
  40ea79:	enter  0xf5a9,0x34
  40ea7d:	jns    0x40eabe
  40ea7f:	imul   edx,DWORD PTR [ecx-0x43],0xffffffa6
  40ea83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea84:	lock icebp 
  40ea86:	sbb    dh,BYTE PTR [edx]
  40ea88:	call   0xc7476d92
  40ea8d:	jns    0x40eacb
  40ea8f:	sbb    ecx,DWORD PTR [ebx+0x56]
  40ea92:	push   edi
  40ea93:	mov    edi,0xa94dc810
  40ea98:	not    BYTE PTR [edx+esi*8+0x42bf7fa3]
  40ea9f:	lock sahf 
  40eaa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaa2:	push   0xffffffc6
  40eaa4:	xchg   edx,eax
  40eaa5:	arpl   WORD PTR [ebp-0x17],bp
  40eaa8:	cmp    bl,ah
  40eaaa:	sar    ebx,cl
  40eaac:	icebp  
  40eaad:	packssdw mm3,QWORD PTR [esi+0x38860d94]
  40eab4:	(bad)  
  40eab6:	outs   dx,DWORD PTR ds:[esi]
  40eab7:	add    DWORD PTR [esi],edx
  40eab9:	inc    ebp
  40eaba:	test   al,0xaa
  40eabc:	mov    al,ds:0x4ce93606
  40eac1:	ds in  eax,0x85
  40eac4:	jge    0x40eb04
  40eac6:	sub    DWORD PTR [ecx+0x5d560b94],edx
  40eacc:	icebp  
  40eacd:	cmp    BYTE PTR [edi],al
  40eacf:	adc    eax,0x6c8ccf07
  40ead4:	adc    ch,BYTE PTR [edx-0xc]
  40ead7:	mov    ch,0x2a
  40ead9:	(bad)  
  40eada:	out    dx,eax
  40eadb:	ror    BYTE PTR [ebp+esi*4-0x62],cl
  40eadf:	add    ebp,edi
  40eae1:	xchg   eax,esp
  40eae3:	int3   
  40eae4:	clc    
  40eae5:	xchg   esp,eax
  40eae6:	sbb    eax,DWORD PTR [esi]
  40eae8:	mov    ecx,0x92d06d75
  40eaed:	(bad)  
  40eaee:	lds    ebp,FWORD PTR [esi-0xb9d6c2e]
  40eaf4:	xchg   ecx,eax
  40eaf5:	leave  
  40eaf6:	cmp    BYTE PTR [eax+0x10],ah
  40eaf9:	mov    bh,0x66
  40eafb:	sbb    ebp,DWORD PTR [esi]
  40eafd:	sbb    eax,0xf402c3f7
  40eb02:	xor    BYTE PTR [ebx-0x72],cl
  40eb05:	xor    eax,0xfa1a89cb
  40eb0a:	push   ebx
  40eb0b:	test   BYTE PTR [ebx],ah
  40eb0d:	xchg   ebx,eax
  40eb0e:	scas   al,BYTE PTR es:[edi]
  40eb0f:	imul   eax,DWORD PTR [edi+0x68],0x55
  40eb13:	fs dec ecx
  40eb15:	sub    al,0x31
  40eb17:	pop    edx
  40eb18:	xor    BYTE PTR [ebx+0x5003db4],ah
  40eb1e:	sub    esi,DWORD PTR [esi-0x53]
  40eb21:	xlat   BYTE PTR ds:[ebx]
  40eb22:	add    ebp,esi
  40eb24:	stos   DWORD PTR es:[edi],eax
  40eb25:	leave  
  40eb26:	adc    DWORD PTR [edx],0x2471ca7
  40eb2c:	arpl   WORD PTR [edx+eax*2],ax
  40eb2f:	xchg   ecx,eax
  40eb30:	cmp    al,0x4f
  40eb32:	mov    edx,0xf83b9764
  40eb37:	rcl    BYTE PTR [edx+eiz*8+0x7b],cl
  40eb3b:	mov    ebp,0xb33e7732
  40eb40:	enter  0x7d6f,0x96
  40eb44:	gs mov bl,0x8b
  40eb47:	(bad)  
  40eb48:	fstp   TBYTE PTR [eax]
  40eb4a:	cmp    BYTE PTR [edx],al
  40eb4c:	idiv   BYTE PTR [eax]
  40eb4e:	mov    dl,0x94
  40eb50:	fstp   DWORD PTR [ecx-0x57]
  40eb53:	outs   dx,BYTE PTR ds:[esi]
  40eb54:	cwde   
  40eb55:	fisttp QWORD PTR [ecx+0x3fb7cd0a]
  40eb5b:	daa    
  40eb5c:	and    ah,ch
  40eb5e:	imul   ebp,DWORD PTR [edx+0x32],0xd31a24bc
  40eb65:	out    0x26,eax
  40eb67:	in     eax,dx
  40eb68:	scas   eax,DWORD PTR es:[edi]
  40eb69:	pusha  
  40eb6a:	inc    eax
  40eb6b:	xchg   DWORD PTR [esi+ebx*2+0x26],edi
  40eb6f:	adc    DWORD PTR [esi-0x56fb58e],esp
  40eb75:	push   DWORD PTR ds:0x2db1823f
  40eb7b:	ret    0x3d3a
  40eb7e:	imul   ebp,DWORD PTR [edi],0x800a5dce
  40eb84:	sti    
  40eb85:	pop    ecx
  40eb86:	or     al,0xaa
  40eb88:	ret    0xac8b
  40eb8b:	mov    bh,0x81
  40eb8d:	mov    WORD PTR [ebp+ebx*8-0xe],ds
  40eb91:	jno    0x40eb6a
  40eb93:	jmp    0x40eb53
  40eb95:	cmp    ecx,esp
  40eb97:	jno    0x40eb82
  40eb99:	out    dx,eax
  40eb9a:	cs ins DWORD PTR es:[edi],dx
  40eb9c:	sbb    ah,ch
  40eb9e:	das    
  40eb9f:	mov    eax,ds:0x6636ac77
  40eba4:	push   ecx
  40eba5:	inc    esi
  40eba6:	jnp    0x40ec1c
  40eba8:	cmp    DWORD PTR [ecx],ecx
  40ebaa:	test   al,0x9
  40ebac:	in     al,0x95
  40ebae:	pop    ebx
  40ebaf:	add    BYTE PTR [ecx+0x52],cl
  40ebb2:	clc    
  40ebb3:	cmp    DWORD PTR [edi+0x260cba0b],0x550b8aaa
  40ebbd:	vsubsd xmm5,xmm3,QWORD PTR [ebp-0x318a0faf]
  40ebc5:	xor    al,BYTE PTR [ecx+0x2b]
  40ebc8:	inc    eax
  40ebc9:	pop    edx
  40ebca:	in     al,0xfd
  40ebcc:	lock cs hlt 
  40ebcf:	dec    esp
  40ebd0:	cmp    BYTE PTR [eax-0x3aa39d2d],0xd0
  40ebd7:	adc    dh,dh
  40ebd9:	jo     0x40ebc0
  40ebdb:	push   ds
  40ebdc:	mov    cl,0x50
  40ebde:	loope  0x40eb93
  40ebe0:	popa   
  40ebe1:	cmp    eax,0x46c4cef4
  40ebe6:	test   esi,0x570d6194
  40ebec:	iret   
  40ebed:	ss ret 0x9580
  40ebf1:	xchg   DWORD PTR [edi-0x68020909],edx
  40ebf7:	mov    BYTE PTR [ebx+0x1adca301],bl
  40ebfd:	cld    
  40ebfe:	xor    DWORD PTR [edi-0x36],edx
  40ec01:	jo     0x40ec6e
  40ec03:	pop    es
  40ec04:	in     eax,0x81
  40ec06:	and    bl,dl
  40ec08:	sbb    eax,0xfdf867e1
  40ec0d:	adc    al,0x5e
  40ec0f:	ret    0x47db
  40ec12:	imul   ebx,eax,0x4d3a865f
  40ec18:	aas    
  40ec19:	popa   
  40ec1a:	inc    eax
  40ec1b:	rcr    DWORD PTR [ebp-0x6e3b70d5],1
  40ec21:	mov    al,ds:0x9b797a37
  40ec26:	or     BYTE PTR [ecx],0xd5
  40ec29:	add    BYTE PTR ds:0xfe3747be,dh
  40ec2f:	call   0x7fc9d427
  40ec34:	sbb    eax,0xb14ea93e
  40ec39:	test   BYTE PTR [esi],0xe4
  40ec3c:	push   0x41671602
  40ec41:	cwde   
  40ec42:	fcom   DWORD PTR [edx-0x5d32ca1]
  40ec48:	stos   DWORD PTR es:[edi],eax
  40ec49:	outs   dx,BYTE PTR ds:[esi]
  40ec4a:	dec    ebx
  40ec4b:	stos   BYTE PTR es:[edi],al
  40ec4c:	jl     0x40ec73
  40ec4e:	sbb    BYTE PTR [edx-0x5d],cl
  40ec51:	(bad)  
  40ec52:	jns    0x40ecc5
  40ec54:	mov    dl,0x46
  40ec56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec57:	ins    BYTE PTR es:[edi],dx
  40ec58:	adc    al,0x10
  40ec5a:	sti    
  40ec5b:	push   es
  40ec5c:	ret    
  40ec5d:	xlat   BYTE PTR ds:[ebx]
  40ec5e:	push   ss
  40ec5f:	iret   
  40ec60:	sbb    ebp,ebx
  40ec62:	jbe    0x40ec79
  40ec64:	dec    edx
  40ec65:	adc    eax,0xda4749cb
  40ec6a:	(bad)  
  40ec6b:	jo     0x40ecc7
  40ec6d:	mov    ebp,0x8273a37b
  40ec72:	int3   
  40ec73:	retf   
  40ec74:	div    eax
  40ec76:	adc    al,0x62
  40ec78:	or     BYTE PTR [ebx+0xb4d461c],ah
  40ec7e:	js     0x40ecdb
  40ec80:	(bad)  
  40ec81:	sub    ebx,DWORD PTR [ebx+0x51]
  40ec84:	xchg   edx,eax
  40ec85:	adc    ch,BYTE PTR [ebx]
  40ec87:	mov    ebp,0xd998d37a
  40ec8c:	lods   eax,DWORD PTR ds:[esi]
  40ec8d:	inc    eax
  40ec8e:	and    DWORD PTR [esi+ebx*8],eax
  40ec91:	adc    eax,0xe34eaee8
  40ec96:	adc    eax,0xd69e6954
  40ec9b:	pmaxsw mm2,QWORD PTR [edi]
  40ec9e:	sub    bh,bl
  40eca0:	pop    ebp
  40eca1:	imul   esi,esp,0x5b055c10
  40eca7:	or     DWORD PTR [esi+0x75133483],esp
  40ecad:	jecxz  0x40ec7a
  40ecaf:	stc    
  40ecb0:	call   0xbc7c74c2
  40ecb5:	push   ds
  40ecb6:	mov    ds:0x125c201c,eax
  40ecbb:	sahf   
  40ecbc:	retf   0x35ad
  40ecbf:	rcl    BYTE PTR [ecx-0x6b9b37be],1
  40ecc5:	and    DWORD PTR [eax+0x7c5b50a4],ebx
  40eccb:	sti    
  40eccc:	pop    esi
  40eccd:	sub    BYTE PTR [ecx],ah
  40eccf:	pop    ss
  40ecd0:	add    BYTE PTR [eax-0x64eff9f3],al
  40ecd6:	cli    
  40ecd7:	pop    ds
  40ecd8:	xor    ebp,DWORD PTR [ecx+0x467d1214]
  40ecde:	xchg   esi,eax
  40ecdf:	dec    ecx
  40ece0:	pop    edi
  40ece1:	loop   0x40ed47
  40ece3:	lods   eax,DWORD PTR ds:[esi]
  40ece4:	xchg   DWORD PTR [esi],ebx
  40ece6:	mov    esi,0x405afbcc
  40eceb:	mov    esi,0xfec2b8ce
  40ecf0:	mov    cl,0x21
  40ecf2:	in     al,dx
  40ecf3:	sub    DWORD PTR [ecx+edi*4-0x56],eax
  40ecf7:	mov    DWORD PTR [esi+0x38],esi
  40ecfa:	(bad)  [ecx]
  40ecfc:	and    bl,BYTE PTR [ebp+0x79]
  40ecff:	mov    bl,0x66
  40ed01:	retf   0x8738
  40ed04:	pop    ebp
  40ed05:	push   esi
  40ed06:	pop    ebx
  40ed07:	and    eax,DWORD PTR [ebx-0x5c11520c]
  40ed0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed0e:	dec    eax
  40ed0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed10:	pop    es
  40ed11:	bnd jb 0x40eca2
  40ed14:	xchg   edi,eax
  40ed15:	icebp  
  40ed16:	repnz xor BYTE PTR [edx+0x5cbcba74],0xfb
  40ed1e:	push   ds
  40ed1f:	cmp    eax,0xe8eb2acf
  40ed24:	test   DWORD PTR [eax],edi
  40ed26:	das    
  40ed27:	or     eax,0xc9363ba6
  40ed2c:	xor    BYTE PTR ds:0xe11606e2,dl
  40ed32:	lds    esi,FWORD PTR cs:[edi-0x30]
  40ed36:	pop    esi
  40ed37:	repz ds das 
  40ed3a:	hlt    
  40ed3b:	and    edx,DWORD PTR [edx+0x71f01796]
  40ed41:	not    BYTE PTR [esi-0x4d]
  40ed44:	loop   0x40ed38
  40ed46:	scas   al,BYTE PTR es:[edi]
  40ed47:	adc    BYTE PTR [eax+0x66059d63],0x1d
  40ed4e:	fisub  WORD PTR [edx]
  40ed50:	push   ecx
  40ed51:	js     0x40ed6c
  40ed53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed54:	jbe    0x40ed8b
  40ed56:	jae    0x40ecf2
  40ed58:	out    dx,al
  40ed59:	mov    eax,ds:0xc6966093
  40ed5e:	(bad)  
  40ed5f:	out    0x90,eax
  40ed61:	inc    esp
  40ed62:	lods   eax,DWORD PTR ds:[esi]
  40ed63:	cmp    BYTE PTR cs:[ebp+0x6bad4801],dh
  40ed6a:	frstor [eax]
  40ed6c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ed6e:	out    dx,eax
  40ed6f:	loopne 0x40edac
  40ed71:	adc    bl,al
  40ed73:	mov    al,0x20
  40ed75:	je     0x40edb6
  40ed77:	xchg   ecx,eax
  40ed78:	out    0x9c,al
  40ed7a:	mov    ?,WORD PTR ds:0x68128395
  40ed80:	cld    
  40ed81:	push   edx
  40ed82:	and    al,0xa
  40ed84:	dec    edx
  40ed85:	repz pop esi
  40ed87:	shr    BYTE PTR [eax-0x16951f17],1
  40ed8d:	lahf   
  40ed8e:	jb     0x40ed84
  40ed90:	inc    ecx
  40ed91:	sub    eax,ecx
  40ed93:	mov    BYTE PTR [esi+0x43b5d604],ah
  40ed99:	dec    edi
  40ed9a:	xor    ebp,DWORD PTR [ecx]
  40ed9c:	mov    ds:0x57ac8d45,eax
  40eda1:	gs dec ecx
  40eda3:	aaa    
  40eda4:	daa    
  40eda5:	jmp    0xa8c2dc0f
  40edaa:	and    BYTE PTR [ebp-0x77],dh
  40edad:	popa   
  40edae:	int    0xb
  40edb0:	xor    al,0xd
  40edb2:	push   es
  40edb3:	and    ah,BYTE PTR ds:0x7b27673e
  40edb9:	xor    edx,ebx
  40edbb:	add    bh,BYTE PTR [eax]
  40edbd:	xchg   edx,eax
  40edbe:	test   eax,0x728276e6
  40edc3:	fcom   QWORD PTR [esi]
  40edc5:	mov    esi,0xef53c458
  40edca:	pop    ds
  40edcb:	outs   dx,BYTE PTR ds:[esi]
  40edcc:	stc    
  40edcd:	jbe    0x40eda4
  40edcf:	mov    cs,ebx
  40edd1:	xor    al,0xf8
  40edd3:	(bad)  
  40edd4:	dec    esp
  40edd5:	fdiv   st(6),st
  40edd7:	cld    
  40edd8:	iret   
  40edd9:	xor    eax,0x1fb635d0
  40edde:	leave  
  40eddf:	imul   ebx,DWORD PTR [edi+ecx*2-0x6af7fb4e],0x342e7150
  40edea:	fs loop 0x40ede2
  40eded:	push   ds
  40edee:	dec    esi
  40edef:	inc    edx
  40edf0:	repz or al,0xe4
  40edf3:	mov    bl,0xce
  40edf5:	and    esi,esi
  40edf7:	adc    DWORD PTR [esi],ebp
  40edf9:	add    BYTE PTR [edx-0x28],bh
  40edfc:	mov    ?,WORD PTR [ecx-0x4099bf24]
  40ee02:	fstp   TBYTE PTR [edx+0x3fe63099]
  40ee08:	cmp    BYTE PTR [esi+ebx*8-0x43],ch
  40ee0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee0d:	mov    ecx,0xaca55010
  40ee12:	jbe    0x40edf4
  40ee14:	fisub  WORD PTR ds:0xbd812f9a
  40ee1a:	mov    eax,0xcc9d3c97
  40ee1f:	jnp    0x40ee86
  40ee21:	aam    0x14
  40ee23:	mov    ecx,0xaca3afa9
  40ee28:	popa   
  40ee29:	adc    BYTE PTR [ebx],al
  40ee2b:	int3   
  40ee2c:	retf   
  40ee2d:	adc    eax,0x6f0c79d7
  40ee32:	bound  ecx,QWORD PTR [edx+0x1dac2f2c]
  40ee38:	and    al,0xa1
  40ee3a:	jbe    0x40eeb9
  40ee3c:	push   edx
  40ee3d:	jno    0x40ede2
  40ee3f:	cld    
  40ee40:	idiv   DWORD PTR [ebx-0x3b]
  40ee43:	sti    
  40ee44:	addr16 test al,0xe7
  40ee47:	xchg   ebp,eax
  40ee48:	scas   al,BYTE PTR es:[edi]
  40ee49:	mov    edi,0x15289930
  40ee4e:	sbb    ah,0x91
  40ee51:	push   0x5225878e
  40ee56:	lods   al,BYTE PTR ds:[esi]
  40ee57:	scas   al,BYTE PTR es:[edi]
  40ee58:	(bad)  
  40ee59:	jge    0x40ee61
  40ee5b:	fimul  DWORD PTR [ecx-0x1c]
  40ee5e:	cs mov ah,0xef
  40ee61:	in     al,0x1f
  40ee63:	xchg   esi,eax
  40ee64:	in     eax,0x7
  40ee66:	das    
  40ee67:	mov    ch,0x40
  40ee69:	jecxz  0x40edf0
  40ee6b:	pusha  
  40ee6c:	sbb    BYTE PTR [edi],cl
  40ee6e:	mov    dh,0xaf
  40ee70:	xor    ebp,DWORD PTR [edx+eax*8-0x3b]
  40ee74:	push   edi
  40ee75:	stos   DWORD PTR es:[edi],eax
  40ee76:	pop    ebp
  40ee77:	loop   0x40edf9
  40ee79:	xor    al,0x1a
  40ee7b:	es cs inc eax
  40ee7e:	leave  
  40ee7f:	into   
  40ee80:	push   ds
  40ee81:	adc    DWORD PTR [eax],ebx
  40ee83:	(bad)  
  40ee84:	int    0x27
  40ee86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee87:	mov    dh,0x15
  40ee89:	mov    esp,0xcfccf959
  40ee8e:	loope  0x40ee58
  40ee90:	in     eax,0x14
  40ee92:	or     ah,BYTE PTR [ebp-0x16]
  40ee95:	pop    es
  40ee96:	fld    TBYTE PTR [ecx-0x7f696a96]
  40ee9c:	cld    
  40ee9d:	add    ebx,DWORD PTR [edi]
  40ee9f:	int    0x9e
  40eea1:	jge    0x40eeac
  40eea3:	stos   BYTE PTR es:[edi],al
  40eea4:	cmp    ch,ah
  40eea6:	cld    
  40eea7:	fistp  DWORD PTR [esi-0x19]
  40eeaa:	adc    al,0x3b
  40eeac:	push   eax
  40eead:	scas   al,BYTE PTR es:[edi]
  40eeae:	ftst   
  40eeb0:	int    0x35
  40eeb2:	sub    cl,dh
  40eeb4:	mov    bh,0x48
  40eeb6:	stos   DWORD PTR es:[edi],eax
  40eeb7:	push   esp
  40eeb8:	push   ds
  40eeb9:	jbe    0x40eea0
  40eebb:	cmp    bh,al
  40eebd:	push   cs
  40eebe:	sub    esp,DWORD PTR [esi+0x7cf035d3]
  40eec4:	pop    ebp
  40eec5:	dec    ebx
  40eec6:	or     dh,0x83
  40eec9:	cmp    al,0xaf
  40eecb:	xor    ah,BYTE PTR [eax-0x72]
  40eece:	mov    edx,0x790333bd
  40eed3:	fld    DWORD PTR [ebp-0x47]
  40eed6:	add    BYTE PTR [eax],ch
  40eed8:	out    0x31,eax
  40eeda:	aaa    
  40eedb:	repz out 0xba,eax
  40eede:	test   eax,0x474e0514
  40eee3:	in     eax,0x5c
  40eee5:	mov    dh,0x1d
  40eee7:	mov    ebx,gs
  40eee9:	fist   WORD PTR [ecx+0x54]
  40eeec:	pop    esp
  40eeed:	(bad)  [ebx-0x73]
  40eef0:	pop    es
  40eef1:	clc    
  40eef2:	(bad)  
  40eef3:	xchg   ebp,eax
  40eef4:	enter  0xdd3,0x44
  40eef8:	or     dl,bh
  40eefa:	std    
  40eefb:	mov    esi,0x60d776e9
  40ef00:	aad    0xeb
  40ef02:	jl     0x40ef14
  40ef04:	jnp    0x40eec8
  40ef06:	aam    0x35
  40ef08:	xlat   BYTE PTR ds:[ebx]
  40ef09:	fs inc ebp
  40ef0b:	outs   dx,DWORD PTR ds:[esi]
  40ef0c:	add    edi,ecx
  40ef0e:	sub    al,0x3e
  40ef10:	adc    BYTE PTR [ebp-0x53],dh
  40ef13:	enter  0xb8e1,0x2c
  40ef17:	jbe    0x40ef47
  40ef19:	add    al,0xb8
  40ef1b:	and    DWORD PTR [eax+0x53],esp
  40ef1e:	lahf   
  40ef1f:	loopne 0x40ef97
  40ef21:	push   edi
  40ef22:	xchg   DWORD PTR [eax+0x45],esp
  40ef25:	loop   0x40ef3c
  40ef27:	(bad)  
  40ef28:	ins    BYTE PTR es:[edi],dx
  40ef29:	cdq    
  40ef2a:	mov    dh,0x6d
  40ef2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef2d:	xor    eax,0xd2d12246
  40ef32:	jae    0x40ef4e
  40ef34:	jno    0x40ef56
  40ef36:	ret    0xec68
  40ef39:	and    al,0xe5
  40ef3b:	out    0x10,al
  40ef3d:	xor    al,BYTE PTR [edx+0x4e]
  40ef40:	cs std 
  40ef42:	mov    edx,0xe353ca0f
  40ef47:	sbb    al,0x48
  40ef4a:	fist   DWORD PTR [bp+si]
  40ef4d:	mov    al,0x16
  40ef4f:	not    DWORD PTR [ebp-0x575ef461]
  40ef55:	out    dx,al
  40ef56:	add    al,0x50
  40ef58:	icebp  
  40ef59:	or     eax,0xf41be01e
  40ef5e:	sub    al,0x68
  40ef60:	push   0x845d2eb4
  40ef65:	ins    DWORD PTR es:[edi],dx
  40ef66:	rcr    bl,1
  40ef68:	add    bh,ah
  40ef6a:	pushf  
  40ef6b:	xchg   DWORD PTR [ebx+0x75e4068c],eax
  40ef71:	jl     0x40ef44
  40ef73:	test   BYTE PTR ds:0x5b2ea3fa,bh
  40ef79:	xchg   BYTE PTR [edi+0x40],dl
  40ef7c:	jecxz  0x40effc
  40ef7e:	cli    
  40ef7f:	lods   al,BYTE PTR ds:[esi]
  40ef80:	xlat   BYTE PTR ds:[ebx]
  40ef81:	loope  0x40efad
  40ef83:	inc    ebx
  40ef84:	mov    esp,0x3f5cabb4
  40ef89:	pop    esp
  40ef8a:	retf   
  40ef8b:	mov    eax,ds:0x944d7332
  40ef90:	add    dl,bh
  40ef92:	loop   0x40ef1b
  40ef94:	ss push ebx
  40ef96:	or     BYTE PTR [ecx-0x5f],ah
  40ef99:	push   esi
  40ef9a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40ef9c:	cli    
  40ef9d:	daa    
  40ef9e:	fimul  WORD PTR [esi-0x3c2ea8fc]
  40efa4:	fadd   QWORD PTR [edx]
  40efa6:	scas   eax,DWORD PTR es:[edi]
  40efa7:	push   ebp
  40efa8:	int3   
  40efa9:	pop    ebx
  40efaa:	loope  0x40efcd
  40efac:	mov    ecx,0x56d79174
  40efb1:	cs ds scas al,BYTE PTR es:[edi]
  40efb4:	arpl   WORD PTR [ecx],bx
  40efb6:	clc    
  40efb7:	fst    DWORD PTR [edi+edi*4]
  40efba:	or     esi,DWORD PTR [edx]
  40efbc:	shr    ah,1
  40efbe:	repz (bad) [ebp-0x362753a2]
  40efc5:	or     bl,cl
  40efc7:	inc    edx
  40efc8:	icebp  
  40efc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efca:	cmp    DWORD PTR [edx+ebx*8+0x4f],0xd52b2274
  40efd2:	ret    
  40efd3:	scas   al,BYTE PTR es:[edi]
  40efd4:	fbstp  TBYTE PTR [ebx+ebp*8-0x69]
  40efd8:	jmp    0xf70d:0xca0e83c6
  40efdf:	pop    ebp
  40efe0:	cmp    dl,BYTE PTR [eax]
  40efe2:	dec    esi
  40efe3:	nop
  40efe4:	pop    edx
  40efe5:	adc    dh,dh
  40efe7:	dec    ecx
  40efe8:	sub    al,BYTE PTR [ebx+ebp*8-0x21]
  40efec:	icebp  
  40efed:	or     eax,0xa106095d
  40eff2:	jecxz  0x40f011
  40eff4:	xor    ah,BYTE PTR [edi-0x1e]
  40eff7:	xlat   BYTE PTR ds:[ebx]
  40eff8:	cmp    BYTE PTR ds:0xbeb55029,dl
  40effe:	retf   0xee25
  40f001:	fwait
  40f002:	or     DWORD PTR [esi-0x4b],eax
  40f005:	ins    DWORD PTR es:[edi],dx
  40f006:	fs sbb al,0xc6
  40f009:	cmp    BYTE PTR [eax+0x770801f4],0xff
  40f010:	mov    esp,edi
  40f012:	arpl   di,di
  40f014:	int3   
  40f015:	out    dx,eax
  40f016:	hlt    
  40f017:	mov    ebx,0x716c8169
  40f01c:	mov    esi,0xb158ad75
  40f021:	mov    ds:0xecf300ef,eax
  40f026:	fs idiv DWORD PTR ds:[edx]
  40f02a:	les    ebx,FWORD PTR [edi-0x6e86e9a6]
  40f030:	ja     0x40efe4
  40f032:	mov    es,edx
  40f034:	clc    
  40f035:	sbb    eax,0x664f850f
  40f03a:	mov    esp,DWORD PTR [ebp+0x3aa068ff]
  40f040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f041:	push   ss
  40f042:	or     BYTE PTR [ebp+0x66],dl
  40f045:	fisttp WORD PTR [edx-0x23]
  40f048:	mov    ebp,0x7c56c90f
  40f04d:	(bad)  
  40f04e:	jp     0x40f0c2
  40f050:	(bad)  
  40f051:	xor    bh,BYTE PTR [edi]
  40f053:	xchg   edi,eax
  40f054:	cs add ch,bl
  40f057:	jge    0x40f0b7
  40f059:	mov    dl,0x8d
  40f05b:	mov    bl,BYTE PTR [esi-0x60]
  40f05e:	enter  0x1084,0xe6
  40f062:	lock cmp eax,0x9b5e2cc8
  40f068:	xchg   edx,eax
  40f069:	int    0x80
  40f06b:	outs   dx,DWORD PTR ds:[esi]
  40f06c:	push   0x8fb36066
  40f071:	stos   BYTE PTR es:[edi],al
  40f072:	xor    BYTE PTR [eax],ah
  40f074:	repz sahf 
  40f076:	jnp    0x40f0d9
  40f078:	cmp    ebp,DWORD PTR [ecx-0x10]
  40f07b:	push   0xffffffcf
  40f07d:	lahf   
  40f07e:	or     al,0x4e
  40f080:	push   cs
  40f081:	mov    eax,esi
  40f083:	into   
  40f084:	addr16 dec eax
  40f086:	jl     0x40f010
  40f088:	fist   DWORD PTR ds:0x1eb18bf
  40f08e:	addr16 dec ebp
  40f090:	xchg   edx,eax
  40f091:	fisubr DWORD PTR [eax]
  40f093:	int    0xfd
  40f095:	adc    BYTE PTR [eax-0x75],bl
  40f098:	neg    DWORD PTR [edx-0xe57db82]
  40f09e:	pusha  
  40f09f:	fs jnp 0x40f100
  40f0a2:	mov    dh,0x9f
  40f0a4:	jns    0x40f0cd
  40f0a6:	jbe    0x40f0b9
  40f0a8:	arpl   WORD PTR [esi-0x79],cx
  40f0ab:	(bad)  
  40f0ac:	mov    al,ds:0x24c949f3
  40f0b1:	ins    BYTE PTR es:[edi],dx
  40f0b2:	mov    bh,0x76
  40f0b4:	pop    edi
  40f0b5:	scas   al,BYTE PTR es:[edi]
  40f0b6:	pop    esp
  40f0b7:	in     eax,dx
  40f0b8:	dec    ebx
  40f0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ba:	sahf   
  40f0bb:	push   ecx
  40f0bc:	xor    BYTE PTR [ebx],ah
  40f0be:	out    0x33,al
  40f0c0:	xchg   ebx,eax
  40f0c1:	push   ebp
  40f0c2:	std    
  40f0c3:	stos   BYTE PTR es:[edi],al
  40f0c4:	not    BYTE PTR [ecx-0x74813e99]
  40f0ca:	xchg   edi,eax
  40f0cb:	jb     0x40f085
  40f0cd:	jae    0x40f09c
  40f0cf:	pop    es
  40f0d0:	sahf   
  40f0d1:	clc    
  40f0d2:	sti    
  40f0d3:	leave  
  40f0d4:	inc    eax
  40f0d5:	xor    al,bh
  40f0d7:	ror    DWORD PTR [ebp-0x668516f3],1
  40f0dd:	cmc    
  40f0de:	mov    eax,0xeed879c
  40f0e3:	push   cs
  40f0e4:	shl    dl,1
  40f0e6:	add    BYTE PTR [edi-0x22797b54],bl
  40f0ec:	mov    ecx,0x8d88e2fc
  40f0f1:	jns    0x40f0d4
  40f0f3:	xor    DWORD PTR [ebx-0x4f993a6a],edx
  40f0f9:	sbb    al,0x1c
  40f0fb:	sub    al,0x2b
  40f0fd:	out    0xa9,al
  40f0ff:	sub    DWORD PTR [edi],ecx
  40f101:	adc    BYTE PTR [eax+0x56130897],bh
  40f107:	(bad)  
  40f108:	cwde   
  40f109:	and    BYTE PTR [esi],bl
  40f10b:	(bad)  
  40f10c:	dec    eax
  40f10d:	xchg   esi,eax
  40f10e:	pop    esi
  40f10f:	das    
  40f110:	fimul  DWORD PTR [ebp+eiz*4+0x3763f15b]
  40f117:	iret   
  40f118:	call   0x509:0x64387cc5
  40f11f:	sar    BYTE PTR ds:0xe82b4d01,cl
  40f125:	jae    0x40f16a
  40f127:	dec    esi
  40f128:	mov    dl,0x9e
  40f12a:	dec    ecx
  40f12b:	icebp  
  40f12c:	cmp    ch,0xc7
  40f12f:	in     al,0x58
  40f131:	dec    ebx
  40f132:	adc    bh,BYTE PTR [ecx+edi*8+0x3cfc8183]
  40f139:	pop    eax
  40f13a:	or     dh,al
  40f13c:	mov    bl,0xf7
  40f13e:	inc    esp
  40f13f:	ret    
  40f140:	sub    eax,0x3e82c345
  40f145:	dec    ecx
  40f146:	pop    ecx
  40f147:	xchg   esi,eax
  40f148:	loop   0x40f127
  40f14a:	nop
  40f14b:	leave  
  40f14c:	mov    WORD PTR [bp-0x19],?
  40f150:	jmp    0xdfeafca2
  40f155:	and    BYTE PTR [ebp-0x64a989d],bh
  40f15b:	mov    bl,BYTE PTR [eax+0x66850d06]
  40f161:	fistp  QWORD PTR [ebx]
  40f164:	pushf  
  40f165:	adc    ecx,edx
  40f167:	es mov ebx,0x7fff32ed
  40f16d:	inc    ebp
  40f16e:	in     eax,dx
  40f16f:	cdq    
  40f170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f171:	dec    edx
  40f172:	jp     0x40f152
  40f174:	arpl   dx,cx
  40f176:	adc    eax,0xc6da02f1
  40f17b:	adc    esi,DWORD PTR [ecx-0x6838244b]
  40f181:	xchg   esi,eax
  40f182:	cli    
  40f183:	xor    eax,0x7c384277
  40f188:	and    ch,bh
  40f18a:	scas   al,BYTE PTR es:[edi]
  40f18b:	sub    edx,DWORD PTR [edi+0x50]
  40f18e:	inc    esi
  40f18f:	adc    edi,ebx
  40f191:	pop    ebx
  40f192:	xchg   DWORD PTR [edi],edx
  40f194:	inc    esi
  40f195:	or     DWORD PTR [ecx],esi
  40f197:	xlat   BYTE PTR ds:[ebx]
  40f198:	aad    0x88
  40f19a:	adc    DWORD PTR [edx+ecx*4+0x7d],0x18965ed0
  40f1a2:	inc    ecx
  40f1a3:	mov    ebp,0x494579fb
  40f1a8:	es lahf 
  40f1aa:	mov    bh,0x2
  40f1ac:	push   eax
  40f1ad:	pop    ebp
  40f1ae:	das    
  40f1af:	cld    
  40f1b0:	imul   edi,DWORD PTR [esi+0x17],0x5b3618f4
  40f1b7:	dec    esi
  40f1b8:	ins    DWORD PTR es:[edi],dx
  40f1b9:	add    DWORD PTR [eax],0xffffff97
  40f1bc:	es xchg edx,eax
  40f1be:	and    BYTE PTR [ecx+eiz*1-0x2e6b5e75],bh
  40f1c5:	ret    0xac14
  40f1c8:	in     eax,0x5d
  40f1ca:	sbb    al,0xfd
  40f1cc:	push   cs
  40f1cd:	mov    ss,WORD PTR [edx-0x5f]
  40f1d0:	sbb    eax,0xe0f321d6
  40f1d5:	jl     0x40f1e0
  40f1d7:	bnd je 0x40f1b7
  40f1da:	inc    edi
  40f1db:	sub    eax,0xd18ceb5d
  40f1e0:	outs   dx,DWORD PTR ds:[esi]
  40f1e1:	and    eax,0x94d096f3
  40f1e6:	addr16 mov bh,0x15
  40f1e9:	push   0x69
  40f1eb:	repz aas 
  40f1ed:	daa    
  40f1ee:	pusha  
  40f1ef:	shl    BYTE PTR [edx-0x5bdbcba7],0x49
  40f1f6:	mul    BYTE PTR [ecx-0x6e1e79c5]
  40f1fc:	fcomp  QWORD PTR [esi]
  40f1fe:	aam    0x8f
  40f200:	jge    0x40f263
  40f202:	imul   eax,DWORD PTR [ebp+edi*1+0x30b12f33],0xffffffd1
  40f20a:	pop    ecx
  40f20b:	and    al,0x1d
  40f20d:	mov    dh,0x95
  40f20f:	test   al,0x71
  40f211:	push   esp
  40f212:	in     eax,0xfc
  40f214:	sub    bh,BYTE PTR [edi]
  40f216:	mov    bh,0x81
  40f218:	stos   BYTE PTR es:[edi],al
  40f219:	adc    edx,DWORD PTR [edx-0x31]
  40f21c:	push   ecx
  40f21d:	dec    edx
  40f21e:	and    eax,0xbc296901
  40f223:	ins    BYTE PTR es:[edi],dx
  40f224:	das    
  40f225:	mov    al,0x4
  40f227:	(bad)  
  40f229:	pop    esp
  40f22a:	adc    eax,0xff6dc3e4
  40f22f:	aas    
  40f230:	mov    DWORD PTR [ebp+0x58],edi
  40f233:	out    dx,al
  40f234:	add    BYTE PTR [ebx+0x26ac648],dh
  40f23a:	dec    ecx
  40f23b:	jo     0x40f22e
  40f23d:	out    dx,eax
  40f23e:	mov    ebp,0x6294db5e
  40f243:	(bad)  
  40f244:	sub    al,0x34
  40f246:	or     ecx,ebp
  40f248:	fld    TBYTE PTR [eax-0x74]
  40f24b:	std    
  40f24c:	add    al,0xc3
  40f24e:	xchg   ebp,eax
  40f24f:	xchg   ebx,eax
  40f250:	or     ecx,eax
  40f252:	jae    0x40f2c1
  40f254:	cwde   
  40f255:	xor    esi,DWORD PTR ds:0x5e3f8cbe
  40f25b:	add    bl,bh
  40f25d:	lahf   
  40f25e:	mov    edi,0x14341cdb
  40f263:	neg    bh
  40f265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f266:	pop    edi
  40f267:	pusha  
  40f268:	scas   al,BYTE PTR es:[edi]
  40f269:	aas    
  40f26a:	mov    ecx,0x4650e180
  40f26f:	test   eax,0xe1d32129
  40f274:	(bad)  
  40f275:	pop    esi
  40f276:	mov    ebp,0xe72eee39
  40f27b:	imul   ecx,DWORD PTR [esi],0xffffff9d
  40f27e:	jo     0x40f27c
  40f280:	ret    0xc760
  40f283:	xor    eax,0x8e4db50a
  40f288:	mov    ebx,0xd3931445
  40f28d:	sub    eax,0xaf9da2de
  40f292:	pop    ds
  40f293:	test   eax,0xda1c106
  40f298:	sub    BYTE PTR [ecx-0x35be980c],bh
  40f29e:	push   esp
  40f29f:	and    dh,ah
  40f2a1:	jecxz  0x40f2f4
  40f2a3:	cli    
  40f2a4:	mov    dl,0xf4
  40f2a6:	sub    eax,0x661849fa
  40f2ab:	(bad)  
  40f2ac:	push   ebp
  40f2ad:	pusha  
  40f2ae:	inc    esi
  40f2af:	sbb    edx,edi
  40f2b1:	sub    BYTE PTR [ebx+edx*8-0x3a],ah
  40f2b5:	iret   
  40f2b6:	fbstp  TBYTE PTR [ecx+0x3]
  40f2b9:	adc    eax,0x6a7e9258
  40f2be:	jne    0x40f315
  40f2c0:	lds    edx,FWORD PTR [ecx]
  40f2c2:	adc    al,0xeb
  40f2c4:	xchg   BYTE PTR [edx-0x787558cd],bl
  40f2ca:	mov    bh,0xe8
  40f2cc:	dec    ebx
  40f2cd:	out    0x29,eax
  40f2cf:	lock movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f2d2:	dec    ebx
  40f2d3:	imul   dh
  40f2d5:	pushf  
  40f2d6:	popa   
  40f2d7:	mov    dl,0xd
  40f2d9:	ja     0x40f32d
  40f2db:	mov    eax,ds:0x674bb602
  40f2e0:	shl    DWORD PTR [eax],cl
  40f2e2:	outs   dx,DWORD PTR ds:[esi]
  40f2e3:	pop    ebx
  40f2e4:	fild   DWORD PTR [edx]
  40f2e6:	aaa    
  40f2e7:	ja     0x40f2e8
  40f2e9:	fldl2e 
  40f2eb:	fldcw  WORD PTR [esi+0x7883c084]
  40f2f1:	ss push ds
  40f2f3:	test   DWORD PTR [eax-0x6d],ebp
  40f2f6:	cs fisubr WORD PTR ss:[ecx+0x12]
  40f2fb:	jb     0x40f329
  40f2fd:	cmp    eax,esp
  40f2ff:	cli    
  40f300:	push   ds
  40f301:	sbb    eax,0x8c3cce2f
  40f306:	jle    0x40f336
  40f308:	ins    BYTE PTR es:[edi],dx
  40f309:	xor    DWORD PTR [eax+0x3f9de77c],esp
  40f30f:	scas   eax,DWORD PTR es:[edi]
  40f310:	dec    edi
  40f311:	or     edx,DWORD PTR [edi+0x2a]
  40f314:	adc    al,0xdd
  40f316:	inc    eax
  40f317:	jg     0x40f33a
  40f319:	lahf   
  40f31a:	repnz sub ebx,DWORD PTR [ecx]
  40f31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f31e:	pop    ds
  40f31f:	outs   dx,BYTE PTR ds:[esi]
  40f320:	dec    eax
  40f321:	cmp    cl,BYTE PTR [ebx+0x286e57e9]
  40f327:	ds dec edi
  40f329:	add    al,0x43
  40f32b:	mov    eax,0x3526194e
  40f330:	cld    
  40f331:	repnz outs dx,DWORD PTR ds:[esi]
  40f333:	add    esi,DWORD PTR [edi-0x4b]
  40f336:	cwde   
  40f337:	(bad)  
  40f338:	(bad)  [eax+0x3d85a1f9]
  40f33e:	mul    BYTE PTR [esi]
  40f340:	loop   0x40f317
  40f342:	add    ebp,edx
  40f344:	pop    esi
  40f345:	mov    al,0xd
  40f347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f348:	shr    DWORD PTR [ecx],cl
  40f34a:	ja     0x40f3a9
  40f34c:	adc    edx,DWORD PTR [eax]
  40f34e:	scas   eax,DWORD PTR es:[edi]
  40f34f:	pop    edx
  40f350:	jb     0x40f35e
  40f352:	adc    BYTE PTR [edx],ah
  40f354:	dec    ecx
  40f355:	xor    BYTE PTR [ecx+0x7d53247e],ch
  40f35b:	sub    al,0xf1
  40f35d:	retf   0xf3d3
  40f360:	call   0x1f8eee9d
  40f365:	out    dx,al
  40f366:	adc    eax,0xa85c4c58
  40f36b:	push   ds
  40f36c:	mov    DWORD PTR ss:[edi-0x35],ecx
  40f370:	mov    cl,0x38
  40f372:	mov    eax,0x2d296fd8
  40f377:	push   ebp
  40f378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f379:	shl    BYTE PTR [edi+0x1f88ee04],0x16
  40f380:	sub    edi,DWORD PTR [ecx+ebx*2-0x6b8df1f1]
  40f387:	cmp    esp,edi
  40f389:	pop    eax
  40f38a:	mov    esi,0xcfcd19b5
  40f38f:	fs sbb eax,0xa14d9ec7
  40f395:	push   cs
  40f396:	cs call 0x2fc5:0x8404b5bc
  40f39e:	xchg   edx,eax
  40f39f:	adc    esi,DWORD PTR [edx-0x8]
  40f3a2:	jb     0x40f3cf
  40f3a4:	lods   eax,DWORD PTR ds:[esi]
  40f3a5:	sbb    eax,0xebff67e
  40f3aa:	stos   DWORD PTR es:[edi],eax
  40f3ab:	imul   ecx,DWORD PTR ds:0xe7fd8290,0xffffffd6
  40f3b2:	lods   eax,DWORD PTR ds:[esi]
  40f3b3:	mov    ah,BYTE PTR [edx+0x2a]
  40f3b6:	lods   al,BYTE PTR ds:[esi]
  40f3b7:	out    0xef,eax
  40f3b9:	addr16 popf 
  40f3bb:	fdivr  QWORD PTR ds:0xf4988305
  40f3c1:	jns    0x40f433
  40f3c3:	jo     0x40f3e7
  40f3c5:	pop    DWORD PTR [ecx+0x46]
  40f3c8:	shrd   DWORD PTR [edx-0x13],esi,cl
  40f3cc:	stc    
  40f3cd:	mov    gs,esi
  40f3cf:	mov    DWORD PTR [ecx+esi*2-0x7e],esi
  40f3d3:	gs inc ecx
  40f3d5:	mov    DWORD PTR [ebp+0x75d7f8fc],0xf6e89191
  40f3df:	outs   dx,BYTE PTR ds:[esi]
  40f3e0:	lods   eax,DWORD PTR ds:[esi]
  40f3e1:	pop    ecx
  40f3e2:	push   esi
  40f3e3:	sbb    ax,0xad12
  40f3e7:	pusha  
  40f3e8:	dec    ecx
  40f3e9:	xor    al,0x97
  40f3eb:	inc    esi
  40f3ec:	aaa    
  40f3ed:	push   ecx
  40f3ee:	xchg   edi,eax
  40f3ef:	push   ebx
  40f3f0:	adc    DWORD PTR ds:0x881a24eb,edi
  40f3f6:	call   0x5883:0x811ad545
  40f3fd:	mov    esi,0x484ba093
  40f402:	add    DWORD PTR [edi-0x1fe9bf73],eax
  40f408:	push   cs
  40f409:	rcr    BYTE PTR [bx+si+0x27],1
  40f40d:	neg    ch
  40f40f:	xchg   edi,eax
  40f410:	dec    esi
  40f411:	fs dec edx
  40f413:	push   ecx
  40f414:	mov    ds:0x357770b0,al
  40f419:	pop    ds
  40f41a:	sub    eax,0x48ee6e49
  40f41f:	dec    edi
  40f420:	xchg   esi,eax
  40f421:	push   es
  40f422:	or     BYTE PTR [esi+eax*4-0x6b],ah
  40f426:	jns    0x40f3a9
  40f428:	sbb    eax,0xfd02586c
  40f42d:	jne    0x40f3fc
  40f42f:	lea    ebp,[eax-0x50aa14fc]
  40f435:	inc    ebp
  40f436:	lahf   
  40f437:	leave  
  40f438:	shl    BYTE PTR [esi+0x675848ea],1
  40f43e:	fdivr  DWORD PTR [ebx]
  40f440:	mov    fs,WORD PTR [ebp+ebp*2-0x48f4e923]
  40f447:	mov    WORD PTR [eax],es
  40f449:	mov    ah,0x24
  40f44b:	arpl   WORD PTR ds:0x7a71bfbd,sp
  40f451:	and    al,ah
  40f453:	pop    esi
  40f454:	pushf  
  40f455:	lea    edx,[esp+esi*2-0x6be6821d]
  40f45c:	ins    BYTE PTR es:[edi],dx
  40f45d:	pop    esp
  40f45e:	in     eax,dx
  40f45f:	jae    0x40f4b4
  40f461:	inc    esi
  40f462:	sub    al,0x13
  40f464:	mov    esi,0x18784e27
  40f469:	inc    ecx
  40f46a:	add    bh,bl
  40f46c:	and    edx,eax
  40f46e:	call   0x9c1f:0x53d89008
  40f475:	test   eax,0x25691cfa
  40f47a:	mov    ecx,0x582e3580
  40f47f:	icebp  
  40f480:	or     al,cl
  40f482:	test   BYTE PTR [ebp+0x250112ee],al
  40f488:	movsx  esi,WORD PTR [ecx+0x6f913baa]
  40f48f:	jle    0x40f470
  40f491:	sub    dh,BYTE PTR [edx+0x5a]
  40f494:	pop    ebp
  40f496:	dec    esp
  40f497:	xor    BYTE PTR ds:0xe852be91,bl
  40f49d:	dec    edi
  40f49e:	es sub al,0x56
  40f4a1:	fsubr  DWORD PTR [ebx-0x7e]
  40f4a4:	xchg   ebp,eax
  40f4a5:	add    DWORD PTR [edi+0x71],0x4e
  40f4a9:	jne    0x40f525
  40f4ab:	sbb    BYTE PTR [eax-0x1d],cl
  40f4ae:	les    eax,FWORD PTR ds:0xc9a18d75
  40f4b4:	cmp    BYTE PTR [ecx-0x28881870],ah
  40f4ba:	nop
  40f4bb:	in     al,0x61
  40f4bd:	cmp    al,0x34
  40f4bf:	jb     0x40f4a6
  40f4c1:	jns    0x40f4d5
  40f4c3:	pop    ds
  40f4c4:	mov    es,WORD PTR [ebp+0x19]
  40f4c7:	and    al,0xba
  40f4c9:	pop    ebx
  40f4ca:	push   0x80db3c35
  40f4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d0:	cmp    al,0xa4
  40f4d2:	pushf  
  40f4d3:	js     0x40f510
  40f4d5:	or     cl,BYTE PTR [edx-0x3f]
  40f4d8:	xchg   esi,eax
  40f4d9:	cdq    
  40f4da:	mov    eax,ds:0xe999fde3
  40f4df:	cmp    edi,DWORD PTR [edx+0x44ce6c01]
  40f4e5:	cdq    
  40f4e6:	mov    bh,0x98
  40f4e8:	inc    edx
  40f4e9:	int    0xb7
  40f4eb:	retf   0x7fa9
  40f4ee:	xchg   ecx,eax
  40f4ef:	dec    esi
  40f4f0:	je     0x40f567
  40f4f2:	(bad)  
  40f4f4:	pop    edx
  40f4f5:	dec    edx
  40f4f6:	push   ds
  40f4f7:	retf   0xae55
  40f4fa:	mov    gs,WORD PTR fs:[edi-0x38]
  40f4fe:	vrsqrtps ymm3,ymm5
  40f502:	mov    eax,ds:0x247bd2a
  40f507:	cld    
  40f508:	sbb    BYTE PTR [ebx],0x8f
  40f50b:	mov    ebx,0x6bfcb8e
  40f510:	mov    ds:0xf6be5682,eax
  40f515:	mov    edx,0x40463715
  40f51a:	inc    edi
  40f51b:	shl    ebx,cl
  40f51d:	out    0x95,eax
  40f51f:	pop    edx
  40f520:	retf   
  40f521:	in     al,dx
  40f522:	jbe    0x40f58e
  40f524:	or     bl,BYTE PTR [esi+0x31]
  40f527:	adc    esi,esi
  40f529:	stos   BYTE PTR es:[edi],al
  40f52a:	push   es
  40f52b:	mov    edi,DWORD PTR [ebp+0x6c]
  40f52e:	lods   al,BYTE PTR ds:[esi]
  40f52f:	fadd   st,st(5)
  40f531:	sub    DWORD PTR [edx+0x79],0x5d
  40f535:	and    DWORD PTR [edx-0x64],esi
  40f538:	adc    edi,edx
  40f53a:	lds    ebx,FWORD PTR [ebp-0x424d5d47]
  40f540:	cmp    edx,DWORD PTR [ebx]
  40f542:	push   ss
  40f543:	scas   eax,DWORD PTR es:[edi]
  40f544:	mov    ah,0xb7
  40f546:	dec    ecx
  40f547:	pop    edi
  40f548:	nop
  40f549:	retf   
  40f54a:	sub    edx,eax
  40f54c:	std    
  40f54d:	xor    ebx,eax
  40f54f:	sahf   
  40f550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f551:	jg     0x40f518
  40f553:	ret    0x6b70
  40f556:	ficom  WORD PTR [edx+0x6e9aef26]
  40f55c:	xchg   ebp,eax
  40f55d:	adc    edi,esi
  40f55f:	lock jecxz 0x40f542
  40f562:	mov    ch,0xc3
  40f564:	or     ebx,DWORD PTR [edi-0x4529d2de]
  40f56a:	push   0x40
  40f56c:	dec    esi
  40f56d:	inc    esi
  40f56e:	inc    ebx
  40f56f:	pop    ds
  40f570:	xchg   esi,eax
  40f571:	lahf   
  40f572:	sub    eax,0x4158f0cb
  40f577:	cmp    ebx,DWORD PTR [edi+ebp*1]
  40f57a:	pop    ss
  40f57b:	xor    ah,BYTE PTR [ebx]
  40f57d:	xchg   DWORD PTR [edx-0x5a],ecx
  40f580:	(bad)  
  40f581:	out    0xc8,al
  40f583:	clc    
  40f584:	sbb    eax,0x7866a87
  40f589:	add    ebx,DWORD PTR [edi]
  40f58b:	xchg   ecx,eax
  40f58c:	outs   dx,BYTE PTR gs:[esi]
  40f58e:	es mov esp,0x8879ae82
  40f594:	sub    BYTE PTR [edi+0x35],dh
  40f597:	adc    DWORD PTR [esi+0x65],ebx
  40f59a:	loop   0x40f5b8
  40f59c:	dec    edi
  40f59d:	mov    eax,0xca24fce3
  40f5a2:	fadd   QWORD PTR [esi]
  40f5a4:	lea    eax,[edx]
  40f5a6:	inc    ebx
  40f5a7:	inc    ecx
  40f5a8:	xchg   esp,eax
  40f5a9:	imul   ebx,DWORD PTR [edx-0x45bdce8a],0x16
  40f5b0:	retf   0x79fd
  40f5b3:	xchg   edi,eax
  40f5b4:	arpl   WORD PTR [eax],sp
  40f5b6:	ins    DWORD PTR es:[edi],dx
  40f5b7:	jno    0x40f545
  40f5b9:	push   esi
  40f5ba:	aam    0x1c
  40f5bc:	sahf   
  40f5bd:	sub    edi,DWORD PTR [edx]
  40f5bf:	(bad)  
  40f5c0:	mov    cl,0x3b
  40f5c2:	push   ecx
  40f5c3:	push   edx
  40f5c4:	sbb    al,0xff
  40f5c6:	fs out dx,al
  40f5c8:	jo     0x40f62a
  40f5ca:	ins    DWORD PTR es:[edi],dx
  40f5cb:	xor    DWORD PTR [edx-0x5427c00c],ebp
  40f5d1:	sub    al,0xd8
  40f5d3:	and    bh,BYTE PTR [edx+ebx*4]
  40f5d6:	cmp    ch,dh
  40f5d8:	jmp    0xeafcd5dc
  40f5dd:	call   0xf26a:0x63859249
  40f5e4:	xchg   esi,eax
  40f5e5:	mov    bl,BYTE PTR [edx]
  40f5e7:	retf   
  40f5e8:	or     BYTE PTR [edi+0x63aeeb97],dh
  40f5ee:	mov    esp,0x568ef00f
  40f5f3:	fcom   QWORD PTR [edi+0x14]
  40f5f6:	outs   dx,BYTE PTR ds:[esi]
  40f5f7:	inc    esp
  40f5f8:	jl     0x40f5df
  40f5fa:	test   BYTE PTR [edi-0x77],dh
  40f5fd:	mov    DWORD PTR [eax],edi
  40f5ff:	pop    ds
  40f600:	fdivr  DWORD PTR [esi-0x2bfd9b59]
  40f606:	sbb    edx,DWORD PTR [edx+0x563ad924]
  40f60c:	icebp  
  40f60d:	rcr    dl,1
  40f60f:	out    0xb1,eax
  40f611:	nop
  40f612:	cwde   
  40f613:	pop    esi
  40f614:	sub    ebx,ebp
  40f616:	dec    ebx
  40f617:	add    bh,cl
  40f619:	push   edx
  40f61a:	int    0x7
  40f61c:	lds    ecx,FWORD PTR [edx-0x3dc471e2]
  40f622:	sub    bh,BYTE PTR [ecx-0x2f]
  40f625:	mov    ch,0x83
  40f627:	sbb    ebp,DWORD PTR [edi+edx*8]
  40f62a:	sub    eax,0xc50c54f3
  40f62f:	mov    eax,ds:0xaf636d7b
  40f634:	add    al,0x91
  40f636:	pop    esi
  40f637:	xchg   esp,eax
  40f638:	out    dx,al
  40f639:	ror    BYTE PTR [ebp-0x5b],0x68
  40f63d:	sub    eax,0x2c
  40f640:	addr16 push ebp
  40f642:	dec    edx
  40f643:	mov    ebx,DWORD PTR gs:[ecx+ebp*8-0x7d]
  40f648:	(bad)  [esi]
  40f64a:	cmp    ah,ch
  40f64c:	stc    
  40f64d:	jp     0x40f5ed
  40f64f:	outs   dx,DWORD PTR ds:[esi]
  40f650:	jl     0x40f5e3
  40f652:	push   cs
  40f653:	xor    al,0xb8
  40f655:	mov    dl,0x95
  40f657:	pop    edx
  40f658:	xchg   ebp,eax
  40f659:	adc    BYTE PTR [ebx-0x7],ah
  40f65c:	mov    eax,ds:0x757dd9e5
  40f661:	pslld  mm1,QWORD PTR [ecx+0xf]
  40f665:	inc    ebp
  40f666:	adc    BYTE PTR [esi+0x22],ah
  40f669:	xchg   ebp,eax
  40f66a:	add    BYTE PTR ds:0x77cfe29e,bl
  40f670:	sub    BYTE PTR [edx-0x6d81bebc],ch
  40f676:	aad    0xaf
  40f678:	ins    DWORD PTR es:[edi],dx
  40f679:	fsubrp st(0),st
  40f67b:	xchg   edx,eax
  40f67c:	adc    DWORD PTR [esi-0x1b7892ef],ecx
  40f682:	jmp    0xd149c2ab
  40f687:	cwde   
  40f688:	xor    BYTE PTR [ebp-0x7d7b9fb0],0x19
  40f68f:	push   edi
  40f690:	cmp    DWORD PTR [ebx+0x655d6156],esp
  40f696:	xchg   BYTE PTR [edx],ch
  40f698:	mov    al,ds:0xe83ac434
  40f69d:	out    dx,eax
  40f69e:	sub    ch,BYTE PTR [esi+0x16]
  40f6a1:	repnz mov ah,0x74
  40f6a4:	or     al,0x57
  40f6a6:	cld    
  40f6a7:	iret   
  40f6a8:	cmp    DWORD PTR [ebp+0x326e5418],edi
  40f6ae:	dec    ecx
  40f6af:	daa    
  40f6b0:	inc    ebp
  40f6b1:	adc    al,0x49
  40f6b3:	stc    
  40f6b4:	daa    
  40f6b5:	sub    eax,0x68d2c129
  40f6ba:	into   
  40f6bb:	or     ch,ch
  40f6bd:	and    eax,0x54fd34e3
  40f6c2:	int3   
  40f6c3:	ror    BYTE PTR [ecx-0x50],cl
  40f6c6:	jmp    FWORD PTR [ebx+0x13e24296]
  40f6cc:	mov    edi,0x51f3f915
  40f6d1:	or     eax,0xa6cbeee9
  40f6d6:	lods   al,BYTE PTR ds:[esi]
  40f6d7:	xchg   esp,eax
  40f6d8:	and    eax,DWORD PTR ds:0x5e48847a
  40f6de:	inc    esi
  40f6df:	popf   
  40f6e0:	xchg   edx,eax
  40f6e1:	sub    al,0xa6
  40f6e3:	jb     0x40f700
  40f6e5:	ins    DWORD PTR es:[edi],dx
  40f6e6:	stos   BYTE PTR es:[edi],al
  40f6e7:	test   eax,0xb29d5e2e
  40f6ec:	jne    0x40f74f
  40f6ee:	push   eax
  40f6ef:	dec    esp
  40f6f0:	das    
  40f6f1:	scas   al,BYTE PTR es:[edi]
  40f6f2:	icebp  
  40f6f3:	mov    esp,0x8cde6ec5
  40f6f8:	outs   dx,DWORD PTR ds:[esi]
  40f6f9:	jns    0x40f71b
  40f6fb:	aad    0x65
  40f6fd:	add    al,0x1f
  40f6ff:	ds stc 
  40f701:	push   cs
  40f702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f703:	dec    ebp
  40f704:	jle    0x40f75f
  40f706:	adc    dh,dh
  40f708:	cmp    ah,0x2e
  40f70b:	shr    BYTE PTR [esi],0x1e
  40f70e:	add    bh,bh
  40f710:	cmp    ecx,DWORD PTR [esi-0x25]
  40f713:	jmp    DWORD PTR ds:0x8eab0fe8
  40f719:	aam    0x56
  40f71b:	jmp    0x40f6fb
  40f71d:	add    edx,0x8
  40f720:	xchg   DWORD PTR [edi+esi*2+0x46c64992],ecx
  40f727:	xchg   edi,eax
  40f728:	inc    esp
  40f729:	cmp    esp,ebp
  40f72b:	jae    0x40f795
  40f72d:	pop    ebp
  40f72e:	fcomp  QWORD PTR es:[edi+ebp*4-0x748b4598]
  40f736:	sbb    ah,BYTE PTR [eax-0x2b]
  40f739:	sbb    ebx,DWORD PTR [esi-0x46bcac55]
  40f73f:	xchg   BYTE PTR [edx+0x7177e923],bl
  40f745:	fs mov esi,0x2dacba0
  40f74b:	int    0xfd
  40f74d:	pushf  
  40f74e:	mov    dh,0x97
  40f750:	rol    DWORD PTR [edi-0x6b25083c],0x49
  40f757:	xchg   esp,eax
  40f758:	ret    
  40f759:	push   edi
  40f75a:	xrelease mov DWORD PTR [edi-0x69673901],ebx
  40f761:	add    al,0x22
  40f763:	ficomp DWORD PTR [edi]
  40f765:	inc    edi
  40f766:	mov    ecx,0x5586ec87
  40f76b:	and    dh,0xf4
  40f76e:	lds    ecx,FWORD PTR [edx-0x21]
  40f771:	popa   
  40f772:	pop    ebp
  40f773:	data16 add dh,ah
  40f776:	mov    ebp,0x3b4eb830
  40f77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f77c:	call   0xee9e:0x717f7edc
  40f783:	rcr    BYTE PTR [esi-0xf],cl
  40f786:	push   ds
  40f787:	and    cl,dl
  40f789:	loopne 0x40f750
  40f78b:	dec    ecx
  40f78c:	xchg   DWORD PTR [edi],eax
  40f78e:	and    al,0xed
  40f790:	int    0xfb
  40f792:	add    dh,dh
  40f794:	mov    esp,DWORD PTR [edi+0x2e]
  40f797:	fidivr WORD PTR [edi+0x3c5861ed]
  40f79d:	inc    esi
  40f79e:	add    al,0xba
  40f7a0:	mov    al,ds:0x82c06283
  40f7a5:	ret    
  40f7a6:	shr    BYTE PTR [edi],0xe5
  40f7a9:	sub    eax,DWORD PTR [edx+0x1039c3ff]
  40f7af:	les    edi,FWORD PTR [ecx+esi*8+0x17506cde]
  40f7b6:	add    edi,DWORD PTR [edx+0x68]
  40f7b9:	push   0xc8e04fd9
  40f7be:	dec    edi
  40f7bf:	cli    
  40f7c0:	jns    0x40f80c
  40f7c2:	lea    edi,[esi+ecx*1+0x349b0852]
  40f7c9:	mov    eax,DWORD PTR [eax+0x77]
  40f7cc:	sbb    al,0xf2
  40f7ce:	into   
  40f7cf:	in     al,0x53
  40f7d1:	popa   
  40f7d2:	inc    esp
  40f7d3:	cmc    
  40f7d4:	sbb    BYTE PTR [ebx-0x68],al
  40f7d7:	mov    ebx,0x99797834
  40f7dc:	rcl    BYTE PTR [ebx-0x7a],1
  40f7df:	or     dl,BYTE PTR gs:[edi+0xd]
  40f7e3:	xchg   ecx,eax
  40f7e4:	push   eax
  40f7e5:	sbb    ch,BYTE PTR [ebx+0x59]
  40f7e8:	sbb    cl,ch
  40f7ea:	sub    eax,0xb0fd15e2
  40f7ef:	int    0x3a
  40f7f1:	xor    DWORD PTR ds:0x93cb16ea,edx
  40f7f7:	push   ebx
  40f7f8:	mov    ?,WORD PTR [eax+0x41c95d11]
  40f7fe:	xchg   DWORD PTR [ecx],edi
  40f800:	loopne 0x40f7c0
  40f802:	sbb    DWORD PTR [ebp+0x28],edx
  40f805:	daa    
  40f806:	mov    bh,0x78
  40f808:	push   ebp
  40f809:	scas   ax,WORD PTR es:[edi]
  40f80b:	xor    ecx,esi
  40f80d:	add    eax,0xd7ad1bcb
  40f812:	dec    DWORD PTR ss:[esi]
  40f815:	enter  0x5d5a,0x67
  40f819:	add    eax,DWORD PTR [eax+edx*4-0x434e1a22]
  40f820:	dec    eax
  40f821:	lds    ecx,FWORD PTR [ecx]
  40f823:	into   
  40f824:	pushf  
  40f825:	inc    edi
  40f826:	test   al,0x8d
  40f828:	xchg   esi,eax
  40f829:	rcr    DWORD PTR [ecx+0xc3ca99a],0x2f
  40f830:	xlat   BYTE PTR ds:[ebx]
  40f831:	push   esp
  40f832:	fcomip st,st(5)
  40f834:	fldcw  WORD PTR [esi-0x63]
  40f837:	gs mov al,0x77
  40f83a:	cmp    ecx,ebp
  40f83c:	jp     0x40f7e0
  40f83e:	push   0xd6bbd976
  40f843:	stos   DWORD PTR es:[edi],eax
  40f844:	xlat   BYTE PTR ds:[ebx]
  40f845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f846:	pushf  
  40f847:	mov    ecx,0x11cd411c
  40f84c:	dec    ebp
  40f84d:	mov    ss,WORD PTR [esi+0x4f0a4608]
  40f853:	jne    0x40f894
  40f855:	std    
  40f856:	imul   edi,DWORD PTR ds:0xcaef749,0x55
  40f85d:	outs   dx,BYTE PTR ds:[esi]
  40f85e:	sbb    DWORD PTR [edi-0xe],ebp
  40f861:	daa    
  40f862:	adc    dl,BYTE PTR [ecx]
  40f864:	jecxz  0x40f866
  40f866:	es pop ebp
  40f868:	ins    DWORD PTR es:[edi],dx
  40f869:	ins    DWORD PTR es:[edi],dx
  40f86a:	adc    eax,0x7133642b
  40f86f:	add    DWORD PTR [edi+0x7697cf44],ebp
  40f875:	mov    esp,0x8e518bba
  40f87a:	lahf   
  40f87b:	hlt    
  40f87c:	inc    esi
  40f87d:	jmp    0x9333:0x370bdf11
  40f884:	fcomi  st,st(1)
  40f886:	fld    DWORD PTR [ecx+0x4cbfdf76]
  40f88c:	out    0xba,al
  40f88e:	sar    BYTE PTR [edx],1
  40f890:	sar    BYTE PTR [edi-0x3f],cl
  40f893:	jge    0x40f854
  40f895:	mov    esi,0x5704e3dd
  40f89a:	cs stc 
  40f89c:	or     ebp,DWORD PTR [ecx-0x18b27309]
  40f8a2:	jb     0x40f825
  40f8a4:	mov    al,0xbe
  40f8a6:	mov    bh,0xc7
  40f8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a9:	add    eax,0xc258ae70
  40f8ae:	es aaa 
  40f8b0:	ins    BYTE PTR es:[edi],dx
  40f8b1:	pop    esp
  40f8b2:	popf   
  40f8b3:	mov    al,ds:0xf886e4f0
  40f8b8:	xor    edx,DWORD PTR [ebx]
  40f8ba:	sub    dh,BYTE PTR [edi+0x4193f525]
  40f8c0:	call   0xc97c:0xb0741607
  40f8c7:	mov    WORD PTR [ecx-0x15],?
  40f8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8cb:	test   eax,0x998bef0d
  40f8d0:	imul   edx,DWORD PTR [ebx+0x0],0x53
  40f8d4:	cld    
  40f8d5:	daa    
  40f8d6:	imul   edi,DWORD PTR [ecx-0x6ae55f80],0xffffffbf
  40f8dd:	stos   BYTE PTR es:[edi],al
  40f8de:	loope  0x40f8af
  40f8e0:	xchg   ecx,eax
  40f8e1:	sub    dl,BYTE PTR [ecx-0x68]
  40f8e4:	mov    edi,0x8288ba2f
  40f8e9:	imul   edx,edx,0xffffffae
  40f8ec:	xchg   ebp,eax
  40f8ed:	stos   BYTE PTR es:[edi],al
  40f8ee:	les    esi,FWORD PTR [esp+edx*1+0x62]
  40f8f2:	lock mov esp,0xc633b4e3
  40f8f8:	pop    ebx
  40f8f9:	ret    
  40f8fa:	pop    ds
  40f8fb:	dec    ebx
  40f8fc:	push   ebp
  40f8fd:	xchg   BYTE PTR [ebx+ebp*2+0x66],bh
  40f901:	(bad)  
  40f902:	bound  edi,QWORD PTR [edi+0x3d]
  40f905:	sbb    ebx,DWORD PTR [ecx-0x7e856ce9]
  40f90b:	ja     0x40f91f
  40f90d:	xor    eax,DWORD PTR [ebx-0x2b1c38a7]
  40f913:	dec    edx
  40f914:	fidiv  DWORD PTR [ebp+0xb26245d]
  40f91a:	es ds inc edi
  40f91d:	and    BYTE PTR [eax],0x3d
  40f920:	mov    ch,0x7e
  40f922:	push   cs
  40f923:	out    dx,al
  40f924:	iret   
  40f925:	in     eax,dx
  40f926:	in     eax,0xfa
  40f928:	lea    ebx,ds:0xdaedf571
  40f92e:	sti    
  40f92f:	xchg   DWORD PTR [esp+ebx*4-0x25],esi
  40f933:	xchg   ebx,eax
  40f934:	sub    al,0x7c
  40f936:	mov    ebp,0x4f932764
  40f93b:	pop    ds
  40f93c:	int3   
  40f93d:	out    dx,eax
  40f93e:	and    eax,0x504fa4d4
  40f943:	push   ebx
  40f944:	mov    ds:0x5b3b643d,eax
  40f949:	mov    edx,0x4888fbf7
  40f94e:	shl    DWORD PTR [ebp+0x76a44f16],0xfb
  40f955:	xchg   DWORD PTR [ebp+0x2553dee3],ecx
  40f95b:	imul   edi,DWORD PTR [ebp-0x260679db],0x36
  40f962:	dec    esp
  40f963:	sub    esp,DWORD PTR [ecx-0xa]
  40f966:	pusha  
  40f967:	xchg   ebx,eax
  40f968:	in     al,dx
  40f969:	push   ds
  40f96a:	adc    al,0x5e
  40f96c:	sbb    esp,DWORD PTR [ebx+0x6b8b223]
  40f972:	bound  esi,QWORD PTR [ebp-0x6b]
  40f975:	mov    ds:0xe46bdfe8,al
  40f97a:	outs   dx,DWORD PTR ds:[esi]
  40f97b:	xor    ah,dh
  40f97d:	xchg   ecx,eax
  40f97e:	lods   eax,DWORD PTR ds:[esi]
  40f97f:	imul   edx,DWORD PTR [edx],0x6
  40f982:	scas   al,BYTE PTR es:[di]
  40f984:	outs   dx,BYTE PTR ds:[esi]
  40f985:	adc    ebp,DWORD PTR [edi]
  40f987:	pop    esp
  40f988:	or     edx,DWORD PTR [edi]
  40f98a:	fisttp QWORD PTR [ebx+0x1e08cbb6]
  40f990:	push   eax
  40f991:	jg     0x40f921
  40f993:	mov    ah,0x37
  40f995:	add    DWORD PTR [ecx+0x2c],ebx
  40f998:	cmp    edx,edx
  40f99a:	arpl   WORD PTR [edi],bp
  40f99c:	and    esi,DWORD PTR [ebp-0x8]
  40f99f:	les    esp,FWORD PTR [eax-0x5b]
  40f9a2:	mov    bl,0xef
  40f9a4:	xchg   ebp,eax
  40f9a5:	shl    DWORD PTR ds:[ecx+0x315da541],cl
  40f9ac:	aaa    
  40f9ad:	sbb    DWORD PTR [ebp-0x30],esi
  40f9b0:	into   
  40f9b1:	sub    al,0xfa
  40f9b3:	aas    
  40f9b4:	cmp    BYTE PTR [ebp-0x10],0xa2
  40f9b8:	mov    ds:0x43262e7d,eax
  40f9bd:	outs   dx,DWORD PTR ds:[esi]
  40f9be:	sbb    BYTE PTR [ecx],bh
  40f9c0:	jns    0x40f9e7
  40f9c2:	inc    esp
  40f9c3:	arpl   cx,sp
  40f9c5:	repnz fiadd WORD PTR [ebp+0x5c]
  40f9c9:	push   esp
  40f9ca:	and    esi,DWORD PTR [ecx]
  40f9cc:	mov    bl,0x64
  40f9ce:	mov    ch,0x49
  40f9d0:	stos   BYTE PTR es:[edi],al
  40f9d1:	mov    dl,0x30
  40f9d3:	hlt    
  40f9d4:	(bad)  
  40f9d5:	test   edi,0x48b3ee8f
  40f9db:	cdq    
  40f9dc:	dec    eax
  40f9dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9de:	mov    cl,0x83
  40f9e0:	jmp    0x5eb8b1da
  40f9e5:	mov    esp,0x64c7a290
  40f9ea:	dec    eax
  40f9eb:	clc    
  40f9ec:	clc    
  40f9ed:	fs icebp 
  40f9ef:	in     eax,0x33
  40f9f1:	dec    edx
  40f9f2:	loope  0x40f97c
  40f9f4:	mov    ecx,0x9f835bb7
  40f9f9:	push   ebp
  40f9fa:	fistp  WORD PTR [esi-0xd]
  40f9fd:	jg     0x40f9a6
  40f9ff:	hlt    
  40fa00:	push   esp
  40fa01:	mov    dl,dh
  40fa03:	mov    ds:0xfcd79b98,eax
  40fa08:	sbb    ebp,DWORD PTR [esi-0x62]
  40fa0b:	icebp  
  40fa0c:	fwait
  40fa0d:	jge    0x40f9c9
  40fa0f:	jne    0x40fa68
  40fa11:	sub    BYTE PTR [esi+0xe],al
  40fa14:	repnz sub eax,0x19896e3
  40fa1a:	out    dx,eax
  40fa1b:	cmp    BYTE PTR [esi-0x6b],0xd5
  40fa1f:	or     eax,0x45892461
  40fa24:	cmp    bh,BYTE PTR [edi-0x6120c47c]
  40fa2a:	add    eax,DWORD PTR [ecx+0x509133eb]
  40fa30:	js     0x40fa14
  40fa32:	inc    edi
  40fa33:	out    dx,eax
  40fa34:	fwait
  40fa35:	jp     0x40fa9d
  40fa37:	popa   
  40fa38:	cmc    
  40fa39:	add    DWORD PTR [ebx-0x50c8e5b5],esp
  40fa3f:	dec    ecx
  40fa40:	sub    eax,0xa2102955
  40fa45:	fimul  WORD PTR [ebp+0x2867e5e0]
  40fa4b:	mov    edi,0xa04ee315
  40fa50:	cwde   
  40fa51:	sahf   
  40fa52:	out    dx,al
  40fa53:	adc    BYTE PTR [ecx+0x6c],ch
  40fa56:	mov    ch,0x26
  40fa58:	inc    ebp
  40fa59:	mov    al,ds:0xfd25b96e
  40fa5e:	jns    0x40fa7b
  40fa60:	or     edx,DWORD PTR [edi+0x7d7d412d]
  40fa66:	dec    ebp
  40fa67:	addr16 push edi
  40fa69:	ja     0x40fa41
  40fa6b:	scas   al,BYTE PTR es:[edi]
  40fa6c:	call   0x213ce8a2
  40fa71:	arpl   WORD PTR [ecx],bx
  40fa73:	jmp    0x40fa72
  40fa75:	test   eax,0xf4b59f4b
  40fa7a:	pop    esp
  40fa7b:	div    ebx
  40fa7d:	mov    cl,0x71
  40fa7f:	stc    
  40fa80:	stos   DWORD PTR es:[edi],eax
  40fa81:	push   esi
  40fa82:	(bad)  
  40fa83:	bound  eax,QWORD PTR [edi]
  40fa85:	lods   al,BYTE PTR ds:[esi]
  40fa86:	in     eax,dx
  40fa87:	or     BYTE PTR [edi+0x28],0x8b
  40fa8b:	or     bh,ch
  40fa8d:	cwde   
  40fa8e:	inc    ecx
  40fa8f:	xor    BYTE PTR [eax],ch
  40fa91:	and    ebx,0xfffffff1
  40fa94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa95:	stos   DWORD PTR es:[edi],eax
  40fa96:	psubw  mm6,mm0
  40fa99:	gs add al,0xb1
  40fa9c:	mov    al,ds:0xd297d3b
  40faa1:	adc    al,0x8e
  40faa3:	retf   0x5f76
  40faa6:	or     ebx,DWORD PTR [ebx]
  40faa8:	imul   edx,DWORD PTR [esi],0x37
  40faab:	int3   
  40faac:	dec    esi
  40faad:	sub    DWORD PTR [edx+0x79cb43ac],esi
  40fab3:	inc    edi
  40fab4:	push   es
  40fab5:	inc    edi
  40fab6:	test   eax,0x56ea4434
  40fabb:	fistp  QWORD PTR [edi]
  40fabd:	enter  0xa2d0,0xfe
  40fac1:	neg    cl
  40fac3:	jp     0x40fa50
  40fac5:	add    ebp,DWORD PTR [ecx]
  40fac7:	dec    edx
  40fac8:	and    eax,0x158cbe77
  40facd:	xchg   BYTE PTR [esi-0x3c8cacea],ah
  40fad3:	es call 0xf5dd:0x9522d2d7
  40fadb:	rcr    bl,0xde
  40fade:	add    dh,al
  40fae0:	xchg   DWORD PTR [edi],edx
  40fae2:	jg     0x40fad6
  40fae4:	xchg   ebp,eax
  40fae5:	jne    0x40fb36
  40fae7:	rcr    BYTE PTR [ebx-0x4b174c99],1
  40faed:	aad    0xf9
  40faef:	fild   DWORD PTR [ecx-0x2e3d8190]
  40faf5:	xlat   BYTE PTR ds:[ebx]
  40faf6:	dec    BYTE PTR ds:0xd91b1a51
  40fafc:	push   ebp
  40fafd:	push   edx
  40fafe:	push   0x8eff078f
  40fb03:	xor    al,0x98
  40fb05:	push   ebx
  40fb06:	test   al,0xe6
  40fb08:	adc    BYTE PTR [ecx+0x52],cl
  40fb0b:	daa    
  40fb0c:	leave  
  40fb0d:	pop    es
  40fb0e:	fbld   TBYTE PTR [edx]
  40fb10:	lea    ecx,[esi+0x4d]
  40fb13:	pop    ecx
  40fb14:	xchg   esp,eax
  40fb15:	test   eax,0x783acf8a
  40fb1a:	mov    ch,0x74
  40fb1c:	sbb    edx,edx
  40fb1e:	jecxz  0x40fb6d
  40fb20:	in     al,dx
  40fb21:	pop    edi
  40fb22:	je     0x40fae9
  40fb24:	push   ebp
  40fb25:	mov    bl,0xf4
  40fb27:	dec    ecx
  40fb28:	fadd   st(3),st
  40fb2a:	retf   0x59e
  40fb2d:	push   esi
  40fb2e:	(bad)  
  40fb2f:	adc    al,0x91
  40fb31:	cmp    ch,BYTE PTR ds:0xe0188fa4
  40fb37:	push   esp
  40fb38:	push   0xb0eb4bc8
  40fb3d:	xchg   ecx,eax
  40fb3e:	xchg   edx,eax
  40fb3f:	call   0x8a5b:0x70212c47
  40fb46:	cmp    dh,BYTE PTR [eax+esi*4]
  40fb49:	xor    al,0x9e
  40fb4b:	sar    DWORD PTR [edi],0xd3
  40fb4e:	jb     0x40fb0c
  40fb50:	test   ecx,esp
  40fb52:	in     al,dx
  40fb53:	dec    DWORD PTR [eax+0x43]
  40fb56:	leave  
  40fb57:	add    eax,0xf49c3904
  40fb5c:	push   ebx
  40fb5d:	in     eax,0x7a
  40fb5f:	xor    ch,BYTE PTR [ebx-0x35657e96]
  40fb65:	pushf  
  40fb66:	inc    esp
  40fb67:	mov    edi,0x1bc88b83
  40fb6c:	pop    edi
  40fb6d:	mov    ebp,0xe66beed4
  40fb72:	push   ecx
  40fb73:	les    esi,FWORD PTR [eax+0x64]
  40fb76:	cmp    BYTE PTR [ecx],dh
  40fb78:	push   ss
  40fb79:	xchg   DWORD PTR [edi],edx
  40fb7b:	gs pushw es
  40fb7e:	inc    ebx
  40fb7f:	in     eax,dx
  40fb80:	inc    ebx
  40fb81:	rcr    BYTE PTR [esi+0x4eda0d14],0xb4
  40fb88:	add    edx,edi
  40fb8a:	inc    ebx
  40fb8b:	sbb    al,BYTE PTR [edx-0x4b]
  40fb8e:	lods   al,BYTE PTR ds:[esi]
  40fb8f:	fdivr  QWORD PTR [ecx-0x14]
  40fb92:	or     BYTE PTR [eax-0x134fde7e],dh
  40fb98:	xchg   ebx,eax
  40fb99:	lods   al,BYTE PTR ds:[esi]
  40fb9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb9b:	nop
  40fb9c:	mov    gs,esp
  40fb9e:	mov    eax,ds:0xcb68f3d5
  40fba3:	mov    dl,0x8d
  40fba5:	xor    BYTE PTR [ebx-0x4f],0x52
  40fba9:	mov    ecx,0xa30adb57
  40fbae:	jle    0x40fb52
  40fbb0:	sahf   
  40fbb1:	ja     0x40fc2c
  40fbb3:	inc    esp
  40fbb4:	and    al,0xea
  40fbb6:	cmp    ebp,DWORD PTR [ebx+0x10]
  40fbb9:	sbb    ecx,ebp
  40fbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbbc:	sub    al,0xd7
  40fbbe:	ret    0xddcb
  40fbc1:	test   al,0x89
  40fbc3:	test   BYTE PTR [ebx],dh
  40fbc5:	mov    cl,cl
  40fbc7:	xchg   DWORD PTR ds:0xa0da6700,ebp
  40fbcd:	jne    0x40fb61
  40fbcf:	jb     0x40fbb4
  40fbd1:	or     ch,bh
  40fbd3:	ret    
  40fbd4:	adc    dh,ch
  40fbd6:	ins    BYTE PTR es:[edi],dx
  40fbd7:	fsub   DWORD PTR [edi]
  40fbd9:	(bad)  
  40fbda:	shl    BYTE PTR [eax-0x70],cl
  40fbdd:	clc    
  40fbde:	enter  0x53ac,0xb9
  40fbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe3:	lea    esp,[edi]
  40fbe5:	adc    cl,al
  40fbe7:	sub    bl,BYTE PTR [ebp+0x2cebdfaf]
  40fbed:	lods   eax,DWORD PTR ds:[esi]
  40fbee:	push   es
  40fbef:	mov    ds:0xb6ae4bb9,eax
  40fbf4:	push   cs
  40fbf5:	adc    DWORD PTR [eax+0x7d],ebx
  40fbf8:	ja     0x40fc60
  40fbfa:	xor    eax,0xa9a61734
  40fbff:	stos   BYTE PTR es:[edi],al
  40fc00:	cmp    DWORD PTR [ebp-0x79],0x7d1b786a
  40fc07:	jns    0x40fc3e
  40fc09:	xor    DWORD PTR [eax+0x6d],ebx
  40fc0c:	xor    BYTE PTR [esi],dh
  40fc0e:	adc    BYTE PTR [edx+0x1c],0x7c
  40fc12:	sbb    ebx,DWORD PTR [esp+ecx*1-0x32751892]
  40fc19:	xor    al,0xe2
  40fc1b:	adc    al,0x94
  40fc1d:	mov    bl,0x98
  40fc1f:	xchg   DWORD PTR [ecx+0x15f5b2b],esp
  40fc25:	mov    bh,BYTE PTR [esi+0x61]
  40fc28:	aad    0x9e
  40fc2a:	xor    ecx,DWORD PTR [edi]
  40fc2c:	out    dx,al
  40fc2d:	in     al,0x2d
  40fc2f:	jbe    0x40fc36
  40fc31:	push   cs
  40fc32:	ins    DWORD PTR es:[edi],dx
  40fc33:	sub    eax,0xa17cbe56
  40fc38:	jmp    0xbdb82346
  40fc3d:	xchg   ebx,eax
  40fc3e:	xchg   edi,eax
  40fc3f:	inc    edx
  40fc40:	sbb    BYTE PTR [ebx-0x55a25bcd],al
  40fc46:	jp     0x40fc3f
  40fc48:	dec    esi
  40fc49:	(bad)  
  40fc4a:	out    dx,eax
  40fc4b:	push   0x9ba67e35
  40fc50:	sbb    al,0xfe
  40fc52:	iret   
  40fc53:	cs sub eax,0x60900274
  40fc59:	js     0x40fc71
  40fc5b:	ja     0x40fcb7
  40fc5d:	cwde   
  40fc5e:	xchg   edx,eax
  40fc5f:	pop    eax
  40fc60:	leave  
  40fc61:	dec    edx
  40fc62:	les    ebp,FWORD PTR [ebx]
  40fc64:	aaa    
  40fc65:	pop    esi
  40fc66:	test   al,0x37
  40fc68:	jae    0x40fcaf
  40fc6a:	adc    eax,0x6bfe6f05
  40fc6f:	xor    DWORD PTR [edx],0xd3598ac9
  40fc75:	sbb    ebx,esi
  40fc77:	pop    ds
  40fc78:	lods   al,BYTE PTR ds:[esi]
  40fc79:	popa   
  40fc7a:	arpl   WORD PTR [ecx+0x55],bx
  40fc7d:	jnp    0x40fc23
  40fc7f:	pop    eax
  40fc80:	pop    esi
  40fc81:	sub    dl,BYTE PTR [edx-0x6a181c80]
  40fc87:	cwde   
  40fc88:	fs es and al,0x8c
  40fc8c:	pop    ds
  40fc8d:	jbe    0x40fc98
  40fc8f:	cli    
  40fc90:	stos   BYTE PTR es:[edi],al
  40fc91:	retf   
  40fc92:	call   0xab536e28
  40fc97:	pop    ds
  40fc98:	test   DWORD PTR [eax-0x7d3c4431],0x33ff29fa
  40fca2:	xchg   esp,eax
  40fca3:	push   ss
  40fca4:	out    dx,eax
  40fca5:	xchg   edx,eax
  40fca6:	cmp    BYTE PTR [edx+0x52dd417b],cl
  40fcac:	pop    es
  40fcad:	mov    ecx,0x98f81ea2
  40fcb2:	sbb    BYTE PTR [ebx],0xd3
  40fcb5:	sti    
  40fcb6:	sti    
  40fcb7:	test   eax,0x305cdf7b
  40fcbc:	mov    al,ds:0x9633467a
  40fcc1:	out    dx,ax
  40fcc3:	mov    edx,DWORD PTR [eax]
  40fcc5:	xchg   esp,eax
  40fcc6:	xchg   DWORD PTR [eax-0x52],ebp
  40fcc9:	icebp  
  40fcca:	(bad)  [ebx-0xca472c4]
  40fcd0:	(bad)  
  40fcd1:	and    BYTE PTR [edx+0xc],bh
  40fcd4:	or     al,0xef
  40fcd6:	test   eax,0x2892c9f7
  40fcdb:	popf   
  40fcdc:	jg     0x40fc65
  40fcde:	mov    cl,0x40
  40fce0:	push   0xffffffcf
  40fce2:	stos   BYTE PTR es:[edi],al
  40fce3:	in     al,0x2c
  40fce5:	pop    esp
  40fce6:	loope  0x40fd5f
  40fce8:	xlat   BYTE PTR ds:[ebx]
  40fce9:	cwde   
  40fcea:	repnz sub cl,BYTE PTR [ebx+ecx*8]
  40fcee:	pusha  
  40fcef:	push   0xffffff8c
  40fcf1:	push   esp
  40fcf2:	dec    eax
  40fcf3:	mov    al,ds:0x227e7641
  40fcf8:	gs push esi
  40fcfa:	retf   
  40fcfb:	rcl    BYTE PTR [eax-0x32],0xa1
  40fcff:	pop    edi
  40fd00:	xchg   BYTE PTR [esi+0x482bcfe0],dl
  40fd06:	jle    0x40fd1c
  40fd08:	retf   0xeb4e
  40fd0b:	xchg   esp,eax
  40fd0c:	adc    DWORD PTR [ebx+0x7e67a499],eax
  40fd12:	(bad)  
  40fd13:	xor    cl,BYTE PTR [edi-0x4b]
  40fd16:	push   edi
  40fd17:	in     al,0x2d
  40fd19:	and    ebx,DWORD PTR [edx+edx*1-0x16]
  40fd1d:	fisttp WORD PTR [edx-0x22]
  40fd20:	jmp    0xd6eb:0xdfeca062
  40fd27:	jg     0x40fd4b
  40fd29:	ds pop edx
  40fd2b:	push   ss
  40fd2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd2d:	inc    esp
  40fd2e:	addr16 enter 0xd5c7,0x7e
  40fd33:	push   edi
  40fd34:	adc    BYTE PTR [eax-0x22],ch
  40fd37:	popf   
  40fd38:	pop    eax
  40fd39:	ret    0xcb5
  40fd3c:	add    al,BYTE PTR [edx+0x6e]
  40fd3f:	dec    esi
  40fd40:	xor    al,0x5b
  40fd42:	cmc    
  40fd43:	retf   
  40fd44:	pop    ss
  40fd45:	lahf   
  40fd46:	mov    eax,0xedc3a55e
  40fd4b:	mov    WORD PTR [eax+0x32],?
  40fd4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd4f:	adc    DWORD PTR [edi-0x22],edx
  40fd52:	push   ss
  40fd53:	cmp    bl,ah
  40fd55:	(bad)  
  40fd57:	arpl   dx,si
  40fd59:	jecxz  0x40fd25
  40fd5b:	mov    esi,0x2295e495
  40fd60:	add    al,0x9a
  40fd62:	outs   dx,DWORD PTR ds:[esi]
  40fd63:	jmp    0x7e7134bd
  40fd68:	xchg   DWORD PTR [ebp+0x1fa821b5],esi
  40fd6e:	push   eax
  40fd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd70:	jno    0x40fd53
  40fd72:	shl    cl,cl
  40fd74:	lds    esp,FWORD PTR [edx]
  40fd76:	xchg   ebx,eax
  40fd77:	xchg   edi,eax
  40fd78:	xchg   DWORD PTR [ebx-0x29a6655a],edi
  40fd7e:	and    al,0x5f
  40fd80:	retf   0x3e97
  40fd83:	or     al,0x9b
  40fd85:	and    cl,cl
  40fd87:	mov    al,ds:0xed7c040e
  40fd8c:	push   esp
  40fd8d:	fdiv   DWORD PTR [ebx+0x521cd616]
  40fd93:	leave  
  40fd94:	jle    0x40fdbf
  40fd96:	(bad)  
  40fd97:	cmp    dh,BYTE PTR [edi+esi*2+0x43]
  40fd9b:	outs   dx,DWORD PTR ds:[esi]
  40fd9c:	ret    
  40fd9d:	cdq    
  40fd9e:	jae    0x40fd8f
  40fda0:	push   ebx
  40fda1:	icebp  
  40fda2:	pop    edi
  40fda3:	jne    0x40fd7a
  40fda5:	ret    0x706a
  40fda8:	test   BYTE PTR [si],bl
  40fdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdac:	icebp  
  40fdad:	shl    DWORD PTR [ebp-0x19],0x67
  40fdb1:	sub    DWORD PTR [esi+eiz*2+0x22],ebx
  40fdb5:	inc    esi
  40fdb6:	div    BYTE PTR [edi+0x327ba589]
  40fdbc:	add    ch,BYTE PTR [edi]
  40fdbe:	leave  
  40fdbf:	mov    ah,0x8a
  40fdc1:	and    DWORD PTR [ebx+0x568956a7],0xef7caef7
  40fdcb:	femms  
  40fdcd:	mov    ah,0xc3
  40fdcf:	stos   BYTE PTR es:[edi],al
  40fdd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd1:	pop    ss
  40fdd2:	xor    dh,dh
  40fdd4:	cmp    DWORD PTR [ebx+eax*8-0x23],eax
  40fdd8:	out    0x5e,eax
  40fdda:	(bad)  
  40fddb:	adc    DWORD PTR [ecx-0x5028224b],ebp
  40fde1:	ss and al,0x97
  40fde4:	or     DWORD PTR [edx+0x7581c619],ecx
  40fdea:	mov    esp,0x2dd79ec5
  40fdef:	mov    ch,0x5e
  40fdf1:	and    DWORD PTR [edx-0x5f],esp
  40fdf4:	mov    bl,0xfa
  40fdf6:	or     al,0x87
  40fdf8:	push   ebp
  40fdf9:	rol    BYTE PTR [ecx+edi*2],0xe4
  40fdfd:	push   eax
  40fdfe:	loope  0x40fdb0
  40fe00:	into   
  40fe01:	dec    edx
  40fe02:	add    al,0x50
  40fe04:	sub    DWORD PTR [edi+0x37d15d5e],eax
  40fe0a:	(bad)  
  40fe0b:	ja     0x40fdac
  40fe0d:	sub    ah,BYTE PTR [ebp-0xf]
  40fe10:	ss mov bh,0xa2
  40fe13:	je     0x40fe87
  40fe15:	in     eax,0xcc
  40fe17:	xchg   ebx,eax
  40fe18:	imul   DWORD PTR [esi-0x64432cdb]
  40fe1e:	fiadd  DWORD PTR [esi]
  40fe20:	and    bh,cl
  40fe22:	nop
  40fe23:	scas   eax,DWORD PTR es:[edi]
  40fe24:	(bad)  
  40fe25:	out    dx,eax
  40fe26:	(bad)  
  40fe27:	adc    dh,dl
  40fe29:	repz rcl BYTE PTR [ebx],1
  40fe2c:	cmp    al,bh
  40fe2e:	xor    esp,edi
  40fe30:	leave  
  40fe31:	push   ss
  40fe32:	or     edi,0x17
  40fe35:	inc    ebx
  40fe36:	js     0x40fe0f
  40fe38:	out    0x21,eax
  40fe3a:	sbb    edi,DWORD PTR [ecx+ecx*1]
  40fe3d:	js     0x40fddb
  40fe3f:	loope  0x40fe15
  40fe41:	je     0x40fe13
  40fe43:	mov    ah,0x33
  40fe45:	arpl   WORD PTR [ecx-0x65],cx
  40fe48:	mov    edx,0xd0becc28
  40fe4d:	mov    esp,0xa4aa8728
  40fe52:	and    eax,0x6fe715d
  40fe57:	adc    esi,DWORD PTR [esi-0x42496195]
  40fe5d:	fnsave [ebp+0x6b]
  40fe60:	js     0x40fe40
  40fe62:	mov    edx,0x4202cfd8
  40fe67:	dec    ebp
  40fe68:	xchg   ebx,eax
  40fe69:	retf   0xf6de
  40fe6c:	or     dl,bl
  40fe6e:	je     0x40fe30
  40fe70:	(bad)  
  40fe71:	int    0xc3
  40fe73:	add    eax,0x5554a534
  40fe78:	or     al,0x85
  40fe7a:	ds popf 
  40fe7c:	or     DWORD PTR [ecx-0x3b],esi
  40fe7f:	in     eax,0xb8
  40fe81:	out    0x2f,al
  40fe83:	dec    esi
  40fe84:	popa   
  40fe85:	or     BYTE PTR [edi],dh
  40fe87:	mov    eax,ds:0xdb6af01d
  40fe8c:	sub    al,0xac
  40fe8e:	pop    edi
  40fe8f:	loopne 0x40fe46
  40fe91:	mov    al,ds:0x7d9b6e0e
  40fe96:	sbb    dl,BYTE PTR [ecx]
  40fe98:	add    BYTE PTR [eax-0x24],0x92
  40fe9c:	xor    BYTE PTR [edx+0x9],0x84
  40fea0:	mov    bh,0xde
  40fea2:	push   cs
  40fea3:	loope  0x40fe74
  40fea5:	cld    
  40fea6:	ins    BYTE PTR es:[edi],dx
  40fea7:	push   esp
  40fea8:	fimul  WORD PTR [edx]
  40feaa:	adc    esi,DWORD PTR [eax]
  40feac:	bound  edx,QWORD PTR [ebx+0x1d]
  40feaf:	push   esp
  40feb0:	inc    edi
  40feb1:	dec    edx
  40feb2:	scas   eax,DWORD PTR es:[edi]
  40feb3:	loop   0x40fea3
  40feb5:	test   al,0x11
  40feb7:	inc    ebp
  40feb8:	mov    bl,0xd8
  40feba:	out    0x59,al
  40febc:	and    DWORD PTR [ecx],edx
  40febe:	jnp    0x40feec
  40fec0:	js     0x40ff21
  40fec2:	lods   eax,DWORD PTR ds:[esi]
  40fec3:	imul   edi,edi,0x48
  40fec6:	jmp    0x48eb13a4
  40fecb:	inc    edi
  40fecc:	(bad)  
  40fecd:	in     al,dx
  40fece:	das    
  40fecf:	pop    ecx
  40fed0:	scas   al,BYTE PTR es:[edi]
  40fed1:	idiv   ah
  40fed3:	xchg   esp,eax
  40fed4:	ins    BYTE PTR es:[edi],dx
  40fed5:	mov    BYTE PTR [edi+0x41],dl
  40fed8:	arpl   WORD PTR [ebx-0x7b8aec8c],sp
  40fede:	pop    eax
  40fedf:	gs iret 
  40fee1:	sahf   
  40fee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee3:	pushf  
  40fee4:	adc    BYTE PTR [ebx+0x7d],bl
  40fee7:	lea    esi,[ebx-0x4481ef4b]
  40feed:	dec    edi
  40feee:	pushf  
  40feef:	loop   0x40ff12
  40fef1:	jmp    0x3e936cfd
  40fef6:	das    
  40fef7:	jp     0x40ff13
  40fef9:	adc    edx,0x8df55bda
  40feff:	imul   edx,DWORD PTR [ebp+0x2f],0xa3bf71e3
  40ff06:	sahf   
  40ff07:	fild   QWORD PTR [ebx+0x28]
  40ff0a:	mov    edi,0xc787ded1
  40ff0f:	sbb    DWORD PTR [ebx-0x4],edi
  40ff12:	out    dx,al
  40ff13:	sub    DWORD PTR [esi+0x1d75057b],0xecc6dda3
  40ff1d:	mov    ecx,0x6a380df4
  40ff22:	dec    esi
  40ff23:	inc    edx
  40ff24:	sti    
  40ff25:	push   0x2b
  40ff27:	dec    esp
  40ff28:	cmp    al,cl
  40ff2a:	dec    ecx
  40ff2b:	mov    ah,0x6f
  40ff2d:	xchg   ebx,eax
  40ff2e:	sahf   
  40ff2f:	shr    esi,1
  40ff31:	mov    bh,0xc1
  40ff33:	cmp    dl,BYTE PTR [edi-0x7a]
  40ff36:	loope  0x40ffa0
  40ff38:	sahf   
  40ff39:	sbb    esp,ebp
  40ff3b:	sub    bl,BYTE PTR [ecx+ebx*1+0x632b354f]
  40ff42:	in     eax,0x27
  40ff44:	jmp    0xf4c5:0xe0b0ce18
  40ff4b:	stc    
  40ff4c:	in     ax,dx
  40ff4e:	stos   BYTE PTR es:[edi],al
  40ff4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff51:	cwde   
  40ff52:	clc    
  40ff53:	inc    ecx
  40ff54:	lea    esp,[edi+esi*1+0x127c2032]
  40ff5b:	rol    esi,1
  40ff5d:	pop    ebp
  40ff5e:	adc    DWORD PTR [esi+0x3e039ce1],esi
  40ff64:	cld    
  40ff65:	sub    DWORD PTR [ecx+0x19e11b66],esi
  40ff6b:	jbe    0x40ffcd
  40ff6d:	test   al,0x3f
  40ff6f:	inc    esp
  40ff70:	pushf  
  40ff71:	popf   
  40ff72:	or     ecx,esi
  40ff74:	sub    DWORD PTR [ebx+0x5cfd4789],ebp
  40ff7a:	popa   
  40ff7b:	shr    BYTE PTR [esi-0x5b8ccad3],1
  40ff81:	xchg   ah,dh
  40ff83:	lods   eax,DWORD PTR ds:[esi]
  40ff84:	mov    ebx,0x501028d2
  40ff89:	jne    0x40ffa5
  40ff8b:	push   ecx
  40ff8c:	inc    esp
  40ff8d:	fst    st(5)
  40ff8f:	sub    eax,0x75d696fb
  40ff94:	pushf  
  40ff95:	sbb    BYTE PTR [esi],dh
  40ff97:	jns    0x40ff2c
  40ff99:	js     0x40ff87
  40ff9b:	fidivr WORD PTR [esi+eiz*1-0x5c]
  40ff9f:	adc    bh,dl
  40ffa1:	addr16 inc edi
  40ffa3:	cld    
  40ffa4:	ja     0x40ffd6
  40ffa6:	out    0x88,al
  40ffa8:	popa   
  40ffa9:	cld    
  40ffaa:	ret    
  40ffab:	adc    al,0x1c
  40ffad:	hlt    
  40ffae:	xchg   esi,eax
  40ffaf:	cmc    
  40ffb0:	push   0xfffffffe
  40ffb2:	and    BYTE PTR [edi+0x70],bl
  40ffb5:	xchg   BYTE PTR [ebx+0x2a79a3bf],bh
  40ffbb:	sbb    esi,ecx
  40ffbd:	scas   al,BYTE PTR es:[edi]
  40ffbe:	cmp    ecx,DWORD PTR [esi]
  40ffc0:	mov    BYTE PTR [edx-0x2534e6b5],bl
  40ffc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc7:	test   BYTE PTR [ecx+0x4f],cl
  40ffca:	sub    al,0xe6
  40ffcc:	xchg   ebp,esp
  40ffce:	cld    
  40ffcf:	ficomp DWORD PTR [edx]
  40ffd1:	ficom  WORD PTR [esi-0x75321139]
  40ffd7:	(bad)  
  40ffd9:	and    al,0x73
  40ffdb:	ja     0x410040
  40ffdd:	push   es
  40ffde:	jbe    0x40ffc3
  40ffe0:	(bad)  
  40ffe1:	mov    bh,0xe1
  40ffe3:	fs sub al,0xcf
  40ffe6:	pop    edx
  40ffe7:	jl     0x40ffc4
  40ffe9:	(bad)  
  40ffea:	cld    
  40ffeb:	in     al,0x62
  40ffed:	and    cl,al
  40ffef:	xchg   edx,eax
  40fff0:	mov    BYTE PTR ss:[edx+ebp*8],cl
  40fff4:	mov    BYTE PTR [eax],bl
  40fff6:	sti    
  40fff7:	out    dx,eax
  40fff8:	das    
  40fff9:	mov    bh,0x3f
  40fffb:	call   0x3603a23e
  410000:	popa   
  410001:	nop
  410002:	in     al,dx
  410003:	imul   eax,DWORD PTR [ebx-0x60],0xef8cf4b4
  41000a:	sbb    dh,ch
  41000c:	jne    0x410030
  41000e:	xchg   BYTE PTR [esi-0x42],cl
  410011:	ins    DWORD PTR es:[edi],dx
  410012:	cmp    dh,0x1f
  410015:	cmp    eax,DWORD PTR [eax+0x30]
  410018:	repnz push es
  41001a:	inc    edi
  41001b:	pop    esi
  41001c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41001d:	cwde   
  41001e:	sub    BYTE PTR [ebp-0x14ecc06e],0x7
  410025:	je     0x40ffcd
  410027:	arpl   WORD PTR [edi+0x388c93f8],bp
  41002d:	push   esp
  41002e:	cs iret 
  410030:	dec    edi
  410031:	retf   
  410032:	push   ebp
  410033:	pop    ebx
  410034:	pop    ss
  410035:	xchg   ebx,eax
  410036:	jno    0x410006
  410038:	pop    ecx
  410039:	mov    ds:0x7b2065c8,al
  41003e:	cmp    eax,0x6d6920f4
  410043:	in     al,0xb2
  410045:	(bad)  
  410046:	xchg   ecx,eax
  410047:	pushf  
  410048:	idiv   dh
  41004a:	pop    ecx
  41004b:	cmp    bl,BYTE PTR [ebx]
  41004d:	in     eax,dx
  41004e:	mov    ah,0x99
  410050:	nop
  410051:	sub    bl,BYTE PTR [edx+ebx*4+0x4b]
  410055:	xchg   edi,eax
  410056:	scas   eax,DWORD PTR es:[edi]
  410057:	stc    
  410058:	push   ebx
  410059:	xor    DWORD PTR [eax+0x31],eax
  41005c:	cld    
  41005d:	or     eax,0x911fc8bc
  410062:	out    dx,eax
  410063:	fmul   st,st(0)
  410065:	fadd   DWORD PTR [edi-0x72c25d8f]
  41006b:	sub    esp,0xcb1db829
  410071:	pop    ebx
  410072:	cdq    
  410073:	(bad)  
  410074:	mov    dh,0x7f
  410076:	in     eax,0x8f
  410078:	out    0xe5,eax
  41007a:	adc    ebx,DWORD PTR [eax-0x1f592edc]
  410080:	inc    esi
  410081:	mov    esp,0x655b10c5
  410086:	int3   
  410087:	lahf   
  410088:	jecxz  0x4100cf
  41008a:	fiadd  WORD PTR [esi+eax*8+0x21]
  41008e:	add    DWORD PTR [eax-0x27aac2c9],0x6eccde41
  410098:	cli    
  410099:	cmp    cl,BYTE PTR [ebp-0x7336e9e0]
  41009f:	loope  0x4100f2
  4100a1:	push   eax
  4100a2:	test   BYTE PTR es:[edi+0x3a],bh
  4100a6:	imul   ebp,DWORD PTR [ebp+0x14020167],0xe9377f12
  4100b0:	ins    DWORD PTR es:[edi],dx
  4100b1:	push   ds
  4100b2:	dec    bp
  4100b4:	push   0x4d
  4100b6:	push   0x5c04e1fc
  4100bb:	les    ebx,FWORD PTR [edx+0x5]
  4100be:	test   al,0x80
  4100c0:	jmp    0x4100cb
  4100c2:	mov    esi,0x34a4344e
  4100c7:	xchg   esi,eax
  4100c8:	jge    0x4100a2
  4100ca:	mov    ch,0x34
  4100cc:	aas    
  4100cd:	and    al,0x31
  4100cf:	outs   dx,DWORD PTR ds:[esi]
  4100d0:	push   cs
  4100d1:	stc    
  4100d2:	int3   
  4100d3:	push   ebp
  4100d4:	sbb    bl,bh
  4100d6:	adc    eax,0x92289904
  4100db:	shr    BYTE PTR [esi+0x726b1351],0x30
  4100e2:	stos   BYTE PTR es:[edi],al
  4100e3:	mov    dl,0xd0
  4100e5:	mov    bh,0x4d
  4100e7:	pop    ss
  4100e8:	mov    esi,0xe17a8a7d
  4100ed:	test   bh,ch
  4100ef:	add    DWORD PTR ds:0x139a0a36,eax
  4100f5:	bswap  bp
  4100f8:	pop    eax
  4100f9:	mov    ds:0x3a12869d,eax
  4100fe:	mov    edx,0xd91fcec3
  410103:	stc    
  410104:	xchg   ebp,eax
  410105:	loopne 0x4100f4
  410107:	add    eax,0x7db8cb92
  41010c:	push   esp
  41010d:	sub    eax,esp
  41010f:	shr    DWORD PTR [esp+ebp*1+0x1],1
  410113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410114:	fsub   DWORD PTR [ebx+eiz*1]
  410117:	push   ebx
  410118:	dec    edx
  410119:	call   0x1e90ba54
  41011e:	imul   DWORD PTR [edx+ebx*2]
  410121:	inc    eax
  410122:	mov    edi,0xaa476edd
  410127:	es inc esi
  410129:	lods   al,BYTE PTR ds:[esi]
  41012a:	inc    edi
  41012b:	cwde   
  41012c:	xchg   edi,eax
  41012d:	add    DWORD PTR [edi],esi
  41012f:	pop    ecx
  410130:	cdq    
  410131:	adc    al,cl
  410133:	or     BYTE PTR [ecx+0x25491768],bl
  410139:	out    dx,eax
  41013a:	dec    edx
  41013b:	mov    esp,0x67448ecd
  410140:	loopne 0x4100c9
  410142:	dec    esi
  410143:	add    al,0xd6
  410145:	or     dl,ch
  410147:	or     eax,0x8f5e28e6
  41014c:	or     DWORD PTR [esp+ebx*1],0x2c
  410150:	pop    ds
  410151:	retf   
  410152:	iret   
  410153:	aaa    
  410154:	sub    BYTE PTR [eax-0x7778c4a5],0x93
  41015b:	fwait
  41015c:	clc    
  41015d:	std    
  41015e:	xchg   ecx,eax
  41015f:	imul   ebp,DWORD PTR [eax+0x746f745e],0x6d
  410166:	jmp    0x948285b2
  41016b:	dec    eax
  41016c:	xchg   esp,eax
  41016d:	test   BYTE PTR [ebp+0x74],0xca
  410171:	lahf   
  410172:	jnp    0x41016e
  410174:	and    cl,bh
  410176:	jns    0x41014d
  410178:	adc    cl,dh
  41017a:	mov    bl,0xd4
  41017c:	repz xchg esi,eax
  41017e:	ds not ch
  410181:	dec    esp
  410182:	sub    BYTE PTR [edi+0x5771191c],ch
  410188:	adc    DWORD PTR [eax],esi
  41018a:	iret   
  41018b:	in     eax,0xc7
  41018d:	jne    0x41016a
  41018f:	jb     0x410144
  410191:	push   esp
  410192:	fs aad 0x6a
  410195:	ins    DWORD PTR es:[edi],dx
  410196:	(bad)  
  410197:	retf   0x17ea
  41019a:	jp     0x41016d
  41019c:	push   ds
  41019d:	pop    ss
  41019e:	push   ss
  41019f:	ins    BYTE PTR es:[edi],dx
  4101a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101a1:	(bad)  
  4101a2:	das    
  4101a3:	jne    0x410216
  4101a5:	or     bh,BYTE PTR [esi]
  4101a7:	sti    
  4101a8:	dec    eax
  4101a9:	jg     0x4101d0
  4101ab:	xor    eax,0xbc5575e8
  4101b0:	in     al,dx
  4101b1:	into   
  4101b2:	scas   al,BYTE PTR es:[edi]
  4101b3:	lahf   
  4101b4:	inc    edx
  4101b5:	push   esp
  4101b6:	jno    0x410151
  4101b8:	dec    ecx
  4101b9:	add    DWORD PTR [edi+0x27bafbe8],edi
  4101bf:	dec    ecx
  4101c0:	sub    eax,0x9a3d234a
  4101c5:	enter  0xf888,0x98
  4101c9:	and    bh,BYTE PTR [eax+ecx*8+0x22]
  4101cd:	(bad)  
  4101cf:	dec    edi
  4101d0:	fld    TBYTE PTR [ebp+0x709fea27]
  4101d6:	xor    BYTE PTR [edx+0x2b159070],ah
  4101dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101dd:	mov    dh,0x17
  4101df:	adc    BYTE PTR ds:[ebx-0x1d],0x67
  4101e4:	adc    eax,0x29fc66a7
  4101e9:	xor    dl,BYTE PTR [ecx+0x448240ad]
  4101ef:	mov    esp,0x4a645321
  4101f4:	sub    al,0xb3
  4101f6:	jle    0x4101b5
  4101f8:	xchg   ecx,eax
  4101f9:	xchg   edi,eax
  4101fa:	jmp    0x92f8:0xf3cb6523
  410201:	cld    
  410202:	and    DWORD PTR [ebx+edx*2-0x7d98674e],esi
  410209:	xor    al,0xf8
  41020b:	mov    dh,0x5d
  41020d:	mov    bl,0xee
  41020f:	mov    dl,0x85
  410211:	sub    al,0x9e
  410214:	mov    esi,0xa4b172de
  410219:	xchg   DWORD PTR [ecx],esp
  41021b:	call   FWORD PTR [edi+0x3bcba51f]
  410221:	xchg   ecx,eax
  410222:	scas   eax,DWORD PTR es:[edi]
  410223:	mul    BYTE PTR [edi+0x4dd8c6f1]
  410229:	pop    ds
  41022a:	jle    0x410288
  41022c:	jp     0x4101d5
  41022e:	xchg   edi,eax
  41022f:	jnp    0x410214
  410231:	mov    cl,0xca
  410233:	ret    
  410234:	or     esp,edx
  410236:	ret    
  410237:	jle    0x41022b
  410239:	scas   eax,DWORD PTR es:[edi]
  41023a:	ins    DWORD PTR es:[edi],dx
  41023b:	(bad)  
  41023c:	leave  
  41023d:	in     eax,0xba
  41023f:	add    BYTE PTR [ecx-0x6bb06916],cl
  410245:	popa   
  410246:	rol    BYTE PTR [eax+eiz*2],0x9d
  41024a:	out    0xaa,eax
  41024c:	xor    BYTE PTR [eax],0x71
  41024f:	xor    eax,DWORD PTR [ebx+ebp*1+0x124d126c]
  410256:	dec    ecx
  410257:	bsr    esi,DWORD PTR [edi]
  41025a:	popa   
  41025b:	add    dl,al
  41025d:	jae    0x41028e
  41025f:	icebp  
  410260:	or     ecx,ebx
  410262:	sub    BYTE PTR [edi-0x34ccb03],ch
  410268:	add    BYTE PTR [edi-0x4a5d53ec],ch
  41026e:	sbb    bl,BYTE PTR [eax+edi*4-0x66]
  410272:	adc    edx,DWORD PTR [eax+0x53a15de4]
  410278:	xchg   ebx,eax
  410279:	call   0x812cebe1
  41027e:	sub    ebp,eax
  410280:	and    DWORD PTR [edi+eiz*8],eax
  410283:	bt     DWORD PTR [ecx+0x76a25365],ebx
  41028a:	mov    eax,ds:0xd98b9bd6
  41028f:	icebp  
  410290:	and    BYTE PTR [esi+0x7b],dl
  410293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410294:	test   eax,0xf012b7b4
  410299:	sbb    dh,BYTE PTR [ebx+esi*4+0x7176f09a]
  4102a0:	xor    edx,ebp
  4102a2:	(bad)  
  4102a3:	stos   BYTE PTR es:[di],al
  4102a5:	inc    edi
  4102a6:	jo     0x4102fd
  4102a8:	out    dx,al
  4102a9:	stc    
  4102aa:	cmp    eax,ecx
  4102ac:	fsubr  QWORD PTR [edx-0x6a]
  4102af:	xchg   esi,eax
  4102b0:	cld    
  4102b1:	outs   dx,BYTE PTR ds:[esi]
  4102b2:	dec    edi
  4102b3:	jae    0x410273
  4102b5:	jnp    0x41027b
  4102b7:	repz das 
  4102b9:	dec    eax
  4102ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102bb:	mov    ebp,0xf9c36772
  4102c0:	ret    
  4102c1:	adc    DWORD PTR [ebx+0xf],edi
  4102c4:	xor    al,0x58
  4102c6:	jecxz  0x41024f
  4102c8:	bound  ebx,QWORD PTR [ebp+0xff09286]
  4102ce:	dec    ecx
  4102cf:	rcr    BYTE PTR [ebp-0x2],0x42
  4102d3:	or     ch,BYTE PTR [ebx]
  4102d5:	mov    eax,ds:0xd79ce670
  4102da:	into   
  4102db:	popf   
  4102dc:	dec    ecx
  4102dd:	add    eax,0xb9d2cec
  4102e2:	sbb    al,0xad
  4102e4:	and    eax,0x49124b9
  4102e9:	ret    
  4102ea:	or     DWORD PTR [edi],edi
  4102ec:	aaa    
  4102ed:	sbb    cl,cl
  4102ef:	add    ecx,DWORD PTR [esi]
  4102f1:	jmp    0xefd29ddf
  4102f6:	pop    edi
  4102f7:	and    eax,0x8e762e77
  4102fc:	add    DWORD PTR [eax],eax
  4102fe:	dec    eax
  4102ff:	mov    dl,0xc4
  410301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410302:	loope  0x4102e4
  410304:	pop    edi
  410305:	adc    DWORD PTR [edi+esi*1-0x6c],ebx
  410309:	jno    0x41030b
  41030b:	jl     0x41032c
  41030d:	dec    ebx
  41030e:	aaa    
  41030f:	ror    DWORD PTR [ebx-0x62],0xd8
  410313:	pop    ecx
  410314:	mov    DWORD PTR [edi+0x5a],ebp
  410317:	cld    
  410318:	xchg   dl,ah
  41031a:	(bad)  
  41031b:	sbb    al,0xa7
  41031d:	fcom   DWORD PTR ds:0xcb0c6a48
  410323:	jg     0x4102d9
  410325:	js     0x410301
  410327:	test   DWORD PTR [edx+ebp*1],esi
  41032a:	stos   DWORD PTR es:[edi],eax
  41032b:	sbb    eax,0xd4184d05
  410330:	push   ds
  410331:	ins    BYTE PTR es:[edi],dx
  410332:	leave  
  410333:	ja     0x410377
  410335:	xchg   edi,eax
  410336:	add    ebx,DWORD PTR [ebp-0x44d070d8]
  41033c:	mov    cs,WORD PTR [ecx+edx*4-0x19eda8f9]
  410343:	popf   
  410344:	mov    esi,0x8b5a6d20
  410349:	or     DWORD PTR ds:0xf2a60c1f,esp
  41034f:	outs   dx,BYTE PTR ds:[esi]
  410350:	imul   esi,DWORD PTR [esi+0x5a],0x412dbe00
  410357:	sub    eax,0x325638ae
  41035c:	dec    eax
  41035d:	enter  0xcf72,0x64
  410361:	mov    edx,0x8922221c
  410366:	cwde   
  410367:	cmp    DWORD PTR [eax+0x6ccd7a9a],eax
  41036d:	scas   al,BYTE PTR es:[edi]
  41036e:	jae    0x4103d8
  410370:	mov    eax,ds:0xd314dc6
  410375:	and    DWORD PTR [ecx+0x73],esi
  410378:	rol    BYTE PTR [edi-0xf],1
  41037b:	adc    eax,0xa866f045
  410380:	and    eax,0x5cf41c9d
  410385:	and    ah,BYTE PTR [ebx+0x28]
  410388:	jno    0x4103de
  41038a:	push   ebx
  41038b:	stos   BYTE PTR es:[edi],al
  41038c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41038d:	jmp    0x4103db
  41038f:	xchg   ebx,eax
  410390:	(bad)  
  410391:	or     eax,0xbabe3e51
  410396:	dec    ebx
  410397:	mov    ecx,0x545b8b71
  41039c:	xchg   DWORD PTR [esi],esi
  41039e:	cmp    al,0x59
  4103a0:	or     eax,0x8197189f
  4103a5:	aam    0x47
  4103a7:	scas   al,BYTE PTR es:[edi]
  4103a8:	xchg   ebx,eax
  4103a9:	inc    esp
  4103aa:	scas   eax,DWORD PTR es:[edi]
  4103ab:	fldcw  WORD PTR [eax+0x55]
  4103ae:	dec    ebx
  4103af:	loopne 0x410365
  4103b1:	sbb    cl,BYTE PTR [eax+0x51]
  4103b4:	mov    ebp,0xbadcadb8
  4103b9:	adc    al,0x88
  4103bb:	(bad)  
  4103bc:	sub    ebx,esp
  4103be:	xlat   BYTE PTR ds:[ebx]
  4103bf:	into   
  4103c0:	inc    ecx
  4103c1:	test   esp,eax
  4103c3:	or     edi,DWORD PTR [ebx-0x1c]
  4103c6:	xchg   esp,eax
  4103c7:	ins    DWORD PTR es:[edi],dx
  4103c8:	ins    BYTE PTR es:[edi],dx
  4103c9:	mov    esp,esp
  4103cb:	add    BYTE PTR [edi-0x7aa05adc],ah
  4103d1:	or     al,0x64
  4103d3:	nop
  4103d4:	jbe    0x41042a
  4103d6:	push   ebp
  4103d7:	jge    0x4103df
  4103d9:	inc    ebp
  4103da:	fiadd  WORD PTR [ebp+0xea68a18]
  4103e0:	xchg   ecx,eax
  4103e1:	lods   al,BYTE PTR ds:[esi]
  4103e2:	inc    eax
  4103e3:	fnstcw WORD PTR [edi]
  4103e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103e6:	xor    eax,0x770b89f4
  4103eb:	push   ecx
  4103ec:	std    
  4103ed:	std    
  4103ee:	pop    esp
  4103ef:	in     al,dx
  4103f0:	jp     0x4103e1
  4103f2:	mov    ds:0xfe9e094c,al
  4103f7:	pop    ebx
  4103f8:	or     eax,0xaa73b025
  4103fd:	sub    al,bl
  4103ff:	push   ds
  410400:	sbb    eax,0x32c71176
  410405:	retf   
  410406:	fdiv   DWORD PTR [edx+edi*8-0x187cfefd]
  41040d:	enter  0x6408,0xbb
  410411:	lods   al,BYTE PTR ds:[esi]
  410412:	inc    eax
  410413:	mov    dl,0x0
  410415:	lds    esi,FWORD PTR [ecx+0x1d]
  410418:	jge    0x41046a
  41041a:	and    BYTE PTR [esi*1-0x5937f7bb],0xbe
  410422:	inc    ecx
  410423:	jl     0x4103c4
  410425:	das    
  410426:	pop    ss
  410427:	mov    WORD PTR [edx-0x3e],fs
  41042a:	mov    ebx,DWORD PTR [esi-0x2b]
  41042d:	mov    ebp,0x2a688d2e
  410432:	clc    
  410433:	and    eax,0x354bb675
  410438:	sbb    eax,0xb1f2d5ae
  41043d:	adc    ebx,eax
  41043f:	cmc    
  410440:	out    dx,al
  410441:	pcmpgtd mm1,mm7
  410444:	enter  0xe539,0x79
  410448:	lds    ebx,FWORD PTR [ebp+eax*2-0x21afe7c2]
  41044f:	cld    
  410450:	mov    ebp,0x9f94b871
  410455:	(bad)  
  410456:	jbe    0x4104bc
  410458:	sar    BYTE PTR [ebx],1
  41045a:	push   esp
  41045b:	lods   al,BYTE PTR ds:[esi]
  41045c:	ja     0x41049f
  41045e:	inc    eax
  41045f:	imul   ecx,DWORD PTR [ebx-0x1],0x74d7af19
  410466:	mov    eax,0x3a8e3249
  41046b:	inc    edi
  41046c:	xchg   edi,eax
  41046d:	jp     0x410497
  41046f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410470:	into   
  410471:	add    edx,DWORD PTR [esp+ebx*8+0x698af98d]
  410478:	in     al,dx
  410479:	outs   dx,BYTE PTR ds:[esi]
  41047a:	cmp    ecx,ebx
  41047c:	sbb    ebx,0xdd3456d5
  410482:	fnsave [edx-0x41cff58]
  410488:	mov    edi,0x5e1a5dc2
  41048d:	add    eax,0x823acb85
  410492:	(bad)  
  410494:	fist   DWORD PTR [edx+0x6ee0aed3]
  41049a:	pop    esi
  41049b:	mov    ebp,DWORD PTR [edi]
  41049d:	loopne 0x4104fe
  41049f:	retf   0xdfa4
  4104a2:	jmp    0x4104d5
  4104a4:	icebp  
  4104a5:	mov    edx,0x4c84ecb8
  4104aa:	and    ecx,DWORD PTR [eax]
  4104ac:	ret    0x975
  4104af:	cmp    DWORD PTR ds:0xa83ca352,eax
  4104b5:	inc    edi
  4104b6:	retf   0x530b
  4104b9:	jecxz  0x41053a
  4104bb:	nop
  4104bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104bd:	xor    eax,0x6456b2c1
  4104c2:	int3   
  4104c3:	pop    eax
  4104c4:	rcl    DWORD PTR [esp+ecx*8+0x2f],cl
  4104c8:	sub    BYTE PTR [ebx+0x7d],bh
  4104cb:	fcom   QWORD PTR [ebx+0x42]
  4104ce:	aaa    
  4104cf:	mov    WORD PTR [eax],?
  4104d1:	jae    0x410517
  4104d3:	jmp    0xbe7b:0xae600254
  4104da:	shr    BYTE PTR [eax+edx*2],0x25
  4104de:	dec    ebx
  4104df:	repz add DWORD PTR ss:[ebx-0x2],esi
  4104e4:	inc    edi
  4104e5:	sbb    eax,ebp
  4104e7:	cmc    
  4104e8:	out    dx,eax
  4104e9:	daa    
  4104ea:	les    ecx,FWORD PTR [ebx]
  4104ec:	fld    TBYTE PTR [edx+0x366b6b3f]
  4104f2:	pop    ecx
  4104f3:	retf   
  4104f4:	(bad)
  4104f8:	and    DWORD PTR [ebx-0x4ee9dba7],ebp
  4104fe:	lods   al,BYTE PTR ds:[esi]
  4104ff:	adc    ch,BYTE PTR [edx]
  410501:	in     al,0x99
  410503:	jle    0x41057a
  410505:	inc    edx
  410506:	or     eax,0x29b0ba15
  41050b:	iret   
  41050c:	jmp    FWORD PTR [ebx-0x1c]
  41050f:	adc    dl,BYTE PTR ds:0x9b92f5d5
  410515:	std    
  410516:	rol    bl,0xf1
  410519:	dec    ebx
  41051a:	mov    ecx,0x810ec47f
  41051f:	imul   ebx,eax,0xffffffc1
  410522:	aam    0x71
  410524:	cmc    
  410525:	mov    eax,ds:0xb4c4613b
  41052a:	xor    eax,0xba6f4904
  41052f:	push   cs
  410530:	lds    edi,FWORD PTR [ecx]
  410532:	std    
  410533:	pop    ecx
  410534:	and    al,0xe
  410536:	mov    esp,0xc7c584f0
  41053b:	cmp    edi,ecx
  41053d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41053e:	fwait
  41053f:	ja     0x410594
  410541:	lds    eax,FWORD PTR [edx-0x1ea26b3]
  410547:	jbe    0x410557
  410549:	cmp    al,0x9f
  41054b:	add    ecx,DWORD PTR [edx-0x72]
  41054e:	add    esp,edx
  410550:	jns    0x410509
  410552:	(bad)  
  410553:	pop    esp
  410554:	cld    
  410555:	fldenv [ebp+ebp*1-0x4]
  410559:	mov    dh,0x2f
  41055b:	pop    esi
  41055c:	sub    eax,0x6f1886ff
  410561:	loopne 0x410506
  410563:	pop    ds
  410564:	xchg   edx,eax
  410565:	test   BYTE PTR [ebp+0x37],cl
  410568:	jne    0x41059c
  41056a:	xor    BYTE PTR [ebx+0x41b24de3],ch
  410570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410571:	ret    0xbb4e
  410574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410575:	je     0x410573
  410577:	sahf   
  410578:	adc    BYTE PTR [edi-0xc],cl
  41057b:	out    0xdb,al
  41057d:	mov    BYTE PTR [esi-0x1ebf72ce],0x80
  410584:	in     eax,0x54
  410586:	iret   
  410587:	iret   
  410588:	aam    0x6e
  41058a:	or     al,0x2e
  41058c:	dec    ecx
  41058d:	shl    DWORD PTR [esi+0x6f],1
  410590:	stos   DWORD PTR es:[edi],eax
  410591:	sbb    edx,edi
  410593:	add    ebx,DWORD PTR [esi]
  410595:	inc    edx
  410596:	pop    esp
  410597:	out    0xaa,al
  410599:	mov    bh,0x78
  41059b:	xchg   ebx,eax
  41059c:	std    
  41059d:	fnstsw WORD PTR [edi+0x4f]
  4105a0:	in     eax,dx
  4105a1:	(bad)  
  4105a2:	mov    bl,0xee
  4105a4:	sbb    cl,0xf1
  4105a7:	inc    eax
  4105a8:	outs   dx,BYTE PTR ds:[esi]
  4105a9:	push   ss
  4105aa:	in     eax,0xb0
  4105ac:	adc    ecx,DWORD PTR [ebp-0x3f]
  4105af:	mov    ds:0x855b2ea6,al
  4105b4:	xor    DWORD PTR [ebp+0x6],edi
  4105b7:	in     eax,0xf0
  4105b9:	jne    0x4105ff
  4105bb:	sub    ah,BYTE PTR [ebp+0x1833c3b4]
  4105c1:	inc    ebp
  4105c2:	push   ss
  4105c3:	jle    0x41060c
  4105c5:	ja     0x410552
  4105c7:	sbb    DWORD PTR [ecx+ebx*2],0xfffffff2
  4105cb:	xchg   edx,eax
  4105cc:	xchg   BYTE PTR [edx+edx*1+0x70],dl
  4105d0:	fcomp  DWORD PTR [eax+0x5c]
  4105d3:	and    al,0x9a
  4105d5:	cmp    BYTE PTR [ebx],ch
  4105d7:	out    dx,al
  4105d8:	inc    eax
  4105d9:	pusha  
  4105da:	xor    dh,BYTE PTR ds:0x3bac1d69
  4105e0:	ds push ebx
  4105e2:	jne    0x4105fd
  4105e4:	jo     0x4105c1
  4105e6:	mov    ebx,0x36156474
  4105eb:	add    eax,0x4c2b15aa
  4105f0:	push   ebp
  4105f1:	mov    ds:0xd14b9961,eax
  4105f6:	mov    ds:0x21fecbc3,eax
  4105fb:	cmp    eax,0xcf68f2f8
  410600:	das    
  410601:	cwde   
  410602:	in     eax,dx
  410603:	sbb    DWORD PTR [ebp*1-0x58f5e7a9],eax
  41060a:	(bad)  
  41060c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41060d:	jnp    0x4105c8
  41060f:	outs   dx,DWORD PTR ds:[esi]
  410610:	xchg   ebx,eax
  410611:	mov    ds:0xb542f3d4,al
  410616:	push   ebx
  410617:	sbb    dh,al
  410619:	inc    edi
  41061a:	shr    BYTE PTR [edi],cl
  41061c:	xchg   cl,ch
  41061e:	xchg   ebp,eax
  41061f:	xor    eax,0x1ce3692d
  410624:	icebp  
  410625:	jp     0x41068e
  410627:	adc    BYTE PTR [edx+0x54],0x53
  41062b:	sub    eax,0xe94c1086
  410630:	cmp    al,0xbe
  410632:	jns    0x410602
  410634:	dec    esi
  410635:	pop    ebx
  410636:	jmp    0x4105bb
  410638:	and    al,0x6c
  41063a:	or     esi,eax
  41063c:	cmp    cl,dh
  41063e:	sub    DWORD PTR ds:0x4faf0c5f,eax
  410644:	mov    dh,0xdc
  410646:	sub    al,0x63
  410648:	scas   al,BYTE PTR es:[edi]
  410649:	sbb    ebx,esp
  41064b:	push   cs
  41064c:	sahf   
  41064d:	bound  ebp,QWORD PTR [ebx]
  41064f:	adc    bl,dl
  410651:	outs   dx,DWORD PTR ds:[esi]
  410652:	div    BYTE PTR [eax]
  410654:	js     0x41066e
  410656:	lock lds ebx,FWORD PTR [eax]
  410659:	mov    ebp,0x77af155a
  41065e:	das    
  41065f:	cdq    
  410660:	out    0x71,al
  410662:	pop    ebx
  410663:	das    
  410664:	cmp    eax,0xe0f561be
  410669:	js     0x4106cd
  41066b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41066c:	mov    cr0,eax
  41066f:	push   edi
  410670:	fs mov ch,0x88
  410673:	scas   al,BYTE PTR es:[edi]
  410674:	cmc    
  410675:	jmp    0x30cd095b
  41067a:	adc    eax,0x8bace7e8
  41067f:	xor    ebx,DWORD PTR [edx+ebx*4-0x20]
  410683:	(bad)  
  410684:	in     al,0x2c
  410686:	(bad)  
  410687:	xor    BYTE PTR [esi+0x60],dl
  41068a:	cmp    ebx,DWORD PTR [ecx]
  41068c:	pop    ecx
  41068d:	sub    eax,0xa26033ac
  410692:	jecxz  0x4106e9
  410694:	dec    eax
  410695:	inc    ecx
  410696:	sahf   
  410697:	inc    edi
  410698:	inc    ecx
  410699:	mov    al,BYTE PTR [eax+edx*4-0x64]
  41069d:	test   esi,0x20e380d4
  4106a3:	pop    esp
  4106a4:	or     BYTE PTR [esi+edx*8-0xb],dl
  4106a8:	push   ebp
  4106a9:	(bad)  [ebp+0x36]
  4106ac:	out    0x80,al
  4106ae:	fisub  WORD PTR [ebp+0x5b]
  4106b1:	mov    eax,ds:0x83c3addc
  4106b6:	fcmovb st,st(2)
  4106b8:	xor    BYTE PTR [edi-0x154484f9],bl
  4106be:	aam    0x2a
  4106c0:	mov    ecx,0x30b8f9d6
  4106c5:	mov    al,ds:0x8020890a
  4106ca:	pop    eax
  4106cb:	xor    al,0xfa
  4106cd:	mov    ebp,0xfb6ce7c8
  4106d2:	out    0x18,eax
  4106d4:	push   edx
  4106d5:	xor    bl,BYTE PTR [edi]
  4106d7:	push   0x37
  4106d9:	adc    eax,0xa4794c3c
  4106de:	test   DWORD PTR [eax],edx
  4106e0:	enter  0x6842,0x91
  4106e4:	ja     0x4106a2
  4106e6:	call   0xe2cd:0x8224ddbf
  4106ed:	ins    DWORD PTR es:[edi],dx
  4106ee:	jb     0x4106ae
  4106f0:	inc    ecx
  4106f1:	icebp  
  4106f2:	jp     0x4106e8
  4106f4:	pop    ebx
  4106f5:	add    eax,0xbc4c487a
  4106fa:	mov    esi,0xb9cab072
  4106ff:	dec    edi
  410700:	ror    dl,cl
  410702:	dec    ecx
  410703:	adc    DWORD PTR [edx+0xfb70a],ecx
  410709:	in     eax,0xbb
  41070b:	sbb    bh,BYTE PTR [ebx]
  41070d:	out    0x32,al
  41070f:	scas   eax,DWORD PTR es:[edi]
  410710:	neg    edi
  410712:	xor    ah,al
  410714:	push   0x7e0bdad9
  410719:	or     bl,bh
  41071b:	nop
  41071c:	fstp   QWORD PTR [edi+0x6b5c0fa7]
  410722:	jp     0x410742
  410724:	add    ah,BYTE PTR [edi+0x4976ccbd]
  41072a:	loop   0x41074d
  41072c:	mov    eax,0xdf32c41f
  410731:	in     al,dx
  410732:	test   eax,0xc8ddf29
  410737:	lds    ebx,FWORD PTR ds:0x5b8f0452
  41073d:	rol    eax,cl
  41073f:	adc    ebx,DWORD PTR [edi-0x26]
  410742:	imul   esi,esp,0xa61da529
  410748:	pop    edx
  410749:	je     0x410784
  41074b:	enter  0xf22e,0x47
  41074f:	sub    DWORD PTR [edi],0xa4a4aed4
  410755:	inc    edx
  410756:	xchg   edx,eax
  410757:	push   esi
  410758:	loopne 0x410761
  41075a:	cmp    BYTE PTR [esi+0x71b65e18],dl
  410760:	addr16 inc ebx
  410762:	dec    DWORD PTR [eax+0x59]
  410765:	inc    eax
  410766:	jnp    0x4107dc
  410768:	mov    ds:0x5e9b71d0,al
  41076d:	out    0x4d,eax
  41076f:	leave  
  410770:	mov    edx,0xc7cd8a0d
  410775:	sub    ah,dh
  410777:	sti    
  410778:	mov    WORD PTR [esp+ecx*2],es
  41077b:	sbb    ecx,0xbddb9d1d
  410781:	mov    ah,0x37
  410783:	jae    0x410720
  410785:	jmp    0xc3d2:0x15ba364c
  41078c:	pop    ss
  41078d:	pop    ds
  41078e:	(bad)  
  41078f:	daa    
  410790:	xor    edx,DWORD PTR [ebx+esi*1]
  410793:	mov    ds:0x532f68e2,al
  410798:	and    BYTE PTR [edi],al
  41079a:	out    0xdf,al
  41079c:	mov    eax,0xf450df8b
  4107a1:	enter  0x6f07,0xd0
  4107a5:	push   0x573edf13
  4107aa:	or     DWORD PTR [eax-0x40],0xffffffbb
  4107ae:	mov    esp,DWORD PTR [edi-0x790e4a17]
  4107b4:	mov    al,ds:0xdb0afaef
  4107b9:	push   ebx
  4107ba:	mov    esp,0x62b1a99
  4107bf:	pushf  
  4107c0:	(bad)  
  4107c1:	out    dx,al
  4107c2:	jl     0x4107a6
  4107c4:	jp     0x410807
  4107c6:	(bad)  
  4107c7:	mov    bh,0xee
  4107c9:	sub    eax,0x8546781b
  4107ce:	int3   
  4107cf:	es xchg eax,ebx
  4107d2:	mov    es,ebx
  4107d4:	xchg   ebx,eax
  4107d5:	ret    
  4107d6:	jb     0x410777
  4107d8:	hlt    
  4107d9:	mov    eax,0x38493eab
  4107de:	pop    ecx
  4107df:	mov    al,ds:0xf9cd034f
  4107e4:	outs   dx,BYTE PTR ds:[esi]
  4107e5:	jnp    0x41081b
  4107e7:	(bad)  
  4107e8:	test   al,0x86
  4107ea:	cmp    al,0x5f
  4107ec:	mov    BYTE PTR [ebx+ebx*1+0x70],ch
  4107f0:	mov    cl,0x87
  4107f2:	sbb    al,0xe5
  4107f4:	mov    bl,0xa0
  4107f6:	int    0x10
  4107f8:	retf   0xacb6
  4107fb:	adc    cl,BYTE PTR [edx+0x56]
  4107fe:	or     esi,DWORD PTR [eax-0x47]
  410801:	xor    DWORD PTR [esi+edx*2+0x5b30ecbf],esp
  410808:	ss xor dl,dl
  41080b:	xlat   BYTE PTR ds:[ebx]
  41080c:	cmp    esi,DWORD PTR [eax+edx*8-0x20]
  410810:	adc    ecx,DWORD PTR [esi]
  410812:	hlt    
  410813:	out    dx,al
  410814:	loope  0x4107a8
  410816:	aas    
  410817:	lea    ecx,[ebp-0x4c]
  41081a:	and    bh,ah
  41081c:	dec    esi
  41081d:	loope  0x410844
  41081f:	dec    ecx
  410820:	and    ebp,esi
  410822:	mov    WORD PTR [ecx-0x67e1f0d8],ss
  410828:	pop    ebx
  410829:	add    cl,al
  41082b:	pop    esp
  41082c:	int3   
  41082d:	bound  ecx,QWORD PTR [esi]
  41082f:	inc    DWORD PTR [ebp-0xaace731]
  410835:	call   0xd01f:0x94f836a3
  41083c:	out    0x19,eax
  41083e:	repnz xor ah,dl
  410841:	pop    eax
  410842:	jl     0x4107db
  410844:	push   eax
  410845:	mov    eax,0x2430a428
  41084a:	and    BYTE PTR [eax+0x12],dh
  41084d:	retf   0x42d9
  410850:	dec    edi
  410851:	dec    edi
  410852:	jo     0x410853
  410854:	sbb    dl,BYTE PTR ds:0xdc02f446
  41085a:	lods   al,BYTE PTR ds:[esi]
  41085b:	push   0x66704666
  410860:	mov    ebx,0x7dbf73fa
  410865:	xchg   BYTE PTR [esi+0x4e],ch
  410868:	inc    edi
  410869:	iret   
  41086a:	cmp    al,0x53
  41086c:	outs   dx,BYTE PTR ds:[esi]
  41086d:	or     al,BYTE PTR [eax-0x23]
  410870:	shl    esp,0x19
  410873:	mov    WORD PTR [esi-0x6784303c],ds
  410879:	sbb    DWORD PTR [ebx],edi
  41087b:	and    al,0xc2
  41087d:	pop    esp
  41087e:	xchg   BYTE PTR [edx+0x5c],al
  410881:	call   0xbe78:0x85756034
  410888:	out    dx,al
  410889:	ror    DWORD PTR ds:0x5e108c30,0x8
  410890:	inc    edi
  410891:	shl    DWORD PTR [edx-0x33],1
  410894:	es data16 loop 0x410887
  410898:	nop
  410899:	scas   eax,DWORD PTR es:[edi]
  41089a:	jno    0x4108d2
  41089c:	iret   
  41089d:	repnz sub BYTE PTR [eax+0x1327714],bl
  4108a4:	push   0x382390a3
  4108a9:	push   0xe
  4108ab:	ficomp DWORD PTR [edx-0xc]
  4108ae:	sti    
  4108af:	sar    BYTE PTR [edi+0x452995f7],0x51
  4108b6:	inc    edx
  4108b7:	jns    0x4108f3
  4108b9:	adc    BYTE PTR [ecx-0x94b82ed],bh
  4108bf:	dec    ecx
  4108c0:	popf   
  4108c1:	nop
  4108c2:	cmp    ah,BYTE PTR [edx+0x4b]
  4108c5:	xor    ebp,DWORD PTR [edi+0x6b4f4ddd]
  4108cb:	call   0x7e833ab0
  4108d0:	lea    eax,[ecx+0x41e09208]
  4108d6:	push   edx
  4108d7:	ins    BYTE PTR es:[edi],dx
  4108d8:	pusha  
  4108d9:	icebp  
  4108da:	(bad)  
  4108db:	push   ebp
  4108dc:	stos   DWORD PTR es:[edi],eax
  4108dd:	fild   QWORD PTR [edx]
  4108df:	jne    0x4108ea
  4108e1:	cmp    al,cl
  4108e3:	mov    ah,BYTE PTR [edi+eax*4-0x6ca4db17]
  4108ea:	pmulhuw mm0,mm5
  4108ed:	(bad)  
  4108ee:	push   edi
  4108ef:	jo     0x41088e
  4108f1:	hlt    
  4108f2:	jle    0x410879
  4108f4:	fcomp  DWORD PTR [edi-0xed590d3]
  4108fa:	push   ebx
  4108fb:	fstp   QWORD PTR [edi+edx*2]
  4108fe:	fst    QWORD PTR [ebp+0x71]
  410901:	popf   
  410902:	ret    0xeb66
  410905:	inc    eax
  410906:	mov    edi,0x228c2381
  41090b:	test   eax,0xcb8bb5fc
  410910:	popf   
  410911:	lea    eax,es:[ecx+0x44]
  410915:	or     dh,BYTE PTR [eax]
  410917:	stos   DWORD PTR es:[edi],eax
  410918:	in     al,0x12
  41091a:	test   DWORD PTR [edx+0x6e],0xf31a1b42
  410921:	cmc    
  410922:	rol    DWORD PTR [edi],1
  410924:	mov    ds:0x4e448bac,al
  410929:	inc    esp
  41092a:	xlat   BYTE PTR ds:[ebx]
  41092b:	in     eax,0x37
  41092d:	push   ebp
  41092e:	call   0x2709:0xa277ce85
  410935:	sbb    ecx,DWORD PTR [eax]
  410937:	inc    ebx
  410938:	popf   
  410939:	pushf  
  41093a:	clc    
  41093b:	out    dx,al
  41093c:	out    0xe,al
  41093e:	sbb    BYTE PTR [esi+0x1d54a6b0],ch
  410944:	sbb    BYTE PTR [edx+0x44],dh
  410947:	cmp    BYTE PTR [edi+0x7e],0xef
  41094b:	mov    bh,0x33
  41094d:	fisubr WORD PTR [esi-0x5c50e87a]
  410953:	js     0x41094c
  410955:	push   edx
  410956:	js     0x410915
  410958:	cmp    BYTE PTR [edi-0x7c8b6d56],bl
  41095e:	retf   
  41095f:	lods   eax,DWORD PTR ds:[esi]
  410960:	aam    0x81
  410962:	es dec ebp
  410964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410965:	sub    al,0xb
  410967:	add    DWORD PTR [edx+0x93716a2],0x55
  41096e:	and    al,0x8c
  410970:	pop    eax
  410971:	mov    dl,0x47
  410973:	and    bl,bl
  410975:	add    ebp,DWORD PTR [esi+0x2218f038]
  41097b:	push   ebx
  41097c:	dec    edx
  41097d:	push   ss
  41097e:	ret    0xc0ac
  410981:	mov    al,BYTE PTR [edx+0x2b]
  410984:	mov    al,0x6c
  410986:	dec    esp
  410987:	add    eax,0xf64a79a9
  41098c:	inc    esp
  41098d:	push   edi
  41098e:	push   esp
  41098f:	scas   al,BYTE PTR es:[edi]
  410990:	mov    ecx,0xac990a53
  410995:	jmp    0x4109b5
  410997:	mov    WORD PTR [ecx-0x5c7974a3],ss
  41099d:	xchg   ebp,eax
  41099e:	push   ss
  41099f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a0:	mov    ebp,0x84e465a4
  4109a5:	adc    ebx,ebp
  4109a7:	xchg   esi,eax
  4109a8:	pushf  
  4109a9:	test   eax,0x5b826d46
  4109ae:	add    DWORD PTR [eax],ebp
  4109b0:	outs   dx,DWORD PTR ds:[esi]
  4109b1:	in     eax,0x30
  4109b3:	ds inc edi
  4109b5:	mov    eax,0xb687a9da
  4109ba:	push   0x96dfc33c
  4109bf:	ins    DWORD PTR es:[edi],dx
  4109c0:	sub    edi,DWORD PTR [esi-0x621daa03]
  4109c6:	push   cs
  4109c7:	pop    ds
  4109c8:	cdq    
  4109c9:	fcmove st,st(5)
  4109cb:	gs out 0x3,al
  4109ce:	ret    
  4109cf:	(bad)  
  4109d0:	fimul  DWORD PTR [ebp+0x46489852]
  4109d6:	call   0x6e08d8d8
  4109db:	xchg   edi,eax
  4109dc:	jge    0x4109d0
  4109de:	cld    
  4109df:	add    al,0x8b
  4109e1:	cmp    eax,0xeb9a4721
  4109e6:	arpl   bx,cx
  4109e8:	out    dx,eax
  4109e9:	popa   
  4109ea:	gs aam 0x64
  4109ed:	add    al,0x54
  4109ef:	sub    esi,edx
  4109f1:	pushf  
  4109f2:	xlat   BYTE PTR ds:[ebx]
  4109f4:	pop    es
  4109f5:	ficom  DWORD PTR [edx+0x49]
  4109f8:	inc    esp
  4109f9:	inc    eax
  4109fa:	pop    esp
  4109fb:	(bad)  
  4109fc:	sbb    al,0x40
  4109fe:	or     DWORD PTR [esi+0xbf09326],edi
  410a04:	xor    al,0x20
  410a06:	sbb    eax,0x1d7f9c9f
  410a0b:	jmp    0x10e0f051
  410a10:	sub    BYTE PTR [esi-0x62],0xbb
  410a14:	test   al,0xb7
  410a16:	loop   0x410a79
  410a18:	jns    0x410a40
  410a1a:	stos   DWORD PTR es:[edi],eax
  410a1b:	ja     0x410a3d
  410a1d:	stc    
  410a1e:	sahf   
  410a1f:	imul   edx,esi,0xaaf54971
  410a25:	(bad)  
  410a26:	(bad)  
  410a27:	fcom   DWORD PTR [edi+0x6f]
  410a2a:	sub    dl,bl
  410a2c:	in     al,dx
  410a2d:	jb     0x410aab
  410a2f:	jne    0x410a72
  410a31:	ffreep st(7)
  410a33:	pop    ecx
  410a34:	cdq    
  410a35:	(bad)  
  410a36:	cld    
  410a37:	or     bl,dl
  410a39:	mov    esi,0x63aa79b5
  410a3e:	add    edx,DWORD PTR [bx+di+0x66]
  410a42:	sbb    cl,BYTE PTR [eax+0x7924a665]
  410a48:	out    0xb1,eax
  410a4a:	push   ds
  410a4b:	add    eax,0x2551147a
  410a50:	mov    ebp,0x308c5089
  410a55:	stos   BYTE PTR es:[edi],al
  410a56:	sub    ch,bl
  410a58:	js     0x410ad6
  410a5a:	cmp    bh,BYTE PTR [edi]
  410a5c:	rol    BYTE PTR [esi-0x1],1
  410a5f:	xor    BYTE PTR [edi+0x2d868f69],ch
  410a65:	cmp    eax,0xb8a64f7f
  410a6a:	ret    
  410a6b:	pushf  
  410a6c:	jmp    0x6760:0xeb408c96
  410a73:	cwde   
  410a74:	sub    BYTE PTR ds:[ebp+eiz*4+0xd],ch
  410a79:	sub    bl,BYTE PTR [ecx]
  410a7b:	sbb    eax,0xef98fbd7
  410a80:	add    eax,DWORD PTR [esi]
  410a82:	xchg   esp,eax
  410a83:	push   esp
  410a84:	jge    0x410a6b
  410a86:	cmp    eax,0x7475b519
  410a8b:	mov    al,ds:0x6e265329
  410a90:	loop   0x410a27
  410a92:	stc    
  410a93:	enter  0x2478,0x86
  410a97:	xchg   esi,eax
  410a98:	mov    esi,?
  410a9a:	mov    ds:0x13a77120,al
  410a9f:	enter  0x928,0x7f
  410aa3:	sub    edx,edi
  410aa5:	push   sp
  410aa7:	fwait
  410aa8:	cmp    ecx,ebp
  410aaa:	pop    es
  410aab:	pop    edi
  410aac:	fistp  WORD PTR [ecx+eax*4-0xf30e4a2]
  410ab3:	cmp    eax,0xc6702582
  410ab8:	add    dl,dl
  410aba:	(bad)
  410abd:	dec    ecx
  410abe:	pop    ebp
  410abf:	shl    DWORD PTR [ebp-0x1ac0137b],0x89
  410ac6:	es dec esi
  410ac8:	xchg   esi,eax
  410ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aca:	(bad)  [edx+0x585285b5]
  410ad0:	arpl   WORD PTR [esp+ebx*8],ax
  410ad3:	adc    bl,ch
  410ad5:	sbb    BYTE PTR [esi+0x3b9de81d],bl
  410adb:	push   eax
  410adc:	fs aas 
  410ade:	inc    eax
  410adf:	ins    DWORD PTR es:[edi],dx
  410ae0:	jp     0x410a8f
  410ae2:	iret   
  410ae3:	das    
  410ae4:	fldenv [ebp-0x16]
  410ae7:	in     al,0x74
  410ae9:	push   0x52
  410aeb:	xchg   esi,eax
  410aec:	imul   ebx,DWORD PTR [eax],0xe921e78d
  410af2:	push   edx
  410af3:	stos   BYTE PTR es:[edi],al
  410af4:	stc    
  410af5:	popf   
  410af6:	lods   eax,DWORD PTR ds:[esi]
  410af7:	lods   al,BYTE PTR ds:[esi]
  410af8:	sub    BYTE PTR [ebx-0x647927c3],al
  410afe:	mov    ds:0x424b14b4,eax
  410b03:	ss jp  0x410af5
  410b06:	pop    ecx
  410b07:	ds loope 0x410aff
  410b0a:	and    ah,BYTE PTR [eax+0x3b835abc]
  410b10:	mov    eax,ds:0x5e93fb6c
  410b15:	rol    eax,1
  410b17:	arpl   WORD PTR [edx-0xa],ax
  410b1a:	pushf  
  410b1b:	fcomp  QWORD PTR [ebp+0x3a]
  410b1e:	xchg   BYTE PTR [esi],bh
  410b20:	icebp  
  410b21:	jbe    0x410ae6
  410b23:	(bad)  
  410b24:	ja     0x410b5e
  410b26:	dec    esp
  410b27:	pop    edx
  410b28:	push   esi
  410b29:	(bad)  
  410b2a:	jnp    0x410b70
  410b2c:	pop    esi
  410b2d:	xchg   esp,eax
  410b2e:	fsub   DWORD PTR [eax+0x55d5a22c]
  410b34:	dec    ebx
  410b35:	enter  0xd7e7,0x12
  410b39:	sub    bh,cl
  410b3b:	fwait
  410b3c:	xor    al,0x9
  410b3e:	lock ins BYTE PTR es:[edi],dx
  410b40:	cmp    eax,0x938a992a
  410b45:	xchg   BYTE PTR [ecx+0x62d00e02],bl
  410b4b:	scas   al,BYTE PTR es:[edi]
  410b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b4d:	xchg   esi,eax
  410b4e:	push   eax
  410b4f:	and    BYTE PTR [ebx-0x2f689daa],bl
  410b55:	mov    edx,0xb1d15588
  410b5a:	mov    ebx,0x912b02c9
  410b5f:	jb     0x410b8f
  410b61:	xchg   ecx,eax
  410b62:	imul   ebx,DWORD PTR [edi],0x61
  410b65:	loopne 0x410bbd
  410b67:	xor    BYTE PTR [esi],cl
  410b69:	xchg   BYTE PTR [ecx-0x22f1fcbe],ch
  410b6f:	fprem  
  410b71:	retf   
  410b72:	out    0xda,al
  410b74:	mov    WORD PTR [ecx+0x227be68f],ds
  410b7a:	sbb    esp,DWORD PTR [ebx+0x46]
  410b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b7e:	mov    ecx,0x1f0eba64
  410b83:	push   ecx
  410b84:	xchg   esi,eax
  410b85:	stos   DWORD PTR es:[edi],eax
  410b86:	arpl   si,di
  410b88:	jmp    0xa0bf3ced
  410b8d:	fbld   TBYTE PTR [eax]
  410b8f:	cmp    BYTE PTR [eax-0x3b9a6588],dl
  410b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b96:	mov    eax,ds:0x6b908c07
  410b9b:	jnp    0x410bc0
  410b9d:	mov    ecx,0x56cf863f
  410ba2:	int3   
  410ba3:	out    dx,eax
  410ba4:	call   0xa353:0x542cc427
  410bab:	scas   eax,DWORD PTR es:[edi]
  410bac:	sbb    eax,0xc214ea62
  410bb1:	leave  
  410bb2:	std    
  410bb3:	xchg   esp,eax
  410bb4:	mov    bl,0x82
  410bb6:	inc    esp
  410bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bb8:	call   0xfc11:0xad86a581
  410bbf:	jg     0x410c2f
  410bc1:	and    al,0x6a
  410bc3:	retf   0xa8a0
  410bc6:	test   BYTE PTR [ecx-0x7b],0x45
  410bca:	pop    ebp
  410bcb:	mov    esp,0x539aa837
  410bd0:	inc    edi
  410bd1:	mov    ecx,0xbb018c8e
  410bd6:	pop    ss
  410bd7:	in     eax,0xd6
  410bd9:	push   es
  410bda:	bound  edi,QWORD PTR [esi-0x5f]
  410bdd:	daa    
  410bde:	inc    ebx
  410bdf:	pop    edx
  410be0:	xchg   esi,eax
  410be1:	cmp    BYTE PTR [edi-0x2b146912],bh
  410be7:	inc    esp
  410be8:	loopne 0x410bb9
  410bea:	inc    ebx
  410beb:	jmp    0x410c46
  410bed:	idiv   DWORD PTR [esi-0x77467fdf]
  410bf3:	mov    ebx,0xb830e755
  410bf8:	mov    dl,0xb5
  410bfa:	push   esp
  410bfb:	sub    ecx,DWORD PTR [edx]
  410bfd:	xor    DWORD PTR [edi+edx*2+0x61c989a2],0xffffffef
  410c05:	repnz pop ds
  410c07:	loopne 0x410c49
  410c09:	nop
  410c0a:	rol    ebx,0x40
  410c0d:	ss sub al,0x63
  410c10:	pop    ss
  410c11:	or     edi,DWORD PTR [ecx+0x881768d]
  410c17:	push   ebx
  410c18:	xor    BYTE PTR [ebx-0x1d732d8d],cl
  410c1e:	imul   esi,DWORD PTR [esi-0x51e8c742],0x11683c1f
  410c28:	add    eax,0xed6bdbc
  410c2d:	jge    0x410bbd
  410c2f:	mov    al,0x44
  410c31:	cmp    esi,DWORD PTR [edi-0x26]
  410c34:	pushf  
  410c35:	int3   
  410c36:	push   0xffffffd3
  410c38:	and    eax,0xc36cf07a
  410c3d:	mov    eax,0x1423b5e8
  410c42:	mov    bh,0x38
  410c44:	out    dx,eax
  410c45:	aaa    
  410c46:	inc    ecx
  410c47:	sahf   
  410c48:	and    BYTE PTR [eax+0x25],bh
  410c4b:	xchg   ebx,eax
  410c4c:	sbb    esp,esi
  410c4e:	imul   esp,DWORD PTR [eax],0x75be047e
  410c54:	loope  0x410c74
  410c56:	jae    0x410be9
  410c58:	xor    eax,0x7216f36
  410c5d:	test   al,0x6b
  410c5f:	mov    WORD PTR [ecx-0x2dab12c3],es
  410c65:	js     0x410c3d
  410c67:	cmp    esi,DWORD PTR [ecx-0x7cdd54f]
  410c6d:	or     eax,0x47cb2a8d
  410c72:	outs   dx,DWORD PTR ds:[esi]
  410c73:	rol    DWORD PTR [ecx-0x2e6212ea],0x1b
  410c7a:	pop    ecx
  410c7b:	test   al,0x52
  410c7d:	test   DWORD PTR es:[ebx-0x50],eax
  410c81:	add    dl,BYTE PTR ds:0x54422b6a
  410c87:	repz retf 
  410c89:	xchg   BYTE PTR ds:0x62a46291,bl
  410c8f:	fldenv [ebx]
  410c91:	(bad)  ds:0x4e8abbf7
  410c97:	loope  0x410cdc
  410c99:	push   ss
  410c9a:	xor    al,0xf3
  410c9c:	xchg   ebx,eax
  410c9d:	mov    ds:0x8a940622,eax
  410ca2:	push   esp
  410ca3:	in     al,0x88
  410ca5:	mov    ecx,0x7feba619
  410caa:	jb     0x410c4c
  410cac:	outs   dx,DWORD PTR ds:[esi]
  410cad:	adc    DWORD PTR [esi],edx
  410caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb0:	cmp    BYTE PTR [ebx],bl
  410cb2:	loopne 0x410c5e
  410cb4:	pop    eax
  410cb5:	adc    al,0x1f
  410cb7:	mov    al,0xae
  410cb9:	cli    
  410cba:	jecxz  0x410c4a
  410cbc:	leave  
  410cbd:	mov    al,ds:0x9f1f1853
  410cc2:	adc    bh,ch
  410cc4:	dec    ecx
  410cc5:	clc    
  410cc6:	or     ah,BYTE PTR [ebx-0x5adf8c8e]
  410ccc:	inc    ebx
  410ccd:	std    
  410cce:	mov    esi,DWORD PTR [ebx+0x71e1639d]
  410cd4:	mov    al,ds:0x87124149
  410cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cda:	mov    es,WORD PTR [edx+0x62a888d5]
  410ce0:	call   DWORD PTR [edx]
  410ce2:	pop    edi
  410ce3:	jb     0x410d3f
  410ce5:	fidiv  WORD PTR [eax-0x530a6ac]
  410ceb:	pop    esi
  410cec:	stos   DWORD PTR es:[edi],eax
  410ced:	cld    
  410cee:	jge    0x410d3d
  410cf0:	push   0xe04dd3e9
  410cf5:	loopne 0x410d01
  410cf7:	xor    esi,DWORD PTR [esi]
  410cf9:	jb     0x410d38
  410cfb:	pop    edx
  410cfc:	jl     0x410d3f
  410cfe:	inc    esp
  410cff:	not    ecx
  410d01:	mov    edi,0x8cc9bf2b
  410d06:	and    eax,0xc187fb60
  410d0b:	xchg   ebx,eax
  410d0c:	mov    edx,0x75b8585f
  410d11:	ins    BYTE PTR es:[edi],dx
  410d12:	sahf   
  410d13:	lods   eax,DWORD PTR ds:[esi]
  410d14:	adc    BYTE PTR [esi],cl
  410d16:	data16 aaa 
  410d18:	xor    BYTE PTR [ebx-0x260580ad],0xc7
  410d1f:	fwait
  410d20:	sti    
  410d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d22:	pop    eax
  410d23:	inc    ebx
  410d24:	(bad)  
  410d25:	xchg   ebx,eax
  410d26:	dec    esp
  410d27:	test   al,0x12
  410d29:	repnz xor esp,DWORD PTR [ecx-0x10]
  410d2d:	adc    bh,dh
  410d2f:	test   BYTE PTR [ecx+0x44f4dbbf],dl
  410d35:	fmul   DWORD PTR [esi+0x62]
  410d38:	push   ebp
  410d39:	ins    BYTE PTR es:[edi],dx
  410d3a:	lea    edx,[ebx]
  410d3c:	jp     0x410d41
  410d3e:	ret    
  410d3f:	out    dx,al
  410d40:	out    dx,al
  410d41:	sbb    bh,BYTE PTR [esi]
  410d43:	adc    dl,0x61
  410d46:	cmp    ebp,DWORD PTR [ecx+edi*4]
  410d49:	cmp    DWORD PTR [ebp-0x6],eax
  410d4c:	das    
  410d4d:	rol    bh,cl
  410d4f:	mov    WORD PTR [edx+ebp*2],gs
  410d52:	pop    ecx
  410d53:	sti    
  410d54:	sbb    ebx,ecx
  410d56:	push   edi
  410d57:	mov    ah,0xe
  410d59:	add    bh,BYTE PTR [ebp-0x24e9d322]
  410d5f:	inc    ebp
  410d60:	fwait
  410d61:	dec    esp
  410d62:	pop    edi
  410d63:	scas   al,BYTE PTR es:[edi]
  410d64:	or     bl,BYTE PTR [ebp+0x7a]
  410d67:	ficomp DWORD PTR [ecx-0x73]
  410d6a:	call   DWORD PTR [ecx]
  410d6c:	icebp  
  410d6d:	in     al,dx
  410d6e:	test   BYTE PTR es:[edi-0x18],al
  410d72:	xor    ecx,DWORD PTR [eax]
  410d74:	cmp    cl,BYTE PTR [esi+0x2d]
  410d77:	mov    esi,0xe3656c8f
  410d7c:	cdq    
  410d7d:	sti    
  410d7e:	cwde   
  410d7f:	jecxz  0x410d89
  410d81:	cmp    al,0x60
  410d83:	leave  
  410d84:	enter  0x4d2b,0x8e
  410d88:	add    ebp,DWORD PTR [edx-0x7d8bbdd5]
  410d8e:	mov    BYTE PTR [ecx+0x422eb9bc],cl
  410d94:	hlt    
  410d95:	cmp    eax,0x959720e0
  410d9a:	add    BYTE PTR [ebp+0x653d7e38],ch
  410da0:	in     al,0x3d
  410da2:	jg     0x410d25
  410da4:	cmp    BYTE PTR ds:0xb0719136,ah
  410daa:	cmp    eax,0xe1f4d3a4
  410daf:	xchg   edx,eax
  410db0:	outs   dx,BYTE PTR ds:[esi]
  410db1:	enter  0x6cb3,0xdc
  410db5:	test   DWORD PTR [ebp-0x22],0x9c14104a
  410dbc:	adc    DWORD PTR [edi+0x2d],edi
  410dbf:	clc    
  410dc0:	ds or  eax,0xe6523e0b
  410dc6:	jno    0x410db2
  410dc8:	inc    edx
  410dc9:	mov    DWORD PTR [eax],ebp
  410dcb:	loopne 0x410d9e
  410dcd:	mov    BYTE PTR [ebx],cl
  410dcf:	mov    edi,0x385939a4
  410dd4:	mov    DWORD PTR gs:[eax+0x1cfa909f],edi
  410ddb:	add    al,0xe4
  410ddd:	clc    
  410dde:	stc    
  410ddf:	xchg   ebx,eax
  410de0:	cmp    BYTE PTR [ecx+eax*2-0x3e],dh
  410de4:	pop    ecx
  410de5:	jae    0x410dea
  410de7:	test   DWORD PTR [esi-0x46],edx
  410dea:	inc    eax
  410deb:	scas   al,BYTE PTR es:[edi]
  410dec:	xchg   esi,eax
  410ded:	sahf   
  410dee:	push   eax
  410def:	and    eax,0xc3798127
  410df4:	and    eax,0x81de873
  410df9:	arpl   WORD PTR [eax],di
  410dfb:	dec    edi
  410dfc:	and    eax,0x65031a28
  410e01:	and    BYTE PTR [ebx+0x216a7b2b],bl
  410e07:	mov    dh,0x15
  410e09:	mov    ebp,0x901fb90a
  410e0e:	imul   ebx,DWORD PTR [edi-0x56],0xffffffda
  410e12:	lea    esi,[esi-0x479bf556]
  410e18:	dec    esi
  410e19:	dec    esp
  410e1a:	adc    eax,0x98fa0f21
  410e1f:	int3   
  410e20:	pop    ss
  410e21:	int3   
  410e22:	sub    edi,ecx
  410e24:	(bad)  
  410e25:	iret   
  410e26:	jns    0x410df4
  410e28:	repnz inc esi
  410e2a:	jmp    0x410e80
  410e2c:	sbb    DWORD PTR ds:0x86d33e9,edx
  410e32:	ss xor al,0xf4
  410e35:	push   0xc9778a99
  410e3a:	push   ss
  410e3b:	sbb    eax,0xf43f4cab
  410e40:	rcl    cl,cl
  410e42:	fcomp  DWORD PTR [ebp-0x5bd3d22e]
  410e48:	(bad)  
  410e49:	jmp    0x410e85
  410e4b:	jp     0x410e5a
  410e4d:	in     al,dx
  410e4e:	mov    ah,BYTE PTR [ebp-0x3ab9244e]
  410e54:	mov    esp,0xf158847c
  410e59:	xchg   DWORD PTR [ebp-0x44],edx
  410e5c:	fcomp  DWORD PTR [ebx-0x77]
  410e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e60:	dec    esp
  410e61:	fs sbb BYTE PTR ss:[eax+0x56],ah
  410e66:	outs   dx,BYTE PTR ds:[esi]
  410e67:	mov    esi,0x7a94ed33
  410e6c:	lahf   
  410e6d:	imul   ch
  410e6f:	pop    edi
  410e70:	xchg   esi,eax
  410e71:	pop    ds
  410e72:	jo     0x410eea
  410e74:	std    
  410e75:	push   cs
  410e76:	cmp    al,0xcf
  410e78:	out    0xde,al
  410e7a:	cmp    BYTE PTR [eax-0x3fb22a37],dh
  410e80:	dec    edx
  410e81:	sbb    ebx,DWORD PTR [eax-0x26]
  410e84:	push   es
  410e85:	addr16 iret 
  410e87:	sub    eax,0x58aa28c3
  410e8c:	mul    BYTE PTR [eax+0x6b]
  410e8f:	addr16 adc eax,0x67aa1cad
  410e95:	mov    ebp,0x1542b5c8
  410e9a:	dec    edx
  410e9b:	call   0xad7b67d9
  410ea0:	lahf   
  410ea1:	in     al,0x20
  410ea3:	out    0x21,eax
  410ea5:	mov    al,ds:0x2627ac55
  410eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eab:	cmp    al,0xd2
  410ead:	cmp    eax,0x4e3c55fb
  410eb2:	fisubr DWORD PTR [esi-0x3f]
  410eb5:	dec    ebp
  410eb6:	jne    0x410e3d
  410eb8:	mov    ch,0x8d
  410eba:	sub    eax,0x64f37fc6
  410ebf:	loopne 0x410eb0
  410ec1:	push   edx
  410ec2:	xchg   edi,esp
  410ec4:	int    0x74
  410ec6:	push   esi
  410ec7:	sbb    ebx,DWORD PTR [ebp+0x5d]
  410eca:	add    eax,DWORD PTR [esi-0x3d]
  410ecd:	fldcw  WORD PTR [edx-0x5cb9bc81]
  410ed3:	jmp    0x7dc81280
  410ed8:	popf   
  410ed9:	sub    al,0x19
  410edb:	jo     0x410e9a
  410edd:	pop    eax
  410ede:	js     0x410f0e
  410ee0:	lea    ecx,[ebp+0x1b792eb]
  410ee6:	jnp    0x410f61
  410ee8:	jns    0x410e96
  410eea:	mov    DWORD PTR [ebx],edx
  410eec:	in     al,dx
  410eed:	enter  0x8192,0x56
  410ef1:	ret    
  410ef2:	mov    al,ds:0x62a44d22
  410ef7:	sub    dh,al
  410ef9:	into   
  410efa:	out    0xf,al
  410efc:	call   0xd1e1:0x5ec576e8
  410f03:	jmp    0xf0ef:0x97749a8b
  410f0a:	(bad)  
  410f0b:	scas   eax,DWORD PTR es:[edi]
  410f0c:	sbb    al,0xce
  410f0e:	mov    dh,0x10
  410f10:	sbb    eax,0xef9e1e84
  410f15:	dec    ebp
  410f16:	pusha  
  410f17:	mov    al,ds:0xfbad453c
  410f1c:	arpl   WORD PTR [esi+0x2ee04a90],bp
  410f22:	cmp    DWORD PTR [ecx+0x34],esp
  410f25:	stc    
  410f26:	aaa    
  410f27:	adc    al,0x19
  410f29:	mov    cl,0xe7
  410f2b:	jne    0x410ec8
  410f2d:	push   ds
  410f2e:	add    edx,DWORD PTR [ebp+0x32cf9148]
  410f34:	mov    bh,0x9a
  410f36:	adc    dl,bh
  410f38:	and    eax,ebx
  410f3a:	jmp    0xcf69:0xe51780a4
  410f41:	lea    ebp,[edi]
  410f43:	icebp  
  410f44:	cmp    eax,0x7471b454
  410f49:	mov    eax,ds:0x40b26c37
  410f4e:	fisubr WORD PTR [ecx+0x42758fc6]
  410f54:	pop    ebp
  410f55:	jb     0x410f56
  410f57:	mov    eax,ds:0x4a0d2f27
  410f5c:	cmp    BYTE PTR [eax],0xcf
  410f5f:	sub    al,BYTE PTR [esi]
  410f61:	mov    bh,0x92
  410f63:	inc    edx
  410f64:	mov    ebp,DWORD PTR [ecx-0x3093d3bb]
  410f6a:	cmp    eax,0xbfb28c34
  410f6f:	mov    eax,ds:0x61cd79e2
  410f74:	push   ecx
  410f75:	xchg   esi,eax
  410f76:	push   esi
  410f77:	imul   BYTE PTR ds:0xa1595060
  410f7d:	push   esp
  410f7e:	add    DWORD PTR [ebp-0x6bc359b1],eax
  410f84:	rcl    BYTE PTR [ecx+ecx*4+0x1f],0x49
  410f89:	hlt    
  410f8a:	adc    edi,edi
  410f8c:	in     al,0xfa
  410f8e:	adc    ebp,0xffffffd0
  410f91:	ret    
  410f92:	sub    dl,BYTE PTR [ecx+0x6908027a]
  410f98:	out    dx,al
  410f99:	fst    QWORD PTR [esi-0x3]
  410f9c:	shl    BYTE PTR [ebp-0x69],1
  410f9f:	jnp    0x410fb0
  410fa1:	(bad)  
  410fa2:	fisubr WORD PTR [ebx]
  410fa4:	lods   al,BYTE PTR ds:[esi]
  410fa5:	jg     0x410faf
  410fa7:	call   0x2db5ffd5
  410fac:	inc    ecx
  410fad:	or     DWORD PTR [esi-0x5b],edx
  410fb0:	jb     0x410f38
  410fb2:	xchg   DWORD PTR [ebp+edx*2+0x4d],ebx
  410fb6:	adc    bh,BYTE PTR [ebx-0x56]
  410fb9:	rol    bh,0xb4
  410fbc:	in     al,dx
  410fbd:	sbb    dl,dl
  410fbf:	mov    dl,0x37
  410fc1:	and    bh,BYTE PTR [eax]
  410fc3:	mov    BYTE PTR ds:0x6d90bc75,al
  410fc9:	xchg   ebx,eax
  410fca:	or     DWORD PTR [ecx+0x5512ce56],0x640fad66
  410fd4:	fidiv  WORD PTR [ebx-0x3c]
  410fd7:	jle    0x410f99
  410fd9:	sbb    DWORD PTR [edx+0x6b],edi
  410fdc:	jmp    0x410f79
  410fde:	xor    al,0xbb
  410fe0:	sbb    DWORD PTR ds:[esi+0x1a],ebp
  410fe4:	cmp    eax,0xb7efa53
  410fe9:	mov    dl,0xaf
  410feb:	outs   dx,DWORD PTR ds:[esi]
  410fec:	xor    ebx,DWORD PTR [edi]
  410fee:	retf   0xc5f1
  410ff1:	sbb    dl,BYTE PTR [ebx+0x44f669eb]
  410ff7:	pop    eax
  410ff8:	in     al,0x61
  410ffa:	ss xor eax,0x93f72f9f
  411000:	out    0xd8,eax
  411002:	jl     0x410fe2
  411004:	ds test eax,0x331ef42f
  41100a:	jns    0x410fe8
  41100c:	fsubr  DWORD PTR [esi]
  41100e:	sub    BYTE PTR [ecx-0x4b],dl
  411011:	(bad)  [ebp-0x3d088dc5]
  411017:	adc    edx,ebx
  411019:	push   esp
  41101a:	jbe    0x410f9e
  41101c:	jle    0x41107c
  41101e:	dec    esp
  41101f:	xor    eax,0xbefdf18a
  411024:	cmp    al,0x99
  411026:	push   edi
  411027:	mov    ah,0x4c
  411029:	mov    eax,0x30601015
  41102e:	jno    0x410ffb
  411030:	dec    edi
  411031:	push   ebp
  411032:	ret    0xd93e
  411035:	aad    0x54
  411037:	xchg   esi,eax
  411038:	ins    DWORD PTR es:[edi],dx
  411039:	sub    DWORD PTR [edi+0x8],ecx
  41103c:	cmc    
  41103d:	mov    bh,0x27
  41103f:	xchg   esi,eax
  411040:	lock or ah,BYTE PTR [ebx]
  411043:	adc    al,0xd6
  411045:	xor    DWORD PTR [esi-0x15],esp
  411048:	mov    DWORD PTR [ecx],esp
  41104a:	xchg   ecx,eax
  41104b:	stos   DWORD PTR es:[edi],eax
  41104c:	das    
  41104d:	popa   
  41104e:	daa    
  41104f:	sub    al,0x39
  411051:	sub    eax,0xd661fe3e
  411056:	jno    0x4110b2
  411058:	(bad)  
  411059:	mov    ebx,ss
  41105b:	mov    eax,0x8a264c31
  411060:	add    eax,0x8a678fb8
  411065:	mov    dh,0xdd
  411067:	adc    DWORD PTR [ebp+0x51],edx
  41106a:	xor    eax,0xc8c9600
  41106f:	adc    al,0x2f
  411071:	pop    es
  411072:	mov    bh,0x94
  411074:	pushf  
  411075:	stos   BYTE PTR es:[edi],al
  411076:	sbb    DWORD PTR [edi],eax
  411078:	push   eax
  411079:	push   eax
  41107a:	pushf  
  41107b:	aam    0xf3
  41107d:	shl    DWORD PTR [edi],1
  41107f:	lea    ebx,[eax]
  411081:	out    0xfa,eax
  411083:	and    eax,0xbf102b74
  411088:	or     eax,0x5faf8761
  41108d:	sub    cl,BYTE PTR [edx-0x6f]
  411090:	lods   eax,DWORD PTR ds:[esi]
  411091:	ret    0x9594
  411094:	inc    edx
  411095:	cmp    edi,DWORD PTR [esi-0x403f1923]
  41109b:	sbb    ebp,DWORD PTR [ecx+0x6b]
  41109e:	dec    ecx
  41109f:	jnp    0x41107a
  4110a1:	adc    BYTE PTR [esp+ecx*2],al
  4110a4:	sub    DWORD PTR [edi+0xd21e532],ebx
  4110aa:	pop    ebx
  4110ab:	xor    bl,BYTE PTR [esi+edx*8-0x44e44561]
  4110b2:	sahf   
  4110b3:	sub    al,0x33
  4110b5:	inc    edi
  4110b6:	retf   0x9481
  4110b9:	jbe    0x41104d
  4110bb:	inc    ebp
  4110bc:	ins    BYTE PTR es:[edi],dx
  4110bd:	push   ebx
  4110be:	sub    esp,ecx
  4110c0:	xchg   BYTE PTR [edi+eiz*1+0x59cb67e8],al
  4110c7:	(bad)  
  4110c8:	xchg   ecx,eax
  4110c9:	pop    ds
  4110ca:	adc    al,0xfa
  4110cc:	and    eax,0x5746faaa
  4110d1:	mov    al,0x7b
  4110d3:	popa   
  4110d4:	adc    al,0xe3
  4110d6:	test   BYTE PTR [edx-0x445b546a],ah
  4110dc:	sub    al,0xf5
  4110de:	int    0x64
  4110e0:	les    ebx,FWORD PTR [edi+esi*1+0x305a16a9]
  4110e7:	in     al,dx
  4110e8:	cmp    bl,BYTE PTR [ecx+0x67]
  4110eb:	pop    esi
  4110ec:	adc    eax,edx
  4110ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ef:	push   ds
  4110f0:	gs fcomip st,st(0)
  4110f3:	pusha  
  4110f4:	(bad)
  4110f7:	jo     0x4110a1
  4110f9:	inc    ebx
  4110fa:	and    esi,edx
  4110fc:	loope  0x411145
  4110fe:	pushf  
  4110ff:	icebp  
  411100:	adc    bh,BYTE PTR [ebp+0x21]
  411103:	in     eax,dx
  411104:	icebp  
  411105:	arpl   si,sp
  411107:	mov    edi,0x1820877d
  41110c:	sbb    BYTE PTR [ebx-0x6f4f5664],ah
  411112:	loopne 0x4110a9
  411114:	adc    al,0x1
  411116:	adc    ebx,DWORD PTR [ebp-0x9]
  411119:	scas   al,BYTE PTR es:[edi]
  41111a:	fwait
  41111b:	jmp    0x4110c0
  41111d:	dec    esi
  41111e:	adc    DWORD PTR [ebx],esp
  411120:	out    dx,eax
  411121:	xchg   ebx,eax
  411122:	dec    esi
  411123:	inc    ebx
  411124:	cmp    eax,0xfeebe99e
  411129:	pop    esi
  41112a:	inc    ebx
  41112b:	aam    0x9b
  41112d:	out    0x1f,eax
  41112f:	xor    al,BYTE PTR [eax-0x3e]
  411132:	loopne 0x41115b
  411134:	sub    al,0xfc
  411136:	add    esi,0x97e6ed1
  41113c:	scas   eax,DWORD PTR es:[edi]
  41113d:	int3   
  41113e:	into   
  41113f:	mov    esp,DWORD PTR [ebx+0x44]
  411142:	inc    esp
  411143:	adc    bh,bh
  411145:	data16 fcmovbe st,st(4)
  411148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411149:	or     edi,edi
  41114b:	fisttp DWORD PTR [edx+eiz*2+0x74]
  41114f:	inc    edx
  411150:	neg    DWORD PTR [ebx+0x72709c3b]
  411156:	jb     0x4111c0
  411158:	in     eax,dx
  411159:	jecxz  0x4111af
  41115b:	sbb    eax,0x670e2598
  411160:	and    bh,ch
  411162:	or     eax,0x88eff653
  411167:	fld    st(7)
  411169:	pop    edi
  41116a:	and    BYTE PTR [ecx],bh
  41116c:	jg     0x411105
  41116e:	add    BYTE PTR [edi+0x3a],0xc6
  411172:	inc    eax
  411173:	sbb    dh,dh
  411175:	jmp    0x4cbfdb22
  41117a:	sub    al,0x22
  41117c:	mov    ch,0x35
  41117e:	std    
  41117f:	imul   ecx,eax,0x13678e1b
  411185:	push   0x853d06c2
  41118a:	and    DWORD PTR [edi],0x9f7106fa
  411190:	imul   esp,DWORD PTR [esi-0x3ededaba],0xbfa1162a
  41119a:	fisttp WORD PTR [eax+esi*4]
  41119d:	mov    esp,0x1ad97db6
  4111a2:	cmp    dl,BYTE PTR [eax+ebx*1]
  4111a5:	repz into 
  4111a7:	jno    0x41115a
  4111a9:	mov    ds:0x581103f2,eax
  4111ae:	ds fcom st(1)
  4111b1:	paddw  mm4,mm4
  4111b4:	pop    edi
  4111b5:	ds dec edi
  4111b7:	sub    bh,ah
  4111b9:	and    BYTE PTR [edi-0xfbbcebe],bh
  4111bf:	dec    edx
  4111c0:	sbb    eax,0x8a23799e
  4111c5:	imul   ecx,DWORD PTR [ebp+0x13],0xffffffb3
  4111c9:	dec    esp
  4111ca:	int3   
  4111cb:	cmp    esp,edx
  4111cd:	daa    
  4111ce:	shl    edx,cl
  4111d0:	sar    DWORD PTR ds:0x554daecf,cl
  4111d6:	cmp    DWORD PTR [edx+0x277ad7dd],eax
  4111dc:	cwde   
  4111dd:	or     al,0x5b
  4111df:	or     ecx,ebp
  4111e1:	scas   eax,DWORD PTR es:[edi]
  4111e2:	mov    bh,BYTE PTR [esi+ecx*1+0x2]
  4111e6:	add    eax,0x7448408e
  4111eb:	dec    edx
  4111ec:	jg     0x411194
  4111ee:	out    0x1a,al
  4111f0:	aas    
  4111f1:	hlt    
  4111f2:	and    dh,BYTE PTR [ebx+0x4fb9e7b1]
  4111f8:	clc    
  4111f9:	fwait
  4111fa:	sub    eax,0xfef00e7a
  4111ff:	or     esp,ebp
  411201:	imul   ecx,DWORD PTR [edx],0xffffffbb
  411204:	add    DWORD PTR [edx],edx
  411206:	push   0x4f
  411208:	pushf  
  411209:	adc    DWORD PTR [edi],ecx
  41120b:	icebp  
  41120c:	mov    WORD PTR [edx+esi*8+0x62ae62e5],?
  411213:	jl     0x411292
  411215:	sbb    esp,esi
  411217:	push   eax
  411218:	out    0x7e,al
  41121a:	or     DWORD PTR [edx-0x76],esi
  41121d:	inc    esi
  41121e:	jge    0x411239
  411220:	xor    dh,BYTE PTR [esi-0x4d]
  411223:	fsub   QWORD PTR [ecx]
  411225:	ins    DWORD PTR es:[edi],dx
  411226:	xchg   ebp,eax
  411227:	adc    eax,0x2f8c7e2a
  41122c:	cwde   
  41122d:	lds    esp,FWORD PTR [ebx-0x44]
  411230:	mov    al,ds:0x7bd40e97
  411235:	mov    ebp,0xd9db647b
  41123a:	adc    dh,BYTE PTR [ebx]
  41123c:	std    
  41123d:	mov    ds:0xb4878ddb,al
  411242:	gs out dx,eax
  411244:	add    al,0xd5
  411246:	inc    esi
  411247:	dec    ebx
  411248:	xlat   BYTE PTR ds:[ebx]
  411249:	fnstcw WORD PTR ds:0x6f9090b3
  41124f:	pop    eax
  411250:	push   0x2d
  411252:	jbe    0x4111f2
  411254:	dec    esi
  411255:	stos   BYTE PTR es:[edi],al
  411256:	ret    
  411257:	xor    BYTE PTR [edx-0x7a],bl
  41125a:	xchg   ebx,eax
  41125b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125c:	dec    esp
  41125d:	and    DWORD PTR [ecx-0x48898623],esp
  411263:	repnz sbb eax,0xbdc3ed80
  411269:	jb     0x41125c
  41126b:	mov    edi,0x9d96c983
  411270:	dec    esp
  411271:	fdiv   DWORD PTR [edx-0x709710cd]
  411277:	call   0x3daac560
  41127c:	xlat   BYTE PTR ds:[ebx]
  41127d:	clc    
  41127e:	mov    esi,DWORD PTR [edx]
  411280:	dec    edi
  411281:	mov    ah,0x48
  411283:	and    eax,edi
  411285:	sub    edi,eax
  411287:	js     0x411241
  411289:	retf   0x8ad0
  41128c:	jo     0x4112f7
  41128e:	mov    al,0xc3
  411290:	sbb    eax,0x59c7895d
  411295:	ficomp WORD PTR [ebx+0x3c97e7e2]
  41129b:	pop    ds
  41129c:	sub    al,0xd5
  41129e:	jne    0x411289
  4112a0:	inc    ecx
  4112a1:	rol    edi,cl
  4112a3:	in     al,dx
  4112a4:	lods   al,BYTE PTR ds:[esi]
  4112a5:	fs mov esi,0xc64aee96
  4112ab:	idiv   DWORD PTR [ebx]
  4112ad:	mov    DWORD PTR [eax],ecx
  4112af:	loop   0x4112af
  4112b1:	scas   al,BYTE PTR es:[edi]
  4112b2:	sar    BYTE PTR [ebx+ebp*2+0x64],1
  4112b6:	mov    ebp,0x879f433c
  4112bb:	sbb    bl,dl
  4112bd:	ss jnp 0x411327
  4112c0:	adc    ecx,DWORD PTR [ecx-0x4d]
  4112c3:	loop   0x4112c6
  4112c5:	nop
  4112c6:	dec    edi
  4112c7:	ret    0x2cb4
  4112ca:	xchg   ebx,eax
  4112cb:	push   ebp
  4112cc:	clc    
  4112cd:	daa    
  4112ce:	mov    ch,0x76
  4112d0:	mov    ds:0xdc1bcd6b,al
  4112d5:	pop    ss
  4112d6:	js     0x4112e2
  4112d8:	adc    ecx,DWORD PTR [edi-0x7154e33c]
  4112de:	dec    ecx
  4112df:	xchg   esp,eax
  4112e0:	pop    ecx
  4112e1:	fsubrp st(0),st
  4112e3:	cmp    eax,ebx
  4112e5:	test   BYTE PTR [ecx],0x4c
  4112e8:	(bad)  
  4112e9:	jmp    0x9dcef83d
  4112ee:	aas    
  4112ef:	pop    edx
  4112f0:	cmp    edx,ecx
  4112f2:	out    0x48,al
  4112f4:	or     ch,bl
  4112f6:	fwait
  4112f7:	push   esi
  4112f8:	push   ecx
  4112f9:	pop    ss
  4112fa:	pop    es
  4112fb:	retf   
  4112fc:	lahf   
  4112fd:	push   eax
  4112fe:	sub    bl,BYTE PTR [esi-0x48523b6]
  411304:	sar    BYTE PTR [eax],0x58
  411307:	stc    
  411308:	pop    eax
  411309:	scas   al,BYTE PTR es:[edi]
  41130a:	jno    0x411359
  41130c:	test   al,0x11
  41130e:	xchg   ebp,eax
  41130f:	xor    DWORD PTR [eax],ebp
  411311:	pop    ebp
  411312:	call   0xdd864ddf
  411317:	cmp    BYTE PTR [edx+0x16],bl
  41131a:	test   al,0xea
  41131c:	jge    0x41136b
  41131e:	inc    ebx
  41131f:	push   edi
  411320:	or     esi,DWORD PTR [ebp+eax*2+0x5a]
  411324:	cmp    eax,0x437fb78c
  411329:	fsubr  QWORD PTR [edi+0x49caefb8]
  41132f:	std    
  411330:	lock jne 0x41139b
  411333:	std    
  411334:	inc    ecx
  411335:	mov    al,0x89
  411337:	mov    dh,0xc6
  411339:	jae    0x4112c7
  41133b:	xchg   ebx,eax
  41133c:	jbe    0x4112f6
  41133e:	mov    bh,0xba
  411340:	add    eax,0x76db1d74
  411345:	out    0xaf,eax
  411347:	mov    eax,ds:0xa369ab14
  41134c:	out    0xaa,eax
  41134e:	(bad)  
  41134f:	jmp    0x41137c
  411351:	add    al,0xe1
  411353:	cmc    
  411354:	mov    edx,DWORD PTR [ecx+edx*4]
  411357:	scas   al,BYTE PTR es:[edi]
  411358:	es jmp 0xb5eb:0x1a760cf5
  411360:	jb     0x41133b
  411362:	(bad)  
  411363:	xchg   ebx,eax
  411364:	fadd   DWORD PTR ds:0xd62d08ec
  41136a:	loopne 0x411305
  41136c:	daa    
  41136d:	inc    ebx
  41136e:	enter  0x534b,0x39
  411372:	jbe    0x411313
  411374:	stc    
  411375:	retf   
  411376:	mov    dl,0x5
  411378:	data16 and ch,BYTE PTR [esi]
  41137b:	inc    edx
  41137c:	loope  0x4113b0
  41137e:	push   0xe28f0bd1
  411383:	xchg   esp,eax
  411384:	add    dl,ah
  411386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411387:	lods   al,BYTE PTR ds:[esi]
  411388:	lods   al,BYTE PTR ds:[esi]
  411389:	ins    DWORD PTR es:[edi],dx
  41138a:	adc    cl,BYTE PTR [edi-0x6b]
  41138d:	or     ebx,DWORD PTR [eax+0x66]
  411390:	mov    ebx,0x5f2d14fb
  411395:	enter  0x5c8d,0xe7
  411399:	sub    BYTE PTR [ebx-0x80],bh
  41139c:	shl    DWORD PTR [edi-0x5b0fa6cf],0xa7
  4113a3:	out    dx,eax
  4113a4:	jle    0x411339
  4113a6:	pop    ebx
  4113a7:	push   eax
  4113a8:	dec    ecx
  4113a9:	les    eax,FWORD PTR [ecx+ecx*1-0x41]
  4113ad:	adc    ebx,DWORD PTR [eax]
  4113af:	dec    esp
  4113b0:	or     al,0xc1
  4113b2:	dec    ebx
  4113b3:	lds    edx,FWORD PTR [ecx-0x10ad3796]
  4113b9:	add    BYTE PTR [esi+0x11],cl
  4113bc:	(bad)  
  4113bd:	mov    dh,BYTE PTR [edx+0x39d608c7]
  4113c3:	mov    al,0x6e
  4113c5:	jle    0x411405
  4113c7:	or     BYTE PTR [esi+ebp*4+0x2],0xd0
  4113cc:	jne    0x411368
  4113ce:	jmp    0xf010189b
  4113d3:	jo     0x411390
  4113d5:	mov    bh,0xb
  4113d7:	ins    BYTE PTR es:[edi],dx
  4113d8:	scas   eax,DWORD PTR es:[edi]
  4113d9:	ret    0x8b90
  4113dc:	jb     0x4113ee
  4113de:	out    dx,al
  4113df:	ret    0x2028
  4113e2:	mov    dh,0x88
  4113e4:	sbb    DWORD PTR [ebx],0x48
  4113e7:	adc    BYTE PTR [edx],0xec
  4113ea:	nop
  4113eb:	in     al,0x13
  4113ed:	and    BYTE PTR [esi+edi*2],dh
  4113f0:	bound  esi,QWORD PTR [ecx+eiz*4-0x1acf428]
  4113f7:	pop    ds
  4113f8:	xchg   edi,eax
  4113f9:	and    edi,DWORD PTR [edi-0x20b1043]
  4113ff:	inc    esp
  411400:	lds    edx,FWORD PTR [esi+0x62]
  411403:	pop    esp
  411404:	sub    ecx,DWORD PTR [esi-0x72b525a2]
  41140a:	mov    cl,0x29
  41140c:	rcr    ecx,0x64
  41140f:	rcr    BYTE PTR [ecx-0x4ecd8c12],cl
  411415:	mov    al,ds:0x7877ad1e
  41141a:	inc    edx
  41141b:	and    ch,BYTE PTR [ebx+0x37f7a3ad]
  411421:	mov    dl,0xd2
  411423:	inc    esp
  411424:	nop
  411425:	and    eax,0x5363aca0
  41142a:	cmp    BYTE PTR [ebx],bl
  41142c:	inc    ebx
  41142d:	push   edx
  41142e:	cs push edx
  411430:	jl     0x411442
  411432:	mov    ds:0xbd619bb8,eax
  411437:	inc    ebp
  411438:	sbb    BYTE PTR [ecx+edx*4],0x5a
  41143c:	add    eax,0x1226de4b
  411441:	mov    cl,0x37
  411443:	lods   eax,DWORD PTR ds:[esi]
  411444:	inc    ebp
  411445:	(bad)  
  411446:	xlat   BYTE PTR ds:[ebx]
  411447:	mov    ebx,0xd22b6ba7
  41144c:	dec    ebp
  41144d:	leavew 
  41144f:	sub    bl,BYTE PTR [ecx-0x73]
  411452:	cld    
  411453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411454:	addr16 ds mov dl,0xea
  411458:	mov    cs,WORD PTR [ebx-0x17]
  41145b:	test   eax,0x6b348a2f
  411460:	or     al,al
  411462:	fbstp  TBYTE PTR [esi+0x47c71aab]
  411468:	mov    dl,BYTE PTR [edi]
  41146a:	add    DWORD PTR [esi-0x16],ecx
  41146d:	cmp    bl,bl
  41146f:	pusha  
  411470:	or     al,cl
  411472:	inc    ebx
  411473:	or     dl,0x4
  411476:	loopne 0x41143a
  411478:	pop    eax
  411479:	pusha  
  41147a:	push   edi
  41147b:	xchg   esi,eax
  41147c:	fst    DWORD PTR [eax+0x3e]
  41147f:	pop    ebp
  411480:	push   ecx
  411481:	and    al,0x6d
  411483:	mov    bh,BYTE PTR [esi]
  411485:	mov    ds:0x11b83360,al
  41148a:	or     eax,0xbfa58852
  41148f:	push   edi
  411490:	pop    ss
  411491:	cmp    ebp,DWORD PTR [ecx]
  411493:	sar    BYTE PTR [edi+0x4],cl
  411496:	mov    al,ds:0x6425b10c
  41149b:	push   cs
  41149c:	in     al,0x12
  41149e:	stc    
  41149f:	jge    0x4114eb
  4114a1:	mov    ecx,0x18185941
  4114a6:	jp     0x411429
  4114a8:	mov    ch,0xcf
  4114aa:	sub    BYTE PTR [edx-0x127a5bba],ah
  4114b0:	sahf   
  4114b1:	and    al,0xa2
  4114b3:	gs (bad) 
  4114b5:	mov    DWORD PTR [ebx],edi
  4114b7:	dec    ecx
  4114b8:	out    dx,al
  4114b9:	dec    esp
  4114ba:	inc    ebx
  4114bb:	mov    ch,0x61
  4114bd:	pop    eax
  4114be:	cmp    eax,0xa4026e5e
  4114c3:	xchg   DWORD PTR [edx+0x4a3d034e],edx
  4114c9:	fwait
  4114ca:	dec    ebx
  4114cb:	mov    ebp,DWORD PTR [ecx-0x17]
  4114ce:	lods   eax,DWORD PTR ds:[esi]
  4114cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d0:	js     0x4114d9
  4114d2:	cld    
  4114d3:	inc    esp
  4114d4:	push   0x5f
  4114d6:	das    
  4114d7:	ins    BYTE PTR es:[edi],dx
  4114d8:	not    BYTE PTR [edi]
  4114da:	rcl    dl,1
  4114dc:	push   es
  4114dd:	mov    esp,0x6af0b620
  4114e2:	fnsave [eax-0x66fffcb0]
  4114e8:	mov    al,bl
  4114ea:	adc    edx,DWORD PTR [ebx]
  4114ec:	add    al,0x3
  4114ee:	add    dl,BYTE PTR [ecx+edx*2]
  4114f1:	out    dx,eax
  4114f2:	pop    edx
  4114f3:	ror    DWORD PTR [edi+0x40],cl
  4114f6:	sub    DWORD PTR [eax+ebp*4],0xfffffff1
  4114fa:	xor    eax,0x3c90fdbd
  4114ff:	retw   
  411501:	fldcw  WORD PTR [ecx]
  411503:	and    bl,BYTE PTR [edx+ecx*4]
  411506:	sub    ecx,eax
  411508:	outs   dx,DWORD PTR ds:[esi]
  411509:	pop    edi
  41150a:	add    edi,DWORD PTR [eax-0xf]
  41150d:	(bad)  [esi-0x6adf8e40]
  411513:	ins    BYTE PTR es:[edi],dx
  411514:	sbb    DWORD PTR [ecx],edx
  411516:	and    edx,DWORD PTR [edi]
  411518:	pop    edx
  411519:	outs   dx,DWORD PTR ds:[esi]
  41151a:	mov    ds:0xf6f37ae6,eax
  41151f:	mul    DWORD PTR [ecx]
  411521:	fisub  WORD PTR [eax]
  411523:	jge    0x41154f
  411525:	imul   edi,DWORD PTR [edi],0xc6f1032d
  41152b:	inc    DWORD PTR [ebp+0x1078def3]
  411531:	fild   DWORD PTR [edx]
  411533:	mov    eax,0xe25105be
  411538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411539:	sar    dl,0x43
  41153c:	sbb    eax,0xa247ad87
  411541:	sbb    DWORD PTR [edi+0x2ab5de6],eax
  411547:	mov    eax,?
  411549:	inc    eax
  41154a:	fbstp  TBYTE PTR [ebp+0x6b]
  41154d:	inc    ecx
  41154e:	inc    edx
  41154f:	dec    ecx
  411550:	call   0x6e1c:0xc8862a48
  411557:	fs scas eax,DWORD PTR es:[edi]
  411559:	push   esi
  41155a:	ficomp DWORD PTR [esi-0x16e5396e]
  411560:	fstp   DWORD PTR [eax+0x5881067a]
  411566:	not    DWORD PTR [edx]
  411568:	into   
  411569:	ret    
  41156a:	test   BYTE PTR [esi+eiz*1-0x7d522d4a],0x69
  411572:	ret    
  411573:	adc    al,0xf9
  411575:	in     al,0x91
  411577:	sti    
  411578:	mov    al,0xa9
  41157a:	pop    edi
  41157b:	mov    dh,0x22
  41157d:	push   esp
  41157e:	push   ds
  41157f:	xchg   ebp,eax
  411580:	in     al,0xde
  411582:	mov    WORD PTR [edx-0x5],ss
  411585:	popa   
  411586:	mov    esp,0x18568b68
  41158b:	pop    ds
  41158c:	clc    
  41158d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158e:	jno    0x4115c6
  411590:	xor    BYTE PTR [eax-0x4a],cl
  411593:	or     DWORD PTR [eax+0x1c0e699f],0xffffff9e
  41159a:	rol    DWORD PTR [edx],1
  41159c:	or     al,0x3b
  41159e:	aad    0xa5
  4115a0:	enter  0x6481,0x51
  4115a4:	je     0x41152a
  4115a6:	and    dl,dh
  4115a8:	in     al,dx
  4115a9:	cmp    BYTE PTR [eax],ch
  4115ab:	mov    bh,0xb7
  4115ad:	imul   eax,edx,0xfffffffc
  4115b0:	(bad)  
  4115b1:	mov    ebx,0x70179892
  4115b6:	outs   dx,DWORD PTR ds:[esi]
  4115b7:	outs   dx,BYTE PTR ds:[esi]
  4115b8:	add    ah,BYTE PTR ds:0xc3c2416e
  4115be:	imul   ebx,edi,0x67
  4115c1:	lea    ebx,[esp+ecx*4]
  4115c4:	xchg   ecx,eax
  4115c5:	cmp    ebx,esi
  4115c7:	jp     0x4115b3
  4115c9:	imul   esi,DWORD PTR [ebp+0x557eb2a],0xb98aa78
  4115d3:	jge    0x41160b
  4115d5:	imul   eax,DWORD PTR [esi-0x1a8a91f4],0xdb522e04
  4115df:	mov    edi,0x387b0c81
  4115e4:	out    dx,eax
  4115e5:	iret   
  4115e6:	rcr    DWORD PTR [edx+0x781cffcb],cl
  4115ec:	retf   0x43c4
  4115ef:	out    0xbc,al
  4115f1:	shl    DWORD PTR [edi+eiz*8],1
  4115f4:	test   al,0x80
  4115f6:	nop
  4115f7:	pop    ecx
  4115f8:	xchg   edx,eax
  4115f9:	xchg   edx,eax
  4115fa:	ror    BYTE PTR [esi+0x53],0xc8
  4115fe:	cmp    al,0x9f
  411600:	jp     0x41165c
  411602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411603:	out    0x43,eax
  411605:	ror    BYTE PTR [eax],cl
  411607:	adc    BYTE PTR [ecx],dl
  411609:	sahf   
  41160a:	aaa    
  41160b:	retf   0xaf51
  41160e:	call   0x459b:0x6ed303f3
  411615:	xchg   ecx,eax
  411616:	addr16 xor edx,esi
  411619:	adc    eax,0x8a4ae798
  41161e:	pop    ecx
  41161f:	mov    esp,0x5c1507ab
  411624:	std    
  411625:	and    al,0xe6
  411627:	aad    0x7d
  411629:	pushf  
  41162a:	xchg   bp,ax
  41162c:	sub    al,0xa8
  41162e:	enter  0x73d4,0xaf
  411632:	push   gs
  411634:	xchg   ecx,eax
  411635:	add    bl,ah
  411637:	shl    BYTE PTR [eax],cl
  411639:	loop   0x4116b2
  41163b:	push   edi
  41163c:	jecxz  0x41162a
  41163e:	sub    DWORD PTR [ecx],eax
  411640:	push   eax
  411641:	mov    BYTE PTR [edx+0x51],cl
  411644:	(bad)  
  411646:	sub    ebx,DWORD PTR ds:0x52d9360
  41164c:	retf   0x9cc2
  41164f:	pop    edi
  411650:	adc    al,0x6c
  411652:	xchg   DWORD PTR es:0x885536ab,esp
  411659:	icebp  
  41165a:	sub    BYTE PTR [ebx],dh
  41165c:	shl    BYTE PTR [edi-0x77],1
  41165f:	lea    eax,[esp+ecx*4-0x4f]
  411663:	xchg   esp,eax
  411664:	or     DWORD PTR [edx-0x7114b758],ebx
  41166a:	jne    0x411681
  41166c:	test   al,0xf3
  41166e:	jo     0x41167e
  411670:	mov    cl,bl
  411672:	xchg   ebx,eax
  411673:	test   eax,0x3ceb219a
  411678:	dec    eax
  411679:	xor    eax,0x7ddaf1d7
  41167e:	gs pop edi
  411680:	adc    eax,0x1f2c325c
  411685:	jp     0x4116ca
  411687:	pop    ss
  411688:	(bad)  
  411689:	es push 0x5dbc0db8
  41168f:	add    esp,eax
  411691:	inc    ecx
  411692:	sub    edx,DWORD PTR [ebp+0x10]
  411695:	sti    
  411696:	mov    ah,0xcb
  411698:	jge    0x4116e9
  41169a:	jae    0x41167b
  41169c:	jns    0x41163c
  41169e:	dec    eax
  41169f:	cmp    edi,DWORD PTR [edi+0x603e2b5]
  4116a5:	push   ebp
  4116a6:	mov    dl,bh
  4116a8:	jns    0x411630
  4116aa:	leave  
  4116ab:	lds    ecx,FWORD PTR [edx]
  4116ad:	in     al,dx
  4116ae:	sti    
  4116af:	ret    0xe3e0
  4116b2:	test   BYTE PTR [ebp-0x78],bh
  4116b5:	pop    es
  4116b6:	add    eax,0x5c5cc1a5
  4116bb:	shl    DWORD PTR [ecx-0x4a11e7e2],cl
  4116c1:	or     BYTE PTR [ebp+0x42993b01],ah
  4116c7:	out    0x9c,eax
  4116c9:	mov    DWORD PTR [ebx+0x5600575a],esi
  4116cf:	lods   al,BYTE PTR ds:[esi]
  4116d0:	mov    ds:0x8e177080,al
  4116d5:	cli    
  4116d6:	jae    0x4116db
  4116d8:	retf   0xc213
  4116db:	adc    bl,al
  4116dd:	test   eax,0xf9ae9d49
  4116e2:	or     ebx,DWORD PTR [esp+eiz*2+0x303995be]
  4116e9:	int3   
  4116ea:	aam    0xf4
  4116ec:	sbb    eax,0x8fcfe1bd
  4116f1:	sahf   
  4116f2:	dec    esp
  4116f3:	cmp    ebp,DWORD PTR [esi-0x17e49d1c]
  4116f9:	mov    dh,0xd5
  4116fb:	pop    esi
  4116fc:	jnp    0x41176d
  4116fe:	adc    DWORD PTR [edi-0x6a],esp
  411701:	ret    0x7503
  411704:	push   eax
  411705:	jle    0x4116d1
  411707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411708:	int    0x67
  41170a:	sbb    DWORD PTR [ecx],ebp
  41170c:	mov    eax,ds:0xdf19d445
  411711:	push   edx
  411712:	and    ah,BYTE PTR [esi]
  411714:	mov    DWORD PTR [eax-0x65],edi
  411717:	jae    0x41173e
  411719:	inc    eax
  41171a:	mov    eax,ds:0x3adb41db
  41171f:	jne    0x41176c
  411721:	jb     0x41178d
  411723:	inc    ecx
  411724:	call   DWORD PTR [ecx+0x3a]
  411727:	test   eax,0x364ed146
  41172c:	xchg   BYTE PTR es:[ebx+0x1dfedf94],ah
  411733:	mov    edi,0xd225b32d
  411738:	mov    bh,0x75
  41173a:	pop    ss
  41173b:	mov    ds:0xf38eb82d,eax
  411740:	inc    edx
  411741:	out    dx,al
  411742:	mov    ds:0x91c89edc,al
  411747:	xor    bh,BYTE PTR [edx+0x56a4b1a0]
  41174d:	push   edx
  41174e:	push   ebx
  41174f:	pop    edi
  411750:	xchg   esi,eax
  411751:	(bad)  
  411752:	stos   DWORD PTR es:[edi],eax
  411753:	add    eax,0xc3493614
  411758:	xor    edi,DWORD PTR [edi]
  41175a:	ret    
  41175b:	adc    cl,BYTE PTR [ebp-0x34]
  41175e:	out    dx,al
  41175f:	inc    ecx
  411760:	clc    
  411761:	(bad)  
  411762:	xor    al,0x4d
  411764:	mov    cl,0xc7
  411766:	ret    
  411767:	fisttp DWORD PTR [edx]
  411769:	mov    ebp,0xd7c618c3
  41176e:	inc    ebp
  41176f:	popa   
  411770:	xor    al,0xbf
  411772:	je     0x4117c2
  411774:	adc    al,0xb7
  411776:	call   0xd45a0dbc
  41177b:	sar    BYTE PTR [edi+0x6a],0x6f
  41177f:	lea    ecx,[ebx]
  411781:	call   0x329b481e
  411786:	lods   al,BYTE PTR ds:[esi]
  411787:	lds    edi,FWORD PTR [esi+0x10a39fdf]
  41178d:	dec    edi
  41178e:	lods   al,BYTE PTR ds:[esi]
  41178f:	cmp    ch,dl
  411791:	push   edi
  411792:	xor    dh,al
  411794:	adc    edi,DWORD PTR [ecx]
  411796:	loope  0x4117cf
  411798:	pop    edx
  411799:	jmp    0x3d0b:0x92ca1a16
  4117a0:	sahf   
  4117a1:	(bad)  
  4117a2:	cmp    BYTE PTR [eax],bl
  4117a4:	mov    bl,0xc6
  4117a6:	dec    esp
  4117a7:	ficom  WORD PTR [ebp+0x20]
  4117aa:	out    dx,al
  4117ab:	repnz lods eax,DWORD PTR ds:[esi]
  4117ad:	dec    edi
  4117ae:	jl     0x41180a
  4117b0:	(bad)  
  4117b1:	cmp    eax,0xc90e49f4
  4117b6:	lods   eax,DWORD PTR ds:[esi]
  4117b7:	pop    edx
  4117b8:	add    bl,BYTE PTR [ecx]
  4117ba:	or     eax,0xad698e81
  4117bf:	cwde   
  4117c0:	add    dh,0x26
  4117c3:	dec    ecx
  4117c4:	loope  0x411806
  4117c6:	inc    esi
  4117c7:	add    eax,0xacc371c0
  4117cc:	dec    esp
  4117cd:	xor    esi,DWORD PTR [ebx-0x65]
  4117d0:	int3   
  4117d1:	adc    BYTE PTR [eax],bh
  4117d3:	dec    eax
  4117d4:	jb     0x411792
  4117d6:	xchg   ebx,eax
  4117d7:	sbb    al,0x5e
  4117d9:	cdq    
  4117da:	ja     0x411786
  4117dc:	scas   al,BYTE PTR es:[edi]
  4117dd:	or     BYTE PTR [ebp+edi*8+0x3593ae2b],dl
  4117e4:	xchg   esp,eax
  4117e5:	mul    DWORD PTR ds:0xb8144ce7
  4117eb:	lea    eax,[edi-0x3]
  4117ee:	cmovno ecx,DWORD PTR [edx+0x1c]
  4117f2:	push   ebp
  4117f3:	inc    eax
  4117f4:	enter  0x819c,0x94
  4117f8:	popf   
  4117f9:	(bad)  
  4117fa:	dec    ebp
  4117fb:	cmp    DWORD PTR [esi-0x2f],esi
  4117fe:	and    eax,0xbd083143
  411803:	jecxz  0x4117b0
  411805:	mov    cl,0xed
  411807:	xchg   sp,ax
  411809:	pop    es
  41180a:	xchg   ebx,eax
  41180b:	mov    ebx,0x9b73f0dc
  411810:	or     dl,ch
  411812:	jg     0x41185d
  411814:	int    0x6b
  411816:	outs   dx,DWORD PTR ds:[esi]
  411817:	sbb    BYTE PTR [edx],ch
  411819:	mov    ds:0xf5fb7dcf,al
  41181e:	ss cdq 
  411820:	(bad)  
  411821:	cmp    al,0xa1
  411823:	call   0xb921:0x14c490d4
  41182a:	mov    BYTE PTR [esi-0x427beb68],ah
  411830:	stos   DWORD PTR es:[edi],eax
  411831:	mov    bl,bh
  411833:	mov    fs,WORD PTR [ecx-0x31]
  411836:	aad    0x42
  411838:	inc    ecx
  411839:	and    BYTE PTR [ecx+0x58],ah
  41183c:	jmp    0x83385e57
  411841:	dec    edi
  411842:	adc    ah,BYTE PTR [esp+esi*1-0x6]
  411846:	(bad)  [eax]
  411848:	sub    eax,0x13ce1813
  41184d:	retf   0xc7ce
  411850:	mov    eax,ds:0xee8298d7
  411855:	int    0x90
  411857:	cmc    
  411858:	or     DWORD PTR [eax-0x6eb9c8d9],ebx
  41185e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41185f:	inc    ebp
  411860:	mov    edi,0x944e1ff3
  411865:	idiv   DWORD PTR [ebx+edi*2+0x1b9f11da]
  41186c:	mov    edx,0x687a921f
  411871:	pop    es
  411872:	lods   al,BYTE PTR ds:[esi]
  411873:	leave  
  411874:	scas   al,BYTE PTR es:[edi]
  411875:	pop    esp
  411876:	adc    ch,BYTE PTR [ebx-0x74]
  411879:	pusha  
  41187a:	jl     0x41188c
  41187c:	and    DWORD PTR [ebx],ebx
  41187e:	ss add al,0x2
  411881:	and    DWORD PTR [edi-0x62],0x34311eea
  411888:	mov    esi,0x2295abdb
  41188d:	test   ecx,ecx
  41188f:	in     al,0x3f
  411891:	mov    dh,0x99
  411893:	mov    ebx,0x6272065e
  411898:	push   edi
  411899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41189a:	or     ebx,DWORD PTR [eax-0xc96c737]
  4118a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a1:	sub    eax,0xa75ab8b0
  4118a6:	inc    ecx
  4118a7:	mov    bl,0xc
  4118a9:	xchg   ebx,eax
  4118aa:	cwde   
  4118ab:	mov    WORD PTR [ecx],cs
  4118ad:	push   ecx
  4118ae:	or     BYTE PTR [edx],dh
  4118b0:	mov    eax,0xce729c56
  4118b5:	add    esp,edx
  4118b7:	push   edi
  4118b8:	stos   BYTE PTR es:[edi],al
  4118b9:	inc    esp
  4118ba:	pop    edx
  4118bb:	xor    bl,BYTE PTR [ebx]
  4118bd:	or     eax,0xad004dd4
  4118c2:	mov    ecx,0xa06f65ee
  4118c7:	(bad)  
  4118c8:	mov    al,ds:0x71fa10c1
  4118cd:	iret   
  4118ce:	jns    0x4118e3
  4118d0:	bswap  edx
  4118d2:	sar    BYTE PTR [eax-0x7c],cl
  4118d5:	stc    
  4118d6:	test   DWORD PTR [ecx],0x15914907
  4118dc:	xchg   edx,eax
  4118dd:	into   
  4118de:	xor    edx,DWORD PTR [edx+0x46]
  4118e1:	dec    edx
  4118e2:	pop    ds
  4118e3:	ficomp WORD PTR [ecx]
  4118e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e6:	ins    BYTE PTR es:[edi],dx
  4118e7:	ror    BYTE PTR [edi+0x25],1
  4118ea:	daa    
  4118eb:	push   ecx
  4118ec:	shl    BYTE PTR [edx],1
  4118ee:	inc    ebp
  4118ef:	inc    ecx
  4118f0:	ficomp WORD PTR [esp+edx*1-0x4a2f800d]
  4118f7:	add    eax,0x51a31ba9
  4118fc:	push   es
  4118fd:	iret   
  4118fe:	push   esp
  4118ff:	iretw  
  411901:	dec    esp
  411902:	mov    dl,0xbf
  411904:	dec    eax
  411905:	xor    edi,DWORD PTR [esi]
  411907:	and    esi,DWORD PTR [edi]
  411909:	jo     0x4118c0
  41190b:	lahf   
  41190c:	outs   dx,DWORD PTR ds:[esi]
  41190d:	pop    ecx
  41190e:	(bad)  
  41190f:	out    dx,eax
  411910:	mov    al,ds:0x6c639037
  411915:	imul   esi,ebx,0x48
  411918:	shl    DWORD PTR [ebp-0x4b],cl
  41191b:	shl    BYTE PTR [edi-0x44a0fe83],0xf7
  411922:	sub    ebp,eax
  411924:	cli    
  411925:	into   
  411926:	jmp    0x41197a
  411928:	ret    0x9d56
  41192b:	stc    
  41192c:	fldcw  WORD PTR [edi-0x62]
  41192f:	rcl    BYTE PTR [edi+edx*1],1
  411932:	lds    esi,FWORD PTR [edx+0x3a0a0986]
  411938:	daa    
  411939:	cs icebp 
  41193b:	in     eax,dx
  41193c:	mov    al,0xa6
  41193e:	in     eax,dx
  41193f:	jo     0x411977
  411941:	push   esi
  411942:	add    BYTE PTR [ebx-0x64],0xce
  411946:	jp     0x4118f4
  411948:	adc    al,0x13
  41194a:	jle    0x411990
  41194c:	ret    0x68fc
  41194f:	mov    eax,ds:0x6e5102d2
  411954:	rcr    DWORD PTR [edx+0x111cddeb],1
  41195a:	and    BYTE PTR [edi+0x4],bl
  41195d:	pop    ds
  41195e:	dec    eax
  41195f:	prefetch (bad)
  411960:	or     eax,0x5d80f7fe
  411965:	dec    edi
  411966:	add    al,BYTE PTR ds:0x6bd3d6b1
  41196c:	cwde   
  41196d:	add    DWORD PTR ds:0xdadf284a,esp
  411973:	shld   DWORD PTR [esi],ebp,cl
  411976:	rcr    BYTE PTR [ecx],0xa4
  411979:	xchg   DWORD PTR [ebx],eax
  41197b:	out    0x9f,al
  41197d:	mov    DWORD PTR [eax+0xdd0c8e9],edx
  411983:	sub    BYTE PTR [eax-0x72],0x18
  411987:	and    DWORD PTR [esi],edi
  411989:	ins    DWORD PTR es:[edi],dx
  41198a:	and    eax,0x32ad724
  41198f:	js     0x411a0c
  411991:	sbb    DWORD PTR [edx+0x14],eax
  411994:	push   ds
  411995:	out    dx,al
  411996:	add    eax,0xdf2c6dca
  41199b:	mov    ds:0x68332e1,eax
  4119a0:	mov    ah,0xe0
  4119a2:	fiadd  DWORD PTR [eax+0x4a]
  4119a5:	iret   
  4119a6:	mov    dl,ch
  4119a8:	mov    eax,ds:0x4f8bd9b4
  4119ad:	repnz sub dh,al
  4119b0:	popa   
  4119b1:	fs in  eax,dx
  4119b3:	stos   DWORD PTR es:[edi],eax
  4119b4:	fild   QWORD PTR [edx+0x77]
  4119b7:	or     DWORD PTR [eax*8+0x4e1b1391],esi
  4119be:	stc    
  4119bf:	outs   dx,BYTE PTR ds:[esi]
  4119c0:	or     ebx,DWORD PTR [bp-0x2]
  4119c4:	dec    DWORD PTR [ecx+0x2d0c29c7]
  4119ca:	add    eax,0xc482852a
  4119cf:	mov    ebp,0x7ecc8306
  4119d4:	out    0x84,eax
  4119d6:	sbb    ch,0xfd
  4119d9:	cmp    al,0x4e
  4119db:	or     bl,0x90
  4119de:	mov    gs,WORD PTR [eax]
  4119e0:	push   0x4b
  4119e2:	call   0x2bff:0xe9a6a4fe
  4119e9:	adc    dh,BYTE PTR [esp+ebp*8+0x772eea83]
  4119f0:	adc    cl,al
  4119f2:	and    al,0x80
  4119f4:	xchg   esp,eax
  4119f5:	push   edi
  4119f6:	xor    al,0x8e
  4119f8:	push   ebp
  4119f9:	and    BYTE PTR [edi],bh
  4119fb:	mov    al,0xc3
  4119fd:	jecxz  0x411a6a
  4119ff:	jge    0x4119cc
  411a01:	nop
  411a02:	adc    al,0x6c
  411a04:	cmp    al,BYTE PTR [edx+0x125249f]
  411a0a:	outs   dx,BYTE PTR ds:[esi]
  411a0b:	sub    eax,0x7168de08
  411a10:	sbb    dl,BYTE PTR [ecx+0x22]
  411a13:	enter  0x4db9,0xed
  411a17:	and    edx,DWORD PTR [edx]
  411a19:	sbb    ebp,DWORD PTR [edx]
  411a1b:	shr    BYTE PTR [ecx+0x67022c74],cl
  411a21:	nop
  411a22:	js     0x411aa0
  411a24:	aas    
  411a25:	mov    gs,eax
  411a27:	pop    es
  411a28:	mov    DWORD PTR [ebp+0x6a9612a6],edx
  411a2e:	shl    edx,1
  411a30:	cli    
  411a31:	sar    DWORD PTR [esp+edi*2],1
  411a34:	call   0x6dfc:0x57e1b427
  411a3b:	aas    
  411a3c:	xor    BYTE PTR [eax+0x37a5876a],dl
  411a42:	idiv   esp
  411a44:	jo     0x411a59
  411a46:	aaa    
  411a47:	outs   dx,BYTE PTR ds:[esi]
  411a48:	mov    ah,0x53
  411a4a:	ret    
  411a4b:	push   ds
  411a4c:	push   ecx
  411a4d:	jecxz  0x411aa9
  411a4f:	mov    BYTE PTR [eax+ecx*4],bl
  411a52:	push   0xffffffc5
  411a54:	xchg   ecx,eax
  411a55:	sti    
  411a56:	loop   0x411aaf
  411a58:	add    BYTE PTR gs:[ecx-0x7604cf30],0xd
  411a60:	cmp    edi,DWORD PTR cs:[ebp-0xf]
  411a64:	mov    eax,0xf6ee26c0
  411a69:	imul   esp,DWORD PTR [ebx+0x66],0x44
  411a6d:	push   DWORD PTR [ebx+0x2cd9f52a]
  411a73:	xlat   BYTE PTR ds:[ebx]
  411a74:	dec    ebx
  411a75:	mov    ebp,0x2ed1d539
  411a7a:	pop    ds
  411a7b:	add    BYTE PTR [edi+0x44],dl
  411a7e:	stc    
  411a7f:	or     al,0x86
  411a81:	test   eax,0x7cf70c3e
  411a86:	sub    ah,BYTE PTR [ebp+0x74]
  411a89:	call   0x8de9:0xcfae8739
  411a90:	or     bl,ah
  411a92:	out    0x3d,al
  411a94:	xchg   ebp,eax
  411a95:	mov    eax,0x857b061f
  411a9a:	xchg   edi,eax
  411a9b:	xlat   BYTE PTR ds:[ebx]
  411a9c:	xchg   DWORD PTR [edi],ebp
  411a9e:	jo     0x411af7
  411aa0:	mov    ebx,0x3ee7ec5d
  411aa5:	inc    edx
  411aa6:	push   esp
  411aa7:	adc    cl,ah
  411aa9:	inc    esi
  411aaa:	hlt    
  411aab:	aas    
  411aac:	adc    eax,0x8c51601e
  411ab1:	mov    bh,ah
  411ab3:	gs stos DWORD PTR es:[edi],eax
  411ab5:	repz dec edx
  411ab7:	test   eax,0x90f5de9a
  411abc:	jecxz  0x411ac3
  411abe:	rol    BYTE PTR [ebx+0x7a],0x4f
  411ac2:	stos   DWORD PTR es:[edi],eax
  411ac3:	sbb    cl,0xd7
  411ac6:	in     al,0xbf
  411ac8:	push   ebp
  411ac9:	rcl    esp,1
  411acb:	stos   BYTE PTR es:[edi],al
  411acc:	cmc    
  411acd:	pop    ds
  411ace:	and    BYTE PTR [ecx],ah
  411ad0:	(bad)  
  411ad1:	rcl    DWORD PTR [edx-0x7a],1
  411ad4:	sub    BYTE PTR [ebp-0x60ef082c],ch
  411ada:	out    dx,al
  411adb:	cmp    eax,esp
  411add:	(bad)  
  411ade:	int3   
  411adf:	pop    es
  411ae0:	test   al,0x7a
  411ae2:	js     0x411ab9
  411ae4:	cmp    DWORD PTR [ebp-0x51],ecx
  411ae7:	mov    BYTE PTR es:[ebx-0x9],dh
  411aeb:	cmp    ebx,DWORD PTR [edi+0x5d0b6e16]
  411af1:	stc    
  411af2:	sar    eax,cl
  411af4:	cwde   
  411af5:	popa   
  411af6:	push   esi
  411af7:	cmp    cl,BYTE PTR [edx]
  411af9:	repz xchg esp,eax
  411afb:	retf   
  411afc:	test   esp,0xc56ab520
  411b02:	cdq    
  411b03:	fmul   DWORD PTR [ecx-0xe]
  411b06:	fldcw  WORD PTR [ecx]
  411b08:	xor    al,0xc
  411b0a:	mov    cl,0x84
  411b0c:	jb     0x411b01
  411b0e:	and    DWORD PTR ds:0xf291b8b3,eax
  411b14:	sbb    BYTE PTR [ebx],cl
  411b16:	std    
  411b17:	pop    ebp
  411b18:	xchg   ecx,eax
  411b19:	xor    BYTE PTR [ecx],al
  411b1b:	mov    eax,ds:0xa0705bbd
  411b20:	mov    ah,0x19
  411b22:	mov    cl,0x50
  411b24:	ins    BYTE PTR es:[edi],dx
  411b25:	fs mov dh,0xa5
  411b28:	outs   dx,DWORD PTR ds:[esi]
  411b29:	out    0xc3,eax
  411b2b:	int3   
  411b2c:	fsubr  DWORD PTR [esi+0x1d]
  411b2f:	mov    bl,0x25
  411b31:	sub    esi,DWORD PTR [ebx]
  411b33:	loopne 0x411ab5
  411b35:	sub    BYTE PTR [ecx+0x5e],cl
  411b38:	arpl   WORD PTR [esi-0x7c],dx
  411b3b:	add    bh,bh
  411b3d:	sub    eax,0xecee235f
  411b42:	sub    edx,0x1bd58cbb
  411b48:	scas   eax,DWORD PTR es:[edi]
  411b49:	test   al,ah
  411b4b:	dec    edi
  411b4c:	or     cl,bh
  411b4e:	cmp    al,0x15
  411b50:	and    al,BYTE PTR [esi+0x7be299f0]
  411b56:	sub    eax,0x68e74e70
  411b5b:	xchg   ebp,eax
  411b5c:	shr    bl,1
  411b5e:	into   
  411b5f:	pushf  
  411b60:	mov    BYTE PTR [ecx+0x57],ah
  411b63:	sbb    ch,BYTE PTR [ebx+0x59]
  411b66:	test   DWORD PTR [ecx+0x5],edi
  411b69:	xchg   ecx,eax
  411b6a:	add    ch,BYTE PTR [esp+edi*2+0x40]
  411b6e:	push   0xc54db56b
  411b73:	xchg   ecx,eax
  411b74:	ficomp DWORD PTR ds:0x910d2318
  411b7a:	dec    esi
  411b7b:	add    DWORD PTR [ebp+0x52],ecx
  411b7e:	jno    0x411b0f
  411b80:	push   0x3b
  411b82:	mov    ds:0x2dc6d27e,al
  411b87:	popa   
  411b88:	cdq    
  411b89:	and    BYTE PTR [eax+0x66],0x3c
  411b8d:	call   0x5e1d:0x427ba5fb
  411b94:	push   ebp
  411b95:	fnstcw WORD PTR [ebp+0x792fb28f]
  411b9b:	fwait
  411b9c:	les    ebx,FWORD PTR [edx]
  411b9e:	js     0x411b31
  411ba0:	xchg   ecx,eax
  411ba1:	lods   al,BYTE PTR ds:[esi]
  411ba2:	(bad)
  411ba5:	stc    
  411ba6:	dec    ebp
  411ba7:	imul   ecx,DWORD PTR gs:[edx],0x7ee80672
  411bae:	dec    ebp
  411baf:	jnp    0x411bba
  411bb1:	ds pop ds
  411bb3:	cmp    eax,DWORD PTR [ebp-0x9]
  411bb6:	and    al,0x62
  411bb8:	nop
  411bb9:	jns    0x411b40
  411bbb:	jecxz  0x411b61
  411bbd:	add    BYTE PTR [edi],ah
  411bbf:	rcl    eax,cl
  411bc1:	int    0x54
  411bc3:	ret    
  411bc4:	sub    DWORD PTR [edx+0x3eb3142e],ebp
  411bca:	fiadd  WORD PTR [eax]
  411bcc:	and    al,0x4d
  411bce:	xchg   esi,eax
  411bcf:	loop   0x411bd4
  411bd1:	retf   0x8550
  411bd4:	data16 int 0x2d
  411bd7:	sti    
  411bd8:	sbb    BYTE PTR [ecx],ah
  411bda:	out    0xc1,al
  411bdc:	and    BYTE PTR [esi],ah
  411bde:	push   esi
  411bdf:	in     al,0x85
  411be1:	call   0x8c4daf90
  411be6:	iret   
  411be7:	inc    ebp
  411be8:	jmp    0x53e0:0x2f1a8958
  411bef:	(bad)  
  411bf0:	fcomip st,st(6)
  411bf2:	sbb    al,0x28
  411bf4:	inc    edi
  411bf5:	mov    bl,0xd1
  411bf7:	adc    al,0xb2
  411bf9:	mov    edx,0x4f962b0e
  411bfe:	pop    ax
  411c00:	cld    
  411c01:	scas   al,BYTE PTR es:[edi]
  411c02:	inc    DWORD PTR [edi+0x4a5d77f6]
  411c08:	fucomp st(5)
  411c0a:	xchg   ebp,eax
  411c0b:	fnstsw WORD PTR [esi]
  411c0d:	jbe    0x411c5a
  411c0f:	or     eax,DWORD PTR [ecx+0x12b63828]
  411c15:	sar    DWORD PTR [edi],0x2c
  411c18:	(bad)  
  411c1a:	dec    esi
  411c1b:	mov    edx,0x6ccb379a
  411c20:	and    al,0xe1
  411c22:	sub    ebp,DWORD PTR [edx+0x49b5c60]
  411c28:	mov    bh,BYTE PTR [ebp+0x24254375]
  411c2e:	mov    bh,0x1c
  411c30:	push   ss
  411c31:	sbb    bh,BYTE PTR [edi+0xc]
  411c34:	sbb    ebx,DWORD PTR [esi-0x41]
  411c37:	or     eax,0xd7730aea
  411c3c:	push   edi
  411c3d:	test   dl,cl
  411c3f:	xchg   edi,eax
  411c40:	idiv   DWORD PTR [edi+edx*1+0x113ca643]
  411c47:	mov    al,0x26
  411c49:	cld    
  411c4a:	cwde   
  411c4b:	loope  0x411c5f
  411c4d:	cwde   
  411c4e:	adc    al,0x8e
  411c50:	clc    
  411c51:	pop    edx
  411c52:	add    eax,0x1a3a84b5
  411c57:	cmc    
  411c58:	test   eax,0x9ff2765d
  411c5d:	mov    ah,0x92
  411c5f:	lahf   
  411c60:	(bad)
  411c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c66:	ins    DWORD PTR es:[edi],dx
  411c67:	clc    
  411c68:	out    0x15,eax
  411c6a:	scas   eax,DWORD PTR es:[di]
  411c6c:	xor    DWORD PTR [edi+0x3d80046a],ebp
  411c72:	cwde   
  411c73:	nop
  411c74:	ins    DWORD PTR es:[edi],dx
  411c75:	repnz (bad) 
  411c77:	iret   
  411c78:	mov    dl,0xf3
  411c7a:	pop    ebp
  411c7b:	(bad)  
  411c7c:	test   ecx,0xc7188cd6
  411c82:	ja     0x411c12
  411c84:	ror    DWORD PTR [ebx+0x36d91490],0x29
  411c8b:	mov    bl,0xf1
  411c8d:	arpl   WORD PTR [ebx+edi*4],si
  411c90:	sub    BYTE PTR [ecx],bl
  411c92:	lods   eax,DWORD PTR ds:[esi]
  411c93:	push   edi
  411c94:	loop   0x411c72
  411c96:	pop    ss
  411c97:	jge    0x411c3e
  411c99:	mov    cs,WORD PTR [ebx-0x409ea386]
  411c9f:	loop   0x411ca9
  411ca1:	fsub   st,st(5)
  411ca3:	ret    0xb258
  411ca6:	inc    esi
  411ca7:	sar    esp,1
  411ca9:	(bad)  
  411cab:	xchg   edi,eax
  411cac:	shl    DWORD PTR [ecx-0x293f72f],0x36
  411cb3:	push   ebp
  411cb4:	push   esp
  411cb5:	sbb    ebx,DWORD PTR [edi+edx*1]
  411cb8:	dec    ecx
  411cb9:	or     eax,0x4420baf0
  411cbe:	fld    DWORD PTR [edx]
  411cc0:	call   DWORD PTR ds:0x5ce2b87c
  411cc6:	mov    ebp,DWORD PTR [ebx+0x5437e83e]
  411ccc:	idiv   BYTE PTR [edi-0x7a1276bd]
  411cd2:	dec    ebp
  411cd3:	sub    al,0xc8
  411cd5:	or     DWORD PTR [ecx-0x1d],edi
  411cd8:	mov    BYTE PTR [ecx+0x26],0xce
  411cdc:	sbb    ch,al
  411cde:	cmp    eax,0x3a100ffc
  411ce3:	leave  
  411ce4:	fwait
  411ce5:	inc    ecx
  411ce6:	les    ecx,FWORD PTR [esi+0x53]
  411ce9:	sub    eax,0xb7172267
  411cee:	shr    edx,1
  411cf0:	add    eax,0xe9c4cf98
  411cf5:	inc    esi
  411cf6:	cli    
  411cf7:	and    eax,0x3e177351
  411cfc:	and    DWORD PTR [edi+edx*1+0x0],eax
  411d00:	retf   0x4fa1
  411d03:	cwde   
  411d04:	mov    esi,0xa436e451
  411d09:	iret   
  411d0a:	xchg   esp,eax
  411d0b:	dec    ecx
  411d0c:	inc    eax
  411d0d:	and    ch,0x8b
  411d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d11:	fdivr  QWORD PTR [ecx-0x2db76982]
  411d17:	fnclex 
  411d19:	adc    DWORD PTR [eax+0x6687f940],edi
  411d1f:	or     al,0xf0
  411d21:	and    eax,0xd9ced1f3
  411d26:	xor    DWORD PTR [ebp-0x60],ebp
  411d29:	cmp    ecx,DWORD PTR [ebx+eiz*8]
  411d2c:	and    al,0x49
  411d2e:	ror    DWORD PTR [ebp+0x20],cl
  411d31:	mov    BYTE PTR [eax+ebx*8],al
  411d34:	pusha  
  411d35:	int3   
  411d36:	fwait
  411d37:	xchg   ebx,eax
  411d38:	aaa    
  411d39:	int3   
  411d3a:	or     esi,DWORD PTR [esi+edx*8]
  411d3d:	ins    BYTE PTR es:[edi],dx
  411d3e:	or     esp,esi
  411d40:	pushf  
  411d41:	das    
  411d42:	mov    ds:0x86b1160d,al
  411d47:	add    eax,eax
  411d49:	in     eax,dx
  411d4a:	jl     0x411d9c
  411d4c:	xlat   BYTE PTR ds:[ebx]
  411d4d:	push   cs
  411d4e:	inc    ebx
  411d4f:	(bad)  [ecx-0x66]
  411d52:	jge    0x411d25
  411d54:	mov    ah,0x65
  411d57:	xor    BYTE PTR [edi],al
  411d59:	push   ebx
  411d5a:	sahf   
  411d5b:	(bad)  
  411d5c:	mov    eax,0xdb5cc067
  411d61:	jl     0x411dde
  411d63:	faddp  st(4),st
  411d65:	pop    edx
  411d66:	adc    ah,ah
  411d68:	xor    DWORD PTR [eax-0x4f21d2d0],0x18
  411d6f:	loop   0x411d46
  411d71:	jecxz  0x411d2f
  411d73:	push   es
  411d74:	xor    eax,0xd336ab4
  411d79:	cmp    eax,0x67ab07df
  411d7e:	je     0x411de9
  411d80:	mov    ebx,0x5794864c
  411d85:	dec    ebp
  411d86:	cmc    
  411d87:	mov    ebp,0x6e84ae37
  411d8c:	inc    esi
  411d8d:	sahf   
  411d8e:	mov    edx,0xa6b44278
  411d93:	xor    DWORD PTR [edi-0x32],ebp
  411d96:	int    0x42
  411d98:	out    0xac,al
  411d9a:	dec    edi
  411d9b:	popa   
  411d9c:	add    DWORD PTR [esi+eiz*1+0x2ea298d0],ebp
  411da3:	sub    eax,0xaf101137
  411da8:	loope  0x411d74
  411daa:	gs sti 
  411dac:	or     eax,0x441d92e2
  411db1:	int    0x80
  411db3:	cli    
  411db4:	sbb    BYTE PTR [edi+esi*8-0x7c5f5573],al
  411dbb:	sub    DWORD PTR [eax],edi
  411dbd:	push   0x3100c4b7
  411dc2:	pop    ebx
  411dc3:	gs data16 jge 0x411da5
  411dc7:	inc    ebp
  411dc8:	ficomp WORD PTR [esi+ebx*4-0x26fd5e96]
  411dcf:	nop    DWORD PTR [eax+0x4b4485c0]
  411dd6:	bound  edi,QWORD PTR [eax-0x8]
  411dd9:	repnz dec esi
  411ddb:	cld    
  411ddc:	push   edi
  411ddd:	add    DWORD PTR [edi],esp
  411ddf:	xor    DWORD PTR [ecx],edi
  411de1:	js     0x411e26
  411de3:	shr    DWORD PTR [ebp-0x57eaecac],0x9e
  411dea:	imul   edi,DWORD PTR [esi-0x22acb6e],0x76f4e37a
  411df4:	push   eax
  411df5:	xor    ebp,DWORD PTR [ebx+edi*4+0x7b3d9d15]
  411dfc:	fmul   st(2),st
  411dfe:	inc    edx
  411dff:	or     al,0xa1
  411e02:	or     ebp,DWORD PTR [esi+0x5fd7eda7]
  411e08:	adc    eax,0xaae93bdc
  411e0d:	mov    edi,esi
  411e0f:	jl     0x411e7c
  411e11:	jecxz  0x411dc6
  411e13:	ret    
  411e14:	or     al,0xfc
  411e16:	xor    BYTE PTR [edi-0x362c1670],dh
  411e1c:	mov    ch,0x48
  411e1e:	xacquire xchg DWORD PTR [ebp-0x48],esp
  411e22:	jo     0x411dfc
  411e24:	out    0x66,al
  411e26:	ins    DWORD PTR es:[edi],dx
  411e27:	cmp    ch,ah
  411e29:	pop    ds
  411e2a:	ret    0xd948
  411e2d:	and    dl,al
  411e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e30:	mov    eax,0xabc59ed
  411e35:	je     0x411e40
  411e37:	stc    
  411e38:	dec    esi
  411e39:	jle    0x411e09
  411e3b:	sub    DWORD PTR [edx+0x21952dde],ecx
  411e41:	(bad)  [ecx+0x222eb3ee]
  411e47:	stos   BYTE PTR es:[edi],al
  411e48:	push   es
  411e49:	mov    ebp,0x4c63d0ea
  411e4e:	mov    bl,0xa7
  411e50:	(bad)  
  411e51:	pushw  ds
  411e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e54:	adc    bh,dl
  411e56:	mov    ch,0x3
  411e58:	je     0x411e8b
  411e5a:	mov    bl,0xf6
  411e5c:	nop
  411e5d:	fimul  WORD PTR [ebx-0x34]
  411e60:	adc    DWORD PTR [ecx+0x57],edi
  411e63:	sti    
  411e64:	sub    DWORD PTR [ecx],edi
  411e66:	inc    esi
  411e67:	test   DWORD PTR [ebx+0x3a042805],ebx
  411e6d:	ficom  WORD PTR [ebx+0x1bee7cd6]
  411e73:	push   ds
  411e74:	adc    bh,BYTE PTR [ebx-0x3042cd99]
  411e7a:	fist   WORD PTR [edi]
  411e7c:	mov    edx,0x94ed1091
  411e81:	push   esi
  411e82:	out    dx,eax
  411e83:	pop    ds
  411e84:	ficom  DWORD PTR [edx-0x59]
  411e87:	jp     0x411eb6
  411e89:	int    0x84
  411e8b:	nop
  411e8c:	push   ss
  411e8d:	xchg   edx,eax
  411e8e:	fisttp DWORD PTR [ebx-0x6e]
  411e91:	mov    edi,DWORD PTR [ecx+edi*1-0x67]
  411e95:	aas    
  411e96:	jmp    DWORD PTR [edx+0x64]
  411e99:	push   ebx
  411e9a:	sahf   
  411e9b:	xor    BYTE PTR [edx+0x37],cl
  411e9e:	push   ss
  411e9f:	call   0x8dfe:0x634b8e86
  411ea6:	mov    BYTE PTR [edi+0x45],bl
  411ea9:	fistp  WORD PTR [esi-0x1a0f1922]
  411eaf:	xor    ah,al
  411eb1:	jnp    0x411f15
  411eb3:	aam    0xff
  411eb5:	mov    ds:0x56ef7713,al
  411eba:	or     esi,eax
  411ebc:	mov    dl,0x54
  411ebe:	jge    0x411f18
  411ec0:	mov    al,0x7b
  411ec2:	cmp    DWORD PTR [esi],ebp
  411ec4:	js     0x411eec
  411ec6:	jg     0x411e88
  411ec8:	pop    eax
  411ec9:	mov    dh,0xb2
  411ecb:	mov    ebp,0xb36fe690
  411ed0:	mov    edx,DWORD PTR [edi+edx*8+0x42]
  411ed4:	(bad)  
  411ed5:	retf   0x7711
  411ed8:	push   0x7ab1a96b
  411edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ede:	xchg   ebp,eax
  411edf:	gs call 0xef:0x4175d4b6
  411ee7:	shl    esi,cl
  411ee9:	push   cs
  411eea:	shl    al,cl
  411eec:	inc    edx
  411eed:	cmp    al,0xe
  411eef:	pop    ecx
  411ef0:	xor    eax,0x704c6274
  411ef5:	sti    
  411ef6:	mov    cl,0x91
  411ef8:	sbb    eax,0x6e224f69
  411efd:	sbb    dh,dl
  411eff:	repz rcr DWORD PTR ds:0x3981b11f,1
  411f06:	mov    ebx,0x9ae92c94
  411f0b:	add    DWORD PTR [edi+eax*2+0x49],eax
  411f0f:	fdivp  st(4),st
  411f11:	pop    esp
  411f12:	mov    DWORD PTR ds:0x1b93e2c3,eax
  411f18:	addr16 push ds
  411f1a:	in     al,dx
  411f1b:	or     BYTE PTR [eax-0x6e],0x32
  411f1f:	dec    ebp
  411f20:	sub    ebp,DWORD PTR [ebx-0x66]
  411f23:	(bad)  
  411f24:	mov    dh,0xcc
  411f26:	(bad)  [bp+di+0x48]
  411f2a:	stos   DWORD PTR es:[edi],eax
  411f2b:	adc    eax,0xbbb235fd
  411f30:	test   BYTE PTR [edx-0x35],bl
  411f33:	cwde   
  411f34:	jae    0x411faa
  411f36:	stos   BYTE PTR es:[edi],al
  411f37:	xor    edx,ebp
  411f39:	lahf   
  411f3a:	aad    0x4f
  411f3c:	es mov ah,0xc4
  411f3f:	daa    
  411f40:	out    0xcd,eax
  411f42:	adc    bh,BYTE PTR [edi-0x7fe521d6]
  411f48:	mov    ah,0xaa
  411f4a:	inc    ecx
  411f4b:	xlat   BYTE PTR ds:[ebx]
  411f4c:	scas   eax,DWORD PTR es:[edi]
  411f4d:	loop   0x411f56
  411f4f:	int3   
  411f50:	ret    
  411f51:	jge    0x411f0d
  411f53:	fist   WORD PTR [ebx-0x15]
  411f56:	cmp    esp,DWORD PTR [esi]
  411f58:	fadd   QWORD PTR [eax-0x1e]
  411f5b:	jp     0x411ee3
  411f5d:	vpshlb xmm4,[ecx+0x7e2f834b],xmm7
  411f66:	jbe    0x411f9e
  411f68:	mov    ds:0xe30f8f1d,eax
  411f6d:	pusha  
  411f6e:	xchg   cl,dh
  411f70:	(bad)  
  411f71:	jns    0x411fcd
  411f73:	mul    DWORD PTR [edi]
  411f75:	and    BYTE PTR [eax+0x1],0xa
  411f79:	iret   
  411f7a:	xor    DWORD PTR [edi+edx*1+0x7e],esi
  411f7e:	addr16 ja 0x411f7e
  411f81:	ret    
  411f82:	lea    edi,[ebx]
  411f84:	fucom  st(0)
  411f86:	nop
  411f87:	inc    ebp
  411f88:	cmp    eax,DWORD PTR [edi+0x6b]
  411f8b:	mov    eax,ds:0xb55b5ce
  411f90:	std    
  411f91:	sbb    ch,dh
  411f93:	pop    ebp
  411f94:	push   cs
  411f95:	mov    bh,0xbe
  411f97:	mov    ah,BYTE PTR [edi+0x5d9d2ba]
  411f9d:	cmp    ebp,ecx
  411f9f:	push   0xf2d86f44
  411fa4:	popa   
  411fa5:	test   BYTE PTR [edi+0x4a42614c],al
  411fab:	in     eax,dx
  411fac:	adc    edi,esp
  411fae:	push   edx
  411faf:	mov    bl,0x2
  411fb1:	bound  esp,QWORD PTR [edi+0x24167980]
  411fb7:	cmp    DWORD PTR [ebx-0xa3dd79a],0x13
  411fbe:	jno    0x411ffd
  411fc0:	push   DWORD PTR [esi+0x4d0eea4d]
  411fc6:	repz dec edi
  411fc8:	inc    ebp
  411fc9:	xor    bh,bl
  411fcb:	sub    dh,BYTE PTR [eax]
  411fcd:	loopne 0x411f60
  411fcf:	jb     0x41203b
  411fd1:	xor    ebx,esi
  411fd3:	push   0xffffffaa
  411fd5:	pop    ss
  411fd6:	cmp    al,0x7
  411fd8:	jo     0x411fbc
  411fda:	sub    edi,esi
  411fdc:	leave  
  411fdd:	or     esp,DWORD PTR [ecx]
  411fdf:	fisubr DWORD PTR [edx+eax*2-0x4889b53c]
  411fe6:	stc    
  411fe7:	iret   
  411fe8:	push   cs
  411fe9:	mov    ch,0xa4
  411feb:	ja     0x412032
  411fed:	push   esi
  411fee:	ret    
  411fef:	sub    ecx,DWORD PTR [edx-0x49e5f7b2]
  411ff5:	mov    bl,0xe3
  411ff7:	lea    esp,[ebx]
  411ff9:	addr16 inc esp
  411ffb:	in     al,0x88
  411ffd:	add    al,0x3
  411fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412000:	add    ah,BYTE PTR [eax-0x8d9acc6]
  412006:	mov    dl,BYTE PTR [eax]
  412008:	ror    BYTE PTR [edi-0x72],0x7d
  41200c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41200e:	adc    ah,ah
  412010:	push   edx
  412011:	adc    DWORD PTR [edx],esp
  412013:	icebp  
  412014:	rcr    DWORD PTR [ebx-0x4c],1
  412017:	mov    dl,0xf8
  412019:	repnz xchg ebp,eax
  41201b:	jmp    FWORD PTR [edx]
  41201d:	pop    esp
  41201e:	fcomp  DWORD PTR [eax-0x25573eae]
  412024:	stc    
  412025:	cmp    cl,ah
  412027:	xchg   edx,eax
  412028:	sub    dh,BYTE PTR ds:[eax+0x2690c75]
  41202f:	mov    eax,0x26f3b005
  412034:	jae    0x412030
  412036:	and    bh,bh
  412038:	es popf 
  41203a:	sbb    eax,0x6fbd257b
  41203f:	dec    ebp
  412040:	stos   DWORD PTR es:[edi],eax
  412041:	add    al,0x76
  412043:	mov    ebx,0x54235bad
  412048:	mov    esp,0x520306d5
  41204d:	push   esp
  41204e:	les    ecx,FWORD PTR [esi+0x69]
  412051:	sti    
  412052:	xchg   DWORD PTR [ebp-0x32e9e825],esi
  412058:	packuswb mm2,QWORD PTR [ebx+0x59]
  41205c:	sti    
  41205d:	mov    esi,0x2c4d9a5c
  412062:	jmp    0x4120a3
  412064:	push   eax
  412065:	ins    BYTE PTR es:[edi],dx
  412066:	xchg   ebx,eax
  412067:	pop    eax
  412068:	outs   dx,BYTE PTR ds:[esi]
  412069:	iret   
  41206a:	mov    ecx,0x3abe1a03
  41206f:	jb     0x4120e0
  412071:	ss lahf 
  412073:	je     0x411ff7
  412075:	lock in eax,dx
  412077:	fdiv   DWORD PTR [eax+eax*1-0x7]
  41207b:	out    0xfb,eax
  41207d:	icebp  
  41207e:	das    
  41207f:	test   al,0x44
  412081:	loope  0x41208e
  412083:	pop    ebp
  412084:	ja     0x412031
  412086:	or     DWORD PTR [eax-0x17],0xffffffbe
  41208a:	jae    0x4120bc
  41208c:	bound  edx,QWORD PTR [ebx+0x75]
  41208f:	in     eax,dx
  412090:	or     al,0x7e
  412092:	addr16 retf 
  412094:	ja     0x4120f9
  412096:	fwait
  412097:	and    al,0x37
  412099:	xchg   esi,eax
  41209a:	pop    es
  41209b:	push   0x95e80d29
  4120a0:	jl     0x4120cc
  4120a2:	in     ax,0xab
  4120a5:	fld    DWORD PTR [ebp+ecx*1+0x25c85493]
  4120ac:	or     al,BYTE PTR [ebx+0x720d0d9c]
  4120b2:	shl    DWORD PTR [esi+ebp*2],0x60
  4120b6:	sub    BYTE PTR [esi+ebx*4-0x1e],ah
  4120ba:	xchg   ebx,eax
  4120bb:	sbb    eax,0x6e03a95e
  4120c0:	lea    edi,[eax+0x54]
  4120c3:	iret   
  4120c4:	push   ebx
  4120c5:	xor    al,0xcb
  4120c7:	inc    ebp
  4120c8:	adc    ch,BYTE PTR [edx+edi*2+0x3d4fe85b]
  4120cf:	and    DWORD PTR [ebp-0x6f],ebx
  4120d2:	xor    esp,DWORD PTR [ebx]
  4120d4:	add    BYTE PTR [esi],0xda
  4120d7:	and    bl,BYTE PTR [ecx]
  4120d9:	mov    ebx,0x2fa1b48f
  4120de:	out    0x6d,al
  4120e0:	jne    0x412071
  4120e2:	or     edx,DWORD PTR [esi+0x36]
  4120e5:	mov    ah,0x2b
  4120e7:	ins    DWORD PTR es:[edi],dx
  4120e8:	jmp    0x412100
  4120ea:	retf   0xdd1c
  4120ed:	arpl   WORD PTR [esi-0x2f184d94],bx
  4120f3:	psrlq  mm4,0x25
  4120f7:	adc    al,0xb
  4120f9:	cwde   
  4120fa:	arpl   WORD PTR [ebx-0x26bc9134],bp
  412100:	push   edi
  412101:	(bad)  
  412103:	js     0x4120af
  412105:	in     eax,0x6b
  412107:	cmp    bh,ch
  412109:	es cdq 
  41210b:	fcmovb st,st(1)
  41210d:	add    eax,0xd8793b2e
  412112:	sub    esp,DWORD PTR [esi+0x79]
  412115:	(bad)  
  412116:	push   ecx
  412117:	sbb    ecx,DWORD PTR [ebx+eiz*2-0x213b6528]
  41211e:	xchg   BYTE PTR [ecx+0x110f1c1e],ah
  412124:	jno    0x412106
  412126:	push   edx
  412127:	cmp    al,0xc0
  412129:	or     al,0xaa
  41212b:	(bad)  [ecx+0x449341b8]
  412131:	pushf  
  412132:	out    dx,al
  412133:	lahf   
  412134:	and    DWORD PTR [ebp-0x7e],ebp
  412137:	rcr    BYTE PTR [edx],0x4e
  41213a:	gs jge 0x4120cf
  41213d:	mov    WORD PTR [esp+ebx*8-0x263f4243],ss
  412144:	into   
  412145:	sbb    al,0xbc
  412147:	aam    0xc4
  412149:	push   edx
  41214a:	test   al,0xac
  41214c:	loope  0x41219a
  41214e:	mov    ebx,0xe087f063
  412153:	mov    ds:0x3893f871,al
  412158:	in     eax,dx
  412159:	xchg   ebx,eax
  41215a:	es mov al,0xb5
  41215d:	scas   al,BYTE PTR es:[edi]
  41215e:	dec    eax
  41215f:	xor    ch,dh
  412161:	or     DWORD PTR [ebx-0x29f923a1],edx
  412167:	arpl   cx,sp
  412169:	adc    eax,0xf09d12ea
  41216e:	ins    BYTE PTR es:[edi],dx
  41216f:	enter  0x6ce4,0x3
  412173:	and    esp,DWORD PTR [ebx+0x10b7929d]
  412179:	loope  0x4121b6
  41217b:	retf   
  41217c:	pop    es
  41217d:	cmp    ebp,edi
  41217f:	shl    DWORD PTR [edi+0x64],1
  412182:	adc    eax,0xcbec9810
  412187:	xor    DWORD PTR [ecx+0xcce4fdf],ebp
  41218d:	fdiv   DWORD PTR [ebp-0x3f]
  412190:	ds push ebx
  412192:	push   0x796c8afe
  412197:	pop    ebx
  412198:	shr    DWORD PTR ds:0x97706dc5,0x6b
  41219f:	jl     0x4121bb
  4121a1:	enter  0xc8e1,0xed
  4121a5:	mov    al,0x5d
  4121a7:	adc    eax,0xf01f5f8f
  4121ac:	test   eax,0xe1510cfc
  4121b1:	rol    DWORD PTR [edi],1
  4121b3:	jbe    0x412225
  4121b5:	lock push es
  4121b7:	xor    bl,BYTE PTR [esi+0x41]
  4121ba:	inc    ebp
  4121bb:	xor    DWORD PTR [ecx-0xd],ebx
  4121be:	adc    ch,BYTE PTR [esi-0x3780d3f0]
  4121c4:	push   ecx
  4121c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c6:	sbb    edx,DWORD PTR [esi-0x60]
  4121c9:	pop    edi
  4121ca:	inc    eax
  4121cb:	repnz sbb eax,0x40dad192
  4121d1:	imul   eax,DWORD PTR [ebx],0x1a9a365a
  4121d7:	mov    bl,0x17
  4121d9:	fwait
  4121da:	sub    al,0x28
  4121dc:	push   es
  4121dd:	test   BYTE PTR [esp+edi*4+0x470af952],dh
  4121e4:	or     eax,0xfa9e1eb
  4121e9:	dec    ebx
  4121ea:	loop   0x41225d
  4121ec:	and    eax,0x968ea0fb
  4121f1:	fstp   DWORD PTR [eax]
  4121f3:	aas    
  4121f4:	and    esi,esi
  4121f6:	push   cs
  4121f7:	lock sub eax,0x53741ba6
  4121fd:	mov    dh,0xb1
  4121ff:	lahf   
  412200:	xor    bl,ch
  412202:	mov    edi,0xd184f7ab
  412207:	jp     0x412222
  412209:	rol    DWORD PTR [ebx-0x6842f457],cl
  41220f:	xor    eax,0x8662b097
  412214:	das    
  412215:	sub    BYTE PTR [esp+ecx*2+0x44],bh
  412219:	jecxz  0x41225e
  41221b:	mov    ebx,0x9901913b
  412220:	jb     0x4121af
  412222:	add    dh,BYTE PTR [ecx]
  412224:	xor    al,0xd8
  412226:	test   BYTE PTR [edi-0x67275728],dl
  41222c:	cmp    al,0xd6
  41222e:	lea    edx,[esi+0x41]
  412231:	hlt    
  412232:	sbb    eax,0x4824e808
  412237:	cmc    
  412238:	xor    BYTE PTR [ebx],0xce
  41223b:	adc    bh,BYTE PTR es:[eax-0x5b]
  41223f:	push   eax
  412240:	sbb    al,0x64
  412242:	and    edx,esi
  412244:	je     0x4121e2
  412246:	(bad)  
  412247:	in     al,dx
  412248:	pop    esi
  412249:	(bad)  
  41224a:	mov    al,ds:0x328f768
  41224f:	sbb    DWORD PTR [edx+0x20],eax
  412252:	retf   0xe858
  412255:	aaa    
  412256:	fistp  WORD PTR [ebx+0x65]
  412259:	inc    edx
  41225a:	add    al,0x13
  41225c:	es push 0xffffffa1
  41225f:	addr16 xchg edi,eax
  412261:	fisttp WORD PTR [edx-0x46]
  412264:	sbb    DWORD PTR [ebx-0x73ae38dd],ebp
  41226a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41226b:	sbb    edx,edx
  41226d:	mov    ds:0x1f2064e1,al
  412272:	push   esi
  412273:	sbb    eax,0xe6fa0c9c
  412278:	sub    edi,DWORD PTR [esi+0x6e668e3a]
  41227e:	(bad)  
  41227f:	fstp   TBYTE PTR [edx]
  412281:	dec    ebx
  412282:	adc    esi,DWORD PTR [edi-0x55]
  412285:	pop    edi
  412286:	push   edx
  412287:	popa   
  412288:	rcl    DWORD PTR [ebp+0x7933f2be],0x48
  41228f:	or     eax,0x2bd20c55
  412294:	pushf  
  412295:	and    esp,esi
  412297:	arpl   cx,sp
  412299:	add    eax,0xfdf03467
  41229e:	sub    edi,DWORD PTR [eax+0x24]
  4122a1:	loopne 0x412265
  4122a3:	les    ecx,FWORD PTR [edx+0x38]
  4122a6:	adc    ch,ah
  4122a8:	lock xchg ebp,eax
  4122aa:	into   
  4122ab:	sub    ecx,DWORD PTR [ebx+0x74]
  4122ae:	or     DWORD PTR [eax],esp
  4122b0:	lds    eax,FWORD PTR [edx+edi*2+0x1982e6d]
  4122b7:	nop
  4122b8:	shr    eax,1
  4122ba:	xchg   DWORD PTR [edx-0x8],esp
  4122bd:	rcr    BYTE PTR [edi-0x19472409],cl
  4122c3:	retf   0xd7e7
  4122c6:	adc    eax,0x90241d52
  4122cb:	inc    esi
  4122cc:	pusha  
  4122cd:	loope  0x412258
  4122cf:	and    DWORD PTR ds:0x29ff8548,esp
  4122d5:	test   eax,0x1b38c407
  4122da:	pop    ds
  4122db:	sbb    DWORD PTR [edx-0x17],ebx
  4122de:	jno    0x41230b
  4122e0:	loopne 0x412357
  4122e2:	mov    bx,0xb0a8
  4122e6:	mov    BYTE PTR [edx],ch
  4122e8:	sbb    esi,0x1f
  4122eb:	or     al,0xaa
  4122ed:	jne    0x47a6bca9
  4122f3:	push   cs
  4122f4:	dec    ebp
  4122f5:	mov    al,0xfb
  4122f7:	push   ebp
  4122f8:	retf   0xf2db
  4122fb:	mov    eax,0xd412f08f
  412300:	aad    0x5d
  412302:	test   eax,0x897bb268
  412307:	xchg   edi,eax
  412308:	jmp    0x4122e8
  41230a:	mov    ecx,0xc6037871
  41230f:	xchg   esp,eax
  412310:	jo     0x4122b9
  412312:	aam    0xf3
  412314:	retf   
  412315:	(bad)  
  412316:	lock lock mov WORD PTR [ebx],ds
  41231a:	jnp    0x412394
  41231c:	fs enter 0xb96e,0xe3
  412321:	popa   
  412322:	push   esi
  412323:	shl    BYTE PTR [eax],cl
  412325:	pop    es
  412326:	fcmovne st,st(6)
  412328:	pop    edx
  412329:	hlt    
  41232a:	add    eax,DWORD PTR [ecx+0x5f]
  41232d:	and    eax,0x7b3b907
  412332:	dec    edi
  412333:	mov    ecx,0x3ff68dab
  412338:	push   ss
  412339:	mov    DWORD PTR [ebx-0x55],ecx
  41233c:	ret    
  41233d:	mov    cl,BYTE PTR [eax-0x509bfdda]
  412343:	gs pop eax
  412345:	mov    cl,BYTE PTR [esi+0x2d]
  412348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412349:	bound  ebp,QWORD PTR [edx]
  41234b:	ret    
  41234c:	mov    eax,esi
  41234e:	mov    esi,0x524a7f03
  412353:	(bad)  
  412355:	out    dx,al
  412356:	pop    edx
  412357:	xor    esi,ebp
  412359:	jb     0x41232b
  41235b:	add    dh,BYTE PTR [eax]
  41235d:	jle    0x4123b8
  41235f:	mov    dl,0x3b
  412361:	stos   BYTE PTR es:[edi],al
  412362:	xor    eax,0x31be24cd
  412367:	ret    
  412368:	adc    al,0x18
  41236a:	push   edx
  41236b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41236c:	add    DWORD PTR [edi+ecx*2-0x14],edx
  412370:	rcl    DWORD PTR [edx+0xc19daac],0xab
  412377:	rol    BYTE PTR [edx+0x344d7737],0xb
  41237e:	adc    al,0x37
  412380:	outs   dx,BYTE PTR ds:[esi]
  412381:	sbb    al,0xb5
  412383:	test   eax,0xb06bcc00
  412388:	sub    eax,0xdffb1dfb
  41238d:	ja     0x4123d8
  41238f:	dec    ecx
  412390:	cmp    al,0x22
  412392:	pop    eax
  412393:	or     DWORD PTR [ecx],edi
  412395:	dec    ecx
  412396:	stc    
  412397:	jmp    0xf542:0xf4a
  41239d:	pop    edi
  41239e:	test   BYTE PTR [ecx-0x2],ch
  4123a1:	and    eax,0xea89501e
  4123a6:	jns    0x41240f
  4123a8:	pop    esp
  4123a9:	adc    al,0x73
  4123ab:	scas   al,BYTE PTR es:[edi]
  4123ac:	rcl    ebp,1
  4123ae:	mov    WORD PTR ds:0x29d1cb79,?
  4123b4:	sbb    DWORD PTR [eax-0x6c],ebp
  4123b7:	cwde   
  4123b8:	fwait
  4123b9:	es (bad) 
  4123bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123bc:	cmc    
  4123bd:	adc    DWORD PTR [ebp+0x7b],0xf1418468
  4123c4:	cmp    eax,0x49218aa
  4123c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123ca:	mov    ebx,0xfca0d1bf
  4123cf:	fistp  WORD PTR [edi-0x54]
  4123d2:	push   ss
  4123d3:	test   eax,0x65629c35
  4123d8:	outs   dx,DWORD PTR ds:[esi]
  4123d9:	push   es
  4123da:	inc    esp
  4123db:	mov    bh,0x8e
  4123dd:	aaa    
  4123de:	dec    ebx
  4123df:	fld    TBYTE PTR [edi+0x419f7d18]
  4123e5:	jmp    0x4702:0x63274977
  4123ec:	adc    ah,BYTE PTR [ebx]
  4123ee:	mov    eax,0x73242dd0
  4123f3:	xchg   esp,eax
  4123f4:	and    BYTE PTR [ecx],dl
  4123f6:	mov    al,ds:0x4c670eee
  4123fb:	mov    cl,0xe4
  4123fd:	not    BYTE PTR ss:[edx+0x2dc86fac]
  412404:	lock daa 
  412406:	cs addr16 mov ecx,0xa7ad9368
  41240d:	rcr    BYTE PTR [ecx+edx*4-0x19],1
  412411:	shr    DWORD PTR [edi+0x46],1
  412414:	gs or  al,0x97
  412417:	ja     0x41239d
  412419:	sub    eax,0x16aec8b0
  41241e:	xor    ch,BYTE PTR [ebx]
  412420:	(bad)  
  412421:	pop    ds
  412422:	addr16 rcr ebx,0x19
  412426:	mov    ds:0x52696fb4,eax
  41242b:	repz mov ch,0x7
  41242e:	lods   eax,DWORD PTR ds:[esi]
  41242f:	dec    ebx
  412430:	adc    eax,0x44e3fc34
  412435:	aaa    
  412436:	leave  
  412437:	retf   0xc58f
  41243a:	push   ds
  41243b:	repz in eax,dx
  41243d:	or     al,0x76
  41243f:	inc    ebx
  412440:	not    esp
  412442:	leave  
  412443:	arpl   WORD PTR [ecx],bx
  412445:	div    BYTE PTR [esi+0x4d]
  412448:	add    eax,0x640c0b77
  41244d:	in     al,dx
  41244e:	jl     0x412445
  412450:	dec    ecx
  412451:	xor    eax,0xad718656
  412456:	stos   DWORD PTR es:[edi],eax
  412457:	sub    esi,DWORD PTR [edx]
  412459:	cdq    
  41245a:	pusha  
  41245b:	(bad)  
  41245c:	dec    ebx
  41245d:	ins    DWORD PTR es:[edi],dx
  41245e:	pop    esp
  41245f:	inc    edx
  412460:	test   eax,0xdf57507b
  412465:	dec    ebx
  412466:	mov    cl,0xb7
  412468:	xor    bl,ch
  41246a:	add    eax,0x84e0c839
  41246f:	retf   0x3f5e
  412472:	imul   esp,DWORD PTR [ebx],0x2d
  412475:	fcmovnbe st,st(0)
  412477:	add    BYTE PTR [ebx-0xe],0x59
  41247b:	sub    DWORD PTR [eax],ecx
  41247d:	adc    DWORD PTR [ecx-0x4251d46d],edi
  412483:	call   0x5ed3:0xa19c52a3
  41248a:	mov    al,0x9c
  41248c:	jbe    0x41249d
  41248e:	pop    esi
  41248f:	mov    eax,0xccdbd8e4
  412494:	outs   dx,BYTE PTR ds:[esi]
  412495:	mov    edi,0x4cdc3f4b
  41249a:	pop    edi
  41249b:	hlt    
  41249c:	lods   al,BYTE PTR ds:[esi]
  41249d:	out    0x7a,eax
  41249f:	adc    ebx,DWORD PTR [ecx-0x3c5914b0]
  4124a5:	repz fidivr WORD PTR [ebx-0x22dc4101]
  4124ac:	jle    0x4124b6
  4124ae:	(bad)  
  4124af:	pop    esp
  4124b0:	and    al,0xd7
  4124b2:	enter  0xfd5c,0xca
  4124b6:	xchg   esi,eax
  4124b7:	xchg   ebp,eax
  4124b8:	inc    ecx
  4124b9:	rol    esi,cl
  4124bb:	lods   eax,DWORD PTR ds:[esi]
  4124bc:	lahf   
  4124bd:	test   eax,0x76837065
  4124c2:	scas   eax,DWORD PTR es:[edi]
  4124c3:	cmp    eax,0xd5e17f73
  4124c8:	jno    0x4124ac
  4124ca:	ror    BYTE PTR [esi],1
  4124cc:	add    BYTE PTR [eax],cl
  4124ce:	xchg   ebp,eax
  4124cf:	out    dx,eax
  4124d0:	push   0x109c559b
  4124d5:	stos   BYTE PTR es:[edi],al
  4124d6:	iret   
  4124d7:	fwait
  4124d8:	cli    
  4124d9:	clc    
  4124da:	jo     0x4124af
  4124dc:	mov    bl,0x97
  4124de:	sar    BYTE PTR [edx-0x107ae8c7],cl
  4124e4:	mov    cl,0xd8
  4124e6:	jp     0x4124b2
  4124e8:	aad    0x2a
  4124ea:	aad    0xa1
  4124ec:	mov    ds:0xd77e7f43,eax
  4124f1:	fsub   st(6),st
  4124f3:	imul   edx,DWORD PTR [eax+0x78],0x4f0d2791
  4124fa:	cmp    BYTE PTR [edx],bh
  4124fc:	enter  0xe1ee,0x29
  412500:	add    BYTE PTR [ebx+eax*2],ch
  412503:	fdiv   st(0),st
  412505:	lahf   
  412506:	(bad)  
  412507:	xchg   bh,bl
  412509:	jg     0x41257b
  41250b:	jge    0x41248d
  41250d:	loopne 0x4124b2
  41250f:	out    0x7d,al
  412511:	sti    
  412512:	movq   mm0,QWORD PTR [edi-0xd0f0a89]
  412519:	ret    0xd4f1
  41251c:	mov    eax,0x3e646025
  412521:	pushf  
  412522:	test   DWORD PTR [ebx-0x41],ebp
  412525:	add    ah,BYTE PTR cs:[eax+0x58]
  412529:	adc    eax,0x28e54d27
  41252e:	adc    DWORD PTR [esi-0x3a5a180b],esi
  412534:	in     al,dx
  412535:	out    0xb7,eax
  412537:	fist   DWORD PTR [eax]
  412539:	jmp    0x557de805
  41253e:	mov    al,0x29
  412540:	imul   edx,DWORD PTR [esi+0x2f],0x16d8f8e0
  412547:	sub    BYTE PTR [ebp-0x46],al
  41254a:	sub    eax,DWORD PTR [ebp+0x772d0280]
  412550:	in     al,0x7c
  412552:	in     eax,dx
  412553:	shl    DWORD PTR [ebp+0x50],1
  412556:	mov    edi,gs
  412558:	mov    edx,0xd5242368
  41255d:	dec    esp
  41255e:	loop   0x41254a
  412560:	imul   edi,DWORD PTR [edx],0x4c
  412563:	or     al,0x3e
  412565:	bound  eax,QWORD PTR [edi-0x7597559e]
  41256b:	scas   al,BYTE PTR es:[edi]
  41256c:	mov    eax,0x34316ac1
  412571:	aam    0xf7
  412573:	jno    0x412514
  412575:	inc    esp
  412576:	mov    bl,0x3
  412578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412579:	push   edx
  41257a:	xchg   edi,eax
  41257b:	es out dx,al
  41257d:	push   ds
  41257e:	out    0x48,eax
  412580:	(bad)  
  412581:	lds    esp,FWORD PTR [edx-0x46574420]
  412587:	push   edi
  412588:	gs mov bh,0x12
  41258b:	inc    esp
  41258c:	xor    esp,eax
  41258e:	scas   eax,DWORD PTR es:[edi]
  41258f:	push   esi
  412590:	pop    edx
  412591:	inc    edi
  412592:	sub    edi,ecx
  412594:	push   esi
  412595:	fiadd  WORD PTR [ecx-0x7d]
  412598:	neg    BYTE PTR [eax-0x10]
  41259b:	cdq    
  41259c:	pslld  mm4,QWORD PTR ds:0x84ca35f8
  4125a3:	add    ebp,esi
  4125a5:	daa    
  4125a6:	dec    eax
  4125a7:	inc    esp
  4125a8:	add    al,0x97
  4125aa:	or     bh,BYTE PTR [esi]
  4125ac:	shl    BYTE PTR [ecx-0x6d418639],1
  4125b2:	xchg   esp,eax
  4125b3:	jns    0x412625
  4125b5:	and    al,0xdf
  4125b7:	sub    BYTE PTR [edi],al
  4125b9:	mov    dl,0xc4
  4125bb:	scas   al,BYTE PTR es:[edi]
  4125bc:	mov    ebx,DWORD PTR [ebx-0x300ca9c2]
  4125c2:	ja     0x412572
  4125c4:	sub    al,0x23
  4125c6:	xchg   DWORD PTR [edi+0x2d],edx
  4125c9:	dec    edi
  4125ca:	cld    
  4125cb:	xor    dh,ah
  4125cd:	jp     0x41261f
  4125cf:	arpl   WORD PTR [eax+eiz*1-0x2a58503f],dx
  4125d6:	mov    ds:0x1cf44a52,al
  4125db:	bound  edx,QWORD PTR [edi-0x48]
  4125de:	fsub   DWORD PTR ds:0xd3064499
  4125e4:	daa    
  4125e5:	out    dx,eax
  4125e6:	iret   
  4125e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125e8:	sub    BYTE PTR [ecx],ch
  4125ea:	scas   al,BYTE PTR es:[edi]
  4125eb:	(bad)  
  4125ec:	aaa    
  4125ed:	pop    ecx
  4125ee:	into   
  4125ef:	pop    ecx
  4125f0:	ins    BYTE PTR es:[edi],dx
  4125f1:	dec    ebp
  4125f2:	xor    BYTE PTR [eax+0x7ed2ab00],0xf0
  4125f9:	mov    esp,0xa2a05d0b
  4125fe:	xchg   dx,ax
  412600:	ss sub eax,0x49a54c3
  412606:	pop    eax
  412607:	nop
  412608:	jne    0x412661
  41260a:	call   0x63da82f9
  41260f:	sub    al,0xfb
  412611:	and    bl,BYTE PTR [edx-0x4d0d8737]
  412617:	pop    ebx
  412618:	mov    al,ds:0x11071f9
  41261d:	fimul  DWORD PTR ds:[edx+0x2d]
  412621:	into   
  412622:	inc    esi
  412623:	in     eax,0x3a
  412625:	cmp    DWORD PTR [ebp-0x7e6e71d8],ecx
  41262b:	fcomp  DWORD PTR [esi+ebp*4-0x71]
  41262f:	xchg   ebp,eax
  412630:	sub    BYTE PTR [edi-0x2f707777],dh
  412636:	js     0x412693
  412638:	jmp    0x412619
  41263a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41263c:	push   eax
  41263d:	fcom   DWORD PTR [ebx+0xd758590]
  412643:	pop    edi
  412644:	ja     0x4125c7
  412646:	fstp   TBYTE PTR ds:0x66cc0d55
  41264c:	or     eax,esi
  41264e:	lds    edx,FWORD PTR [edx]
  412650:	cmc    
  412651:	mov    cs,WORD PTR [eax-0x44aaee06]
  412657:	pop    ebx
  412658:	jnp    0x41261e
  41265a:	xchg   edi,eax
  41265b:	call   0x6cf7:0xe26aa8ba
  412662:	mov    WORD PTR [ecx+0x71cd0970],ss
  412668:	and    eax,0x5144b47f
  41266d:	jg     0x41265d
  41266f:	xchg   edx,eax
  412670:	pop    esi
  412671:	ss push ds
  412673:	sbb    BYTE PTR [edi-0x4a25fc96],bh
  412679:	sar    DWORD PTR [esi+0x157ab7f4],1
  41267f:	jmp    0x4126eb
  412681:	or     BYTE PTR [ecx+0x6bf139cf],cl
  412687:	test   DWORD PTR [eax+ebp*2-0x79],0x1419e3f9
  41268f:	cld    
  412690:	loopne 0x41265a
  412692:	sub    BYTE PTR [edx],0x92
  412695:	jecxz  0x41268c
  412697:	out    0xb8,eax
  412699:	stos   BYTE PTR es:[edi],al
  41269a:	in     eax,dx
  41269b:	arpl   WORD PTR [edx+ebx*8-0x7f7d6870],sp
  4126a2:	sub    bh,BYTE PTR [eax]
  4126a4:	repz and al,0x9c
  4126a7:	sar    edx,cl
  4126a9:	aam    0xe7
  4126ab:	(bad)  [edi+esi*2-0x80]
  4126af:	adc    eax,0x6bf17f70
  4126b4:	and    BYTE PTR [ebp-0xd],ah
  4126b7:	push   ds
  4126b8:	das    
  4126b9:	cli    
  4126ba:	push   es
  4126bb:	and    al,0x78
  4126bd:	js     0x412656
  4126bf:	test   BYTE PTR [esi],0x60
  4126c2:	push   edx
  4126c3:	fwait
  4126c4:	imul   ecx,DWORD PTR [ecx],0x64820138
  4126ca:	int3   
  4126cb:	ja     0x412742
  4126cd:	das    
  4126ce:	cmp    DWORD PTR [ecx],0xa48b749a
  4126d4:	jle    0x412669
  4126d6:	dec    edi
  4126d7:	(bad)  
  4126d9:	in     eax,dx
  4126da:	retf   0x3813
  4126dd:	enter  0x6e23,0x64
  4126e1:	test   eax,0x27e863c8
  4126e6:	push   edx
  4126e7:	or     dh,BYTE PTR [esi-0x74d69353]
  4126ed:	inc    eax
  4126ee:	int    0xcf
  4126f0:	lods   eax,DWORD PTR ds:[esi]
  4126f1:	xchg   ebp,eax
  4126f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f3:	jmp    0x7121:0x19f15069
  4126fa:	add    BYTE PTR [eax+eax*4+0x2d96d06a],cl
  412701:	inc    esp
  412702:	cmp    ebx,DWORD PTR [ecx]
  412704:	lock inc edx
  412706:	aas    
  412707:	mov    ds:0xdeeaaee,eax
  41270c:	cmp    BYTE PTR [eax-0x32],dl
  41270f:	or     bl,BYTE PTR [ebx+0x667e066b]
  412715:	mov    WORD PTR [eax],ds
  412717:	jl     0x4126e4
  412719:	in     eax,0xb
  41271b:	mov    ds:0x7e780287,eax
  412720:	retf   0xb012
  412723:	aas    
  412724:	aaa    
  412725:	or     al,0xeb
  412727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412728:	aas    
  412729:	sub    cl,BYTE PTR [ebp+0x50dc227f]
  41272f:	pop    esi
  412730:	int    0x60
  412732:	jo     0x41279c
  412734:	mov    eax,0x95c1e77c
  412739:	test   eax,0xba6341e6
  41273e:	xchg   esi,eax
  41273f:	pop    ebx
  412740:	mov    al,ds:0xda9e7f75
  412745:	or     al,0x78
  412747:	mov    eax,ds:0x6a3a562f
  41274c:	aaa    
  41274d:	dec    ebx
  41274e:	adc    BYTE PTR [edx-0x28],al
  412751:	or     BYTE PTR [ebx+0x5d98e0e5],bl
  412757:	or     dl,BYTE PTR [ebp+0x3bbd6bba]
  41275d:	inc    ecx
  41275e:	cwde   
  41275f:	mov    edx,0xba302fe
  412764:	mov    cs,WORD PTR [eax-0x35]
  412767:	outs   dx,BYTE PTR ds:[esi]
  412768:	test   ah,0x7e
  41276b:	fcom   QWORD PTR [eax-0x16]
  41276e:	loope  0x412734
  412770:	setns  BYTE PTR [esi+0x26a4918a]
  412777:	pusha  
  412778:	mov    ebp,eax
  41277a:	push   ebp
  41277b:	pop    ds
  41277c:	out    dx,eax
  41277d:	or     dh,BYTE PTR [edi]
  41277f:	add    al,0xe1
  412781:	cmc    
  412782:	cld    
  412783:	jns    0x4127c0
  412785:	enter  0xe704,0x4f
  412789:	pushf  
  41278a:	xchg   ebx,eax
  41278b:	pop    eax
  41278c:	repnz imul edx,DWORD PTR es:[edx-0x75da3bf2],0x3a
  412795:	scas   eax,DWORD PTR es:[edi]
  412796:	rol    BYTE PTR [ebx+0x754dfec3],1
  41279c:	and    DWORD PTR [edx],ecx
  41279e:	out    dx,eax
  41279f:	mov    cl,0x4e
  4127a1:	ror    DWORD PTR [eax+esi*2],cl
  4127a4:	outs   dx,BYTE PTR ds:[esi]
  4127a5:	cmc    
  4127a6:	jno    0x41275d
  4127a8:	and    BYTE PTR [esi-0x5b],dl
  4127ab:	inc    edx
  4127ac:	fiadd  DWORD PTR [ebx-0x615ff4a8]
  4127b2:	mov    ds:0xe6a7794e,eax
  4127b7:	ret    
  4127b8:	xor    al,0xe1
  4127ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127bb:	push   0x8e8222ff
  4127c0:	pop    edi
  4127c1:	lock mov bh,0xd1
  4127c4:	shl    BYTE PTR [ebp+0x1297e8fe],cl
  4127ca:	(bad)  
  4127cb:	cmp    DWORD PTR [edi-0x57],edx
  4127ce:	jp     0x412785
  4127d0:	inc    esp
  4127d1:	add    ebp,DWORD PTR ds:0xf23ce8d6
  4127d7:	fild   QWORD PTR [esi]
  4127d9:	sbb    ecx,DWORD PTR [eax+0x56]
  4127dc:	mov    ds:0x5094d154,al
  4127e1:	mov    ecx,0x9c8a48d7
  4127e6:	mov    bl,0xe6
  4127e8:	sub    BYTE PTR [ecx+0x72],dl
  4127eb:	(bad)  
  4127ec:	out    0x7,eax
  4127ee:	test   BYTE PTR [eax],0x71
  4127f1:	push   edi
  4127f2:	add    ebx,eax
  4127f4:	fwait
  4127f5:	cmp    ebp,edi
  4127f7:	fistp  DWORD PTR [ecx]
  4127f9:	ror    BYTE PTR [edi-0x3],1
  4127fc:	push   eax
  4127fd:	lahf   
  4127fe:	dec    ecx
  4127ff:	add    ch,bl
  412801:	jg     0x4127f0
  412803:	pop    edi
  412804:	or     al,0xf
  412806:	mov    al,ds:0x2f56d90f
  41280b:	sbb    ebx,DWORD PTR [edx+ebp*4+0x48fae86e]
  412812:	push   esp
  412813:	cwde   
  412814:	pop    ds
  412815:	jmp    0x41281c
  412817:	pop    ss
  412818:	test   DWORD PTR [esi-0x61],edx
  41281b:	and    BYTE PTR [esi+ebp*1],al
  41281e:	out    0xb0,al
  412820:	je     0x41286b
  412822:	dec    edx
  412823:	adc    dl,bh
  412825:	lods   al,BYTE PTR ds:[esi]
  412826:	xchg   esp,eax
  412827:	inc    esi
  412828:	and    DWORD PTR [eax+esi*4+0x68968c4],0xffffffab
  412830:	arpl   WORD PTR [ecx-0x41],ax
  412833:	je     0x4127ba
  412835:	push   esp
  412836:	jp     0x41281b
  412838:	nop
  412839:	cmp    ebp,edx
  41283b:	xor    al,0xa3
  41283d:	(bad)  
  41283e:	repz js 0x412801
  412841:	pop    eax
  412842:	sbb    BYTE PTR [ebx+0x4b294f36],dl
  412848:	or     BYTE PTR [eax],dh
  41284a:	sub    al,ah
  41284c:	add    DWORD PTR [eax-0x20b5ce62],esi
  412852:	nop
  412853:	stos   BYTE PTR es:[edi],al
  412854:	popf   
  412855:	jne    0x412863
  412857:	ins    BYTE PTR es:[edi],dx
  412858:	jbe    0x4127e8
  41285a:	sub    al,0xf6
  41285c:	ds xchg ebp,eax
  41285e:	lds    edx,FWORD PTR [ebp-0x35]
  412861:	test   al,0xef
  412863:	adc    DWORD PTR [eax],ebx
  412865:	fwait
  412866:	out    0x5d,eax
  412868:	call   0x471c:0x24bed9b6
  41286f:	pop    esp
  412870:	fistp  QWORD PTR cs:[eax-0x5c]
  412874:	mov    bl,0xc2
  412876:	popa   
  412877:	(bad)  
  412878:	pop    eax
  412879:	(bad)
  41287c:	xchg   DWORD PTR [ebp-0x75ebc34c],ebp
  412882:	clc    
  412883:	or     ch,al
  412885:	test   eax,0xc7ba576d
  41288a:	loop   0x4128f0
  41288c:	popa   
  41288d:	jmp    0x412848
  41288f:	arpl   dx,dx
  412891:	jg     0x412813
  412893:	adc    BYTE PTR [ebx+0x53a118be],dl
  412899:	dec    ecx
  41289a:	lds    ebp,FWORD PTR [ecx+0x5d515b56]
  4128a0:	aad    0x43
  4128a2:	jg     0x4128a9
  4128a4:	in     al,dx
  4128a5:	fidiv  DWORD PTR [eax+0x7c38d3f4]
  4128ab:	frstor [ecx+0x6cd3a50a]
  4128b1:	jo     0x4128fc
  4128b3:	cmp    ebp,DWORD PTR [esi-0x7a983aac]
  4128b9:	out    0x97,eax
  4128bb:	idiv   DWORD PTR [ecx-0x972bff7]
  4128c1:	(bad)  
  4128c2:	retf   0x6ed6
  4128c5:	(bad)  
  4128c6:	outs   dx,BYTE PTR ds:[esi]
  4128c7:	lods   al,BYTE PTR ds:[esi]
  4128c8:	add    BYTE PTR [eax-0x3c],dl
  4128cb:	mov    ah,0xa9
  4128cd:	or     bl,BYTE PTR [edi-0x291ceeb5]
  4128d3:	push   ebp
  4128d4:	in     al,dx
  4128d5:	pop    edx
  4128d6:	dec    edi
  4128d7:	fs mov al,0x7d
  4128da:	sar    BYTE PTR [eax-0xd4f82a1],1
  4128e0:	scas   al,BYTE PTR es:[edi]
  4128e1:	or     eax,0xdd52b242
  4128e6:	call   0x3cd6:0xab665d35
  4128ed:	add    DWORD PTR [eax+0x44470503],ebp
  4128f3:	sbb    DWORD PTR [edx],ebx
  4128f5:	popa   
  4128f6:	sub    eax,DWORD PTR [eax]
  4128f8:	repz rcl DWORD PTR [ebp-0x5],0x61
  4128fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128fe:	rol    BYTE PTR [edi],cl
  412900:	in     eax,0xd0
  412902:	and    eax,0x86061cbc
  412907:	cmp    al,0xaa
  412909:	ins    DWORD PTR es:[edi],dx
  41290a:	outs   dx,BYTE PTR ds:[esi]
  41290b:	rol    BYTE PTR [ecx+0x24],1
  41290e:	(bad)  
  41290f:	push   0xd73414e5
  412914:	sti    
  412915:	xor    DWORD PTR [ebp+0x25f11aba],ebx
  41291b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41291c:	es call 0x929fc7ac
  412922:	add    DWORD PTR [edx-0x67],edi
  412925:	sbb    al,0xd2
  412927:	and    eax,0x7414cfd4
  41292c:	push   ds
  41292d:	push   es
  41292e:	fidivr DWORD PTR [edi]
  412930:	imul   esi,DWORD PTR [edi+eax*4+0x22],0x46e5bf90
  412938:	or     BYTE PTR [esi-0x352118f5],ah
  41293e:	cmp    bl,BYTE PTR [esi+0x3]
  412941:	stos   DWORD PTR es:[edi],eax
  412942:	clc    
  412943:	push   eax
  412944:	aad    0x32
  412946:	out    dx,al
  412947:	sub    ah,BYTE PTR ds:0x442ccf24
  41294d:	sub    al,0x8b
  41294f:	pop    eax
  412950:	push   ebx
  412951:	push   0x11
  412953:	dec    edx
  412954:	fwait
  412955:	clc    
  412956:	push   edx
  412957:	jne    0x412967
  412959:	mov    dh,0xc6
  41295b:	lahf   
  41295c:	add    eax,DWORD PTR [edi]
  41295e:	xor    eax,0x22f3d93a
  412963:	(bad)  
  412964:	inc    esp
  412965:	repz jge 0x412929
  412968:	outs   dx,DWORD PTR ds:[esi]
  412969:	lea    esi,[edi]
  41296b:	js     0x4129b5
  41296d:	(bad)  
  41296e:	call   0x13a0:0x686c1074
  412975:	lahf   
  412976:	arpl   WORD PTR [esi*2+0x2702d4e6],bp
  41297d:	mov    esi,0xf493541a
  412982:	ror    BYTE PTR [ecx+eax*8+0x1],0x35
  412987:	inc    esi
  412988:	popa   
  412989:	cmp    eax,0xaeafbaef
  41298e:	pop    esi
  41298f:	pop    esi
  412990:	push   ss
  412991:	int3   
  412992:	add    eax,0x7971639a
  412997:	xor    al,0xfe
  412999:	not    DWORD PTR [edi+0x7645c92d]
  41299f:	jge    0x4129c3
  4129a1:	mov    ecx,0x69905458
  4129a6:	in     eax,0xe2
  4129a8:	inc    ebp
  4129a9:	clc    
  4129aa:	(bad)  {k6}
  4129af:	pop    ds
  4129b0:	cs push ds
  4129b2:	sbb    eax,DWORD PTR [esi-0x6d48554b]
  4129b8:	retf   
  4129b9:	cmp    DWORD PTR [eax],edx
  4129bb:	jmp    0x412966
  4129bd:	or     BYTE PTR [eax-0x5d1a5f7],bl
  4129c3:	inc    eax
  4129c4:	retf   0xa1ee
  4129c7:	add    eax,0x86f58111
  4129cc:	pop    edi
  4129cd:	cld    
  4129ce:	(bad)  
  4129cf:	mov    eax,ds:0x9c3a7867
  4129d4:	xchg   ebp,eax
  4129d5:	mov    BYTE PTR [edx+0x50f0d46d],cl
  4129db:	push   ebx
  4129dc:	mov    edx,0xf408738
  4129e1:	pop    ebx
  4129e2:	fstp   st(7)
  4129e4:	push   ds
  4129e5:	xor    eax,0xfa8064a3
  4129ea:	sahf   
  4129eb:	sbb    BYTE PTR [ecx-0x1f],ch
  4129ee:	enter  0x1fff,0xa1
  4129f2:	ins    DWORD PTR es:[edi],dx
  4129f3:	sub    BYTE PTR [esi+0x79],dl
  4129f6:	aaa    
  4129f7:	push   0x53
  4129f9:	xlat   BYTE PTR ds:[ebx]
  4129fa:	fcomp  DWORD PTR [esi]
  4129fc:	inc    ebx
  4129fd:	xchg   ecx,eax
  4129fe:	(bad)  
  4129ff:	sbb    DWORD PTR [edi+0x2],edi
  412a02:	xor    edi,ecx
  412a04:	and    BYTE PTR [ebp+eiz*8-0x35],al
  412a08:	add    esi,esi
  412a0a:	mov    ebx,0xe5478bfd
  412a0f:	scas   eax,DWORD PTR es:[edi]
  412a10:	cs jl  0x412a91
  412a13:	adc    eax,DWORD PTR [edx-0x4e578123]
  412a19:	sub    DWORD PTR [esi+0x10],edi
  412a1c:	shl    BYTE PTR [edi-0x2f79db0d],0xf8
  412a23:	xchg   esp,eax
  412a24:	adc    BYTE PTR [esp+esi*8-0x5262c7fb],cl
  412a2b:	mov    esi,0x84a1eb36
  412a30:	jge    0x412a43
  412a32:	adc    al,0x1f
  412a34:	pushf  
  412a35:	jecxz  0x412a32
  412a37:	ret    0xd64e
  412a3a:	xchg   DWORD PTR [ebx+0x2a],ebx
  412a3d:	mov    bh,0x34
  412a3f:	or     ecx,ebx
  412a41:	fst    DWORD PTR [esi-0x1159d79f]
  412a47:	mov    ebp,0xa8ce24ce
  412a4c:	rcr    DWORD PTR [esi-0xd],cl
  412a4f:	xchg   edi,eax
  412a50:	cli    
  412a51:	arpl   WORD PTR [ecx+0x7b6f1631],di
  412a57:	or     bl,BYTE PTR [ebp-0x47b561da]
  412a5d:	fist   WORD PTR [ebx+0x27b24ffb]
  412a63:	xor    eax,0xfe3b7f54
  412a68:	or     al,bl
  412a6a:	lods   eax,DWORD PTR ds:[esi]
  412a6b:	inc    eax
  412a6c:	push   ss
  412a6d:	dec    ebp
  412a6e:	pop    eax
  412a6f:	cld    
  412a70:	test   eax,0xd7046b97
  412a75:	cli    
  412a76:	jb     0x412a87
  412a78:	mov    ebx,0x8f31d29
  412a7d:	repnz mov bl,0xfb
  412a80:	jb     0x412aad
  412a82:	lods   eax,DWORD PTR ds:[esi]
  412a83:	or     eax,0xa21872d4
  412a88:	(bad)  
  412a8a:	mov    esp,0x1485d4b3
  412a8f:	dec    edx
  412a90:	je     0x412aa5
  412a92:	int    0x34
  412a94:	gs rcr al,cl
  412a97:	mov    ds:0xd4856ba4,eax
  412a9c:	shl    BYTE PTR [edi+ebp*2-0x4b],0x40
  412aa1:	xchg   esi,eax
  412aa2:	test   eax,0x5472b2fe
  412aa7:	test   al,0xf0
  412aa9:	mov    al,ds:0x2acfabaa
  412aae:	fisttp WORD PTR [eax+0x34]
  412ab1:	jmp    0x412aa0
  412ab3:	jmp    0x412a83
  412ab5:	(bad)  
  412ab6:	leave  
  412ab7:	mov    ah,0xa3
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	shl    BYTE PTR [edi],1
  412abc:	or     cl,BYTE PTR [ecx]
  412abe:	sbb    ch,BYTE PTR [edx+ebx*2-0x66]
  412ac2:	div    BYTE PTR [ecx]
  412ac4:	imul   edx,DWORD PTR [esi],0x44
  412ac7:	sbb    DWORD PTR [edi+0x2461bb1d],0xfffffff5
  412ace:	pop    es
  412acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ad0:	aad    0x25
  412ad2:	and    dl,BYTE PTR [ebx+0x258edd86]
  412ad8:	mov    ebx,0xc6b6feee
  412add:	pop    ds
  412ade:	jne    0x412a9d
  412ae0:	cmp    al,0x86
  412ae2:	stos   DWORD PTR es:[edi],eax
  412ae3:	push   ds
  412ae4:	jp     0x412afa
  412ae6:	popa   
  412ae7:	jb     0x412afc
  412ae9:	popa   
  412aea:	mov    dx,0xa3a9
  412aee:	inc    eax
  412aef:	pop    esp
  412af0:	mov    edx,0x6fa077fc
  412af5:	loopne 0x412a79
  412af7:	mov    ecx,0xf1a1705
  412afc:	and    DWORD PTR [edi-0x6686fe3e],0x21
  412b03:	das    
  412b04:	ficomp WORD PTR [edx]
  412b06:	or     al,0xcd
  412b08:	pop    DWORD PTR [edx]
  412b0a:	adc    BYTE PTR [ebp+0x3ac8b200],bh
  412b10:	es jae 0x412b73
  412b13:	mov    ebp,DWORD PTR [esi-0x63]
  412b16:	mov    BYTE PTR [eax],dl
  412b18:	ret    
  412b19:	outs   dx,DWORD PTR cs:[esi]
  412b1b:	mov    esi,0x9b426085
  412b20:	cld    
  412b21:	jb     0x412ae0
  412b23:	mov    al,ds:0x8d2f3f38
  412b28:	xor    eax,0x2ff5b05a
  412b2d:	xchg   ebx,eax
  412b2e:	cdq    
  412b2f:	ins    BYTE PTR es:[edi],dx
  412b30:	adc    al,0x27
  412b32:	jae    0x412b6c
  412b34:	rsm    
  412b36:	mov    ch,0x64
  412b38:	xchg   esi,eax
  412b39:	push   esi
  412b3a:	stos   BYTE PTR es:[edi],al
  412b3b:	adc    DWORD PTR [eax+eax*2-0x65c4c6c2],ebp
  412b42:	out    dx,al
  412b43:	jle    0x412b66
  412b45:	loopne 0x412b3c
  412b47:	fcom   QWORD PTR [esi-0x52]
  412b4a:	pop    ebp
  412b4b:	mov    bl,0xe5
  412b4d:	icebp  
  412b4e:	lds    ebp,FWORD PTR [ecx+0x3a0fc4cf]
  412b54:	das    
  412b55:	loope  0x412b5f
  412b57:	daa    
  412b58:	(bad)  
  412b59:	fwait
  412b5a:	sbb    bl,BYTE PTR [ebp+edi*1-0x7]
  412b5e:	test   BYTE PTR [edx+0x76de2c72],dl
  412b64:	in     eax,0xf
  412b66:	pop    ds
  412b67:	stc    
  412b68:	sub    bh,dh
  412b6a:	dec    BYTE PTR ds:0x22a7d556
  412b70:	cwde   
  412b71:	pop    edi
  412b72:	loope  0x412b78
  412b74:	lahf   
  412b75:	aam    0xa2
  412b77:	xlat   BYTE PTR ds:[ebx]
  412b78:	xor    al,0xdd
  412b7a:	and    DWORD PTR [edi-0x15],ebp
  412b7d:	sbb    al,BYTE PTR [ebp-0x3a]
  412b80:	add    esp,eax
  412b82:	(bad)  
  412b83:	addr16 in eax,dx
  412b85:	int    0xd8
  412b87:	cld    
  412b88:	xlat   BYTE PTR ds:[ebx]
  412b89:	inc    eax
  412b8a:	bound  eax,QWORD PTR [edx-0x6cc4d1c]
  412b90:	mov    ch,0x1a
  412b92:	mov    ebx,ebx
  412b94:	sub    ch,BYTE PTR [esi-0x4e]
  412b97:	iret   
  412b98:	dec    ecx
  412b99:	push   0xbe30c1c6
  412b9e:	sub    BYTE PTR [edx-0x6d2816bf],0xa
  412ba5:	mov    edx,0xaaa2fea7
  412baa:	lods   eax,DWORD PTR ds:[esi]
  412bab:	jno    0x412bcc
  412bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bae:	inc    ebx
  412baf:	fld    DWORD PTR [eax]
  412bb1:	jmp    0x3966c575
  412bb6:	add    al,0x9a
  412bb8:	stos   DWORD PTR es:[edi],eax
  412bb9:	jb     0x412b74
  412bbb:	pop    ebp
  412bbc:	xor    al,0xf8
  412bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bbf:	enter  0x50fa,0xe8
  412bc3:	pop    eax
  412bc4:	repnz int 0xd7
  412bc7:	mov    edx,0x70424922
  412bcc:	jg     0x412c2a
  412bce:	fistp  WORD PTR ds:0xb56300e
  412bd4:	sub    esp,0xc0f3d816
  412bda:	add    ah,0x92
  412bdd:	or     ch,BYTE PTR [edi-0x5eb29615]
  412be3:	xchg   esi,eax
  412be4:	jb     0x412bd7
  412be6:	in     eax,0x38
  412be8:	push   es
  412be9:	xor    al,0x87
  412beb:	(bad)  
  412bec:	ss out 0xa2,eax
  412bef:	fmul   DWORD PTR [edx]
  412bf1:	stos   DWORD PTR es:[edi],eax
  412bf2:	fs in  al,dx
  412bf4:	ret    
  412bf5:	loope  0x412bc3
  412bf7:	std    
  412bf8:	icebp  
  412bf9:	and    dh,0xbd
  412bfc:	lahf   
  412bfd:	or     esp,DWORD PTR [esi+0x6d]
  412c00:	push   cs
  412c01:	sbb    bh,BYTE PTR [edi-0x7c]
  412c04:	lahf   
  412c05:	mov    ds:0xa90c2be3,al
  412c0a:	push   0x44a35
  412c0f:	inc    edx
  412c10:	pop    ebx
  412c11:	fld    DWORD PTR [eax-0x3]
  412c14:	mov    ss,WORD PTR [ebp+0x43]
  412c17:	jp     0x412c3c
  412c19:	or     cl,BYTE PTR [ebx+0x49633991]
  412c1f:	aad    0x97
  412c21:	xchg   ebx,eax
  412c22:	xchg   edx,eax
  412c23:	ret    0x4f92
  412c26:	add    esi,DWORD PTR [edx]
  412c28:	(bad)  
  412c29:	arpl   WORD PTR [ecx+0x46],bx
  412c2c:	xor    DWORD PTR [ebx-0x1f6b4cc0],esp
  412c32:	pop    edi
  412c33:	fdivrp st(4),st
  412c35:	jae    0x412c42
  412c37:	or     BYTE PTR ds:0x5ca48447,al
  412c3d:	pop    edi
  412c3e:	test   DWORD PTR [edi-0x3eaa8cdc],0x6be1127f
  412c48:	outs   dx,DWORD PTR ds:[esi]
  412c49:	jnp    0x412cae
  412c4b:	sbb    DWORD PTR ds:0xdb4db293,esi
  412c51:	push   edx
  412c52:	out    0xc9,eax
  412c54:	shl    edi,1
  412c56:	test   DWORD PTR [eax+edx*8+0x666d7031],esp
  412c5d:	enter  0xc908,0xe7
  412c61:	mov    esi,0x21a54246
  412c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c67:	aas    
  412c68:	or     dl,BYTE PTR [ebx]
  412c6a:	out    dx,al
  412c6b:	sbb    BYTE PTR [eax-0x76],ch
  412c6e:	mov    ah,0xf
  412c70:	mov    bl,0xde
  412c72:	mov    ch,BYTE PTR [ebx-0x779a1249]
  412c78:	call   0x6f97875e
  412c7d:	mov    dl,0xf1
  412c7f:	xchg   BYTE PTR [edi],ch
  412c81:	fcom   QWORD PTR [ecx-0x164d5a7b]
  412c87:	sub    eax,0x7b7efdc2
  412c8c:	inc    eax
  412c8d:	in     eax,dx
  412c8e:	xchg   ebp,eax
  412c8f:	jno    0x412ccd
  412c91:	dec    edx
  412c92:	daa    
  412c93:	nop
  412c94:	mov    ecx,0x56ca4b80
  412c99:	stos   DWORD PTR es:[edi],eax
  412c9a:	pop    es
  412c9b:	jno    0x412c74
  412c9d:	and    cl,BYTE PTR [ecx+0x1b]
  412ca0:	in     al,0x43
  412ca2:	push   0x18
  412ca4:	push   0xdac1a3b6
  412ca9:	mov    ch,0x4
  412cab:	pop    esi
  412cac:	mov    ah,BYTE PTR ds:0x72008f12
  412cb2:	push   cs
  412cb3:	sar    BYTE PTR [ebp-0x71ac979b],1
  412cb9:	lea    ebx,[esp+ecx*2-0x1755777e]
  412cc0:	(bad)  
  412cc1:	int    0x48
  412cc3:	xchg   edi,eax
  412cc4:	mov    esi,0x8756338
  412cc9:	fild   DWORD PTR [ebx-0x799f40c1]
  412ccf:	iret   
  412cd0:	icebp  
  412cd1:	xchg   edx,eax
  412cd2:	jbe    0x412cb5
  412cd4:	jno    0x412ce1
  412cd6:	mov    eax,ds:0xbd37f277
  412cdb:	sub    al,0x67
  412cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cde:	mov    ch,0x6e
  412ce0:	in     eax,dx
  412ce1:	arpl   WORD PTR [edi+0x23],ax
  412ce4:	pusha  
  412ce5:	cli    
  412ce6:	dec    ebx
  412ce7:	in     al,dx
  412ce8:	inc    esi
  412ce9:	xlat   BYTE PTR ds:[ebx]
  412cea:	xor    DWORD PTR [esi],ebp
  412cec:	aam    0xf6
  412cee:	push   0x3d
  412cf0:	(bad)  
  412cf1:	mov    ebp,0x92d6eb97
  412cf6:	in     eax,dx
  412cf7:	mov    BYTE PTR [ecx-0x467a2321],ah
  412cfd:	adc    al,0x30
  412cff:	jno    0x412d65
  412d01:	test   DWORD PTR [ebx-0x60],ebx
  412d04:	mov    DWORD PTR [ecx+0x77de7994],0xa9589e1a
  412d0e:	xor    eax,0x12cdc708
  412d13:	adc    BYTE PTR ds:0xda4c451,bh
  412d19:	imul   ebx,DWORD PTR [esi+0x3],0x1a
  412d1d:	pushf  
  412d1e:	or     ebx,ebp
  412d20:	das    
  412d21:	pop    edi
  412d22:	mov    cs:0x8c8dc2f3,eax
  412d28:	push   edi
  412d29:	jae    0x412d14
  412d2b:	dec    esp
  412d2c:	mov    ah,0x8e
  412d2e:	(bad)  
  412d2f:	ins    BYTE PTR es:[edi],dx
  412d30:	sahf   
  412d31:	push   cs
  412d32:	cli    
  412d33:	push   edx
  412d34:	imul   eax,DWORD PTR [eax+0x1b],0xab7f7567
  412d3b:	adc    edi,edx
  412d3d:	ss jmp 0xfe396b0c
  412d43:	retf   
  412d44:	pusha  
  412d45:	(bad)  
  412d46:	repnz test al,0xc1
  412d49:	inc    ebx
  412d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d4b:	mov    esi,0x4782a162
  412d50:	arpl   WORD PTR [edx],ax
  412d52:	jbe    0x412db6
  412d54:	sbb    esp,DWORD PTR [esi-0x6d]
  412d57:	lds    edx,FWORD PTR [eax+0x39e53742]
  412d5d:	inc    ebp
  412d5e:	add    esi,esi
  412d60:	das    
  412d61:	out    dx,al
  412d62:	mov    WORD PTR [eax],ds
  412d64:	xchg   ebp,eax
  412d65:	jg     0x412d3b
  412d67:	sbb    al,0x12
  412d69:	push   ds
  412d6a:	imul   ebp,DWORD PTR [ecx-0x121451a],0xffffff95
  412d71:	lock xor DWORD PTR [bp-0x259a],ecx
  412d77:	pusha  
  412d78:	cmc    
  412d79:	push   0x488ede35
  412d7e:	jne    0x412de5
  412d80:	xor    ah,dh
  412d82:	push   eax
  412d83:	fidiv  DWORD PTR [edx-0x5a]
  412d86:	inc    esi
  412d87:	xor    bl,dh
  412d89:	(bad)  
  412d8a:	adc    esp,DWORD PTR [ecx+eax*2-0x582ad80b]
  412d91:	repnz idiv DWORD PTR [eax]
  412d94:	popf   
  412d95:	dec    esi
  412d96:	rol    BYTE PTR [ecx+0x1a0993d],cl
  412d9c:	dec    ebx
  412d9d:	push   es
  412d9e:	addr16 sub eax,0xfb094372
  412da4:	and    DWORD PTR [ebx],ebp
  412da6:	icebp  
  412da7:	push   ebx
  412da8:	jl     0x412d9d
  412daa:	push   ecx
  412dab:	sub    BYTE PTR [ebx],al
  412dad:	jl     0x412de6
  412daf:	into   
  412db0:	sbb    ah,bh
  412db2:	(bad)  
  412db3:	jle    0x412dbd
  412db5:	mov    ch,0x1a
  412db7:	mov    bh,0x5e
  412db9:	cmc    
  412dba:	fmul   DWORD PTR [ebx-0x7a928684]
  412dc0:	shl    eax,0x17
  412dc3:	or     eax,DWORD PTR [ebp-0x2]
  412dc6:	xlat   BYTE PTR ds:[ebx]
  412dc7:	jge    0x412dd0
  412dc9:	mov    eax,0xfd56774f
  412dce:	pop    edx
  412dcf:	add    esi,DWORD PTR [ebx+0x37]
  412dd2:	pop    ds
  412dd3:	loope  0x412e4a
  412dd5:	shr    DWORD PTR [edx-0x1e],1
  412dd8:	mov    cl,0xb8
  412dda:	fs dec ebp
  412ddc:	xor    eax,0x9987d1e8
  412de1:	data16 mov dh,BYTE PTR cs:[ecx+0x5ed1aafe]
  412de9:	(bad)  
  412dea:	es (bad) 
  412dec:	icebp  
  412ded:	and    eax,0x16c8647a
  412df2:	lods   al,BYTE PTR ds:[esi]
  412df3:	aaa    
  412df4:	and    al,0x78
  412df6:	dec    esp
  412df7:	xor    esp,eax
  412df9:	gs out 0x17,eax
  412dfc:	push   ebx
  412dfe:	rol    bl,cl
  412e00:	push   0x593758b
  412e05:	xchg   esp,eax
  412e06:	mov    ebx,0x7ff162c8
  412e0b:	jno    0x412e2f
  412e0d:	add    ecx,esp
  412e0f:	and    eax,DWORD PTR [esi]
  412e11:	xchg   ebx,eax
  412e12:	std    
  412e13:	jae    0x412e0a
  412e15:	push   esi
  412e16:	lahf   
  412e17:	add    al,0x46
  412e19:	jmp    0x3d926d4d
  412e1e:	inc    eax
  412e1f:	je     0x412dbc
  412e21:	and    BYTE PTR [edi+0x28eb7e98],al
  412e27:	nop
  412e28:	mov    esp,0xd547bfec
  412e2d:	pop    DWORD PTR [eax+0x67e62082]
  412e33:	fwait
  412e34:	cli    
  412e35:	std    
  412e36:	outs   dx,DWORD PTR ds:[esi]
  412e37:	mov    bh,0x43
  412e39:	jbe    0x412dda
  412e3b:	xchg   edx,eax
  412e3c:	ds loopne 0x412e71
  412e3f:	fs dec edx
  412e41:	adc    al,dl
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	pop    esp
  412e45:	outs   dx,DWORD PTR ds:[esi]
  412e46:	inc    eax
  412e47:	sub    eax,0x28fb0a34
  412e4c:	and    ebp,DWORD PTR ds:0x75c3e074
  412e52:	not    BYTE PTR [edi+0x1f]
  412e55:	sub    esp,DWORD PTR [eax+0x3c]
  412e58:	aam    0xb7
  412e5a:	in     al,dx
  412e5b:	jle    0x412df0
  412e5d:	add    BYTE PTR [ecx+edi*8-0x49f1df7d],ch
  412e64:	stos   BYTE PTR es:[edi],al
  412e65:	push   eax
  412e66:	out    0xde,eax
  412e68:	in     al,dx
  412e69:	ret    0x449a
  412e6c:	pop    ss
  412e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e6e:	lahf   
  412e6f:	mov    dl,0x1a
  412e71:	xchg   esp,eax
  412e72:	and    eax,0x8f01f1c3
  412e77:	mov    bl,0x5d
  412e79:	rcr    DWORD PTR [esi+esi*2],cl
  412e7c:	data16 test al,0xf3
  412e7f:	xchg   DWORD PTR [edx+0x5d9832d1],ecx
  412e85:	inc    eax
  412e86:	jmp    0x412e2b
  412e88:	call   0x7e62:0xd7a474cb
  412e8f:	cmp    ch,BYTE PTR [ecx-0x19463c1a]
  412e95:	in     eax,dx
  412e96:	sbb    BYTE PTR [edi],bl
  412e98:	add    eax,0x867acd8a
  412e9d:	repz inc edx
  412e9f:	mov    eax,0x54885433
  412ea4:	jge    0x412f19
  412ea6:	dec    edi
  412ea7:	iret   
  412ea8:	lahf   
  412ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eaa:	int    0x67
  412eac:	loopne 0x412ecd
  412eae:	cmp    al,BYTE PTR [ebp-0x4a056d08]
  412eb4:	or     DWORD PTR [ebp-0x67],esp
  412eb7:	pushf  
  412eb8:	inc    edx
  412eb9:	hlt    
  412eba:	pushf  
  412ebb:	loopne 0x412f14
  412ebd:	inc    ebp
  412ebe:	lods   al,BYTE PTR ds:[si]
  412ec0:	stc    
  412ec1:	and    edx,DWORD PTR [eax]
  412ec3:	mov    ds:0xa1f52284,al
  412ec8:	sbb    eax,0xe7c29a32
  412ecd:	push   edx
  412ece:	push   ebx
  412ecf:	sub    DWORD PTR [edx+0x62],0x3c
  412ed3:	call   DWORD PTR [esi]
  412ed5:	cwde   
  412ed6:	call   0xdd5:0x7df00de9
  412edd:	dec    ebp
  412ede:	ja     0x412ee9
  412ee0:	andps  xmm7,XMMWORD PTR [ebx+0x66]
  412ee4:	pop    es
  412ee5:	shl    DWORD PTR [esi+0x42],cl
  412ee8:	int    0x81
  412eea:	xchg   ebp,eax
  412eeb:	mov    bh,dl
  412eed:	loopne 0x412e8e
  412eef:	mov    ah,0x1d
  412ef1:	lock (bad) 
  412ef4:	in     eax,0x2f
  412ef6:	(bad)  
  412ef7:	lock pop edi
  412ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412efa:	add    ebp,edx
  412efc:	dec    edx
  412efd:	cmp    DWORD PTR [edi+0x2b],0xffffffc2
  412f01:	retf   
  412f02:	ret    
  412f03:	je     0x412f38
  412f05:	mov    esi,0x393b199b
  412f0a:	xor    DWORD PTR [edi+0x1dd558d6],0xffffff81
  412f11:	addr16 call 0xeb46:0xb6adc22a
  412f19:	pop    esi
  412f1a:	mov    ebx,0xeec6340f
  412f1f:	imul   edi,esp,0xffffffbd
  412f22:	repz inc esi
  412f24:	repz jno 0x412ef1
  412f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f28:	mov    cl,0xb6
  412f2a:	ss (bad) 
  412f2c:	aad    0x81
  412f2e:	sub    dh,ch
  412f30:	push   edi
  412f31:	mov    ecx,0xf0679e35
  412f36:	sbb    al,0x12
  412f38:	loop   0x412f62
  412f3a:	xor    eax,0xb861f9c5
  412f3f:	jmp    0x412f75
  412f41:	pop    ecx
  412f42:	sbb    ecx,DWORD PTR [ecx+0x3d604718]
  412f48:	aas    
  412f49:	or     al,0x3d
  412f4b:	dec    ebx
  412f4c:	aaa    
  412f4d:	sub    al,al
  412f4f:	pop    ecx
  412f50:	push   cs
  412f51:	out    0x53,eax
  412f53:	mov    al,ds:0xab949c4a
  412f58:	dec    edx
  412f59:	les    ebp,FWORD PTR ds:0xdda0bac0
  412f5f:	adc    edi,DWORD PTR [edx]
  412f61:	mov    ebx,ds
  412f63:	nop
  412f64:	icebp  
  412f65:	xchg   esi,eax
  412f66:	shr    DWORD PTR [edx+0x20c8ee30],cl
  412f6c:	mov    ebx,gs
  412f6e:	fs or  bh,dh
  412f71:	imul   ebx,DWORD PTR [eax+0x12b4a08f],0xffffff85
  412f78:	add    al,0x46
  412f7a:	xchg   DWORD PTR [ecx],eax
  412f7c:	stos   BYTE PTR es:[edi],al
  412f7d:	push   eax
  412f7e:	ret    0x94a4
  412f81:	dec    edi
  412f82:	sti    
  412f83:	push   ebp
  412f84:	cmp    ch,BYTE PTR [edi+0x4f4456de]
  412f8a:	sub    eax,0x162aac3b
  412f8f:	or     esp,DWORD PTR [esi]
  412f91:	mov    esp,0xbc1e5555
  412f96:	lods   al,BYTE PTR ds:[esi]
  412f97:	mov    bl,BYTE PTR [edx-0x2c]
  412f9a:	push   0xffffffb9
  412f9c:	ror    BYTE PTR [ecx],0x91
  412f9f:	inc    edi
  412fa0:	pop    ecx
  412fa1:	in     al,dx
  412fa2:	push   ebp
  412fa3:	add    DWORD PTR [edx],eax
  412fa5:	push   ebx
  412fa6:	or     BYTE PTR [edi+0x16],bh
  412fa9:	ja     0x412fe5
  412fab:	mov    edx,0xd70d9078
  412fb0:	push   eax
  412fb1:	sti    
  412fb2:	hlt    
  412fb3:	(bad)
  412fb6:	xchg   edx,eax
  412fb7:	int3   
  412fb8:	push   es
  412fb9:	in     al,dx
  412fba:	add    DWORD PTR [eax],ecx
  412fbc:	repz mov ecx,0x7d65b877
  412fc2:	fwait
  412fc3:	iret   
  412fc4:	pop    edx
  412fc5:	and    BYTE PTR ds:0xc14abaad,0xd8
  412fcc:	retf   
  412fcd:	adc    ebx,DWORD PTR [edx+0x79]
  412fd0:	xor    al,0x86
  412fd2:	test   al,0x4f
  412fd4:	mov    eax,ds:0x5c9017af
  412fd9:	mov    ?,WORD PTR [ecx]
  412fdb:	and    BYTE PTR [edi+0xda8bdbd],al
  412fe1:	div    BYTE PTR [edx-0x35685fe1]
  412fe7:	jbe    0x412fa8
  412fe9:	lahf   
  412fea:	in     eax,0x8c
  412fec:	xor    eax,0xfc112bd
  412ff1:	push   ss
  412ff2:	mov    cl,0xce
  412ff4:	sbb    ecx,DWORD PTR [ecx-0x60a4a3aa]
  412ffa:	retf   0xceb1
  412ffd:	adc    DWORD PTR [edi-0xd599bbc],eax
  413003:	out    dx,al
  413004:	and    BYTE PTR [ecx-0x5ab1d6da],cl
  41300a:	in     eax,0x85
  41300c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41300d:	(bad)  
  41300e:	push   edi
  41300f:	outs   dx,BYTE PTR ds:[esi]
  413010:	loop   0x413024
  413012:	sti    
  413013:	arpl   WORD PTR [ebx],bp
  413015:	xor    eax,0x9294c342
  41301a:	int3   
  41301b:	scas   eax,DWORD PTR es:[edi]
  41301c:	pop    ds
  41301d:	mov    ecx,0xe8f22d37
  413022:	xlat   BYTE PTR fs:[ebx]
  413024:	dec    ecx
  413025:	cld    
  413026:	push   esi
  413027:	sbb    BYTE PTR [ebp-0x61],bh
  41302a:	stc    
  41302b:	call   0x3042:0x763342b7
  413032:	adc    BYTE PTR [eax],0x9f
  413035:	push   ebx
  413036:	mov    edx,DWORD PTR [esi+0x6beaf174]
  41303c:	dec    edx
  41303d:	aas    
  41303e:	cmp    al,0x2a
  413040:	pop    esp
  413041:	add    eax,0xf5b5ef88
  413046:	popa   
  413047:	or     eax,0x4b7ac8ee
  41304c:	pop    ss
  41304d:	iret   
  41304e:	cmp    eax,0xf260f731
  413053:	mov    ebx,0x169ff72e
  413058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413059:	(bad)  
  41305a:	stos   BYTE PTR es:[edi],al
  41305b:	xchg   ebp,eax
  41305c:	lods   eax,DWORD PTR ds:[esi]
  41305d:	setp   dl
  413060:	ins    DWORD PTR es:[edi],dx
  413061:	and    eax,0x2527da69
  413066:	retf   
  413067:	pop    esp
  413068:	add    ecx,DWORD PTR [edi-0x48]
  41306b:	int    0x1
  41306d:	(bad)  
  41306e:	idiv   DWORD PTR [edi]
  413070:	scas   eax,DWORD PTR es:[edi]
  413071:	outs   dx,BYTE PTR ds:[esi]
  413072:	int3   
  413073:	jge    0x412fff
  413075:	fistp  DWORD PTR [esi-0x34f28383]
  41307b:	mov    ah,0x4c
  41307d:	xchg   ecx,eax
  41307e:	pop    ss
  41307f:	xor    BYTE PTR [edx+0x58],bl
  413082:	xchg   esi,eax
  413083:	sbb    ecx,ebp
  413085:	ss pop eax
  413087:	ja     0x413017
  413089:	test   eax,0x1576ef6a
  41308e:	daa    
  41308f:	dec    ebp
  413090:	mov    dh,0x1
  413092:	shl    BYTE PTR [esi-0x33],0xb8
  413096:	lds    ecx,FWORD PTR [ecx-0x1379fb66]
  41309c:	xor    edi,edi
  41309e:	pop    ebx
  41309f:	xor    esi,esp
  4130a1:	sub    al,0x75
  4130a3:	dec    ecx
  4130a4:	or     al,BYTE PTR [esi+ebx*1-0x18]
  4130a8:	mov    ebp,esi
  4130aa:	mov    al,0x16
  4130ac:	cmp    al,0x7c
  4130ae:	mov    ebx,0x179ad7da
  4130b3:	adc    ebx,DWORD PTR [edx]
  4130b5:	inc    eax
  4130b6:	fst    DWORD PTR [eax+0x32]
  4130b9:	stc    
  4130ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130bb:	cld    
  4130bc:	pop    ss
  4130bd:	jmp    0xf06b6358
  4130c2:	repnz sub DWORD PTR [ebx+0xe],eax
  4130c6:	push   edx
  4130c7:	rol    BYTE PTR [edi],0x2
  4130ca:	lea    edx,[esi-0x7d387a9e]
  4130d0:	inc    edx
  4130d1:	inc    eax
  4130d2:	inc    ebx
  4130d3:	imul   esi,DWORD PTR [esi],0xbb91d98a
  4130d9:	fldenv [esi]
  4130db:	jne    0x4130e7
  4130dd:	outs   dx,DWORD PTR ds:[esi]
  4130de:	xor    BYTE PTR [edx+0x70],cl
  4130e1:	cli    
  4130e2:	add    al,dh
  4130e4:	inc    ebx
  4130e5:	fsubr  QWORD PTR [esi+0x666662c5]
  4130eb:	mov    ebp,0xbc1a5a26
  4130f0:	xchg   edx,eax
  4130f1:	inc    edx
  4130f2:	ins    DWORD PTR es:[edi],dx
  4130f3:	sbb    al,0x5e
  4130f5:	(bad)  [eax+0x77e7dfbc]
  4130fb:	xor    cl,BYTE PTR [edx-0x84c1270]
  413101:	in     al,0x62
  413103:	xchg   ebp,eax
  413104:	test   DWORD PTR [eax],0xb5840f11
  41310a:	mov    esi,0x380923e7
  41310f:	or     eax,0x86d45bd
  413114:	inc    ebp
  413115:	mov    ebx,0x546dee04
  41311a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311b:	sti    
  41311c:	dec    eax
  41311d:	pop    ebp
  41311e:	daa    
  41311f:	jmp    0x41312b
  413121:	mov    dl,0x89
  413123:	mov    ds:0x5f254ace,al
  413128:	pop    esp
  413129:	call   0xec177609
  41312e:	mov    eax,DWORD PTR [ecx+0x68]
  413131:	fstp   QWORD PTR [eax-0xa921a1b]
  413137:	int3   
  413138:	out    0x57,eax
  41313a:	shl    BYTE PTR [ecx],0x18
  41313d:	or     cl,BYTE PTR [ebp+0x4d]
  413140:	push   cs
  413141:	jb     0x4131b8
  413143:	ror    BYTE PTR [eax],cl
  413145:	jae    0x41315c
  413147:	mov    ah,0xc4
  413149:	test   eax,0x841ecf7d
  41314e:	push   cs
  41314f:	mov    ebx,0x2bda8af6
  413154:	mov    edx,0x9760fdb7
  413159:	cwde   
  41315a:	icebp  
  41315b:	addr16 pop esi
  41315d:	xor    esi,ecx
  41315f:	retf   
  413160:	inc    ecx
  413161:	div    BYTE PTR [edx]
  413163:	nop
  413164:	sbb    ch,BYTE PTR [edx+0x49]
  413167:	popa   
  413168:	data16 mov dl,0x57
  41316b:	fst    st(2)
  41316d:	mov    esi,0x803e7ace
  413172:	clc    
  413173:	xchg   esi,eax
  413174:	test   DWORD PTR [esi-0x160c531d],0xe69cdb09
  41317e:	jns    0x4131b5
  413180:	mov    esi,0x7325741a
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	lahf   
  413187:	sahf   
  413188:	xor    al,0xea
  41318a:	fsubr  st,st(3)
  41318c:	repnz and dh,0xb4
  413190:	clc    
  413191:	mov    al,ds:0x5ecd3ffd
  413196:	mov    edi,DWORD PTR [esi-0x3d]
  413199:	mov    ecx,DWORD PTR [ebx-0x40eaab93]
  41319f:	xchg   ebx,eax
  4131a0:	add    ch,cl
  4131a2:	sahf   
  4131a3:	xchg   edi,eax
  4131a4:	push   edi
  4131a5:	sbb    al,0xd2
  4131a7:	jl     0x4131e5
  4131a9:	addr16 jmp 0x7fd45387
  4131af:	retf   
  4131b0:	pop    esi
  4131b1:	aam    0xc9
  4131b3:	cli    
  4131b4:	mov    ah,0xe8
  4131b6:	push   es
  4131b7:	fidivr WORD PTR [edi-0x51]
  4131ba:	push   esp
  4131bb:	sbb    al,0x35
  4131bd:	mov    ds:0x67a37b8f,eax
  4131c2:	clc    
  4131c3:	int3   
  4131c4:	jge    0x413189
  4131c6:	jns    0x4131cb
  4131c8:	mov    edx,0xb8b86ca2
  4131cd:	or     ch,dh
  4131cf:	pusha  
  4131d0:	mov    eax,0x6698021d
  4131d5:	xchg   DWORD PTR [edx-0x53],eax
  4131d8:	pop    edx
  4131d9:	mov    ch,0x58
  4131db:	loope  0x41318d
  4131dd:	mov    bh,0x4b
  4131df:	or     BYTE PTR ds:0x31a180ca,0x9a
  4131e6:	popa   
  4131e7:	leave  
  4131e8:	mov    esp,0x8cdf3853
  4131ed:	xchg   ebp,eax
  4131ee:	test   DWORD PTR [ecx-0x13ddfc25],esi
  4131f4:	mov    BYTE PTR [eax-0x4],dh
  4131f7:	dec    eax
  4131f8:	nop
  4131f9:	push   esp
  4131fa:	pop    ds
  4131fb:	test   eax,0x1bc88ca9
  413200:	add    eax,DWORD PTR [ebp+0x4ae89511]
  413206:	icebp  
  413207:	scas   al,BYTE PTR es:[edi]
  413208:	sti    
  413209:	pusha  
  41320a:	jae    0x4131a4
  41320c:	pop    edi
  41320d:	in     al,dx
  41320e:	aad    0xb3
  413210:	mov    esi,0x622e344f
  413215:	inc    esi
  413216:	xchg   BYTE PTR [esi-0x3c],al
  413219:	stc    
  41321a:	sub    BYTE PTR [ebp+0x4d211725],al
  413220:	pushf  
  413221:	mov    esi,0xe09ec98e
  413226:	xor    eax,0x90586988
  41322b:	bound  esp,QWORD PTR [edx]
  41322d:	sahf   
  41322e:	gs jmp 0x4131f2
  413231:	daa    
  413232:	lds    esp,FWORD PTR [ecx+0x6c]
  413235:	(bad)  
  413236:	arpl   WORD PTR ds:0xc5e7fa65,dx
  41323c:	sub    esp,0xffffffad
  41323f:	pop    es
  413240:	dec    ebx
  413241:	aam    0xe0
  413243:	or     ah,BYTE PTR [ecx+0x5dda7601]
  413249:	rol    BYTE PTR [ebx-0x2b],0x22
  41324d:	mov    dh,0x85
  41324f:	push   ebx
  413250:	inc    ecx
  413251:	sti    
  413252:	adc    al,0x9e
  413254:	and    BYTE PTR [edi-0x4eeb56e6],bh
  41325a:	sub    al,0xf3
  41325c:	in     eax,dx
  41325d:	push   ebp
  41325e:	xchg   esp,esp
  413260:	inc    esi
  413261:	mov    edx,0x7b845899
  413266:	pop    eax
  413267:	jmp    0xeaab:0xb16d8ec6
  41326e:	inc    DWORD PTR [ebp+0x56]
  413271:	adc    bh,dl
  413273:	fisub  WORD PTR ds:0xaf73faae
  413279:	ins    BYTE PTR es:[edi],dx
  41327a:	sbb    cl,BYTE PTR [ebp+0x480df93d]
  413280:	ret    
  413281:	loope  0x41325c
  413283:	push   eax
  413284:	sub    DWORD PTR [ecx+0x7a],ebx
  413287:	mov    edi,eax
  413289:	sbb    al,0x5f
  41328b:	stos   BYTE PTR es:[edi],al
  41328c:	xchg   ebp,eax
  41328d:	dec    ebx
  41328e:	xlat   BYTE PTR ds:[ebx]
  41328f:	(bad)  
  413291:	call   0xbe82fd36
  413296:	neg    BYTE PTR [edx]
  413298:	pop    ds
  413299:	fmul   DWORD PTR [eax-0x1f69bc32]
  41329f:	mov    ah,0x9d
  4132a1:	inc    esi
  4132a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a3:	sub    al,0x87
  4132a5:	mov    bl,0x43
  4132a7:	sti    
  4132a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a9:	sbb    BYTE PTR [edi],ah
  4132ab:	dec    esi
  4132ac:	rcl    dh,0x39
  4132af:	mov    WORD PTR [esi-0x4f],?
  4132b2:	or     bl,BYTE PTR [ebx]
  4132b4:	mov    bl,BYTE PTR [ecx+0x36]
  4132b7:	inc    eax
  4132b8:	jge    0x41323a
  4132ba:	loop   0x41329f
  4132bc:	or     BYTE PTR [esi-0x4e],bl
  4132bf:	adc    cl,al
  4132c1:	or     al,0x4a
  4132c3:	mov    al,0xe1
  4132c5:	and    DWORD PTR [ecx],ebx
  4132c7:	xor    DWORD PTR [esi+0x54],edx
  4132ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132cb:	cmp    BYTE PTR [eax+0x6dbdda3f],dl
  4132d1:	jo     0x413349
  4132d3:	add    al,0x60
  4132d5:	stos   DWORD PTR es:[edi],eax
  4132d6:	aas    
  4132d7:	mov    dh,0x6d
  4132d9:	jle    0x41333a
  4132db:	mov    bh,0x41
  4132dd:	mov    eax,cs
  4132df:	ror    dh,1
  4132e1:	inc    edx
  4132e2:	pop    ebx
  4132e3:	mov    eax,ebp
  4132e5:	or     edi,DWORD PTR ds:0x3023f799
  4132eb:	mov    al,ds:0x912923c4
  4132f0:	out    0xf6,eax
  4132f2:	cmp    eax,0xf8559637
  4132f7:	sar    DWORD PTR [ebx],cl
  4132f9:	mov    edi,ebx
  4132fb:	retf   
  4132fc:	fidivr DWORD PTR [ebp+0x6e8f2f47]
  413302:	fisub  WORD PTR [ecx+0x26968486]
  413308:	loopne 0x413316
  41330a:	add    BYTE PTR [edx-0x714a180a],bl
  413310:	inc    ebx
  413311:	loop   0x4132ab
  413313:	xor    ebx,ebp
  413315:	das    
  413316:	xchg   esp,eax
  413317:	shr    BYTE PTR [edx],cl
  413319:	sbb    eax,0xffffff87
  41331c:	mov    dl,0x89
  41331e:	int    0xd0
  413320:	bound  ecx,QWORD PTR [eax]
  413322:	push   eax
  413323:	fldenv [ecx-0x55]
  413326:	pop    ss
  413327:	stc    
  413328:	inc    esi
  413329:	jbe    0x413305
  41332b:	rcr    DWORD PTR ds:[edi-0x80],cl
  41332f:	push   eax
  413330:	mov    ah,0xe6
  413332:	leave  
  413333:	or     DWORD PTR [esi-0x4fcb308f],edx
  413339:	pop    es
  41333a:	pop    eax
  41333b:	or     DWORD PTR [eax-0x35124cd2],ebp
  413341:	sbb    eax,ebp
  413343:	sub    eax,0x621d19c2
  413348:	mov    ebp,0xf90deb2c
  41334d:	shl    BYTE PTR [edi+0x6a],cl
  413350:	pop    edx
  413351:	repz pop esi
  413353:	mov    ebx,0x4166e49b
  413358:	mov    esi,0x895b972e
  41335d:	xlat   BYTE PTR ds:[ebx]
  41335e:	cli    
  41335f:	adc    DWORD PTR [ecx],edx
  413361:	sub    BYTE PTR [ebx+0xcb83519],bh
  413367:	or     al,0xf1
  413369:	test   ecx,0x3c3ac44d
  41336f:	sub    BYTE PTR [ebx+ebx*1+0x2f],0x50
  413374:	inc    edi
  413375:	fwait
  413376:	jecxz  0x41336e
  413378:	lds    eax,FWORD PTR [edi-0x15]
  41337b:	sbb    BYTE PTR [ecx],0x8
  41337e:	mov    al,0xc1
  413380:	stc    
  413381:	pop    ebx
  413382:	jecxz  0x41338f
  413384:	iret   
  413385:	mov    esi,0xe8947342
  41338a:	aas    
  41338b:	pop    ds
  41338c:	ins    BYTE PTR es:[edi],dx
  41338d:	xor    al,0xf0
  41338f:	clc    
  413390:	loope  0x4133c0
  413392:	aad    0xc1
  413394:	push   dx
  413396:	mov    bl,BYTE PTR [edi+eax*4-0x2d31ca92]
  41339d:	into   
  41339e:	dec    ebx
  41339f:	inc    eax
  4133a0:	mov    al,0x3e
  4133a2:	inc    ecx
  4133a3:	push   cs
  4133a4:	fstp   QWORD PTR [edi-0x59]
  4133a7:	mov    bh,0xf6
  4133a9:	ror    ch,cl
  4133ab:	mov    eax,ds:0xf52c66eb
  4133b0:	mov    eax,0x9702c68d
  4133b5:	jae    0x4133d6
  4133b7:	test   DWORD PTR [ebx+0x4b],edi
  4133ba:	aam    0xf5
  4133bc:	cmp    bl,BYTE PTR [edx]
  4133be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133bf:	inc    ebx
  4133c0:	rcl    DWORD PTR [edi],0x39
  4133c3:	adc    esp,DWORD PTR [ebp+0x54f953b3]
  4133c9:	pop    eax
  4133cb:	imul   ecx,ebp,0x70
  4133ce:	rcl    eax,1
  4133d0:	fucomi st,st(1)
  4133d2:	or     BYTE PTR [ebp+ecx*1+0xb61919c],ah
  4133d9:	stos   BYTE PTR es:[edi],al
  4133da:	xor    esi,DWORD PTR [eax+0x2e913527]
  4133e0:	arpl   WORD PTR [ebx-0x78],dx
  4133e3:	mov    ch,ah
  4133e5:	movsx  ebp,BYTE PTR [eax-0x3ae3e6d8]
  4133ec:	push   es
  4133ed:	(bad)  
  4133ee:	xor    ah,BYTE PTR [edx-0x6a1c7c55]
  4133f4:	mov    al,0xf6
  4133f6:	addr16 xchg ecx,eax
  4133f8:	arpl   WORD PTR [ebx+eax*1],cx
  4133fb:	push   esi
  4133fc:	jo     0x413382
  4133fe:	daa    
  4133ff:	pop    ds
  413400:	loope  0x413442
  413402:	mov    esp,0x4f8acff3
  413407:	or     eax,0xb81044f5
  41340c:	mov    edi,DWORD PTR [esp+ebp*1-0x10]
  413410:	enter  0xe86,0x54
  413414:	popf   
  413415:	loope  0x413433
  413417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413418:	jle    0x413401
  41341a:	or     bh,BYTE PTR [edx-0x7846896]
  413420:	and    BYTE PTR [ebp+0x5b],dl
  413423:	ret    
  413424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413425:	stos   BYTE PTR es:[edi],al
  413426:	loopne 0x4133f1
  413428:	mov    ds:0xb8864407,al
  41342d:	(bad)  
  41342e:	mov    esi,DWORD PTR [edx-0x3a]
  413431:	imul   eax,eax,0xea1c2de3
  413437:	adc    eax,0xd3526357
  41343c:	mov    esp,0x29424780
  413441:	in     eax,0xfe
  413443:	dec    ebp
  413444:	xchg   ebp,eax
  413445:	mov    dl,0x83
  413447:	stos   BYTE PTR es:[edi],al
  413448:	ror    BYTE PTR [ebp-0x1752f2a1],1
  41344e:	repz xchg ebx,eax
  413450:	jbe    0x413420
  413452:	pop    ss
  413453:	test   DWORD PTR [esi+eax*4],esp
  413456:	and    esi,DWORD PTR [esi-0x3e4da600]
  41345c:	dec    eax
  41345d:	mov    al,0x51
  41345f:	scas   eax,DWORD PTR es:[edi]
  413460:	mov    edi,0x49e332ea
  413465:	cmp    al,0xf2
  413467:	test   eax,0x6e8cc4a3
  41346c:	cmp    esp,DWORD PTR [edx-0x27]
  41346f:	cmp    ah,cl
  413471:	push   cs
  413472:	add    DWORD PTR [eax-0x72],ebx
  413475:	cmp    al,0xd9
  413477:	push   ss
  413478:	cdq    
  413479:	push   eax
  41347a:	dec    ecx
  41347b:	popf   
  41347c:	rcl    DWORD PTR [esi+0x25b43a5],cl
  413482:	(bad)  
  413483:	mov    ebx,0x7e2bd3ab
  413488:	nop
  413489:	loope  0x41345a
  41348b:	pop    eax
  41348c:	(bad)  
  41348d:	sti    
  41348e:	cmp    eax,0xb2803577
  413493:	rdtsc  
  413495:	jp     0x4134c1
  413497:	in     eax,dx
  413498:	xchg   esi,eax
  413499:	imul   eax,edi,0xa6ee4d6f
  41349f:	outs   dx,DWORD PTR ds:[esi]
  4134a0:	aam    0x26
  4134a2:	dec    esp
  4134a3:	cwde   
  4134a4:	imul   esi,DWORD PTR [ecx+0xca72555],0x14d66a1f
  4134ae:	daa    
  4134af:	and    eax,0x4d7e96ad
  4134b4:	pop    es
  4134b5:	add    eax,0xffffffd5
  4134b8:	retf   
  4134b9:	fld    DWORD PTR [ecx]
  4134bb:	adc    DWORD PTR [esi+0x2a],edi
  4134be:	xchg   ebp,eax
  4134bf:	cmc    
  4134c0:	cmc    
  4134c1:	inc    ebx
  4134c2:	jle    0x41352a
  4134c4:	cmp    eax,0x597078d4
  4134c9:	popf   
  4134ca:	popf   
  4134cb:	adc    BYTE PTR [edi+0x3d84338],ch
  4134d1:	mov    ds:0x724e3da4,eax
  4134d6:	rol    DWORD PTR [esp+ebx*1+0x28],0x15
  4134db:	or     eax,0xdbcce755
  4134e0:	mov    esp,0x84e57141
  4134e5:	popa   
  4134e6:	lea    eax,[edi+0x76d4b3bd]
  4134ec:	xor    edi,esp
  4134ee:	loope  0x4134d1
  4134f0:	imul   edx,ebx,0x20
  4134f3:	stos   DWORD PTR es:[edi],eax
  4134f4:	stc    
  4134f5:	inc    edx
  4134f6:	push   ss
  4134f7:	nop
  4134f8:	ins    BYTE PTR es:[edi],dx
  4134f9:	mov    DWORD PTR [ecx+0x461b3a3d],esp
  4134ff:	loop   0x4134b1
  413501:	adc    eax,0x18f3816f
  413506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413507:	clc    
  413508:	pop    esi
  413509:	pop    ebp
  41350a:	test   DWORD PTR [esi-0x12],0x488b710c
  413511:	fdecstp 
  413513:	and    eax,0x9207c324
  413518:	and    DWORD PTR [edx-0x5414e18f],esi
  41351e:	pusha  
  41351f:	ror    BYTE PTR [ebp+0x20],cl
  413522:	pop    ss
  413523:	sbb    BYTE PTR [ecx-0x2f66e44b],bh
  413529:	fisub  WORD PTR [esi+edi*4]
  41352c:	hlt    
  41352d:	push   esi
  41352e:	or     BYTE PTR [esi-0x1f75c7b],bh
  413534:	sbb    eax,eax
  413536:	mov    gs,ecx
  413538:	lahf   
  413539:	out    dx,eax
  41353a:	cmp    DWORD PTR [esi+0x3d9a1f9],edx
  413540:	repnz add eax,0x8ac9181d
  413547:	scas   al,BYTE PTR es:[edi]
  413548:	sub    BYTE PTR [edi-0x5e001451],cl
  41354e:	pop    ebp
  41354f:	xchg   ecx,eax
  413550:	add    DWORD PTR [edx+ecx*4],esi
  413553:	add    BYTE PTR [ecx+0x73],cl
  413556:	test   al,0x32
  413558:	sbb    eax,0xd988929b
  41355d:	sub    BYTE PTR [edi+0x70a4a83d],ch
  413563:	(bad)  
  413564:	pop    ecx
  413565:	popf   
  413566:	popa   
  413567:	pop    edi
  413568:	arpl   WORD PTR [ebx],ax
  41356a:	inc    ecx
  41356b:	into   
  41356c:	xor    eax,0x424637df
  413571:	pop    eax
  413572:	or     dl,BYTE PTR ds:0xfb97f1a9
  413578:	adc    al,0xfa
  41357a:	test   al,0x60
  41357c:	push   ebx
  41357d:	test   BYTE PTR [esi+0x4d],ah
  413580:	jno    0x413553
  413582:	(bad)  
  413583:	icebp  
  413584:	inc    esp
  413585:	xor    eax,DWORD PTR [ecx-0x53]
  413588:	test   BYTE PTR [eax-0xd],cl
  41358b:	jecxz  0x4135bf
  41358d:	push   esi
  41358e:	test   al,0xec
  413590:	cdq    
  413591:	push   eax
  413592:	icebp  
  413593:	adc    eax,0x4cea1b9c
  413598:	inc    edx
  413599:	and    DWORD PTR [edx],edi
  41359b:	adc    al,0x60
  41359d:	xor    eax,0x8e83500e
  4135a2:	mov    al,ds:0x9c20c138
  4135a7:	shr    edx,0xe8
  4135aa:	xchg   ebp,eax
  4135ab:	jnp    0x413600
  4135ad:	pop    ebp
  4135ae:	cmp    BYTE PTR [ebx+0x15bf4c4d],bh
  4135b4:	les    ebp,FWORD PTR [edi+0x60feef50]
  4135ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135bb:	sub    al,0x93
  4135bd:	push   ss
  4135be:	addr16 mov bh,0x95
  4135c1:	pop    ds
  4135c2:	iret   
  4135c3:	sti    
  4135c4:	data16 xchg BYTE PTR [ecx+0x71],bl
  4135c8:	push   ebp
  4135c9:	inc    ebp
  4135ca:	push   esi
  4135cb:	call   0x9a19bd7
  4135d0:	sub    dl,dl
  4135d2:	cmp    bl,BYTE PTR [edx]
  4135d4:	inc    ecx
  4135d5:	fdiv   st,st(3)
  4135d7:	dec    esp
  4135d9:	lock sub eax,0x2ebc851
  4135df:	cmp    eax,0x3f5120a9
  4135e4:	jmp    0x4135db
  4135e6:	call   0x867c:0x4c4ef03f
  4135ed:	retf   0x48f0
  4135f0:	cmc    
  4135f1:	jnp    0x4135f1
  4135f3:	cmp    BYTE PTR [esi+0x263d109a],cl
  4135f9:	jb     0x413616
  4135fb:	call   0xe80b:0x4c92acfe
  413602:	mov    al,ds:0x48605340
  413607:	add    al,0x81
  413609:	xchg   edx,eax
  41360a:	pop    edi
  41360b:	dec    edx
  41360c:	gs ss pushf 
  41360f:	test   al,0x6c
  413611:	push   ecx
  413612:	xchg   cl,bl
  413614:	mov    cl,0x23
  413616:	fnstsw WORD PTR [edi+eiz*8-0x3d]
  41361a:	aas    
  41361b:	pop    ss
  41361c:	jmp    DWORD PTR [eax]
  41361e:	mov    eax,ds:0xd7475779
  413623:	scas   al,BYTE PTR es:[edi]
  413624:	cs data16 aad 0x98
  413628:	js     0x41361b
  41362a:	div    BYTE PTR cs:[ebx]
  41362d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41362e:	fsub   st(6),st
  413630:	push   esp
  413631:	aam    0x2b
  413633:	(bad)  
  413635:	xchg   esp,eax
  413636:	mov    ebp,0xacc1b39d
  41363b:	inc    edi
  41363c:	in     eax,dx
  41363d:	mov    al,ds:0xed3bd9a2
  413642:	jb     0x4136a8
  413644:	ja     0x413639
  413646:	stos   BYTE PTR es:[edi],al
  413647:	add    al,0x4a
  413649:	and    eax,0xa2198ddd
  41364e:	xor    eax,0xc7028512
  413653:	mov    ch,0xaa
  413655:	nop
  413656:	shr    BYTE PTR [esi+0x67e23876],0x7a
  41365d:	add    DWORD PTR [eax],eax
  41365f:	leave  
  413660:	or     BYTE PTR [ebp+0x7d6b230b],ch
  413666:	iret   
  413667:	jecxz  0x413611
  413669:	or     eax,0x50c7e082
  41366e:	js     0x413610
  413670:	retf   
  413671:	or     DWORD PTR [esp+ecx*4-0x2c],ebp
  413675:	and    al,0x1
  413677:	jmp    0xeab1e864
  41367c:	jbe    0x413677
  41367e:	and    DWORD PTR [edi],edi
  413680:	pop    edi
  413681:	jnp    0x4136b1
  413683:	fwait
  413684:	imul   eax,DWORD PTR [eax],0x6b1b1e4c
  41368a:	in     eax,dx
  41368b:	push   cs
  41368c:	call   0x9b3a2635
  413691:	xor    DWORD PTR [esi],ebp
  413693:	mov    eax,0x6829a561
  413698:	jle    0x4136d6
  41369a:	stos   BYTE PTR es:[edi],al
  41369b:	dec    ebx
  41369c:	bound  ecx,QWORD PTR [edx-0x29]
  41369f:	mov    al,ch
  4136a1:	adc    DWORD PTR [ebx-0x4c],eax
  4136a4:	mov    ds:0x5c0b2a81,al
  4136a9:	pop    ebx
  4136aa:	shl    DWORD PTR [edi+0x56],1
  4136ad:	xchg   ebp,eax
  4136ae:	rcl    DWORD PTR [eax-0x77],cl
  4136b1:	ja     0x413650
  4136b3:	fimul  DWORD PTR [eax+ebx*4+0x3b0cd563]
  4136ba:	dec    ecx
  4136bb:	mov    edi,0xd32831dd
  4136c0:	sub    eax,0x768f80f4
  4136c5:	imul   esp,DWORD PTR [ecx+eiz*1],0x2e
  4136c9:	retf   
  4136ca:	push   cs
  4136cb:	(bad)  
  4136cd:	test   DWORD PTR [ebp+0xc],edx
  4136d0:	pop    edi
  4136d1:	xchg   edx,eax
  4136d2:	aas    
  4136d3:	imul   ebx,DWORD PTR [edi+ecx*8+0x66],0x97377cd6
  4136db:	in     al,dx
  4136dc:	xchg   BYTE PTR [edx-0x1a],dh
  4136df:	cmc    
  4136e0:	outs   dx,DWORD PTR ds:[esi]
  4136e1:	scas   eax,DWORD PTR es:[edi]
  4136e2:	addr16 xchg edx,eax
  4136e4:	pcmpgtd mm0,mm3
  4136e7:	nop
  4136e8:	retf   0xc102
  4136eb:	inc    edx
  4136ec:	(bad)  
  4136ed:	push   0xa84d4e10
  4136f2:	mov    ebp,0x1e117c71
  4136f7:	js     0x4136c7
  4136f9:	pop    ax
  4136fb:	sbb    BYTE PTR [ebx-0x569616d5],ah
  413701:	je     0x4136f3
  413703:	cmp    al,0x1
  413705:	inc    ebx
  413706:	mov    BYTE PTR [ebx-0x39e50082],dh
  41370c:	add    dh,BYTE PTR [ecx]
  41370e:	dec    ecx
  41370f:	(bad)  
  413710:	mov    al,0x8c
  413712:	jg     0x413723
  413714:	push   0x973232d6
  413719:	popf   
  41371a:	cmp    eax,0xefa97812
  41371f:	add    esp,edi
  413721:	xor    dl,dl
  413723:	cmp    eax,0xc994db71
  413728:	xchg   BYTE PTR [ecx+0x2f],dh
  41372b:	cmp    ch,BYTE PTR [ecx]
  41372d:	mov    al,0xfb
  41372f:	mov    edi,0x3f85751e
  413734:	mov    ds:0xab36d16c,eax
  413739:	sbb    cl,bl
  41373b:	bound  eax,QWORD PTR ds:0x258f3827
  413741:	jnp    0x41378d
  413743:	loopne 0x413763
  413745:	ret    0xffe8
  413748:	and    BYTE PTR ds:0x2055bd8c,ch
  41374e:	cmp    ecx,DWORD PTR [eax]
  413750:	pop    esi
  413751:	(bad)  
  413752:	ja     0x4137cb
  413754:	outs   dx,DWORD PTR ds:[esi]
  413755:	add    eax,0x8ba73472
  41375a:	arpl   cx,dx
  41375c:	ret    
  41375d:	fcmovbe st,st(0)
  41375f:	push   0x4d
  413761:	shl    DWORD PTR [edi],1
  413763:	xchg   ebx,eax
  413764:	loope  0x4137c6
  413766:	mov    ah,0xa5
  413768:	stos   BYTE PTR es:[edi],al
  413769:	pop    ss
  41376a:	inc    BYTE PTR [eax]
  41376c:	mov    al,ds:0x2dfe1046
  413771:	xor    eax,0x38312972
  413776:	push   edx
  413777:	or     DWORD PTR [eax-0xb],ebp
  41377a:	inc    ebp
  41377b:	push   esp
  41377c:	aam    0x13
  41377e:	dec    edx
  41377f:	les    ebx,FWORD PTR [eax+0x4d]
  413782:	repnz and ebp,esi
  413785:	mov    al,ds:0x4c8c893f
  41378a:	or     al,0x90
  41378c:	daa    
  41378d:	add    ecx,DWORD PTR [ebx+0x1e709aae]
  413793:	dec    ecx
  413794:	adc    DWORD PTR [ebp+0x53],edi
  413797:	lods   al,BYTE PTR ds:[esi]
  413798:	ret    
  413799:	mov    DWORD PTR es:[ebp+0x48d083ce],0xcf19ac5c
  4137a4:	mov    al,0xef
  4137a6:	out    dx,al
  4137a7:	sub    al,0x76
  4137a9:	cmc    
  4137aa:	(bad)  
  4137ac:	jg     0x4137af
  4137ae:	and    ah,ch
  4137b0:	mov    ah,0xdb
  4137b2:	xchg   esi,eax
  4137b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137b4:	mul    BYTE PTR [ecx+0x7eceb9ba]
  4137ba:	jle    0x4137b9
  4137bc:	mov    eax,0x35bdcea9
  4137c1:	push   0xefb3282f
  4137c6:	jae    0x413756
  4137c8:	scas   eax,DWORD PTR es:[edi]
  4137c9:	mov    DWORD PTR [eax-0x7b7d7285],edx
  4137cf:	xchg   DWORD PTR [eax+ebp*1-0x615b2586],esp
  4137d6:	or     ebp,DWORD PTR [edi]
  4137d8:	push   ds
  4137d9:	jbe    0x4137e8
  4137db:	in     eax,0x5d
  4137dd:	xlat   BYTE PTR ds:[ebx]
  4137de:	inc    eax
  4137df:	scas   al,BYTE PTR es:[edi]
  4137e0:	xor    eax,0xe210297d
  4137e5:	cld    
  4137e6:	push   ss
  4137e7:	cli    
  4137e8:	retf   
  4137e9:	(bad)  
  4137ea:	xchg   esi,eax
  4137eb:	xchg   edx,eax
  4137ec:	ret    
  4137ed:	push   edi
  4137ee:	aas    
  4137ef:	and    eax,0x969efb1f
  4137f4:	test   cl,0x4c
  4137f7:	jecxz  0x413827
  4137f9:	and    ch,BYTE PTR fs:[ebx-0x6311412d]
  413800:	pop    edi
  413801:	and    DWORD PTR [ebx-0x40],esi
  413804:	and    al,0x39
  413806:	dec    eax
  413807:	or     DWORD PTR [esi+0x6827501d],esi
  41380d:	mov    WORD PTR [eax],es
  41380f:	scas   eax,DWORD PTR es:[edi]
  413810:	sub    ah,BYTE PTR [ecx]
  413812:	lods   al,BYTE PTR ds:[esi]
  413813:	in     eax,dx
  413814:	jp     0x4137b6
  413816:	inc    esp
  413817:	cmp    eax,0x5267809
  41381c:	mov    cl,0xbb
  41381e:	(bad)  
  41381f:	daa    
  413820:	jl     0x41388a
  413822:	into   
  413823:	add    BYTE PTR [ebp-0x7b75b03d],bl
  413829:	cmp    BYTE PTR [eax],ch
  41382b:	pop    ss
  41382c:	push   ds
  41382d:	imul   edx,DWORD PTR [edx+ebp*1],0xffffff9f
  413831:	fwait
  413832:	das    
  413833:	leave  
  413834:	nop
  413835:	jb     0x4137f8
  413837:	xchg   DWORD PTR ds:[edi+0x11aa9939],edx
  41383e:	or     eax,0xaaa79635
  413843:	jbe    0x4137d4
  413845:	mov    DWORD PTR [ebp+0x42a5c19c],esi
  41384b:	fisttp QWORD PTR [ebx-0x4a]
  41384e:	ds push esi
  413850:	retf   0x5265
  413853:	add    bl,0x5d
  413856:	ins    BYTE PTR es:[edi],dx
  413857:	fdiv   DWORD PTR [esi+0x4e]
  41385a:	lods   al,BYTE PTR ds:[esi]
  41385b:	ret    0xdc98
  41385e:	xchg   DWORD PTR [esi],ebp
  413860:	(bad)  
  413861:	pop    ds
  413862:	jns    0x413830
  413864:	mov    ds:0xa78b11c,al
  413869:	lods   al,BYTE PTR ds:[esi]
  41386a:	jbe    0x4138cc
  41386c:	mov    eax,ds:0x3bb9763f
  413871:	xlat   BYTE PTR ds:[ebx]
  413872:	sahf   
  413873:	or     bl,BYTE PTR [edi-0x13fc6308]
  413879:	aaa    
  41387a:	rcl    DWORD PTR [ebx+edx*2+0x1710af91],0x49
  413882:	in     eax,0x2f
  413884:	js     0x413865
  413886:	cmp    cl,BYTE PTR [edx-0x4907c84f]
  41388c:	dec    dl
  41388e:	sbb    al,BYTE PTR [ecx]
  413890:	xor    BYTE PTR [edi+ebp*8-0x6f6731d9],bl
  413897:	and    ch,BYTE PTR [ebx+0x6cda0f13]
  41389d:	aaa    
  41389e:	or     DWORD PTR [esp+esi*1-0x40],edx
  4138a2:	jnp    0x4138fc
  4138a4:	rcr    DWORD PTR [esi-0x4a3ef18b],cl
  4138aa:	push   ebp
  4138ab:	bound  edx,QWORD PTR [ebx]
  4138ad:	aaa    
  4138ae:	ret    0xab96
  4138b1:	js     0x4138ed
  4138b3:	cs sbb bl,ch
  4138b6:	les    eax,FWORD PTR [ecx-0x71]
  4138b9:	mov    DWORD PTR [esi],eax
  4138bb:	xchg   edi,eax
  4138bc:	sbb    edi,DWORD PTR [ebx-0x20]
  4138bf:	in     al,dx
  4138c0:	call   0x42e2:0x3ad28e1d
  4138c7:	xor    BYTE PTR [eax+0x27bb90f8],bh
  4138cd:	int3   
  4138ce:	imul   BYTE PTR [edx+0xd84ee9c]
  4138d4:	mov    ecx,0xcf942aaa
  4138d9:	js     0x413943
  4138db:	(bad)  
  4138dc:	fmul   DWORD PTR [ecx-0x61]
  4138df:	xchg   esi,eax
  4138e0:	out    0x57,al
  4138e2:	xor    al,0xc3
  4138e4:	in     al,0x20
  4138e6:	enter  0xdf52,0x84
  4138ea:	cmc    
  4138eb:	aam    0xc8
  4138ed:	test   DWORD PTR [ebx+ecx*4-0x6d],ecx
  4138f1:	jns    0x413924
  4138f3:	xchg   esi,eax
  4138f4:	lods   eax,DWORD PTR ds:[esi]
  4138f5:	pusha  
  4138f6:	mov    ds:0xfbb2e20f,al
  4138fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138fc:	add    BYTE PTR [esi],al
  4138fe:	push   edx
  4138ff:	ins    BYTE PTR es:[edi],dx
  413900:	xchg   ebp,eax
  413901:	mov    ebx,0xbef4e4c5
  413906:	call   0x2807e01
  41390b:	jge    0x413962
  41390d:	inc    edx
  41390e:	lock mov ds:0xf4538294,al
  413914:	dec    esi
  413915:	sub    al,0x5e
  413917:	adc    ah,BYTE PTR [esi]
  413919:	cwde   
  41391a:	test   DWORD PTR [edi-0x33],eax
  41391d:	nop
  41391e:	(bad)  
  41391f:	popf   
  413920:	stc    
  413921:	out    dx,al
  413922:	iret   
  413923:	leave  
  413924:	cmp    bl,BYTE PTR [edi]
  413926:	aam    0xfa
  413928:	js     0x41396d
  41392a:	arpl   WORD PTR [ecx-0x6c54dc8a],si
  413930:	fldenv [eax-0x6fff2af2]
  413936:	jmp    0xff4d893b
  41393b:	fnstenv [ecx+0x50]
  41393e:	pusha  
  41393f:	push   ds
  413940:	sub    dh,dh
  413942:	add    eax,0xb0c05946
  413947:	jno    0x413920
  413949:	mov    dl,0x53
  41394b:	push   ecx
  41394c:	inc    esi
  41394d:	mov    edi,DWORD PTR [ebp+0x2a]
  413950:	xchg   ebx,eax
  413951:	dec    esp
  413952:	daa    
  413953:	inc    esi
  413954:	dec    edx
  413955:	push   ecx
  413956:	daa    
  413957:	push   ecx
  413958:	jmp    0x61c3adb3
  41395d:	fldenv [esi+0x75]
  413960:	or     esi,DWORD PTR [edx-0x43]
  413963:	dec    ecx
  413964:	icebp  
  413965:	inc    sp
  413967:	icebp  
  413968:	shr    DWORD PTR [ebx+0x5d2b7db7],cl
  41396e:	rol    DWORD PTR [esp+ebx*2],cl
  413971:	or     BYTE PTR [ebx+0x59119f5d],al
  413977:	stc    
  413978:	iret   
  413979:	ret    
  41397a:	jne    0x4139f2
  41397c:	inc    ebp
  41397d:	je     0x41397d
  41397f:	bound  esp,QWORD PTR [edi-0x6f]
  413982:	or     BYTE PTR [ebx+0x17cbf6be],bh
  413988:	stc    
  413989:	call   0x8a4:0x6d4d304e
  413990:	mov    bh,0x90
  413992:	js     0x41398c
  413994:	shufps xmm3,XMMWORD PTR [eax],0x2a
  413998:	scas   eax,DWORD PTR es:[edi]
  413999:	cmp    al,0xf0
  41399b:	gs rol edx,cl
  41399e:	cmp    DWORD PTR ds:[eax-0x23fab800],0xffffffa8
  4139a6:	cmp    BYTE PTR [edi-0x60b6ddff],al
  4139ac:	jmp    0x6d1ee978
  4139b1:	xchg   esp,eax
  4139b2:	dec    ecx
  4139b3:	shr    DWORD PTR [edx+ecx*1],cl
  4139b6:	jg     0x413980
  4139b8:	sub    eax,eax
  4139ba:	jae    0x4139ea
  4139bc:	xchg   BYTE PTR [esi],ah
  4139be:	or     eax,0xf0ef6871
  4139c3:	sub    ecx,DWORD PTR [edx-0x6e]
  4139c6:	push   ebx
  4139c7:	adc    DWORD PTR [edx],edx
  4139c9:	mov    ch,0x3a
  4139cb:	test   al,0xd9
  4139cd:	jp     0x4139f2
  4139cf:	xchg   ebx,eax
  4139d0:	sub    bh,BYTE PTR [ebp-0x3d]
  4139d3:	arpl   WORD PTR [edi+0x50],cx
  4139d6:	mov    ecx,0xeab430a1
  4139db:	mov    bh,0x2a
  4139dd:	or     DWORD PTR [edx+0x7e6856e7],ebp
  4139e3:	imul   edi,DWORD PTR [eax+0x2c749399],0x41f6f70a
  4139ed:	popa   
  4139ee:	retf   
  4139ef:	stos   BYTE PTR es:[edi],al
  4139f0:	pop    edi
  4139f1:	loope  0x4139c6
  4139f3:	loopne 0x413a71
  4139f5:	retf   
  4139f6:	std    
  4139f7:	arpl   WORD PTR [eax+edi*2-0x71],cx
  4139fb:	inc    esp
  4139fc:	(bad)  
  4139fd:	jmp    0x9f84de1b
  413a02:	iret   
  413a03:	(bad)  
  413a05:	jge    0x413a4b
  413a07:	(bad)  
  413a08:	push   esi
  413a09:	mov    edx,0x1bd6b378
  413a0e:	ins    DWORD PTR es:[edi],dx
  413a0f:	div    BYTE PTR [ebx-0x203cb5af]
  413a15:	pushf  
  413a16:	sub    DWORD PTR ds:0xf892487f,edi
  413a1c:	sub    ch,BYTE PTR [eax+edi*2]
  413a1f:	aam    0x9e
  413a21:	mov    WORD PTR [esi-0x7db8b7d0],ds
  413a27:	ds jns 0x413a40
  413a2a:	inc    ebx
  413a2b:	sbb    DWORD PTR [esi+eax*8-0x5],eax
  413a2f:	push   edx
  413a30:	hlt    
  413a31:	cli    
  413a32:	mov    bl,BYTE PTR [esi]
  413a34:	or     edx,DWORD PTR [ebx*8-0x2413d803]
  413a3b:	cdq    
  413a3c:	adc    BYTE PTR ds:0x6af39000,ch
  413a42:	adc    dh,BYTE PTR [ebp+0x3b0d60a4]
  413a48:	ins    DWORD PTR es:[edi],dx
  413a49:	push   eax
  413a4a:	dec    edi
  413a4b:	inc    ebp
  413a4c:	mov    esp,0x4fcbcd16
  413a51:	mov    dl,0xde
  413a53:	pusha  
  413a54:	ja     0x413a3b
  413a56:	cmp    DWORD PTR [edi+ecx*4],ebp
  413a59:	cmp    BYTE PTR ds:0x1fec,dl
  413a5e:	pop    edi
  413a5f:	iret   
  413a60:	jg     0x413a55
  413a62:	push   cs
  413a63:	das    
  413a64:	inc    ebx
  413a65:	iret   
  413a66:	enter  0xf94e,0xcb
  413a6a:	xlat   BYTE PTR ds:[ebx]
  413a6b:	fld    TBYTE PTR [edx+0x3e]
  413a6e:	in     eax,0x39
  413a70:	ret    0xe6da
  413a73:	jg     0x413a43
  413a75:	test   al,0x45
  413a77:	stos   BYTE PTR es:[edi],al
  413a78:	dec    edx
  413a79:	cmp    ecx,DWORD PTR [esi-0x3a]
  413a7c:	retf   
  413a7d:	int    0xeb
  413a7f:	xchg   edx,ebp
  413a81:	push   ebx
  413a82:	out    dx,al
  413a83:	pop    ds
  413a84:	sar    DWORD PTR [ebp+0x65dd50eb],1
  413a8a:	push   ds
  413a8b:	adc    edi,DWORD PTR [esi-0x58d0bc74]
  413a91:	push   edi
  413a92:	stos   DWORD PTR es:[edi],eax
  413a93:	das    
  413a94:	push   ecx
  413a95:	call   0x9854:0xc9f8fa
  413a9c:	jl     0x413ad4
  413a9e:	mov    ds:0x2e85988d,al
  413aa3:	out    0xce,eax
  413aa5:	fldz   
  413aa7:	sti    
  413aa8:	sbb    cl,0xe6
  413aab:	rol    esp,0xb
  413aae:	jnp    0x413a45
  413ab0:	(bad)
  413ab3:	or     eax,0xc381a94a
  413ab8:	push   edx
  413ab9:	neg    ah
  413abb:	sub    eax,0xd4210c4d
  413ac0:	mov    ecx,0x9ed4d9e6
  413ac5:	ss inc ebp
  413ac7:	sub    eax,DWORD PTR [esi-0x2]
  413aca:	adc    al,0x95
  413acc:	out    dx,al
  413acd:	out    0x85,al
  413acf:	addr16 mov dh,0x53
  413ad2:	sub    ebp,edi
  413ad4:	jmp    0x413ae9
  413ad6:	pop    ecx
  413ad7:	push   es
  413ad8:	(bad)  
  413ad9:	sbb    dh,bl
  413adb:	(bad)  [edx]
  413add:	fwait
  413ade:	iret   
  413adf:	adc    eax,0x24ee3e41
  413ae4:	in     eax,dx
  413ae5:	and    ebp,DWORD PTR [edi-0x19f5485]
  413aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aec:	jecxz  0x413aa9
  413aee:	or     bh,ch
  413af0:	xchg   edi,eax
  413af1:	nop
  413af2:	repnz or bl,dh
  413af5:	shl    BYTE PTR [edx+0xc],0x4d
  413af9:	mov    eax,0x6e29955a
  413afe:	icebp  
  413aff:	sbb    eax,0x4a223f7b
  413b04:	mov    bh,0x1b
  413b06:	(bad)  
  413b07:	inc    esi
  413b08:	adc    DWORD PTR [edx+0xa04161e],eax
  413b0e:	in     al,0x35
  413b10:	lea    eax,[ebx-0x7572e2a3]
  413b16:	mul    BYTE PTR [ebx]
  413b18:	cmp    eax,esi
  413b1a:	cli    
  413b1b:	sbb    esi,0x1859af84
  413b21:	addr16 and al,0x12
  413b24:	and    DWORD PTR [eax-0x11],esi
  413b27:	pop    eax
  413b28:	fwait
  413b29:	push   ds
  413b2a:	ja     0x413b26
  413b2c:	inc    esi
  413b2d:	ja     0x413b2c
  413b2f:	dec    edx
  413b30:	add    ch,BYTE PTR [edi]
  413b32:	cmp    BYTE PTR [eax-0x48a9fa10],al
  413b38:	jg     0x413adc
  413b3a:	cmp    ebp,DWORD PTR [edx]
  413b3c:	and    dh,ah
  413b3e:	aas    
  413b3f:	shl    DWORD PTR [ecx-0x461655d3],0x87
  413b46:	add    BYTE PTR [edi-0x889d128],ah
  413b4c:	test   eax,0x84ec8c25
  413b51:	and    eax,ebp
  413b53:	push   edi
  413b54:	jo     0x413b4b
  413b56:	(bad)  
  413b57:	je     0x413b28
  413b59:	mov    ebp,0x55fdc444
  413b5e:	stc    
  413b5f:	and    BYTE PTR [ecx+edi*4-0x91e84fd],bl
  413b66:	sub    DWORD PTR [eax],0x3f
  413b69:	jp     0x413b3b
  413b6b:	xor    eax,0x4886b146
  413b70:	pop    esp
  413b71:	stos   DWORD PTR es:[edi],eax
  413b72:	cmp    BYTE PTR [ebx],0x72
  413b75:	popa   
  413b76:	hlt    
  413b77:	push   cs
  413b78:	fldcw  WORD PTR [edi+0x12]
  413b7b:	adc    eax,0xffffffa4
  413b7e:	inc    eax
  413b7f:	xchg   ebx,eax
  413b80:	rol    BYTE PTR [esi],0x65
  413b83:	sbb    ebp,DWORD PTR [ebx]
  413b85:	xchg   ebp,eax
  413b86:	loope  0x413bee
  413b88:	mov    al,0x6f
  413b8a:	hlt    
  413b8b:	add    al,0xfc
  413b8d:	add    edx,DWORD PTR [esi-0x49]
  413b90:	shr    DWORD PTR [edi+0x44],1
  413b93:	(bad)  
  413b94:	shr    BYTE PTR [edi+0x63],cl
  413b97:	and    al,0xee
  413b99:	xchg   BYTE PTR [edi+0x0],bh
  413b9c:	cmp    dh,BYTE PTR [edi-0x4f]
  413b9f:	xor    BYTE PTR [esi],0x1f
  413ba2:	sub    al,0x18
  413ba4:	sub    BYTE PTR [esi+0x26],dh
  413ba7:	xchg   BYTE PTR [ebx-0x50fe6e7e],dl
  413bad:	push   cs
  413bae:	test   BYTE PTR [ebx-0x30a48db9],dh
  413bb4:	sahf   
  413bb5:	dec    ebx
  413bb6:	push   ss
  413bb7:	in     eax,0xc5
  413bb9:	fdivr  st,st(7)
  413bbb:	mov    ?,WORD PTR [esi-0x64]
  413bbe:	sub    dh,BYTE PTR [edx+0x38c205a8]
  413bc4:	xlat   BYTE PTR ds:[ebx]
  413bc5:	pop    esp
  413bc6:	(bad)  
  413bc7:	retf   
  413bc8:	xlat   BYTE PTR ds:[ebx]
  413bc9:	int3   
  413bca:	fnstsw WORD PTR [edx+0xd649bdc]
  413bd0:	fcmovu st,st(6)
  413bd2:	add    bh,BYTE PTR [edx]
  413bd4:	mov    edx,ebp
  413bd6:	cmp    esp,ecx
  413bd8:	lods   eax,DWORD PTR ds:[esi]
  413bd9:	fwait
  413bda:	inc    edi
  413bdb:	imul   edx,DWORD PTR [ebp+0x14],0xffffffd5
  413bdf:	es dec esi
  413be1:	jnp    0x413b93
  413be3:	or     al,0x33
  413be5:	xor    DWORD PTR [edx],ecx
  413be7:	push   edx
  413be8:	(bad)  
  413be9:	fucomip st,st(7)
  413beb:	adc    DWORD PTR ss:[ebx-0x52],0xdd9a1765
  413bf3:	jg     0x413baf
  413bf5:	cli    
  413bf6:	adc    esi,ebx
  413bf8:	sub    BYTE PTR [si+0x7116],0xf0
  413bfe:	mov    esi,0x3e116d3f
  413c03:	mov    al,ds:0xaf027534
  413c08:	mov    dh,0xcf
  413c0a:	xchg   ecx,eax
  413c0b:	pop    ebp
  413c0c:	and    BYTE PTR [eax-0x7c4a054a],cl
  413c12:	lahf   
  413c13:	or     dl,BYTE PTR [ebx+0x6357f7d0]
  413c19:	xchg   ebp,eax
  413c1a:	push   0xffffff91
  413c1c:	push   eax
  413c1d:	out    dx,al
  413c1e:	push   ecx
  413c1f:	sbb    ch,ch
  413c21:	xor    edi,DWORD PTR [ecx-0x68]
  413c24:	lock clc 
  413c26:	out    dx,al
  413c27:	lods   eax,DWORD PTR ds:[esi]
  413c28:	mov    eax,ds:0x76e1d388
  413c2d:	xor    esi,DWORD PTR [ecx-0x25c3785f]
  413c33:	inc    ebp
  413c34:	ins    BYTE PTR es:[edi],dx
  413c35:	nop
  413c36:	mov    al,0xb2
  413c38:	outs   dx,DWORD PTR ds:[esi]
  413c39:	dec    ebp
  413c3a:	and    al,0xce
  413c3c:	ret    0x9b13
  413c3f:	ficom  WORD PTR [edi+ebx*8+0x75]
  413c43:	xor    eax,0xe080e677
  413c48:	out    0xde,al
  413c4a:	push   ds
  413c4b:	ds jg  0x413cae
  413c4e:	shr    DWORD PTR [edi+0x26d7eab7],cl
  413c54:	call   0xdc67:0xd57bd7b
  413c5b:	lock jno 0x413bea
  413c5e:	data16 sti 
  413c60:	mov    edi,ebp
  413c62:	push   es
  413c63:	adc    edx,edi
  413c65:	fnsave [edx+0x54]
  413c68:	pop    es
  413c69:	ins    BYTE PTR es:[edi],dx
  413c6a:	mov    ds:0x681b31d,al
  413c6f:	fs xchg esi,eax
  413c71:	dec    ebp
  413c72:	(bad)  
  413c73:	outs   dx,DWORD PTR ds:[esi]
  413c74:	xchg   ecx,eax
  413c75:	jns    0xbaec11e6
  413c7b:	sub    dl,al
  413c7d:	dec    ebx
  413c7e:	push   edi
  413c7f:	idiv   ebx
  413c81:	inc    edi
  413c82:	or     eax,0x5cee1ef6
  413c87:	lods   eax,DWORD PTR ds:[esi]
  413c89:	xchg   ebp,eax
  413c8a:	je     0x413c40
  413c8c:	jne    0x413c12
  413c8e:	aas    
  413c8f:	jp     0x413c35
  413c91:	(bad)  
  413c92:	(bad)  
  413c93:	jb     0x413c30
  413c95:	cmp    ch,cl
  413c97:	sbb    cl,al
  413c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c9a:	std    
  413c9b:	mov    esi,ebp
  413c9d:	loope  0x413ce7
  413c9f:	dec    ecx
  413ca0:	cmc    
  413ca1:	pop    ecx
  413ca2:	lock dec edi
  413ca4:	sahf   
  413ca5:	inc    edi
  413ca6:	pop    eax
  413ca7:	mov    eax,0x2af888da
  413cac:	sar    DWORD PTR ds:0xac7eb4eb,cl
  413cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb3:	add    eax,0x4fc4f6da
  413cb8:	xchg   ecx,eax
  413cb9:	push   esp
  413cba:	mov    dh,0x14
  413cbd:	sub    eax,0x8f32f0d
  413cc2:	xchg   esi,eax
  413cc3:	aad    0x90
  413cc5:	repz daa 
  413cc7:	movd   DWORD PTR [eax],mm4
  413cca:	stc    
  413ccb:	mov    esp,0x98e3b2b8
  413cd0:	push   ds
  413cd1:	nop
  413cd2:	xchg   edi,eax
  413cd3:	push   esi
  413cd4:	aas    
  413cd5:	lock mov esp,0xf5374949
  413cdb:	pop    ecx
  413cdc:	jb     0x413c84
  413cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cdf:	push   esi
  413ce0:	jno    0x413c8d
  413ce2:	rcr    DWORD PTR [esi-0x1d],1
  413ce5:	out    0xf3,al
  413ce7:	aam    0xe
  413ce9:	test   eax,0xf8554f7a
  413cee:	dec    esp
  413cef:	and    ecx,esi
  413cf1:	xchg   DWORD PTR [ebx+0x601f3139],eax
  413cf7:	add    ecx,esp
  413cf9:	repnz push esi
  413cfb:	stos   BYTE PTR es:[edi],al
  413cfc:	or     DWORD PTR [edx-0x30],ebx
  413cff:	test   eax,0x906d12ed
  413d04:	mov    ebx,DWORD PTR [edx]
  413d06:	out    dx,eax
  413d07:	fimul  WORD PTR [ecx]
  413d09:	jmp    0x413ce5
  413d0b:	sub    eax,0x63a45de3
  413d10:	fcomip st,st(6)
  413d12:	add    eax,0xe5a169c6
  413d17:	and    eax,0x86b76b3
  413d1c:	mov    eax,cs:0x5773d850
  413d22:	test   DWORD PTR [ebp+0xd],ebp
  413d25:	xor    al,0xb9
  413d27:	push   cs
  413d28:	cmp    bh,BYTE PTR [eax]
  413d2a:	fs xchg edx,eax
  413d2c:	int3   
  413d2d:	and    BYTE PTR [edi],al
  413d2f:	xor    ebp,edx
  413d31:	cmp    ch,dh
  413d33:	outs   dx,BYTE PTR ds:[esi]
  413d34:	out    0x9d,al
  413d36:	fisttp WORD PTR [edi-0x51]
  413d39:	adc    ch,0x8a
  413d3c:	push   0xfabdbfe2
  413d41:	ror    BYTE PTR [esp+esi*1],0xed
  413d45:	outs   dx,BYTE PTR ds:[esi]
  413d46:	scas   eax,DWORD PTR es:[edi]
  413d47:	mov    edi,0xefb8ba81
  413d4c:	jno    0x413da7
  413d4e:	not    DWORD PTR es:[esi]
  413d51:	(bad)  [ebx]
  413d53:	xchg   edi,eax
  413d54:	loope  0x413d82
  413d56:	or     eax,DWORD PTR [esi-0xd]
  413d59:	shl    edi,1
  413d5b:	ds popa 
  413d5d:	and    BYTE PTR [ecx-0x47],0x13
  413d61:	jp     0x413d64
  413d63:	xor    eax,ebp
  413d65:	adc    edx,esi
  413d67:	and    DWORD PTR [ebx-0xd452d68],edi
  413d6d:	(bad)  [ebp+0x56]
  413d70:	ins    BYTE PTR es:[edi],dx
  413d71:	inc    esi
  413d72:	call   0x74eadb2
  413d77:	stc    
  413d78:	pop    edx
  413d79:	add    al,0xa5
  413d7b:	and    DWORD PTR [edx+0x4e],0xf9fdb941
  413d82:	das    
  413d83:	xor    bl,BYTE PTR [edi-0xb]
  413d86:	(bad)  
  413d87:	fistp  DWORD PTR [eax]
  413d89:	xor    cl,BYTE PTR [ebx]
  413d8b:	adc    DWORD PTR [ecx+0x59],esp
  413d8e:	sbb    BYTE PTR [eax-0x291c246d],al
  413d94:	repnz sbb esi,DWORD PTR [esi]
  413d97:	jnp    0x413d37
  413d99:	push   ebx
  413d9a:	rcr    cl,0xad
  413d9d:	jge    0x413d5d
  413d9f:	fcmovnu st,st(5)
  413da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da2:	xor    esi,DWORD PTR [ebp-0x4d]
  413da5:	fnstcw WORD PTR [ecx]
  413da7:	xor    ch,dl
  413da9:	xor    dl,dh
  413dab:	xor    eax,DWORD PTR [ebx+0x70]
  413dae:	iret   
  413daf:	aam    0xcf
  413db1:	cs xor eax,0xbd50a0a7
  413db7:	cmp    BYTE PTR ds:0x29b2276,bh
  413dbd:	jmp    0xee4bda17
  413dc2:	xchg   ecx,eax
  413dc3:	mov    ds:0xc774f3ec,al
  413dc8:	loop   0x413d57
  413dca:	mov    ebp,0x7f0e9958
  413dcf:	push   esi
  413dd0:	xor    al,ch
  413dd2:	ret    0x1125
  413dd5:	adc    bh,BYTE PTR [esp+ebp*1+0x17]
  413dd9:	dec    eax
  413dda:	xchg   edx,eax
  413ddb:	mov    ebp,0x479da672
  413de0:	cdq    
  413de1:	rcr    DWORD PTR fs:[ebp-0x26e24c44],1
  413de8:	pushf  
  413de9:	or     esi,ecx
  413deb:	jbe    0x413e6c
  413ded:	and    edi,DWORD PTR [edx+0x4c360a36]
  413df3:	push   eax
  413df4:	push   ebp
  413df5:	push   0x64c78398
  413dfa:	mov    al,0x5f
  413dfc:	or     DWORD PTR [ecx-0x6e],0xeb29caa3
  413e03:	inc    esi
  413e04:	ret    0xafb0
  413e07:	mov    dl,0x93
  413e09:	mov    dh,0x2e
  413e0b:	arpl   si,ax
  413e0d:	loope  0x413e46
  413e0f:	inc    eax
  413e10:	xor    edx,edx
  413e12:	mov    ds:0xdbd10bfb,al
  413e17:	mov    ch,0x6b
  413e19:	pop    ebx
  413e1a:	dec    edi
  413e1b:	mov    ch,0x13
  413e1d:	lods   eax,DWORD PTR ds:[esi]
  413e1e:	popa   
  413e1f:	cdq    
  413e20:	jg     0x413e7e
  413e22:	or     al,0x0
  413e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e25:	int3   
  413e26:	xlat   BYTE PTR ds:[ebx]
  413e27:	loopne 0x413e23
  413e29:	push   ss
  413e2a:	inc    edi
  413e2b:	add    al,0xd9
  413e2d:	mov    bl,cl
  413e2f:	mov    eax,ds:0x378470fe
  413e34:	rcl    BYTE PTR [edi+ecx*8+0x5d],0x65
  413e39:	cmp    eax,0xca81b424
  413e3e:	xor    ecx,ebp
  413e40:	pop    ebx
  413e41:	ins    DWORD PTR es:[edi],dx
  413e42:	(bad)  
  413e43:	ss icebp 
  413e45:	mov    dl,0xff
  413e47:	and    BYTE PTR [ebp+ecx*4-0x7240cf5b],al
  413e4e:	sub    BYTE PTR [ecx+0x8],0x18
  413e52:	push   esp
  413e53:	loop   0x413e63
  413e55:	and    BYTE PTR [esi+0xa],al
  413e58:	xor    DWORD PTR [ebx+0x70],esp
  413e5b:	inc    edx
  413e5c:	and    edi,DWORD PTR [esp+esi*1+0x5bde3922]
  413e63:	push   ss
  413e64:	add    DWORD PTR [ecx+eax*8],edi
  413e67:	pop    ecx
  413e68:	ret    0xd00d
  413e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e6c:	xchg   esp,eax
  413e6d:	cmp    BYTE PTR [edi],ah
  413e6f:	test   al,0x68
  413e71:	jle    0x413eb9
  413e73:	ds pop ds
  413e75:	mov    BYTE PTR [edx+edx*4-0x1c],0xac
  413e7a:	sti    
  413e7b:	imul   esp,DWORD PTR [ebx+ecx*8-0x62],0xa
  413e80:	or     ch,BYTE PTR [esi-0x738b2830]
  413e86:	mov    bl,0xef
  413e88:	ins    DWORD PTR es:[edi],dx
  413e89:	fwait
  413e8a:	mov    esp,0x3bbf0b2d
  413e8f:	push   edi
  413e90:	cmp    eax,0x77a82161
  413e95:	add    al,0x9a
  413e97:	popa   
  413e98:	sub    eax,0xbe710f6f
  413e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9e:	fdivr  QWORD PTR [ecx-0x1f]
  413ea1:	shl    DWORD PTR [ecx],0x1e
  413ea4:	gs in  al,dx
  413ea6:	mov    dh,0x5b
  413ea8:	inc    eax
  413ea9:	fdivrp st(1),st
  413eac:	gs cs push esp
  413eaf:	pop    edi
  413eb0:	outs   dx,DWORD PTR ds:[esi]
  413eb1:	enter  0x3286,0x86
  413eb5:	mov    ah,0x87
  413eb7:	mov    WORD PTR [eax+0x141fb27c],ss
  413ebd:	xchg   edi,ebx
  413ebf:	mov    ds,WORD PTR [ebx-0x2b778f12]
  413ec5:	fnop   
  413ec7:	daa    
  413ec8:	stos   DWORD PTR es:[edi],eax
  413ec9:	loop   0x413e69
  413ecb:	add    bl,dl
  413ecd:	push   edx
  413ece:	ret    
  413ecf:	mov    cl,0x98
  413ed1:	dec    esi
  413ed2:	fwait
  413ed3:	mov    edi,0xbb097da9
  413ed8:	ja     0x413e91
  413eda:	push   esi
  413edb:	adc    ah,BYTE PTR [ebx]
  413edd:	sbb    al,0xfe
  413edf:	adc    BYTE PTR ds:0x5b4a77a4,bh
  413ee5:	std    
  413ee6:	xchg   esi,eax
  413ee7:	mov    eax,ds:0xdc2c71d6
  413eec:	xchg   edx,eax
  413eed:	lods   al,BYTE PTR ds:[esi]
  413eee:	jmp    0x413efc
  413ef0:	call   0xc527f0dd
  413ef5:	dec    ebx
  413ef6:	call   0x478c87d4
  413efb:	pop    eax
  413efc:	and    ch,BYTE PTR [edx+esi*4]
  413eff:	add    bl,BYTE PTR [esi+0x5f879e74]
  413f05:	xor    edi,ebp
  413f07:	daa    
  413f08:	pusha  
  413f09:	jmp    0xad0c296f
  413f0e:	or     al,0xdb
  413f10:	fnsave [ebp+0x7ef10995]
  413f16:	btc    DWORD PTR [edi+0x5ce23dd9],0xdc
  413f1e:	push   eax
  413f1f:	and    cl,0x4
  413f22:	or     al,0x4c
  413f24:	push   ds
  413f25:	neg    bh
  413f27:	(bad)  
  413f29:	(bad)
  413f2c:	or     al,0xe7
  413f2e:	loop   0x413eba
  413f30:	mov    ecx,0x1a65d356
  413f35:	xlat   BYTE PTR ds:[ebx]
  413f36:	mov    bh,cl
  413f38:	mov    esp,0x9f7cef59
  413f3d:	push   edi
  413f3e:	in     al,dx
  413f3f:	out    dx,eax
  413f40:	outs   dx,BYTE PTR ds:[esi]
  413f41:	dec    esp
  413f42:	push   edx
  413f43:	aam    0xb1
  413f45:	xchg   esi,eax
  413f46:	clc    
  413f47:	push   cs
  413f48:	xor    DWORD PTR [edx],0x7f
  413f4b:	inc    esp
  413f4c:	adc    al,0x7
  413f4e:	enter  0x36ba,0x6
  413f52:	add    ecx,DWORD PTR [ebx+0x7a422bc7]
  413f58:	add    eax,0x40e62294
  413f5d:	stc    
  413f5e:	push   edi
  413f5f:	pop    ss
  413f60:	dec    ebp
  413f61:	bound  eax,QWORD PTR [ebx-0x1ab9ff34]
  413f67:	scas   al,BYTE PTR es:[edi]
  413f68:	cmp    dh,BYTE PTR [ebp+0x6b]
  413f6b:	fstp   QWORD PTR [edx]
  413f6d:	dec    eax
  413f6e:	addr16 icebp 
  413f70:	cmp    bl,BYTE PTR [ecx+edx*4+0x2d]
  413f74:	sub    cl,ch
  413f76:	mov    eax,ds:0x711ea987
  413f7b:	mov    edi,0x28bfa6c7
  413f80:	sub    ch,BYTE PTR [ebx-0x712cf08b]
  413f86:	cwde   
  413f87:	push   esp
  413f88:	les    edi,FWORD PTR [edx+ebp*4+0x50fc0550]
  413f8f:	jle    0x413fba
  413f91:	push   cs
  413f92:	lea    eax,[edx]
  413f94:	sub    al,0x14
  413f96:	pushw  es
  413f98:	clc    
  413f99:	loope  0x413f7c
  413f9b:	sub    eax,0xbb4753a8
  413fa0:	push   ebp
  413fa1:	dec    ecx
  413fa2:	mov    ds,WORD PTR [edx]
  413fa4:	and    BYTE PTR [eax+eax*1],dl
  413fa7:	popa   
  413fa8:	xor    DWORD PTR [ebx],ecx
  413faa:	sub    bl,BYTE PTR [esi+0x7a821945]
  413fb0:	pop    ds
  413fb1:	shl    BYTE PTR [esi],0xc
  413fb4:	inc    ebx
  413fb5:	mov    ecx,0x230c9a5
  413fba:	or     BYTE PTR [ecx+0x56373529],bh
  413fc0:	inc    edx
  413fc1:	pushf  
  413fc2:	stos   BYTE PTR es:[edi],al
  413fc3:	nop
  413fc4:	daa    
  413fc5:	push   ebx
  413fc6:	icebp  
  413fc7:	fs jg  0x413fa7
  413fca:	repnz sahf 
  413fcc:	push   ss
  413fcd:	pop    edx
  413fce:	ins    DWORD PTR es:[edi],dx
  413fcf:	cmp    edx,DWORD PTR [ebx]
  413fd1:	adc    DWORD PTR [esi+0x456f3cbe],ebp
  413fd7:	ins    BYTE PTR es:[edi],dx
  413fd8:	stos   DWORD PTR es:[edi],eax
  413fd9:	dec    esi
  413fda:	shr    edi,0x2e
  413fdd:	xor    DWORD PTR [eax-0x6],eax
  413fe0:	inc    edi
  413fe1:	jmp    0x251e3d5b
  413fe6:	jp     0x413f7d
  413fe8:	in     eax,dx
  413fe9:	push   0x123bb5ed
  413fee:	cld    
  413fef:	xchg   ebx,eax
  413ff0:	mov    eax,ds:0x4cda389d
  413ff5:	xchg   edx,eax
  413ff6:	in     eax,dx
  413ff7:	(bad)  
  413ff8:	or     cl,BYTE PTR [eax]
  413ffa:	adc    eax,0x8f9ec12b
  413fff:	in     al,dx
  414000:	bsr    eax,DWORD PTR ds:0xe4f000ce
  414007:	and    BYTE PTR [ebp+0x2],dl
  41400a:	mov    al,0xba
  41400c:	jmp    0x1ce0:0x22124789
  414013:	and    al,0x3b
  414015:	mov    cl,0x84
  414017:	inc    edx
  414018:	out    dx,eax
  414019:	cmp    al,0x95
  41401b:	mov    bl,0x89
  41401d:	rol    BYTE PTR [edi],0x37
  414020:	push   cs
  414021:	out    0x82,al
  414023:	(bad)  
  414024:	fsubr  QWORD PTR [edi-0x54]
  414027:	addr16 dec ecx
  414029:	mov    ah,BYTE PTR [ebx]
  41402b:	or     bl,BYTE PTR [ecx+0x29]
  41402e:	shl    BYTE PTR [esi-0x53],1
  414031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414032:	jg     0x41406f
  414034:	mov    ch,0x8b
  414036:	jmp    0xd4e6:0xf16f6919
  41403d:	mov    BYTE PTR [esi],ah
  41403f:	push   edx
  414040:	fidiv  WORD PTR [ebx]
  414042:	(bad)  
  414044:	ins    BYTE PTR es:[edi],dx
  414045:	loop   0x4140b6
  414047:	mov    ebp,0x5eea46fa
  41404c:	inc    eax
  41404d:	sahf   
  41404e:	fwait
  41404f:	imul   eax,DWORD PTR [edx+0x33],0x49
  414053:	jno    0x41400d
  414055:	sbb    BYTE PTR [edi-0x5d92788e],cl
  41405b:	fadd   QWORD PTR [ecx]
  41405d:	popf   
  41405e:	and    DWORD PTR [edi+edi*2-0x699c4981],esi
  414065:	mov    eax,0xf528d666
  41406a:	adc    DWORD PTR [ebx-0x6fb27259],eax
  414070:	iret   
  414071:	add    BYTE PTR [edi+0x282c0d51],al
  414077:	scas   eax,DWORD PTR es:[edi]
  414078:	dec    edi
  414079:	and    eax,0xc07d507
  41407e:	or     eax,0xac8c686d
  414083:	add    dl,BYTE PTR [edx+0x77]
  414086:	jle    0x4140ed
  414088:	push   ds
  414089:	jno    0x4140d3
  41408b:	lock add al,0xf5
  41408e:	les    ecx,FWORD PTR [edx+0x45d348f5]
  414094:	mov    dl,0xf7
  414096:	outs   dx,BYTE PTR ds:[esi]
  414097:	sub    DWORD PTR [ecx+0x29cbc422],eax
  41409d:	adc    eax,0xc6199f6f
  4140a2:	fild   QWORD PTR [edi]
  4140a4:	xor    eax,0xcaa63bbf
  4140a9:	fwait
  4140aa:	mov    bh,0xb3
  4140ac:	push   eax
  4140ad:	add    al,0xff
  4140af:	pop    ecx
  4140b0:	je     0x4140ea
  4140b2:	scas   al,BYTE PTR es:[edi]
  4140b3:	jns    0x41404d
  4140b5:	pop    ds
  4140b6:	jp     0x414091
  4140b8:	jmp    0x414110
  4140ba:	jp     0x4140a5
  4140bc:	adc    esp,ecx
  4140be:	mov    al,ds:0xc1c0c5a3
  4140c3:	addr16 (bad) 
  4140c5:	retf   
  4140c6:	jnp    0x414066
  4140c8:	sbb    DWORD PTR [ebx+0x50],0xffffffa7
  4140cc:	pop    ecx
  4140cd:	xchg   edx,eax
  4140ce:	xchg   ebx,eax
  4140cf:	inc    edx
  4140d0:	mov    DWORD PTR [eax],edx
  4140d2:	ds mov dh,0x38
  4140d5:	sub    DWORD PTR [edx-0x557c3a8c],ebp
  4140db:	add    edx,DWORD PTR [edx-0x2bf472ce]
  4140e1:	inc    edi
  4140e2:	je     0x414141
  4140e4:	nop
  4140e5:	mov    eax,0x9f5a744d
  4140ea:	and    DWORD PTR [ebx-0x54],edi
  4140ed:	lahf   
  4140ee:	lahf   
  4140ef:	mov    ebx,0x91975113
  4140f4:	pop    ss
  4140f5:	push   ebx
  4140f6:	mov    eax,0xf9cf4b10
  4140fb:	shl    esi,1
  4140fd:	dec    esi
  4140fe:	(bad)  
  4140ff:	(bad)  
  414100:	and    al,0x51
  414102:	addr16 (bad) 
  414104:	dec    esp
  414105:	push   edi
  414106:	arpl   WORD PTR [ebx],ax
  414108:	jne    0x4140bc
  41410a:	ja     0x41415a
  41410c:	pop    ebx
  41410d:	rdmsr  
  41410f:	icebp  
  414110:	and    al,0xbc
  414112:	mov    bh,0xca
  414114:	cli    
  414115:	sub    eax,0xc3ce4ec7
  41411a:	sbb    al,0xb9
  41411c:	fwait
  41411d:	push   0xffffffa3
  41411f:	add    eax,0xb75083f0
  414124:	jge    0x414167
  414126:	and    ch,BYTE PTR [edx]
  414128:	sti    
  414129:	(bad)  
  41412a:	call   0xfbdb7ca0
  41412f:	cli    
  414130:	popf   
  414131:	lock cwde 
  414133:	loop   0x4140e1
  414135:	push   0xbb87c48c
  41413a:	not    BYTE PTR [edx+0x5f]
  41413d:	adc    dh,BYTE PTR [esi+eax*1-0x6f9a48f5]
  414144:	test   dl,cl
  414146:	test   ch,bl
  414148:	mov    esp,ds
  41414a:	inc    ebp
  41414b:	or     BYTE PTR [edx],dl
  41414d:	push   edi
  41414e:	mov    WORD PTR [esi],es
  414150:	mov    ebp,DWORD PTR [edx]
  414152:	in     al,dx
  414153:	scas   eax,DWORD PTR es:[edi]
  414154:	in     al,0xb9
  414156:	pop    eax
  414157:	xchg   DWORD PTR [ebx+0x1d],ebp
  41415a:	adc    BYTE PTR [ebp+0x37],bl
  41415d:	arpl   WORD PTR [edx],bp
  41415f:	scas   eax,DWORD PTR es:[edi]
  414160:	rol    BYTE PTR [bx+di+0x6d],1
  414164:	fisub  DWORD PTR [ebp+0x28]
  414167:	loopne 0x414152
  414169:	mov    dh,0xa4
  41416b:	inc    ebp
  41416c:	retf   
  41416d:	call   FWORD PTR es:[edi]
  414170:	pushf  
  414171:	mov    ds:0x96415476,al
  414176:	jno    0x414105
  414178:	jb     0x4141cc
  41417a:	pop    ss
  41417b:	xchg   ebx,eax
  41417c:	stos   BYTE PTR es:[edi],al
  41417d:	push   edi
  41417e:	cdq    
  41417f:	cmp    DWORD PTR [edx-0x5f],0xffffffa1
  414183:	cdq    
  414184:	and    bl,BYTE PTR [ebx-0x57b14f89]
  41418a:	mov    bh,0xb
  41418c:	adc    bl,BYTE PTR [ebx-0x1dd20d40]
  414192:	mov    ecx,0xccca7918
  414197:	xlat   BYTE PTR ds:[ebx]
  414198:	cmp    DWORD PTR [esi-0x72],edi
  41419b:	xchg   ebx,eax
  41419c:	std    
  41419d:	xor    bl,cl
  41419f:	hlt    
  4141a0:	dec    eax
  4141a1:	add    al,0xd8
  4141a3:	push   esi
  4141a4:	mov    ds:0xe52030ca,al
  4141a9:	inc    edx
  4141aa:	jl     0x4141f8
  4141ac:	xchg   esp,eax
  4141ad:	and    BYTE PTR [eax+0x2f],ah
  4141b0:	lods   al,BYTE PTR ds:[esi]
  4141b1:	push   ss
  4141b2:	inc    eax
  4141b3:	adc    BYTE PTR [ebx+0x34ec89a3],dh
  4141b9:	push   0x1e
  4141bb:	lock and eax,edx
  4141be:	dec    eax
  4141bf:	cdq    
  4141c0:	je     0x41415c
  4141c2:	and    edi,DWORD PTR [ebx-0x625a3e02]
  4141c8:	xchg   DWORD PTR [esi-0x1ebbbc49],ebp
  4141ce:	xchg   ebx,eax
  4141cf:	or     cl,al
  4141d1:	add    al,0xc7
  4141d3:	xchg   ecx,eax
  4141d4:	clc    
  4141d5:	test   BYTE PTR [eax-0x227f5a7f],ah
  4141db:	inc    edi
  4141dc:	(bad)  
  4141dd:	aaa    
  4141de:	shl    ch,0x98
  4141e1:	lds    ebp,FWORD PTR [ebp-0x6c]
  4141e4:	shr    BYTE PTR [eax],cl
  4141e6:	sbb    DWORD PTR [ebp-0x39],esi
  4141e9:	jns    0x4141c0
  4141eb:	jp     0x4141f3
  4141ed:	jne    0x414228
  4141ef:	mov    ch,0xa4
  4141f1:	sub    bh,bh
  4141f3:	jmp    0x414193
  4141f5:	sbb    BYTE PTR ds:0xffd6e6e6,dl
  4141fb:	cmp    al,0x50
  4141fd:	mov    al,ds:0x234c2eae
  414202:	mov    ebp,0x95995239
  414207:	lea    ecx,[edi-0x3a7e5ce3]
  41420d:	fs inc esi
  41420f:	mov    edi,0xf6071ddb
  414214:	pop    esi
  414215:	sbb    eax,0x23ec1b84
  41421a:	inc    esi
  41421b:	ins    BYTE PTR es:[edi],dx
  41421c:	adc    eax,0x2dfb89e1
  414221:	xlat   BYTE PTR ds:[ebx]
  414222:	mov    ds:0xc803a9bb,al
  414227:	sub    dh,BYTE PTR [edi-0x5af20429]
  41422d:	xor    ebp,DWORD PTR [ecx]
  41422f:	mov    ebx,0xdbf99e1d
  414234:	nop
  414235:	nop
  414236:	sub    eax,0x3883a548
  41423b:	or     edx,DWORD PTR [edx+0x6a8ff7d]
  414241:	mov    eax,0xad34a698
  414246:	mov    ds:0xe3433284,eax
  41424b:	mov    DWORD PTR gs:[ebx],esi
  41424e:	jle    0x414264
  414250:	ficom  WORD PTR [esi-0x6b3d000b]
  414256:	xor    cl,cl
  414258:	push   ss
  414259:	cli    
  41425a:	iret   
  41425b:	and    ch,dl
  41425d:	mov    dh,0x63
  41425f:	stos   DWORD PTR es:[edi],eax
  414260:	xor    al,0x6b
  414262:	jmp    DWORD PTR [edi+0x4a33465f]
  414268:	pop    eax
  414269:	sbb    DWORD PTR ds:0x4d0c82cc,edi
  41426f:	cmp    al,0xfc
  414271:	dec    esp
  414272:	inc    ebp
  414273:	fstp   TBYTE PTR es:[ecx-0x63c2b776]
  41427a:	add    ch,dl
  41427c:	cli    
  41427d:	dec    ecx
  41427e:	stc    
  41427f:	jmp    DWORD PTR [esi]
  414281:	adc    eax,edi
  414283:	outs   dx,BYTE PTR ds:[esi]
  414284:	(bad)  
  414285:	mov    ebx,0xc39dd11e
  41428a:	outs   dx,BYTE PTR ds:[esi]
  41428b:	push   ds
  41428c:	test   eax,0xda7933fa
  414291:	(bad)  
  414292:	dec    BYTE PTR [edx+0x77659da6]
  414298:	pcmpgtd mm7,QWORD PTR [ebx]
  41429b:	xchg   esp,eax
  41429c:	pop    edi
  41429d:	xchg   edx,eax
  41429e:	dec    esp
  41429f:	xchg   BYTE PTR [eax],dl
  4142a1:	cmc    
  4142a2:	jmp    0x83f4fba5
  4142a7:	pusha  
  4142a8:	jae    0x41428c
  4142aa:	cmp    bl,bl
  4142ac:	jle    0x4142ff
  4142ae:	sub    eax,0x21a0202e
  4142b3:	add    bh,BYTE PTR [eax]
  4142b5:	(bad)  ds:0x6a70033c
  4142bb:	out    dx,eax
  4142bc:	cli    
  4142bd:	cmp    bl,0xe8
  4142c0:	and    al,0x66
  4142c2:	inc    ebp
  4142c3:	std    
  4142c4:	pop    ebx
  4142c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c6:	cld    
  4142c7:	adc    esi,DWORD PTR [ebx+0x56c1a11a]
  4142cd:	dec    esp
  4142ce:	sbb    ah,dl
  4142d0:	inc    edi
  4142d1:	cmp    al,0x8e
  4142d4:	das    
  4142d5:	adc    DWORD PTR [eax-0xa],ecx
  4142d8:	and    ah,dl
  4142da:	push   ds
  4142db:	jmp    0x41434d
  4142dd:	aam    0xcc
  4142df:	je     0x4142fa
  4142e1:	loop   0x414333
  4142e3:	and    al,0x5c
  4142e5:	in     al,dx
  4142e6:	scas   eax,DWORD PTR es:[edi]
  4142e7:	add    al,0xaa
  4142e9:	adc    BYTE PTR ds:0xb64a12f6,dh
  4142ef:	push   0xc10fc086
  4142f4:	jge    0x4142fa
  4142f6:	ins    DWORD PTR es:[edi],dx
  4142f7:	jl     0x414371
  4142f9:	dec    eax
  4142fa:	in     al,0x5d
  4142fc:	mov    ch,0x8b
  4142fe:	push   edx
  4142ff:	sub    ebp,DWORD PTR [ebx+0x1103602]
  414305:	not    BYTE PTR [ebp-0x1e]
  414308:	lea    ebp,[ebx-0x5fa607b3]
  41430e:	cs stos DWORD PTR es:[edi],eax
  414310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414311:	cmp    al,0xd0
  414313:	xchg   esp,eax
  414314:	or     BYTE PTR [ebp-0x2a],dl
  414317:	cmp    DWORD PTR [esi-0x2e9567db],esp
  41431d:	into   
  41431e:	jmp    0x5837:0xa4a7ebbd
  414325:	retf   0xf785
  414328:	mov    ds:0xe639e64d,eax
  41432d:	cmp    DWORD PTR [edx],edx
  41432f:	mov    eax,0xca216c1c
  414334:	xchg   bh,bh
  414336:	fdivr  DWORD PTR [ecx+0x6b]
  414339:	aam    0x47
  41433b:	(bad)  
  41433c:	mov    esi,0x978c924a
  414341:	push   0x35
  414343:	dec    edx
  414344:	aam    0x9
  414346:	dec    ebx
  414347:	mov    edx,0x8f3a6840
  41434c:	jae    0x4143cd
  41434e:	xchg   esi,eax
  41434f:	(bad)  
  414350:	outs   dx,DWORD PTR ds:[esi]
  414351:	aas    
  414352:	in     al,0xc9
  414354:	popa   
  414355:	inc    ebx
  414356:	lods   al,BYTE PTR ds:[esi]
  414357:	cmp    eax,0x71b8760
  41435c:	icebp  
  41435d:	adc    eax,0xaf57ad8f
  414362:	scas   al,BYTE PTR es:[edi]
  414363:	mov    esp,0x74fc901c
  414368:	jbe    0x414378
  41436a:	test   al,0x50
  41436c:	cmc    
  41436d:	mov    ds:0xa85ebb53,al
  414372:	dec    ebp
  414373:	pop    edi
  414374:	loopne 0x4143ca
  414376:	mov    ds:0xaa6f88c1,al
  41437b:	jbe    0x4143dc
  41437d:	das    
  41437e:	sub    dl,BYTE PTR [eax]
  414380:	pop    edi
  414381:	cmp    dl,dl
  414383:	mov    db5,edx
  414386:	mov    ecx,0xeba745ed
  41438b:	out    0xed,eax
  41438d:	and    DWORD PTR [ebp+0x248b864],eax
  414393:	js     0x4143fd
  414395:	aaa    
  414396:	out    dx,eax
  414397:	dec    ecx
  414398:	sbb    edi,esp
  41439a:	sub    esp,DWORD PTR [esi-0x4296ac40]
  4143a0:	test   edx,0xeedfd9b4
  4143a6:	std    
  4143a7:	ins    DWORD PTR es:[edi],dx
  4143a8:	repnz vprotb xmm9,xmm1,[ecx]
  4143ae:	or     DWORD PTR [ebp+0x6e],eax
  4143b1:	xchg   esi,eax
  4143b2:	int    0xb3
  4143b4:	mov    edi,0x67ad7fd5
  4143b9:	mov    ebx,0x824f84bd
  4143be:	lea    edx,[edi+0x669f6911]
  4143c4:	mov    bl,0xbf
  4143c6:	or     edi,DWORD PTR [edx]
  4143c8:	xchg   ebx,eax
  4143c9:	clc    
  4143ca:	fsubr  DWORD PTR [esp+ecx*1-0x7aaf5a21]
  4143d1:	imul   esp,DWORD PTR [eax+0x4e],0x8b545590
  4143d8:	adc    al,0x99
  4143da:	adc    BYTE PTR [ecx],bh
  4143dc:	(bad)  
  4143dd:	mov    dl,0x52
  4143df:	aad    0x4e
  4143e1:	fild   QWORD PTR [eax-0x173087f2]
  4143e7:	adc    DWORD PTR [esi],ebx
  4143e9:	popf   
  4143ea:	jecxz  0x41438b
  4143ec:	ins    DWORD PTR es:[edi],dx
  4143ed:	jg     0x414450
  4143ef:	leave  
  4143f0:	dec    eax
  4143f2:	outs   dx,BYTE PTR ds:[esi]
  4143f3:	add    DWORD PTR [edx],edi
  4143f5:	mov    dl,0x25
  4143f7:	jecxz  0x4143c4
  4143f9:	ins    BYTE PTR es:[edi],dx
  4143fa:	sbb    edx,DWORD PTR [ebp+0xa617580]
  414400:	cld    
  414401:	pop    ebx
  414402:	push   edx
  414403:	and    BYTE PTR ss:[edx+0x59],bh
  414407:	ret    
  414408:	hlt    
  414409:	push   ebp
  41440a:	in     eax,0x3
  41440c:	add    al,0x16
  41440e:	fistp  WORD PTR [eax+edx*1-0x38cb6893]
  414415:	xor    eax,0x17256d5e
  41441a:	pop    edi
  41441b:	or     DWORD PTR [eax+0x3727985],0x72
  414422:	scas   eax,DWORD PTR es:[edi]
  414423:	lods   eax,DWORD PTR ds:[esi]
  414424:	sbb    DWORD PTR [ebx-0x668de035],edi
  41442a:	sub    DWORD PTR [edi*8-0x43ba0707],edx
  414431:	jl     0x4143cc
  414433:	mov    dl,0x74
  414435:	xor    BYTE PTR [esi-0x72],ah
  414438:	bound  ebp,QWORD PTR [ebp+0x4a65e028]
  41443e:	stos   DWORD PTR es:[edi],eax
  41443f:	loopne 0x4143ec
  414441:	push   0xc7cdbc16
  414446:	pop    esp
  414447:	test   dh,dl
  414449:	ins    DWORD PTR es:[edi],dx
  41444a:	lods   al,BYTE PTR ds:[esi]
  41444b:	adc    bh,bl
  41444d:	or     edi,DWORD PTR [edi-0xafbed97]
  414453:	mov    ah,0x44
  414455:	fwait
  414456:	inc    eax
  414457:	and    bl,al
  414459:	mov    DWORD PTR [eax+0x6ade018f],ebp
  41445f:	mov    WORD PTR [esi],es
  414461:	pop    ebx
  414462:	sbb    eax,0x2ec0add6
  414467:	daa    
  414468:	pop    ebp
  414469:	push   0xffffffb1
  41446b:	push   eax
  41446c:	call   0x6ee5:0xf4471149
  414473:	fadd   st(2),st
  414475:	mov    edi,0x296d9b2d
  41447a:	leave  
  41447b:	(bad)  
  41447c:	int3   
  41447d:	icebp  
  41447e:	cmp    bl,BYTE PTR [ecx-0x501a3acc]
  414484:	ss ret 
  414486:	mov    esi,0x12b89e
  41448b:	out    0x2e,eax
  41448d:	mov    eax,ds:0x1c8452d3
  414492:	xchg   BYTE PTR [edi-0x60],dh
  414495:	xor    bh,BYTE PTR [ecx]
  414497:	mov    ?,WORD PTR [ebx-0x683bc96e]
  41449d:	xchg   edx,eax
  41449e:	bound  ecx,QWORD PTR [ecx+0xc]
  4144a1:	scas   eax,DWORD PTR es:[edi]
  4144a2:	xchg   BYTE PTR [ebx-0x2d],dh
  4144a5:	fist   DWORD PTR [ecx+ebx*8]
  4144a8:	ret    0x2a7f
  4144ab:	rcr    DWORD PTR [eax],1
  4144ad:	add    al,0xb7
  4144af:	bound  ebp,QWORD PTR [eax+0x7f]
  4144b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b4:	cmp    edi,DWORD PTR [ecx-0x28aebaf1]
  4144ba:	mov    al,0x15
  4144bc:	sbb    DWORD PTR [eax+0x2],esp
  4144bf:	jbe    0x4144ec
  4144c1:	inc    edi
  4144c2:	xchg   ebx,eax
  4144c3:	pop    ss
  4144c4:	add    edi,ebp
  4144c6:	ret    0x1e2c
  4144c9:	sar    BYTE PTR [esi+0xe22ebef],0x42
  4144d0:	mov    ch,0xac
  4144d2:	and    dl,dh
  4144d4:	stos   DWORD PTR es:[edi],eax
  4144d5:	add    eax,0xea02b975
  4144da:	bound  ecx,QWORD PTR [edx]
  4144dc:	mov    gs,WORD PTR [edi-0x6ada613]
  4144e2:	cmc    
  4144e3:	push   ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	inc    edx
  4144e6:	inc    ecx
  4144e7:	mov    ah,0x38
  4144e9:	bound  eax,QWORD PTR [esi]
  4144eb:	in     eax,0x24
  4144ed:	dec    eax
  4144ee:	popa   
  4144ef:	sti    
  4144f0:	mov    ecx,0x862a0fa8
  4144f5:	xor    eax,0x6afff00b
  4144fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fb:	sbb    bh,BYTE PTR ds:0xdeba9132
  414501:	lock ja 0x4144a4
  414504:	jmp    0x10c746f0
  414509:	sti    
  41450a:	add    BYTE PTR [eax],dh
  41450c:	mov    al,0x44
  41450e:	std    
  41450f:	test   eax,0xd2f82d0d
  414514:	adc    DWORD PTR [esi+esi*8],ebx
  414517:	ret    
  414518:	mov    al,0xa6
  41451a:	lahf   
  41451b:	(bad)  
  41451c:	adc    al,0x78
  41451e:	and    eax,0xab6e2fe2
  414523:	repnz inc eax
  414525:	dec    ebx
  414526:	rcr    BYTE PTR [esi-0x6a],0xd7
  41452a:	into   
  41452b:	lea    ecx,[ebx+0x26]
  41452e:	popa   
  41452f:	daa    
  414530:	aam    0x73
  414532:	test   al,0x44
  414534:	jo     0x41455f
  414536:	sbb    DWORD PTR [ebx+0x2fef43aa],esp
  41453c:	int    0xfd
  41453e:	inc    ebp
  414540:	sbb    BYTE PTR [edi+0x1a88516d],ch
  414546:	arpl   WORD PTR [eax-0x4b],cx
  414549:	xlat   BYTE PTR ds:[ebx]
  41454a:	sahf   
  41454b:	ins    DWORD PTR es:[edi],dx
  41454c:	dec    eax
  41454d:	push   esp
  41454e:	jmp    0x5ed:0x98a8dedd
  414555:	test   BYTE PTR [eax-0x37524eb7],bh
  41455b:	and    edi,ecx
  41455d:	xor    ebx,esi
  41455f:	pop    ds
  414560:	sbb    al,0xfc
  414562:	lds    esi,FWORD PTR [ecx+0x51]
  414565:	pusha  
  414566:	or     esp,DWORD PTR [ecx-0x4ace6892]
  41456c:	dec    edx
  41456d:	jge    0x41457c
  41456f:	fisubr WORD PTR [esi+0x5d]
  414572:	nop
  414573:	push   es
  414574:	adc    ebx,ebx
  414576:	sti    
  414577:	loop   0x414507
  414579:	sub    esp,DWORD PTR [esi+0x27]
  41457c:	call   0x4ae8:0xbc8b1a9c
  414583:	or     DWORD PTR [edx+0x7cdd4455],ebx
  414589:	jge    0x41451b
  41458b:	retf   0x3c22
  41458e:	add    esp,ecx
  414590:	test   BYTE PTR [ebp-0x25],dl
  414593:	imul   eax,DWORD PTR [esi+0x6e],0x18227256
  41459a:	rcl    BYTE PTR [edi+0x77],0x3c
  41459e:	retf   0x4dca
  4145a1:	xor    edx,0x99bdfc40
  4145a7:	mov    ebx,0x89718f3
  4145ac:	add    eax,0x5e84e803
  4145b1:	sub    eax,DWORD PTR [ecx]
  4145b3:	cmc    
  4145b4:	xor    al,0xd8
  4145b6:	dec    eax
  4145b7:	and    DWORD PTR [esi],edx
  4145b9:	dec    esi
  4145ba:	daa    
  4145bb:	js     0x41460e
  4145bd:	xor    eax,0xd64482d5
  4145c2:	pop    esi
  4145c3:	aad    0xfc
  4145c5:	inc    ebp
  4145c6:	(bad)  [edi+0x5c]
  4145c9:	shr    BYTE PTR [eax],cl
  4145cb:	mov    eax,DWORD PTR [eax+edx*1]
  4145ce:	add    ecx,DWORD PTR [ebx+0x1a]
  4145d1:	call   0x25b5:0x937101ba
  4145d8:	ja     0x414652
  4145da:	sub    eax,0x7b5a9c8a
  4145df:	inc    edi
  4145e0:	pop    eax
  4145e1:	and    BYTE PTR [ebp+0x3f],bh
  4145e4:	push   0x6f520a9e
  4145e9:	jns    0x4145fc
  4145eb:	adc    esp,ecx
  4145ed:	xor    DWORD PTR [edi-0x13],esp
  4145f0:	lea    esp,[ebx-0x6fcaa37]
  4145f6:	cwde   
  4145f7:	aaa    
  4145f8:	mov    esi,edi
  4145fa:	ror    ch,1
  4145fc:	gs pop ebp
  4145fe:	pushf  
  4145ff:	imul   esi,DWORD PTR [edi],0xffffffff
  414602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414603:	mov    eax,0x1653d217
  414608:	aas    
  414609:	sbb    al,0xa1
  41460b:	mov    edx,0x408c1a73
  414610:	outs   dx,BYTE PTR ds:[esi]
  414611:	sbb    ch,BYTE PTR [ebx+eax*2-0x32b2520b]
  414618:	sub    eax,0xb52199da
  41461d:	ds jbe 0x41462c
  414620:	outs   dx,BYTE PTR ds:[esi]
  414621:	fsubr  DWORD PTR [edi-0x388ebdf9]
  414627:	ja     0x41466e
  414629:	sti    
  41462a:	xor    DWORD PTR [edi-0x5ffe6d51],ebx
  414630:	xchg   ebp,eax
  414631:	adc    DWORD PTR [edx+0xdba63e0],ebp
  414637:	mov    dl,0x38
  414639:	inc    esi
  41463a:	dec    ebp
  41463b:	push   es
  41463c:	pop    esp
  41463d:	xor    dl,BYTE PTR [esi]
  41463f:	loop   0x414679
  414641:	pop    edi
  414642:	repnz dec ebp
  414644:	je     0x414682
  414646:	pop    esi
  414647:	out    dx,eax
  414648:	nop
  414649:	jle    0x414689
  41464b:	lods   al,BYTE PTR fs:[esi]
  41464d:	push   esi
  41464e:	aam    0x94
  414650:	aaa    
  414651:	mul    DWORD PTR [edi+0x40]
  414654:	fld    st(5)
  414656:	stos   BYTE PTR es:[edi],al
  414657:	div    DWORD PTR [ecx]
  414659:	out    dx,eax
  41465a:	std    
  41465b:	xchg   BYTE PTR ds:0x570efa5,bh
  414661:	pop    ebx
  414662:	loope  0x414635
  414664:	cwde   
  414665:	push   esi
  414666:	push   ebp
  414667:	rol    DWORD PTR [ecx-0x5712fdd6],0x8c
  41466e:	out    0xb3,al
  414670:	rcr    ch,0x48
  414673:	aam    0xac
  414675:	xchg   edi,eax
  414676:	adc    al,0xea
  414678:	int    0xb2
  41467a:	inc    ebx
  41467b:	shr    BYTE PTR [eax+0x2],0xd0
  41467f:	scas   eax,DWORD PTR es:[edi]
  414680:	and    DWORD PTR [edi+0x2d60e899],edx
  414686:	jbe    0x4146a0
  414688:	xchg   ebp,eax
  414689:	cli    
  41468a:	inc    esp
  41468b:	mov    ebp,DWORD PTR [edi+0x7b14bb45]
  414691:	(bad)  
  414692:	test   BYTE PTR [ebx+0xc],0xd9
  414696:	xor    DWORD PTR [edx+0x19],eax
  414699:	lods   eax,DWORD PTR ds:[esi]
  41469a:	outs   dx,BYTE PTR ds:[esi]
  41469b:	bound  edx,QWORD PTR [ebx]
  41469d:	mov    DWORD PTR [ebp+0x75],ebp
  4146a0:	js     0x414630
  4146a2:	mov    ch,0x7f
  4146a4:	push   cs
  4146a5:	test   bl,cl
  4146a7:	std    
  4146a8:	sti    
  4146a9:	(bad)  
  4146aa:	mov    esp,0x6edc23dd
  4146af:	mov    ebp,0x329a6f91
  4146b4:	shl    DWORD PTR [ebx+0x2ab922bf],cl
  4146ba:	jb     0x414708
  4146bc:	inc    ebx
  4146bd:	dec    esi
  4146be:	push   0xfffffff7
  4146c0:	sar    DWORD PTR [esp+edx*1-0x67413cf9],cl
  4146c7:	push   edi
  4146c8:	sub    DWORD PTR [ebx],0xffffffa9
  4146cb:	mov    bl,0xd8
  4146cd:	daa    
  4146ce:	jns    0x41467f
  4146d0:	div    BYTE PTR [ecx-0x554b5d8a]
  4146d6:	mov    ebp,0x730c7
  4146db:	cld    
  4146dc:	(bad)  
  4146dd:	in     eax,dx
  4146de:	push   ebx
  4146df:	sub    esi,esp
  4146e1:	or     eax,0x7883ea84
  4146e6:	retf   0xd525
  4146e9:	shl    BYTE PTR [ebx-0x65],cl
  4146ec:	mov    al,ds:0xdb9c6733
  4146f1:	(bad)
  4146f5:	rcl    BYTE PTR [ebp-0x79810469],1
  4146fb:	pop    eax
  4146fc:	and    al,0x10
  4146fe:	ins    BYTE PTR es:[edi],dx
  4146ff:	(bad)  
  414700:	jbe    0x414696
  414702:	lods   eax,DWORD PTR ds:[esi]
  414703:	mov    dl,0x8d
  414705:	adc    esi,DWORD PTR [ebx]
  414707:	scas   al,BYTE PTR es:[edi]
  414708:	aad    0xc8
  41470a:	mov    esp,0xee69c04c
  41470f:	mov    ch,0x5a
  414711:	xchg   BYTE PTR [edx-0x39],bh
  414714:	(bad)  
  414715:	aam    0xe0
  414717:	add    DWORD PTR [ecx],ecx
  414719:	xchg   esi,eax
  41471a:	ret    0x36f4
  41471d:	adc    dl,BYTE PTR [ebx]
  41471f:	sub    DWORD PTR [edx*2+0x17c08826],eax
  414726:	sbb    al,0x7f
  414728:	arpl   si,di
  41472a:	add    bl,ch
  41472c:	push   0xffffffd1
  41472e:	xor    eax,0x1c528f3e
  414733:	xchg   esi,eax
  414734:	add    dh,BYTE PTR [ebx]
  414736:	cmp    DWORD PTR [esp+eax*4+0x78],edi
  41473a:	add    al,0xd5
  41473c:	pushf  
  41473d:	ja     0x414791
  41473f:	jb     0x4146d9
  414741:	inc    ebp
  414742:	addr16 mov al,0x3a
  414745:	cmp    cl,dh
  414747:	push   ds
  414748:	or     al,0x57
  41474a:	push   cs
  41474b:	xchg   ecx,eax
  41474c:	push   ebx
  41474d:	fbld   TBYTE PTR [ebx-0x696a295a]
  414753:	jecxz  0x4146f1
  414755:	(bad)  
  414756:	mov    edi,0x8a66c9d0
  41475b:	mov    cl,0xf0
  41475d:	pop    edi
  41475e:	in     al,0xd5
  414760:	in     eax,0x8c
  414762:	out    dx,eax
  414763:	mov    BYTE PTR [ebp-0x1e],dh
  414766:	adc    BYTE PTR [esi+0x66],dh
  414769:	add    eax,0x7d1ba158
  41476e:	popf   
  41476f:	(bad)  
  414771:	std    
  414772:	shr    DWORD PTR [edi+0x3ebcda0d],0x76
  414779:	repnz mov ah,bh
  41477c:	rcl    BYTE PTR [ebx],0x41
  41477f:	test   al,0xc6
  414781:	jg     0x41478f
  414783:	std    
  414784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414785:	push   cs
  414786:	mov    al,ds:0xe800fb62
  41478b:	dec    edi
  41478c:	inc    eax
  41478d:	fisttp DWORD PTR [eax+0x40bfe622]
  414793:	outs   dx,DWORD PTR ds:[esi]
  414794:	mov    esi,0x587c653b
  414799:	pop    edx
  41479a:	out    0xc8,al
  41479c:	ss pop edi
  41479e:	cmp    dh,BYTE PTR [ebx-0x4f]
  4147a1:	jae    0x4147c3
  4147a3:	xchg   esi,eax
  4147a4:	ret    0x5ecb
  4147a7:	call   DWORD PTR [ebp+ebp*8+0x4e]
  4147ab:	adc    al,BYTE PTR [edx]
  4147ad:	xchg   esi,eax
  4147ae:	pop    ebx
  4147af:	(bad)
  4147b2:	test   DWORD PTR [ebx],0xdba46408
  4147b8:	ss xchg ebp,eax
  4147ba:	mov    edi,0xaba7e8eb
  4147bf:	(bad)  
  4147c0:	rol    BYTE PTR [eax],cl
  4147c2:	adc    eax,0x7228205e
  4147c7:	mov    ah,0x54
  4147c9:	mov    WORD PTR [esp+ecx*2],ds
  4147cc:	xor    ecx,DWORD PTR [edx-0x58]
  4147cf:	add    eax,0xc9943059
  4147d4:	sub    eax,0xcad0e0bc
  4147d9:	in     al,dx
  4147da:	popf   
  4147db:	pop    ecx
  4147dc:	jmp    0x7a77ee0
  4147e1:	jg     0x414807
  4147e3:	fisubr WORD PTR [edx]
  4147e5:	sbb    bh,bh
  4147e7:	jnp    0x4147f0
  4147e9:	mov    ah,0x6e
  4147eb:	jae    0x4147b6
  4147ed:	xchg   ecx,eax
  4147ee:	mov    ecx,0x22bc675e
  4147f3:	xor    al,BYTE PTR [esi+ebx*8+0x6830fce5]
  4147fa:	cdq    
  4147fb:	push   ecx
  4147fc:	mov    esp,0x9beda094
  414801:	mov    edi,esp
  414803:	cmp    al,0xcd
  414805:	add    BYTE PTR [edx+0xe89964b],ah
  41480b:	ja     0x4147a6
  41480d:	or     eax,0x754e6f62
  414812:	test   BYTE PTR [edx+eiz*1+0x3e],dh
  414816:	pop    edx
  414817:	jo     0x4147de
  414819:	shl    BYTE PTR [ebx+eiz*2-0x47850928],cl
  414820:	mov    esi,0xdaf34e84
  414825:	fisub  DWORD PTR [ecx]
  414827:	jbe    0x414824
  414829:	les    eax,FWORD PTR [ebp+0x335cf562]
  41482f:	mov    al,ds:0xe62e9ba2
  414834:	leave  
  414835:	hlt    
  414836:	gs adc eax,0xacb7fa34
  41483c:	dec    ebx
  41483d:	adc    eax,0x42ece854
  414842:	push   esp
  414843:	jle    0x414862
  414845:	xchg   esp,eax
  414846:	xchg   esi,eax
  414847:	and    ebp,edx
  414849:	ficom  WORD PTR [edx+0x64]
  41484c:	outs   dx,BYTE PTR ds:[esi]
  41484d:	inc    ebp
  41484e:	or     eax,0x6c4850aa
  414853:	call   0xb630c7d7
  414858:	pop    ss
  414859:	inc    esi
  41485a:	aam    0x93
  41485c:	push   edx
  41485d:	in     eax,dx
  41485e:	xchg   ebx,eax
  41485f:	nop
  414860:	repnz jecxz 0x4148c0
  414863:	mov    eax,0x179dd20c
  414868:	adc    edi,DWORD PTR [ebp-0x69]
  41486b:	sar    DWORD PTR [edx+0x17],1
  41486e:	aam    0xf2
  414870:	xchg   ebp,eax
  414871:	mov    ds:0xd598c50,al
  414876:	add    DWORD PTR [ebp-0x2c],0xece43bd4
  41487d:	mov    ds:0xe577b4d,al
  414882:	jl     0x414822
  414884:	dec    esi
  414885:	pop    es
  414886:	jbe    0x414845
  414888:	lahf   
  414889:	clc    
  41488a:	or     ebx,DWORD PTR [ebp-0x76]
  41488d:	aad    0xe6
  41488f:	pop    edi
  414890:	sub    edx,edx
  414892:	or     eax,0x493d4721
  414897:	xor    DWORD PTR [ebx+esi*1+0x75],0xd8962484
  41489f:	sub    al,0xdd
  4148a1:	xor    BYTE PTR [eax-0x79],cl
  4148a4:	mov    esp,0xb41a4764
  4148a9:	adc    BYTE PTR [ebx-0x33],al
  4148ac:	or     eax,0x665af731
  4148b1:	stos   DWORD PTR es:[edi],eax
  4148b2:	leave  
  4148b3:	pop    esi
  4148b4:	mov    ah,0xdb
  4148b6:	adc    eax,0x9830cbe9
  4148bb:	loop   0x414899
  4148bd:	cmp    eax,0x460c954b
  4148c2:	icebp  
  4148c3:	xchg   esi,eax
  4148c4:	and    esp,0x1e
  4148c7:	push   ss
  4148c8:	lds    eax,FWORD PTR [ebx]
  4148ca:	lock and al,0x26
  4148cd:	push   ds
  4148ce:	fdiv   st,st(7)
  4148d0:	(bad)  ss:[ecx]
  4148d3:	push   cs
  4148d4:	cmp    esp,DWORD PTR [ecx+0x29de9a5e]
  4148da:	xchg   ebx,eax
  4148db:	int    0x2d
  4148dd:	les    esp,FWORD PTR [esi-0x6c]
  4148e0:	xchg   edx,eax
  4148e1:	xchg   esp,eax
  4148e2:	mov    ah,BYTE PTR [eax-0x3d]
  4148e5:	xor    eax,0xbe7010c3
  4148ea:	add    DWORD PTR [ebx-0x68],ecx
  4148ed:	repz fadd QWORD PTR ss:[esi+0x1]
  4148f2:	sahf   
  4148f3:	addr16 loope 0x4148b8
  4148f6:	dec    DWORD PTR [ebp-0x36]
  4148f9:	jg     0x414880
  4148fb:	(bad)  
  4148fc:	cli    
  4148fd:	push   ebp
  4148fe:	or     ebp,edi
  414900:	xchg   edx,eax
  414901:	jne    0x41494f
  414903:	mov    ebx,0xb157a46
  414908:	in     eax,dx
  414909:	jns    0x4148af
  41490b:	mov    esp,0x11ea76cf
  414910:	sub    DWORD PTR [edx+0x1874c10],esp
  414916:	pop    ds
  414917:	imul   ebx,ecx,0xadf506de
  41491d:	sub    DWORD PTR [edi],esp
  41491f:	pop    edx
  414920:	xchg   esi,eax
  414921:	sbb    esp,edi
  414923:	pop    esi
  414924:	imul   ebx,DWORD PTR [esi+0x75],0xfffffff1
  414928:	repz (bad) 
  41492a:	icebp  
  41492b:	(bad)  
  41492c:	jle    0x4149a0
  41492e:	call   0xe29a5100
  414933:	dec    ecx
  414934:	fnstcw WORD PTR [edx-0x76]
  414937:	push   edi
  414938:	mov    ds:0x694e05f1,al
  41493d:	cmp    DWORD PTR [ebp-0x6a],esi
  414940:	sti    
  414941:	dec    esp
  414942:	xchg   edi,eax
  414943:	setns  BYTE PTR [eax-0x69c5902e]
  41494a:	and    BYTE PTR [eax-0x154cd88c],ah
  414950:	scas   al,BYTE PTR es:[edi]
  414951:	and    eax,0xf54202c8
  414956:	int3   
  414957:	mov    dl,0xa3
  414959:	jnp    0x4149c9
  41495b:	test   BYTE PTR [edx+eiz*4],bl
  41495e:	test   eax,0xdcc67e79
  414963:	sbb    DWORD PTR ds:0x71660f7d,edx
  414969:	add    DWORD PTR [ebp+0x6110ef95],ebx
  41496f:	dec    edi
  414970:	nop
  414971:	mov    cl,0xfe
  414973:	jle    0x414953
  414975:	in     al,dx
  414976:	pop    esi
  414977:	dec    esi
  414978:	push   ds
  414979:	mov    ebx,DWORD PTR [edi-0x20d5fc6]
  41497f:	repnz xor dl,0x41
  414983:	(bad)  
  414985:	sar    DWORD PTR [edx],1
  414987:	loope  0x41498d
  414989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498a:	mov    eax,ds:0xd5cdccb9
  41498f:	pop    ss
  414990:	push   es
  414991:	xchg   DWORD PTR [edx+ecx*8],eax
  414994:	jl     0x41497a
  414996:	xor    DWORD PTR [esi-0x6f],0xa50ba366
  41499d:	or     edi,eax
  41499f:	and    al,0xa7
  4149a1:	pop    edi
  4149a2:	int3   
  4149a3:	cmc    
  4149a4:	xor    DWORD PTR [ebp+0x1f],eax
  4149a7:	in     al,0xb2
  4149a9:	rcl    DWORD PTR [edx+0x205aeb47],cl
  4149af:	ds mov cl,0x69
  4149b2:	pop    esi
  4149b3:	xlat   BYTE PTR ds:[ebx]
  4149b4:	cld    
  4149b5:	xor    al,0x10
  4149b7:	jmp    0x2e5a4136
  4149bc:	ins    BYTE PTR es:[edi],dx
  4149bd:	pusha  
  4149be:	adc    bh,bl
  4149c0:	dec    ecx
  4149c1:	mov    ah,0xc9
  4149c3:	hlt    
  4149c4:	mov    WORD PTR [eax+edi*2+0x75bbab08],ss
  4149cb:	les    esp,FWORD PTR [si+0x52]
  4149cf:	mov    edx,DWORD PTR [ebp+0x13]
  4149d2:	add    dl,dh
  4149d4:	in     eax,0xd9
  4149d6:	div    DWORD PTR [edi]
  4149d8:	clc    
  4149d9:	adc    al,0x68
  4149db:	int    0x6
  4149dd:	sub    al,0x3b
  4149df:	cld    
  4149e0:	or     bl,0x36
  4149e3:	(bad)  
  4149e4:	mov    edx,0x68cc479c
  4149e9:	jp     0x414a35
  4149eb:	sbb    ebx,DWORD PTR [eax+eiz*4]
  4149ee:	sub    eax,0x597d2f70
  4149f3:	xchg   ebx,eax
  4149f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f5:	test   edx,eax
  4149f7:	mov    edi,0x3ee62be1
  4149fc:	adc    al,0x91
  4149fe:	les    ebp,FWORD PTR [edi-0x15c146f1]
  414a04:	fdiv   QWORD PTR [esi+0x26fceceb]
  414a0a:	ja     0x4149e8
  414a0c:	hlt    
  414a0d:	int    0x73
  414a0f:	pop    ds
  414a10:	mov    eax,0x3f4c6c21
  414a15:	add    BYTE PTR [ebx],0x9c
  414a18:	mov    al,0x3e
  414a1a:	jl     0x4149ec
  414a1c:	add    eax,0xe0f9d10d
  414a21:	mov    edx,edx
  414a23:	jge    0x414a10
  414a25:	ret    
  414a26:	or     al,0x59
  414a28:	int    0xd2
  414a2a:	and    bh,ah
  414a2c:	mov    dh,al
  414a2e:	mov    eax,0x15207d01
  414a33:	xor    ch,cl
  414a35:	dec    BYTE PTR [ebp+0x4d]
  414a38:	(bad)  
  414a39:	xor    al,0x57
  414a3b:	xchg   ebp,eax
  414a3c:	in     al,dx
  414a3d:	mov    WORD PTR [ebp-0x31800610],cs
  414a43:	cmp    al,0xc4
  414a45:	mov    cs,WORD PTR [ebp+0x7f9cc329]
  414a4b:	pushfw 
  414a4d:	push   esi
  414a4e:	mov    dh,0xf7
  414a50:	dec    ecx
  414a51:	out    dx,al
  414a52:	jbe    0x414a57
  414a54:	icebp  
  414a55:	lea    edx,[ecx-0x7b]
  414a58:	and    eax,0xce4853f7
  414a5d:	or     DWORD PTR [edx+0xfbdb207],edi
  414a63:	test   BYTE PTR [ebx+0x1b],al
  414a66:	mov    ch,0x61
  414a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a69:	sbb    BYTE PTR [eax],bh
  414a6b:	sub    BYTE PTR [edx-0x2c7742d5],bl
  414a71:	cs mov edx,0xd2e2c317
  414a77:	sbb    al,0x46
  414a79:	mov    cl,0xb6
  414a7b:	inc    ebp
  414a7c:	out    dx,eax
  414a7d:	dec    esp
  414a7e:	sub    ah,BYTE PTR [ebx+0x1f7e184f]
  414a84:	mov    DWORD PTR [ebx+0x5d528ff0],ecx
  414a8a:	xchg   ebp,eax
  414a8b:	mov    ds:0x81ad3bee,eax
  414a90:	push   eax
  414a91:	test   DWORD PTR [edi+0x64],eax
  414a94:	pop    ds
  414a95:	and    al,0x15
  414a97:	ret    0xaa91
  414a9a:	(bad)
  414a9d:	rol    DWORD PTR [ebp+0x4e03b124],1
  414aa3:	inc    edx
  414aa4:	mov    edx,0x90eb9f99
  414aa9:	xchg   ebx,eax
  414aaa:	push   ds
  414aab:	shr    DWORD PTR [edi+0x12],0xe6
  414aaf:	cmp    ah,BYTE PTR [esp+ebp*8+0x47]
  414ab3:	lock adc DWORD PTR [esi+edi*8],esp
  414ab7:	shl    BYTE PTR ds:0x4bcba3bb,1
  414abd:	int    0x56
  414abf:	jl     0x414a7a
  414ac1:	pop    ebx
  414ac2:	lea    esp,[ebp-0x972309a]
  414ac8:	sahf   
  414ac9:	(bad)  
  414acb:	push   edx
  414acc:	xchg   BYTE PTR [ebx],ch
  414ace:	inc    ebp
  414acf:	test   BYTE PTR [edi+0x15],dh
  414ad2:	sbb    ecx,eax
  414ad4:	cld    
  414ad5:	cli    
  414ad6:	adc    ch,BYTE PTR [esi+0x6f]
  414ad9:	sbb    dl,cl
  414adb:	adc    eax,DWORD PTR [eax+0x50]
  414ade:	gs push ds
  414ae0:	mov    ebp,0xbbc4809b
  414ae5:	ret    
  414ae6:	or     DWORD PTR [esi],esi
  414ae8:	add    DWORD PTR [edx-0x75],eax
  414aeb:	inc    edx
  414aec:	fdivp  st(7),st
  414aee:	mov    ah,0xc4
  414af0:	sbb    BYTE PTR [ecx+0x5a],bh
  414af3:	int    0x31
  414af5:	inc    eax
  414af6:	jbe    0x414b6f
  414af8:	xchg   ebx,eax
  414af9:	scas   eax,DWORD PTR es:[edi]
  414afa:	ins    DWORD PTR es:[edi],dx
  414afb:	je     0x414b49
  414afd:	inc    ecx
  414afe:	loopne 0x414aca
  414b00:	cli    
  414b01:	push   edi
  414b02:	sbb    eax,edx
  414b04:	xor    cl,BYTE PTR [eax]
  414b06:	das    
  414b07:	xor    eax,0xb9cdb27f
  414b0c:	into   
  414b0d:	xor    DWORD PTR [ecx],esi
  414b0f:	pop    edi
  414b10:	pop    ds
  414b11:	push   cs
  414b12:	xchg   esp,eax
  414b13:	sub    BYTE PTR [edi+ebx*2+0x12],ch
  414b17:	les    edx,FWORD PTR [ecx+esi*8]
  414b1a:	mov    edi,0x3d98cdb8
  414b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b20:	push   esi
  414b21:	push   esp
  414b22:	or     al,BYTE PTR [eax+0x10fa3f2d]
  414b28:	adc    DWORD PTR [edx+eax*4+0x1a],ebp
  414b2c:	imul   esi,DWORD PTR [edi-0x4d],0x3bf6215b
  414b33:	xchg   DWORD PTR [ebp+0x5a],ecx
  414b36:	cmp    dl,ah
  414b38:	pop    ss
  414b39:	jmp    0x1138:0x61c9b016
  414b40:	ss mov ch,bh
  414b43:	or     cl,dl
  414b45:	mov    BYTE PTR [esi+0x3f],bh
  414b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b49:	push   0x7f
  414b4b:	jecxz  0x414b3b
  414b4d:	dec    edi
  414b4e:	push   eax
  414b4f:	inc    eax
  414b50:	xor    DWORD PTR [ebp-0x11dc111a],ecx
  414b56:	and    esp,edi
  414b58:	sbb    BYTE PTR [esi-0x3a],0x34
  414b5c:	cli    
  414b5d:	sub    DWORD PTR [edi],esi
  414b5f:	popa   
  414b60:	fisttp QWORD PTR [ebx]
  414b62:	enter  0x903e,0x2d
  414b66:	repnz inc eax
  414b68:	cwde   
  414b69:	add    DWORD PTR [eax-0x69],edi
  414b6c:	jge    0x414b9a
  414b6e:	mov    ebx,0xb3dcf97d
  414b73:	mov    ah,0xcf
  414b75:	xchg   ebx,eax
  414b76:	and    eax,DWORD PTR [edx-0x48113d9a]
  414b7c:	push   0xffffff9a
  414b7e:	and    bl,BYTE PTR [eax+eax*1]
  414b81:	cmp    al,0xc6
  414b83:	mov    cs,WORD PTR [edx+0x2a]
  414b86:	mov    ebx,0x5b7f0a8b
  414b8b:	mov    edi,0x24d4145c
  414b90:	in     eax,dx
  414b91:	sbb    al,BYTE PTR [esi+0x5f]
  414b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b95:	(bad)  
  414b96:	mov    edx,0x992d5885
  414b9b:	test   bh,ah
  414b9d:	xor    esi,eax
  414b9f:	xchg   DWORD PTR [edi-0x44],ebx
  414ba2:	jo     0x414bad
  414ba4:	das    
  414ba5:	mov    bh,BYTE PTR [ecx-0xa]
  414ba8:	pop    ebp
  414ba9:	aad    0x46
  414bab:	mov    WORD PTR [edi+0x22],es
  414bae:	mov    bh,0xc5
  414bb0:	fwait
  414bb1:	inc    ebp
  414bb2:	xor    bl,al
  414bb4:	imul   BYTE PTR gs:[ebx]
  414bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb8:	sbb    al,0xf6
  414bba:	xor    al,0x3b
  414bbc:	cmc    
  414bbd:	or     edi,DWORD PTR [edi-0x7c9c6250]
  414bc3:	int    0x3
  414bc5:	cmp    eax,0xe57a6ec4
  414bca:	mov    es,WORD PTR [eax]
  414bcc:	shl    esp,0x7b
  414bcf:	imul   edx,DWORD PTR [ebp+0x48eced19],0x56
  414bd6:	es out dx,al
  414bd8:	aaa    
  414bd9:	fwait
  414bda:	push   ds
  414bdb:	sbb    al,BYTE PTR [ecx]
  414bdd:	jg     0x414ba1
  414bdf:	enter  0xd901,0x7b
  414be3:	dec    ebx
  414be4:	mov    esi,0xed14cc72
  414be9:	cmc    
  414bea:	jne    0x414c25
  414bec:	ins    DWORD PTR es:[edi],dx
  414bed:	push   0x3f
  414bef:	and    ch,bh
  414bf1:	mov    bl,0x1d
  414bf3:	dec    edi
  414bf4:	adc    eax,0x48852915
  414bf9:	es test al,0xfc
  414bfc:	arpl   WORD PTR [esi+0x33a13414],bp
  414c02:	aad    0xcf
  414c04:	aas    
  414c05:	repnz test BYTE PTR [edi],ch
  414c08:	jo     0x414b8a
  414c0a:	mov    ss,WORD PTR [ecx]
  414c0c:	adc    esp,DWORD PTR [eax+0x62]
  414c0f:	test   BYTE PTR [edx],bl
  414c11:	pop    ss
  414c12:	dec    edi
  414c13:	hlt    
  414c14:	cmp    edx,ecx
  414c16:	mov    edi,0x17117dc8
  414c1b:	fs pop edx
  414c1d:	sbb    al,0x9f
  414c1f:	bound  edx,QWORD PTR [esi-0x76c621bd]
  414c25:	pop    esp
  414c26:	or     ecx,DWORD PTR [ebp-0x12]
  414c29:	hlt    
  414c2a:	sbb    DWORD PTR [esi],edx
  414c2c:	sar    DWORD PTR [ebx+0xb8182fe],1
  414c32:	xor    BYTE PTR [ebp-0x2f],al
  414c35:	stc    
  414c36:	fstp   QWORD PTR [esi+0xdfa8a48]
  414c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c3d:	and    al,0x87
  414c3f:	nop
  414c40:	in     eax,0xb0
  414c42:	fistp  DWORD PTR [ebp-0xc3c4a84]
  414c48:	push   esp
  414c49:	clc    
  414c4a:	jno    0x414cc8
  414c4c:	pop    esi
  414c4d:	(bad)  
  414c4e:	(bad)  
  414c4f:	loopne 0x414cc7
  414c51:	loopne 0x414c35
  414c53:	test   BYTE PTR [esi+esi*1-0x64],al
  414c57:	cmp    BYTE PTR ds:[ebx],dl
  414c5a:	xor    dl,bl
  414c5c:	and    eax,0x929d27dd
  414c61:	xor    BYTE PTR [eax-0x51ae3533],cl
  414c67:	xchg   ecx,eax
  414c68:	add    DWORD PTR [esi],ecx
  414c6a:	and    DWORD PTR ss:[edi-0x184ff7d9],0x1
  414c72:	push   es
  414c73:	frstor [esi-0x62c1c7fc]
  414c79:	idiv   BYTE PTR [edi+eiz*1-0x45]
  414c7d:	sub    ecx,esp
  414c7f:	inc    esp
  414c80:	cmp    BYTE PTR [edx],bl
  414c82:	jle    0x414ca1
  414c84:	fmul   DWORD PTR [ebp-0x3a]
  414c87:	jl     0x414ca4
  414c89:	xor    DWORD PTR [edi-0x34],0x4
  414c8d:	mov    esp,0x5225f809
  414c92:	sti    
  414c93:	jmp    0xd39c715b
  414c98:	ins    BYTE PTR es:[edi],dx
  414c99:	add    al,0xf9
  414c9b:	lods   al,BYTE PTR ds:[esi]
  414c9c:	jbe    0x414c31
  414c9e:	test   eax,0x580b1ce4
  414ca3:	iret   
  414ca4:	inc    ebp
  414ca5:	out    0xd3,al
  414ca7:	push   eax
  414ca8:	int    0xb5
  414caa:	xor    al,0x70
  414cac:	and    DWORD PTR [esp+eax*4],ebp
  414caf:	cmp    BYTE PTR [edi],0xf0
  414cb2:	inc    edx
  414cb3:	imul   ebx,DWORD PTR [ebx-0x63],0xf
  414cb7:	out    0x96,eax
  414cb9:	xlat   BYTE PTR ds:[ebx]
  414cba:	push   0xffffff97
  414cbc:	popf   
  414cbd:	mov    ch,0xfd
  414cbf:	clc    
  414cc0:	jmp    0x414c4f
  414cc2:	cwde   
  414cc3:	ror    BYTE PTR [ebp+0x772aed6f],0xeb
  414cca:	adc    ecx,DWORD PTR [ebx]
  414ccc:	fs test eax,0xf6ebf3b6
  414cd2:	mov    ebx,0x574f77f0
  414cd7:	push   ebx
  414cd8:	aam    0x77
  414cda:	lods   eax,DWORD PTR ds:[esi]
  414cdb:	xchg   esp,eax
  414cdc:	mov    esi,0xeff57806
  414ce1:	dec    edi
  414ce2:	je     0x414cc4
  414ce4:	iret   
  414ce5:	pop    edx
  414ce6:	push   0xfffffffb
  414ce8:	shl    DWORD PTR [edi+0x1dabdc18],1
  414cee:	(bad)  
  414cf0:	fmulp  st(2),st
  414cf2:	fldenv [ecx+0x21f58ea3]
  414cf8:	inc    ebx
  414cf9:	test   al,0x9d
  414cfb:	cs fs dec edi
  414cfe:	cmp    ebp,esp
  414d00:	int    0xf9
  414d02:	lods   eax,DWORD PTR ds:[esi]
  414d03:	push   esi
  414d04:	push   cs
  414d05:	and    eax,0x7f6535db
  414d0a:	rol    edi,cl
  414d0c:	xchg   esp,eax
  414d0d:	and    eax,0x17c3e2da
  414d12:	test   DWORD PTR [edi+0x2f474c3d],edi
  414d18:	xor    al,0xe4
  414d1a:	pop    ebp
  414d1b:	cmp    al,0xdf
  414d1d:	push   DWORD PTR [eax+0x70]
  414d20:	cld    
  414d21:	sub    BYTE PTR [eax-0x4fe03e66],ch
  414d27:	cwde   
  414d28:	push   esi
  414d29:	addr16 (bad) 
  414d2b:	jae    0x414d4a
  414d2d:	shl    DWORD PTR [eax+0x14],0xd5
  414d31:	or     eax,esi
  414d33:	pop    esp
  414d34:	adc    edx,ebx
  414d36:	cmp    bl,dh
  414d38:	mov    cl,0x42
  414d3a:	xor    esi,ebp
  414d3c:	xchg   DWORD PTR [edi],esi
  414d3e:	or     dh,cl
  414d40:	dec    edi
  414d41:	jg     0x414da8
  414d43:	call   0xe87f:0x45660289
  414d4a:	pop    esi
  414d4b:	cmp    eax,0xfa017e85
  414d50:	xchg   esi,eax
  414d51:	adc    ah,dh
  414d53:	mov    edx,0xefd4c07a
  414d58:	sub    esi,DWORD PTR [eax]
  414d5a:	in     eax,0xcb
  414d5c:	mov    al,0xe3
  414d5e:	out    dx,al
  414d5f:	leave  
  414d60:	fstp   st(6)
  414d62:	pusha  
  414d63:	push   es
  414d64:	fcmovu st,st(2)
  414d66:	test   esp,eax
  414d68:	imul   ebp,DWORD PTR [ecx+ebp*2-0x62],0x44f38daa
  414d70:	xchg   ecx,eax
  414d71:	gs add dh,dl
  414d74:	ins    DWORD PTR es:[edi],dx
  414d75:	fdiv   st,st(0)
  414d77:	out    dx,eax
  414d78:	push   cs
  414d79:	or     dh,BYTE PTR [ecx]
  414d7b:	ins    BYTE PTR es:[edi],dx
  414d7c:	jne    0x414dd2
  414d7e:	loop   0x414df5
  414d80:	lods   al,BYTE PTR ds:[esi]
  414d81:	xchg   edi,eax
  414d82:	pop    es
  414d83:	test   BYTE PTR [esi],ch
  414d85:	retf   0xed06
  414d88:	dec    edx
  414d89:	xchg   edx,eax
  414d8a:	hlt    
  414d8b:	popa   
  414d8c:	push   ds
  414d8d:	mov    cs,WORD PTR [edi]
  414d8f:	push   ds
  414d90:	inc    esi
  414d91:	mov    eax,0xbd85f433
  414d96:	dec    eax
  414d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d98:	mov    ?,WORD PTR [edi-0x7518ac77]
  414d9e:	ds adc dl,dh
  414da1:	sbb    cl,0xf
  414da4:	push   0xad9ac493
  414da9:	lds    ecx,FWORD PTR [ecx+0x55]
  414dac:	ror    cl,cl
  414dae:	jnp    0x414e21
  414db0:	(bad)  
  414db1:	sbb    ebx,DWORD PTR [edx]
  414db3:	xchg   BYTE PTR [ecx],dl
  414db5:	ret    0x5218
  414db8:	popf   
  414db9:	hlt    
  414dba:	pop    ebx
  414dbb:	add    al,0xb7
  414dbd:	sti    
  414dbe:	lods   al,BYTE PTR ds:[esi]
  414dbf:	(bad)  
  414dc0:	lods   eax,DWORD PTR ds:[esi]
  414dc1:	push   ebp
  414dc2:	sbb    edx,DWORD PTR [edx]
  414dc4:	mov    ah,0x9f
  414dc6:	std    
  414dc7:	adc    BYTE PTR [edi-0x38],dl
  414dca:	test   eax,0xe90a9dea
  414dcf:	or     esp,eax
  414dd1:	jmp    0x414de3
  414dd3:	outs   dx,BYTE PTR ds:[esi]
  414dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd5:	xchg   ebx,eax
  414dd6:	sbb    al,0x7c
  414dd8:	fdivr  st,st(3)
  414dda:	lods   al,BYTE PTR ds:[esi]
  414ddb:	lods   al,BYTE PTR ds:[esi]
  414ddc:	fiadd  DWORD PTR [ecx]
  414dde:	inc    eax
  414ddf:	sti    
  414de0:	mov    ebp,0xc7c9b6df
  414de5:	fdivrp st(0),st
  414de7:	inc    edx
  414de8:	push   ds
  414de9:	adc    esp,DWORD PTR [ecx-0x25]
  414dec:	ins    DWORD PTR es:[edi],dx
  414ded:	jmp    0x5f2f:0xcafdfdb3
  414df4:	jg     0x414e11
  414df6:	ins    DWORD PTR es:[edi],dx
  414df7:	sbb    al,0x5
  414df9:	sahf   
  414dfa:	pop    edx
  414dfb:	scas   eax,DWORD PTR es:[edi]
  414dfc:	and    eax,0xe0bf7b36
  414e01:	adc    eax,0x3e1079
  414e06:	ins    BYTE PTR es:[edi],dx
  414e07:	idiv   DWORD PTR [esi-0x12]
  414e0a:	and    cl,BYTE PTR [edi]
  414e0c:	push   ebp
  414e0d:	test   BYTE PTR [ebx+ecx*8+0x4feff93e],dh
  414e14:	fwait
  414e15:	iret   
  414e16:	imul   eax,DWORD PTR [ebx],0xed8c42b5
  414e1c:	cld    
  414e1d:	or     esp,ecx
  414e1f:	jne    0x414e4f
  414e21:	test   eax,0x4f6760e8
  414e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e27:	in     al,dx
  414e28:	ins    BYTE PTR es:[edi],dx
  414e29:	xchg   esi,eax
  414e2a:	add    eax,0xbdf6f5b7
  414e2f:	aaa    
  414e30:	lods   eax,DWORD PTR ds:[esi]
  414e31:	inc    eax
  414e32:	daa    
  414e33:	imul   esi,DWORD PTR [ecx],0x15eefeb9
  414e39:	fld    TBYTE PTR [ebx]
  414e3b:	pop    ss
  414e3c:	in     al,0x11
  414e3e:	or     edi,DWORD PTR [eax-0x5e712bfc]
  414e44:	and    DWORD PTR [edi+0x3f2ea9e5],edx
  414e4a:	ficomp WORD PTR [ebp+ecx*8+0xd60961b]
  414e51:	or     ebp,DWORD PTR [ebx-0x6f3d0ca1]
  414e57:	push   edi
  414e58:	sub    al,0xb2
  414e5a:	clc    
  414e5b:	inc    esi
  414e5c:	jbe    0x414e82
  414e5e:	shr    cl,0xb2
  414e61:	cmp    ebx,0x70
  414e64:	jmp    0x3f43deb6
  414e69:	aaa    
  414e6a:	int    0x3c
  414e6c:	shl    DWORD PTR ds:0x93f17936,cl
  414e72:	ficom  DWORD PTR [eax-0x50]
  414e75:	jmp    0x414ee9
  414e77:	popf   
  414e78:	bound  eax,QWORD PTR [ecx+0x50f10627]
  414e7e:	mov    ebx,0x8524508
  414e83:	daa    
  414e84:	stc    
  414e85:	lods   eax,DWORD PTR ds:[esi]
  414e86:	jmp    0x7f2b:0x11195052
  414e8d:	sbb    eax,0x3ae3e408
  414e92:	push   ebp
  414e93:	dec    eax
  414e94:	ins    BYTE PTR es:[edi],dx
  414e95:	xchg   ebp,eax
  414e96:	outs   dx,BYTE PTR ds:[esi]
  414e97:	mov    ds:0x9026d59b,al
  414e9c:	xchg   eax,esi
  414e9e:	and    al,0x6c
  414ea0:	mov    WORD PTR [ebx-0x6f],?
  414ea3:	retf   
  414ea4:	es adc al,0x9e
  414ea7:	inc    ebp
  414ea8:	lods   eax,DWORD PTR ds:[esi]
  414ea9:	call   0xe4be:0x87a5afa0
  414eb0:	mov    ebp,DWORD PTR [edx+0x76]
  414eb3:	and    al,0xb7
  414eb5:	icebp  
  414eb6:	sub    dl,bl
  414eb8:	jmp    0x7fc5:0x621f473a
  414ebf:	mov    dl,0x57
  414ec1:	scas   eax,DWORD PTR es:[edi]
  414ec2:	shl    dh,0xfa
  414ec5:	sar    esp,1
  414ec7:	mov    ebp,0x37fff430
  414ecc:	ja     0x414ee1
  414ece:	xor    ecx,DWORD PTR [edi-0x49]
  414ed1:	fdivr  DWORD PTR [ecx-0x76247f1c]
  414ed7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414ed9:	add    BYTE PTR [ebp-0x5fa57a72],dh
  414edf:	mov    ds,WORD PTR ds:0x4fa4ec3a
  414ee5:	shr    eax,cl
  414ee7:	jmp    0x3609:0x9b35da86
  414eee:	xchg   esp,eax
  414eef:	imul   BYTE PTR [ebp-0x45]
  414ef2:	mov    edi,0xbf43fe9d
  414ef7:	lds    edi,FWORD PTR [ecx+0x3a]
  414efa:	sub    BYTE PTR [eax-0x47],ah
  414efd:	(bad)  
  414efe:	jae    0x414f03
  414f00:	push   ebp
  414f01:	idiv   BYTE PTR [ecx+0x8]
  414f04:	add    BYTE PTR [eax],al
  414f06:	das    
  414f07:	loopne 0x414e9f
  414f09:	jno    0x414f2b
  414f0b:	(bad)  
  414f0c:	lods   al,BYTE PTR ds:[esi]
  414f0d:	mov    al,ds:0x2f1cda4d
  414f12:	cli    
  414f13:	(bad)  
  414f14:	repnz xor DWORD PTR [ebx+0x1],eax
  414f18:	cmp    BYTE PTR [edi-0x673bc2cc],bh
  414f1e:	push   edi
  414f1f:	xchg   esp,eax
  414f20:	pop    ebx
  414f21:	pop    esp
  414f22:	data16 out dx,al
  414f24:	add    ebx,DWORD PTR [edi+ecx*4]
  414f27:	out    dx,eax
  414f28:	xor    esi,ecx
  414f2a:	repz cmp edx,DWORD PTR [esi+0x4b]
  414f2e:	push   eax
  414f2f:	mov    edx,0xc7206748
  414f34:	fidiv  WORD PTR [ebx]
  414f36:	setae  cl
  414f39:	test   eax,0xa0c66e7e
  414f3e:	arpl   WORD PTR [ebp-0x5e],dx
  414f41:	inc    eax
  414f42:	mov    esi,0xbaf480d3
  414f47:	xchg   ebp,eax
  414f48:	mov    ecx,0x467b0109
  414f4d:	pop    esi
  414f4e:	mov    dl,0x21
  414f50:	push   eax
  414f51:	scas   al,BYTE PTR es:[edi]
  414f52:	mov    bl,0xae
  414f54:	shl    BYTE PTR [esi],cl
  414f56:	push   es
  414f57:	sti    
  414f58:	cli    
  414f59:	leave  
  414f5a:	rol    BYTE PTR [ebx],1
  414f5c:	and    edi,esi
  414f5e:	xor    al,0x24
  414f60:	mov    ds:0x39913c33,al
  414f65:	xchg   ecx,eax
  414f66:	jbe    0x414faa
  414f68:	and    ch,ah
  414f6a:	or     al,0xdb
  414f6c:	dec    edx
  414f6d:	push   0x852aca04
  414f72:	clts   
  414f74:	das    
  414f75:	sub    eax,0x91d9eac8
  414f7a:	mov    gs,WORD PTR [ebx+0x36]
  414f7d:	nop
  414f7e:	mov    ds:0x96cb7efa,al
  414f83:	mov    cl,0x64
  414f85:	inc    ebx
  414f86:	lahf   
  414f87:	pop    eax
  414f88:	xchg   ebx,eax
  414f89:	push   esp
  414f8a:	bnd call 0x5653e9e8
  414f90:	repnz arpl WORD PTR [edx+0x5af9f247],sp
  414f97:	pop    esp
  414f98:	jmp    0x280e2bc
  414f9d:	(bad)  
  414f9e:	jecxz  0x414fc1
  414fa0:	add    al,0x64
  414fa2:	dec    esi
  414fa3:	pop    es
  414fa4:	shl    BYTE PTR [edx-0x3d],cl
  414fa7:	clc    
  414fa8:	or     dl,ah
  414faa:	imul   ebp,DWORD PTR [ecx-0x2b],0xa98e3fdd
  414fb1:	scas   eax,DWORD PTR es:[edi]
  414fb2:	push   0xffffffa2
  414fb4:	cmp    al,0x86
  414fb6:	pop    esi
  414fb7:	popf   
  414fb8:	dec    esi
  414fb9:	jne    0x414f3d
  414fbb:	fst    DWORD PTR [ebp-0x6512dc50]
  414fc1:	and    eax,0x541d5864
  414fc6:	test   bl,cl
  414fc8:	dec    ebp
  414fc9:	stos   BYTE PTR es:[edi],al
  414fca:	stc    
  414fcb:	(bad)  
  414fcd:	pop    ss
  414fce:	adc    al,0x6
  414fd1:	ret    
  414fd2:	sub    al,0x28
  414fd4:	mov    edi,0xe56d7c2b
  414fd9:	iret   
  414fda:	jo     0x414f68
  414fdc:	xchg   ebx,eax
  414fdd:	add    eax,0x38489c2c
  414fe2:	jae    0x414fdf
  414fe4:	aam    0x6e
  414fe6:	mov    dh,0x16
  414fe8:	add    eax,0x7a5213bf
  414fed:	mov    ebx,0x29d7a790
  414ff2:	imul   ebx,DWORD PTR [edi+0x254a8c30],0x6bd2b124
  414ffc:	popa   
  414ffd:	or     BYTE PTR ds:0x4f17231a,al
  415003:	inc    esi
  415004:	push   0x78ae6573
  415009:	sub    BYTE PTR [ecx],al
  41500b:	cmp    eax,0xd0cd637a
  415010:	pop    edx
  415011:	lods   al,BYTE PTR ds:[esi]
  415012:	dec    ebx
  415013:	sbb    esi,edx
  415015:	xlat   BYTE PTR ds:[ebx]
  415016:	fcom   DWORD PTR [edi-0x15]
  415019:	fucomip st,st(4)
  41501b:	pop    eax
  41501c:	sub    esi,edi
  41501e:	inc    esp
  41501f:	push   edi
  415020:	jmp    0xe8c9:0xfcba6e35
  415027:	cwde   
  415028:	(bad)  
  415029:	or     al,0x80
  41502b:	pop    ds
  41502c:	jae    0x41506b
  41502e:	sub    ch,cl
  415030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415031:	adc    eax,0xb376edf9
  415036:	or     edx,DWORD PTR [edx+0x783dd443]
  41503c:	jne    0x415031
  41503e:	mov    ecx,0x17b9a17c
  415043:	(bad)  
  415044:	and    al,0xcf
  415046:	xor    DWORD PTR [ebx+0x50d3c786],esp
  41504c:	dec    edi
  41504d:	push   0x3c4851e0
  415052:	mov    al,0x9e
  415054:	push   ds
  415055:	add    bl,BYTE PTR [ebx+0x0]
  415058:	ret    
  415059:	enter  0x5a3b,0x65
  41505d:	outs   dx,DWORD PTR ds:[esi]
  41505e:	xchg   edi,eax
  41505f:	sub    dh,BYTE PTR [edx+0x6cfd01ee]
  415065:	xor    BYTE PTR [esi],0xc4
  415068:	xlat   BYTE PTR ds:[ebx]
  415069:	in     al,dx
  41506a:	push   ebp
  41506b:	aam    0xf4
  41506d:	xchg   ebx,eax
  41506e:	mov    bl,0x5d
  415070:	loop   0x4150b2
  415072:	xor    esi,0xffffffac
  415075:	(bad)  
  415076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415077:	and    BYTE PTR ds:0xd4758969,cl
  41507d:	out    dx,eax
  41507e:	test   al,0x15
  415080:	stos   BYTE PTR es:[edi],al
  415081:	pop    ecx
  415082:	jecxz  0x415099
  415084:	or     BYTE PTR [esi+0x5bc641e6],ah
  41508a:	jns    0x4150ff
  41508c:	add    eax,0x55e673d
  415091:	adc    edi,DWORD PTR [ebx]
  415093:	sub    al,0x3
  415095:	fidiv  WORD PTR [eax]
  415097:	sahf   
  415098:	mov    cl,BYTE PTR [edx]
  41509a:	and    al,0x83
  41509c:	xor    al,0xaf
  41509e:	(bad)  [ebx+0x2]
  4150a1:	jecxz  0x41508c
  4150a3:	out    0xee,eax
  4150a5:	aad    0xf4
  4150a7:	jnp    0x41510b
  4150a9:	je     0x415101
  4150ab:	jle    0x415047
  4150ad:	push   ds
  4150ae:	xor    BYTE PTR [ebx],bh
  4150b0:	fmul   DWORD PTR [edi+0x6b6b9acd]
  4150b6:	imul   ecx,DWORD PTR [ebx+0x7d],0x76
  4150ba:	fwait
  4150bb:	pop    ecx
  4150bc:	push   0x1d
  4150be:	jbe    0x4150e7
  4150c0:	mov    al,0xed
  4150c2:	add    dh,dh
  4150c4:	mov    al,ch
  4150c6:	inc    esi
  4150c7:	fadd   st(4),st
  4150c9:	jns    0x41510e
  4150cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150cc:	sar    BYTE PTR [edx+0x3852f20],cl
  4150d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150d3:	shl    ah,0xa8
  4150d6:	inc    eax
  4150d7:	jg     0x4150b5
  4150d9:	pop    esi
  4150da:	xor    ecx,eax
  4150dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150dd:	mov    edi,0x1a3794ee
  4150e2:	mov    al,ds:0x2a85197c
  4150e7:	cmp    DWORD PTR [edx-0x5a6a9e85],edi
  4150ed:	xchg   ecx,edi
  4150ef:	cld    
  4150f0:	jle    0x415126
  4150f2:	inc    edx
  4150f3:	in     al,dx
  4150f4:	jo     0x41511c
  4150f6:	(bad)  
  4150f7:	mov    edx,0x43616475
  4150fc:	into   
  4150fd:	cwde   
  4150fe:	adc    eax,0xb8411f08
  415103:	jmp    0x4150ad
  415105:	cmp    eax,0xf351f2b
  41510a:	sahf   
  41510b:	mov    ebx,0x357803f3
  415110:	push   cs
  415111:	(bad)  
  415112:	or     al,0x3
  415114:	test   al,0x15
  415116:	fnstcw WORD PTR [ebx+0xa]
  415119:	fst    DWORD PTR [esi-0x678621a1]
  41511f:	push   edx
  415120:	fwait
  415121:	add    ebx,ebx
  415123:	push   ebx
  415124:	mov    dl,0x7b
  415126:	or     esi,DWORD PTR [edi]
  415128:	push   0xa5c5a6f4
  41512d:	repz les edx,FWORD PTR ds:[esi]
  415131:	shl    DWORD PTR [ebp+0xb9d2f45],cl
  415137:	clc    
  415138:	push   0x4
  41513a:	aad    0x57
  41513c:	cs adc edx,esi
  41513f:	loope  0x415169
  415141:	repz cdq 
  415143:	int    0x8e
  415145:	shr    DWORD PTR [edi],0x8a
  415148:	icebp  
  415149:	inc    edi
  41514a:	nop
  41514b:	scas   al,BYTE PTR es:[edi]
  41514c:	(bad)  
  41514d:	xor    al,0xd9
  41514f:	stos   BYTE PTR es:[edi],al
  415150:	ins    BYTE PTR es:[edi],dx
  415151:	mov    eax,0x6a39f5a7
  415156:	jns    0x415109
  415158:	fnstenv [ebx]
  41515a:	mov    eax,0x58954ddf
  41515f:	add    al,0x6c
  415161:	xchg   ecx,eax
  415162:	cwde   
  415163:	push   esi
  415164:	stc    
  415165:	inc    ecx
  415166:	icebp  
  415167:	push   esp
  415168:	adc    eax,0xb7ceb1ec
  41516d:	inc    edi
  41516e:	(bad)  
  41516f:	(bad)  
  415170:	cli    
  415171:	cwde   
  415172:	pop    ds
  415173:	and    ch,BYTE PTR [esi]
  415175:	loopne 0x415101
  415177:	arpl   WORD PTR [ebp-0x34],bx
  41517a:	mov    dl,0x59
  41517c:	and    DWORD PTR [edx-0x4d],edi
  41517f:	inc    ebp
  415180:	jmp    0x4151e2
  415182:	inc    edx
  415183:	test   eax,0x45ec5814
  415188:	dec    esi
  415189:	add    DWORD PTR [edi],edi
  41518b:	sahf   
  41518c:	fucom  st(3)
  41518e:	loope  0x41512e
  415190:	lahf   
  415191:	jecxz  0x41515f
  415193:	ins    BYTE PTR es:[edi],dx
  415194:	mov    bh,0x2e
  415196:	fucomp st(5)
  415198:	(bad)  
  41519a:	or     ecx,esi
  41519c:	xor    ebp,eax
  41519e:	mov    bh,0x4
  4151a0:	jbe    0x415147
  4151a2:	out    dx,al
  4151a3:	push   ebx
  4151a4:	test   eax,0x69966245
  4151a9:	inc    esp
  4151aa:	loope  0x415219
  4151ac:	add    bl,BYTE PTR [eax]
  4151ae:	sbb    esi,DWORD PTR [edx]
  4151b0:	js     0x4151de
  4151b2:	mov    eax,ds:0x830af42
  4151b7:	xchg   ebx,eax
  4151b8:	in     eax,dx
  4151b9:	sub    DWORD PTR [ecx-0x76],eax
  4151bc:	dec    edi
  4151bd:	sbb    DWORD PTR [ebx-0x11],eax
  4151c0:	retf   0x56c1
  4151c3:	neg    DWORD PTR [eax]
  4151c5:	scas   al,BYTE PTR es:[edi]
  4151c6:	inc    esp
  4151c7:	adc    esp,ebp
  4151c9:	cmp    al,0x2f
  4151cb:	push   esp
  4151cc:	inc    eax
  4151cd:	mov    esi,0x3fe7a7bd
  4151d2:	test   DWORD PTR [ecx+0x63978d26],ebp
  4151d8:	(bad)  
  4151d9:	scas   eax,DWORD PTR es:[edi]
  4151da:	push   ecx
  4151db:	lds    ebx,FWORD PTR [edi+0x32]
  4151de:	aad    0xd7
  4151e0:	sub    eax,DWORD PTR [ebx+0x53]
  4151e3:	rcr    BYTE PTR [ecx-0x58],0x1b
  4151e7:	pop    ebp
  4151e8:	sub    al,0xdb
  4151ea:	mov    bh,0x4b
  4151ec:	adc    eax,0x87ec3274
  4151f1:	les    eax,FWORD PTR [esi-0x7d]
  4151f4:	add    BYTE PTR [edx+0x3ccdc39],ah
  4151fa:	adc    BYTE PTR [esi-0x6e],bl
  4151fd:	cmc    
  4151fe:	push   cs
  4151ff:	mov    ecx,eax
  415201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415202:	add    BYTE PTR [ebp+0x462d2c4e],cl
  415208:	(bad)  
  415209:	xchg   esp,eax
  41520a:	in     al,0x24
  41520c:	mov    ecx,0xa655f1e0
  415211:	mov    esi,0x5943792f
  415216:	xchg   esi,eax
  415217:	mov    ah,0xd0
  415219:	je     0x4151f3
  41521b:	xchg   edi,eax
  41521c:	or     edx,ebp
  41521e:	cmp    dh,BYTE PTR [edx]
  415220:	sub    eax,0xa3002851
  415225:	imul   esp,DWORD PTR [edi-0x73d74662],0x2858ec23
  41522f:	loopne 0x415247
  415231:	lock shr DWORD PTR [edx-0x29],1
  415235:	rcl    BYTE PTR [ebp+0x16afd030],cl
  41523b:	xchg   DWORD PTR [si],edx
  41523e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41523f:	add    cl,BYTE PTR [edx-0x18d1c900]
  415245:	ret    0x1e6e
  415248:	sbb    eax,0x8304064f
  41524d:	add    ebx,DWORD PTR [ecx-0x4627950b]
  415253:	adc    ecx,DWORD PTR ds:0xbd68a7ac
  415259:	or     al,0x8f
  41525b:	clc    
  41525c:	adc    eax,DWORD PTR [ecx]
  41525e:	add    eax,0xa474354
  415263:	sti    
  415264:	mov    al,0x3b
  415266:	lds    ebx,FWORD PTR [ecx]
  415268:	repz adc eax,0x1060b21a
  41526e:	inc    ebx
  41526f:	xchg   esi,eax
  415270:	inc    ecx
  415271:	mov    edx,0x9e376a72
  415276:	iret   
  415277:	aam    0x29
  415279:	sbb    DWORD PTR [esi-0x27],esp
  41527c:	push   cs
  41527d:	cdq    
  41527e:	icebp  
  41527f:	mov    ecx,edx
  415281:	dec    esp
  415282:	add    DWORD PTR [ebp+0x3aa77ca6],ebx
  415288:	and    eax,0xcadf4e3
  41528d:	inc    edx
  41528e:	dec    esi
  41528f:	add    al,0xd
  415291:	icebp  
  415292:	adc    bh,BYTE PTR [eax]
  415294:	push   0x29a61157
  415299:	sbb    esp,0xffffffe0
  41529c:	lods   eax,DWORD PTR ds:[esi]
  41529d:	pop    ebx
  41529e:	outs   dx,BYTE PTR ds:[esi]
  41529f:	sbb    eax,0xd44a398e
  4152a4:	cmp    BYTE PTR [ebp-0x6f35e5dd],bh
  4152aa:	fsub   QWORD PTR [edx-0x7229170d]
  4152b0:	popa   
  4152b1:	punpcklbw mm6,DWORD PTR [ebp+0x393b1c07]
  4152b8:	cmp    ebx,DWORD PTR [ebp-0x51]
  4152bb:	fwait
  4152bc:	std    
  4152bd:	mov    dh,0xf6
  4152bf:	add    BYTE PTR [ecx],bl
  4152c1:	jns    0x41527d
  4152c3:	inc    esi
  4152c4:	test   al,0x90
  4152c6:	dec    esp
  4152c7:	test   ah,ch
  4152c9:	cmp    al,0xdc
  4152cb:	cdq    
  4152cc:	and    BYTE PTR [edx+0x27],0x11
  4152d0:	enter  0xf37c,0x9b
  4152d4:	(bad)  
  4152d5:	inc    BYTE PTR [eax-0x30e2ad3c]
  4152db:	and    dh,BYTE PTR [eax-0x42]
  4152de:	or     DWORD PTR [ebx+0x41],edi
  4152e1:	push   cs
  4152e2:	fistp  WORD PTR ds:0xe0e197bf
  4152e8:	or     DWORD PTR [edx+0x52],ebp
  4152eb:	and    al,0xdd
  4152ed:	adc    al,0xc8
  4152ef:	add    esp,ebp
  4152f1:	adc    DWORD PTR [eax+0x40],edx
  4152f4:	mov    al,ds:0x1caa4d0c
  4152f9:	mov    edi,DWORD PTR [edx-0x47]
  4152fc:	fldl2e 
  4152fe:	je     0x4152fe
  415300:	out    0xc9,al
  415302:	ins    BYTE PTR es:[edi],dx
  415303:	aad    0x38
  415305:	add    eax,0x3cecde10
  41530a:	shl    BYTE PTR [ecx+edi*2+0x295fe0d0],0x64
  415312:	push   cs
  415313:	sbb    al,BYTE PTR [eax]
  415315:	fstp   DWORD PTR [ebp+ecx*1-0x2686dd22]
  41531c:	scas   eax,DWORD PTR es:[edi]
  41531d:	out    0x70,eax
  41531f:	push   esp
  415320:	jge    0x415311
  415322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415323:	push   ebx
  415324:	adc    eax,0x6654837c
  415329:	xor    ebx,ebx
  41532b:	and    cl,BYTE PTR [edx-0x7a]
  41532e:	test   DWORD PTR [edx-0xe],esp
  415331:	fisubr DWORD PTR [ebp-0x5e]
  415334:	mov    eax,0x847f14c6
  415339:	cdq    
  41533a:	push   es
  41533b:	sub    esp,ecx
  41533d:	es mov bl,0x14
  415340:	retf   0xf653
  415343:	mov    ebp,DWORD PTR [ebx+ebx*8-0x40]
  415347:	stc    
  415348:	sti    
  415349:	dec    ebp
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0x251b86ae
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0xab452150
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	enter  0xf19d,0xd0
  41555c:	push   edx
  41555d:	jno    0x41556c
  41555f:	mov    ecx,0x95caff7d
  415564:	add    bh,BYTE PTR [edx-0x39]
  415567:	popa   
  415568:	push   0xb90d7151
  41556d:	jns    0x41556e
  41556f:	retf   0xfdd5
  415572:	test   edi,eax
  415574:	popa   
  415575:	rcl    BYTE PTR [ecx+0x71],1
  415578:	or     eax,0xcaff79b9
  41557d:	xchg   ebp,eax
  41557e:	std    
  41557f:	test   edi,eax
  415581:	popa   
  415582:	rcl    BYTE PTR [ecx+0x71],1
  415585:	or     eax,0xcaff79b9
  41558a:	xchg   ebp,eax
  41558b:	std    
  41558c:	test   edi,eax
  41558e:	popa   
  41558f:	rcl    BYTE PTR [ecx+0x71],1
  415592:	or     eax,0xcafe71b9
  415597:	xchg   ebp,eax
  415598:	repz call 0xc078:0xe5d06f7d
  4155a0:	cwde   
  4155a1:	sar    esi,0x86
  4155a4:	pop    eax
  4155a5:	(bad)  
  4155a7:	scas   eax,DWORD PTR es:[edi]
  4155a8:	or     BYTE PTR [ebx-0x2980fe8f],ah
  4155ae:	push   ds
  4155af:	lea    ebp,[ebx-0x59192208]
  4155b5:	movsx  edi,BYTE PTR [esi]
  4155b8:	add    eax,0xdf1cdb2d
  4155bd:	mov    eax,0xaea593e0
  4155c2:	(bad)  
  4155c4:	adc    eax,0x14995e3e
  4155c9:	nop
  4155ca:	scas   al,BYTE PTR es:[edi]
  4155cb:	lock ror DWORD PTR [eax+0x51f46bca],cl
  4155d2:	jno    0x4155e1
  4155d4:	mov    ecx,0xefcaff79
  4155d9:	xor    dl,BYTE PTR [ebx+0x297e5f49]
  4155df:	lods   al,BYTE PTR ds:[esi]
  4155e0:	xor    edx,DWORD PTR [edi]
  4155e2:	add    DWORD PTR [edx],esp
  4155e4:	hlt    
  4155e5:	cmp    eax,DWORD PTR [ebp+0x3652e258]
  4155eb:	mov    WORD PTR [ebx-0x5d],ss
  4155ee:	shl    DWORD PTR [edx+ebx*8+0x3a2047f9],0x69
  4155f6:	sbb    DWORD PTR ds:0x64de4274,ecx
  4155fc:	ins    BYTE PTR es:[edi],dx
  4155fd:	push   ecx
  4155fe:	mov    dl,0x48
  415600:	lods   al,BYTE PTR ds:[esi]
  415601:	pop    ebp
  415602:	adc    al,0xbc
  415604:	jmp    0x415605
  415606:	or     eax,edx
  415608:	mov    gs,WORD PTR [edi+0x53a21704]
  41560e:	std    
  41560f:	sbb    dl,BYTE PTR [esi+0x6]
  415612:	mov    edx,0x11728ac
  415617:	and    dh,ah
  415619:	cmp    eax,DWORD PTR [eax+ebx*2-0x73573172]
  415620:	mov    bl,0x83
  415622:	shl    DWORD PTR [edi+ecx*8-0x5fdf129c],cl
  415629:	hlt    
  41562a:	mov    dh,0xd
  41562c:	sub    bh,bl
  41562e:	jne    0x415694
  415630:	pop    esp
  415631:	int3   
  415632:	sub    BYTE PTR [eax-0x3e],cl
  415635:	sub    edi,DWORD PTR [edi-0x6b9d0a44]
  41563b:	rol    BYTE PTR [esi-0x38e87829],1
  415641:	xchg   esp,eax
  415642:	out    0xaf,al
  415644:	pop    edi
  415645:	jle    0x415670
  415647:	lods   al,BYTE PTR ds:[esi]
  415648:	or     eax,0xcaff79b9
  41564d:	xchg   ebp,eax
  41564e:	std    
  41564f:	test   edi,eax
  415651:	popa   
  415652:	rcl    BYTE PTR [ecx+0x71],1
  415655:	or     eax,0xcaff79b9
  41565a:	xchg   ebp,eax
  41565b:	std    
  41565c:	test   edi,eax
  41565e:	popa   
  41565f:	rol    BYTE PTR [ecx],1
  415661:	xor    al,0xd
  415663:	mov    ecx,0x95c9fe35
  415668:	fwait
  415669:	retf   
  41566a:	mov    ch,BYTE PTR [esi]
  41566c:	rcl    BYTE PTR [ecx+0x71],1
  41566f:	or     eax,0xcaff79b9
  415674:	jne    0x415673
  415676:	xchg   esi,eax
  415678:	push   0xffffffd1
  41567a:	pop    ebx
  41567b:	jno    0x41568a
  41567d:	pop    ebx
  41567e:	jge    0x41567f
  415680:	retf   0xfb11
  415683:	test   edi,eax
  415685:	popa   
  415686:	rcl    BYTE PTR [ecx+0x32],1
  415689:	mov    al,0xb9
  41568b:	jns    0x41568c
  41568d:	ficom  DWORD PTR [ebp+0x64c785fd]
  415693:	rcl    BYTE PTR [ecx+0x71],1
  415696:	dec    ebp
  415697:	mov    ecx,0x95caef79
  41569c:	std    
  41569d:	xchg   edi,eax
  41569f:	popa   
  4156a0:	aad    0x51
  4156a2:	jo     0x4156b1
  4156a4:	mov    ecx,0x90caff79
  4156a9:	std    
  4156aa:	test   bh,al
  4156ac:	popa   
  4156ad:	rcl    BYTE PTR [ecx+0x71],1
  4156b0:	or     eax,0xcaff7589
  4156b5:	xchg   ecx,eax
  4156b6:	std    
  4156b7:	test   ebp,ecx
  4156b9:	lahf   
  4156ba:	aam    0x51
  4156bc:	jae    0x4156cb
  4156be:	stc    
  4156bf:	clc    
  4156c0:	dec    edx
  4156c2:	test   ebp,edi
  4156c4:	test   edi,edx
  4156c6:	popa   
  4156c7:	rcl    BYTE PTR [ecx+0x71],1
  4156ca:	sbb    eax,0xcaef79b9
  4156cf:	xchg   ebp,eax
  4156d0:	std    
  4156d1:	test   edi,eax
  4156d3:	popa   
  4156d4:	rcl    BYTE PTR [ecx+0x71],0xd
  4156d8:	mov    ecx,0x95caff79
  4156dd:	std    
  4156de:	test   edi,eax
  4156e0:	rcr    BYTE PTR gs:[ebp+0x71],1
  4156e4:	push   esp
  4156e5:	mov    edx,0x55caff79
  4156ea:	test   BYTE PTR [ebp+0x51d05e92],0x71
  4156f1:	or     eax,0xcaff79b9
  4156f6:	xchg   ebp,eax
  4156f7:	std    
  4156f8:	test   edi,eax
  4156fa:	popa   
  4156fb:	rcl    BYTE PTR [ecx+0x71],1
  4156fe:	or     eax,0xc6df79b9
  415703:	xchg   ebp,eax
  415704:	in     eax,0x85
  415706:	(bad)  
  415707:	popa   
  415708:	rcl    BYTE PTR [ecx+0x71],1
  41570b:	or     eax,0xcaff79b9
  415710:	xchg   ebp,eax
  415711:	std    
  415712:	test   edi,eax
  415714:	popa   
  415715:	rcl    BYTE PTR [ecx+0x71],1
  415718:	or     eax,0xcaff79b9
  41571d:	xchg   ebp,eax
  41571e:	std    
  41571f:	test   edi,eax
  415721:	popa   
  415722:	rcl    BYTE PTR [ecx+0x71],1
  415725:	or     eax,0xcaff79b9
  41572a:	xchg   ebp,eax
  41572b:	std    
  41572c:	test   edi,eax
  41572e:	popa   
  41572f:	rcl    BYTE PTR [ecx+0x71],1
  415732:	or     eax,0xcaff79b9
  415737:	xchg   ebp,eax
  415738:	std    
  415739:	test   edi,eax
  41573b:	popa   
  41573c:	rcl    BYTE PTR [ecx+0x71],1
  41573f:	or     eax,0xcaff79b9
  415744:	xchg   ebp,eax
  415745:	std    
  415746:	test   edi,eax
  415748:	popa   
  415749:	rcl    BYTE PTR [ecx+0x71],1
  41574c:	or     eax,0xcaff79b9
  415751:	xchg   ebp,eax
  415752:	std    
  415753:	test   edi,eax
  415755:	popa   
  415756:	rcl    BYTE PTR [ecx+0x5f],1
  415759:	jns    0x415737
  41575b:	add    DWORD PTR [ebx-0x7a026a36],ecx
  415761:	ja     0x4157cd
  415763:	rcl    BYTE PTR [ecx+0x61],1
  415766:	or     eax,0xce9979b9
  41576b:	xchg   ebp,eax
  41576c:	std    
  41576d:	add    edi,0x32148061
  415773:	aas    
  415774:	in     eax,dx
  415775:	ss dec edx
  415778:	xchg   ebp,eax
  415779:	std    
  41577a:	test   edi,eax
  41577c:	inc    ecx
  41577d:	rcl    BYTE PTR [ecx-0x6f],1
  415780:	and    ecx,ebx
  415782:	or     cl,BYTE PTR [ebp-0x7a026a57]
  415788:	mov    DWORD PTR [ecx],0xcd7151d0
  41578e:	mov    dl,0x79
  415790:	call   FWORD PTR [eax-0x527a026b]
  415796:	rcl    BYTE PTR gs:[ecx+0x71],1
  41579a:	or     eax,0xcaff79b9
  41579f:	xchg   ebp,eax
  4157a0:	std    
  4157a1:	test   edi,eax
  4157a3:	popa   
  4157a4:	lock push ecx
  4157a6:	jno    0x415795
  4157a8:	xchg   edi,eax
  4157a9:	or     ebx,DWORD PTR [edx-0x7a61055a]
  4157af:	(bad)  
  4157b0:	popa   
  4157b1:	rcl    BYTE PTR [ecx+0x71],cl
  4157b4:	or     eax,0xcaff7599
  4157b9:	xchg   edi,eax
  4157ba:	std    
  4157bb:	test   edi,eax
  4157bd:	fst    st(4)
  4157bf:	push   ecx
  4157c0:	jno    0x4157cf
  4157c2:	mov    ecx,0x95caff79
  4157c7:	std    
  4157c8:	test   edi,eax
  4157ca:	popa   
  4157cb:	rcl    BYTE PTR [ecx],1
  4157cd:	jno    0x4157dc
  4157cf:	jns    0x41584a
  4157d1:	dec    edx
  4157d3:	xchg   ebp,eax
  4157d4:	std    
  4157d5:	test   edi,eax
  4157d7:	popa   
  4157d8:	rcl    BYTE PTR [ecx+0x71],1
  4157db:	or     eax,0xcaff79b9
  4157e0:	xchg   ebp,eax
  4157e1:	std    
  4157e2:	test   edi,eax
  4157e4:	popa   
  4157e5:	rcl    BYTE PTR [ecx+0x71],1
  4157e8:	or     eax,0xcaff79b9
  4157ed:	xchg   ebp,eax
  4157ee:	std    
  4157ef:	test   edi,eax
  4157f1:	popa   
  4157f2:	rcl    BYTE PTR [ecx+0x71],1
  4157f5:	or     eax,0xcaff79b9
  4157fa:	xchg   ebp,eax
  4157fb:	std    
  4157fc:	test   edi,eax
  4157fe:	popa   
  4157ff:	rcl    BYTE PTR [ecx+0x71],1
  415802:	or     eax,0xcaff79b9
  415807:	xchg   ebp,eax
  415808:	std    
  415809:	test   edi,eax
  41580b:	popa   
  41580c:	rcl    BYTE PTR [ecx+0x71],1
  41580f:	or     eax,0xcaff79b9
  415814:	xchg   ebp,eax
  415815:	std    
  415816:	test   edi,eax
  415818:	popa   
  415819:	rcl    BYTE PTR [ecx+0x71],1
  41581c:	or     eax,0xcaff79b9
  415821:	xchg   ebp,eax
  415822:	std    
  415823:	test   edi,eax
  415825:	popa   
  415826:	rcl    BYTE PTR [ecx+0x71],1
  415829:	or     eax,0xcaff79b9
  41582e:	xchg   ebp,eax
  41582f:	std    
  415830:	test   edi,eax
  415832:	popa   
  415833:	rcl    BYTE PTR [ecx+0x71],1
  415836:	or     eax,0xcaff79b9
  41583b:	xchg   ebp,eax
  41583c:	std    
  41583d:	test   edi,eax
  41583f:	popa   
  415840:	rcl    BYTE PTR [ecx+0x71],1
  415843:	or     eax,0xcaff79b9
  415848:	xchg   ebp,eax
  415849:	std    
  41584a:	test   edi,eax
  41584c:	popa   
  41584d:	rcl    BYTE PTR [ecx+0x71],1
  415850:	or     eax,0xcaff79b9
  415855:	xchg   ebp,eax
  415856:	std    
  415857:	test   edi,eax
  415859:	popa   
  41585a:	rcl    BYTE PTR [ecx+0x71],1
  41585d:	or     eax,0xcaff79b9
  415862:	xchg   ebp,eax
  415863:	std    
  415864:	test   edi,eax
  415866:	popa   
  415867:	rcl    BYTE PTR [ecx+0x71],1
  41586a:	or     eax,0xcaff79b9
  41586f:	xchg   ebp,eax
  415870:	std    
  415871:	test   edi,eax
  415873:	popa   
  415874:	rcl    BYTE PTR [ecx+0x71],1
  415877:	or     eax,0xcaff79b9
  41587c:	xchg   ebp,eax
  41587d:	std    
  41587e:	test   edi,eax
  415880:	popa   
  415881:	rcl    BYTE PTR [ecx+0x71],1
  415884:	or     eax,0xcaff79b9
  415889:	xchg   ebp,eax
  41588a:	std    
  41588b:	test   edi,eax
  41588d:	popa   
  41588e:	rcl    BYTE PTR [ecx+0x71],1
  415891:	or     eax,0xcaff79b9
  415896:	xchg   ebp,eax
  415897:	std    
  415898:	test   edi,eax
  41589a:	popa   
  41589b:	rcl    BYTE PTR [ecx+0x71],1
  41589e:	or     eax,0xcaff79b9
  4158a3:	xchg   ebp,eax
  4158a4:	std    
  4158a5:	test   edi,eax
  4158a7:	popa   
  4158a8:	rcl    BYTE PTR [ecx+0x71],1
  4158ab:	or     eax,0xcaff79b9
  4158b0:	xchg   ebp,eax
  4158b1:	std    
  4158b2:	test   edi,eax
  4158b4:	popa   
  4158b5:	rcl    BYTE PTR [ecx+0x71],1
  4158b8:	or     eax,0xcaff79b9
  4158bd:	xchg   ebp,eax
  4158be:	std    
  4158bf:	test   edi,eax
  4158c1:	popa   
  4158c2:	rcl    BYTE PTR [ecx+0x71],1
  4158c5:	or     eax,0xcaff79b9
  4158ca:	xchg   ebp,eax
  4158cb:	std    
  4158cc:	test   edi,eax
  4158ce:	popa   
  4158cf:	rcl    BYTE PTR [ecx+0x71],1
  4158d2:	or     eax,0xcaff79b9
  4158d7:	xchg   ebp,eax
  4158d8:	std    
  4158d9:	test   edi,eax
  4158db:	popa   
  4158dc:	rcl    BYTE PTR [ecx+0x71],1
  4158df:	or     eax,0xcaff79b9
  4158e4:	xchg   ebp,eax
  4158e5:	std    
  4158e6:	test   edi,eax
  4158e8:	popa   
  4158e9:	rcl    BYTE PTR [ecx+0x71],1
  4158ec:	or     eax,0xcaff79b9
  4158f1:	xchg   ebp,eax
  4158f2:	std    
  4158f3:	test   edi,eax
  4158f5:	popa   
  4158f6:	rcl    BYTE PTR [ecx+0x71],1
  4158f9:	or     eax,0xcaff79b9
  4158fe:	xchg   ebp,eax
  4158ff:	std    
  415900:	test   edi,eax
  415902:	popa   
  415903:	rcl    BYTE PTR [ecx+0x71],1
  415906:	or     eax,0xcaff79b9
  41590b:	xchg   ebp,eax
  41590c:	std    
  41590d:	test   edi,eax
  41590f:	popa   
  415910:	rcl    BYTE PTR [ecx+0x71],1
  415913:	or     eax,0xcaff79b9
  415918:	xchg   ebp,eax
  415919:	std    
  41591a:	test   edi,eax
  41591c:	popa   
  41591d:	rcl    BYTE PTR [ecx+0x71],1
  415920:	or     eax,0xcaff79b9
  415925:	xchg   ebp,eax
  415926:	std    
  415927:	test   edi,eax
  415929:	popa   
  41592a:	rcl    BYTE PTR [ecx+0x71],1
  41592d:	or     eax,0xcaff79b9
  415932:	xchg   ebp,eax
  415933:	std    
  415934:	test   edi,eax
  415936:	popa   
  415937:	rcl    BYTE PTR [ecx+0x71],1
  41593a:	or     eax,0xcaff79b9
  41593f:	xchg   ebp,eax
  415940:	std    
  415941:	test   edi,eax
  415943:	popa   
  415944:	rcl    BYTE PTR [ecx+0x71],1
  415947:	or     eax,0xcaff79b9
  41594c:	xchg   ebp,eax
  41594d:	std    
  41594e:	test   edi,eax
  415950:	popa   
  415951:	rcl    BYTE PTR [ecx+0x71],1
  415954:	or     eax,0x61ff79b9
  415959:	fcomi  st,st(6)
  41595b:	test   eax,ebp
  41595d:	popa   
  41595e:	rol    BYTE PTR [ecx+0x71],1
  415961:	or     eax,0xbe25db93
  415966:	sub    BYTE PTR [edx-0x14b52a4a],dh
  41596c:	ins    BYTE PTR es:[edi],dx
  41596d:	sahf   
  41596e:	mov    eax,0x93b67f2b
  415973:	and    DWORD PTR fs:[esi],esi
  415976:	aam    0x26
  415978:	jmp    0x415932
  41597a:	test   eax,0x3d08fb86
  41597f:	xor    dl,bl
  415981:	push   0xffffffdb
  415983:	sbb    BYTE PTR [ebp-0x11e3cd70],dh
  415989:	add    ch,BYTE PTR [eax+0x759c89da]
  41598f:	add    eax,0x68f09cd0
  415994:	dec    ecx
  415995:	dec    esi
  415996:	mov    ebx,0x912b835
  41599b:	sub    cl,dl
  41599d:	stc    
  41599e:	shl    BYTE PTR [esi],cl
  4159a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a1:	push   0xad88f71a
  4159a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a7:	or     DWORD PTR [edx],ebx
  4159a9:	xchg   ebp,eax
  4159aa:	pop    eax
  4159ab:	xchg   ecx,eax
  4159ac:	jp     0x415a19
  4159ae:	fmul   QWORD PTR [eax+0x255585f2]
  4159b4:	jae    0x415992
  4159b6:	adc    bl,BYTE PTR [ebx]
  4159b8:	or     BYTE PTR [ebx+0x76],0x23
  4159bc:	cmp    BYTE PTR [ebp-0xe13f5c7],bh
  4159c2:	inc    eax
  4159c3:	push   0xffffffba
  4159c5:	pop    ecx
  4159c6:	test   esi,esp
  4159c8:	test   DWORD PTR [ecx-0x18],esi
  4159cb:	popa   
  4159cc:	out    0xdf,eax
  4159ce:	lock pop edi
  4159d0:	pavgw  mm0,QWORD PTR [edx+0x42]
  4159d4:	mov    ch,0xea
  4159d6:	outs   dx,DWORD PTR ds:[esi]
  4159d7:	ret    0x1c60
  4159da:	pop    ebp
  4159db:	mov    cl,0xa8
  4159dd:	adc    eax,0x234d936c
  4159e2:	pop    ss
  4159e3:	sub    ebp,edi
  4159e5:	out    0x7b,eax
  4159e7:	pop    edi
  4159e8:	shl    BYTE PTR [esp+edi*2-0xd],cl
  4159ec:	pop    esi
  4159ed:	lock retf 
  4159ef:	pop    es
  4159f0:	and    DWORD PTR [edx-0x4400d776],ebp
  4159f6:	out    0xc3,eax
  4159f8:	in     eax,0x9a
  4159fa:	mov    BYTE PTR [ebx-0x2cb53d48],bl
  415a00:	xor    DWORD PTR [esi],esp
  415a02:	inc    eax
  415a03:	leave  
  415a04:	fnstenv [ebx-0x4a933260]
  415a0a:	adc    BYTE PTR es:[ecx],dl
  415a0d:	dec    ebx
  415a0e:	and    bl,BYTE PTR [eax]
  415a10:	jne    0x415a52
  415a12:	adc    BYTE PTR [edx-0x44],al
  415a15:	popa   
  415a16:	(bad)  
  415a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a18:	loopne 0x4159f4
  415a1a:	sbb    BYTE PTR [ecx+0x78],bl
  415a1d:	dec    ebp
  415a1e:	fcmovbe st,st(4)
  415a20:	jmp    0xb0ce:0xd4d98cfb
  415a27:	scas   eax,DWORD PTR es:[edi]
  415a28:	jo     0x415a2e
  415a2a:	cld    
  415a2b:	dec    ebp
  415a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2d:	rcl    DWORD PTR [esp+ebx*2+0x1a],0xff
  415a32:	mov    esp,0xf3e905b
  415a37:	push   ss
  415a38:	mov    dl,0xa4
  415a3a:	mov    eax,0xe5f9b891
  415a3f:	jne    0x415a16
  415a41:	loopne 0x415a8d
  415a43:	sbb    esp,DWORD PTR [ebp+0x63]
  415a46:	out    dx,eax
  415a47:	out    0xc,eax
  415a49:	ins    BYTE PTR es:[edi],dx
  415a4a:	aaa    
  415a4b:	jl     0x415ac4
  415a4d:	ret    
  415a4e:	pop    eax
  415a4f:	mov    eax,ds:0xea633739
  415a54:	mov    esi,0xc95485e0
  415a59:	adc    eax,0x7a346597
  415a5e:	enter  0xd42a,0x60
  415a62:	cmp    dl,BYTE PTR [ebx-0x4f]
  415a65:	test   al,0x7
  415a67:	mov    ebx,0x37956a1a
  415a6c:	scas   eax,DWORD PTR es:[edi]
  415a6d:	or     esi,DWORD PTR [edx-0x12]
  415a70:	es cmp bh,dl
  415a73:	adc    dh,BYTE PTR [eax+ecx*8]
  415a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a77:	sub    al,BYTE PTR [ebx+0x56]
  415a7a:	sbb    esp,esi
  415a7c:	add    eax,0x30f47031
  415a81:	mov    eax,0x58fc7a3f
  415a86:	leave  
  415a87:	mov    ds:0x798c97bb,eax
  415a8c:	pop    ebx
  415a8d:	dec    edi
  415a8e:	sbb    edi,ecx
  415a90:	mov    ecx,0x24c16d49
  415a95:	xchg   ebx,eax
  415a96:	and    DWORD PTR [ebp-0x3a8b84db],edi
  415a9c:	dec    esi
  415a9d:	sbb    ah,dl
  415a9f:	in     eax,dx
  415aa0:	xchg   ebx,eax
  415aa1:	dec    edx
  415aa2:	mov    dl,0x68
  415aa4:	mov    cl,0x45
  415aa6:	nop
  415aa7:	repnz cmp eax,0x8a3b213d
  415aad:	lock and eax,0xaf978882
  415ab3:	push   ebp
  415ab4:	xchg   esi,eax
  415ab5:	hlt    
  415ab6:	jno    0x415aac
  415ab8:	loopne 0x415b0a
  415aba:	pop    ebp
  415abb:	pop    edi
  415abc:	sti    
  415abd:	test   BYTE PTR ds:0xf6cde197,dl
  415ac3:	jno    0x415ab2
  415ac5:	std    
  415ac6:	mov    ah,0x1e
  415ac8:	pop    ss
  415ac9:	jmp    0x4684:0x75c7a99f
  415ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad1:	sbb    dh,BYTE PTR ds:0x33296d9a
  415ad7:	lods   eax,DWORD PTR ds:[esi]
  415ad8:	push   edi
  415ad9:	lahf   
  415ada:	pop    esp
  415adb:	int    0x9b
  415add:	das    
  415ade:	push   ecx
  415adf:	dec    eax
  415ae0:	jmp    0x7ed484fd
  415ae5:	push   ds
  415ae6:	mov    WORD PTR [ebx+0x74],?
  415ae9:	mov    ch,BYTE PTR [edi+0x4e194cfa]
  415aef:	call   0x97efa481
  415af4:	jbe    0x415b63
  415af6:	sar    esp,0x88
  415af9:	pop    edi
  415afa:	adc    DWORD PTR [esi+ecx*4-0x5e],0x54
  415aff:	xchg   esi,eax
  415b00:	jecxz  0x415ac2
  415b02:	ds std 
  415b04:	out    0x96,al
  415b06:	icebp  
  415b07:	push   edi
  415b08:	loope  0x415b40
  415b0a:	leave  
  415b0b:	bound  edx,QWORD PTR [edx-0x6cb871f1]
  415b11:	jge    0x415aaa
  415b13:	imul   ebx,DWORD PTR [ebx-0x79],0x63
  415b17:	cmp    DWORD PTR [ebp+0x53d87171],esp
  415b1d:	cs cwde 
  415b1f:	ror    DWORD PTR [ebx+0x1b98318b],1
  415b25:	(bad)  
  415b26:	std    
  415b27:	scas   eax,DWORD PTR es:[edi]
  415b28:	and    al,0x5
  415b2a:	scas   al,BYTE PTR es:[edi]
  415b2b:	(bad)  
  415b2c:	repz inc ebx
  415b2e:	adc    eax,ebp
  415b30:	fmul   QWORD PTR [esi]
  415b32:	les    eax,FWORD PTR [ebp-0x7810de71]
  415b38:	enter  0x9dc4,0x63
  415b3c:	pop    ds
  415b3d:	mov    edi,0x6f535045
  415b42:	ret    
  415b43:	outs   dx,DWORD PTR ds:[esi]
  415b44:	std    
  415b45:	jmp    0xaed5:0xb257ce1f
  415b4c:	xlat   BYTE PTR ds:[ebx]
  415b4d:	sub    ebx,DWORD PTR [ebx-0x5daa83f3]
  415b53:	imul   ecx,DWORD PTR [ebx+0x1d50d6da],0xc80e6b00
  415b5d:	dec    ebx
  415b5e:	call   0x37d6:0xdc505f4c
  415b65:	mov    ebx,0x6d90bc5b
  415b6a:	inc    esi
  415b6b:	scas   eax,DWORD PTR es:[edi]
  415b6c:	and    bh,cl
  415b6e:	sub    DWORD PTR [esi-0x4d1545c3],ebp
  415b74:	imul   eax,DWORD PTR [ebp+0x4],0x3
  415b78:	in     al,dx
  415b79:	dec    edx
  415b7a:	sbb    DWORD PTR [edi],ebx
  415b7c:	clc    
  415b7d:	pop    esp
  415b7e:	adc    BYTE PTR [ebx+ecx*8],cl
  415b81:	or     bl,BYTE PTR [ebx+0x403a5d02]
  415b87:	out    dx,eax
  415b88:	dec    ecx
  415b89:	sbb    eax,0x90a90414
  415b8e:	adc    BYTE PTR [edx+0x4c25cacd],ah
  415b94:	fnstcw WORD PTR [edi+eax*2]
  415b97:	das    
  415b98:	cmp    ebx,DWORD PTR [edx+0xdafc7f1]
  415b9e:	into   
  415b9f:	cli    
  415ba0:	fcmovnb st,st(3)
  415ba2:	jl     0x415b5c
  415ba4:	scas   al,BYTE PTR es:[edi]
  415ba5:	popa   
  415ba6:	ror    BYTE PTR [eax-0x16],cl
  415ba9:	in     al,dx
  415baa:	sub    ch,BYTE PTR [esi]
  415bac:	mov    ah,0x90
  415bae:	jb     0x415c16
  415bb0:	mov    fs,WORD PTR [eax+0x2e]
  415bb3:	daa    
  415bb4:	mov    al,ds:0x60698703
  415bb9:	or     eax,0x9db809cd
  415bbe:	retf   
  415bbf:	jmp    0xacb1:0xc8ad2df2
  415bc6:	int    0x3c
  415bc8:	push   esp
  415bc9:	dec    esp
  415bca:	mov    esi,DWORD PTR [ecx]
  415bcc:	lea    ecx,[ebx]
  415bce:	loopne 0x415bf3
  415bd0:	cmp    eax,0x7acc0845
  415bd5:	test   eax,0x5647d154
  415bda:	or     bl,bh
  415bdc:	xor    al,0xd0
  415bde:	push   0x8ad325fd
  415be3:	loop   0x415b83
  415be5:	mov    esi,0xe90e4140
  415bea:	mov    bl,0xa3
  415bec:	mov    eax,ds:0x7b1e93d9
  415bf1:	xchg   BYTE PTR [edi-0x18],al
  415bf4:	adc    al,0x4
  415bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf7:	jns    0x415c50
  415bf9:	dec    esp
  415bfa:	jb     0x415bc8
  415bfc:	cmp    bh,BYTE PTR [ebx-0x12]
  415bff:	dec    edi
  415c00:	push   0x6a
  415c02:	shl    DWORD PTR [ecx],1
  415c04:	(bad)  ds:0xce185eb3
  415c0a:	test   BYTE PTR [esi+0x26],dh
  415c0d:	popf   
  415c0e:	aaa    
  415c0f:	outs   dx,DWORD PTR ds:[esi]
  415c10:	pop    ss
  415c11:	loope  0x415c3e
  415c13:	or     al,0xb0
  415c15:	xor    bh,BYTE PTR [di-0x70]
  415c19:	sbb    BYTE PTR [ebx-0x5cd16cb9],bl
  415c1f:	imul   ebp,DWORD PTR [bp+0x52],0x8
  415c24:	in     al,dx
  415c25:	or     eax,0xda4e6c55
  415c2a:	and    BYTE PTR [ebp-0x1bb6c09e],al
  415c30:	mov    ebp,0xffe814dd
  415c35:	xchg   ecx,eax
  415c36:	sub    BYTE PTR [edi+0x11555998],ah
  415c3c:	add    BYTE PTR [edx+0x26ad5474],ch
  415c42:	ficomp WORD PTR [eax]
  415c44:	in     eax,dx
  415c45:	mov    al,ds:0xa11e4e70
  415c4a:	lods   eax,DWORD PTR ds:[esi]
  415c4b:	jmp    0xec9d:0xe4c8746f
  415c52:	loop   0x415c0e
  415c54:	xchg   esp,eax
  415c55:	mov    al,0x6
  415c57:	jae    0x415c79
  415c59:	sub    ch,BYTE PTR [ebp+0x76dfd646]
  415c5f:	pop    DWORD PTR [ecx+0x30]
  415c62:	call   0x8a6c:0x85948bd0
  415c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6a:	rol    ch,cl
  415c6c:	pop    eax
  415c6d:	dec    edi
  415c6e:	fs push ebp
  415c70:	je     0x415c53
  415c72:	std    
  415c73:	xor    dl,BYTE PTR ds:0x53eccfe
  415c79:	sbb    ah,BYTE PTR [edi+ecx*4-0x77]
  415c7d:	out    0x92,al
  415c7f:	fisttp WORD PTR [edi-0x54919d16]
  415c85:	(bad)
  415c89:	ja     0x415c7f
  415c8b:	dec    esi
  415c8c:	scas   al,BYTE PTR es:[edi]
  415c8d:	ror    BYTE PTR [esi],0xb2
  415c90:	mov    cl,0xb8
  415c92:	ja     0x415cba
  415c94:	jge    0x415d04
  415c96:	sub    edi,eax
  415c98:	out    0x22,al
  415c9a:	dec    esp
  415c9b:	retf   
  415c9c:	or     al,0xbf
  415c9e:	dec    edx
  415c9f:	loope  0x415ce0
  415ca1:	neg    edi
  415ca3:	in     al,dx
  415ca4:	loopne 0x415c75
  415ca6:	lock repnz sbb al,BYTE PTR [esi]
  415caa:	cli    
  415cab:	sub    dh,BYTE PTR [esi+0x3c2107b6]
  415cb1:	dec    esp
  415cb2:	push   esp
  415cb3:	jle    0x415c46
  415cb5:	push   0x6e879743
  415cba:	add    eax,0x41ae3076
  415cbf:	jg     0x415d20
  415cc1:	sub    BYTE PTR [ebp-0x38bb7e5c],ah
  415cc7:	jne    0x415d38
  415cc9:	int3   
  415cca:	mov    bl,0xb2
  415ccc:	sub    dh,BYTE PTR [edi]
  415cce:	inc    bx
  415cd0:	(bad)  
  415cd1:	jmp    DWORD PTR [esi+0x66]
  415cd4:	ins    DWORD PTR es:[edi],dx
  415cd5:	inc    edx
  415cd6:	dec    esi
  415cd7:	aaa    
  415cd8:	mov    edx,0xd7bec89e
  415cdd:	push   ds
  415cde:	mov    dl,0x25
  415ce0:	cmc    
  415ce1:	pop    edx
  415ce2:	pop    ss
  415ce3:	or     esp,ebp
  415ce5:	retf   
  415ce6:	inc    eax
  415ce7:	jge    0x415cc8
  415ce9:	jle    0x415d4c
  415ceb:	outs   dx,DWORD PTR ds:[esi]
  415cec:	pop    es
  415ced:	xchg   DWORD PTR [ecx],edi
  415cef:	sbb    eax,0xbe38950c
  415cf4:	rcl    DWORD PTR [edi+0x10],0x3a
  415cf8:	mov    ebp,0x256ef833
  415cfd:	retf   0x168
  415d00:	fadd   DWORD PTR [esi]
  415d02:	test   DWORD PTR [ecx-0x4c89017e],ecx
  415d08:	aad    0x5e
  415d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d0b:	mov    edx,0xafc49811
  415d10:	icebp  
  415d11:	sbb    ah,dl
  415d13:	mul    DWORD PTR ds:0xfda236f4
  415d19:	and    eax,0xf00e7c00
  415d1e:	jb     0x415cbc
  415d20:	sub    eax,0x2b1eccbc
  415d25:	or     dh,BYTE PTR [edi]
  415d27:	imul   eax,DWORD PTR [ecx+0x73],0xf28a51f1
  415d2e:	dec    edi
  415d2f:	sbb    DWORD PTR [edi-0x66c9721e],esi
  415d35:	pop    ebx
  415d36:	push   edx
  415d37:	jmp    0xf27a:0xf66fcf86
  415d3e:	push   ss
  415d3f:	stos   BYTE PTR es:[edi],al
  415d40:	fild   DWORD PTR [edx+0x2e]
  415d43:	jle    0x415dae
  415d45:	out    dx,al
  415d46:	lds    ebx,FWORD PTR [eax]
  415d48:	or     al,0x5b
  415d4a:	out    dx,al
  415d4b:	push   eax
  415d4c:	cmp    BYTE PTR [esi],al
  415d4e:	pop    ds
  415d4f:	ins    BYTE PTR es:[edi],dx
  415d50:	xchg   DWORD PTR [ebx-0x40],ecx
  415d53:	inc    esi
  415d54:	cmp    al,0x1c
  415d56:	or     esp,0xc0d2295d
  415d5c:	jge    0x415d55
  415d5e:	outs   dx,DWORD PTR ds:[esi]
  415d5f:	sbb    ah,al
  415d61:	xchg   ebp,eax
  415d62:	adc    al,bh
  415d64:	add    ch,BYTE PTR [ebx-0x7ee2a07c]
  415d6a:	out    0x4c,al
  415d6c:	idiv   DWORD PTR [ebx+0x29]
  415d6f:	das    
  415d70:	test   al,0x51
  415d72:	push   cs
  415d73:	mov    ah,0x8b
  415d75:	les    ecx,FWORD PTR [ebx-0x33]
  415d78:	fild   DWORD PTR [eax-0x47e3075e]
  415d7e:	xchg   ebx,eax
  415d7f:	shl    BYTE PTR [ecx+edx*8-0x39903da9],cl
  415d86:	enter  0x84dc,0xd2
  415d8a:	popf   
  415d8b:	test   al,0xf2
  415d8d:	(bad)  
  415d8e:	pop    ebp
  415d8f:	aas    
  415d90:	xchg   BYTE PTR [eax-0x12decfe1],al
  415d96:	jbe    0x415d1f
  415d98:	das    
  415d99:	out    dx,al
  415d9a:	outs   dx,BYTE PTR ds:[esi]
  415d9b:	imul   esi,DWORD PTR [edi+0x18b9deb6],0xbc2693e3
  415da5:	retf   
  415da6:	out    dx,al
  415da7:	(bad)  
  415da9:	xchg   ebp,eax
  415daa:	mov    bl,0x1f
  415dac:	imul   ecx,edi,0x39
  415daf:	imul   esp,ebp,0x98818290
  415db5:	or     esp,DWORD PTR [eax+eax*4-0x1881b73c]
  415dbc:	adc    esi,DWORD PTR [ebx+edx*4+0x6b1a62cc]
  415dc3:	dec    eax
  415dc4:	int    0xbe
  415dc6:	mov    edx,0xa652628c
  415dcb:	push   0x50
  415dcd:	mov    eax,ds:0x55de0d79
  415dd2:	cmp    bh,BYTE PTR [esi+0x6bd9d5ba]
  415dd8:	mov    edx,0x5711e9e5
  415ddd:	and    dh,BYTE PTR [esi+0x62]
  415de0:	inc    ebp
  415de1:	inc    edi
  415de2:	mov    ebx,0x2ff12b9f
  415de7:	xor    BYTE PTR [ebx-0x5b],ah
  415dea:	sub    DWORD PTR [esi+0x3b],ebp
  415ded:	xor    eax,0x69ca05d3
  415df2:	cli    
  415df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df4:	das    
  415df5:	jl     0x415e49
  415df7:	pop    esi
  415df8:	retf   0xfd26
  415dfb:	pop    esi
  415dfc:	inc    ebx
  415dfd:	jg     0x756425e4
  415e03:	es js  0x415e7d
  415e06:	sbb    eax,0x1783b6f7
  415e0b:	ret    
  415e0c:	add    al,0xff
  415e0e:	xor    dl,BYTE PTR [ebp-0x1e6ca97]
  415e14:	popa   
  415e15:	add    eax,0x59875ceb
  415e1a:	xchg   edi,eax
  415e1b:	push   ebp
  415e1c:	sbb    eax,0x66df14a0
  415e21:	xchg   edx,eax
  415e22:	jle    0x415e25
  415e24:	dec    esp
  415e25:	pop    es
  415e26:	sbb    edi,esp
  415e28:	push   cs
  415e29:	shl    ecx,cl
  415e2b:	ror    BYTE PTR [eax-0x39],cl
  415e2e:	(bad)  
  415e2f:	adc    al,0xa9
  415e31:	dec    esi
  415e32:	adc    BYTE PTR [edi+0x4de3a6c4],bl
  415e38:	xor    DWORD PTR ds:0xb25cc3a0,edx
  415e3e:	shl    ebp,0x82
  415e41:	retf   
  415e42:	pop    ebx
  415e43:	xor    esi,DWORD PTR [edx+edx*4-0xb]
  415e47:	add    DWORD PTR [edx-0x61],ebp
  415e4a:	jl     0x415dd7
  415e4c:	mov    bl,BYTE PTR [ebx-0x70]
  415e4f:	mov    eax,ds:0xe8b42864
  415e54:	xor    BYTE PTR [ebp-0x4c571b9a],al
  415e5a:	shr    DWORD PTR [eax-0x43],1
  415e5d:	cmp    edx,DWORD PTR ds:0xf478a645
  415e63:	add    al,0x80
  415e65:	in     eax,dx
  415e66:	lock sub eax,0xe1240b07
  415e6c:	push   esp
  415e6d:	xchg   edx,eax
  415e6e:	ja     0x415e05
  415e70:	ins    DWORD PTR es:[edi],dx
  415e71:	jnp    0x415e8e
  415e73:	push   esp
  415e74:	jp     0x415e76
  415e76:	ficom  DWORD PTR [esi+0x222154e2]
  415e7c:	mov    ch,0x95
  415e7e:	lds    esi,FWORD PTR [ecx]
  415e80:	repnz popa 
  415e82:	or     BYTE PTR [esi-0x1f],bh
  415e85:	mov    dh,0xd1
  415e87:	fbstp  TBYTE PTR [ebp-0x10]
  415e8a:	xor    ah,BYTE PTR [ecx-0x67]
  415e8d:	add    ebp,DWORD PTR [edx+0x378b0883]
  415e93:	sbb    edi,0x8036eb9b
  415e99:	jg     0x415eef
  415e9b:	lds    ecx,FWORD PTR [esi]
  415e9d:	adc    eax,0x969bc7bd
  415ea2:	rcr    BYTE PTR [ecx],0xf
  415ea5:	ja     0x415e44
  415ea7:	test   eax,0xedc5ecb7
  415eac:	scas   eax,DWORD PTR es:[edi]
  415ead:	mov    ch,0x15
  415eaf:	aam    0xff
  415eb1:	mov    ebp,0xdf0840ac
  415eb6:	mov    edi,0xd47e49c9
  415ebb:	addr16 mov ebp,0xfa1bcf9a
  415ec1:	out    dx,al
  415ec2:	pop    ss
  415ec3:	jp     0x415eec
  415ec5:	in     al,0x11
  415ec7:	xor    BYTE PTR [esi],dh
  415ec9:	push   esp
  415eca:	push   es
  415ecb:	sub    eax,DWORD PTR [ecx-0x52]
  415ece:	and    DWORD PTR [edx],edx
  415ed0:	test   al,0xf0
  415ed2:	sbb    bl,BYTE PTR [edx]
  415ed4:	inc    ebp
  415ed5:	into   
  415ed6:	out    dx,al
  415ed7:	frstor [edi+0x61ecc4d9]
  415edd:	adc    BYTE PTR [edi-0x1cfb15cc],bh
  415ee3:	jno    0x415f0e
  415ee5:	sti    
  415ee6:	mov    al,ds:0xce2024d5
  415eeb:	mov    ebx,0xc0658d36
  415ef0:	add    ecx,DWORD PTR [eax+0x75]
  415ef3:	push   ds
  415ef4:	add    eax,0xebc3682f
  415ef9:	dec    ecx
  415efa:	fisttp DWORD PTR [esi]
  415efc:	das    
  415efd:	jno    0x415f2b
  415eff:	cmp    eax,0xb7c7097c
  415f04:	xchg   dx,ax
  415f06:	cmp    eax,0xc4cc9eaa
  415f0b:	out    dx,al
  415f0c:	sub    eax,0x67b5eac4
  415f11:	test   WORD PTR [ebp+eiz*4-0x4dd32bf6],0x26c2
  415f1b:	mov    ebp,0xbcafe0bf
  415f20:	cdq    
  415f21:	mov    ecx,0xd0278ea2
  415f26:	jo     0x415f8b
  415f28:	(bad)  
  415f29:	test   eax,0xf82d3afc
  415f2e:	popf   
  415f2f:	cwde   
  415f30:	push   esi
  415f31:	xchg   esi,eax
  415f32:	dec    edx
  415f33:	and    BYTE PTR [ebp-0x26db51f0],dl
  415f39:	pop    edi
  415f3a:	adc    DWORD PTR [edx],ecx
  415f3c:	mov    ebx,0x2af5fb5
  415f41:	sub    esp,DWORD PTR [eax+0x31]
  415f44:	dec    ecx
  415f45:	dec    esp
  415f46:	sti    
  415f47:	scas   eax,DWORD PTR es:[edi]
  415f48:	jle    0x415f1c
  415f4a:	add    esi,DWORD PTR [ebx-0x6d54af10]
  415f50:	fwait
  415f51:	pusha  
  415f52:	mov    ss,WORD PTR [esi-0x2709261]
  415f58:	mov    ecx,DWORD PTR [eax+0x46]
  415f5b:	scas   al,BYTE PTR es:[edi]
  415f5c:	scas   eax,DWORD PTR es:[edi]
  415f5d:	loope  0x415ef0
  415f5f:	rcr    DWORD PTR [esi+0x6c513c82],cl
  415f65:	pop    esi
  415f66:	mov    bh,0x44
  415f68:	leave  
  415f69:	ss mov bl,0x78
  415f6c:	popf   
  415f6d:	mov    esp,0xb0f7154b
  415f72:	int    0xd1
  415f74:	mov    bh,0x33
  415f76:	and    BYTE PTR cs:[edi-0x640db959],bl
  415f7d:	and    eax,0xbd2af814
  415f82:	call   0xf66f:0x49eb7079
  415f89:	ins    DWORD PTR es:[edi],dx
  415f8a:	mov    esi,0x74e9fec7
  415f8f:	imul   eax,ecx,0xfffffff5
  415f92:	ret    0x4d44
  415f95:	jo     0x415fe5
  415f97:	cwde   
  415f98:	fld    st(7)
  415f9a:	ret    0xfc1d
  415f9d:	adc    dh,BYTE PTR [ebx-0x3b]
  415fa0:	scas   eax,DWORD PTR es:[edi]
  415fa1:	mov    dl,0x1a
  415fa3:	leave  
  415fa4:	mov    edx,0xba01213c
  415fa9:	aas    
  415faa:	cmp    esp,edx
  415fac:	pop    esp
  415fad:	sar    ebp,cl
  415faf:	std    
  415fb0:	les    esp,FWORD PTR [eax-0x28]
  415fb3:	popa   
  415fb4:	jo     0x415fc6
  415fb6:	add    esp,0x5050a3c1
  415fbc:	push   0xead6232d
  415fc1:	sbb    al,0xdd
  415fc3:	stc    
  415fc4:	js     0x415fa7
  415fc6:	sbb    BYTE PTR [ebp-0xd],0x21
  415fca:	mov    ds:0x897b6ae9,al
  415fcf:	push   edx
  415fd0:	aad    0x72
  415fd2:	add    al,0xb6
  415fd4:	stos   DWORD PTR es:[edi],eax
  415fd5:	neg    BYTE PTR ds:0x46faef69
  415fdb:	pop    es
  415fdc:	sbb    DWORD PTR [ebp-0x2e],0x24
  415fe0:	pop    esp
  415fe2:	fidivr DWORD PTR [eax+0x7ae95169]
  415fe8:	in     al,dx
  415fe9:	push   ss
  415fea:	je     0x415f92
  415fec:	sub    DWORD PTR [edx+0x2838e16c],0x7f
  415ff3:	sar    cl,0xd1
  415ff6:	in     eax,0xc6
  415ff8:	cmc    
  415ff9:	pop    ebx
  415ffa:	adc    edx,esi
  415ffc:	mov    eax,ds:0xe500179
  416001:	cmp    edx,ebp
  416003:	push   esp
  416004:	jecxz  0x415fad
  416006:	xchg   ch,ch
  416008:	mov    ecx,0xc4abb3a9
  41600d:	ds mov ah,0xdc
  416010:	add    DWORD PTR [edx-0x7f],ebx
  416013:	or     al,0x19
  416015:	and    esi,DWORD PTR [ebx]
  416017:	out    dx,al
  416018:	fisub  DWORD PTR [ebx-0x76]
  41601b:	add    bh,BYTE PTR [eax+0x6929ccc6]
  416021:	and    eax,DWORD PTR [edi+0x6876e646]
  416027:	cmp    cl,dh
  416029:	rcl    DWORD PTR [edx-0x418d19e9],0x64
  416030:	mov    ds:0x9640a341,al
  416035:	mov    edx,0xb563206c
  41603a:	mov    cl,0x15
  41603c:	mov    ?,WORD PTR [edx+0x42]
  41603f:	repnz sub al,0xdc
  416042:	add    bl,BYTE PTR [ecx+esi*4+0x3074caa]
  416049:	dec    esi
  41604a:	push   eax
  41604b:	xchg   ebx,eax
  41604c:	inc    esp
  41604d:	mov    ah,0x84
  41604f:	sub    ebp,DWORD PTR [ecx+0x24]
  416052:	sbb    cl,BYTE PTR [ecx-0xa000a62]
  416058:	push   es
  416059:	(bad)  [eax-0x37]
  41605c:	sub    DWORD PTR [eax+0x29],esi
  41605f:	adc    DWORD PTR [esi-0x122e495],esi
  416065:	pushw  es
  416067:	adc    cl,BYTE PTR [edi-0x69]
  41606a:	cmp    eax,0x279a93ae
  41606f:	xor    DWORD PTR [esi],edx
  416071:	dec    edi
  416072:	test   al,0xf8
  416074:	mov    al,ds:0xf9d17845
  416079:	and    ebx,DWORD PTR [ebx+ebx*1+0x4a]
  41607d:	or     BYTE PTR [edi-0x71b6506a],cl
  416083:	xor    BYTE PTR [edx],dh
  416085:	jns    0x41603c
  416087:	mov    cs,ecx
  416089:	jbe    0x4160d8
  41608b:	xchg   BYTE PTR [ecx],dh
  41608d:	push   eax
  41608e:	lods   eax,DWORD PTR ds:[esi]
  41608f:	pop    es
  416090:	loopne 0x416030
  416092:	and    edx,esp
  416094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416095:	stos   DWORD PTR es:[edi],eax
  416096:	aad    0x1
  416098:	aas    
  416099:	out    dx,al
  41609a:	adc    BYTE PTR [edi],dl
  41609c:	or     al,0xb4
  41609e:	sbb    bl,BYTE PTR [ebx]
  4160a0:	inc    ebx
  4160a1:	rol    DWORD PTR [ebx-0x14b9b7dc],1
  4160a7:	xor    ebp,esp
  4160a9:	mov    ebp,0x3428e0f4
  4160ae:	test   al,0x1f
  4160b0:	add    eax,0x4afb782c
  4160b5:	jns    0x4160fd
  4160b7:	cmp    bh,BYTE PTR [eax-0x7]
  4160ba:	xor    al,bh
  4160bc:	inc    ecx
  4160bd:	adc    al,0xc6
  4160bf:	lods   al,BYTE PTR ds:[esi]
  4160c0:	sbb    al,0xc
  4160c2:	or     esp,ecx
  4160c4:	jmp    0x325a:0xb6dc3ef3
  4160cb:	hlt    
  4160cc:	jo     0x416137
  4160ce:	mov    ch,0x38
  4160d0:	push   ebp
  4160d1:	ins    BYTE PTR es:[edi],dx
  4160d2:	push   edi
  4160d3:	retf   
  4160d4:	sub    dh,dl
  4160d6:	jp     0x416081
  4160d8:	and    al,0x9f
  4160da:	or     ah,BYTE PTR [edi+0x3b96ddb5]
  4160e0:	mov    bl,0x5d
  4160e2:	pop    ds
  4160e3:	iret   
  4160e4:	es push ecx
  4160e6:	mov    ds:0x79004412,eax
  4160eb:	pop    edx
  4160ec:	nop
  4160ed:	data16 test al,0xb8
  4160f0:	dec    edx
  4160f1:	mov    ebp,0x431a0b12
  4160f6:	mov    ch,0xb5
  4160f8:	(bad)  
  4160f9:	mov    bl,0x18
  4160fb:	scas   eax,DWORD PTR es:[edi]
  4160fc:	iret   
  4160fd:	or     al,0xac
  4160ff:	sar    BYTE PTR [eax],cl
  416101:	add    DWORD PTR ds:0x8c6f9cdc,0x3d924bff
  41610b:	jecxz  0x4160aa
  41610d:	adc    BYTE PTR [edx-0x19],0x54
  416111:	push   esp
  416112:	sbb    al,0x81
  416114:	sub    al,0x8d
  416116:	rcl    DWORD PTR [ebp+0x7f05ba0f],cl
  41611c:	cdq    
  41611d:	(bad)  
  41611e:	sbb    esi,esi
  416120:	cmp    ch,bl
  416122:	pusha  
  416123:	push   ss
  416124:	xchg   ecx,eax
  416125:	mov    ebx,0xa9017639
  41612a:	mov    edi,edx
  41612c:	sbb    cl,al
  41612e:	je     0x4160dc
  416130:	mov    eax,gs:0x635bf825
  416136:	dec    esi
  416137:	pop    ecx
  416138:	xchg   DWORD PTR [edi],edx
  41613a:	jmp    0x63b3:0xc9d37b05
  416141:	push   0x14
  416143:	dec    eax
  416144:	aad    0x33
  416146:	test   eax,0xa014b2ef
  41614b:	xchg   edx,eax
  41614c:	das    
  41614d:	sub    BYTE PTR [ebx-0x2c2263a0],bl
  416153:	jns    0x4161c1
  416155:	xchg   esi,eax
  416156:	add    eax,0x5fceae77
  41615b:	test   DWORD PTR [edx],0xb254147a
  416161:	cld    
  416162:	and    eax,0x553cd643
  416167:	into   
  416168:	add    bl,BYTE PTR [edx]
  41616a:	xchg   ebx,eax
  41616b:	xchg   edx,eax
  41616c:	enter  0x4979,0x69
  416170:	popa   
  416171:	aaa    
  416172:	xor    bl,BYTE PTR [ebp-0x6425e728]
  416178:	shl    BYTE PTR [ebx],0xf6
  41617b:	sti    
  41617c:	xchg   BYTE PTR [esi-0x2351026c],dl
  416182:	aam    0xbe
  416184:	cmp    cl,BYTE PTR [edx+0x39d763b]
  41618a:	dec    ecx
  41618b:	fwait
  41618c:	enter  0xc895,0x19
  416190:	into   
  416191:	jl     0x416137
  416193:	xchg   DWORD PTR [eax+0x154b8501],esp
  416199:	cmc    
  41619a:	dec    esi
  41619b:	xor    ebp,DWORD PTR [ebx+0x2a189830]
  4161a1:	jne    0x4161a2
  4161a3:	(bad)  
  4161a4:	into   
  4161a5:	sbb    al,0xb2
  4161a7:	stc    
  4161a8:	idiv   BYTE PTR [ebx+0x68]
  4161ab:	sbb    bh,BYTE PTR [ebx-0x42feb833]
  4161b1:	addr16 pop ss
  4161b3:	cmp    BYTE PTR [edx-0x6],0x33
  4161b7:	pop    esp
  4161b8:	icebp  
  4161b9:	mov    al,0x7
  4161bb:	neg    BYTE PTR [edi+0x7a]
  4161be:	add    eax,0x77c34f50
  4161c3:	out    0x47,eax
  4161c5:	add    al,0x3f
  4161c7:	lock (bad) 
  4161c9:	mov    esp,0x6abde16b
  4161ce:	mov    bh,0x2f
  4161d0:	aam    0xa7
  4161d2:	cdq    
  4161d3:	call   0x93a1:0xecbf7cd7
  4161da:	shl    ebp,cl
  4161dc:	(bad)  
  4161dd:	mov    ecx,0xba1023e5
  4161e2:	call   FWORD PTR [ebx+edi*4+0x4cdb69b2]
  4161e9:	xchg   esp,eax
  4161ea:	xor    BYTE PTR [edx],al
  4161ec:	dec    esp
  4161ed:	xor    cl,ah
  4161ef:	lock add eax,eax
  4161f2:	test   eax,0x7dde13bf
  4161f7:	xor    edi,esp
  4161f9:	push   eax
  4161fa:	nop
  4161fb:	sbb    bh,BYTE PTR [ecx-0x4e]
  4161fe:	pop    ds
  4161ff:	popa   
  416200:	xchg   ebx,eax
  416201:	outs   dx,BYTE PTR ds:[esi]
  416202:	push   0x91ac8392
  416207:	fcomi  st,st(6)
  416209:	arpl   WORD PTR [edx-0x30],cx
  41620c:	adc    eax,0x15c03a2
  416211:	push   ds
  416212:	mov    esp,0xbb75a236
  416217:	jecxz  0x4161d8
  416219:	or     eax,0xa088b40b
  41621e:	cli    
  41621f:	cwde   
  416220:	lods   al,BYTE PTR ds:[esi]
  416221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416222:	jmp    0x41628f
  416224:	daa    
  416225:	adc    DWORD PTR [edi+0x11],esi
  416228:	or     DWORD PTR [eax],ecx
  41622a:	inc    ebp
  41622b:	xchg   ebp,eax
  41622c:	outs   dx,BYTE PTR ds:[esi]
  41622d:	popa   
  41622e:	pop    esp
  41622f:	xchg   esi,eax
  416230:	retf   0xf472
  416233:	dec    ebx
  416234:	ja     0x416244
  416236:	or     al,0x3b
  416238:	pop    ds
  416239:	push   ss
  41623a:	leave  
  41623b:	push   ds
  41623c:	aaa    
  41623d:	not    BYTE PTR [eax]
  41623f:	inc    esi
  416240:	sbb    cl,BYTE PTR [edi]
  416242:	call   0xfdc4f6e8
  416247:	fld    DWORD PTR [ebp+0x46e67392]
  41624d:	inc    eax
  41624e:	push   es
  41624f:	outs   dx,BYTE PTR ds:[esi]
  416250:	adc    eax,0x1c8838ae
  416255:	stos   DWORD PTR es:[edi],eax
  416256:	mov    ds,WORD PTR [esi-0x23ed0a69]
  41625c:	cmp    DWORD PTR [ebp+0x45],esp
  41625f:	repz pop edi
  416261:	mov    edx,0x51da9d94
  416266:	mov    eax,0xb1fe1ad2
  41626b:	jge    0x416295
  41626d:	int3   
  41626e:	inc    esp
  41626f:	mov    bh,0x98
  416271:	ds xor edx,eax
  416274:	dec    edi
  416275:	mov    ds:0x8b669ad9,al
  41627a:	jns    0x416221
  41627c:	push   esp
  41627d:	js     0x41622c
  41627f:	xchg   ebp,eax
  416280:	in     al,0x27
  416282:	or     BYTE PTR ds:0x9d04c857,0x28
  416289:	or     eax,0x5d1144a6
  41628e:	mov    dl,bl
  416290:	add    ah,BYTE PTR cs:[eax]
  416293:	int    0x49
  416295:	adc    dh,ah
  416297:	mov    ebx,0x7f890e37
  41629c:	jle    0x416244
  41629e:	adc    eax,0xeb27624b
  4162a3:	daa    
  4162a4:	push   es
  4162a5:	(bad)  
  4162a6:	aad    0x53
  4162a8:	gs (bad) 
  4162aa:	adc    DWORD PTR [edi-0x6b],ecx
  4162ad:	emms   
  4162af:	adc    eax,0xdd1f8850
  4162b4:	retf   0x8281
  4162b7:	inc    edi
  4162b8:	or     edi,edx
  4162ba:	test   ah,al
  4162bc:	mov    BYTE PTR [edi+ebx*2],al
  4162bf:	inc    eax
  4162c1:	mov    eax,ds:0x50c1ebe3
  4162c6:	sub    dh,BYTE PTR [ebx+0x5478e567]
  4162cc:	test   eax,0x227e6b43
  4162d1:	jp     0x416273
  4162d3:	std    
  4162d4:	or     eax,DWORD PTR [edi]
  4162d6:	call   0x7d37:0x6a3f0a6e
  4162dd:	mov    ds:0x15c114ed,eax
  4162e2:	je     0x41627b
  4162e4:	adc    DWORD PTR [ebp-0x7f],esi
  4162e7:	test   al,0xe0
  4162e9:	mov    ch,0xf
  4162eb:	nop
  4162ec:	mov    eax,ds:0xf1503903
  4162f1:	inc    BYTE PTR [ebp*1-0x749a6830]
  4162f8:	jne    0x416282
  4162fa:	or     dl,BYTE PTR [ecx]
  4162fc:	sbb    eax,0xa319424f
  416301:	aaa    
  416302:	pushf  
  416303:	push   0x9218f588
  416308:	int    0x23
  41630a:	js     0x4162d8
  41630c:	mov    ebp,0x5959ffc6
  416311:	xor    al,0x12
  416313:	jge    0x4162da
  416315:	mov    ds:0xce800529,al
  41631a:	jne    0x416336
  41631c:	aas    
  41631d:	and    eax,0x7dfcedb7
  416322:	push   edx
  416323:	pop    edi
  416324:	sub    ecx,edx
  416326:	sbb    DWORD PTR [ecx],edx
  416328:	sar    BYTE PTR [ebx],1
  41632a:	cli    
  41632b:	out    0x7a,al
  41632d:	cmp    esi,DWORD PTR [ecx]
  41632f:	out    0x9d,al
  416331:	mov    ebx,0xe58b2528
  416336:	scas   al,BYTE PTR es:[edi]
  416337:	loope  0x4162f3
  416339:	mul    BYTE PTR [eax-0x17]
  41633c:	push   0x35f6807b
  416341:	cwde   
  416342:	mov    ch,0x6
  416344:	pop    edi
  416345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416346:	mov    ss,esi
  416348:	fmul   st(0),st
  41634a:	mov    DWORD PTR [ebx+0x56ad5e0d],edi
  416350:	sub    eax,0x21ca1dd3
  416355:	sar    BYTE PTR [ebx],0x16
  416358:	push   ss
  416359:	int3   
  41635a:	pop    edx
  41635b:	xchg   ecx,eax
  41635c:	das    
  41635d:	rcl    BYTE PTR [ebx+0x671d707a],0xc4
  416364:	cmp    al,BYTE PTR [ebp-0x3c]
  416367:	out    0x49,al
  416369:	(bad)  
  41636a:	popa   
  41636b:	test   DWORD PTR [eax-0x5b],ecx
  41636e:	inc    ebp
  41636f:	std    
  416370:	jge    0x4163e5
  416372:	mov    WORD PTR [eax],gs
  416374:	loop   0x4163a8
  416376:	jmp    0xd866139b
  41637b:	(bad)
  41637e:	ins    BYTE PTR es:[edi],dx
  41637f:	mov    al,0x6b
  416381:	push   0xfffffffc
  416383:	jl     0x416343
  416385:	pop    edx
  416386:	mov    ecx,?
  416388:	inc    esp
  416389:	arpl   WORD PTR [esi],bx
  41638b:	mov    edx,0x81d2637b
  416390:	fs add ah,ah
  416393:	sbb    DWORD PTR [edi-0x6e37e5dd],ebp
  416399:	popf   
  41639a:	push   edx
  41639c:	stos   BYTE PTR es:[edi],al
  41639d:	aaa    
  41639e:	pop    edi
  41639f:	xchg   edi,eax
  4163a0:	call   0x7d05:0xc1b9f355
  4163a7:	loop   0x416362
  4163a9:	repnz adc bh,dl
  4163ac:	bound  ebx,QWORD PTR [edi+0x5fc2a720]
  4163b2:	pslld  mm4,QWORD PTR [edx+0x5b917e27]
  4163b9:	sub    BYTE PTR [ebx-0x44],0x6a
  4163bd:	sbb    DWORD PTR [edi+0x5ebe1b9],0x79c18ec
  4163c7:	mov    dh,BYTE PTR [esi-0x64]
  4163ca:	ret    
  4163cb:	mov    ah,BYTE PTR [edx+0x1c]
  4163ce:	nop
  4163cf:	stos   BYTE PTR es:[edi],al
  4163d0:	pop    esi
  4163d1:	enter  0x3e41,0x3a
  4163d5:	aad    0x8c
  4163d7:	add    DWORD PTR [esi+ebp*8+0x337adc49],ebp
  4163de:	and    esp,ebx
  4163e0:	sub    DWORD PTR [ecx+ebp*1-0x25],esp
  4163e4:	stc    
  4163e5:	pushf  
  4163e6:	and    ebp,ebx
  4163e8:	cdq    
  4163e9:	cmp    al,0x5f
  4163eb:	add    BYTE PTR [bx+0x35b9],bh
  4163f0:	loope  0x4163e4
  4163f2:	arpl   bp,bp
  4163f4:	pusha  
  4163f5:	fnsave [edx+0x40aa53a5]
  4163fb:	dec    BYTE PTR [esi]
  4163fd:	mov    dh,0xea
  4163ff:	test   DWORD PTR [eax+eiz*1+0x8],edx
  416403:	ficomp WORD PTR [eax]
  416405:	popf   
  416406:	pusha  
  416407:	sar    BYTE PTR [ebp-0x1a],0x7e
  41640b:	mov    bh,0x2
  41640d:	cmp    BYTE PTR [eax-0x216b58b0],0x42
  416414:	jmp    FWORD PTR [edx+0x33]
  416417:	cmp    al,0x3a
  416419:	std    
  41641a:	lds    ebp,FWORD PTR [ebx]
  41641c:	push   cs
  41641d:	cmp    dl,bl
  41641f:	(bad)  [ebp+0x4668b31f]
  416425:	sub    bl,ch
  416427:	add    dh,cl
  416429:	enter  0xeaae,0xac
  41642d:	push   ss
  41642e:	test   eax,0xef3cf1f2
  416433:	retf   
  416434:	adc    edx,DWORD PTR [ebp+0x0]
  416437:	hlt    
  416438:	sbb    eax,DWORD PTR [ecx+0x74]
  41643b:	sbb    DWORD PTR [edx-0x2ae9ef9f],esi
  416441:	imul   esi,DWORD PTR [ebx+esi*1],0x494c2afc
  416448:	dec    ebp
  416449:	mov    al,ds:0x1ca70ac9
  41644e:	out    dx,al
  41644f:	dec    esp
  416450:	pop    ebx
  416451:	je     0x4163d4
  416453:	xchg   DWORD PTR [edi],ebx
  416455:	jp     0x416401
  416457:	xchg   edi,eax
  416458:	push   esp
  416459:	shr    eax,0xaf
  41645c:	lds    ecx,FWORD PTR [ebp+0x62]
  41645f:	push   esi
  416460:	fild   WORD PTR fs:[ebx+0x25020985]
  416467:	jae    0x4164c1
  416469:	in     eax,0xb8
  41646b:	push   ebp
  41646c:	popa   
  41646d:	mov    bl,0x8d
  41646f:	pop    ebx
  416470:	jp     0x41643c
  416472:	lds    ebp,FWORD PTR [esi]
  416474:	mov    edi,0x4b88b758
  416479:	xchg   ebx,ecx
  41647b:	popf   
  41647c:	rcr    BYTE PTR [edi+0x54],1
  41647f:	cmp    BYTE PTR ds:0x3bc72344,bl
  416485:	punpckhbw mm4,QWORD PTR [edx-0x37ceada7]
  41648c:	jns    0x41641a
  41648e:	cmp    eax,0x5a2127da
  416493:	mov    ebx,0xd3d71e5c
  416498:	out    dx,eax
  416499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649a:	lahf   
  41649b:	popa   
  41649c:	bound  esp,QWORD PTR [esi-0x4e]
  41649f:	mov    edx,0x4cb7fc8d
  4164a4:	pop    es
  4164a5:	push   cs
  4164a6:	lock mov BYTE PTR [esi-0x6e],cl
  4164aa:	fs jge 0x416496
  4164ad:	mov    esp,0xa450cbcc
  4164b2:	xlat   BYTE PTR ds:[ebx]
  4164b3:	xor    bl,ah
  4164b5:	mov    eax,0x4aa96e9e
  4164ba:	aad    0xe3
  4164bc:	jmp    0x4164e5
  4164be:	mov    dl,0x91
  4164c0:	loop   0x4164bb
  4164c2:	dec    edx
  4164c3:	xor    DWORD PTR [ebx],esi
  4164c5:	ins    BYTE PTR es:[edi],dx
  4164c6:	xchg   edi,eax
  4164c7:	adc    eax,0xe427ec34
  4164cc:	(bad)  
  4164cd:	std    
  4164ce:	add    eax,0xc53acdaa
  4164d3:	xchg   esp,eax
  4164d4:	mov    ch,0x4e
  4164d6:	push   ds
  4164d7:	adc    BYTE PTR [edi],al
  4164d9:	push   edi
  4164da:	cmp    al,0xd6
  4164dc:	mov    bh,BYTE PTR ds:0x1c3ac1a0
  4164e2:	mov    eax,ds:0x6c56da36
  4164e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e8:	mov    esi,DWORD PTR [ecx-0x74449397]
  4164ee:	pushw  es
  4164f0:	dec    eax
  4164f1:	(bad)  
  4164f2:	or     BYTE PTR [ecx+edi*4],dl
  4164f5:	ror    BYTE PTR [ecx+0x287c888d],0xc0
  4164fc:	xchg   DWORD PTR [ecx],esp
  4164fe:	push   ss
  4164ff:	out    dx,eax
  416500:	dec    ecx
  416501:	push   ebx
  416502:	ficomp DWORD PTR [edi]
  416504:	push   ecx
  416505:	sub    eax,0x7661c468
  41650a:	xor    al,BYTE PTR [ebp-0x733df8a2]
  416510:	call   0x4331:0xbaf2989d
  416517:	adc    ecx,ecx
  416519:	pop    ebp
  41651a:	test   DWORD PTR [ecx+edx*2],edx
  41651d:	mov    esp,0x7511d21
  416522:	pop    es
  416523:	sar    BYTE PTR [esi],0xa3
  416526:	mov    ecx,0x32c31c13
  41652b:	hlt    
  41652c:	outs   dx,DWORD PTR ds:[esi]
  41652d:	cmp    ebp,DWORD PTR [edx+0x23f1800c]
  416533:	shr    BYTE PTR [ebp+0x43],1
  416536:	scas   al,BYTE PTR es:[edi]
  416537:	mov    WORD PTR [edi],?
  416539:	push   0xffffff99
  41653b:	fcmovu st,st(4)
  41653d:	mov    WORD PTR [ecx+0x4],cs
  416540:	and    al,BYTE PTR [ecx+0x1d]
  416543:	fs pop es
  416545:	cwde   
  416546:	xor    BYTE PTR [esi+0x4f4e2feb],bh
  41654c:	in     al,0xf0
  41654e:	cwde   
  41654f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416550:	addr16 pushf 
  416552:	fcom   DWORD PTR [ecx+edx*1+0x19753449]
  416559:	xchg   edi,eax
  41655a:	loope  0x416551
  41655c:	and    DWORD PTR [edi+eax*8-0x5f],0x69
  416561:	enter  0x67b6,0x41
  416565:	inc    ax
  416567:	push   esp
  416568:	stos   DWORD PTR es:[edi],eax
  416569:	cli    
  41656a:	aam    0xf1
  41656c:	jmp    0xca54d96e
  416571:	xchg   ecx,eax
  416572:	xchg   esi,eax
  416573:	outs   dx,BYTE PTR ds:[esi]
  416574:	pop    esp
  416575:	shl    DWORD PTR [edi],cl
  416577:	xchg   ebx,eax
  416578:	jmp    0x416556
  41657a:	mov    ecx,0xc1b464f5
  41657f:	test   BYTE PTR [edi+0x7a9ba561],dh
  416585:	xchg   ebp,ecx
  416587:	push   es
  416588:	addr16 aad 0xca
  41658b:	inc    ecx
  41658c:	dec    eax
  41658d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41658e:	push   edx
  41658f:	push   cs
  416590:	push   0x21
  416592:	inc    esi
  416593:	mov    ds:0x1a8a31ee,eax
  416598:	int3   
  416599:	repz adc ch,BYTE PTR ss:[ecx]
  41659d:	mov    ebp,0x3c69421b
  4165a2:	mov    BYTE PTR [edx+0x25],dh
  4165a5:	into   
  4165a6:	imul   edi,DWORD PTR [edx+0x736e2580],0xffffffac
  4165ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ae:	sub    eax,0x5c34cfc9
  4165b3:	imul   esi,DWORD PTR [ebx-0x2db7b33d],0x5c
  4165ba:	lods   al,BYTE PTR ds:[esi]
  4165bb:	lods   eax,DWORD PTR ds:[esi]
  4165bc:	shl    DWORD PTR [edx-0x1b],1
  4165bf:	rcr    BYTE PTR [edi],cl
  4165c1:	int    0x22
  4165c3:	adc    DWORD PTR ds:0xbb6f1e4,0xffffffb9
  4165ca:	lahf   
  4165cb:	dec    ebp
  4165cc:	fistp  DWORD PTR [ebx+ebp*2-0x3e27c0c5]
  4165d3:	push   cs
  4165d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d5:	loopne 0x4165e5
  4165d7:	cs xor al,0xb3
  4165da:	pop    edi
  4165db:	(bad)
  4165de:	dec    edi
  4165df:	xor    DWORD PTR [eiz*2+0x1e1d5bff],esp
  4165e6:	test   BYTE PTR [ecx+edi*4-0x77afa306],cl
  4165ed:	xchg   DWORD PTR [ebx],esi
  4165ef:	sbb    al,0x8e
  4165f1:	mov    bh,0x4f
  4165f3:	lods   eax,DWORD PTR ds:[esi]
  4165f4:	pusha  
  4165f5:	daa    
  4165f6:	dec    ebx
  4165f7:	push   es
  4165f8:	or     DWORD PTR [ecx-0x3d],edx
  4165fb:	stos   DWORD PTR es:[edi],eax
  4165fc:	push   ds
  4165fd:	cli    
  4165fe:	in     eax,0x34
  416600:	mov    esi,DWORD PTR [eax-0x4e]
  416603:	cs jl  0x4165d5
  416606:	fisub  DWORD PTR [eax]
  416608:	ins    BYTE PTR es:[edi],dx
  416609:	pop    edx
  41660a:	or     DWORD PTR [edx],ebx
  41660c:	scas   eax,DWORD PTR es:[edi]
  41660d:	inc    ecx
  41660e:	icebp  
  41660f:	retf   
  416610:	cmp    al,dh
  416612:	outs   dx,BYTE PTR ds:[esi]
  416613:	sub    eax,DWORD PTR [ecx-0x14]
  416616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416617:	nop
  416618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416619:	data16 sbb cl,0x0
  41661d:	(bad)  
  41661f:	shld   DWORD PTR [edi],eax,cl
  416622:	aam    0xb3
  416624:	add    cl,BYTE PTR ds:0xbef3adb0
  41662a:	or     edi,DWORD PTR [ecx+0x5e2adcf8]
  416630:	xor    DWORD PTR [eax-0x534b6a66],0x40ec4097
  41663a:	dec    edx
  41663b:	outs   dx,BYTE PTR ds:[esi]
  41663c:	or     dl,BYTE PTR [esi-0x7c094412]
  416642:	dec    ebp
  416643:	xchg   edi,eax
  416644:	push   esi
  416645:	dec    ecx
  416646:	push   ss
  416647:	bound  edx,QWORD PTR [edx-0x2b]
  41664a:	xor    esp,DWORD PTR [ecx+0x76]
  41664d:	xor    eax,0x8efb470e
  416652:	es in  al,dx
  416654:	sub    edx,DWORD PTR [ecx+0x342b051b]
  41665a:	sbb    DWORD PTR [eax-0x4badcf49],esp
  416660:	test   eax,0x8da99658
  416665:	nop
  416666:	sub    DWORD PTR [edx],0x21
  416669:	jmp    0x4165ef
  41666b:	sar    DWORD PTR [ebp*1+0x3350d51],1
  416672:	dec    edx
  416673:	shr    BYTE PTR [eax+edx*1],1
  416676:	dec    esi
  416677:	sub    eax,0x99316724
  41667c:	dec    al
  41667e:	sub    bh,al
  416680:	in     al,dx
  416681:	dec    esi
  416682:	cmp    esp,DWORD PTR [eax-0x62]
  416685:	rcr    DWORD PTR [ebp+0x66],1
  416688:	sar    ebx,1
  41668a:	lods   al,BYTE PTR ds:[esi]
  41668b:	call   0x8f62eff5
  416690:	cld    
  416691:	daa    
  416692:	sbb    al,0x73
  416694:	or     esi,ebp
  416696:	mov    esi,0x16481c8c
  41669b:	push   0x164af09f
  4166a0:	es (bad) 
  4166a2:	sbb    eax,DWORD PTR [eax+0x1b]
  4166a5:	stos   DWORD PTR es:[edi],eax
  4166a6:	jb     0x41669b
  4166a8:	cmp    DWORD PTR [ecx+eiz*8-0x756a9548],0x3da638f2
  4166b3:	hlt    
  4166b4:	or     eax,0x3e5bf197
  4166b9:	sbb    DWORD PTR [edi+0x249c0145],0xfffffffe
  4166c0:	fs (bad) 
  4166c2:	mov    cl,0x3
  4166c4:	and    BYTE PTR [ecx-0x732d2f5],bh
  4166ca:	repnz call 0x43a3:0x88626a39
  4166d2:	pop    ecx
  4166d3:	and    dl,0x6c
  4166d6:	xor    bl,BYTE PTR [ecx]
  4166d8:	sbb    al,0xc1
  4166da:	ja     0x4166ad
  4166dc:	xor    BYTE PTR [esi],0xe7
  4166df:	lahf   
  4166e0:	fdivr  DWORD PTR [esi+0x2b6494e6]
  4166e6:	dec    edi
  4166e7:	rcr    DWORD PTR [ebx+0x6474106a],0x45
  4166ee:	xchg   ecx,eax
  4166ef:	fisttp QWORD PTR [ebx+ecx*4+0x27496efa]
  4166f6:	ret    0x77c1
  4166f9:	pop    ebx
  4166fa:	sbb    ch,BYTE PTR [ebx]
  4166fc:	cld    
  4166fd:	sbb    al,0xb3
  4166ff:	(bad)  
  416700:	fdivr  QWORD PTR [ebx+0x78a3ba66]
  416706:	xchg   edx,eax
  416707:	in     eax,0xbd
  416709:	ds cmp al,0x8a
  41670c:	xor    BYTE PTR [esi-0x1d],0x69
  416710:	sub    dh,dh
  416712:	mov    edi,0x4568b86
  416717:	bt     DWORD PTR [ecx],ebp
  41671a:	lods   eax,DWORD PTR ds:[esi]
  41671b:	ret    
  41671c:	jo     0x41677c
  41671e:	inc    ebp
  41671f:	jb     0x4166fa
  416721:	jb     0x4166f9
  416723:	iret   
  416724:	inc    edx
  416725:	inc    edx
  416726:	sbb    DWORD PTR [edx-0x13fc6004],edi
  41672c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41672d:	or     eax,0x2b18cc28
  416732:	mov    ds:0xd25180ed,al
  416737:	adc    DWORD PTR [esp+edx*4],0xc58dac7
  41673e:	stc    
  41673f:	pop    esi
  416740:	dec    edi
  416741:	mov    esi,0x5eeaf6ed
  416746:	neg    BYTE PTR [edx+0x13]
  416749:	stc    
  41674a:	mov    esi,0x4376ac09
  41674f:	cwde   
  416750:	add    ah,BYTE PTR [eax-0x8]
  416753:	std    
  416754:	adc    ah,BYTE PTR [eax]
  416756:	test   BYTE PTR [ebp+0x5f],0x26
  41675a:	out    dx,eax
  41675b:	or     cl,BYTE PTR [esi]
  41675d:	in     eax,0x69
  41675f:	(bad)  
  416761:	mov    BYTE PTR [edx-0x78],dl
  416764:	xchg   DWORD PTR [edx+edx*1],eax
  416767:	stos   DWORD PTR es:[edi],eax
  416768:	mov    cl,0x82
  41676a:	pop    eax
  41676b:	xchg   edi,eax
  41676c:	mov    DWORD PTR [edi-0x34],ebp
  41676f:	iret   
  416770:	test   dl,ah
  416772:	retf   0x2eb1
  416775:	or     ebp,esi
  416777:	cdq    
  416778:	imul   ebp,ecx,0x76e8d294
  41677e:	mov    bl,0x91
  416780:	adc    BYTE PTR [ecx],0x4a
  416783:	fld    DWORD PTR ds:0xba826431
  416789:	jmp    0x416757
  41678b:	daa    
  41678c:	push   eax
  41678d:	add    al,0x2a
  41678f:	lock and esp,ebp
  416792:	sub    BYTE PTR [edi-0x11aa9aed],cl
  416798:	xchg   BYTE PTR [ecx-0x60],dl
  41679b:	pop    ecx
  41679c:	mov    ecx,0x71a81e18
  4167a1:	sub    al,bh
  4167a3:	push   esp
  4167a4:	repz mov ecx,edi
  4167a7:	lahf   
  4167a8:	dec    ecx
  4167a9:	add    DWORD PTR [eax],ebp
  4167ab:	dec    edx
  4167ac:	imul   esp,DWORD PTR [edx-0x80],0x7b57949b
  4167b3:	push   ebx
  4167b4:	and    DWORD PTR [ebx+eax*4+0x3bef2b6f],ebx
  4167bb:	in     eax,dx
  4167bc:	dec    esp
  4167bd:	bound  edi,QWORD PTR [ebx-0x29a6a5ce]
  4167c3:	into   
  4167c4:	jae    0x416754
  4167c6:	pop    esi
  4167c7:	pop    edx
  4167c8:	or     BYTE PTR [eax-0x34],dl
  4167cb:	les    ecx,FWORD PTR [edx+ebx*1-0x79b1128a]
  4167d2:	pushf  
  4167d3:	xor    esp,DWORD PTR [edi]
  4167d5:	in     eax,0x88
  4167d7:	ins    BYTE PTR es:[edi],dx
  4167d8:	push   ds
  4167d9:	xor    DWORD PTR [ecx+0x60e6136b],ebp
  4167df:	stos   BYTE PTR es:[edi],al
  4167e0:	lods   eax,DWORD PTR ds:[esi]
  4167e1:	and    eax,0x81c1d4bc
  4167e6:	ror    bh,1
  4167e8:	adc    dh,BYTE PTR [eax]
  4167ea:	xchg   edx,eax
  4167eb:	neg    BYTE PTR ds:0xf0b40cb6
  4167f1:	and    al,0x89
  4167f3:	jmp    0x4167dd
  4167f5:	scas   eax,DWORD PTR es:[edi]
  4167f6:	cmp    ebx,DWORD PTR [eax+0x222d5f0c]
  4167fc:	inc    eax
  4167fd:	ja     0x41679d
  4167ff:	das    
  416800:	jmp    0x4167cc
  416802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416803:	adc    edi,DWORD PTR [esi+0x17872d41]
  416809:	mov    edi,0xf78fa4bd
  41680e:	lods   eax,DWORD PTR ds:[esi]
  41680f:	iret   
  416810:	fnsave [ebx-0x76]
  416813:	je     0x4167e2
  416815:	and    BYTE PTR [eax-0x58],bl
  416818:	sbb    al,0xca
  41681a:	xor    bl,BYTE PTR [eax+ebp*4]
  41681d:	inc    esp
  41681e:	jecxz  0x416845
  416820:	jge    0x416872
  416822:	jg     0x4167ce
  416824:	or     DWORD PTR [esi+0x66aff85b],esi
  41682a:	or     DWORD PTR [esi],ebx
  41682c:	enter  0x16b1,0xa3
  416830:	cmp    eax,0xf955ee0b
  416835:	test   eax,0x70f9d94
  41683a:	sahf   
  41683b:	jbe    0x4167df
  41683d:	neg    DWORD PTR [ebx]
  41683f:	out    0xc,eax
  416841:	sbb    al,bl
  416843:	mov    edx,DWORD PTR [esi+ebp*8+0x4bdbde05]
  41684a:	call   0xed53dfde
  41684f:	(bad)  [eax-0x2376fcac]
  416856:	fs jmp 0x41681d
  416859:	sub    DWORD PTR [eax-0x45],esi
  41685c:	ret    
  41685d:	in     al,0xc8
  41685f:	es out 0x2a,al
  416862:	mov    ebx,0xc1f74aab
  416867:	retf   
  416868:	loopne 0x4167f3
  41686a:	or     eax,0xda0aee8
  41686f:	popa   
  416870:	or     bh,dh
  416872:	enter  0x9546,0x64
  416876:	leave  
  416877:	xchg   esi,eax
  416878:	rcl    BYTE PTR [ebp+0x2f7e7a],cl
  41687e:	sub    BYTE PTR [eax+0x75f899d7],dl
  416884:	sbb    DWORD PTR [esi+0x29f30785],ebp
  41688a:	(bad)  
  41688b:	in     al,dx
  41688c:	or     BYTE PTR [esi+0x21],0xa5
  416890:	cmp    ch,0x94
  416893:	call   0xa6cb5ca6
  416898:	ret    
  416899:	inc    eax
  41689a:	sub    esp,ebx
  41689c:	das    
  41689d:	loop   0x41690e
  41689f:	mov    ecx,0x3a57fd22
  4168a4:	pop    edi
  4168a5:	adc    eax,0x1acb775b
  4168aa:	addr16 jbe 0x4168ee
  4168ad:	mov    BYTE PTR [ebx],cl
  4168af:	dec    esi
  4168b0:	or     ecx,DWORD PTR [edx-0x1]
  4168b3:	test   DWORD PTR [ebp+esi*1+0x54587acc],ebp
  4168ba:	sbb    dh,BYTE PTR [ebp-0x1c013060]
  4168c0:	sbb    eax,0x7e9f2562
  4168c5:	jmp    0x268d:0xa34a58dd
  4168cc:	rcr    BYTE PTR [ebx-0x2b96365],1
  4168d2:	mov    eax,0xbdb165c6
  4168d7:	jecxz  0x41692a
  4168d9:	sub    bl,BYTE PTR [eax]
  4168db:	mov    edx,0xe3140743
  4168e0:	test   BYTE PTR [eax-0x43ab8864],cl
  4168e6:	and    eax,0x4999683a
  4168eb:	xor    ebx,eax
  4168ed:	js     0x416955
  4168ef:	inc    eax
  4168f0:	pop    eax
  4168f1:	fsub   QWORD PTR [ebx-0x40d4036]
  4168f7:	outs   dx,BYTE PTR ds:[esi]
  4168f8:	ret    0xbff0
  4168fb:	das    
  4168fc:	adc    al,0x24
  4168fe:	or     eax,0xf38e84dd
  416903:	sbb    DWORD PTR [ebp+0x7a],esi
  416906:	or     edi,DWORD PTR [eax-0xe]
  416909:	mov    ds:0x4eacc80,al
  41690e:	addr16 fwait
  416910:	push   edi
  416911:	push   esi
  416912:	fwait
  416913:	pop    esi
  416914:	mov    al,0x9a
  416916:	sbb    ch,0xac
  416919:	mov    DWORD PTR [ecx],eax
  41691b:	mov    ch,al
  41691d:	jne    0x4168ef
  41691f:	(bad)  
  416920:	fldcw  WORD PTR [edi]
  416922:	lds    esp,FWORD PTR [edi]
  416924:	ss fmul st,st(5)
  416927:	scas   al,BYTE PTR es:[edi]
  416928:	inc    ecx
  416929:	dec    esi
  41692a:	fstp   TBYTE PTR [ebp-0x55347773]
  416930:	push   0x57
  416932:	mov    ch,0x14
  416934:	stos   BYTE PTR es:[edi],al
  416935:	sub    DWORD PTR [eax-0x1a],edx
  416938:	clc    
  416939:	hlt    
  41693a:	sbb    BYTE PTR [eax],dl
  41693c:	and    DWORD PTR [esi+0x7b],edi
  41693f:	pop    ds
  416940:	js     0x4168f6
  416942:	xchg   edi,eax
  416943:	setne  BYTE PTR [esi-0x1688c667]
  41694a:	xor    al,0xf2
  41694c:	mov    bl,0xcd
  41694e:	push   eax
  41694f:	or     DWORD PTR [esi+0xcdeb152],ebx
  416955:	or     DWORD PTR [esi+0x6c],esp
  416958:	lea    edx,[ecx]
  41695a:	ret    0xdbe8
  41695d:	mov    al,0x21
  41695f:	mov    cl,0xa
  416961:	push   0x3922e06
  416966:	enter  0x1f8,0xea
  41696a:	scas   al,BYTE PTR es:[edi]
  41696b:	and    eax,0x96e16d47
  416970:	xchg   edx,eax
  416971:	xchg   BYTE PTR [edi+edi*8-0x3],bl
  416975:	ins    BYTE PTR es:[edi],dx
  416976:	arpl   WORD PTR [edi-0x5952ea4d],si
  41697c:	mov    ebx,0x2a239552
  416981:	or     BYTE PTR [edx-0x6063000a],0x73
  416988:	inc    ebx
  416989:	pop    esp
  41698a:	pop    ecx
  41698b:	adc    BYTE PTR [eax],ah
  41698d:	cvtdq2ps xmm1,XMMWORD PTR [ebx-0x2900038b]
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
