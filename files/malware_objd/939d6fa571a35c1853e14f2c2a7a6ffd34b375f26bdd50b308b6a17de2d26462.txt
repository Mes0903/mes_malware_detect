
939d6fa571a35c1853e14f2c2a7a6ffd34b375f26bdd50b308b6a17de2d26462.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	cmp    DWORD PTR [eax+0x4],0x0
  40100d:	je     0x4010b0
  401013:	mov    DWORD PTR [ebp-0x14],0xc6d
  40101a:	mov    ecx,DWORD PTR [ebp+0x8]
  40101d:	mov    edx,DWORD PTR [ecx+0x4]
  401020:	sub    edx,0x8
  401023:	shr    edx,1
  401025:	mov    DWORD PTR [ebp-0xc],edx
  401028:	mov    eax,DWORD PTR [ebp+0x8]
  40102b:	add    eax,0x8
  40102e:	mov    DWORD PTR [ebp-0x10],eax
  401031:	mov    DWORD PTR [ebp-0x4],0x0
  401038:	jmp    0x401043
  40103a:	mov    ecx,DWORD PTR [ebp-0x4]
  40103d:	add    ecx,0x1
  401040:	mov    DWORD PTR [ebp-0x4],ecx
  401043:	mov    edx,DWORD PTR [ebp-0x4]
  401046:	cmp    edx,DWORD PTR [ebp-0xc]
  401049:	jae    0x40109f
  40104b:	mov    eax,DWORD PTR [ebp-0x4]
  40104e:	mov    ecx,DWORD PTR [ebp-0x10]
  401051:	movzx  edx,WORD PTR [ecx+eax*2]
  401055:	sar    edx,0xc
  401058:	cmp    edx,0x3
  40105b:	jne    0x40109d
  40105d:	mov    eax,DWORD PTR [ebp-0x4]
  401060:	mov    ecx,DWORD PTR [ebp-0x10]
  401063:	movzx  edx,WORD PTR [ecx+eax*2]
  401067:	and    edx,0xfff
  40106d:	add    edx,0x1449
  401073:	mov    DWORD PTR [ebp-0x8],edx
  401076:	mov    eax,DWORD PTR [ebp+0x8]
  401079:	mov    ecx,DWORD PTR [ebp+0xc]
  40107c:	add    ecx,DWORD PTR [eax]
  40107e:	mov    edx,DWORD PTR [ebp-0x8]
  401081:	mov    eax,DWORD PTR [ecx+edx*1-0x1449]
  401088:	add    eax,DWORD PTR [ebp+0x10]
  40108b:	mov    ecx,DWORD PTR [ebp+0x8]
  40108e:	mov    edx,DWORD PTR [ebp+0xc]
  401091:	add    edx,DWORD PTR [ecx]
  401093:	mov    ecx,DWORD PTR [ebp-0x8]
  401096:	mov    DWORD PTR [edx+ecx*1-0x1449],eax
  40109d:	jmp    0x40103a
  40109f:	mov    edx,DWORD PTR [ebp+0x8]
  4010a2:	mov    eax,DWORD PTR [ebp+0x8]
  4010a5:	add    eax,DWORD PTR [edx+0x4]
  4010a8:	mov    DWORD PTR [ebp+0x8],eax
  4010ab:	jmp    0x401006
  4010b0:	mov    esp,ebp
  4010b2:	pop    ebp
  4010b3:	ret    
  4010b4:	int3   
  4010b5:	int3   
  4010b6:	int3   
  4010b7:	int3   
  4010b8:	int3   
  4010b9:	int3   
  4010ba:	int3   
  4010bb:	int3   
  4010bc:	int3   
  4010bd:	int3   
  4010be:	int3   
  4010bf:	int3   
  4010c0:	push   ebp
  4010c1:	mov    ebp,esp
  4010c3:	push   ecx
  4010c4:	mov    DWORD PTR [ebp-0x4],0x4
  4010cb:	push   0x40
  4010cd:	push   0x3000
  4010d2:	mov    eax,DWORD PTR [ebp+0x8]
  4010d5:	push   eax
  4010d6:	push   0x0
  4010d8:	call   DWORD PTR ds:0x443128
  4010de:	mov    esp,ebp
  4010e0:	pop    ebp
  4010e1:	ret    
  4010e2:	int3   
  4010e3:	int3   
  4010e4:	int3   
  4010e5:	int3   
  4010e6:	int3   
  4010e7:	int3   
  4010e8:	int3   
  4010e9:	int3   
  4010ea:	int3   
  4010eb:	int3   
  4010ec:	int3   
  4010ed:	int3   
  4010ee:	int3   
  4010ef:	int3   
  4010f0:	push   ebp
  4010f1:	mov    ebp,esp
  4010f3:	sub    esp,0x8
  4010f6:	mov    eax,DWORD PTR [ebp+0x8]
  4010f9:	mov    DWORD PTR [ebp-0x4],eax
  4010fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4010ff:	mov    DWORD PTR [ebp-0x8],ecx
  401102:	mov    edx,DWORD PTR [ebp-0x4]
  401105:	cmp    edx,DWORD PTR [ebp-0x8]
  401108:	jae    0x401111
  40110a:	mov    eax,DWORD PTR [ebp-0x4]
  40110d:	jmp    0x401114
  40110f:	jmp    0x401114
  401111:	mov    eax,DWORD PTR [ebp-0x8]
  401114:	mov    esp,ebp
  401116:	pop    ebp
  401117:	ret    
  401118:	int3   
  401119:	int3   
  40111a:	int3   
  40111b:	int3   
  40111c:	int3   
  40111d:	int3   
  40111e:	int3   
  40111f:	int3   
  401120:	push   ebp
  401121:	mov    ebp,esp
  401123:	sub    esp,0x14
  401126:	mov    DWORD PTR [ebp-0x4],0xf205f
  40112d:	mov    DWORD PTR [ebp-0xc],0x0
  401134:	jmp    0x40113f
  401136:	mov    eax,DWORD PTR [ebp-0xc]
  401139:	add    eax,0x4
  40113c:	mov    DWORD PTR [ebp-0xc],eax
  40113f:	mov    ecx,DWORD PTR [ebp-0xc]
  401142:	cmp    ecx,DWORD PTR [ebp+0xc]
  401145:	jae    0x4011a2
  401147:	mov    DWORD PTR [ebp-0x4],0x16a
  40114e:	mov    edx,DWORD PTR [ebp+0x8]
  401151:	add    edx,DWORD PTR [ebp-0xc]
  401154:	mov    eax,DWORD PTR [edx]
  401156:	add    eax,DWORD PTR [ebp-0xc]
  401159:	mov    ecx,DWORD PTR [ebp+0x8]
  40115c:	add    ecx,DWORD PTR [ebp-0xc]
  40115f:	mov    DWORD PTR [ecx],eax
  401161:	mov    DWORD PTR [ebp-0x4],0xf205f
  401168:	mov    edx,DWORD PTR [ebp-0xc]
  40116b:	add    edx,0x9d5
  401171:	mov    DWORD PTR ds:0x4431c4,edx
  401177:	mov    eax,DWORD PTR [ebp-0x8]
  40117a:	mov    DWORD PTR [ebp-0x10],eax
  40117d:	mov    DWORD PTR [ebp-0x4],0x16a
  401184:	mov    ecx,DWORD PTR ds:0x4431c4
  40118a:	mov    DWORD PTR [ebp-0x14],ecx
  40118d:	mov    edx,DWORD PTR [ebp+0x8]
  401190:	add    edx,DWORD PTR [ebp-0xc]
  401193:	mov    eax,DWORD PTR [edx]
  401195:	xor    eax,DWORD PTR [ebp-0x14]
  401198:	mov    ecx,DWORD PTR [ebp+0x8]
  40119b:	add    ecx,DWORD PTR [ebp-0xc]
  40119e:	mov    DWORD PTR [ecx],eax
  4011a0:	jmp    0x401136
  4011a2:	mov    esp,ebp
  4011a4:	pop    ebp
  4011a5:	ret    
  4011a6:	int3   
  4011a7:	int3   
  4011a8:	int3   
  4011a9:	int3   
  4011aa:	int3   
  4011ab:	int3   
  4011ac:	int3   
  4011ad:	int3   
  4011ae:	int3   
  4011af:	int3   
  4011b0:	push   ebp
  4011b1:	mov    ebp,esp
  4011b3:	mov    eax,DWORD PTR [ebp+0x8]
  4011b6:	mov    eax,DWORD PTR [eax-0x4]
  4011b9:	pop    ebp
  4011ba:	ret    
  4011bb:	int3   
  4011bc:	int3   
  4011bd:	int3   
  4011be:	int3   
  4011bf:	int3   
  4011c0:	push   ebp
  4011c1:	mov    ebp,esp
  4011c3:	sub    esp,0x174
  4011c9:	pusha  
  4011ca:	mov    DWORD PTR ds:0x4431c8,ebp
  4011d0:	mov    DWORD PTR [ebp-0x148],0x0
  4011da:	push   0x104
  4011df:	lea    eax,[ebp-0x110]
  4011e5:	push   eax
  4011e6:	call   DWORD PTR ds:0x44312c
  4011ec:	lea    ecx,[ebp-0x128]
  4011f2:	push   ecx
  4011f3:	push   0x20019
  4011f8:	push   0x0
  4011fa:	push   0x443080
  4011ff:	push   0x80000002
  401204:	call   DWORD PTR ds:0x443140
  40120a:	test   eax,eax
  40120c:	je     0x401213
  40120e:	jmp    0x401351
  401213:	mov    edx,DWORD PTR ds:0x443130
  401219:	mov    DWORD PTR [ebp-0x15c],edx
  40121f:	mov    DWORD PTR [ebp-0x138],0x402004
  401229:	mov    DWORD PTR [ebp-0x128],0x0
  401233:	mov    DWORD PTR [ebp-0x114],0x0
  40123d:	mov    DWORD PTR [ebp-0x140],0x64
  401247:	mov    DWORD PTR [ebp-0x11c],0x2
  401251:	mov    DWORD PTR [ebp-0x148],0x0
  40125b:	mov    DWORD PTR [ebp-0x124],0x0
  401265:	mov    DWORD PTR [ebp-0x13c],0x1
  40126f:	mov    DWORD PTR [ebp-0x148],0x0
  401279:	mov    DWORD PTR [ebp-0x124],0x0
  401283:	mov    DWORD PTR [ebp-0x13c],0x1
  40128d:	mov    DWORD PTR [ebp-0x118],0x3
  401297:	call   0x4015c0
  40129c:	mov    eax,DWORD PTR [ebp-0x138]
  4012a2:	push   eax
  4012a3:	call   0x4011b0
  4012a8:	add    esp,0x4
  4012ab:	mov    DWORD PTR [ebp-0x14c],eax
  4012b1:	mov    ecx,DWORD PTR ds:0x443014
  4012b7:	push   ecx
  4012b8:	lea    edx,[ebp-0x110]
  4012be:	push   edx
  4012bf:	call   DWORD PTR ds:0x443134
  4012c5:	lea    eax,[ebp+eax*1-0x110]
  4012cc:	push   eax
  4012cd:	call   DWORD PTR ds:0x443138
  4012d3:	push   0x0
  4012d5:	push   0x80
  4012da:	push   0x3
  4012dc:	push   0x0
  4012de:	mov    ecx,DWORD PTR [ebp-0x118]
  4012e4:	push   ecx
  4012e5:	mov    edx,DWORD PTR [ebp-0x13c]
  4012eb:	push   edx
  4012ec:	lea    eax,[ebp-0x110]
  4012f2:	push   eax
  4012f3:	call   DWORD PTR [ebp-0x15c]
  4012f9:	mov    DWORD PTR [ebp-0x12c],eax
  4012ff:	cmp    DWORD PTR [ebp-0x12c],0xffffffff
  401306:	je     0x401311
  401308:	cmp    DWORD PTR [ebp-0x12c],0x0
  40130f:	jne    0x401318
  401311:	xor    eax,eax
  401313:	jmp    0x4015b3
  401318:	mov    ecx,DWORD PTR [ebp-0x14c]
  40131e:	push   ecx
  40131f:	call   0x4010c0
  401324:	add    esp,0x4
  401327:	mov    DWORD PTR [ebp-0x144],eax
  40132d:	mov    edx,DWORD PTR [ebp-0x14c]
  401333:	push   edx
  401334:	push   0x0
  401336:	mov    eax,DWORD PTR [ebp-0x144]
  40133c:	push   eax
  40133d:	call   0x4016e0
  401342:	add    esp,0xc
  401345:	mov    ecx,DWORD PTR [ebp-0x14c]
  40134b:	mov    DWORD PTR [ebp-0x154],ecx
  401351:	mov    edx,DWORD PTR [ebp-0x148]
  401357:	cmp    edx,DWORD PTR [ebp-0x14c]
  40135d:	jae    0x4013e9
  401363:	mov    eax,DWORD PTR [ebp-0x154]
  401369:	push   eax
  40136a:	mov    ecx,DWORD PTR [ebp-0x140]
  401370:	push   ecx
  401371:	call   0x4010f0
  401376:	add    esp,0x8
  401379:	mov    DWORD PTR [ebp-0x158],eax
  40137f:	mov    edx,DWORD PTR [ebp-0x158]
  401385:	push   edx
  401386:	mov    eax,DWORD PTR [ebp-0x138]
  40138c:	add    eax,DWORD PTR [ebp-0x124]
  401392:	push   eax
  401393:	mov    ecx,DWORD PTR [ebp-0x144]
  401399:	add    ecx,DWORD PTR [ebp-0x148]
  40139f:	push   ecx
  4013a0:	call   0x401720
  4013a5:	add    esp,0xc
  4013a8:	mov    edx,DWORD PTR [ebp-0x11c]
  4013ae:	add    edx,DWORD PTR [ebp-0x140]
  4013b4:	add    edx,DWORD PTR [ebp-0x124]
  4013ba:	mov    DWORD PTR [ebp-0x124],edx
  4013c0:	mov    eax,DWORD PTR [ebp-0x148]
  4013c6:	add    eax,DWORD PTR [ebp-0x140]
  4013cc:	mov    DWORD PTR [ebp-0x148],eax
  4013d2:	mov    ecx,DWORD PTR [ebp-0x154]
  4013d8:	sub    ecx,DWORD PTR [ebp-0x158]
  4013de:	mov    DWORD PTR [ebp-0x154],ecx
  4013e4:	jmp    0x401351
  4013e9:	mov    edx,DWORD PTR [ebp-0x14c]
  4013ef:	push   edx
  4013f0:	mov    eax,DWORD PTR [ebp-0x144]
  4013f6:	push   eax
  4013f7:	call   0x401120
  4013fc:	add    esp,0x8
  4013ff:	mov    DWORD PTR [ebp-0x124],0x0
  401409:	mov    DWORD PTR [ebp-0x160],0x0
  401413:	mov    DWORD PTR [ebp-0x170],0x4419fc
  40141d:	mov    ecx,DWORD PTR [ebp-0x170]
  401423:	push   ecx
  401424:	call   0x4011b0
  401429:	add    esp,0x4
  40142c:	mov    DWORD PTR [ebp-0x164],eax
  401432:	mov    edx,DWORD PTR [ebp-0x164]
  401438:	push   edx
  401439:	call   0x4010c0
  40143e:	add    esp,0x4
  401441:	mov    DWORD PTR [ebp-0x120],eax
  401447:	mov    eax,DWORD PTR [ebp-0x164]
  40144d:	push   eax
  40144e:	push   0x0
  401450:	mov    ecx,DWORD PTR [ebp-0x120]
  401456:	push   ecx
  401457:	call   0x4016e0
  40145c:	add    esp,0xc
  40145f:	mov    edx,DWORD PTR [ebp-0x164]
  401465:	mov    DWORD PTR [ebp-0x16c],edx
  40146b:	mov    eax,DWORD PTR [ebp-0x160]
  401471:	cmp    eax,DWORD PTR [ebp-0x164]
  401477:	jae    0x401503
  40147d:	mov    ecx,DWORD PTR [ebp-0x16c]
  401483:	push   ecx
  401484:	mov    edx,DWORD PTR [ebp-0x140]
  40148a:	push   edx
  40148b:	call   0x4010f0
  401490:	add    esp,0x8
  401493:	mov    DWORD PTR [ebp-0x174],eax
  401499:	mov    eax,DWORD PTR [ebp-0x174]
  40149f:	push   eax
  4014a0:	mov    ecx,DWORD PTR [ebp-0x170]
  4014a6:	add    ecx,DWORD PTR [ebp-0x124]
  4014ac:	push   ecx
  4014ad:	mov    edx,DWORD PTR [ebp-0x120]
  4014b3:	add    edx,DWORD PTR [ebp-0x160]
  4014b9:	push   edx
  4014ba:	call   0x401720
  4014bf:	add    esp,0xc
  4014c2:	mov    eax,DWORD PTR [ebp-0x11c]
  4014c8:	add    eax,DWORD PTR [ebp-0x140]
  4014ce:	add    eax,DWORD PTR [ebp-0x124]
  4014d4:	mov    DWORD PTR [ebp-0x124],eax
  4014da:	mov    ecx,DWORD PTR [ebp-0x160]
  4014e0:	add    ecx,DWORD PTR [ebp-0x140]
  4014e6:	mov    DWORD PTR [ebp-0x160],ecx
  4014ec:	mov    edx,DWORD PTR [ebp-0x16c]
  4014f2:	sub    edx,DWORD PTR [ebp-0x174]
  4014f8:	mov    DWORD PTR [ebp-0x16c],edx
  4014fe:	jmp    0x40146b
  401503:	mov    eax,DWORD PTR [ebp-0x164]
  401509:	push   eax
  40150a:	mov    ecx,DWORD PTR [ebp-0x120]
  401510:	push   ecx
  401511:	call   0x401120
  401516:	add    esp,0x8
  401519:	mov    edx,DWORD PTR [ebp-0x144]
  40151f:	mov    eax,DWORD PTR [ebp-0x120]
  401525:	mov    DWORD PTR [edx],eax
  401527:	push   0x41000
  40152c:	call   0x4010c0
  401531:	add    esp,0x4
  401534:	mov    DWORD PTR [ebp-0x4],eax
  401537:	lea    ecx,[ebp-0x128]
  40153d:	push   ecx
  40153e:	push   0x20019
  401543:	push   0x0
  401545:	push   0x44306c
  40154a:	push   0x80000002
  40154f:	call   DWORD PTR ds:0x443140
  401555:	test   eax,eax
  401557:	je     0x40155d
  401559:	xor    eax,eax
  40155b:	jmp    0x4015b3
  40155d:	push   0x3e600
  401562:	mov    edx,DWORD PTR [ebp-0x144]
  401568:	push   edx
  401569:	mov    eax,DWORD PTR [ebp-0x4]
  40156c:	add    eax,0x300
  401571:	push   eax
  401572:	call   0x401720
  401577:	add    esp,0xc
  40157a:	mov    ecx,DWORD PTR [ebp-0x4]
  40157d:	sub    ecx,0x400000
  401583:	push   ecx
  401584:	mov    edx,DWORD PTR [ebp-0x4]
  401587:	push   edx
  401588:	mov    eax,DWORD PTR [ebp-0x120]
  40158e:	push   eax
  40158f:	call   0x401000
  401594:	add    esp,0xc
  401597:	mov    esp,DWORD PTR ds:0x4431c8
  40159d:	pop    ecx
  40159e:	mov    eax,DWORD PTR [ebp-0x4]
  4015a1:	add    eax,0x3e5c0
  4015a6:	mov    DWORD PTR [ebp-0x134],eax
  4015ac:	push   DWORD PTR [ebp-0x134]
  4015b2:	ret    
  4015b3:	mov    esp,ebp
  4015b5:	pop    ebp
  4015b6:	ret    
  4015b7:	int3   
  4015b8:	int3   
  4015b9:	int3   
  4015ba:	int3   
  4015bb:	int3   
  4015bc:	int3   
  4015bd:	int3   
  4015be:	int3   
  4015bf:	int3   
  4015c0:	push   ebp
  4015c1:	mov    ebp,esp
  4015c3:	mov    eax,ds:0x443014
  4015c8:	mov    BYTE PTR [eax+0xc],0x6c
  4015cc:	mov    ecx,DWORD PTR ds:0x443014
  4015d2:	mov    BYTE PTR [ecx+0xd],0x2e
  4015d6:	mov    edx,DWORD PTR ds:0x443014
  4015dc:	mov    BYTE PTR [edx+0x4],0x74
  4015e0:	mov    eax,ds:0x443014
  4015e5:	mov    BYTE PTR [eax+0x5],0x65
  4015e9:	mov    ecx,DWORD PTR ds:0x443014
  4015ef:	mov    BYTE PTR [ecx+0x6],0x6d
  4015f3:	mov    edx,DWORD PTR ds:0x443014
  4015f9:	mov    BYTE PTR [edx+0x7],0x33
  4015fd:	mov    eax,ds:0x443014
  401602:	mov    BYTE PTR [eax+0x8],0x32
  401606:	mov    ecx,DWORD PTR ds:0x443014
  40160c:	mov    BYTE PTR [ecx+0xe],0x64
  401610:	mov    edx,DWORD PTR ds:0x443014
  401616:	mov    BYTE PTR [edx+0xf],0x6c
  40161a:	mov    eax,ds:0x443014
  40161f:	mov    BYTE PTR [eax+0x10],0x6c
  401623:	mov    ecx,DWORD PTR ds:0x443014
  401629:	mov    BYTE PTR [ecx],0x5c
  40162c:	mov    edx,DWORD PTR ds:0x443014
  401632:	mov    BYTE PTR [edx+0x1],0x73
  401636:	mov    eax,ds:0x443014
  40163b:	mov    BYTE PTR [eax+0x2],0x79
  40163f:	mov    ecx,DWORD PTR ds:0x443014
  401645:	mov    BYTE PTR [ecx+0x3],0x73
  401649:	mov    edx,DWORD PTR ds:0x443014
  40164f:	mov    BYTE PTR [edx+0x9],0x5c
  401653:	mov    eax,ds:0x443014
  401658:	mov    BYTE PTR [eax+0xa],0x61
  40165c:	mov    ecx,DWORD PTR ds:0x443014
  401662:	mov    BYTE PTR [ecx+0xb],0x74
  401666:	pop    ebp
  401667:	ret    
  401668:	int3   
  401669:	int3   
  40166a:	int3   
  40166b:	int3   
  40166c:	int3   
  40166d:	int3   
  40166e:	int3   
  40166f:	int3   
  401670:	push   ebp
  401671:	mov    ebp,esp
  401673:	sub    esp,0xc
  401676:	mov    DWORD PTR [ebp-0x4],0x2ef
  40167d:	mov    DWORD PTR ds:0x4431cc,0x0
  401687:	jmp    0x401696
  401689:	mov    eax,ds:0x4431cc
  40168e:	add    eax,0x1
  401691:	mov    ds:0x4431cc,eax
  401696:	mov    ecx,DWORD PTR ds:0x4431cc
  40169c:	cmp    ecx,DWORD PTR [ebp+0x10]
  40169f:	jae    0x4016d8
  4016a1:	mov    DWORD PTR [ebp-0x8],0x5b8
  4016a8:	mov    edx,DWORD PTR [ebp+0x8]
  4016ab:	add    edx,DWORD PTR ds:0x4431cc
  4016b1:	movzx  eax,BYTE PTR [edx]
  4016b4:	mov    DWORD PTR [ebp-0xc],eax
  4016b7:	mov    DWORD PTR [ebp-0x8],0x38
  4016be:	mov    ecx,DWORD PTR [ebp+0xc]
  4016c1:	add    ecx,DWORD PTR ds:0x4431cc
  4016c7:	movzx  edx,BYTE PTR [ecx]
  4016ca:	cmp    DWORD PTR [ebp-0xc],edx
  4016cd:	je     0x4016d6
  4016cf:	mov    eax,0x1
  4016d4:	jmp    0x4016da
  4016d6:	jmp    0x401689
  4016d8:	xor    eax,eax
  4016da:	mov    esp,ebp
  4016dc:	pop    ebp
  4016dd:	ret    
  4016de:	int3   
  4016df:	int3   
  4016e0:	push   ebp
  4016e1:	mov    ebp,esp
  4016e3:	sub    esp,0x8
  4016e6:	mov    DWORD PTR [ebp-0x4],0x0
  4016ed:	jmp    0x4016f8
  4016ef:	mov    eax,DWORD PTR [ebp-0x4]
  4016f2:	add    eax,0x1
  4016f5:	mov    DWORD PTR [ebp-0x4],eax
  4016f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4016fb:	cmp    ecx,DWORD PTR [ebp+0x10]
  4016fe:	jge    0x401713
  401700:	mov    edx,DWORD PTR [ebp+0xc]
  401703:	mov    DWORD PTR [ebp-0x8],edx
  401706:	mov    eax,DWORD PTR [ebp+0x8]
  401709:	add    eax,DWORD PTR [ebp-0x4]
  40170c:	mov    cl,BYTE PTR [ebp-0x8]
  40170f:	mov    BYTE PTR [eax],cl
  401711:	jmp    0x4016ef
  401713:	mov    esp,ebp
  401715:	pop    ebp
  401716:	ret    
  401717:	int3   
  401718:	int3   
  401719:	int3   
  40171a:	int3   
  40171b:	int3   
  40171c:	int3   
  40171d:	int3   
  40171e:	int3   
  40171f:	int3   
  401720:	push   ebp
  401721:	mov    ebp,esp
  401723:	sub    esp,0xc
  401726:	mov    DWORD PTR ds:0x4431cc,0x0
  401730:	jmp    0x40173f
  401732:	mov    eax,ds:0x4431cc
  401737:	add    eax,0x1
  40173a:	mov    ds:0x4431cc,eax
  40173f:	mov    ecx,DWORD PTR ds:0x4431cc
  401745:	cmp    ecx,DWORD PTR [ebp+0x10]
  401748:	jae    0x401793
  40174a:	mov    DWORD PTR [ebp-0x8],0xf8
  401751:	mov    DWORD PTR [ebp-0x4],0x37
  401758:	mov    edx,DWORD PTR [ebp+0xc]
  40175b:	add    edx,DWORD PTR ds:0x4431cc
  401761:	movzx  eax,BYTE PTR [edx]
  401764:	mov    DWORD PTR [ebp-0xc],eax
  401767:	mov    DWORD PTR [ebp-0x4],0x37
  40176e:	mov    DWORD PTR [ebp-0x8],0xf8
  401775:	mov    ecx,DWORD PTR [ebp+0x8]
  401778:	add    ecx,DWORD PTR ds:0x4431cc
  40177e:	mov    dl,BYTE PTR [ebp-0xc]
  401781:	mov    BYTE PTR [ecx],dl
  401783:	mov    DWORD PTR [ebp-0x4],0x37
  40178a:	mov    DWORD PTR [ebp-0x8],0xf8
  401791:	jmp    0x401732
  401793:	mov    esp,ebp
  401795:	pop    ebp
  401796:	ret    
  401797:	jmp    DWORD PTR ds:0x443128
  40179d:	jmp    DWORD PTR ds:0x44312c
  4017a3:	jmp    DWORD PTR ds:0x443130
  4017a9:	jmp    DWORD PTR ds:0x443134
  4017af:	jmp    DWORD PTR ds:0x443138
  4017b5:	jmp    DWORD PTR ds:0x443140

Disassembly of section .textf1:

00402000 <.textf1>:
  402000:	add    dh,ah
  402002:	add    eax,DWORD PTR [eax]
  402004:	aad    0xe0
  402006:	inc    ebx
  402007:	add    BYTE PTR [edx-0x58af8b94],bl
  40200d:	data16 arpl WORD PTR [ecx+0x79],ax
  402011:	ins    DWORD PTR es:[edi],dx
  402012:	jb     0x402079
  402014:	xchg   BYTE PTR [edx+0x0],bh
  402017:	add    BYTE PTR [ecx-0x769b9e9a],dl
  40201d:	pusha  
  40201e:	bound  esi,QWORD PTR [edx+0x74]
  402021:	jnp    0x40209c
  402023:	inc    ebp
  402024:	ins    DWORD PTR es:[edi],dx
  402025:	dec    eax
  402026:	add    BYTE PTR [eax],al
  402028:	xchg   ecx,eax
  402029:	popaw  
  40202b:	mov    DWORD PTR fs:[eax+0x62],esp
  40202f:	jb     0x402065
  402031:	js     0x4020ac
  402033:	inc    ebp
  402034:	dec    ebp
  402035:	pop    ebp
  402036:	add    BYTE PTR [eax],al
  402038:	sbb    ch,BYTE PTR [edi+0x74]
  40203b:	dec    ebp
  40203c:	sub    ch,BYTE PTR [esi+0x75]
  40203f:	ins    BYTE PTR es:[edi],dx
  402040:	cmp    BYTE PTR [edx+0x61],al
  402043:	outs   dx,BYTE PTR ds:[esi]
  402044:	xor    DWORD PTR [esi+0x65],esp
  402047:	inc    ecx
  402048:	aad    0x9
  40204a:	add    BYTE PTR [eax],al
  40204c:	push   ss
  40204d:	js     0x4020b4
  40204f:	popa   
  402050:	or     DWORD PTR [edi+0x46],ebp
  402053:	imul   edi,ecx,0xf100416e
  402059:	js     0x4020cf
  40205b:	jb     0x402053
  40205d:	push   0x74
  40205f:	inc    ecx
  402060:	aad    0x9
  402062:	add    BYTE PTR [eax],al
  402064:	adc    ch,BYTE PTR [edi+0x74]
  402067:	push   edi
  402068:	add    BYTE PTR [eax],al
  40206a:	in     al,dx
  40206b:	arpl   WORD PTR [edi+ebp*2-0x1e],sp
  40206f:	js     0x4020b5
  402071:	imul   eax,edi,0xba74636e
  402077:	ja     0x4020f2
  402079:	inc    ecx
  40207a:	aad    0x9
  40207c:	add    BYTE PTR [eax],al
  40207e:	xchg   edx,eax
  40207f:	outs   dx,BYTE PTR ds:[esi]
  402080:	je     0x4020cf
  402082:	ret    0x756d
  402085:	ins    BYTE PTR es:[edi],dx
  402086:	mov    al,0x41
  402088:	popa   
  402089:	outs   dx,BYTE PTR ds:[esi]
  40208a:	mov    ecx,0xd5576565
  40208f:	or     DWORD PTR [eax],eax
  402091:	add    cl,bl
  402093:	or     BYTE PTR [eax+0x0],al
  402096:	loope  0x4020a0
  402098:	inc    eax
  402099:	add    BYTE PTR [ecx-0x3effbff8],bh
  40209f:	or     BYTE PTR [eax+0x0],al
  4020a2:	popf   
  4020a3:	or     BYTE PTR [eax+0x0],al
  4020a6:	or     DWORD PTR [eax],0x8750040
  4020ac:	inc    eax
  4020ad:	add    BYTE PTR [ebp+0x8],bl
  4020b0:	inc    eax
  4020b1:	add    BYTE PTR [edx],bl
  4020b3:	outs   dx,DWORD PTR ds:[esi]
  4020b4:	je     0x402106
  4020b6:	inc    edi
  4020b7:	arpl   WORD PTR gs:[ecx+0x39],ax
  4020bb:	outs   dx,BYTE PTR ds:[esi]
  4020bc:	jb     0x402123
  4020be:	inc    esi
  4020bf:	jns    0x4020c1
  4020c1:	add    BYTE PTR [ecx],ah
  4020c3:	gs popa 
  4020c5:	sbb    DWORD PTR fs:[ebx+0x62],esp
  4020c9:	jb     0x4020ff
  4020cb:	js     0x402146
  4020cd:	inc    ebp
  4020ce:	add    BYTE PTR [eax],al
  4020d0:	sbb    eax,0xfe00004b
  4020d5:	outs   dx,BYTE PTR ds:[esi]
  4020d6:	jb     0x402146
  4020d8:	lock xor esi,DWORD PTR gs:[edx]
  4020dc:	mov    bl,0x6d
  4020de:	ins    BYTE PTR es:[edi],dx
  4020df:	ins    BYTE PTR es:[edi],dx
  4020e0:	aad    0x9
  4020e2:	add    BYTE PTR [eax],al
  4020e4:	add    BYTE PTR [ecx+0x76],bh
  4020e7:	arpl   di,sp
  4020e9:	jge    0x402119
  4020eb:	fs icebp 
  4020ed:	add    BYTE PTR gs:[eax],al
  4020f0:	call   0xb8b38e63
  4020f5:	jge    0x4020f7
  4020f7:	add    BYTE PTR [eax-0x389c8988],bh
  4020fd:	jge    0x40212d
  4020ff:	fs test eax,0xc0000065
  402105:	outs   dx,BYTE PTR ds:[esi]
  402106:	ins    DWORD PTR es:[edi],dx
  402107:	arpl   WORD PTR [ebp-0x74ffff8e],sp
  40210d:	bound  esi,QWORD PTR [edx+0x74]
  402110:	mov    al,ds:0x81416c6a
  402115:	outs   dx,DWORD PTR gs:[esi]
  402117:	arpl   bp,dx
  402119:	or     DWORD PTR [eax],eax
  40211b:	add    BYTE PTR [ebx-0x7f8b8d9e],ch
  402121:	push   0x6c
  402123:	inc    ecx
  402124:	and    DWORD PTR [ebp+0x6f],0x9d563
  40212b:	add    BYTE PTR [eax+0x65616d63],cl
  402131:	pop    ebx
  402132:	imul   esp,DWORD PTR [ebp+0x0],0x66434a00
  402139:	inc    esi
  40213a:	cmp    al,0x66
  40213c:	add    BYTE PTR gs:[ebx],ch
  40213f:	popa   
  402140:	jb     0x4021b6
  402142:	inc    eax
  402143:	imul   ebp,DWORD PTR [eax+edx*2+0x27],0x36657463
  40214b:	jle    0x40214d
  40214d:	add    BYTE PTR ds:0x1470616d,cl
  402153:	data16 ins BYTE PTR es:[edi],dx
  402155:	outs   dx,DWORD PTR ds:[esi]
  402156:	test   BYTE PTR [ecx],0x0
  402159:	add    dh,bh
  40215b:	ins    BYTE PTR es:[edi],dx
  40215c:	jb     0x4021cc
  40215e:	clc    
  40215f:	xor    esi,DWORD PTR gs:[edx]
  402162:	stos   DWORD PTR es:[edi],eax
  402163:	ins    DWORD PTR es:[edi],dx
  402164:	ins    BYTE PTR es:[edi],dx
  402165:	ins    BYTE PTR es:[edi],dx
  402166:	aad    0x9
  402168:	add    BYTE PTR [eax],al
  40216a:	adc    ch,BYTE PTR [ebp+0x74]
  40216d:	push   eax
  40216e:	out    0x62,eax
  402170:	arpl   WORD PTR [ebp-0x1a],sp
  402173:	jbe    0x4021bd
  402175:	gs mov ah,0x79
  402178:	add    BYTE PTR [eax],al
  40217a:	aad    0x9
  40217c:	rol    BYTE PTR [ebx],1
  40217e:	aad    0xad
  402180:	pop    ecx
  402181:	add    ch,dl
  402183:	loopne 0x402188
  402185:	add    ch,dl
  402187:	loopne 0x40218c
  402189:	add    ch,dl
  40218b:	loopne 0x402190
  40218d:	add    ch,dl
  40218f:	loopne 0x402194
  402191:	add    ch,dl
  402193:	loopne 0x402198
  402195:	add    ch,dl
  402197:	loopne 0x40219c
  402199:	add    BYTE PTR [eax],al
  40219b:	add    ch,dl
  40219d:	loopne 0x4021a2
  40219f:	add    ch,dl
  4021a1:	loopne 0x4021a6
  4021a3:	add    ch,dl
  4021a5:	loopne 0x4021aa
  4021a7:	add    ch,dl
  4021a9:	loopne 0x4021ae
  4021ab:	add    ch,dl
  4021ad:	loopne 0x4021b2
  4021af:	add    ch,dl
  4021b1:	loopne 0x4021b6
  4021b3:	add    ch,dl
  4021b5:	loopne 0x4021ba
  4021b7:	add    ch,dl
  4021b9:	loopne 0x4021be
  4021bb:	add    ch,dl
  4021bd:	loopne 0x4021c3
  4021bf:	add    ch,dl
  4021c1:	loopne 0x4021c6
  4021c3:	add    ch,dl
  4021c5:	loopne 0x4021ca
  4021c7:	add    ch,dl
  4021c9:	loopne 0x4021ce
  4021cb:	add    ch,dl
  4021cd:	loopne 0x4021d2
  4021cf:	add    ch,dl
  4021d1:	loopne 0x4021d6
  4021d3:	add    ch,dl
  4021d5:	loopne 0x4021da
  4021d7:	add    ch,dl
  4021d9:	loopne 0x4021de
  4021db:	add    ch,dl
  4021dd:	loopne 0x4021e2
  4021df:	add    ch,dl
  4021e1:	loopne 0x4021e6
  4021e3:	add    ch,dl
  4021e5:	loopne 0x4021ea
  4021e7:	add    ch,dl
  4021e9:	loopne 0x4021ee
  4021eb:	add    ch,dl
  4021ed:	loopne 0x4021f2
  4021ef:	add    ch,dl
  4021f1:	loopne 0x4021f6
  4021f3:	add    ch,dl
  4021f5:	loopne 0x4021fa
  4021f7:	add    ch,dl
  4021f9:	or     ecx,ebp
  4021fb:	add    edx,ebp
  4021fd:	or     ecx,ebp
  4021ff:	add    eax,DWORD PTR [eax]
  402201:	add    ch,dl
  402203:	or     ecx,ebp
  402205:	add    edx,ebp
  402207:	or     ecx,ebp
  402209:	add    edx,ebp
  40220b:	or     ecx,ebp
  40220d:	add    edx,ebp
  40220f:	or     ecx,ebp
  402211:	add    edx,ebp
  402213:	or     ecx,ebp
  402215:	add    edx,ebp
  402217:	or     ecx,ebp
  402219:	add    edx,ebp
  40221b:	or     ecx,ebp
  40221d:	add    edx,ebp
  40221f:	or     ecx,ebp
  402221:	add    edx,ebp
  402223:	or     ecx,ebp
  402225:	add    edx,ebp
  402227:	or     ecx,ebp
  402229:	add    edx,ebp
  40222b:	or     ecx,ebp
  40222d:	add    edx,ebp
  40222f:	or     ecx,ebp
  402231:	add    edx,ebp
  402233:	or     ecx,ebp
  402235:	add    edx,ebp
  402237:	or     ecx,ebp
  402239:	add    edx,ebp
  40223b:	or     ecx,ebp
  40223d:	add    edx,ebp
  40223f:	or     ecx,ebp
  402241:	add    edx,ebp
  402243:	or     ecx,ebp
  402245:	add    edx,ebp
  402247:	or     ecx,ebp
  402249:	add    edx,ebp
  40224b:	or     ecx,ebp
  40224d:	add    edx,ebp
  40224f:	or     ecx,ebp
  402251:	add    edx,ebp
  402253:	or     ecx,ebp
  402255:	add    edx,ebp
  402257:	or     ecx,ebp
  402259:	add    edx,ebp
  40225b:	or     ecx,ebp
  40225d:	add    edx,ebp
  40225f:	or     ecx,ebp
  402261:	add    edx,ebp
  402263:	or     ecx,ebp
  402265:	add    eax,DWORD PTR [eax]
  402267:	add    ch,dl
  402269:	or     ecx,ebp
  40226b:	add    edx,ebp
  40226d:	or     ecx,ebp
  40226f:	add    edx,ebp
  402271:	or     ecx,ebp
  402273:	add    edx,ebp
  402275:	or     DWORD PTR [eax],eax
  402277:	jmp    0xe9402c52
  40227c:	(bad)  
  40227d:	or     DWORD PTR [eax],eax
  40227f:	jmp    0xe9402c5a
  402284:	(bad)  
  402285:	or     DWORD PTR [eax],eax
  402287:	mov    ecx,0x9d000995
  40228c:	(bad)  [eax+eax*1]
  40228f:	cmp    DWORD PTR [edx],eax
  402291:	adc    cl,BYTE PTR [edi-0x17]
  402294:	(bad)  
  402295:	or     DWORD PTR [eax],eax
  402297:	jmp    0x9402c72
  40229c:	(bad)  
  40229d:	or     eax,DWORD PTR [ecx]
  40229f:	repnz xlat BYTE PTR ds:[ebx]
  4022a1:	add    eax,DWORD PTR [eax]
  4022a3:	jmp    0xe9403006
  4022a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a9:	or     DWORD PTR [eax],eax
  4022ab:	jmp    0xe402c86
  4022b0:	retf   0xb
  4022b3:	jmp    0xe9402c7e
  4022b8:	es or  eax,0x49d6e900
  4022be:	add    cl,ch
  4022c0:	out    0x9,al
  4022c2:	add    cl,ch
  4022c4:	fmul   DWORD PTR [ecx]
  4022c6:	add    ah,ch
  4022c8:	(bad)  
  4022c9:	or     al,BYTE PTR [eax]
  4022cb:	call   0xa1622d0
  4022d0:	add    ah,ch
  4022d2:	(bad)  
  4022d3:	or     al,BYTE PTR [eax]
  4022d5:	jmp    0xe9402cb0
  4022da:	mov    BYTE PTR ds:0xf092e900,0xff
  4022e1:	jmp    0xeb402cbc
  4022e6:	(bad)  
  4022e7:	or     DWORD PTR [ecx+0x19d6e9],eax
  4022ed:	jmp    0x402cb8
  4022f2:	jl     0x402300
  4022f4:	adc    BYTE PTR [eax],al
  4022f6:	ins    BYTE PTR es:[edi],dx
  4022f7:	sbb    al,0x0
  4022f9:	add    BYTE PTR [esp+ecx*1+0x0],ch
  4022fd:	add    BYTE PTR [esp+ecx*1],ch
  402300:	add    BYTE PTR [eax],al
  402302:	cmp    al,0xc
  402304:	add    BYTE PTR [eax],al
  402306:	sub    al,0xc
  402308:	add    BYTE PTR [eax],al
  40230a:	or     BYTE PTR [eax+0x3],dh
  40230d:	add    BYTE PTR [eax+0xb],dh
  402310:	add    BYTE PTR [eax],al
  402312:	cmp    al,0xc
  402314:	add    BYTE PTR [eax],al
  402316:	sub    al,0xc
  402318:	add    BYTE PTR [eax],al
  40231a:	sub    al,0xc
  40231c:	add    BYTE PTR [eax],al
  40231e:	cld    
  40231f:	or     eax,DWORD PTR [eax]
  402321:	add    ah,bh
  402323:	or     eax,DWORD PTR [eax]
  402325:	add    ah,ch
  402327:	or     eax,DWORD PTR [eax]
  402329:	add    ah,ch
  40232b:	jmp    0x402330
  40232d:	add    BYTE PTR [eax+0x12],dh
  402330:	add    BYTE PTR [eax],al
  402332:	add    BYTE PTR [eax],al
  402334:	cld    
  402335:	or     eax,DWORD PTR [eax]
  402337:	add    ah,ch
  402339:	or     eax,DWORD PTR [eax]
  40233b:	add    ah,ch
  40233d:	or     eax,DWORD PTR [eax]
  40233f:	add    BYTE PTR [ebx+ecx*1+0xbbc0000],bh
  402346:	add    BYTE PTR [eax],al
  402348:	lods   al,BYTE PTR ds:[esi]
  402349:	or     eax,DWORD PTR [eax]
  40234b:	add    BYTE PTR [ebx+ecx*1+0xbbc0000],ch
  402352:	add    BYTE PTR [eax],al
  402354:	mov    esp,0xac00000b
  402359:	or     eax,DWORD PTR [eax]
  40235b:	add    BYTE PTR [ebx+ecx*1+0xb7c0000],ch
  402362:	add    BYTE PTR [eax],al
  402364:	jl     0x402381
  402366:	add    BYTE PTR [eax],al
  402368:	or     BYTE PTR [ecx],cl
  40236a:	add    BYTE PTR [eax],al
  40236c:	aad    0xe0
  40236e:	add    eax,DWORD PTR [eax]
  402370:	aad    0xe0
  402372:	add    eax,DWORD PTR [eax]
  402374:	aad    0xe0
  402376:	add    eax,DWORD PTR [eax]
  402378:	aad    0xe0
  40237a:	add    eax,DWORD PTR [eax]
  40237c:	aad    0xe0
  40237e:	add    eax,DWORD PTR [eax]
  402380:	aad    0xe0
  402382:	add    eax,DWORD PTR [eax]
  402384:	aad    0xd6
  402386:	outs   dx,DWORD PTR ds:[esi]
  402387:	gs mov ebp,0xd5000394
  40238d:	mov    ss,WORD PTR [eax+0x13e0d503]
  402393:	add    ch,dl
  402395:	loopne 0x402332
  402397:	add    eax,DWORD PTR [eax]
  402399:	add    ch,dl
  40239b:	loopne 0x40239c
  40239d:	call   FWORD PTR [edx]
  40239f:	loope  0x4023a4
  4023a1:	add    ch,dl
  4023a3:	loopne 0x4023a8
  4023a5:	add    ch,dl
  4023a7:	loopne 0x4023ac
  4023a9:	add    ch,dl
  4023ab:	add    BYTE PTR [eax+eax*1],al
  4023ae:	jne    0x4023b6
  4023b0:	pusha  
  4023b1:	popa   
  4023b2:	imul   eax,DWORD PTR [ecx+0x4],0x1f0cd500
  4023b9:	add    ch,dl
  4023bb:	loopne 0x402370
  4023bd:	add    edx,ebp
  4023bf:	loopne 0x4023ca
  4023c1:	add    ch,dl
  4023c3:	loopne 0x40235c
  4023c5:	add    edx,ebp
  4023c7:	loopne 0x4023cc
  4023c9:	add    ch,dl
  4023cb:	loopne 0x4023d0
  4023cd:	add    ch,dl
  4023cf:	loopne 0x4023d4
  4023d1:	add    ch,dl
  4023d3:	and    BYTE PTR [eax+eax*1],al
  4023d6:	xchg   ebp,eax
  4023d7:	(bad)  
  4023d8:	jno    0x40243f
  4023da:	xor    DWORD PTR [eax],eax
  4023dc:	arpl   WORD PTR [eax],ax
  4023de:	aad    0xac
  4023e0:	push   ds
  4023e1:	add    ch,dl
  4023e3:	loopne 0x4023c8
  4023e5:	add    edx,ebp
  4023e7:	or     ecx,ebp
  4023e9:	sub    edx,ebp
  4023eb:	or     ecx,ebp
  4023ed:	popf   
  4023ee:	(bad)  
  4023ef:	or     ecx,ebp
  4023f1:	add    edx,ebp
  4023f3:	or     ecx,ebp
  4023f5:	add    edx,ebp
  4023f7:	or     ecx,ebp
  4023f9:	add    edx,ebp
  4023fb:	or     DWORD PTR [ecx-0x2afffffd],ebp
  402401:	dec    ebx
  402402:	jmp    0xe949f90a
  402407:	add    edx,ebp
  402409:	or     ecx,ebp
  40240b:	add    edx,ebp
  40240d:	or     ecx,ebp
  40240f:	add    edx,ebp
  402411:	or     ecx,ebp
  402413:	add    edx,ebp
  402415:	or     ecx,ebp
  402417:	add    edx,ebp
  402419:	or     ecx,ebp
  40241b:	add    edx,ebp
  40241d:	or     ecx,ebp
  40241f:	add    edx,ebp
  402421:	or     ecx,ebp
  402423:	add    edx,ebp
  402425:	or     ecx,ebp
  402427:	add    edx,ebp
  402429:	or     ecx,ebp
  40242b:	add    edx,ebp
  40242d:	or     ecx,ebp
  40242f:	add    edx,ebp
  402431:	or     ecx,ebp
  402433:	add    edx,ebp
  402435:	or     ecx,ebp
  402437:	add    edx,ebp
  402439:	or     ecx,ebp
  40243b:	add    edx,ebp
  40243d:	or     ecx,ebp
  40243f:	add    edx,ebp
  402441:	or     ecx,ebp
  402443:	add    edx,ebp
  402445:	or     ecx,ebp
  402447:	add    edx,ebp
  402449:	or     ecx,ebp
  40244b:	add    edx,ebp
  40244d:	or     ecx,ebp
  40244f:	add    edx,ebp
  402451:	or     ecx,ebp
  402453:	add    edx,ebp
  402455:	or     ecx,ebp
  402457:	add    edx,ebp
  402459:	or     ecx,ebp
  40245b:	add    edx,ebp
  40245d:	or     ecx,ebp
  40245f:	add    edx,ebp
  402461:	or     DWORD PTR [eax],eax
  402463:	jmp    0xa162468
  402468:	add    cl,ch
  40246a:	(bad)  
  40246b:	or     DWORD PTR [eax],eax
  40246d:	jmp    0xe9402e48
  402472:	(bad)  
  402473:	or     DWORD PTR [eax],eax
  402475:	jmp    0xe9402e50
  40247a:	(bad)  
  40247b:	or     DWORD PTR [eax],eax
  40247d:	jmp    0xe9402e58
  402482:	(bad)  
  402483:	or     DWORD PTR [eax],eax
  402485:	jmp    0xe9402e60
  40248a:	(bad)  
  40248b:	or     DWORD PTR [eax],eax
  40248d:	jmp    0xe9402e68
  402492:	(bad)  
  402493:	or     DWORD PTR [eax],eax
  402495:	jmp    0xe9402e70
  40249a:	(bad)  
  40249b:	or     DWORD PTR [eax],eax
  40249d:	jmp    0xe9402e78
  4024a2:	(bad)  
  4024a3:	or     DWORD PTR [eax],eax
  4024a5:	jmp    0xe9402e80
  4024aa:	(bad)  
  4024ab:	or     DWORD PTR [eax],eax
  4024ad:	jmp    0xe9402e88
  4024b2:	(bad)  
  4024b3:	or     DWORD PTR [eax],eax
  4024b5:	jmp    0xe9402e90
  4024ba:	(bad)  
  4024bb:	or     DWORD PTR [eax],eax
  4024bd:	jmp    0xe9402e98
  4024c2:	(bad)  
  4024c3:	or     DWORD PTR [eax],eax
  4024c5:	jmp    0xe9402ea0
  4024ca:	add    BYTE PTR [eax],al
  4024cc:	(bad)  
  4024cd:	or     DWORD PTR [eax],eax
  4024cf:	jmp    0xe9402eaa
  4024d4:	(bad)  
  4024d5:	or     DWORD PTR [eax],eax
  4024d7:	jmp    0xe9402eb2
  4024dc:	(bad)  
  4024dd:	or     DWORD PTR [eax],eax
  4024df:	add    BYTE PTR [eax+ecx*1+0x8ac0000],ch
  4024e6:	add    BYTE PTR [eax],al
  4024e8:	jl     0x4024f2
  4024ea:	add    BYTE PTR [eax],al
  4024ec:	jl     0x4024f6
  4024ee:	add    BYTE PTR [eax],al
  4024f0:	ins    BYTE PTR es:[edi],dx
  4024f1:	or     BYTE PTR [eax],al
  4024f3:	add    BYTE PTR [eax+ecx*1+0x0],ch
  4024f7:	add    BYTE PTR [eax+ecx*1+0x0],bh
  4024fb:	add    BYTE PTR [eax+ecx*1+0x0],bh
  4024ff:	add    BYTE PTR [eax+ecx*1+0x0],ch
  402503:	add    BYTE PTR [eax+ecx*1+0x0],ch
  402507:	add    BYTE PTR [eax+ecx*1],bh
  40250a:	add    BYTE PTR [eax],al
  40250c:	cmp    al,0x8
  40250e:	add    BYTE PTR [eax],al
  402510:	sub    al,0x8
  402512:	add    BYTE PTR [eax],al
  402514:	sub    al,0x8
  402516:	add    BYTE PTR [eax],al
  402518:	cmp    al,0x8
  40251a:	add    BYTE PTR [eax],al
  40251c:	cmp    al,0x8
  40251e:	add    BYTE PTR [eax],al
  402520:	sub    al,0x8
  402522:	add    BYTE PTR [eax],al
  402524:	sub    al,0x8
  402526:	add    BYTE PTR [eax],al
  402528:	cld    
  402529:	pop    es
  40252a:	add    BYTE PTR [eax],al
  40252c:	cld    
  40252d:	pop    es
  40252e:	add    BYTE PTR [eax],al
  402530:	add    BYTE PTR [eax],al
  402532:	in     al,dx
  402533:	pop    es
  402534:	add    BYTE PTR [eax],al
  402536:	in     al,dx
  402537:	pop    es
  402538:	add    BYTE PTR [eax],al
  40253a:	cld    
  40253b:	pop    es
  40253c:	add    BYTE PTR [eax],al
  40253e:	cld    
  40253f:	pop    es
  402540:	add    BYTE PTR [eax],al
  402542:	in     al,dx
  402543:	pop    es
  402544:	add    BYTE PTR [eax],al
  402546:	in     al,dx
  402547:	pop    es
  402548:	add    BYTE PTR [eax],al
  40254a:	mov    esp,0xbc000007
  40254f:	pop    es
  402550:	add    BYTE PTR [eax],al
  402552:	lods   al,BYTE PTR ds:[esi]
  402553:	pop    es
  402554:	add    BYTE PTR [eax],al
  402556:	lods   al,BYTE PTR ds:[esi]
  402557:	pop    es
  402558:	add    BYTE PTR [eax],al
  40255a:	aad    0xe0
  40255c:	add    eax,DWORD PTR [eax]
  40255e:	aad    0xe0
  402560:	add    eax,DWORD PTR [eax]
  402562:	aad    0xe0
  402564:	add    eax,DWORD PTR [eax]
  402566:	aad    0xe0
  402568:	add    eax,DWORD PTR [eax]
  40256a:	aad    0xe0
  40256c:	add    eax,DWORD PTR [eax]
  40256e:	aad    0xe0
  402570:	add    eax,DWORD PTR [eax]
  402572:	aad    0xe0
  402574:	add    eax,DWORD PTR [eax]
  402576:	aad    0xe0
  402578:	add    eax,DWORD PTR [eax]
  40257a:	aad    0xe0
  40257c:	add    eax,DWORD PTR [eax]
  40257e:	aad    0xe0
  402580:	add    eax,DWORD PTR [eax]
  402582:	aad    0xe0
  402584:	add    eax,DWORD PTR [eax]
  402586:	aad    0xe0
  402588:	add    eax,DWORD PTR [eax]
  40258a:	aad    0xe0
  40258c:	add    eax,DWORD PTR [eax]
  40258e:	aad    0xe0
  402590:	add    eax,DWORD PTR [eax]
  402592:	aad    0xe0
  402594:	add    eax,DWORD PTR [eax]
  402596:	add    BYTE PTR [eax],al
  402598:	aad    0xe0
  40259a:	add    eax,DWORD PTR [eax]
  40259c:	aad    0x20
  40259e:	cwde   
  40259f:	add    edx,ebp
  4025a1:	xor    al,0x98
  4025a3:	add    edx,ebp
  4025a5:	adc    al,0x98
  4025a7:	add    edx,ebp
  4025a9:	ficom  WORD PTR [edi-0x68332afd]
  4025af:	add    edx,ebp
  4025b1:	enter  0x397,0xd5
  4025b5:	sub    BYTE PTR [eax-0x6fe32afd],dl
  4025bb:	add    edx,ebp
  4025bd:	ds nop
  4025bf:	add    edx,ebp
  4025c1:	push   esp
  4025c2:	nop
  4025c3:	add    edx,ebp
  4025c5:	jb     0x402557
  4025c7:	add    edx,ebp
  4025c9:	test   BYTE PTR [eax-0x6f8b2afd],dl
  4025cf:	add    edx,ebp
  4025d1:	xchg   esp,eax
  4025d2:	nop
  4025d3:	add    edx,ebp
  4025d5:	or     DWORD PTR [ebp-0x1af62970],edx
  4025db:	nop
  4025dc:	(bad)  
  4025dd:	or     ecx,esi
  4025df:	nop
  4025e0:	(bad)  
  4025e1:	or     ebx,eax
  4025e3:	nop
  4025e4:	(bad)  
  4025e5:	or     ebp,eax
  4025e7:	nop
  4025e8:	(bad)  
  4025e9:	or     DWORD PTR [edi],ebp
  4025eb:	xchg   ecx,eax
  4025ec:	(bad)  
  4025ed:	or     DWORD PTR [edi],edx
  4025ef:	xchg   ecx,eax
  4025f0:	(bad)  
  4025f1:	or     ecx,esi
  4025f3:	nop
  4025f4:	(bad)  
  4025f5:	or     DWORD PTR [ecx-0x6f],esi
  4025f8:	(bad)  
  4025f9:	or     DWORD PTR [ecx-0x29ffff6f],eax
  4025ff:	or     DWORD PTR [edi+0x2709d691],ecx
  402605:	xchg   ecx,eax
  402606:	(bad)  
  402607:	or     DWORD PTR [ebx-0x6f],ecx
  40260a:	(bad)  
  40260b:	or     DWORD PTR [ebx-0x6f],eax
  40260e:	(bad)  
  40260f:	or     ebx,edi
  402611:	xchg   ecx,eax
  402612:	(bad)  
  402613:	or     DWORD PTR [edi-0x6cf6296f],ebx
  402619:	xchg   ecx,eax
  40261a:	(bad)  
  40261b:	or     DWORD PTR [ebp+0x7909d691],ebx
  402621:	xchg   edx,eax
  402622:	(bad)  
  402623:	or     DWORD PTR [ebx-0x6e],ecx
  402626:	(bad)  
  402627:	or     DWORD PTR [ebp-0x71],ecx
  40262a:	(bad)  
  40262b:	or     ecx,ebp
  40262d:	add    edx,ebp
  40262f:	or     DWORD PTR [edi-0x52f6295a],edx
  402635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402636:	(bad)  
  402637:	or     DWORD PTR [edi],eax
  402639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40263a:	(bad)  
  40263b:	or     ebp,ebp
  40263d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40263e:	(bad)  
  40263f:	or     ebp,ebx
  402641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402642:	(bad)  
  402643:	or     DWORD PTR [ebx-0x7af6295b],edi
  402649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40264a:	(bad)  
  40264b:	or     DWORD PTR [edi],esi
  40264d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40264e:	(bad)  
  40264f:	or     DWORD PTR [eax],eax
  402651:	jmp    0xc740302c
  402656:	jns    0x402665
  402658:	add    BYTE PTR ds:0xc1000d70,ah
  40265e:	jns    0x40266d
  402660:	add    BYTE PTR [ecx],bl
  402662:	add    BYTE PTR [eax],al
  402664:	jo     0x402673
  402666:	add    BYTE PTR [ecx],cl
  402668:	js     0x402677
  40266a:	add    BYTE PTR [edi-0x54fff28f],dh
  402670:	cmp    DWORD PTR ds:0xd314700,ecx
  402676:	add    BYTE PTR [ebx+0x39],cl
  402679:	or     eax,0xd318100
  40267e:	add    BYTE PTR [ebp+0x39],ch
  402681:	or     eax,0xd31b900
  402686:	add    BYTE PTR [ebx+0x39],bl
  402689:	or     eax,0xd300900
  40268e:	add    BYTE PTR [ebx],al
  402690:	js     0x40269f
  402692:	add    cl,ch
  402694:	(bad)  
  402695:	or     DWORD PTR [eax],eax
  402697:	pop    ebp
  402698:	or     ax,0x4b00
  40269c:	or     ax,0x5700
  4026a0:	inc    esi
  4026a1:	or     eax,0xd463b00
  4026a6:	add    BYTE PTR [ebx],al
  4026a8:	inc    esi
  4026a9:	or     eax,0xd41ed00
  4026ae:	add    bh,dl
  4026b0:	imul   ecx,DWORD PTR ds:0xd61c300,0xd69b100
  4026ba:	add    BYTE PTR [ecx],dh
  4026bc:	or     ax,0x4100
  4026c0:	inc    esi
  4026c1:	or     eax,0xd464100
  4026c6:	add    BYTE PTR [ebp+0x0],ah
  4026c9:	add    BYTE PTR [esi+0xd],al
  4026cc:	add    BYTE PTR [eax],al
  4026ce:	jp     0x40274c
  4026d0:	add    eax,DWORD PTR [eax]
  4026d2:	pop    edx
  4026d3:	jl     0x4026d8
  4026d5:	add    BYTE PTR [ebp+edi*2+0x3],al
  4026d9:	add    BYTE PTR [edx+0x7c],ah
  4026dc:	add    eax,DWORD PTR [eax]
  4026de:	dec    esp
  4026df:	jl     0x4026e4
  4026e1:	add    BYTE PTR [esp+edi*2+0x3],cl
  4026e5:	add    BYTE PTR [edx-0x71fffc82],bh
  4026eb:	jle    0x4026f0
  4026ed:	add    BYTE PTR [edx+0x7e],bl
  4026f0:	add    eax,DWORD PTR [eax]
  4026f2:	mov    edx,0xe800037f
  4026f7:	jg     0x4026fc
  4026f9:	add    dh,cl
  4026fb:	jg     0x402700
  4026fd:	add    BYTE PTR [esi-0x1fffc82],bl
  402703:	jg     0x402708
  402705:	add    dh,ch
  402707:	jg     0x40270c
  402709:	add    BYTE PTR [eax+0x7f],bl
  40270c:	add    eax,DWORD PTR [eax]
  40270e:	push   esi
  40270f:	jg     0x402714
  402711:	add    BYTE PTR [edx],al
  402713:	add    BYTE PTR [ebx],0x0
  402716:	sahf   
  402717:	jg     0x40271c
  402719:	add    BYTE PTR [edx+0x7c],dh
  40271c:	add    eax,DWORD PTR [eax]
  40271e:	cs jge 0x402724
  402721:	add    ah,dl
  402723:	jle    0x402728
  402725:	add    BYTE PTR [eax],bl
  402727:	jge    0x40272c
  402729:	add    BYTE PTR [edx+0x7d],ah
  40272c:	add    eax,DWORD PTR [eax]
  40272e:	add    BYTE PTR [eax],al
  402730:	adc    BYTE PTR [ebp+0x3],bh
  402733:	add    BYTE PTR [eax+0x7d],al
  402736:	add    eax,DWORD PTR [eax]
  402738:	pop    esp
  402739:	jge    0x40273e
  40273b:	add    BYTE PTR [ebp+edi*2+0x7d6a0003],al
  402742:	add    eax,DWORD PTR [eax]
  402744:	jo     0x4027c3
  402746:	add    eax,DWORD PTR [eax]
  402748:	aad    0x90
  40274a:	xchg   esp,eax
  40274b:	add    edx,ebp
  40274d:	scas   al,BYTE PTR es:[edi]
  40274e:	xchg   esp,eax
  40274f:	add    edx,ebp
  402751:	mov    BYTE PTR [ebx+eax*1+0x394b8d5],dl
  402758:	aad    0xf0
  40275a:	xchg   edi,eax
  40275b:	add    edx,ebp
  40275d:	mov    eax,0xd4d50397
  402762:	xchg   edi,eax
  402763:	add    edx,ebp
  402765:	ret    0x397
  402768:	aad    0x30
  40276a:	cwde   
  40276b:	add    edx,ebp
  40276d:	sbb    al,0x98
  40276f:	add    edx,ebp
  402771:	adc    bl,BYTE PTR [eax-0x688d2afd]
  402777:	add    edx,ebp
  402779:	push   esi
  40277a:	xchg   edi,eax
  40277b:	add    edx,ebp
  40277d:	sbb    dl,BYTE PTR [edi-0x68e32afd]
  402783:	add    edx,ebp
  402785:	push   eax
  402786:	xchg   edi,eax
  402787:	add    edx,ebp
  402789:	mov    ah,0xa8
  40278b:	add    edx,ebp
  40278d:	or     BYTE PTR [ecx-0x573b2afd],ch
  402793:	add    eax,DWORD PTR [eax]
  402795:	add    ch,dl
  402797:	fsubr  DWORD PTR [eax-0x56dd2afd]
  40279d:	add    edx,ebp
  40279f:	mov    al,ds:0xccd50393
  4027a4:	xchg   ebx,eax
  4027a5:	add    edx,ebp
  4027a7:	mov    ah,0x93
  4027a9:	add    edx,ebp
  4027ab:	mov    esp,0xa6d50393
  4027b0:	xchg   ebx,eax
  4027b1:	add    edx,ebp
  4027b3:	rcl    BYTE PTR [ebx-0x6c0b2afd],1
  4027b9:	add    edx,ebp
  4027bb:	fdivr  DWORD PTR [edi+0x3]
  4027be:	aad    0x8
  4027c0:	add    BYTE PTR [ebx],0xd5
  4027c3:	or     DWORD PTR [ebx-0x58f62981],edi
  4027c9:	jg     0x4027a1
  4027cb:	or     DWORD PTR [edi+0x6f09d67f],eax
  4027d1:	jg     0x4027a9
  4027d3:	or     DWORD PTR [edi+0x7f],esi
  4027d6:	(bad)  
  4027d7:	or     DWORD PTR [ebx+0x7f],ebp
  4027da:	(bad)  
  4027db:	or     DWORD PTR [ecx],edi
  4027dd:	jg     0x4027b5
  4027df:	or     DWORD PTR [ecx+0x7f],ecx
  4027e2:	(bad)  
  4027e3:	or     DWORD PTR [ebx],esi
  4027e5:	jg     0x4027bd
  4027e7:	or     ebp,ebx
  4027e9:	jle    0x4027c1
  4027eb:	or     edi,esi
  4027ed:	jle    0x4027c5
  4027ef:	or     ebp,esp
  4027f1:	jle    0x4027c9
  4027f3:	or     DWORD PTR [ebp+0x7e],edi
  4027f6:	(bad)  
  4027f7:	or     DWORD PTR [ecx-0x29ffff82],edx
  4027fd:	or     DWORD PTR [ebp+0x2d09d67e],ebx
  402803:	jle    0x4027db
  402805:	or     DWORD PTR [ecx+0x7509d67e],ecx
  40280b:	jle    0x4027e3
  40280d:	or     DWORD PTR [ecx+0x7e],esp
  402810:	(bad)  
  402811:	or     edi,edx
  402813:	jge    0x4027eb
  402815:	or     ecx,edx
  402817:	jge    0x4027ef
  402819:	or     DWORD PTR [ebx-0x5ef62983],esp
  40281f:	jge    0x4027f7
  402821:	or     ebp,ebp
  402823:	jge    0x4027fb
  402825:	or     ecx,ebx
  402827:	jge    0x4027ff
  402829:	or     ebx,ecx
  40282b:	jge    0x402803
  40282d:	or     ebx,edi
  40282f:	jge    0x402807
  402831:	or     ebx,ebp
  402833:	jge    0x40280b
  402835:	or     DWORD PTR [ecx],edx
  402837:	adc    esi,0xd6811d09
  40283d:	or     DWORD PTR [eax],eax
  40283f:	das    
  402840:	push   esp
  402841:	or     al,BYTE PTR [eax]
  402843:	cmp    DWORD PTR [edx+ecx*1+0x0],edx
  402847:	lea    edx,[ebp+0xa]
  40284a:	add    BYTE PTR [ecx+0x65000a55],al
  402850:	push   ebp
  402851:	or     al,BYTE PTR [eax]
  402853:	dec    ebp
  402854:	push   esp
  402855:	or     al,BYTE PTR [eax]
  402857:	push   ebx
  402858:	push   esp
  402859:	or     DWORD PTR [eax],eax
  40285b:	and    edx,DWORD PTR [ecx+ecx*1+0x0]
  40285f:	das    
  402860:	add    BYTE PTR [eax],al
  402862:	push   esp
  402863:	or     DWORD PTR [eax],eax
  402865:	icebp  
  402866:	push   ebp
  402867:	or     DWORD PTR [eax],eax
  402869:	aad    0x55
  40286b:	or     DWORD PTR [eax],eax
  40286d:	call   DWORD PTR [ebp+0x9]
  402870:	add    bl,bh
  402872:	push   ebp
  402873:	or     DWORD PTR [eax],eax
  402875:	out    0x55,eax
  402877:	or     DWORD PTR [eax],eax
  402879:	adc    DWORD PTR [edx],0xa890009
  40287f:	or     DWORD PTR [eax],eax
  402881:	scas   eax,DWORD PTR es:[edi]
  402882:	add    cl,BYTE PTR [ecx]
  402884:	add    BYTE PTR [edi],dh
  402886:	cli    
  402887:	or     BYTE PTR [eax],al
  402889:	xchg   edx,esi
  40288b:	or     BYTE PTR [eax],al
  40288d:	addr16 jmp 0x8:0xe2d70008
  402895:	retf   
  402896:	fimul  DWORD PTR [eax]
  402898:	add    BYTE PTR [edi-0x56fff72e],bl
  40289e:	retf   0x8
  4028a1:	andnps xmm1,XMMWORD PTR [ecx]
  4028a4:	add    BYTE PTR [ebp-0x41],al
  4028a7:	or     BYTE PTR [eax],al
  4028a9:	push   DWORD PTR [edx-0x50e2fff8]
  4028af:	or     BYTE PTR [eax],al
  4028b1:	sbb    eax,DWORD PTR [ecx+ecx*1+0x0]
  4028b5:	jmp    0x403290
  4028ba:	enter  0x3b1,0x0
  4028be:	xchg   esp,eax
  4028bf:	mov    cl,0x3
  4028c1:	add    BYTE PTR [edx+0x3b1],dl
  4028c7:	add    ah,ch
  4028c9:	or     BYTE PTR [eax],al
  4028cb:	add    BYTE PTR [edx],al
  4028cd:	or     DWORD PTR [eax],eax
  4028cf:	and    ah,0x8
  4028d2:	add    BYTE PTR [eax-0x7ffff70b],al
  4028d8:	out    dx,al
  4028d9:	or     BYTE PTR [eax],al
  4028db:	cmp    BYTE PTR [eax+ecx*1-0x51e20000],0x3
  4028e3:	add    dl,bh
  4028e5:	lods   eax,DWORD PTR ds:[esi]
  4028e6:	add    eax,DWORD PTR [eax]
  4028e8:	stos   BYTE PTR es:[edi],al
  4028e9:	test   al,0x3
  4028eb:	add    BYTE PTR [eax+ecx*1-0x57560000],bh
  4028f2:	add    eax,DWORD PTR [eax]
  4028f4:	mov    dh,0xa8
  4028f6:	add    eax,DWORD PTR [eax]
  4028f8:	dec    edx
  4028f9:	xchg   esi,eax
  4028fa:	add    eax,DWORD PTR [eax]
  4028fc:	push   0xffffff96
  4028fe:	add    eax,DWORD PTR [eax]
  402900:	push   0x5c000396
  402905:	xchg   esi,eax
  402906:	add    eax,DWORD PTR [eax]
  402908:	xor    BYTE PTR [esi-0x69cbfffd],dl
  40290e:	add    eax,DWORD PTR [eax]
  402910:	inc    esp
  402911:	xchg   esi,eax
  402912:	add    eax,DWORD PTR [eax]
  402914:	fcom   QWORD PTR [esi-0x6a77fffd]
  40291a:	add    eax,DWORD PTR [eax]
  40291c:	and    al,0x95
  40291e:	add    eax,DWORD PTR [eax]
  402920:	push   0x76000395
  402925:	xchg   ebp,eax
  402926:	add    eax,DWORD PTR [eax]
  402928:	inc    eax
  402929:	xchg   ebp,eax
  40292a:	add    eax,DWORD PTR [eax]
  40292c:	add    BYTE PTR [eax],al
  40292e:	and    BYTE PTR [ebp-0x6ad3fffd],dl
  402934:	add    eax,DWORD PTR [eax]
  402936:	aad    0xf8
  402938:	lea    eax,[ebx]
  40293a:	aad    0xc
  40293c:	mov    es,WORD PTR [ebx]
  40293e:	aad    0x2a
  402940:	mov    es,WORD PTR [ebx]
  402942:	aad    0x18
  402944:	mov    es,WORD PTR [ebx]
  402946:	aad    0x1e
  402948:	mov    es,WORD PTR [ebx]
  40294a:	aad    0xc4
  40294c:	add    eax,DWORD PTR [eax]
  40294e:	push   ebp
  40294f:	repnz add eax,DWORD PTR [eax]
  402952:	aad    0x6e
  402954:	mov    ds:0x3f2d503,eax
  402959:	add    ch,dl
  40295b:	cmp    cl,BYTE PTR [ebx+eax*1+0x38c52d5]
  402962:	aad    0xfa
  402964:	mov    eax,DWORD PTR [ebx]
  402966:	aad    0x28
  402968:	mov    WORD PTR [ebx],es
  40296a:	aad    0xda
  40296c:	mov    eax,DWORD PTR [ebx]
  40296e:	aad    0xd4
  402970:	mov    eax,DWORD PTR [ebx]
  402972:	aad    0xde
  402974:	mov    eax,DWORD PTR [ebx]
  402976:	aad    0x7c
  402978:	xchg   esp,eax
  402979:	add    edx,ebp
  40297b:	adc    BYTE PTR [ebx+eax*1+0x394acd5],0xd5
  402983:	adc    BYTE PTR [ebx+eax*1+0x394aed5],0xd5
  40298b:	sbb    dl,BYTE PTR [ebx+eax*1+0x39478d5]
  402992:	add    BYTE PTR [eax],al
  402994:	aad    0x88
  402996:	xchg   esp,eax
  402997:	add    edx,ebp
  402999:	xchg   sp,ax
  40299b:	add    edx,ebp
  40299d:	mov    edx,0xb8d50394
  4029a2:	xchg   esp,eax
  4029a3:	add    edx,ebp
  4029a5:	xchg   edx,eax
  4029a6:	mov    eax,DWORD PTR [ebx]
  4029a8:	aad    0x26
  4029aa:	mov    eax,DWORD PTR [ebx]
  4029ac:	aad    0x14
  4029ae:	mov    eax,DWORD PTR [ebx]
  4029b0:	aad    0x9
  4029b2:	sbb    ecx,DWORD PTR [ebx-0x748af62a]
  4029b8:	(bad)  
  4029b9:	or     edi,edi
  4029bb:	mov    dl,dh
  4029bd:	or     edi,eax
  4029bf:	mov    dl,dh
  4029c1:	or     edi,eax
  4029c3:	mov    dl,dh
  4029c5:	or     DWORD PTR [ebx-0x72f62976],ebx
  4029cb:	mov    dl,dh
  4029cd:	or     DWORD PTR [edi-0x76],edi
  4029d0:	(bad)  
  4029d1:	or     DWORD PTR [ebx-0x73],ebp
  4029d4:	(bad)  
  4029d5:	or     DWORD PTR [ebx-0x73],edi
  4029d8:	(bad)  
  4029d9:	or     DWORD PTR [ecx-0x6af62973],ecx
  4029df:	(bad)  
  4029e0:	(bad)  
  4029e1:	or     DWORD PTR [ebp-0x5ef62973],ebp
  4029e7:	(bad)  
  4029e8:	(bad)  
  4029e9:	or     DWORD PTR [ebx+0x2d09d68d],edi
  4029ef:	(bad)  
  4029f0:	(bad)  
  4029f1:	or     DWORD PTR [ecx],edx
  4029f3:	(bad)  
  4029f4:	(bad)  
  4029f5:	or     DWORD PTR ds:0xd600008f,edi
  4029fb:	or     DWORD PTR [ecx],edi
  4029fd:	(bad)  
  4029fe:	(bad)  
  4029ff:	or     DWORD PTR [ecx],ebp
  402a01:	(bad)  
  402a02:	(bad)  
  402a03:	or     DWORD PTR [ebp-0x38f62972],edi
  402a09:	mov    ss,esi
  402a0b:	or     edi,ebx
  402a0d:	mov    ss,esi
  402a0f:	or     ebx,esp
  402a11:	mov    ss,esi
  402a13:	or     DWORD PTR [ebx-0x72],esp
  402a16:	(bad)  
  402a17:	or     edi,esp
  402a19:	mov    esi,ss
  402a1b:	or     DWORD PTR [edi-0x74],esi
  402a1e:	(bad)  
  402a1f:	or     DWORD PTR [ebx-0x72],eax
  402a22:	(bad)  
  402a23:	or     DWORD PTR ds:0x2d09d68e,esp
  402a29:	mov    ss,esi
  402a2b:	or     DWORD PTR [eax],eax
  402a2d:	sub    DWORD PTR [ebx+0x6],ecx
  402a30:	add    bl,ch
  402a32:	inc    ebp
  402a33:	push   es
  402a34:	add    bl,bh
  402a36:	inc    ebp
  402a37:	push   es
  402a38:	add    ch,al
  402a3a:	inc    ebp
  402a3b:	push   es
  402a3c:	add    bl,bl
  402a3e:	inc    ebp
  402a3f:	push   es
  402a40:	add    BYTE PTR [ebx-0x66fff99b],ch
  402a46:	gs push es
  402a48:	add    BYTE PTR [ebp-0x6cfff99b],bl
  402a4e:	addr16 push es
  402a50:	add    BYTE PTR [ebp+0x25000647],bl
  402a56:	inc    esi
  402a57:	push   es
  402a58:	add    BYTE PTR [ecx],dl
  402a5a:	inc    esi
  402a5b:	push   es
  402a5c:	add    bl,dh
  402a5e:	add    BYTE PTR [eax],al
  402a60:	inc    edi
  402a61:	push   es
  402a62:	add    bl,ah
  402a64:	addr16 or eax,0xd67eb00
  402a6a:	add    BYTE PTR [ebp-0x36fff29c],dh
  402a70:	fs or  eax,0xd449d00
  402a76:	add    BYTE PTR [ebp+0x44],ah
  402a79:	or     eax,0xd445100
  402a7e:	add    BYTE PTR [ecx+0x44],dh
  402a81:	or     eax,0xd645f00
  402a86:	add    BYTE PTR [edi],al
  402a88:	addr16 or eax,0xd64fb00
  402a8e:	add    BYTE PTR [ecx],cl
  402a90:	addr16 or eax,0xd471d00
  402a96:	add    BYTE PTR ds:0xf000d47,ah
  402a9c:	inc    edi
  402a9d:	or     eax,0xd456900
  402aa2:	add    BYTE PTR [edi+0x60],bh
  402aa5:	or     eax,0x8f5c0000
  402aaa:	add    eax,DWORD PTR [eax]
  402aac:	mov    dl,0x8e
  402aae:	add    eax,DWORD PTR [eax]
  402ab0:	js     0x402a41
  402ab2:	add    eax,DWORD PTR [eax]
  402ab4:	bound  ecx,QWORD PTR [edi-0x7085fffd]
  402aba:	add    eax,DWORD PTR [eax]
  402abc:	adc    BYTE PTR [edi-0x70dffffd],cl
  402ac2:	add    eax,DWORD PTR [eax]
  402ac4:	add    BYTE PTR [eax],al
  402ac6:	hlt    
  402ac7:	mov    es,WORD PTR [ebx]
  402ac9:	add    BYTE PTR [edx-0x73fffc87],al
  402acf:	jns    0x402ad4
  402ad1:	add    BYTE PTR [ecx+edi*2+0x79bc0003],bh
  402ad8:	add    eax,DWORD PTR [eax]
  402ada:	cs xchg ecx,eax
  402adc:	add    eax,DWORD PTR [eax]
  402ade:	sbb    BYTE PTR [ecx-0x6f05fffd],dl
  402ae4:	add    eax,DWORD PTR [eax]
  402ae6:	mov    ah,0x7a
  402ae8:	add    eax,DWORD PTR [eax]
  402aea:	mov    dh,0x7a
  402aec:	add    eax,DWORD PTR [eax]
  402aee:	adc    BYTE PTR [ecx+0xcac0003],dl
  402af4:	add    BYTE PTR [eax],al
  402af6:	out    dx,al
  402af7:	add    BYTE PTR [ebx],0x0
  402afa:	push   ss
  402afb:	add    DWORD PTR [ebx],0x37f8000
  402b01:	add    BYTE PTR [edi+edi*2+0x7f8e0003],dl
  402b08:	add    eax,DWORD PTR [eax]
  402b0a:	or     BYTE PTR [edx-0x5695fffd],ch
  402b10:	add    eax,DWORD PTR [eax]
  402b12:	sub    al,0xa9
  402b14:	add    eax,DWORD PTR [eax]
  402b16:	push   ss
  402b17:	stos   BYTE PTR es:[edi],al
  402b18:	add    eax,DWORD PTR [eax]
  402b1a:	jmp    0x3a9:0xec0003a9
  402b21:	add    ch,dl
  402b23:	retf   0x39f
  402b26:	aad    0xa4
  402b28:	lahf   
  402b29:	add    eax,DWORD PTR [eax]
  402b2b:	add    ch,dl
  402b2d:	mov    ah,0x9f
  402b2f:	add    edx,ebp
  402b31:	adc    BYTE PTR [eax-0x60412afd],ah
  402b37:	add    edx,ebp
  402b39:	repnz lahf 
  402b3b:	add    edx,ebp
  402b3d:	cld    
  402b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b3f:	add    edx,ebp
  402b41:	sbb    BYTE PTR [ebp-0x5aa52afd],ah
  402b47:	add    edx,ebp
  402b49:	dec    esp
  402b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b4b:	add    edx,ebp
  402b4d:	dec    eax
  402b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b4f:	add    edx,ebp
  402b51:	repnz add eax,DWORD PTR [eax]
  402b54:	aad    0x9e
  402b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b57:	add    edx,ebp
  402b59:	rol    DWORD PTR [ebx],0x0
  402b5c:	push   ebp
  402b5d:	in     eax,dx
  402b5e:	add    eax,DWORD PTR [eax]
  402b60:	push   ebp
  402b61:	icebp  
  402b62:	add    eax,DWORD PTR [eax]
  402b64:	push   ebp
  402b65:	in     eax,0x3
  402b67:	add    BYTE PTR [ebp-0x18],dl
  402b6a:	add    eax,DWORD PTR [eax]
  402b6c:	push   ebp
  402b6d:	and    DWORD PTR [eax+eax*1],eax
  402b70:	push   ebp
  402b71:	xor    esp,DWORD PTR [esi-0x5a6f2afd]
  402b77:	add    edx,ebp
  402b79:	xor    al,0xa5
  402b7b:	add    edx,ebp
  402b7d:	in     al,dx
  402b7e:	add    eax,DWORD PTR [eax]
  402b80:	push   ebp
  402b81:	jmp    DWORD PTR [ebp+0x403d503]
  402b87:	add    BYTE PTR [ebp+0x7],dl
  402b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b8b:	add    edx,ebp
  402b8d:	cld    
  402b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b8f:	add    eax,DWORD PTR [eax]
  402b91:	add    ch,dl
  402b93:	mov    dh,0x3
  402b95:	add    BYTE PTR [ebp-0x42],dl
  402b98:	add    eax,DWORD PTR [eax]
  402b9a:	push   ebp
  402b9b:	aad    0x3
  402b9d:	add    BYTE PTR [ebp+0xa],dl
  402ba0:	jmp    0x402ba5
  402ba2:	aad    0x89
  402ba4:	sti    
  402ba5:	add    edx,ebp
  402ba7:	mov    edi,ebp
  402ba9:	add    edx,ebp
  402bab:	mov    ebp,esi
  402bad:	add    edx,ebp
  402baf:	mov    DWORD PTR ds:0xe309d6a6,ecx
  402bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bb6:	(bad)  
  402bb7:	or     ecx,ebx
  402bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bba:	(bad)  
  402bbb:	or     ecx,ebx
  402bbd:	add    edx,ebp
  402bbf:	mov    edx,ebp
  402bc1:	add    edx,ebp
  402bc3:	mov    edx,edi
  402bc5:	add    edx,ebp
  402bc7:	mov    DWORD PTR [esi-0x9762afd],eax
  402bcd:	add    edx,ebp
  402bcf:	mov    ecx,ebp
  402bd1:	add    edx,ebp
  402bd3:	or     DWORD PTR [ecx],edx
  402bd5:	sahf   
  402bd6:	(bad)  
  402bd7:	or     ebx,edi
  402bd9:	popf   
  402bda:	(bad)  
  402bdb:	or     ebp,ebp
  402bdd:	popf   
  402bde:	(bad)  
  402bdf:	or     edi,ebp
  402be1:	popf   
  402be2:	(bad)  
  402be3:	or     ecx,edi
  402be5:	popf   
  402be6:	(bad)  
  402be7:	or     ebx,esi
  402be9:	popf   
  402bea:	(bad)  
  402beb:	or     DWORD PTR [edi],eax
  402bed:	sahf   
  402bee:	(bad)  
  402bef:	or     DWORD PTR ds:0xf709d69e,edx
  402bf5:	popf   
  402bf6:	add    BYTE PTR [eax],al
  402bf8:	(bad)  
  402bf9:	or     DWORD PTR [ecx],ebp
  402bfb:	sahf   
  402bfc:	(bad)  
  402bfd:	or     DWORD PTR [ecx],esp
  402bff:	sahf   
  402c00:	(bad)  
  402c01:	or     DWORD PTR [ebx],edi
  402c03:	sahf   
  402c04:	(bad)  
  402c05:	or     DWORD PTR [ecx],edx
  402c07:	sahf   
  402c08:	(bad)  
  402c09:	or     DWORD PTR [ebx],ecx
  402c0b:	lahf   
  402c0c:	(bad)  
  402c0d:	or     DWORD PTR [ecx],ebx
  402c0f:	sahf   
  402c10:	(bad)  
  402c11:	or     DWORD PTR [edi],eax
  402c13:	sahf   
  402c14:	(bad)  
  402c15:	or     DWORD PTR [edi-0x62],esp
  402c18:	(bad)  
  402c19:	or     DWORD PTR [eax],eax
  402c1b:	pop    ebx
  402c1c:	push   ebx
  402c1d:	or     al,BYTE PTR [eax]
  402c1f:	push   ebx
  402c20:	dec    ebx
  402c21:	or     al,BYTE PTR [eax]
  402c23:	lea    eax,[ebx+0xa]
  402c26:	add    BYTE PTR [edi-0x6afff5c5],cl
  402c2c:	jae    0x402c38
  402c2e:	add    BYTE PTR [ecx],ah
  402c30:	imul   ecx,DWORD PTR [edx],0x0
  402c33:	sbb    esp,DWORD PTR [ebx+0xa]
  402c36:	add    BYTE PTR [edi],bl
  402c38:	pop    ebx
  402c39:	or     al,BYTE PTR [eax]
  402c3b:	inc    ecx
  402c3c:	push   ebx
  402c3d:	or     al,BYTE PTR [eax]
  402c3f:	jmp    0x1b40361a
  402c44:	jns    0x402c50
  402c46:	add    BYTE PTR [ecx],cl
  402c48:	jno    0x402c54
  402c4a:	add    BYTE PTR [edi],ah
  402c4c:	cmp    DWORD PTR [edx],ecx
  402c4e:	add    BYTE PTR [ebx+0x31],dl
  402c51:	or     al,BYTE PTR [eax]
  402c53:	dec    ebx
  402c54:	cmp    DWORD PTR [edx],ecx
  402c56:	add    ch,ah
  402c58:	xor    DWORD PTR [edx],ecx
  402c5a:	add    cl,ch
  402c5c:	add    BYTE PTR [eax],al
  402c5e:	(bad)  
  402c5f:	or     DWORD PTR [eax],eax
  402c61:	jmp    0x6840363c
  402c66:	cmp    ebx,DWORD PTR [edx]
  402c68:	sub    DWORD PTR [edi],edx
  402c6a:	outs   dx,BYTE PTR ds:[esi]
  402c6b:	mov    ebx,0xddc89b11
  402c70:	mov    edi,0x601c591e
  402c75:	pop    esp
  402c76:	jnp    0x402c91
  402c78:	sub    edi,esi
  402c7a:	das    
  402c7b:	mov    eax,0xdda87b11
  402c80:	mov    edi,0x601c591e
  402c85:	fld    TBYTE PTR [ebx]
  402c87:	add    eax,0xb99438f5
  402c8c:	adc    DWORD PTR [eax+0x41],esp
  402c8f:	or     al,BYTE PTR [eax]
  402c91:	xchg   ecx,eax
  402c92:	shl    edi,cl
  402c94:	and    DWORD PTR [eax],eax
  402c96:	or     al,0x30
  402c98:	dec    eax
  402c99:	loopne 0x402c96
  402c9b:	sbb    ebx,DWORD PTR [ebp+ecx*2+0x4177cf22]
  402ca2:	dec    esp
  402ca3:	xchg   esi,eax
  402ca4:	xchg   ebp,eax
  402ca5:	test   DWORD PTR [ecx],0xb0f78963
  402cab:	mov    ds:0xb55e4632,al
  402cb0:	fiadd  DWORD PTR [esi]
  402cb2:	xchg   ecx,eax
  402cb3:	cmc    
  402cb4:	sbb    edx,esi
  402cb6:	repnz dec ecx
  402cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cb9:	or     al,0x49
  402cbb:	sub    al,0x6c
  402cbd:	dec    edx
  402cbe:	stos   DWORD PTR es:[edi],eax
  402cbf:	jp     0x402c60
  402cc1:	jbe    0x402cc3
  402cc3:	add    BYTE PTR [edi+ebx*8],cl
  402cc6:	jge    0x402cbd
  402cc8:	outs   dx,BYTE PTR ds:[esi]
  402cc9:	mov    esi,0x3735304c
  402cce:	fadd   DWORD PTR [eax-0x70]
  402cd1:	xor    bh,BYTE PTR [ecx-0x642b4fed]
  402cd7:	aam    0x74
  402cd9:	xor    DWORD PTR [ebp-0x53],edx
  402cdc:	mov    ebp,0x7a474ac6
  402ce1:	or     edi,esp
  402ce3:	or     al,0x1c
  402ce5:	pop    edx
  402ce6:	mov    bh,0x38
  402ce8:	sbb    edi,edi
  402cea:	fdiv   QWORD PTR [eax+0x39]
  402ced:	push   edx
  402cee:	call   0x24159739
  402cf3:	mov    dh,0x6f
  402cf5:	sbb    ebp,DWORD PTR [eax]
  402cf7:	(bad)  
  402cf8:	addr16 popf 
  402cfa:	gs jno 0x402d41
  402cfd:	ja     0x402cbc
  402cff:	inc    edx
  402d00:	inc    edx
  402d01:	in     eax,0x53
  402d03:	adc    BYTE PTR [eax],ah
  402d05:	(bad)  
  402d06:	pop    ecx
  402d07:	add    ah,ch
  402d09:	xor    esi,DWORD PTR [esi+0x61]
  402d0c:	enter  0x6440,0x20
  402d10:	aad    0x2
  402d12:	arpl   WORD PTR [edx-0xc],si
  402d15:	fstp   QWORD PTR [esi+0x74]
  402d18:	clc    
  402d19:	loopne 0x402d3e
  402d1b:	jo     0x402d11
  402d1d:	fbstp  TBYTE PTR [eax+0x65]
  402d20:	stc    
  402d21:	shr    BYTE PTR [edi+0x6f],cl
  402d24:	mov    ch,0x2f
  402d26:	and    al,0x72
  402d28:	add    BYTE PTR [eax],al
  402d2a:	call   0xe8a99ce3
  402d2f:	lds    esp,FWORD PTR [ebx]
  402d31:	enterw 0x60c4,0x74
  402d36:	mov    esp,0xcf2e559b
  402d3b:	repnz add eax,DWORD PTR [eax]
  402d3e:	aad    0x52
  402d40:	lods   al,BYTE PTR ds:[esi]
  402d41:	inc    ebx
  402d42:	aad    0xe2
  402d44:	stos   BYTE PTR es:[edi],al
  402d45:	inc    ebx
  402d46:	aad    0xa
  402d48:	add    al,0x6e
  402d4a:	aad    0x7d
  402d4c:	add    ebp,DWORD PTR [ebp+edx*8-0x72]
  402d50:	add    ebp,DWORD PTR [ecx]
  402d52:	aad    0xf2
  402d54:	add    eax,DWORD PTR [eax]
  402d56:	aad    0xca
  402d58:	push   ebp
  402d59:	jne    0x402dcc
  402d5b:	jbe    0x402d77
  402d5d:	add    ch,dl
  402d5f:	repnz add eax,DWORD PTR [eax]
  402d62:	aad    0xec
  402d64:	add    DWORD PTR [eax-0x7f7c8dad],0xffffffd5
  402d6b:	repnz adc eax,DWORD PTR [ebx]
  402d6e:	push   ebx
  402d6f:	jb     0x402dee
  402d71:	adc    BYTE PTR [ebp-0x23],0xfe
  402d75:	add    al,0x10
  402d77:	es aas 
  402d79:	test   DWORD PTR [eax+0x6e],ebx
  402d7c:	(bad)  
  402d7d:	(bad)  
  402d7e:	mov    edx,0x58033e1
  402d83:	jno    0x402d08
  402d85:	add    ch,bl
  402d87:	lock sbb esp,DWORD PTR [edi]
  402d8a:	fisttp QWORD PTR [ecx]
  402d8c:	cmp    DWORD PTR [ebp+0x0],ecx
  402d8f:	add    BYTE PTR [ebp+0xa],dl
  402d92:	out    0x3,al
  402d94:	retf   0xd919
  402d97:	push   ebx
  402d98:	and    eax,0xd503e992
  402d9d:	sub    ecx,edx
  402d9f:	or     DWORD PTR [ebp-0x76],0x69
  402da3:	add    edx,ebp
  402da5:	or     DWORD PTR [ecx],ecx
  402da7:	fs cmc 
  402da9:	jno    0x402dac
  402dab:	pop    esp
  402dac:	int    0x11
  402dae:	out    dx,al
  402daf:	imul   esp,ebp,0x59
  402db2:	(bad)  
  402db3:	jae    0x402d7a
  402db5:	adc    ecx,esp
  402db7:	add    edx,ebp
  402db9:	adc    ecx,ebp
  402dbb:	sti    
  402dbc:	inc    edx
  402dbd:	add    al,0xf1
  402dbf:	add    edx,ebp
  402dc1:	or     ecx,ebp
  402dc3:	add    edx,ebp
  402dc5:	or     ecx,ebp
  402dc7:	add    edx,ebp
  402dc9:	or     ecx,ebp
  402dcb:	add    edx,ebp
  402dcd:	or     ecx,ecx
  402dcf:	or     DWORD PTR [esi-0x26fc1af7],edx
  402dd5:	or     ecx,esp
  402dd7:	add    edx,ecx
  402dd9:	or     DWORD PTR [ecx-0x12f669f8],ecx
  402ddf:	add    edx,eax
  402de1:	or     ecx,ebx
  402de3:	add    ebx,ebp
  402de5:	or     DWORD PTR [ecx-0x1af669f8],ecx
  402deb:	add    ebx,ebx
  402ded:	or     DWORD PTR [ecx],ecx
  402def:	add    al,0xb5
  402df1:	or     DWORD PTR [ecx-0x1],ecx
  402df4:	add    BYTE PTR [eax],al
  402df6:	pop    ss
  402df7:	or     ch,ch
  402df9:	add    edx,ecx
  402dfb:	or     ecx,edi
  402dfd:	add    esp,ebp
  402dff:	or     DWORD PTR [ecx],ebp
  402e01:	add    dl,BYTE PTR [esi]
  402e03:	or     dh,cl
  402e05:	add    eax,ebp
  402e07:	or     DWORD PTR [eax],eax
  402e09:	or     ecx,edx
  402e0b:	sub    DWORD PTR [eax],eax
  402e0d:	sub    edi,edx
  402e0f:	inc    esi
  402e10:	add    cl,dh
  402e12:	(bad)  
  402e13:	stc    
  402e14:	jmp    FWORD PTR [eax-0x27]
  402e17:	mov    DWORD PTR [eax],eax
  402e19:	sub    edi,edx
  402e1b:	inc    esi
  402e1c:	add    cl,ah
  402e1e:	(bad)  
  402e1f:	sub    DWORD PTR [eax],eax
  402e21:	imul   edx,ecx,0xd7290109
  402e27:	inc    esi
  402e28:	add    cl,cl
  402e2a:	(bad)  
  402e2b:	mov    DWORD PTR [eax],eax
  402e2d:	jmp    0x402e08
  402e2f:	or     DWORD PTR [ecx+ebp*4],eax
  402e32:	aam    0x46
  402e34:	add    BYTE PTR [ecx],cl
  402e36:	fld    DWORD PTR [edi]
  402e38:	add    ebx,ebp
  402e3a:	ror    DWORD PTR [ecx],1
  402e3c:	adc    BYTE PTR [ecx-0x7ffb92c],ch
  402e42:	add    al,0x18
  402e44:	cs hlt 
  402e46:	(bad)  
  402e47:	or     DWORD PTR [eax],eax
  402e49:	leave  
  402e4a:	fisttp WORD PTR [ecx]
  402e4c:	add    cl,ch
  402e4e:	into   
  402e4f:	cmp    DWORD PTR [eax],eax
  402e51:	jmp    0xf5402824
  402e56:	ficom  WORD PTR [esi+0x0]
  402e59:	sti    
  402e5a:	add    BYTE PTR [eax],al
  402e5c:	(bad)  
  402e5e:	(bad)  
  402e5f:	call   0xe9408832
  402e64:	into   
  402e65:	sbb    DWORD PTR [eax],eax
  402e67:	jmp    0xd940f84d
  402e6c:	fisttp WORD PTR [edi]
  402e6e:	add    cl,ch
  402e70:	into   
  402e71:	imul   eax,DWORD PTR [eax],0x29cee9
  402e77:	jmp    0xe940d85d
  402e7c:	fimul  WORD PTR [ecx]
  402e7e:	add    cl,ch
  402e80:	into   
  402e81:	mov    DWORD PTR [eax],eax
  402e83:	add    BYTE PTR [ebp+eax*1+0x6bc0040],ch
  402e8a:	loopne 0x402e8c
  402e8c:	mov    WORD PTR [esi+eax*1],es
  402e8f:	add    BYTE PTR [ebp+eax*1+0x5ac0058],ch
  402e96:	sbb    BYTE PTR [eax],al
  402e98:	jl     0x402ea0
  402e9a:	nop
  402e9b:	add    BYTE PTR [edi+0x6c003b04],cl
  402ea1:	add    eax,0x56c0078
  402ea6:	cmp    BYTE PTR [eax],al
  402ea8:	jl     0x402eb0
  402eaa:	rol    BYTE PTR [eax],1
  402eac:	lea    eax,[ecx+edx*1]
  402eaf:	add    BYTE PTR [ebp+eax*1+0x68],ch
  402eb3:	add    BYTE PTR [ebp+eax*1+0x28],ch
  402eb7:	add    BYTE PTR [esi+eax*1],bh
  402eba:	mov    al,0x0
  402ebc:	cmp    al,0x5
  402ebe:	or     BYTE PTR [eax],al
  402ec0:	add    BYTE PTR [eax],al
  402ec2:	sub    al,0x5
  402ec4:	mov    BYTE PTR [eax],al
  402ec6:	sub    al,0x5
  402ec8:	dec    eax
  402ec9:	add    BYTE PTR [esi+eax*1],bh
  402ecc:	lock add BYTE PTR [esp+eax*1],cl
  402ed0:	add    al,0x0
  402ed2:	sub    al,0x5
  402ed4:	push   esp
  402ed5:	add    BYTE PTR [eax*1+0x5090014],ch
  402edc:	jecxz  0x402ede
  402ede:	(bad)  
  402ee0:	sub    eax,DWORD PTR [eax]
  402ee2:	in     al,dx
  402ee3:	add    al,0x74
  402ee5:	add    ah,ch
  402ee7:	add    al,0x34
  402ee9:	add    ah,bh
  402eeb:	add    eax,0x40d00c8
  402ef0:	or     eax,0x6404ec00
  402ef5:	add    ah,ch
  402ef7:	add    al,0x24
  402ef9:	add    BYTE PTR [ebx+eax*1-0x1d2aff58],bh
  402f00:	or     eax,DWORD PTR [edx*8-0x2a7bf41e]
  402f07:	loop   0x402f14
  402f09:	inc    esp
  402f0a:	aad    0xe2
  402f0c:	or     ch,al
  402f0e:	aad    0xb2
  402f10:	or     BYTE PTR [eax],cl
  402f12:	aad    0xe2
  402f14:	or     ebx,DWORD PTR [ebp+edx*8-0x1e]
  402f18:	or     ebx,DWORD PTR [edx*8-0x2a67f51e]
  402f1f:	(bad)  
  402f20:	or     BYTE PTR [ebx-0x2b],dl
  402f23:	loop   0x402f30
  402f25:	jl     0x402f27
  402f27:	add    ch,dl
  402f29:	loop   0x402f36
  402f2b:	cmp    al,0xd5
  402f2d:	loop   0x402f39
  402f2f:	fcom   st(5)
  402f31:	mov    ah,0x8
  402f33:	pop    ss
  402f34:	aad    0xe2
  402f36:	or     ebp,DWORD PTR [ebp+edx*8-0x1e]
  402f3a:	or     ebp,DWORD PTR [edx*8-0x2a47f51e]
  402f41:	loop   0x402f4e
  402f43:	or     al,0xd5
  402f45:	loop   0x402f52
  402f47:	mov    ebp,ss
  402f49:	loop   0x402f56
  402f4b:	dec    esp
  402f4c:	aad    0xe2
  402f4e:	or     bh,al
  402f50:	aad    0xb2
  402f52:	or     BYTE PTR [ebx],al
  402f54:	aad    0xe2
  402f56:	or     edx,DWORD PTR [edx-0x2b]
  402f59:	loop   0x402f66
  402f5b:	adc    dl,ch
  402f5d:	fisttp QWORD PTR [ebx]
  402f5f:	mov    ds:0x2308d3d5,eax
  402f64:	aad    0xe2
  402f66:	or     esi,DWORD PTR [edx-0x2b]
  402f69:	loop   0x402f76
  402f6b:	xor    dl,ch
  402f6d:	loop   0x402f79
  402f6f:	(bad)  
  402f70:	aad    0xb1
  402f72:	or     BYTE PTR [ebx],cl
  402f74:	aad    0xe2
  402f76:	or     esp,DWORD PTR [edx-0x2b]
  402f79:	or     ecx,ebp
  402f7b:	or     esi,edi
  402f7d:	or     ecx,ebp
  402f7f:	or     dh,BYTE PTR [ecx+0xa]
  402f82:	jmp    0xe94a0692
  402f87:	or     edx,DWORD PTR [edi+0xa]
  402f8a:	jmp    0x17402f9a
  402f8f:	or     ch,cl
  402f91:	or     dh,BYTE PTR [ecx-0x25f726f6]
  402f97:	or     ecx,ebp
  402f99:	or     edi,edi
  402f9b:	or     ecx,ebp
  402f9d:	or     ebp,edi
  402f9f:	or     ecx,ebp
  402fa1:	or     ah,BYTE PTR [ecx+0xa]
  402fa4:	std    
  402fa5:	or     BYTE PTR [esi],dl
  402fa7:	or     ch,cl
  402fa9:	or     edi,edi
  402fab:	or     ecx,ebp
  402fad:	or     ebp,DWORD PTR [edi-0x7ef516f7]
  402fb3:	or     bl,bl
  402fb5:	or     dh,al
  402fb7:	or     ecx,ebp
  402fb9:	or     ebp,edi
  402fbb:	or     ecx,ebp
  402fbd:	or     edi,edi
  402fbf:	or     ecx,ebp
  402fc1:	or     al,BYTE PTR [ecx-0x30f416f6]
  402fc7:	or     ecx,ebp
  402fc9:	or     ecx,DWORD PTR [edi+0xa]
  402fcc:	jmp    0xe949cedc
  402fd1:	or     ah,BYTE PTR [ecx]
  402fd3:	or     bl,cl
  402fd5:	or     al,bl
  402fd7:	or     ecx,ebp
  402fd9:	or     eax,DWORD PTR [ebx-0x14f416f7]
  402fdf:	or     DWORD PTR [ecx-0x5f62af5],ebp
  402fe5:	or     dh,al
  402fe7:	or     ecx,ebp
  402fe9:	or     eax,DWORD PTR [ebx-0x54f416f7]
  402fef:	or     ecx,ebp
  402ff1:	or     al,BYTE PTR [eax]
  402ff3:	add    BYTE PTR [ecx],bl
  402ff5:	or     al,BYTE PTR [eax]
  402ff7:	fmul   st,st(5)
  402ff9:	push   es
  402ffa:	add    cl,ch
  402ffc:	into   
  402ffd:	outs   dx,DWORD PTR ds:[esi]
  402ffe:	add    cl,ch
  403000:	fisubr WORD PTR [edi]
  403002:	add    cl,ch
  403004:	fldenv [ebp+0xfcee900]
  40300a:	add    cl,ch
  40300c:	into   
  40300d:	pop    DWORD PTR [eax]
  40300f:	jmp    0xe9407ff2
  403014:	fxam   
  403016:	add    cl,bl
  403018:	fild   DWORD PTR [eax]
  40301a:	add    cl,ch
  40301c:	into   
  40301d:	aaa    
  40301e:	add    cl,ch
  403020:	fdivrp st(7),st
  403022:	(bad)  
  403023:	call   0xfd40a601
  403028:	fld    TBYTE PTR [edx+0x0]
  40302b:	jmp    0xe94087fe
  403030:	ficom  WORD PTR [edi]
  403032:	add    cl,ch
  403034:	fnstenv [ebp-0xd242500]
  40303a:	(bad)  
  40303b:	call   0xe940980e
  403040:	fisub  WORD PTR [edi]
  403042:	add    cl,ch
  403044:	fst    DWORD PTR [ebp+0x7cee900]
  40304a:	add    cl,ch
  40304c:	into   
  40304d:	xchg   DWORD PTR [eax],eax
  40304f:	jmp    0xe9407832
  403054:	(bad)  
  403056:	add    cl,cl
  403058:	add    BYTE PTR [eax],al
  40305a:	fisttp DWORD PTR [ecx]
  40305c:	add    cl,ch
  40305e:	into   
  40305f:	cmp    BYTE PTR [eax],al
  403061:	jmp    0xf4402944
  403066:	fimul  WORD PTR [edx-0x9240500]
  40306c:	(bad)  
  40306d:	call   0x408940
  403072:	cld    
  403073:	add    DWORD PTR [ecx],esi
  403075:	add    ah,bh
  403077:	add    al,0xc2
  403079:	add    ah,bh
  40307b:	push   cs
  40307c:	or     al,BYTE PTR [eax]
  40307e:	in     al,dx
  40307f:	add    DWORD PTR [ecx+0x0],esp
  403082:	mov    esp,0xbc002101
  403087:	push   es
  403088:	mov    ds:0x101ac00,al
  40308d:	add    BYTE PTR [ecx+eax*1+0x1bc0081],ch
  403094:	inc    ecx
  403095:	add    BYTE PTR [esi+eax*1+0xc7c00e2],bh
  40309c:	push   es
  40309d:	add    BYTE PTR [ecx+eax*1+0x17c0059],ch
  4030a4:	sbb    DWORD PTR [eax],eax
  4030a6:	jl     0x4030ae
  4030a8:	xchg   edx,eax
  4030a9:	add    BYTE PTR [edi+0xc],bh
  4030ac:	cmp    eax,DWORD PTR [eax]
  4030ae:	ins    BYTE PTR es:[edi],dx
  4030af:	add    DWORD PTR [ecx+0x0],edi
  4030b2:	jl     0x4030b5
  4030b4:	cmp    DWORD PTR [eax],eax
  4030b6:	jl     0x4030be
  4030b8:	rol    BYTE PTR [eax],cl
  4030ba:	jge    0x4030c8
  4030bc:	adc    DWORD PTR [eax],eax
  4030be:	add    BYTE PTR [eax],al
  4030c0:	ins    BYTE PTR es:[edi],dx
  4030c1:	add    DWORD PTR [ecx+0x0],ebp
  4030c4:	cmp    al,0x1
  4030c6:	sub    DWORD PTR [eax],eax
  4030c8:	cmp    al,0x6
  4030ca:	mov    dl,0x0
  4030cc:	sub    al,0x1
  4030ce:	or     DWORD PTR [eax],eax
  4030d0:	sub    al,0x1
  4030d2:	mov    DWORD PTR [eax],eax
  4030d4:	cmp    al,0x1
  4030d6:	dec    ecx
  4030d7:	add    BYTE PTR [esi+eax*1],bh
  4030da:	repnz add ah,bh
  4030dd:	or     eax,DWORD PTR [eax+eax*1]
  4030e0:	sub    al,0x1
  4030e2:	push   ebp
  4030e3:	add    ah,bh
  4030e5:	add    BYTE PTR ds:0x2010c00,dl
  4030eb:	add    ebp,edx
  4030ed:	iret   
  4030ee:	push   es
  4030ef:	sub    edx,ebp
  4030f1:	loop   0x4030fe
  4030f3:	jne    0x4030ca
  4030f5:	loop   0x403102
  4030f7:	xor    eax,0xca0ce2d5
  4030fc:	aad    0xb1
  4030fe:	push   es
  4030ff:	or     eax,0x650be2d5
  403104:	aad    0xe2
  403106:	or     esp,DWORD PTR ds:0xaa0ae2d5
  40310c:	aad    0xe2
  40310e:	or     eax,DWORD PTR ds:0x850be2d5
  403114:	aad    0xe2
  403116:	or     eax,DWORD PTR [ebp-0x2b]
  403119:	loop   0x403125
  40311b:	jmp    0xe2d5:0x804b2d5
  403122:	or     ebx,DWORD PTR [ebp+0x0]
  403125:	add    ch,dl
  403127:	loop   0x403134
  403129:	sbb    eax,0x9a0ae2d5
  40312e:	aad    0xd6
  403130:	add    al,0x53
  403132:	aad    0xe2
  403134:	or     edi,DWORD PTR [ebp-0x2b]
  403137:	loop   0x403144
  403139:	cmp    eax,0xda0ae2d5
  40313e:	aad    0xb0
  403140:	add    al,0x17
  403142:	aad    0xe2
  403144:	or     ebp,DWORD PTR [ebp-0x2b]
  403147:	loop   0x403154
  403149:	sub    eax,0xba0ae2d5
  40314e:	aad    0xe2
  403150:	or     ecx,DWORD PTR ds:0x8d0be2d5
  403156:	aad    0xe2
  403158:	or     ecx,DWORD PTR [ebp-0x2b]
  40315b:	loop   0x403167
  40315d:	cli    
  40315e:	aad    0xb2
  403160:	add    al,0x3
  403162:	aad    0xe2
  403164:	or     edx,DWORD PTR [ebx-0x2b]
  403167:	or     ecx,ebp
  403169:	or     esp,esi
  40316b:	or     esp,esi
  40316d:	or     edx,DWORD PTR [esi]
  40316f:	or     edx,edi
  403171:	add    al,0xb6
  403173:	or     ecx,ebp
  403175:	or     esp,DWORD PTR [esi+0x9]
  403178:	jmp    0xe949d788
  40317d:	or     bl,BYTE PTR [ebx]
  40317f:	or     eax,ebx
  403181:	add    al,0xce
  403183:	or     ecx,ebp
  403185:	or     esi,DWORD PTR [esi]
  403187:	or     ch,cl
  403189:	or     eax,DWORD PTR [eax]
  40318b:	add    dh,dh
  40318d:	or     ecx,ebp
  40318f:	or     bh,BYTE PTR [ebx+0xa]
  403192:	jmp    0xe94a07a2
  403197:	or     edx,DWORD PTR [esi+0xa]
  40319a:	jmp    0xe94a47aa
  40319f:	or     bh,BYTE PTR [ebx-0x2dfb26f6]
  4031a5:	or     ecx,ebp
  4031a7:	or     ebp,DWORD PTR [esi]
  4031a9:	or     ch,cl
  4031ab:	or     ebp,esi
  4031ad:	or     ecx,ebp
  4031af:	or     ch,BYTE PTR [ebx+0xa]
  4031b2:	std    
  4031b3:	add    al,0x16
  4031b5:	or     ch,cl
  4031b7:	or     ebp,esi
  4031b9:	or     ecx,ebp
  4031bb:	or     ebp,DWORD PTR [esi-0x74f516f7]
  4031c1:	or     bl,bl
  4031c3:	add    al,0xc6
  4031c5:	or     ecx,ebp
  4031c7:	or     edi,DWORD PTR [esi-0x1f416f7]
  4031cd:	or     ecx,ebp
  4031cf:	or     cl,BYTE PTR [ebx-0x31f416f6]
  4031d5:	or     ecx,ebp
  4031d7:	or     ebx,DWORD PTR [esi+0xa]
  4031da:	jmp    0xe949cfea
  4031df:	or     ch,BYTE PTR [ebx]
  4031e1:	or     al,BYTE PTR [eax]
  4031e3:	(bad)  
  4031e5:	or     al,0x0
  4031e7:	jmp    0xe9406cca
  4031ec:	fdivp  st(2),st
  4031ee:	jmp    FWORD PTR [eax+0x9ce0000]
  4031f4:	add    dl,bh
  4031f6:	rcl    DWORD PTR [esi],1
  4031f8:	add    cl,ch
  4031fa:	ficomp WORD PTR [edx+0x0]
  4031fd:	jmp    0xe9404ce0
  403202:	iret   
  403203:	ret    
  403204:	add    al,bl
  403206:	rol    DWORD PTR [edx],1
  403208:	add    cl,ch
  40320a:	fisubr WORD PTR [edx+0x0]
  40320d:	jmp    0xe9405cf0
  403212:	shl    DWORD PTR [ebx+0xacee900],1
  403218:	add    cl,ch
  40321a:	fimul  WORD PTR [edx+0x4adee900]
  403220:	add    cl,ch
  403222:	shl    ebx,1
  403224:	add    cl,bl
  403226:	xlat   BYTE PTR ds:[ebx]
  403227:	add    BYTE PTR [eax],al
  403229:	jmp    0xe940650c
  40322e:	fdivrp st(2),st
  403230:	(bad)  
  403231:	call   0xfd40a607
  403236:	xlat   BYTE PTR ds:[ebx]
  403237:	data16 add cl,ch
  40323a:	ficom  WORD PTR [edx+0x0]
  40323d:	jmp    0xe9404520
  403242:	shl    DWORD PTR [ebx-0x11282500],1
  403248:	(bad)  
  403249:	call   0xe940952c
  40324e:	fisub  WORD PTR [edx]
  403250:	add    cl,ch
  403252:	rcl    DWORD PTR [ebx+0xe900],1
  403258:	into   
  403259:	add    al,BYTE PTR [eax]
  40325b:	jmp    0x40b53e
  403260:	cmp    al,0xfe
  403262:	dec    esi
  403263:	add    BYTE PTR [eax*1+0x70c00fe],ch
  40326a:	add    BYTE PTR [eax],al
  40326c:	cld    
  40326d:	std    
  40326e:	dec    edi
  40326f:	add    ah,bh
  403271:	std    
  403272:	str    WORD PTR [eax]
  403275:	(bad)  
  403276:	jb     0x403278
  403278:	inc    BYTE PTR [esi]
  40327a:	pop    ds
  40327b:	add    ah,bh
  40327d:	std    
  40327e:	outs   dx,DWORD PTR ds:[esi]
  40327f:	add    ah,bh
  403281:	std    
  403282:	das    
  403283:	add    ah,ch
  403285:	add    al,0xc1
  403287:	add    ah,bh
  403289:	push   es
  40328a:	or     al,BYTE PTR [eax]
  40328c:	mov    esp,0xbc006005
  403291:	add    eax,0xfeac0020
  403296:	mov    al,ds:0x5ac00
  40329b:	add    BYTE PTR [ebp+eax*1+0x5bc0080],bh
  4032a2:	inc    eax
  4032a3:	add    BYTE PTR [esi+edi*8+0xc7c00e0],ch
  4032aa:	push   es
  4032ab:	add    BYTE PTR [ebp+eax*1+0x58],bh
  4032af:	add    BYTE PTR [ebp+eax*1+0x18],bh
  4032b3:	add    BYTE PTR [esi+edi*8-0x70],ch
  4032b7:	add    BYTE PTR [edi+0xc],bh
  4032ba:	cmp    eax,DWORD PTR [eax]
  4032bc:	add    BYTE PTR [eax],al
  4032be:	jl     0x4032c5
  4032c0:	js     0x4032c2
  4032c2:	jl     0x4032c9
  4032c4:	cmp    BYTE PTR [eax],al
  4032c6:	ins    BYTE PTR es:[edi],dx
  4032c7:	(bad)  
  4032c8:	rol    BYTE PTR [eax],1
  4032ca:	jge    0x4032d8
  4032cc:	adc    DWORD PTR [eax],eax
  4032ce:	cmp    al,0x5
  4032d0:	push   0x28053c00
  4032d5:	add    BYTE PTR [esi+edi*8],ch
  4032d8:	mov    al,0x0
  4032da:	aad    0xe2
  4032dc:	or     ecx,DWORD PTR [eax]
  4032de:	aad    0xe2
  4032e0:	or     ecx,DWORD PTR [eax+0x480be2d5]
  4032e6:	aad    0xe2
  4032e8:	or     al,0xf1
  4032ea:	aad    0xb2
  4032ec:	add    al,BYTE PTR [edx*8-0x2aabf41e]
  4032f3:	loop   0x403300
  4032f5:	adc    al,0xd5
  4032f7:	aad    0xb
  4032f9:	jecxz  0x4032d0
  4032fb:	rol    DWORD PTR [edx],cl
  4032fd:	sub    edx,ebp
  4032ff:	loop   0x40330c
  403301:	je     0x4032d8
  403303:	loop   0x403310
  403305:	xor    al,0xd5
  403307:	loop   0x403315
  403309:	leave  
  40330a:	aad    0xb1
  40330c:	add    cl,BYTE PTR ds:0x640be2d5
  403312:	aad    0xe2
  403314:	or     esp,DWORD PTR [edx*8-0x2a56f51e]
  40331b:	loop   0x403328
  40331d:	add    al,0xd5
  40331f:	loop   0x40332c
  403321:	test   BYTE PTR [eax],al
  403323:	add    ch,dl
  403325:	loop   0x403332
  403327:	inc    esp
  403328:	aad    0xe2
  40332a:	or     ch,cl
  40332c:	aad    0xb2
  40332e:	add    BYTE PTR [eax],cl
  403330:	aad    0xe2
  403332:	or     ebx,DWORD PTR [ebp+edx*8-0x1e]
  403336:	or     ebx,DWORD PTR [edx*8-0x2a66f51e]
  40333d:	into   
  40333e:	add    BYTE PTR [ebx-0x2b],dl
  403341:	loop   0x40334e
  403343:	jl     0x40331a
  403345:	loop   0x403352
  403347:	cmp    al,0xd5
  403349:	loop   0x403355
  40334b:	(bad)  
  40334d:	mov    ah,0x0
  40334f:	pop    ss
  403350:	aad    0xe2
  403352:	or     ebp,DWORD PTR [ebp+edx*8+0x9]
  403356:	jmp    0xe94a2466
  40335b:	or     bh,BYTE PTR [ecx+ecx*1-0x17]
  40335f:	or     esp,ecx
  403361:	or     ecx,ebp
  403363:	or     ebx,DWORD PTR [ecx+0x9]
  403366:	jmp    0xe949c476
  40336b:	or     bl,BYTE PTR [ecx+ecx*1]
  40336e:	fld    DWORD PTR [eax]
  403370:	(bad)  
  403371:	or     ecx,ebp
  403373:	or     esp,DWORD PTR [edi-0x18f416f7]
  403379:	or     esp,esi
  40337b:	or     esi,DWORD PTR [esi]
  40337d:	or     edx,edi
  40337f:	add    BYTE PTR [esi+0x670be909],dh
  403385:	or     ecx,ebp
  403387:	or     eax,DWORD PTR [eax]
  403389:	add    BYTE PTR [edi+0x100ae909],ah
  40338f:	or     eax,ebx
  403391:	add    dh,bl
  403393:	or     ecx,ebp
  403395:	or     esi,DWORD PTR [edi]
  403397:	or     ch,cl
  403399:	or     esi,edi
  40339b:	or     ecx,ebp
  40339d:	or     dh,BYTE PTR [eax+0xa]
  4033a0:	jmp    0xe94a0ab0
  4033a5:	or     edx,DWORD PTR [edi+0xa]
  4033a8:	jmp    0xe94a4ab8
  4033ad:	or     dh,BYTE PTR [eax-0x25ff26f6]
  4033b3:	or     ecx,ebp
  4033b5:	or     ebp,DWORD PTR [edi]
  4033b7:	or     ch,cl
  4033b9:	or     ebx,edi
  4033bb:	or     ecx,ebp
  4033bd:	or     ah,BYTE PTR [eax+0xa]
  4033c0:	std    
  4033c1:	add    BYTE PTR [esi],dl
  4033c3:	or     ch,cl
  4033c5:	or     ebp,edi
  4033c7:	or     ecx,ebp
  4033c9:	or     ebx,DWORD PTR [edi-0x7ff516f7]
  4033cf:	or     al,BYTE PTR [eax]
  4033d1:	fcmovnbe st,st(5)
  4033d3:	cli    
  4033d4:	(bad)  
  4033d5:	call   0xe94097b8
  4033da:	into   
  4033db:	and    eax,DWORD PTR [eax]
  4033dd:	jmp    0xe940c8b1
  4033e2:	fiadd  WORD PTR [ebx]
  4033e4:	add    cl,ch
  4033e6:	fiadd  WORD PTR [ebx+0x43cee900]
  4033ec:	add    cl,ch
  4033ee:	add    BYTE PTR [eax],al
  4033f0:	iret   
  4033f1:	aam    0x0
  4033f3:	(bad)  
  4033f5:	add    al,0x0
  4033f7:	jmp    0xe9406bda
  4033fc:	into   
  4033fd:	idiv   edi
  4033ff:	test   al,0xce
  403401:	or     DWORD PTR [eax],eax
  403403:	cli    
  403404:	aad    0x1a
  403406:	add    cl,ch
  403408:	ficom  WORD PTR [edi+0x0]
  40340b:	jmp    0xe9404bde
  403410:	iret   
  403411:	mov    esp,0xfed5d800
  403416:	(bad)  
  403417:	call   0xe9409bfa
  40341c:	into   
  40341d:	daa    
  40341e:	add    cl,ch
  403420:	leave  
  403421:	pushf  
  403422:	add    cl,ch
  403424:	fiadd  WORD PTR [edi]
  403426:	add    cl,ch
  403428:	fiadd  WORD PTR [edi+0x47cee900]
  40342e:	add    cl,ch
  403430:	leave  
  403431:	fadd   QWORD PTR [eax]
  403433:	fst    DWORD PTR [ebx-0x2116ffff]
  403439:	das    
  40343a:	add    cl,ch
  40343c:	into   
  40343d:	out    dx,eax
  40343e:	(bad)  
  40343f:	call   0xfd40a10d
  403444:	jae    0x4034b1
  403446:	add    cl,ch
  403448:	fimul  WORD PTR [edi+0x0]
  40344b:	add    BYTE PTR [edx+eax*1+0x3e],ch
  40344f:	add    BYTE PTR [ebp+edi*8-0x24],ch
  403453:	add    BYTE PTR [eax],al
  403455:	add    BYTE PTR [esi],ch
  403457:	iret   
  403458:	sbb    al,BYTE PTR [eax]
  40345a:	cmp    al,0x2
  40345c:	outs   dx,BYTE PTR ds:[esi]
  40345d:	add    BYTE PTR [edx+eax*1],ch
  403460:	add    BYTE PTR cs:[edi*8+0x23c00bc],ch
  403468:	push   cs
  403469:	add    BYTE PTR [edx+eax*1],bh
  40346c:	mov    es,WORD PTR [eax]
  40346e:	sub    al,0x2
  403470:	dec    esi
  403471:	add    BYTE PTR [edi*8-0x30e3ff04],ch
  403478:	(bad)  
  403479:	(bad)  
  40347a:	cld    
  40347b:	add    DWORD PTR [ecx+0x0],edx
  40347e:	in     al,dx
  40347f:	add    DWORD PTR [ecx],edx
  403481:	add    BYTE PTR [ecx],al
  403483:	add    al,BYTE PTR [ebx+0x1eceee00]
  403489:	add    ah,bh
  40348b:	add    DWORD PTR [ecx+0x0],esi
  40348e:	in     al,dx
  40348f:	add    DWORD PTR [ecx],esi
  403491:	add    ah,ch
  403493:	cld    
  403494:	ret    0xac00
  403497:	int3   
  403498:	or     DWORD PTR [eax],eax
  40349a:	mov    esp,0xac006101
  40349f:	add    DWORD PTR [ecx],esp
  4034a1:	add    BYTE PTR [esi+edi*8+0x1bc00a2],ch
  4034a8:	add    DWORD PTR [eax],eax
  4034aa:	mov    esp,0xac008101
  4034af:	add    DWORD PTR [ecx+0x0],eax
  4034b2:	lods   al,BYTE PTR ds:[esi]
  4034b3:	(bad)  
  4034b4:	loop   0x4034b6
  4034b6:	lods   al,BYTE PTR ds:[esi]
  4034b7:	int3   
  4034b8:	add    eax,0x7c000000
  4034bd:	add    DWORD PTR [ecx+0x0],ebx
  4034c0:	ins    BYTE PTR es:[edi],dx
  4034c1:	add    DWORD PTR [ecx],ebx
  4034c3:	add    BYTE PTR [esi+edi*8-0x6e],ch
  4034c7:	add    ch,dl
  4034c9:	iret   
  4034ca:	(bad)  
  4034cb:	cmp    dl,ch
  4034cd:	loop   0x4034da
  4034cf:	jns    0x4034a6
  4034d1:	loop   0x4034de
  4034d3:	cmp    ebp,edx
  4034d5:	loop   0x4034e3
  4034d7:	rcl    ebp,cl
  4034d9:	mov    cl,0xfe
  4034db:	adc    ch,dl
  4034dd:	loop   0x4034ea
  4034df:	imul   edx,ebp,0xd5290be2
  4034e5:	loop   0x4034f3
  4034e7:	mov    bl,0xd5
  4034e9:	loop   0x4034f6
  4034eb:	or     ebp,edx
  4034ed:	loop   0x4034fa
  4034ef:	mov    ebp,edx
  4034f1:	loop   0x4034fe
  4034f3:	dec    ecx
  4034f4:	aad    0xe2
  4034f6:	or     al,0xf3
  4034f8:	aad    0xb2
  4034fa:	inc    BYTE PTR [ebx]
  4034fc:	aad    0xe2
  4034fe:	or     edx,DWORD PTR [ebp-0x2b]
  403501:	loop   0x40350e
  403503:	adc    eax,0x20bd2d5
  403508:	aam    0xcf
  40350a:	(bad)  
  40350b:	sub    dl,ch
  40350d:	loop   0x40351a
  40350f:	jne    0x4034e6
  403511:	loop   0x40351e
  403513:	xor    eax,0xcb0ce2d5
  403518:	aad    0xb1
  40351a:	dec    BYTE PTR [edx*8+0x650be2]
  403521:	add    ch,dl
  403523:	loop   0x403530
  403525:	and    eax,0xab0ae2d5
  40352a:	aad    0xe2
  40352c:	or     eax,DWORD PTR ds:0x850be2d5
  403532:	aad    0xe2
  403534:	or     eax,DWORD PTR [ebp-0x2b]
  403537:	loop   0x403543
  403539:	jmp    0x403510
  40353b:	mov    dl,0xfc
  40353d:	pop    es
  40353e:	aad    0xe2
  403540:	or     ebx,DWORD PTR [ebp-0x2b]
  403543:	or     ecx,ebp
  403545:	or     ebx,eax
  403547:	or     ecx,ebp
  403549:	or     cl,BYTE PTR [esi+0x9]
  40354c:	std    
  40354d:	cld    
  40354e:	pop    es
  40354f:	or     ch,cl
  403551:	or     esp,eax
  403553:	or     ecx,ebp
  403555:	or     ebx,DWORD PTR [eax+0x2e0ae909]
  40355b:	or     ebx,ebx
  40355d:	cld    
  40355e:	jecxz  0x403569
  403560:	jmp    0xe949e570
  403565:	or     ebp,eax
  403567:	or     ecx,ebp
  403569:	or     ch,BYTE PTR [esi+0x9]
  40356c:	jmp    0xe94a0d7c
  403571:	or     edx,DWORD PTR [eax+0x9]
  403574:	jmp    0xe949bd84
  403579:	or     cl,BYTE PTR [esi]
  40357b:	or     ecx,ebx
  40357d:	cld    
  40357e:	xlat   BYTE PTR ds:[ebx]
  40357f:	or     ecx,ebp
  403581:	or     esp,DWORD PTR [esi+0xbe909]
  403587:	add    dh,ah
  403589:	or     esp,esi
  40358b:	or     edx,DWORD PTR [esi]
  40358d:	or     edx,edi
  40358f:	cld    
  403590:	mov    bh,0x9
  403592:	jmp    0xe9499ba2
  403597:	or     esp,DWORD PTR [esi-0x65f516f7]
  40359d:	or     bl,al
  40359f:	cld    
  4035a0:	fisttp WORD PTR [ecx]
  4035a2:	jmp    0xe94a6bb2
  4035a7:	or     esi,esi
  4035a9:	or     ecx,ebp
  4035ab:	or     bh,BYTE PTR [edx+0xa]
  4035ae:	jmp    0xe94a0bbe
  4035b3:	or     edx,DWORD PTR [esi+0xa]
  4035b6:	jmp    0xe94a4bc6
  4035bb:	or     bh,BYTE PTR [edx+0xa]
  4035be:	add    cl,bl
  4035c0:	mov    DWORD PTR [eax+eax*1],eax
  4035c3:	jmp    0xe9406496
  4035c8:	into   
  4035c9:	out    dx,al
  4035ca:	(bad)  
  4035cb:	call   0xfd40a8af
  4035d0:	imul   ecx,DWORD PTR [eax+0x0],0x4ecee9
  4035d7:	jmp    0xe94044aa
  4035dc:	fbstp  TBYTE PTR [edx-0x7b62500]
  4035e2:	(bad)  
  4035e3:	call   0xe94094b6
  4035e8:	into   
  4035e9:	push   ds
  4035ea:	add    cl,ch
  4035ec:	add    BYTE PTR [eax],al
  4035ee:	fist   WORD PTR [edx-0x1211700]
  4035f4:	(bad)  
  4035f5:	call   0xe940b4c8
  4035fa:	into   
  4035fb:	ds add cl,ch
  4035fe:	(bad)  
  403600:	add    cl,bl
  403602:	or     DWORD PTR [esi],eax
  403604:	add    cl,ch
  403606:	into   
  403607:	xor    al,BYTE PTR [eax]
  403609:	jmp    0xa94028dc
  40360e:	fimul  WORD PTR [ecx]
  403610:	add    dl,bh
  403612:	jmp    0xcf29362e
  403617:	push   edx
  403618:	add    cl,ch
  40361a:	into   
  40361b:	adc    al,BYTE PTR [eax]
  40361d:	jmp    0xd840f101
  403622:	leave  
  403623:	sti    
  403624:	(bad)  
  403625:	call   0xe94098f8
  40362a:	mov    esi,0xb1e90023
  40362f:	fwait
  403630:	add    cl,ch
  403632:	scas   al,BYTE PTR es:[edi]
  403633:	add    eax,DWORD PTR [eax]
  403635:	jmp    0x40b9d8
  40363a:	lods   al,BYTE PTR ds:[esi]
  40363b:	into   
  40363c:	inc    esi
  40363d:	add    BYTE PTR [ebp+ecx*8-0x12],bh
  403641:	add    BYTE PTR [edi+edi*8-0x3193fff8],ch
  403648:	pop    esi
  403649:	add    BYTE PTR [esi+ecx*8+0x1e],ch
  40364d:	add    BYTE PTR [ebp+ecx*8-0x62],bh
  403651:	add    BYTE PTR [eax],al
  403653:	add    BYTE PTR [eax-0x1],ch
  403656:	bound  eax,QWORD PTR [eax]
  403658:	ins    BYTE PTR es:[edi],dx
  403659:	into   
  40365a:	jle    0x40365c
  40365c:	ins    BYTE PTR es:[edi],dx
  40365d:	into   
  40365e:	add    BYTE PTR ds:[ecx*8-0xd1ff22],bh
  403666:	sbb    al,BYTE PTR [eax]
  403668:	sub    al,0xce
  40366a:	outs   dx,BYTE PTR ds:[esi]
  40366b:	add    BYTE PTR [esi+ecx*8],ch
  40366e:	add    BYTE PTR cs:[ecx*8-0x31c3ff42],bh
  403676:	push   cs
  403677:	add    BYTE PTR [esi+ecx*8],ch
  40367a:	mov    es,WORD PTR [eax]
  40367c:	sub    al,0xce
  40367e:	dec    esi
  40367f:	add    ah,bh
  403681:	int3   
  403682:	inc    BYTE PTR [eax]
  403684:	sub    al,0x1
  403686:	add    DWORD PTR [eax],eax
  403688:	sub    eax,DWORD PTR [ecx]
  40368a:	add    DWORD PTR [ecx],eax
  40368c:	inc    DWORD PTR [eax]
  40368e:	adc    DWORD PTR [eax],eax
  403690:	xlat   BYTE PTR ds:[ebx]
  403691:	add    BYTE PTR [ecx],al
  403693:	adc    ch,ch
  403695:	add    BYTE PTR ds:0x100e500,al
  40369b:	add    al,0xf9
  40369d:	add    BYTE PTR [ecx+0x0],al
  4036a0:	mov    cl,0x12
  4036a2:	add    DWORD PTR [eax-0x54],eax
  4036a5:	adc    al,BYTE PTR [ebx]
  4036a7:	add    BYTE PTR [edx+edx*1+0x12b80201],ah
  4036ae:	and    DWORD PTR [eax],eax
  4036b0:	mov    al,0x12
  4036b2:	add    DWORD PTR [eax],esp
  4036b4:	aad    0xc4
  4036b6:	or     BYTE PTR [ecx],cl
  4036b8:	add    BYTE PTR [eax],al
  4036ba:	aad    0xbc
  4036bc:	or     BYTE PTR [ecx],al
  4036be:	int    0xe8
  4036c0:	or     BYTE PTR [ecx+0x8f2d5],al
  4036c6:	aad    0xe2
  4036c8:	or     BYTE PTR [edx],al
  4036ca:	aad    0xdf
  4036cc:	or     BYTE PTR [ecx+0x1908c3d4],al
  4036d2:	aad    0xb
  4036d4:	or     DWORD PTR [ecx],eax
  4036d6:	int    0xc1
  4036d8:	or     BYTE PTR [edi],al
  4036da:	aad    0xb9
  4036dc:	or     BYTE PTR [ecx],al
  4036de:	shl    ebp,cl
  4036e0:	or     BYTE PTR [ecx-0x2b],ah
  4036e3:	in     eax,0x8
  4036e5:	add    DWORD PTR [ebp-0x2afbf71e],esi
  4036eb:	fimul  DWORD PTR [eax]
  4036ed:	add    esi,edx
  4036ef:	(bad)  
  4036f0:	or     BYTE PTR [ecx],dh
  4036f2:	aad    0xc6
  4036f4:	or     BYTE PTR [ecx],al
  4036f6:	in     eax,0xc4
  4036f8:	or     BYTE PTR ds:0x108bcd5,cl
  4036fe:	leave  
  4036ff:	call   0x7315f80c
  403704:	or     BYTE PTR [eax],al
  403706:	aad    0xe2
  403708:	add    edx,DWORD PTR [ecx]
  40370a:	aad    0xe4
  40370c:	add    eax,DWORD PTR [eax]
  40370e:	aad    0xba
  403710:	add    eax,DWORD PTR [edi]
  403712:	aad    0xb9
  403714:	add    eax,DWORD PTR [esi]
  403716:	aad    0xac
  403718:	add    eax,DWORD PTR ds:0x403abd5
  40371e:	add    BYTE PTR [eax],al
  403720:	aad    0xbe
  403722:	add    eax,DWORD PTR [ebx]
  403724:	aad    0xb5
  403726:	add    eax,DWORD PTR [edx]
  403728:	aad    0xb0
  40372a:	add    eax,DWORD PTR [ecx]
  40372c:	aad    0xe7
  40372e:	add    eax,DWORD PTR [eax]
  403730:	aad    0x9
  403732:	jmp    0x774a0c3a
  403737:	adc    al,0xd2
  403739:	inc    eax
  40373a:	add    eax,0x93b7d363
  40373f:	xor    ecx,esp
  403741:	mov    ds:0x1100c7e0,al
  403746:	outs   dx,BYTE PTR ds:[esi]
  403747:	fdivr  st,st(7)
  403749:	cmp    esp,edi
  40374b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40374c:	div    BYTE PTR [edx-0x580e8876]
  403752:	fstp   TBYTE PTR [ebx-0x72]
  403755:	pop    ss
  403756:	inc    ebp
  403757:	mov    WORD PTR [ecx-0x772508be],cs
  40375d:	test   eax,0xa087ab61
  403762:	sar    BYTE PTR [edi],cl
  403764:	mov    edx,DWORD PTR [edx]
  403766:	cmp    al,0x50
  403768:	test   BYTE PTR [edi-0x12],al
  40376b:	push   ds
  40376c:	jge    0x40371e
  40376e:	pop    eax
  40376f:	out    dx,eax
  403770:	jnp    0x40370b
  403772:	int    0xf3
  403774:	imul   esp,DWORD PTR [esi],0x5b
  403777:	and    al,0x65
  403779:	xor    esp,DWORD PTR [ecx+0x2fbc5c52]
  40377f:	inc    ebx
  403780:	pop    ebx
  403781:	(bad)  
  403782:	les    esi,FWORD PTR [edi+0x232f0000]
  403788:	push   edx
  403789:	call   0x96d86db6
  40378e:	sub    DWORD PTR [ebp-0x73d978da],edi
  403794:	mov    edi,0x291c816b
  403799:	pushf  
  40379a:	jle    0x4037c9
  40379c:	xchg   ebx,eax
  40379d:	retf   0xc677
  4037a0:	std    
  4037a1:	mov    edx,0x2fb69370
  4037a6:	aam    0x1d
  4037a8:	and    BYTE PTR [eax-0x2d],ah
  4037ab:	sub    al,BYTE PTR [eax]
  4037ad:	mov    dl,bl
  4037af:	push   ss
  4037b0:	cli    
  4037b1:	hlt    
  4037b2:	mov    ebx,0xf6b18d0f
  4037b7:	aaa    
  4037b8:	cmp    edi,DWORD PTR [edi]
  4037ba:	mov    eax,ds:0x17cd4c32
  4037bf:	sub    dl,ch
  4037c1:	pop    ebx
  4037c2:	push   es
  4037c3:	das    
  4037c4:	mov    ds:0x3c0b7a98,al
  4037c9:	es dec ebp
  4037cb:	push   cs
  4037cc:	dec    ebx
  4037cd:	mov    ah,0x5b
  4037cf:	adc    eax,0x146242d2
  4037d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037d5:	mov    ds:0xd357d4e,eax
  4037da:	stc    
  4037db:	jnp    0x40381f
  4037dd:	mov    edi,0x29db831f
  4037e2:	mov    es,WORD PTR [esi-0x1e4d7554]
  4037e8:	xor    dh,ah
  4037ea:	add    BYTE PTR [eax],al
  4037ec:	cli    
  4037ed:	out    0x45,al
  4037ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037f0:	inc    ebx
  4037f1:	fstp   st(4)
  4037f3:	adc    dl,cl
  4037f5:	fsubr  DWORD PTR [ebx+0x26e0c695]
  4037fb:	and    edx,ecx
  4037fd:	out    0x51,eax
  4037ff:	imul   esp,edi,0xb7f7c8de
  403805:	fnstcw WORD PTR [edi+0x217e2a7c]
  40380b:	or     bl,BYTE PTR ds:0x8b50567b
  403811:	or     edi,0xffffffde
  403814:	xor    eax,DWORD PTR [ebp+0xc5e87b8]
  40381a:	sub    cl,dh
  40381c:	outs   dx,BYTE PTR ds:[esi]
  40381d:	or     al,0x5f
  40381f:	pop    ebx
  403820:	das    
  403821:	push   ss
  403822:	mov    ch,0xff
  403825:	adc    dh,BYTE PTR [ecx+0x6f574300]
  40382b:	das    
  40382c:	lods   eax,DWORD PTR ds:[esi]
  40382d:	push   es
  40382e:	push   0x60b81758
  403833:	shr    DWORD PTR [ecx+0x27],0x66
  403837:	mov    dh,0x2c
  403839:	dec    ebp
  40383a:	fdiv   QWORD PTR [esi-0x4e]
  40383d:	pop    ebp
  40383e:	fild   DWORD PTR [ecx]
  403840:	dec    eax
  403841:	in     eax,dx
  403842:	rcr    DWORD PTR [eax-0x102b422a],1
  403848:	add    eax,0xab71b191
  40384d:	mov    eax,ds:0x6b6
  403852:	push   ecx
  403853:	mov    cl,0xbf
  403855:	lahf   
  403856:	jg     0x4038d6
  403858:	mov    eax,0x7851ee8
  40385d:	js     0x4037df
  40385f:	aad    0x0
  403861:	psubd  mm4,QWORD PTR [ebp+0x32649609]
  403868:	push   cs
  403869:	loope  0x403802
  40386b:	or     BYTE PTR [edx+0x7f],ch
  40386e:	sbb    DWORD PTR [ecx],ebx
  403870:	ins    DWORD PTR es:[edi],dx
  403871:	or     BYTE PTR [ebx+0x2d916429],ah
  403877:	mul    BYTE PTR [edx-0x1a]
  40387a:	nop
  40387b:	cld    
  40387c:	push   0x6b
  40387e:	push   ds
  40387f:	sub    eax,0x1de41c6c
  403884:	test   DWORD PTR gs:[edx],edi
  403887:	or     ah,BYTE PTR [edx-0xe]
  40388a:	test   eax,0x176c0640
  40388f:	jno    0x403892
  403891:	sbb    ebp,DWORD PTR [ebp+0x638208e1]
  403897:	into   
  403898:	pmaddwd mm0,mm2
  40389b:	je     0x40384d
  40389d:	gs sub al,0xe5
  4038a0:	mov    bh,0x12
  4038a2:	aad    0xa
  4038a4:	mov    WORD PTR [esi-0x46846bb2],?
  4038aa:	shr    esp,1
  4038ac:	lock fdiv QWORD PTR [edi]
  4038af:	jp     0x4038d1
  4038b1:	(bad)  
  4038b3:	mov    edi,0xd34f
  4038b8:	dec    ecx
  4038b9:	mov    ?,WORD PTR [edi]
  4038bb:	aam    0xae
  4038bd:	dec    ebx
  4038be:	gs mov dl,0x18
  4038c1:	jne    0x4038f7
  4038c3:	mov    ch,0xdf
  4038c5:	data16 add al,0xbc
  4038c8:	jbe    0x40389b
  4038ca:	adc    edi,DWORD PTR [ebx-0x20570d57]
  4038d0:	pop    ds
  4038d1:	pushf  
  4038d2:	js     0x4038ac
  4038d4:	ror    BYTE PTR [ebp-0x38],0xd1
  4038d8:	xor    DWORD PTR [eax-0x29],edi
  4038db:	(bad)  
  4038dc:	xchg   BYTE PTR [ecx],bl
  4038de:	(bad)  [ecx+0x16]
  4038e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038e2:	lods   al,BYTE PTR ds:[esi]
  4038e3:	outs   dx,BYTE PTR ds:[esi]
  4038e4:	test   eax,0x28677bf4
  4038e9:	or     DWORD PTR [ebx+0x20c02f60],0x4
  4038f0:	xchg   ecx,eax
  4038f1:	(bad)  
  4038f2:	lock add al,BYTE PTR [esi]
  4038f5:	sbb    al,0x40
  4038f7:	or     ch,BYTE PTR [edi+0x6a]
  4038fa:	dec    edi
  4038fb:	or     eax,0x554ef10
  403900:	test   DWORD PTR [eax-0x3d05fdbc],ebx
  403906:	repz or bl,BYTE PTR [ebx+0x2d]
  40390a:	and    ecx,DWORD PTR [esp+ebx*1]
  40390d:	push   ss
  40390e:	cdq    
  40390f:	push   0x6f883fa2
  403914:	mov    ch,0xa9
  403916:	mov    bh,0x66
  403918:	cmp    al,0x54
  40391a:	out    0x61,eax
  40391c:	add    BYTE PTR [eax],al
  40391e:	and    ecx,DWORD PTR [edx]
  403920:	test   esp,0xbc81640b
  403926:	cld    
  403927:	repnz retf 0x56b
  40392b:	jp     0x403982
  40392d:	fwait
  40392e:	stos   BYTE PTR es:[edi],al
  40392f:	int3   
  403930:	ficom  WORD PTR [eax]
  403932:	xchg   BYTE PTR [edx+0x68],ah
  403935:	add    BYTE PTR [ecx+0x782fb1f3],cl
  40393b:	jl     0x403979
  40393d:	pop    edi
  40393e:	outs   dx,DWORD PTR ds:[esi]
  40393f:	leave  
  403940:	or     DWORD PTR [ecx-0x6e684993],eax
  403946:	bound  ebx,QWORD PTR [edi+0x863e1e5]
  40394c:	jae    0x403900
  40394e:	inc    esp
  40394f:	cmp    eax,0xafa04500
  403954:	mov    ss,WORD PTR [ebp-0x59]
  403957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403958:	fsub   QWORD PTR ds:0xf66a0d9e
  40395e:	mov    ?,WORD PTR [eax]
  403960:	sti    
  403961:	clc    
  403962:	imul   DWORD PTR [eax-0x6206f69b]
  403968:	xlat   BYTE PTR ds:[ebx]
  403969:	pop    ecx
  40396a:	call   0xbf6a7a85
  40396f:	aas    
  403970:	repnz mov esp,0xcd5caddb
  403976:	int3   
  403977:	cwde   
  403978:	into   
  403979:	popf   
  40397a:	aad    0xf
  40397c:	cmp    BYTE PTR [esi-0x26],ch
  40397f:	inc    esi
  403980:	lods   eax,DWORD PTR ds:[esi]
  403981:	jo     0x403983
  403983:	add    dl,bl
  403985:	mov    ecx,0x8ccda13b
  40398a:	rcl    ecx,0xd4
  40398d:	and    ecx,DWORD PTR [edi-0x3e]
  403990:	(bad)  [edx]
  403992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403993:	xor    al,0x77
  403995:	mov    esp,0x89786532
  40399a:	add    BYTE PTR [eax+0x461935e0],bh
  4039a0:	(bad)  [eax]
  4039a2:	outs   dx,BYTE PTR ds:[esi]
  4039a3:	lahf   
  4039a4:	std    
  4039a5:	xlat   BYTE PTR ds:[ebx]
  4039a6:	dec    BYTE PTR [ecx]
  4039a8:	mov    esp,0x8cb389d8
  4039ad:	fist   WORD PTR [eax]
  4039af:	sbb    eax,0x9667e50f
  4039b4:	jns    0x403937
  4039b6:	stc    
  4039b7:	add    BYTE PTR [eax+0x48aa8e84],ah
  4039bd:	jnp    0x4039d6
  4039bf:	adc    al,0x33
  4039c1:	jp     0x403a23
  4039c3:	shl    DWORD PTR [ebp-0x24],1
  4039c6:	(bad)  
  4039c7:	pop    edi
  4039c8:	and    al,0xd9
  4039ca:	mov    eax,ds:0x38e294ad
  4039cf:	cmp    esp,DWORD PTR [edi-0xe47b01d]
  4039d5:	jle    0x4039a8
  4039d7:	inc    esi
  4039d8:	enter  0xa685,0x94
  4039dc:	sar    BYTE PTR [edi+edi*1+0x22],1
  4039e0:	retf   
  4039e1:	ja     0x403a2b
  4039e3:	ret    
  4039e4:	int    0x14
  4039e6:	fsubr  DWORD PTR ds:0x116c0000
  4039ec:	scas   eax,DWORD PTR es:[edi]
  4039ed:	lahf   
  4039ee:	pushf  
  4039ef:	push   es
  4039f0:	or     DWORD PTR ss:[edi+0x29aa410d],ebx
  4039f7:	sub    bl,bh
  4039f9:	adc    al,0x70
  4039fb:	sub    ebp,DWORD PTR [eax+0x3133b886]
  403a01:	lock pusha 
  403a03:	xor    DWORD PTR [esi+0x75],eax
  403a06:	inc    ebp
  403a07:	sub    ebx,ecx
  403a09:	add    edx,DWORD PTR [esp+ebp*1-0x44]
  403a0d:	mov    DWORD PTR [ebx+esi*1+0x25],esp
  403a11:	pop    ss
  403a12:	div    DWORD PTR [ecx]
  403a14:	push   edx
  403a15:	add    BYTE PTR [ecx-0x1033f3a3],ch
  403a1b:	dec    ebp
  403a1c:	or     edi,DWORD PTR [ebx+0x2201bc85]
  403a22:	repz in al,dx
  403a24:	add    al,0x55
  403a26:	jb     0x403a39
  403a28:	mov    edx,0xbcc204c5
  403a2d:	mov    dl,0x5e
  403a2f:	lock mov bl,0x2b
  403a32:	mov    eax,0x1b5cb360
  403a37:	(bad)  
  403a38:	xlat   BYTE PTR ds:[ebx]
  403a39:	ret    0x857d
  403a3c:	shl    BYTE PTR [ebp+0x2cd93537],1
  403a42:	mov    eax,ds:0x4c5bdea4
  403a47:	retf   
  403a48:	fs fcmovu st,st(3)
  403a4c:	arpl   sp,bp
  403a4e:	add    BYTE PTR [eax],al
  403a50:	and    BYTE PTR [ebx+0x6a],ch
  403a53:	jne    0x403acb
  403a55:	cmp    ebp,DWORD PTR [ebp+0x2]
  403a58:	gs pop es
  403a5a:	or     DWORD PTR [ebx+eax*4-0x1614f1e8],ebx
  403a61:	es pop es
  403a63:	jb     0x4039f4
  403a65:	idiv   edi
  403a67:	add    al,0xfe
  403a69:	add    edi,DWORD PTR [edi-0x47ab976b]
  403a6f:	loop   0x403a83
  403a71:	and    esi,DWORD PTR [ecx-0x4a4cdb85]
  403a77:	or     al,0xb7
  403a79:	aas    
  403a7a:	rcl    BYTE PTR [edx-0x1a2a6fcf],cl
  403a80:	sti    
  403a81:	(bad)  
  403a83:	jl     0x403aa2
  403a85:	outs   dx,DWORD PTR ds:[esi]
  403a86:	fisttp DWORD PTR [ebx]
  403a88:	call   0x6ec70e08
  403a8d:	lods   al,BYTE PTR ds:[esi]
  403a8e:	aam    0xf1
  403a90:	aad    0x58
  403a92:	xchg   edi,eax
  403a93:	fnstsw WORD PTR [ebp-0x7e]
  403a96:	xchg   dl,bl
  403a98:	jmp    0x2167:0x54bdf1fd
  403a9f:	mov    ecx,0xb0535103
  403aa4:	cmp    BYTE PTR [ebx+0x42],0xb7
  403aa8:	int    0x12
  403aaa:	or     BYTE PTR cs:[ebp-0x60],cl
  403aae:	pop    ebp
  403aaf:	pminub mm4,mm5
  403ab2:	push   cs
  403ab3:	push   es
  403ab4:	add    BYTE PTR [eax],al
  403ab6:	cmp    ebp,DWORD PTR [edi-0x2]
  403ab9:	add    ah,ah
  403abb:	pop    es
  403abc:	push   0x65
  403abe:	push   edx
  403abf:	call   0x6bcb:0x24bd6299
  403ac6:	xor    al,0x66
  403ac8:	mov    edx,0xe62ac36c
  403acd:	or     dh,BYTE PTR [ebp-0x2f]
  403ad0:	mov    ch,0xd
  403ad2:	cmp    bh,0x86
  403ad5:	add    al,0x23
  403ad7:	jne    0x403a6f
  403ad9:	add    ecx,esp
  403adb:	push   ecx
  403adc:	and    ah,BYTE PTR [edi+0x3a]
  403adf:	js     0x403ad2
  403ae1:	pop    edi
  403ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae3:	out    0x42,al
  403ae5:	imul   ebx,DWORD PTR [esp+ebx*4],0xfcab6e52
  403aec:	pop    ebp
  403aed:	shl    DWORD PTR [ebx],1
  403aef:	jg     0x403b1e
  403af1:	(bad)  
  403af2:	jl     0x403b05
  403af4:	(bad)  
  403af5:	ficom  WORD PTR [ebp+0x2d80ea2]
  403afb:	and    al,0x9a
  403afd:	mov    esp,0xbb69666c
  403b02:	sbb    edi,DWORD PTR [eax-0x76654d46]
  403b08:	retf   0xe5b5
  403b0b:	or     DWORD PTR ds:0x737f60d6,eax
  403b11:	lds    ebx,FWORD PTR [edi-0x2c]
  403b14:	sbb    DWORD PTR [edi+0x46],esi
  403b17:	pop    ebp
  403b18:	xchg   DWORD PTR [esi-0x19bf0000],esp
  403b1e:	jmp    0x403b31
  403b20:	and    eax,0x22015a84
  403b25:	iret   
  403b26:	add    BYTE PTR [ebx],dh
  403b28:	adc    edx,DWORD PTR [esi+0x6e]
  403b2b:	bound  ecx,QWORD PTR [ebp*8+0x7c7b4dd6]
  403b32:	popa   
  403b33:	cmp    eax,0xeeebc574
  403b38:	cmp    bl,BYTE PTR [edi+0x75]
  403b3b:	push   ds
  403b3c:	cmp    dh,ah
  403b3e:	mov    ebp,0x4875ce89
  403b43:	jns    0x403b0e
  403b45:	int3   
  403b46:	shr    BYTE PTR [edx-0x25a39c28],cl
  403b4c:	xlat   BYTE PTR ds:[ebx]
  403b4d:	out    dx,al
  403b4e:	call   0x284a1056
  403b53:	adc    edi,DWORD PTR [esi-0x349994de]
  403b59:	sti    
  403b5a:	test   eax,0xecf4b835
  403b5f:	mov    esi,0xd02425f1
  403b64:	add    bh,BYTE PTR [edi]
  403b66:	outs   dx,DWORD PTR ds:[esi]
  403b67:	mov    eax,ds:0x72a6580f
  403b6c:	adc    al,0x51
  403b6e:	icebp  
  403b6f:	jge    0x403bed
  403b71:	shl    DWORD PTR [eax],1
  403b73:	lea    edx,[edi+0x42dc63da]
  403b79:	ret    
  403b7a:	mov    ds:0xf5ac41ab,al
  403b7f:	cmp    BYTE PTR [eax],al
  403b81:	add    BYTE PTR [eax+0x6b4a2c6d],cl
  403b87:	jbe    0x403b89
  403b89:	addr16 retf 0x9e8c
  403b8d:	sahf   
  403b8e:	cmp    eax,0x28b88798
  403b93:	retf   0xf94a
  403b96:	icebp  
  403b97:	loop   0x403bec
  403b99:	cmp    ch,BYTE PTR [ecx-0x6984874b]
  403b9f:	mov    al,0x61
  403ba1:	pushf  
  403ba2:	inc    ebp
  403ba3:	outs   dx,DWORD PTR ds:[esi]
  403ba4:	cs aad 0xf4
  403ba7:	jne    0x403be0
  403ba9:	push   ds
  403baa:	bound  esp,QWORD PTR [ecx-0x73aaa8e4]
  403bb0:	add    eax,0x82246ec0
  403bb5:	add    DWORD PTR [esi],edi
  403bb7:	or     DWORD PTR [ebx-0x50125cce],ebx
  403bbd:	jae    0x403b47
  403bbf:	clc    
  403bc0:	test   al,0xa4
  403bc2:	sti    
  403bc3:	ss out 0xdd,al
  403bc6:	and    ch,BYTE PTR [esi]
  403bc8:	call   DWORD PTR [esi]
  403bca:	fmul   QWORD PTR [eax-0x2c]
  403bcd:	dec    edi
  403bce:	scas   eax,DWORD PTR es:[edi]
  403bcf:	popa   
  403bd0:	int    0x8b
  403bd2:	ret    0x9585
  403bd5:	retf   0xa0ab
  403bd8:	mov    WORD PTR [ecx],cs
  403bda:	pop    ss
  403bdb:	jl     0x403b84
  403bdd:	dec    eax
  403bde:	and    al,0x71
  403be0:	mov    esi,0xf1b2778f
  403be5:	mov    BYTE PTR [eax],0x0
  403be8:	inc    esi
  403be9:	mov    ebx,0xe0580de8
  403bee:	ret    
  403bef:	inc    esp
  403bf0:	inc    ebx
  403bf1:	vrcpss xmm7,xmm4,DWORD PTR [ebx*2+0x47ed925d]
  403bfa:	inc    esp
  403bfb:	ror    DWORD PTR [edx+0x12006f33],0x3a
  403c02:	jbe    0x403c04
  403c04:	stos   BYTE PTR es:[edi],al
  403c05:	pop    ebp
  403c06:	xor    DWORD PTR [ecx],edi
  403c08:	dec    ebx
  403c09:	in     eax,dx
  403c0a:	sub    DWORD PTR [eax],esp
  403c0c:	sbb    ah,al
  403c0e:	push   es
  403c0f:	or     ebp,DWORD PTR [ecx]
  403c11:	adc    ebx,DWORD PTR [edx+edx*1]
  403c14:	jg     0x403c2e
  403c16:	inc    esi
  403c17:	fistp  QWORD PTR [esi]
  403c19:	or     bl,BYTE PTR [ebp-0x3a]
  403c1c:	sub    eax,0xeced6fef
  403c21:	pop    esi
  403c22:	imul   esi,esp,0xffffffc3
  403c25:	aad    0x2a
  403c27:	mov    ebx,0xa231c482
  403c2c:	xor    DWORD PTR [esp+ebx*1],edi
  403c2f:	mov    eax,esp
  403c31:	push   0x7
  403c33:	nop
  403c34:	mov    bh,0x86
  403c36:	lahf   
  403c37:	pop    ss
  403c38:	jbe    0x403c71
  403c3a:	test   BYTE PTR [esi],cl
  403c3c:	gs jo  0x403be8
  403c3f:	and    eax,0x3cb2e1a4
  403c44:	fist   DWORD PTR [ebx-0xd]
  403c47:	jae    0x403c43
  403c49:	add    ch,al
  403c4b:	push   0x0
  403c4d:	add    BYTE PTR [ecx],ch
  403c4f:	scas   al,BYTE PTR es:[edi]
  403c50:	les    eax,FWORD PTR [ecx+0x78]
  403c53:	sbb    al,0xde
  403c55:	pop    eax
  403c56:	mov    cl,0xf7
  403c58:	js     0x403c4a
  403c5a:	lock inc edi
  403c5c:	(bad)  
  403c5d:	jmp    0xc28f5d65
  403c62:	xor    dh,BYTE PTR [ecx+0x406ddb53]
  403c68:	adc    eax,0xe92ac94
  403c6d:	(bad)  
  403c6e:	(bad)  
  403c6f:	frstor [ebx]
  403c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c72:	ds ins BYTE PTR es:[edi],dx
  403c74:	cmp    BYTE PTR [edi+0x38a0c969],bh
  403c7a:	test   al,0xd9
  403c7c:	mov    ebx,0x9f27d521
  403c81:	xchg   esi,eax
  403c82:	fistp  WORD PTR [esi-0x46197292]
  403c88:	add    ecx,esp
  403c8a:	cdq    
  403c8b:	clc    
  403c8c:	adc    al,0xd7
  403c8e:	cwde   
  403c8f:	sub    esp,DWORD PTR [edx-0x6]
  403c92:	mov    ebx,0xaae1336a
  403c97:	jl     0x403cc1
  403c99:	mov    ebx,0xa057b55f
  403c9e:	inc    BYTE PTR ss:[esi]
  403ca1:	lea    ebx,[ebp+0x37]
  403ca4:	not    BYTE PTR [ebp-0x28945f9c]
  403caa:	sbb    esp,ecx
  403cac:	pushf  
  403cad:	int3   
  403cae:	sbb    ah,BYTE PTR [edx]
  403cb0:	retf   0xe1
  403cb3:	add    cl,bh
  403cb5:	bound  edi,QWORD PTR [ebx-0x513c1706]
  403cbb:	bound  esp,QWORD PTR [edi-0x43]
  403cbe:	fnstsw WORD PTR [ecx+0x3e]
  403cc1:	cmc    
  403cc2:	nop
  403cc3:	push   esp
  403cc4:	adc    eax,0x1c4f802c
  403cc9:	imul   esi,ecx,0xd
  403ccc:	jecxz  0x403c77
  403cce:	and    dl,BYTE PTR ds:0x385418e2
  403cd4:	icebp  
  403cd5:	push   edi
  403cd6:	inc    ebp
  403cd7:	and    esp,eax
  403cd9:	mov    ebx,DWORD PTR [edx-0x3]
  403cdc:	xor    ch,al
  403cde:	sub    esi,esp
  403ce0:	adc    DWORD PTR [esi],ecx
  403ce2:	std    
  403ce3:	retf   0x4722
  403ce6:	or     al,0xd0
  403ce8:	adc    edx,DWORD PTR [eax-0x2f2b6e6b]
  403cee:	data16 mov cl,ch
  403cf1:	adc    DWORD PTR [eax-0x36ad5959],edi
  403cf7:	mov    esp,0xe45609af
  403cfc:	mov    cl,0x6e
  403cfe:	(bad)  
  403cff:	mov    bl,0x12
  403d01:	jbe    0x403cc7
  403d03:	and    bh,0x9c
  403d06:	std    
  403d07:	xchg   ecx,eax
  403d08:	int3   
  403d09:	adc    DWORD PTR [edx+0x1f],0xffffff8d
  403d0d:	rcl    BYTE PTR [ebx-0x3f267810],cl
  403d13:	cmp    eax,0x4f01c0ab
  403d18:	add    BYTE PTR [eax],al
  403d1a:	mov    eax,0xda4c5fa7
  403d1f:	in     al,dx
  403d20:	xchg   ebp,eax
  403d21:	cmp    edi,DWORD PTR [ecx-0x2215230d]
  403d27:	push   ds
  403d28:	adc    al,0x1a
  403d2a:	out    0x5,eax
  403d2c:	cmp    eax,DWORD PTR [edi+0x787a50a6]
  403d32:	popf   
  403d33:	push   edi
  403d34:	mov    ecx,0xf84270a5
  403d39:	(bad)  
  403d3a:	arpl   WORD PTR [ecx],bp
  403d3c:	daa    
  403d3d:	shl    bl,cl
  403d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d40:	pop    esi
  403d41:	rcl    eax,0xbb
  403d44:	xchg   ebp,eax
  403d45:	je     0x403cec
  403d47:	(bad)  
  403d48:	int3   
  403d49:	mov    ds:0xd03cd8e,eax
  403d4e:	dec    edi
  403d4f:	mov    BYTE PTR [edx-0x2],al
  403d52:	inc    ebp
  403d53:	lahf   
  403d54:	jno    0x403d85
  403d56:	imul   edi,DWORD PTR [edx-0x50],0x32717a60
  403d5d:	ins    BYTE PTR es:[edi],dx
  403d5e:	push   esi
  403d5f:	add    bl,dh
  403d61:	call   0x1240:0xca9fe76d
  403d68:	popa   
  403d69:	mov    ecx,0x27361933
  403d6e:	push   0x5c
  403d70:	out    dx,eax
  403d71:	push   edi
  403d72:	imul   eax,DWORD PTR [ebx+0x0],0x6de2d0a4
  403d79:	pop    ebp
  403d7a:	imul   ecx,edx,0x74
  403d7d:	sub    al,BYTE PTR [eax]
  403d7f:	add    BYTE PTR [edi+0x62],ah
  403d82:	repz jmp 0x403d7a
  403d85:	dec    edx
  403d86:	jmp    0x9669:0xc12da1a8
  403d8d:	xor    al,0xd8
  403d8f:	cs push 0x10e796f3
  403d95:	out    dx,al
  403d96:	lea    ebp,[edx+ebx*2+0x5565a509]
  403d9d:	and    BYTE PTR [ebx+eax*1-0x3d8eb561],bh
  403da4:	pop    ebp
  403da5:	pop    edi
  403da6:	push   0x43342971
  403dab:	xor    BYTE PTR [esi],ch
  403dad:	sub    eax,0xeec1e75a
  403db2:	adc    al,0x9e
  403db4:	cwde   
  403db5:	repz or edx,DWORD PTR [ebp-0x3e]
  403db9:	and    BYTE PTR [edi],ah
  403dbb:	or     al,0xed
  403dbd:	mov    ebx,0xa1d6fb3d
  403dc2:	mov    ecx,0xa086e7ba
  403dc7:	jns    0x403e00
  403dc9:	ins    BYTE PTR es:[edi],dx
  403dca:	mov    edi,DWORD PTR [eax]
  403dcc:	add    al,0x75
  403dce:	xchg   edx,eax
  403dcf:	fistp  QWORD PTR [ebx-0x4a]
  403dd2:	fst    QWORD PTR [esi+0x5dc4aba2]
  403dd8:	dec    eax
  403dd9:	enter  0x14ef,0x33
  403ddd:	loope  0x403dd5
  403ddf:	rcl    BYTE PTR [edx+0x3],1
  403de2:	scas   al,BYTE PTR es:[edi]
  403de3:	xchg   ecx,eax
  403de4:	add    BYTE PTR [eax],al
  403de6:	or     ebx,DWORD PTR [esi]
  403de8:	mov    bh,0x42
  403dea:	xor    edi,ecx
  403dec:	fwait
  403ded:	add    ebp,DWORD PTR [eax-0x5eff7b10]
  403df3:	push   eax
  403df4:	imul   ecx,edx,0x60
  403df7:	jmp    FWORD PTR [edi-0x2d]
  403dfa:	adc    esi,DWORD PTR [ecx+0x2162f85c]
  403e00:	inc    esi
  403e01:	loope  0x403e50
  403e03:	or     eax,0xbd9c66de
  403e08:	les    edi,FWORD PTR [edi-0x21]
  403e0b:	stc    
  403e0c:	out    0x54,eax
  403e0e:	push   cs
  403e0f:	pop    esp
  403e10:	repz dec ebp
  403e12:	dec    ecx
  403e13:	fidiv  DWORD PTR [edx-0x563767fe]
  403e19:	sbb    ebx,ebx
  403e1b:	test   BYTE PTR ss:[eax],dh
  403e1e:	sbb    ah,BYTE PTR [edi-0x61]
  403e21:	sub    DWORD PTR [ebp+edx*4-0x3b],esi
  403e25:	in     al,0x75
  403e27:	and    eax,0x81e6fdde
  403e2c:	repz (bad) 
  403e2e:	daa    
  403e2f:	(bad)  
  403e30:	call   0xa9a28f04
  403e35:	xor    BYTE PTR [ecx-0x1d664e10],0xbf
  403e3c:	sahf   
  403e3d:	mov    dl,0x33
  403e3f:	je     0x1c5abaf0
  403e45:	sub    al,0xed
  403e47:	stos   DWORD PTR es:[edi],eax
  403e48:	push   es
  403e49:	xor    eax,0xfcae0000
  403e4e:	sub    DWORD PTR [esi],ebx
  403e50:	pop    edi
  403e51:	dec    ebp
  403e52:	xor    DWORD PTR [edi],eax
  403e54:	clc    
  403e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e56:	jo     0x403ea0
  403e58:	test   eax,0x6a516b77
  403e5d:	mov    DWORD PTR [esi+0x7a],eax
  403e60:	sub    ebx,DWORD PTR [ecx-0x211d9ca3]
  403e66:	cli    
  403e67:	retf   
  403e68:	xor    DWORD PTR [eax-0x1f],0xffffffd2
  403e6c:	aad    0x64
  403e6e:	jns    0x403e3c
  403e70:	jl     0x403ecf
  403e72:	mov    bh,dl
  403e74:	jne    0x403e6c
  403e76:	adc    eax,0xe6b74296
  403e7b:	mov    WORD PTR [ebx],fs
  403e7d:	push   0x2940a034
  403e82:	inc    ebp
  403e83:	mov    ebx,0x2360ea51
  403e88:	(bad)  
  403e89:	mov    ds:0x6cef382f,eax
  403e8e:	add    edx,DWORD PTR ds:0xe122604
  403e94:	in     eax,dx
  403e95:	out    dx,al
  403e96:	fwait
  403e97:	dec    edi
  403e98:	mov    edx,0xab546caf
  403e9d:	jo     0x403e5d
  403e9f:	jns    0x403e29
  403ea1:	xor    edi,ecx
  403ea3:	bound  ecx,QWORD PTR [ecx+0x5438c903]
  403ea9:	jp     0x403e62
  403eab:	and    ebp,DWORD PTR [ebp+0x35]
  403eae:	imul   ecx,DWORD PTR [esi],0x0
  403eb1:	add    BYTE PTR [esi-0x14],al
  403eb4:	cdq    
  403eb5:	adc    eax,0x5403a72f
  403eba:	clc    
  403ebb:	gs hlt 
  403ebd:	dec    esi
  403ebe:	jmp    0xaa2651b
  403ec3:	sbb    BYTE PTR [edi+0x79],dl
  403ec6:	or     edi,DWORD PTR [ebx-0x7ee31eae]
  403ecc:	inc    ecx
  403ecd:	cli    
  403ece:	and    eax,0x3ed6f136
  403ed3:	call   FWORD PTR [edi]
  403ed5:	int3   
  403ed6:	aaa    
  403ed7:	aam    0x8d
  403ed9:	lea    eax,[eax]
  403edb:	xchg   ebp,eax
  403edc:	jle    0x403e74
  403ede:	loope  0x403f31
  403ee0:	lods   al,BYTE PTR ds:[esi]
  403ee1:	mov    ebx,0xa0dd12c2
  403ee6:	ror    DWORD PTR [ecx],cl
  403ee8:	aad    0xb6
  403eea:	adc    ebx,DWORD PTR [eax-0x74]
  403eed:	(bad)
  403ef0:	inc    edi
  403ef1:	xchg   ebp,eax
  403ef2:	or     eax,0x2663fe26
  403ef7:	aas    
  403ef8:	sar    ecx,1
  403efa:	(bad)  
  403efb:	(bad)
  403f00:	inc    edx
  403f01:	pop    eax
  403f02:	mov    ecx,0x9a290201
  403f07:	sbb    cl,BYTE PTR [ebp+0x44a07a3c]
  403f0d:	dec    ebx
  403f0e:	mov    DWORD PTR [ecx+0x6e641f0f],ecx
  403f14:	(bad)  
  403f15:	in     eax,dx
  403f16:	add    BYTE PTR [eax],al
  403f18:	dec    esp
  403f19:	ja     0x403ea4
  403f1b:	jg     0x403f3b
  403f1d:	mov    esp,0xa5059048
  403f22:	or     esp,edx
  403f24:	and    dl,cl
  403f26:	retf   0x33b2
  403f29:	shl    DWORD PTR [esp+eiz*4-0x2ca2e1af],cl
  403f30:	xor    al,BYTE PTR [edi]
  403f32:	push   ss
  403f33:	xchg   DWORD PTR [edi-0x10],ecx
  403f36:	into   
  403f37:	jne    0x403f9d
  403f39:	stc    
  403f3a:	jg     0x403f23
  403f3c:	and    bh,BYTE PTR [edx]
  403f3e:	inc    ecx
  403f3f:	sbb    BYTE PTR [esi],bl
  403f41:	and    esi,edx
  403f43:	dec    ecx
  403f44:	sti    
  403f45:	dec    ebx
  403f46:	mov    bl,0x3a
  403f48:	fcom   DWORD PTR [esp+ebx*2+0x2e]
  403f4c:	cmp    dh,dl
  403f4e:	adc    eax,0xdecf4b5d
  403f53:	or     al,0x26
  403f55:	test   al,0x97
  403f57:	sti    
  403f58:	adc    al,cl
  403f5a:	cmp    BYTE PTR [ecx-0x24],dh
  403f5d:	jno    0x403f58
  403f5f:	mov    eax,ds:0xba006ac7
  403f64:	xchg   edx,eax
  403f65:	clc    
  403f66:	mov    DWORD PTR [ebx-0x6b],edi
  403f69:	in     eax,dx
  403f6a:	xchg   edx,eax
  403f6b:	jmp    0x16404946
  403f70:	mov    ebx,0x9d4701cb
  403f75:	lea    eax,[ebx]
  403f77:	xor    BYTE PTR [edi+0x4f],dl
  403f7a:	add    ah,BYTE PTR [ebp+0x3010000]
  403f80:	pop    es
  403f81:	rcl    BYTE PTR [ebx+0x157b06c4],cl
  403f87:	xchg   DWORD PTR [esp+eiz*2],eax
  403f8a:	mov    edi,0xa6610548
  403f8f:	sbb    al,0xe
  403f91:	outs   dx,BYTE PTR ds:[esi]
  403f92:	dec    eax
  403f93:	(bad)  [edi]
  403f95:	mov    edi,0x880da05a
  403f9a:	test   BYTE PTR [esi+0xc],bl
  403f9d:	or     eax,0x1a09136e
  403fa2:	inc    eax
  403fa3:	ror    DWORD PTR [eax],1
  403fa5:	jecxz  0x403fda
  403fa7:	xchg   esi,eax
  403fa8:	or     ch,BYTE PTR [ebp+ecx*4+0x79d90b55]
  403faf:	out    dx,eax
  403fb0:	sbb    esp,DWORD PTR [esi-0x8e252e1]
  403fb6:	mov    ebp,0xda001f6b
  403fbb:	sub    DWORD PTR [esi],ebx
  403fbd:	xchg   ebp,eax
  403fbe:	loopne 0x403fa8
  403fc0:	sbb    ah,BYTE PTR [edx-0x4a]
  403fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc4:	sbb    ch,BYTE PTR [ebx]
  403fc6:	hlt    
  403fc7:	arpl   WORD PTR [eax],bx
  403fc9:	xor    al,0x62
  403fcb:	and    bl,BYTE PTR [ecx]
  403fcd:	xor    DWORD PTR [ebx+0x691e11fd],ecx
  403fd3:	mov    edi,0x7aaf4f13
  403fd8:	adc    DWORD PTR [eax+0x25],edi
  403fdb:	cmp    edx,DWORD PTR [eax]
  403fdd:	add    BYTE PTR [eax+0x153c55],dl
  403fe3:	add    BYTE PTR [edi+0x2614fdbb],bl
  403fe9:	cdq    
  403fea:	mov    eax,0x7a6f3916
  403fef:	pop    ss
  403ff0:	pushf  
  403ff1:	inc    ecx
  403ff2:	dec    ebp
  403ff3:	cmp    BYTE PTR [ebx-0x59],al
  403ff6:	mov    ?,WORD PTR [ecx]
  403ff8:	cli    
  403ff9:	pushf  
  403ffa:	leave  
  403ffb:	cmp    esp,DWORD PTR [ebp+0x73]
  403ffe:	or     edi,DWORD PTR [edx]
  404000:	fdivr  DWORD PTR [ebx+0x44]
  404003:	aas    
  404004:	pop    DWORD PTR [bp-0x41c2]
  404009:	mov    bh,0xbf
  40400b:	cmp    al,0x11
  40400d:	pop    esi
  40400e:	add    bh,BYTE PTR ds:0x365e1094
  404014:	fcomi  st,st(6)
  404016:	fwait
  404017:	aaa    
  404018:	and    cl,dh
  40401a:	fidiv  DWORD PTR ds:0x3418242d
  404020:	ror    BYTE PTR [ecx-0x2010cea9],0x95
  404027:	xor    BYTE PTR [esi-0x1a],dl
  40402a:	shl    BYTE PTR [edx],cl
  40402c:	dec    ecx
  40402d:	or     al,0x11
  40402f:	xor    ecx,DWORD PTR [edi+ebp*2-0x65acdb95]
  404036:	test   eax,0xeebbaa25
  40403b:	daa    
  40403c:	mov    ch,0x55
  40403e:	sub    eax,0x62482826
  404043:	and    edx,DWORD PTR [edi]
  404045:	mov    ds:0x229f,al
  40404a:	into   
  40404b:	xchg   edx,eax
  40404c:	out    0x20,al
  40404e:	add    DWORD PTR [esi+0x24],edi
  404051:	and    DWORD PTR [esi+edi*1-0x5734d588],esp
  404058:	mov    edx,0x2366d52b
  40405d:	cld    
  40405e:	in     al,dx
  40405f:	xchg   ecx,eax
  404060:	or     eax,0x1eb4fd3e
  404065:	jno    0x40405f
  404067:	jecxz  0x4040a1
  404069:	mov    bl,0xf1
  40406b:	pop    edx
  40406c:	retf   
  40406d:	cmc    
  40406e:	jmp    0x404065
  404070:	fs aaa 
  404072:	ret    0x9160
  404075:	call   0x8f04:0x58a7e005
  40407c:	pop    ebp
  40407d:	push   ds
  40407e:	push   es
  40407f:	cmp    dh,bl
  404081:	(bad)  
  404083:	lods   al,BYTE PTR ds:[esi]
  404084:	call   0x4f5c231b
  404089:	push   ecx
  40408a:	jmp    0x40407e
  40408c:	mov    ah,0x17
  40408e:	loope  0x40407d
  404090:	call   0xcb89:0xdfe8c8d5
  404097:	out    0x75,eax
  404099:	dec    ebx
  40409a:	ret    0xbb6
  40409d:	or     eax,0xcf21c1b8
  4040a2:	mov    cl,0x44
  4040a4:	cmp    BYTE PTR [eax+0x421e53ac],al
  4040aa:	popf   
  4040ab:	push   0x64
  4040ad:	add    al,0x0
  4040af:	add    BYTE PTR [edi-0x713935db],bl
  4040b5:	nop
  4040b6:	out    dx,al
  4040b7:	mov    ebx,0x7e482f79
  4040bc:	jo     0x4040bc
  4040be:	mov    ecx,0x94496a38
  4040c3:	cli    
  4040c4:	sbb    esp,0xffffff85
  4040c7:	mov    ch,0x7e
  4040c9:	imul   ebp,DWORD PTR [edi+0x51a26f77],0x31
  4040d0:	ins    DWORD PTR es:[edi],dx
  4040d1:	mov    ebp,0xa3cf2fb
  4040d6:	icebp  
  4040d7:	ds jp  0x404102
  4040da:	ficomp WORD PTR [eax]
  4040dc:	xor    BYTE PTR [ecx],ch
  4040de:	(bad)
  4040e2:	mov    eax,0x1d2abcc4
  4040e7:	xlat   BYTE PTR ds:[ebx]
  4040e8:	jae    0x404119
  4040ea:	or     al,BYTE PTR [ecx+0x3332e39]
  4040f0:	imul   DWORD PTR [ebx]
  4040f2:	pop    esp
  4040f3:	sub    eax,0xcb092d75
  4040f8:	mov    ds:0xe864f642,al
  4040fd:	inc    edx
  4040fe:	daa    
  4040ff:	pop    ds
  404100:	es inc ecx
  404102:	push   eax
  404103:	cmp    DWORD PTR [eax+eax*2-0x3b],eax
  404107:	and    cl,BYTE PTR [ebx-0x3ef34dbb]
  40410d:	inc    ebx
  40410e:	pop    ebx
  40410f:	jbe    0x404110
  404111:	inc    ebp
  404112:	test   al,ah
  404114:	add    BYTE PTR [eax],al
  404116:	ins    DWORD PTR es:[edi],dx
  404117:	inc    edi
  404118:	sbb    DWORD PTR [ecx-0x4cb1b3ef],0x4d9f4cdb
  404122:	xchg   ebp,eax
  404123:	dec    esi
  404124:	test   al,0xe7
  404126:	push   esp
  404127:	dec    esi
  404128:	sub    eax,0xfa4b19f2
  40412d:	pop    ebx
  40412e:	ror    BYTE PTR [ecx-0x3d],cl
  404131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404132:	mov    WORD PTR [edi-0x34],es
  404135:	(bad)  
  404136:	pop    esi
  404137:	dec    ecx
  404138:	mov    ecx,0xc65e042b
  40413d:	add    esi,eax
  40413f:	pop    esi
  404140:	pop    ss
  404141:	add    BYTE PTR [eax+0x2ad5e05c],0x5c
  404148:	jne    0x40410d
  40414a:	in     eax,dx
  40414b:	pop    eax
  40414c:	sub    BYTE PTR [ecx-0x61],0x57
  404150:	add    BYTE PTR [ebx-0x3e],cl
  404153:	xor    eax,0x74101450
  404158:	push   ecx
  404159:	adc    ecx,ecx
  40415b:	stos   BYTE PTR es:[edi],al
  40415c:	pop    edx
  40415d:	ds daa 
  40415f:	jmp    0x5859:0x2b856f5a
  404166:	pop    ebx
  404167:	ins    DWORD PTR es:[edi],dx
  404168:	pop    eax
  404169:	mov    ebp,0xea5da041
  40416e:	pop    edi
  40416f:	loop   0x4041cc
  404171:	xchg   ebx,eax
  404172:	or     eax,0x837c5e25
  404177:	gs pop edi
  404179:	imul   eax,DWORD PTR [eax],0xe0feec00
  40417f:	xchg   esi,eax
  404180:	(bad)  
  404181:	mov    esp,0x7a88c7e0
  404186:	loop   0x404138
  404188:	cli    
  404189:	cmp    bl,ah
  40418b:	and    eax,0x52e5f5e4
  404190:	jle    0x404145
  404192:	out    0xfb,eax
  404194:	mov    cl,0x71
  404196:	in     eax,0xe4
  404198:	jecxz  0x4041c9
  40419a:	in     al,0xe1
  40419c:	pushf  
  40419d:	jmp    0x40418d
  40419f:	out    dx,al
  4041a0:	ss test al,0xee
  4041a3:	aas    
  4041a4:	pop    ebx
  4041a5:	addr16 in al,dx
  4041a7:	or     BYTE PTR [ebp+0x29],ch
  4041aa:	in     eax,dx
  4041ab:	lea    esi,[edi-0x1c]
  4041ae:	out    0x9a,eax
  4041b0:	push   ecx
  4041b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b2:	jmp    0xeb9f651a
  4041b7:	sub    al,0x75
  4041b9:	and    ch,dl
  4041bb:	pop    ecx
  4041bc:	mov    DWORD PTR [eax],ebx
  4041be:	std    
  4041bf:	es daa 
  4041c1:	(bad)  
  4041c3:	ja     0x40418a
  4041c5:	pushf  
  4041c6:	inc    BYTE PTR [eax+0xff5edb]
  4041cc:	rcr    BYTE PTR ds:0xf1f7fa1a,0xd7
  4041d3:	sti    
  4041d4:	cs int3 
  4041d6:	sahf   
  4041d7:	stc    
  4041d8:	mov    DWORD PTR ds:0x6084f85c,esp
  4041de:	add    bl,dh
  4041e0:	add    BYTE PTR [eax],al
  4041e2:	arpl   WORD PTR [edx-0x4b750d3e],cx
  4041e8:	xor    eax,0xffffffad
  4041eb:	pop    esi
  4041ec:	inc    esi
  4041ed:	icebp  
  4041ee:	or     BYTE PTR [edi+0x9],al
  4041f1:	hlt    
  4041f2:	pop    fs
  4041f4:	retf   0xa6f5
  4041f7:	pushf  
  4041f8:	(bad)  
  4041f9:	div    ecx
  4041fb:	je     0x40424c
  4041fd:	neg    BYTE PTR [ebx+edx*2]
  404200:	js     0x4041db
  404202:	retf   
  404203:	mov    esp,0x8072d8b9
  404208:	cld    
  404209:	fcmovb st,st(5)
  40420b:	push   0x7c50db3e
  404210:	jno    0x4041f0
  404212:	out    0x95,eax
  404214:	mov    bl,0xdf
  404216:	ds test al,0xf4
  404219:	fstp   QWORD PTR [ecx]
  40421b:	inc    edx
  40421c:	aaa    
  40421d:	fcom   QWORD PTR [ebx+eax*1]
  404220:	imul   edx,edi,0x53
  404223:	in     eax,dx
  404224:	test   al,0xd6
  404226:	call   0x2d38:0xbdd4efce
  40422d:	aad    0x38
  40422f:	sub    esp,DWORD PTR [edx-0x30]
  404232:	pop    edi
  404233:	lds    esp,FWORD PTR [eax-0x1a02292f]
  404239:	shl    ecx,cl
  40423b:	mov    edx,tr2
  40423e:	or     al,0x75
  404240:	pop    esi
  404241:	(bad)
  404244:	pushf  
  404245:	les    eax,FWORD PTR [eax]
  404247:	add    ch,dl
  404249:	fucompp 
  40424b:	fstp   DWORD PTR [ebx]
  40424d:	push   0x43
  40424f:	sbb    BYTE PTR [edx],dl
  404251:	std    
  404252:	push   esp
  404253:	push   edi
  404254:	pop    ss
  404255:	dec    eax
  404256:	call   DWORD PTR [esi+edx*1-0x6b2c7e81]
  40425d:	pop    ebp
  40425e:	stos   DWORD PTR es:[edi],eax
  40425f:	adc    DWORD PTR [ebp-0x71b293a8],edx
  404265:	xor    eax,esi
  404267:	(bad)  
  404268:	(bad)  
  404269:	loop   0x4042a2
  40426b:	leave  
  40426c:	popf   
  40426d:	adc    DWORD PTR [edx],edx
  40426f:	or     ebx,DWORD PTR [esp+esi*1+0x5f914404]
  404276:	xchg   BYTE PTR cs:[eax-0x5d3f2f2a],cl
  40427d:	jne    0x4042f9
  40427f:	add    bl,BYTE PTR [ebx+0x64af91e0]
  404285:	pop    ebx
  404286:	mov    eax,0x460a656d
  40428b:	sub    eax,DWORD PTR [edi-0x47]
  40428e:	jmp    0x404278
  404290:	inc    esi
  404291:	sub    al,0xfa
  404293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404294:	dec    ebx
  404295:	xchg   edi,eax
  404296:	push   eax
  404297:	fs inc edx
  404299:	outs   dx,BYTE PTR ds:[esi]
  40429a:	scas   al,BYTE PTR es:[edi]
  40429b:	and    ch,BYTE PTR [eax+0x6d]
  40429e:	test   al,ah
  4042a0:	popa   
  4042a1:	push   0x6362bcc3
  4042a6:	imul   edi,DWORD PTR [esi+0x5b],0x381732
  4042ad:	add    BYTE PTR [ecx+0x41],dl
  4042b0:	cmp    eax,0x2ac448fa
  4042b5:	mov    ch,0x3d
  4042b7:	iret   
  4042b8:	add    BYTE PTR [edi+0x3c],dh
  4042bb:	out    0x7e,al
  4042bd:	xor    DWORD PTR [esi-0x5b],ebp
  4042c0:	aam    0xf3
  4042c2:	outs   dx,DWORD PTR ds:[esi]
  4042c3:	or     DWORD PTR [ecx],ebx
  4042c5:	icebp  
  4042c6:	dec    ebp
  4042c7:	test   dh,ah
  4042c9:	pop    edx
  4042ca:	mov    es,WORD PTR [ebp-0x7c1f5b49]
  4042d0:	ror    BYTE PTR [esi-0x66aa7de6],0x55
  4042d7:	jg     0x4042fb
  4042d9:	mov    bl,0x97
  4042db:	jle    0x404348
  4042dd:	dec    ebp
  4042de:	fld    DWORD PTR [edx-0x7d6f188c]
  4042e4:	jno    0x404306
  4042e6:	pop    edi
  4042e7:	lea    ebx,[esi+0xa]
  4042ea:	sbb    eax,0xd3740f8c
  4042ef:	mov    DWORD PTR [eax],edi
  4042f1:	fimul  WORD PTR [ecx+0x46c79d8b]
  4042f7:	xchg   BYTE PTR [edx-0x4c78fb9f],cl
  4042fd:	sbb    ebp,edx
  4042ff:	mov    ah,bl
  404301:	xor    eax,0xd38988a0
  404306:	ja     0x40436b
  404308:	jbe    0x404387
  40430a:	mov    ch,0x61
  40430c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40430d:	(bad)  
  40430e:	clc    
  40430f:	arpl   ax,dx
  404311:	sub    DWORD PTR [eax],eax
  404313:	add    BYTE PTR [ecx],dh
  404315:	gs inc ebp
  404317:	cmp    al,0x6e
  404319:	pusha  
  40431a:	xor    dl,BYTE PTR [esi]
  40431c:	lods   al,BYTE PTR ds:[esi]
  40431d:	pusha  
  40431e:	(bad)  [edi-0x3e]
  404321:	pop    esi
  404322:	add    al,0xc2
  404324:	js     0x404384
  404326:	add    DWORD PTR [ebp-0x513196bc],eax
  40432c:	push   es
  40432d:	push   0x65a8511f
  404332:	sub    bl,bh
  404334:	arpl   WORD PTR [edi-0x53],sp
  404337:	in     al,dx
  404338:	sub    ch,BYTE PTR [edx+0x7a]
  40433b:	inc    esi
  40433c:	fild   QWORD PTR [edx+0x0]
  40433f:	inc    ebx
  404340:	dec    ebp
  404341:	mov    cs:0xa270674c,eax
  404347:	cmp    ebx,ecx
  404349:	lds    esi,FWORD PTR [ebp-0x4bf826ba]
  40434f:	xchg   edi,eax
  404350:	ja     0x40439b
  404352:	mov    dh,0x60
  404354:	sbb    eax,0x3f5b78c
  404359:	mov    edi,0x6002b2
  40435e:	mov    bl,0xcb
  404360:	fild   WORD PTR [edx-0x4f]
  404363:	xchg   esp,eax
  404364:	cmc    
  404365:	test   BYTE PTR [eax-0x4428476f],dh
  40436b:	mov    esi,0xefba170e
  404370:	fs pop esp
  404372:	mov    eax,0xb99a42d8
  404377:	cmp    eax,0xcf500000
  40437c:	mov    esp,0xbd0d766a
  404381:	adc    ebp,DWORD PTR [esp+edx*2]
  404384:	mov    edi,0xbe987bfc
  404389:	jmp    0x44404d64
  40438e:	mov    ah,0x6d
  404390:	mov    eax,0xaa02a162
  404395:	mov    edi,0x1e1276fc
  40439a:	inc    esp
  40439b:	sub    ecx,DWORD PTR [edi+0x37cf26fb]
  4043a1:	xchg   ebp,eax
  4043a2:	lods   al,BYTE PTR ds:[esi]
  4043a3:	and    al,0x25
  4043a5:	jo     0x4043f0
  4043a7:	xlat   BYTE PTR ds:[ebx]
  4043a8:	popf   
  4043a9:	xchg   esi,eax
  4043aa:	xor    DWORD PTR [ebp+eax*8+0x73],edi
  4043ae:	mov    WORD PTR [ecx],es
  4043b0:	jge    0x4043bf
  4043b2:	jns    0x404422
  4043b4:	outs   dx,DWORD PTR ds:[esi]
  4043b5:	call   0x1174e0f
  4043ba:	xchg   esp,eax
  4043bb:	xor    dl,dh
  4043bd:	dec    edx
  4043be:	cmp    ebp,ecx
  4043c0:	push   0xfffffff2
  4043c2:	dec    edi
  4043c3:	stc    
  4043c4:	fsubrp st(0),st
  4043c6:	loop   0x4043dd
  4043c8:	arpl   WORD PTR [eax+0x5b],bx
  4043cb:	pop    edx
  4043cc:	sbb    DWORD PTR [eax+0x76],edx
  4043cf:	mov    ch,0xa4
  4043d1:	call   0xfa50d4c6
  4043d6:	or     eax,0xa442ac74
  4043db:	lds    edi,FWORD PTR [ebx-0x21]
  4043de:	add    BYTE PTR [eax],al
  4043e0:	dec    ecx
  4043e1:	sub    al,bh
  4043e3:	addr16 jg 0x4043e9
  4043e6:	jb     0x40445d
  4043e8:	shl    al,cl
  4043ea:	int    0xcd
  4043ec:	pop    esp
  4043ed:	repnz lods al,BYTE PTR ds:[esi]
  4043ef:	xchg   ebp,eax
  4043f0:	rcl    DWORD PTR [ebx],0x11
  4043f3:	sub    eax,0x3fa438c7
  4043f8:	cmp    dl,dh
  4043fa:	sbb    BYTE PTR [edi+0x1acf6393],al
  404400:	outs   dx,BYTE PTR ds:[esi]
  404401:	xor    BYTE PTR [ebx-0x5e],0x18
  404405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404406:	lds    esi,FWORD PTR [eax+0x87a48b5]
  40440c:	mov    edx,0x17a03220
  404411:	mov    esi,0xea51188e
  404416:	cmp    cl,BYTE PTR [edx]
  404418:	sub    al,0xb
  40441a:	xchg   DWORD PTR [edx+0x2f4fae05],esi
  404420:	push   0x1e97ec52
  404425:	jnp    0x404480
  404427:	test   DWORD PTR [ebx+0x7d3de599],esi
  40442d:	mov    al,BYTE PTR [esi+0x3a6aa065]
  404433:	fst    st(5)
  404435:	cli    
  404436:	dec    eax
  404437:	(bad)  
  404438:	sbb    al,al
  40443a:	jmp    0x40446e
  40443c:	stos   BYTE PTR es:[edi],al
  40443d:	push   ds
  40443e:	adc    esp,esp
  404440:	das    
  404441:	test   BYTE PTR [eax],dh
  404443:	pop    eax
  404444:	add    BYTE PTR [eax],al
  404446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404448:	fucomi st,st(5)
  40444a:	xchg   ebp,eax
  40444b:	or     BYTE PTR [ecx+0x51],bh
  40444e:	std    
  40444f:	cmp    DWORD PTR [ebx-0x681afad5],0xf40a9d97
  404459:	and    DWORD PTR [edi-0x861af71],ecx
  40445f:	out    dx,al
  404460:	daa    
  404461:	dec    ecx
  404462:	pop    edx
  404463:	push   ebx
  404464:	or     esi,ebp
  404466:	call   0xc3d8:0xa0406075
  40446d:	cld    
  40446e:	xor    BYTE PTR [edi-0x2d],dh
  404471:	lahf   
  404472:	add    ah,bl
  404474:	jo     0x404499
  404476:	pusha  
  404477:	fstp   QWORD PTR [edx]
  404479:	xchg   esi,eax
  40447a:	dec    edx
  40447b:	inc    eax
  40447c:	cmp    BYTE PTR [edx],ch
  40447e:	cli    
  40447f:	test   eax,0x2c5ffd40
  404484:	jecxz  0x4044c6
  404486:	xlat   BYTE PTR ds:[ebx]
  404487:	push   edx
  404488:	mov    ah,dh
  40448a:	in     eax,0xb7
  40448c:	stos   BYTE PTR es:[edi],al
  40448d:	dec    eax
  40448e:	sub    eax,0x5e145be5
  404493:	dec    eax
  404494:	mul    DWORD PTR [edi+0x1d948eb6]
  40449a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449b:	jae    0x40444c
  40449d:	mov    eax,ds:0x76c75a4c
  4044a2:	rcr    DWORD PTR [edi-0x3e7e3595],0xff
  4044a9:	jle    0x4044ab
  4044ab:	add    BYTE PTR [ebx-0x243cdbdc],cl
  4044b1:	or     DWORD PTR [ebx+0x564f7534],edi
  4044b7:	psrlw  mm4,QWORD PTR [edi-0x4a8383d0]
  4044be:	int    0xd6
  4044c0:	enter  0x6c3d,0x9f
  4044c4:	pop    ss
  4044c5:	fmul   DWORD PTR [ecx-0x18df6c7c]
  4044cb:	out    0x1f,al
  4044cd:	xor    al,BYTE PTR [edx]
  4044cf:	dec    esp
  4044d0:	mov    cl,dl
  4044d2:	mov    eax,DWORD PTR [edi]
  4044d4:	enter  0x26c2,0x2c
  4044d8:	and    al,0x3a
  4044da:	add    BYTE PTR [edi+0x639d28d1],bh
  4044e0:	sbb    eax,0x6a9c3cd0
  4044e5:	inc    ebp
  4044e6:	pop    ecx
  4044e7:	mov    bh,0xa6
  4044e9:	scas   al,BYTE PTR es:[edi]
  4044ea:	mov    bh,0x53
  4044ec:	xor    ebx,DWORD PTR [edx+edx*8-0x4bab6312]
  4044f3:	fidivr WORD PTR [ebp-0x4]
  4044f6:	rol    BYTE PTR [ebx-0x28],1
  4044f9:	jae    0x40452a
  4044fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044fc:	gs dec dx
  4044ff:	mov    ecx,ss
  404501:	or     eax,0x8b7e73e3
  404506:	jle    0x4044d6
  404508:	cli    
  404509:	repnz push edi
  40450b:	cmp    al,0xa7
  40450d:	loope  0x404503
  40450f:	push   ss
  404510:	add    BYTE PTR [eax],al
  404512:	repz cwde 
  404514:	jmp    0x4f94:0x46f0b3ae
  40451b:	mov    DWORD PTR [ecx-0xa],esp
  40451e:	mov    ebx,0x465bbc9a
  404523:	jecxz  0x404541
  404525:	and    al,0x11
  404527:	jbe    0x404521
  404529:	dec    BYTE PTR [edx-0x2]
  40452c:	call   DWORD PTR [ebp+0x731e3ebe]
  404532:	sbb    edi,DWORD PTR [ebx-0x67dc6a5a]
  404538:	(bad)  
  404539:	jo     0x4044e9
  40453b:	fild   DWORD PTR [ebp+0xe]
  40453e:	ficom  DWORD PTR [eax-0x1b1914ac]
  404544:	jmp    0x404588
  404546:	mov    ?,WORD PTR [ecx+0x40fb9f71]
  40454c:	leave  
  40454d:	mov    ecx,0x14dbb356
  404552:	bound  eax,QWORD PTR [edi+0x63]
  404555:	test   DWORD PTR [esi-0x14],esi
  404558:	push   0x60
  40455a:	xor    ecx,DWORD PTR [ecx-0xc41012d]
  404560:	rcr    bl,0xdb
  404563:	jg     0x4045de
  404565:	xor    ch,bl
  404567:	dec    ebp
  404568:	in     al,0x8f
  40456a:	es stos DWORD PTR es:[edi],eax
  40456c:	pop    esp
  40456d:	test   eax,0x44e5583
  404572:	popa   
  404573:	mov    eax,ds:0x9af6
  404578:	dec    esi
  404579:	sub    BYTE PTR [esi+0x15f47bf7],0x11
  404580:	push   ss
  404581:	mov    BYTE PTR [esp+ebp*2],al
  404584:	sub    esi,0xffffffbb
  404587:	int    0xc3
  404589:	mov    ds:0x56cea821,al
  40458e:	cdq    
  40458f:	inc    esi
  404590:	fwait
  404591:	test   eax,0x4e06238b
  404596:	xor    esp,DWORD PTR [edx]
  404598:	jmp    0x4045ec
  40459a:	in     eax,dx
  40459b:	aas    
  40459c:	xchg   BYTE PTR [esi+0x59a39955],ah
  4045a2:	inc    edi
  4045a3:	mov    ah,0xbe
  4045a5:	popf   
  4045a6:	inc    DWORD PTR [eax]
  4045a8:	add    BYTE PTR [ecx-0x11ba9dc6],ch
  4045ae:	xchg   dl,bl
  4045b0:	sbb    esp,DWORD PTR [eax+0x32]
  4045b3:	enter  0x83ae,0x8e
  4045b7:	jo     0x404631
  4045b9:	xchg   ebx,eax
  4045ba:	in     eax,dx
  4045bb:	sub    BYTE PTR [ebp-0x1c6fae90],cl
  4045c1:	cmp    esp,esp
  4045c3:	add    BYTE PTR [esi],0xb7
  4045c6:	push   edi
  4045c7:	cmp    ch,BYTE PTR [edi+0x5aa78f00]
  4045cd:	jecxz  0x404601
  4045cf:	pop    ds
  4045d0:	hlt    
  4045d1:	mov    BYTE PTR [esi+0x3a4e010d],0xb5
  4045d8:	dec    eax
  4045d9:	push   0xbd40
  4045de:	mov    ebp,0xd305fc2b
  4045e3:	mov    al,ds:0x46361748
  4045e8:	cmc    
  4045e9:	scas   eax,DWORD PTR es:[edi]
  4045ea:	lahf   
  4045eb:	(bad)  [ecx]
  4045ed:	xor    ch,BYTE PTR [edx]
  4045ef:	pop    ss
  4045f0:	sahf   
  4045f1:	mov    al,BYTE PTR [ebp+esi*1-0x2f6e67d5]
  4045f8:	xchg   edi,eax
  4045f9:	and    BYTE PTR [edi-0x5d870b40],al
  4045ff:	and    eax,0x6fcc048
  404604:	std    
  404605:	rcr    BYTE PTR [ecx],cl
  404607:	or     al,0x41
  404609:	push   0xffffffb0
  40460b:	push   ebp
  40460c:	xchg   esi,eax
  40460d:	not    DWORD PTR [ebp-0x50]
  404610:	sub    DWORD PTR [edi+0x2b],ecx
  404613:	jl     0x4045b4
  404615:	pop    ebp
  404616:	jle    0x404690
  404618:	and    esp,ebp
  40461a:	imul   edx,DWORD PTR [eax],0xf41c4d6b
  404620:	(bad)  
  404621:	cmc    
  404622:	aad    0x22
  404624:	shl    BYTE PTR [edx+0x7a],cl
  404627:	enter  0xde6d,0xfa
  40462b:	push   cs
  40462c:	xchg   BYTE PTR [ecx],cl
  40462e:	pop    ss
  40462f:	mov    ah,0xaa
  404631:	mov    ch,0xcf
  404633:	cdq    
  404634:	cmp    eax,0xe21cad00
  404639:	mov    ebx,0xdef29725
  40463e:	pop    ebp
  40463f:	sbb    al,0x4d
  404641:	arpl   WORD PTR [eax],ax
  404643:	add    ch,ah
  404645:	add    DWORD PTR [ebx-0x6a5b082a],edi
  40464b:	push   0x3f
  40464d:	inc    esi
  40464e:	pop    ebp
  40464f:	mov    ebp,0x1c268da
  404654:	dec    edx
  404655:	imul   esp,DWORD PTR ds:0xb1030b4,0x8
  40465c:	loopne 0x4045e4
  40465e:	inc    ebp
  40465f:	jb     0x404631
  404661:	dec    ebx
  404662:	jmp    0x2a7b:0x7db230cd
  404669:	aad    0xa2
  40466b:	(bad)  
  40466c:	retf   0xd9f5
  40466f:	adc    BYTE PTR [edi-0x68],ah
  404672:	jne    0x404620
  404674:	call   FWORD PTR [edx+0x12]
  404677:	sbb    ebp,edi
  404679:	jmp    FWORD PTR ds:0x1d8d55a5
  40467f:	(bad)  
  404680:	lea    esi,[eax+0x13357a02]
  404686:	gs iret 
  404688:	daa    
  404689:	cmp    dl,cl
  40468b:	jae    0x40461c
  40468d:	mov    esi,0x642aa4b2
  404692:	lea    ebx,[eax]
  404694:	jp     0x4046df
  404696:	cli    
  404697:	lods   al,BYTE PTR ds:[esi]
  404698:	or     BYTE PTR [edx*2-0x10f5efef],0xa1
  4046a0:	and    BYTE PTR [edx+ecx*2],dh
  4046a3:	jge    0x404709
  4046a5:	mov    ebx,0xea64
  4046aa:	push   ss
  4046ab:	into   
  4046ac:	rol    DWORD PTR [ebp+0x5d],0x25
  4046b0:	sbb    BYTE PTR ds:0x11f5b102,ch
  4046b6:	dec    ax
  4046b8:	xchg   ebx,eax
  4046b9:	jne    0x4046b6
  4046bb:	push   esi
  4046bc:	outs   dx,BYTE PTR ds:[esi]
  4046bd:	ficomp DWORD PTR [edi-0x62]
  4046c0:	nop
  4046c1:	retf   0x762c
  4046c4:	ins    DWORD PTR es:[edi],dx
  4046c5:	gs nop
  4046c7:	dec    BYTE PTR [edx]
  4046c9:	add    ah,BYTE PTR ds:0x891ce610
  4046cf:	push   0xed6e5547
  4046d4:	mov    eax,ds:0xbc85b3fa
  4046d9:	mov    WORD PTR [edi-0x6d],fs
  4046dc:	sbb    DWORD PTR [edx+0x6d7fdbab],esi
  4046e2:	mov    ebx,esp
  4046e4:	pop    esp
  4046e5:	sar    ch,cl
  4046e7:	mov    bh,bl
  4046e9:	xor    al,0x80
  4046eb:	jge    0x4046c3
  4046ed:	sbb    esp,esi
  4046ef:	hlt    
  4046f0:	ss loop 0x4046fb
  4046f3:	jae    0x404687
  4046f5:	cmp    eax,0xa9abfb5f
  4046fa:	add    cl,BYTE PTR ds:0x65568509
  404700:	lahf   
  404701:	xchg   esp,eax
  404702:	mov    ch,0xad
  404704:	cli    
  404705:	mov    ecx,0x4d144509
  40470a:	lods   al,BYTE PTR ds:[esi]
  40470b:	push   ebx
  40470c:	jno    0x404700
  40470e:	add    BYTE PTR [eax],al
  404710:	add    DWORD PTR [ebx+0x365709c8],ebx
  404716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404717:	and    al,0xcb
  404719:	mov    ebp,0x95974300
  40471e:	(bad)  
  40471f:	push   ds
  404720:	sbb    cl,ah
  404722:	jge    0x404745
  404724:	sbb    BYTE PTR [ecx],ch
  404726:	(bad)  
  404727:	cmp    al,0x7f
  404729:	int3   
  40472a:	outs   dx,BYTE PTR ds:[esi]
  40472b:	call   0xd434:0xb77c1fe1
  404732:	les    edx,FWORD PTR [esi+0x2f]
  404735:	pop    es
  404736:	pop    ecx
  404737:	repz shr DWORD PTR [edx-0x1f],0xcd
  40473c:	in     al,0xfd
  40473e:	repnz push 0xbe4b71e9
  404744:	rcl    esp,1
  404746:	adc    ebx,DWORD PTR [ebx-0x2c]
  404749:	and    BYTE PTR [ebx-0x463447cb],ch
  40474f:	ror    BYTE PTR [eax+ebp*1],1
  404752:	add    DWORD PTR [ecx+0x44],ebp
  404755:	jae    0x4046f3
  404757:	test   BYTE PTR [ecx-0x1],bl
  40475a:	and    esp,edx
  40475c:	cld    
  40475d:	mov    BYTE PTR [esi],dh
  40475f:	jmp    DWORD PTR [ecx-0x337171fb]
  404765:	das    
  404766:	xchg   BYTE PTR [ebx],ch
  404768:	mov    eax,ds:0x7053ec3
  40476d:	cmp    DWORD PTR [eax+eiz*4],ebp
  404770:	imul   edi,DWORD PTR [esp+edx*4+0x59000039],0x7c54090d
  40477b:	popa   
  40477c:	mov    cl,0xb2
  40477e:	add    DWORD PTR [edi],edx
  404780:	mov    ds:0x1b59b4cf,eax
  404785:	mov    cl,0xa4
  404787:	mov    edx,0x3819cc43
  40478c:	sti    
  40478d:	sub    bl,BYTE PTR [esp+eax*8-0x17]
  404791:	inc    edi
  404792:	inc    ecx
  404793:	xor    BYTE PTR [ecx+0x0],dl
  404796:	jnp    0x4047dd
  404798:	mov    al,0xcc
  40479a:	push   esi
  40479b:	retf   0x740c
  40479e:	and    dh,ch
  4047a0:	mov    eax,0x5117d66
  4047a5:	fidivr WORD PTR [esp+ecx*1+0x0]
  4047a9:	add    BYTE PTR [ebx],al
  4047ab:	adc    esi,DWORD PTR [eax]
  4047ad:	xchg   esi,eax
  4047ae:	call   0x50a4:0xe52c610b
  4047b5:	mov    edx,0x19c40743
  4047ba:	or     al,0x8
  4047bc:	hlt    
  4047bd:	(bad)  
  4047be:	adc    eax,0x8a35a4ee
  4047c3:	icebp  
  4047c4:	xchg   esp,eax
  4047c5:	mov    ds:0x3288d52a,eax
  4047ca:	cmc    
  4047cb:	mov    ecx,0xc04ca4b8
  4047d0:	jmp    0xd9ffeaf3
  4047d5:	mov    BYTE PTR ds:0x2b4c22,al
  4047db:	add    BYTE PTR [edx],cl
  4047dd:	sbb    edi,DWORD PTR [ebp+edi*4+0x53]
  4047e1:	xor    eax,0x1a9c072d
  4047e6:	sbb    eax,0x1022d991
  4047eb:	fs push es
  4047ed:	sbb    al,0x20
  4047ef:	bnd jg 0x404826
  4047f2:	jno    0x40483c
  4047f4:	jo     0x404811
  4047f6:	inc    ecx
  4047f7:	fidiv  WORD PTR [esi-0x66822b2b]
  4047fd:	fsub   st,st(4)
  4047ff:	jmp    0x404801
  404801:	ret    0x51b5
  404804:	das    
  404805:	mov    ebp,0x7afc785
  40480a:	cwde   
  40480b:	push   esi
  40480c:	push   eax
  40480d:	push   es
  40480e:	test   al,0xc0
  404810:	aad    0xfd
  404812:	and    eax,0x272b1ff9
  404817:	leave  
  404818:	add    ebp,0x941a5c02
  40481e:	or     DWORD PTR [esp+ebx*4-0x65],ebp
  404822:	add    BYTE PTR ds:0xcfc45f6,bh
  404828:	push   0x9d2021ec
  40482d:	cmc    
  40482e:	sbb    dl,BYTE PTR [eax]
  404830:	add    esp,DWORD PTR [esi+0x23]
  404833:	inc    ecx
  404834:	jno    0x4047c9
  404836:	sub    BYTE PTR [ecx-0x39],dh
  404839:	or     al,0x5
  40483b:	in     al,0x24
  40483d:	fadd   QWORD PTR [edi]
  40483f:	aam    0x0
  404841:	add    BYTE PTR [edx+0x3884fe82],bl
  404847:	mov    ?,ebp
  404849:	mov    ah,0xbe
  40484b:	lds    esi,FWORD PTR [esi-0x58]
  40484e:	das    
  40484f:	repz jne 0x4047ea
  404852:	mov    cl,0x5b
  404854:	ins    BYTE PTR es:[edi],dx
  404855:	leave  
  404856:	add    esp,ebp
  404858:	outs   dx,BYTE PTR ds:[esi]
  404859:	stc    
  40485a:	xchg   ebp,eax
  40485b:	(bad)  
  40485c:	retf   
  40485d:	ins    BYTE PTR es:[edi],dx
  40485e:	imul   ch
  404860:	rcr    BYTE PTR [eax+ecx*4+0x7c],1
  404864:	(bad)  ds:0x3dd24c0a
  40486a:	mov    WORD PTR [esi],ss
  40486c:	retf   
  40486d:	xor    BYTE PTR [ecx],bh
  40486f:	(bad)  
  404871:	add    BYTE PTR [edi+0x5551d7e8],bl
  404877:	cwde   
  404878:	shl    DWORD PTR [ecx-0x15],cl
  40487b:	adc    DWORD PTR [eax-0xc],edi
  40487e:	cmp    BYTE PTR [esi+0x74],0xc4
  404882:	imul   bh
  404884:	ins    BYTE PTR es:[edi],dx
  404885:	xchg   ebp,eax
  404886:	pop    esp
  404887:	sbb    BYTE PTR [esi-0x5b],ch
  40488a:	loop   0x404895
  40488c:	rol    DWORD PTR ds:0x6be876d,1
  404892:	dec    ebp
  404893:	adc    DWORD PTR [edi],ebp
  404895:	(bad)  
  404896:	jge    0x4048f3
  404898:	pop    eax
  404899:	cld    
  40489a:	jge    0x404889
  40489c:	aad    0x20
  40489e:	or     DWORD PTR [edi-0x6eee45f],ecx
  4048a4:	daa    
  4048a5:	and    al,BYTE PTR [eax]
  4048a7:	add    al,bl
  4048a9:	jb     0x4048e2
  4048ab:	sub    eax,eax
  4048ad:	in     al,0x5e
  4048af:	rcl    BYTE PTR [edx+edi*2],1
  4048b2:	call   0x71502d81
  4048b7:	shl    BYTE PTR [ebp-0x1a26419b],cl
  4048bd:	repz aaa 
  4048bf:	jne    0x404911
  4048c1:	nop
  4048c2:	out    0x75,eax
  4048c4:	mov    BYTE PTR [esi],al
  4048c6:	push   esi
  4048c7:	outs   dx,DWORD PTR ds:[esi]
  4048c8:	xor    DWORD PTR [ecx+eax*8+0x6c],ebp
  4048cc:	or     edx,ebx
  4048ce:	and    BYTE PTR [edi],al
  4048d0:	sbb    al,0x6b
  4048d2:	out    dx,al
  4048d3:	add    ebx,DWORD PTR [ebx*8-0x688d0282]
  4048da:	mov    dh,bh
  4048dc:	push   0x1
  4048de:	push   es
  4048df:	sbb    bl,al
  4048e1:	(bad)  
  4048e3:	and    al,al
  4048e5:	hlt    
  4048e6:	push   edi
  4048e7:	sub    BYTE PTR [ecx+0x7e],ch
  4048ea:	xchg   DWORD PTR [ebx],esp
  4048ec:	xchg   ecx,eax
  4048ed:	or     dl,dl
  4048ef:	sbb    al,BYTE PTR [ebp+ebx*4+0x2b741ffd]
  4048f6:	ins    BYTE PTR es:[edi],dx
  4048f7:	sub    DWORD PTR [ebp-0x2adda43f],esp
  4048fd:	push   ebx
  4048fe:	aad    0x5
  404900:	pusha  
  404901:	mov    bh,0xe2
  404903:	add    al,0x78
  404905:	and    DWORD PTR [eax],eax
  404907:	imul   edi,DWORD PTR [ecx+0x34c199],0x0
  40490e:	mov    dl,0xc9
  404910:	push   edi
  404911:	mov    WORD PTR [esi],fs
  404913:	ret    
  404914:	(bad)  
  404915:	sti    
  404916:	sub    esi,DWORD PTR [ebx+0x622b6250]
  40491c:	jmp    0xa58b:0x7c92000d
  404923:	pop    es
  404924:	(bad)  
  404926:	mov    edi,?
  404928:	dec    eax
  404929:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40492b:	repz repnz mov dl,BYTE PTR es:[esi+0x65]
  404931:	xor    al,0xe7
  404933:	sub    bl,BYTE PTR [eax+0x23]
  404936:	fdivr  QWORD PTR [edx]
  404938:	into   
  404939:	mov    ch,dl
  40493b:	or     DWORD PTR [ebp+esi*4-0x41],esi
  40493f:	fabs   
  404941:	xor    ebx,DWORD PTR [edx]
  404943:	outs   dx,DWORD PTR ds:[esi]
  404944:	inc    ecx
  404945:	cld    
  404946:	push   cs
  404947:	jg     0x404920
  404949:	lea    esp,[ecx]
  40494b:	into   
  40494c:	ins    DWORD PTR es:[edi],dx
  40494d:	call   0xb2c8:0x2afb9e08
  404954:	push   0xffffffd5
  404956:	rol    dl,0xfc
  404959:	inc    esp
  40495a:	repz xchg ecx,eax
  40495c:	inc    esi
  40495d:	mov    bl,0xb6
  40495f:	popa   
  404960:	shr    BYTE PTR ds:0xba72f6dd,1
  404966:	xlat   BYTE PTR ds:[ebx]
  404967:	push   es
  404968:	in     eax,0x43
  40496a:	cld    
  40496b:	push   eax
  40496c:	pop    edi
  40496d:	mov    ebp,ss
  40496f:	and    eax,0xb9c9
  404974:	fstp   QWORD PTR [edx]
  404976:	cmp    al,0x6
  404978:	xlat   BYTE PTR ds:[ebx]
  404979:	dec    edx
  40497a:	stos   BYTE PTR es:[edi],al
  40497b:	xchg   edi,eax
  40497c:	fist   WORD PTR [eax+edx*1]
  40497f:	and    dl,dl
  404981:	add    al,0x86
  404983:	add    BYTE PTR [ebx+0x0],ch
  404986:	mov    ch,0x25
  404988:	int3   
  404989:	add    al,0x85
  40498b:	mov    bl,0x45
  40498d:	out    dx,eax
  40498e:	ror    DWORD PTR [ecx],cl
  404990:	shr    ch,cl
  404992:	jecxz  0x404933
  404994:	xchg   edx,eax
  404995:	(bad)  
  404996:	stc    
  404997:	push   cs
  404998:	test   ebp,edx
  40499a:	leave  
  40499b:	cwde   
  40499c:	cld    
  40499d:	mov    eax,0xbbbb2298
  4049a2:	test   al,0xb4
  4049a4:	xor    eax,0x92173d17
  4049a9:	sbb    al,0xd
  4049ab:	cmp    DWORD PTR [ebx-0x43c4a3e7],0x81ad6c32
  4049b5:	xor    eax,0x36562083
  4049ba:	mov    bl,0xb6
  4049bc:	outs   dx,DWORD PTR ds:[esi]
  4049bd:	push   ds
  4049be:	loop   0x4049cc
  4049c0:	test   al,0x18
  4049c2:	rcr    BYTE PTR [edx+0x3947bc26],cl
  4049c8:	mov    eax,ds:0x28af77b7
  4049cd:	shl    DWORD PTR [esi],1
  4049cf:	adc    eax,0x8316b9ef
  4049d4:	pop    edi
  4049d5:	jmp    0xf1a8:0x120a
  4049dc:	cmp    al,BYTE PTR [ecx+esi*1-0x19c195fd]
  4049e3:	call   FWORD PTR [ecx-0x58]
  4049e6:	pop    eax
  4049e7:	mov    ds:0xa09f0bce,eax
  4049ec:	(bad)  
  4049ed:	popf   
  4049ee:	test   BYTE PTR [edi],0xae
  4049f1:	daa    
  4049f2:	add    DWORD PTR ds:0xa68cb19e,ecx
  4049f8:	xchg   edx,eax
  4049f9:	inc    esp
  4049fa:	jnp    0x4049a1
  4049fc:	mov    ds:0x29cd5d2,al
  404a01:	repnz cmp eax,0xcbc205ca
  404a07:	in     al,0x21
  404a09:	push   edi
  404a0a:	and    BYTE PTR [ecx],dh
  404a0c:	daa    
  404a0d:	mov    ?,WORD PTR [bp+si+0x361f]
  404a12:	and    al,0x63
  404a14:	sbb    BYTE PTR [esi],al
  404a16:	mov    dl,0xeb
  404a18:	xlat   BYTE PTR ds:[ebx]
  404a19:	sbb    ebp,DWORD PTR [ebx]
  404a1b:	sbb    dl,cl
  404a1d:	sub    esi,DWORD PTR [ebp+0x2f7ac9a1]
  404a23:	mov    esi,cs
  404a25:	dec    edx
  404a26:	cdq    
  404a27:	or     ch,BYTE PTR [ebx-0x21]
  404a2a:	repnz xor ch,BYTE PTR [esi-0x11]
  404a2e:	jl     0x4049f4
  404a30:	je     0x4049f0
  404a32:	push   ss
  404a33:	xchg   ecx,eax
  404a34:	jae    0x4049c4
  404a36:	and    BYTE PTR [ebx-0x2b],0xa3
  404a3a:	ins    DWORD PTR es:[edi],dx
  404a3b:	xchg   edx,eax
  404a3c:	rcl    BYTE PTR [ebx-0x7250000],cl
  404a42:	retf   
  404a43:	ret    0x419
  404a46:	int    0xf2
  404a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a49:	sub    DWORD PTR [eax+0x67],0x576f8b44
  404a50:	mov    dl,0x9b
  404a52:	jbe    0x404a5a
  404a54:	adc    cl,ch
  404a56:	jno    0x404a8e
  404a58:	sahf   
  404a59:	enter  0x2afe,0xff
  404a5d:	push   ebx
  404a5e:	stc    
  404a5f:	sbb    cl,BYTE PTR [ecx+0xb4a00c2]
  404a65:	repnz pop es
  404a67:	jp     0x404ade
  404a69:	imul   esp,DWORD PTR [ebx],0xffffffef
  404a6c:	push   ss
  404a6d:	cmp    DWORD PTR [edi+ebx*8],esp
  404a70:	mov    al,ds:0x28e1d61
  404a75:	jmp    0x404a91
  404a77:	mov    esi,0x2232096c
  404a7c:	es xchg esi,eax
  404a7e:	popf   
  404a7f:	and    eax,0x1d0c0056
  404a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a85:	imul   edi,DWORD PTR [ebx+0x34dbb71b],0x827d4bff
  404a8f:	clc    
  404a90:	adc    eax,DWORD PTR [edi]
  404a92:	or     eax,DWORD PTR [edx]
  404a94:	retf   
  404a95:	pusha  
  404a96:	xchg   esp,eax
  404a97:	push   es
  404a98:	repz repnz sub ebp,DWORD PTR [ecx-0x22]
  404a9d:	arpl   WORD PTR [ebx+0x6e],bx
  404aa0:	into   
  404aa1:	icebp  
  404aa2:	shl    DWORD PTR [edi+0x0],0x0
  404aa6:	das    
  404aa7:	js     0x404a56
  404aa9:	jo     0x404aaa
  404aab:	or     eax,0x6a82d42b
  404ab0:	xor    al,0xd3
  404ab2:	mov    bl,al
  404ab4:	(bad)  
  404ab5:	retf   0x8e53
  404ab8:	xchg   edx,eax
  404ab9:	int    0x3b
  404abb:	add    al,0x82
  404abd:	and    BYTE PTR [edi+0x6727cd59],dl
  404ac3:	jmp    0x404b20
  404ac5:	push   ds
  404ac6:	jbe    0x404a4d
  404ac8:	jmp    0x404ae2
  404aca:	pcmpgtw xmm7,xmm5
  404ace:	fdiv   DWORD PTR [eax-0x2e]
  404ad1:	cli    
  404ad2:	add    bl,ah
  404ad4:	cmp    al,BYTE PTR [ebx]
  404ad6:	mov    edx,0x8203e48c
  404adb:	idiv   BYTE PTR [ebx+0x6b]
  404ade:	pop    DWORD PTR [edi-0x2609375]
  404ae4:	adc    DWORD PTR [ebp-0x42],esi
  404ae7:	jae    0x404ac6
  404ae9:	jno    0x404ad9
  404aeb:	loope  0x404b47
  404aed:	(bad)  
  404aee:	push   ebx
  404aef:	jle    0x404a75
  404af1:	sar    DWORD PTR [ebx],1
  404af3:	adc    al,0x0
  404af5:	cmc    
  404af6:	sbb    dh,BYTE PTR [edx-0x3de41d49]
  404afc:	and    DWORD PTR [edi+0xa],ebp
  404aff:	mov    bh,0xd4
  404b01:	pop    eax
  404b02:	add    eax,0x9dc142a7
  404b07:	pop    ebp
  404b08:	clc    
  404b09:	out    dx,al
  404b0a:	add    BYTE PTR [eax],al
  404b0c:	cwde   
  404b0d:	lea    ebp,[esi+0x68]
  404b10:	das    
  404b11:	clc    
  404b12:	int3   
  404b13:	aaa    
  404b14:	sub    al,ch
  404b16:	pop    edx
  404b17:	(bad)  
  404b18:	es sbb ecx,esp
  404b1b:	shl    DWORD PTR [edi],1
  404b1d:	dec    ecx
  404b1e:	ja     0x404b91
  404b20:	mov    eax,ds:0x9e1ee643
  404b25:	xor    esi,DWORD PTR [eax-0x71]
  404b28:	aam    0xe4
  404b2a:	leave  
  404b2b:	clc    
  404b2c:	rcl    DWORD PTR [esp+ebx*2],1
  404b2f:	jbe    0x404ae5
  404b31:	jg     0x404b32
  404b33:	add    DWORD PTR [ebx-0x2c779691],esi
  404b39:	mov    al,ds:0xd0c2d7d3
  404b3e:	inc    ebp
  404b3f:	mov    DWORD PTR [eax-0x55],esp
  404b42:	js     0x404afa
  404b44:	pop    ebp
  404b45:	mov    ebx,0x8cd527ee
  404b4a:	push   esp
  404b4b:	adc    dl,dl
  404b4d:	pop    esp
  404b4e:	ret    0xf78e
  404b51:	out    0x60,eax
  404b53:	cdq    
  404b54:	div    bh
  404b56:	mul    BYTE PTR [eax]
  404b58:	ror    BYTE PTR [eax+0x4d],1
  404b5b:	out    dx,eax
  404b5c:	int3   
  404b5d:	sbb    bl,bl
  404b5f:	push   edi
  404b60:	or     DWORD PTR [edx+ecx*2],esi
  404b63:	rol    BYTE PTR [esp+eax*2],0xdc
  404b67:	sub    DWORD PTR [esi],ebx
  404b69:	adc    eax,0xe51ed666
  404b6e:	out    dx,eax
  404b6f:	add    BYTE PTR [eax],al
  404b71:	add    BYTE PTR [ebp+0x5a53ae28],ah
  404b77:	xor    BYTE PTR [esi-0x30e83c3b],bl
  404b7d:	jg     0x404bab
  404b7f:	sbb    bh,bh
  404b81:	jmp    0x1d327dbf
  404b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b87:	cs ret 0x8f8a
  404b8b:	pop    ss
  404b8c:	xchg   ebx,eax
  404b8d:	xor    al,dl
  404b8f:	sbb    DWORD PTR [ebx+0x36bc56a6],esp
  404b95:	add    eax,0x9306bbe9
  404b9a:	push   eax
  404b9b:	rcl    BYTE PTR [edi+0x29],cl
  404b9e:	(bad)  
  404ba0:	addr16 mov edi,0x2e79eaff
  404ba6:	lock in eax,0x49
  404ba9:	mov    eax,0x21b0449
  404bae:	xchg   esi,eax
  404baf:	add    ebp,DWORD PTR [ebx]
  404bb1:	xchg   esp,eax
  404bb2:	rcr    BYTE PTR [edi-0x6750c843],0x8d
  404bb9:	mov    eax,ds:0x1bdf0946
  404bbe:	sub    DWORD PTR [esi],eax
  404bc0:	out    dx,eax
  404bc1:	lea    ebp,[esp+ecx*1+0x0]
  404bc5:	add    ch,dl
  404bc7:	push   cs
  404bc8:	xor    DWORD PTR [ecx-0x12],eax
  404bcb:	fwait
  404bcc:	popa   
  404bcd:	adc    bh,0xb8
  404bd0:	push   edx
  404bd1:	ret    
  404bd2:	nop
  404bd3:	add    ebp,eax
  404bd5:	add    al,0x0
  404bd7:	add    cl,bh
  404bd9:	(bad)  
  404bdb:	inc    ebp
  404bdc:	ror    BYTE PTR [edi-0x59],cl
  404bdf:	xchg   bl,cl
  404be1:	dec    esp
  404be2:	xchg   esi,eax
  404be3:	(bad)  
  404be4:	fs aam 0x8a
  404be7:	or     BYTE PTR [ebp-0x39],bl
  404bea:	mov    ebx,0x997cd549
  404bef:	call   0xd9f0df53
  404bf4:	push   cs
  404bf5:	outs   dx,DWORD PTR ss:[esi]
  404bf7:	dec    edi
  404bf8:	leave  
  404bf9:	aad    0x59
  404bfb:	jle    0x404b9d
  404bfd:	cmp    BYTE PTR [ebp-0x73d8a4d3],al
  404c03:	sbb    al,0x12
  404c05:	pop    esp
  404c06:	lds    edx,FWORD PTR [edx]
  404c08:	test   BYTE PTR [ebx-0x36],ah
  404c0b:	and    esp,ebp
  404c0d:	mov    eax,0xd2a670af
  404c12:	cwde   
  404c13:	inc    ecx
  404c14:	neg    DWORD PTR [bx+di-0x29]
  404c18:	and    BYTE PTR [eax-0x4b361992],bl
  404c1e:	mov    esi,DWORD PTR [ebp-0x7b7b597e]
  404c24:	dec    ebx
  404c25:	xor    ecx,DWORD PTR ds:0x48bfc98
  404c2b:	test   eax,0xf9d740ed
  404c30:	scas   al,BYTE PTR es:[edi]
  404c31:	dec    edx
  404c32:	repnz retf 0xf5f
  404c36:	xor    DWORD PTR [ebp+0x18],ebx
  404c39:	mov    al,ds:0x6c17
  404c3e:	sar    esp,1
  404c40:	inc    edx
  404c41:	aas    
  404c42:	mov    bh,dh
  404c44:	dec    ebp
  404c45:	push   cs
  404c46:	inc    ebx
  404c47:	push   ds
  404c48:	jg     0x404c6e
  404c4a:	aaa    
  404c4b:	sub    eax,0x90361588
  404c50:	jne    0x404c98
  404c52:	cmc    
  404c53:	mov    ds,WORD PTR [edx+0x77]
  404c56:	mov    ah,0x61
  404c58:	fwait
  404c59:	loope  0x404cce
  404c5b:	mov    ecx,0x743ad0b4
  404c60:	leave  
  404c61:	xor    ecx,0x7a
  404c64:	mov    esi,0x4409b8b2
  404c69:	inc    edi
  404c6a:	imul   esi,DWORD PTR [ebp+eiz*1+0x42],0x72
  404c6f:	mov    bl,0x6
  404c71:	sbb    eax,0x3416f219
  404c76:	add    BYTE PTR [ecx],dh
  404c78:	shl    dl,0x6f
  404c7b:	outs   dx,DWORD PTR ds:[esi]
  404c7c:	leave  
  404c7d:	fisttp QWORD PTR [esi+ebp*4-0x1223ff1e]
  404c84:	fiadd  DWORD PTR [edi]
  404c86:	popf   
  404c87:	sub    al,0x46
  404c89:	inc    ecx
  404c8a:	mov    ds:0xda46279a,eax
  404c8f:	pop    ebx
  404c90:	inc    esp
  404c91:	xor    esp,DWORD PTR [ecx]
  404c93:	sbb    DWORD PTR [ebp+0x1c],edx
  404c96:	cmp    dl,bl
  404c98:	sbb    ebp,0xf28b96c7
  404c9e:	xchg   esp,eax
  404c9f:	push   edi
  404ca0:	pusha  
  404ca1:	pop    es
  404ca2:	add    BYTE PTR [eax],al
  404ca4:	inc    esp
  404ca5:	adc    al,0x59
  404ca7:	add    BYTE PTR [ebp-0x2b],dh
  404caa:	std    
  404cab:	mov    BYTE PTR [ecx-0x5e],bl
  404cae:	out    dx,eax
  404caf:	jg     0x404d11
  404cb1:	arpl   sp,cx
  404cb3:	pop    edx
  404cb4:	stos   DWORD PTR es:[edi],eax
  404cb5:	and    ch,cl
  404cb7:	jne    0x404d2b
  404cb9:	loope  0x404d34
  404cbb:	mov    ah,0xfc
  404cbd:	sahf   
  404cbe:	xchg   ebx,eax
  404cbf:	fwait
  404cc0:	sbb    eax,0xcebea860
  404cc5:	sbb    al,0x91
  404cc7:	leave  
  404cc8:	scas   eax,DWORD PTR es:[edi]
  404cc9:	fstp   st(0)
  404ccb:	sub    eax,0x22d0050a
  404cd0:	rol    DWORD PTR [ebp-0x55],cl
  404cd3:	aaa    
  404cd4:	clc    
  404cd5:	xchg   BYTE PTR [edx+0x5dc7e150],dh
  404cdb:	adc    DWORD PTR [edi+0x8],ecx
  404cde:	ins    BYTE PTR es:[edi],dx
  404cdf:	imul   BYTE PTR [edi+0x49]
  404ce2:	add    BYTE PTR [edi+0x6e83a636],cl
  404ce8:	xor    ecx,eax
  404cea:	ret    0xb6e1
  404ced:	les    ecx,FWORD PTR ds:0x4c957fc8
  404cf3:	jecxz  0x404d4d
  404cf5:	data16 (bad) 
  404cf7:	cli    
  404cf8:	jge    0x404d71
  404cfa:	into   
  404cfb:	and    eax,0x2409093d
  404d00:	and    bl,al
  404d02:	inc    edi
  404d03:	pop    es
  404d04:	aas    
  404d05:	sub    ecx,DWORD PTR [ebx+0x390000f6]
  404d0b:	cmp    cl,dl
  404d0d:	mov    ds:0x8a543c6e,eax
  404d12:	cmp    DWORD PTR [esi],ebp
  404d14:	adc    eax,0xd5dd4c61
  404d19:	js     0x404d6e
  404d1b:	or     al,0x97
  404d1d:	daa    
  404d1e:	mov    al,BYTE PTR [edx+0x736d2650]
  404d24:	adc    DWORD PTR [ebp+0x70],eax
  404d27:	mov    al,ds:0xd16f34d2
  404d2c:	xchg   ebx,eax
  404d2d:	fwait
  404d2e:	hlt    
  404d2f:	mov    ah,0x5c
  404d31:	xchg   edx,eax
  404d32:	shl    DWORD PTR [ebx+0x571aa91d],0xde
  404d39:	mov    al,0xcb
  404d3b:	test   DWORD PTR [edi+0x57fb80df],ebx
  404d41:	out    dx,al
  404d42:	(bad)
  404d45:	int    0x7e
  404d47:	sub    eax,0x4a77acda
  404d4c:	fwait
  404d4d:	dec    esp
  404d4e:	sub    al,0x31
  404d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d51:	pop    ebp
  404d52:	jae    0x404d94
  404d54:	out    0x3e,al
  404d56:	mov    ss,WORD PTR [ebx]
  404d58:	and    eax,0x63e2291f
  404d5d:	add    BYTE PTR ds:0x34a3ae76,ch
  404d63:	and    ebx,DWORD PTR [edi-0x33c3d01e]
  404d69:	and    esi,edx
  404d6b:	xor    ebp,edi
  404d6d:	pusha  
  404d6e:	add    BYTE PTR [eax],al
  404d70:	cmp    DWORD PTR [eax+eiz*8-0x305c5751],0x82fa83ee
  404d7b:	sub    eax,0x6cb19d7a
  404d80:	inc    ebp
  404d81:	loope  0x404da6
  404d83:	stos   DWORD PTR es:[edi],eax
  404d84:	dec    esp
  404d85:	cmp    BYTE PTR ds:0x45e667ea,dl
  404d8b:	sub    DWORD PTR [esi-0x16],ecx
  404d8e:	jbe    0x404df8
  404d90:	ret    
  404d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d92:	js     0x404d8a
  404d94:	jmp    0x1a9d:0xc1b747a9
  404d9b:	je     0x404d55
  404d9d:	cli    
  404d9e:	sub    DWORD PTR ds:0xf2bc3787,esi
  404da4:	dec    esi
  404da5:	loopne 0x404d33
  404da7:	mov    bl,0x65
  404da9:	jmp    0xe6ccbe8b
  404dae:	out    dx,al
  404daf:	xor    ebx,ecx
  404db1:	jle    0x404da6
  404db3:	(bad)  
  404db4:	bnd jno 0x404d79
  404db7:	mov    edi,0x7c91b8c9
  404dbc:	loopne 0x404e1d
  404dbe:	mov    al,ds:0x3622ef3d
  404dc3:	cli    
  404dc4:	div    BYTE PTR [ebp+0x7]
  404dc7:	mov    ebx,0x785424ad
  404dcc:	adc    al,0x3c
  404dce:	cmp    DWORD PTR gs:[edi+0x4b988a],esi
  404dd5:	add    dh,bl
  404dd7:	lea    ebp,[ecx+0x6ea9d50a]
  404ddd:	cli    
  404dde:	or     al,0xa2
  404de0:	push   ebp
  404de1:	retf   
  404de2:	dec    ebp
  404de3:	jecxz  0x404d79
  404de5:	pop    ebp
  404de6:	mov    ds:0xdb6cafe4,al
  404deb:	inc    ebp
  404dec:	retf   
  404ded:	aas    
  404dee:	adc    dh,dl
  404df0:	ror    DWORD PTR [esi],0x49
  404df3:	jg     0x404e3f
  404df5:	adc    dl,BYTE PTR [esi-0x28dcbc88]
  404dfb:	jno    0x404e15
  404dfd:	jo     0x404e13
  404dff:	pop    edx
  404e00:	sub    eax,0xee3b5541
  404e05:	(bad)  
  404e06:	call   0x44d:0xd3e5d72c
  404e0d:	mov    ch,0x18
  404e0f:	out    dx,al
  404e10:	or     BYTE PTR [ecx+edx*2-0x1075bd3f],al
  404e17:	mov    eax,0x702ebb49
  404e1c:	sub    al,0xe8
  404e1e:	pop    ebp
  404e1f:	push   edi
  404e20:	pop    ss
  404e21:	fstp   DWORD PTR [esi+edi*4-0x532cb12a]
  404e28:	in     eax,dx
  404e29:	jge    0x404e35
  404e2b:	or     al,0x9
  404e2d:	sub    eax,0x1c03ab41
  404e32:	js     0x404e5e
  404e34:	mov    WORD PTR [eax],es
  404e36:	out    0x50,eax
  404e38:	xor    DWORD PTR [ecx],0x28260000
  404e3e:	push   esi
  404e3f:	bound  esp,QWORD PTR [ebp+0x1f]
  404e42:	outs   dx,DWORD PTR ds:[esi]
  404e43:	push   ebx
  404e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e45:	out    0xaf,al
  404e47:	(bad)
  404e4a:	xchg   esp,eax
  404e4b:	hlt    
  404e4c:	add    al,BYTE PTR [edx+eax*8]
  404e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e50:	dec    ecx
  404e51:	xchg   ebx,eax
  404e52:	retf   0x8096
  404e55:	or     dl,BYTE PTR [edi-0x694e7104]
  404e5b:	pop    es
  404e5c:	pop    eax
  404e5d:	jb     0x404ed4
  404e5f:	repnz and BYTE PTR [edi],ch
  404e62:	fldcw  WORD PTR fs:[ebx]
  404e65:	lock mov dl,0x18
  404e68:	lods   al,BYTE PTR ds:[esi]
  404e69:	lods   al,BYTE PTR ds:[esi]
  404e6a:	call   0xbe46:0xb16d9d33
  404e71:	sub    cl,al
  404e73:	cmp    eax,0xc60eebef
  404e78:	retf   
  404e79:	test   al,0x1e
  404e7b:	mov    edi,0x9c3d69d2
  404e80:	test   eax,0x70b11c26
  404e85:	out    0xea,eax
  404e87:	jno    0x404e6f
  404e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8a:	loop   0x404ee6
  404e8c:	pop    ss
  404e8d:	mov    cx,0x447f
  404e91:	and    eax,eax
  404e93:	test   BYTE PTR ds:0x83be4ce4,dh
  404e99:	popa   
  404e9a:	pop    esp
  404e9b:	lds    ebp,FWORD PTR [edx-0x60]
  404e9e:	aas    
  404e9f:	mov    al,0x0
  404ea1:	add    BYTE PTR [ecx-0x4764e221],dl
  404ea7:	push   ds
  404ea8:	imul   ebx,DWORD PTR [edx+0x3e],0xf71605e
  404eaf:	popf   
  404eb0:	jnp    0x404e36
  404eb2:	int3   
  404eb3:	fild   DWORD PTR [ecx-0x2ae52281]
  404eb9:	pop    es
  404eba:	mov    ecx,0xe1fcd459
  404ebf:	cwde   
  404ec0:	neg    ecx
  404ec2:	sbb    al,bl
  404ec4:	in     eax,0xf2
  404ec6:	add    edx,DWORD PTR [edi]
  404ec8:	mov    cl,0x33
  404eca:	je     0x404f21
  404ecc:	cwde   
  404ecd:	sbb    BYTE PTR [ebp-0x5f8cff6c],al
  404ed3:	xchg   BYTE PTR [esi],dh
  404ed5:	mov    dl,BYTE PTR [ebx]
  404ed7:	pop    eax
  404ed8:	ja     0x404e8c
  404eda:	jae    0x404e8e
  404edc:	dec    esi
  404edd:	mov    ebx,0xd00fa370
  404ee2:	and    eax,0x7ec9cc54
  404ee7:	test   DWORD PTR [ebp+0x49f7af96],ecx
  404eed:	ja     0x404f33
  404eef:	out    0xa,al
  404ef1:	push   esp
  404ef2:	mov    ecx,0x7a65c819
  404ef7:	dec    eax
  404ef8:	mov    edx,ebp
  404efa:	sti    
  404efb:	cmp    al,0x46
  404efd:	add    ebp,DWORD PTR [ecx]
  404eff:	cs pop es
  404f01:	fdivr  st,st(5)
  404f03:	fcmovb st,st(3)
  404f05:	rol    DWORD PTR [eax],0x0
  404f08:	in     al,0xb
  404f0a:	test   DWORD PTR [esi],ecx
  404f0c:	xchg   BYTE PTR [ecx+0x70a2ff42],al
  404f12:	add    ebx,DWORD PTR [eax+eax*8]
  404f15:	lahf   
  404f16:	rcr    BYTE PTR ds:0x6881ceb3,0xb1
  404f1d:	into   
  404f1e:	pop    ds
  404f1f:	xor    DWORD PTR [edx-0x1865a163],0xbc839d70
  404f29:	jg     0x404f07
  404f2b:	dec    esp
  404f2c:	in     eax,dx
  404f2d:	or     DWORD PTR [ebx],ebx
  404f2f:	cmp    eax,0x1e59db06
  404f34:	sti    
  404f35:	sub    ebx,DWORD PTR [ecx-0x27c347e1]
  404f3b:	mov    al,0x39
  404f3d:	dec    ecx
  404f3e:	pop    ss
  404f3f:	mov    ecx,0x92561868
  404f44:	aas    
  404f45:	out    0x94,eax
  404f47:	mov    ecx,DWORD PTR [edx-0x76ff2c0a]
  404f4d:	jp     0x404ed9
  404f4f:	adc    esp,DWORD PTR [eax]
  404f51:	adc    edi,DWORD PTR [ebx-0x17c774ae]
  404f57:	xchg   ecx,eax
  404f58:	jb     0x404f87
  404f5a:	fnop   
  404f5c:	call   0xc1e2:0xf3ecf2eb
  404f63:	lods   eax,DWORD PTR ds:[esi]
  404f64:	cwde   
  404f65:	inc    ebp
  404f66:	xchg   ecx,eax
  404f67:	outs   dx,BYTE PTR ds:[esi]
  404f68:	mov    eax,ds:0x2f9fe0
  404f6d:	add    dh,dl
  404f6f:	lahf   
  404f70:	xor    eax,0x706dfe8
  404f75:	test   eax,0x6a53b134
  404f7a:	std    
  404f7b:	stos   DWORD PTR es:[edi],eax
  404f7c:	sub    edx,DWORD PTR fs:[edx+0x7be47923]
  404f83:	cmp    BYTE PTR [eax-0x5b],cl
  404f86:	nop
  404f87:	sbb    eax,0x8689661b
  404f8c:	sub    ah,BYTE PTR [edi]
  404f8e:	outs   dx,BYTE PTR ds:[esi]
  404f8f:	(bad)  
  404f90:	mov    esp,0x8d5d47e0
  404f95:	mov    eax,ds:0x62de6a2c
  404f9a:	inc    ebp
  404f9b:	arpl   di,bp
  404f9d:	and    edx,eax
  404f9f:	cmp    cl,ah
  404fa1:	mov    ebp,0xfcd023b9
  404fa6:	rol    BYTE PTR [edi+0x1ecb3f83],cl
  404fac:	mov    dl,0x7e
  404fae:	ins    BYTE PTR es:[edi],dx
  404faf:	pop    esp
  404fb0:	and    al,0xb9
  404fb2:	test   edi,eax
  404fb4:	adc    eax,0x46626ef8
  404fb9:	cmp    eax,DWORD PTR [edi+0x69]
  404fbc:	ja     0x405038
  404fbe:	sbb    dl,ah
  404fc0:	push   0xffffffb5
  404fc2:	mov    cl,0xea
  404fc4:	pop    ecx
  404fc5:	hlt    
  404fc6:	aad    0x10
  404fc8:	ss or  edx,eax
  404fcb:	dec    DWORD PTR [edx+0x38]
  404fce:	jmp    0x40501a
  404fd0:	or     al,0xae
  404fd2:	add    BYTE PTR [eax],al
  404fd4:	and    al,0x41
  404fd6:	cmc    
  404fd7:	sahf   
  404fd8:	gs sub al,0xe2
  404fdb:	retf   
  404fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fdd:	xor    esp,edi
  404fdf:	cld    
  404fe0:	(bad)  
  404fe1:	mov    ds:0xa1d50003,al
  404fe6:	lds    ebp,FWORD PTR [edx+0xa]
  404fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fea:	xchg   esp,edx
  404fec:	stos   DWORD PTR es:[edi],eax
  404fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fee:	dec    ecx
  404fef:	mov    esi,0xa80aa78c
  404ff4:	or     DWORD PTR [eax-0x59d13d34],esi
  404ffa:	mov    ?,WORD PTR [edi+eiz*2-0x53]
  404ffe:	push   eax
  404fff:	push   ss
  405000:	pop    eax
  405001:	mov    al,ds:0xa74d50f4
  405006:	mov    dl,0x3b
  405008:	push   edx
  405009:	lods   eax,DWORD PTR ds:[esi]
  40500a:	js     0x404f91
  40500c:	and    esi,DWORD PTR [esi-0x670b10ca]
  405012:	std    
  405013:	clc    
  405014:	jno    0x404fb0
  405016:	mov    ebx,0x81ac8693
  40501b:	sub    eax,0x473fabcf
  405020:	adc    BYTE PTR ds:0x9645a2ea,cl
  405026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405027:	leave  
  405028:	sbb    ah,BYTE PTR [eax-0x5924889b]
  40502e:	and    ebx,DWORD PTR ds:0xaf0abfc
  405034:	jns    0x404fe1
  405036:	scas   al,BYTE PTR es:[edi]
  405037:	popa   
  405038:	add    BYTE PTR [eax],al
  40503a:	ds mov ecx,0xba97df6c
  405040:	sub    dh,BYTE PTR [ebp-0x2904f578]
  405046:	test   dl,al
  405048:	cli    
  405049:	cwde   
  40504a:	pop    ebp
  40504b:	xchg   edi,eax
  40504c:	clc    
  40504d:	push   edx
  40504e:	mov    bl,0x6f
  405050:	stc    
  405051:	adc    al,0x21
  405053:	jns    0x405031
  405055:	fisttp WORD PTR [esi+edi*8]
  405058:	aam    0xa1
  40505a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40505b:	jmp    0x1dd6:0x144b5bde
  405062:	cmp    DWORD PTR [ebp+0x21],eax
  405065:	dec    edi
  405066:	xchg   ebx,eax
  405067:	test   eax,0xbef19120
  40506c:	adc    cl,bl
  40506e:	mov    BYTE PTR [bp+di],dl
  405071:	or     eax,0x4806512d
  405076:	cmp    edx,esi
  405078:	dec    BYTE PTR [ecx-0x3c0afca7]
  40507e:	fistp  QWORD PTR [ebx]
  405080:	in     al,dx
  405081:	add    eax,0x41df2ca5
  405086:	loop   0x4050b9
  405088:	(bad)  
  405089:	jg     0x40500b
  40508b:	fdivr  QWORD PTR es:[ebp-0x42b1fea]
  405092:	cmp    eax,0x2a38b809
  405097:	mov    ?,WORD PTR [ecx-0x44a4f78a]
  40509d:	mov    ah,0x0
  40509f:	add    BYTE PTR [esi-0x5d],ch
  4050a2:	mov    edx,0xdb4d5f2
  4050a7:	sub    eax,0x6b0479b0
  4050ac:	push   edx
  4050ad:	outs   dx,BYTE PTR ds:[esi]
  4050ae:	push   cs
  4050af:	mov    cl,0x4
  4050b1:	cwde   
  4050b2:	pop    es
  4050b3:	out    dx,eax
  4050b4:	xadd   DWORD PTR [edx],ecx
  4050b7:	sbb    BYTE PTR es:[esi+0xb],al
  4050bb:	fs cli 
  4050bd:	adc    al,BYTE PTR [eax]
  4050bf:	or     DWORD PTR [edi+0x70],ebp
  4050c2:	and    cl,BYTE PTR [eax]
  4050c4:	jge    0x405061
  4050c6:	adc    eax,0x285deed3
  4050cb:	shl    BYTE PTR [eax],cl
  4050cd:	mov    eax,0x295ac01f
  4050d2:	inc    esi
  4050d3:	shl    DWORD PTR [eax+eax*1+0x71],0xd4
  4050d8:	(bad)  
  4050d9:	cmc    
  4050da:	repz int 0x9
  4050dd:	and    bl,al
  4050df:	mov    DWORD PTR [ebx-0x3f],0x682dbe9a
  4050e6:	lods   eax,DWORD PTR ds:[esi]
  4050e7:	pop    ecx
  4050e8:	iret   
  4050e9:	test   al,al
  4050eb:	pop    eax
  4050ec:	add    DWORD PTR [edi+0x313b5af7],ebp
  4050f2:	scas   al,BYTE PTR es:[edi]
  4050f3:	pop    ebx
  4050f4:	adc    eax,0xa63e98da
  4050f9:	in     al,dx
  4050fa:	sbb    esi,DWORD PTR [edi]
  4050fc:	call   0x227d7c47
  405101:	cdq    
  405102:	jb     0x405138
  405104:	add    BYTE PTR [eax],al
  405106:	dec    esp
  405107:	jb     0x40514e
  405109:	daa    
  40510a:	pop    eax
  40510b:	mov    ch,0x78
  40510d:	push   ds
  40510e:	mov    ds,WORD PTR [edi+0x4f]
  405111:	adc    al,0xe4
  405113:	add    DWORD PTR [esi],edx
  405115:	or     eax,0x212b22
  40511a:	push   ecx
  40511b:	sbb    eax,0xf79701a4
  405120:	xchg   edx,eax
  405121:	repz shr BYTE PTR [ecx-0x36],cl
  405125:	repnz cwde 
  405127:	sar    ch,0xd5
  40512a:	sub    ah,ah
  40512c:	scas   eax,DWORD PTR es:[edi]
  40512d:	int3   
  40512e:	loopne 0x40517d
  405130:	xchg   esi,eax
  405132:	sahf   
  405133:	xchg   ebx,eax
  405134:	fidivr WORD PTR [edi+0xe97a4c]
  40513a:	xchg   DWORD PTR [edx],esi
  40513c:	xchg   BYTE PTR [esi+eax*4-0x4],ch
  405140:	jmp    0x40519d
  405142:	xchg   esp,eax
  405143:	mov    esi,0x78950251
  405148:	cmp    BYTE PTR ds:0x87f245e,dh
  40514e:	dec    edi
  40514f:	ficom  DWORD PTR [edi+edi*1]
  405152:	dec    ebp
  405153:	mov    al,ds:0x665c66aa
  405158:	rcl    DWORD PTR [ecx+0x59],0x2f
  40515c:	xlat   BYTE PTR ds:[ebx]
  40515d:	aam    0x58
  40515f:	in     eax,dx
  405160:	mov    esp,0x2ab4ae3
  405165:	mov    edx,0x8d69695b
  40516a:	add    BYTE PTR [eax],al
  40516c:	add    al,0x5d
  40516e:	retf   
  40516f:	and    BYTE PTR ds:0xf717a093,al
  405175:	fcomp  DWORD PTR [esi]
  405177:	dec    esi
  405178:	neg    BYTE PTR [esi]
  40517a:	jne    0x4051f5
  40517c:	jecxz  0x4051d1
  40517e:	arpl   sp,di
  405180:	repnz or DWORD PTR [ecx],ecx
  405183:	retf   
  405184:	lock iret 
  405186:	mov    dh,0x92
  405188:	icebp  
  405189:	adc    eax,0xc1baa5dd
  40518e:	call   0xa9af:0xf00bbb98
  405195:	dec    ebp
  405196:	dec    esi
  405197:	idiv   BYTE PTR [eax-0x423edb79]
  40519d:	mov    edx,0x4ac4432
  4051a2:	pop    eax
  4051a3:	jae    0x405153
  4051a5:	inc    esi
  4051a6:	out    0x2a,al
  4051a8:	inc    DWORD PTR [eax+0x7d881d8c]
  4051ae:	push   0x1b78950
  4051b3:	addr16 aad 0x53
  4051b6:	sbb    BYTE PTR [ebx+esi*8-0x2329a9a4],bh
  4051bd:	outs   dx,DWORD PTR ds:[esi]
  4051be:	fwait
  4051bf:	rcl    BYTE PTR [ecx+0x70],0xd9
  4051c3:	test   eax,0x141f725e
  4051c8:	ja     0x40523b
  4051ca:	pop    ebp
  4051cb:	jle    0x40516d
  4051cd:	enter  0x39a1,0x0
  4051d1:	add    BYTE PTR [ebp-0x39],ch
  4051d4:	jecxz  0x405228
  4051d6:	call   0x675a:0x5bed2559
  4051dd:	xchg   DWORD PTR [ebp*2+0x76a991aa],esp
  4051e4:	in     al,dx
  4051e5:	cli    
  4051e6:	(bad)  
  4051e7:	jl     0x405217
  4051e9:	inc    ebp
  4051ea:	scas   eax,DWORD PTR es:[edi]
  4051eb:	xor    DWORD PTR [eax+0x2f],0xffffffb8
  4051ef:	rcl    edi,0x1a
  4051f2:	push   ebp
  4051f3:	ret    0x7195
  4051f6:	add    al,0x53
  4051f9:	iret   
  4051fa:	inc    ebx
  4051fb:	mov    edi,0xc40ca511
  405200:	loopne 0x4051b4
  405202:	or     ebx,0xc5aed99e
  405208:	pop    esp
  405209:	addr16 (bad) 
  40520b:	into   
  40520c:	sbb    cl,BYTE PTR ds:0x49e67bd0
  405212:	mov    ebp,0xca20a884
  405217:	mov    fs,WORD PTR [edx-0x62]
  40521a:	mov    edx,DWORD PTR ds:0x7a74f424
  405220:	in     eax,dx
  405221:	loope  0x40521c
  405223:	js     0x4051d4
  405225:	mov    BYTE PTR [esi],al
  405227:	xchg   DWORD PTR [ecx+0x36],ebp
  40522a:	pop    edi
  40522b:	xchg   DWORD PTR [ebx],ebp
  40522d:	pop    esp
  40522e:	mov    BYTE PTR [edx],cl
  405230:	fs icebp 
  405232:	mov    bl,BYTE PTR [edx+0xb35d]
  405238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405239:	retf   
  40523a:	push   edi
  40523b:	jne    0x40527e
  40523d:	je     0x40528d
  40523f:	aaa    
  405240:	shl    DWORD PTR [eax+0x43],cl
  405243:	cli    
  405244:	shl    ch,cl
  405246:	inc    ecx
  405247:	mov    esp,0x7e2fef1f
  40524c:	cdq    
  40524d:	dec    eax
  40524e:	xor    DWORD PTR [eax+0x3b],eax
  405251:	sbb    eax,0x426c041a
  405256:	sbb    eax,edx
  405258:	push   esi
  405259:	adc    ebx,DWORD PTR [ecx]
  40525b:	mov    BYTE PTR [eax+0x24617eb],dh
  405261:	stc    
  405262:	cld    
  405263:	or     dl,BYTE PTR [esi+edi*2]
  405266:	hlt    
  405267:	enter  0x66ae,0xfe
  40526b:	mov    gs,WORD PTR [eax-0x70]
  40526e:	test   DWORD PTR [edx+ecx*2-0x3b],0x29a01bc0
  405276:	rcr    DWORD PTR [ecx+0x2],0x3b
  40527a:	mov    bl,0x9f
  40527c:	pop    esp
  40527d:	add    al,0xb2
  40527f:	fnsave [edi]
  405281:	shl    DWORD PTR [esi-0x61a9d7ee],1
  405287:	push   eax
  405288:	cmp    bh,BYTE PTR [edi-0x6c]
  40528b:	xchg   esi,eax
  40528c:	mov    ah,0xb7
  40528e:	(bad)  
  40528f:	aam    0x9f
  405291:	lods   al,BYTE PTR ds:[esi]
  405292:	mov    esi,0xb7b1d128
  405297:	push   0x73
  405299:	mov    ds:0xacbd,al
  40529e:	or     eax,0x24eeb45c
  4052a3:	mov    DWORD PTR [ecx-0x67f1c6df],ebx
  4052a9:	arpl   WORD PTR [ebx],cx
  4052ab:	xlat   BYTE PTR ds:[ebx]
  4052ac:	call   FWORD PTR [ecx-0x6495e688]
  4052b2:	mov    dl,0xf0
  4052b4:	pop    esp
  4052b5:	sub    al,0x0
  4052b7:	xchg   esp,eax
  4052b8:	adc    BYTE PTR ds:0x2f277e3a,ah
  4052be:	ins    BYTE PTR es:[edi],dx
  4052bf:	fistp  QWORD PTR [ebp+0x26]
  4052c2:	scas   al,BYTE PTR es:[edi]
  4052c3:	ror    BYTE PTR [eax+0x2b],cl
  4052c6:	jmp    0x236b1f06
  4052cb:	(bad)  
  4052cc:	cli    
  4052cd:	sub    BYTE PTR [ebp-0x79],al
  4052d0:	mov    ds:0x95aa8729,al
  4052d5:	xor    dl,BYTE PTR [ebx]
  4052d7:	arpl   WORD PTR [eax-0x6033b6cd],bp
  4052dd:	and    DWORD PTR [edi-0x22df39f2],ebx
  4052e3:	clc    
  4052e4:	lock xor eax,0x2c740b1a
  4052ea:	push   eax
  4052eb:	and    al,0x43
  4052ed:	es push ss
  4052ef:	mov    dh,0x1a
  4052f1:	pop    ds
  4052f2:	aam    0x50
  4052f4:	sub    eax,0x407bae78
  4052f9:	jns    0x4052e7
  4052fb:	xchg   ebp,eax
  4052fc:	ja     0x405379
  4052fe:	inc    edx
  4052ff:	dec    eax
  405300:	cs jp  0x405303
  405303:	add    BYTE PTR [eax-0x1f],bh
  405306:	sbb    BYTE PTR [edi-0x49],bl
  405309:	rcr    DWORD PTR [ebx-0x54c20aaa],cl
  40530f:	pop    esp
  405310:	sti    
  405311:	lahf   
  405312:	repnz push ebp
  405314:	xor    DWORD PTR [ecx-0x3562793b],ecx
  40531a:	clc    
  40531b:	jg     0x4052fc
  40531d:	fs iret 
  40531f:	jne    0x405332
  405321:	not    DWORD PTR [ebp-0x5eefb494]
  405327:	add    BYTE PTR [eax+edi*1+0x6f],dh
  40532b:	and    al,0x75
  40532d:	test   BYTE PTR [ebx+edx*1],0x27
  405331:	mov    bh,0xba
  405333:	dec    edx
  405334:	es jns 0x405308
  405337:	jge    0x405382
  405339:	jg     0x405370
  40533b:	xor    BYTE PTR [eax],ch
  40533d:	inc    ecx
  40533e:	pop    edi
  40533f:	pop    es
  405340:	cmp    al,BYTE PTR [ebx]
  405342:	loope  0x4053a2
  405344:	or     eax,ebp
  405346:	mov    ebp,DWORD PTR [ecx+0x26]
  405349:	xchg   BYTE PTR [ebp-0x8b7d814],bl
  40534f:	fcomi  st,st(5)
  405351:	or     DWORD PTR [ecx-0x7e],ecx
  405354:	hlt    
  405355:	retf   
  405356:	and    esi,DWORD PTR [ebp-0x779bf011]
  40535c:	out    dx,al
  40535d:	int    0xd
  40535f:	mov    edi,0xe6af93fc
  405364:	std    
  405365:	push   ecx
  405366:	fcmovbe st,st(1)
  405368:	add    BYTE PTR [eax],al
  40536a:	lock sbb ah,cl
  40536d:	push   esp
  40536e:	icebp  
  40536f:	(bad)  
  405370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405371:	arpl   bx,ax
  405373:	pushf  
  405374:	pop    ss
  405375:	cmp    dh,BYTE PTR [edx+0x650d725a]
  40537b:	shl    BYTE PTR [bx+si-0x529c],1
  405380:	mov    ecx,0x3eb5697
  405385:	into   
  405386:	push   edi
  405387:	xor    DWORD PTR [esi-0x7],ebp
  40538a:	dec    edx
  40538b:	pusha  
  40538c:	js     0x40540a
  40538e:	dec    ebx
  40538f:	sahf   
  405390:	adc    DWORD PTR [ebx+0x59],ecx
  405393:	in     al,0xab
  405395:	adc    cl,BYTE PTR [eax-0x6cda39df]
  40539b:	jne    0x40531e
  40539d:	sbb    BYTE PTR [edx-0x2ad01549],dl
  4053a3:	adc    BYTE PTR ds:[ebp+0x63],dl
  4053a7:	inc    ebp
  4053a8:	push   edx
  4053a9:	aas    
  4053aa:	xchg   esp,eax
  4053ab:	inc    edx
  4053ac:	fwait
  4053ad:	sub    DWORD PTR [ecx],edx
  4053af:	inc    edx
  4053b0:	fld    QWORD PTR [edx-0x3a]
  4053b3:	inc    ebx
  4053b4:	pop    ss
  4053b5:	std    
  4053b6:	jg     0x4053fc
  4053b8:	pop    ecx
  4053b9:	xchg   edi,eax
  4053ba:	pusha  
  4053bb:	ins    DWORD PTR es:[edi],dx
  4053bc:	mov    edi,0x176a573
  4053c1:	sbb    DWORD PTR [edx+0x6ba74370],edi
  4053c7:	ja     0x40534e
  4053c9:	int    0x4c
  4053cb:	adc    al,0xc8
  4053cd:	fild   DWORD PTR [eax]
  4053cf:	add    cl,cl
  4053d1:	adc    ecx,DWORD PTR [edx]
  4053d3:	mov    cl,0xce
  4053d5:	adc    DWORD PTR [edi+ecx*1-0x9],ecx
  4053d9:	adc    cl,BYTE PTR [esi-0x4dd3d79b]
  4053df:	and    ch,ch
  4053e1:	sub    al,0xf0
  4053e3:	inc    edi
  4053e4:	adc    bh,BYTE PTR [ebx]
  4053e6:	ss not bl
  4053e9:	cmp    DWORD PTR [esp+ebx*4-0x5c],esi
  4053ed:	inc    esi
  4053ee:	mov    ecx,0xf6cd218a
  4053f3:	fist   WORD PTR [esi-0x29]
  4053f6:	cmp    al,0x5e
  4053f8:	das    
  4053f9:	loopne 0x405475
  4053fb:	xor    al,0x30
  4053fd:	mov    ds:0x6ad50003,al
  405402:	pop    eax
  405403:	addr16 mov eax,0x5ec80b8c
  405409:	xchg   esp,eax
  40540a:	dec    esi
  40540b:	scas   eax,DWORD PTR es:[edi]
  40540c:	xor    edx,DWORD PTR [edi]
  40540e:	es xchg edi,eax
  405410:	adc    BYTE PTR [edi-0x2380f47],0x2c
  405417:	pop    edi
  405418:	sub    DWORD PTR ds:0x93c38b1,edi
  40541e:	lods   al,BYTE PTR ds:[esi]
  40541f:	push   eax
  405420:	lods   eax,DWORD PTR ds:[esi]
  405421:	mov    al,ds:0x83a20c1c
  405426:	push   es
  405427:	push   edi
  405428:	cmc    
  405429:	and    al,0xb6
  40542b:	add    ebx,DWORD PTR [edx+0xa]
  40542e:	xor    esi,DWORD PTR [edx+0x2e7b511a]
  405434:	add    BYTE PTR [eax],al
  405436:	lods   eax,DWORD PTR ds:[esi]
  405437:	lods   eax,DWORD PTR ds:[esi]
  405438:	mov    DWORD PTR [ecx+0x2510db42],edi
  40543e:	in     eax,0x37
  405440:	mov    ecx,0x516f23fa
  405445:	pop    edi
  405446:	in     eax,0x93
  405448:	push   ebx
  405449:	hlt    
  40544a:	dec    ebx
  40544b:	imul   BYTE PTR [edx+0x26199d67]
  405451:	sbb    eax,0xc0c6c295
  405456:	cmp    bl,BYTE PTR [ebp-0x44]
  405459:	adc    eax,0xca1c4add
  40545e:	repnz out 0x7b,eax
  405461:	addr16 cli 
  405463:	sbb    esp,ecx
  405465:	repnz retf 0xd5f4
  405469:	pop    edi
  40546a:	and    dl,BYTE PTR [ebx+0x7092fc66]
  405470:	jecxz  0x40543a
  405472:	ins    DWORD PTR es:[edi],dx
  405473:	out    0x4a,eax
  405475:	adc    eax,0xc2394c62
  40547a:	cmc    
  40547b:	pop    ebp
  40547c:	loope  0x40549b
  40547e:	call   0xd0:0x6bd589c0
  405485:	mov    bl,BYTE PTR ds:0xb3dce333
  40548b:	push   esp
  40548c:	fwait
  40548d:	adc    ch,0xb9
  405490:	push   ss
  405491:	xor    al,0xdd
  405493:	and    BYTE PTR [esi-0x59],dl
  405496:	mov    dl,0xfd
  405498:	jmp    FWORD PTR [ebx+0x0]
  40549b:	add    bh,cl
  40549d:	cdq    
  40549e:	loop   0x40548c
  4054a0:	arpl   WORD PTR [edi-0x79],si
  4054a3:	or     al,0x57
  4054a5:	xchg   ecx,edx
  4054a7:	mov    esp,0xa6b4af10
  4054ac:	pop    ebp
  4054ad:	aas    
  4054ae:	pop    edx
  4054af:	push   ss
  4054b0:	or     bh,ah
  4054b2:	ds xchg ebx,eax
  4054b4:	cmp    bh,dl
  4054b6:	test   DWORD PTR [ebx],ebx
  4054b8:	adc    DWORD PTR [edi],edx
  4054ba:	jecxz  0x4054e5
  4054bc:	jb     0x40546f
  4054be:	or     eax,0x684f0771
  4054c3:	pop    ecx
  4054c4:	test   eax,0x25b1a196
  4054c9:	outs   dx,DWORD PTR ds:[esi]
  4054ca:	les    esi,FWORD PTR [ebx+0x4b29deb0]
  4054d0:	sbb    al,0x37
  4054d2:	dec    edi
  4054d3:	(bad)  
  4054d4:	nop    esi
  4054d7:	arpl   WORD PTR es:[ecx],ax
  4054da:	xchg   ebx,eax
  4054db:	sbb    al,0x16
  4054dd:	addr16 jge 0x40549c
  4054e0:	push   0xffffffc9
  4054e2:	sbb    ah,bl
  4054e4:	std    
  4054e5:	mov    ecx,0x57796c4e
  4054ea:	sub    esi,DWORD PTR [esi-0x1c]
  4054ed:	icebp  
  4054ee:	(bad)  
  4054ef:	(bad)  
  4054f0:	jo     0x405501
  4054f2:	mov    al,ds:0x19464343
  4054f7:	jmp    0x405490
  4054f9:	jmp    0x7e9b2e79
  4054fe:	xchg   edx,eax
  4054ff:	inc    ecx
  405500:	add    BYTE PTR [eax],al
  405502:	mov    fs,WORD PTR [ecx+0x364582f7]
  405508:	cmp    eax,0x57cec10a
  40550d:	sbb    BYTE PTR [esi+edi*2],ch
  405510:	mov    dh,0x60
  405512:	mov    eax,0xf800d396
  405517:	sti    
  405518:	into   
  405519:	push   0x60
  40551b:	ret    
  40551c:	test   al,0xf
  40551e:	xor    dh,0x6
  405521:	loope  0x40551d
  405523:	retf   0x8460
  405526:	xchg   edx,eax
  405527:	and    eax,0x915ad270
  40552c:	push   ss
  40552d:	mov    bh,0x48
  40552f:	sbb    al,0xb8
  405531:	pop    ecx
  405532:	rcr    BYTE PTR [eax-0x34c2c322],0xe7
  405539:	test   ebp,esp
  40553b:	repz jg 0x40551e
  40553e:	mov    eax,0xfd6f0e2f
  405544:	inc    edi
  405545:	imul   eax,DWORD PTR [edi],0x3
  405548:	cpuid  
  40554a:	(bad)  
  40554b:	ss push 0xc68d9dc7
  405551:	sub    ebp,esp
  405553:	sub    eax,0xe4684ca0
  405558:	xchg   edi,eax
  405559:	cmc    
  40555a:	rcr    BYTE PTR [eax-0x1],1
  40555d:	nop
  40555e:	adc    ch,ah
  405560:	dec    edi
  405561:	jle    0x4055cd
  405563:	push   ebx
  405564:	aaa    
  405565:	sbb    eax,DWORD PTR [eax]
  405567:	add    BYTE PTR [edx+0xa4d272e],al
  40556d:	or     eax,DWORD PTR [eax+0x28]
  405570:	sbb    BYTE PTR [esi],dh
  405572:	out    dx,eax
  405573:	(bad)  
  405574:	jo     0x40557b
  405576:	mov    BYTE PTR [ebx+0x1ab050ed],ah
  40557c:	adc    eax,0x177fd6ec
  405581:	pop    ebx
  405582:	js     0x405515
  405584:	lahf   
  405585:	jecxz  0x4055a5
  405587:	hlt    
  405588:	imul   DWORD PTR [ebx+0x12bf03f6]
  40558e:	nop
  40558f:	data16 aad 0x11
  405592:	out    0x3e,al
  405594:	dec    ebp
  405595:	or     dh,BYTE PTR [ebx+0x58]
  405598:	sub    BYTE PTR [edi],cl
  40559a:	aas    
  40559b:	pusha  
  40559c:	test   eax,0xc4079b9e
  4055a1:	mov    ah,0x48
  4055a3:	test   al,0x22
  4055a5:	test   DWORD PTR [edi+ecx*8-0x208e9ac1],edx
  4055ac:	add    ebp,esp
  4055ae:	in     eax,0xb7
  4055b0:	pop    esp
  4055b1:	iret   
  4055b2:	jp     0x4055cb
  4055b4:	jp     0x4055c4
  4055b6:	fisubr WORD PTR [edi-0x29]
  4055b9:	xchg   ecx,eax
  4055ba:	xchg   ebx,eax
  4055bb:	dec    eax
  4055bc:	mov    ds,WORD PTR [ecx+0x47]
  4055bf:	das    
  4055c0:	stos   DWORD PTR es:[edi],eax
  4055c1:	ja     0x40555f
  4055c3:	add    BYTE PTR ds:0x20e74100,0xb8
  4055ca:	(bad)  
  4055cb:	lahf   
  4055cc:	add    BYTE PTR [eax],al
  4055ce:	push   ecx
  4055cf:	iret   
  4055d0:	add    edi,0x67cce1ac
  4055d6:	retf   0x89b9
  4055d9:	(bad)  
  4055db:	aas    
  4055dc:	cmp    BYTE PTR [edi],dh
  4055de:	sahf   
  4055df:	outs   dx,BYTE PTR ds:[esi]
  4055e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055e1:	push   eax
  4055e2:	cmp    esp,DWORD PTR [edi+ebp*1-0x1]
  4055e6:	adc    eax,0xb098aad5
  4055eb:	xor    al,0x8a
  4055ed:	mov    dh,ah
  4055ef:	xchg   esp,eax
  4055f0:	into   
  4055f1:	out    dx,al
  4055f2:	ret    
  4055f3:	sahf   
  4055f4:	add    DWORD PTR [eax+0x5d],0x3826d53e
  4055fb:	shr    DWORD PTR [edi+ebx*1+0x783029f9],0x94
  405603:	daa    
  405604:	mov    ds:0x374f72d7,eax
  405609:	mov    al,0xf
  40560b:	or     esp,edx
  40560d:	cmp    ebp,DWORD PTR [ebx-0x30]
  405610:	xor    ebx,DWORD PTR [edi+0x342e2b04]
  405616:	mov    ds:0xbca8ce59,eax
  40561b:	mov    dh,0x4b
  40561d:	fnstenv [ebp-0x6c825ce3]
  405623:	add    ah,BYTE PTR [ecx+0x39a3edd2]
  405629:	xchg   BYTE PTR [ebx-0x79],cl
  40562c:	shl    DWORD PTR [esi+0x3379b553],1
  405632:	add    BYTE PTR [eax],al
  405634:	in     al,dx
  405635:	pop    ecx
  405636:	imul   esp,DWORD PTR [eax+0x3bd32c8b],0xffffffa4
  40563d:	iret   
  40563e:	dec    ebp
  40563f:	test   esp,ebx
  405641:	xchg   dh,bl
  405643:	sar    BYTE PTR [eax],1
  405645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405646:	in     al,0x7d
  405648:	xchg   esp,eax
  405649:	add    dh,BYTE PTR [edx+ebx*8]
  40564c:	jo     0x40566b
  40564e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564f:	inc    esp
  405650:	mov    ah,0x66
  405652:	in     al,0x97
  405654:	push   ebx
  405655:	leave  
  405656:	dec    BYTE PTR [edx-0x14]
  405659:	fidivr DWORD PTR [ebp-0x71]
  40565c:	or     eax,DWORD PTR [eax-0x5]
  40565f:	loope  0x405669
  405661:	xchg   edi,eax
  405662:	jae    0x4056da
  405664:	in     al,0x73
  405666:	push   ecx
  405667:	jmp    0x6d4968ac
  40566c:	pushf  
  40566d:	in     eax,dx
  40566e:	mov    al,ds:0x293f9c8f
  405673:	dec    esp
  405674:	cmp    ebx,esp
  405676:	cmp    dl,BYTE PTR [edi+0x4283c9d4]
  40567c:	repz fs (bad) 
  40567f:	ins    DWORD PTR es:[edi],dx
  405680:	mov    bl,0xed
  405682:	lods   eax,DWORD PTR ds:[esi]
  405683:	jmp    0x94406795
  405688:	leave  
  405689:	jae    0x405622
  40568b:	add    al,0x34
  40568d:	call   0xd404:0xf0fc34f2
  405694:	jns    0x4056a2
  405696:	pusha  
  405697:	into   
  405698:	add    BYTE PTR [eax],al
  40569a:	hlt    
  40569b:	mov    eax,0x54632e8e
  4056a0:	jmp    0x40564d
  4056a2:	fistp  QWORD PTR [ebx+0x52]
  4056a5:	inc    ebx
  4056a6:	call   0xd943:0xd94137a0
  4056ad:	cdq    
  4056ae:	mov    ds:0x2971bbe8,al
  4056b3:	fldl2t 
  4056b5:	fnstenv [ebp+0x30cb8f33]
  4056bb:	xchg   ecx,eax
  4056bc:	popa   
  4056bd:	jae    0x40566b
  4056bf:	imul   eax,DWORD PTR [esi+ebp*8],0x2b
  4056c3:	fs mov ebp,0xd8c8d73e
  4056c9:	inc    esp
  4056ca:	adc    bl,BYTE PTR [esi+esi*1]
  4056cd:	aam    0xce
  4056cf:	add    BYTE PTR [ebx+0x4],dl
  4056d2:	(bad)  
  4056d3:	cmp    ebx,DWORD PTR [edx-0x11f6f7c]
  4056d9:	sahf   
  4056da:	mov    ebp,0x59de1183
  4056df:	test   al,0x74
  4056e1:	pop    ebx
  4056e2:	xchg   BYTE PTR [ecx+0x4bfd13cd],dh
  4056e8:	test   al,0xf1
  4056ea:	jg     0x4056e5
  4056ec:	inc    ebp
  4056ed:	imul   ebx,DWORD PTR [ebx],0x30412314
  4056f3:	and    esi,DWORD PTR [ebp-0x77]
  4056f6:	int3   
  4056f7:	or     BYTE PTR [eax],dl
  4056f9:	fwait
  4056fa:	cdq    
  4056fb:	pop    ebx
  4056fc:	(bad)  
  4056fd:	and    eax,DWORD PTR [eax]
  4056ff:	add    ch,al
  405701:	rcr    BYTE PTR [ebx-0xed58d00],0x22
  405708:	fisttp DWORD PTR [esi+0x24494795]
  40570e:	cmp    DWORD PTR [ecx-0x33a2688f],ebp
  405714:	xchg   edx,eax
  405715:	dec    eax
  405716:	out    dx,al
  405717:	push   es
  405718:	jp     0x40578e
  40571a:	mov    DWORD PTR [ebx+0x68],esp
  40571d:	inc    ecx
  40571e:	lea    edx,es:[eax+0x15e8417d]
  405725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405726:	js     0x405779
  405728:	mov    ebp,0xdf341e12
  40572d:	lahf   
  40572e:	mov    al,0xda
  405730:	pop    ss
  405731:	sbb    edx,esi
  405733:	mov    edi,0xe9c67c8f
  405738:	out    0x40,eax
  40573a:	mov    eax,ds:0xe75e58c
  40573f:	bound  ecx,QWORD PTR [ebp-0x67f896b7]
  405745:	clc    
  405746:	push   eax
  405747:	mov    esi,0xdb357530
  40574c:	and    al,BYTE PTR [eax]
  40574e:	cdq    
  40574f:	xor    eax,0x50fd6b7a
  405754:	loop   0x405797
  405756:	mov    ecx,0xdea62a99
  40575b:	cld    
  40575c:	cmp    BYTE PTR [ebx],bh
  40575e:	jno    0x405772
  405760:	shr    BYTE PTR [esi+0x7716],0x65
  405767:	fs sub eax,0x4907adce
  40576d:	stos   DWORD PTR es:[edi],eax
  40576e:	outs   dx,DWORD PTR ds:[esi]
  40576f:	pop    esp
  405770:	in     eax,0x45
  405772:	pop    es
  405773:	xchg   ecx,eax
  405774:	and    DWORD PTR [eax],0x7691addf
  40577a:	xchg   edi,eax
  40577b:	cmp    esi,esi
  40577d:	adc    edx,ebp
  40577f:	test   eax,0x2258599c
  405784:	cmp    DWORD PTR [esi],edi
  405786:	ins    DWORD PTR es:[edi],dx
  405787:	lahf   
  405788:	test   DWORD PTR [esi],eax
  40578a:	hlt    
  40578b:	push   ds
  40578c:	shl    BYTE PTR [eax-0x67],cl
  40578f:	cmp    BYTE PTR [edi-0x32],bh
  405792:	outs   dx,DWORD PTR ds:[esi]
  405793:	stc    
  405794:	fldcw  WORD PTR [eax+0x4112c922]
  40579a:	in     eax,dx
  40579b:	fadd   st,st(6)
  40579d:	es sbb dh,0x19
  4057a1:	mov    DWORD PTR [esi-0x51],esp
  4057a4:	mov    ebp,0xf12a2bee
  4057a9:	aad    0x7a
  4057ab:	push   ecx
  4057ac:	fs mov cl,0xcf
  4057af:	ret    
  4057b0:	neg    DWORD PTR ds:0x795c2bf1
  4057b6:	push   esp
  4057b7:	test   BYTE PTR [esi+0x19dc0269],bh
  4057bd:	push   cs
  4057be:	daa    
  4057bf:	fcmovb st,st(4)
  4057c1:	mov    eax,ds:0xc6117179
  4057c6:	or     al,0xef
  4057c8:	pop    ebx
  4057c9:	inc    BYTE PTR [eax]
  4057cb:	add    BYTE PTR [ebp+0x4e],dl
  4057ce:	clc    
  4057cf:	cwde   
  4057d0:	mov    eax,0xce3663c8
  4057d5:	call   0xf983a8c8
  4057da:	sub    BYTE PTR [esi],dl
  4057dc:	jb     0x405806
  4057de:	scas   al,BYTE PTR es:[edi]
  4057df:	jno    0x405778
  4057e1:	push   cs
  4057e2:	and    ebx,esi
  4057e4:	jmp    0x1cfa0de7
  4057e9:	jp     0x4057f2
  4057eb:	add    DWORD PTR [ebp+0x68e64b01],0xfe490093
  4057f5:	pop    ebx
  4057f6:	push   esp
  4057f7:	ror    DWORD PTR cs:[ecx],cl
  4057fa:	stos   BYTE PTR es:[edi],al
  4057fb:	mov    ch,0xab
  4057fd:	shl    DWORD PTR [ecx],1
  4057ff:	and    esp,edi
  405801:	add    BYTE PTR ss:[esi+0x2ab84c63],ch
  405808:	fs scas eax,DWORD PTR es:[edi]
  40580a:	xor    eax,0x75287c53
  40580f:	call   DWORD PTR [eax]
  405811:	add    ecx,DWORD PTR [edi+0xf9db44c]
  405817:	or     bl,bl
  405819:	jp     0x405804
  40581b:	add    edx,ebp
  40581d:	or     ecx,ebp
  40581f:	add    edx,ebp
  405821:	or     ecx,ebp
  405823:	add    edx,ebp
  405825:	or     ecx,ebp
  405827:	add    edx,ebp
  405829:	or     ecx,ebp
  40582b:	add    edx,ebp
  40582d:	or     ecx,ebp
  40582f:	add    eax,DWORD PTR [eax]
  405831:	add    ch,dl
  405833:	or     ecx,ebp
  405835:	add    edx,ebp
  405837:	or     ecx,ebp
  405839:	add    edx,ebp
  40583b:	or     eax,ebp
  40583d:	add    edx,ebp
  40583f:	or     eax,ebp
  405841:	add    edx,ebp
  405843:	or     eax,ebp
  405845:	add    edx,ebp
  405847:	or     eax,ebp
  405849:	add    edx,ebp
  40584b:	or     ebx,ebp
  40584d:	add    edx,ebp
  40584f:	or     ebx,ebp
  405851:	add    edx,ebp
  405853:	or     ebx,ebp
  405855:	add    edx,ebp
  405857:	or     ebx,ebp
  405859:	add    edx,ebp
  40585b:	or     edx,ebp
  40585d:	add    edx,ebp
  40585f:	or     edx,ebp
  405861:	add    edx,ebp
  405863:	or     edx,ebp
  405865:	add    edx,ebp
  405867:	or     edx,ebp
  405869:	add    edx,ebp
  40586b:	or     ebp,ebp
  40586d:	add    edx,ebp
  40586f:	or     ebp,esp
  405871:	add    edx,ebp
  405873:	or     DWORD PTR [eax],eax
  405875:	in     eax,dx
  405876:	(bad)  
  405877:	or     DWORD PTR [eax],eax
  405879:	in     eax,0xd6
  40587b:	or     DWORD PTR [eax],eax
  40587d:	in     al,dx
  40587e:	(bad)  
  40587f:	or     DWORD PTR [eax],eax
  405881:	in     al,0xd6
  405883:	or     DWORD PTR [eax],eax
  405885:	in     al,dx
  405886:	(bad)  
  405887:	or     DWORD PTR [eax],eax
  405889:	in     al,0xd6
  40588b:	or     DWORD PTR [eax],eax
  40588d:	jmp    0xd9406268
  405892:	inc    edi
  405893:	sbb    DWORD PTR [eax],eax
  405895:	loope  0x405897
  405897:	add    ch,cl
  405899:	adc    BYTE PTR [esi],al
  40589b:	jecxz  0x405878
  40589d:	adc    al,BYTE PTR [esi*8-0x10fdeb2f]
  4058a4:	xlat   BYTE PTR ds:[ebx]
  4058a5:	push   ss
  4058a6:	add    cl,ch
  4058a8:	(bad)  
  4058a9:	or     DWORD PTR [eax],eax
  4058ab:	jmp    0xe9406286
  4058b0:	(bad)  
  4058b1:	or     DWORD PTR [eax],eax
  4058b3:	jmp    0xe840628e
  4058b8:	(bad)  
  4058b9:	or     DWORD PTR [eax],eax
  4058bb:	call   0xeb406296
  4058c0:	(bad)  
  4058c1:	or     DWORD PTR [eax],eax
  4058c3:	jmp    0x40589b
  4058c5:	or     DWORD PTR [eax],eax
  4058c7:	jmp    0x9d6:0xea0009d6
  4058ce:	add    ch,ch
  4058d0:	(bad)  
  4058d1:	or     DWORD PTR [eax],eax
  4058d3:	in     eax,0xd6
  4058d5:	or     DWORD PTR [eax],eax
  4058d7:	in     al,dx
  4058d8:	(bad)  
  4058d9:	or     DWORD PTR [eax],eax
  4058db:	in     al,0xd6
  4058dd:	or     DWORD PTR [eax],eax
  4058df:	out    dx,eax
  4058e0:	(bad)  
  4058e1:	or     DWORD PTR [eax],eax
  4058e3:	out    0xd6,eax
  4058e5:	or     DWORD PTR [eax],eax
  4058e7:	out    dx,al
  4058e8:	(bad)  
  4058e9:	or     DWORD PTR [eax],eax
  4058eb:	out    0xd6,al
  4058ed:	or     DWORD PTR [eax],eax
  4058ef:	add    BYTE PTR [edx+ecx*1+0xa840000],al
  4058f6:	add    BYTE PTR [eax],al
  4058f8:	jne    0x405904
  4058fa:	add    BYTE PTR [eax],al
  4058fc:	add    BYTE PTR [eax],al
  4058fe:	jne    0x40590a
  405900:	add    BYTE PTR [eax],al
  405902:	data16 or al,BYTE PTR [eax]
  405905:	add    BYTE PTR [esi+0xa],ah
  405908:	add    BYTE PTR [eax],al
  40590a:	ja     0x405916
  40590c:	add    BYTE PTR [eax],al
  40590e:	aaa    
  40590f:	or     al,BYTE PTR [eax]
  405911:	add    BYTE PTR [eax+0xa],al
  405914:	add    BYTE PTR [eax],al
  405916:	xor    BYTE PTR [edx],cl
  405918:	add    BYTE PTR [eax],al
  40591a:	xor    DWORD PTR [edx],ecx
  40591c:	add    BYTE PTR [eax],al
  40591e:	adc    DWORD PTR [edx],ecx
  405920:	add    BYTE PTR [eax],al
  405922:	cmp    al,0xa
  405924:	add    BYTE PTR [eax],al
  405926:	sub    al,0xa
  405928:	add    BYTE PTR [eax],al
  40592a:	sub    al,0xa
  40592c:	add    BYTE PTR [eax],al
  40592e:	cld    
  40592f:	or     DWORD PTR [eax],eax
  405931:	add    ah,bh
  405933:	or     DWORD PTR [eax],eax
  405935:	add    ah,ch
  405937:	or     DWORD PTR [eax],eax
  405939:	add    ah,ch
  40593b:	or     DWORD PTR [eax],eax
  40593d:	add    ah,bh
  40593f:	or     DWORD PTR [eax],eax
  405941:	add    ah,bh
  405943:	or     DWORD PTR [eax],eax
  405945:	add    ah,ch
  405947:	or     DWORD PTR [eax],eax
  405949:	add    ah,ch
  40594b:	or     DWORD PTR [eax],eax
  40594d:	add    BYTE PTR [ecx+ecx*1+0x9bc0000],bh
  405954:	add    BYTE PTR [eax],al
  405956:	lods   al,BYTE PTR ds:[esi]
  405957:	or     DWORD PTR [eax],eax
  405959:	add    BYTE PTR [ecx+ecx*1+0x9bc0000],ch
  405960:	add    BYTE PTR [eax],al
  405962:	add    BYTE PTR [eax],al
  405964:	mov    esi,0xaf000009
  405969:	or     DWORD PTR [eax],eax
  40596b:	add    ch,dl
  40596d:	jae    0x405972
  40596f:	add    ch,dl
  405971:	jb     0x405976
  405973:	add    ch,dl
  405975:	jle    0x40597a
  405977:	or     ch,dl
  405979:	test   BYTE PTR [ebx],0x8
  40597c:	aad    0xae
  40597e:	add    ecx,DWORD PTR [eax]
  405980:	aad    0x26
  405982:	add    al,0x8
  405984:	aad    0x5e
  405986:	add    ecx,DWORD PTR [eax]
  405988:	aad    0xd6
  40598a:	add    ecx,DWORD PTR [eax]
  40598c:	aad    0x8e
  40598e:	add    ecx,DWORD PTR [eax]
  405990:	aad    0x86
  405992:	add    ecx,DWORD PTR [eax]
  405994:	aad    0x6e
  405996:	add    ecx,DWORD PTR [eax]
  405998:	aad    0xe6
  40599a:	add    ecx,DWORD PTR [eax]
  40599c:	aad    0x9e
  40599e:	add    ecx,DWORD PTR [eax]
  4059a0:	aad    0x16
  4059a2:	add    al,0x8
  4059a4:	aad    0x2e
  4059a6:	add    al,0x8
  4059a8:	aad    0xa6
  4059aa:	add    ecx,DWORD PTR [eax]
  4059ac:	aad    0xde
  4059ae:	add    ecx,DWORD PTR [eax]
  4059b0:	aad    0x56
  4059b2:	add    ecx,DWORD PTR [eax]
  4059b4:	aad    0x70
  4059b6:	add    ecx,DWORD PTR [eax]
  4059b8:	aad    0xf0
  4059ba:	add    cl,BYTE PTR [eax]
  4059bc:	aad    0x30
  4059be:	add    al,0x8
  4059c0:	aad    0xb0
  4059c2:	add    ecx,DWORD PTR [eax]
  4059c4:	aad    0x50
  4059c6:	add    ecx,DWORD PTR [eax]
  4059c8:	add    BYTE PTR [eax],al
  4059ca:	aad    0xd0
  4059cc:	add    cl,BYTE PTR [eax]
  4059ce:	aad    0x10
  4059d0:	add    al,0x8
  4059d2:	aad    0x90
  4059d4:	add    ecx,DWORD PTR [eax]
  4059d6:	aad    0x60
  4059d8:	add    ecx,DWORD PTR [eax]
  4059da:	aad    0xe0
  4059dc:	add    cl,BYTE PTR [eax]
  4059de:	aad    0x20
  4059e0:	add    al,0x8
  4059e2:	aad    0xa0
  4059e4:	add    ecx,DWORD PTR [eax]
  4059e6:	aad    0x9
  4059e8:	sbb    eax,DWORD PTR [ecx*8-0x32fc64f7]
  4059ef:	or     ebx,ebx
  4059f1:	add    ebx,ebp
  4059f3:	or     DWORD PTR [ebx+0x3],ebx
  4059f6:	fisttp QWORD PTR [ecx]
  4059f8:	repz add ecx,ebp
  4059fb:	or     DWORD PTR [ebx+0x3],esi
  4059fe:	int    0x9
  405a00:	mov    ds:0x2309dd03,eax
  405a05:	add    ebx,ebp
  405a07:	or     ebx,edx
  405a09:	add    ecx,ebp
  405a0b:	or     DWORD PTR [ebx+0x3],edx
  405a0e:	int    0x9
  405a10:	add    DWORD PTR [ebx],0xffffffdd
  405a13:	or     DWORD PTR [ebx],eax
  405a15:	add    ebx,ebp
  405a17:	or     ebx,esp
  405a19:	add    ecx,ebp
  405a1b:	or     DWORD PTR [ebx+0x3],esp
  405a1e:	int    0x9
  405a20:	xchg   ebx,eax
  405a21:	add    ebx,ebp
  405a23:	or     DWORD PTR [ebx],edx
  405a25:	add    ebx,ebp
  405a27:	or     DWORD PTR [ebx],esp
  405a29:	add    al,0xcd
  405a2b:	or     DWORD PTR [ebx-0x32fffffc],esp
  405a31:	or     DWORD PTR [ebx+0x4],edx
  405a34:	fisttp QWORD PTR [ecx]
  405a36:	rol    DWORD PTR [ebx*8-0x32fc10f7],cl
  405a3d:	or     DWORD PTR [edi+0x4],esp
  405a40:	int    0x9
  405a42:	das    
  405a43:	add    al,0xdd
  405a45:	or     DWORD PTR [edi-0x30f622fc],esp
  405a4b:	add    ecx,ebp
  405a4d:	or     DWORD PTR [edi+0x4],eax
  405a50:	int    0x9
  405a52:	(bad)  
  405a54:	fisttp QWORD PTR [ecx]
  405a56:	xchg   DWORD PTR [ebx*8-0x32fc20f7],eax
  405a5d:	or     DWORD PTR [edi+0x4],edx
  405a60:	int    0x9
  405a62:	add    BYTE PTR [edi],bl
  405a64:	fst    DWORD PTR [ecx]
  405a66:	add    BYTE PTR [edi+0x1f0011d1],dl
  405a6c:	fst    DWORD PTR [ecx]
  405a6e:	add    BYTE PTR [edi-0x20ffee2f],dl
  405a74:	(bad)  
  405a75:	adc    DWORD PTR [eax],eax
  405a77:	push   edi
  405a78:	rcl    DWORD PTR [ecx],1
  405a7a:	add    bh,dh
  405a7c:	(bad)  
  405a7d:	adc    DWORD PTR [eax],eax
  405a7f:	outs   dx,DWORD PTR ds:[esi]
  405a80:	rcl    DWORD PTR [ecx],1
  405a82:	add    BYTE PTR [edi+0x1f0011d6],ah
  405a88:	rcl    DWORD PTR [ecx],1
  405a8a:	add    bh,dl
  405a8c:	(bad)  
  405a8d:	adc    DWORD PTR [eax],eax
  405a8f:	dec    edi
  405a90:	rcl    DWORD PTR [ecx],1
  405a92:	add    BYTE PTR [edi+0x11d60000],al
  405a98:	add    bh,bh
  405a9a:	(bad)  
  405a9b:	adc    DWORD PTR [eax],eax
  405a9d:	out    0xd6,eax
  405a9f:	adc    DWORD PTR [eax],eax
  405aa1:	pop    edi
  405aa2:	rcl    DWORD PTR [ecx],1
  405aa4:	add    BYTE PTR [edi+0xf0011d6],dl
  405aaa:	rcl    DWORD PTR [ecx],1
  405aac:	add    BYTE PTR [edi],ah
  405aae:	fst    DWORD PTR [ecx]
  405ab0:	add    BYTE PTR [edi+0x570011d6],bl
  405ab6:	fst    DWORD PTR [ecx]
  405ab8:	add    bh,cl
  405aba:	(bad)  
  405abb:	adc    DWORD PTR [eax],eax
  405abd:	call   0x68406c98
  405ac2:	(bad)  
  405ac3:	adc    DWORD PTR [eax],eax
  405ac5:	sub    cl,bl
  405ac7:	adc    DWORD PTR [eax],eax
  405ac9:	test   al,0xd6
  405acb:	adc    DWORD PTR [eax],eax
  405acd:	enter  0x11d6,0x0
  405ad1:	dec    eax
  405ad2:	(bad)  
  405ad3:	adc    DWORD PTR [eax],eax
  405ad5:	or     cl,bl
  405ad7:	adc    DWORD PTR [eax],eax
  405ad9:	mov    dh,dl
  405adb:	adc    DWORD PTR [eax],eax
  405add:	add    BYTE PTR [ebp+0x1d000806],bl
  405ae3:	pop    es
  405ae4:	or     BYTE PTR [eax],al
  405ae6:	int    0xd
  405ae8:	or     BYTE PTR [eax],al
  405aea:	dec    ebp
  405aeb:	push   es
  405aec:	or     BYTE PTR [eax],al
  405aee:	mov    ebp,0x3d00080d
  405af3:	push   es
  405af4:	or     BYTE PTR [eax],al
  405af6:	lods   eax,DWORD PTR ds:[esi]
  405af7:	push   es
  405af8:	or     BYTE PTR [eax],al
  405afa:	add    BYTE PTR [eax],al
  405afc:	sub    eax,0x85000807
  405b01:	push   es
  405b02:	or     BYTE PTR [eax],al
  405b04:	add    eax,0x35000807
  405b09:	push   es
  405b0a:	or     BYTE PTR [eax],al
  405b0c:	mov    ch,0x6
  405b0e:	or     BYTE PTR [eax],al
  405b10:	test   DWORD PTR [esi],eax
  405b12:	or     BYTE PTR [eax],al
  405b14:	add    eax,0x55000807
  405b19:	push   es
  405b1a:	or     BYTE PTR [eax],al
  405b1c:	aad    0x6
  405b1e:	or     BYTE PTR [eax],al
  405b20:	xor    eax,0xb5000806
  405b25:	push   es
  405b26:	or     BYTE PTR [eax],al
  405b28:	inc    ebp
  405b29:	push   es
  405b2a:	or     BYTE PTR [eax],al
  405b2c:	lds    eax,FWORD PTR [esi]
  405b2e:	or     BYTE PTR [eax],al
  405b30:	cmc    
  405b31:	or     eax,0xd750008
  405b36:	or     BYTE PTR [eax],al
  405b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b39:	or     eax,0xd250008
  405b3e:	or     BYTE PTR [eax],al
  405b40:	icebp  
  405b41:	add    eax,0xd710008
  405b46:	or     BYTE PTR [eax],al
  405b48:	ror    DWORD PTR ds:0xd310008,0x8
  405b4f:	add    BYTE PTR [ecx],dl
  405b51:	push   es
  405b52:	or     BYTE PTR [eax],al
  405b54:	xchg   ecx,eax
  405b55:	or     eax,0xdd50008
  405b5a:	add    al,0x8
  405b5c:	aad    0x85
  405b5e:	add    al,0x8
  405b60:	add    BYTE PTR [eax],al
  405b62:	aad    0x5d
  405b64:	add    ecx,DWORD PTR [eax]
  405b66:	aad    0xd5
  405b68:	add    ecx,DWORD PTR [eax]
  405b6a:	aad    0x1d
  405b6c:	add    al,0x8
  405b6e:	aad    0x95
  405b70:	add    al,0x8
  405b72:	aad    0x1d
  405b74:	add    al,0x8
  405b76:	aad    0x95
  405b78:	add    al,0x8
  405b7a:	aad    0x5d
  405b7c:	add    ecx,DWORD PTR [eax]
  405b7e:	aad    0xd5
  405b80:	add    ecx,DWORD PTR [eax]
  405b82:	aad    0x75
  405b84:	add    ecx,DWORD PTR [eax]
  405b86:	aad    0xed
  405b88:	add    ecx,DWORD PTR [eax]
  405b8a:	aad    0xa5
  405b8c:	add    ecx,DWORD PTR [eax]
  405b8e:	aad    0x1d
  405b90:	add    al,0x8
  405b92:	aad    0x55
  405b94:	add    ecx,DWORD PTR [eax]
  405b96:	aad    0xcd
  405b98:	add    ecx,DWORD PTR [eax]
  405b9a:	aad    0x85
  405b9c:	add    ecx,DWORD PTR [eax]
  405b9e:	aad    0x7d
  405ba0:	add    ecx,DWORD PTR [eax]
  405ba2:	aad    0x65
  405ba4:	add    ecx,DWORD PTR [eax]
  405ba6:	aad    0xdd
  405ba8:	add    ecx,DWORD PTR [eax]
  405baa:	aad    0x95
  405bac:	add    ecx,DWORD PTR [eax]
  405bae:	aad    0xd
  405bb0:	add    al,0x8
  405bb2:	aad    0x25
  405bb4:	add    al,0x8
  405bb6:	aad    0x9d
  405bb8:	add    ecx,DWORD PTR [eax]
  405bba:	aad    0xd5
  405bbc:	add    ecx,DWORD PTR [eax]
  405bbe:	aad    0x4d
  405bc0:	add    ecx,DWORD PTR [eax]
  405bc2:	aad    0x63
  405bc4:	add    ecx,DWORD PTR [ecx]
  405bc6:	add    BYTE PTR [eax],al
  405bc8:	aad    0x63
  405bca:	add    al,0x9
  405bcc:	aad    0xe3
  405bce:	add    cl,BYTE PTR [ecx]
  405bd0:	aad    0xe3
  405bd2:	add    ecx,DWORD PTR [ecx]
  405bd4:	aad    0x9
  405bd6:	cmp    al,BYTE PTR [esp+ecx*8]
  405bd9:	or     DWORD PTR [edx],edi
  405bdb:	add    eax,0x3ba09dc
  405be0:	fmul   QWORD PTR [ecx]
  405be2:	mov    edx,0xba09cc04
  405be7:	add    ecx,esp
  405be9:	or     DWORD PTR [edx+0x3a09dc04],edi
  405bef:	add    ebx,esp
  405bf1:	or     DWORD PTR [edx],edi
  405bf3:	add    al,0xcc
  405bf5:	or     edx,ebx
  405bf7:	add    ecx,esp
  405bf9:	or     edx,ebx
  405bfb:	add    al,0xdc
  405bfd:	or     DWORD PTR [edx+0x3],ebx
  405c00:	fmul   QWORD PTR [ecx]
  405c02:	pop    edx
  405c03:	add    al,0xcc
  405c05:	or     edx,esi
  405c07:	add    ecx,esp
  405c09:	or     edx,esi
  405c0b:	add    al,0xdc
  405c0d:	or     DWORD PTR [edx+0x3],esp
  405c10:	fmul   QWORD PTR [ecx]
  405c12:	bound  eax,QWORD PTR [esp+ecx*8]
  405c15:	or     DWORD PTR [edx-0x4df633fd],esi
  405c1b:	add    al,0xdc
  405c1d:	or     DWORD PTR [edx],esp
  405c1f:	add    ebx,esp
  405c21:	or     DWORD PTR [edx],esp
  405c23:	add    al,0xcc
  405c25:	or     edx,edx
  405c27:	add    ecx,esp
  405c29:	or     edx,edx
  405c2b:	add    al,0x0
  405c2d:	add    ah,bl
  405c2f:	or     DWORD PTR [edx+0x3],eax
  405c32:	fmul   QWORD PTR [ecx]
  405c34:	inc    edx
  405c35:	add    al,0xcc
  405c37:	or     DWORD PTR [edx+0x4],edx
  405c3a:	int3   
  405c3b:	or     DWORD PTR [edx+0x3],edx
  405c3e:	fmul   QWORD PTR [ecx]
  405c40:	ret    0xdc04
  405c43:	or     edx,eax
  405c45:	add    ecx,esp
  405c47:	or     edx,esp
  405c49:	add    ecx,esp
  405c4b:	or     edx,esp
  405c4d:	add    bl,ah
  405c4f:	or     DWORD PTR [eax],eax
  405c51:	push   edx
  405c52:	rcl    DWORD PTR [edx],1
  405c54:	add    BYTE PTR [edx-0x2a],dl
  405c57:	adc    al,BYTE PTR [eax]
  405c59:	inc    edx
  405c5a:	rcl    DWORD PTR [edx],1
  405c5c:	add    BYTE PTR [edx-0x2a],al
  405c5f:	adc    BYTE PTR [eax],al
  405c61:	mov    dl,0xd1
  405c63:	adc    BYTE PTR [eax],al
  405c65:	mov    dl,0xd6
  405c67:	adc    BYTE PTR [eax],al
  405c69:	ret    0x10d6
  405c6c:	add    dl,al
  405c6e:	xlat   BYTE PTR ds:[ebx]
  405c6f:	adc    BYTE PTR [eax],al
  405c71:	xor    dl,cl
  405c73:	adc    BYTE PTR [eax],al
  405c75:	xor    dl,dh
  405c77:	adc    BYTE PTR [eax],al
  405c79:	loop   0x405c51
  405c7b:	adc    BYTE PTR [eax],al
  405c7d:	loop   0x405c56
  405c7f:	adc    BYTE PTR [eax],al
  405c81:	push   edx
  405c82:	rcl    DWORD PTR [eax],1
  405c84:	add    BYTE PTR [edx-0x2a],dl
  405c87:	adc    BYTE PTR [eax],al
  405c89:	out    dx,al
  405c8a:	(bad)  
  405c8b:	adc    BYTE PTR [eax],al
  405c8d:	out    0xd7,al
  405c8f:	adc    BYTE PTR [eax],al
  405c91:	outs   dx,BYTE PTR ds:[esi]
  405c92:	add    BYTE PTR [eax],al
  405c94:	rcl    DWORD PTR [eax],1
  405c96:	add    BYTE PTR [esi-0x2a],ah
  405c99:	adc    BYTE PTR [eax],al
  405c9b:	scas   al,BYTE PTR es:[edi]
  405c9c:	(bad)  
  405c9d:	adc    BYTE PTR [eax],al
  405c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca0:	xlat   BYTE PTR ds:[ebx]
  405ca1:	adc    BYTE PTR [eax],al
  405ca3:	rcl    DWORD PTR cs:[eax],1
  405ca6:	add    BYTE PTR [esi],ah
  405ca8:	(bad)  
  405ca9:	adc    BYTE PTR [eax],al
  405cab:	into   
  405cac:	(bad)  
  405cad:	adc    BYTE PTR [eax],al
  405caf:	(bad)  
  405cb0:	xlat   BYTE PTR ds:[ebx]
  405cb1:	adc    BYTE PTR [eax],al
  405cb3:	dec    esi
  405cb4:	rcl    DWORD PTR [eax],1
  405cb6:	add    BYTE PTR [esi-0x2a],al
  405cb9:	adc    BYTE PTR [eax],al
  405cbb:	dec    esi
  405cbc:	rcl    DWORD PTR [eax],1
  405cbe:	add    BYTE PTR [esi-0x2a],al
  405cc1:	adc    BYTE PTR [eax],al
  405cc3:	into   
  405cc4:	(bad)  
  405cc5:	adc    BYTE PTR [eax],al
  405cc7:	(bad)  
  405cc8:	xlat   BYTE PTR ds:[ebx]
  405cc9:	adc    BYTE PTR [eax],al
  405ccb:	add    BYTE PTR [ebx],bl
  405ccd:	or     ecx,DWORD PTR [ecx]
  405ccf:	add    BYTE PTR [ebx],cl
  405cd1:	or     al,0x9
  405cd3:	add    BYTE PTR [ebx-0x74fff6f6],cl
  405cd9:	or     ecx,DWORD PTR [ecx]
  405cdb:	add    BYTE PTR [ebx+0xb000905],bl
  405ce1:	or     ecx,DWORD PTR [ecx]
  405ce3:	add    BYTE PTR [ebx-0x74fff6f6],cl
  405ce9:	or     ecx,DWORD PTR [ecx]
  405ceb:	add    BYTE PTR [ebx+0xa],bh
  405cee:	or     DWORD PTR [eax],eax
  405cf0:	imul   ecx,DWORD PTR [ebx],0x9
  405cf3:	add    bl,ch
  405cf5:	or     cl,BYTE PTR [ecx]
  405cf7:	add    BYTE PTR [eax],al
  405cf9:	add    bl,ch
  405cfb:	or     ecx,DWORD PTR [ecx]
  405cfd:	add    BYTE PTR [ebx+0xa],bh
  405d00:	or     DWORD PTR [eax],eax
  405d02:	stos   DWORD PTR es:[edi],eax
  405d03:	or     ecx,DWORD PTR [ecx]
  405d05:	add    BYTE PTR [ebx],ch
  405d07:	or     ecx,DWORD PTR [ecx]
  405d09:	add    BYTE PTR [ebx],ch
  405d0b:	or     al,0x9
  405d0d:	add    BYTE PTR [ebx-0x7cfff6f6],al
  405d13:	or     ecx,DWORD PTR [ecx]
  405d15:	add    bl,dh
  405d17:	or     cl,BYTE PTR [ecx]
  405d19:	add    BYTE PTR [ebx],al
  405d1b:	or     al,0x9
  405d1d:	add    BYTE PTR [ebx],ah
  405d1f:	or     cl,BYTE PTR [ecx]
  405d21:	add    BYTE PTR [ebx-0xcfff6f5],al
  405d27:	or     cl,BYTE PTR [ecx]
  405d29:	add    bl,ah
  405d2b:	or     ecx,DWORD PTR [ecx]
  405d2d:	add    BYTE PTR [ebx],ah
  405d2f:	or     cl,BYTE PTR [ecx]
  405d31:	add    BYTE PTR [ebx],ah
  405d33:	or     ecx,DWORD PTR [ecx]
  405d35:	add    BYTE PTR [ebx-0x1cfff6f6],dl
  405d3b:	or     ecx,DWORD PTR [ecx]
  405d3d:	add    BYTE PTR [ebx-0x5cfff6fb],al
  405d43:	add    al,0x9
  405d45:	add    ch,dl
  405d47:	inc    edi
  405d48:	add    al,0x9
  405d4a:	aad    0xbf
  405d4c:	add    eax,0x367d509
  405d51:	or     ebp,edx
  405d53:	pop    edi
  405d54:	add    al,0x9
  405d56:	aad    0xd7
  405d58:	add    ecx,DWORD PTR [ecx]
  405d5a:	aad    0xcf
  405d5c:	add    al,0x9
  405d5e:	add    BYTE PTR [eax],al
  405d60:	aad    0xc7
  405d62:	add    ecx,DWORD PTR [ecx]
  405d64:	aad    0x3b
  405d66:	add    eax,0x4b3d509
  405d6b:	or     ebp,edx
  405d6d:	stos   DWORD PTR es:[edi],eax
  405d6e:	add    eax,0x343d509
  405d73:	or     ebp,edx
  405d75:	mov    ebx,0x33d50904
  405d7a:	add    al,0x9
  405d7c:	aad    0x2b
  405d7e:	add    eax,0x363d509
  405d83:	or     ebp,edx
  405d85:	pop    ebx
  405d86:	add    al,0x9
  405d88:	aad    0xd3
  405d8a:	add    ecx,DWORD PTR [ecx]
  405d8c:	aad    0xcb
  405d8e:	add    al,0x9
  405d90:	aad    0x72
  405d92:	add    eax,DWORD PTR [edi]
  405d94:	aad    0xb2
  405d96:	add    eax,DWORD PTR [edi]
  405d98:	aad    0x12
  405d9a:	add    al,0x7
  405d9c:	aad    0x52
  405d9e:	add    eax,DWORD PTR [edi]
  405da0:	aad    0x82
  405da2:	add    eax,DWORD PTR [edi]
  405da4:	aad    0xc2
  405da6:	add    eax,DWORD PTR [edi]
  405da8:	aad    0x62
  405daa:	add    eax,DWORD PTR [edi]
  405dac:	aad    0xa2
  405dae:	add    eax,DWORD PTR [edi]
  405db0:	aad    0x7a
  405db2:	add    eax,DWORD PTR [edi]
  405db4:	aad    0xba
  405db6:	add    eax,DWORD PTR [edi]
  405db8:	aad    0x4a
  405dba:	add    eax,DWORD PTR [edi]
  405dbc:	aad    0x8a
  405dbe:	add    eax,DWORD PTR [edi]
  405dc0:	aad    0x9
  405dc2:	add    DWORD PTR [eax+eax*1],eax
  405dc5:	add    dl,bl
  405dc7:	or     DWORD PTR [ecx+0x4],eax
  405dca:	ror    BYTE PTR [ecx],cl
  405dcc:	adc    DWORD PTR [edx+ebx*8],eax
  405dcf:	or     DWORD PTR [ecx+0x4],edx
  405dd2:	ror    BYTE PTR [ecx],cl
  405dd4:	in     eax,dx
  405dd5:	add    ebx,edx
  405dd7:	or     DWORD PTR ds:0xd09d204,esp
  405ddd:	add    al,0xda
  405ddf:	or     DWORD PTR [ebp+0x4],eax
  405de2:	ror    BYTE PTR [ecx],cl
  405de4:	std    
  405de5:	add    ebx,edx
  405de7:	or     DWORD PTR ds:0xdd09d204,esi
  405ded:	add    ebx,edx
  405def:	or     DWORD PTR ds:0xea09d204,edx
  405df5:	add    ebx,ebp
  405df7:	or     DWORD PTR [edx+0x3],ebp
  405dfa:	fisttp QWORD PTR [ecx]
  405dfc:	sub    al,BYTE PTR [ecx*8-0x32fc55f7]
  405e03:	or     DWORD PTR [edx],ecx
  405e05:	add    al,0xdd
  405e07:	or     DWORD PTR [edx-0x35f622fd],ecx
  405e0d:	add    ecx,ebp
  405e0f:	or     DWORD PTR [edx+0x3],ecx
  405e12:	int    0x9
  405e14:	jmp    0xd94a361c
  405e19:	add    edx,eax
  405e1b:	or     ecx,esp
  405e1d:	add    ebx,eax
  405e1f:	or     ecx,edx
  405e21:	add    edx,eax
  405e23:	or     ebp,ebp
  405e25:	add    ebx,eax
  405e27:	or     ebp,esi
  405e29:	add    eax,DWORD PTR [eax]
  405e2b:	add    al,dl
  405e2d:	or     ebp,esp
  405e2f:	add    ebx,eax
  405e31:	or     ebp,ebp
  405e33:	add    edx,eax
  405e35:	or     ebx,ebp
  405e37:	add    ebx,eax
  405e39:	or     ebx,ebx
  405e3b:	add    edx,eax
  405e3d:	or     DWORD PTR [eax],eax
  405e3f:	jecxz  0x405e17
  405e41:	push   es
  405e42:	add    bl,dl
  405e44:	(bad)  
  405e45:	push   es
  405e46:	add    bh,ch
  405e48:	(bad)  
  405e49:	push   es
  405e4a:	add    bh,dh
  405e4c:	(bad)  
  405e4d:	push   es
  405e4e:	add    bh,ah
  405e50:	(bad)  
  405e51:	push   es
  405e52:	add    bh,ch
  405e54:	(bad)  
  405e55:	push   es
  405e56:	add    al,ch
  405e58:	(bad)  
  405e59:	push   es
  405e5a:	add    al,bl
  405e5c:	(bad)  
  405e5d:	push   es
  405e5e:	add    al,ah
  405e60:	(bad)  
  405e61:	push   es
  405e62:	add    al,dl
  405e64:	(bad)  
  405e65:	push   es
  405e66:	add    ah,ch
  405e68:	(bad)  
  405e69:	add    al,0x0
  405e6b:	hlt    
  405e6c:	(bad)  
  405e6d:	add    al,0x0
  405e6f:	in     al,0xd6
  405e71:	add    al,0x0
  405e73:	in     al,dx
  405e74:	(bad)  
  405e75:	add    al,0x0
  405e77:	jmp    0x4d6:0xda0004d6
  405e7e:	add    dl,ah
  405e80:	(bad)  
  405e81:	add    al,0x0
  405e83:	rcl    dh,cl
  405e85:	add    al,0x0
  405e87:	out    dx,al
  405e88:	(bad)  
  405e89:	add    al,0x0
  405e8b:	not    dh
  405e8d:	add    al,0x0
  405e8f:	jmp    0x8175e94
  405e94:	add    esp,ebp
  405e96:	jp     0x405e9e
  405e98:	add    eax,0x60570ef
  405e9d:	out    0x69,al
  405e9f:	add    al,0x7
  405ea1:	loope  0x405f01
  405ea3:	add    ecx,DWORD PTR [eax]
  405ea5:	loope  0x405f05
  405ea7:	add    ecx,DWORD PTR [eax]
  405ea9:	lock dec edi
  405eab:	adc    cl,BYTE PTR [ecx]
  405ead:	lock dec edi
  405eaf:	adc    cl,BYTE PTR [ecx]
  405eb1:	jecxz  0x405eef
  405eb3:	adc    DWORD PTR [edx],ecx
  405eb5:	jecxz  0x405ef3
  405eb7:	adc    DWORD PTR [edx],ecx
  405eb9:	add    BYTE PTR [esi],ah
  405ebb:	or     DWORD PTR [ecx],0x981260a
  405ec1:	or     dh,BYTE PTR [edi]
  405ec3:	or     BYTE PTR [edx],0xb
  405ec6:	aaa    
  405ec7:	or     BYTE PTR [edx],0xb
  405eca:	pop    es
  405ecb:	or     BYTE PTR [edx],0xb
  405ece:	pop    es
  405ecf:	or     BYTE PTR [edx],0xb
  405ed2:	clc    
  405ed3:	jb     0x405ee0
  405ed5:	or     al,0x18
  405ed7:	jae    0x405ee4
  405ed9:	or     al,0xe8
  405edb:	jb     0x405ee8
  405edd:	or     al,0xf8
  405edf:	jb     0x405eec
  405ee1:	or     al,0xf8
  405ee3:	jb     0x405ef0
  405ee5:	or     al,0xf8
  405ee7:	jb     0x405ef4
  405ee9:	or     al,0xc8
  405eeb:	jb     0x405ef8
  405eed:	or     al,0xb8
  405eef:	jb     0x405efc
  405ef1:	or     al,0xb9
  405ef3:	jae    0x405f01
  405ef5:	or     eax,0x73990000
  405efa:	or     al,0xd
  405efc:	test   eax,0xb90d0c73
  405f01:	jae    0x405f0f
  405f03:	or     eax,0xd0c73b9
  405f08:	jns    0x405f7d
  405f0a:	or     al,0xd
  405f0c:	mov    DWORD PTR [ebx+0xc],esi
  405f0f:	or     eax,0xd0c7379
  405f14:	jp     0x405f8a
  405f16:	or     eax,0xd749a0e
  405f1b:	push   cs
  405f1c:	push   0x74
  405f1e:	or     eax,0xd747a0e
  405f23:	push   cs
  405f24:	jp     0x405f9a
  405f26:	or     eax,0xd747a0e
  405f2b:	push   cs
  405f2c:	dec    edx
  405f2d:	je     0x405f3c
  405f2f:	push   cs
  405f30:	cmp    dh,BYTE PTR [ebp+ecx*1+0xe]
  405f34:	aad    0x62
  405f36:	cmc    
  405f37:	or     eax,0xdf55acb
  405f3c:	jecxz  0x405fb0
  405f3e:	cmc    
  405f3f:	or     eax,0xdf56adb
  405f44:	shl    DWORD PTR [edx-0xb],cl
  405f47:	or     eax,0xdf55acb
  405f4c:	jecxz  0x405fc0
  405f4e:	adc    DWORD PTR [esi],ecx
  405f50:	fld    TBYTE PTR [edx+0x11]
  405f53:	push   cs
  405f54:	shl    DWORD PTR [ebx+0x12],cl
  405f57:	bswap  edx
  405f59:	pop    ebx
  405f5a:	adc    cl,BYTE PTR [edi]
  405f5c:	add    BYTE PTR [eax],al
  405f5e:	loop   0x405fd3
  405f60:	adc    cl,BYTE PTR [edi]
  405f62:	fisubr DWORD PTR [ebx+0x12]
  405f65:	psrld  mm4,QWORD PTR [ebx+0x12]
  405f69:	bswap  edx
  405f6b:	pop    ebx
  405f6c:	adc    cl,BYTE PTR [edi]
  405f6e:	loop   0x405fef
  405f70:	adc    cl,BYTE PTR [edi]
  405f72:	fisub  DWORD PTR [edi+0x12]
  405f75:	psrld  mm5,QWORD PTR [edi+0x12]
  405f79:	bswap  edx
  405f7b:	push   edi
  405f7c:	adc    cl,BYTE PTR [edi]
  405f7e:	loop   0x405fff
  405f80:	adc    cl,BYTE PTR [edi]
  405f82:	fisub  DWORD PTR [edi+0x12]
  405f85:	psrld  mm5,QWORD PTR [edi+0x12]
  405f89:	bswap  edx
  405f8b:	push   edi
  405f8c:	adc    cl,BYTE PTR [edi]
  405f8e:	loop   0x40600f
  405f90:	adc    cl,BYTE PTR [edi]
  405f92:	fisub  DWORD PTR [edi+0x12]
  405f95:	psrld  mm4,QWORD PTR [edx+0x3]
  405f99:	adc    ah,ah
  405f9b:	je     0x405fb2
  405f9d:	adc    eax,esi
  405f9f:	push   esi
  405fa0:	pop    ss
  405fa1:	adc    al,0xc1
  405fa3:	pop    ebp
  405fa4:	sbb    BYTE PTR ds:0x161958c8,dl
  405faa:	ret    
  405fab:	pusha  
  405fac:	sbb    DWORD PTR [esi],edx
  405fae:	jmp    0x405fb9
  405fb0:	(bad)  
  405fb1:	sbb    ah,dl
  405fb3:	and    dh,dh
  405fb5:	sbb    ch,dl
  405fb7:	and    cl,dh
  405fb9:	sbb    ebx,ebp
  405fbb:	adc    ecx,esi
  405fbd:	sbb    ecx,ebp
  405fbf:	adc    ecx,esp
  405fc1:	sbb    eax,DWORD PTR [eax]
  405fc3:	add    ch,cl
  405fc5:	adc    ecx,esp
  405fc7:	sbb    edi,DWORD PTR [ebp-0x43e32fef]
  405fcd:	adc    dl,al
  405fcf:	sbb    al,0xec
  405fd1:	adc    al,BYTE PTR [eax]
  405fd3:	sbb    eax,0x1d0012ec
  405fd8:	fcom   QWORD PTR [edx]
  405fda:	repz sbb eax,0x1df313df
  405fe0:	iret   
  405fe1:	adc    esp,ebx
  405fe3:	sbb    eax,0x1de313cf
  405fe8:	mov    edi,0xbf1dd313
  405fed:	adc    edx,ebx
  405fef:	sbb    eax,0x1e0313ef
  405ff4:	out    dx,eax
  405ff5:	adc    eax,DWORD PTR [ebx]
  405ff7:	push   ds
  405ff8:	fist   WORD PTR [ebx]
  405ffa:	repnz push ds
  405ffc:	ficom  WORD PTR [edx+esi*8]
  405fff:	push   ds
  406000:	into   
  406001:	adc    al,0xe2
  406003:	push   ds
  406004:	into   
  406005:	adc    al,0xe2
  406007:	push   ds
  406008:	mov    esi,0xbe1ed214
  40600d:	adc    al,0xd2
  40600f:	push   ds
  406010:	out    dx,al
  406011:	adc    al,0x2
  406013:	pop    ds
  406014:	out    dx,al
  406015:	adc    al,0x2
  406017:	pop    ds
  406018:	ficom  WORD PTR [esi*8-0x12ea26e1]
  40601f:	pop    ds
  406020:	rcl    DWORD PTR ds:0x15c91fe5,1
  406026:	fstp   QWORD PTR [edi]
  406028:	add    BYTE PTR [eax],al
  40602a:	rcl    DWORD PTR ds:0x15bad500,0x1c
  406031:	int    0xf2
  406033:	adc    eax,0x15f5051c
  406038:	sbb    al,0xfd
  40603a:	loop   0x406051
  40603c:	sbb    al,0xf5
  40603e:	ficom  DWORD PTR ds:0x15d2ed1c
  406044:	sbb    al,0xe5
  406046:	retf   0x1c15
  406049:	ffree  st(2)
  40604b:	adc    eax,0x15bad51c
  406050:	sbb    al,0xcd
  406052:	repnz adc eax,0x15b5051c
  406058:	sbb    al,0xfd
  40605a:	loop   0x406071
  40605c:	sbb    al,0xf4
  40605e:	fist   DWORD PTR [esi]
  406060:	sbb    eax,0x1d16d3ec
  406065:	in     al,0xcb
  406067:	push   ss
  406068:	sbb    eax,0x1d16c3dc
  40606d:	aam    0xbb
  40606f:	push   ss
  406070:	sbb    eax,0x1d14f3cc
  406075:	add    al,0xea
  406077:	adc    al,0x1d
  406079:	cld    
  40607a:	jecxz  0x406090
  40607c:	sbb    eax,0x1d14dbf4
  406081:	in     al,dx
  406082:	rcl    DWORD PTR [ebx*1+0x1d14cbe4],cl
  406089:	fadd   st(3),st
  40608b:	adc    al,0x1d
  40608d:	aam    0x0
  40608f:	add    BYTE PTR [ebx-0xc33e2ec],bh
  406095:	adc    al,0x1d
  406097:	add    al,0xea
  406099:	adc    al,0x1d
  40609b:	cld    
  40609c:	jecxz  0x4060b2
  40609e:	sbb    eax,0x30bd7e9
  4060a3:	in     eax,0xdb
  4060a5:	sysret 
  4060a7:	add    BYTE PTR [ebx+eax*1+0x9],ah
  4060ab:	or     DWORD PTR [esi+0x5],esp
  4060ae:	or     ecx,DWORD PTR [ebx]
  4060b0:	jo     0x4060b9
  4060b2:	or     al,0xc
  4060b4:	xor    DWORD PTR [eax],ecx
  4060b6:	or     eax,0xe19420d
  4060bb:	push   cs
  4060bc:	xor    ebx,DWORD PTR [edx]
  4060be:	(bad)  
  4060bf:	(bad)  
  4060c1:	sbb    edx,DWORD PTR [eax]
  4060c3:	adc    BYTE PTR [ebx+ebx*1],ch
  4060c6:	adc    BYTE PTR [eax],dl
  4060c8:	or     eax,0xfd11111c
  4060cd:	sbb    edx,DWORD PTR [ecx]
  4060cf:	adc    esi,edi
  4060d1:	sbb    al,0x12
  4060d3:	adc    ch,BYTE PTR [esi]
  4060d5:	sbb    eax,0x1e0f1212
  4060da:	adc    edx,DWORD PTR [ebx]
  4060dc:	call   FWORD PTR ds:0x1ef81313
  4060e2:	adc    al,0x14
  4060e4:	call   0x8547507
  4060e9:	pop    ds
  4060ea:	adc    al,0x14
  4060ec:	or     BYTE PTR [edi],bl
  4060ee:	adc    al,0x14
  4060f0:	stc    
  4060f1:	pop    ds
  4060f2:	adc    eax,0xa9000015
  4060f7:	pop    ds
  4060f8:	adc    eax,0x151fc915
  4060fd:	adc    eax,0x15151fc9
  406102:	mov    edx,0xaa161610
  406107:	adc    BYTE PTR [esi],dl
  406109:	push   ss
  40610a:	mov    dl,BYTE PTR [eax]
  40610c:	push   ss
  40610d:	push   ss
  40610e:	mov    dl,BYTE PTR [eax]
  406110:	push   ss
  406111:	push   ss
  406112:	jnp    0x406125
  406114:	pop    ss
  406115:	pop    ss
  406116:	stos   DWORD PTR es:[edi],eax
  406117:	adc    DWORD PTR [edi],edx
  406119:	pop    ss
  40611a:	mov    edx,DWORD PTR [ecx]
  40611c:	pop    ss
  40611d:	pop    ss
  40611e:	mov    edx,DWORD PTR [ecx]
  406120:	pop    ss
  406121:	pop    ss
  406122:	aad    0x78
  406124:	sbb    ebx,DWORD PTR [eax]
  406126:	int    0x78
  406128:	sbb    ebx,DWORD PTR [eax]
  40612a:	int    0x68
  40612c:	sbb    ebx,DWORD PTR [eax]
  40612e:	mov    ebp,0xbd181b68
  406133:	pop    eax
  406134:	sbb    ebx,DWORD PTR [eax]
  406136:	in     eax,dx
  406137:	pop    eax
  406138:	sbb    ebx,DWORD PTR [eax]
  40613a:	in     eax,dx
  40613b:	or     BYTE PTR [eax+ebx*1],bl
  40613e:	fisttp QWORD PTR [eax]
  406140:	sbb    al,0x18
  406142:	fnstsw WORD PTR [ecx+0x1a]
  406145:	sbb    esp,ecx
  406147:	jns    0x406163
  406149:	sbb    esp,ecx
  40614b:	imul   ebx,DWORD PTR [edx],0x1a69bc19
  406151:	sbb    DWORD PTR [ecx+ebx*2+0x59ec191a],edi
  406158:	sbb    bl,BYTE PTR [ecx]
  40615a:	add    BYTE PTR [eax],al
  40615c:	in     al,dx
  40615d:	or     DWORD PTR ds:0x1d09dc19,ebx
  406163:	sbb    esp,ebx
  406165:	jp     0x406180
  406167:	sbb    cl,bh
  406169:	jp     0x406184
  40616b:	sbb    cl,bh
  40616d:	push   0x19
  40616f:	sbb    bh,BYTE PTR [edi-0x40e5e696]
  406175:	pop    edx
  406176:	sbb    DWORD PTR [edx],ebx
  406178:	out    dx,eax
  406179:	pop    eax
  40617a:	sbb    DWORD PTR [edx],ebx
  40617c:	out    dx,eax
  40617d:	or     BYTE PTR [edx],bl
  40617f:	sbb    bl,bh
  406181:	or     BYTE PTR [edx],bl
  406183:	sbb    bl,bh
  406185:	ja     0x4061a1
  406187:	sbb    ecx,esi
  406189:	ja     0x4061a5
  40618b:	sbb    ecx,esi
  40618d:	sbb    bl,BYTE PTR [bp+di]
  406190:	mov    esi,0xbe1b1a67
  406195:	push   edi
  406196:	sbb    bl,BYTE PTR [ebx]
  406198:	out    dx,al
  406199:	push   edi
  40619a:	sbb    bl,BYTE PTR [ebx]
  40619c:	out    dx,al
  40619d:	or     DWORD PTR [edx],eax
  40619f:	sbb    ebx,esi
  4061a1:	adc    BYTE PTR [edx],al
  4061a3:	sbb    ebx,esi
  4061a5:	adc    eax,0x9d503e9
  4061aa:	call   0xeb4a36b2
  4061af:	add    edx,ebp
  4061b1:	or     edx,ebp
  4061b3:	add    edx,ebp
  4061b5:	or     ebp,ebp
  4061b7:	add    edx,ebp
  4061b9:	or     esp,esp
  4061bb:	add    edx,ebp
  4061bd:	or     edi,ebp
  4061bf:	add    eax,DWORD PTR [eax]
  4061c1:	add    ch,dl
  4061c3:	or     esi,esp
  4061c5:	add    edx,ebp
  4061c7:	or     ecx,esp
  4061c9:	add    edx,ebp
  4061cb:	or     ebx,esp
  4061cd:	add    edx,ebp
  4061cf:	or     ebp,esi
  4061d1:	add    edx,ebp
  4061d3:	or     edi,ebp
  4061d5:	add    edx,ebp
  4061d7:	or     ecx,ebx
  4061d9:	add    edx,ebp
  4061db:	or     ebp,edx
  4061dd:	add    edx,ebp
  4061df:	or     DWORD PTR [ecx],eax
  4061e1:	add    al,0xd5
  4061e3:	or     ebp,edi
  4061e5:	add    edx,ebp
  4061e7:	or     DWORD PTR [ecx],ecx
  4061e9:	add    al,0xd5
  4061eb:	or     DWORD PTR [ecx],eax
  4061ed:	add    al,0xd5
  4061ef:	or     ecx,edi
  4061f1:	add    edx,ebp
  4061f3:	or     DWORD PTR [ecx],eax
  4061f5:	add    al,0xd5
  4061f7:	or     DWORD PTR [ecx],ebp
  4061f9:	add    al,0xd5
  4061fb:	or     DWORD PTR [ecx],ebx
  4061fd:	add    al,0xd5
  4061ff:	or     DWORD PTR [ecx],ecx
  406201:	add    al,0xd5
  406203:	or     DWORD PTR [ecx],ebx
  406205:	add    al,0xd5
  406207:	or     DWORD PTR [ecx+0x3],ebp
  40620a:	aad    0x9
  40620c:	dec    ecx
  40620d:	add    edx,ebp
  40620f:	or     DWORD PTR [ecx-0x76f62afd],ebp
  406215:	add    edx,ebp
  406217:	or     DWORD PTR [eax],eax
  406219:	jmp    0xe9406bf4
  40621e:	(bad)  
  40621f:	or     DWORD PTR [eax],eax
  406221:	jmp    0xe8406bfc
  406226:	add    BYTE PTR [eax],al
  406228:	(bad)  
  406229:	or     DWORD PTR [eax],eax
  40622b:	jmp    0x406203
  40622d:	or     DWORD PTR [eax],eax
  40622f:	jmp    0x9d6:0xed0009d6
  406236:	add    bh,ah
  406238:	(bad)  
  406239:	or     DWORD PTR [eax],eax
  40623b:	loope  0x406213
  40623d:	or     DWORD PTR [eax],eax
  40623f:	fst    st(6)
  406241:	or     DWORD PTR [eax],eax
  406243:	stc    
  406244:	(bad)  
  406245:	or     DWORD PTR [eax],eax
  406247:	add    ecx,edx
  406249:	or     DWORD PTR [eax],eax
  40624b:	leave  
  40624c:	(bad)  
  40624d:	or     DWORD PTR [eax],eax
  40624f:	(bad)  
  406251:	or     DWORD PTR [eax],eax
  406253:	test   eax,0x890009d6
  406258:	(bad)  
  406259:	or     DWORD PTR [eax],eax
  40625b:	imul   edx,esi,0xd6290009
  406261:	or     DWORD PTR [eax],eax
  406263:	jmp    0x69406c3f
  406268:	(bad)  
  406269:	or     DWORD PTR [eax],eax
  40626b:	jmp    0xe9406c44
  406270:	aad    0x9
  406272:	add    cl,ch
  406274:	fimul  DWORD PTR [ecx]
  406276:	add    cl,ch
  406278:	ror    BYTE PTR [ecx],1
  40627a:	add    cl,ch
  40627c:	fimul  WORD PTR [ecx]
  40627e:	add    cl,ch
  406280:	fimul  DWORD PTR [ecx]
  406282:	add    cl,ch
  406284:	out    0x9,al
  406286:	add    cl,ch
  406288:	fimul  WORD PTR [ecx]
  40628a:	add    cl,ch
  40628c:	add    BYTE PTR [eax],al
  40628e:	test   BYTE PTR [ecx],0x0
  406291:	jmp    0x406c7c
  406296:	lods   al,BYTE PTR ds:[esi]
  406297:	inc    edi
  406298:	(bad)  
  406299:	jmp    FWORD PTR [edi+eiz*2+0x722fffff]
  4062a0:	aas    
  4062a1:	add    BYTE PTR [edi],ch
  4062a3:	jb     0x4062e4
  4062a5:	add    bh,bh
  4062a7:	jno    0x4062e8
  4062a9:	add    bh,bh
  4062ab:	jno    0x4062ec
  4062ad:	add    bh,ch
  4062af:	jno    0x4062f0
  4062b1:	add    bh,ch
  4062b3:	jno    0x4062f4
  4062b5:	add    bh,bh
  4062b7:	jno    0x4062f8
  4062b9:	add    bh,bh
  4062bb:	jno    0x4062fc
  4062bd:	add    BYTE PTR [edi-0x50ffc08f],ch
  4062c3:	jno    0x406304
  4062c5:	add    BYTE PTR [edi],ch
  4062c7:	pop    es
  4062c8:	add    al,0x0
  4062ca:	xor    DWORD PTR [edi],eax
  4062cc:	push   es
  4062cd:	add    BYTE PTR [ebx+0x7],al
  4062d0:	or     BYTE PTR [eax],al
  4062d2:	xor    eax,0x27000a07
  4062d7:	pop    es
  4062d8:	or     eax,0x11072b00
  4062dd:	add    BYTE PTR [edi],ch
  4062df:	pop    es
  4062e0:	pop    ss
  4062e1:	add    BYTE PTR [edi],ah
  4062e3:	pop    es
  4062e4:	pop    ds
  4062e5:	add    bh,cl
  4062e7:	or     eax,0xddf002b
  4062ec:	cmp    eax,DWORD PTR [eax]
  4062ee:	mov    edi,0x530d
  4062f3:	add    BYTE PTR [edi+0x6f00730d],bl
  4062f9:	push   es
  4062fa:	mov    ds:0xe3072f00,eax
  4062ff:	add    BYTE PTR [esi-0x43fffff9],bh
  406305:	push   es
  406306:	add    BYTE PTR [eax],al
  406308:	mov    esp,0xbc001006
  40630d:	push   es
  40630e:	adc    BYTE PTR [eax],al
  406310:	aad    0x70
  406312:	add    edx,DWORD PTR [eax]
  406314:	aad    0x70
  406316:	add    edx,DWORD PTR [eax]
  406318:	aad    0x51
  40631a:	add    edx,DWORD PTR [ecx]
  40631c:	aad    0x51
  40631e:	add    edx,DWORD PTR [ecx]
  406320:	aad    0x4e
  406322:	add    edx,DWORD PTR [edx]
  406324:	aad    0x4e
  406326:	add    edx,DWORD PTR [edx]
  406328:	aad    0x6f
  40632a:	add    edx,DWORD PTR [ebx]
  40632c:	aad    0x6f
  40632e:	add    edx,DWORD PTR [ebx]
  406330:	aad    0x74
  406332:	add    edx,DWORD PTR [edx*8-0x2aebfc84]
  406339:	push   ebp
  40633a:	add    edx,DWORD PTR ds:0x15035dd5
  406340:	aad    0x50
  406342:	add    ecx,DWORD PTR [ecx-0x2b]
  406345:	pop    ds
  406346:	add    eax,DWORD PTR [eax]
  406348:	aad    0x61
  40634a:	add    eax,DWORD PTR [edx]
  40634c:	aad    0x5f
  40634e:	add    eax,DWORD PTR [edx*8-0x2af8fc9b]
  406355:	imul   eax,DWORD PTR [ebx],0xd500000d
  40635b:	push   ecx
  40635c:	add    ebx,DWORD PTR [ecx]
  40635e:	aad    0x41
  406360:	add    esi,DWORD PTR [ecx]
  406362:	aad    0xa1
  406364:	add    esp,DWORD PTR [ecx-0x2b]
  406367:	loope  0x40636b
  406369:	rcl    ebp,0x61
  40636c:	add    al,0x81
  40636e:	aam    0x61
  406370:	add    eax,0xff61d601
  406375:	add    bl,dl
  406377:	popa   
  406378:	or     eax,DWORD PTR [ecx]
  40637a:	shl    DWORD PTR [ecx+0x13],1
  40637d:	add    DWORD PTR [ebp+0x5012361],edi
  406383:	(bad)  
  406385:	add    BYTE PTR ds:0xd5000363,dh
  40638b:	or     ecx,edi
  40638d:	add    esp,ebp
  40638f:	or     ecx,edi
  406391:	add    eax,ebp
  406393:	or     eax,edi
  406395:	add    eax,esp
  406397:	or     ebx,edi
  406399:	add    eax,edi
  40639b:	or     edx,ebx
  40639d:	add    eax,esi
  40639f:	or     ebp,edx
  4063a1:	add    ebp,ecx
  4063a3:	or     esp,ebx
  4063a5:	add    esp,eax
  4063a7:	or     edi,edx
  4063a9:	add    ebp,ebx
  4063ab:	or     esi,edi
  4063ad:	add    esp,edx
  4063af:	or     DWORD PTR [ecx],eax
  4063b1:	add    al,0xcd
  4063b3:	or     eax,esi
  4063b5:	add    ecx,esp
  4063b7:	or     ebx,esi
  4063b9:	add    edi,DWORD PTR [edi+0x3e209]
  4063bf:	add    BYTE PTR [esi-0xefc22f7],bh
  4063c5:	or     esp,edx
  4063c7:	add    ebp,eax
  4063c9:	or     DWORD PTR [ecx+0x23099503],ebp
  4063cf:	add    al,0xf8
  4063d1:	or     ebp,edx
  4063d3:	xchg   edx,eax
  4063d4:	xchg   ebp,eax
  4063d5:	or     DWORD PTR [ecx],edx
  4063d7:	add    al,0xd0
  4063d9:	or     DWORD PTR [ebp+0x48099592],edi
  4063df:	add    al,0xea
  4063e1:	or     ebp,edi
  4063e3:	xchg   ecx,eax
  4063e4:	xchg   ebp,eax
  4063e5:	or     ebp,ecx
  4063e7:	add    edx,eax
  4063e9:	or     ebp,esi
  4063eb:	xchg   ecx,eax
  4063ec:	xchg   ebp,eax
  4063ed:	or     DWORD PTR [esi],edx
  4063ef:	add    al,0xd0
  4063f1:	or     ebp,ecx
  4063f3:	xchg   ecx,eax
  4063f4:	xchg   ebp,eax
  4063f5:	or     DWORD PTR [ebp-0x52f624fd],ebx
  4063fb:	xchg   ecx,eax
  4063fc:	xchg   ebp,eax
  4063fd:	or     ecx,ebx
  4063ff:	add    eax,ecx
  406401:	or     DWORD PTR [ebp+0xa1591],esp
  406407:	popa   
  406408:	(bad)  
  406409:	add    al,BYTE PTR [eax]
  40640b:	jno    0x406471
  40640d:	leave  
  40640e:	call   edi
  406410:	(bad)  
  406411:	pop    es
  406412:	add    BYTE PTR [ecx+0x44],bl
  406415:	leave  
  406416:	(bad)  
  406417:	in     al,dx
  406418:	(bad)  
  406419:	push   es
  40641a:	add    BYTE PTR [ecx+0x44],al
  40641d:	leave  
  40641e:	call   FWORD PTR [eax-0x2a]
  406421:	or     al,0x0
  406423:	inc    ebp
  406424:	add    BYTE PTR [eax],al
  406426:	fs leave 
  406428:	(bad)  
  406429:	cmp    edx,esi
  40642b:	sbb    al,0x0
  40642d:	pop    ecx
  40642e:	fs leave 
  406430:	jmp    DWORD PTR [esi+0x650003d6]
  406436:	inc    esp
  406437:	leave  
  406438:	call   DWORD PTR [ecx+edx*8]
  40643b:	pop    es
  40643c:	add    ch,cl
  40643e:	inc    esp
  40643f:	leave  
  406440:	inc    DWORD PTR [ecx-0x2a]
  406443:	pop    es
  406444:	add    BYTE PTR [ebp+0x6affc964],dh
  40644a:	(bad)  
  40644b:	(bad)  
  40644c:	inc    esp
  40644e:	fs leave 
  406450:	jmp    DWORD PTR [edx]
  406452:	(bad)  
  406453:	or     al,0x0
  406455:	mov    DWORD PTR [ecx+ecx*8-0x1],eax
  406459:	adc    esi,edx
  40645b:	add    eax,0xc944b100
  406460:	call   FWORD PTR [ebp-0x52fffd2a]
  406466:	fs leave 
  406468:	call   FWORD PTR [ebx-0x2effc62a]
  40646e:	fs leave 
  406470:	dec    DWORD PTR [edx-0x6fff72f]
  406476:	inc    esp
  406477:	leave  
  406478:	jmp    DWORD PTR ds:0xe50002d1
  40647e:	inc    esp
  40647f:	leave  
  406480:	(bad)  
  406481:	jmp    DWORD PTR [esi]
  406483:	add    eax,0x7f94000a
  406488:	inc    eax
  406489:	add    BYTE PTR [eax],al
  40648b:	add    bl,al
  40648d:	or     edx,DWORD PTR [edx]
  40648f:	add    BYTE PTR [eax-0x32ffbf81],bl
  406495:	add    eax,0x7f7c0020
  40649a:	inc    eax
  40649b:	add    BYTE PTR [esi+eax*1+0x4],bl
  40649f:	add    BYTE PTR [edi+edi*2],al
  4064a2:	inc    eax
  4064a3:	add    BYTE PTR [esi+eax*1],cl
  4064a6:	and    DWORD PTR [eax],eax
  4064a8:	sub    BYTE PTR [edi+0x40],bh
  4064ab:	add    BYTE PTR [esi+eax*1+0x32],ah
  4064af:	add    ah,cl
  4064b1:	jle    0x4064f3
  4064b3:	add    BYTE PTR [ecx-0x2fffddf5],bl
  4064b9:	jle    0x4064fb
  4064bb:	add    BYTE PTR [edx],ch
  4064bd:	or     ecx,DWORD PTR [eax+eax*1]
  4064c0:	pusha  
  4064c1:	add    BYTE PTR [eax+0x0],0xc2
  4064c5:	add    eax,0x802c001b
  4064ca:	inc    eax
  4064cb:	add    BYTE PTR [esi+0x6],bl
  4064ce:	verw   WORD PTR [eax+eax*4]
  4064d2:	inc    eax
  4064d3:	add    BYTE PTR [edi-0x37fff7fb],ch
  4064d9:	cdq    
  4064da:	inc    eax
  4064db:	add    BYTE PTR ds:0x2000050b,al
  4064e1:	jg     0x406523
  4064e3:	add    BYTE PTR [ecx+0xb],ah
  4064e6:	add    al,BYTE PTR [eax]
  4064e8:	in     al,0x99
  4064ea:	inc    eax
  4064eb:	add    bl,bh
  4064ed:	or     dl,BYTE PTR [eax+eax*1]
  4064f0:	add    BYTE PTR [eax],al
  4064f2:	fcomp  QWORD PTR [ecx+0x5e00040]
  4064f8:	adc    DWORD PTR [eax],eax
  4064fa:	push   eax
  4064fb:	jg     0x40653d
  4064fd:	add    ch,dl
  4064ff:	mov    cl,0x3
  406501:	adc    ebp,edx
  406503:	mov    BYTE PTR [edi+0x2d3d540],cl
  406509:	pop    es
  40650a:	aad    0x80
  40650c:	pop    DWORD PTR [eax-0x2b]
  40650f:	sub    al,0x4
  406511:	push   cs
  406512:	aad    0xd0
  406514:	mov    es,WORD PTR [eax-0x2b]
  406517:	sbb    eax,0xe0d50c04
  40651c:	mov    es,WORD PTR [eax-0x2b]
  40651f:	xchg   esi,eax
  406520:	add    eax,DWORD PTR [edx*8-0x2abf6fe8]
  406527:	cwde   
  406528:	add    eax,DWORD PTR [edi]
  40652a:	aad    0x70
  40652c:	pop    DWORD PTR [eax-0x2b]
  40652f:	repz add cl,BYTE PTR ds:0x409000d5
  406536:	aad    0x56
  406538:	add    ecx,DWORD PTR [eax]
  40653a:	aad    0xb4
  40653c:	pop    DWORD PTR [eax-0x2b]
  40653f:	lods   eax,DWORD PTR ds:[esi]
  406540:	add    ecx,DWORD PTR [eax]
  406542:	aad    0xa8
  406544:	pop    DWORD PTR [eax-0x2b]
  406547:	or     al,BYTE PTR [edi+eax*1]
  40654a:	aad    0xa0
  40654c:	pop    DWORD PTR [eax-0x2b]
  40654f:	fiadd  DWORD PTR [edx]
  406551:	adc    eax,0x409008d5
  406556:	add    BYTE PTR [eax],al
  406558:	aad    0x2f
  40655a:	add    ecx,DWORD PTR [ebx]
  40655c:	aad    0x6c
  40655e:	pop    DWORD PTR [eax-0x2b]
  406561:	inc    ecx
  406562:	add    ecx,DWORD PTR [ebx]
  406564:	aad    0x70
  406566:	pop    DWORD PTR [eax-0x2b]
  406569:	fadd   QWORD PTR [edx]
  40656b:	adc    dl,ch
  40656d:	ins    BYTE PTR es:[edi],dx
  40656e:	xchg   ebx,eax
  40656f:	inc    eax
  406570:	aad    0x16
  406572:	add    ecx,DWORD PTR [ecx]
  406574:	aad    0x70
  406576:	xchg   ebx,eax
  406577:	inc    eax
  406578:	aad    0x9
  40657a:	mov    al,BYTE PTR [esi+eax*8]
  40657d:	or     DWORD PTR [ebp-0x59f66a6d],edi
  406583:	add    al,0xcd
  406585:	or     DWORD PTR [ecx+0x1e099593],edi
  40658b:	add    al,0xe2
  40658d:	or     DWORD PTR [ecx+0x760a1593],ebp
  406593:	add    al,0xda
  406595:	or     DWORD PTR [ecx-0x6d],esi
  406598:	adc    eax,0xe104510a
  40659d:	or     DWORD PTR [ecx-0x6d],edx
  4065a0:	adc    eax,0xcc04a70a
  4065a5:	or     DWORD PTR [ebp-0x6d],ebp
  4065a8:	adc    eax,0xdf04950a
  4065ad:	or     DWORD PTR [ecx-0x6d],ebx
  4065b0:	adc    eax,0xd903d80a
  4065b5:	or     DWORD PTR [ecx-0x6d],esp
  4065b8:	adc    eax,0x46e0a
  4065bd:	add    BYTE PTR [ebx],bl
  4065bf:	or     ebp,DWORD PTR [ecx+0x2e0a1591]
  4065c5:	add    al,0x8
  4065c7:	or     al,BYTE PTR [ecx-0x6b]
  4065ca:	adc    eax,0xfc04020a
  4065cf:	or     DWORD PTR [ebp-0x6b],edi
  4065d2:	xchg   ebp,eax
  4065d3:	or     DWORD PTR [eax],esp
  4065d5:	add    al,0xcf
  4065d7:	or     DWORD PTR [ecx-0x6b],edi
  4065da:	xchg   ebp,eax
  4065db:	or     DWORD PTR [ecx-0x62f619fd],edx
  4065e1:	xchg   esp,eax
  4065e2:	xchg   ebp,eax
  4065e3:	or     DWORD PTR [ebx+eax*1-0x6b6af626],edx
  4065ea:	xchg   ebp,eax
  4065eb:	or     DWORD PTR [edi-0x6ef623fd],edx
  4065f1:	xchg   esp,eax
  4065f2:	xchg   ebp,eax
  4065f3:	or     DWORD PTR [eax],eax
  4065f5:	rcl    esi,1
  4065f7:	sbb    eax,0xca61b100
  4065fc:	call   FWORD PTR [eax-0x27]
  4065ff:	std    
  406600:	call   DWORD PTR [eax]
  406602:	inc    eax
  406603:	retf   0xaeff
  406606:	(bad)  
  406607:	(bad)  
  40660a:	inc    esi
  40660b:	retf   0x17ff
  40660e:	fld    DWORD PTR ds:0xc9669500
  406614:	push   DWORD PTR [ecx+ebx*8]
  406617:	add    eax,0xc9669d00
  40661c:	call   ecx
  40661e:	(bad)  
  40661f:	(bad)  
  406620:	jmp    FWORD PTR [eax-0x36ba0000]
  406626:	jmp    DWORD PTR [ecx]
  406628:	fld    DWORD PTR [ebx]
  40662a:	add    BYTE PTR [ecx+0x46],dl
  40662d:	leave  
  40662e:	call   FWORD PTR [edx]
  406630:	fldenv [ebx]
  406632:	add    BYTE PTR [ecx+0x66],bl
  406635:	leave  
  406636:	push   DWORD PTR [eax-0x2a]
  406639:	push   es
  40663a:	add    BYTE PTR [ecx+0x66],ah
  40663d:	leave  
  40663e:	jmp    eax
  406640:	(bad)  
  406641:	add    al,0x0
  406643:	imul   eax,DWORD PTR [esi-0x37],0x8d6f6ff
  40664a:	add    ch,cl
  40664c:	inc    esi
  40664d:	leave  
  40664e:	jmp    edi
  406650:	(bad)  
  406651:	adc    al,0x0
  406653:	lds    esp,FWORD PTR [esi-0x37]
  406656:	jmp    DWORD PTR [edx]
  406658:	(bad)  
  406659:	cld    
  40665a:	call   DWORD PTR [esi+eiz*2-0x298a0037]
  406661:	push   es
  406662:	add    BYTE PTR [ebp+0x9ffc946],ch
  406668:	(bad)  
  406669:	adc    eax,0xc946d500
  40666e:	(bad)  
  40666f:	jmp    DWORD PTR [ebx+0x8]
  406672:	push   ds
  406673:	add    BYTE PTR [eax],ah
  406675:	cwde   
  406676:	inc    eax
  406677:	add    BYTE PTR [ebx],al
  406679:	pop    es
  40667a:	pop    es
  40667b:	add    BYTE PTR [eax],bl
  40667d:	cwde   
  40667e:	inc    eax
  40667f:	add    BYTE PTR [edi-0xbffeffb],cl
  406685:	test   DWORD PTR [eax+0x0],eax
  406688:	add    BYTE PTR [eax],al
  40668a:	repnz pop es
  40668c:	push   es
  40668d:	add    ah,bh
  40668f:	test   DWORD PTR [eax+0x0],eax
  406692:	scas   eax,DWORD PTR es:[edi]
  406693:	pop    es
  406694:	add    eax,DWORD PTR [eax]
  406696:	cwde   
  406697:	test   DWORD PTR [eax+0x0],eax
  40669a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40669b:	pop    es
  40669c:	das    
  40669d:	add    BYTE PTR [eax],ch
  40669f:	test   DWORD PTR [eax+0x0],eax
  4066a2:	js     0x4066aa
  4066a4:	pop    ss
  4066a5:	add    BYTE PTR [eax],dl
  4066a7:	test   DWORD PTR [eax+0x0],eax
  4066aa:	jmp    0x344080b4
  4066af:	test   DWORD PTR [eax+0x0],eax
  4066b2:	sahf   
  4066b3:	pop    es
  4066b4:	lldt   sp
  4066b7:	test   BYTE PTR [eax+0x0],al
  4066ba:	xor    eax,0xcc001406
  4066bf:	test   BYTE PTR [eax+0x0],al
  4066c2:	les    eax,FWORD PTR ds:0x863c001f
  4066c8:	inc    eax
  4066c9:	add    BYTE PTR [eax+0x7],ch
  4066cc:	and    al,0x0
  4066ce:	xchg   BYTE PTR fs:[eax+0x0],al
  4066d2:	inc    eax
  4066d3:	pop    es
  4066d4:	or     al,BYTE PTR [eax]
  4066d6:	cmp    BYTE PTR [esi+0x5a60040],al
  4066dc:	add    al,0x0
  4066de:	xor    BYTE PTR [esi+0x5dc0040],al
  4066e4:	add    al,0x0
  4066e6:	enter  0x4083,0x0
  4066ea:	aad    0x28
  4066ec:	add    al,0xc
  4066ee:	add    BYTE PTR [eax],al
  4066f0:	aad    0x6c
  4066f2:	test   DWORD PTR [eax-0x2b],eax
  4066f5:	cs add al,0x11
  4066f8:	aad    0x28
  4066fa:	xchg   BYTE PTR [eax-0x2b],al
  4066fd:	pop    eax
  4066fe:	add    ecx,DWORD PTR [esi]
  406700:	aad    0x28
  406702:	xchg   BYTE PTR [eax-0x2b],al
  406705:	xor    al,0x4
  406707:	or     al,0xd5
  406709:	test   al,0x85
  40670b:	inc    eax
  40670c:	aad    0x7e
  40670e:	add    edx,DWORD PTR [edx]
  406710:	aad    0x84
  406712:	test   DWORD PTR [eax-0x2b],eax
  406715:	call   0xe515851c
  40671a:	test   BYTE PTR [eax-0x2b],al
  40671d:	mov    al,BYTE PTR [ebx]
  40671f:	xor    ebp,edx
  406721:	adc    BYTE PTR [esi+0x391d540],al
  406727:	or     ebp,edx
  406729:	and    al,0x86
  40672b:	inc    eax
  40672c:	aad    0xfe
  40672e:	add    ecx,DWORD PTR [edx*8-0x2abf7aac]
  406735:	add    BYTE PTR [esp+ecx*1],al
  406738:	aad    0x44
  40673a:	test   DWORD PTR [eax-0x2b],eax
  40673d:	pop    DWORD PTR [ebx]
  40673f:	pop    es
  406740:	aad    0x3c
  406742:	test   DWORD PTR [eax-0x2b],eax
  406745:	xchg   ebx,eax
  406746:	add    edx,DWORD PTR [edx*8-0x2abf7a9c]
  40674d:	adc    al,BYTE PTR [esp+eax*1]
  406750:	aad    0xbc
  406752:	test   DWORD PTR [eax+0x0],eax
  406755:	add    ch,dl
  406757:	inc    ebp
  406758:	add    eax,DWORD PTR [edx*8-0x2abf79cc]
  40675f:	mov    dl,0x3
  406761:	add    al,0xd5
  406763:	sub    al,0x86
  406765:	inc    eax
  406766:	aad    0x9
  406768:	and    al,BYTE PTR [ebx]
  40676a:	ror    DWORD PTR [ecx],cl
  40676c:	add    eax,0xad099586
  406771:	add    eax,edi
  406773:	or     DWORD PTR [ecx],edi
  406775:	xchg   BYTE PTR [ebp-0x25fc8af7],dl
  40677b:	or     DWORD PTR [ecx],ebp
  40677d:	xchg   BYTE PTR [ebp-0x18fc9bf7],dl
  406783:	or     DWORD PTR ds:0x3a099586,edi
  406789:	add    al,0xc9
  40678b:	or     DWORD PTR [ebp-0x7f],ebp
  40678e:	xchg   ebp,eax
  40678f:	or     DWORD PTR [ebp+0x6909cc04],edi
  406795:	adc    DWORD PTR ds:0xdc041b0a,0x15813509
  40679f:	or     al,bh
  4067a1:	add    al,0xce
  4067a3:	or     DWORD PTR [ecx-0x7f],eax
  4067a6:	adc    eax,0xd703d40a
  4067ab:	or     DWORD PTR ds:0xc00a1581,eax
  4067b1:	add    edx,ecx
  4067b3:	or     DWORD PTR ds:0xc90a1581,ebp
  4067b9:	add    eax,DWORD PTR [eax]
  4067bb:	add    cl,dl
  4067bd:	or     DWORD PTR ds:0x160a1581,edx
  4067c3:	add    al,0xd1
  4067c5:	or     DWORD PTR ds:0x360a1581,ebx
  4067cb:	add    al,0xc6
  4067cd:	or     DWORD PTR [ecx],esp
  4067cf:	adc    DWORD PTR ds:0xcf041c0a,0x9580fd09
  4067d9:	or     DWORD PTR [eax+0x4],esi
  4067dc:	fisttp WORD PTR [ecx]
  4067de:	or     DWORD PTR [ecx-0x21fff66b],eax
  4067e4:	(bad)  
  4067e5:	adc    DWORD PTR [eax],eax
  4067e7:	aad    0x55
  4067e9:	retf   0x79ff
  4067ec:	rcl    DWORD PTR [eax+eax*1],1
  4067ef:	icebp  
  4067f0:	push   ebp
  4067f1:	retf   0x2bff
  4067f4:	rcl    DWORD PTR [eax+eax*1],1
  4067f7:	or     eax,0x51ffca55
  4067fc:	rcl    DWORD PTR [eax],1
  4067fe:	add    ch,dh
  406800:	or     cl,0xff
  406803:	arpl   cx,dx
  406805:	or     eax,0xc972fd00
  40680a:	dec    DWORD PTR [eax-0x2f]
  40680d:	adc    DWORD PTR [eax],eax
  40680f:	leave  
  406810:	(bad)  
  406811:	leave  
  406812:	(bad)  
  406813:	fcom   st(6)
  406815:	adc    DWORD PTR [eax],eax
  406817:	mov    ch,0x52
  406819:	retf   0xa7ff
  40681c:	(bad)  
  40681d:	sub    DWORD PTR [eax],eax
  40681f:	jns    0x406821
  406821:	add    BYTE PTR [edx-0x36],al
  406824:	(bad)  
  406825:	jl     0x4067fd
  406827:	adc    eax,DWORD PTR [eax]
  406829:	test   DWORD PTR [edx],esi
  40682b:	retf   0xa2ff
  40682e:	(bad)  
  40682f:	adc    eax,DWORD PTR [eax]
  406831:	and    DWORD PTR [edx],0xd68dffca
  406837:	adc    eax,DWORD PTR [eax]
  406839:	pop    ebp
  40683a:	adc    cl,dl
  40683c:	inc    DWORD PTR [edx-0x2a]
  40683f:	cli    
  406840:	inc    DWORD PTR [eax]
  406842:	push   ebp
  406843:	leave  
  406844:	push   DWORD PTR [esi-0x2a]
  406847:	adc    al,BYTE PTR [eax]
  406849:	std    
  40684a:	repnz leave 
  40684c:	inc    ebx
  40684e:	(bad)  
  40684f:	sbb    BYTE PTR [eax],al
  406851:	mov    ebp,0x76ffc9e2
  406856:	(bad)  
  406857:	adc    eax,DWORD PTR [eax]
  406859:	mov    ecx,0xffffc9d2
  40685e:	or     BYTE PTR [eax+ecx*1],0x0
  406862:	js     0x40684c
  406864:	aas    
  406865:	add    BYTE PTR [ecx*1-0x17bffffc],al
  40686c:	aas    
  40686d:	add    BYTE PTR [esp+ecx*1+0x4],dl
  406871:	add    BYTE PTR [eax],cl
  406873:	call   0xcce68b7
  406878:	add    eax,DWORD PTR [eax]
  40687a:	sub    al,0xe8
  40687c:	aas    
  40687d:	add    BYTE PTR [ebp+0xc],ch
  406880:	add    eax,DWORD PTR [eax]
  406882:	adc    al,ch
  406884:	aas    
  406885:	add    BYTE PTR [eax],al
  406887:	add    BYTE PTR [edi+0xc00180c],bh
  40688d:	call   0xd7c68d1
  406892:	pop    es
  406893:	add    ah,ah
  406895:	out    0x3f,eax
  406897:	add    BYTE PTR [eax-0x5ffff5f3],dh
  40689d:	in     eax,0x3f
  40689f:	add    ah,cl
  4068a1:	or     eax,DWORD PTR [esi]
  4068a3:	add    BYTE PTR [eax-0x57ffc01b],cl
  4068a9:	or     eax,DWORD PTR ds:0x3fe57000
  4068af:	add    bh,dl
  4068b1:	or     eax,0xe54c000b
  4068b6:	aas    
  4068b7:	add    BYTE PTR [ebp+0xb],bh
  4068ba:	add    al,0x0
  4068bc:	inc    esp
  4068bd:	in     eax,0x3f
  4068bf:	add    BYTE PTR [esi+0x5c00040b],bl
  4068c5:	in     eax,0x3f
  4068c7:	add    cl,ah
  4068c9:	or     eax,0xe5340004
  4068ce:	aas    
  4068cf:	add    BYTE PTR [ebp+0xe],al
  4068d2:	add    al,0x0
  4068d4:	lods   al,BYTE PTR ds:[esi]
  4068d5:	in     al,0x3f
  4068d7:	add    ch,dl
  4068d9:	rol    BYTE PTR [ebx],1
  4068db:	or     edx,ebp
  4068dd:	jl     0x40695c
  4068df:	inc    eax
  4068e0:	aad    0xb3
  4068e2:	add    ecx,DWORD PTR [ecx]
  4068e4:	aad    0x78
  4068e6:	jge    0x406928
  4068e8:	aad    0xb6
  4068ea:	add    ebx,DWORD PTR [esi]
  4068ec:	add    BYTE PTR [eax],al
  4068ee:	aad    0xe8
  4068f0:	jl     0x406932
  4068f2:	aad    0x8d
  4068f4:	add    al,0x1f
  4068f6:	aad    0x78
  4068f8:	jl     0x40693a
  4068fa:	aad    0xe4
  4068fc:	add    ecx,DWORD PTR [eax]
  4068fe:	aad    0xb4
  406900:	jl     0x406942
  406902:	aad    0x50
  406904:	add    ecx,DWORD PTR [eax]
  406906:	aad    0x80
  406908:	jl     0x40694a
  40690a:	aad    0xce
  40690c:	add    eax,DWORD PTR [edx*8-0x2abf8358]
  406913:	jb     0x406918
  406915:	or     ch,dl
  406917:	add    al,0x7d
  406919:	inc    eax
  40691a:	aad    0xf9
  40691c:	add    ecx,DWORD PTR [ebx]
  40691e:	aad    0x0
  406920:	jge    0x406962
  406922:	aad    0x88
  406924:	add    ebp,DWORD PTR [ecx]
  406926:	aad    0x6c
  406928:	jl     0x40696a
  40692a:	aad    0xc3
  40692c:	add    cl,BYTE PTR [eax]
  40692e:	aad    0x98
  406930:	jge    0x406972
  406932:	aad    0xf3
  406934:	add    cl,BYTE PTR [edx]
  406936:	aad    0x94
  406938:	jge    0x40697a
  40693a:	aad    0x93
  40693c:	add    ecx,DWORD PTR [eax]
  40693e:	aad    0x90
  406940:	jge    0x406982
  406942:	aad    0x1f
  406944:	add    al,0x8
  406946:	aad    0x7c
  406948:	jge    0x40698a
  40694a:	aad    0x5c
  40694c:	add    eax,DWORD PTR [esi]
  40694e:	aad    0x84
  406950:	jge    0x406992
  406952:	add    BYTE PTR [eax],al
  406954:	aad    0x9
  406956:	inc    eax
  406957:	add    ecx,esi
  406959:	or     DWORD PTR [ecx],ebp
  40695b:	jge    0x406972
  40695d:	or     dl,BYTE PTR [esi-0x6af622fd]
  406963:	jge    0x4068fa
  406965:	or     DWORD PTR [esi+0x3],ecx
  406968:	fisttp DWORD PTR [ecx]
  40696a:	lea    edi,[ebp-0x6b]
  40696d:	or     DWORD PTR [ebx+eax*1-0x25],ebp
  406971:	or     DWORD PTR [ebp+0x2f09957d],eax
  406977:	add    ecx,edi
  406979:	or     DWORD PTR [ecx+0x7d09957d],eax
  40697f:	add    esp,ebx
  406981:	or     DWORD PTR [ecx+0x7d],esp
  406984:	xchg   ebp,eax
  406985:	or     DWORD PTR [esi],esi
  406987:	add    edx,eax
  406989:	or     DWORD PTR [ecx-0x71f66a83],eax
  40698f:	add    edx,ebx
  406991:	or     DWORD PTR [ecx-0x3cf66a83],edx
  406997:	add    al,0xd9
  406999:	or     DWORD PTR [ecx],edi
  40699b:	jp     0x406932
  40699d:	or     DWORD PTR [ebx+0x4],eax
  4069a0:	(bad)  [ecx]
  4069a2:	and    DWORD PTR [edx+0x15],edi
  4069a5:	or     bl,BYTE PTR [esp+eax*1]
  4069a8:	(bad)  [ecx]
  4069aa:	sub    DWORD PTR [edx+0x15],edi
  4069ad:	or     dh,dl
  4069af:	add    edx,edi
  4069b1:	or     ebp,ebp
  4069b3:	jns    0x4069ca
  4069b5:	or     dh,BYTE PTR [ecx]
  4069b7:	add    al,0x0
  4069b9:	add    dl,bl
  4069bb:	or     ebp,edx
  4069bd:	jns    0x4069d4
  4069bf:	or     dl,BYTE PTR [esi-0x42f627fc]
  4069c5:	jns    0x4069dc
  4069c7:	or     al,BYTE PTR [esp+eax*1]
  4069ca:	ror    DWORD PTR [ecx],1
  4069cc:	fnstsw WORD PTR [ecx+0x15]
  4069cf:	or     al,BYTE PTR [eax]
  4069d1:	not    esi
  4069d3:	or     eax,0xc9ecd500
  4069d8:	push   DWORD PTR ds:0xed000dd9
  4069de:	fmul   st(1),st
  4069e0:	jmp    DWORD PTR [ebx]
  4069e2:	(bad)  ds:0xc9cce500
  4069e8:	call   DWORD PTR [edi]
  4069ea:	fst    DWORD PTR [ecx]
  4069ec:	add    BYTE PTR [ecx-0x48],al
  4069ef:	leave  
  4069f0:	call   DWORD PTR [edx+0x29001cd6]
  4069f6:	test   al,0xc9
  4069f8:	call   FWORD PTR [esi+edx*8-0x67b30009]
  4069ff:	leave  
  406a00:	(bad)  
  406a01:	cli    
  406a02:	(bad)  
  406a03:	xor    eax,0xc9898d00
  406a08:	jmp    ebp
  406a0a:	(bad)  
  406a0b:	or     eax,DWORD PTR [eax]
  406a0d:	jne    0x406a88
  406a0f:	leave  
  406a10:	jmp    DWORD PTR [esi]
  406a12:	fst    DWORD PTR [ecx]
  406a14:	add    BYTE PTR [ecx-0x27003697],al
  406a1a:	(bad)  
  406a1b:	adc    eax,0x4100
  406a20:	pop    eax
  406a21:	leave  
  406a22:	(bad)  
  406a23:	cmp    bl,cl
  406a25:	or     eax,0xca483900
  406a2a:	inc    DWORD PTR [eax-0x27]
  406a2d:	add    eax,DWORD PTR [eax]
  406a2f:	stc    
  406a30:	cmp    edx,ecx
  406a32:	push   DWORD PTR [ebp+0x1000cd6]
  406a38:	sub    dl,cl
  406a3a:	(bad)  
  406a3b:	mov    ebp,0x10014d6
  406a40:	sbb    dl,cl
  406a42:	inc    DWORD PTR [ecx-0x2a]
  406a45:	adc    BYTE PTR [eax],al
  406a47:	fisttp QWORD PTR [ecx]
  406a49:	retf   0xffff
  406a4c:	mov    ecx,DWORD PTR [eax]
  406a4e:	or     DWORD PTR [eax],eax
  406a50:	ins    BYTE PTR es:[edi],dx
  406a51:	in     eax,0x3f
  406a53:	add    BYTE PTR [esi-0x13fff2f8],cl
  406a59:	loopne 0x406a9a
  406a5b:	add    BYTE PTR [eax+0x10000a08],ah
  406a61:	loope  0x406aa2
  406a63:	add    al,ch
  406a65:	or     eax,0xe100000d
  406a6a:	aas    
  406a6b:	add    bl,dh
  406a6d:	or     BYTE PTR [esi],dl
  406a6f:	add    BYTE PTR [eax-0x6effc020],bh
  406a75:	or     BYTE PTR ds:0x3fe05000,dl
  406a7b:	add    dh,al
  406a7d:	or     BYTE PTR [ebx],cl
  406a7f:	add    BYTE PTR [eax+eiz*8+0x3f],dl
  406a83:	add    BYTE PTR [eax],al
  406a85:	add    BYTE PTR [edx],cl
  406a87:	or     BYTE PTR ds:0x3fe07400,cl
  406a8d:	add    BYTE PTR [esi+0x8],bl
  406a90:	adc    BYTE PTR [eax],al
  406a92:	and    al,0x3f
  406a95:	add    BYTE PTR [eax],dh
  406a97:	or     BYTE PTR [eax+eax*1],cl
  406a9a:	push   eax
  406a9b:	loopne 0x406adc
  406a9d:	add    ch,dh
  406a9f:	or     al,0xb
  406aa1:	add    BYTE PTR [ebp+eiz*8+0xe5c003f],dl
  406aa8:	or     al,0x0
  406aaa:	hlt    
  406aab:	in     eax,0x3f
  406aad:	add    BYTE PTR [esi+ecx*1],ah
  406ab0:	adc    BYTE PTR [eax],al
  406ab2:	rcr    bh,0x3f
  406ab5:	add    BYTE PTR [esi-0x23ffecf2],bl
  406abb:	in     eax,0x3f
  406abd:	add    al,ah
  406abf:	or     eax,0xdf9c000e
  406ac4:	aas    
  406ac5:	add    ch,dl
  406ac7:	mov    al,ds:0x94d51104
  406acc:	test   DWORD PTR [eax-0x2b],eax
  406acf:	lods   eax,DWORD PTR ds:[esi]
  406ad0:	add    al,0xe
  406ad2:	aad    0x94
  406ad4:	test   DWORD PTR [eax-0x2b],eax
  406ad7:	jge    0x406add
  406ad9:	adc    ch,dl
  406adb:	js     0x406a62
  406add:	inc    eax
  406ade:	aad    0x28
  406ae0:	add    al,0x11
  406ae2:	aad    0x2c
  406ae4:	test   DWORD PTR [eax-0x2b],eax
  406ae7:	aas    
  406ae8:	add    edx,DWORD PTR [ebx]
  406aea:	add    BYTE PTR [eax],al
  406aec:	aad    0x80
  406aee:	test   DWORD PTR [eax-0x2b],eax
  406af1:	mov    ecx,0xe8d51503
  406af6:	test   BYTE PTR [eax-0x2b],al
  406af9:	pop    ss
  406afa:	add    al,0x14
  406afc:	aad    0xf0
  406afe:	test   BYTE PTR [eax-0x2b],al
  406b01:	lds    eax,FWORD PTR [ebx]
  406b03:	pop    ss
  406b04:	aad    0x78
  406b06:	test   BYTE PTR [eax-0x2b],al
  406b09:	and    eax,DWORD PTR [edx+edx*1]
  406b0c:	aad    0x9c
  406b0e:	test   BYTE PTR [eax-0x2b],al
  406b11:	and    DWORD PTR [eax+ebx*1],eax
  406b14:	aad    0x48
  406b16:	test   BYTE PTR [eax-0x2b],al
  406b19:	std    
  406b1a:	add    esp,DWORD PTR [ebx]
  406b1c:	aad    0x3c
  406b1e:	test   BYTE PTR [eax-0x2b],al
  406b21:	cs add al,0x25
  406b24:	aad    0x54
  406b26:	test   DWORD PTR [eax-0x2b],eax
  406b29:	call   0x4085:0xa0d51b03
  406b30:	aad    0x96
  406b32:	add    eax,DWORD PTR [ebx]
  406b34:	aad    0xb4
  406b36:	test   DWORD PTR [eax-0x2b],eax
  406b39:	add    DWORD PTR [ebx],0x85acd507
  406b3f:	inc    eax
  406b40:	aad    0x9
  406b42:	aas    
  406b43:	add    al,0xd2
  406b45:	or     DWORD PTR [ebp-0x7b],ebx
  406b48:	adc    eax,0xe9037d0a
  406b4d:	or     DWORD PTR [ebp-0x7b],ebp
  406b50:	add    BYTE PTR [eax],al
  406b52:	adc    eax,0xd203530a
  406b57:	or     DWORD PTR [ebp-0x7b],edx
  406b5a:	adc    eax,0xdf03780a
  406b5f:	or     DWORD PTR [ecx-0x7b],esp
  406b62:	adc    eax,0x903be0a
  406b67:	or     ah,BYTE PTR [ecx]
  406b69:	xchg   BYTE PTR [ebp-0x7fcc8f7],dl
  406b6f:	or     ecx,esp
  406b71:	test   DWORD PTR [ebp-0x2dfbf0f7],edx
  406b77:	or     ecx,ebp
  406b79:	test   DWORD PTR [ebp-0x26fc04f7],edx
  406b7f:	or     DWORD PTR [ecx],edi
  406b81:	xchg   BYTE PTR [ebp-0x31fc52f7],dl
  406b87:	or     DWORD PTR ds:0xb8099586,eax
  406b8d:	add    ebx,esi
  406b8f:	or     DWORD PTR [ecx],esi
  406b91:	xchg   BYTE PTR [ebp-0x30fcd5f7],dl
  406b97:	or     DWORD PTR ds:0xa9099586,ebp
  406b9d:	add    ebx,esi
  406b9f:	or     DWORD PTR [ecx],ebp
  406ba1:	xchg   BYTE PTR [ebp-0x36fc01f7],dl
  406ba7:	or     DWORD PTR [ecx-0x12f5ea7f],ebx
  406bad:	add    edi,ecx
  406baf:	or     DWORD PTR [ecx-0x7f],ebp
  406bb2:	adc    eax,0x4c50a
  406bb7:	add    dh,cl
  406bb9:	or     DWORD PTR ds:0xa1581,esi
  406bbf:	mov    dh,0xd1
  406bc1:	stc    
  406bc2:	dec    DWORD PTR [eax+0x54]
  406bc5:	retf   0x6aff
  406bc8:	rcl    DWORD PTR [eax+eax*1],1
  406bcb:	xor    eax,0x38ffca54
  406bd0:	rcl    DWORD PTR [eax+eax*1],1
  406bd3:	and    DWORD PTR [edx+ecx*8-0x1],edx
  406bd7:	jb     0x406baa
  406bd9:	or     BYTE PTR [eax],al
  406bdb:	sub    DWORD PTR [edx+ecx*8-0x1],edx
  406bdf:	xor    al,0xd1
  406be1:	sti    
  406be2:	(bad)  
  406be3:	mov    esp,0x98ffca55
  406be8:	shl    DWORD PTR [edi],1
  406bea:	add    ch,ah
  406bec:	push   ebp
  406bed:	retf   0xcff
  406bf0:	ror    DWORD PTR [esi],1
  406bf2:	add    BYTE PTR [ebp+0x55],dl
  406bf5:	retf   0xb3ff
  406bf8:	(bad)  
  406bf9:	adc    BYTE PTR [eax],al
  406bfb:	inc    ebp
  406bfc:	push   ebp
  406bfd:	retf   0x6ff
  406c00:	rcl    DWORD PTR [edx],1
  406c02:	add    BYTE PTR [ecx],dl
  406c04:	push   ebp
  406c05:	retf   0x39ff
  406c08:	ror    DWORD PTR ds:0xca553100,1
  406c0e:	dec    DWORD PTR [ecx-0x2f]
  406c11:	idiv   bh
  406c13:	pop    eax
  406c14:	push   ebp
  406c15:	retf   0xafff
  406c18:	(bad)  
  406c19:	push   cs
  406c1a:	add    BYTE PTR [ecx+0x0],cl
  406c1d:	add    BYTE PTR [ebp-0x36],dl
  406c20:	jmp    DWORD PTR [ebp+0x5cfffad6]
  406c26:	push   ebp
  406c27:	retf   0x55ff
  406c2a:	rcl    DWORD PTR [eax+eax*1],1
  406c2d:	imul   edx,DWORD PTR [edx-0x36],0xd6f7ff
  406c34:	add    BYTE PTR [ecx+0x55],cl
  406c37:	leave  
  406c38:	(bad)  
  406c39:	inc    DWORD PTR [esi-0x37fff6f4]
  406c3f:	mov    DWORD PTR [eax+0x0],eax
  406c42:	and    cl,BYTE PTR ds:0x89bc0003
  406c48:	inc    eax
  406c49:	add    BYTE PTR [esp+ecx*1+0xc7c0000],ch
  406c50:	add    BYTE PTR [eax],al
  406c52:	jl     0x406c60
  406c54:	add    BYTE PTR [eax],al
  406c56:	ins    BYTE PTR es:[edi],dx
  406c57:	or     al,0x0
  406c59:	add    BYTE PTR [esp+ecx*1+0x0],ch
  406c5d:	add    BYTE PTR [esp+ecx*1+0x0],bh
  406c61:	add    BYTE PTR [esp+ecx*1+0x0],bh
  406c65:	add    BYTE PTR [esp+ecx*1+0x0],ch
  406c69:	add    BYTE PTR [esp+ecx*1+0x0],ch
  406c6d:	add    BYTE PTR [esp+ecx*1],bh
  406c70:	add    BYTE PTR [eax],al
  406c72:	cmp    al,0x25
  406c74:	add    BYTE PTR [ebx],ah
  406c76:	fsubr  DWORD PTR [edx]
  406c78:	es daa 
  406c7a:	sub    al,0xc
  406c7c:	sub    ch,BYTE PTR [ebx]
  406c7e:	cmp    al,0x1
  406c80:	add    BYTE PTR cs:[eax],al
  406c83:	add    BYTE PTR [edx*1+0x19283332],ch
  406c8a:	ss aaa 
  406c8c:	xor    al,0x2d
  406c8e:	add    BYTE PTR [eax],al
  406c90:	cld    
  406c91:	or     eax,DWORD PTR [eax]
  406c93:	add    ah,bh
  406c95:	fs popa 
  406c97:	arpl   WORD PTR [eax+0x69],bx
  406c9a:	gs addr16 fs cmp eax,0x41606b69
  406ca2:	ins    DWORD PTR es:[edi],dx
  406ca3:	outs   dx,DWORD PTR ds:[esi]
  406ca4:	ins    BYTE PTR es:[edi],dx
  406ca5:	push   ebp
  406ca6:	jno    0x406d1b
  406ca8:	push   0x74777559
  406cad:	je     0x406d28
  406caf:	add    BYTE PTR [ebx+ecx*1-0x2f2aa0a2],bh
  406cb6:	loop   0x406d19
  406cb8:	(bad)
  406cbc:	xor    bh,BYTE PTR [ecx-0x32c19626]
  406cc2:	(bad)  
  406cc3:	ins    DWORD PTR es:[edi],dx
  406cc4:	cmp    ah,BYTE PTR [ecx]
  406cc6:	repz jno 0x406cef
  406cc9:	adc    eax,0x292275ef
  406cce:	jmp    0x406d49
  406cd0:	aad    0xfc
  406cd2:	add    edi,DWORD PTR [esi-0x2b]
  406cd5:	jo     0x406cda
  406cd7:	add    ch,dl
  406cd9:	jo     0x406cde
  406cdb:	add    ch,dl
  406cdd:	jo     0x406ce2
  406cdf:	add    ch,dl
  406ce1:	jo     0x406ce6
  406ce3:	add    ch,dl
  406ce5:	jo     0x406cea
  406ce7:	add    BYTE PTR [eax],al
  406ce9:	add    ch,dl
  406ceb:	jo     0x406cf0
  406ced:	add    ch,dl
  406cef:	jo     0x406cf4
  406cf1:	add    ch,dl
  406cf3:	jo     0x406cf8
  406cf5:	add    ch,dl
  406cf7:	jo     0x406cfc
  406cf9:	add    ch,dl
  406cfb:	jo     0x406d00
  406cfd:	add    ch,dl
  406cff:	jo     0x406d04
  406d01:	add    ch,dl
  406d03:	jo     0x406d08
  406d05:	add    ch,dl
  406d07:	jo     0x406d0c
  406d09:	add    ch,dl
  406d0b:	jo     0x406d10
  406d0d:	add    ch,dl
  406d0f:	jo     0x406d14
  406d11:	add    ch,dl
  406d13:	jo     0x406d18
  406d15:	add    ch,dl
  406d17:	jo     0x406d1c
  406d19:	add    ch,dl
  406d1b:	jo     0x406d20
  406d1d:	add    ch,dl
  406d1f:	jo     0x406d24
  406d21:	add    ch,dl
  406d23:	jo     0x406d28
  406d25:	add    ch,dl
  406d27:	jo     0x406d2c
  406d29:	add    ch,dl
  406d2b:	jo     0x406d30
  406d2d:	add    ch,dl
  406d2f:	or     ecx,ebp
  406d31:	add    edx,ebp
  406d33:	or     ecx,ebp
  406d35:	add    edx,ebp
  406d37:	or     ecx,ebp
  406d39:	add    edx,ebp
  406d3b:	or     ecx,ebp
  406d3d:	add    edx,ebp
  406d3f:	or     ecx,ebp
  406d41:	add    edx,ebp
  406d43:	or     ecx,ebp
  406d45:	add    edx,ebp
  406d47:	or     ecx,ebp
  406d49:	add    edx,ebp
  406d4b:	or     ecx,ebp
  406d4d:	add    eax,DWORD PTR [eax]
  406d4f:	add    ch,dl
  406d51:	or     ecx,ebp
  406d53:	add    edx,ebp
  406d55:	or     ecx,ebp
  406d57:	add    edx,ebp
  406d59:	or     DWORD PTR [esi-0x71a17d98],edx
  406d5f:	push   0x68865e7a
  406d64:	jb     0x406dc4
  406d66:	jle    0x406dd0
  406d68:	push   0x5e
  406d6a:	jbe    0x406dd4
  406d6c:	bound  ebx,QWORD PTR [esi+0x6e]
  406d6f:	push   0x68665e5a
  406d74:	push   edx
  406d75:	pop    esi
  406d76:	pop    esi
  406d77:	push   0x68565e4a
  406d7c:	inc    edx
  406d7d:	pop    esi
  406d7e:	dec    esi
  406d7f:	push   0x68465e3a
  406d84:	xor    bl,BYTE PTR [esi+0x3e]
  406d87:	push   0x2e95e2a
  406d8c:	xlat   BYTE PTR ds:[ebx]
  406d8d:	or     ah,ch
  406d8f:	(bad)  
  406d90:	rol    BYTE PTR [esi],1
  406d92:	icebp  
  406d93:	cli    
  406d94:	adc    ebx,DWORD PTR [esi+0x1e]
  406d97:	push   0xfd165e0a
  406d9c:	iret   
  406d9d:	or     eax,0x5ecbf9dc
  406da2:	push   es
  406da3:	push   0x67fe5df2
  406da8:	jmp    0xff5e:0x7af6005d
  406daf:	out    dx,al
  406db0:	jb     0x406e10
  406db2:	jmp    esi
  406db4:	add    BYTE PTR [eax],al
  406db6:	cmp    bl,BYTE PTR [ebp-0x1]
  406db9:	fidiv  WORD PTR [edx]
  406dbb:	pop    ebp
  406dbc:	call   esi
  406dbe:	mov    edi,0xc0dc0c10
  406dc3:	or     al,0xff
  406dc5:	(bad)  
  406dc6:	cmp    bl,BYTE PTR [ebp-0x1]
  406dc9:	mov    esi,0xb6ff5d32
  406dce:	cmp    bl,BYTE PTR [ebp-0x1]
  406dd1:	scas   al,BYTE PTR es:[edi]
  406dd2:	xor    bl,BYTE PTR [ebp-0x1]
  406dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd6:	cli    
  406dd7:	pop    esp
  406dd8:	call   FWORD PTR [esi-0x1600a30e]
  406dde:	(bad)  
  406ddf:	or     DWORD PTR [eax],eax
  406de1:	jmp    0xe94077bc
  406de6:	(bad)  
  406de7:	or     DWORD PTR [eax],eax
  406de9:	jmp    0xe94077c4
  406dee:	(bad)  
  406def:	or     DWORD PTR [eax],eax
  406df1:	jmp    0xe94077cc
  406df6:	(bad)  
  406df7:	or     DWORD PTR [eax],eax
  406df9:	jmp    0xe94077d4
  406dfe:	(bad)  
  406dff:	or     DWORD PTR [eax],eax
  406e01:	jmp    0xe94077dc
  406e06:	(bad)  
  406e07:	or     DWORD PTR [eax],eax
  406e09:	jmp    0xe94077e4
  406e0e:	(bad)  
  406e0f:	or     DWORD PTR [eax],eax
  406e11:	jmp    0xe94077ec
  406e16:	(bad)  
  406e17:	or     DWORD PTR [eax],eax
  406e19:	jmp    0xa166e1e
  406e1e:	add    cl,ch
  406e20:	(bad)  
  406e21:	or     DWORD PTR [eax],eax
  406e23:	jmp    0x4077fe
  406e28:	cld    
  406e29:	or     BYTE PTR [eax],al
  406e2b:	add    ah,bh
  406e2d:	or     BYTE PTR [eax],al
  406e2f:	add    ah,ch
  406e31:	or     BYTE PTR [eax],al
  406e33:	add    ah,ch
  406e35:	or     BYTE PTR [eax],al
  406e37:	add    BYTE PTR [eax+ecx*1+0x8bc0000],bh
  406e3e:	add    BYTE PTR [eax],al
  406e40:	lods   al,BYTE PTR ds:[esi]
  406e41:	or     BYTE PTR [eax],al
  406e43:	add    BYTE PTR [eax+ecx*1+0x8bc0000],ch
  406e4a:	add    BYTE PTR [eax],al
  406e4c:	mov    esp,0xac000008
  406e51:	or     BYTE PTR [eax],al
  406e53:	add    BYTE PTR [eax+ecx*1+0x87c0000],ch
  406e5a:	add    BYTE PTR [eax],al
  406e5c:	jl     0x406e66
  406e5e:	add    BYTE PTR [eax],al
  406e60:	ins    BYTE PTR es:[edi],dx
  406e61:	or     BYTE PTR [eax],al
  406e63:	add    BYTE PTR [eax+ecx*1+0x0],ch
  406e67:	add    BYTE PTR [eax+ecx*1+0x0],bh
  406e6b:	add    BYTE PTR [eax+ecx*1+0x0],bh
  406e6f:	add    BYTE PTR [eax+ecx*1+0x0],ch
  406e73:	add    BYTE PTR [eax+ecx*1+0x0],ch
  406e77:	add    BYTE PTR [eax+ecx*1],bh
  406e7a:	add    BYTE PTR [eax],al
  406e7c:	cmp    al,0x8
  406e7e:	add    BYTE PTR [eax],al
  406e80:	add    BYTE PTR [eax],al
  406e82:	sub    al,0x5
  406e84:	add    DWORD PTR [eax],eax
  406e86:	sub    eax,0x3d010105
  406e8b:	add    eax,0x53d0101
  406e90:	add    DWORD PTR [ecx],eax
  406e92:	sub    eax,0x2d010105
  406e97:	add    eax,0x4fd0101
  406e9c:	add    DWORD PTR [ecx],eax
  406e9e:	std    
  406e9f:	add    al,0x1
  406ea1:	add    ch,dl
  406ea3:	jno    0x406ea9
  406ea5:	add    esp,edx
  406ea7:	jno    0x406ead
  406ea9:	add    esp,edx
  406eab:	jno    0x406eb1
  406ead:	add    esp,edx
  406eaf:	jno    0x406eb5
  406eb1:	add    esp,edx
  406eb3:	jno    0x406eb9
  406eb5:	add    esp,edx
  406eb7:	jno    0x406ebd
  406eb9:	add    esp,edx
  406ebb:	jno    0x406ebf
  406ebd:	add    esp,edx
  406ebf:	jno    0x406ec3
  406ec1:	add    esp,edx
  406ec3:	jno    0x406ec7
  406ec5:	add    esp,edx
  406ec7:	jno    0x406ecb
  406ec9:	add    esp,edx
  406ecb:	jno    0x406ecf
  406ecd:	add    esp,edx
  406ecf:	jno    0x406ed3
  406ed1:	add    esp,edx
  406ed3:	jno    0x406ed7
  406ed5:	add    esp,edx
  406ed7:	jno    0x406edb
  406ed9:	add    esp,edx
  406edb:	jno    0x406edf
  406edd:	add    esp,edx
  406edf:	jno    0x406ee3
  406ee1:	add    ebp,edx
  406ee3:	jo     0x406ee8
  406ee5:	add    BYTE PTR [eax],al
  406ee7:	add    ch,dl
  406ee9:	jo     0x406eee
  406eeb:	add    ch,dl
  406eed:	jo     0x406ef2
  406eef:	add    ch,dl
  406ef1:	jo     0x406ef6
  406ef3:	add    ch,dl
  406ef5:	jo     0x406efa
  406ef7:	add    ch,dl
  406ef9:	jo     0x406efe
  406efb:	add    ch,dl
  406efd:	jo     0x406f02
  406eff:	add    ch,dl
  406f01:	jo     0x406f06
  406f03:	add    ch,dl
  406f05:	jo     0x406f0a
  406f07:	add    ch,dl
  406f09:	jo     0x406f0e
  406f0b:	add    ch,dl
  406f0d:	jo     0x406f12
  406f0f:	add    ch,dl
  406f11:	jo     0x406f16
  406f13:	add    ch,dl
  406f15:	jo     0x406f1a
  406f17:	add    ch,dl
  406f19:	jo     0x406f1e
  406f1b:	add    ch,dl
  406f1d:	or     ecx,ebp
  406f1f:	add    edx,ebp
  406f21:	or     ecx,ebp
  406f23:	add    edx,ebp
  406f25:	or     ecx,ebp
  406f27:	add    edx,ebp
  406f29:	or     ecx,ebp
  406f2b:	add    edx,ebp
  406f2d:	or     ecx,ebp
  406f2f:	add    edx,ebp
  406f31:	or     ecx,ebp
  406f33:	add    edx,ebp
  406f35:	or     ecx,ebp
  406f37:	add    edx,ebp
  406f39:	or     ecx,ebp
  406f3b:	add    edx,ebp
  406f3d:	or     ecx,ebp
  406f3f:	add    edx,ebp
  406f41:	or     ecx,ebp
  406f43:	add    edx,ebp
  406f45:	or     ecx,ebp
  406f47:	add    edx,ebp
  406f49:	or     ecx,ebp
  406f4b:	add    eax,DWORD PTR [eax]
  406f4d:	add    ch,dl
  406f4f:	or     ecx,ebp
  406f51:	add    edx,ebp
  406f53:	or     ecx,ebp
  406f55:	add    edx,ebp
  406f57:	or     ecx,ebp
  406f59:	add    edx,ebp
  406f5b:	or     ecx,ebp
  406f5d:	add    edx,ebp
  406f5f:	or     ecx,ebp
  406f61:	add    edx,ebp
  406f63:	or     ecx,ebp
  406f65:	add    edx,ebp
  406f67:	or     DWORD PTR [eax+edx*1],esi
  406f6a:	push   ebx
  406f6b:	retf   0xcb2
  406f6e:	test   DWORD PTR [edx],esp
  406f70:	mov    ebp,ebp
  406f72:	cmp    BYTE PTR [edx+0x2ef44e1b],ch
  406f78:	adc    DWORD PTR [eax*4-0x2af798b1],esp
  406f7f:	mov    esp,0x724f533e
  406f84:	cmp    ch,BYTE PTR [ebp+0x52]
  406f87:	scas   eax,DWORD PTR es:[edi]
  406f88:	jg     0x406f1b
  406f8a:	xchg   DWORD PTR [edx],eax
  406f8c:	repz dec edx
  406f8e:	add    BYTE PTR [edi],dl
  406f90:	xchg   esp,eax
  406f91:	dec    BYTE PTR [ebp-0x6e886653]
  406f97:	popf   
  406f98:	add    BYTE PTR [eax],bh
  406f9a:	add    ah,BYTE PTR [edi+0x58a7eee6]
  406fa0:	aad    0x44
  406fa2:	inc    edi
  406fa3:	call   0x338bb62d
  406fa8:	push   ebx
  406fa9:	(bad)  
  406faa:	test   al,0x81
  406fac:	xor    eax,DWORD PTR [ebp-0x2a]
  406faf:	arpl   WORD PTR [ecx+edi*4+0x0],bp
  406fb3:	add    BYTE PTR [edx+0x185e398b],ch
  406fb9:	mov    DWORD PTR [ecx*4+0x22494b73],ebx
  406fc0:	push   eax
  406fc1:	mov    ebp,0x27e97be4
  406fc6:	aad    0x96
  406fc8:	pop    ecx
  406fc9:	pop    ss
  406fca:	xor    BYTE PTR [edi],bh
  406fcc:	cwde   
  406fcd:	ret    0x2c5d
  406fd0:	jbe    0x406fcb
  406fd2:	or     cl,cl
  406fd4:	(bad)  [edi]
  406fd6:	mov    es,WORD PTR [edx+ebp*1+0x3fd6fe7d]
  406fdd:	(bad)  
  406fde:	in     eax,0x91
  406fe0:	lahf   
  406fe1:	xchg   ebp,eax
  406fe2:	cmp    eax,0x77787cca
  406fe7:	out    dx,al
  406fe8:	adc    al,0x7e
  406fea:	int3   
  406feb:	sar    BYTE PTR [ebp+0x23da33d1],0xaf
  406ff2:	or     al,0x25
  406ff4:	or     BYTE PTR [edi-0x5b649759],ah
  406ffa:	cmc    
  406ffb:	dec    esp
  406ffc:	jo     0x406fcc
  406ffe:	enter  0x86a3,0x9b
  407002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407003:	jb     0x34ffc092
  407009:	test   al,0xec
  40700b:	jae    0x407023
  40700d:	xchg   esi,eax
  40700e:	dec    edi
  40700f:	xor    bl,BYTE PTR [ebx+0x48008a9c]
  407015:	cmc    
  407016:	sbb    BYTE PTR [eax+0x18f20000],dh
  40701c:	jmp    0xaead8c35
  407021:	xor    BYTE PTR [edi-0x375c4bd7],bl
  407027:	mov    esi,0x96e0d032
  40702c:	std    
  40702d:	jae    0x406fbd
  40702f:	nop
  407030:	lahf   
  407031:	dec    esp
  407032:	aam    0x76
  407034:	jne    0x407073
  407036:	das    
  407037:	je     0x406fe1
  407039:	xor    edx,DWORD PTR [di-0x5d]
  40703d:	lods   eax,DWORD PTR ds:[esi]
  40703e:	jo     0x40701a
  407040:	jge    0x40704d
  407042:	ret    0x3abc
  407045:	push   ss
  407046:	mov    ch,0xa1
  407048:	push   esp
  407049:	cld    
  40704a:	adc    al,0x86
  40704c:	mov    WORD PTR [ecx],es
  40704e:	xchg   edx,eax
  40704f:	xor    dh,BYTE PTR [eax+0x27]
  407052:	pop    esi
  407053:	sbb    al,0xf0
  407055:	sbb    BYTE PTR [eax],dh
  407057:	push   edi
  407058:	test   BYTE PTR [ebx+0xc58d6cf],dl
  40705e:	outs   dx,DWORD PTR ds:[esi]
  40705f:	ret    0x2437
  407062:	xlat   BYTE PTR ds:[ebx]
  407063:	xchg   esi,eax
  407064:	mov    cl,0xd
  407066:	sbb    eax,0x208d65ce
  40706b:	or     BYTE PTR [edx],al
  40706d:	pusha  
  40706e:	and    BYTE PTR [edi],bl
  407070:	dec    eax
  407071:	enter  0xb3be,0x3f
  407075:	push   edi
  407076:	lds    esi,FWORD PTR [eax+eiz*2]
  407079:	push   ss
  40707a:	es fs jle 0x4070e5
  40707e:	add    BYTE PTR [eax],al
  407080:	lods   eax,DWORD PTR ds:[esi]
  407081:	inc    eax
  407082:	je     0x407033
  407084:	mov    ah,0x57
  407086:	sbb    dh,BYTE PTR [ecx+0x41]
  407089:	mov    al,ds:0x5c23df7e
  40708e:	xchg   ebx,eax
  40708f:	jns    0x407066
  407091:	dec    esp
  407092:	dec    eax
  407093:	test   DWORD PTR [eax-0x5a197c70],esi
  407099:	jne    0x4070eb
  40709b:	(bad)  
  40709c:	or     dh,BYTE PTR [eax-0x421dcfb3]
  4070a2:	es push 0xffffffb4
  4070a5:	inc    edi
  4070a6:	jp     0x4070dc
  4070a8:	dec    ecx
  4070a9:	test   DWORD PTR [eax-0x76],esi
  4070ac:	pop    eax
  4070ad:	shr    eax,0x4e
  4070b0:	retf   0x1386
  4070b3:	xor    DWORD PTR [di-0x294f],0x5294bf63
  4070bc:	jns    0x407079
  4070be:	pop    edx
  4070bf:	pop    ebp
  4070c0:	fdiv   DWORD PTR [ecx]
  4070c2:	sbb    al,0xf1
  4070c4:	add    BYTE PTR [ebx+0x5],al
  4070c7:	or     ecx,edi
  4070c9:	int3   
  4070ca:	repnz mov edi,0x85c0bf5f
  4070d0:	xor    DWORD PTR [edi-0x74463161],ebp
  4070d6:	and    eax,0xe7044690
  4070db:	add    BYTE PTR [edx+0x713908e2],bh
  4070e1:	cld    
  4070e2:	rol    esi,cl
  4070e4:	add    BYTE PTR [eax],al
  4070e6:	xchg   ebx,eax
  4070e7:	pop    es
  4070e8:	dec    eax
  4070e9:	xchg   ecx,eax
  4070ea:	call   0x79e2567
  4070ef:	out    dx,eax
  4070f0:	inc    ebx
  4070f1:	(bad)  
  4070f2:	mov    edx,0x3ee59b1a
  4070f7:	add    ah,BYTE PTR [ecx-0x1c]
  4070fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070fb:	lods   al,BYTE PTR ds:[esi]
  4070fc:	pop    edi
  4070fd:	add    DWORD PTR [ebp+ebp*4-0x77],eax
  407101:	or     BYTE PTR [edi],cl
  407103:	mov    ch,0x19
  407105:	mov    ds:0xbc1d6a08,al
  40710a:	add    al,0xa
  40710c:	mov    edi,0x7f6237eb
  407111:	ins    BYTE PTR es:[edi],dx
  407112:	repnz bound edx,QWORD PTR [eax-0x4df0788]
  407119:	retf   
  40711a:	sbb    al,0xe9
  40711c:	call   0xd68aa3f
  407121:	aas    
  407122:	into   
  407123:	mov    esp,0xff759902
  407128:	hlt    
  407129:	enter  0x4a1,0x3a
  40712d:	add    edi,DWORD PTR [ebx]
  40712f:	jo     0x407134
  407131:	push   ss
  407132:	retf   
  407133:	sbb    edi,DWORD PTR [ebp+edx*1+0x15951b8d]
  40713a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713b:	retf   0xddf8
  40713e:	lods   eax,DWORD PTR ds:[esi]
  40713f:	mov    ebp,DWORD PTR [ecx-0x64]
  407142:	lods   al,BYTE PTR ds:[esi]
  407143:	fisubr DWORD PTR [esi]
  407145:	ss jno 0x4070f4
  407148:	add    al,0x93
  40714a:	add    BYTE PTR [eax],al
  40714c:	push   esi
  40714d:	pop    edx
  40714e:	test   eax,0xc8a6da29
  407153:	int    0xf1
  407155:	rcr    DWORD PTR [ecx],cl
  407157:	cmp    al,dl
  407159:	arpl   di,bx
  40715b:	bswap  ebp
  40715d:	aad    0xbc
  40715f:	mov    cl,0x14
  407161:	pop    ebp
  407162:	cmp    esi,0x2f
  407165:	dec    esp
  407166:	sbb    esp,edx
  407168:	out    0x5f,eax
  40716a:	fs js  0x40711f
  40716d:	leave  
  40716e:	or     esi,edi
  407170:	jmp    0x407112
  407172:	or     eax,0x4e808695
  407177:	jmp    0x4071d1
  407179:	xor    DWORD PTR [eax+0x7c],edx
  40717c:	in     al,dx
  40717d:	push   ebp
  40717e:	ret    0x6e06
  407181:	pop    edi
  407182:	and    DWORD PTR [ecx-0x3f001aa6],ebx
  407188:	jmp    0x9a658e11
  40718d:	add    DWORD PTR [edx-0x43],edi
  407190:	out    dx,eax
  407191:	dec    ecx
  407192:	arpl   WORD PTR [eax-0x357b06fd],cx
  407198:	fwait
  407199:	out    0x85,al
  40719b:	cwde   
  40719c:	and    DWORD PTR [eax-0x2d0aa108],ebp
  4071a2:	arpl   bp,dx
  4071a4:	ret    0x33f5
  4071a7:	or     eax,0xf53425ed
  4071ac:	loop   0x4071c3
  4071ae:	xor    al,0xad
  4071b0:	add    BYTE PTR [eax],al
  4071b2:	jmp    0xa9b5:0xe2b533c5
  4071b9:	aas    
  4071ba:	loopne 0x40718a
  4071bc:	call   0x3cff13ff
  4071c1:	aad    0x4e
  4071c3:	icebp  
  4071c4:	retf   
  4071c5:	stos   DWORD PTR es:[edi],eax
  4071c6:	clc    
  4071c7:	mov    eax,0x2527fc66
  4071cc:	push   esi
  4071cd:	lahf   
  4071ce:	sti    
  4071cf:	xor    esp,DWORD PTR [ebx-0xaa46b3]
  4071d5:	cmp    ecx,edx
  4071d7:	or     DWORD PTR [eax],eax
  4071d9:	in     eax,dx
  4071da:	(bad)  
  4071db:	in     eax,dx
  4071dc:	xor    al,BYTE PTR [ecx-0x3a]
  4071df:	fnstenv [edx]
  4071e1:	cmp    eax,0x8732d1c6
  4071e6:	xor    eax,0x970959d7
  4071eb:	pop    fs
  4071ed:	cmp    cl,cl
  4071ef:	daa    
  4071f0:	mov    dl,al
  4071f2:	scas   al,BYTE PTR es:[edi]
  4071f3:	push   ds
  4071f4:	inc    esi
  4071f5:	pop    ebp
  4071f6:	int3   
  4071f7:	sub    esp,edx
  4071f9:	mov    al,0x2e
  4071fb:	test   al,0x3a
  4071fd:	in     al,dx
  4071fe:	fcom   st(5)
  407200:	xor    eax,DWORD PTR [eax]
  407202:	lock icebp 
  407204:	mov    esi,DWORD PTR [eax+eax*1]
  407207:	repnz fwait
  407209:	xor    al,0xa0
  40720b:	icebp  
  40720c:	stos   DWORD PTR es:[edi],eax
  40720d:	xor    al,0x0
  40720f:	repnz mov ebx,0xa0a5f034
  407215:	test   eax,0xe9580000
  40721a:	jno    0x407209
  40721c:	pop    esi
  40721d:	add    ebx,ebx
  40721f:	out    dx,eax
  407220:	imul   eax,edx,0x41
  407223:	jns    0x407204
  407225:	mov    ds:0x755fe8eb,eax
  40722a:	inc    al
  40722c:	jg     0x4071bb
  40722e:	push   ebx
  40722f:	xor    al,0xdc
  407231:	icebp  
  407232:	ret    
  407233:	xor    al,0xc4
  407235:	icebp  
  407236:	retf   
  407237:	xor    al,0xbc
  407239:	icebp  
  40723a:	add    esi,DWORD PTR ds:0x36b7f1f4
  407240:	mov    esp,0x91cfd1fc
  407245:	sub    BYTE PTR ds:0x86e5ba8b,0xa7
  40724c:	les    ecx,FWORD PTR [edi+0x5298683c]
  407252:	cmp    DWORD PTR [eax+0x79ecfa19],edi
  407258:	or     bl,dh
  40725a:	loopne 0x40727b
  40725c:	fdiv   st,st(5)
  40725e:	inc    edi
  40725f:	cmp    BYTE PTR [ecx],dh
  407261:	icebp  
  407262:	xchg   ebp,eax
  407263:	cmp    BYTE PTR [edi+ebp*8-0xfdbc4aa],dh
  40726a:	(bad)  
  40726b:	cmp    ecx,DWORD PTR [ebx-0x25b3d0c]
  407271:	cdq    
  407272:	xor    DWORD PTR [ebx+0x39],esp
  407275:	push   ss
  407276:	test   al,0x7
  407278:	leave  
  407279:	jmp    0x86d5:0xcccc
  407280:	arpl   WORD PTR [ebp+0x763af01b],sp
  407286:	ror    DWORD PTR [esi],1
  407288:	clc    
  407289:	int    0x37
  40728b:	nop
  40728c:	push   ds
  40728d:	mov    dl,BYTE PTR [edx]
  40728f:	pop    ds
  407290:	push   ds
  407291:	ror    BYTE PTR [edx],1
  407293:	test   DWORD PTR [esi],ebx
  407295:	add    ch,dl
  407297:	bound  esp,QWORD PTR [ebx+0x382d500]
  40729d:	add    ch,dl
  40729f:	ffree  st(2)
  4072a1:	jmp    0x4072dd
  4072a3:	xor    DWORD PTR [ecx+0x352e126e],eax
  4072a9:	leave  
  4072aa:	(bad)  
  4072ab:	jbe    0x4072b0
  4072ad:	sbb    cl,cl
  4072af:	mov    ecx,0x42876b8c
  4072b4:	adc    BYTE PTR [eax-0x3d10b3ca],bh
  4072ba:	shl    DWORD PTR [ecx+0x18],0x61
  4072be:	test   al,0xee
  4072c0:	pop    ss
  4072c1:	fwait
  4072c2:	mov    al,ds:0xab6f1803
  4072c7:	lds    edx,FWORD PTR [esi*1-0x78accd5e]
  4072ce:	pop    esi
  4072cf:	jecxz  0x40726f
  4072d1:	mov    WORD PTR [ebx],fs
  4072d3:	scas   eax,DWORD PTR es:[edi]
  4072d4:	or     esp,0xffffffb2
  4072d7:	stc    
  4072d8:	xor    eax,0x3b1dc560
  4072dd:	leave  
  4072de:	add    DWORD PTR ds:0x44df,edi
  4072e4:	mov    DWORD PTR [esi+0x1c],0x1b77dcd4
  4072eb:	(bad)  
  4072ed:	xchg   edx,eax
  4072ee:	sbb    edx,DWORD PTR [edx]
  4072f0:	iret   
  4072f1:	cmp    DWORD PTR [ecx],ebx
  4072f3:	and    al,0xcf
  4072f5:	dec    esi
  4072f6:	sbb    DWORD PTR [ebx-0x41],ebp
  4072f9:	or     DWORD PTR [ecx+0x1a],esi
  4072fc:	sbb    esp,DWORD PTR [ebx-0x7d4d9b9a]
  407302:	jb     0x40732b
  407304:	sbb    bh,0x50
  407307:	jmp    0x745241a3
  40730c:	add    ebp,ebp
  40730e:	inc    ebp
  40730f:	mov    cl,0x5f
  407311:	and    DWORD PTR [ebx+edi*4+0x46],eax
  407315:	out    dx,eax
  407316:	lea    esp,[eax]
  407318:	inc    edi
  407319:	push   ss
  40731a:	popa   
  40731b:	and    BYTE PTR [edi],al
  40731d:	adc    eax,0x14b91ea6
  407322:	xchg   ecx,eax
  407323:	pop    ds
  407324:	add    edx,DWORD PTR ds:0xa4e51e06
  40732a:	inc    edx
  40732b:	aaa    
  40732c:	mov    edi,0x5422878b
  407331:	push   esi
  407332:	and    al,0xcb
  407334:	leave  
  407335:	dec    eax
  407336:	lock push cs
  407338:	pop    ds
  407339:	in     eax,0xa
  40733b:	aad    0xd3
  40733d:	icebp  
  40733e:	in     al,dx
  40733f:	imul   ebp,DWORD PTR [ecx],0xffffffa9
  407342:	mov    ebp,0x8519ac13
  407347:	adc    eax,DWORD PTR [eax]
  407349:	add    BYTE PTR [ecx+0x19],dh
  40734c:	push   eax
  40734d:	adc    al,0xdb
  40734f:	sbb    esp,esp
  407351:	adc    ah,dl
  407353:	sbb    BYTE PTR [ebx-0x7e6d1ee],bl
  407359:	sbb    ah,0x37
  40735c:	(bad)  
  40735d:	cdq    
  40735e:	push   es
  40735f:	addr16 push ecx
  407361:	and    al,0xe5
  407363:	int    0x3f
  407365:	dec    ebp
  407366:	repnz arpl WORD PTR ds:0x699cedf0,di
  40736d:	fild   WORD PTR [esp+ebp*8+0x72]
  407371:	ror    BYTE PTR [ebp-0x1b1dffe8],cl
  407377:	div    DWORD PTR [ecx]
  407379:	shl    esp,cl
  40737b:	mov    dl,0x31
  40737d:	pop    ebx
  40737e:	in     al,0x94
  407380:	xor    bl,BYTE PTR [edx-0x3b]
  407383:	(bad)  
  407384:	xor    edi,DWORD PTR [edi]
  407386:	add    ch,dh
  407388:	cmp    DWORD PTR [edi+esi*8],esp
  40738b:	mov    edx,DWORD PTR [ebp+0x1439ad35]
  407391:	add    edi,0xffffffb3
  407394:	mov    cl,0x46
  407396:	repz fcmovnu st,st(7)
  407399:	mov    esi,0xd572981d
  40739e:	sub    bh,BYTE PTR [ebp+0x37]
  4073a1:	add    cl,dl
  4073a3:	in     eax,dx
  4073a4:	aaa    
  4073a5:	(bad)  
  4073a6:	into   
  4073a7:	xor    edi,DWORD PTR [eax]
  4073a9:	inc    eax
  4073aa:	mov    esi,0x6e3915
  4073af:	add    BYTE PTR [edi-0x10cbc66c],bh
  4073b5:	xor    ch,BYTE PTR [ebx-0x28]
  4073b8:	les    ebx,FWORD PTR [ecx+0x5642f15]
  4073be:	push   cs
  4073bf:	enter  0x2790,0xda
  4073c3:	push   edx
  4073c4:	sub    bh,bl
  4073c6:	push   ecx
  4073c7:	jnp    0x4073fb
  4073c9:	jmp    0xf570:0xf1619a4c
  4073d0:	mov    eax,0xf0b23dc9
  4073d5:	jns    0x407415
  4073d7:	or     ebp,eax
  4073d9:	push   cs
  4073da:	aas    
  4073db:	jmp    0x69407df6
  4073e0:	ror    DWORD PTR [ecx],1
  4073e2:	xor    BYTE PTR ds:0x82bd9778,0x10
  4073e9:	push   esi
  4073ea:	jge    0x40745e
  4073ec:	iret   
  4073ed:	push   ebx
  4073ee:	mov    al,0x0
  4073f0:	and    DWORD PTR [esi+0x7ad27926],0x2c
  4073f7:	pop    esi
  4073f8:	rcl    BYTE PTR gs:[edi+0x2bf92b88],cl
  4073ff:	xor    al,0x99
  407401:	add    DWORD PTR [ebp-0x1105d0cc],eax
  407407:	xor    al,0x64
  407409:	cli    
  40740a:	and    dh,BYTE PTR ds:0x35b2faec
  407410:	or     DWORD PTR [ecx+0x9285],0xd40d549a
  40741a:	sbb    bl,bl
  40741c:	push   0xc72a200e
  407421:	push   ss
  407422:	daa    
  407423:	mov    bl,0x64
  407425:	dec    edx
  407426:	clc    
  407427:	inc    esp
  407428:	jns    0x4073cb
  40742a:	xor    DWORD PTR ds:0xeddf3879,edi
  407430:	add    eax,0x6dedfd39
  407435:	cmp    DWORD PTR [ebp-0x11],edx
  407438:	jmp    0x333a:0x21ef2b39
  40743f:	push   eax
  407440:	and    DWORD PTR [ebx],ecx
  407442:	cmp    DWORD PTR [edx+esi*2-0x79734481],ecx
  407449:	pop    edi
  40744a:	int    0x4e
  40744c:	sub    bl,BYTE PTR [esi-0x6c819a]
  407452:	cs xchg ebx,eax
  407454:	jge    0x40746c
  407456:	cmp    al,0xc
  407458:	push   esp
  407459:	aas    
  40745a:	and    ch,dh
  40745c:	test   eax,0x1cac3f
  407461:	add    BYTE PTR [esi+eax*1],cl
  407464:	add    BYTE PTR [eax],al
  407466:	mov    esp,0xd53047fc
  40746b:	retf   0x7e13
  40746e:	push   edi
  40746f:	push   ebx
  407470:	nop
  407471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407472:	lods   al,BYTE PTR ds:[esi]
  407473:	push   ebx
  407474:	jnp    0x407402
  407476:	push   cs
  407477:	repnz adc edi,DWORD PTR [eax+eax*1]
  40747b:	add    dl,ah
  40747d:	xlat   BYTE PTR ds:[ebx]
  40747e:	loope  0x407473
  407480:	ds mov bh,0x60
  407483:	cwde   
  407484:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407486:	xchg   ebx,eax
  407487:	ins    BYTE PTR es:[edi],dx
  407488:	adc    eax,0xa60e1582
  40748d:	or     DWORD PTR [edi],edx
  40748f:	test   eax,0x7169ca6
  407494:	mov    eax,ds:0x98f0ffc
  407499:	int3   
  40749a:	push   cs
  40749b:	sti    
  40749c:	ds repnz sub edi,ebx
  4074a0:	out    dx,eax
  4074a1:	mov    edi,0x914f81c6
  4074a6:	imul   edi,DWORD PTR [eax],0xd
  4074a9:	das    
  4074aa:	mov    ah,BYTE PTR [ecx-0x64f55043]
  4074b0:	pop    ecx
  4074b1:	loope  0x4074b8
  4074b3:	push   ecx
  4074b4:	call   0x17ca:0xd0d21776
  4074bb:	pusha  
  4074bc:	retf   0x1a45
  4074bf:	add    ch,dl
  4074c1:	bound  esp,QWORD PTR [ebx+0x0]
  4074c4:	aad    0xf6
  4074c6:	add    al,BYTE PTR [eax]
  4074c8:	aad    0x31
  4074ca:	and    BYTE PTR [esi+eiz*4+0x15],0x15
  4074cf:	push   ds
  4074d0:	in     eax,0x27
  4074d2:	and    al,0xa3
  4074d4:	jbe    0x4074d6
  4074d6:	xor    BYTE PTR [ebx+0x56],al
  4074d9:	pop    edx
  4074da:	push   ss
  4074db:	pop    eax
  4074dc:	sbb    ecx,DWORD PTR [ebp+0x28]
  4074df:	sti    
  4074e0:	add    BYTE PTR [eax],al
  4074e2:	dec    edi
  4074e3:	call   0x1610:0xa070001
  4074ea:	and    ebx,DWORD PTR [esi+esi*1]
  4074ed:	push   ss
  4074ee:	or     ebx,DWORD PTR [ecx+eax*2]
  4074f1:	push   ss
  4074f2:	and    al,0x1c
  4074f4:	push   0x16
  4074f6:	inc    ecx
  4074f7:	sbb    al,0x63
  4074f9:	push   ebx
  4074fa:	mov    ebp,0x7f98efe1
  4074ff:	mov    cl,0xc8
  407501:	pop    ss
  407502:	sti    
  407503:	repnz pop ebp
  407505:	pop    ds
  407506:	xor    ah,bl
  407508:	sub    bh,dl
  40750a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40750b:	sbb    al,0x7c
  40750d:	in     eax,dx
  40750e:	xchg   esi,eax
  40750f:	xlat   BYTE PTR ds:[ebx]
  407510:	dec    esp
  407511:	xchg   DWORD PTR [eax-0x19ead1e6],esp
  407517:	sbb    al,BYTE PTR [ebx]
  407519:	adc    eax,0x15701b55
  40751e:	pop    edx
  40751f:	sbb    ebp,DWORD PTR [ecx-0x66e4e4eb]
  407525:	mov    edi,0x219d5d74
  40752a:	lock mov fs,ecx
  40752d:	aam    0x43
  40752f:	mov    al,ds:0xdf279bc9
  407534:	aad    0x42
  407536:	pop    edx
  407537:	dec    ebp
  407538:	and    ecx,eax
  40753a:	dec    esp
  40753b:	or     DWORD PTR [ebx+0x63ad5f5d],0xffffff83
  407542:	stos   DWORD PTR es:[edi],eax
  407543:	cmp    eax,0x19f9
  407548:	jbe    0x4074e8
  40754a:	cs into 
  40754c:	out    dx,eax
  40754d:	ins    DWORD PTR es:[edi],dx
  40754e:	jae    0x407506
  407550:	or     al,0xf7
  407552:	sbb    eax,0x22dde754
  407557:	ja     0x407516
  407559:	xor    ah,BYTE PTR [eax]
  40755b:	mov    ebp,DWORD PTR [eax+ecx*2-0x739bd38a]
  407562:	add    BYTE PTR [esi-0x80],bl
  407565:	xor    DWORD PTR [ebp+0x16],esi
  407568:	out    0x35,al
  40756a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40756b:	repz and esp,ecx
  40756e:	stos   BYTE PTR es:[edi],al
  40756f:	inc    esp
  407570:	mov    BYTE PTR [edi+0x8d6e9b5],bl
  407576:	add    ecx,ebp
  407578:	(bad)  
  407579:	or     DWORD PTR [eax],eax
  40757b:	jmp    0xe8407f56
  407580:	xlat   BYTE PTR ds:[ebx]
  407581:	or     DWORD PTR [eax],eax
  407583:	jmp    0xe543815f
  407588:	jnp    0x40758e
  40758a:	pop    es
  40758b:	icebp  
  40758c:	fild   WORD PTR [ebx]
  40758e:	or     ebp,ebp
  407590:	sar    edi,cl
  407592:	push   cs
  407593:	stc    
  407594:	addr16 clc 
  407596:	adc    dh,ch
  407598:	imul   esi,esp,0x16
  40759b:	loope  0x4075ec
  40759d:	lock sbb bl,ch
  4075a0:	inc    ebx
  4075a1:	in     al,dx
  4075a2:	push   ds
  4075a3:	leave  
  4075a4:	imul   DWORD PTR [ebx]
  4075a6:	and    eax,ebp
  4075a8:	(bad)  [edi]
  4075aa:	daa    
  4075ab:	adc    DWORD PTR [eax],eax
  4075ad:	add    dh,bh
  4075af:	and    ebp,DWORD PTR [ebx]
  4075b1:	or     eax,0x192f1ff2
  4075b6:	(bad)  
  4075b7:	sbb    esi,DWORD PTR [ebx]
  4075b9:	adc    eax,0x13717ca
  4075be:	out    dx,al
  4075bf:	adc    edi,DWORD PTR [ebx]
  4075c1:	std    
  4075c2:	jecxz  0x4075d3
  4075c4:	aas    
  4075c5:	test   eax,0xc562e7f7
  4075ca:	sbb    esp,esp
  4075cc:	xchg   cx,ax
  4075ce:	(bad)  
  4075cf:	fild   QWORD PTR [edx-0x73]
  4075d2:	repz fld TBYTE PTR [esi-0x67]
  4075d6:	pop    es
  4075d7:	fdiv   DWORD PTR [edx-0x6b]
  4075da:	or     edx,esp
  4075dc:	jbe    0x4075de
  4075de:	push   esp
  4075df:	xor    BYTE PTR [ecx+0x5b],bh
  4075e2:	push   0x4c5f5d94
  4075e7:	push   0x2c506361
  4075ec:	gs addr16 add al,0x5f
  4075f0:	imul   ebp,DWORD PTR [ebx+0x18],0xfc6f6d63
  4075f7:	ss jno 0x40766d
  4075fa:	add    BYTE PTR [ebx],bh
  4075fc:	jne    0x407675
  4075fe:	adc    al,0x2f
  407600:	jns    0x40767d
  407602:	enter  0x7d32,0x7f
  407606:	in     al,dx
  407607:	xchg   BYTE PTR [edx-0x79750f7d],al
  40760d:	xchg   esp,esp
  40760f:	jle    0x40759b
  407611:	mov    eax,DWORD PTR [eax]
  407613:	add    al,bh
  407615:	or     BYTE PTR [esi-0x6e292371],0x93
  40761c:	loopne 0x4075f8
  40761e:	xchg   ebp,eax
  40761f:	xchg   edi,eax
  407620:	mov    ah,0xce
  407622:	cdq    
  407623:	fwait
  407624:	test   al,0xd2
  407626:	popf   
  407627:	lahf   
  407628:	mov    WORD PTR [esi-0x556f5c5e],fs
  40762e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40762f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407630:	inc    esp
  407631:	lahf   
  407632:	stos   BYTE PTR es:[edi],al
  407633:	stos   DWORD PTR es:[edi],eax
  407634:	pop    eax
  407635:	mov    ds:0x773cafae,eax
  40763a:	mov    dl,0xb3
  40763c:	inc    eax
  40763d:	jnp    0x4075f5
  40763f:	mov    bh,0x54
  407641:	outs   dx,DWORD PTR ds:[esi]
  407642:	mov    edx,0xbe7288bb
  407647:	mov    edi,0xc3c1c6ac
  40764c:	mov    al,0xca
  40764e:	(bad)
  407651:	mov    esi,0xc2b8cbc9
  407656:	int    0xcf
  407658:	aad    0x12
  40765a:	xor    eax,0x311706d2
  40765f:	(bad)  
  407660:	stos   BYTE PTR es:[edi],al
  407661:	sub    bh,BYTE PTR ds:0x38eeaeda
  407667:	fisub  WORD PTR [edx-0x491d9afe]
  40766d:	push   es
  40766e:	popa   
  40766f:	out    0xba,al
  407671:	cmp    ch,BYTE PTR [edx+ebp*8-0x42]
  407675:	ds push 0xb20000ee
  40767b:	xor    dl,BYTE PTR [edx+esi*8-0x5a]
  40767f:	ss push eax
  407681:	test   BYTE PTR [edx-0x7105a3b6],0x8e
  407688:	pop    eax
  407689:	inc    BYTE PTR [edx-0x29fdfb9e]
  40768f:	data16 add BYTE PTR [esi],al
  407692:	ficomp DWORD PTR [edx+0xc]
  407695:	or     bl,dh
  407697:	pop    esi
  407698:	or     BYTE PTR [esi],cl
  40769a:	rcl    BYTE PTR [edx-0xc],cl
  40769d:	adc    esi,eax
  40769f:	push   esi
  4076a0:	lock adc eax,0x19fc6aea
  4076a6:	out    dx,al
  4076a7:	cs clc 
  4076a9:	sbb    eax,0x222442e2
  4076ae:	test   BYTE PTR [esi+0x20],0x26
  4076b2:	cli    
  4076b3:	cli    
  4076b4:	sub    al,0x2a
  4076b6:	(bad)  
  4076b7:	(bad)  
  4076b8:	sub    BYTE PTR [esi],ch
  4076ba:	repnz repnz adc al,0x32
  4076be:	out    0xf6,al
  4076c0:	adc    BYTE PTR [esi],dh
  4076c2:	retf   0x1d0a
  4076c5:	cmp    cl,dh
  4076c7:	dec    esi
  4076c8:	sbb    BYTE PTR [esi],bh
  4076ca:	ret    0xe4a2
  4076cd:	popa   
  4076ce:	jbe    0x407716
  4076d0:	loopne 0x407737
  4076d2:	jp     0x4076dd
  4076d4:	xchg   ecx,eax
  4076d5:	in     al,dx
  4076d6:	jl     0x4076b8
  4076d8:	mov    eax,gs
  4076da:	jo     0x4076b8
  4076dc:	cwde   
  4076dd:	aam    0x0
  4076df:	add    BYTE PTR [eax+ebx*8-0x6c],ah
  4076e3:	ror    BYTE PTR [eax-0x2d],1
  4076e6:	sbb    ah,0x4c
  4076e9:	scas   eax,DWORD PTR es:[edi]
  4076ea:	pushf  
  4076eb:	mov    eax,0xc488ab20
  4076f0:	adc    al,0xc7
  4076f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f3:	rcr    BYTE PTR [eax],0xc3
  4076f6:	xor    bl,cl
  4076f8:	sbb    al,0xbf
  4076fa:	sub    al,0xc7
  4076fc:	adc    BYTE PTR [ebx-0x48fb4cc8],bh
  407702:	xor    al,0xaf
  407704:	sub    BYTE PTR [ebx-0x30d344e0],dh
  40770a:	cmp    al,0xd7
  40770c:	add    bl,cl
  40770e:	push   0x65875783
  407713:	jg     0x407770
  407715:	xor    DWORD PTR [ecx-0x75],0x5f
  407719:	jg     0x407788
  40771b:	xchg   DWORD PTR [ebx+0x7b],edx
  40771e:	jns    0x407793
  407720:	inc    edi
  407721:	ja     0x407798
  407723:	outs   dx,DWORD PTR ds:[esi]
  407724:	imul   esi,DWORD PTR [ebx+0x61],0x7b
  407728:	outs   dx,DWORD PTR ds:[esi]
  407729:	outs   dx,DWORD PTR ds:[esi]
  40772a:	pop    ebp
  40772b:	ja     0x407790
  40772d:	imul   ecx,DWORD PTR [ecx-0x5d],0x77
  407731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407732:	inc    ebp
  407733:	lahf   
  407734:	jnp    0x4076d9
  407736:	xchg   ecx,eax
  407737:	stos   DWORD PTR es:[edi],eax
  407738:	jg     0x4076d9
  40773a:	lea    esp,[edi-0x6c66648d]
  407740:	addr16 xchg edi,eax
  407742:	xchg   ebp,eax
  407743:	pop    DWORD PTR [eax]
  407745:	add    BYTE PTR [ebx-0x6d],cl
  407748:	sbb    DWORD PTR [ebx-0x688270b1],0x29008b43
  407752:	xchg   esi,eax
  407753:	inc    edi
  407754:	ret    
  407755:	and    eax,0x31c743b2
  40775a:	sahf   
  40775b:	aas    
  40775c:	retf   
  40775d:	sub    eax,0x39cf3b9a
  407762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407763:	aaa    
  407764:	shl    DWORD PTR ds:0x21d73402,cl
  40776a:	push   cs
  40776b:	xor    bl,bl
  40776d:	sbb    eax,0x9df2c0a
  407772:	ss push 0x641205e3
  407778:	out    0xd1,eax
  40777a:	aas    
  40777b:	pusha  
  40777c:	jmp    0x40774b
  40777e:	cmp    ebx,DWORD PTR [edi+ebp*8-0x27]
  407782:	pop    es
  407783:	pop    eax
  407784:	repz aad 0x23
  407787:	push   esp
  407788:	test   ecx,0xbdfb502f
  40778e:	sub    ecx,DWORD PTR [edi+edi*8-0x17]
  407792:	loopne 0x40779d
  407794:	add    al,ch
  407796:	(bad)  
  407797:	or     DWORD PTR [eax],eax
  407799:	jmp    0xe9408174
  40779e:	(bad)  
  40779f:	or     DWORD PTR [eax],eax
  4077a1:	jmp    0xe940817c
  4077a6:	(bad)  
  4077a7:	or     DWORD PTR [eax],eax
  4077a9:	jmp    0xa1677ae
  4077ae:	add    cl,ch
  4077b0:	(bad)  
  4077b1:	or     DWORD PTR [eax],eax
  4077b3:	jmp    0xe940818e
  4077b8:	(bad)  
  4077b9:	dec    edx
  4077ba:	add    esp,edi
  4077bc:	(bad)  
  4077bd:	or     DWORD PTR [eax],eax
  4077bf:	(bad)  
  4077c1:	or     DWORD PTR [eax],eax
  4077c3:	jmp    0xe940819e
  4077c8:	(bad)  
  4077c9:	or     DWORD PTR [eax],eax
  4077cb:	add    ah,bh
  4077cd:	add    eax,0x5ec0000
  4077d2:	add    BYTE PTR [eax],al
  4077d4:	in     al,dx
  4077d5:	add    eax,0x5fc0000
  4077da:	inc    DWORD PTR [ebx]
  4077dc:	cld    
  4077dd:	add    eax,0x5ec0000
  4077e2:	add    BYTE PTR [eax],al
  4077e4:	in     al,dx
  4077e5:	add    eax,0xdbc0000
  4077ea:	add    BYTE PTR [eax],al
  4077ec:	mov    esp,0xac00000d
  4077f1:	or     eax,0xdac0000
  4077f6:	add    BYTE PTR [eax],al
  4077f8:	mov    esp,0xb200000d
  4077fd:	(bad)  
  4077ff:	pop    es
  407800:	lods   al,BYTE PTR ds:[esi]
  407801:	or     eax,0xdac0000
  407806:	add    BYTE PTR [eax],al
  407808:	jl     0x407817
  40780a:	add    BYTE PTR [eax],al
  40780c:	jl     0x40781b
  40780e:	add    BYTE PTR [eax],al
  407810:	add    BYTE PTR [eax],al
  407812:	ins    BYTE PTR es:[edi],dx
  407813:	or     eax,0xd6c0000
  407818:	add    BYTE PTR [eax],al
  40781a:	jl     0x407829
  40781c:	add    BYTE PTR [eax],al
  40781e:	jl     0x40782d
  407820:	add    BYTE PTR [eax],al
  407822:	inc    edx
  407823:	(bad)  
  407825:	pop    es
  407826:	ins    BYTE PTR es:[edi],dx
  407827:	or     eax,0xd3c0000
  40782c:	add    BYTE PTR [eax],al
  40782e:	cmp    al,0xd
  407830:	add    BYTE PTR [eax],al
  407832:	sub    al,0xd
  407834:	add    BYTE PTR [eax],al
  407836:	sub    al,0xd
  407838:	add    BYTE PTR [eax],al
  40783a:	cmp    al,0xd
  40783c:	inc    DWORD PTR [ebx]
  40783e:	mov    dl,0xdc
  407840:	inc    BYTE PTR [edi+0x7fedc82]
  407846:	aad    0x32
  407848:	add    eax,DWORD PTR [eax]
  40784a:	aad    0x32
  40784c:	add    eax,DWORD PTR [eax]
  40784e:	aad    0x32
  407850:	add    eax,DWORD PTR [eax]
  407852:	aad    0x32
  407854:	add    eax,DWORD PTR [eax]
  407856:	aad    0x32
  407858:	add    eax,DWORD PTR [eax]
  40785a:	aad    0xf8
  40785c:	push   edx
  40785d:	(bad)  
  40785e:	jmp    0x5327:0xe2ff52ef
  407865:	call   FWORD PTR [edx+0x32]
  407868:	add    eax,DWORD PTR [eax]
  40786a:	aad    0x32
  40786c:	add    eax,DWORD PTR [eax]
  40786e:	aad    0x32
  407870:	add    eax,DWORD PTR [eax]
  407872:	aad    0x32
  407874:	add    eax,DWORD PTR [eax]
  407876:	add    BYTE PTR [eax],al
  407878:	aad    0x32
  40787a:	add    eax,DWORD PTR [eax]
  40787c:	aad    0x37
  40787e:	push   edx
  40787f:	jmp    FWORD PTR [edx-0x5d00add1]
  407885:	addr16 push edx
  407887:	call   FWORD PTR [edx]
  407889:	xor    eax,DWORD PTR [ebx]
  40788b:	add    ch,dl
  40788d:	xor    al,BYTE PTR [ebx]
  40788f:	add    ch,dl
  407891:	xor    al,BYTE PTR [ebx]
  407893:	add    ch,dl
  407895:	xor    al,BYTE PTR [ebx]
  407897:	add    ch,dl
  407899:	xor    al,BYTE PTR [ebx]
  40789b:	add    ch,dl
  40789d:	js     0x4078f1
  40789f:	add    BYTE PTR [ecx+0x31],ch
  4078a2:	add    eax,DWORD PTR [eax]
  4078a4:	pop    ebp
  4078a5:	xor    DWORD PTR [ebx],eax
  4078a7:	add    ch,bl
  4078a9:	xor    al,BYTE PTR [ebx]
  4078ab:	add    ch,dl
  4078ad:	xor    al,BYTE PTR [ebx]
  4078af:	add    ch,dl
  4078b1:	xor    al,BYTE PTR [ebx]
  4078b3:	add    ch,dl
  4078b5:	xor    al,BYTE PTR [ebx]
  4078b7:	add    ch,dl
  4078b9:	mov    edi,0x3232ff51
  4078be:	add    eax,DWORD PTR [eax]
  4078c0:	aad    0x9
  4078c2:	jmp    0xe94a4dca
  4078c7:	add    edx,ebp
  4078c9:	mov    ecx,ebp
  4078cb:	add    edx,ebp
  4078cd:	or     ecx,ebp
  4078cf:	add    edx,ebp
  4078d1:	or     ecx,ebp
  4078d3:	add    edx,ebp
  4078d5:	or     ecx,ebp
  4078d7:	add    edx,ebp
  4078d9:	or     DWORD PTR [ecx+0x3],ebp
  4078dc:	add    BYTE PTR [eax],al
  4078de:	aad    0x9
  4078e0:	jmp    0xe94a4de8
  4078e5:	add    al,0xd4
  4078e7:	or     eax,ebp
  4078e9:	add    al,0xd5
  4078eb:	or     ecx,ebp
  4078ed:	add    edx,ebp
  4078ef:	or     ecx,ebp
  4078f1:	add    edx,ebp
  4078f3:	or     ecx,ebp
  4078f5:	add    edx,ebp
  4078f7:	or     ecx,ebp
  4078f9:	add    edx,ebp
  4078fb:	or     eax,ebp
  4078fd:	add    edx,ebp
  4078ff:	or     DWORD PTR [ecx+0x3],ebp
  407902:	aad    0x9
  407904:	imul   eax,DWORD PTR [ebp+edx*2+0x5503e98a],0xeeeff50a
  40790f:	and    eax,0x25eeefed
  407914:	in     eax,0xef
  407916:	add    BYTE PTR [edi-0x17],0x3
  40791a:	aad    0x89
  40791c:	jmp    0xd364460e
  407921:	in     eax,dx
  407922:	int3   
  407923:	sbb    edi,ebx
  407925:	cmc    
  407926:	les    ebx,FWORD PTR [ebx]
  407928:	sti    
  407929:	cmc    
  40792a:	les    ebx,FWORD PTR [ebx]
  40792c:	sti    
  40792d:	cmc    
  40792e:	in     al,0x1b
  407930:	sti    
  407931:	cmc    
  407932:	in     al,0x1b
  407934:	fcomi  st,st(5)
  407936:	in     al,0x89
  407938:	imul   eax,DWORD PTR [edx*2+0x40e9001a],0xd31a21
  407943:	add    BYTE PTR [eax],bh
  407945:	and    DWORD PTR [edx],edx
  407947:	sti    
  407948:	sub    BYTE PTR [ecx],bl
  40794a:	adc    bh,bl
  40794c:	and    BYTE PTR [ecx],bl
  40794e:	adc    bh,bl
  407950:	or     BYTE PTR [ecx],bl
  407952:	adc    bh,bl
  407954:	add    BYTE PTR [ecx],bl
  407956:	adc    bl,bl
  407958:	or     BYTE PTR [ecx],bl
  40795a:	sub    BYTE PTR [ecx-0x2f],0x9
  40795e:	add    cl,ch
  407960:	(bad)  
  407961:	or     DWORD PTR [eax],eax
  407963:	jmp    0xe940833e
  407968:	(bad)  
  407969:	or     DWORD PTR [eax],eax
  40796b:	jmp    0xe9408346
  407970:	(bad)  
  407971:	or     DWORD PTR [eax],eax
  407973:	jmp    0xe940834e
  407978:	(bad)  
  407979:	or     DWORD PTR [eax],eax
  40797b:	jmp    0xe9408356
  407980:	(bad)  
  407981:	or     DWORD PTR [eax],eax
  407983:	jmp    0xe940835e
  407988:	(bad)  
  407989:	or     DWORD PTR [eax],eax
  40798b:	jmp    0xe9408366
  407990:	(bad)  
  407991:	or     DWORD PTR [eax],eax
  407993:	jmp    0xe940836e
  407998:	(bad)  
  407999:	or     DWORD PTR [eax],eax
  40799b:	jmp    0xe9408376
  4079a0:	(bad)  
  4079a1:	or     DWORD PTR [eax],eax
  4079a3:	jmp    0xe940837e
  4079a8:	add    BYTE PTR [eax],al
  4079aa:	(bad)  
  4079ab:	or     DWORD PTR [eax],eax
  4079ad:	jmp    0xe9408388
  4079b2:	(bad)  
  4079b3:	or     DWORD PTR [eax],eax
  4079b5:	jmp    0x408390
  4079ba:	sub    al,0xa
  4079bc:	add    BYTE PTR [eax],al
  4079be:	sub    al,0xa
  4079c0:	add    BYTE PTR [eax],al
  4079c2:	cmp    al,0xa
  4079c4:	add    BYTE PTR [eax],al
  4079c6:	cmp    al,0xa
  4079c8:	add    BYTE PTR [eax],al
  4079ca:	sub    al,0xa
  4079cc:	add    BYTE PTR [eax],al
  4079ce:	sub    al,0xa
  4079d0:	add    BYTE PTR [eax],al
  4079d2:	cld    
  4079d3:	or     DWORD PTR [eax],eax
  4079d5:	add    ah,bh
  4079d7:	or     DWORD PTR [eax],eax
  4079d9:	add    ah,ch
  4079db:	or     DWORD PTR [eax],eax
  4079dd:	add    ah,ch
  4079df:	or     DWORD PTR [eax],eax
  4079e1:	add    BYTE PTR [esi-0x5fbdbb41],ch
  4079e7:	popf   
  4079e8:	inc    ebp
  4079e9:	inc    edx
  4079ea:	xchg   edx,eax
  4079eb:	into   
  4079ec:	add    esi,DWORD PTR [ebx-0x40]
  4079ef:	mov    ecx,0xc1f14244
  4079f4:	inc    ebx
  4079f5:	inc    edx
  4079f6:	sti    
  4079f7:	sbb    DWORD PTR [esi+edi*1+0x1d47a45],esi
  4079fe:	dec    ebx
  4079ff:	popa   
  407a00:	cs jmp 0x4079f9
  407a03:	or     al,0x46
  407a05:	dec    ecx
  407a06:	ss mov ecx,0x1070f19f
  407a0c:	sub    ecx,ebx
  407a0e:	add    BYTE PTR [eax],al
  407a10:	imul   DWORD PTR [edx]
  407a12:	in     eax,0x75
  407a14:	in     eax,0xc3
  407a16:	test   ebx,esi
  407a18:	cmp    ch,BYTE PTR ds:0xc776891c
  407a1e:	or     eax,DWORD PTR [edx-0x47]
  407a21:	scas   al,BYTE PTR es:[edi]
  407a22:	outs   dx,BYTE PTR ds:[esi]
  407a23:	dec    eax
  407a24:	cld    
  407a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a26:	lea    ebp,[eax-0x71a67557]
  407a2c:	sub    DWORD PTR [edi+edx*8-0x4e],ecx
  407a30:	addr16 jne 0x407a19
  407a33:	pop    esp
  407a34:	aad    0xd2
  407a36:	repz cmp BYTE PTR [eax],0xd0
  407a3a:	mov    bh,0x3c
  407a3c:	pop    ss
  407a3d:	pop    ebp
  407a3e:	retf   
  407a3f:	sub    DWORD PTR [ecx+ecx*4-0x1d399168],edx
  407a46:	fld    TBYTE PTR [eax+0x24]
  407a49:	inc    esi
  407a4b:	outs   dx,DWORD PTR ds:[esi]
  407a4c:	mov    esi,0x51247b32
  407a51:	add    edi,DWORD PTR ds:0xb52f40c7
  407a57:	jno    0x4079fc
  407a59:	xor    ecx,DWORD PTR ds:0xca943786
  407a5f:	jns    0x407aa8
  407a61:	in     eax,0x36
  407a63:	cdq    
  407a64:	mov    esi,0x79a23aff
  407a69:	in     al,dx
  407a6a:	pop    esi
  407a6b:	pop    edi
  407a6c:	fcom   st(6)
  407a6e:	in     eax,0xc7
  407a70:	mov    edi,0x11bd6f
  407a75:	add    BYTE PTR [eax+edi*8+0x24],bh
  407a79:	add    ch,ah
  407a7b:	add    BYTE PTR [eax+edi*2],cl
  407a7e:	es inc esp
  407a80:	inc    ecx
  407a81:	les    ecx,FWORD PTR ss:[edx+0x72]
  407a85:	clc    
  407a86:	mov    esp,DWORD PTR [ebx+eiz*1]
  407a89:	(bad)  
  407a8a:	mul    BYTE PTR [esi+0x22]
  407a8d:	data16 (bad) 
  407a8f:	dec    edi
  407a90:	sahf   
  407a91:	imul   edi,DWORD PTR [edx-0x41],0x5f
  407a95:	arpl   WORD PTR [eax],di
  407a97:	sub    ch,BYTE PTR [ecx-0x70]
  407a9a:	cmp    al,0x9e
  407a9c:	je     0x407abf
  407a9e:	push   ebp
  407a9f:	aaa    
  407aa0:	pop    esi
  407aa1:	sbb    BYTE PTR [ebx+0x53],ah
  407aa4:	ss std 
  407aa6:	cmp    edx,DWORD PTR [ebx-0x6f0d93e9]
  407aac:	cs sub eax,0x59c00a05
  407ab2:	jp     0x407acb
  407ab4:	ret    
  407ab5:	(bad)  
  407ab6:	(bad)  
  407ab8:	scas   eax,DWORD PTR es:[edi]
  407ab9:	data16 jns 0x407b36
  407abc:	xchg   esi,eax
  407abd:	cmp    DWORD PTR [ebx+0x1f],ecx
  407ac0:	ficom  DWORD PTR [ecx+0x17bb33a9]
  407ac6:	jg     0x407b42
  407ac8:	pop    eax
  407ac9:	jmp    0xb:0x399e41a6
  407ad0:	dec    esi
  407ad1:	cld    
  407ad2:	or     al,0xf5
  407ad4:	jecxz  0x407b10
  407ad6:	imul   ebp,esp,0x659c
  407adc:	xor    al,0x16
  407ade:	cli    
  407adf:	call   0x92908023
  407ae4:	aaa    
  407ae5:	mov    esi,DWORD PTR [esi-0x6bc52001]
  407aeb:	push   edx
  407aec:	push   ds
  407aed:	gs mov ah,0x42
  407af0:	addr16 and esp,esi
  407af3:	enter  0x7790,0xd2
  407af7:	push   ebx
  407af8:	mov    ch,BYTE PTR [edi+0x64]
  407afb:	lock out 0x32,al
  407afe:	mov    eax,ds:0x170a17e7
  407b03:	add    edx,ebp
  407b05:	or     DWORD PTR [ecx+0x1],ebp
  407b08:	aad    0x9
  407b0a:	int3   
  407b0b:	add    edx,ebp
  407b0d:	or     esi,edi
  407b0f:	add    dl,ch
  407b11:	or     ecx,ecx
  407b13:	std    
  407b14:	call   0xd909:0xd5040443
  407b1b:	add    al,0xd5
  407b1d:	or     ecx,ecx
  407b1f:	std    
  407b20:	add    BYTE PTR [ebx+0xc],0x4
  407b24:	aad    0x9
  407b26:	mov    eax,0x9d504
  407b2b:	imul   edx,edi,0xd9040009
  407b31:	or     DWORD PTR [eax],eax
  407b33:	fwait
  407b34:	ror    DWORD PTR [ecx],1
  407b36:	add    BYTE PTR [ecx-0x29],ch
  407b39:	or     DWORD PTR [eax],eax
  407b3b:	int3   
  407b3c:	(bad)  
  407b3d:	or     DWORD PTR [eax],eax
  407b3f:	call   0x6900:0x9d90000
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	or     DWORD PTR [eax],eax
  407b49:	(bad)  
  407b4a:	(bad)  
  407b4b:	or     DWORD PTR [eax],eax
  407b4d:	jge    0x407b20
  407b4f:	or     DWORD PTR [eax],eax
  407b51:	mov    DWORD PTR [eax],esp
  407b53:	inc    ebx
  407b54:	dec    DWORD PTR ds:0xe90009d1
  407b5a:	(bad)  
  407b5b:	or     DWORD PTR [eax],eax
  407b5d:	jmp    0x86408538
  407b62:	outs   dx,BYTE PTR ds:[esi]
  407b63:	enter  0xb5ff,0x6c
  407b67:	enter  0xe8ff,0xd6
  407b6b:	or     DWORD PTR [eax],eax
  407b6d:	mov    DWORD PTR [edi-0x38],edi
  407b70:	call   FWORD PTR [esi]
  407b72:	outs   dx,DWORD PTR ds:[esi]
  407b73:	enter  0x8ff,0xe
  407b77:	add    eax,DWORD PTR [eax]
  407b79:	lock (bad) 
  407b7b:	or     DWORD PTR [eax],eax
  407b7d:	call   0x39408558
  407b82:	mov    es,WORD PTR [edx]
  407b84:	add    bh,ch
  407b86:	(bad)  
  407b87:	or     DWORD PTR [eax],eax
  407b89:	xchg   ecx,eax
  407b8a:	(bad)  
  407b8b:	or     DWORD PTR [eax],eax
  407b8d:	inc    ecx
  407b8e:	sahf   
  407b8f:	add    al,BYTE PTR [eax]
  407b91:	fcmovnbe st,st(6)
  407b93:	or     DWORD PTR [eax],eax
  407b95:	add    ecx,edx
  407b97:	or     DWORD PTR [eax],eax
  407b99:	gs lahf 
  407b9b:	add    al,BYTE PTR [eax]
  407b9d:	stc    
  407b9e:	(bad)  
  407b9f:	or     DWORD PTR [eax],eax
  407ba1:	icebp  
  407ba2:	(bad)  
  407ba3:	or     DWORD PTR [eax],eax
  407ba5:	add    BYTE PTR [eax],al
  407ba7:	add    BYTE PTR [esi+ecx*2+0x665003f],bh
  407bae:	add    BYTE PTR [eax],al
  407bb0:	test   BYTE PTR [esi],al
  407bb2:	add    BYTE PTR [eax],al
  407bb4:	enter  0x3f4e,0x0
  407bb8:	popa   
  407bb9:	push   es
  407bba:	add    BYTE PTR [eax],al
  407bbc:	cmp    BYTE PTR [esi],al
  407bbe:	add    BYTE PTR [eax],al
  407bc0:	cmp    eax,0x2d010107
  407bc5:	pop    es
  407bc6:	add    DWORD PTR [ecx],eax
  407bc8:	sub    eax,0x3d010107
  407bcd:	pop    es
  407bce:	add    DWORD PTR [ebx],eax
  407bd0:	aas    
  407bd1:	pop    es
  407bd2:	add    DWORD PTR [ecx],eax
  407bd4:	sub    eax,0x2d010107
  407bd9:	or     BYTE PTR [ecx],al
  407bdb:	add    esi,edi
  407bdd:	pop    es
  407bde:	add    al,BYTE PTR [edx]
  407be0:	inc    BYTE PTR [edi]
  407be2:	add    al,BYTE PTR [edx]
  407be4:	out    dx,al
  407be5:	or     DWORD PTR [esp+eax*1],eax
  407be8:	out    dx,al
  407be9:	pop    es
  407bea:	add    al,BYTE PTR [esi+edi*8]
  407bed:	pop    es
  407bee:	add    al,BYTE PTR [edx]
  407bf0:	inc    BYTE PTR [edi]
  407bf2:	add    al,0x4
  407bf4:	clc    
  407bf5:	pop    es
  407bf6:	add    al,BYTE PTR [edx]
  407bf8:	call   0xbe427e04
  407bfd:	or     eax,DWORD PTR [edx]
  407bff:	add    al,0xb8
  407c01:	or     DWORD PTR [edx],eax
  407c03:	add    ch,BYTE PTR [esi-0x52fefef7]
  407c09:	or     al,0x1
  407c0b:	add    DWORD PTR [eax],eax
  407c0d:	add    BYTE PTR [ecx-0x43dedef8],bh
  407c13:	or     al,BYTE PTR [ebx]
  407c15:	push   es
  407c16:	scas   eax,DWORD PTR es:[edi]
  407c17:	or     al,BYTE PTR [ebx]
  407c19:	add    ebp,DWORD PTR [edi+0x7f030308]
  407c1f:	or     BYTE PTR [ebx],al
  407c21:	add    eax,0x50633d5
  407c26:	(bad)  
  407c27:	xor    eax,DWORD PTR [esi]
  407c29:	add    edx,esi
  407c2b:	xor    DWORD PTR [ecx+eax*1],eax
  407c2e:	(bad)  
  407c2f:	xor    DWORD PTR [esi],eax
  407c31:	add    esi,edx
  407c33:	xor    DWORD PTR [esi],eax
  407c35:	add    esp,edx
  407c37:	xor    DWORD PTR [esi],eax
  407c39:	add    ebp,edx
  407c3b:	jns    0x407c41
  407c3d:	add    ch,dl
  407c3f:	cmp    al,0x48
  407c41:	inc    eax
  407c42:	aad    0x6c
  407c44:	add    al,0x0
  407c46:	aad    0x36
  407c48:	dec    eax
  407c49:	inc    eax
  407c4a:	aad    0x7b
  407c4c:	add    al,0x0
  407c4e:	aad    0x60
  407c50:	dec    eax
  407c51:	inc    eax
  407c52:	aad    0x66
  407c54:	add    al,0x0
  407c56:	aad    0xb0
  407c58:	dec    ecx
  407c59:	inc    eax
  407c5a:	aad    0xf5
  407c5c:	add    eax,DWORD PTR [eax]
  407c5e:	aad    0xc
  407c60:	dec    ebx
  407c61:	inc    eax
  407c62:	aad    0xe8
  407c64:	add    eax,DWORD PTR [eax]
  407c66:	aad    0x18
  407c68:	dec    ebx
  407c69:	inc    eax
  407c6a:	aad    0xf7
  407c6c:	add    eax,DWORD PTR [eax]
  407c6e:	aad    0x74
  407c70:	dec    edx
  407c71:	inc    eax
  407c72:	add    BYTE PTR [eax],al
  407c74:	aad    0x22
  407c76:	add    al,0x0
  407c78:	aad    0xa0
  407c7a:	dec    edx
  407c7b:	inc    eax
  407c7c:	aad    0x1
  407c7e:	add    al,0x0
  407c80:	aad    0x70
  407c82:	dec    edx
  407c83:	inc    eax
  407c84:	aad    0x4
  407c86:	add    al,0x0
  407c88:	aad    0xa0
  407c8a:	dec    edx
  407c8b:	inc    eax
  407c8c:	aad    0x23
  407c8e:	add    al,0x0
  407c90:	aad    0xa1
  407c92:	dec    edx
  407c93:	inc    eax
  407c94:	aad    0x1e
  407c96:	add    al,0x0
  407c98:	aad    0x9b
  407c9a:	dec    edx
  407c9b:	inc    eax
  407c9c:	aad    0x9
  407c9e:	mov    esp,0x4409d503
  407ca3:	dec    ebx
  407ca4:	adc    eax,0xd503bf0a
  407ca9:	or     DWORD PTR [ebx-0x61f5ebfd],ebp
  407caf:	add    edx,ebp
  407cb1:	or     DWORD PTR [ebx-0x6ef5ebfd],esi
  407cb7:	add    edx,ebp
  407cb9:	or     DWORD PTR [ecx-0x3ff5ebfd],edx
  407cbf:	add    edx,ebp
  407cc1:	or     DWORD PTR [ebx+eax*1+0x3b30994],edi
  407cc8:	aad    0x9
  407cca:	mov    esp,0xa2099404
  407ccf:	add    edx,ebp
  407cd1:	or     eax,eax
  407cd3:	add    al,0x94
  407cd5:	or     DWORD PTR [ebp-0x2afffffd],edx
  407cdb:	or     DWORD PTR [eax*1+0x3440994],esp
  407ce2:	aad    0x9
  407ce4:	lahf   
  407ce5:	add    al,0x94
  407ce7:	or     DWORD PTR [edi],esi
  407ce9:	add    edx,ebp
  407ceb:	or     DWORD PTR [ecx+0x4],edx
  407cee:	xchg   esp,eax
  407cef:	or     DWORD PTR [esi],esp
  407cf1:	add    edx,ebp
  407cf3:	or     ebx,edi
  407cf5:	add    eax,0x3490994
  407cfa:	aad    0x9
  407cfc:	repz add eax,0x4480994
  407d02:	(bad)  [eax]
  407d04:	dec    ebx
  407d05:	add    al,0xad
  407d07:	or     al,0x4a
  407d09:	add    al,0x14
  407d0b:	or     DWORD PTR [esp+eax*1-0x8],eax
  407d0f:	or     BYTE PTR [edi+0x4],cl
  407d12:	wbinvd 
  407d14:	push   eax
  407d15:	add    al,0x35
  407d17:	or     DWORD PTR [eax],eax
  407d19:	inc    ebx
  407d1a:	(bad)  
  407d1c:	add    BYTE PTR [edx-0x2f],al
  407d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d20:	add    BYTE PTR [ebp-0x70ff3f2a],dl
  407d26:	(bad)  
  407d27:	mov    esp,0xc2d68600
  407d2c:	add    BYTE PTR [eax+0x7b0104d6],bl
  407d32:	(bad)  
  407d33:	bound  eax,QWORD PTR [edx]
  407d35:	jp     0x407d0d
  407d37:	retf   
  407d38:	add    BYTE PTR [esi+edx*8-0x1],bh
  407d3c:	add    BYTE PTR [edi+0x0],dh
  407d3f:	add    dh,dl
  407d41:	loop   0x407d43
  407d43:	pop    esi
  407d44:	(bad)  
  407d45:	inc    esi
  407d46:	add    ah,BYTE PTR [eax-0x2a]
  407d49:	test   al,0x0
  407d4b:	push   ebx
  407d4c:	(bad)  
  407d4d:	fiadd  WORD PTR [eax]
  407d4f:	push   edx
  407d50:	(bad)  
  407d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d52:	add    BYTE PTR [ebp-0x2a],al
  407d55:	ret    
  407d56:	add    BYTE PTR [esi+edx*8],bh
  407d59:	pop    esp
  407d5a:	add    dh,BYTE PTR [edi]
  407d5c:	(bad)  
  407d5d:	mov    edi,0xbdd62e00
  407d62:	add    BYTE PTR [ecx],ch
  407d64:	(bad)  
  407d65:	aad    0x0
  407d67:	sub    dl,dh
  407d69:	or     eax,DWORD PTR [ecx]
  407d6b:	sub    al,0xd6
  407d6d:	add    BYTE PTR [ecx],al
  407d6f:	daa    
  407d70:	(bad)  
  407d71:	pop    es
  407d72:	add    DWORD PTR [ecx],esi
  407d74:	(bad)  
  407d75:	or     eax,0x21d63301
  407d7a:	add    DWORD PTR ds:0x1e0123d6,esp
  407d80:	(bad)  
  407d81:	invlpg BYTE PTR [ecx]
  407d84:	(bad)  
  407d85:	sbb    DWORD PTR [ecx],eax
  407d87:	cmp    dh,dl
  407d89:	retf   0x3b00
  407d8c:	(bad)  
  407d8d:	mov    BYTE PTR [eax],0x34
  407d90:	(bad)  
  407d91:	fld    DWORD PTR [eax]
  407d93:	add    ah,dh
  407d95:	or     bl,BYTE PTR [eax+0x1]
  407d98:	cmc    
  407d99:	or     ch,BYTE PTR [esi+0x1]
  407d9c:	(bad)  
  407d9d:	or     dh,BYTE PTR [eax+0x1]
  407da0:	retf   0x620a
  407da3:	add    DWORD PTR [eax],eax
  407da5:	add    BYTE PTR [ebx+ecx*1+0xb9f0155],bl
  407dac:	add    eax,DWORD PTR [ecx]
  407dae:	xchg   ecx,eax
  407daf:	or     edi,DWORD PTR [edx]
  407db1:	add    DWORD PTR [edx-0x7bfef8f5],edx
  407db7:	or     ecx,DWORD PTR ds:0x190b8601
  407dbd:	add    DWORD PTR [eax+0x1b011b0b],ebx
  407dc3:	or     ecx,DWORD PTR [edi]
  407dc5:	add    DWORD PTR [ebx+ecx*1+0x11],ebp
  407dc9:	add    DWORD PTR [ebp+0xb],ebp
  407dcc:	inc    esp
  407dcd:	add    DWORD PTR [esi+0xb],ebx
  407dd0:	dec    eax
  407dd1:	add    DWORD PTR [ecx+0xb],esp
  407dd4:	push   ecx
  407dd5:	add    DWORD PTR [ebx+ecx*1+0x59],edx
  407dd9:	add    DWORD PTR [ebp+0xb],edx
  407ddc:	outs   dx,DWORD PTR ds:[esi]
  407ddd:	add    DWORD PTR [edi-0x55fe8ef5],esp
  407de3:	or     esp,DWORD PTR [ebx+0x1]
  407de6:	jnp    0x407df3
  407de8:	fld    DWORD PTR [edx]
  407dea:	pop    ebp
  407deb:	add    al,0x26
  407ded:	add    DWORD PTR [edx+0x4],edx
  407df0:	and    al,0x1
  407df2:	push   ebp
  407df3:	add    al,0x30
  407df5:	add    DWORD PTR [edi+0x4],eax
  407df8:	push   ds
  407df9:	add    DWORD PTR [eax+0x4],ebx
  407dfc:	xor    al,0x1
  407dfe:	pop    ebp
  407dff:	add    al,0x27
  407e01:	add    DWORD PTR [edx+0x4],esp
  407e04:	and    eax,0x31073501
  407e09:	add    DWORD PTR [eax],eax
  407e0b:	add    BYTE PTR [edi],dh
  407e0d:	pop    es
  407e0e:	pop    ds
  407e0f:	add    ebp,edx
  407e11:	(bad)  
  407e12:	add    al,0x35
  407e14:	aam    0xe5
  407e16:	add    al,0xa
  407e18:	aam    0xec
  407e1a:	add    al,0x8
  407e1c:	aam    0x15
  407e1e:	add    eax,0x51ad420
  407e23:	sbb    al,0xd4
  407e25:	or     eax,0x44d46c05
  407e2a:	add    bl,BYTE PTR [esp+edx*8+0x45]
  407e2e:	add    cl,BYTE PTR [ebx]
  407e30:	aam    0x4c
  407e32:	add    cl,BYTE PTR [ecx]
  407e34:	aam    0x55
  407e36:	add    ah,BYTE PTR [ecx]
  407e38:	aam    0x4a
  407e3a:	add    bl,BYTE PTR ds:0x6d027dd4
  407e40:	aam    0x74
  407e42:	add    bl,BYTE PTR [ebp-0x2c]
  407e45:	nop
  407e46:	add    edi,DWORD PTR [eax]
  407e48:	aam    0xcf
  407e4a:	add    dl,BYTE PTR [esi-0x2c]
  407e4d:	lds    eax,FWORD PTR [edx]
  407e4f:	sub    ah,dl
  407e51:	int3   
  407e52:	add    bh,BYTE PTR [ebx]
  407e54:	aam    0xc8
  407e56:	add    dl,BYTE PTR [edx]
  407e58:	aam    0xd7
  407e5a:	add    ah,BYTE PTR [edx]
  407e5c:	aam    0xce
  407e5e:	add    ah,BYTE PTR [esi-0x2c]
  407e61:	inc    DWORD PTR [edx]
  407e63:	push   edi
  407e64:	aam    0xf5
  407e66:	add    ch,BYTE PTR [ecx]
  407e68:	aam    0x9c
  407e6a:	add    edi,DWORD PTR [esp+edx*8]
  407e6d:	push   0x1303
  407e72:	aam    0x97
  407e74:	add    esp,DWORD PTR [ebx]
  407e76:	aam    0x8e
  407e78:	add    esp,DWORD PTR [edi-0x2c]
  407e7b:	test   DWORD PTR [ebx],eax
  407e7d:	dec    edx
  407e7e:	aam    0xbb
  407e80:	add    cl,BYTE PTR [ebx-0x2c]
  407e83:	repnz add al,BYTE PTR [eax]
  407e86:	aam    0xe3
  407e88:	add    ch,BYTE PTR [esi]
  407e8a:	aam    0x9
  407e8c:	xor    eax,0x2e0ae303
  407e91:	add    ebp,edi
  407e93:	or     bh,BYTE PTR [eax]
  407e95:	add    edx,DWORD PTR [eax]
  407e97:	or     edi,DWORD PTR [ebx]
  407e99:	add    esp,DWORD PTR [ecx]
  407e9b:	or     ebx,DWORD PTR [edx]
  407e9d:	add    esp,ebx
  407e9f:	or     ah,BYTE PTR [eax]
  407ea1:	add    esp,DWORD PTR [edi]
  407ea3:	or     edx,DWORD PTR [ebx+eax*1]
  407ea6:	sub    eax,0xff030f0b
  407eab:	or     cl,cl
  407ead:	add    dl,ah
  407eaf:	or     al,dh
  407eb1:	add    dh,BYTE PTR [edx-0x1dfd3af6]
  407eb7:	or     bh,BYTE PTR [esi-0x47f541fe]
  407ebd:	add    dl,BYTE PTR [ebx]
  407ebf:	or     edi,DWORD PTR [ebx-0x45f4effe]
  407ec5:	add    ah,BYTE PTR [edx-0x39fd4ff6]
  407ecb:	or     ah,BYTE PTR [edx+eax*1+0x29f0abc]
  407ed2:	scas   al,BYTE PTR es:[edi]
  407ed3:	or     dl,BYTE PTR [edi]
  407ed5:	add    BYTE PTR [eax],al
  407ed7:	add    bl,bh
  407ed9:	jmp    0xfa157e25
  407ede:	dec    edx
  407edf:	(bad)  
  407ee0:	fdivp  st(1),st
  407ee2:	dec    ecx
  407ee3:	call   ecx
  407ee5:	stc    
  407ee6:	dec    esp
  407ee7:	call   ebp
  407ee9:	stc    
  407eea:	inc    ebx
  407eeb:	dec    DWORD PTR [edi]
  407eed:	stc    
  407eee:	mov    ?,edi
  407ef0:	add    al,0xf9
  407ef2:	test   edi,edi
  407ef4:	xor    eax,0x37ff80f9
  407ef9:	stc    
  407efa:	jg     0x407efb
  407efc:	cmp    ecx,edi
  407efe:	xchg   edx,eax
  407eff:	push   DWORD PTR [ebx]
  407f01:	stc    
  407f02:	xchg   ecx,eax
  407f03:	jmp    FWORD PTR ds:0xda84fff9
  407f09:	xor    BYTE PTR es:[edx+edx*8+0x26],bh
  407f0e:	xor    BYTE PTR [edi-0x36],dl
  407f11:	and    al,0x30
  407f13:	dec    esi
  407f14:	ret    0x3048
  407f17:	pop    ecx
  407f18:	mov    edx,0xb258303f
  407f1d:	imul   esi,DWORD PTR [eax],0x3067aa3b
  407f23:	cmp    ah,BYTE PTR [edx-0x65c2cf9b]
  407f29:	arpl   WORD PTR [eax],si
  407f2b:	xor    al,0x92
  407f2d:	jno    0x407f5f
  407f2f:	lahf   
  407f30:	aad    0x6e
  407f32:	xor    BYTE PTR [esi-0x6ecf932b],dl
  407f38:	aad    0x6a
  407f3a:	xor    BYTE PTR [eax+0x78d50000],dl
  407f40:	xor    BYTE PTR [ebx-0x7dcf892b],al
  407f46:	aad    0x74
  407f48:	xor    BYTE PTR [ebp-0x2b],dh
  407f4b:	jb     0x407f7d
  407f4d:	ins    BYTE PTR es:[edi],dx
  407f4e:	aad    0x80
  407f50:	xor    BYTE PTR [edi-0x2b],ah
  407f53:	jle    0x407f85
  407f55:	pop    esi
  407f56:	aad    0x7c
  407f58:	xor    BYTE PTR [ecx-0x57cf852b],ch
  407f5e:	aad    0x48
  407f60:	xor    BYTE PTR [ebx-0x55cfba2b],ch
  407f66:	aad    0x43
  407f68:	xor    BYTE PTR [ebp-0x5bcfae2b],ch
  407f6e:	aad    0x4f
  407f70:	xor    BYTE PTR [edi],ch
  407f72:	aad    0x4e
  407f74:	xor    BYTE PTR [esi],ah
  407f76:	aad    0x4d
  407f78:	xor    BYTE PTR [ecx],ah
  407f7a:	aad    0x4c
  407f7c:	xor    BYTE PTR [eax],ah
  407f7e:	aad    0x4b
  407f80:	xor    BYTE PTR [eax],al
  407f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f83:	or     edi,ecx
  407f85:	xor    BYTE PTR [edi-0x4fcf2df7],ah
  407f8b:	or     ebp,edx
  407f8d:	xor    cl,dh
  407f8f:	or     eax,ebx
  407f91:	xor    BYTE PTR [edx],al
  407f93:	or     bl,bl
  407f95:	xor    bl,dh
  407f97:	or     esi,ebx
  407f99:	xor    ah,bh
  407f9b:	or     edi,ebx
  407f9d:	xor    ch,ch
  407f9f:	or     eax,esp
  407fa1:	xor    BYTE PTR [eax],al
  407fa3:	add    dh,cl
  407fa5:	or     ecx,esp
  407fa7:	xor    BYTE PTR [edi-0x47cf1df7],bh
  407fad:	or     esp,esp
  407faf:	xor    cl,ch
  407fb1:	or     esi,esp
  407fb3:	xor    BYTE PTR [edx+0x3a],cl
  407fb6:	out    0x30,eax
  407fb8:	dec    ebx
  407fb9:	cmp    ch,al
  407fbb:	xor    BYTE PTR [edx+edi*1-0x17],al
  407fbf:	xor    BYTE PTR ds:0x3630ea3a,ah
  407fc5:	cmp    ch,bl
  407fc7:	xor    BYTE PTR [edi],dh
  407fc9:	cmp    ch,ah
  407fcb:	xor    BYTE PTR [eax+0x3a],al
  407fce:	out    dx,al
  407fcf:	xor    BYTE PTR [ecx+0x3a],ah
  407fd2:	repnz xor BYTE PTR [edx],dl
  407fd5:	cmp    bl,BYTE PTR [edx-0x64c57cd0]
  407fdb:	xor    BYTE PTR [eax-0x78f9f4c5],dl
  407fe1:	cmp    ebx,DWORD PTR [edx]
  407fe3:	push   es
  407fe4:	xchg   ebx,eax
  407fe5:	cmp    ebx,DWORD PTR [esi]
  407fe7:	push   es
  407fe8:	ins    DWORD PTR es:[edi],dx
  407fe9:	cmp    esp,DWORD PTR [eax]
  407feb:	push   es
  407fec:	outs   dx,BYTE PTR ds:[esi]
  407fed:	cmp    esp,DWORD PTR [ecx]
  407fef:	push   es
  407ff0:	aas    
  407ff1:	cmp    esp,DWORD PTR [edx]
  407ff3:	push   es
  407ff4:	mov    eax,0xb906233b
  407ff9:	cmp    esp,DWORD PTR [esi+eax*1]
  407ffc:	aad    0xea
  407ffe:	std    
  407fff:	and    eax,0x26fde3db
  408004:	sar    eax,cl
  408006:	std    
  408007:	daa    
  408008:	add    BYTE PTR [eax],al
  40800a:	(bad)  
  40800c:	std    
  40800d:	sub    bl,dl
  40800f:	out    0xfd,al
  408011:	sub    ebx,ebx
  408013:	jmp    0x408012
  408015:	sub    dl,bl
  408017:	(bad)  
  408018:	std    
  408019:	sub    ebx,ebx
  40801b:	in     eax,0xfd
  40801d:	sub    al,0xd3
  40801f:	lock std 
  408021:	sub    eax,0x2efe17db
  408026:	rcl    DWORD PTR [edx],cl
  408028:	(bad)  
  408029:	das    
  40802a:	fist   DWORD PTR [ecx]
  40802c:	(bad)  
  40802d:	xor    bl,dl
  40802f:	adc    al,0xfe
  408031:	xor    ebx,ebx
  408033:	adc    edi,esi
  408035:	xor    dl,bl
  408037:	jbe    0x408042
  408039:	xor    al,0xdb
  40803b:	jge    0x408046
  40803d:	xor    eax,0x360978d3
  408042:	fstp   TBYTE PTR [edi+0x9]
  408045:	aaa    
  408046:	shr    DWORD PTR [edx+0x9],cl
  408049:	cmp    bl,bl
  40804b:	imul   ecx,DWORD PTR [ecx],0x99cd339
  408051:	cmp    bl,bl
  408053:	inc    edx
  408054:	or     DWORD PTR [eax-0x2d],eax
  408057:	or     DWORD PTR [ecx],0x984db41
  40805d:	inc    edx
  40805e:	rol    DWORD PTR [ebx-0x7124bcf7],cl
  408064:	or     DWORD PTR [ebx+edx*8-0x7b],eax
  408068:	or     DWORD PTR [ebp-0x25],eax
  40806b:	nop
  40806c:	or     DWORD PTR [esi+0x0],eax
  40806f:	add    bl,dl
  408071:	xchg   DWORD PTR [ecx],ecx
  408073:	inc    edi
  408074:	fisttp DWORD PTR [edx+0x9d34809]
  40807a:	push   eax
  40807b:	or     DWORD PTR [edi+ecx*1+0xf8f0953],ecx
  408082:	inc    edx
  408083:	or     DWORD PTR [esi-0x66f6c2f1],ebx
  408089:	andps  xmm1,XMMWORD PTR [ecx]
  40808c:	nop
  40808d:	cmovg  ecx,DWORD PTR [ecx]
  408090:	mov    ecx,DWORD PTR [edi]
  408092:	inc    esi
  408093:	or     DWORD PTR [edx],esp
  408095:	adc    BYTE PTR [ecx],bh
  408097:	or     DWORD PTR ds:0x24091810,esp
  40809d:	adc    BYTE PTR [ebx],bl
  40809f:	or     DWORD PTR [edi],esp
  4080a1:	adc    BYTE PTR [eax+0xa],cl
  4080a4:	pop    es
  4080a5:	push   cs
  4080a6:	dec    ebx
  4080a7:	or     al,BYTE PTR [esi]
  4080a9:	push   cs
  4080aa:	dec    edx
  4080ab:	or     al,BYTE PTR [esi+ecx*1]
  4080ae:	inc    ebp
  4080af:	or     al,BYTE PTR [ecx]
  4080b1:	push   cs
  4080b2:	dec    esp
  4080b3:	or     ch,BYTE PTR [eax]
  4080b5:	push   cs
  4080b6:	inc    edi
  4080b7:	or     ah,BYTE PTR [ebx]
  4080b9:	push   cs
  4080ba:	mov    cs,WORD PTR [ecx]
  4080bc:	sub    cl,BYTE PTR [esi]
  4080be:	xchg   ecx,eax
  4080bf:	or     DWORD PTR ds:0xc09800e,ebx
  4080c5:	push   cs
  4080c6:	or     DWORD PTR [ecx],0xf
  4080c9:	push   cs
  4080ca:	xchg   edx,eax
  4080cb:	or     esi,edi
  4080cd:	or     eax,0xdf9098d
  4080d2:	test   BYTE PTR [ecx],cl
  4080d4:	add    BYTE PTR [eax],al
  4080d6:	fs or  eax,0xdab097f
  4080dc:	push   esi
  4080dd:	or     DWORD PTR [edx-0x1cf6a6f3],esp
  4080e3:	jmp    0x95b:0xdd70957
  4080ea:	(bad)  
  4080eb:	or     eax,0xdd4093a
  4080f0:	xor    eax,0xdd109
  4080f5:	cmp    al,0xdc
  4080f7:	push   cs
  4080f8:	add    al,0x37
  4080fa:	fmul   QWORD PTR [edi]
  4080fc:	add    al,0x9e
  4080fe:	int3   
  4080ff:	adc    BYTE PTR [ecx+eiz*4],al
  408102:	int3   
  408103:	add    DWORD PTR [eax+edx*4],eax
  408106:	fadd   QWORD PTR [edx]
  408108:	add    al,0x93
  40810a:	fadd   QWORD PTR [ebx]
  40810c:	add    al,0x82
  40810e:	int3   
  40810f:	add    al,0x4
  408111:	jge    0x4080df
  408113:	add    eax,0x99dc7404
  408118:	add    al,0x6f
  40811a:	fadd   QWORD PTR [edi]
  40811c:	add    al,0x66
  40811e:	int3   
  40811f:	push   es
  408120:	add    al,0x29
  408122:	int3   
  408123:	mov    DWORD PTR [ebx],0x3f9dc28
  408129:	sub    ebx,esp
  40812b:	clc    
  40812c:	add    ebp,DWORD PTR [edx]
  40812e:	int3   
  40812f:	iret   
  408130:	add    esp,DWORD PTR ds:0x2c03fdcc
  408136:	fdiv   st(4),st
  408138:	add    esp,DWORD PTR [edi]
  40813a:	add    BYTE PTR [eax],al
  40813c:	fmul   st(5),st
  40813e:	add    ebp,DWORD PTR [esi-0x4efc0531]
  408144:	iret   
  408145:	int3   
  408146:	add    esp,DWORD PTR [eax-0x5cfc0e21]
  40814c:	fcomip st,st(0)
  40814e:	add    esi,DWORD PTR [edx-0x52fc0c31]
  408154:	iret   
  408155:	repnz add esp,DWORD PTR [edi+ebx*8-0x2060fc0b]
  40815d:	hlt    
  40815e:	add    esi,DWORD PTR [esi-0x46fc0831]
  408164:	iret   
  408165:	test   BYTE PTR [ebx],0xb8
  408168:	ffreep st(6)
  40816a:	add    edi,DWORD PTR [ebx+0x3c9df]
  408170:	aas    
  408171:	add    al,0x41
  408173:	add    al,0x40
  408175:	add    al,0x42
  408177:	add    al,0x71
  408179:	add    al,0x43
  40817b:	add    al,0x62
  40817d:	add    al,0x36
  40817f:	add    al,0xc3
  408181:	add    esi,DWORD PTR [edx]
  408183:	add    al,0x94
  408185:	add    ecx,DWORD PTR [esp+eax*1-0x5b]
  408189:	add    ecx,DWORD PTR [ebx+0x4]
  40818c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40818d:	add    esi,DWORD PTR [edi]
  40818f:	add    al,0xb7
  408191:	add    ecx,DWORD PTR [eax+0x4]
  408194:	mov    eax,0xe9044d03
  408199:	add    ecx,DWORD PTR [ecx+0x4]
  40819c:	fiadd  DWORD PTR [ebx]
  40819e:	inc    edi
  40819f:	add    al,0x0
  4081a1:	add    BYTE PTR [ebx],bl
  4081a3:	add    al,0x4a
  4081a5:	add    al,0xcc
  4081a7:	add    ebp,DWORD PTR [esi]
  4081a9:	add    al,0xdd
  4081ab:	add    edx,DWORD PTR [eax]
  4081ad:	add    al,0xde
  4081af:	add    edx,DWORD PTR [ecx]
  4081b1:	add    al,0xcf
  4081b3:	add    esp,DWORD PTR [esi]
  4081b5:	add    al,0xd0
  4081b7:	add    edx,DWORD PTR [esp+eax*1]
  4081ba:	loope  0x4081bf
  4081bc:	adc    eax,0x2403d204
  4081c1:	add    al,0x93
  4081c3:	add    BYTE PTR [ebx],dl
  4081c5:	add    al,0xa4
  4081c7:	add    BYTE PTR ds:0x18009504,ah
  4081cd:	add    al,0x96
  4081cf:	add    BYTE PTR [ecx],bl
  4081d1:	add    al,0x87
  4081d3:	add    BYTE PTR [edx],bl
  4081d5:	add    al,0x88
  4081d7:	add    BYTE PTR [ebx],bl
  4081d9:	add    al,0x19
  4081db:	add    BYTE PTR [esp+eax*1],bl
  4081de:	mov    al,BYTE PTR [eax]
  4081e0:	sbb    eax,0x1e006b04
  4081e5:	add    al,0x5c
  4081e7:	add    BYTE PTR [edi],bl
  4081e9:	add    al,0xd5
  4081eb:	xchg   ecx,eax
  4081ec:	or     DWORD PTR [edi],ebp
  4081ee:	rcl    DWORD PTR [edx-0x4c26dff7],1
  4081f4:	or     BYTE PTR [ecx],ah
  4081f6:	sar    DWORD PTR [eax+ecx*1+0x8b5d922],1
  4081fd:	and    edx,ecx
  4081ff:	mov    esi,0xd7d91608
  408204:	or     BYTE PTR [edx],dl
  408206:	add    BYTE PTR [eax],al
  408208:	shr    DWORD PTR [eax-0x2626d3f8],1
  40820e:	or     BYTE PTR [ebx],ch
  408210:	rcr    edx,1
  408212:	or     BYTE PTR [edi],dl
  408214:	fxch   st(3)
  408216:	or     BYTE PTR [eax],ch
  408218:	shl    esp,1
  40821a:	or     BYTE PTR ds:0x2908fdd9,ch
  408220:	shl    esp,1
  408222:	or     BYTE PTR [edi],ah
  408224:	fldpi  
  408226:	or     BYTE PTR [edx],ch
  408228:	rol    ecx,1
  40822a:	pop    es
  40822b:	xchg   dh,dl
  40822d:	rol    BYTE PTR [edi],0x88
  408230:	(bad)  
  408231:	mov    edi,0xc6d68907
  408236:	pop    es
  408237:	mov    dl,dh
  408239:	int    0x7
  40823b:	stos   BYTE PTR es:[edi],al
  40823c:	(bad)  
  40823d:	ret    
  40823e:	pop    es
  40823f:	mov    esi,ss
  408241:	retf   0x8e07
  408244:	(bad)  
  408245:	cdq    
  408246:	pop    es
  408247:	stos   DWORD PTR es:[edi],eax
  408248:	(bad)  
  408249:	xchg   edi,eax
  40824a:	pop    es
  40824b:	(bad)  
  40824c:	(bad)  
  40824d:	mov    WORD PTR [edi],es
  40824f:	test   esi,edx
  408251:	mov    bl,0x6
  408253:	adc    eax,0xac06b1b5
  408258:	(bad)  
  408259:	mov    al,0x6
  40825b:	lods   eax,DWORD PTR ds:[esi]
  40825c:	(bad)  
  40825d:	scas   eax,DWORD PTR es:[edi]
  40825e:	push   es
  40825f:	scas   al,BYTE PTR es:[edi]
  408260:	(bad)  
  408261:	mov    esi,0x9d6af06
  408266:	pop    esp
  408267:	pop    es
  408268:	wbinvd 
  40826a:	push   edi
  40826b:	pop    es
  40826c:	add    BYTE PTR [eax],al
  40826e:	inc    ebp
  40826f:	or     DWORD PTR [esi+0x7],ebx
  408272:	sbb    DWORD PTR [ecx],ecx
  408274:	push   ecx
  408275:	pop    es
  408276:	adc    BYTE PTR [ecx],cl
  408278:	inc    eax
  408279:	pop    es
  40827a:	push   cs
  40827b:	or     DWORD PTR [ebx+0x7],eax
  40827e:	inc    ebp
  40827f:	or     DWORD PTR [edx],esi
  408281:	pop    es
  408282:	sbb    ecx,DWORD PTR [ecx]
  408284:	test   al,0x7
  408286:	or     DWORD PTR fs:[ebx],ebp
  408289:	pop    es
  40828a:	or     DWORD PTR [bp+si],ebp
  40828d:	pop    es
  40828e:	inc    esi
  40828f:	or     DWORD PTR ds:0x24094107,ebp
  408295:	pop    es
  408296:	dec    eax
  408297:	or     DWORD PTR [edi],ebp
  408299:	pop    es
  40829a:	inc    ebx
  40829b:	or     DWORD PTR [esi],esp
  40829d:	pop    es
  40829e:	push   0x8
  4082a0:	and    DWORD PTR [edi],eax
  4082a2:	ins    DWORD PTR es:[edi],dx
  4082a3:	or     BYTE PTR [eax],ah
  4082a5:	pop    es
  4082a6:	pop    esp
  4082a7:	or     BYTE PTR [ebx],dh
  4082a9:	pop    es
  4082aa:	pop    edi
  4082ab:	or     BYTE PTR [edx],dh
  4082ad:	pop    es
  4082ae:	dec    esi
  4082af:	or     BYTE PTR ds:0x1c084907,ah
  4082b5:	pop    es
  4082b6:	inc    eax
  4082b7:	or     BYTE PTR [edi],dh
  4082b9:	pop    es
  4082ba:	cmp    ecx,DWORD PTR [eax]
  4082bc:	cs pop es
  4082be:	jb     0x4082c8
  4082c0:	sbb    DWORD PTR [edi],eax
  4082c2:	xor    eax,0x34071808
  4082c7:	or     BYTE PTR [ebx-0x4af7c9fa],bh
  4082cd:	push   es
  4082ce:	cmp    DWORD PTR [eax],ecx
  4082d0:	mov    esp,0x30000006
  4082d5:	or     BYTE PTR [edi-0x61f7c4fa],dh
  4082db:	push   es
  4082dc:	xor    cl,BYTE PTR [eax]
  4082de:	mov    eax,ds:0x87d06
  4082e3:	nop
  4082e4:	shl    DWORD PTR [edx+0x3],cl
  4082e7:	enter  0x7adb,0x3
  4082eb:	mov    edx,ebx
  4082ed:	ja     0x4082f2
  4082ef:	mov    bl,bl
  4082f1:	js     0x4082f6
  4082f3:	(bad)  
  4082f4:	sar    DWORD PTR [ebp+0x3],cl
  4082f7:	test   bl,bl
  4082f9:	jle    0x4082fe
  4082fb:	(bad)  
  4082fc:	sar    DWORD PTR [ebx+0x3],cl
  4082ff:	xchg   bl,bl
  408301:	jl     0x408306
  408303:	adc    ebx,0xdb800371
  408309:	jb     0x40830e
  40830b:	push   ebx
  40830c:	shr    DWORD PTR [edi+0x3],cl
  40830f:	push   edx
  408310:	(bad)  [eax+0x3]
  408313:	inc    ebp
  408314:	shl    DWORD PTR [ebp+0x3],cl
  408317:	cmp    al,0xdb
  408319:	jbe    0x40831e
  40831b:	push   edi
  40831c:	shl    DWORD PTR [ebx+0x3],cl
  40831f:	dec    esi
  408320:	(bad)  [edx+0x3]
  408323:	cmp    ebx,edx
  408325:	dec    ecx
  408326:	add    edi,DWORD PTR [eax]
  408328:	fisttp DWORD PTR [eax+0x3]
  40832b:	sbb    edx,ebx
  40832d:	inc    esi
  40832e:	add    ebx,DWORD PTR [edx]
  408330:	fild   DWORD PTR [edi+0x3]
  408333:	sbb    eax,0x14034dd3
  408338:	add    BYTE PTR [eax],al
  40833a:	fisttp DWORD PTR [ebx+eax*1-0x1]
  40833e:	ror    BYTE PTR [ebx+0x3],1
  408341:	neg    al
  408343:	dec    edx
  408344:	add    esi,ecx
  408346:	rol    BYTE PTR [ecx+0x3],1
  408349:	lock fadd DWORD PTR [eax+0x3]
  40834d:	mov    cl,cl
  40834f:	jp     0x408374
  408351:	mov    esp,ecx
  408353:	add    eax,0x9d98a25
  408358:	and    eax,0x22e9d185
  40835d:	add    BYTE PTR [ecx+0x6],cl
  408360:	and    DWORD PTR [ebx],esp
  408362:	pop    edx
  408363:	push   es
  408364:	add    ah,BYTE PTR ds:0x23a1065b
  40836a:	push   esp
  40836b:	push   es
  40836c:	mov    ds:0xa405a523,eax
  408371:	and    eax,DWORD PTR [esi-0x68dc59fb]
  408377:	add    eax,0x5e0239b
  40837c:	popf   
  40837d:	and    eax,DWORD PTR [ecx-0x5ddc61fb]
  408383:	add    eax,0x59323a0
  408388:	test   al,0x23
  40838a:	mov    esp,0x3023ac05
  40838f:	push   es
  408390:	and    dl,BYTE PTR fs:[ecx+0x6]
  408394:	pusha  
  408395:	and    al,BYTE PTR [edx+0x6]
  408398:	and    dl,BYTE PTR gs:[ebx+0x6]
  40839c:	sub    esp,DWORD PTR [edx]
  40839e:	add    BYTE PTR [eax],al
  4083a0:	lods   al,BYTE PTR ds:[esi]
  4083a1:	add    eax,0x5fd2234
  4083a6:	sbb    eax,0x1e05fe22
  4083ab:	and    bh,cl
  4083ad:	add    eax,0x6042207
  4083b2:	cmp    al,0x22
  4083b4:	in     eax,0x5
  4083b6:	inc    ebx
  4083b7:	and    dh,cl
  4083b9:	add    eax,0x5c221d4
  4083be:	shl    BYTE PTR [ecx],cl
  4083c0:	jecxz  0x4083c7
  4083c2:	popa   
  4083c3:	and    ch,dl
  4083c5:	add    eax,0x5e6221a
  4083ca:	and    BYTE PTR [edx],0xe7
  4083cd:	add    eax,0xfe902283
  4083d2:	sub    BYTE PTR [edx],ah
  4083d4:	xor    esi,edi
  4083d6:	sub    DWORD PTR [edx],esp
  4083d8:	aad    0x7a
  4083da:	or     esp,DWORD PTR [edi]
  4083dc:	mov    bh,0x63
  4083de:	or     ebp,DWORD PTR [eax]
  4083e0:	mov    bh,0x5b
  4083e2:	or     eax,DWORD PTR [edx]
  4083e4:	idiv   DWORD PTR [edx+0xb]
  4083e7:	xchg   edx,eax
  4083e8:	aam    0x77
  4083ea:	or     edx,DWORD PTR [eax-0x6ef49b0c]
  4083f0:	hlt    
  4083f1:	ins    DWORD PTR es:[edi],dx
  4083f2:	or     edx,DWORD PTR [edx-0x6cf46d0c]
  4083f8:	hlt    
  4083f9:	jnp    0x408405
  4083fb:	and    bh,cl
  4083fd:	or     BYTE PTR [edx],0xc6
  408400:	lock or DWORD PTR [edx],0xb8000092
  408407:	jle    0x408413
  408409:	or     DWORD PTR [ecx-0x46f3f581],esi
  40840f:	mov    WORD PTR [edx],cs
  408411:	or     eax,0xa09c5b1
  408416:	mov    ecx,0xb12409d8
  40841b:	leave  
  40841c:	or     DWORD PTR [ebx],ecx
  40841e:	mov    ecx,0xb01809c6
  408423:	xlat   BYTE PTR ds:[ebx]
  408424:	or     DWORD PTR [eax],edx
  408426:	clc    
  408427:	mov    esi,0xc5f00c09
  40842c:	or     DWORD PTR [eax+edi*8],edx
  40842f:	lock or DWORD PTR [eax+esi*8],edi
  408433:	pop    ss
  408434:	or     bh,BYTE PTR [edx-0x44f5ed0a]
  40843a:	not    BYTE PTR [ecx]
  40843c:	or     al,BYTE PTR [eax]
  40843e:	clc    
  40843f:	adc    al,0xa
  408441:	mov    esp,0xbd0933f6
  408446:	mov    dh,0x36
  408448:	or     DWORD PTR [eax+esi*4],ebx
  40844b:	sub    eax,0x38b82409
  408450:	or     DWORD PTR [eax+esi*4],esi
  408453:	or     esi,ebx
  408455:	or     eax,0xde0e6c1
  40845a:	xlat   BYTE PTR ds:[ebx]
  40845b:	out    0x87,al
  40845d:	push   cs
  40845e:	(bad)  
  40845f:	jmp    0xea1792ee
  408464:	mov    DWORD PTR [esi],ecx
  408466:	fldl2t 
  408468:	test   BYTE PTR [esi],cl
  40846a:	add    BYTE PTR [eax],al
  40846c:	shr    cl,1
  40846e:	mov    ecx,DWORD PTR [esi]
  408470:	fucompp 
  408472:	xchg   BYTE PTR [esi],cl
  408474:	int    0xe9
  408476:	dec    ebp
  408477:	push   cs
  408478:	fsub   st(1),st
  40847a:	push   eax
  40847b:	push   cs
  40847c:	fucomip st,st(1)
  40847e:	aas    
  40847f:	push   cs
  408480:	leave  
  408481:	jmp    0xea0692c8
  408486:	push   esp
  408487:	push   cs
  408488:	mov    dh,0xe5
  40848a:	dec    esi
  40848b:	push   cs
  40848c:	mov    bl,0xe9
  40848e:	inc    ebp
  40848f:	push   cs
  408490:	mov    eax,0xa60e38e9
  408495:	jmp    0xe9a:0xea890e97
  40849c:	sub    dl,0x99
  40849f:	push   cs
  4084a0:	mov    ebp,edx
  4084a2:	xchg   esp,eax
  4084a3:	push   cs
  4084a4:	sub    dl,0x7b
  4084a7:	push   cs
  4084a8:	sub    eax,0x2c0e76eb
  4084ad:	jmp    0x40852c
  4084af:	push   cs
  4084b0:	pop    ds
  4084b1:	jmp    0x408523
  4084b3:	push   cs
  4084b4:	shr    dl,1
  4084b6:	popa   
  4084b7:	push   cs
  4084b8:	(bad)  
  4084b9:	jmp    0xed3c931a
  4084be:	push   ebx
  4084bf:	push   cs
  4084c0:	repz or DWORD PTR [edi+0xe],ecx
  4084c4:	out    dx,eax
  4084c5:	in     al,dx
  4084c6:	sub    DWORD PTR [esi],ecx
  4084c8:	cs jmp 0x4084ef
  4084cb:	push   cs
  4084cc:	sub    ebx,ebp
  4084ce:	jmp    FWORD PTR [ebx]
  4084d0:	add    BYTE PTR [eax],al
  4084d2:	ror    esi,cl
  4084d4:	and    BYTE PTR [edi],ah
  4084d6:	retf   
  4084d7:	iret   
  4084d8:	and    BYTE PTR [eax-0x4cdf1420],dh
  4084de:	fcomp  DWORD PTR [esi+eiz*1]
  4084e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e2:	ror    BYTE PTR [edx+0x25],1
  4084e5:	pushf  
  4084e6:	enter  0x2578,0xb7
  4084ea:	loopne 0x408530
  4084ec:	and    eax,0x2560d8ae
  4084f1:	cdq    
  4084f2:	rcl    BYTE PTR [ecx],1
  4084f4:	and    BYTE PTR [eax-0x44dfed38],bl
  4084fa:	loopne 0x408509
  4084fc:	and    BYTE PTR [edx-0x42dff128],bh
  408502:	ror    BYTE PTR [edi],1
  408504:	and    DWORD PTR [edi-0x61e00438],esi
  40850a:	loopne 0x408508
  40850c:	pop    ds
  40850d:	mov    al,ds:0x92270ed8
  408512:	rcr    BYTE PTR [ebp+0x25],1
  408515:	(bad)  
  408516:	enter  0x2549,0x44
  40851a:	loopne 0x408593
  40851c:	and    eax,0x2540d83f
  408521:	rcr    BYTE PTR ss:[edi+0x25],1
  408525:	dec    ecx
  408526:	enter  0x2527,0x48
  40852a:	loopne 0x40858e
  40852c:	and    eax,0x255cd84b
  408531:	dec    edx
  408532:	sar    BYTE PTR [edx+0x25],1
  408535:	inc    ebp
  408536:	add    BYTE PTR [eax],al
  408538:	enter  0x256c,0xc
  40853c:	loopne 0x408545
  40853e:	es pop es
  408540:	fsubr  st,st(3)
  408542:	pop    ds
  408543:	push   cs
  408544:	shl    BYTE PTR [ebx+0x25],1
  408547:	add    eax,ecx
  408549:	jnp    0x408570
  40854b:	add    ch,ah
  40854d:	cld    
  40854e:	mov    ebx,0x1bfce625
  408553:	xlat   BYTE PTR es:[ebx]
  408555:	cld    
  408556:	sbb    eax,0x62fe7826
  40855b:	mov    DWORD PTR es:[eax],eax
  40855e:	es call 0x7c26:0x6500
  408565:	add    BYTE PTR [eax],ah
  408567:	daa    
  408568:	jge    0x40856a
  40856a:	and    BYTE PTR [eax],ah
  40856c:	mov    es,WORD PTR [eax]
  40856e:	and    DWORD PTR [eax],esp
  408570:	pop    DWORD PTR [eax]
  408572:	adc    esp,DWORD PTR [edi]
  408574:	add    BYTE PTR [eax],0x17
  408577:	daa    
  408578:	add    DWORD PTR [eax],0x52266f
  40857e:	ins    DWORD PTR es:[edi],dx
  40857f:	es inc ebx
  408581:	add    BYTE PTR [edx+0x26],al
  408584:	inc    esp
  408585:	add    BYTE PTR [eax+0x26],al
  408588:	inc    ebp
  408589:	add    BYTE PTR [esi],cl
  40858b:	es push esi
  40858d:	add    BYTE PTR ds:0x17005723,dl
  408593:	and    DWORD PTR [eax+0x692037ff],ecx
  408599:	call   FWORD PTR [ecx]
  40859b:	and    BYTE PTR [eax],al
  40859d:	add    BYTE PTR [edx-0x1],bh
  4085a0:	sbb    eax,0x3bfd5f20
  4085a5:	add    BYTE PTR [edx-0x3],dl
  4085a8:	cmp    eax,0x27fd5400
  4085ad:	and    ah,BYTE PTR [ebp-0x4]
  4085b0:	es and bh,ah
  4085b3:	cld    
  4085b4:	scas   al,BYTE PTR es:[edi]
  4085b5:	add    dh,ch
  4085b7:	cld    
  4085b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b9:	and    ch,bh
  4085bb:	cld    
  4085bc:	sub    BYTE PTR [edx],ah
  4085be:	add    ch,bh
  4085c0:	or     DWORD PTR [ebx],esp
  4085c2:	repnz cld 
  4085c4:	pop    esi
  4085c5:	add    ch,dl
  4085c7:	jmp    0x950d:0xcf7180c
  4085ce:	mov    dh,0xf6
  4085d0:	or     al,0xa4
  4085d2:	mov    bh,0xdf
  4085d4:	or     al,0xcb
  4085d6:	mov    eax,0xb6080d13
  4085db:	push   ss
  4085dc:	or     eax,0xc48b72a
  4085e1:	xor    DWORD PTR [edi-0x487df3b6],0x74
  4085e8:	or     al,0xa2
  4085ea:	mov    bh,0x3c
  4085ec:	or     al,0xa3
  4085ee:	mul    DWORD PTR [edi+0x7]
  4085f1:	pop    ss
  4085f2:	cmc    
  4085f3:	inc    eax
  4085f4:	pop    es
  4085f5:	rcr    al,1
  4085f7:	inc    ecx
  4085f8:	pop    es
  4085f9:	rcl    eax,1
  4085fb:	inc    edx
  4085fc:	pop    es
  4085fd:	rcr    al,cl
  4085ff:	add    DWORD PTR [edi],0xffffffd3
  408602:	add    BYTE PTR [eax],al
  408604:	rol    BYTE PTR [edi+eax*1+0x77dd8d4],1
  40860b:	aad    0xd0
  40860d:	xchg   BYTE PTR [edi],al
  40860f:	(bad)  
  408610:	fdivr  DWORD PTR [edi+0x7]
  408613:	xlat   BYTE PTR ds:[ebx]
  408614:	rcr    BYTE PTR [eax-0x762727f9],1
  40861a:	pop    es
  40861b:	fnop   
  40861d:	mov    al,BYTE PTR [edi]
  40861f:	fcmovu st,st(0)
  408621:	fild   DWORD PTR [esi]
  408623:	fcmovnbe st,st(0)
  408625:	mov    esp,0xc5d8dc06
  40862a:	push   es
  40862b:	fst    st(0)
  40862d:	out    dx,al
  40862e:	push   es
  40862f:	(bad)  
  408631:	rol    DWORD PTR [esi],cl
  408633:	(bad)  
  408635:	repnz push es
  408637:	loopne 0x408611
  408639:	icebp  
  40863a:	push   es
  40863b:	loope  0x40860d
  40863d:	lock push es
  40863f:	loop   0x408619
  408641:	or     DWORD PTR [edx],ebx
  408643:	pop    es
  408644:	mov    dh,0x7
  408646:	adc    eax,0x1c07b907
  40864b:	pop    es
  40864c:	mov    al,0x7
  40864e:	pop    ss
  40864f:	pop    es
  408650:	jnp    0x408659
  408652:	inc    BYTE PTR [esi]
  408654:	jb     0x40865d
  408656:	add    DWORD PTR [edi],eax
  408658:	ins    DWORD PTR es:[edi],dx
  408659:	pop    es
  40865a:	lock push es
  40865c:	ins    BYTE PTR es:[edi],dx
  40865d:	pop    es
  40865e:	repz push es
  408660:	jg     0x408669
  408662:	mov    BYTE PTR [ecx],cl
  408664:	aam    0xfb
  408666:	mov    cl,BYTE PTR [ecx]
  408668:	add    BYTE PTR [eax],al
  40866a:	xlat   BYTE PTR ds:[ebx]
  40866b:	sti    
  40866c:	mov    DWORD PTR [ecx],ecx
  40866e:	(bad)  
  40866f:	sti    
  408670:	test   BYTE PTR [ecx],cl
  408672:	fsincos 
  408674:	mov    ecx,DWORD PTR [ecx]
  408676:	sar    bl,1
  408678:	xchg   BYTE PTR [ecx],cl
  40867a:	(bad)  
  40867c:	lea    ecx,[ecx]
  40867e:	sar    bl,cl
  408680:	or     BYTE PTR [ecx],0xdd
  408683:	sti    
  408684:	dec    edi
  408685:	or     esp,ebx
  408687:	sti    
  408688:	push   edx
  408689:	or     edi,ecx
  40868b:	sti    
  40868c:	inc    ecx
  40868d:	or     esi,ecx
  40868f:	sti    
  408690:	cmp    al,0x9
  408692:	loope  0x40868f
  408694:	push   ebx
  408695:	or     eax,ebx
  408697:	sti    
  408698:	dec    esi
  408699:	or     ebx,edx
  40869b:	sti    
  40869c:	inc    ebp
  40869d:	or     edx,ecx
  40869f:	sti    
  4086a0:	cmp    BYTE PTR [ecx],cl
  4086a2:	(bad)  
  4086a5:	or     esp,eax
  4086a7:	sti    
  4086a8:	call   0xc609:0x99fbc709
  4086af:	sti    
  4086b0:	xchg   esp,eax
  4086b1:	or     ecx,ebp
  4086b3:	sti    
  4086b4:	jnp    0x4086bf
  4086b6:	loopne 0x4086b3
  4086b8:	jbe    0x4086c3
  4086ba:	jmp    0x4086b7
  4086bc:	(bad)  
  4086bd:	jge    0x40868b
  4086bf:	adc    al,0xe
  4086c1:	jno    0x40869f
  4086c3:	adc    DWORD PTR [esi],ecx
  4086c5:	pusha  
  4086c6:	fcom   QWORD PTR [edx]
  4086c8:	push   cs
  4086c9:	arpl   sp,cx
  4086cb:	femms  
  4086cd:	push   edx
  4086ce:	add    BYTE PTR [eax],al
  4086d0:	int3   
  4086d1:	adc    BYTE PTR [esi],cl
  4086d3:	dec    ebp
  4086d4:	fmul   QWORD PTR ds:0xedc440e
  4086da:	push   cs
  4086db:	aas    
  4086dc:	int3   
  4086dd:	or     ecx,DWORD PTR [esi]
  4086df:	ss int3 
  4086e1:	or     al,0xe
  4086e3:	sub    esp,ebx
  4086e5:	jmp    0xeb1e2ef7
  4086ea:	or     eax,0xde7cdab
  4086ef:	stos   BYTE PTR es:[edi],al
  4086f0:	int    0xe8
  4086f2:	or     eax,0xde5dda5
  4086f7:	lods   al,BYTE PTR ds:[esi]
  4086f8:	fucom  st(6)
  4086fa:	or     eax,0xde3cda7
  4086ff:	scas   al,BYTE PTR es:[edi]
  408700:	int    0xe4
  408702:	or     eax,0xde1dda1
  408707:	mov    al,0xdd
  408709:	loop   0x408718
  40870b:	mov    bl,0xcd
  40870d:	fisttp WORD PTR ds:0xde0cda2
  408713:	popf   
  408714:	fstp   st(5)
  408716:	or     eax,0xddeddb4
  40871b:	scas   eax,DWORD PTR es:[edi]
  40871c:	int    0xdb
  40871e:	or     eax,0xddccda6
  408723:	cdq    
  408724:	(bad)  
  408726:	or     eax,0xdfadd38
  40872b:	cmp    ecx,ebp
  40872d:	test   DWORD PTR ds:0xdf8cd3a,0xdd000035
  408737:	cmc    
  408738:	or     eax,0x3501e900
  40873d:	push   cs
  40873e:	jmp    0x3701:0xdb0e3601
  408745:	push   cs
  408746:	les    eax,FWORD PTR [ecx]
  408748:	cmp    BYTE PTR [esi],cl
  40874a:	adc    eax,0x160e3902
  40874f:	add    bh,BYTE PTR [edx]
  408751:	push   cs
  408752:	loop   0x408755
  408754:	ds push cs
  408756:	ret    
  408757:	add    DWORD PTR [edi],edi
  408759:	push   cs
  40875a:	fadd   QWORD PTR [ecx]
  40875c:	inc    eax
  40875d:	push   cs
  40875e:	int    0x1
  408760:	inc    ecx
  408761:	push   cs
  408762:	into   
  408763:	add    DWORD PTR [edx+0xe],eax
  408766:	fild   WORD PTR [ecx]
  408768:	inc    ebx
  408769:	push   cs
  40876a:	cwde   
  40876b:	add    eax,DWORD PTR [esi+ecx*1-0x67]
  40876f:	add    eax,DWORD PTR [ebp+0xe]
  408772:	mov    al,BYTE PTR [ebx]
  408774:	inc    esi
  408775:	push   cs
  408776:	sbb    eax,DWORD PTR [ebx]
  408778:	inc    edi
  408779:	push   cs
  40877a:	and    al,0x3
  40877c:	dec    eax
  40877d:	push   cs
  40877e:	and    eax,0x160e4903
  408783:	add    ecx,DWORD PTR [edx+0xe]
  408786:	pop    ss
  408787:	add    ecx,DWORD PTR [ebx+0xe]
  40878a:	inc    eax
  40878b:	add    ecx,DWORD PTR [esi+ecx*1+0x51]
  40878f:	add    ecx,DWORD PTR [ebp+0xe]
  408792:	cmp    al,0x3
  408794:	push   eax
  408795:	push   cs
  408796:	ins    DWORD PTR es:[edi],dx
  408797:	add    edx,DWORD PTR [ecx+0xe]
  40879a:	add    BYTE PTR [eax],al
  40879c:	mov    es,WORD PTR [edx]
  40879e:	push   edx
  40879f:	push   cs
  4087a0:	jg     0x4087a4
  4087a2:	push   ebx
  4087a3:	push   cs
  4087a4:	js     0x4087a8
  4087a6:	push   esp
  4087a7:	push   cs
  4087a8:	imul   eax,DWORD PTR [edx],0x28a0e55
  4087ae:	push   esi
  4087af:	push   cs
  4087b0:	mov    eax,DWORD PTR [edx]
  4087b2:	push   edi
  4087b3:	push   cs
  4087b4:	aad    0xd8
  4087b6:	push   es
  4087b7:	pop    eax
  4087b8:	jecxz  0x408793
  4087ba:	push   es
  4087bb:	pop    ecx
  4087bc:	fild   DWORD PTR [ecx+0x7f043106]
  4087c2:	push   es
  4087c3:	xor    al,BYTE PTR [eax+eax*4]
  4087c6:	push   es
  4087c7:	xor    esp,esp
  4087c9:	test   BYTE PTR [esi],al
  4087cb:	xor    al,0xe4
  4087cd:	mov    ebp,0xc2e43505
  4087d2:	add    eax,0x5bbe436
  4087d7:	aaa    
  4087d8:	(bad)  
  4087d9:	enter  0x3805,0xc4
  4087dd:	fld    DWORD PTR ds:0x5d6c439
  4087e3:	cmp    al,ah
  4087e5:	mov    DWORD PTR ds:0x5eca43b,0x595a43c
  4087ef:	cmp    eax,0x3e057aa4
  4087f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f5:	add    DWORD PTR ds:0x591043f,0x40
  4087fc:	add    al,0xb2
  4087fe:	add    al,0x41
  408800:	add    BYTE PTR [eax],al
  408802:	add    al,0xaf
  408804:	add    al,0x42
  408806:	add    al,0xb0
  408808:	add    al,0x43
  40880a:	in     al,0xb4
  40880c:	add    al,0x44
  40880e:	in     al,0xcd
  408810:	add    al,0x45
  408812:	in     al,0xd2
  408814:	add    al,0x46
  408816:	in     al,0xcb
  408818:	add    al,0x47
  40881a:	(bad)  
  40881b:	fadd   DWORD PTR [eax+ecx*2]
  40881e:	(bad)  
  40881f:	leave  
  408820:	add    al,0x49
  408822:	(bad)  
  408823:	mov    BYTE PTR [edx+ecx*2],0xc4
  408827:	test   DWORD PTR [ebx+ecx*2],0x4c04dca4
  40882e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882f:	or     DWORD PTR [ebp+eax*1+0x59ef890],esp
  408836:	mov    edi,eax
  408838:	xchg   ebp,eax
  408839:	add    eax,0x528db22
  40883e:	and    eax,0x240527db
  408843:	fld    TBYTE PTR [edx]
  408845:	add    eax,0x529db27
  40884a:	push   es
  40884b:	(bad)  [eax*1+0x52bdb01]
  408852:	or     bl,bl
  408854:	es add eax,0x52ddb03
  40885a:	sub    bl,bl
  40885c:	and    BYTE PTR ds:0x52fdb2d,al
  408862:	sbb    al,0xdb
  408864:	xor    al,BYTE PTR ds:0xdb1f0000
  40886a:	and    DWORD PTR ds:0x51cdb0e,eax
  408870:	or     ebx,ebx
  408872:	mov    bl,0x2
  408874:	add    bl,bl
  408876:	scas   al,BYTE PTR es:[edi]
  408877:	add    bh,bl
  408879:	fisub  DWORD PTR [ebp-0x47254dfe]
  40887f:	add    dh,BYTE PTR [ebp-0x4bfd6826]
  408885:	ficomp DWORD PTR [edx-0x662548fe]
  40888b:	add    dh,BYTE PTR [esi+0x7d0294da]
  408891:	sti    
  408892:	mov    ebx,0xb6fb6c02
  408897:	add    ch,BYTE PTR [edi-0x5]
  40889a:	mov    ebp,0xb0fb3e02
  40889f:	add    bh,BYTE PTR [ecx]
  4088a1:	sti    
  4088a2:	lahf   
  4088a3:	add    dh,BYTE PTR [eax]
  4088a5:	sti    
  4088a6:	mov    ds:0xfffb2b02,al
  4088ab:	xchg   ecx,eax
  4088ac:	xlat   BYTE PTR ds:[ebx]
  4088ad:	js     0x4088c0
  4088af:	(bad)  
  4088b0:	xlat   BYTE PTR ds:[ebx]
  4088b1:	pop    ecx
  4088b2:	adc    DWORD PTR [edi+edx*8+0x5a],eax
  4088b6:	adc    DWORD PTR [edi],edi
  4088b8:	xlat   BYTE PTR ds:[ebx]
  4088b9:	pop    ebx
  4088ba:	adc    DWORD PTR [esi],esi
  4088bc:	xlat   BYTE PTR ds:[ebx]
  4088bd:	pop    esp
  4088be:	adc    DWORD PTR [ecx-0x29],ecx
  4088c1:	pop    ebp
  4088c2:	adc    DWORD PTR [eax-0x29],ecx
  4088c5:	pop    esi
  4088c6:	adc    DWORD PTR [ebx-0x29],ecx
  4088c9:	pop    edi
  4088ca:	adc    DWORD PTR [edx+0x0],ecx
  4088cd:	add    bh,dl
  4088cf:	pusha  
  4088d0:	adc    DWORD PTR [ebp-0x29],eax
  4088d3:	popa   
  4088d4:	adc    DWORD PTR [edi+edx*8],ecx
  4088d7:	bound  edx,QWORD PTR [ecx]
  4088d9:	pop    es
  4088da:	xlat   BYTE PTR ds:[ebx]
  4088db:	arpl   WORD PTR [ecx],dx
  4088dd:	push   cs
  4088de:	xlat   BYTE PTR ds:[ebx]
  4088df:	adc    DWORD PTR fs:[ecx],eax
  4088e2:	xlat   BYTE PTR ds:[ebx]
  4088e3:	adc    DWORD PTR gs:[eax],edx
  4088e6:	xlat   BYTE PTR ds:[ebx]
  4088e7:	adc    WORD PTR [ebx],dx
  4088ea:	xlat   BYTE PTR ds:[ebx]
  4088eb:	adc    DWORD PTR [bp+si],eax
  4088ee:	xlat   BYTE PTR ds:[ebx]
  4088ef:	push   0x49d4fd11
  4088f4:	adc    esp,edx
  4088f6:	aam    0x4a
  4088f8:	adc    edi,ecx
  4088fa:	aam    0x4b
  4088fc:	adc    esi,eax
  4088fe:	aam    0xb6
  408900:	xor    cl,bl
  408902:	aam    0x9a
  408904:	xor    BYTE PTR [eax-0x44cf5e2c],bh
  40890a:	aam    0xa8
  40890c:	xor    BYTE PTR [edx-0x4ace752c],bh
  408912:	aam    0x8d
  408914:	xor    DWORD PTR [esp+edx*8-0x2b68ce71],ebx
  40891b:	xchg   esi,eax
  40891c:	xor    DWORD PTR [esi-0x6ece682c],ebx
  408922:	aam    0x34
  408924:	adc    DWORD PTR [eax],eax
  408926:	push   ebp
  408927:	or     dh,al
  408929:	adc    DWORD PTR [esi+0xa],edx
  40892c:	stc    
  40892d:	adc    DWORD PTR [ebx+0xa],ebp
  408930:	test   eax,0x90000020
  408935:	jmp    FWORD PTR [ebx+0x51ff3820]
  40893b:	add    DWORD PTR [ecx],edi
  40893d:	call   DWORD PTR [edx+0x1]
  408940:	push   0x0
  408942:	js     0x408945
  408944:	pop    esp
  408945:	sub    ebx,DWORD PTR [edi-0x5fd4b2e0]
  40894b:	and    BYTE PTR [esi+0x2b],cl
  40894e:	mov    eax,ds:0xa22b5f20
  408953:	and    BYTE PTR [eax+0x2b],dl
  408956:	mov    ds:0xa42b1120,eax
  40895b:	and    BYTE PTR [edx],dl
  40895d:	sub    esp,DWORD PTR [ebp-0x59d4dce0]
  408963:	and    BYTE PTR [ebx+ebp*1],dl
  408966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408967:	and    BYTE PTR ds:0x2620a82b,ah
  40896d:	sub    ebp,DWORD PTR [ecx-0x55d4e8e0]
  408973:	and    BYTE PTR [eax+0x6420ab2a],ch
  408979:	(bad)  
  40897b:	jmp    DWORD PTR [ebx+ecx*1+0x0]
  40897f:	add    BYTE PTR ds:0x35ffffda,dh
  408985:	or     eax,DWORD PTR [eax]
  408987:	add    BYTE PTR [edi-0x26],al
  40898a:	(bad)  
  40898b:	jmp    FWORD PTR [eax]
  40898d:	or     eax,DWORD PTR [eax]
  40898f:	add    BYTE PTR [ecx],bh
  408991:	(bad)  
  408993:	dec    DWORD PTR [ecx]
  408995:	or     eax,DWORD PTR [eax]
  408997:	add    BYTE PTR [eax],al
  408999:	add    BYTE PTR [edi],bl
  40899b:	(bad)  
  40899d:	call   FWORD PTR [edi]
  40899f:	or     eax,DWORD PTR [eax]
  4089a1:	add    ch,dl
  4089a3:	sbb    esi,DWORD PTR [eax]
  4089a5:	add    ch,dl
  4089a7:	sbb    eax,DWORD PTR [ebx]
  4089a9:	add    ch,dl
  4089ab:	(bad)  
  4089ac:	xor    DWORD PTR [eax],eax
  4089ae:	aad    0x56
  4089b0:	add    al,BYTE PTR [eax]
  4089b2:	aad    0x0
  4089b4:	xor    DWORD PTR [eax],eax
  4089b6:	aad    0x4c
  4089b8:	add    al,BYTE PTR [eax]
  4089ba:	aad    0x61
  4089bc:	xor    BYTE PTR [eax],al
  4089be:	aad    0xd
  4089c0:	add    eax,DWORD PTR [eax]
  4089c2:	aad    0x62
  4089c4:	xor    BYTE PTR [eax],al
  4089c6:	aad    0xe
  4089c8:	add    eax,DWORD PTR [eax]
  4089ca:	aad    0x83
  4089cc:	xor    BYTE PTR [eax],al
  4089ce:	aad    0xf
  4089d0:	add    eax,DWORD PTR [eax]
  4089d2:	aad    0x84
  4089d4:	xor    BYTE PTR [eax],al
  4089d6:	aad    0x8
  4089d8:	add    eax,DWORD PTR [eax]
  4089da:	aad    0x65
  4089dc:	xor    BYTE PTR [eax],al
  4089de:	aad    0x51
  4089e0:	add    al,BYTE PTR [eax]
  4089e2:	aad    0x66
  4089e4:	xor    BYTE PTR [eax],al
  4089e6:	aad    0x52
  4089e8:	add    al,BYTE PTR [eax]
  4089ea:	aad    0x87
  4089ec:	xor    BYTE PTR [eax],al
  4089ee:	aad    0x53
  4089f0:	add    al,BYTE PTR [eax]
  4089f2:	aad    0x90
  4089f4:	xor    BYTE PTR [eax],al
  4089f6:	aad    0x49
  4089f8:	add    eax,DWORD PTR [eax]
  4089fa:	aad    0xd1
  4089fc:	xor    BYTE PTR [eax],al
  4089fe:	add    BYTE PTR [eax],al
  408a00:	aad    0x14
  408a02:	add    al,0x0
  408a04:	aad    0xd2
  408a06:	xor    BYTE PTR [eax],al
  408a08:	aad    0xb
  408a0a:	add    al,0x0
  408a0c:	aad    0xd3
  408a0e:	xor    BYTE PTR [eax],al
  408a10:	aad    0x15
  408a12:	add    eax,DWORD PTR [eax]
  408a14:	aad    0xca
  408a16:	xor    BYTE PTR [eax],al
  408a18:	aad    0x27
  408a1a:	add    eax,DWORD PTR [eax]
  408a1c:	aad    0x9
  408a1e:	adc    dh,BYTE PTR [ecx]
  408a20:	aad    0x9
  408a22:	jmp    0xd530:0x6909d502
  408a29:	or     ecx,ecx
  408a2b:	add    edx,ebp
  408a2d:	or     DWORD PTR [eax+0x30],esi
  408a30:	aad    0x9
  408a32:	lock add edx,ebp
  408a35:	or     DWORD PTR [eax+esi*1-0x2b],esp
  408a39:	or     esp,ebx
  408a3b:	add    dl,ch
  408a3d:	or     DWORD PTR [eax+0x30],edi
  408a40:	aad    0x9
  408a42:	fld    DWORD PTR [ebx]
  408a44:	aad    0x9
  408a46:	jnp    0x408a78
  408a48:	aad    0x9
  408a4a:	fadd   DWORD PTR [ebx]
  408a4c:	aad    0x9
  408a4e:	pop    edx
  408a4f:	xor    ch,dl
  408a51:	or     DWORD PTR [ebx+0x5d09d503],edi
  408a57:	xor    ch,dl
  408a59:	or     DWORD PTR [edx+0x7c09d503],edi
  408a5f:	xor    ch,dl
  408a61:	or     ebp,eax
  408a63:	add    eax,DWORD PTR [eax]
  408a65:	add    ch,dl
  408a67:	or     DWORD PTR [edi+0x30],edi
  408a6a:	aad    0x9
  408a6c:	les    eax,FWORD PTR [ebx]
  408a6e:	aad    0x9
  408a70:	pop    esi
  408a71:	xor    ch,dl
  408a73:	or     edi,eax
  408a75:	add    edx,ebp
  408a77:	or     DWORD PTR [ecx+0x30],edx
  408a7a:	aad    0x9
  408a7c:	mov    BYTE PTR [ebx],0xd5
  408a7f:	or     DWORD PTR [eax+0x1109d52f],eax
  408a85:	add    al,0xd5
  408a87:	or     DWORD PTR [ebp+0x2f],esi
  408a8a:	aad    0x9
  408a8c:	or     al,BYTE PTR [edx*8-0x2ad09cf7]
  408a93:	or     DWORD PTR [eax],ecx
  408a95:	add    al,0xd5
  408a97:	or     DWORD PTR [eax],eax
  408a99:	push   edx
  408a9a:	cli    
  408a9b:	or     DWORD PTR [eax],eax
  408a9d:	or     ebx,ecx
  408a9f:	or     DWORD PTR [eax],eax
  408aa1:	test   dl,ch
  408aa3:	or     DWORD PTR [eax],eax
  408aa5:	in     eax,dx
  408aa6:	(bad)  
  408aa7:	or     DWORD PTR [eax],eax
  408aa9:	ja     0x408a65
  408aab:	or     DWORD PTR [eax],eax
  408aad:	mov    esp,0x660009d6
  408ab2:	stos   BYTE PTR es:[edi],al
  408ab3:	or     DWORD PTR [eax],eax
  408ab5:	iret   
  408ab6:	(bad)  
  408ab7:	or     DWORD PTR [eax],eax
  408ab9:	inc    ebx
  408aba:	mov    edx,0xd9030009
  408abf:	or     DWORD PTR [eax],eax
  408ac1:	xchg   edx,eax
  408ac2:	stos   BYTE PTR es:[edi],al
  408ac3:	or     DWORD PTR [eax],eax
  408ac5:	rcl    dh,cl
  408ac7:	or     DWORD PTR [eax],eax
  408ac9:	test   DWORD PTR [eax],eax
  408acb:	add    dl,bh
  408acd:	or     DWORD PTR [eax],eax
  408acf:	mov    ebp,0x940009d6
  408ad4:	jmp    0x9:0xd6cc0009
  408adb:	xchg   edx,edi
  408add:	or     DWORD PTR [eax],eax
  408adf:	mov    edi,0x560009d6
  408ae4:	jmp    0x9:0xd98e0009
  408aeb:	pop    ecx
  408aec:	mov    edx,0xd6890009
  408af1:	or     DWORD PTR [eax],eax
  408af3:	cmp    BYTE PTR [edx-0x2977fff7],ch
  408af9:	or     DWORD PTR [eax],eax
  408afb:	cmp    edi,DWORD PTR [edx-0x2974fff7]
  408b01:	or     DWORD PTR [eax],eax
  408b03:	call   0x9d9:0x4a0009ab
  408b0a:	add    BYTE PTR [ebp+0x450009fb],bl
  408b10:	(bad)  [ecx]
  408b12:	add    BYTE PTR [eax],al
  408b14:	mov    ecx,0x99fffff3
  408b19:	or     eax,0xf3aa0000
  408b1e:	(bad)  
  408b1f:	call   FWORD PTR [edx+0x7b00000d]
  408b25:	repz (bad) 
  408b27:	(bad)  
  408b28:	fisttp DWORD PTR ds:0xf3a40000
  408b2e:	(bad)  
  408b2f:	inc    DWORD PTR [eax]
  408b31:	add    ah,dl
  408b33:	or     eax,0xf3950000
  408b38:	(bad)  
  408b39:	inc    ebp
  408b3b:	or     eax,0xf3a20000
  408b40:	(bad)  
  408b41:	(bad)  
  408b42:	fadd   QWORD PTR [edi]
  408b44:	add    BYTE PTR [eax],al
  408b46:	xor    esi,ebx
  408b48:	(bad)  
  408b49:	jmp    FWORD PTR [ebp-0x3fffff9]
  408b4f:	repz (bad) 
  408b51:	call   FWORD PTR [esi-0x12fffff9]
  408b57:	repz (bad) 
  408b59:	jmp    FWORD PTR [edi+0x7]
  408b5c:	add    BYTE PTR [eax],al
  408b5e:	(bad)  
  408b5f:	repz (bad) 
  408b61:	jmp    FWORD PTR [eax+0x7]
  408b64:	add    BYTE PTR [eax],al
  408b66:	out    dx,eax
  408b67:	repz (bad) 
  408b69:	jmp    FWORD PTR [ecx+0x7]
  408b6c:	add    BYTE PTR [eax],al
  408b6e:	mov    eax,0x6afffff3
  408b73:	pop    es
  408b74:	add    BYTE PTR [eax],al
  408b76:	test   eax,0xebfffff3
  408b7b:	push   es
  408b7c:	add    BYTE PTR [eax],al
  408b7e:	mov    edx,0xe4fffff3
  408b83:	push   es
  408b84:	add    BYTE PTR [eax],al
  408b86:	sub    esi,ebp
  408b88:	(bad)  
  408b89:	push   DWORD PTR [ebp-0x2afffff3]
  408b8f:	push   0xb6d5002d
  408b94:	add    eax,DWORD PTR [eax]
  408b96:	add    BYTE PTR [eax],al
  408b98:	aad    0x59
  408b9a:	sub    eax,0x3c7d500
  408b9f:	add    ch,dl
  408ba1:	sub    ax,0xd500
  408ba5:	hlt    
  408ba6:	add    eax,DWORD PTR [eax]
  408ba8:	aad    0x57
  408baa:	sub    eax,0x405d500
  408baf:	add    ch,dl
  408bb1:	ins    BYTE PTR es:[edi],dx
  408bb2:	sub    eax,0x412d500
  408bb7:	add    ch,dl
  408bb9:	pop    ebp
  408bba:	sub    eax,0x323d500
  408bbf:	add    ch,dl
  408bc1:	push   0x2d
  408bc3:	add    ch,dl
  408bc5:	mov    al,0x3
  408bc7:	add    ch,dl
  408bc9:	fld    TBYTE PTR [eax+eax*1]
  408bcc:	aad    0xb1
  408bce:	add    eax,DWORD PTR [eax]
  408bd0:	aad    0xe0
  408bd2:	sub    al,0x0
  408bd4:	aad    0xae
  408bd6:	add    eax,DWORD PTR [eax]
  408bd8:	aad    0x1
  408bda:	sub    eax,0x3afd500
  408bdf:	add    ch,dl
  408be1:	(bad)  
  408be2:	sub    al,0x0
  408be4:	aad    0xac
  408be6:	add    eax,DWORD PTR [eax]
  408be8:	aad    0xdf
  408bea:	sub    al,0x0
  408bec:	aad    0xad
  408bee:	add    eax,DWORD PTR [eax]
  408bf0:	aad    0xe4
  408bf2:	sub    al,0x0
  408bf4:	aad    0xaa
  408bf6:	add    eax,DWORD PTR [eax]
  408bf8:	aad    0x5
  408bfa:	sub    eax,0xd5000000
  408bff:	stos   DWORD PTR es:[edi],eax
  408c00:	add    eax,DWORD PTR [eax]
  408c02:	aad    0x11
  408c04:	sub    eax,0x3d0d500
  408c09:	add    ch,dl
  408c0b:	or     ebx,ecx
  408c0d:	sub    al,0xd5
  408c0f:	or     DWORD PTR [eax-0x35f62afd],ecx
  408c15:	sub    al,0xd5
  408c17:	or     DWORD PTR [ebx-0x32f62afd],ecx
  408c1d:	sub    al,0xd5
  408c1f:	or     DWORD PTR [edx-0x3ff62afe],ecx
  408c25:	sub    al,0xd5
  408c27:	or     DWORD PTR [ebp-0x6cf62afd],eax
  408c2d:	sub    al,0xd5
  408c2f:	or     DWORD PTR [edx+eax*1-0x2b],eax
  408c33:	or     DWORD PTR [edx+0x3209d52c],eax
  408c39:	add    al,0xd5
  408c3b:	or     DWORD PTR [ebp+0x1d09d52c],edx
  408c41:	add    al,0xd5
  408c43:	or     DWORD PTR [esi],ecx
  408c45:	sub    eax,0x40c09d5
  408c4a:	aad    0x9
  408c4c:	jmp    0x408c51
  408c4e:	aad    0x9
  408c50:	sub    ecx,0x3a421ca
  408c56:	aad    0x9
  408c58:	call   0xef4a6160
  408c5d:	add    edx,ebp
  408c5f:	or     ecx,edi
  408c61:	mov    dh,0x0
  408c63:	add    BYTE PTR [edx-0x2afc13df],ch
  408c69:	or     ecx,edi
  408c6b:	mov    dh,0x9a
  408c6d:	and    eax,ebp
  408c6f:	add    ebp,edx
  408c71:	or     ecx,ebp
  408c73:	add    edx,ebp
  408c75:	or     ebx,ebp
  408c77:	add    ebp,edx
  408c79:	or     ebx,ebp
  408c7b:	add    edx,ebp
  408c7d:	or     eax,ebp
  408c7f:	add    dl,ch
  408c81:	or     ebp,esp
  408c83:	add    edx,ebp
  408c85:	or     DWORD PTR [eax],eax
  408c87:	jmp    0x408c60
  408c89:	or     DWORD PTR [eax],eax
  408c8b:	out    0xd6,eax
  408c8d:	or     DWORD PTR [eax],eax
  408c8f:	mov    esp,0x4effca5f
  408c94:	mov    ah,0xc9
  408c96:	call   FWORD PTR [esp+esi*4-0x37]
  408c9a:	inc    DWORD PTR [edx]
  408c9c:	push   ds
  408c9d:	repz call FWORD PTR [eax]
  408ca0:	outs   dx,BYTE PTR ds:[esi]
  408ca1:	mov    esp,0x9d6e953
  408ca6:	add    BYTE PTR [esi],ch
  408ca8:	adc    al,0xbd
  408caa:	jmp    DWORD PTR [eax]
  408cac:	add    eax,0x9d64fbd
  408cb1:	out    dx,eax
  408cb2:	xor    cl,ch
  408cb4:	(bad)  
  408cb5:	or     DWORD PTR [eax],eax
  408cb7:	sub    BYTE PTR [edx],bh
  408cb9:	lods   al,BYTE PTR ds:[esi]
  408cba:	sbb    DWORD PTR fs:[ebp-0x12],eax
  408cbe:	dec    ebx
  408cbf:	or     BYTE PTR [edi-0x58],cl
  408cc2:	je     0x408ccc
  408cc4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408cc6:	cmp    ecx,ecx
  408cc8:	add    BYTE PTR [eax],al
  408cca:	(bad)  
  408ccb:	or     DWORD PTR [eax],eax
  408ccd:	(bad)  
  408ccf:	and    bh,bh
  408cd1:	stos   BYTE PTR es:[edi],al
  408cd2:	outs   dx,DWORD PTR ds:[esi]
  408cd3:	scas   al,BYTE PTR es:[edi]
  408cd4:	ins    DWORD PTR es:[edi],dx
  408cd5:	les    esi,FWORD PTR [ebx-0x64]
  408cd8:	push   0x1fe25cc6
  408cdd:	stos   BYTE PTR es:[edi],al
  408cde:	bound  ebp,QWORD PTR [edi+0x12adcc72]
  408ce4:	add    BYTE PTR [eax+eiz*2+0x3cc66cb4],dh
  408ceb:	out    dx,al
  408cec:	arpl   WORD PTR [ebp-0x4900dfbe],di
  408cf2:	cmp    BYTE PTR [eax+eiz*2+0x72b56c90],bl
  408cf9:	mov    WORD PTR [eax-0x37],cs
  408cfc:	data16 test BYTE PTR [esp+ebx*4+0x52],bl
  408d01:	add    al,dh
  408d03:	push   esi
  408d04:	push   0xc536e
  408d09:	add    BYTE PTR [ebp+0x7],ch
  408d0c:	add    al,0x0
  408d0e:	ins    BYTE PTR es:[edi],dx
  408d0f:	or     al,0x0
  408d11:	add    BYTE PTR [eax],al
  408d13:	push   es
  408d14:	dec    ecx
  408d15:	add    BYTE PTR [edi],cl
  408d17:	push   es
  408d18:	push   eax
  408d19:	add    al,bh
  408d1b:	add    eax,0x6050041
  408d20:	add    BYTE PTR [eax],al
  408d22:	sahf   
  408d23:	push   0x7d936663
  408d28:	imul   ebp,DWORD PTR [ebx-0x68],0x706d82
  408d2f:	add    ch,bl
  408d31:	push   edi
  408d32:	jb     0x408da8
  408d34:	repnz pop esp
  408d36:	ja     0x408db2
  408d38:	(bad)  [edx+0x68]
  408d3b:	outs   dx,DWORD PTR ds:[esi]
  408d3c:	loope  0x408dac
  408d3e:	(bad)  
  408d3f:	jmp    FWORD PTR [ecx+0x35003feb]
  408d45:	jmp    0x408d86
  408d47:	add    dl,cl
  408d49:	or     DWORD PTR [ebx+0x0],eax
  408d4c:	retf   0x4309
  408d4f:	add    ah,dl
  408d51:	pop    ecx
  408d52:	jae    0x408dc4
  408d54:	test   BYTE PTR [edx+0x2e],0x77
  408d58:	mov    ds:0x95622d5c,eax
  408d5d:	and    DWORD PTR [esi+0x2e],0x2f6c848f
  408d64:	mov    esp,0x8400000b
  408d69:	outs   dx,DWORD PTR ds:[esi]
  408d6a:	jae    0x408ddc
  408d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d6d:	inc    esp
  408d6e:	cs ja  0x408dd4
  408d71:	pop    esp
  408d72:	sub    eax,0x66846b67
  408d77:	ins    BYTE PTR es:[edi],dx
  408d78:	push   ecx
  408d79:	inc    ecx
  408d7a:	bound  ebp,QWORD PTR [edi-0x2b]
  408d7d:	test   edx,ebx
  408d7f:	(bad)  
  408d80:	jp     0x408d9f
  408d82:	scas   al,BYTE PTR es:[edi]
  408d83:	aas    
  408d84:	aad    0xfc
  408d86:	scas   al,BYTE PTR es:[edi]
  408d87:	aas    
  408d88:	aad    0x80
  408d8a:	add    esi,DWORD PTR [edx-0x2b]
  408d8d:	xchg   DWORD PTR [ebx],eax
  408d8f:	push   0x620389d5
  408d94:	add    BYTE PTR [eax],al
  408d96:	aad    0xb9
  408d98:	add    esi,DWORD PTR [ebp+edx*8-0x1c]
  408d9c:	add    edx,DWORD PTR [ebp+edx*8-0x14]
  408da0:	add    eax,DWORD PTR [eax]
  408da2:	aad    0x30
  408da4:	add    eax,DWORD PTR [eax]
  408da6:	aad    0xf1
  408da8:	lds    eax,FWORD PTR [edx-0x6f]
  408dab:	in     eax,0xc1
  408dad:	inc    esi
  408dae:	(bad)  
  408daf:	jmp    0xfdc9d871
  408db4:	mov    ecx,0xd5e1a54e
  408db9:	push   edx
  408dba:	mov    eax,ds:0x9d56d1d5
  408dbf:	fxch   st(5)
  408dc1:	pusha  
  408dc2:	ja     0x408dd7
  408dc4:	mov    al,ds:0x9c0f7b64
  408dc9:	push   0x6c97fb7f
  408dce:	jae    0x408dd7
  408dd0:	mov    ah,0x70
  408dd2:	and    ebp,DWORD PTR [bx+0x4b74]
  408dd7:	inc    eax
  408dd8:	stos   DWORD PTR es:[edi],eax
  408dd9:	js     0x408e2a
  408ddb:	add    ebx,esi
  408ddd:	xor    DWORD PTR [esi],eax
  408ddf:	std    
  408de0:	out    dx,al
  408de1:	xor    eax,0x2aeaf902
  408de6:	add    dh,BYTE PTR [ecx]
  408de8:	add    eax,DWORD PTR [eax]
  408dea:	aad    0x30
  408dec:	add    eax,DWORD PTR [eax]
  408dee:	aad    0x54
  408df0:	fbld   TBYTE PTR [ebx]
  408df2:	icebp  
  408df3:	ins    DWORD PTR es:[edi],dx
  408df4:	mov    ch,0x72
  408df6:	or     DWORD PTR [edx],ecx
  408df8:	pushf  
  408df9:	mov    cl,0x0
  408dfb:	add    BYTE PTR [ebx],al
  408dfd:	mov    ds:0xe5ffad9f,al
  408e02:	int3   
  408e03:	fbstp  TBYTE PTR [esi-0x4f203b1b]
  408e09:	fisubr WORD PTR [eax-0x5b34eb3e]
  408e0f:	mov    esi,0xbaa0c718
  408e14:	or     al,0xd3
  408e16:	pushf  
  408e17:	mov    dh,0xa0
  408e19:	into   
  408e1a:	cmp    bl,dl
  408e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e1d:	mov    edx,0xb6a8cf34
  408e22:	or     al,0xe0
  408e24:	mul    ch
  408e26:	add    al,0xe0
  408e28:	mov    al,al
  408e2a:	and    cl,ch
  408e2c:	mov    ?,WORD PTR [esi+ebx*1+0x4aa882c9]
  408e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e34:	mov    dh,0xa4
  408e36:	inc    esi
  408e37:	mov    eax,ds:0x9d12b07a
  408e3c:	jle    0x408dea
  408e3e:	push   cs
  408e3f:	cdq    
  408e40:	jb     0x408dda
  408e42:	call   0xbf4a634a
  408e47:	add    edi,DWORD PTR [ecx+0x9]
  408e4a:	or     BYTE PTR [ecx+eiz*2],al
  408e4d:	or     ecx,ebp
  408e4f:	add    edx,ebp
  408e51:	or     DWORD PTR [edx],ebx
  408e53:	add    al,0x70
  408e55:	or     DWORD PTR [edx],ebx
  408e57:	add    al,0x3d
  408e59:	or     bl,ah
  408e5b:	add    eax,DWORD PTR [ecx+0xa]
  408e5e:	lds    eax,FWORD PTR [ebx]
  408e60:	add    BYTE PTR [eax],al
  408e62:	xor    cl,BYTE PTR [edx]
  408e64:	fiadd  WORD PTR [ebx]
  408e66:	sub    ecx,DWORD PTR [edx]
  408e68:	mov    ecx,0xd00a2703
  408e6d:	add    esp,DWORD PTR [ebx]
  408e6f:	or     dl,al
  408e71:	add    esi,DWORD PTR [ecx]
  408e73:	or     al,BYTE PTR [eax]
  408e75:	int3   
  408e76:	(bad)  
  408e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e78:	inc    ebx
  408e7a:	(bad)  
  408e7b:	or     DWORD PTR [eax],eax
  408e7d:	out    0x4d,al
  408e7f:	sbb    eax,0x1d3fdeff
  408e84:	call   esi
  408e86:	mov    bl,BYTE PTR ds:0xaad68aff
  408e8c:	dec    DWORD PTR [edx-0x75fff62a]
  408e92:	aaa    
  408e93:	stos   DWORD PTR es:[edi],eax
  408e94:	push   0x2d993b87
  408e99:	test   DWORD PTR [edx-0x4f],ebp
  408e9c:	jmp    FWORD PTR [esi]
  408e9e:	push   ss
  408e9f:	rol    BYTE PTR [edx+0x5b],cl
  408ea2:	je     0x408e4e
  408ea4:	jae    0x408ef2
  408ea6:	ror    DWORD PTR [ecx],1
  408ea8:	add    BYTE PTR [edi],ah
  408eaa:	push   ss
  408eab:	rol    BYTE PTR [eax+0x4d],cl
  408eae:	jne    0x408e77
  408eb0:	push   0xff1d744d
  408eb5:	das    
  408eb6:	push   ss
  408eb7:	rol    BYTE PTR [ebp+0x3d],cl
  408eba:	inc    esp
  408ebb:	cwde   
  408ebc:	sub    dh,BYTE PTR [bx+si]
  408ebf:	stos   DWORD PTR es:[edi],eax
  408ec0:	push   0xff99340f
  408ec5:	add    BYTE PTR cs:[eax],al
  408ec8:	push   ss
  408ec9:	rol    BYTE PTR [ebx+0x4],cl
  408ecc:	es cdq 
  408ece:	jno    0x408ee6
  408ed0:	cmp    BYTE PTR ds:0xdb08b8ff,bl
  408ed6:	sub    eax,0x9d6bc
  408edb:	mov    esp,0xbb0009d6
  408ee0:	mov    dl,cl
  408ee2:	pop    ds
  408ee3:	sbb    ecx,ecx
  408ee5:	xlat   BYTE PTR ds:[ebx]
  408ee6:	sub    eax,0x9d7c119
  408eeb:	jmp    0x4098c6
  408ef0:	dec    esi
  408ef1:	pop    esi
  408ef2:	inc    ecx
  408ef3:	and    BYTE PTR [eax+ecx*1+0x8ac0000],ch
  408efa:	add    BYTE PTR [eax],al
  408efc:	jl     0x408f06
  408efe:	add    BYTE PTR [eax],al
  408f00:	jl     0x408f0a
  408f02:	add    BYTE PTR [eax],al
  408f04:	ins    BYTE PTR es:[edi],dx
  408f05:	or     BYTE PTR [ecx],al
  408f07:	add    BYTE PTR [eax+ecx*1+0x88c003a],bl
  408f0e:	add    BYTE PTR [eax],al
  408f10:	call   0xdc40fc1d
  408f15:	or     BYTE PTR [eax],al
  408f17:	add    BYTE PTR [ecx+0x19007308],cl
  408f1d:	or     BYTE PTR [eax],dh
  408f1f:	add    ah,dh
  408f21:	add    eax,0x5d20078
  408f26:	and    eax,0x59f00
  408f2b:	add    BYTE PTR [eax],al
  408f2d:	add    cl,bl
  408f2f:	add    eax,0x5d90073
  408f34:	xor    BYTE PTR [eax],al
  408f36:	aam    0x5
  408f38:	js     0x408f3a
  408f3a:	sub    al,0x8
  408f3c:	add    BYTE PTR [eax],al
  408f3e:	(bad)  
  408f3f:	add    eax,0x73280000
  408f44:	inc    eax
  408f45:	add    bl,bl
  408f47:	imul   ebp,DWORD PTR [eax+0x70],0x2e725ad0
  408f4e:	fadd   DWORD PTR [ecx+0x69bb006b]
  408f54:	push   0x725ad070
  408f59:	push   ebx
  408f5a:	fsub   DWORD PTR [ecx+esi*2+0x74]
  408f5e:	leave  
  408f5f:	push   edi
  408f60:	(bad)  
  408f61:	(bad)  
  408f62:	jnp    0x408fdf
  408f64:	push   0x725a9070
  408f69:	push   ebx
  408f6a:	aad    0x48
  408f6c:	mov    al,0x73
  408f6e:	cmp    DWORD PTR [esi+ebp*4+0x6d],ebx
  408f72:	aad    0x6b
  408f74:	lahf   
  408f75:	push   0x64b17025
  408f7a:	xor    al,0x5d
  408f7c:	mov    al,ds:0x9854fc41
  408f81:	pusha  
  408f82:	add    eax,0xf06eb16b
  408f87:	pop    eax
  408f88:	ror    DWORD PTR [eax+0x21],0x66
  408f8c:	les    ecx,FWORD PTR [edi-0x2b]
  408f8f:	arpl   WORD PTR [edi-0x1affff98],bx
  408f95:	ins    BYTE PTR es:[edi],dx
  408f96:	pushf  
  408f97:	jb     0x408f7e
  408f99:	mov    esi,DWORD PTR [edx-0x5b79f39c]
  408f9f:	mov    ax,0x330
  408fa3:	add    ch,dl
  408fa5:	jmp    0x408f46
  408fa7:	push   0x739ee3c5
  408fac:	mov    ebp,es
  408fae:	mov    ds:0x95e5b866,al
  408fb3:	bound  edi,QWORD PTR [edx-0x598e6134]
  408fb9:	call   FWORD PTR [edx+0x330b079]
  408fbf:	add    ch,dl
  408fc1:	jecxz  0x408f62
  408fc3:	push   0x739eeb85
  408fc8:	mov    WORD PTR ds:0xed7066a3,cs
  408fce:	xchg   ebp,eax
  408fcf:	bound  eax,QWORD PTR [edx+0x66719f04]
  408fd5:	xor    BYTE PTR [ebx],al
  408fd7:	add    ch,dl
  408fd9:	jecxz  0x408f7a
  408fdb:	push   0x75a2ff65
  408fe0:	cmp    dl,ch
  408fe2:	xchg   esi,eax
  408fe3:	pusha  
  408fe4:	xor    cl,BYTE PTR [edx]
  408fe6:	int3   
  408fe7:	iret   
  408fe8:	xor    esi,DWORD PTR [edi-0x56ce4e2c]
  408fee:	ret    
  408fef:	add    edx,ebp
  408ff1:	or     DWORD PTR [eax+eiz*1+0x29b2fd0e],edx
  408ff8:	add    BYTE PTR [eax],al
  408ffa:	lock les ebx,FWORD PTR [edi+eax*2-0x8]
  408fff:	push   esi
  409000:	cwde   
  409001:	(bad)  
  409002:	jnp    0x409032
  409004:	add    eax,0xb5b81ac5
  409009:	retf   
  40900a:	sbb    eax,0x24beb9bb
  40900f:	mov    ah,0xab
  409011:	rcl    DWORD PTR [ebx],1
  409013:	rcr    BYTE PTR [ebp-0x3344f930],cl
  409019:	add    edx,ebp
  40901b:	or     DWORD PTR [eax-0x765b136b],edx
  409021:	scas   eax,DWORD PTR es:[edi]
  409022:	push   edx
  409023:	sbb    bh,BYTE PTR [edi+0x3]
  409026:	(bad)  
  409027:	or     DWORD PTR [ecx+0x4],ebx
  40902a:	(bad)  
  40902b:	or     DWORD PTR ds:0x4d09eb04,edx
  409031:	add    al,0xc1
  409033:	or     DWORD PTR ds:0xf409d504,edi
  409039:	stc    
  40903a:	ror    DWORD PTR [edi],1
  40903c:	jmp    0xf94a6544
  409041:	neg    ah
  409043:	or     al,0xe3
  409045:	add    edx,ebp
  409047:	or     esp,ecx
  409049:	stos   DWORD PTR es:[edi],eax
  40904a:	add    bl,BYTE PTR [edx]
  40904c:	jecxz  0x409031
  40904e:	cli    
  40904f:	sbb    DWORD PTR [edi],esp
  409051:	pusha  
  409052:	xchg   esp,eax
  409053:	or     DWORD PTR [edx],eax
  409055:	add    al,0x70
  409057:	or     ebx,edi
  409059:	add    esi,DWORD PTR [ebx+0x9]
  40905c:	add    al,0x4
  40905e:	add    BYTE PTR [eax],al
  409060:	imul   ecx,DWORD PTR [ecx],0xdbd6ba00
  409066:	(bad)  
  409067:	mov    esi,0xd4ffadd6
  40906c:	(bad)  
  40906d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40906e:	(bad)  
  40906f:	call   0xa0409a4a
  409074:	shr    BYTE PTR gs:[esi-0x2a],0xb8
  409079:	fisttp QWORD PTR [edi-0x45]
  40907c:	dec    ecx
  40907d:	lods   al,BYTE PTR ds:[esi]
  40907e:	fs mov edx,0xbff1965
  409084:	fldz   
  409086:	(bad)  
  409087:	mov    ecx,0xe8ffebd6
  40908c:	(bad)  
  40908d:	or     DWORD PTR [eax],eax
  40908f:	retf   
  409090:	(bad)  
  409091:	out    dx,al
  409092:	call   FWORD PTR [ecx-0x3700142a]
  409098:	(bad)  
  409099:	out    dx,al
  40909a:	(bad)  
  40909b:	jns    0x409073
  40909d:	or     DWORD PTR [eax],eax
  40909f:	je     0x4090c6
  4090a1:	scas   al,BYTE PTR es:[edi]
  4090a2:	jno    0x409030
  4090a4:	push   0x62852d9f
  4090a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090aa:	jmp    FWORD PTR [ecx]
  4090ac:	imul   ebp,DWORD PTR [esi-0x3193aaa0],0x6d
  4090b3:	pop    edi
  4090b4:	sbb    BYTE PTR [ebx-0x519bc092],0x6d
  4090bb:	cmp    eax,0x4a6ea51b
  4090c0:	push   0x19
  4090c2:	jmp    FWORD PTR ds:0x9c3c0000
  4090c8:	jae    0x409105
  4090ca:	inc    esi
  4090cb:	xchg   edx,eax
  4090cc:	inc    esp
  4090cd:	pop    ss
  4090ce:	pop    edi
  4090cf:	mov    ds:0xa6470e71,al
  4090d4:	fs pop es
  4090d6:	dec    ebp
  4090d7:	retf   
  4090d8:	imul   edi,esi,0x33
  4090db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090dc:	(bad)  
  4090dd:	call   DWORD PTR [esi]
  4090df:	jno    0x4090ed
  4090e1:	or     dl,al
  4090e3:	bound  ebp,QWORD PTR [ebx+0x20]
  4090e6:	sahf   
  4090e7:	and    DWORD PTR [edx+0x22],esi
  4090ea:	test   eax,0xcc666906
  4090ef:	bound  esi,QWORD PTR [edi+0x69]
  4090f2:	lahf   
  4090f3:	sbb    BYTE PTR [edi],0x22
  4090f6:	loope  0x409078
  4090f8:	and    DWORD PTR [eax],esp
  4090fa:	xchg   ebx,eax
  4090fb:	pop    ebx
  4090fc:	jae    0x40916d
  4090fe:	int3   
  4090ff:	popa   
  409100:	(bad)  
  409101:	dec    DWORD PTR [esi+0x5000610c]
  409107:	or     al,0x0
  409109:	add    BYTE PTR [ecx+eiz*2],bh
  40910c:	bound  ebp,QWORD PTR [eax+0x6b]
  40910f:	sub    al,0x6e
  409111:	push   dx
  409113:	stc    
  409114:	or     DWORD PTR ds:0x6409f94f,esp
  40911a:	push   ecx
  40911b:	push   0x2c322f1f
  409120:	and    DWORD PTR ds:0xa0c2edf,esp
  409126:	cmp    al,0xc
  409128:	add    BYTE PTR [eax],al
  40912a:	add    BYTE PTR [eax],al
  40912c:	mov    ecx,DWORD PTR [ebx+eiz*2]
  40912f:	add    ah,cl
  409131:	or     eax,0xdd10022
  409136:	jae    0x409138
  409138:	fimul  WORD PTR ds:0xdff0000
  40913e:	outs   dx,DWORD PTR ds:[esi]
  40913f:	add    BYTE PTR [ecx-0x23ffacf3],cl
  409145:	or     eax,0xd9f0065
  40914a:	add    BYTE PTR [eax],al
  40914c:	in     al,dx
  40914d:	pop    edi
  40914e:	pop    esi
  40914f:	dec    edi
  409150:	fsub   QWORD PTR [edx+0x6d]
  409153:	push   esp
  409154:	scas   eax,DWORD PTR es:[edi]
  409155:	pop    ebp
  409156:	push   edx
  409157:	outs   dx,DWORD PTR ds:[esi]
  409158:	aad    0x3
  40915a:	scas   eax,DWORD PTR es:[edi]
  40915b:	fs popa 
  40915d:	and    al,BYTE PTR [ebx]
  40915f:	add    ch,dl
  409161:	repnz mov ch,0x5e
  409164:	xchg   esi,eax
  409165:	push   es
  409166:	mov    bl,0x72
  409168:	cmp    BYTE PTR [ecx],ah
  40916a:	add    eax,DWORD PTR [eax]
  40916c:	aad    0xf0
  40916e:	mov    ch,0x5e
  409170:	and    eax,0xd56baf40
  409175:	push   eax
  409176:	mov    ch,0x5e
  409178:	pop    es
  409179:	inc    esi
  40917a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917b:	arpl   bp,dx
  40917d:	push   eax
  40917e:	mov    ch,0x5e
  409180:	or     dl,BYTE PTR [ebx-0x54]
  409183:	jae    0x4091b5
  409185:	and    DWORD PTR [ebx],eax
  409187:	add    ch,dl
  409189:	or     eax,0x20d56d04
  40918e:	add    eax,DWORD PTR [eax]
  409190:	add    BYTE PTR [eax],al
  409192:	aad    0x40
  409194:	add    ebp,DWORD PTR ds:0x38ed5
  40919a:	aad    0x4d
  40919c:	add    ebp,DWORD PTR [ebp-0x2b]
  40919f:	dec    ebp
  4091a0:	add    esi,DWORD PTR [eax-0x2b]
  4091a3:	inc    ebp
  4091a4:	add    esi,DWORD PTR [ebx-0x2b]
  4091a7:	and    BYTE PTR [ebx],al
  4091a9:	add    ch,dl
  4091ab:	dec    esi
  4091ac:	add    esi,DWORD PTR [eax]
  4091ae:	aad    0x20
  4091b0:	add    eax,DWORD PTR [eax]
  4091b2:	aad    0xff
  4091b4:	stos   BYTE PTR es:[edi],al
  4091b5:	ins    DWORD PTR es:[edi],dx
  4091b6:	mov    cl,0xcd
  4091b8:	fwait
  4091b9:	sub    eax,0xff93c8a5
  4091be:	sub    al,bl
  4091c0:	add    esp,DWORD PTR [ebx-0x2b]
  4091c3:	and    BYTE PTR [ebx],al
  4091c5:	add    ch,dl
  4091c7:	in     eax,0x3
  4091c9:	pop    ecx
  4091ca:	aad    0x20
  4091cc:	add    eax,DWORD PTR [eax]
  4091ce:	aad    0x16
  4091d0:	add    esi,DWORD PTR [ebp+edx*8+0x9]
  4091d4:	and    DWORD PTR [ecx+eax*4],eax
  4091d7:	or     ecx,ebp
  4091d9:	add    edx,ebp
  4091db:	or     DWORD PTR [ecx-0x1d],edi
  4091de:	jmp    0xa009:0xd503c916
  4091e5:	sub    DWORD PTR [ebp+0x14127b09],edx
  4091eb:	or     ah,BYTE PTR [ecx+0x1a0a141b]
  4091f1:	add    al,0x3c
  4091f3:	or     bl,dl
  4091f5:	add    eax,DWORD PTR [eax]
  4091f7:	add    BYTE PTR [ecx],cl
  4091f9:	or     dl,al
  4091fb:	add    esp,DWORD PTR [esi]
  4091fd:	or     bl,ch
  4091ff:	add    eax,DWORD PTR [ebx]
  409201:	or     al,al
  409203:	add    edi,DWORD PTR [eax]
  409205:	or     bh,BYTE PTR [esi-0x4f619fd]
  40920b:	add    edx,ebp
  40920d:	or     DWORD PTR [ebx+eax*1+0x3a00a11],esp
  409214:	push   ss
  409215:	or     dl,BYTE PTR [ebp-0x7bf613fd]
  40921b:	add    eax,DWORD PTR [ebx]
  40921d:	or     bl,BYTE PTR [ebp-0x55f62afd]
  409223:	add    ebp,esp
  409225:	or     DWORD PTR [edx+0x7b09f003],ecx
  40922b:	add    eax,edx
  40922d:	or     DWORD PTR [ebx+eax*1+0x396099c],ebx
  409234:	mov    bl,0x9
  409236:	dec    ebp
  409237:	add    al,0x93
  409239:	or     DWORD PTR [ebx+0x4],ebx
  40923c:	mov    ah,0x9
  40923e:	inc    esp
  40923f:	add    al,0xb0
  409241:	or     ecx,ebp
  409243:	add    edx,ebp
  409245:	or     DWORD PTR [edx],ebp
  409247:	add    al,0xaa
  409249:	or     DWORD PTR [edi+0x4],ecx
  40924c:	xchg   BYTE PTR [ecx],cl
  40924e:	add    BYTE PTR [esi-0x2f],al
  409251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409252:	inc    DWORD PTR [ebx-0x27]
  409255:	mov    esi,0xa7d10fff
  40925a:	inc    DWORD PTR [eax+eax*1]
  40925d:	add    cl,bl
  40925f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409260:	call   FWORD PTR ds:0xfcffcad1
  409266:	(bad)  
  409267:	test   al,0xff
  409269:	stc    
  40926a:	(bad)  
  40926b:	call   0xca00:0x9d6e8ff
  409272:	(bad)  
  409273:	fdivr  st,st(7)
  409275:	mov    edx,0x1effdcd6
  40927a:	rcl    ecx,1
  40927c:	(bad)  
  40927d:	call   0xba409c58
  409282:	(bad)  
  409283:	xchg   edx,eax
  409284:	(bad)  
  409285:	(bad)  
  409287:	mov    eax,0xaad6d0ff
  40928c:	inc    esp
  40928e:	(bad)  
  40928f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409290:	(bad)  
  409291:	mov    ebp,0xa70009d6
  409296:	(bad)  
  409297:	mov    ebp,0x9d6ac4c
  40929c:	add    BYTE PTR [ebx-0x3b],cl
  40929f:	(bad)  
  4092a0:	jmp    FWORD PTR [ebp-0x64b066cd]
  4092a6:	and    eax,0x328d40a8
  4092ab:	fwait
  4092ac:	fs jp  0x409318
  4092af:	adc    eax,0xaa85a5ff
  4092b4:	arpl   WORD PTR [ebp+0x4871ab6f],bx
  4092ba:	addr16 xchg edx,eax
  4092bc:	inc    eax
  4092bd:	jmp    0x27409c98
  4092c2:	add    BYTE PTR [eax],al
  4092c4:	dec    ebp
  4092c5:	enter  0x4471,0x78
  4092c9:	cdq    
  4092ca:	add    BYTE PTR fs:[eax-0x629a8e9b],bh
  4092d1:	popa   
  4092d2:	(bad)  
  4092d3:	push   DWORD PTR [edx-0x668dbd8f]
  4092d9:	outs   dx,BYTE PTR ds:[esi]
  4092da:	jae    0x409341
  4092dc:	mov    ecx,0xac726478
  4092e1:	ja     0x409351
  4092e3:	arpl   cx,bx
  4092e5:	js     0x409359
  4092e7:	add    dl,al
  4092e9:	jno    0x40933b
  4092eb:	jne    0x4092b6
  4092ed:	ja     0x409367
  4092ef:	dec    ecx
  4092f0:	loop   0x40935d
  4092f2:	outs   dx,BYTE PTR ds:[esi]
  4092f3:	jb     0x4092c6
  4092f5:	outs   dx,BYTE PTR ds:[esi]
  4092f6:	jae    0x409361
  4092f8:	ret    
  4092f9:	dec    di
  4092fb:	jb     0x4092a0
  4092fd:	addr16 fs jae 0x409290
  409301:	or     BYTE PTR [eax],al
  409303:	add    BYTE PTR [esi+0x7c],ch
  409306:	imul   edx,DWORD PTR [ebp+0x7f],0x61
  40930a:	jno    0x409360
  40930c:	test   BYTE PTR [edx+0x64],bh
  40930f:	popa   
  409310:	cwde   
  409311:	push   edi
  409312:	jae    0x409375
  409314:	dec    esi
  409315:	jl     0x409316
  409317:	jmp    DWORD PTR [eax+0x6c]
  40931a:	jno    0x409368
  40931c:	arpl   WORD PTR [ebp+0x63],bp
  40931f:	inc    esp
  409320:	pusha  
  409321:	fs (bad) 
  409323:	push   DWORD PTR [eax]
  409325:	ins    BYTE PTR es:[edi],dx
  409326:	jno    0x40936f
  409328:	add    BYTE PTR [eax],al
  40932a:	pop    ecx
  40932b:	jl     0x409370
  40932d:	ins    BYTE PTR es:[edi],dx
  40932e:	inc    eax
  40932f:	inc    eax
  409330:	pusha  
  409331:	outs   dx,BYTE PTR ds:[esi]
  409332:	pop    eax
  409333:	fs add BYTE PTR fs:[edi+0x65],bl
  409338:	arpl   WORD PTR [eax],ax
  40933a:	sub    al,0x8
  40933c:	add    BYTE PTR [eax],al
  40933e:	dec    DWORD PTR ds:0xdfa004f
  409344:	push   esp
  409345:	add    ch,dl
  409347:	rol    DWORD PTR [ebx],cl
  409349:	inc    ecx
  40934a:	aad    0xd0
  40934c:	add    eax,DWORD PTR [ebp-0x2b]
  40934f:	out    dx,al
  409350:	add    ecx,DWORD PTR [ebp-0x2b]
  409353:	mov    ecx,0xd0d56303
  409358:	add    ebp,DWORD PTR [edi-0x2b]
  40935b:	iret   
  40935c:	add    ebp,DWORD PTR [edi-0x2b]
  40935f:	add    al,0x4
  409361:	je     0x409338
  409363:	(bad)  
  409364:	add    edx,DWORD PTR [edi-0x2b]
  409367:	or     DWORD PTR [esi+ebp*2],eax
  40936a:	aad    0xe
  40936c:	add    al,0x6f
  40936e:	aad    0x13
  409370:	add    esi,DWORD PTR [ebx-0x2b]
  409373:	inc    eax
  409374:	add    ecx,DWORD PTR [esi-0x2b]
  409377:	hlt    
  409378:	add    ebx,DWORD PTR [ebp+edx*8-0x21]
  40937c:	add    esi,DWORD PTR [ebp-0x2b]
  40937f:	add    esi,DWORD PTR cs:[edx-0x2b]
  409383:	dec    ebp
  409384:	add    ebp,DWORD PTR [esi-0x2b]
  409387:	xor    al,0x3
  409389:	push   esi
  40938a:	aad    0x4d
  40938c:	add    esi,DWORD PTR [edx+0x0]
  40938f:	add    ch,dl
  409391:	dec    edi
  409392:	add    ebp,DWORD PTR [ecx-0x2b]
  409395:	inc    ebx
  409396:	add    ebp,DWORD PTR [esi-0x2b]
  409399:	jl     0x40939e
  40939b:	push   eax
  40939c:	aad    0x4e
  40939e:	add    ebp,DWORD PTR [edi-0x2b]
  4093a1:	add    BYTE PTR [ebx],0x69
  4093a4:	aad    0x84
  4093a6:	add    esp,DWORD PTR [ebp-0x2b]
  4093a9:	ins    BYTE PTR es:[edi],dx
  4093aa:	add    ebp,DWORD PTR [ecx-0x2b]
  4093ad:	outs   dx,DWORD PTR ds:[esi]
  4093ae:	add    esi,DWORD PTR [ebp+edx*8+0x6c]
  4093b2:	add    esp,DWORD PTR ds:0x28fd5
  4093b8:	aad    0x70
  4093ba:	add    esi,DWORD PTR [edx-0x2b]
  4093bd:	xchg   ebx,eax
  4093be:	add    ah,BYTE PTR [esi-0x2b]
  4093c1:	or     DWORD PTR [eax+0x4],edx
  4093c4:	ror    DWORD PTR [ecx],0x44
  4093c7:	add    al,0x9c
  4093c9:	or     DWORD PTR [esp+eax*1-0x4c],eax
  4093cd:	or     DWORD PTR [esi+0x4],eax
  4093d0:	mov    al,0x9
  4093d2:	sbb    DWORD PTR [esp+esi*2],eax
  4093d5:	or     DWORD PTR ds:0xe9097d04,esi
  4093db:	add    edx,ebp
  4093dd:	or     ecx,ebp
  4093df:	xchg   edi,eax
  4093e0:	shl    al,0xe7
  4093e3:	xchg   edi,eax
  4093e4:	test   al,0xf0
  4093e6:	stc    
  4093e7:	inc    ecx
  4093e8:	add    eax,0x541fc92
  4093ed:	xchg   edx,eax
  4093ee:	cli    
  4093ef:	loopne 0x40938d
  4093f1:	addr16 adc eax,0xd20000ab
  4093f7:	adc    dl,BYTE PTR [ecx]
  4093f9:	(bad)  
  4093fa:	retf   0x112
  4093fd:	xlat   BYTE PTR ds:[ebx]
  4093fe:	ret    0x112
  409401:	fdivr  DWORD PTR [edx-0x4d2f2eee]
  409407:	adc    dl,cl
  409409:	shr    DWORD PTR [edx-0x5d2d3eee],1
  40940f:	adc    al,ch
  409411:	stos   BYTE PTR es:[edi],al
  409412:	and    BYTE PTR [edx],cl
  409414:	mov    ebp,0xb51292a7
  409419:	xchg   ecx,eax
  40941a:	mov    dl,BYTE PTR [edx]
  40941c:	rcl    DWORD PTR [ecx-0x6e34ed7e],0x7a
  409423:	adc    ch,bl
  409425:	add    edi,edx
  409427:	pop    es
  409428:	jmp    0xd701:0xeb07d701
  40942f:	pop    es
  409430:	jecxz  0x40943b
  409432:	iret   
  409433:	jmp    0x1f9e2a
  409438:	repnz or edi,ebx
  40943b:	(bad)  
  40943c:	(bad)  
  40943d:	jns    0x4094b4
  40943f:	cwde   
  409440:	push   0xff126279
  409445:	push   edi
  409446:	ja     0x4093df
  409448:	outs   dx,DWORD PTR ds:[esi]
  409449:	and    dl,cl
  40944b:	or     DWORD PTR [eax],eax
  40944d:	sub    esi,DWORD PTR [esi-0x69]
  409450:	push   0xff12314a
  409455:	enter  0xbeda,0x8c
  409459:	clc    
  40945a:	add    BYTE PTR [eax],al
  40945c:	add    eax,0x9e681142
  409461:	or     eax,eax
  409463:	push   ds
  409464:	mov    ecx,0x2a68b3af
  409469:	int3   
  40946a:	cld    
  40946b:	gs in  eax,0x41
  40946e:	adc    DWORD PTR [edx-0x7d],eax
  409471:	or     DWORD PTR [eax],esp
  409473:	ds cdq 
  409475:	cmp    BYTE PTR [edx],cl
  409477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409478:	mov    dl,0x86
  40947a:	std    
  40947b:	imul   eax,DWORD PTR [bx+di+0x11],0xbf11846b
  409483:	push   ds
  409484:	stc    
  409485:	mov    bl,0xb3
  409487:	mov    eax,0x67c4b255
  40948c:	dec    ecx
  40948d:	inc    ecx
  40948e:	adc    DWORD PTR [ebx+0x64],ebp
  409491:	adc    DWORD PTR [edi-0x4c4c2162],edi
  409497:	sbb    al,0xb2
  409499:	xchg   ch,bh
  40949b:	imul   eax,DWORD PTR [bx+di+0x11],0xbf11446b
  4094a3:	sahf   
  4094a4:	mov    esi,0xe450b3b3
  4094a9:	std    
  4094aa:	out    0x1c,al
  4094ac:	popf   
  4094ad:	cmp    dl,BYTE PTR [ecx]
  4094af:	arpl   bx,bp
  4094b1:	or     eax,eax
  4094b3:	sahf   
  4094b4:	(bad)  
  4094b5:	mov    edx,0x9aa600f2
  4094ba:	or     esp,edi
  4094bc:	dec    ecx
  4094bd:	dec    ecx
  4094be:	rcl    BYTE PTR [ecx],1
  4094c0:	add    BYTE PTR [eax],al
  4094c2:	mov    dh,0x97
  4094c4:	(bad)  
  4094c5:	mov    edi,0xf350b45b
  4094ca:	es or  eax,0x5ef0000
  4094d0:	cmp    al,BYTE PTR [eax]
  4094d2:	aam    0x5
  4094d4:	dec    ebp
  4094d5:	add    BYTE PTR [eax-0x28ffc4fb],bh
  4094db:	add    eax,0x5ee004e
  4094e0:	dec    esi
  4094e1:	add    bl,ah
  4094e3:	add    eax,0x5e4004e
  4094e8:	cmp    eax,DWORD PTR [eax]
  4094ea:	test   DWORD PTR [ebx+edi*1],0x5705b800
  4094f1:	add    BYTE PTR ds:0x9f00000d,dl
  4094f7:	add    eax,0x5ef0065
  4094fc:	gs add bh,bl
  4094ff:	add    eax,0xcbe0075
  409504:	imul   eax,DWORD PTR [eax],0x790cc0
  40950a:	ins    BYTE PTR es:[edi],dx
  40950b:	or     al,0x72
  40950d:	add    BYTE PTR [ebp-0x6aff89f4],al
  409513:	or     al,0x6c
  409515:	add    BYTE PTR [ecx-0x5eff98f4],dl
  40951b:	or     al,0x0
  40951d:	add    BYTE PTR [edi+0xc],ch
  409520:	cmp    al,BYTE PTR [eax]
  409522:	aam    0x5
  409524:	dec    ebp
  409525:	add    BYTE PTR [eax],al
  409527:	add    BYTE PTR [eax+0xc],bl
  40952a:	cmp    eax,DWORD PTR [eax]
  40952c:	aas    
  40952d:	or     al,0x49
  40952f:	add    BYTE PTR [ebx],bh
  409531:	or     al,0x49
  409533:	add    ch,dl
  409535:	cmp    eax,DWORD PTR [ebx]
  409537:	dec    esi
  409538:	aad    0x54
  40953a:	add    ecx,DWORD PTR [esi-0x2b]
  40953d:	outs   dx,DWORD PTR ds:[esi]
  40953e:	add    ecx,DWORD PTR [esi-0x2b]
  409541:	push   0x3
  409543:	cmp    edx,ebp
  409545:	pop    ebx
  409546:	add    edi,DWORD PTR [ebx]
  409548:	aad    0x6e
  40954a:	add    edx,DWORD PTR [edi-0x2b]
  40954d:	stc    
  40954e:	add    eax,DWORD PTR [eax]
  409550:	aad    0xca
  409552:	pop    ebp
  409553:	inc    edx
  409554:	aad    0x5
  409556:	add    al,0x76
  409558:	aad    0x22
  40955a:	add    eax,DWORD PTR [eax]
  40955c:	aad    0xc1
  40955e:	test   eax,0xaec0801f
  409563:	ins    DWORD PTR es:[edi],dx
  409564:	jb     0x409535
  409566:	test   eax,0x95d4701f
  40956b:	outs   dx,BYTE PTR ds:[esi]
  40956c:	addr16 inc edx
  40956e:	stos   BYTE PTR es:[edi],al
  40956f:	bound  esi,QWORD PTR [esi-0xb]
  409572:	xchg   ebp,eax
  409573:	jno    0x4095ed
  409575:	inc    BYTE PTR [ebx]
  409577:	add    ch,dl
  409579:	jmp    0x4ac9:0xee3244b3
  409580:	sbb    esp,eax
  409582:	mov    dl,0x4d
  409584:	aad    0x10
  409586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409587:	jno    0x4095cf
  409589:	push   es
  40958a:	xchg   esi,eax
  40958b:	pop    ds
  40958c:	add    BYTE PTR [eax],al
  40958e:	cmp    al,0x34
  409590:	jecxz  0x409601
  409592:	xor    al,0x36
  409594:	xchg   esi,eax
  409595:	cmp    DWORD PTR fs:[ecx],esp
  409598:	add    eax,DWORD PTR [eax]
  40959a:	aad    0x68
  40959c:	mov    bl,0x44
  40959e:	xor    dh,BYTE PTR [ecx-0x3c]
  4095a1:	push   esp
  4095a2:	es mov di,0x82ff
  4095a7:	push   esp
  4095a8:	(bad)  
  4095a9:	jno    0x409597
  4095ab:	inc    ebx
  4095ac:	(bad)  
  4095ad:	pop    ds
  4095ae:	add    BYTE PTR [edx],cl
  4095b0:	xchg   esi,eax
  4095b1:	lahf   
  4095b2:	icebp  
  4095b3:	jmp    0xa5282c3f
  4095b8:	call   0xb8e3:0x7e9eed8f
  4095bf:	test   al,0x8f
  4095c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095c2:	mov    cl,0xa5
  4095c4:	call   0xa14a6acc
  4095c9:	mov    bl,0x91
  4095cb:	scas   al,BYTE PTR es:[edi]
  4095cc:	cdq    
  4095cd:	scas   eax,DWORD PTR es:[edi]
  4095ce:	test   al,al
  4095d0:	sub    DWORD PTR [eax-0x55bbf0d6],esi
  4095d6:	mov    bh,0x9e
  4095d8:	pop    ebx
  4095d9:	stos   BYTE PTR es:[edi],al
  4095da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095dc:	pop    edx
  4095dd:	lahf   
  4095de:	jbe    0x4095c9
  4095e0:	cmp    ebp,DWORD PTR [edx-0x60c76e8f]
  4095e6:	ja     0x40957d
  4095e8:	dec    ebx
  4095e9:	mov    al,ds:0x903ea0da
  4095ee:	jns    0x40958b
  4095f0:	push   ss
  4095f1:	mov    ds:0xe97e0000,eax
  4095f6:	sbb    DWORD PTR [eax+0x40b9575],edx
  4095fc:	aad    0x9
  4095fe:	and    DWORD PTR [ecx+ebx*1+0x20ca2faf],esi
  409605:	leave  
  409606:	sub    al,0xcb
  409608:	push   ss
  409609:	scas   eax,DWORD PTR es:[edi]
  40960a:	pop    ds
  40960b:	retf   0xc526
  40960e:	sbb    cl,dl
  409610:	adc    eax,0x6b4c5be
  409615:	leave  
  409616:	mov    ah,0xbe
  409618:	mov    ds:0x20a9c00e,al
  40961d:	test   eax,0xe9f6aabc
  409622:	leave  
  409623:	test   al,0xf8
  409625:	call   0x8ff:0x95f0a2b4
  40962c:	pusha  
  40962d:	call   0xb0ff:0xa73cc071
  409634:	lds    ebx,FWORD PTR es:[esi-0x50]
  409638:	mov    WORD PTR [eax+eax*2+0x5eca8fa5],?
  40963f:	stos   BYTE PTR es:[edi],al
  409640:	sbb    eax,0x179d52bc
  409645:	mov    esp,0x9d6e953
  40964a:	add    BYTE PTR [eax+0x7d60946c],al
  409650:	jg     0x4095fc
  409652:	pop    ds
  409653:	dec    edx
  409654:	jns    0x4095ff
  409656:	jno    0x4096a0
  409658:	add    BYTE PTR [eax],al
  40965a:	js     0x4095f6
  40965c:	fs pop ebx
  40965e:	xor    DWORD PTR [ecx-0x59c7f693],esp
  409664:	je     0x4096bd
  409666:	cmp    dh,ch
  409668:	jb     0x4096ba
  40966a:	arpl   WORD PTR [ebp-0x56a5bee1],sp
  409670:	arpl   WORD PTR [ebx+ecx*2+0xe],ax
  409674:	push   DWORD PTR [ecx]
  409676:	and    ebp,eax
  409678:	pop    esi
  409679:	xor    BYTE PTR [edi],cl
  40967b:	mov    ah,0x40
  40967d:	and    eax,0x2a5eca0e
  409682:	mov    eax,ds:0x8c324db6
  409687:	mov    eax,0xd822348
  40968c:	inc    DWORD PTR [eax]
  40968e:	outs   dx,DWORD PTR ds:[esi]
  40968f:	xchg   edi,eax
  409690:	pusha  
  409691:	std    
  409692:	jg     0x40963d
  409694:	pop    ds
  409695:	retf   0xaa7e
  409698:	jno    0x409662
  40969a:	jns    0x409635
  40969c:	(bad)  fs:[esi+0x38096da2]
  4096a3:	pushf  
  4096a4:	ins    DWORD PTR es:[edi],dx
  4096a5:	add    BYTE PTR [eax+0x6c],cl
  4096a8:	ins    DWORD PTR es:[edi],dx
  4096a9:	je     0x40967c
  4096ab:	popa   
  4096ac:	outs   dx,BYTE PTR fs:[esi]
  4096ae:	mov    edi,DWORD PTR [ebp+0x67]
  4096b1:	and    BYTE PTR [esp+ebp*2+0x77596460],dl
  4096b8:	(bad)  
  4096b9:	jmp    DWORD PTR [ecx+ebx*2]
  4096bc:	inc    esp
  4096bd:	pop    edi
  4096be:	add    BYTE PTR [eax],al
  4096c0:	xor    eax,0x70415543
  4096c5:	inc    eax
  4096c6:	inc    ebx
  4096c7:	pop    edi
  4096c8:	jg     0x40970c
  4096ca:	dec    ebp
  4096cb:	push   esp
  4096cc:	jns    0x409711
  4096ce:	push   ebx
  4096cf:	pop    edi
  4096d0:	jo     0x40971e
  4096d2:	dec    ebp
  4096d3:	inc    edi
  4096d4:	dec    eax
  4096d5:	inc    ecx
  4096d6:	(bad)  
  4096d7:	inc    DWORD PTR [ebp-0x6f9e8a9d]
  4096dd:	pop    esi
  4096de:	arpl   WORD PTR [eax],sp
  4096e0:	(bad)  
  4096e1:	pop    ebp
  4096e2:	pusha  
  4096e3:	jb     0x409682
  4096e5:	push   0x25ce6573
  4096ea:	push   0x645dcc6e
  4096ef:	popa   
  4096f0:	mov    BYTE PTR [edx+0x71],ch
  4096f3:	add    BYTE PTR [ebp+edx*2+0x43a55f44],dh
  4096fa:	push   ebp
  4096fb:	inc    ecx
  4096fc:	mov    al,0x3e
  4096fe:	inc    ebx
  4096ff:	pop    edi
  409700:	mov    ah,0x4a
  409702:	inc    eax
  409703:	inc    esp
  409704:	stc    
  409705:	push   edi
  409706:	pop    esi
  409707:	push   esp
  409708:	add    eax,DWORD PTR [ecx+0x44]
  40970b:	dec    esi
  40970c:	lods   al,BYTE PTR ds:[esi]
  40970d:	or     BYTE PTR [eax],al
  40970f:	add    al,dh
  409711:	dec    ebx
  409712:	pop    ds
  409713:	arpl   sp,dx
  409715:	data16 jno 0x409779
  409718:	lahf   
  409719:	jl     0x40977f
  40971b:	jb     0x4096e9
  40971d:	push   0x77
  40971f:	jo     0x4096f6
  409721:	cmp    eax,0x73a2
  409726:	clc    
  409727:	inc    esi
  409728:	add    eax,DWORD PTR [eax]
  40972a:	aad    0x5a
  40972c:	mov    bl,0x44
  40972e:	and    bl,BYTE PTR [edi-0x43]
  409731:	pop    esi
  409732:	adc    BYTE PTR [ebx-0x4d],bh
  409735:	inc    esp
  409736:	push   ss
  409737:	ja     0x4096f9
  409739:	inc    ebx
  40973a:	aad    0x79
  40973c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40973d:	jne    0x409733
  40973f:	jle    0x4096ed
  409741:	arpl   WORD PTR [ebp-0x459f6e84],si
  409747:	lea    ebx,[edi+0x322c16d]
  40974d:	add    ch,dl
  40974f:	pop    edx
  409750:	mov    bl,0x44
  409752:	call   0xcc6e:0x9455c569
  409759:	inc    ebx
  40975a:	mov    bl,ah
  40975c:	mov    cl,0x40
  40975e:	call   0x322:0x814dc0dd
  409765:	add    ch,dl
  409767:	leave  
  409768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409769:	jne    0x4097df
  40976b:	mov    dh,0xac
  40976d:	arpl   WORD PTR [ebp-0x789b6f2f],si
  409773:	(bad)  
  409775:	jb     0x4097e0
  409777:	shr    BYTE PTR [ebp+ebp*2+0x32272],1
  40977e:	aad    0xda
  409780:	mov    bl,0x44
  409782:	jp     0x40976d
  409784:	lds    edx,FWORD PTR [ebp+0x14]
  409787:	in     eax,dx
  409788:	int3   
  409789:	inc    ebx
  40978a:	add    BYTE PTR [eax],al
  40978c:	sub    dh,dl
  40978e:	mov    al,0x44
  409790:	daa    
  409791:	jmp    0x4dcc:0xef2152b6
  409798:	sbb    ah,BYTE PTR [ecx]
  40979a:	add    eax,DWORD PTR [eax]
  40979c:	aad    0x9
  40979e:	shl    BYTE PTR [ebp-0x533356d8],1
  4097a4:	ss jmp 0x3e8:0xa206a4d8
  4097ac:	aad    0x9
  4097ae:	mov    cl,0xb3
  4097b0:	sbb    DWORD PTR [ebx-0x36df3a51],ebp
  4097b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097b7:	int3   
  4097b8:	push   ss
  4097b9:	stos   DWORD PTR es:[edi],eax
  4097ba:	cwde   
  4097bb:	les    eax,FWORD PTR [esi]
  4097bd:	ret    0x3e8
  4097c0:	aad    0x9
  4097c2:	nop
  4097c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097c4:	loopne 0x40976e
  4097c6:	test   BYTE PTR [esi+esi*4-0x3b596717],ch
  4097cd:	xchg   ebp,eax
  4097ce:	call   0xb14a6cd6
  4097d3:	mov    bl,0x91
  4097d5:	stos   BYTE PTR es:[edi],al
  4097d6:	lahf   
  4097d7:	lds    ecx,FWORD PTR [eax-0x69336338]
  4097dd:	stos   BYTE PTR es:[edi],al
  4097de:	cmp    ch,al
  4097e0:	test   BYTE PTR [ebp+0x9d503e8],dh
  4097e6:	inc    eax
  4097e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e8:	mov    BYTE PTR [eax-0x168954c4],ch
  4097ee:	push   eax
  4097ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f0:	add    BYTE PTR [eax],al
  4097f2:	xchg   DWORD PTR [ebp+0x9d503e8],edx
  4097f8:	and    DWORD PTR [ecx+ebx*4-0x7f39e056],esi
  4097ff:	enter  0xcb34,0x96
  409803:	stos   BYTE PTR es:[edi],al
  409804:	xor    ch,al
  409806:	xchg   DWORD PTR [ebp+0x9d503e8],esi
  40980c:	add    BYTE PTR [esi-0x54eb56c0],ah
  409812:	ss jmp 0x2100:0xa0eb213
  40981a:	imul   eax,ebp,0xb493205e
  409820:	inc    eax
  409821:	mov    ch,0x8f
  409823:	(bad)  
  409824:	pop    esi
  409825:	mov    ah,0x64
  409827:	mov    esi,0x9438bfff
  40982c:	pusha  
  40982d:	mov    ebp,0xb11fa63f
  409832:	xor    dh,BYTE PTR [esi-0x5acdf6b1]
  409838:	jae    0x4097fb
  40983a:	cmp    DWORD PTR [esi-0x3ad95f01],esp
  409840:	pop    esi
  409841:	mov    al,0x98
  409843:	mov    ah,0x40
  409845:	lods   eax,DWORD PTR ds:[esi]
  409846:	pop    esi
  409848:	pop    esi
  409849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40984a:	xchg   ebx,eax
  40984b:	mov    dh,0x47
  40984d:	sahf   
  40984e:	mov    cl,BYTE PTR [edx]
  409850:	call   DWORD PTR [eax-0x729f6b88]
  409856:	add    BYTE PTR [eax],al
  409858:	outs   dx,DWORD PTR ds:[esi]
  409859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40985a:	pop    ds
  40985b:	mov    eax,ds:0xc94fb682
  409860:	inc    ebp
  409861:	xchg   esi,eax
  409862:	pusha  
  409863:	pop    ebp
  409864:	push   edx
  409865:	xchg   edi,eax
  409866:	pop    ds
  409867:	dec    edx
  409868:	jo     0x409810
  40986a:	fs jmp 0x2140a246
  409870:	inc    ecx
  409871:	lds    ebx,FWORD PTR [esi+0x30]
  409874:	sbb    esi,DWORD PTR [eax+eax*2+0x5ec60e2d]
  40987b:	sbb    ah,BYTE PTR ds:0x241453c9
  409881:	or     bh,bh
  409883:	adc    BYTE PTR [ebx],bh
  409885:	xchg   esp,eax
  409886:	pusha  
  409887:	or     eax,0x211fa62e
  40988c:	test   DWORD PTR [ebp+0x50],ebx
  40988f:	leave  
  409890:	pop    eax
  409891:	outs   dx,BYTE PTR ds:[esi]
  409892:	jb     0x409894
  409894:	mov    edi,0xac6e6db4
  409899:	or     eax,0xbdf40000
  40989e:	inc    ebx
  40989f:	pop    edi
  4098a0:	cmc    
  4098a1:	iret   
  4098a2:	push   esp
  4098a3:	inc    ecx
  4098a4:	push   0x625f42d4
  4098a9:	enter  0x5350,0x35
  4098ad:	into   
  4098ae:	dec    esp
  4098af:	add    BYTE PTR [eax-0x339e8d54],dl
  4098b5:	fwait
  4098b6:	arpl   WORD PTR [ebx-0x6f],sp
  4098b9:	mov    ah,0x74
  4098bb:	add    BYTE PTR gs:[eax],al
  4098be:	mov    al,ds:0x20665fed
  4098c3:	test   al,0x70
  4098c5:	and    BYTE PTR [edi-0x52],cl
  4098c8:	imul   esi,DWORD PTR [eax+0x48],0xffffffa8
  4098cc:	jb     0x409933
  4098ce:	pusha  
  4098cf:	in     eax,dx
  4098d0:	popa   
  4098d1:	outs   dx,DWORD PTR ds:[esi]
  4098d2:	retf   0x63ae
  4098d5:	arpl   ax,ax
  4098d7:	mov    bl,0x6d
  4098d9:	outs   dx,BYTE PTR ds:[esi]
  4098da:	push   ss
  4098db:	in     eax,dx
  4098dc:	popa   
  4098dd:	ins    BYTE PTR es:[edi],dx
  4098de:	pop    ebx
  4098df:	call   0x7371:0xa7a92063
  4098e6:	lea    esi,[ebx+eiz*2+0x43bde400]
  4098ed:	pop    edi
  4098ee:	mov    edi,0xb1534dc9
  4098f3:	rcr    DWORD PTR [ebp+0x43],1
  4098f6:	retf   
  4098f7:	retf   
  4098f8:	dec    esp
  4098f9:	inc    ebp
  4098fa:	scas   eax,DWORD PTR es:[edi]
  4098fb:	rol    DWORD PTR [edi+0x4f],0xba
  4098ff:	or     eax,0xaca00000
  409904:	ins    DWORD PTR es:[edi],dx
  409905:	and    cl,cl
  409907:	scas   al,BYTE PTR es:[edi]
  409908:	ins    BYTE PTR es:[edi],dx
  409909:	jns    0x409917
  40990b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40990c:	arpl   WORD PTR [ecx-0x2b],sp
  40990f:	push   ss
  409910:	test   eax,0x8d14f571
  409915:	jae    0x40994f
  409917:	add    al,0xe3
  409919:	jb     0x40994b
  40991b:	push   cs
  40991c:	mov    ds:0x9a0ff53a,al
  409921:	add    BYTE PTR fs:[eax],al
  409924:	daa    
  409925:	adc    DWORD PTR [eax-0x57ecd592],esp
  40992b:	fs and esi,ecx
  40992e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40992f:	jae    0x409929
  409931:	(bad)  
  409932:	add    al,BYTE PTR [eax]
  409934:	aad    0xaa
  409936:	mov    dl,0x44
  409938:	and    bh,BYTE PTR [ebx-0x51eebf39]
  40993e:	mov    ah,0x5e
  409940:	and    ch,BYTE PTR [ecx-0x58ecae39]
  409946:	rcl    DWORD PTR [esi-0x2b],0xa3
  40994a:	xchg   esi,eax
  40994b:	jno    0x40993d
  40994d:	xchg   ecx,eax
  40994e:	lahf   
  40994f:	pop    ds
  409950:	mov    eax,0xb164a690
  409955:	shl    BYTE PTR [ebx-0x5f6e0a8d],cl
  40995b:	pop    ds
  40995c:	rcr    BYTE PTR [eax-0x6a5a8859],0xa5
  409963:	jae    0x409915
  409965:	mov    fs,edx
  409967:	jae    0x409915
  409969:	pop    ebp
  40996a:	test   eax,0xb43a1aff
  40996f:	inc    esp
  409970:	mov    dl,0x29
  409972:	ret    0x9455
  409975:	es mov ebp,0xc335a243
  40997b:	inc    ebp
  40997c:	call   0x435:0x8940b823
  409983:	add    ch,dl
  409985:	ds pushf 
  409987:	add    BYTE PTR fs:[eax],al
  40998a:	mov    ch,0x9
  40998c:	push   ss
  40998d:	mov    ds:0x9704767b,al
  409992:	inc    edi
  409993:	imul   ecx,DWORD PTR [esi],0xfe6b2ba9
  409999:	mov    al,ds:0x980c7632
  40999e:	xor    DWORD PTR [edx],ebp
  4099a0:	or     ah,BYTE PTR [ebp-0x5af489c2]
  4099a6:	aaa    
  4099a7:	jae    0x409972
  4099a9:	test   eax,0xa8d57135
  4099ae:	or     dh,BYTE PTR ss:[ecx-0x5598e64d]
  4099b5:	lds    ebp,FWORD PTR [ebx]
  4099b7:	jne    0x40997d
  4099b9:	xchg   esi,eax
  4099ba:	pop    es
  4099bb:	imul   ecx,esi,0xce6b1ba8
  4099c1:	mov    al,ds:0x97cc7602
  4099c6:	icebp  
  4099c7:	or     DWORD PTR [ebp-0x69d60665],esi
  4099cd:	mov    eax,ds:0xa78e6bfb
  4099d2:	int    0x29
  4099d4:	mov    ah,BYTE PTR [esi+edi*4-0x485b748b]
  4099db:	jb     0x4099a6
  4099dd:	test   eax,0xa88d70b5
  4099e2:	mov    dh,0x9
  4099e4:	mov    eax,ds:0xaa6691b3
  4099e9:	lds    eax,FWORD PTR [ebx+0xa8566b]
  4099ef:	add    BYTE PTR [ebp+0x799c5509],bl
  4099f5:	sub    DWORD PTR [esi-0x5e],eax
  4099f8:	stos   DWORD PTR es:[edi],eax
  4099f9:	jno    0x409a3f
  4099fb:	mov    ds:0x953b6c76,eax
  409a00:	fwait
  409a01:	push   0x4e
  409a03:	lahf   
  409a04:	xor    BYTE PTR [ebp+0x0],0x4c
  409a08:	dec    ebp
  409a09:	outs   dx,BYTE PTR ds:[esi]
  409a0a:	and    BYTE PTR [edx+0x36],cl
  409a0d:	jae    0x409a7b
  409a0f:	or     esi,DWORD PTR [esi]
  409a11:	ins    BYTE PTR es:[edi],dx
  409a12:	imul   ecx,ecx,0x7c
  409a15:	imul   ebp,DWORD PTR [ecx+0x5],0x21006a72
  409a1c:	mov    DWORD PTR [ebp+0x5f],ecx
  409a1f:	sub    dl,BYTE PTR [ebx+0x76046867]
  409a25:	push   0x65
  409a27:	sti    
  409a28:	inc    ecx
  409a29:	addr16 arpl si,di
  409a2c:	inc    ebx
  409a2d:	jbe    0x409a9b
  409a2f:	int3   
  409a30:	inc    edx
  409a31:	ins    DWORD PTR es:[edi],dx
  409a32:	add    ch,dl
  409a34:	outs   dx,BYTE PTR ds:[esi]
  409a35:	ins    DWORD PTR es:[edi],dx
  409a36:	and    dh,al
  409a38:	xor    al,0x67
  409a3a:	push   0x656a37c4
  409a3f:	mov    ebx,0xcd617c45
  409a44:	dec    ebx
  409a45:	ins    DWORD PTR es:[edi],dx
  409a46:	and    dl,cl
  409a48:	aaa    
  409a49:	jb     0x409ab7
  409a4b:	retf   
  409a4c:	aaa    
  409a4d:	imul   ebp,DWORD PTR [ebx-0x37],0x2c
  409a51:	imul   ebp,DWORD PTR [ecx-0x73],0x6a7b0000
  409a58:	add    BYTE PTR [ecx-0x55a0b27a],ah
  409a5e:	sbb    BYTE PTR [edi+0x68],ah
  409a61:	mov    WORD PTR [edi+0x6a],?
  409a64:	gs jnp 0x409acc
  409a67:	jl     0x409aca
  409a69:	test   DWORD PTR [ebx+0x6d],eax
  409a6c:	add    BYTE PTR [ebp+0x3e],dh
  409a6f:	ins    DWORD PTR es:[edi],dx
  409a70:	and    BYTE PTR [esi+0x77],dl
  409a73:	addr16 push 0x656a3644
  409a79:	pop    ebx
  409a7a:	inc    esp
  409a7b:	ins    BYTE PTR es:[edi],dx
  409a7c:	imul   eax,DWORD PTR [ebp+esi*1+0x6a],0xaa8f0020
  409a84:	push   0x6c
  409a86:	sahf   
  409a87:	stos   BYTE PTR es:[edi],al
  409a88:	popa   
  409a89:	imul   ebx,esp,0xffffffb3
  409a8c:	pop    edi
  409a8d:	imul   esp,DWORD PTR [eax-0x5bff9d52],0xff5f43bd
  409a97:	retf   
  409a98:	pop    ebp
  409a99:	push   0x6562a8d9
  409a9e:	fidivr WORD PTR [edx-0x5636969c]
  409aa4:	bound  eax,QWORD PTR [eax]
  409aa6:	test   al,0xa1
  409aa8:	arpl   WORD PTR [eax],sp
  409aaa:	shl    DWORD PTR [edi-0x576199a3],cl
  409ab0:	gs ins DWORD PTR es:[edi],dx
  409ab2:	mov    DWORD PTR [ebx-0x5760df8e],ebp
  409ab8:	push   0x6c
  409aba:	add    BYTE PTR [eax],al
  409abc:	sahf   
  409abd:	test   al,0x61
  409abf:	imul   ecx,esp,0xffffffaf
  409ac2:	pop    edi
  409ac3:	imul   esp,DWORD PTR [eax+0x240062ac],0x3f5f43b9
  409acd:	iret   
  409ace:	pop    ebp
  409acf:	pushw  ds
  409ad1:	test   al,0x65
  409ad3:	ins    DWORD PTR es:[edi],dx
  409ad4:	dec    ecx
  409ad5:	stos   DWORD PTR es:[edi],eax
  409ad6:	jb     0x409ad8
  409ad8:	push   0x532063a1
  409add:	stos   DWORD PTR es:[edi],eax
  409ade:	pop    ebp
  409adf:	jne    0x409b3f
  409ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae2:	push   ds
  409ae3:	arpl   WORD PTR [ebp-0x5b],cx
  409ae6:	push   0x62
  409ae8:	pop    ebp
  409ae9:	scas   al,BYTE PTR es:[edi]
  409aea:	imul   esp,DWORD PTR [eax],0x6c67a85a
  409af0:	pop    ecx
  409af1:	lods   eax,DWORD PTR ds:[esi]
  409af2:	(bad)  
  409af3:	jmp    esp
  409af5:	mov    ebp,0xc7bf5f43
  409afa:	pop    ebp
  409afb:	jne    0x409ad2
  409afd:	pusha  
  409afe:	mov    al,ds:0x9c5f02ff
  409b03:	fs mov ch,0x5b
  409b06:	sahf   
  409b07:	pop    esi
  409b08:	fs cmp eax,0x1b6c71a9
  409b0e:	xchg   ebx,eax
  409b0f:	jae    0x409b78
  409b11:	dec    ecx
  409b12:	sahf   
  409b13:	data16 mov ch,0xf
  409b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b17:	imul   eax,DWORD PTR [ecx+0x11],0xffffffa5
  409b1b:	bound  edi,QWORD PTR [esi]
  409b1d:	shl    DWORD PTR [eax+eiz*2+0x72c0000],cl
  409b24:	test   al,0x63
  409b26:	aad    0x3a
  409b28:	mov    ah,0x44
  409b2a:	adc    dh,BYTE PTR [eax]
  409b2c:	ret    0x245e
  409b2f:	push   es
  409b30:	test   al,0x71
  409b32:	sbb    al,0x14
  409b34:	xchg   ebx,eax
  409b35:	jae    0x409b5e
  409b37:	ficomp DWORD PTR [esi+eiz*2+0x649aded5]
  409b3e:	mov    ch,0xcb
  409b40:	pushf  
  409b41:	pop    esi
  409b42:	add    eax,0xb56796d2
  409b47:	iret   
  409b48:	mov    ds:0xa3d1016b,eax
  409b4d:	(bad)  
  409b4e:	(bad)  
  409b4f:	adc    ah,BYTE PTR [esi-0x583913a0]
  409b55:	arpl   bp,dx
  409b57:	mov    edx,0xafb244b2
  409b5c:	rcr    BYTE PTR [esi-0x3b],0x91
  409b60:	xchg   esi,eax
  409b61:	addr16 aad 0x9e
  409b64:	call   0xc05e:0x9c9bf564
  409b6b:	lea    edx,[ecx-0x586c4b8e]
  409b71:	pop    esi
  409b72:	mov    bh,0x8d
  409b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b75:	push   0xa30909ab
  409b7a:	jne    0x409bf1
  409b7c:	dec    ebp
  409b7d:	mov    ds:0xe4426875,al
  409b82:	js     0x409bee
  409b84:	inc    eax
  409b85:	mov    al,ds:0x6d710000
  409b8a:	jmp    0x314a7092
  409b8f:	mov    ah,0x91
  409b91:	fs sub al,dl
  409b94:	xor    DWORD PTR [esi+0x44],0xffffff93
  409b98:	addr16 push 0xe
  409b9b:	test   eax,0xa7046833
  409ba0:	cmp    eax,0xd503e974
  409ba5:	or     DWORD PTR [edx],ebx
  409ba7:	cdq    
  409ba8:	aaa    
  409ba9:	addr16 or al,0x93
  409bac:	daa    
  409bad:	or     dh,BYTE PTR [ecx]
  409baf:	mov    ah,0x11
  409bb1:	arpl   WORD PTR [esi],sp
  409bb3:	mov    ebx,0xc51903a2
  409bb8:	push   es
  409bb9:	inc    edi
  409bba:	mov    cl,0x3
  409bbc:	aad    0x9
  409bbe:	mov    ah,0xbd
  409bc0:	daa    
  409bc1:	pop    ebp
  409bc2:	stos   DWORD PTR es:[edi],eax
  409bc3:	mov    dl,0x17
  409bc5:	pop    eax
  409bc6:	mov    al,ds:0x9a0a11c1
  409bcb:	mov    eax,0xb1aa5714
  409bd0:	sbb    eax,0xd503ac48
  409bd5:	or     DWORD PTR [edi-0x50aef942],ebx
  409bdb:	lods   al,BYTE PTR ds:[esi]
  409bdc:	push   edx
  409bdd:	add    ebp,DWORD PTR [eax+eiz*8-0x4e57b359]
  409be4:	xchg   edi,eax
  409be5:	push   ecx
  409be6:	jmp    0xb44a70ee
  409beb:	enter  0x0,0x84
  409bef:	dec    edx
  409bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf1:	add    edx,ebp
  409bf3:	or     DWORD PTR [eax],eax
  409bf5:	stos   BYTE PTR es:[edi],al
  409bf6:	pop    esi
  409bf7:	dec    esi
  409bf8:	inc    ebx
  409bf9:	mov    ds:0xe9545e5b,al
  409bfe:	(bad)  
  409bff:	or     DWORD PTR [eax],eax
  409c01:	sub    al,0x4c
  409c03:	dec    edx
  409c04:	inc    ebx
  409c05:	cmp    eax,0x35495d3e
  409c0a:	cs add edi,edi
  409c0d:	sbb    ebx,DWORD PTR [edx]
  409c0f:	push   ebx
  409c10:	dec    edi
  409c11:	sbb    ebp,DWORD PTR ds:0x231cff03
  409c17:	dec    edi
  409c18:	dec    edi
  409c19:	sub    bl,BYTE PTR [ebx+eax*1]
  409c1c:	(bad)  
  409c1d:	cmp    DWORD PTR [edi-0x69c6afad],eax
  409c23:	push   esi
  409c24:	inc    ebx
  409c25:	and    ecx,ebx
  409c27:	or     DWORD PTR [eax],eax
  409c29:	cmp    DWORD PTR [edi+0x6e2f5053],eax
  409c2f:	push   esp
  409c30:	inc    esp
  409c31:	jmp    0x2440a60c
  409c36:	pusha  
  409c37:	pop    esp
  409c38:	inc    ebp
  409c39:	jmp    0xb440a614
  409c3e:	dec    ebp
  409c3f:	inc    edi
  409c40:	dec    edi
  409c41:	lods   eax,DWORD PTR ds:[esi]
  409c42:	(bad)  
  409c43:	or     DWORD PTR [eax],eax
  409c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c46:	inc    ecx
  409c47:	inc    edi
  409c48:	dec    ebx
  409c49:	jmp    0xaa40a624
  409c4e:	xor    DWORD PTR [edx+0x59],edx
  409c51:	jmp    0xa169c56
  409c56:	add    BYTE PTR [ebp-0x5bbcb6dc],bl
  409c5c:	(bad)  
  409c5d:	or     DWORD PTR [eax],eax
  409c5f:	mov    dh,0x86
  409c61:	push   esi
  409c62:	dec    ecx
  409c63:	scas   al,BYTE PTR es:[edi]
  409c64:	mov    BYTE PTR [edi+0x0],dl
  409c67:	stos   BYTE PTR es:[edi],al
  409c68:	adc    DWORD PTR [esi+ecx*2-0x5c],0x5615
  409c70:	dec    esp
  409c71:	mov    ebx,0xcb640052
  409c76:	aas    
  409c77:	inc    esp
  409c78:	sub    al,0x6
  409c7a:	add    BYTE PTR [eax],al
  409c7c:	jo     0x409c49
  409c7e:	dec    edx
  409c7f:	inc    ebp
  409c80:	ror    dl,1
  409c82:	(bad)  
  409c83:	call   FWORD PTR [edi-0x6e91935c]
  409c89:	test   al,0x72
  409c8b:	imul   edi,DWORD PTR [ebx-0x5300015d],0x95786d97
  409c95:	loop   0x409cf8
  409c97:	outs   dx,DWORD PTR ds:[esi]
  409c98:	call   0x6d9e:0xa06363a3
  409c9f:	outs   dx,BYTE PTR ds:[esi]
  409ca0:	mov    esp,0xdf00000d
  409ca5:	sahf   
  409ca6:	ins    BYTE PTR es:[edi],dx
  409ca7:	je     0x409c7a
  409ca9:	lahf   
  409caa:	jb     0x409cd9
  409cac:	mov    eax,0xb0676ca8
  409cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cb2:	(bad)  
  409cb3:	jmp    DWORD PTR [eax+0x6e5f9b]
  409cb9:	add    BYTE PTR [edi+0x597263a7],bl
  409cbf:	test   al,0x6c
  409cc1:	arpl   WORD PTR [ebx-0x6c919857],bp
  409cc7:	or     eax,0x9da10000
  409ccc:	gs jb  0x409c5c
  409ccf:	test   eax,0xa59f0063
  409cd4:	jae    0x409d44
  409cd6:	xchg   DWORD PTR [eax-0x5768ff9e],ebp
  409cdc:	arpl   WORD PTR [eax+0x59],si
  409cdf:	lods   al,BYTE PTR ds:[esi]
  409ce0:	push   0x69
  409ce2:	jb     0x409c8c
  409ce4:	(bad)  
  409ce5:	call   FWORD PTR [edi-0x5f]
  409ce8:	ins    DWORD PTR es:[edi],dx
  409ce9:	jae    0x409cc0
  409ceb:	lea    eax,[edx]
  409ced:	add    ch,dl
  409cef:	ret    
  409cf0:	add    ah,BYTE PTR [ebp-0x2b]
  409cf3:	sahf   
  409cf4:	add    ah,BYTE PTR [ebx-0x2b]
  409cf7:	xchg   esp,eax
  409cf8:	add    dl,BYTE PTR [eax-0x2b]
  409cfb:	test   BYTE PTR [ebx],al
  409cfd:	imul   edx,ebp,0xd5690378
  409d03:	push   esi
  409d04:	add    al,0x65
  409d06:	aad    0x47
  409d08:	add    al,0x65
  409d0a:	aad    0xf2
  409d0c:	add    al,BYTE PTR [eax]
  409d0e:	aad    0x0
  409d10:	add    esp,DWORD PTR [ebp-0x2b]
  409d13:	dec    edx
  409d14:	add    al,0x65
  409d16:	aad    0xf2
  409d18:	add    al,BYTE PTR [eax]
  409d1a:	aad    0x2f
  409d1c:	add    al,0x6c
  409d1e:	add    BYTE PTR [eax],al
  409d20:	aad    0x3f
  409d22:	add    al,0x62
  409d24:	aad    0x11
  409d26:	add    al,0x6c
  409d28:	aad    0x3e
  409d2a:	add    al,0x0
  409d2c:	aad    0x26
  409d2e:	add    al,0x6f
  409d30:	aad    0x13
  409d32:	add    al,0x61
  409d34:	aad    0x16
  409d36:	add    al,0x5c
  409d38:	aad    0xf2
  409d3a:	add    al,BYTE PTR [eax]
  409d3c:	aad    0xac
  409d3e:	xor    eax,0x4b46d5cc
  409d43:	lods   al,BYTE PTR ds:[esi]
  409d44:	cmp    BYTE PTR [esp+0x39034a8],dl
  409d4b:	add    ch,dl
  409d4d:	ror    BYTE PTR [edi-0x6b1cdc9a],0x75
  409d54:	idiv   BYTE PTR [ebp-0x3503b26a]
  409d5a:	cwde   
  409d5b:	dec    esi
  409d5c:	icebp  
  409d5d:	enter  0x69a0,0xeb
  409d61:	rol    dl,cl
  409d63:	ins    DWORD PTR es:[edi],dx
  409d64:	leave  
  409d65:	or     DWORD PTR [ebp-0x61993462],edx
  409d6b:	nop
  409d6c:	stos   BYTE PTR es:[edi],al
  409d6d:	or     ebx,esi
  409d6f:	call   0x1fbd46
  409d74:	rol    DWORD PTR [edi-0x16],cl
  409d77:	std    
  409d78:	fisttp QWORD PTR [ecx]
  409d7a:	loope  0x409d69
  409d7c:	rcr    BYTE PTR [esi],0xb7
  409d7f:	fcmovu st,st(7)
  409d81:	cmp    bl,bl
  409d83:	rol    BYTE PTR [eax],1
  409d85:	add    dl,dh
  409d87:	aaa    
  409d88:	(bad)  
  409d89:	fdivr  DWORD PTR [esi+eiz*1+0x9d50418]
  409d90:	mul    edi
  409d92:	loop   0x409da1
  409d94:	push   cs
  409d95:	fnstsw WORD PTR [esp+ecx*1+0x39bed90d]
  409d9c:	std    
  409d9d:	add    edx,ebp
  409d9f:	or     DWORD PTR [ebp-0x601a18ef],edi
  409da5:	ss popf 
  409da7:	leave  
  409da8:	mov    edi,0x9ccda83e
  409dad:	mov    ds:0x9a28b2df,eax
  409db3:	retf   
  409db4:	mov    BYTE PTR [ebx],al
  409db6:	aad    0x9
  409db8:	dec    ebp
  409db9:	popa   
  409dba:	ja     0x409d75
  409dbc:	inc    ebp
  409dbd:	dec    edx
  409dbe:	mov    ebx,0x60497be8
  409dc3:	mov    dh,0xe8
  409dc5:	add    edx,ebp
  409dc7:	or     edi,ebx
  409dc9:	add    eax,0xc2b2520b
  409dce:	fldcw  WORD PTR [ecx-0x21]
  409dd1:	add    edx,ebp
  409dd3:	or     esp,esi
  409dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd6:	shl    DWORD PTR [edx],1
  409dd8:	adc    eax,esp
  409dda:	lock or dl,ah
  409ddd:	mov    ebx,edi
  409ddf:	push   0x0
  409de1:	fistp  DWORD PTR ds:0x90c60052
  409de7:	push   edx
  409de8:	dec    esp
  409de9:	mov    al,0x0
  409deb:	add    BYTE PTR [edx+0x6cf00317],cl
  409df1:	sbb    al,0xa
  409df3:	mov    ah,0xd6
  409df5:	or     DWORD PTR [eax],eax
  409df7:	or     bh,ah
  409df9:	aad    0xc6
  409dfb:	sub    bh,dl
  409dfd:	(bad)
  409e00:	into   
  409e01:	ror    edx,cl
  409e03:	icebp  
  409e04:	repz rcr ebp,cl
  409e07:	std    
  409e08:	int    0xd4
  409e0a:	(bad)  
  409e0b:	fmulp  st(3),st
  409e0d:	leave  
  409e0e:	sar    BYTE PTR [esi-0x26321e3f],cl
  409e14:	mov    cl,0xc6
  409e16:	retf   
  409e17:	retf   
  409e18:	fucomip st,st(0)
  409e1a:	sti    
  409e1b:	mov    ebx,0xce0009b6
  409e20:	stos   DWORD PTR es:[edi],eax
  409e21:	loope  0x409ded
  409e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e24:	test   eax,0xe1c1ddd1
  409e29:	(bad)  
  409e2b:	stos   DWORD PTR es:[edi],eax
  409e2c:	dec    eax
  409e2e:	(bad)  [ebx-0x69fff612]
  409e34:	(bad)  
  409e36:	out    0x88,al
  409e38:	loope  0x409e25
  409e3a:	(bad)  
  409e3b:	mov    esi,0xc1322486
  409e40:	mov    al,ds:0x84c3253b
  409e45:	add    BYTE PTR es:[esi-0x17],al
  409e49:	fisub  WORD PTR [ebx-0x6021e361]
  409e4f:	mov    ds:0xda280000,eax
  409e54:	call   DWORD PTR [ecx+0x5e94a404]
  409e5a:	add    BYTE PTR [ebp+0x72f900a7],dl
  409e60:	xchg   ecx,eax
  409e61:	cmp    esp,0x6c94b78b
  409e67:	or     al,BYTE PTR [eax]
  409e69:	add    cl,cl
  409e6b:	je     0x409dfa
  409e6d:	mov    edx,DWORD PTR [ebp+0x6e]
  409e70:	xchg   esi,eax
  409e71:	mov    edi,0x928ac9
  409e76:	jnp    0x409e34
  409e78:	ds push ebx
  409e7a:	imul   ecx,edx,0x4e
  409e7d:	inc    esi
  409e7e:	dec    esp
  409e7f:	retf   0x6c65
  409e82:	push   esi
  409e83:	test   al,0x77
  409e85:	fs sahf 
  409e87:	stos   DWORD PTR es:[edi],eax
  409e88:	dec    eax
  409e89:	inc    eax
  409e8a:	test   DWORD PTR [ecx-0x5c58838c],edx
  409e90:	cmp    al,0x51
  409e92:	mov    al,0xbe
  409e94:	push   edi
  409e95:	outs   dx,BYTE PTR ds:[esi]
  409e96:	mov    edx,0xa84941b8
  409e9b:	cwde   
  409e9c:	inc    ebp
  409e9d:	push   ecx
  409e9e:	mov    bl,0xc9
  409ea0:	aas    
  409ea1:	inc    ecx
  409ea2:	in     al,dx
  409ea3:	or     DWORD PTR [eax],eax
  409ea5:	add    BYTE PTR [esi+0x7863a3],bl
  409eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eac:	jb     0x409f10
  409eae:	lods   eax,DWORD PTR ds:[esi]
  409eaf:	mov    fs,WORD PTR [ebx+0x79]
  409eb2:	lods   al,BYTE PTR ds:[esi]
  409eb3:	or     DWORD PTR [eax],eax
  409eb5:	add    BYTE PTR [eax],al
  409eb7:	add    BYTE PTR [esi-0x6bdfcf24],bl
  409ebd:	aad    0x34
  409ebf:	imul   eax,DWORD PTR [ecx+0xc002dd8],0x14ada75b
  409ec9:	popa   
  409eca:	jmp    0x409e6d
  409ecc:	iret   
  409ecd:	popa   
  409ece:	add    BYTE PTR [eax],al
  409ed0:	(bad)  
  409ed2:	cs cmp al,0xcd
  409ed5:	shr    DWORD PTR [eax+edi*2],cl
  409ed8:	aad    0x16
  409eda:	in     al,0x3d
  409edc:	aad    0x22
  409ede:	loopne 0x409f14
  409ee0:	mov    ecx,0xf024d90d
  409ee5:	sbb    edi,ecx
  409ee7:	sub    dl,ch
  409ee9:	lods   al,BYTE PTR ds:[esi]
  409eea:	mov    ah,0x42
  409eec:	scas   eax,DWORD PTR es:[edi]
  409eed:	mov    WORD PTR [edx-0x57016bba],gs
  409ef3:	aas    
  409ef4:	mov    eax,ds:0xd50002f2
  409ef9:	mov    al,0xb2
  409efb:	dec    eax
  409efc:	fisub  WORD PTR [ebx+0x75d544ab]
  409f02:	push   ebx
  409f03:	mov    edx,0xaa4d4e6c
  409f08:	pop    ecx
  409f09:	imul   ebp,DWORD PTR [ebp-0x43],0xa347534b
  409f10:	dec    ebx
  409f11:	fwait
  409f12:	dec    edx
  409f13:	nop
  409f14:	pop    edi
  409f15:	nop
  409f16:	pusha  
  409f17:	lods   al,BYTE PTR ds:[esi]
  409f18:	xor    esp,DWORD PTR [edx+0x984f]
  409f1e:	pop    ebx
  409f1f:	xchg   esp,eax
  409f20:	push   esp
  409f21:	mov    dl,0x31
  409f23:	arpl   WORD PTR [ebx-0x76],di
  409f26:	cmp    eax,0x43917c7b
  409f2b:	pop    ebx
  409f2c:	pop    ebx
  409f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f2e:	push   ebp
  409f2f:	dec    esi
  409f30:	add    al,0x0
  409f32:	aad    0x15
  409f34:	rcl    BYTE PTR [edi+0x23],cl
  409f37:	ror    ah,cl
  409f39:	jo     0x409f75
  409f3b:	out    0x84,eax
  409f3d:	jno    0x409f1f
  409f3f:	pop    ss
  409f40:	mov    WORD PTR [ebx-0x2],?
  409f43:	or     eax,0xc3eb4ebb
  409f48:	mov    al,ds:0xa503c66d
  409f4d:	sbb    eax,DWORD PTR [ecx]
  409f4f:	or     dl,BYTE PTR [edi-0x1cf600c7]
  409f55:	xchg   esi,ebx
  409f57:	pop    ss
  409f58:	mov    edx,0xe522cdee
  409f5d:	stc    
  409f5e:	adc    DWORD PTR [edi+ebp*4-0x4],ebx
  409f62:	punpckldq mm5,mm1
  409f65:	cld    
  409f66:	lds    edx,FWORD PTR [eax]
  409f68:	stos   BYTE PTR es:[edi],al
  409f69:	std    
  409f6a:	out    dx,al
  409f6b:	outs   dx,DWORD PTR ds:[esi]
  409f6c:	out    dx,eax
  409f6d:	sti    
  409f6e:	mov    eax,ds:0xef02da12
  409f73:	sbb    eax,0x64f2cfde
  409f78:	fcom   st(1)
  409f7a:	sar    BYTE PTR [edx+eax*4-0x6c],0xf1
  409f7f:	sub    ecx,0xd5000003
  409f85:	or     DWORD PTR [ecx+0x69],esp
  409f88:	inc    edi
  409f89:	xchg   esi,eax
  409f8a:	pop    eax
  409f8b:	sub    edi,DWORD PTR [eax]
  409f8d:	adc    DWORD PTR [edi+eiz*2-0x2b],0x9
  409f92:	push   cs
  409f93:	inc    ecx
  409f94:	push   ss
  409f95:	les    esp,FWORD PTR [edi-0x39f6e8d5]
  409f9b:	or     eax,0x6dbf6f1
  409fa0:	hlt    
  409fa1:	(bad)  
  409fa2:	fstp   DWORD PTR [eax+edi*8]
  409fa5:	mov    DWORD PTR [ebx+0x74bb1b19],0x8be0db54
  409faf:	push   esp
  409fb0:	(bad)  
  409fb1:	dec    DWORD PTR [edx-0x170d34e2]
  409fb7:	add    edx,ebp
  409fb9:	or     ebx,ebx
  409fbb:	rol    DWORD PTR [esi+esi*1],1
  409fbe:	into   
  409fbf:	(bad)  
  409fc0:	test   BYTE PTR [ecx],0x67
  409fc3:	dec    esp
  409fc4:	push   0xba5047a9
  409fc9:	or     ah,BYTE PTR [ebx+eax*4-0x4d]
  409fcd:	or     al,BYTE PTR [eax]
  409fcf:	bound  ebp,QWORD PTR [ecx]
  409fd1:	mov    bl,0xb2
  409fd3:	xor    al,0x22
  409fd5:	mov    ah,0xf8
  409fd7:	pushf  
  409fd8:	push   cs
  409fd9:	shl    DWORD PTR [edi-0xf49f266],0x86
  409fe0:	pop    ds
  409fe1:	out    dx,al
  409fe2:	mov    al,ds:0xe8acf58a
  409fe7:	dec    edx
  409fe8:	add    BYTE PTR [eax],al
  409fea:	add    al,0xf0
  409fec:	jmp    esp
  409fee:	je     0x40a022
  409ff0:	sub    eax,0x3167360a
  409ff5:	add    al,0x6e
  409ff7:	cs xor edx,edx
  409ffa:	sub    al,BYTE PTR [edx+0x39]
  409ffd:	(bad)  
  409ffe:	cmp    BYTE PTR ds:0x1cd2,bh
  40a003:	ss cmp ecx,edi
  40a006:	pop    edi
  40a007:	inc    edx
  40a008:	sub    eax,0x33360787
  40a00d:	out    0x17,al
  40a00f:	inc    esi
  40a010:	adc    al,0xa1
  40a012:	(bad)  
  40a013:	or     DWORD PTR [eax],eax
  40a015:	push   edx
  40a016:	popf   
  40a017:	mov    bl,0xb1
  40a019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a01a:	(bad)  
  40a01b:	(bad)  
  40a01c:	lods   eax,DWORD PTR ds:[esi]
  40a01d:	mov    ds:0x99b8bee5,eax
  40a022:	test   esi,esi
  40a024:	mov    ebp,0xa1ab808b
  40a029:	sar    BYTE PTR [ebp+eiz*4-0x5d],1
  40a02d:	mov    al,BYTE PTR [edx+0x367ab2a9]
  40a033:	mov    bl,0xaa
  40a035:	pop    ebx
  40a036:	inc    edi
  40a037:	fcos   
  40a039:	mov    al,BYTE PTR [ecx+ecx*8]
  40a03c:	fisub  DWORD PTR [ecx+edx*1-0x1043296d]
  40a043:	fcmovnu st,st(2)
  40a045:	mov    al,0xea
  40a047:	call   0xd7c0:0x3a7500da
  40a04e:	add    BYTE PTR [eax],al
  40a050:	cmp    eax,0x7c88c346
  40a055:	push   es
  40a056:	add    BYTE PTR [eax],al
  40a058:	and    eax,0x62f4a14f
  40a05d:	push   ecx
  40a05e:	mov    esi,0xfd4b34a5
  40a063:	mov    cl,0x4a
  40a065:	dec    esp
  40a066:	mov    dh,0xaa
  40a068:	pop    edx
  40a069:	sbb    eax,0x3cac0000
  40a06e:	rol    ah,cl
  40a070:	or     ch,BYTE PTR [edi+ebx*8]
  40a073:	sar    edx,cl
  40a075:	cmp    edi,ecx
  40a077:	shl    ah,cl
  40a079:	inc    esi
  40a07a:	fmulp  st(0),st
  40a07c:	imul   BYTE PTR [ebx]
  40a07e:	ret    0xeacb
  40a081:	sub    eax,esi
  40a083:	add    BYTE PTR [edx-0x63756382],bh
  40a089:	ins    DWORD PTR es:[edi],dx
  40a08a:	xchg   ecx,eax
  40a08b:	popf   
  40a08c:	lods   al,BYTE PTR ds:[esi]
  40a08d:	outs   dx,DWORD PTR ds:[esi]
  40a08e:	sbb    DWORD PTR [edx+eax*4-0x2f796f8c],0xfc9c8c72
  40a099:	add    eax,0x71580000
  40a09e:	mov    ds,WORD PTR [eax-0x707d80a2]
  40a0a4:	je     0x40a118
  40a0a6:	or     BYTE PTR [esi-0x6d777878],0x66
  40a0ad:	pop    ebp
  40a0ae:	pushf  
  40a0af:	lahf   
  40a0b0:	gs push es
  40a0b2:	add    BYTE PTR [eax],al
  40a0b4:	add    BYTE PTR [eax],al
  40a0b6:	ret    0x140c
  40a0b9:	add    dl,ah
  40a0bb:	std    
  40a0bc:	inc    DWORD PTR [ebx]
  40a0be:	aam    0xe7
  40a0c0:	push   cs
  40a0c1:	sbb    eax,0x230cf3bd
  40a0c6:	aad    0xe6
  40a0c8:	sti    
  40a0c9:	adc    al,0xd5
  40a0cb:	adc    eax,0x40c5eba
  40a0d0:	scas   eax,DWORD PTR es:[edi]
  40a0d1:	push   eax
  40a0d2:	pop    es
  40a0d3:	push   ds
  40a0d4:	ret    
  40a0d5:	push   edx
  40a0d6:	sub    DWORD PTR [edx],edx
  40a0d8:	call   0xd500:0x4072744
  40a0df:	call   0xa956:0x7129ba53
  40a0e6:	sub    ebp,DWORD PTR [ebp+0x62]
  40a0e9:	mov    ecx,0xb0438621
  40a0ee:	sbb    al,0xe3
  40a0f0:	add    al,BYTE PTR [eax]
  40a0f2:	aad    0x9a
  40a0f4:	push   ebx
  40a0f5:	mov    edx,0xa9566981
  40a0fa:	sub    DWORD PTR [ebp+0x4d],0xffffffbb
  40a0fe:	jl     0x40a155
  40a100:	dec    eax
  40a101:	add    ch,dl
  40a103:	dec    ebp
  40a104:	popa   
  40a105:	mov    bh,0x74
  40a107:	ins    BYTE PTR es:[edi],dx
  40a108:	dec    ebp
  40a109:	mov    bl,0x70
  40a10b:	aaa    
  40a10c:	pop    ecx
  40a10d:	test   DWORD PTR [edx+ecx*2+0x53],ebp
  40a111:	mov    cl,0x6c
  40a113:	dec    esi
  40a114:	add    eax,DWORD PTR [eax]
  40a116:	aad    0xc1
  40a118:	fdiv   QWORD PTR [edx]
  40a11a:	add    BYTE PTR [eax],al
  40a11c:	mov    al,0xd7
  40a11e:	shl    BYTE PTR [esi],1
  40a120:	mov    ah,0x1a
  40a122:	xor    al,BYTE PTR [ecx]
  40a124:	mov    ebp,0xd5003115
  40a129:	ja     0x40a0bf
  40a12b:	test   BYTE PTR [esi-0x66],al
  40a12e:	xchg   DWORD PTR [edx-0x73799db1],ecx
  40a134:	aas    
  40a135:	jb     0x40a0d8
  40a137:	mov    BYTE PTR [ebp+0x5d],dl
  40a13a:	mov    DWORD PTR [ebp+edx*8-0x23f0e33b],edx
  40a141:	or     edx,ebx
  40a143:	adc    esp,edx
  40a145:	or     edx,esi
  40a147:	or     ebx,edx
  40a149:	sbb    edx,edx
  40a14b:	add    eax,0x3e91cd6
  40a150:	aad    0x9
  40a152:	pushf  
  40a153:	(bad)  
  40a154:	xchg   ebx,eax
  40a155:	fiadd  DWORD PTR [ecx-0x5e344f3c]
  40a15b:	loopne 0x40a105
  40a15d:	(bad)  
  40a15e:	call   0x754a7666
  40a163:	(bad)  
  40a164:	pop    eax
  40a165:	or     DWORD PTR [edx+0x76926294],0xa809419a
  40a16f:	dec    ecx
  40a170:	push   es
  40a171:	dec    edi
  40a172:	(bad)  
  40a173:	pop    eax
  40a174:	add    cl,BYTE PTR [edx-0x4f]
  40a177:	push   edx
  40a178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a179:	dec    edi
  40a17a:	jmp    0xf54a7682
  40a17f:	and    eax,DWORD PTR [eax]
  40a181:	add    dl,dl
  40a183:	sub    ebx,edx
  40a185:	cmp    ebx,esi
  40a187:	aas    
  40a188:	fild   DWORD PTR [edi]
  40a18a:	push   DWORD PTR ds:0x31ff33da
  40a190:	jmp    0x814a7698
  40a195:	outs   dx,DWORD PTR ds:[esi]
  40a196:	xchg   esi,eax
  40a197:	addr16 jle 0x40a217
  40a19a:	jg     0x40a20f
  40a19c:	ja     0x40a1e9
  40a19e:	cmp    BYTE PTR [edx+0x77],0x3
  40a1a2:	aad    0x9
  40a1a4:	jne    0x40a141
  40a1a6:	inc    ebx
  40a1a7:	xchg   edx,eax
  40a1a8:	ins    DWORD PTR es:[edi],dx
  40a1a9:	sahf   
  40a1aa:	push   esi
  40a1ab:	mov    ebx,0x946896b
  40a1b0:	(bad)  
  40a1b1:	(bad)  
  40a1b2:	test   ecx,0xeaf3e7bf
  40a1b8:	mov    ah,0xf5
  40a1ba:	leave  
  40a1bb:	repz push DWORD PTR [edx-0x3d013446]
  40a1c2:	lods   eax,DWORD PTR ds:[esi]
  40a1c3:	out    dx,al
  40a1c4:	jmp    0x4a7856
  40a1c9:	inc    esp
  40a1ca:	cmp    DWORD PTR [edx-0x4193bd66],0xb07647af
  40a1d4:	test   al,0x51
  40a1d6:	xchg   esp,eax
  40a1d7:	popf   
  40a1d8:	stos   DWORD PTR es:[edi],eax
  40a1d9:	aas    
  40a1da:	cmp    eax,0x4f36b5bb
  40a1df:	idiv   esi
  40a1e1:	movntps XMMWORD PTR [eax+eiz*2-0x3d],xmm0
  40a1e6:	add    BYTE PTR [eax],al
  40a1e8:	sbb    BYTE PTR [ebp+0x49],ch
  40a1eb:	mov    eax,0xbc41510e
  40a1f0:	(bad)  
  40a1f1:	or     DWORD PTR [eax],eax
  40a1f3:	xchg   edi,eax
  40a1f4:	and    BYTE PTR [ecx-0x79df8479],ch
  40a1fa:	mov    cl,0x81
  40a1fc:	xchg   ecx,eax
  40a1fd:	idiv   esi
  40a1ff:	mov    ecx,0xca4e6dca
  40a204:	shl    DWORD PTR [ebx+edi*2-0x70],0xc7
  40a209:	jo     0x40a280
  40a20b:	fwait
  40a20c:	(bad)  
  40a20d:	or     DWORD PTR [eax],eax
  40a20f:	mov    DWORD PTR [ebp+0x5c],edx
  40a212:	jle    0x40a293
  40a214:	scas   al,BYTE PTR es:[edi]
  40a215:	outs   dx,DWORD PTR ds:[esi]
  40a216:	addr16 jp 0x40a1ef
  40a219:	or     DWORD PTR [eax],eax
  40a21b:	and    eax,0x2edafd31
  40a220:	sub    edx,edx
  40a222:	(bad)  
  40a223:	sbb    eax,0x8affc81d
  40a228:	cmp    DWORD PTR [ebp-0x47c56247],esi
  40a22e:	mov    eax,DWORD PTR [ebx-0x6a4e42df]
  40a234:	xor    al,al
  40a236:	(bad)  
  40a237:	push   DWORD PTR [ecx+ebx*4-0x66]
  40a23b:	sahf   
  40a23c:	xor    eax,0xa7009ba9
  40a241:	push   ss
  40a242:	or     BYTE PTR [edi],cl
  40a244:	mov    ds:0xa00c5b2b,eax
  40a249:	pop    esi
  40a24a:	add    DWORD PTR [eax+eax*1],ebp
  40a24d:	add    ch,ch
  40a24f:	dec    esi
  40a250:	inc    esp
  40a251:	add    cl,BYTE PTR [ebx-0x5aa6a5ba]
  40a257:	cmp    al,0x4b
  40a259:	pop    edi
  40a25a:	mov    eax,0x7e134c11
  40a25f:	pop    ss
  40a260:	add    BYTE PTR [eax],al
  40a262:	sahf   
  40a263:	cmp    al,0x23
  40a265:	and    ch,BYTE PTR [edx+ecx*1+0x0]
  40a269:	add    cl,ch
  40a26b:	(bad)  
  40a26c:	xchg   ebp,eax
  40a26d:	xor    ecx,0xaa839d94
  40a273:	test   eax,0xa6c9e80
  40a278:	add    BYTE PTR [eax],al
  40a27a:	icebp  
  40a27b:	scas   eax,DWORD PTR es:[edi]
  40a27c:	stos   DWORD PTR es:[edi],eax
  40a27d:	mov    edi,0x999a86d2
  40a282:	cmp    al,0xa
  40a284:	add    BYTE PTR [eax],al
  40a286:	test   DWORD PTR [ebx+0x71],edi
  40a289:	js     0x40a2fd
  40a28b:	bound  eax,QWORD PTR [eax]
  40a28d:	add    BYTE PTR [ebp+0x56],bh
  40a290:	push   esi
  40a291:	inc    ebp
  40a292:	jge    0x40a2e4
  40a294:	inc    esi
  40a295:	push   eax
  40a296:	jp     0x40a2fa
  40a298:	jne    0x40a312
  40a29a:	inc    eax
  40a29b:	gs jp  0x40a307
  40a29e:	mov    gs,WORD PTR [ecx+0x63]
  40a2a1:	ins    DWORD PTR es:[edi],dx
  40a2a2:	push   ebx
  40a2a3:	ins    BYTE PTR es:[edi],dx
  40a2a4:	push   0x71
  40a2a6:	push   ss
  40a2a7:	xor    esp,DWORD PTR [esi]
  40a2a9:	cmp    DWORD PTR [esi-0x45869777],edi
  40a2af:	push   edi
  40a2b0:	pop    esi
  40a2b1:	push   esi
  40a2b2:	add    BYTE PTR [eax],al
  40a2b4:	aad    0x25
  40a2b6:	ins    DWORD PTR es:[edi],dx
  40a2b7:	push   esi
  40a2b8:	mov    DWORD PTR [ecx],edi
  40a2ba:	push   esp
  40a2bb:	dec    ebp
  40a2bc:	mov    eax,fs
  40a2be:	add    al,BYTE PTR [eax]
  40a2c0:	aad    0xee
  40a2c2:	adc    al,BYTE PTR [ecx+edx*8]
  40a2c5:	fistp  DWORD PTR [edi]
  40a2c7:	adc    esp,edx
  40a2c9:	push   es
  40a2ca:	sbb    eax,0xbf3cc1f
  40a2cf:	adc    esp,edx
  40a2d1:	loope  0x40a2eb
  40a2d3:	add    ch,dl
  40a2d5:	jmp    0xea10c0f0
  40a2da:	and    BYTE PTR [esi],cl
  40a2dc:	mov    ebp,0xc53d22fc
  40a2e1:	into   
  40a2e2:	and    esi,DWORD PTR [edx]
  40a2e4:	mov    ah,0xb8
  40a2e6:	pop    ss
  40a2e7:	sub    edi,DWORD PTR [eax-0x43ddd335]
  40a2ed:	shl    BYTE PTR [ecx+0x6e],0xe4
  40a2f1:	or     BYTE PTR [eax],bh
  40a2f3:	and    DWORD PTR [esp+ebp*8-0x2a3ce9ec],esp
  40a2fa:	and    ebx,DWORD PTR [ebx]
  40a2fc:	mov    ebp,0xe50218ee
  40a301:	call   0xdf21b531
  40a306:	push   es
  40a307:	sbb    dl,ch
  40a309:	fmul   DWORD PTR [edi+ebx*1]
  40a30c:	aad    0x61
  40a30e:	mov    dl,0x9f
  40a310:	je     0x40a353
  40a312:	mov    esp,0x2e367a4
  40a317:	add    BYTE PTR [eax],al
  40a319:	add    ch,dl
  40a31b:	jp     0x40a2dd
  40a31d:	test   eax,0x2e359
  40a322:	aad    0x53
  40a324:	mov    ds:0x2e34dbe,al
  40a329:	add    ch,dl
  40a32b:	mov    esp,0x9cc0f12
  40a330:	jmp    0x224a7838
  40a335:	and    esp,ebx
  40a337:	sbb    ah,dl
  40a339:	adc    al,0xd2
  40a33b:	adc    al,0xd
  40a33d:	add    al,0xc7
  40a33f:	adc    cl,ch
  40a341:	add    edx,ebp
  40a343:	or     DWORD PTR [esp+edx*8+0x45d9a51],edx
  40a34a:	aad    0x9
  40a34c:	loop   0x40a373
  40a34e:	std    
  40a34f:	and    esi,ebx
  40a351:	sbb    al,0xd3
  40a353:	or     DWORD PTR [edx],esi
  40a355:	push   ecx
  40a356:	aad    0x9
  40a358:	leave  
  40a359:	es out 0x2d,eax
  40a35c:	jmp    0xe34a7864
  40a361:	pop    es
  40a362:	out    dx,eax
  40a363:	push   ss
  40a364:	jmp    0x3b4a786c
  40a369:	mov    eax,0x3e8a62f
  40a36e:	aad    0x9
  40a370:	sbb    eax,0x1539b62d
  40a375:	and    esp,DWORD PTR [esi-0x43f3e5d2]
  40a37b:	adc    eax,0xaed
  40a380:	mov    esi,0xef191206
  40a385:	or     edx,edi
  40a387:	pop    ss
  40a388:	ror    BYTE PTR [ecx],1
  40a38a:	or     dl,BYTE PTR [ecx]
  40a38c:	jmp    0xd54d7292
  40a391:	or     DWORD PTR [eax-0x66],esi
  40a394:	push   ecx
  40a395:	in     eax,0x70
  40a397:	test   eax,0xac4eae76
  40a39c:	jne    0x40a348
  40a39e:	push   edi
  40a39f:	add    al,0xd5
  40a3a1:	or     ebx,edi
  40a3a3:	in     al,0xf8
  40a3a5:	mov    ch,0xf9
  40a3a7:	std    
  40a3a8:	or     esi,ebx
  40a3aa:	push   ebx
  40a3ac:	pop    es
  40a3ad:	repnz stc 
  40a3af:	add    eax,DWORD PTR [esi-0xc]
  40a3b2:	(bad)  
  40a3b3:	in     al,0x2b
  40a3b5:	lods   eax,DWORD PTR ds:[esi]
  40a3b6:	mov    ch,0x98
  40a3b8:	and    ah,BYTE PTR [ebx-0xc1b7c4e]
  40a3be:	dec    BYTE PTR [edi-0x451d081f]
  40a3c4:	xchg   ebp,eax
  40a3c5:	repz (bad) 
  40a3c7:	popf   
  40a3c8:	pusha  
  40a3c9:	adc    DWORD PTR [ebp-0x10c5ca2],0xcddba565
  40a3d3:	mov    ah,0x93
  40a3d5:	rol    BYTE PTR [ecx+ebp*8+0x560009d6],0x72
  40a3dd:	mov    al,ds:0xa06b55b5
  40a3e2:	out    dx,eax
  40a3e3:	dec    esp
  40a3e4:	add    BYTE PTR [eax],al
  40a3e6:	lods   al,BYTE PTR ds:[esi]
  40a3e8:	call   ecx
  40a3ea:	loop   0x40a405
  40a3ec:	sub    al,0xb2
  40a3ee:	mov    cl,0x9
  40a3f0:	add    BYTE PTR [esi+0x253f33ab],ch
  40a3f6:	mov    esp,0xd6e92c2e
  40a3fb:	or     DWORD PTR [eax],eax
  40a3fd:	jg     0x40a448
  40a3ff:	xchg   DWORD PTR [ecx-0x7f74aca0],edx
  40a405:	jmp    0x3a40ade0
  40a40a:	inc    ebp
  40a40b:	clc    
  40a40c:	repz inc eax
  40a40e:	inc    edi
  40a40f:	jmp    0x40a3f6
  40a411:	aas    
  40a412:	ds repz (bad) 
  40a415:	and    dl,ch
  40a417:	out    0xe3,eax
  40a419:	and    BYTE PTR [ebx],ah
  40a41b:	sti    
  40a41c:	lock jmp 0x240adf8
  40a422:	and    bh,ch
  40a424:	out    dx,al
  40a425:	add    bh,ah
  40a427:	repnz jmp 0xacc1:0xd1d2d8fa
  40a42f:	rcl    dh,cl
  40a431:	xchg   edi,eax
  40a432:	in     al,0xcf
  40a434:	rol    eax,0x1a
  40a437:	rol    al,cl
  40a439:	repz and eax,esi
  40a43c:	retf   0x33d0
  40a43f:	fild   DWORD PTR [ebp+edx*4-0x17021fd0]
  40a446:	stos   DWORD PTR es:[edi],eax
  40a447:	icebp  
  40a448:	out    dx,eax
  40a449:	icebp  
  40a44a:	add    BYTE PTR [eax],al
  40a44c:	lahf   
  40a44d:	or     eax,0x6f0b0000
  40a452:	imul   ebx,DWORD PTR [edx],0x5f5152dc
  40a458:	repnz pop edx
  40a45a:	inc    ecx
  40a45b:	add    dh,cl
  40a45d:	addr16 jae 0x40a4d2
  40a460:	mov    ebp,0xac617665
  40a465:	push   es
  40a466:	add    BYTE PTR [eax],al
  40a468:	aaa    
  40a469:	jmp    0x6bd8435
  40a46e:	add    BYTE PTR [eax],al
  40a470:	loope  0x40a4c9
  40a472:	inc    edi
  40a473:	push   ecx
  40a474:	mov    dh,0x41
  40a476:	dec    ebx
  40a477:	inc    edx
  40a478:	jl     0x40a480
  40a47a:	add    BYTE PTR [eax],al
  40a47c:	or     al,dh
  40a47e:	jecxz  0x40a463
  40a480:	or     bh,dh
  40a482:	std    
  40a483:	imul   BYTE PTR [esi+eax*1+0x0]
  40a487:	add    BYTE PTR [edx],cl
  40a489:	(bad)  
  40a48b:	retf   0xcefa
  40a48e:	(bad)  
  40a48f:	fcomip st,st(5)
  40a491:	xlat   BYTE PTR ds:[ebx]
  40a492:	hlt    
  40a493:	in     al,0x4f
  40a495:	fld    st(1)
  40a497:	(bad)  
  40a498:	hlt    
  40a499:	loopne 0x40a47f
  40a49b:	loopne 0x40a493
  40a49d:	shr    ebx,1
  40a49f:	(bad)  
  40a4a0:	aad    0x15
  40a4a2:	fsub   st(6),st
  40a4a4:	sub    al,0xe
  40a4a6:	clc    
  40a4a7:	out    dx,eax
  40a4a8:	aad    0xd5
  40a4aa:	or     al,BYTE PTR [edx]
  40a4ac:	in     al,0xdd
  40a4ae:	add    BYTE PTR [edx],dl
  40a4b0:	add    BYTE PTR [eax],al
  40a4b2:	fxch   st(6)
  40a4b4:	or     DWORD PTR ds:0x2417daba,ebp
  40a4ba:	mov    cl,0x11
  40a4bc:	cmp    dh,BYTE PTR ds:[ebx-0x4bdbca1e]
  40a4c3:	fidiv  WORD PTR [ebx]
  40a4c5:	xor    ebp,DWORD PTR [ebx-0x2affd50e]
  40a4cb:	frstor [edi]
  40a4cd:	sub    eax,0x292bcdf0
  40a4d2:	in     eax,dx
  40a4d3:	or     al,0x4
  40a4d5:	add    ch,dl
  40a4d7:	lods   al,BYTE PTR ds:[esi]
  40a4d8:	or     DWORD PTR [edx-0x71639d9e],0x5e
  40a4df:	mov    edi,DWORD PTR [bx-0x662b]
  40a4e4:	leave  
  40a4e5:	xlat   BYTE PTR ds:[ebx]
  40a4e6:	jl     0x40a4cb
  40a4e8:	add    al,BYTE PTR [eax]
  40a4ea:	aad    0xfa
  40a4ec:	sub    edi,DWORD PTR [edx]
  40a4ee:	mov    ecx,0xd50002e2
  40a4f3:	hlt    
  40a4f4:	dec    esi
  40a4f5:	push   edx
  40a4f6:	and    bl,ah
  40a4f8:	add    al,BYTE PTR [eax]
  40a4fa:	aad    0xe9
  40a4fc:	pop    ebx
  40a4fd:	inc    eax
  40a4fe:	adc    esp,ebx
  40a500:	add    al,BYTE PTR [eax]
  40a502:	aad    0xe
  40a504:	xor    al,0x36
  40a506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a507:	adc    cl,BYTE PTR [edi+0x78]
  40a50a:	ret    
  40a50b:	mov    ebp,0xd56373
  40a510:	sub    DWORD PTR [esi-0x51],edi
  40a513:	mov    BYTE PTR [edx],0x0
  40a516:	add    BYTE PTR [eax],al
  40a518:	aad    0xc7
  40a51a:	pusha  
  40a51b:	ins    DWORD PTR es:[edi],dx
  40a51c:	test   al,0x9
  40a51e:	mov    DWORD PTR [esi-0x2b],esp
  40a521:	or     DWORD PTR [edi-0x29d21cd9],eax
  40a527:	and    ebx,ebx
  40a529:	and    DWORD PTR [ebp+0x4d09d56c],edi
  40a52f:	mov    ds:0xaf48ac40,eax
  40a534:	inc    esi
  40a535:	or     cl,BYTE PTR [ecx]
  40a537:	inc    BYTE PTR [ebx]
  40a539:	out    0x8,al
  40a53b:	hlt    
  40a53c:	sti    
  40a53d:	cli    
  40a53e:	int    0xd7
  40a540:	sbb    eax,0xdd3b0c5
  40a545:	shl    DWORD PTR [ecx-0x2f22ff06],1
  40a54b:	les    esp,FWORD PTR [ebp-0x2afc172b]
  40a551:	or     eax,ebp
  40a553:	add    ch,dl
  40a555:	or     DWORD PTR [esi-0x5ef64912],edi
  40a55b:	rcr    BYTE PTR [edx-0x2afc1740],cl
  40a561:	or     DWORD PTR [ecx-0x4e],ebx
  40a564:	ins    DWORD PTR es:[edi],dx
  40a565:	mov    al,ds:0x9d503e8
  40a56a:	clc    
  40a56b:	daa    
  40a56c:	mov    dh,0x2c
  40a56e:	aad    0x25
  40a570:	mov    edx,0xd503e917
  40a575:	or     DWORD PTR [eax+0x7ef497e8],eax
  40a57b:	out    dx,eax
  40a57c:	add    BYTE PTR [eax],al
  40a57e:	sub    cl,bh
  40a580:	pusha  
  40a581:	cli    
  40a582:	push   0xfffffff0
  40a584:	out    dx,eax
  40a585:	ss scas al,BYTE PTR es:[edi]
  40a587:	xor    BYTE PTR [esp+edi*2],bl
  40a58a:	mov    ebp,0xb3d1136
  40a58f:	xor    bh,ah
  40a591:	xor    ah,dh
  40a593:	or     DWORD PTR ds:0xff95669c,edx
  40a599:	pop    edi
  40a59a:	lea    cx,[edx+0x9d90d]
  40a5a1:	jns    0x40a5c1
  40a5a3:	xlat   BYTE PTR ds:[ebx]
  40a5a4:	int3   
  40a5a5:	or     dl,BYTE PTR ds:[esi-0x3300cb23]
  40a5ac:	iret   
  40a5ad:	xor    DWORD PTR [edx],ebp
  40a5af:	fld    st(6)
  40a5b1:	imul   edx,ecx,0x6b2c0009
  40a5b7:	or     BYTE PTR [edi-0x7375b095],0x62
  40a5be:	adc    eax,0x457afef0
  40a5c3:	or     DWORD PTR [esi+edi*2+0x7298804b],0x51
  40a5cb:	lock (bad) 
  40a5cd:	mov    ebx,0xa7ddc599
  40a5d2:	scas   al,BYTE PTR es:[edi]
  40a5d3:	rcl    ecx,cl
  40a5d5:	cwde   
  40a5d6:	sahf   
  40a5d7:	out    dx,eax
  40a5d8:	(bad)  
  40a5d9:	pop    ebx
  40a5da:	dec    edi
  40a5db:	xchg   BYTE PTR [ebp-0x7d69aaa5],dl
  40a5e1:	jl     0x40a5e3
  40a5e3:	add    BYTE PTR [edi-0x54],bl
  40a5e6:	mov    ds:0xbba1765f,al
  40a5eb:	sbb    dh,BYTE PTR fs:[ebx-0x7b1aa5b]
  40a5f2:	xchg   esp,eax
  40a5f3:	aas    
  40a5f4:	inc    ebp
  40a5f5:	mov    ch,0xba
  40a5f7:	cmp    bh,BYTE PTR [esi]
  40a5f9:	mov    cl,0xab
  40a5fb:	jmp    0x6940afd6
  40a600:	inc    esi
  40a601:	mov    bh,BYTE PTR [edi+0x6a]
  40a604:	dec    eax
  40a605:	mov    edx,DWORD PTR [edx+0x9d6e9]
  40a60b:	cld    
  40a60c:	rol    BYTE PTR [esi],0x11
  40a60f:	jecxz  0x40a663
  40a611:	add    al,0x2
  40a613:	add    BYTE PTR [ebx+ecx*1],bh
  40a616:	add    BYTE PTR [eax],al
  40a618:	cdq    
  40a619:	out    0xfa,eax
  40a61b:	cli    
  40a61c:	sub    al,0xb
  40a61e:	add    BYTE PTR [eax],al
  40a620:	rol    ebx,cl
  40a622:	int    0xc9
  40a624:	xchg   esi,eax
  40a625:	(bad)  
  40a626:	xlat   BYTE PTR ds:[ebx]
  40a627:	add    BYTE PTR [edx-0x77575861],bl
  40a62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a62e:	mov    ch,0xab
  40a630:	sahf   
  40a631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a632:	mov    edx,0xe7f5d800
  40a637:	iret   
  40a638:	std    
  40a639:	in     eax,0xe3
  40a63b:	mov    edx,0xeedffe
  40a640:	dec    ebp
  40a641:	ins    DWORD PTR es:[edi],dx
  40a642:	je     0x40a6ab
  40a644:	ja     0x40a69f
  40a646:	dec    ecx
  40a647:	inc    eax
  40a648:	add    BYTE PTR [eax],al
  40a64a:	in     al,dx
  40a64b:	or     al,BYTE PTR [eax]
  40a64d:	add    BYTE PTR [edi-0x1c],cl
  40a650:	in     eax,0xeb
  40a652:	mov    ds:0x8df6e7e9,al
  40a657:	lahf   
  40a658:	(bad)  
  40a659:	(bad)  
  40a65a:	fnstsw WORD PTR [esi]
  40a65c:	inc    ebx
  40a65d:	push   edi
  40a65e:	fist   DWORD PTR [eax+0x5f]
  40a661:	push   esi
  40a662:	les    eax,FWORD PTR [ebx+0x0]
  40a665:	add    BYTE PTR [eax-0x76],dl
  40a668:	mov    DWORD PTR [eax-0x726682e0],ebx
  40a66e:	daa    
  40a66f:	xchg   BYTE PTR [edi-0x7a5fd35b],ah
  40a675:	cwde   
  40a676:	add    ecx,DWORD PTR [eax+0x319300ec]
  40a67c:	cs das 
  40a67e:	ins    BYTE PTR es:[edi],dx
  40a67f:	or     al,BYTE PTR [eax]
  40a681:	add    cl,cl
  40a683:	push   edi
  40a684:	inc    edi
  40a685:	push   ecx
  40a686:	jl     0x40a692
  40a688:	add    BYTE PTR [eax],al
  40a68a:	xchg   ebp,eax
  40a68b:	dec    ecx
  40a68c:	pop    ecx
  40a68d:	pop    esi
  40a68e:	aad    0xe0
  40a690:	add    al,BYTE PTR [eax]
  40a692:	aad    0xc4
  40a694:	jbe    0x40a696
  40a696:	aad    0x5e
  40a698:	sbb    BYTE PTR [esi-0x6f649aa4],0x12
  40a69f:	bound  eax,QWORD PTR [edx+0x2203d58f]
  40a6a5:	cmp    edi,esp
  40a6a7:	in     eax,0x79
  40a6a9:	xor    cl,ch
  40a6ab:	mov    esi,0x2
  40a6b0:	aad    0x3f
  40a6b2:	mov    eax,0xf94347a1
  40a6b7:	mov    ch,0x47
  40a6b9:	pop    eax
  40a6ba:	add    al,0x0
  40a6bc:	aad    0xda
  40a6be:	adc    esp,DWORD PTR [edx+0x73]
  40a6c1:	lds    ecx,FWORD PTR [edi]
  40a6c3:	popa   
  40a6c4:	sbb    DWORD PTR [edi+0x15ab3117],0xe4a93a2c
  40a6ce:	adc    ah,BYTE PTR [esi]
  40a6d0:	pusha  
  40a6d1:	push   eax
  40a6d2:	sub    dh,BYTE PTR [eax-0x1c]
  40a6d5:	add    ecx,DWORD PTR [edx]
  40a6d7:	aas    
  40a6d8:	dec    esi
  40a6d9:	jecxz  0x40a6dd
  40a6db:	add    ch,dl
  40a6dd:	xlat   BYTE PTR ds:[ebx]
  40a6de:	cli    
  40a6df:	inc    BYTE PTR [ecx-0x73526083]
  40a6e5:	pop    esp
  40a6e6:	mov    ds:0xd43f93d3,al
  40a6eb:	mov    eax,0xff909b7a
  40a6f0:	call   0xa144:0x48fdf989
  40a6f7:	scas   al,BYTE PTR es:[edi]
  40a6f8:	lea    eax,[ebp-0x5d]
  40a6fb:	hlt    
  40a6fc:	call   0x31c0:0xd587f546
  40a703:	ss lock jmp 0x40a76f
  40a707:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40a709:	or     edi,ebx
  40a70b:	imul   esp,DWORD PTR [eax-0x1ac23404],0x5b
  40a712:	or     BYTE PTR [ecx+0x0],bl
  40a715:	add    ch,dl
  40a717:	or     DWORD PTR [edx],esi
  40a719:	aad    0x7c
  40a71b:	mov    eax,ds:0xed42d079
  40a720:	cmc    
  40a721:	xor    eax,0x3e91ef8
  40a726:	aad    0x9
  40a728:	cld    
  40a729:	xor    al,0xfa
  40a72b:	ds jmp 0x8c4a7c34
  40a731:	jne    0x40a6e0
  40a733:	pop    esi
  40a734:	jmp    0x634a7c3c
  40a739:	(bad)  
  40a73a:	add    al,0xed
  40a73c:	ss retf 0xd01e
  40a740:	sub    bh,dl
  40a742:	lock shl BYTE PTR [ebx],0xc7
  40a746:	push   ss
  40a747:	leave  
  40a748:	and    eax,edx
  40a74a:	add    al,0xd8
  40a74c:	call   0xd74a7c54
  40a751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a752:	dec    eax
  40a753:	mov    dl,BYTE PTR [eax+0x240975a0]
  40a759:	adc    cl,BYTE PTR [eax]
  40a75b:	cmp    esp,ebp
  40a75d:	or     eax,0x1ae619e8
  40a762:	retf   
  40a763:	push   edx
  40a764:	jmp    0x264a7c6c
  40a769:	adc    al,0xea
  40a76b:	xor    eax,0x2fcb01fc
  40a770:	lds    ecx,FWORD PTR [ecx]
  40a772:	sar    ch,1
  40a774:	call   0xb54a7c7c
  40a779:	add    DWORD PTR [eax],0x0
  40a77c:	ds stos BYTE PTR es:[edi],al
  40a77e:	pop    eax
  40a77f:	jle    0x40a7d6
  40a781:	cwde   
  40a782:	jno    0x40a788
  40a784:	aad    0x9
  40a786:	add    BYTE PTR [edx+0x35],bh
  40a789:	(bad)  
  40a78b:	xchg   edx,eax
  40a78c:	push   ecx
  40a78d:	mov    ch,0xa2
  40a78f:	xchg   ecx,eax
  40a790:	pop    ds
  40a791:	sahf   
  40a792:	out    0x63,al
  40a794:	arpl   WORD PTR [edi-0x1678b51e],bx
  40a79a:	mov    ch,0x21
  40a79c:	pop    ds
  40a79d:	xchg   ebp,eax
  40a79e:	mov    cl,0x92
  40a7a0:	jl     0x40a74c
  40a7a2:	stos   DWORD PTR es:[edi],eax
  40a7a3:	xchg   BYTE PTR [ebx-0x6],dh
  40a7a6:	call   0xfc2efcc5
  40a7ab:	mov    eax,DWORD PTR [edi-0x79]
  40a7ae:	xor    DWORD PTR [eax+0x49],0xfe29987e
  40a7b5:	int3   
  40a7b6:	mov    DWORD PTR ds:0x4c0009d9,eax
  40a7bc:	dec    esi
  40a7be:	test   DWORD PTR [esi],0x5f0df07
  40a7c4:	inc    eax
  40a7c5:	lock icebp 
  40a7c7:	lock out 0x9f,al
  40a7ca:	mov    dh,0x3c
  40a7cc:	out    dx,eax
  40a7cd:	imul   ecx,esi,0xffffff88
  40a7d0:	neg    dl
  40a7d2:	in     eax,0xcd
  40a7d4:	pop    ds
  40a7d5:	stos   BYTE PTR es:[edi],al
  40a7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d7:	ficomp WORD PTR [ebx-0x15]
  40a7da:	(bad)  
  40a7db:	fdiv   DWORD PTR [eax+0xc0f0f7]
  40a7e1:	add    BYTE PTR [edx+eax*8-0xb84553d],dh
  40a7e8:	out    0xa3,eax
  40a7ea:	lahf   
  40a7eb:	int    0xc7
  40a7ed:	test   al,0x96
  40a7ef:	jmp    0x40a7ef
  40a7f1:	hlt    
  40a7f2:	clc    
  40a7f3:	sbb    al,0x20
  40a7f5:	fdivr  QWORD PTR [ebx-0xd1cebd5]
  40a7fb:	push   ds
  40a7fc:	and    ch,cl
  40a7fe:	(bad)  
  40a7ff:	or     DWORD PTR [eax],eax
  40a801:	add    cl,ah
  40a803:	jno    0x40a86e
  40a805:	push   0x5e7b7179
  40a80a:	outs   dx,DWORD PTR ds:[esi]
  40a80b:	jns    0x40a88a
  40a80d:	data16 data16 data16 add BYTE PTR [eax],al
  40a812:	adc    ecx,edx
  40a814:	(bad)  
  40a816:	adc    eax,0xb295c5c7
  40a81b:	fmul   st,st(4)
  40a81d:	fdivr  QWORD PTR [edx+0xad4dbf8]
  40a823:	pop    es
  40a824:	add    BYTE PTR [eax],al
  40a826:	fwait
  40a827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a828:	mov    ds:0xbbb15faf,al
  40a82d:	out    dx,eax
  40a82e:	mov    DWORD PTR [esi+0x72cafa9],esp
  40a834:	add    BYTE PTR [eax],al
  40a836:	fmul   QWORD PTR [ebp+0x6fc90c5]
  40a83c:	add    BYTE PTR [eax],al
  40a83e:	mov    ch,0xf0
  40a840:	repnz in eax,dx
  40a842:	in     al,dx
  40a843:	push   es
  40a844:	add    BYTE PTR [eax],al
  40a846:	add    BYTE PTR [eax],al
  40a848:	arpl   WORD PTR [esi+0x69],si
  40a84b:	jne    0x40a8ae
  40a84d:	es push eax
  40a84f:	ins    BYTE PTR es:[edi],dx
  40a850:	pop    edi
  40a851:	outs   dx,BYTE PTR ds:[esi]
  40a852:	add    BYTE PTR [eax],al
  40a854:	stos   DWORD PTR es:[edi],eax
  40a855:	ja     0x40a8cf
  40a857:	imul   ecx,DWORD PTR [ebx-0xb819793],0x4d
  40a85e:	jg     0x40a8d4
  40a860:	push   ds
  40a861:	je     0x40a8c4
  40a863:	jl     0x40a88b
  40a865:	outs   dx,DWORD PTR ds:[esi]
  40a866:	push   edx
  40a867:	pop    eax
  40a868:	or     eax,0xef646e4d
  40a86d:	pop    ebx
  40a86e:	es dec ebx
  40a870:	adc    eax,0xbd23675d
  40a875:	push   ecx
  40a876:	push   edi
  40a877:	push   ebx
  40a878:	lods   al,BYTE PTR ds:[esi]
  40a879:	push   es
  40a87a:	add    BYTE PTR [eax],al
  40a87c:	aad    0x17
  40a87e:	ds dec esp
  40a880:	sub    bh,BYTE PTR [eax]
  40a882:	dec    eax
  40a883:	pop    esp
  40a884:	syscall 
  40a886:	push   0x4a13154b
  40a88b:	push   ebp
  40a88c:	sbb    eax,0xf9664713
  40a891:	adc    eax,0x9c055a51
  40a896:	inc    eax
  40a897:	adc    bl,bl
  40a899:	mov    ch,0x56
  40a89b:	pop    edx
  40a89c:	aad    0x88
  40a89e:	test   al,0xa7
  40a8a0:	jo     0x40a83a
  40a8a2:	mov    eax,ds:0xb75788ba
  40a8a7:	in     al,dx
  40a8a8:	push   0xa39e80
  40a8ad:	add    BYTE PTR [eax+0x6a],bh
  40a8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b1:	mov    ah,0x7b
  40a8b3:	loopne 0x40a8b7
  40a8b5:	add    ch,dl
  40a8b7:	xchg   ebp,eax
  40a8b8:	dec    esp
  40a8b9:	push   esp
  40a8ba:	mov    BYTE PTR [ecx-0x7c27b0b6],bh
  40a8c0:	dec    edi
  40a8c1:	pop    eax
  40a8c2:	scas   al,BYTE PTR es:[edi]
  40a8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c4:	push   esi
  40a8c5:	pop    edi
  40a8c6:	aad    0xce
  40a8c8:	sub    DWORD PTR [ebx],ebp
  40a8ca:	(bad)  
  40a8cb:	mov    dl,0x2b
  40a8cd:	xor    BYTE PTR [edi-0x30],ch
  40a8d0:	es daa 
  40a8d2:	mov    cl,0xb4
  40a8d4:	pop    ds
  40a8d5:	and    BYTE PTR [edi+0x3],ah
  40a8d8:	sub    ebp,DWORD PTR [edx+esi*4]
  40a8db:	sub    DWORD PTR [ebx],esp
  40a8dd:	cs stc 
  40a8df:	add    DWORD PTR ds:0x8e8bd500,ebp
  40a8e5:	(bad)  
  40a8e6:	pop    esi
  40a8e7:	dec    eax
  40a8e8:	test   DWORD PTR [eax-0x61717562],ecx
  40a8ee:	dec    esi
  40a8ef:	sbb    DWORD PTR [edi-0x6991ba6a],0xffffff86
  40a8f6:	dec    edi
  40a8f7:	or     ch,BYTE PTR [edi-0x6a]
  40a8fa:	cmp    eax,0xe703c0a
  40a8ff:	pop    esp
  40a900:	sbb    DWORD PTR [eax+0xf],ebx
  40a903:	or     esi,DWORD PTR gs:[eax-0xc]
  40a907:	imul   ebx,DWORD PTR [esi],0xc64ff7a
  40a90d:	push   0xfffffff3
  40a90f:	imul   ecx,DWORD PTR [edx],0x61
  40a912:	add    BYTE PTR [eax],al
  40a914:	mov    ah,0x53
  40a916:	cld    
  40a917:	arpl   si,bp
  40a919:	js     0x40a8c7
  40a91b:	(bad)  
  40a91c:	neg    DWORD PTR [esi-0x44]
  40a91f:	dec    ecx
  40a920:	pushf  
  40a921:	imul   esi,eax,0xd7f9b64b
  40a927:	dec    esi
  40a928:	stos   DWORD PTR es:[edi],eax
  40a929:	dec    edx
  40a92a:	cwde   
  40a92b:	cmp    eax,0x380b0990
  40a930:	hlt    
  40a931:	or     DWORD PTR [esi-0x4e11ecc],ebp
  40a937:	inc    ecx
  40a938:	aad    0x9
  40a93a:	int    0x18
  40a93c:	mov    edx,0xdb0300fd
  40a941:	cmp    eax,0x15e20ed1
  40a946:	out    dx,eax
  40a947:	push   ss
  40a948:	int3   
  40a949:	sbb    cl,ch
  40a94b:	add    edx,ebp
  40a94d:	or     DWORD PTR [ecx-0x54],ecx
  40a950:	sub    esp,DWORD PTR [ebp+0xa4b8c69]
  40a956:	mov    ch,0x2a
  40a958:	mov    dh,0x19
  40a95a:	sbb    eax,0x1a2ea627
  40a95f:	daa    
  40a960:	fstp   DWORD PTR [eax]
  40a962:	lock or bh,ch
  40a965:	adc    al,bh
  40a967:	add    eax,0x33fb2cec
  40a96c:	call   0x76a38e
  40a971:	pop    es
  40a972:	add    dh,ah
  40a974:	ror    BYTE PTR [ecx],0x0
  40a977:	jne    0x40a979
  40a979:	add    BYTE PTR [edx],ah
  40a97b:	cwde   
  40a97c:	xor    DWORD PTR [ecx+0x40],0x7e
  40a980:	ret    
  40a981:	push   ebx
  40a982:	push   edi
  40a983:	xchg   ebp,eax
  40a984:	cdq    
  40a985:	arpl   WORD PTR [esi+eax*4-0x35],sp
  40a989:	pop    eax
  40a98a:	xchg   BYTE PTR fs:[edx+0x9d6e9],bl
  40a991:	inc    esp
  40a992:	cmp    esi,esp
  40a994:	loop   0x40a924
  40a996:	ror    DWORD PTR [ecx],1
  40a998:	add    BYTE PTR ds:0x8fb9b12e,bh
  40a99e:	mov    BYTE PTR es:[ebx-0x1165805e],ch
  40a9a5:	mov    WORD PTR [edi-0x52],?
  40a9a8:	call   FWORD PTR [ecx+edi*4-0x662c8f97]
  40a9af:	imul   esp,DWORD PTR [edx-0x37],0xffffff91
  40a9b3:	inc    eax
  40a9b4:	dec    esp
  40a9b5:	enter  0x65b5,0x66
  40a9b9:	clc    
  40a9ba:	xchg   esi,eax
  40a9bb:	push   0x6ea19573
  40a9c0:	add    BYTE PTR [ebx-0x44ff8b7a],bh
  40a9c6:	mov    ecx,0xcde15539
  40a9cb:	adc    eax,DWORD PTR [eax]
  40a9cd:	inc    esp
  40a9ce:	pop    ebp
  40a9cf:	xchg   edx,eax
  40a9d0:	mov    fs,WORD PTR [ecx+ebx*8+0x9]
  40a9d4:	add    ah,ch
  40a9d6:	mov    eax,0xa8b13827
  40a9db:	sub    DWORD PTR [ebp-0x6],edi
  40a9de:	add    BYTE PTR [eax],al
  40a9e0:	popf   
  40a9e1:	xor    eax,0x21080d3c
  40a9e6:	sub    DWORD PTR [ebx-0x21],ecx
  40a9e9:	and    DWORD PTR [ecx],esi
  40a9eb:	add    esp,ecx
  40a9ed:	pop    ds
  40a9ee:	and    BYTE PTR [eax],al
  40a9f0:	aam    0x6f
  40a9f2:	push   0x272ddd2a
  40a9f7:	and    al,0x8b
  40a9f9:	or     ecx,DWORD PTR [edx+0x7b]
  40a9fc:	mov    edi,0xc2000031
  40aa01:	xor    al,0x74
  40aa03:	ins    DWORD PTR es:[edi],dx
  40aa04:	mov    al,0x4f
  40aa06:	add    BYTE PTR [eax],al
  40aa08:	popf   
  40aa09:	jne    0x40aa53
  40aa0b:	pop    esp
  40aa0c:	mov    ebx,0xdc090d01
  40aa11:	add    eax,0x26c10000
  40aa16:	dec    esi
  40aa17:	inc    esi
  40aa18:	jl     0x40aa25
  40aa1a:	add    BYTE PTR [eax],al
  40aa1c:	int3   
  40aa1d:	jno    0x40aa82
  40aa1f:	fs ins BYTE PTR es:[edi],dx
  40aa21:	or     eax,DWORD PTR [eax]
  40aa23:	add    BYTE PTR [ebx+ecx*1],bh
  40aa26:	add    BYTE PTR [eax],al
  40aa28:	leave  
  40aa29:	and    BYTE PTR [eax-0x4f52964f],0xa4
  40aa30:	sahf   
  40aa31:	mov    WORD PTR [ebx-0x4650ab52],fs
  40aa37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa38:	lods   al,BYTE PTR ds:[esi]
  40aa39:	scas   eax,DWORD PTR es:[edi]
  40aa3a:	xchg   BYTE PTR [edx-0x414d6659],al
  40aa40:	test   DWORD PTR [esi+0x9e7e],eax
  40aa46:	mov    ds:0x74bca885,eax
  40aa4b:	jg     0x40a9fd
  40aa4d:	cmp    BYTE PTR [edx+edi*2-0x79],0x8e
  40aa52:	ins    BYTE PTR es:[edi],dx
  40aa53:	lahf   
  40aa54:	mov    ds:0x98889283,eax
  40aa59:	xchg   DWORD PTR [edi-0x74592d71],ecx
  40aa5f:	xchg   ebx,eax
  40aa60:	sbb    BYTE PTR [eax-0x5e726aa4],0x5c
  40aa67:	adc    DWORD PTR [esp+ebx*4-0x5f333a2b],0x2f0c5
  40aa72:	aad    0xe3
  40aa74:	or     eax,0x38eac717
  40aa79:	sbb    ebp,ecx
  40aa7b:	ret    
  40aa7c:	adc    bl,BYTE PTR [edi]
  40aa7e:	int    0xf0
  40aa80:	add    al,BYTE PTR [eax]
  40aa82:	aad    0x1b
  40aa84:	jp     0x40ab02
  40aa86:	add    bh,ah
  40aa88:	outs   dx,DWORD PTR ds:[esi]
  40aa89:	ins    BYTE PTR es:[edi],dx
  40aa8a:	cvtps2pi mm2,QWORD PTR [eax+0x7b]
  40aa8e:	add    eax,0xfd656e0f
  40aa93:	(bad)  
  40aa94:	outs   dx,BYTE PTR ds:[esi]
  40aa95:	push   esi
  40aa96:	pop    ss
  40aa97:	adc    ebp,DWORD PTR [ebx+0x6b]
  40aa9a:	call   0xb6b712ad
  40aa9f:	xor    DWORD PTR [edi+0x76],ebp
  40aaa2:	out    dx,al
  40aaa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaa4:	cmp    ebx,DWORD PTR [edi-0x64]
  40aaa7:	rcr    BYTE PTR [ebp+0x4c],1
  40aaaa:	add    BYTE PTR [eax],al
  40aaac:	mov    ds:0x8f5152b6,eax
  40aab1:	lock add al,BYTE PTR [eax]
  40aab4:	aad    0xfb
  40aab6:	add    cl,BYTE PTR ds:0xc00eee2
  40aabc:	jmp    0x14d8:0xd500027e
  40aac3:	push   ds
  40aac4:	mov    ecx,0xd51f0de5
  40aac9:	jmp    0x40aad3
  40aacb:	or     al,0xea
  40aacd:	(bad)  
  40aacf:	sbb    ecx,edi
  40aad1:	aam    0x1e
  40aad3:	or     edx,ebp
  40aad5:	(bad)  
  40aad6:	cld    
  40aad7:	adc    al,0xdd
  40aad9:	(bad)  
  40aada:	std    
  40aadb:	and    eax,0x1af9c2a7
  40aae0:	rcl    dh,1
  40aae2:	push   ss
  40aae3:	push   es
  40aae4:	xchg   BYTE PTR [ecx],cl
  40aae6:	sbb    bh,bh
  40aae8:	fadd   DWORD PTR [eax]
  40aaea:	push   es
  40aaeb:	sub    eax,0xef922fa
  40aaf0:	sti    
  40aaf1:	sub    ebx,DWORD PTR [edx]
  40aaf3:	sbb    ebp,esi
  40aaf5:	or     al,BYTE PTR ss:0x300d3102
  40aafc:	std    
  40aafd:	or     DWORD PTR [ebx-0x51],edx
  40ab00:	ins    BYTE PTR es:[edi],dx
  40ab01:	mov    ds:0xb53bdf6f,al
  40ab06:	dec    esi
  40ab07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab08:	xchg   edx,eax
  40ab09:	in     eax,0x10
  40ab0b:	push   edi
  40ab0c:	sub    dl,BYTE PTR [esi+0x21]
  40ab0f:	push   ecx
  40ab10:	add    BYTE PTR [eax],al
  40ab12:	adc    al,BYTE PTR [ebx-0x2]
  40ab15:	jo     0x40ab34
  40ab17:	cmp    DWORD PTR [ebx+ecx*2],ebp
  40ab1a:	sbb    eax,DWORD PTR [ecx+0x2c]
  40ab1d:	push   edx
  40ab1e:	loopne 0x40ab8a
  40ab20:	sub    BYTE PTR [esi+0xd],cl
  40ab23:	inc    esp
  40ab24:	sbb    al,0x49
  40ab26:	add    BYTE PTR [edx],cl
  40ab28:	retf   
  40ab29:	push   ecx
  40ab2a:	test   al,0x51
  40ab2c:	aad    0x5b
  40ab2e:	leave  
  40ab2f:	outs   dx,DWORD PTR ds:[esi]
  40ab30:	stos   BYTE PTR es:[edi],al
  40ab31:	push   esp
  40ab32:	rcr    DWORD PTR [esi-0x34],0x3
  40ab36:	aad    0x9
  40ab38:	jnp    0x40aaf0
  40ab3a:	push   edx
  40ab3b:	pushf  
  40ab3c:	pop    esp
  40ab3d:	mov    ch,0x67
  40ab3f:	scas   eax,DWORD PTR es:[edi]
  40ab40:	jg     0x40ab2b
  40ab42:	xor    esi,DWORD PTR [edi+ebp*2+0x5aa158a6]
  40ab49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab4a:	shrd   DWORD PTR [ebp-0x4c],eax,cl
  40ab4e:	aaa    
  40ab4f:	scas   al,BYTE PTR es:[edi]
  40ab50:	inc    edx
  40ab51:	mov    eax,ds:0xb8549e07
  40ab56:	ds mov dl,0x6e
  40ab59:	xor    BYTE PTR [edx-0x35],0x2d
  40ab5d:	lds    edx,FWORD PTR [edi]
  40ab5f:	iret   
  40ab60:	call   DWORD PTR [edx+eiz*1-0x37]
  40ab64:	(bad)  
  40ab65:	pop    es
  40ab66:	test   BYTE PTR [eax-0x4da28466],0x83
  40ab6d:	push   0xb4d77b62
  40ab72:	gs xchg ebx,eax
  40ab74:	xchg   edx,eax
  40ab75:	pop    ebp
  40ab76:	add    BYTE PTR [eax],al
  40ab78:	cmp    BYTE PTR [ecx-0x26536f77],al
  40ab7e:	in     al,0xb8
  40ab80:	mov    ds:0xb388efd8,eax
  40ab85:	lock jmp 0x424f:0xa7ad39bf
  40ab8d:	mov    dh,0x98
  40ab8f:	adc    cl,0x9
  40ab92:	add    BYTE PTR [ebx-0x520a3b84],bl
  40ab98:	xchg   edi,edx
  40ab9a:	in     al,0x90
  40ab9c:	cmp    esi,DWORD PTR [ebx-0x1984701f]
  40aba2:	out    0x8c,al
  40aba4:	fs lahf 
  40aba6:	imul   BYTE PTR [ebp+0x64]
  40aba9:	loop   0x40aba3
  40abab:	arpl   WORD PTR [ecx+0x4055f2e6],cx
  40abb1:	hlt    
  40abb2:	cld    
  40abb3:	dec    esp
  40abb4:	push   ss
  40abb5:	aad    0xc4
  40abb7:	xor    al,0x7e
  40abb9:	(bad)  
  40abba:	shl    DWORD PTR [edi+edx*2-0x6b],1
  40abbe:	fwait
  40abbf:	imul   eax,DWORD PTR [eax-0x58],0xffffffa1
  40abc3:	sub    ecx,DWORD PTR [esp+edx*8]
  40abc6:	lds    edi,FWORD PTR ds:0x40d4c717
  40abcc:	imul   eax,DWORD PTR [ebx-0x2cd9cf35],0xffffffd8
  40abd3:	dec    ebp
  40abd4:	xor    ch,bh
  40abd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abd7:	xor    al,BYTE PTR ds:[ecx+esi*4+0x7c000000]
  40abdf:	lods   eax,DWORD PTR ds:[esi]
  40abe0:	pushf  
  40abe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe2:	stos   BYTE PTR es:[edi],al
  40abe3:	mov    bl,0xab
  40abe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe6:	mov    WORD PTR [ebp-0x65574807],?
  40abec:	mov    eax,0xfdaa76b9
  40abf1:	lock mov bh,0xb3
  40abf4:	mov    dh,0xb4
  40abf6:	inc    eax
  40abf7:	mov    dl,cl
  40abf9:	fistp  QWORD PTR [edx-0x41]
  40abfc:	xchg   edx,eax
  40abfd:	xchg   ebx,eax
  40abfe:	es xchg ebx,eax
  40ac00:	mov    al,0x9c
  40ac02:	xor    eax,0x41c08e64
  40ac07:	xchg   edx,eax
  40ac08:	mov    ss,WORD PTR [edi-0x7b6978ce]
  40ac0e:	add    dh,BYTE PTR [edi+0x7b059d88]
  40ac14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac15:	mov    ds,edx
  40ac17:	data16 jb 0x40ac87
  40ac1a:	jns    0x40ac8e
  40ac1c:	pop    esi
  40ac1d:	ins    DWORD PTR es:[edi],dx
  40ac1e:	loop   0x40ac7b
  40ac20:	push   0x292d8568
  40ac25:	outs   dx,BYTE PTR ds:[esi]
  40ac26:	bound  esi,QWORD PTR [ecx+0x66]
  40ac29:	jno    0x40ac51
  40ac2b:	push   es
  40ac2c:	sbb    al,0x1a
  40ac2e:	es push 0x78
  40ac31:	outs   dx,BYTE PTR ds:[esi]
  40ac32:	jo     0x40ac75
  40ac34:	imul   edi,DWORD PTR [ebp+0x6d],0xffffffe5
  40ac38:	add    eax,0x544e7257
  40ac3d:	push   edx
  40ac3e:	adc    BYTE PTR [ecx+0x54],0x2
  40ac42:	add    BYTE PTR [eax],al
  40ac44:	dec    eax
  40ac45:	and    BYTE PTR [ebx+0x46],bl
  40ac48:	adc    al,0x47
  40ac4a:	pop    esp
  40ac4b:	push   ecx
  40ac4c:	jo     0x40ac9e
  40ac4e:	pop    edi
  40ac4f:	push   edi
  40ac50:	pop    esp
  40ac51:	cmp    BYTE PTR [esp+eax*2+0x4a],dl
  40ac55:	push   ebp
  40ac56:	pop    ss
  40ac57:	dec    ebx
  40ac58:	aad    0xcb
  40ac5a:	sbb    esi,DWORD PTR [edx]
  40ac5c:	fisub  WORD PTR [esi+ebx*1+0x607db822]
  40ac63:	ins    DWORD PTR es:[edi],dx
  40ac64:	mov    edi,0xb03a24b6
  40ac69:	pop    edx
  40ac6a:	pusha  
  40ac6b:	pop    eax
  40ac6c:	jnp    0x40ac38
  40ac6e:	and    esi,DWORD PTR [edi+esi*8]
  40ac71:	lock sbb al,0x2f
  40ac74:	or     al,0x6
  40ac76:	jb     0x40acf3
  40ac78:	out    dx,al
  40ac79:	out    dx,al
  40ac7a:	add    eax,0x14e6e310
  40ac7f:	sbb    BYTE PTR [ebx],ah
  40ac81:	jmp    0xdd17cb81
  40ac86:	or     DWORD PTR [edi+ecx*8],ebx
  40ac89:	mov    dh,0xb
  40ac8b:	add    esi,ebp
  40ac8d:	mov    dh,0xe
  40ac8f:	add    ch,al
  40ac91:	or     al,0xf9
  40ac93:	push   cs
  40ac94:	in     al,dx
  40ac95:	dec    ecx
  40ac96:	push   esi
  40ac97:	pop    ecx
  40ac98:	jecxz  0x40ac2c
  40ac9a:	fprem1 
  40ac9c:	je     0x40ace4
  40ac9e:	stos   DWORD PTR es:[edi],eax
  40ac9f:	mov    ebx,DWORD PTR [edi-0x7a]
  40aca2:	out    dx,al
  40aca3:	out    0x6b,eax
  40aca5:	jl     0x40ac90
  40aca7:	cli    
  40aca8:	add    BYTE PTR [eax],al
  40acaa:	jo     0x40ad0d
  40acac:	scas   al,BYTE PTR es:[edi]
  40acad:	mov    dh,0x72
  40acaf:	pop    edx
  40acb0:	repz jecxz 0x40acea
  40acb3:	inc    edx
  40acb4:	(bad)  
  40acb6:	xchg   DWORD PTR [ecx+ebp*8-0x16],edx
  40acba:	dec    ebx
  40acbb:	cmp    bh,dl
  40acbd:	iret   
  40acbe:	adc    eax,DWORD PTR [edx]
  40acc0:	mov    ecx,0xc43232d4
  40acc5:	fstp   QWORD PTR [eax+ebx*1]
  40acc8:	int    0xda
  40acca:	adc    BYTE PTR [ecx],bh
  40accc:	(bad)  
  40accd:	fdiv   st(6),st
  40accf:	sub    ebx,edi
  40acd1:	fnsave [ebx]
  40acd3:	or     DWORD PTR [ebp-0x37],eax
  40acd6:	imul   edi,DWORD PTR [ecx-0x7f],0xffffffd0
  40acda:	sub    bh,BYTE PTR [ebp-0x1e115ea4]
  40ace0:	push   ds
  40ace1:	mov    esp,0x72a7e1f2
  40ace6:	jb     0x40ad47
  40ace8:	jmp    0x4c4a81f0
  40aced:	mov    ds,WORD PTR [esi]
  40acef:	(bad)  
  40acf0:	fs jl  0x40ad63
  40acf3:	mov    WORD PTR [edx-0x7d],?
  40acf6:	retf   0x7ee1
  40acf9:	scas   al,BYTE PTR es:[edi]
  40acfa:	ja     0x40acb1
  40acfc:	mov    DWORD PTR [ecx+ebp*2-0x2afc6612],esp
  40ad03:	or     DWORD PTR [ecx-0x5c306e38],esp
  40ad09:	ret    0xbe8f
  40ad0c:	mov    bx,0x0
  40ad10:	mov    ss,esp
  40ad12:	call   0xb34a821a
  40ad17:	mov    esi,0xd373d0a2
  40ad1c:	mov    WORD PTR [edx],cs
  40ad1e:	repz sub ch,BYTE PTR [edx-0x5ad231e2]
  40ad25:	or     eax,0x22ba34e0
  40ad2a:	mov    esp,0xab09b436
  40ad2f:	(bad)  
  40ad30:	jb     0x40acd3
  40ad32:	ja     0x40ad0d
  40ad34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad36:	call   0x524a823e
  40ad3b:	cmc    
  40ad3c:	dec    ecx
  40ad3d:	fisub  DWORD PTR [eax-0x80]
  40ad40:	or     dl,BYTE PTR [esi+ebx*2+0x65845dcc]
  40ad47:	lea    ebx,[ecx-0x13]
  40ad4a:	inc    eax
  40ad4b:	lods   al,BYTE PTR ds:[esi]
  40ad4c:	pop    edi
  40ad4d:	or     al,BYTE PTR [eax]
  40ad4f:	pop    ecx
  40ad50:	call   0xbbaa:0x3c77fc8f
  40ad57:	dec    ebp
  40ad58:	(bad)  
  40ad59:	or     DWORD PTR [eax],eax
  40ad5b:	xor    eax,0xcbfc229
  40ad60:	add    edi,DWORD PTR [edx-0xc060115]
  40ad66:	cli    
  40ad67:	cs (bad) 
  40ad69:	fsubrp st(1),st
  40ad6b:	add    ch,ch
  40ad6d:	loopne 0x40ad6d
  40ad6f:	js     0x40add5
  40ad71:	pop    ebp
  40ad72:	gs test eax,0x6c260000
  40ad78:	push   esp
  40ad79:	inc    edx
  40ad7a:	push   ss
  40ad7b:	inc    ebx
  40ad7c:	add    BYTE PTR [esi+0x55],ah
  40ad7f:	xchg   edx,eax
  40ad80:	xchg   BYTE PTR [edi+0x7ca17c77],bl
  40ad86:	push   0x68b2ffaf
  40ad8b:	(bad)  
  40ad8c:	ffree  st(2)
  40ad8e:	cmp    BYTE PTR [edx-0x49584905],0xfd
  40ad95:	lds    ebx,FWORD PTR [edi+0x7e8deff0]
  40ad9b:	jmp    0xa1a449c
  40ada0:	add    BYTE PTR [ebx],bh
  40ada2:	mov    esi,0xc6e5494d
  40ada7:	cld    
  40ada8:	inc    ebx
  40adaa:	mov    dh,0x2c
  40adac:	es retf 
  40adae:	add    BYTE PTR [esi+0x7d],bl
  40adb1:	jmp    0xc740b78c
  40adb6:	add    esp,DWORD PTR [edx]
  40adb8:	cmp    eax,0x584798ac
  40adbd:	jmp    0x9b40b798
  40adc2:	push   esi
  40adc3:	test   DWORD PTR [edi-0x727baa8f],edx
  40adc9:	add    BYTE PTR [esi+0x7d978f63],dh
  40adcf:	add    eax,0x61a60000
  40add4:	mov    ecx,DWORD PTR [esi+0x9b5da2]
  40adda:	add    BYTE PTR [eax],al
  40addc:	stos   BYTE PTR es:[edi],al
  40addd:	jne    0x40ad6c
  40addf:	mov    esp,ebp
  40ade1:	or     eax,DWORD PTR [eax]
  40ade3:	add    dl,ch
  40ade5:	(bad)  
  40ade6:	sub    BYTE PTR [edx],dh
  40ade8:	sbb    BYTE PTR [edx],al
  40adea:	aaa    
  40adeb:	outs   dx,DWORD PTR ds:[esi]
  40adec:	cmc    
  40aded:	sbb    BYTE PTR [edi],bh
  40adef:	sub    ebp,esp
  40adf1:	or     eax,DWORD PTR [eax]
  40adf3:	add    BYTE PTR [ebx],bl
  40adf5:	push   cs
  40adf6:	sbb    BYTE PTR [ebx],al
  40adf8:	test   eax,0xec5e0614
  40adfd:	or     eax,0xf6b01810
  40ae02:	(bad)  
  40ae03:	call   FWORD PTR [ebp+ebp*8-0x275f011e]
  40ae0a:	out    dx,eax
  40ae0b:	add    BYTE PTR [ecx],bh
  40ae0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae0e:	mov    al,0xbc
  40ae10:	pop    edx
  40ae11:	xchg   ebp,eax
  40ae12:	mov    al,0xa4
  40ae14:	pop    eax
  40ae15:	xchg   edx,eax
  40ae16:	mov    bl,0xb9
  40ae18:	push   cs
  40ae19:	mov    bl,0xb4
  40ae1b:	mov    al,0x1a
  40ae1d:	or     eax,DWORD PTR [eax]
  40ae1f:	add    cl,bl
  40ae21:	push   ds
  40ae22:	add    esp,DWORD PTR [edx-0x55]
  40ae25:	and    BYTE PTR [ebx+0x4d],al
  40ae28:	rol    DWORD PTR [ebp+0x42],1
  40ae2b:	or     ch,BYTE PTR [edi+0x23]
  40ae2e:	dec    esp
  40ae2f:	inc    eax
  40ae30:	mov    ch,0x5
  40ae32:	add    BYTE PTR [eax],al
  40ae34:	mov    dl,0x65
  40ae36:	sub    BYTE PTR [ecx+0x50],cl
  40ae39:	imul   ebp,DWORD PTR [eax+0x66],0x2169401a
  40ae40:	add    BYTE PTR [eax],al
  40ae42:	adc    al,0x68
  40ae44:	addr16 imul edx,ebp,0xffffffc2
  40ae48:	push   ss
  40ae49:	sbb    bl,dl
  40ae4b:	lock add al,BYTE PTR [eax]
  40ae4e:	aad    0xe9
  40ae50:	sti    
  40ae51:	jmp    DWORD PTR [edx]
  40ae53:	into   
  40ae54:	addr16 add edx,esp
  40ae57:	fild   WORD PTR [edx]
  40ae59:	add    ch,dl
  40ae5b:	dec    edx
  40ae5c:	loope  0x40ae41
  40ae5e:	sti    
  40ae5f:	add    ebx,edx
  40ae61:	lock add cl,dh
  40ae64:	add    al,BYTE PTR [eax]
  40ae66:	aad    0x13
  40ae68:	ret    
  40ae69:	ret    0x1719
  40ae6c:	(bad)  
  40ae6d:	mov    ch,dh
  40ae6f:	sub    al,0xbb
  40ae71:	(bad)  
  40ae72:	adc    BYTE PTR [eax],ch
  40ae74:	(bad)  
  40ae75:	retf   0x87d5
  40ae78:	ss dec edi
  40ae7a:	sbb    eax,0x3905497b
  40ae7f:	sbb    DWORD PTR [eax+0x4b],eax
  40ae82:	adc    al,0x1c
  40ae84:	aaa    
  40ae85:	inc    edi
  40ae86:	(bad)  
  40ae88:	push   eax
  40ae89:	pop    eax
  40ae8a:	or     eax,0x18513915
  40ae8f:	sbb    BYTE PTR [esi],ch
  40ae91:	ds aad 0x47
  40ae94:	pop    edi
  40ae95:	arpl   WORD PTR [esi],bx
  40ae97:	push   ebx
  40ae98:	addr16 pusha 
  40ae9a:	adc    ah,BYTE PTR [eax]
  40ae9c:	pop    edi
  40ae9d:	jns    0x40ae5c
  40ae9f:	lock add al,BYTE PTR [eax]
  40aea2:	aad    0xbd
  40aea4:	and    ah,BYTE PTR [ebx]
  40aea6:	add    BYTE PTR [eax],al
  40aea8:	mov    bl,0x21
  40aeaa:	adc    eax,DWORD PTR [esi]
  40aeac:	fcmovnbe st,st(5)
  40aeae:	or     DWORD PTR [ecx],edx
  40aeb0:	ffreep st(0)
  40aeb2:	or     ebx,DWORD PTR [edx]
  40aeb4:	shr    esp,cl
  40aeb6:	sti    
  40aeb7:	or     BYTE PTR [ebx],dl
  40aeb9:	sub    bh,bh
  40aebb:	or     al,0xd4
  40aebd:	repnz cli 
  40aebf:	or     edi,ebx
  40aec1:	or     DWORD PTR [ecx-0x18b171ab],ebp
  40aec7:	dec    ecx
  40aec8:	aad    0x9
  40aeca:	jns    0x40af43
  40aecc:	pusha  
  40aecd:	xchg   edx,eax
  40aece:	dec    esp
  40aecf:	test   al,0x7f
  40aed1:	mov    dl,0x80
  40aed3:	mov    al,0x5e
  40aed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aed6:	jnp    0x40ae8a
  40aed8:	arpl   WORD PTR [edx-0x27c95d79],bp
  40aede:	cmp    al,0xac
  40aee0:	dec    ecx
  40aee1:	mov    bl,0x5a
  40aee3:	cdq    
  40aee4:	aaa    
  40aee5:	scas   eax,DWORD PTR es:[edi]
  40aee6:	inc    edi
  40aee7:	in     al,dx
  40aee8:	imul   dl
  40aeea:	popa   
  40aeeb:	int    0x8
  40aeed:	ret    0x885c
  40aef0:	pop    ecx
  40aef1:	lea    ebp,[ebp-0x76]
  40aef4:	bound  esi,QWORD PTR [esi+0x2f]
  40aef7:	rol    DWORD PTR [edi],1
  40aef9:	test   DWORD PTR [edx],esp
  40aefb:	in     eax,0xd2
  40aefd:	frstor [edi]
  40aeff:	shl    DWORD PTR [ebp+ecx*8-0x46643e4d],cl
  40af06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af07:	rcl    DWORD PTR [esi+0x83bc86],0x0
  40af0e:	(bad)  
  40af0f:	ret    0x87a5
  40af12:	xchg   BYTE PTR [esi-0x37c03452],bh
  40af18:	mov    dl,0xce
  40af1a:	jnp    0x40aed3
  40af1c:	xchg   ebp,eax
  40af1d:	aad    0xac
  40af1f:	rol    ah,0x3
  40af22:	aad    0x9
  40af24:	popa   
  40af25:	mov    bh,0x62
  40af27:	stos   BYTE PTR es:[edi],al
  40af28:	call   0xc94a8430
  40af2d:	add    al,0xd5
  40af2f:	add    al,0xf4
  40af31:	adc    ebx,DWORD PTR [edi]
  40af33:	sub    esi,ebp
  40af35:	cld    
  40af36:	(bad)  
  40af37:	or     esp,ebp
  40af39:	add    eax,0x180035cd
  40af3e:	in     al,0x12
  40af40:	sbb    esp,esp
  40af42:	sahf   
  40af43:	xor    al,0x12
  40af45:	add    eax,0xf01af4cf
  40af4a:	iret   
  40af4b:	push   edi
  40af4c:	je     0x40af37
  40af4e:	(bad)  
  40af4f:	or     DWORD PTR [eax],eax
  40af51:	int    0x87
  40af53:	cmp    BYTE PTR [eax-0x59],cl
  40af56:	xchg   edx,eax
  40af57:	dec    esi
  40af58:	adc    eax,0x5146ddca
  40af5d:	loopne 0x40af47
  40af5f:	cmc    
  40af60:	inc    edx
  40af61:	or     esi,DWORD PTR [ebp-0x8ecfff7]
  40af67:	xchg   edx,eax
  40af68:	test   BYTE PTR [eax-0x7e],ch
  40af6b:	add    DWORD PTR [edi-0x122f091],0xffffff84
  40af72:	add    BYTE PTR [eax],al
  40af74:	(bad)  [eax]
  40af76:	pop    es
  40af77:	in     al,dx
  40af78:	jecxz  0x40af78
  40af7a:	add    eax,0x9d68c
  40af7f:	popa   
  40af80:	mov    ah,0xed
  40af82:	lock sti 
  40af84:	mov    ebp,0xe258ff8e
  40af89:	push   edi
  40af8a:	and    eax,0x3413d742
  40af8f:	adc    ebx,ecx
  40af91:	pop    ds
  40af92:	sub    al,0x4a
  40af94:	cmp    DWORD PTR [ecx+ecx*1+0x36],ebx
  40af98:	enter  0x2315,0xfa
  40af9c:	xor    BYTE PTR ss:[esp+esi*8],ch
  40afa0:	shl    DWORD PTR [eax],0x74
  40afa3:	inc    eax
  40afa4:	sub    al,0x22
  40afa6:	inc    eax
  40afa7:	cmp    DWORD PTR [edx-0x2534c6dd],eax
  40afad:	cmp    BYTE PTR [esi],dl
  40afaf:	cmc    
  40afb0:	outs   dx,BYTE PTR ds:[esi]
  40afb1:	inc    BYTE PTR [ebx+0x1a]
  40afb4:	out    0x3b,eax
  40afb6:	sub    DWORD PTR [eax],eax
  40afb8:	ins    BYTE PTR es:[edi],dx
  40afb9:	or     BYTE PTR [eax],al
  40afbb:	add    BYTE PTR [edx],ah
  40afbd:	xor    BYTE PTR [edx],bh
  40afbf:	cmp    dl,BYTE PTR [esi]
  40afc1:	and    edi,DWORD PTR [esi]
  40afc3:	and    eax,0x888
  40afc8:	(bad)  
  40afc9:	jp     0x40af52
  40afcb:	retf   
  40afcc:	sub    al,0x8
  40afce:	add    BYTE PTR [eax],al
  40afd0:	test   al,0x54
  40afd2:	xchg   DWORD PTR [eax],eax
  40afd4:	push   ebx
  40afd5:	aad    0xb8
  40afd7:	scas   al,BYTE PTR es:[edi]
  40afd8:	add    BYTE PTR [eax],al
  40afda:	inc    ebp
  40afdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afdc:	cmc    
  40afdd:	mov    edi,0xacc6ed4b
  40afe2:	leave  
  40afe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afe4:	(bad)  
  40afe5:	dec    DWORD PTR [edx-0x6927585d]
  40afeb:	pusha  
  40afec:	(bad)  
  40afed:	jmp    DWORD PTR [esi+eiz*2+0x6e]
  40aff1:	pop    ds
  40aff2:	jmp    0xa240b00a
  40aff7:	mov    al,ds:0x796ccdc6
  40affc:	xchg   ebp,eax
  40affd:	pushf  
  40affe:	mov    cl,0x8d
  40b000:	(bad)  
  40b001:	dec    esi
  40b003:	iret   
  40b004:	(bad)  
  40b005:	aam    0xec
  40b007:	shr    ebp,1
  40b009:	xchg   edi,eax
  40b00a:	dec    ecx
  40b00b:	pop    ebx
  40b00c:	out    0x9b,al
  40b00e:	inc    ebp
  40b00f:	xchg   ecx,esp
  40b011:	lahf   
  40b012:	xor    DWORD PTR [ebx-0x1b6dff03],eax
  40b018:	out    dx,eax
  40b019:	add    bl,ah
  40b01b:	aas    
  40b01c:	gs ins BYTE PTR es:[edi],dx
  40b01e:	fild   WORD PTR ds:0x5a70000
  40b024:	push   ss
  40b025:	add    ch,BYTE PTR [ecx+0x29000013]
  40b02b:	scas   al,BYTE PTR es:[edi]
  40b02c:	mov    al,0xf3
  40b02e:	push   cs
  40b02f:	jg     0x40afed
  40b031:	mov    bh,0xd5
  40b033:	js     0x40b037
  40b035:	add    ch,dl
  40b037:	pop    ds
  40b038:	push   edx
  40b039:	push   esi
  40b03a:	sbb    ebp,DWORD PTR [edx]
  40b03c:	inc    ecx
  40b03d:	sub    al,0x0
  40b03f:	add    BYTE PTR [edx-0x5defc763],ah
  40b045:	add    ch,BYTE PTR [eax+0x6d]
  40b048:	ret    0x2396
  40b04b:	daa    
  40b04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04d:	lock add al,BYTE PTR [eax]
  40b050:	aad    0x61
  40b052:	mov    ebp,0x7930478a
  40b057:	xchg   ecx,eax
  40b058:	push   ss
  40b059:	cs mov esp,0x813c57d5
  40b05f:	call   FWORD PTR [edx]
  40b061:	mov    dl,0x41
  40b063:	jg     0x40b001
  40b065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b066:	add    al,BYTE PTR [eax]
  40b068:	aad    0xa6
  40b06a:	cmp    dh,BYTE PTR [ebx+0x73]
  40b06d:	mov    WORD PTR [edx],es
  40b06f:	add    ch,dl
  40b071:	sbb    edi,ecx
  40b073:	(bad)  
  40b074:	pop    es
  40b075:	sbb    eax,DWORD PTR [ebp+0x7e705c87]
  40b07b:	int    0xd
  40b07d:	adc    esi,edx
  40b07f:	leave  
  40b080:	or     edi,edi
  40b082:	or     DWORD PTR [ecx-0x2e7593a7],0xffffffa1
  40b089:	idiv   BYTE PTR [ebx-0x7f]
  40b08c:	push   ecx
  40b08d:	push   esp
  40b08e:	xchg   edx,eax
  40b08f:	fisttp QWORD PTR [eax-0x7a42663f]
  40b095:	rcr    dl,1
  40b097:	out    0xa7,eax
  40b099:	pushf  
  40b09a:	mov    edi,0xe1ceb0e3
  40b09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0a0:	aad    0x32
  40b0a2:	nop
  40b0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a4:	add    BYTE PTR [eax],al
  40b0a6:	jae    0x40b0de
  40b0a8:	add    al,0x0
  40b0aa:	aad    0x3e
  40b0ac:	jne    0x40b039
  40b0ae:	dec    esp
  40b0af:	or     DWORD PTR [edi+edi*4-0x59],esi
  40b0b3:	mov    bh,0x67
  40b0b5:	mov    es,WORD PTR [edi-0x7b]
  40b0b8:	ins    BYTE PTR es:[edi],dx
  40b0b9:	xchg   edx,eax
  40b0ba:	dec    esp
  40b0bb:	mov    BYTE PTR [eax-0x6e],dh
  40b0be:	dec    edi
  40b0bf:	and    DWORD PTR [ebp+eax*4-0x6c],0xffffffc2
  40b0c4:	stos   DWORD PTR es:[edi],eax
  40b0c5:	mov    ds:0x82667469,al
  40b0ca:	pop    esp
  40b0cb:	js     0x40b106
  40b0cd:	lods   al,BYTE PTR ds:[esi]
  40b0ce:	jge    0x40b07c
  40b0d0:	popf   
  40b0d1:	mov    ah,0x84
  40b0d3:	xlat   BYTE PTR ds:[ebx]
  40b0d4:	nop
  40b0d5:	mov    bl,0x68
  40b0d7:	fist   DWORD PTR [ebp-0x65668555]
  40b0dd:	lock xor al,0xac
  40b0e0:	xchg   DWORD PTR [edx+0x7a8ca569],esp
  40b0e6:	fld    QWORD PTR ss:[esp+eax*1-0x2b]
  40b0eb:	or     esp,ebx
  40b0ed:	add    edx,ebp
  40b0ef:	or     DWORD PTR [esi-0x16d65ec2],ebp
  40b0f5:	add    edx,ebp
  40b0f7:	or     DWORD PTR [ecx-0x36ca79cc],edi
  40b0fd:	add    edx,ebp
  40b0ff:	or     DWORD PTR ds:0x400994d7,ecx
  40b105:	in     al,dx
  40b106:	adc    al,0xa
  40b108:	pushf  
  40b109:	js     0x40b10b
  40b10b:	add    BYTE PTR [esi+0x500bfc8d],bh
  40b111:	dec    edi
  40b112:	rcl    DWORD PTR [ebx-0x46],1
  40b115:	jmp    eax
  40b117:	adc    DWORD PTR ds:0xad3e640a,edx
  40b11d:	cmp    bl,BYTE PTR [esi+edi*1-0x53]
  40b121:	cmp    al,dh
  40b123:	push   cs
  40b124:	mov    eax,ds:0x600428fc
  40b129:	dec    edi
  40b12a:	add    BYTE PTR [ecx-0x16fff452],dh
  40b130:	(bad)  
  40b131:	ret    0x72c2
  40b134:	jle    0x40b0ba
  40b136:	aas    
  40b137:	in     eax,0xc
  40b139:	or     al,BYTE PTR [ecx-0x3f762958]
  40b13f:	ret    
  40b140:	dec    BYTE PTR [ecx-0x1299e6b]
  40b146:	and    BYTE PTR [edi],ch
  40b148:	mov    bh,0xd7
  40b14a:	dec    edi
  40b14b:	sbb    BYTE PTR [ecx],ch
  40b14d:	ret    
  40b14e:	retf   
  40b14f:	jmp    0x40b127
  40b151:	int3   
  40b152:	push   ebp
  40b153:	mov    esi,0x57b9f41
  40b158:	sub    eax,0x2a927384
  40b15d:	mov    ?,ebp
  40b15f:	aad    0x1d
  40b161:	icebp  
  40b162:	fld    QWORD PTR [ebx+0x515609d6]
  40b168:	add    eax,0x55e90032
  40b16d:	ins    DWORD PTR es:[edi],dx
  40b16e:	mov    ebx,0xd60000e5
  40b173:	sbb    al,0xc0
  40b175:	(bad)  
  40b176:	jg     0x40b1c4
  40b178:	jnp    0x40b16f
  40b17a:	cdq    
  40b17b:	aaa    
  40b17c:	ret    0xd6ed
  40b17f:	ds mov edi,ebp
  40b182:	push   esp
  40b183:	in     eax,0xf7
  40b185:	jmp    0x9793bb60
  40b18a:	and    DWORD PTR [edi-0x2fd9cebc],eax
  40b190:	inc    esp
  40b191:	repnz xlat BYTE PTR ds:[ebx]
  40b193:	loope  0x40b11f
  40b195:	pop    es
  40b196:	ror    DWORD PTR [ecx],1
  40b198:	lea    edx,[ebp+eax*4-0x10]
  40b19c:	adc    al,0xe5
  40b19e:	ror    DWORD PTR [ecx],1
  40b1a0:	add    DWORD PTR [ebp+ebx*2-0x28],0xffffff89
  40b1a5:	add    BYTE PTR [edx-0x3c],dh
  40b1a8:	inc    ebx
  40b1a9:	int3   
  40b1aa:	push   esp
  40b1ab:	xor    eax,DWORD PTR [eax+0x0]
  40b1ae:	xchg   esp,eax
  40b1af:	cmc    
  40b1b0:	(bad)  
  40b1b1:	add    BYTE PTR [edi+eax*4+0x5b],ch
  40b1b5:	or     BYTE PTR [ecx],al
  40b1b7:	push   ecx
  40b1b8:	adc    al,0x89
  40b1ba:	mov    ecx,0x78438bed
  40b1bf:	ret    0xec43
  40b1c2:	ins    BYTE PTR es:[edi],dx
  40b1c3:	ret    
  40b1c4:	inc    ebx
  40b1c5:	hlt    
  40b1c6:	push   ebp
  40b1c7:	inc    eax
  40b1c8:	inc    eax
  40b1c9:	add    ch,al
  40b1cb:	inc    edx
  40b1cc:	enter  0xf989,0xe5
  40b1d0:	mov    DWORD PTR [ebp+0x54],eax
  40b1d3:	mov    BYTE PTR [esi],ch
  40b1d5:	mov    eax,DWORD PTR [eax]
  40b1d7:	add    BYTE PTR [ecx-0x40],ch
  40b1da:	mov    DWORD PTR [eax+0x3f],edi
  40b1dd:	jns    0x40b259
  40b1df:	cmp    eax,0xf07b8644
  40b1e4:	mov    ecx,0xa14272b3
  40b1e9:	inc    edx
  40b1ea:	in     al,0x50
  40b1ec:	add    DWORD PTR [edx-0x3c],0x10041450
  40b1f3:	add    ah,ch
  40b1f5:	arpl   di,di
  40b1f7:	(bad)  
  40b1f8:	in     al,dx
  40b1f9:	or     edi,edi
  40b1fb:	ss mov ebx,0xfc04e442
  40b201:	or     eax,DWORD PTR [eax]
  40b203:	(bad)  
  40b204:	jmp    0xec80c5b8
  40b209:	cmp    BYTE PTR [esi+0x437aa975],0xc4
  40b210:	ins    BYTE PTR es:[edi],dx
  40b211:	in     al,dx
  40b212:	je     0x40b218
  40b214:	mov    bl,0xd2
  40b216:	push   ds
  40b217:	adc    ch,ah
  40b219:	or     eax,0x82c3c085
  40b21e:	fadd   DWORD PTR [ecx]
  40b220:	aad    0xe0
  40b222:	add    bh,bh
  40b224:	sub    BYTE PTR [ebp-0x2f65d316],dl
  40b22a:	loope  0x40b1b6
  40b22c:	sbb    BYTE PTR [ebp-0x5fea49ef],bl
  40b232:	xor    ch,al
  40b234:	mov    ch,BYTE PTR [eax+0x3]
  40b237:	add    BYTE PTR [ecx-0x5f],dl
  40b23a:	push   edi
  40b23b:	sbb    BYTE PTR [eax],al
  40b23d:	add    bl,bh
  40b23f:	arpl   WORD PTR [edx],sp
  40b241:	add    dl,bl
  40b243:	fs call 0xf3c0:0x15e0d500
  40b24b:	pop    ecx
  40b24c:	or     al,dh
  40b24e:	cwde   
  40b24f:	mov    eax,DWORD PTR [ebx]
  40b251:	jmp    0x4394d2
  40b256:	scas   eax,DWORD PTR es:[edi]
  40b257:	mov    al,0xea
  40b259:	jmp    0x854392fb
  40b25e:	adc    eax,0x988af9bd
  40b263:	xor    al,0x12
  40b265:	mov    dh,0xc4
  40b267:	mov    bh,0x98
  40b269:	dec    eax
  40b26a:	sbb    dh,BYTE PTR [ebx+0x33]
  40b26d:	mov    eax,DWORD PTR ds:0xd5b82039
  40b273:	loopne 0x40b202
  40b275:	out    dx,eax
  40b276:	out    dx,al
  40b277:	loop   0x40b28e
  40b279:	not    BYTE PTR [eax-0x9]
  40b27c:	adc    DWORD PTR [eax+esi*2+0x5e0002e1],eax
  40b283:	jle    0x40b23b
  40b285:	lds    ebx,FWORD PTR [eax-0x257afd06]
  40b28b:	push   esp
  40b28c:	cs mov ebx,edx
  40b28f:	gs push eax
  40b291:	fsub   QWORD PTR [eax+edi*2]
  40b294:	loope  0x40b2e5
  40b296:	add    eax,0xd874c36e
  40b29b:	or     DWORD PTR [edi-0x7b],ecx
  40b29e:	xor    DWORD PTR [esi+0x11dd],esi
  40b2a4:	inc    ecx
  40b2a5:	leave  
  40b2a6:	ins    BYTE PTR es:[edi],dx
  40b2a7:	les    ebp,FWORD PTR [ecx]
  40b2a9:	stc    
  40b2aa:	popa   
  40b2ab:	or     DWORD PTR [edi],ebp
  40b2ad:	xlat   BYTE PTR ds:[ebx]
  40b2ae:	sbb    eax,0xb61e22e1
  40b2b3:	mov    esp,0xc4b6c9ec
  40b2b8:	pop    edx
  40b2b9:	dec    esp
  40b2ba:	mov    bl,0x8d
  40b2bc:	adc    edx,ebx
  40b2be:	cmc    
  40b2bf:	cwde   
  40b2c0:	retf   0xf891
  40b2c3:	sub    ch,dl
  40b2c5:	or     DWORD PTR [edi],ecx
  40b2c7:	sbb    eax,0x9c215b7d
  40b2cc:	stos   BYTE PTR es:[edi],al
  40b2cd:	pop    esp
  40b2ce:	jmp    0xa1536dd6
  40b2d3:	pop    ecx
  40b2d4:	or     esp,DWORD PTR [edi+esi*8-0x72]
  40b2d8:	pop    ecx
  40b2d9:	pop    es
  40b2da:	outs   dx,BYTE PTR ds:[esi]
  40b2db:	loope  0x40b318
  40b2dd:	arpl   cx,bp
  40b2df:	xor    edi,DWORD PTR ds:0xd505d2d0
  40b2e5:	sub    DWORD PTR [esi-0x2332a9f5],0xffffffeb
  40b2ec:	add    al,0x90
  40b2ee:	call   0x2a092df6
  40b2f3:	or     al,0x73
  40b2f5:	sub    BYTE PTR [ebx+0x10],0x2
  40b2f9:	(bad)  
  40b2fa:	sub    eax,0xf6744c6a
  40b2ff:	loopne 0x40b2f4
  40b301:	aad    0x6b
  40b303:	jg     0x40b2e3
  40b305:	(bad)  
  40b306:	adc    eax,0x4f0000e1
  40b30b:	iret   
  40b30c:	add    cl,ah
  40b30e:	sbb    al,0x9
  40b310:	jmp    0xa7a0459c
  40b315:	cmp    DWORD PTR [ebp-0x26cdffa3],edi
  40b31b:	or     DWORD PTR [ecx+ebp*1+0x14e7fa22],eax
  40b322:	dec    esi
  40b323:	aad    0xfe
  40b325:	aaa    
  40b326:	mov    ecx,0xd6e9584b
  40b32b:	loop   0x40b2fe
  40b32d:	jmp    0x6ccdbd08
  40b332:	loop   0x40b308
  40b334:	(bad)  
  40b335:	mov    esi,0x70dae1c6
  40b33a:	(bad)  
  40b33b:	or     DWORD PTR [ecx+ebp*4+0x7265fa22],eax
  40b342:	pop    ebx
  40b343:	pop    es
  40b344:	call   FWORD PTR [esi-0x563e908b]
  40b34a:	into   
  40b34b:	add    al,0xb7
  40b34d:	test   eax,0xa9330b69
  40b352:	popa   
  40b353:	inc    esi
  40b354:	lock pop es
  40b356:	pop    esi
  40b357:	or     al,dh
  40b359:	sub    al,0x20
  40b35b:	or     cl,BYTE PTR [ebx+0x4c802924]
  40b361:	dec    ecx
  40b362:	pop    edi
  40b363:	and    eax,0x6f06a48b
  40b368:	mov    ebp,ecx
  40b36a:	lods   al,BYTE PTR ds:[esi]
  40b36b:	add    BYTE PTR [eax],0x64
  40b36e:	add    BYTE PTR [eax],al
  40b370:	xor    eax,0xd6748404
  40b375:	or     DWORD PTR [eax],eax
  40b377:	jb     0x40b356
  40b379:	xchg   BYTE PTR [ecx+edx*1-0x39],cl
  40b37d:	cmp    al,0xff
  40b37f:	cdq    
  40b380:	scas   al,BYTE PTR es:[edi]
  40b381:	mov    ?,WORD PTR [edi-0x7c911564]
  40b387:	pushf  
  40b388:	cs aam 0xe
  40b38b:	jge    0x40b3a3
  40b38d:	adc    DWORD PTR [ecx],eax
  40b38f:	xchg   esp,eax
  40b390:	into   
  40b391:	add    BYTE PTR [esi],0x0
  40b394:	data16 or BYTE PTR [edi-0x1],dl
  40b398:	ins    BYTE PTR es:[edi],dx
  40b399:	and    al,0x8b
  40b39b:	inc    ebp
  40b39c:	rol    BYTE PTR [esi+esi*4],0x0
  40b3a0:	je     0x40b3de
  40b3a2:	push   cs
  40b3a3:	dec    eax
  40b3a4:	adc    DWORD PTR [edi],ebx
  40b3a6:	push   0xe
  40b3a8:	jae    0x40b3ec
  40b3aa:	in     al,0x11
  40b3ac:	lods   al,BYTE PTR ds:[esi]
  40b3ad:	or     BYTE PTR [eax],al
  40b3af:	jmp    0x40b366
  40b3b1:	bound  ecx,QWORD PTR ds:0x4e1c1c7
  40b3b7:	add    BYTE PTR [eax+ecx*1+0x58],bh
  40b3bb:	(bad)  
  40b3bc:	shl    DWORD PTR [ebp+0x7dd53e6],0x0
  40b3c3:	mov    eax,ecx
  40b3c5:	mov    ebp,0x187cb70d
  40b3ca:	mov    eax,esi
  40b3cc:	pushf  
  40b3cd:	pop    edi
  40b3ce:	or     al,0x5b
  40b3d0:	stc    
  40b3d1:	push   0xffffff90
  40b3d3:	call   0x4a7ab3d8
  40b3d8:	add    BYTE PTR [eax],al
  40b3da:	cmc    
  40b3db:	push   ss
  40b3dc:	test   eax,eax
  40b3de:	dec    edx
  40b3df:	fdivp  st(5),st
  40b3e1:	jne    0x40b433
  40b3e3:	add    BYTE PTR [ebx-0x10],0x2b
  40b3e7:	jnp    0x40b3e7
  40b3e9:	dec    edi
  40b3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3eb:	int3   
  40b3ec:	dec    esi
  40b3ed:	lea    esi,[ecx-0x3c]
  40b3f0:	dec    esi
  40b3f1:	call   0x3f51ee
  40b3f6:	xchg   DWORD PTR [edx-0x2c],ebp
  40b3f9:	or     BYTE PTR [ecx-0x4e],0xfe
  40b3fd:	jae    0x40b3f3
  40b3ff:	jle    0x40b406
  40b401:	push   0xffffffec
  40b403:	sbb    bh,bh
  40b405:	push   eax
  40b406:	adc    BYTE PTR [edi+0x5b],bh
  40b409:	or     dl,cl
  40b40b:	inc    edx
  40b40c:	in     al,dx
  40b40d:	adc    ebp,0xffffffa5
  40b410:	loop   0x40b413
  40b412:	push   esi
  40b413:	lods   eax,DWORD PTR ds:[esi]
  40b414:	(bad)  
  40b415:	pop    es
  40b416:	push   esi
  40b417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b418:	jmp    0xd203:0xef565503
  40b41f:	pop    esi
  40b420:	mov    eax,ds:0x89e4bafc
  40b425:	inc    esp
  40b426:	mov    DWORD PTR [esi-0x3d],esp
  40b429:	jae    0x40b40a
  40b42b:	push   edi
  40b42c:	or     edx,DWORD PTR [eax-0x5e]
  40b42f:	adc    cl,BYTE PTR [ebx+eax*4]
  40b432:	xor    BYTE PTR [ebp+0x59568b02],bl
  40b438:	add    eax,DWORD PTR [eax]
  40b43a:	add    BYTE PTR [eax],al
  40b43c:	aad    0x57
  40b43e:	ror    BYTE PTR [eax+0x42c4bd16],cl
  40b444:	shl    ecx,0xea
  40b447:	dec    edi
  40b448:	aad    0xe0
  40b44a:	add    al,BYTE PTR [ebp+edx*4+0x2b0f0dfd]
  40b451:	and    BYTE PTR [eax],bl
  40b453:	mov    ecx,DWORD PTR [esi]
  40b455:	sbb    DWORD PTR [ebp-0x2312a9b5],ecx
  40b45b:	inc    edx
  40b45c:	add    DWORD PTR [eax+0x50],ebx
  40b45f:	enter  0xe4af,0x38
  40b463:	mov    edx,esp
  40b465:	ins    DWORD PTR es:[edi],dx
  40b466:	ret    
  40b467:	jae    0x40b44c
  40b469:	fist   DWORD PTR [edx+esi*2+0x44357e1]
  40b470:	dec    esp
  40b471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b472:	xchg   ecx,eax
  40b473:	sbb    ebx,DWORD PTR [ebx]
  40b475:	mov    al,ds:0xe5148316
  40b47a:	dec    eax
  40b47b:	jne    0x40b470
  40b47d:	pusha  
  40b47e:	pusha  
  40b47f:	sti    
  40b480:	aam    0x95
  40b482:	or     ecx,DWORD PTR [ebp-0x17cca770]
  40b488:	jecxz  0x40b493
  40b48a:	rol    BYTE PTR [ebx],1
  40b48c:	aad    0x84
  40b48e:	xchg   ebx,eax
  40b48f:	iret   
  40b490:	cli    
  40b491:	inc    ebp
  40b492:	cmp    eax,0xaf32d503
  40b497:	cmp    bl,BYTE PTR [edi+eax*8+0x172203ec]
  40b49e:	(bad)  
  40b49f:	sbb    eax,DWORD PTR [eax]
  40b4a1:	add    BYTE PTR [ebx+0x32],al
  40b4a4:	jl     0x40b49e
  40b4a6:	and    edi,DWORD PTR [ebx]
  40b4a8:	xchg   esi,eax
  40b4a9:	ss mov dl,0xfc
  40b4ac:	mov    esp,0x7009eaf2
  40b4b1:	inc    esi
  40b4b2:	std    
  40b4b3:	push   cs
  40b4b4:	scas   al,BYTE PTR es:[edi]
  40b4b5:	push   edi
  40b4b6:	rcl    DWORD PTR [edi],1
  40b4b8:	test   eax,0xe799963d
  40b4bd:	cmp    al,0x96
  40b4bf:	cmp    al,0x72
  40b4c1:	lock push edi
  40b4c3:	in     eax,0xc
  40b4c5:	xor    DWORD PTR [esi-0x4f],ecx
  40b4c8:	popa   
  40b4c9:	inc    ecx
  40b4ca:	fld    DWORD PTR [eax+0x465fe42b]
  40b4d0:	icebp  
  40b4d1:	xor    eax,0x8f814c4c
  40b4d6:	pop    ss
  40b4d7:	adc    dh,BYTE PTR [esi]
  40b4d9:	adc    DWORD PTR [ebx+0x39],ecx
  40b4dc:	jo     0x40b535
  40b4de:	sub    edx,ecx
  40b4e0:	and    ebp,eax
  40b4e2:	aad    0x9
  40b4e4:	jmp    0x7d8d00ec
  40b4e9:	(bad)  
  40b4eb:	mov    cl,0xfa
  40b4ed:	inc    ebx
  40b4ee:	aad    0x80
  40b4f0:	rcr    ebx,cl
  40b4f2:	fst    QWORD PTR [esi-0x43]
  40b4f5:	or     al,0x53
  40b4f7:	(bad)  
  40b4f8:	call   0xa9bf8a00
  40b4fd:	xor    ebx,DWORD PTR [esi+0x44]
  40b500:	inc    ecx
  40b501:	mov    esi,eax
  40b503:	cmp    edi,0x9200002e
  40b509:	sar    edi,cl
  40b50b:	arpl   WORD PTR [ebx],cx
  40b50d:	add    eax,DWORD PTR [edx+esi*4+0x720009d7]
  40b514:	fwait
  40b515:	add    DWORD PTR [ebp+0x69f87d29],eax
  40b51b:	jmp    0x15558626
  40b520:	(bad)  
  40b521:	adc    DWORD PTR [eax],eax
  40b523:	fs cdq 
  40b525:	add    BYTE PTR [edx+edi*4+0x270009d7],al
  40b52c:	sbb    cl,bh
  40b52e:	jmp    FWORD PTR [esi-0x12002eed]
  40b534:	dec    eax
  40b535:	inc    esi
  40b536:	jmp    FWORD PTR [eax+0x4d8b0cb6]
  40b53c:	fucompp 
  40b53e:	mov    BYTE PTR [ecx+eiz*4],ch
  40b541:	xchg   dh,bh
  40b543:	out    dx,al
  40b544:	pop    edx
  40b545:	(bad)  
  40b546:	(bad)  
  40b547:	call   0x26f6b622
  40b54c:	loope  0x40b58f
  40b54e:	je     0x40b546
  40b550:	push   ds
  40b551:	push   edi
  40b552:	sbb    BYTE PTR [edi],al
  40b554:	push   esp
  40b555:	dec    edi
  40b556:	push   esp
  40b557:	inc    BYTE PTR [ebx]
  40b559:	sti    
  40b55a:	mov    WORD PTR [edi],ds
  40b55c:	or     eax,0x540f0de5
  40b561:	dec    edi
  40b562:	inc    esp
  40b563:	jmp    0x40b510
  40b565:	push   es
  40b566:	lea    esp,[edi]
  40b568:	(bad)  
  40b569:	in     al,0x1
  40b56b:	mov    edx,0x861f0000
  40b570:	enter  0x52f6,0x7b
  40b574:	(bad)  
  40b575:	call   0xaff7b650
  40b57a:	and    al,BYTE PTR [ebp+edx*2+0x513bc6f9]
  40b581:	add    BYTE PTR [edi+0x5775e6bd],al
  40b587:	or     eax,0x38ac8400
  40b58c:	or     al,BYTE PTR [ebx-0x3a0146e7]
  40b592:	cmp    DWORD PTR [edi-0x51b51501],ebp
  40b598:	adc    eax,DWORD PTR [eax]
  40b59a:	fimul  DWORD PTR [eax+eax*1-0x47]
  40b59e:	jge    0x40b5c5
  40b5a0:	add    BYTE PTR [eax],al
  40b5a2:	xchg   edi,eax
  40b5a3:	retf   
  40b5a4:	jge    0x40b5df
  40b5a6:	dec    eax
  40b5a7:	sbb    cl,BYTE PTR [ebx+0x1be42dc8]
  40b5ad:	daa    
  40b5ae:	mov    esp,0x3f49740c
  40b5b3:	fist   WORD PTR [edi+ecx*1]
  40b5b6:	cmp    BYTE PTR [ebx-0x2],bh
  40b5b9:	jmp    FWORD PTR [edi+eax*4-0xed7f319]
  40b5c0:	mov    al,BYTE PTR [ebp+0x4c]
  40b5c3:	add    al,0xb6
  40b5c5:	inc    esp
  40b5c6:	jns    0x40b560
  40b5c8:	dec    esi
  40b5c9:	call   0x3e661d
  40b5ce:	iret   
  40b5cf:	ffree  st(6)
  40b5d1:	sti    
  40b5d2:	add    BYTE PTR [eax],al
  40b5d4:	xor    esi,DWORD PTR [ebp+edi*8+0x13b51473]
  40b5db:	call   0xeb41023e
  40b5e0:	xchg   edx,eax
  40b5e1:	icebp  
  40b5e2:	inc    edx
  40b5e3:	daa    
  40b5e4:	cmp    al,0xc
  40b5e6:	jl     0x40b5c2
  40b5e8:	adc    DWORD PTR [eax],0x322c0027
  40b5ee:	push   cs
  40b5ef:	cmp    eax,0x2cfa
  40b5f4:	or     BYTE PTR [ebx],cl
  40b5f6:	cmp    eax,0x5db51
  40b5fb:	jne    0x40b5d2
  40b5fd:	sbb    eax,0xe2137c84
  40b602:	dec    edi
  40b603:	or     al,0x13
  40b605:	popf   
  40b606:	fadd   DWORD PTR [eax]
  40b608:	dec    esp
  40b609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b60a:	into   
  40b60b:	jmp    0xa4f3:0xfd4118d6
  40b612:	fnstcw WORD PTR [edi+0x68]
  40b615:	daa    
  40b616:	push   es
  40b617:	xorps  xmm1,xmm6
  40b61a:	fsin   
  40b61c:	fisub  DWORD PTR [ecx+0x59]
  40b61f:	std    
  40b620:	xlat   BYTE PTR ds:[ebx]
  40b621:	jne    0x40b615
  40b623:	mov    dl,BYTE PTR [ebx]
  40b625:	fnstcw WORD PTR [edi-0x41]
  40b628:	dec    ecx
  40b629:	retf   
  40b62a:	rol    DWORD PTR [ebp-0x37],0x97
  40b62e:	and    DWORD PTR [eax],eax
  40b630:	aad    0xb
  40b632:	sub    BYTE PTR cs:[eax],0xe7
  40b636:	add    dh,BYTE PTR [eax+eax*1+0x0]
  40b63a:	out    dx,al
  40b63b:	arpl   WORD PTR [ecx+0x70],bx
  40b63e:	aad    0x2d
  40b640:	cmc    
  40b641:	out    0xa0,eax
  40b643:	fiadd  WORD PTR [eax+eax*1]
  40b646:	pop    esi
  40b647:	and    al,0x34
  40b649:	mov    edx,DWORD PTR [eax]
  40b64b:	leave  
  40b64c:	test   DWORD PTR [ebx],esp
  40b64e:	dec    ebp
  40b64f:	loope  0x40b63e
  40b651:	adc    ebx,DWORD PTR [esi+0x27]
  40b654:	or     al,0x85
  40b656:	xchg   ebp,eax
  40b657:	in     eax,dx
  40b658:	or     BYTE PTR [ebx+0x4d8b7510],cl
  40b65e:	leave  
  40b65f:	adc    bl,bl
  40b661:	adc    al,0x3d
  40b663:	rol    DWORD PTR [edx+0x0],cl
  40b666:	dec    edx
  40b667:	push   ds
  40b668:	fmul   QWORD PTR [edx+0x431d8898]
  40b66e:	mov    eax,ds:0x339084e7
  40b673:	pusha  
  40b674:	fimul  DWORD PTR [edx+0x1d510a2e]
  40b67a:	aam    0x9
  40b67c:	jmp    0x561e585b
  40b681:	lock cs cld 
  40b684:	test   al,0x3
  40b686:	stos   BYTE PTR es:[edi],al
  40b687:	das    
  40b688:	mov    ds:0x723517cc,al
  40b68d:	out    0x57,eax
  40b68f:	(bad)  
  40b691:	xor    DWORD PTR [edx-0x6871cf7e],ecx
  40b697:	stc    
  40b698:	imul   eax,ebx,0xffffffd3
  40b69b:	test   DWORD PTR [esi],edi
  40b69d:	add    eax,DWORD PTR [eax]
  40b69f:	add    ch,dl
  40b6a1:	or     DWORD PTR [edi],ebx
  40b6a3:	inc    esi
  40b6a4:	in     al,dx
  40b6a5:	or     dh,bl
  40b6a7:	jg     0x40b64f
  40b6a9:	or     ecx,ebp
  40b6ab:	add    ecx,DWORD PTR [edi+0x4a]
  40b6ae:	loopne 0x40b636
  40b6b0:	xor    edx,edx
  40b6b2:	call   0xa3c25190
  40b6b7:	ficomp DWORD PTR [ecx+0x46]
  40b6ba:	and    DWORD PTR [esp+ecx*2],esi
  40b6bd:	inc    esp
  40b6be:	int    0xd9
  40b6c0:	shl    DWORD PTR [ecx-0x752abc06],0x4d
  40b6c7:	xor    ch,dl
  40b6c9:	(bad)  
  40b6ca:	outs   dx,BYTE PTR ds:[esi]
  40b6cb:	jnp    0x40b64f
  40b6cd:	into   
  40b6ce:	call   0x627aca5f
  40b6d3:	inc    edi
  40b6d4:	ins    DWORD PTR es:[edi],dx
  40b6d5:	xor    ah,0x8b
  40b6d8:	pop    ebp
  40b6d9:	push   esp
  40b6da:	popf   
  40b6db:	jg     0x40b745
  40b6dd:	push   ebp
  40b6de:	sub    eax,0x6c02108d
  40b6e3:	(bad)  
  40b6e4:	mov    BYTE PTR [ebx+eax*1+0x4],0xa5
  40b6e9:	into   
  40b6ea:	(bad)  
  40b6ec:	in     al,0x49
  40b6ee:	jmp    0x953171
  40b6f3:	mov    cl,0x61
  40b6f5:	inc    esp
  40b6f6:	jo     0x40b758
  40b6f8:	jmp    0x8b1f:0x852984d9
  40b6ff:	xlat   BYTE PTR ds:[ebx]
  40b700:	add    DWORD PTR es:[ebp+ebx*2+0x0],0x0
  40b706:	pop    eax
  40b707:	mov    ss,WORD PTR ds:0xf5f34f56
  40b70d:	or     ch,BYTE PTR [ecx]
  40b70f:	pusha  
  40b710:	adc    al,0x6c
  40b712:	xchg   edi,eax
  40b713:	add    eax,0xf3986450
  40b718:	dec    edi
  40b719:	cs cli 
  40b71b:	stc    
  40b71c:	adc    eax,0xc38ad6a9
  40b721:	in     eax,dx
  40b722:	pop    ebx
  40b723:	mov    ?,WORD PTR [ecx+eiz*8+0x60]
  40b727:	inc    esi
  40b728:	call   ecx
  40b72a:	adc    al,0x9
  40b72c:	je     0x40b722
  40b72e:	popf   
  40b72f:	inc    esi
  40b730:	clc    
  40b731:	jb     0x40b72d
  40b733:	sar    DWORD PTR [edx],1
  40b735:	scas   al,BYTE PTR es:[edi]
  40b736:	add    bl,BYTE PTR [eax-0x67]
  40b739:	add    al,cl
  40b73b:	xor    BYTE PTR [ecx+ebx*8+0x51],0xc7
  40b740:	mov    dh,BYTE PTR [edx-0x16b74652]
  40b746:	(bad)  
  40b747:	add    BYTE PTR [ebp-0x1f],0xb
  40b74b:	lea    esi,[ebx-0xe]
  40b74e:	pop    ecx
  40b74f:	addr16 or al,0xe9
  40b752:	(bad)  
  40b753:	int3   
  40b754:	adc    al,0xc1
  40b756:	push   0x1b62000d
  40b75b:	(bad)  
  40b75c:	out    0x61,eax
  40b75e:	push   0xb
  40b760:	add    BYTE PTR [edx+0x15],dh
  40b763:	cmp    cl,BYTE PTR [ebx+0x23883124]
  40b769:	popa   
  40b76a:	add    BYTE PTR [eax],al
  40b76c:	(bad)  
  40b76d:	add    BYTE PTR [eax+eax*1+0x54],0xee
  40b772:	inc    esi
  40b773:	push   esp
  40b774:	inc    eax
  40b775:	int3   
  40b776:	out    0x44,al
  40b778:	cmp    al,0x9
  40b77a:	add    bh,bh
  40b77c:	and    ebp,esp
  40b77e:	std    
  40b77f:	adc    eax,0x3ed698
  40b784:	xchg   ebx,edi
  40b786:	neg    al
  40b788:	jns    0x40b7c7
  40b78a:	push   ss
  40b78b:	sbb    edi,DWORD PTR [ebp+eiz*1+0x6448ac1]
  40b792:	sub    cl,0xfe
  40b795:	cmp    ecx,DWORD PTR [edi]
  40b797:	cmp    DWORD PTR [esp+ecx*8-0x1f5c74b2],0xffffffd2
  40b79f:	push   es
  40b7a0:	in     al,dx
  40b7a1:	or     BYTE PTR [eax+eax*8-0xae23c0],al
  40b7a8:	jae    0x40b7de
  40b7aa:	call   0x484ee4
  40b7af:	test   ah,ch
  40b7b1:	cmp    al,0x8
  40b7b3:	push   edi
  40b7b4:	inc    edi
  40b7b5:	(bad)  
  40b7b6:	out    0xad,al
  40b7b8:	mov    edi,0x5a5f0008
  40b7bd:	mov    edi,0xf86533c1
  40b7c2:	sar    DWORD PTR [ecx],1
  40b7c4:	jmp    0x40b7df
  40b7c6:	jbe    0x40b7f3
  40b7c8:	rol    BYTE PTR [edx-0x7f30af8b],cl
  40b7ce:	add    al,0x83
  40b7d0:	add    BYTE PTR [eax],al
  40b7d2:	fcom   DWORD PTR [ebp-0x1]
  40b7d5:	jae    0x40b84a
  40b7d7:	jg     0x40b7f3
  40b7d9:	nop
  40b7da:	cmc    
  40b7db:	rol    DWORD PTR [esi+0x56f0be41],1
  40b7e1:	push   esp
  40b7e2:	mov    esi,0x1d3b59e0
  40b7e7:	cmp    DWORD PTR [ebx],ecx
  40b7e9:	mov    ebp,edx
  40b7eb:	and    esi,DWORD PTR [eax]
  40b7ed:	imul   ebx,DWORD PTR [esi+esi*8],0xffffffeb
  40b7f1:	xlat   BYTE PTR ds:[ebx]
  40b7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f3:	loop   0x40b7f7
  40b7f5:	pop    esi
  40b7f6:	push   ss
  40b7f7:	out    dx,eax
  40b7f8:	xor    BYTE PTR [edi+0x5e],dl
  40b7fb:	xchg   ebp,eax
  40b7fc:	cli    
  40b7fd:	adc    eax,0xdb11e295
  40b802:	scas   eax,DWORD PTR es:[edi]
  40b803:	rol    BYTE PTR [edi-0x1dc2ebb],cl
  40b809:	pop    ss
  40b80a:	mov    DWORD PTR [edx+0x69a55302],esp
  40b810:	ss pop esp
  40b812:	dec    esp
  40b813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b814:	(bad)  
  40b815:	jmp    DWORD PTR [edx]
  40b817:	mov    eax,0xae9b8d0a
  40b81c:	xor    DWORD PTR [eax-0x16],edx
  40b81f:	repnz imul ebx,DWORD PTR [eax],0x52f69c50
  40b826:	test   ebx,ebp
  40b828:	scas   al,BYTE PTR es:[edi]
  40b829:	mov    al,BYTE PTR [eax]
  40b82b:	std    
  40b82c:	icebp  
  40b82d:	aas    
  40b82e:	aad    0x5f
  40b830:	shl    BYTE PTR [ebx],0x50
  40b833:	fwait
  40b834:	sbb    dl,BYTE PTR [eax+0x0]
  40b837:	add    BYTE PTR [ebp+0x6b],cl
  40b83a:	push   cs
  40b83b:	dec    DWORD PTR [eax+0x5643e66]
  40b841:	push   0x36
  40b843:	push   eax
  40b844:	dec    esp
  40b845:	inc    ebx
  40b846:	xor    BYTE PTR [ecx-0x2b28b705],cl
  40b84c:	pop    esi
  40b84d:	sbb    eax,0x635c1020
  40b852:	mov    edi,edi
  40b854:	and    cl,0x87
  40b857:	test   DWORD PTR [ecx-0x1f],ecx
  40b85a:	add    al,BYTE PTR [eax]
  40b85c:	add    eax,0x5c7c356a
  40b861:	cmp    eax,DWORD PTR [ebx-0x16f59d01]
  40b867:	(bad)  
  40b868:	and    DWORD PTR [edx-0x6d],0x6409d502
  40b86f:	jge    0x40b8e7
  40b871:	or     ch,cl
  40b873:	add    esp,DWORD PTR [esi+0x57ae8639]
  40b879:	(bad)  
  40b87a:	in     al,dx
  40b87b:	ss nop
  40b87d:	jle    0x40b82d
  40b87f:	cmp    dl,BYTE PTR [edi]
  40b881:	push   es
  40b882:	jmp    0x511206b5
  40b887:	repnz sbb cl,bl
  40b88a:	call   0xe1664f5c
  40b88f:	add    al,0x81
  40b891:	add    esi,DWORD PTR [esi-0x16c80315]
  40b897:	add    ecx,DWORD PTR [esi-0x3d]
  40b89a:	popf   
  40b89b:	rol    DWORD PTR [eax],0x0
  40b89e:	(bad)  
  40b89f:	or     DWORD PTR [edx-0x1aa07cd0],ebx
  40b8a5:	mov    esi,0x439cf1db
  40b8aa:	aad    0x7c
  40b8ac:	mov    ebp,0xd97f31ff
  40b8b1:	add    al,0x55
  40b8b4:	loop   0x40b8a1
  40b8b6:	adc    DWORD PTR [esi-0x1ddcfc18],0x14
  40b8bd:	xor    ebp,edx
  40b8bf:	or     DWORD PTR [edx-0x3e],ebp
  40b8c2:	(bad)  
  40b8c3:	cmp    al,0x74
  40b8c5:	in     al,dx
  40b8c6:	out    0xae,eax
  40b8c8:	pop    ds
  40b8c9:	xor    eax,0x89015401
  40b8ce:	sbb    edi,DWORD PTR [edx]
  40b8d0:	add    BYTE PTR fs:[ebp-0x7a],ch
  40b8d4:	adc    BYTE PTR [ecx+ecx*1],al
  40b8d7:	add    esi,DWORD PTR [edx+0x14]
  40b8da:	ins    DWORD PTR es:[edi],dx
  40b8db:	inc    esp
  40b8dc:	loop   0x40b8df
  40b8de:	aad    0x46
  40b8e0:	add    dl,dh
  40b8e2:	mov    eax,ds:0x4cc17235
  40b8e7:	adc    eax,0xa16fbcc
  40b8ec:	lea    esp,[esi]
  40b8ee:	icebp  
  40b8ef:	cmp    edi,edi
  40b8f1:	mov    edi,0x81505320
  40b8f6:	mov    esp,0x4de90038
  40b8fb:	inc    ebx
  40b8fc:	pop    eax
  40b8fd:	sbb    DWORD PTR fs:[esi+0x7],edx
  40b901:	sbb    DWORD PTR [eax],eax
  40b903:	add    BYTE PTR [eax],al
  40b905:	cmc    
  40b906:	(bad)  
  40b907:	fist   DWORD PTR [esi+0x7aae8d09]
  40b90d:	cmp    edi,edi
  40b90f:	aaa    
  40b910:	pop    edx
  40b911:	or     DWORD PTR [ebx+0x5009d6e9],0x4e
  40b918:	xor    ecx,ebx
  40b91a:	jbe    0x40b8c1
  40b91c:	out    dx,al
  40b91d:	push   ebx
  40b91e:	push   edx
  40b91f:	jmp    0x2e9de4fa
  40b924:	call   0xd6ea2cea
  40b929:	cs ret 
  40b92b:	mov    esp,0xb850de4d
  40b930:	pop    ebx
  40b931:	push   eax
  40b932:	cmp    BYTE PTR [ecx-0x1600b178],bh
  40b938:	dec    edi
  40b939:	dec    esi
  40b93a:	clc    
  40b93b:	push   es
  40b93c:	stos   BYTE PTR es:[edi],al
  40b93d:	loope  0x40b950
  40b93f:	test   eax,0x9d7e8ad6
  40b944:	or     eax,0x4c11e8ff
  40b94a:	push   esi
  40b94b:	jb     0x40b8d6
  40b94d:	mov    cl,0x6a
  40b94f:	loop   0x40b8fa
  40b951:	enter  0xa983,0x1a
  40b955:	dec    DWORD PTR [edx+0x6b4ac51e]
  40b95b:	add    BYTE PTR [ebp+0x59],al
  40b95e:	lea    esi,[edi-0x34]
  40b961:	mov    ch,0x6e
  40b963:	push   ecx
  40b964:	jl     0x40b973
  40b966:	test   al,al
  40b968:	add    BYTE PTR [eax],al
  40b96a:	test   al,0xeb
  40b96c:	mov    WORD PTR [ebx+0x68],es
  40b96f:	std    
  40b970:	(bad)  
  40b971:	adc    eax,0x3ebba0
  40b976:	mov    bh,0x5
  40b978:	push   esp
  40b979:	mov    esp,DWORD PTR [edx]
  40b97b:	xchg   esp,eax
  40b97c:	sbb    al,BYTE PTR [ecx-0xa7a9ad]
  40b982:	sti    
  40b983:	stc    
  40b984:	(bad)  
  40b985:	adc    eax,0x3ebb54
  40b98a:	jp     0x40b994
  40b98c:	inc    DWORD PTR [ecx]
  40b98e:	adc    bl,dh
  40b990:	jae    0x40b98a
  40b992:	mov    bl,0xb7
  40b994:	ficom  DWORD PTR [edx]
  40b996:	cmp    al,0xd
  40b998:	mov    al,BYTE PTR [ebp-0x6d]
  40b99b:	rol    ecx,cl
  40b99d:	push   ebp
  40b99e:	xchg   DWORD PTR [eax-0x6dff137f],esi
  40b9a4:	inc    ebx
  40b9a5:	or     BYTE PTR [edx-0xa],cl
  40b9a8:	mov    bh,BYTE PTR [eax-0x4]
  40b9ab:	mov    DWORD PTR [esi+0x197dbb16],edi
  40b9b1:	call   FWORD PTR [edi-0x5bbc741c]
  40b9b7:	cld    
  40b9b8:	lds    eax,FWORD PTR [ebp-0x2d]
  40b9bb:	or     al,0x83
  40b9bd:	(bad)  
  40b9be:	test   al,0x93
  40b9c0:	inc    ebx
  40b9c1:	hlt    
  40b9c2:	mov    bl,0xb6
  40b9c4:	(bad)  
  40b9c5:	adc    bh,BYTE PTR [esp+ecx*1+0x33]
  40b9c9:	div    BYTE PTR ds:0x39f858
  40b9cf:	add    bh,bh
  40b9d1:	add    DWORD PTR [esi+0x62],esi
  40b9d4:	pop    es
  40b9d5:	push   ecx
  40b9d6:	push   eax
  40b9d7:	(bad)  
  40b9d8:	aad    0xb6
  40b9da:	xchg   edx,eax
  40b9db:	mov    cl,ch
  40b9dd:	sub    eax,0xa1573bd
  40b9e2:	inc    ecx
  40b9e3:	or     cl,ch
  40b9e5:	adc    bh,BYTE PTR [edi+0x40]
  40b9e8:	lds    esi,FWORD PTR [ebx]
  40b9ea:	lds    edx,FWORD PTR ds:0xbfee9a6a
  40b9f0:	mov    dh,0x71
  40b9f2:	pop    ebp
  40b9f3:	adc    al,0x56
  40b9f5:	jb     0x40b9fe
  40b9f7:	push   eax
  40b9f8:	mov    ds:0xeb13f89f,al
  40b9fd:	repnz add eax,DWORD PTR [ebx-0x407841ef]
  40ba04:	test   al,0xab
  40ba06:	jge    0x40ba4a
  40ba08:	test   DWORD PTR [ebx],ebp
  40ba0a:	sbb    BYTE PTR [eax+0x1ecd62d],dh
  40ba10:	aad    0x3b
  40ba12:	inc    ecx
  40ba13:	clc    
  40ba14:	pop    esi
  40ba15:	jae    0x40ba49
  40ba17:	xor    DWORD PTR [ecx-0x6739fbd6],0x57
  40ba1e:	add    eax,0x7b78048b
  40ba23:	je     0x40ba12
  40ba25:	or     dl,BYTE PTR [edi+0x54]
  40ba28:	mov    eax,DWORD PTR [bp+di-0x1d84]
  40ba2d:	mov    cl,0x56
  40ba2f:	pop    es
  40ba30:	dec    esi
  40ba31:	jmp    0x40ba0e
  40ba33:	cwde   
  40ba34:	add    BYTE PTR [eax],al
  40ba36:	shr    BYTE PTR [eax],1
  40ba38:	sar    esi,cl
  40ba3a:	inc    eax
  40ba3b:	and    eax,0xc3a114d3
  40ba40:	inc    edx
  40ba41:	add    BYTE PTR [edi+0x76],cl
  40ba44:	rcr    DWORD PTR [esi+0x13],1
  40ba47:	cli    
  40ba48:	lds    eax,FWORD PTR [ebx]
  40ba4a:	aad    0xa5
  40ba4c:	jge    0x40ba39
  40ba4e:	push   esi
  40ba4f:	lds    esp,FWORD PTR [esi]
  40ba51:	push   ebx
  40ba52:	add    ecx,DWORD PTR [edx]
  40ba54:	fmul   QWORD PTR ds:[ebx+0x5e03e7a0]
  40ba5b:	ret    0x505f
  40ba5e:	test   DWORD PTR [ebp-0x42da733],ecx
  40ba64:	test   al,0xdc
  40ba66:	pop    ecx
  40ba67:	or     ch,cl
  40ba69:	add    edx,DWORD PTR [esi+0x45]
  40ba6c:	fld    DWORD PTR [ebx]
  40ba6e:	dec    esi
  40ba6f:	addr16 in eax,0xc9
  40ba72:	adc    edi,eax
  40ba74:	call   0x23d59dd1
  40ba79:	mov    al,0x32
  40ba7b:	pop    ebx
  40ba7c:	push   es
  40ba7d:	add    eax,0xb02394d5
  40ba82:	dec    ebp
  40ba83:	dec    ebp
  40ba84:	(bad)  
  40ba86:	test   eax,0xdd587219
  40ba8b:	mov    cl,0x72
  40ba8d:	push   es
  40ba8e:	aad    0x9
  40ba90:	fs scas al,BYTE PTR es:[edi]
  40ba92:	cwde   
  40ba93:	push   edx
  40ba94:	push   0x68
  40ba96:	or     eax,0x30700a
  40ba9b:	add    BYTE PTR [ecx],al
  40ba9d:	xchg   ebx,eax
  40ba9e:	in     eax,dx
  40ba9f:	push   es
  40baa0:	cwde   
  40baa1:	rol    edx,0x3
  40baa4:	cli    
  40baa5:	cmp    al,0xe5
  40baa7:	shr    BYTE PTR [ecx+0x21],cl
  40baaa:	ds pop eax
  40baac:	rol    esi,0xbb
  40baaf:	repz jecxz 0x40baee
  40bab2:	fstp   st(3)
  40bab4:	jmp    0x63b9:0x5e03eb5e
  40babb:	fld    DWORD PTR [esi+0x24]
  40babe:	bound  edx,QWORD PTR [eax-0x33]
  40bac1:	xchg   edx,eax
  40bac2:	fld    TBYTE PTR cs:[eax]
  40bac5:	enter  0xd205,0x56
  40bac9:	leave  
  40baca:	je     0x40bad3
  40bacc:	xchg   ebx,eax
  40bacd:	dec    esp
  40bace:	add    dh,dh
  40bad0:	(bad)  
  40bad1:	mov    cl,0x5c
  40bad3:	rcl    al,1
  40bad5:	or     DWORD PTR [ebx+0x448ba964],ecx
  40badb:	loope  0x40bab6
  40badd:	(bad)  
  40bade:	dec    esp
  40badf:	(bad)  [edx]
  40bae1:	xchg   dh,bh
  40bae3:	push   ss
  40bae4:	cdq    
  40bae5:	or     BYTE PTR [edi-0x17],0xd6
  40bae9:	pop    esi
  40baea:	call   0x4a5c64
  40baef:	arpl   WORD PTR [edx],bx
  40baf1:	(bad)  
  40baf2:	pop    esi
  40baf3:	push   gs
  40baf5:	rol    cl,1
  40baf7:	add    ecx,ebx
  40baf9:	pop    esp
  40bafa:	mov    ecx,DWORD PTR [ebp+0x6a0bb250]
  40bb00:	add    BYTE PTR [eax],al
  40bb02:	mov    edx,0xfc39ffc5
  40bb07:	xchg   edx,eax
  40bb08:	jl     0x40bafb
  40bb0a:	mov    cl,0xde
  40bb0c:	mov    ah,BYTE PTR [esi-0x57]
  40bb0f:	(bad)  
  40bb10:	(bad)  
  40bb11:	jmp    0x633508b5
  40bb16:	nop
  40bb17:	adc    DWORD PTR [ecx+0x18ae1eac],ecx
  40bb1d:	pop    edi
  40bb1e:	and    al,0xc7
  40bb20:	sub    DWORD PTR [ecx],0xffffff9d
  40bb23:	pop    ebp
  40bb24:	call   esp
  40bb26:	cli    
  40bb27:	xchg   edx,eax
  40bb28:	cmp    al,0x19
  40bb2a:	jmp    0x40bb31
  40bb2c:	add    bl,dl
  40bb2e:	(bad)  
  40bb2f:	xchg   esp,eax
  40bb30:	inc    esp
  40bb31:	cmp    eax,0x2e0233a9
  40bb36:	sbb    al,0x8b
  40bb38:	imul   eax
  40bb3a:	sub    edi,ecx
  40bb3c:	and    BYTE PTR [edx-0xb8c3a36],0x41
  40bb43:	dec    eax
  40bb44:	jo     0x40bb54
  40bb46:	and    dl,BYTE PTR [esi]
  40bb48:	mov    eax,DWORD PTR [eax]
  40bb4a:	jl     0x40bb0d
  40bb4c:	xchg   DWORD PTR [ebp-0x2c],eax
  40bb4f:	arpl   WORD PTR [eax],ax
  40bb51:	lea    esi,[ecx-0x23]
  40bb54:	dec    esi
  40bb55:	push   0xffffffae
  40bb57:	fcmovbe st,st(5)
  40bb59:	cmp    eax,0x87e
  40bb5e:	and    DWORD PTR [eax],edx
  40bb60:	or     DWORD PTR [ebp-0x58],0xffffffda
  40bb64:	jmp    0xdf40bb73
  40bb69:	cmp    BYTE PTR [edi],0x3b
  40bb6c:	cmp    eax,0xb989035c
  40bb71:	fst    DWORD PTR [ecx-0x75]
  40bb74:	leave  
  40bb75:	(bad)
  40bb78:	sub    bl,dl
  40bb7a:	std    
  40bb7b:	mov    eax,DWORD PTR [ecx]
  40bb7d:	ficomp DWORD PTR [ebp+0x5b]
  40bb80:	test   edi,ecx
  40bb82:	push   es
  40bb83:	add    BYTE PTR [ecx],al
  40bb85:	inc    edi
  40bb86:	jmp    0x40bb0b
  40bb88:	mov    eax,0xa7565348
  40bb8d:	fmul   DWORD PTR [ecx-0x291df3ba]
  40bb93:	sbb    ebp,DWORD PTR [esp+eax*2+0x4d]
  40bb97:	push   ss
  40bb98:	bswap  eax
  40bb9a:	push   ebp
  40bb9b:	cmp    DWORD PTR [eax+esi*4+0x35a1e84e],0x0
  40bba3:	add    BYTE PTR [eax-0x38],dh
  40bba6:	jb     0x40bbaf
  40bba8:	fmulp  st(5),st
  40bbaa:	out    0x8e,eax
  40bbac:	std    
  40bbad:	or     BYTE PTR [eax],al
  40bbaf:	lea    ebp,[ecx]
  40bbb1:	leave  
  40bbb2:	mov    esi,eax
  40bbb4:	xchg   esp,eax
  40bbb5:	or     eax,0x32ec019d
  40bbba:	cmp    DWORD PTR [ebp-0x24],0x8
  40bbbe:	mov    eax,0x89310
  40bbc3:	mov    ecx,0x55e2d5
  40bbc8:	aad    0x9e
  40bbca:	(bad)  
  40bbcb:	add    BYTE PTR gs:[eax],al
  40bbce:	in     al,dx
  40bbcf:	jne    0x40bbb3
  40bbd1:	jno    0x40bb60
  40bbd3:	mov    WORD PTR [ecx],cs
  40bbd5:	dec    ebp
  40bbd6:	mov    ch,0x43
  40bbd8:	mov    ch,0x65
  40bbda:	push   esi
  40bbdb:	xor    eax,0xbf06ffd7
  40bbe0:	cmp    DWORD PTR fs:[eax],edx
  40bbe3:	fist   WORD PTR [ecx-0x3b]
  40bbe6:	sti    
  40bbe7:	sbb    DWORD PTR [ecx-0xc],eax
  40bbea:	add    dl,BYTE PTR [edx+edi*2-0x78c22284]
  40bbf1:	mov    edx,ebp
  40bbf3:	mov    dl,0x2
  40bbf5:	push   eax
  40bbf6:	fwait
  40bbf7:	cmc    
  40bbf8:	retf   0x90ff
  40bbfb:	in     eax,dx
  40bbfc:	int3   
  40bbfd:	add    BYTE PTR [edx-0x3b],dl
  40bc00:	rcl    BYTE PTR [ecx],cl
  40bc02:	xchg   ebp,eax
  40bc03:	mov    dl,0x87
  40bc05:	mov    edi,0xfa4945d2
  40bc0a:	sub    eax,0xd5007925
  40bc0f:	aaa    
  40bc10:	aam    0x84
  40bc12:	and    esi,DWORD PTR [ebx-0x4d2a797a]
  40bc18:	add    cl,BYTE PTR [ebp-0x17cc9570]
  40bc1e:	sbb    BYTE PTR [ecx-0xdaffffc],cl
  40bc24:	dec    ebx
  40bc25:	aas    
  40bc26:	dec    esi
  40bc27:	cli    
  40bc28:	pop    edx
  40bc29:	fstp   TBYTE PTR [ebp+0x707fecaf]
  40bc2f:	dec    eax
  40bc30:	add    al,0x8d
  40bc32:	add    BYTE PTR [eax],al
  40bc34:	push   0x6f1f57f2
  40bc39:	mov    dl,0x34
  40bc3b:	call   0x4616e5
  40bc40:	mov    ebp,0xcbd8fd0a
  40bc45:	ret    
  40bc46:	outs   dx,DWORD PTR ds:[esi]
  40bc47:	inc    ebx
  40bc48:	fld    st(2)
  40bc4a:	fidivr WORD PTR [edx+0x10]
  40bc4d:	push   cs
  40bc4e:	add    esi,edi
  40bc50:	clc    
  40bc51:	or     ecx,ebp
  40bc53:	jnp    0x40bc66
  40bc55:	mov    edi,0x92cfb11
  40bc5a:	lahf   
  40bc5b:	fcmovnb st,st(5)
  40bc5d:	mov    eax,ds:0x4d5d03e7
  40bc62:	loopne 0x40bcde
  40bc64:	or     DWORD PTR [edx],edx
  40bc66:	rcr    BYTE PTR ds:0x3d34555,cl
  40bc6c:	add    edx,esi
  40bc6e:	imul   ecx,DWORD PTR [ebp-0x27],0xff2243f7
  40bc75:	or     BYTE PTR [eax+ecx*2-0x6b],ch
  40bc79:	(bad)  
  40bc7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc7b:	fisttp DWORD PTR [edi]
  40bc7d:	fwait
  40bc7e:	out    0x3,eax
  40bc80:	pop    ecx
  40bc81:	retf   0xf21c
  40bc84:	dec    ebx
  40bc85:	cld    
  40bc86:	jno    0x40bccd
  40bc88:	fnstenv [ecx+0x9d528b9]
  40bc8e:	gs ret 
  40bc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc91:	or     eax,0x92e48af
  40bc96:	jle    0x40bcad
  40bc98:	add    BYTE PTR [eax],al
  40bc9a:	sub    eax,0xd5042619
  40bc9f:	pop    ebx
  40bca0:	cmp    edx,0x83e909a3
  40bca6:	mov    DWORD PTR [edi-0x6b2fa818],edi
  40bcac:	ins    DWORD PTR es:[edi],dx
  40bcad:	jg     0x40bca9
  40bcaf:	ret    0x33e8
  40bcb2:	repnz sbb al,0x25
  40bcb5:	icebp  
  40bcb6:	stos   BYTE PTR es:[edi],al
  40bcb7:	or     DWORD PTR [ecx+0x50],ebp
  40bcba:	fimul  WORD PTR [ecx]
  40bcbc:	add    BYTE PTR [ebp+0x400079d3],bh
  40bcc2:	push   esi
  40bcc3:	ret    0xe9fe
  40bcc6:	push   esi
  40bcc7:	inc    ebp
  40bcc8:	stc    
  40bcc9:	jmp    0x18214391
  40bcce:	mov    eax,ebx
  40bcd0:	mov    WORD PTR [esi-0x5376a5c6],fs
  40bcd6:	scas   al,BYTE PTR es:[edi]
  40bcd7:	ret    
  40bcd8:	adc    al,0x21
  40bcda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcdb:	add    al,BYTE PTR [eax]
  40bcdd:	fs or  eax,0xc28e8cd2
  40bce3:	pop    ecx
  40bce4:	mov    ebx,edx
  40bce6:	test   eax,0xd6e89908
  40bceb:	mov    WORD PTR [edi-0x10714caf],?
  40bcf1:	inc    edx
  40bcf2:	mov    edi,edx
  40bcf4:	add    bh,dl
  40bcf6:	or     al,0xa
  40bcf8:	push   ebx
  40bcf9:	ins    BYTE PTR es:[edi],dx
  40bcfa:	adc    cl,dl
  40bcfc:	out    0x3a,eax
  40bcfe:	add    BYTE PTR [eax],al
  40bd00:	loopne 0x40bd0b
  40bd02:	add    BYTE PTR [ecx-0x66],ah
  40bd05:	mov    esi,0xc32d3de7
  40bd0a:	(bad)  
  40bd0b:	jo     0x40bca8
  40bd0d:	or     eax,0x7219aa8b
  40bd12:	xchg   esp,eax
  40bd13:	call   0x13656bee
  40bd18:	(bad)  
  40bd19:	xchg   esp,eax
  40bd1a:	inc    esp
  40bd1b:	test   eax,0x44e7cf9c
  40bd20:	mov    ds:0x9a610009,eax
  40bd25:	mov    esi,0x17ad2983
  40bd2a:	sbb    esi,0xe9009976
  40bd30:	(bad)  
  40bd31:	inc    ebx
  40bd32:	or     DWORD PTR [edx],ebx
  40bd34:	sbb    DWORD PTR [edi-0x197bff36],ecx
  40bd3a:	xchg   edi,eax
  40bd3b:	add    esp,ebp
  40bd3d:	aam    0x73
  40bd3f:	or     BYTE PTR [ebx+0x7c12daba],ah
  40bd45:	or     eax,0xeef7458a
  40bd4a:	pop    ebp
  40bd4b:	pop    ebx
  40bd4c:	add    eax,0x790002cc
  40bd51:	inc    edx
  40bd52:	jmp    0x40bcd7
  40bd54:	mov    al,0x5
  40bd56:	push   esi
  40bd57:	lea    edi,[edi+0x29]
  40bd5a:	push   edi
  40bd5b:	push   eax
  40bd5c:	cli    
  40bd5d:	dec    eax
  40bd5e:	inc    DWORD PTR [eax]
  40bd60:	xor    eax,0xfff049
  40bd65:	add    BYTE PTR [ecx+0x7c401075],ch
  40bd6b:	sbb    al,al
  40bd6d:	mov    DWORD PTR [ecx+0xc4337cd],edi
  40bd73:	mov    edi,0xd7cf28c
  40bd78:	add    BYTE PTR [ecx+0x7b89e1b9],cl
  40bd7e:	ror    BYTE PTR [edx],0x7d
  40bd81:	hlt    
  40bd82:	not    DWORD PTR [edi+0x8]
  40bd85:	(bad)  
  40bd86:	sti    
  40bd87:	mov    ebp,0x2dd8e84e
  40bd8c:	add    BYTE PTR [eax],al
  40bd8e:	mov    ecx,0xab890dcc
  40bd93:	or     al,0x0
  40bd95:	add    BYTE PTR [edx+0x48],cl
  40bd98:	or     al,0x1
  40bd9a:	sub    ecx,eax
  40bd9c:	mov    esi,eax
  40bd9e:	scas   eax,DWORD PTR es:[edi]
  40bd9f:	push   esp
  40bda0:	add    al,0x32
  40bda2:	xor    eax,DWORD PTR [eax-0x51]
  40bda5:	add    ah,bh
  40bda7:	or     al,0xf6
  40bda9:	inc    ebp
  40bdaa:	add    BYTE PTR [ebx],cl
  40bdac:	je     0x40be0c
  40bdae:	es adc eax,0x9ad5458d
  40bdb4:	xor    edx,DWORD PTR [eax-0xe]
  40bdb7:	mov    ch,0xf2
  40bdb9:	adc    eax,0x4477b295
  40bdbe:	fnsave [ebx]
  40bdc0:	(bad)  
  40bdc1:	or     ecx,DWORD PTR [eax+0x6c]
  40bdc4:	cs call 0x431534
  40bdca:	add    BYTE PTR [eax],al
  40bdcc:	retf   0xd29d
  40bdcf:	(bad)  
  40bdd0:	adc    bl,ch
  40bdd2:	jg     0x40be40
  40bdd4:	rcr    edx,0xcb
  40bdd7:	adc    al,0x91
  40bdd9:	les    eax,FWORD PTR [edx+0x0]
  40bddc:	pop    esi
  40bddd:	jnp    0x40be2d
  40bddf:	push   0xffffffd5
  40bde1:	sub    eax,0x8405b846
  40bde6:	ret    0xa9e7
  40bde9:	leave  
  40bdea:	add    DWORD PTR [eax],eax
  40bdec:	push   eax
  40bded:	jb     0x40be38
  40bdef:	adc    al,0xef
  40bdf1:	mov    cl,0x77
  40bdf3:	inc    esp
  40bdf4:	cmp    eax,0x8fe7ba2b
  40bdf9:	xor    eax,0x72510005
  40bdfe:	dec    edi
  40bdff:	add    al,0x9b
  40be01:	in     eax,0xca
  40be03:	add    BYTE PTR [edx-0x3],bl
  40be06:	sar    esi,cl
  40be08:	call   0xd580b3a7
  40be0d:	fwait
  40be0e:	aaa    
  40be0f:	push   0xffffffd5
  40be11:	cmp    eax,ebx
  40be13:	mov    cl,BYTE PTR [ebx]
  40be15:	mov    al,BYTE PTR [edi+0x7eb2d494]
  40be1b:	mov    edi,0x24dddba1
  40be20:	dec    esi
  40be21:	in     eax,dx
  40be22:	sti    
  40be23:	mov    ah,BYTE PTR ds:0xd637d20b
  40be29:	sbb    DWORD PTR [eax+eax*1-0x5c],0x3e5109
  40be31:	add    BYTE PTR [ebx+0xa],ch
  40be34:	jmp    0xed75f8b8
  40be39:	rcr    DWORD PTR [ecx+0x6b7ee7c0],0x5
  40be40:	add    BYTE PTR [edx-0x27],cl
  40be43:	cmp    al,0xe6
  40be45:	jl     0x40be9f
  40be47:	add    eax,0x9d2412f
  40be4c:	bound  eax,QWORD PTR [ecx-0x33]
  40be4f:	lea    esi,[ecx+0x760fad27]
  40be55:	add    eax,0xcba3bed5
  40be5a:	push   edi
  40be5b:	sub    eax,0x45aa0c15
  40be60:	add    DWORD PTR [edi+0x19],edi
  40be63:	ret    0x4169
  40be66:	mov    eax,ds:0xf546b202
  40be6b:	push   cs
  40be6c:	pop    ebp
  40be6d:	cmc    
  40be6e:	mov    edi,DWORD PTR [edi-0x45f6351b]
  40be74:	(bad)  
  40be76:	sahf   
  40be77:	sbb    al,0x29
  40be79:	add    al,0x55
  40be7b:	cmp    eax,0x11e103ce
  40be80:	jb     0x40bec2
  40be82:	int    0xb1
  40be84:	es jo  0x40be5c
  40be87:	or     DWORD PTR [ebx+0x40],esp
  40be8a:	push   edx
  40be8b:	pop    edi
  40be8c:	bsr    edx,DWORD PTR [edx+edx*1]
  40be90:	jmp    0x58ff93f2
  40be95:	jnp    0x40be97
  40be97:	add    BYTE PTR [edx],bh
  40be99:	mov    edi,0xadc9cae8
  40be9e:	cli    
  40be9f:	inc    ebx
  40bea0:	aad    0xb6
  40bea2:	mov    al,ds:0xa0b762ee
  40bea7:	mov    BYTE PTR [ebx+0x5675fffa],0x7d
  40beae:	mov    ds:0x9d6e9,eax
  40beb3:	(bad)  
  40beb5:	push   cs
  40beb6:	mov    dh,0x67
  40beb8:	xor    eax,0xefe9febf
  40bebd:	je     0x40be4c
  40bebf:	test   esi,edx
  40bec1:	or     DWORD PTR [eax],eax
  40bec3:	jmp    0x3101:0x36d1fc17
  40beca:	adc    al,0x36
  40becc:	and    ah,dh
  40bece:	or     eax,edx
  40bed0:	sbb    BYTE PTR [edx],0x8d
  40bed3:	ins    DWORD PTR es:[edi],dx
  40bed4:	call   0xd729be40
  40bed9:	pop    ecx
  40beda:	(bad)  
  40bedb:	cld    
  40bedc:	ret    0x4014
  40bedf:	jmp    0x6c4c8937
  40bee4:	xchg   esi,eax
  40bee5:	cmp    ah,BYTE PTR [esi+ebp*8]
  40bee8:	inc    esp
  40bee9:	test   BYTE PTR [ebx+0x4709d6e9],ah
  40beef:	mov    dl,0x9e
  40bef1:	cmp    dl,al
  40bef3:	jae    0x40befc
  40bef5:	imul   edi,edi,0xffffffe8
  40bef8:	(bad)  
  40bef9:	mov    ecx,edi
  40befb:	sbb    eax,DWORD PTR [eax]
  40befd:	add    BYTE PTR [eax],cl
  40beff:	sbb    DWORD PTR [edi],ecx
  40bf01:	xchg   edi,eax
  40bf02:	sub    edi,DWORD PTR [ecx+eax*8-0x95188f]
  40bf09:	call   0xfb5e71e4
  40bf0e:	push   ss
  40bf0f:	mov    bl,0x35
  40bf11:	arpl   WORD PTR [edi+0x65],dx
  40bf14:	(bad)  
  40bf15:	call   0xb1f6cdf0
  40bf1a:	movd   DWORD PTR [esi],mm1
  40bf1d:	pop    edi
  40bf1e:	sbb    DWORD PTR [edi],ecx
  40bf20:	mov    dh,0x93
  40bf22:	mov    esi,0xa400feb7
  40bf27:	cmp    esp,DWORD PTR [eax+eax*1-0x3694f5d4]
  40bf2e:	xor    BYTE PTR [esp+edx*1-0x1],bl
  40bf32:	add    BYTE PTR [esi],bl
  40bf34:	or     al,0x8d
  40bf36:	jo     0x40bf52
  40bf38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf39:	add    ah,ch
  40bf3b:	or     DWORD PTR [eax-0x1],edx
  40bf3e:	icebp  
  40bf3f:	mov    ecx,0x84fc4014
  40bf44:	ret    0x5c0c
  40bf47:	or     bl,BYTE PTR [edi-0x3e]
  40bf4a:	lock or DWORD PTR [eax-0x5df420ee],edi
  40bf51:	ret    
  40bf52:	popa   
  40bf53:	ds jmp 0x40bed9
  40bf56:	ror    ch,1
  40bf58:	jg     0x40bf46
  40bf5a:	mov    eax,0x6f00000a
  40bf5f:	sti    
  40bf60:	push   esi
  40bf61:	push   0xc240000
  40bf66:	add    BYTE PTR [eax],al
  40bf68:	daa    
  40bf69:	sar    ebp,1
  40bf6b:	adc    eax,0x3eb3cc
  40bf70:	stc    
  40bf71:	pop    ecx
  40bf72:	and    al,0x50
  40bf74:	aam    0xf4
  40bf76:	and    BYTE PTR [edx],al
  40bf78:	ins    BYTE PTR es:[edi],dx
  40bf79:	ds xor al,0xe4
  40bf7c:	jle    0x40bfc7
  40bf7e:	add    BYTE PTR [ebp+0xd01d00],cl
  40bf84:	jl     0x40bf8f
  40bf86:	push   eax
  40bf87:	inc    DWORD PTR [edx-0x7a]
  40bf8a:	mov    ds:0x94824,al
  40bf8f:	add    BYTE PTR [edi+ebx*2],bh
  40bf92:	add    BYTE PTR [edx+0x3d],ch
  40bf95:	push   ss
  40bf96:	ror    BYTE PTR [ebp+0xb81d58],0x2c
  40bf9d:	or     DWORD PTR [ecx-0x6d312a44],ecx
  40bfa3:	jmp    FWORD PTR [edx]
  40bfa5:	mov    bl,0xda
  40bfa7:	daa    
  40bfa8:	sti    
  40bfa9:	mov    dl,0x2
  40bfab:	push   0xffffffd5
  40bfad:	sbb    BYTE PTR [esi],al
  40bfaf:	xor    edx,DWORD PTR ds:0x1d236726
  40bfb5:	mov    bl,0x2
  40bfb7:	add    ch,ch
  40bfb9:	mov    esp,0x2dd50020
  40bfbe:	aas    
  40bfbf:	and    al,0x85
  40bfc1:	sub    DWORD PTR [edi+0x23],edi
  40bfc4:	xor    DWORD PTR [ebx+0x2],esi
  40bfca:	dec    esp
  40bfcb:	outs   dx,DWORD PTR ds:[esi]
  40bfcc:	push   ds
  40bfcd:	adc    al,0x48
  40bfcf:	addr16 push ds
  40bfd1:	sbb    BYTE PTR ds:0x7123872a,ah
  40bfd7:	mov    dl,0x2
  40bfd9:	add    BYTE PTR [esi+eiz*2+0x1e],cl
  40bfdd:	adc    al,0xba
  40bfdf:	hlt    
  40bfe0:	jnp    0x40c016
  40bfe2:	int    0xbc
  40bfe4:	inc    edx
  40bfe5:	add    BYTE PTR [edi],bh
  40bfe7:	stos   DWORD PTR es:[edi],eax
  40bfe8:	adc    ebx,ebx
  40bfea:	push   eax
  40bfeb:	outs   dx,BYTE PTR ds:[esi]
  40bfec:	push   ds
  40bfed:	xor    al,0x6
  40bfef:	mov    ds:0xee56d5c7,eax
  40bff4:	imul   BYTE PTR [ecx-0x1b]
  40bff7:	pop    ebp
  40bff8:	aas    
  40bff9:	and    al,0xc1
  40bffb:	push   DWORD PTR [ebx]
  40bffd:	jmp    DWORD PTR [ebx-0x59f43fd1]
  40c003:	jb     0x40c07d
  40c005:	dec    ebx
  40c006:	mov    cl,0xc2
  40c008:	jnp    0x40c065
  40c00a:	mov    ecx,0xb15b7cfa
  40c00f:	out    dx,al
  40c010:	fucomi st,st(4)
  40c012:	pushf  
  40c013:	mov    al,0x2
  40c015:	mov    edx,DWORD PTR [edx]
  40c017:	pop    ebp
  40c018:	nop
  40c019:	and    ebp,DWORD PTR ds:0xd503e909
  40c01f:	mov    cl,0x5b
  40c021:	jl     0x40bff8
  40c023:	or     DWORD PTR [eax+eax*4-0xa],esp
  40c027:	imul   ebp,eax,0x2d92d503
  40c02d:	dec    eax
  40c02e:	add    BYTE PTR [eax],al
  40c030:	dec    eax
  40c031:	inc    ebp
  40c032:	vminsd xmm0,xmm1,QWORD PTR [eax+ebp*2+0x6209d504]
  40c03b:	mov    esi,0x806d92ab
  40c040:	cli    
  40c041:	mov    ebx,0xba52dbe8
  40c046:	push   ebp
  40c047:	(bad)  
  40c048:	jl     0x40c05b
  40c04a:	inc    ecx
  40c04b:	sub    ecx,DWORD PTR [esi+0x160ae909]
  40c051:	xor    eax,0x43d2beec
  40c056:	mov    al,0x43
  40c058:	aad    0x90
  40c05a:	mov    al,0xff
  40c05c:	dec    edi
  40c05d:	mov    edx,0xb4060211
  40c062:	imul   eax,DWORD PTR [eax-0x7],0x59
  40c066:	add    edx,eax
  40c068:	adc    eax,0x627fe90a
  40c06d:	xor    eax,0xb2937af2
  40c072:	iret   
  40c073:	lds    edx,FWORD PTR [ebx+0x1c46cbb]
  40c079:	int3   
  40c07a:	and    BYTE PTR [ebx+0x6f],0xa
  40c07e:	jmp    0xfd8408b5
  40c083:	xor    esp,edx
  40c085:	jae    0x40c0b4
  40c087:	adc    BYTE PTR ds:0xc4b3f3bb,al
  40c08d:	dec    ecx
  40c08e:	jmp    0x34fc2315
  40c093:	test   DWORD PTR [eax],0x81100
  40c099:	call   0xe1b4ca74
  40c09e:	dec    ebx
  40c09f:	jne    0x40c0ef
  40c0a1:	(bad)  
  40c0a3:	enter  0xf871,0x3
  40c0a7:	mov    dl,0x3e
  40c0a9:	cwde   
  40c0aa:	adc    edi,DWORD PTR [esp+ecx*4-0x17a60adb]
  40c0b1:	or     cl,dh
  40c0b3:	pop    es
  40c0b4:	add    BYTE PTR [edx+0x6e4b9050],dl
  40c0ba:	repnz dec DWORD PTR [esi+0x9d661]
  40c0c1:	idiv   BYTE PTR [edx-0x1d]
  40c0c4:	add    cl,ch
  40c0c6:	(bad)  
  40c0c7:	mov    es,WORD PTR [esi-0x4f]
  40c0ca:	(bad)  
  40c0cc:	je     0x40c0aa
  40c0ce:	iret   
  40c0cf:	(bad)  
  40c0d0:	jae    0x40c0c2
  40c0d2:	pop    edi
  40c0d3:	ret    
  40c0d4:	out    0x2,eax
  40c0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d7:	mov    ebx,0x827442fe
  40c0dc:	pop    ebx
  40c0dd:	add    eax,0xadb60bbd
  40c0e2:	fimul  DWORD PTR ds:0x733a58b
  40c0e8:	cmp    ebp,DWORD PTR [edx]
  40c0ea:	sbb    al,BYTE PTR ds:0x36a2a139
  40c0f0:	adc    BYTE PTR [edi],al
  40c0f2:	(bad)  
  40c0f4:	or     ebp,DWORD PTR [ecx+0x1a]
  40c0f7:	out    0xb,al
  40c0f9:	in     eax,dx
  40c0fa:	add    BYTE PTR [eax],al
  40c0fc:	and    al,0xa7
  40c0fe:	call   0x4a970e
  40c103:	test   BYTE PTR [eax+0x46],0x24
  40c107:	in     eax,dx
  40c108:	in     eax,dx
  40c109:	ss xchg ebp,ebp
  40c10c:	fnsave [esi-0x45d99af2]
  40c112:	inc    BYTE PTR [eax]
  40c114:	ins    BYTE PTR es:[edi],dx
  40c115:	xor    eax,DWORD PTR [ebx+0x24]
  40c118:	or     dh,dh
  40c11a:	(bad)  
  40c11b:	jbe    0x40c155
  40c11d:	lds    esi,FWORD PTR [edi+edi*8]
  40c120:	sub    DWORD PTR [edx+0x13],edi
  40c123:	inc    eax
  40c124:	sub    al,0x3b
  40c126:	mov    edi,0xfea1b90f
  40c12b:	(bad)  
  40c12c:	cmp    al,0xcc
  40c12e:	inc    edx
  40c12f:	and    al,0xc8
  40c131:	mov    ebp,0x22153372
  40c136:	and    eax,DWORD PTR [esp+edi*8-0x56f0fffb]
  40c13d:	lds    edi,FWORD PTR [eax]
  40c13f:	ret    
  40c140:	and    edi,DWORD PTR [ebx]
  40c142:	xchg   edx,eax
  40c143:	add    ah,ch
  40c145:	add    eax,0xfd84ce8b
  40c14a:	lods   eax,DWORD PTR ds:[esi]
  40c14b:	add    ah,bh
  40c14d:	adc    bl,al
  40c14f:	je     0x40c13b
  40c151:	inc    eax
  40c152:	pop    esi
  40c153:	jl     0x40c191
  40c155:	fsubp  st(1),st
  40c157:	and    eax,0xce8b0dbd
  40c15c:	adc    al,0x1a
  40c15e:	scas   al,BYTE PTR es:[edi]
  40c15f:	add    BYTE PTR [eax],al
  40c161:	add    BYTE PTR [eax+edi*1+0x1ae075bf],ch
  40c168:	fcomi  st,st(6)
  40c16a:	js     0x40c185
  40c16c:	je     0x40c16f
  40c16e:	dec    eax
  40c16f:	cld    
  40c170:	cmp    BYTE PTR [eax+ebx*4+0x45],bl
  40c174:	setne  ah
  40c177:	add    eax,ebx
  40c179:	jne    0x40c1d7
  40c17b:	inc    eax
  40c17c:	and    DWORD PTR [esp],0xd
  40c180:	add    BYTE PTR [eax],al
  40c182:	pop    esp
  40c183:	inc    eax
  40c184:	and    DWORD PTR [eax+edx*8],0xc
  40c188:	add    BYTE PTR [eax],al
  40c18a:	lods   al,BYTE PTR ds:[esi]
  40c18b:	xor    cl,ch
  40c18d:	call   0xffd47467
  40c192:	bound  ebx,QWORD PTR [ecx+eax*8]
  40c195:	jge    0x40c145
  40c197:	cmp    eax,0xa26d2377
  40c19c:	add    al,BYTE PTR [eax]
  40c19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c19f:	sub    eax,0xa1e12377
  40c1a4:	add    al,BYTE PTR [eax]
  40c1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a7:	call   0xef77:0xa2d53dc1
  40c1ae:	out    dx,al
  40c1af:	xchg   ebx,eax
  40c1b0:	dec    esi
  40c1b1:	adc    BYTE PTR [esi+0x69],cl
  40c1b4:	ja     0x40c17c
  40c1b6:	sub    eax,0x12fecdb0
  40c1bb:	fwait
  40c1bc:	lahf   
  40c1bd:	adc    edi,edx
  40c1bf:	mov    ds:0xef0bdb0f,al
  40c1c4:	pop    ds
  40c1c5:	je     0x40c1c7
  40c1c7:	add    bh,dl
  40c1c9:	mov    edi,0x57f3b57e
  40c1ce:	les    edi,FWORD PTR [eax]
  40c1d0:	mov    DWORD PTR [esi],eax
  40c1d2:	dec    eax
  40c1d3:	cmovs  esp,ebx
  40c1d6:	or     bl,al
  40c1d8:	retf   0xc726
  40c1db:	std    
  40c1dc:	shl    bh,cl
  40c1de:	ret    
  40c1df:	jae    0x40c1d2
  40c1e1:	scas   al,BYTE PTR es:[edi]
  40c1e2:	ja     0x40c1c2
  40c1e4:	lods   eax,DWORD PTR ds:[esi]
  40c1e5:	pop    es
  40c1e6:	aam    0xfe
  40c1e8:	mov    edx,0xbd56a7d3
  40c1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ee:	sar    dh,cl
  40c1f0:	stos   BYTE PTR es:[edi],al
  40c1f1:	or     DWORD PTR [ebp+edi*8-0x5e],esi
  40c1f5:	pop    es
  40c1f6:	jbe    0x40c26b
  40c1f8:	icebp  
  40c1f9:	xchg   edx,eax
  40c1fa:	ficomp DWORD PTR [eax-0x4b]
  40c1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fe:	add    cl,BYTE PTR [ebx+0x3ff0eec0]
  40c204:	aad    0x55
  40c206:	jg     0x40c22b
  40c208:	aad    0x9
  40c20a:	call   0xde9a9712
  40c20f:	ficomp DWORD PTR [edi-0xa]
  40c212:	mov    al,ds:0x100a1516
  40c217:	pusha  
  40c218:	mov    cl,0x45
  40c21a:	cmp    eax,0x53d520a
  40c21f:	push   eax
  40c220:	dec    edx
  40c221:	loopne 0x40c212
  40c223:	pop    edi
  40c224:	stc    
  40c225:	inc    ecx
  40c226:	xor    eax,0xcd3d3a0a
  40c22b:	dec    ebx
  40c22c:	add    BYTE PTR [eax],al
  40c22e:	xor    ah,al
  40c230:	imul   ecx,DWORD PTR [eax-0xf],0x19
  40c234:	or     edx,0x90e90b8e
  40c23a:	xchg   esi,eax
  40c23b:	in     eax,dx
  40c23c:	loopne 0x40c291
  40c23e:	adc    bl,bh
  40c240:	imul   ecx,DWORD PTR [eax+0x3e861b6],0xffffffd5
  40c247:	mov    eax,ds:0xb7faeac2
  40c24c:	jae    0x40c296
  40c24e:	mov    ecx,0xc8a05159
  40c253:	or     ebp,ecx
  40c255:	bound  eax,QWORD PTR [ebx+0x79a96254]
  40c25b:	int3   
  40c25c:	fwait
  40c25d:	mov    ?,WORD PTR [esi-0x6f7169a5]
  40c263:	mov    ds:0x9d503be,al
  40c268:	inc    ecx
  40c269:	inc    ebp
  40c26a:	ror    DWORD PTR [ecx],1
  40c26c:	jmp    0xba9c5267
  40c271:	push   esi
  40c272:	stos   BYTE PTR es:[edi],al
  40c273:	cmp    eax,0x5faa8ef9
  40c278:	push   cs
  40c279:	sbb    DWORD PTR ds:0x2a03a91d,ebp
  40c27f:	and    esi,0x4124ab
  40c285:	jmp    0x745eb360
  40c28a:	sar    bl,cl
  40c28c:	mov    edi,0xd77720d2
  40c291:	pop    edx
  40c292:	add    BYTE PTR [eax],al
  40c294:	adc    DWORD PTR [edx],ecx
  40c296:	(bad)  
  40c297:	sub    al,0xc9
  40c299:	or     eax,0x23d6e900
  40c29e:	add    al,0x74
  40c2a0:	lahf   
  40c2a1:	or     eax,0xb84fbe50
  40c2a6:	xor    eax,0x1531ddb6
  40c2ab:	sub    ecx,edx
  40c2ad:	mov    al,dh
  40c2af:	icebp  
  40c2b0:	pop    ss
  40c2b1:	inc    esi
  40c2b2:	adc    BYTE PTR [ecx+edi*2],dl
  40c2b5:	pop    esp
  40c2b6:	push   ebx
  40c2b7:	add    ebx,edx
  40c2b9:	pop    edx
  40c2ba:	push   ebx
  40c2bb:	mov    ds,ebp
  40c2bd:	add    eax,0xb6defcff
  40c2c2:	xor    eax,0x148ded7e
  40c2c7:	sub    ecx,ebx
  40c2c9:	add    BYTE PTR [ebp-0x1b],0xfb
  40c2cd:	retf   
  40c2ce:	je     0x40c2c0
  40c2d0:	arpl   bp,cx
  40c2d2:	out    0xf3,eax
  40c2d4:	(bad)  
  40c2d5:	or     DWORD PTR [eax],eax
  40c2d7:	inc    edx
  40c2d8:	push   0x66
  40c2da:	add    BYTE PTR [esi-0xa3dab85],ch
  40c2e0:	(bad)  
  40c2e1:	pop    edi
  40c2e2:	push   edi
  40c2e3:	jb     0x40c26b
  40c2e5:	scas   al,BYTE PTR es:[edi]
  40c2e6:	and    ch,cl
  40c2e8:	(bad)  
  40c2e9:	or     DWORD PTR [ebx+0x3c82d2a7],ecx
  40c2ef:	(bad)  
  40c2f0:	int    0x49
  40c2f2:	add    BYTE PTR [esi+edx*4+0x3a],ah
  40c2f6:	pop    es
  40c2f7:	mov    ecx,0xdf970000
  40c2fc:	add    BYTE PTR [edi+0x8b09d2],0x82
  40c303:	cmp    DWORD PTR [esi-0xa58d8c],0xfea0efd7
  40c30d:	pop    esi
  40c30e:	dec    edx
  40c30f:	iret   
  40c310:	mov    DWORD PTR [esi+0x64],eax
  40c313:	(bad)  
  40c314:	mov    esi,0xff5a6774
  40c319:	adc    eax,0x401f10
  40c31e:	out    dx,eax
  40c31f:	jecxz  0x40c328
  40c321:	add    BYTE PTR [edi+0x5e],bh
  40c324:	mov    ebp,esp
  40c326:	mov    ebp,0x2c011679
  40c32b:	or     dl,BYTE PTR [ebx+0x56]
  40c32e:	mov    ch,0x4e
  40c330:	cld    
  40c331:	and    ecx,0xffffffc9
  40c334:	add    BYTE PTR [edi-0x59],dl
  40c337:	jp     0x40c2f6
  40c339:	add    BYTE PTR [ebx+0x19],cl
  40c33c:	test   BYTE PTR [ecx+esi*1-0x77],dh
  40c340:	(bad)  
  40c341:	dec    al
  40c343:	and    DWORD PTR [esi-0x7efffffc],0x8009eccf
  40c34d:	add    bh,al
  40c34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c350:	jb     0x40c392
  40c352:	cld    
  40c353:	and    DWORD PTR [eax],eax
  40c355:	jne    0x40c348
  40c357:	xor    al,0x2f
  40c359:	je     0x40c387
  40c35b:	or     ch,al
  40c35d:	scas   eax,DWORD PTR es:[edi]
  40c35e:	add    BYTE PTR [eax],al
  40c360:	mov    ecx,eax
  40c362:	std    
  40c363:	push   0xffffffbc
  40c365:	push   edx
  40c366:	push   0x4f4f64
  40c36b:	push   0xffffffac
  40c36d:	loope  0x40c3a2
  40c36f:	je     0x40c3dd
  40c371:	or     edi,edi
  40c373:	jne    0x40c319
  40c375:	pop    esi
  40c376:	push   DWORD PTR [esi-0x50]
  40c379:	retf   0x7413
  40c37c:	aad    0xb5
  40c37e:	inc    edx
  40c37f:	add    BYTE PTR [ebp+ebp*2+0xa],cl
  40c383:	test   DWORD PTR [ebp-0x2bf47944],edx
  40c389:	mov    ds:0x2dd96a02,al
  40c38e:	dec    edi
  40c38f:	or     BYTE PTR [ecx+ecx*4],ah
  40c392:	dec    ebp
  40c393:	push   eax
  40c394:	call   0x2a2:0xd5010be6
  40c39b:	dec    eax
  40c39d:	pop    edx
  40c39e:	pop    ss
  40c39f:	inc    eax
  40c3a0:	aad    0xca
  40c3a2:	xchg   edx,eax
  40c3a3:	mov    bl,0xd5
  40c3a5:	mov    ds:0xddc53c8b,al
  40c3aa:	inc    edx
  40c3ab:	add    BYTE PTR [esi-0x5d],bh
  40c3ae:	add    al,BYTE PTR [eax]
  40c3b0:	jne    0x40c359
  40c3b2:	push   es
  40c3b3:	jne    0x40c395
  40c3b5:	call   0xbf86:0xa2d5b4ea
  40c3bc:	shl    BYTE PTR [esi],cl
  40c3be:	xchg   bh,bh
  40c3c0:	sbb    ah,BYTE PTR [ebx+0x448d]
  40c3c6:	fst    QWORD PTR [edx]
  40c3c8:	pop    DWORD PTR [esp+ecx*1-0x5a013fcb]
  40c3cf:	arpl   WORD PTR [ebp+0x8],ax
  40c3d2:	aad    0xa1
  40c3d4:	add    al,BYTE PTR [eax]
  40c3d6:	repnz mov ch,0x96
  40c3d9:	adc    dl,BYTE PTR [ebp+0x68bf85a2]
  40c3df:	leave  
  40c3e0:	jp     0x40c3e0
  40c3e2:	aad    0xa2
  40c3e4:	add    bh,BYTE PTR [ecx]
  40c3e6:	sbb    BYTE PTR [ebx-0x44efbdf1],bh
  40c3ec:	enter  0xd883,0xf9
  40c3f0:	sar    dh,0xba
  40c3f3:	mov    ds:0x9ac848d,al
  40c3f8:	daa    
  40c3f9:	shr    BYTE PTR [ebx-0x66e9e1a7],0x17
  40c400:	test   eax,0xe14e4c03
  40c405:	xchg   BYTE PTR [edx+0x3d],dl
  40c408:	test   al,0x2d
  40c40a:	in     al,0x86
  40c40c:	arpl   WORD PTR [ebx+0x2af5b480],bp
  40c412:	adc    eax,0x503a93e
  40c417:	mov    ch,0xfb
  40c419:	adc    eax,ebx
  40c41b:	dec    ecx
  40c41c:	jmp    0x6a42ddab
  40c421:	enter  0x21ce,0x35
  40c425:	cmp    BYTE PTR [ebp+0x887409],dl
  40c42b:	add    cl,dl
  40c42d:	mov    dl,0xbe
  40c42f:	mov    edi,0x19b65943
  40c434:	jne    0x40c44d
  40c436:	sub    DWORD PTR [esi+ebx*2],eax
  40c439:	dec    esi
  40c43a:	icebp  
  40c43b:	push   edx
  40c43c:	push   esi
  40c43d:	leave  
  40c43e:	stc    
  40c43f:	push   ebx
  40c440:	push   eax
  40c441:	mov    es,WORD PTR [eax+0x38b41bbe]
  40c447:	mov    edi,0xd7860188
  40c44c:	push   edi
  40c44d:	ss in  eax,dx
  40c44f:	add    ecx,DWORD PTR [ecx-0x7e40e5e6]
  40c455:	sbb    DWORD PTR [esi+0x39],ebp
  40c458:	loope  0x40c40e
  40c45a:	fimul  WORD PTR [ebx]
  40c45c:	jmp    0x1d3e:0xd5bc69db
  40c463:	sbb    DWORD PTR [ecx-0x4b],0xffffffe8
  40c467:	cmp    bh,ah
  40c469:	push   esi
  40c46a:	rcl    DWORD PTR [edx],cl
  40c46c:	cmp    eax,0xd543b552
  40c471:	mov    dl,0xff
  40c473:	mov    esi,0x6ad6b2ce
  40c478:	jno    0x40c484
  40c47a:	jne    0x40c481
  40c47c:	push   0x3e
  40c47e:	sbb    BYTE PTR [esi],bl
  40c480:	fcomp  QWORD PTR ds:0x9ece96a
  40c486:	call   DWORD PTR [edi-0x6aeb4d22]
  40c48c:	in     eax,dx
  40c48d:	dec    ecx
  40c48e:	add    BYTE PTR [edx+0x0],ch
  40c491:	add    BYTE PTR [ecx+0xa],al
  40c494:	jne    0x40c483
  40c496:	dec    esp
  40c497:	jae    0x40c483
  40c499:	out    0x3e,al
  40c49b:	das    
  40c49c:	(bad)  
  40c49d:	out    0x2b,al
  40c49f:	stc    
  40c4a0:	mov    edi,0xc94f033e
  40c4a5:	stos   DWORD PTR es:[edi],eax
  40c4a6:	ret    0x5509
  40c4a9:	bound  eax,QWORD PTR [edx-0x5ce5aea6]
  40c4af:	pop    edx
  40c4b0:	xor    edi,DWORD PTR [esi+0x3438a34f]
  40c4b6:	in     eax,0x3c
  40c4b8:	pop    es
  40c4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ba:	popf   
  40c4bb:	add    eax,0xb2b6e900
  40c4c0:	cmp    DWORD PTR [esi-0x1e95fb16],edx
  40c4c6:	sbb    DWORD PTR [ebx-0x1],0xfffffff4
  40c4ca:	out    dx,al
  40c4cb:	sbb    eax,DWORD PTR [eax-0x17]
  40c4ce:	push   edi
  40c4cf:	(bad)  
  40c4d0:	or     esi,DWORD PTR [eax-0x6b]
  40c4d3:	mov    cl,0xbe
  40c4d5:	jmp    0x1640cec0
  40c4da:	inc    ecx
  40c4db:	mov    eax,ds:0x7ed6e945
  40c4e0:	xlat   BYTE PTR ds:[ebx]
  40c4e1:	inc    DWORD PTR fs:[ebx]
  40c4e4:	test   BYTE PTR [edx-0x2a],ah
  40c4e7:	or     DWORD PTR [eax],eax
  40c4e9:	push   0x15
  40c4eb:	sbb    al,BYTE PTR [eax]
  40c4ed:	add    BYTE PTR [eax+0x3006a18],cl
  40c4f3:	repnz ud0 eax,DWORD PTR [eax]
  40c4f7:	add    BYTE PTR [ecx-0x43bfef9e],bl
  40c4fd:	or     DWORD PTR [edx],eax
  40c4ff:	add    DWORD PTR [esi+eax*1+0x42316275],edi
  40c506:	cld    
  40c507:	push   eax
  40c508:	aaa    
  40c509:	inc    edx
  40c50a:	or     BYTE PTR [edi+0x4f],dl
  40c50d:	jae    0x40c57d
  40c50f:	or     BYTE PTR ds:0xa9fffc4a,al
  40c515:	repnz adc al,0x40
  40c518:	ins    BYTE PTR es:[edi],dx
  40c519:	cmp    DWORD PTR [esi+0x437f3574],0x72cdf9fc
  40c523:	cmp    BYTE PTR [ebp+0x4b],ch
  40c526:	clc    
  40c527:	mov    esi,DWORD PTR [ecx+0x304d3975]
  40c52d:	std    
  40c52e:	test   DWORD PTR ss:[edx-0xd74470f],ecx
  40c535:	add    DWORD PTR [ebx],eax
  40c537:	enter  0x6214,0x43
  40c53b:	add    BYTE PTR [edx+ecx*4],bh
  40c53e:	mov    esi,0x73751974
  40c543:	cld    
  40c544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c545:	or     eax,DWORD PTR [ebx]
  40c547:	inc    esi
  40c548:	sub    BYTE PTR [ecx+0x50],bl
  40c54b:	dec    DWORD PTR [ecx]
  40c54d:	push   ss
  40c54e:	push   ss
  40c54f:	inc    eax
  40c550:	cld    
  40c551:	add    BYTE PTR [ebx-0x4],0x6f
  40c555:	ror    DWORD PTR [edx],0x1
  40c558:	stos   BYTE PTR es:[edi],al
  40c559:	add    ebx,ebp
  40c55b:	nop
  40c55c:	add    BYTE PTR [eax],al
  40c55e:	iret   
  40c55f:	mov    BYTE PTR gs:[esi-0x4],al
  40c563:	add    eax,0x188701b0
  40c568:	push   ebx
  40c569:	call   0x86e643
  40c56e:	aad    0x25
  40c570:	mov    dh,0x73
  40c572:	rol    BYTE PTR [edi-0xa],cl
  40c575:	out    0x48,eax
  40c577:	imul   eax,DWORD PTR [edx],0x5ce30700
  40c57d:	pop    esi
  40c57e:	push   cs
  40c57f:	jmp    0xeb87:0x6dd50bc1
  40c586:	push   esi
  40c587:	call   DWORD PTR [edi]
  40c589:	push   ebx
  40c58a:	add    dl,ah
  40c58c:	xlat   BYTE PTR ds:[ebx]
  40c58d:	push   edx
  40c58e:	std    
  40c58f:	and    al,BYTE PTR [eax+eax*1]
  40c592:	aad    0x9c
  40c594:	add    BYTE PTR [ebx-0x11],dl
  40c597:	mov    eax,ds:0xa2d5002a
  40c59c:	inc    edx
  40c59d:	(bad)  
  40c59e:	call   0x6a9d5071
  40c5a3:	test   al,0x15
  40c5a5:	mov    ah,0xc7
  40c5a7:	loop   0x40c5ac
  40c5a9:	mov    ebx,DWORD PTR [ebp+0x24]
  40c5ac:	mov    esp,0x9e26e2fe
  40c5b1:	dec    DWORD PTR [edx-0x5d]
  40c5b4:	push   esp
  40c5b5:	mov    esi,0x2d2d5
  40c5ba:	mov    ds:0xd5460bca,eax
  40c5bf:	mov    ds:0x4489,al
  40c5c4:	and    DWORD PTR [edi+edi*4+0x5e39a873],ebp
  40c5cb:	clc    
  40c5cc:	fdivr  st(5),st
  40c5ce:	adc    esi,DWORD PTR [esp+eiz*8-0xd]
  40c5d2:	mov    esp,0x1587e574
  40c5d7:	in     al,dx
  40c5d8:	out    0xe2,eax
  40c5da:	add    edi,DWORD PTR ds:0x2a1d7
  40c5e0:	push   0xe5448f16
  40c5e5:	or     DWORD PTR [ecx-0x48fe6678],edi
  40c5eb:	mov    esp,0x3355b561
  40c5f0:	fnsave [eax+0x49e03ff3]
  40c5f6:	jmp    0xfd764881
  40c5fb:	mov    BYTE PTR [ecx],dl
  40c5fd:	mov    edx,0xe426c0f1
  40c602:	out    0x46,eax
  40c604:	lods   eax,DWORD PTR ds:[esi]
  40c605:	mov    ah,BYTE PTR [ebx+0x48b0a2bb]
  40c60b:	add    esp,DWORD PTR [edx]
  40c60d:	jecxz  0x40c5c8
  40c60f:	mov    fs,WORD PTR [ecx]
  40c611:	sahf   
  40c612:	mov    bh,0x53
  40c614:	mov    dh,BYTE PTR [esi]
  40c616:	std    
  40c617:	push   ebx
  40c618:	adc    BYTE PTR [esi],0x41
  40c61b:	adc    DWORD PTR ds:0xe6c36c0a,edx
  40c621:	push   ss
  40c622:	bound  eax,QWORD PTR [esi+0x65]
  40c625:	hlt    
  40c626:	sub    ebp,DWORD PTR [eax+0x6ce60000]
  40c62c:	ror    DWORD PTR [edi],1
  40c62e:	add    dh,BYTE PTR [ecx+0x49e473fb]
  40c634:	jmp    0xe7f157fa
  40c639:	mov    edx,0x77d0b5c9
  40c63e:	xchg   ecx,eax
  40c63f:	or     ecx,ebp
  40c641:	push   edx
  40c642:	xor    dl,BYTE PTR [esi]
  40c644:	mov    eax,ds:0x47099516
  40c649:	cld    
  40c64a:	xor    DWORD PTR [eax+0x361a0c13],0x753eabe5
  40c654:	call   0x8687255c
  40c659:	pop    ebx
  40c65a:	sahf   
  40c65b:	ret    0x8aa
  40c65e:	aad    0x56
  40c660:	add    BYTE PTR [edx+0x3d],ah
  40c663:	mov    ebp,ebx
  40c665:	rol    DWORD PTR [ebx-0x5b99a8a9],1
  40c66b:	std    
  40c66c:	mov    esp,ss
  40c66e:	xor    ch,BYTE PTR [eax+0x9d9d35e]
  40c674:	test   BYTE PTR [ecx],ch
  40c676:	add    eax,0x5922333e
  40c67b:	cs cli 
  40c67d:	jmp    0x40c684
  40c67f:	add    eax,0xa30fed6a
  40c684:	add    edx,edi
  40c686:	outs   dx,DWORD PTR ds:[esi]
  40c687:	mov    al,0x74
  40c689:	stc    
  40c68a:	push   ebx
  40c68b:	or     BYTE PTR ss:[esi],bl
  40c68e:	add    BYTE PTR [eax],al
  40c690:	in     al,0xb1
  40c692:	(bad)  
  40c693:	pushf  
  40c694:	cmp    ah,BYTE PTR [edi-0x4fb1ed20]
  40c69a:	sub    DWORD PTR [ecx],0xffffffc5
  40c69d:	pop    ss
  40c69e:	push   ebx
  40c69f:	call   0x8426:0x7cff5b23
  40c6a6:	(bad)  
  40c6a7:	bound  ebx,QWORD PTR [edi+0x1fe58da7]
  40c6ad:	mov    al,0x83
  40c6af:	test   eax,0xe8b30baa
  40c6b4:	(bad)  
  40c6b5:	ss in  al,dx
  40c6b7:	ror    DWORD PTR [ebx+0x46],0x0
  40c6bb:	jmp    0xd230fd3f
  40c6c0:	inc    ebx
  40c6c1:	inc    esi
  40c6c2:	add    cl,ch
  40c6c4:	pusha  
  40c6c5:	int3   
  40c6c6:	pop    esi
  40c6c7:	jp     0xd736888d
  40c6cd:	push   esp
  40c6ce:	mov    ecx,DWORD PTR [ebp+0x5685881]
  40c6d4:	lds    ecx,FWORD PTR [ecx+0x0]
  40c6d7:	mov    fs,ebp
  40c6d9:	adc    DWORD PTR gs:[eax],eax
  40c6dc:	lods   al,BYTE PTR ds:[esi]
  40c6dd:	add    eax,0x8a544589
  40c6e2:	mov    esi,0xc1bdfe75
  40c6e7:	push   ebx
  40c6e8:	ret    
  40c6e9:	fnsave [edi+0x74]
  40c6ec:	sub    al,0xb
  40c6ee:	push   eax
  40c6ef:	xor    edi,DWORD PTR [ebx+0x73]
  40c6f2:	adc    ebp,DWORD PTR [eax+0x4ace0000]
  40c6f8:	add    BYTE PTR [ebx+0x74d98a04],cl
  40c6fe:	jo     0x40c6e2
  40c700:	add    edx,DWORD PTR [eax]
  40c702:	lods   al,BYTE PTR ds:[esi]
  40c703:	or     ch,BYTE PTR [edx+0x8]
  40c706:	jmp    0x40c6c1
  40c708:	mov    edx,0xff0a7fc6
  40c70d:	adc    eax,0x401474
  40c712:	daa    
  40c713:	jae    0x40c698
  40c715:	push   DWORD PTR [eax-0x61]
  40c718:	push   esp
  40c719:	lea    esi,[ecx]
  40c71b:	jbe    0x40c76b
  40c71d:	push   edi
  40c71e:	sbb    dh,BYTE PTR [ebp+ecx*1+0x0]
  40c722:	ins    BYTE PTR es:[edi],dx
  40c723:	fdiv   st(7),st
  40c725:	mov    cl,dh
  40c727:	jbe    0x40c726
  40c729:	shl    ecx,cl
  40c72b:	retf   0xe73
  40c72e:	out    0xee,eax
  40c730:	sti    
  40c731:	cmp    esi,DWORD PTR [edx]
  40c733:	add    BYTE PTR [ebx-0x3a],al
  40c736:	or     BYTE PTR [ecx],0x7
  40c739:	add    BYTE PTR [edi],dl
  40c73b:	or     edx,DWORD PTR [edi-0x18]
  40c73e:	push   esp
  40c73f:	dec    ecx
  40c740:	add    BYTE PTR [eax],al
  40c742:	fidiv  DWORD PTR [eax+0x73]
  40c745:	clc    
  40c746:	imul   edi,esi,0xffffffbb
  40c749:	adc    bh,ah
  40c74b:	add    eax,0x4c9bc78b
  40c750:	leave  
  40c751:	ret    
  40c752:	loope  0x40c7d0
  40c754:	jmp    0xfc:0x1f23d551
  40c75b:	add    ch,dl
  40c75d:	test   BYTE PTR [esp+esi*1+0x42cd75],0xa2
  40c765:	sbb    eax,0xa85fc3f
  40c76a:	add    al,0x6a
  40c76c:	mov    bh,0x1f
  40c76e:	das    
  40c76f:	or     dl,ah
  40c771:	in     eax,dx
  40c772:	jle    0x40c733
  40c774:	pusha  
  40c775:	js     0x40c770
  40c777:	inc    esp
  40c778:	ror    edi,1
  40c77a:	inc    ebx
  40c77b:	jmp    eax
  40c77d:	cs push ss
  40c77f:	inc    eax
  40c780:	aad    0x1f
  40c782:	mov    esp,0x8d0b4079
  40c787:	inc    esp
  40c788:	mov    cl,0x63
  40c78a:	xor    bh,BYTE PTR cs:[ebp-0x2affc146]
  40c791:	aaa    
  40c792:	mov    esp,0xdf979a84
  40c797:	mov    WORD PTR [eax],ds
  40c799:	pop    ss
  40c79a:	push   esp
  40c79b:	push   edi
  40c79c:	inc    eax
  40c79e:	mov    bh,0x74
  40c7a0:	int    0x3
  40c7a2:	rol    BYTE PTR [edx+0x102da27d],cl
  40c7a8:	pop    esi
  40c7a9:	pop    esi
  40c7aa:	push   es
  40c7ab:	test   DWORD PTR [ebp+0x108afe37],edx
  40c7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b2:	mov    DWORD PTR [edi],eax
  40c7b4:	dec    esi
  40c7b5:	fs stos DWORD PTR es:[edi],eax
  40c7b7:	pop    es
  40c7b8:	stos   BYTE PTR es:[edi],al
  40c7b9:	retf   0x43f7
  40c7bc:	aad    0xa2
  40c7be:	repz mov edi,0xe4a20000
  40c7c4:	retf   0xcdc1
  40c7c7:	mov    ds:0x12418b4d,al
  40c7cc:	test   DWORD PTR [ecx+ebp*1-0x5d],esp
  40c7d0:	push   eax
  40c7d1:	mov    ebp,eax
  40c7d3:	or     DWORD PTR [ecx+0xe],esi
  40c7d6:	xchg   ebp,eax
  40c7d7:	or     DWORD PTR [esi],esi
  40c7d9:	xchg   DWORD PTR [ecx-0x2ad1c753],ebx
  40c7df:	lods   al,BYTE PTR ds:[esi]
  40c7e0:	adc    ecx,DWORD PTR [eax]
  40c7e2:	add    dh,BYTE PTR [edi]
  40c7e4:	icebp  
  40c7e5:	mov    eax,0x2ea88720
  40c7ea:	mov    dl,0xf2
  40c7ec:	sub    edi,DWORD PTR [eax+0xe6def66]
  40c7f2:	xor    DWORD PTR [eax],ebx
  40c7f4:	test   eax,0xe2b25603
  40c7f9:	add    al,BYTE PTR cs:[ecx-0x36a84855]
  40c800:	jmp    0xd544:0x2ba1fa2f
  40c807:	or     DWORD PTR [edx-0x45],esi
  40c80a:	pop    ecx
  40c80b:	lods   al,BYTE PTR ds:[esi]
  40c80c:	mov    esp,0x2d465817
  40c811:	push   ebx
  40c812:	or     ch,BYTE PTR [ebp+0x369a079b]
  40c818:	icebp  
  40c819:	mov    eax,0x21088a8
  40c81e:	add    BYTE PTR [esi],al
  40c820:	(bad)  
  40c821:	shr    BYTE PTR [edi+0x1],0x9e
  40c825:	stos   DWORD PTR es:[edi],eax
  40c826:	add    BYTE PTR [eax],al
  40c828:	mov    al,ds:0xa603e948
  40c82d:	leave  
  40c82e:	xchg   ebp,eax
  40c82f:	pop    ecx
  40c830:	pushf  
  40c831:	(bad)  
  40c832:	loopne 0x40c837
  40c834:	or     BYTE PTR [ecx-0x76fbaa2c],al
  40c83a:	inc    ebx
  40c83b:	mov    eax,0x4f3f5752
  40c840:	dec    edx
  40c841:	fnsave ss:[esi+0x43dac5e9]
  40c848:	aad    0xac
  40c84a:	xor    edx,DWORD PTR [eax]
  40c84c:	pop    esi
  40c84d:	idiv   bh
  40c84f:	push   0x620049c4
  40c854:	add    DWORD PTR [ebp+0x44],edi
  40c857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c858:	sub    DWORD PTR [esp+esi*2-0x1547413],0xff54d6e9
  40c863:	adc    al,0xd1
  40c865:	lods   al,BYTE PTR ds:[esi]
  40c866:	aad    0x6c
  40c868:	adc    DWORD PTR ds:0x5dc47e5c,esi
  40c86e:	adc    DWORD PTR [ecx],ebp
  40c870:	ror    DWORD PTR [eax+0x5aa5f3f7],1
  40c876:	mov    ebp,DWORD PTR [edx+eiz*1+0x13eed7ef]
  40c87d:	(bad)  
  40c87e:	aas    
  40c87f:	fisttp QWORD PTR [eax]
  40c881:	mov    ds:0x9d6aa49,al
  40c886:	mov    DWORD PTR [esi+edi*2+0xb5bf86],ebp
  40c88d:	add    BYTE PTR [eax+ecx*2-0x21bc9ad],ch
  40c894:	dec    edi
  40c895:	cs (bad) 
  40c897:	leave  
  40c898:	adc    DWORD PTR [ecx-0xa8b552a],ebp
  40c89e:	pop    ebp
  40c89f:	inc    esi
  40c8a0:	cld    
  40c8a1:	mov    ecx,0xb6f83643
  40c8a6:	dec    ebx
  40c8a7:	or     BYTE PTR ss:[esi],al
  40c8aa:	mov    ecx,DWORD PTR [eax+0x18a5e8f7]
  40c8b0:	mov    ebp,DWORD PTR [esi+eax*8-0x2a8a407c]
  40c8b7:	jle    0x40c905
  40c8b9:	in     eax,0x49
  40c8bb:	add    ecx,DWORD PTR [ebx+0x9a09124]
  40c8c1:	(bad)  
  40c8c2:	add    eax,0x960de7b2
  40c8c7:	or     DWORD PTR [eax],eax
  40c8c9:	add    BYTE PTR [edi],bh
  40c8cb:	(bad)  
  40c8cc:	pop    ebp
  40c8cd:	pop    esi
  40c8ce:	idiv   DWORD PTR [eax+eax*8-0x74a5c3f0]
  40c8d5:	in     al,dx
  40c8d6:	scas   eax,DWORD PTR es:[edi]
  40c8d7:	bound  ecx,QWORD PTR [edx]
  40c8d9:	push   ebx
  40c8da:	fidivr DWORD PTR [esi+0x33]
  40c8dd:	pusha  
  40c8de:	or     DWORD PTR [edi+0x0],eax
  40c8e1:	push   edi
  40c8e2:	(bad)  
  40c8e3:	or     DWORD PTR [ebx-0x73],ebx
  40c8e6:	mov    ecx,0xa98d4e71
  40c8eb:	jns    0x40c93b
  40c8ed:	push   0x9
  40c8ef:	je     0x40c964
  40c8f1:	or     BYTE PTR [eax],al
  40c8f3:	add    BYTE PTR [ebp+0x51],dh
  40c8f6:	cld    
  40c8f7:	dec    DWORD PTR [edx-0x80]
  40c8fa:	cmp    esp,DWORD PTR [ecx+ebx*8+0x46]
  40c8fe:	add    bl,ch
  40c900:	(bad)  
  40c901:	jle    0x40c946
  40c903:	hlt    
  40c904:	cmp    edi,eax
  40c906:	jb     0x40c929
  40c908:	and    DWORD PTR [edx-0x4],eax
  40c90b:	push   ecx
  40c90c:	inc    ecx
  40c90d:	inc    edx
  40c90e:	hlt    
  40c90f:	push   ecx
  40c910:	xchg   BYTE PTR [ecx],bl
  40c912:	push   eax
  40c913:	mov    DWORD PTR [ecx-0x2],edi
  40c916:	mov    BYTE PTR [ebp-0x10],bl
  40c919:	jae    0x40c8ef
  40c91b:	(bad)  
  40c91c:	cmp    esi,edi
  40c91e:	mov    BYTE PTR [ebp-0x4c],al
  40c921:	jae    0x40c8f8
  40c923:	and    DWORD PTR [ecx+0x6e],0xfffffffe
  40c927:	je     0x40c8ed
  40c929:	push   ebx
  40c92a:	pop    esi
  40c92b:	pop    ebx
  40c92c:	(bad)
  40c92f:	add    BYTE PTR [ecx+0x7f],cl
  40c932:	jmp    0x6c0c:0x435b4d51
  40c939:	push   es
  40c93a:	add    BYTE PTR [eax-0x8],ah
  40c93d:	or     DWORD PTR [ebx],esi
  40c93f:	shl    BYTE PTR [edi],0xe1
  40c942:	and    BYTE PTR [ebp-0x2b],0xd8
  40c946:	add    edx,DWORD PTR [ebx-0x55]
  40c949:	daa    
  40c94a:	out    dx,eax
  40c94b:	jg     0x40c92d
  40c94d:	loopne 0x40c952
  40c94f:	push   0xffffffd5
  40c951:	sbb    eax,0x2585f83f
  40c956:	aas    
  40c957:	inc    DWORD PTR [eax]
  40c959:	add    BYTE PTR [ebp+0x1a0c2e5b],al
  40c95f:	or     eax,0x252bff0c
  40c964:	les    esi,FWORD PTR [ebx+edx*4-0x6d]
  40c968:	push   cs
  40c969:	lods   al,BYTE PTR ds:[esi]
  40c96a:	out    0xe0,eax
  40c96c:	add    eax,DWORD PTR [ebx+0x3b2f05fd]
  40c972:	pop    esi
  40c973:	in     eax,0xbb
  40c975:	aas    
  40c976:	popa   
  40c977:	ins    DWORD PTR es:[edi],dx
  40c978:	stos   BYTE PTR es:[edi],al
  40c979:	pop    edx
  40c97a:	xchg   edi,eax
  40c97b:	mov    al,ds:0x1cfd8b02
  40c980:	fnstenv [ebx-0x1]
  40c983:	mov    esp,0x3b108d02
  40c988:	push   esp
  40c989:	push   ebx
  40c98a:	ret    0x6be
  40c98d:	inc    DWORD PTR [eax-0x65]
  40c990:	mov    bl,0xd5
  40c992:	push   esi
  40c993:	dec    ebx
  40c994:	add    esi,DWORD PTR [ebp-0x3b]
  40c997:	sub    edi,DWORD PTR [edi]
  40c999:	adc    BYTE PTR [eax-0xd],bl
  40c99c:	das    
  40c99d:	add    eax,0x88ba5e4e
  40c9a2:	fstp   QWORD PTR [ebx]
  40c9a4:	shr    edx,0xdd
  40c9a7:	arpl   WORD PTR [edx+0x2b3175d],bp
  40c9ad:	xor    edx,DWORD PTR [ebp-0x6836a88f]
  40c9b3:	mov    bh,0x2
  40c9b5:	sub    DWORD PTR [edx-0x2d],0x30
  40c9b9:	add    eax,0x7634b856
  40c9be:	add    BYTE PTR [eax],al
  40c9c0:	into   
  40c9c1:	or     DWORD PTR [esp+edi*2-0x4e],esi
  40c9c5:	test   al,0xdd
  40c9c7:	mov    ah,0x57
  40c9c9:	mov    ds:0x2fd92d35,al
  40c9ce:	bound  edi,QWORD PTR [edi+edx*1+0x32dead95]
  40c9d5:	test   eax,0x9e9b4e8
  40c9da:	jmp    0xbf5e9de2
  40c9df:	dec    ebp
  40c9e0:	out    0x9f,al
  40c9e2:	pop    edi
  40c9e3:	cld    
  40c9e4:	xlat   BYTE PTR ds:[ebx]
  40c9e5:	or     ecx,ebp
  40c9e7:	xchg   dh,dl
  40c9e9:	fisubr DWORD PTR [edi-0x18]
  40c9ec:	adc    al,0xbb
  40c9ee:	nop
  40c9ef:	add    al,0x42
  40c9f1:	(bad)  
  40c9f2:	imul   edi,DWORD PTR [ebx-0x716b68a],0x3
  40c9f9:	sbb    eax,0xa7286ec
  40c9fe:	cmp    dh,0x60
  40ca01:	adc    al,0x74
  40ca03:	dec    ebx
  40ca04:	shl    ah,cl
  40ca06:	cs ss stos DWORD PTR es:[edi],eax
  40ca09:	fsubr  QWORD PTR [eax]
  40ca0b:	push   ebp
  40ca0c:	xchg   esi,eax
  40ca0d:	das    
  40ca0e:	(bad)  
  40ca0f:	call   DWORD PTR [ecx-0x5d]
  40ca12:	int3   
  40ca13:	inc    ebx
  40ca14:	aad    0x47
  40ca16:	sub    cl,BYTE PTR [esi+0x5e]
  40ca19:	mov    ch,0x97
  40ca1b:	push   eax
  40ca1c:	or     dl,BYTE PTR [ebp-0x1ea50fd0]
  40ca22:	stos   DWORD PTR es:[edi],eax
  40ca23:	pop    es
  40ca24:	add    BYTE PTR [eax],al
  40ca26:	loop   0x40caa6
  40ca28:	sub    BYTE PTR [ebx-0x50],cl
  40ca2b:	or     ecx,ebp
  40ca2d:	add    edx,DWORD PTR [ebp-0x3b485c6e]
  40ca33:	leave  
  40ca34:	cmc    
  40ca35:	ins    DWORD PTR es:[edi],dx
  40ca36:	call   0x1a:0xc2c6bce2
  40ca3d:	test   eax,0xef491dd6
  40ca42:	xchg   edi,eax
  40ca43:	in     al,0x57
  40ca45:	pop    ebx
  40ca46:	ja     0x40ca23
  40ca48:	fiadd  DWORD PTR [edi+0x5c]
  40ca4b:	ret    
  40ca4c:	push   cs
  40ca4d:	ins    DWORD PTR es:[edi],dx
  40ca4e:	imul   ebp,DWORD PTR [eax+0x1d87e9fe],0x931a730c
  40ca58:	int    0xd1
  40ca5a:	pusha  
  40ca5b:	ds add ecx,ebp
  40ca5e:	xlat   BYTE PTR ds:[ebx]
  40ca5f:	pop    edi
  40ca60:	cli    
  40ca61:	inc    ebx
  40ca62:	rol    DWORD PTR [eax-0x1],1
  40ca65:	cld    
  40ca66:	mov    esi,0x5de93ffd
  40ca6b:	push   0x5fd7e073
  40ca70:	mov    edi,0x91831a8
  40ca75:	sub    al,0x25
  40ca77:	xchg   ebx,eax
  40ca78:	inc    ebp
  40ca79:	fldcw  WORD PTR [eax+ebp*8]
  40ca7c:	adc    DWORD PTR [ecx-0x63],ebp
  40ca7f:	repnz cmc 
  40ca81:	sub    eax,eax
  40ca83:	mov    DWORD PTR [edx+ecx*1+0x49],esi
  40ca87:	or     ch,bl
  40ca89:	or     BYTE PTR [eax],al
  40ca8b:	add    dh,dl
  40ca8d:	pop    edi
  40ca8e:	mov    edi,0xc5133ce6
  40ca93:	in     al,dx
  40ca94:	add    DWORD PTR [edx+0x0],ecx
  40ca97:	imul   BYTE PTR [ebx+ecx*1]
  40ca9a:	vpsraw ymm1,ymm4,XMMWORD PTR [ecx+0x0]
  40ca9f:	iret   
  40caa0:	cdq    
  40caa1:	stos   BYTE PTR es:[edi],al
  40caa2:	pop    es
  40caa3:	(bad)  
  40caa4:	fwait
  40caa5:	iret   
  40caa6:	push   cs
  40caa7:	pop    esi
  40caa8:	mov    al,ds:0x96db9fb4
  40caad:	fmul   st(0),st
  40caaf:	rcl    DWORD PTR ds:0x52df7416,1
  40cab5:	addr16 push cs
  40cab7:	add    BYTE PTR [ecx],dl
  40cab9:	int    0x8b
  40cabb:	add    al,0xf9
  40cabd:	or     eax,0x886c0001
  40cac2:	or     al,BYTE PTR [esp+ebp*4-0x363e6af6]
  40cac9:	push   cs
  40caca:	lea    eax,[ecx]
  40cacc:	cmp    eax,0xa1ff000b
  40cad1:	pop    ecx
  40cad2:	push   ebp
  40cad3:	push   eax
  40cad4:	or     esp,edx
  40cad6:	pop    es
  40cad7:	call   DWORD PTR [ecx]
  40cad9:	fist   WORD PTR [ebx]
  40cadb:	inc    eax
  40cadc:	cmp    al,0x64
  40cade:	(bad)  
  40cadf:	sbb    ebp,DWORD PTR [esp+eiz*2-0x2a]
  40cae3:	jmp    0x40cb01
  40cae5:	mov    edi,DWORD PTR [ebx+0xc]
  40cae8:	cld    
  40cae9:	fisub  WORD PTR [edi]
  40caeb:	call   0x3e242a
  40caf0:	add    BYTE PTR [eax],al
  40caf2:	sti    
  40caf3:	and    edi,DWORD PTR [edi+0x72ca7166]
  40caf9:	sbb    esp,DWORD PTR [edi+0x48]
  40cafc:	adc    dh,dh
  40cafe:	mov    ebp,0xf3747fff
  40cb03:	lea    ecx,[ebx-0x4]
  40cb06:	in     al,dx
  40cb07:	or     al,BYTE PTR [eax]
  40cb09:	and    BYTE PTR [ebx],bh
  40cb0b:	loop   0x40cb08
  40cb0d:	push   eax
  40cb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb0f:	or     al,0x1
  40cb11:	add    BYTE PTR [edi+eax*4+0x3bec32bf],ch
  40cb18:	pop    ebx
  40cb19:	leave  
  40cb1a:	(bad)  
  40cb1b:	mov    ds:0x872754fe,al
  40cb20:	jg     0x40cb0e
  40cb22:	les    ecx,FWORD PTR ds:0x43420000
  40cb28:	push   0xa7cda
  40cb2d:	push   0x7c
  40cb2f:	sbb    edi,edi
  40cb31:	mov    ebx,0x570273d5
  40cb36:	jp     0x40cad5
  40cb38:	or     dl,BYTE PTR [esi]
  40cb3a:	adc    eax,0xd9c385b1
  40cb3f:	jp     0x40cb45
  40cb41:	push   0x45dceb
  40cb46:	in     eax,dx
  40cb47:	pop    ecx
  40cb48:	jecxz  0x40cb31
  40cb4a:	out    0xb8,eax
  40cb4c:	test   DWORD PTR [esi-0x2c],esp
  40cb4f:	mov    al,0x7d
  40cb51:	mov    ah,0xef
  40cb53:	mov    esi,0xfeb0
  40cb58:	sub    eax,0x32ff7670
  40cb5d:	cmp    al,BYTE PTR [esi]
  40cb5f:	mov    ebx,DWORD PTR ds:0x6acc9be8
  40cb65:	mov    al,0x2
  40cb67:	mov    edx,DWORD PTR [ebx]
  40cb69:	add    BYTE PTR [ebp+ebp*4+0x5f02b04a],bl
  40cb70:	inc    ebp
  40cb71:	mov    cl,0x50
  40cb73:	leave  
  40cb74:	push   ss
  40cb75:	sub    ecx,DWORD PTR [edx]
  40cb77:	test   DWORD PTR ds:0xfd4ffafc,edx
  40cb7d:	xchg   esp,eax
  40cb7e:	sbb    BYTE PTR [edx],al
  40cb80:	aad    0x33
  40cb82:	jmp    0x13ef:0xef3017ff
  40cb89:	repz add eax,DWORD PTR [eax]
  40cb8c:	sub    eax,esi
  40cb8e:	repz mov ebp,0x44ebe5
  40cb94:	sub    edi,DWORD PTR [edi+edx*1]
  40cb97:	fsub   st,st(7)
  40cb99:	jb     0x40cb9d
  40cb9b:	xor    al,0xe2
  40cb9e:	leave  
  40cb9f:	inc    edx
  40cba0:	aad    0xb2
  40cba2:	xor    eax,0xaf64ad17
  40cba7:	(bad)  
  40cba8:	call   0x6a09:0xe373c42f
  40cbaf:	out    0x86,eax
  40cbb1:	int3   
  40cbb2:	test   eax,0xebcbd503
  40cbb7:	mov    bl,0x90
  40cbb9:	dec    ecx
  40cbba:	jmp    0xb40cbc1
  40cbbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbc0:	fcmovne st,st(7)
  40cbc2:	les    ecx,FWORD PTR [ecx-0x17]
  40cbc5:	sbb    ebp,ebx
  40cbc7:	gs test eax,0x8109ef03
  40cbcd:	inc    ebx
  40cbce:	daa    
  40cbcf:	dec    ecx
  40cbd0:	jmp    0xfa4aad85
  40cbd5:	inc    ebx
  40cbd6:	aad    0x90
  40cbd8:	fadd   DWORD PTR [esi+0x1df21e40]
  40cbde:	xor    bh,BYTE PTR [esi+eax*8]
  40cbe1:	push   ss
  40cbe2:	cmp    eax,edi
  40cbe4:	sub    BYTE PTR [eax+ebx*2],al
  40cbe7:	retf   0x113c
  40cbea:	fmul   DWORD PTR [ecx+0x1dd503e8]
  40cbf0:	add    DWORD PTR [edx+0xa],ebx
  40cbf3:	push   DWORD PTR [eax-0x25f66aeb]
  40cbf9:	ret    
  40cbfa:	cwde   
  40cbfb:	mov    gs,WORD PTR [eax+0x3490e337]
  40cc01:	call   0x74285edc
  40cc06:	aad    0xb0
  40cc08:	out    dx,al
  40cc09:	jl     0x40cc1b
  40cc0b:	mov    cl,0x7b
  40cc0d:	cmc    
  40cc0e:	xchg   edx,eax
  40cc0f:	(bad)  
  40cc10:	in     al,dx
  40cc11:	add    esp,DWORD PTR [eax]
  40cc13:	xchg   ecx,eax
  40cc14:	dec    esp
  40cc15:	test   BYTE PTR [esi-0x55119707],ch
  40cc1b:	retf   
  40cc1c:	test   eax,0x9e3bd503
  40cc21:	add    BYTE PTR ss:[eax],al
  40cc24:	out    0x63,al
  40cc26:	fmul   st,st(0)
  40cc28:	pop    ss
  40cc29:	or     al,BYTE PTR [eax]
  40cc2b:	lahf   
  40cc2c:	gs std 
  40cc2e:	xlat   BYTE PTR ds:[ebx]
  40cc2f:	fist   DWORD PTR [esi]
  40cc31:	or     al,BYTE PTR [eax+0x42ce46e4]
  40cc37:	jmp    0x157eb12
  40cc3c:	sub    al,0xa6
  40cc3e:	dec    BYTE PTR [esi]
  40cc40:	pop    edx
  40cc41:	fs jae 0x40cc3b
  40cc44:	push   ecx
  40cc45:	in     eax,dx
  40cc46:	repz daa 
  40cc48:	sbb    DWORD PTR [edx],ecx
  40cc4a:	add    BYTE PTR [edi],ch
  40cc4c:	rcr    DWORD PTR [ecx+0xad6aac5],cl
  40cc52:	push   esi
  40cc53:	out    0xec,al
  40cc55:	lds    edx,FWORD PTR [ecx]
  40cc57:	sub    ecx,ebx
  40cc59:	das    
  40cc5a:	add    dh,BYTE PTR [ecx]
  40cc5c:	push   esp
  40cc5d:	sbb    eax,0x2f0bc1f0
  40cc62:	add    cl,ch
  40cc64:	scas   eax,DWORD PTR es:[edi]
  40cc65:	dec    ebp
  40cc66:	or     ah,ah
  40cc68:	inc    esi
  40cc69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc6a:	(bad)  
  40cc6b:	jmp    0xe941d42e
  40cc70:	(bad)  
  40cc71:	cmp    DWORD PTR [ebx+0x6be669af],ecx
  40cc77:	jmp    0x6444fc52
  40cc7c:	mov    WORD PTR ds:0xac1b6250,ss
  40cc82:	xor    BYTE PTR ds:0xfc8d09d1,dl
  40cc88:	add    BYTE PTR [eax],al
  40cc8a:	xor    cl,BYTE PTR [edi+0x301881c5]
  40cc90:	add    cl,ch
  40cc92:	in     al,dx
  40cc93:	std    
  40cc94:	(bad)  
  40cc95:	fsubr  st(6),st
  40cc97:	mov    ds:0xfe725d74,al
  40cc9c:	sbb    edi,edi
  40cc9e:	push   ss
  40cc9f:	or     al,BYTE PTR [ebx-0x3a712adb]
  40cca5:	add    BYTE PTR [esp+ebp*2],al
  40cca8:	imul   eax,DWORD PTR [eax],0xc95e54ac
  40ccae:	out    dx,al
  40ccaf:	or     DWORD PTR [eax],eax
  40ccb1:	push   ebp
  40ccb2:	imul   DWORD PTR [ecx-0x7f]
  40ccb5:	in     al,0xb4
  40ccb7:	mov    edx,gs
  40ccb9:	sub    al,0x6f
  40ccbb:	pop    es
  40ccbc:	add    BYTE PTR [ebx+0x3a],dl
  40ccbf:	cmp    al,0x8d
  40ccc1:	mov    ah,0x98
  40ccc3:	out    0x0,eax
  40ccc5:	add    BYTE PTR [edi+edi*2+0x58],bh
  40ccc9:	mov    ah,0x6c
  40cccb:	pop    es
  40cccc:	lea    eax,[eax+ecx*4+0x13]
  40ccd0:	push   eax
  40ccd1:	dec    ecx
  40ccd3:	sahf   
  40ccd4:	mov    esi,eax
  40ccd6:	or     al,0x86
  40ccd8:	cmp    bh,bh
  40ccda:	and    esi,DWORD PTR [ecx+eax*4+0x64]
  40ccde:	enter  0xfffd,0x8c
  40cce2:	shl    BYTE PTR [ecx+0xc865112],1
  40cce8:	push   0x0
  40ccea:	push   esp
  40cceb:	push   cs
  40ccec:	add    BYTE PTR [eax],al
  40ccee:	add    BYTE PTR [eax],al
  40ccf0:	lods   al,BYTE PTR ds:[esi]
  40ccf1:	(bad)  
  40ccf2:	(bad)  
  40ccf3:	mov    ebx,0x89500dbf
  40ccf8:	mov    eax,0x9ff26b1
  40ccfd:	cmp    edx,DWORD PTR [eax]
  40ccff:	inc    eax
  40cd00:	in     al,dx
  40cd01:	xchg   ecx,eax
  40cd02:	mov    esi,0x4289e675
  40cd07:	and    al,0xc
  40cd09:	aaa    
  40cd0a:	lea    eax,[eax+ebx*1+0x13]
  40cd0e:	push   eax
  40cd0f:	lea    ebp,[eax+0x315022b1]
  40cd15:	repz and esp,DWORD PTR [eax]
  40cd18:	and    al,0x16
  40cd1a:	sbb    BYTE PTR [edx],al
  40cd1c:	lods   al,BYTE PTR ds:[esi]
  40cd1d:	jg     0x40cd20
  40cd1f:	adc    ebp,0xffffffe8
  40cd22:	lods   eax,DWORD PTR ds:[esi]
  40cd23:	mov    BYTE PTR [ecx],bl
  40cd25:	or     eax,0x4bad8318
  40cd2a:	aaa    
  40cd2b:	je     0x40cd85
  40cd2d:	lock ss jo 0x40cd87
  40cd31:	pop    esp
  40cd32:	out    0x17,al
  40cd34:	aam    0x5d
  40cd36:	fisttp DWORD PTR [ecx+ebx*1-0x7daee92b]
  40cd3d:	jl     0x40cd25
  40cd3f:	adc    ecx,DWORD PTR [eax+0x5c]
  40cd42:	out    0x5f,al
  40cd44:	call   0x2b0:0xd75fe66c
  40cd4b:	add    BYTE PTR [ebp-0xe],ch
  40cd4e:	out    dx,eax
  40cd4f:	call   FWORD PTR [edx-0x65]
  40cd52:	xor    eax,0xe5000024
  40cd57:	daa    
  40cd58:	mov    bl,0xe7
  40cd5a:	sbb    al,0xea
  40cd5c:	add    eax,DWORD PTR [eax]
  40cd5e:	dec    esp
  40cd5f:	cmp    al,0xe8
  40cd61:	cmovs  esi,DWORD PTR [eax+ebp*8]
  40cd65:	out    dx,eax
  40cd66:	aam    0xb0
  40cd68:	add    dl,BYTE PTR [eax+0x58]
  40cd6b:	in     al,0xe7
  40cd6d:	pop    ebx
  40cd6e:	sub    eax,0x1affe942
  40cd73:	daa    
  40cd74:	xor    BYTE PTR [ecx+ebp*8],ah
  40cd77:	sub    eax,0x17de73ad
  40cd7c:	cmp    BYTE PTR [eiz*8-0x2e182ae9],ah
  40cd83:	mov    ebp,0xed5e0002
  40cd88:	inc    DWORD PTR [ebp+edx*1-0x6276ff5c]
  40cd8f:	xor    eax,0xb1752388
  40cd94:	add    al,BYTE PTR [eax]
  40cd96:	and    eax,0xd5b47c8b
  40cd9b:	or     ecx,ebp
  40cd9d:	js     0x40cdb5
  40cd9f:	out    0xf8,al
  40cda1:	cwde   
  40cda2:	retf   
  40cda3:	mov    gs,WORD PTR [eax+ebp*8+0x12]
  40cda7:	or     ebp,ecx
  40cda9:	add    eax,DWORD PTR ds:0xa276c4b2
  40cdaf:	mov    eax,ds:0x3ffbc3f9
  40cdb4:	xchg   edx,eax
  40cdb5:	js     0x40ce30
  40cdb7:	aas    
  40cdb8:	sub    edi,esp
  40cdba:	add    BYTE PTR [eax],al
  40cdbc:	mov    dh,BYTE PTR [esi]
  40cdbe:	jb     0x40cd60
  40cdc0:	and    eax,0x79476c38
  40cdc5:	cmp    al,BYTE PTR [ebx+0xeae7d02]
  40cdcb:	lods   eax,DWORD PTR ds:[esi]
  40cdcc:	imul   eax,DWORD PTR [edi-0x7338c7d8],0x7b
  40cdd3:	scas   eax,DWORD PTR es:[edi]
  40cdd4:	(bad)  
  40cdd5:	push   ss
  40cdd6:	in     eax,0x78
  40cdd8:	add    bh,BYTE PTR [edx]
  40cdda:	add    DWORD PTR [ecx],edi
  40cddc:	or     ecx,DWORD PTR [edx]
  40cdde:	jmp    0xf0f5e65b
  40cde3:	push   ebx
  40cde4:	sub    eax,0xd504174b
  40cde9:	fsubr  QWORD PTR [eax+0x1bcd1c4d]
  40cdef:	jns    0x40ce1f
  40cdf1:	mov    ecx,esp
  40cdf3:	repz (bad) 
  40cdf5:	or     ecx,ebp
  40cdf7:	adc    ecx,0x19
  40cdfa:	xchg   ebp,eax
  40cdfb:	inc    eax
  40cdfc:	aad    0xa
  40cdfe:	cmp    dl,BYTE PTR [esi-0x56]
  40ce01:	sbb    dh,ah
  40ce03:	icebp  
  40ce04:	cmp    dh,BYTE PTR [ebx+0x9d50350]
  40ce0a:	pop    esp
  40ce0b:	jbe    0x40ce03
  40ce0d:	sahf   
  40ce0e:	test   DWORD PTR [edx+edi*8-0x2afcc5fe],ebp
  40ce15:	mov    ?,edi
  40ce17:	sub    eax,DWORD PTR [ebp+0x51]
  40ce1a:	push   0xffffffe8
  40ce1c:	dec    ebp
  40ce1d:	(bad)  
  40ce1e:	dec    edi
  40ce1f:	push   ecx
  40ce20:	add    BYTE PTR [eax],al
  40ce22:	jae    0x40cdc1
  40ce24:	(bad)  
  40ce25:	pop    esi
  40ce26:	cmp    eax,DWORD PTR [esi-0x607ea88d]
  40ce2c:	dec    edi
  40ce2d:	pop    esp
  40ce2e:	and    edi,DWORD PTR [ebp-0x578eb906]
  40ce34:	fiadd  WORD PTR [ebx]
  40ce36:	ror    DWORD PTR [ecx],1
  40ce38:	push   0xffffffed
  40ce3a:	sbb    eax,0xc35cd295
  40ce3f:	adc    eax,ebp
  40ce41:	mov    ebx,0x93fea06d
  40ce46:	(bad)  
  40ce47:	xor    eax,DWORD PTR [edx]
  40ce49:	mov    bh,0xed
  40ce4b:	(bad)  
  40ce4c:	out    0x9f,eax
  40ce4e:	data16 mov al,ds:0x58e8f6fe
  40ce54:	(bad)  
  40ce55:	jne    0x40ce6d
  40ce57:	or     al,BYTE PTR [ebx+0x3216d4f6]
  40ce5d:	pop    esp
  40ce5e:	xchg   ebx,eax
  40ce5f:	mov    eax,ds:0xc454744f
  40ce64:	sti    
  40ce65:	fisubr WORD PTR [esi+0x50]
  40ce68:	mov    ebp,DWORD PTR [edx+0x60083dac]
  40ce6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6f:	(bad)  
  40ce70:	sti    
  40ce71:	(bad)  
  40ce72:	outs   dx,BYTE PTR ds:[esi]
  40ce73:	test   al,0xb6
  40ce75:	add    dl,cl
  40ce77:	or     DWORD PTR [ebx+0x749654b9],ecx
  40ce7d:	(bad)  
  40ce7e:	lea    eax,[ebp-0x60d15b1d]
  40ce84:	dec    edi
  40ce85:	xchg   ecx,eax
  40ce86:	add    BYTE PTR [eax],al
  40ce88:	jbe    0x40cee6
  40ce8a:	(bad)  
  40ce8b:	call   0x8f3fe5e1
  40ce90:	lea    esi,ds:[eax+eax*1-0x1c]
  40ce95:	sbb    al,0x5c
  40ce97:	clc    
  40ce98:	pop    ebx
  40ce99:	(bad)  
  40ce9b:	lea    eax,[ecx]
  40ce9d:	xor    dl,BYTE PTR [ebp+0x57]
  40cea0:	in     al,dx
  40cea1:	std    
  40cea2:	(bad)  
  40cea3:	mov    ebx,0x43e80b6f
  40cea8:	ret    0x5
  40ceab:	mov    ah,ah
  40cead:	and    BYTE PTR [eax+ecx*1-0x39],al
  40ceb1:	push   ebp
  40ceb2:	jb     0x40ceba
  40ceb4:	inc    edx
  40ceb5:	xor    DWORD PTR [ebp+edi*1-0x54],0xb
  40ceba:	lea    eax,[ebp-0x28ee0]
  40cec0:	ins    BYTE PTR es:[edi],dx
  40cec1:	sub    DWORD PTR [esp+esi*4+0x6c],0xb
  40cec6:	mov    al,bl
  40cec8:	cmp    edx,DWORD PTR [ecx+0x5b]
  40cecb:	leave  
  40cecc:	mov    esi,0xf7550009
  40ced1:	or     DWORD PTR [edi+0x57],0x50fc48e9
  40ced8:	inc    esi
  40ced9:	add    eax,0x7449e0e8
  40cede:	std    
  40cedf:	mov    eax,DWORD PTR [edx+ecx*4-0x3]
  40cee3:	je     0x40cec5
  40cee5:	push   ds
  40cee6:	inc    esp
  40cee7:	cld    
  40cee8:	fs push es
  40ceea:	jne    0x40cf19
  40ceec:	add    BYTE PTR [eax],al
  40ceee:	ins    DWORD PTR es:[edi],dx
  40ceef:	add    DWORD PTR [ebx+0x3d1080f6],0xffffffff
  40cef6:	sbb    esi,DWORD PTR [ebp+edi*2+0x73]
  40cefa:	std    
  40cefb:	cmp    ecx,DWORD PTR [ebp+0x6a36484d]
  40cf01:	adc    eax,0xe8cd1ee6
  40cf06:	(bad)  [ebx]
  40cf08:	add    al,BYTE PTR [eax]
  40cf0a:	or     dh,BYTE PTR [bp+di]
  40cf0d:	rcl    ch,0xe
  40cf10:	jge    0x40cf17
  40cf12:	or     BYTE PTR [eax-0x4f2ac2f3],0x72
  40cf19:	add    dh,ch
  40cf1b:	cwde   
  40cf1c:	push   ecx
  40cf1d:	call   0x432506
  40cf22:	pop    es
  40cf23:	jno    0x40cf6e
  40cf25:	leave  
  40cf26:	xchg   esi,eax
  40cf27:	pop    ebp
  40cf28:	jge    0x40cf15
  40cf2a:	push   esi
  40cf2b:	inc    esp
  40cf2c:	stos   DWORD PTR es:[edi],eax
  40cf2d:	add    cl,0x48
  40cf30:	add    BYTE PTR [eax],al
  40cf32:	aad    0x56
  40cf34:	push   ecx
  40cf35:	mov    esp,DWORD PTR [ebp-0x65016ec8]
  40cf3b:	fistp  QWORD PTR [esi-0x41]
  40cf3e:	or     BYTE PTR [edi+esi*2-0x653f4e85],bl
  40cf45:	mov    eax,0x8502b1fb
  40cf4a:	xor    DWORD PTR [ebx+ecx*1-0x73],0x59
  40cf4f:	int3   
  40cf50:	mov    dh,0x0
  40cf52:	add    BYTE PTR [eax],al
  40cf54:	aad    0xb0
  40cf56:	push   edx
  40cf57:	lea    ebx,[ecx]
  40cf59:	int    0x12
  40cf5b:	push   eax
  40cf5c:	out    dx,eax
  40cf5d:	mov    ch,0x4c
  40cf5f:	mov    edx,DWORD PTR [edi]
  40cf61:	sub    edi,DWORD PTR [ecx+0x4a517e7]
  40cf67:	add    BYTE PTR [ebp+0x3afffed0],ch
  40cf6d:	sub    eax,0x4ac92440
  40cf72:	add    al,0x50
  40cf74:	sub    dl,BYTE PTR [ebp-0x4f6ae9f6]
  40cf7a:	add    ebx,0xffffffc9
  40cf7d:	dec    DWORD PTR [ecx-0x75]
  40cf80:	clc    
  40cf81:	hlt    
  40cf82:	les    edx,FWORD PTR [esi+ebx*2+0x5c]
  40cf86:	sub    bl,0xa1
  40cf89:	or     ebp,ebp
  40cf8b:	add    edx,ebp
  40cf8d:	cmp    dh,BYTE PTR [edi]
  40cf8f:	push   ecx
  40cf90:	pop    eax
  40cf91:	leave  
  40cf92:	in     eax,0x7f
  40cf94:	fisttp WORD PTR [eax]
  40cf96:	jmp    0xc0cb4a9e
  40cf9b:	add    ecx,edx
  40cf9d:	test   edi,esp
  40cf9f:	add    dl,ch
  40cfa1:	or     DWORD PTR [ebx],eax
  40cfa3:	comiss xmm1,DWORD PTR [edi-0x484547e5]
  40cfaa:	jmp    0x40cfb1
  40cfac:	aad    0x8e
  40cfae:	mov    ds:0xfb9d22b7,eax
  40cfb3:	mov    eax,esp
  40cfb5:	dec    ecx
  40cfb6:	jmp    0xaa40d037
  40cfbb:	or     DWORD PTR [esi-0x7c],eax
  40cfbe:	fstp   DWORD PTR [ecx]
  40cfc0:	adc    eax,0xbe0ad545
  40cfc5:	add    bh,al
  40cfc7:	leave  
  40cfc8:	aas    
  40cfc9:	(bad)  
  40cfcb:	or     ecx,ebp
  40cfcd:	jbe    0x40d010
  40cfcf:	bound  ebx,QWORD PTR [ebx]
  40cfd1:	test   eax,0x728cb273
  40cfd6:	push   0xffffff9d
  40cfd8:	pop    ebx
  40cfd9:	aas    
  40cfda:	inc    ebp
  40cfdb:	cmp    dl,BYTE PTR [ebx+0x7238fe05]
  40cfe1:	ret    0xb1a2
  40cfe4:	scas   al,BYTE PTR es:[edi]
  40cfe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe6:	dec    ebx
  40cfe7:	popf   
  40cfe8:	arpl   WORD PTR [ecx+0x3c185d3],bp
  40cfee:	aad    0x9
  40cff0:	ins    BYTE PTR es:[edi],dx
  40cff1:	jle    0x40cf8d
  40cff3:	fwait
  40cff4:	aad    0xa8
  40cff6:	call   0xc59d:0x1f5b938e
  40cffd:	fwait
  40cffe:	mov    edx,0x5e03e8e2
  40d003:	mov    ch,0xff
  40d005:	arpl   WORD PTR [ebx-0x10a81833],di
  40d00b:	pushf  
  40d00c:	(bad)  
  40d00d:	push   0xe9c69d2d
  40d012:	(bad)  
  40d013:	adc    eax,DWORD PTR [eax+0x3]
  40d016:	sar    BYTE PTR [ebx],1
  40d018:	mov    DWORD PTR [ecx+esi*1],ecx
  40d01b:	mov    ds,WORD PTR [ebp+esi*4+0x0]
  40d01f:	add    BYTE PTR ds:0x136cf816,ch
  40d025:	jp     0x40d079
  40d027:	pop    ds
  40d028:	and    DWORD PTR [edx],esi
  40d02a:	add    BYTE PTR ds:0x2fe80a19,ch
  40d030:	retf   0x7
  40d033:	jno    0x40d028
  40d035:	pushf  
  40d036:	mov    WORD PTR [edx+eiz*2-0x2b2a2821],gs
  40d03d:	cmp    al,ch
  40d03f:	inc    ecx
  40d040:	test   eax,0x136cfe9c
  40d045:	push   ebp
  40d046:	cld    
  40d047:	ss cmp eax,0x839e84c
  40d04d:	popf   
  40d04e:	(bad)  
  40d04f:	jae    0x40d00c
  40d051:	pushf  
  40d052:	call   0x4aa69f
  40d057:	fisubr DWORD PTR [edi]
  40d059:	xchg   esi,edi
  40d05b:	in     eax,0x5d
  40d05d:	jne    0x40d01f
  40d05f:	jb     0x40cff2
  40d061:	xor    al,BYTE PTR [eax]
  40d063:	rcl    BYTE PTR [edi],cl
  40d065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d066:	inc    edx
  40d067:	(bad)  
  40d068:	(bad)  
  40d069:	or     DWORD PTR [edi],ecx
  40d06b:	aaa    
  40d06c:	(bad)  
  40d06d:	mov    WORD PTR [ebx+0x29],?
  40d070:	ror    DWORD PTR [eax+0x65e5e8fd],1
  40d076:	mov    WORD PTR [ecx+edi*2],gs
  40d079:	dec    esp
  40d07a:	lea    esp,[ecx+ebp*4-0x60]
  40d07e:	inc    BYTE PTR [eax]
  40d080:	adc    ebx,DWORD PTR [esi]
  40d082:	pushf  
  40d083:	mov    al,0x0
  40d085:	add    BYTE PTR [eax+0x64],dl
  40d088:	std    
  40d089:	push   eax
  40d08a:	ja     0x40d0e8
  40d08c:	mov    ebx,DWORD PTR [ebp+0x60]
  40d08f:	jge    0x40d03b
  40d091:	cmp    esp,ebp
  40d093:	pop    es
  40d094:	mov    ebx,eax
  40d096:	jns    0x40d068
  40d098:	jae    0x40d023
  40d09a:	jno    0x40d026
  40d09c:	mov    dh,0xfd
  40d09e:	push   ebx
  40d09f:	fs dec esi
  40d0a1:	call   0x3fe816
  40d0a6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40d0a8:	std    
  40d0a9:	inc    DWORD PTR [ebx-0x7a]
  40d0ac:	cmp    esi,DWORD PTR [eax+0x68]
  40d0af:	inc    edi
  40d0b0:	add    BYTE PTR [ecx],al
  40d0b2:	ret    
  40d0b3:	sbb    eax,0x6313ff13
  40d0b8:	mov    esi,DWORD PTR [ebp-0x28ebc]
  40d0be:	adc    al,0xe3
  40d0c0:	scas   eax,DWORD PTR es:[edi]
  40d0c1:	add    BYTE PTR [edx+eiz*1+0x16c9044],ch
  40d0c8:	add    cl,BYTE PTR [ebx+0x63e835ba]
  40d0ce:	(bad)  
  40d0cf:	(bad)  
  40d0d0:	std    
  40d0d1:	lea    ebp,[ecx]
  40d0d3:	ja     0x40d123
  40d0d5:	push   0x42237c
  40d0da:	push   esp
  40d0db:	push   es
  40d0dc:	add    BYTE PTR [eax],al
  40d0de:	in     al,dx
  40d0df:	bound  edx,QWORD PTR [ebx]
  40d0e1:	dec    esp
  40d0e2:	jg     0x40d12b
  40d0e4:	add    BYTE PTR [ebx-0x7226950c],cl
  40d0ea:	add    BYTE PTR [eax],al
  40d0ec:	mov    ecx,0x33fffc2d
  40d0f1:	adc    ebx,ebx
  40d0f3:	push   eax
  40d0f4:	xor    cl,al
  40d0f6:	out    0x49,al
  40d0f8:	dec    esi
  40d0f9:	pop    es
  40d0fa:	add    BYTE PTR [edx+0x5e456fd5],cl
  40d100:	jle    0x40d16b
  40d102:	rcl    DWORD PTR [esi+ecx*2-0x4b],0x53
  40d107:	push   ecx
  40d108:	stos   DWORD PTR es:[edi],eax
  40d109:	ss clc 
  40d10b:	inc    BYTE PTR [eax-0x3edd6558]
  40d111:	mov    al,0x2
  40d113:	lea    edx,[eax+0x786a5264]
  40d119:	js     0x40d18b
  40d11b:	cli    
  40d11c:	jmp    0x2f73:0x58ef7973
  40d123:	add    al,0xa7
  40d125:	jo     0x40d0c0
  40d127:	and    BYTE PTR [esi-0x1b],bl
  40d12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d12b:	or     ch,0xa4
  40d12e:	sub    al,0x3
  40d130:	das    
  40d131:	mov    ebp,0x2423504a
  40d136:	xor    BYTE PTR [eax],cl
  40d138:	mov    dl,0x95
  40d13a:	adc    dl,BYTE PTR [esi]
  40d13c:	adc    eax,0xd1c381b1
  40d141:	push   edx
  40d142:	call   0xd4b0:0x2b0dff9
  40d149:	jp     0x40d106
  40d14b:	rcl    ecx,0xb0
  40d14e:	dec    edi
  40d14f:	mov    eax,DWORD PTR [eax]
  40d151:	add    BYTE PTR [ecx-0x7f],dh
  40d154:	push   ebx
  40d155:	push   esi
  40d156:	and    dl,BYTE PTR [esi]
  40d158:	inc    eax
  40d159:	cld    
  40d15a:	add    eax,0x6affba79
  40d15f:	mov    al,0x9a
  40d161:	ins    BYTE PTR es:[edi],dx
  40d162:	pop    esi
  40d163:	or     esp,DWORD PTR [esi-0x52d29a76]
  40d169:	jae    0x40d15c
  40d16b:	pop    ss
  40d16c:	inc    eax
  40d16d:	cld    
  40d16e:	mov    edi,0x4e0018b1
  40d173:	cli    
  40d174:	call   0x5e03:0xe909978d
  40d17b:	mov    eax,ds:0x3a1a563
  40d180:	aas    
  40d181:	pushf  
  40d182:	pusha  
  40d183:	fucomip st,st(0)
  40d185:	add    ecx,DWORD PTR [esi-0x3e]
  40d188:	and    eax,0x13c61c46
  40d18d:	jns    0x40d18d
  40d18f:	xchg   esp,eax
  40d191:	(bad)  
  40d193:	or     ecx,ebp
  40d195:	cmp    BYTE PTR [ecx+0x11],0xe9
  40d199:	push   eax
  40d19a:	mov    esi,DWORD PTR [edx]
  40d19c:	adc    al,0x36
  40d19e:	push   ebp
  40d19f:	fcomp  QWORD PTR [eax]
  40d1a1:	rcl    BYTE PTR [edi+0x7e2de809],1
  40d1a7:	mov    WORD PTR [ebx],?
  40d1a9:	mov    al,ds:0x9c7d99d1
  40d1ae:	pusha  
  40d1af:	imul   ebp,eax,0x2d4f5003
  40d1b5:	push   esp
  40d1b6:	add    BYTE PTR [eax],al
  40d1b8:	sub    eax,0xd503e8c2
  40d1bd:	test   BYTE PTR [esi],ah
  40d1bf:	push   esp
  40d1c0:	mov    ebp,0xa3a55321
  40d1c5:	xchg   DWORD PTR [ebx-0x16ddf599],esp
  40d1cb:	addr16 pop ss
  40d1cd:	or     dl,cl
  40d1cf:	add    dl,ch
  40d1d1:	or     DWORD PTR [ecx-0x5b],ebp
  40d1d4:	jmp    0xd584ac1e
  40d1d9:	test   BYTE PTR [eax-0x53],al
  40d1dc:	pop    DWORD PTR [ebp+0x3a8e0a26]
  40d1e2:	pop    ss
  40d1e3:	sar    DWORD PTR [edx+0x2b],0x58
  40d1e7:	add    al,0xd5
  40d1e9:	mov    ds:0x9d502ee,al
  40d1ee:	ins    BYTE PTR es:[edi],dx
  40d1ef:	aas    
  40d1f0:	dec    ebp
  40d1f1:	cmp    al,BYTE PTR [eax]
  40d1f3:	adc    esi,0x23
  40d1f6:	add    esi,ebp
  40d1f8:	jmp    0x40d1fb
  40d1fa:	call   0xfeda0bca
  40d1ff:	jb     0x40d27f
  40d201:	mov    ?,esi
  40d203:	pop    esp
  40d204:	and    bl,bl
  40d206:	mov    edi,0xfe993dc0
  40d20b:	jmp    0x95b0a866
  40d210:	xchg   ebp,eax
  40d211:	or     DWORD PTR [ecx],eax
  40d213:	ds add bl,bl
  40d216:	fcmovb st,st(0)
  40d218:	daa    
  40d219:	cdq    
  40d21a:	(bad)  
  40d21b:	jmp    0x5dabd220
  40d220:	jecxz  0x40d1be
  40d222:	xor    DWORD PTR [eax-0x67763219],ebx
  40d228:	(bad)  
  40d229:	pop    esp
  40d22a:	fwait
  40d22b:	push   ebp
  40d22c:	dec    edi
  40d22d:	adc    DWORD PTR [ecx+0x4de9fe98],edx
  40d233:	iret   
  40d234:	dec    edi
  40d235:	add    ebx,0x436efe92
  40d23b:	mov    ?,WORD PTR [ebx+0x67]
  40d23e:	jns    0x40d1d7
  40d240:	dec    edi
  40d241:	ins    BYTE PTR es:[edi],dx
  40d242:	cmp    esi,DWORD PTR [ebp-0x4f86a905]
  40d248:	out    0x17,al
  40d24a:	ror    DWORD PTR [ecx],1
  40d24c:	mov    esp,DWORD PTR [esi+edi*1+0x4572d683]
  40d253:	mov    al,0x5a
  40d255:	(bad)  
  40d256:	(bad)  
  40d257:	or     DWORD PTR [ecx-0x3e29d2],eax
  40d25d:	call   0xeaaae122
  40d262:	adc    BYTE PTR [ebp-0x74e025aa],ah
  40d268:	(bad)  
  40d269:	in     eax,0x61
  40d26b:	jge    0x40d22d
  40d26d:	add    BYTE PTR [esi+0xa],ah
  40d270:	pop    ebx
  40d271:	mov    edi,edi
  40d273:	repnz jmp FWORD PTR [edx]
  40d276:	in     eax,dx
  40d277:	je     0x40d2b7
  40d279:	sub    al,0x2c
  40d27b:	or     al,0xf
  40d27d:	mov    dh,0x4c
  40d27f:	sbb    eax,0x4073
  40d284:	cmp    al,0x8f
  40d286:	cld    
  40d287:	add    DWORD PTR [ecx+0x34458bbf],eax
  40d28d:	fmul   QWORD PTR [ebp+eax*4-0x296c8]
  40d294:	test   DWORD PTR [edx+0x6c4bfcda],ecx
  40d29a:	mov    DWORD PTR [ebp+0x44],ebx
  40d29d:	fisttp QWORD PTR [edx+0x362644c7]
  40d2a3:	add    ah,bh
  40d2a5:	xchg   dh,dl
  40d2a7:	test   DWORD PTR [edi],esp
  40d2a9:	repnz push ss
  40d2ab:	lea    esi,[ecx+0x61]
  40d2ae:	sti    
  40d2af:	call   FWORD PTR [ebx-0x22]
  40d2b2:	out    0x99,eax
  40d2b4:	or     al,0xe
  40d2b6:	add    cl,ch
  40d2b8:	jmp    0xf849:0x37fffd6a
  40d2bf:	mov    DWORD PTR [ecx-0x5b8a00fd],edi
  40d2c5:	jp     0x40d30a
  40d2c7:	mov    esp,0x684fd15f
  40d2cc:	lods   al,BYTE PTR ds:[esi]
  40d2cd:	aaa    
  40d2ce:	inc    edx
  40d2cf:	add    BYTE PTR [ecx+esi*4],ah
  40d2d2:	adc    BYTE PTR [edx],al
  40d2d4:	jl     0x40d259
  40d2d6:	inc    ebx
  40d2d7:	or     eax,DWORD PTR [edi+0x7274f84a]
  40d2dd:	loopne 0x40d2c6
  40d2df:	imul   esi,DWORD PTR [ebp+0xb],0x61f18d00
  40d2e6:	sti    
  40d2e7:	inc    DWORD PTR [eax]
  40d2e9:	add    ch,dl
  40d2eb:	push   DWORD PTR [ebx]
  40d2ed:	call   0x4503e6
  40d2f2:	pop    edi
  40d2f3:	outs   dx,BYTE PTR ds:[esi]
  40d2f4:	or     eax,0xac08c0ff
  40d2f9:	push   ecx
  40d2fa:	cld    
  40d2fb:	mov    al,ds:0x88168a02
  40d300:	inc    eax
  40d301:	pop    ebx
  40d302:	sbb    al,0x63
  40d304:	push   es
  40d305:	add    BYTE PTR [eax+0x3180af1b],al
  40d30b:	icebp  
  40d30c:	pop    es
  40d30d:	add    ch,dl
  40d30f:	and    al,ah
  40d311:	outs   dx,DWORD PTR ds:[esi]
  40d312:	sub    esp,esp
  40d314:	add    eax,DWORD PTR [ecx]
  40d316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d317:	(bad)  
  40d318:	cmp    cl,BYTE PTR [ebx+0x320ad81d]
  40d31e:	adc    eax,0xf2ff94ca
  40d323:	mov    al,ds:0x75f1b48f
  40d328:	mov    eax,ds:0x70c4edfe
  40d32d:	(bad)  
  40d32e:	fidiv  DWORD PTR ds:0xf925bc48
  40d334:	int3   
  40d335:	dec    edx
  40d337:	mov    al,ds:0x8925c58d
  40d33c:	pop    es
  40d33d:	stc    
  40d33e:	mov    edx,0x28da8827
  40d343:	add    dl,BYTE PTR [ecx+0x2a506944]
  40d349:	add    BYTE PTR [ecx+0x63],ah
  40d34c:	add    ch,BYTE PTR [eax+0x0]
  40d34f:	add    ah,dl
  40d351:	mov    al,ds:0xb5928002
  40d356:	dec    esi
  40d357:	adc    edx,DWORD PTR ds:0x8ad78da1
  40d35d:	sti    
  40d35e:	cld    
  40d35f:	fidivr DWORD PTR [ebx-0x1d]
  40d362:	stos   DWORD PTR es:[edi],eax
  40d363:	mov    ds:0x3e909d5,al
  40d368:	pop    eax
  40d369:	mov    WORD PTR [ecx+eiz*4-0x6f47699d],ss
  40d370:	and    DWORD PTR [ebp-0x5eac5def],edi
  40d376:	sub    bl,al
  40d378:	dec    edx
  40d379:	xchg   esi,eax
  40d37a:	jno    0x40d394
  40d37c:	int    0x82
  40d37e:	sbb    DWORD PTR [ebx+0x3e8e002],ebp
  40d384:	push   esp
  40d385:	xchg   edx,eax
  40d386:	call   0x56d6fe56
  40d38b:	pop    es
  40d38c:	scas   eax,DWORD PTR es:[edi]
  40d38d:	or     dh,BYTE PTR [esi]
  40d38f:	lods   eax,DWORD PTR ds:[esi]
  40d390:	sbb    edx,0xffffff9f
  40d393:	test   DWORD PTR [edi],ecx
  40d395:	or     eax,0x231576f6
  40d39a:	jmp    0x40d3dd
  40d39c:	dec    esi
  40d39d:	iret   
  40d39e:	inc    edx
  40d39f:	add    al,0xae
  40d3a1:	enter  0xffc0,0xbf
  40d3a5:	or     ecx,ebp
  40d3a7:	adc    BYTE PTR [ebx],ah
  40d3a9:	push   ecx
  40d3aa:	js     0x40d3c4
  40d3ac:	xchg   ebp,eax
  40d3ad:	or     DWORD PTR [edx-0x5f],ebp
  40d3b0:	aad    0x1c
  40d3b2:	fisttp DWORD PTR [esi-0x6de70000]
  40d3b8:	sbb    BYTE PTR [edi-0x5e8349af],cl
  40d3be:	ret    
  40d3bf:	cmp    ah,BYTE PTR [edx-0x3b]
  40d3c2:	dec    edi
  40d3c3:	aaa    
  40d3c4:	loope  0x40d350
  40d3c6:	imul   esi,DWORD PTR [esi-0x5d545e9c],0x95a2da66
  40d3d0:	popa   
  40d3d1:	xchg   esp,eax
  40d3d2:	push   ecx
  40d3d3:	pushf  
  40d3d4:	sar    eax,cl
  40d3d6:	popa   
  40d3d7:	(bad)  
  40d3d8:	dec    esp
  40d3d9:	lahf   
  40d3da:	mov    edx,DWORD PTR [ebp+0x6508ab98]
  40d3e0:	(bad)  
  40d3e1:	call   0x2e7b76bc
  40d3e6:	xor    al,0x94
  40d3e8:	mov    bl,BYTE PTR [esi+ebx*8+0x34215c82]
  40d3ef:	push   ds
  40d3f0:	clc    
  40d3f1:	adc    dl,BYTE PTR fs:[esi+0x55]
  40d3f5:	mov    dh,0x6
  40d3f7:	and    al,BYTE PTR [eax]
  40d3f9:	inc    ebp
  40d3fa:	nop
  40d3fb:	or     eax,ebp
  40d3fd:	fild   DWORD PTR [edi+0xb]
  40d400:	add    BYTE PTR [ebx+0x79],ah
  40d403:	shl    BYTE PTR [ecx+eiz*8-0x36],1
  40d407:	or     edx,DWORD PTR [esi-0x2f]
  40d40a:	popf   
  40d40b:	sar    edi,1
  40d40d:	call   0xd5246265
  40d412:	jne    0x40d3a8
  40d414:	dec    edi
  40d415:	shl    ebp,0x63
  40d418:	(bad)  
  40d419:	call   0xc898d41e
  40d41e:	pop    esi
  40d41f:	pop    ds
  40d420:	rol    dl,0xc1
  40d423:	in     eax,dx
  40d424:	(bad)  
  40d425:	mov    edi,DWORD PTR ds:[ebp-0x12d05ea9]
  40d42c:	(bad)  
  40d42d:	or     DWORD PTR [eax+0x42bdc6dc],eax
  40d433:	jmp    0x36970d0f
  40d438:	pusha  
  40d439:	mov    esp,0x54a0ee76
  40d43e:	call   0x4aaabe
  40d443:	and    ebp,DWORD PTR fs:[ecx-0x538a9104]
  40d44a:	or     al,0x94
  40d44c:	(bad)  
  40d44d:	or     DWORD PTR [ebp+0x684502a4],ecx
  40d453:	and    edx,esi
  40d455:	or     DWORD PTR [eax],eax
  40d457:	bound  ebx,QWORD PTR [esp+eax*2+0x722200e8]
  40d45e:	std    
  40d45f:	(bad)  
  40d460:	stc    
  40d461:	push   ebp
  40d462:	jae    0x40d485
  40d464:	icebp  
  40d465:	dec    ebx
  40d466:	mov    esp,0xbc089450
  40d46b:	inc    ebx
  40d46c:	jl     0x40d44e
  40d46e:	add    BYTE PTR [eax],al
  40d470:	ins    BYTE PTR es:[edi],dx
  40d471:	mov    ch,bh
  40d473:	adc    eax,0x3e9d30
  40d478:	mov    bh,0x50
  40d47a:	cmc    
  40d47b:	(bad)  [esi]
  40d47d:	push   ebp
  40d47e:	cld    
  40d47f:	ret    
  40d480:	add    BYTE PTR [eax],al
  40d482:	in     eax,0x2d
  40d484:	(bad)  
  40d485:	jmp    FWORD PTR [ebx+eax*4]
  40d488:	xor    DWORD PTR [edx+eax*2+0x74],0xfffffffd
  40d48d:	push   eax
  40d48e:	mov    eax,ds:0x3fbd332
  40d493:	je     0x40d47b
  40d495:	stos   DWORD PTR es:[edi],eax
  40d496:	mov    eax,0xa98b000d
  40d49b:	add    eax,0xae24d38b
  40d4a0:	xor    eax,DWORD PTR [eax]
  40d4a2:	in     al,dx
  40d4a3:	mov    ecx,?
  40d4a5:	add    BYTE PTR [ecx*1-0x1e068a00],dh
  40d4ac:	add    bl,BYTE PTR [edi+0x47]
  40d4af:	fdiv   QWORD PTR [edx]
  40d4b1:	leave  
  40d4b2:	outs   dx,DWORD PTR ds:[esi]
  40d4b3:	jo     0x40d4b7
  40d4b5:	mulps  xmm1,xmm6
  40d4b8:	push   0xc47f0202
  40d4bd:	push   0xffffffbc
  40d4bf:	mov    al,ds:0xa1bae8bf
  40d4c4:	(bad)  
  40d4c5:	push   DWORD PTR [ebx-0x576f48c3]
  40d4cb:	inc    edi
  40d4cc:	add    BYTE PTR [ebx+0x32750d33],al
  40d4d2:	xor    DWORD PTR [ecx-0x8],eax
  40d4d5:	push   eax
  40d4d6:	aad    0x2d
  40d4d8:	mov    ebx,ebx
  40d4da:	xchg   ecx,eax
  40d4db:	inc    esp
  40d4dc:	lahf   
  40d4dd:	dec    edi
  40d4de:	pop    esi
  40d4df:	loopne 0x40d46b
  40d4e1:	pop    esp
  40d4e2:	int    0x19
  40d4e4:	pop    ecx
  40d4e5:	fild   DWORD PTR [eax]
  40d4e7:	add    BYTE PTR [ecx-0x24],bh
  40d4ea:	sahf   
  40d4eb:	out    0x2,eax
  40d4ed:	sahf   
  40d4ee:	add    al,BYTE PTR [eax]
  40d4f0:	pop    esi
  40d4f1:	icebp  
  40d4f2:	mov    ch,dh
  40d4f4:	call   0x71c56494
  40d4f9:	(bad)  
  40d4fa:	sahf   
  40d4fb:	(bad)  
  40d4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4fd:	or     BYTE PTR [edi],bh
  40d4ff:	scas   al,BYTE PTR es:[edi]
  40d500:	aad    0xa0
  40d502:	stos   DWORD PTR es:[edi],eax
  40d503:	cmp    al,BYTE PTR [edx-0x6c]
  40d506:	popf   
  40d507:	mov    al,al
  40d509:	test   al,0x8b
  40d50b:	pop    esp
  40d50c:	sub    eax,0x58f817a4
  40d511:	out    0x5f,al
  40d513:	push   ebp
  40d514:	mov    dl,al
  40d516:	sub    eax,DWORD PTR [eax]
  40d518:	pop    ecx
  40d519:	loopne 0x40d51e
  40d51b:	call   0x41892e
  40d520:	pop    edi
  40d521:	imul   ebx,ecx,0x5dccd74
  40d527:	push   esi
  40d528:	in     eax,dx
  40d529:	nop
  40d52a:	aad    0xff
  40d52c:	repnz xor eax,0x6be8e388
  40d532:	popf   
  40d533:	dec    edi
  40d534:	in     eax,dx
  40d535:	mov    eax,0x26daff6c
  40d53a:	ret    0x335e
  40d53d:	fmul   st,st(4)
  40d53f:	rcl    ecx,0xa0
  40d542:	and    edi,0x48089cd5
  40d548:	inc    ecx
  40d549:	mov    al,ds:0xbfd1
  40d54e:	xchg   esi,eax
  40d54f:	push   es
  40d550:	rcl    DWORD PTR [edi-0x6a],cl
  40d553:	or     ebx,edx
  40d555:	ror    DWORD PTR [edx],1
  40d557:	(bad)  
  40d558:	mov    bl,0x8a
  40d55a:	scas   al,BYTE PTR es:[edi]
  40d55b:	mov    BYTE PTR [ebx+eax*2-0x2a],al
  40d55f:	or     ecx,ebp
  40d561:	xor    cl,0x91
  40d564:	call   0x68f2239b
  40d569:	fidivr DWORD PTR [edx+0x3c]
  40d56c:	sahf   
  40d56d:	push   cs
  40d56e:	pop    ecx
  40d56f:	mov    edx,0x84d503e7
  40d574:	stos   DWORD PTR es:[edi],eax
  40d575:	fwait
  40d576:	adc    ah,BYTE PTR [edx-0x6da46a48]
  40d57c:	ins    BYTE PTR es:[edi],dx
  40d57d:	ret    
  40d57e:	jecxz  0x40d50d
  40d580:	es add al,0xd5
  40d583:	or     DWORD PTR [edx+0x48],esi
  40d586:	int    0xa1
  40d588:	aas    
  40d589:	sahf   
  40d58a:	cmp    edx,DWORD PTR [edx+0x38dd5063]
  40d590:	cdq    
  40d591:	mov    WORD PTR [ecx+0x2a36d0ad],ss
  40d597:	xchg   edx,eax
  40d598:	fisttp QWORD PTR [ecx-0x6b9dfe67]
  40d59e:	stos   DWORD PTR es:[edi],eax
  40d59f:	jle    0x40d53f
  40d5a1:	lods   al,BYTE PTR ds:[esi]
  40d5a2:	out    0xa,al
  40d5a4:	jmp    0x340a2eac
  40d5a9:	or     ah,BYTE PTR [ebx-0xd29875f]
  40d5af:	xchg   ecx,eax
  40d5b0:	stc    
  40d5b1:	xchg   ebp,eax
  40d5b2:	add    BYTE PTR [eax],al
  40d5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b5:	xchg   edx,eax
  40d5b6:	imul   esp,DWORD PTR [edi],0xc3da08e9
  40d5bc:	adc    BYTE PTR [ecx+eax*4+0x4],cl
  40d5c0:	pop    esp
  40d5c1:	(bad)  
  40d5c3:	mov    eax,DWORD PTR [ecx-0x66]
  40d5c6:	imul   edx,DWORD PTR [esi-0x219702ba],0xffffffba
  40d5cd:	push   ss
  40d5ce:	add    dh,ch
  40d5d0:	push   ss
  40d5d1:	mov    bh,BYTE PTR [ebp-0x18]
  40d5d4:	(bad)  
  40d5d5:	adc    eax,0x9a6daf03
  40d5da:	test   BYTE PTR [ecx],ch
  40d5dc:	mov    eax,0xf26452de
  40d5e1:	mov    eax,ds:0x9d077e7
  40d5e6:	add    BYTE PTR [ebp-0x67],ch
  40d5e9:	add    BYTE PTR [ecx+ebx*4+0x690009d7],al
  40d5f0:	xchg   edx,eax
  40d5f1:	and    esp,edx
  40d5f3:	stos   BYTE PTR es:[edi],al
  40d5f4:	(bad)  
  40d5f5:	or     dh,BYTE PTR [edi-0x57]
  40d5f8:	test   BYTE PTR [eax+ebp*8+0x9d138],dh
  40d5ff:	mov    edx,0x6d149106
  40d604:	inc    edi
  40d605:	sar    edi,1
  40d607:	imul   ebx,DWORD PTR [ecx],0x1d
  40d60a:	push   cs
  40d60b:	ins    BYTE PTR es:[edi],dx
  40d60c:	xchg   edx,eax
  40d60d:	mov    eax,ds:0x9d9bbe7
  40d612:	add    BYTE PTR [ecx+edx*1+0x16],ah
  40d616:	call   0x1b40d6ed
  40d61b:	adc    DWORD PTR [ebp-0x2f],edi
  40d61e:	(bad)  
  40d61f:	push   ss
  40d620:	or     dh,dl
  40d622:	jmp    0x40d5bd
  40d624:	out    0xd,eax
  40d626:	and    edx,DWORD PTR [ecx+0x7e3dfbfe]
  40d62c:	je     0x40d5ef
  40d62e:	cs jg  0x40d625
  40d631:	mov    dh,0x51
  40d633:	add    edx,0xffffffc0
  40d636:	jmp    0x5429d644
  40d63b:	push   esi
  40d63c:	retf   
  40d63d:	pushf  
  40d63e:	cmp    DWORD PTR [eax-0x6ec23219],edx
  40d644:	(bad)  
  40d645:	pop    esp
  40d646:	adc    esp,DWORD PTR [edx+0x4f]
  40d649:	add    BYTE PTR [ebx-0x9],bl
  40d64c:	jecxz  0x40d5d9
  40d64e:	jb     0x40d62c
  40d650:	out    0x7,eax
  40d652:	xor    ch,BYTE PTR [esi-0x3]
  40d655:	mov    ebx,ecx
  40d657:	pop    ecx
  40d658:	sbb    ebx,0xffffff81
  40d65b:	mov    cs,WORD PTR [ebx+0x67dc4445]
  40d661:	add    BYTE PTR [eax+0x49],ch
  40d664:	add    BYTE PTR [eax+0x7d],ch
  40d667:	or     al,0x0
  40d669:	sbb    BYTE PTR [ebx],0x98
  40d66c:	dec    edx
  40d66d:	adc    ebp,DWORD PTR [esp+ecx*1]
  40d670:	mov    ebx,eax
  40d672:	mov    bl,0x51
  40d674:	sbb    bl,bl
  40d676:	mov    edx,0xe94de9c9
  40d67b:	xchg   DWORD PTR [edx-0x2],ebx
  40d67e:	add    BYTE PTR [eax],al
  40d680:	mov    ebx,0xb18d4e6d
  40d685:	enter  0xfffa,0xdb
  40d689:	fs ret 0x2c32
  40d68d:	or     al,0x8b
  40d68f:	jne    0x40d6cd
  40d691:	mov    cl,dl
  40d693:	call   0x3f8ffe
  40d698:	mov    ebp,0x2cc7fe71
  40d69d:	or     al,0x76
  40d69f:	dec    esp
  40d6a0:	xchg   BYTE PTR [eax],cl
  40d6a2:	pop    edi
  40d6a3:	mov    esi,DWORD PTR [ecx-0xba2788b]
  40d6a9:	jb     0x40d71e
  40d6ab:	or     BYTE PTR [ecx-0x1ca957b6],cl
  40d6b1:	aad    0x67
  40d6b3:	add    BYTE PTR [eax+0x48],ch
  40d6b6:	add    al,ch
  40d6b8:	xchg   esi,eax
  40d6b9:	add    eax,DWORD PTR [edx]
  40d6bb:	add    BYTE PTR [esi+0x4d],ah
  40d6be:	cmp    DWORD PTR [ebp+0x3c],esi
  40d6c1:	stc    
  40d6c2:	add    eax,0x7a88d556
  40d6c7:	xor    al,0xd5
  40d6c9:	mov    al,ds:0x86918487
  40d6ce:	call   0xd5ab:0x727925fe
  40d6d5:	mov    al,ds:0xa1bd7c82
  40d6da:	or     DWORD PTR [ebp-0x164d7ee],eax
  40d6e0:	call   0x5400:0xe792b6
  40d6e7:	out    dx,al
  40d6e8:	add    eax,DWORD PTR [eax]
  40d6ea:	jl     0x40d74f
  40d6ec:	cdq    
  40d6ed:	inc    BYTE PTR [edx+0x7e82cb94]
  40d6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f4:	or     DWORD PTR [ebp+0x5e04cb94],edx
  40d6fa:	pop    esi
  40d6fb:	out    0x2d,eax
  40d6fd:	add    BYTE PTR [esi-0x4d28541f],ch
  40d703:	mov    al,ds:0x398b0f02
  40d708:	je     0x40d77d
  40d70a:	xchg   ebp,eax
  40d70b:	mov    al,ds:0xdd4fe85
  40d710:	jo     0x40d69e
  40d712:	nop
  40d713:	cwde   
  40d714:	xor    cl,BYTE PTR [ebp-0x16822a8]
  40d71a:	sub    dh,BYTE PTR [ecx-0x73]
  40d71d:	ret    0x464e
  40d720:	xchg   esp,eax
  40d721:	mov    BYTE PTR [eax+0x65],ah
  40d724:	xchg   esi,eax
  40d725:	(bad)  
  40d726:	adc    cl,cl
  40d728:	inc    ebx
  40d729:	xor    edx,ebp
  40d72b:	mov    al,ds:0x4f58ef8d
  40d730:	or     DWORD PTR [ebp-0x166b07d],eax
  40d736:	pusha  
  40d737:	push   ds
  40d738:	(bad)  
  40d739:	cld    
  40d73a:	jmp    0x5509:0xb0e8325f
  40d741:	add    edx,ebp
  40d743:	mov    al,ds:0x8ed3995f
  40d748:	push   0xbd000018
  40d74d:	or     DWORD PTR [esp+ecx*1],edx
  40d750:	ret    0x7914
  40d753:	stos   DWORD PTR es:[edi],eax
  40d754:	loopne 0x40d72a
  40d756:	call   0x7155375e
  40d75b:	stos   DWORD PTR es:[edi],eax
  40d75c:	cmp    al,0x96
  40d75e:	ins    DWORD PTR es:[edi],dx
  40d75f:	call   0xc0fe:0x39c5c9e4
  40d766:	sub    bh,bh
  40d768:	xchg   edx,eax
  40d769:	xor    eax,0x9d55a762
  40d76e:	mov    al,ds:0x9a09d506
  40d773:	xor    DWORD PTR [edx],esp
  40d775:	mov    ds:0x8e73981f,al
  40d77a:	stc    
  40d77b:	mov    esi,0xdc0d445d
  40d780:	add    DWORD PTR [edx],eax
  40d782:	pushf  
  40d783:	das    
  40d784:	push   ebp
  40d785:	int3   
  40d786:	cwde   
  40d787:	scas   eax,DWORD PTR es:[edi]
  40d788:	xchg   edi,eax
  40d789:	or     eax,ebp
  40d78b:	adc    dl,cl
  40d78d:	(bad)  [ecx]
  40d78f:	scas   al,BYTE PTR es:[edi]
  40d790:	add    BYTE PTR [ebp+0x3b],bh
  40d793:	mov    edi,0xaafd8e39
  40d798:	or     BYTE PTR [eax-0x18],ah
  40d79b:	add    ebx,DWORD PTR [eax+0x44]
  40d79e:	dec    ecx
  40d79f:	xor    esp,DWORD PTR [edx]
  40d7a1:	adc    al,0xc5
  40d7a3:	lea    edx,[eax]
  40d7a5:	cmp    ecx,edx
  40d7a7:	pop    ebx
  40d7a8:	push   es
  40d7a9:	mov    ss,ebp
  40d7ab:	xchg   DWORD PTR [ecx+0x2c3869],edx
  40d7b1:	add    ch,dl
  40d7b3:	dec    ebp
  40d7b4:	sub    DWORD PTR [ebp*2+0x5503e908],eax
  40d7bb:	mov    ?,edi
  40d7bd:	fist   DWORD PTR [edx+0x51e93ffa]
  40d7c3:	mov    dh,0xf6
  40d7c5:	ret    0xc448
  40d7c8:	sbb    edx,eax
  40d7ca:	or     DWORD PTR [edx+eax*8-0x9fcf7f],ecx
  40d7d1:	call   0x279fa026
  40d7d6:	clc    
  40d7d7:	ret    0xe5c1
  40d7da:	(bad)  
  40d7db:	jle    0x40d821
  40d7dd:	mov    ecx,esp
  40d7df:	sbb    BYTE PTR [ecx+ecx*4+0x71],0x97
  40d7e4:	repnz data16 cmp al,0x89
  40d7e8:	mov    edi,0x747edad4
  40d7ed:	dec    ecx
  40d7ee:	cmp    DWORD PTR [ebx-0x24a3b10e],esi
  40d7f4:	mov    edi,0x447e4252
  40d7f9:	inc    ebp
  40d7fa:	test   eax,0x3915748c
  40d7ff:	mov    ?,ebx
  40d801:	cs cmp al,0x80
  40d804:	out    dx,eax
  40d805:	jb     0x40d7a1
  40d807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d808:	dec    edi
  40d809:	jb     0x40d82a
  40d80b:	test   DWORD PTR [ecx+eax*1+0x5e],ebx
  40d80f:	inc    esi
  40d810:	in     al,dx
  40d811:	pusha  
  40d812:	rcr    BYTE PTR [ecx+0xa488],cl
  40d818:	dec    edx
  40d819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d81a:	scas   al,BYTE PTR es:[edi]
  40d81b:	in     eax,0xd6
  40d81d:	or     DWORD PTR [ecx+ebp*1+0x155f7da],eax
  40d824:	nop
  40d825:	aad    0xff
  40d827:	call   0x54cd882c
  40d82c:	cmp    DWORD PTR [ebp-0x73922564],esp
  40d832:	jmp    0x8700:0x8165d89
  40d839:	mov    ebx,0x5bc12c2
  40d83e:	mov    BYTE PTR [ebp+0x27],bl
  40d841:	jb     0x40d817
  40d843:	push   ebx
  40d844:	add    DWORD PTR [ebx-0x18],0xe669a989
  40d84b:	(bad)  
  40d84c:	mov    eax,0x648b0008
  40d851:	or     edi,esi
  40d853:	(bad)  
  40d856:	add    BYTE PTR [eax],al
  40d858:	lods   al,BYTE PTR ds:[esi]
  40d859:	fsin   
  40d85b:	(bad)  
  40d85c:	daa    
  40d85d:	inc    esp
  40d85e:	or     BYTE PTR [eax-0x35],dl
  40d861:	jb     0x40d8d6
  40d863:	in     al,0x5f
  40d865:	enter  0x3be6,0x39
  40d869:	or     BYTE PTR [eax],al
  40d86b:	test   BYTE PTR [esp+edi*8-0xc0eacef],bh
  40d872:	out    0xe8,eax
  40d874:	pop    esp
  40d875:	mov    edi,esi
  40d877:	(bad)  
  40d878:	call   0x464b45
  40d87d:	add    BYTE PTR [edi],ah
  40d87f:	retf   0xfb43
  40d882:	jge    0x40d8c9
  40d884:	push   ebx
  40d885:	lea    eax,[ecx+0x60]
  40d888:	out    0x9a,al
  40d88a:	push   0xf48b0008
  40d88f:	or     edi,esi
  40d891:	jne    0x40d887
  40d893:	mov    al,0x43
  40d895:	sti    
  40d896:	and    ecx,DWORD PTR [esi+edx*1]
  40d899:	add    DWORD PTR [eax+ecx*1],ebp
  40d89c:	cmp    BYTE PTR ds:0x415cac,0x3d
  40d8a3:	stc    
  40d8a4:	push   es
  40d8a5:	xor    al,bh
  40d8a7:	pop    edi
  40d8a8:	xchg   esi,eax
  40d8a9:	add    BYTE PTR [eax+ecx*1],ch
  40d8ac:	lea    esi,[ebp-0x28dc8]
  40d8b2:	aad    0xca
  40d8b4:	ret    0xd5a7
  40d8b7:	mov    ds:0xf2354487,al
  40d8bc:	xchg   esi,eax
  40d8bd:	je     0x40d8d0
  40d8bf:	pop    ss
  40d8c0:	mov    esi,0x927bfd4f
  40d8c5:	(bad)  
  40d8c6:	loop   0x40d8ee
  40d8c8:	cmp    esp,ebp
  40d8ca:	push   eax
  40d8cb:	(bad)  
  40d8cc:	adc    BYTE PTR [esi],bl
  40d8ce:	pusha  
  40d8cf:	out    0x63,al
  40d8d1:	dec    edi
  40d8d2:	cmp    eax,0xd54256a1
  40d8d7:	or     BYTE PTR ds:0x9720d500,al
  40d8dd:	adc    al,0x21
  40d8df:	mov    al,0x42
  40d8e1:	add    BYTE PTR [eax],al
  40d8e3:	add    BYTE PTR [esi+0x79],bl
  40d8e6:	mov    ds,edx
  40d8e8:	mov    edi,0xaec29577
  40d8ed:	push   esi
  40d8ee:	xchg   DWORD PTR [ecx+ebp*1+0x25fe972b],eax
  40d8f5:	es push ecx
  40d8f7:	mov    ebx,0xe7973c81
  40d8fc:	not    BYTE PTR [eax+0x565e0002]
  40d902:	xchg   edx,eax
  40d903:	mov    al,BYTE PTR [esi-0x2ad042b7]
  40d909:	mov    al,ds:0xd8d5fa83
  40d90e:	add    eax,DWORD PTR [eax]
  40d910:	retf   
  40d911:	pop    esp
  40d912:	sub    BYTE PTR [ebx],al
  40d914:	stos   BYTE PTR es:[edi],al
  40d915:	daa    
  40d916:	adc    eax,esi
  40d918:	dec    esp
  40d919:	pop    esi
  40d91a:	or     bh,bh
  40d91c:	rcr    BYTE PTR [eax+0x73754487],0x2d
  40d923:	push   eax
  40d924:	mov    ebp,0xd54256a0
  40d929:	or     BYTE PTR ds:0xe909d70c,cl
  40d92f:	mov    DWORD PTR [edx],ebp
  40d931:	iret   
  40d932:	push   ebx
  40d933:	xchg   esp,eax
  40d934:	xchg   BYTE PTR [ebx],al
  40d936:	aas    
  40d937:	lods   al,BYTE PTR ds:[esi]
  40d938:	rcl    dh,0xe8
  40d93b:	add    ecx,DWORD PTR [eax-0x7b]
  40d93e:	lods   al,BYTE PTR ds:[esi]
  40d93f:	cwde   
  40d940:	repz mov bl,BYTE PTR [eax]
  40d943:	lods   al,BYTE PTR ds:[esi]
  40d944:	mov    al,ds:0x3e85f
  40d949:	add    BYTE PTR [ebp+0xd],dl
  40d94c:	rol    DWORD PTR [ebx],0xca
  40d94f:	test   ch,al
  40d951:	xchg   ebp,eax
  40d952:	ror    DWORD PTR [edx-0x5e3aef63],cl
  40d958:	enter  0xc2d2,0x8a
  40d95c:	jg     0x40d90f
  40d95e:	mov    eax,0x9dd2858a
  40d963:	xchg   BYTE PTR [ecx-0x588b2401],al
  40d969:	sub    edi,edx
  40d96b:	sub    esp,DWORD PTR [edx-0x43]
  40d96e:	sub    al,0xa
  40d970:	adc    al,ch
  40d972:	jp     0x40d986
  40d974:	add    al,0x4
  40d976:	aad    0xfa
  40d978:	sahf   
  40d979:	pop    ebx
  40d97a:	push   edx
  40d97b:	adc    eax,0x8a5603a9
  40d980:	out    0x10,eax
  40d982:	dec    eax
  40d983:	jl     0x40d928
  40d985:	or     eax,DWORD PTR ds:0x5e576b7d
  40d98b:	mov    ch,BYTE PTR ds:0x71c64e33
  40d991:	cmp    BYTE PTR [ebp-0x80],al
  40d994:	push   ebx
  40d995:	push   edi
  40d996:	dec    esi
  40d997:	mov    dl,BYTE PTR ds:0xe8d922ab
  40d99d:	add    ecx,DWORD PTR [esi-0x67]
  40d9a0:	imul   ecx,DWORD PTR [ebp-0x69897b1d],0x2b
  40d9a7:	mov    bh,bh
  40d9a9:	arpl   WORD PTR [ebp-0x3a],dx
  40d9ac:	cld    
  40d9ad:	out    dx,al
  40d9ae:	add    BYTE PTR [eax],al
  40d9b0:	inc    eax
  40d9b1:	cmp    ch,al
  40d9b3:	mov    ch,0x7e
  40d9b5:	mov    bh,dh
  40d9b7:	shl    BYTE PTR [edi-0x74],1
  40d9ba:	(bad)  
  40d9bb:	(bad)  
  40d9bc:	pop    ecx
  40d9bd:	or     eax,0x84d1e9e8
  40d9c2:	ins    DWORD PTR es:[edi],dx
  40d9c3:	(bad)  
  40d9c4:	dec    eax
  40d9c5:	mov    edi,esi
  40d9c7:	xor    al,0x41
  40d9c9:	mov    eax,ds:0x8b48b760
  40d9ce:	push   esp
  40d9cf:	bound  ebp,QWORD PTR ds:0x401eb87
  40d9d5:	loopne 0x40d961
  40d9d7:	aam    0x8a
  40d9d9:	sbb    eax,DWORD PTR [eax-0x17]
  40d9dc:	dec    ebp
  40d9dd:	popa   
  40d9de:	push   esi
  40d9df:	fs jl  0x40d9e4
  40d9e2:	or     DWORD PTR [esi-0x6800ea1e],eax
  40d9e8:	pop    esp
  40d9e9:	popa   
  40d9ea:	test   BYTE PTR [edx+0x248cebcb],dl
  40d9f0:	leave  
  40d9f1:	(bad)  [edx+0x6971deac]
  40d9f7:	bound  esp,QWORD PTR [eax-0x78]
  40d9fa:	dec    edi
  40d9fb:	inc    ecx
  40d9fc:	fstp   TBYTE PTR [esi+edi*8+0x4e]
  40da00:	dec    esp
  40da01:	fiadd  WORD PTR [edi]
  40da03:	push   0xffffffd2
  40da05:	cmp    edi,0xc5515d9a
  40da0b:	lods   al,BYTE PTR ds:[esi]
  40da0c:	cmp    cl,BYTE PTR [ecx-0x6db96b79]
  40da12:	inc    esp
  40da13:	sbb    eax,0xc9810000
  40da18:	add    ecx,ebp
  40da1a:	(bad)  
  40da1b:	lea    edi,[edi+0x15742d9d]
  40da21:	mov    edx,0xbfe61
  40da26:	push   ebx
  40da27:	sahf   
  40da28:	aam    0x50
  40da2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da2b:	dec    eax
  40da2c:	adc    BYTE PTR [ebx-0x4c814a05],cl
  40da32:	sub    al,0xd
  40da34:	test   al,al
  40da36:	mov    cl,0x69
  40da38:	mov    eax,DWORD PTR [ebp+0x18]
  40da3b:	mov    ch,0x22
  40da3d:	add    ebp,esp
  40da3f:	or     al,0x8b
  40da41:	clc    
  40da42:	jno    0x40d9e1
  40da44:	jae    0x40da22
  40da46:	aam    0x48
  40da48:	in     al,dx
  40da49:	jne    0x40da2f
  40da4b:	popf   
  40da4c:	jae    0x40da42
  40da4e:	adc    al,0x6e
  40da50:	xor    BYTE PTR [eax],al
  40da52:	in     al,dx
  40da53:	pop    edx
  40da54:	mov    esi,0xc9431a5f
  40da59:	ret    0xcb8
  40da5c:	cmp    BYTE PTR [ebp+0x58],0xc
  40da60:	jne    0x40da6a
  40da62:	dec    ebx
  40da63:	pop    ss
  40da64:	hlt    
  40da65:	call   0x3f351e
  40da6a:	in     al,dx
  40da6b:	or     ebp,ebx
  40da6d:	out    0xc1,eax
  40da6f:	xchg   edx,eax
  40da70:	jmp    0x957:0x563abd51
  40da77:	dec    eax
  40da78:	clc    
  40da79:	push   eax
  40da7a:	add    BYTE PTR [eax],al
  40da7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da7d:	cmc    
  40da7e:	(bad)  
  40da7f:	jmp    FWORD PTR [esp+esi*4-0x75]
  40da83:	repnz or ebx,DWORD PTR [esi+0x47c2f089]
  40da8a:	inc    DWORD PTR [eax]
  40da8c:	icebp  
  40da8d:	xchg   esi,eax
  40da8e:	jb     0x40dacc
  40da90:	test   edi,0x59846af7
  40da96:	ror    BYTE PTR [ebx-0x808c203],1
  40da9c:	mov    cl,0xba
  40da9e:	jae    0x40dacc
  40daa0:	aad    0xed
  40daa2:	div    BYTE PTR [eax]
  40daa4:	dec    esi
  40daa5:	sbb    al,bl
  40daa7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa9:	push   ebx
  40daaa:	sub    BYTE PTR [edx+ebp*1],dl
  40daad:	std    
  40daae:	or     cl,BYTE PTR [ebp-0xcd8966]
  40dab4:	rcr    BYTE PTR [esi-0x14],0x3f
  40dab8:	aad    0xf3
  40daba:	(bad)  
  40dabb:	or     edx,DWORD PTR [eax-0x4e]
  40dabe:	pop    ss
  40dabf:	or     DWORD PTR [esi-0x49],edx
  40dac2:	jmp    0x40dafe
  40dac4:	(bad)  
  40dac5:	jecxz  0x40da6d
  40dac7:	jmp    0x20d4:0xff48b8d9
  40dace:	pushf  
  40dacf:	mov    cl,0xa4
  40dad1:	jb     0x40dad5
  40dad3:	mov    dl,BYTE PTR [eax+0x2e5e32b7]
  40dad9:	mov    edx,0x3dd503c5
  40dade:	jg     0x40dacb
  40dae0:	add    BYTE PTR [eax],al
  40dae2:	push   esp
  40dae3:	(bad)  
  40dae4:	out    0x2,eax
  40dae6:	aad    0x70
  40dae8:	test   DWORD PTR [ebp+ebx*8+0x70],edi
  40daec:	xor    eax,0xf3ecda56
  40daf1:	add    ch,dl
  40daf3:	jo     0x40da7c
  40daf5:	dec    dl
  40daf7:	in     al,dx
  40daf8:	sti    
  40daf9:	add    ch,dl
  40dafb:	jo     0x40db36
  40dafd:	inc    DWORD PTR [eax]
  40daff:	jns    0x40da9b
  40db01:	out    dx,eax
  40db02:	les    esi,FWORD PTR [eax+0x2]
  40db05:	mov    ebx,DWORD PTR [ebp-0x258b5112]
  40db0b:	add    dl,0xe8
  40db0e:	adc    al,0x72
  40db10:	add    al,BYTE PTR [eax]
  40db12:	push   ebp
  40db13:	jle    0x40db27
  40db15:	aam    0x16
  40db17:	jno    0x40db1c
  40db19:	ja     0x40daf7
  40db1b:	or     DWORD PTR [edi],ebp
  40db1d:	dec    ecx
  40db1e:	fimul  WORD PTR [ecx]
  40db20:	adc    BYTE PTR [ecx-0x7f1778be],bh
  40db26:	sub    DWORD PTR [esi+0xb],0xa4723393
  40db2d:	imul   ebp,DWORD PTR [edx],0x61496b87
  40db33:	fiadd  DWORD PTR [eax-0x1778e595]
  40db39:	jle    0x40db53
  40db3b:	fcmovbe st,st(0)
  40db3d:	rol    BYTE PTR ds:0x5980dd87,1
  40db43:	(bad)  
  40db44:	(bad)  
  40db45:	xchg   edx,eax
  40db46:	add    BYTE PTR [eax],al
  40db48:	sti    
  40db49:	fstp   DWORD PTR [ebx+0x58]
  40db4c:	push   cs
  40db4d:	xchg   ch,al
  40db4f:	xchg   edx,eax
  40db50:	repnz es (bad) 
  40db54:	aad    0x92
  40db56:	popf   
  40db57:	jle    0x40db40
  40db59:	jno    0x40dbb1
  40db5b:	loope  0x40db2f
  40db5d:	xchg   BYTE PTR [edi-0x6e],ah
  40db60:	retf   0xe84e
  40db63:	add    ecx,DWORD PTR [ebx+0x11]
  40db66:	scas   al,BYTE PTR es:[edi]
  40db67:	dec    eax
  40db68:	mov    ebp,0xd503e90a
  40db6d:	jb     0x40db8d
  40db6f:	xlat   BYTE PTR ds:[ebx]
  40db70:	popf   
  40db71:	mov    bh,BYTE PTR [ebp+0x7]
  40db74:	rcr    BYTE PTR [edi+eiz*4+0x61e7d71d],cl
  40db7b:	leave  
  40db7c:	cld    
  40db7d:	or     DWORD PTR [edx],edx
  40db7f:	lds    esi,FWORD PTR [edx-0x2]
  40db82:	or     DWORD PTR [edx*8+0x4a839f16],eax
  40db89:	std    
  40db8a:	test   al,0x3
  40db8c:	pop    esp
  40db8d:	int3   
  40db8e:	inc    eax
  40db8f:	xchg   BYTE PTR [edx+0x8],ah
  40db92:	mov    ah,0xe2
  40db94:	push   ecx
  40db95:	int3   
  40db96:	jmp    eax
  40db98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db99:	xchg   esp,eax
  40db9a:	test   BYTE PTR ds:0xb9fe8762,cl
  40dba0:	retf   
  40dba1:	dec    edi
  40dba2:	mov    BYTE PTR [edx+esi*2-0x7e],dl
  40dba6:	(bad)  
  40dba7:	push   ss
  40dba8:	pop    esi
  40dba9:	sub    ax,0xe9
  40dbad:	add    dh,dl
  40dbaf:	xchg   edx,eax
  40dbb0:	out    dx,eax
  40dbb1:	ins    BYTE PTR es:[edi],dx
  40dbb2:	dec    esp
  40dbb3:	std    
  40dbb4:	adc    eax,0xfc6a4d6c
  40dbb9:	test   BYTE PTR [esi+edx*8-0x19],0x19
  40dbbe:	jg     0x40db46
  40dbc0:	(bad)  
  40dbc1:	sar    BYTE PTR [eax-0x7f21017a],1
  40dbc7:	jnp    0x40db51
  40dbc9:	push   esp
  40dbca:	stc    
  40dbcb:	xchg   BYTE PTR [ecx+eiz*8+0x73],dh
  40dbcf:	int    0xbb
  40dbd1:	pop    ds
  40dbd2:	inc    esp
  40dbd3:	std    
  40dbd4:	neg    DWORD PTR [ecx]
  40dbd6:	ror    DWORD PTR [ecx],0xbc
  40dbd9:	sub    dl,cl
  40dbdb:	jno    0x40dc47
  40dbdd:	loopne 0x40dbb7
  40dbdf:	or     DWORD PTR [eax-0xcbf37d4],ecx
  40dbe5:	adc    eax,0x49e7dbcf
  40dbea:	mov    eax,ds:0x5a5cfe85
  40dbef:	imul   edi,esp,0xe7d54486
  40dbf5:	popa   
  40dbf6:	sub    al,0x85
  40dbf8:	(bad)  
  40dbf9:	arpl   WORD PTR [edx],dx
  40dbfb:	adc    DWORD PTR [eax-0x18276fdc],ecx
  40dc01:	jno    0x40dba4
  40dc03:	test   esi,edi
  40dc05:	jae    0x40dc21
  40dc07:	adc    ebx,ebp
  40dc09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc0a:	push   esi
  40dc0b:	inc    esi
  40dc0c:	jo     0x40dc43
  40dc0e:	sbb    BYTE PTR [edx],cl
  40dc10:	add    DWORD PTR [eax],eax
  40dc12:	add    BYTE PTR [eax],al
  40dc14:	arpl   WORD PTR [ebx-0x655c0108],dx
  40dc1a:	mov    esi,DWORD PTR [ebp-0x26af8]
  40dc20:	xchg   esp,eax
  40dc21:	sub    ah,BYTE PTR [ebp+0x44043c00]
  40dc27:	mov    esp,0x98217c
  40dc2c:	sub    al,0x9
  40dc2e:	mov    eax,esi
  40dc30:	ins    BYTE PTR es:[edi],dx
  40dc31:	mov    eax,ds:0x9ad3f04e
  40dc36:	mov    eax,DWORD PTR [ebp-0x20]
  40dc39:	cmp    eax,0xcee00068
  40dc3e:	jmp    DWORD PTR [edi-0x3]
  40dc41:	or     BYTE PTR [eax],al
  40dc43:	xor    bl,0x7b
  40dc46:	dec    edx
  40dc47:	adc    ebp,DWORD PTR [ebp+ecx*1-0x49e42775]
  40dc4e:	mov    esi,eax
  40dc50:	out    0xb5,al
  40dc52:	dec    esi
  40dc53:	(bad)  
  40dc54:	aas    
  40dc55:	mov    eax,ds:0x8eca738
  40dc5a:	mov    al,bl
  40dc5c:	ret    0xc936
  40dc5f:	ret    0x8b8
  40dc62:	push   ebp
  40dc63:	mov    esp,DWORD PTR [eax+0x37]
  40dc66:	push   esi
  40dc67:	push   edi
  40dc68:	xor    esp,ecx
  40dc6a:	sti    
  40dc6b:	push   eax
  40dc6c:	aam    0xf3
  40dc6e:	(bad)  
  40dc6f:	(bad)  
  40dc70:	mov    esp,0x53f0a7a0
  40dc75:	cdq    
  40dc76:	mov    eax,esi
  40dc78:	add    BYTE PTR [eax],al
  40dc7a:	cmp    DWORD PTR [ebx-0x33c8df8e],esp
  40dc80:	sti    
  40dc81:	mov    ecx,0x767
  40dc86:	out    dx,eax
  40dc87:	mov    ebx,0xa22bf989
  40dc8c:	adc    edx,0xffffffd5
  40dc8f:	add    BYTE PTR gs:[ecx],bh
  40dc92:	and    bh,dl
  40dc94:	adc    al,0x9
  40dc96:	pop    esi
  40dc97:	mov    ebp,0xf7d488fa
  40dc9c:	enter  0xcdea,0xa4
  40dca0:	call   0x1533:0x27302ed
  40dca7:	dec    ebx
  40dca8:	xor    cl,cl
  40dcaa:	pop    ss
  40dcab:	outs   dx,BYTE PTR ds:[esi]
  40dcac:	add    dl,BYTE PTR [ebp+0x4e]
  40dcaf:	push   cs
  40dcb0:	xor    dl,BYTE PTR [ecx-0x75]
  40dcb3:	in     eax,0x45
  40dcb5:	cld    
  40dcb6:	test   DWORD PTR [eax-0x7d4617da],ebx
  40dcbc:	mov    ?,esi
  40dcbe:	dec    esi
  40dcbf:	sub    al,BYTE PTR [esi+0x7b5689c8]
  40dcc5:	inc    esp
  40dcc6:	or     eax,ebx
  40dcc8:	leave  
  40dcc9:	xor    ah,BYTE PTR [edi]
  40dccb:	inc    esp
  40dccc:	xchg   edi,eax
  40dccd:	cmc    
  40dcce:	push   eax
  40dccf:	rcr    BYTE PTR [eax],0xe
  40dcd2:	lods   al,BYTE PTR ds:[esi]
  40dcd3:	fisttp QWORD PTR [edi+0x38f7dc71]
  40dcd9:	or     BYTE PTR [eax+esi*2+0x79],cl
  40dcdd:	rol    BYTE PTR [eax],0x0
  40dce0:	out    dx,al
  40dce1:	imul   esi,DWORD PTR [ebx],0x28480e8
  40dce7:	add    BYTE PTR [esi],al
  40dce9:	mov    cl,0x2d
  40dceb:	leave  
  40dcec:	xchg   edi,eax
  40dced:	ins    DWORD PTR es:[edi],dx
  40dcee:	add    ch,BYTE PTR [edx-0x37]
  40dcf1:	or     BYTE PTR [esp+eiz*2+0x16],bh
  40dcf5:	jno    0x40dc91
  40dcf7:	add    DWORD PTR [edi+0x6f],esi
  40dcfa:	add    dh,BYTE PTR [ebx]
  40dcfc:	xchg   DWORD PTR [eax-0x48],ecx
  40dcff:	jae    0x40dcdf
  40dd01:	out    dx,eax
  40dd02:	adc    BYTE PTR [eax],cl
  40dd04:	xlat   BYTE PTR ds:[ebx]
  40dd05:	jb     0x40dcde
  40dd07:	mov    BYTE PTR [eax],ah
  40dd09:	or     ah,BYTE PTR [ebp-0x2d]
  40dd0c:	inc    edx
  40dd0d:	xchg   ecx,eax
  40dd0e:	mov    ds:0xe0ccbfa7,eax
  40dd13:	adc    BYTE PTR [ecx-0x1e040abf],bh
  40dd19:	sbb    al,0x1
  40dd1b:	cmp    ch,cl
  40dd1d:	or     BYTE PTR [esi+edi*8-0x3515b5a9],dh
  40dd24:	cdq    
  40dd25:	adc    esi,ebx
  40dd27:	ja     0x40dcb3
  40dd29:	xchg   DWORD PTR [ebx-0x790bc71],esi
  40dd2f:	inc    ebx
  40dd30:	cs pop edi
  40dd32:	fld    st(3)
  40dd34:	repnz inc esi
  40dd36:	popa   
  40dd37:	sub    DWORD PTR ds:0x238fb387,edi
  40dd3d:	cmp    BYTE PTR [ecx],ch
  40dd3f:	pushf  
  40dd40:	and    DWORD PTR [ecx+0x3ea],ebp
  40dd46:	pop    ss
  40dd47:	push   cs
  40dd48:	jmp    0x3d82021f
  40dd4d:	call   0x7b4adb28
  40dd52:	xchg   ebp,eax
  40dd53:	adc    DWORD PTR [edx],edx
  40dd55:	ret    0x2566
  40dd58:	sbb    bh,BYTE PTR [ebp+0x3c19a2]
  40dd5e:	popf   
  40dd5f:	(bad)  
  40dd61:	pop    ss
  40dd62:	iret   
  40dd63:	enter  0x3ff1,0xf9
  40dd67:	or     eax,0x6f150735
  40dd6c:	xchg   ebx,eax
  40dd6d:	rol    BYTE PTR [edx-0x51bc1992],cl
  40dd73:	push   es
  40dd74:	bound  eax,QWORD PTR [ebp+ebx*8+0x47]
  40dd78:	in     al,0x3
  40dd7a:	pop    esi
  40dd7b:	shl    esp,1
  40dd7d:	mov    BYTE PTR [ebp+0x127af2fc],cl
  40dd83:	adc    al,BYTE PTR [eax]
  40dd85:	pusha  
  40dd86:	into   
  40dd87:	adc    eax,0x46d5298b
  40dd8c:	mov    bh,BYTE PTR [ecx-0x2435c082]
  40dd92:	test   esp,ebx
  40dd94:	mov    bl,cl
  40dd96:	fiadd  DWORD PTR [esi]
  40dd98:	repnz adc ch,BYTE PTR [ebx]
  40dd9b:	in     al,0x72
  40dd9d:	fcmovnu st,st(4)
  40dd9f:	sbb    DWORD PTR [ecx+0x70],eax
  40dda2:	sahf   
  40dda3:	adc    eax,0x7bed1b84
  40dda8:	aaa    
  40dda9:	fadd   DWORD PTR [eax]
  40ddab:	add    ch,ch
  40ddad:	gs inc eax
  40ddaf:	jo     0x40ddaf
  40ddb1:	adc    eax,0x2172933
  40ddb6:	aas    
  40ddb7:	jmp    0x2972e886
  40ddbc:	dec    ecx
  40ddbd:	(bad)  
  40ddbe:	(bad)  
  40ddbf:	call   0x763fb49a
  40ddc4:	xor    cl,BYTE PTR [edx]
  40ddc6:	(bad)  
  40ddc7:	fcomp  QWORD PTR [edx]
  40ddc9:	sbb    BYTE PTR [eax-0x17],al
  40ddcc:	(bad)  
  40ddcd:	pop    edx
  40ddce:	test   dl,al
  40ddd0:	ror    BYTE PTR ds:0xfd5ca932,1
  40ddd6:	push   ebp
  40ddd7:	fs enter 0x8311,0xf
  40dddc:	sar    esp,1
  40ddde:	and    dh,BYTE PTR [esp+edx*4+0x7]
  40dde2:	push   eax
  40dde3:	shl    DWORD PTR [esp+esi*1+0x0],1
  40dde7:	jmp    0xa9c5e53b
  40ddec:	in     eax,dx
  40dded:	and    eax,0x25dda653
  40ddf2:	adc    BYTE PTR [ecx],bh
  40ddf4:	dec    eax
  40ddf5:	push   ss
  40ddf6:	adc    bh,bh
  40ddf8:	push   ss
  40ddf9:	or     al,BYTE PTR [ebx+0x5e92d5a5]
  40ddff:	add    BYTE PTR [eax-0xc74d35e],dh
  40de05:	adc    DWORD PTR [ebp-0x17f35bb4],ecx
  40de0b:	retf   
  40de0c:	dec    ecx
  40de0d:	or     eax,0x8400
  40de12:	lods   al,BYTE PTR ds:[esi]
  40de13:	sbb    BYTE PTR [edx+esi*1],al
  40de16:	lods   al,BYTE PTR ds:[esi]
  40de17:	mov    ds:0x8e7a8b32,al
  40de1c:	dec    ebp
  40de1d:	add    al,0x7f
  40de1f:	ds add al,0x53
  40de22:	sbb    esp,DWORD PTR [edx]
  40de24:	and    al,0x10
  40de26:	cmp    eax,0x3210138e
  40de2b:	int    0xff
  40de2d:	xor    al,0x9
  40de30:	add    DWORD PTR [edi+0x30],ebx
  40de33:	add    al,BYTE PTR [esi+0x4]
  40de36:	(bad)  
  40de37:	jg     0x40ddfd
  40de39:	add    al,0x34
  40de3b:	or     eax,0x23047ff
  40de40:	inc    esi
  40de41:	add    al,0xa7
  40de43:	jg     0x40de09
  40de45:	add    al,0x24
  40de47:	or     eax,0xdd0047ff
  40de4c:	call   FWORD PTR [ebp+0x67]
  40de4f:	dec    ebx
  40de50:	add    al,BYTE PTR [eax]
  40de52:	rol    DWORD PTR [edx],0xeb
  40de55:	sbb    bl,0x5
  40de58:	je     0x40de5e
  40de5a:	into   
  40de5b:	inc    ebp
  40de5c:	jmp    0x73cf80c2
  40de61:	or     BYTE PTR [edi-0x43],ah
  40de64:	out    0xe6,al
  40de66:	sbb    cl,BYTE PTR [esi+0x38c8bfd]
  40de6c:	je     0x40de76
  40de6e:	xor    DWORD PTR [edi+0x4c9e0473],edx
  40de74:	jmp    0xff40dec1
  40de79:	aaa    
  40de7a:	call   DWORD PTR ds:0x3ff0aed5
  40de80:	aad    0xeb
  40de82:	cmp    eax,DWORD PTR [eax+edx*2]
  40de85:	sub    al,BYTE PTR [ebx]
  40de87:	(bad)  
  40de88:	rol    ebx,1
  40de8a:	xlat   BYTE PTR ds:[ebx]
  40de8b:	(bad)  
  40de8c:	pusha  
  40de8d:	jg     0x40de89
  40de8f:	add    bl,bl
  40de91:	and    DWORD PTR [edi+edi*8],esi
  40de94:	or     BYTE PTR [ebx-0x75],bh
  40de97:	adc    al,0xe5
  40de99:	js     0x40dedd
  40de9b:	add    BYTE PTR [edi+esi*4+0x671a8b06],bh
  40dea2:	jg     0x40de67
  40dea4:	shr    DWORD PTR [ebx-0x4a2b0781],1
  40deaa:	sti    
  40deab:	dec    BYTE PTR [ebx]
  40dead:	retf   
  40deae:	fwait
  40deaf:	sub    al,0xd5
  40deb1:	jb     0x40df32
  40deb3:	and    eax,0x43c27d5
  40deb8:	cs gs call 0xd4b0:0x273001f
  40dec1:	mov    al,0x2d
  40dec3:	ret    0x72d9
  40dec6:	xor    eax,0x9ef1298b
  40decb:	aaa    
  40decc:	fnstenv [edx+0x2]
  40decf:	or     DWORD PTR [eax-0x54acfd96],0x3f
  40ded6:	sti    
  40ded7:	or     DWORD PTR [ebx],0x72
  40deda:	add    al,BYTE PTR [eax]
  40dedc:	add    BYTE PTR [eax],al
  40dede:	jg     0x40df46
  40dee0:	sub    eax,0xfbd4ea53
  40dee5:	mov    WORD PTR [eax-0x3f00cc3e],ds
  40deeb:	(bad)  
  40deec:	lock aas 
  40deee:	aad    0xf3
  40def0:	mov    edi,0x126e550b
  40def5:	aam    0x16
  40def7:	or     ch,cl
  40def9:	add    al,0x42
  40defb:	pop    es
  40defc:	fcmovnb st,st(3)
  40defe:	mov    ebp,0xd503e884
  40df03:	mov    WORD PTR [ebx-0x58],ss
  40df06:	mov    eax,ds:0x3c9c857f
  40df0b:	lods   al,BYTE PTR ds:[esi]
  40df0c:	call   0x3d063f14
  40df11:	xor    al,0xff
  40df13:	in     al,0x61
  40df15:	ret    0x7212
  40df18:	out    0x98,al
  40df1a:	jnp    0x40df9b
  40df1c:	imul   eax,DWORD PTR [ecx-0x74aa8002],0x1a
  40df23:	lea    edx,[ebx+0x457f5fb8]
  40df29:	pushf  
  40df2a:	cli    
  40df2b:	xor    ebp,ecx
  40df2d:	add    ebx,DWORD PTR [esi+0x5b]
  40df30:	arpl   WORD PTR [ecx],dx
  40df32:	inc    ebp
  40df33:	jb     0x40df4b
  40df35:	fiadd  WORD PTR [edx+0x7f]
  40df38:	fld    st(3)
  40df3a:	lods   al,BYTE PTR ds:[esi]
  40df3b:	or     DWORD PTR [ecx-0x16e0f965],ebp
  40df41:	add    eax,DWORD PTR [eax]
  40df43:	add    dl,bl
  40df45:	mov    bh,0x50
  40df47:	je     0x40deef
  40df49:	leave  
  40df4a:	call   0x7449fad5
  40df4f:	shl    BYTE PTR [ecx-0x3b],1
  40df52:	loopne 0x40df87
  40df54:	pop    eax
  40df55:	test   DWORD PTR [eax+ecx*4],edx
  40df58:	add    edi,DWORD PTR [edi+0x38]
  40df5b:	jg     0x40df74
  40df5d:	xchg   ebx,eax
  40df5e:	mov    esi,0xd45659c2
  40df63:	mov    ch,bl
  40df65:	or     ebp,ecx
  40df67:	add    edx,ebp
  40df69:	jno    0x40df6d
  40df6b:	(bad)  
  40df6d:	jle    0x40dfe0
  40df6f:	xchg   ebx,eax
  40df70:	pop    ecx
  40df71:	ja     0x40df72
  40df73:	cmp    eax,esi
  40df75:	lea    eax,[ebp+ecx*4+0x39fe7f4d]
  40df7c:	pop    ecx
  40df7d:	xor    BYTE PTR [ecx+ebp*8-0x69878f2a],ah
  40df84:	pop    edi
  40df85:	jg     0x40df13
  40df87:	adc    al,0x49
  40df89:	xchg   ecx,eax
  40df8a:	pop    esp
  40df8b:	icebp  
  40df8c:	dec    edi
  40df8d:	cmc    
  40df8e:	pop    es
  40df8f:	ins    BYTE PTR es:[edi],dx
  40df90:	adc    eax,0xc11e55b6
  40df95:	icebp  
  40df96:	jmp    FWORD PTR [ebx+ebx*1]
  40df99:	or     ch,al
  40df9b:	das    
  40df9c:	aad    0xb
  40df9e:	add    BYTE PTR [ebx+0x3e],dh
  40dfa1:	lea    eax,[ecx+ebx*2-0x65]
  40dfa5:	outs   dx,BYTE PTR ds:[esi]
  40dfa6:	jae    0x40df4b
  40dfa8:	add    BYTE PTR [eax],al
  40dfaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfab:	jno    0x40dfa5
  40dfad:	adc    eax,0xabeb09d1
  40dfb2:	push   esi
  40dfb3:	cmp    eax,0x9931d70
  40dfb8:	add    esi,ebx
  40dfba:	push   esp
  40dfbb:	enter  0x26fe,0x4f
  40dfbf:	lea    esi,[ebp+edi*1+0x1fe7f5d]
  40dfc6:	jae    0x40df71
  40dfc8:	(bad)  
  40dfc9:	call   0x99f4a56b
  40dfce:	mov    eax,0xc6278ae4
  40dfd3:	jno    0x40df9b
  40dfd5:	add    eax,0xa48c7f5f
  40dfda:	xchg   edx,eax
  40dfdb:	into   
  40dfdc:	addr16 jmp 0x5140ab74
  40dfe2:	(bad)  
  40dfe3:	or     DWORD PTR [eax],eax
  40dfe5:	imul   ebx,DWORD PTR [ebp+edx*1+0x4c],0x8b0996fa
  40dfed:	add    BYTE PTR [eax+ebx*4],dh
  40dff0:	fstp   DWORD PTR [edx]
  40dff2:	ja     0x40df84
  40dff4:	ror    DWORD PTR [ebp-0x44dc7],0x73
  40dffb:	ss call 0x46efae
  40e001:	mov    bh,BYTE PTR [edi+0x33]
  40e004:	pop    esi
  40e005:	pop    ebx
  40e006:	jne    0x40e04c
  40e008:	add    al,BYTE PTR [eax]
  40e00a:	jmp    0xc2cb0d
  40e00f:	add    BYTE PTR [eax+0x5e],al
  40e012:	add    DWORD PTR [eax],eax
  40e014:	jl     0x40df9c
  40e016:	jnp    0x40e020
  40e018:	jl     0x40e050
  40e01a:	push   esi
  40e01b:	push   edi
  40e01c:	test   DWORD PTR [ebp+0x8b6840d],0x92f90000
  40e026:	or     eax,0x8ce84
  40e02b:	add    BYTE PTR [edi+0x13571592],dl
  40e031:	or     eax,0x619ee808
  40e036:	(bad)  
  40e037:	push   DWORD PTR [ebp-0x137a07c4]
  40e03d:	or     al,0x7
  40e03f:	xor    ch,ah
  40e041:	mov    al,ds:0x93c0165
  40e046:	cmp    BYTE PTR ds:0x41ad4c,0x2d
  40e04d:	sbb    al,BYTE PTR [edi]
  40e04f:	xor    dh,bh
  40e051:	mov    al,ds:0x8fc00fc
  40e056:	lea    esi,[ebp-0x27b28]
  40e05c:	aam    0x42
  40e05e:	mov    eax,ds:0x43f3ec00
  40e063:	mov    esp,0x991dac
  40e068:	aad    0x72
  40e06a:	add    cl,BYTE PTR [ebx+0x2f9c431b]
  40e070:	jmp    0xc567b8
  40e075:	add    dl,dl
  40e077:	xor    eax,0xf7108cdb
  40e07c:	xor    ch,BYTE PTR [eax-0x2b]
  40e07f:	out    dx,al
  40e080:	inc    ebx
  40e081:	add    BYTE PTR ds:0x55000272,ch
  40e087:	fwait
  40e088:	in     eax,dx
  40e089:	dec    ebx
  40e08a:	(bad)  
  40e08b:	xor    al,BYTE PTR [ebx+ecx*4]
  40e08e:	jge    0x40e023
  40e090:	stos   DWORD PTR es:[edi],eax
  40e091:	mov    dl,BYTE PTR [ebx-0x6cb05498]
  40e097:	scas   eax,DWORD PTR es:[edi]
  40e098:	call   0x48e9:0x2723615
  40e09f:	jb     0x40e0a3
  40e0a1:	add    BYTE PTR [eax-0x13],cl
  40e0a4:	push   cs
  40e0a5:	(bad)  
  40e0a6:	jb     0x40e083
  40e0a8:	xor    cl,BYTE PTR [ebp-0x178c9e0]
  40e0ae:	(bad)  
  40e0af:	retf   0x279d
  40e0b2:	aad    0x72
  40e0b4:	jnp    0x40e112
  40e0b6:	dec    ebp
  40e0b7:	imul   DWORD PTR [edi+0x29ca468a]
  40e0bd:	sub    ebp,edx
  40e0bf:	jb     0x40e042
  40e0c1:	(bad)  
  40e0c2:	aad    0x3a
  40e0c4:	add    eax,DWORD PTR [eax]
  40e0c6:	stos   DWORD PTR es:[edi],eax
  40e0c7:	gs sbb al,0x3
  40e0ca:	mov    eax,DWORD PTR [edi]
  40e0cc:	xor    BYTE PTR [ebx],dh
  40e0ce:	or     al,0xef
  40e0d0:	xchg   DWORD PTR [ebx],eax
  40e0d2:	retf   0xc1dd
  40e0d5:	imul   edx,edi,0xc27ba7
  40e0db:	add    BYTE PTR [edi+0x72],bh
  40e0de:	fcmovnb st,st(0)
  40e0e0:	in     eax,dx
  40e0e1:	stos   DWORD PTR es:[edi],eax
  40e0e2:	call   0xf649dbe6
  40e0e7:	dec    ebp
  40e0e8:	inc    edx
  40e0e9:	cdq    
  40e0ea:	push   esp
  40e0eb:	inc    esp
  40e0ec:	aad    0x88
  40e0ee:	(bad)  
  40e0ef:	add    eax,0x415c3768
  40e0f4:	int    0xd9
  40e0f6:	jae    0x40e079
  40e0f8:	scas   al,BYTE PTR es:[edi]
  40e0f9:	jle    0x40e0b8
  40e0fb:	xchg   DWORD PTR [ebp-0x63],ebx
  40e0fe:	xchg   esp,eax
  40e0ff:	mov    bl,al
  40e101:	jnp    0x40e164
  40e103:	sub    DWORD PTR [ebp-0x45408e26],edi
  40e109:	mov    ds:0x8ed503cf,eax
  40e10e:	mov    al,0x81
  40e110:	jg     0x40e107
  40e112:	cmc    
  40e113:	js     0x40e166
  40e115:	add    WORD PTR [edi+0x6f90da93],0x34
  40e11d:	or     ch,cl
  40e11f:	pushf  
  40e120:	lds    edi,FWORD PTR [edx+0x6d]
  40e123:	xchg   DWORD PTR [edi-0x23],ecx
  40e126:	pusha  
  40e127:	jge    0x40e11a
  40e129:	adc    DWORD PTR [esi+0x11],ebx
  40e12c:	fisttp QWORD PTR [ebx+ebp*4-0x472bf8b9]
  40e133:	sbb    edx,ebp
  40e135:	mov    ebp,0x373d03a9
  40e13a:	in     eax,0x1
  40e13c:	aad    0x91
  40e13e:	stos   DWORD PTR es:[edi],eax
  40e13f:	cli    
  40e140:	add    BYTE PTR [eax],al
  40e142:	(bad)  
  40e143:	fdiv   QWORD PTR [eax]
  40e145:	adc    bl,dl
  40e147:	(bad)  
  40e148:	adc    BYTE PTR [edi],bl
  40e14a:	dec    BYTE PTR [ecx]
  40e14c:	jmp    0x13a732c9
  40e151:	xchg   DWORD PTR [ebx],esp
  40e153:	fiadd  DWORD PTR [eax]
  40e155:	daa    
  40e156:	ja     0x40e162
  40e158:	jmp    0xfe4f92d6
  40e15d:	adc    BYTE PTR ds:0x1f98ff72,cl
  40e163:	jnp    0x40e163
  40e165:	add    bh,BYTE PTR [ecx+ecx*4-0x37daa6c4]
  40e16c:	jmp    edi
  40e16e:	jecxz  0x40e0f4
  40e170:	rcl    edi,cl
  40e172:	pop    ebx
  40e173:	jl     0x40e101
  40e175:	xchg   esp,eax
  40e176:	cmp    bh,BYTE PTR [esi-0x2]
  40e179:	(bad)  
  40e17a:	outs   dx,BYTE PTR ds:[esi]
  40e17b:	inc    eax
  40e17c:	mov    al,ds:0x448cd6e9
  40e181:	jne    0x40e189
  40e183:	repnz cwde 
  40e185:	jmp    0xafcbeb60
  40e18a:	out    0x71,al
  40e18c:	sbb    dl,BYTE PTR [edx+0x2c8c7b53]
  40e192:	or     eax,0x12e967cb
  40e197:	enter  0x10ff,0xd8
  40e19b:	or     DWORD PTR [eax],eax
  40e19d:	imul   edx,DWORD PTR [ebx+0x15],0xa16da4c
  40e1a4:	mov    edx,DWORD PTR [ecx+0x5f4b0000]
  40e1aa:	mov    ch,BYTE PTR [edi]
  40e1ac:	jl     0x40e20d
  40e1ae:	dec    edi
  40e1af:	pop    edi
  40e1b0:	xchg   edi,eax
  40e1b1:	bound  eax,QWORD PTR [ebx+ecx*4]
  40e1b4:	(bad)  
  40e1b5:	or     DWORD PTR [edx+0x5adbb32a],ecx
  40e1bb:	xor    BYTE PTR [esi+eax*1],dl
  40e1be:	add    BYTE PTR [edi+ecx*8+0x1e45806e],dl
  40e1c5:	pop    es
  40e1c6:	add    cl,ch
  40e1c8:	push   edi
  40e1c9:	std    
  40e1ca:	pop    es
  40e1cb:	jmp    0x7297b5b7
  40e1d0:	pop    esi
  40e1d1:	or     eax,DWORD PTR [esp+edx*8+0x640009d9]
  40e1d8:	push   ebx
  40e1d9:	or     eax,DWORD PTR [eax+eax*1+0x551]
  40e1e0:	gs sbb ecx,0x1
  40e1e4:	in     al,dx
  40e1e5:	add    eax,0x7e81ff57
  40e1ea:	out    0x37,al
  40e1ec:	mov    DWORD PTR ds:0x8db18900,0x7c81c083
  40e1f6:	xor    al,al
  40e1f8:	adc    eax,0xbc00011c
  40e1fd:	lea    edi,[ebx]
  40e1ff:	jo     0x40e261
  40e201:	retf   
  40e202:	inc    DWORD PTR [eax]
  40e204:	add    esi,DWORD PTR [edi+0x30]
  40e207:	fist   DWORD PTR [ebp+0xfffe90]
  40e20d:	add    BYTE PTR [eax+eax*1-0x70b61b4c],bh
  40e214:	std    
  40e215:	call   0x3fd12a
  40e21a:	stc    
  40e21b:	cmp    BYTE PTR [eax+edx*2-0x11c1c],bh
  40e222:	jl     0x40e216
  40e224:	les    edx,FWORD PTR [eax+0x54]
  40e227:	stc    
  40e228:	call   0xfe39ce2c
  40e22d:	jne    0x40e1f4
  40e22f:	add    BYTE PTR [esp+edi*4+0x2c],al
  40e233:	adc    eax,0xd2fbc00
  40e238:	push   0x800d6c01
  40e23d:	push   DWORD PTR [ecx]
  40e23f:	inc    ecx
  40e240:	adc    eax,DWORD PTR [eax+0x3c]
  40e243:	repnz (bad) 
  40e245:	mul    edi
  40e247:	repnz les ebx,FWORD PTR [edx]
  40e24a:	out    0x3d,eax
  40e24c:	inc    bl
  40e24e:	les    edx,FWORD PTR [edx]
  40e250:	mov    eax,ds:0xb3943c00
  40e255:	add    ch,dl
  40e257:	bound  eax,QWORD PTR [edx]
  40e259:	lea    edx,[eax-0x61]
  40e25c:	test   dh,bh
  40e25e:	adc    dl,BYTE PTR [ebx+0x7729b475]
  40e264:	cmp    esi,0xffffffed
  40e267:	mov    esp,0xebfaffdb
  40e26c:	es clc 
  40e26e:	pop    esi
  40e26f:	mov    eax,0xf277
  40e274:	std    
  40e275:	mov    bl,bl
  40e277:	jmp    edx
  40e279:	loope  0x40e1fe
  40e27b:	call   DWORD PTR [edx]
  40e27d:	arpl   WORD PTR [edx],ax
  40e27f:	jbe    0x40e259
  40e281:	fadd   QWORD PTR [eax]
  40e283:	pop    esi
  40e284:	mov    esi,0x56c8d11f
  40e289:	mov    edi,0xa1600efe
  40e28e:	sbb    BYTE PTR [edx],al
  40e290:	push   cs
  40e291:	cld    
  40e292:	mov    edi,0xc15bd569
  40e297:	out    0x46,eax
  40e299:	jle    0x40e29d
  40e29b:	add    dl,cl
  40e29d:	loopne 0x40e2f1
  40e29f:	(bad)
  40e2a3:	or     DWORD PTR [ebx+0x50320d61],0x25
  40e2aa:	cld    
  40e2ab:	dec    edi
  40e2ac:	dec    eax
  40e2ad:	in     eax,dx
  40e2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2af:	sti    
  40e2b0:	jb     0x40e2a1
  40e2b2:	jns    0x40e250
  40e2b4:	mov    esi,edx
  40e2b6:	cmp    esi,0x4e
  40e2b9:	mov    ebp,0x2f4e4f8a
  40e2be:	fwait
  40e2bf:	sti    
  40e2c0:	cli    
  40e2c1:	bound  eax,QWORD PTR [edx]
  40e2c3:	mov    ebp,DWORD PTR ds:0xea74a7ed
  40e2c9:	in     eax,dx
  40e2ca:	jge    0x40e2af
  40e2cc:	cmp    BYTE PTR [edi],ah
  40e2ce:	test   BYTE PTR [edi+0x3d],cl
  40e2d1:	or     DWORD PTR ds:0xf782a63,edx
  40e2d7:	rol    BYTE PTR [eax],cl
  40e2d9:	add    BYTE PTR [ebx],ah
  40e2db:	js     0x40e2f2
  40e2dd:	js     0x40e358
  40e2df:	jno    0x40e340
  40e2e1:	push   es
  40e2e2:	fnstsw WORD PTR [eax+0x7b]
  40e2e5:	sti    
  40e2e6:	pop    ecx
  40e2e7:	into   
  40e2e8:	cmp    al,0x30
  40e2ea:	stos   DWORD PTR es:[edi],eax
  40e2eb:	fld    DWORD PTR [eax-0x1733c6fd]
  40e2f1:	fwait
  40e2f2:	pop    edx
  40e2f3:	or     ebp,ebx
  40e2f5:	add    ebx,DWORD PTR [ebp-0x32]
  40e2f8:	icebp  
  40e2f9:	xor    BYTE PTR ds:[ecx+0x5c],0xa
  40e2fe:	xchg   BYTE PTR [ecx-0x74],ah
  40e301:	sub    eax,0x897409d5
  40e306:	mov    dh,0x75
  40e308:	mov    ebp,0x7c621283
  40e30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30e:	mov    edx,0xdfe16277
  40e313:	jbe    0x40e330
  40e315:	jl     0x40e2c9
  40e317:	lods   eax,DWORD PTR ds:[esi]
  40e318:	iret   
  40e319:	add    edx,ebp
  40e31b:	bound  esp,QWORD PTR [ebx]
  40e31d:	test   cl,bl
  40e31f:	stc    
  40e320:	mov    ah,0xc7
  40e322:	xchg   edx,eax
  40e323:	or     dh,dh
  40e325:	mov    DWORD PTR [esi+0x51837d78],esp
  40e32b:	mov    ebp,0x777b818c
  40e330:	adc    BYTE PTR [ebx-0x6f16f5b0],0x11
  40e337:	mov    dh,0xb8
  40e339:	jmp    0x40e377
  40e33b:	or     ch,cl
  40e33d:	add    eax,DWORD PTR [eax]
  40e33f:	add    BYTE PTR [esi+0x50],cl
  40e342:	mov    eax,0x4560c26b
  40e347:	sbb    DWORD PTR [ecx-0x33],0x7c
  40e34b:	aam    0xba
  40e34d:	or     DWORD PTR [eax],eax
  40e34f:	jne    0x40e363
  40e351:	ja     0x40e3b9
  40e353:	call   0x26c0ed2e
  40e358:	int3   
  40e359:	lds    edx,FWORD PTR [edx]
  40e35b:	test   eax,0x1ed782d6
  40e360:	jp     0x40e2e5
  40e362:	(bad)
  40e365:	(bad)  
  40e366:	std    
  40e367:	sub    bh,BYTE PTR [ecx-0x30]
  40e36a:	lahf   
  40e36b:	jmp    0x97036746
  40e370:	hlt    
  40e371:	ror    eax,cl
  40e373:	sub    ebx,ebp
  40e375:	or     DWORD PTR [ebp+0x72],edx
  40e378:	jp     0x40e303
  40e37a:	jmp    0x40e38d
  40e37c:	fimul  DWORD PTR [ecx]
  40e37e:	add    BYTE PTR [edx-0x2b],ch
  40e381:	add    DWORD PTR [eax],eax
  40e383:	cmp    ch,BYTE PTR [edi-0x183e7521]
  40e389:	lea    edi,[ecx]
  40e38b:	call   0xb6c5ed66
  40e390:	out    0x8d,eax
  40e392:	xor    eax,ebp
  40e394:	(bad)  
  40e395:	or     DWORD PTR [ebx-0x5a],ebp
  40e398:	out    dx,al
  40e399:	fdivp  st(6),st
  40e39b:	adc    al,0xd1
  40e39d:	popa   
  40e39e:	mov    es,eax
  40e3a0:	(bad)  
  40e3a1:	or     DWORD PTR [ecx+0x11000024],ecx
  40e3a7:	mov    ?,WORD PTR [edi-0x3fc42004]
  40e3ad:	nop
  40e3ae:	outs   dx,DWORD PTR ds:[esi]
  40e3af:	or     DWORD PTR [eax],eax
  40e3b1:	jmp    0x95b1190c
  40e3b6:	fwait
  40e3b7:	jbe    0x40e3b8
  40e3b9:	fstp   st(7)
  40e3bb:	cmp    ebx,ebx
  40e3bd:	push   eax
  40e3be:	push   esp
  40e3bf:	jbe    0x40e3bf
  40e3c1:	jmp    0x4d24a10b
  40e3c6:	push   edi
  40e3c7:	ja     0x40e3b0
  40e3c9:	add    BYTE PTR [eax-0x4e000157],dl
  40e3cf:	inc    ecx
  40e3d0:	mov    edx,0xfe901450
  40e3d5:	(bad)  
  40e3d6:	cmp    al,0x87
  40e3d8:	les    edx,FWORD PTR [eax-0x3c]
  40e3db:	jmp    0x8204e3c6
  40e3e0:	std    
  40e3e1:	jne    0x40e3f8
  40e3e3:	cdq    
  40e3e4:	inc    ebx
  40e3e5:	mov    esp,0xbbfe624c
  40e3ea:	aas    
  40e3eb:	or     ch,BYTE PTR [eax+0x1]
  40e3ee:	in     al,dx
  40e3ef:	or     DWORD PTR [eax+0x114619ff],eax
  40e3f5:	inc    eax
  40e3f6:	cld    
  40e3f7:	xchg   dh,dl
  40e3f9:	not    DWORD PTR [edi]
  40e3fb:	test   ah,al
  40e3fd:	sbb    dl,BYTE PTR [edi]
  40e3ff:	pop    ebp
  40e400:	cld    
  40e401:	ret    
  40e402:	adc    al,0xcc
  40e404:	popf   
  40e405:	add    BYTE PTR [eax+eiz*8+0xb3],bh
  40e40c:	mov    esp,0x8858d09
  40e411:	mov    ch,bh
  40e413:	(bad)  
  40e414:	fadd   QWORD PTR [ebx+esi*4-0x2747f24]
  40e41b:	call   0x41114e
  40e420:	daa    
  40e421:	push   ebp
  40e422:	test   BYTE PTR [ebx-0x170e78a5],0x7a
  40e429:	and    eax,DWORD PTR [eax]
  40e42b:	add    ch,bh
  40e42d:	mov    bh,dh
  40e42f:	(bad)  
  40e430:	ins    BYTE PTR es:[edi],dx
  40e431:	or     DWORD PTR [esi+0x5],esi
  40e434:	(bad)  
  40e435:	push   cs
  40e436:	pop    esi
  40e437:	jmp    0x40e404
  40e439:	ds leave 
  40e43b:	xor    ebx,0x1
  40e43e:	setne  BYTE PTR [ebp-0x2aa4ff9d]
  40e445:	out    0x44,eax
  40e447:	imul   edx,ebp,0x3ee74307
  40e44d:	imul   eax,DWORD PTR [edx],0xb3fcd200
  40e453:	pop    ecx
  40e455:	mov    ds:0x62338302,al
  40e45a:	cmc    
  40e45b:	xor    DWORD PTR [eax-0x5a],ebx
  40e45e:	or     dl,BYTE PTR [eax+0x50]
  40e461:	out    dx,al
  40e462:	pop    edi
  40e463:	sti    
  40e464:	sbb    bl,BYTE PTR [ebx+ecx*4]
  40e467:	pushf  
  40e468:	xor    DWORD PTR [edi],eax
  40e46a:	cmp    esi,0x4f7aae5e
  40e470:	add    BYTE PTR [eax],al
  40e472:	dec    esi
  40e473:	sub    al,0x6c
  40e475:	push   ebx
  40e476:	mov    bl,0x62
  40e478:	add    cl,BYTE PTR [ebx+0x745cee0d]
  40e47e:	ret    0x85fd
  40e481:	jecxz  0x40e463
  40e483:	push   ebx
  40e484:	jg     0x40e4d5
  40e486:	in     eax,dx
  40e487:	mov    eax,es:0x3149d2ff
  40e48d:	dec    edx
  40e48f:	dec    ebx
  40e490:	mov    ebx,DWORD PTR [ebp+edi*4-0x7]
  40e494:	std    
  40e495:	pop    es
  40e496:	mov    edx,0x188d0c35
  40e49b:	out    0xd3,eax
  40e49d:	push   ebp
  40e49e:	add    eax,0x16bc041b
  40e4a3:	arpl   WORD PTR [edx-0x21],bp
  40e4a6:	aad    0x60
  40e4a8:	add    cl,BYTE PTR [eax+0x5d3b6818]
  40e4ae:	lea    esi,[esi+0x8]
  40e4b1:	push   ebx
  40e4b2:	ins    DWORD PTR es:[edi],dx
  40e4b3:	pop    esi
  40e4b4:	sub    al,BYTE PTR [eax]
  40e4b6:	aad    0xed
  40e4b8:	test   ebx,esp
  40e4ba:	jo     0x40e49f
  40e4bc:	jg     0x40e50d
  40e4be:	jge    0x40e4c9
  40e4c0:	cmc    
  40e4c1:	mov    al,ds:0xde727462
  40e4c6:	iret   
  40e4c7:	je     0x40e4a4
  40e4c9:	jnp    0x40e505
  40e4cb:	jbe    0x40e4d2
  40e4cd:	add    al,0xd5
  40e4cf:	pusha  
  40e4d0:	mov    bl,0x83
  40e4d2:	add    edx,edi
  40e4d4:	adc    al,0xc4
  40e4d6:	add    BYTE PTR [eax],al
  40e4d8:	cmp    cl,BYTE PTR [ecx]
  40e4da:	out    0x89,al
  40e4dc:	push   es
  40e4dd:	jae    0x40e50c
  40e4df:	sbb    BYTE PTR [ecx-0x42],0xc
  40e4e3:	jle    0x40e508
  40e4e5:	je     0x40e4f7
  40e4e7:	push   0x8ee9093e
  40e4ec:	cdq    
  40e4ed:	mov    ch,0xb8
  40e4ef:	jmp    0x40e551
  40e4f1:	or     ecx,ebp
  40e4f3:	add    ecx,DWORD PTR [esi+0x4b]
  40e4f6:	cwde   
  40e4f7:	imul   edx,DWORD PTR [edx],0x6c
  40e4fa:	cmc    
  40e4fb:	jg     0x40e55e
  40e4fd:	into   
  40e4fe:	sub    al,0xd3
  40e500:	jb     0x40e50b
  40e502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e503:	ret    
  40e504:	loop   0x40e4f1
  40e506:	out    0x3,eax
  40e508:	aad    0x89
  40e50a:	aad    0x19
  40e50c:	and    DWORD PTR [edi],edx
  40e50e:	sub    DWORD PTR [esi+ebx*2],eax
  40e511:	push   edx
  40e512:	mov    ebp,0xe24c4f5b
  40e517:	pop    edx
  40e518:	or     dh,BYTE PTR [ecx+ebp*4+0x6c]
  40e51c:	fs xchg esp,eax
  40e51e:	call   0x45884426
  40e523:	fdivp  st(7),st
  40e525:	inc    eax
  40e526:	stos   BYTE PTR es:[edi],al
  40e527:	or     ch,dl
  40e529:	fsub   QWORD PTR [ecx+0x70]
  40e52c:	push   edi
  40e52d:	outs   dx,BYTE PTR ds:[esi]
  40e52e:	nop
  40e52f:	test   DWORD PTR [esi+0x26],edi
  40e532:	jmp    0xd50b:0xfb86d503
  40e539:	(bad)  
  40e53a:	call   FWORD PTR [esi]
  40e53c:	add    BYTE PTR [eax],al
  40e53e:	mov    al,BYTE PTR [eax-0x37ad2109]
  40e544:	add    cl,ch
  40e546:	(bad)  
  40e547:	mov    esi,?
  40e549:	out    dx,al
  40e54a:	push   edx
  40e54b:	xor    BYTE PTR [ecx],al
  40e54d:	jmp    0x143fc428
  40e552:	and    dh,BYTE PTR [esp+esi*2-0xf]
  40e556:	scas   al,BYTE PTR es:[edi]
  40e557:	es jmpw 0x6632
  40e55c:	inc    ebx
  40e55d:	or     eax,0xb4bf8ccd
  40e562:	shl    DWORD PTR [edi],cl
  40e564:	rcl    BYTE PTR [eax],0x25
  40e567:	or     al,BYTE PTR [eax]
  40e569:	jmp    0x3db11bc4
  40e56e:	push   ss
  40e56f:	jae    0x40e570
  40e571:	xchg   ebp,eax
  40e572:	shl    DWORD PTR [edi],cl
  40e574:	fist   DWORD PTR [eax]
  40e576:	int3   
  40e577:	or     BYTE PTR [eax],al
  40e579:	jmp    0x9164dce3
  40e57e:	jle    0x40e558
  40e580:	fwait
  40e581:	jmp    0xd846a5c
  40e586:	mov    ch,0xd9
  40e588:	imul   eax,DWORD PTR [ebp+0x4e],0xdc14f4d
  40e58f:	imul   edi,esi,0xffffffce
  40e592:	pop    ebp
  40e593:	jae    0x40e609
  40e595:	adc    esp,DWORD PTR [esi+eax*8+0x23]
  40e599:	frstor [esi-0x688b0016]
  40e59f:	jb     0x40e607
  40e5a1:	call   0xa16e5a6
  40e5a6:	and    BYTE PTR [esi+0x2912c5bd],0xd1
  40e5ad:	jle    0x40e586
  40e5af:	sahf   
  40e5b0:	das    
  40e5b1:	add    ch,0xf3
  40e5b4:	das    
  40e5b5:	ret    
  40e5b6:	std    
  40e5b7:	add    BYTE PTR [edi],ch
  40e5b9:	ficomp WORD PTR [eax]
  40e5bb:	sahf   
  40e5bc:	ins    BYTE PTR es:[edi],dx
  40e5bd:	push   es
  40e5be:	jmp    0x476282
  40e5c3:	(bad)  
  40e5c4:	lock sub ch,al
  40e5c7:	add    BYTE PTR [esi+eax*1+0x50],ch
  40e5cb:	lea    eax,[eax+0x2a]
  40e5ce:	xor    al,0x2
  40e5d0:	cmp    al,0x6
  40e5d2:	call   0x4ec5be
  40e5d7:	mov    edi,DWORD PTR [eax+0x2a]
  40e5da:	adc    al,0x8b
  40e5dc:	jecxz  0x40e65d
  40e5de:	icebp  
  40e5df:	call   0x41102a
  40e5e4:	mov    ebp,0x2cc7fef3
  40e5e9:	push   es
  40e5ea:	jbe    0x40e5f1
  40e5ec:	inc    esi
  40e5ed:	pop    es
  40e5ee:	pop    esi
  40e5ef:	jmp    0x40e637
  40e5f1:	aaa    
  40e5f2:	leave  
  40e5f3:	sbb    ebx,0xa
  40e5f6:	setne  BYTE PTR [ebp-0x78a4ffa0]
  40e5fd:	(bad)  
  40e5fe:	push   0xe6cd1700
  40e603:	aas    
  40e604:	add    eax,0xf0006
  40e609:	add    BYTE PTR [edx-0x43],al
  40e60c:	mov    ?,WORD PTR [esp+ebp*4+0xd]
  40e610:	cmp    esi,0xffffffbd
  40e613:	js     0x40e647
  40e615:	(bad)  
  40e616:	lock and DWORD PTR [eax],ebx
  40e619:	push   eax
  40e61a:	dec    ecx
  40e61b:	and    BYTE PTR [edx],0x34
  40e61e:	scas   al,BYTE PTR es:[edi]
  40e61f:	or     eax,0x22088900
  40e624:	xor    al,0x2
  40e626:	mov    esp,0x905c8b0d
  40e62b:	adc    eax,0xde738b50
  40e630:	mov    ds:0x262d524,al
  40e635:	mov    ebp,DWORD PTR [ebp-0x158ba71a]
  40e63b:	cmc    
  40e63c:	(bad)  
  40e63d:	and    ebx,DWORD PTR ds:0x50956c13
  40e643:	arpl   WORD PTR [edx],ax
  40e645:	jmp    0xfebdc604
  40e64a:	dec    esi
  40e64b:	inc    edi
  40e64c:	es adc al,0x4c
  40e64f:	dec    edi
  40e650:	sbb    BYTE PTR es:[edx+0x4f],dl
  40e654:	sbb    BYTE PTR es:[eax-0x59],bl
  40e658:	and    BYTE PTR es:[esi-0x2a982d70],ah
  40e65f:	out    dx,al
  40e660:	sar    bh,0x3a
  40e663:	or     DWORD PTR [ebp+0x0],edi
  40e666:	aad    0xea
  40e668:	(bad)  
  40e669:	and    eax,esi
  40e66b:	imul   ebx,esi,0x23
  40e66e:	add    BYTE PTR [eax],al
  40e670:	rcl    DWORD PTR [esi-0x7d02acfc],0x24
  40e677:	add    ch,dl
  40e679:	int    0xc7
  40e67b:	and    ebx,DWORD PTR [ebp+0x58596a92]
  40e681:	arpl   WORD PTR [edx],ax
  40e683:	mov    dl,BYTE PTR [ecx+0x61ff0f3e]
  40e689:	inc    esi
  40e68a:	push   ss
  40e68b:	call   0x44e71c
  40e690:	out    dx,al
  40e691:	cmp    al,0x84
  40e693:	cmp    al,0x45
  40e695:	scas   eax,DWORD PTR es:[edi]
  40e696:	mov    edi,0x844fd5ff
  40e69b:	retf   
  40e69c:	ret    
  40e69d:	inc    edi
  40e69e:	jnp    0x40e62c
  40e6a0:	inc    ecx
  40e6a1:	pop    es
  40e6a2:	fsubr  st(7),st
  40e6a4:	call   0x5840e984
  40e6a9:	sub    BYTE PTR es:[eax*1+0x4fe8130a],bl
  40e6b1:	inc    edi
  40e6b2:	cmp    BYTE PTR [edx+ebp*8+0x67],ch
  40e6b6:	xchg   ebp,eax
  40e6b7:	jl     0x40e712
  40e6b9:	(bad)
  40e6bc:	and    eax,0x17bfe8e2
  40e6c1:	or     dl,BYTE PTR [ecx]
  40e6c3:	add    edx,ebp
  40e6c5:	or     DWORD PTR [ecx+0x7c],ebp
  40e6c8:	sar    DWORD PTR [ebp-0x7c9d3c27],0x40
  40e6cf:	je     0x40e750
  40e6d1:	test   BYTE PTR [esi],ah
  40e6d3:	sbb    DWORD PTR [eax],eax
  40e6d5:	add    BYTE PTR [esi],ch
  40e6d7:	fst    DWORD PTR [esi+0x40]
  40e6da:	xor    cl,BYTE PTR [edx]
  40e6dc:	ins    BYTE PTR es:[edi],dx
  40e6dd:	add    edx,ebp
  40e6df:	sub    DWORD PTR [ecx],0xffffffdc
  40e6e2:	cwde   
  40e6e3:	aam    0x71
  40e6e5:	xchg   cx,ax
  40e6e7:	dec    ebx
  40e6e8:	in     al,dx
  40e6e9:	add    eax,DWORD PTR [eax+0x2e823c84]
  40e6ef:	popa   
  40e6f0:	jmp    0x40e6f5
  40e6f2:	aad    0xd7
  40e6f4:	mov    ch,0xe9
  40e6f6:	loop   0x40e6db
  40e6f8:	call   0xdb246cd
  40e6fd:	push   ss
  40e6fe:	fst    QWORD PTR [edi]
  40e700:	test   eax,0xec455603
  40e705:	xor    DWORD PTR [ecx+0x1],0xffffffe9
  40e709:	mul    BYTE PTR [esi-0x2af09474]
  40e70f:	cmc    
  40e710:	or     eax,0x9f4db81
  40e715:	jnp    0x40e760
  40e717:	(bad)  
  40e718:	popa   
  40e719:	inc    ebx
  40e71a:	mov    dl,0xba
  40e71c:	aaa    
  40e71d:	add    eax,0x782b80d5
  40e722:	push   ecx
  40e723:	dec    edx
  40e724:	ds push ss
  40e726:	or     ch,BYTE PTR [edi-0x1]
  40e729:	cmp    ebx,ebp
  40e72b:	popa   
  40e72c:	sbb    al,BYTE PTR [edi]
  40e72e:	(bad)  [ecx]
  40e730:	mov    ebx,DWORD PTR [ecx+0x640bee48]
  40e736:	pop    es
  40e737:	test   BYTE PTR [edi-0x26],0x0
  40e73b:	add    BYTE PTR [esi],dl
  40e73d:	bound  edi,QWORD PTR [eax+0xf09d6e9]
  40e743:	aas    
  40e744:	xchg   esp,eax
  40e745:	pop    es
  40e746:	dec    eax
  40e747:	cmc    
  40e748:	fadd   st(1),st
  40e74a:	je     0x40e6d2
  40e74c:	pop    esp
  40e74d:	(bad)  
  40e74e:	or     ebx,DWORD PTR [ecx]
  40e750:	jno    0x40e794
  40e752:	(bad)  
  40e753:	call   0x6c494a2e
  40e758:	adc    al,0x3
  40e75a:	push   eax
  40e75b:	rcr    DWORD PTR [eax-0x51160192],0x1
  40e762:	out    0x46,al
  40e764:	mov    esi,0xa764ef83
  40e769:	cli    
  40e76a:	iret   
  40e76b:	bound  edx,QWORD PTR [ebx+eax*1]
  40e76e:	push   esi
  40e76f:	inc    ecx
  40e770:	(bad)  
  40e771:	fld    DWORD PTR [eax]
  40e773:	jmp    0x653cadc1
  40e778:	cdq    
  40e779:	out    dx,eax
  40e77a:	pop    es
  40e77b:	mov    edi,0xe924cc7e
  40e780:	(bad)  
  40e781:	bound  esi,QWORD PTR [edi-0x5e8c38c]
  40e787:	(bad)  
  40e788:	outs   dx,DWORD PTR ds:[esi]
  40e789:	popw   ds
  40e78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e78c:	ror    DWORD PTR [ecx],1
  40e78e:	push   0xffffffe9
  40e790:	dec    ebp
  40e791:	xchg   BYTE PTR [edi-0x1d],dl
  40e794:	pop    edi
  40e795:	outs   dx,DWORD PTR ds:[esi]
  40e796:	dec    edi
  40e797:	jb     0x40e72e
  40e799:	add    ch,BYTE PTR [ebx]
  40e79b:	sub    al,0x4d
  40e79d:	test   ch,cl
  40e79f:	rol    DWORD PTR [eax],0x0
  40e7a2:	aas    
  40e7a3:	and    eax,DWORD PTR [eax]
  40e7a5:	add    BYTE PTR [edi+edi*2-0xe0e760a],ch
  40e7ac:	cmp    edi,0xffffffe8
  40e7af:	ret    
  40e7b0:	jle    0x40e82f
  40e7b2:	mov    ah,0xa
  40e7b4:	mov    eax,DWORD PTR [edi]
  40e7b6:	daa    
  40e7b7:	dec    ebx
  40e7b8:	sbb    cl,BYTE PTR [ecx-0xf0a181]
  40e7be:	stos   DWORD PTR es:[edi],eax
  40e7bf:	loop   0x40e7dd
  40e7c1:	and    eax,0xe8570a6c
  40e7c6:	je     0x40e7f1
  40e7c8:	add    BYTE PTR [eax],al
  40e7ca:	jmp    FWORD PTR [ecx-0x6]
  40e7cd:	add    ah,dl
  40e7cf:	in     eax,0x3
  40e7d1:	add    BYTE PTR [ecx+eax*4-0x7d],ch
  40e7d5:	sbb    dh,dh
  40e7d7:	repz std 
  40e7d9:	push   0x3c
  40e7db:	pop    edx
  40e7dc:	std    
  40e7dd:	adc    eax,0x401844
  40e7e2:	mov    bh,0x49
  40e7e4:	or     al,BYTE PTR [ebx+0x565006e8]
  40e7ea:	push   es
  40e7eb:	add    al,0x89
  40e7ed:	inc    ebx
  40e7ee:	xor    al,0x81
  40e7f0:	jns    0x40e7f6
  40e7f2:	inc    esp
  40e7f3:	jge    0x40e866
  40e7f5:	or     al,0xc4
  40e7f7:	jo     0x40e849
  40e7f9:	add    ah,bh
  40e7fb:	jle    0x40e840
  40e7fd:	cld    
  40e7fe:	inc    ebx
  40e7ff:	push   eax
  40e800:	mov    edx,0x76ff09f4
  40e806:	add    BYTE PTR [eax],al
  40e808:	add    dl,ah
  40e80a:	aam    0x24
  40e80c:	cld    
  40e80d:	or     DWORD PTR [edx+0x10],ebp
  40e810:	push   esi
  40e811:	or     dl,BYTE PTR [esi-0x1]
  40e814:	or     DWORD PTR [edx],edx
  40e816:	push   ss
  40e817:	inc    eax
  40e818:	in     al,dx
  40e819:	test   dl,al
  40e81b:	or     al,0x7f
  40e81d:	cmp    eax,0xdfd5ec89
  40e822:	pop    edi
  40e823:	not    DWORD PTR [edi+ebp*4-0x31]
  40e827:	add    ch,dl
  40e829:	(bad)  
  40e82b:	mov    dl,BYTE PTR [eax]
  40e82d:	jnp    0x40e7bb
  40e82f:	inc    edx
  40e830:	in     eax,dx
  40e831:	or     al,0xd1
  40e833:	mov    bl,BYTE PTR [esi]
  40e835:	pop    edi
  40e836:	mov    ecx,DWORD PTR [esi]
  40e838:	dec    esi
  40e839:	cmp    bh,al
  40e83b:	mov    WORD PTR [ecx],gs
  40e83d:	inc    edi
  40e83e:	push   cs
  40e83f:	push   edx
  40e840:	pop    eax
  40e841:	das    
  40e842:	and    BYTE PTR [edi+eiz*1],dl
  40e845:	xor    bl,dl
  40e847:	xchg   DWORD PTR [ecx],edx
  40e849:	aas    
  40e84a:	sub    ch,al
  40e84c:	push   ds
  40e84d:	bound  eax,QWORD PTR [ecx]
  40e84f:	add    BYTE PTR [ecx-0x5d],dl
  40e852:	out    dx,eax
  40e853:	and    BYTE PTR [edx+0x77],ah
  40e856:	push   ds
  40e857:	adc    al,0x4e
  40e859:	sbb    al,0x79
  40e85b:	jae    0x40e856
  40e85d:	jbe    0x40e8d6
  40e85f:	jae    0x40e852
  40e861:	add    ch,BYTE PTR [ebp+eiz*1-0x2c]
  40e865:	bound  eax,QWORD PTR [edx]
  40e867:	inc    ecx
  40e869:	(bad)  
  40e86a:	adc    ebp,eax
  40e86c:	add    BYTE PTR [eax],al
  40e86e:	test   al,0x6
  40e870:	add    al,0x0
  40e872:	cmp    al,0xec
  40e874:	add    eax,DWORD PTR [eax]
  40e876:	aad    0x4b
  40e878:	scas   eax,DWORD PTR es:[edi]
  40e879:	inc    edx
  40e87a:	xchg   ebp,eax
  40e87b:	sbb    dl,BYTE PTR [ebp-0x7c]
  40e87e:	aad    0x62
  40e880:	mov    al,BYTE PTR [ebx-0x4f]
  40e883:	outs   dx,BYTE PTR ds:[esi]
  40e884:	jle    0x40e845
  40e886:	shl    dh,cl
  40e888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e889:	(bad)  
  40e88a:	cli    
  40e88b:	(bad)  
  40e88c:	in     al,dx
  40e88d:	add    dl,dh
  40e88f:	neg    BYTE PTR [esi]
  40e891:	sbb    BYTE PTR [eax-0x11],bl
  40e894:	push   ds
  40e895:	and    al,0xed
  40e897:	aam    0x84
  40e899:	(bad)  
  40e89a:	fimul  DWORD PTR [ecx]
  40e89c:	jb     0x40e89e
  40e89e:	sar    BYTE PTR [ecx+0x9d50370],cl
  40e8a4:	les    eax,FWORD PTR fs:[edx]
  40e8a7:	loop   0x40e8c1
  40e8a9:	out    dx,eax
  40e8aa:	mov    edx,0xba49716c
  40e8af:	and    BYTE PTR [edi+0x3],ah
  40e8b2:	aad    0x85
  40e8b4:	test   al,0xef
  40e8b6:	xor    edi,ebp
  40e8b8:	jbe    0x40e879
  40e8ba:	not    BYTE PTR [ecx]
  40e8bc:	xor    eax,esi
  40e8be:	fadd   st(1),st
  40e8c0:	adc    ecx,DWORD PTR [eax]
  40e8c2:	xchg   ebx,eax
  40e8c3:	(bad)
  40e8c6:	out    dx,eax
  40e8c7:	pusha  
  40e8c8:	jecxz  0x40e90b
  40e8ca:	push   ss
  40e8cb:	es fldpi 
  40e8ce:	cld    
  40e8cf:	or     DWORD PTR [esi-0x11],edi
  40e8d2:	add    BYTE PTR [eax],al
  40e8d4:	mov    dh,0x15
  40e8d6:	fs mov edi,0x40335b6
  40e8dc:	ins    DWORD PTR es:[edi],dx
  40e8dd:	imul   ebp,DWORD PTR [edx+0xcdfd502],0xcf559de
  40e8e7:	sub    BYTE PTR [eax-0x3b],dl
  40e8ea:	add    al,0xdc
  40e8ec:	adc    eax,ebp
  40e8ee:	or     al,0xdc
  40e8f0:	(bad)  
  40e8f1:	or     ecx,ebp
  40e8f3:	add    edi,DWORD PTR ds:0xd50407d0
  40e8f9:	and    ch,0x78
  40e8fc:	push   0xffffff81
  40e8fe:	call   0x36c1be06
  40e903:	jmp    0x40e8bf
  40e905:	imul   al
  40e907:	add    ebp,DWORD PTR [edi+0x1d]
  40e90a:	mov    cl,0x86
  40e90c:	mov    fs,WORD PTR ds:0x810c6bcd
  40e912:	call   0xff8a3a1a
  40e917:	jl     0x40e8df
  40e919:	ins    BYTE PTR es:[edi],dx
  40e91a:	jae    0x40e8e1
  40e91c:	mov    esi,0xf90d437e
  40e921:	(bad)  [edx+0x1139d6]
  40e927:	jmp    0x5b46602
  40e92c:	frstor [ecx-0x63]
  40e92f:	ins    DWORD PTR es:[edi],dx
  40e930:	(bad)  [ecx]
  40e932:	push   ebx
  40e933:	shl    DWORD PTR [esi+0x28],1
  40e936:	add    cl,ch
  40e938:	add    BYTE PTR [eax],al
  40e93a:	mov    ecx,ebp
  40e93c:	xor    ch,BYTE PTR [ecx+0x44e4807e]
  40e942:	pop    ss
  40e943:	pop    es
  40e944:	add    BYTE PTR [esi+ebx*2],dh
  40e947:	pop    edi
  40e948:	push   eax
  40e949:	cmp    BYTE PTR [esi+0x5],cl
  40e94c:	mov    ebp,DWORD PTR [ecx]
  40e94e:	jge    0x40e928
  40e950:	push   esi
  40e951:	xchg   BYTE PTR [ebx+eax*1-0x73],ah
  40e955:	sbb    al,0xe9
  40e957:	bound  ebp,QWORD PTR [ebx-0x7bf62618]
  40e95d:	test   eax,0xdcff1c65
  40e962:	retf   0xc57f
  40e965:	pop    esi
  40e966:	inc    esp
  40e967:	jae    0x40e967
  40e969:	(bad)  
  40e96b:	popa   
  40e96c:	and    al,0xe9
  40e96e:	(bad)  
  40e96f:	or     edi,edi
  40e971:	mov    esp,0x51f77fae
  40e976:	sub    BYTE PTR es:[eax],al
  40e979:	jmp    0x9ccbeecd
  40e97e:	into   
  40e97f:	jle    0x40e9c0
  40e981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e982:	and    esp,DWORD PTR [ebx-0x17]
  40e985:	call   0x2973f35b
  40e98a:	push   esp
  40e98b:	ins    BYTE PTR es:[edi],dx
  40e98c:	push   cs
  40e98d:	outs   dx,BYTE PTR ds:[esi]
  40e98e:	xchg   ecx,eax
  40e98f:	retf   
  40e990:	pop    edx
  40e991:	add    BYTE PTR [ebp+0x410006c7],ah
  40e997:	sub    dl,0x83
  40e99a:	fsub   DWORD PTR ds:0x5653
  40e9a0:	inc    ebx
  40e9a1:	hlt    
  40e9a2:	jae    0x40e9b0
  40e9a4:	inc    edi
  40e9a5:	test   DWORD PTR [ecx-0x19f33bb],0xe6ea098c
  40e9af:	dec    ebx
  40e9b0:	mov    ebx,esi
  40e9b2:	std    
  40e9b3:	mov    DWORD PTR [ecx],eax
  40e9b5:	out    dx,al
  40e9b6:	add    eax,0xffffffe1
  40e9b9:	std    
  40e9ba:	or     al,0x6b
  40e9bd:	ffree  st(3)
  40e9bf:	add    BYTE PTR [esi+eax*1+0x37a47e8d],ch
  40e9c6:	fist   DWORD PTR [edi+0x4]
  40e9c9:	push   edx
  40e9ca:	repnz inc DWORD PTR [ecx+0x6c4010ce]
  40e9d1:	add    esi,DWORD PTR [esi+0x723e6445]
  40e9d7:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40e9d9:	js     0x40ea39
  40e9db:	xor    DWORD PTR [edx],0xe
  40e9de:	mov    eax,DWORD PTR [esi]
  40e9e0:	daa    
  40e9e1:	dec    ecx
  40e9e2:	loop   0x40ea57
  40e9e4:	xchg   edx,eax
  40e9e5:	repz jae 0x40e9f4
  40e9e8:	(bad)  
  40e9e9:	dec    ecx
  40e9ea:	push   cs
  40e9eb:	call   0x3ec753
  40e9f0:	mov    al,0xc6
  40e9f2:	jb     0x40ea3b
  40e9f4:	aad    0x13
  40e9f6:	setne  ah
  40e9f9:	jle    0x40ea3e
  40e9fb:	hlt    
  40e9fc:	xchg   edi,eax
  40e9fd:	sub    DWORD PTR [ebx+0x47f34c6],eax
  40ea03:	cmp    eax,DWORD PTR [eax]
  40ea05:	add    BYTE PTR [ecx-0x36],al
  40ea08:	jno    0x40ea3d
  40ea0a:	jmp    0x40ea85
  40ea0c:	imul   al
  40ea0e:	aad    0x48
  40ea10:	push   0xfffffffe
  40ea12:	cli    
  40ea13:	jecxz  0x40ea57
  40ea15:	jae    0x40e9d1
  40ea17:	add    esi,eax
  40ea19:	or     ebx,DWORD PTR [esi-0x5b]
  40ea1c:	adc    ch,al
  40ea1e:	inc    edx
  40ea1f:	push   es
  40ea20:	jbe    0x40ea20
  40ea22:	push   ecx
  40ea23:	and    bh,ch
  40ea25:	pop    ss
  40ea26:	mov    ebp,0xcafe763d
  40ea2b:	mov    ebp,0x57188d13
  40ea30:	rcl    DWORD PTR [ebp-0x46],cl
  40ea33:	pop    esi
  40ea34:	adc    dl,BYTE PTR [esi]
  40ea36:	adc    eax,0x56db2f73
  40ea3b:	scas   eax,DWORD PTR es:[edi]
  40ea3c:	pop    es
  40ea3d:	inc    ebx
  40ea3e:	or     ah,BYTE PTR [eax+0x32c7dc0e]
  40ea44:	add    al,0x6a
  40ea46:	aad    0x7a
  40ea48:	outs   dx,DWORD PTR ds:[esi]
  40ea49:	clc    
  40ea4a:	aam    0x72
  40ea4c:	jg     0x40eab2
  40ea4e:	shl    DWORD PTR [edx+0x7f],1
  40ea51:	cli    
  40ea52:	aam    0xfd
  40ea54:	adc    BYTE PTR [eax+0x75005af0],al
  40ea5a:	shl    bh,0xee
  40ea5d:	repz bound esp,QWORD PTR [esi+0x7a]
  40ea61:	out    0xf,eax
  40ea63:	pop    DWORD PTR [ebx]
  40ea65:	add    BYTE PTR [esi],bh
  40ea67:	pop    ebx
  40ea68:	test   DWORD PTR [eax+eax*1+0x0],esi
  40ea6c:	xor    DWORD PTR [ebx-0x3fbd0362],edi
  40ea72:	mov    BYTE PTR [ebp+edi*1-0x28],dh
  40ea76:	sub    eax,0x414ace8
  40ea7b:	add    BYTE PTR [ebx-0x2ade0f46],al
  40ea81:	jb     0x40ea08
  40ea83:	je     0x40ea4e
  40ea85:	retf   0xe03c
  40ea88:	adc    cl,BYTE PTR [edx]
  40ea8a:	mov    DWORD PTR es:[edi],edx
  40ea8d:	leave  
  40ea8e:	mov    esi,0xe44c0dd8
  40ea93:	add    esp,DWORD PTR [ebx+0x617c61c0]
  40ea99:	loope  0x40ea8b
  40ea9b:	imul   esp,DWORD PTR [edx+0x66],0xfffffffd
  40ea9f:	je     0x40eaf2
  40eaa1:	loope  0x40ea73
  40eaa3:	imul   ebp,DWORD PTR [edx+0x66],0xffffffed
  40eaa7:	je     0x40eb0a
  40eaa9:	rcl    BYTE PTR [eax],1
  40eaab:	aam    0xcb
  40eaad:	(bad)  
  40eaae:	lods   al,BYTE PTR ds:[esi]
  40eaaf:	adc    DWORD PTR ds:0xd6f4620a,edx
  40eab5:	mov    cs,ebp
  40eab7:	out    dx,eax
  40eab8:	fcmovnb st,st(0)
  40eaba:	lds    ecx,FWORD PTR [esi]
  40eabc:	popf   
  40eabd:	sti    
  40eabe:	sub    BYTE PTR [edx+eax*1],al
  40eac1:	enter  0x4a9,0x63
  40eac5:	adc    DWORD PTR [eax],esp
  40eac7:	lock fcmovbe st,st(2)
  40eaca:	sbb    ecx,DWORD PTR [eax]
  40eacc:	pop    eax
  40eacd:	rol    DWORD PTR [eax],cl
  40eacf:	imul   eax,DWORD PTR [eax],0x2296d700
  40ead5:	or     al,0x50
  40ead7:	push   edx
  40ead8:	adc    eax,DWORD PTR [eax]
  40eada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eadb:	dec    ecx
  40eadc:	xchg   ecx,eax
  40eadd:	mov    esi,0xcde4ba5f
  40eae2:	dec    edi
  40eae3:	(bad)  
  40eae5:	or     ecx,DWORD PTR [edi+edi*8-0x23]
  40eae9:	lods   al,BYTE PTR ds:[esi]
  40eaea:	ret    0xf60c
  40eaed:	lods   al,BYTE PTR ds:[esi]
  40eaee:	or     cl,BYTE PTR [ebx]
  40eaf0:	jb     0x40eac4
  40eaf2:	into   
  40eaf3:	sbb    BYTE PTR [esi-0x2bc4aec3],al
  40eaf9:	and    BYTE PTR [esi-0x2e],bl
  40eafc:	lock cmp BYTE PTR [eax+eiz*8],dl
  40eb00:	fsubr  QWORD PTR [eax]
  40eb02:	or     eax,0xd1270024
  40eb07:	retf   
  40eb08:	lock xchg edi,eax
  40eb0a:	aad    0x39
  40eb0c:	push   ecx
  40eb0d:	es cli 
  40eb0f:	sub    edx,DWORD PTR [eax+esi*2]
  40eb12:	mov    cl,0x68
  40eb14:	adc    al,0xf9
  40eb16:	enter  0xffc9,0x69
  40eb1a:	mov    dl,0x14
  40eb1c:	jmp    0x40eb08
  40eb1e:	push   ebp
  40eb1f:	das    
  40eb20:	add    BYTE PTR [ecx],bh
  40eb22:	xlat   BYTE PTR ds:[ebx]
  40eb23:	mov    ecx,0x8abed6e1
  40eb29:	std    
  40eb2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb2b:	mov    edx,0xc889f0e
  40eb30:	adc    eax,0xffffffa1
  40eb33:	mov    ebp,0xf973
  40eb38:	jns    0x40eb0c
  40eb3a:	jae    0x40eb22
  40eb3c:	call   0xd1cfd38a
  40eb41:	or     DWORD PTR [eax],eax
  40eb43:	ins    BYTE PTR es:[edi],dx
  40eb44:	test   eax,0x55eaeaff
  40eb49:	test   DWORD PTR [edi],0x648c9162
  40eb4f:	mov    eax,ds:0x7256bad1
  40eb54:	xor    BYTE PTR [edi-0x6b291701],cl
  40eb5a:	push   edi
  40eb5b:	ror    DWORD PTR [ebx-0x3c5eeb98],0xc9
  40eb62:	push   DWORD PTR [ecx-0x71]
  40eb65:	adc    eax,DWORD PTR [ebp-0x106a257]
  40eb6b:	test   DWORD PTR [esi-0x29],0x9f05fe7
  40eb72:	add    BYTE PTR [eax+0xc],dh
  40eb75:	pop    edi
  40eb76:	mov    ch,BYTE PTR [edi+0x4d44923e]
  40eb7c:	or     ch,BYTE PTR [eax+0x14]
  40eb7f:	add    al,dh
  40eb81:	(bad)  
  40eb82:	aas    
  40eb83:	add    BYTE PTR [edi-0x48ff09a8],ch
  40eb89:	dec    eax
  40eb8a:	push   es
  40eb8b:	push   edi
  40eb8c:	mov    cl,0x40
  40eb8e:	cli    
  40eb8f:	jne    0x40eb9a
  40eb91:	nop
  40eb92:	arpl   sp,di
  40eb94:	in     al,dx
  40eb95:	inc    edx
  40eb96:	cs jne 0x40eb85
  40eb99:	or     ch,BYTE PTR [edx+0x4]
  40eb9c:	add    BYTE PTR [eax],al
  40eb9e:	and    al,0xc3
  40eba0:	pop    esp
  40eba1:	xchg   ah,bh
  40eba3:	or     dh,BYTE PTR [edx]
  40eba5:	rol    bh,0x4e
  40eba8:	mov    esp,0xa5930
  40ebad:	push   esi
  40ebae:	push   esi
  40ebaf:	push   cs
  40ebb0:	pop    eax
  40ebb1:	xor    dl,BYTE PTR [edi-0x5379b73e]
  40ebb7:	or     al,BYTE PTR [eax+eax*8+0x458b3118]
  40ebbe:	mov    al,ds:0x27f853e7
  40ebc3:	dec    edx
  40ebc4:	push   es
  40ebc5:	push   edi
  40ebc6:	retf   0x34c5
  40ebc9:	xchg   BYTE PTR [edx+ecx*1-0x3373f7c],ch
  40ebd0:	mov    cl,BYTE PTR [ebp-0x7c]
  40ebd3:	inc    ebx
  40ebd4:	push   0x53891404
  40ebd9:	or     BYTE PTR [eax+eiz*2-0x7d],dl
  40ebdd:	add    BYTE PTR [esp+eiz*8-0x2a],bh
  40ebe1:	jmp    FWORD PTR [ecx-0xe]
  40ebe4:	out    0x15,al
  40ebe6:	lea    ecx,[edx]
  40ebe8:	add    BYTE PTR [edx+0x5e593b2f],cl
  40ebee:	jne    0x40ebbc
  40ebf0:	add    al,BYTE PTR [eax]
  40ebf2:	lea    edi,ds:0x2e108b53
  40ebf8:	sbb    BYTE PTR [esi-0x2b],dl
  40ebfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebfc:	jge    0x40ebf5
  40ebfe:	pusha  
  40ebff:	aas    
  40ec00:	sbb    dl,BYTE PTR [esi+0x0]
  40ec03:	add    BYTE PTR [esp+eiz*4+0x26],bl
  40ec07:	adc    BYTE PTR [edx],ah
  40ec09:	cmp    eax,0x7095114a
  40ec0e:	jge    0x40ec54
  40ec10:	fstp   DWORD PTR [ebx-0x37]
  40ec13:	pop    es
  40ec14:	sub    DWORD PTR [edx+0x48],0x43
  40ec18:	mov    ecx,0x828d0350
  40ec1d:	je     0x40ec9c
  40ec1f:	add    eax,0x23f6e986
  40ec24:	shl    ebp,0x42
  40ec27:	jae    0x40ebba
  40ec29:	jp     0x40ec2d
  40ec2b:	push   eax
  40ec2c:	fiadd  DWORD PTR [esi+ebx*2+0x11]
  40ec30:	adc    eax,0xd4022f73
  40ec35:	jb     0x40ec39
  40ec37:	jne    0x40ec3d
  40ec39:	add    DWORD PTR [ebp-0x2],ecx
  40ec3c:	inc    ecx
  40ec3d:	pop    ss
  40ec3e:	adc    al,0xff
  40ec40:	enter  0x15b6,0x40
  40ec44:	aad    0xd8
  40ec46:	inc    esp
  40ec47:	pop    edx
  40ec48:	add    al,BYTE PTR ds:0xb0fc58cf
  40ec4e:	adc    eax,DWORD PTR [eax]
  40ec50:	pop    esi
  40ec51:	cs add al,0x3b
  40ec54:	adc    cl,BYTE PTR [ebx]
  40ec56:	cli    
  40ec57:	push   es
  40ec58:	fwait
  40ec59:	das    
  40ec5a:	sub    BYTE PTR [eax],ah
  40ec5c:	xlat   BYTE PTR ds:[ebx]
  40ec5d:	xchg   DWORD PTR [edi+0x4e5e7255],ebp
  40ec63:	adc    DWORD PTR ds:0xc03473,edx
  40ec69:	add    BYTE PTR [esi-0x7b],ch
  40ec6c:	jo     0x40eca3
  40ec6e:	pop    edx
  40ec6f:	inc    esi
  40ec70:	cmp    dl,BYTE PTR [ecx]
  40ec72:	xchg   ebp,eax
  40ec73:	jb     0x40ebf8
  40ec75:	and    eax,0x43d109d5
  40ec7a:	inc    edx
  40ec7b:	gs call 0xe96aa0dc
  40ec81:	add    ebx,DWORD PTR [esi+0x5a]
  40ec84:	arpl   WORD PTR [edx-0x5a],di
  40ec87:	popf   
  40ec88:	jno    0x40ec99
  40ec8a:	(bad)  
  40ec8d:	add    ebp,DWORD PTR [edi-0x4907c9df]
  40ec93:	sub    DWORD PTR [edi-0x536fd890],edx
  40ec99:	daa    
  40ec9a:	vpunpckhbw xmm0,xmm1,XMMWORD PTR [edx*8-0x510d9ff7]
  40eca3:	xchg   esi,eax
  40eca4:	mov    es,ebx
  40eca6:	jl     0x40ecb1
  40eca8:	sahf   
  40eca9:	jnp    0x40ec43
  40ecab:	and    esi,edi
  40ecad:	push   ss
  40ecae:	mov    ebp,0x5e03a8fb
  40ecb3:	aad    0xc4
  40ecb5:	sub    edx,DWORD PTR [esi+0x4d]
  40ecb8:	add    BYTE PTR [edi-0x15c92273],al
  40ecbe:	push   edi
  40ecbf:	out    0xe0,al
  40ecc1:	add    ebp,DWORD PTR [ebx]
  40ecc3:	aad    0xdd
  40ecc5:	mov    ecx,0x7d4f1311
  40ecca:	or     DWORD PTR [edx],edx
  40eccc:	inc    edi
  40eccd:	inc    ebx
  40ecce:	add    BYTE PTR [eax],al
  40ecd0:	mov    ah,0x11
  40ecd2:	dec    edi
  40ecd3:	std    
  40ecd4:	xchg   esp,eax
  40ecd5:	adc    al,0x76
  40ecd7:	pop    ebx
  40ecd8:	fistp  DWORD PTR [edi+eiz*8-0x17759ba5]
  40ecdf:	add    ecx,DWORD PTR [ebp-0x33]
  40ece2:	int3   
  40ece3:	daa    
  40ece4:	pop    esi
  40ece5:	dec    edx
  40ece6:	and    BYTE PTR [ecx-0x2c16f6ab],0x5
  40eced:	mov    ebp,0x9bcb547d
  40ecf2:	jmp    FWORD PTR [edi*8+0x4aa58319]
  40ecf9:	int3   
  40ecfa:	jae    0x40ecfb
  40ecfc:	jle    0x40ecd6
  40ecfe:	adc    dl,cl
  40ed00:	push   esi
  40ed01:	fs (bad) 
  40ed03:	jmp    0x4e965118
  40ed08:	ret    
  40ed09:	add    DWORD PTR [esi],edx
  40ed0b:	test   eax,0xedc388d6
  40ed10:	jns    0x40ed1a
  40ed12:	pushaw 
  40ed14:	hlt    
  40ed15:	leave  
  40ed16:	mov    ch,BYTE PTR [ebp+0x2e8b31b2]
  40ed1c:	sahf   
  40ed1d:	xor    esi,ebp
  40ed1f:	call   0xcd9c7dfa
  40ed24:	retf   0x55b8
  40ed27:	sbb    ebx,0xfee93f56
  40ed2d:	arpl   si,di
  40ed2f:	icebp  
  40ed30:	(bad)  
  40ed31:	jno    0x40ecc8
  40ed33:	cld    
  40ed34:	add    BYTE PTR [eax],al
  40ed36:	aam    0x9
  40ed38:	test   BYTE PTR [ecx],ch
  40ed3a:	ret    0xb30c
  40ed3d:	call   0xdf3e5063
  40ed42:	sub    bh,BYTE PTR [ebp+0x9e2a9e7]
  40ed48:	add    BYTE PTR [edx-0xa],ch
  40ed4b:	or     ecx,ebp
  40ed4d:	mov    ecx,0x14fe6433
  40ed52:	push   ds
  40ed53:	outs   dx,DWORD PTR ds:[esi]
  40ed54:	xor    BYTE PTR [ecx-0x51f721fe],0x8c
  40ed5b:	ud0    edi,esp
  40ed5e:	dec    esi
  40ed5f:	stc    
  40ed60:	aas    
  40ed61:	jmp    0x3b1c060d
  40ed66:	xchg   BYTE PTR [esp+esi*2-0x7],ah
  40ed6a:	adc    bl,0xfe
  40ed6d:	add    BYTE PTR [ecx+0x63],ah
  40ed70:	push   ecx
  40ed71:	jmp    DWORD PTR [ecx+0x5f]
  40ed74:	std    
  40ed75:	adc    eax,0x3ff7b0
  40ed7a:	test   DWORD PTR [edx],edi
  40ed7c:	push   cs
  40ed7d:	jle    0x40edc4
  40ed7f:	xor    BYTE PTR [ebp+0x10],al
  40ed82:	sub    ecx,DWORD PTR [edx-0x3f]
  40ed85:	mov    BYTE PTR [eax],ch
  40ed87:	pop    ss
  40ed88:	pop    ebx
  40ed89:	pop    ebp
  40ed8a:	dec    BYTE PTR [ecx]
  40ed8c:	add    BYTE PTR [ebp-0x59],dl
  40ed8f:	jmp    0x3c3578e5
  40ed94:	push   ebp
  40ed95:	add    edi,0xfffffff2
  40ed98:	jae    0x40eda5
  40ed9a:	add    BYTE PTR [eax],al
  40ed9c:	mov    ebx,0x1ff0a60
  40eda1:	(bad)  
  40eda2:	adc    BYTE PTR [eax-0x14],al
  40eda5:	(bad)  
  40eda7:	push   0xfffffffc
  40eda9:	repz jae 0x40edb8
  40edac:	paddusw mm7,mm5
  40edaf:	jne    0x40ed95
  40edb1:	ffreep st(1)
  40edb3:	call   0x3ee030
  40edb8:	aaa    
  40edb9:	test   BYTE PTR [ebx+0x47293aff],0x74
  40edc0:	fcmovnu st,st(6)
  40edc2:	(bad)
  40edc5:	adc    eax,DWORD PTR [eax]
  40edc7:	add    BYTE PTR [edi],dh
  40edc9:	xlat   BYTE PTR ds:[ebx]
  40edca:	xor    esi,0x0
  40edcd:	clc    
  40edce:	push   esi
  40edcf:	jmp    ecx
  40edd1:	or     DWORD PTR [ebx+0x6615bc3],ecx
  40edd7:	call   0x3ee0a0
  40eddc:	test   esp,0xc69f02e9
  40ede2:	pop    ebp
  40ede3:	pop    esi
  40ede4:	pop    ss
  40ede5:	cmp    eax,eax
  40ede7:	or     ch,dl
  40ede9:	jo     0x40edc2
  40edeb:	mov    bh,BYTE PTR [ecx-0x11]
  40edee:	push   0xfffffffe
  40edf0:	call   0xc9b55b4e
  40edf5:	jecxz  0x40ee0e
  40edf7:	(bad)  
  40edf8:	out    0x30,eax
  40edfa:	add    al,0xff
  40edfc:	rol    BYTE PTR [eax-0x2c],0x4f
  40ee00:	add    BYTE PTR [eax],al
  40ee02:	inc    edx
  40ee03:	inc    ebp
  40ee04:	(bad)  
  40ee05:	imul   edx,ebp,0x3207f7c3
  40ee0b:	gs xchg edx,eax
  40ee0d:	adc    DWORD PTR [ebp-0x3a837e90],edx
  40ee13:	jo     0x40ee01
  40ee15:	or     al,0xde
  40ee17:	lods   eax,DWORD PTR ds:[esi]
  40ee18:	adc    bh,BYTE PTR [edi+edx*8+0x5f]
  40ee1c:	inc    edx
  40ee1d:	xor    bl,BYTE PTR [edx+ecx*2]
  40ee20:	jnp    0x40ee2d
  40ee22:	fwait
  40ee23:	dec    ebp
  40ee24:	inc    eax
  40ee25:	or     edx,ebp
  40ee27:	popf   
  40ee28:	jns    0x40ee15
  40ee2a:	xchg   bh,ah
  40ee2c:	dec    edx
  40ee2d:	push   ebp
  40ee2e:	sub    bh,0x69
  40ee31:	(bad)  
  40ee32:	push   0xc9746d57
  40ee37:	arpl   WORD PTR [esi],dx
  40ee39:	(bad)  
  40ee3a:	out    0xb2,eax
  40ee3c:	add    cl,BYTE PTR [ebx-0xfd7253]
  40ee42:	dec    eax
  40ee43:	push   edi
  40ee44:	das    
  40ee45:	idiv   BYTE PTR [edx-0x6975044a]
  40ee4b:	dec    ebx
  40ee4c:	(bad)  
  40ee4d:	(bad)  
  40ee4e:	stos   BYTE PTR es:[edi],al
  40ee4f:	push   eax
  40ee50:	js     0x40ee49
  40ee52:	pop    eax
  40ee53:	dec    eax
  40ee54:	in     eax,dx
  40ee55:	and    al,0x12
  40ee57:	out    dx,al
  40ee58:	pop    es
  40ee59:	aas    
  40ee5a:	pop    eax
  40ee5b:	mov    bl,0xf7
  40ee5d:	sbb    al,0x7d
  40ee5f:	sbb    cl,BYTE PTR [esi]
  40ee61:	add    ch,dl
  40ee63:	or     DWORD PTR [edx+0x74],esi
  40ee66:	add    BYTE PTR [eax],al
  40ee68:	push   ecx
  40ee69:	pop    eax
  40ee6a:	adc    al,0x12
  40ee6c:	or     ah,BYTE PTR [ecx+0x1b]
  40ee6f:	add    BYTE PTR [esi+0x4d],bl
  40ee72:	(bad)  
  40ee73:	neg    edx
  40ee75:	jno    0x40ee72
  40ee77:	ins    BYTE PTR es:[edi],dx
  40ee78:	pop    ebx
  40ee79:	popa   
  40ee7a:	jno    0x40eec2
  40ee7c:	aas    
  40ee7d:	or     al,0xba
  40ee7f:	inc    ebx
  40ee80:	stos   DWORD PTR es:[edi],eax
  40ee81:	mov    edi,0x1214cf11
  40ee86:	jmp    0xb7af3e61
  40ee8b:	ror    BYTE PTR [eax-0x2d08aa48],1
  40ee91:	xchg   esp,eax
  40ee92:	push   eax
  40ee93:	jns    0x40eeba
  40ee95:	popa   
  40ee96:	fisttp DWORD PTR [ebx+0x78e8c9c4]
  40ee9c:	sub    cl,BYTE PTR [edi-0x39a7d714]
  40eea2:	call   0x25083aa8
  40eea7:	adc    DWORD PTR [ecx-0x2af817a3],0x9
  40eeae:	push   0xe90aea41
  40eeb3:	add    edx,DWORD PTR [ebp+eiz*2-0x18]
  40eeb7:	add    esi,DWORD PTR ds:0x5e2b760a
  40eebd:	into   
  40eebe:	hlt    
  40eebf:	pop    ebx
  40eec0:	pop    esi
  40eec1:	(bad)  
  40eec2:	call   0x5c8a47ca
  40eec7:	and    BYTE PTR [edx+0x78ecd6],bh
  40eecd:	add    al,bl
  40eecf:	pusha  
  40eed0:	pop    ebx
  40eed1:	cld    
  40eed2:	pop    ecx
  40eed3:	add    eax,0x6112d151
  40eed8:	fist   DWORD PTR [ebx-0x79173639]
  40eede:	push   edx
  40eedf:	loope  0x40eee0
  40eee1:	mov    al,ds:0xf2fed40b
  40eee6:	pop    ss
  40eee7:	faddp  st(0),st
  40eee9:	jmp    0xe6af:0xda0593ee
  40eef0:	mov    ch,ah
  40eef2:	jle    0x40ee87
  40eef4:	mov    BYTE PTR [edx-0x7938732b],0x89
  40eefb:	mov    esi,0x894b05a
  40ef00:	add    BYTE PTR [edi],bl
  40ef02:	and    BYTE PTR [edi+0x73],bl
  40ef05:	lds    eax,FWORD PTR [edx-0x6d]
  40ef08:	out    dx,eax
  40ef09:	data16 jecxz 0x40ef51
  40ef0c:	adc    DWORD PTR [ecx+0x68f794d6],ebp
  40ef12:	xchg   ecx,eax
  40ef13:	pusha  
  40ef14:	add    cl,ch
  40ef16:	(bad)  
  40ef17:	mov    bh,dh
  40ef19:	jmp    0xb64098f4
  40ef1e:	(bad)  
  40ef1f:	mov    cs,WORD PTR [esi-0x18]
  40ef22:	scas   al,BYTE PTR es:[edi]
  40ef23:	xor    al,0x1d
  40ef25:	jmp    0x9e007500
  40ef2a:	mov    dl,0x60
  40ef2c:	jae    0x40eef3
  40ef2e:	(bad)  
  40ef2f:	pusha  
  40ef30:	jae    0x40eeff
  40ef32:	add    BYTE PTR [eax],al
  40ef34:	(bad)  
  40ef35:	mov    eax,0xf571d7fe
  40ef3a:	mov    ebx,edx
  40ef3c:	push   ss
  40ef3d:	pusha  
  40ef3e:	sub    DWORD PTR [ecx],0xffffffbe
  40ef41:	cmp    cl,BYTE PTR [esi+eiz*4+0x6cc12439]
  40ef48:	cld    
  40ef49:	xchg   ebx,eax
  40ef4a:	or     eax,0x11d5af
  40ef4f:	rcr    dl,cl
  40ef51:	mov    al,bh
  40ef53:	(bad)  
  40ef54:	sahf   
  40ef55:	mov    ebp,0xb7d6e1c1
  40ef5a:	mov    DWORD PTR [eax],eax
  40ef5c:	cmp    al,0xc6
  40ef5e:	call   0xd0da7267
  40ef63:	push   0x75
  40ef65:	push   ecx
  40ef66:	and    cl,BYTE PTR [edi]
  40ef68:	sbb    ch,BYTE PTR [edi]
  40ef6a:	repnz sbb ebx,DWORD PTR [edx-0x79]
  40ef6e:	in     al,0x7
  40ef70:	dec    ebx
  40ef72:	cs data16 jg 0x40ef4b
  40ef76:	or     eax,0x7402cb6
  40ef7b:	pop    edx
  40ef7c:	retf   0xd02e
  40ef7f:	sbb    ebp,DWORD PTR [esi-0x79]
  40ef82:	loopne 0x40ef8b
  40ef84:	mov    edi,0x2f662ec7
  40ef89:	mov    ebx,0x6bdd8964
  40ef8e:	xchg   DWORD PTR [ecx+0x3e],edx
  40ef91:	push   ecx
  40ef92:	rol    DWORD PTR [ebx+0xa73f284],0x0
  40ef99:	add    BYTE PTR [ebx-0x6cfbdda7],dl
  40ef9f:	clc    
  40efa0:	xchg   edi,eax
  40efa1:	adc    bh,BYTE PTR [ebx+ecx*1]
  40efa4:	add    eax,eax
  40efa6:	ins    BYTE PTR es:[edi],dx
  40efa7:	hlt    
  40efa8:	jb     0x40efce
  40efaa:	hlt    
  40efab:	cmp    dh,ah
  40efad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efae:	rol    DWORD PTR ds:0x6ba53300,1
  40efb4:	xchg   DWORD PTR [esp+ecx*1],ecx
  40efb7:	lds    eax,FWORD PTR [edx]
  40efb9:	add    BYTE PTR [edi-0x13],ch
  40efbc:	std    
  40efbd:	jne    0x40efa5
  40efbf:	repz jb 0x40efe6
  40efc2:	mov    eax,0xaec413f3
  40efc7:	dec    edx
  40efc8:	dec    BYTE PTR [edi-0x4d]
  40efcb:	outs   dx,BYTE PTR ds:[esi]
  40efcc:	and    cl,BYTE PTR [eax]
  40efce:	cli    
  40efcf:	mov    ebp,0xabc1d80
  40efd4:	mov    BYTE PTR [edx*8-0x263dfd92],0x70
  40efdc:	test   DWORD PTR [ebx-0xf],edi
  40efdf:	ins    BYTE PTR es:[edi],dx
  40efe0:	add    dh,BYTE PTR [ebp-0x27]
  40efe3:	arpl   WORD PTR [edx-0x16],ax
  40efe6:	mov    edx,0x8fe6af3
  40efeb:	imul   ebp,DWORD PTR [ecx+0x73],0xffffffb1
  40efef:	ins    BYTE PTR es:[edi],dx
  40eff0:	imul   edx,DWORD PTR [ecx*2+0xffc262],0x50002ee6
  40effb:	es push es
  40effd:	test   DWORD PTR [eax],eax
  40efff:	add    BYTE PTR [ebp+0x37e80e5c],dl
  40f005:	cmp    al,0x2
  40f007:	add    BYTE PTR [eax-0x50],dl
  40f00a:	out    dx,al
  40f00b:	or     ch,BYTE PTR [ebx-0x36dc1111]
  40f011:	mov    al,ds:0x70d0415a
  40f016:	add    bl,BYTE PTR [esi+0x17]
  40f019:	ins    BYTE PTR es:[edi],dx
  40f01a:	add    al,BYTE PTR [ebx+0x4a1]
  40f020:	sbb    ebx,0x72
  40f023:	je     0x40effe
  40f025:	arpl   WORD PTR [edx-0x16],ax
  40f028:	mov    ecx,0x88fe68f3
  40f02d:	cmp    al,0x69
  40f02f:	jae    0x40efe2
  40f031:	pop    eax
  40f032:	imul   edx,DWORD PTR [ecx+ebx*1],0x5fffc262
  40f039:	add    BYTE PTR [eax+0x45],bh
  40f03c:	aam    0xe5
  40f03e:	inc    edx
  40f03f:	jae    0x40f032
  40f041:	neg    DWORD PTR [esi+0x7f72d51b]
  40f047:	mov    edi,0xfed06841
  40f04c:	dec    ecx
  40f04d:	inc    edi
  40f04e:	test   BYTE PTR [edi-0x53],0xa
  40f052:	in     eax,dx
  40f053:	push   es
  40f054:	aad    0x9
  40f056:	aas    
  40f057:	inc    esi
  40f058:	(bad)  
  40f059:	or     DWORD PTR [edx],edi
  40f05b:	ror    BYTE PTR [edi+0x5b],cl
  40f05e:	xor    eax,0xbe87a27d
  40f063:	lock add BYTE PTR [eax],al
  40f066:	rcl    BYTE PTR [eax-0x361b7425],cl
  40f06c:	call   0x339e73f5
  40f071:	cld    
  40f072:	jnp    0x40f04a
  40f074:	int3   
  40f075:	adc    esi,DWORD PTR [edx+0x39]
  40f078:	jno    0x40f0e6
  40f07a:	imul   edx,DWORD PTR [esi+edx*4],0x55
  40f07e:	dec    edi
  40f07f:	inc    edx
  40f080:	pop    ebx
  40f081:	clc    
  40f082:	lahf   
  40f083:	mov    ?,WORD PTR [ebx+edi*8]
  40f086:	aam    0x71
  40f088:	call   0xc644:0x6d09d50d
  40f08f:	hlt    
  40f090:	pop    ebx
  40f091:	add    dl,bh
  40f093:	mov    ecx,0xd6320271
  40f098:	add    al,0x10
  40f09a:	pop    eax
  40f09b:	push   es
  40f09c:	mov    cl,0xd3
  40f09e:	cmp    ah,BYTE PTR [ebx-0x662afc14]
  40f0a4:	out    0x5c,eax
  40f0a6:	aam    0x17
  40f0a8:	sub    ecx,ecx
  40f0aa:	test   al,0xc0
  40f0ac:	sub    al,BYTE PTR [eax]
  40f0ae:	aad    0x88
  40f0b0:	lods   al,BYTE PTR ds:[esi]
  40f0b1:	pop    ds
  40f0b2:	ror    DWORD PTR [ecx],1
  40f0b4:	mov    edx,0x40908bd1
  40f0b9:	jge    0x40f0a0
  40f0bb:	aad    0xcf
  40f0bd:	jl     0x40f060
  40f0bf:	inc    ebp
  40f0c0:	cli    
  40f0c1:	ret    
  40f0c2:	fiadd  DWORD PTR [edi+0x12496901]
  40f0c8:	(bad)  
  40f0c9:	out    dx,eax
  40f0ca:	add    BYTE PTR [eax],al
  40f0cc:	idiv   cl
  40f0ce:	push   ebp
  40f0d0:	and    eax,0x4eed790
  40f0d5:	pop    ebp
  40f0d6:	(bad)  
  40f0d7:	jb     0x40f117
  40f0d9:	mov    cs,WORD PTR [ebx-0x2]
  40f0dc:	xlat   BYTE PTR ds:[ebx]
  40f0dd:	jno    0x40f15d
  40f0df:	repnz (bad) 
  40f0e1:	or     DWORD PTR [ecx+ebp*4-0x10750856],eax
  40f0e8:	test   eax,0xe505735b
  40f0ed:	or     bh,al
  40f0ef:	sbb    DWORD PTR [ecx],esp
  40f0f1:	repz sbb ebp,ecx
  40f0f4:	(bad)  
  40f0f5:	cdq    
  40f0f6:	add    BYTE PTR [edx+0x3ec017d8],dl
  40f0fc:	lahf   
  40f0fd:	mov    edi,0xb3d6edc1
  40f102:	(bad)  
  40f103:	hlt    
  40f104:	dec    esi
  40f105:	cli    
  40f106:	aas    
  40f107:	jmp    0x1cbe8ddf
  40f10c:	add    BYTE PTR [ebx+0x32],dl
  40f10f:	fwait
  40f110:	and    eax,0xceefbf85
  40f115:	or     al,0xb7
  40f117:	and    eax,0x9fe8707
  40f11c:	and    eax,0xa52e8311
  40f121:	out    0x82,al
  40f123:	dec    esi
  40f124:	sbb    dl,bl
  40f126:	add    eax,0xd01f18a8
  40f12b:	mov    ebp,0x64c12fae
  40f130:	add    BYTE PTR [eax],al
  40f132:	ror    bl,cl
  40f134:	mov    WORD PTR [ecx-0x5e377a93],fs
  40f13a:	les    ecx,FWORD PTR [edi+esi*4]
  40f13d:	(bad)  [eax]
  40f13f:	xchg   esi,edi
  40f141:	leave  
  40f142:	repnz adc BYTE PTR [ebx-0x7d199ada],al
  40f149:	add    bl,bl
  40f14b:	pop    edx
  40f14c:	jne    0x40f152
  40f14e:	test   BYTE PTR [eax+0x2e6bea77],ah
  40f154:	(bad)  
  40f155:	jbe    0x40f0f2
  40f157:	fdivr  QWORD PTR [esi+0xae2a77e]
  40f15d:	add    ch,ch
  40f15f:	aaa    
  40f160:	push   esp
  40f161:	call   0x4100ee
  40f166:	mov    edi,0x8889651c
  40f16b:	popf   
  40f16c:	rcl    DWORD PTR [ebx-0x1e],0x17
  40f170:	fisttp DWORD PTR [ebx+0x6b5533c]
  40f176:	sbb    DWORD PTR [esi],esi
  40f178:	into   
  40f179:	data16 (bad) 
  40f17b:	out    dx,eax
  40f17c:	pop    es
  40f17d:	ja     0x40f1f0
  40f17f:	push   esp
  40f180:	mov    ch,0xc2
  40f182:	push   edi
  40f183:	add    al,0x8d
  40f185:	push   eax
  40f186:	or     edi,DWORD PTR [ecx+eax*4]
  40f189:	cli    
  40f18a:	inc    ecx
  40f18b:	ins    BYTE PTR es:[edi],dx
  40f18c:	add    eax,0xfee38505
  40f191:	call   DWORD PTR [edi+0x54]
  40f194:	mov    edx,DWORD PTR [eax+0x0]
  40f197:	add    BYTE PTR [ebx+0x41fa813b],cl
  40f19d:	ins    BYTE PTR es:[edi],dx
  40f19e:	sbb    al,BYTE PTR ds:0xfffee345
  40f1a4:	mov    al,0xce
  40f1a6:	jb     0x40f1af
  40f1a8:	xor    al,0x6
  40f1aa:	inc    ecx
  40f1ab:	xor    dh,BYTE PTR [edi-0x633ffa42]
  40f1b1:	or     DWORD PTR [eax-0x7cfb80ff],ecx
  40f1b7:	(bad)  
  40f1b8:	out    dx,al
  40f1b9:	mov    edi,0xc58166b8
  40f1be:	jae    0x40f1c8
  40f1c0:	jo     0x40f190
  40f1c2:	jae    0x40f1c8
  40f1c4:	aad    0xc0
  40f1c6:	add    al,0xeb
  40f1c8:	xlat   BYTE PTR ds:[ebx]
  40f1c9:	ds inc edx
  40f1cb:	pop    ebp
  40f1cc:	cs xor cl,dl
  40f1cf:	mov    bh,BYTE PTR [ecx+0x560b57ef]
  40f1d5:	lea    esp,[esi-0x1]
  40f1d8:	daa    
  40f1d9:	jae    0x40f254
  40f1db:	je     0x40f1ba
  40f1dd:	aad    0xf6
  40f1df:	add    eax,0x82f8255e
  40f1e4:	cmc    
  40f1e5:	jo     0x40f1b4
  40f1e7:	mov    BYTE PTR [eax],cl
  40f1e9:	cmp    DWORD PTR [ecx],ebp
  40f1eb:	icebp  
  40f1ec:	loop   0x40f1dd
  40f1ee:	dec    WORD PTR [edx-0x1abb8690]
  40f1f5:	out    dx,eax
  40f1f6:	bound  eax,QWORD PTR [ecx]
  40f1f8:	dec    esp
  40f1f9:	and    eax,0xea70
  40f1fe:	fcom   st(7)
  40f200:	out    dx,eax
  40f201:	pop    es
  40f202:	pop    esi
  40f203:	cwde   
  40f204:	cmp    DWORD PTR [ecx+ebp*2+0x70],0x6ce1dd79
  40f20c:	jns    0x40f1d3
  40f20e:	push   cs
  40f20f:	loop   0x40f202
  40f211:	or     ebx,DWORD PTR [edi+0x40]
  40f214:	sub    BYTE PTR [ebp-0x17],dl
  40f217:	pop    esp
  40f218:	(bad)  
  40f219:	aas    
  40f21a:	(bad)  
  40f21b:	mov    cl,0xf0
  40f21d:	repz pop esi
  40f21f:	call   0xd9d6f03d
  40f224:	mov    edi,0xcc652e07
  40f229:	mov    WORD PTR [eax-0x20f8698],ds
  40f22f:	test   al,0xfd
  40f231:	dec    DWORD PTR [edx]
  40f233:	xlat   BYTE PTR ds:[ebx]
  40f234:	push   0xffffff8a
  40f236:	nop
  40f237:	adc    al,0x7a
  40f239:	je     0x40f204
  40f23b:	mov    ebp,0x9d98cf6
  40f240:	jmp    0xcab2c748
  40f245:	or     ebp,edx
  40f247:	or     DWORD PTR [ebp+0x43],ebp
  40f24a:	retf   
  40f24b:	test   DWORD PTR [ecx+0x3],eax
  40f24e:	aad    0x9
  40f250:	ins    BYTE PTR es:[edi],dx
  40f251:	inc    si
  40f253:	hlt    
  40f254:	cdq    
  40f255:	jp     0x40f1f2
  40f257:	bound  esp,QWORD PTR [esi]
  40f259:	push   0xd06159bb
  40f25e:	scas   al,BYTE PTR es:[edi]
  40f25f:	test   DWORD PTR [esi-0x22ffff87],esi
  40f265:	and    ah,0x92
  40f268:	pop    ecx
  40f269:	dec    edx
  40f26a:	in     eax,0x7f
  40f26c:	dec    ecx
  40f26d:	or     ch,cl
  40f26f:	add    ecx,DWORD PTR [ebx+0x102d8cf]
  40f275:	call   0x85bfa9eb
  40f27a:	scas   al,BYTE PTR es:[edi]
  40f27b:	jns    0x40f2f7
  40f27d:	xchg   ah,ah
  40f27f:	jnp    0x40f2d8
  40f281:	adc    ch,cl
  40f283:	out    dx,eax
  40f284:	or     eax,DWORD PTR [ebp-0x9c3228]
  40f28a:	lods   al,BYTE PTR ds:[esi]
  40f28b:	adc    dl,BYTE PTR ds:0xd044640a
  40f291:	mov    ebx,0x590751b9
  40f296:	arpl   WORD PTR [eax+eax*8-0x1],ax
  40f29a:	(bad)  
  40f29b:	clc    
  40f29c:	add    ecx,DWORD PTR [edx+0x1a9246f]
  40f2a2:	imul   ebx,DWORD PTR [ebx-0x23],0xaa005f89
  40f2a9:	bts    DWORD PTR [edi+ebx*8-0x40a633af],edi
  40f2b1:	dec    ebx
  40f2b2:	jae    0x40f2dc
  40f2b4:	mov    DWORD PTR [esi+0x3c596498],0x83cab0ff
  40f2be:	or     esi,ebx
  40f2c0:	push   esi
  40f2c1:	push   edx
  40f2c2:	pop    ds
  40f2c3:	popf   
  40f2c4:	out    dx,al
  40f2c5:	fsubr  st,st(0)
  40f2c7:	lock add BYTE PTR [eax],al
  40f2ca:	push   esi
  40f2cb:	push   edx
  40f2cc:	add    ebx,DWORD PTR [esi-0x6fb62f26]
  40f2d2:	sub    dl,BYTE PTR [esi+edi*8]
  40f2d5:	jg     0x40f299
  40f2d7:	lea    edi,[edi+0x56c8be7f]
  40f2dd:	lahf   
  40f2de:	push   ds
  40f2df:	sbb    DWORD PTR [ecx],0xffffffe9
  40f2e2:	(bad)  
  40f2e3:	dec    edi
  40f2e4:	add    ebx,DWORD PTR [ecx]
  40f2e6:	rol    DWORD PTR [esp+eax*2-0x431c61f],1
  40f2ed:	adc    BYTE PTR [edx+0x10],bl
  40f2f0:	packssdw mm1,QWORD PTR [ecx+0xdc6fe57]
  40f2f7:	into   
  40f2f8:	sti    
  40f2f9:	push   ds
  40f2fa:	fwait
  40f2fb:	mov    bl,0xc8
  40f2fd:	stos   DWORD PTR es:[edi],eax
  40f2fe:	out    0x9,al
  40f300:	mov    esp,DWORD PTR [edi*8-0x6a6e027d]
  40f307:	repnz (bad) 
  40f309:	call   0x833f4363
  40f30e:	cld    
  40f30f:	mov    ebp,0x64557d8a
  40f314:	or     ebp,DWORD PTR [edx+0x2b]
  40f317:	pusha  
  40f318:	call   FWORD PTR [ecx]
  40f31a:	adc    eax,DWORD PTR [ebx+0x9d86af1]
  40f320:	(bad)  
  40f321:	aad    0x2e
  40f323:	mov    edi,0x81b2ac88
  40f328:	push   esp
  40f329:	push   ebp
  40f32a:	in     eax,dx
  40f32b:	dec    ebx
  40f32c:	push   cs
  40f32d:	push   0x0
  40f32f:	add    BYTE PTR [edi-0x731601a8],dl
  40f335:	adc    BYTE PTR [eax+0x742c9500],al
  40f33b:	or     ch,BYTE PTR [ebx+eiz*8+0x7]
  40f33f:	jl     0x40f332
  40f341:	mov    esi,edi
  40f343:	or     eax,0x893e5443
  40f348:	cmp    eax,esi
  40f34a:	cmp    edx,eax
  40f34c:	ds mov ch,0x39
  40f34f:	ret    0x88f3
  40f352:	sahf   
  40f353:	add    BYTE PTR [ebx+ecx*1+0x6341188a],bh
  40f35a:	(bad)  
  40f35b:	jg     0x40f334
  40f35d:	cmc    
  40f35e:	jae    0x40f365
  40f360:	sub    al,0xe2
  40f362:	and    BYTE PTR [ebp-0x75],dh
  40f365:	aam    0x7b
  40f367:	cld    
  40f368:	xchg   edx,esi
  40f36a:	mov    DWORD PTR [edi],ecx
  40f36c:	sub    al,0xb5
  40f36e:	push   ds
  40f36f:	je     0x40f324
  40f371:	mov    esi,edi
  40f373:	or     DWORD PTR [eax],esp
  40f375:	add    DWORD PTR [eax+0x36981f9],eax
  40f37b:	inc    edi
  40f37c:	xlat   BYTE PTR ds:[ebx]
  40f37d:	mov    bh,0x70
  40f37f:	jmp    0x2697:0xd829caf7
  40f386:	cmp    BYTE PTR [edi],bl
  40f388:	leave  
  40f389:	pop    esi
  40f38a:	xor    ecx,ecx
  40f38c:	icebp  
  40f38d:	inc    edx
  40f38e:	std    
  40f38f:	jmp    0x40f3ff
  40f391:	dec    esi
  40f392:	inc    esi
  40f393:	add    BYTE PTR [eax],0x0
  40f396:	and    al,0x97
  40f398:	jb     0x40f393
  40f39a:	retf   0xffcc
  40f39d:	jae    0x40f3d8
  40f39f:	inc    esp
  40f3a0:	cmp    edx,edi
  40f3a2:	ds out dx,eax
  40f3a4:	cmp    edx,edi
  40f3a6:	sub    DWORD PTR [eax],edx
  40f3a8:	dec    DWORD PTR [ebp-0x50]
  40f3ab:	xchg   ch,bl
  40f3ad:	sub    esp,DWORD PTR [ecx-0x49]
  40f3b0:	mov    DWORD PTR [ebp-0x2b],ecx
  40f3b3:	mov    eax,0x6d600b90
  40f3b8:	add    al,BYTE PTR [eax]
  40f3ba:	aad    0xb8
  40f3bc:	cwde   
  40f3bd:	pop    ss
  40f3be:	aad    0x60
  40f3c0:	xchg   BYTE PTR [edi-0x2578a57f],bh
  40f3c6:	push   0x7dc0156a
  40f3cb:	rcl    edi,cl
  40f3cd:	aas    
  40f3ce:	aad    0xa0
  40f3d0:	ins    DWORD PTR es:[edi],dx
  40f3d1:	add    al,0xda
  40f3d3:	jne    0x40f433
  40f3d5:	mov    dl,BYTE PTR [esi-0x350442f8]
  40f3db:	jg     0x5abe41ee
  40f3e1:	mov    cl,dl
  40f3e3:	mov    cl,0x88
  40f3e5:	mov    edi,0x44613f29
  40f3ea:	lods   eax,DWORD PTR ds:[esi]
  40f3eb:	(bad)  [edi-0x2025e50d]
  40f3f1:	sti    
  40f3f2:	dec    esi
  40f3f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f4:	imul   esi,DWORD PTR [esi],0xffffff92
  40f3f7:	inc    edi
  40f3f8:	popa   
  40f3f9:	mov    al,BYTE PTR [eax]
  40f3fb:	add    BYTE PTR [eax],dl
  40f3fd:	dec    ecx
  40f3fe:	ins    DWORD PTR es:[edi],dx
  40f3ff:	or     al,0x4e
  40f401:	sub    eax,0x48bb8a5c
  40f406:	int    0x18
  40f408:	aad    0x60
  40f40a:	test   edi,eax
  40f40c:	push   0xffffffcf
  40f40e:	rcr    DWORD PTR [edx-0x74],0xa3
  40f412:	mov    bh,0x8a
  40f414:	imul   esp,ebx,0xd560b6e
  40f41a:	pop    esp
  40f41b:	jmp    DWORD PTR [edi+0x56f18ef6]
  40f421:	dec    esi
  40f422:	add    cl,BYTE PTR [ebp-0x7744d727]
  40f428:	cwde   
  40f429:	in     al,0x8b
  40f42b:	pop    esp
  40f42c:	and    DWORD PTR [ecx],ecx
  40f42e:	and    al,BYTE PTR [edi-0x2d]
  40f431:	mov    dh,BYTE PTR [ebx]
  40f433:	add    edx,ebp
  40f435:	or     esi,esp
  40f437:	call   0x381:0x234f8ada
  40f43e:	push   0x5c
  40f440:	int    0xdb
  40f442:	in     eax,dx
  40f443:	xchg   ch,bh
  40f445:	add    edi,DWORD PTR [esi-0x15b6a9f3]
  40f44b:	mov    WORD PTR [ecx+0x6446e155],ss
  40f451:	ins    DWORD PTR es:[edi],dx
  40f452:	loope  0x40f49a
  40f454:	retf   
  40f455:	mov    dl,BYTE PTR [edi+0x3]
  40f458:	aad    0x9
  40f45a:	ficomp WORD PTR [edx+0x58086d2]
  40f460:	add    BYTE PTR [eax],al
  40f462:	push   esi
  40f463:	push   ebx
  40f464:	(bad)
  40f467:	mov    bh,ch
  40f469:	and    al,0x28
  40f46b:	mul    BYTE PTR [ecx+0x34]
  40f46e:	pop    ebp
  40f46f:	xlat   BYTE PTR ds:[ebx]
  40f470:	in     al,0x6d
  40f472:	loope  0x40f478
  40f474:	xchg   esi,eax
  40f475:	adc    DWORD PTR [esi+0x53],edx
  40f478:	or     al,bl
  40f47a:	in     eax,0x88
  40f47c:	iret   
  40f47d:	or     eax,DWORD PTR [edi]
  40f47f:	punpckhdq mm3,QWORD PTR [ebx-0x2f]
  40f483:	frstpm(287 only) 
  40f485:	test   BYTE PTR [ebx-0x1ba30df8],dl
  40f48b:	ins    BYTE PTR es:[edi],dx
  40f48c:	popa   
  40f48d:	inc    ecx
  40f48e:	mov    edi,0xfb319131
  40f493:	adc    dh,dh
  40f495:	(bad)  
  40f496:	rcr    BYTE PTR [eax],0xa0
  40f499:	(bad)  
  40f49a:	fwait
  40f49b:	push   ebx
  40f49c:	or     DWORD PTR [eax],0x6908894
  40f4a2:	mov    ebx,0xc6bfc088
  40f4a7:	pop    ebx
  40f4a8:	(bad)  
  40f4a9:	jle    0x40f441
  40f4ab:	or     DWORD PTR [esi+eiz*8+0x51],esi
  40f4af:	dec    esp
  40f4b0:	add    DWORD PTR [edx],esp
  40f4b2:	sbb    dl,0xdd
  40f4b5:	and    bh,BYTE PTR [eax-0x23]
  40f4b8:	add    ebp,DWORD PTR [edx+0x2]
  40f4bb:	push   ecx
  40f4bc:	add    DWORD PTR [edx-0x6c],esp
  40f4bf:	pop    ds
  40f4c0:	pop    ebp
  40f4c1:	inc    ebp
  40f4c2:	push   eax
  40f4c3:	(bad)  
  40f4c4:	imul   DWORD PTR [eax+eax*1+0x0]
  40f4c8:	in     eax,0x86
  40f4ca:	add    ebp,ecx
  40f4cc:	(bad)  
  40f4cd:	or     ecx,edx
  40f4cf:	xor    bh,BYTE PTR [ecx-0x54]
  40f4d2:	push   ss
  40f4d3:	jmp    0x960082ae
  40f4d8:	mov    edx,0xe09cda8e
  40f4dd:	sbb    al,al
  40f4df:	add    DWORD PTR [edx-0x27],0x5f96e93f
  40f4e6:	add    al,0xfe
  40f4e8:	mov    ds:0x412a8a50,eax
  40f4ed:	add    al,0xfb
  40f4ef:	out    dx,al
  40f4f0:	xor    eax,0x6b720d80
  40f4f5:	pop    esp
  40f4f6:	mov    ch,ah
  40f4f8:	daa    
  40f4f9:	mov    ?,WORD PTR [edi+0x4453915d]
  40f4ff:	rcr    DWORD PTR [ecx-0x4b],1
  40f502:	repz push 0xd
  40f505:	or     ecx,DWORD PTR [ecx-0x39800ac4]
  40f50b:	sar    BYTE PTR [ecx+0x59aefe54],0xcd
  40f512:	not    DWORD PTR [edx-0x5ebb7f2d]
  40f518:	dec    ecx
  40f519:	push   ss
  40f51a:	call   0xfe9543f4
  40f51f:	push   0xffffff9e
  40f521:	push   ebx
  40f522:	pop    esi
  40f523:	add    dl,bh
  40f525:	xchg   esi,eax
  40f526:	mov    ebx,0x83ea86e1
  40f52c:	add    BYTE PTR [eax],al
  40f52e:	pop    eax
  40f52f:	pop    esp
  40f530:	push   ecx
  40f531:	push   esi
  40f532:	outs   dx,DWORD PTR ds:[esi]
  40f533:	adc    eax,0x7fbb3356
  40f538:	pop    ebx
  40f539:	hlt    
  40f53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f53b:	xchg   ebx,eax
  40f53c:	idiv   BYTE PTR [ecx]
  40f53e:	dec    ecx
  40f53f:	add    al,0xf
  40f541:	xchg   BYTE PTR [edi+0x8],dl
  40f544:	add    BYTE PTR [eax],al
  40f546:	xchg   DWORD PTR [ebx-0xa],eax
  40f549:	mov    esi,DWORD PTR [ecx]
  40f54b:	add    BYTE PTR [ebp+0xe857404],cl
  40f551:	(bad)  
  40f552:	xor    ecx,ebp
  40f554:	dec    BYTE PTR [eax-0x35761bcf]
  40f55a:	(bad)  
  40f55b:	pop    ebx
  40f55c:	fs and esp,0x26
  40f560:	je     0x40f57b
  40f562:	push   edx
  40f563:	mov    ?,esi
  40f565:	or     DWORD PTR [esi],edi
  40f567:	add    DWORD PTR [esi-0x7d],esp
  40f56a:	aam    0x3
  40f56c:	jbe    0x40f57b
  40f56e:	aas    
  40f56f:	enter  0xf00,0xe3
  40f573:	pop    es
  40f574:	test   WORD PTR [ecx+esi*1-0x1f],bp
  40f579:	jmp    0x40f52b
  40f57b:	int    0x43
  40f57d:	(bad)  
  40f57e:	jge    0x40f519
  40f580:	std    
  40f581:	adc    eax,0x3e5804
  40f586:	or     edx,edi
  40f588:	aaa    
  40f589:	lea    ebp,[eax-0x4e72f7fc]
  40f58f:	mov    cl,0x87
  40f591:	inc    ebp
  40f592:	add    BYTE PTR [eax],al
  40f594:	sub    al,0xe6
  40f596:	out    0x16,al
  40f598:	ins    BYTE PTR es:[edi],dx
  40f599:	pop    es
  40f59a:	test   al,al
  40f59c:	rcl    BYTE PTR [ebx+0x78d57d81],0x3
  40f5a3:	mov    ebp,DWORD PTR [eax-0x50f82a84]
  40f5a9:	inc    eax
  40f5aa:	mov    edx,0xd96d4c65
  40f5af:	inc    esi
  40f5b0:	push   ebp
  40f5b1:	pop    esi
  40f5b2:	pop    ebp
  40f5b3:	jmp    DWORD PTR [esi+0x7d21e868]
  40f5b9:	inc    edx
  40f5ba:	mov    eax,DWORD PTR [ebx]
  40f5bc:	sahf   
  40f5bd:	stos   DWORD PTR es:[edi],eax
  40f5be:	mov    DWORD PTR [ecx+eax*1-0x44],eax
  40f5c2:	adc    ecx,DWORD PTR [ebx+0x3390b090]
  40f5c8:	jle    0x40f582
  40f5ca:	push   ecx
  40f5cb:	clc    
  40f5cc:	cli    
  40f5cd:	adc    eax,DWORD PTR [ebx]
  40f5cf:	jge    0x40f5b6
  40f5d1:	loopne 0x40f5b3
  40f5d3:	(bad)  
  40f5d4:	aad    0x9c
  40f5d6:	or     al,0x6a
  40f5d8:	mov    bh,0x48
  40f5da:	in     al,0x88
  40f5dc:	shl    DWORD PTR [edi-0x7d6acd3b],1
  40f5e2:	mov    eax,DWORD PTR [ebx]
  40f5e4:	dec    esi
  40f5e5:	add    al,0xc9
  40f5e7:	test   DWORD PTR [esi-0x5b],0x65103a5a
  40f5ee:	or     eax,0x5d5c0882
  40f5f3:	(bad)  
  40f5f4:	pop    esi
  40f5f5:	pop    ds
  40f5f6:	mov    edi,0xfe00005d
  40f5fb:	cdq    
  40f5fc:	inc    eax
  40f5fd:	pop    es
  40f5fe:	aad    0x33
  40f600:	xlat   BYTE PTR ds:[ebx]
  40f601:	repz jge 0x40f624
  40f604:	idiv   edi
  40f606:	mov    ch,bh
  40f608:	inc    ebx
  40f609:	jmp    0xdfcd:0x23d64b70
  40f610:	dec    edx
  40f611:	(bad)  
  40f612:	jb     0x40f628
  40f614:	sub    BYTE PTR [eax],cl
  40f616:	jmp    DWORD PTR [eax+0x6a]
  40f619:	jno    0x40f685
  40f61b:	or     DWORD PTR [esi-0x16fe6ba2],esp
  40f621:	mov    eax,0xb73e655f
  40f626:	pop    edi
  40f627:	push   eax
  40f628:	popa   
  40f629:	rcr    dl,1
  40f62b:	jle    0x40f6a5
  40f62d:	mov    BYTE PTR ds:0x3388ecdc,cl
  40f633:	fstp   st(4)
  40f635:	adc    BYTE PTR [edx],0x52
  40f638:	jg     0x40f6b9
  40f63a:	and    dl,BYTE PTR [edx-0x18]
  40f63d:	mov    BYTE PTR [ebx],bl
  40f63f:	fsub   st(5),st
  40f641:	adc    dl,BYTE PTR ds:0xa733fc9
  40f647:	push   edx
  40f648:	call   0x6fa10b5f
  40f64d:	add    edx,ebp
  40f64f:	or     DWORD PTR [edx-0x25b22e76],ebx
  40f655:	ret    
  40f656:	jmp    0x6a19:0x695e2e86
  40f65d:	loopne 0x40f65f
  40f65f:	add    dh,cl
  40f661:	push   edx
  40f662:	xchg   ebx,eax
  40f663:	and    DWORD PTR [edi+0x9],ebx
  40f666:	out    0x9d,al
  40f668:	add    eax,0xef334f01
  40f66d:	pop    ebx
  40f66e:	jnp    0x40f626
  40f670:	out    dx,eax
  40f671:	inc    eax
  40f672:	fs inc ebx
  40f674:	es mov ebx,0xd389ad
  40f67a:	das    
  40f67b:	pop    ss
  40f67c:	fadd   QWORD PTR [eax]
  40f67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f67f:	xor    al,0xef
  40f681:	pop    ebx
  40f682:	push   esp
  40f683:	outs   dx,BYTE PTR ds:[esi]
  40f684:	jg     0x40f651
  40f686:	aaa    
  40f687:	pop    ebp
  40f688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f689:	test   DWORD PTR [ebx],ebx
  40f68b:	or     al,0x4e
  40f68d:	pop    edx
  40f68e:	imul   ebx,edi,0xb3350ce
  40f694:	or     dl,BYTE PTR [ecx-0x1]
  40f697:	cdq    
  40f698:	pop    esp
  40f699:	mov    esi,0x59a6007
  40f69e:	mov    edi,DWORD PTR [eax*8-0x9eb0dec]
  40f6a5:	xchg   ch,dh
  40f6a7:	sbb    eax,0x15d1864a
  40f6ac:	ds sbb al,0xc0
  40f6af:	ins    BYTE PTR es:[edi],dx
  40f6b0:	pop    es
  40f6b1:	iret   
  40f6b2:	adc    al,0xee
  40f6b4:	push   eax
  40f6b5:	sbb    cl,BYTE PTR [edi]
  40f6b7:	aaa    
  40f6b8:	sub    BYTE PTR [ebx+esi*8],ah
  40f6bb:	hlt    
  40f6bc:	int    0xca
  40f6be:	inc    esi
  40f6bf:	test   eax,0x4e7b4bbd
  40f6c4:	add    BYTE PTR [eax],al
  40f6c6:	jl     0x40f6d2
  40f6c8:	sub    ebx,DWORD PTR [ebx-0x1c]
  40f6cb:	inc    edx
  40f6cc:	test   BYTE PTR [edi-0x30],dl
  40f6cf:	jo     0x40f691
  40f6d1:	jb     0x40f666
  40f6d3:	push   edi
  40f6d4:	xlat   BYTE PTR ds:[ebx]
  40f6d5:	loop   0x40f66d
  40f6d7:	mov    bl,0x8c
  40f6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6da:	fist   WORD PTR [eax+0x22]
  40f6dd:	sub    BYTE PTR [eax],ah
  40f6df:	scas   eax,DWORD PTR es:[edi]
  40f6e0:	pop    esp
  40f6e1:	sub    ecx,ecx
  40f6e3:	or     DWORD PTR [ebp+0x72],edx
  40f6e6:	inc    ebp
  40f6e7:	mov    bh,0x56
  40f6e9:	bound  ebp,QWORD PTR [esi]
  40f6eb:	test   BYTE PTR [ecx+eiz*8+0x4d],cl
  40f6ef:	pusha  
  40f6f0:	test   BYTE PTR [eax],dh
  40f6f2:	mov    ds:0x8afe8504,al
  40f6f7:	cld    
  40f6f8:	and    BYTE PTR [ecx],0x8
  40f6fb:	bound  ebx,QWORD PTR [esi-0x7af62917]
  40f701:	out    0x83,al
  40f703:	push   DWORD PTR [edx]
  40f705:	test   eax,0xe9926196
  40f70a:	(bad)  
  40f70b:	or     DWORD PTR [ebx],esi
  40f70d:	test   eax,0xffff84ef
  40f712:	ins    BYTE PTR es:[edi],dx
  40f713:	or     al,0x53
  40f715:	mov    edx,DWORD PTR [ecx+0x7c4010d4]
  40f71b:	mov    esp,edi
  40f71d:	jmp    FWORD PTR [ecx+0x607d831e]
  40f723:	lods   eax,DWORD PTR ds:[esi]
  40f724:	jae    0x40f747
  40f726:	inc    ebx
  40f727:	jne    0x40f72e
  40f729:	sldt   WORD PTR [eax]
  40f72c:	stos   DWORD PTR es:[edi],eax
  40f72d:	sti    
  40f72e:	sub    dh,al
  40f730:	jmp    0xcb10207e
  40f735:	mov    BYTE PTR [esi-0x3a75368c],bh
  40f73b:	add    dh,BYTE PTR [ebx]
  40f73d:	jne    0x40f744
  40f73f:	por    mm7,mm0
  40f742:	cmp    BYTE PTR [ebx],ch
  40f744:	jl     0x40f77e
  40f746:	jmp    0x40f733
  40f748:	cmp    DWORD PTR [ebx+0x3f77d3fd],ebx
  40f74e:	push   es
  40f74f:	mov    ebx,DWORD PTR [ecx+ecx*4+0x37930c7b]
  40f756:	pop    es
  40f757:	push   edi
  40f758:	mov    bl,0x19
  40f75a:	mov    cl,BYTE PTR [ebp-0xc]
  40f75d:	add    BYTE PTR [ebx+0xc],0x77
  40f761:	xchg   edi,eax
  40f762:	or     bh,BYTE PTR [ebx]
  40f764:	mov    esi,0xea852337
  40f769:	ss pop ds
  40f76b:	test   DWORD PTR [esi],ecx
  40f76d:	aaa    
  40f76e:	sbb    esi,DWORD PTR [ebx]
  40f770:	in     al,dx
  40f771:	xchg   eax,edx
  40f773:	jle    0x40f72a
  40f775:	(bad)  
  40f776:	mov    dh,0x31
  40f778:	ret    
  40f779:	jbe    0x40f798
  40f77b:	sub    ebp,DWORD PTR [edi-0x127cf2cb]
  40f781:	or     BYTE PTR [ebx+0x394baec7],al
  40f787:	ret    0xdf30
  40f78a:	jmp    0x564ccc91
  40f78f:	xor    al,BYTE PTR [eax]
  40f791:	add    BYTE PTR [esi+eiz*8-0x5da5f1af],cl
  40f798:	mov    es,ebp
  40f79a:	push   0xffffffa9
  40f79c:	(bad)  
  40f79d:	mov    edi,0x8c7e60e
  40f7a2:	bound  eax,QWORD PTR [eax*2+0x45c5fb5e]
  40f7a9:	pop    es
  40f7aa:	aad    0x7b
  40f7ac:	add    BYTE PTR [edx],bh
  40f7ae:	pop    ds
  40f7af:	in     eax,dx
  40f7b0:	or     BYTE PTR [eax+0x4f],al
  40f7b3:	imul   edi,DWORD PTR [esi-0x38],0xca1dcdc0
  40f7ba:	test   eax,0x16c01562
  40f7bf:	mov    WORD PTR [ebx],cs
  40f7c1:	data16 fisubr WORD PTR [edx+0x215611cf]
  40f7c8:	push   es
  40f7c9:	cmovp  ebx,DWORD PTR [ecx-0x20]
  40f7cd:	test   BYTE PTR [esi+ebp*1],bl
  40f7d0:	push   edx
  40f7d1:	gs mov esp,0xc601ce50
  40f7d7:	and    BYTE PTR [edi+0x54],al
  40f7da:	pop    esi
  40f7db:	mov    ebp,0x68908ab4
  40f7e0:	mov    eax,DWORD PTR [ecx+eiz*8-0x1b]
  40f7e4:	ds jle 0x40f7b7
  40f7e7:	jecxz  0x40f834
  40f7e9:	(bad)  
  40f7ea:	pushf  
  40f7eb:	and    esi,DWORD PTR [edx-0x4fa3fe74]
  40f7f1:	push   esi
  40f7f2:	lods   eax,DWORD PTR ds:[esi]
  40f7f3:	xchg   ecx,eax
  40f7f4:	lock inc DWORD PTR [eax]
  40f7f7:	add    BYTE PTR [edx+0x50bc0d5],bh
  40f7fd:	push   eax
  40f7fe:	iret   
  40f7ff:	sti    
  40f800:	push   es
  40f801:	jo     0x40f85c
  40f803:	adc    al,0x45
  40f805:	xor    eax,edx
  40f807:	jmp    edi
  40f809:	or     DWORD PTR [eax+0x1ebd5de1],esi
  40f80f:	pop    edx
  40f810:	sub    BYTE PTR [ebx+0x1095ad0],cl
  40f816:	ss pop ebx
  40f818:	loope  0x40f88b
  40f81a:	fcmovb st,st(3)
  40f81c:	jb     0x40f85f
  40f81e:	test   eax,0x5fe79c16
  40f823:	pop    es
  40f824:	sbb    al,BYTE PTR [ecx-0x57]
  40f827:	mov    dh,0x4f
  40f829:	lods   eax,DWORD PTR ds:[esi]
  40f82a:	int3   
  40f82b:	or     ebx,DWORD PTR [eax+0x4e]
  40f82e:	sbb    eax,0x95415601
  40f833:	mov    esi,0x6c36b617
  40f838:	retf   
  40f839:	imul   eax
  40f83b:	add    esp,DWORD PTR [eax-0x3b]
  40f83e:	les    eax,FWORD PTR [edi]
  40f840:	test   DWORD PTR [edx-0xbdc4de3],edi
  40f846:	pop    esp
  40f847:	neg    dl
  40f849:	or     DWORD PTR [edi],ebp
  40f84b:	mov    edi,0x86e84ed0
  40f850:	add    cl,BYTE PTR [esi-0x25]
  40f853:	or     al,0xab
  40f855:	dec    esi
  40f856:	repz aas 
  40f858:	in     al,0xc9
  40f85a:	call   0x1740f91d
  40f85f:	inc    edi
  40f860:	in     al,0x13
  40f862:	aad    0xb2
  40f864:	sub    DWORD PTR [eax-0x4c22da6a],ecx
  40f86a:	fcmovnbe st,st(4)
  40f86c:	int3   
  40f86d:	pop    es
  40f86e:	rcl    dh,cl
  40f870:	les    eax,FWORD PTR [edi]
  40f872:	mov    ebp,0xd503e8d3
  40f877:	dec    eax
  40f878:	mov    bl,0x8e
  40f87a:	scas   al,BYTE PTR es:[edi]
  40f87b:	mov    ebx,0xb5c28e9e
  40f880:	jno    0x40f89b
  40f882:	pop    eax
  40f883:	(bad)  
  40f884:	jmp    esp
  40f886:	dec    sp
  40f888:	je     0x40f86b
  40f88a:	dec    ebx
  40f88b:	dec    eax
  40f88c:	mov    dh,BYTE PTR [edi-0x2109efff]
  40f892:	sub    al,0x82
  40f894:	inc    esp
  40f895:	aad    0x58
  40f897:	push   ebp
  40f898:	(bad)  
  40f899:	push   esp
  40f89a:	jnp    0x40f822
  40f89c:	fidivr DWORD PTR [edx+ebx*8]
  40f89f:	xchg   dh,bh
  40f8a1:	xor    al,0xde
  40f8a3:	dec    esp
  40f8a4:	xor    eax,0xfff92cc1
  40f8a9:	call   0x35ce0465
  40f8ae:	push   eax
  40f8af:	or     ebp,eax
  40f8b1:	mov    eax,DWORD PTR [eax+0x4d]
  40f8b4:	(bad)  
  40f8b5:	bound  eax,QWORD PTR [edx-0x71d0a1af]
  40f8bb:	inc    edi
  40f8bc:	push   esp
  40f8bd:	jb     0x40f87c
  40f8bf:	mov    ecx,0x482
  40f8c4:	lea    ecx,[esp+edx*2+0x64]
  40f8c8:	(bad)  
  40f8c9:	std    
  40f8ca:	dec    edi
  40f8cb:	outs   dx,BYTE PTR ds:[esi]
  40f8cc:	or     al,BYTE PTR [ecx]
  40f8ce:	lea    ebp,[edx+ebp*4-0x53a88f9c]
  40f8d5:	dec    ebx
  40f8d6:	mov    bl,BYTE PTR [ecx-0x7e]
  40f8d9:	push   esi
  40f8da:	js     0x40f8bf
  40f8dc:	popf   
  40f8dd:	aad    0xfb
  40f8df:	push   ecx
  40f8e0:	add    al,0xf9
  40f8e2:	(bad)  
  40f8e3:	call   0xaccbfd61
  40f8e8:	mov    bh,BYTE PTR [edi+0x4c]
  40f8eb:	loope  0x40f93c
  40f8ed:	or     cl,BYTE PTR [ebx-0x3dbe70d1]
  40f8f3:	mov    ah,0x59
  40f8f5:	pusha  
  40f8f6:	push   eax
  40f8f7:	push   0xffffffa2
  40f8f9:	push   eax
  40f8fa:	push   DWORD PTR [esi+0xfd61d]
  40f900:	outs   dx,DWORD PTR ds:[esi]
  40f901:	enter  0x75fd,0xb8
  40f905:	or     DWORD PTR [ebx-0x4],0xffffffd4
  40f909:	leave  
  40f90a:	repz jmp FWORD PTR [ebx-0x4d7a1183]
  40f911:	das    
  40f912:	or     bh,bh
  40f914:	and    DWORD PTR [edx+0x88041e6],esi
  40f91a:	add    bl,ch
  40f91c:	je     0x40f99b
  40f91e:	inc    ebx
  40f91f:	cld    
  40f920:	out    0x43,eax
  40f922:	push   es
  40f923:	mov    DWORD PTR [ebp+0x7d],edi
  40f926:	les    ebx,FWORD PTR [esi+0x0]
  40f929:	add    BYTE PTR ds:0x2b000ac6,dh
  40f92f:	cli    
  40f930:	out    0x29,eax
  40f932:	push   eax
  40f933:	or     BYTE PTR [eax],al
  40f935:	push   0x38
  40f937:	call   0xc300:0x84116e6
  40f93e:	add    edi,DWORD PTR [edi-0xa]
  40f941:	sbb    DWORD PTR [ebx-0x4f],0x73
  40f945:	or     al,0xab
  40f947:	cmp    al,0x22
  40f949:	or     BYTE PTR [ebx-0x13ed69a5],ch
  40f94f:	add    eax,0xb181f88b
  40f954:	jl     0x40f97d
  40f956:	stos   DWORD PTR es:[edi],eax
  40f957:	cmp    al,0x22
  40f959:	or     BYTE PTR [edi-0x37],dh
  40f95c:	jmpw   0x1e9
  40f960:	add    al,ch
  40f962:	pop    ss
  40f963:	mov    esp,0xa65fffd
  40f968:	test   eax,eax
  40f96a:	and    BYTE PTR [edi+0x4e],dl
  40f96d:	mov    DWORD PTR [edx],ebp
  40f96f:	dec    esp
  40f970:	std    
  40f971:	adc    eax,0x3e5500
  40f976:	inc    ebp
  40f977:	dec    ecx
  40f978:	push   es
  40f979:	mov    al,0xd5
  40f97b:	popa   
  40f97c:	imul   eax,DWORD PTR [ecx],0x7
  40f97f:	and    DWORD PTR [eax+0x6b60d9c1],edi
  40f985:	sub    esi,DWORD PTR [ebx]
  40f987:	loopne 0x40f9e3
  40f989:	and    DWORD PTR [ecx],ebp
  40f98b:	xor    ah,al
  40f98d:	add    BYTE PTR [eax],0x0
  40f990:	popf   
  40f991:	inc    esp
  40f992:	into   
  40f993:	or     bh,bl
  40f995:	fistp  WORD PTR [ebx+0x5b]
  40f998:	add    DWORD PTR [esi-0x24],esp
  40f99b:	test   BYTE PTR [ebp+0x196a0cae],dl
  40f9a1:	sbb    esi,ebx
  40f9a3:	mov    bh,dl
  40f9a5:	fild   WORD PTR [ecx+0x1]
  40f9a8:	repz xlat BYTE PTR ds:[ebx]
  40f9aa:	add    al,0x66
  40f9ac:	dec    esp
  40f9ad:	pop    edi
  40f9ae:	add    ecx,0x144dfd7
  40f9b4:	loop   0x40f961
  40f9b6:	add    al,0x66
  40f9b8:	push   eax
  40f9b9:	mov    eax,ds:0xa106cbd0
  40f9be:	fisttp QWORD PTR [eax+0x4b8a9fd7]
  40f9c4:	stc    
  40f9c5:	pop    esp
  40f9c6:	imul   ecx,DWORD PTR [edx],0xa16625f
  40f9cc:	test   eax,0xa10d1669
  40f9d1:	gs ret 
  40f9d3:	cmp    ah,BYTE PTR [ebx]
  40f9d5:	das    
  40f9d6:	push   ebx
  40f9d7:	mov    dl,BYTE PTR [eax+edi*8]
  40f9da:	mov    edi,0x45f7d923
  40f9df:	jae    0x40f9c2
  40f9e1:	lods   eax,DWORD PTR ds:[esi]
  40f9e2:	mov    ah,0x0
  40f9e4:	scas   al,BYTE PTR es:[edi]
  40f9e5:	jmp    0x7509:0xa550bd2
  40f9ec:	(bad)  
  40f9ee:	sbb    DWORD PTR [edx],ecx
  40f9f0:	pusha  
  40f9f1:	pop    esi
  40f9f2:	mov    ecx,ecx
  40f9f4:	add    BYTE PTR [eax],al
  40f9f6:	adc    al,0xa
  40f9f8:	jo     0x40fa01
  40f9fa:	xchg   edi,eax
  40f9fb:	add    eax,0x5d4fb0e9
  40fa00:	imul   ebp,DWORD PTR [eax+0x6],0xa58ab6b7
  40fa07:	push   ebx
  40fa08:	scas   al,BYTE PTR es:[edi]
  40fa09:	neg    edx
  40fa0b:	mov    dl,0x74
  40fa0d:	mov    cl,0x2c
  40fa0f:	sub    bl,BYTE PTR [edi-0x67c5ee78]
  40fa15:	imul   ebx,DWORD PTR [eax-0xa],0xffffffe8
  40fa19:	add    edx,DWORD PTR [esi-0x1c]
  40fa1c:	int3   
  40fa1d:	data16 (bad) 
  40fa1f:	sbb    DWORD PTR cs:[edi-0x43],edx
  40fa23:	stos   DWORD PTR es:[edi],eax
  40fa24:	clc    
  40fa25:	int    0xb4
  40fa27:	jle    0x40fa57
  40fa29:	or     dh,dl
  40fa2b:	inc    edx
  40fa2c:	outs   dx,DWORD PTR ds:[esi]
  40fa2d:	sar    BYTE PTR [esi+0x7e],0x2e
  40fa31:	hlt    
  40fa32:	scas   eax,DWORD PTR es:[edi]
  40fa33:	inc    edx
  40fa34:	pop    ebx
  40fa35:	enter  0x8022,0x2b
  40fa39:	xor    cl,BYTE PTR fs:[ebx-0x7abca963]
  40fa40:	test   al,0xd0
  40fa42:	enter  0xd1c2,0xd5
  40fa46:	loop   0x40fa1f
  40fa48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa49:	mov    WORD PTR [eax-0x354a900b],cs
  40fa4f:	pop    esi
  40fa50:	daa    
  40fa51:	mov    edx,DWORD PTR [ecx+0x5d3ee961]
  40fa57:	retf   
  40fa58:	cld    
  40fa59:	mov    WORD PTR [eax],es
  40fa5b:	add    BYTE PTR [eax-0x11fb670f],dl
  40fa61:	adc    al,0x1a
  40fa63:	inc    esp
  40fa64:	(bad)  
  40fa65:	dec    edx
  40fa66:	pop    edi
  40fa67:	mov    ebp,0x53ab80c6
  40fa6c:	lods   eax,DWORD PTR ds:[esi]
  40fa6d:	ret    
  40fa6e:	lock push es
  40fa70:	pop    ecx
  40fa71:	dec    esp
  40fa72:	(bad)  
  40fa73:	call   0x2074044e
  40fa78:	cdq    
  40fa79:	xchg   edx,eax
  40fa7a:	dec    esp
  40fa7b:	sbb    eax,0x72f7d659
  40fa80:	cwde   
  40fa81:	or     eax,0x3cef58a
  40fa86:	push   ds
  40fa87:	xchg   esp,eax
  40fa88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa89:	add    al,0x7e
  40fa8b:	(bad)  
  40fa8d:	mov    cs,esp
  40fa8f:	jmp    0x77ca046a
  40fa94:	sahf   
  40fa95:	sti    
  40fa96:	mov    edi,0xc8e4488e
  40fa9b:	stos   BYTE PTR es:[edi],al
  40fa9c:	out    dx,eax
  40fa9d:	out    0x0,eax
  40fa9f:	out    dx,al
  40faa0:	add    ch,BYTE PTR ds:0x4d6e8ff
  40faa6:	jle    0x40faa1
  40faa8:	mov    ds:0xdd378a31,al
  40faad:	xchg   ebx,eax
  40faae:	adc    ebp,esi
  40fab0:	dec    ebp
  40fab1:	xlat   BYTE PTR ds:[ebx]
  40fab2:	sbb    esp,DWORD PTR [ecx+0x2a]
  40fab5:	dec    eax
  40fab6:	cmc    
  40fab7:	test   al,0xdd
  40fab9:	mov    ebp,0x10969f41
  40fabe:	je     0x40fabc
  40fac0:	add    BYTE PTR [eax],al
  40fac2:	pop    ebx
  40fac3:	aam    0xbe
  40fac5:	imul   ebx,DWORD PTR [esi+0x56ea7721],0x1f741f4c
  40facf:	mov    BYTE PTR [edi-0x80],bh
  40fad2:	push   ds
  40fad3:	rol    BYTE PTR [ecx+ebp*2],0x97
  40fad7:	sub    bl,ch
  40fad9:	les    ebx,FWORD PTR [esi-0x22]
  40fadc:	(bad)  
  40fadd:	push   edx
  40fade:	add    bl,BYTE PTR [eax]
  40fae0:	mov    esi,0x1448492a
  40fae5:	aad    0xea
  40fae7:	or     BYTE PTR [eax],al
  40fae9:	arpl   WORD PTR [ecx+0x3900be17],si
  40faef:	fimul  WORD PTR [esi-0x1]
  40faf2:	or     DWORD PTR [ecx+0x12],esp
  40faf5:	inc    eax
  40faf6:	in     al,dx
  40faf7:	xchg   esp,eax
  40faf8:	inc    ebx
  40faf9:	push   DWORD PTR [edi]
  40fafb:	mov    esi,ebp
  40fafd:	mov    cl,BYTE PTR [ecx+0x68da38dd]
  40fb03:	jle    0x40faf9
  40fb05:	inc    esi
  40fb06:	ror    BYTE PTR [edx],0x74
  40fb09:	mov    edi,DWORD PTR [ebx+eiz*8]
  40fb0c:	or     BYTE PTR [ebp-0x68],dh
  40fb0f:	mov    eax,?
  40fb11:	or     eax,0x4d893e29
  40fb16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb17:	and    DWORD PTR [esi+0x10],ecx
  40fb1a:	mov    bl,0x89
  40fb1c:	jae    0x40fb1d
  40fb1e:	jae    0x40fafd
  40fb20:	mov    DWORD PTR [esi+0x70],ecx
  40fb23:	and    al,0x5c
  40fb25:	cmp    DWORD PTR [eax],eax
  40fb27:	add    BYTE PTR [ebp+0xd],ch
  40fb2a:	test   DWORD PTR [eax-0x5d],ebp
  40fb2d:	(bad)  
  40fb2f:	inc    edi
  40fb30:	xchg   ebx,eax
  40fb31:	xchg   esi,esi
  40fb33:	jmp    0x40fb08
  40fb35:	(bad)  
  40fb36:	clc    
  40fb37:	or     dh,BYTE PTR [ebx-0x39]
  40fb3a:	push   edi
  40fb3b:	inc    DWORD PTR [ebx+0x41fb7edd]
  40fb41:	or     eax,0xdd635085
  40fb46:	std    
  40fb47:	mov    esi,ecx
  40fb49:	fnstcw WORD PTR [ecx]
  40fb4b:	dec    esi
  40fb4c:	xor    al,0xd
  40fb4e:	add    DWORD PTR [ebx+edx*2-0x23],0xfffffffd
  40fb53:	mov    esi,edx
  40fb55:	or     DWORD PTR [eax],edi
  40fb57:	push   esp
  40fb58:	sub    eax,0x4b850f0b
  40fb5d:	(bad)  
  40fb5f:	(bad)  
  40fb60:	cmp    al,0xdd
  40fb62:	inc    ebx
  40fb63:	hlt    
  40fb64:	cmp    ebx,ebp
  40fb66:	inc    ebx
  40fb67:	clc    
  40fb68:	aad    0x72
  40fb6a:	push   ebx
  40fb6b:	inc    esp
  40fb6c:	jmp    0xaf30b919
  40fb71:	js     0x40fb7d
  40fb73:	addps  xmm6,XMMWORD PTR [esi]
  40fb76:	push   ebx
  40fb77:	(bad)  
  40fb78:	fiadd  DWORD PTR [edx+0x42]
  40fb7b:	cmc    
  40fb7c:	sbb    edx,DWORD PTR [ebp+0x1]
  40fb7f:	mov    DWORD PTR [ebx+0x9],ecx
  40fb82:	shl    BYTE PTR [ebx-0x2],1
  40fb85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb86:	repnz push cs
  40fb88:	popa   
  40fb89:	icebp  
  40fb8a:	imul   ecx,DWORD PTR ds:0x18b20000,0x390b8a54
  40fb94:	mov    BYTE PTR [ebp-0x2c],cl
  40fb97:	mov    ebx,0x7c1503ac
  40fb9c:	aas    
  40fb9d:	jb     0x40fb79
  40fb9f:	js     0x40fba7
  40fba1:	add    al,BYTE PTR [ecx]
  40fba3:	addr16 push cs
  40fba5:	ret    
  40fba6:	or     BYTE PTR [ecx],bh
  40fba8:	jge    0x40fbef
  40fbaa:	in     eax,0x49
  40fbac:	xchg   edi,eax
  40fbad:	std    
  40fbae:	jb     0x40fc08
  40fbb0:	fstp   QWORD PTR [edi]
  40fbb2:	add    edi,DWORD PTR [esi+0x5904cfc0]
  40fbb8:	bound  edx,QWORD PTR [eax]
  40fbba:	aad    0x30
  40fbbc:	add    eax,DWORD PTR [ebp+0x29]
  40fbbf:	or     cl,cl
  40fbc1:	xlat   BYTE PTR ds:[ebx]
  40fbc2:	pop    esp
  40fbc3:	out    dx,eax
  40fbc4:	jmp    0x40fbb0
  40fbc6:	in     al,dx
  40fbc7:	mov    ebx,0x77d60bc9
  40fbcc:	jl     0x40fc12
  40fbce:	adc    DWORD PTR [ecx+ecx*8-0x7f8801f1],ebp
  40fbd5:	dec    esp
  40fbd6:	add    eax,0x2ddfc8ba
  40fbdb:	dec    edx
  40fbdc:	push   eax
  40fbdd:	(bad)  
  40fbde:	adc    ch,BYTE PTR [eax+eax*8+0x3609d6e7]
  40fbe5:	jge    0x40fb77
  40fbe7:	and    DWORD PTR [ebp+0x44],esp
  40fbea:	retf   
  40fbeb:	mov    eax,ss
  40fbed:	push   ecx
  40fbee:	repz inc esi
  40fbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf1:	push   cs
  40fbf2:	add    BYTE PTR [eax],al
  40fbf4:	imul   ebx,DWORD PTR [ecx],0xffffffbb
  40fbf7:	xor    eax,0x533e6aed
  40fbfc:	fcmovne st,st(1)
  40fbfe:	aas    
  40fbff:	jae    0x40fbd1
  40fc01:	inc    esi
  40fc02:	sub    eax,0xf7d0b2b5
  40fc07:	add    edx,ebp
  40fc09:	dec    edx
  40fc0a:	mov    bh,0x5b
  40fc0c:	xor    al,0x19
  40fc0e:	jmp    0x621d9216
  40fc13:	pusha  
  40fc14:	add    eax,0xa3889edb
  40fc19:	mov    esp,0xfa7e16ca
  40fc1e:	(bad)  
  40fc1f:	jle    0x40fc3a
  40fc21:	adc    dl,BYTE PTR [edi-0x743744a]
  40fc27:	push   edx
  40fc28:	or     DWORD PTR [esi],edx
  40fc2a:	rcr    DWORD PTR [edx],1
  40fc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc2d:	or     cl,ch
  40fc2f:	jle    0x40fbb3
  40fc31:	mov    esi,ss
  40fc33:	int3   
  40fc34:	mov    ds:0xc41ad0da,eax
  40fc39:	or     ecx,ebp
  40fc3b:	pop    esi
  40fc3c:	mov    eax,ds:0xbcfc2b92
  40fc41:	or     ebx,DWORD PTR [eax+ebx*8+0x4e]
  40fc45:	loop   0x40fbd7
  40fc47:	or     al,0x97
  40fc49:	or     ecx,ebp
  40fc4b:	mov    BYTE PTR [edx-0x44],bh
  40fc4e:	retf   
  40fc4f:	jle    0x40fbfa
  40fc51:	inc    ebp
  40fc52:	fbld   TBYTE PTR es:[eax]
  40fc55:	or     dh,BYTE PTR [edx+0x49]
  40fc58:	add    BYTE PTR [eax],al
  40fc5a:	adc    eax,0x32b3ea29
  40fc5f:	cmp    bh,bh
  40fc61:	fcom   st(6)
  40fc63:	or     DWORD PTR [ebx+0x74635d91],ecx
  40fc69:	mov    eax,ds:0x52574020
  40fc6e:	dec    BYTE PTR [esi+edi*8+0x1e90d8dd]
  40fc75:	bound  ebx,QWORD PTR [esp+eiz*8+0x1298305a]
  40fc7c:	add    BYTE PTR [ebx+ebx*2-0x79ba7dce],dl
  40fc83:	fcom   DWORD PTR [ebp-0x6a]
  40fc86:	jecxz  0x40fce8
  40fc88:	addr16 gs pushf 
  40fc8b:	add    eax,0x2d857000
  40fc90:	(bad)  
  40fc91:	cld    
  40fc92:	jp     0x40fcaf
  40fc94:	inc    eax
  40fc95:	jmp    0xc314cac3
  40fc9a:	sbb    edx,DWORD PTR [esp+eax*4]
  40fc9d:	jbe    0x40fc70
  40fc9f:	or     DWORD PTR [eax],eax
  40fca1:	or     esi,0x46e93fbe
  40fca7:	inc    esp
  40fca8:	adc    al,0x91
  40fcaa:	mov    eax,DWORD PTR ds:0x4992a600
  40fcb0:	add    cl,ch
  40fcb2:	(bad)  
  40fcb3:	or     DWORD PTR [ecx+0x5c91a92c],ecx
  40fcb9:	mov    ch,0xde
  40fcbb:	in     eax,0xcf
  40fcbd:	add    al,BYTE PTR [eax]
  40fcbf:	add    BYTE PTR [eax],dl
  40fcc1:	adc    al,0x84
  40fcc3:	and    edx,esi
  40fcc5:	or     DWORD PTR [eax],eax
  40fcc7:	sbb    cl,dl
  40fcc9:	aad    0xc3
  40fccb:	cmp    dl,al
  40fccd:	aad    0xd7
  40fccf:	cmp    BYTE PTR [esp+edx*2-0x712b567c],ah
  40fcd6:	ss call 0x9406b2
  40fcdc:	mov    edi,0x2098667e
  40fce1:	dec    ecx
  40fce2:	(bad)  
  40fce3:	(bad)  
  40fce4:	xor    ecx,ecx
  40fce6:	push   cs
  40fce7:	inc    eax
  40fce8:	cld    
  40fce9:	(bad)
  40fcec:	stc    
  40fced:	test   al,0x39
  40fcef:	sti    
  40fcf0:	jmp    0x40fc7e
  40fcf2:	inc    BYTE PTR [eax]
  40fcf4:	cld    
  40fcf5:	or     BYTE PTR [edi-0x1],dl
  40fcf8:	loope  0x40fcde
  40fcfa:	push   cs
  40fcfb:	inc    eax
  40fcfc:	in     al,dx
  40fcfd:	mov    edi,0xced7f843
  40fd02:	or     eax,0xe2384
  40fd07:	add    BYTE PTR [eax+ecx*2+0x7dac007e],dl
  40fd0e:	push   ecx
  40fd0f:	push   0xffffffae
  40fd11:	pusha  
  40fd12:	(bad)  
  40fd13:	jle    0x40fcd1
  40fd15:	or     BYTE PTR [ebx-0x1],dl
  40fd18:	mov    eax,ds:0xac401198
  40fd1d:	mov    edi,0xcd97f443
  40fd22:	jb     0x40fd44
  40fd24:	add    BYTE PTR [eax],al
  40fd26:	stc    
  40fd27:	test   BYTE PTR [esi+0x13d96c51],ch
  40fd2d:	test   BYTE PTR [eax+0x2c84fe48],al
  40fd33:	pop    esp
  40fd34:	or     al,0x8d
  40fd36:	ror    ecx,0x4e
  40fd39:	jmp    DWORD PTR [ecx-0x78]
  40fd3c:	adc    al,BYTE PTR [eax+0x6c]
  40fd3f:	mov    edi,DWORD PTR [esi+0x5bbf6f75]
  40fd45:	hlt    
  40fd46:	mov    bh,0x1b
  40fd48:	mov    eax,0x6a0dfc10
  40fd4d:	or     BYTE PTR [ebx],al
  40fd4f:	fcmovnbe st,st(4)
  40fd51:	push   0x46
  40fd53:	add    DWORD PTR [edi+0x4fa2d545],0xd59385d5
  40fd5d:	out    dx,eax
  40fd5e:	dec    esp
  40fd5f:	cmc    
  40fd60:	addr16 push esi
  40fd62:	sbb    bl,BYTE PTR [ebp+0x5a]
  40fd65:	setne  BYTE PTR [edx]
  40fd68:	jns    0x40fdae
  40fd6a:	stc    
  40fd6b:	jbe    0x40fdb0
  40fd6d:	jae    0x40fdee
  40fd6f:	mov    bh,0x15
  40fd71:	loopne 0x40fd58
  40fd73:	jb     0x40fd77
  40fd75:	push   eax
  40fd76:	repnz fs dec edx
  40fd79:	inc    BYTE PTR [ebx]
  40fd7b:	test   eax,0xef9edbc5
  40fd80:	(bad)  
  40fd81:	pop    ebp
  40fd82:	ins    DWORD PTR es:[edi],dx
  40fd83:	adc    al,BYTE PTR [esp+ecx*8]
  40fd86:	adc    eax,0x56b3a0
  40fd8b:	add    dl,cl
  40fd8d:	jle    0x40fdf5
  40fd8f:	dec    BYTE PTR [eax+0x21]
  40fd92:	mov    ah,0x52
  40fd94:	mov    edx,0xc8fe4a9e
  40fd99:	clc    
  40fd9a:	repnz aas 
  40fd9c:	aad    0xad
  40fd9e:	inc    edx
  40fd9f:	jae    0x40fd7d
  40fda1:	dec    ecx
  40fda2:	lods   eax,DWORD PTR ds:[esi]
  40fda3:	repz and DWORD PTR [ecx+0x7b],edx
  40fda7:	dec    esp
  40fda8:	mov    eax,ds:0x5eb3bd48
  40fdad:	outs   dx,BYTE PTR ds:[esi]
  40fdae:	xor    bh,dh
  40fdb0:	or     BYTE PTR [ebp-0x2],ah
  40fdb3:	inc    edi
  40fdb4:	mov    ds,WORD PTR [eax]
  40fdb6:	leave  
  40fdb7:	mov    bh,0xe2
  40fdb9:	call   0x54454d00
  40fdbe:	fdiv   st,st(7)
  40fdc0:	bound  esp,QWORD PTR [esi+0x7a]
  40fdc3:	adc    edx,DWORD PTR ds:0xdd744d31
  40fdc9:	lods   eax,DWORD PTR ds:[esi]
  40fdca:	rcl    bl,1
  40fdcc:	dec    edx
  40fdcd:	(bad)  
  40fdce:	pop    edi
  40fdcf:	out    0x34,eax
  40fdd1:	or     dh,BYTE PTR [edi+0x4]
  40fdd4:	aad    0x8e
  40fdd6:	sbb    esp,DWORD PTR [ebp+ebx*2-0x33]
  40fdda:	or     BYTE PTR [edi-0x5f],0x65
  40fdde:	(bad)  
  40fddf:	fldcw  WORD PTR [edx]
  40fde1:	inc    ebx
  40fde2:	sahf   
  40fde3:	dec    edi
  40fde4:	mov    eax,ds:0x16f97d35
  40fde9:	sbb    ch,BYTE PTR [ecx]
  40fdeb:	add    al,0xa
  40fded:	mov    ebp,0x4f70
  40fdf2:	jmp    0xfb04f65c
  40fdf7:	fistp  DWORD PTR [ebp-0x7]
  40fdfa:	push   cs
  40fdfb:	sbb    ch,BYTE PTR [ecx+0x34e4ac03]
  40fe01:	fadd   st,st(2)
  40fe03:	mov    cl,0x20
  40fe05:	(bad)  
  40fe06:	call   0xdb42:0xa6d93e09
  40fe0d:	fwait
  40fe0e:	in     al,0xc9
  40fe10:	call   0xebfe941f
  40fe15:	dec    esi
  40fe16:	inc    ecx
  40fe17:	bound  ebx,QWORD PTR ds:0x3cbcb334
  40fe1d:	dec    edi
  40fe1e:	rol    DWORD PTR [ebp-0x705d3c06],0xab
  40fe25:	pop    ebx
  40fe26:	sti    
  40fe27:	jecxz  0x40fdca
  40fe29:	cmp    al,0x94
  40fe2b:	or     eax,0x669c12e9
  40fe30:	or     BYTE PTR [eax-0x73d7f5e9],dl
  40fe36:	call   0xf88f:0xb042985
  40fe3d:	jp     0x40fea3
  40fe3f:	dec    eax
  40fe40:	mov    esi,0x4f37a7ed
  40fe45:	push   esi
  40fe46:	icebp  
  40fe47:	nop
  40fe48:	in     eax,0xdf
  40fe4a:	xlat   BYTE PTR ds:[ebx]
  40fe4b:	cmp    bh,bh
  40fe4d:	pop    edi
  40fe4e:	es push es
  40fe50:	sub    DWORD PTR [ecx-0x7ac33726],0x0
  40fe57:	add    BYTE PTR [eax-0x47e30039],dl
  40fe5d:	xchg   ecx,eax
  40fe5e:	or     al,0xb5
  40fe60:	pop    edx
  40fe61:	(bad)  
  40fe62:	jmp    FWORD PTR [esi]
  40fe64:	xchg   esi,eax
  40fe65:	imul   ebx,ebx,0x3b421745
  40fe6b:	stc    
  40fe6c:	aam    0x9
  40fe6e:	add    dh,ah
  40fe70:	mov    dh,BYTE PTR [edx-0x1]
  40fe73:	call   0x1a97da4e
  40fe78:	mov    DWORD PTR [esi+edi*8-0x753c5ca2],0x8d066f23
  40fe83:	inc    ebp
  40fe84:	push   edx
  40fe85:	(bad)  
  40fe86:	(bad)  
  40fe87:	stc    
  40fe88:	rcl    BYTE PTR [edi+ebx*8+0x2141977d],cl
  40fe8f:	das    
  40fe90:	out    0x5,eax
  40fe92:	lea    ecx,[ecx+0x52]
  40fe95:	int3   
  40fe96:	push   DWORD PTR [ecx+0xe]
  40fe99:	pop    edx
  40fe9a:	out    0x6a,eax
  40fe9c:	cmp    ecx,DWORD PTR [edx]
  40fe9e:	xor    ebp,ebp
  40fea0:	inc    ebp
  40fea1:	imul   esi,DWORD PTR [edi+0x3fcd6aa],0x424ca274
  40feab:	jmp    0x64449144
  40feb0:	test   BYTE PTR [edx+eax*2-0x1dbca617],0xe9
  40feb8:	(bad)  
  40feb9:	or     DWORD PTR [ebx+ebp*4+0x0],edi
  40febd:	add    BYTE PTR [esi+0x43],dl
  40fec0:	outs   dx,BYTE PTR ds:[esi]
  40fec1:	jmp    0x40fe99
  40fec3:	or     DWORD PTR [ebp+0x1a],edi
  40fec6:	loop   0x40fedc
  40fec8:	xchg   ebp,eax
  40fec9:	add    BYTE PTR [edx+ebx*4+0xcc70041],cl
  40fed0:	xor    eax,DWORD PTR [ecx+0x38]
  40fed3:	jmp    0x83f6:0xc22d33c5
  40feda:	dec    ebx
  40fedb:	or     eax,0x9d913c8b
  40fee0:	mov    dh,0x43
  40fee2:	cmp    al,0x1a
  40fee4:	mov    ecx,0xfdcf5074
  40fee9:	rol    DWORD PTR [ebx+ebx*1-0x8],1
  40feed:	mov    DWORD PTR ds:0x7d04bf8a,edx
  40fef3:	aam    0x9a
  40fef5:	(bad)  
  40fef6:	scas   eax,DWORD PTR es:[edi]
  40fef7:	add    eax,0x4087d47c
  40fefc:	call   0x40e0:0xa10d3fc6
  40ff03:	dec    ebx
  40ff04:	(bad)  
  40ff05:	xor    ch,BYTE PTR [ebp-0x52cc3a16]
  40ff0b:	ret    0xd1c6
  40ff0e:	and    al,0x8b
  40ff10:	fild   WORD PTR [ecx]
  40ff12:	iret   
  40ff13:	or     BYTE PTR [ebp-0x1b4bb58],cl
  40ff19:	pop    esi
  40ff1a:	lahf   
  40ff1b:	pop    es
  40ff1c:	adc    bl,al
  40ff1e:	jg     0x40ff2c
  40ff20:	pop    esi
  40ff21:	mov    ds:0xc8200000,eax
  40ff26:	inc    ecx
  40ff27:	add    BYTE PTR [edi-0x34],bh
  40ff2a:	mov    DWORD PTR [ecx+ebp*1],ecx
  40ff2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff2e:	mov    edx,0xa14c7c43
  40ff33:	fadd   st(0),st
  40ff35:	dec    edx
  40ff36:	dec    BYTE PTR [edx+0xbe6ccad]
  40ff3c:	(bad)  
  40ff3e:	mov    ecx,eax
  40ff40:	fldenv [eax+0x57d53a56]
  40ff46:	inc    ecx
  40ff47:	(bad)  
  40ff49:	and    edi,DWORD PTR [edx+ecx*4]
  40ff4c:	xchg   esp,eax
  40ff4d:	or     eax,0x7f52de80
  40ff52:	inc    ecx
  40ff53:	(bad)  
  40ff55:	inc    ebx
  40ff56:	cmp    cl,BYTE PTR [edx+0x115a7114]
  40ff5c:	push   es
  40ff5d:	jb     0x40ff9e
  40ff5f:	push   esp
  40ff60:	pop    esi
  40ff61:	mov    ?,WORD PTR [ecx+0x44d2bd50]
  40ff67:	inc    edx
  40ff68:	aad    0x8f
  40ff6a:	cmc    
  40ff6b:	jecxz  0x40ff34
  40ff6d:	repnz add ecx,DWORD PTR [ebp-0x14d7568]
  40ff74:	loopne 0x40ff20
  40ff76:	lock aas 
  40ff78:	aad    0xa5
  40ff7a:	inc    edx
  40ff7b:	je     0x40ff4a
  40ff7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7e:	cmc    
  40ff7f:	add    edi,0x72
  40ff82:	add    ch,bl
  40ff84:	(bad)  
  40ff85:	stos   DWORD PTR es:[edi],eax
  40ff86:	(bad)
  40ff89:	add    ch,ch
  40ff8b:	mov    BYTE PTR [esi+edi*8-0x26],cl
  40ff8f:	rol    DWORD PTR [ecx],0xc9
  40ff92:	xchg   esi,eax
  40ff93:	pop    ecx
  40ff94:	mov    ds:0x4b3116c5,al
  40ff99:	adc    al,0x91
  40ff9b:	arpl   dx,ax
  40ff9d:	call   DWORD PTR [edi-0x6427f24f]
  40ffa3:	je     0x40ffa7
  40ffa5:	add    BYTE PTR [esi],al
  40ffa7:	lods   al,BYTE PTR ds:[esi]
  40ffa8:	in     eax,dx
  40ffa9:	fcmovnb st,st(7)
  40ffab:	jo     0x40ffaf
  40ffad:	push   esi
  40ffae:	add    bh,BYTE PTR [ebp+ecx*1+0x270e7d8]
  40ffb5:	jne    0x40ff72
  40ffb7:	div    dl
  40ffb9:	(bad)  
  40ffba:	push   ss
  40ffbb:	xor    DWORD PTR [esi+edi*8+0x9690aa2],esi
  40ffc2:	lea    ecx,[eax+0x29]
  40ffc5:	add    al,0xd5
  40ffc7:	mov    ah,0xf2
  40ffc9:	pop    ebx
  40ffca:	inc    esi
  40ffcb:	aas    
  40ffcc:	int    0x4b
  40ffce:	push   esi
  40ffcf:	dec    edx
  40ffd0:	cmp    al,0xf5
  40ffd2:	sbb    eax,DWORD PTR ds:0x997429d
  40ffd8:	lds    esp,FWORD PTR [edi+0x2]
  40ffdb:	or     ah,BYTE PTR [edi+0x29481d01]
  40ffe1:	add    al,0xd4
  40ffe3:	xlat   BYTE PTR ds:[ebx]
  40ffe4:	popf   
  40ffe5:	aaa    
  40ffe6:	push   0x22c7ae6a
  40ffeb:	aad    0x8d
  40ffed:	xor    eax,DWORD PTR [eax]
  40ffef:	add    BYTE PTR [edx],dh
  40fff1:	ret    
  40fff2:	xchg   BYTE PTR [ebx+0x13],cl
  40fff5:	fdiv   DWORD PTR [ecx+0x4c]
  40fff8:	or     ebx,DWORD PTR [ebx+0x61]
  40fffb:	inc    ebx
  40fffc:	mov    ds:0xbf4711df,eax
  410001:	lds    ecx,FWORD PTR [eax+eax*1]
  410004:	imul   ebx,DWORD PTR [edi],0x12
  410007:	shl    BYTE PTR [esi+0x4fc3bf05],0x3a
  41000e:	sar    edi,cl
  410010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410011:	dec    ecx
  410012:	push   ecx
  410013:	sti    
  410014:	mov    edx,0xcb4b3d90
  410019:	cli    
  41001a:	sbb    dl,BYTE PTR [ebx-0x38]
  41001d:	xchg   edx,eax
  41001e:	sub    al,BYTE PTR [edi]
  410020:	adc    esi,esp
  410022:	lock test eax,0xb1e90594
  410028:	out    0x37,eax
  41002a:	iret   
  41002b:	iret   
  41002c:	test   BYTE PTR ds:0xf022397,0x3f
  410033:	enter  0x15b6,0x96
  410037:	mov    ecx,DWORD PTR [ebx-0x2916fff7]
  41003d:	xor    DWORD PTR [esi-0x75bff012],edi
  410043:	xor    eax,0xe5880db5
  410048:	ins    BYTE PTR es:[edi],dx
  410049:	les    edi,FWORD PTR [edx]
  41004b:	pop    ebp
  41004c:	mov    ch,0x19
  41004e:	jb     0x410016
  410050:	das    
  410051:	fadd   st(1),st
  410053:	cmc    
  410054:	add    BYTE PTR [eax],al
  410056:	(bad)  
  410057:	aam    0x8a
  410059:	int    0x53
  41005b:	xor    dl,BYTE PTR [ebx]
  41005d:	pop    ds
  41005e:	mov    ?,WORD PTR [ebp+0x3fadc10f]
  410064:	(bad)  
  410065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410066:	mov    bl,0x2e
  410068:	mov    BYTE PTR [ecx+ebx*4],dl
  41006b:	es xor al,0x96
  41006e:	(bad)  
  41006f:	aas    
  410070:	test   al,0xe9
  410072:	ror    DWORD PTR [ecx],1
  410074:	add    ch,bh
  410076:	push   es
  410077:	inc    edi
  410078:	inc    esp
  410079:	lea    ebp,[esi-0x46]
  41007c:	aas    
  41007d:	jmp    0x2e30c619
  410082:	or     bh,dh
  410084:	call   DWORD PTR [ecx-0x14]
  410087:	inc    esi
  410088:	inc    esp
  410089:	dec    ebp
  41008a:	push   edx
  41008b:	mov    edx,0xc597e93f
  410090:	out    dx,eax
  410091:	or     DWORD PTR [edx],0xeb99fffe
  410097:	pusha  
  410098:	mov    BYTE PTR [edx+edx*1-0x2c26a36e],bl
  41009f:	cmp    BYTE PTR [esi],cl
  4100a1:	stos   DWORD PTR es:[di],eax
  4100a3:	or     al,BYTE PTR [eax]
  4100a5:	jmp    0x6a48c6dd
  4100aa:	ss or  eax,0xd412ac89
  4100b0:	or     BYTE PTR [esi+eiz*4-0x55ff8af5],0xe1
  4100b8:	call   0x8b4101bb
  4100bd:	shl    DWORD PTR [edi+0x96d00],cl
  4100c3:	je     0x410061
  4100c5:	enter  0xec43,0x44
  4100c9:	pop    edx
  4100ca:	add    BYTE PTR ds:[ebx],dh
  4100cd:	jge    0x4100bd
  4100cf:	mov    esp,0xeafe4600
  4100d4:	jp     0x4100a0
  4100d6:	inc    ebx
  4100d7:	in     al,dx
  4100d8:	pop    eax
  4100d9:	pop    edx
  4100da:	add    BYTE PTR ds:[ebx+0x7d],dh
  4100de:	out    dx,al
  4100df:	test   al,0x0
  4100e1:	inc    esi
  4100e2:	inc    BYTE PTR [edx-0x7d01ca6f]
  4100e8:	stc    
  4100e9:	fsin   
  4100eb:	jae    0x410107
  4100ed:	mov    esi,0xd1f12bc1
  4100f2:	cmp    eax,0xe8225b2d
  4100f8:	test   al,0xcf
  4100fa:	std    
  4100fb:	inc    DWORD PTR [edi-0x12fe4903]
  410101:	or     BYTE PTR [eax],al
  410103:	and    esi,DWORD PTR [edi+ecx*1]
  410106:	enter  0xee75,0xbd
  41010a:	dec    ebx
  41010b:	or     al,0x6
  41010d:	jmp    0x9b66769
  410112:	pop    ecx
  410113:	mov    DWORD PTR [ecx],ebp
  410115:	(bad)
  410118:	mov    esp,0x71f60008
  41011d:	inc    eax
  41011e:	push   ds
  41011f:	je     0x410121
  410121:	add    BYTE PTR [edi-0x4d8a2645],bh
  410127:	fiadd  DWORD PTR [ebx+0x8]
  41012a:	cmp    al,0x5a
  41012c:	daa    
  41012d:	call   0x3ed3a6
  410132:	aad    0x88
  410134:	std    
  410135:	xor    al,BYTE PTR [edi+0x58f04f79]
  41013b:	and    bh,cl
  41013d:	sbb    BYTE PTR [edi],ah
  41013f:	cdq    
  410140:	stc    
  410141:	push   edi
  410142:	ins    DWORD PTR es:[edi],dx
  410143:	lock dec ecx
  410145:	(bad)  
  410146:	jp     0x4100ef
  410148:	mov    dh,0xb
  41014a:	loop   0x4100e8
  41014c:	inc    edx
  41014d:	gs push esi
  41014f:	jb     0x410163
  410151:	dec    sp
  410153:	cs test eax,0xbda7f6ea
  410159:	divps  xmm7,xmm6
  41015c:	jle    0x410149
  41015e:	pop    esi
  41015f:	in     eax,0xf7
  410161:	mov    WORD PTR [ecx],es
  410163:	sbb    edx,DWORD PTR ds:0x9a6c54c0
  410169:	jae    0x410100
  41016b:	xor    dh,bh
  41016d:	xchg   esp,eax
  41016e:	adc    eax,0x56480418
  410173:	xchg   edx,eax
  410174:	clc    
  410175:	adc    BYTE PTR ds:0x138b5a25,0x83
  41017c:	inc    edi
  41017d:	cmc    
  41017e:	nop
  41017f:	cmp    al,BYTE PTR [ecx]
  410181:	data16 shl ah,cl
  410184:	(bad)  
  410185:	das    
  410186:	add    BYTE PTR [eax],al
  410188:	jae    0x410133
  41018a:	push   DWORD PTR [ecx+edi*4-0x24]
  41018e:	mov    ebp,0xf756d707
  410193:	test   dh,bh
  410195:	pop    ebp
  410196:	sti    
  410197:	mov    dl,BYTE PTR [eax+0x5182e05e]
  41019d:	imul   ecx,DWORD PTR [eax+0x1f],0x44502c41
  4101a4:	int    0x28
  4101a6:	into   
  4101a7:	adc    BYTE PTR [ebp-0x4d01b7cf],ch
  4101ad:	or     dl,BYTE PTR [ecx+0x2]
  4101b0:	and    DWORD PTR [edx],edx
  4101b2:	popa   
  4101b3:	arpl   WORD PTR [ebx-0x2a1e16f6],sp
  4101b9:	add    ah,BYTE PTR [edx-0x32]
  4101bc:	mov    al,bh
  4101be:	add    eax,0x1efedabe
  4101c3:	clc    
  4101c4:	push   esp
  4101c5:	cmp    dh,dh
  4101c7:	inc    edi
  4101c8:	jnp    0x4101a5
  4101ca:	idiv   BYTE PTR [ebp-0x2fbde626]
  4101d0:	int    0x84
  4101d2:	(bad)  
  4101d3:	ror    cl,1
  4101d5:	mov    gs,WORD PTR [ebx]
  4101d7:	clc    
  4101d8:	dec    ecx
  4101d9:	into   
  4101da:	pop    eax
  4101db:	inc    esi
  4101dc:	mov    eax,0xc023ff86
  4101e1:	push   cs
  4101e2:	push   0x5d
  4101e4:	aam    0xcb
  4101e6:	cmp    edx,DWORD PTR [eax+0x2f]
  4101e9:	pop    es
  4101ea:	(bad)  
  4101ec:	add    BYTE PTR [eax],al
  4101ee:	fdivrp st(6),st
  4101f0:	scas   eax,DWORD PTR es:[edi]
  4101f1:	dec    esi
  4101f2:	xchg   ecx,eax
  4101f3:	adc    edi,esp
  4101f5:	fisttp QWORD PTR [ebp+0xe]
  4101f8:	sbb    eax,edx
  4101fa:	(bad)  
  4101fb:	or     dl,BYTE PTR [esi-0x4]
  4101fe:	push   edi
  4101ff:	inc    ecx
  410200:	pop    es
  410201:	rcr    bh,cl
  410203:	xchg   BYTE PTR [edi-0x36],bh
  410206:	mov    eax,DWORD PTR [ebx]
  410208:	push   0x45
  41020a:	sbb    ah,BYTE PTR [edi+ebx*2-0x39bba004]
  410211:	cmp    al,0x14
  410213:	push   cs
  410214:	jmp    0x2d7a51c6
  410219:	(bad)  
  41021a:	push   ss
  41021b:	mov    dh,0xa8
  41021d:	add    edi,DWORD PTR [ebp-0x2afaf029]
  410223:	xor    esp,DWORD PTR [edi+ebx*1-0x42fff733]
  41022a:	mov    eax,0xafbde7d4
  41022f:	cmp    bh,dh
  410231:	jb     0x41021e
  410233:	fadd   st(1),st
  410235:	in     eax,0xd6
  410237:	aam    0x8a
  410239:	add    eax,0xe80b2e50
  41023e:	(bad)  
  41023f:	or     DWORD PTR [ebx-0x61],edx
  410242:	cmp    ecx,DWORD PTR [edi-0x10e59509]
  410248:	push   cs
  410249:	imul   ebp,ebx,0x3a
  41024c:	(bad)  
  41024d:	jmp    0xecd03dab
  410252:	add    BYTE PTR [eax],al
  410254:	(bad)  
  410255:	or     DWORD PTR [edi],ecx
  410257:	outs   dx,BYTE PTR ds:[esi]
  410258:	fdivr  QWORD PTR [edx]
  41025a:	(bad)  
  41025b:	jmp    0x6448e03f
  410260:	push   DWORD PTR [esi+0x75bf60c]
  410266:	add    ecx,0xffffffd4
  410269:	mov    ch,0x4
  41026b:	push   0xffffff8e
  41026d:	adc    esi,DWORD PTR [ebp+0x37]
  410270:	repnz test edi,esi
  410273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410274:	xchg   ebx,eax
  410275:	cmp    eax,DWORD PTR [ebx]
  410277:	jmp    0x96c60c52
  41027c:	or     cl,BYTE PTR [edx]
  41027e:	mov    edx,DWORD PTR [ecx*1+0x5574d68f]
  410285:	xor    bh,ch
  410287:	jle    0x410224
  410289:	and    dh,BYTE PTR [ebx-0x20]
  41028c:	(bad)  
  41028d:	or     DWORD PTR [ebx+0x37b9ed24],ecx
  410293:	jmp    0x974fccb2
  410298:	push   ss
  410299:	or     BYTE PTR [ebp-0x3800555a],cl
  41029f:	fist   DWORD PTR [ebp-0x43ff384f]
  4102a5:	or     eax,0x32e8e800
  4102aa:	(bad)  
  4102ab:	push   DWORD PTR [edi]
  4102ad:	fld    QWORD PTR [ebx-0x19c3970a]
  4102b3:	jbe    0x410239
  4102b5:	push   cs
  4102b6:	add    BYTE PTR [ebx],dh
  4102b8:	add    BYTE PTR [eax],al
  4102ba:	in     al,dx
  4102bb:	test   DWORD PTR [esp+eax*8],0x65fe4d38
  4102c2:	cmc    
  4102c3:	jbe    0x41030b
  4102c5:	jmp    0x410345
  4102c7:	sbb    al,0xf6
  4102c9:	test   DWORD PTR [edx-0x7ca8e5b8],ecx
  4102cf:	dec    ecx
  4102d0:	or     ah,BYTE PTR [esi-0xb]
  4102d3:	dec    esi
  4102d4:	adc    ch,al
  4102d6:	retf   0xfe32
  4102d9:	jmp    ebp
  4102db:	ja     0x4102eb
  4102dd:	test   DWORD PTR [ecx+ecx*2],ebp
  4102e0:	jnp    0x8b405620
  4102e6:	or     bh,0xe
  4102e9:	xor    ebp,DWORD PTR [edi+ebp*2+0x5c]
  4102ed:	pop    ebx
  4102ee:	jne    0x4102bc
  4102f0:	push   es
  4102f1:	add    BYTE PTR [edi-0x3e9eff0],dh
  4102f7:	or     eax,0x17c8db85
  4102fc:	push   0xd2c80
  410301:	(bad)  
  410302:	ret    0x6875
  410305:	add    bh,ch
  410307:	into   
  410308:	adc    ebx,DWORD PTR [eax]
  41030a:	sub    cl,BYTE PTR [ebp-0x2]
  41030d:	mov    ch,BYTE PTR [ecx+0x10c48135]
  410313:	aad    0x1b
  410315:	ins    BYTE PTR es:[edi],dx
  410316:	cld    
  410317:	or     al,0x50
  410319:	dec    DWORD PTR [ecx]
  41031b:	xor    eax,0xff51
  410320:	aad    0xf7
  410322:	add    bl,0xe1
  410325:	dec    esp
  410326:	push   ss
  410327:	inc    DWORD PTR [eax+0x3f]
  41032a:	jne    0x410371
  41032c:	jmp    0x4102c0
  41032e:	inc    ebx
  41032f:	(bad)  
  410330:	push   esi
  410331:	out    0xf7,al
  410333:	mov    bl,BYTE PTR [ebx+0x528ccb]
  410339:	jns    0x4102e6
  41033b:	mov    ah,BYTE PTR [ebp+0x4e0fce17]
  410341:	sbb    DWORD PTR [ebp+ebx*2-0x21],ebx
  410345:	and    al,BYTE PTR [edx]
  410347:	mov    edx,DWORD PTR [edx]
  410349:	push   ebx
  41034a:	ja     0x410378
  41034c:	in     eax,0x60
  41034e:	ret    0x4dff
  410351:	push   0x6f5e65f2
  410356:	out    dx,al
  410357:	gs pop esp
  410359:	call   0x333b864d
  41035e:	add    dh,BYTE PTR [ebx]
  410360:	xchg   ebp,eax
  410361:	retf   0xff83
  410364:	push   edx
  410365:	and    bl,ah
  410367:	mov    BYTE PTR [edx-0x72a18aaa],dl
  41036d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41036e:	mov    esp,0x4512a647
  410373:	aam    0xe6
  410375:	(bad)  
  410376:	fsubr  DWORD PTR [ebx]
  410378:	mov    bl,0xb9
  41037a:	(bad)  
  41037b:	(bad)  
  41037c:	stos   DWORD PTR es:[edi],eax
  41037d:	xor    bh,BYTE PTR [edi-0x3b]
  410380:	ret    
  410381:	clc    
  410382:	inc    esp
  410383:	aam    0x0
  410385:	add    BYTE PTR [edi+0x76],bh
  410388:	fdivr  st,st(7)
  41038a:	push   edi
  41038b:	addr16 in al,dx
  41038d:	push   esi
  41038e:	add    bl,BYTE PTR [ebp-0x16]
  410391:	adc    eax,0xc37f2295
  410396:	mov    ecx,0x8e5ca607
  41039b:	or     DWORD PTR [edx],ebp
  41039d:	dec    ebp
  41039e:	xchg   esi,eax
  41039f:	in     eax,dx
  4103a0:	in     al,0x2
  4103a2:	add    DWORD PTR [edi+edx*2-0x2bbe27c4],0xffffffc3
  4103aa:	retf   0xeebb
  4103ad:	lods   eax,DWORD PTR ds:[esi]
  4103ae:	mov    edx,0xd503ef3d
  4103b3:	sub    BYTE PTR [esi],0xa5
  4103b6:	xchg   esp,eax
  4103b7:	push   cs
  4103b8:	jmp    0xccff636a
  4103bd:	sti    
  4103be:	dec    edi
  4103bf:	adc    BYTE PTR [esi-0x47c87788],dh
  4103c5:	call   FWORD PTR [ecx+0x4a]
  4103c8:	xchg   ebx,eax
  4103c9:	(bad)  
  4103ca:	push   edi
  4103cb:	inc    edi
  4103cc:	add    eax,0xeaa3d058
  4103d1:	mov    bl,0x72
  4103d3:	dec    edi
  4103d4:	mov    eax,0xf082d502
  4103d9:	jge    0x410446
  4103db:	mov    esi,0xf95f2bf8
  4103e0:	out    0x3,eax
  4103e2:	push   ecx
  4103e3:	dec    edx
  4103e4:	pop    esp
  4103e5:	or     ebx,DWORD PTR [esi+0x10]
  4103e8:	bound  edx,QWORD PTR [edx+0x0]
  4103eb:	add    BYTE PTR [ebx-0x26],cl
  4103ee:	lock xchg BYTE PTR [ebx+0x37],al
  4103f2:	xor    al,0xe
  4103f4:	push   eax
  4103f5:	aaa    
  4103f6:	cmp    al,0xa
  4103f8:	mov    ah,BYTE PTR [ecx]
  4103fa:	scas   eax,DWORD PTR es:[edi]
  4103fb:	and    al,0xd5
  4103fd:	or     DWORD PTR [edx+0xa],esi
  410400:	scas   eax,DWORD PTR es:[edi]
  410401:	or     BYTE PTR [edx+0x52],dh
  410404:	sbb    ebx,DWORD PTR [edx]
  410406:	not    DWORD PTR ss:[edx-0x28]
  41040a:	stos   BYTE PTR es:[edi],al
  41040b:	or     ch,dl
  41040d:	fdiv   QWORD PTR [ecx+0x30]
  410410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410411:	fidiv  WORD PTR [ecx+0x3c]
  410414:	push   ecx
  410415:	inc    eax
  410416:	(bad)  
  410417:	sti    
  410418:	(bad)  
  41041a:	mov    edi,0xfe8cd582
  41041f:	(bad)  
  410421:	mov    ds:0x3e2eb6ff,eax
  410426:	out    0xa9,al
  410428:	(bad)  
  410429:	mov    ds:0x579140ff,eax
  41042e:	add    cl,ch
  410430:	dec    esi
  410431:	int    0xfe
  410433:	push   edx
  410434:	loop   0x410415
  410436:	addr16 cmp al,0xfe
  410439:	idiv   bh
  41043b:	ret    0x21d6
  41043e:	nop
  41043f:	sub    ecx,ebx
  410441:	or     DWORD PTR [ebp+0x449cc629],eax
  410447:	push   ss
  410448:	pop    ecx
  410449:	mov    ch,0xfe
  41044b:	jmp    0xefcc129d
  410450:	add    BYTE PTR [eax],al
  410452:	xor    BYTE PTR [ecx],cl
  410454:	mov    ebp,DWORD PTR [edi]
  410456:	push   ss
  410457:	pop    es
  410458:	mov    ch,BYTE PTR [edi+edx*1-0x73d53728]
  41045f:	sub    ebx,0x6a
  410462:	mov    dl,0x6
  410464:	push   ebx
  410465:	sbb    bh,dl
  410467:	fdiv   QWORD PTR [edi]
  410469:	hlt    
  41046a:	dec    BYTE PTR [edx+eax*2-0x17]
  41046e:	(bad)  
  41046f:	icebp  
  410470:	mov    ebp,0xffcb8fd9
  410475:	push   ss
  410476:	xchg   esi,eax
  410477:	sbb    eax,0x3616dbd8
  41047c:	ss int3 
  41047e:	dec    BYTE PTR [edx+eax*2-0x17]
  410482:	pop    ebp
  410483:	adc    al,0xc6
  410485:	in     al,0x78
  410487:	jb     0x4104cb
  410489:	jmp    0x51455425
  41048e:	pushf  
  41048f:	retf   
  410490:	(bad)  
  410491:	push   eax
  410493:	jo     0x4104d3
  410495:	add    BYTE PTR [ebp-0x40391417],al
  41049b:	or     eax,0xc05405c6
  4104a0:	inc    ecx
  4104a1:	add    ch,ch
  4104a3:	dec    edi
  4104a4:	std    
  4104a5:	adc    eax,0x401c98
  4104aa:	xor    eax,0x7989ee2a
  4104af:	std    
  4104b0:	xchg   DWORD PTR [ebp+0x14],ebx
  4104b3:	sbb    DWORD PTR [ebx-0x1],0xb3ab0000
  4104ba:	inc    ebx
  4104bb:	push   DWORD PTR [edi]
  4104bd:	sbb    bh,BYTE PTR [eax+0x53097fc6]
  4104c3:	inc    DWORD PTR [eax-0x43ba7472]
  4104c9:	pop    eax
  4104ca:	out    0x4c,al
  4104cc:	mov    edi,0xbc84fdc7
  4104d1:	jno    0x4104dc
  4104d3:	(bad)  
  4104d4:	xor    eax,ecx
  4104d6:	jle    0x410555
  4104d8:	jnp    0x4104e8
  4104da:	jb     0x4104b8
  4104dc:	xlat   BYTE PTR ds:[ebx]
  4104dd:	push   cs
  4104de:	mov    bl,0x1
  4104e0:	or     DWORD PTR [edx-0x12],eax
  4104e3:	call   0x3e9012
  4104e8:	call   0x53cf:0x755bc183
  4104ef:	mov    ecx,DWORD PTR [eax-0x20eb1571]
  4104f5:	fst    DWORD PTR ds:[esi-0x2c]
  4104f9:	adc    al,0xe8
  4104fb:	(bad)  
  4104fc:	dec    DWORD PTR ds:0x1dba3975
  410502:	mov    DWORD PTR [ebx+0x2c],0x1415fd53
  410509:	sbb    al,0x40
  41050b:	add    ch,dl
  41050d:	pop    edx
  41050e:	sbb    eax,0x3e013e8
  410513:	jne    0x4104f8
  410515:	fs push es
  410517:	fidivr DWORD PTR [ecx]
  410519:	loopne 0x41051e
  41051b:	inc    DWORD PTR [eax]
  41051d:	add    BYTE PTR [edx],bl
  41051f:	es jp  0x4104e7
  410522:	xchg   esi,eax
  410523:	and    al,BYTE PTR [esi]
  410525:	jne    0x4104bc
  410527:	and    cl,BYTE PTR [ecx-0x3b1316e4]
  41052d:	call   FWORD PTR [eax+0x16c52a25]
  410533:	and    eax,DWORD PTR [ecx]
  410535:	push   esi
  410536:	ret    0x5e55
  410539:	adc    DWORD PTR ds:0x5c0fac23,edx
  41053f:	popf   
  410540:	mov    BYTE PTR cs:[eax],cl
  410543:	repz mov bl,BYTE PTR [ecx+ebp*4-0x46]
  410548:	fdivp  st(6),st
  41054a:	sti    
  41054b:	and    edi,DWORD PTR [eax+0x44]
  41054e:	xchg   edx,eax
  41054f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410550:	push   cs
  410551:	mov    eax,0x53025f93
  410556:	xor    BYTE PTR [esi-0x7f],0x8c
  41055a:	adc    BYTE PTR [edi],al
  41055c:	aam    0xe7
  41055e:	xor    eax,esp
  410560:	inc    eax
  410561:	(bad)  
  410562:	push   ecx
  410563:	loop   0x41051c
  410565:	sbb    eax,0xf7c5be06
  41056a:	add    eax,0x5c07b554
  41056f:	aad    0x3b
  410571:	fsub   QWORD PTR [bp+si]
  410574:	add    al,BYTE PTR [eax+0x42]
  410577:	cmc    
  410578:	aaa    
  410579:	(bad)  
  41057a:	loopne 0x41051e
  41057c:	adc    eax,0x3a9fd540
  410581:	add    BYTE PTR [eax],al
  410583:	add    BYTE PTR [ecx+0x22444059],ah
  410589:	or     DWORD PTR [ecx-0x42],ebp
  41058c:	sbb    eax,DWORD PTR [edi]
  41058e:	sbb    eax,DWORD PTR [edx-0x496a2758]
  410594:	shl    BYTE PTR [ebx+esi*8],cl
  410597:	sbb    ebp,ebx
  410599:	leave  
  41059a:	call   0x92461c23
  41059f:	add    eax,0xc6640a26
  4105a4:	(bad)  
  4105a5:	and    dl,bl
  4105a7:	and    bl,0x33
  4105aa:	(bad)  
  4105ab:	lea    edx,[edi]
  4105ad:	shr    BYTE PTR [edi],1
  4105af:	inc    ebp
  4105b0:	(bad)  
  4105b1:	or     DWORD PTR [edx-0x41],ebp
  4105b4:	test   BYTE PTR ds:0x394fd9eb,0xf5
  4105bb:	jns    0x41058f
  4105bd:	mov    esp,0xad850c
  4105c2:	mov    ebp,0xdb31561f
  4105c7:	mov    dh,0x1
  4105c9:	(bad)
  4105cd:	jmp    FWORD PTR [eax-0x45]
  4105d0:	aad    0xff
  4105d2:	fwait
  4105d3:	push   es
  4105d4:	inc    DWORD PTR [edi]
  4105d6:	mov    cl,0x2c
  4105d8:	xlat   BYTE PTR ds:[ebx]
  4105d9:	imul   BYTE PTR [eax]
  4105db:	ret    
  4105dc:	dec    ebp
  4105dd:	or     BYTE PTR [edx],dl
  4105df:	or     DWORD PTR [edx-0x2afc17f8],ebx
  4105e5:	or     DWORD PTR [edx-0x5dffffbd],edi
  4105eb:	push   ds
  4105ec:	and    eax,DWORD PTR [ebx-0x9a2ffa3]
  4105f2:	push   edi
  4105f3:	xor    esp,esp
  4105f5:	mov    ebp,0x11cf873f
  4105fa:	leave  
  4105fb:	inc    edx
  4105fc:	addr16 cmp eax,0x3e90a51
  410602:	test   eax,0xe8680011
  410607:	jmp    0x410628
  410609:	jmp    0x685cb9e4
  41060e:	fsub   st,st(1)
  410610:	pop    ds
  410611:	jmp    0xae54b8ec
  410616:	xlat   BYTE PTR ds:[ebx]
  410617:	push   es
  410618:	add    cl,ch
  41061a:	(bad)  
  41061b:	push   ds
  41061c:	retf   
  41061d:	mov    edx,0xc543f196
  410622:	loop   0x410626
  410624:	xchg   ebp,eax
  410625:	test   eax,0xbab52011
  41062a:	xchg   esi,eax
  41062b:	aam    0xc1
  41062d:	icebp  
  41062e:	(bad)  
  41062f:	rol    DWORD PTR [edx+0x206badd],0xe6
  410636:	inc    eax
  410637:	or     esi,DWORD PTR [ebp-0xb]
  41063a:	push   edi
  41063b:	xor    DWORD PTR [ecx],ecx
  41063d:	mov    ebp,0x6abff7a7
  410642:	lock add eax,0x913cc75
  410648:	add    ecx,ebp
  41064a:	(bad)  
  41064b:	or     ebx,ebp
  41064d:	lds    eax,FWORD PTR [eax]
  41064f:	add    BYTE PTR [edi+0x31],dl
  410652:	or     DWORD PTR [ebp+0x6a38b493],edx
  410658:	enter  0x7e05,0xbd
  41065c:	pop    ecx
  41065d:	xor    DWORD PTR [ecx+ebp*8-0x1e8bf62a],eax
  410664:	pop    ecx
  410665:	xor    DWORD PTR [esi],esp
  410667:	leave  
  410668:	(bad)  
  410669:	or     DWORD PTR [esi-0x3b],edi
  41066c:	pop    ecx
  41066d:	xor    DWORD PTR [eax],ebp
  41066f:	or     ecx,edx
  410671:	or     DWORD PTR [edi-0x3],edi
  410674:	fwait
  410675:	or     BYTE PTR [ebx],al
  410677:	jmp    0x2c1052
  41067c:	inc    edi
  41067d:	jb     0x4106b7
  41067f:	add    al,ch
  410681:	and    DWORD PTR [edx],ecx
  410683:	jns    0xdd2c454f
  410689:	retf   0x100
  41068c:	sub    al,0x6
  41068e:	add    bl,ch
  410690:	(bad)  
  410691:	ss mov esi,0x422ed5eb
  410697:	and    al,0xf4
  410699:	jnp    0x4106a4
  41069b:	and    ah,0xf2
  41069e:	or     esi,DWORD PTR [ebp-0x17]
  4106a1:	pop    edi
  4106a2:	add    BYTE PTR [eax+0x47],bl
  4106a5:	pop    es
  4106a6:	xor    eax,eax
  4106a8:	mov    esp,0x2c330084
  4106ad:	inc    esi
  4106ae:	ror    BYTE PTR [esp+ebp*8],0x50
  4106b2:	mov    esp,ebp
  4106b4:	add    BYTE PTR [eax],al
  4106b6:	aas    
  4106b7:	loope  0x4106cb
  4106b9:	push   ebx
  4106ba:	mov    bl,BYTE PTR [eax+0x66]
  4106bd:	cwde   
  4106be:	retf   0xfe4d
  4106c1:	addr16 push esp
  4106c3:	pop    ss
  4106c4:	inc    eax
  4106c5:	add    BYTE PTR [esp+ecx*8],al
  4106c8:	mov    bh,0x0
  4106ca:	mov    esp,0xea33d684
  4106cf:	xor    ebx,esp
  4106d1:	je     0x410747
  4106d3:	test   BYTE PTR [ecx],al
  4106d5:	push   esi
  4106d6:	dec    edi
  4106d7:	lock mov ?,esp
  4106da:	jl     0x4106e9
  4106dc:	add    BYTE PTR [ebx-0xaea891],cl
  4106e2:	sbb    al,0x2d
  4106e4:	(bad)  
  4106e5:	(bad)  
  4106e6:	jl     0x41066c
  4106e8:	add    DWORD PTR [edx+0x63],ebp
  4106eb:	pop    ebx
  4106ec:	std    
  4106ed:	nop
  4106ee:	test   BYTE PTR [esi],al
  4106f0:	add    BYTE PTR [eax],al
  4106f2:	out    0xa,eax
  4106f4:	push   esi
  4106f5:	push   ebx
  4106f6:	xor    edx,DWORD PTR [esi+0x22d5010e]
  4106fc:	add    cl,BYTE PTR [ebx-0x431322a]
  410702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410703:	fisubr DWORD PTR [ebx+0x15]
  410706:	xchg   ebp,eax
  410707:	and    cl,bh
  410709:	inc    ch
  41070b:	popf   
  41070c:	inc    ebx
  41070d:	je     0x4106ef
  41070f:	int    0xc6
  410711:	jmp    0x410698
  410713:	addr16 push ss
  410715:	sbb    al,0xe6
  410717:	loop   0x41071c
  410719:	push   0x0
  41071b:	add    dh,bl
  41071d:	cli    
  41071e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41071f:	mov    BYTE PTR [eax-0x1a147f52],bl
  410725:	jae    0x410769
  410727:	gs pop esp
  410729:	out    0x37,al
  41072b:	mov    dl,BYTE PTR [eax+0x4e0788b6]
  410731:	lahf   
  410732:	mov    ?,WORD PTR [ecx+ebp*8+0x7d]
  410736:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410738:	cmp    eax,0xd53fb51f
  41073d:	jb     0x4107a4
  41073f:	(bad)  
  410740:	bound  eax,QWORD PTR fs:[ecx]
  410743:	add    ch,dl
  410745:	mov    ebx,0x3a5efbc6
  41074a:	sar    dh,cl
  41074c:	add    al,0x2b
  41074e:	fistp  DWORD PTR [ebp+0x4e]
  410751:	jecxz  0x41072b
  410753:	enter  0x6d96,0x87
  410757:	jmp    0x4107af
  410759:	(bad)  
  41075a:	jecxz  0x4107ae
  41075c:	and    esi,DWORD PTR [eax+0x44]
  41075f:	inc    esp
  410760:	jle    0x410784
  410762:	sub    cl,BYTE PTR [esi+0x7a]
  410765:	pop    es
  410766:	cmp    eax,0x58a58d8a
  41076b:	jae    0x410761
  41076d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41076e:	(bad)  
  41076f:	jecxz  0x410776
  410771:	and    BYTE PTR ds:0x2909c61c,dl
  410777:	add    al,0xbf
  410779:	add    DWORD PTR [ecx+0x3d],eax
  41077c:	rol    DWORD PTR [ecx],0x4f
  41077f:	mov    eax,DWORD PTR [eax]
  410781:	add    BYTE PTR [ecx-0xee932db],bl
  410787:	sbb    al,0x29
  410789:	add    al,0x5c
  41078b:	(bad)  
  41078c:	int3   
  41078d:	xchg   BYTE PTR [edx-0x4b],ch
  410790:	lock mov bh,dl
  410793:	jle    0x4107b0
  410795:	cmp    BYTE PTR [ebp+0x5e13948c],al
  41079b:	sub    eax,0x65f6b66b
  4107a0:	dec    ebx
  4107a1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4107a3:	lea    dx,[ebx+0x3e908f2]
  4107aa:	pop    eax
  4107ab:	dec    ecx
  4107ac:	repz or BYTE PTR [ebx-0x74],dh
  4107b0:	repz aaa 
  4107b2:	jecxz  0x410769
  4107b4:	in     al,0x45
  4107b6:	xchg   ecx,eax
  4107b7:	xor    al,0xe7
  4107b9:	mov    ds,WORD PTR [ecx]
  4107bb:	es mov eax,0xf9e9e13c
  4107c1:	ret    
  4107c2:	ret    0xcbaf
  4107c5:	cmp    BYTE PTR [edx-0x28770f4a],bh
  4107cb:	fidivr DWORD PTR ds:0x11fad2d3
  4107d1:	fadd   QWORD PTR [eax]
  4107d3:	sub    DWORD PTR [ecx],0xffffffd8
  4107d6:	lea    ecx,[esp+ebp*8+0x3]
  4107da:	sub    BYTE PTR [ebx+0x85fd20c],al
  4107e0:	fs into 
  4107e2:	jle    0x4107bd
  4107e4:	mov    dh,0x3c
  4107e6:	add    BYTE PTR [eax],al
  4107e8:	or     ah,BYTE PTR [edx+0x5e6436b]
  4107ee:	push   0xffffffa6
  4107f0:	outs   dx,BYTE PTR ds:[esi]
  4107f1:	or     al,BYTE PTR [eax]
  4107f3:	(bad)  
  4107f4:	fcom   st(7)
  4107f6:	(bad)  
  4107f7:	cdq    
  4107f8:	into   
  4107f9:	add    BYTE PTR [ebp+eiz*8-0x60],0x4b
  4107fe:	push   esp
  4107ff:	jb     0x4107fe
  410801:	fst    DWORD PTR [eax+0x3e]
  410804:	push   edx
  410805:	xor    cl,BYTE PTR [ecx+0x8d161]
  41080b:	jmp    0x743fc66e
  410810:	pop    ecx
  410811:	or     al,BYTE PTR [ecx]
  410813:	jmp    0xaf8d89ee
  410818:	push   esp
  410819:	pop    ecx
  41081a:	jae    0x41084c
  41081c:	bound  edi,QWORD PTR [esi-0x24602df9]
  410822:	mov    BYTE PTR [ecx+eax*8],ah
  410825:	adc    DWORD PTR [ecx+eiz*8+0x24],0xde86442d
  41082d:	ja     0x4108a3
  41082f:	jle    0x41088c
  410831:	sbb    eax,DWORD PTR [esi]
  410833:	jmp    0x374f353d
  410838:	or     al,0x2d
  41083a:	mov    DWORD PTR ds:0xe71b81d8,eax
  410840:	pop    esi
  410841:	sbb    al,BYTE PTR [ecx]
  410843:	out    0x44,al
  410845:	add    eax,DWORD PTR [esi]
  410847:	fiadd  WORD PTR [ecx+ebx*2+0x2]
  41084b:	xor    eax,DWORD PTR [eax]
  41084d:	add    BYTE PTR [edx-0x2b],ah
  410850:	imul   DWORD PTR [eax-0x10]
  410853:	das    
  410854:	(bad)  
  410855:	call   0xe84c8c30
  41085a:	mov    al,ds:0xde713a02
  41085f:	(bad)  
  410860:	(bad)  
  410861:	lods   al,BYTE PTR ds:[esi]
  410862:	fidiv  WORD PTR [ebp+eax*8+0x4c80a3b7]
  410869:	push   cs
  41086a:	dec    ecx
  41086b:	xchg   bh,bh
  41086d:	(bad)  
  41086e:	jge    0x41087a
  410870:	add    BYTE PTR [edx-0x77790fc7],cl
  410876:	ins    DWORD PTR es:[edi],dx
  410877:	add    eax,0xbd4b0000
  41087c:	rol    BYTE PTR [esp+edi*1],0x5b
  410880:	mov    ecx,edi
  410882:	out    dx,eax
  410883:	mov    esp,0x24a0ff83
  410888:	push   ecx
  410889:	push   esi
  41088a:	mov    bh,0xf4
  41088c:	sub    eax,esi
  41088e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41088f:	inc    BYTE PTR ds:0xe29c88b
  410895:	xor    al,BYTE PTR [eax]
  410897:	or     eax,0x2efc8841
  41089c:	dec    edx
  41089d:	and    al,0x10
  41089f:	jns    0x4108a1
  4108a1:	xor    eax,DWORD PTR [ebp+0x4a]
  4108a4:	dec    ebp
  4108a5:	jne    0x4108fa
  4108a7:	push   eax
  4108a8:	pop    ecx
  4108a9:	pop    edi
  4108aa:	add    al,BYTE PTR cs:[eax]
  4108ad:	push   ebp
  4108ae:	addr16 out 0x89,al
  4108b1:	inc    ebp
  4108b2:	add    BYTE PTR [eax],al
  4108b4:	in     al,0x86
  4108b6:	jmp    0xfb00:0xa716f0c
  4108bd:	xchg   ebx,edx
  4108bf:	add    BYTE PTR [ecx+ecx*1-0xe7e72ad],bh
  4108c6:	push   esp
  4108c7:	sub    esi,esi
  4108c9:	push   edi
  4108ca:	mov    ecx,edi
  4108cc:	xchg   esi,eax
  4108cd:	add    al,0xc6
  4108cf:	inc    ebp
  4108d0:	sbb    ecx,DWORD PTR [ecx]
  4108d2:	lea    ecx,[ebp+0x14]
  4108d5:	push   ebx
  4108d6:	cmp    DWORD PTR [ebp-0x48],0x360d7609
  4108dd:	std    
  4108de:	push   cs
  4108df:	dec    DWORD PTR [ecx+0x5]
  4108e2:	inc    BYTE PTR [ebp-0x15]
  4108e5:	or     BYTE PTR [edi],0xeb
  4108e8:	aad    0x1f
  4108ea:	inc    eax
  4108eb:	add    ch,dl
  4108ed:	popa   
  4108ee:	enter  0x7b74,0x34
  4108f2:	jo     0x410940
  4108f4:	ins    DWORD PTR es:[edi],dx
  4108f5:	mov    eax,0x216fc053
  4108fa:	mov    WORD PTR [ecx-0x3d4a53],ds
  410900:	jecxz  0x41088e
  410902:	into   
  410903:	clc    
  410904:	push   esi
  410905:	inc    edx
  410906:	add    al,0x8b
  410908:	inc    edi
  410909:	bound  esp,QWORD PTR [edx]
  41090b:	add    edx,DWORD PTR [ebp*2-0x46dbf501]
  410912:	mov    DWORD PTR [edi],esp
  410914:	mov    al,ds:0x8303e2
  410919:	add    BYTE PTR [edx],bl
  41091b:	and    BYTE PTR [edx-0x75dde584],al
  410921:	dec    esp
  410922:	or     BYTE PTR ds:0xde430f11,cl
  410928:	cmp    eax,0x4123f782
  41092d:	loope  0x410906
  41092f:	popa   
  410930:	sub    al,BYTE PTR ds:0x908d78de
  410936:	mov    ebp,0xefffc235
  41093b:	and    BYTE PTR [esp+edi*1+0x55],dh
  41093f:	push   ds
  410940:	aaa    
  410941:	add    DWORD PTR [ebx+0x34],ecx
  410944:	pop    es
  410945:	mov    dh,0x18
  410947:	test   eax,0xa902e084
  41094c:	mov    ah,BYTE PTR [edi]
  41094e:	inc    eax
  41094f:	arpl   WORD PTR [edx],ax
  410951:	jmp    0x41092a
  410953:	mov    cl,0xf6
  410955:	jg     0x41097f
  410957:	push   ebx
  410958:	add    dh,BYTE PTR [esp+esi*8+0x23]
  41095c:	jo     0x410950
  41095e:	xor    ebp,DWORD PTR [edx+0x94b0ef3]
  410964:	pushf  
  410965:	(bad)  cs:[ebx+0x3a]
  410969:	or     DWORD PTR [ebx+0x42],ecx
  41096c:	mov    cs,WORD PTR [edx-0x7578f816]
  410972:	and    al,BYTE PTR [esi]
  410974:	(bad)
  410978:	push   0x44
  41097a:	fisub  DWORD PTR [eax]
  41097c:	xlat   BYTE PTR ds:[ebx]
  41097d:	mov    eax,DWORD PTR [eax]
  41097f:	add    dl,al
  410981:	jg     0x41090e
  410983:	cs pop edx
  410985:	shl    edi,1
  410987:	mov    ebx,DWORD PTR [edx-0x28348ef9]
  41098d:	mov    BYTE PTR [eax-0x2351a801],ch
  410993:	add    esp,edx
  410995:	test   BYTE PTR [eax],al
  410997:	cmp    DWORD PTR [ebx],ebp
  410999:	sub    al,0x1d
  41099b:	fidivr DWORD PTR [edi-0x20]
  41099e:	sub    ecx,DWORD PTR [esp+ecx*1]
  4109a1:	inc    edi
  4109a2:	fadd   QWORD PTR [ebx]
  4109a4:	test   al,0x80
  4109a6:	xchg   esp,eax
  4109a7:	test   dh,bh
  4109a9:	cld    
  4109aa:	cmp    ecx,edx
  4109ac:	push   ecx
  4109ad:	in     eax,dx
  4109ae:	out    0x8c,eax
  4109b0:	xchg   ecx,eax
  4109b1:	add    DWORD PTR [edx+0x5a],esp
  4109b4:	pop    ebp
  4109b5:	(bad)  
  4109b6:	jl     0x4109b4
  4109b8:	sbb    edi,esp
  4109ba:	imul   ebp,DWORD PTR [eax-0x1e],0xa7d1e82b
  4109c1:	xor    edi,DWORD PTR [ecx-0x26b4f0ab]
  4109c7:	leave  
  4109c8:	add    al,0x41
  4109ca:	fs dec edx
  4109cc:	dec    ecx
  4109cd:	out    dx,eax
  4109ce:	push   0x6309ceb6
  4109d3:	or     al,0x29
  4109d5:	add    eax,0x1ed4446a
  4109da:	out    0xc4,eax
  4109dc:	push   ecx
  4109dd:	leave  
  4109de:	call   FWORD PTR [ebx]
  4109e0:	mov    ds:0xe276bc,al
  4109e5:	add    ch,bl
  4109e7:	jae    0x4109a9
  4109e9:	jae    0x410a49
  4109eb:	(bad)  
  4109ec:	je     0x410997
  4109ee:	(bad)  
  4109ef:	push   ds
  4109f0:	add    ebx,ebx
  4109f2:	ja     0x8a1c9fc0
  4109f8:	clc    
  4109f9:	int    0x53
  4109fb:	retf   0xeec2
  4109fe:	push   edx
  4109ff:	dec    edx
  410a00:	std    
  410a01:	and    BYTE PTR [eax+0x43],dh
  410a04:	cmp    cl,BYTE PTR [esi]
  410a06:	mov    BYTE PTR [esi-0x7d],al
  410a09:	mov    al,0x85
  410a0b:	add    al,0x46
  410a0d:	fist   WORD PTR [eax-0x103b47e]
  410a13:	enter  0xd382,0xd5
  410a17:	lods   eax,DWORD PTR ds:[esi]
  410a18:	lods   eax,DWORD PTR ds:[esi]
  410a19:	ins    BYTE PTR es:[edi],dx
  410a1a:	sti    
  410a1b:	mov    dh,0x4a
  410a1d:	jae    0x410a2b
  410a1f:	xor    ecx,DWORD PTR [ecx+0x5480d82c]
  410a25:	mov    al,0x99
  410a27:	sub    DWORD PTR [ecx],eax
  410a29:	test   eax,0xa80a06b9
  410a2e:	dec    edi
  410a2f:	mov    esi,0x2f1461f9
  410a34:	mov    DWORD PTR [eax-0xcfad667],ebp
  410a3a:	sbb    eax,0xd58bbf30
  410a3f:	dec    ecx
  410a40:	out    0xeb,eax
  410a42:	int3   
  410a43:	inc    edi
  410a44:	xchg   DWORD PTR [ebx+ecx*1],ebx
  410a47:	jle    0x410a9e
  410a49:	data16 add BYTE PTR [eax],al
  410a4c:	mov    BYTE PTR [ecx-0x79],0xa4
  410a50:	std    
  410a51:	test   ecx,edx
  410a53:	xlat   BYTE PTR ds:[ebx]
  410a54:	in     eax,0x7e
  410a56:	je     0x410aad
  410a58:	pop    edi
  410a59:	(bad)  
  410a5a:	or     al,0x0
  410a5c:	adc    bl,dh
  410a5e:	inc    ebx
  410a5f:	hlt    
  410a60:	and    al,0x2c
  410a62:	or     ecx,0x59
  410a65:	push   es
  410a66:	inc    ecx
  410a67:	cmp    esi,DWORD PTR [esi+0x133be971]
  410a6d:	add    eax,DWORD PTR [edx-0x20d1cad]
  410a73:	pop    esi
  410a74:	test   DWORD PTR [eax-0xe],0x5efe392b
  410a7b:	pop    ebx
  410a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a7d:	mov    DWORD PTR [esi],0xee7f4a00
  410a83:	mov    ch,BYTE PTR [edx+0x7e]
  410a86:	inc    DWORD PTR [edx+0x14760546]
  410a8c:	rol    DWORD PTR [ebp-0x1],0x2a
  410a90:	sbb    eax,0xb6ff4881
  410a95:	cli    
  410a96:	add    eax,0x86f2ec32
  410a9b:	adc    ah,bh
  410a9d:	cmp    al,0x73
  410a9f:	hlt    
  410aa0:	ret    0x37c6
  410aa3:	push   esp
  410aa4:	enter  0x7409,0x14
  410aa8:	in     al,dx
  410aa9:	bnd jb 0x410ad0
  410aac:	add    al,0x58
  410aae:	out    0x61,al
  410ab0:	add    BYTE PTR [eax],al
  410ab2:	out    dx,eax
  410ab3:	add    eax,0x7febeb00
  410ab8:	dec    edx
  410ab9:	adc    BYTE PTR [ebx+0x36],ah
  410abc:	or     dl,BYTE PTR [eax]
  410abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410abf:	js     0x410ab5
  410ac1:	ret    0x5f8
  410ac4:	and    DWORD PTR [esi],0xffffffec
  410ac7:	pop    ebp
  410ac8:	add    BYTE PTR [ecx],al
  410aca:	mov    esp,0xd874ff0d
  410acf:	adc    eax,0x3db8468d
  410ad4:	std    
  410ad5:	adc    eax,0x400c22d5
  410ada:	aad    0xb3
  410adc:	or     ebx,DWORD PTR ds:[esi-0x7]
  410ae0:	inc    eax
  410ae1:	add    edx,ebp
  410ae3:	jge    0x410a6e
  410ae5:	jmp    0x410aeb
  410ae7:	test   cl,dh
  410ae9:	enter  0x802b,0x8a
  410aed:	dec    esp
  410aee:	mov    bl,BYTE PTR [ebx-0x66040239]
  410af4:	mov    bh,bh
  410af6:	aad    0x32
  410af8:	add    cl,BYTE PTR [ebx+0x102bd65]
  410afe:	aad    0x32
  410b00:	mov    cl,BYTE PTR ds:0x3a9c7114
  410b06:	(bad)  
  410b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b08:	sub    eax,0x38ac458a
  410b0d:	push   cs
  410b0e:	sbb    esi,0x34
  410b11:	mov    ah,BYTE PTR [eax+0xb881a]
  410b17:	add    ah,bl
  410b19:	lods   al,BYTE PTR ds:[esi]
  410b1a:	or     eax,0xc5331f02
  410b1f:	std    
  410b20:	fisubr DWORD PTR [eax+0x474ffdc6]
  410b26:	add    esi,edi
  410b28:	nop
  410b29:	pop    edi
  410b2a:	mov    ebx,DWORD PTR ds:0xf013f5d
  410b30:	inc    ebx
  410b31:	fidiv  WORD PTR [edx+edi*1]
  410b34:	nop
  410b35:	lods   eax,DWORD PTR ss:[esi]
  410b37:	add    edx,DWORD PTR [ebx]
  410b39:	div    BYTE PTR [edi+edi*8]
  410b3c:	cwde   
  410b3d:	pop    es
  410b3e:	scas   eax,DWORD PTR es:[edi]
  410b3f:	into   
  410b40:	mov    dh,al
  410b42:	fmul   st,st(0)
  410b44:	pop    ss
  410b45:	sbb    eax,DWORD PTR [edx]
  410b47:	mov    ecx,ebp
  410b49:	mov    bl,0x2a
  410b4b:	inc    DWORD PTR [esi+0x4a]
  410b4e:	leave  
  410b4f:	jae    0x410b37
  410b51:	or     DWORD PTR [edx+0x2b],ebp
  410b54:	xlat   BYTE PTR ds:[ebx]
  410b55:	popf   
  410b56:	jmp    0x618d864c
  410b5b:	inc    esi
  410b5c:	pop    edi
  410b5d:	dec    edi
  410b5e:	inc    eax
  410b5f:	loope  0x410b0c
  410b61:	sub    BYTE PTR [ebp+0x29],al
  410b64:	shr    BYTE PTR [eax],0xb8
  410b67:	or     ecx,DWORD PTR [esi+0x53]
  410b6a:	xor    eax,0x2694d6b4
  410b6f:	mov    DWORD PTR [eax-0x7cc8fccf],esp
  410b75:	sub    BYTE PTR [ecx],dl
  410b77:	or     DWORD PTR [esi+0x49],edx
  410b7a:	in     al,dx
  410b7b:	int    0x0
  410b7d:	add    BYTE PTR [edi+0x57],bl
  410b80:	add    BYTE PTR [edx+0x7405286e],dl
  410b86:	aad    0x4c
  410b88:	arpl   WORD PTR [esi],bp
  410b8a:	loope  0x410b98
  410b8c:	mov    edx,0xe0941743
  410b91:	cmp    BYTE PTR ds:0x8df85d09,0x9d
  410b98:	push   es
  410b99:	retf   
  410b9a:	mov    BYTE PTR [eax],0x20
  410b9d:	mov    al,0xe2
  410b9f:	rcl    BYTE PTR [ebx+0x2a],cl
  410ba2:	pop    edi
  410ba3:	aas    
  410ba4:	jno    0x410bea
  410ba6:	dec    edi
  410ba7:	dec    esp
  410ba8:	rcr    BYTE PTR [eax+0x18],1
  410bab:	sub    BYTE PTR [ebp-0x174c3dd8],dh
  410bb1:	sub    ah,dl
  410bb3:	mov    bl,0xe7
  410bb5:	int    0xab
  410bb7:	xchg   esp,eax
  410bb8:	mov    cl,0x2b
  410bba:	shl    DWORD PTR [esi],1
  410bbc:	xchg   ebp,eax
  410bbd:	xor    al,0x17
  410bbf:	sub    BYTE PTR [eax],bl
  410bc1:	or     al,0x5e
  410bc3:	push   edi
  410bc4:	test   DWORD PTR [ebx-0x775a6b2a],esi
  410bca:	pop    es
  410bcb:	xor    edi,edi
  410bcd:	stos   DWORD PTR es:[edi],eax
  410bce:	or     ch,BYTE PTR [eax]
  410bd0:	inc    BYTE PTR [edx-0x1240752d]
  410bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd7:	xchg   esp,eax
  410bd8:	aad    0x72
  410bda:	adc    DWORD PTR [edi],ebp
  410bdc:	aaa    
  410bdd:	push   ebp
  410bde:	jmp    0x68960a
  410be3:	add    BYTE PTR ds:0xd50d4b94,dl
  410be9:	xchg   edx,eax
  410bea:	or     BYTE PTR [edi+0x6256d28f],dl
  410bf0:	(bad)  
  410bf1:	call   0xea6a:0x33ba011
  410bf8:	test   DWORD PTR [ecx],edi
  410bfa:	mov    WORD PTR [edi+0x18f6c0d4],fs
  410c00:	pop    ss
  410c01:	inc    edi
  410c02:	add    DWORD PTR [edx],eax
  410c04:	shl    DWORD PTR [ebx-0x69fb45fe],cl
  410c0a:	inc    ebp
  410c0b:	jmp    0x410c8c
  410c0d:	and    al,dh
  410c0f:	sub    dh,dh
  410c11:	or     edx,DWORD PTR [eax+0x1]
  410c14:	mov    ebp,0xc3e90009
  410c19:	push   ds
  410c1a:	test   dh,bl
  410c1c:	jge    0x410c22
  410c1e:	mov    ebp,DWORD PTR ds:0x45e8133d
  410c24:	out    0x27,al
  410c26:	(bad)  
  410c27:	ins    BYTE PTR es:[edi],dx
  410c28:	cdq    
  410c29:	call   0x6c0f:0xeb15720d
  410c30:	rcr    BYTE PTR [edx-0x6d2f9fff],1
  410c36:	(bad)  
  410c37:	xchg   edx,eax
  410c38:	add    eax,eax
  410c3a:	out    0x45,eax
  410c3c:	ror    BYTE PTR [ecx],1
  410c3e:	add    dl,bl
  410c40:	xchg   esi,eax
  410c41:	(bad)  
  410c42:	pop    ebp
  410c43:	stos   DWORD PTR es:[edi],eax
  410c44:	jmp    0x41956f
  410c49:	add    ah,ah
  410c4b:	(bad)  
  410c4c:	out    0x0,eax
  410c4e:	loopne 0x410c94
  410c50:	inc    edi
  410c51:	je     0x410c03
  410c53:	(bad)  
  410c54:	out    0x3,eax
  410c56:	ror    BYTE PTR [edi],0x32
  410c59:	shr    bh,0xa6
  410c5c:	rcl    BYTE PTR [esi+0x47],0xc4
  410c60:	out    0x4b,al
  410c62:	or     bl,bl
  410c64:	std    
  410c65:	jmp    0x410c21
  410c67:	fld    TBYTE PTR [esi+0x8]
  410c6a:	daa    
  410c6b:	call   0xa7f17d6d
  410c70:	les    ecx,FWORD PTR [ebx-0x3ddfa0e]
  410c76:	mov    ebx,0xef0be9da
  410c7b:	int    0x2
  410c7d:	push   esi
  410c7e:	pop    es
  410c7f:	int3   
  410c80:	out    0x98,al
  410c82:	(bad)  
  410c83:	(bad)  
  410c85:	mov    al,0x7d
  410c87:	iret   
  410c88:	xor    esi,0xffffffe1
  410c8b:	rdpmc  
  410c8d:	shr    BYTE PTR [edi-0x2a7cf95a],0xd
  410c94:	je     0x410cd0
  410c96:	jne    0x410cf6
  410c98:	and    al,0x49
  410c9a:	mov    al,ds:0x2b744903
  410c9f:	gs jae 0x410c8c
  410ca2:	out    dx,al
  410ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca4:	les    ecx,FWORD PTR [ebx-0x1fcfd9d]
  410caa:	sbb    ebx,ebx
  410cac:	jmp    0x86410ce0
  410cb1:	or     eax,0xc9602eb
  410cb6:	push   edi
  410cb7:	mov    esi,DWORD PTR [edx]
  410cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cba:	enter  0x36e8,0xf6
  410cbe:	std    
  410cbf:	jmp    FWORD PTR [edi]
  410cc1:	fld    TBYTE PTR [esi+0x8]
  410cc4:	aad    0xab
  410cc6:	inc    eax
  410cc7:	(bad)  
  410cc8:	gs sub al,0x7d
  410ccb:	(bad)  
  410ccc:	in     eax,dx
  410ccd:	pop    esp
  410cce:	sub    eax,0xff7adafe
  410cd3:	push   ecx
  410cd4:	push   esi
  410cd5:	jae    0x410cdd
  410cd7:	mov    esp,DWORD PTR [ebx+0x15e741a8]
  410cdd:	test   al,0x31
  410cdf:	dec    BYTE PTR [esi-0x13]
  410ce2:	inc    ebp
  410ce3:	push   ebp
  410ce4:	pop    esi
  410ce5:	ret    
  410ce6:	jge    0x410cea
  410ce8:	sbb    eax,0x938ad96b
  410ced:	data16 add al,0xd1
  410cf0:	lods   al,BYTE PTR ds:[esi]
  410cf1:	sbb    BYTE PTR [edx],0xd1
  410cf4:	aad    0x32
  410cf6:	add    cl,BYTE PTR [ebx+0x7331ae8d]
  410cfc:	loopne 0x410c95
  410cfe:	(bad)  
  410cff:	and    ecx,ecx
  410d01:	xchg   edi,eax
  410d02:	inc    ebp
  410d03:	out    0x56,eax
  410d05:	cld    
  410d06:	xor    esi,edi
  410d08:	push   eax
  410d09:	repz mov dh,0xd
  410d0c:	dec    esi
  410d0d:	pop    edi
  410d0e:	out    0xf,al
  410d10:	push   eax
  410d11:	fidiv  DWORD PTR [esi+0x5c000001]
  410d17:	xor    bh,BYTE PTR [ebp-0x3a]
  410d1a:	ds sub ebx,ecx
  410d1d:	out    0xc,eax
  410d1f:	xor    eax,DWORD PTR [edx]
  410d21:	add    BYTE PTR [esi],al
  410d23:	jae    0x410cf5
  410d25:	pop    ebp
  410d26:	pop    ss
  410d27:	sub    eax,DWORD PTR [edx]
  410d29:	test   DWORD PTR [esi+edi*4],ebx
  410d2c:	(bad)  
  410d2d:	(bad)  
  410d2e:	jmp    0x410d6a
  410d30:	js     0x410d31
  410d32:	sbb    dh,BYTE PTR [ebx]
  410d34:	and    DWORD PTR ds:0x8af547d5,0xffffffd3
  410d3b:	scas   eax,DWORD PTR es:[edi]
  410d3c:	inc    edx
  410d3d:	add    esp,DWORD PTR [ecx+ecx*1-0x67ebb94]
  410d44:	adc    bh,ah
  410d46:	repz ficom WORD PTR [edx+ecx*2-0x69]
  410d4b:	or     DWORD PTR [esi+0x28f75d17],ecx
  410d51:	add    al,0xee
  410d53:	adc    al,0x19
  410d55:	sahf   
  410d56:	fisub  DWORD PTR [ebx+edi*4]
  410d59:	outs   dx,DWORD PTR ds:[esi]
  410d5a:	nop
  410d5b:	enter  0x30e8,0xe9
  410d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d60:	cli    
  410d61:	ret    
  410d62:	mov    edx,0xd7b7288d
  410d67:	xlat   BYTE PTR ds:[ebx]
  410d68:	sub    BYTE PTR [ebp+0x5d],al
  410d6b:	or     ebx,DWORD PTR [ecx-0x3b7769fd]
  410d71:	out    0xd6,eax
  410d73:	or     DWORD PTR [edi+edi*8-0x5ebf246d],esi
  410d7a:	add    BYTE PTR [eax],al
  410d7c:	mov    ah,BYTE PTR [eax+ebp*8]
  410d7f:	test   BYTE PTR [eax+0x4ff61209],bh
  410d85:	or     ebx,DWORD PTR [esi]
  410d87:	mov    eax,0x446c0db6
  410d8c:	loope  0x410da2
  410d8e:	mov    ecx,0x2e65a930
  410d93:	lds    ebx,FWORD PTR [edx+0x23]
  410d96:	shr    DWORD PTR [ebx+0x1ce8c9e4],cl
  410d9c:	fstp   TBYTE PTR [ecx-0x21bdfc7e]
  410da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410da3:	dec    ecx
  410da4:	xchg   edi,eax
  410da5:	or     esi,ebx
  410da7:	push   ss
  410da8:	mov    cl,0xf7
  410daa:	sub    BYTE PTR [eax+edx*2],al
  410dad:	dec    ecx
  410dae:	push   ebx
  410daf:	or     bh,ah
  410db1:	dec    ecx
  410db2:	rol    DWORD PTR [edi],1
  410db4:	dec    esp
  410db5:	or     edi,DWORD PTR [ecx+0x2]
  410db8:	pop    ss
  410db9:	or     eax,0x6451e900
  410dbe:	add    ebx,DWORD PTR [ecx]
  410dc0:	arpl   WORD PTR [edi+edi*8],cx
  410dc3:	fsubr  QWORD PTR [edx+0x4e]
  410dc6:	inc    edx
  410dc7:	jmp    0xfbb90b71
  410dcc:	push   ss
  410dcd:	and    al,0xc1
  410dcf:	push   0x32
  410dd1:	call   0x864f6d9
  410dd6:	xor    ebp,DWORD PTR [ecx-0x201070f]
  410ddc:	mov    dl,0x7
  410dde:	push   0xffffffe9
  410de0:	add    BYTE PTR [eax],al
  410de2:	add    eax,0x912fbbde
  410de7:	and    edi,ebp
  410de9:	hlt    
  410dea:	jle    0x410de5
  410dec:	aas    
  410ded:	jmp    0x6a411502
  410df2:	jb     0x410ddb
  410df4:	add    ebp,ecx
  410df6:	(bad)  
  410df7:	stc    
  410df8:	(bad)  
  410df9:	mov    ch,0x7a
  410dfb:	pop    es
  410dfc:	push   0xffffffe9
  410dfe:	(bad)
  410e01:	daa    
  410e02:	cdq    
  410e03:	and    edi,ebp
  410e05:	cld    
  410e06:	inc    edx
  410e07:	stc    
  410e08:	aas    
  410e09:	jmp    0xbf411526
  410e0e:	jmp    0x2a4f9245
  410e13:	cld    
  410e14:	test   bh,bh
  410e16:	and    edi,eax
  410e18:	dec    ebp
  410e19:	dec    BYTE PTR [ebx+0x5c]
  410e1c:	out    0x19,eax
  410e1e:	add    eax,0xfc64fe24
  410e23:	popf   
  410e24:	repnz (bad) ds:[esi+edi*8-0x22]
  410e2a:	add    al,ch
  410e2c:	ret    0x23f
  410e2f:	mov    edx,0xf72d558a
  410e34:	mov    al,BYTE PTR [eax]
  410e36:	nop
  410e37:	xor    DWORD PTR [esi],ecx
  410e39:	mov    eax,eax
  410e3b:	xor    DWORD PTR [esi],edx
  410e3d:	repz pop eax
  410e3f:	push   ebp
  410e40:	pop    ebp
  410e41:	pop    esi
  410e42:	or     al,BYTE PTR cs:[eax]
  410e45:	test   DWORD PTR [eax],eax
  410e47:	add    BYTE PTR [ebp+0x62],al
  410e4a:	adc    dl,BYTE PTR [esi+0x67]
  410e4d:	popa   
  410e4e:	and    cl,BYTE PTR [eax]
  410e50:	jno    0x410e63
  410e52:	or     ch,BYTE PTR [ebx]
  410e54:	ds inc di
  410e57:	mov    bh,al
  410e59:	or     al,0x88
  410e5b:	adc    cl,cl
  410e5d:	fistp  DWORD PTR [edx+eax*8-0x48]
  410e61:	push   es
  410e62:	push   esi
  410e63:	dec    eax
  410e65:	sub    cl,BYTE PTR [edx]
  410e67:	call   0x3f0210
  410e6c:	daa    
  410e6d:	fiadd  WORD PTR [ebx-0x107770a]
  410e73:	je     0x410e4d
  410e75:	or     edi,edi
  410e77:	je     0x410e41
  410e79:	or     DWORD PTR [esi-0x1],edx
  410e7c:	test   eax,0x7c4015f6
  410e81:	xchg   edx,eax
  410e83:	or     al,0xf7
  410e85:	retf   
  410e86:	pop    esp
  410e87:	ret    0x684
  410e8a:	mov    ecx,DWORD PTR [edi]
  410e8c:	sub    bl,BYTE PTR [edi+0x5b703ee]
  410e92:	fwait
  410e93:	(bad)  
  410e94:	shl    edx,cl
  410e96:	add    al,0xd8
  410e99:	adc    eax,0x1b3f368b
  410e9e:	push   ecx
  410e9f:	dec    eax
  410ea1:	sub    cl,BYTE PTR [edx]
  410ea3:	push   esi
  410ea4:	xor    eax,DWORD PTR [ecx]
  410ea6:	adc    BYTE PTR [esi],dl
  410ea8:	in     al,dx
  410ea9:	or     eax,0xc483
  410eae:	inc    eax
  410eaf:	or     eax,0x72d58b1f
  410eb4:	sbb    DWORD PTR [ecx],eax
  410eb6:	out    0x70,al
  410eb8:	int3   
  410eb9:	rcl    ecx,0x30
  410ebc:	aam    0x56
  410ebe:	(bad)  
  410ebf:	arpl   bx,bp
  410ec1:	jnp    0x410e74
  410ec3:	sub    al,0xb4
  410ec5:	adc    al,0x4e
  410ec7:	popa   
  410ec8:	(bad)  
  410eca:	dec    edi
  410ecb:	sbb    al,0x4
  410ecd:	mov    al,ch
  410ecf:	cmp    BYTE PTR es:[edx+ebx*8-0xd],dh
  410ed4:	ret    
  410ed5:	cmp    ah,BYTE PTR [ecx+0x4c]
  410ed8:	(bad)  
  410ed9:	jno    0x410ec5
  410edb:	pop    esi
  410edc:	inc    edx
  410edd:	pop    esi
  410ede:	xor    esi,DWORD PTR [ebp+0x6]
  410ee1:	add    dl,bl
  410ee3:	loopne 0x410f35
  410ee5:	push   cs
  410ee6:	mov    esi,DWORD PTR [edx-0x27]
  410ee9:	shr    DWORD PTR [esi-0x68cd23e],0x1a
  410ef0:	cwde   
  410ef1:	jmp    FWORD PTR [ebx-0x5df419c1]
  410ef7:	push   ss
  410ef8:	or     dl,BYTE PTR [esi]
  410efa:	adc    eax,0xe1c38133
  410eff:	hlt    
  410f00:	cli    
  410f01:	dec    ebp
  410f03:	outs   dx,BYTE PTR ds:[esi]
  410f04:	out    0x3,al
  410f06:	push   es
  410f07:	cmp    al,0xe9
  410f09:	mov    DWORD PTR [edx],0xbe10b620
  410f0f:	icebp  
  410f10:	rcl    BYTE PTR [eax+0x0],cl
  410f13:	add    BYTE PTR [edx+0x7f],ch
  410f16:	out    0xb,al
  410f18:	bound  edx,QWORD PTR [esi]
  410f1a:	adc    dl,BYTE PTR [esi]
  410f1c:	adc    eax,0xe1c38133
  410f21:	loop   0x410f26
  410f23:	jmp    0x410efc
  410f25:	fs inc edx
  410f27:	rcr    ecx,0x32
  410f2a:	xlat   BYTE PTR ds:[ebx]
  410f2b:	mov    ch,BYTE PTR [ecx]
  410f2d:	or     dh,BYTE PTR [edx-0x39]
  410f30:	fimul  WORD PTR [edx+0x9d400cc]
  410f36:	jmp    0xe8a19b10
  410f3b:	add    ebp,edx
  410f3d:	or     DWORD PTR [eax],eax
  410f3f:	in     al,dx
  410f40:	test   BYTE PTR [ebp+0x11812d15],ch
  410f46:	sbb    bl,BYTE PTR [esp+ebp*8]
  410f49:	pop    ds
  410f4a:	lods   eax,DWORD PTR ds:[esi]
  410f4b:	sub    eax,0x3f89f57
  410f50:	imul   edi,eax,0x8edab79d
  410f56:	pop    ebx
  410f57:	cmp    al,ah
  410f59:	and    BYTE PTR [ebp-0x7adaa9e4],cl
  410f5f:	sub    eax,0x3171385f
  410f64:	mov    dl,0x15
  410f66:	je     0x410f95
  410f68:	ret    
  410f69:	mov    dh,BYTE PTR [ecx-0x5447ea39]
  410f6f:	mov    dh,0xf1
  410f71:	mov    cl,0x60
  410f73:	add    edx,ebp
  410f75:	or     DWORD PTR [ecx+esi*4+0x0],esp
  410f79:	add    dl,bl
  410f7b:	mov    bh,0xc2
  410f7d:	add    DWORD PTR [eax-0x62],ecx
  410f80:	lock retf 
  410f82:	jp     0x410f91
  410f84:	or     eax,0xab94d504
  410f89:	sti    
  410f8a:	mov    edi,0xb5b6e4cc
  410f8f:	popa   
  410f90:	push   ds
  410f91:	add    edx,ebp
  410f93:	or     DWORD PTR [edi-0x2672f16],eax
  410f99:	cld    
  410f9a:	sub    eax,DWORD PTR [edi]
  410f9c:	bound  edi,QWORD PTR [edi+0x36fb9ce]
  410fa2:	pusha  
  410fa3:	int3   
  410fa4:	repnz shl DWORD PTR [edi-0xc9b00cf],cl
  410fab:	pop    ds
  410fac:	(bad)  
  410fad:	cmp    esi,edx
  410faf:	xor    al,0x1
  410fb1:	sbb    ebx,DWORD PTR [ecx-0x6b4fa241]
  410fb7:	adc    al,0x0
  410fb9:	cmp    al,0x9c
  410fbb:	xor    al,0x80
  410fbd:	mov    ebp,0xe900091e
  410fc2:	sub    BYTE PTR [edi+0x5ebe7265],dh
  410fc8:	cmc    
  410fc9:	call   0xa7cc19a4
  410fce:	xor    bl,ah
  410fd0:	neg    DWORD PTR [edi]
  410fd2:	fstp   st(3)
  410fd4:	mov    edi,0xb70f1a92
  410fd9:	scas   al,BYTE PTR es:[edi]
  410fda:	push   es
  410fdb:	pop    ds
  410fdc:	je     0x410fbf
  410fde:	add    BYTE PTR [eax],al
  410fe0:	pop    ebx
  410fe1:	mov    ebx,0xb8f11b09
  410fe6:	std    
  410fe7:	jle    0x410fe2
  410fe9:	mov    al,0xff
  410feb:	rol    DWORD PTR [esi],0xb5
  410fee:	add    ch,BYTE PTR [ebx+0x59a127a6]
  410ff4:	add    DWORD PTR [eax],esp
  410ff6:	addr16 popa 
  410ff8:	xlat   BYTE PTR ds:[ebx]
  410ff9:	or     DWORD PTR [eax],eax
  410ffb:	fs xchg ebp,eax
  410ffd:	pop    es
  410ffe:	push   eax
  410fff:	(bad)  
  411000:	pop    ds
  411001:	xlat   BYTE PTR ds:[ebx]
  411002:	imul   ebp,ebx,0xa103a413
  411008:	adc    DWORD PTR [esp+eax*2],ecx
  41100b:	test   al,0xa8
  41100d:	(bad)  
  41100e:	out    0x6a,eax
  411010:	popf   
  411011:	pop    ds
  411012:	(bad)  
  411013:	push   0x43
  411015:	adc    eax,DWORD PTR [eax]
  411017:	xchg   ebp,eax
  411018:	fcomp  QWORD PTR [esi]
  41101a:	je     0x411001
  41101c:	jecxz  0x411073
  41101e:	test   DWORD PTR [edi],0xe71fa9
  411024:	(bad)  
  411025:	lock std 
  411027:	call   DWORD PTR [esi+0x2c00020a]
  41102d:	mov    ds:0xf282e8f1,al
  411032:	std    
  411033:	dec    DWORD PTR [ebp+eax*1+0x5f]
  411037:	pop    esi
  411038:	gs enter 0x6,0xe1
  41103d:	sahf   
  41103e:	jmp    0x0:0x30e5881
  411045:	add    ah,bh
  411047:	aaa    
  411048:	push   esp
  411049:	push   edi
  41104a:	jge    0x411038
  41104c:	inc    BYTE PTR [ecx]
  41104e:	in     al,dx
  41104f:	or     dh,BYTE PTR [edx+0x61]
  411052:	cdq    
  411053:	mov    eax,ds:0xf33a0006
  411058:	std    
  411059:	mov    esi,DWORD PTR [ebx*4-0x39f80bb5]
  411060:	jne    0x4110b3
  411062:	outs   dx,DWORD PTR ds:[esi]
  411063:	jo     0x41106b
  411065:	add    BYTE PTR [edi+0xb],al
  411068:	mov    DWORD PTR [ebp+0x54],eax
  41106b:	pop    ecx
  41106c:	pop    ss
  41106d:	inc    ecx
  41106f:	and    cl,BYTE PTR [ebx-0x20bc74b]
  411075:	inc    DWORD PTR [edx*2-0x7ff40008]
  41107c:	add    bl,BYTE PTR [edx+0x39]
  41107f:	pop    ecx
  411080:	imul   al
  411082:	jmp    0x411072
  411084:	std    
  411085:	(bad)  
  411086:	std    
  411087:	jo     0x41107f
  411089:	inc    esp
  41108a:	cmp    eax,0xaa754338
  41108f:	repz jae 0x41109a
  411092:	sbb    DWORD PTR [ecx-0xa],ecx
  411095:	push   eax
  411096:	xor    esp,DWORD PTR [ecx-0xd371365]
  41109c:	std    
  41109d:	(bad)  
  41109e:	aad    0x6d
  4110a0:	sub    bh,bh
  4110a2:	aam    0x30
  4110a4:	add    ch,al
  4110a6:	pop    edi
  4110a7:	push   es
  4110a8:	sub    edi,esi
  4110aa:	add    BYTE PTR [eax],al
  4110ac:	push   ecx
  4110ad:	lock mov al,0xe
  4110b0:	call   0xf6df:0xc3f3a75b
  4110b7:	mov    edi,0xc8cec692
  4110bc:	pop    ss
  4110bd:	and    al,0x2
  4110bf:	mov    ebx,DWORD PTR [edx]
  4110c1:	dec    ebx
  4110c2:	das    
  4110c3:	push   esp
  4110c4:	dec    esi
  4110c5:	pop    esp
  4110c6:	test   ebx,ebp
  4110c8:	loope  0x411065
  4110ca:	mov    edi,0xb59ba30b
  4110cf:	cmp    ecx,DWORD PTR [esi-0x4]
  4110d2:	or     DWORD PTR [edx+eiz*4],esi
  4110d5:	stos   DWORD PTR es:[edi],eax
  4110d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d7:	pop    es
  4110d8:	mov    esi,0x85c7056b
  4110dd:	xlat   BYTE PTR ds:[ebx]
  4110de:	(bad)  
  4110df:	mov    cl,BYTE PTR [esi]
  4110e1:	test   eax,0xadedf3bf
  4110e6:	add    DWORD PTR [ecx],eax
  4110e8:	aad    0x95
  4110ea:	mov    edi,0xc3f925f7
  4110ef:	dec    BYTE PTR [eax+0x27]
  4110f2:	sub    DWORD PTR [ebp+ecx*8-0x55],esi
  4110f6:	pcmpgtb mm0,mm7
  4110f9:	jb     0x4110fd
  4110fb:	test   DWORD PTR [ebp-0x73cd17c9],edx
  411101:	stos   DWORD PTR es:[edi],eax
  411102:	mov    bh,0xfe
  411104:	fdivr  QWORD PTR [ebp-0xa]
  411107:	jne    0x4110bd
  411109:	adc    esi,DWORD PTR [eax+0x54]
  41110c:	mov    bl,BYTE PTR [eax+0x7bf]
  411112:	dec    edi
  411113:	jg     0x411124
  411115:	adc    ch,al
  411117:	ss cli 
  411119:	std    
  41111a:	sbb    BYTE PTR [edx],cl
  41111c:	es sub ecx,0x1c
  411120:	in     al,0xb0
  411122:	(bad)  
  411123:	inc    ebx
  411124:	stos   DWORD PTR es:[edi],eax
  411125:	sub    bl,BYTE PTR [edx-0x36]
  411128:	sar    DWORD PTR [eax+0x782597de],1
  41112e:	xchg   ecx,eax
  41112f:	and    DWORD PTR [eax-0xade36d6],ebx
  411135:	scas   eax,DWORD PTR es:[edi]
  411136:	into   
  411137:	sbb    al,0x73
  411139:	sti    
  41113a:	xor    esi,edi
  41113c:	dec    esp
  41113d:	push   ss
  41113e:	xchg   ebp,eax
  41113f:	or     esi,ebx
  411141:	scas   eax,DWORD PTR es:[edi]
  411142:	es xchg ecx,eax
  411144:	mov    ecx,0xee961bd1
  411149:	out    dx,eax
  41114a:	pop    edi
  41114b:	push   ecx
  41114c:	shr    bl,1
  41114e:	ror    DWORD PTR [edx],cl
  411150:	jmp    0xaa93b21d
  411155:	clc    
  411156:	cli    
  411157:	mov    ch,0x61
  411159:	sbb    BYTE PTR [ebp+0x2e],dl
  41115c:	hlt    
  41115d:	add    dl,ch
  41115f:	or     DWORD PTR [edi],esi
  411161:	jge    0x411155
  411163:	or     al,0x5e
  411165:	mov    edi,0x439e90ce
  41116a:	mov    ch,0xf9
  41116c:	icebp  
  41116d:	inc    edx
  41116e:	pop    edi
  41116f:	into   
  411170:	lock jl 0x411140
  411173:	xchg   edx,eax
  411174:	sub    edi,eax
  411176:	add    BYTE PTR [eax],al
  411178:	dec    edi
  411179:	ror    ah,cl
  41117b:	inc    edx
  41117c:	mov    ch,0x11
  41117e:	repnz inc edx
  411180:	pop    ebp
  411181:	(bad)  
  411182:	in     al,dx
  411183:	jbe    0x41119e
  411185:	push   cs
  411186:	pusha  
  411187:	jg     0x411127
  411189:	sbb    ecx,DWORD PTR [ebp+0x29]
  41118c:	popa   
  41118d:	xchg   BYTE PTR [eax+0x2a],al
  411190:	mov    ebx,DWORD PTR [eiz*1-0xe47581]
  411197:	xor    eax,0xe90009ac
  41119c:	(bad)  
  41119d:	inc    esp
  41119e:	test   cl,ch
  4111a0:	mov    ebp,0xd6e5fe1b
  4111a5:	or     DWORD PTR [eax],eax
  4111a7:	add    esp,edx
  4111a9:	pop    ds
  4111aa:	dec    BYTE PTR [esi]
  4111ac:	pop    ds
  4111ad:	push   ecx
  4111ae:	shl    ecx,0xd6
  4111b1:	mov    dh,0x8a
  4111b3:	or     eax,0x98f72858
  4111b8:	push   ecx
  4111b9:	popf   
  4111ba:	or     ebp,ecx
  4111bc:	or     DWORD PTR [esi-0x70b5a2aa],esi
  4111c2:	pop    esp
  4111c3:	cmc    
  4111c4:	push   edi
  4111c5:	pop    ds
  4111c6:	mov    edi,0x7709cdd6
  4111cb:	xor    edx,DWORD PTR [eax-0x2a8df863]
  4111d1:	nop
  4111d2:	aas    
  4111d3:	aad    0x8b
  4111d5:	rcl    BYTE PTR [edi],1
  4111d7:	fnstcw WORD PTR [ecx+0x13]
  4111da:	out    0x43,eax
  4111dc:	add    BYTE PTR [eax],al
  4111de:	rcr    BYTE PTR [ebx],0xfe
  4111e1:	ins    DWORD PTR es:[edi],dx
  4111e2:	xchg   esi,eax
  4111e3:	cwde   
  4111e4:	inc    edx
  4111e5:	jb     0x4111bc
  4111e7:	nop
  4111e8:	outs   dx,DWORD PTR ds:[esi]
  4111e9:	std    
  4111ea:	rcr    DWORD PTR [ecx],1
  4111ec:	mov    BYTE PTR [edi],ch
  4111ee:	rol    DWORD PTR [esi+0x1ae5fdda],1
  4111f4:	je     0x4111e3
  4111f6:	inc    ecx
  4111f7:	dec    eax
  4111f8:	mov    dl,BYTE PTR [ecx+eiz*8]
  4111fb:	mov    dl,0x8c
  4111fd:	out    dx,eax
  4111fe:	(bad)  
  4111ff:	xor    DWORD PTR [edi+0x66],edx
  411202:	std    
  411203:	sbb    ecx,DWORD PTR [edx+0x7c8ed2bc]
  411209:	loope  0x411224
  41120b:	(bad)  
  41120c:	or     esp,DWORD PTR [edx+0x4c]
  41120f:	add    ecx,DWORD PTR [ecx+0x44ca7a00]
  411215:	add    al,0x6c
  411217:	pop    es
  411218:	add    al,BYTE PTR [eax]
  41121a:	cmc    
  41121b:	push   eax
  41121c:	or     cl,BYTE PTR [ebx+0x10bf867b]
  411222:	jge    0x411283
  411224:	adc    dh,BYTE PTR [eax+0x3200fe6d]
  41122a:	lods   al,BYTE PTR ds:[esi]
  41122b:	push   ecx
  41122c:	pop    esp
  41122d:	pop    ebx
  41122e:	mov    bh,0xfb
  411230:	pop    ebx
  411231:	ret    0x72c
  411234:	push   ebp
  411235:	mov    edx,eax
  411237:	test   edx,ebp
  411239:	or     al,0x5f
  41123b:	cmp    ebp,edi
  41123d:	jne    0x41124b
  41123f:	xchg   esp,eax
  411240:	jae    0x411236
  411242:	add    BYTE PTR [eax],al
  411244:	mov    edi,0x1732fddd
  411249:	(bad)  
  41124a:	mov    al,ds:0x82e303e7
  41124f:	shr    BYTE PTR [eax+0x1075ff0d],0xe3
  411256:	jae    0x41124c
  411258:	inc    ebx
  411259:	pop    ecx
  41125a:	or     bh,bh
  41125c:	mov    ecx,0x4353e61d
  411261:	jecxz  0x411260
  411263:	mov    dl,BYTE PTR [esi+edi*8]
  411266:	je     0x41124f
  411268:	inc    ebx
  411269:	jecxz  0x4112c7
  41126b:	mov    ch,BYTE PTR [edi]
  41126d:	dec    edi
  41126e:	mov    edx,0xc08506b0
  411274:	leave  
  411275:	and    DWORD PTR [ecx+0x126e2f01],ecx
  41127b:	inc    eax
  41127c:	mov    esi,0x6cc0813b
  411281:	inc    DWORD PTR ds:0x8b1e6c8b
  411287:	inc    esp
  411288:	scas   al,BYTE PTR es:[edi]
  411289:	test   BYTE PTR [edx+0x3ba7d511],0x2a
  411290:	lahf   
  411291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411292:	rcl    DWORD PTR [ebx],1
  411294:	push   esi
  411295:	icebp  
  411296:	adc    edi,DWORD PTR [ebx]
  411298:	(bad)  
  411299:	push   ebx
  41129a:	stc    
  41129b:	push   ebp
  41129c:	dec    esi
  41129d:	pusha  
  41129e:	cli    
  41129f:	add    ah,BYTE PTR [edi+edx*1+0x30]
  4112a3:	pop    ebp
  4112a4:	jecxz  0x4112d4
  4112a6:	icebp  
  4112a7:	mov    edi,0x3f960000
  4112ac:	inc    edx
  4112ad:	jmp    0x44a1:0x3afba7c2
  4112b4:	cli    
  4112b5:	je     0x411291
  4112b7:	xchg   edi,eax
  4112b8:	mov    ebx,0x4115403
  4112bd:	add    ch,dl
  4112bf:	mov    al,ds:0x3cf94beb
  4112c4:	scas   al,BYTE PTR es:[edi]
  4112c5:	or     al,0x5e
  4112c7:	aam    0xdf
  4112c9:	add    ebp,DWORD PTR ds:0x1afe2582
  4112cf:	lods   eax,DWORD PTR ds:[esi]
  4112d0:	inc    edx
  4112d1:	je     0x411304
  4112d3:	outs   dx,BYTE PTR ds:[esi]
  4112d4:	idiv   bh
  4112d6:	mov    eax,ds:0x4e501697
  4112db:	loop   0x4112d4
  4112dd:	push   edx
  4112de:	mov    ds:0x7f7342ad,al
  4112e3:	scas   eax,DWORD PTR es:[edi]
  4112e4:	inc    edx
  4112e5:	add    DWORD PTR [ebp-0x1d050288],eax
  4112eb:	jp     0x411366
  4112ed:	test   DWORD PTR [ebp+esi*8+0x27],0xcbffd284
  4112f5:	cmc    
  4112f6:	adc    esp,DWORD PTR [edi]
  4112f8:	add    ecx,DWORD PTR [ebp+0x3eae3323]
  4112fe:	mov    edx,0xc0e7fa19
  411303:	popf   
  411304:	and    eax,0x610a5efe
  411309:	and    BYTE PTR [ebx+0x271f9e],0x0
  411310:	loopne 0x411296
  411312:	scas   al,BYTE PTR es:[edi]
  411313:	sti    
  411314:	xchg   ebx,eax
  411315:	lahf   
  411316:	loopne 0x411333
  411318:	sbb    eax,0x83264518
  41131d:	lahf   
  41131e:	cmp    al,0x7a
  411320:	adc    BYTE PTR [esi],al
  411322:	lods   eax,DWORD PTR ss:[esi]
  411324:	fiadd  DWORD PTR [edx-0x78fc045d]
  41132a:	stos   DWORD PTR es:[edi],eax
  41132b:	sti    
  41132c:	jp     0x41137c
  41132e:	enter  0xd503,0xc0
  411332:	popa   
  411333:	dec    ebx
  411334:	cmp    dh,BYTE PTR [edi]
  411336:	adc    ah,BYTE PTR [esi]
  411338:	dec    ebx
  411339:	lea    eax,[ecx]
  41133b:	add    al,0xc8
  41133d:	add    edx,DWORD PTR [edx]
  41133f:	loope  0x411390
  411341:	shl    al,1
  411343:	in     al,dx
  411344:	cwde   
  411345:	add    eax,0x9f2a1375
  41134a:	in     al,0x1c
  41134c:	sbb    BYTE PTR [ebx*8+0x3549e725],dl
  411353:	leave  
  411354:	sbb    eax,0xa03e44c
  411359:	loopne 0x411320
  41135b:	scas   eax,DWORD PTR es:[edi]
  41135c:	fisub  DWORD PTR [ecx]
  41135e:	jmp    0x615a0e88
  411363:	mov    dh,0xde
  411365:	test   BYTE PTR [ebx],ah
  411367:	sub    BYTE PTR [eax],dl
  411369:	push   cs
  41136a:	icebp  
  41136b:	add    ecx,DWORD PTR [esi-0x38]
  41136e:	in     al,dx
  41136f:	cmp    eax,0x3e80196
  411374:	add    BYTE PTR [eax],al
  411376:	mov    esi,0xcbcd3635
  41137b:	popf   
  41137c:	int3   
  41137d:	clts   
  41137f:	sbb    DWORD PTR [ebp-0x50],edi
  411382:	idiv   ch
  411384:	push   DWORD PTR [ebp+0x65]
  411387:	in     al,dx
  411388:	adc    eax,DWORD PTR [ecx+0x66fe17b4]
  41138e:	sbb    al,0x29
  411390:	test   BYTE PTR [edi+0x65],dl
  411393:	add    bh,bh
  411395:	fnsave [edx-0x4ff117fc]
  41139b:	pop    ss
  41139c:	(bad)  
  41139d:	jb     0x411350
  41139f:	(bad)  
  4113a0:	(bad)  
  4113a1:	mov    ch,0x7f
  4113a3:	(bad)  
  4113a4:	fidivr DWORD PTR [ebp-0x22ba7c8d]
  4113aa:	out    dx,eax
  4113ab:	or     ecx,DWORD PTR [ebx-0x3e4967d2]
  4113b1:	in     eax,dx
  4113b2:	(bad)  
  4113b3:	mov    esi,0x2456058a
  4113b8:	or     ebp,eax
  4113ba:	(bad)  
  4113bb:	or     esi,esi
  4113bd:	lods   al,BYTE PTR ds:[esi]
  4113be:	dec    edx
  4113bf:	or     DWORD PTR [ebx-0x69],edx
  4113c2:	or     DWORD PTR [ebx-0x73d61e84],eax
  4113c8:	mov    ecx,gs
  4113ca:	(bad)  
  4113cb:	or     DWORD PTR [ebx],esi
  4113cd:	test   eax,0x87e7479d
  4113d2:	lock pop ss
  4113d4:	(bad)  
  4113d5:	(bad)  
  4113d6:	(bad)  
  4113d7:	(bad)  
  4113d8:	cmc    
  4113d9:	push   ebp
  4113da:	add    BYTE PTR [eax],al
  4113dc:	xor    edx,DWORD PTR [ebx-0x1]
  4113df:	call   0xffc3adba
  4113e4:	(bad)  
  4113e5:	popf   
  4113e6:	popa   
  4113e7:	bound  esi,QWORD PTR [eax]
  4113e9:	or     al,0xa9
  4113eb:	jmp    0x1c4119c6
  4113f0:	adc    ebp,ebp
  4113f2:	(bad)  
  4113f3:	sahf   
  4113f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f5:	pop    ss
  4113f6:	mov    BYTE PTR [edi],ch
  4113f8:	aad    0xea
  4113fa:	ret    0x8b60
  4113fd:	add    ecx,DWORD PTR [ebx+0x1af27200]
  411403:	mov    eax,esp
  411405:	and    cl,BYTE PTR [esi*2+0x4469292]
  41140c:	lahf   
  41140d:	sar    BYTE PTR [ecx],cl
  41140f:	dec    ebp
  411410:	test   al,0x68
  411412:	or     dh,bh
  411414:	ins    BYTE PTR es:[edi],dx
  411415:	pop    ss
  411416:	(bad)  
  411417:	(bad)  
  411418:	jp     0x411425
  41141a:	jne    0x41142c
  41141c:	jmp    FWORD PTR [edx]
  41141e:	dec    BYTE PTR [edx-0x1a90d35]
  411424:	mov    ebx,0x31c083ed
  411429:	(bad)  
  41142a:	jmp    0xfe761350
  41142f:	mov    ah,BYTE PTR [edi+edx*1]
  411432:	cmc    
  411433:	shr    DWORD PTR [ebx+ecx*1+0x8],0x0
  411438:	jo     0x411452
  41143a:	and    DWORD PTR [eax],0x810cf23c
  411440:	add    BYTE PTR [eax],al
  411442:	int    0xed
  411444:	std    
  411445:	lock cmp edx,DWORD PTR [ecx+0x9d70446]
  41144c:	and    DWORD PTR [esi],0x3c
  41144f:	xchg   edx,eax
  411450:	les    ecx,FWORD PTR [ebx-0x1d91995]
  411456:	sti    
  411457:	jmp    0x8773:0xf381f089
  41145e:	xchg   esi,eax
  41145f:	xor    DWORD PTR [eax+0x8],ebp
  411462:	sbb    esi,DWORD PTR [ecx]
  411464:	mov    edx,0xff0dafc6
  411469:	adc    eax,0x3e1fa4
  41146e:	ja     0x411445
  411470:	xchg   DWORD PTR [ebp-0x18],ebx
  411473:	cmp    DWORD PTR [esi+0x104700f],0x8f20d500
  41147d:	outs   dx,DWORD PTR ds:[esi]
  41147e:	loope  0x4114ef
  411480:	or     DWORD PTR [eax],esi
  411482:	aad    0x20
  411484:	add    cl,BYTE PTR [ebx+0x17cc9bca]
  41148a:	pop    esp
  41148b:	call   0xac1b9f8b
  411490:	int3   
  411491:	sbb    ecx,DWORD PTR [eax+ebx*2-0x2]
  411495:	xor    dl,BYTE PTR [ebp-0x715ad65]
  41149b:	mov    ds:0x5c06ffe2,eax
  4114a0:	lea    eax,[esi-0x33]
  4114a3:	fwait
  4114a4:	adc    DWORD PTR [ebx+0x30950000],eax
  4114aa:	add    eax,0xe5560c8
  4114af:	mov    DWORD PTR [eax],edx
  4114b1:	in     eax,0x2b
  4114b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b4:	pop    ebp
  4114b5:	out    dx,eax
  4114b6:	and    cl,BYTE PTR [edx-0x4079db08]
  4114bc:	loop   0x411462
  4114be:	(bad)  
  4114bf:	dec    DWORD PTR [edx+0x20]
  4114c2:	lea    ecx,[esi]
  4114c4:	push   eax
  4114c5:	xchg   ebx,eax
  4114c6:	test   BYTE PTR [edx-0x77badc2d],0xdd
  4114cd:	stos   DWORD PTR es:[edi],eax
  4114ce:	rol    BYTE PTR [ebx],cl
  4114d0:	pop    esp
  4114d1:	push   0x18928b06
  4114d6:	mov    eax,DWORD PTR [edi-0x33]
  4114d9:	fwait
  4114da:	ror    DWORD PTR [ebx],1
  4114dc:	pop    esp
  4114dd:	call   0x28de9ff1
  4114e2:	xchg   eax,ecx
  4114e4:	mov    DWORD PTR [edx],esi
  4114e6:	mov    bl,0x8c
  4114e8:	mov    dh,BYTE PTR [eax]
  4114ea:	mov    bl,0x82
  4114ec:	adc    eax,0xc0feb230
  4114f1:	xor    al,bh
  4114f3:	aas    
  4114f4:	aad    0x9
  4114f6:	push   0x47
  4114f8:	into   
  4114f9:	and    BYTE PTR [ebx],0x20
  4114fc:	aad    0xb
  4114fe:	(bad)  
  4114ff:	rcl    dl,1
  411501:	and    BYTE PTR [ebp-0x7ae8c1d5],0x22
  411508:	dec    edi
  411509:	adc    ah,BYTE PTR [ebx+0x22]
  41150c:	add    BYTE PTR [eax],al
  41150e:	sub    DWORD PTR [edx+0x61],edi
  411511:	mov    dh,0xd6
  411514:	call   0xde4b0a1c
  411519:	lods   eax,DWORD PTR ds:[esi]
  41151a:	push   edi
  41151b:	dec    edx
  41151c:	cmp    BYTE PTR [ebx-0x4be7369f],dh
  411522:	pop    ecx
  411523:	xchg   ecx,eax
  411524:	or     bh,dl
  411526:	inc    edx
  411527:	and    dh,BYTE PTR [ebp-0x17]
  41152a:	jp     0x411541
  41152c:	fs inc ebx
  41152e:	out    0xbd,al
  411530:	ret    0xff03
  411533:	std    
  411534:	cdq    
  411535:	sub    edx,DWORD PTR [edi+0x21]
  411538:	and    eax,0xf8975722
  41153d:	add    ebx,DWORD PTR [esi-0x6f]
  411540:	cld    
  411541:	xchg   edi,eax
  411542:	add    cl,BYTE PTR [ebp+0x63]
  411545:	pop    ss
  411546:	inc    eax
  411547:	adc    eax,0x9d50705
  41154c:	jmp    0xe5df48d9
  411551:	mov    es,WORD PTR [ebx]
  411553:	cmp    ecx,0xe61e598f
  411559:	and    DWORD PTR [ebx],ebx
  41155b:	and    cl,BYTE PTR [esi]
  41155d:	sbb    dl,BYTE PTR [ebx]
  41155f:	adc    eax,0x86da97d5
  411564:	xchg   ebx,eax
  411565:	sbb    BYTE PTR [eax],al
  411567:	adc    eax,0x1f5a2cc5
  41156c:	mov    ebp,0xff155921
  411571:	cmp    al,0x0
  411573:	add    dh,bl
  411575:	adc    dh,0x62
  411578:	enter  0x122c,0x9f
  41157c:	mov    ah,0x13
  41157e:	mov    ah,BYTE PTR [ecx*8+0x1c621781]
  411585:	and    BYTE PTR [edi],al
  411587:	cmp    dh,cl
  411589:	jb     0x411582
  41158b:	xchg   ah,dh
  41158d:	xlat   BYTE PTR ds:[ebx]
  41158e:	mov    edi,0xc8af971e
  411593:	stos   DWORD PTR es:[edi],eax
  411594:	mov    eax,ds:0xcd035414
  411599:	and    DWORD PTR [eax+0x61],ebp
  41159c:	hlt    
  41159d:	adc    eax,DWORD PTR [ecx+ebp*1+0x9830b6d]
  4115a4:	rol    DWORD PTR [eax-0x2724bd11],1
  4115aa:	cmc    
  4115ab:	ins    BYTE PTR es:[edi],dx
  4115ac:	fistp  WORD PTR [eax-0x5d752ccb]
  4115b2:	pop    es
  4115b3:	adc    BYTE PTR ss:[eax-0x3b],0xaa
  4115b8:	(bad)  
  4115b9:	adc    al,0x14
  4115bb:	mov    eax,ds:0x6fffd460
  4115c0:	fisttp WORD PTR [esi+0x7f429dbf]
  4115c6:	dec    ebx
  4115c7:	(bad)
  4115ca:	aas    
  4115cb:	frstor [esi]
  4115cd:	adc    al,0xfe
  4115cf:	jmp    0xa1ca2435
  4115d4:	sub    bh,BYTE PTR [edi-0x3b]
  4115d7:	add    al,BYTE PTR [eax]
  4115d9:	add    bh,al
  4115db:	mov    ecx,0x13b931e7
  4115e0:	(bad)  
  4115e1:	aaa    
  4115e2:	ror    edx,0xf7
  4115e5:	(bad)  
  4115e6:	mov    ch,0xd7
  4115e8:	mov    edi,0x89b2f
  4115ed:	add    cl,bl
  4115ef:	xchg   dl,ch
  4115f1:	and    DWORD PTR [eax],0xfcffff14
  4115f7:	pop    esp
  4115f8:	push   esp
  4115f9:	mov    eax,DWORD PTR [ebp+0x51]
  4115fc:	mov    eax,edi
  4115fe:	imul   edx,ebp,0x77d840d
  411604:	add    BYTE PTR [eax],al
  411606:	xor    DWORD PTR [edx-0x32],eax
  411609:	cmp    eax,0x1dea7c
  41160e:	ret    
  41160f:	xor    BYTE PTR [ecx-0x74f84400],0x45
  411616:	mov    al,0x8e
  411618:	fiadd  WORD PTR [ecx]
  41161a:	xor    eax,0x9d750a4c
  41161f:	push   edx
  411620:	push   ecx
  411621:	call   0x3f05d4
  411626:	test   esi,0x8ba3db83
  41162c:	xchg   ebp,eax
  41162d:	add    BYTE PTR [edi+eax*1-0x7d],ch
  411631:	jge    0x411697
  411633:	pop    es
  411634:	je     0x41166e
  411636:	mov    ds:0xe98d067b,eax
  41163b:	fdivp  st(4),st
  41163d:	inc    DWORD PTR [eax]
  41163f:	add    BYTE PTR [ebx-0xc0b3122],dh
  411645:	jmp    0xaa15cd
  41164a:	mov    edx,edi
  41164c:	mov    bh,0xfd
  41164e:	out    0x3c,al
  411650:	cmp    dh,bl
  411652:	std    
  411653:	(bad)  
  411654:	mov    ecx,0x23fffcde
  411659:	or     al,0x0
  41165b:	add    BYTE PTR [esp+ecx*4],ch
  41165e:	std    
  41165f:	je     0x411684
  411661:	adc    ch,0x8b
  411664:	das    
  411665:	jns    0x4115ea
  411667:	call   0xfe5f5141
  41166c:	in     eax,dx
  41166d:	and    edx,DWORD PTR [esi+edi*8]
  411670:	cli    
  411671:	xchg   edi,eax
  411672:	ret    0xae13
  411675:	imul   ebx,DWORD PTR [eax+0x33615645],0x4f
  41167c:	push   eax
  41167d:	loopne 0x411652
  41167f:	dec    edi
  411680:	dec    eax
  411681:	out    dx,al
  411682:	adc    esi,DWORD PTR [edx]
  411684:	xchg   ebp,eax
  411685:	js     0x411660
  411687:	and    al,0xd5
  411689:	and    BYTE PTR [esi-0x57ceb641],al
  41168f:	cmovs  ebx,edi
  411692:	jecxz  0x4116e3
  411694:	pop    esi
  411695:	imul   esi,DWORD PTR [ebx-0xbcb3f02],0x3f
  41169c:	aad    0x9f
  41169e:	inc    edi
  41169f:	or     edx,DWORD PTR [eax-0x20]
  4116a2:	cwde   
  4116a3:	sbb    DWORD PTR [eax],eax
  4116a5:	add    bh,bh
  4116a7:	sub    al,0x2a
  4116a9:	popa   
  4116aa:	cmp    BYTE PTR [ebx+0x3c95841e],0x7
  4116b1:	xor    DWORD PTR [ebp-0x59fed6e0],0xffffffe0
  4116b8:	mov    BYTE PTR [edi+0x178b24e1],bh
  4116be:	outs   dx,BYTE PTR ds:[esi]
  4116bf:	xor    al,BYTE PTR [ecx-0x68df3684]
  4116c5:	add    eax,0xf6a2f8a6
  4116ca:	dec    edx
  4116cb:	sti    
  4116cc:	sar    BYTE PTR [edi-0x37469d5e],cl
  4116d2:	pop    ss
  4116d3:	sbb    BYTE PTR [edx],al
  4116d5:	push   ebp
  4116d6:	pop    esi
  4116d7:	add    al,0x83
  4116d9:	jecxz  0x411708
  4116db:	lahf   
  4116dc:	das    
  4116dd:	or     ecx,DWORD PTR [esi+0x75]
  4116e0:	push   cs
  4116e1:	mov    ecx,esp
  4116e3:	or     DWORD PTR [edx-0x34],esi
  4116e6:	out    0xb6,al
  4116e8:	mov    eax,DWORD PTR ss:[ecx+0x4e056201]
  4116ef:	leave  
  4116f0:	hlt    
  4116f1:	nop
  4116f2:	xchg   esi,eax
  4116f3:	add    DWORD PTR [ecx+0x4cd5db6],ebx
  4116f9:	clc    
  4116fa:	push   ecx
  4116fb:	dec    ecx
  4116fc:	cmp    ecx,DWORD PTR [esi+eiz*4]
  4116ff:	cs pop edi
  411701:	mov    edi,0xa91f9b6
  411706:	mov    ebp,0x1e961c
  41170b:	add    bl,cl
  41170d:	sub    DWORD PTR [eax+ebp*8],0xffffffd2
  411711:	test   BYTE PTR [eax+0x6bda3f90],dh
  411717:	cmp    ah,bl
  411719:	test   DWORD PTR [ebx+eax*1-0x2b],eax
  41171d:	or     DWORD PTR [edx-0x39],esp
  411720:	div    ch
  411722:	pop    edi
  411723:	ret    0x84c6
  411726:	out    dx,al
  411727:	mov    dl,dl
  411729:	icebp  
  41172a:	outs   dx,DWORD PTR ds:[esi]
  41172b:	ret    0x84e2
  41172e:	out    dx,al
  41172f:	mov    al,dl
  411731:	in     eax,dx
  411732:	pop    edi
  411733:	ret    0x84de
  411736:	out    dx,al
  411737:	mov    bl,BYTE PTR [edx]
  411739:	imul   BYTE PTR [ecx+0x2c]
  41173c:	mov    edx,0xb24369ba
  411741:	mov    ecx,0xf9c11e95
  411746:	inc    bl
  411748:	push   edx
  411749:	test   dh,ah
  41174b:	mov    cl,BYTE PTR [edx]
  41174d:	imul   BYTE PTR [ecx+0x47]
  411750:	into   
  411751:	jle    0x4116df
  411753:	push   es
  411754:	and    eax,0xee2a28dd
  411759:	mov    ds:0x1083b5d8,eax
  41175e:	(bad)  
  41175f:	(bad)  [esi]
  411761:	idiv   DWORD PTR [edi]
  411763:	jmp    0x6a48deb7
  411768:	popf   
  411769:	add    al,0x83
  41176b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176c:	add    DWORD PTR [esi+0x5dbf],eax
  411772:	hlt    
  411773:	sysexit 
  411775:	pop    esp
  411776:	cmp    eax,DWORD PTR [ecx]
  411778:	(bad)  
  411779:	cmp    al,0xc5
  41177b:	and    DWORD PTR [ebx],eax
  41177d:	ret    
  41177e:	enter  0xfe0f,0xff
  411782:	dec    ebp
  411783:	mov    DWORD PTR [edi],0x8b0942ae
  411789:	mov    BYTE PTR [ecx],0x16
  41178c:	clc    
  41178d:	sahf   
  41178e:	call   0x4e22959e
  411793:	mov    ah,0x23
  411795:	stc    
  411796:	dec    ebp
  411797:	inc    esi
  411798:	mov    dh,BYTE PTR [eax*8-0x377c09df]
  41179f:	jp     0x7457721e
  4117a5:	aaa    
  4117a6:	outs   dx,DWORD PTR ds:[esi]
  4117a7:	or     al,0xe8
  4117a9:	shr    eax,1
  4117ab:	paddd  mm4,QWORD PTR [ecx+edx*1-0x63]
  4117b0:	add    ecx,DWORD PTR [eax]
  4117b2:	test   eax,0x111a0123
  4117b7:	xchg   BYTE PTR [edi+0x1782dabd],bh
  4117bd:	push   edx
  4117be:	fnstcw WORD PTR [edi+eiz*8-0x1f03747]
  4117c5:	cli    
  4117c6:	push   ss
  4117c7:	mov    al,0x5d
  4117c9:	ret    0x255d
  4117cc:	pop    esp
  4117cd:	sub    ebx,ecx
  4117cf:	or     DWORD PTR [ebp+0x62],edx
  4117d2:	add    eax,0xb752ba
  4117d7:	add    BYTE PTR [ecx+0x40002ba8],al
  4117dd:	or     al,0x0
  4117df:	push   0x24
  4117e1:	in     eax,dx
  4117e2:	xor    edi,DWORD PTR [edx+esi*8-0x38cd01b6]
  4117e9:	test   BYTE PTR [ebx-0x4],bl
  4117ec:	sti    
  4117ed:	push   ss
  4117ee:	jbe    0x411802
  4117f0:	mov    esp,0xe7f08b05
  4117f5:	cli    
  4117f6:	or     eax,0xc3184
  4117fb:	add    BYTE PTR [edi+0x2f],ah
  4117fe:	rcl    BYTE PTR [eax],cl
  411800:	mov    esp,0xbf565305
  411805:	arpl   di,di
  411807:	push   edx
  411808:	sub    esi,DWORD PTR [edi+0x1a]
  41180b:	mov    edx,0xbcfffe23
  411811:	out    dx,al
  411812:	jae    0x41181c
  411814:	imul   edx,esi,0xffffff83
  411817:	rcr    BYTE PTR [ebx-0x43ff6479],0xb
  41181e:	push   ebx
  41181f:	push   esi
  411820:	iret   
  411821:	arpl   di,di
  411823:	push   edx
  411824:	sub    edi,DWORD PTR [eax+0x1a]
  411827:	jmp    DWORD PTR [ecx+0x1d7ff03]
  41182d:	retf   
  41182e:	or     eax,0xaf384
  411833:	add    BYTE PTR [ebx],ch
  411835:	js     0x411851
  411837:	inc    DWORD PTR [ecx+0x400ec7]
  41183d:	add    BYTE PTR [esi+ebp*8+0x74],bh
  411841:	or     bh,ah
  411843:	das    
  411844:	and    dl,BYTE PTR [esi]
  411846:	sub    al,0xb
  411848:	mov    DWORD PTR [ebp-0x78],ebx
  41184b:	out    dx,al
  41184c:	aad    0x59
  41184e:	mov    edx,0xfd72b70d
  411854:	neg    cl
  411856:	aad    0x68
  411858:	mov    DWORD PTR [ebp-0x33],ecx
  41185b:	je     0x411869
  41185d:	cmp    DWORD PTR ds:0x56089624,0xfffffff9
  411864:	div    BYTE PTR [esp+eax*8-0x76]
  411868:	loop   0x411854
  41186a:	int    0xa9
  41186c:	mov    esp,0x8b187f1f
  411871:	pop    ebp
  411872:	mov    cl,0xc8
  411874:	mov    eax,ds:0x9269b88
  411879:	mov    bh,0x93
  41187b:	or     DWORD PTR cs:[edi-0x50f6e365],ebp
  411882:	adc    al,0xaa
  411884:	xchg   cl,ah
  411886:	fisub  DWORD PTR [ebx]
  411888:	inc    esp
  411889:	rcr    ch,0x23
  41188c:	mov    dl,0xfe
  41188e:	stos   BYTE PTR es:[edi],al
  41188f:	fwait
  411890:	cwde   
  411891:	or     ebp,DWORD PTR [edx+ebx*4]
  411894:	rcl    DWORD PTR [ebx],0x4c
  411897:	(bad)  
  411898:	repz cmp bh,BYTE PTR [esi-0x1576fa0c]
  41189f:	xchg   DWORD PTR [eax-0x55ffffe9],edx
  4118a5:	adc    eax,0x3128feee
  4118aa:	mov    ch,0x55
  4118ac:	call   0xf3d0:0xe8ff0a15
  4118b3:	aas    
  4118b4:	aad    0x99
  4118b6:	sar    bl,0xbe
  4118b9:	jecxz  0x41184a
  4118bb:	add    edi,DWORD PTR [esi+0xb1390bb]
  4118c1:	mov    ecx,0xcf6af492
  4118c6:	fcomp  QWORD PTR [ecx+eax*8+0x4c]
  4118ca:	or     edi,edi
  4118cc:	loopne 0x41190a
  4118ce:	sbb    DWORD PTR [ecx+ebx*1],edx
  4118d1:	or     ecx,edi
  4118d3:	ret    
  4118d4:	dec    edx
  4118d5:	and    DWORD PTR [ebx-0x4e505ce9],0x4c
  4118dc:	adc    al,0xf1
  4118de:	call   0x695e7893
  4118e3:	and    BYTE PTR [edx],ah
  4118e5:	mov    eax,0xe5b68697
  4118ea:	in     al,dx
  4118eb:	add    eax,DWORD PTR [ebx-0x543e0926]
  4118f1:	rcr    BYTE PTR [ebx-0x10],1
  4118f4:	test   BYTE PTR [edx-0x2494095],dh
  4118fa:	cmp    BYTE PTR [esp+ebp*1],ch
  4118fd:	push   ebp
  4118fe:	int    0x1a
  411900:	push   esi
  411901:	dec    ecx
  411902:	cmp    al,0xc9
  411904:	lods   eax,DWORD PTR ds:[esi]
  411905:	xchg   esp,eax
  411906:	aam    0x91
  411908:	add    BYTE PTR [eax],al
  41190a:	lahf   
  41190b:	sub    BYTE PTR [ebx],0xf4
  41190e:	fcmovnbe st,st(4)
  411910:	js     0x411898
  411912:	call   0xb362:0xbd04120d
  411919:	sbb    al,bl
  41191b:	adc    DWORD PTR [eax-0x25694480],0xe8fe3183
  411925:	(bad)  
  411926:	fmul   QWORD PTR [ebx+esi*8]
  411929:	or     ebp,DWORD PTR [ebp-0x64e5c8fd]
  41192f:	and    edi,ebx
  411931:	mov    ds,WORD PTR [ecx]
  411933:	add    bh,BYTE PTR [esi+0x5d49d52b]
  411939:	sbb    ch,BYTE PTR [ebx]
  41193b:	and    ch,al
  41193d:	adc    BYTE PTR [ebx+0xd],bh
  411940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411941:	fsubp  st(1),st
  411943:	cmc    
  411944:	mov    edx,0x4965940
  411949:	or     BYTE PTR [ebp-0x41],ch
  41194c:	(bad)  
  41194d:	jl     0x41190e
  41194f:	or     ebp,DWORD PTR [edi-0x72fffc18]
  411955:	popf   
  411956:	sub    al,BYTE PTR [ecx]
  411958:	call   0xfe4cac06
  41195d:	fist   DWORD PTR [esi-0xa9da255]
  411963:	lods   eax,DWORD PTR ds:[esi]
  411964:	rcr    ecx,0xd6
  411967:	fdivr  DWORD PTR [edi-0x3ff92e57]
  41196d:	das    
  41196e:	add    BYTE PTR [eax],al
  411970:	adc    ecx,DWORD PTR ds:0x49dd6ac1
  411976:	lds    ebp,FWORD PTR [edx]
  411978:	rol    DWORD PTR [edi],1
  41197a:	mov    al,0xe8
  41197c:	cdq    
  41197d:	xchg   DWORD PTR [ecx+ebp*4],ecx
  411980:	xchg   edi,eax
  411981:	(bad)  
  411982:	jmp    eax
  411984:	xchg   BYTE PTR [ecx],cl
  411986:	ret    
  411987:	sbb    al,0x58
  411989:	and    DWORD PTR [edx-0x14763e3b],eax
  41198f:	ins    DWORD PTR es:[edi],dx
  411990:	ror    DWORD PTR [ecx],1
  411992:	add    BYTE PTR [edx],bl
  411994:	xchg   DWORD PTR [ebx-0x69136676],esi
  41199a:	add    ebx,edx
  41199c:	add    DWORD PTR [eax+0x24dca182],edi
  4119a2:	pop    ds
  4119a3:	mov    ah,0xcc
  4119a5:	or     edi,esi
  4119a7:	(bad)  
  4119a8:	fiadd  WORD PTR [edx-0x487d3abd]
  4119ae:	and    BYTE PTR [ecx-0x6bf0db44],0xec
  4119b5:	or     edi,esi
  4119b7:	(bad)  
  4119b9:	add    BYTE PTR [ebx+0x5],0x6d
  4119bd:	mov    bh,0x82
  4119bf:	and    esp,ebx
  4119c1:	and    al,0xff
  4119c3:	xor    ecx,esp
  4119c5:	or     ecx,DWORD PTR [edx+0x7280ac00]
  4119cb:	and    al,0x5c
  4119cd:	das    
  4119ce:	pop    edx
  4119cf:	and    al,0xcc
  4119d1:	add    al,BYTE PTR [ecx+eiz*2+0x83d0000]
  4119d8:	add    BYTE PTR [ecx],bh
  4119da:	adc    BYTE PTR [esi+eiz*1],ch
  4119dd:	(bad)  
  4119df:	pop    edx
  4119e0:	(bad)  
  4119e1:	jmp    FWORD PTR [ebp*1+0x42b80ff1]
  4119e8:	(bad)  
  4119e9:	(bad)  
  4119ea:	cmp    al,0x30
  4119ec:	pop    ebx
  4119ed:	or     BYTE PTR [eax+0x874fd1c],ch
  4119f3:	and    ch,bh
  4119f5:	je     0x411a0f
  4119f7:	sub    al,0xe6
  4119f9:	push   0x8a000817
  4119fe:	adc    al,0xdf
  411a00:	xor    al,0x1
  411a02:	in     al,dx
  411a03:	pop    es
  411a04:	lea    eax,[eax+ebx*8+0x29]
  411a08:	dec    esi
  411a09:	mov    DWORD PTR [eax-0x4d17d1d7],esi
  411a0f:	leave  
  411a10:	std    
  411a11:	push   DWORD PTR [edi-0x10]
  411a14:	xchg   DWORD PTR [eax+ebx*8+0x11],edi
  411a18:	cmp    ebx,edi
  411a1a:	ret    
  411a1b:	mov    ecx,DWORD PTR [edi]
  411a1d:	add    DWORD PTR [edi+eax*1+0x1f8874ff],ebp
  411a24:	mov    ebx,DWORD PTR [eax+ebx*4+0x4f]
  411a28:	std    
  411a29:	je     0x4119c3
  411a2b:	sub    esp,esi
  411a2d:	or     bh,BYTE PTR [edi]
  411a2f:	pop    es
  411a30:	add    BYTE PTR [ebx-0x7cddd468],cl
  411a36:	fsubr  DWORD PTR [ecx]
  411a38:	push   ss
  411a39:	add    BYTE PTR [eax],al
  411a3b:	add    BYTE PTR [edx+0x6c0f224a],bh
  411a41:	mov    esp,?
  411a43:	pmullw mm3,QWORD PTR [edi+esi*1-0x54de8d01]
  411a4b:	cmc    
  411a4c:	scas   eax,DWORD PTR es:[edi]
  411a4d:	xchg   edi,eax
  411a4e:	aas    
  411a4f:	mov    WORD PTR ds:0x56f70507,cs
  411a55:	loope  0x411a55
  411a57:	imul   ecx,DWORD PTR [edi],0xed23c6aa
  411a5d:	cdq    
  411a5e:	mov    esi,0xa047e923
  411a63:	mov    dl,BYTE PTR [ecx+0x3d]
  411a66:	mov    edi,?
  411a68:	xor    ah,BYTE PTR [ecx]
  411a6a:	mov    al,ds:0xc8d1584
  411a6f:	data16 fsub QWORD PTR [ebx-0x30]
  411a73:	push   cs
  411a74:	push   eax
  411a75:	mov    eax,ds:0x82d50002
  411a7a:	mov    eax,DWORD PTR [ebx+0x394b1]
  411a80:	aad    0xc2
  411a82:	cmp    BYTE PTR [edi+0x389c1a81],0x9a
  411a89:	clc    
  411a8a:	nop
  411a8b:	ins    BYTE PTR es:[edi],dx
  411a8c:	pop    eax
  411a8d:	fstp   st(7)
  411a8f:	push   edi
  411a90:	test   edx,eax
  411a92:	ds inc ebx
  411a94:	mov    cl,0x18
  411a96:	aad    0x29
  411a98:	pop    esp
  411a99:	in     al,0xdf
  411a9b:	cmp    ecx,edx
  411a9d:	or     eax,0x113e
  411aa2:	adc    eax,0xf1438b21
  411aa7:	xor    al,0x89
  411aa9:	inc    ebx
  411aaa:	stc    
  411aab:	adc    BYTE PTR [edx-0x41c2ee78],dh
  411ab1:	dec    al
  411ab3:	fs icebp 
  411ab5:	aas    
  411ab6:	aad    0xa5
  411ab8:	(bad)  
  411ab9:	and    ecx,ecx
  411abb:	test   eax,0xa1123bf
  411ac0:	shl    BYTE PTR cs:[esi-0x2afc1a47],0x9
  411ac8:	inc    ecx
  411ac9:	cld    
  411aca:	xchg   edx,eax
  411acb:	or     cl,BYTE PTR [ebp-0x80]
  411ace:	sub    dl,BYTE PTR [ebp-0x1a2124ef]
  411ad4:	fcom   QWORD PTR [ecx-0x205b8132]
  411ada:	out    0xb2,al
  411adc:	popa   
  411add:	xor    dl,BYTE PTR ds:[ebp+0xa43171c]
  411ae4:	lods   al,BYTE PTR ds:[esi]
  411ae5:	fcomip st,st(6)
  411ae7:	loopne 0x411a9d
  411ae9:	(bad)  
  411aeb:	ficomp WORD PTR [ecx]
  411aed:	pop    ss
  411aee:	sahf   
  411aef:	in     eax,0xe0
  411af1:	jmp    0x43c6:0xdf9ce01f
  411af8:	lods   al,BYTE PTR ds:[esi]
  411af9:	(bad)  
  411afb:	or     dh,ch
  411afd:	mov    edi,0xbf71f1b6
  411b02:	mov    dh,0xe5
  411b04:	out    0xb7,eax
  411b06:	add    BYTE PTR [eax],al
  411b08:	mov    dh,0xf9
  411b0a:	out    0xb7,eax
  411b0c:	mov    dh,0xf5
  411b0e:	jmp    0xd06c82d
  411b13:	cld    
  411b14:	rol    DWORD PTR [edi+0x9db172b],cl
  411b1a:	push   0xe718f697
  411b1f:	(bad)  
  411b20:	(bad)  [eax]
  411b22:	sbb    al,0xe0
  411b24:	fdivrp st(1),st
  411b26:	push   ds
  411b27:	dec    ebx
  411b28:	mov    ebx,0xbf3b6209
  411b2d:	or     al,0xd9
  411b2f:	cmp    ch,BYTE PTR [ebx-0x45083482]
  411b35:	pop    ds
  411b36:	jp     0x411b4e
  411b38:	fwait
  411b39:	xchg   edi,eax
  411b3a:	add    ch,bh
  411b3c:	mov    dl,0x35
  411b3e:	call   0xfe494244
  411b43:	push   dx
  411b45:	sub    eax,0xfcd75120
  411b4a:	std    
  411b4b:	push   esi
  411b4c:	retf   
  411b4d:	jl     0x411b73
  411b4f:	add    DWORD PTR [ecx-0x34b90cfe],edi
  411b55:	pop    es
  411b56:	jne    0x411b5d
  411b58:	xor    ecx,0x7eb3bef
  411b5e:	pop    esi
  411b5f:	(bad)  
  411b60:	pop    esp
  411b61:	int3   
  411b62:	pop    ecx
  411b63:	jb     0x411b5a
  411b65:	gs ret 0xd6e5
  411b69:	pop    esi
  411b6a:	mov    DWORD PTR ds:0xed570000,eax
  411b70:	clc    
  411b71:	bound  edx,QWORD PTR [ecx+0x44edfa8b]
  411b77:	adc    ch,BYTE PTR [edx-0x18]
  411b7a:	out    dx,al
  411b7b:	push   ds
  411b7c:	(bad)  
  411b7d:	imul   al
  411b7f:	repz add bh,BYTE PTR [ebx+0x44e39396]
  411b86:	xchg   esp,eax
  411b87:	pop    ebp
  411b88:	mov    ebp,ecx
  411b8a:	push   esp
  411b8b:	in     eax,dx
  411b8c:	clc    
  411b8d:	bound  edx,QWORD PTR [esi+0x44e5fa8b]
  411b93:	adc    ch,BYTE PTR [edx-0x17]
  411b96:	scas   al,BYTE PTR es:[edi]
  411b97:	add    bh,ah
  411b99:	mov    esi,0xfb02f3c0
  411b9e:	push   ss
  411b9f:	xchg   esp,eax
  411ba0:	jecxz  0x411bae
  411ba2:	adc    al,0x5b
  411ba4:	dec    edi
  411ba5:	adc    edx,esi
  411ba7:	jae    0x411ba8
  411ba9:	nop
  411baa:	xchg   ebp,eax
  411bab:	add    eax,0x5b1496fe
  411bb0:	dec    edi
  411bb1:	add    edx,ecx
  411bb3:	jae    0x411bb4
  411bb5:	inc    DWORD PTR [ebp+eiz*8-0x4]
  411bb9:	call   FWORD PTR [ebx]
  411bbb:	dec    ebx
  411bbc:	das    
  411bbd:	sar    BYTE PTR [edi],0x8a
  411bc0:	or     al,0xc0
  411bc2:	xor    cl,dl
  411bc4:	std    
  411bc5:	subps  xmm1,XMMWORD PTR [ecx+eax*8]
  411bc9:	sub    DWORD PTR [ecx+0x4c],0xffffffc3
  411bcd:	inc    ebx
  411bce:	jl     0x411bd8
  411bd0:	scas   al,BYTE PTR es:[edi]
  411bd1:	add    DWORD PTR [eax],eax
  411bd3:	add    BYTE PTR [edi-0x12137548],bh
  411bd9:	xor    DWORD PTR ds:0x510c6c02,esp
  411bdf:	xor    esp,edi
  411be1:	mov    dh,0x88
  411be3:	push   ebp
  411be4:	or     BYTE PTR [ebx+0x1d1988f8],dl
  411bea:	cmp    dl,0x2d
  411bed:	or     eax,0xc3d3886
  411bf2:	add    BYTE PTR [ebx+0x39640873],cl
  411bf8:	xor    al,0xd
  411bfa:	test   BYTE PTR [ebp*1+0x6c56000c],ch
  411c01:	sbb    eax,0xcc2f8814
  411c06:	std    
  411c07:	xor    ah,0xa
  411c0a:	or     eax,0xc8385
  411c0f:	add    BYTE PTR [ebx],cl
  411c11:	xchg   ebp,eax
  411c12:	add    DWORD PTR [ebp-0x377dd27f],ecx
  411c18:	sbb    esi,DWORD PTR [ebx+edx*1]
  411c1b:	ficomp WORD PTR [ebx]
  411c1d:	sbb    eax,0x87bbc081
  411c22:	add    DWORD PTR [ecx],eax
  411c24:	mov    esp,0x94858b0b
  411c29:	and    dh,bh
  411c2b:	(bad)  
  411c2c:	cld    
  411c2d:	xor    eax,0xf0d561f4
  411c32:	add    DWORD PTR [ebp+edx*4+0xfe9b1d],eax
  411c39:	add    BYTE PTR [eax],ch
  411c3b:	xchg   ecx,eax
  411c3c:	sub    eax,esi
  411c3e:	repnz icebp 
  411c40:	add    DWORD PTR [ebx+0x7310bc85],ecx
  411c46:	es data16 jle 0x411c21
  411c4a:	xor    BYTE PTR [eax+0x14],0x4f
  411c4e:	dec    esi
  411c4f:	das    
  411c50:	xchg   BYTE PTR [ebp+ecx*4+0x7dfe145e],bl
  411c57:	mov    al,0x9b
  411c59:	jmp    DWORD PTR [edx+0x75]
  411c5c:	inc    ecx
  411c5d:	jae    0x411bfb
  411c5f:	add    eax,DWORD PTR [edx+0x4f]
  411c62:	push   edx
  411c63:	(bad)  
  411c64:	and    DWORD PTR [eax+0x448a4090],ecx
  411c6a:	dec    ecx
  411c6b:	jp     0x411c2b
  411c6d:	test   DWORD PTR [eax-0x52],0xac3d4f11
  411c74:	gs (bad) 
  411c76:	sub    ch,BYTE PTR [ebp+0x41]
  411c79:	jae    0x411c43
  411c7b:	bswap  esi
  411c7d:	fild   DWORD PTR [ebx]
  411c7f:	mov    ah,0x1
  411c81:	mov    edx,DWORD PTR [esi]
  411c83:	mov    eax,ds:0xa1054486
  411c88:	sub    DWORD PTR [ebp+0x2e],ebx
  411c8b:	lock adc DWORD PTR [edi+0x447fe790],eax
  411c92:	in     eax,0xc8
  411c94:	inc    edi
  411c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c96:	jmp    0x59d8:0x8bdad5d7
  411c9d:	lock add BYTE PTR [eax],al
  411ca0:	fcmovb st,st(7)
  411ca2:	jg     0x411d18
  411ca4:	mov    ch,0xc8
  411ca6:	xchg   ecx,eax
  411ca7:	fmul   st(2),st
  411ca9:	mov    bh,0x1d
  411cab:	and    BYTE PTR ds:0xd504eb0a,ch
  411cb1:	or     DWORD PTR [ecx+ecx*4-0x76],ebp
  411cb5:	add    al,0x97
  411cb7:	adc    ebx,DWORD PTR [edx]
  411cb9:	pop    es
  411cba:	pop    ss
  411cbb:	or     BYTE PTR [edx-0x2509e0e4],ah
  411cc1:	or     DWORD PTR [edi],ebp
  411cc3:	rcl    esp,1
  411cc5:	or     bh,ah
  411cc7:	add    eax,DWORD PTR [edx]
  411cc9:	jo     0x411c70
  411ccb:	leave  
  411ccc:	or     DWORD PTR [eax],0x1f
  411ccf:	mov    cl,0x7b
  411cd1:	jge    0x411c8f
  411cd3:	jle    0x411cee
  411cd5:	neg    BYTE PTR [edx]
  411cd7:	sbb    dl,BYTE PTR [edi+0x1]
  411cda:	jmp    0xa12:0x278aca99
  411ce1:	mov    esp,DWORD PTR [esi]
  411ce3:	cld    
  411ce4:	stos   DWORD PTR es:[edi],eax
  411ce5:	icebp  
  411ce6:	(bad)  
  411ce7:	sub    al,0x4b
  411ce9:	push   es
  411cea:	arpl   WORD PTR [edi+edi*8],dx
  411ced:	cli    
  411cee:	pushf  
  411cef:	or     BYTE PTR [ebp+0x64],cl
  411cf2:	push   ds
  411cf3:	pop    ds
  411cf4:	out    dx,eax
  411cf5:	jae    0x411cdf
  411cf7:	mov    dh,0x80
  411cf9:	xchg   esp,eax
  411cfa:	fs sub al,0x21
  411cfd:	push   es
  411cfe:	pop    es
  411cff:	mov    ah,0x87
  411d01:	pop    edx
  411d02:	(bad)  
  411d03:	clc    
  411d04:	add    BYTE PTR [eax],al
  411d06:	(bad)  
  411d07:	sbb    ah,BYTE PTR [edi-0x37fea9fd]
  411d0d:	add    ah,BYTE PTR [edx+0x4c]
  411d10:	out    0xcb,al
  411d12:	cdq    
  411d13:	push   es
  411d14:	push   ebp
  411d15:	cli    
  411d16:	xchg   DWORD PTR [edx+0x3a],ebx
  411d19:	mov    edx,0x10af8c59
  411d1e:	jecxz  0x411d25
  411d20:	sbb    BYTE PTR [edx+ebp*8],bl
  411d23:	scas   al,BYTE PTR es:[edi]
  411d24:	out    0x3,eax
  411d26:	pop    eax
  411d27:	retf   0xe600
  411d2a:	dec    ebp
  411d2b:	dec    esi
  411d2c:	std    
  411d2d:	pop    ss
  411d2e:	loope  0x411d62
  411d30:	out    dx,eax
  411d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d32:	out    0x66,eax
  411d34:	mov    ah,BYTE PTR [esi+eax*8]
  411d37:	arpl   WORD PTR [ecx-0x60],bx
  411d3a:	adc    ebp,ebp
  411d3c:	pusha  
  411d3d:	mov    edx,esi
  411d3f:	or     DWORD PTR [eax+0x7313e8],esi
  411d45:	adc    ebx,ecx
  411d47:	outs   dx,DWORD PTR ds:[esi]
  411d48:	inc    DWORD PTR [eax-0x16ff1600]
  411d4e:	es or  al,cl
  411d51:	push   eax
  411d52:	daa    
  411d53:	enter  0xe900,0x2b
  411d57:	pop    esp
  411d58:	push   0x455805
  411d5d:	ret    
  411d5e:	(bad)  
  411d5f:	aaa    
  411d60:	fld    DWORD PTR [esi+0x5d]
  411d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d64:	adc    BYTE PTR [ecx+0x6cf890d6],ch
  411d6a:	add    BYTE PTR [eax],al
  411d6c:	out    0x78,eax
  411d6e:	xor    al,0x94
  411d70:	ret    
  411d71:	xor    eax,0x516f998
  411d76:	push   esp
  411d77:	xchg   ebx,eax
  411d78:	(bad)  
  411d79:	lock adc DWORD PTR [edi-0x66be239],edi
  411d80:	push   ss
  411d81:	add    eax,0xc422985
  411d86:	push   eax
  411d87:	dec    BYTE PTR [edx]
  411d89:	test   eax,0x5bd6a910
  411d8e:	push   ebp
  411d8f:	out    dx,al
  411d90:	retf   0xf08f
  411d93:	ins    BYTE PTR es:[edi],dx
  411d94:	fistp  QWORD PTR [ebp-0x1c]
  411d97:	cmp    DWORD PTR [eax+edi*4],ebp
  411d9a:	call   ebp
  411d9c:	loop   0x411d3e
  411d9e:	adc    BYTE PTR [ecx],ch
  411da0:	fldenv [ebx+0x5b]
  411da3:	add    BYTE PTR [ebx+0x7f5bc283],dh
  411da9:	mov    ebx,0xa6bd6a50
  411dae:	std    
  411daf:	out    0xe1,eax
  411db1:	push   ss
  411db2:	(bad)  
  411db3:	jmp    FWORD PTR [edi-0x45]
  411db6:	push   eax
  411db7:	push   0xffffffbc
  411db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dba:	std    
  411dbb:	out    0xfd,eax
  411dbd:	push   ss
  411dbe:	(bad)  
  411dbf:	jmp    FWORD PTR [edi-0x44]
  411dc2:	mov    ch,ah
  411dc4:	sub    eax,0x7c03e12a
  411dc9:	or     BYTE PTR [ecx+0x56],dl
  411dcc:	jmp    0x411d52
  411dce:	mov    ah,0x1e
  411dd0:	add    BYTE PTR [eax],al
  411dd2:	lock sbb bh,dh
  411dd5:	mov    DWORD PTR [ecx],edi
  411dd7:	adc    al,0x8a
  411dd9:	fld    DWORD PTR [ebx+edx*4]
  411ddc:	add    BYTE PTR fs:[ebp+eax*4-0x3b],bh
  411de1:	xor    ebp,DWORD PTR [esp+eax*4+0x1b11f4bc]
  411de8:	inc    BYTE PTR [eax-0x5c]
  411deb:	xchg   DWORD PTR [esi+0x0],esp
  411dee:	cmp    al,0x85
  411df0:	ret    
  411df1:	push   eax
  411df2:	xchg   esp,eax
  411df3:	stos   BYTE PTR es:[edi],al
  411df4:	data16 add BYTE PTR [eax+eiz*4],ch
  411df8:	shl    DWORD PTR [ebp+0x7c],0x8
  411dfc:	mov    edi,eax
  411dfe:	ins    BYTE PTR es:[edi],dx
  411dff:	sbb    DWORD PTR [esp+ebx*2],edx
  411e02:	push   ds
  411e03:	enter  0x82fd,0x51
  411e07:	adc    al,0x0
  411e09:	jbe    0x411e27
  411e0b:	test   DWORD PTR [edx+0x4],eax
  411e0e:	pop    edx
  411e0f:	lea    esi,ds:0x4e018800
  411e15:	(bad)  
  411e16:	stc    
  411e17:	outs   dx,DWORD PTR ds:[esi]
  411e18:	cmovo  edi,esp
  411e1b:	or     al,0xc0
  411e1d:	push   eax
  411e1e:	aad    0xdb
  411e20:	xchg   esp,eax
  411e21:	add    ecx,DWORD PTR [esi-0x55]
  411e24:	mov    cl,0xe7
  411e26:	push   esp
  411e27:	sub    eax,0xf5be0004
  411e2c:	jle    0x411db2
  411e2e:	sar    DWORD PTR [esi-0x36da01f0],0xca
  411e35:	pop    esi
  411e36:	add    BYTE PTR [eax],al
  411e38:	aad    0xf0
  411e3a:	mov    al,0x5d
  411e3c:	push   cs
  411e3d:	mov    edx,0x8d5e5444
  411e42:	test   bl,ah
  411e44:	popf   
  411e45:	inc    edx
  411e46:	mov    cl,0x52
  411e48:	add    edi,DWORD PTR [esi-0x6b]
  411e4b:	and    ebx,ebp
  411e4d:	cwde   
  411e4e:	test   al,0xa1
  411e50:	aad    0xf0
  411e52:	jl     0x411e19
  411e54:	ins    DWORD PTR es:[edi],dx
  411e55:	aas    
  411e56:	arpl   di,di
  411e58:	jp     0x411ecf
  411e5a:	inc    ecx
  411e5b:	jae    0x411e2a
  411e5d:	pop    eax
  411e5e:	mov    ah,0x71
  411e60:	aam    0xf0
  411e62:	push   esp
  411e63:	add    BYTE PTR [eax-0x5b],dl
  411e66:	in     eax,0x7
  411e68:	ins    DWORD PTR es:[edi],dx
  411e69:	into   
  411e6a:	arpl   di,di
  411e6c:	push   edx
  411e6d:	mov    ds:0x67aec27b,eax
  411e72:	es pop esp
  411e74:	push   ss
  411e75:	jmp    FWORD PTR [edx+ebp*8]
  411e78:	cs (bad) 
  411e7a:	jl     0x411e67
  411e7c:	push   esi
  411e7d:	or     eax,0xbf845009
  411e82:	mov    bh,0x8c
  411e84:	test   eax,0xe8e7f9cc
  411e89:	dec    esi
  411e8a:	add    DWORD PTR [eax],eax
  411e8c:	pop    esi
  411e8d:	sub    ebx,DWORD PTR [ecx]
  411e8f:	ja     0x411ec8
  411e91:	icebp  
  411e92:	add    DWORD PTR [ebp+edx*1+0x78e7e97d],eax
  411e99:	or     DWORD PTR ds:0xd5000005,esi
  411e9f:	mov    dh,0xe8
  411ea1:	sbb    BYTE PTR [esi-0x68e420d3],0xa7
  411ea8:	out    0x3,eax
  411eaa:	jnp    0x411e3b
  411eac:	stos   BYTE PTR es:[edi],al
  411ead:	stos   DWORD PTR es:[edi],eax
  411eae:	pop    edi
  411eaf:	in     al,dx
  411eb0:	sbb    al,0x43
  411eb2:	add    al,0xdf
  411eb4:	ret    0xba1b
  411eb7:	push   es
  411eb8:	out    dx,al
  411eb9:	add    al,0xd5
  411ebb:	mov    ecx,0x4dba42e8
  411ec0:	fiadd  WORD PTR [edx*8+0x542e8b9]
  411ec7:	stos   BYTE PTR es:[edi],al
  411ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec9:	inc    esi
  411eca:	pop    ss
  411ecb:	or     cl,BYTE PTR [edi-0xc]
  411ece:	push   es
  411ecf:	or     ecx,DWORD PTR [edi-0x18f71644]
  411ed5:	lods   al,BYTE PTR ds:[esi]
  411ed6:	xchg   edi,eax
  411ed7:	mov    cl,0xdf
  411ed9:	xchg   edi,eax
  411eda:	int3   
  411edb:	icebp  
  411edc:	shr    DWORD PTR [eax],1
  411ede:	aad    0x9
  411ee0:	xchg   DWORD PTR [eax+edx*4+0x46],eax
  411ee4:	out    0x5b,eax
  411ee6:	xlat   BYTE PTR ds:[ebx]
  411ee7:	jge    0x411ee9
  411ee9:	pushf  
  411eea:	mov    bh,BYTE PTR [edi+eiz*4+0x3]
  411eee:	cmp    eax,0xd5048a2f
  411ef3:	test   al,0x27
  411ef5:	inc    esi
  411ef6:	xchg   edi,eax
  411ef7:	or     DWORD PTR [edi+0x6709d503],edi
  411efd:	xor    eax,0x507863a
  411f02:	add    BYTE PTR [eax],al
  411f04:	test   DWORD PTR [edi-0x18],ebp
  411f07:	shl    BYTE PTR [edx+0x59],cl
  411f0a:	mov    bh,0xb3
  411f0c:	sbb    ebx,DWORD PTR [edi+ebp*2]
  411f0f:	hlt    
  411f10:	ror    BYTE PTR [ecx],cl
  411f12:	mov    al,ds:0xd3242
  411f17:	jge    0x411eee
  411f19:	jno    0x411f1b
  411f1b:	jmp    0xfdaba8f6
  411f20:	jecxz  0x411f3f
  411f22:	mov    ebp,?
  411f24:	push   ss
  411f25:	add    bl,BYTE PTR [ecx-0x56]
  411f28:	sbb    eax,0xba68ec8f
  411f2d:	stos   BYTE PTR es:[edi],al
  411f2e:	add    ch,cl
  411f30:	(bad)  
  411f31:	pop    esp
  411f32:	mov    DWORD PTR [ecx+ecx*8],ebx
  411f35:	push   edi
  411f36:	push   ebp
  411f37:	adc    DWORD PTR fs:[bp+si-0x16],ebp
  411f3c:	aas    
  411f3d:	inc    DWORD PTR [edi-0x2a164ee4]
  411f43:	push   ebp
  411f44:	(bad)  
  411f45:	or     DWORD PTR [ecx+ebp*4-0x1655725d],eax
  411f4c:	(bad)  
  411f4d:	or     DWORD PTR [ecx-0x3fc372de],ecx
  411f53:	pop    es
  411f54:	cwde   
  411f55:	or     al,0xd
  411f57:	pop    esp
  411f58:	push   ss
  411f59:	xchg   edx,eax
  411f5a:	inc    ebx
  411f5b:	ins    DWORD PTR es:[edi],dx
  411f5c:	jnp    0x411f16
  411f5e:	add    edi,ecx
  411f60:	pop    ebp
  411f61:	shl    DWORD PTR [ebx-0x1a],0x1e
  411f65:	out    0x0,eax
  411f67:	jmp    0xf5171f6c
  411f6c:	push   es
  411f6d:	push   0x4f
  411f6f:	or     eax,0x8ed5bcfd
  411f74:	mov    ebx,0xfdffd889
  411f79:	inc    ecx
  411f7a:	jae    0x411f65
  411f7c:	(bad)  
  411f7d:	call   0x64cc4661
  411f82:	jle    0x411f82
  411f84:	std    
  411f85:	push   ds
  411f86:	into   
  411f87:	pop    edx
  411f88:	call   0x7241f675
  411f8d:	in     eax,0x9f
  411f8f:	(bad)  
  411f90:	push   eax
  411f91:	add    BYTE PTR [ebx-0x3ffff4b],bl
  411f97:	mov    DWORD PTR [eax+eiz*4-0x1701f0f6],esi
  411f9e:	mov    DWORD PTR ds:0x9867fffe,ebp
  411fa4:	add    eax,0xda39559
  411fa9:	(bad)  
  411faa:	jg     0x411fa9
  411fac:	gs clc 
  411fae:	(bad)  
  411faf:	add    eax,0x24d2ff00
  411fb4:	pop    ecx
  411fb5:	repnz mov ecx,DWORD PTR [esi]
  411fb8:	add    eax,0x467cf00
  411fbe:	sbb    ecx,ecx
  411fc0:	stc    
  411fc1:	push   eax
  411fc2:	les    edx,FWORD PTR [edi+eiz*1]
  411fc5:	add    BYTE PTR [ebp+ecx*1+0x1bf2e833],bh
  411fcc:	(bad)  
  411fcd:	inc    DWORD PTR [eax]
  411fcf:	add    BYTE PTR [eax],dh
  411fd1:	inc    esi
  411fd2:	jno    0x411ffd
  411fd4:	or     DWORD PTR [ecx+0xf0bfe9d],ecx
  411fda:	dec    ebp
  411fdb:	jmp    DWORD PTR [ecx+0x6c400f48]
  411fe1:	mov    esp,0xf5c858c
  411fe6:	(bad)  
  411fe7:	jmp    FWORD PTR [esp+eiz*4]
  411fea:	imul   DWORD PTR [edx]
  411fec:	ins    BYTE PTR es:[edi],dx
  411fed:	or     al,0xfd
  411fef:	ss adc al,0xed
  411ff2:	out    dx,eax
  411ff3:	call   FWORD PTR [ebx+0x3074bd91]
  411ff9:	fnstcw WORD PTR [ebp-0x5dd015]
  411fff:	push   edi
  412000:	dec    ebx
  412001:	scas   al,BYTE PTR es:[edi]
  412002:	pop    edx
  412003:	leave  
  412004:	(bad)  
  412005:	adc    DWORD PTR [eax],eax
  412007:	push   ebp
  412008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412009:	sub    DWORD PTR [eax+0x5a2d5ec],eax
  41200f:	add    ch,dl
  412011:	ret    
  412012:	js     0x412030
  412014:	in     eax,0xe0
  412016:	sar    edi,0xa0
  412019:	xchg   edi,eax
  41201a:	xchg   edi,eax
  41201b:	lar    edi,WORD PTR [ebp-0x7]
  41201f:	mov    WORD PTR [eax+0x6feb42e],ss
  412025:	jae    0x41206c
  412027:	or     edi,DWORD PTR [edi-0x1a]
  41202a:	jle    0x412070
  41202c:	adc    DWORD PTR [edx+0x1c],eax
  41202f:	xor    ch,dl
  412031:	into   
  412032:	or     al,0x82
  412034:	add    BYTE PTR [eax],al
  412036:	cmp    ch,dl
  412038:	add    DWORD PTR [ebp-0x184e32f0],ecx
  41203e:	pusha  
  41203f:	xchg   BYTE PTR [esi+edi*8],cl
  412042:	push   ecx
  412043:	mov    cl,0x96
  412045:	adc    DWORD PTR [eax+0x1e],esp
  412048:	and    bh,ah
  41204a:	push   esp
  41204b:	dec    esi
  41204c:	or     al,0xfe
  41204e:	pop    ebp
  41204f:	xchg   esp,eax
  412050:	add    DWORD PTR [eax],eax
  412052:	aad    0x89
  412054:	add    DWORD PTR [ecx],0x447ef0d5
  41205a:	dec    ecx
  41205b:	and    DWORD PTR [edi*8-0x7cf387c2],ebx
  412062:	xchg   ebp,eax
  412063:	cmc    
  412064:	out    dx,eax
  412065:	mov    eax,gs
  412067:	push   esp
  412068:	sbb    DWORD PTR [ecx+0x38],esp
  41206b:	pusha  
  41206c:	or     al,0xb7
  41206e:	ja     0x412061
  412070:	add    DWORD PTR [eax],eax
  412072:	ins    BYTE PTR es:[edi],dx
  412073:	sar    bh,cl
  412075:	call   ebp
  412077:	jae    0x41201f
  412079:	out    0xd5,eax
  41207b:	ins    DWORD PTR es:[edi],dx
  41207c:	(bad)  
  41207d:	out    0xa5,eax
  41207f:	dec    eax
  412080:	test   al,0xac
  412082:	cmp    dh,BYTE PTR [eax]
  412084:	test   DWORD PTR [edi+0x7ef409a8],edi
  41208a:	mov    eax,ds:0x71cc0ff1
  41208f:	call   DWORD PTR [esi]
  412091:	sbb    ch,ah
  412093:	or     esp,edi
  412095:	add    edi,DWORD PTR [edi+0x15]
  412098:	je     0x412060
  41209a:	add    BYTE PTR [eax],al
  41209c:	dec    esi
  41209d:	pop    edx
  41209e:	ins    BYTE PTR es:[edi],dx
  41209f:	(bad)  
  4120a0:	es pop edx
  4120a2:	imul   BYTE PTR [edi]
  4120a4:	push   edi
  4120a5:	(bad)  
  4120a6:	fistp  DWORD PTR [ebx]
  4120a8:	push   0x5d0be69a
  4120ad:	inc    ebp
  4120ae:	mov    bh,0x79
  4120b0:	cdq    
  4120b1:	cmc    
  4120b2:	aaa    
  4120b3:	pushf  
  4120b4:	inc    ebx
  4120b5:	or     ah,bh
  4120b7:	add    edi,DWORD PTR [ebp-0x34f46aaf]
  4120bd:	xchg   edx,eax
  4120be:	mov    bh,0x7d
  4120c0:	dec    ecx
  4120c1:	add    ch,BYTE PTR [ebp+0x12]
  4120c4:	retf   
  4120c5:	test   DWORD PTR [ebp+0x4],ebp
  4120c8:	aad    0x9
  4120ca:	jb     0x412055
  4120cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120cd:	jae    0x4120ce
  4120cf:	(bad)  
  4120d0:	test   BYTE PTR [edx-0x75c5252],dl
  4120d6:	fs ss jecxz 0x41205e
  4120da:	push   ecx
  4120db:	add    al,0xd5
  4120dd:	or     edx,ebp
  4120df:	or     DWORD PTR [edi-0x39],ecx
  4120e2:	pop    edi
  4120e3:	mov    cl,0xcf
  4120e5:	inc    edx
  4120e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120e7:	xchg   edi,eax
  4120e8:	out    dx,al
  4120e9:	or     ch,BYTE PTR [eax]
  4120eb:	jge    0x4120fe
  4120ed:	cli    
  4120ee:	addr16 mov edi,ecx
  4120f1:	or     esp,ebx
  4120f3:	in     eax,0xec
  4120f5:	adc    eax,0x598ec15c
  4120fa:	je     0x4120be
  4120fc:	(bad)  
  4120fd:	pop    ecx
  4120fe:	ds icebp 
  412100:	add    BYTE PTR [eax],al
  412102:	out    0x17,al
  412104:	add    BYTE PTR [ecx-0x223b752a],ch
  41210a:	push   ebp
  41210b:	mov    esi,0x45abf273
  412110:	shl    BYTE PTR [eax-0x29],1
  412113:	mov    DWORD PTR [ebx-0x1e],0x623ef2d1
  41211a:	xlat   BYTE PTR ds:[ebx]
  41211b:	inc    edx
  41211c:	inc    ebx
  41211d:	sbb    DWORD PTR [esi+0xd],esp
  412120:	mov    DWORD PTR [esi+eax*8-0x379737cd],ebp
  412127:	jle    0x412163
  412129:	loopne 0x412101
  41212b:	ja     0x412157
  41212d:	and    BYTE PTR [esi+ebp*8+0x71],bl
  412131:	add    DWORD PTR [edx-0x39],esp
  412134:	sub    DWORD PTR [ecx+eax*8],ebp
  412137:	jo     0x412151
  412139:	xor    BYTE PTR [eax-0xc],al
  41213c:	not    DWORD PTR [edx+0x11]
  41213f:	adc    eax,0xed65be50
  412144:	push   esi
  412145:	mov    dh,0x3
  412147:	mov    ah,al
  412149:	fst    QWORD PTR [eax+0x15]
  41214c:	pop    eax
  41214d:	rcl    BYTE PTR [ebp-0x7c5ed607],1
  412153:	in     eax,dx
  412154:	daa    
  412155:	sub    al,0xc1
  412157:	xchg   DWORD PTR [ebx-0x67],eax
  41215a:	jle    0x4120e4
  41215c:	(bad)  
  41215d:	loope  0x4120fa
  41215f:	hlt    
  412160:	jb     0x4121d0
  412162:	push   esi
  412163:	jle    0x41216e
  412165:	jmp    0x49a6216a
  41216a:	mov    esp,DWORD PTR [ecx+ebp*4]
  41216d:	dec    esp
  41216e:	push   0x1
  412170:	cmp    cl,BYTE PTR [esi+0x45dd557b]
  412176:	clc    
  412177:	inc    ecx
  412178:	in     eax,0xed
  41217a:	std    
  41217b:	dec    esi
  41217c:	push   ebp
  41217d:	mov    ebp,0x10e20073
  412182:	je     0x41217c
  412184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412185:	adc    ebp,ecx
  412187:	inc    DWORD PTR [ebx]
  412189:	push   ds
  41218a:	add    bh,bh
  41218c:	add    edx,DWORD PTR [eax]
  41218e:	push   ebx
  41218f:	call   0x3f3658
  412194:	inc    esi
  412195:	icebp  
  412196:	push   ebp
  412197:	push   eax
  412198:	mov    ch,0xc9
  41219a:	icebp  
  41219b:	lea    edi,[ecx]
  41219d:	cmp    DWORD PTR [ebp-0x18],ecx
  4121a0:	cmp    ah,BYTE PTR [edx]
  4121a2:	(bad)  
  4121a3:	inc    DWORD PTR [ebp-0x537a0a37]
  4121a9:	inc    DWORD PTR [ecx-0x1ecfd1e]
  4121af:	xor    BYTE PTR [ecx-0x13bc2e6b],0x7
  4121b6:	jne    0x4121bf
  4121b8:	mov    esi,0xbcf5e82e
  4121bd:	or     BYTE PTR [eax],al
  4121bf:	lea    ecx,[ecx+0x6a]
  4121c2:	cld    
  4121c3:	inc    DWORD PTR [ebx-0x539e4ce3]
  4121c9:	or     BYTE PTR [ebx+0x3c000045],cl
  4121cf:	mov    dh,0x65
  4121d1:	xchg   edi,eax
  4121d2:	mov    esp,0x7a8b0008
  4121d7:	mov    ch,0xe5
  4121d9:	xchg   edi,eax
  4121da:	adc    BYTE PTR [ebx],dl
  4121dc:	dec    BYTE PTR [ebx-0x7be61f]
  4121e2:	mov    edi,esp
  4121e4:	mov    WORD PTR [ebp-0x14],es
  4121e7:	mov    ch,0x65
  4121e9:	add    al,al
  4121eb:	(bad)  
  4121ec:	std    
  4121ed:	addr16 jge 0x4121f8
  4121f0:	add    BYTE PTR [eax+0x1349ecf3],al
  4121f6:	sub    al,0x8
  4121f8:	mov    eax,ebx
  4121fa:	aad    0x5b
  4121fc:	sub    ebx,DWORD PTR [ecx]
  4121fe:	cs dec esp
  412200:	inc    ebx
  412201:	call   0x431476
  412206:	push   eax
  412207:	gs sar ch,1
  41220a:	cmp    dh,BYTE PTR [ebx]
  41220c:	mov    ah,0x8c
  41220e:	push   0x2afe0b56
  412213:	sbb    dh,BYTE PTR [ecx+0x7b1b22e8]
  412219:	je     0x412238
  41221b:	addr16 das 
  41221d:	out    0x1a,eax
  41221f:	or     DWORD PTR [edi],eax
  412221:	(bad)  
  412222:	push   esp
  412223:	add    eax,DWORD PTR [eax+ecx*8]
  412226:	aad    0xf2
  412228:	(bad)
  41222c:	test   al,0x8a
  41222e:	push   0x447cfa
  412233:	add    cl,ah
  412235:	(bad)  
  412236:	test   eax,0x86f0c32
  41223b:	add    ecx,edx
  41223d:	jge    0x412281
  41223f:	imul   edx,edi,0x3fc57b2a
  412245:	icebp  
  412246:	fadd   st(0),st
  412248:	lods   eax,DWORD PTR ds:[esi]
  412249:	and    DWORD PTR [edi],0xfffffffe
  41224c:	mov    edx,0x45b74fe4
  412251:	xor    eax,0xa457ffc4
  412256:	add    dh,BYTE PTR [ebp-0x75]
  412259:	js     0x412201
  41225b:	test   DWORD PTR [eax+0x2e],0x66604ffc
  412262:	gs sti 
  412264:	mov    al,BYTE PTR [ecx+esi*4+0x7a75188a]
  41226b:	mov    ah,0x59
  41226d:	jne    0x412277
  41226f:	(bad)  
  412270:	jge    0x41224d
  412272:	sbb    edi,esi
  412274:	push   0xa
  412276:	jb     0x41228b
  412278:	pop    ecx
  412279:	hlt    
  41227a:	aam    0xf2
  41227c:	dec    ecx
  41227d:	test   DWORD PTR [ebx-0x4804acfa],ecx
  412283:	sbb    ecx,DWORD PTR [eax+0x68]
  412286:	out    0x3,eax
  412288:	sub    al,0x39
  41228a:	or     BYTE PTR ds:[ebx],bh
  41228d:	(bad)  
  41228e:	lods   al,BYTE PTR ds:[esi]
  41228f:	sti    
  412290:	mov    ds:0x91769653,al
  412295:	mov    DWORD PTR [edi+0x2200009b],esi
  41229b:	mov    edi,0x9b2d03aa
  4122a0:	sub    eax,DWORD PTR [edx]
  4122a2:	aad    0x8f
  4122a4:	das    
  4122a5:	int3   
  4122a6:	add    DWORD PTR [ecx],0xf1ab017c
  4122ac:	adc    ebx,DWORD PTR [ebx+edi*8]
  4122af:	cli    
  4122b0:	fs jle 0x4122e9
  4122b3:	std    
  4122b4:	out    dx,al
  4122b5:	pop    es
  4122b6:	call   0xdefa:0xe2a2b3f1
  4122bd:	xchg   ecx,eax
  4122be:	loop   0x4122b1
  4122c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122c1:	sbb    edx,ebx
  4122c3:	cli    
  4122c4:	pop    esp
  4122c5:	xchg   ecx,eax
  4122c6:	mov    dl,0xf1
  4122c8:	fistp  DWORD PTR [edx-0x3d]
  4122cb:	cli    
  4122cc:	arpl   WORD PTR [ebx],bp
  4122ce:	inc    ecx
  4122cf:	or     esp,DWORD PTR [ecx+edx*4-0x42]
  4122d3:	icebp  
  4122d4:	fistp  WORD PTR [edx-0x55]
  4122d7:	cli    
  4122d8:	pop    edi
  4122d9:	and    eax,0x1ae7faa2
  4122de:	int3   
  4122df:	mov    WORD PTR [eax+ebx*1],ds
  4122e2:	jp     0x4122e4
  4122e4:	inc    edx
  4122e5:	pop    es
  4122e6:	mov    esi,DWORD PTR [esi]
  4122e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ea:	and    BYTE PTR [edi-0x50],bl
  4122ed:	inc    edx
  4122ee:	(bad)  
  4122ef:	or     DWORD PTR [eax],eax
  4122f1:	sbb    al,0xee
  4122f3:	out    dx,al
  4122f4:	jg     0x412373
  4122f6:	or     DWORD PTR [ecx],ecx
  4122f8:	add    cl,ch
  4122fa:	daa    
  4122fb:	push   esp
  4122fc:	push   ebp
  4122fd:	jb     0x4122ff
  4122ff:	add    cl,al
  412301:	aaa    
  412302:	std    
  412303:	mov    edi,0x60f07dd1
  412308:	fs (bad) 
  41230a:	std    
  41230b:	fsubr  QWORD PTR [esi-0x4216bfe8]
  412311:	push   ds
  412312:	inc    esi
  412313:	pusha  
  412314:	pop    esp
  412315:	xacquire xchg DWORD PTR [edx+ebx*8+0x57f6f13f],ebp
  41231d:	mov    ch,0x0
  41231f:	jmp    0x1584b1fa
  412324:	nop
  412325:	inc    ebp
  412326:	call   0xb54c242d
  41232b:	icebp  
  41232c:	push   edi
  41232d:	add    DWORD PTR [ebx],ecx
  41232f:	jne    0x412333
  412331:	xchg   edi,esi
  412333:	in     al,0x62
  412335:	add    eax,DWORD PTR [ecx-0x3ec128d7]
  41233b:	pop    ebx
  41233c:	mov    ebp,0x4c12f88f
  412341:	dec    bh
  412343:	(bad)  
  412344:	lahf   
  412345:	int3   
  412346:	je     0x412339
  412348:	dec    ebp
  412349:	push   ecx
  41234a:	add    al,BYTE PTR [edx]
  41234c:	(bad)  
  41234d:	jnp    0x41235d
  41234f:	inc    edi
  412350:	push   esi
  412351:	inc    ecx
  412352:	or     edi,DWORD PTR [ecx+esi*4]
  412355:	outs   dx,DWORD PTR ds:[esi]
  412356:	xor    eax,0x72027eac
  41235c:	sbb    DWORD PTR [eax+eax*8-0x7b9e015],ecx
  412363:	add    BYTE PTR fs:[eax],al
  412366:	mov    al,BYTE PTR [esi+0x9d6e904]
  41236c:	mov    eax,DWORD PTR [eax]
  41236e:	or     DWORD PTR [ecx],0x14f84588
  412374:	dec    ebp
  412375:	jmp    0xbf60:0xc0810feb
  41237c:	test   bh,bh
  41237e:	sub    al,0xfe
  412381:	jne    0x412387
  412383:	je     0x41234b
  412385:	call   0x3f5587
  41238a:	mov    bh,0xb1
  41238c:	icebp  
  41238d:	mov    esp,DWORD PTR [ecx+0x5]
  412390:	mov    BYTE PTR [ebx*4+0x2f74bd89],al
  412397:	je     0x4123dd
  412399:	clc    
  41239a:	mov    bh,0xb1
  41239c:	icebp  
  41239d:	lea    esi,[eax]
  41239f:	mov    es,WORD PTR [edx+0x6892c38]
  4123a5:	mov    ebp,DWORD PTR [edx*1+0xfdbceb9]
  4123ac:	inc    BYTE PTR [ebp-0x2c]
  4123af:	lds    ebx,FWORD PTR [esp+edi*8-0x15]
  4123b3:	mov    ch,BYTE PTR [ecx-0x1]
  4123b6:	jmp    0x4123c6
  4123b8:	cmp    BYTE PTR [ebp-0x1c],0xe
  4123bc:	je     0x4123d7
  4123be:	xor    edi,DWORD PTR [ecx+0xcece1ed]
  4123c4:	add    cl,ch
  4123c6:	mov    esp,0xb
  4123cb:	add    BYTE PTR [edi],dh
  4123cd:	mov    ecx,0x1a198df5
  4123d2:	in     eax,0xd1
  4123d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d5:	push   cs
  4123d6:	(bad)  
  4123d7:	jmp    0x41237c
  4123d9:	(bad)  
  4123db:	cmp    ecx,edi
  4123dd:	add    eax,0xd99860e
  4123e2:	add    BYTE PTR [eax],al
  4123e4:	jae    0x41239e
  4123e6:	stc    
  4123e7:	add    ebp,edx
  4123e9:	loop   0x4123ec
  4123eb:	add    BYTE PTR [ebp+eax*1+0x18],bl
  4123ef:	mov    bl,BYTE PTR [eax]
  4123f1:	ja     0x41246a
  4123f3:	dec    esp
  4123f4:	imul   ecx,ecx,0x66e207c5
  4123fa:	pop    ebx
  4123fb:	jmp    FWORD PTR [edx-0x1e]
  4123fe:	js     0x412403
  412400:	int    0xc8
  412402:	retf   0xca37
  412405:	outs   dx,BYTE PTR ds:[esi]
  412406:	call   DWORD PTR [bp+si-0x1e]
  41240a:	mov    cl,0xfe
  41240c:	loopne 0x412488
  41240e:	repnz aas 
  412410:	aad    0x7b
  412412:	(bad)  
  412413:	jmp    0x412463
  412415:	cmp    dh,BYTE PTR [edi+0x44]
  412418:	sub    DWORD PTR [ebx+0x0],ebp
  41241b:	push   es
  41241c:	pop    eax
  41241d:	popf   
  41241e:	sbb    edi,esp
  412420:	xchg   edi,eax
  412421:	xor    DWORD PTR [ebx],eax
  412423:	dec    BYTE PTR [esi+0x4a]
  412426:	jg     0x412422
  412428:	adc    ch,bh
  41242a:	jge    0x4123b7
  41242c:	aad    0xe2
  41242e:	add    DWORD PTR [ebx],edi
  412430:	add    BYTE PTR [eax],al
  412432:	and    bh,BYTE PTR [eax-0x5c]
  412435:	gs dec esi
  412437:	out    dx,al
  412438:	push   es
  412439:	aaa    
  41243a:	jns    0x4123de
  41243c:	add    DWORD PTR [ebp-0x1f965e0],ecx
  412442:	loop   0x41241d
  412444:	push   ss
  412445:	loop   0x41241b
  412447:	loop   0x4124c1
  412449:	lds    ebx,FWORD PTR [esi+0x56]
  41244c:	sbb    al,0x4f
  41244e:	retf   0x31f
  412451:	adc    al,0x35
  412453:	rol    ecx,cl
  412455:	call   DWORD PTR [ecx-0x5f]
  412458:	lea    eax,[edi]
  41245a:	sbb    ah,BYTE PTR [esp+eax*1+0x17]
  41245e:	daa    
  41245f:	sahf   
  412460:	sbb    BYTE PTR ds:0x78ba0a4e,bl
  412466:	mov    bh,dh
  412468:	repz push es
  41246a:	into   
  41246b:	ins    DWORD PTR es:[edi],dx
  41246c:	daa    
  41246d:	add    al,0x51
  41246f:	retf   0xf514
  412472:	dec    edi
  412473:	dec    ebp
  412474:	cmp    DWORD PTR [eax+0x9],0x2
  412478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412479:	mov    esi,0x3e7ee82
  41247e:	aad    0x80
  412480:	call   0xdc538805
  412485:	hlt    
  412486:	dec    edi
  412487:	dec    ebp
  412488:	pop    ebx
  412489:	js     0x41242c
  41248b:	add    DWORD PTR [esi],ebp
  41248d:	mov    esi,0x3e7ed3a
  412492:	aad    0x80
  412494:	call   0xb9412511
  412499:	loope  0x41250d
  41249b:	inc    eax
  41249c:	cmp    al,BYTE PTR ds:0x702b0441
  4124a2:	push   0xffffff86
  4124a4:	xor    cl,BYTE PTR [edx]
  4124a6:	pushf  
  4124a7:	in     al,0xe7
  4124a9:	imul   BYTE PTR [edx-0x42]
  4124ac:	dec    BYTE PTR ds:0x830ebe16
  4124b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b3:	pop    es
  4124b4:	call   0xb58b:0xcb0bac32
  4124bb:	add    al,0xf3
  4124bd:	test   BYTE PTR [edx],0xfc
  4124c0:	adc    ecx,DWORD PTR [ebp-0x9]
  4124c3:	and    edx,esp
  4124c5:	mul    bh
  4124c7:	mov    ss,WORD PTR [esi-0x367e8d0f]
  4124cd:	loope  0x412482
  4124cf:	in     eax,dx
  4124d0:	enter  0x45f6,0x8f
  4124d4:	push   ss
  4124d5:	cli    
  4124d6:	bound  ebx,QWORD PTR es:[ecx+eax*8]
  4124da:	test   eax,0x5cd508
  4124df:	bound  esp,QWORD PTR [ebp+0x58b1e488]
  4124e5:	in     eax,0x1c
  4124e7:	out    dx,al
  4124e8:	(bad)  
  4124e9:	or     DWORD PTR [ecx+0x37],edx
  4124ec:	cs add al,BYTE PTR fs:[ecx]
  4124f0:	push   0x716a85a8
  4124f5:	cdq    
  4124f6:	adc    al,ch
  4124f8:	(bad)  
  4124f9:	mov    es,WORD PTR [ebp+eax*8+0x0]
  4124fd:	add    dh,cl
  4124ff:	mov    al,al
  412501:	cld    
  412502:	fmul   QWORD PTR [ecx-0x19]
  412505:	mov    dl,0xd9
  412507:	or     DWORD PTR [eax],eax
  412509:	jb     0x4124ff
  41250b:	add    DWORD PTR [ecx+0x41cf1904],eax
  412511:	jmp    0x63015dec
  412516:	adc    ah,cl
  412518:	fst    DWORD PTR [esi+edx*8-0x9]
  41251c:	mov    DWORD PTR [ecx+0x60],eax
  41251f:	jne    0x412545
  412521:	fstp   DWORD PTR [ebp-0xc]
  412524:	or     eax,0x92065
  412529:	jmp    0x9dca3259
  41252e:	mov    edx,0xda968119
  412533:	sbb    DWORD PTR ds:0x91d67,ecx
  412539:	jmp    0x1236a5e1
  41253e:	iret   
  41253f:	out    0xfd,eax
  412541:	neg    BYTE PTR [ebx-0x7]
  412544:	xor    edi,0xffffffc7
  412547:	(bad)  
  412548:	ret    0xd6e9
  41254b:	or     DWORD PTR [esi-0x2f],edx
  41254e:	mov    al,0xf0
  412550:	std    
  412551:	(bad)  
  412552:	push   ebx
  412553:	inc    esi
  412554:	and    al,0xf5
  412556:	xlat   BYTE PTR ds:[ebx]
  412557:	add    esi,DWORD PTR [ebp-0x7e9c8c00]
  41255d:	fucomi st,st(1)
  41255f:	das    
  412560:	xchg   DWORD PTR [edi+0x0],eax
  412563:	add    BYTE PTR [eax-0x42efb166],dh
  412569:	mov    eax,gs
  41256b:	adc    ah,al
  41256d:	out    0xf9,al
  41256f:	add    BYTE PTR [ecx+eiz*8+0x3a],bh
  412573:	retf   0x863
  412576:	mov    bh,al
  412578:	stc    
  412579:	pop    es
  41257a:	je     0x412583
  41257c:	pop    ss
  41257d:	out    dx,al
  41257e:	add    BYTE PTR [eax],al
  412580:	jl     0x412566
  412582:	or     ecx,DWORD PTR [ebp+0x501421b8]
  412588:	idiv   DWORD PTR [edi+0x7f175e8]
  41258e:	dec    BYTE PTR [edi]
  412590:	imul   edx,ecx,0x53
  412593:	call   0x3d0bd4
  412598:	mov    eax,ds:0x2d4824b4
  41259d:	or     DWORD PTR [eax],eax
  41259f:	call   0x3e44a3
  4125a4:	adc    al,0xf
  4125a6:	std    
  4125a7:	jmp    FWORD PTR [edx+ebx*4]
  4125aa:	test   BYTE PTR [eax+eiz*4],ah
  4125ad:	or     eax,0x9a4c0000
  4125b2:	inc    esp
  4125b3:	and    al,0x34
  4125b5:	pop    ecx
  4125b6:	call   0xfe48fad4
  4125bb:	mov    ebp,DWORD PTR [eax]
  4125bd:	sub    eax,0x2d588314
  4125c2:	cmp    BYTE PTR [eax],al
  4125c4:	jne    0x412612
  4125c6:	and    al,0x20
  4125c8:	add    BYTE PTR [eax],al
  4125ca:	(bad)  
  4125cb:	aam    0xd6
  4125cd:	inc    ebx
  4125ce:	in     al,dx
  4125cf:	jg     0x412615
  4125d1:	and    al,0xec
  4125d3:	test   BYTE PTR [esp-0x2b],al
  4125d7:	and    cl,BYTE PTR [ecx-0x72e106bc]
  4125dd:	inc    esp
  4125de:	icebp  
  4125df:	out    dx,al
  4125e0:	mov    al,BYTE PTR [ecx+edi*8-0xa]
  4125e4:	mov    es,WORD PTR [ecx+esi*8+0xa]
  4125e8:	push   esp
  4125e9:	dec    sp
  4125eb:	push   es
  4125ec:	sub    BYTE PTR [eax],ah
  4125ee:	dec    esp
  4125ef:	push   ss
  4125f0:	sub    BYTE PTR [eax],ch
  4125f2:	call   0x42e0:0x342c282e
  4125f9:	add    BYTE PTR [edx+0x6b30282e],bl
  4125ff:	cld    
  412600:	inc    edx
  412601:	add    BYTE PTR [ebp-0x62],bh
  412604:	mov    bh,0x0
  412606:	aad    0x14
  412608:	in     al,dx
  412609:	mov    gs,WORD PTR [ebp+0x63]
  41260c:	dec    DWORD PTR [ecx+0x7c8cfaf8]
  412612:	stc    
  412613:	repnz mov ebp,es
  412616:	pop    esi
  412617:	daa    
  412618:	in     al,dx
  412619:	loopne 0x41264c
  41261b:	inc    ebx
  41261c:	inc    DWORD PTR [edi-0x7cebf96f]
  412622:	adc    eax,0x2a0786e3
  412627:	cmp    edi,edi
  412629:	cmp    esi,0xffffffbd
  41262c:	push   cs
  41262d:	std    
  41262e:	add    BYTE PTR [eax],al
  412630:	out    0x1a,al
  412632:	addr16 call 0xe894394a
  412638:	je     0x412644
  41263a:	(bad)  
  41263b:	std    
  41263c:	in     eax,dx
  41263d:	push   edi
  41263e:	cld    
  41263f:	std    
  412640:	cli    
  412641:	or     bh,BYTE PTR [eax+0x24]
  412644:	int    0x1a
  412646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412647:	mov    ebp,0xc034e2d4
  41264c:	add    BYTE PTR [esp+ebx*2+0x4408f089],0xc6
  412654:	(bad)  [ecx]
  412656:	xor    al,0x8d
  412658:	mov    ecx,0x4f33c387
  41265d:	add    ah,BYTE PTR [edi-0x3e]
  412660:	add    eax,0x5ff43482
  412665:	inc    edx
  412666:	jmp    0xed8b867b
  41266b:	pop    eax
  41266c:	dec    edx
  41266d:	pusha  
  41266e:	out    0x8b,al
  412670:	push   cs
  412671:	stc    
  412672:	inc    eax
  412673:	stc    
  412674:	mov    al,BYTE PTR [eax-0x7b2f9250]
  41267a:	adc    al,0xd4
  41267c:	mov    esp,ecx
  41267e:	pop    edi
  41267f:	inc    esi
  412680:	xchg   DWORD PTR [edi+0x2c],edi
  412683:	or     al,0x5a
  412685:	dec    ebp
  412686:	jp     0x412616
  412688:	push   ss
  412689:	cli    
  41268a:	pop    ss
  41268b:	xor    eax,0x164ae295
  412690:	aad    0x9
  412692:	imul   eax,ebx,0x0
  412695:	add    al,ah
  412697:	lea    eax,[esi+0x3]
  41269a:	aad    0x9
  41269c:	fs inc esi
  41269e:	and    eax,0x52dd1957
  4126a3:	dec    ebp
  4126a4:	aas    
  4126a5:	enter  0xf996,0xd7
  4126a9:	add    edx,ebp
  4126ab:	or     DWORD PTR [edx+0x46],esp
  4126ae:	sbb    eax,0xd8de780
  4126b3:	retf   0x70f
  4126b6:	fnstcw WORD PTR [eax+0x67]
  4126b9:	loop   0x412693
  4126bb:	sub    DWORD PTR [eax+eax*1+0x3588c954],0x848a15
  4126c6:	outs   dx,BYTE PTR ds:[esi]
  4126c7:	jnp    0x4126a0
  4126c9:	adc    DWORD PTR [esi-0x3ac0ff0e],0xffffffbb
  4126d0:	mov    edi,0x5cff6850
  4126d5:	(bad)  
  4126d7:	jle    0x41271b
  4126d9:	sbb    edx,ebx
  4126db:	mov    ebx,0x8196d7d1
  4126e0:	or     al,0x1b
  4126e2:	dec    edi
  4126e3:	push   esi
  4126e4:	std    
  4126e5:	imul   BYTE PTR [eax-0x40]
  4126e8:	(bad)  
  4126e9:	stos   BYTE PTR es:[edi],al
  4126ea:	pop    ecx
  4126eb:	sbb    eax,0x7d996d2f
  4126f0:	or     dh,bl
  4126f2:	pusha  
  4126f3:	ror    BYTE PTR [eax-0x3e0c3613],0x9e
  4126fa:	add    BYTE PTR [eax],al
  4126fc:	sbb    al,0xf2
  4126fe:	std    
  4126ff:	and    al,0x89
  412701:	jbe    0x4126af
  412703:	fiadd  WORD PTR [eax-0x38]
  412706:	(bad)  
  412707:	in     eax,dx
  412708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412709:	and    ecx,DWORD PTR [ecx+0x65fd924]
  41270f:	mov    edx,0x76f55484
  412714:	pop    ebx
  412715:	enter  0x9f0d,0x1e
  412719:	or     dh,cl
  41271b:	fs daa 
  41271d:	jbe    0x412728
  41271f:	fdiv   DWORD PTR cs:[edi+0x73]
  412723:	jmp    0xec02b0fe
  412728:	aas    
  412729:	push   edi
  41272a:	mov    DWORD PTR [esi+ebx*8+0x4fa035f],esp
  412731:	push   esp
  412732:	cmc    
  412733:	ss dec esp
  412735:	xlat   BYTE PTR ds:[ebx]
  412736:	jae    0x412729
  412738:	sbb    esi,edx
  41273a:	pop    edi
  41273b:	nop
  41273c:	mov    WORD PTR [ecx],cs
  41273e:	jmp    0x8877713
  412743:	inc    ecx
  412744:	(bad)  
  412745:	jbe    0x412750
  412747:	add    bl,al
  412749:	or     al,0x65
  41274b:	outs   dx,BYTE PTR ds:[esi]
  41274c:	push   edx
  41274d:	arpl   WORD PTR [eax+0x2adef0c3],ax
  412753:	push   0xffffffef
  412755:	rcr    BYTE PTR ss:[edi-0x4d],cl
  412759:	clc    
  41275a:	adc    edx,0x1c2fe21
  412760:	add    BYTE PTR [eax],al
  412762:	sbb    edi,DWORD PTR [ebx+eiz*2+0x0]
  412766:	xchg   edi,eax
  412767:	sbb    esi,esi
  412769:	inc    ebp
  41276a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41276b:	push   es
  41276c:	jno    0x412776
  41276e:	jae    0x412776
  412770:	outs   dx,BYTE PTR ds:[esi]
  412771:	gs loopne 0x412779
  412774:	out    0x6,eax
  412776:	jae    0x41277e
  412778:	pop    edi
  412779:	outs   dx,DWORD PTR ds:[esi]
  41277a:	jmp    0x8004a784
  41277f:	add    BYTE PTR [esi+0x300932c3],dh
  412785:	add    dh,dh
  412787:	retf   
  412788:	push   edi
  412789:	pop    edi
  41278a:	and    eax,0xc10004cb
  41278f:	test   ah,ch
  412791:	sbb    DWORD PTR [eax+0x5d],0x56
  412795:	push   edi
  412796:	stc    
  412797:	inc    ecx
  412798:	call   0xde82cbed
  41279d:	jmp    FWORD PTR [ebx+0x3774c088]
  4127a3:	mov    ch,0xd7
  4127a5:	pop    es
  4127a6:	sub    al,0xd
  4127a8:	cmp    WORD PTR [ecx-0x46f5901b],ax
  4127af:	inc    ecx
  4127b0:	call   0xf8531305
  4127b5:	adc    ch,BYTE PTR [ebp+ecx*1-0x18]
  4127b9:	std    
  4127ba:	xchg   esp,eax
  4127bb:	out    dx,eax
  4127bc:	sti    
  4127bd:	adc    DWORD PTR [ecx-0xb],0x0
  4127c1:	mov    ebp,edx
  4127c3:	popf   
  4127c4:	std    
  4127c5:	mov    ebp,0xe6190000
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	push   esi
  4127cd:	xchg   BYTE PTR [ecx],cl
  4127cf:	add    BYTE PTR [edx-0x3702f68b],al
  4127d5:	add    cl,BYTE PTR [edi]
  4127d7:	inc    eax
  4127d8:	aad    0xb
  4127da:	adc    ebp,edi
  4127dc:	dec    eax
  4127dd:	sti    
  4127de:	cld    
  4127df:	adc    edi,DWORD PTR [ecx+0x41f4]
  4127e5:	in     eax,0x2
  4127e7:	add    ch,dl
  4127e9:	push   ebp
  4127ea:	mov    DWORD PTR ds:[eax],ebx
  4127ed:	(bad)  
  4127ee:	das    
  4127ef:	shr    BYTE PTR [edx+ebx*8-0x1],cl
  4127f3:	call   ebp
  4127f5:	scas   eax,DWORD PTR es:[edi]
  4127f6:	icebp  
  4127f7:	mov    edx,DWORD PTR [eax]
  4127f9:	retf   
  4127fa:	lea    esi,[ebx+0x45]
  4127fd:	xor    al,0xec
  4127ff:	pop    esi
  412800:	mov    ecx,DWORD PTR [edi-0x68e70205]
  412806:	mov    al,al
  412808:	add    eax,esp
  41280a:	mov    BYTE PTR [ebx-0x1f],dl
  41280d:	jnp    0x4127dd
  41280f:	call   0x45c155
  412814:	push   esi
  412815:	mov    al,BYTE PTR [esp+esi*2]
  412818:	mov    ebp,0xe1744c2a
  41281d:	addr16 inc ebp
  41281f:	clc    
  412820:	push   esp
  412821:	int    0xf9
  412823:	call   0x72430afe
  412828:	jbe    0x41283e
  41282a:	les    ebx,FWORD PTR [ebp+0x0]
  41282d:	add    BYTE PTR [ebx-0x2af73dc7],dl
  412833:	jb     0x412836
  412835:	jmp    0x24b95f65
  41283a:	ror    esp,1
  41283c:	or     ebp,edi
  41283e:	enter  0x2b09,0xc6
  412842:	xchg   esp,eax
  412843:	or     DWORD PTR [esi],ebx
  412845:	pop    ss
  412846:	jge    0x412863
  412848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412849:	add    edx,DWORD PTR [esp+ecx*4]
  41284c:	mov    esp,DWORD PTR [edi]
  41284e:	(bad)  [ecx]
  412850:	jnp    0x412863
  412852:	call   0x6f48ebcb
  412857:	or     esi,esi
  412859:	ss adc edi,eax
  41285c:	stos   BYTE PTR es:[edi],al
  41285d:	add    edx,eax
  41285f:	adc    eax,0xa15125b
  412864:	stos   BYTE PTR es:[edi],al
  412865:	push   esi
  412866:	dec    esp
  412867:	fisub  WORD PTR [edx+0x46]
  41286a:	leave  
  41286b:	mov    al,bh
  41286d:	add    BYTE PTR [edx+eiz*8-0x19],dl
  412871:	push   ebp
  412872:	and    DWORD PTR [esi],ecx
  412874:	das    
  412875:	js     0x41283e
  412877:	inc    ecx
  412878:	cmp    ecx,DWORD PTR [esp+edx*2]
  41287b:	ret    0xeaae
  41287e:	outs   dx,DWORD PTR ds:[esi]
  41287f:	or     ah,bh
  412881:	add    ecx,DWORD PTR [ebx+0xa]
  412884:	out    0x3,eax
  412886:	xchg   ebp,eax
  412887:	jecxz  0x41286c
  412889:	mov    ebp,0x43e709d5
  41288e:	jl     0x412895
  412890:	inc    ebp
  412891:	add    eax,DWORD PTR [eax]
  412893:	add    ch,dl
  412895:	or     DWORD PTR [edi-0x78],esp
  412898:	push   ss
  412899:	(bad)  
  41289a:	xor    BYTE PTR [ebx],al
  41289c:	ror    BYTE PTR [ecx],1
  41289e:	out    0x20,eax
  4128a0:	pop    ss
  4128a1:	mov    cl,0xe7
  4128a3:	pop    es
  4128a4:	aad    0x9
  4128a6:	and    al,bl
  4128a8:	shl    BYTE PTR [ecx],0xdb
  4128ab:	and    dl,BYTE PTR [esi-0x36]
  4128ae:	rcr    DWORD PTR [esi],cl
  4128b0:	out    dx,al
  4128b1:	or     eax,ebp
  4128b3:	add    edx,ebp
  4128b5:	jne    0x412890
  4128b7:	ds aad 0xb
  4128ba:	add    cl,ch
  4128bc:	(bad)  
  4128bd:	jne    0x412922
  4128bf:	in     al,dx
  4128c0:	(bad)  
  4128c1:	or     BYTE PTR [eax],al
  4128c3:	jmp    0xebabdd4b
  4128c8:	in     eax,dx
  4128c9:	pop    es
  4128ca:	push   0xffffffed
  4128cc:	in     eax,dx
  4128cd:	or     ebp,DWORD PTR [edx-0x16]
  4128d0:	mov    fs,eax
  4128d2:	adc    eax,esp
  4128d4:	(bad)  
  4128d5:	or     al,BYTE PTR [eax]
  4128d7:	jmp    0xe97c2946
  4128dc:	ror    BYTE PTR [ecx],1
  4128de:	add    BYTE PTR [ebp+0x15],dh
  4128e1:	xor    edx,eax
  4128e3:	pop    esp
  4128e4:	imul   edi,DWORD PTR [eax],0x642629c0
  4128ea:	add    BYTE PTR [ecx+0x51],al
  4128ed:	or     DWORD PTR [eax],eax
  4128ef:	jmp    0x53418cfa
  4128f4:	rcl    BYTE PTR [edi-0x3],cl
  4128f7:	xor    al,0x0
  4128f9:	add    cl,dl
  4128fb:	in     al,dx
  4128fc:	adc    edi,DWORD PTR [ebp-0x3d]
  4128ff:	dec    ecx
  412900:	add    BYTE PTR [edx-0x6f],ah
  412903:	mov    ch,bh
  412905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412906:	add    eax,0x6eed6a1b
  41290b:	pop    ds
  41290c:	std    
  41290d:	xchg   esi,eax
  41290e:	jle    0x412890
  412910:	lock xor BYTE PTR [edi+esi*8+0x73],dl
  412915:	fld    QWORD PTR [edi]
  412917:	in     eax,dx
  412918:	adc    esi,DWORD PTR [ecx+0x6a0049cb]
  41291e:	mov    esp,ebp
  412920:	pop    ebp
  412921:	shrd   ebx,ecx,0x8
  412925:	jmp    0x922a33e2
  41292a:	ds jp  0x412935
  41292d:	push   0x9
  41292f:	in     al,dx
  412930:	call   0xfe2d4a41
  412935:	add    BYTE PTR [ebp+0x3045870b],ah
  41293b:	jge    0x412983
  41293d:	or     BYTE PTR [ebp-0x4574fb8d],dh
  412943:	(bad)  
  412945:	push   ebp
  412946:	xchg   ecx,esp
  412948:	jge    0x412936
  41294a:	lock add eax,DWORD PTR [eax]
  41294d:	add    BYTE PTR [edx],bh
  41294f:	pop    ebx
  412950:	xchg   eax,edi
  412952:	push   esi
  412953:	add    al,0xb8
  412955:	clc    
  412956:	imul   ecx,DWORD PTR [edx+0x0],0x41c7dd8b
  41295d:	inc    DWORD PTR [eax]
  41295f:	add    ch,ch
  412961:	loope  0x412972
  412963:	out    0xc3,al
  412965:	lock add eax,0xc77cfe29
  41296c:	loop   0x412978
  41296e:	add    BYTE PTR [eax],al
  412970:	xchg   edi,eax
  412971:	adc    DWORD PTR [edx+0x2],ebp
  412974:	inc    esp
  412975:	cmc    
  412976:	jno    0x4129b8
  412978:	mov    esp,0x95e8ce7c
  41297d:	jmp    0x1471:0xc929fffb
  412984:	std    
  412985:	(bad)  
  412986:	add    edi,DWORD PTR ss:[ecx+ecx*1-0x79]
  41298b:	jne    0x412911
  41298d:	pop    eax
  41298e:	jg     0x412958
  412990:	arpl   cx,sp
  412992:	xchg   ebp,eax
  412993:	(bad)  
  412994:	arpl   ax,si
  412996:	out    0x44,eax
  412998:	mov    BYTE PTR [ebx],0xb8
  41299b:	add    BYTE PTR [edx+0x49],ch
  41299e:	add    BYTE PTR [ebx-0x1a301ece],cl
  4129a4:	ret    
  4129a5:	out    dx,eax
  4129a6:	add    eax,0x684f2329
  4129ac:	cmp    BYTE PTR [esi],al
  4129ae:	add    BYTE PTR [eax],al
  4129b0:	aad    0x5f
  4129b2:	mov    edi,0x88b28b01
  4129b7:	mov    bl,0x21
  4129b9:	inc    esi
  4129ba:	cli    
  4129bb:	std    
  4129bc:	push   esi
  4129bd:	cmp    edi,edx
  4129bf:	call   0xfe3b47cf
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	adc    dh,BYTE PTR [esi-0x629574f7]
  4129cc:	add    al,BYTE PTR [eax]
  4129ce:	aad    0x77
  4129d0:	mov    edi,0x1b9a9e8
  4129d5:	add    BYTE PTR [esi-0x2e8c3e9a],cl
  4129db:	sbb    al,0x40
  4129dd:	std    
  4129de:	aad    0x78
  4129e0:	inc    eax
  4129e1:	std    
  4129e2:	jp     0x412978
  4129e4:	int3   
  4129e5:	ret    0xe2d9
  4129e8:	push   eax
  4129e9:	mov    DWORD PTR [ecx+0x54084577],edi
  4129ef:	mov    esi,0xe2d5020c
  4129f4:	xchg   BYTE PTR [ebx-0x2084253],al
  4129fa:	add    eax,0xad183d78
  4129ff:	and    esi,edi
  412a01:	std    
  412a02:	call   0x6d9b:0xe474c45e
  412a09:	or     al,0x58
  412a0b:	pop    ebp
  412a0c:	cld    
  412a0d:	sti    
  412a0e:	or     BYTE PTR [ebx-0x6ae017ac],0xf7
  412a15:	std    
  412a16:	pushf  
  412a17:	lahf   
  412a18:	or     eax,0x6a
  412a1b:	mov    ecx,0x7e4e53c3
  412a20:	mov    eax,DWORD PTR [ebx-0x33]
  412a23:	pop    edi
  412a24:	cld    
  412a25:	std    
  412a26:	leave  
  412a27:	retf   0xc07e
  412a2a:	add    BYTE PTR [eax],al
  412a2c:	ror    DWORD PTR [ecx],0xb
  412a2f:	test   DWORD PTR [esi-0x24901903],edi
  412a35:	pop    edi
  412a36:	out    0x86,eax
  412a38:	sahf   
  412a39:	add    DWORD PTR [eax+0x4619a6f8],edi
  412a3f:	outs   dx,DWORD PTR ds:[esi]
  412a40:	shr    esp,1
  412a42:	mov    bh,0xff
  412a44:	sbb    DWORD PTR [esi],edx
  412a46:	mov    ds:0x64099515,eax
  412a4b:	les    eax,FWORD PTR [ecx-0x32c08dfa]
  412a51:	dec    esi
  412a52:	sub    al,BYTE PTR [ebp-0x3b4b13f3]
  412a58:	xchg   BYTE PTR [eax+0x765c51fb],al
  412a5e:	out    dx,eax
  412a5f:	test   bl,ah
  412a61:	jmp    0x412ad6
  412a63:	xor    DWORD PTR [esi-0xd],edx
  412a66:	jnp    0x412a9d
  412a68:	retf   
  412a69:	inc    esp
  412a6a:	fisttp WORD PTR [ebx]
  412a6c:	inc    ecx
  412a6d:	cld    
  412a6e:	push   eax
  412a6f:	push   es
  412a70:	das    
  412a71:	or     dl,BYTE PTR [ecx+0x4]
  412a74:	mov    eax,0x86ebeb74
  412a79:	pop    eax
  412a7a:	out    0x3,eax
  412a7c:	aas    
  412a7d:	or     dh,BYTE PTR [esi+edi*1-0x33]
  412a81:	pop    ecx
  412a82:	mov    esi,0x3ceac56e
  412a87:	or     BYTE PTR [eax-0x19071c8c],dl
  412a8d:	mov    cl,0xf9
  412a8f:	inc    ebx
  412a90:	add    BYTE PTR [eax],al
  412a92:	aad    0x84
  412a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a95:	outs   dx,DWORD PTR ds:[esi]
  412a96:	(bad)  
  412a97:	jle    0x412ac5
  412a99:	or     al,0x7c
  412a9b:	pop    es
  412a9c:	push   0xffffffcb
  412a9e:	push   0xbc5244c
  412aa3:	jg     0x412a98
  412aa5:	pop    ds
  412aa6:	int    0x86
  412aa8:	add    BYTE PTR [edi+0x4d],dh
  412aab:	jbe    0x412ac6
  412aad:	fs inc esp
  412aaf:	jbe    0x412ac6
  412ab1:	les    ax,DWORD PTR ds:0x180ef4fd
  412ab8:	inc    eax
  412ab9:	jmp    0x4e295eeb
  412abe:	xor    ebp,ebp
  412ac0:	std    
  412ac1:	lahf   
  412ac2:	cs xchg edi,eax
  412ac4:	sti    
  412ac5:	ds sbb eax,0xac293153
  412acb:	enter  0x6256,0x7a
  412acf:	and    eax,0xecfc6a08
  412ad4:	je     0x412ab2
  412ad6:	jnp    0x412acb
  412ad8:	je     0x412aaa
  412ada:	popa   
  412adb:	inc    esi
  412adc:	and    al,0xf9
  412ade:	push   ecx
  412adf:	loop   0x412ae1
  412ae1:	jge    0x412aa9
  412ae3:	inc    ecx
  412ae4:	je     0x412ad7
  412ae6:	mov    ?,WORD PTR [esi+0x2a]
  412ae9:	sbb    eax,0x51
  412aec:	jmp    0x410b2cd7
  412af1:	rcl    bh,cl
  412af3:	cmp    al,al
  412af5:	cmp    DWORD PTR [eax],eax
  412af7:	add    BYTE PTR [esi+0x45],cl
  412afa:	and    al,0xf9
  412afc:	push   ecx
  412afd:	push   edi
  412afe:	push   eax
  412aff:	into   
  412b00:	cmp    eax,DWORD PTR [esi]
  412b02:	call   0x4b323d
  412b07:	gs xchg ecx,eax
  412b09:	jne    0x412b15
  412b0b:	mov    dh,0x3
  412b0d:	push   es
  412b0e:	call   0x4b525d
  412b13:	inc    edi
  412b14:	xchg   esi,eax
  412b15:	mov    al,cl
  412b17:	sahf   
  412b18:	and    ecx,ecx
  412b1a:	push   ebx
  412b1b:	bound  edi,QWORD PTR [ebp-0x80]
  412b1e:	dec    ebx
  412b1f:	loope  0x412b72
  412b21:	fisttp QWORD PTR [eax]
  412b23:	add    BYTE PTR [esi+0x6],ch
  412b26:	add    BYTE PTR [ebp-0x6120f],cl
  412b2c:	retf   
  412b2d:	push   ebp
  412b2e:	xchg   DWORD PTR [ebp+0x2c],eax
  412b31:	ficomp WORD PTR [ecx]
  412b33:	(bad)  
  412b34:	mov    ebx,0x20c084f2
  412b39:	cli    
  412b3a:	mov    BYTE PTR [ebp-0x40f7c],al
  412b40:	ins    BYTE PTR es:[edi],dx
  412b41:	fimul  WORD PTR [eax-0x7bf9d3ae]
  412b47:	shl    BYTE PTR [eax-0x16],0x30
  412b4b:	shl    BYTE PTR [ebp-0x4437803a],0xbc
  412b52:	mov    edi,0x7de18755
  412b57:	in     al,dx
  412b58:	add    al,0x8
  412b5a:	add    BYTE PTR [eax],al
  412b5c:	add    BYTE PTR [eax],al
  412b5e:	xor    al,BYTE PTR [ecx-0xd26077f]
  412b64:	sti    
  412b65:	push   eax
  412b66:	addr16 dec eax
  412b68:	adc    BYTE PTR [ebx],dh
  412b6a:	loop   0x412ba7
  412b6c:	push   0x4d5204
  412b71:	add    eax,0xfffde872
  412b76:	cld    
  412b77:	loopne 0x412b8a
  412b79:	push   eax
  412b7a:	mov    esi,0x7c85004d
  412b7f:	jns    0x412bc7
  412b81:	lea    esi,[ecx]
  412b83:	in     eax,0xf9
  412b85:	call   FWORD PTR [ebx-0x41bc17c3]
  412b8b:	or     eax,0x793c8400
  412b90:	mov    esi,DWORD PTR ss:[ecx-0x4674acef]
  412b97:	adc    eax,0x3d59c07f
  412b9c:	mov    DWORD PTR [ebp-0x207852b],eax
  412ba2:	push   0x23
  412ba4:	xchg   DWORD PTR [ebp-0x2a],esi
  412ba7:	(bad)  
  412ba8:	adc    BYTE PTR [esi+eax*8+0x3d500432],al
  412baf:	xchg   edx,ecx
  412bb1:	std    
  412bb2:	dec    edx
  412bb3:	or     eax,0xc8d56802
  412bb8:	inc    ecx
  412bb9:	add    BYTE PTR [edx+0x32e1363a],ah
  412bbf:	inc    eax
  412bc0:	xor    dh,dh
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	adc    esi,DWORD PTR [eax-0x5064a401]
  412bca:	mov    al,dh
  412bcc:	jnp    0x412be7
  412bce:	ret    0x1531
  412bd1:	mov    bl,0xc2
  412bd3:	xor    DWORD PTR ds:0xf1895034,edx
  412bd9:	jae    0x412bc0
  412bdb:	cmp    al,0x56
  412bdd:	mov    dh,0xf5
  412bdf:	std    
  412be0:	mov    ebp,DWORD PTR [ebx+0x70]
  412be3:	sbb    al,0x82
  412be5:	mov    al,ds:0x7cbd73f6
  412bea:	add    DWORD PTR [edx-0x2b],ebp
  412bed:	out    0x6d,eax
  412bef:	or     BYTE PTR [ebp-0x35020c0f],bh
  412bf5:	imul   edi,ecx,0xffffff81
  412bf8:	cdq    
  412bf9:	out    0x7e,al
  412bfb:	std    
  412bfc:	inc    ecx
  412bfd:	push   esp
  412bfe:	jg     0x412bfd
  412c00:	mov    dl,0x46
  412c02:	push   esi
  412c03:	mov    edx,DWORD PTR [eax]
  412c05:	scas   eax,DWORD PTR es:[edi]
  412c06:	push   esp
  412c07:	std    
  412c08:	sub    dh,bh
  412c0a:	hlt    
  412c0b:	adc    edx,DWORD PTR ds:0x580041c5
  412c11:	mov    dl,0x70
  412c13:	inc    eax
  412c14:	pop    eax
  412c15:	sub    eax,0x95050fc
  412c1a:	sub    al,0xdc
  412c1c:	and    eax,0xc73ff4e9
  412c21:	dec    ecx
  412c22:	out    0xf4,eax
  412c24:	out    0xf9,al
  412c26:	pop    ebx
  412c27:	aas    
  412c28:	add    BYTE PTR [eax],al
  412c2a:	pop    ebp
  412c2b:	call   0xe946342c
  412c30:	aam    0x4f
  412c32:	out    0x49,eax
  412c34:	out    0x88,eax
  412c36:	xchg   esi,eax
  412c37:	int    0x62
  412c39:	inc    edi
  412c3a:	jmp    0xb35e73cb
  412c3f:	xchg   edx,eax
  412c40:	call   0xea5e9fc8
  412c45:	add    edx,ebp
  412c47:	or     esp,edx
  412c49:	or     ecx,esi
  412c4b:	mov    edi,esp
  412c4d:	add    edx,ebp
  412c4f:	outs   dx,DWORD PTR ds:[esi]
  412c50:	jo     0x412c55
  412c52:	pop    edx
  412c53:	xor    bp,cx
  412c56:	fidivr WORD PTR [edi]
  412c58:	outs   dx,DWORD PTR cs:[esi]
  412c5a:	fld    QWORD PTR [eax+0xf]
  412c5d:	inc    edi
  412c5e:	sti    
  412c5f:	out    0x1e,eax
  412c61:	sbb    DWORD PTR [ecx],0xe93f6215
  412c67:	inc    edi
  412c68:	lods   eax,DWORD PTR ds:[esi]
  412c69:	retf   0x4014
  412c6c:	mov    edx,0xbb26a2f4
  412c71:	mov    esp,0x7ee60a14
  412c76:	jbe    0x412c82
  412c78:	out    0x3,eax
  412c7a:	sub    eax,0xd5445d16
  412c7f:	out    0xf4,al
  412c81:	lahf   
  412c82:	(bad)  
  412c83:	dec    ecx
  412c84:	out    0xa0,eax
  412c86:	in     eax,dx
  412c87:	into   
  412c88:	sub    al,BYTE PTR [esp+ebx*8]
  412c8b:	into   
  412c8c:	idiv   BYTE PTR [edi+0x0]
  412c8f:	add    BYTE PTR [edx+0xa],dl
  412c92:	out    0x3,eax
  412c94:	sub    edx,DWORD PTR [ebx-0x3c10400]
  412c9a:	aas    
  412c9b:	jmp    0x29b72e8e
  412ca0:	sar    DWORD PTR [ecx],1
  412ca2:	std    
  412ca3:	mov    bh,0xfe
  412ca5:	sub    eax,0xe4d12976
  412caa:	xor    edx,ecx
  412cac:	and    DWORD PTR [ecx+0x0],ecx
  412caf:	dec    edx
  412cb0:	mov    dl,0xcc
  412cb2:	inc    ecx
  412cb3:	jmp    0xb9a9ed01
  412cb8:	mov    eax,0xf36e0049
  412cbd:	and    ebp,eax
  412cbf:	stos   BYTE PTR es:[edi],al
  412cc0:	(bad)  
  412cc1:	test   al,0x30
  412cc3:	es xchg ebp,eax
  412cc5:	or     ebp,edi
  412cc7:	aas    
  412cc8:	mov    esi,0xd6a97649
  412ccd:	in     al,0x33
  412ccf:	add    DWORD PTR [eax+0x49],ebx
  412cd2:	add    BYTE PTR [edx-0x16be3342],cl
  412cd8:	add    eax,eax
  412cda:	mov    eax,ds:0x4941f5
  412cdf:	(bad)  
  412ce0:	mov    edi,0x95262c22
  412ce5:	or     DWORD PTR [ebx+eax*8-0x51],esi
  412ce9:	and    dh,BYTE PTR [eax]
  412ceb:	es xchg ebp,eax
  412ced:	or     DWORD PTR [ebx+ecx*8-0x61],esi
  412cf1:	and    ch,BYTE PTR [eax]
  412cf3:	add    BYTE PTR es:[eax],al
  412cf6:	adc    eax,0xdd3740a
  412cfb:	int    0x74
  412cfd:	xlat   BYTE PTR ds:[ebx]
  412cfe:	adc    DWORD PTR [edx+0x0],esi
  412d01:	jmp    0xde9813c4
  412d06:	int3   
  412d07:	jno    0x412d1b
  412d09:	sub    ecx,edx
  412d0b:	test   al,0xc4
  412d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d0e:	sbb    cl,BYTE PTR [edx]
  412d10:	cmp    DWORD PTR [eax],eax
  412d12:	imul   esp,DWORD PTR [eax+0x10],0xffffffff
  412d16:	mov    DWORD PTR [edx],esi
  412d18:	ret    
  412d19:	inc    ebx
  412d1a:	jl     0x412cf7
  412d1c:	adc    DWORD PTR [esi+ebx*4+0x2c32004a],edi
  412d23:	cmp    bh,BYTE PTR [edi-0x3cc98601]
  412d29:	inc    ebx
  412d2a:	jl     0x412cc6
  412d2c:	std    
  412d2d:	pop    esi
  412d2e:	das    
  412d2f:	fimul  DWORD PTR [ecx]
  412d31:	cmp    al,0x2b
  412d33:	dec    esi
  412d34:	add    BYTE PTR [ebp+0x34],dh
  412d37:	(bad)  [ecx]
  412d39:	cmp    BYTE PTR [ebx+0x4e],bh
  412d3c:	add    bh,bh
  412d3e:	sub    DWORD PTR [esi-0x24d3bfee],esi
  412d44:	xor    esp,eax
  412d46:	cli    
  412d47:	dec    esi
  412d48:	add    bh,bh
  412d4a:	sub    DWORD PTR [esi+0x12],eax
  412d4d:	inc    eax
  412d4e:	sub    al,0xcf
  412d50:	push   ebx
  412d51:	xor    edx,DWORD PTR [ebx-0x2c00ea3b]
  412d57:	fiadd  DWORD PTR [eax+eax*8-0x720d0000]
  412d5e:	out    0x0,al
  412d60:	in     al,dx
  412d61:	or     DWORD PTR [esi+0x68],edx
  412d64:	cmp    ch,ah
  412d66:	std    
  412d67:	inc    DWORD PTR [esi-0x1e]
  412d6a:	cld    
  412d6b:	xor    eax,0x3fd380
  412d70:	rol    DWORD PTR [eax],cl
  412d72:	js     0x412d86
  412d74:	sub    al,0xa
  412d76:	xchg   eax,esi
  412d78:	cmp    eax,esp
  412d7a:	or     eax,DWORD PTR [esi+edi*8+0x2100000d]
  412d81:	nop
  412d82:	ds add eax,0x335009ac
  412d88:	jl     0x412d4b
  412d8a:	mov    DWORD PTR [ebp-0x2b],edx
  412d8d:	repnz add DWORD PTR [ebp+edx*4-0x2a597a3c],eax
  412d95:	repnz add DWORD PTR [ebx+0x92d5b],ecx
  412d9c:	aad    0x2
  412d9e:	pop    esp
  412d9f:	add    esp,edx
  412da1:	repnz add ebp,edi
  412da4:	loopne 0x412dc0
  412da6:	push   ss
  412da7:	inc    eax
  412da8:	aad    0x6d
  412daa:	ror    DWORD PTR ds:0xc085b340,0xd2
  412db1:	outs   dx,BYTE PTR ds:[esi]
  412db2:	mov    al,BYTE PTR [eax]
  412db4:	aad    0xf2
  412db6:	lods   al,BYTE PTR ds:[esi]
  412db7:	std    
  412db8:	push   edx
  412db9:	fs jb  0x412d43
  412dbc:	fwait
  412dbd:	mov    BYTE PTR [eax-0x1affffba],0x69
  412dc4:	stc    
  412dc5:	xor    BYTE PTR [edx+esi*4],cl
  412dc8:	pop    ebx
  412dc9:	or     al,0x5c
  412dcb:	mov    ch,0x25
  412dcd:	xchg   DWORD PTR [ebx-0x54f3a3f6],ebx
  412dd3:	mov    dl,0x1
  412dd5:	mov    ecx,DWORD PTR [ebx-0x1f]
  412dd8:	add    al,0x0
  412dda:	aad    0x81
  412ddc:	fldcw  WORD PTR [esi]
  412dde:	hlt    
  412ddf:	sbb    esi,edx
  412de1:	push   0xffffffd7
  412de3:	retf   0x73e9
  412de6:	xchg   ebp,eax
  412de7:	repnz or BYTE PTR [esi+0x1f0a7],0x84
  412def:	or     cl,BYTE PTR [esi]
  412df1:	(bad)  
  412df3:	adc    edx,DWORD PTR [edi+0x50]
  412df6:	ins    DWORD PTR es:[edi],dx
  412df7:	arpl   di,di
  412df9:	ds aad 0x7a
  412dfc:	xor    cl,BYTE PTR [esi]
  412dfe:	adc    al,0xf3
  412e00:	pop    ecx
  412e01:	icebp  
  412e02:	shl    BYTE PTR [ecx+0x98f6801],1
  412e08:	hlt    
  412e09:	inc    edx
  412e0a:	aad    0x71
  412e0c:	imul   edi,edi,0x3e3f09eb
  412e12:	into   
  412e13:	dec    edx
  412e14:	out    0x5b,eax
  412e16:	(bad)  
  412e17:	push   ss
  412e18:	sub    BYTE PTR [edi*8-0x2abd0d78],al
  412e1f:	jno    0x412e58
  412e21:	std    
  412e22:	ret    
  412e23:	or     DWORD PTR [edx+ecx*2+0x0],ebx
  412e27:	add    cl,dl
  412e29:	jno    0x412dc4
  412e2b:	add    dh,BYTE PTR [edx-0x390ec8f7]
  412e31:	xor    eax,0x88d545ae
  412e36:	mov    ds:0x6c0b5238,eax
  412e3b:	(bad)  
  412e3c:	leave  
  412e3d:	or     eax,0x103cf272
  412e42:	sbb    eax,0x6ee953dc
  412e47:	icebp  
  412e48:	sub    eax,0x30f165ef
  412e4d:	inc    ebx
  412e4e:	jb     0x412e19
  412e50:	mov    al,cl
  412e52:	mov    esp,0x3b88317c
  412e57:	or     al,0x83
  412e59:	nop
  412e5a:	cld    
  412e5b:	mov    esp,edi
  412e5d:	dec    ecx
  412e5e:	out    0x58,eax
  412e60:	or     BYTE PTR [esi-0x1d],bl
  412e63:	leave  
  412e64:	xchg   esi,eax
  412e65:	in     al,0xe7
  412e67:	lock and esp,DWORD PTR [esi+eiz*1+0x7009d504]
  412e6f:	inc    edi
  412e70:	in     eax,dx
  412e71:	pop    ds
  412e72:	add    DWORD PTR cs:[esi-0x7c],ecx
  412e76:	out    0x3,eax
  412e78:	aad    0xe4
  412e7a:	jl     0x412e77
  412e7c:	sar    DWORD PTR [eax+esi*2+0x25c147],1
  412e83:	jmp    0x963b:0xde0009d7
  412e8a:	add    cl,ch
  412e8c:	add    BYTE PTR [eax],al
  412e8e:	(bad)  
  412e8f:	in     al,0x73
  412e91:	in     eax,dx
  412e92:	sub    DWORD PTR [edi-0x8],eax
  412e95:	fs sub esi,edx
  412e98:	call   0xfe26898a
  412e9d:	ins    DWORD PTR es:[edi],dx
  412e9e:	xchg   esi,eax
  412e9f:	pop    esi
  412ea0:	jp     0x412ea2
  412ea2:	cli    
  412ea3:	fstp   DWORD PTR [ecx]
  412ea5:	test   eax,0xf5819216
  412eaa:	ror    DWORD PTR [ecx],1
  412eac:	add    BYTE PTR [ebp-0x6a],ch
  412eaf:	pop    esi
  412eb0:	setle  bl
  412eb3:	adc    eax,0x70712c89
  412eb8:	add    BYTE PTR [ecx-0x790235bc],al
  412ebe:	shl    ecx,1
  412ec0:	jmp    0xe89ff8af
  412ec5:	ins    BYTE PTR es:[edi],dx
  412ec6:	inc    ebp
  412ec7:	pop    esi
  412ec8:	cmp    DWORD PTR [esi-0x3d],ebp
  412ecb:	adc    DWORD PTR [ecx-0x4e70d554],ecx
  412ed1:	pop    ss
  412ed2:	ror    BYTE PTR [ecx],1
  412ed4:	add    BYTE PTR [ecx-0x50],al
  412ed7:	(bad)  
  412ed8:	std    
  412ed9:	dec    esi
  412eda:	js     0x412ebe
  412edc:	gs cmp al,0xd4
  412edf:	and    al,BYTE PTR [eax]
  412ee1:	rol    DWORD PTR [eax],1
  412ee3:	adc    al,0x3f
  412ee5:	jmp    0xa8502288
  412eea:	(bad)  
  412eeb:	outs   dx,DWORD PTR ds:[esi]
  412eec:	add    BYTE PTR [esi-0x568c1a72],bh
  412ef2:	add    BYTE PTR [eax],al
  412ef4:	(bad)  
  412ef5:	in     al,0x31
  412ef7:	push   ss
  412ef8:	retf   
  412ef9:	sbb    ebp,eax
  412efb:	stos   BYTE PTR es:[edi],al
  412efc:	(bad)  
  412efd:	mov    ah,al
  412eff:	add    BYTE PTR [ebx+ecx*4+0x4c210fc0],bl
  412f06:	sti    
  412f07:	add    BYTE PTR [edi],0x1b
  412f0a:	(bad)  
  412f0b:	jmp    FWORD PTR [esi+eax*1-0x3a0cf98c]
  412f12:	(bad)  
  412f13:	fisttp WORD PTR [ebx-0x6b8a760e]
  412f19:	lds    ecx,FWORD PTR [esi-0x750d7435]
  412f1f:	inc    ebp
  412f20:	fwait
  412f21:	push   edx
  412f22:	pop    esi
  412f23:	leave  
  412f24:	ds in  eax,0xfd
  412f27:	push   esp
  412f28:	imul   ecx
  412f2a:	jge    0x412f18
  412f2c:	je     0x412f36
  412f2e:	add    BYTE PTR [eax],al
  412f30:	scas   eax,DWORD PTR es:[edi]
  412f31:	mov    BYTE PTR [edx+0x2c],al
  412f34:	stc    
  412f35:	cmp    al,0xfd
  412f38:	dec    ebx
  412f39:	repnz push edx
  412f3b:	mov    esp,DWORD PTR ds:0x3c53e1c5
  412f41:	push   es
  412f42:	test   al,al
  412f44:	inc    eax
  412f45:	xor    DWORD PTR [esi-0x75],edx
  412f48:	inc    ecx
  412f49:	fimul  WORD PTR [eax+0x1e5f3446]
  412f4f:	(bad)  
  412f50:	rcl    BYTE PTR [eax-0x8],0xfd
  412f54:	mov    esi,edx
  412f56:	push   eax
  412f57:	lea    eax,[eax]
  412f59:	add    BYTE PTR [ecx-0x7400060b],dh
  412f5f:	cmp    eax,0xf29af5e8
  412f64:	sti    
  412f65:	test   BYTE PTR [ecx+eiz*2+0xa32feff],bh
  412f6c:	pop    esi
  412f6d:	mov    al,0xed
  412f6f:	dec    esi
  412f70:	(bad)
  412f73:	push   es
  412f74:	push   ecx
  412f75:	mov    ebx,eax
  412f77:	xchg   ah,ch
  412f79:	adc    ch,dl
  412f7b:	mov    ds:0xefda43c3,al
  412f80:	(bad)  
  412f82:	ror    BYTE PTR [eax],1
  412f84:	in     eax,dx
  412f85:	xor    ebx,eax
  412f87:	pop    edx
  412f88:	inc    edi
  412f89:	lock (bad) 
  412f8b:	xor    BYTE PTR [eax+0x76],bh
  412f8e:	and    ch,BYTE PTR [edx+0x77]
  412f91:	hlt    
  412f92:	mov    dl,0xde
  412f94:	mov    DWORD PTR [edx],edx
  412f96:	adc    eax,0x9d437cf3
  412f9b:	cld    
  412f9c:	lds    esi,FWORD PTR [esi-0x37]
  412f9f:	dec    eax
  412fa0:	cmp    DWORD PTR [edx+ebx*1-0x37],0x32d1744d
  412fa8:	jnp    0x412fed
  412faa:	jge    0x413018
  412fac:	pop    eax
  412fad:	or     BYTE PTR [ebx],ah
  412faf:	stc    
  412fb0:	push   ebp
  412fb1:	mov    ebx,DWORD PTR [eax]
  412fb3:	adc    DWORD PTR [ecx+0x68],0xffffffba
  412fb7:	in     al,0x44
  412fb9:	add    bh,ch
  412fbb:	in     eax,dx
  412fbc:	push   edi
  412fbd:	inc    DWORD PTR [eax]
  412fbf:	add    BYTE PTR [edi-0x80],cl
  412fc2:	fst    DWORD PTR [eax]
  412fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc5:	repnz add DWORD PTR [edi],esi
  412fc8:	rcl    BYTE PTR [esi+0x73],0x1f
  412fcc:	dec    esi
  412fcd:	cs hlt 
  412fcf:	push   0x44c147
  412fd4:	mov    ebp,0xd53efb38
  412fd9:	cwde   
  412fda:	out    dx,al
  412fdb:	xor    BYTE PTR [edx],ah
  412fdd:	ficomp WORD PTR [ecx]
  412fdf:	lds    edx,FWORD PTR [esi-0x1a3b7d0e]
  412fe5:	ins    DWORD PTR es:[edi],dx
  412fe6:	shl    DWORD PTR [ecx+edx*8+0x28],0x48
  412feb:	std    
  412fec:	aam    0x6b
  412fee:	dec    eax
  412fef:	lock cli 
  412ff1:	loop   0x41306d
  412ff3:	lock repnz or esp,edi
  412ff7:	aaa    
  412ff8:	adc    BYTE PTR [ebp-0x19],cl
  412ffb:	dec    esp
  412ffc:	mov    esi,ecx
  412ffe:	pop    es
  412fff:	int    0xd8
  413001:	loopne 0x413002
  413003:	cs into 
  413005:	loopne 0x41300d
  413007:	jns    0x41301f
  413009:	loope  0x412fa8
  41300b:	mov    esp,0x7ae70597
  413010:	into   
  413011:	cmp    eax,0x37d54226
  413016:	sbb    al,ah
  413018:	add    BYTE PTR [edi-0x6b0a8750],al
  41301e:	adc    al,0x44
  413020:	nop
  413021:	dec    esp
  413022:	out    0x78,eax
  413024:	add    BYTE PTR [eax],al
  413026:	test   al,0x94
  413028:	stc    
  413029:	sub    BYTE PTR [ecx],al
  41302b:	es jmp 0x4130a4
  41302e:	(bad)  
  41302f:	mov    WORD PTR [ebp+0x26fc06ed],?
  413035:	adc    DWORD PTR [edi-0x2afc10ef],0x24
  41303c:	test   al,0x72
  41303e:	ins    DWORD PTR es:[edi],dx
  41303f:	sbb    al,0xa7
  413041:	dec    ebp
  413042:	sti    
  413043:	retf   
  413044:	jecxz  0x413049
  413046:	mov    edx,0x4afbefc9
  41304b:	loopne 0x413037
  41304d:	les    ebp,FWORD PTR [edx+ebx*8]
  413050:	(bad)  
  413051:	call   FWORD PTR [esi-0x74fbd538]
  413057:	cmp    BYTE PTR [edx],bl
  413059:	in     eax,dx
  41305a:	in     al,0xc9
  41305c:	fs mov ebx,0x176227a9
  413062:	xchg   ebp,eax
  413063:	enter  0x3aa,0x5c
  413067:	fld    TBYTE PTR [edx+0x2e]
  41306a:	or     BYTE PTR [ebp-0x14],dl
  41306d:	inc    ebx
  41306e:	add    bh,0x0
  413071:	loope  0x413071
  413073:	(bad)  
  413075:	repnz pop ss
  413077:	pop    ebx
  413078:	lock adc dl,ch
  41307b:	push   0xdfdef1c0
  413080:	std    
  413081:	jmp    0x1ef1:0x94f89214
  413088:	xor    BYTE PTR [bx+si],al
  41308b:	add    cl,cl
  41308d:	pop    es
  41308e:	add    cl,ch
  413090:	jo     0x4130dc
  413092:	lds    ebp,FWORD PTR [edx+0xc89f1d6]
  413098:	rcr    ch,0x84
  41309b:	test   eax,0x1c892a22
  4130a0:	add    eax,0xffe941c5
  4130a5:	fmul   QWORD PTR [eax]
  4130a7:	loope  0x41307f
  4130a9:	or     ebp,edi
  4130ab:	in     al,dx
  4130ac:	sbb    al,ch
  4130ae:	inc    ecx
  4130af:	jmp    0xae815389
  4130b4:	adc    eax,0xede7740a
  4130b9:	inc    ebp
  4130ba:	and    al,0xf5
  4130bc:	out    dx,eax
  4130bd:	add    al,0x89
  4130bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c0:	adc    DWORD PTR [eax-0x3e],eax
  4130c3:	in     eax,dx
  4130c4:	(bad)  
  4130c5:	jle    0x413123
  4130c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c8:	xchg   ebp,eax
  4130c9:	or     DWORD PTR [ebp+0x72],edx
  4130cc:	ds mov eax,eax
  4130cf:	cmc    
  4130d0:	xchg   edi,eax
  4130d1:	nop
  4130d2:	adc    ebp,DWORD PTR [ecx]
  4130d4:	adc    BYTE PTR [ecx+0x0],cl
  4130d7:	bound  ebp,QWORD PTR [esi+0x67]
  4130da:	(bad)  
  4130db:	icebp  
  4130dc:	cs (bad) 
  4130df:	ins    BYTE PTR es:[edi],dx
  4130e0:	mov    ds:0x295ef80e,al
  4130e5:	fld    QWORD PTR [ecx+0x75b0010]
  4130eb:	add    BYTE PTR [ebp-0x3d],bh
  4130ee:	or     BYTE PTR [eax],cl
  4130f0:	add    BYTE PTR [eax],al
  4130f2:	in     al,dx
  4130f3:	or     cl,BYTE PTR [ebx+0x75]
  4130f6:	mov    esi,0x674f831
  4130fb:	(bad)  
  4130fc:	retf   
  4130fd:	imul   esp,DWORD PTR [ebp-0x13fffa1e],0xab40be34
  413107:	dec    ecx
  413108:	add    al,ch
  41310a:	(bad)  
  41310b:	iret   
  41310c:	sti    
  41310d:	inc    DWORD PTR [ebp+0x30]
  413110:	pop    esp
  413111:	(bad)  
  413112:	outs   dx,DWORD PTR ds:[esi]
  413113:	or     bl,BYTE PTR [esi+0x5f]
  413116:	out    dx,eax
  413117:	aaa    
  413118:	xchg   esp,ebp
  41311a:	dec    edi
  41311b:	mov    cl,0x44
  41311d:	(bad)  
  41311e:	inc    DWORD PTR ds:0xd2a9ff4f
  413124:	adc    al,BYTE PTR [eax-0x54]
  413127:	xchg   DWORD PTR [ecx+0x8],edi
  41312a:	mov    ds:0x7cd781e2,eax
  41312f:	or     al,BYTE PTR [eax]
  413131:	add    ecx,0xffffffe1
  413134:	std    
  413135:	push   cs
  413136:	call   0x7c4131db
  41313b:	xchg   DWORD PTR [ecx+0x10],edi
  41313e:	jl     0x413123
  413140:	add    ebx,0xff000a6c
  413146:	mov    ecx,0x62cae5dd
  41314b:	repnz sti 
  41314d:	test   DWORD PTR [eax+ebx*2+0x10],edi
  413151:	dec    DWORD PTR [ecx-0x1e]
  413154:	in     eax,0xfd
  413156:	add    BYTE PTR [eax],al
  413158:	ret    0xfbf2
  41315b:	test   DWORD PTR [edx+eiz*8-0x7f],edi
  41315f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413160:	cmp    al,0xa
  413162:	add    dh,dh
  413164:	jns    0x413174
  413166:	std    
  413167:	push   ebp
  413168:	aad    0x9f
  41316a:	ins    DWORD PTR es:[edi],dx
  41316b:	push   cs
  41316c:	pusha  
  41316d:	js     0x413171
  41316f:	add    al,0xd5
  413171:	lock js 0x413124
  413174:	fcmovnu st,st(0)
  413176:	add    DWORD PTR [eax],eax
  413178:	out    dx,al
  413179:	call   0x3e1aa9f6
  41317e:	mov    ah,0x4
  413180:	shl    eax,1
  413182:	add    DWORD PTR [ecx-0x76fe1fa0],eax
  413188:	nop
  413189:	in     al,0x7c
  41318b:	inc    ebx
  41318c:	fnsave [esp+esi*2-0x46]
  413190:	aad    0xf0
  413192:	add    DWORD PTR [eax],eax
  413194:	cld    
  413195:	jne    0x4131a8
  413197:	jno    0x41316a
  413199:	jecxz  0x41314d
  41319b:	push   ebx
  41319c:	lds    edi,FWORD PTR [ebx+0x7bda06b2]
  4131a2:	retf   
  4131a3:	add    DWORD PTR [esi-0x2afbfe56],edx
  4131a9:	repnz cs mov edi,0xbf1ee10b
  4131b0:	repz stc 
  4131b2:	add    DWORD PTR ds:0x154ed4a,ecx
  4131b8:	xchg   edx,eax
  4131b9:	add    edx,DWORD PTR [ecx-0x18]
  4131bc:	add    BYTE PTR [eax],al
  4131be:	cld    
  4131bf:	(bad)  
  4131c0:	jmp    0x6250:0xff3bdafd
  4131c7:	idiv   bl
  4131c9:	add    BYTE PTR [edx+0x305adc23],dl
  4131cf:	mov    edx,gs
  4131d1:	data16 aam 0xbc
  4131d4:	ficom  WORD PTR [eax]
  4131d6:	mov    ebx,0x820cffb9
  4131db:	in     eax,0x54
  4131dd:	add    DWORD PTR [edx],ebx
  4131df:	add    edx,DWORD PTR [ecx-0x18]
  4131e2:	nop
  4131e3:	or     DWORD PTR [edx+ebp*8+0x20],eax
  4131e7:	or     eax,0x9af0196
  4131ec:	mov    esi,0xe70ebbdb
  4131f1:	add    edx,DWORD PTR [esi-0x36]
  4131f4:	mov    esp,0xef3e02e4
  4131f9:	sbb    al,0x9e
  4131fb:	stc    
  4131fc:	mov    ebx,0x26462c8f
  413201:	inc    esi
  413202:	aad    0x38
  413204:	adc    BYTE PTR es:[ecx],al
  413207:	clc    
  413208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413209:	add    edi,DWORD PTR [eax+0x3b]
  41320c:	add    al,BYTE PTR [edx]
  41320e:	and    al,0xdd
  413210:	hlt    
  413211:	(bad)  
  413212:	out    0x49,eax
  413214:	out    0x4e,eax
  413216:	push   ds
  413217:	enter  0x3d7,0x20
  41321b:	(bad)  
  41321c:	jne    0x41321d
  41321e:	mov    ebp,0x1c8501
  413223:	add    BYTE PTR [ebx+0x5],dl
  413226:	jmp    0x41322b
  413228:	aad    0xc
  41322a:	xchg   esi,eax
  41322b:	jp     0x4131fe
  41322d:	add    eax,0x92203e7
  413232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413233:	push   esp
  413234:	and    dl,dh
  413236:	mov    ebx,0xeedc80c8
  41323b:	mov    al,0x53
  41323d:	add    eax,0x6fd503eb
  413242:	call   0xf3fbaf97
  413247:	add    edx,ebp
  413249:	xchg   BYTE PTR [edi-0x55c37991],ah
  41324f:	push   ecx
  413250:	nop
  413251:	inc    ebp
  413252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413253:	inc    ebp
  413254:	aad    0x34
  413256:	xchg   BYTE PTR [edi],cl
  413258:	sbb    eax,0x540426f7
  41325d:	pop    ebp
  41325e:	add    ch,cl
  413260:	fnsave cs:[esp+ecx*8+0x3d]
  413265:	push   ebp
  413266:	and    al,0xf1
  413268:	(bad)  
  413269:	cdq    
  41326a:	sti    
  41326b:	pop    esi
  41326c:	sub    al,0x88
  41326e:	rcr    ch,0xe6
  413271:	xor    ecx,DWORD PTR [ecx-0x25ad6a7]
  413277:	inc    esi
  413278:	in     al,dx
  413279:	xor    eax,0xf712d4fd
  41327e:	aas    
  41327f:	jmp    0xe6037120
  413284:	(bad)  
  413285:	icebp  
  413286:	sahf   
  413287:	in     eax,dx
  413288:	add    BYTE PTR [eax],al
  41328a:	xlat   BYTE PTR ds:[ebx]
  41328b:	or     DWORD PTR [ecx+ebp*1-0x41a9b59b],eax
  413292:	jge    0x4132da
  413294:	lds    ebp,FWORD PTR [edx-0x2302cb2a]
  41329a:	mov    ?,eax
  41329c:	aas    
  41329d:	jmp    0xe565894f
  4132a2:	mov    fs,WORD PTR [ecx-0x5]
  4132a5:	out    dx,al
  4132a6:	mov    ebp,0xa46cf091
  4132ab:	push   esi
  4132ac:	sbb    edx,ecx
  4132ae:	add    ebx,ebp
  4132b0:	std    
  4132b1:	(bad)  
  4132b2:	pop    ecx
  4132b3:	or     al,0xfd
  4132b5:	sbb    dl,BYTE PTR [ecx-0x7d90789c]
  4132bb:	pop    es
  4132bc:	add    cl,ch
  4132be:	hlt    
  4132bf:	add    BYTE PTR [esi-0x2249111],0xc1
  4132c6:	outs   dx,DWORD PTR ds:[esi]
  4132c7:	(bad)  
  4132c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ca:	add    eax,0xc0bd13dd
  4132cf:	dec    ecx
  4132d0:	add    BYTE PTR [esi],dh
  4132d2:	lahf   
  4132d3:	fsub   QWORD PTR [ebx]
  4132d5:	xchg   ecx,eax
  4132d6:	fisttp DWORD PTR [ecx+0x0]
  4132d9:	add    cl,ah
  4132db:	pop    esp
  4132dc:	in     al,dx
  4132dd:	push   esi
  4132de:	mov    ebx,0x31ff146b
  4132e3:	idiv   edx
  4132e5:	jne    0x4132ef
  4132e7:	bnd jno 0x4132f2
  4132ea:	mov    ebx,0x15fc0b
  4132ef:	add    BYTE PTR [edi+eax*1-0x79],ch
  4132f3:	lock sbb eax,0x1694177e
  4132fa:	add    al,0x1
  4132fc:	in     al,dx
  4132fd:	pop    edx
  4132fe:	shl    BYTE PTR [edx+ebp*8+0x3c],0xfd
  413303:	push   ebp
  413304:	stos   DWORD PTR es:[edi],eax
  413305:	imul   ecx,DWORD PTR [edi+edi*8],0x21
  413309:	(bad)  
  41330b:	push   ss
  41330c:	mov    edx,0xb28bfbf1
  413311:	push   eax
  413312:	pop    ecx
  413313:	ret    0x6cc
  413316:	push   ecx
  413317:	mov    ecx,eax
  413319:	cmp    DWORD PTR [edi-0x4c65f8b],eax
  41331f:	jne    0x4132ad
  413321:	pop    ebp
  413322:	jns    0x413330
  413324:	stos   DWORD PTR es:[edi],eax
  413325:	ins    BYTE PTR es:[edi],dx
  413326:	sbb    al,0xff
  413328:	and    DWORD PTR [edi],ecx
  41332a:	push   esi
  41332b:	inc    DWORD PTR [ecx]
  41332d:	not    BYTE PTR [edx-0x1]
  413330:	add    esi,ebx
  413332:	cld    
  413333:	adc    eax,0x3ff8ac
  413338:	cmc    
  413339:	dec    eax
  41333a:	sbb    al,0x85
  41333c:	sub    al,0x58
  41333e:	inc    eax
  41333f:	test   DWORD PTR [edx+0x59],eax
  413342:	cmp    al,0xe8
  413344:	mov    eax,ds:0xf0fffd06
  413349:	lds    esi,FWORD PTR [ebx+esi*1-0x19]
  41334d:	sub    ecx,DWORD PTR [edi+0x33]
  413350:	xchg   edi,eax
  413351:	mov    dh,dh
  413353:	je     0x413355
  413355:	add    ch,dl
  413357:	leave  
  413358:	sub    bl,BYTE PTR [ebx-0x1b]
  41335b:	call   FWORD PTR [edi]
  41335d:	mov    ecx,ebx
  41335f:	mov    ds:0xc7f5437b,eax
  413364:	mov    ebx,0x6f69d672
  413369:	and    BYTE PTR [edi-0xa8c190f],bh
  41336f:	arpl   WORD PTR [eax-0x23],si
  413372:	sar    DWORD PTR [ebx],1
  413374:	outs   dx,DWORD PTR ds:[esi]
  413375:	or     ch,bh
  413377:	test   bh,ah
  413379:	std    
  41337a:	or     ch,BYTE PTR [edi-0x624a8ce6]
  413380:	into   
  413381:	pop    ecx
  413382:	dec    esi
  413383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413384:	add    eax,0xbf75935d
  413389:	sbb    al,0xd5
  41338b:	jne    0x413407
  41338d:	in     al,dx
  41338e:	mov    esp,DWORD PTR [ebx]
  413390:	outs   dx,DWORD PTR ds:[esi]
  413391:	adc    al,0xda
  413393:	je     0x4133a6
  413395:	std    
  413396:	dec    eax
  413397:	out    dx,eax
  413398:	out    0x73,al
  41339a:	fld    QWORD PTR [edi]
  41339c:	pmuludq mm5,mm0
  41339f:	mov    ds:0x6ec58901,al
  4133a4:	out    dx,al
  4133a5:	js     0x41339f
  4133a7:	or     al,BYTE PTR [eax+0x7de2d401]
  4133ad:	shr    BYTE PTR [ecx],0xf
  4133b0:	jg     0x4133a8
  4133b2:	and    ch,bl
  4133b4:	out    0x73,al
  4133b6:	(bad)  
  4133b8:	test   esi,edi
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	mov    cl,al
  4133be:	fimul  DWORD PTR [esi]
  4133c0:	out    dx,eax
  4133c1:	loop   0x41340e
  4133c3:	std    
  4133c4:	add    bh,ah
  4133c6:	out    0x73,al
  4133c8:	(bad)  
  4133ca:	inc    ebp
  4133cb:	sti    
  4133cc:	push   0xffffffa8
  4133ce:	jp     0x413396
  4133d0:	add    ecx,DWORD PTR [edx]
  4133d2:	inc    esp
  4133d3:	ret    0x9c5
  4133d6:	xor    al,0x7b
  4133d8:	inc    ecx
  4133d9:	cmp    eax,0xfdc67b3d
  4133de:	xor    eax,0x7229c6e7
  4133e3:	push   0x7f4d8c9
  4133e8:	xor    BYTE PTR [edi-0x31],bl
  4133eb:	dec    ebp
  4133ec:	sub    BYTE PTR [edi-0x29],bl
  4133ef:	dec    esi
  4133f0:	and    BYTE PTR [edi-0x11],bl
  4133f3:	out    0xc6,al
  4133f5:	in     eax,0xf4
  4133f7:	inc    ebx
  4133f8:	aad    0x82
  4133fa:	lods   al,BYTE PTR ds:[esi]
  4133fb:	pop    es
  4133fc:	push   esi
  4133fd:	retf   0x43d4
  413400:	push   esi
  413401:	loopne 0x4133be
  413403:	inc    esi
  413404:	in     eax,dx
  413405:	and    ebp,edx
  413407:	add    al,0xd5
  413409:	lea    esp,[edi]
  41340b:	outs   dx,DWORD PTR ds:[esi]
  41340c:	add    DWORD PTR [ebp+esi*8+0x1d8efc32],0x6f
  413414:	mov    edx,DWORD PTR [esp+edi*4]
  413417:	adc    eax,DWORD PTR [ebx+eax*2+0x62]
  41341b:	jmp    FWORD PTR [ecx+0x23a482]
  413421:	add    ah,bh
  413423:	iret   
  413424:	jns    0x413428
  413426:	push   edx
  413427:	pop    esi
  413428:	(bad)  
  413429:	pop    ecx
  41342a:	aad    0xd8
  41342c:	jl     0x413451
  41342e:	test   al,0x5d
  413430:	push   cs
  413431:	jmp    DWORD PTR [ecx-0x5b2410a2]
  413437:	aad    0xde
  413439:	in     eax,0x14
  41343b:	and    eax,0xc106245c
  413440:	ret    0x5421
  413443:	rol    esi,1
  413445:	outs   dx,DWORD PTR ds:[esi]
  413446:	fcmovnu st,st(0)
  413448:	aam    0x3
  41344a:	retf   
  41344b:	dec    ecx
  41344c:	add    cl,ch
  41344e:	mov    bl,0x5c
  413450:	and    eax,0xf5cd6e9
  413455:	xchg   ecx,eax
  413456:	lea    ecx,[ebx]
  413458:	(bad)  
  413459:	call   0xe1b5fe30
  41345e:	xor    DWORD PTR [eax+ecx*1-0x7f],ebx
  413462:	xor    esp,edx
  413464:	std    
  413465:	xchg   BYTE PTR [esp+ecx*2+0x329b1e1c],bh
  41346c:	pop    ebx
  41346d:	stos   DWORD PTR es:[edi],eax
  41346e:	fisttp QWORD PTR [ecx]
  413470:	mov    DWORD PTR ds:0x960d01f5,esp
  413476:	xchg   ebp,eax
  413477:	sub    eax,0x6b2eb90c
  41347c:	ficom  DWORD PTR [esi-0x10]
  41347f:	leave  
  413480:	std    
  413481:	aad    0xe2
  413483:	add    eax,ebp
  413485:	rol    DWORD PTR [eax],0x0
  413488:	or     al,0xd6
  41348a:	std    
  41348b:	sub    cl,BYTE PTR [edi-0xe1e95eb]
  413491:	sbb    edi,DWORD PTR [edi+eiz*1-0x302f66c]
  413498:	outs   dx,BYTE PTR ds:[esi]
  413499:	sti    
  41349a:	aas    
  41349b:	jmp    0xfcb5fef3
  4134a0:	mov    DWORD PTR [edx+0x20],ecx
  4134a3:	mov    edx,0x2e0016d1
  4134a8:	adc    DWORD PTR [esi],ebp
  4134aa:	popa   
  4134ab:	(bad)  
  4134ac:	pop    ss
  4134ad:	or     al,ch
  4134af:	test   eax,0xe90000ce
  4134b4:	(bad)  
  4134b5:	enter  0xef89,0x1b
  4134b9:	retf   0x474
  4134bc:	or     al,0x48
  4134be:	add    al,0x20
  4134c0:	add    eax,0x8b544701
  4134c5:	inc    edi
  4134c6:	call   0x26dbccb
  4134cb:	add    BYTE PTR [edi+0x30e84dd5],al
  4134d1:	out    dx,al
  4134d2:	std    
  4134d3:	push   DWORD PTR [ebx]
  4134d5:	and    eax,0xee9629e8
  4134da:	sti    
  4134db:	sbb    DWORD PTR [edx],0xb
  4134de:	jg     0x413546
  4134e0:	cmp    BYTE PTR [ebx],cl
  4134e2:	mov    edi,0x7fbeb755
  4134e7:	in     al,dx
  4134e8:	inc    eax
  4134e9:	mov    ah,BYTE PTR [ecx-0xc]
  4134ec:	add    BYTE PTR [eax],al
  4134ee:	cmp    al,0x8a
  4134f0:	popa   
  4134f1:	clc    
  4134f2:	cmp    al,0x45
  4134f4:	push   ebx
  4134f5:	mov    esp,DWORD PTR [edx+esi*4-0x124c0071]
  4134fc:	xchg   eax,esi
  4134fe:	jns    0x4134e4
  413500:	je     0x41354c
  413502:	push   ss
  413503:	and    ebp,DWORD PTR [eax+0x4c]
  413506:	sub    cl,BYTE PTR [ebx+0x0]
  413509:	push   0xffffffbd
  41350b:	inc    esp
  41350c:	call   0x4a1c32
  413511:	test   DWORD PTR [edi+eiz*2-0x2cc674d3],edi
  413518:	xchg   BYTE PTR [esi],al
  41351a:	addr16 pop ss
  41351c:	or     al,0x89
  41351e:	jp     0x4134f6
  413520:	mov    BYTE PTR [ebp-0x34],al
  413523:	push   ebx
  413524:	inc    esi
  413525:	or     al,0x37
  413527:	(bad)  
  413528:	addr16 add al,0x5a
  41352b:	push   ebx
  41352c:	jno    0x413522
  41352e:	sti    
  41352f:	pop    ss
  413530:	clc    
  413531:	add    bh,BYTE PTR [edx+ecx*1-0x5857700]
  413538:	out    0xd5,eax
  41353a:	mov    al,ds:0xc28b000c
  41353f:	rol    DWORD PTR [esi-0x23942af1],1
  413545:	jmp    0xbb2d5416
  41354a:	pushf  
  41354b:	iret   
  41354c:	loope  0x4135b8
  41354e:	jno    0x413547
  413550:	mov    ?,WORD PTR [ebx+0x0]
  413553:	add    BYTE PTR [ecx-0x38],ah
  413556:	data16 std 
  413558:	bound  esp,QWORD PTR [edi+0x4efac58d]
  41355e:	retf   
  41355f:	ret    0xe0e1
  413562:	cmp    BYTE PTR [ecx+0x1cf06139],cl
  413568:	fchs   
  41356a:	add    DWORD PTR [ecx-0x5d],edx
  41356d:	xchg   edx,eax
  41356e:	mov    esi,0x19bd3255
  413573:	adc    dl,BYTE PTR [ebp+0x22f886e0]
  413579:	fcomp  QWORD PTR [ebp-0x58]
  41357c:	lds    esi,FWORD PTR [esp+ecx*1-0x3bc7dd77]
  413583:	dec    ecx
  413584:	aad    0xe0
  413586:	out    dx,al
  413587:	push   es
  413588:	stos   BYTE PTR es:[edi],al
  413589:	dec    eax
  41358a:	mov    ecx,DWORD PTR [eax-0x2b]
  41358d:	loopne 0x413514
  41358f:	shr    BYTE PTR [eax-0x33],0x8e
  413593:	lds    ebp,FWORD PTR [edi]
  413595:	in     al,0x4
  413597:	add    ch,dl
  413599:	xor    eax,0x2ed8ec8f
  41359e:	loope  0x413588
  4135a0:	test   BYTE PTR [ecx+0x3],al
  4135a3:	add    BYTE PTR [eax+0x66],bl
  4135a6:	lock sti 
  4135a8:	ret    0x3404
  4135ab:	std    
  4135ac:	loopne 0x413610
  4135ae:	cmc    
  4135af:	aas    
  4135b0:	aad    0x65
  4135b2:	push   edi
  4135b3:	hlt    
  4135b4:	ins    DWORD PTR es:[edi],dx
  4135b5:	in     al,0x4
  4135b7:	add    BYTE PTR [eax],al
  4135b9:	add    ch,dl
  4135bb:	or     dl,bl
  4135bd:	rcl    ah,cl
  4135bf:	or     edi,esp
  4135c1:	nop
  4135c2:	push   esi
  4135c3:	out    dx,al
  4135c4:	loop   0x4135a8
  4135c6:	mov    BYTE PTR [edx],bh
  4135c8:	inc    ecx
  4135c9:	add    al,0x4c
  4135cb:	int3   
  4135cc:	aaa    
  4135cd:	xchg   ecx,eax
  4135ce:	push   esi
  4135cf:	out    0xc4,al
  4135d1:	loop   0x413643
  4135d3:	cmp    bh,BYTE PTR [esi+0x26f81af8]
  4135d9:	add    al,0x56
  4135db:	retf   0x33
  4135de:	out    dx,eax
  4135df:	or     dh,BYTE PTR [eax+ecx*4+0x39]
  4135e3:	rcr    DWORD PTR [esi-0x69c35a1e],1
  4135e9:	clc    
  4135ea:	(bad)  
  4135eb:	mul    DWORD PTR [esi]
  4135ed:	add    al,0x4e
  4135ef:	(bad)  
  4135f0:	mov    ebx,esi
  4135f2:	xor    ch,dl
  4135f4:	pop    ss
  4135f5:	in     al,dx
  4135f6:	cmc    
  4135f7:	inc    ecx
  4135f8:	out    0x3,eax
  4135fa:	and    BYTE PTR [edi-0x25],bl
  4135fd:	loop   0x4135a5
  4135ff:	add    DWORD PTR [esi-0x18b45c15],edi
  413605:	add    edx,DWORD PTR [ecx-0x36]
  413608:	fdiv   st(7),st
  41360a:	retf   0xf74e
  41360d:	pop    eax
  41360e:	(bad)  
  41360f:	mov    DWORD PTR [edx+0xd],eax
  413612:	imul   edi,ebx,0x9b1f3ce
  413618:	out    0xe2,eax
  41361a:	(bad)  
  41361b:	jmp    0x4179f9
  413620:	aad    0xd3
  413622:	sub    ch,ah
  413624:	and    ebp,edx
  413626:	push   ds
  413627:	loop   0x4135ae
  413629:	or     al,BYTE PTR [edx]
  41362b:	add    eax,0x3eadca07
  413630:	xchg   edx,eax
  413631:	(bad)  
  413632:	repz add eax,DWORD PTR [esi]
  413635:	or     DWORD PTR [ebx],0xfff9b986
  41363b:	cdq    
  41363c:	fdivr  QWORD PTR [esi]
  41363e:	xor    DWORD PTR [edx],edx
  413640:	jecxz  0x413618
  413642:	xor    ecx,DWORD PTR [ebp+0x4b]
  413645:	dec    edx
  413646:	add    BYTE PTR [edx+eiz*1-0x22],ch
  41364a:	call   0x4b4593
  41364f:	gs xchg ecx,eax
  413651:	pop    ebp
  413652:	data16 add BYTE PTR [edx+0x75dc7301],dh
  413659:	pop    eax
  41365a:	adc    BYTE PTR [edx+0x2],ah
  41365d:	push   es
  41365e:	std    
  41365f:	xor    al,0x79
  413661:	(bad)  
  413662:	jae    0x413601
  413664:	inc    ecx
  413665:	(bad)  
  413666:	(bad)  
  413667:	sahf   
  413668:	xor    al,0x7f
  41366a:	fsub   DWORD PTR [edx+ebx*4-0x23]
  41366e:	call   0x4ac450
  413673:	xchg   edx,eax
  413674:	fwait
  413675:	cmp    BYTE PTR [ebx-0x7f],0xec
  413679:	(bad)  
  41367a:	jae    0x4136f9
  41367c:	xor    ebp,edx
  41367e:	fsubr  DWORD PTR [esi+0x34]
  413681:	xor    al,0x74
  413684:	add    BYTE PTR [eax],al
  413686:	call   0x9:0x9f55e8dd
  41368d:	ins    BYTE PTR es:[edi],dx
  41368e:	pop    ds
  41368f:	pop    ebp
  413690:	sub    cl,al
  413692:	cmp    al,0xd4
  413694:	std    
  413695:	jmp    0x96498e8f
  41369a:	lods   al,BYTE PTR ds:[esi]
  41369b:	loope  0x4136ac
  41369d:	in     eax,dx
  41369e:	xlat   BYTE PTR ds:[ebx]
  41369f:	or     DWORD PTR [ecx+ebp*1-0x6302f983],eax
  4136a6:	(bad)  
  4136a7:	mov    DWORD PTR ds:[edx+ebx*8-0x48af17c5],ebx
  4136af:	aad    0xfd
  4136b1:	arpl   WORD PTR [ecx+0x3c],di
  4136b4:	call   0xfbd0aab9
  4136b9:	jmp    DWORD PTR [esi]
  4136bb:	int    0x5b
  4136bd:	pop    esi
  4136be:	inc    edi
  4136bf:	rol    dl,0xc
  4136c2:	lods   al,BYTE PTR ds:[esi]
  4136c3:	sbb    al,0x87
  4136c5:	in     al,dx
  4136c6:	(bad)  
  4136c7:	jmp    0x5650:0xd39883f8
  4136ce:	ret    
  4136cf:	arpl   WORD PTR [eax],bx
  4136d1:	call   0x3cc63e
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jmp    0x4d87:0x2a0c737
  4136de:	js     0x41366e
  4136e0:	or     bh,bh
  4136e2:	cmc    
  4136e3:	adc    BYTE PTR ds:[ebx+0x3302e66c],cl
  4136ea:	add    BYTE PTR [eax],al
  4136ec:	(bad)  
  4136ed:	div    dl
  4136ef:	je     0x4136c2
  4136f1:	adc    BYTE PTR [eax-0x80],ch
  4136f4:	sub    al,0x7
  4136f6:	add    BYTE PTR [edx+0x40],ch
  4136f9:	adc    ch,BYTE PTR [edx+0x1]
  4136fc:	les    ecx,FWORD PTR ds:0xea6c0000
  413702:	jno    0x41370c
  413704:	stos   DWORD PTR es:[edi],eax
  413705:	(bad)  [ecx-0x7af8c3ee]
  41370b:	push   es
  41370c:	jg     0x4136bc
  41370e:	sti    
  41370f:	je     0x41373d
  413711:	pop    ss
  413712:	call   0x4869fb
  413717:	mov    esp,DWORD PTR [ebp+ebp*1+0x2b3089ca]
  41371e:	and    BYTE PTR [ecx-0x7cdbd4c0],cl
  413724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413725:	jmp    0xcd08609e
  41372a:	or     eax,DWORD PTR [edi+edx*1-0x2afffff9]
  413731:	xchg   ebx,eax
  413732:	mov    es,WORD PTR [ecx+esi*8-0x30]
  413736:	xor    DWORD PTR [edx-0x28],ebp
  413739:	pop    ebp
  41373a:	inc    ebp
  41373b:	and    al,0xc9
  41373d:	jo     0x41371f
  41373f:	ss dec esp
  413741:	pop    esp
  413742:	and    eax,0x25644c2c
  413747:	xor    BYTE PTR [edx+0x15124dd5],dl
  41374d:	loope  0x4136d7
  41374f:	rol    BYTE PTR [eax],0x0
  413752:	or     bh,cl
  413754:	jmp    0x2220d2f
  413759:	xor    DWORD PTR [ebp+0x5e593e2b],edx
  41375f:	int    0x3f
  413761:	ret    0xe0cd
  413764:	adc    bh,ch
  413766:	pushf  
  413767:	and    al,0x28
  413769:	or     al,0xe2
  41376b:	fs jle 0x41376e
  41376e:	aad    0xe0
  413770:	cmp    BYTE PTR [ecx+edi*8-0x14],0x8
  413775:	jae    0x413721
  413777:	addr16 inc eax
  413779:	and    al,0xc5
  41377b:	pop    DWORD PTR [eax+0xc]
  41377e:	out    0xa0,al
  413780:	mov    ebx,DWORD PTR [ecx+edi*8-0x50]
  413784:	add    bl,BYTE PTR [ecx+esi*8-0x48]
  413788:	mov    bh,al
  41378a:	out    0xec,al
  41378c:	and    eax,0x71f561c
  413791:	adc    ebp,edi
  413793:	neg    BYTE PTR [edi+0x24]
  413796:	mov    cl,0xbb
  413798:	dec    edx
  413799:	jb     0x413776
  41379b:	pop    es
  41379c:	inc    eax
  41379d:	and    al,0xb5
  41379f:	fwait
  4137a0:	inc    edx
  4137a1:	jg     0x413804
  4137a3:	add    al,0xf4
  4137a5:	(bad)  
  4137a6:	(bad)  
  4137a8:	add    esi,DWORD PTR [ebp+0xc]
  4137ab:	or     dl,BYTE PTR [ecx-0x6c2edafc]
  4137b1:	daa    
  4137b2:	fst    st(0)
  4137b4:	fucomp st(3)
  4137b6:	add    BYTE PTR [eax],al
  4137b8:	mov    BYTE PTR [edi-0x19],0x3
  4137bc:	pop    ecx
  4137bd:	retf   0x767b
  4137c0:	aas    
  4137c1:	or     ch,BYTE PTR [eax+ecx*2-0x7]
  4137c5:	stc    
  4137c6:	xchg   esi,eax
  4137c7:	imul   edx,esi,0xf127a37e
  4137cd:	cmp    esi,esp
  4137cf:	adc    eax,0x30032e52
  4137d4:	pop    edx
  4137d5:	dec    esi
  4137d6:	or     edx,DWORD PTR [eax+edi*2]
  4137d9:	neg    DWORD PTR [edx]
  4137db:	repnz mov dl,0x9
  4137de:	ins    BYTE PTR es:[edi],dx
  4137df:	ret    
  4137e0:	out    0x86,al
  4137e2:	rcl    BYTE PTR [ebx+0x60],1
  4137e5:	shl    DWORD PTR [esi-0x51c6a7ee],1
  4137eb:	push   edi
  4137ec:	stc    
  4137ed:	sub    DWORD PTR [esi-0x61d60ea9],esp
  4137f3:	adc    eax,0x42c922d
  4137f8:	aad    0x85
  4137fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fb:	push   cs
  4137fc:	pop    ecx
  4137fd:	cmp    BYTE PTR [esi-0x4a2ed722],al
  413803:	faddp  st(6),st
  413805:	adc    eax,0x86d543d9
  41380a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41380b:	push   cs
  41380c:	pop    ecx
  41380d:	dec    eax
  41380e:	data16 fimul WORD PTR [eax]
  413811:	cmp    DWORD PTR [esi+0x3f180036],esi
  413817:	jne    0x4137af
  413819:	or     edi,esp
  41381b:	xchg   DWORD PTR [eax],eax
  41381d:	add    BYTE PTR ds:0xe8176b01,dl
  413823:	sar    BYTE PTR [esi],1
  413825:	adc    BYTE PTR [ebx+0x57360001],0x40
  41382c:	or     al,0x2e
  41382e:	pop    edi
  41382f:	(bad)  
  413830:	out    0xd5,eax
  413832:	stos   DWORD PTR es:[edi],eax
  413833:	into   
  413834:	std    
  413835:	jb     0x41380f
  413837:	mov    bh,al
  413839:	push   ss
  41383a:	and    bh,bh
  41383c:	dec    edi
  41383d:	push   cs
  41383e:	lods   eax,DWORD PTR ds:[esi]
  41383f:	mov    al,ds:0xced6a912
  413844:	ss (bad) 
  413846:	stos   BYTE PTR es:[edi],al
  413847:	enter  0xa912,0xd6
  41384b:	aaa    
  41384c:	call   0xfe0f806e
  413851:	jb     0x4137e6
  413853:	retf   0x7253
  413856:	test   DWORD PTR [edx+0x545609ec],ecx
  41385c:	or     al,0xe9
  41385e:	(bad)  
  41385f:	sub    DWORD PTR [eax],eax
  413861:	sbb    ah,BYTE PTR [eax-0x26507b02]
  413867:	or     DWORD PTR [eax],eax
  413869:	mov    dh,0xc3
  41386b:	loope  0x4138d1
  41386d:	and    al,0xd9
  41386f:	or     DWORD PTR [edi-0x3dd5ced4],eax
  413875:	jo     0x413881
  413877:	out    0x81,al
  413879:	xchg   ecx,eax
  41387a:	sbb    dh,bh
  41387c:	adc    DWORD PTR [edi-0x27],0x9
  413880:	add    BYTE PTR [ebx],dl
  413882:	add    BYTE PTR [eax],al
  413884:	xlat   BYTE PTR ds:[ebx]
  413885:	sbb    bl,cl
  413887:	sbb    ah,ah
  413889:	into   
  41388a:	ss xor ebx,0x5ae9004c
  413891:	leave  
  413892:	or     eax,0x9366d
  413897:	jmp    0xb4c94fbd
  41389c:	sbb    ecx,esp
  41389e:	xor    al,0xa4
  4138a0:	(bad)  
  4138a1:	or     DWORD PTR [edi+0x1fe43900],eax
  4138a7:	ret    0x1865
  4138aa:	in     al,dx
  4138ab:	and    DWORD PTR [esi+ebp*4+0x8967774],0xffffff89
  4138b3:	inc    ebp
  4138b4:	in     al,dx
  4138b5:	sbb    BYTE PTR [eax-0x1],dl
  4138b8:	leave  
  4138b9:	rcl    DWORD PTR [ebx],cl
  4138bb:	inc    eax
  4138bc:	lods   al,BYTE PTR ds:[esi]
  4138bd:	add    BYTE PTR [esi+0x10],0x8f
  4138c1:	dec    eax
  4138c2:	or     al,0x8b
  4138c4:	xchg   ecx,eax
  4138c5:	jae    0x4138d9
  4138c7:	inc    eax
  4138c8:	lods   al,BYTE PTR ds:[esi]
  4138c9:	mov    al,ah
  4138cb:	or     al,0x3f
  4138cd:	test   BYTE PTR [ecx-0x10],al
  4138d0:	xor    DWORD PTR [edi-0x8],eax
  4138d3:	push   eax
  4138d4:	es pop es
  4138d6:	mov    DWORD PTR [ebp-0x64],eax
  4138d9:	sbb    edi,ebx
  4138db:	mov    ss:0x8c08196,eax
  4138e1:	and    eax,0x8947d7f
  4138e6:	jno    0x413909
  4138e8:	add    BYTE PTR [eax],al
  4138ea:	mov    edi,0xbcf8417e
  4138ef:	lods   al,BYTE PTR ds:[esi]
  4138f0:	jno    0x4138fe
  4138f2:	cmp    DWORD PTR [eax],0x8
  4138f5:	jmp    FWORD PTR [edx]
  4138f7:	scas   al,BYTE PTR es:[edi]
  4138f8:	rol    DWORD PTR [ebp-0x74f1c894],cl
  4138fe:	jmp    0x44866dfc
  413903:	cmp    BYTE PTR [esi],al
  413905:	(bad)  
  413906:	stc    
  413907:	lods   al,BYTE PTR ds:[esi]
  413908:	std    
  413909:	jmp    0xae50:0x75fb1a0a
  413910:	jno    0x4138fa
  413912:	xor    esp,0xffffffe7
  413915:	mov    al,ds:0xff000b38
  41391a:	jmp    0x41d2:0xd53411ac
  413921:	add    dl,dh
  413923:	neg    dl
  413925:	adc    esp,DWORD PTR ds:0x860041b3
  41392b:	orps   xmm4,xmm4
  41392e:	fimul  DWORD PTR [ebp+0x490bfde1]
  413934:	jg     0x41397a
  413936:	aad    0xe0
  413938:	xchg   DWORD PTR [ebx-0x3e],eax
  41393b:	sti    
  41393c:	(bad)  
  41393d:	xor    DWORD PTR [ebp-0x6838c769],edx
  413943:	call   0xf49f8c49
  413948:	jg     0x41392e
  41394a:	popf   
  41394b:	arpl   bp,bp
  41394d:	sbb    BYTE PTR [eax],al
  41394f:	add    BYTE PTR [esi],al
  413951:	jo     0x41392f
  413953:	ss jge 0x4139b9
  413956:	inc    ebp
  413957:	add    ch,dl
  413959:	pop    ebx
  41395a:	pop    ss
  41395b:	dec    esp
  41395c:	out    0x20,eax
  41395e:	add    al,0x31
  413960:	sahf   
  413961:	retf   
  413962:	dec    esp
  413963:	aaa    
  413964:	adc    DWORD PTR ds:0x63f47408,eax
  41396a:	pop    eax
  41396b:	and    al,0xd1
  41396d:	in     eax,0xa
  41396f:	sub    DWORD PTR [esi],0xffffffe0
  413972:	add    DWORD PTR [eax],eax
  413974:	pop    esi
  413975:	and    al,0x20
  413977:	adc    BYTE PTR [esi],al
  413979:	pop    ds
  41397a:	hlt    
  41397b:	xchg   BYTE PTR [ecx-0x2ac50e3c],bl
  413981:	loopne 0x4139a4
  413983:	add    dl,ah
  413985:	outs   dx,DWORD PTR ds:[si]
  413987:	add    ch,dl
  413989:	loopne 0x41395a
  41398b:	inc    esp
  41398c:	stc    
  41398d:	mov    ah,0x4
  41398f:	jae    0x413962
  413991:	fwait
  413992:	(bad)  
  413993:	jae    0x413964
  413995:	or     al,BYTE PTR [ebx]
  413997:	push   ecx
  413998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413999:	or     DWORD PTR [esi+0x12],esp
  41399c:	in     eax,dx
  41399d:	in     al,dx
  41399e:	mov    ds:0x2785d503,al
  4139a3:	push   eax
  4139a4:	ins    BYTE PTR es:[edi],dx
  4139a5:	into   
  4139a6:	adc    eax,0xe745baec
  4139ab:	add    eax,DWORD PTR [eax+eax*4+0x7cb91fa3]
  4139b2:	stos   DWORD PTR es:[edi],eax
  4139b3:	pop    ds
  4139b4:	add    BYTE PTR [eax],al
  4139b6:	in     eax,0x39
  4139b8:	rol    DWORD PTR [eax],0x5e
  4139bb:	inc    esi
  4139bc:	retf   
  4139bd:	not    DWORD PTR [edx]
  4139bf:	int    0xd5
  4139c1:	mov    WORD PTR [ecx],fs
  4139c3:	xlat   BYTE PTR es:[ebx]
  4139c5:	fimul  DWORD PTR [eax+0x4c512787]
  4139cb:	loope  0x413969
  4139cd:	xchg   BYTE PTR [ebp+0x53612cd],cl
  4139d3:	loop   0x41398c
  4139d5:	mov    al,0x90
  4139d7:	int    0x62
  4139d9:	mov    esp,0x405bb156
  4139de:	out    dx,eax
  4139df:	or     DWORD PTR [edi+edi*1-0x4f],ebp
  4139e3:	stc    
  4139e4:	ss fucomi st,st(1)
  4139e7:	and    eax,0x146836ef
  4139ec:	(bad)  
  4139ed:	mov    dl,0x56
  4139ef:	retf   0x2e33
  4139f2:	dec    esp
  4139f3:	inc    esi
  4139f4:	or     ecx,DWORD PTR [eax]
  4139f6:	or     al,0x46
  4139f8:	add    esi,esp
  4139fa:	(bad)  
  4139fb:	sub    DWORD PTR [ecx],edx
  4139fd:	add    eax,0x8eef5740
  413a02:	or     al,0xe2
  413a04:	mov    esi,DWORD PTR [edi-0x3c9b32d0]
  413a0a:	mov    eax,ds:0xf94771f9
  413a0f:	icebp  
  413a10:	outs   dx,DWORD PTR ds:[esi]
  413a11:	dec    ecx
  413a12:	int    0x80
  413a14:	add    BYTE PTR ds:0x1f86edb5,ah
  413a1a:	add    BYTE PTR [eax],al
  413a1c:	fucom  st(2)
  413a1e:	or     BYTE PTR [edx+0x5ed303ee],bh
  413a24:	pop    ds
  413a25:	sbb    eax,eax
  413a27:	mov    dh,0xb3
  413a29:	and    bl,0xac
  413a2c:	adc    BYTE PTR [esi],al
  413a2e:	add    BYTE PTR [ebx+edx*2-0x1ba7e22],bl
  413a35:	mov    ch,ah
  413a37:	aad    0x63
  413a39:	inc    ebx
  413a3a:	or     BYTE PTR [edx],cl
  413a3c:	pop    ss
  413a3d:	(bad)  
  413a3e:	push   eax
  413a3f:	fiadd  DWORD PTR [ebx-0x343aa37f]
  413a45:	mov    bh,al
  413a47:	push   ss
  413a48:	fild   WORD PTR [ebp+0x9d6e9a0]
  413a4e:	std    
  413a4f:	mov    edi,0xe94180ae
  413a54:	(bad)  
  413a55:	test   BYTE PTR [ebp+ecx*8-0x72],al
  413a59:	sub    edx,eax
  413a5b:	pusha  
  413a5c:	mov    edx,0xa16a1c25
  413a61:	into   
  413a62:	or     eax,0x95765
  413a67:	jmp    0xddb80915
  413a6c:	lea    edx,[ebx+0x8]
  413a6f:	mov    bh,0xe1
  413a72:	dec    esp
  413a73:	sub    dl,cl
  413a75:	or     DWORD PTR [ecx+ebp*4+0x5c5155a5],eax
  413a7c:	xchg   ebp,eax
  413a7d:	and    eax,0x3910
  413a82:	mov    bl,0x8
  413a84:	mov    esp,DWORD PTR ds:0x964fedf5
  413a8a:	(bad)  
  413a8b:	into   
  413a8c:	adc    ebx,DWORD PTR ds:0xc23
  413a92:	mov    cl,0xc5
  413a94:	je     0x413ae1
  413a96:	scas   eax,DWORD PTR es:[edi]
  413a97:	xor    DWORD PTR [esp+ecx*1],esp
  413a9a:	add    DWORD PTR [ebx],edi
  413a9c:	inc    esp
  413a9d:	sub    al,0x29
  413aa0:	adc    al,0x1
  413aa2:	aas    
  413aa3:	mov    cl,0x76
  413aa5:	or     al,0x9b
  413aa7:	aaa    
  413aa8:	or     bh,bh
  413aaa:	rcr    ch,cl
  413aac:	adc    DWORD PTR [ebx-0x4],eax
  413aaf:	pop    es
  413ab0:	test   al,al
  413ab2:	and    BYTE PTR [ebx],ah
  413ab4:	dec    edi
  413ab5:	lea    esi,[eax]
  413ab7:	in     al,dx
  413ab8:	(bad)  
  413aba:	xchg   esi,eax
  413abb:	int3   
  413abc:	mov    al,BYTE PTR [eax+edx*8-0x2f]
  413ac0:	dec    ebp
  413ac1:	jmp    DWORD PTR [edx-0x4147ee4e]
  413ac7:	inc    edi
  413ac8:	add    BYTE PTR [ebp-0x7cebc604],al
  413ace:	pop    eax
  413acf:	jmp    0x413adc
  413ad1:	add    eax,0x36fb0421
  413ad6:	fsubr  QWORD PTR [ebp-0x39f8c3ee]
  413add:	inc    esp
  413ade:	nop
  413adf:	(bad)  
  413ae0:	cld    
  413ae1:	push   edx
  413ae2:	jnp    0x413b1f
  413ae4:	and    al,0x20
  413ae6:	add    BYTE PTR [eax],al
  413ae8:	fwait
  413ae9:	cmp    esp,DWORD PTR [eax+eiz*1]
  413aec:	mov    edi,ecx
  413aee:	out    0xd4,eax
  413af0:	mov    esi,0xb08a0005
  413af5:	sub    DWORD PTR [edi],eax
  413af7:	pop    ebx
  413af8:	out    0xab,eax
  413afa:	pop    ecx
  413afb:	ret    
  413afc:	dec    edi
  413afd:	shr    BYTE PTR [edx+0x8],0xb7
  413b01:	(bad)  
  413b02:	pop    edx
  413b03:	test   al,0x2d
  413b05:	cmp    eax,DWORD PTR ds:0x1ffc64d1
  413b0b:	adc    ebp,0x38
  413b0e:	out    0xe9,al
  413b10:	xlat   BYTE PTR ds:[ebx]
  413b11:	xchg   ecx,eax
  413b12:	jmp    0x8ab3e361
  413b17:	add    al,0x48
  413b19:	add    DWORD PTR [edi-0x7ede2abf],edi
  413b1f:	not    ebp
  413b21:	loope  0x413b24
  413b23:	add    BYTE PTR [edi+0x17ff9149],al
  413b29:	pusha  
  413b2a:	pop    ss
  413b2b:	add    BYTE PTR [eax-0x29],ch
  413b2e:	imul   eax,DWORD PTR [eax-0x2b],0xd46ad1e0
  413b35:	mov    dh,0x1
  413b37:	push   0xffffffd5
  413b39:	jb     0x413b13
  413b3b:	adc    ebx,ecx
  413b3d:	mov    al,0x41
  413b3f:	add    BYTE PTR [eax+0x20],dl
  413b42:	dec    esi
  413b43:	add    esi,esp
  413b45:	ficom  DWORD PTR [ebx]
  413b47:	rcl    BYTE PTR [esi+0xc10230],0x0
  413b4e:	pop    esp
  413b4f:	call   0x810a:0x751d4809
  413b56:	sti    
  413b57:	loopne 0x413add
  413b59:	shl    ax,1
  413b5c:	in     al,dx
  413b5d:	aas    
  413b5e:	push   esi
  413b5f:	loop   0x413b39
  413b61:	or     al,0xf0
  413b64:	mov    esi,0x50e0d541
  413b69:	xor    esp,DWORD PTR [edx]
  413b6b:	ins    BYTE PTR es:[edi],dx
  413b6c:	hlt    
  413b6d:	les    edx,FWORD PTR [esi]
  413b6f:	loope  0x413b9f
  413b71:	std    
  413b72:	rcr    BYTE PTR [eax+0x60d53ff2],0x17
  413b79:	rcl    BYTE PTR [ebx-0x37fffbe1],1
  413b7f:	stos   DWORD PTR es:[edi],eax
  413b80:	jmp    0xd5dc85ff
  413b85:	test   BYTE PTR ds:0x54061b09,dl
  413b8b:	and    al,0xb3
  413b8d:	mov    esi,0xbde70994
  413b92:	(bad)  
  413b93:	mov    ecx,0x8d543a5
  413b98:	push   ds
  413b99:	xlat   BYTE PTR ds:[ebx]
  413b9a:	(bad)  
  413b9b:	lods   eax,DWORD PTR ds:[esi]
  413b9c:	fld    DWORD PTR [ebx-0x2b]
  413b9f:	sub    ah,BYTE PTR [edx-0x42]
  413ba2:	adc    al,0x33
  413ba4:	(bad)  
  413ba5:	aam    0x4c
  413ba7:	inc    ebx
  413ba8:	out    dx,eax
  413ba9:	dec    ebx
  413baa:	lea    edx,[ebp-0x4]
  413bad:	mov    bl,BYTE PTR [ebx+0xc46c05]
  413bb3:	add    BYTE PTR [ecx+0x2],ah
  413bb6:	mov    bh,0xd6
  413bb8:	(bad)  
  413bb9:	stc    
  413bba:	(bad)  
  413bbb:	inc    ebx
  413bbc:	aad    0x7e
  413bbe:	cmc    
  413bbf:	or     bl,0x3e
  413bc2:	loopne 0x413c2d
  413bc4:	aad    0x5f
  413bc6:	cs icebp 
  413bc8:	ficomp DWORD PTR [ecx]
  413bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bcb:	add    ebx,DWORD PTR [ebx]
  413bcd:	int    0xb4
  413bcf:	mov    al,cl
  413bd1:	pop    ebx
  413bd2:	mov    edx,0x62ba5c2d
  413bd7:	ds int 0x51
  413bda:	scas   eax,DWORD PTR es:[edi]
  413bdb:	and    DWORD PTR cs:[edi+0xf],esp
  413bdf:	dec    ebx
  413be0:	nop
  413be1:	leave  
  413be2:	idiv   BYTE PTR [edi-0x6b]
  413be5:	aas    
  413be6:	jecxz  0x413bf9
  413be8:	xchg   ebp,eax
  413be9:	mov    ch,0x65
  413beb:	mov    ebx,edi
  413bed:	or     eax,0x28aabb1a
  413bf2:	pop    esp
  413bf3:	adc    al,0x5c
  413bf5:	push   eax
  413bf6:	fild   QWORD PTR [edx]
  413bf8:	xchg   esp,eax
  413bf9:	ds repz dec ebx
  413bfc:	out    0x19,al
  413bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bff:	inc    eax
  413c00:	push   ecx
  413c01:	push   cs
  413c02:	add    BYTE PTR [ecx-0x2a],ch
  413c05:	or     ecx,ebp
  413c07:	out    0x83,al
  413c09:	dec    ebp
  413c0a:	cld    
  413c0b:	jmp    0x5ae6:0x36000a56
  413c12:	std    
  413c13:	sbb    al,0xd
  413c15:	(bad)  
  413c16:	mov    es,WORD PTR ss:[eax]
  413c19:	add    BYTE PTR ds:0xd1291015,ah
  413c1f:	mov    eax,es
  413c21:	hlt    
  413c22:	adc    dl,BYTE PTR [eax+0x5b17821d]
  413c28:	std    
  413c29:	hlt    
  413c2a:	fcmovb st,st(6)
  413c2c:	jae    0x413c1f
  413c2e:	and    edi,edi
  413c30:	cld    
  413c31:	hlt    
  413c32:	add    bl,BYTE PTR [ecx]
  413c34:	inc    eax
  413c35:	jmp    0xf319fad8
  413c3a:	push   ss
  413c3b:	dec    edx
  413c3c:	jmp    0x31518a58
  413c41:	and    ah,bh
  413c43:	shl    BYTE PTR [edi],1
  413c45:	xchg   esp,eax
  413c46:	sar    BYTE PTR [edi],cl
  413c48:	sbb    eax,0xd120562
  413c4d:	pop    edi
  413c4e:	stos   BYTE PTR es:[edi],al
  413c4f:	pop    ss
  413c50:	xor    DWORD PTR [ecx],edi
  413c52:	pop    ecx
  413c53:	stos   DWORD PTR es:[edi],eax
  413c54:	std    
  413c55:	jmp    0x2004630
  413c5a:	into   
  413c5b:	cli    
  413c5c:	add    ebx,DWORD PTR [esi+esi*1-0x31]
  413c60:	inc    ecx
  413c61:	jmp    0xe58c3f7f
  413c66:	and    al,0xe9
  413c68:	xchg   edi,esp
  413c6a:	enterw 0x475e,0xbc
  413c6f:	rol    dl,1
  413c71:	icebp  
  413c72:	(bad)  
  413c73:	pop    esp
  413c74:	mov    ebp,eax
  413c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c77:	xchg   edx,eax
  413c78:	push   eax
  413c79:	loope  0x413cd6
  413c7b:	push   ebx
  413c7c:	std    
  413c7d:	add    BYTE PTR [eax],al
  413c7f:	add    BYTE PTR [ebp-0x40bb8c09],ah
  413c85:	mov    bl,0x0
  413c87:	je     0x413cb9
  413c89:	push   edx
  413c8a:	jno    0x413c9c
  413c8c:	jnp    0x413c96
  413c8e:	cld    
  413c8f:	adc    al,0x2c
  413c91:	or     al,0x0
  413c93:	jmp    0x413cd0
  413c95:	test   DWORD PTR [ecx-0x4],eax
  413c98:	sub    al,0xc
  413c9a:	add    BYTE PTR [eax],al
  413c9c:	mov    bh,0x4d
  413c9e:	add    al,0x8b
  413ca0:	sbb    eax,esp
  413ca2:	add    eax,0x67be08
  413ca8:	jno    0x413cfa
  413caa:	cld    
  413cab:	push   ecx
  413cac:	jmp    0x413ce1
  413cae:	add    dl,BYTE PTR [eax+0x73]
  413cb1:	mov    eax,0xc3c0ffd
  413cb6:	jg     0x413cb0
  413cb8:	std    
  413cb9:	push   esi
  413cba:	add    DWORD PTR [ecx],edi
  413cbc:	or     eax,esp
  413cbe:	je     0x413cd0
  413cc0:	(bad)  
  413cc2:	out    0xc,eax
  413cc4:	into   
  413cc5:	retf   
  413cc6:	out    0x8,eax
  413cc8:	aaa    
  413cc9:	push   cs
  413cca:	repz shl BYTE PTR ds:0x9201adc5,1
  413cd1:	aam    0xbf
  413cd3:	push   ebp
  413cd4:	daa    
  413cd5:	mov    dl,0x7f
  413cd7:	in     al,dx
  413cd8:	mov    al,0xfa
  413cda:	push   ebp
  413cdb:	lea    ecx,[ecx-0x29]
  413cde:	call   0xfc1e0f57
  413ce3:	inc    DWORD PTR [eax]
  413ce5:	add    BYTE PTR [ecx],cl
  413ce7:	ja     0x899c0b3
  413ced:	call   0x3d1cca
  413cf2:	call   0xe750b1c1
  413cf7:	test   al,ch
  413cf9:	jnp    0x413cd0
  413cfb:	(bad)  
  413cfd:	std    
  413cfe:	pop    ecx
  413cff:	jno    0x413d4e
  413d01:	add    al,0x26
  413d03:	mov    dl,0xe8
  413d05:	add    al,BYTE PTR [edi]
  413d07:	ins    BYTE PTR es:[edi],dx
  413d08:	xchg   BYTE PTR [ebx+0x41],al
  413d0b:	leave  
  413d0c:	jae    0x413d0c
  413d0e:	inc    edx
  413d0f:	js     0x413d44
  413d11:	mov    dl,BYTE PTR [esi]
  413d13:	dec    esp
  413d14:	leave  
  413d15:	ret    0xb0dd
  413d18:	mov    DWORD PTR cs:[ecx],edi
  413d1b:	xor    ah,ch
  413d1d:	pop    eax
  413d1e:	aam    0xb0
  413d20:	add    DWORD PTR [ecx-0x1a],edx
  413d23:	imul   ebp,DWORD PTR [ebx],0x38
  413d26:	mov    al,0xdc
  413d28:	dec    ebp
  413d29:	or     cl,BYTE PTR [edx]
  413d2b:	(bad)  
  413d2c:	icebp  
  413d2d:	out    0xce,eax
  413d2f:	std    
  413d30:	sar    ebp,cl
  413d32:	out    dx,al
  413d33:	mov    ecx,0xc068fd31
  413d38:	jmp    0x1f31cfd
  413d3d:	mov    ebp,esp
  413d3f:	sbb    ecx,edi
  413d41:	je     0x413dbc
  413d43:	cmp    edi,DWORD PTR [esi]
  413d45:	or     al,0x2a
  413d47:	ss xchg esi,eax
  413d49:	test   al,0x0
  413d4b:	add    bl,cl
  413d4d:	call   ebx
  413d4f:	call   0x432974
  413d54:	das    
  413d55:	mov    dh,0x86
  413d57:	jnp    0x413cfe
  413d59:	enter  0x52e9,0x9e
  413d5d:	mov    cl,0x1
  413d5f:	push   esi
  413d60:	push   eax
  413d61:	sub    eax,0xf9afea9
  413d66:	xor    DWORD PTR [ecx+0x4386a09a],ecx
  413d6c:	loope  0x413d0e
  413d6e:	jmp    0xd1f87da2
  413d73:	adc    DWORD PTR [ecx+0x5432f709],0xc858dec1
  413d7d:	(bad)  
  413d7e:	pop    esp
  413d7f:	clc    
  413d80:	dec    ebp
  413d81:	dec    esp
  413d82:	fbstp  TBYTE PTR [esi]
  413d84:	pop    eax
  413d85:	cmp    edi,ebp
  413d87:	shl    dh,cl
  413d89:	gs aam 0x43
  413d8c:	aad    0x8a
  413d8e:	scas   eax,DWORD PTR es:[edi]
  413d8f:	add    eax,0xac610bc6
  413d94:	cmp    BYTE PTR [ebx+edi*8],bh
  413d97:	fstp   TBYTE PTR [ebx-0x28]
  413d9a:	sahf   
  413d9b:	rol    DWORD PTR [ebx+0x20b547b1],cl
  413da1:	(bad)  
  413da2:	sub    eax,0xb062147e
  413da7:	(bad)  
  413da8:	in     eax,0x9
  413daa:	adc    al,0x7f
  413dac:	stc    
  413dad:	mov    DWORD PTR [ebx+0xb000040],eax
  413db3:	dec    esp
  413db4:	fcomip st,st(3)
  413db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413db7:	xchg   edx,eax
  413db8:	add    al,0xc8
  413dba:	(bad)  
  413dbb:	dec    ecx
  413dbc:	out    0x3a,eax
  413dbe:	popa   
  413dbf:	ss push 0x52
  413dc2:	sar    ebx,1
  413dc4:	aam    0x5c
  413dc6:	jecxz  0x413dd6
  413dc8:	call   0xe9717724
  413dcd:	or     BYTE PTR [esi-0x36],0x8f
  413dd1:	(bad)  [ebx-0x47fc1730]
  413dd7:	cmp    al,0xf3
  413dd9:	jle    0x413d73
  413ddb:	lds    edx,FWORD PTR [ebp+0x3ac51afb]
  413de1:	xor    al,0x2f
  413de3:	adc    ch,BYTE PTR [edi+0x71b2887e]
  413de9:	ss aad 0x9
  413dec:	arpl   sp,ax
  413dee:	add    DWORD PTR ds:0x90db8300,eax
  413df4:	jnp    0x413deb
  413df6:	scas   al,BYTE PTR es:[edi]
  413df7:	mov    cl,0xb7
  413df9:	mov    bl,0xd9
  413dfb:	or     DWORD PTR [ebx-0x2aa96dc],ecx
  413e01:	pop    edi
  413e02:	lods   eax,DWORD PTR ds:[esi]
  413e03:	mov    cl,0x86
  413e05:	in     al,0xd1
  413e07:	or     DWORD PTR [ebx-0x7ed55557],eax
  413e0d:	cmp    al,0x49
  413e0f:	lds    esi,FWORD PTR [ebx+0x14]
  413e12:	mov    ds:0x624dc4,eax
  413e17:	add    BYTE PTR [ebp-0x131595ef],cl
  413e1d:	mov    cl,0xfe
  413e1f:	lahf   
  413e20:	pop    es
  413e21:	(bad)  
  413e22:	mov    DWORD PTR [edi],ebp
  413e24:	sbb    eax,0xd915c088
  413e29:	das    
  413e2a:	add    BYTE PTR [esi-0x1a95e654],al
  413e30:	sub    edi,ebp
  413e32:	jg     0x413e2b
  413e34:	out    dx,al
  413e35:	les    esi,FWORD PTR [eax+esi*4+0x1c]
  413e39:	or     al,0xff
  413e3b:	fmul   st(2),st
  413e3d:	nop
  413e3e:	jnp    0x413dd5
  413e40:	ret    
  413e41:	leave  
  413e42:	call   0xfe065f20
  413e47:	dec    esi
  413e48:	jl     0x413e5f
  413e4a:	mov    DWORD PTR [esi],ebp
  413e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e4d:	cmp    ecx,DWORD PTR [eax]
  413e4f:	cdq    
  413e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e51:	ficom  DWORD PTR [eax-0x3d]
  413e54:	mov    esi,0x9e1e895c
  413e59:	and    eax,0x8dd6e952
  413e5e:	rcl    BYTE PTR [ebp-0x1ab96e5a],0x0
  413e65:	or     bh,ch
  413e67:	xchg   edi,eax
  413e68:	sahf   
  413e69:	xor    bh,bh
  413e6b:	push   DWORD PTR [edx-0x20]
  413e6e:	stos   DWORD PTR es:[edi],eax
  413e6f:	dec    BYTE PTR [ebx-0x4aa4a426]
  413e75:	into   
  413e76:	add    al,0x0
  413e78:	pop    edi
  413e79:	mov    DWORD PTR [eax-0xd],ecx
  413e7c:	add    BYTE PTR [eax],al
  413e7e:	mov    dl,0x2
  413e80:	jg     0x413e7b
  413e82:	jb     0x413ee5
  413e84:	dec    esi
  413e85:	xor    eax,DWORD PTR [edx-0x4b7228e5]
  413e8b:	(bad)  
  413e8d:	cs (bad) 
  413e8f:	push   ecx
  413e90:	and    al,0x10
  413e92:	(bad)  
  413e93:	adc    ebp,edi
  413e95:	sub    edi,DWORD PTR [esp+edx*1]
  413e98:	add    eax,0xd78c4477
  413e9d:	je     0x413ecf
  413e9f:	push   cs
  413ea0:	sar    BYTE PTR [eiz*1-0x75f0f3a6],0xcd
  413ea8:	xchg   ebp,eax
  413ea9:	push   0x36
  413eab:	stc    
  413eac:	repnz dec DWORD PTR [ecx+0x3783fd4b]
  413eb3:	or     bh,BYTE PTR [esi-0x40c40440]
  413eb9:	add    edi,DWORD PTR [eax+eax*1+0x7f]
  413ebd:	stc    
  413ebe:	jnp    0x413f1a
  413ec0:	leave  
  413ec1:	xor    ebp,DWORD PTR [esi-0x4d74f59d]
  413ec7:	lock repnz icebp 
  413eca:	ja     0x413e97
  413ecc:	repz fdiv DWORD PTR [edi-0x4114bf39]
  413ed3:	sbb    eax,0xf66a5fc0
  413ed8:	rol    DWORD PTR [esp+ebp*4],0x65
  413edc:	adc    BYTE PTR [ecx-0x49],bl
  413edf:	enter  0x36f,0x0
  413ee3:	add    BYTE PTR [edi-0x2aac4039],cl
  413ee9:	sub    eax,0xac4f04f0
  413eee:	or     eax,0x1db70931
  413ef3:	xor    al,0xc9
  413ef5:	scas   al,BYTE PTR es:[edi]
  413ef6:	push   edi
  413ef7:	push   es
  413ef8:	(bad)  
  413ef9:	lock sub al,cl
  413efc:	inc    esp
  413efd:	in     al,0x37
  413eff:	mov    ebp,edx
  413f01:	mov    cl,0xdc
  413f03:	or     DWORD PTR [edi-0x55],ebx
  413f06:	or     eax,0xda9e730
  413f0b:	aaa    
  413f0c:	loop   0x413ebb
  413f0e:	inc    edi
  413f0f:	cmp    DWORD PTR [esi-0x1],eax
  413f12:	sar    BYTE PTR [ecx],1
  413f14:	inc    esi
  413f15:	std    
  413f16:	sub    BYTE PTR [eax+0x54551b03],al
  413f1c:	retf   0xc23a
  413f1f:	mov    DWORD PTR [ebx],esp
  413f21:	fadd   st,st(0)
  413f23:	cmp    DWORD PTR ds:0x2d55391e,ebx
  413f29:	add    edi,ecx
  413f2b:	std    
  413f2c:	sbb    ch,BYTE PTR ds:0xf2d274c1
  413f32:	jp     0x413efa
  413f34:	(bad)  
  413f35:	stos   BYTE PTR es:[edi],al
  413f36:	cmp    DWORD PTR [esi],0x4606c4a3
  413f3c:	mov    esi,0xaef6533f
  413f41:	pop    edi
  413f42:	push   ebp
  413f43:	sub    al,0x5e
  413f45:	repz sbb ecx,eax
  413f48:	add    BYTE PTR [eax],al
  413f4a:	push   esi
  413f4b:	pop    edx
  413f4c:	add    esi,DWORD PTR [edx-0x4a]
  413f4f:	push   0x7c
  413f51:	into   
  413f52:	mov    esi,0x9067bb7
  413f57:	rcl    DWORD PTR [ebx+0x7],0x1
  413f5b:	mov    edx,0xb8130358
  413f60:	aam    0x72
  413f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f63:	or     DWORD PTR [edx-0x37],esi
  413f66:	cld    
  413f67:	enter  0xcb6a,0xd9
  413f6b:	aaa    
  413f6c:	in     eax,dx
  413f6d:	jl     0x413f02
  413f6f:	out    dx,al
  413f70:	and    eax,0x26f6d7dc
  413f75:	xor    DWORD PTR [edi+eax*8],ebp
  413f78:	xchg   esp,eax
  413f79:	jl     0x413fec
  413f7b:	xchg   BYTE PTR [ebx],al
  413f7d:	pop    ss
  413f7e:	and    al,0x5c
  413f80:	(bad)
  413f85:	ss push edx
  413f87:	dec    esp
  413f88:	(bad)  
  413f8a:	leave  
  413f8b:	mov    ss,WORD PTR [esp+ecx*8+0x4c]
  413f8f:	retf   
  413f90:	mov    edi,0xc6c25040
  413f95:	jnp    0x413fc4
  413f97:	mov    WORD PTR [edx+0x2cc2e759],fs
  413f9d:	int3   
  413f9e:	mov    eax,DWORD PTR [esi-0x55560b53]
  413fa4:	fcmovb st,st(3)
  413fa6:	mov    BYTE PTR [ebx+0x42],ah
  413fa9:	mov    ebp,0x1ae71117
  413fae:	add    BYTE PTR [eax],al
  413fb0:	and    al,0x89
  413fb2:	or     al,0x0
  413fb4:	aad    0x90
  413fb6:	cld    
  413fb7:	iret   
  413fb8:	dec    ebp
  413fb9:	shl    edi,1
  413fbb:	add    edx,ebp
  413fbd:	cmp    al,0xeb
  413fbf:	or     al,BYTE PTR ds:0x9e7b8a37
  413fc5:	shr    DWORD PTR [edx+0x69],0xd9
  413fc9:	or     DWORD PTR [eax+ebx*1-0x34],ebp
  413fcd:	add    BYTE PTR [edi+ecx*8+0x49600667],ch
  413fd4:	ror    DWORD PTR [ebp+0x37d5cfc4],1
  413fda:	fidivr WORD PTR [edx+0xe]
  413fdd:	push   cs
  413fde:	add    BYTE PTR [edx+0xc],ah
  413fe1:	mov    esi,0xfe542829
  413fe6:	adc    DWORD PTR cs:[ecx+0x4c1efdc0],ebx
  413fed:	retf   0xe273
  413ff0:	mov    ecx,DWORD PTR [ebp+0xc]
  413ff3:	bound  ebx,QWORD PTR [esi+ecx*1]
  413ff6:	cmp    DWORD PTR [edx+ebx*4+0x1dfedf3c],ebp
  413ffd:	push   cs
  413ffe:	push   esi
  413fff:	add    esp,edx
  414001:	adc    edi,edi
  414003:	call   0x73397dab
  414008:	sahf   
  414009:	xchg   ebx,eax
  41400a:	rcl    ecx,0x19
  41400d:	jl     0x41400c
  41400f:	(bad)  
  414010:	cld    
  414011:	pop    es
  414012:	xchg   DWORD PTR [eax+eax*1],esp
  414015:	add    BYTE PTR ds:0xfeb57395,ah
  41401b:	mov    cl,0xd9
  41401d:	mov    cl,0xd9
  41401f:	or     DWORD PTR [ecx],esi
  414021:	fwait
  414022:	dec    esi
  414023:	push   esi
  414024:	jbe    0x41404f
  414026:	fst    DWORD PTR [edx+0xf1ce2c8]
  41402c:	inc    ebx
  41402d:	scas   al,BYTE PTR es:[edi]
  41402e:	rcr    DWORD PTR [esp+edi*8+0x38],1
  414032:	sbb    cl,BYTE PTR [ebx+eax*2-0x73]
  414036:	(bad)  
  414037:	xchg   edx,eax
  414038:	(bad)  
  414039:	sbb    edi,eax
  41403b:	pop    ebx
  41403c:	push   0x9d6b3
  414041:	adc    DWORD PTR [ecx+ebp*2-0x39a81700],0x80ebe18
  41404c:	int    0x5e
  41404e:	adc    edi,DWORD PTR [edi-0x4001aa8d]
  414054:	into   
  414055:	dec    esi
  414056:	mov    ds:0xc0004392,eax
  41405b:	and    eax,DWORD PTR [ecx+0x8]
  41405e:	scas   eax,DWORD PTR es:[edi]
  41405f:	retf   
  414060:	inc    DWORD PTR [esp+eax*1-0x22]
  414064:	inc    esp
  414065:	inc    DWORD PTR [ebx]
  414067:	rcl    BYTE PTR [ecx-0x75],1
  41406a:	ror    BYTE PTR [ebx-0x32c6a714],0xb
  414071:	test   al,dh
  414073:	or     al,0x0
  414075:	add    cl,bh
  414077:	(bad)  
  414078:	or     eax,DWORD PTR [eax+eax*1+0xcb800]
  41407f:	add    ch,ch
  414081:	adc    al,0x41
  414083:	push   edx
  414084:	das    
  414085:	cld    
  414086:	jae    0x4140a2
  414088:	adc    DWORD PTR [edx-0x54],ecx
  41408b:	push   ecx
  41408c:	push   es
  41408d:	push   es
  41408e:	mov    DWORD PTR [ebp-0x6c],ecx
  414091:	cld    
  414092:	out    0xef,eax
  414094:	arpl   WORD PTR [eax+eax*1],cx
  414097:	test   DWORD PTR [eax+ebx*2+0x3],edi
  41409b:	push   0x10
  41409d:	in     al,0xa4
  41409f:	add    BYTE PTR [esp+ecx*1],ch
  4140a2:	jg     0x41409f
  4140a4:	xor    edi,DWORD PTR [ebp+0xc3c9584]
  4140aa:	add    bh,bh
  4140ac:	sbb    BYTE PTR [edi],ch
  4140ae:	(bad)  
  4140af:	and    ebp,ebp
  4140b1:	add    eax,0xe7344087
  4140b6:	jp     0x414132
  4140b8:	pusha  
  4140b9:	jmp    0xeb04:0x45877ee6
  4140c0:	aad    0x8a
  4140c2:	add    BYTE PTR es:[edi+0x57],dl
  4140c6:	or     esi,DWORD PTR [edi+0x6ee8b5bc]
  4140cc:	jecxz  0x414062
  4140ce:	inc    eax
  4140cf:	adc    al,BYTE PTR [edi-0x2a48f4a3]
  4140d5:	push   0xfffffffd
  4140d7:	cmc    
  4140d8:	xchg   esp,eax
  4140d9:	mov    bl,0x55
  4140db:	push   es
  4140dc:	fidivr DWORD PTR [edi]
  4140de:	inc    esp
  4140df:	adc    al,0x0
  4140e1:	add    BYTE PTR [esi-0x6b408796],ch
  4140e7:	dec    ecx
  4140e8:	inc    DWORD PTR [eax+0x4dd6ef9d]
  4140ee:	push   esi
  4140ef:	mov    bh,0xcc
  4140f1:	jmp    0xc855807
  4140f6:	rcr    DWORD PTR [ebx+eax*1-0xc8eb5f3],1
  4140fd:	call   0xfdfd74cd
  414102:	outs   dx,BYTE PTR ds:[esi]
  414103:	retf   0xb4fc
  414106:	adc    eax,0xe231d8db
  41410b:	test   DWORD PTR [ebx+0x1c],0xb4fb167e
  414112:	or     eax,0x4cc7ff09
  414117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414118:	fsub   DWORD PTR [ebx]
  41411a:	sbb    ah,BYTE PTR [edi-0x4f6aa46f]
  414120:	fcomp  DWORD PTR [ebx]
  414122:	shl    BYTE PTR [edi],cl
  414124:	inc    ecx
  414125:	or     al,0x42
  414127:	mov    eax,ds:0x37e210d8
  41412c:	inc    ecx
  41412d:	or     al,0x14
  41412f:	cdq    
  414130:	add    eax,0x94afdae9
  414135:	inc    eax
  414136:	leave  
  414137:	jno    0x414112
  414139:	add    edx,DWORD PTR [esi-0x6f]
  41413c:	add    al,BYTE PTR [edi-0x383e7c2d]
  414142:	push   ss
  414143:	sbb    ecx,ebp
  414145:	jmp    0xb18414a
  41414a:	into   
  41414b:	pop    eax
  41414c:	sbb    al,0x74
  41414e:	jno    0x41418e
  414150:	mov    dh,0x9
  414152:	test   al,0x3
  414154:	(bad)  
  414155:	jmp    0x3a7:0xea8703a7
  41415c:	sub    eax,0x2b03a7eb
  414161:	jmp    0x41410a
  414163:	add    ecx,DWORD PTR [esi]
  414165:	jmp    0x41410e
  414167:	add    edi,DWORD PTR [ecx]
  414169:	jmp    0x414112
  41416b:	add    ebx,DWORD PTR [esi-0x16]
  41416e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41416f:	add    eax,DWORD PTR [edx+ebp*8-0x59]
  414173:	add    ecx,DWORD PTR [edx-0x16]
  414176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414177:	add    ecx,DWORD PTR [esi]
  414179:	jmp    0x414122
  41417b:	add    esi,DWORD PTR [edx+ebp*8]
  41417e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41417f:	add    edi,DWORD PTR [edx+ebp*8]
  414182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414183:	add    eax,DWORD PTR [edx+ebp*8-0x59]
  414187:	add    edi,DWORD PTR [ecx]
  414189:	jmp    0x3a7:0xeae803a7
  414190:	push   es
  414191:	xchg   ebx,eax
  414192:	rol    DWORD PTR [ebp+0x3e4f571],cl
  414198:	aad    0x5a
  41419a:	cmp    eax,0xc7745e33
  41419f:	leave  
  4141a0:	dec    eax
  4141a1:	mov    esi,0x9978fcf
  4141a6:	out    0xca,eax
  4141a8:	(bad)  
  4141a9:	or     eax,0x2962
  4141ae:	addr16 mov esi,0xbaabfc34
  4141b4:	fisubr DWORD PTR [edx+edx*8-0x42]
  4141b8:	jo     0x4141e3
  4141ba:	and    DWORD PTR [ecx-0x41ef461b],esi
  4141c0:	pusha  
  4141c1:	inc    ecx
  4141c2:	or     eax,0xc150a784
  4141c7:	mov    esi,0x928af7f4
  4141cc:	add    BYTE PTR [edi-0x16bcb0ef],ch
  4141d2:	(bad)  
  4141d3:	clc    
  4141d4:	mov    edi,0xf9e14c74
  4141d9:	pop    esi
  4141da:	push   cs
  4141db:	dec    ecx
  4141dc:	mov    DWORD PTR [edi],esp
  4141de:	mov    cl,0x95
  4141e0:	inc    esp
  4141e1:	jmp    0x9a06d4bc
  4141e6:	(bad)  
  4141e7:	sbb    DWORD PTR [eax+0x6a0a16da],eax
  4141ed:	out    dx,al
  4141ee:	sub    eax,0x8e91e039
  4141f3:	sbb    al,ch
  4141f5:	call   0xf28505d0
  4141fa:	(bad)  
  4141fb:	mov    BYTE PTR [ebx+0x15],0xd8
  4141ff:	or     DWORD PTR [eax],eax
  414201:	jmp    0x227362b1
  414206:	cld    
  414207:	mov    al,ah
  414209:	cld    
  41420a:	(bad)  
  41420b:	mov    edi,0x45aa0150
  414210:	add    cl,ch
  414212:	add    BYTE PTR [eax],al
  414214:	mov    edi,0xb3aa8a5b
  414219:	(bad)
  41421d:	xchg   edx,eax
  41421e:	pop    ebx
  41421f:	fisttp QWORD PTR [ebx]
  414221:	mov    edi,0x48cdcd73
  414226:	loopne 0x414241
  414228:	mov    ds:0x8d6c5915,eax
  41422d:	sub    eax,0xfdbf477f
  414233:	push   0x6a
  414235:	push   cs
  414236:	and    DWORD PTR [ecx+0x7d840f0f],0x640009d6
  414240:	push   ebp
  414241:	(bad)  
  414243:	mov    ds,WORD PTR [edi]
  414245:	pop    edx
  414246:	mov    DWORD PTR [eax],eax
  414248:	xor    eax,DWORD PTR [edx-0x67]
  41424b:	fcom   DWORD PTR [edi-0x30]
  41424e:	sti    
  41424f:	call   0x41891b
  414254:	jo     0x41421e
  414256:	or     eax,DWORD PTR [esp+ebp*2-0x40fffff8]
  41425d:	ins    BYTE PTR es:[edi],dx
  41425e:	dec    edi
  41425f:	push   0x93c
  414264:	xchg   esi,eax
  414265:	add    eax,0x8a4534f
  41426a:	add    BYTE PTR [eax],al
  41426c:	in     al,dx
  41426d:	inc    ecx
  41426e:	adc    eax,0x50fbcfe5
  414274:	sti    
  414275:	mov    ecx,0x12b1
  41427a:	ins    BYTE PTR es:[edi],dx
  41427b:	or     BYTE PTR [edi-0x42cd010],al
  414281:	jne    0x414208
  414283:	iret   
  414284:	adc    DWORD PTR [esi+ecx*4-0x2b7cffb8],ebp
  41428b:	clc    
  41428c:	jo     0x4142de
  41428e:	jnp    0x41428c
  414290:	sti    
  414291:	sub    ecx,0x7c03e8c4
  414297:	or     BYTE PTR [edx-0x7a],dh
  41429a:	xchg   DWORD PTR [ebx-0x79],eax
  41429d:	jge    0x414307
  41429f:	cmc    
  4142a0:	mov    BYTE PTR [ebp+0x28],al
  4142a3:	cmc    
  4142a4:	push   edx
  4142a5:	jmp    DWORD PTR [ecx+0x21ff56cd]
  4142ab:	nop
  4142ac:	adc    al,BYTE PTR [eax+0x2c]
  4142af:	cmp    eax,eax
  4142b1:	je     0x4142e8
  4142b3:	retf   0xb41
  4142b6:	cmp    eax,0xc0fc790f
  4142bb:	push   es
  4142bc:	mov    BYTE PTR [ebp+0x27],bl
  4142bf:	cli    
  4142c0:	cli    
  4142c1:	adc    eax,0x3ff662d5
  4142c6:	aad    0xf4
  4142c8:	(bad)  
  4142c9:	adc    ecx,DWORD PTR ds:0xbd0041e0
  4142cf:	sbb    eax,0x25e172fb
  4142d4:	jge    0x4142a6
  4142d6:	in     al,dx
  4142d7:	sub    al,bh
  4142d9:	push   eax
  4142da:	in     eax,dx
  4142db:	cmp    ecx,DWORD PTR [ebx]
  4142dd:	add    BYTE PTR [eax],al
  4142df:	add    ch,dl
  4142e1:	pop    ebx
  4142e2:	dec    ebp
  4142e3:	clc    
  4142e4:	mov    ebp,0xcafdb831
  4142e9:	daa    
  4142ea:	and    eax,0xc8a6ac09
  4142ef:	std    
  4142f0:	mov    edx,0x54ec7c96
  4142f5:	inc    ebp
  4142f6:	je     0x414300
  4142f8:	aad    0xb0
  4142fa:	xor    al,0x56
  4142fc:	or     dh,BYTE PTR [esi]
  4142fe:	(bad)  
  4142ff:	aam    0x98
  414301:	sbb    al,0xc7
  414303:	call   0x42b500
  414308:	(bad)  
  414309:	lock je 0x4142c7
  41430c:	cdq    
  41430d:	or     al,bh
  41430f:	std    
  414310:	adc    eax,0x1e8ba38
  414315:	jo     0x414318
  414317:	add    BYTE PTR [esi-0x1c],bl
  41431a:	xor    edi,ebp
  41431c:	enter  0xf430,0x3f
  414320:	aad    0x37
  414322:	inc    esi
  414323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414324:	mov    edi,0x217376a8
  414329:	stc    
  41432a:	fneni(8087 only) 
  41432c:	sbb    BYTE PTR [edx-0x3fbd80ff],dh
  414332:	push   0xf
  414334:	xor    bl,BYTE PTR [ebx+edi*2]
  414337:	mov    BYTE PTR [ebp+0x5058f046],0xa
  41433e:	and    al,0x98
  414340:	sub    eax,0xc8556f
  414345:	add    BYTE PTR [eax],dl
  414347:	popa   
  414348:	xor    BYTE PTR [ebp+0x7fdebb0d],al
  41434e:	xchg   ecx,eax
  41434f:	or     bh,ah
  414351:	add    ecx,DWORD PTR [esi-0x7b]
  414354:	stos   DWORD PTR es:[edi],eax
  414355:	int3   
  414356:	lock mov edx,0x8d107d17
  41435c:	dec    esp
  41435d:	mov    edi,0xdb66baea
  414362:	mov    cl,BYTE PTR [ecx-0x19]
  414365:	add    ebx,DWORD PTR [ecx-0x37]
  414368:	out    0x7f,al
  41436a:	add    eax,0x4e03e709
  41436f:	test   BYTE PTR [ebx-0x68454730],bh
  414375:	jbe    0x4143cd
  414377:	int    0x32
  414379:	enter  0x59a8,0x2e
  41437d:	out    dx,al
  41437e:	repnz pop ss
  414380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414381:	add    edx,DWORD PTR [esp+0x13]
  414385:	add    ebx,DWORD PTR [edx+0x44]
  414388:	add    eax,DWORD PTR [ebp+ecx*4-0x7b802146]
  41438f:	or     edi,esp
  414391:	add    ecx,DWORD PTR [esi-0x7c]
  414394:	sub    ecx,esp
  414396:	jo     0x414352
  414398:	xchg   edi,eax
  414399:	jbe    0x4143f1
  41439b:	imul   esi,esi,0x848c60c7
  4143a1:	shl    BYTE PTR [edx-0x46],0xde
  4143a5:	(bad)  
  4143a7:	dec    ecx
  4143a8:	out    0x3,eax
  4143aa:	add    BYTE PTR [eax],al
  4143ac:	push   ecx
  4143ad:	leave  
  4143ae:	fidivr WORD PTR [edi-0x79]
  4143b1:	or     edi,esp
  4143b3:	add    eax,DWORD PTR [ebx+edi*4]
  4143b6:	push   ss
  4143b7:	das    
  4143b8:	mov    edi,0xfa1e0006
  4143bd:	xor    DWORD PTR [eax],eax
  4143bf:	jmp    0x6ccccd9a
  4143c4:	pop    ebp
  4143c5:	sar    ch,0x9e
  4143c8:	leave  
  4143c9:	mov    esp,0xfa075d13
  4143ce:	call   FWORD PTR [edi-0x6c]
  4143d1:	mov    ecx,0xc128181
  4143d6:	test   BYTE PTR [ebp-0x27],ch
  4143d9:	or     DWORD PTR [eax],eax
  4143db:	sbb    DWORD PTR [ecx],ecx
  4143dd:	ss cmp ch,cl
  4143e0:	(bad)  
  4143e1:	nop
  4143e2:	lock repnz adc al,0x82
  4143e6:	push   ebx
  4143e7:	inc    ecx
  4143e8:	xchg   ebx,eax
  4143e9:	dec    ebp
  4143ea:	stc    
  4143eb:	jmp    0x367aa10a
  4143f0:	adc    cl,BYTE PTR [ecx+0x72]
  4143f3:	icebp  
  4143f4:	push   ecx
  4143f5:	mov    eax,0xa76e900
  4143fa:	jne    0x4143aa
  4143fc:	sub    eax,0x63f20250
  414401:	ds inc esp
  414403:	adc    ebp,eax
  414405:	ret    0x1efd
  414408:	push   cs
  414409:	sar    BYTE PTR [ecx],cl
  41440b:	ss and eax,0x5c5501
  414411:	add    BYTE PTR [edx+eiz*4],dl
  414414:	push   eax
  414415:	lahf   
  414416:	(bad)  
  414417:	mov    dh,0x73
  414419:	stc    
  41441a:	fwait
  41441b:	sbb    eax,0xa16db4c
  414420:	sub    DWORD PTR [ecx],0x5
  414423:	aas    
  414424:	xor    DWORD PTR [eax+0x54e83cc9],esi
  41442a:	test   eax,0xa5b14af2
  41442f:	and    dl,BYTE PTR [esi+0x3a]
  414432:	mov    esp,0x1100d48c
  414437:	sar    bl,1
  414439:	call   0x418fa6
  41443e:	mov    bh,0x49
  414440:	or     BYTE PTR [ecx-0xba6c9e4],cl
  414446:	push   0x4a
  414448:	test   DWORD PTR [ecx],0xfff05a73
  41444e:	or     DWORD PTR [ebp+0x12],esi
  414451:	inc    eax
  414452:	in     al,dx
  414453:	mov    WORD PTR [ecx-0x5],?
  414456:	in     al,dx
  414457:	dec    eax
  414458:	or     al,0x8d
  41445a:	jns    0x4143dc
  41445c:	idiv   edi
  41445e:	arpl   sp,di
  414460:	out    0x1b,eax
  414462:	es or  eax,0xc8f13900
  414468:	jno    0x414482
  41446a:	inc    ecx
  41446b:	mov    dh,BYTE PTR [edi+esi*8+0x23]
  41446f:	rcl    BYTE PTR [eax-0x1],1
  414472:	test   eax,0x15fbe0
  414477:	add    ah,ah
  414479:	mov    ebx,0xcd39003d
  41447e:	or     eax,DWORD PTR [ebp-0x43076]
  414484:	repz pop ecx
  414486:	in     al,dx
  414487:	call   FWORD PTR [ecx+0x7c401220]
  41448d:	xor    DWORD PTR [ecx-0x4301e2c],eax
  414493:	push   eax
  414494:	aam    0x6f
  414496:	cmp    eax,0x41336c00
  41449b:	hlt    
  41449c:	(bad)  
  41449d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41449e:	push   eax
  41449f:	call   0x3cb770
  4144a4:	xlat   BYTE PTR ds:[ebx]
  4144a5:	xchg   esi,eax
  4144a6:	mov    DWORD PTR [ebp-0x42fe8],eax
  4144ac:	or     al,0xd6
  4144ae:	mov    BYTE PTR [ecx-0x2b],0xa2
  4144b2:	add    DWORD PTR [ecx],esi
  4144b4:	adc    eax,0xc5925e7
  4144b9:	add    BYTE PTR fs:[eax],al
  4144bc:	pop    edi
  4144bd:	cli    
  4144be:	inc    eax
  4144bf:	sub    BYTE PTR [ecx+eiz*4],0x4d
  4144c3:	adc    al,0x55
  4144c5:	jns    0x4144c9
  4144c7:	jae    0x41449b
  4144c9:	sar    DWORD PTR [edx-0x2743a39a],cl
  4144cf:	or     BYTE PTR [ebp-0x67],dl
  4144d2:	add    BYTE PTR [ebx-0x2a],dh
  4144d5:	and    esp,DWORD PTR [edx]
  4144d7:	add    BYTE PTR [edi-0x6],cl
  4144da:	adc    ecx,DWORD PTR [edx-0x1e6b0000]
  4144e0:	or     eax,ecx
  4144e2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144e4:	ja     0x4144a5
  4144e6:	rol    BYTE PTR [eax],cl
  4144e8:	les    edx,FWORD PTR [eax-0x26]
  4144eb:	aad    0x1d
  4144ed:	or     BYTE PTR [edi],ah
  4144ef:	pop    ecx
  4144f0:	or     edx,0xffffffca
  4144f3:	pusha  
  4144f4:	ret    0xd504
  4144f7:	jge    0x414571
  4144f9:	in     al,dx
  4144fa:	and    al,0x92
  4144fc:	hlt    
  4144fd:	mov    ah,0x1a
  4144ff:	mov    ecx,0xb10a8a30
  414504:	sub    ecx,DWORD PTR ds:0xcf17e6a
  41450a:	(bad)  
  41450b:	cli    
  41450c:	je     0x414582
  41450e:	jecxz  0x414527
  414510:	rep lods al,BYTE PTR ds:[esi]
  414512:	popf   
  414513:	mov    al,0x94
  414515:	lock rcr BYTE PTR [edi-0x4e],cl
  414519:	mov    BYTE PTR [eax],bl
  41451b:	adc    bl,dh
  41451d:	mov    ch,0x18
  41451f:	mov    eax,0x663a0d5b
  414524:	cmc    
  414525:	or     al,0x2b
  414527:	sbb    al,0xff
  414529:	icebp  
  41452a:	(bad)  
  41452b:	or     DWORD PTR [ecx-0x11447e0c],esi
  414531:	xchg   esp,eax
  414532:	sbb    al,0x81
  414534:	and    al,0xcc
  414536:	sar    BYTE PTR [esi-0x59],1
  414539:	or     BYTE PTR [ebx],cl
  41453b:	pop    es
  41453c:	outs   dx,BYTE PTR ds:[esi]
  41453d:	imul   edx,ebp,0x9
  414540:	out    0xf4,eax
  414542:	add    BYTE PTR [eax],al
  414544:	popa   
  414545:	retf   0x3e60
  414548:	lds    eax,FWORD PTR [edx+0x2d55f00e]
  41454e:	repz add edx,esp
  414551:	shr    BYTE PTR [edx+0x46],1
  414554:	in     eax,0x9
  414556:	sbb    eax,0xdb4d4c1e
  41455b:	js     0x414503
  41455d:	add    edx,ebp
  41455f:	rol    BYTE PTR [ebp-0x7d24597e],0xb6
  414566:	jbe    0x41452c
  414568:	sar    BYTE PTR [edi+0x26],1
  41456b:	inc    ebx
  41456c:	fimul  DWORD PTR [ebp-0x11]
  41456f:	hlt    
  414570:	mov    BYTE PTR [esi+0x17],cl
  414573:	add    edx,DWORD PTR [esi]
  414575:	push   es
  414576:	bound  edi,QWORD PTR [esi]
  414578:	shl    edx,1
  41457a:	mov    ds:0x72d444f3,eax
  41457f:	xor    al,0xcd
  414581:	and    DWORD PTR [esi+0x2f44d442],0x7
  414588:	mov    ds:0x1678da3d,al
  41458d:	sbb    ch,dl
  41458f:	sar    BYTE PTR [edi+ecx*1+0x71],0xf0
  414594:	push   edx
  414595:	sbb    BYTE PTR [eax-0x662e43c0],ch
  41459b:	int    0x6c
  41459d:	in     eax,0xc2
  41459f:	add    esi,esp
  4145a1:	sbb    dh,BYTE PTR [edx+0x3e]
  4145a4:	lds    ecx,FWORD PTR [edx]
  4145a6:	add    BYTE PTR [edx],ch
  4145a8:	add    BYTE PTR [eax],al
  4145aa:	jge    0x4145bb
  4145ac:	mov    bl,dl
  4145ae:	fiadd  WORD PTR [esi]
  4145b0:	aas    
  4145b1:	sub    dl,BYTE PTR [edx-0x22]
  4145b4:	jb     0x41458d
  4145b6:	jp     0x4145d2
  4145b8:	cmp    al,0xed
  4145ba:	std    
  4145bb:	push   es
  4145bc:	mov    DWORD PTR [ecx+eiz*8],esp
  4145bf:	or     cl,al
  4145c1:	rcr    bh,cl
  4145c3:	adc    DWORD PTR [ecx],0x71
  4145c6:	shl    dh,0x40
  4145c9:	repnz (bad) 
  4145cb:	cmp    dh,dh
  4145cd:	bound  eax,QWORD PTR [ecx+esi*4-0x711ac9ff]
  4145d4:	dec    ebx
  4145d5:	mov    eax,ds:0x6f0dc40a
  4145da:	(bad)  
  4145db:	mov    ah,0xfd
  4145dd:	mov    ?,WORD PTR [edi+0x50]
  4145e0:	(bad)  
  4145e1:	stos   DWORD PTR es:[edi],eax
  4145e2:	lds    ecx,FWORD PTR [ecx]
  4145e4:	push   ebx
  4145e5:	jb     0x41460c
  4145e7:	mov    ah,ch
  4145e9:	mov    ecx,0xba555f8b
  4145ee:	add    al,bh
  4145f0:	cld    
  4145f1:	scas   al,BYTE PTR es:[edi]
  4145f2:	retf   
  4145f3:	jne    0x41457c
  4145f5:	mov    ah,0x7e
  4145f7:	lea    edx,[ebx+0x59]
  4145fa:	push   eax
  4145fb:	pop    ecx
  4145fc:	fsub   DWORD PTR [eax+0x14]
  4145ff:	scas   al,BYTE PTR es:[edi]
  414600:	aaa    
  414601:	pushf  
  414602:	retf   0x8e06
  414605:	jb     0x4145d7
  414607:	or     DWORD PTR [eax],eax
  414609:	bound  eax,QWORD PTR [edx+eax*1]
  41460c:	xchg   DWORD PTR [eax+eax*1+0x4b8d7a00],edx
  414613:	adc    eax,0x70104162
  414618:	sub    al,0xb2
  41461a:	cmp    DWORD PTR [ebx],esp
  41461c:	out    0x83,al
  41461e:	fs call 0xca4ffa
  414624:	sub    DWORD PTR [ebp-0x79],esp
  414627:	push   ebp
  414628:	aam    0x83
  41462a:	or     al,0x11
  41462c:	hlt    
  41462d:	pop    edx
  41462e:	sti    
  41462f:	cmp    bh,BYTE PTR [ecx]
  414631:	adc    DWORD PTR [ebx],ecx
  414633:	test   dl,bh
  414635:	push   cs
  414636:	add    BYTE PTR [eax],al
  414638:	mov    ecx,0xf1c7fb58
  41463d:	ins    DWORD PTR es:[edi],dx
  41463e:	std    
  41463f:	jmp    FWORD PTR [ecx+ecx*1]
  414642:	xchg   eax,esi
  414644:	xlat   BYTE PTR ds:[ebx]
  414645:	inc    edx
  414646:	adc    al,0x7d
  414648:	test   BYTE PTR [ecx+edi*2-0xbb64a14],0x8b
  414650:	leave  
  414651:	jno    0x4145da
  414653:	jge    0x414689
  414655:	mov    cl,0x9
  414657:	cmp    esp,ecx
  414659:	aas    
  41465a:	xchg   edi,ebx
  41465c:	daa    
  41465d:	sub    dl,BYTE PTR [eax]
  41465f:	jge    0x41467b
  414661:	test   BYTE PTR [ecx-0xc],bl
  414664:	adc    al,0x5
  414666:	aaa    
  414667:	jne    0x41465b
  414669:	aas    
  41466a:	aaa    
  41466b:	jge    0x414669
  41466d:	hlt    
  41466e:	icebp  
  41466f:	dec    edi
  414670:	daa    
  414671:	jns    0x4146e4
  414673:	push   es
  414674:	add    BYTE PTR [eax],al
  414676:	inc    ebp
  414677:	dec    edx
  414678:	call   0x37b9f006
  41467d:	jge    0x41469b
  41467f:	dec    edx
  414680:	dec    DWORD PTR [eax+0x7d7f7889]
  414686:	sbb    al,0x9
  414688:	jle    0x414692
  41468a:	xlat   BYTE PTR ds:[ebx]
  41468b:	dec    edx
  41468c:	call   0xe78ff60d
  414691:	add    al,0x2f
  414693:	loop   0x414674
  414695:	add    BYTE PTR [edi],al
  414697:	dec    edx
  414698:	adc    BYTE PTR [ecx],al
  41469a:	imul   edi,DWORD PTR [esi+eax*2+0x3b],0x7c1595d5
  4146a2:	sub    ah,BYTE PTR [edi]
  4146a4:	inc    eax
  4146a5:	in     al,0x5e
  4146a7:	jge    0x414652
  4146a9:	sub    DWORD PTR [eax],ebx
  4146ab:	or     ebp,esi
  4146ad:	iret   
  4146ae:	adc    al,0x61
  4146b0:	mov    WORD PTR [ebx+0x71],ss
  4146b3:	daa    
  4146b4:	pop    eax
  4146b5:	lock (bad) 
  4146b7:	cmc    
  4146b8:	mov    ebx,0xebcea889
  4146bd:	out    dx,eax
  4146be:	ror    BYTE PTR [ebx+0x5d4c42d9],cl
  4146c4:	fmul   DWORD PTR ds:0xddfb7082
  4146ca:	stos   DWORD PTR es:[edi],eax
  4146cb:	mov    edx,0x29395b8c
  4146d0:	dec    ebp
  4146d1:	loopne 0x414701
  4146d3:	lods   al,BYTE PTR ds:[esi]
  4146d4:	mov    WORD PTR [ebx+0x29],ds
  4146d7:	cmp    DWORD PTR [ebp-0x20],edx
  4146da:	add    BYTE PTR [eax],al
  4146dc:	push   ebp
  4146dd:	adc    eax,0xeb500020
  4146e2:	add    eax,0x4f55d673
  4146e7:	add    DWORD PTR [esi+0x15],ebx
  4146ea:	adc    al,0xd
  4146ec:	cmp    bl,BYTE PTR ds:0xab0f3918
  4146f2:	nop
  4146f3:	mov    dh,0xd5
  4146f5:	mov    ds:0x4918fd01,al
  4146fa:	test   BYTE PTR [ebx-0x17],bh
  4146fd:	mov    al,ds:0xd5d1738c
  414702:	or     BYTE PTR [edx+0xc8c4408],cl
  414708:	jmp    0xa0e1:0xad4b8b63
  41470f:	add    al,0xcf
  414711:	call   0x272353a1
  414716:	dec    ebp
  414717:	loopne 0x4146ac
  414719:	or     dh,BYTE PTR [eax]
  41471b:	les    ebp,FWORD PTR [edx-0x7faa93f2]
  414721:	add    BYTE PTR [ecx],ah
  414723:	add    eax,0xf89b829d
  414728:	jae    0x4146b2
  41472a:	cs push es
  41472c:	push   edx
  41472d:	xor    eax,0xbe168b03
  414732:	pusha  
  414733:	pop    edi
  414734:	test   edi,ebp
  414736:	sub    DWORD PTR [edi],edi
  414738:	xchg   esp,eax
  414739:	jle    0x414777
  41473b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41473c:	pop    esp
  41473d:	inc    ebp
  41473e:	fild   WORD PTR [eax+eax*1]
  414741:	add    BYTE PTR [edx],dl
  414743:	cmp    DWORD PTR [eax+ebx*8],0x8aab5d4c
  41474a:	xchg   BYTE PTR [ecx+0x455c1dd2],ch
  414750:	mov    edi,0x3486c6ac
  414755:	mov    eax,0x8cd33e18
  41475a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41475b:	test   eax,0x7fdd3672
  414760:	cmp    al,0x1c
  414762:	aam    0xd8
  414764:	pop    edi
  414765:	pop    ds
  414766:	(bad)  
  414767:	dec    eax
  414768:	ror    BYTE PTR [esi+0x9],cl
  41476b:	lea    ecx,ss:[esi+ebx*4-0x16b981e7]
  414773:	or     BYTE PTR [esp+eiz*4],ah
  414776:	dec    esp
  414777:	inc    ebp
  414778:	jae    0x414776
  41477a:	pop    ds
  41477b:	(bad)  
  41477d:	ror    eax,cl
  41477f:	dec    esp
  414780:	pop    edi
  414781:	mov    WORD PTR [esi],cs
  414783:	sbb    dl,BYTE PTR [eax]
  414785:	dec    edi
  414786:	mov    ebp,0xb3a15b02
  41478b:	mov    dl,0x46
  41478d:	hlt    
  41478e:	test   BYTE PTR [eax],cl
  414790:	lods   al,BYTE PTR ds:[esi]
  414791:	fbld   TBYTE PTR [edx+0x16450045]
  414797:	icebp  
  414798:	inc    edx
  414799:	aad    0xe5
  41479b:	test   DWORD PTR [esi+0x27],edi
  41479e:	xchg   ebp,eax
  41479f:	mov    ah,0x89
  4147a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147a2:	sar    BYTE PTR [edi+0x4b],cl
  4147a5:	xor    DWORD PTR [eax],eax
  4147a7:	add    BYTE PTR [esi+0x1],cl
  4147aa:	mov    DWORD PTR [esi],esp
  4147ac:	cmc    
  4147ad:	push   ebx
  4147ae:	pop    ecx
  4147af:	xor    BYTE PTR [eax-0x6945ffef],dl
  4147b5:	mov    al,ds:0xa5499cf3
  4147ba:	cmp    ebp,0xf14b809f
  4147c0:	pop    edi
  4147c1:	dec    edx
  4147c2:	sbb    al,0x37
  4147c4:	stos   BYTE PTR es:[edi],al
  4147c5:	mov    cl,BYTE PTR [ebx-0x27]
  4147c8:	dec    esi
  4147c9:	ds adc al,0x62
  4147cc:	outs   dx,DWORD PTR ds:[esi]
  4147cd:	adc    BYTE PTR [ebx-0x27],0xd7
  4147d1:	rol    DWORD PTR [ecx],0xc3
  4147d4:	es mov esp,0x9142cc6
  4147da:	(bad)  
  4147db:	and    al,0x53
  4147dd:	or     DWORD PTR [edi+0x7b8a8934],eax
  4147e3:	test   eax,0xd2e84650
  4147e8:	adc    DWORD PTR [ebx+ecx*4],eax
  4147eb:	push   ebx
  4147ec:	fmul   DWORD PTR [ecx]
  4147ee:	add    dl,dl
  4147f0:	push   ds
  4147f1:	pop    eax
  4147f2:	xchg   DWORD PTR [eax*1+0x7c6201a0],ebp
  4147f9:	sbb    DWORD PTR [ecx+0x53899924],ecx
  4147ff:	push   ebp
  414800:	into   
  414801:	ror    DWORD PTR ds:0xfdb1656c,0xe9
  414808:	scas   eax,DWORD PTR es:[edi]
  414809:	retf   
  41480a:	xchg   DWORD PTR [eax+eax*1+0x1a38600],esp
  414811:	add    BYTE PTR [edi],ah
  414813:	inc    ebx
  414814:	shr    BYTE PTR [edx+0x7c],1
  414817:	dec    esi
  414818:	test   DWORD PTR [ebp-0x28],ecx
  41481b:	jle    0x414866
  41481d:	fadd   QWORD PTR [edi+0x50379c6]
  414823:	inc    ebx
  414824:	hlt    
  414825:	mov    edi,DWORD PTR [ecx]
  414827:	shl    DWORD PTR [edi],0xc1
  41482a:	popa   
  41482b:	or     al,0x85
  41482d:	inc    ebp
  41482e:	rol    BYTE PTR [ecx+ebx*2+0x493863dc],0xe8
  414836:	jae    0x414870
  414838:	push   ecx
  414839:	in     al,dx
  41483a:	test   DWORD PTR [edx+0x8],0xf3f24353
  414841:	jmp    FWORD PTR [ecx+0x20c5e875]
  414847:	jo     0x414844
  414849:	rcpps  xmm5,XMMWORD PTR [edx]
  41484c:	hlt    
  41484d:	mov    edx,ecx
  41484f:	sbb    DWORD PTR [edi+0x618c6c45],eax
  414855:	in     al,0x2c
  414857:	mov    WORD PTR [ecx-0x20],fs
  41485a:	sub    al,0x9a
  41485c:	cmp    al,0xe
  41485e:	mov    edx,0x850003c7
  414863:	icebp  
  414864:	mov    ebx,0x85cdc189
  414869:	inc    ebp
  41486a:	xor    al,0xc7
  41486c:	inc    ecx
  41486d:	(bad)  
  41486e:	cld    
  41486f:	mov    BYTE PTR [ecx+0x17],0x0
  414873:	add    ah,bh
  414875:	mov    BYTE PTR [ecx-0x2c],0xed
  414879:	mov    BYTE PTR [ecx-0x4],0xed
  41487d:	adc    edi,0x798cee7e
  414883:	in     al,0xbc
  414885:	icebp  
  414886:	add    BYTE PTR [edx-0xae7b44],cl
  41488c:	aad    0x2c
  41488e:	add    DWORD PTR [edx],edi
  414890:	sbb    BYTE PTR [eax+0x38],al
  414893:	add    ebp,DWORD PTR [edx-0x37165aa3]
  414899:	and    eax,DWORD PTR [eax-0x20]
  41489c:	aad    0x6d
  41489e:	push   es
  41489f:	(bad)  
  4148a0:	sbb    bh,bl
  4148a2:	add    BYTE PTR [eax+0x42f7b010],cl
  4148a8:	jmp    0x8a03:0x10fd1895
  4148af:	inc    ebx
  4148b0:	popf   
  4148b1:	dec    DWORD PTR [edi-0x28]
  4148b4:	adc    eax,0xd5d84024
  4148b9:	cmp    DWORD PTR [eax-0x38],ecx
  4148bc:	fcmovu st,st(6)
  4148be:	test   eax,0xd5651b04
  4148c3:	add    BYTE PTR [esi-0x23],bl
  4148c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c7:	cmp    DWORD PTR [eax+0x4f0836c2],ebx
  4148cd:	fnstsw WORD PTR [edx-0x57487776]
  4148d3:	push   es
  4148d4:	pop    edi
  4148d5:	fst    QWORD PTR [edx]
  4148d7:	mov    al,BYTE PTR [eax]
  4148d9:	add    BYTE PTR [eax+0x187b846f],cl
  4148df:	mov    ds:0xf6ea5389,al
  4148e4:	add    al,0x3a
  4148e6:	nop
  4148e7:	pop    esi
  4148e8:	cmp    BYTE PTR [esi],cl
  4148ea:	push   ebp
  4148eb:	lahf   
  4148ec:	inc    DWORD PTR [edi+0x43c3a8d1]
  4148f2:	lock mov al,ds:0xe0114389
  4148f8:	cmp    DWORD PTR [ebx-0x1f],0xffffffa1
  4148fc:	or     al,0x83
  4148fe:	push   ebx
  4148ff:	mov    ds:0xd0550001,al
  414904:	or     DWORD PTR [eax+0x43b0a48],eax
  41490a:	dec    edi
  41490b:	pop    es
  41490c:	rcr    DWORD PTR [edx*2+0x5f04552d],cl
  414913:	push   ebp
  414914:	div    BYTE PTR [edi]
  414916:	(bad)  
  414917:	repz fwait
  414919:	mov    eax,0x7eb1129
  41491e:	dec    ebp
  41491f:	pop    es
  414920:	pop    edi
  414921:	sbb    bl,ah
  414923:	(bad)  
  414924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414925:	mov    ebp,0xb8bc878a
  41492a:	sbb    esp,DWORD PTR [ebx-0x381af011]
  414930:	lods   al,BYTE PTR ds:[esi]
  414931:	mov    ebp,0xbce681d5
  414936:	out    0xd5,al
  414938:	je     0x414942
  41493a:	shr    DWORD PTR [esi+0xc774],cl
  414940:	pop    eax
  414941:	xor    eax,0xb5c6bd13
  414946:	xchg   edi,eax
  414947:	mov    esp,0x6dcfb9c6
  41494c:	inc    ecx
  41494d:	scas   eax,DWORD PTR es:[edi]
  41494e:	fiadd  WORD PTR [eax]
  414950:	inc    ebp
  414951:	test   DWORD PTR [edi+0x54aeeb36],esp
  414957:	loopne 0x414931
  414959:	jbe    0x41498f
  41495b:	lods   al,BYTE PTR ds:[esi]
  41495c:	and    BYTE PTR ds:0x55600cb3,dh
  414962:	ret    
  414963:	mov    esp,0x3662b986
  414968:	dec    ecx
  414969:	enter  0x2ee,0x4c
  41496d:	sub    eax,0xac968bef
  414972:	pop    edi
  414973:	inc    esi
  414974:	repz mov eax,ds:0xaee8b86b
  41497a:	jb     0x4149c2
  41497c:	rcr    DWORD PTR [edx+0x7e],1
  41497f:	ss in  eax,0xa
  414982:	add    BYTE PTR [edi-0x58b85dda],ch
  414988:	mov    DWORD PTR [ecx+eax*1-0x13b5aaa6],ebp
  41498f:	stc    
  414990:	dec    ebp
  414991:	dec    edx
  414992:	in     al,dx
  414993:	push   0x3
  414995:	ficom  DWORD PTR [eax]
  414997:	adc    dl,BYTE PTR [edx]
  414999:	retf   0x750d
  41499c:	(bad)  [edi+0x4a553efd]
  4149a2:	call   0x5d414a80
  4149a7:	dec    edx
  4149a8:	call   0x10ff0517
  4149ad:	loop   0x4149ca
  4149af:	jb     0x4149be
  4149b1:	ins    DWORD PTR es:[edi],dx
  4149b2:	or     DWORD PTR [eax+0x4d0d16fd],esi
  4149b8:	mov    DWORD PTR [edi],esp
  4149ba:	or     bh,al
  4149bc:	ret    0xd6d9
  4149bf:	pop    edx
  4149c0:	mov    DWORD PTR ds:0x9a2c9d55,ecx
  4149c6:	test   al,0x54
  4149c8:	xor    DWORD PTR [ebx],ebx
  4149ca:	inc    ebp
  4149cb:	lods   eax,DWORD PTR ds:[esi]
  4149cc:	inc    ebp
  4149cd:	sbb    bl,BYTE PTR [ecx]
  4149cf:	xchg   BYTE PTR [ebx-0x33],dl
  4149d2:	dec    eax
  4149d3:	pop    edx
  4149d4:	hlt    
  4149d5:	pusha  
  4149d6:	test   ch,cl
  4149d8:	xchg   DWORD PTR [ecx+edi*2-0xa],ecx
  4149dc:	push   edx
  4149dd:	(bad)  
  4149df:	jg     0x414986
  4149e1:	call   0x24ca53bc
  4149e6:	loope  0x41496e
  4149e8:	push   ebx
  4149e9:	leave  
  4149ea:	pop    eax
  4149eb:	inc    edx
  4149ec:	lock jb 0x41497b
  4149ef:	sbb    DWORD PTR [edi-0x360fc2cc],eax
  4149f5:	out    0x5c,al
  4149f7:	das    
  4149f8:	(bad)  
  4149f9:	call   0x8ccad4
  4149fe:	pop    eax
  4149ff:	jle    0x414a52
  414a01:	lock out dx,eax
  414a03:	mov    esp,0x1644d85
  414a08:	mov    bl,0xc
  414a0a:	add    BYTE PTR [eax],al
  414a0c:	mov    dh,0xeb
  414a0e:	ss dec ebp
  414a10:	aam    0x0
  414a12:	test   BYTE PTR [ebp+ebp*4+0x9],dl
  414a16:	add    BYTE PTR [ebx-0x2ba6811b],cl
  414a1c:	or     DWORD PTR [esi-0x5],edx
  414a1f:	(bad)  
  414a20:	jno    0x4149af
  414a22:	std    
  414a23:	jmp    FWORD PTR [ecx+ecx*1+0x4a87f087]
  414a2a:	adc    al,0x7d
  414a2c:	popf   
  414a2d:	jl     0x414a78
  414a2f:	lock add eax,0x298bf843
  414a35:	rol    DWORD PTR [edi+0x34e7c47d],1
  414a3b:	sbb    al,0x8b
  414a3d:	cli    
  414a3e:	dec    ebx
  414a3f:	mov    ebx,DWORD PTR [ecx+0x75]
  414a42:	xchg   edi,ecx
  414a44:	xchg   edi,eax
  414a45:	inc    edx
  414a46:	adc    BYTE PTR [ebp+0x3b],bh
  414a49:	jl     0x414a94
  414a4b:	clc    
  414a4c:	push   edx
  414a4d:	scas   al,BYTE PTR es:[edi]
  414a4e:	sbb    DWORD PTR [ecx-0x5f],edi
  414a51:	pop    es
  414a52:	inc    ebx
  414a53:	cmp    ebx,DWORD PTR [ecx-0x40e83eb]
  414a59:	lods   al,BYTE PTR ds:[esi]
  414a5a:	in     eax,dx
  414a5b:	jne    0x414a8f
  414a5d:	jle    0x414ad8
  414a5f:	in     al,dx
  414a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a61:	icebp  
  414a62:	repz cmp ebx,ecx
  414a65:	jns    0x414ae0
  414a67:	add    esi,DWORD PTR [ebp-0xf]
  414a6a:	repz cmp DWORD PTR [ecx+0x7e0069],0x0
  414a72:	add    al,0xac
  414a74:	jp     0x414a62
  414a76:	fadd   DWORD PTR [edx+eax*2]
  414a79:	jmp    0x414a50
  414a7b:	sahf   
  414a7c:	xchg   BYTE PTR [ebx-0xf],ah
  414a7f:	mov    ds:0x9fc54b8e,al
  414a84:	int3   
  414a85:	dec    DWORD PTR [ecx+0x48393f8a]
  414a8b:	iret   
  414a8c:	xor    eax,0xa99d5ea8
  414a91:	mov    DWORD PTR [eax],edx
  414a93:	push   edi
  414a94:	out    dx,al
  414a95:	dec    edx
  414a96:	mov    ecx,0x173fd417
  414a9b:	sub    dl,BYTE PTR [eax-0x18]
  414a9e:	pop    esi
  414a9f:	jne    0x414a4e
  414aa1:	sub    DWORD PTR [eax],ecx
  414aa3:	inc    edi
  414aa4:	mov    ds,WORD PTR [ebx-0x53]
  414aa7:	pop    ss
  414aa8:	mov    ah,0xd
  414aaa:	inc    edx
  414aab:	sbb    DWORD PTR [ebx-0x79],eax
  414aae:	add    BYTE PTR [ebx],bl
  414ab0:	or     ch,BYTE PTR [ebp+0x7ed7a787]
  414ab6:	int    0x37
  414ab8:	pop    eax
  414ab9:	call   0xe9deb01a
  414abe:	shl    DWORD PTR [edi],cl
  414ac0:	pop    eax
  414ac1:	fmul   DWORD PTR [ebp+ecx*4-0x63]
  414ac5:	sbb    al,0xce
  414ac8:	add    DWORD PTR [ebx+0x130a0a2],ecx
  414ace:	pop    eax
  414acf:	mov    edi,ebp
  414ad1:	mov    BYTE PTR [eax+0xad08b2],ch
  414ad7:	add    BYTE PTR [eax-0x112dfb4a],ah
  414add:	push   0xa2158d07
  414ae2:	add    DWORD PTR [eax],eax
  414ae4:	and    bl,ch
  414ae6:	xlat   BYTE PTR ds:[ebx]
  414ae7:	sbb    BYTE PTR [eax-0x7776fe32],0xa6
  414aee:	or     ebx,DWORD PTR cs:[esi+0xd]
  414af2:	ror    BYTE PTR [eax-0x7421f62f],1
  414af8:	imul   esi,esp,0x71884e7
  414afe:	popa   
  414aff:	inc    edi
  414b00:	jmp    0xcf41d3cd
  414b05:	shr    DWORD PTR [edi+0x8],0xa0
  414b09:	jg     0x414b37
  414b0b:	mov    al,ds:0xa3a7c1d3
  414b10:	sar    DWORD PTR [edx+ebx*1-0x47],1
  414b14:	iret   
  414b15:	mov    edi,0x3e4ddbea
  414b1a:	push   ss
  414b1b:	add    edx,DWORD PTR [ebx+eax*8-0x17]
  414b1f:	mov    ch,BYTE PTR [esi]
  414b21:	mov    ds:0x819d3f60,al
  414b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b27:	iret   
  414b28:	fadd   st(6),st
  414b2a:	mov    esp,0x4b555c3e
  414b2f:	lea    ebx,[esi]
  414b31:	scas   al,BYTE PTR es:[edi]
  414b32:	jmp    0x268d:0x3f555ad2
  414b39:	stos   BYTE PTR es:[edi],al
  414b3a:	jo     0x414b8b
  414b3c:	add    BYTE PTR [eax],al
  414b3e:	jns    0x414adf
  414b40:	repz mov WORD PTR [esi],ds
  414b43:	scas   al,BYTE PTR es:[edi]
  414b44:	add    dl,BYTE PTR [ecx]
  414b46:	push   esp
  414b47:	sub    eax,0x13e1b8ff
  414b4c:	jb     0x414b9d
  414b4e:	cmp    DWORD PTR [edx+eiz*2],esp
  414b51:	das    
  414b52:	in     eax,dx
  414b53:	jle    0x414ae1
  414b55:	or     edx,esp
  414b57:	fmul   DWORD PTR [ebp-0x75]
  414b5a:	add    DWORD PTR [edi+0x28],edx
  414b5d:	std    
  414b5e:	lahf   
  414b5f:	rcl    DWORD PTR [ebx-0x60],1
  414b62:	pop    esp
  414b63:	cmp    eax,0xb196b8f7
  414b68:	call   0x2cc07cb3
  414b6d:	mov    esp,0x9d003ccc
  414b72:	ret    0xfdbb
  414b75:	and    al,0x3d
  414b77:	or     DWORD PTR [ebx-0x7],0xeefc3fff
  414b7e:	pop    edx
  414b7f:	xchg   dh,bh
  414b81:	xchg   esi,eax
  414b82:	sub    eax,0x9be8d1f9
  414b87:	test   eax,0x3ed7b001
  414b8c:	lock sub eax,edx
  414b8f:	inc    edi
  414b90:	adc    al,0xe6
  414b92:	push   edx
  414b93:	daa    
  414b94:	(bad)  
  414b95:	outs   dx,BYTE PTR ds:[esi]
  414b96:	jge    0x414b18
  414b98:	inc    ebx
  414b99:	cmc    
  414b9a:	dec    eax
  414b9b:	fdiv   QWORD PTR ds:[ecx-0x22]
  414b9f:	add    ch,0xb6
  414ba2:	add    BYTE PTR [eax],al
  414ba4:	or     al,0x51
  414ba6:	(bad)  
  414ba7:	sub    edi,DWORD PTR [esi+0x69293109]
  414bad:	mov    dh,0x53
  414baf:	jb     0x414beb
  414bb1:	mov    ah,ch
  414bb3:	cdq    
  414bb4:	pop    ecx
  414bb5:	or     BYTE PTR ds:[edx+0xf],ah
  414bb9:	push   cs
  414bba:	push   esi
  414bbb:	mov    esi,0x72f43e4f
  414bc0:	sbb    edx,DWORD PTR [esi]
  414bc2:	mov    DWORD PTR [ebx],edx
  414bc4:	pop    ecx
  414bc5:	push   esi
  414bc6:	adc    dl,ch
  414bc8:	mov    cs,WORD PTR [eax]
  414bca:	cli    
  414bcb:	mov    edx,0xff43c324
  414bd0:	xlat   BYTE PTR ds:[ebx]
  414bd1:	ret    
  414bd2:	inc    ebx
  414bd3:	not    bh
  414bd5:	or     BYTE PTR [ebx+0x39],0x4f
  414bd9:	cs mov esp,0x399d9470
  414bdf:	test   al,0xda
  414be1:	jle    0x414bc8
  414be3:	call   0xa16a55be
  414be8:	xchg   BYTE PTR [edx+0x5e64004b],al
  414bee:	dec    DWORD PTR [edx+0x458715e9]
  414bf4:	cmp    BYTE PTR [ecx+edx*2-0x10],0x7
  414bf9:	(bad)  
  414bfa:	or     ecx,DWORD PTR [ebp+0x475]
  414c00:	pop    es
  414c01:	enter  0x4585,0x30
  414c05:	pop    esi
  414c06:	dec    DWORD PTR [edx-0x3e470000]
  414c0c:	push   0x10
  414c0e:	mov    ch,0x7c
  414c10:	dec    ecx
  414c11:	clc    
  414c12:	inc    ebp
  414c13:	push   ebx
  414c14:	fdivr  DWORD PTR [ebx]
  414c16:	jge    0x414bfb
  414c18:	dec    BYTE PTR [eax+0x458765f9]
  414c1e:	add    al,0xa5
  414c20:	mov    esi,0x4196bf7d
  414c25:	fdiv   DWORD PTR [edi]
  414c27:	inc    ebx
  414c28:	fmul   DWORD PTR [edi]
  414c2a:	dec    ebx
  414c2b:	push   ebx
  414c2c:	in     al,dx
  414c2d:	bndstx [ebx],(bad)
  414c30:	lock mov edx,DWORD PTR [ecx+0x15]
  414c34:	dec    edi
  414c35:	dec    DWORD PTR [ecx+0x65]
  414c38:	sti    
  414c39:	jne    0x414c03
  414c3b:	jne    0x414c27
  414c3d:	clc    
  414c3e:	mov    bl,0x60
  414c40:	or     ebp,DWORD PTR [edi+0x4d876531]
  414c46:	jo     0x414bdc
  414c48:	inc    ecx
  414c49:	hlt    
  414c4a:	out    dx,eax
  414c4b:	jmp    0xdf:0xeaef00db
  414c52:	mov    edi,0xbf00e7ea
  414c57:	jmp    0x460b:0xa1a100e3
  414c5e:	push   0xffffffa8
  414c60:	std    
  414c61:	mov    BYTE PTR [ecx-0x2aa27ae7],cl
  414c67:	data16 mov WORD PTR [ebx+0x19],es
  414c6b:	jno    0x414cad
  414c6d:	rol    BYTE PTR [eax],1
  414c6f:	add    ah,dl
  414c71:	js     0x414cb3
  414c73:	adc    eax,0x7eda2dd4
  414c78:	test   eax,0xd5e83833
  414c7d:	(bad)  
  414c7f:	or     al,0x42
  414c81:	mov    ds:0xb811538c,eax
  414c86:	outs   dx,BYTE PTR ds:[esi]
  414c87:	add    BYTE PTR [ebx-0x45],dh
  414c8a:	inc    eax
  414c8b:	fsubr  QWORD PTR [eax-0x53]
  414c8e:	mov    dh,0x43
  414c90:	in     eax,dx
  414c91:	jnp    0x414cac
  414c93:	adc    DWORD PTR [eax-0x71],0x2bdc7301
  414c9a:	rol    esi,1
  414c9c:	sbb    al,al
  414c9e:	add    DWORD PTR [edi+0x391b5320],eax
  414ca4:	sbb    BYTE PTR [ebx+0x30],dl
  414ca7:	adc    eax,0x899d75aa
  414cac:	sbb    bh,ch
  414cae:	mov    ch,0x4b
  414cb0:	xor    DWORD PTR [ebx],0x655602c1
  414cb6:	int    0x0
  414cb8:	pop    esp
  414cb9:	jne    0x414c78
  414cbb:	jge    0x414cfe
  414cbd:	dec    ebx
  414cbe:	std    
  414cbf:	lds    edx,FWORD PTR [eax]
  414cc1:	jecxz  0x414cc3
  414cc3:	mov    DWORD PTR [eax],ebx
  414cc5:	sti    
  414cc6:	stc    
  414cc7:	inc    edx
  414cc8:	jno    0x414c52
  414cca:	pop    es
  414ccb:	or     eax,0xdd56d2a
  414cd0:	and    al,BYTE PTR [ebp+0xe9a1]
  414cd6:	fnsave [edi-0x50cabc92]
  414cdc:	outs   dx,BYTE PTR ds:[esi]
  414cdd:	push   ebx
  414cde:	and    DWORD PTR [edx],esi
  414ce0:	cmp    dh,bh
  414ce2:	aad    0x9
  414ce4:	jo     0x414d35
  414ce6:	adc    DWORD PTR ds:0x4eec1de5,ebx
  414cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ced:	xor    BYTE PTR [edi+0x4d01de89],bh
  414cf3:	or     eax,0xb94804f5
  414cf8:	test   al,0xac
  414cfa:	fst    QWORD PTR [ecx-0x31fdf9d5]
  414d00:	and    al,0xb6
  414d02:	cli    
  414d03:	nop
  414d04:	cmp    al,0xc4
  414d06:	push   esp
  414d07:	iret   
  414d08:	jmp    0xe741bb90
  414d0d:	add    al,0x56
  414d0f:	and    edi,0x3
  414d12:	aad    0x89
  414d14:	test   BYTE PTR [ebx],0x55
  414d17:	and    eax,0xf5f0497
  414d1c:	sti    
  414d1d:	repnz inc edx
  414d1f:	and    eax,0x1441046e
  414d24:	int    0x88
  414d26:	push   es
  414d27:	mov    ch,0xf8
  414d2a:	pop    es
  414d2b:	(bad)  
  414d2c:	fucomi st,st(2)
  414d2e:	rcr    DWORD PTR [esi-0x4c],1
  414d31:	xlat   BYTE PTR ds:[ebx]
  414d32:	leave  
  414d33:	or     eax,0x4d5dfd6f
  414d38:	sbb    ecx,DWORD PTR [eax+eax*1+0x2817d100]
  414d3f:	lods   al,BYTE PTR ds:[esi]
  414d40:	int    0x91
  414d42:	mov    ds:0xaccd7a05,eax
  414d47:	mov    ah,0x72
  414d49:	xchg   edx,eax
  414d4a:	mov    ah,0x7b
  414d4c:	push   esp
  414d4d:	shr    cl,1
  414d4f:	test   al,0xcd
  414d51:	adc    eax,0xa716bdf7
  414d56:	out    0x8b,eax
  414d58:	fsub   DWORD PTR [esi+0xe5ed374]
  414d5e:	add    bh,ah
  414d60:	mov    DWORD PTR [ebx],ebx
  414d62:	shr    dh,0xeb
  414d65:	sar    ebp,0x5c
  414d68:	jno    0x414da4
  414d6a:	std    
  414d6b:	push   esp
  414d6c:	gs mov dl,0x65
  414d6f:	aad    0x69
  414d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d72:	add    ecx,ebx
  414d74:	fwait
  414d75:	leave  
  414d76:	jae    0x414d79
  414d78:	dec    eax
  414d79:	sbb    ebx,eax
  414d7b:	out    dx,al
  414d7c:	jns    0x414dd0
  414d7e:	in     al,dx
  414d7f:	mov    dh,0xb3
  414d81:	mov    eax,ds:0x998b760d
  414d86:	std    
  414d87:	sbb    al,0x25
  414d89:	xchg   ecx,eax
  414d8a:	jae    0x414de1
  414d8c:	sub    BYTE PTR ds:0x11ab61ff,cl
  414d92:	mov    BYTE PTR [ebx+eiz*1],ah
  414d95:	xchg   edx,eax
  414d96:	inc    ebx
  414d97:	xchg   BYTE PTR [esi+0x7f],bh
  414d9a:	cmc    
  414d9b:	jle    0x414d1e
  414d9d:	nop
  414d9e:	inc    ebx
  414d9f:	in     eax,0x0
  414da1:	add    ch,dl
  414da3:	rcl    BYTE PTR [ecx+0x6e],0xeb
  414da7:	popf   
  414da8:	add    DWORD PTR [edi],ebp
  414daa:	push   es
  414dab:	mov    dl,0x3f
  414dad:	sub    esp,DWORD PTR [ecx-0x5c]
  414db0:	add    DWORD PTR [edx+0x55],ebx
  414db3:	dec    edx
  414db4:	lock stc 
  414db6:	dec    ebp
  414db7:	dec    edx
  414db8:	lock push 0xffffffbb
  414dbb:	aad    0x10
  414dbd:	add    cl,dl
  414dbf:	gs or  eax,0xfda81865
  414dc5:	cs push ebp
  414dc7:	dec    edx
  414dc8:	in     al,dx
  414dc9:	stc    
  414dca:	pop    ebp
  414dcb:	dec    edx
  414dcc:	in     al,dx
  414dcd:	push   0xffffffb3
  414dcf:	rcl    DWORD PTR [eax],1
  414dd1:	shl    BYTE PTR [ebx+0x745d0d59],cl
  414dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dd8:	std    
  414dd9:	add    bl,bl
  414ddb:	inc    ecx
  414ddc:	pop    ebx
  414ddd:	mov    esi,edx
  414ddf:	cmp    al,0xc5
  414de1:	ret    0xa1c
  414de4:	push   ecx
  414de5:	mov    edi,DWORD PTR [eax]
  414de7:	es in  al,dx
  414de9:	sub    al,0xef
  414deb:	inc    ebx
  414dec:	push   ebx
  414ded:	xor    ebp,DWORD PTR [esi-0x62]
  414df0:	cld    
  414df1:	inc    edi
  414df2:	mov    edi,0xfc5585cd
  414df7:	and    edx,DWORD PTR [ecx-0xc]
  414dfa:	test   DWORD PTR [eax-0x24],eax
  414dfd:	mov    ecx,ecx
  414dff:	imul   esi,DWORD PTR ds:0x8e0b2055,0xed0000aa
  414e09:	or     DWORD PTR [eax],eax
  414e0b:	mov    ebp,DWORD PTR [ecx+0x505586a5]
  414e11:	and    al,0x49
  414e13:	loopne 0x414e8c
  414e15:	dec    eax
  414e16:	adc    BYTE PTR [ecx-0x35c8a65f],cl
  414e1c:	retf   
  414e1d:	mov    eax,DWORD PTR [eax-0x78f643ff]
  414e23:	dec    ebp
  414e24:	dec    eax
  414e25:	and    eax,0x6f6de059
  414e2a:	add    cl,BYTE PTR [ecx+0xc87d169]
  414e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e31:	mov    ah,0x4a
  414e33:	sbb    BYTE PTR [ebx-0x53feac73],bh
  414e39:	or     DWORD PTR [ebp+0x508b144d],eax
  414e3f:	push   DWORD PTR [ebx+0x6c01e852]
  414e45:	or     DWORD PTR [eax],eax
  414e47:	mov    edi,DWORD PTR [esp+esi*4+0x56391442]
  414e4e:	xchg   DWORD PTR [ebp+0x14],ecx
  414e51:	and    eax,0xb9d5f879
  414e56:	in     eax,dx
  414e57:	or     al,ah
  414e59:	addr16 jle 0x414ed7
  414e5c:	push   ecx
  414e5d:	sbb    cl,al
  414e5f:	cmp    DWORD PTR [eax+0x4e0e30c2],ebx
  414e65:	outs   dx,BYTE PTR ds:[esi]
  414e66:	test   eax,0x36d7c937
  414e6b:	push   es
  414e6c:	add    BYTE PTR [eax],al
  414e6e:	call   0x42c0:0xa9102ee7
  414e75:	cmp    DWORD PTR ds:0x98870a46,esp
  414e7b:	ret    0x7b7c
  414e7e:	or     DWORD PTR [eax],ecx
  414e80:	das    
  414e81:	hlt    
  414e82:	mov    BYTE PTR [edi+0x30097b7c],ch
  414e88:	xor    al,ch
  414e8a:	aad    0xf4
  414e8c:	sti    
  414e8d:	cmp    BYTE PTR [eax-0x7e],dh
  414e90:	sub    eax,0x5779701
  414e95:	cmp    DWORD PTR [eax-0x76],0xa2588901
  414e9c:	(bad)  
  414e9d:	in     eax,0xd7
  414e9f:	hlt    
  414ea0:	add    al,0xdd
  414ea2:	push   cs
  414ea3:	sahf   
  414ea4:	adc    eax,0x30276f7c
  414ea9:	in     al,dx
  414eaa:	dec    esi
  414eab:	add    eax,0x2f2029b4
  414eb0:	fmulp  st(7),st
  414eb2:	adc    al,0x71
  414eb4:	jl     0x414f09
  414eb6:	mov    cl,0x27
  414eb8:	pop    eax
  414eb9:	hlt    
  414eba:	out    dx,al
  414ebb:	pop    ebp
  414ebc:	lods   eax,DWORD PTR ds:[esi]
  414ebd:	mov    DWORD PTR [eax],esi
  414ebf:	aas    
  414ec0:	fsubp  st(7),st
  414ec2:	ficom  DWORD PTR [ebx+0x654c42cc]
  414ec8:	leave  
  414ec9:	or     eax,0xddede02a
  414ece:	repz or edi,ebp
  414ed1:	jle    0x414ed3
  414ed3:	add    BYTE PTR [esi],cl
  414ed5:	mov    dh,0x70
  414ed7:	inc    eax
  414ed8:	ins    DWORD PTR es:[edi],dx
  414ed9:	mov    al,0xed
  414edb:	jle    0x414edb
  414edd:	shl    DWORD PTR [eax+0x58],0x3d
  414ee1:	mov    DWORD PTR [edi+ecx*1+0x5ae96d5],eax
  414ee8:	(bad)  
  414ee9:	or     BYTE PTR [edx+eax*2-0x2d],ah
  414eed:	nop
  414eee:	xchg   esp,eax
  414eef:	adc    esp,eax
  414ef1:	je     0x414f2f
  414ef3:	sbb    BYTE PTR [edx-0x59],ch
  414ef6:	jmp    0x66555be7
  414efb:	mov    edi,0xb0e709d5
  414f00:	xchg   esi,eax
  414f01:	lds    esp,FWORD PTR [edi+0x2f]
  414f04:	jmp    0xd178c112
  414f09:	push   ds
  414f0a:	sar    BYTE PTR [esi+ecx*4-0x5f],cl
  414f0e:	pop    edi
  414f0f:	add    BYTE PTR [eax+0x5dae348f],ch
  414f15:	xor    eax,0x554d02d6
  414f1a:	fiadd  WORD PTR ds:0x7c92564f
  414f20:	and    ebx,ebx
  414f22:	jmp    0x714fdfab
  414f27:	aas    
  414f28:	ror    edx,0x88
  414f2b:	or     bh,cl
  414f2d:	rcr    DWORD PTR [edi+0x0],1
  414f30:	call   0xabdd03c4
  414f35:	shl    DWORD PTR [edi],1
  414f37:	mov    ds:0x94d90000,eax
  414f3c:	mov    edx,0xeacfcfb0
  414f41:	retf   
  414f42:	pop    ebp
  414f43:	push   esi
  414f44:	inc    BYTE PTR [edx]
  414f46:	push   esp
  414f47:	retf   
  414f48:	jmp    0xf74dc7
  414f4d:	pusha  
  414f4e:	adc    ah,BYTE PTR [edx-0x1e757379]
  414f54:	shl    BYTE PTR [ecx+edx*1-0x1feeac6f],0x4e
  414f5c:	cld    
  414f5d:	jmp    0x36d0:0x31538b87
  414f64:	in     al,0x70
  414f66:	mov    ds:0xc1e3e9b1,al
  414f6b:	dec    esi
  414f6c:	cld    
  414f6d:	add    ah,dl
  414f6f:	mov    BYTE PTR [ebx-0xf],bh
  414f72:	gs push ds
  414f74:	adc    al,0x72
  414f76:	xor    DWORD PTR [ecx-0x6f2eab77],0x5b
  414f7d:	loope  0x414f50
  414f7f:	rol    BYTE PTR [edi+0x38e36815],cl
  414f85:	xor    al,0x19
  414f87:	es out 0x72,al
  414f8a:	ret    
  414f8b:	stc    
  414f8c:	cld    
  414f8d:	sub    al,0x29
  414f8f:	mov    ds:0x4e71c14c,eax
  414f94:	clc    
  414f95:	loop   0x414f42
  414f97:	mov    ebp,0x4725b97c
  414f9c:	cld    
  414f9d:	bound  eax,QWORD PTR [eax]
  414f9f:	add    BYTE PTR [ebx-0x7ae3c907],bl
  414fa5:	adc    al,0x8c
  414fa7:	imul   eax,DWORD PTR [esp+eiz*4-0x5d574503],0x4c
  414faf:	lea    edx,[edi-0xc17fd3e]
  414fb5:	test   eax,0xfe122240
  414fba:	or     al,0x6d
  414fbc:	add    eax,0x1956fda4
  414fc1:	inc    edi
  414fc2:	or     al,0x63
  414fc4:	rol    ebp,cl
  414fc6:	mov    BYTE PTR [eax],al
  414fc8:	test   BYTE PTR ds:0x55625fc3,ah
  414fce:	(bad)
  414fd1:	push   es
  414fd2:	das    
  414fd3:	rcl    BYTE PTR [edi],0x5c
  414fd6:	push   ecx
  414fd7:	mov    eax,eax
  414fd9:	(bad)  
  414fda:	in     al,dx
  414fdb:	push   eax
  414fdc:	out    0xe3,eax
  414fde:	pop    es
  414fdf:	mov    esi,DWORD PTR ds:0xb5575612
  414fe5:	jecxz  0x414fd6
  414fe7:	mov    eax,DWORD PTR [ecx-0x3805790a]
  414fed:	cmp    ecx,DWORD PTR [ebx+eax*1]
  414ff0:	hlt    
  414ff1:	or     eax,0xd12a33fa
  414ff6:	inc    ecx
  414ff7:	(bad)  
  414ff8:	cmp    al,0xcc
  414ffa:	inc    ecx
  414ffb:	jmp    FWORD PTR [eiz*1-0x274a4fb7]
  415002:	mov    edi,0xb9000089
  415007:	test   DWORD PTR [edi],esi
  415009:	rol    DWORD PTR [ebx],0x89
  41500c:	jecxz  0x41500f
  41500e:	in     al,dx
  41500f:	add    eax,0x4875c827
  415014:	enter  0xffeb,0x1e
  415018:	push   ecx
  415019:	or     al,0x67
  41501b:	push   eax
  41501c:	ror    BYTE PTR [ecx-0x2fc89657],0xf3
  415023:	mov    BYTE PTR [edi+0x270dbc01],dh
  415029:	ret    0x5345
  41502c:	int3   
  41502d:	jmp    0x414fde
  41502f:	and    al,0x41
  415031:	int3   
  415032:	(bad)  
  415033:	cmc    
  415034:	push   esp
  415035:	mov    ecx,edx
  415037:	popa   
  415038:	test   DWORD PTR [ebp+0x34],ecx
  41503b:	mov    ch,0xbe
  41503d:	jge    0x414fee
  41503f:	push   ds
  415040:	inc    ecx
  415041:	hlt    
  415042:	aad    0x2b
  415044:	inc    edi
  415045:	enter  0xf1ce,0x2e
  415049:	add    DWORD PTR [esi+ebp*2-0x57],ebx
  41504d:	std    
  41504e:	or     BYTE PTR [ebx-0x3],cl
  415051:	mov    ah,0x8
  415053:	dec    ebx
  415054:	lods   eax,DWORD PTR ds:[esi]
  415055:	jae    0x4150c0
  415057:	shl    BYTE PTR [esi+0x53],0x79
  41505b:	call   0x7e904096
  415060:	stc    
  415061:	out    0x74,eax
  415063:	jmp    FWORD PTR [ebp+edi*8+0xda9665e]
  41506a:	add    BYTE PTR [eax],al
  41506c:	jp     0x4150dc
  41506e:	mov    ch,0x81
  415070:	mov    eax,0xb08103ea
  415075:	test   BYTE PTR [ebx],0x81
  415078:	mov    eax,0xb0810412
  41507d:	into   
  41507e:	add    DWORD PTR [ecx+0x3c80c288],ecx
  415084:	mov    ebx,0xd505c5f0
  415089:	sub    DWORD PTR [eax],edi
  41508b:	mov    eax,0x8777ee5c
  415090:	cwde   
  415091:	jbe    0x415056
  415093:	inc    ebx
  415094:	and    eax,0xc643c3b2
  415099:	mov    cl,0x88
  41509b:	shr    BYTE PTR [ebx-0x28],0x80
  41509f:	jnp    0x415096
  4150a1:	mov    dl,0x38
  4150a3:	add    ecx,DWORD PTR [esi-0x4b]
  4150a6:	jl     0x4150eb
  4150a8:	lods   eax,DWORD PTR ds:[esi]
  4150a9:	sub    edi,edi
  4150ab:	cmp    BYTE PTR [eax],dl
  4150ad:	imul   edi,DWORD PTR [eax],0x3
  4150b0:	ret    0xa3e5
  4150b3:	jmp    0xe4718498
  4150b8:	aad    0x95
  4150ba:	push   es
  4150bb:	(bad)  
  4150bc:	adc    BYTE PTR [edx],cl
  4150be:	cli    
  4150bf:	add    ebx,DWORD PTR [edx+0x46]
  4150c2:	cmp    ebp,edx
  4150c4:	pop    ss
  4150c5:	mov    esi,0x469014dc
  4150ca:	inc    ebx
  4150cb:	scas   al,BYTE PTR es:[edi]
  4150cc:	push   ds
  4150cd:	mov    dh,0x6a
  4150cf:	rol    DWORD PTR [eax],0x0
  4150d2:	(bad)  [esp+edi*4+0x1f20d5d7]
  4150d9:	call   0x94d5:0xd3a4c7d9
  4150e0:	lods   al,BYTE PTR ds:[esi]
  4150e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150e2:	stos   BYTE PTR es:[edi],al
  4150e3:	inc    esi
  4150e4:	pop    es
  4150e5:	xor    eax,0xcbac94cd
  4150ea:	pop    esp
  4150eb:	dec    esi
  4150ec:	sub    ebx,DWORD PTR [edx-0x30536b2d]
  4150f2:	dec    esp
  4150f3:	dec    esi
  4150f4:	pop    ds
  4150f5:	cmp    DWORD PTR [esi-0x29c81861],0xffffffe4
  4150fc:	mov    ds:0x66f2a1c7,eax
  415101:	std    
  415102:	aam    0x91
  415104:	jecxz  0x415113
  415106:	dec    esp
  415107:	mov    ecx,0x91dd9aa8
  41510c:	xor    ecx,DWORD PTR [esi]
  41510e:	or     dl,BYTE PTR [ebx-0x7103c69]
  415114:	outs   dx,DWORD PTR ds:[esi]
  415115:	inc    edi
  415116:	adc    edx,ecx
  415118:	mov    edi,0xcd355d0c
  41511d:	add    DWORD PTR [ebp+0x45],ebx
  415120:	add    eax,0x9d461b01
  415125:	add    edx,DWORD PTR [edi+eax*8-0x15]
  415129:	or     DWORD PTR [esi-0x5],0xffffffe6
  41512d:	cld    
  41512e:	push   edi
  41512f:	ins    BYTE PTR es:[edi],dx
  415130:	out    0x3,eax
  415132:	aad    0x89
  415134:	out    dx,al
  415135:	sti    
  415136:	add    BYTE PTR [eax],al
  415138:	cmp    bl,BYTE PTR ds:0x93d99900
  41513e:	add    eax,0x7b1fa1f5
  415143:	data16 fst DWORD PTR ds:0x5dda2203
  41514a:	je     0x415169
  41514c:	aad    0x5
  41514e:	mov    dh,ah
  415150:	push   cs
  415151:	push   cs
  415152:	push   ds
  415153:	jb     0x4150eb
  415155:	pop    edi
  415156:	call   0x1e87504c
  41515b:	call   0x4200b04d
  415160:	rol    DWORD PTR [esi-0x58699ab5],0x18
  415167:	jno    0x415176
  415169:	add    BYTE PTR [edx],al
  41516b:	popa   
  41516c:	xchg   ebp,eax
  41516d:	inc    DWORD PTR [eax]
  41516f:	daa    
  415170:	xchg   edx,eax
  415171:	pushf  
  415172:	jmp    FWORD PTR [ecx+0x1b]
  415175:	push   es
  415176:	jmp    0xc6508c6c
  41517b:	lods   al,BYTE PTR ds:[esi]
  41517c:	or     DWORD PTR [edx],0x1b79e688
  415182:	shl    BYTE PTR [edx+ebx*8-0x1],1
  415186:	cld    
  415187:	push   esp
  415188:	or     eax,0x41d1739d
  41518d:	sbb    esi,esp
  41518f:	cmp    DWORD PTR [eax],edi
  415191:	sbb    esi,eax
  415193:	sar    DWORD PTR [ebx-0x2a410263],1
  415199:	cdq    
  41519a:	sub    DWORD PTR [ecx-0x1c550000],0xfffffffc
  4151a1:	xor    al,0x39
  4151a3:	or     eax,0x9d4134b5
  4151a8:	jae    0x41513f
  4151aa:	fst    DWORD PTR [ebp+0x53]
  4151ad:	test   DWORD PTR [ecx+0x362f01a],eax
  4151b3:	(bad)  
  4151b4:	mov    BYTE PTR [eax],0xb3
  4151b7:	or     eax,DWORD PTR [edi+0x4122c47d]
  4151bd:	(bad)  
  4151be:	xor    al,0x48
  4151c0:	sti    
  4151c1:	call   0x3cabce
  4151c6:	daa    
  4151c7:	dec    eax
  4151c8:	mov    ah,0xc1
  4151ca:	or     al,0x9
  4151cc:	push   eax
  4151cd:	push   DWORD PTR [ecx+0x7a0c895a]
  4151d3:	cmp    ebp,eax
  4151d5:	xor    eax,0x3fb6d5a
  4151da:	mov    esp,0x8cec4189
  4151df:	and    DWORD PTR [ecx-0x14],eax
  4151e2:	(bad)  
  4151e3:	dec    ebx
  4151e5:	adc    BYTE PTR [edi+0x47],dh
  4151e8:	ror    BYTE PTR [edi],0xe8
  4151eb:	fdivp  st(5),st
  4151ed:	(bad)  
  4151ee:	jmp    0x415179
  4151f0:	inc    ecx
  4151f1:	call   0xe8827342
  4151f6:	scas   eax,DWORD PTR es:[edi]
  4151f7:	inc    edi
  4151f9:	adc    BYTE PTR [edi],dl
  4151fb:	inc    edi
  4151fc:	mov    al,0xf
  4151fe:	mov    eax,0xfffbaa
  415203:	add    BYTE PTR [ebx],bh
  415205:	push   edx
  415206:	xchg   esi,eax
  415208:	call   0x8739:0x2c0cc25c
  41520f:	in     al,dx
  415210:	ja     0x41525a
  415212:	or     al,0x3b
  415214:	mov    cl,0xf5
  415216:	or     al,BYTE PTR [edi+0x59c]
  41521c:	fistp  QWORD PTR [ebx]
  41521e:	xchg   DWORD PTR [edi+0x10],esi
  415221:	pop    es
  415222:	jno    0x415230
  415224:	out    dx,eax
  415225:	into   
  415226:	xor    eax,0x1fd7e05d
  41522b:	mov    esp,DWORD PTR [ecx-0x2afb7563]
  415231:	mov    edi,0x8b928951
  415236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415237:	bnd ret 0xf984
  41523b:	mov    ch,0x12
  41523d:	repnz add al,BYTE PTR [ebx-0x23]
  415241:	mov    ds:0xafe5456f,eax
  415246:	leave  
  415247:	cmp    DWORD PTR [eax],eax
  415249:	lahf   
  41524a:	xor    esp,eax
  41524c:	dec    esi
  41524d:	or     DWORD PTR fs:[ecx+0x5d7b9f28],ecx
  415254:	adc    al,0xb0
  415256:	inc    eax
  415257:	or     al,0xd6
  415259:	cld    
  41525a:	jl     0x41522a
  41525c:	push   ebp
  41525d:	dec    eax
  41525e:	add    esi,DWORD PTR [ebx-0x3b]
  415261:	xchg   edi,eax
  415262:	mov    bl,0x71
  415264:	mov    eax,ds:0x880b28
  415269:	add    BYTE PTR [ebp-0x70c6bb8e],bh
  41526f:	sub    DWORD PTR [edi-0x52cd0217],0xeea2c002
  415279:	icebp  
  41527a:	(bad)  
  41527b:	mov    ds:0xab4d177b,eax
  415280:	inc    ecx
  415281:	aas    
  415282:	out    dx,al
  415283:	call   0xc08048bd
  415288:	cmp    ecx,0x38fa3dd9
  41528e:	daa    
  41528f:	inc    eax
  415290:	dec    BYTE PTR [ecx+0x40092aec]
  415296:	xchg   esp,eax
  415297:	idiv   DWORD PTR [ebp+0x40180b72]
  41529d:	or     al,0xd6
  41529f:	jecxz  0x415298
  4152a1:	xchg   BYTE PTR [eax-0x3abd115a],bl
  4152a7:	mov    ebx,0x9e2747f
  4152ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ad:	stos   BYTE PTR es:[edi],al
  4152ae:	jnp    0x4152f0
  4152b0:	dec    eax
  4152b1:	and    ebx,DWORD PTR [eax+ecx*2-0x668b719]
  4152b8:	out    0x50,al
  4152ba:	dec    esp
  4152bb:	lods   eax,DWORD PTR ds:[esi]
  4152bc:	jb     0x4152f6
  4152be:	leave  
  4152bf:	or     al,0x36
  4152c1:	push   esp
  4152c2:	(bad)  
  4152c3:	mov    BYTE PTR [ebx-0x45cbfbc1],al
  4152c9:	into   
  4152ca:	or     BYTE PTR [ecx+0x215f],dl
  4152d0:	fdivr  QWORD PTR [eax+0x8bb7fee]
  4152d6:	out    0x3,eax
  4152d8:	fcom   DWORD PTR [eax+ebx*8+0x2]
  4152dc:	sti    
  4152dd:	loopne 0x415318
  4152df:	cli    
  4152e0:	push   esi
  4152e1:	add    ch,dl
  4152e3:	add    edx,ebp
  4152e5:	or     al,0x7e
  4152e7:	inc    esp
  4152e8:	push   0x7
  4152ea:	pop    ss
  4152eb:	cli    
  4152ec:	sub    DWORD PTR [edi+0x238d5070],esi
  4152f2:	jb     0x415348
  4152f4:	aam    0x23
  4152f6:	jmp    0xa67c:0x3954d8d1
  4152fd:	lds    esi,FWORD PTR [eax+0x48]
  415300:	sbb    DWORD PTR [edx+0x3e5a979c],edx
  415306:	and    edi,DWORD PTR [esi+0x5]
  415309:	nop
  41530a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530b:	mov    ebx,0x70f6c7ec
  415310:	adc    eax,0x5a4a472f
  415315:	ss (bad) 
  415317:	and    cl,ah
  415319:	cdq    
  41531a:	pop    edx
  41531b:	call   FWORD PTR [ebx+0x16]
  41531e:	mov    bh,0x9d
  415320:	ror    DWORD PTR [esi+esi*2],cl
  415323:	les    ebx,FWORD PTR [edx+0x46]
  415326:	add    BYTE PTR [ecx-0x5ead1d49],bh
  41532c:	fmul   QWORD PTR [eax+0x9d6eb7d]
  415332:	pushw  0x0
  415335:	add    dl,bh
  415337:	cdq    
  415338:	add    dh,ah
  41533a:	dec    edx
  41533b:	push   ss
  41533c:	add    ch,cl
  41533e:	(bad)  
  41533f:	or     al,0xb5
  415341:	sbb    al,0x81
  415343:	or     eax,0xea926b6
  415348:	lods   eax,DWORD PTR ds:[esi]
  415349:	stos   DWORD PTR es:[edi],eax
  41534a:	cs inc edi
  41534c:	call   0x11c792f
  415351:	jo     0x41535d
  415353:	mov    dh,0x87
  415355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415356:	jb     0x4152e9
  415358:	inc    ebx
  415359:	sub    eax,0x2e41708
  41535e:	xchg   edi,eax
  41535f:	or     eax,0x29db29b5
  415364:	pop    edx
  415365:	mov    DWORD PTR [ecx-0x10138e35],0xd742f436
  41536f:	or     al,0xb5
  415371:	sub    esi,ebx
  415373:	inc    esi
  415374:	hlt    
  415375:	xchg   DWORD PTR [ecx+0x18],eax
  415378:	(bad)  
  415379:	out    0x51,al
  41537b:	jecxz  0x41537e
  41537d:	jmp    0x84c27758
  415382:	push   0xa
  415384:	or     eax,0x7df65
  415389:	jmp    0xf594a9bb
  41538e:	sbb    eax,0x1df14556
  415393:	push   esi
  415394:	into   
  415395:	out    dx,al
  415396:	test   DWORD PTR [esi],edx
  415398:	loopne 0x4153fe
  41539a:	add    BYTE PTR [eax],al
  41539c:	xchg   edx,eax
  41539d:	or     bh,ch
  41539f:	ficomp WORD PTR [ebp+0x63000dc1]
  4153a5:	enter  0x7585,0x14
  4153a9:	mov    ds:0x5ec77b3,al
  4153ae:	inc    ecx
  4153af:	clc    
  4153b0:	out    dx,eax
  4153b1:	inc    ebx
  4153b2:	clc    
  4153b3:	jae    0x8c8ed981
  4153b9:	mov    eax,ds:0xd437deac
  4153be:	or     eax,DWORD PTR [eax+0x558506a5]
  4153c4:	je     0x4153e5
  4153c6:	inc    ecx
  4153c7:	mov    esp,0xd11ac3
  4153cc:	mov    esp,0x5c4f8a06
  4153d1:	xchg   ch,dh
  4153d3:	add    DWORD PTR [ecx-0x4f],edi
  4153d6:	mov    al,dh
  4153d8:	mov    bh,0xc4
  4153da:	or     eax,DWORD PTR [edi+0x766]
  4153e0:	test   DWORD PTR [ecx+0x18],0xff7e418b
  4153e7:	lds    edi,FWORD PTR [edi+0x5e]
  4153ea:	test   DWORD PTR [ebp-0x44],ecx
  4153ed:	lods   eax,DWORD PTR ds:[esi]
  4153ee:	mov    esi,0x4b1d8473
  4153f3:	adc    al,0x87
  4153f5:	pop    esi
  4153f6:	dec    ebp
  4153f8:	(bad)  
  4153f9:	or     bh,ch
  4153fb:	cmp    DWORD PTR [ecx+eiz*4-0x7e],ecx
  4153ff:	mov    al,ds:0x62c0000
  415404:	add    BYTE PTR [eax+0x17],al
  415407:	fstp   TBYTE PTR [edi+0x7305e372]
  41540d:	or     al,0x67
  41540f:	push   ebp
  415410:	jbe    0x4153e2
  415412:	aad    0x1b
  415414:	std    
  415415:	jmp    FWORD PTR [esi+eax*4]
  415418:	cmc    
  415419:	add    ch,BYTE PTR [ecx-0x2a3778bc]
  41541f:	test   eax,0x3325a0d
  415425:	add    ch,dl
  415427:	pop    ss
  415428:	cmp    eax,0x9bf55e18
  41542d:	add    DWORD PTR [edi+ebp*4],edx
  415430:	sar    DWORD PTR [ecx],1
  415432:	pop    ss
  415433:	fild   WORD PTR [esi]
  415435:	mov    DWORD PTR [edx-0x64],esp
  415438:	(bad)  
  41543a:	(bad)  
  41543b:	jno    0x4154b8
  41543d:	jae    0x4153d4
  41543f:	sub    al,0x2f
  415441:	sar    BYTE PTR [ebx],0x2c
  415444:	lock add eax,0x72f1cc33
  41544a:	push   cs
  41544b:	and    al,0xc4
  41544d:	add    ch,dh
  41544f:	fs xor ch,bl
  415452:	(bad)  
  415453:	div    edi
  415455:	cmp    BYTE PTR [esi-0x2d184c47],cl
  41545b:	mov    eax,ds:0x3a550001
  415460:	add    BYTE PTR ds:0x30158,cl
  415466:	add    BYTE PTR [eax],al
  415468:	aad    0x1b
  41546a:	mov    esp,0x7ea89639
  41546f:	sub    al,0xd4
  415471:	mov    ds:0xbb1a8901,al
  415476:	jp     0x4154cb
  415478:	ins    DWORD PTR es:[edi],dx
  415479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41547a:	les    eax,FWORD PTR [ecx]
  41547c:	and    eax,0xee71bfac
  415481:	sub    ebp,DWORD PTR ds:0xf2ee14
  415487:	out    dx,eax
  415488:	dec    esp
  415489:	push   ss
  41548a:	ror    DWORD PTR [ecx+0x3478e2a8],0xd3
  415491:	pop    ebx
  415492:	icebp  
  415493:	jb     0x41545b
  415495:	and    eax,esp
  415497:	add    al,0xde
  415499:	or     DWORD PTR [ecx+0x2e0d0031],ebp
  41549f:	clc    
  4154a0:	int    0xc4
  4154a2:	pop    ebp
  4154a3:	aam    0xfa
  4154a5:	mov    al,ds:0x8d503e7
  4154aa:	jge    0x4154ea
  4154ac:	mov    dl,0x22
  4154ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154af:	add    esi,DWORD PTR [ecx+0x6082e709]
  4154b5:	inc    ebp
  4154b6:	in     al,0x2f
  4154b8:	iret   
  4154b9:	or     ch,BYTE PTR [eax+ebp*4]
  4154bc:	je     0x4154e7
  4154be:	mov    dl,0x42
  4154c0:	aad    0xa4
  4154c2:	loope  0x41553e
  4154c4:	push   cs
  4154c5:	xchg   esi,eax
  4154c6:	pop    esp
  4154c7:	aas    
  4154c8:	mov    edx,0x406fd9
  4154cd:	add    BYTE PTR [ecx+0x5c982484],dh
  4154d3:	inc    esi
  4154d4:	jae    0x41554e
  4154d6:	adc    DWORD PTR [ebx],ecx
  4154d8:	fstp   TBYTE PTR [eax+0x26]
  4154db:	mov    dh,0x4f
  4154dd:	inc    eax
  4154de:	dec    edi
  4154df:	cwde   
  4154e0:	pop    esi
  4154e1:	jg     0x415478
  4154e3:	or     BYTE PTR [ebx+0x6c],ch
  4154e6:	aad    0x9
  4154e8:	out    0x7a,eax
  4154ea:	push   ss
  4154eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ec:	jmp    0x7550:0x722f9140
  4154f3:	das    
  4154f4:	sub    cl,al
  4154f6:	int    0x2f
  4154f8:	pusha  
  4154f9:	adc    esi,ebx
  4154fb:	test   BYTE PTR [edi+ebx*4-0x4d63545],bh
  415502:	mov    al,0x82
  415504:	mov    bh,0x1
  415506:	mov    ebx,0xb3b3b484
  41550b:	retf   0xfb29
  41550e:	mov    eax,0xb0ff9782
  415513:	test   BYTE PTR [eax],al
  415515:	pushf  
  415516:	jb     0x415547
  415518:	mov    edi,0x872e1e2b
  41551d:	cmp    DWORD PTR [ebx],edx
  41551f:	adc    DWORD PTR [ebp+0x39],0x6a08398e
  415526:	mov    eax,0xb95c0345
  41552b:	add    eax,0x1c39f674
  415530:	call   0x3041554f
  415535:	sbb    al,0xbc
  415537:	sbb    BYTE PTR [ecx-0x52],al
  41553a:	cld    
  41553b:	scas   al,BYTE PTR es:[edi]
  41553c:	xor    BYTE PTR [edx+0x4d40f652],ah
  415542:	aas    
  415543:	xor    DWORD PTR ds:0xb91d47d2,eax
  415549:	dec    edi
  41554a:	dec    eax
  41554b:	adc    eax,0x85638abb
  415550:	fldenv [eax-0x4e0581ae]
  415556:	mov    DWORD PTR [eax*4+0x1c717395],ebx
  41555d:	dec    ebx
  41555e:	sar    BYTE PTR [esi+0x77e8bf0d],1
  415564:	aas    
  415565:	xchg   ebp,eax
  415566:	std    
  415567:	inc    edx
  415568:	mov    eax,ds:0xfc317396
  41556d:	cmp    dl,ah
  41556f:	inc    esi
  415570:	ret    0x8991
  415573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415574:	xchg   BYTE PTR [edi+0x55],al
  415577:	inc    ecx
  415578:	mov    bl,0x9f
  41557a:	std    
  41557b:	cs cmp al,0xf9
  41557e:	cld    
  41557f:	pushf  
  415580:	push   ds
  415581:	adc    DWORD PTR [ebx+0x35],0x62f81b70
  415588:	add    bh,BYTE PTR [edx-0x6fa149b1]
  41558e:	repnz add bl,bl
  415591:	ins    BYTE PTR es:[edi],dx
  415592:	test   DWORD PTR [ebp+0x28],eax
  415595:	sbb    al,al
  415597:	je     0x415599
  415599:	add    BYTE PTR [ecx],bh
  41559b:	adc    cl,BYTE PTR [ecx-0x14]
  41559e:	sub    ebx,eax
  4155a0:	retf   
  4155a1:	(bad)  
  4155a2:	ror    BYTE PTR [edx],0xc
  4155a5:	mov    DWORD PTR [ecx+0x20458771],esi
  4155ab:	or     al,0x41
  4155ad:	in     al,0x77
  4155af:	fisttp WORD PTR [ebx]
  4155b1:	mov    edi,DWORD PTR [ecx+0x29afe551]
  4155b7:	outs   dx,BYTE PTR ds:[esi]
  4155b8:	sti    
  4155b9:	mov    eax,ecx
  4155bb:	ins    DWORD PTR es:[edi],dx
  4155bc:	call   DWORD PTR [esp+ebx*1+0x74]
  4155c0:	push   ebp
  4155c1:	std    
  4155c2:	jnp    0x415631
  4155c4:	sbb    ebx,0x26796e1
  4155ca:	or     dh,BYTE PTR [ecx+0x35]
  4155cd:	xor    ebp,DWORD PTR [esp+esi*8-0x7c]
  4155d1:	inc    ebp
  4155d2:	test   al,0xf0
  4155d4:	add    ecx,DWORD PTR [ebp-0xb26e0f]
  4155da:	mov    eax,ds:0x6fc16392
  4155df:	xchg   edx,eax
  4155e0:	arpl   WORD PTR [ecx-0x211a6367],cx
  4155e6:	out    dx,eax
  4155e7:	or     eax,0xe6ac8400
  4155ec:	adc    bh,bh
  4155ee:	mov    eax,ds:0xb875fb7e
  4155f3:	ins    DWORD PTR es:[edi],dx
  4155f4:	jno    0x4155fe
  4155f6:	add    al,0x5f
  4155f8:	das    
  4155f9:	add    BYTE PTR [esi+edx*1-0x40],ch
  4155fd:	je     0x4155ff
  4155ff:	add    BYTE PTR [ecx-0x67],dh
  415602:	repz inc esi
  415604:	out    0x8,eax
  415606:	das    
  415607:	imul   bl
  415609:	out    0xdb,eax
  41560b:	call   0xfdab56e5
  415610:	cmp    ch,BYTE PTR [ebx]
  415612:	mov    ebx,0xc153d7e9
  415617:	pop    ebp
  415618:	mov    ebp,DWORD PTR [ebx-0x46]
  41561b:	ret    0xa0cd
  41561e:	out    dx,eax
  41561f:	(bad)  
  415620:	lods   al,BYTE PTR cs:[esi]
  415622:	shr    al,cl
  415624:	adc    esp,DWORD PTR [ecx+0x6c]
  415627:	inc    DWORD PTR [esi-0x46ab7258]
  41562d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41562e:	daa    
  41562f:	xchg   edi,edx
  415631:	sub    ecx,DWORD PTR [eax+0x24]
  415634:	fstp   QWORD PTR [eax]
  415636:	or     al,0xc2
  415638:	frstor [eax+0x22f18938]
  41563e:	mov    al,0xc
  415640:	xchg   dh,bh
  415642:	cmp    BYTE PTR [edx+0x2d],ch
  415645:	stc    
  415646:	or     edi,ebp
  415648:	add    BYTE PTR [edi],dh
  41564a:	retf   0xd541
  41564d:	daa    
  41564e:	pushf  
  41564f:	mov    DWORD PTR [esp+eax*4-0x1d388809],ebx
  415656:	add    ecx,DWORD PTR [ecx+0xd9a2ea5]
  41565c:	pop    ecx
  41565d:	lsl    eax,WORD PTR [eax]
  415660:	aad    0x1f
  415662:	pop    ds
  415663:	or     BYTE PTR [eax],al
  415665:	add    ch,dl
  415667:	sbb    DWORD PTR [edx],eax
  415669:	pop    si
  41566b:	lods   al,BYTE PTR ds:[esi]
  41566c:	daa    
  41566d:	xchg   DWORD PTR [ebx],ebx
  41566f:	stos   DWORD PTR es:[edi],eax
  415670:	adc    dh,BYTE PTR [ebp+0x43c7af12]
  415676:	jb     0x41561b
  415678:	daa    
  415679:	xchg   DWORD PTR [ebx],edx
  41567b:	cdq    
  41567c:	adc    al,BYTE PTR [esi+edx*1-0x35fffe5e]
  415683:	sbb    edx,DWORD PTR [edx+0x8]
  415686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415687:	or     DWORD PTR [eax+0xeff4836],edi
  41568d:	hlt    
  41568e:	add    cl,BYTE PTR [edx]
  415690:	ins    BYTE PTR es:[edi],dx
  415691:	(bad)
  415695:	sub    edi,ebp
  415697:	or     ah,bh
  415699:	add    ebp,DWORD PTR [eax]
  41569b:	pop    ds
  41569c:	out    dx,eax
  41569d:	nop
  41569e:	fwait
  41569f:	std    
  4156a0:	xchg   esi,eax
  4156a1:	nop
  4156a2:	xchg   esi,eax
  4156a3:	add    DWORD PTR [edi-0x565202ca],edx
  4156a9:	mov    ds:0xd6e9a108,al
  4156ae:	inc    edx
  4156af:	sub    DWORD PTR ds:0xdeca57f4,0xffffff87
  4156b6:	loope  0x4156c2
  4156b8:	out    0x3,eax
  4156ba:	pop    esp
  4156bb:	pop    ss
  4156bc:	out    dx,eax
  4156bd:	sub    DWORD PTR [ebp+ecx*2-0x1b],ecx
  4156c1:	adc    ah,BYTE PTR [eax]
  4156c3:	inc    esp
  4156c4:	fild   QWORD PTR [ecx]
  4156c6:	xchg   edx,eax
  4156c7:	mov    eax,ds:0x8bea
  4156cc:	adc    ebx,edx
  4156ce:	in     eax,dx
  4156cf:	pop    ecx
  4156d0:	xchg   ebp,eax
  4156d1:	add    al,0x46
  4156d3:	les    edx,FWORD PTR [edx+0x4b]
  4156d6:	fld    TBYTE PTR [ebx-0x2c]
  4156d9:	sbb    eax,0x95b586ed
  4156de:	push   0xffffffc3
  4156e0:	fld    DWORD PTR [edx+0x4c4f102d]
  4156e6:	fst    QWORD PTR [eax+0x66eea33]
  4156ec:	pop    edi
  4156ed:	dec    esp
  4156ee:	in     eax,dx
  4156ef:	mov    ebx,DWORD PTR [ebx]
  4156f1:	jmp    0x41571f
  4156f3:	dec    ecx
  4156f4:	mov    bh,0x9
  4156f6:	lds    eax,FWORD PTR [esi+0x12ef03f0]
  4156fc:	inc    esi
  4156fd:	leave  
  4156fe:	outs   dx,DWORD PTR ds:[esi]
  4156ff:	dec    ecx
  415700:	mov    ah,0xd5
  415702:	jmp    edi
  415704:	mov    ebp,0x9f760d1f
  415709:	add    eax,DWORD PTR [ecx+0x15174621]
  41570f:	lea    eax,es:[ecx]
  415712:	add    BYTE PTR [ebp-0x5b3af62a],dl
  415718:	dec    esi
  415719:	test   eax,0xced6e901
  41571e:	inc    ebx
  41571f:	cmc    
  415720:	aam    0x9
  415722:	add    cl,ch
  415724:	imul   ebp,edi,0xffffff80
  415727:	icebp  
  415728:	not    DWORD PTR [esi]
  41572a:	adc    ebp,DWORD PTR [esi-0x16fffe6e]
  415730:	add    BYTE PTR [eax],al
  415732:	xor    eax,0x592cc509
  415737:	or     ebp,edi
  415739:	jmp    0xbd852614
  41573e:	xor    al,0x9
  415740:	add    cl,ch
  415742:	push   ebx
  415743:	dec    ebx
  415744:	sub    bl,BYTE PTR [ecx]
  415746:	dec    edx
  415747:	dec    ebx
  415748:	and    al,0x19
  41574a:	pusha  
  41574b:	inc    edi
  41574c:	or     BYTE PTR [ecx-0x61026b73],dl
  415752:	push   edx
  415753:	dec    esp
  415754:	sub    DWORD PTR [ecx],edi
  415756:	dec    edx
  415757:	dec    esp
  415758:	cmp    DWORD PTR es:[eax+0x47],esp
  41575c:	clc    
  41575d:	xchg   ecx,eax
  41575e:	popf   
  41575f:	xchg   esp,eax
  415760:	std    
  415761:	jle    0x4157b5
  415763:	dec    esp
  415764:	sub    al,0x19
  415766:	dec    edx
  415767:	dec    esp
  415768:	sub    BYTE PTR [ecx],bl
  41576a:	pusha  
  41576b:	inc    edi
  41576c:	hlt    
  41576d:	push   ecx
  41576e:	sub    eax,0xb35efd94
  415773:	stc    
  415774:	push   eax
  415775:	pavgw  mm1,QWORD PTR fs:[edi+0x41]
  41577a:	or     al,0x52
  41577c:	std    
  41577d:	add    BYTE PTR [ebx],dl
  41577f:	test   BYTE PTR [esi+0x30],al
  415782:	in     al,0x3f
  415784:	cmp    eax,0xa3fdb0f
  415789:	psrlq  mm7,QWORD PTR [edi]
  41578c:	or     al,0xc6
  41578e:	jp     0x41574b
  415790:	inc    BYTE PTR [esp+ebp*8+0xe800f1]
  415797:	add    BYTE PTR [ecx],dl
  415799:	das    
  41579a:	sti    
  41579b:	push   DWORD PTR [ebp-0x37ae7c1]
  4157a1:	icebp  
  4157a2:	adc    eax,0xfc96aaff
  4157a7:	and    ebx,DWORD PTR ss:[ebp+ebx*8-0x7af8c3f0]
  4157af:	inc    esi
  4157b0:	clc    
  4157b1:	mov    eax,eax
  4157b3:	je     0x4157ad
  4157b5:	rol    BYTE PTR [ecx-0x1],0xed
  4157b9:	shl    edi,1
  4157bb:	cmp    eax,0x80fb6a44
  4157c0:	xchg   ecx,eax
  4157c1:	push   0x69fd7500
  4157c6:	jbe    0x4157d8
  4157c8:	and    ebx,DWORD PTR [ecx+eax*8+0x560dfc10]
  4157cf:	call   0x3c8678
  4157d4:	lahf   
  4157d5:	jo     0x41575e
  4157d7:	mov    BYTE PTR [ebx],0x48
  4157da:	push   edi
  4157db:	leave  
  4157dc:	jle    0x4157e8
  4157de:	add    bh,bh
  4157e0:	stos   BYTE PTR es:[edi],al
  4157e1:	or     bh,bl
  4157e3:	and    ebx,DWORD PTR ss:[ebp+ebx*8-0x4f213f0]
  4157eb:	jbe    0x415799
  4157ed:	imul   edx,DWORD PTR [ecx],0x468cc4
  4157f3:	jmp    FWORD PTR [edx-0x2afe1a6e]
  4157f9:	js     0x41579b
  4157fb:	std    
  4157fc:	add    BYTE PTR [eax],al
  4157fe:	jb     0x4157ba
  415800:	stc    
  415801:	out    0x6c,eax
  415803:	adc    esp,DWORD PTR [eax+0x455a62fd]
  415809:	call   0xfde16b72
  41580e:	stos   DWORD PTR es:[edi],eax
  41580f:	dec    eax
  415810:	lods   al,BYTE PTR ds:[esi]
  415811:	mov    ch,0x4a
  415813:	jmp    0x4157d8
  415815:	push   ebx
  415816:	dec    esi
  415817:	add    al,0x32
  415819:	push   esi
  41581a:	cmp    dh,BYTE PTR [ebp+0xd]
  41581d:	std    
  41581e:	enter  0xf2ec,0x3f
  415822:	aad    0x17
  415824:	xchg   ecx,eax
  415825:	and    edx,ebp
  415827:	mov    al,ds:0xea4e00a0
  41582c:	shl    edi,0xe5
  41582f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415830:	ret    0x1b89
  415833:	and    DWORD PTR [ebx+0x1a00200],esp
  415839:	mov    DWORD PTR [ebx],esp
  41583b:	popa   
  41583c:	mov    ds:0xc366de10,al
  415841:	call   0x8e4ba23
  415846:	into   
  415847:	popa   
  415848:	mov    eax,DWORD PTR [ebx-0x27]
  41584b:	inc    ebp
  41584c:	or     BYTE PTR [ebx-0x2cba0e8],cl
  415852:	inc    eax
  415853:	fwait
  415854:	test   eax,0x1a3047d
  415859:	test   BYTE PTR [ebp-0x547d0411],dl
  41585f:	div    ebx
  415861:	push   ebp
  415862:	add    BYTE PTR [eax],al
  415864:	stos   BYTE PTR es:[edi],al
  415865:	mov    cs,WORD PTR ds:0xa99b28fd
  41586b:	imul   esp,esp,0x958401a2
  415871:	xchg   edi,eax
  415872:	add    eax,0x5209d4b0
  415877:	add    al,bh
  415879:	leave  
  41587a:	mov    ebp,0xe70297cc
  41587f:	cmp    BYTE PTR [esi+ebx*4+0x68],bl
  415883:	mov    al,0xe9
  415885:	or     esp,edi
  415887:	add    eax,DWORD PTR [eax*4+0x39030f9c]
  41588e:	bound  esp,QWORD PTR [ecx]
  415890:	frstor [ebx]
  415892:	fld    TBYTE PTR [ebx]
  415894:	lods   eax,DWORD PTR ds:[esi]
  415895:	pop    ss
  415896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415897:	add    ebp,DWORD PTR [eax+0x3ad4dca1]
  41589d:	xchg   ecx,eax
  41589e:	imul   eax,esp,0xffffffe0
  4158a1:	test   DWORD PTR [esi],ecx
  4158a3:	pop    es
  4158a4:	aad    0x9
  4158a6:	pop    DWORD PTR [ebx-0x58]
  4158a9:	hlt    
  4158aa:	out    0x29,al
  4158ac:	leave  
  4158ad:	jle    0x41585b
  4158af:	retf   
  4158b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b1:	mov    eax,ds:0x910ad386
  4158b6:	imul   eax,ebx,0xffffffd0
  4158b9:	test   esi,eax
  4158bb:	push   es
  4158bc:	aad    0x9
  4158be:	inc    ecx
  4158bf:	or     BYTE PTR [ebp+0x1d505c39],cl
  4158c5:	cmp    eax,DWORD PTR [eax+0x6b00002b]
  4158cb:	dec    ecx
  4158cc:	out    0xab,eax
  4158ce:	int3   
  4158cf:	imul   esi,DWORD PTR [esi-0x2136a962],0xe7089e88
  4158d9:	add    ecx,DWORD PTR [ebp+0x46]
  4158dc:	scas   al,BYTE PTR es:[edi]
  4158dd:	mov    edx,DWORD PTR [esi]
  4158df:	mov    ebp,0x7eb02064
  4158e4:	and    al,0xd0
  4158e6:	mov    ebp,0xd503eecc
  4158eb:	jle    0x4158e9
  4158ed:	test   al,0x4e
  4158ef:	inc    esi
  4158f0:	add    BYTE PTR [ecx-0x16faaec2],bl
  4158f6:	(bad)  
  4158f7:	(bad)  
  4158f8:	mov    ch,0xac
  4158fa:	sub    eax,0x5bacb5fe
  4158ff:	daa    
  415900:	mov    edi,0x927de49
  415905:	sub    bl,bl
  415907:	push   esi
  415908:	shr    ah,0x35
  41590b:	(bad)  
  41590c:	std    
  41590d:	ds stc 
  41590f:	or     DWORD PTR [ecx],eax
  415911:	jmp    0x287a80ec
  415916:	fild   DWORD PTR [esi+0x9d6ee8c]
  41591c:	mov    edx,esi
  41591e:	push   edi
  41591f:	sub    al,0xe8
  415921:	jmp    0xa4cce62d
  415926:	jle    0x41596e
  415928:	push   eax
  415929:	je     0x415908
  41592b:	popf   
  41592c:	xchg   DWORD PTR [eax+eax*1+0x0],edi
  415930:	push   0xffffff8e
  415932:	push   ecx
  415933:	in     eax,dx
  415934:	pop    edi
  415935:	dec    esp
  415936:	in     al,dx
  415937:	bound  ebx,QWORD PTR [esi]
  415939:	adc    al,0xa8
  41593c:	das    
  41593d:	stc    
  41593e:	jle    0x415908
  415940:	ror    DWORD PTR [ecx],1
  415942:	std    
  415943:	jmp    0xb9cb1d25
  415948:	mov    ecx,DWORD PTR [ecx]
  41594a:	std    
  41594b:	jmp    0xa9174426
  415950:	xor    ecx,edi
  415952:	or     BYTE PTR [ecx+0x248b05ff],bl
  415958:	jno    0x4159a9
  41595a:	out    0xf1,eax
  41595c:	xchg   edi,eax
  41595d:	lods   al,BYTE PTR ds:[esi]
  41595e:	or     BYTE PTR [ecx],bh
  415960:	pop    eax
  415961:	sbb    ecx,DWORD PTR [eax]
  415963:	loop   0x415901
  415965:	xchg   DWORD PTR [ebx-0x77],ecx
  415968:	jns    0x415983
  41596a:	xor    BYTE PTR [eax],al
  41596c:	lods   al,BYTE PTR ds:[esi]
  41596d:	or     eax,DWORD PTR [eax+eax*8+0x4d7f07a1]
  415974:	pop    eax
  415975:	ins    DWORD PTR es:[edi],dx
  415976:	xchg   DWORD PTR [ebp+0x8],eax
  415979:	mov    eax,ebp
  41597b:	add    BYTE PTR [ebx+0x6c071e87],cl
  415981:	or     ecx,DWORD PTR [eax+0xf]
  415984:	add    DWORD PTR [esp+eax*1+0x3fe37c00],ebp
  41598b:	ja     0x415a04
  41598d:	or     edx,DWORD PTR [ebx-0x75]
  415990:	sbb    DWORD PTR [ebx],eax
  415992:	mov    DWORD PTR [ebp+0x0],eax
  415995:	add    BYTE PTR [ebx],cl
  415997:	(bad)  
  415998:	out    0x88,eax
  41599a:	dec    ebx
  41599b:	or     eax,DWORD PTR [eax]
  41599d:	test   ah,ch
  41599f:	cld    
  4159a0:	or     DWORD PTR [eax],0x33
  4159a3:	or     eax,DWORD PTR [eax]
  4159a5:	or     BYTE PTR [ecx+0x6e],0x0
  4159a9:	mov    esi,DWORD PTR [edi]
  4159ab:	(bad)  
  4159ac:	nop
  4159ad:	ret    0xd8db
  4159b0:	pop    es
  4159b1:	test   ah,ch
  4159b3:	cld    
  4159b4:	xor    esp,0x2
  4159b7:	or     eax,DWORD PTR [eax]
  4159b9:	mov    esi,edi
  4159bb:	mov    DWORD PTR [ecx-0x20],esp
  4159be:	in     al,dx
  4159bf:	jg     0x415a02
  4159c1:	mov    BYTE PTR [esi+edi*2-0x25f41faf],bh
  4159c8:	or     ecx,DWORD PTR [ebx+0xfc58834]
  4159ce:	jo     0x415a20
  4159d0:	push   es
  4159d1:	add    ah,ch
  4159d3:	ins    DWORD PTR es:[edi],dx
  4159d4:	jno    0x4159e6
  4159d6:	cmp    DWORD PTR [eax-0x78],ecx
  4159d9:	call   0x3cc3df
  4159de:	inc    edi
  4159df:	push   ebx
  4159e0:	sbb    ebx,0x6c186ab
  4159e6:	aad    0xa0
  4159e8:	add    ebp,edi
  4159ea:	and    BYTE PTR [ecx-0x4d66ec64],al
  4159f0:	inc    ecx
  4159f1:	add    dl,cl
  4159f3:	(bad)  
  4159f4:	inc    edi
  4159f5:	pop    es
  4159f6:	pop    esi
  4159f7:	sbb    BYTE PTR [ebx],ah
  4159f9:	mov    DWORD PTR [eax],eax
  4159fb:	add    BYTE PTR [esi],dl
  4159fd:	test   eax,0x9875bf23
  415a02:	and    ecx,DWORD PTR [ecx]
  415a04:	xchg   esp,eax
  415a05:	(bad)  
  415a06:	mov    al,BYTE PTR [ebx+0x51]
  415a09:	mov    esi,0xafdf4188
  415a0e:	push   ebx
  415a0f:	dec    ecx
  415a10:	into   
  415a11:	mov    esi,0xc6cde0c2
  415a16:	or     BYTE PTR [edi-0x61b9d645],bh
  415a1c:	pop    esi
  415a1d:	out    0xe5,eax
  415a1f:	inc    DWORD PTR [edx-0x19]
  415a22:	add    BYTE PTR [ecx+0x10a9e10a],cl
  415a28:	fsubrp st(1),st
  415a2a:	xchg   ebp,ecx
  415a2c:	adc    al,0x1
  415a2e:	icebp  
  415a2f:	mov    BYTE PTR [edx],cl
  415a31:	ret    
  415a32:	mov    bl,0x9
  415a34:	psraw  mm5,QWORD PTR [eax+0x9011408]
  415a3b:	or     DWORD PTR [ecx+ebp*1],edx
  415a3e:	inc    esi
  415a3f:	mov    al,0x6f
  415a41:	nop
  415a42:	mov    BYTE PTR [ecx-0x4b],al
  415a45:	rol    BYTE PTR [esi-0x542fcabd],1
  415a4b:	cli    
  415a4c:	and    BYTE PTR [edi-0x22eb9967],bh
  415a52:	pop    edi
  415a53:	or     BYTE PTR [ebx+0x61],dh
  415a56:	aas    
  415a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a58:	fnstsw WORD PTR [ebx+eax*8]
  415a5b:	inc    ebx
  415a5c:	jge    0x415a09
  415a5e:	sub    ebx,DWORD PTR [eax]
  415a60:	add    BYTE PTR [eax],al
  415a62:	push   eax
  415a63:	or     ch,BYTE PTR [eax+edi*2]
  415a66:	and    eax,0xbd0c148d
  415a6b:	adc    dh,al
  415a6d:	add    edx,ebp
  415a6f:	test   DWORD PTR [edi-0x131da6f5],esp
  415a75:	add    edx,ebp
  415a77:	xchg   BYTE PTR [esi+0x10],bh
  415a7a:	jmp    0x7552d0b3
  415a7f:	(bad)  
  415a80:	hlt    
  415a81:	or     ebp,DWORD PTR [ebp+0x28]
  415a84:	push   ss
  415a85:	add    al,0xd5
  415a87:	test   DWORD PTR [edi],esp
  415a89:	or     ebx,DWORD PTR [ecx-0x6]
  415a8c:	in     al,dx
  415a8d:	add    edx,ebp
  415a8f:	or     BYTE PTR [esp+edi*8],0xc8
  415a93:	dec    ecx
  415a94:	out    0x5b,eax
  415a96:	pop    eax
  415a97:	(bad)  
  415a98:	out    0x3,eax
  415a9a:	xchg   ebx,eax
  415a9b:	(bad)  
  415a9c:	out    0x3,eax
  415a9e:	aad    0x80
  415aa0:	pop    ds
  415aa1:	xor    bh,BYTE PTR [ebx+0x4ebeac82]
  415aa7:	xchg   DWORD PTR [edi-0x66],ebp
  415aaa:	xor    BYTE PTR [ebp-0x3c7afc7f],cl
  415ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab1:	mov    ebx,0x497023d5
  415ab6:	add    cl,BYTE PTR [ebp-0x6c3bcdea]
  415abc:	sbb    DWORD PTR fs:[ebp-0x71],0x39ab9aee
  415ac4:	out    0xb2,al
  415ac6:	add    BYTE PTR [eax],al
  415ac8:	push   esp
  415ac9:	(bad)  
  415aca:	dec    DWORD PTR [esi+eiz*2-0x6ef9f6f]
  415ad1:	mov    BYTE PTR [esp+ebx*4-0x2b],cl
  415ad5:	cld    
  415ad6:	ins    BYTE PTR es:[edi],dx
  415ad7:	mov    esp,0x2de709d5
  415adc:	aad    0x21
  415ade:	add    BYTE PTR ds:0x5c0009d0,al
  415ae4:	adc    eax,0x96da5002
  415ae9:	mov    eax,ds:0x9d6d829
  415aee:	adc    DWORD PTR [ecx+0x4f82fe4f],0x860009d6
  415af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af9:	mov    WORD PTR [ebx],ss
  415afb:	sub    ecx,ebx
  415afd:	ror    BYTE PTR [ebx-0x32],1
  415b00:	(bad)  
  415b01:	or     DWORD PTR ds:0x85164,ecx
  415b07:	jmp    0xe9556b5f
  415b0c:	loop   0x415b10
  415b0e:	push   0x56
  415b10:	dec    edi
  415b11:	sbb    BYTE PTR [esi+ecx*2],dl
  415b14:	mov    al,gs:0x82d6a912
  415b1a:	inc    ebx
  415b1b:	in     eax,dx
  415b1c:	arpl   WORD PTR [ecx],ax
  415b1e:	std    
  415b1f:	cdq    
  415b20:	inc    esi
  415b21:	cmp    DWORD PTR [ebx+0x31],0xe910285b
  415b28:	push   ebp
  415b29:	mov    ?,WORD PTR [eax+ebx*4+0x0]
  415b2d:	add    BYTE PTR [ebx+0x28],bl
  415b30:	call   0x7d0571e
  415b35:	bound  edx,QWORD PTR [ebp+0x6eb4899d]
  415b3b:	xor    BYTE PTR [eax+ebp*8],0xb4
  415b3f:	mov    bh,BYTE PTR [esi-0x14]
  415b42:	(bad)  
  415b43:	adc    ecx,DWORD PTR [ecx-0x79]
  415b46:	pop    ebx
  415b47:	or     eax,DWORD PTR ds:0x5645e4e9
  415b4d:	fsubrp st(2),st
  415b4f:	add    DWORD PTR [ecx-0xa91c656],ecx
  415b55:	into   
  415b56:	cmp    al,0x8a
  415b58:	clc    
  415b59:	add    BYTE PTR [ebx],dl
  415b5b:	add    al,BYTE PTR [ebx+ebx*1-0x7afff847]
  415b62:	jl     0x415b65
  415b64:	test   BYTE PTR [ebx],dl
  415b66:	mov    ecx,0x74830007
  415b6b:	pop    es
  415b6c:	jno    0x415b91
  415b6e:	daa    
  415b6f:	retf   
  415b70:	cmovo  eax,DWORD PTR [edi-0x618a0834]
  415b77:	jb     0x415bc2
  415b79:	clc    
  415b7a:	das    
  415b7b:	popa   
  415b7c:	add    eax,0x7183438b
  415b81:	in     al,dx
  415b82:	push   esp
  415b83:	ret    
  415b84:	scas   eax,DWORD PTR es:[edi]
  415b85:	push   ebx
  415b87:	pop    esp
  415b88:	or     BYTE PTR [edx-0x7b],ch
  415b8b:	(bad)  
  415b8d:	jp     0x415bd8
  415b8f:	jno    0x415b8c
  415b91:	inc    DWORD PTR [eax]
  415b93:	add    BYTE PTR [ecx],bh
  415b95:	xchg   edi,eax
  415b96:	mov    BYTE PTR [ebp+0x5c],al
  415b99:	xchg   BYTE PTR [ecx-0x18],al
  415b9c:	gs scas al,BYTE PTR es:[edi]
  415b9e:	inc    edx
  415b9f:	clc    
  415ba0:	mov    ds,WORD PTR [ecx]
  415ba2:	jg     0x415c21
  415ba4:	sub    BYTE PTR [edi],al
  415ba6:	or     eax,DWORD PTR [edi+edx*8-0xc000490]
  415bad:	cli    
  415bae:	adc    edi,edi
  415bb0:	sub    DWORD PTR [ebx+0x603c400f],ebp
  415bb6:	sbb    edi,edi
  415bb8:	shl    DWORD PTR [eax-0x79],cl
  415bbb:	jge    0x415be1
  415bbd:	fistp  QWORD PTR [edi]
  415bbf:	ja     0x415bb8
  415bc1:	push   es
  415bc2:	push   0x1
  415bc4:	jno    0x415b90
  415bc6:	cli    
  415bc7:	push   eax
  415bc8:	aam    0xe7
  415bca:	sub    BYTE PTR [eax],al
  415bcc:	in     al,dx
  415bcd:	or     al,al
  415bcf:	vmread edi,eax
  415bd2:	add    al,0x0
  415bd4:	aad    0xa0
  415bd6:	or     BYTE PTR [esi-0x177b4468],dh
  415bdc:	aad    0x93
  415bde:	jge    0x415bfc
  415be0:	fldenv [eax-0x5be2b7ff]
  415be6:	jge    0x415bab
  415be8:	xlat   BYTE PTR ds:[ebx]
  415be9:	mov    al,ds:0x1cca4801
  415bee:	out    0x1,al
  415bf0:	aad    0xa0
  415bf2:	dec    ecx
  415bf3:	or     eax,0x26551
  415bf8:	add    BYTE PTR [eax],al
  415bfa:	aad    0xe8
  415bfc:	push   es
  415bfd:	test   BYTE PTR [esi-0x60],dh
  415c00:	add    DWORD PTR [eax],eax
  415c02:	sbb    eax,0xd1907e9c
  415c07:	mov    al,ds:0x94156801
  415c0c:	cld    
  415c0d:	(bad)  
  415c0e:	in     al,dx
  415c0f:	lahf   
  415c10:	xchg   BYTE PTR [ebx+0x45],al
  415c13:	push   eax
  415c14:	test   eax,0x1a0b81b
  415c19:	test   BYTE PTR [ebp-0x2e878255],dl
  415c1f:	mov    al,ds:0x53956801
  415c24:	cld    
  415c25:	(bad)  
  415c26:	mov    esp,0x1943869c
  415c2b:	jo     0x415bd6
  415c2d:	add    ebp,eax
  415c2f:	mov    al,ds:0x9b158401
  415c34:	jge    0x415c96
  415c36:	shl    DWORD PTR [eax-0x1b6f76ff],1
  415c3c:	mov    edi,DWORD PTR [edi-0x2fe5f10]
  415c42:	aad    0x17
  415c44:	mov    dl,0xbf
  415c46:	jmp    FWORD PTR [edi-0xeb13df4]
  415c4c:	shl    edx,0xe5
  415c4f:	or     DWORD PTR [eax-0x5b],ebp
  415c52:	aad    0x8a
  415c54:	out    0x3,eax
  415c56:	fdivr  QWORD PTR [eax-0x37325358]
  415c5c:	leave  
  415c5d:	or     al,0x0
  415c5f:	add    ah,cl
  415c61:	(bad)  
  415c62:	jo     0x415ca5
  415c64:	cdq    
  415c65:	retf   0x7fed
  415c68:	repnz or eax,0x4ad03e7
  415c6e:	jp     0x415c07
  415c70:	mov    eax,0xab819795
  415c75:	sbb    DWORD PTR [ebx-0x6],esp
  415c78:	(bad)  
  415c79:	or     edi,esp
  415c7b:	sub    edx,DWORD PTR ds:0x9803f201
  415c81:	jmp    FWORD PTR [edx-0x344582d2]
  415c87:	add    edx,ebp
  415c89:	lea    esp,[edi-0x1ceaa6f9]
  415c8f:	add    edx,ebp
  415c91:	xchg   esp,eax
  415c92:	lods   al,BYTE PTR ds:[esi]
  415c93:	pop    es
  415c94:	pop    esp
  415c95:	fbld   TBYTE PTR [edx]
  415c97:	mov    ebx,ebp
  415c99:	fist   WORD PTR [ebp+0x34]
  415c9c:	rcr    edi,0x3e
  415c9f:	sbb    esp,DWORD PTR [ecx+ecx*4]
  415ca2:	inc    esi
  415ca3:	lods   eax,DWORD PTR ds:[esi]
  415ca4:	push   es
  415ca5:	mov    BYTE PTR [esi],bh
  415ca7:	xchg   edi,eax
  415ca8:	pop    esp
  415ca9:	pop    es
  415caa:	fild   QWORD PTR [ebx]
  415cac:	xchg   ebp,eax
  415cad:	add    dl,dl
  415caf:	add    ebp,DWORD PTR [edi+0x2541740e]
  415cb5:	fimul  DWORD PTR [esi]
  415cb7:	push   ss
  415cb8:	stc    
  415cb9:	or     edi,esp
  415cbb:	jg     0x415cd2
  415cbd:	sbb    DWORD PTR [ebx-0x43],esp
  415cc0:	aam    0x9
  415cc2:	out    0x1d,eax
  415cc4:	add    BYTE PTR [eax],al
  415cc6:	push   edx
  415cc7:	iret   
  415cc8:	test   DWORD PTR [ebx],0xac004a73
  415cce:	adc    ch,BYTE PTR [bp+si-0x2a]
  415cd2:	daa    
  415cd3:	xchg   BYTE PTR [esi+0xa56e9],bh
  415cd9:	fsubrp st(5),st
  415cdb:	xor    al,0x13
  415cdd:	sub    ecx,ebx
  415cdf:	mov    eax,es
  415ce1:	inc    edi
  415ce2:	dec    esi
  415ce3:	int    0xd6
  415ce5:	test   BYTE PTR [ebp-0x33],0x10
  415ce9:	inc    edi
  415cea:	test   al,0xcb
  415cec:	out    dx,al
  415ced:	cmp    al,0xcf
  415cef:	out    dx,eax
  415cf0:	mov    BYTE PTR [esi+edi*2],ah
  415cf3:	out    dx,eax
  415cf4:	ss sub al,0x46
  415cf7:	std    
  415cf8:	add    bl,BYTE PTR [edi-0x2f]
  415cfb:	mov    DWORD PTR [eax],eax
  415cfd:	jmp    0x6419294e
  415d02:	or     eax,0x56998a7a
  415d07:	push   0x883468ff
  415d0c:	aaa    
  415d0d:	mov    ds:0xa0842fd2,eax
  415d12:	retf   0x3118
  415d15:	xor    BYTE PTR [esi-0x511ef2d],cl
  415d1b:	enter  0x6a47,0x39
  415d1f:	jno    0xdb4314d
  415d25:	cli    
  415d26:	and    DWORD PTR [ecx+0x4b],eax
  415d29:	fiadd  DWORD PTR [eax]
  415d2b:	add    bl,dl
  415d2d:	popf   
  415d2e:	mov    edi,0xc6857a0
  415d33:	push   0x11
  415d35:	or     eax,0xd45c1809
  415d3a:	out    dx,eax
  415d3b:	jae    0x415da3
  415d3d:	mov    edi,ebx
  415d3f:	in     eax,dx
  415d40:	push   esi
  415d41:	imul   eax,DWORD PTR [ebx+edx*8],0xc
  415d45:	std    
  415d46:	and    eax,0x74558000
  415d4b:	adc    DWORD PTR [edi+0x55],ecx
  415d4e:	cmp    BYTE PTR [ebp+0x1f],cl
  415d51:	sete   cl
  415d54:	xor    eax,0x7ffadd8b
  415d59:	dec    esp
  415d5a:	or     bl,ch
  415d5c:	sti    
  415d5d:	pop    eax
  415d5e:	(bad)  
  415d5f:	cmp    BYTE PTR [ecx+0x2d940c7a],bh
  415d65:	aam    0x7e
  415d67:	loope  0x415cf9
  415d69:	mov    DWORD PTR [ebp-0x756338f0],edi
  415d6f:	dec    ebp
  415d70:	jl     0x415d00
  415d72:	fld    QWORD PTR [edx]
  415d74:	ror    BYTE PTR [ebx],1
  415d76:	cmp    cl,al
  415d78:	sar    BYTE PTR [ebp+0x30],1
  415d7b:	shl    BYTE PTR [eax],0x53
  415d7e:	or     edx,DWORD PTR [esp+ebp*2+0x4ce07ed6]
  415d85:	mov    eax,eax
  415d87:	inc    eax
  415d88:	xchg   DWORD PTR [ebx+0x160c45f6],ebx
  415d8e:	je     0x415d99
  415d90:	add    BYTE PTR [eax],al
  415d92:	(bad)  
  415d93:	and    eax,0x136cce7d
  415d98:	add    BYTE PTR [eax],al
  415d9a:	fwait
  415d9b:	xchg   ebp,eax
  415d9c:	inc    ecx
  415d9d:	lock ins BYTE PTR es:[edi],dx
  415d9f:	pop    ss
  415da0:	add    eax,0xce8af46a
  415da5:	add    BYTE PTR [ebx+ecx*1+0x0],dh
  415da9:	pop    edi
  415daa:	mov    BYTE PTR es:[edx-0x76c1f3bb],cl
  415db1:	inc    ebp
  415db2:	in     al,0x3d
  415db4:	call   0xfbde1c62
  415db9:	setae  BYTE PTR [esi-0x11]
  415dbd:	push   edi
  415dbe:	ins    BYTE PTR es:[edi],dx
  415dbf:	push   cs
  415dc0:	mov    bl,0x45
  415dc2:	aad    0x21
  415dc4:	xor    al,0x89
  415dc6:	nop
  415dc7:	mov    BYTE PTR fs:[eax],cl
  415dca:	pop    esi
  415dcb:	daa    
  415dcc:	xchg   ebx,eax
  415dcd:	push   eax
  415dce:	in     eax,dx
  415dcf:	sbb    edx,esi
  415dd1:	cli    
  415dd2:	add    al,BYTE PTR [eax-0x77328478]
  415dd8:	inc    ecx
  415dd9:	jne    0x415da9
  415ddb:	jo     0x415e04
  415ddd:	add    eax,0x50702e58
  415de2:	in     eax,dx
  415de3:	cmp    esp,edi
  415de5:	(bad)  
  415de6:	(bad)  
  415de8:	ror    BYTE PTR ds:0xffff0659,0xd5
  415def:	lock adc eax,0x6e6fd594
  415df5:	rol    BYTE PTR [eax],0x0
  415df8:	retf   0xc0fe
  415dfb:	push   eax
  415dfc:	pop    esi
  415dfd:	xor    eax,0xfb85896b
  415e02:	enter  0xacbf,0x80
  415e06:	and    dl,0xd5
  415e09:	jo     0x415d9f
  415e0b:	add    dh,bl
  415e0d:	mov    eax,ds:0x9194c888
  415e12:	icebp  
  415e13:	and    dl,ch
  415e15:	inc    DWORD PTR [eax]
  415e17:	add    dh,cl
  415e19:	test   al,0x88
  415e1b:	inc    ebx
  415e1c:	loope  0x415e4f
  415e1e:	mov    ds:0x8da9408,al
  415e23:	or     DWORD PTR [ebx+ebp*8+0x7d05fd08],eax
  415e2a:	stos   BYTE PTR es:[edi],al
  415e2b:	mov    bh,0x51
  415e2d:	iret   
  415e2e:	xchg   ebx,eax
  415e2f:	mov    eax,ecx
  415e31:	js     0x415e5c
  415e33:	inc    eax
  415e34:	retf   0x15b
  415e37:	push   0xffffffcc
  415e39:	in     eax,0x3d
  415e3b:	int3   
  415e3c:	test   DWORD PTR [ecx],ecx
  415e3e:	clzero 
  415e41:	or     edi,esp
  415e43:	jg     0x415e5a
  415e45:	push   ss
  415e46:	imul   esi,DWORD PTR [esi],0xffffffd7
  415e49:	or     edi,esp
  415e4b:	sbb    eax,0xb33cc52
  415e50:	jae    0x415e9a
  415e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e53:	(bad)  
  415e54:	int    0xef
  415e56:	daa    
  415e57:	or     dl,BYTE PTR ds:[ecx]
  415e5a:	test   edx,eax
  415e5c:	add    BYTE PTR [eax],al
  415e5e:	xchg   esi,eax
  415e5f:	pop    edx
  415e60:	out    dx,eax
  415e61:	sub    DWORD PTR [esi+0x55],0xffffffe7
  415e65:	add    al,BYTE PTR [esi+0x49]
  415e68:	sbb    bh,BYTE PTR [ebp+0x495f86a4]
  415e6e:	mov    eax,ds:0x438c3443
  415e73:	and    BYTE PTR [edx+0x49],dh
  415e76:	mov    cl,0x89
  415e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e79:	or     esi,DWORD PTR [ebx]
  415e7b:	inc    ebx
  415e7c:	pop    ds
  415e7d:	xchg   edx,eax
  415e7e:	es prefetchw (bad)
  415e80:	or     eax,0xeffdd2cd
  415e85:	dec    edx
  415e86:	push   esp
  415e87:	dec    edx
  415e88:	loopne 0x415e58
  415e8a:	pop    ds
  415e8b:	sbb    BYTE PTR [ecx],0xa0
  415e8e:	int3   
  415e8f:	push   es
  415e90:	jg     0x415eab
  415e92:	loop   0x415e18
  415e94:	and    al,0x8c
  415e96:	dec    esp
  415e97:	xlat   BYTE PTR ds:[ebx]
  415e98:	outs   dx,BYTE PTR ds:[esi]
  415e99:	pop    ds
  415e9a:	xchg   edx,eax
  415e9b:	adc    ebx,DWORD PTR [ecx+ebx*1-0x7f]
  415e9f:	jb     0x415ece
  415ea1:	push   esp
  415ea2:	push   0xd0c46385
  415ea7:	lea    edx,[ebp+0x5]
  415eaa:	aad    0x9
  415eac:	ret    0xda92
  415eaf:	or     ah,al
  415eb1:	lahf   
  415eb2:	mov    edi,0x11496c12
  415eb7:	(bad)  
  415eb9:	popf   
  415eba:	pop    esi
  415ebb:	mov    al,0xaf
  415ebd:	cs inc esi
  415ebf:	ins    DWORD PTR es:[edi],dx
  415ec0:	sub    BYTE PTR ds:0x87460000,ah
  415ec6:	push   0x22bfa9
  415ecb:	adc    ecx,0xffffff86
  415ece:	jae    0x415eb1
  415ed0:	outs   dx,BYTE PTR ds:[esi]
  415ed1:	or     ebp,DWORD PTR [ecx]
  415ed3:	jmp    0xef01ecae
  415ed8:	pop    edx
  415ed9:	pop    edx
  415eda:	(bad)  
  415edb:	call   0xe1bcf1b6
  415ee0:	into   
  415ee1:	leave  
  415ee2:	je     0x415ee6
  415ee4:	shr    edi,1
  415ee6:	add    DWORD PTR [ebp+ecx*4+0x6d],ebp
  415eea:	push   eax
  415eeb:	shr    DWORD PTR [eax+0x5ae9002f],0x49
  415ef2:	or     eax,0xfd852d6d
  415ef7:	jmp    0xcd8d1dd3
  415efc:	push   ebx
  415efd:	jmp    0xa623:0xc533e94b
  415f04:	(bad)  
  415f05:	or     DWORD PTR [eax],eax
  415f07:	test   al,0x76
  415f09:	adc    DWORD PTR [edi-0x40ee6180],edi
  415f0f:	pop    es
  415f10:	adc    bl,cl
  415f12:	inc    edi
  415f13:	subps  xmm1,XMMWORD PTR [ecx+0xd]
  415f17:	gs push esp
  415f19:	or     DWORD PTR [eax],eax
  415f1b:	jmp    0xa93a1df7
  415f20:	aas    
  415f21:	pop    es
  415f22:	mov    ebx,edx
  415f24:	adc    dl,BYTE PTR [ebx+0x51cd]
  415f2a:	sbb    DWORD PTR [edx+0x495256fd],edi
  415f30:	or     eax,0xfd84e165
  415f35:	add    BYTE PTR [eax+eiz*1],bh
  415f38:	inc    eax
  415f39:	ja     0x415f72
  415f3b:	or     BYTE PTR [ebx-0x1],dl
  415f3e:	cmp    al,BYTE PTR [ebx]
  415f40:	jns    0x415f4a
  415f42:	xchg   esp,eax
  415f43:	adc    ch,BYTE PTR [edx]
  415f45:	add    BYTE PTR [esp+ecx*4],bh
  415f48:	ror    BYTE PTR [edi],0xb8
  415f4b:	sub    eax,0x8b2cfffd
  415f50:	popa   
  415f51:	adc    ah,bh
  415f53:	pop    edx
  415f54:	mov    ebp,0x96fcba
  415f59:	add    BYTE PTR [edx+0x53],bl
  415f5c:	inc    eax
  415f5d:	dec    eax
  415f5e:	jg     0x415f9e
  415f60:	xchg   DWORD PTR [esi],eax
  415f62:	adc    ebx,edi
  415f64:	dec    eax
  415f65:	adc    BYTE PTR ds:0xb18902a8,bh
  415f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f6c:	inc    edi
  415f6e:	ja     0x415f78
  415f70:	xchg   eax,esi
  415f72:	jge    0x415f24
  415f74:	adc    BYTE PTR [ebx+0xbf76d94],cl
  415f7a:	mov    ecx,DWORD PTR [ecx]
  415f7c:	mov    dh,0x79
  415f7e:	scas   eax,DWORD PTR es:[edi]
  415f7f:	dec    eax
  415f80:	out    0x8,al
  415f82:	jge    0x415f2a
  415f84:	or     BYTE PTR [ebx],cl
  415f86:	dec    ebx
  415f87:	ins    DWORD PTR es:[edi],dx
  415f88:	mov    edi,0x2cff3c0b
  415f8d:	mov    eax,DWORD PTR [eax]
  415f8f:	add    bh,ch
  415f91:	rol    DWORD PTR [esi+0x1245475],1
  415f97:	pop    ecx
  415f98:	xchg   ebp,eax
  415f99:	add    DWORD PTR [ebx],0x75
  415f9c:	outs   dx,DWORD PTR ds:[esi]
  415f9d:	add    BYTE PTR [edi+0x4c],al
  415fa0:	add    ecx,ebx
  415fa2:	pcmpgtd mm6,mm7
  415fa5:	inc    edx
  415fa6:	adc    BYTE PTR [esi-0x49],ah
  415fa9:	inc    esp
  415faa:	dec    eax
  415fab:	jb     0x415ff8
  415fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fae:	add    DWORD PTR [edx+0x9070d5],edi
  415fb4:	aad    0xe7
  415fb6:	inc    edx
  415fb7:	dec    esp
  415fb8:	pop    esi
  415fb9:	cmp    ecx,eax
  415fbb:	(bad)  
  415fbd:	not    DWORD PTR [ebx-0x4097b8df]
  415fc3:	mov    DWORD PTR ds:0xf608a232,esp
  415fc9:	push   ds
  415fca:	push   DWORD PTR [ebp-0x203d4c7a]
  415fd0:	int    0x67
  415fd2:	mov    edi,0x3aea1f09
  415fd7:	push   eax
  415fd8:	push   esi
  415fd9:	or     DWORD PTR ds:0xaefb073,eax
  415fdf:	sbb    al,0xd5
  415fe1:	imul   eax,DWORD PTR [esi-0x6f8c11f5],0x68
  415fe8:	shl    DWORD PTR [ecx+eax*1+0x0],1
  415fec:	outs   dx,DWORD PTR ds:[esi]
  415fed:	js     0x415f7f
  415fef:	xor    ebx,DWORD PTR [ecx]
  415ff1:	mov    bl,0x44
  415ff3:	add    BYTE PTR [eax],al
  415ff5:	add    dl,dl
  415ff7:	jge    0x416002
  415ff9:	adc    dl,BYTE PTR ds:0xe1417a71
  415fff:	in     eax,dx
  416000:	ror    BYTE PTR ds:0xfd8b4b50,0xb2
  416007:	dec    ecx
  416008:	pop    edx
  416009:	add    ch,dl
  41600b:	jo     0x415f9d
  41600d:	jno    0x415fd0
  41600f:	cwde   
  416010:	in     al,0xaf
  416012:	call   0x9a70:0xf161849b
  416019:	xlat   BYTE PTR ds:[ebx]
  41601a:	(bad)  
  41601b:	mov    edx,DWORD PTR [eax-0x1383ea98]
  416021:	(bad)  
  416022:	in     al,dx
  416023:	outs   dx,DWORD PTR ds:[esi]
  416024:	nop
  416025:	jae    0x416004
  416027:	mov    BYTE PTR [ebp+0x27],dl
  41602a:	aad    0x9
  41602c:	out    0x87,eax
  41602e:	xchg   ebp,eax
  41602f:	adc    ah,BYTE PTR [ebx-0x7e]
  416032:	aad    0x9
  416034:	out    0x7c,eax
  416036:	into   
  416037:	adc    DWORD PTR [edi-0x18e13fbd],edi
  41603d:	sbb    eax,0x57a494e5
  416042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416043:	jno    0x416027
  416045:	fidiv  DWORD PTR [edx]
  416047:	and    BYTE PTR [ebx-0x3d],0xa1
  41604b:	out    dx,eax
  41604c:	pushw  cs
  41604e:	imul   ebp,DWORD PTR [ecx],0x49aff93
  416054:	pop    ebx
  416055:	xrelease xchg BYTE PTR [ebx],cl
  416058:	addr16 push cs
  41605a:	add    BYTE PTR [eax],al
  41605c:	inc    ecx
  41605d:	adc    DWORD PTR [ebx+ebp*1+0x55],edi
  416061:	add    al,0x36
  416063:	add    eax,DWORD PTR [ecx-0x693d7329]
  416069:	rcr    edi,0x29
  41606c:	sub    cl,ah
  41606e:	mov    al,ds:0x244878fc
  416073:	push   eax
  416074:	int    0x89
  416076:	push   esp
  416077:	push   esi
  416078:	aad    0xf3
  41607a:	idiv   dh
  41607c:	addr16 dec edx
  41607e:	outs   dx,DWORD PTR ds:[esi]
  41607f:	dec    ecx
  416080:	mov    ecx,DWORD PTR [edi-0x70daa7dc]
  416086:	sub    dl,ch
  416088:	and    cl,BYTE PTR [eax+0x24]
  41608b:	push   edi
  41608c:	stos   BYTE PTR es:[edi],al
  41608d:	imul   ecx,DWORD PTR [ebx+0x7181a05f],0x7f4a6149
  416097:	add    ebx,DWORD PTR [ebp-0x33]
  41609a:	daa    
  41609b:	popf   
  41609c:	and    al,BYTE PTR [esi+eax*4-0x2d00ab71]
  4160a3:	add    eax,DWORD PTR [ecx]
  4160a5:	sbb    al,0x0
  4160a7:	jbe    0x416075
  4160a9:	adc    eax,0x1b72d4fd
  4160ae:	inc    eax
  4160af:	jmp    0xe9ab67f3
  4160b4:	mov    WORD PTR ds:[ebp-0xe6c9daa],gs
  4160bb:	inc    ecx
  4160bc:	sti    
  4160bd:	jbe    0x4160bc
  4160bf:	inc    esi
  4160c0:	add    BYTE PTR [eax],al
  4160c2:	push   edx
  4160c3:	std    
  4160c4:	jmp    0x416117
  4160c6:	out    0xae,al
  4160c8:	std    
  4160c9:	ss dec esi
  4160cb:	push   ss
  4160cc:	mov    DWORD PTR [edx],edi
  4160ce:	dec    ecx
  4160cf:	aad    0xf4
  4160d1:	es push edx
  4160d3:	jae    0x4160de
  4160d5:	push   ds
  4160d6:	mov    esp,0xe9cfd71
  4160db:	imul   esi,DWORD PTR [ecx+0x16],0xa75d7f5a
  4160e2:	scas   eax,DWORD PTR es:[edi]
  4160e3:	dec    eax
  4160e4:	ret    0xd6d9
  4160e7:	xlat   BYTE PTR ds:[ebx]
  4160e8:	mov    cl,bh
  4160ea:	pop    ebp
  4160eb:	js     0x416161
  4160ed:	cwde   
  4160ee:	ins    BYTE PTR es:[edi],dx
  4160ef:	pop    es
  4160f0:	test   BYTE PTR [ecx-0x44cf2d36],ch
  4160f6:	or     dh,BYTE PTR [ebx+esi*2]
  4160f9:	in     al,dx
  4160fa:	in     al,dx
  4160fb:	or     ebx,DWORD PTR [edx-0x3e]
  4160fe:	sar    BYTE PTR ds:0xc7d83c29,cl
  416104:	mov    edi,ebp
  416106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416107:	rol    BYTE PTR [eax+0x150486b0],0x1a
  41610e:	push   ecx
  41610f:	js     0x416148
  416111:	es test eax,0x3f970ab9
  416117:	or     edi,DWORD PTR [edi-0x7639593b]
  41611d:	fist   WORD PTR [esi+0x78]
  416120:	xor    BYTE PTR [eax],al
  416122:	fldenv [edi+edx*2+0x45000084]
  416129:	sbb    bh,bh
  41612b:	xor    BYTE PTR [esi],0x5
  41612e:	or     esi,DWORD PTR [esi+0x2c2963c]
  416134:	add    BYTE PTR [esi],0x65
  416137:	sar    bl,0xc
  41613a:	add    BYTE PTR [eax],al
  41613c:	mov    ah,0x7
  41613e:	xchg   edx,eax
  416140:	jp     0x41618d
  416142:	push   0x8
  416144:	je     0x41618c
  416146:	add    eax,DWORD PTR [eax]
  416148:	pop    edx
  416149:	dec    ebx
  41614a:	xchg   ecx,eax
  41614c:	mov    bh,0xb5
  41614e:	mov    ebp,0xfd710cea
  416153:	(bad)  
  416154:	sti    
  416155:	or     al,0x7
  416157:	ret    0xb5a7
  41615a:	jge    0x41613e
  41615c:	cld    
  41615d:	mov    es,WORD PTR [eax]
  41615f:	add    BYTE PTR [ebp-0x22f4ef5b],bh
  416165:	inc    ebp
  416166:	call   0x8ec0e73
  41616b:	or     edi,DWORD PTR [esi-0x1774aeb5]
  416171:	cmp    DWORD PTR [edi-0x1a7d9828],eax
  416177:	iret   
  416178:	sti    
  416179:	(bad)  
  41617a:	sti    
  41617b:	cmp    eax,0x503f3c01
  416180:	and    BYTE PTR ds:0x12a5c02f,al
  416186:	std    
  416187:	jmp    FWORD PTR [ebp+esi*1+0x8b53]
  41618e:	jmp    0xc54bc910
  416193:	add    bh,ch
  416195:	repz adc DWORD PTR [ecx],eax
  416198:	inc    edi
  416199:	add    al,0x44
  41619b:	(bad)  
  41619d:	call   ebp
  41619f:	xchg   edi,eax
  4161a0:	ja     0x416215
  4161a2:	fucomp st(1)
  4161a4:	inc    ebp
  4161a5:	add    al,0x4e
  4161a7:	cmp    al,0xfc
  4161a9:	out    0x5a,eax
  4161ab:	add    BYTE PTR [ebx-0x3d0a303],cl
  4161b1:	or     al,0x22
  4161b3:	sub    al,0x0
  4161b5:	mov    DWORD PTR [edx+esi*1-0x2d6bf766],eax
  4161bc:	sti    
  4161bd:	mov    bh,0x52
  4161bf:	jno    0x4161c2
  4161c1:	add    dh,dh
  4161c3:	inc    eax
  4161c4:	test   esi,0xc35f9bb
  4161ca:	retf   0x36f7
  4161cd:	adc    BYTE PTR [esi+0x22],bl
  4161d0:	shr    edx,0xdd
  4161d3:	adc    esi,DWORD PTR [edi+edi*4-0x310786cc]
  4161da:	mov    bl,0xf9
  4161dc:	xor    eax,0x36dfe210
  4161e1:	adc    bl,BYTE PTR [esi+0x42]
  4161e4:	shr    edx,0xcd
  4161e7:	push   ebx
  4161e8:	mov    cl,0xbf
  4161ea:	hlt    
  4161eb:	js     0x4161e5
  4161ed:	into   
  4161ee:	jnp    0x4161d9
  4161f0:	xor    eax,0xda000012
  4161f5:	aaa    
  4161f6:	aaa    
  4161f7:	adc    al,0x4e
  4161f9:	ret    0xeac2
  4161fc:	int    0x13
  4161fe:	mov    ah,0xbf
  416200:	mov    ah,0x68
  416202:	clc    
  416203:	into   
  416204:	xor    ebp,edx
  416206:	xor    dl,BYTE PTR [edx+edx*8]
  416209:	push   DWORD PTR [edi]
  41620b:	push   ss
  41620c:	dec    esi
  41620d:	mov    eax,ds:0x13ddeac2
  416212:	mov    ah,0xbf
  416214:	mov    ah,0x68
  416216:	clc    
  416217:	into   
  416218:	cmp    ecx,DWORD PTR [edx]
  41621a:	jo     0x416251
  41621c:	ret    
  41621d:	push   cs
  41621e:	push   esi
  41621f:	cmp    ch,ch
  416221:	xchg   edx,eax
  416222:	mov    eax,0xca117fc2
  416227:	mov    bl,0x42
  416229:	push   0xe78bf8ef
  41622e:	outs   dx,DWORD PTR ds:[esi]
  41622f:	xor    eax,0x383e0ecd
  416234:	iret   
  416235:	xchg   edx,eax
  416236:	cwde   
  416237:	ret    0x116f
  41623a:	or     dh,BYTE PTR [edx+ebx*1+0x23f8ef68]
  416241:	out    0x5f,eax
  416243:	xor    eax,0x38960eef
  416248:	loope  0x4161dc
  41624a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624b:	dec    DWORD PTR [ebp+0x58]
  41624e:	sub    BYTE PTR [ecx-0x3de8d523],bl
  416254:	or     dl,BYTE PTR [ecx]
  416256:	loop   0x41620a
  416258:	add    BYTE PTR [eax],al
  41625a:	mov    ebx,0x57efbd90
  41625f:	bound  edx,QWORD PTR [ebx-0x903a224]
  416265:	sbb    esp,ebx
  416267:	loopne 0x4162ca
  416269:	nop
  41626a:	add    al,0xa4
  41626c:	jb     0x416266
  41626e:	repnz pop ebp
  416270:	std    
  416271:	mov    esi,eax
  416273:	xchg   ecx,eax
  416274:	jl     0x416269
  416276:	push   ebx
  416277:	pop    es
  416278:	bound  edi,QWORD PTR [eax]
  41627a:	fnstenv [ecx-0x47]
  41627d:	mov    bl,al
  41627f:	jge    0x4162f1
  416281:	inc    edx
  416282:	fst    DWORD PTR [eax+0x45b2dc22]
  416288:	int    0x8b
  41628a:	rcl    BYTE PTR [ebx-0x8b223d3],0xee
  416291:	sub    bl,BYTE PTR [esp+eax*2+0x0]
  416295:	pop    ss
  416296:	cli    
  416297:	loopne 0x41625a
  416299:	fst    st(6)
  41629b:	fmul   DWORD PTR [eax-0x5791af6b]
  4162a1:	jmp    0x14c26c7c
  4162a6:	lea    edi,[esi+0xd]
  4162a9:	gs in  al,dx
  4162ab:	or     DWORD PTR [eax],eax
  4162ad:	jmp    0xeb552c16
  4162b2:	in     eax,dx
  4162b3:	enter  0x19fb,0xec
  4162b7:	mov    BYTE PTR [eax+0x6e],bl
  4162ba:	dec    esi
  4162bb:	jg     0x41630d
  4162bd:	data16 add BYTE PTR [eax],al
  4162c0:	les    ecx,FWORD PTR ds:0x8a5aa4c5
  4162c6:	add    cl,ch
  4162c8:	(bad)  
  4162c9:	cmc    
  4162ca:	adc    DWORD PTR [esi+0x44],ecx
  4162cd:	xchg   ebp,eax
  4162ce:	adc    ebp,DWORD PTR [ecx-0x4a3f772a]
  4162d4:	es mov cl,al
  4162d7:	ss dec eax
  4162d9:	pop    eax
  4162da:	add    cl,ch
  4162dc:	(bad)  
  4162dd:	jle    0x4162f2
  4162df:	or     DWORD PTR [edi*1-0x1b92ee00],esp
  4162e6:	adc    BYTE PTR [ecx+edi*4+0x7e],0xfd
  4162eb:	push   cs
  4162ec:	(bad)  
  4162ee:	sub    DWORD PTR [ebx-0x627c7006],edx
  4162f4:	pop    edi
  4162f5:	jg     0x4162f4
  4162f7:	cdq    
  4162f8:	ins    DWORD PTR es:[edi],dx
  4162f9:	enter  0x99df,0x14
  4162fd:	leave  
  4162fe:	or     al,0xe8
  416300:	mov    BYTE PTR ds:[ebx+0x1ef5fde],ch
  416307:	fs push ebp
  416309:	(bad)  
  41630b:	into   
  41630c:	dec    edi
  41630d:	(bad)  [edx+0x50a9e900]
  416313:	call   0x3c4604
  416318:	xchg   edi,eax
  416319:	cmp    ah,BYTE PTR [esi-0x7d]
  41631c:	xor    DWORD PTR [ecx],esi
  41631e:	sti    
  41631f:	push   DWORD PTR [ebx+0x77]
  416322:	jb     0x4162d6
  416324:	add    BYTE PTR [eax],al
  416326:	out    0x75,al
  416328:	mov    al,BYTE PTR [ebp-0x46f24]
  41632e:	mov    esp,0xdce04102
  416333:	inc    edi
  416334:	inc    ecx
  416335:	vmread DWORD PTR [eax-0x701c52b2],esp
  41633c:	push   0x2
  41633e:	add    DWORD PTR [edx-0x700c00a6],ecx
  416344:	push   eax
  416345:	lea    edi,[ecx-0x68]
  416348:	push   eax
  416349:	call   0x3c462e
  41634e:	xchg   edi,eax
  41634f:	jns    0x4163b8
  416351:	sbb    al,0xc1
  416353:	leave  
  416354:	fist   WORD PTR [eax-0x7c]
  416357:	mov    al,ds:0x9ae3ffa9
  41635c:	inc    ecx
  41635d:	adc    al,0x2d
  41635f:	or     al,0x9
  416361:	(bad)  
  416362:	imul   edi,DWORD PTR [edi+0x1],0x128439c7
  416369:	add    ah,bh
  41636b:	pop    es
  41636c:	out    0xb,eax
  41636e:	mov    edx,0xab010ac9
  416373:	leave  
  416374:	sti    
  416375:	push   es
  416376:	cld    
  416377:	pop    es
  416378:	add    BYTE PTR [edx+0x45857839],cl
  41637e:	add    DWORD PTR [esi],ebx
  416380:	add    al,0x8d
  416382:	test   eax,0xf98d4d81
  416387:	mov    cl,0x50
  416389:	mov    BYTE PTR [eax],0x0
  41638c:	aad    0x2d
  41638e:	clc    
  41638f:	add    bl,BYTE PTR [ebx-0x4d0005da]
  416395:	mov    ebp,0xf8b2fd58
  41639a:	cmp    al,0xfc
  41639c:	push   esi
  41639d:	mov    cl,0x0
  41639f:	push   eax
  4163a0:	push   eax
  4163a1:	es test al,0x50
  4163a4:	call   0x143:0x13e7fc1e
  4163ab:	add    dh,al
  4163ad:	test   eax,0xf5d2c080
  4163b2:	ror    BYTE PTR [ecx+0x10c6ba94],0xd5
  4163b9:	adc    eax,0x8554ec7b
  4163be:	xchg   esp,eax
  4163bf:	add    al,0xd5
  4163c1:	jo     0x4163f7
  4163c3:	push   esi
  4163c4:	dec    esi
  4163c5:	pop    esi
  4163c6:	stc    
  4163c7:	push   esp
  4163c8:	stos   DWORD PTR es:[edi],eax
  4163c9:	fdiv   DWORD PTR [ecx+0xb]
  4163cc:	aad    0x70
  4163ce:	aam    0xc6
  4163d0:	add    DWORD PTR [edi-0x8],ebp
  4163d3:	xchg   ebx,eax
  4163d4:	adc    al,0x80
  4163d6:	lods   al,BYTE PTR ds:[esi]
  4163d7:	push   ecx
  4163d8:	mov    edi,0x2e437671
  4163dd:	mov    eax,ds:0x9e4cfe7c
  4163e2:	mov    eax,ds:0x14e51e8
  4163e7:	add    BYTE PTR [ecx+0x31],bl
  4163ea:	test   DWORD PTR [ebx+0x16e97],0xadbd0000
  4163f4:	mov    WORD PTR ds:0x34a51,cs
  4163fa:	aad    0x6b
  4163fc:	dec    edi
  4163fd:	inc    ebx
  4163fe:	out    dx,al
  4163ff:	lahf   
  416400:	xor    DWORD PTR [ebx-0x2782aa8],ecx
  416406:	fimul  DWORD PTR [ecx]
  416408:	aaa    
  416409:	pushf  
  41640a:	xor    ah,BYTE PTR ds:0x495103e7
  416410:	out    0x7f,al
  416412:	loopne 0x41641b
  416414:	out    0x3,eax
  416416:	enter  0x2cb3,0x8d
  41641a:	mov    esp,0x4ecc2f0f
  41641f:	add    al,0x5b
  416421:	xchg   DWORD PTR [eax-0x2238cc86],esp
  416427:	inc    esi
  416428:	sbb    al,0x96
  41642a:	les    ecx,FWORD PTR [ecx-0x6a]
  41642d:	stos   DWORD PTR es:[edi],eax
  41642e:	in     al,dx
  41642f:	dec    ecx
  416430:	int3   
  416431:	add    eax,DWORD PTR [edx-0x29b77185]
  416437:	jp     0x416420
  416439:	add    edx,esp
  41643b:	inc    edx
  41643c:	out    dx,al
  41643d:	push   eax
  41643e:	xchg   ebp,eax
  41643f:	nop
  416440:	sub    al,0xa0
  416442:	out    dx,eax
  416443:	pop    es
  416444:	pop    esp
  416445:	ds jno 0x416421
  416448:	mov    esp,0xe724309b
  41644d:	add    edx,DWORD PTR [ecx+0x49]
  416450:	out    0x7f,al
  416452:	and    BYTE PTR [eax],cl
  416454:	out    0x3,eax
  416456:	add    BYTE PTR [eax],al
  416458:	mov    bl,0x40
  41645a:	les    ebx,FWORD PTR [edi+0x27719a6]
  416460:	xor    dl,BYTE PTR [ebp-0x18]
  416463:	add    edx,ebp
  416465:	mov    WORD PTR [ebx-0x2],fs
  416468:	inc    esi
  416469:	jge    0x416491
  41646b:	mov    ah,bh
  41646d:	dec    eax
  41646e:	mov    edx,0xac8cd11d
  416473:	mov    edi,0x7b0d8ea5
  416478:	sahf   
  416479:	jb     0x41648a
  41647b:	xchg   ebp,eax
  41647c:	mov    ecx,0x157fe709
  416481:	or     al,BYTE PTR [eax]
  416483:	ins    DWORD PTR es:[edi],dx
  416484:	xchg   BYTE PTR [edx-0x3],bh
  416487:	jmp    0xed0562e2
  41648c:	retf   
  41648d:	mov    WORD PTR [esi-0x9f62918],fs
  416493:	sub    al,0x79
  416495:	jns    0x416508
  416497:	stc    
  416498:	jnp    0x416467
  41649a:	mov    bh,0xde
  41649c:	(bad)  
  41649d:	or     DWORD PTR [eax],eax
  41649f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a0:	adc    al,0xb6
  4164a2:	add    ch,cl
  4164a4:	(bad)  
  4164a5:	or     ecx,ebp
  4164a7:	fistp  WORD PTR [ebx-0x33]
  4164aa:	mov    bh,0xeb
  4164ac:	(bad)  
  4164ad:	or     DWORD PTR [eax],eax
  4164af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b0:	adc    al,0xb6
  4164b2:	adc    eax,0xd09d6e9
  4164b7:	push   edi
  4164b8:	adc    al,0x4f
  4164ba:	dec    eax
  4164bb:	jb     0x4164bd
  4164bd:	add    BYTE PTR [ecx+eax*1-0x6f2ed6ee],al
  4164c4:	pop    ebx
  4164c5:	xchg   ecx,eax
  4164c6:	push   0xffffff8d
  4164c8:	adc    ch,al
  4164ca:	(bad)  
  4164cb:	or     DWORD PTR [eax-0x4f],ecx
  4164ce:	loop   0x416497
  4164d0:	inc    edi
  4164d1:	out    dx,al
  4164d2:	push   ebp
  4164d3:	jmp    0x4164d3
  4164d5:	call   0xe1bce7b0
  4164da:	pop    es
  4164db:	in     al,0xf
  4164dd:	je     0x416533
  4164df:	push   ss
  4164e0:	std    
  4164e1:	ds push edx
  4164e3:	(bad)  
  4164e5:	bound  esi,QWORD PTR ds:0x1165fd79
  4164eb:	pop    es
  4164ec:	test   BYTE PTR [eax-0x6cfff627],dh
  4164f2:	mul    dl
  4164f4:	pop    es
  4164f5:	push   ss
  4164f6:	and    al,0xb5
  4164f8:	(bad)  
  4164f9:	stos   BYTE PTR es:[edi],al
  4164fa:	(bad)  
  4164fb:	jbe    0x4164d3
  4164fd:	add    BYTE PTR [ebp-0x36],ah
  416500:	xlat   BYTE PTR ds:[ebx]
  416501:	cmp    edi,DWORD PTR [edi-0x13037e80]
  416507:	or     al,0x0
  416509:	push   0x3
  41650b:	es mov sp,ax
  41650f:	adc    dl,BYTE PTR [eax]
  416511:	lea    edi,[ecx]
  416513:	jno    0x416511
  416515:	jmp    FWORD PTR [ebx-0x6af73f75]
  41651b:	add    BYTE PTR [eax],0x0
  41651e:	mov    esp,0x878f3
  416523:	add    bh,cl
  416525:	adc    edi,ebp
  416527:	mov    ecx,?
  416529:	xchg   DWORD PTR [eax-0x18],edx
  41652c:	repz imul edi,ebp,0xb4d00ff
  416533:	test   BYTE PTR [ecx+0xd],dh
  416536:	add    BYTE PTR [eax],al
  416538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416539:	and    esi,esi
  41653b:	(bad)  
  41653d:	nop
  41653e:	add    BYTE PTR [eax],al
  416540:	jl     0x4165c1
  416542:	mov    bl,0x45
  416544:	loop   0x416581
  416546:	push   eax
  416547:	(bad)  
  416548:	icebp  
  416549:	push   0x3cebfff8
  41654e:	call   0x4f4577
  416553:	test   ah,bh
  416555:	jg     0x4164d8
  416557:	loop   0x416585
  416559:	or     al,0x0
  41655b:	punpckldq mm1,mm1
  41655e:	cmc    
  41655f:	mov    BYTE PTR [eax-0x1404ebf7],bh
  416565:	(bad)
  416569:	cmp    al,0x4f
  41656b:	push   ebx
  41656c:	jns    0x4164f7
  41656e:	adc    al,0xfb
  416570:	mov    ebx,0x4989508f
  416575:	mov    ah,0xfb
  416577:	adc    eax,0x3feff2d5
  41657c:	aad    0xed
  41657e:	shl    BYTE PTR [esp+ebx*8+0x28],0x40
  416583:	cmc    
  416584:	rcr    DWORD PTR [ecx],1
  416586:	ins    BYTE PTR es:[edi],dx
  416587:	add    BYTE PTR [eax],al
  416589:	add    ch,dl
  41658b:	(bad)  
  41658c:	iret   
  41658d:	ror    DWORD PTR [esi-0x53],1
  416590:	mov    ecx,0xeed59639
  416595:	or     al,0x83
  416597:	mov    ebx,0x99504c77
  41659c:	leave  
  41659d:	inc    edi
  41659e:	rcr    esp,1
  4165a0:	in     al,0x88
  4165a2:	adc    eax,0x20c0c86d
  4165a7:	mov    ebp,0xbb55c286
  4165ac:	add    dh,BYTE PTR [edx+0x7a]
  4165af:	scas   eax,DWORD PTR es:[edi]
  4165b0:	cmp    eax,0xdafd9f5
  4165b5:	enter  0x7e8a,0x99
  4165b9:	adc    edx,DWORD PTR ds:0x7a659861
  4165bf:	adc    esp,esi
  4165c1:	cld    
  4165c2:	in     eax,0x68
  4165c4:	cdq    
  4165c5:	add    al,0x3e
  4165c7:	clc    
  4165c8:	add    BYTE PTR [edi-0x3f3866e8],0xe0
  4165cf:	outs   dx,BYTE PTR ds:[esi]
  4165d0:	mov    ebx,0x98624a43
  4165d5:	(bad)  [ebx-0x37eb341d]
  4165db:	aaa    
  4165dc:	jns    0x416636
  4165de:	fucomp st(1)
  4165e0:	sub    eax,DWORD PTR [esi+edi*1]
  4165e3:	inc    eax
  4165e4:	ja     0x416661
  4165e6:	fst    QWORD PTR [ebx-0x59affbe9]
  4165ec:	dec    ebp
  4165ed:	push   eax
  4165ee:	add    BYTE PTR [eax],al
  4165f0:	sub    eax,0x12ffdef0
  4165f5:	or     ch,BYTE PTR [ebx-0x3c]
  4165f8:	add    eax,0x16cef90
  4165fe:	push   ss
  4165ff:	iret   
  416600:	ds push eax
  416602:	stos   BYTE PTR es:[edi],al
  416603:	add    esi,eax
  416605:	pop    edi
  416606:	jo     0x416647
  416608:	or     eax,0xdb0f2a33
  41660d:	dec    edi
  41660e:	lods   al,BYTE PTR ds:[esi]
  41660f:	mov    edx,ds
  416611:	arpl   sp,dx
  416613:	sbb    edi,edx
  416615:	ror    BYTE PTR [ebx+edi*2-0x23],1
  416619:	jecxz  0x4165fd
  41661b:	jbe    0x41662b
  41661d:	mov    esi,0xd8d1c36a
  416622:	ss pushf 
  416624:	sub    esp,DWORD PTR [esi+eax*8-0x110ba37c]
  41662b:	xor    BYTE PTR [edi],ch
  41662d:	or     al,0x64
  41662f:	ds xchg ebp,eax
  416631:	fnstcw WORD PTR [esi-0x18f64bc3]
  416637:	jg     0x4165ce
  416639:	cld    
  41663a:	test   DWORD PTR [esi+eax*1+0x2ce47f52],0x32d18e76
  416645:	(bad)  
  416646:	and    al,0x29
  416648:	xchg   edx,eax
  416649:	dec    ebx
  41664a:	jecxz  0x41664f
  41664c:	fwait
  41664d:	int3   
  41664e:	jno    0x416652
  416650:	popf   
  416651:	aam    0x75
  416653:	hlt    
  416654:	add    BYTE PTR [eax],al
  416656:	push   edi
  416657:	sub    ebp,ebp
  416659:	add    edx,ebp
  41665b:	out    dx,eax
  41665c:	jno    0x41669c
  41665e:	adc    eax,0xb3abdc82
  416663:	and    BYTE PTR [ebp-0x53401fff],0xbe
  41666a:	popf   
  41666b:	push   es
  41666c:	arpl   bx,ax
  41666e:	(bad)  
  41666f:	or     DWORD PTR [eax],eax
  416671:	jmp    0xdbc56b54
  416676:	adc    esi,DWORD PTR [esi-0x3]
  416679:	mov    cl,0xda
  41667b:	push   cs
  41667c:	(bad)  
  41667d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41667e:	push   ecx
  41667f:	or     al,0xe7
  416681:	push   ds
  416682:	sti    
  416683:	jne    0x416682
  416685:	push   ecx
  416686:	push   esi
  416687:	or     DWORD PTR [eax],eax
  416689:	jmp    0x70f130fd
  41668e:	mov    ds:0x86ac8ba5,eax
  416693:	(bad)  [edx-0x289559c]
  416699:	out    0xa1,al
  41669b:	fdivp  st(4),st
  41669d:	hlt    
  41669e:	sbb    DWORD PTR ss:[eax-0x17],eax
  4166a2:	dec    ebp
  4166a3:	dec    edx
  4166a4:	or     eax,0xe1164
  4166a9:	jmp    0x19ed2ff3
  4166ae:	inc    esp
  4166af:	mov    DWORD PTR [esi*4+0x16507756],edx
  4166b6:	push   esi
  4166b7:	sbb    DWORD PTR [eax-0x69ffff04],ebx
  4166bd:	jne    0x416643
  4166bf:	test   eax,0xedbe88e6
  4166c4:	(bad)  
  4166c5:	or     DWORD PTR [esi+0x6a],esp
  4166c8:	xchg   esp,eax
  4166c9:	es std 
  4166cb:	xchg   BYTE PTR [esi+0x1f],dl
  4166ce:	data16 jo 0x41671d
  4166d1:	and    al,0xfd
  4166d3:	jbe    0x41672b
  4166d5:	stc    
  4166d6:	or     esp,DWORD PTR [eax+0x74]
  4166d9:	into   
  4166da:	cld    
  4166db:	push   si
  4166dd:	lea    ebx,[ebx-0x288a9e7]
  4166e3:	fs jl  0x41670c
  4166e6:	std    
  4166e7:	dec    esi
  4166e8:	push   esi
  4166e9:	bound  ecx,QWORD PTR [eax+0xdda00]
  4166ef:	mov    DWORD PTR [ecx-0x1f],edi
  4166f2:	jle    0x4166ec
  4166f4:	jecxz  0x41670e
  4166f6:	test   BYTE PTR [edx+0x680008f8],cl
  4166fc:	dec    DWORD PTR [eax]
  4166fe:	std    
  4166ff:	jmp    DWORD PTR [esi+0x1]
  416702:	sti    
  416703:	xor    eax,0x3ebfa0
  416708:	jecxz  0x41671c
  41670a:	js     0x41671e
  41670c:	cmp    al,0x9
  41670e:	xchg   eax,edi
  416710:	pop    ss
  416711:	hlt    
  416712:	jo     0x41671d
  416714:	stos   BYTE PTR es:[edi],al
  416715:	inc    edx
  416716:	hlt    
  416717:	add    ebp,edx
  416719:	ins    DWORD PTR es:[edi],dx
  41671a:	add    DWORD PTR [eax],eax
  41671c:	mov    esp,0xe07187
  416721:	add    BYTE PTR [edi+0x72],al
  416724:	add    eax,0xe571a353
  416729:	push   esi
  41672a:	xchg   esp,eax
  41672b:	cdq    
  41672c:	idiv   edi
  41672e:	xchg   ebx,eax
  41672f:	mov    edi,eax
  416731:	add    DWORD PTR [ebx-0x53fbd07f],esi
  416737:	or     BYTE PTR [edi+0x498b9445],al
  41673d:	in     al,dx
  41673e:	xor    ecx,DWORD PTR [ebx-0x789ddf77]
  416744:	sti    
  416745:	push   ebp
  416747:	imul   ecx,ebp,0x84e9c189
  41674d:	pop    ebp
  41674e:	pop    eax
  41674f:	mov    edi,0x87e21480
  416754:	sti    
  416755:	add    ch,BYTE PTR [eax+ecx*1+0x0]
  416759:	mov    DWORD PTR [ecx],ecx
  41675b:	adc    esi,edi
  41675d:	push   DWORD PTR [ebx-0x5de37e7b]
  416763:	xchg   ebx,edi
  416765:	jmp    0x47a43f
  41676a:	aad    0xc3
  41676c:	test   DWORD PTR [edi],0xfe14e558
  416772:	and    dh,BYTE PTR [ebx]
  416774:	imul   esp,ebp,0x840162f4
  41677a:	adc    eax,0x7d5119be
  41677f:	sub    eax,DWORD PTR [edx-0x7d442b00]
  416785:	jae    0x416787
  416787:	add    ch,cl
  416789:	sbb    ebx,DWORD PTR [eax]
  41678b:	hlt    
  41678c:	enter  0x1a2,0x83
  416790:	adc    eax,0xd6cb8f7b
  416795:	bound  eax,QWORD PTR [ecx]
  416797:	std    
  416798:	pusha  
  416799:	or     dl,BYTE PTR [eax+0x7f62e983]
  41679f:	std    
  4167a0:	xchg   edx,eax
  4167a1:	es je  0x416724
  4167a4:	aad    0x60
  4167a6:	add    eax,ebp
  4167a8:	add    DWORD PTR [edx],0x4
  4167ab:	add    BYTE PTR [ecx-0x5f],bl
  4167ae:	je     0x42c728
  4167b4:	push   eax
  4167b5:	cs je  0x416808
  4167b8:	dec    eax
  4167b9:	out    0x2f,al
  4167bb:	std    
  4167bc:	xchg   edx,eax
  4167bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167be:	aam    0x50
  4167c0:	std    
  4167c1:	stos   DWORD PTR es:[edi],eax
  4167c2:	jg     0x4167c4
  4167c4:	aad    0x3b
  4167c6:	jg     0x41683b
  4167c8:	ins    DWORD PTR es:[edi],dx
  4167c9:	pushf  
  4167ca:	adc    eax,0x420c894
  4167cf:	mov    DWORD PTR [ebp-0x6],esp
  4167d2:	hlt    
  4167d3:	rcr    DWORD PTR [esi+0x4d8e0eef],cl
  4167d9:	pusha  
  4167da:	add    DWORD PTR [eax],eax
  4167dc:	push   esi
  4167dd:	jecxz  0x4167e8
  4167df:	or     eax,0x5d70a57
  4167e4:	aad    0x9
  4167e6:	lds    ecx,FWORD PTR [esi+edx*2+0x815626]
  4167ed:	add    BYTE PTR [eax],dh
  4167ef:	in     al,dx
  4167f0:	ja     0x8187ddb7
  4167f6:	ror    BYTE PTR [ebx+ebx*4-0x32f62afb],1
  4167fd:	test   BYTE PTR ds:0x5c11b408,cl
  416803:	(bad)  
  416804:	(bad)  
  416805:	jg     0x416807
  416807:	jae    0x4167eb
  416809:	xchg   ch,al
  41680b:	jb     0x416823
  41680d:	cmp    esp,0xed84850e
  416813:	sbb    bh,BYTE PTR [esp+ebx*1+0x6f]
  416817:	sbb    DWORD PTR [edi+eax*4-0x5f],ebp
  41681b:	jb     0x416813
  41681d:	sbb    BYTE PTR [esi-0x7c],0xcb
  416821:	jg     0x4167eb
  416823:	jb     0x4167f4
  416825:	(bad)  
  416827:	jb     0x416807
  416829:	xchg   BYTE PTR [ebp-0x28d793fe],dl
  41682f:	or     edi,esp
  416831:	sub    DWORD PTR [eax],0x8
  416834:	out    0x10,eax
  416836:	push   esi
  416837:	adc    al,0xe9
  416839:	add    edx,ebp
  41683b:	jmp    0x41682c
  41683d:	and    al,ah
  41683f:	mov    ebx,ss
  416841:	add    eax,0xdee009d5
  416846:	jbe    0x416844
  416848:	fadd   DWORD PTR [eax-0x799b85fa]
  41684e:	shl    DWORD PTR [edx-0x72],0x80
  416852:	add    BYTE PTR [eax],al
  416854:	add    eax,0x5e976c85
  416859:	jb     0x4168d9
  41685b:	shl    DWORD PTR [edx-0x3c],cl
  41685e:	inc    DWORD PTR [eax+0x55]
  416861:	je     0x4168c9
  416863:	push   0xffffff8b
  416865:	popf   
  416866:	sti    
  416867:	push   bp
  416869:	sbb    al,0x73
  41686b:	in     eax,dx
  41686c:	dec    edi
  41686d:	mov    gs,WORD PTR [esp+edx*2+0x6c877455]
  416874:	dec    esi
  416875:	outs   dx,BYTE PTR ds:[esi]
  416876:	std    
  416877:	inc    esi
  416878:	push   ecx
  416879:	(bad)  
  41687a:	out    dx,eax
  41687b:	jo     0x416890
  41687d:	pushw  0xd669
  416881:	or     DWORD PTR [eax],eax
  416883:	pop    esp
  416884:	push   ebx
  416885:	and    eax,0xd85526fd
  41688a:	dec    edi
  41688b:	push   ds
  41688c:	jecxz  0x41689f
  41688e:	push   ss
  41688f:	test   eax,0xa6b604d6
  416894:	ror    DWORD PTR [eax+0x50ef5c4],1
  41689a:	test   ch,dh
  41689c:	xlat   BYTE PTR ds:[ebx]
  41689d:	or     DWORD PTR [eax],eax
  41689f:	mov    eax,ds:0xa139fd9e
  4168a4:	in     eax,0x8c
  4168a6:	scas   eax,DWORD PTR es:[edi]
  4168a7:	call   0xdfc27282
  4168ac:	jecxz  0x4168ac
  4168ae:	lea    eax,[ecx+0x430009d8]
  4168b4:	ret    0x65d1
  4168b7:	jo     0x4168b9
  4168b9:	add    BYTE PTR [esi+ebx*1-0x3],cl
  4168bd:	mov    esi,0x640fe41a
  4168c2:	call   0xfd36:0x5c5c500d
  4168c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ca:	add    bl,dl
  4168cc:	les    esp,FWORD PTR [ecx+eax*1]
  4168cf:	push   cs
  4168d0:	add    cl,ch
  4168d2:	(bad)  
  4168d3:	popa   
  4168d4:	xlat   BYTE PTR ds:[ebx]
  4168d5:	inc    esi
  4168d6:	jmp    0xe3de:0x80006a6e
  4168dd:	add    BYTE PTR [ebp+ecx*1-0x76],ch
  4168e1:	inc    edi
  4168e2:	inc    eax
  4168e3:	mov    eax,eax
  4168e5:	cmpxchg BYTE PTR [esi+edi*8-0x1],bh
  4168ea:	sub    al,0x0
  4168ec:	mov    dh,0xc0
  4168ee:	test   eax,0x8d3b043d
  4168f3:	add    BYTE PTR [esi+0xd3d65],cl
  4168f9:	push   eax
  4168fa:	test   eax,0xa9510240
  4168ff:	call   0xe84c:0xf0cbfc94
  416906:	push   esp
  416907:	test   eax,0x81b2fffb
  41690c:	add    DWORD PTR [eax+ebx*8+0x7900faf0],edx
  416913:	dec    ebp
  416914:	add    dh,BYTE PTR [ebx]
  416916:	mov    esp,0x3dcc499a
  41691b:	pop    ebp
  41691c:	dec    ebp
  41691d:	mov    DWORD PTR [eax],eax
  41691f:	add    BYTE PTR [ecx],dh
  416921:	ror    DWORD PTR [eax-0x475cf7b],0xff
  416928:	ins    BYTE PTR es:[edi],dx
  416929:	out    dx,eax
  41692a:	adc    BYTE PTR [eax-0x7b02b33f],dl
  416930:	ins    BYTE PTR es:[edi],dx
  416931:	inc    DWORD PTR [eax+0xcbd29]
  416937:	xor    ch,BYTE PTR [esi+0x3b]
  41693a:	test   BYTE PTR [ebx-0x39c9260f],0xe0
  416941:	sbb    al,0xb
  416943:	mov    dh,0x36
  416945:	or     DWORD PTR [ebp+ecx*4+0x4],0x2e
  41694a:	dec    eax
  41694b:	add    al,0xe0
  41694d:	sbb    al,0x87
  41694f:	inc    eax
  416950:	js     0x416985
  416952:	(bad)  
  416953:	jne    0x41692a
  416955:	mov    ?,WORD PTR [ebx-0x3e]
  416958:	push   ebp
  416959:	pushf  
  41695a:	push   DWORD PTR [ecx-0x7e]
  41695d:	cdq    
  41695e:	jle    0x416960
  416960:	aad    0x62
  416962:	mov    cl,BYTE PTR [eax-0x1b]
  416965:	adc    DWORD PTR [ebx-0xf20bab5],ecx
  41696b:	pop    ss
  41696c:	push   eax
  41696d:	(bad)  [edi*8-0x182f30c6]
  416974:	lock jg 0x4169f5
  416977:	std    
  416978:	mov    bl,0xe3
  41697a:	mov    edi,0x7dc7222c
  41697f:	adc    eax,0xb38c5ea0
  416984:	add    BYTE PTR [eax],al
  416986:	cdq    
  416987:	aaa    
  416988:	jle    0x416987
  41698a:	pop    esp
  41698b:	cmc    
  41698c:	xor    ch,bh
  41698e:	add    ah,BYTE PTR [edi]
  416990:	jle    0x416a05
  416992:	or     DWORD PTR [edi],ecx
  416994:	sbb    al,ch
  416996:	enter  0x1a2,0xe9
  41699a:	mov    edx,0xd20a7ae3
  41699f:	clc    
  4169a0:	mov    ebp,0xe762d500
  4169a5:	add    DWORD PTR ds:0xf9838c7f,ebp
  4169ab:	pop    edi
  4169ac:	jnp    0x4169ab
  4169ae:	das    
  4169af:	pop    ebp
  4169b0:	mov    es,WORD PTR [ebp-0x2f]
  4169b3:	xor    BYTE PTR [ebp+0x7b57e583],cl
  4169b9:	std    
  4169ba:	add    eax,0xc5efc5a8
  4169bf:	pusha  
  4169c0:	add    DWORD PTR [eax],eax
  4169c2:	lods   eax,DWORD PTR ds:[esi]
  4169c3:	mov    cl,0xa6
  4169c5:	std    
  4169c6:	xchg   edx,eax
  4169c7:	retf   
  4169c8:	or     ebx,DWORD PTR [ecx-0xd]
  4169cb:	jmp    0x4169d4
  4169cd:	sbb    eax,0x2aa0a56
  4169d2:	push   esp
  4169d3:	in     eax,dx
  4169d4:	mov    bh,BYTE PTR [ebp-0x5]
  4169d7:	sub    BYTE PTR [esi+ebp*1+0x68],0x6f
  4169dc:	mov    ?,edi
  4169de:	pop    es
  4169df:	loop   0x416a47
  4169e1:	add    al,0xd5
  4169e3:	or     DWORD PTR [edi+eax*4-0x17],ebp
  4169e7:	ins    BYTE PTR es:[edi],dx
  4169e8:	jbe    0x416a67
  4169ea:	add    BYTE PTR [eax],al
  4169ec:	mov    edi,0xe67d1709
  4169f1:	adc    ebp,edi
  4169f3:	ret    
  4169f4:	cmp    ah,ch
  4169f6:	jno    0x41697f
  4169f8:	add    DWORD PTR [edi+0x56],ebp
  4169fb:	jge    0x4169b0
  4169fd:	and    BYTE PTR [eax+ebx*1+0x1e],0x6f
  416a02:	inc    esi
  416a03:	or     eax,0x486a4a60
  416a08:	loope  0x416a86
  416a0a:	jl     0x416a24
  416a0c:	push   cs
  416a0d:	outs   dx,DWORD PTR ds:[esi]
  416a0e:	mov    edx,DWORD PTR cs:[esi-0x4a09f0b3]
  416a15:	or     edi,esp
  416a17:	mov    dl,BYTE PTR [esi-0x178395a3]
  416a1d:	(bad)  
  416a1e:	(bad)  
  416a20:	jecxz  0x416a90
  416a22:	out    0x30,eax
  416a24:	adc    eax,0xe85f7c8b
  416a29:	(bad)  
  416a2a:	pop    ebx
  416a2b:	inc    esp
  416a2c:	sbb    eax,0x5410078b
  416a31:	dec    ecx
  416a32:	icebp  
  416a33:	mov    dl,BYTE PTR [esi]
  416a35:	pop    edx
  416a36:	and    bh,bl
  416a38:	xchg   bh,ch
  416a3a:	add    DWORD PTR ds:0x7cfb8460,ecx
  416a40:	mov    al,ds:0x7ec7006e
  416a45:	hlt    
  416a46:	fnstsw WORD PTR [esi+eax*1+0x7a]
  416a4a:	add    BYTE PTR [ebx+edx*2+0x1d],ah
  416a4e:	std    
  416a4f:	scas   al,BYTE PTR es:[edi]
  416a50:	add    BYTE PTR [eax],al
  416a52:	add    edx,ebx
  416a54:	mov    BYTE PTR [ebx*1+0x15d1ffe4],ch
  416a5b:	fimul  DWORD PTR [edx-0x3263613]
  416a61:	adc    al,0xe5
  416a63:	ins    BYTE PTR es:[edi],dx
  416a64:	adc    ecx,DWORD PTR [ebp+0x69ffc9c3]
  416a6a:	push   ebx
  416a6b:	(bad)  
  416a6c:	std    
  416a6d:	out    0x52,al
  416a6f:	scas   eax,DWORD PTR es:[edi]
  416a70:	add    cl,ch
  416a72:	(bad)  
  416a73:	ins    BYTE PTR es:[edi],dx
  416a74:	jae    0x416acb
  416a76:	dec    ebx
  416a77:	mov    dl,BYTE PTR [edi+ebx*2]
  416a7a:	mov    cl,0x6c
  416a7c:	call   0x4b32dd
  416a81:	gs xchg esi,eax
  416a83:	cld    
  416a84:	adc    DWORD PTR [ecx+0x720009d6],0xb
  416a8b:	mov    ebp,DWORD PTR ds:[esi+eax*4-0x4d9b7527]
  416a93:	ins    BYTE PTR es:[edi],dx
  416a94:	std    
  416a95:	es es cmp ecx,ebx
  416a99:	mov    edx,0xe9fd6c2e
  416a9e:	(bad)  
  416a9f:	and    dh,al
  416aa1:	mov    ecx,0x99350553
  416aa6:	pop    ecx
  416aa7:	cli    
  416aa8:	jmp    0x416aa8
  416aaa:	call   0xd6ea7e44
  416aaf:	xor    al,cl
  416ab1:	outs   dx,BYTE PTR ds:[esi]
  416ab2:	sar    dh,cl
  416ab4:	mov    ah,0x74
  416ab6:	add    BYTE PTR [eax],al
  416ab8:	in     eax,dx
  416ab9:	outs   dx,BYTE PTR ds:[esi]
  416aba:	std    
  416abb:	fdivrp st(0),st
  416abd:	rcr    bl,0x5c
  416ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ac1:	cmp    al,bh
  416ac3:	inc    edi
  416ac4:	push   eax
  416ac5:	inc    DWORD PTR [edi+0x6603e300]
  416acb:	adc    DWORD PTR [ecx],0x22
  416ace:	sti    
  416acf:	inc    DWORD PTR [ebx+0x19]
  416ad2:	or     edx,DWORD PTR [ebp-0x7f3b0fd3]
  416ad8:	dec    ebp
  416ad9:	add    eax,0x72ffc1fe
  416ade:	fst    DWORD PTR [edi]
  416ae0:	hlt    
  416ae1:	inc    eax
  416ae2:	add    BYTE PTR [ebp+0x76],dh
  416ae5:	pop    edi
  416ae6:	or     eax,0xfb39e18d
  416aeb:	call   ebx
  416aed:	fmul   QWORD PTR ds:0x1d54183
  416af3:	jne    0x416ae2
  416af5:	pop    ebx
  416af6:	add    DWORD PTR [ebp-0x4ca3f],ecx
  416afc:	xchg   ebx,eax
  416afd:	push   esi
  416afe:	mov    cl,BYTE PTR [edi+0x38]
  416b01:	push   esi
  416b02:	in     eax,0xb9
  416b04:	pop    ecx
  416b05:	icebp  
  416b06:	cli    
  416b07:	push   0x2e
  416b09:	or     BYTE PTR [ecx-0x50f2cd2],0x51
  416b10:	jno    0x416b53
  416b12:	xor    al,0xfe
  416b14:	pop    ebp
  416b15:	loope  0x416abc
  416b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b18:	mov    bl,0xf0
  416b1a:	cli    
  416b1b:	jne    0x416b1d
  416b1d:	add    al,bl
  416b1f:	or     BYTE PTR [ecx-0x50f3e6c],0x51
  416b26:	pop    ds
  416b27:	add    al,0xc6
  416b29:	push   eax
  416b2a:	cmp    esi,eax
  416b2c:	jo     0x416b16
  416b2e:	rcr    DWORD PTR [ecx],cl
  416b30:	in     al,0x15
  416b32:	jl     0x416b3c
  416b34:	out    0x2,eax
  416b36:	jg     0x416b03
  416b38:	xchg   BYTE PTR [ebp-0x60],al
  416b3b:	xor    eax,ebp
  416b3d:	xor    DWORD PTR [edi+ebp*8-0x5e2a6af6],0xffffff8c
  416b45:	xor    ebp,0x3c
  416b48:	jp     0x416b47
  416b4a:	push   esi
  416b4b:	mov    eax,ds:0x56608703
  416b50:	ja     0x416b4f
  416b52:	mov    ah,bh
  416b54:	mov    DWORD PTR [edi],0xfe18cd4c
  416b5a:	jp     0x416aff
  416b5c:	mov    cs,WORD PTR [ebx+0x7d]
  416b5f:	stc    
  416b60:	xchg   DWORD PTR [ebx+ebp*2],ebx
  416b63:	xchg   ebx,eax
  416b64:	jp     0x416bb7
  416b66:	push   es
  416b67:	xor    BYTE PTR [edi+0x7a84c183],al
  416b6d:	std    
  416b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b6f:	vmwrite edx,DWORD PTR [ebx]
  416b72:	sub    DWORD PTR [ebp-0x3f],ecx
  416b75:	call   FWORD PTR [ecx-0x5e]
  416b78:	or     cl,BYTE PTR [ebp-0x2861934]
  416b7e:	pop    esi
  416b7f:	push   ebp
  416b80:	gs call 0x1706b86
  416b86:	add    al,0x0
  416b88:	cs dec esp
  416b8a:	xchg   al,bh
  416b8c:	sbb    ch,BYTE PTR [ebp+0x3398c5ff]
  416b92:	add    al,0xe9
  416b94:	(bad)  
  416b95:	jmp    0xa46d:0xcaaaf8d7
  416b9c:	cli    
  416b9d:	and    cl,BYTE PTR [esi+0x7018fd73]
  416ba3:	add    ch,dl
  416ba5:	bound  edi,QWORD PTR [edi]
  416ba7:	inc    ebx
  416ba8:	jmp    0x162:0xd5ef6c60
  416baf:	xor    DWORD PTR [ebp-0x1dc1797d],edx
  416bb5:	jp     0x416b43
  416bb7:	inc    esi
  416bb8:	xlat   BYTE PTR ds:[ebx]
  416bb9:	cmc    
  416bba:	pop    es
  416bbb:	push   0xffffffe5
  416bbd:	or     DWORD PTR [edx+eax*8-0x26],esi
  416bc1:	fxch   st(6)
  416bc3:	mov    esp,0x6dd66b76
  416bc8:	aam    0x80
  416bca:	sub    eax,0xcf444c00
  416bcf:	lods   al,BYTE PTR ds:[esi]
  416bd0:	lock or edi,esp
  416bd3:	mov    WORD PTR [ebp+0x54543c81],es
  416bd9:	ins    BYTE PTR es:[edi],dx
  416bda:	scas   al,BYTE PTR es:[edi]
  416bdb:	or     DWORD PTR [ecx-0x7a],edx
  416bde:	out    0x3,eax
  416be0:	aad    0x6a
  416be2:	adc    al,0x64
  416be4:	add    al,0xd4
  416be6:	cmp    eax,0x6500006c
  416beb:	je     0x416b7b
  416bed:	jns    0x416c3b
  416bef:	jb     0x416c5b
  416bf1:	jns    0x416c45
  416bf3:	div    BYTE PTR [ecx]
  416bf5:	xchg   DWORD PTR [esi-0x6978e8ff],edx
  416bfb:	pop    ecx
  416bfc:	pop    ss
  416bfd:	ins    BYTE PTR es:[edi],dx
  416bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bff:	sub    bh,ah
  416c01:	add    ebx,DWORD PTR [ebp+esi*8+0x36]
  416c05:	lea    ebp,ds:0x2d4fd481
  416c0b:	hlt    
  416c0c:	pop    es
  416c0d:	add    al,0xd5
  416c0f:	xchg   BYTE PTR [esi+0x79],al
  416c12:	mov    DWORD PTR [esi+edx*4-0x19011f95],edx
  416c19:	add    ecx,DWORD PTR [ebp+eax*8+0x46]
  416c1d:	test   DWORD PTR ds:0x89d4b708,ecx
  416c23:	push   0xffffff94
  416c25:	or     edi,ebp
  416c27:	mov    dh,0x1d
  416c29:	jns    0x416c0b
  416c2b:	jle    0x416c3c
  416c2d:	test   eax,ebx
  416c2f:	or     BYTE PTR [esp+ecx*1-0x30],bh
  416c33:	hlt    
  416c34:	adc    cl,BYTE PTR [ebp+0x100022e]
  416c3a:	jbe    0x416c48
  416c3c:	add    cl,ch
  416c3e:	dec    ecx
  416c3f:	not    bl
  416c41:	rcl    DWORD PTR [esi+0x51e9000b],1
  416c47:	ins    BYTE PTR es:[edi],dx
  416c48:	std    
  416c49:	out    0x22,al
  416c4b:	sar    esp,1
  416c4d:	into   
  416c4e:	add    BYTE PTR [eax],al
  416c50:	sbb    eax,0x82e8fd89
  416c55:	mov    edx,0xa0824c5
  416c5a:	jmp    0xe8acbc82
  416c5f:	or     bl,bh
  416c61:	or     DWORD PTR [eax],eax
  416c63:	jb     0x416c4b
  416c65:	mov    dh,bh
  416c67:	sahf   
  416c68:	jnp    0x416c6e
  416c6a:	(bad)  
  416c6b:	sub    al,0xe4
  416c6d:	push   es
  416c6e:	jmp    0xbea3f14a
  416c73:	repz (bad) 
  416c75:	or     ebp,edi
  416c77:	hlt    
  416c78:	mov    dh,0xd8
  416c7a:	push   ebp
  416c7b:	jbe    0x416cb0
  416c7d:	add    ch,al
  416c7f:	xsaves [ebp+edi*8+0x6a]
  416c84:	scas   al,BYTE PTR es:[edi]
  416c85:	push   0x74
  416c87:	repnz pop ecx
  416c89:	into   
  416c8a:	pop    es
  416c8b:	mov    edi,0xe91cd9ae
  416c90:	(bad)  
  416c91:	pusha  
  416c92:	push   cs
  416c93:	push   0xffffff8e
  416c95:	ins    BYTE PTR es:[edi],dx
  416c96:	jae    0x416c7f
  416c98:	xchg   esp,eax
  416c99:	(bad)  
  416c9a:	hlt    
  416c9b:	call   0x8cc97511
  416ca0:	jns    0x416d03
  416ca2:	loop   0x416c6d
  416ca4:	(bad)  
  416ca5:	or     ebp,edi
  416ca7:	xchg   esp,eax
  416ca8:	mov    fs,WORD PTR [ecx-0x21]
  416cab:	dec    edx
  416cac:	pop    ebp
  416cad:	ins    BYTE PTR es:[edi],dx
  416cae:	mov    ah,BYTE PTR [ecx+ebx*2+0xffff2d]
  416cb5:	add    bl,cl
  416cb7:	call   0xe20d6670
  416cbc:	jg     0x416d3b
  416cbe:	ret    
  416cbf:	or     al,0xb
  416cc1:	test   bl,bh
  416cc3:	jecxz  0x416cbf
  416cc5:	(bad)  
  416cc6:	mov    ebx,0x1ffdd5b
  416ccb:	stc    
  416ccc:	imul   edi,edi,0xe8055b8b
  416cd2:	jp     0x416ccb
  416cd4:	cli    
  416cd5:	inc    DWORD PTR [ecx]
  416cd7:	into   
  416cd8:	or     dl,BYTE PTR [ebp-0x66f08c4]
  416cde:	dec    ebx
  416cdf:	loope  0x416d31
  416ce1:	mov    edi,DWORD PTR [eax]
  416ce3:	(bad)  
  416ce4:	in     al,dx
  416ce5:	and    bh,bh
  416ce7:	bound  ecx,QWORD PTR [ecx]
  416ce9:	inc    eax
  416ceb:	and    al,0xf6
  416ced:	inc    ebp
  416cee:	pusha  
  416cef:	or     ecx,DWORD PTR [ecx-0x75c1b7bb]
  416cf5:	inc    ebp
  416cf6:	pusha  
  416cf7:	ds cld 
  416cf9:	jne    0x416d33
  416cfb:	sub    BYTE PTR [ecx-0x4],al
  416cfe:	sbb    al,0xd
  416d00:	add    BYTE PTR [eax],al
  416d02:	inc    eax
  416d03:	adc    bl,bh
  416d05:	adc    eax,0x3ffb54
  416d0a:	mov    cl,0xcd
  416d0c:	jae    0x416d1b
  416d0e:	scas   eax,DWORD PTR es:[edi]
  416d0f:	aad    0xfa
  416d11:	jmp    0x416cde
  416d13:	loopne 0x416d25
  416d15:	loopne 0x416d48
  416d17:	dec    ebp
  416d18:	std    
  416d19:	jmp    0xe841:0x949b0000
  416d20:	jne    0x416d6c
  416d22:	cmc    
  416d23:	data16 ja 0x416d70
  416d26:	jecxz  0x416d13
  416d28:	add    cl,BYTE PTR [ecx+eiz*2-0x3fe40308]
  416d2f:	data16 aad 0xe9
  416d32:	mov    esi,0x11ae4ff5
  416d37:	mov    BYTE PTR [eax],bl
  416d39:	out    0x7,ax
  416d3c:	pop    eax
  416d3d:	lods   eax,DWORD PTR ds:[esi]
  416d3e:	ins    DWORD PTR es:[edi],dx
  416d3f:	push   eax
  416d40:	ret    0x8e5
  416d43:	(bad)  
  416d44:	adc    BYTE PTR [edi+0x1],bl
  416d47:	call   0x457b43
  416d4c:	out    0x99,al
  416d4e:	jge    0x416d10
  416d50:	shl    ch,cl
  416d52:	inc    ebx
  416d53:	mov    DWORD PTR [ecx+ebp*4+0x5d5103f],edx
  416d5a:	mov    esp,ebp
  416d5c:	push   esp
  416d5d:	push   esi
  416d5e:	cmp    edi,edi
  416d60:	xor    BYTE PTR [edx-0x2e],0x88
  416d64:	sbb    BYTE PTR [ebx-0x35],ch
  416d67:	push   esp
  416d68:	push   es
  416d69:	jnp    0x416da2
  416d6b:	add    al,0xd5
  416d6d:	jb     0x416da1
  416d6f:	(bad)  
  416d70:	mov    eax,ds:0x94940674
  416d75:	inc    ebx
  416d76:	imul   edx,DWORD PTR [esi-0x41],0x77
  416d7a:	mov    BYTE PTR [ebx+0x31],al
  416d7d:	add    cl,BYTE PTR [ecx+0x4c0000f9]
  416d83:	sub    eax,0x56ede868
  416d88:	add    DWORD PTR [eax],eax
  416d8a:	pop    ecx
  416d8b:	xor    dh,al
  416d8d:	or     al,0xe7
  416d8f:	xor    ch,BYTE PTR [esi+eiz*4-0x2c]
  416d93:	jb     0x416d96
  416d95:	sbb    BYTE PTR [eax-0x168bff45],0xdb
  416d9c:	jns    0x416df4
  416d9e:	jg     0x416e11
  416da0:	mov    BYTE PTR [ebx-0x2],al
  416da3:	sub    DWORD PTR [ecx+0x7],0x840172d9
  416daa:	adc    eax,0xfc6b9c09
  416daf:	inc    edi
  416db0:	jb     0x416d7a
  416db2:	stc    
  416db3:	xchg   ebx,eax
  416db4:	sub    BYTE PTR [eax],ah
  416db6:	aad    0x9
  416db8:	push   cs
  416db9:	add    ebx,DWORD PTR [ecx+edi*1+0x28]
  416dbd:	imul   esp,ebp,0x928a2912
  416dc3:	mov    DWORD PTR [ecx],ecx
  416dc5:	add    edi,DWORD PTR [eax-0x6dbb18f6]
  416dcb:	cli    
  416dcc:	icebp  
  416dcd:	push   edx
  416dce:	push   0x72
  416dd0:	out    dx,eax
  416dd1:	inc    edx
  416dd2:	mov    bh,0x12
  416dd4:	loop   0x416e17
  416dd6:	or     eax,0x2f6d2450
  416ddb:	and    eax,0x9d504c5
  416de0:	out    dx,al
  416de1:	jl     0x416e3c
  416de3:	or     ah,bh
  416de5:	add    eax,DWORD PTR [eax]
  416de7:	add    bh,ch
  416de9:	or     DWORD PTR [ecx+0x3],eax
  416dec:	pop    esi
  416ded:	int    0xa1
  416def:	aam    0x5d
  416df1:	arpl   WORD PTR [edi-0x18f6434a],cx
  416df7:	jg     0x416d8e
  416df9:	fidiv  WORD PTR [edx+ecx*4-0x6a]
  416dfd:	bound  ebp,QWORD PTR [edi-0x80]
  416e00:	push   es
  416e01:	push   esi
  416e02:	jge    0x416e79
  416e04:	inc    eax
  416e05:	mov    fs,WORD PTR [edi+0x67cfc8f0]
  416e0b:	jbe    0x416e3d
  416e0d:	or     ah,bh
  416e0f:	add    ebp,DWORD PTR [ebx+0x21fa503f]
  416e15:	addr16 push esi
  416e17:	xchg   DWORD PTR [esi+0x1030b759],edx
  416e1d:	mov    edi,0x5656869d
  416e22:	cmp    eax,0xffba0075
  416e27:	pop    edi
  416e28:	add    dh,BYTE PTR [edi-0x3]
  416e2b:	aam    0x46
  416e2d:	sti    
  416e2e:	aas    
  416e2f:	jmp    0xe7b5b79f
  416e34:	mov    al,ds:0x6db2f4ca
  416e39:	sbb    BYTE PTR [ecx+0x7714694],cl
  416e3f:	push   0xffffffc3
  416e41:	or     al,BYTE PTR [edx]
  416e43:	jne    0x416e14
  416e45:	nop
  416e46:	jbe    0x416e1d
  416e48:	std    
  416e49:	pop    esp
  416e4a:	jae    0x416e46
  416e4c:	add    BYTE PTR [eax],al
  416e4e:	cmp    eax,0xc92f88fc
  416e53:	repz add ebp,DWORD PTR [edx+0x16]
  416e57:	push   cs
  416e58:	push   eax
  416e59:	fs pop ebx
  416e5b:	ins    DWORD PTR es:[edi],dx
  416e5c:	push   eax
  416e5d:	rol    DWORD PTR [ecx+0x1c6fda8],0xdb
  416e64:	out    dx,eax
  416e65:	mov    esi,0x291371d3
  416e6a:	shl    DWORD PTR [eax],1
  416e6c:	cmc    
  416e6d:	xor    eax,0x9e7b89b0
  416e72:	mov    WORD PTR [ebx+eax*2-0x5e],cs
  416e76:	xlat   BYTE PTR ds:[ebx]
  416e77:	adc    al,0x83
  416e79:	ret    0x9d7
  416e7c:	add    BYTE PTR [ebx],al
  416e7e:	jmp    0x3cdab215
  416e83:	dec    bp
  416e85:	jle    0x416e5a
  416e87:	add    DWORD PTR [esi],edx
  416e89:	sub    ecx,edx
  416e8b:	mov    ah,al
  416e8d:	fnstsw WORD PTR [eax+ecx*1]
  416e90:	pop    eax
  416e91:	iret   
  416e92:	pop    edi
  416e93:	retf   0xeecf
  416e96:	jo     0x416e62
  416e98:	jecxz  0x416e3b
  416e9a:	ror    DWORD PTR [ebp+0x9d6e9a8],1
  416ea0:	dec    eax
  416ea1:	add    BYTE PTR [eax+0x13],cl
  416ea4:	mov    BYTE PTR [ebp-0x35],0x41
  416ea8:	out    0xfc,al
  416eaa:	in     al,dx
  416eab:	or     DWORD PTR [eax],eax
  416ead:	lea    edi,[ecx]
  416eaf:	mov    edx,0xdae7
  416eb4:	ror    BYTE PTR ds:0x93bc8b00,1
  416eba:	jno    0x416eac
  416ebc:	outs   dx,DWORD PTR ds:[esi]
  416ebd:	fdiv   st(2),st
  416ebf:	je     0x416e9a
  416ec1:	fnsave [eax-0x14]
  416ec4:	inc    bx
  416ec6:	push   ebx
  416ec7:	push   ebx
  416ec8:	in     al,0x27
  416eca:	(bad)  
  416ecb:	inc    ebx
  416ecd:	(bad)  
  416ece:	clc    
  416ecf:	add    ebx,0xb
  416ed2:	jno    0x416f2a
  416ed4:	and    DWORD PTR [ebx+0x5],edx
  416ed7:	push   eax
  416ed8:	xor    DWORD PTR [ebx-0x13],edx
  416edb:	push   eax
  416edc:	xchg   esp,eax
  416edd:	out    0x1d,al
  416edf:	add    BYTE PTR [esp+eiz*8+0x70],bh
  416ee3:	lock pop es
  416ee5:	test   BYTE PTR [ebp+edi*2+0x1ea6c68c],0x6c
  416eed:	or     DWORD PTR [edi-0x1],edi
  416ef0:	inc    ebx
  416ef1:	arpl   WORD PTR [ecx],cx
  416ef3:	mov    edx,DWORD PTR [ecx]
  416ef5:	retw   
  416ef7:	inc    ebp
  416ef8:	dec    ebx
  416ef9:	push   ebp
  416efa:	out    0xac,al
  416efc:	ins    BYTE PTR es:[edi],dx
  416efd:	or     DWORD PTR [eax],eax
  416eff:	push   edi
  416f00:	push   esp
  416f01:	dec    esi
  416f02:	add    eax,0x40e43c00
  416f07:	in     al,dx
  416f08:	(bad)  
  416f09:	cmp    al,BYTE PTR ds:0x500c7483
  416f0f:	push   0xffffffc6
  416f11:	inc    eax
  416f12:	push   eax
  416f13:	call   0x3c4a02
  416f18:	add    BYTE PTR [eax],al
  416f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f1b:	cmc    
  416f1c:	jle    0x416f1d
  416f1e:	aad    0x71
  416f20:	clc    
  416f21:	pop    es
  416f22:	adc    bh,BYTE PTR [esi]
  416f24:	popa   
  416f25:	call   0x42de48
  416f2a:	dec    esi
  416f2b:	sahf   
  416f2c:	popa   
  416f2d:	call   0x42aba1
  416f32:	push   esi
  416f33:	xor    al,0x71
  416f35:	or     eax,0xfd727d51
  416f3a:	loop   0x416f2b
  416f3c:	jo     0x416f3d
  416f3e:	data16 jbe 0x416f88
  416f41:	inc    ebx
  416f42:	into   
  416f43:	jb     0x416fc0
  416f45:	inc    ebx
  416f46:	into   
  416f47:	stos   DWORD PTR es:[edi],eax
  416f48:	iret   
  416f49:	pop    eax
  416f4a:	mov    WORD PTR [eax],?
  416f4c:	or     BYTE PTR [eax],al
  416f4e:	xor    ebp,eax
  416f50:	(bad)  
  416f51:	loop   0x416f8e
  416f53:	jmp    0x8b69:0x355ed1c6
  416f5a:	and    BYTE PTR [ebx+0x4a81437c],ah
  416f60:	aaa    
  416f61:	sbb    ebp,edx
  416f63:	jb     0x416fe3
  416f65:	lock push esi
  416f67:	dec    esp
  416f68:	jb     0x416f77
  416f6a:	pop    ecx
  416f6b:	or     BYTE PTR [ecx-0x3],dh
  416f6e:	jp     0x416f74
  416f70:	pop    esp
  416f71:	rcr    edx,1
  416f73:	jb     0x416f76
  416f75:	std    
  416f76:	loopne 0x416ff6
  416f78:	fistp  DWORD PTR [ecx+0xb]
  416f7b:	and    BYTE PTR [eax+esi*2+0x0],bl
  416f7f:	add    BYTE PTR [eax+0x7b],bl
  416f82:	jb     0x416f05
  416f84:	dec    ebp
  416f85:	jno    0x416f7f
  416f87:	pop    es
  416f88:	mov    ds:0xd51bdc7a,eax
  416f8d:	jb     0x416fed
  416f8f:	or     eax,0x7371da56
  416f94:	fld    TBYTE PTR [eax+ecx*8+0x52098ef4]
  416f9b:	pop    es
  416f9c:	sbb    ecx,esi
  416f9e:	popa   
  416f9f:	add    ebp,DWORD PTR ds:0xd503f45f
  416fa5:	mov    esp,ecx
  416fa7:	outs   dx,BYTE PTR ds:[esi]
  416fa8:	or     bl,ch
  416faa:	bound  eax,QWORD PTR [ebx-0x85ea382]
  416fb0:	pusha  
  416fb1:	fs mov esp,0x35ddf05f
  416fb7:	fucomp st(1)
  416fb9:	mov    bh,0xe
  416fbb:	cmp    dh,bl
  416fbd:	arpl   WORD PTR [esi],bx
  416fbf:	mov    BYTE PTR ds:0xbc437c14,dl
  416fc5:	mov    ?,WORD PTR [esi+edi*2+0x6b0b87b9]
  416fcc:	inc    edx
  416fcd:	jbe    0x417026
  416fcf:	add    al,0xd5
  416fd1:	or     DWORD PTR [edi+eax*1-0x7],esp
  416fd5:	mov    ecx,0x9d7057e
  416fda:	out    0x70,eax
  416fdc:	(bad)  
  416fdd:	dec    ecx
  416fde:	hlt    
  416fdf:	ret    
  416fe0:	call   0x9500:0xdaf5c
  416fe7:	retf   0x6761
  416fea:	cs inc edi
  416fec:	(bad)  
  416fed:	daa    
  416fee:	test   eax,0x550426fd
  416ff3:	and    eax,0xa144ac7
  416ff8:	out    0xf6,eax
  416ffa:	mov    ds:0x981465ba,al
  416fff:	(bad)  
  417000:	out    0xd8,al
  417002:	pop    ecx
  417003:	std    
  417004:	scas   al,BYTE PTR es:[edi]
  417005:	push   ss
  417006:	xchg   ebp,eax
  417007:	or     DWORD PTR [edi+0x2f],esp
  41700a:	xor    eax,0xd5042a4c
  41700f:	fsubr  st(0),st
  417011:	pop    ebx
  417012:	xchg   DWORD PTR [ebx+0x0],esp
  417015:	jbe    0x416fbb
  417017:	(bad)  
  417018:	shl    ch,0xc7
  41701b:	dec    esp
  41701c:	add    ecx,DWORD PTR [ebp-0x71]
  41701f:	enter  0x10ff,0x6
  417023:	and    al,0x0
  417025:	das    
  417026:	fisubr DWORD PTR [ecx-0x3a]
  417029:	stos   BYTE PTR es:[edi],al
  41702a:	(bad)  
  41702b:	bound  edx,QWORD PTR [esi+0x46]
  41702e:	jmp    0x89c4:0xd6a91245
  417035:	lods   eax,DWORD PTR ds:[esi]
  417036:	mov    edx,0x65df810d
  41703b:	mov    BYTE PTR [esi-0x13],ah
  41703e:	(bad)  
  41703f:	xchg   ecx,eax
  417040:	inc    esi
  417041:	icebp  
  417042:	pop    eax
  417043:	int    0x23
  417045:	loope  0x417095
  417047:	int3   
  417048:	push   es
  417049:	bound  eax,QWORD PTR [eax]
  41704b:	add    BYTE PTR [edi],bl
  41704d:	dec    eax
  41704e:	or     cl,ch
  417050:	stos   DWORD PTR es:[edi],eax
  417051:	xchg   ecx,eax
  417052:	in     al,dx
  417053:	push   0xe8fee235
  417058:	(bad)  
  417059:	mov    DWORD PTR [ebx],edi
  41705b:	or     DWORD PTR [edi],ebx
  41705d:	leave  
  41705e:	(bad)  
  41705f:	call   0x9e7747e1
  417064:	(bad)  
  417065:	dec    esp
  417066:	inc    ecx
  417067:	jmp    0xb154d619
  41706c:	loopne 0x417037
  41706e:	jmp    FWORD PTR [eax-0x4d]
  417071:	imul   eax,esi,0x7309d12a
  417077:	ror    DWORD PTR [esi],cl
  417079:	aam    0xfc
  41707b:	scas   al,BYTE PTR es:[edi]
  41707c:	in     eax,0x8d
  41707e:	rcr    BYTE PTR ds:0x85034cc6,0xc
  417085:	leave  
  417086:	inc    eax
  417088:	daa    
  417089:	and    eax,DWORD PTR [eax]
  41708b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41708c:	shr    DWORD PTR [ecx-0x3a],cl
  41708f:	add    bh,ch
  417091:	or     eax,0xfbbb56fd
  417096:	fist   DWORD PTR [edx]
  417098:	cld    
  417099:	or     eax,0x36b84589
  41709e:	mov    al,BYTE PTR [ebp-0x5275c]
  4170a4:	pop    esp
  4170a5:	add    DWORD PTR ds:[eax],esp
  4170a8:	cld    
  4170a9:	add    eax,0x69bff68
  4170ae:	add    bh,bh
  4170b0:	add    BYTE PTR [eax],al
  4170b2:	inc    ecx
  4170b3:	pop    esi
  4170b4:	mov    esp,0x5ed74
  4170b9:	mov    DWORD PTR [ecx],ebp
  4170bb:	repnz cli 
  4170bd:	adc    eax,0x3ffb50
  4170c2:	jno    0x41708a
  4170c4:	jae    0x4170d9
  4170c6:	and    esp,ebx
  4170c8:	or     BYTE PTR [eax+0x6afad9ea],0xbc
  4170cf:	cmp    eax,0x3b415fc
  4170d4:	inc    eax
  4170d5:	add    BYTE PTR [edi],ch
  4170d7:	leave  
  4170d8:	or     eax,DWORD PTR [ebx-0x21717]
  4170de:	mov    ebx,0x9f745b12
  4170e3:	mov    WORD PTR [ecx-0x50e851c],?
  4170e9:	adc    DWORD PTR [ebx-0x7e],edi
  4170ec:	sar    dh,0x34
  4170ef:	xor    al,BYTE PTR [edx]
  4170f1:	mov    BYTE PTR [edx+0x3204e85e],dh
  4170f7:	dec    eax
  4170f8:	push   es
  4170f9:	add    edi,esi
  4170fb:	xchg   edx,eax
  4170fc:	aam    0xfe
  4170fe:	cmp    esi,ecx
  417100:	out    0x15,eax
  417102:	ins    DWORD PTR es:[edi],dx
  417103:	or     eax,0x11d28300
  417108:	add    BYTE PTR [eax-0x7703cf2b],cl
  41710e:	nop
  41710f:	push   0x7c
  417111:	push   es
  417112:	dec    esi
  417113:	mov    cl,0x3b
  417115:	ret    0x0
  417118:	shl    DWORD PTR [edx-0x7e],1
  41711b:	xor    bl,BYTE PTR ds:[edi+0x2]
  41711f:	mov    al,0xd4
  417121:	mov    bl,0xfd
  417123:	mov    ch,0x9b
  417125:	pop    ecx
  417126:	mov    ecx,0xf59ac873
  41712b:	add    bh,al
  41712d:	xor    al,BYTE PTR [ecx+0x6a]
  417130:	xlat   BYTE PTR ds:[ebx]
  417131:	cdq    
  417132:	xlat   BYTE PTR ds:[ebx]
  417133:	push   cs
  417134:	out    dx,al
  417135:	ins    DWORD PTR es:[edi],dx
  417136:	xor    al,bh
  417138:	xchg   esp,eax
  417139:	cmp    al,0x3
  41713b:	mov    bl,BYTE PTR [ebx+0x10e7c76a]
  417141:	jae    0x417144
  417143:	add    BYTE PTR [edi-0x3f032e5f],al
  417149:	adc    ax,WORD PTR [eax-0x2b]
  41714d:	inc    ebx
  41714e:	cmp    al,0x81
  417150:	int    0xf
  417152:	jnp    0x41715a
  417154:	sar    BYTE PTR [ebp-0x1fa93ebd],cl
  41715a:	add    al,0x0
  41715c:	sub    DWORD PTR [eax+0x2c],esi
  41715f:	jle    0x41713a
  417161:	aas    
  417162:	xchg   ebp,eax
  417163:	rcl    BYTE PTR [esi-0x3f53e799],0x32
  41716a:	add    al,0x87
  41716c:	sbb    ebp,DWORD PTR [edi-0x78]
  41716f:	rol    BYTE PTR [ecx],0x12
  417172:	aad    0x4f
  417174:	and    BYTE PTR [eax+0x6e],0x13
  417178:	lea    esi,ds:0xffc1
  41717e:	pop    ecx
  41717f:	mov    dl,0xf8
  417181:	add    eax,0xb000305c
  417186:	aam    0x9
  417188:	stos   BYTE PTR es:[edi],al
  417189:	outs   dx,BYTE PTR ds:[esi]
  41718a:	jecxz  0x417191
  41718c:	sahf   
  41718d:	sbb    BYTE PTR [ebp+0x540426f6],al
  417193:	out    0xe2,eax
  417195:	add    eax,DWORD PTR [edi]
  417197:	dec    edx
  417198:	stos   BYTE PTR es:[edi],al
  417199:	jp     0x41716e
  41719b:	mov    WORD PTR [edi+0x6e],?
  41719e:	test   eax,0x850200f5
  4171a3:	pusha  
  4171a4:	aam    0x3f
  4171a6:	(bad)  
  4171a7:	leave  
  4171a8:	out    0x6e,al
  4171aa:	jecxz  0x41720c
  4171ac:	hlt    
  4171ad:	imul   esp,esi,0xffffffc9
  4171b0:	out    0x82,al
  4171b2:	(bad)  [eax+0x62]
  4171b5:	(bad)
  4171b8:	daa    
  4171b9:	test   ebp,0x25183db9
  4171bf:	mul    BYTE PTR [esi-0x1d18abfd]
  4171c5:	add    edx,DWORD PTR [esi+esi*4]
  4171c8:	jno    0x417229
  4171ca:	pop    edx
  4171cb:	ins    DWORD PTR es:[edi],dx
  4171cc:	lahf   
  4171cd:	add    al,0xd5
  4171cf:	or     DWORD PTR [eax+ecx*8-0x32],esp
  4171d3:	mov    edx,0x604d885b
  4171d8:	push   es
  4171d9:	outs   dx,BYTE PTR ds:[esi]
  4171da:	and    eax,0xd523e2f2
  4171df:	or     DWORD PTR [edi+0x6e],edi
  4171e2:	add    BYTE PTR [eax],al
  4171e4:	test   al,0xa
  4171e6:	out    0x6e,eax
  4171e8:	adc    ch,BYTE PTR es:[esi-0x18296139]
  4171ef:	add    edx,ebp
  4171f1:	pop    esi
  4171f2:	cld    
  4171f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f4:	out    0xc9,al
  4171f6:	out    0x86,al
  4171f8:	xchg   ebp,eax
  4171f9:	aad    0xf3
  4171fb:	js     0x417253
  4171fd:	ss mov ebp,0x72706d
  417203:	aad    0xd6
  417205:	or     DWORD PTR [eax],eax
  417207:	ret    0x1bd7
  41720a:	shl    BYTE PTR [eax-0x11fff9e9],0x88
  417211:	dec    edx
  417212:	dec    eax
  417213:	sbb    eax,0xea73c74f
  417218:	add    eax,0xe013c14a
  41721d:	rol    eax,0x13
  417220:	xlat   BYTE PTR ds:[ebx]
  417221:	rol    eax,0x21
  417224:	imul   ebx,ebx,0xfa816a08
  41722a:	jae    0x417216
  41722c:	in     al,0x49
  41722e:	rcr    DWORD PTR [ecx-0x174fb729],0x95
  417235:	or     al,0xb6
  417237:	test   eax,0xf373c6fe
  41723c:	fild   DWORD PTR ds:[eax]
  41723f:	cli    
  417240:	xchg   esi,eax
  417241:	dec    eax
  417242:	push   0xffffffd5
  417244:	push   ds
  417245:	dec    edx
  417246:	push   0xffffffd9
  417248:	add    BYTE PTR [eax],al
  41724a:	push   cs
  41724b:	dec    edx
  41724c:	or     eax,0x47d1d15e
  417251:	xchg   ebp,eax
  417252:	ror    BYTE PTR [ecx+0x9c2fce8],cl
  417258:	xor    DWORD PTR [ecx],ebp
  41725a:	adc    al,0xf4
  41725c:	sbb    esp,DWORD PTR [ecx-0x5ef00beb]
  417262:	adc    eax,0x860588bb
  417267:	xchg   ecx,eax
  417268:	mov    BYTE PTR [ecx],0xde
  41726b:	pop    esp
  41726c:	std    
  41726d:	out    0x86,al
  41726f:	lock (bad) 
  417271:	fisttp QWORD PTR [ebx+0x52c8706]
  417277:	pop    ebp
  417278:	adc    esi,ecx
  41727a:	call   0xf0417248
  41727f:	(bad)  
  417280:	or     ecx,DWORD PTR [ebp-0xb02647]
  417286:	test   eax,0x3336fc5d
  41728b:	neg    edi
  41728d:	adc    eax,0xd8f305ac
  417292:	xlat   BYTE PTR ds:[ebx]
  417293:	lds    edi,FWORD PTR [edi]
  417295:	leave  
  417296:	jle    0x41729e
  417298:	add    bh,bh
  41729a:	call   0x3d4076d0
  41729f:	push   es
  4172a0:	sti    
  4172a1:	xor    BYTE PTR [ebx-0x3ea3c09],dh
  4172a7:	add    eax,0xca07d8f3
  4172ac:	aas    
  4172ad:	ret    0x0
  4172b0:	sub    BYTE PTR [edx],cl
  4172b2:	push   ecx
  4172b3:	mov    esp,DWORD PTR [eax+0x4f30ec89]
  4172b9:	xor    al,0x54
  4172bb:	mov    ebx,DWORD PTR [ebp+0xde8d7e1]
  4172c1:	in     al,dx
  4172c2:	cli    
  4172c3:	(bad)  
  4172c4:	js     0x417290
  4172c6:	jae    0x4172fd
  4172c8:	push   ss
  4172c9:	sbb    DWORD PTR [ebx-0x18],ebx
  4172cc:	jg     0x4172ba
  4172ce:	cli    
  4172cf:	jmp    FWORD PTR [eax-0x36]
  4172d2:	jae    0x4172fd
  4172d4:	ret    
  4172d5:	xchg   esi,eax
  4172d6:	inc    DWORD PTR [edx+0x5710ae4]
  4172dc:	push   esi
  4172dd:	stc    
  4172de:	push   edi
  4172df:	jmp    0x4172a3
  4172e1:	sbb    al,ch
  4172e3:	adc    esp,0xfffffff5
  4172e6:	or     dl,BYTE PTR [ebp-0xc32403]
  4172ec:	das    
  4172ed:	jmp    0xf120c30d
  4172f2:	xor    eax,0x11b189ff
  4172f7:	inc    eax
  4172f8:	aad    0x72
  4172fa:	add    al,0x9
  4172fd:	or     DWORD PTR [ebp+0x3b],edi
  417300:	aad    0x3c
  417302:	sar    edi,0x73
  417305:	je     0x4172b4
  417307:	xor    DWORD PTR [edx+0x18870172],esi
  41730d:	scas   eax,DWORD PTR es:[edi]
  41730e:	sub    eax,0x5954e1c1
  417313:	mov    DWORD PTR [eax],eax
  417315:	add    BYTE PTR [ebx+0x7c],dl
  417318:	imul   edi,ebp,0x136976c0
  41731e:	ins    DWORD PTR es:[edi],dx
  41731f:	push   esi
  417320:	sar    edi,0x3b
  417323:	jl     0x417352
  417325:	shr    DWORD PTR [eax+0x650a5ea0],0x72
  41732c:	pop    esi
  41732d:	sub    esp,DWORD PTR cs:[esi]
  417330:	push   esp
  417331:	adc    BYTE PTR [eax-0x228c95a5],ah
  417337:	in     eax,dx
  417338:	mov    esi,0xbee7a5cf
  41733d:	or     ebp,DWORD PTR [edi+0x62]
  417340:	pop    ecx
  417341:	and    esi,edx
  417343:	jb     0x417346
  417345:	adc    DWORD PTR ds:0xdae96097,0xffffffef
  41734c:	out    0xe3,al
  41734e:	aad    0x96
  417350:	dec    esp
  417351:	std    
  417352:	pusha  
  417353:	push   cs
  417354:	imul   edx,DWORD PTR [ebx],0xffc1557d
  41735a:	add    al,0x33
  41735c:	leave  
  41735d:	pop    ebp
  41735e:	push   ds
  41735f:	sub    al,BYTE PTR [esi+0x8]
  417362:	aad    0x7c
  417364:	jle    0x417356
  417366:	out    0x32,al
  417368:	test   BYTE PTR [esi-0x24],bh
  41736b:	jno    0x41733f
  41736d:	or     al,0x48
  41736f:	xor    dh,BYTE PTR [edi+0x78]
  417372:	call   0x5e8e:0xd6626a09
  417379:	pop    es
  41737a:	add    BYTE PTR [eax],al
  41737c:	jge    0x41732d
  41737e:	aam    0x6a
  417380:	add    BYTE PTR [ebp+0x720cefa7],0xa6
  417387:	push   0x43635c70
  41738c:	loope  0x417358
  41738e:	in     eax,0xb2
  417390:	aam    0x88
  417392:	scas   eax,DWORD PTR es:[edi]
  417393:	add    eax,0x141106e6
  417398:	lods   eax,DWORD PTR ds:[esi]
  417399:	jo     0x417388
  41739b:	adc    cl,BYTE PTR ss:[eax+0x76d0128f]
  4173a2:	test   al,0x78
  4173a4:	cli    
  4173a5:	pop    esp
  4173a6:	push   0x63
  4173a8:	sar    DWORD PTR [ecx+0x5ce36b19],1
  4173ae:	fmul   QWORD PTR [ebx-0x3a]
  4173b1:	leave  
  4173b2:	out    0x80,al
  4173b4:	adc    eax,0x9383fed6
  4173b9:	adc    ch,al
  4173bb:	lock fsubr st,st(7)
  4173be:	cli    
  4173bf:	push   0xffffffcb
  4173c1:	pop    esp
  4173c2:	hlt    
  4173c3:	mov    ds:0x80e6c9e6,eax
  4173c8:	adc    eax,0xeab3e2d6
  4173cd:	outs   dx,BYTE PTR ds:[esi]
  4173ce:	(bad)  [edx-0x3a]
  4173d1:	or     ebp,edx
  4173d3:	ret    
  4173d4:	fimul  DWORD PTR [esi+0x5d9c5b1f]
  4173da:	push   ds
  4173db:	push   0x20
  4173dd:	pop    ebx
  4173de:	cld    
  4173df:	fwait
  4173e0:	add    BYTE PTR [eax],al
  4173e2:	out    0xc9,al
  4173e4:	out    0x35,al
  4173e6:	xchg   ebp,eax
  4173e7:	mov    ebx,0x8f0646a4
  4173ec:	or     eax,DWORD PTR [ecx+edi*4-0x2916ff86]
  4173f3:	or     DWORD PTR [ecx-0x7d],edx
  4173f6:	lods   al,BYTE PTR ds:[esi]
  4173f7:	nop
  4173f8:	sbb    DWORD PTR [edi-0x4],0x5c
  4173fc:	std    
  4173fd:	push   ebx
  4173fe:	sar    DWORD PTR [ecx+0x5b5c1de7],1
  417404:	std    
  417405:	bound  edi,QWORD PTR [edx]
  417407:	add    ecx,DWORD PTR [edx-0x3b758ed7]
  41740d:	in     eax,dx
  41740e:	push   cs
  41740f:	adc    dh,bh
  417411:	mov    dh,0xec
  417413:	jecxz  0x41739b
  417415:	fs gs pop esi
  417418:	std    
  417419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41741a:	xor    DWORD PTR [ebx],ecx
  41741c:	and    eax,0x30a1d6e9
  417421:	sbb    al,0xd9
  417423:	or     eax,ebp
  417425:	fistp  QWORD PTR [ebp+0x126afd5c]
  41742b:	push   edi
  41742c:	add    BYTE PTR [eax+0x6a],dh
  41742f:	push   ebx
  417430:	bound  sp,DWORD PTR [edx+0x53]
  417434:	data16 test al,0x91
  417437:	adc    DWORD PTR [esi+0x70],esp
  41743a:	xchg   edx,eax
  41743b:	sar    esp,cl
  41743d:	pop    esi
  41743e:	jl     0x4173d0
  417440:	inc    ebx
  417441:	loope  0x4173ce
  417443:	jle    0x4174b9
  417445:	dec    esi
  417446:	add    BYTE PTR [eax],al
  417448:	ins    BYTE PTR es:[edi],dx
  417449:	pop    esp
  41744a:	call   0xfd9df234
  41744f:	gs xchg ecx,eax
  417451:	(bad)  
  417452:	xor    dh,BYTE PTR [esi]
  417454:	ror    BYTE PTR [ecx],cl
  417456:	push   ss
  417457:	test   eax,0xce401ed6
  41745c:	(bad)  
  41745d:	or     DWORD PTR [ebx-0x38],esi
  417460:	cmp    eax,0xba68f7c7
  417465:	push   edx
  417466:	xor    BYTE PTR [esi+edx*8-0x3cff89f7],dl
  41746d:	leave  
  41746e:	inc    eax
  41746f:	clc    
  417470:	mov    WORD PTR [ecx],gs
  417472:	add    BYTE PTR [eax],al
  417474:	stos   DWORD PTR es:[edi],eax
  417475:	fwait
  417476:	icebp  
  417477:	mov    eax,0xfffda08c
  41747c:	and    ch,BYTE PTR [edi]
  41747e:	inc    ecx
  41747f:	hlt    
  417480:	cs xchg edi,eax
  417482:	xor    al,al
  417484:	(bad)  
  417485:	push   ds
  417486:	ret    0x6c04
  417489:	xchg   esi,eax
  41748a:	std    
  41748b:	jmp    0xc7e7:0x57503733
  417492:	out    0xaf,eax
  417494:	sub    ecx,esi
  417496:	cli    
  417497:	xor    eax,DWORD PTR [edi+0x35]
  41749a:	push   eax
  41749b:	jmp    FWORD PTR ds:0x402443df
  4174a1:	icebp  
  4174a2:	adc    BYTE PTR [ecx+eax*2+0x648afd46],bl
  4174a9:	test   ebx,edi
  4174ab:	inc    DWORD PTR [eax]
  4174ad:	add    BYTE PTR [eax],dh
  4174af:	daa    
  4174b0:	dec    edi
  4174b1:	push   ebx
  4174b2:	ret    
  4174b3:	lock adc al,cl
  4174b6:	add    DWORD PTR [esi-0x3],eax
  4174b9:	push   ebp
  4174ba:	(bad)  
  4174bb:	cmc    
  4174bc:	out    0xe9,eax
  4174be:	push   edi
  4174bf:	icebp  
  4174c0:	cli    
  4174c1:	cmp    edi,DWORD PTR [edi+0x77570d6a]
  4174c7:	(bad)  
  4174c8:	out    0xa2,eax
  4174ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174cb:	icebp  
  4174cc:	cli    
  4174cd:	mov    ebp,DWORD PTR [ebp+edi*4-0x4243ccfb]
  4174d4:	inc    edi
  4174d5:	xor    esp,DWORD PTR [edx-0x38b10d3]
  4174db:	cmp    esp,DWORD PTR [eax]
  4174dd:	pop    edi
  4174de:	in     al,0xd2
  4174e0:	sti    
  4174e1:	(bad)  
  4174e2:	jmp    0x4174bc
  4174e4:	mov    edi,0x7c59d574
  4174e9:	(bad)  
  4174ea:	scas   al,BYTE PTR es:[edi]
  4174eb:	xor    bl,bl
  4174ed:	pop    es
  4174ee:	push   cs
  4174ef:	jge    0x4174f4
  4174f1:	push   ebp
  4174f2:	stos   BYTE PTR es:[edi],al
  4174f3:	ds xor eax,0xd0631513
  4174f9:	cld    
  4174fa:	rcr    BYTE PTR [edx+0xb],0x40
  4174fe:	aad    0x3b
  417500:	adc    ebp,edi
  417502:	loopne 0x417566
  417504:	or     eax,DWORD PTR [eax-0x2b]
  417507:	jmp    0x417554
  417509:	call   0xfda6bc45
  41750e:	or     edi,DWORD PTR [ebx]
  417510:	lods   eax,DWORD PTR ds:[esi]
  417511:	cdq    
  417512:	add    BYTE PTR [eax],al
  417514:	push   0xffffff98
  417516:	sar    esp,1
  417518:	enter  0xf8a,0x40
  41751c:	aad    0x53
  41751e:	inc    ecx
  41751f:	pop    esi
  417520:	mov    dl,0xcb
  417522:	retf   0xa0c0
  417525:	fist   DWORD PTR [edi-0x7f]
  417528:	xor    DWORD PTR [edi-0x2e],ecx
  41752b:	push   ebp
  41752c:	mov    ds:0x24896beb,al
  417531:	fmul   QWORD PTR [ecx-0x17]
  417534:	xchg   edx,eax
  417535:	cld    
  417536:	add    edx,DWORD PTR [ebp-0x7a]
  417539:	fild   QWORD PTR ds:0xedec0fd
  41753f:	inc    eax
  417540:	aad    0xe5
  417542:	inc    ebx
  417543:	jle    0x417518
  417545:	arpl   WORD PTR [ecx+0x29],cx
  417548:	std    
  417549:	retf   
  41754a:	xor    dh,BYTE PTR [ecx+edi*4-0x39]
  41754e:	push   cs
  41754f:	add    bl,cl
  417551:	mov    ds:0xfa63b01,al
  417556:	add    al,0x0
  417558:	push   0x602fd95c
  41755d:	bound  eax,QWORD PTR [ecx]
  41755f:	mov    ebx,DWORD PTR [eax]
  417561:	or     bh,BYTE PTR [ebx]
  417563:	aam    0x5d
  417565:	into   
  417566:	out    dx,al
  417567:	fld    st(3)
  417569:	jo     0x41754b
  41756b:	add    al,0xd5
  41756d:	or     DWORD PTR [esp+eax*2+0x26],esp
  417571:	sub    eax,0xa86c0fd
  417576:	jae    0x417578
  417578:	add    BYTE PTR [eax],al
  41757a:	jmp    0xee8e:0xbef10ece
  417581:	out    0x47,al
  417583:	cdq    
  417584:	call   0xaff69e4f
  417589:	inc    ecx
  41758a:	(bad)  [ecx]
  41758c:	aas    
  41758d:	icebp  
  41758e:	mov    cl,0x9
  417590:	out    0x66,eax
  417592:	(bad)  
  417593:	mov    eax,ds:0x1a6ac3dc
  417598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417599:	pop    edx
  41759a:	outs   dx,DWORD PTR ds:[esi]
  41759b:	pop    eax
  41759c:	cmp    al,0x4c
  41759e:	ins    BYTE PTR es:[edi],dx
  41759f:	pop    edx
  4175a0:	adc    al,0x7b
  4175a2:	inc    ecx
  4175a3:	mov    edx,0xac3d4471
  4175a8:	fwait
  4175a9:	inc    ax
  4175ab:	sub    BYTE PTR [eax+ebp*2],0x4c
  4175af:	into   
  4175b0:	fisubr WORD PTR [esi+0xd]
  4175b3:	hlt    
  4175b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b5:	js     0x41753d
  4175b7:	push   ebp
  4175b8:	retf   0x8541
  4175bb:	pop    eax
  4175bc:	cld    
  4175bd:	sti    
  4175be:	lods   al,BYTE PTR ds:[esi]
  4175bf:	or     edi,edi
  4175c1:	xchg   ebx,eax
  4175c2:	(bad)  
  4175c3:	or     edi,esp
  4175c5:	data16 xchg BYTE PTR ds:0xfe00345e,al
  4175cc:	jp     0x4175de
  4175ce:	xchg   ebp,eax
  4175cf:	or     DWORD PTR [eax],esp
  4175d1:	inc    ecx
  4175d2:	fisttp QWORD PTR [ecx]
  4175d4:	pushf  
  4175d5:	jp     0x4175d0
  4175d7:	mov    ecx,DWORD PTR [ebx+0x17]
  4175da:	test   BYTE PTR [edi+0x9dff],bh
  4175e0:	pop    edi
  4175e1:	xor    DWORD PTR [ecx-0x16abb0c8],ecx
  4175e7:	mov    dh,0x7e
  4175e9:	or     dl,BYTE PTR [eax]
  4175eb:	jmp    0xd24159c6
  4175f0:	push   cs
  4175f1:	add    eax,0xbe862a4e
  4175f6:	cld    
  4175f7:	mov    edi,0xd4fbfb33
  4175fc:	xchg   esi,eax
  4175fd:	push   edi
  4175fe:	test   BYTE PTR [ecx],ch
  417600:	mov    al,0xd
  417602:	add    ecx,esi
  417604:	in     al,dx
  417605:	xor    ecx,ebp
  417607:	push   ss
  417608:	test   DWORD PTR [ecx],edx
  41760a:	std    
  41760b:	hlt    
  41760c:	(bad)  
  41760d:	(bad)  
  41760e:	aas    
  41760f:	jmp    0xe9668ec7
  417614:	(bad)  
  417615:	fisubr DWORD PTR [edx]
  417617:	(bad)  
  417618:	jp     0x417629
  41761a:	mov    esp,DWORD PTR [eax*1+0x5d2c88ba]
  417621:	loope  0x417624
  417623:	shl    DWORD PTR ds:0xcbe9fd57,0x49
  41762a:	jae    0x41762d
  41762c:	mov    bl,0xca
  41762e:	shr    ebx,cl
  417630:	sub    cl,BYTE PTR [edi+esi*1]
  417633:	and    al,0x9d
  417635:	fimul  DWORD PTR [esi]
  417637:	ins    BYTE PTR es:[edi],dx
  417638:	pushf  
  417639:	aam    0xaa
  41763b:	cmp    esi,edx
  41763d:	mov    ah,0x5d
  41763f:	adc    bl,dh
  417641:	dec    ebx
  417642:	or     cl,ch
  417644:	add    BYTE PTR [eax],al
  417646:	les    ecx,FWORD PTR [ecx-0x17]
  417649:	pop    esp
  41764a:	jo     0x417626
  41764c:	fistp  DWORD PTR [esi-0x2e]
  41764f:	mov    eax,ds:0x60d6a913
  417654:	out    dx,eax
  417655:	bound  edx,QWORD PTR [esi-0x68ff0a9f]
  41765b:	in     al,dx
  41765c:	cli    
  41765d:	push   eax
  41765e:	mov    ds:0x16082159,eax
  417663:	or     edi,ebx
  417665:	je     0x41763f
  417667:	add    eax,0x29874fb
  41766c:	sti    
  41766d:	xor    ebx,esp
  41766f:	push   es
  417670:	in     al,0x15
  417672:	ins    BYTE PTR es:[edi],dx
  417673:	or     ch,BYTE PTR [edi]
  417675:	leave  
  417676:	aas    
  417677:	out    0xfa,al
  417679:	wbinvd 
  41767b:	into   
  41767c:	ror    DWORD PTR [esp+ebp*4],0x47
  417680:	mov    ah,ch
  417682:	das    
  417683:	mov    dl,0xb
  417685:	sbb    DWORD PTR [ecx-0x12],0xffffffff
  417689:	push   edx
  41768a:	retf   
  41768b:	in     al,dx
  41768c:	jo     0x417696
  41768e:	pop    es
  41768f:	xor    al,cl
  417691:	adc    eax,0x76fb0dac
  417696:	js     0x417669
  417698:	xlat   BYTE PTR ds:[ebx]
  417699:	jmp    FWORD PTR [edx-0x13]
  41769c:	rol    BYTE PTR [ebp-0x7cfa99d4],cl
  4176a2:	aaa    
  4176a3:	in     eax,dx
  4176a4:	in     al,0x88
  4176a6:	cmp    al,0xa
  4176a8:	add    BYTE PTR [ebx+0xa020000],cl
  4176ae:	mov    al,0x1
  4176b0:	lds    ebx,FWORD PTR [edi+0x668785f1]
  4176b6:	add    cl,BYTE PTR [ecx-0x3f0219ff]
  4176bc:	and    esp,DWORD PTR [eax+eax*8-0x3aa0677]
  4176c3:	jne    0x4176c1
  4176c5:	fiadd  WORD PTR [eax-0xc]
  4176c8:	(bad)  
  4176c9:	or     eax,0x5229ff50
  4176ce:	cld    
  4176cf:	adc    eax,0x3ff8bc
  4176d4:	aad    0xeb
  4176d6:	dec    eax
  4176d7:	or     DWORD PTR [esi],0x3d
  4176da:	add    eax,0x785c60fd
  4176df:	(bad)  
  4176e0:	in     eax,dx
  4176e1:	repnz addr16 std 
  4176e4:	(bad)  
  4176e6:	inc    eax
  4176e7:	je     0x4176c5
  4176e9:	out    0xbd,eax
  4176eb:	or     ecx,DWORD PTR [ebx+ecx*1]
  4176ee:	lock shr BYTE PTR [esi-0x45367fbf],1
  4176f5:	or     BYTE PTR [esi],al
  4176f7:	sub    DWORD PTR [esi-0x6df9119e],0xd6e165a6
  417701:	bound  eax,QWORD PTR [ecx]
  417703:	jmp    0x2a958d2
  417708:	aam    0x62
  41770a:	add    DWORD PTR [ebx-0x2e],esi
  41770d:	mov    ds:0xfbc7,eax
  417712:	adc    DWORD PTR [esp+eax*1],ecx
  417715:	add    BYTE PTR [edx-0x4b],bh
  417718:	paddw  mm5,mm3
  41771b:	outs   dx,BYTE PTR ds:[esi]
  41771c:	bound  esi,QWORD PTR [esi]
  41771e:	push   0x74
  417720:	xchg   eax,eax
  417722:	jmp    0x5b0afd86
  417727:	loopne 0x417707
  417729:	sti    
  41772a:	aad    0x1e
  41772c:	or     edi,ebp
  41772e:	shr    BYTE PTR [esi+0x5e6d1361],0xc1
  417735:	call   FWORD PTR [ebx+0x1c5944e7]
  41773b:	mov    eax,ds:0xd7800010
  417740:	outs   dx,DWORD PTR ds:[esi]
  417741:	xor    DWORD PTR [ecx],0x85c01667
  417747:	repnz mov cs,WORD PTR [ebx-0x23]
  41774b:	icebp  
  41774c:	mov    bl,0x4f
  41774e:	jg     0x417759
  417750:	pause  
  417752:	xchg   esi,eax
  417753:	pop    ebp
  417754:	mov    bh,0xeb
  417756:	(bad)  
  417757:	or     edi,esp
  417759:	jnp    0x41774b
  41775b:	(bad)  
  41775d:	dec    edx
  41775e:	xchg   esi,eax
  41775f:	pop    ebp
  417760:	call   0x264b4c68
  417765:	leave  
  417766:	loop   0x417761
  417768:	or     eax,0xa44cd504
  41776d:	pop    edi
  41776e:	pop    ebp
  41776f:	clc    
  417770:	out    0x3,al
  417772:	sar    dh,0x52
  417775:	stc    
  417776:	add    BYTE PTR [eax],al
  417778:	cli    
  417779:	or     DWORD PTR [esi],ebx
  41777b:	cmp    al,0xcc
  41777d:	dec    ecx
  41777e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41777f:	dec    esp
  417780:	xchg   edi,eax
  417781:	or     eax,0x654db8e7
  417786:	cwde   
  417787:	in     eax,dx
  417788:	(bad)  
  417789:	sbb    BYTE PTR [edi],ah
  41778b:	xchg   ecx,eax
  41778c:	push   ds
  41778d:	push   esi
  41778e:	cwde   
  41778f:	ret    
  417790:	sbb    ah,al
  417792:	in     al,dx
  417793:	bound  eax,QWORD PTR [esi]
  417795:	add    dh,BYTE PTR [eax-0x38]
  417798:	jle    0x4177ee
  41779a:	cld    
  41779b:	xor    eax,esi
  41779d:	leave  
  41779e:	out    0x5a,al
  4177a0:	(bad)  
  4177a1:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a3:	ret    
  4177a4:	fwait
  4177a5:	inc    edi
  4177a6:	jecxz  0x4177ab
  4177a8:	add    al,0xbf
  4177aa:	stc    
  4177ab:	ds stos DWORD PTR es:[edi],eax
  4177ad:	enter  0x2066,0x35
  4177b1:	dec    ebx
  4177b2:	sub    al,BYTE PTR [edx*8+0x7b1913bc]
  4177b9:	stc    
  4177ba:	lods   eax,DWORD PTR ds:[esi]
  4177bb:	(bad)  
  4177bc:	xor    bh,BYTE PTR [esi-0x8fd0773]
  4177c2:	es add al,0x55
  4177c5:	push   ss
  4177c6:	xchg   DWORD PTR [ecx-0x6c],ecx
  4177c9:	or     DWORD PTR [eax],eax
  4177cb:	jmp    0xbe2972fd
  4177d0:	scas   al,BYTE PTR es:[edi]
  4177d1:	push   esi
  4177d2:	std    
  4177d3:	ins    DWORD PTR es:[edi],dx
  4177d4:	xchg   esi,eax
  4177d5:	fisttp QWORD PTR [edi]
  4177d7:	es int 0x6d
  4177da:	(bad)  
  4177db:	stos   BYTE PTR es:[edi],al
  4177dc:	add    BYTE PTR [eax],al
  4177de:	(bad)  
  4177df:	and    DWORD PTR [edi-0x58],ecx
  4177e2:	(bad)  
  4177e3:	sbb    DWORD PTR [ebx],0xffca8c49
  4177e9:	xchg   esi,eax
  4177ea:	ja     0x4177e4
  4177ec:	fcmovnu st,st(3)
  4177ee:	xchg   esi,eax
  4177ef:	push   ebx
  4177f0:	xchg   DWORD PTR [ebp-0x5618020e],esp
  4177f6:	and    BYTE PTR [ebp-0x3],dl
  4177f9:	jb     0x4177d8
  4177fb:	or     eax,0xdfd6a916
  417800:	add    eax,0x54b90e62
  417805:	push   es
  417806:	(bad)  
  417808:	push   cs
  417809:	xchg   ebx,eax
  41780a:	sar    BYTE PTR [eax+ecx*4-0x76c408ff],1
  417811:	icebp  
  417812:	push   eax
  417813:	dec    edi
  417814:	std    
  417815:	pop    ebp
  417816:	fimul  DWORD PTR [eax+0x9a2defd]
  41781c:	xor    dh,BYTE PTR [edx-0xb07e8a0]
  417822:	xchg   esi,eax
  417823:	push   ebx
  417824:	push   esp
  417825:	(bad)  
  417826:	lahf   
  417827:	mov    esp,0xb59497fc
  41782c:	pop    edx
  41782d:	arpl   WORD PTR [eax-0x291a3e50],bx
  417833:	mov    dh,0x88
  417835:	xchg   ebp,eax
  417836:	pop    eax
  417837:	data16 adc al,0x3a
  41783a:	loopne 0x41786c
  41783c:	push   esi
  41783d:	shl    DWORD PTR [ebx],1
  41783f:	xor    eax,esi
  417841:	sub    al,BYTE PTR [eax]
  417843:	add    cl,dl
  417845:	(bad)  
  417846:	xor    al,BYTE PTR [eax]
  417848:	call   0xfc91:0x2c43c45d
  41784f:	adc    eax,0x3d5c64
  417854:	inc    esp
  417855:	push   esp
  417856:	ffree  st(6)
  417858:	das    
  417859:	pop    es
  41785a:	jno    0x417876
  41785c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785d:	lods   al,BYTE PTR ds:[esi]
  41785e:	repz dec DWORD PTR [ebx-0x128b3f7f]
  417865:	rol    DWORD PTR [eax],0xe4
  417868:	mov    dl,0x4c
  41786a:	std    
  41786b:	daa    
  41786c:	cmp    eax,0xc1c5fd48
  417871:	out    0xc5,al
  417873:	inc    ebx
  417874:	mov    esp,0xc1ff5607
  417879:	adc    dl,BYTE PTR [edx]
  41787b:	inc    eax
  41787c:	lods   al,BYTE PTR ds:[esi]
  41787d:	test   BYTE PTR [ecx+0x8],al
  417880:	outs   dx,DWORD PTR ds:[esi]
  417881:	fs jmp edi
  417884:	add    BYTE PTR [edi-0x16c30006],ch
  41788a:	adc    BYTE PTR [edx+eax*4],al
  41788d:	inc    esi
  41788e:	std    
  41788f:	mov    BYTE PTR [ecx-0x52],al
  417892:	jle    0x41788c
  417894:	jnp    0x4178d1
  417896:	add    DWORD PTR [ebx],esi
  417898:	sub    al,0xe5
  41789a:	ja     0x417827
  41789c:	loope  0x41790f
  41789e:	adc    DWORD PTR [eax+0x7c],eax
  4178a1:	xchg   ecx,eax
  4178a2:	push   eax
  4178a3:	push   ebx
  4178a4:	or     DWORD PTR [ecx+edi*8+0x51],eax
  4178a8:	add    BYTE PTR [eax],al
  4178aa:	mov    edi,0xbdec4982
  4178af:	pushf  
  4178b0:	push   eax
  4178b1:	mov    edi,0x48000632
  4178b6:	jecxz  0x417855
  4178b8:	xchg   BYTE PTR [ebp+0x44],bl
  4178bb:	jg     0x417916
  4178bd:	cld    
  4178be:	pop    ebx
  4178bf:	adc    BYTE PTR [edi-0x8],bh
  4178c2:	aad    0x7b
  4178c4:	(bad)  
  4178c5:	inc    eax
  4178c6:	sub    bl,BYTE PTR [ebp+0x1]
  4178c9:	push   ss
  4178ca:	xchg   ebp,eax
  4178cb:	pusha  
  4178cc:	push   ds
  4178cd:	push   ds
  4178ce:	repnz pusha 
  4178d0:	add    DWORD PTR [ebx-0x35],esi
  4178d3:	out    0xc5,eax
  4178d5:	sti    
  4178d6:	into   
  4178d7:	lahf   
  4178d8:	aad    0x2b
  4178da:	in     eax,dx
  4178db:	adc    al,0x78
  4178dd:	std    
  4178de:	cli    
  4178df:	fadd   st,st(5)
  4178e1:	pop    es
  4178e2:	scas   al,BYTE PTR es:[edi]
  4178e3:	pop    ds
  4178e4:	aad    0x20
  4178e6:	xchg   BYTE PTR [edi+0x6fe1438e],cl
  4178ec:	pusha  
  4178ed:	jae    0x4178c8
  4178ef:	adc    dl,dh
  4178f1:	pop    es
  4178f2:	es je  0x4178ad
  4178f5:	cld    
  4178f6:	inc    eax
  4178f7:	sbb    esp,DWORD PTR [eax-0x2a]
  4178fa:	pop    eax
  4178fb:	and    edx,ebp
  4178fd:	or     BYTE PTR [edx-0x4b17f68a],bh
  417903:	rcr    BYTE PTR [edi-0x3],1
  417906:	pop    esp
  417907:	sahf   
  417908:	or     ebp,edi
  41790a:	sub    BYTE PTR [ebx],cl
  41790c:	pusha  
  41790d:	adc    eax,DWORD PTR [eax]
  41790f:	add    BYTE PTR [ebp+0x5fffc136],bl
  417915:	sahf   
  417916:	or     DWORD PTR [ebp+0x2b],ebx
  417919:	jl     0x417965
  41791b:	ret    0x62d9
  41791e:	mov    eax,0x84126988
  417923:	cmp    esi,DWORD PTR [ebp-0x5f]
  417926:	sar    edi,0x6a
  417929:	mov    dh,0x1b
  41792b:	push   esi
  41792c:	and    esi,DWORD PTR [ebx]
  41792e:	inc    esi
  41792f:	inc    ecx
  417930:	aad    0xf8
  417932:	pop    esp
  417933:	adc    ebp,DWORD PTR ds:0xcaffc135
  417939:	pop    ebp
  41793a:	popa   
  41793b:	(bad)  
  41793c:	xchg   esi,eax
  41793d:	or     edi,esp
  41793f:	add    eax,esi
  417941:	repz mov es,WORD PTR [ebx+0x2b]
  417945:	push   ecx
  417946:	xchg   esi,eax
  417947:	mov    BYTE PTR ds:0xd646f7d6,dl
  41794d:	lods   eax,DWORD PTR gs:[esi]
  41794f:	ret    
  417950:	sbb    ch,BYTE PTR [ecx]
  417952:	sbb    ch,al
  417954:	adc    al,BYTE PTR [edi-0x14]
  417957:	arpl   WORD PTR [ebx],dx
  417959:	int    0xe6
  41795b:	add    al,0xab
  41795d:	push   eax
  41795e:	cld    
  41795f:	aas    
  417960:	out    0xc9,eax
  417962:	out    0xbd,al
  417964:	pop    edi
  417965:	(bad)  
  417966:	push   edx
  417967:	mov    ah,0xe9
  417969:	(bad)  
  41796a:	fimul  DWORD PTR [edx+0x3d10196]
  417970:	adc    bh,al
  417972:	cmp    dl,BYTE PTR [eax+eax*1]
  417975:	add    ch,dl
  417977:	or     edi,esp
  417979:	imul   ecx,edx,0x51
  41797c:	cs pop edi
  41797e:	and    eax,0xb80b9c51
  417983:	neg    BYTE PTR [edx-0x7]
  417986:	repnz or DWORD PTR [esp+eax*2+0x21],ebp
  41798b:	cld    
  41798c:	jle    0x417911
  41798e:	sub    ecx,edx
  417990:	out    0x5e,al
  417992:	es (bad) 
  417994:	std    
  417995:	clc    
  417996:	out    dx,al
  417997:	sti    
  417998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417999:	add    eax,edi
  41799b:	dec    ecx
  41799c:	add    al,BYTE PTR [edx]
  41799e:	inc    ebp
  41799f:	or     dh,BYTE PTR [eax+0x3409cd41]
  4179a5:	mov    eax,DWORD PTR [ecx-0xd483c74]
  4179ab:	or     edi,esi
  4179ad:	add    edx,ebp
  4179af:	popa   
  4179b0:	fbstp  TBYTE PTR [esi+0x58]
  4179b3:	push   eax
  4179b4:	jo     0x41797e
  4179b6:	inc    edx
  4179b7:	xchg   BYTE PTR [eax],al
  4179b9:	test   eax,0xe169fd2d
  4179be:	mov    ds:0x16fca7fc,eax
  4179c3:	push   eax
  4179c4:	das    
  4179c5:	test   eax,0xe8ffa5c1
  4179ca:	(bad)  
  4179cb:	mov    edx,0x1ac52c88
  4179d0:	rcr    BYTE PTR [edi],0x62
  4179d3:	cmp    DWORD PTR [ebx-0x80],0xffffff98
  4179d7:	int3   
  4179d8:	imul   ecx
  4179da:	add    BYTE PTR [eax],al
  4179dc:	cmp    al,0x82
  4179de:	inc    ebx
  4179df:	loope  0x417a30
  4179e1:	leave  
  4179e2:	add    esi,DWORD PTR [eax+0xd]
  4179e5:	cmp    BYTE PTR [ecx+0x4388daaa],cl
  4179eb:	xor    eax,0x260fcc5f
  4179f0:	or     eax,0xd6e9026c
  4179f5:	or     DWORD PTR [ebx-0x78fe55d7],eax
  4179fb:	lods   al,BYTE PTR ds:[esi]
  4179fc:	ss inc ebp
  4179fe:	inc    ebx
  4179ff:	inc    ebp
  417a00:	xlat   BYTE PTR ds:[ebx]
  417a01:	or     DWORD PTR [eax],eax
  417a03:	jmp    0xea35655f
  417a08:	push   ebx
  417a09:	sbb    dh,BYTE PTR [ebx-0x17]
  417a0c:	(bad)  
  417a0d:	mov    ah,0x69
  417a0f:	jmp    0x9a194559
  417a14:	sti    
  417a15:	(bad)  
  417a17:	daa    
  417a18:	popf   
  417a19:	dec    esi
  417a1a:	add    dh,dh
  417a1c:	cmp    BYTE PTR [edi],0x12
  417a1f:	test   eax,0xe80212d6
  417a24:	(bad)  
  417a25:	or     DWORD PTR ds:0xfd4edd65,ecx
  417a2b:	jmp    0x2cca832d
  417a30:	lds    ecx,FWORD PTR [edx+0x579800c0]
  417a36:	cmp    al,0x3d
  417a39:	inc    BYTE PTR [eax+0xb3cfb]
  417a3f:	mov    eax,DWORD PTR [eax]
  417a41:	add    cl,bh
  417a43:	std    
  417a44:	xchg   bl,dh
  417a46:	lds    eax,FWORD PTR [esi-0x17]
  417a49:	(bad)  
  417a4a:	icebp  
  417a4b:	mov    dl,0xe6
  417a4d:	or     DWORD PTR [edi-0xe76faca],esi
  417a53:	(bad)  [eax+0x417f545d]
  417a59:	lods   al,BYTE PTR ds:[esi]
  417a5a:	in     al,dx
  417a5b:	lods   al,BYTE PTR ds:[esi]
  417a5c:	jne    0x417a62
  417a5e:	xor    edi,0xfffffffa
  417a61:	adc    eax,0x3d5738
  417a66:	imul   eax,ebp,0x585850a
  417a6c:	add    BYTE PTR [eax],al
  417a6e:	mov    al,BYTE PTR [esi-0x57]
  417a71:	add    DWORD PTR [eax],ecx
  417a73:	cmp    cl,BYTE PTR [eax-0x3f79a3bb]
  417a79:	je     0x417af3
  417a7b:	add    DWORD PTR [ecx-0xc],0x15
  417a7f:	adc    al,BYTE PTR [eax]
  417a81:	add    BYTE PTR [ecx+eax*4-0x3cd6ebb7],ch
  417a88:	jae    0x417aa8
  417a8a:	daa    
  417a8b:	or     ecx,DWORD PTR [ecx-0x3642bab]
  417a91:	jne    0x417a4f
  417a93:	lods   al,BYTE PTR ds:[esi]
  417a94:	jo     0x417a82
  417a96:	cmp    ch,BYTE PTR [ebp-0x3437bf1]
  417a9c:	xor    DWORD PTR [esi-0x74fff584],0x39
  417aa3:	loop   0x417a25
  417aa5:	rol    BYTE PTR [eax],0x0
  417aa8:	repnz push esp
  417aaa:	cld    
  417aab:	jne    0x417b19
  417aad:	adc    DWORD PTR [ecx-0x10],0xebcdebd5
  417ab4:	or     cl,BYTE PTR [ecx+0x1c]
  417ab7:	stc    
  417ab8:	pop    edx
  417ab9:	inc    edi
  417aba:	test   eax,eax
  417abc:	loop   0x417aa2
  417abe:	js     0x417ac0
  417ac0:	aad    0x60
  417ac2:	out    0xff,eax
  417ac4:	mov    edx,0x3afff160
  417ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aca:	(bad)  
  417acb:	out    dx,eax
  417acc:	xor    dh,BYTE PTR [esi]
  417ace:	pop    esp
  417acf:	adc    esp,DWORD PTR [ecx]
  417ad1:	dec    ebp
  417ad2:	sar    edi,0x4d
  417ad5:	and    eax,0x715836c
  417ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417adb:	ja     0x417abd
  417add:	iret   
  417ade:	cmc    
  417adf:	jmp    eax
  417ae1:	and    BYTE PTR [ebx+edi*1],al
  417ae4:	mov    BYTE PTR [edi+0x1],0x0
  417ae8:	xor    BYTE PTR [eax],0x53
  417aeb:	inc    ebx
  417aec:	inc    ecx
  417aed:	add    al,bl
  417aef:	sbb    al,0x5e
  417af1:	popf   
  417af2:	inc    ebp
  417af3:	adc    DWORD PTR ds:0xd6388435,0xffffff8d
  417afa:	repnz mov BYTE PTR [eax],bl
  417afd:	mov    edi,0x53cbfee6
  417b02:	pop    esp
  417b03:	adc    edx,DWORD PTR [ecx+0x51ffc136]
  417b09:	and    edx,esi
  417b0b:	dec    ebp
  417b0c:	add    BYTE PTR [eax],al
  417b0e:	fwait
  417b0f:	pusha  
  417b10:	add    al,BYTE PTR [eax+0x7301fb28]
  417b16:	fnclex 
  417b18:	(bad)  
  417b1a:	aam    0xce
  417b1c:	pop    ss
  417b1d:	push   ebp
  417b1e:	jmp    DWORD PTR [edx-0x72]
  417b21:	inc    ebx
  417b22:	lods   eax,DWORD PTR ds:[esi]
  417b23:	jae    0x417b81
  417b25:	jae    0x417ba0
  417b27:	pop    esp
  417b28:	repz iret 
  417b2a:	out    0x9,eax
  417b2c:	daa    
  417b2d:	add    al,0xae
  417b2f:	pop    es
  417b30:	call   0x6c3e5038
  417b35:	pop    edx
  417b36:	arpl   WORD PTR [ebp-0x32],cx
  417b39:	inc    ebx
  417b3a:	push   ss
  417b3b:	push   esi
  417b3c:	xor    esp,DWORD PTR [ebx]
  417b3e:	aad    0x9
  417b40:	sar    bh,cl
  417b42:	add    eax,0xd75c6a43
  417b47:	cld    
  417b48:	push   ebx
  417b49:	inc    ebp
  417b4a:	xchg   edx,eax
  417b4b:	mov    cl,BYTE PTR [eax-0x18f62bc7]
  417b51:	xchg   BYTE PTR [edx+0x4],ch
  417b54:	pusha  
  417b55:	leave  
  417b56:	es popa 
  417b58:	jecxz  0x417b9b
  417b5a:	xchg   esi,eax
  417b5b:	dec    esp
  417b5c:	call   0x8f9b01bb
  417b61:	ja     0x417bc9
  417b63:	dec    ebp
  417b64:	jbe    0x417aed
  417b66:	jle    0x417bbd
  417b68:	out    0xba,eax
  417b6a:	cwde   
  417b6b:	mov    al,0xda
  417b6d:	or     al,0xf0
  417b6f:	(bad)  
  417b70:	push   edx
  417b71:	pop    ebx
  417b72:	add    BYTE PTR [eax],al
  417b74:	(bad)  
  417b75:	mov    eax,ds:0x82e2c3fc
  417b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b7b:	pop    edx
  417b7c:	adc    cl,BYTE PTR [eax-0x29]
  417b7f:	add    esp,DWORD PTR [esp+esi*4]
  417b82:	jno    0x417bd8
  417b84:	and    BYTE PTR [ecx-0x322a004b],al
  417b8a:	add    dh,al
  417b8c:	std    
  417b8d:	retf   
  417b8e:	out    dx,al
  417b8f:	sar    eax,1
  417b91:	sub    BYTE PTR [ebp+0x15ca5e07],0x81
  417b98:	cwde   
  417b99:	aad    0xdf
  417b9b:	push   edx
  417b9c:	test   DWORD PTR [eax],ebp
  417b9e:	cs mov ecx,esi
  417ba1:	or     dl,BYTE PTR [edx]
  417ba3:	push   es
  417ba4:	pop    esp
  417ba5:	sub    al,0x0
  417ba7:	call   0x861f:0xee943cee
  417bae:	rcr    BYTE PTR [ebp+edx*8+0x1a],0xc0
  417bb3:	shr    BYTE PTR [edi-0x7d],cl
  417bb6:	pop    esi
  417bb7:	loope  0x417bb8
  417bb9:	aad    0x23
  417bbb:	cmc    
  417bbc:	dec    ebx
  417bbd:	jmp    0x417bbf
  417bbf:	daa    
  417bc0:	aad    0x4e
  417bc2:	je     0x417bc9
  417bc4:	inc    ebp
  417bc5:	mov    ecx,0xf646dcfc
  417bca:	aas    
  417bcb:	jmp    0x704dc123
  417bd0:	or     al,0x8
  417bd2:	mov    DWORD PTR [edx-0x54a75191],ebp
  417bd8:	add    BYTE PTR [eax],al
  417bda:	into   
  417bdb:	or     DWORD PTR [ebx+0x5c],edx
  417bde:	xor    ch,BYTE PTR [eax]
  417be0:	mov    BYTE PTR [eax+0x7a],ch
  417be3:	leave  
  417be4:	(bad)  
  417be5:	call   0x15c4fcc0
  417bea:	sahf   
  417beb:	dec    esi
  417bec:	std    
  417bed:	sbb    DWORD PTR [esi-0x7099a378],edx
  417bf3:	dec    esi
  417bf4:	sbb    al,0xe8
  417bf6:	(bad)  
  417bf7:	or     ebp,edi
  417bf9:	cld    
  417bfa:	repnz stc 
  417bfc:	aas    
  417bfd:	jmp    0x6d4ec557
  417c02:	sti    
  417c03:	dec    edx
  417c04:	std    
  417c05:	jmp    0xf09985c2
  417c0a:	push   ebp
  417c0b:	fdivp  st(4),st
  417c0d:	cs pop ds
  417c0f:	std    
  417c10:	cmp    ch,0xd9
  417c13:	or     DWORD PTR [eax],eax
  417c15:	ficomp DWORD PTR [ecx]
  417c17:	mov    bh,BYTE PTR [ebx-0x61]
  417c1a:	(bad)  
  417c1c:	bound  ebp,QWORD PTR [edx+0x3d]
  417c1f:	jmp    0x7500:0xafdb00fc
  417c26:	dec    esp
  417c27:	out    dx,al
  417c28:	mov    BYTE PTR [ebx+ecx*4-0x4f],ah
  417c2c:	cli    
  417c2d:	jne    0x417bc7
  417c2f:	leave  
  417c30:	add    BYTE PTR [edi+eiz*1+0x45],ah
  417c34:	std    
  417c35:	add    BYTE PTR [ebp+0x6cffffd9],al
  417c3b:	xchg   BYTE PTR [ecx-0x74ffff9c],bh
  417c41:	mov    cl,0xfa
  417c43:	add    DWORD PTR [eax],edx
  417c45:	add    dh,BYTE PTR ds:0xfab09085
  417c4b:	(bad)  
  417c4c:	cmp    ecx,esp
  417c4e:	add    DWORD PTR [eax],0x64a2072c
  417c54:	addr16 inc ebp
  417c56:	std    
  417c57:	jmp    0xb14b:0x60b984f7
  417c5e:	cli    
  417c5f:	push   es
  417c60:	shl    DWORD PTR [ebx],0x36
  417c63:	(bad)  
  417c64:	loopne 0x417c16
  417c66:	cli    
  417c67:	inc    DWORD PTR [ecx]
  417c69:	add    dh,al
  417c6b:	add    eax,0x3ebcd0
  417c70:	lock fstp QWORD PTR [ebx+eax*4+0x39]
  417c75:	push   0xfffffffc
  417c77:	dec    DWORD PTR [ebx-0x4da78efa]
  417c7d:	dec    edx
  417c7e:	popa   
  417c7f:	retf   
  417c80:	das    
  417c81:	pop    es
  417c82:	push   es
  417c83:	jmp    0x417c10
  417c85:	out    dx,al
  417c86:	inc    eax
  417c87:	jbe    0x417c09
  417c89:	or     BYTE PTR [eax+0x7105827d],al
  417c8f:	inc    esp
  417c90:	das    
  417c91:	jae    0x417cf3
  417c93:	(bad)  
  417c94:	sti    
  417c95:	mov    al,0x0
  417c97:	jne    0x417c46
  417c99:	out    dx,eax
  417c9a:	and    BYTE PTR [ebp+edx*8-0xd],0x56
  417c9f:	std    
  417ca0:	and    BYTE PTR [eax],dh
  417ca2:	aas    
  417ca3:	add    eax,DWORD PTR [eax]
  417ca5:	add    cl,bh
  417ca7:	pop    ss
  417ca8:	ret    
  417ca9:	call   edi
  417cab:	imul   DWORD PTR ds:0x58804081
  417cb1:	std    
  417cb2:	jp     0x417d16
  417cb4:	into   
  417cb5:	push   ds
  417cb6:	lods   al,BYTE PTR ds:[esi]
  417cb7:	aad    0xdc
  417cb9:	cld    
  417cba:	push   0x2b
  417cbc:	into   
  417cbd:	push   es
  417cbe:	fwait
  417cbf:	pop    ebp
  417cc0:	(bad)  
  417cc2:	push   ss
  417cc3:	popa   
  417cc4:	(bad)  
  417cc5:	call   0x64d75caf
  417cca:	dec    edx
  417ccb:	mov    ebx,DWORD PTR [eax-0x1]
  417cce:	leave  
  417ccf:	pop    ebx
  417cd0:	aas    
  417cd1:	add    esi,DWORD PTR [ecx-0x24003b59]
  417cd7:	call   0x61177a33
  417cdc:	sbb    al,0x83
  417cde:	lods   eax,DWORD PTR ds:[esi]
  417cdf:	jae    0x417d39
  417ce1:	std    
  417ce2:	pop    edi
  417ce3:	jnp    0x417ce6
  417ce5:	add    ch,dl
  417ce7:	addr16 inc ecx
  417ce9:	cmc    
  417cea:	and    eax,0x2687e3f
  417cef:	rcl    DWORD PTR [edi+0x66],cl
  417cf2:	add    cl,BYTE PTR ss:[ebx+0x41]
  417cf6:	aad    0x3a
  417cf8:	mov    WORD PTR [ebx+0x65],es
  417cfb:	inc    edx
  417cfc:	sbb    al,0xc2
  417cfe:	push   0x67
  417d00:	mov    ds:0x19f0e68,eax
  417d05:	data16 or al,0x7e
  417d08:	shl    DWORD PTR [ebx+0x0],cl
  417d0b:	add    bl,dl
  417d0d:	mov    edx,0x748e6805
  417d12:	add    DWORD PTR [ebx-0x2a7c4b0],ecx
  417d18:	mov    dl,0xa
  417d1a:	mov    bh,0x58
  417d1c:	(bad)  
  417d1d:	and    ecx,edi
  417d1f:	ret    
  417d20:	mov    ds:0xdd7e61af,al
  417d25:	dec    eax
  417d26:	push   cs
  417d27:	pop    eax
  417d28:	sti    
  417d29:	ins    BYTE PTR es:[edi],dx
  417d2a:	xchg   ecx,eax
  417d2b:	dec    esp
  417d2c:	adc    al,0xa
  417d2e:	aaa    
  417d2f:	add    ch,BYTE PTR [ebp+ebp*8-0x47]
  417d33:	inc    ebx
  417d34:	rep ins BYTE PTR es:[edi],dx
  417d36:	test   DWORD PTR [esp+edx*1+0xa],ecx
  417d3a:	sbb    cl,BYTE PTR [ebp+0x2d]
  417d3d:	dec    ecx
  417d3e:	fiadd  WORD PTR [edx*8-0x72157651]
  417d45:	int    0xe6
  417d47:	mov    ebx,esi
  417d49:	lods   eax,DWORD PTR ds:[esi]
  417d4a:	mov    cl,0xc3
  417d4c:	dec    edx
  417d4d:	xchg   ecx,eax
  417d4e:	in     al,dx
  417d4f:	jmp    0x417d5e
  417d51:	int    0xe6
  417d53:	adc    DWORD PTR ds:0x1bdca48d,edx
  417d59:	dec    ebp
  417d5a:	stos   BYTE PTR es:[edi],al
  417d5b:	test   dh,ch
  417d5d:	or     DWORD PTR [esi+0x1c4922c3],esp
  417d63:	sbb    al,0x83
  417d65:	xchg   edi,esi
  417d67:	ds xchg esp,eax
  417d69:	or     DWORD PTR ds:0xd961e657,ebx
  417d6f:	ret    
  417d70:	add    BYTE PTR [eax],al
  417d72:	add    cl,cl
  417d74:	mov    bl,0x3
  417d76:	adc    ch,cl
  417d78:	out    0x3,al
  417d7a:	and    cx,WORD PTR [edi-0x22]
  417d7e:	call   0x15c1dbcb
  417d83:	mov    esi,0xdd63ef7
  417d88:	es ret 
  417d8a:	rol    BYTE PTR [eax],cl
  417d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8d:	(bad)  
  417d8e:	retf   0xe44e
  417d91:	add    ebx,DWORD PTR [eax-0x2e170034]
  417d97:	(bad)  
  417d99:	aam    0xea
  417d9b:	sbb    eax,DWORD PTR [eax-0x17]
  417d9e:	pusha  
  417d9f:	test   al,0x64
  417da1:	xor    dl,BYTE PTR [esi-0x43963db8]
  417da7:	or     ebp,eax
  417da9:	stos   BYTE PTR es:[edi],al
  417daa:	(bad)  
  417dab:	or     DWORD PTR [ebx-0x3f],esi
  417dae:	cmp    eax,DWORD PTR [ebp+0x48962610]
  417db4:	push   esi
  417db5:	test   BYTE PTR [ebp-0x2956eda0],0x89
  417dbc:	cmp    ebp,ecx
  417dbe:	stos   DWORD PTR es:[edi],eax
  417dbf:	retf   0xe8ff
  417dc2:	test   DWORD PTR [edx],esp
  417dc4:	call   0xfd887ebf
  417dc9:	gs xchg esi,eax
  417dcb:	mov    ebp,0xdd5ae0e
  417dd0:	lds    ebp,FWORD PTR [edx]
  417dd2:	fld    DWORD PTR [ecx]
  417dd4:	pop    esi
  417dd5:	sub    BYTE PTR [eax],al
  417dd7:	add    cl,dl
  417dd9:	dec    edi
  417dda:	add    ebp,ecx
  417ddc:	repz retf 0xe7ff
  417de0:	jnp    0x417e27
  417de2:	adc    edi,DWORD PTR [ebp+0x36000824]
  417de8:	jno    0x417d97
  417dea:	enter  0xd92a,0x91
  417dee:	push   es
  417def:	dec    ecx
  417df0:	(bad)  
  417df1:	push   eax
  417df2:	inc    ecx
  417df3:	jmp    0xf404d46
  417df8:	xor    BYTE PTR [edi-0x5026d538],ch
  417dfe:	xchg   BYTE PTR [edi-0x2c61502c],ch
  417e04:	(bad)  
  417e08:	dec    ecx
  417e09:	iret   
  417e0a:	add    ebp,DWORD PTR [edx]
  417e0c:	push   esi
  417e0d:	add    eax,DWORD PTR [eax]
  417e0f:	add    bl,bh
  417e11:	dec    ebx
  417e12:	std    
  417e13:	dec    DWORD PTR [ecx-0x6341a9dd]
  417e19:	or     BYTE PTR [edi],bh
  417e1b:	add    BYTE PTR [edx-0x20],cl
  417e1e:	adc    al,bl
  417e20:	scas   al,BYTE PTR es:[edi]
  417e21:	dec    ebx
  417e22:	std    
  417e23:	jg     0x417da6
  417e25:	or     eax,ebx
  417e27:	inc    ebx
  417e28:	lods   al,BYTE PTR ds:[esi]
  417e29:	or     esi,DWORD PTR [ecx+0x1a]
  417e2c:	aam    0xa0
  417e2e:	stc    
  417e2f:	call   ebx
  417e31:	(bad)  
  417e32:	mov    edi,0x1089d74
  417e37:	add    al,0xab
  417e39:	dec    ebx
  417e3a:	std    
  417e3b:	aaa    
  417e3c:	add    BYTE PTR [eax],al
  417e3e:	bound  ecx,QWORD PTR [esi-0x3]
  417e41:	lds    edi,FWORD PTR [ecx+0xb]
  417e44:	ret    
  417e45:	inc    ebx
  417e46:	ins    BYTE PTR es:[edi],dx
  417e47:	or     al,0x56
  417e49:	call   FWORD PTR [ecx-0x1]
  417e4c:	adc    DWORD PTR [eax+0x3c],eax
  417e4f:	jge    0x417dee
  417e51:	push   0xc2fd4987
  417e56:	jmp    0xda956aeb
  417e5b:	sbb    bh,dl
  417e5d:	push   ebx
  417e5e:	xchg   esp,eax
  417e5f:	lea    eax,[eax]
  417e61:	add    BYTE PTR [ecx+esi*1],bh
  417e64:	call   DWORD PTR [edx-0x3a]
  417e67:	or     ch,BYTE PTR [eax+0x0]
  417e6a:	sub    al,0xb
  417e6c:	inc    eax
  417e6d:	(bad)  
  417e6e:	jmp    0xc8577988
  417e73:	cmp    edi,DWORD PTR ds:0x7edd8700
  417e79:	inc    BYTE PTR [ebx-0x1ec6cca7]
  417e7f:	adc    DWORD PTR [ebx+ebx*1-0x4b],esi
  417e83:	jle    0x417e92
  417e85:	je     0x417e71
  417e87:	jns    0x417e13
  417e89:	inc    ebp
  417e8a:	aad    0x40
  417e8c:	mov    cl,0xfc
  417e8e:	dec    eax
  417e8f:	inc    ecx
  417e90:	push   esp
  417e91:	jae    0x417e6c
  417e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e94:	push   esp
  417e95:	adc    edi,DWORD PTR [ebp+0x62]
  417e98:	sar    edi,0x51
  417e9b:	lock iret 
  417e9d:	add    DWORD PTR [esi+0x31],esp
  417ea0:	stos   DWORD PTR es:[edi],eax
  417ea1:	cld    
  417ea2:	add    BYTE PTR [eax],al
  417ea4:	sar    al,0xf1
  417ea7:	aas    
  417ea8:	aad    0xb0
  417eaa:	push   esi
  417eab:	jmp    DWORD PTR [esi]
  417ead:	sub    DWORD PTR [ebx+esi*2-0x23],edx
  417eb1:	or     cl,ch
  417eb3:	dec    BYTE PTR [edx-0x69764cd0]
  417eb9:	imul   esi,DWORD PTR [esi-0x51cf363f],0xffffff88
  417ec0:	and    DWORD PTR [ecx+0x3d1088b2],0x37d423ac
  417eca:	mov    eax,eax
  417ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ecd:	pop    edi
  417ece:	lods   al,BYTE PTR ds:[esi]
  417ecf:	push   esp
  417ed0:	dec    edx
  417ed1:	js     0x417eba
  417ed3:	add    dh,ch
  417ed5:	jo     0x417e83
  417ed7:	xor    BYTE PTR ds:0xd4c8802e,0x20
  417ede:	in     al,dx
  417edf:	push   DWORD PTR [edx]
  417ee1:	xor    BYTE PTR [ecx+0x5438a0fd],al
  417ee7:	adc    ebp,DWORD PTR [ecx+0x42]
  417eea:	sar    edi,0x4d
  417eed:	test   BYTE PTR [ebx],0x81
  417ef0:	or     eax,0x57840497
  417ef5:	xor    BYTE PTR [ecx],al
  417ef7:	add    BYTE PTR [eax-0xb],dl
  417efa:	pop    ebx
  417efb:	dec    edi
  417efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417efd:	mov    edi,0xf0c4ffed
  417f02:	add    eax,DWORD PTR [ebx-0x1624f6eb]
  417f08:	add    BYTE PTR [eax],al
  417f0a:	stos   DWORD PTR es:[edi],eax
  417f0b:	les    ebx,FWORD PTR [edx-0x32]
  417f0e:	ja     0x417ea2
  417f10:	lods   al,BYTE PTR ds:[esi]
  417f11:	pop    ebx
  417f12:	pop    edx
  417f13:	int3   
  417f14:	loop   0x417f2e
  417f16:	nop
  417f17:	mov    edi,0x31038aea
  417f1c:	cli    
  417f1d:	jmp    0x142830f8
  417f22:	aad    0x9
  417f24:	xchg   edi,eax
  417f25:	lods   al,BYTE PTR ds:[esi]
  417f26:	test   eax,0xe2f2231f
  417f2b:	or     DWORD PTR [eax-0x3],esi
  417f2e:	fisttp QWORD PTR [ebx+ebx*4-0x3f]
  417f32:	sub    DWORD PTR [edi+0x451a0b9c],edx
  417f38:	jge    0x417f39
  417f3a:	adc    al,BYTE PTR [ebp+0x75]
  417f3d:	or     edi,DWORD PTR [eax+0x1f]
  417f40:	mov    ds:0x6409b2f1,eax
  417f45:	inc    ebx
  417f46:	loope  0x417f6b
  417f48:	jb     0x417f13
  417f4a:	fiadd  DWORD PTR [eax]
  417f4c:	and    eax,0xdd1be608
  417f51:	leave  
  417f52:	fiadd  WORD PTR [edi]
  417f54:	push   ebx
  417f55:	add    BYTE PTR [eax-0x44],cl
  417f58:	out    dx,al
  417f59:	push   edx
  417f5a:	out    0x51,al
  417f5c:	fld    st(3)
  417f5e:	cmp    dl,BYTE PTR [edx+0xb82fc35]
  417f64:	ret    0xb2ed
  417f67:	or     DWORD PTR [edi+0x4],esp
  417f6a:	aad    0xdc
  417f6c:	popf   
  417f6d:	sbb    al,BYTE PTR [eax]
  417f6f:	add    BYTE PTR [eax],bl
  417f71:	pop    ds
  417f72:	fcomip st,st(5)
  417f74:	ror    BYTE PTR [ecx],cl
  417f76:	mov    ds,edx
  417f78:	rol    BYTE PTR [esp+ebx*8+0x3b],cl
  417f7c:	out    0xc9,eax
  417f7e:	out    0x15,al
  417f80:	adc    eax,0x9b9fffe5
  417f85:	adc    DWORD PTR [eax],eax
  417f87:	pop    ss
  417f88:	push   0x39
  417f8a:	mov    edi,ebp
  417f8c:	dec    ebp
  417f8d:	dec    edx
  417f8e:	je     0x417f7f
  417f90:	inc    BYTE PTR [ebp+edi*2-0x17]
  417f94:	(bad)  
  417f95:	scas   eax,DWORD PTR es:[edi]
  417f96:	(bad)  
  417f97:	mov    eax,0xdb081927
  417f9c:	xchg   esi,eax
  417f9d:	inc    esp
  417f9e:	mov    dh,BYTE PTR [edi-0x42097842]
  417fa4:	(bad)  
  417fa6:	cld    
  417fa7:	aam    0xee
  417fa9:	pop    ss
  417faa:	inc    eax
  417fab:	jmp    0x963ec914
  417fb0:	repnz sbb DWORD PTR [edx-0x17],ebp
  417fb4:	daa    
  417fb5:	mov    esi,0xbe27f523
  417fba:	and    ebx,ebp
  417fbc:	daa    
  417fbd:	mov    esi,0x1927d523
  417fc2:	adc    bl,bl
  417fc4:	xchg   esi,eax
  417fc5:	inc    esp
  417fc6:	test   BYTE PTR [ecx],ch
  417fc8:	(bad)  
  417fc9:	cwde   
  417fca:	shr    BYTE PTR [ebx+0x72544466],0xfa
  417fd1:	mov    ch,ah
  417fd3:	in     eax,0x0
  417fd5:	add    BYTE PTR [eax],dh
  417fd7:	inc    ebx
  417fd8:	mov    WORD PTR [ebp*4-0x764fcf29],?
  417fdf:	stc    
  417fe0:	mov    edi,0x7b8a619
  417fe5:	mov    dh,0x2d
  417fe7:	adc    al,0x12
  417fe9:	sub    ecx,edx
  417feb:	mov    al,al
  417fed:	sbb    eax,0x95439121
  417ff2:	fdiv   st,st(7)
  417ff5:	sbb    ch,0x8a
  417ff8:	retf   0x8b8e
  417ffb:	inc    edi
  417ffc:	mov    DWORD PTR [eax],0x55000c2e
  418002:	xchg   esp,esp
  418004:	dec    esp
  418005:	push   ecx
  418006:	jns    0x418059
  418008:	cmc    
  418009:	push   eax
  41800a:	jnp    0x41806d
  41800c:	add    eax,0x1207e1ff
  418011:	inc    eax
  418012:	in     al,dx
  418013:	nop
  418014:	shl    BYTE PTR [esp+esi*4-0x3c],0x40
  418019:	clc    
  41801a:	aaa    
  41801b:	cmp    cl,0xeb
  41801e:	mov    cl,0x8c
  418020:	retf   0x47ff
  418023:	int    0xc4
  418025:	ret    0x7c0
  418028:	push   0x7bc80
  41802d:	inc    DWORD PTR [eax-0x15]
  418030:	pop    es
  418031:	jmp    DWORD PTR [ecx+0x7c400fdb]
  418037:	fdiv   DWORD PTR [ebx+0x24]
  41803a:	add    BYTE PTR [eax],al
  41803c:	jo     0x418016
  41803e:	adc    BYTE PTR [ebp+ebx*4+0x47],dh
  418042:	std    
  418043:	test   BYTE PTR [edi+eax*1+0xabec091],ch
  41804a:	add    BYTE PTR [ebp-0x9],dl
  41804d:	loop   0x4180cb
  41804f:	in     al,dx
  418050:	pop    esp
  418051:	or     eax,DWORD PTR [eax]
  418053:	add    BYTE PTR [edi-0x3e72ab81],bl
  418059:	(bad)  
  41805b:	call   FWORD PTR [ebx]
  41805d:	jle    0x4180c4
  41805f:	imul   BYTE PTR [edi+eax*1]
  418062:	add    bh,bh
  418064:	and    DWORD PTR [edi+0xf],edi
  418067:	inc    eax
  418068:	cmp    al,0x7f
  41806a:	cmp    dh,ch
  41806c:	cmp    al,0x7
  41806e:	add    BYTE PTR [edi-0x3a],dh
  418071:	sbb    al,0xf6
  418073:	inc    ecx
  418075:	inc    ebp
  418076:	in     eax,0xb5
  418078:	aad    0xae
  41807a:	dec    esi
  41807b:	std    
  41807c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41807d:	or     BYTE PTR [esi+esi*2-0x6b],bh
  418081:	xor    cl,bl
  418083:	pop    DWORD PTR [ebx-0x2646fc10]
  418089:	xor    DWORD PTR [ecx],eax
  41808b:	add    BYTE PTR [eax-0xa],bl
  41808e:	dec    ebx
  41808f:	sti    
  418090:	loop   0x41803d
  418092:	pop    ebx
  418093:	or     al,0x5e
  418095:	jecxz  0x4180e5
  418097:	sbb    DWORD PTR [ecx-0x35077bc0],0xfd0e5c
  4180a1:	add    BYTE PTR [eax+0x3d],cl
  4180a4:	jl     0x41806b
  4180a6:	dec    eax
  4180a7:	in     eax,0x53
  4180a9:	stc    
  4180aa:	mov    dl,0xfb
  4180ac:	pop    ebx
  4180ad:	mov    bh,0xd1
  4180af:	xor    BYTE PTR [ecx],al
  4180b1:	test   BYTE PTR [ebp-0x2a95de5c],dl
  4180b7:	cwde   
  4180b8:	add    DWORD PTR [eax],0xfedb30d5
  4180be:	cld    
  4180bf:	xor    bl,bl
  4180c1:	(bad)  
  4180c2:	cli    
  4180c3:	xor    BYTE PTR [ecx],al
  4180c5:	add    BYTE PTR [ebp+0x720bd643],dl
  4180cb:	gs xchg ebp,eax
  4180cd:	adc    dl,BYTE PTR ds:0x62f88431
  4180d3:	in     eax,0xf5
  4180d5:	inc    ebp
  4180d6:	push   esp
  4180d7:	bound  edi,QWORD PTR [ecx]
  4180d9:	add    ch,dl
  4180db:	xor    bl,dl
  4180dd:	xchg   edi,eax
  4180de:	pop    es
  4180df:	jno    0x418091
  4180e1:	pop    ebp
  4180e2:	sahf   
  4180e3:	jns    0x418128
  4180e5:	or     ch,dl
  4180e7:	and    BYTE PTR [edi+0x13],cl
  4180ea:	sbb    eax,0x7affc15e
  4180ef:	xor    DWORD PTR [esi+ebp*8-0x78],ebx
  4180f3:	or     DWORD PTR [edx+0x5f],esi
  4180f6:	call   0x3a09:0xd507f735
  4180fd:	mov    edx,0x536494a1
  418102:	cld    
  418103:	inc    ecx
  418104:	xchg   BYTE PTR [ebx+0x3b720000],dh
  41810a:	out    0x3,eax
  41810c:	aad    0x42
  41810e:	fdivr  QWORD PTR [ebx-0x4419363c]
  418114:	lahf   
  418115:	cmp    al,0xe7
  418117:	add    edx,ebp
  418119:	mov    edx,0x32cb14b9
  41811e:	sti    
  41811f:	test   eax,ecx
  418121:	inc    ecx
  418122:	mov    bh,0xdb
  418124:	pop    edx
  418125:	mov    eax,0x662d03a6
  41812a:	mov    ch,0xc3
  41812c:	mov    dl,0x84
  41812e:	jmp    0x418132
  418130:	aad    0x9
  418132:	pop    esp
  418133:	mov    ds,WORD PTR [ebp-0x52afd9c1]
  418139:	mov    ch,0xa0
  41813b:	push   eax
  41813c:	nop
  41813d:	lea    ebp,[ebx]
  41813f:	call   DWORD PTR [ebp+0x42]
  418142:	push   cs
  418143:	xlat   BYTE PTR ds:[ebx]
  418144:	mov    ebx,0x4dfb7c40
  418149:	dec    ecx
  41814a:	ins    BYTE PTR es:[edi],dx
  41814b:	outs   dx,BYTE PTR ds:[esi]
  41814c:	gs inc ebp
  41814e:	test   BYTE PTR [edi+0x7d],0x22
  418152:	jecxz  0x418157
  418154:	aad    0x85
  418156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418157:	fmul   st,st(1)
  418159:	mov    bl,0xe6
  41815b:	dec    esi
  41815c:	(bad)  
  41815d:	adc    esi,edx
  41815f:	stc    
  418160:	ficomp WORD PTR [ebx]
  418162:	daa    
  418163:	add    al,0x56
  418165:	dec    edx
  418166:	cmp    al,0xff
  418168:	nop
  418169:	mov    WORD PTR [ebp-0x5bffff18],?
  41816f:	jo     0x418171
  418171:	sti    
  418172:	xchg   esi,eax
  418173:	ficomp WORD PTR [ebp+0x12]
  418176:	loopne 0x4181c3
  418178:	add    al,0xe9
  41817a:	inc    esi
  41817b:	inc    ecx
  41817c:	jmp    0xf0f7:0x744a5c94
  418183:	mov    DWORD PTR [eax],edi
  418185:	mov    edi,0x3e0d191d
  41818a:	cmp    DWORD PTR [ebx],ecx
  41818c:	data16 fs mov al,0xb5
  418190:	or     ebp,DWORD PTR [edx-0x68]
  418193:	out    dx,eax
  418194:	jb     0x418179
  418196:	clc    
  418197:	mov    DWORD PTR [eax-0x13],edi
  41819a:	(bad)  
  41819b:	mov    esp,0x4ad89900
  4181a0:	xor    ch,BYTE PTR [ecx]
  4181a2:	push   ss
  4181a3:	fisttp DWORD PTR [edi+edx*4]
  4181a6:	sbb    eax,ebx
  4181a8:	xor    BYTE PTR [edx],ah
  4181aa:	xchg   BYTE PTR ds:0xed16e2d8,dh
  4181b0:	(bad)  
  4181b1:	call   0xc3918d8c
  4181b6:	xlat   BYTE PTR ds:[ebx]
  4181b7:	fisubr DWORD PTR [ecx-0x18]
  4181ba:	jle    0x4181fc
  4181bc:	add    cl,ch
  4181be:	(bad)  
  4181bf:	ds je  0x41818f
  4181c2:	mov    dl,0x3e
  4181c4:	adc    edx,DWORD PTR [ebp-0x79]
  4181c7:	add    BYTE PTR [eax],al
  4181c9:	jb     0x4181ec
  4181cb:	mov    edi,esi
  4181cd:	dec    BYTE PTR [edx+0x7dfd1d]
  4181d3:	add    BYTE PTR [edx-0x458a02df],dh
  4181d9:	and    ebp,edi
  4181db:	pop    ebp
  4181dc:	lods   eax,DWORD PTR ds:[esi]
  4181dd:	and    DWORD PTR [esi-0x22],edx
  4181e0:	dec    ebp
  4181e1:	or     al,0x12
  4181e3:	sub    ecx,edx
  4181e5:	mov    eax,es
  4181e7:	aaa    
  4181e8:	inc    edx
  4181e9:	fwait
  4181ea:	rol    DWORD PTR [eax],0x13
  4181ed:	inc    ecx
  4181ee:	lds    edx,FWORD PTR [edx]
  4181f0:	cld    
  4181f1:	add    eax,0x737f8a5e
  4181f6:	mov    edi,0x88812c10
  4181fb:	in     al,dx
  4181fc:	lods   eax,DWORD PTR ds:[esi]
  4181fd:	loopne 0x418216
  4181ff:	add    bh,ah
  418201:	or     ecx,DWORD PTR [edi+0x56]
  418204:	das    
  418205:	repz push edx
  418207:	inc    ebx
  418208:	ja     0x4181e6
  41820a:	xchg   bl,bh
  41820c:	fs retf 
  41820e:	xor    edi,edi
  418210:	jae    0x41819f
  418212:	shr    BYTE PTR [eax-0x3ec8f404],0x3
  418219:	xchg   BYTE PTR [edx+0x370bec00],dl
  41821f:	mov    bl,0x89
  418222:	mov    al,BYTE PTR [eax]
  418224:	mov    esp,0xe7c1270b
  418229:	(bad)  
  41822a:	or     al,BYTE PTR [edx+0xb2c]
  418230:	mov    edi,0x26140069
  418236:	jle    0x418237
  418238:	add    BYTE PTR [eax],al
  41823a:	repz or eax,esi
  41823d:	cmp    ebp,edx
  41823f:	pop    eax
  418240:	outs   dx,BYTE PTR ds:[esi]
  418241:	xor    eax,ebp
  418243:	pusha  
  418244:	std    
  418245:	add    al,0x7c
  418247:	mov    dh,0xf
  418249:	mov    dh,0x54
  41824b:	mov    edx,DWORD PTR [esi-0x32739368]
  418251:	add    cl,BYTE PTR [ebp+0x7b]
  418254:	in     eax,0xed
  418256:	lods   eax,DWORD PTR ds:[esi]
  418257:	add    eax,0x42e9ff00
  41825c:	xchg   BYTE PTR [ebp+0x78],al
  41825f:	mov    eax,ecx
  418261:	inc    ecx
  418263:	xchg   esi,eax
  418264:	in     al,dx
  418265:	std    
  418266:	aad    0x57
  418268:	dec    ebx
  418269:	xchg   DWORD PTR [eax-0x3bcca3a8],ebp
  41826f:	inc    edi
  418270:	dec    ebx
  418271:	mov    ebx,DWORD PTR [eax-0x7ab04b8c]
  418277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418278:	test   ah,ch
  41827a:	and    BYTE PTR [eax+0x4b],dh
  41827d:	push   eax
  41827e:	test   DWORD PTR [edi-0xb],esp
  418281:	jnp    0x418269
  418283:	lock add ecx,DWORD PTR [eax+0x2]
  418287:	jns    0x418273
  418289:	mov    edi,0x185c7103
  41828e:	cli    
  41828f:	xchg   DWORD PTR [ebx-0x7c],ecx
  418292:	adc    eax,0xe31ff36
  418297:	lods   al,BYTE PTR ds:[esi]
  418298:	inc    edx
  418299:	dec    ebp
  41829a:	pop    eax
  41829b:	jno    0x418275
  41829d:	push   cs
  41829e:	add    BYTE PTR [eax],al
  4182a0:	dec    eax
  4182a1:	scas   al,BYTE PTR es:[edi]
  4182a2:	pop    edi
  4182a3:	sti    
  4182a4:	rcr    bh,cl
  4182a6:	mov    bl,0xfc
  4182a8:	loopne 0x41825a
  4182aa:	out    dx,al
  4182ab:	aas    
  4182ac:	aad    0xa5
  4182ae:	inc    ebx
  4182af:	jae    0x418248
  4182b1:	mov    edx,0x42d7e93e
  4182b6:	inc    ecx
  4182b7:	pop    ebp
  4182b8:	or     ebx,DWORD PTR [edx+edi*1-0x4fcf263e]
  4182bf:	push   ebp
  4182c0:	out    0xcb,al
  4182c2:	scas   al,BYTE PTR es:[edi]
  4182c3:	addr16 aad 0x30
  4182c6:	add    DWORD PTR [edx],eax
  4182c8:	push   DWORD PTR [ebx]
  4182ca:	mov    al,0x69
  4182cc:	fimul  DWORD PTR [eax-0x4f2affff]
  4182d2:	dec    edx
  4182d3:	je     0x41828e
  4182d5:	inc    esp
  4182d6:	dec    esp
  4182d7:	adc    esp,DWORD PTR [ecx]
  4182d9:	(bad)  {k7}
  4182de:	cmp    dh,0x5a
  4182e1:	or     DWORD PTR [ebx-0x15],ebx
  4182e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e5:	fcmovu st,st(5)
  4182e7:	xlat   BYTE PTR ds:[ebx]
  4182e8:	mul    BYTE PTR [ecx]
  4182ea:	cmp    eax,0xf835e64d
  4182ef:	ret    
  4182f0:	cmp    al,BYTE PTR [ebp-0x6b1e4a59]
  4182f6:	stos   BYTE PTR es:[edi],al
  4182f7:	dec    esp
  4182f8:	(bad)  
  4182f9:	push   ecx
  4182fa:	fld    st(3)
  4182fc:	and    bl,ah
  4182fe:	pusha  
  4182ff:	inc    eax
  418300:	jl     0x41834d
  418302:	out    dx,eax
  418303:	add    eax,DWORD PTR [eax]
  418305:	add    BYTE PTR [esp+edx*8+0xdb6df71],ah
  41830c:	cmp    eax,0xb1fba7b5
  418311:	dec    esp
  418312:	out    0xc1,al
  418314:	fld    st(3)
  418316:	repnz xchg edx,eax
  418318:	ja     0x4182a0
  41831a:	jecxz  0x4182cf
  41831c:	call   0x364f6999
  418321:	add    eax,0xd7c34154
  418326:	fmul   QWORD PTR [eax+0x7411c5f]
  41832c:	int    0x86
  41832e:	xchg   ebp,eax
  41832f:	mov    bh,0xfa
  418331:	js     0x4182f0
  418333:	stc    
  418334:	es mov dh,0x38
  418337:	xchg   ebx,eax
  418338:	in     eax,0x4c
  41833a:	mov    BYTE PTR [ecx],0xd9
  41833d:	ret    
  41833e:	mov    ds:0x264c2f88,al
  418343:	setno  BYTE PTR [ebx]
  418346:	es cmp eax,0xc9e4fff4
  41834c:	out    0x86,al
  41834e:	xchg   ebp,eax
  41834f:	xor    ecx,ebp
  418351:	fwait
  418352:	in     eax,0xb5
  418354:	cmc    
  418355:	in     eax,0x57
  418357:	cmp    eax,0x92f0fb73
  41835c:	add    BYTE PTR [edi+0x2024455],dh
  418362:	dec    ebx
  418363:	jnp    0x418364
  418365:	inc    ebp
  418366:	jg     0x418348
  418368:	mov    DWORD PTR [edx+0x4b7a0000],ebp
  41836e:	add    al,0xe9
  418370:	test   DWORD PTR [edx+0x41b56aec],edx
  418376:	jg     0x41834d
  418378:	or     DWORD PTR [ecx],0xd763e900
  41837e:	mov    ch,BYTE PTR ds:0x625011f5
  418384:	call   0x1961380a
  418389:	cmp    eax,0x9d08ee5
  41838e:	add    BYTE PTR [ebp-0x67],ch
  418391:	mov    ch,0x77
  418393:	pop    esp
  418394:	push   ebp
  418395:	out    0xf,al
  418397:	jmp    0x41836f
  418399:	or     DWORD PTR [eax+0x6c],edx
  41839c:	adc    eax,0x8e190be9
  4183a1:	sbb    BYTE PTR [eax],dh
  4183a3:	fist   DWORD PTR [esi]
  4183a5:	cmp    eax,0x3b5a598a
  4183aa:	std    
  4183ab:	aad    0x7c
  4183ad:	pop    DWORD PTR [ebp+ecx*1-0x16fff833]
  4183b4:	push   ds
  4183b5:	pop    ebx
  4183b6:	sti    
  4183b7:	inc    esi
  4183b8:	push   ds
  4183b9:	xchg   al,al
  4183bb:	mov    ah,0xda
  4183bd:	nop
  4183be:	inc    esp
  4183bf:	or     eax,0x658acca1
  4183c4:	cmc    
  4183c5:	leave  
  4183c6:	add    ecx,ebp
  4183c8:	(bad)  
  4183c9:	xor    DWORD PTR [eax-0x7bf62918],esi
  4183cf:	sub    DWORD PTR [eax],eax
  4183d1:	add    BYTE PTR [ebp-0x4a9a09e3],ah
  4183d7:	sbb    DWORD PTR [edx],eax
  4183d9:	add    BYTE PTR [eax+ecx*1+0x10],bh
  4183dd:	je     0x418446
  4183df:	ror    DWORD PTR [ebx+0x24],0x74
  4183e3:	loopne 0x41836b
  4183e5:	jmp    FWORD PTR [ebx-0x31]
  4183e8:	out    0xa,al
  4183ea:	leave  
  4183eb:	jl     0x41840e
  4183ed:	or     BYTE PTR [esi+ebx*8],cl
  4183f0:	dec    edi
  4183f1:	cld    
  4183f2:	sub    ecx,edi
  4183f4:	mov    BYTE PTR [eax+edx*8+0x3cffff35],al
  4183fb:	js     0x418450
  4183fd:	inc    DWORD PTR [ecx]
  4183ff:	and    BYTE PTR [edx],dl
  418401:	inc    eax
  418402:	sub    al,0x89
  418404:	shl    BYTE PTR [ebp+0x55],0x7a
  418408:	cld    
  418409:	adc    eax,0x3d3628
  41840e:	in     al,0x85
  418410:	add    BYTE PTR [eax],al
  418412:	in     al,dx
  418413:	jb     0x418411
  418415:	adc    eax,0x3d3860
  41841a:	iret   
  41841b:	rcl    BYTE PTR [eax],1
  41841d:	clc    
  41841e:	or     eax,0x2c84fd48
  418423:	jb     0x418431
  418425:	xchg   ebp,eax
  418426:	sub    al,0x6b
  418428:	mov    ch,ah
  41842a:	cdq    
  41842b:	les    edx,FWORD PTR [eax-0x75]
  41842e:	sbb    BYTE PTR [esp+eiz*8+0x63d32df8],al
  418435:	add    al,0x0
  418437:	add    BYTE PTR [edi+eax*1-0x3daca9b1],ch
  41843e:	and    DWORD PTR [esp+eax*4],0x5
  418442:	add    BYTE PTR [eax],al
  418444:	cmp    al,0xbc
  418446:	aam    0xb8
  418448:	and    BYTE PTR [ecx+0x3d],bl
  41844b:	add    BYTE PTR ds:0xe418216b,al
  418451:	and    ch,bh
  418453:	call   ebp
  418455:	xor    BYTE PTR [ebp-0x40],bh
  418458:	retf   0xe7a4
  41845b:	(bad)  
  41845c:	jb     0x41848f
  41845e:	js     0x4184a4
  418460:	mov    cl,0x28
  418462:	mov    cl,0x8a
  418464:	pop    ecx
  418465:	dec    ebp
  418466:	aad    0x1
  418468:	aad    0x30
  41846a:	mov    cl,0xfc
  41846c:	call   0xd5817a91
  418471:	mov    ecx,0xafe523bf
  418476:	dec    ebx
  418477:	std    
  418478:	retf   0x44a4
  41847b:	add    ch,dl
  41847d:	xor    BYTE PTR [ebx+edi*1+0x35],bh
  418481:	pop    edi
  418482:	sar    edi,0xe7
  418485:	jp     0x418490
  418487:	jae    0x418446
  418489:	hlt    
  41848a:	in     al,dx
  41848b:	push   ebp
  41848c:	adc    bl,BYTE PTR [esi]
  41848e:	in     al,dx
  41848f:	cld    
  418490:	loopne 0x41841e
  418492:	idiv   BYTE PTR [edi]
  418494:	aad    0x55
  418496:	add    edi,edi
  418498:	cli    
  418499:	xor    al,bh
  41849b:	add    BYTE PTR [eax],0x0
  41849e:	add    al,0x31
  4184a0:	add    DWORD PTR [eax],eax
  4184a2:	pop    eax
  4184a3:	in     eax,0x1f
  4184a5:	inc    esp
  4184a6:	in     eax,dx
  4184a7:	mov    DWORD PTR [eax-0x3],ecx
  4184aa:	fisub  DWORD PTR [ebx+eax*2+0x499580d]
  4184b1:	add    ch,dl
  4184b3:	mov    bh,0xbf
  4184b5:	and    ebx,ebp
  4184b7:	scas   eax,DWORD PTR es:[edi]
  4184b8:	arpl   WORD PTR [eax],dx
  4184ba:	inc    ecx
  4184bb:	and    ecx,DWORD PTR [edi+0x43]
  4184be:	loope  0x4184ee
  4184c0:	into   
  4184c1:	or     esi,ebp
  4184c3:	loop   0x418491
  4184c5:	inc    ebx
  4184c6:	stos   DWORD PTR es:[edi],eax
  4184c7:	ins    DWORD PTR es:[edi],dx
  4184c8:	cmc    
  4184c9:	add    esp,DWORD PTR [ecx]
  4184cb:	sub    ecx,DWORD PTR [edx]
  4184cd:	jae    0x4184ac
  4184cf:	or     DWORD PTR [ebp-0x3d3aa3f6],ebx
  4184d5:	out    dx,eax
  4184d6:	xor    ebp,0xe6117756
  4184dc:	sahf   
  4184dd:	mov    bl,0x71
  4184df:	adc    al,0x77
  4184e1:	hlt    
  4184e2:	stos   BYTE PTR es:[edi],al
  4184e3:	or     DWORD PTR [esp+eax*2-0x1a],esp
  4184e7:	adc    DWORD PTR [ebp+0x7911e60c],ebp
  4184ed:	pop    edi
  4184ee:	cmp    al,0x1e
  4184f0:	out    0xce,al
  4184f2:	out    0x8c,al
  4184f4:	xor    esp,DWORD PTR [eax]
  4184f6:	loope  0x418486
  4184f8:	mov    ds:0x6319a648,al
  4184fd:	inc    ebx
  4184fe:	test   eax,0xc669b5
  418503:	add    dl,cl
  418505:	or     DWORD PTR [ebx],esi
  418507:	jmp    DWORD PTR [ecx]
  418509:	mov    ah,0x6
  41850b:	dec    ecx
  41850c:	add    BYTE PTR [ebx],dh
  41850e:	and    esp,DWORD PTR [eax]
  418510:	in     eax,dx
  418511:	sbb    DWORD PTR [ebx],ebx
  418513:	mov    ebp,0x2eac400
  418518:	mov    esp,eax
  41851a:	arpl   WORD PTR [edi-0x4f],di
  41851d:	mov    cl,0xe8
  41851f:	add    edx,ebp
  418521:	fnstenv [ebx-0x41]
  418524:	mov    dh,0xd1
  418526:	mov    gs,WORD PTR [ecx+0x7fe739e2]
  41852c:	adc    eax,0x4e84b6b5
  418531:	push   ss
  418532:	out    0xcf,eax
  418534:	xlat   BYTE PTR ds:[ebx]
  418535:	cmp    ah,dl
  418537:	out    0xc1,eax
  418539:	popa   
  41853a:	push   esi
  41853b:	into   
  41853c:	fiadd  DWORD PTR [ebx+esi*4-0x43c732e1]
  418543:	out    0x5f,eax
  418545:	xchg   BYTE PTR [ebx],al
  418547:	aam    0xd4
  418549:	or     DWORD PTR [eax],eax
  41854b:	jmp    0x2e59425d
  418550:	mov    ds:0x869cfd1d,eax
  418555:	ss jae 0x418545
  418558:	or     eax,0xab0107bd
  41855d:	aaa    
  41855e:	std    
  41855f:	push   cs
  418560:	jmp    0x41852f
  418562:	and    esp,ecx
  418564:	es ss je 0x41852d
  418568:	add    BYTE PTR [eax],al
  41856a:	jb     0x4185a2
  41856c:	adc    eax,ecx
  41856e:	pusha  
  41856f:	stc    
  418570:	jmp    DWORD PTR [ebx-0x6a]
  418573:	push   es
  418574:	cmp    edx,0xffffff93
  418577:	ss std 
  418579:	fisub  WORD PTR ds:0x44d60fed
  41857f:	in     eax,0x11
  418581:	sub    ecx,ebx
  418583:	(bad)  
  418584:	pop    ebp
  418585:	and    ch,BYTE PTR [esi+0x2dab5b2c]
  41858b:	cmp    DWORD PTR [edx+eiz*2+0x7d],edx
  41858f:	mov    ch,ah
  418591:	fst    QWORD PTR [ecx-0x6e930834]
  418597:	mov    ebp,0x8a02920c
  41859c:	inc    ebx
  41859d:	xchg   ecx,eax
  41859e:	xlat   BYTE PTR ds:[ebx]
  41859f:	add    BYTE PTR [ebx-0x6f],0x13
  4185a3:	mov    bh,BYTE PTR [eax]
  4185a5:	and    eax,0x16563a05
  4185aa:	pop    esi
  4185ab:	hlt    
  4185ac:	xchg   edi,eax
  4185ad:	fist   DWORD PTR [esi]
  4185af:	cmp    DWORD PTR [edx+0x6e],edx
  4185b2:	add    dh,BYTE PTR [edi]
  4185b4:	jae    0x418617
  4185b6:	dec    esi
  4185b7:	cmp    bh,ch
  4185b9:	ss lds eax,FWORD PTR ds:[edi]
  4185bd:	pusha  
  4185be:	xchg   esp,eax
  4185bf:	cmp    al,0x83
  4185c1:	and    BYTE PTR [ebp-0x15ff7d41],al
  4185c7:	pop    edx
  4185c8:	add    DWORD PTR [ebp-0x4091a614],eax
  4185ce:	add    BYTE PTR [eax],al
  4185d0:	test   al,0xd
  4185d2:	add    BYTE PTR [eax],al
  4185d4:	xchg   edi,eax
  4185d6:	js     0x418640
  4185d8:	ja     0x4185d1
  4185da:	js     0x418640
  4185dc:	stc    
  4185dd:	int    0x70
  4185df:	adc    ah,BYTE PTR [edi+0x2f0a73f3]
  4185e5:	mov    bl,0xc5
  4185e7:	mov    ebp,DWORD PTR [ebp-0x2c]
  4185ea:	int3   
  4185eb:	ins    DWORD PTR es:[edi],dx
  4185ec:	arpl   di,cx
  4185ee:	scas   eax,DWORD PTR es:[edi]
  4185ef:	add    edi,edx
  4185f1:	jge    0x418575
  4185f3:	test   dl,0x49
  4185f6:	mov    BYTE PTR [ebp+0x28],al
  4185f9:	mov    cl,0x13
  4185fb:	ss call 0xc70:0x221a7c8c
  418603:	xchg   ebp,eax
  418604:	stc    
  418605:	shr    BYTE PTR [esi],1
  418607:	leave  
  418608:	aam    0x72
  41860a:	cld    
  41860b:	jns    0x300984de
  418611:	(bad)  
  418612:	ss iret 
  418614:	rcl    DWORD PTR [ebx],0x87
  418617:	jne    0x41861d
  418619:	add    ebp,edi
  41861b:	je     0x418621
  41861d:	jp     0x41866f
  41861f:	push   esi
  418620:	push   esp
  418621:	arpl   WORD PTR [eax-0xdf49c01],cx
  418627:	adc    cl,0xd0
  41862a:	push   DWORD PTR [ebx-0x1b]
  41862d:	push   ecx
  41862e:	pop    ecx
  41862f:	pop    ecx
  418630:	retf   0xdb6
  418633:	add    DWORD PTR [eax],0x0
  418636:	jp     0x418641
  418638:	sti    
  418639:	jne    0x41866f
  41863b:	aam    0xad
  41863d:	jmp    FWORD PTR [ecx-0x2a58193d]
  418643:	adc    al,BYTE PTR [ebp+ebx*2+0x13]
  418647:	jmp    0xff2b:0x58d5043e
  41864e:	mov    ds:0x8187d921,al
  418653:	add    DWORD PTR fs:[esi-0x6e],edx
  418657:	pop    esi
  418658:	icebp  
  418659:	adc    eax,0xc4822115
  41865e:	sar    DWORD PTR [esi+0x59],1
  418661:	rcl    edi,1
  418663:	and    BYTE PTR [ecx],al
  418665:	mov    DWORD PTR [ebx+0x7988afe4],ebx
  41866b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41866c:	push   esp
  41866d:	sub    BYTE PTR [esi],al
  41866f:	lahf   
  418670:	adc    esi,0xffffffd4
  418673:	and    BYTE PTR [ecx],al
  418675:	push   esi
  418676:	push   es
  418677:	sbb    al,0xb2
  418679:	push   esp
  41867a:	dec    edx
  41867b:	ss jmp 0x78621b96
  418681:	inc    ebx
  418682:	loope  0x41862d
  418684:	mov    edx,0xf86d567b
  418689:	mov    dl,BYTE PTR [edx-0x15794edc]
  41868f:	pop    eax
  418690:	inc    ebp
  418691:	mov    dl,0xd5
  418693:	and    BYTE PTR [esi-0x7b],dh
  418696:	push   ebp
  418697:	and    DWORD PTR [ecx],eax
  418699:	add    BYTE PTR [eax],al
  41869b:	add    BYTE PTR [ebp-0x2b7dbd68],ah
  4186a1:	and    BYTE PTR [eax-0x43525297],dh
  4186a7:	xlat   BYTE PTR ds:[ebx]
  4186a8:	test   DWORD PTR [eax-0x701584f0],ecx
  4186ae:	fisub  DWORD PTR [edi]
  4186b0:	push   eax
  4186b1:	out    0x2b,al
  4186b3:	mov    edx,DWORD PTR [edx-0x2f]
  4186b6:	add    eax,DWORD PTR [eax]
  4186b8:	aad    0x11
  4186ba:	pop    esp
  4186bb:	xchg   edx,eax
  4186bc:	push   edx
  4186bd:	or     DWORD PTR [esi+0x45],esp
  4186c0:	das    
  4186c1:	push   ds
  4186c2:	pop    esi
  4186c3:	iret   
  4186c4:	rol    BYTE PTR [esi+ebx*4-0x18c94d8e],cl
  4186cb:	mov    al,0x55
  4186cd:	inc    ecx
  4186ce:	inc    esi
  4186cf:	pop    esp
  4186d0:	arpl   WORD PTR [ebx+0x1e2f453d],sp
  4186d6:	ss iret 
  4186d8:	fiadd  WORD PTR [esi+esi*2-0x18c97562]
  4186df:	mov    al,0x55
  4186e1:	inc    ecx
  4186e2:	push   ds
  4186e3:	pop    esp
  4186e4:	das    
  4186e5:	mov    ds:0x1dff4515,eax
  4186ea:	push   cs
  4186eb:	iret   
  4186ec:	fiadd  DWORD PTR [esi+edi*1-0x18c99d76]
  4186f3:	mov    al,0x55
  4186f5:	inc    ecx
  4186f6:	neg    BYTE PTR [ebx+0x6b]
  4186f9:	mov    ds:0x368b44ed,eax
  4186fe:	out    0x3,al
  418700:	add    BYTE PTR [eax],al
  418702:	aad    0xa3
  418704:	out    0x78,eax
  418706:	adc    esp,DWORD PTR [ecx]
  418708:	cdq    
  418709:	(bad)  
  41870a:	xor    DWORD PTR [esi],esi
  41870c:	fimul  WORD PTR [ebp+ecx*1+0x1b78e7a3]
  418713:	dec    eax
  418714:	retf   0x32f3
  418717:	push   0x33
  418719:	inc    ebp
  41871a:	adc    BYTE PTR [esi],al
  41871c:	jbe    0x418761
  41871e:	fmul   QWORD PTR [edx+0x70]
  418721:	jl     0x418736
  418723:	or     bh,ah
  418725:	add    ebp,DWORD PTR [edi+0x8]
  418728:	bound  edi,QWORD PTR ds:0x450b85fd
  41872e:	call   0x6f6cc538
  418733:	or     BYTE PTR [edx+0x3d],dh
  418736:	sbb    ch,BYTE PTR [edx]
  418738:	add    cl,bl
  41873a:	mov    bh,BYTE PTR cs:[esi+ebp*2+0x11]
  41873f:	pop    es
  418740:	mov    ch,0x29
  418742:	mov    ebp,0x39705e4a
  418747:	pop    eax
  418748:	(bad)  
  418749:	call   0xb3070a24
  41874e:	out    dx,eax
  41874f:	inc    edi
  418750:	adc    cl,ch
  418752:	jae    0x4186d6
  418754:	in     al,dx
  418755:	cwde   
  418756:	push   0xd6e8d677
  41875b:	or     DWORD PTR [esi-0x3d],edx
  41875e:	(bad)  
  41875f:	fdivp  st(4),st
  418761:	cld    
  418762:	outs   dx,BYTE PTR ds:[esi]
  418763:	pop    ds
  418764:	inc    eax
  418765:	jmp    0x4e96876a
  41876a:	or     al,0x60
  41876c:	loope  0x4186f0
  41876e:	or     DWORD PTR [esi-0x2a],0x29740009
  418775:	or     DWORD PTR [edx-0x43],ebp
  418778:	(bad)  
  41877a:	jnp    0x41870d
  41877c:	retf   
  41877d:	fiadd  DWORD PTR [esp+eiz*2+0xf]
  418781:	mov    esi,0xb8ab6c17
  418786:	add    al,0xa3
  418788:	pop    ebp
  418789:	mov    esi,0x752be93f
  41878e:	push   edx
  41878f:	pop    esp
  418790:	or     al,0x31
  418792:	push   edx
  418793:	push   ebx
  418794:	aad    0xcf
  418796:	out    0x90,eax
  418798:	add    esi,DWORD PTR [edi*8+0x16050c62]
  41879f:	sub    ecx,edx
  4187a1:	lahf   
  4187a2:	pcmpeqb mm3,QWORD PTR [edx+0x4b]
  4187a6:	add    cl,ch
  4187a8:	(bad)  
  4187a9:	(bad)  [edx+0xa596e]
  4187af:	jmp    0x117bdba
  4187b4:	les    ecx,FWORD PTR [ebx]
  4187b6:	std    
  4187b7:	(bad)  
  4187b8:	in     al,dx
  4187b9:	cdq    
  4187ba:	jg     0x41878f
  4187bc:	mov    esp,0x29500008
  4187c1:	adc    DWORD PTR [eax+0x5008ac00],0xc48d02ff
  4187cb:	sbb    BYTE PTR [eax],al
  4187cd:	add    BYTE PTR [esi-0x1e7c76e4],dl
  4187d3:	push   cs
  4187d4:	add    BYTE PTR [eax],al
  4187d6:	cmp    al,0x99
  4187d8:	mov    bl,0x92
  4187da:	lods   eax,DWORD PTR ds:[esi]
  4187db:	or     BYTE PTR [eax],al
  4187dd:	push   0x7c
  4187df:	mov    ecx,eax
  4187e1:	call   DWORD PTR [edi*4+0x63bbff64]
  4187e8:	adc    DWORD PTR [ebp-0x15511],ecx
  4187ee:	jl     0x418848
  4187f0:	mov    dh,BYTE PTR [edi+0xf12]
  4187f6:	inc    esi
  4187f7:	or     BYTE PTR [edi-0x38],bh
  4187fa:	pop    ebx
  4187fb:	loopne 0x418796
  4187fd:	imul   ecx,DWORD PTR [ebx-0x39],0x8ca91469
  418804:	loope  0x41880b
  418806:	sub    al,0x8
  418808:	push   eax
  418809:	lea    esp,[ebx-0x4a]
  41880c:	cld    
  41880d:	(bad)  
  41880e:	cmp    al,0x66
  418810:	std    
  418811:	xor    BYTE PTR [edi+eax*8-0x19],0x81
  418816:	test   eax,ecx
  418818:	cli    
  418819:	mov    esi,0xffffc75b
  41881e:	xchg   esi,eax
  41881f:	push   cs
  418820:	xchg   esi,eax
  418822:	adc    al,0x69
  418824:	ja     0x418825
  418826:	cmp    edx,DWORD PTR [edi]
  418828:	mov    bl,0xc0
  41882a:	sub    eax,0xd5890fe8
  41882f:	in     eax,0x3f
  418831:	push   0x0
  418833:	add    ah,dl
  418835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418836:	inc    esi
  418837:	call   0xfd828f8a
  41883c:	retf   0x40fb
  41883f:	or     DWORD PTR [eax],ebx
  418841:	mov    ebp,0x935286de
  418846:	add    al,0x0
  418848:	aad    0xb7
  41884a:	test   ebx,edi
  41884c:	shl    BYTE PTR [eax],cl
  41884e:	add    DWORD PTR [edi+0x3ef5a],eax
  418854:	aad    0xa7
  418856:	dec    ecx
  418857:	(bad)  
  418858:	xchg   esi,eax
  418859:	pop    ecx
  41885a:	push   edi
  41885b:	call   FWORD PTR [edx-0x6c0054df]
  418861:	jne    0x418848
  418863:	or     ecx,DWORD PTR [edx+0x1516195e]
  418869:	and    DWORD PTR [esi+0x4dec9c4],eax
  41886f:	add    BYTE PTR [eax],cl
  418871:	test   al,0x2c
  418873:	jg     0x4188ee
  418875:	int    0x0
  418877:	add    ch,dl
  418879:	(bad)  
  41887a:	mov    ds,eax
  41887c:	add    edi,DWORD PTR [eax+0x204e8133]
  418882:	mov    eax,0x38423d0b
  418887:	std    
  418888:	inc    edx
  418889:	in     eax,dx
  41888a:	pop    es
  41888b:	jno    0x418873
  41888d:	(bad)  
  41888e:	add    eax,0xb8785859
  418893:	sbb    edx,DWORD PTR [esi+0x58]
  418896:	add    DWORD PTR [eax+eax*1+0x0],esi
  41889a:	ror    dl,cl
  41889c:	sbb    al,0x81
  41889e:	push   ds
  41889f:	and    al,al
  4188a1:	pop    ss
  4188a2:	pusha  
  4188a3:	mov    ds:0x210aff7d,eax
  4188a8:	sub    al,0x11
  4188aa:	push   eax
  4188ab:	or     ch,BYTE PTR [ebp+0x6a]
  4188ae:	cli    
  4188af:	xor    ah,bh
  4188b1:	sub    al,0xdc
  4188b3:	test   BYTE PTR [ebp-0x6a],ch
  4188b6:	jmp    0x2c7e:0xd42ce732
  4188bd:	inc    eax
  4188be:	outs   dx,DWORD PTR ds:[esi]
  4188bf:	sbb    eax,0x85d2ae17
  4188c4:	cld    
  4188c5:	push   edi
  4188c6:	push   esp
  4188c7:	inc    ecx
  4188c8:	outs   dx,BYTE PTR ds:[esi]
  4188c9:	sub    al,0x38
  4188cb:	mov    eax,ds:0x2e544165
  4188d0:	jmp    0xdcc66c8b
  4188d5:	outs   dx,DWORD PTR ds:[esi]
  4188d6:	ins    DWORD PTR es:[edi],dx
  4188d7:	cs out 0x3,eax
  4188da:	aad    0x21
  4188dc:	in     eax,0x85
  4188de:	call   0x6a13:0x7c627232
  4188e5:	cmp    eax,0x8ed2bcd4
  4188ea:	inc    esi
  4188eb:	aad    0x25
  4188ed:	inc    ecx
  4188ee:	js     0x418961
  4188f0:	sbb    eax,DWORD PTR [edx*8+0x5706ff09]
  4188f7:	or     bh,ah
  4188f9:	mov    WORD PTR [ebx+0x7cec1e],es
  4188ff:	add    ch,ch
  418901:	push   edi
  418902:	stos   BYTE PTR es:[edi],al
  418903:	add    ebp,DWORD PTR [eax+0x3d57ac84]
  418909:	xchg   ecx,eax
  41890a:	jmp    0x41894c
  41890c:	inc    eax
  41890d:	rol    DWORD PTR [ecx-0x78],cl
  418910:	adc    eax,0x72f4e3bc
  418915:	stos   DWORD PTR es:[edi],eax
  418916:	pop    edi
  418917:	or     BYTE PTR [edx],dl
  418919:	inc    esi
  41891a:	xor    al,0x8d
  41891c:	xor    DWORD PTR [eax+0x321a0fd3],ecx
  418922:	out    0xd9,eax
  418924:	xlat   BYTE PTR ds:[ebx]
  418925:	cdq    
  418926:	add    cl,ch
  418928:	(bad)  
  418929:	or     DWORD PTR [eax+0x5c],edx
  41892c:	mov    esi,DWORD PTR [ecx]
  41892e:	(bad)  
  41892f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418930:	xchg   ebp,eax
  418931:	and    DWORD PTR ds:0x81349564,ecx
  418937:	adc    al,0xc5
  418939:	or     DWORD PTR [edx+eiz*8+0x51],esi
  41893d:	(bad)  
  41893e:	or     esi,DWORD PTR [edx+0x23]
  418941:	or     ch,al
  418943:	neg    BYTE PTR [edi+ebp*1-0x3]
  418947:	pop    ss
  418948:	push   ds
  418949:	dec    esp
  41894a:	or     cl,ch
  41894c:	stos   DWORD PTR es:[edi],eax
  41894d:	sub    ah,0x6a
  418950:	repnz xor DWORD PTR [edi+0x4d],edi
  418954:	inc    BYTE PTR [edi]
  418956:	add    cl,ch
  418958:	mov    esi,ss
  41895a:	mov    cl,BYTE PTR [ebp-0x1700fe46]
  418960:	(bad)  
  418961:	and    esp,eax
  418963:	js     0x418965
  418965:	add    dh,dl
  418967:	or     DWORD PTR [ebx-0x13e8d93],ecx
  41896d:	call   0x9dcc6348
  418972:	jb     0x418979
  418974:	call   0xfd70e3a8
  418979:	bound  esp,QWORD PTR [ebx]
  41897b:	or     DWORD PTR [edx+0x9d737],edi
  418981:	adc    DWORD PTR [eax-0x79],ebx
  418984:	std    
  418985:	(bad)  
  418986:	xor    cl,bh
  418988:	mov    BYTE PTR [ebx+ebp*1],cl
  41898b:	dec    ebx
  41898c:	add    al,0xe9
  41898e:	daa    
  41898f:	test   BYTE PTR [ebp+0x2e],cl
  418992:	outs   dx,DWORD PTR ds:[esi]
  418993:	cmc    
  418994:	push   edi
  418995:	ins    BYTE PTR es:[edi],dx
  418996:	push   es
  418997:	or     eax,0x186da083
  41899c:	cmp    DWORD PTR [ebx+0xba065c],0x78
  4189a3:	jno    0x4189e2
  4189a5:	add    BYTE PTR [edi],cl
  4189a7:	int    0x51
  4189a9:	(bad)  
  4189aa:	call   0x96938ad0
  4189af:	or     DWORD PTR [edx-0x18],ebx
  4189b2:	push   ecx
  4189b3:	push   esi
  4189b4:	(bad)  
  4189b5:	jmp    DWORD PTR [edi+0x4c]
  4189b8:	jns    0x418a10
  4189ba:	ja     0x4189ee
  4189bc:	or     eax,0x8505ac16
  4189c1:	xchg   DWORD PTR [ebx-0x19fffffb],edx
  4189c7:	adc    eax,0x8389
  4189cc:	cmp    al,0x6
  4189ce:	add    BYTE PTR [eax],al
  4189d0:	fcomp  QWORD PTR [edx+0xcacc383]
  4189d6:	add    BYTE PTR [eax+0x13],dl
  4189d9:	fsub   DWORD PTR [edi+0x2]
  4189dc:	mov    ebp,0x2f8d000c
  4189e1:	xchg   esi,eax
  4189e2:	add    BYTE PTR [eax],al
  4189e4:	lods   al,BYTE PTR ds:[esi]
  4189e5:	pop    esp
  4189e6:	mov    al,BYTE PTR [edi+0x5ef]
  4189ec:	ins    BYTE PTR es:[edi],dx
  4189ed:	out    dx,eax
  4189ee:	aad    0x83
  4189f0:	mov    eax,0x6d04680d
  4189f5:	or     al,0x0
  4189f7:	(bad)  
  4189f8:	call   FWORD PTR [ebx+0x5c7cfffd]
  4189fe:	mov    dh,BYTE PTR [edi+0x6a9]
  418a04:	inc    esi
  418a05:	or     al,0x7f
  418a07:	enter  0xe453,0x2a
  418a0b:	push   0x467ef43
  418a10:	sub    eax,0xaf8d000c
  418a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a16:	cld    
  418a17:	(bad)  
  418a18:	cmp    al,0x5c
  418a1a:	mov    dh,BYTE PTR [edi+0x275d5]
  418a20:	aad    0xcc
  418a22:	add    eax,DWORD PTR [ecx+0x1129470d]
  418a28:	jge    0x418a99
  418a2a:	ds push 0x121d1
  418a30:	add    BYTE PTR [eax],al
  418a32:	push   eax
  418a33:	mov    ds:0x21faff76,eax
  418a38:	ror    DWORD PTR [edx+0x8852a],1
  418a3e:	aad    0xc
  418a40:	add    al,0x81
  418a42:	or     eax,0x72f5297f
  418a47:	xchg   DWORD PTR [esi],edi
  418a49:	mov    DWORD PTR [esi-0x6d],edx
  418a4c:	add    al,0x0
  418a4e:	aad    0xa9
  418a50:	test   ebx,edi
  418a52:	fisub  DWORD PTR [eax]
  418a54:	add    DWORD PTR [esi+0x1c],ebx
  418a57:	in     al,0x89
  418a59:	or     dh,ah
  418a5b:	repnz rol BYTE PTR [edx-0x7eedb264],cl
  418a62:	xchg   ebp,eax
  418a63:	and    eax,0x6cde308a
  418a68:	in     eax,0x7
  418a6a:	or     DWORD PTR [edi],ebx
  418a6c:	mov    edi,0xfa1d9580
  418a71:	into   
  418a72:	pop    es
  418a73:	icebp  
  418a74:	out    dx,al
  418a75:	mov    edi,0x4e31b
  418a7a:	and    eax,0xf82a22
  418a7f:	lods   al,BYTE PTR ds:[esi]
  418a80:	sub    al,0x7f
  418a82:	jno    0x418ad1
  418a84:	add    al,0x0
  418a86:	aad    0x8e
  418a88:	repnz cmc 
  418a8a:	pop    esi
  418a8b:	adc    WORD PTR [ecx],di
  418a8e:	adc    ebp,DWORD PTR [edi+0x203d80cf]
  418a94:	mov    dh,0x12
  418a96:	add    BYTE PTR [eax],al
  418a98:	push   es
  418a99:	or     bh,BYTE PTR [ecx-0x18f4c285]
  418a9f:	add    esp,DWORD PTR [eax]
  418aa1:	cmp    DWORD PTR [eax+0x52],eax
  418aa4:	sub    eax,0x5203e70b
  418aa9:	lds    edi,FWORD PTR [esi+0x722da68b]
  418aaf:	(bad)  
  418ab0:	fcmove st,st(1)
  418ab2:	mov    ebp,0x5c49dc5c
  418ab7:	iret   
  418ab8:	add    ch,bl
  418aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418abb:	aam    0x88
  418abd:	xlat   BYTE PTR ds:[ebx]
  418abe:	imul   eax,DWORD PTR [edi+0x3d962fe1],0xffffff85
  418ac5:	xlat   BYTE PTR ds:[ebx]
  418ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac7:	xchg   ecx,esp
  418ac9:	das    
  418aca:	xchg   BYTE PTR ds:0x3e72ed2,bh
  418ad0:	push   edx
  418ad1:	ins    BYTE PTR es:[edi],dx
  418ad2:	outs   dx,DWORD PTR ds:[esi]
  418ad3:	shr    BYTE PTR ds:[esi],0x6e
  418ad7:	pop    ss
  418ad8:	cdq    
  418ad9:	adc    al,0xa7
  418adb:	add    edx,DWORD PTR [ecx+esi*1-0x18]
  418adf:	mov    dh,0xfc
  418ae1:	xlat   BYTE PTR ds:[ebx]
  418ae2:	push   ebp
  418ae3:	mov    bh,0xce
  418ae5:	cs aam 0xb
  418ae8:	add    BYTE PTR [edi],ch
  418aea:	fdiv   QWORD PTR [edi]
  418aec:	out    0xc9,al
  418aee:	out    0xf8,al
  418af0:	nop
  418af1:	scas   eax,DWORD PTR es:[edi]
  418af2:	into   
  418af3:	jmp    0xf0d2:0xc6e7fe17
  418afa:	fwait
  418afb:	sldt   WORD PTR [eax]
  418afe:	lock jle 0x418adb
  418b01:	inc    ebx
  418b02:	mov    ds:0x490ce2b4,al
  418b07:	dec    ecx
  418b08:	lods   eax,DWORD PTR ds:[esi]
  418b09:	dec    edx
  418b0a:	xchg   edi,eax
  418b0b:	std    
  418b0c:	out    0xf1,al
  418b0e:	xchg   edx,eax
  418b0f:	and    dh,dh
  418b11:	(bad)  
  418b12:	pop    ebp
  418b13:	sbb    eax,0x21299800
  418b18:	sbb    dh,ch
  418b1a:	cmp    esi,0xffffff88
  418b1d:	fs loope 0x418b4c
  418b20:	dec    ebx
  418b21:	in     eax,dx
  418b22:	jl     0x418b53
  418b24:	mov    WORD PTR [eax+eiz*8],gs
  418b27:	(bad)  
  418b29:	fsubr  DWORD PTR ss:[edi*8+0xab5966d]
  418b31:	push   0x4b
  418b33:	add    al,BYTE PTR [eax]
  418b35:	cmp    al,0xb7
  418b37:	jns    0x418b38
  418b39:	or     eax,0xe90c4b8e
  418b3e:	in     al,0x6d
  418b40:	jmp    0xfe6fc7db
  418b45:	sbb    eax,0x15fcfded
  418b4a:	in     eax,dx
  418b4b:	std    
  418b4c:	cld    
  418b4d:	std    
  418b4e:	mov    edx,0xad4fcfd
  418b53:	sbb    DWORD PTR [eax-0x17],eax
  418b56:	mov    ebp,0xc9dd23c9
  418b5b:	xchg   ebp,eax
  418b5c:	shr    BYTE PTR [ebx],0xe2
  418b5f:	or     DWORD PTR ds:0xd1000096,ecx
  418b65:	shr    DWORD PTR [ecx-0x11],cl
  418b68:	ins    BYTE PTR es:[edi],dx
  418b69:	sub    al,0x4d
  418b6b:	dec    esi
  418b6c:	ret    
  418b6d:	add    eax,0x82d6a916
  418b72:	lock push 0xffffffc8
  418b75:	cs je  0x418b86
  418b78:	test   BYTE PTR [ebp+0x66],ch
  418b7b:	push   0x79
  418b7d:	or     ecx,DWORD PTR ds:0x80c2167c
  418b83:	or     DWORD PTR [edx-0x790a3f76],esp
  418b89:	(bad)  
  418b8a:	push   ebp
  418b8b:	push   cs
  418b8c:	ret    
  418b8d:	jno    0x418ba2
  418b8f:	add    BYTE PTR [ecx+ecx*1-0x7f],bh
  418b93:	rol    al,0x2
  418b96:	push   esi
  418b97:	jmp    DWORD PTR [ecx]
  418b99:	icebp  
  418b9a:	adc    BYTE PTR [eax+0x2c],al
  418b9d:	mov    cl,dh
  418b9f:	jmp    DWORD PTR [edi-0x1e3ca239]
  418ba5:	jl     0x418b93
  418ba7:	push   ecx
  418ba8:	fst    QWORD PTR [esp+edx*2+0x66]
  418bac:	ins    DWORD PTR es:[edi],dx
  418bad:	mov    BYTE PTR [edi],0xf
  418bb0:	xchg   ebx,eax
  418bb1:	int    0x2e
  418bb3:	(bad)  
  418bb4:	jns    0x418c00
  418bb6:	add    eax,0xfc58e350
  418bbb:	jne    0x418bb1
  418bbd:	jge    0x418c38
  418bbf:	cld    
  418bc0:	gs jb  0x418bb8
  418bc3:	jmp    ecx
  418bc5:	cwde   
  418bc6:	adc    DWORD PTR [eax+0x0],eax
  418bc9:	add    ah,ch
  418bcb:	mov    eax,eax
  418bcd:	je     0x418bc3
  418bcf:	or     eax,0xffffffff
  418bd2:	add    DWORD PTR gs:[eax],0x0
  418bd6:	mov    esp,0xb475885a
  418bdb:	fld    TBYTE PTR ds:0x7f09f28b
  418be1:	clc    
  418be2:	mov    esi,0x82ff0d79
  418be7:	sbb    bl,bh
  418be9:	jbe    0x418b8f
  418beb:	loopne 0x418bd8
  418bed:	test   DWORD PTR [ebx],ecx
  418bef:	icebp  
  418bf0:	test   BYTE PTR [ebp+0x18],al
  418bf3:	fisttp QWORD PTR [esi]
  418bf5:	adc    DWORD PTR [ecx+ebx*1],0x71
  418bf9:	push   cs
  418bfa:	retf   
  418bfb:	ja     0x418c0a
  418bfd:	inc    DWORD PTR [edx+0x10]
  418c00:	call   0xfb328ddc
  418c05:	mov    DWORD PTR [ecx],esi
  418c07:	lock xchg BYTE PTR [esi-0x2b],dh
  418c0b:	ss (bad) 
  418c0d:	hlt    
  418c0e:	loopne 0x418c1c
  418c10:	cmp    DWORD PTR [ebx-0x23],esi
  418c13:	add    ecx,DWORD PTR [edi]
  418c15:	call   0x8942eefa
  418c1a:	cwde   
  418c1b:	ss xchg dh,cl
  418c1e:	cmp    dh,BYTE PTR [edi+0x42]
  418c21:	je     0x418c03
  418c23:	mov    bh,0x38
  418c25:	pop    sp
  418c27:	retf   0xe805
  418c2a:	fst    QWORD PTR [ebx+0x3a]
  418c2d:	std    
  418c2e:	add    BYTE PTR [eax],al
  418c30:	dec    esi
  418c31:	push   edx
  418c32:	mov    ?,WORD PTR [ebx+0xd]
  418c35:	popf   
  418c36:	cmp    DWORD PTR [ebp+eiz*8-0x61],esi
  418c3a:	ss std 
  418c3c:	mov    BYTE PTR [edi],ah
  418c3e:	lahf   
  418c3f:	xchg   BYTE PTR [edx-0xde0d6e0],bl
  418c45:	bound  edi,QWORD PTR [edx]
  418c47:	mov    ebp,esp
  418c49:	mov    dh,BYTE PTR [eax-0x7fbe1205]
  418c4f:	std    
  418c50:	fidivr DWORD PTR [edx-0x50]
  418c53:	idiv   DWORD PTR [ebp-0x35027fd7]
  418c59:	mov    eax,0x18225e3e
  418c5e:	dec    ebx
  418c5f:	ret    0x20d1
  418c62:	iret   
  418c63:	push   esp
  418c64:	pop    esi
  418c65:	test   eax,0x56d2b509
  418c6a:	jmp    FWORD PTR [ecx-0x2c]
  418c6d:	jo     0x418ca9
  418c6f:	adc    edx,ecx
  418c71:	xor    al,cl
  418c73:	call   FWORD PTR [edi-0xf]
  418c76:	test   esi,edi
  418c78:	mov    dh,BYTE PTR [ebp-0x3a]
  418c7b:	xor    BYTE PTR [ebp-0x28c279c5],dl
  418c81:	dec    ebx
  418c82:	nop
  418c83:	rcr    BYTE PTR ds:0x61236a0a,0x87
  418c8a:	daa    
  418c8b:	pop    ss
  418c8c:	add    eax,0xc63abcd3
  418c91:	push   ecx
  418c92:	hlt    
  418c93:	ret    
  418c94:	add    BYTE PTR [eax],al
  418c96:	push   edx
  418c97:	xchg   BYTE PTR [edi],ah
  418c99:	mov    al,0xdf
  418c9b:	lahf   
  418c9c:	out    0xd1,eax
  418c9e:	inc    ecx
  418c9f:	adc    eax,0x9951047
  418ca4:	fs inc ebx
  418ca6:	test   eax,0xd50fe610
  418cab:	adc    esp,DWORD PTR [edi]
  418cad:	add    al,0x8b
  418caf:	jle    0x418c80
  418cb1:	cmp    esi,eax
  418cb3:	xor    esp,esi
  418cb5:	ret    
  418cb6:	adc    dl,ah
  418cb8:	lds    ecx,FWORD PTR [edi]
  418cba:	cmp    eax,0x54042715
  418cbf:	cmp    al,0xb6
  418cc1:	(bad)  [ebp+0x44]
  418cc4:	or     eax,0x137c8645
  418cc9:	loopne 0x418d29
  418ccb:	mov    DWORD PTR [ebx-0x18f629ec],ecx
  418cd1:	rol    DWORD PTR [ecx-0x19a83382],1
  418cd7:	leave  
  418cd8:	out    0xf4,al
  418cda:	rcr    BYTE PTR [esi],0x4
  418cdd:	mov    eax,DWORD PTR [esi-0x46]
  418ce0:	scas   eax,DWORD PTR es:[edi]
  418ce1:	outs   dx,BYTE PTR ds:[esi]
  418ce2:	xor    DWORD PTR [ebx],ebp
  418ce4:	outs   dx,BYTE PTR ds:[esi]
  418ce5:	cmp    DWORD PTR [ebx],ebp
  418ce7:	shl    BYTE PTR [ecx-0x41],1
  418cea:	cmp    bh,BYTE PTR [edi+0x63]
  418ced:	jg     0x418d1c
  418cef:	sub    edx,DWORD PTR [esi+0x39]
  418cf2:	fadd   QWORD PTR [esi-0x2c]
  418cf5:	or     ebx,DWORD PTR [esp+edi*4-0x3e]
  418cf9:	mov    al,BYTE PTR [eax]
  418cfb:	add    BYTE PTR [esi],bl
  418cfd:	sahf   
  418cfe:	push   ecx
  418cff:	add    eax,0xc4ffcc5a
  418d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d05:	mov    ds:0x9d6e4ff,al
  418d0a:	mov    esi,DWORD PTR [ebp+esi*1+0x31]
  418d0e:	std    
  418d0f:	push   ds
  418d10:	xchg   BYTE PTR [edx+0x16aafcfc],bh
  418d16:	inc    eax
  418d17:	jmp    0x6aa9537b
  418d1c:	or     DWORD PTR [ebx],ebp
  418d1e:	jns    0x418cb5
  418d20:	and    al,0xba
  418d22:	mov    ch,BYTE PTR [ebp+esi*2+0x31]
  418d26:	std    
  418d27:	out    dx,al
  418d28:	push   es
  418d29:	sub    eax,0x16ec5573
  418d2e:	cld    
  418d2f:	hlt    
  418d30:	push   ss
  418d31:	sub    bh,BYTE PTR [edx]
  418d33:	sub    al,0x69
  418d35:	mov    bh,0x3a
  418d37:	into   
  418d38:	push   ebx
  418d39:	call   0x4582:0xf1412c88
  418d40:	mov    esp,0x773bfd2c
  418d45:	add    BYTE PTR [ebx+0x2d],0x7
  418d49:	aam    0x86
  418d4b:	ins    BYTE PTR es:[edi],dx
  418d4c:	xor    ch,BYTE PTR ds:0x7f049efd
  418d52:	or     DWORD PTR ds:0x39fd2c9c,0xffffffa7
  418d59:	dec    esi
  418d5a:	or     DWORD PTR ds:0xebfd270c,0x0
  418d61:	add    dh,dl
  418d63:	or     DWORD PTR [eax],eax
  418d65:	pusha  
  418d66:	arpl   WORD PTR [edx+0x26ed6efc],si
  418d6c:	aad    0x6a
  418d6e:	out    dx,al
  418d6f:	sub    BYTE PTR [esi],cl
  418d71:	ins    BYTE PTR es:[edi],dx
  418d72:	jp     0x418d9a
  418d74:	std    
  418d75:	push   esi
  418d76:	jge    0x418d3f
  418d78:	and    BYTE PTR [edx+eax*2],0x50
  418d7c:	ret    0x7800
  418d7f:	or     eax,0x8c108b51
  418d84:	in     al,dx
  418d85:	or     al,0x6d
  418d87:	or     eax,0x3ff75300
  418d8c:	add    eax,0x86dce756
  418d91:	inc    ebp
  418d92:	jo     0x418d24
  418d94:	dec    esi
  418d95:	add    edi,ebp
  418d97:	jecxz  0x418dd8
  418d99:	jae    0x418e00
  418d9b:	test   al,0xbf
  418d9d:	je     0x418dd3
  418d9f:	push   ds
  418da0:	iret   
  418da1:	mov    ebx,0xde4
  418da6:	cmp    ebx,ebp
  418da8:	xchg   BYTE PTR [ebp+0x34],bl
  418dab:	je     0x418d7c
  418dad:	call   0x89419af1
  418db2:	stc    
  418db3:	in     eax,0x84
  418db5:	push   ebp
  418db6:	add    BYTE PTR [ecx+eax*1+0x53],dh
  418dba:	mov    cl,0x8a
  418dbc:	clc    
  418dbd:	(bad)  
  418dbe:	adc    esp,ecx
  418dc0:	dec    edi
  418dc1:	mov    DWORD PTR [ecx-0x27],esi
  418dc4:	std    
  418dc5:	inc    DWORD PTR [eax]
  418dc7:	add    BYTE PTR [ebx-0xa],al
  418dca:	jmp    0x8122d152
  418dcf:	test   al,0xfa
  418dd2:	xchg   dh,al
  418dd4:	sub    eax,0x435001ee
  418dd9:	pop    ebx
  418dda:	or     eax,0xfde2398d
  418ddf:	call   DWORD PTR [ebx+0x3d]
  418de2:	in     eax,0xd1
  418de4:	das    
  418de5:	loope  0x418de1
  418de7:	xor    ebp,DWORD PTR [esp+0x42]
  418deb:	or     al,0x11
  418ded:	push   ebx
  418dee:	cmc    
  418def:	sbb    edi,esp
  418df1:	sub    al,0xbe
  418df3:	push   eax
  418df4:	xchg   BYTE PTR [edx+ebp*2],cl
  418df7:	add    ch,dl
  418df9:	lods   eax,DWORD PTR ds:[esi]
  418dfa:	jle    0x418df0
  418dfc:	xchg   ebx,eax
  418dfd:	xlat   BYTE PTR ds:[ebx]
  418dfe:	xor    al,0x50
  418e00:	push   DWORD PTR [edx]
  418e02:	adc    esp,DWORD PTR ss:[ecx+0x51ffc13d]
  418e09:	repnz scas al,BYTE PTR es:[edi]
  418e0b:	adc    edi,ebp
  418e0d:	xchg   dh,bl
  418e0f:	jmp    FWORD PTR [edx-0x11]
  418e12:	push   cs
  418e13:	test   al,0xc8
  418e15:	jb     0x418e18
  418e17:	or     DWORD PTR [ebp+0x1c58d5ff],0x560007f4
  418e21:	or     dh,BYTE PTR ds:0x2b634774
  418e27:	std    
  418e28:	add    esp,esp
  418e2a:	xchg   BYTE PTR [ebx+0x38290000],al
  418e30:	ss std 
  418e32:	cmp    eax,0x22fd37ed
  418e37:	scas   al,BYTE PTR es:[edi]
  418e38:	inc    eax
  418e39:	jae    0x418e08
  418e3b:	clc    
  418e3c:	cmp    dh,0xd4
  418e3f:	les    ebp,FWORD PTR [ebx]
  418e41:	jmp    0xb13e2969
  418e46:	out    dx,al
  418e47:	jge    0x418e19
  418e49:	mov    cl,ch
  418e4b:	pop    esi
  418e4c:	mov    al,0xb
  418e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e4f:	jb     0x418df8
  418e51:	(bad)  
  418e52:	jmp    0x418e58
  418e54:	or     al,0x40
  418e56:	in     eax,dx
  418e57:	cmp    esi,DWORD PTR [esi]
  418e59:	std    
  418e5a:	fidiv  DWORD PTR [edx+0x1d49fd38]
  418e60:	mov    BYTE PTR [ebx-0x27],cl
  418e63:	add    DWORD PTR [edx-0x3f8fed01],ebp
  418e69:	or     edx,DWORD PTR [ebp+0x31]
  418e6c:	add    DWORD PTR [eax],eax
  418e6e:	mov    dl,0x3e
  418e70:	xchg   ebp,eax
  418e71:	adc    edx,DWORD PTR ds:0x94d8e70a
  418e77:	adc    ah,bh
  418e79:	sbb    BYTE PTR [ebx-0xec24d9],0xb
  418e80:	mov    ch,0x36
  418e82:	out    0x55,al
  418e84:	fadd   st(3),st
  418e86:	cmp    BYTE PTR [ebp-0x282efc3],0xa6
  418e8d:	add    edx,DWORD PTR [edi+edx*1+0xfd76]
  418e94:	add    DWORD PTR [edi+esi*8+0x1db9d4a9],esi
  418e9b:	adc    cl,dl
  418e9d:	jmp    DWORD PTR [esi+0x6a225c03]
  418ea3:	ss dec eax
  418ea5:	sahf   
  418ea6:	int    0xf2
  418ea8:	xor    BYTE PTR [eax+0x16d4f569],0x5c
  418eaf:	inc    ebx
  418eb0:	popf   
  418eb1:	mov    al,BYTE PTR [edi]
  418eb3:	das    
  418eb4:	push   esp
  418eb5:	dec    edx
  418eb6:	add    edx,esp
  418eb8:	mov    BYTE PTR [esi-0x302f023],bh
  418ebe:	es add al,0x56
  418ec1:	dec    edx
  418ec2:	push   ebx
  418ec3:	or     ah,BYTE PTR [eax-0x19c423da]
  418ec9:	leave  
  418eca:	out    0x80,al
  418ecc:	or     BYTE PTR [edi],ah
  418ece:	bound  edi,QWORD PTR ds:0x89154a90
  418ed4:	cli    
  418ed5:	xor    edx,edi
  418ed7:	add    edx,ebp
  418ed9:	or     DWORD PTR [ebp-0x17ee4940],edx
  418edf:	scas   eax,DWORD PTR es:[edi]
  418ee0:	fdivr  DWORD PTR [edi+0x2657997e]
  418ee6:	xchg   BYTE PTR [ecx+0xa8c79b],cl
  418eec:	aad    0x92
  418eee:	add    BYTE PTR [edi],ch
  418ef0:	loope  0x418f3e
  418ef2:	push   es
  418ef3:	xor    DWORD PTR [ebx-0x1a],edi
  418ef6:	jmp    FWORD PTR [ebx+0x0]
  418ef9:	add    BYTE PTR [ecx],bl
  418efb:	sahf   
  418efc:	or     DWORD PTR [edx-0x37],esi
  418eff:	mov    ecx,0x88deb8fc
  418f04:	data16 loope 0x418edd
  418f07:	nop
  418f08:	into   
  418f09:	push   eax
  418f0a:	mov    ebp,0x8be8ffdd
  418f0f:	xchg   ecx,eax
  418f10:	in     al,dx
  418f11:	cwde   
  418f12:	xchg   DWORD PTR [ecx-0x62291e87],ecx
  418f18:	add    ebx,DWORD PTR [ecx-0x2a]
  418f1b:	dec    esi
  418f1c:	shr    DWORD PTR [edx+0x3a],0x1e
  418f20:	add    BYTE PTR [edi-0x56e9c182],bh
  418f26:	(bad)  
  418f27:	mov    cl,0xf7
  418f29:	fist   WORD PTR [esi]
  418f2b:	es in  eax,0xc5
  418f2e:	sub    esp,DWORD PTR [esi]
  418f30:	std    
  418f31:	(bad)  
  418f32:	jmp    0x2cb785c1
  418f37:	xchg   ecx,eax
  418f38:	push   es
  418f39:	push   0x43
  418f3b:	and    al,BYTE PTR [eax]
  418f3d:	ins    BYTE PTR es:[edi],dx
  418f3e:	adc    esp,DWORD PTR [edx]
  418f40:	dec    edi
  418f41:	aas    
  418f42:	enter  0x1bb9,0x64
  418f46:	xchg   esi,eax
  418f47:	call   0xa983:0x22437221
  418f4e:	sub    al,BYTE PTR [ecx]
  418f50:	mov    ecx,esp
  418f52:	pop    ebx
  418f53:	mov    edx,0x25011bf7
  418f58:	dec    edi
  418f59:	add    eax,0xe5744962
  418f5e:	add    BYTE PTR [eax],al
  418f60:	push   ebp
  418f61:	stos   BYTE PTR es:[edi],al
  418f62:	imul   ecx
  418f64:	pop    ebp
  418f65:	leave  
  418f66:	sti    
  418f67:	(bad)  
  418f68:	fidivr WORD PTR [ecx+0x15dd00fc]
  418f6e:	xchg   DWORD PTR [esi],eax
  418f70:	loop   0x418f50
  418f72:	dec    edi
  418f73:	or     BYTE PTR [edi],dh
  418f75:	fs cmc 
  418f77:	pop    esi
  418f78:	xor    ecx,ecx
  418f7a:	jae    0x418f81
  418f7c:	and    eax,0x57eb054a
  418f81:	sbb    edi,DWORD PTR [ebp-0x77ac4037]
  418f87:	in     al,dx
  418f88:	dec    ebp
  418f89:	xchg   edx,eax
  418f8a:	inc    eax
  418f8b:	or     bh,ch
  418f8d:	cmp    ecx,0x0
  418f90:	pop    es
  418f91:	adc    DWORD PTR [ecx+0x4d3aa855],ecx
  418f97:	dec    DWORD PTR [ebp+0x51]
  418f9a:	add    al,0x40
  418f9d:	and    eax,0x8b86580
  418fa2:	xchg   DWORD PTR [ebp-0x18],eax
  418fa5:	iret   
  418fa6:	mov    esi,0x15d15456
  418fab:	inc    eax
  418fac:	sub    al,0x71
  418fae:	in     eax,0x16
  418fb0:	ins    BYTE PTR es:[edi],dx
  418fb1:	or     eax,ebp
  418fb3:	mov    eax,ds:0x8b000970
  418fb8:	sub    al,0xa7
  418fba:	cmc    
  418fbb:	je     0x418fa0
  418fbd:	inc    eax
  418fbe:	cld    
  418fbf:	je     0x418f91
  418fc1:	or     ebx,edi
  418fc3:	adc    eax,0xfce00000
  418fc8:	aas    
  418fc9:	add    BYTE PTR [edi-0xb],dh
  418fcc:	cmp    bh,0xc0
  418fcf:	and    cl,BYTE PTR [eax-0x3c01cfa]
  418fd5:	push   eax
  418fd6:	fcom   QWORD PTR [edx+0x8d675c0]
  418fdc:	mov    bl,0x4c
  418fde:	adc    cl,bh
  418fe0:	xchg   BYTE PTR [esi],al
  418fe2:	popf   
  418fe3:	aas    
  418fe4:	cld    
  418fe5:	push   eax
  418fe6:	aad    0x3a
  418fe8:	mov    al,al
  418fea:	inc    eax
  418feb:	sbb    DWORD PTR [edx],esi
  418fed:	je     0x418fe8
  418fef:	inc    esi
  418ff0:	jle    0x418ff8
  418ff2:	and    esp,DWORD PTR [ebx+edx*8-0x488da7d1]
  418ff9:	or     ebx,DWORD PTR [esi+0x2c]
  418ffc:	fwait
  418ffd:	dec    DWORD PTR [eax]
  418fff:	lods   al,BYTE PTR ds:[esi]
  419000:	sar    DWORD PTR [edi],cl
  419002:	push   eax
  419003:	repnz mov bh,0x7
  419006:	pop    esi
  419007:	xor    al,0xd7
  419009:	cld    
  41900a:	and    eax,0x2af5f62b
  41900f:	mov    ebx,0x32d533f8
  419014:	jle    0x418fdc
  419016:	adc    bh,BYTE PTR [ebp+0x43]
  419019:	or     al,0xd5
  41901b:	jge    0x41909b
  41901d:	in     al,dx
  41901e:	add    al,0x98
  419020:	mov    BYTE PTR [edi],0x3
  419023:	pop    esp
  419024:	sbb    DWORD PTR [ebp+0x52],ebx
  419027:	sti    
  419028:	xor    BYTE PTR [ecx-0x52bb0000],cl
  41902e:	cmp    DWORD PTR [ebx+ebx*4-0x51],esi
  419032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419033:	sti    
  419034:	aad    0x97
  419036:	or     DWORD PTR [ebx-0x32be160],ecx
  41903c:	mov    al,ds:0x90b5023e
  419041:	and    dl,ah
  419043:	push   ebp
  419044:	sbb    ah,dl
  419046:	fild   DWORD PTR [edx-0x7ef839eb]
  41904c:	jo     0x4190a4
  41904e:	add    DWORD PTR [ecx+0x503104db],ecx
  419054:	int    0x97
  419056:	(bad)  
  419057:	sti    
  419058:	pop    esi
  419059:	bound  ecx,QWORD PTR [eax+0x7e3961c0]
  41905f:	or     BYTE PTR [edi+0x9],ch
  419062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419063:	rcr    ecx,cl
  419065:	mov    ecx,0x8fcd7f36
  41906a:	in     eax,dx
  41906b:	fxch   st(1)
  41906d:	mov    edx,0x8d82f6de
  419072:	xchg   BYTE PTR [edx],al
  419074:	popa   
  419075:	dec    edx
  419076:	xchg   edx,eax
  419077:	mov    ebx,0x32da9db1
  41907c:	es cli 
  41907e:	ins    DWORD PTR es:[edi],dx
  41907f:	mov    eax,0x330e31ce
  419084:	cwde   
  419085:	and    esi,DWORD PTR [edx+0x2b]
  419088:	push   esi
  419089:	and    ebx,esp
  41908b:	pop    es
  41908c:	(bad)  
  41908d:	dec    ecx
  41908e:	inc    edx
  41908f:	repz add BYTE PTR [eax],al
  419092:	dec    ebp
  419093:	int    0xee
  419095:	(bad)  
  419096:	jb     0x4190b0
  419098:	cmp    eax,0x378f7032
  41909d:	mov    BYTE PTR [ebx-0x63],ah
  4190a0:	loop   0x419097
  4190a2:	jge    0x4190d3
  4190a4:	sti    
  4190a5:	jle    0x41907a
  4190a7:	mov    edx,0xe9a532b4
  4190ac:	popa   
  4190ad:	dec    ebx
  4190ae:	pop    esp
  4190af:	or     al,0xb5
  4190b1:	xor    ah,BYTE PTR [ebp-0x37b193ef]
  4190b7:	jge    0x4190e3
  4190b9:	jle    0x419093
  4190bb:	mov    edx,0x8fd2d2f5
  4190c0:	sub    cl,dh
  4190c2:	add    ebx,0x9c546af
  4190c8:	xor    al,0x7d
  4190ca:	add    DWORD PTR [ecx-0x715f2ac9],edi
  4190d0:	adc    al,0x5c
  4190d2:	out    0xc9,eax
  4190d4:	out    0x9b,al
  4190d6:	repnz fwait
  4190d8:	es add al,0xf0
  4190db:	(bad)  
  4190dd:	mov    ch,0x8f
  4190df:	mov    cl,0x3
  4190e1:	sbb    DWORD PTR ss:[ebx],esp
  4190e4:	(bad)  
  4190e5:	ficomp WORD PTR [ecx+0x41]
  4190e8:	std    
  4190e9:	mov    bh,0x58
  4190eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ec:	imul   ecx
  4190ee:	dec    ecx
  4190ef:	sbb    al,BYTE PTR [ebx-0x7d15824e]
  4190f5:	jg     0x4190f7
  4190f7:	add    BYTE PTR [ebp-0x1a],bh
  4190fa:	mov    ah,BYTE PTR [eiz*8-0x1a169647]
  419101:	xchg   esi,eax
  419102:	pop    es
  419103:	outs   dx,BYTE PTR ds:[esi]
  419104:	or     BYTE PTR [edi+0x24c3dcc0],al
  41910a:	jae    0x4190f9
  41910c:	adc    DWORD PTR [ebp-0x3],ecx
  41910f:	fdivr  QWORD PTR [edx-0x2916f0cf]
  419115:	or     ebp,edi
  419117:	mov    esp,0x41438aaa
  41911c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41911d:	cmp    ecx,DWORD PTR [ecx+0x58c3beac]
  419123:	and    BYTE PTR [ebx],bl
  419125:	adc    al,BYTE PTR [eax]
  419127:	mov    esp,0xd8135d9
  41912c:	adc    eax,0x426255b9
  419131:	push   0x12
  419133:	test   eax,0x188bcd6
  419138:	pop    ecx
  419139:	cli    
  41913a:	je     0x4190e5
  41913c:	(bad)  
  41913d:	and    al,0x35
  41913f:	adc    ch,BYTE PTR cs:[esi]
  419142:	push   ds
  419143:	jmp    0xc03e9b1e
  419148:	ds (bad) 
  41914a:	je     0x419175
  41914c:	fldenv [esi*1-0x29db619e]
  419153:	inc    ecx
  419154:	adc    eax,0xec003f9d
  419159:	fdiv   DWORD PTR [edx]
  41915b:	mov    DWORD PTR [eax],eax
  41915d:	add    BYTE PTR [ecx-0x10290523],bh
  419163:	fild   WORD PTR [ebp+eax*2+0xfdb3514]
  41916a:	push   0xbcfffe1d
  41916f:	xor    al,0x72
  419171:	lock mov bl,0x89
  419174:	sub    al,BYTE PTR [ecx]
  419176:	lods   al,BYTE PTR ds:[esi]
  419177:	or     eax,0x89c3c637
  41917c:	and    al,BYTE PTR [ecx]
  41917e:	mov    esp,0x2845890d
  419183:	cmp    eax,0x3d30458a
  419188:	xchg   BYTE PTR [ebp+0x34],dh
  41918b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41918c:	jo     0x41918a
  41918e:	add    eax,0xcffff158
  419193:	xchg   eax,eax
  419195:	psubw  mm0,QWORD PTR [esi]
  419198:	std    
  419199:	jmp    FWORD PTR [esi+ebx*4+0x40]
  41919d:	hlt    
  41919e:	xlat   BYTE PTR ds:[ebx]
  41919f:	ror    DWORD PTR [edx],cl
  4191a1:	test   BYTE PTR [ebx+0x6500000c],ch
  4191a7:	pop    eax
  4191a8:	stc    
  4191a9:	psubsb mm5,mm2
  4191ac:	(bad)  
  4191ad:	(bad)  
  4191ae:	cmp    al,0x5
  4191b0:	stos   DWORD PTR es:[edi],eax
  4191b1:	jg     0x419196
  4191b3:	fld    DWORD PTR [esi+0xabb27d8]
  4191b9:	test   bl,dh
  4191bb:	or     al,0x0
  4191bd:	add    BYTE PTR [edi-0x26],cl
  4191c0:	jo     0x4191b6
  4191c2:	add    BYTE PTR [eax],al
  4191c4:	and    edx,DWORD PTR [edi-0x7]
  4191c7:	dec    DWORD PTR [ecx-0x23]
  4191ca:	add    al,0x79
  4191cd:	cs ss jne 0x419201
  4191d1:	pop    eax
  4191d2:	xor    DWORD PTR [ebp-0x30c442b],ecx
  4191d8:	retf   0xb74f
  4191db:	or     edi,edx
  4191dd:	cmp    eax,0x329511a1
  4191e2:	mov    al,al
  4191e4:	popa   
  4191e5:	sub    eax,ebx
  4191e7:	sbb    BYTE PTR [edx],0xff
  4191ea:	call   0x1c466b61
  4191ef:	jmp    0x4c778ddc
  4191f4:	aas    
  4191f5:	and    eax,DWORD PTR [edx]
  4191f7:	icebp  
  4191f8:	sub    edi,DWORD PTR [esi+0x7b25d7c6]
  4191fe:	push   ecx
  4191ff:	jge    0x4191b3
  419201:	lahf   
  419202:	and    BYTE PTR [ebx-0x57],0x32
  419206:	repnz cmc 
  419208:	push   es
  419209:	mov    edi,DWORD PTR [ecx+0x7d]
  41920c:	call   0x882f:0x9172eaa7
  419213:	xchg   ebp,edx
  419215:	xor    al,BYTE PTR [ecx]
  419217:	mov    ebx,DWORD PTR [eax]
  419219:	mov    ebx,0x6f7a30d3
  41921e:	(bad)  
  41921f:	push   ebp
  419220:	jb     0x419257
  419222:	jns    0x41923a
  419224:	adc    eax,0xc08833
  419229:	add    al,ch
  41922b:	pop    eax
  41922c:	in     al,dx
  41922d:	jb     0x41928c
  41922f:	jle    0x4191e5
  419231:	xchg   al,cl
  419233:	stos   BYTE PTR es:[edi],al
  419234:	jmp    0xe569:0xe9803972
  41923b:	mov    ah,BYTE PTR [ebp-0x7fcd6a8c]
  419241:	inc    ebx
  419242:	jno    0x4191c6
  419244:	sbb    DWORD PTR [esi-0x76d1e856],ecx
  41924a:	cwde   
  41924b:	ficomp DWORD PTR [eax-0x51f64641]
  419251:	(bad)  
  419252:	xlat   BYTE PTR ds:[ebx]
  419253:	cmp    ebx,esp
  419255:	add    edx,ebp
  419257:	or     DWORD PTR [edx-0x38],esp
  41925a:	dec    edx
  41925b:	mov    ah,0xa6
  41925d:	rsqrtps xmm3,XMMWORD PTR [ebp-0x39a3c015]
  419264:	jle    0x419200
  419266:	sub    bh,ch
  419268:	arpl   ax,ax
  41926a:	out    dx,al
  41926b:	xchg   ecx,eax
  41926c:	sbb    ecx,DWORD PTR [ecx]
  41926e:	add    DWORD PTR [eax],esp
  419270:	sub    al,0x6c
  419272:	pop    esi
  419273:	lds    ebx,FWORD PTR [esi-0x2d]
  419276:	pop    edi
  419277:	lds    ebp,FWORD PTR [esi-0x716a3e2d]
  41927d:	cs inc esi
  41927f:	adc    al,BYTE PTR [esi-0x587a4528]
  419285:	jp     0x41929d
  419287:	and    bh,bl
  419289:	cli    
  41928a:	dec    ebp
  41928b:	adc    dl,BYTE PTR [edi]
  41928d:	das    
  41928e:	add    BYTE PTR [eax],al
  419290:	or     dl,BYTE PTR [edx]
  419292:	jo     0x41924c
  419294:	mov    dh,BYTE PTR [ebx]
  419296:	in     eax,dx
  419297:	jp     0x419266
  419299:	mov    bh,0xbc
  41929b:	repnz fwait
  41929d:	mov    ecx,0xba275219
  4192a2:	inc    ebp
  4192a3:	(bad)  
  4192a4:	(bad)  
  4192a5:	xchg   edx,eax
  4192a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a7:	sub    edi,DWORD PTR [esp+ecx*1-0x6]
  4192ab:	inc    ebx
  4192ac:	add    al,al
  4192ae:	xchg   ecx,eax
  4192af:	cmp    al,0x97
  4192b1:	adc    ah,bh
  4192b3:	cs push es
  4192b5:	xchg   BYTE PTR [edx],dh
  4192b7:	ret    0x274a
  4192ba:	pop    es
  4192bb:	lods   eax,DWORD PTR ds:[esi]
  4192bc:	inc    ecx
  4192bd:	pop    ds
  4192be:	fiadd  DWORD PTR [ebx+0x74]
  4192c1:	xchg   BYTE PTR [edx],dh
  4192c3:	ret    0x6c32
  4192c6:	outs   dx,DWORD PTR ds:[esi]
  4192c7:	cmp    dl,BYTE PTR [ecx+ecx*1+0x51464a00]
  4192ce:	inc    ecx
  4192cf:	jmp    0xd5ca4d6b
  4192d4:	push   esp
  4192d5:	cs and al,0x70
  4192d8:	dec    edx
  4192d9:	aas    
  4192da:	mov    DWORD PTR [ecx+eax*1],esp
  4192dd:	mov    BYTE PTR [ebx-0x3b],cl
  4192e0:	jl     0x4192b4
  4192e2:	or     esi,DWORD PTR [eax+0x32]
  4192e5:	daa    
  4192e6:	mov    DWORD PTR [ecx+eax*8],ebp
  4192e9:	xchg   BYTE PTR [ebx-0x3b],cl
  4192ec:	push   esp
  4192ed:	push   edx
  4192ee:	call   FWORD PTR [ebx+0x1a]
  4192f1:	inc    ebx
  4192f2:	data16 scas al,BYTE PTR es:[edi]
  4192f4:	add    BYTE PTR [eax],al
  4192f6:	call   0xf7cb:0x4fd32142
  4192fd:	xor    DWORD PTR [ecx-0x171034f],0x8be90c4b
  419307:	xchg   ecx,eax
  419308:	in     al,dx
  419309:	push   0xfffffff5
  41930b:	cmc    
  41930c:	or     BYTE PTR [ecx+ebp*8],0x9
  419310:	sub    esp,0xbe56069a
  419316:	or     eax,0x922707a3
  41931b:	sbb    eax,0x90d1dc00
  419320:	inc    ebp
  419321:	fst    QWORD PTR [ebp-0x56]
  419324:	imul   ecx
  419326:	pop    ebx
  419327:	dec    ecx
  419328:	je     0x4192ff
  41932a:	in     eax,dx
  41932b:	int3   
  41932c:	pop    es
  41932d:	bound  ebp,QWORD PTR [edx]
  41932f:	push   ss
  419330:	sub    ch,0x67
  419333:	loope  0x4193a8
  419335:	icebp  
  419336:	add    ebx,ecx
  419338:	mul    eax
  41933a:	adc    edx,DWORD PTR [esi]
  41933c:	jb     0x419344
  41933e:	mov    esp,0x22600f9a
  419343:	sbb    al,BYTE PTR [ecx+0xb09d600]
  419349:	cmp    BYTE PTR [ecx],0xb
  41934c:	add    BYTE PTR [eax],al
  41934e:	mov    bh,0x7
  419350:	jg     0x41934a
  419352:	clc    
  419353:	sbb    al,0x7f
  419355:	cmc    
  419356:	cld    
  419357:	or     DWORD PTR [eax],eax
  419359:	cmp    eax,DWORD PTR [eax]
  41935b:	add    BYTE PTR [ecx+0x18870ae1],dh
  419361:	or     al,BYTE PTR [eax]
  419363:	add    BYTE PTR [edi+0x5c],dh
  419366:	add    DWORD PTR [ebp-0x7bf4f657],eax
  41936c:	cmp    ecx,DWORD PTR [edx]
  41936e:	add    BYTE PTR [eax],al
  419370:	and    ecx,ebx
  419372:	(bad)  
  419373:	(bad)  
  419374:	in     al,dx
  419375:	leave  
  419376:	or     al,BYTE PTR [edi+edi*2+0x3c000009]
  41937d:	ins    BYTE PTR es:[edi],dx
  41937e:	cld    
  41937f:	add    al,ah
  419381:	or     ebx,esi
  419383:	shr    DWORD PTR [ecx+ecx*1-0x7a54c000],0xad
  41938b:	add    BYTE PTR [ecx+ecx*1-0x14d22e79],bh
  419392:	(bad)  
  419393:	jmp    FWORD PTR [ecx+ecx*4+0x43fb0374]
  41939a:	in     eax,dx
  41939b:	mov    esi,DWORD PTR [ecx]
  41939d:	sbb    eax,0x61347445
  4193a2:	jno    0x4193e1
  4193a4:	xor    al,0x61
  4193a6:	jno    0x4193d9
  4193a8:	inc    DWORD PTR [eax]
  4193aa:	add    al,0x74
  4193ac:	ror    BYTE PTR [edx-0x9dff718],1
  4193b2:	jle    0x41939c
  4193b4:	jl     0x4193d4
  4193b6:	add    BYTE PTR [esp+edi*1-0x475efff7],0xe1
  4193be:	add    BYTE PTR ds:[eax],al
  4193c1:	add    ch,dl
  4193c3:	aaa    
  4193c4:	ret    
  4193c5:	pop    es
  4193c6:	sar    BYTE PTR [eax-0x7a],0xd2
  4193ca:	mov    ds:0x97c54577,eax
  4193d0:	mov    ebx,0x785a2e13
  4193d5:	inc    ebp
  4193d6:	int    0xa7
  4193d8:	mov    ebp,0x7d01fef7
  4193dd:	inc    ecx
  4193de:	mov    cl,0x97
  4193e0:	mov    esp,0x7d09ee27
  4193e5:	inc    ecx
  4193e6:	in     eax,0xa7
  4193e8:	mov    esp,0x7e11fe13
  4193ed:	inc    ecx
  4193ee:	int    0xa6
  4193f0:	inc    ebx
  4193f1:	jae    0x4193c0
  4193f3:	pop    ebx
  4193f4:	inc    ebx
  4193f5:	add    ch,al
  4193f7:	xor    al,BYTE PTR [ecx]
  4193f9:	jae    0x4193dc
  4193fb:	es add al,0x73
  4193fe:	push   ss
  4193ff:	je     0x419444
  419401:	add    ch,dh
  419403:	xor    al,BYTE PTR [ecx]
  419405:	je     0x419405
  419407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419408:	les    eax,FWORD PTR [edi]
  41940a:	pop    esi
  41940b:	xlat   BYTE PTR ds:[ebx]
  41940c:	test   DWORD PTR [eax+0xc2dafc3],0xfa865229
  419416:	rcl    DWORD PTR [esp+ebx*8],0x80
  41941a:	xchg   edi,eax
  41941b:	mov    esi,0x35e555ea
  419420:	in     al,0x4e
  419422:	and    eax,0xbc1a6
  419427:	add    BYTE PTR ds:0xcde82900,ah
  41942d:	ss sub bh,ch
  419430:	pop    esi
  419431:	pop    ebp
  419432:	stc    
  419433:	adc    BYTE PTR [ebp+0x13f4f85a],0x27
  41943a:	add    DWORD PTR [eax],eax
  41943c:	aad    0x9
  41943e:	addr16 mov al,0xfd
  419441:	inc    ebx
  419442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419443:	sub    al,BYTE PTR [edx-0x71]
  419446:	in     eax,dx
  419447:	fcom   QWORD PTR [edi+0x5433ea15]
  41944d:	sahf   
  41944e:	cli    
  41944f:	neg    ecx
  419451:	mov    bh,ah
  419453:	sub    ah,BYTE PTR [eax]
  419455:	sbb    al,0x67
  419457:	test   eax,0x2740919
  41945c:	les    ecx,FWORD PTR [ecx+0x20]
  41945f:	sar    edx,0x95
  419462:	jmp    0x360ad75d
  419467:	retf   0x4713
  41946a:	fild   DWORD PTR [ebx]
  41946c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41946d:	dec    ecx
  41946e:	shl    BYTE PTR [ecx],cl
  419470:	xchg   BYTE PTR [eax-0x6f0e7b35],dl
  419476:	jmp    0x41947b
  419478:	aad    0xb8
  41947a:	adc    al,0xd3
  41947c:	pop    ebp
  41947d:	popf   
  41947e:	out    dx,al
  41947f:	jle    0x419491
  419481:	retf   0x4363
  419484:	inc    esi
  419485:	add    ebx,ecx
  419487:	inc    ebx
  419488:	mov    dl,0x9a
  41948a:	jmp    0xd5419492
  41948f:	mov    cl,0xe6
  419491:	add    edx,ebp
  419493:	stc    
  419494:	push   cs
  419495:	ss push es
  419497:	or     ah,bh
  419499:	ror    DWORD PTR [edi-0x43],cl
  41949c:	jle    0x4194b9
  41949e:	inc    DWORD PTR [edi-0x3aadd59a]
  4194a4:	sub    al,BYTE PTR [eax-0x79ca696b]
  4194aa:	(bad)  
  4194ab:	xor    edi,ebx
  4194ad:	jl     0x4194c5
  4194af:	sbb    dh,dh
  4194b1:	test   DWORD PTR [ebp+0x6c03e706],ebp
  4194b7:	pop    es
  4194b8:	add    BYTE PTR [edx-0x6b],ah
  4194bb:	sub    ecx,DWORD PTR [ecx+0x8135be1]
  4194c1:	not    BYTE PTR [eax-0xe]
  4194c4:	add    cl,ch
  4194c6:	(bad)  
  4194c7:	loopne 0x419513
  4194c9:	add    DWORD PTR [edi],edi
  4194cb:	xchg   BYTE PTR ds:0x8109d6ea,bl
  4194d1:	sub    DWORD PTR [esi],ebp
  4194d3:	retf   
  4194d4:	mov    al,bh
  4194d6:	pop    eax
  4194d7:	sub    al,0x8
  4194d9:	xor    DWORD PTR [esi],0xffffffb1
  4194dc:	jmp    DWORD PTR [ecx-0x5c]
  4194df:	nop
  4194e0:	fnsave [eax+0x3a]
  4194e3:	cmp    eax,DWORD PTR [edi+0x2631dd24]
  4194e9:	xlat   BYTE PTR ds:[ebx]
  4194ea:	lods   al,BYTE PTR ds:[esi]
  4194eb:	sbb    al,0x84
  4194ed:	test   eax,0xeb9c86ec
  4194f2:	add    BYTE PTR [eax],al
  4194f4:	(bad)  
  4194f5:	or     ebp,edi
  4194f7:	xor    al,0xbd
  4194f9:	nop
  4194fa:	(bad)  
  4194fb:	inc    ebx
  4194fc:	(bad)  
  4194fd:	scas   eax,DWORD PTR es:[edi]
  4194fe:	inc    eax
  419500:	jmp    0x55e89220
  419505:	dec    ecx
  419506:	or     eax,0x75765
  41950b:	jmp    0x632d2bfd
  419510:	pop    es
  419511:	mov    al,0x1
  419513:	adc    edx,ecx
  419515:	xor    edx,edi
  419517:	jl     0x419505
  419519:	sbb    al,0x84
  41951b:	test   eax,0xeb70869c
  419520:	(bad)  
  419521:	or     ebp,edi
  419523:	fsubr  st(2),st
  419525:	nop
  419526:	(bad)  
  419527:	rol    DWORD PTR [edx-0x4abf0050],cl
  41952d:	push   ds
  41952e:	std    
  41952f:	dec    esi
  419530:	push   ebp
  419531:	dec    ecx
  419532:	or     eax,0xff4bf800
  419537:	jmp    FWORD PTR [ebp+ebx*4+0x42]
  41953b:	or     al,0x96
  41953d:	push   ds
  41953e:	cld    
  41953f:	ja     0x419575
  419541:	jl     0x419541
  419543:	out    0xab,eax
  419545:	pop    esi
  419546:	cld    
  419547:	(bad)  
  419548:	mov    eax,0x6f850ac5
  41954d:	add    al,0x0
  41954f:	add    BYTE PTR [edi+0x7988e942],dh
  419555:	in     eax,dx
  419556:	xchg   DWORD PTR [ebp+0x0],eax
  419559:	add    dh,dl
  41955b:	sahf   
  41955c:	jo     0x419552
  41955e:	scas   eax,DWORD PTR es:[edi]
  41955f:	out    dx,eax
  419560:	or     ecx,DWORD PTR [edi]
  419562:	jle    0x4195b1
  419564:	(bad)  
  419565:	(bad)  
  419566:	cld    
  419567:	pushf  
  419568:	inc    BYTE PTR [edx-0x7df3ee0c]
  41956e:	mov    cl,0x6
  419570:	add    BYTE PTR [eax],al
  419572:	(bad)  
  419573:	pop    edx
  419574:	icebp  
  419575:	(bad)  
  419577:	pop    edx
  419578:	(bad)  
  419579:	(bad)  
  41957a:	in     al,dx
  41957b:	pushf  
  41957c:	inc    esi
  41957d:	add    al,0x1b
  41957f:	(bad)  
  419580:	(bad)  
  419581:	(bad)  
  419582:	mov    esp,0x98840c2d
  419587:	or     al,0x0
  419589:	add    BYTE PTR [edi],ch
  41958b:	in     eax,0xb
  41958d:	cvtpi2ps xmm0,QWORD PTR [esi]
  419590:	std    
  419591:	(bad)  
  419592:	mov    esp,0xa301bcdb
  419597:	cdq    
  419598:	adc    DWORD PTR [ecx],eax
  41959a:	lods   al,BYTE PTR ds:[esi]
  41959b:	or     eax,0x9984478a
  4195a0:	mov    edi,0xbcda7475
  4195a5:	add    BYTE PTR [ebp+ecx*1+0x31887500],cl
  4195ac:	dec    BYTE PTR [esi]
  4195ae:	aad    0xa5
  4195b0:	sub    eax,DWORD PTR [eax]
  4195b2:	aad    0x22
  4195b4:	xor    BYTE PTR [edi+0x402d5],bh
  4195ba:	shr    BYTE PTR [esi+0x17],cl
  4195c0:	aad    0x22
  4195c2:	cmp    DWORD PTR [ebx+0x4f],0x5829ae23
  4195c9:	mov    dh,0x7e
  4195cb:	sti    
  4195cc:	inc    edx
  4195cd:	clc    
  4195ce:	sbb    dh,ah
  4195d0:	inc    ebp
  4195d1:	add    BYTE PTR [eax],ch
  4195d3:	push   0xffffffd6
  4195d5:	stos   DWORD PTR es:[edi],eax
  4195d6:	cmp    BYTE PTR [ebx-0x2d37098],cl
  4195dc:	and    ch,BYTE PTR [ebx+0x19]
  4195df:	jmp    0x419608
  4195e1:	and    BYTE PTR ds:0x19731b89,ah
  4195e7:	into   
  4195e8:	pop    es
  4195e9:	xor    BYTE PTR ds:0x3e428889,ah
  4195ef:	inc    ebx
  4195f0:	jmp    DWORD PTR [ecx]
  4195f2:	jp     0x4195f5
  4195f4:	push   esi
  4195f5:	dec    ebx
  4195f6:	clc    
  4195f7:	dec    edi
  4195f8:	pop    eax
  4195f9:	in     al,0xf7
  4195fb:	dec    edi
  4195fc:	push   eax
  4195fd:	(bad)  
  4195fe:	pop    edi
  4195ff:	xor    DWORD PTR ds:0xd2a6be4b,edx
  419605:	addr16 add al,0xda
  419609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41960a:	jl     0x41960b
  41960c:	ret    0x7822
  41960f:	mov    ebx,DWORD PTR [ecx]
  419611:	and    BYTE PTR ds:0x7a87e6fd,0x44
  419618:	call   0x119b1e3
  41961d:	cwde   
  41961e:	and    al,0x45
  419620:	push   esi
  419621:	popa   
  419622:	add    BYTE PTR [ecx+0x32920000],al
  419628:	scas   eax,DWORD PTR es:[edi]
  419629:	in     eax,dx
  41962a:	push   esi
  41962b:	or     DWORD PTR [edi+eax*2-0x391d5c80],esi
  419632:	lds    ecx,FWORD PTR [ecx-0x33]
  419635:	jl     0x4196a9
  419637:	test   DWORD PTR [edi+ebx*1-0x66185be6],ebx
  41963e:	bound  eax,QWORD PTR [ebp+0x185da86c]
  419644:	ss ins BYTE PTR es:[edi],dx
  419646:	push   edx
  419647:	sbb    bh,ah
  419649:	sbb    DWORD PTR [edx+0x26a96fb9],0xffffff82
  419650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419651:	pop    ds
  419652:	cmp    dh,bh
  419654:	mov    edx,0x64099513
  419659:	inc    esp
  41965a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41965b:	mov    edx,0xb906c173
  419660:	imul   eax,ecx,0xa
  419663:	mov    ecx,0x97f0380
  419668:	pop    esp
  419669:	sub    DWORD PTR [ecx-0x5ad919e8],0xf8205418
  419673:	std    
  419674:	push   edx
  419675:	adc    al,0x95
  419677:	or     DWORD PTR [ebx+eax*2+0x66],esp
  41967b:	(bad)  
  41967d:	rol    BYTE PTR [esi],0x82
  419680:	and    al,0x48
  419682:	fcomp  DWORD PTR [ebp-0x4a19d936]
  419688:	(bad)  
  419689:	ret    
  41968a:	add    BYTE PTR [eax],al
  41968c:	retf   0x23d2
  41968f:	dec    eax
  419690:	inc    esi
  419691:	cmc    
  419692:	imul   ebp,DWORD PTR [edx+0x7fe609d2],0x3e70ab3
  41969c:	mov    ebp,0xa026c74d
  4196a1:	xor    DWORD PTR [edx],0xfffffffc
  4196a4:	aad    0xc4
  4196a6:	call   FWORD PTR [eax+0x660d4f7f]
  4196ac:	out    dx,eax
  4196ad:	or     DWORD PTR [eax],eax
  4196af:	jmp    0x274929b3
  4196b4:	xchg   ebp,eax
  4196b5:	adc    bh,bh
  4196b7:	popa   
  4196b8:	xlat   BYTE PTR ds:[ebx]
  4196b9:	out    dx,al
  4196ba:	inc    edx
  4196bb:	push   ebp
  4196bc:	xlat   BYTE PTR ds:[ebx]
  4196bd:	xor    DWORD PTR [ecx+0xd05b2c4],eax
  4196c3:	push   0xfffffffe
  4196c5:	pop    ss
  4196c6:	std    
  4196c7:	ss iret 
  4196c9:	retf   0xdeef
  4196cc:	mov    ebx,0xd69105c9
  4196d1:	or     DWORD PTR [eax],eax
  4196d3:	test   eax,0xa9751626
  4196d8:	lods   eax,DWORD PTR ds:[esi]
  4196d9:	mov    dl,0xd7
  4196db:	add    DWORD PTR [edi],edi
  4196dd:	xchg   edi,eax
  4196de:	cld    
  4196df:	push   es
  4196e0:	lahf   
  4196e1:	inc    ecx
  4196e2:	xchg   DWORD PTR [esi+esi*8-0x6d193876],ebp
  4196e9:	data16 add cl,ch
  4196ec:	(bad)  
  4196ed:	sbb    BYTE PTR [ebx-0x3f],0x0
  4196f1:	add    BYTE PTR [edi+edx*2],al
  4196f4:	xchg   DWORD PTR [eax*8-0x399dece0],esp
  4196fb:	mov    dl,bh
  4196fd:	out    0x24,eax
  4196ff:	cmc    
  419700:	cmp    BYTE PTR [edx+0x28f5f130],bl
  419706:	aad    0x16
  419708:	je     0x4196ec
  41970a:	lods   eax,DWORD PTR ds:[esi]
  41970b:	xor    BYTE PTR [ecx],al
  41970d:	mov    ds:0x1a061054,eax
  419712:	jecxz  0x419734
  419714:	pop    es
  419715:	ins    BYTE PTR es:[edi],dx
  419716:	xchg   esi,eax
  419717:	or     al,0x87
  419719:	sub    al,0xe5
  41971b:	add    BYTE PTR [edx-0x6d],0xf0
  41971f:	call   0x4d37:0xd35f00f3
  419726:	push   edi
  419727:	sbb    al,0x92
  419729:	shl    ebp,0x5e
  41972c:	mov    cl,0xe8
  41972e:	test   BYTE PTR [esi-0x4],0xff
  419732:	inc    edx
  419733:	in     eax,dx
  419734:	jo     0x419722
  419736:	add    eax,0x1ae8b557
  41973b:	fs cld 
  41973d:	push   edi
  41973f:	pop    esi
  419740:	fisttp QWORD PTR [ecx+0x4d86d629]
  419746:	mov    ah,0x18
  419748:	fmul   DWORD PTR [ecx+0x7584ae81]
  41974e:	cld    
  41974f:	xchg   edx,eax
  419750:	dec    eax
  419751:	enter  0x4f35,0xb5
  419755:	jne    0x419757
  419757:	add    BYTE PTR [ecx],dh
  419759:	and    ebx,DWORD PTR [edx-0xc]
  41975c:	push   ecx
  41975d:	push   ss
  41975e:	cmp    bl,al
  419760:	inc    ecx
  419761:	adc    BYTE PTR [edx+0x19f5e075],cl
  419767:	cvttps2pi mm1,QWORD PTR [edx]
  41976a:	out    0x37,eax
  41976c:	inc    ebp
  41976d:	dec    edi
  41976e:	icebp  
  41976f:	jne    0x4197a6
  419771:	xchg   ecx,eax
  419772:	dec    edx
  419773:	cmp    al,0xad
  419775:	jo     0x41973d
  419777:	sbb    BYTE PTR [ecx+0x65],ch
  41977a:	xor    eax,0xfc628ae8
  41977f:	push   DWORD PTR [eax-0x36]
  419782:	jae    0x4197e9
  419784:	addr16 pop ebp
  419786:	cmp    DWORD PTR [ebx+0x18bd712d],ecx
  41978c:	mov    edi,0xeb893e17
  419791:	and    DWORD PTR [edi+0x18],esp
  419794:	dec    ecx
  419795:	pop    esp
  419796:	mov    cl,0x51
  419798:	cld    
  419799:	cmc    
  41979a:	pop    ebp
  41979b:	jp     0x419772
  41979d:	jnp    0x4197c3
  41979f:	jmp    0x7e73f7a
  4197a4:	dec    esi
  4197a5:	out    0x33,al
  4197a7:	mov    ebp,edx
  4197a9:	cmp    DWORD PTR [esi+0x33e5d4e7],edi
  4197af:	or     DWORD PTR [eax],0x560cf98b
  4197b5:	pop    ss
  4197b6:	es std 
  4197b8:	jp     0x419772
  4197ba:	mov    eax,0xea0000fc
  4197bf:	cli    
  4197c0:	jbe    0x419807
  4197c2:	test   eax,0xd50e48ca
  4197c7:	and    dl,BYTE PTR [edi+0x6d6e4817]
  4197cd:	push   eax
  4197ce:	pop    esp
  4197cf:	jl     0x4197b6
  4197d1:	out    0xae,eax
  4197d3:	pop    eax
  4197d4:	and    al,0xfd
  4197d6:	dec    esp
  4197d7:	fs jmp 0xfec0ae15
  4197dd:	cld    
  4197de:	call   0x6d7e:0x5821183e
  4197e5:	call   0x42b52a
  4197ea:	sub    dh,BYTE PTR cs:[esi+0x73]
  4197ee:	dec    ecx
  4197ef:	or     edx,DWORD PTR [eax+0x2422d50e]
  4197f5:	jne    0x4197b4
  4197f7:	xchg   edi,eax
  4197f8:	enter  0xed3b,0x81
  4197fc:	adc    al,BYTE PTR [eax]
  4197fe:	aad    0xa9
  419800:	shl    BYTE PTR [edi],0x5c
  419803:	in     al,0xdf
  419805:	cld    
  419806:	push   0x5cb62c5e
  41980b:	push   ebx
  41980c:	and    DWORD PTR [ecx],esi
  41980e:	xchg   ebp,eax
  41980f:	pop    ss
  419810:	retf   0xee3b
  419813:	bound  ebx,QWORD PTR [ecx]
  419815:	fsub   DWORD PTR [edx]
  419817:	or     al,BYTE PTR [ebp-0x41]
  41981a:	xchg   ebx,eax
  41981b:	inc    edi
  41981c:	jecxz  0x419821
  41981e:	push   es
  41981f:	add    DWORD PTR [ebx-0x46ffff79],0x9ba39b1
  419829:	add    DWORD PTR [esp+ecx*1],0x8926cc4c
  419830:	xchg   ebp,eax
  419831:	add    al,0x6b
  419833:	int    0xd4
  419835:	or     edi,esp
  419837:	xchg   BYTE PTR [eax],al
  419839:	loop   0x419821
  41983b:	adc    dl,BYTE PTR [ecx-0x2c]
  41983e:	call   0xe6e36d46
  419843:	add    edx,ebp
  419845:	stc    
  419846:	mov    esi,0xe70a0617
  41984b:	mov    bl,0x4f
  41984d:	mov    dh,0x1e
  41984f:	sub    al,0x27
  419851:	xchg   ebx,eax
  419852:	xor    eax,0x12ae5423
  419857:	add    al,0x4c
  419859:	sbb    DWORD PTR [edx-0x37],esi
  41985c:	and    bh,BYTE PTR [ecx-0x31e4ad8f]
  419862:	push   ds
  419863:	add    al,0x52
  419865:	into   
  419866:	sbb    cl,BYTE PTR [ebp+0x550f39a6]
  41986c:	xchg   edx,eax
  41986d:	adc    al,0xfe
  41986f:	xchg   DWORD PTR ds:0xd7076b04,edx
  419875:	or     edi,esp
  419877:	(bad)  
  419878:	sbb    ecx,DWORD PTR [esi-0x7f346823]
  41987e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41987f:	sub    DWORD PTR [ebp-0x55f4a3f7],0xffffff89
  419886:	dec    edi
  419887:	add    eax,0x9dd50000
  41988c:	jmp    0x685b8654
  419891:	and    al,0xd2
  419893:	adc    eax,DWORD PTR [eax]
  419895:	jmp    0x204433f0
  41989a:	pop    edx
  41989b:	dec    ebx
  41989c:	(bad)  
  41989d:	sub    dh,ah
  41989f:	xchg   bh,dl
  4198a1:	call   0x2d07a27c
  4198a6:	retf   0xe909
  4198a9:	fld    DWORD PTR [ebp-0x39]
  4198ac:	(bad)  
  4198ad:	xchg   ecx,eax
  4198ae:	mov    ecx,0x617efcca
  4198b3:	(bad)  
  4198b4:	jecxz  0x419922
  4198b6:	push   ss
  4198b7:	add    eax,0x9d93c84
  4198bc:	add    BYTE PTR [esi+0x5f],ah
  4198bf:	dec    DWORD PTR [eax+0x3ff81d14]
  4198c5:	jmp    0xba493581
  4198ca:	mov    bh,0x3b
  4198cc:	push   eax
  4198cd:	cli    
  4198ce:	push   ss
  4198cf:	or     ecx,0xfd113d51
  4198d5:	ss push edx
  4198d7:	dec    edx
  4198d8:	jae    0x4198b4
  4198da:	gs mov edi,0xfcca8911
  4198e1:	push   ds
  4198e2:	arpl   WORD PTR [edx],si
  4198e4:	xor    DWORD PTR [edx],0x4d
  4198e7:	dec    ecx
  4198e8:	out    0x8c,eax
  4198ea:	(bad)  [ecx]
  4198ec:	add    BYTE PTR [ebx-0x5ed40000],dl
  4198f2:	add    DWORD PTR [ebp+ebx*1+0x23],ebp
  4198f6:	push   eax
  4198f7:	imul   BYTE PTR [edi+eiz*8-0x78]
  4198fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fc:	out    dx,al
  4198fd:	sub    ch,BYTE PTR [esi+0x44]
  419900:	mov    ah,0x14
  419902:	xchg   DWORD PTR [ecx+edi*4],esp
  419905:	mov    al,bh
  419907:	(bad)  
  419908:	les    ecx,FWORD PTR [ebp+0x9d6e85e]
  41990e:	push   0x0
  419910:	xlat   BYTE PTR ds:[ebx]
  419911:	arpl   di,di
  419913:	mov    ecx,?
  419915:	aad    0x4f
  419917:	dec    DWORD PTR [ecx]
  419919:	loop   0x419915
  41991b:	(bad)  
  41991c:	jae    0x419998
  41991e:	loope  0x419908
  419920:	add    DWORD PTR [ebx-0x4],edx
  419923:	jmp    DWORD PTR ds:0x4483e14b
  419929:	call   0x7c01d38
  41992e:	add    BYTE PTR [eax],al
  419930:	daa    
  419931:	inc    ecx
  419932:	and    eax,0xc0343733
  419937:	jne    0x4199b2
  419939:	jg     0x419994
  41993b:	hlt    
  41993c:	push   edi
  41993d:	add    eax,0xe97456e8
  419942:	cli    
  419943:	mov    DWORD PTR [ecx],edi
  419945:	cli    
  419946:	cs shl ch,0x52
  41994a:	in     eax,0x39
  41994c:	cmp    edx,edi
  41994e:	or     al,BYTE PTR [edi+ebp*2+0x7]
  419955:	add    ch,al
  419957:	dec    edx
  419958:	jmp    0xb281296
  41995d:	xchg   al,ah
  41995f:	or     eax,0x7ac70000
  419964:	jmp    0x7f3812f4
  419969:	cmp    al,0x8c
  41996b:	or     eax,0xde1840b
  419970:	add    BYTE PTR [eax],al
  419972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419973:	add    DWORD PTR [eax-0x3a75fb76],esi
  419979:	vmread DWORD PTR [ebp+0x3cecffff],ebp
  419980:	cld    
  419981:	jmp    0x419987
  419983:	mov    al,ch
  419985:	je     0x41996c
  419987:	inc    eax
  419988:	xchg   DWORD PTR [edx*8-0x5f087c08],ecx
  41998f:	mov    ebp,0x99153112
  419994:	(bad)
  419997:	out    0x27,al
  419999:	jbe    0x4199c1
  41999b:	lods   al,BYTE PTR ds:[esi]
  41999c:	int    0xd7
  41999e:	push   eax
  41999f:	daa    
  4199a0:	add    BYTE PTR [ecx+0x3b9522fd],0x5e
  4199a7:	and    eax,DWORD PTR [ecx-0x2b112ac8]
  4199ad:	mov    BYTE PTR [eax],dl
  4199af:	jae    0x41993d
  4199b1:	sbb    al,0x64
  4199b3:	repz test eax,0xdfbb18c4
  4199b9:	sub    DWORD PTR [eax],eax
  4199bb:	add    BYTE PTR [esi+ebx*8+0x6f],bl
  4199bf:	std    
  4199c0:	call   0xd5818d2b
  4199c5:	xchg   ebp,eax
  4199c6:	int    0xa7
  4199c8:	pop    esp
  4199c9:	push   cx
  4199cb:	xchg   DWORD PTR [eax],ecx
  4199cd:	outs   dx,DWORD PTR ds:[esi]
  4199ce:	mov    bh,BYTE PTR [ebx+0x1d]
  4199d1:	call   0x23185d9b
  4199d6:	add    DWORD PTR [eax],eax
  4199d8:	cmp    eax,0x4afca49e
  4199dd:	lods   al,BYTE PTR ds:[esi]
  4199de:	mov    ebp,0x95e359e7
  4199e3:	cmp    BYTE PTR [esi+0x5e],cl
  4199e6:	cmp    eax,0x3d665c40
  4199eb:	cmp    DWORD PTR [eax+0x58aa92fe],edx
  4199f1:	fcom   QWORD PTR [edi+eax*1-0x39eaa1b2]
  4199f8:	fldenv [ebx]
  4199fa:	out    0x40,eax
  4199fc:	pop    esi
  4199fd:	pop    esi
  4199fe:	adc    ebp,edi
  419a00:	leave  
  419a01:	rcr    BYTE PTR [edi],cl
  419a03:	adc    edx,DWORD PTR [ecx]
  419a05:	or     bh,cl
  419a07:	ret    
  419a08:	repnz sub DWORD PTR [esp+edx*1],0xffffff85
  419a0d:	adc    BYTE PTR [ebx],bl
  419a0f:	push   ebp
  419a10:	dec    esp
  419a11:	mov    edi,0xbb0c03d2
  419a16:	into   
  419a17:	adc    ecx,DWORD PTR [eax+0x11]
  419a1a:	mov    esi,0x1482ad03
  419a1f:	sub    al,0x0
  419a21:	add    BYTE PTR [esi+ecx*4-0x22],cl
  419a25:	push   ds
  419a26:	push   ss
  419a27:	push   ds
  419a28:	jb     0x4199f3
  419a2a:	mov    esi,0xd82423d4
  419a2f:	mov    ebx,ebx
  419a31:	push   ds
  419a32:	mov    al,ds:0xf2bed210
  419a37:	xchg   esi,eax
  419a38:	lock push ds
  419a3a:	push   es
  419a3b:	push   ss
  419a3c:	(bad)  
  419a3d:	jae    0x419a3f
  419a3f:	adc    DWORD PTR [esi+0x2b],esi
  419a42:	loope  0x4199ca
  419a44:	xchg   edx,eax
  419a45:	cdq    
  419a46:	int    0x10
  419a48:	fcom   QWORD PTR [edi]
  419a4a:	jge    0x4199d2
  419a4c:	(bad)  
  419a4d:	push   ds
  419a4e:	push   0x4c17b3ea
  419a53:	(bad)  
  419a54:	push   edx
  419a55:	lea    edx,[eax]
  419a57:	out    0x6f,al
  419a59:	mov    edi,0x1aa447fa
  419a5e:	dec    edx
  419a5f:	sub    DWORD PTR [edi+eiz*1+0x2c0e8e4c],0x53
  419a67:	cwde   
  419a68:	and    eax,0x6c65c1f
  419a6d:	mov    ebp,DWORD PTR [esi-0x566500e7]
  419a73:	adc    BYTE PTR [esi],cl
  419a75:	test   BYTE PTR [esi-0x256718bf],bl
  419a7b:	adc    BYTE PTR [ebx+esi*1-0x3],dh
  419a7f:	mov    ecx,0xee37dff
  419a84:	mov    ah,BYTE PTR [eax+eax*1+0x822df00]
  419a8b:	aas    
  419a8c:	rol    edi,0x74
  419a8f:	fmulp  st(3),st
  419a91:	fstp   TBYTE PTR [edi-0x394edcca]
  419a97:	stos   DWORD PTR es:[edi],eax
  419a98:	ror    BYTE PTR [ecx],cl
  419a9a:	push   ebx
  419a9b:	jb     0x419a9f
  419a9d:	(bad)  
  419a9e:	jmp    0x419a89
  419aa0:	fisttp QWORD PTR [ecx]
  419aa2:	add    BYTE PTR [edx+0x6d],ch
  419aa5:	pop    ss
  419aa6:	add    BYTE PTR [edx],bl
  419aa8:	xor    DWORD PTR [esi-0x36e1ea99],0xffffffff
  419aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ab0:	popf   
  419ab1:	push   ss
  419ab2:	std    
  419ab3:	xchg   esi,eax
  419ab4:	popf   
  419ab5:	aaa    
  419ab6:	adc    ch,BYTE PTR [ecx]
  419ab8:	shr    DWORD PTR [esi-0x78],1
  419abb:	mov    dl,0x97
  419abd:	jp     0x4182ed77
  419ac3:	jmp    0x6b316619
  419ac8:	fdivp  st(5),st
  419aca:	call   0x8149f8eb
  419acf:	popa   
  419ad0:	ficomp DWORD PTR [ebx+0x1f8c1230]
  419ad6:	jne    0x419ad7
  419ad8:	rol    bh,0x3
  419adb:	call   0x9cca924a
  419ae0:	fimul  WORD PTR [ecx+esi*2]
  419ae3:	in     eax,0x65
  419ae5:	enter  0x2e0b,0x67
  419ae9:	pop    es
  419aea:	xor    DWORD PTR [esi],esp
  419aec:	add    BYTE PTR [eax],al
  419aee:	data16 daa 
  419af0:	test   BYTE PTR [ebx+ecx*8+0x4129830c],al
  419af7:	test   eax,0xcc29e788
  419afc:	out    dx,eax
  419afd:	add    bh,bh
  419aff:	cli    
  419b00:	jle    0x419b7f
  419b02:	or     al,0x0
  419b04:	test   DWORD PTR [ebp-0x28],esi
  419b07:	jnp    0x419acc
  419b09:	mov    ecx,DWORD PTR [ecx+0x3]
  419b0c:	push   0xfd49276c
  419b11:	(bad)  
  419b12:	loope  0x419ae2
  419b14:	adc    DWORD PTR [eax-0x14],eax
  419b17:	cmp    DWORD PTR [edi],0xac57140
  419b1d:	test   BYTE PTR [edx],cl
  419b1f:	or     eax,DWORD PTR [eax]
  419b21:	add    BYTE PTR [esi+eax*1],ah
  419b24:	add    BYTE PTR [eax],al
  419b26:	pushf  
  419b27:	(bad)  
  419b28:	lock push ebp
  419b2a:	lods   al,BYTE PTR ds:[esi]
  419b2b:	or     dl,BYTE PTR [eax-0x73]
  419b2e:	sbb    edx,ebx
  419b30:	out    0x5,eax
  419b32:	enter  0xfaec,0x8b
  419b36:	loope  0x419b11
  419b38:	jle    0x419b9f
  419b3a:	push   eax
  419b3b:	add    eax,0xc7448b52
  419b40:	inc    eax
  419b41:	fdivr  DWORD PTR [ebx+eax*4+0x51]
  419b45:	fdivr  st(5),st
  419b47:	inc    esi
  419b48:	fucomp st(0)
  419b4a:	push   edx
  419b4b:	inc    edi
  419b4c:	cld    
  419b4d:	inc    DWORD PTR [eax]
  419b4f:	(bad)  
  419b50:	or     al,BYTE PTR [eax+eax*1+0xb7b00]
  419b57:	add    BYTE PTR ds:0x6cfffff8,dl
  419b5d:	jg     0x419b10
  419b5f:	or     al,0x99
  419b61:	in     al,dx
  419b62:	cli    
  419b63:	call   0x3c7c7c
  419b68:	push   ss
  419b69:	or     DWORD PTR [edi+0x3ae99c8],eax
  419b6f:	sti    
  419b70:	sti    
  419b71:	in     al,dx
  419b72:	push   edi
  419b73:	call   0x3c7ac3
  419b78:	aad    0xab
  419b7a:	inc    ebp
  419b7b:	push   eax
  419b7c:	sub    eax,0x12fd2e80
  419b81:	fwait
  419b82:	(bad)  
  419b83:	jmp    0x419be3
  419b85:	sbb    BYTE PTR [eax+0x43a3d1e7],al
  419b8b:	or     al,0xa4
  419b8d:	jo     0x419b1d
  419b8f:	jnp    0x419b9e
  419b91:	repz inc ebx
  419b93:	call   0xfd5e1ea1
  419b98:	pop    ecx
  419b99:	pusha  
  419b9a:	xchg   ebp,eax
  419b9b:	inc    ecx
  419b9c:	dec    eax
  419b9d:	lods   eax,DWORD PTR ds:[esi]
  419b9e:	int3   
  419b9f:	cld    
  419ba0:	rol    BYTE PTR [eax+edx*8-0xb],cl
  419ba4:	pop    edi
  419ba5:	out    0xd4,eax
  419ba7:	xlat   BYTE PTR ds:[ebx]
  419ba8:	lods   eax,DWORD PTR ds:[esi]
  419ba9:	sar    DWORD PTR [ebx+0x7ee5bafc],1
  419baf:	mov    edi,0x101a9fd9
  419bb4:	daa    
  419bb5:	jge    0x419b87
  419bb7:	mov    edi,0xaa3b0000
  419bbc:	add    eax,ebp
  419bbe:	mov    WORD PTR [eax],ds
  419bc0:	sbb    al,0xfd
  419bc2:	pop    esp
  419bc3:	fisubr WORD PTR [edi]
  419bc5:	push   0xffffffd1
  419bc7:	popf   
  419bc8:	(bad)
  419bcb:	or     DWORD PTR [eax],ecx
  419bcd:	mov    edx,DWORD PTR [eax-0x11]
  419bd0:	sbb    bh,ch
  419bd2:	jb     0x419c27
  419bd4:	mov    es,WORD PTR [ebx-0x2e4582f]
  419bda:	add    eax,0xd44e5dcb
  419bdf:	and    ch,BYTE PTR [ecx]
  419be1:	or     eax,0xe71bc44a
  419be6:	repnz retf 
  419be8:	sbb    edi,ebp
  419bea:	dec    edi
  419beb:	sbb    al,0xdd
  419bed:	push   ds
  419bee:	sar    DWORD PTR [esi],0xdd
  419bf1:	sub    ch,BYTE PTR [ecx-0x152004f7]
  419bf7:	xchg   ebp,eax
  419bf8:	jmp    0xfdd1:0xea9580df
  419bff:	and    dh,bl
  419c01:	push   eax
  419c02:	fldenv [eax]
  419c04:	icebp  
  419c05:	push   eax
  419c06:	xlat   BYTE PTR ds:[ebx]
  419c07:	and    ch,ah
  419c09:	push   eax
  419c0a:	aam    0x20
  419c0c:	jmp    0x62059661
  419c11:	xchg   esi,eax
  419c12:	fimul  DWORD PTR [ebx*2-0x116c17f8]
  419c19:	mov    dl,0xe1
  419c1b:	imul   BYTE PTR [edx-0x65ffff0a]
  419c21:	or     DWORD PTR [edi],esi
  419c23:	xlat   BYTE PTR ds:[ebx]
  419c24:	xchg   edx,eax
  419c25:	xor    BYTE PTR [esi-0x41ec42d4],0x1b
  419c2c:	pop    ecx
  419c2d:	dec    ecx
  419c2e:	cmp    ebp,ebp
  419c30:	leave  
  419c31:	dec    ebx
  419c32:	stos   BYTE PTR es:[edi],al
  419c33:	xchg   DWORD PTR [ebp+0x12fc1b09],edi
  419c39:	std    
  419c3a:	(bad)  
  419c3b:	frstor [ebx-0x363418f4]
  419c41:	test   DWORD PTR [ebp+0x2f09d504],esi
  419c47:	nop
  419c48:	aad    0xc1
  419c4a:	repz or edx,DWORD PTR [esi+edi*4+0x6e]
  419c4f:	add    eax,0x575c693
  419c54:	push   ebp
  419c55:	adc    cl,ch
  419c57:	nop
  419c58:	fdivr  DWORD PTR [esi-0x5c]
  419c5b:	cmp    ebp,DWORD PTR [ebp-0x58]
  419c5e:	lods   al,BYTE PTR ds:[esi]
  419c5f:	sbb    bl,BYTE PTR [eax-0x80]
  419c62:	dec    edi
  419c63:	adc    DWORD PTR [eax-0x6a],0x31ce846c
  419c6a:	out    0x90,eax
  419c6c:	fimul  DWORD PTR [eax+eax*1]
  419c6f:	mov    esp,0xb46b21f6
  419c74:	iret   
  419c75:	push   cs
  419c76:	mov    esp,eax
  419c78:	ficom  WORD PTR [ebx]
  419c7a:	inc    ebx
  419c7b:	and    eax,ebx
  419c7d:	cwde   
  419c7e:	adc    al,0x62
  419c80:	adc    al,BYTE PTR [eax]
  419c82:	push   0xffffffe9
  419c84:	add    BYTE PTR [eax],al
  419c86:	out    dx,eax
  419c87:	call   0xaba4:0x21d69307
  419c8e:	fisttp WORD PTR [esi]
  419c90:	test   BYTE PTR [ecx],ch
  419c92:	or     BYTE PTR gs:[ecx-0x7df33164],al
  419c99:	(bad)  
  419c9b:	jmp    0x548a:0xf2330d71
  419ca2:	ins    DWORD PTR es:[edi],dx
  419ca3:	mov    cl,0xe7
  419ca5:	jge    0x419d23
  419ca7:	or     al,0xfd
  419ca9:	jb     0x419d0e
  419cab:	out    dx,eax
  419cac:	imul   ecx,DWORD PTR [eax],0xa7894552
  419cb2:	out    dx,al
  419cb3:	sbb    BYTE PTR [ebx-0x52],dh
  419cb6:	iret   
  419cb7:	xchg   al,al
  419cb9:	sbb    al,0xde
  419cbb:	jg     0x419d03
  419cbd:	enter  0xd28a,0x73
  419cc1:	in     eax,dx
  419cc2:	sbb    cl,BYTE PTR [edx+0x73]
  419cc5:	in     eax,0x5b
  419cc7:	mov    edi,0xc95bd9f7
  419ccc:	sub    edi,DWORD PTR [edx-0x7eb47cef]
  419cd2:	fwait
  419cd3:	dec    esp
  419cd4:	or     eax,0xa0065
  419cd9:	jmp    0xee497112
  419cde:	loop   0x419d4a
  419ce0:	add    cl,ch
  419ce2:	(bad)  
  419ce3:	add    BYTE PTR [ecx+0x19],0x32
  419ce7:	dec    esp
  419ce8:	or     eax,0xb8000000
  419ced:	cwde   
  419cee:	(bad)  
  419cef:	jmp    FWORD PTR [ecx+ebp*2]
  419cf2:	or     BYTE PTR ss:[ebx],dh
  419cf5:	mov    ecx,DWORD PTR [eax+0x6a073c00]
  419cfb:	sbb    esp,DWORD PTR [ecx-0x3c011c47]
  419d01:	out    dx,eax
  419d02:	push   edi
  419d03:	call   0x3ffdb2
  419d08:	jecxz  0x419d7d
  419d0a:	sub    eax,0x6eefba8b
  419d0f:	sub    al,0x5c
  419d11:	add    BYTE PTR [ecx-0x18],0x5c
  419d15:	(bad)  
  419d17:	pop    edi
  419d18:	add    esi,ecx
  419d1a:	jle    0x419ce0
  419d1c:	in     al,dx
  419d1d:	fisttp WORD PTR [edi+0x6a06ec00]
  419d23:	cmp    al,0xa3
  419d25:	pop    eax
  419d26:	mov    al,BYTE PTR [ebp+0x48]
  419d29:	pop    esp
  419d2a:	std    
  419d2b:	dec    edi
  419d2c:	xchg   ebx,eax
  419d2d:	sbb    dl,BYTE PTR ds:0x7f05ec16
  419d33:	les    esi,FWORD PTR [eax-0x7e237e7d]
  419d39:	lock cli 
  419d3b:	mov    ecx,edi
  419d3d:	test   eax,0x56284588
  419d42:	add    BYTE PTR [bp+di+0x77],al
  419d46:	or     DWORD PTR [ecx+0x76fa99e1],ecx
  419d4c:	test   cl,cl
  419d4e:	inc    eax
  419d4f:	test   al,0x0
  419d51:	add    BYTE PTR [edi+0x7],ch
  419d54:	add    BYTE PTR [eax],al
  419d56:	add    ebx,DWORD PTR [ebx]
  419d58:	push   ebp
  419d59:	adc    eax,0xf87f05bc
  419d5e:	jge    0x419d61
  419d60:	xor    edi,0x83faf102
  419d66:	aad    0x35
  419d68:	imul   eax,DWORD PTR [eax],0xfe24a2e2
  419d6e:	dec    edx
  419d6f:	ret    
  419d70:	test   BYTE PTR [ebx-0x2e932df],al
  419d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d77:	enter  0x73ee,0xd5
  419d7b:	and    BYTE PTR [edx],ch
  419d7d:	fsubr  QWORD PTR [ebx]
  419d7f:	jecxz  0x419d97
  419d81:	(bad)  
  419d82:	cwde   
  419d83:	repz add esp,edi
  419d86:	push   es
  419d87:	repnz push ss
  419d89:	std    
  419d8a:	pop    esi
  419d8b:	pop    edi
  419d8c:	int    0x38
  419d8e:	adc    al,0x8c
  419d90:	mov    ebx,0xaf94cd37
  419d95:	imul   ebx,ecx,0xf24c4ca5
  419d9b:	sbb    bl,BYTE PTR [eax]
  419d9d:	pop    eax
  419d9e:	std    
  419d9f:	xor    DWORD PTR [esi-0x6bd51d02],esp
  419da5:	xor    ecx,DWORD PTR [esi+0x5a]
  419da8:	mov    cl,0x8a
  419daa:	sbb    bl,cl
  419dac:	mov    al,0xe7
  419dae:	adc    esi,DWORD PTR [eax]
  419db0:	pop    ss
  419db1:	std    
  419db2:	push   esi
  419db3:	scas   eax,DWORD PTR es:[edi]
  419db4:	add    al,0x83
  419db6:	add    BYTE PTR [eax],al
  419db8:	xchg   ebp,eax
  419db9:	inc    ecx
  419dba:	rol    DWORD PTR [eax],cl
  419dbc:	xchg   ebp,eax
  419dbd:	and    edx,DWORD PTR [edi]
  419dbf:	jae    0x419d7e
  419dc1:	jle    0x419d59
  419dc3:	pop    es
  419dc4:	das    
  419dc5:	cmc    
  419dc6:	mov    eax,0x18525de7
  419dcb:	std    
  419dcc:	pop    esi
  419dcd:	cs or  al,0x37
  419dd0:	shl    BYTE PTR [edx+0x4c],1
  419dd3:	inc    ecx
  419dd4:	aad    0xfd
  419dd6:	push   es
  419dd7:	std    
  419dd8:	add    BYTE PTR [ebx+0x77e90e28],cl
  419dde:	sbb    BYTE PTR [ecx+0x34f09f0],al
  419de4:	ins    BYTE PTR es:[edi],dx
  419de5:	adc    ebp,DWORD PTR [edx-0x3a]
  419de8:	bound  ebp,QWORD PTR [edx]
  419dea:	mov    dh,BYTE PTR [ebx+0x1c]
  419ded:	dec    ebp
  419dee:	out    0x83,eax
  419df0:	into   
  419df1:	add    BYTE PTR [esi-0x72],al
  419df4:	out    0x89,al
  419df6:	sar    ebx,0x3b
  419df9:	jle    0x419de8
  419dfb:	test   BYTE PTR [ecx+esi*1-0x276f19],ch
  419e02:	stos   DWORD PTR es:[edi],eax
  419e03:	sbb    esi,ebp
  419e05:	jge    0x419df2
  419e07:	sub    al,0xd3
  419e09:	mov    DWORD PTR [ebx-0x1c81edf0],edx
  419e0f:	test   BYTE PTR [esi-0x69ee10ff],bl
  419e15:	add    edi,ebp
  419e17:	or     BYTE PTR [ecx-0x2a],dl
  419e1a:	out    0x3,eax
  419e1c:	add    BYTE PTR [eax],al
  419e1e:	aad    0x94
  419e20:	test   eax,0xf24f10eb
  419e25:	add    edx,DWORD PTR [esi-0x36]
  419e28:	push   ebx
  419e29:	repnz ins BYTE PTR es:[edi],dx
  419e2b:	sbb    eax,0x61a29964
  419e30:	mov    edi,0xe70b3feb
  419e35:	mov    bl,BYTE PTR [eax-0x5200aea7]
  419e3b:	gs mov ebp,0x3319aac1
  419e41:	fsubr  DWORD PTR [ecx+0x792bcb7c]
  419e47:	pop    edi
  419e48:	sahf   
  419e49:	pop    ss
  419e4a:	push   edx
  419e4b:	dec    esi
  419e4c:	xchg   edi,eax
  419e4d:	adc    DWORD PTR [ebp-0x758d9ce8],0x42d2e708
  419e57:	inc    edx
  419e58:	sub    ch,ah
  419e5a:	add    BYTE PTR [edi+0x0],cl
  419e5d:	bound  ebx,QWORD PTR [eax+edi*8-0x6c212a76]
  419e64:	or     DWORD PTR [ecx-0x40],ebp
  419e67:	das    
  419e68:	jae    0x419e4e
  419e6a:	cwde   
  419e6b:	or     ecx,DWORD PTR [edx]
  419e6d:	inc    edx
  419e6e:	loope  0x419df9
  419e70:	test   BYTE PTR [edx],0x64
  419e73:	or     esi,eax
  419e75:	jmp    0x419ead
  419e77:	dec    eax
  419e78:	cmp    DWORD PTR [edx+0x42e07a2e],ebp
  419e7e:	mov    DWORD PTR ss:[eax+0x9],edi
  419e82:	add    BYTE PTR [eax],al
  419e84:	rcl    DWORD PTR [esi],1
  419e86:	add    esi,0xffffffd9
  419e89:	or     DWORD PTR [eax],eax
  419e8b:	xchg   ebx,eax
  419e8c:	and    eax,0x51357a93
  419e91:	lock retf 0xd17d
  419e95:	or     DWORD PTR [ecx+0x772492e],ecx
  419e9b:	mov    eax,ds:0xf65659ae
  419ea0:	retf   
  419ea1:	nop
  419ea2:	inc    edx
  419ea3:	stc    
  419ea4:	push   edi
  419ea5:	test   al,dh
  419ea7:	jmp    0xe87d2c87
  419eac:	(bad)  
  419ead:	or     DWORD PTR [ecx-0x41f602b4],eax
  419eb3:	and    eax,0x1f004901
  419eb8:	jmp    0x6307:0x96dbd81a
  419ebf:	mov    BYTE PTR [esi+0x48e940d7],dl
  419ec5:	mov    WORD PTR [edi+0xa92981d],?
  419ecb:	loope  0x419eb3
  419ecd:	dec    eax
  419ece:	add    BYTE PTR [ecx+eiz*1+0x7e],ch
  419ed2:	xor    eax,0x4eca1bde
  419ed7:	add    BYTE PTR [ebx+eax*2+0x51],ah
  419edb:	(bad)  
  419edc:	sti    
  419edd:	mov    DWORD PTR [edi-0x4cef698c],edi
  419ee3:	adc    eax,0x3f3dbc
  419ee8:	add    BYTE PTR [eax],al
  419eea:	mov    edi,0x8458554
  419eef:	mov    dl,cl
  419ef1:	je     0x419f39
  419ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef4:	jg     0x419f32
  419ef6:	je     0x419ee3
  419ef8:	outs   dx,DWORD PTR ds:[esi]
  419ef9:	pop    es
  419efa:	es jmp 0x419f53
  419efd:	(bad)
  419f01:	btr    ecx,edi
  419f04:	cmp    al,0xd0
  419f06:	jg     0x419f13
  419f08:	cmp    eax,0xe298e63b
  419f0d:	push   esi
  419f0e:	mov    ebx,0x3c12d8f9
  419f13:	or     edi,ebx
  419f15:	jae    0x419f0b
  419f17:	xchg   ebx,eax
  419f18:	ds or  al,0x66
  419f1b:	or     ebp,eax
  419f1d:	in     eax,dx
  419f1e:	pop    edi
  419f1f:	and    bl,bh
  419f21:	mov    esp,esp
  419f23:	xchg   bl,bh
  419f25:	pshufw mm5,QWORD PTR [esi+0x0],0x0
  419f2a:	in     al,dx
  419f2b:	mov    al,0x38
  419f2d:	pop    esi
  419f2e:	mov    ds:0xab54808e,al
  419f33:	sbb    al,0xfb
  419f35:	push   0xffffffbc
  419f37:	mov    edx,0xf4b415fb
  419f3c:	cmp    al,0x0
  419f3e:	das    
  419f3f:	dec    edx
  419f40:	or     al,0x8d
  419f42:	inc    ecx
  419f43:	mov    edx,0xbd7bfffb
  419f48:	data16 add BYTE PTR [ebx-0x68],bh
  419f4c:	or     BYTE PTR [ecx-0x45ff0000],cl
  419f52:	sti    
  419f53:	call   ebp
  419f55:	lahf   
  419f56:	adc    dh,BYTE PTR [ecx-0x23]
  419f59:	xchg   edi,eax
  419f5a:	in     al,dx
  419f5b:	push   edi
  419f5c:	call   0x7dc2a391
  419f61:	icebp  
  419f62:	lea    ebp,[edi-0x1]
  419f65:	jecxz  0x419eec
  419f67:	mov    bl,0x71
  419f69:	jbe    0x419f7e
  419f6b:	std    
  419f6c:	std    
  419f6d:	pop    eax
  419f6e:	in     eax,0x6b
  419f70:	aam    0xf0
  419f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f73:	adc    eax,0x5858e560
  419f78:	cmp    eax,0x42fea812
  419f7d:	jnp    0x419f0c
  419f7f:	out    0x4e,eax
  419f81:	popf   
  419f82:	and    al,0x89
  419f84:	sahf   
  419f85:	loopne 0x41a004
  419f87:	imul   BYTE PTR [ebp+0x5c]
  419f8a:	nop
  419f8b:	aas    
  419f8c:	aad    0xff
  419f8e:	mov    esp,0x34250ef
  419f93:	inc    esp
  419f94:	and    eax,0xd0734975
  419f99:	pop    ecx
  419f9a:	mov    al,0x75
  419f9c:	xchg   ebp,eax
  419f9d:	lock or al,BYTE PTR [ebx-0x3]
  419fa1:	lock mov WORD PTR [eax],es
  419fa4:	pusha  
  419fa5:	mov    ch,0x58
  419fa7:	std    
  419fa8:	pusha  
  419fa9:	add    BYTE PTR [ebx-0x54bf7baf],ch
  419faf:	mov    dl,BYTE PTR [eax-0x34]
  419fb2:	adc    bh,ch
  419fb4:	add    BYTE PTR [eax],al
  419fb6:	rol    BYTE PTR [ebx-0x31],cl
  419fb9:	mov    edi,0xfca09656
  419fbe:	ret    0xfccc
  419fc1:	imul   edx,ebp,0xac06cf3
  419fc7:	jo     0x41a00a
  419fc9:	or     DWORD PTR ds:0xd540b2cb,eax
  419fcf:	or     edi,esp
  419fd1:	adc    BYTE PTR [ecx-0x224190ce],0x5c
  419fd8:	jg     0x419fce
  419fda:	add    al,0x5
  419fdc:	mov    ss,WORD PTR [esi+eax*1]
  419fdf:	test   BYTE PTR [esi+0x7e0504ec],0x14
  419fe6:	out    0xf9,al
  419fe8:	jle    0x419fee
  419fea:	out    0x4,eax
  419fec:	outs   dx,BYTE PTR ds:[esi]
  419fed:	sbb    esi,0x10
  419ff0:	out    0x8e,eax
  419ff2:	(bad)  
  419ff3:	mov    bl,al
  419ff5:	sbb    ecx,DWORD PTR [eax+0x5]
  419ff8:	fsubr  QWORD PTR [ebx]
  419ffa:	cmp    eax,0x4014d807
  419fff:	cld    
  41a000:	stos   DWORD PTR es:[edi],eax
  41a001:	sbb    edi,DWORD PTR [edx]
  41a003:	jle    0x419ffd
  41a005:	mov    al,0x3a
  41a007:	mov    ebp,0x8e28143a
  41a00c:	es (bad) 
  41a00e:	(bad)  
  41a00f:	mov    BYTE PTR [ebx-0x5c0428e5],dh
  41a015:	sbb    esp,ebp
  41a017:	jge    0x41a00d
  41a019:	add    BYTE PTR [eax],0x0
  41a01c:	mov    WORD PTR [ebp-0x18],es
  41a01f:	mov    ds,ebx
  41a021:	nop
  41a022:	test   eax,0xe38255db
  41a027:	add    esp,DWORD PTR [esi+0x13]
  41a02a:	call   0x5913:0xee01bd2b
  41a031:	retf   0x85a
  41a034:	push   esp
  41a035:	push   edi
  41a036:	fisttp WORD PTR [eax]
  41a038:	sar    BYTE PTR [esi-0x31],1
  41a03b:	jg     0x41a001
  41a03d:	icebp  
  41a03e:	add    ah,BYTE PTR [eax+eax*8+0x4]
  41a042:	jb     0x41a00d
  41a044:	ret    0x1d64
  41a047:	scas   eax,DWORD PTR es:[edi]
  41a048:	fwait
  41a049:	(bad)  
  41a04a:	(bad)  
  41a04b:	in     al,dx
  41a04c:	(bad)  
  41a04d:	pop    eax
  41a04e:	mov    DWORD PTR [ebp+0x6a184922],edi
  41a054:	cmc    
  41a055:	sbb    eax,0x3a123751
  41a05a:	mov    DWORD PTR [eax*4+0x5435ff91],ebp
  41a061:	test   DWORD PTR [esi],eax
  41a063:	xchg   al,bl
  41a065:	sub    edi,edi
  41a067:	call   0xcc7f2a42
  41a06c:	xlat   BYTE PTR ds:[ebx]
  41a06d:	mov    BYTE PTR [ebx],bl
  41a06f:	call   0xbfcbaa4a
  41a074:	ror    DWORD PTR [ecx-0x7829e607],1
  41a07a:	psubsb mm2,mm6
  41a07d:	or     DWORD PTR [eax+0x10000053],eax
  41a083:	adc    eax,0x9d1ee85
  41a088:	add    BYTE PTR [edx+0x14],dh
  41a08b:	sbb    al,0x89
  41a08d:	loopne 0x41a092
  41a08f:	loope  0x41a01b
  41a091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a092:	(bad)  
  41a093:	repnz add al,0x69
  41a096:	or     DWORD PTR [edi],esp
  41a098:	jae    0x41a081
  41a09a:	sbb    ecx,DWORD PTR [ecx+edi*1+0x21]
  41a09e:	outs   dx,DWORD PTR ds:[esi]
  41a09f:	div    ebp
  41a0a1:	sub    bl,al
  41a0a3:	push   ss
  41a0a4:	or     DWORD PTR [esi],0xffffffd1
  41a0a7:	or     DWORD PTR [eax],eax
  41a0a9:	imul   esp,ebx,0x3ed7339
  41a0af:	(bad)  
  41a0b0:	call   0xfc89f679
  41a0b5:	cmp    esi,eax
  41a0b7:	js     0x41a0c1
  41a0b9:	jno    0x41a048
  41a0bb:	inc    ebp
  41a0bd:	sub    al,0xe4
  41a0bf:	or     eax,ebp
  41a0c1:	std    
  41a0c2:	arpl   WORD PTR [edi*8-0x2f0d100],ax
  41a0c9:	push   cs
  41a0ca:	inc    eax
  41a0cb:	dec    ebp
  41a0cc:	add    BYTE PTR [eax],al
  41a0ce:	mov    esp,0x831041d4
  41a0d3:	mov    WORD PTR [eax+eax*1+0x4d8707ac],?
  41a0da:	or     BYTE PTR [edx-0x1083efd],0x87
  41a0e1:	js     0x41a15b
  41a0e3:	in     al,0xf5
  41a0e5:	add    eax,DWORD PTR [eax]
  41a0e7:	add    cl,al
  41a0e9:	add    DWORD PTR [ecx+edx*2+0x44],edx
  41a0ed:	mov    gs,WORD PTR [edi+edi*8-0x1d]
  41a0f1:	test   DWORD PTR [ecx-0x8],eax
  41a0f4:	stc    
  41a0f5:	pop    ss
  41a0f6:	je     0x41a100
  41a0f8:	jmp    0x59c5ac43
  41a0fd:	pop    es
  41a0fe:	add    BYTE PTR [eax],al
  41a100:	mov    eax,DWORD PTR [eax+ebx*8+0x7069e8]
  41a107:	add    bh,al
  41a109:	rcr    DWORD PTR [eax],0x8b
  41a10c:	push   cs
  41a10d:	test   al,bl
  41a10f:	mov    edi,DWORD PTR [ecx-0xd]
  41a112:	xchg   DWORD PTR [eax],eax
  41a114:	adc    DWORD PTR [edx-0x2e5801ec],0x83fc8b14
  41a11e:	enter  0xb22b,0x89
  41a122:	dec    ebx
  41a123:	adc    edx,edx
  41a125:	jecxz  0x41a113
  41a127:	mov    DWORD PTR [ecx+0x1b],eax
  41a12a:	test   DWORD PTR [ebp-0x14],esi
  41a12d:	test   BYTE PTR [ecx+0x18],dh
  41a130:	jno    0x41a0f9
  41a132:	std    
  41a133:	out    0xf6,eax
  41a135:	xchg   esi,eax
  41a136:	sti    
  41a137:	jmp    FWORD PTR [eax+0x4d]
  41a13a:	je     0x41a1a9
  41a13c:	inc    edi
  41a13d:	push   eax
  41a13e:	xchg   DWORD PTR [eax],esi
  41a140:	aad    0xef
  41a142:	xchg   ebp,eax
  41a143:	out    dx,eax
  41a144:	push   esi
  41a145:	xlat   BYTE PTR ds:[ebx]
  41a146:	add    eax,0x94cbe771
  41a14b:	repz add BYTE PTR [eax],al
  41a14e:	pusha  
  41a14f:	sub    al,BYTE PTR [esi]
  41a151:	push   eax
  41a152:	pop    eax
  41a153:	hlt    
  41a154:	ror    DWORD PTR [edi-0x53],cl
  41a157:	enter  0xfc93,0x9a
  41a15b:	xchg   edi,eax
  41a15c:	lock jne 0x41a141
  41a15f:	ja     0x41a11e
  41a161:	repz pop eax
  41a163:	xor    al,BYTE PTR [esi]
  41a165:	push   eax
  41a166:	push   eax
  41a167:	cld    
  41a168:	shl    edi,cl
  41a16a:	imul   eax,DWORD PTR [eax],0x8406fd10
  41a170:	xchg   ebp,eax
  41a171:	test   DWORD PTR [ebx],0xcb0ff57c
  41a177:	xor    BYTE PTR [ecx+eax*4],al
  41a17a:	xchg   ecx,eax
  41a17b:	cld    
  41a17c:	(bad)  
  41a17e:	dec    ebp
  41a17f:	pop    eax
  41a180:	xor    DWORD PTR [eax+0x4a],0x5b
  41a184:	jnp    0x41a1c9
  41a186:	loope  0x41a1f1
  41a188:	int3   
  41a189:	mov    BYTE PTR [eax+0x60007be8],dl
  41a18f:	mov    esp,0xbc58fcee
  41a194:	enter  0x9bfc,0xf7
  41a198:	pop    ss
  41a199:	or     eax,0xfd123e57
  41a19e:	adc    ah,BYTE PTR [eax+0x1]
  41a1a1:	pop    ebp
  41a1a2:	stos   DWORD PTR es:[edi],eax
  41a1a3:	mov    bh,0x39
  41a1a5:	ret    0xf0dd
  41a1a8:	sar    BYTE PTR [edi+0x731004ee],cl
  41a1ae:	in     eax,dx
  41a1af:	pop    ss
  41a1b0:	mov    bl,0x6f
  41a1b2:	add    BYTE PTR [eax],al
  41a1b4:	jmp    0x2067:0x88f21bfa
  41a1bb:	sub    ecx,0x167d4308
  41a1c1:	adc    bh,BYTE PTR [edx]
  41a1c3:	mov    edx,0xb8e3775d
  41a1c8:	dec    ebp
  41a1c9:	inc    edx
  41a1ca:	bound  ecx,QWORD PTR [ecx]
  41a1cc:	aam    0xc8
  41a1ce:	lods   al,BYTE PTR ds:[esi]
  41a1cf:	(bad)  
  41a1d0:	mov    cl,0xa
  41a1d2:	jo     0x41a19a
  41a1d4:	mov    edx,0xec141395
  41a1d9:	loopne 0x41a244
  41a1db:	or     al,0xc6
  41a1dd:	jnp    0x41a1af
  41a1df:	test   BYTE PTR [edi+edx*1+0x6a],bh
  41a1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1e4:	xchg   BYTE PTR [edx],cl
  41a1e6:	add    edi,esi
  41a1e8:	cli    
  41a1e9:	jne    0x41a201
  41a1eb:	les    edi,FWORD PTR [edx+0x58]
  41a1ee:	xchg   dh,dh
  41a1f0:	(bad)  
  41a1f1:	pop    ss
  41a1f2:	daa    
  41a1f3:	add    al,0x54
  41a1f5:	(bad)  
  41a1f6:	loop   0x41a17e
  41a1f8:	xchg   ebp,eax
  41a1f9:	adc    DWORD PTR [ebx+0x6f],esp
  41a1fc:	aad    0x9
  41a1fe:	out    0x10,eax
  41a200:	xchg   esi,eax
  41a201:	cmc    
  41a202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a203:	retf   0xf5af
  41a206:	fdiv   QWORD PTR [ecx]
  41a208:	add    al,0xe5
  41a20a:	arpl   WORD PTR [eax+ecx*8],bp
  41a20d:	test   DWORD PTR [esi+0x3],edx
  41a210:	aad    0x9
  41a212:	mov    gs,WORD PTR [bx+di]
  41a215:	or     bh,BYTE PTR [esp+ecx*8+0x1eac0000]
  41a21c:	pop    esp
  41a21d:	mov    es,WORD PTR [esi]
  41a21f:	bound  ecx,QWORD PTR [edi]
  41a221:	mov    eax,0x7ee70a7b
  41a226:	xchg   esi,eax
  41a227:	in     eax,0xb6
  41a229:	sbb    esi,DWORD PTR ds:0x51100e36
  41a22f:	retf   0xf07a
  41a232:	loope  0x41a1ec
  41a234:	mov    ds:0xff94851b,eax
  41a239:	sub    eax,0x8e307326
  41a23e:	pop    ebx
  41a23f:	jl     0x41a1e5
  41a241:	rol    DWORD PTR [ecx+0x64],1
  41a244:	std    
  41a245:	fimul  WORD PTR [esi+0x7d]
  41a248:	or     al,0x30
  41a24a:	jo     0x41a1d3
  41a24c:	inc    edx
  41a24d:	ror    DWORD PTR [ecx+ecx*8+0x7c],1
  41a251:	in     eax,dx
  41a252:	push   edi
  41a253:	ins    BYTE PTR es:[edi],dx
  41a254:	clc    
  41a255:	jmp    0x6331ef89
  41a25a:	inc    esp
  41a25b:	clc    
  41a25c:	sub    BYTE PTR [edx+0x3912f156],ch
  41a262:	push   esp
  41a263:	dec    edx
  41a264:	adc    edi,DWORD PTR [ecx]
  41a266:	(bad)  
  41a267:	add    dl,BYTE PTR [ebp-0x6a]
  41a26a:	jl     0x41a294
  41a26c:	push   ss
  41a26d:	sub    ecx,edx
  41a26f:	mov    al,bl
  41a271:	cmc    
  41a272:	jecxz  0x41a2f0
  41a274:	clc    
  41a275:	ins    BYTE PTR es:[edi],dx
  41a276:	pushf  
  41a277:	lods   al,BYTE PTR ds:[esi]
  41a278:	dec    edi
  41a279:	sbb    dl,dl
  41a27b:	sbb    al,0x10
  41a27d:	xlat   BYTE PTR ds:[ebx]
  41a27e:	add    BYTE PTR [eax],al
  41a280:	xchg   esi,eax
  41a281:	add    BYTE PTR [edx+0x4a92deac],cl
  41a287:	icebp  
  41a288:	iret   
  41a289:	or     BYTE PTR [ecx+0x300de29],al
  41a28f:	push   0xffffff8d
  41a291:	or     eax,0x4c98f701
  41a296:	std    
  41a297:	call   0x4131f745
  41a29c:	paddw  mm7,mm4
  41a29f:	cs sahf 
  41a2a1:	fsubrp st(6),st
  41a2a3:	xchg   ecx,eax
  41a2a4:	jecxz  0x41a2a4
  41a2a6:	cld    
  41a2a7:	jae    0x41a2c5
  41a2a9:	std    
  41a2aa:	pop    esp
  41a2ab:	mov    bh,0x2f
  41a2ad:	mov    ecx,0x895cd6e1
  41a2b3:	add    al,cl
  41a2b5:	mov    ebx,gs
  41a2b7:	adc    BYTE PTR [edi-0x4a],cl
  41a2ba:	push   ebx
  41a2bb:	mov    ebx,esp
  41a2bd:	mov    eax,ds:0xb3c68b02
  41a2c2:	test   DWORD PTR [ebp-0x50],esi
  41a2c5:	test   BYTE PTR [ebp+0x1b99ae3b],bh
  41a2cb:	mov    ebx,esp
  41a2cd:	shr    dh,cl
  41a2cf:	jb     0x41a296
  41a2d1:	aam    0x71
  41a2d3:	hlt    
  41a2d4:	repz add DWORD PTR [ebx-0x75],esp
  41a2d8:	jmp    0xe4c705d2
  41a2dd:	adc    DWORD PTR [ecx+0x11],esi
  41a2e0:	aad    0xa0
  41a2e2:	lock add eax,DWORD PTR [eax]
  41a2e5:	add    BYTE PTR [edx-0x32],al
  41a2e8:	push   ecx
  41a2e9:	hlt    
  41a2ea:	out    dx,eax
  41a2eb:	and    al,0x32
  41a2ed:	rcl    BYTE PTR [ebp+0x7c],0xfd
  41a2f1:	jmp    FWORD PTR [esp+ecx*4-0x44]
  41a2f5:	push   es
  41a2f6:	out    0xc,eax
  41a2f8:	daa    
  41a2f9:	cli    
  41a2fa:	xor    dl,dl
  41a2fc:	sti    
  41a2fd:	add    ch,dh
  41a2ff:	leave  
  41a300:	in     al,dx
  41a301:	mov    DWORD PTR [ecx+0x17],ebp
  41a304:	je     0x41a315
  41a306:	xchg   ebx,eax
  41a307:	mov    WORD PTR [edi+0x70238c06],?
  41a30d:	outs   dx,DWORD PTR ds:[esi]
  41a30e:	stos   DWORD PTR es:[edi],eax
  41a30f:	jne    0x465475a
  41a315:	and    DWORD PTR [ecx],0x13
  41a318:	add    BYTE PTR [ebp-0x7cb86915],al
  41a31e:	imul   edx,DWORD PTR [ebx],0x89fc7400
  41a324:	inc    eax
  41a325:	hlt    
  41a326:	dec    esp
  41a327:	mov    al,BYTE PTR [eax-0x8]
  41a32a:	dec    esp
  41a32b:	and    ecx,DWORD PTR [ebp+0xe17d5fe]
  41a331:	mov    DWORD PTR [eax+0x14],edi
  41a334:	mov    ch,bh
  41a336:	imul   eax,ecx,0xf0ed7b81
  41a33c:	std    
  41a33d:	sbb    DWORD PTR [edi+0x4e0000f1],0x76
  41a344:	stc    
  41a345:	mov    bl,BYTE PTR [eax]
  41a347:	fnsave [ebx+0x1000008a]
  41a34d:	jmp    0x188a005
  41a352:	or     al,0x73
  41a354:	leave  
  41a355:	or     esi,DWORD PTR ss:[ebx-0x5b]
  41a359:	fadd   DWORD PTR [ebx+edi*8]
  41a35c:	stos   BYTE PTR es:[edi],al
  41a35d:	mov    edi,0x6cd2c087
  41a362:	in     al,dx
  41a363:	(bad)  
  41a364:	call   0xfe9b:0x897b77f0
  41a36b:	mov    BYTE PTR [eax],al
  41a36d:	stc    
  41a36e:	mov    ds:0xf9010080,al
  41a373:	or     al,0x50
  41a375:	inc    esi
  41a376:	add    al,0x0
  41a378:	aad    0x18
  41a37a:	xor    BYTE PTR [ebp+0x15],0xf1
  41a37e:	or     esi,DWORD PTR [ebx+0x65]
  41a381:	mov    BYTE PTR [edx+0x7ff0d467],cl
  41a387:	clc    
  41a388:	dec    esp
  41a389:	(bad)  
  41a38b:	xor    BYTE PTR ds:0x4d0d4465,dl
  41a391:	dec    ecx
  41a392:	add    al,0x0
  41a394:	aad    0x1b
  41a396:	lds    ecx,FWORD PTR [ebx]
  41a398:	loop   0x41a40d
  41a39a:	and    al,0x0
  41a39c:	aad    0xf0
  41a39e:	ja     0x41a419
  41a3a0:	leave  
  41a3a1:	gs fadd st,st(5)
  41a3a4:	out    dx,al
  41a3a5:	scas   al,BYTE PTR es:[edi]
  41a3a6:	add    al,0x1
  41a3a8:	ror    DWORD PTR [ecx],cl
  41a3aa:	jmp    0x40:0x630e068e
  41a3b1:	add    ch,dl
  41a3b3:	or     edi,esp
  41a3b5:	js     0x41a3c7
  41a3b7:	icebp  
  41a3b8:	mov    edi,0x6ffdf19d
  41a3bd:	(bad)  
  41a3be:	fiadd  DWORD PTR [esi+eiz*1-0x193ca903]
  41a3c5:	add    edx,ebp
  41a3c7:	(bad)  
  41a3c8:	mov    ah,0xc
  41a3ca:	inc    esp
  41a3cb:	sbb    dh,BYTE PTR [edi]
  41a3cd:	or     eax,0xc3f519e6
  41a3d2:	ret    0xec90
  41a3d5:	add    BYTE PTR [esi],dl
  41a3d7:	sbb    ch,BYTE PTR [edx+0x47]
  41a3da:	loope  0x41a3d8
  41a3dc:	cmp    ebx,DWORD PTR [eax]
  41a3de:	test   al,0x77
  41a3e0:	mov    edi,0xd717a1b3
  41a3e5:	cmc    
  41a3e6:	fimul  DWORD PTR [ecx]
  41a3e8:	(bad)  
  41a3e9:	(bad)
  41a3ec:	xor    eax,edi
  41a3ee:	mov    ebp,0xd14769d1
  41a3f3:	pop    edx
  41a3f4:	bound  edi,QWORD PTR [eax+0x789f08ca]
  41a3fa:	fist   DWORD PTR [eax-0x3c2a0c05]
  41a400:	jmp    0x179d0acb
  41a405:	or     eax,0xc3d519c6
  41a40a:	push   edx
  41a40b:	mov    BYTE PTR [edx],ch
  41a40d:	dec    DWORD PTR [ecx+0x79]
  41a410:	neg    DWORD PTR [ebx]
  41a412:	xlat   BYTE PTR ds:[ebx]
  41a413:	imul   edx,DWORD PTR [esi+0xc],0x0
  41a417:	add    BYTE PTR [edx+0x79],dl
  41a41a:	idiv   DWORD PTR [edx-0x54]
  41a41d:	adc    eax,0xb29c62d
  41a422:	push   edx
  41a423:	lods   al,BYTE PTR ds:[esi]
  41a424:	push   ebp
  41a425:	jg     0x41a427
  41a427:	xor    esi,edx
  41a429:	js     0x41a450
  41a42b:	(bad)  
  41a42c:	fcom   DWORD PTR [edx+0x528ded7d]
  41a432:	adc    dl,dl
  41a434:	into   
  41a435:	push   esi
  41a436:	add    DWORD PTR [ecx],esp
  41a438:	inc    edi
  41a439:	in     eax,0x48
  41a43b:	jg     0x41a41e
  41a43d:	inc    BYTE PTR [esi-0x40772154]
  41a443:	jne    0x41a456
  41a445:	push   esi
  41a446:	mov    DWORD PTR [ecx],edx
  41a448:	mov    esi,0xd6e9a386
  41a44d:	test   BYTE PTR [edx-0x23],al
  41a450:	dec    edx
  41a451:	add    cl,BYTE PTR [ecx+0x91b13c]
  41a457:	bound  esp,QWORD PTR [eax+ebx*1-0x75]
  41a45b:	sbb    eax,0xbfe4fba1
  41a460:	dec    ebp
  41a461:	std    
  41a462:	cld    
  41a463:	sbb    DWORD PTR gs:[esi+0x1b],esi
  41a467:	(bad)  
  41a468:	xlat   BYTE PTR ds:[ebx]
  41a469:	or     al,BYTE PTR [ecx]
  41a46b:	push   ss
  41a46c:	fidivr WORD PTR [eax-0x8]
  41a46f:	cmp    esi,ebx
  41a471:	sbb    BYTE PTR [eax],dl
  41a473:	not    DWORD PTR [esi-0x42dfe04]
  41a479:	add    eax,DWORD PTR [ecx+0x6d0000a5]
  41a47f:	mov    BYTE PTR [ebx],0xee
  41a482:	push   0xcfc28745
  41a487:	js     0x41a481
  41a489:	sbb    esi,0xd36efd70
  41a48f:	dec    eax
  41a490:	std    
  41a491:	(bad)  
  41a492:	jl     0x41a4f5
  41a494:	(bad)  
  41a495:	sub    eax,DWORD PTR [ebp-0x4]
  41a498:	push   ebx
  41a499:	(bad)  
  41a49a:	fisttp QWORD PTR [edx+0x566a09eb]
  41a4a0:	xor    DWORD PTR [eax],eax
  41a4a2:	cld    
  41a4a3:	mov    eax,0x7d247d87
  41a4a8:	inc    ecx
  41a4a9:	in     al,0xb5
  41a4ab:	retf   0x39e4
  41a4ae:	cmp    esp,esp
  41a4b0:	or     eax,DWORD PTR [esi+0x6cf]
  41a4b6:	test   edx,ecx
  41a4b8:	call   0x320048
  41a4bd:	je     0x41a4af
  41a4bf:	rcl    bh,cl
  41a4c1:	jmp    FWORD PTR [edx+0x0]
  41a4c4:	mov    BYTE PTR [esi-0x10],dl
  41a4c7:	popf   
  41a4c8:	add    al,0x57
  41a4ca:	aam    0x59
  41a4cc:	out    dx,al
  41a4cd:	inc    ebx
  41a4cf:	jnp    0x41a491
  41a4d1:	(bad)  
  41a4d4:	std    
  41a4d5:	jmp    FWORD PTR [eax+edx*1-0x46c8f78a]
  41a4dc:	or     BYTE PTR [edx-0x54],ch
  41a4df:	mov    eax,0x9ee4
  41a4e4:	adc    BYTE PTR [eax],0xfb
  41a4e7:	test   BYTE PTR [eax+eax*1-0x7f],ch
  41a4eb:	mov    DWORD PTR [ebp-0x4574fff9],ebp
  41a4f1:	stc    
  41a4f2:	sbb    eax,0x59e66c5d
  41a4f7:	hlt    
  41a4f8:	pop    es
  41a4f9:	mov    cl,0xc
  41a4fb:	mov    DWORD PTR [ecx+0x7af87f11],ebp
  41a501:	add    BYTE PTR [edi-0x29],bh
  41a504:	jl     0x41a50d
  41a506:	add    BYTE PTR [ebx+0x6f7846f],cl
  41a50c:	jae    0x41a493
  41a50e:	pop    DWORD PTR [eax]
  41a510:	cmp    al,0x7
  41a512:	aaa    
  41a513:	inc    ebp
  41a514:	mov    al,0xff
  41a516:	add    DWORD PTR [edi+0xf00072c],0xffffffd5
  41a51d:	fwait
  41a51e:	mov    ebp,0xed322b03
  41a523:	jae    0x41a4dd
  41a525:	jo     0x41a54b
  41a527:	add    al,0xd2
  41a529:	jb     0x41a567
  41a52b:	cmc    
  41a52c:	cld    
  41a52d:	xlat   BYTE PTR ds:[ebx]
  41a52e:	cmp    eax,DWORD PTR [ecx-0x4079b70c]
  41a534:	mov    ch,0xf3
  41a536:	push   ecx
  41a537:	(bad)  
  41a538:	dec    esp
  41a539:	scas   al,BYTE PTR es:[edi]
  41a53a:	and    BYTE PTR [ecx+0x518ee2fd],al
  41a540:	push   esi
  41a541:	xor    DWORD PTR [ebx],ecx
  41a543:	aaa    
  41a544:	xchg   esi,eax
  41a545:	test   BYTE PTR [edi-0x1dffffb7],0x73
  41a54c:	in     eax,dx
  41a54d:	mov    dl,BYTE PTR [esi-0x1a8af616]
  41a553:	pop    ebp
  41a554:	mov    bh,dh
  41a556:	and    eax,0xc258a1d9
  41a55b:	fild   DWORD PTR [edx-0x2bab2b08]
  41a561:	mov    BYTE PTR [eax],cl
  41a563:	jmp    0x21e2f0dd
  41a568:	jne    0x41a5b5
  41a56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a56b:	and    DWORD PTR [edi],eax
  41a56d:	jae    0x41a524
  41a56f:	cmp    edx,DWORD PTR [bx+si-0x6e]
  41a573:	xor    eax,0xa510890c
  41a578:	sbb    ecx,DWORD PTR [eax-0x80]
  41a57b:	fwait
  41a57c:	push   es
  41a57d:	test   BYTE PTR [ebp+0x18fd031c],dl
  41a583:	test   DWORD PTR [esi],eax
  41a585:	jae    0x41a5f4
  41a587:	dec    eax
  41a588:	add    al,0x80
  41a58a:	aad    0xf0
  41a58c:	sbb    BYTE PTR [edx-0x76f88c17],dl
  41a592:	shr    al,1
  41a594:	jnp    0x41a597
  41a596:	cld    
  41a597:	or     DWORD PTR [edi+eax*1-0x78961e2c],ebp
  41a59e:	ds add esp,esi
  41a5a1:	test   BYTE PTR [esi+0x54094dfa],dh
  41a5a7:	jl     0x41a5e4
  41a5a9:	add    al,0xab
  41a5ab:	xor    edi,DWORD PTR [esi]
  41a5ad:	rol    DWORD PTR [eax],1
  41a5af:	add    BYTE PTR [ebp+0x42],cl
  41a5b2:	jmp    0x41a54f
  41a5b4:	sti    
  41a5b5:	sti    
  41a5b6:	out    0x3,al
  41a5b8:	std    
  41a5b9:	xchg   DWORD PTR [ebx+0x3e8e0008],esi
  41a5bf:	jg     0x41a5dd
  41a5c1:	jne    0x41a5b3
  41a5c3:	or     BYTE PTR [esi-0xb],ah
  41a5c6:	or     eax,0xe76efa8f
  41a5cb:	mov    ah,0x7a
  41a5cd:	shl    dh,1
  41a5cf:	add    edx,ebp
  41a5d1:	icebp  
  41a5d2:	pop    ss
  41a5d3:	int    0xd2
  41a5d5:	stc    
  41a5d6:	cdq    
  41a5d7:	sbb    ebx,DWORD PTR [edi]
  41a5d9:	data16 out 0x8,al
  41a5dc:	sar    BYTE PTR [edi-0x29],0x1b
  41a5e0:	pop    ss
  41a5e1:	data16 (bad) 
  41a5e3:	or     BYTE PTR [ebx+0x56f8e810],ch
  41a5e9:	fwait
  41a5ea:	out    0x3,al
  41a5ec:	aad    0x61
  41a5ee:	dec    ebx
  41a5ef:	cmp    eax,0xeeb60a14
  41a5f4:	stos   BYTE PTR es:[edi],al
  41a5f5:	sbb    al,0x27
  41a5f7:	add    al,0x7d
  41a5f9:	cmp    BYTE PTR [eax+ecx*1-0x7db7a80],dl
  41a600:	dec    ebp
  41a601:	pop    eax
  41a602:	fistp  QWORD PTR [edx+0x16]
  41a605:	imul   BYTE PTR [ecx+0xb]
  41a608:	fnstcw WORD PTR [ebx+0xf]
  41a60b:	jge    0x41a5e1
  41a60d:	mov    WORD PTR [esi-0x9],?
  41a610:	in     al,0x6a
  41a612:	add    BYTE PTR [edx-0xa6d0000],dh
  41a618:	je     0x41a627
  41a61a:	enter  0x442,0x5e
  41a61e:	xchg   edi,eax
  41a61f:	or     DWORD PTR [eax],eax
  41a621:	jmp    0x6a86235c
  41a626:	fiadd  WORD PTR ds:0xb8c70e76
  41a62c:	(bad)  
  41a62d:	mov    esp,0x710a8210
  41a632:	(bad)  [edx+0x0]
  41a635:	jmp    0xf911:0x2283b7ce
  41a63c:	in     al,0xcf
  41a63e:	popa   
  41a63f:	idiv   ah
  41a641:	gs xchg esi,eax
  41a643:	jge    0x41a664
  41a645:	push   ss
  41a646:	or     DWORD PTR [edx+0x4aa9650a],eax
  41a64c:	add    dl,ch
  41a64e:	jmp    0x41a5e0
  41a650:	enter  0xd6aa,0x5a
  41a654:	dec    edi
  41a655:	test   al,0x8
  41a658:	push   ss
  41a659:	test   eax,0x6a0082d6
  41a65e:	adc    eax,0x3ee3ff06
  41a663:	ret    
  41a664:	inc    eax
  41a665:	jmp    0x624a1b99
  41a66a:	(bad)  
  41a66b:	xor    BYTE PTR [ebx-0x3b],al
  41a66e:	(bad)  
  41a66f:	rol    DWORD PTR [eax+0x7105cd3c],1
  41a675:	push   ecx
  41a676:	jno    0x41a6dc
  41a678:	leave  
  41a679:	sub    al,BYTE PTR [eax]
  41a67b:	add    cl,dl
  41a67d:	not    BYTE PTR [edx]
  41a67f:	lds    eax,FWORD PTR [edi-0x6b61ffc8]
  41a685:	lock mov BYTE PTR [ecx+edx*8],ch
  41a689:	mov    al,BYTE PTR [edx+0x7d]
  41a68c:	jns    0x41a6bf
  41a68e:	inc    ebp
  41a68f:	add    BYTE PTR [eax-0x1],bh
  41a692:	jle    0x41a6c4
  41a694:	ficom  DWORD PTR [eax]
  41a696:	sti    
  41a697:	xor    edi,DWORD PTR [esp+eax*8+0x41]
  41a69b:	in     al,0xdb
  41a69d:	in     al,0xbc
  41a69f:	pop    esi
  41a6a0:	mov    ds:0xeec95725,eax
  41a6a5:	or     DWORD PTR [eax],eax
  41a6a7:	push   esi
  41a6a8:	mov    bh,0x1d
  41a6aa:	sti    
  41a6ab:	jbe    0x41a6e1
  41a6ad:	adc    al,0x7a
  41a6af:	imul   ebx,DWORD PTR [ebx-0x38904f0],0x13
  41a6b6:	jb     0x41a723
  41a6b8:	retf   
  41a6b9:	adc    bl,bh
  41a6bb:	jbe    0x41a6d5
  41a6bd:	adc    al,0x6a
  41a6bf:	imul   edi,DWORD PTR [ebx+0x876fb10],0x14
  41a6c6:	bound  ebp,QWORD PTR [ebx-0x35]
  41a6c9:	adc    bl,bh
  41a6cb:	jbe    0x41a6d9
  41a6cd:	adc    al,0x5a
  41a6cf:	imul   ebx,ebx,0x10
  41a6d2:	sti    
  41a6d3:	jbe    0x41a6f5
  41a6d5:	adc    al,0x52
  41a6d7:	imul   ecx,ebx,0x10
  41a6da:	xchg   DWORD PTR [esi+0x7c],esi
  41a6dd:	mov    dh,ch
  41a6df:	je     0x41a6e1
  41a6e1:	add    cl,cl
  41a6e3:	adc    BYTE PTR [esi],dh
  41a6e5:	call   0x3d39da
  41a6ea:	repnz adc eax,0x109b6b3e
  41a6f0:	pop    esi
  41a6f1:	ret    
  41a6f2:	fwait
  41a6f3:	test   DWORD PTR [eax],eax
  41a6f5:	call   0x3d3b9a
  41a6fa:	dec    ebx
  41a6fb:	test   DWORD PTR [eax+ebp*8],eax
  41a6fe:	mov    BYTE PTR [ebx+edi*8+0xc853bff],dl
  41a705:	call   0x3d3b9a
  41a70a:	aad    0xa3
  41a70c:	lods   eax,DWORD PTR ds:[esi]
  41a70d:	mov    BYTE PTR [ebp+0x6e],ch
  41a710:	push   es
  41a711:	je     0x41a6de
  41a713:	push   ss
  41a714:	jns    0x41a70b
  41a716:	out    dx,al
  41a717:	jle    0x41a702
  41a719:	add    cl,cl
  41a71b:	(bad)  
  41a71c:	hlt    
  41a71d:	cmp    BYTE PTR [ebx],0xd9
  41a720:	sbb    dh,cl
  41a722:	inc    edx
  41a723:	jo     0x41a72b
  41a725:	dec    ebp
  41a726:	rcr    BYTE PTR [ebp-0x5d],0x5c
  41a72a:	cmp    al,0xe1
  41a72c:	cdq    
  41a72d:	cld    
  41a72e:	sub    bh,BYTE PTR [esi+0x4556ec79]
  41a734:	or     DWORD PTR [ecx-0x137c0770],ecx
  41a73a:	shl    edx,1
  41a73c:	add    BYTE PTR [eax],al
  41a73e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a73f:	sahf   
  41a740:	lods   eax,DWORD PTR ds:[esi]
  41a741:	cld    
  41a742:	test   esp,esp
  41a744:	ja     0x41a7ba
  41a746:	add    BYTE PTR [eax],al
  41a748:	mov    cl,0xdc
  41a74a:	sbb    al,al
  41a74c:	push   edx
  41a74d:	loope  0x41a74f
  41a74f:	test   BYTE PTR ds:0xd4f47cd8,dl
  41a755:	loopne 0x41a757
  41a757:	xor    esi,edi
  41a759:	mov    ?,WORD PTR ds:0xc4f944
  41a75f:	call   DWORD PTR [edx-0x7c]
  41a762:	fcom   QWORD PTR [eax]
  41a764:	lods   eax,DWORD PTR ds:[esi]
  41a765:	mov    ds,esp
  41a767:	cld    
  41a768:	mov    edx,0x730d147b
  41a76d:	and    al,0xe0
  41a76f:	adc    dl,bl
  41a771:	xchg   BYTE PTR [edi-0x50ec06fd],bh
  41a777:	push   eax
  41a778:	add    eax,0xfd13031f
  41a77d:	aad    0xc0
  41a77f:	jmp    DWORD PTR [eax]
  41a781:	push   0xffffffc0
  41a783:	and    esp,ecx
  41a785:	or     DWORD PTR [edi-0x620910a3],ecx
  41a78b:	retf   
  41a78c:	push   cs
  41a78d:	cs out dx,eax
  41a78f:	hlt    
  41a790:	push   esi
  41a791:	lahf   
  41a792:	out    0x3,eax
  41a794:	aad    0x5a
  41a796:	sbb    bl,BYTE PTR [edx+0x51a5ad5]
  41a79c:	leave  
  41a79d:	sub    eax,0x2dc10517
  41a7a2:	pop    ds
  41a7a3:	add    eax,0x51b2dc9
  41a7a8:	out    0x8d,al
  41a7aa:	repz ret 
  41a7ac:	add    BYTE PTR [eax],al
  41a7ae:	xor    al,BYTE PTR [ecx+0x32cedfaa]
  41a7b4:	sub    dh,ch
  41a7b6:	push   esi
  41a7b7:	popa   
  41a7b8:	call   0xa3c47cc0
  41a7bd:	sti    
  41a7be:	pop    ebp
  41a7bf:	or     DWORD PTR [edi-0x74],esp
  41a7c2:	loop   0x41a7cc
  41a7c4:	ins    DWORD PTR es:[edi],dx
  41a7c5:	fadd   QWORD PTR [esi-0x287018b7]
  41a7cb:	mov    bh,0xd6
  41a7cd:	(bad)  
  41a7ce:	mov    dl,0x9
  41a7d0:	fidivr DWORD PTR [edx]
  41a7d2:	push   ebp
  41a7d3:	jne    0x41a798
  41a7d5:	(bad)
  41a7d8:	imul   BYTE PTR [esi+0x1a]
  41a7db:	inc    eax
  41a7dc:	push   0x6709d523
  41a7e1:	add    al,0x4a
  41a7e3:	ret    
  41a7e4:	out    0xc,al
  41a7e6:	ror    DWORD PTR [ebp+0x7ab9b137],1
  41a7ec:	out    dx,eax
  41a7ed:	fwait
  41a7ee:	out    0x7d,al
  41a7f0:	daa    
  41a7f1:	add    al,0xa8
  41a7f3:	jle    0x41a7f8
  41a7f5:	mov    esp,0xe03af508
  41a7fa:	loop   0x41a7f0
  41a7fc:	ror    DWORD PTR [edi-0x16ffb619],cl
  41a802:	cmovle esp,DWORD PTR [edx*8+0x6d0cca8d]
  41a80a:	xor    ah,0xfc
  41a80d:	jmp    0x15ccc55e
  41a812:	add    BYTE PTR [eax],al
  41a814:	jne    0x41a863
  41a816:	pop    eax
  41a817:	sbb    ebp,0xdde8ff6a
  41a81d:	cmp    BYTE PTR [eax-0x2c],dh
  41a820:	push   ss
  41a821:	cmc    
  41a822:	fs jmp 0x3e1b1fe
  41a828:	fadd   DWORD PTR [edx+0x7dd1b9c4]
  41a82e:	and    al,0x9
  41a830:	fcomp  st(3)
  41a832:	imul   edi,esi,0xa12475a3
  41a838:	outs   dx,BYTE PTR ds:[esi]
  41a839:	in     eax,dx
  41a83a:	retfw  0x9d7
  41a83e:	mov    DWORD PTR [esi+ecx*1+0x3ef00482],edi
  41a845:	adc    eax,0x79d9fa76
  41a84a:	sbb    al,0x74
  41a84c:	cmp    ch,BYTE PTR [ecx]
  41a84e:	dec    eax
  41a84f:	mov    ecx,0xc1244d6b
  41a854:	es in  eax,dx
  41a856:	aas    
  41a857:	mov    ah,0xd9
  41a859:	test   BYTE PTR [eax-0x40781dd3],0x7f
  41a860:	mov    esp,0xd6e9006c
  41a865:	test   eax,0x7dd6ee69
  41a86a:	and    al,0x11
  41a86c:	(bad)  
  41a86d:	jge    0x41a893
  41a86f:	or     esi,edx
  41a871:	(bad)  
  41a873:	pop    ebp
  41a874:	std    
  41a875:	sub    eax,ebp
  41a877:	lea    eax,[eax]
  41a879:	add    BYTE PTR [eax],dh
  41a87b:	idiv   esp
  41a87d:	add    BYTE PTR [ecx],ah
  41a87f:	jb     0x41a8a5
  41a881:	jo     0x41a827
  41a883:	mov    al,0xda
  41a885:	inc    DWORD PTR [ebx-0x66]
  41a888:	inc    eax
  41a889:	and    al,0xb8
  41a88b:	in     eax,0x9a
  41a88d:	sub    al,0x33
  41a88f:	or     BYTE PTR [ecx+0x507c9844],cl
  41a895:	lea    edi,[eax-0x29afb7df]
  41a89b:	or     ebp,eax
  41a89d:	cdq    
  41a89e:	dec    DWORD PTR ds:0x8ccc8b00
  41a8a4:	ror    BYTE PTR [edi+eax*4],0xfb
  41a8a8:	jo     0x41a8c2
  41a8aa:	aam    0xd
  41a8ac:	add    BYTE PTR [eax],al
  41a8ae:	dec    esp
  41a8af:	arpl   bx,di
  41a8b1:	push   esi
  41a8b2:	xchg   ebx,eax
  41a8b3:	jno    0x41a8d9
  41a8b5:	and    BYTE PTR [ebx+0x6c157012],al
  41a8bb:	or     BYTE PTR [esi-0x18],dl
  41a8be:	adc    al,0x65
  41a8c0:	sti    
  41a8c1:	inc    DWORD PTR [ecx+0x6c702441]
  41a8c7:	loopne 0x41a937
  41a8c9:	loopne 0x41a87e
  41a8cb:	or     BYTE PTR [edi+0x287db307],al
  41a8d1:	mov    ecx,DWORD PTR [eax+0x2c]
  41a8d4:	sbb    bh,bh
  41a8d6:	dec    esp
  41a8d7:	sub    al,0x4f
  41a8d9:	push   ebx
  41a8da:	sub    al,BYTE PTR [edi]
  41a8dc:	adc    DWORD PTR [eax+eax*1+0x0],ebp
  41a8e0:	stc    
  41a8e1:	inc    edi
  41a8e2:	add    BYTE PTR [ebx+0x32710cd4],al
  41a8e8:	outs   dx,DWORD PTR ds:[esi]
  41a8e9:	call   0x4489:0x57782440
  41a8f0:	enter  0x5029,0x68
  41a8f4:	scas   eax,DWORD PTR es:[edi]
  41a8f5:	pop    es
  41a8f6:	add    BYTE PTR [eax],ah
  41a8f8:	aad    0x32
  41a8fa:	leave  
  41a8fb:	inc    ebx
  41a8fc:	stc    
  41a8fd:	cmp    al,0x8
  41a8ff:	add    ch,dl
  41a901:	loopne 0x41a88e
  41a903:	pop    ebx
  41a904:	mov    ecx,0x55130118
  41a909:	(bad)  
  41a90a:	inc    eax
  41a90b:	add    BYTE PTR [esi-0x47],dl
  41a90e:	add    esi,DWORD PTR [ebx-0x31]
  41a911:	popa   
  41a912:	jge    0x41a938
  41a914:	leave  
  41a915:	mov    eax,0x14d50000
  41a91a:	dec    ecx
  41a91b:	push   esi
  41a91c:	(bad)  
  41a91d:	(bad)  
  41a91e:	adc    edx,DWORD PTR fs:0xf97401e1
  41a925:	aam    0x1
  41a927:	adc    esi,DWORD PTR [ecx+0x420040d5]
  41a92d:	std    
  41a92e:	and    al,0x18
  41a930:	cmp    dh,dh
  41a932:	adc    edx,DWORD PTR fs:[ebp-0xebc0120]
  41a939:	out    dx,eax
  41a93a:	cmp    BYTE PTR [ebx-0x7],0xef
  41a93e:	add    cl,BYTE PTR ds:0xfd021857
  41a944:	add    BYTE PTR [eax],al
  41a946:	adc    dh,BYTE PTR [esi*2-0xdb73adc]
  41a94d:	add    ah,BYTE PTR [si]
  41a950:	add    dh,BYTE PTR [ecx+esi*4-0x2c]
  41a954:	call   0x255273e
  41a959:	pop    ebp
  41a95a:	mov    ecx,edi
  41a95c:	rcr    BYTE PTR [eax+0x4e],0xe
  41a960:	pusha  
  41a961:	ret    0xe0d1
  41a964:	add    DWORD PTR [ecx+edi*8-0x50],esi
  41a968:	call   0xff3de73e
  41a96d:	cld    
  41a96e:	dec    ecx
  41a96f:	int    0x34
  41a971:	call   0x190b302
  41a976:	mov    al,0x5f
  41a978:	add    BYTE PTR [ebx-0x7f9bfddf],cl
  41a97e:	stc    
  41a97f:	and    eax,0x67ecec2f
  41a984:	call   0x397038c
  41a989:	and    al,0x7c
  41a98b:	push   ebx
  41a98c:	inc    ecx
  41a98d:	xor    bh,ch
  41a98f:	push   es
  41a990:	pop    esp
  41a991:	dec    eax
  41a992:	mov    cl,0x29
  41a994:	aaa    
  41a995:	lea    edx,[esi]
  41a997:	xlat   BYTE PTR cs:[ebx]
  41a999:	pop    eax
  41a99a:	jge    0x41a9e7
  41a99c:	and    al,0x1
  41a99e:	pusha  
  41a99f:	pop    edx
  41a9a0:	pusha  
  41a9a1:	dec    eax
  41a9a2:	mov    cl,0x29
  41a9a4:	(bad)  
  41a9a5:	cdq    
  41a9a6:	mov    edx,0x8d7df2
  41a9ab:	add    BYTE PTR [esi+0x4a84d32d],dl
  41a9b1:	repnz repnz cmp eax,DWORD PTR [ebx+esi*8]
  41a9b6:	and    ebp,eax
  41a9b8:	test   al,0x20
  41a9ba:	jb     0x41aa04
  41a9bc:	icebp  
  41a9bd:	adc    DWORD PTR [eax+ecx*1+0x5d],esp
  41a9c1:	xor    bh,ch
  41a9c3:	ja     0x41a98b
  41a9c5:	repnz test BYTE PTR [eax],0xe6
  41a9c9:	int    0xd8
  41a9cb:	inc    ebx
  41a9cc:	aad    0x59
  41a9ce:	bound  ecx,QWORD PTR [eax-0x47]
  41a9d1:	adc    eax,0xe13d382e
  41a9d6:	sbb    BYTE PTR [esi+0x4871f1f1],0xb1
  41a9dd:	adc    eax,0x76dd3cae
  41a9e2:	lea    ebx,ss:[esi+0x2d]
  41a9e6:	fucomip st,st(3)
  41a9e8:	inc    esp
  41a9e9:	(bad)  
  41a9ea:	inc    BYTE PTR [eax]
  41a9ec:	pop    esi
  41a9ed:	inc    esi
  41a9ee:	add    ch,cl
  41a9f0:	neg    BYTE PTR [ecx-0x75]
  41a9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9f4:	repnz and DWORD PTR [eax+0x74],edx
  41a9f8:	sbb    ah,BYTE PTR [esi]
  41a9fa:	xor    BYTE PTR [ecx],bh
  41a9fc:	psrad  mm6,QWORD PTR [eax+0xd]
  41aa00:	aam    0xee
  41aa02:	mov    cl,dl
  41aa04:	fptan  
  41aa06:	jb     0x41aa76
  41aa08:	jg     0x41aa4b
  41aa0a:	std    
  41aa0b:	mov    esi,0xc5895cd5
  41aa10:	add    BYTE PTR [eax],al
  41aa12:	daa    
  41aa13:	inc    ecx
  41aa14:	push   ecx
  41aa15:	pop    ss
  41aa16:	dec    esi
  41aa17:	push   es
  41aa18:	xor    edx,eax
  41aa1a:	pop    edi
  41aa1b:	dec    esi
  41aa1c:	or     BYTE PTR [esi+0x19fd05e7],bl
  41aa22:	shl    ecx,1
  41aa24:	test   al,0x4a
  41aa26:	(bad)  
  41aa27:	or     DWORD PTR [ebx-0x78a62502],ecx
  41aa2d:	out    0xd5,eax
  41aa2f:	sbb    al,0xc4
  41aa31:	fist   DWORD PTR [esi-0x2adb78f7]
  41aa37:	test   BYTE PTR [edx+0x65],al
  41aa3a:	xchg   BYTE PTR [edi-0x18],dl
  41aa3d:	call   0x82cc:0x62fcee2d
  41aa44:	dec    edx
  41aa45:	dec    ebp
  41aa46:	dec    esi
  41aa47:	adc    eax,0x75b7ffff
  41aa4c:	and    bl,BYTE PTR [edx+0x4d6856a1]
  41aa52:	dec    esp
  41aa53:	xor    BYTE PTR [eax],al
  41aa55:	call   0x49c8:0x6912eea1
  41aa5c:	add    BYTE PTR [eax-0x63],dh
  41aa5f:	std    
  41aa60:	cmp    BYTE PTR [edx],ch
  41aa62:	push   0x5
  41aa64:	mov    al,0xe8
  41aa66:	jmp    0x9242a772
  41aa6b:	in     al,0xd2
  41aa6d:	addr16 retf 
  41aa6f:	lock shr BYTE PTR cs:[edx+0x4d],0xc5
  41aa75:	ret    
  41aa76:	add    BYTE PTR [eax],al
  41aa78:	xor    ebx,esi
  41aa7a:	jo     0x41aa9d
  41aa7c:	daa    
  41aa7d:	sbb    edx,esp
  41aa7f:	retf   
  41aa80:	inc    DWORD PTR ds:0xbf31c02f
  41aa86:	jo     0x41aa9d
  41aa88:	aaa    
  41aa89:	adc    edx,eax
  41aa8b:	retf   
  41aa8c:	mov    edi,0xc0323505
  41aa91:	(bad)  
  41aa92:	aas    
  41aa93:	sub    DWORD PTR [esi],0x6cfffc7d
  41aa99:	xor    edi,DWORD PTR [ebp-0x3b73b28e]
  41aa9f:	(bad)  
  41aaa0:	aas    
  41aaa1:	test   BYTE PTR [ecx],cl
  41aaa3:	aam    0x37
  41aaa5:	dec    esp
  41aaa6:	add    BYTE PTR [ebx-0x5f],dl
  41aaa9:	push   edi
  41aaaa:	jg     0x41aa77
  41aaac:	pop    ebx
  41aaad:	cmp    al,0xc0
  41aaaf:	push   edi
  41aab0:	or     edi,DWORD PTR [esi-0x4]
  41aab3:	jmp    FWORD PTR [ecx+eax*4]
  41aab6:	lds    esi,FWORD PTR [eax+edx*1-0x7d]
  41aaba:	sub    eax,edx
  41aabc:	out    0x4c,eax
  41aabe:	add    BYTE PTR [ebx+0x368ce1],cl
  41aac4:	add    ch,bh
  41aac6:	aas    
  41aac7:	add    esp,ebx
  41aac9:	xor    al,0xbd
  41aacb:	jb     0x41aa9d
  41aacd:	in     al,0xa
  41aacf:	mov    ecx,esp
  41aad1:	pop    esi
  41aad2:	test   BYTE PTR [eax+0x3000bec],0xc1
  41aad9:	test   ah,dl
  41aadb:	jne    0x41aadd
  41aadd:	add    BYTE PTR ds:0x64c96545,cl
  41aae3:	add    eax,0x58d50000
  41aae8:	aam    0xc8
  41aaea:	xchg   esi,eax
  41aaeb:	loop   0x41aad5
  41aaed:	xchg   edi,eax
  41aaee:	cmp    ecx,DWORD PTR [eax]
  41aaf0:	std    
  41aaf1:	adc    DWORD PTR [ebp-0x1f76c08b],0xc
  41aaf8:	leave  
  41aaf9:	inc    eax
  41aafa:	aad    0xdf
  41aafc:	pop    es
  41aafd:	aam    0x9e
  41aaff:	and    al,0x4
  41ab01:	mov    DWORD PTR [esi-0x2a7809a6],esp
  41ab07:	loopne 0x41ab09
  41ab09:	add    eax,esp
  41ab0b:	mov    al,0xc9
  41ab0d:	inc    eax
  41ab0e:	aad    0x2c
  41ab10:	es push ebp
  41ab12:	and    ebx,ecx
  41ab14:	sub    BYTE PTR [eax-0x7e],ch
  41ab17:	mov    eax,0xd4b14389
  41ab1c:	xor    ebp,edi
  41ab1e:	pop    esp
  41ab1f:	fild   WORD PTR [ebp+0x6a]
  41ab22:	aad    0x5d
  41ab24:	inc    ebx
  41ab25:	sbb    BYTE PTR [edi+edx*1+0x8],cl
  41ab29:	call   0x44e0e1
  41ab2e:	stos   BYTE PTR es:[edi],al
  41ab2f:	jne    0x41ab74
  41ab31:	cmp    BYTE PTR ds:0x42ff57ce,bh
  41ab37:	sbb    BYTE PTR [esi+0x5b],bl
  41ab3a:	dec    esi
  41ab3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab3c:	pop    ecx
  41ab3d:	ret    0xe0d9
  41ab40:	mov    DWORD PTR [eax+0x0],ecx
  41ab43:	add    ch,al
  41ab45:	mov    dh,0x55
  41ab47:	xor    DWORD PTR [edx],esp
  41ab49:	adc    al,0xc4
  41ab4b:	or     BYTE PTR [edx*8-0xb7976e1],0x89
  41ab53:	aad    0x3
  41ab55:	jecxz  0x41ab55
  41ab57:	jb     0x41ab28
  41ab59:	mov    al,ds:0xfbc5c181
  41ab5e:	ret    
  41ab5f:	jno    0x41ab47
  41ab61:	or     DWORD PTR [edx],edx
  41ab63:	or     al,0x7c
  41ab65:	leave  
  41ab66:	(bad)  
  41ab67:	add    bl,BYTE PTR [ebx]
  41ab69:	or     DWORD PTR [esi],0x78
  41ab6c:	mov    bh,0x48
  41ab6e:	or     ah,0x2
  41ab71:	jge    0x41abec
  41ab73:	bsr    ebx,DWORD PTR [edx]
  41ab76:	test   esi,edi
  41ab78:	rol    DWORD PTR [ebp-0x7d2388da],0xa9
  41ab7f:	adc    ebx,DWORD PTR [ecx+esi*8+0x51]
  41ab83:	std    
  41ab84:	cli    
  41ab85:	or     bl,BYTE PTR ds:0x6008e28f
  41ab8b:	inc    ecx
  41ab8c:	lds    esi,FWORD PTR [ebp-0x20]
  41ab8f:	mov    BYTE PTR ds:0xd1457002,dl
  41ab95:	(bad)  
  41ab96:	in     eax,0x1
  41ab98:	dec    esp
  41ab99:	(bad)  
  41ab9a:	adc    eax,0x6257945e
  41ab9f:	jae    0x41ab66
  41aba1:	cmp    ah,BYTE PTR [edi+0x12f75655]
  41aba7:	sbb    al,BYTE PTR [eax]
  41aba9:	add    BYTE PTR [eax+esi*2-0x15],cl
  41abad:	mov    BYTE PTR [ebx],dl
  41abaf:	(bad)  
  41abb0:	popa   
  41abb1:	ror    DWORD PTR [ebx],cl
  41abb3:	je     0x41aba0
  41abb5:	jbe    0x41ab8d
  41abb7:	imul   eax
  41abb9:	add    ecx,ecx
  41abbb:	cld    
  41abbc:	adc    DWORD PTR es:[ecx+edi*1],0xdfa4c5b2
  41abc4:	sbb    esp,eax
  41abc6:	mov    DWORD PTR [edi+0x2a],ecx
  41abc9:	imul   edx,DWORD PTR ds:0x2dc2ea39,0x3d0660f7
  41abd3:	or     edi,DWORD PTR [edx+ecx*2+0xcb3083d]
  41abda:	dec    esp
  41abdb:	inc    edi
  41abdc:	add    cl,ah
  41abde:	push   ebx
  41abdf:	scas   al,BYTE PTR es:[edi]
  41abe0:	jae    0x41abdc
  41abe2:	xchg   cl,ah
  41abe4:	xor    eax,0xe8ece9ca
  41abe9:	shl    cl,cl
  41abeb:	jae    0x41abf9
  41abed:	bound  edx,QWORD PTR [ebx-0x322f17e7]
  41abf3:	out    dx,al
  41abf4:	cld    
  41abf5:	push   es
  41abf6:	inc    ebx
  41abf7:	add    ch,al
  41abf9:	xchg   ebp,eax
  41abfa:	cmp    bh,ch
  41abfc:	cld    
  41abfd:	test   BYTE PTR [eax+0x16],0xe8
  41ac01:	popf   
  41ac02:	cmp    bh,ch
  41ac04:	cld    
  41ac05:	out    0x20,al
  41ac07:	sub    ch,al
  41ac09:	and    eax,0xd6fcef3b
  41ac0e:	add    BYTE PTR [eax],al
  41ac10:	and    BYTE PTR [edx],ah
  41ac12:	call   0xfd30a724
  41ac17:	push   ebx
  41ac18:	rcl    DWORD PTR [ebx-0x18],0x10
  41ac1c:	clc    
  41ac1d:	out    dx,al
  41ac1e:	cld    
  41ac1f:	scas   eax,DWORD PTR es:[edi]
  41ac20:	rol    BYTE PTR [edi],1
  41ac22:	rcr    DWORD PTR [edx],0xa
  41ac25:	push   esp
  41ac26:	push   ebp
  41ac27:	jb     0x41ac97
  41ac29:	fs std 
  41ac2b:	jno    0x41ac03
  41ac2d:	or     DWORD PTR [eax],eax
  41ac2f:	jmp    0x3ad9:0x2ac8d99b
  41ac36:	jmp    0x41abbe
  41ac38:	rcl    DWORD PTR [ecx-0x79],0xce
  41ac3c:	sbb    esp,DWORD PTR cs:[esi+0x76]
  41ac40:	cmp    esi,ebp
  41ac42:	je     0x41ac3d
  41ac44:	add    esp,DWORD PTR ds:[esi+0x66]
  41ac48:	sub    esi,ebp
  41ac4a:	mov    ah,0x69
  41ac4c:	(bad)  
  41ac4d:	or     DWORD PTR [eax],eax
  41ac4f:	inc    ecx
  41ac50:	sbb    DWORD PTR [eax-0x3],ebp
  41ac53:	dec    esi
  41ac54:	(bad)
  41ac57:	add    BYTE PTR [ebx],ah
  41ac59:	sbb    DWORD PTR [esi+0x13],esi
  41ac5c:	xchg   DWORD PTR [ebp+0xc],esi
  41ac5f:	add    edi,DWORD PTR [ecx-0x3c009520]
  41ac65:	in     eax,dx
  41ac66:	aas    
  41ac67:	cmp    DWORD PTR [ecx-0x23a0c8c8],0x7a
  41ac6e:	jmp    0xe83ee872
  41ac73:	fld    QWORD PTR [eax]
  41ac75:	add    BYTE PTR [ecx-0x13],bl
  41ac78:	sti    
  41ac79:	mov    eax,ds:0x3fc1e8
  41ac7e:	inc    edi
  41ac7f:	icebp  
  41ac80:	add    eax,0x15875838
  41ac86:	int3   
  41ac87:	sar    DWORD PTR [edi],0x0
  41ac8a:	daa    
  41ac8b:	mov    esi,0x624c965
  41ac90:	add    BYTE PTR [eax],al
  41ac92:	xor    DWORD PTR [edx-0xf5c87f3],eax
  41ac98:	sti    
  41ac99:	adc    ebp,0x5
  41ac9c:	jno    0x41aca7
  41ac9e:	in     eax,dx
  41ac9f:	fiadd  WORD PTR [eax+eax*1+0x754b086c]
  41aca6:	cs sub al,0xf8
  41aca9:	je     0x41ac31
  41acab:	mov    ebx,edi
  41acad:	jne    0x41ad21
  41acaf:	push   esi
  41acb0:	call   0xfc327656
  41acb5:	and    DWORD PTR [ecx],esp
  41acb7:	fadd   st,st(7)
  41acb9:	inc    ebx
  41acba:	cmp    al,0xdb
  41acbc:	push   cs
  41acbd:	mov    esi,DWORD PTR [ebx+0x5e]
  41acc0:	lds    ecx,FWORD PTR [eax-0x41fff7d4]
  41acc6:	dec    esp
  41acc7:	mov    esp,0xca84003f
  41accc:	pusha  
  41accd:	inc    DWORD PTR [ebx-0x2a2bc682]
  41acd3:	daa    
  41acd4:	inc    ebp
  41acd5:	add    BYTE PTR [edx+0x59579c],dh
  41acdb:	add    BYTE PTR [esi],dl
  41acdd:	lea    ecx,[ebp-0x57c1ab15]
  41ace3:	pop    es
  41ace4:	aad    0xe2
  41ace6:	dec    esi
  41ace7:	push   0xffffffab
  41ace9:	dec    ebp
  41acea:	scas   eax,DWORD PTR es:[edi]
  41aceb:	jae    0x41acd7
  41aced:	and    bh,cl
  41acef:	push   edi
  41acf0:	in     eax,dx
  41acf1:	neg    DWORD PTR [ecx-0x1]
  41acf4:	fisub  DWORD PTR [edi+edi*2+0x63]
  41acf8:	into   
  41acf9:	cld    
  41acfa:	clc    
  41acfb:	dec    edi
  41acfc:	push   es
  41acfd:	and    DWORD PTR [eax+edx*2+0x2f],edx
  41ad01:	out    0x50,eax
  41ad03:	std    
  41ad04:	loopne 0x41acb6
  41ad06:	adc    eax,0xc465d540
  41ad0b:	or     al,0x50
  41ad0d:	xor    al,0x3
  41ad0f:	add    ch,dl
  41ad11:	das    
  41ad12:	xchg   DWORD PTR [edx-0x30627cf],eax
  41ad18:	and    eax,0x688abf68
  41ad1d:	cmp    eax,0xd982fcfd
  41ad22:	jbe    0x41acfb
  41ad24:	jp     0x41acda
  41ad26:	jl     0x41ace7
  41ad28:	loop   0x41ad8e
  41ad2a:	xor    al,0xff
  41ad2c:	push   0xffffffe1
  41ad2e:	push   0x38
  41ad30:	push   eax
  41ad31:	push   ss
  41ad32:	nop
  41ad33:	push   edi
  41ad34:	ins    DWORD PTR es:[edi],dx
  41ad35:	fwait
  41ad36:	push   esi
  41ad37:	call   DWORD PTR [edx+0x4e]
  41ad3a:	sbb    BYTE PTR [ebx+0x4c],0x84
  41ad3e:	stc    
  41ad3f:	dec    edi
  41ad40:	add    BYTE PTR [eax],al
  41ad42:	dec    esi
  41ad43:	mov    ds:0x741c5ae8,eax
  41ad48:	cli    
  41ad49:	adc    DWORD PTR ds:0xd40f7ccc,0x9
  41ad50:	out    0x3,eax
  41ad52:	dec    esi
  41ad53:	test   DWORD PTR [edx-0x4914e604],edi
  41ad59:	cli    
  41ad5a:	out    0x31,eax
  41ad5c:	stc    
  41ad5d:	inc    ebx
  41ad5e:	aad    0x86
  41ad60:	ds cli 
  41ad62:	rol    DWORD PTR [ebp+0x9d50340],1
  41ad68:	sar    DWORD PTR [esi+ebx*2],0x75
  41ad6c:	pop    ds
  41ad6d:	pop    ebx
  41ad6e:	std    
  41ad6f:	jp     0x41ad35
  41ad71:	add    al,0xd5
  41ad73:	pop    edi
  41ad74:	loope  0x41acfe
  41ad76:	addr16 mov ecx,0x4b56ebae
  41ad7c:	call   0x7470ec84
  41ad81:	jo     0x41ad48
  41ad83:	push   ecx
  41ad84:	(bad)  
  41ad86:	sbb    ecx,DWORD PTR [ecx]
  41ad88:	out    0xc1,eax
  41ad8a:	pop    ss
  41ad8b:	jmp    0x41ad73
  41ad8d:	push   edx
  41ad8e:	fdiv   DWORD PTR [ebx+0x7d12f92b]
  41ad94:	and    ecx,esp
  41ad96:	or     ah,BYTE PTR [eax-0x1f]
  41ad99:	pop    esp
  41ad9a:	pop    esi
  41ad9b:	ins    BYTE PTR es:[edi],dx
  41ad9c:	stos   DWORD PTR es:[edi],eax
  41ad9d:	in     al,dx
  41ad9e:	retf   0xc63a
  41ada1:	stc    
  41ada2:	sub    edx,DWORD PTR [ecx+0x6a]
  41ada5:	cld    
  41ada6:	add    BYTE PTR [eax],al
  41ada8:	jnp    0x41ada5
  41adaa:	bound  esi,QWORD PTR [eax-0x7919158e]
  41adb0:	push   edi
  41adb1:	dec    ebp
  41adb2:	mov    al,ds:0x115961f9
  41adb7:	stc    
  41adb8:	dec    edi
  41adb9:	inc    esp
  41adba:	push   edi
  41adbb:	push   esp
  41adbc:	pop    esp
  41adbd:	ret    0xf936
  41adc0:	out    0x9,eax
  41adc2:	fadd   DWORD PTR [ebx-0x2b]
  41adc5:	jle    0x41ae45
  41adc7:	test   DWORD PTR [ecx],edi
  41adc9:	jmp    0xe8ff:0x99b2e5ff
  41add0:	(bad)  
  41add1:	jle    0x41ad55
  41add3:	lds    ebx,FWORD PTR [edi]
  41add5:	in     eax,dx
  41add6:	cld    
  41add7:	mov    ecx,0xe8ff05ae
  41addc:	(bad)  
  41addd:	jle    0x41ad61
  41addf:	mov    ebp,0x99fced03
  41ade4:	leave  
  41ade5:	repz push ebp
  41ade7:	ins    BYTE PTR es:[edi],dx
  41ade8:	mov    edx,0xb2644ff9
  41aded:	int    0x4f
  41adef:	cs (bad) 
  41adf2:	pop    gs
  41adf4:	(bad)  
  41adf5:	xchg   BYTE PTR [edi-0x7d81836b],bh
  41adfb:	test   ebx,ecx
  41adfd:	out    0xfc,al
  41adff:	xchg   DWORD PTR [edi],ecx
  41ae01:	popf   
  41ae02:	imul   eax,DWORD PTR [esp+edi*4],0xffffffe6
  41ae06:	jae    0x41addd
  41ae08:	xor    al,0x8b
  41ae0a:	aaa    
  41ae0b:	mov    BYTE PTR [eax],0x0
  41ae0e:	inc    ebx
  41ae0f:	adc    BYTE PTR [edx-0x73],ch
  41ae12:	pshufw mm0,QWORD PTR [edi+0x1a959f1],0x47
  41ae1a:	ficomp WORD PTR [ecx]
  41ae1c:	jae    0x41ade3
  41ae1e:	pop    ecx
  41ae1f:	out    0xfe,al
  41ae21:	push   ebx
  41ae22:	mov    ch,0x94
  41ae24:	sbb    BYTE PTR ds:0x19fce684,0x52
  41ae2b:	mov    WORD PTR [ebx-0x4c],gs
  41ae2e:	ins    DWORD PTR es:[edi],dx
  41ae2f:	out    0x8a,al
  41ae31:	dec    esp
  41ae32:	or     ah,bl
  41ae34:	cld    
  41ae35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae36:	outs   dx,BYTE PTR ds:[esi]
  41ae37:	js     0x41ae11
  41ae39:	sahf   
  41ae3a:	pop    ebp
  41ae3b:	lea    edi,[edi-0x756b0ce3]
  41ae41:	xor    eax,0xfce644
  41ae46:	or     ecx,DWORD PTR [bx+di-0x3773]
  41ae4b:	loopne 0x41ae48
  41ae4d:	push   DWORD PTR [edi+0x4e80857]
  41ae53:	or     eax,0xccb00000
  41ae58:	jo     0x41ae67
  41ae5a:	jp     0x41ae83
  41ae5c:	sti    
  41ae5d:	sub    BYTE PTR [ecx],0xe2
  41ae60:	test   BYTE PTR [edi],0x7e
  41ae63:	das    
  41ae64:	sti    
  41ae65:	call   FWORD PTR [ebx-0x3aa1a8bf]
  41ae6b:	into   
  41ae6c:	add    BYTE PTR [eax],al
  41ae6e:	push   ecx
  41ae6f:	xchg   esi,eax
  41ae70:	call   0xa841aef6
  41ae75:	jo     0x41ae76
  41ae77:	(bad)  
  41ae78:	in     al,dx
  41ae79:	cmp    eax,0x90036a56
  41ae7e:	jno    0x41ae64
  41ae80:	test   BYTE PTR [ebx-0x3bc80baf],dl
  41ae86:	in     al,0x7f
  41ae88:	jns    0x41ae95
  41ae8a:	add    BYTE PTR [ebp-0x766cf],cl
  41ae90:	stos   DWORD PTR es:[edi],eax
  41ae91:	cmp    eax,DWORD PTR [edi-0x28052b3a]
  41ae97:	(bad)  
  41ae98:	mov    ebx,0x300fbc89
  41ae9d:	call   0x56f6:0x1b7cfffc
  41aea4:	adc    al,0x8e
  41aea6:	cld    
  41aea7:	jmp    FWORD PTR [edx+esi*2+0x2]
  41aeab:	push   esi
  41aeac:	punpckhbw mm0,QWORD PTR es:[eax]
  41aeb0:	jl     0x41aebe
  41aeb2:	inc    eax
  41aeb3:	(bad)  
  41aeb4:	icebp  
  41aeb5:	jns    0x41aeaf
  41aeb7:	(bad)  
  41aeb8:	cmp    edi,DWORD PTR ds:0xfc0015fb
  41aebe:	aas    
  41aebf:	add    ch,dl
  41aec1:	imul   edi,DWORD PTR [edi],0xf47a56fc
  41aec7:	or     al,0x59
  41aec9:	pop    ecx
  41aeca:	add    al,0x0
  41aecc:	aad    0xff
  41aece:	imul   edi,DWORD PTR [eax+eiz*2],0x2afd981d
  41aed5:	ja     0x41af33
  41aed7:	xor    al,BYTE PTR [eax]
  41aed9:	add    dh,bh
  41aedb:	cmp    ebp,ebp
  41aedd:	pop    ebx
  41aede:	aam    0xf2
  41aee0:	dec    edx
  41aee1:	mov    eax,ecx
  41aee3:	jp     0x41aef6
  41aee5:	inc    eax
  41aee6:	aad    0x45
  41aee8:	aas    
  41aee9:	clc    
  41aeea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeeb:	(bad)  
  41aeec:	cmp    eax,0x4df1faff
  41aef1:	mov    ebx,DWORD PTR [eax+0x3e]
  41aef4:	idiv   ah
  41aef6:	jmp    0xce2e:0xe172f581
  41aefd:	adc    BYTE PTR ds:0x50372c7e,0xf9
  41af04:	outs   dx,BYTE PTR ds:[esi]
  41af05:	sub    eax,0xffec9656
  41af0a:	inc    esi
  41af0b:	aam    0xf5
  41af0d:	jb     0x41aed0
  41af0f:	call   0xb1097323
  41af14:	add    BYTE PTR [edx-0x2b],ch
  41af17:	imul   edi,esp,0xffffff8a
  41af1a:	sbb    cl,ch
  41af1c:	push   eax
  41af1d:	push   ebp
  41af1e:	call   0xf5bd:0x8fcf03e
  41af25:	aad    0x50
  41af27:	mov    cl,0x6c
  41af29:	pop    es
  41af2a:	mov    esp,0xd172fc4d
  41af2f:	arpl   WORD PTR [ecx+ebp*8],ax
  41af32:	xlat   BYTE PTR ds:[ebx]
  41af33:	loop   0x41af0e
  41af35:	cld    
  41af36:	loopne 0x41aeec
  41af38:	cmc    
  41af39:	adc    ah,BYTE PTR ds:0x43f90a
  41af3f:	add    ch,dl
  41af41:	out    0x13,al
  41af43:	clc    
  41af44:	push   ecx
  41af45:	std    
  41af46:	sahf   
  41af47:	adc    DWORD PTR [ebp+0x1d802e09],edx
  41af4d:	pop    ebp
  41af4e:	xrelease mov BYTE PTR [edi+0x7e],dl
  41af52:	jp     0x41af4a
  41af54:	xor    DWORD PTR [edx],edi
  41af56:	jg     0x41af70
  41af58:	pop    es
  41af59:	out    0x6d,eax
  41af5b:	push   ebp
  41af5c:	gs or  edx,eax
  41af5f:	int3   
  41af60:	adc    eax,0x55e7723d
  41af65:	idiv   BYTE PTR [esi+0x3359cf83]
  41af6b:	inc    edx
  41af6c:	aad    0x8
  41af6e:	call   0x5b06:0x3692a04d
  41af75:	xchg   dh,ah
  41af77:	add    edx,ebp
  41af79:	jno    0x41afce
  41af7b:	outs   dx,BYTE PTR ds:[esi]
  41af7c:	xchg   ebp,eax
  41af7d:	or     DWORD PTR [esi],esp
  41af7f:	adc    ch,bl
  41af81:	stc    
  41af82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af83:	add    edx,DWORD PTR [esi-0x37]
  41af86:	in     eax,0x7f
  41af88:	push   ebx
  41af89:	or     edi,esp
  41af8b:	add    edx,DWORD PTR [esi-0x21]
  41af8e:	jp     0x41b005
  41af90:	xor    ecx,DWORD PTR [ebx+0x622903bc]
  41af96:	popf   
  41af97:	test   bh,0x81
  41af9a:	fadd   DWORD PTR [ebx-0x2b]
  41af9d:	xchg   esp,eax
  41af9e:	jmp    0x3:0xe709d47e
  41afa5:	add    BYTE PTR ds:0x886286f2,ah
  41afab:	out    0x61,al
  41afad:	cld    
  41afae:	push   edi
  41afaf:	out    0x3a,al
  41afb1:	pop    edi
  41afb2:	dec    esp
  41afb3:	mov    esi,0xbf7ac671
  41afb8:	jmp    DWORD PTR [esi]
  41afba:	pusha  
  41afbb:	in     eax,0x54
  41afbd:	pop    esp
  41afbe:	repnz fld DWORD PTR [eax-0x7d119f4f]
  41afc5:	das    
  41afc6:	dec    eax
  41afc7:	in     eax,0x54
  41afc9:	arpl   WORD PTR [ecx],bp
  41afcb:	out    dx,al
  41afcc:	call   0xc5a2:0x83e5480b
  41afd3:	dec    ebp
  41afd4:	push   0xffffffbc
  41afd6:	pop    ebx
  41afd7:	arpl   WORD PTR [eax+0x58e43911],bx
  41afdd:	call   0x59b494b8
  41afe2:	dec    esp
  41afe3:	int    0x4f
  41afe5:	ins    BYTE PTR es:[edi],dx
  41afe6:	shl    ch,cl
  41afe8:	dec    edi
  41afe9:	inc    ecx
  41afea:	not    DWORD PTR [edx-0x3]
  41afed:	dec    esi
  41afee:	push   esp
  41afef:	retf   0x6c0b
  41aff2:	adc    DWORD PTR ds:0x48012a9d,edx
  41aff8:	dec    esi
  41aff9:	ss loopne 0x41af85
  41affc:	fdiv   DWORD PTR [ebp+0x2572e4bf]
  41b002:	jmp    0xc860abf6
  41b007:	out    0x72,al
  41b009:	adc    eax,0x47b90000
  41b00e:	bound  ecx,QWORD PTR [esi]
  41b010:	enter  0x4f2,0x93
  41b014:	(bad)  
  41b015:	icebp  
  41b016:	(bad)  
  41b017:	std    
  41b018:	test   eax,0xd975ce6
  41b01d:	int    0xc0
  41b01f:	xchg   esp,eax
  41b020:	dec    ebp
  41b021:	icebp  
  41b022:	adc    ch,0xbe
  41b025:	cmp    dl,BYTE PTR [esi+0x36]
  41b028:	(bad)
  41b02c:	popf   
  41b02d:	dec    edx
  41b02e:	add    BYTE PTR [edx-0x7a],ah
  41b031:	mov    WORD PTR [edx],ds
  41b033:	add    BYTE PTR [edx+edx*8+0x3f],bl
  41b037:	add    ch,ah
  41b039:	sti    
  41b03a:	ror    ebx,cl
  41b03c:	mov    edi,0x9815fb0d
  41b041:	sti    
  41b042:	aas    
  41b043:	add    bh,ah
  41b045:	and    ecx,DWORD PTR [eax]
  41b047:	mov    ds:0x3fd280,eax
  41b04c:	mov    bh,0x23
  41b04e:	or     al,0xa3
  41b050:	mov    ecx,ss
  41b052:	aas    
  41b053:	add    bh,al
  41b055:	and    edx,DWORD PTR [eax]
  41b057:	mov    ds:0x3fd198,eax
  41b05c:	mov    bh,0x23
  41b05e:	adc    al,0xa3
  41b060:	push   eax
  41b061:	sar    BYTE PTR [edi],cl
  41b063:	add    BYTE PTR [edi-0x1c95e7dd],ah
  41b069:	stos   BYTE PTR es:[edi],al
  41b06a:	cwde   
  41b06b:	retf   
  41b06c:	aas    
  41b06d:	or     DWORD PTR [ecx-0x6bffff83],ecx
  41b073:	inc    eax
  41b074:	test   DWORD PTR ds:0x3fd264,esi
  41b07a:	test   BYTE PTR [ecx+0x57],ch
  41b07d:	add    esp,edi
  41b07f:	xchg   ecx,eax
  41b080:	ret    
  41b081:	push   eax
  41b082:	dec    edx
  41b083:	xchg   edx,eax
  41b084:	xor    DWORD PTR [eax-0xffb722],ebp
  41b08a:	or     dh,BYTE PTR [ebx+0x30]
  41b08d:	mov    ds:0x3fd244,eax
  41b092:	and    DWORD PTR [eax+esi*8+0x58],ebx
  41b096:	in     al,0x25
  41b098:	push   edi
  41b099:	add    DWORD PTR [ecx+edx*4+0x36a350c3],edi
  41b0a0:	test   al,0xcb
  41b0a2:	outs   dx,DWORD PTR ds:[esi]
  41b0a3:	or     bl,bh
  41b0a5:	(bad)  
  41b0a6:	push   es
  41b0a7:	pop    ds
  41b0a8:	lahf   
  41b0a9:	mov    al,0x47
  41b0ab:	dec    esp
  41b0ac:	add    BYTE PTR [ebp+0x57f43dd5],cl
  41b0b2:	ins    DWORD PTR es:[edi],dx
  41b0b3:	out    0x4d,al
  41b0b5:	(bad)  
  41b0b6:	jp     0x41b10f
  41b0b8:	leave  
  41b0b9:	dec    edi
  41b0ba:	jb     0x41b099
  41b0bc:	cwde   
  41b0bd:	enter  0xf316,0xf1
  41b0c1:	aad    0xef
  41b0c3:	loopne 0x41b06a
  41b0c5:	xchg   ebx,eax
  41b0c6:	mov    gs,WORD PTR [edi]
  41b0c8:	add    al,0x8b
  41b0ca:	sar    BYTE PTR [edx+0x4b],1
  41b0cd:	call   0x44c8b6
  41b0d2:	dec    esi
  41b0d3:	stos   DWORD PTR es:[edi],eax
  41b0d4:	push   ebx
  41b0d5:	std    
  41b0d6:	add    BYTE PTR [eax],al
  41b0d8:	add    BYTE PTR [ebx],bh
  41b0da:	mov    ebp,0xda63d540
  41b0df:	mov    al,ds:0x44a70d
  41b0e4:	(bad)  
  41b0e6:	mov    al,cl
  41b0e8:	xchg   esi,eax
  41b0e9:	bnd je 0x41b105
  41b0ec:	int3   
  41b0ed:	in     eax,0xb0
  41b0ef:	enter  0xf296,0x74
  41b0f3:	adc    DWORD PTR [ebp+esi*8-0xd69376c],edi
  41b0fa:	je     0x41b105
  41b0fc:	sbb    ebp,ebp
  41b0fe:	pushf  
  41b0ff:	enter  0xf296,0x3
  41b103:	cmp    DWORD PTR [esi],edx
  41b105:	popf   
  41b106:	push   es
  41b107:	mov    BYTE PTR [eax-0x2abf42c2],bh
  41b10d:	mov    ds:0x2f9c594e,eax
  41b112:	sbb    BYTE PTR [eax],al
  41b114:	sub    BYTE PTR [eax-0x20],ch
  41b117:	sub    BYTE PTR [ecx+0x3f55567d],0xad
  41b11e:	push   ebp
  41b11f:	call   0xfd334037
  41b124:	das    
  41b125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b126:	jg     0x41b1a2
  41b128:	popa   
  41b129:	or     bh,BYTE PTR [edi]
  41b12b:	fmul   QWORD PTR [eax+0x40]
  41b12e:	call   0x6472b036
  41b133:	jo     0x41b0ca
  41b135:	inc    edx
  41b136:	mov    edi,0xe7091c9e
  41b13b:	jle    0x41b13d
  41b13d:	add    bh,ah
  41b13f:	stc    
  41b140:	jno    0x41b1b2
  41b142:	fst    DWORD PTR [ebx+ebp*1-0x168fed1c]
  41b149:	pop    ecx
  41b14a:	add    dl,dh
  41b14c:	stc    
  41b14d:	lea    edx,[edx-0x1d]
  41b150:	arpl   bx,ax
  41b152:	(bad)  [ebp+0x9d505b2]
  41b158:	add    esp,edi
  41b15a:	mov    cl,BYTE PTR [esi+0x555fe42b]
  41b160:	xor    ebx,ebx
  41b162:	cmp    eax,0x57f27651
  41b167:	retf   0x88dd
  41b16a:	adc    BYTE PTR [eax],cl
  41b16c:	out    0x3,eax
  41b16e:	pop    esi
  41b16f:	dec    ebp
  41b170:	dec    ebx
  41b171:	push   ebx
  41b172:	jg     0x41b17c
  41b174:	mov    ebp,0x6ff1ed5a
  41b179:	add    edx,ebp
  41b17b:	nop
  41b17c:	stos   DWORD PTR es:[edi],eax
  41b17d:	xlat   BYTE PTR ds:[ebx]
  41b17e:	push   edi
  41b17f:	retf   0x87ed
  41b182:	cmp    BYTE PTR [eax],cl
  41b184:	out    0x3,eax
  41b186:	push   esp
  41b187:	cmp    eax,DWORD PTR gs:[ebx]
  41b18a:	enter  0x4a8d,0x5
  41b18e:	aad    0x9
  41b190:	ins    BYTE PTR es:[edi],dx
  41b191:	dec    eax
  41b192:	mov    ebp,0x2b038139
  41b197:	cmp    edi,edi
  41b199:	enter  0x963,0xe7
  41b19d:	jl     0x41b1b6
  41b19f:	(bad)  
  41b1a0:	arpl   bx,ax
  41b1a2:	add    BYTE PTR [eax],al
  41b1a4:	(bad)  [ebp+0x9d864ff]
  41b1aa:	add    BYTE PTR [edx+0x25],ch
  41b1ad:	repnz push ebp
  41b1b0:	pop    edx
  41b1b1:	mov    BYTE PTR [ecx],al
  41b1b3:	jmp    0xd984408e
  41b1b8:	sub    DWORD PTR [edi+0x3c21a942],ecx
  41b1be:	push   ebp
  41b1bf:	sar    DWORD PTR [ebx],1
  41b1c1:	jnp    0x41b1c2
  41b1c3:	call   0x6d19f9b7
  41b1c8:	cdq    
  41b1c9:	adc    eax,0x9d34184
  41b1ce:	add    BYTE PTR [edx-0x3e],ch
  41b1d1:	fcos   
  41b1d3:	in     eax,dx
  41b1d4:	push   edx
  41b1d5:	inc    esp
  41b1d6:	add    ch,cl
  41b1d8:	(bad)  
  41b1d9:	mov    es,WORD PTR [edx-0x7b]
  41b1dc:	mov    eax,ds:0x8c1f016f
  41b1e1:	icebp  
  41b1e2:	jg     0x41b244
  41b1e4:	ror    DWORD PTR [ecx],1
  41b1e6:	xchg   DWORD PTR [ecx+eiz*2],ebp
  41b1e9:	xchg   DWORD PTR [edi+0x24c52de],edi
  41b1ef:	jmp    0x55a43aca
  41b1f4:	shr    DWORD PTR [edi+0x25],1
  41b1f7:	fs jb  0x41b277
  41b1fa:	push   edi
  41b1fb:	inc    ecx
  41b1fc:	sbb    BYTE PTR [ebx],bh
  41b1fe:	(bad)  
  41b1ff:	call   0x9a39f977
  41b204:	imul   ecx,ebp,0x9f4f
  41b20a:	in     eax,0x56
  41b20c:	or     al,0x41
  41b20e:	jg     0x41b28a
  41b210:	(bad)  
  41b211:	call   0xaab55371
  41b216:	push   ecx
  41b217:	fs clc 
  41b219:	jmp    0xeb5837f3
  41b21e:	(bad)  
  41b21f:	or     DWORD PTR [ecx+0x6f55900],eax
  41b225:	rdpmc  
  41b227:	or     eax,DWORD PTR [edx]
  41b229:	add    BYTE PTR [ebp+edi*1+0x60a44587],ch
  41b230:	jb     0x41b1d6
  41b232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b233:	repnz jmp FWORD PTR ds:[ebx-0x80b85a0]
  41b23b:	ret    0x41e4
  41b23e:	jle    0x41b24d
  41b240:	add    BYTE PTR [eax-0xe7ef582],ch
  41b246:	jge    0x41b255
  41b248:	add    BYTE PTR [ebx+0x4535f1b1],cl
  41b24e:	and    BYTE PTR [edx],cl
  41b250:	and    ch,0x3d
  41b253:	or     eax,0xe1f12900
  41b258:	out    0xa,eax
  41b25a:	scas   eax,DWORD PTR es:[edi]
  41b25b:	outs   dx,DWORD PTR ds:[esi]
  41b25c:	in     al,0x0
  41b25e:	sbb    ecx,DWORD PTR [eax+0xd3c01d2]
  41b264:	xchg   DWORD PTR [ebp+0x24],eax
  41b267:	sar    bh,cl
  41b269:	add    DWORD PTR [ecx*1+0x8b00],ebp
  41b270:	in     al,dx
  41b271:	add    DWORD PTR [edx+0x7],ebp
  41b274:	ret    
  41b275:	inc    edi
  41b276:	loopne 0x41b2a6
  41b278:	cld    
  41b279:	or     al,0x0
  41b27b:	pop    esi
  41b27c:	jno    0x41b24a
  41b27e:	jp     0x41b2b4
  41b280:	cmp    al,0xda
  41b282:	adc    DWORD PTR [eax+0x590045a7],ebx
  41b288:	gs inc edi
  41b28a:	fadd   QWORD PTR [ebp+0x6a2158ac]
  41b290:	fistp  WORD PTR [edi+0x7a]
  41b293:	test   al,0x94
  41b295:	les    edx,FWORD PTR [edx+0x59]
  41b298:	mov    ebp,0xd54d870c
  41b29d:	push   ss
  41b29e:	pop    ebx
  41b29f:	pop    es
  41b2a0:	dec    esi
  41b2a1:	daa    
  41b2a2:	fstp   DWORD PTR [ebp+esi*1-0x6a7d0ff8]
  41b2a9:	push   ebp
  41b2aa:	sti    
  41b2ab:	imul   ecx,ebp,0xe8e0462f
  41b2b1:	repnz add BYTE PTR [eax],al
  41b2b4:	xor    ebx,DWORD PTR [edi+eax*2-0x10]
  41b2b8:	pop    esi
  41b2b9:	sub    eax,0xc04a0ce0
  41b2be:	add    dh,al
  41b2c0:	dec    eax
  41b2c1:	es cld 
  41b2c3:	(bad)  
  41b2c4:	pop    ecx
  41b2c5:	mov    dl,0x77
  41b2c7:	add    edi,DWORD PTR [ebp+0x71]
  41b2ca:	dec    ebp
  41b2cb:	std    
  41b2cc:	bound  ebp,QWORD PTR [ecx+0x41]
  41b2cf:	or     BYTE PTR [eax-0x4e],dl
  41b2d2:	jbe    0x41b2dc
  41b2d4:	add    BYTE PTR [eax],al
  41b2d6:	pop    esi
  41b2d7:	sub    eax,0xf1b1e6f8
  41b2dc:	add    BYTE PTR [eax],al
  41b2de:	dec    esi
  41b2df:	jp     0x41b359
  41b2e1:	inc    edx
  41b2e2:	xor    eax,0xd456f88a
  41b2e7:	bnd jns 0x41b32c
  41b2ea:	and    eax,0x8508395b
  41b2ef:	push   edi
  41b2f0:	ja     0x41b2ca
  41b2f2:	(bad)  
  41b2f3:	adc    BYTE PTR [edx-0x79],0x86
  41b2f7:	(bad)  
  41b2f8:	fadd   st,st(1)
  41b2fa:	stos   BYTE PTR es:[edi],al
  41b2fb:	aas    
  41b2fc:	in     eax,dx
  41b2fd:	(bad)  
  41b2fe:	xchg   edi,eax
  41b2ff:	out    0x79,al
  41b301:	dec    edx
  41b302:	and    DWORD PTR [edx+0x2b],esi
  41b305:	sub    eax,0x73fcb35e
  41b30a:	fistp  WORD PTR [ebx+0x51]
  41b30d:	or     BYTE PTR [ebx],bl
  41b30f:	out    dx,al
  41b310:	adc    BYTE PTR ds:0x88fcb2da,ch
  41b316:	sbb    BYTE PTR [edx],cl
  41b318:	adc    edx,DWORD PTR [edx+ebx*1-0x6d]
  41b31c:	mov    cl,0xff
  41b31e:	aad    0x52
  41b320:	fist   WORD PTR [ebp+ebp*4-0x7f]
  41b324:	lods   eax,DWORD PTR ds:[esi]
  41b325:	out    dx,al
  41b326:	mov    cl,0x9
  41b328:	stos   BYTE PTR es:[edi],al
  41b329:	call   FWORD PTR [ebp+0x4b]
  41b32c:	jmp    0x41b3a8
  41b32e:	or     eax,0x93198112
  41b333:	push   es
  41b334:	fild   WORD PTR [ebx]
  41b336:	pop    esi
  41b337:	pop    ebp
  41b338:	mov    bh,0x4b
  41b33a:	add    BYTE PTR [eax],al
  41b33c:	jge    0x41b2d3
  41b33e:	ds add eax,0xec2b8cd5
  41b344:	or     dl,BYTE PTR [ebx+0x557053a5]
  41b34a:	xlat   BYTE PTR ds:[ebx]
  41b34b:	out    dx,al
  41b34c:	out    0xd,eax
  41b34e:	iret   
  41b34f:	or     eax,0x88e70a3d
  41b354:	sbb    dl,BYTE PTR [esi-0x2c]
  41b357:	jp     0x41b320
  41b359:	loope  0x41b3c6
  41b35b:	cmc    
  41b35c:	(bad)  
  41b35d:	getsec 
  41b35f:	jnp    0x41b379
  41b361:	repnz hlt 
  41b363:	inc    ecx
  41b364:	cmp    bh,bl
  41b366:	pop    edi
  41b367:	inc    edx
  41b368:	lds    edx,FWORD PTR [eax+0x455c17f9]
  41b36e:	stos   DWORD PTR es:[edi],eax
  41b36f:	jns    0x41b393
  41b371:	and    edx,DWORD PTR [edi]
  41b373:	jns    0x41b33e
  41b375:	mov    ch,bl
  41b377:	fcmovnbe st,st(6)
  41b379:	push   esp
  41b37a:	in     eax,dx
  41b37b:	lds    edx,FWORD PTR [ebp-0x172517ff]
  41b381:	sbb    eax,0x3a57feae
  41b386:	dec    esi
  41b387:	out    dx,al
  41b388:	icebp  
  41b389:	mov    al,bl
  41b38b:	fcmovnbe st,st(5)
  41b38d:	push   cs
  41b38e:	fs inc ebp
  41b390:	loopne 0x41b370
  41b392:	push   DWORD PTR ds:0xe9184a10
  41b398:	sub    al,0x32
  41b39a:	mov    esp,DWORD PTR [edx+esi*2+0xb5e836]
  41b3a1:	add    BYTE PTR [esi],cl
  41b3a3:	(bad)  
  41b3a5:	fs or  eax,0x9b624fe2
  41b3ab:	dec    esi
  41b3ac:	std    
  41b3ad:	jl     0x41b375
  41b3af:	fdiv   QWORD PTR [edx-0x13]
  41b3b2:	jle    0x41b357
  41b3b4:	xchg   esp,eax
  41b3b5:	jmp    0x76013e90
  41b3ba:	in     eax,dx
  41b3bb:	nop
  41b3bc:	jb     0x41b39f
  41b3be:	push   edx
  41b3bf:	aam    0x73
  41b3c1:	out    dx,eax
  41b3c2:	es xchg ecx,eax
  41b3c4:	(bad)
  41b3c7:	pop    ds
  41b3c8:	std    
  41b3c9:	into   
  41b3ca:	out    dx,al
  41b3cb:	dec    ecx
  41b3cc:	sbb    al,0x70
  41b3ce:	in     al,0x29
  41b3d0:	mov    DWORD PTR [ebp*2+0x56b64793],esp
  41b3d7:	xlat   BYTE PTR ds:[ebx]
  41b3d8:	cld    
  41b3d9:	scas   al,BYTE PTR es:[edi]
  41b3da:	push   eax
  41b3db:	fidiv  WORD PTR [ebp-0x10]
  41b3de:	int    0x53
  41b3e0:	enter  0xfc70,0x25
  41b3e4:	xchg   DWORD PTR [edx],ebp
  41b3e6:	fnstenv [ebx+0x29]
  41b3e9:	pop    esp
  41b3ea:	ret    0x57a5
  41b3ed:	xchg   ecx,eax
  41b3ee:	rol    BYTE PTR [ecx-0x1],1
  41b3f1:	call   0x1a39ff99
  41b3f6:	pushf  
  41b3f7:	lds    ecx,FWORD PTR [edi+0x6e]
  41b3fa:	mov    bh,cl
  41b3fc:	cld    
  41b3fd:	fmul   QWORD PTR [edx]
  41b3ff:	out    0x6f,al
  41b401:	jbe    0x41b3dc
  41b403:	or     DWORD PTR [ecx+0x52000059],ecx
  41b409:	aam    0x73
  41b40b:	add    DWORD PTR [ebx+eiz*2-0x8],edx
  41b40f:	add    ah,bh
  41b411:	push   ebx
  41b412:	and    cl,BYTE PTR [ebp-0x72afe5d1]
  41b418:	das    
  41b419:	dec    BYTE PTR [edi-0x1]
  41b41c:	mov    ecx,esi
  41b41e:	xchg   esi,eax
  41b420:	in     al,0x88
  41b422:	xchg   esi,eax
  41b423:	add    BYTE PTR [ebp+eax*4+0x62b075bc],ch
  41b42a:	inc    edx
  41b42b:	clc    
  41b42c:	push   0xffffffc1
  41b42e:	push   esp
  41b42f:	inc    ecx
  41b430:	shr    esi,cl
  41b432:	test   DWORD PTR [ebx+0x68],eax
  41b435:	rcr    DWORD PTR [ebx+0x23],0xa3
  41b439:	out    dx,al
  41b43a:	test   DWORD PTR [ebx+0x3c],eax
  41b43d:	bound  eax,QWORD PTR [edx+0x8]
  41b440:	add    eax,0xbe9044a
  41b445:	out    dx,eax
  41b446:	sti    
  41b447:	(bad)  
  41b448:	out    dx,eax
  41b449:	mov    al,ds:0xa0c25ffb
  41b44e:	mov    esi,0x87347c0c
  41b453:	in     al,dx
  41b454:	out    dx,eax
  41b455:	mov    esp,0xd0f75320
  41b45a:	xchg   DWORD PTR [ebp+0x2c],eax
  41b45d:	or     bh,BYTE PTR [edi-0x1b1d17aa]
  41b463:	repnz add edi,ebp
  41b466:	sti    
  41b467:	mov    ebx,DWORD PTR [esp+eax*4-0xe]
  41b46b:	jne    0x41b46d
  41b46d:	add    BYTE PTR [ebx],bh
  41b46f:	sbb    al,al
  41b471:	jmp    0x41bcf6
  41b476:	retf   
  41b477:	aas    
  41b478:	and    ecx,DWORD PTR [ebp-0x17ab32df]
  41b47e:	add    BYTE PTR [esi],dh
  41b480:	std    
  41b481:	inc    DWORD PTR [ecx-0x78af03bd]
  41b487:	lds    ecx,FWORD PTR [ebx+edx*2-0x2b]
  41b48b:	xor    esi,DWORD PTR [esi+0x8]
  41b48e:	std    
  41b48f:	inc    ebx
  41b490:	xchg   ebx,eax
  41b491:	(bad)  
  41b492:	jmp    0x7533:0x58f84659
  41b499:	arpl   WORD PTR [edi-0x18],bp
  41b49c:	jge    0x41b4e0
  41b49e:	rol    DWORD PTR [edx+0x23e572eb],0x16
  41b4a5:	sub    al,0xeb
  41b4a7:	mov    dl,0x0
  41b4a9:	adc    DWORD PTR [ecx-0x3ebd821a],0x9112eba2
  41b4b3:	rol    BYTE PTR [eax+0x0],0x4e
  41b4b7:	jne    0x41b4a1
  41b4b9:	sub    BYTE PTR [eax],al
  41b4bb:	jmp    0x41b50b
  41b4bd:	std    
  41b4be:	or     bl,ch
  41b4c0:	push   edx
  41b4c1:	call   0xfd2af996
  41b4c6:	and    eax,0x24ec376e
  41b4cb:	data16 clc 
  41b4cd:	xor    DWORD PTR [ebx+ecx*8],eax
  41b4d0:	lock pop edx
  41b4d2:	add    BYTE PTR [eax],al
  41b4d4:	push   0xffffffc3
  41b4d6:	jbe    0x41b513
  41b4d8:	xlat   BYTE PTR ds:[ebx]
  41b4d9:	push   edi
  41b4da:	aas    
  41b4db:	cld    
  41b4dc:	scas   al,BYTE PTR es:[edi]
  41b4dd:	js     0x41b4fb
  41b4df:	fcom   st(6)
  41b4e1:	and    eax,0x55a550ec
  41b4e6:	add    BYTE PTR [esi],bh
  41b4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4e9:	jp     0x41b4b3
  41b4eb:	pop    edx
  41b4ec:	cmp    dh,BYTE PTR [ebx+0x76]
  41b4ef:	inc    edx
  41b4f0:	xor    DWORD PTR [edx],esp
  41b4f2:	pop    esi
  41b4f3:	add    esi,edx
  41b4f5:	xchg   DWORD PTR [eax+0x56],edx
  41b4f8:	sub    eax,0x1aff8edb
  41b4fd:	ins    DWORD PTR es:[edi],dx
  41b4fe:	les    esi,FWORD PTR [edx-0x21]
  41b501:	hlt    
  41b502:	fisttp DWORD PTR [ecx-0x1499f658]
  41b508:	(bad)
  41b50b:	or     eax,0xeaf755f8
  41b510:	addr16 or eax,0x3e20dbb7
  41b516:	inc    esi
  41b517:	jmp    0x41b566
  41b519:	inc    esi
  41b51a:	sar    DWORD PTR [edx+ebp*4-0x70],cl
  41b51e:	sub    eax,0xe9de161f
  41b523:	inc    eax
  41b524:	in     eax,0x3a
  41b526:	lds    ecx,FWORD PTR [esi-0x66]
  41b529:	enter  0x3f6,0x26
  41b52d:	pop    DWORD PTR [edx]
  41b52f:	xchg   DWORD PTR [esi+0x51616a5e],edi
  41b535:	or     dh,BYTE PTR [ecx+eax*2+0x0]
  41b539:	add    BYTE PTR [ecx+0x3a],bl
  41b53c:	(bad)  
  41b53d:	jo     0x41b50c
  41b53f:	fcmovu st,st(3)
  41b541:	retf   
  41b542:	popf   
  41b543:	inc    edi
  41b544:	out    0x4c,eax
  41b546:	and    al,BYTE PTR [ebp+0x49db70a6]
  41b54c:	and    BYTE PTR [ecx+0x49],al
  41b54f:	push   esi
  41b550:	jmp    0xa9134a8b
  41b555:	jmp    FWORD PTR [edx+0x34]
  41b558:	(bad)  
  41b559:	outs   dx,DWORD PTR ds:[esi]
  41b55a:	mov    ecx,0x8910be11
  41b55f:	iret   
  41b560:	sub    DWORD PTR [esp+ebx*2],eax
  41b563:	loop   0x41b574
  41b565:	or     DWORD PTR [ecx+0x56],0xadff83d4
  41b56c:	mov    cl,0x46
  41b56e:	aad    0x9
  41b570:	sbb    esp,DWORD PTR [eax]
  41b572:	cmp    eax,0xd5036438
  41b577:	test   DWORD PTR [esi+0x3d33bc6f],esp
  41b57d:	scas   eax,DWORD PTR es:[edi]
  41b57e:	or     eax,0xa4e90047
  41b583:	fcom   QWORD PTR [edx]
  41b585:	xchg   ecx,eax
  41b586:	loopne 0x41b5d1
  41b588:	add    BYTE PTR [esi+0x5ef33e1e],bh
  41b58e:	out    dx,eax
  41b58f:	xor    al,0xfd
  41b591:	cld    
  41b592:	sbb    bh,cl
  41b594:	aas    
  41b595:	jmp    0xa7064636
  41b59a:	sbb    edi,DWORD PTR [edx]
  41b59c:	push   esi
  41b59d:	jb     0x41b59f
  41b59f:	add    BYTE PTR [edx+0x25],ch
  41b5a2:	or     al,0x9f
  41b5a4:	mov    edi,0x13229ff7
  41b5a9:	or     cl,BYTE PTR [ecx-0x2778eebf]
  41b5af:	xchg   esp,eax
  41b5b0:	jmp    0xe5dfab3b
  41b5b5:	and    DWORD PTR [ebx],eax
  41b5b7:	cmp    eax,0x7d00496b
  41b5bc:	mov    ebp,0xd66409f1
  41b5c1:	or     DWORD PTR [ecx+ebp*1+0x2e552602],eax
  41b5c8:	cmp    dl,cl
  41b5ca:	inc    eax
  41b5cb:	jmp    0xc15492f5
  41b5d0:	jecxz  0x41b61b
  41b5d2:	add    cl,al
  41b5d4:	mov    esi,ss
  41b5d6:	cld    
  41b5d7:	into   
  41b5d8:	push   eax
  41b5d9:	sar    ah,cl
  41b5db:	cmp    eax,0xb782e262
  41b5e0:	ins    BYTE PTR es:[edi],dx
  41b5e1:	fst    QWORD PTR [esi+esi*4-0x1e]
  41b5e5:	mov    ebp,0x3cd12911
  41b5ea:	pop    esi
  41b5eb:	jb     0x41b605
  41b5ed:	inc    ecx
  41b5ee:	shl    DWORD PTR [esi],0xb8
  41b5f1:	push   edx
  41b5f2:	je     0x41b5b6
  41b5f4:	mov    esi,0xf9d17461
  41b5f9:	pop    ebp
  41b5fa:	and    al,0x0
  41b5fc:	sub    BYTE PTR [ebp+0x45],bl
  41b5ff:	jo     0x41b62c
  41b601:	adc    edi,DWORD PTR [esp+0x0]
  41b605:	add    al,bh
  41b607:	add    al,0x48
  41b609:	js     0x41b5ee
  41b60b:	ss sti 
  41b60d:	je     0x41b5df
  41b60f:	cmc    
  41b610:	out    0xc1,eax
  41b612:	cmp    cl,dh
  41b614:	sti    
  41b615:	add    DWORD PTR [esi+ebp*2],eax
  41b618:	xchg   DWORD PTR [eax+0x4],ecx
  41b61b:	sub    eax,0x8217448
  41b620:	cmp    BYTE PTR [eax+0x19],0x6
  41b624:	je     0x41b633
  41b626:	xchg   esp,eax
  41b627:	test   eax,0xe2bc43c7
  41b62c:	adc    esp,ebx
  41b62e:	mov    esi,0xb4eb004d
  41b633:	lea    esi,[esp+edi*2-0x44]
  41b637:	cmp    esi,DWORD PTR [ebx+edx*1+0x37]
  41b63b:	push   ds
  41b63c:	call   0xfc2456ca
  41b641:	adc    esp,0xffffffe2
  41b644:	jo     0x41b65f
  41b646:	aam    0x2
  41b648:	idiv   bh
  41b64a:	jnp    0x41b602
  41b64c:	push   cs
  41b64d:	lea    ebx,[esi+ebx*2]
  41b650:	sti    
  41b651:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41b653:	dec    esi
  41b654:	pop    esp
  41b655:	dec    DWORD PTR [ebx-0x6ba9efc9]
  41b65b:	sbb    eax,0x359bff59
  41b660:	mov    ah,0xcb
  41b662:	scas   eax,DWORD PTR es:[edi]
  41b663:	or     eax,0xff6815fb
  41b668:	aas    
  41b669:	add    BYTE PTR [eax],al
  41b66b:	add    dl,bl
  41b66d:	push   esi
  41b66e:	les    ebx,FWORD PTR [edi+0x6e]
  41b671:	aad    0xfc
  41b673:	mov    ch,BYTE PTR ds:0xd574bd58
  41b679:	fstp   TBYTE PTR [eax]
  41b67b:	mov    DWORD PTR [ecx-0x36760332],eax
  41b681:	mov    dl,0x80
  41b683:	stc    
  41b684:	enter  0xfdde,0x7f
  41b688:	paddsw mm5,QWORD PTR [ebp+0x7]
  41b68c:	or     ch,dl
  41b68e:	jnp    0x41b65f
  41b690:	lea    esp,[ebp-0x2d]
  41b693:	jb     0x41b688
  41b695:	and    al,0xfd
  41b697:	dec    DWORD PTR [ecx-0xe7f2a95]
  41b69d:	cmp    al,BYTE PTR [edx+0xe349eb]
  41b6a3:	add    BYTE PTR [esi-0x228d8480],al
  41b6a9:	imul   edi,DWORD PTR [edi],0x8
  41b6ac:	and    dh,BYTE PTR [ebx+0x79]
  41b6af:	inc    ebx
  41b6b0:	stc    
  41b6b1:	push   cs
  41b6b2:	out    0x12,eax
  41b6b4:	xchg   ecx,eax
  41b6b5:	aam    0x40
  41b6b7:	add    BYTE PTR [esi+eiz*4+0x1c],bl
  41b6bb:	sbb    al,0x5e
  41b6bd:	mov    al,0x20
  41b6bf:	xchg   DWORD PTR [ecx],ebx
  41b6c1:	(bad)  
  41b6c2:	sbb    BYTE PTR [ecx+0x285acf13],cl
  41b6c8:	pop    esp
  41b6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ca:	sbb    al,0x30
  41b6cc:	pop    eax
  41b6cd:	sbb    ax,0x50
  41b6d1:	add    BYTE PTR ds:0xd4532cbb,bl
  41b6d7:	loop   0x41b750
  41b6d9:	inc    ebx
  41b6da:	mov    ecx,0x92895406
  41b6df:	xor    eax,0xd0051846
  41b6e4:	xor    BYTE PTR [ecx+0x35e5be93],al
  41b6ea:	pop    esp
  41b6eb:	(bad)  
  41b6ec:	pop    ds
  41b6ed:	and    BYTE PTR [esi+ebx*1+0x20],bl
  41b6f1:	and    al,0x2d
  41b6f3:	or     DWORD PTR [edx-0x70],edi
  41b6f6:	cmp    bl,al
  41b6f8:	imul   ebp,DWORD PTR [eax-0x7],0x967ce721
  41b6ff:	sub    eax,0x1977ac7
  41b704:	jb     0x41b742
  41b706:	leave  
  41b707:	test   BYTE PTR [esi],ah
  41b709:	adc    al,0x5a
  41b70b:	inc    ebp
  41b70c:	retf   
  41b70d:	xor    edx,DWORD PTR [edx+0x4d]
  41b710:	ret    
  41b711:	das    
  41b712:	ror    BYTE PTR [ebp+0x9d504b7],1
  41b718:	ins    BYTE PTR es:[edi],dx
  41b719:	inc    eax
  41b71a:	mov    ecx,0xe3dbb6f1
  41b71f:	in     eax,0x4d
  41b721:	out    0x56,eax
  41b723:	leave  
  41b724:	cmc    
  41b725:	jg     0x41b6c0
  41b727:	or     ah,bh
  41b729:	add    edi,DWORD PTR [edi]
  41b72b:	sub    eax,0x15f16864
  41b730:	(bad)  
  41b731:	fistp  DWORD PTR [esi+edi*1+0x3e8]
  41b738:	dec    esp
  41b739:	iret   
  41b73a:	mov    dh,0xe6
  41b73c:	in     eax,0xd6
  41b73e:	(bad)  
  41b740:	cmp    eax,0xa003e67d
  41b745:	and    BYTE PTR [edx-0x45],dh
  41b748:	push   ebx
  41b749:	or     ecx,DWORD PTR [edi]
  41b74b:	sbb    dl,BYTE PTR [eax-0x20a60a29]
  41b751:	test   BYTE PTR [edx-0x19c606e1],ah
  41b757:	outs   dx,DWORD PTR ds:[esi]
  41b758:	mov    cl,0x1d
  41b75a:	ficom  WORD PTR [eax]
  41b75c:	sar    edi,0x26
  41b75f:	add    al,0x54
  41b761:	into   
  41b762:	ficomp DWORD PTR [ecx-0x48]
  41b765:	test   BYTE PTR [edx+0x20],al
  41b768:	cdq    
  41b769:	xor    edi,ecx
  41b76b:	mov    ds:0xe90008a6,al
  41b770:	int    0x4a
  41b772:	and    al,0xd
  41b774:	test   eax,0x3239c480
  41b779:	sbb    bh,ch
  41b77b:	xlat   BYTE PTR ds:[ebx]
  41b77c:	push   cs
  41b77d:	add    al,0x94
  41b77f:	jmp    0x1601425a
  41b784:	out    dx,eax
  41b785:	add    BYTE PTR [ebx-0x33],0xb6
  41b789:	cmp    ebp,edi
  41b78b:	aam    0x52
  41b78d:	stc    
  41b78e:	aas    
  41b78f:	jmp    0xe2428623
  41b794:	push   ds
  41b795:	dec    edi
  41b796:	pop    edx
  41b797:	data16 repz mov bh,BYTE PTR [edi+0x720000ee]
  41b79f:	sar    edi,0xe8
  41b7a2:	(bad)  
  41b7a3:	add    BYTE PTR [ebx+0x5],0x79
  41b7a7:	cmp    DWORD PTR [ecx+0x30d4862e],ecx
  41b7ad:	ds add dl,ah
  41b7b0:	pushf  
  41b7b1:	pop    esp
  41b7b2:	(bad)  
  41b7b3:	or     ebp,edi
  41b7b5:	idiv   DWORD PTR [edi]
  41b7b7:	ret    0xea86
  41b7ba:	sahf   
  41b7bb:	xchg   ebx,eax
  41b7bc:	std    
  41b7bd:	push   ds
  41b7be:	mov    ebx,0xe58348e1
  41b7c3:	cmp    BYTE PTR [ebx-0x3b],0x6
  41b7c7:	xor    ch,al
  41b7c9:	mov    cl,0xa
  41b7cb:	xlat   BYTE PTR ds:[ebx]
  41b7cc:	cld    
  41b7cd:	ins    BYTE PTR es:[edi],dx
  41b7ce:	shr    BYTE PTR ds:0x4b0d9960,cl
  41b7d4:	and    al,0xad
  41b7d6:	es add esp,0x5d261f39
  41b7dd:	ins    BYTE PTR es:[edi],dx
  41b7de:	and    eax,0xd6e9802a
  41b7e3:	or     eax,ebp
  41b7e5:	pop    esp
  41b7e6:	mov    ds:0xef00fcd4,al
  41b7eb:	leave  
  41b7ec:	or     BYTE PTR [ebp-0x7481a684],al
  41b7f2:	add    BYTE PTR [edx],ch
  41b7f4:	adc    BYTE PTR [ebx-0x742aaf9e],cl
  41b7fa:	call   0x4492cc28
  41b7ff:	and    dl,BYTE PTR [edi-0x1]
  41b802:	add    BYTE PTR [eax],al
  41b804:	inc    ebx
  41b805:	push   esi
  41b806:	mov    ebp,0x7150d474
  41b80b:	and    al,0xf8
  41b80d:	push   eax
  41b80e:	fmul   QWORD PTR [ebx+0x247950ff]
  41b814:	adc    BYTE PTR [edi+0x49],bl
  41b817:	cmp    al,bh
  41b819:	mov    cl,0xc4
  41b81b:	pop    ecx
  41b81c:	jae    0x41b80a
  41b81e:	add    al,0x8
  41b821:	sbb    eax,0xd3ff0387
  41b826:	data16 add al,0x14
  41b829:	jb     0x41b89e
  41b82b:	inc    eax
  41b82c:	in     al,dx
  41b82d:	cmp    eax,ebp
  41b82f:	mov    cl,0x76
  41b831:	out    dx,al
  41b832:	sti    
  41b833:	mov    esi,DWORD PTR [edx-0x50fc0076]
  41b839:	rcl    BYTE PTR [ebx-0x1],cl
  41b83c:	pop    eax
  41b83d:	cmc    
  41b83e:	sub    edx,DWORD PTR [ecx-0x3c]
  41b841:	mov    ss,WORD PTR [esi-0x1]
  41b844:	ret    
  41b845:	or     BYTE PTR [edi],dh
  41b847:	mov    edx,DWORD PTR [ecx-0x2f]
  41b84a:	sti    
  41b84b:	ja     0x41b7d1
  41b84d:	mov    cl,0x52
  41b84f:	pop    edx
  41b850:	xchg   ebx,eax
  41b851:	out    dx,al
  41b852:	xchg   DWORD PTR [esi],eax
  41b854:	and    DWORD PTR [ebp+0x24],0x28
  41b858:	cmc    
  41b859:	push   ss
  41b85a:	sub    BYTE PTR [ebx+0x2c44506f],cl
  41b860:	test   BYTE PTR [edx+0x5a],cl
  41b863:	call   ebp
  41b865:	mov    ebx,0x1456
  41b86a:	or     ecx,ebx
  41b86c:	xor    BYTE PTR [ecx+0x5a],bl
  41b86f:	int3   
  41b870:	mov    al,0xfe
  41b872:	aas    
  41b873:	loope  0x41b8a3
  41b875:	shr    BYTE PTR [edx+0x388946fc],0x6
  41b87c:	ret    0xd503
  41b87f:	adc    eax,0x8756eb77
  41b884:	pop    esp
  41b885:	push   ecx
  41b886:	and    DWORD PTR [edi+0x6e],0xc
  41b88a:	push   ebp
  41b88b:	add    eax,0xdb83fff8
  41b890:	jge    0x41b882
  41b892:	aad    0xe2
  41b894:	add    BYTE PTR [ecx+0x627fea83],cl
  41b89a:	add    ebx,esp
  41b89c:	jne    0x41b8e0
  41b89e:	stc    
  41b89f:	xchg   edx,eax
  41b8a0:	push   esi
  41b8a1:	push   ss
  41b8a2:	mov    edi,DWORD PTR [edx]
  41b8a4:	sbb    BYTE PTR ds:0xd7783bea,dl
  41b8aa:	dec    esp
  41b8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ac:	call   0xfbd7b733
  41b8b1:	xor    DWORD PTR [ebp-0x350170c7],edx
  41b8b7:	loop   0x41b90f
  41b8b9:	and    eax,0x57cca550
  41b8be:	lods   eax,DWORD PTR ds:[esi]
  41b8bf:	retf   0xff4f
  41b8c2:	mov    dl,0x78
  41b8c4:	sbb    eax,0x4923288b
  41b8c9:	call   0x4348de
  41b8ce:	add    BYTE PTR [eax],al
  41b8d0:	dec    eax
  41b8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8d2:	int3   
  41b8d3:	dec    edi
  41b8d4:	xchg   edx,eax
  41b8d5:	pop    ebp
  41b8d6:	in     eax,0x50
  41b8d8:	jge    0x41b8d7
  41b8da:	(bad)  
  41b8db:	inc    DWORD PTR [edx+0x254eb467]
  41b8e1:	or     bh,BYTE PTR [edx]
  41b8e3:	in     al,dx
  41b8e4:	test   DWORD PTR [eax-0x1a],edi
  41b8e7:	add    eax,DWORD PTR [edi+eax*4]
  41b8ea:	and    esp,eax
  41b8ec:	pop    ebx
  41b8ed:	dec    esi
  41b8ee:	retf   
  41b8ef:	in     al,dx
  41b8f0:	dec    ebx
  41b8f1:	(bad)  
  41b8f2:	(bad)
  41b8f5:	adc    bh,ah
  41b8f7:	pop    eax
  41b8f8:	fnstsw WORD PTR [eax]
  41b8fa:	mov    edi,0xadd4abb3
  41b8ff:	out    dx,eax
  41b900:	test   DWORD PTR [edi-0x24],ebx
  41b903:	nop
  41b904:	scas   eax,DWORD PTR es:[edi]
  41b905:	in     eax,dx
  41b906:	ds in  al,dx
  41b908:	les    edi,FWORD PTR [eax]
  41b90a:	call   0x5c6d6812
  41b90f:	popa   
  41b910:	and    eax,0xa40b8f31
  41b915:	or     ah,bh
  41b917:	mov    ss,WORD PTR [ecx]
  41b919:	cmp    DWORD PTR [ecx+ecx*2+0x15],esp
  41b91d:	cmp    DWORD PTR [ecx+ecx*2-0xf],ebx
  41b921:	cmp    cl,dl
  41b923:	es nop
  41b925:	xchg   bl,dl
  41b927:	jg     0x41b91b
  41b929:	ss stos DWORD PTR es:[edi],eax
  41b92b:	loop   0x41b90e
  41b92d:	xchg   DWORD PTR [edx],esp
  41b92f:	adc    BYTE PTR [esi-0x37],dl
  41b932:	mov    edx,0x5d0000c8
  41b937:	les    esi,FWORD PTR [ecx-0x44]
  41b93a:	sbb    eax,DWORD PTR [ebp+0x4d4fdfb3]
  41b940:	das    
  41b941:	in     al,dx
  41b942:	mov    edx,0x57e32631
  41b947:	retf   0x1e92
  41b94a:	cmp    eax,0xd5439da2
  41b94f:	pop    edi
  41b950:	jecxz  0x41b990
  41b952:	dec    esi
  41b953:	dec    ebp
  41b954:	(bad)  
  41b955:	jmp    0x41b9d5
  41b957:	xor    esi,edi
  41b959:	loop   0x41b9b2
  41b95b:	retf   0x7cff
  41b95e:	scas   eax,DWORD PTR es:[edi]
  41b95f:	add    BYTE PTR [edx-0x1f],0x4b
  41b963:	inc    eax
  41b964:	clc    
  41b965:	jb     0x41b914
  41b967:	aad    0x30
  41b969:	ret    0xef5e
  41b96c:	push   cs
  41b96d:	pusha  
  41b96e:	push   cs
  41b96f:	pop    edx
  41b970:	xchg   DWORD PTR [ecx],edi
  41b972:	std    
  41b973:	mov    dl,BYTE PTR [edi+0x41]
  41b976:	mov    edi,0x5a3d578a
  41b97b:	dec    eax
  41b97c:	or     al,0xaf
  41b97e:	xchg   esi,eax
  41b97f:	add    eax,0xd30ebfff
  41b984:	cld    
  41b985:	jmp    0x9139e9ed
  41b98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b98b:	aam    0xfc
  41b98d:	xchg   esi,eax
  41b98e:	scas   al,BYTE PTR es:[edi]
  41b98f:	add    DWORD PTR [eax],edx
  41b991:	jmp    0x22389b6c
  41b996:	not    ch
  41b998:	mov    BYTE PTR [ecx-0x4da30000],ah
  41b99e:	or     al,0x6d
  41b9a0:	std    
  41b9a1:	aad    0xfc
  41b9a3:	outs   dx,BYTE PTR ds:[esi]
  41b9a4:	gs inc eax
  41b9a6:	or     al,0xb8
  41b9a8:	jle    0x41b9b3
  41b9aa:	adc    cl,ch
  41b9ac:	(bad)  
  41b9ad:	jle    0x41b9ef
  41b9af:	out    dx,eax
  41b9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b1:	aam    0x75
  41b9b3:	loope  0x41b9ac
  41b9b5:	idiv   DWORD PTR [ebx-0x24]
  41b9b8:	push   ss
  41b9b9:	or     al,BYTE PTR [ecx-0x7cfb2ebf]
  41b9bf:	repnz mov bh,0xd5
  41b9c2:	cld    
  41b9c3:	push   0x35
  41b9c5:	push   es
  41b9c6:	add    BYTE PTR [edi+edx*8-0x193efca1],bl
  41b9cd:	popa   
  41b9ce:	mov    al,0x9e
  41b9d0:	push   ss
  41b9d1:	or     dl,BYTE PTR [ecx+0x1]
  41b9d4:	lahf   
  41b9d5:	cmp    edi,ebp
  41b9d7:	add    bl,bl
  41b9d9:	test   DWORD PTR [ecx+0xc],eax
  41b9dc:	in     al,0x1b
  41b9de:	repnz dec DWORD PTR [ebx+0x6b084184]
  41b9e5:	inc    edi
  41b9e6:	add    al,0xeb
  41b9e8:	mov    cl,0xe8
  41b9ea:	jno    0x41b9f8
  41b9ec:	out    0xbc,eax
  41b9ee:	fs mov eax,0x6a004e03
  41b9f4:	jno    0x41ba3f
  41b9f6:	call   0xfc2ab985
  41b9fb:	pop    ecx
  41b9fc:	cmc    
  41b9fd:	mov    esp,?
  41b9ff:	inc    DWORD PTR [eax]
  41ba01:	add    BYTE PTR [ebx],bh
  41ba03:	mov    dh,ch
  41ba05:	(bad)  
  41ba06:	imul   ebp,eax,0x62
  41ba09:	mov    DWORD PTR [eax-0x32],0xcdbf0a09
  41ba10:	inc    BYTE PTR [edx+0x1073ff44]
  41ba16:	dec    ebx
  41ba17:	cmp    cl,BYTE PTR [ecx*4-0x72b30039]
  41ba1e:	clc    
  41ba1f:	int    0x4d
  41ba21:	call   0x3ccf5e
  41ba26:	in     eax,dx
  41ba27:	dec    edx
  41ba28:	or     al,0x8b
  41ba2a:	inc    ecx
  41ba2b:	add    al,dh
  41ba2d:	add    al,0xd4
  41ba2f:	add    bh,bl
  41ba31:	inc    ebp
  41ba32:	clc    
  41ba33:	test   BYTE PTR [ecx+0xc],al
  41ba36:	mov    dl,0x1
  41ba38:	sbb    BYTE PTR [edx],cl
  41ba3a:	sbb    ecx,DWORD PTR [ecx+0xc]
  41ba3d:	mov    esi,DWORD PTR [ecx+0x5]
  41ba40:	xchg   DWORD PTR [ebp-0x48],ecx
  41ba43:	xchg   BYTE PTR [eax+edi*2-0x54],bl
  41ba47:	test   BYTE PTR [eax+esi*2+0x25],dl
  41ba4b:	ds je  0x41bab4
  41ba4e:	repz inc ebp
  41ba50:	jl     0x41ba52
  41ba52:	aad    0xe2
  41ba54:	nop
  41ba55:	(bad)  
  41ba56:	sti    
  41ba57:	mov    al,ds:0xdb97c73b
  41ba5c:	add    BYTE PTR [ecx-0x2c818eb],cl
  41ba62:	or     DWORD PTR [edi+0x8b08],edi
  41ba68:	std    
  41ba69:	mov    edx,0xbac9bf83
  41ba6e:	mov    ebp,0xd7b06a57
  41ba73:	xlat   BYTE PTR ds:[ebx]
  41ba74:	mov    esi,0xfad7d7a2
  41ba79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba7a:	add    al,0x0
  41ba7c:	test   al,0x5b
  41ba7e:	in     eax,dx
  41ba7f:	cmp    BYTE PTR [ecx],0xd7
  41ba82:	xor    edx,DWORD PTR [esi+0x4e]
  41ba85:	xchg   edx,eax
  41ba86:	mov    eax,DWORD PTR [ebp-0x23]
  41ba89:	imul   ecx,DWORD PTR [ecx+0x4],0xffffff8a
  41ba8d:	pop    ecx
  41ba8e:	ss clc 
  41ba90:	pop    esp
  41ba91:	es loopne 0x41ba16
  41ba94:	or     al,0xe8
  41ba96:	test   BYTE PTR [edi-0x2b],bh
  41ba99:	loop   0x41ba9b
  41ba9b:	or     DWORD PTR [esi+ebp*4-0x36a8d00],0x7e808b17
  41baa6:	cmp    al,ch
  41baa8:	js     0x41ba9b
  41baaa:	add    BYTE PTR [eax],al
  41baac:	loop   0x41bb1d
  41baae:	inc    esi
  41baaf:	adc    al,BYTE PTR [ebp-0x3aba6821]
  41bab5:	xchg   edx,eax
  41bab6:	mov    eax,esp
  41bab8:	test   esp,ecx
  41baba:	clc    
  41babb:	pop    esp
  41babc:	pusha  
  41babd:	(bad)  
  41babe:	int3   
  41babf:	out    0x93,eax
  41bac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac2:	(bad)  
  41bac4:	push   esi
  41bac5:	push   ds
  41bac6:	or     eax,0xf1969583
  41bacb:	mov    BYTE PTR [eax],al
  41bacd:	add    BYTE PTR [ebx+0x5dbb7209],ah
  41bad3:	inc    esi
  41bad4:	sbb    esi,DWORD PTR [edx]
  41bad6:	lods   eax,DWORD PTR ds:[esi]
  41bad7:	mov    BYTE PTR ds:0x268599e0,dl
  41badd:	push   esi
  41bade:	mov    ah,0x8c
  41bae0:	cs loopne 0x41bb60
  41bae3:	or     eax,0x121c0591
  41bae8:	nop
  41bae9:	inc    DWORD PTR [edi]
  41baeb:	repz popa 
  41baed:	ret    0x515f
  41baf0:	jmp    FWORD PTR [ebx+0x1]
  41baf3:	push   esi
  41baf4:	daa    
  41baf5:	add    al,0x54
  41baf7:	leave  
  41baf8:	cli    
  41baf9:	jmp    0x41bb01
  41bafb:	xor    cl,dh
  41bafd:	fist   WORD PTR [edi-0x37]
  41bb00:	sar    DWORD PTR [ebx-0x7444b9a3],1
  41bb06:	add    al,BYTE PTR [esi]
  41bb08:	mov    dh,0x59
  41bb0a:	cmp    eax,0x1b0c0b84
  41bb0f:	dec    ecx
  41bb10:	add    eax,DWORD PTR ds:0xec9b465c
  41bb16:	call   0x12c9:0x56df95d0
  41bb1d:	(bad)
  41bb20:	and    eax,0xa8c2ac3e
  41bb25:	or     ch,dl
  41bb27:	cmp    al,0x1c
  41bb29:	ss dec esp
  41bb2b:	pop    edx
  41bb2c:	iret   
  41bb2d:	mov    bl,BYTE PTR [eax+0xea7205]
  41bb33:	add    BYTE PTR [edi-0x37],dl
  41bb36:	rcr    BYTE PTR [ecx],cl
  41bb38:	push   ebp
  41bb39:	push   ecx
  41bb3a:	repz add al,0x6f
  41bb3d:	or     esi,DWORD PTR [edx+0x7436ec58]
  41bb43:	pop    esp
  41bb44:	in     eax,dx
  41bb45:	popa   
  41bb46:	jnp    0x41bb9f
  41bb48:	adc    eax,0x916a000a
  41bb4d:	sti    
  41bb4e:	out    0xeb,eax
  41bb50:	out    dx,al
  41bb51:	int3   
  41bb52:	cld    
  41bb53:	(bad)  
  41bb54:	pop    ebp
  41bb55:	(bad)  
  41bb56:	jb     0x41bb3c
  41bb58:	push   edi
  41bb59:	(bad)  
  41bb5a:	cld    
  41bb5b:	add    bl,BYTE PTR [ecx+0x5ee54582]
  41bb61:	aaa    
  41bb62:	sbb    al,0x72
  41bb64:	adc    eax,0x4f941026
  41bb69:	(bad)
  41bb6c:	cwde   
  41bb6d:	into   
  41bb6e:	cld    
  41bb6f:	gs cdq 
  41bb71:	pop    ebx
  41bb72:	jecxz  0x41bb8e
  41bb74:	xchg   ecx,eax
  41bb75:	sub    eax,0xb97425b
  41bb7a:	add    BYTE PTR [edx+0x11],ah
  41bb7d:	repnz adc BYTE PTR [ecx-0x23],0x9
  41bb82:	je     0x41bb8d
  41bb84:	pop    esi
  41bb85:	(bad)  
  41bb87:	sbb    cl,BYTE PTR [esi+0x33]
  41bb8a:	and    al,0xe1
  41bb8c:	add    eax,DWORD PTR [ebx-0x7718fa89]
  41bb92:	mov    edi,0x54933ec9
  41bb97:	sahf   
  41bb98:	add    BYTE PTR [eax],al
  41bb9a:	add    ebp,DWORD PTR [esi]
  41bb9c:	pop    ecx
  41bb9d:	ins    BYTE PTR es:[edi],dx
  41bb9e:	push   ss
  41bb9f:	pop    esp
  41bba0:	add    ebp,DWORD PTR [edx+0x1e]
  41bba3:	into   
  41bba4:	call   0xc20ba394
  41bba9:	in     eax,0xd6
  41bbab:	cld    
  41bbac:	mov    ah,0x18
  41bbae:	std    
  41bbaf:	cmp    DWORD PTR [esi],0xc78fa8d1
  41bbb5:	jmp    0x22a7c590
  41bbba:	sub    ebp,DWORD PTR ds:0xd157ec71
  41bbc0:	arpl   dx,bx
  41bbc2:	fld    QWORD PTR [eax+0x4913000f]
  41bbc8:	add    al,0x66
  41bbca:	inc    edi
  41bbcb:	push   ss
  41bbcc:	adc    al,0x6a
  41bbce:	lods   eax,DWORD PTR ds:[esi]
  41bbcf:	test   DWORD PTR fs:[eax-0x4c],edx
  41bbd3:	loop   0x41bbff
  41bbd5:	inc    ebp
  41bbd6:	mov    ebp,0xefc02f0a
  41bbdb:	adc    DWORD PTR [edi+0x10df2fec],eax
  41bbe1:	and    BYTE PTR [ecx+0x7c43c79e],0xa
  41bbe8:	dec    edi
  41bbe9:	push   esi
  41bbea:	imul   edi,edi,0xffffff83
  41bbed:	sub    BYTE PTR [edi+0xa],0x0
  41bbf1:	call   0x41eb73
  41bbf6:	clc    
  41bbf7:	lds    ecx,FWORD PTR [ebx]
  41bbf9:	test   BYTE PTR [ecx],cl
  41bbfb:	or     DWORD PTR [eax],eax
  41bbfd:	add    BYTE PTR [eax],al
  41bbff:	add    bh,ch
  41bc01:	cs or  al,0x0
  41bc04:	xor    eax,DWORD PTR [esi+0xa3c0367]
  41bc0a:	jg     0x41bc89
  41bc0c:	sbb    al,0xa
  41bc0e:	or     ecx,DWORD PTR [esi+0x88d]
  41bc14:	mov    bh,0x36
  41bc16:	or     BYTE PTR [esi+0x44],dl
  41bc19:	dec    edx
  41bc1a:	cmc    
  41bc1b:	inc    DWORD PTR [ebx-0x7f]
  41bc1e:	mov    esp,0xff15a80f
  41bc23:	(bad)  
  41bc24:	cld    
  41bc25:	cmp    BYTE PTR [ecx],0xd8
  41bc28:	cs dec edx
  41bc2a:	add    BYTE PTR [ebx+0x3fc0c8],bh
  41bc30:	fild   QWORD PTR [ebx+edx*8-0x4203f18]
  41bc37:	jmp    DWORD PTR [ebp+0x46]
  41bc3a:	cld    
  41bc3b:	xor    DWORD PTR [esp+ebp*4+0xb],0xffffff84
  41bc40:	aad    0xa
  41bc42:	(bad)  
  41bc43:	call   ebp
  41bc45:	leave  
  41bc46:	rol    BYTE PTR [edi+0x100e2d5],0xd8
  41bc4d:	repnz mov BYTE PTR [eax-0x2b],0x5f
  41bc52:	pop    esp
  41bc53:	je     0x41bc2a
  41bc55:	xchg   ebp,eax
  41bc56:	add    al,BYTE PTR [eax+0x7400a62d]
  41bc5c:	vandps xmm2,xmm2,XMMWORD PTR [eax]
  41bc60:	call   0x4800:0xe80c6e
  41bc67:	cli    
  41bc68:	(bad)  
  41bc6a:	jl     0x41bc54
  41bc6c:	(bad)  
  41bc6d:	call   ebp
  41bc6f:	push   edi
  41bc70:	mov    esp,0x3d6a8e88
  41bc75:	in     al,dx
  41bc76:	jge    0x41bcb0
  41bc78:	jmp    0x41bc76
  41bc7a:	push   0x5a
  41bc7c:	inc    esi
  41bc7d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc7f:	mov    ds:0xaf108762,al
  41bc84:	lea    eax,[edx+0x41]
  41bc87:	push   0x40
  41bc89:	push   eax
  41bc8a:	pop    esi
  41bc8b:	push   ds
  41bc8c:	aam    0x82
  41bc8e:	adc    eax,0xd5f5f717
  41bc93:	loope  0x41bce9
  41bc95:	push   ss
  41bc96:	test   DWORD PTR [ebx-0x58c213ab],ebx
  41bc9c:	xlat   BYTE PTR ds:[ebx]
  41bc9d:	cld    
  41bc9e:	and    ah,BYTE PTR [edi-0x3f]
  41bca1:	or     al,0x51
  41bca3:	dec    eax
  41bca4:	(bad)  
  41bca5:	call   ebp
  41bca7:	addr16 inc esi
  41bca9:	in     al,dx
  41bcaa:	dec    BYTE PTR [edi]
  41bcac:	mov    BYTE PTR [edx-0xf],al
  41bcaf:	push   edi
  41bcb0:	jns    0x41bc35
  41bcb2:	aad    0xe2
  41bcb4:	add    BYTE PTR [ebx+0x3739d70e],al
  41bcba:	mov    BYTE PTR [ecx],cl
  41bcbc:	test   DWORD PTR [edi+edx*4],0xd830f72e
  41bcc3:	cdq    
  41bcc4:	add    dx,bp
  41bcc7:	or     DWORD PTR [esi+0x56],ecx
  41bcca:	add    BYTE PTR [eax],al
  41bccc:	fabs   
  41bcce:	cli    
  41bccf:	xor    eax,0x4671ccc0
  41bcd4:	test   eax,0xb2874f22
  41bcd9:	int3   
  41bcda:	out    0x88,al
  41bcdc:	pop    ss
  41bcdd:	fidiv  WORD PTR [ecx-0x75]
  41bce0:	push   esi
  41bce1:	or     edi,esp
  41bce3:	add    edx,DWORD PTR [esi-0x3e]
  41bce6:	fwait
  41bce7:	hlt    
  41bce8:	xchg   ecx,eax
  41bce9:	cdq    
  41bcea:	add    dx,bp
  41bced:	or     DWORD PTR [edi],ecx
  41bcef:	mov    ah,0x27
  41bcf1:	int    0xfd
  41bcf3:	xchg   DWORD PTR [edi],edx
  41bcf5:	fisubr WORD PTR [ecx-0x5d]
  41bcf8:	repnz or edi,esp
  41bcfb:	add    edx,ebp
  41bcfd:	loopne 0x41bcf6
  41bcff:	mov    fs,edx
  41bd01:	mov    esi,esp
  41bd03:	add    edx,ebp
  41bd05:	cmp    ah,BYTE PTR [eax+ecx*1-0x13]
  41bd09:	cmp    dh,BYTE PTR [edi]
  41bd0b:	in     al,dx
  41bd0c:	inc    eax
  41bd0d:	ss (bad) 
  41bd0f:	fisttp DWORD PTR [ebp+0x46]
  41bd12:	retf   
  41bd13:	out    dx,eax
  41bd14:	(bad)  
  41bd15:	mov    edi,DWORD PTR [edx-0x31]
  41bd18:	xchg   ebp,eax
  41bd19:	or     DWORD PTR ds:0xf8adc7db,edx
  41bd1f:	inc    ebx
  41bd20:	aad    0xcc
  41bd22:	adc    esi,esp
  41bd24:	sbb    DWORD PTR [esi-0x1d],edx
  41bd27:	fiadd  DWORD PTR [edi+0x2ef18e01]
  41bd2d:	shr    BYTE PTR [ecx],0x4
  41bd30:	add    BYTE PTR [eax],al
  41bd32:	dec    esp
  41bd33:	mov    cl,0x69
  41bd35:	ror    dh,0x86
  41bd38:	call   DWORD PTR [ecx-0x14b07e22]
  41bd3e:	(bad)  
  41bd3f:	or     DWORD PTR [esi+0x66],edx
  41bd42:	xor    DWORD PTR es:[edx-0xf],0x56ea99ee
  41bd4a:	scas   al,BYTE PTR es:[edi]
  41bd4b:	xor    bh,0x60
  41bd4e:	sub    al,0xce
  41bd50:	add    BYTE PTR [esi-0x62],0xfe
  41bd54:	cmp    DWORD PTR [esi],0xffffffd0
  41bd57:	or     DWORD PTR [eax],eax
  41bd59:	push   0xc
  41bd5b:	(bad)  
  41bd5d:	popa   
  41bd5e:	les    edi,FWORD PTR [ecx+0x55d6aac8]
  41bd64:	sbb    dh,BYTE PTR [edx-0x72]
  41bd67:	fs (bad) 
  41bd69:	popa   
  41bd6a:	(bad)  [ecx]
  41bd6c:	add    dl,ch
  41bd6e:	pushf  
  41bd6f:	jecxz  0x41bd18
  41bd71:	pop    ss
  41bd72:	sahf   
  41bd73:	into   
  41bd74:	xchg   BYTE PTR [esi+eiz*4-0xd194078],ah
  41bd7b:	mov    bl,0xfe
  41bd7d:	call   0x51063e58
  41bd82:	cdq    
  41bd83:	cmp    edi,0xffffffe8
  41bd86:	(bad)  
  41bd87:	or     dh,al
  41bd89:	pusha  
  41bd8a:	xchg   ebp,eax
  41bd8b:	fst    QWORD PTR [eax-0x32]
  41bd8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd8f:	std    
  41bd90:	mov    bh,BYTE PTR [ecx]
  41bd92:	loope  0x41bdf5
  41bd94:	pop    esp
  41bd95:	dec    edx
  41bd96:	add    BYTE PTR [eax],al
  41bd98:	xchg   ecx,eax
  41bd99:	or     eax,ebp
  41bd9b:	aaa    
  41bd9c:	leave  
  41bd9d:	retf   0xfafc
  41bda0:	add    al,0x82
  41bda2:	div    DWORD PTR [eax+0x7d]
  41bda5:	shl    DWORD PTR [ebp-0x20],1
  41bda8:	test   ebp,edx
  41bdaa:	jne    0x41bdb3
  41bdac:	bound  eax,QWORD PTR [eax-0x14]
  41bdaf:	aaa    
  41bdb0:	push   edx
  41bdb1:	mov    WORD PTR [edi],?
  41bdb3:	add    BYTE PTR [esp+ecx*1+0x3f],ah
  41bdb7:	add    esp,ebp
  41bdb9:	sbb    ebx,ebx
  41bdbb:	je     0x41bd85
  41bdbd:	jp     0x41be00
  41bdbf:	in     al,dx
  41bdc0:	ja     0x41be40
  41bdc2:	add    BYTE PTR [eax],0xec
  41bdc5:	push   es
  41bdc6:	dec    edx
  41bdc8:	imul   esi,DWORD PTR [esi+0x7c],0xe806bc00
  41bdcf:	cmp    eax,DWORD PTR [eax-0x137b0451]
  41bdd5:	inc    DWORD PTR [ebx+0x6ad80]
  41bddb:	mov    eax,DWORD PTR [ecx+0x308887e2]
  41bde1:	pop    es
  41bde2:	add    BYTE PTR [eax],al
  41bde4:	xor    DWORD PTR [esi-0x78d8eb90],edi
  41bdea:	jl     0x41bdec
  41bdec:	jl     0x41bdf4
  41bdee:	mov    DWORD PTR [esp+eax*4],edx
  41bdf1:	adc    al,0x87
  41bdf3:	shl    ah,1
  41bdf5:	sbb    al,0x51
  41bdf7:	(bad)  
  41bdf8:	jnp    0x41be76
  41bdfa:	inc    ecx
  41bdfb:	in     al,dx
  41bdfc:	add    BYTE PTR [eax],al
  41bdfe:	test   DWORD PTR [ecx+0xc],0x4dbf7f53
  41be05:	(bad)  
  41be06:	cmp    al,0x85
  41be08:	cld    
  41be09:	jmp    FWORD PTR [esi+ebx*8-0x6]
  41be0d:	push   esp
  41be0e:	sub    esi,DWORD PTR [eax+0x6884587]
  41be14:	cwde   
  41be15:	test   BYTE PTR [esi+eax*1],ch
  41be18:	add    BYTE PTR [ebx],dh
  41be1a:	cmp    BYTE PTR [ebx+ebx*8-0x75],0x1
  41be1f:	mov    dh,0x37
  41be21:	(bad)  
  41be22:	loopne 0x41be47
  41be24:	aaa    
  41be25:	fdivp  st(2),st
  41be27:	iret   
  41be28:	sti    
  41be29:	jne    0x41be53
  41be2b:	xor    DWORD PTR [esp+ebp*1-0x2b],0x5f
  41be30:	les    esp,FWORD PTR [edi]
  41be32:	std    
  41be33:	lods   eax,DWORD PTR ds:[esi]
  41be34:	sub    eax,0xc45d02fd
  41be39:	or     al,0x51
  41be3b:	stos   DWORD PTR es:[edi],eax
  41be3c:	add    DWORD PTR [eax],eax
  41be3e:	aad    0x67
  41be40:	cmp    eax,0xd8dd5ef0
  41be45:	xor    bl,ch
  41be47:	mov    ecx,0xdae17319
  41be4c:	jle    0x41bdd5
  41be4e:	aad    0xb2
  41be50:	add    BYTE PTR [ecx],bh
  41be52:	xchg   ebx,eax
  41be53:	call   0xb3173dd4
  41be58:	add    BYTE PTR [edi+0xb38d],dh
  41be5e:	cmp    edi,DWORD PTR [edx+0xf445]
  41be64:	and    BYTE PTR [edx-0x14c617d0],ch
  41be6a:	(bad)  
  41be6b:	cld    
  41be6c:	dec    esi
  41be6d:	outs   dx,BYTE PTR ds:[esi]
  41be6e:	ror    BYTE PTR [eax+0x4a8bcb15],1
  41be74:	jns    0x41bea0
  41be76:	inc    ecx
  41be77:	jo     0x41bec7
  41be79:	jbe    0x41be4b
  41be7b:	mov    BYTE PTR ds:0x814a8bd7,dl
  41be81:	sub    al,BYTE PTR [ecx+0x74]
  41be84:	pop    esi
  41be85:	outs   dx,BYTE PTR ds:[esi]
  41be86:	in     al,0x86
  41be88:	in     eax,0x2a
  41be8a:	mov    eax,DWORD PTR [edx+0x69]
  41be8d:	jno    0x41becf
  41be8f:	jl     0x41be66
  41be91:	sub    eax,DWORD PTR [esi-0x14]
  41be94:	push   cs
  41be95:	jns    0x41be9e
  41be97:	xchg   esp,eax
  41be98:	adc    eax,0x4e7b423b
  41be9d:	out    dx,al
  41be9e:	rol    DWORD PTR [esi+0x428b0aa5],cl
  41bea4:	and    DWORD PTR [ecx+eax*8],esi
  41bea7:	fwait
  41bea8:	mov    ebx,0xb5db6a09
  41bead:	sbb    BYTE PTR [esi-0x73],ah
  41beb0:	adc    cl,cl
  41beb2:	out    0x8c,al
  41beb4:	xchg   edi,eax
  41beb5:	mov    ecx,0xb1b5538d
  41beba:	fisubr WORD PTR [edi]
  41bebc:	clc    
  41bebd:	enter  0x3e71,0xe5
  41bec1:	enter  0xeff6,0xf2
  41bec5:	push   ss
  41bec6:	adc    ebx,ecx
  41bec8:	add    BYTE PTR [eax],al
  41beca:	loope  0x41be60
  41becc:	stos   DWORD PTR es:[edi],eax
  41becd:	shr    DWORD PTR [ebp+ebx*1+0x6a],cl
  41bed1:	ret    
  41bed2:	out    0x59,al
  41bed4:	aas    
  41bed5:	iret   
  41bed6:	es leave 
  41bed8:	dec    ebp
  41bed9:	jmp    0x564d:0xd845c69c
  41bee0:	dec    ebx
  41bee1:	shl    ebx,1
  41bee3:	pop    eax
  41bee4:	addr16 dec esi
  41bee6:	enter  0x3204,0x4e
  41beea:	mov    esp,0x364f2d04
  41beef:	add    eax,0x6032593d
  41bef4:	jg     0x41bf6b
  41bef6:	jb     0x41bec0
  41bef8:	or     eax,0x3179e7d8
  41befd:	inc    esp
  41befe:	aad    0x62
  41bf00:	mov    al,ds:0x1c89d84
  41bf05:	dec    ecx
  41bf06:	lods   al,BYTE PTR ds:[esi]
  41bf07:	iret   
  41bf08:	jb     0x41bf4f
  41bf0a:	stos   BYTE PTR es:[edi],al
  41bf0b:	cmp    DWORD PTR [ebx],edx
  41bf0d:	dec    esi
  41bf0e:	sahf   
  41bf0f:	xchg   esp,eax
  41bf10:	es sub al,0x5a
  41bf13:	dec    edx
  41bf14:	push   edi
  41bf15:	mov    edx,DWORD PTR [edi-0xebb9e47]
  41bf1b:	xchg   esp,eax
  41bf1c:	xor    ebp,eax
  41bf1e:	push   ebx
  41bf1f:	dec    edx
  41bf20:	xor    ecx,DWORD PTR [ebx+0x5fffb597]
  41bf26:	add    DWORD PTR [ecx-0x77],0x3fce2d24
  41bf2d:	and    eax,0x92d00000
  41bf32:	dec    edx
  41bf33:	(bad)  
  41bf34:	out    dx,al
  41bf35:	out    0xc,eax
  41bf37:	jge    0x41bf4a
  41bf39:	nop
  41bf3a:	ds or  al,0x4e
  41bf3d:	dec    ebx
  41bf3e:	lock jo 0x41bee2
  41bf41:	icebp  
  41bf42:	mov    ah,dh
  41bf44:	push   es
  41bf45:	mov    al,0xe
  41bf47:	test   BYTE PTR [edx],al
  41bf49:	(bad)
  41bf4c:	std    
  41bf4d:	(bad)  
  41bf4e:	cld    
  41bf4f:	jb     0x41bee5
  41bf51:	(bad)
  41bf54:	mov    ebp,0x5ac1fcc6
  41bf59:	rol    BYTE PTR [eax-0x17],cl
  41bf5c:	stos   DWORD PTR es:[edi],eax
  41bf5d:	sbb    al,0xdc
  41bf5f:	fist   DWORD PTR [esi]
  41bf61:	or     cl,BYTE PTR [ecx+0x67ffbe2a]
  41bf67:	jge    0x41bf07
  41bf69:	dec    edx
  41bf6a:	add    BYTE PTR [esi],ch
  41bf6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf6d:	jecxz  0x41bf80
  41bf6f:	test   eax,0x910833d6
  41bf74:	push   es
  41bf75:	scas   eax,DWORD PTR es:[edi]
  41bf76:	cld    
  41bf77:	push   ss
  41bf78:	mov    ds:0x1622b01c,al
  41bf7d:	or     dl,BYTE PTR [edi-0x60]
  41bf80:	push   edi
  41bf81:	iret   
  41bf82:	cld    
  41bf83:	adc    dh,BYTE PTR [eax+0x5a]
  41bf86:	std    
  41bf87:	fsub   QWORD PTR [edx]
  41bf89:	sbb    DWORD PTR [eax-0x17],eax
  41bf8c:	mov    edi,DWORD PTR [eax+edx*1]
  41bf8f:	out    0x5,al
  41bf91:	push   ss
  41bf92:	std    
  41bf93:	push   esp
  41bf94:	add    BYTE PTR [eax],al
  41bf96:	loope  0x41bf5c
  41bf98:	adc    dh,BYTE PTR [ebp+0x6a004a1f]
  41bf9e:	adc    BYTE PTR [ebx],0x5d
  41bfa1:	add    dl,dh
  41bfa3:	add    al,ch
  41bfa5:	ret    
  41bfa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfa7:	push   edx
  41bfa8:	pusha  
  41bfa9:	push   ebx
  41bfaa:	leave  
  41bfab:	test   DWORD PTR [esi-0x79093b90],0xb0a09078
  41bfb5:	retf   
  41bfb6:	mov    edi,0x6d03510d
  41bfbb:	hlt    
  41bfbc:	hlt    
  41bfbd:	dec    DWORD PTR [ecx]
  41bfbf:	jg     0x41bfcf
  41bfc1:	inc    eax
  41bfc2:	in     al,dx
  41bfc3:	not    DWORD PTR [ebp-0x75]
  41bfc6:	call   0x6397dbf1
  41bfcb:	mov    ecx,0xdafcb98
  41bfd0:	xchg   eax,ebx
  41bfd2:	outs   dx,DWORD PTR ds:[esi]
  41bfd3:	xchg   BYTE PTR [eax],cl
  41bfd5:	xor    DWORD PTR [edi],0xffffffe0
  41bfd8:	jo     0x41c035
  41bfda:	mov    edi,ebx
  41bfdc:	adc    eax,ebx
  41bfde:	mov    esi,0xe4e8004a
  41bfe3:	mov    dl,0xfb
  41bfe5:	(bad)  
  41bfe6:	aas    
  41bfe7:	jecxz  0x41bfe4
  41bfe9:	jne    0x41bf7a
  41bfeb:	xor    BYTE PTR [eax],cl
  41bfed:	push   0xfffbb2fc
  41bff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bff3:	cmp    bl,0x15
  41bff6:	sub    al,0xd4
  41bff8:	aas    
  41bff9:	add    BYTE PTR [eax],al
  41bffb:	add    BYTE PTR [ebp+0x5],al
  41bffe:	out    0x30,eax
  41c000:	push   ebp
  41c001:	retf   0x84
  41c004:	ins    BYTE PTR es:[edi],dx
  41c005:	or     bh,bh
  41c007:	add    al,0xcc
  41c009:	sar    DWORD PTR [edi],cl
  41c00b:	add    BYTE PTR [edi],ah
  41c00d:	jg     0x41c080
  41c00f:	pop    ss
  41c010:	test   DWORD PTR [edx],0x5fc8d64
  41c016:	sti    
  41c017:	ss and al,0xc8
  41c01a:	dec    esi
  41c01b:	call   ebp
  41c01d:	fild   QWORD PTR [ecx+0x10]
  41c020:	stos   DWORD PTR es:[edi],eax
  41c021:	enter  0x5093,0x3a
  41c025:	iret   
  41c026:	out    0x6,al
  41c028:	aam    0xe8
  41c02a:	arpl   bp,di
  41c02c:	popf   
  41c02d:	push   esp
  41c02e:	psubusw mm2,QWORD PTR [esi-0x6ed2ce3]
  41c035:	rol    DWORD PTR [eax+0x0],0xb2
  41c039:	push   es
  41c03a:	xor    eax,0xc1fb1689
  41c03f:	add    edx,ebp
  41c041:	add    ebp,DWORD PTR [esi]
  41c043:	mov    DWORD PTR ds:0xd56c5630,eax
  41c049:	cmp    edi,DWORD PTR [ecx+0x3e2bb473]
  41c04f:	push   0x54a989e
  41c054:	scas   al,BYTE PTR es:[edi]
  41c055:	xrelease mov BYTE PTR [ebp+0x3d],al
  41c059:	pop    eax
  41c05a:	(bad)  
  41c05b:	sub    BYTE PTR [ebp+0x685e30],ch
  41c061:	add    ch,dl
  41c063:	retf   0xc88c
  41c066:	push   ss
  41c067:	mov    bl,0xd3
  41c069:	adc    dl,BYTE PTR [ecx-0x41ffbf1f]
  41c06f:	leave  
  41c070:	sub    edi,DWORD PTR [ebp+0x3ee869]
  41c076:	add    ch,ah
  41c078:	in     al,dx
  41c079:	(bad)  
  41c07b:	jb     0x41c07d
  41c07d:	mov    DWORD PTR [ebx],eax
  41c07f:	mov    edx,DWORD PTR [edi]
  41c081:	(bad)  
  41c083:	jo     0x41c054
  41c085:	push   ebp
  41c086:	jp     0x41c0cf
  41c088:	sbb    eax,0x1d3f5e18
  41c08d:	sbb    BYTE PTR [ebx],al
  41c08f:	mov    esp,0x708e9bed
  41c094:	add    BYTE PTR [ecx-0x4095f583],cl
  41c09a:	fimul  WORD PTR [eax-0x392b1f]
  41c0a0:	cmp    eax,0xf8e1e7d5
  41c0a5:	inc    ebx
  41c0a6:	aad    0xb1
  41c0a8:	dec    esi
  41c0a9:	jmp    0x3f29:0xdb69c531
  41c0b0:	fisubr DWORD PTR [ecx-0x33]
  41c0b3:	xor    DWORD PTR [edi-0x15],edx
  41c0b6:	sbb    ebp,eax
  41c0b8:	icebp  
  41c0b9:	mov    ebx,0xc8571f11
  41c0be:	xchg   ebp,eax
  41c0bf:	or     DWORD PTR [eax],esi
  41c0c1:	cmp    ebp,esp
  41c0c3:	adc    al,0x0
  41c0c5:	les    eax,FWORD PTR [eax]
  41c0c7:	add    BYTE PTR [edx+0xa],dl
  41c0ca:	out    0x3,eax
  41c0cc:	aam    0xe
  41c0ce:	xchg   edi,eax
  41c0cf:	enter  0x995,0xc0
  41c0d3:	cmp    ebp,DWORD PTR [ebp+0x5c]
  41c0d6:	outs   dx,BYTE PTR ds:[esi]
  41c0d7:	out    dx,al
  41c0d8:	(bad)  
  41c0d9:	pop    ss
  41c0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0db:	add    esi,DWORD PTR [eax]
  41c0dd:	fs jb  0x41c0a0
  41c0e0:	sub    eax,0x2603dec8
  41c0e5:	xchg   ecx,eax
  41c0e6:	cmp    al,BYTE PTR [eax-0x18983e4a]
  41c0ec:	push   esi
  41c0ed:	or     edi,esp
  41c0ef:	add    eax,DWORD PTR [ecx+edi*8]
  41c0f2:	adc    DWORD PTR ds:0xa7cc0208,ebp
  41c0f8:	lea    ecx,[eax-0x19]
  41c0fb:	add    al,0x59
  41c0fd:	ja     0x41c0e5
  41c0ff:	add    edx,ebp
  41c101:	mov    cl,0xfb
  41c103:	pop    ecx
  41c104:	aad    0x9
  41c106:	arpl   bx,ax
  41c108:	leave  
  41c109:	lea    ecx,[ebx+0x3]
  41c10c:	aad    0x9
  41c10e:	shl    BYTE PTR [esi],0xd9
  41c111:	adc    al,0x0
  41c113:	ins    DWORD PTR es:[edi],dx
  41c114:	jmp    0x1060:0xbfe9fcc4
  41c11b:	not    BYTE PTR [ecx+ebx*4-0x1]
  41c11f:	call   0xe1b453fa
  41c124:	cld    
  41c125:	mov    cl,0x54
  41c127:	aad    0x26
  41c129:	lds    eax,FWORD PTR [ebx-0x29ffff57]
  41c12f:	lea    eax,[ecx-0x42f62917]
  41c135:	jge    0x41c199
  41c137:	dec    ecx
  41c138:	add    BYTE PTR [esi],dl
  41c13a:	push   es
  41c13b:	pop    ss
  41c13c:	fdivr  st,st(3)
  41c13e:	xchg   esi,eax
  41c13f:	or     eax,ebp
  41c141:	mov    ch,0x28
  41c143:	(bad)  
  41c146:	sub    DWORD PTR [ebx-0x77113a8d],ecx
  41c14c:	std    
  41c14d:	xchg   BYTE PTR [ebp+0x69776766],cl
  41c153:	(bad)  
  41c154:	cld    
  41c155:	jmp    0xa311ba35
  41c15a:	xchg   edx,eax
  41c15b:	or     DWORD PTR [edi],esi
  41c15d:	mov    DWORD PTR [edx],0x2c5e0c3c
  41c163:	adc    cl,BYTE PTR [ecx-0x1b25ed1]
  41c169:	dec    esi
  41c16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c16b:	mov    dl,0x58
  41c16d:	add    bh,ah
  41c16f:	xor    DWORD PTR [esi-0x25],esi
  41c172:	sub    edx,DWORD PTR [eax+0x10]
  41c175:	ss cld 
  41c177:	adc    eax,0x38862789
  41c17c:	or     BYTE PTR [ecx],dl
  41c17e:	sahf   
  41c17f:	(bad)  
  41c182:	stos   BYTE PTR es:[edi],al
  41c183:	inc    edi
  41c184:	std    
  41c185:	pushf  
  41c186:	xchg   BYTE PTR [eax-0x3b453aa5],dl
  41c18c:	jb     0x41c18e
  41c18e:	push   0x871d8
  41c193:	add    ah,al
  41c195:	fucomi st,st(3)
  41c197:	jmp    FWORD PTR [ebx+0x46]
  41c19a:	inc    ecx
  41c19b:	and    al,0x88
  41c19d:	mov    esp,?
  41c19f:	push   DWORD PTR [ecx-0x2fbb78e3]
  41c1a5:	mov    ch,0xe4
  41c1a7:	adc    DWORD PTR [edi],edx
  41c1a9:	fdivr  st,st(3)
  41c1ab:	mov    ebp,DWORD PTR [edi-0x21]
  41c1ae:	mov    cl,0xe5
  41c1b0:	sbb    ebx,eax
  41c1b2:	push   ebx
  41c1b3:	inc    DWORD PTR [ecx]
  41c1b5:	jae    0x41c1c5
  41c1b7:	inc    eax
  41c1b8:	sub    al,0xd8
  41c1ba:	jno    0x41c1cc
  41c1bc:	imul   esp,DWORD PTR [edx+0xc],0xffffffff
  41c1c0:	icebp  
  41c1c1:	vunpckhps xmm1,xmm0,XMMWORD PTR [eax+0x6f003f83]
  41c1c9:	retf   0x5f08
  41c1cc:	stos   BYTE PTR es:[edi],al
  41c1cd:	repnz xchg ch,ah
  41c1d0:	mov    ecx,0xe446fbca
  41c1d5:	sbb    edx,edi
  41c1d7:	cmp    eax,ecx
  41c1d9:	icebp  
  41c1da:	dec    ebx
  41c1db:	pshufw mm1,QWORD PTR [edx+eax*1+0x0],0xbc
  41c1e1:	mov    DWORD PTR [eax+0x24],eax
  41c1e4:	test   dh,dh
  41c1e6:	out    0xc4,eax
  41c1e8:	add    eax,0x7089fbd8
  41c1ed:	jmp    0x8d1f:0x5abda81f
  41c1f4:	jo     0x41c1e0
  41c1f6:	inc    edi
  41c1f7:	call   0xb1d8c1fc
  41c1fc:	sti    
  41c1fd:	inc    DWORD PTR [ebx-0x29]
  41c200:	adc    esp,ebx
  41c202:	mov    es,WORD PTR [esi+0x0]
  41c205:	push   ebx
  41c206:	fs imul esp,esp,0xffffffff
  41c20a:	aad    0x1b
  41c20c:	rcl    BYTE PTR [edx],cl
  41c20e:	inc    ebp
  41c20f:	out    0x45,eax
  41c211:	add    BYTE PTR [edx+ebp*2],cl
  41c214:	test   edi,eax
  41c216:	push   0x17
  41c218:	cwde   
  41c219:	xchg   BYTE PTR [ecx],al
  41c21b:	aad    0xe8
  41c21d:	xchg   cl,bh
  41c21f:	int3   
  41c220:	hlt    
  41c221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c222:	xlat   BYTE PTR ds:[ebx]
  41c223:	mov    ebx,0xb0d46984
  41c228:	add    BYTE PTR [ecx-0x196837dd],cl
  41c22e:	cmp    dl,bl
  41c230:	jp     0x41c209
  41c232:	pop    eax
  41c233:	inc    BYTE PTR [bp+di-0x4f9f]
  41c238:	add    BYTE PTR [eax],al
  41c23a:	push   esi
  41c23b:	cmp    al,0x28
  41c23d:	test   ch,dl
  41c23f:	mov    al,0x0
  41c241:	jmp    ebx
  41c243:	xor    eax,0xb00aff73
  41c248:	jnp    0x41c1d5
  41c24a:	mov    ecx,0xd5000430
  41c24f:	das    
  41c250:	dec    ecx
  41c251:	add    al,0xd5
  41c253:	mov    ebx,0xb0d58184
  41c258:	add    BYTE PTR [ebx-0x74c72b67],cl
  41c25e:	add    BYTE PTR [eax],al
  41c260:	pop    ecx
  41c261:	int3   
  41c262:	and    al,0xe8
  41c264:	es pop ebx
  41c266:	iret   
  41c267:	cld    
  41c268:	retf   0x2797
  41c26b:	adc    ch,0xb2
  41c26e:	add    BYTE PTR [eax-0x7708f8ef],cl
  41c274:	pop    ecx
  41c275:	(bad)  
  41c277:	jmp    FWORD PTR [edx-0x47b3274d]
  41c27d:	clc    
  41c27e:	into   
  41c27f:	jg     0x41c29a
  41c281:	pop    es
  41c282:	repz jmp ebx
  41c285:	or     DWORD PTR [ebx-0x3],ebp
  41c288:	mov    eax,ecx
  41c28a:	out    0x5d,al
  41c28c:	add    cl,0x9a
  41c28f:	daa    
  41c290:	rol    eax,0xf3
  41c293:	ffreep st(4)
  41c295:	dec    ecx
  41c296:	out    0xd0,eax
  41c298:	out    0xe5,al
  41c29a:	into   
  41c29b:	fild   DWORD PTR [edx+ebx*2]
  41c29e:	not    al
  41c2a0:	pop    ecx
  41c2a1:	ss ret 
  41c2a3:	adc    edx,DWORD PTR [eax+0x17]
  41c2a6:	scas   eax,DWORD PTR es:[edi]
  41c2a7:	cmc    
  41c2a8:	or     cl,BYTE PTR [edx]
  41c2aa:	jb     0x41c2fb
  41c2ac:	stc    
  41c2ad:	in     eax,dx
  41c2ae:	imul   edx,eax,0xffffffc9
  41c2b1:	test   esi,eax
  41c2b3:	add    edx,ebp
  41c2b5:	or     DWORD PTR [edi+eax*2-0xf],esi
  41c2b9:	push   ecx
  41c2ba:	iret   
  41c2bb:	mov    eax,ds:0x7cb5c136
  41c2c0:	(bad)  
  41c2c1:	sbb    DWORD PTR [edx+0x47],esp
  41c2c4:	add    BYTE PTR [eax],al
  41c2c6:	mov    ecx,0xd944ad1d
  41c2cb:	or     DWORD PTR [eax+0x4c],esi
  41c2ce:	int    0xc7
  41c2d0:	jmp    0x600c96d7
  41c2d5:	dec    ecx
  41c2d6:	jge    0x41c29f
  41c2d8:	sub    al,0x60
  41c2da:	jmp    0x75c0:0xe1d146b1
  41c2e1:	push   esi
  41c2e2:	(bad)
  41c2e5:	(bad)  
  41c2e6:	mov    edx,0xc9d0b738
  41c2eb:	xchg   edx,eax
  41c2ec:	mov    ds:0x2686dd27,al
  41c2f1:	push   esi
  41c2f2:	ffree  st(0)
  41c2f4:	xchg   edx,eax
  41c2f5:	daa    
  41c2f6:	push   ebp
  41c2f7:	or     edi,esp
  41c2f9:	add    ebx,DWORD PTR [ebp+eax*4+0x2]
  41c2fd:	jl     0x41c2a1
  41c2ff:	sar    bh,0xe8
  41c302:	jle    0x41c2d5
  41c304:	jecxz  0x41c334
  41c306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c308:	mov    ch,cl
  41c30a:	(bad)  
  41c30b:	or     esi,eax
  41c30d:	jmp    0x92c6:0xcd73bed6
  41c314:	inc    ebx
  41c315:	lds    edi,FWORD PTR [esi-0x7a442b4f]
  41c31b:	mov    ebp,0x915eaa86
  41c320:	or     ebp,0x56
  41c323:	sar    ah,0xe9
  41c326:	iret   
  41c327:	dec    ecx
  41c328:	or     al,0x72
  41c32a:	add    BYTE PTR [eax],al
  41c32c:	pop    ebp
  41c32d:	in     al,dx
  41c32e:	sub    ecx,0xffffffd6
  41c331:	or     DWORD PTR [edx-0xa],ebp
  41c334:	mov    ecx,0x855c1049
  41c339:	in     eax,0x37
  41c33b:	and    DWORD PTR [ecx],ecx
  41c33d:	out    0x46,al
  41c33f:	call   0x6461f71a
  41c344:	test   ebp,esp
  41c346:	daa    
  41c347:	adc    DWORD PTR [ecx],esi
  41c349:	and    al,BYTE PTR [edi-0x18]
  41c34c:	(bad)  
  41c34d:	xchg   edx,eax
  41c34e:	les    edi,FWORD PTR [ecx]
  41c350:	push   esp
  41c351:	dec    esp
  41c352:	and    al,0xd1
  41c354:	(bad)  
  41c355:	mov    esi,0x3c23f972
  41c35a:	and    al,0xcd
  41c35c:	push   cs
  41c35d:	dec    esp
  41c35e:	mov    ch,cl
  41c360:	(bad)  
  41c361:	xor    esp,DWORD PTR [edx]
  41c363:	bound  ebp,QWORD PTR [ecx]
  41c365:	xchg   ebx,eax
  41c366:	jnp    0x41c32d
  41c368:	mov    esi,0x961e857
  41c36d:	mov    edi,0x4f9a72fc
  41c372:	push   ecx
  41c373:	push   esi
  41c374:	sbb    eax,0x31411fe6
  41c379:	mov    bh,bh
  41c37b:	(bad)  
  41c37c:	mov    esp,0xf48b2461
  41c381:	mov    BYTE PTR [eax+0x24],bh
  41c384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c385:	repz out 0xdd,eax
  41c388:	xor    al,0x6
  41c38a:	add    BYTE PTR [ebx-0xb10a45],cl
  41c390:	add    BYTE PTR [eax],al
  41c392:	push   0x51e81fe7
  41c397:	ds std 
  41c399:	push   ebp
  41c39b:	push   ecx
  41c39c:	and    al,0x14
  41c39e:	push   0x47
  41c3a0:	and    al,0x20
  41c3a2:	js     0x41c3fb
  41c3a4:	push   ebx
  41c3a5:	mov    esp,eax
  41c3a7:	out    0x17,al
  41c3a9:	test   DWORD PTR [ebx+0x62],eax
  41c3ac:	or     BYTE PTR [ebx+0x5d8709b1],cl
  41c3b2:	cmp    al,0xe4
  41c3b4:	add    BYTE PTR [ebx-0x72ec0e00],cl
  41c3ba:	clc    
  41c3bb:	icebp  
  41c3bc:	pop    ss
  41c3bd:	push   eax
  41c3be:	adc    edx,DWORD PTR [edi+0x24]
  41c3c1:	je     0x41c36a
  41c3c3:	retf   
  41c3c4:	sti    
  41c3c5:	je     0x41c38f
  41c3c7:	popa   
  41c3c8:	push   ebx
  41c3c9:	call   0x3d9f1b
  41c3ce:	xor    edx,DWORD PTR [edi+0x24]
  41c3d1:	ins    BYTE PTR es:[edi],dx
  41c3d2:	test   DWORD PTR [esi+0x24],eax
  41c3d5:	sbb    BYTE PTR [eax+esi*4+0x4b],dl
  41c3d9:	jmp    DWORD PTR [ebx-0x74]
  41c3dc:	js     0x41c402
  41c3de:	or     BYTE PTR [ebx],cl
  41c3e0:	jno    0x41c3f1
  41c3e2:	pop    ss
  41c3e3:	pop    edx
  41c3e4:	or     al,0x74
  41c3e6:	mov    dh,0x3c
  41c3e8:	jns    0x41c40e
  41c3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3eb:	cmp    eax,0xe3c82459
  41c3f0:	pop    es
  41c3f1:	cmp    esp,DWORD PTR [ecx+0x670be]
  41c3f7:	add    ch,dl
  41c3f9:	jg     0x41c3d3
  41c3fb:	std    
  41c3fc:	and    edx,DWORD PTR [eax-0x32]
  41c3ff:	mov    BYTE PTR [ecx],ch
  41c401:	or     eax,0x74a282ec
  41c406:	pop    ds
  41c407:	mov    edx,DWORD PTR [ecx]
  41c409:	or     eax,0x53fde83c
  41c40e:	into   
  41c40f:	cld    
  41c410:	pop    esi
  41c411:	ins    BYTE PTR es:[edi],dx
  41c412:	and    al,0x1c
  41c414:	push   esi
  41c415:	xchg   BYTE PTR [eax+0x0],ah
  41c418:	dec    esp
  41c419:	outs   dx,BYTE PTR ds:[esi]
  41c41a:	pop    eax
  41c41b:	mov    DWORD PTR [ecx],ebx
  41c41d:	(bad)
  41c420:	adc    esp,DWORD PTR [ebp+0x79]
  41c423:	inc    edx
  41c424:	(bad)
  41c427:	ins    BYTE PTR es:[edi],dx
  41c428:	aad    0x29
  41c42a:	dec    ebx
  41c42b:	pop    eax
  41c42c:	pop    esp
  41c42d:	fs out 0x94,ax
  41c431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c432:	retf   0x50fc
  41c435:	in     al,0x27
  41c437:	dec    eax
  41c438:	sub    eax,0x32fcdf1b
  41c43d:	sub    ecx,DWORD PTR [eax+0x24]
  41c440:	leave  
  41c441:	cmp    edi,DWORD PTR ds:0x7871d610
  41c447:	inc    ebp
  41c448:	lods   eax,DWORD PTR ds:[esi]
  41c449:	outs   dx,BYTE PTR ds:[esi]
  41c44a:	inc    ebp
  41c44b:	ins    BYTE PTR es:[edi],dx
  41c44c:	aad    0xc9
  41c44e:	adc    bh,bl
  41c450:	or     ah,BYTE PTR [edi+0x34]
  41c453:	mov    ecx,esi
  41c455:	das    
  41c456:	or     eax,0x3f30eac
  41c45b:	add    BYTE PTR [eax],al
  41c45d:	add    BYTE PTR [esi-0x7cf7d2d5],al
  41c463:	pop    ds
  41c464:	pop    eax
  41c465:	outs   dx,DWORD PTR ds:[esi]
  41c466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c467:	aas    
  41c468:	pop    es
  41c469:	frstor [ecx+0xb]
  41c46c:	or     DWORD PTR [ebx-0x1f],edi
  41c46f:	lods   al,BYTE PTR ds:[esi]
  41c470:	(bad)  
  41c471:	call   0x41ecf01
  41c476:	aad    0x85
  41c478:	es pop eax
  41c47a:	push   ds
  41c47b:	xor    bl,BYTE PTR [ebx+0x4e0a15b9]
  41c481:	test   DWORD PTR [edx-0x15fc58e8],0x174deb3e
  41c48b:	mov    ah,0xaa
  41c48d:	enter  0xad6,0xb3
  41c491:	push   ss
  41c492:	pop    esp
  41c493:	mul    BYTE PTR [ecx]
  41c495:	fsubr  QWORD PTR [eax-0x5c]
  41c498:	sbb    eax,0x15c255cd
  41c49d:	pop    eax
  41c49e:	mov    ebp,0x6a7c2732
  41c4a3:	mov    ebp,0xd9d600e6
  41c4a8:	xor    DWORD PTR [ecx-0x2b],eax
  41c4ab:	mov    BYTE PTR [esi+0x57],ch
  41c4ae:	aad    0x36
  41c4b0:	stos   DWORD PTR es:[edi],eax
  41c4b1:	add    edx,0x3e
  41c4b4:	out    0x56,eax
  41c4b6:	or     edx,DWORD PTR [ecx-0x5ab42452]
  41c4bc:	aad    0xcc
  41c4be:	push   edi
  41c4bf:	retf   0x752
  41c4c2:	add    BYTE PTR [eax],al
  41c4c4:	and    ecx,DWORD PTR [edx]
  41c4c6:	call   0x286c021
  41c4cb:	dec    edi
  41c4cc:	leave  
  41c4cd:	cmp    eax,0xd1495b75
  41c4d2:	sub    DWORD PTR [eax+ecx*1],eax
  41c4d5:	pop    ss
  41c4d6:	ret    
  41c4d7:	icebp  
  41c4d8:	ret    0x9e09
  41c4db:	push   esi
  41c4dc:	in     eax,0xbc
  41c4de:	sbb    eax,DWORD PTR [eax]
  41c4e0:	test   BYTE PTR [ebx+esi*8-0x18b6e259],bh
  41c4e7:	adc    BYTE PTR [esi],0xe
  41c4ea:	push   ds
  41c4eb:	cs jl  0x41c54c
  41c4ee:	add    BYTE PTR [edx+0x2ac8762e],ch
  41c4f4:	sar    DWORD PTR [esi-0x33bbaee],1
  41c4fa:	call   FWORD PTR [ecx]
  41c4fc:	xchg   ecx,eax
  41c4fd:	cld    
  41c4fe:	gs pusha 
  41c500:	sbb    al,bl
  41c502:	add    eax,0xe3b19162
  41c507:	ins    BYTE PTR es:[edi],dx
  41c508:	cmp    BYTE PTR fs:[ebx+0x73],al
  41c50c:	pushf  
  41c50d:	mov    dh,al
  41c50f:	mov    ebp,0x69bffae1
  41c514:	lahf   
  41c515:	out    dx,eax
  41c516:	jb     0x41c504
  41c518:	sbb    al,0x8
  41c51a:	pop    eax
  41c51b:	adc    dl,bl
  41c51d:	mov    esi,esi
  41c51f:	ret    0xbd0b
  41c522:	ds mov bh,0xc5
  41c525:	mov    bl,0xe8
  41c527:	fld    DWORD PTR [eax]
  41c529:	add    BYTE PTR [esi-0x4d],dl
  41c52c:	ss jle 0x41c593
  41c52f:	xor    esi,esi
  41c531:	jecxz  0x41c584
  41c533:	jle    0x41c4fb
  41c535:	pop    esp
  41c536:	mov    ds:0xc32bd00b,al
  41c53b:	adc    al,BYTE PTR [eax-0x18bf1e20]
  41c541:	ins    DWORD PTR es:[edi],dx
  41c542:	jo     0x41c57c
  41c544:	add    DWORD PTR [edx+0x69],ebp
  41c547:	mov    ebx,0x792eba4
  41c54c:	cmc    
  41c54d:	lahf   
  41c54e:	cwde   
  41c54f:	cmc    
  41c550:	pop    ebp
  41c551:	stos   BYTE PTR es:[edi],al
  41c552:	pop    edx
  41c553:	in     eax,0xff
  41c555:	inc    edx
  41c556:	or     DWORD PTR [ecx+eax*8+0x13],edx
  41c55a:	fldcw  WORD PTR [edi]
  41c55c:	add    BYTE PTR [esi+0x2974c9d7],ah
  41c562:	fnstcw WORD PTR [esi-0x418f2ee]
  41c568:	(bad)  
  41c569:	jmp    DWORD PTR [ebp+0x47]
  41c56c:	add    al,0x8b
  41c56e:	xor    al,ah
  41c570:	push   edx
  41c571:	mov    ecx,DWORD PTR [ebp-0x22]
  41c574:	(bad)  
  41c576:	mov    esp,0xd044f607
  41c57b:	mov    ebp,0xf9b273fd
  41c580:	out    0x81,eax
  41c582:	jns    0x41c554
  41c584:	sti    
  41c585:	mov    esi,edx
  41c587:	out    dx,eax
  41c588:	rol    DWORD PTR [esp+ebp*4],0xf9
  41c58c:	xchg   cl,dh
  41c58e:	add    BYTE PTR [eax],al
  41c590:	daa    
  41c591:	dec    eax
  41c592:	add    al,0xc7
  41c594:	add    bh,0x73
  41c597:	inc    eax
  41c598:	jl     0x41c524
  41c59a:	mov    esp,0xf4847174
  41c59f:	add    DWORD PTR [ecx-0x43],esp
  41c5a2:	sti    
  41c5a3:	adc    eax,0x3cb7fc
  41c5a8:	(bad)  
  41c5a9:	inc    DWORD PTR [ebx]
  41c5ab:	(bad)  
  41c5ac:	cmp    al,ah
  41c5ae:	xchg   DWORD PTR [eax+0x70],eax
  41c5b1:	mov    bh,BYTE PTR [esp+esi*2+0x1f4843b]
  41c5b8:	sar    BYTE PTR [ecx+edi*1-0x7ff9d2fa],0x74
  41c5c0:	das    
  41c5c1:	adc    al,0xc0
  41c5c3:	ret    
  41c5c4:	iret   
  41c5c5:	lds    edi,FWORD PTR [ebx+eax*8]
  41c5c8:	mov    edi,0x2c042442
  41c5cd:	dec    ebx
  41c5ce:	push   es
  41c5cf:	call   ecx
  41c5d1:	lods   eax,DWORD PTR ds:[esi]
  41c5d2:	cmovo  edi,esp
  41c5d5:	les    eax,FWORD PTR [eax]
  41c5d7:	add    cl,ah
  41c5d9:	cmp    ch,cl
  41c5db:	push   ecx
  41c5dc:	outs   dx,DWORD PTR ds:[esi]
  41c5dd:	sub    esp,edi
  41c5df:	add    BYTE PTR [ecx+0x49],ch
  41c5e2:	cld    
  41c5e3:	push   eax
  41c5e4:	aad    0x93
  41c5e6:	dec    edi
  41c5e7:	or     al,0x7d
  41c5e9:	mov    cl,0x3c
  41c5eb:	add    ch,dl
  41c5ed:	push   ss
  41c5ee:	add    al,0xfd
  41c5f0:	pusha  
  41c5f1:	mov    eax,0x12c9
  41c5f6:	pop    ecx
  41c5f7:	fiadd  DWORD PTR [eax+0x0]
  41c5fa:	push   eax
  41c5fb:	jo     0x41c645
  41c5fd:	add    eax,0x82c46d4e
  41c602:	xchg   ebp,eax
  41c603:	aad    0x2
  41c605:	xor    DWORD PTR [ebp-0x2af83d17],edx
  41c60b:	jne    0x41c68a
  41c60d:	jmp    0x41c613
  41c60f:	fwait
  41c610:	ja     0x41c654
  41c612:	int    0xa0
  41c614:	pop    edx
  41c615:	or     BYTE PTR [edx-0x7ccf0783],dl
  41c61b:	jmp    0x41c60c
  41c61d:	pop    ss
  41c61e:	in     eax,0x70
  41c620:	add    BYTE PTR [ebx-0x2f86b6b],al
  41c626:	call   0x875f9ed3
  41c62b:	mov    al,0x0
  41c62d:	mov    DWORD PTR [ebp+0x2d],esp
  41c630:	iret   
  41c631:	jae    0x41c5e6
  41c633:	das    
  41c634:	dec    eax
  41c635:	or     al,0xd5
  41c637:	cmp    al,0x21
  41c639:	mov    edx,DWORD PTR [eax-0x2695ce54]
  41c63f:	mov    ds:0xacaf0c4c,eax
  41c644:	(bad)  
  41c645:	jb     0x41c624
  41c647:	shr    esp,cl
  41c649:	daa    
  41c64a:	(bad)
  41c64d:	adc    DWORD PTR ds:0x2d55fbfd,0x34
  41c654:	cmp    ch,bh
  41c656:	adc    bh,BYTE PTR [edi+0xfcce]
  41c65c:	sub    BYTE PTR [eax+0x90d12c7],0xf9
  41c663:	inc    ebx
  41c664:	aad    0x8e
  41c666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c667:	sub    bl,BYTE PTR [edx]
  41c669:	(bad)  
  41c66a:	fiadd  WORD PTR [ebx]
  41c66c:	xchg   BYTE PTR [esi+0x1cee857a],cl
  41c672:	sbb    eax,0x15baa431
  41c677:	pop    esi
  41c678:	fnstcw WORD PTR [eax+0x49da23db]
  41c67e:	out    0x7c,eax
  41c680:	mov    dl,0x8d
  41c682:	cs leave 
  41c684:	std    
  41c685:	mov    ecx,0x4f5e0ed2
  41c68a:	dec    ebx
  41c68b:	xor    al,0x3
  41c68d:	shl    DWORD PTR [ebx-0x18f64121],1
  41c693:	add    ebx,DWORD PTR [eax-0x2d0d2ce1]
  41c699:	or     DWORD PTR [edx-0x10],eax
  41c69c:	pop    ebp
  41c69d:	dec    edi
  41c69e:	aaa    
  41c69f:	or     eax,0x29c0216
  41c6a4:	adc    BYTE PTR [edi+0x6022dfa3],al
  41c6aa:	push   ss
  41c6ab:	out    dx,eax
  41c6ac:	into   
  41c6ad:	sbb    ah,BYTE PTR [edi+0x7bca5603]
  41c6b3:	fild   DWORD PTR [eax]
  41c6b5:	mov    ecx,0x49e4bbd3
  41c6ba:	out    0x7c,eax
  41c6bc:	adc    DWORD PTR [ecx-0x73],ebx
  41c6bf:	mov    edx,0xe140000
  41c6c4:	out    0x2e,eax
  41c6c6:	dec    esp
  41c6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6c8:	imul   edx,edi,0x3e645cca
  41c6ce:	sub    eax,0x85ad1a5a
  41c6d3:	and    eax,DWORD PTR [edi]
  41c6d5:	leave  
  41c6d6:	mov    DWORD PTR ds:0x59d543d8,0x18fbb600
  41c6e0:	adc    BYTE PTR [ecx],ch
  41c6e2:	(bad)  [edi+edi*4+0x4284071c]
  41c6e9:	mov    eax,ds:0x32023a6
  41c6ee:	sbb    al,0xb6
  41c6f0:	adc    dh,cl
  41c6f2:	out    0xf8,al
  41c6f4:	jmp    FWORD PTR [ebx+0x16]
  41c6f7:	cmp    al,0x4
  41c6f9:	mov    ebx,0x644ba196
  41c6fe:	or     esp,DWORD PTR [esi+0x2136e4f]
  41c704:	lds    ebp,FWORD PTR [esi+ebx*4-0x29160349]
  41c70b:	pop    edx
  41c70c:	lds    ebp,FWORD PTR [edx+ebx*4-0x2916fff6]
  41c713:	mov    dh,0x12
  41c715:	stc    
  41c716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c717:	clc    
  41c718:	jmp    DWORD PTR [ebx-0x6a]
  41c71b:	cmp    al,0x1f
  41c71d:	call   0x489e:0xa48b5ac1
  41c724:	push   ecx
  41c725:	add    BYTE PTR es:[eax],al
  41c728:	or     esi,DWORD PTR [edx+0x19e2f4fc]
  41c72e:	inc    eax
  41c72f:	jmp    0xddb5401f
  41c734:	lea    ebx,[ebx]
  41c736:	lods   al,BYTE PTR ds:[esi]
  41c737:	fist   DWORD PTR [esi]
  41c739:	or     al,BYTE PTR [ebx-0x4ef45cd7]
  41c73f:	call   0xef3a0261
  41c744:	xor    al,dl
  41c746:	adc    DWORD PTR [ecx],ebp
  41c748:	rol    DWORD PTR [ebx-0x358fbd40],1
  41c74e:	add    ebp,ecx
  41c750:	in     eax,0x82
  41c752:	jmp    0x41c78c
  41c754:	call   0xe94252b3
  41c759:	lds    ecx,FWORD PTR [edx+ebp*2+0x4]
  41c75d:	push   edx
  41c75e:	sti    
  41c75f:	xor    esp,DWORD PTR [edi-0x30]
  41c762:	adc    DWORD PTR [eax],ebx
  41c764:	sbb    al,0x4c
  41c766:	add    BYTE PTR [ebp-0x6b7f3fd4],al
  41c76c:	cld    
  41c76d:	or     eax,DWORD PTR [eax]
  41c76f:	push   edi
  41c770:	ja     0x41c774
  41c772:	sub    BYTE PTR [eax],dl
  41c774:	lods   al,BYTE PTR ds:[esi]
  41c775:	or     eax,0xfd504589
  41c77a:	dec    esi
  41c77b:	push   ebx
  41c77c:	out    0xa4,al
  41c77e:	sti    
  41c77f:	jne    0x41c7c5
  41c781:	iret   
  41c782:	rol    DWORD PTR [ebp-0x8da694],cl
  41c788:	mov    ecx,0x400e9f
  41c78d:	add    BYTE PTR [esp+ecx*4+0x58897af4],bh
  41c794:	xchg   DWORD PTR [ebp+0x10],eax
  41c797:	add    edi,DWORD PTR [edi-0x181a738c]
  41c79d:	inc    edx
  41c79e:	inc    edi
  41c79f:	sar    bl,1
  41c7a1:	mov    ecx,esp
  41c7a3:	add    ch,bh
  41c7a5:	je     0x41c806
  41c7a7:	xor    al,BYTE PTR [edx-0x4]
  41c7aa:	cmp    al,0xd0
  41c7ac:	jno    0x41c7aa
  41c7ae:	sub    dl,BYTE PTR [ecx+0x15]
  41c7b1:	dec    DWORD PTR [ecx-0x3d]
  41c7b4:	sti    
  41c7b5:	xlat   BYTE PTR ds:[ebx]
  41c7b6:	stc    
  41c7b7:	int    0x70
  41c7b9:	cmp    dl,bl
  41c7bb:	pop    es
  41c7bc:	sti    
  41c7bd:	adc    eax,0x3cbb18
  41c7c2:	xchg   esp,ecx
  41c7c4:	jo     0x41c7f4
  41c7c6:	mov    dh,0xd
  41c7c8:	cmp    al,bl
  41c7ca:	call   0x4ff3:0x7cb60b15
  41c7d1:	call   ebp
  41c7d3:	push   ss
  41c7d4:	lds    edx,FWORD PTR [edx]
  41c7d6:	shl    DWORD PTR [eax+0x63de0040],0x4c
  41c7dd:	adc    eax,0x7a15e
  41c7e2:	mov    ch,0xa0
  41c7e4:	add    BYTE PTR [ecx-0x27],dh
  41c7e7:	xor    eax,DWORD PTR [ecx+ebp*8]
  41c7ea:	iret   
  41c7eb:	lods   eax,DWORD PTR ds:[esi]
  41c7ec:	add    BYTE PTR [eax],dh
  41c7ee:	aad    0xa0
  41c7f0:	out    0xd8,al
  41c7f2:	add    BYTE PTR [eax],al
  41c7f4:	push   ebp
  41c7f5:	add    DWORD PTR fs:[esi-0x13],edx
  41c7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7fa:	cmp    ebp,edi
  41c7fc:	(bad)  
  41c7fe:	les    esi,FWORD PTR [edx-0x33]
  41c801:	aaa    
  41c802:	lock (bad) 
  41c804:	out    0xe0,eax
  41c806:	add    ebx,DWORD PTR [ebp+0x4f]
  41c809:	arpl   WORD PTR [ecx],bp
  41c80b:	(bad)  
  41c80c:	xchg   esi,eax
  41c80d:	jne    0x41c888
  41c80f:	jmp    0x41c815
  41c811:	and    al,0x60
  41c813:	cld    
  41c814:	aad    0xc8
  41c816:	mov    esp,0xc5a11574
  41c81b:	adc    bl,BYTE PTR [ebp+0x580040d0]
  41c821:	loopne 0x41c86f
  41c823:	and    ch,bh
  41c825:	inc    eax
  41c826:	dec    esi
  41c827:	inc    eax
  41c828:	aad    0x90
  41c82a:	lds    edx,FWORD PTR [edx]
  41c82c:	sub    eax,0x580040b2
  41c831:	loopne 0x41c87f
  41c833:	adc    BYTE PTR [eax+0x6d],bl
  41c836:	les    ecx,FWORD PTR [esi-0x11]
  41c839:	pop    es
  41c83a:	(bad)  
  41c83b:	iret   
  41c83c:	push   eax
  41c83d:	loopne 0x41c88e
  41c83f:	add    al,0x7
  41c841:	loope  0x41c7fe
  41c843:	rcl    BYTE PTR [esi+0x3d],0xc5
  41c847:	call   ebx
  41c849:	pop    ebp
  41c84a:	rol    esi,0x16
  41c84d:	or     DWORD PTR [ecx+edi*2],edi
  41c850:	ds mov cl,dl
  41c853:	sub    al,0x83
  41c855:	cli    
  41c856:	lahf   
  41c857:	adc    DWORD PTR [eax],eax
  41c859:	add    BYTE PTR [ebx],ch
  41c85b:	das    
  41c85c:	pusha  
  41c85d:	aaa    
  41c85e:	sbb    edx,esi
  41c860:	lods   al,BYTE PTR ds:[esi]
  41c861:	dec    edi
  41c862:	out    dx,eax
  41c863:	and    esp,DWORD PTR [ebx]
  41c865:	ja     0x41c7fe
  41c867:	popa   
  41c868:	sbb    al,0x34
  41c86a:	add    BYTE PTR [edi+ecx*8],bl
  41c86d:	in     eax,dx
  41c86e:	mov    edx,0xdec06a09
  41c873:	into   
  41c874:	and    ebx,DWORD PTR [esi+edx*4+0x4e03e709]
  41c87b:	dec    esp
  41c87c:	aas    
  41c87d:	ja     0x41c80e
  41c87f:	mov    ch,0xbf
  41c881:	dec    esi
  41c882:	fnstsw WORD PTR ds:0x21f78ea
  41c888:	fs das 
  41c88a:	mov    cl,0x58
  41c88c:	pop    ss
  41c88d:	lds    eax,FWORD PTR [edi+0x6]
  41c890:	mov    ebp,0xe709d55b
  41c895:	inc    DWORD PTR [eax]
  41c897:	pop    esp
  41c898:	mov    ebp,0xf3b50b32
  41c89d:	sti    
  41c89e:	retf   
  41c89f:	dec    ecx
  41c8a0:	out    0x7e,eax
  41c8a2:	push   edx
  41c8a3:	adc    DWORD PTR ds:[ebx],ecx
  41c8a6:	push   es
  41c8a7:	sbb    bh,BYTE PTR [ebx+0x5c19ecf3]
  41c8ad:	aas    
  41c8ae:	imul   ebx,DWORD PTR [edx+0x26],0x46a1c54f
  41c8b5:	cmp    ch,BYTE PTR [eax-0x4b]
  41c8b8:	add    esp,esi
  41c8ba:	popa   
  41c8bb:	aas    
  41c8bc:	pop    ss
  41c8bd:	jns    0x41c8bf
  41c8bf:	add    BYTE PTR [edi-0x2abc273f],ah
  41c8c5:	mov    ah,0x14
  41c8c7:	(bad)
  41c8ca:	push   ebp
  41c8cc:	jo     0x41c850
  41c8ce:	inc    edx
  41c8cf:	cmc    
  41c8d0:	sbb    eax,0xf8a9310b
  41c8d5:	int3   
  41c8d6:	shr    ebp,0xd6
  41c8d9:	pop    eax
  41c8da:	mov    ebp,eax
  41c8dc:	lock cli 
  41c8de:	cmc    
  41c8df:	pop    esp
  41c8e0:	fild   DWORD PTR ds:0x380d3c37
  41c8e6:	adc    DWORD PTR [esi-0x4697fe65],edi
  41c8ec:	xchg   ecx,eax
  41c8ed:	dec    ecx
  41c8ee:	add    BYTE PTR [ecx],bl
  41c8f0:	sbb    esi,edi
  41c8f2:	xor    ah,BYTE PTR [esi-0x123c75e7]
  41c8f8:	or     eax,0xdd1cfd19
  41c8fd:	mov    ch,0x72
  41c8ff:	loope  0x41c97f
  41c901:	mov    ch,0x74
  41c903:	sub    ecx,ebx
  41c905:	pop    ecx
  41c906:	call   0xfcf8a4d3
  41c90b:	push   0xffffff82
  41c90d:	add    al,0x39
  41c90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c910:	adc    BYTE PTR [ebx],dl
  41c912:	std    
  41c913:	fdivr  QWORD PTR [esi-0x6e0abd7f]
  41c919:	aaa    
  41c91a:	adc    BYTE PTR [esi+0x13],dl
  41c91d:	push   es
  41c91e:	call   0xfcf7593c
  41c923:	inc    esi
  41c924:	add    BYTE PTR [eax],al
  41c926:	and    eax,DWORD PTR [esi]
  41c928:	mov    DWORD PTR [ecx],edi
  41c92a:	scas   al,BYTE PTR es:[edi]
  41c92b:	mov    edx,0x81993646
  41c930:	lds    ecx,FWORD PTR [edi-0x16ec384d]
  41c936:	ret    
  41c937:	sub    bl,0x6a
  41c93a:	sub    BYTE PTR [edx*2+0xc2c99da],0x91
  41c942:	push   ss
  41c943:	or     al,BYTE PTR [edi-0x427a700]
  41c949:	adc    eax,0x3cba90
  41c94e:	mov    ch,0xf3
  41c950:	repz cmp esi,ebx
  41c953:	mov    ebp,0x83cc580
  41c958:	add    BYTE PTR [ebx-0x1e],dl
  41c95b:	test   BYTE PTR [ecx],dh
  41c95d:	test   al,0x1e
  41c95f:	dec    eax
  41c960:	add    BYTE PTR [eax+0x24],ch
  41c963:	lock aas 
  41c965:	add    ah,ch
  41c967:	enter  0x68d2,0xc
  41c96b:	lock aas 
  41c96d:	add    BYTE PTR [ebx-0xe],cl
  41c970:	repz mov esp,DWORD PTR [eax+ecx*8-0x2e]
  41c975:	mov    ecx,eax
  41c977:	jns    0x41c9b0
  41c979:	(bad)  
  41c97b:	mov    ecx,DWORD PTR [edi+0x3707ec00]
  41c981:	(bad)  
  41c982:	sti    
  41c983:	mov    eax,DWORD PTR [edi+0x5307bc00]
  41c989:	inc    DWORD PTR [eax]
  41c98b:	add    cl,al
  41c98d:	dec    DWORD PTR [eax-0x7aa1bbbb]
  41c993:	jge    0x41c9d9
  41c995:	(bad)  
  41c996:	iret   
  41c997:	test   esp,edi
  41c999:	lock dec BYTE PTR [eax+0x44666f89]
  41c9a0:	push   0xffffffbc
  41c9a2:	mov    esp,0x41869256
  41c9a7:	cld    
  41c9a8:	or     DWORD PTR [ecx-0x68],eax
  41c9ab:	push   edi
  41c9ac:	ins    BYTE PTR es:[edi],dx
  41c9ad:	enter  0x1811,0xa2
  41c9b1:	inc    edi
  41c9b2:	add    BYTE PTR [ebx-0x3b80fca7],cl
  41c9b8:	push   0xe5987186
  41c9bd:	dec    eax
  41c9be:	mov    al,ds:0x36ebd53b
  41c9c3:	add    DWORD PTR [eax-0x6a],ecx
  41c9c6:	mov    esp,0x53ec988a
  41c9cb:	mov    edx,DWORD PTR [eax-0x6776abd8]
  41c9d1:	mov    eax,0x19425059
  41c9d6:	sbb    eax,0x4a0f8c0
  41c9db:	add    ch,dl
  41c9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9de:	add    BYTE PTR [eax],al
  41c9e0:	aad    0xa4
  41c9e2:	push   eax
  41c9e3:	push   ebp
  41c9e4:	cmp    bl,0x52
  41c9e7:	push   ebp
  41c9e8:	adc    dh,dh
  41c9ea:	or     edi,ebp
  41c9ec:	loopne 0x41c9f2
  41c9ee:	adc    al,0x40
  41c9f0:	add    BYTE PTR [eax],al
  41c9f2:	aad    0x25
  41c9f4:	shl    DWORD PTR [ebx-0x1d],0x63
  41c9f8:	aaa    
  41c9f9:	loopne 0x41ca59
  41c9fb:	(bad)  
  41c9fc:	enter  0x9511,0xa0
  41ca00:	rcl    ebp,0xe2
  41ca03:	adc    eax,0x2803fce0
  41ca08:	dec    eax
  41ca09:	in     al,0x5c
  41ca0b:	in     eax,0xb3
  41ca0d:	ss dec eax
  41ca0f:	mov    DWORD PTR [esi+eax*1],esi
  41ca12:	ret    0xb8b5
  41ca15:	cld    
  41ca16:	and    BYTE PTR ds:0x2ba972c2,dh
  41ca1c:	sbb    BYTE PTR [edi+eax*8-0x1a1ffa0],bh
  41ca23:	daa    
  41ca24:	dec    eax
  41ca25:	lock cli 
  41ca27:	jmp    0x3816d1ee
  41ca2c:	inc    edi
  41ca2d:	add    al,0x22
  41ca2f:	cmp    BYTE PTR [eax],al
  41ca31:	enter  0x60e7,0x0
  41ca35:	adc    DWORD PTR [ebp+0x7250057c],0x9
  41ca3c:	ds mov ss,eax
  41ca3f:	mov    WORD PTR [esi],fs
  41ca41:	aaa    
  41ca42:	aam    0x59
  41ca44:	push   ss
  41ca45:	(bad)  
  41ca47:	sbb    DWORD PTR [ebp+0x64021ab],esi
  41ca4d:	ret    0xc6a9
  41ca50:	xchg   ebx,eax
  41ca51:	mov    gs,WORD PTR [esi]
  41ca53:	test   BYTE PTR [ebx-0x5affffed],ch
  41ca59:	pop    ds
  41ca5a:	out    0xc2,eax
  41ca5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca5d:	sbb    esi,esp
  41ca5f:	aaa    
  41ca60:	fnstenv [edx+0x9af0c53]
  41ca66:	(bad)  
  41ca67:	pop    ss
  41ca68:	push   ebp
  41ca69:	pop    ss
  41ca6a:	daa    
  41ca6b:	add    al,0x56
  41ca6d:	leave  
  41ca6e:	cmp    dl,BYTE PTR [eax]
  41ca70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca71:	mov    dl,0xd3
  41ca73:	retf   
  41ca74:	in     al,0x49
  41ca76:	out    0x8c,eax
  41ca78:	xchg   edi,eax
  41ca79:	sbb    edx,eax
  41ca7b:	push   es
  41ca7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca7d:	leave  
  41ca7e:	inc    ebx
  41ca7f:	(bad)  
  41ca80:	fimul  WORD PTR [ecx]
  41ca82:	xor    al,0x8d
  41ca84:	out    dx,al
  41ca85:	xchg   DWORD PTR [edx-0x18f62bcc],eax
  41ca8b:	pop    ecx
  41ca8c:	sub    BYTE PTR [edi+0x6b],bh
  41ca8f:	ror    al,0xb1
  41ca92:	jge    0x41cae8
  41ca94:	shl    BYTE PTR [edi],0xdf
  41ca97:	shl    bh,0xa9
  41ca9a:	rol    BYTE PTR [ebx-0x2b],cl
  41ca9d:	jle    0x41cb0a
  41ca9f:	shr    BYTE PTR [eax+0x5545db1],0x22
  41caa6:	lahf   
  41caa7:	cmp    edx,DWORD PTR ds:0xd7308e0a
  41caad:	or     edi,esp
  41caaf:	mov    es,WORD PTR [edi-0x66]
  41cab2:	cmp    al,cl
  41cab4:	and    DWORD PTR [edx-0x517e5801],0x6afc
  41cabe:	popf   
  41cabf:	add    eax,0x7153c75d
  41cac4:	jge    0x41cabb
  41cac6:	push   ebx
  41cac7:	mov    WORD PTR [edi+0x4fae9415],cs
  41cacd:	add    edi,esp
  41cacf:	or     DWORD PTR [eax],eax
  41cad1:	jmp    0xe5b53c28
  41cad6:	(bad)  
  41cad7:	scas   eax,DWORD PTR es:[edi]
  41cad8:	jmp    0xc6b30bc8
  41cadd:	sub    ebx,ebp
  41cadf:	or     DWORD PTR [ebx+0x72],edx
  41cae2:	jp     0x41cb14
  41cae4:	in     al,dx
  41cae5:	dec    ebp
  41cae6:	fimul  DWORD PTR [ecx]
  41cae8:	add    BYTE PTR [edx],bh
  41caea:	jl     0x41ca70
  41caec:	adc    BYTE PTR [ebp+0x19fcae53],0xb9
  41caf3:	sbb    eax,0xa1d92978
  41caf8:	pop    edi
  41caf9:	jle    0x41cb10
  41cafb:	scas   al,BYTE PTR es:[edi]
  41cafc:	sub    DWORD PTR [ecx-0x16137a3b],0xffffffd6
  41cb03:	or     DWORD PTR [ebx-0x34b999c],ecx
  41cb09:	xchg   esi,eax
  41cb0a:	xchg   BYTE PTR [edx+eax*4-0x3526cab],al
  41cb11:	sbb    DWORD PTR [ebx+ebx*1+0xa16d5e0],edx
  41cb18:	mov    ebp,DWORD PTR [esi+eax*2-0x4b]
  41cb1c:	cld    
  41cb1d:	outs   dx,BYTE PTR ds:[esi]
  41cb1e:	push   es
  41cb1f:	scas   eax,DWORD PTR es:[edi]
  41cb20:	jb     0x41cb13
  41cb22:	add    BYTE PTR [eax],al
  41cb24:	pop    ebx
  41cb25:	dec    ebx
  41cb26:	or     cl,dl
  41cb28:	jmp    0x5fa2:0x6e94031
  41cb2f:	sbb    dl,BYTE PTR [ebp+ebp*4+0x1cb80080]
  41cb36:	jg     0x41cb30
  41cb38:	ret    
  41cb39:	sbb    DWORD PTR [ebx+ebp*4+0x50000c6c],eax
  41cb40:	ret    
  41cb41:	test   DWORD PTR [edi],0xfa38f98d
  41cb47:	inc    ebx
  41cb49:	pop    esp
  41cb4a:	call   0xfc0bc478
  41cb4f:	jmp    FWORD PTR [ecx+0x4]
  41cb52:	mov    bl,al
  41cb54:	in     al,0xd1
  41cb56:	inc    ebx
  41cb57:	inc    DWORD PTR [ebx-0x79]
  41cb5a:	xlat   BYTE PTR ds:[ebx]
  41cb5b:	push   gs
  41cb5d:	cmp    esp,0xffffffff
  41cb60:	cmp    al,0x7f
  41cb62:	xor    DWORD PTR [ecx+esi*1-0x7baf0490],0x2c407491
  41cb6d:	xor    ecx,DWORD PTR [ebx]
  41cb6f:	add    esp,edi
  41cb71:	or     ecx,DWORD PTR [ecx-0x48c5743]
  41cb77:	jmp    DWORD PTR [esi+ebp*4]
  41cb7a:	inc    DWORD PTR cs:[ebx+0x4e]
  41cb7e:	push   ebp
  41cb7f:	and    DWORD PTR [eax+esi*2],0x7a
  41cb83:	les    ax,DWORD PTR [ecx]
  41cb86:	std    
  41cb87:	inc    DWORD PTR [eax]
  41cb89:	add    ah,ch
  41cb8b:	cwde   
  41cb8c:	xor    DWORD PTR [ecx+eax*2-0x2baf0490],0xbc407521
  41cb97:	jo     0x41cbaa
  41cb99:	add    al,0x9d
  41cb9b:	dec    ebx
  41cb9c:	add    BYTE PTR [eax-0x7f],cl
  41cb9f:	or     ebp,edi
  41cba1:	(bad)  
  41cba2:	mov    esp,0x786a42f8
  41cba7:	mov    esp,0x2f798dfb
  41cbac:	push   esp
  41cbad:	push   eax
  41cbae:	aad    0x57
  41cbb0:	pop    ss
  41cbb1:	sbb    bl,ch
  41cbb3:	pusha  
  41cbb4:	add    BYTE PTR [ecx-0x400e4a6f],al
  41cbba:	sti    
  41cbbb:	cmp    DWORD PTR [edi-0x14],eax
  41cbbe:	and    ah,BYTE PTR [esi]
  41cbc0:	inc    edi
  41cbc1:	mov    esp,0x828f9805
  41cbc6:	inc    ecx
  41cbc7:	jmp    0x41cb85
  41cbc9:	cld    
  41cbca:	add    eax,0x58b3871e
  41cbcf:	sbb    BYTE PTR [ebp+0x7c661a4f],bh
  41cbd5:	inc    ebx
  41cbd6:	aad    0xa0
  41cbd8:	add    ch,al
  41cbda:	cwde   
  41cbdb:	sbb    BYTE PTR [ebx],al
  41cbdd:	add    ch,dl
  41cbdf:	mov    al,ds:0xa03007a8
  41cbe4:	mov    ebp,0xc40c0df4
  41cbe9:	hlt    
  41cbea:	std    
  41cbeb:	fisttp DWORD PTR [edx]
  41cbed:	mov    eax,DWORD PTR [eax]
  41cbef:	add    BYTE PTR [eax-0x73],dl
  41cbf2:	mov    edi,0xabf112fc
  41cbf7:	inc    edi
  41cbf8:	inc    ebx
  41cbf9:	enter  0x31bd,0x15
  41cbfd:	adc    BYTE PTR [ecx-0x39],bl
  41cc00:	pop    ss
  41cc01:	popf   
  41cc02:	add    BYTE PTR [ebx+0x5e],dl
  41cc05:	ins    DWORD PTR es:[edi],dx
  41cc06:	sub    ebx,0xfe475ec5
  41cc0c:	aam    0x25
  41cc0e:	shl    DWORD PTR [ebx+0x5a],0xf3
  41cc12:	push   ebp
  41cc13:	push   ebp
  41cc14:	pusha  
  41cc15:	sbb    DWORD PTR [edi+eax*4],ecx
  41cc18:	adc    BYTE PTR ds:0xe54c048a,ch
  41cc1e:	mov    bl,0x82
  41cc20:	xchg   ebp,eax
  41cc21:	lods   al,BYTE PTR ds:[esi]
  41cc22:	push   ds
  41cc23:	mov    DWORD PTR [edx],ebp
  41cc25:	cmp    DWORD PTR [esi],ecx
  41cc27:	mov    dh,0xa
  41cc29:	or     ch,bl
  41cc2b:	mov    bl,BYTE PTR [eax-0x65415c39]
  41cc31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc32:	adc    DWORD PTR [ebx-0x6e],0xe8bb69ae
  41cc39:	cmp    ebp,DWORD PTR [esi-0x694de870]
  41cc3f:	sub    DWORD PTR ds:0xff55d524,edx
  41cc45:	scas   al,BYTE PTR es:[edi]
  41cc46:	sub    eax,0xa7188918
  41cc4b:	add    edx,DWORD PTR [esi-0x37]
  41cc4e:	xchg   edx,eax
  41cc4f:	icebp  
  41cc50:	in     al,dx
  41cc51:	or     DWORD PTR [edx-0x3e],ebp
  41cc54:	add    BYTE PTR [eax],al
  41cc56:	dec    ebp
  41cc57:	pop    edx
  41cc58:	push   cs
  41cc59:	cmp    BYTE PTR [ebp+0x57],al
  41cc5c:	xchg   ecx,eax
  41cc5d:	mov    esi,0x14831441
  41cc62:	xchg   ebp,eax
  41cc63:	or     DWORD PTR [ebx+eax*8-0x5a],ebp
  41cc67:	add    eax,0x8284825
  41cc6c:	je     0x41ccb5
  41cc6e:	sbb    eax,0x1d37de59
  41cc73:	and    esi,ebp
  41cc75:	push   ebp
  41cc76:	jg     0x41cc26
  41cc78:	int    0x17
  41cc7a:	sub    DWORD PTR [eax],ebx
  41cc7c:	daa    
  41cc7d:	add    al,0x55
  41cc7f:	sub    al,0xbe
  41cc81:	add    al,0x86
  41cc83:	add    eax,0x8f347ad
  41cc88:	push   0xffffffc5
  41cc8a:	fisubr DWORD PTR [esi+0x7c67b833]
  41cc90:	cmp    eax,0x2b837c5e
  41cc95:	mov    esi,0x5534c99b
  41cc9a:	pop    esp
  41cc9b:	mov    al,0x71
  41cc9d:	mov    bl,0x4d
  41cc9f:	(bad)  
  41cca0:	fcmovbe st,st(1)
  41cca2:	adc    eax,0xb1e000a
  41cca7:	mov    ds:0x9d11a2e,al
  41ccac:	xor    DWORD PTR [eax],esi
  41ccae:	sahf   
  41ccaf:	pop    esp
  41ccb0:	daa    
  41ccb1:	cmp    edx,DWORD PTR [edx+ecx*1]
  41ccb4:	jae    0x41cca5
  41ccb6:	pop    edi
  41ccb7:	je     0x41cce0
  41ccb9:	cmp    eax,DWORD PTR [eax]
  41ccbb:	add    BYTE PTR [edx+ecx*1],dl
  41ccbe:	sub    DWORD PTR [eax],0xe1f68acd
  41ccc4:	les    ebx,FWORD PTR [edi+0x5895975c]
  41ccca:	mov    DWORD PTR ds:0x72565b06,edi
  41ccd0:	stos   BYTE PTR es:[edi],al
  41ccd1:	std    
  41ccd2:	xor    BYTE PTR [edx+0x64],al
  41ccd5:	les    edi,FWORD PTR [eax]
  41ccd7:	sbb    cl,BYTE PTR [ebx]
  41ccd9:	adc    cl,BYTE PTR [ecx-0x4075215c]
  41ccdf:	cmc    
  41cce0:	aas    
  41cce1:	push   ebp
  41cce2:	hlt    
  41cce3:	jne    0x41ccd0
  41cce5:	test   BYTE PTR [edi-0xb],dl
  41cce8:	pop    esi
  41cce9:	adc    eax,0xfd116a3f
  41ccee:	cmp    BYTE PTR [edi-0x5877641c],dh
  41ccf4:	in     eax,dx
  41ccf5:	leave  
  41ccf6:	and    BYTE PTR [esi],bh
  41ccf8:	mov    edi,0x6e96849
  41ccfd:	lods   eax,DWORD PTR ds:[esi]
  41ccfe:	cld    
  41ccff:	sbb    DWORD PTR [edi+ebx*1+0x29e3befd],esp
  41cd06:	movaps xmm1,xmm3
  41cd09:	xor    bh,0xf2
  41cd0c:	sub    eax,0x83704d39
  41cd11:	lods   eax,DWORD PTR ds:[esi]
  41cd12:	cmp    BYTE PTR [edx+0x1c88f9a0],bl
  41cd18:	loope  0x41cca4
  41cd1a:	vminpd xmm1,xmm3,XMMWORD PTR [esi-0x8]
  41cd1f:	add    BYTE PTR [eax],al
  41cd21:	add    ah,ah
  41cd23:	inc    ecx
  41cd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd25:	inc    ecx
  41cd26:	lods   al,BYTE PTR ds:[esi]
  41cd27:	push   ebp
  41cd28:	sti    
  41cd29:	jbe    0x41cd53
  41cd2b:	popa   
  41cd2c:	cli    
  41cd2d:	dec    edi
  41cd2e:	mov    ebp,0x80c08108
  41cd33:	adc    eax,DWORD PTR [ebp-0x48f50c2]
  41cd39:	inc    ebp
  41cd3a:	sub    BYTE PTR [ecx+0x43f70442],al
  41cd40:	cld    
  41cd41:	xor    DWORD PTR [edx+0x68453718],0xfffffffa
  41cd48:	aad    0x8b
  41cd4a:	inc    ecx
  41cd4b:	cld    
  41cd4c:	xor    al,0x45
  41cd4e:	mov    eax,0x6db007f3
  41cd53:	popa   
  41cd54:	or     dh,BYTE PTR [edx]
  41cd56:	lods   al,BYTE PTR ds:[esi]
  41cd57:	popa   
  41cd58:	pop    es
  41cd59:	mov    edi,DWORD PTR [ecx+0x0]
  41cd5c:	call   0xfbafa80c
  41cd61:	xor    ch,ah
  41cd63:	dec    ebp
  41cd64:	pop    esi
  41cd65:	pop    ebx
  41cd66:	add    eax,0x9d0004cb
  41cd6b:	pushf  
  41cd6c:	into   
  41cd6d:	inc    ebx
  41cd6e:	cmp    al,0x83
  41cd70:	mov    esp,0x1c72874
  41cd75:	aam    0x40
  41cd77:	inc    esp
  41cd78:	add    ah,dl
  41cd7a:	cld    
  41cd7b:	inc    ebp
  41cd7c:	add    bl,ch
  41cd7e:	sub    esp,DWORD PTR ds:0x5afd225
  41cd84:	ret    
  41cd85:	add    eax,0x39600000
  41cd8a:	inc    eax
  41cd8b:	add    BYTE PTR [ecx],cl
  41cd8d:	or     BYTE PTR [edx+0x0],al
  41cd90:	pop    edi
  41cd91:	aad    0xb0
  41cd93:	inc    ebx
  41cd94:	in     al,dx
  41cd95:	and    al,0x35
  41cd97:	shr    BYTE PTR [edi-0x2a1f60fb],cl
  41cd9d:	dec    esp
  41cd9e:	inc    ebp
  41cd9f:	add    BYTE PTR [ecx+eiz*8+0xe],dh
  41cda3:	inc    eax
  41cda4:	aad    0x3f
  41cda6:	mov    ah,0xb3
  41cda8:	push   ss
  41cda9:	mov    eax,ds:0xe0c86b63
  41cdae:	add    esp,DWORD PTR [ecx+0x44f5d5]
  41cdb4:	je     0x41ce27
  41cdb6:	cmovo  edx,ebp
  41cdb9:	jg     0x41cdce
  41cdbb:	mov    bl,0x16
  41cdbd:	mov    eax,ds:0x60e05363
  41cdc2:	add    BYTE PTR [ecx+0x452db5],ah
  41cdc8:	xor    al,0xc5
  41cdca:	cmovo  edx,ebp
  41cdcd:	jg     0x41cdc2
  41cdcf:	mov    dl,0x16
  41cdd1:	mov    eax,ds:0x60c87b63
  41cdd6:	add    BYTE PTR [ecx+0x455615],ah
  41cddc:	je     0x41ce3b
  41cdde:	cmovo  edx,ebp
  41cde1:	aas    
  41cde2:	push   esp
  41cde3:	mov    bl,0x96
  41cde5:	mov    al,ds:0x60e04763
  41cdea:	add    BYTE PTR [ecx-0x124b0000],ah
  41cdf0:	inc    esp
  41cdf1:	add    BYTE PTR [ecx+eiz*1+0xf],dh
  41cdf5:	inc    eax
  41cdf6:	aad    0x7f
  41cdf8:	xor    BYTE PTR [ebx+0x3b63a096],dh
  41cdfe:	call   0x55e2d1e3
  41ce03:	xchg   esi,eax
  41ce04:	inc    ebp
  41ce05:	add    BYTE PTR [esi*8+0x7fd5400e],dh
  41ce0c:	nop
  41ce0d:	mov    dl,0x96
  41ce0f:	mov    al,ds:0xe0c07763
  41ce14:	add    esp,DWORD PTR [ecx+0x465c0a35]
  41ce1a:	aad    0x68
  41ce1c:	sahf   
  41ce1d:	adc    BYTE PTR ds:0x87734a0a,dl
  41ce23:	inc    esi
  41ce24:	out    0x64,eax
  41ce26:	mov    esi,0x74042714
  41ce2b:	leave  
  41ce2c:	xor    eax,DWORD PTR [esi-0x2b]
  41ce2f:	push   0xa151076
  41ce34:	dec    edx
  41ce35:	shl    DWORD PTR [edi+0x46],cl
  41ce38:	out    0x64,eax
  41ce3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce3b:	adc    al,0xa7
  41ce3d:	add    esi,DWORD PTR [ecx+ebp*4]
  41ce40:	fwait
  41ce41:	inc    esi
  41ce42:	aad    0x68
  41ce44:	cmp    dl,BYTE PTR [eax]
  41ce46:	adc    eax,0x47b38a0a
  41ce4b:	inc    esi
  41ce4c:	out    0x64,eax
  41ce4e:	dec    esi
  41ce4f:	adc    eax,0x3a7
  41ce54:	xor    al,0x9
  41ce56:	jne    0x41ce9e
  41ce58:	aad    0x68
  41ce5a:	unpckhps xmm1,XMMWORD PTR ds:[edx]
  41ce5e:	dec    edx
  41ce5f:	adc    ecx,DWORD PTR [ebx-0x199b18ba]
  41ce65:	adc    al,0xa7
  41ce67:	add    esi,DWORD PTR [ecx+ebp*8+0x3c]
  41ce6b:	inc    esi
  41ce6c:	aad    0x68
  41ce6e:	push   ss
  41ce6f:	setne  BYTE PTR [ecx]
  41ce72:	dec    edx
  41ce73:	repz pusha 
  41ce75:	inc    esi
  41ce76:	out    0x64,eax
  41ce78:	inc    esi
  41ce79:	adc    eax,0x49740427
  41ce7e:	xchg   ebp,eax
  41ce7f:	inc    ebp
  41ce80:	aad    0x68
  41ce82:	mov    dl,0x10
  41ce84:	xchg   ebp,eax
  41ce85:	or     DWORD PTR [edx-0x18b9b4ac],ecx
  41ce8b:	(bad)  
  41ce8c:	into   
  41ce8d:	adc    al,0x27
  41ce8f:	add    al,0x34
  41ce91:	sub    DWORD PTR [eax],eax
  41ce93:	jg     0x41ce25
  41ce95:	or     DWORD PTR [edi+0x49c551],ebx
  41ce9b:	dec    edx
  41ce9c:	mov    eax,ds:0x37e94073
  41cea1:	mov    ebp,0x6ad12913
  41cea6:	jg     0x41ceff
  41cea8:	sbb    BYTE PTR [edx],cl
  41ceaa:	lahf   
  41ceab:	ror    ebx,1
  41cead:	dec    ecx
  41ceae:	add    BYTE PTR [edx+0x49],cl
  41ceb1:	pop    edi
  41ceb2:	inc    eax
  41ceb3:	jmp    0x2954cfef
  41ceb8:	add    BYTE PTR [eax],al
  41ceba:	fldcw  WORD PTR [edx-0x61]
  41cebd:	lahf   
  41cebe:	adc    BYTE PTR [edx],cl
  41cec0:	lahf   
  41cec1:	std    
  41cec2:	jecxz  0x41cf0d
  41cec4:	add    BYTE PTR [edx-0x16bfa0ff],cl
  41ceca:	test   DWORD PTR [eax],0x6ad6a913
  41ced0:	mov    edi,0x9f0a1877
  41ced5:	loope  0x41ceb2
  41ced7:	dec    ecx
  41ced8:	add    BYTE PTR [edx-0x16bfa077],cl
  41cede:	neg    DWORD PTR [ebx+edx*1-0x57]
  41cee2:	(bad)  
  41cee3:	push   0xffffffdf
  41cee5:	pop    edi
  41cee6:	nop
  41cee7:	or     DWORD PTR [edi+0x49e805],ebx
  41ceed:	dec    edx
  41ceee:	sbb    DWORD PTR [edi+0x40],0x1388b7e9
  41cef5:	test   eax,0x35ff6ad6
  41cefa:	cwde   
  41cefb:	or     DWORD PTR [edi+0x49c1bd],ebx
  41cf01:	mov    ah,dh
  41cf03:	pop    esi
  41cf04:	inc    eax
  41cf05:	jmp    0x29559b81
  41cf0a:	fldcw  WORD PTR [edx+0x1f]
  41cf0d:	add    BYTE PTR [ebx+0x4d],bh
  41cf10:	add    BYTE PTR [ecx+0x401944],ah
  41cf16:	pop    edi
  41cf17:	popf   
  41cf18:	mov    bl,0x43
  41cf1a:	in     al,dx
  41cf1b:	sub    esp,ebp
  41cf1d:	adc    eax,DWORD PTR [eax]
  41cf1f:	add    BYTE PTR [ebp+ecx*1+0x4e2b409f],ch
  41cf26:	add    BYTE PTR [ecx+0x401870],ah
  41cf2c:	(bad)  
  41cf2e:	mov    bl,0x43
  41cf30:	lods   al,BYTE PTR ds:[esi]
  41cf31:	sub    esp,DWORD PTR [ecx-0x60f203ec]
  41cf37:	pusha  
  41cf38:	jmp    0x41cf87
  41cf3a:	add    BYTE PTR [ecx+0x3ffd50],ah
  41cf40:	dec    edi
  41cf41:	fdiv   QWORD PTR [edx+0xd2b7c43]
  41cf47:	adc    eax,0x809f0c3c
  41cf4c:	imul   ecx,DWORD PTR [ebp+0x0],0xffffffa1
  41cf50:	in     al,dx
  41cf51:	sbb    BYTE PTR [eax+0x0],al
  41cf54:	pop    edi
  41cf55:	jl     0x41cf0a
  41cf57:	inc    ebx
  41cf58:	jl     0x41cf85
  41cf5a:	mov    ch,0x14
  41cf5c:	sub    al,0xc
  41cf5e:	lahf   
  41cf5f:	mov    al,ds:0xa1004dfb
  41cf64:	int3   
  41cf65:	sbb    BYTE PTR [eax+0x0],al
  41cf68:	lahf   
  41cf69:	sbb    al,0xb4
  41cf6b:	inc    ebx
  41cf6c:	sub    al,0x2b
  41cf6e:	and    DWORD PTR ds:0xc09f0c6c,edx
  41cf74:	jmp    0x41cfc3
  41cf76:	add    BYTE PTR [ecx+0x401890],ah
  41cf7c:	(bad)  
  41cf7d:	mov    esp,0x2d2c43b3
  41cf82:	fst    QWORD PTR [ebx]
  41cf84:	add    BYTE PTR [eax],al
  41cf86:	mov    esp,0xd5e09f0d
  41cf8b:	xchg   DWORD PTR [eax+0x0],eax
  41cf8e:	xor    al,0x5a
  41cf90:	adc    BYTE PTR [eax-0x2b],al
  41cf93:	xchg   ebx,eax
  41cf94:	mov    bl,0xb4
  41cf96:	xchg   esi,eax
  41cf97:	mov    dl,0x63
  41cf99:	mov    edi,0xa103f2c1
  41cf9e:	aad    0x1a
  41cfa0:	inc    ecx
  41cfa1:	add    BYTE PTR [edx+ebx*2],dh
  41cfa4:	cmovo  edx,ebp
  41cfa7:	push   ebx
  41cfa8:	adc    al,0xb8
  41cfaa:	push   ss
  41cfab:	mov    cl,0x63
  41cfad:	scas   eax,DWORD PTR es:[edi]
  41cfae:	jmp    0xf5e2d3a3
  41cfb3:	dec    eax
  41cfb4:	inc    ecx
  41cfb5:	add    BYTE PTR [ebp+eiz*8+0xf],dh
  41cfb9:	inc    eax
  41cfba:	aad    0x53
  41cfbc:	hlt    
  41cfbd:	mov    bh,0x16
  41cfbf:	mov    cl,0x63
  41cfc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc2:	lds    esi,FWORD PTR [eax+0x0]
  41cfc5:	push   0xffffffcd
  41cfc7:	mov    eax,0xb116b3d0
  41cfcc:	popa   
  41cfcd:	aas    
  41cfce:	cmp    eax,0xd2e80074
  41cfd3:	dec    ebp
  41cfd4:	mov    ch,0xfc
  41cfd6:	xchg   esi,eax
  41cfd7:	test   BYTE PTR [edx-0x77],cl
  41cfda:	mov    al,ds:0xd5401188
  41cfdf:	enter  0x776c,0x15
  41cfe3:	mov    cl,0x4d
  41cfe5:	std    
  41cfe6:	sub    edi,DWORD PTR [ecx-0x38]
  41cfe9:	ja     0x41cfeb
  41cfeb:	add    BYTE PTR [ebp-0x5a5eb250],dl
  41cff1:	cmp    BYTE PTR [ecx+0x0],al
  41cff4:	cmp    al,BYTE PTR [edi]
  41cff6:	sub    al,0xd4
  41cff8:	lods   eax,DWORD PTR ds:[esi]
  41cff9:	jo     0x41cffb
  41cffb:	push   ebp
  41cffc:	jbe    0x41cf8f
  41cffe:	js     0x41d040
  41d000:	aad    0xb7
  41d002:	retf   0xf967
  41d005:	or     DWORD PTR [edi+0x44],ebx
  41d008:	aad    0x3e
  41d00a:	mov    dh,BYTE PTR [ebx]
  41d00c:	dec    ebp
  41d00d:	dec    ebx
  41d00e:	out    0xb6,eax
  41d010:	sub    BYTE PTR [edx],dh
  41d012:	ret    
  41d013:	cmp    edx,DWORD PTR [ebp+0x72631e09]
  41d019:	popa   
  41d01a:	sub    DWORD PTR [eax+ebp*8],eax
  41d01d:	mov    edi,0x396d0140
  41d022:	outs   dx,DWORD PTR ds:[esi]
  41d023:	inc    edx
  41d024:	aad    0x6a
  41d026:	jbe    0x41d0a3
  41d028:	adc    eax,0xce748f0a
  41d02d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d02e:	xchg   ebp,eax
  41d02f:	mov    DWORD PTR [edx-0x9d04e73],ebp
  41d035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d036:	mov    ebx,0xe74a6a9b
  41d03b:	mov    dl,BYTE PTR [ecx+0x6a8bbba6]
  41d041:	dec    edx
  41d042:	out    0xb6,eax
  41d044:	out    0x21,eax
  41d046:	lahf   
  41d047:	inc    edx
  41d048:	aad    0xa6
  41d04a:	adc    ebp,DWORD PTR [ecx*2+0xb6e74a]
  41d051:	add    bh,al
  41d053:	inc    ecx
  41d054:	pop    DWORD PTR [edx-0x2b]
  41d057:	mov    cl,0x8e
  41d059:	mov    ds:0x899ca671,eax
  41d05e:	xchg   ebp,eax
  41d05f:	inc    edx
  41d060:	sub    cl,BYTE PTR [edx-0x3c9bf1e8]
  41d066:	out    0x12,al
  41d068:	mov    bh,0xb6
  41d06a:	out    0xf5,eax
  41d06c:	test   DWORD PTR [ebx-0x2b],0x42ff8c8a
  41d073:	xchg   ebx,eax
  41d074:	in     al,0x80
  41d076:	jp     0x41d095
  41d078:	icebp  
  41d079:	push   ebx
  41d07a:	xor    ah,bh
  41d07c:	adc    DWORD PTR cs:[ebp+0x6a0009],edx
  41d083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d084:	rol    DWORD PTR [ecx-0x16ffec2a],0xbe
  41d08b:	popa   
  41d08c:	bound  ebp,QWORD PTR [edx]
  41d08e:	shl    DWORD PTR [ecx+0x9d69c26],1
  41d094:	xor    esi,ecx
  41d096:	dec    esi
  41d097:	and    esp,eax
  41d099:	jo     0x41d045
  41d09b:	lods   eax,DWORD PTR ds:[esi]
  41d09c:	imul   ebp,ebx,0x2c8b3c99
  41d0a2:	cmp    DWORD PTR [esi-0x3],edx
  41d0a5:	xor    al,0xcd
  41d0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a8:	xor    al,ch
  41d0aa:	mov    ds:0x8013004a,eax
  41d0af:	xchg   edx,eax
  41d0b0:	xor    bl,ch
  41d0b2:	out    0x49,eax
  41d0b4:	add    BYTE PTR [esi-0x77750000],cl
  41d0ba:	mov    edi,0xffc432f6
  41d0bf:	call   0x1e44009a
  41d0c4:	adc    BYTE PTR [ecx-0x58fe7abe],dl
  41d0ca:	jb     0x41d0c1
  41d0cc:	dec    ecx
  41d0cd:	fcomp  st(7)
  41d0cf:	aaa    
  41d0d0:	adc    al,0xa
  41d0d2:	push   0x56
  41d0d4:	dec    eax
  41d0d5:	mov    edi,0x8dd02982
  41d0da:	ret    
  41d0db:	jmp    0xe8abdab6
  41d0e0:	out    dx,al
  41d0e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0e2:	(bad)  
  41d0e3:	call   0xf61e82be
  41d0e8:	and    DWORD PTR [esi-0x67769379],esp
  41d0ee:	cld    
  41d0ef:	push   ds
  41d0f0:	mov    BYTE PTR [eax-0x5977e312],cl
  41d0f6:	push   cs
  41d0f7:	loope  0x41d0cf
  41d0f9:	or     ebp,eax
  41d0fb:	add    cl,al
  41d0fd:	pusha  
  41d0fe:	icebp  
  41d0ff:	jmp    FWORD PTR [ebx]
  41d101:	add    al,BYTE PTR [eax]
  41d103:	add    BYTE PTR [esp+ecx*4],ch
  41d106:	cmp    ebp,0xe8fb5e21
  41d10c:	mov    eax,0x87fffba4
  41d111:	jecxz  0x41d0f2
  41d113:	mov    DWORD PTR [ecx-0x3b],esi
  41d116:	repnz dec DWORD PTR [ebx]
  41d119:	xchg   edx,eax
  41d11a:	inc    ecx
  41d11b:	in     al,0x0
  41d11d:	add    BYTE PTR [ebp+0x23],ah
  41d120:	sub    dh,dh
  41d122:	sub    ebx,DWORD PTR [esi-0x77]
  41d125:	mov    ch,0xf4
  41d127:	pop    esi
  41d128:	sti    
  41d129:	call   DWORD PTR [esi+ebp*4]
  41d12c:	mov    bl,0xff
  41d12e:	jnp    0x41d0bb
  41d130:	mov    ecx,0xfb5d61f0
  41d135:	mov    eax,DWORD PTR [eax+esi*2+0x5d4bba4b]
  41d13c:	xchg   esi,eax
  41d13e:	int3   
  41d13f:	jne    0x41d157
  41d141:	mov    ecx,0x85c35e2b
  41d146:	inc    eax
  41d147:	pop    esi
  41d148:	sti    
  41d149:	push   DWORD PTR [eax+0x3b000008]
  41d14f:	test   DWORD PTR [edi],0xd3917c00
  41d155:	lea    esp,[ecx+0x58]
  41d158:	icebp  
  41d159:	dec    DWORD PTR [ebx]
  41d15b:	mov    WORD PTR [ecx-0x4a1e52c],es
  41d161:	call   0x3d6eb0
  41d166:	out    dx,eax
  41d167:	add    edi,esp
  41d169:	add    bh,dh
  41d16b:	repz pop es
  41d16d:	push   DWORD PTR [edx+0x10]
  41d170:	push   0x0
  41d172:	jmp    0x41d16a
  41d174:	add    edi,edi
  41d176:	aad    0xa5
  41d178:	sbb    BYTE PTR [esi],dl
  41d17a:	xchg   ebp,eax
  41d17b:	mov    dl,0x7f
  41d17d:	ret    
  41d17e:	loope  0x41d103
  41d180:	test   DWORD PTR [edx-0x62db0000],eax
  41d186:	mov    al,0xfc
  41d188:	test   DWORD PTR [ebx-0x42e5fbd5],ebx
  41d18e:	adc    BYTE PTR [esi],dl
  41d190:	xchg   ebp,eax
  41d191:	mov    dl,0x85
  41d193:	ret    
  41d194:	fldcw  WORD PTR [edi]
  41d196:	aas    
  41d197:	cld    
  41d198:	add    al,BYTE PTR [edx-0x3716fe]
  41d19e:	ret    
  41d19f:	aas    
  41d1a0:	push   ss
  41d1a1:	pop    ss
  41d1a2:	daa    
  41d1a3:	call   0xfcf1c6fe
  41d1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1a9:	jb     0x41d146
  41d1ab:	dec    esi
  41d1ac:	and    DWORD PTR [ecx-0x4f223e00],esi
  41d1b2:	push   edi
  41d1b3:	mov    DWORD PTR [ecx-0x27205fce],edi
  41d1b9:	mov    al,0x0
  41d1bb:	push   esi
  41d1bc:	and    al,BYTE PTR [esi+0x6f]
  41d1bf:	pop    ds
  41d1c0:	scas   eax,DWORD PTR es:[edi]
  41d1c1:	mov    WORD PTR [eax+0x3f831e7],?
  41d1c7:	add    BYTE PTR [esi-0x1a],cl
  41d1ca:	ja     0x41d1c4
  41d1cc:	call   0xb0:0xd8e01c34
  41d1d3:	mov    DWORD PTR [edx-0x7dafff49],edx
  41d1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1da:	or     BYTE PTR [esi],dl
  41d1dc:	adc    eax,0xe1c385b1
  41d1e1:	xor    eax,0x19d773cd
  41d1e6:	cmc    
  41d1e7:	xor    BYTE PTR [eax],al
  41d1e9:	add    BYTE PTR [ebp-0x35a345ca],dl
  41d1ef:	cmp    al,0xc4
  41d1f1:	pop    ebp
  41d1f2:	sbb    al,0xa
  41d1f4:	sub    bl,BYTE PTR [ecx+esi*8]
  41d1f7:	or     bh,ah
  41d1f9:	add    ebp,DWORD PTR [ebp-0x2ab9748f]
  41d1ff:	mov    cl,0x22
  41d201:	ja     0x41d236
  41d203:	mov    ds:0x1d53b9b9,eax
  41d208:	sbb    eax,DWORD PTR [ecx-0x4d694269]
  41d20e:	(bad)  
  41d20f:	in     eax,dx
  41d210:	xlat   BYTE PTR ds:[ebx]
  41d211:	inc    ebx
  41d212:	aad    0x39
  41d214:	out    0x18,al
  41d216:	mov    ecx,0x4c0426f6
  41d21b:	ret    0xd211
  41d21e:	leave  
  41d21f:	lea    ebx,[edi+0x9d503]
  41d225:	cmp    DWORD PTR [ecx],eax
  41d227:	and    al,0x1
  41d229:	jg     0x41d1c9
  41d22b:	push   esi
  41d22c:	imul   esi,DWORD PTR [edx+0x640f166],0x3d
  41d233:	call   0x189e:0x3ad5441e
  41d23a:	xor    edi,esi
  41d23c:	es add al,0x56
  41d23f:	leave  
  41d240:	adc    ebx,DWORD PTR [edx]
  41d242:	pop    esi
  41d243:	cmp    ch,bl
  41d245:	sub    BYTE PTR [edi],0xc2
  41d248:	mov    ds,edx
  41d24a:	(bad)  
  41d24b:	or     edi,esp
  41d24d:	mov    BYTE PTR [eax],al
  41d24f:	add    BYTE PTR [edx+0x1c],bl
  41d252:	out    0x7e,al
  41d254:	pop    ss
  41d255:	ret    0xc36b
  41d258:	pop    es
  41d259:	adc    ah,BYTE PTR [ebp-0x2d41f812]
  41d25f:	mov    esi,0x4860066d
  41d264:	xchg   ecx,eax
  41d265:	ss inc esi
  41d267:	sbb    BYTE PTR [ecx-0x9],bl
  41d26a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d26b:	add    edx,DWORD PTR [esp+0x0]
  41d26f:	adc    eax,0x6a7b1dd6
  41d274:	add    eax,0xf9dfcc6
  41d279:	gs push cs
  41d27b:	icebp  
  41d27c:	(bad)  
  41d27d:	or     DWORD PTR [ebp-0x26],edx
  41d280:	or     edi,DWORD PTR [ecx]
  41d282:	push   ecx
  41d283:	sbb    edx,0x43
  41d286:	push   esi
  41d287:	push   es
  41d288:	in     eax,dx
  41d289:	(bad)  
  41d28c:	(bad)  
  41d28d:	adc    al,BYTE PTR [eax-0x17]
  41d290:	cdq    
  41d291:	inc    edi
  41d292:	fdiv   DWORD PTR [edx+0x7157161b]
  41d298:	call   0x503d:0x453c86a8
  41d29f:	bound  ecx,QWORD PTR [edx-0x3531aeef]
  41d2a5:	stc    
  41d2a6:	adc    eax,0xc388d129
  41d2ab:	in     eax,dx
  41d2ac:	pop    edi
  41d2ad:	push   edi
  41d2ae:	retf   
  41d2af:	mov    bh,0x24
  41d2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b2:	mov    BYTE PTR [esi-0x65b00000],dl
  41d2b8:	mov    ch,BYTE PTR [ebp+edx*4-0x61]
  41d2bc:	cld    
  41d2bd:	sahf   
  41d2be:	popa   
  41d2bf:	or     al,0x3d
  41d2c1:	xchg   esi,eax
  41d2c2:	test   dl,bl
  41d2c4:	mov    edi,0xda101d0
  41d2c9:	pop    ebp
  41d2ca:	xchg   ecx,eax
  41d2cb:	mov    DWORD PTR [edx-0x76],eax
  41d2ce:	inc    eax
  41d2cf:	push   es
  41d2d0:	xor    DWORD PTR [ecx+0x488cb11],ebp
  41d2d6:	jno    0x41d262
  41d2d8:	dec    edx
  41d2d9:	gs inc esp
  41d2db:	sahf   
  41d2dc:	jb     0x41d31f
  41d2de:	inc    esp
  41d2df:	cld    
  41d2e0:	sub    edi,eax
  41d2e2:	push   ss
  41d2e3:	or     bh,ch
  41d2e5:	aam    0xa2
  41d2e7:	sahf   
  41d2e8:	adc    al,BYTE PTR [eax]
  41d2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2eb:	idiv   DWORD PTR [edi]
  41d2ed:	add    dh,ah
  41d2ef:	dec    eax
  41d2f0:	fucomip st,st(3)
  41d2f2:	outs   dx,BYTE PTR ds:[esi]
  41d2f3:	xchg   edi,eax
  41d2f4:	mov    esp,0xfe1633e8
  41d2f9:	(bad)  
  41d2fa:	(bad)  
  41d2fb:	adc    DWORD PTR [eax],eax
  41d2fd:	scas   eax,DWORD PTR es:[edi]
  41d2fe:	inc    esi
  41d2ff:	and    al,0x34
  41d301:	push   ds
  41d302:	imul   edx,DWORD PTR gs:[esi+ebx*1-0x44],0xcba9b3e8
  41d30b:	xchg   edi,eax
  41d30c:	and    DWORD PTR [ecx],0x24
  41d30f:	pushf  
  41d310:	mov    edx,gs
  41d312:	ss jns 0x41d36d
  41d315:	pop    eax
  41d316:	or     DWORD PTR [esi+0x7e47],0xffffffbd
  41d31d:	jmp    FWORD PTR [edi]
  41d31f:	cmp    eax,0x7ab3e76d
  41d324:	and    BYTE PTR [ecx+esi*4],al
  41d327:	(bad)  
  41d328:	jnp    0x41d39c
  41d32a:	(bad)  
  41d32b:	repz jbe 0x41d323
  41d32e:	mov    ebp,0xab012379
  41d333:	cmc    
  41d334:	out    dx,al
  41d335:	mov    eax,0x6b3dfab0
  41d33a:	out    dx,al
  41d33b:	int    0xb8
  41d33d:	daa    
  41d33e:	mov    ebp,0x9d8e7dfd
  41d343:	adc    bh,BYTE PTR [edi]
  41d345:	test   al,0xb0
  41d347:	jno    0x41d3c4
  41d349:	cmp    ch,BYTE PTR ds:0x32fe293a
  41d34f:	add    ah,BYTE PTR [edx-0x5d6f4705]
  41d355:	xchg   edi,eax
  41d356:	inc    edi
  41d357:	out    dx,eax
  41d358:	xchg   ecx,eax
  41d359:	loope  0x41d34e
  41d35b:	cli    
  41d35c:	xchg   BYTE PTR ds:0xef598636,ch
  41d362:	pop    ebx
  41d363:	cld    
  41d364:	aad    0xff
  41d366:	lea    ecx,[eax-0x1c]
  41d369:	push   0xa0c55bf5
  41d36e:	mov    cl,BYTE PTR [eax-0x28]
  41d371:	(bad)  
  41d372:	sbb    eax,0x318d333d
  41d377:	aaa    
  41d378:	shl    DWORD PTR [esi+0x24],1
  41d37b:	mov    ah,0x4f
  41d37d:	jns    0x41d3d6
  41d37f:	add    BYTE PTR [eax],al
  41d381:	add    al,bl
  41d383:	and    BYTE PTR [ecx-0x23b48d],0xb2
  41d38a:	fdiv   st,st(6)
  41d38c:	sbb    eax,0x7e01e83d
  41d391:	inc    edi
  41d392:	inc    ecx
  41d393:	and    BYTE PTR [ebx-0x236220d1],cl
  41d399:	ss push ebx
  41d39b:	inc    ebp
  41d39c:	ss in  al,0x3c
  41d39f:	cmp    edi,ebp
  41d3a1:	add    bl,al
  41d3a3:	inc    eax
  41d3a4:	mov    ds:0x8a1e4b73,eax
  41d3a9:	mov    esi,0x8fe3bde7
  41d3ae:	sti    
  41d3af:	cmp    DWORD PTR [esi+0x3d],0x3489dfc2
  41d3b6:	fwait
  41d3b7:	sub    eax,0xef1fc87f
  41d3bc:	mov    ebx,ebx
  41d3be:	stc    
  41d3bf:	xor    BYTE PTR [edi],ah
  41d3c1:	mov    ah,0x4a
  41d3c3:	inc    dx
  41d3c5:	test   al,0x6f
  41d3c7:	mov    bl,BYTE PTR [esi-0x75cd93a1]
  41d3cd:	sahf   
  41d3ce:	mov    edi,0x1cb3e740
  41d3d3:	out    0x1a,al
  41d3d5:	aaa    
  41d3d6:	pop    ebx
  41d3d7:	dec    esi
  41d3d8:	das    
  41d3d9:	in     al,0xe7
  41d3db:	rcl    ecx,0x48
  41d3de:	ror    BYTE PTR [ecx],1
  41d3e0:	sbb    BYTE PTR [eax],ch
  41d3e2:	and    BYTE PTR [eax+0xe4ea],bl
  41d3e8:	dec    edx
  41d3e9:	lods   al,BYTE PTR ds:[esi]
  41d3ea:	aaa    
  41d3eb:	sub    DWORD PTR [eax+0x5089cd4d],0x71eb24e4
  41d3f5:	sbb    ebx,eax
  41d3f7:	jmp    0x41d38d
  41d3f9:	adc    ah,bh
  41d3fb:	pop    eax
  41d3fc:	pop    esp
  41d3fd:	scas   al,BYTE PTR es:[edi]
  41d3fe:	addr16 mov al,ds:0xa7e
  41d402:	out    0x3,eax
  41d404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d405:	aaa    
  41d406:	mov    dh,0x19
  41d408:	leave  
  41d409:	mov    WORD PTR [ebx+0x3949bacb],gs
  41d40f:	inc    ebx
  41d410:	aad    0xda
  41d412:	and    DWORD PTR [esi+0x22],ebp
  41d415:	movntq QWORD PTR [ebx],mm0
  41d418:	test   DWORD PTR [eax+0x155bab93],edx
  41d41e:	jmp    0x41d3ce
  41d420:	out    0xf9,eax
  41d422:	cld    
  41d423:	inc    ebx
  41d424:	aad    0x8a
  41d426:	mov    ds:0x3a37a5ff,al
  41d42b:	sbb    al,0xd9
  41d42d:	or     edi,esp
  41d42f:	sti    
  41d430:	pop    edi
  41d431:	inc    ebp
  41d432:	lahf   
  41d433:	push   ebx
  41d434:	outs   dx,DWORD PTR ds:[esi]
  41d435:	sahf   
  41d436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d437:	dec    eax
  41d438:	cmc    
  41d439:	or     bh,ah
  41d43b:	add    edx,ebp
  41d43d:	sahf   
  41d43e:	shl    ebx,cl
  41d440:	fisttp DWORD PTR [ecx-0x19]
  41d443:	jp     0x41d40f
  41d445:	nop
  41d446:	sbb    edi,DWORD PTR [eax+0xb1aa2fd]
  41d44c:	add    BYTE PTR [eax],al
  41d44e:	or     edi,DWORD PTR [ebx]
  41d450:	cmp    bl,BYTE PTR [edx]
  41d452:	shl    DWORD PTR [esi],cl
  41d454:	xchg   BYTE PTR [eax],bl
  41d456:	in     eax,dx
  41d457:	clc    
  41d458:	es add al,0x52
  41d45b:	inc    esp
  41d45c:	add    BYTE PTR [ecx+0x7f],dh
  41d45f:	leave  
  41d460:	jb     0x41d432
  41d462:	push   ebp
  41d463:	sbb    esi,esp
  41d465:	push   ecx
  41d466:	jmp    0xf41b:0x555efc9d
  41d46d:	inc    ecx
  41d46e:	jb     0x41d412
  41d470:	cld    
  41d471:	dec    esi
  41d472:	fs pop esi
  41d474:	pop    esp
  41d475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d476:	(bad)  
  41d478:	shl    ecx,0xd6
  41d47b:	popa   
  41d47c:	div    DWORD PTR [ecx-0x73c7f66a]
  41d482:	dec    edx
  41d483:	sbb    eax,DWORD PTR [ebx]
  41d485:	popa   
  41d486:	push   0x1a
  41d488:	inc    eax
  41d489:	jmp    0xe9aa0934
  41d48e:	add    DWORD PTR [edx+0x0],ecx
  41d491:	sbb    eax,0x40
  41d494:	mov    eax,DWORD PTR [edx+ecx*4-0x64]
  41d498:	cld    
  41d499:	(bad)  
  41d49a:	aas    
  41d49b:	ss daa 
  41d49d:	test   BYTE PTR [eax-0x77],0xc3
  41d4a1:	fstp   QWORD PTR [ebp+0x5e]
  41d4a4:	jge    0x41d453
  41d4a6:	fisttp WORD PTR [ecx+0x31]
  41d4a9:	ret    0x4b7a
  41d4ac:	xchg   esp,eax
  41d4ad:	cmp    cl,BYTE PTR [ecx+0x382eb1]
  41d4b3:	add    dh,dl
  41d4b5:	or     DWORD PTR [ecx],esi
  41d4b7:	test   eax,0x6ce4435e
  41d4bc:	stos   BYTE PTR es:[edi],al
  41d4bd:	mov    cl,0xa8
  41d4bf:	push   0xffffff9d
  41d4c1:	adc    DWORD PTR [ecx-0x1bb7b57e],ebp
  41d4c7:	cmp    DWORD PTR [edx+0x48],eax
  41d4ca:	nop
  41d4cb:	cmp    DWORD PTR [ebx+edi*1],esp
  41d4ce:	push   0xffffffed
  41d4d0:	int3   
  41d4d1:	pushf  
  41d4d2:	push   ecx
  41d4d3:	cmp    ch,BYTE PTR [edx]
  41d4d5:	mov    BYTE PTR [ebx+0x0],dl
  41d4d8:	pop    ebx
  41d4d9:	outs   dx,DWORD PTR ds:[esi]
  41d4da:	sti    
  41d4db:	push   eax
  41d4dc:	sbb    edx,ebp
  41d4de:	pop    es
  41d4df:	mov    ecx,0x7c004075
  41d4e5:	or     ebx,edi
  41d4e7:	adc    eax,0x3ff884
  41d4ec:	icebp  
  41d4ed:	lds    esi,FWORD PTR [ecx+0xf]
  41d4f0:	stc    
  41d4f1:	aam    0xf3
  41d4f3:	call   0x3d47ed
  41d4f8:	out    0xca,al
  41d4fa:	in     eax,0x78
  41d4fc:	fwait
  41d4fd:	outs   dx,BYTE PTR ds:[esi]
  41d4fe:	sti    
  41d4ff:	call   DWORD PTR [ecx+0x458965]
  41d505:	ss call 0xfbb0cca4
  41d50b:	test   ah,ch
  41d50d:	loope  0x41d51e
  41d50f:	call   DWORD PTR [ecx-0x7f]
  41d512:	sti    
  41d513:	adc    eax,0x3ff804
  41d518:	add    BYTE PTR [eax],al
  41d51a:	scas   eax,DWORD PTR es:[edi]
  41d51b:	ins    DWORD PTR es:[edi],dx
  41d51c:	sti    
  41d51d:	je     0x41d54d
  41d51f:	sbb    bh,dh
  41d521:	(bad)  
  41d522:	xchg   ecx,eax
  41d523:	xchg   DWORD PTR fs:0x3ff7b4,esi
  41d52a:	sti    
  41d52b:	mov    dh,0xfb
  41d52d:	jne    0x41d553
  41d52f:	outs   dx,BYTE PTR ds:[esi]
  41d530:	shr    bl,cl
  41d532:	dec    ebx
  41d533:	xor    al,0x87
  41d535:	in     al,dx
  41d536:	ja     0x41d513
  41d538:	pop    es
  41d539:	or     DWORD PTR [eax],0xecfffe9d
  41d53f:	cmp    DWORD PTR [esi+0x57],edx
  41d542:	iret   
  41d543:	enter  0xf62f,0x94
  41d547:	sbb    edi,DWORD PTR [edi]
  41d549:	(bad)  
  41d54a:	jnp    0x41d4cf
  41d54c:	mov    esp,0x3c55a674
  41d551:	add    al,0xd5
  41d553:	mov    dl,0x0
  41d555:	add    ch,al
  41d557:	not    BYTE PTR [eax]
  41d559:	mov    ebp,ecx
  41d55b:	das    
  41d55c:	stos   BYTE PTR es:[edi],al
  41d55d:	sbb    BYTE PTR [edi],ah
  41d55f:	cdq    
  41d560:	test   ebp,esi
  41d562:	or     DWORD PTR [edi-0x4efcf219],ebp
  41d568:	ja     0x41d559
  41d56a:	dec    esi
  41d56b:	push   ebp
  41d56c:	clc    
  41d56d:	out    0xf2,eax
  41d56f:	jo     0x41d51c
  41d571:	cld    
  41d572:	pop    eax
  41d573:	repnz xor eax,0x363450da
  41d579:	add    al,0xa7
  41d57b:	repnz xchg edi,eax
  41d57d:	jb     0x41d57f
  41d57f:	add    BYTE PTR [ebp+0x5d],dl
  41d582:	cld    
  41d583:	dec    ecx
  41d585:	lods   eax,DWORD PTR ds:[esi]
  41d586:	jg     0x41d5c5
  41d588:	out    dx,al
  41d589:	push   esi
  41d58a:	mov    cl,0xfc
  41d58c:	enter  0x779a,0x7d
  41d590:	leave  
  41d591:	cli    
  41d592:	bound  eax,QWORD PTR [ecx+0x32]
  41d595:	repz ja 0x41d56f
  41d598:	push   eax
  41d599:	xlat   BYTE PTR ds:[ebx]
  41d59a:	xor    al,0xe0
  41d59c:	push   eax
  41d59d:	sub    eax,0x9b1afaa9
  41d5a2:	push   ecx
  41d5a3:	push   0x411c5d
  41d5a8:	adc    esp,DWORD PTR [ebp-0x5]
  41d5ab:	(bad)  
  41d5ac:	cli    
  41d5ad:	mov    edx,0x25fafc57
  41d5b2:	les    esi,FWORD PTR [ebx-0x56]
  41d5b5:	fist   DWORD PTR [ebx+ecx*4+0x50]
  41d5b9:	mov    edx,0x1e2fca6
  41d5be:	pushf  
  41d5bf:	std    
  41d5c0:	das    
  41d5c1:	pop    ebx
  41d5c2:	test   al,0x83
  41d5c4:	xchg   ebp,eax
  41d5c5:	fstp   st(6)
  41d5c7:	or     BYTE PTR [ebx],0xb8
  41d5ca:	stc    
  41d5cb:	xchg   ebx,eax
  41d5cc:	xchg   ebp,eax
  41d5cd:	or     dh,dh
  41d5cf:	jno    0x41d64b
  41d5d1:	cmp    ch,BYTE PTR [ecx+eax*4-0x56]
  41d5d5:	popf   
  41d5d6:	xchg   ebp,eax
  41d5d7:	stos   DWORD PTR es:[edi],eax
  41d5d8:	sbb    dh,BYTE PTR [edx-0x645e5641]
  41d5de:	outs   dx,BYTE PTR ds:[esi]
  41d5df:	inc    ecx
  41d5e0:	enter  0x638c,0xac
  41d5e4:	add    BYTE PTR [eax],al
  41d5e6:	(bad)  
  41d5e7:	fwait
  41d5e8:	jne    0x41d63e
  41d5ea:	jge    0x41d66b
  41d5ec:	cmp    ch,BYTE PTR [ebx-0x7cb0c87f]
  41d5f2:	mov    edi,0x177e5d9a
  41d5f7:	or     esi,DWORD PTR [esi+0x28d10c49]
  41d5fd:	cld    
  41d5fe:	bound  esi,QWORD PTR [esi]
  41d600:	jb     0x41d59a
  41d602:	or     esi,DWORD PTR [edi]
  41d604:	and    BYTE PTR [eax-0x1318f627],0xe9
  41d60b:	adc    eax,0xb182f5e6
  41d610:	int    0x4
  41d612:	aad    0x9
  41d614:	mov    edx,0x1633d51d
  41d619:	adc    ebp,ecx
  41d61b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d61d:	add    edx,DWORD PTR [esi+eax*8-0xe]
  41d621:	jl     0x41d69b
  41d623:	or     BYTE PTR [edx+0x43],dh
  41d626:	fisttp QWORD PTR [esp+eiz*4+0x5ff47cf8]
  41d62d:	inc    edx
  41d62e:	fiadd  DWORD PTR [ecx+0x74]
  41d631:	push   edx
  41d632:	leave  
  41d633:	test   BYTE PTR [edi-0x477b32d1],ch
  41d639:	xor    al,dl
  41d63b:	pop    edi
  41d63c:	jb     0x41d66d
  41d63e:	xchg   ebp,eax
  41d63f:	or     edx,edi
  41d641:	ret    
  41d642:	test   BYTE PTR [ebx+edx*1+0x3024a8],cl
  41d649:	fadd   QWORD PTR [eax]
  41d64b:	add    BYTE PTR [eax],bl
  41d64d:	mov    dl,0x21
  41d64f:	out    0xd9,eax
  41d651:	or     DWORD PTR [ebx+0x3c301637],ecx
  41d657:	inc    ecx
  41d658:	sub    al,0x36
  41d65a:	ds ins BYTE PTR es:[edi],dx
  41d65c:	imul   edx,DWORD PTR [esi],0x17886418
  41d662:	add    eax,0x40164a43
  41d667:	jmp    0x649330f7
  41d66c:	and    eax,0x6d03519e
  41d671:	inc    eax
  41d672:	call   0xfcdcabdb
  41d677:	jb     0x41d68e
  41d679:	adc    cl,BYTE PTR [ecx+0x3ff3c6f4]
  41d67f:	jmp    0xe9fe5b65
  41d684:	(bad)  
  41d685:	or     DWORD PTR [edx-0x27],ebp
  41d688:	int    0x85
  41d68a:	mov    ch,0xe9
  41d68c:	(bad)  
  41d68d:	or     DWORD PTR [eax+0x5c],edx
  41d690:	push   esp
  41d691:	leave  
  41d692:	(bad)  
  41d693:	call   0x3b3f106e
  41d698:	into   
  41d699:	pop    es
  41d69a:	(bad)  
  41d69b:	call   0x27c66576
  41d6a0:	(bad)  
  41d6a1:	or     DWORD PTR [eax],eax
  41d6a3:	cdq    
  41d6a4:	popf   
  41d6a5:	test   al,dl
  41d6a7:	jmp    0xf691e082
  41d6ac:	and    BYTE PTR [edi+0x148d],cl
  41d6b2:	(bad)  [ecx]
  41d6b4:	add    BYTE PTR [edx+0x15],ch
  41d6b7:	repnz mov eax,0x9d7e5
  41d6bd:	bound  edx,QWORD PTR [eax]
  41d6bf:	(bad)  
  41d6c0:	xchg   esp,eax
  41d6c1:	mov    eax,ds:0x9d6
  41d6c6:	imul   ebx,DWORD PTR [esi+0x70],0x71c03917
  41d6cd:	pop    es
  41d6ce:	inc    esi
  41d6cf:	jp     0x41d741
  41d6d1:	inc    eax
  41d6d2:	lods   al,BYTE PTR ds:[esi]
  41d6d3:	sahf   
  41d6d4:	mov    esp,0x8494152
  41d6d9:	push   edx
  41d6da:	daa    
  41d6db:	mov    edi,0xcb996e4
  41d6e0:	add    BYTE PTR [ebp-0x2efe],cl
  41d6e6:	lods   al,BYTE PTR ds:[esi]
  41d6e7:	push   ss
  41d6e8:	ror    BYTE PTR [ebp-0x41d5],0x7c
  41d6ef:	sbb    dh,al
  41d6f1:	je     0x41d69e
  41d6f3:	sbb    bh,cl
  41d6f5:	jne    0x41d762
  41d6f7:	daa    
  41d6f8:	xchg   ecx,eax
  41d6f9:	je     0x41d737
  41d6fb:	or     eax,0x202ec02f
  41d700:	push   edx
  41d701:	or     BYTE PTR [esi],bl
  41d703:	push   ss
  41d704:	shr    al,1
  41d706:	sbb    DWORD PTR [eax+0x13c1fffd],0xd3c05e2
  41d710:	xchg   ebx,eax
  41d712:	mov    eax,ds:0x5d47a
  41d717:	add    BYTE PTR [ecx*1-0x5b7367f],ch
  41d71e:	adc    dl,0x49
  41d721:	or     bh,BYTE PTR [edx+0x4d4894]
  41d727:	xor    ebp,esp
  41d729:	aas    
  41d72a:	mov    DWORD PTR [ebp+0x4],edx
  41d72d:	aas    
  41d72e:	xchg   ebx,edx
  41d730:	aam    0x49
  41d732:	add    DWORD PTR [ecx],eax
  41d734:	in     al,dx
  41d735:	adc    eax,0xcebe084
  41d73a:	add    BYTE PTR [ecx+0x36f7a],cl
  41d740:	aad    0xa2
  41d742:	jo     0x41d742
  41d744:	jg     0x41d7af
  41d746:	ret    0xd503
  41d749:	xchg   ebx,eax
  41d74a:	sar    BYTE PTR [eax],0xa5
  41d74d:	ficomp WORD PTR ds:0x1eac820d
  41d753:	cmp    DWORD PTR [ebp+0x65625de],ecx
  41d759:	jns    0x41d6de
  41d75b:	mul    ch
  41d75d:	std    
  41d75e:	adc    cl,BYTE PTR ds:0x8105ec62
  41d764:	pushf  
  41d765:	cli    
  41d766:	das    
  41d767:	add    edx,DWORD PTR [esi-0x77]
  41d76a:	dec    eax
  41d76b:	jae    0x41d745
  41d76d:	cld    
  41d76e:	call   DWORD PTR [edi-0x2a]
  41d771:	jb     0x41d7c6
  41d773:	or     eax,0x5675ac4a
  41d778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d779:	enter  0xf883,0x0
  41d77d:	add    ah,bl
  41d77f:	mov    edi,0x2d6300f8
  41d784:	sub    eax,0xe14b85ef
  41d789:	mov    bh,ah
  41d78b:	(bad)  
  41d78c:	push   ds
  41d78d:	or     DWORD PTR [esi-0x53],0xd8d6082f
  41d794:	jne    0x41d809
  41d796:	inc    esp
  41d797:	jmp    0xc989e437
  41d79c:	xchg   DWORD PTR [ebp+0x56],esp
  41d79f:	jmp    0x41d79e
  41d7a1:	je     0x41d781
  41d7a3:	mov    ds:0xf1a98aae,eax
  41d7a8:	pop    ecx
  41d7a9:	adc    BYTE PTR [edi],0xa4
  41d7ac:	fwait
  41d7ad:	les    ebp,FWORD PTR [esi-0x7e398270]
  41d7b3:	mov    ds:0x29d4c783,eax
  41d7b8:	lock pop ebp
  41d7ba:	push   ss
  41d7bb:	or     DWORD PTR [ecx-0x4],edx
  41d7be:	pop    ebx
  41d7bf:	adc    BYTE PTR [edi],bh
  41d7c1:	ret    
  41d7c2:	imul   esp,DWORD PTR [ebp+0x9d505b2],0x45
  41d7c9:	sbb    DWORD PTR [edi-0x2abc4e57],0x9
  41d7d0:	sbb    dl,BYTE PTR [ecx+0x5c]
  41d7d3:	data16 or bl,BYTE PTR [eax+0x4de697c3]
  41d7da:	and    BYTE PTR [edi-0x7a],dl
  41d7dd:	mov    ebx,0x9c620a15
  41d7e2:	add    BYTE PTR [eax],al
  41d7e4:	lahf   
  41d7e5:	dec    ebx
  41d7e6:	out    0x30,eax
  41d7e8:	out    dx,al
  41d7e9:	test   BYTE PTR [edx],dl
  41d7eb:	loopne 0x41d7ad
  41d7ed:	mov    eax,ds:0x97917462
  41d7f2:	jno    0x41d7b0
  41d7f4:	(bad)
  41d7f7:	pushf  
  41d7f8:	cmp    ebx,DWORD PTR [ebp+ebp*2-0x59]
  41d7fc:	dec    ebp
  41d7fd:	shl    BYTE PTR [esi+0x5d5c5c9b],1
  41d803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d804:	add    DWORD PTR [ebx-0x64b258e2],ecx
  41d80a:	ds scas al,BYTE PTR es:[edi]
  41d80c:	mov    edi,0x50534596
  41d811:	std    
  41d812:	adc    dx,WORD PTR [ebp-0x396693f7]
  41d819:	loopne 0x41d7b0
  41d81b:	adc    BYTE PTR [edx],0x97
  41d81e:	jno    0x41d7d1
  41d820:	cmp    ch,BYTE PTR [edx+0x3d29a6fb]
  41d826:	push   ss
  41d827:	adc    DWORD PTR ds:0xaf03a6fc,edi
  41d82d:	or     eax,0x498a138f
  41d832:	out    0x78,eax
  41d834:	xchg   esi,eax
  41d835:	dec    esp
  41d836:	add    cl,ch
  41d838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d839:	mov    eax,ds:0x9633b286
  41d83e:	xor    BYTE PTR [eax-0x1ab87130],dh
  41d844:	push   esi
  41d845:	push   ebx
  41d846:	and    ebx,ecx
  41d848:	add    BYTE PTR [eax],al
  41d84a:	(bad)  [ecx]
  41d84c:	add    cl,ch
  41d84e:	stos   BYTE PTR es:[edi],al
  41d84f:	in     al,dx
  41d850:	jg     0x41d856
  41d852:	or     DWORD PTR [esi+0x1fd1e940],edi
  41d858:	push   ds
  41d859:	sbb    ah,BYTE PTR [ecx+0xa]
  41d85c:	stos   DWORD PTR es:[edi],eax
  41d85d:	scas   al,BYTE PTR es:[edi]
  41d85e:	jae    0x41d899
  41d860:	call   0xfcd91408
  41d865:	ss jb  0x41d863
  41d868:	aaa    
  41d869:	sti    
  41d86a:	push   ss
  41d86b:	or     al,BYTE PTR [ecx+0x61a7391]
  41d871:	push   ds
  41d872:	jno    0x41d822
  41d874:	mov    esp,0x5e34d6e9
  41d879:	adc    al,0xe
  41d87b:	pop    ss
  41d87c:	les    ecx,FWORD PTR [ebp+0x2b0009d1]
  41d882:	outs   dx,BYTE PTR ds:[esi]
  41d883:	xchg   esi,eax
  41d884:	push   ebx
  41d885:	jb     0x41d8c9
  41d887:	inc    edi
  41d888:	dec    edi
  41d889:	mov    edx,0xd4fd3d10
  41d88e:	(bad)  
  41d88f:	(bad)  
  41d891:	push   ecx
  41d892:	adc    DWORD PTR [esp+edi*8+0x3e],ebp
  41d896:	iret   
  41d897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d898:	cmp    BYTE PTR [edx],bh
  41d89a:	dec    ebx
  41d89b:	mov    dl,BYTE PTR [ebp+0x3109d6e9]
  41d8a1:	sub    DWORD PTR [esi+0x13],edx
  41d8a4:	or     al,0xe8
  41d8a6:	and    edi,DWORD PTR [ebx-0x41]
  41d8a9:	mov    eax,ds:0x6af3b657
  41d8ae:	add    BYTE PTR [eax],al
  41d8b0:	push   ss
  41d8b1:	push   es
  41d8b2:	or     eax,0x3794ab00
  41d8b7:	ret    
  41d8b8:	and    ch,0xe7
  41d8bb:	sahf   
  41d8bc:	inc    esi
  41d8bd:	outs   dx,DWORD PTR ds:[esi]
  41d8be:	sti    
  41d8bf:	mov    ebx,esp
  41d8c1:	adc    eax,0xb8b7f852
  41d8c6:	jo     0x41d933
  41d8c8:	iret   
  41d8c9:	ins    BYTE PTR es:[edi],dx
  41d8ca:	test   DWORD PTR [ebp+0x8],ebx
  41d8cd:	mov    ds:0xf3c97e1a,al
  41d8d2:	add    ecx,DWORD PTR [ebp-0x7fa8f5fe]
  41d8d8:	or     DWORD PTR [edx-0x1b4b7503],edx
  41d8de:	rcpps  xmm5,XMMWORD PTR [edi+0x44524d52]
  41d8e5:	imul   esi,DWORD PTR [esi],0xffffffff
  41d8e8:	dec    ebx
  41d8e9:	or     esi,edi
  41d8eb:	add    ebx,DWORD PTR [edi+0x73]
  41d8ee:	push   cs
  41d8ef:	push   0xffffff9c
  41d8f1:	mov    bh,BYTE PTR [ebp-0x17c812f8]
  41d8f7:	rcl    DWORD PTR [esi+0x3383fb6e],1
  41d8fd:	(bad)  
  41d8fe:	jle    0x41d8c2
  41d900:	pushf  
  41d901:	outs   dx,BYTE PTR ds:[esi]
  41d902:	inc    ecx
  41d903:	cld    
  41d904:	out    0xdc,eax
  41d906:	sti    
  41d907:	cmp    DWORD PTR [ebp+edx*4+0x50880e37],0x2f
  41d90f:	shr    ah,0xec
  41d912:	or     eax,DWORD PTR [ecx]
  41d914:	add    BYTE PTR [eax],al
  41d916:	jae    0x41d986
  41d918:	jno    0x41d912
  41d91a:	cmp    eax,DWORD PTR [esp+edi*4-0x34933fb]
  41d921:	call   FWORD PTR [esi+ebp*2+0x71]
  41d925:	or     ah,al
  41d927:	pushf  
  41d928:	cmp    bh,bh
  41d92a:	retf   
  41d92b:	outs   dx,BYTE PTR ds:[esi]
  41d92c:	jno    0x41d926
  41d92e:	aad    0x28
  41d930:	int3   
  41d931:	out    0x78,eax
  41d933:	mov    eax,0xfaabfca3
  41d938:	dec    edx
  41d939:	cmp    cl,BYTE PTR [edx]
  41d93b:	xchg   esp,eax
  41d93c:	inc    ebx
  41d93d:	pop    esi
  41d93e:	dec    edi
  41d93f:	loopne 0x41d987
  41d941:	(bad)  
  41d942:	pop    ss
  41d943:	stos   DWORD PTR es:[edi],eax
  41d944:	add    BYTE PTR [ebx+0x5e],dl
  41d947:	mov    edi,0xa0e9eb81
  41d94c:	add    BYTE PTR [eax],al
  41d94e:	push   esi
  41d94f:	cld    
  41d950:	add    edx,DWORD PTR [ecx-0x7d]
  41d953:	outs   dx,DWORD PTR ds:[esi]
  41d954:	add    esi,eax
  41d956:	sbb    BYTE PTR [eax+eax*1+0x73],dl
  41d95a:	jmp    0xc41e9d19
  41d95f:	pop    ebx
  41d960:	push   eax
  41d961:	call   0xfce4babf
  41d966:	pop    esp
  41d967:	mov    ds:0xac20bf7d,eax
  41d96c:	out    dx,al
  41d96d:	mov    edi,0x1d4ac
  41d972:	aad    0x6c
  41d974:	cmp    eax,0x3e14d4f5
  41d979:	or     BYTE PTR [eax],al
  41d97b:	add    ah,dl
  41d97d:	sahf   
  41d97e:	push   ecx
  41d97f:	mov    ecx,DWORD PTR [eax+0x56]
  41d982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d983:	cld    
  41d984:	jp     0x41d910
  41d986:	rep lods al,BYTE PTR ds:[esi]
  41d988:	jb     0x41d9b5
  41d98a:	jbe    0x41d90e
  41d98c:	lods   eax,DWORD PTR ds:[esi]
  41d98d:	xor    eax,0xcb05fca4
  41d992:	adc    DWORD PTR ds:0x34a3a2d5,esp
  41d998:	cmp    eax,0x4afce2ac
  41d99d:	sbb    cl,cl
  41d99f:	mov    BYTE PTR [ebx],bl
  41d9a1:	jb     0x41d93b
  41d9a3:	icebp  
  41d9a4:	test   ebx,esp
  41d9a6:	mov    ds:0x9b090e83,eax
  41d9ab:	cmp    eax,0x9b274e5e
  41d9b0:	or     BYTE PTR [ebp-0x774f5bec],dl
  41d9b6:	mov    eax,ebx
  41d9b8:	adc    bl,BYTE PTR [eax]
  41d9ba:	fnstenv [esi-0x69]
  41d9bd:	leave  
  41d9be:	xchg   esi,eax
  41d9bf:	sbb    esp,edi
  41d9c1:	in     al,dx
  41d9c2:	out    0x3,al
  41d9c4:	clc    
  41d9c5:	(bad)  
  41d9c7:	mov    cl,0xaf
  41d9c9:	xchg   esp,eax
  41d9ca:	in     eax,0x8e
  41d9cc:	add    cl,BYTE PTR [ebp-0x643de73f]
  41d9d2:	sub    ecx,DWORD PTR [edi+edx*8]
  41d9d5:	sbb    eax,0x84d92df2
  41d9da:	sub    ebx,DWORD PTR [edx+ebx*1+0xeada22]
  41d9e1:	add    dl,al
  41d9e3:	xchg   ebx,eax
  41d9e4:	mov    ch,0xdb
  41d9e6:	xchg   ecx,eax
  41d9e7:	dec    ebp
  41d9e8:	scas   eax,DWORD PTR es:[edi]
  41d9e9:	push   DWORD PTR [edx+0x1eabe693]
  41d9ef:	aad    0x9d
  41d9f1:	mov    ds:0x499cb24c,eax
  41d9f6:	int    0xd
  41d9f8:	fiadd  WORD PTR [edi+0x3e70a41]
  41d9fe:	push   ecx
  41d9ff:	scas   eax,DWORD PTR es:[edi]
  41da00:	in     eax,dx
  41da01:	xchg   DWORD PTR [ecx+ecx*1],ebp
  41da04:	out    0x3,eax
  41da06:	dec    esp
  41da07:	(bad)  [edx-0xa]
  41da0a:	mov    dl,0x9
  41da0c:	je     0x41d997
  41da0e:	ficom  WORD PTR [edx-0x6ced5ca3]
  41da14:	cmp    al,0x87
  41da16:	bound  ecx,QWORD PTR [ecx]
  41da18:	aam    0xb
  41da1a:	pop    esp
  41da1b:	(bad)  
  41da1c:	(bad)  
  41da1d:	mov    ds:0xc519349,al
  41da22:	push   esp
  41da23:	xchg   edx,eax
  41da24:	(bad)  
  41da25:	jmp    0x818a:0xa488f9dd
  41da2c:	call   0x5eea:0xfc9677f5
  41da33:	and    bl,cl
  41da35:	sub    eax,0x3231096a
  41da3a:	inc    ecx
  41da3b:	or     eax,0xa3607dd
  41da40:	rcl    DWORD PTR [ebx-0xebd7526],0x0
  41da47:	add    BYTE PTR [ebp+0x48],ah
  41da4a:	clc    
  41da4b:	cdq    
  41da4c:	mov    esi,0xd6e924fa
  41da51:	xchg   esp,eax
  41da52:	xor    al,0xd1
  41da54:	xor    edi,ecx
  41da56:	cld    
  41da57:	(bad)  
  41da58:	dec    eax
  41da59:	mov    ebx,0x8de7b283
  41da5e:	dec    esi
  41da5f:	call   0x64cce43a
  41da64:	rcl    BYTE PTR [esp+edi*8-0x2a6af94a],cl
  41da6b:	bound  ebx,QWORD PTR [ebp-0x2]
  41da6e:	cld    
  41da6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da70:	ja     0x41da93
  41da72:	shl    BYTE PTR [ebp+0x2c870df0],0x39
  41da79:	jg     0x41dabd
  41da7b:	xchg   ecx,eax
  41da7c:	(bad)  
  41da7d:	and    DWORD PTR [ecx],ebx
  41da7f:	into   
  41da80:	(bad)  
  41da81:	or     ebp,edi
  41da83:	mov    dh,0x2e
  41da85:	pop    edx
  41da86:	cmp    esi,DWORD PTR [esi+0x37]
  41da89:	adc    bh,0x65
  41da8c:	xor    eax,DWORD PTR ds:0x9d00984
  41da92:	add    BYTE PTR [esi+0x5d],bl
  41da95:	xchg   BYTE PTR [ecx],dl
  41da97:	test   eax,0x60041fd6
  41da9c:	popf   
  41da9d:	xchg   ecx,eax
  41da9e:	mov    al,BYTE PTR [eax]
  41daa0:	jns    0x41db10
  41daa2:	dec    esp
  41daa3:	push   0xfffc9f36
  41daa8:	add    esi,DWORD PTR [eax+0x93e4]
  41daae:	inc    eax
  41daaf:	addr16 sti 
  41dab1:	mov    dl,BYTE PTR [edx+ecx*4+0x73b80fd7]
  41dab8:	cld    
  41dab9:	jmp    FWORD PTR [eax+esi*2]
  41dabc:	inc    ecx
  41dabd:	or     ah,dh
  41dabf:	stc    
  41dac0:	lea    ecx,ds:[ecx-0x668e1b9e]
  41dac7:	addr16 sti 
  41dac9:	push   0xffffffea
  41dacb:	add    dl,0x50
  41dace:	push   esp
  41dacf:	xchg   edx,eax
  41dad0:	and    eax,DWORD PTR [eax]
  41dad2:	cld    
  41dad3:	push   0xa986e833
  41dad8:	sti    
  41dad9:	push   DWORD PTR [esi+0x55]
  41dadc:	sbb    bl,0xb3
  41dadf:	mov    esi,ecx
  41dae1:	add    BYTE PTR [ebp+ecx*1-0x6313ea05],bh
  41dae8:	cmp    al,0x0
  41daea:	mov    bl,0x32
  41daec:	mov    ebp,0x4184be6a
  41daf1:	clc    
  41daf2:	and    DWORD PTR [ecx-0x8],ecx
  41daf5:	push   eax
  41daf6:	les    edx,FWORD PTR [eax+0x6aac0023]
  41dafc:	xor    ebp,eax
  41dafe:	mov    esi,0x6fffba9
  41db03:	dec    esi
  41db04:	sbb    bl,0x73
  41db07:	mov    DWORD PTR [esi-0x9f29400],esp
  41db0d:	inc    ebp
  41db0e:	je     0x41daad
  41db10:	or     eax,DWORD PTR [eax+eax*1+0x5fe00]
  41db17:	add    BYTE PTR [esi+eax*1-0x5d2a0003],al
  41db1e:	lea    eax,[edx-0x360c227]
  41db24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db25:	mov    esp,0x8ee8fd00
  41db2a:	icebp  
  41db2b:	aas    
  41db2c:	aad    0x29
  41db2e:	inc    ebp
  41db2f:	clc    
  41db30:	pop    eax
  41db31:	jecxz  0x41db4a
  41db33:	sbb    eax,0x8729d9e6
  41db38:	push   ecx
  41db39:	data16 add al,0xfb
  41db3c:	sbb    bh,al
  41db3e:	mov    WORD PTR [edx-0x3610227],es
  41db44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db45:	jp     0x41db45
  41db47:	and    al,0xd5
  41db49:	mov    ds:0x10ed349f,al
  41db4e:	(bad)  
  41db50:	repnz sub al,0xbc
  41db53:	les    edx,FWORD PTR [eax-0x1d00fb56]
  41db59:	mov    ds:0xdb61d884,al
  41db5e:	mov    WORD PTR [edx-0x33],es
  41db61:	ror    BYTE PTR [edx+eax*4-0x3603a2f],cl
  41db68:	and    eax,0xe0fd063d
  41db6d:	ss hlt 
  41db6f:	aas    
  41db70:	aad    0x26
  41db72:	shl    DWORD PTR [ebx-0xd],0x1b
  41db76:	inc    esi
  41db77:	clc    
  41db78:	add    BYTE PTR [eax],al
  41db7a:	pop    eax
  41db7b:	bound  edx,QWORD PTR [ebx*1-0x78d9961a]
  41db82:	popa   
  41db83:	in     eax,0x7
  41db85:	sti    
  41db86:	mov    al,BYTE PTR [edi+0xdd9828d]
  41db8c:	mov    al,ds:0xff0b25fc
  41db91:	and    al,0xd5
  41db93:	mov    ds:0x97d349f,al
  41db98:	adc    eax,0x709061e0
  41db9d:	mov    ebx,0xfddab456
  41dba2:	dec    eax
  41dba3:	inc    esi
  41dba4:	(bad)  
  41dba6:	(bad)  
  41dba7:	fnop   
  41dba9:	add    al,BYTE PTR [eax-0x28]
  41dbac:	dec    esi
  41dbad:	lods   eax,DWORD PTR ds:[esi]
  41dbae:	ds nop
  41dbb0:	xor    eax,0xf590d72d
  41dbb5:	stos   DWORD PTR es:[edi],eax
  41dbb6:	or     ecx,DWORD PTR [ebp-0x12d25fdb]
  41dbbc:	pushw  ds
  41dbbe:	and    BYTE PTR [edx],cl
  41dbc0:	pushf  
  41dbc1:	stc    
  41dbc2:	pop    ebp
  41dbc3:	fsub   DWORD PTR [ebx-0x67]
  41dbc6:	xchg   dh,bh
  41dbc8:	add    eax,0xb5b5fad9
  41dbcd:	mov    al,ds:0xcfff36f9
  41dbd2:	test   eax,0xb183ed90
  41dbd7:	or     DWORD PTR [ecx-0x3d],esi
  41dbda:	xor    BYTE PTR [eax+esi*4],0xc2
  41dbde:	add    BYTE PTR [eax],al
  41dbe0:	(bad)  
  41dbe1:	or     DWORD PTR [ebx+ecx*4],edi
  41dbe4:	mov    esi,0xcbacba89
  41dbe9:	(bad)  
  41dbea:	out    0x32,al
  41dbec:	dec    esp
  41dbed:	sub    eax,0x832035ef
  41dbf2:	xor    eax,edi
  41dbf4:	pop    ebx
  41dbf5:	xor    eax,0x8e984ab
  41dbfa:	sbb    al,0x50
  41dbfc:	dec    esi
  41dbfd:	inc    ebp
  41dbfe:	xchg   edi,eax
  41dbff:	xor    al,0xad
  41dc01:	sub    edx,DWORD PTR [ebx+0x117d919e]
  41dc07:	hlt    
  41dc08:	cld    
  41dc09:	fisttp WORD PTR [esi+0x7d8f7e4d]
  41dc0f:	mov    BYTE PTR [edx],bh
  41dc11:	push   ss
  41dc12:	add    BYTE PTR [ecx+0x248b05bc],bh
  41dc18:	xor    eax,0x7bfc683f
  41dc1d:	(bad)  
  41dc1e:	cld    
  41dc1f:	pop    esi
  41dc20:	and    BYTE PTR [edi-0x718deddc],0x83
  41dc27:	sub    ebp,ebp
  41dc29:	repz imul ebp,ebx,0x99f84c65
  41dc30:	out    dx,al
  41dc31:	mul    DWORD PTR [ecx+ebp*8]
  41dc34:	(bad)  
  41dc35:	mov    WORD PTR [ecx+eax*2],?
  41dc38:	and    dl,dl
  41dc3a:	cld    
  41dc3b:	es dec ebp
  41dc3d:	dec    edi
  41dc3e:	jae    0x41dc25
  41dc40:	pop    es
  41dc41:	dec    edi
  41dc42:	call   0xbc41dcda
  41dc47:	or     ebx,DWORD PTR [eax+0x2]
  41dc4a:	in     al,dx
  41dc4b:	mov    al,dh
  41dc4d:	jl     0x41dc04
  41dc4f:	xor    BYTE PTR [edx-0x371a71f],0x1
  41dc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc57:	pop    ebp
  41dc58:	cld    
  41dc59:	out    dx,al
  41dc5a:	mov    esi,0xd6e8ff0b
  41dc5f:	add    BYTE PTR [edx-0x371c76f],0x39
  41dc66:	fs inc ebp
  41dc68:	or     BYTE PTR [ecx],bh
  41dc6a:	push   0xfffffffb
  41dc6c:	pandn  mm2,QWORD PTR [esi]
  41dc6f:	or     cl,BYTE PTR [ecx-0x3c7732ca]
  41dc75:	in     eax,0x5d
  41dc77:	xchg   esp,eax
  41dc78:	jae    0x41dc5e
  41dc7a:	jle    0x41dcc4
  41dc7c:	pusha  
  41dc7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7e:	inc    ebx
  41dc7f:	lea    esi,[edx-0x6d]
  41dc82:	inc    ebp
  41dc83:	test   DWORD PTR [ecx],ecx
  41dc85:	call   0x8191e660
  41dc8a:	call   0x437d:0x5b00fd2c
  41dc91:	add    al,0xf1
  41dc93:	retf   0x8589
  41dc96:	test   BYTE PTR [ebx+edi*8-0x1],ch
  41dc9a:	int3   
  41dc9b:	lock es call 0x3df90a
  41dca2:	out    0xf7,eax
  41dca4:	add    eax,DWORD PTR [ebp-0x17fb094e]
  41dcaa:	add    BYTE PTR [eax],al
  41dcac:	inc    eax
  41dcad:	jmp    0x3:0xe7affffa
  41dcb4:	lods   eax,DWORD PTR ds:[esi]
  41dcb5:	mov    DWORD PTR [esi],0x530a3c01
  41dcbb:	call   0x3dfea6
  41dcc0:	dec    ecx
  41dcc2:	cmp    al,0x5f
  41dcc4:	pop    edx
  41dcc5:	rol    esp,cl
  41dcc7:	ret    0xa00
  41dcca:	call   0xfbb1a6b0
  41dccf:	mov    eax,DWORD PTR [ebx-0x7f097efa]
  41dcd5:	mov    esp,0xd9f44789
  41dcda:	out    0xef,eax
  41dcdc:	pop    esp
  41dcdd:	outs   dx,DWORD PTR ds:[esi]
  41dcde:	sti    
  41dcdf:	mov    edi,esp
  41dce1:	test   edx,esi
  41dce3:	je     0x41dd20
  41dce5:	mov    dl,bh
  41dce7:	push   DWORD PTR [eax]
  41dce9:	xor    BYTE PTR [ebx-0x1],dl
  41dcec:	das    
  41dced:	xchg   esi,eax
  41dcee:	in     al,0x5f
  41dcf0:	fld    TBYTE PTR [esi-0x5]
  41dcf3:	inc    edx
  41dcf5:	add    BYTE PTR [ecx+0x8],0x94
  41dcf9:	pop    ds
  41dcfa:	xor    edi,edi
  41dcfc:	jnp    0x41dcd2
  41dcfe:	out    0xa9,eax
  41dd00:	sub    BYTE PTR [esi-0x5],0x8b
  41dd04:	sar    ebp,0x80
  41dd07:	not    ch
  41dd09:	out    dx,al
  41dd0a:	jns    0x41dc94
  41dd0c:	push   cs
  41dd0d:	xchg   ebx,eax
  41dd0e:	test   esp,edi
  41dd10:	add    BYTE PTR [eax],al
  41dd12:	or     DWORD PTR [esi+0x376d349b],edx
  41dd18:	(bad)  
  41dd19:	cld    
  41dd1a:	jb     0x41dd08
  41dd1c:	stos   DWORD PTR es:[edi],eax
  41dd1d:	lea    esp,[ebx-0x197964e5]
  41dd23:	xchg   edx,eax
  41dd24:	test   eax,0x9b2c5a1c
  41dd29:	push   eax
  41dd2a:	test   al,0x4c
  41dd2c:	xchg   ecx,esi
  41dd2e:	pop    esi
  41dd2f:	dec    ebp
  41dd30:	lock push esp
  41dd32:	dec    esi
  41dd33:	(bad)
  41dd36:	adc    eax,0xe30cd18
  41dd3b:	dec    ebx
  41dd3c:	mov    cl,0x39
  41dd3e:	sub    bl,ah
  41dd40:	test   BYTE PTR [edi-0x35784b57],bh
  41dd46:	xchg   esi,eax
  41dd47:	cli    
  41dd48:	les    edi,FWORD PTR [ecx]
  41dd4a:	adc    dh,ah
  41dd4c:	test   BYTE PTR [edi-0x277b0980],bh
  41dd52:	mov    DWORD PTR [edi+eax*4+0x1c1fd542],esp
  41dd59:	adc    al,0x95
  41dd5b:	or     al,0xf6
  41dd5d:	push   edx
  41dd5e:	jge    0x41ddab
  41dd60:	or     BYTE PTR [edi],bh
  41dd62:	aad    0x38
  41dd64:	add    al,0xe8
  41dd66:	push   0x58fc9bbd
  41dd6b:	bound  edx,QWORD PTR [esp+eax*1]
  41dd6e:	push   esi
  41dd6f:	inc    esp
  41dd70:	hlt    
  41dd71:	inc    DWORD PTR [edx+0x4]
  41dd74:	add    al,0x73
  41dd76:	add    BYTE PTR [eax],al
  41dd78:	add    eax,0x58041418
  41dd7d:	dec    esp
  41dd7e:	adc    al,0x1b
  41dd80:	mov    ebp,0xa2fd2192
  41dd85:	or     DWORD PTR [ebx-0x3d],ebp
  41dd88:	es push es
  41dd8a:	fcmovb st,st(3)
  41dd8c:	jge    0x41dd7a
  41dd8e:	popa   
  41dd8f:	adc    al,0xd1
  41dd91:	xchg   BYTE PTR [edi+edx*1+0x3cb6a1d6],dl
  41dd98:	js     0x41dd26
  41dd9a:	imul   esp,DWORD PTR [ecx+ebx*8],0xdcc46809
  41dda1:	or     ah,bh
  41dda3:	add    ecx,DWORD PTR [eax]
  41dda5:	mov    ds:0x8c5966fc,al
  41ddaa:	sbb    esp,eax
  41ddac:	adc    ch,BYTE PTR ds:0xc8ac3eb5
  41ddb2:	mov    bl,0x88
  41ddb4:	mov    BYTE PTR cs:[edx-0x65],cl
  41ddb8:	mov    ebx,0xd50b029d
  41ddbd:	or     DWORD PTR [edx-0x20e9a3cb],ebx
  41ddc3:	shl    BYTE PTR [edx-0x2f],1
  41ddc6:	in     al,dx
  41ddc7:	xor    al,0xc8
  41ddc9:	jbe    0x41ddf1
  41ddcb:	sub    edi,edx
  41ddcd:	xor    BYTE PTR [edx+0x36c7e406],bh
  41ddd3:	sbb    esp,DWORD PTR [ebp-0x2ac0cb5f]
  41ddd9:	or     DWORD PTR [eax+0x47],esi
  41dddc:	add    BYTE PTR [eax],al
  41ddde:	mov    ecx,0x67c36bed
  41dde3:	cmc    
  41dde4:	mov    ecx,0xcf33999c
  41dde9:	ret    
  41ddea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddeb:	mov    ebp,ds
  41dded:	(bad)  
  41ddee:	cdq    
  41ddef:	sub    esi,DWORD PTR ds:0x2ba55c3f
  41ddf5:	(bad)  
  41ddf6:	(bad)  
  41ddf7:	or     DWORD PTR [eax-0x18b85f48],ecx
  41ddfd:	mov    WORD PTR [esi],ss
  41ddff:	out    0xff,al
  41de01:	clc    
  41de02:	pop    ebp
  41de03:	xchg   DWORD PTR [ebx],esp
  41de05:	and    ebx,ebx
  41de07:	or     DWORD PTR [eax],eax
  41de09:	je     0x41de08
  41de0b:	out    0x4f,al
  41de0d:	jmp    0xe375:0x2dc509d6
  41de14:	pop    ds
  41de15:	push   ebx
  41de16:	sbb    BYTE PTR [edx],cl
  41de18:	lds    ebp,FWORD PTR ds:0x425ddf75
  41de1e:	sbb    BYTE PTR [edx],cl
  41de20:	xchg   DWORD PTR ds:0xf586d775,ebp
  41de26:	or     bh,0xe7
  41de29:	mov    esi,0xd100099f
  41de2e:	fmul   DWORD PTR [edx-0x78a21604]
  41de34:	and    esi,DWORD PTR [ebp-0x26]
  41de37:	or     DWORD PTR [eax],eax
  41de39:	cdq    
  41de3a:	dec    ebp
  41de3b:	xchg   DWORD PTR [ebx],esp
  41de3d:	cdq    
  41de3e:	fmul   DWORD PTR [ecx]
  41de40:	add    BYTE PTR [ecx-0x7b10000],bl
  41de46:	(bad)  
  41de48:	xchg   esi,eax
  41de49:	or     DWORD PTR ds:0xc388d75f,ecx
  41de4f:	in     eax,dx
  41de50:	pop    ebx
  41de51:	mov    ds:0x43019cff,eax
  41de56:	jae    0x41de47
  41de58:	pop    ss
  41de59:	inc    edi
  41de5a:	and    al,0xe1
  41de5c:	cld    
  41de5d:	mov    bh,ah
  41de5f:	jmp    0xdd660dc5
  41de64:	cmp    edi,ebx
  41de66:	les    esp,FWORD PTR [ebp-0x16ec0cfe]
  41de6c:	(bad)  
  41de6d:	or     ebp,eax
  41de6f:	and    eax,0xe909f6b5
  41de74:	(bad)  
  41de75:	or     DWORD PTR [ecx+0x66f2b525],ecx
  41de7b:	add    BYTE PTR [esi+eiz*8-0x17],ch
  41de7f:	add    BYTE PTR [ebp+edi*2+0x7b842440],bh
  41de86:	inc    eax
  41de87:	and    al,0x88
  41de89:	fnstsw WORD PTR [edi+0x64660]
  41de8f:	push   0x95c
  41de94:	cmc    
  41de95:	retf   0x1823
  41de98:	and    DWORD PTR [ebx],ecx
  41de9a:	and    DWORD PTR [edi+ebp*2+0x6],edx
  41de9e:	add    BYTE PTR [edx+0x7c],ch
  41dea1:	(bad)  
  41dea2:	cli    
  41dea3:	adc    eax,0x3c9884
  41dea8:	add    BYTE PTR [eax],al
  41deaa:	pop    ds
  41deab:	(bad)  
  41deac:	jg     0x41de72
  41deae:	pusha  
  41deaf:	call   0x461a2338
  41deb4:	call   0x485fef
  41deb9:	test   ah,ch
  41debb:	inc    DWORD PTR [ebx+0x62d93]
  41dec1:	xor    BYTE PTR [edx],0x6
  41dec4:	or     eax,DWORD PTR [ebp+0x53e]
  41deca:	add    esi,DWORD PTR [edi]
  41decc:	inc    ecx
  41decd:	and    al,0x6c
  41decf:	ja     0x41dea5
  41ded1:	sbb    edi,DWORD PTR [edi+esi*2-0x55cf7234]
  41ded8:	cmp    al,0x23
  41deda:	lods   eax,DWORD PTR ds:[esi]
  41dedb:	(bad)  
  41dedc:	imul   eax,DWORD PTR [eax],0xfff595e4
  41dee2:	repz jnp 0x41df1e
  41dee5:	cmp    BYTE PTR [esi],cl
  41dee7:	inc    esi
  41dee8:	add    BYTE PTR [ebp-0x30386],cl
  41deee:	in     al,dx
  41deef:	jle    0x41df31
  41def1:	and    al,0xcc
  41def3:	nop
  41def4:	inc    eax
  41def5:	and    al,0xd5
  41def7:	xor    dh,BYTE PTR [edi*8-0x3350b56]
  41defe:	(bad)  
  41deff:	mov    bl,0xf
  41df01:	add    eax,0x3fe02f60
  41df06:	add    eax,0xb567ef4c
  41df0b:	lods   al,BYTE PTR ds:[esi]
  41df0c:	inc    edx
  41df0d:	add    BYTE PTR [eax],al
  41df0f:	add    BYTE PTR [edx-0x1d3f2538],bl
  41df15:	out    dx,al
  41df16:	jecxz  0x41df16
  41df18:	mov    dh,BYTE PTR [ebx+0x28]
  41df1b:	loopne 0x41deab
  41df1d:	xor    al,0x4
  41df1f:	mov    DWORD PTR [ecx],eax
  41df21:	push   edi
  41df22:	in     al,dx
  41df23:	mov    BYTE PTR [esi+0x6a15099b],dl
  41df29:	add    bl,dl
  41df2b:	mov    edi,0x12e2305
  41df30:	add    eax,0xd567ff5d
  41df35:	jb     0x41df37
  41df37:	and    BYTE PTR [ebx-0x184c1321],0xb2
  41df3e:	add    BYTE PTR [ecx+0xc930c45],cl
  41df44:	pop    ecx
  41df45:	into   
  41df46:	add    eax,DWORD PTR [eax]
  41df48:	aad    0xa8
  41df4a:	test   al,0x52
  41df4c:	jbe    0x41df86
  41df4e:	xchg   edi,eax
  41df4f:	push   ebp
  41df50:	dec    esp
  41df51:	mov    bh,0xdc
  41df53:	and    ebx,DWORD PTR [esi+0x2d]
  41df56:	xchg   edi,eax
  41df57:	adc    bl,BYTE PTR ds:0xbc004085
  41df5d:	mov    dh,0xdc
  41df5f:	pop    ds
  41df60:	cmp    BYTE PTR [edx+0x7d],0xfc
  41df64:	loop   0x41df54
  41df66:	mov    edi,0x7d72eaff
  41df6b:	cld    
  41df6c:	shr    bh,cl
  41df6e:	push   edi
  41df6f:	(bad)  
  41df70:	fimul  DWORD PTR [ecx]
  41df72:	out    0x15,eax
  41df74:	add    BYTE PTR [eax],al
  41df76:	fild   WORD PTR [edx+0x3b]
  41df79:	loopne 0x41df65
  41df7b:	sbb    BYTE PTR [edx+0x53],ch
  41df7e:	ret    0xe688
  41df81:	mov    WORD PTR [esi+0x2e],es
  41df84:	xlat   BYTE PTR ds:[ebx]
  41df85:	xchg   BYTE PTR [esi],dl
  41df87:	cs daa 
  41df89:	xor    al,0x3
  41df8b:	mov    ebx,ebx
  41df8d:	and    eax,edi
  41df8f:	leave  
  41df90:	out    0x7e,al
  41df92:	pop    edx
  41df93:	std    
  41df94:	loopne 0x41dfc3
  41df96:	xlat   BYTE PTR ds:[ebx]
  41df97:	icebp  
  41df98:	xchg   esi,eax
  41df99:	imul   esp,DWORD PTR [ebp-0x70],0xa1dee7e
  41dfa0:	out    0x8c,eax
  41dfa2:	or     BYTE PTR [esi-0x67a6f77b],0xe6
  41dfa9:	add    edx,ebp
  41dfab:	repz loope 0x41df34
  41dfae:	push   ss
  41dfaf:	and    esi,DWORD PTR cs:[ebx+eax*1]
  41dfb3:	mov    ebx,edi
  41dfb5:	xlat   BYTE PTR ds:[ebx]
  41dfb6:	in     al,0xc9
  41dfb8:	out    0x7e,al
  41dfba:	mov    bh,ch
  41dfbc:	shl    DWORD PTR [eax],cl
  41dfbe:	sub    eax,0xd502e1d3
  41dfc3:	xchg   esi,eax
  41dfc4:	stos   BYTE PTR es:[edi],al
  41dfc5:	fcomip st,st(2)
  41dfc7:	fnstenv [ecx-0x3c]
  41dfca:	xor    dh,ch
  41dfcc:	fcomp  QWORD PTR [eax+0xbb39421]
  41dfd2:	push   esp
  41dfd3:	in     eax,dx
  41dfd4:	retf   0x12db
  41dfd7:	repnz out 0x86,eax
  41dfda:	add    BYTE PTR [eax],al
  41dfdc:	mov    gs,WORD PTR ds:0x8252abd3
  41dfe2:	or     eax,0x7a495698
  41dfe7:	xor    BYTE PTR [edi+ebp*8-0x1e],dl
  41dfeb:	add    ebx,DWORD PTR [esi-0x33]
  41dfee:	dec    esp
  41dff0:	out    dx,al
  41dff1:	xlat   BYTE PTR ds:[ebx]
  41dff2:	out    0xdd,eax
  41dff4:	ror    DWORD PTR [ecx],1
  41dff6:	add    BYTE PTR [ebp-0x67],ch
  41dff9:	xchg   edx,eax
  41dffa:	inc    ebp
  41dffb:	in     eax,0xd3
  41dffd:	call   0xebe1:0x78ed7c0
  41e004:	push   ebp
  41e005:	(bad)  
  41e006:	jae    0x41dffb
  41e008:	pop    edi
  41e009:	ja     0x41dff2
  41e00b:	lods   eax,DWORD PTR ds:[esi]
  41e00c:	in     eax,dx
  41e00d:	test   ah,bh
  41e00f:	(bad)  
  41e010:	les    edx,FWORD PTR [ecx]
  41e012:	mov    DWORD PTR ds:0xa1893fb5,esp
  41e018:	push   esp
  41e019:	(bad)  
  41e01a:	jae    0x41e008
  41e01c:	arpl   WORD PTR [edi],si
  41e01e:	call   0xfcc8866c
  41e023:	sub    DWORD PTR ss:[ecx+0x74a8630],esp
  41e02a:	stc    
  41e02b:	jmp    0x41dff2
  41e02d:	inc    esp
  41e02e:	mov    DWORD PTR ds:0xd8e91b75,ebp
  41e034:	inc    ebx
  41e035:	sti    
  41e036:	and    edi,ecx
  41e038:	jle    0x41dfd5
  41e03a:	mov    eax,ds:0x7292625e
  41e03f:	loope  0x41e041
  41e041:	add    BYTE PTR [esi-0x29168cca],bl
  41e047:	frndint 
  41e049:	cld    
  41e04a:	push   0x5d
  41e04c:	inc    eax
  41e04d:	jmp    0xdc2dfc95
  41e052:	xchg   esi,eax
  41e053:	or     DWORD PTR [ebx],edi
  41e055:	jmp    0x41e028
  41e057:	or     DWORD PTR [eax],eax
  41e059:	not    BYTE PTR [edx+0x621efdf3]
  41e05f:	xchg   BYTE PTR [ebx-0x33],dh
  41e062:	or     ch,BYTE PTR [edi-0x57]
  41e065:	jecxz  0x41e038
  41e067:	or     DWORD PTR [ecx],esi
  41e069:	add    bl,bl
  41e06b:	mov    ah,0x85
  41e06d:	std    
  41e06e:	jmp    0x41e00f
  41e070:	sbb    bl,0x61
  41e073:	dec    edi
  41e074:	xchg   DWORD PTR [eax+edx*1-0x7d],eax
  41e078:	out    0xce,eax
  41e07a:	(bad)  
  41e07c:	push   esi
  41e07d:	mov    esp,ecx
  41e07f:	and    eax,0x37ac4012
  41e084:	xchg   DWORD PTR ds:0x3fb8b0,edi
  41e08a:	push   edi
  41e08b:	jle    0x41e08c
  41e08d:	(bad)  
  41e08e:	mov    esp,0x6b086a3b
  41e093:	pop    ecx
  41e094:	mov    eax,0xfb0defc6
  41e099:	(bad)  
  41e09a:	pop    es
  41e09b:	mov    bl,0x81
  41e09d:	in     eax,dx
  41e09e:	loopne 0x41e0db
  41e0a0:	dec    edi
  41e0a1:	push   0x74
  41e0a3:	lahf   
  41e0a4:	xor    DWORD PTR [eax+eax*1-0x34ce00],edi
  41e0ab:	(bad)  
  41e0ac:	push   edx
  41e0ad:	xchg   ebx,eax
  41e0ae:	in     al,dx
  41e0af:	test   edx,esp
  41e0b1:	push   ss
  41e0b2:	cmp    eax,0x41c46c6a
  41e0b7:	add    BYTE PTR [ebp-0x6b],ch
  41e0ba:	mov    ecx,0xa3f14
  41e0bf:	push   ebp
  41e0c0:	imul   esp,DWORD PTR [esi+0x392c41b7],0x84f2006a
  41e0ca:	cld    
  41e0cb:	mov    BYTE PTR [edx+0x76],bl
  41e0ce:	(bad)  
  41e0cf:	(bad)  
  41e0d0:	cmp    al,0xb2
  41e0d2:	mov    bl,0x8
  41e0d4:	sub    eax,0x42006a0a
  41e0d9:	cmp    DWORD PTR [edx+0x0],ebp
  41e0dc:	xchg   dl,al
  41e0de:	in     al,0xaa
  41e0e0:	add    al,0xd
  41e0e2:	add    BYTE PTR [ebp+edx*8+0x5108103b],al
  41e0e9:	xor    BYTE PTR [eax],dl
  41e0eb:	add    al,0xa6
  41e0ed:	xor    BYTE PTR [edx+0x4130a604],ch
  41e0f3:	jmp    0x5d02a3cf
  41e0f8:	jnp    0x41e08f
  41e0fa:	cmp    ecx,eax
  41e0fc:	sub    al,bh
  41e0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0ff:	cmp    BYTE PTR [ecx-0x1aba787d],0x3f
  41e106:	sub    eax,ebp
  41e108:	adc    BYTE PTR [edi+0x1],bl
  41e10b:	add    BYTE PTR [eax],al
  41e10d:	add    ch,dl
  41e10f:	jb     0x41e18e
  41e111:	mov    edi,0xff69eeda
  41e116:	mov    ds:0x994a8573,al
  41e11b:	and    dl,BYTE PTR [ebx+0x118e175]
  41e121:	push   eax
  41e122:	jge    0x41e189
  41e124:	fdivr  st,st(4)
  41e126:	sub    al,0xbb
  41e129:	sbb    BYTE PTR [esi-0x2a71839c],0x72
  41e130:	add    BYTE PTR [edx-0x2b],ch
  41e133:	call   0x5139:0x72d55b6e
  41e13a:	pop    edx
  41e13b:	jle    0x41e0d1
  41e13d:	mov    BYTE PTR [ebp-0x3c],cl
  41e140:	xchg   ebx,eax
  41e141:	adc    dl,BYTE PTR [ecx]
  41e143:	add    DWORD PTR [eax+0x0],0x5008ae4e
  41e14a:	mov    ds:0x9576f84a,al
  41e14f:	jb     0x41e177
  41e151:	add    DWORD PTR [ebp+0x23e65bda],ecx
  41e157:	cmp    al,0x2b
  41e159:	mov    bh,ch
  41e15b:	retf   0x3226
  41e15e:	adc    cl,BYTE PTR [edx]
  41e160:	es xchg ebp,eax
  41e162:	xchg   DWORD PTR [ebp-0x7b38def2],eax
  41e168:	adc    eax,0xb4fe1d80
  41e16d:	xchg   esp,eax
  41e16e:	push   0x3f7411
  41e173:	add    ch,ch
  41e175:	out    dx,eax
  41e176:	out    0x94,al
  41e178:	addr16 adc edi,edi
  41e17b:	add    eax,0x7fed83ec
  41e180:	xchg   edx,eax
  41e181:	std    
  41e182:	sub    BYTE PTR [ecx+0x46718617],cl
  41e188:	mov    ebp,0x4094e7ef
  41e18d:	push   ss
  41e18e:	mov    edi,0xc584eb94
  41e193:	mov    BYTE PTR [edx-0x6f05e72],al
  41e199:	nop
  41e19a:	xor    al,0xf4
  41e19c:	push   edi
  41e19d:	test   BYTE PTR [edx],dh
  41e19f:	pop    es
  41e1a0:	nop
  41e1a1:	cmp    al,0x8f
  41e1a3:	fadd   st(4),st
  41e1a5:	test   BYTE PTR [ebp-0x26d592d4],bl
  41e1ab:	xchg   esp,eax
  41e1ac:	jns    0x41e13e
  41e1ae:	sbb    ecx,DWORD PTR [eax]
  41e1b0:	pop    esp
  41e1b1:	pop    ebx
  41e1b2:	outs   dx,DWORD PTR ds:[esi]
  41e1b3:	xor    eax,0x1484c5
  41e1b8:	pop    edx
  41e1b9:	into   
  41e1ba:	jp     0x41e164
  41e1bc:	rol    BYTE PTR [ebx+esi*8+0x19123a9b],cl
  41e1c3:	xchg   ebp,eax
  41e1c4:	dec    ecx
  41e1c5:	nop
  41e1c6:	mov    ds:0x1fe0a18f,eax
  41e1cb:	rcl    edx,0x9
  41e1ce:	mov    ah,0x88
  41e1d0:	mov    BYTE PTR ds:[edx-0x65],cl
  41e1d4:	push   ebp
  41e1d5:	jne    0x41e1d9
  41e1d7:	xor    DWORD PTR [eax],eax
  41e1d9:	add    BYTE PTR [ebx-0x259c0024],cl
  41e1df:	sub    eax,0x7a5d9924
  41e1e4:	xchg   BYTE PTR [ebp+0x47e8202a],dh
  41e1ea:	push   eax
  41e1eb:	xchg   ah,bh
  41e1ed:	ins    DWORD PTR es:[edi],dx
  41e1ee:	push   ss
  41e1ef:	clc    
  41e1f0:	or     dh,bl
  41e1f2:	mov    eax,ds:0x5fcd23c8
  41e1f7:	enter  0xdd23,0x2d
  41e1fb:	or     al,0xc5
  41e1fd:	lods   eax,DWORD PTR ds:[esi]
  41e1fe:	cli    
  41e1ff:	pop    ds
  41e200:	(bad)  
  41e201:	call   0x64caebdc
  41e206:	leave  
  41e207:	xchg   edx,eax
  41e208:	inc    esp
  41e209:	stc    
  41e20a:	loopne 0x41e18e
  41e20c:	push   edx
  41e20d:	(bad)  
  41e20e:	(bad)  ds:0x90821a20
  41e214:	jae    0x41e223
  41e216:	or     DWORD PTR [ebx+eax*2+0x5b8bb505],0x5b8ca60d
  41e221:	add    eax,0xcd5b8ca9
  41e226:	mov    ds:0x8ec55b8c,al
  41e22b:	imul   esp,DWORD PTR [edx],0xffffff81
  41e22e:	xchg   BYTE PTR [bp+di-0x2957],al
  41e233:	lea    edi,[ebx-0x78f62917]
  41e239:	sbb    eax,0x2e89176d
  41e23e:	add    BYTE PTR [eax],al
  41e240:	pop    ecx
  41e241:	inc    edx
  41e242:	shl    ebp,0x46
  41e245:	fimul  DWORD PTR [edi+0x66]
  41e248:	dec    esp
  41e249:	outs   dx,DWORD PTR ds:[esi]
  41e24a:	adc    DWORD PTR [ecx-0x1940792a],ebp
  41e250:	push   edx
  41e251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e252:	(bad)  
  41e253:	call   0x85732e
  41e258:	fsubr  DWORD PTR [ebp+0x37]
  41e25b:	ret    
  41e25c:	imul   ecx,DWORD PTR [edx],0x97bb1de8
  41e262:	sti    
  41e263:	push   eax
  41e264:	xchg   esp,eax
  41e265:	mov    bl,0x34
  41e267:	push   DWORD PTR [ebx-0x1374d15e]
  41e26d:	xchg   edi,eax
  41e26e:	ins    BYTE PTR es:[edi],dx
  41e26f:	adc    al,0x3c
  41e271:	lahf   
  41e272:	enter  0xe331,0x96
  41e276:	xchg   eax,esi
  41e278:	pop    ss
  41e279:	pushf  
  41e27a:	jo     0x41e29b
  41e27c:	inc    esi
  41e27d:	or     ebp,eax
  41e27f:	xor    DWORD PTR ds:0xff3bfb98,ebx
  41e285:	and    DWORD PTR [ecx+ecx*4],eax
  41e288:	aam    0xa2
  41e28a:	(bad)  
  41e28b:	xor    ch,BYTE PTR [ebx+edx*2-0x41]
  41e28f:	je     0x41e239
  41e291:	add    eax,0x40b4eb2d
  41e296:	call   0xfbd98fd4
  41e29b:	xor    ebp,DWORD PTR [ebp+eax*1+0x44]
  41e29f:	adc    BYTE PTR [edi+0x53704b],ah
  41e2a5:	add    bh,dh
  41e2a7:	cmp    ah,BYTE PTR [esp+ebx*1]
  41e2aa:	pop    es
  41e2ab:	inc    ebx
  41e2ac:	and    al,0x14
  41e2ae:	retf   
  41e2af:	xchg   esi,eax
  41e2b0:	adc    edi,DWORD PTR [ebx]
  41e2b2:	das    
  41e2b3:	and    DWORD PTR [eax],edx
  41e2b5:	dec    eax
  41e2b7:	jno    0x41e2c9
  41e2b9:	lea    edi,[eax-0x18afdb8f]
  41e2bf:	lahf   
  41e2c0:	in     al,0x44
  41e2c2:	loop   0x41e25b
  41e2c4:	sti    
  41e2c5:	mov    ecx,DWORD PTR [ebx+0x76]
  41e2c8:	test   DWORD PTR [eax+ebx*8+0x75],eax
  41e2cc:	aaa    
  41e2cd:	repz sub BYTE PTR [ecx],cl
  41e2d0:	sti    
  41e2d1:	ss aad 0xc8
  41e2d4:	xchg   ecx,eax
  41e2d5:	das    
  41e2d6:	xor    dl,bl
  41e2d8:	ss call 0xfcd3630a
  41e2de:	push   esi
  41e2df:	(bad)  
  41e2e0:	in     al,0x17
  41e2e2:	xlat   BYTE PTR ds:[ebx]
  41e2e3:	(bad)  
  41e2e4:	test   DWORD PTR [eax-0x113f36f],0x43917986
  41e2ee:	mov    ecx,0xfa4a9b7c
  41e2f3:	sbb    dl,BYTE PTR [edx-0xab3663b]
  41e2f9:	(bad)  
  41e2fa:	pop    edi
  41e2fb:	mov    ah,0xe4
  41e2fd:	pop    ds
  41e2fe:	dec    esp
  41e2ff:	stos   DWORD PTR es:[edi],eax
  41e300:	lock mov dl,BYTE PTR [ecx-0x59181bac]
  41e307:	or     BYTE PTR [edi+0x5f0000fc],cl
  41e30d:	das    
  41e30e:	call   0x2b830523
  41e313:	mov    DWORD PTR [eax-0x2afc39ca],esi
  41e319:	xor    eax,0x5756eb7b
  41e31e:	retf   
  41e31f:	cmp    BYTE PTR [eax],0xaf
  41e322:	add    edx,DWORD PTR [ecx+0x2f]
  41e325:	pop    edi
  41e326:	jge    0x41e36a
  41e328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e329:	int    0x3
  41e32b:	push   eax
  41e32c:	mov    bh,BYTE PTR [esi-0x18]
  41e32f:	adc    eax,0xc3837315
  41e334:	leave  
  41e335:	in     eax,0x44
  41e337:	in     al,0x5
  41e339:	nop
  41e33a:	hlt    
  41e33b:	jecxz  0x41e304
  41e33d:	xor    al,BYTE PTR [edi*8-0x6e678518]
  41e344:	in     eax,0x72
  41e346:	add    BYTE PTR [edx-0x1bbb21d3],cl
  41e34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e34d:	or     DWORD PTR [esi-0x9],esp
  41e350:	push   cs
  41e351:	sbb    al,0xa7
  41e353:	add    ecx,DWORD PTR [edi+0x4d]
  41e356:	mov    cl,0xba
  41e358:	adc    al,0x6
  41e35a:	out    0x36,eax
  41e35c:	pop    esp
  41e35d:	outs   dx,BYTE PTR ds:[esi]
  41e35e:	imul   ebp,DWORD PTR [eax-0x57b574d6],0x34e6811b
  41e368:	les    esp,FWORD PTR [edi+eiz*2+0xf]
  41e36c:	in     eax,dx
  41e36d:	or     edi,esp
  41e36f:	jecxz  0x41e371
  41e371:	add    BYTE PTR [edx],al
  41e373:	xlat   BYTE PTR ds:[ebx]
  41e374:	mov    ch,0x7b
  41e376:	sahf   
  41e377:	and    eax,0x258e7ae6
  41e37c:	test   DWORD PTR [eax],0x3e81d54
  41e382:	aad    0xf3
  41e384:	fdivr  QWORD PTR [esi+0x5e]
  41e387:	and    eax,0x76d29bdb
  41e38c:	in     eax,dx
  41e38d:	nop
  41e38e:	push   esi
  41e38f:	dec    ecx
  41e390:	cmc    
  41e391:	xchg   edx,eax
  41e393:	or     edi,esp
  41e395:	add    ecx,DWORD PTR [ebp+edi*8+0xa]
  41e399:	hlt    
  41e39a:	cmp    al,0x6
  41e39c:	pop    esp
  41e39d:	inc    esi
  41e39e:	fstp   st(1)
  41e3a0:	dec    esi
  41e3a1:	out    0xf9,al
  41e3a3:	or     edi,esp
  41e3a5:	cmp    BYTE PTR [ebp-0x6e6f06a8],ch
  41e3ab:	test   DWORD PTR [esi-0x19a4af00],esp
  41e3b1:	add    edx,ebp
  41e3b3:	adc    BYTE PTR [ebx],0xec
  41e3b6:	jns    0x41e3ae
  41e3b8:	cli    
  41e3b9:	sbb    esi,DWORD PTR [eax+ebp*1+0x720003e7]
  41e3c0:	inc    esp
  41e3c1:	aam    0x61
  41e3c3:	and    BYTE PTR [edx-0x3d],0xc9
  41e3c7:	test   edi,edi
  41e3c9:	das    
  41e3ca:	(bad)  
  41e3cb:	or     DWORD PTR [eax],eax
  41e3cd:	mov    al,0xfb
  41e3cf:	or     eax,0xfb65ff74
  41e3d4:	or     edx,ecx
  41e3d6:	add    BYTE PTR [eax],al
  41e3d8:	cmp    eax,0xede90025
  41e3dd:	jno    0x41e3ff
  41e3df:	adc    eax,0x29837d44
  41e3e4:	aad    0x85
  41e3e6:	popf   
  41e3e7:	jmp    0x9478edc2
  41e3ec:	push   es
  41e3ed:	cld    
  41e3ee:	adc    eax,0x6819e32e
  41e3f3:	add    esp,ebp
  41e3f5:	jg     0x41e3f3
  41e3f7:	mov    dh,0x5e
  41e3f9:	or     BYTE PTR [esi+edx*1],dh
  41e3fc:	inc    ebp
  41e3fd:	mov    WORD PTR [edi-0x76ad22],?
  41e403:	call   0x9143d7de
  41e408:	inc    esi
  41e409:	scas   al,BYTE PTR es:[edi]
  41e40a:	nop
  41e40b:	outs   dx,BYTE PTR ds:[esi]
  41e40c:	outs   dx,BYTE PTR ds:[esi]
  41e40d:	dec    ebx
  41e40e:	push   ebp
  41e40f:	jmp    0xd856aea
  41e414:	mov    ebp,0xda55c142
  41e419:	xchg   edx,eax
  41e41a:	jae    0x41e429
  41e41c:	shl    DWORD PTR [edi-0x42],0x85
  41e420:	pop    edx
  41e421:	jle    0x41e473
  41e423:	push   ebx
  41e424:	fdiv   DWORD PTR [ecx-0x14]
  41e427:	mov    edx,0x7dfc7e4a
  41e42c:	jge    0x41e49f
  41e42e:	(bad)  
  41e42f:	call   0xb321d60a
  41e434:	push   ss
  41e435:	or     ch,al
  41e437:	xor    al,0xc2
  41e439:	jl     0x41e437
  41e43b:	bound  eax,QWORD PTR [eax]
  41e43d:	add    BYTE PTR [ecx+0x42],cl
  41e440:	icebp  
  41e441:	adc    eax,0x43948d
  41e446:	nop
  41e447:	jnp    0x41e495
  41e449:	(bad)  
  41e44a:	lock jno 0x41e3f5
  41e44d:	add    BYTE PTR [ebx+ecx*1],bh
  41e450:	push   eax
  41e451:	push   ebx
  41e452:	jecxz  0x41e3f1
  41e454:	and    BYTE PTR ds:0xc3378ebb,dh
  41e45a:	and    bh,BYTE PTR [eax+0x4c]
  41e45d:	call   DWORD PTR [eax]
  41e45f:	addr16 adc al,ch
  41e462:	dec    edi
  41e463:	cs sti 
  41e465:	call   FWORD PTR [ebx-0x5befdbdf]
  41e46b:	shl    DWORD PTR [ebx],1
  41e46d:	adc    edx,DWORD PTR [esi+ebx*1-0x624400d5]
  41e474:	jle    0x41e4ce
  41e476:	mov    ebx,0x1074fb8e
  41e47b:	ja     0x41e461
  41e47d:	scas   al,BYTE PTR es:[edi]
  41e47e:	add    al,BYTE PTR [esi]
  41e480:	add    BYTE PTR [ebp+0x50146730],cl
  41e486:	les    esi,FWORD PTR [edx]
  41e488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e489:	(bad)  
  41e48a:	fist   DWORD PTR [ebx-0x9]
  41e48d:	je     0x41e448
  41e48f:	(bad)  
  41e490:	xor    ebp,eax
  41e492:	push   0x3fffb5f
  41e497:	sahf   
  41e498:	inc    edx
  41e499:	das    
  41e49a:	fwait
  41e49b:	pop    DWORD PTR [esi+0x5b7ee044]
  41e4a1:	pop    esi
  41e4a2:	add    BYTE PTR [eax],al
  41e4a4:	out    0x2,eax
  41e4a6:	loop   0x41e505
  41e4a8:	outs   dx,BYTE PTR ds:[esi]
  41e4a9:	jbe    0x41e4a7
  41e4ab:	push   esp
  41e4ac:	daa    
  41e4ad:	lahf   
  41e4ae:	xchg   DWORD PTR [esi],eax
  41e4b0:	call   FWORD PTR [esi+0x23e35350]
  41e4b6:	std    
  41e4b7:	mov    ecx,cs
  41e4b9:	jmp    0xb3e13b0b
  41e4be:	sti    
  41e4bf:	push   eax
  41e4c0:	aad    0x60
  41e4c2:	xchg   DWORD PTR [edi+0x42792ae0],edi
  41e4c8:	sub    DWORD PTR [ebp+0x0],eax
  41e4cb:	add    BYTE PTR [ebp+0xc401170],dh
  41e4d1:	push   ss
  41e4d2:	dec    esp
  41e4d3:	jb     0x41e4e3
  41e4d5:	jmp    0x3415:0x33fef847
  41e4dc:	sub    eax,0x32fcdb41
  41e4e1:	jmp    0x41e46b
  41e4e3:	cmp    BYTE PTR [esi],ch
  41e4e5:	push   esp
  41e4e6:	fisttp DWORD PTR [eax-0x7c00a25]
  41e4ec:	test   BYTE PTR [edi],bh
  41e4ee:	sbb    al,bh
  41e4f0:	stos   BYTE PTR es:[edi],al
  41e4f1:	sahf   
  41e4f2:	lea    ecx,[edi-0x27]
  41e4f5:	in     eax,0xc0
  41e4f7:	jb     0x41e4dd
  41e4f9:	daa    
  41e4fa:	sbb    al,bh
  41e4fc:	mov    ds:0x8608181f,al
  41e501:	mov    bh,dh
  41e503:	out    0x8b,eax
  41e505:	push   cs
  41e506:	mov    ?,esp
  41e508:	add    BYTE PTR [eax],al
  41e50a:	dec    edi
  41e50b:	sub    BYTE PTR [esi],dh
  41e50d:	call   0xfccf3312
  41e512:	xor    ch,cl
  41e514:	rcr    DWORD PTR [eax-0x64],0x31
  41e518:	add    eax,0x9ff82800
  41e51d:	sub    BYTE PTR [ecx-0x4e9d807d],0x73
  41e524:	das    
  41e525:	push   esi
  41e526:	pop    eax
  41e527:	es in  al,dx
  41e529:	dec    edi
  41e52a:	mov    ds:0x108af83e,al
  41e52f:	mov    edi,0x591ce833
  41e534:	mov    edi,esp
  41e536:	push   esi
  41e537:	mov    ebx,0x9bd738a
  41e53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53d:	pop    ss
  41e53e:	jns    0x41e4cf
  41e540:	adc    edx,DWORD PTR [edx+edi*2+0x698cf08b]
  41e547:	jge    0x41e55c
  41e549:	nop
  41e54a:	dec    esp
  41e54b:	bound  ecx,QWORD PTR [esi+0x7d7ca875]
  41e551:	mov    BYTE PTR ds:0xc78cd1f6,ch
  41e557:	sub    DWORD PTR [ebp+0x17],0xf3db7d45
  41e55e:	cmp    edi,esi
  41e560:	jmp    0x2b04:0x3f11a78c
  41e567:	jge    0x41e5b6
  41e569:	jp     0x41e575
  41e56b:	jb     0x41e51b
  41e56d:	jmp    0x7d5ae572
  41e572:	jo     0x41e535
  41e574:	std    
  41e575:	pop    es
  41e576:	stc    
  41e577:	ret    
  41e578:	test   al,0xe0
  41e57a:	pop    ds
  41e57b:	shl    DWORD PTR [edi-0x117ced70],0x25
  41e582:	jecxz  0x41e587
  41e584:	aad    0xd8
  41e586:	mov    esp,0x5b825c34
  41e58b:	xchg   DWORD PTR [edx],eax
  41e58d:	add    DWORD PTR ds:0xf4f18a8d,0x2d09d503
  41e597:	inc    edi
  41e598:	enter  0xee09,0xf6
  41e59c:	sbb    bl,BYTE PTR [eax]
  41e59e:	daa    
  41e59f:	add    al,0xd
  41e5a1:	aas    
  41e5a2:	aam    0x3
  41e5a4:	aad    0x9
  41e5a6:	out    0x84,al
  41e5a8:	pop    eax
  41e5a9:	or     edi,esp
  41e5ab:	add    ecx,DWORD PTR [esi-0x7a]
  41e5ae:	into   
  41e5af:	mov    ds,WORD PTR [ecx-0x2ae5e984]
  41e5b5:	icebp  
  41e5b6:	dec    DWORD PTR [esi+ebx*8]
  41e5b9:	leave  
  41e5ba:	call   FWORD PTR [ebx+0x5b]
  41e5bd:	pop    esp
  41e5be:	clc    
  41e5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c0:	dec    ecx
  41e5c1:	int3   
  41e5c2:	cld    
  41e5c3:	hlt    
  41e5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c5:	pop    ss
  41e5c6:	inc    eax
  41e5c7:	jmp    0xfeb5a21f
  41e5cc:	jecxz  0x41e555
  41e5ce:	out    0x84,eax
  41e5d0:	dec    ecx
  41e5d1:	jge    0x41e622
  41e5d3:	xchg   ecx,eax
  41e5d4:	add    BYTE PTR [eax],al
  41e5d6:	aaa    
  41e5d7:	lahf   
  41e5d8:	cld    
  41e5d9:	jbe    0x41e62d
  41e5db:	mov    esp,0xf7500e73
  41e5e0:	pop    es
  41e5e1:	je     0x41e58e
  41e5e3:	fs cli 
  41e5e5:	pop    esi
  41e5e6:	popa   
  41e5e7:	fs xchg esp,eax
  41e5e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ea:	pop    ecx
  41e5eb:	jge    0x41e570
  41e5ed:	sub    edx,ecx
  41e5ef:	shr    BYTE PTR [ecx-0x18],1
  41e5f2:	fwait
  41e5f3:	xchg   edi,esp
  41e5f5:	cmp    al,0x61
  41e5f7:	jge    0x41e648
  41e5f9:	fs jecxz 0x41e675
  41e5fc:	xor    DWORD PTR [edx],edx
  41e5fe:	pop    esi
  41e5ff:	xchg   ebp,eax
  41e600:	cwde   
  41e601:	es dec ecx
  41e603:	mov    BYTE PTR [edi-0x7d71066b],bh
  41e609:	add    DWORD PTR [ebx+0x7d],ebx
  41e60c:	cld    
  41e60d:	fs push ecx
  41e60f:	clc    
  41e610:	add    DWORD PTR [edx+0x11],esi
  41e613:	jge    0x41e687
  41e615:	cmc    
  41e616:	pop    esi
  41e617:	clc    
  41e618:	out    dx,eax
  41e619:	mul    al
  41e61b:	or     eax,0x71d48350
  41e620:	dec    ecx
  41e621:	in     al,0x4e
  41e623:	jle    0x41e5ae
  41e625:	shr    DWORD PTR [eax+ecx*8],0xef
  41e629:	ror    DWORD PTR [esi+0x1ccefc9f],0x88
  41e630:	out    0x0,eax
  41e632:	xchg   ecx,eax
  41e633:	(bad)  
  41e634:	sti    
  41e635:	push   eax
  41e636:	add    al,0x31
  41e638:	sti    
  41e639:	call   0xf243e63e
  41e63e:	sti    
  41e63f:	push   esi
  41e641:	enter  0x5ffa,0x12
  41e645:	sub    eax,ebp
  41e647:	ret    0x764
  41e64a:	push   ecx
  41e64b:	mov    edx,DWORD PTR [eax+0x35]
  41e64e:	push   esi
  41e64f:	mov    edi,DWORD PTR [ecx+eax*1]
  41e652:	inc    edx
  41e653:	cld    
  41e654:	mov    esp,0x7b026a37
  41e659:	leave  
  41e65a:	sti    
  41e65b:	add    al,0x3d
  41e65d:	pop    es
  41e65e:	add    bh,bh
  41e660:	sub    ebx,esp
  41e662:	cmovo  ebp,DWORD PTR [ebx+edi*8]
  41e666:	mov    esp,0x41face74
  41e66b:	cld    
  41e66c:	mov    ecx,0xbf2b7045
  41e671:	mov    esp,0xc9208962
  41e676:	xchg   dh,al
  41e678:	sbb    cl,BYTE PTR [esi+0xa]
  41e67b:	je     0x41e651
  41e67d:	jle    0x41e632
  41e67f:	or     BYTE PTR [edi-0x74],ch
  41e682:	sub    esi,DWORD PTR [ecx+ebp*8-0x7d]
  41e686:	cmc    
  41e687:	pop    esp
  41e688:	dec    ecx
  41e689:	or     DWORD PTR [edx+0x7c],ebp
  41e68c:	and    eax,0x6f088529
  41e691:	inc    ebp
  41e692:	(bad)  
  41e693:	outs   dx,DWORD PTR gs:[esi]
  41e695:	dec    ebp
  41e696:	cld    
  41e697:	je     0x41e671
  41e699:	call   0x0:0x5f4b806
  41e6a0:	add    BYTE PTR [eax],al
  41e6a2:	aam    0x94
  41e6a4:	and    al,BYTE PTR [ecx]
  41e6a6:	lods   al,BYTE PTR ds:[esi]
  41e6a7:	xor    ch,al
  41e6a9:	ret    
  41e6aa:	jmp    0xd5c5cfa9
  41e6af:	dec    esp
  41e6b0:	mov    BYTE PTR [esi-0x4f],bh
  41e6b3:	aam    0x4
  41e6b5:	add    ch,dl
  41e6b7:	pop    ds
  41e6b8:	xor    dl,BYTE PTR [ebp-0x3a]
  41e6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6bc:	sbb    BYTE PTR [esp+ecx*1],ch
  41e6bf:	xor    DWORD PTR [ecx+edx*2],eax
  41e6c2:	dec    ebp
  41e6c3:	or     al,0xe0
  41e6c5:	adc    al,0x7a
  41e6c7:	jge    0x41e729
  41e6c9:	unpckhps xmm6,XMMWORD PTR [ecx+0x7b]
  41e6cd:	inc    ebx
  41e6ce:	mov    cl,0x80
  41e6d0:	int    0xc0
  41e6d2:	shl    ah,cl
  41e6d4:	inc    ecx
  41e6d5:	call   FWORD PTR [edx+0x70]
  41e6d8:	jge    0x41e70c
  41e6da:	ins    DWORD PTR es:[edi],dx
  41e6db:	pusha  
  41e6dc:	inc    eax
  41e6dd:	add    BYTE PTR [esi+0x42fcd520],ah
  41e6e3:	xchg   edx,eax
  41e6e4:	int    0xc0
  41e6e6:	rol    DWORD PTR [eax+0x4a9fd30],0xf0
  41e6ed:	inc    esp
  41e6ee:	sub    bh,BYTE PTR [edx]
  41e6f0:	into   
  41e6f1:	shr    BYTE PTR [eax-0x5f07322c],0x76
  41e6f8:	mov    esi,0x36bb943
  41e6fd:	out    0xe7,eax
  41e6ff:	jno    0x41e701
  41e701:	add    BYTE PTR [eax-0x4c],dl
  41e704:	fcomp  QWORD PTR [ebx]
  41e706:	add    BYTE PTR [eax],al
  41e708:	cmp    eax,0xd500012d
  41e70d:	stc    
  41e70e:	and    al,0x24
  41e710:	int    0xe9
  41e712:	and    al,0x24
  41e714:	leave  
  41e715:	or     BYTE PTR [ebp+eiz*1+0x41a70d4],al
  41e71c:	es cld 
  41e71e:	mov    esi,0xf0d30088
  41e723:	aas    
  41e724:	aad    0x92
  41e726:	ja     0x41e76b
  41e728:	icebp  
  41e729:	or     DWORD PTR [edi],eax
  41e72b:	xor    al,0xb0
  41e72d:	inc    BYTE PTR [edx]
  41e72f:	in     al,0xa9
  41e731:	pusha  
  41e732:	imul   eax,esp,0xffffffd1
  41e735:	lea    ebp,[ebx+0x7209d504]
  41e73b:	inc    eax
  41e73c:	mov    ecx,0x7c5021d
  41e741:	push   cs
  41e742:	cli    
  41e743:	ret    
  41e744:	ins    DWORD PTR es:[edi],dx
  41e745:	movsx  ecx,WORD PTR [ecx+ebp*4]
  41e749:	js     0x41e6f0
  41e74b:	jnp    0x41e763
  41e74d:	cs dec esp
  41e750:	xchg   ebp,eax
  41e751:	or     DWORD PTR [ebx-0x3c],ebp
  41e754:	bound  edi,QWORD PTR [ecx-0x1a]
  41e757:	sbb    eax,0x4073dcd1
  41e75c:	stc    
  41e75d:	sub    eax,0x2d967717
  41e762:	(bad)  
  41e763:	xor    eax,DWORD PTR [eax-0x2]
  41e766:	ret    0x39e3
  41e769:	pusha  
  41e76a:	imul   eax,esp,0x0
  41e76d:	add    cl,ah
  41e76f:	lea    edi,[edx+0x4]
  41e772:	aad    0x9
  41e774:	mov    edi,0xe6c9abd7
  41e779:	test   BYTE PTR [edx],dl
  41e77b:	jns    0x41e7f0
  41e77d:	adc    BYTE PTR [ecx-0x2765b10b],bh
  41e783:	js     0x41e7ba
  41e785:	jge    0x41e79f
  41e787:	fisubr DWORD PTR ds:0xa71d0aef
  41e78d:	add    ebx,DWORD PTR [esi-0x32]
  41e790:	ret    0x9adb
  41e793:	js     0x41e790
  41e795:	mov    eax,esp
  41e797:	leave  
  41e798:	out    0x76,al
  41e79a:	sub    ax,0x4bbf
  41e79e:	cwde   
  41e79f:	or     edi,esp
  41e7a1:	add    edi,DWORD PTR [ebp-0x28340080]
  41e7a7:	or     DWORD PTR [ebx-0xff4a9b],ecx
  41e7ad:	call   0xdfde4988
  41e7b2:	pop    ebp
  41e7b3:	jne    0x41e7c1
  41e7b5:	sahf   
  41e7b6:	loop   0x41e7e5
  41e7b8:	sub    BYTE PTR [ecx],bh
  41e7ba:	pushf  
  41e7bb:	mov    ebp,0xc8af0d43
  41e7c0:	or     al,0x76
  41e7c2:	retf   0x362d
  41e7c5:	sbb    DWORD PTR [edx],ecx
  41e7c7:	lea    esp,[ebx]
  41e7c9:	gs (bad) 
  41e7cb:	or     DWORD PTR [eax],eax
  41e7cd:	cmp    edx,ebp
  41e7cf:	mov    WORD PTR [ebx],fs
  41e7d1:	jno    0x41e7d3
  41e7d3:	add    bh,dl
  41e7d5:	or     DWORD PTR [eax],eax
  41e7d7:	cmp    eax,esp
  41e7d9:	dec    esi
  41e7da:	dec    edi
  41e7db:	add    ecx,DWORD PTR [edi+0x32458ad1]
  41e7e1:	or     bh,bh
  41e7e3:	call   0xdfd649be
  41e7e8:	dec    ebp
  41e7e9:	jne    0x41e76b
  41e7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ec:	mov    edi,DWORD PTR cs:[edi+0x737536e7]
  41e7f3:	add    eax,0x56c48125
  41e7f8:	shr    BYTE PTR ds:0x25beb91c,cl
  41e7fe:	ja     0x41e7a9
  41e800:	(bad)  
  41e801:	jecxz  0x41e804
  41e803:	push   ecx
  41e804:	fidiv  DWORD PTR [edx-0x4]
  41e807:	cmp    BYTE PTR ss:[eax-0x33eb1b8d],0x23
  41e80f:	not    bh
  41e811:	cmp    bl,cl
  41e813:	push   ds
  41e814:	fisubr DWORD PTR ds:0x212d0118
  41e81a:	std    
  41e81b:	push   cs
  41e81c:	mov    eax,ds:0xa0007376
  41e821:	addr16 sti 
  41e823:	adc    eax,0x3c7b28
  41e828:	ss aaa 
  41e82a:	and    al,0xf
  41e82c:	dec    ebx
  41e82d:	and    DWORD PTR [edi-0x75],edx
  41e830:	mov    eax,ds:0x3955bf21
  41e835:	adc    ah,BYTE PTR [esp+edx*4]
  41e838:	add    BYTE PTR [eax],al
  41e83a:	sub    eax,0xac02f092
  41e83f:	or     edx,DWORD PTR [esi-0x1]
  41e842:	rol    DWORD PTR [ecx],1
  41e844:	xchg   DWORD PTR [ebp-0x40],esi
  41e847:	mov    ?,WORD PTR [ecx+0x78]
  41e84a:	loop   0x41e7da
  41e84c:	adc    DWORD PTR [eax-0x77003464],ebp
  41e852:	rcl    DWORD PTR ds:0xf77bc081,0x0
  41e859:	add    DWORD PTR [ebx+ecx*1-0xd],ebp
  41e85d:	inc    ebp
  41e85e:	enter  0xd,0x0
  41e862:	sub    al,0x80
  41e864:	xor    edi,0x85000b3c
  41e86a:	ret    0x807e
  41e86d:	out    dx,eax
  41e86e:	sub    al,0xb
  41e870:	add    BYTE PTR [ebx-0x79f4f206],al
  41e876:	xchg   edx,eax
  41e877:	or     eax,0xfaf0000
  41e87c:	add    al,0x0
  41e87e:	sti    
  41e87f:	neg    al
  41e881:	add    ah,bh
  41e883:	or     ch,al
  41e885:	stos   BYTE PTR es:[edi],al
  41e886:	outs   dx,DWORD PTR ds:[esi]
  41e887:	or     eax,DWORD PTR [eax]
  41e889:	test   BYTE PTR [esi+edi*2+0xaeccf80],ch
  41e890:	add    BYTE PTR [ebx+0x33],dl
  41e893:	repnz inc ecx
  41e895:	dec    esp
  41e896:	sub    al,0x90
  41e898:	adc    eax,edi
  41e89a:	aad    0x72
  41e89c:	inc    eax
  41e89d:	add    BYTE PTR [eax],al
  41e89f:	add    BYTE PTR [eax-0x62],cl
  41e8a2:	xor    BYTE PTR [edi+0x609b],0xbd
  41e8a9:	or     ah,al
  41e8ab:	inc    dl
  41e8ad:	in     eax,dx
  41e8ae:	push   cs
  41e8af:	cmp    al,0x7d
  41e8b1:	das    
  41e8b2:	add    al,0x0
  41e8b4:	aad    0x58
  41e8b6:	xchg   edi,eax
  41e8b7:	and    edx,esp
  41e8b9:	pusha  
  41e8ba:	ja     0x41e83e
  41e8bc:	sbb    eax,0xadfc855e
  41e8c1:	inc    BYTE PTR [edi+0x4d7f92fc]
  41e8c7:	inc    edx
  41e8c8:	sbb    DWORD PTR [ecx],edx
  41e8ca:	cmc    
  41e8cb:	mov    ah,0x18
  41e8cd:	das    
  41e8ce:	xor    al,0xd
  41e8d0:	inc    edx
  41e8d1:	sub    eax,0xa65e5032
  41e8d6:	xor    BYTE PTR [ebx-0x378d7b0],cl
  41e8dc:	bound  esi,QWORD PTR [eax]
  41e8de:	ja     0x41e922
  41e8e0:	push   ebp
  41e8e1:	xor    BYTE PTR [edx],bl
  41e8e3:	ds scas al,BYTE PTR es:[edi]
  41e8e5:	std    
  41e8e6:	pop    es
  41e8e7:	sar    BYTE PTR ds:0x42fcefea,0xe3
  41e8ee:	mov    esp,0x2a05017
  41e8f3:	imul   ebx,DWORD PTR [esi-0x5b],0xc
  41e8f7:	std    
  41e8f8:	in     eax,0xd7
  41e8fa:	adc    BYTE PTR [esi+ecx*2],al
  41e8fd:	daa    
  41e8fe:	xor    DWORD PTR [ecx],esi
  41e900:	sbb    bh,BYTE PTR [edi+0x216]
  41e906:	std    
  41e907:	dec    eax
  41e908:	xchg   ah,bh
  41e90a:	or     ch,ah
  41e90c:	shl    BYTE PTR [ebx-0x57],0xeb
  41e910:	vmread DWORD PTR [esi+0x7b4b0d3f],edi
  41e917:	or     eax,esp
  41e919:	lds    esp,FWORD PTR [esi-0x3f]
  41e91c:	imul   eax,DWORD PTR [eax+0x15],0xffffffd9
  41e920:	adc    eax,0xa71b42f0
  41e925:	add    edi,DWORD PTR [edi]
  41e927:	add    cl,BYTE PTR [edi-0x1935bc31]
  41e92d:	js     0x41e945
  41e92f:	iret   
  41e930:	xor    ebp,DWORD PTR es:[ebp-0x4e793dfd]
  41e937:	cmp    DWORD PTR [eax-0x113dade2],esi
  41e93d:	sub    eax,0x8132ff4e
  41e942:	xchg   edx,eax
  41e943:	jne    0x41e903
  41e945:	imul   ebp,eax,0x4a80c574
  41e94b:	(bad)  
  41e94c:	aad    0x84
  41e94e:	pop    es
  41e94f:	out    dx,al
  41e950:	arpl   WORD PTR [edi],di
  41e952:	xchg   ebp,eax
  41e953:	jne    0x41e988
  41e955:	sub    BYTE PTR ds:0x7d0210dd,al
  41e95b:	sub    al,0xa1
  41e95d:	test   DWORD PTR [ecx+0x62],esp
  41e960:	push   ss
  41e961:	out    dx,al
  41e962:	pop    ecx
  41e963:	jne    0x41e992
  41e965:	sub    DWORD PTR [edi+ecx*8+0xe],ebx
  41e969:	add    BYTE PTR es:[eax],al
  41e96c:	push   esp
  41e96d:	dec    edi
  41e96e:	or     bh,BYTE PTR [ebx+0x2ee70614]
  41e974:	dec    esp
  41e975:	imul   bx,WORD PTR [eax-0x7834770a],0xd82a
  41e97e:	jno    0x41e9a7
  41e980:	rcr    ebx,1
  41e982:	arpl   WORD PTR [ecx-0x73],ax
  41e985:	add    al,0x96
  41e987:	aam    0xa9
  41e989:	jl     0x41e9af
  41e98b:	jmp    0xe129c990
  41e990:	repnz (bad) 
  41e993:	fiadd  WORD PTR [ebx+0x6f99dbc7]
  41e999:	div    ebx
  41e99b:	adc    ecx,edx
  41e99d:	adc    ch,bh
  41e99f:	push   ds
  41e9a0:	pop    esp
  41e9a1:	inc    ecx
  41e9a2:	out    0x95,eax
  41e9a4:	sahf   
  41e9a5:	or     DWORD PTR [eax],eax
  41e9a7:	xchg   DWORD PTR [ebp+0x7c],edx
  41e9aa:	pop    es
  41e9ab:	jnp    0x41e971
  41e9ad:	add    DWORD PTR [eax-0x27],0xec72b543
  41e9b4:	mov    bh,0xc7
  41e9b6:	sti    
  41e9b7:	add    dh,BYTE PTR [ebx+0x2e15bf89]
  41e9bd:	enter  0x72fb,0xdb
  41e9c1:	add    DWORD PTR [ebx-0x33b7ed2],ecx
  41e9c7:	hlt    
  41e9c8:	sbb    al,BYTE PTR ds:[eax-0x17]
  41e9cc:	or     eax,0x700fce
  41e9d1:	add    bl,al
  41e9d3:	imul   ecx,DWORD PTR [eax+0x428b712e],0x2fcdeb8d
  41e9dd:	cmp    DWORD PTR [eax+0x17],edx
  41e9e0:	fdiv   st(3),st
  41e9e2:	push   ss
  41e9e3:	or     cl,BYTE PTR ds:0x47cc585e
  41e9e9:	adc    eax,0xdce78946
  41e9ee:	fimul  DWORD PTR ds:0x65da931
  41e9f4:	mov    esi,ebp
  41e9f6:	fadd   DWORD PTR [edx+0xe4dd33f]
  41e9fc:	mov    esi,ebp
  41e9fe:	enter  0x3f82,0x1
  41ea02:	ret    
  41ea03:	mov    WORD PTR [edx+0x4d],es
  41ea06:	popf   
  41ea07:	leave  
  41ea08:	orps   xmm7,XMMWORD PTR [esi]
  41ea0b:	jg     0x41ea55
  41ea0d:	add    BYTE PTR [edx],ch
  41ea0f:	popa   
  41ea10:	mov    esp,0x49efad23
  41ea15:	clc    
  41ea16:	push   ss
  41ea17:	mov    WORD PTR [ebp-0x20],cx
  41ea1b:	aaa    
  41ea1c:	jg     0x41e9de
  41ea1e:	clc    
  41ea1f:	aaa    
  41ea20:	push   0x1
  41ea22:	addr16 mov esi,0x6fd9ae4
  41ea28:	add    BYTE PTR [ebx+0x75f2f3ec],cl
  41ea2e:	mov    eax,0x6eebbc59
  41ea33:	repnz cmp ecx,DWORD PTR [ebx-0x711e0000]
  41ea3a:	pop    esi
  41ea3b:	xlat   BYTE PTR ds:[ebx]
  41ea3c:	ret    0x8687
  41ea3f:	fadd   DWORD PTR [edi+ecx*2-0x7b53ff12]
  41ea46:	inc    ecx
  41ea47:	cld    
  41ea48:	sub    esi,ecx
  41ea4a:	jo     0x41ea75
  41ea4c:	stos   BYTE PTR es:[edi],al
  41ea4d:	push   cs
  41ea4e:	std    
  41ea4f:	jae    0x41ea29
  41ea51:	add    BYTE PTR [ecx+0xc],0x7
  41ea55:	dec    esi
  41ea56:	or     al,0xf7
  41ea58:	fs adc eax,eax
  41ea5b:	and    edi,DWORD PTR [ecx-0x2b3f800b]
  41ea61:	pop    ebp
  41ea62:	sti    
  41ea63:	jne    0x41eaad
  41ea65:	add    DWORD PTR [ecx+0x8],0xfffffff7
  41ea69:	or     eax,0xdb8b0fb
  41ea6e:	add    BYTE PTR [eax],al
  41ea70:	or     ch,BYTE PTR fs:[eax+0x0]
  41ea74:	sub    al,0x85
  41ea76:	mov    edi,0xc552e25f
  41ea7b:	ret    0x734
  41ea7e:	push   ecx
  41ea7f:	mov    eax,DWORD PTR [eax+0x3970e88c]
  41ea85:	pop    es
  41ea86:	add    BYTE PTR [ebx-0x2b],dl
  41ea89:	mov    dl,0x8d
  41ea8b:	xlat   BYTE PTR ds:[ebx]
  41ea8c:	stos   BYTE PTR es:[edi],al
  41ea8d:	out    0x4c,eax
  41ea8f:	out    0x60,eax
  41ea91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea92:	add    BYTE PTR [eax],al
  41ea94:	jnp    0x41ea75
  41ea96:	jnp    0x41ea9a
  41ea98:	retf   0xc1de
  41ea9b:	inc    DWORD PTR [eax]
  41ea9d:	add    dl,dh
  41ea9f:	pusha  
  41eaa0:	call   0xa2bb05
  41eaa5:	mov    ebx,DWORD PTR [eax-0xe]
  41eaa8:	jge    0x41eaa6
  41eaaa:	fiadd  DWORD PTR [esi-0x1264b000]
  41eab0:	xchg   ebx,eax
  41eab1:	stc    
  41eab2:	retf   0x40b
  41eab5:	call   0x453246
  41eaba:	dec    esi
  41eabb:	lahf   
  41eabc:	adc    BYTE PTR [ecx-0x4078ab67],al
  41eac2:	and    DWORD PTR [eax-0x7b],esp
  41eac5:	mov    edi,0x47b963f1
  41eaca:	(bad)  
  41eacb:	call   0x728b:0x60d502e0
  41ead2:	mov    edx,eax
  41ead4:	cmp    al,0xce
  41ead6:	shr    bl,cl
  41ead8:	cmp    bh,0x7a
  41eadb:	pusha  
  41eadc:	out    0x82,al
  41eade:	pushf  
  41eadf:	cmp    al,0xff
  41eae1:	mov    ebp,ebx
  41eae3:	stos   BYTE PTR es:[edi],al
  41eae4:	dec    ebx
  41eae5:	jg     0x41eb43
  41eae7:	popa   
  41eae8:	stc    
  41eae9:	jae    0x41eb39
  41eaeb:	xor    eax,0xfc608b0c
  41eaf0:	jp     0x41eaee
  41eaf2:	dec    edx
  41eaf3:	adc    DWORD PTR [edi-0x7e799a76],ecx
  41eaf9:	cld    
  41eafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eafb:	fild   WORD PTR [edx+0x7]
  41eafe:	pusha  
  41eaff:	gs jl  0x41eae9
  41eb02:	add    BYTE PTR [eax],al
  41eb04:	add    ecx,DWORD PTR [ecx]
  41eb06:	in     eax,dx
  41eb07:	and    BYTE PTR [ecx],0x8d
  41eb0a:	test   DWORD PTR es:[esi-0x32804482],0x5dd0d55b
  41eb15:	(bad)  
  41eb16:	(bad)  
  41eb17:	jp     0x41eb43
  41eb19:	push   cs
  41eb1a:	daa    
  41eb1b:	nop
  41eb1c:	lea    ebx,[ebx]
  41eb1e:	or     al,BYTE PTR [ebp+0x55]
  41eb21:	inc    esi
  41eb22:	sahf   
  41eb23:	adc    ah,BYTE PTR [eax]
  41eb25:	(bad)  
  41eb26:	sbb    eax,0x6940bd5c
  41eb2b:	inc    ebp
  41eb2c:	(bad)  
  41eb2d:	xlat   BYTE PTR ds:[ebx]
  41eb2e:	arpl   WORD PTR [eax-0x7df28b9e],bx
  41eb34:	and    al,0x8d
  41eb36:	es pop es
  41eb38:	and    eax,0xd7ed322d
  41eb3d:	popa   
  41eb3e:	pop    edi
  41eb3f:	xor    esi,DWORD PTR [edx+0x575b6171]
  41eb45:	push   ebp
  41eb46:	pop    edx
  41eb47:	sbb    ecx,DWORD PTR [edi+eax*8-0x12]
  41eb4b:	mov    edx,fs
  41eb4d:	popa   
  41eb4e:	cmp    bl,BYTE PTR [edx-0x70]
  41eb51:	jno    0x41ebb4
  41eb53:	jne    0x41eba7
  41eb55:	(bad)  
  41eb56:	icebp  
  41eb57:	imul   ebx,DWORD PTR [eax],0x7b
  41eb5a:	out    0x3,al
  41eb5c:	dec    edi
  41eb5d:	(bad)  
  41eb5e:	loope  0x41ebcc
  41eb60:	aam    0x3b
  41eb62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb63:	loope  0x41eb6d
  41eb65:	aad    0xaf
  41eb67:	inc    esi
  41eb68:	add    BYTE PTR [eax],al
  41eb6a:	(bad)  
  41eb6b:	or     DWORD PTR [ecx*4+0x78828b6e],esi
  41eb72:	push   ebx
  41eb73:	jno    0x41eb5b
  41eb75:	aam    0x5d
  41eb77:	iret   
  41eb78:	repnz mov WORD PTR [ebp-0x5fa389e7],ss
  41eb7f:	adc    al,0x0
  41eb81:	test   eax,0xd778840c
  41eb86:	icebp  
  41eb87:	inc    esi
  41eb88:	or     al,0x9f
  41eb8a:	sbb    DWORD PTR [edx],ecx
  41eb8c:	adc    DWORD PTR [ecx-0x2f],0xe4357a88
  41eb93:	test   DWORD PTR [edi],eax
  41eb95:	jmp    0x41eb6d
  41eb97:	or     DWORD PTR [eax-0x4f],ecx
  41eb9a:	or     dh,BYTE PTR [ebx]
  41eb9c:	dec    eax
  41eb9d:	mov    cl,0x2
  41eb9f:	es dec eax
  41eba1:	mov    eax,ds:0x418104ea
  41eba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eba7:	cmc    
  41eba8:	add    al,0xdb
  41ebaa:	xchg   esi,eax
  41ebab:	addr16 imul al
  41ebae:	(bad)  
  41ebaf:	or     DWORD PTR [ecx-0x7d2154],ecx
  41ebb5:	or     eax,0xe8ff8c81
  41ebba:	(bad)  
  41ebbb:	adc    al,0x11
  41ebbe:	or     esi,esp
  41ebc0:	(bad)  
  41ebc1:	call   0xe9405705
  41ebc6:	(bad)  
  41ebc7:	outs   dx,BYTE PTR ds:[esi]
  41ebc8:	jb     0x41ebbb
  41ebca:	push   ecx
  41ebcb:	dec    ecx
  41ebcc:	out    0x97,eax
  41ebce:	add    BYTE PTR [eax],al
  41ebd0:	push   esp
  41ebd1:	ins    DWORD PTR es:[edi],dx
  41ebd2:	cld    
  41ebd3:	shr    BYTE PTR [ecx],0x70
  41ebd6:	cld    
  41ebd7:	jmp    0x1e292d35
  41ebdc:	(bad)  
  41ebdd:	jo     0x41ebdb
  41ebdf:	inc    edi
  41ebe0:	push   eax
  41ebe1:	js     0x41ebfe
  41ebe3:	cmp    ebx,DWORD PTR [edi]
  41ebe5:	imul   ebx,ebp,0x8909d13c
  41ebeb:	cdq    
  41ebec:	push   ecx
  41ebed:	leave  
  41ebee:	pminub mm0,QWORD PTR [eax]
  41ebf1:	mov    BYTE PTR [edx-0x6b],dh
  41ebf4:	adc    DWORD PTR [edx+esi*2-0x34],edi
  41ebf8:	int    0x58
  41ebfa:	sbb    BYTE PTR [eax],al
  41ebfc:	ins    BYTE PTR es:[edi],dx
  41ebfd:	test   DWORD PTR [edi+0x7b12b48],edi
  41ec03:	and    eax,DWORD PTR [ebx+0x752d5f1]
  41ec09:	ret    
  41ec0a:	dec    esi
  41ec0b:	sub    esp,0x8
  41ec0e:	push   eax
  41ec0f:	and    esp,edi
  41ec11:	pop    esi
  41ec12:	jmp    edi
  41ec14:	gs cmp ebp,edi
  41ec17:	push   DWORD PTR [edi-0x4]
  41ec1a:	xor    esi,0x45879a40
  41ec20:	add    al,0x7d
  41ec22:	xor    al,0x8b
  41ec24:	retf   0x7ee4
  41ec27:	aad    0xba
  41ec29:	mov    DWORD PTR [esi-0x138e3b28],eax
  41ec2f:	add    ah,ch
  41ec31:	loop   0x41ec98
  41ec33:	add    DWORD PTR [eax],eax
  41ec35:	add    BYTE PTR [ebx+ecx*1+0x861c237],bh
  41ec3c:	test   DWORD PTR [ebp-0x2c],edx
  41ec3f:	fld    QWORD PTR [edx]
  41ec41:	sub    esp,0x1e
  41ec44:	test   DWORD PTR [ebp-0x5c],eax
  41ec47:	cmp    edi,ebx
  41ec49:	push   0xbfe
  41ec4e:	sub    DWORD PTR [ecx-0x108401f4],eax
  41ec54:	push   ebx
  41ec55:	push   eax
  41ec56:	cmc    
  41ec57:	push   eax
  41ec58:	in     al,dx
  41ec59:	mov    DWORD PTR [ecx],ebx
  41ec5b:	repnz sti 
  41ec5d:	adc    eax,0x401574
  41ec62:	jg     0x41ec2f
  41ec64:	jg     0x41ec2a
  41ec66:	js     0x41ece6
  41ec68:	inc    ecx
  41ec69:	in     al,dx
  41ec6a:	gs inc ebp
  41ec6c:	add    BYTE PTR [esi-0x2e],bh
  41ec6f:	jl     0x41ecb2
  41ec71:	call   0x7541245d
  41ec76:	aad    0x88
  41ec78:	mov    es,WORD PTR [ebp-0x23]
  41ec7b:	xor    BYTE PTR [ebx-0x3905ca8e],cl
  41ec81:	jecxz  0x41ecb0
  41ec83:	out    0xf0,al
  41ec85:	push   DWORD PTR [edx]
  41ec87:	fld    QWORD PTR [ebx+0x72]
  41ec8a:	loop   0x41ec6f
  41ec8c:	jl     0x41ec97
  41ec8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec8f:	jbe    0x41ec77
  41ec91:	dec    BYTE PTR [edi+0x27]
  41ec94:	(bad)
  41ec98:	lahf   
  41ec99:	ins    BYTE PTR es:[edi],dx
  41ec9a:	add    BYTE PTR [eax],al
  41ec9c:	aad    0x60
  41ec9e:	imul   ebx,DWORD PTR [esi],0x8878ae02
  41eca4:	nop
  41eca5:	les    ecx,FWORD PTR [esi-0x2d371a8e]
  41ecab:	outs   dx,BYTE PTR ds:[esi]
  41ecac:	aad    0x60
  41ecae:	mov    edi,eax
  41ecb0:	pop    eax
  41ecb1:	cmp    bh,ah
  41ecb3:	cmovle esp,DWORD PTR [esi+0x8b38860]
  41ecba:	jb     0x41ed28
  41ecbc:	aad    0x60
  41ecbe:	mov    DWORD PTR [edx-0x2f],ebx
  41ecc1:	sti    
  41ecc2:	(bad)  
  41ecc3:	repz mov edx,0x18886ca5
  41ecc9:	jne    0x41ec54
  41eccb:	dec    edx
  41eccc:	mov    ecx,0xdde7c6e3
  41ecd1:	sti    
  41ecd2:	jo     0x41ed0c
  41ecd4:	or     eax,0x929afc65
  41ecd9:	push   cs
  41ecda:	ins    BYTE PTR es:[edi],dx
  41ecdb:	cmp    eax,0x557d3fb2
  41ece0:	ins    DWORD PTR es:[edi],dx
  41ece1:	or     BYTE PTR ds:0x7de57afd,ah
  41ece7:	jge    0x41ecdd
  41ece9:	jmp    0x41ecb2
  41eceb:	out    dx,eax
  41ecec:	pop    esp
  41eced:	and    eax,0x9588a80
  41ecf2:	int3   
  41ecf3:	jge    0x41ed4e
  41ecf5:	outs   dx,BYTE PTR ds:[esi]
  41ecf6:	outs   dx,DWORD PTR ds:[esi]
  41ecf7:	enter  0x80de,0x13
  41ecfb:	jl     0x41ed5a
  41ecfd:	hlt    
  41ecfe:	fimul  DWORD PTR [edx+0x6dbf0000]
  41ed04:	imul   eax,DWORD PTR [ebp+0x2d],0x32f24b61
  41ed0b:	outs   dx,BYTE PTR ds:[esi]
  41ed0c:	popa   
  41ed0d:	add    cl,bl
  41ed0f:	out    0x69,eax
  41ed11:	(bad)  
  41ed12:	(bad)  
  41ed13:	or     esp,ebx
  41ed15:	or     DWORD PTR [edi-0x57f82ef8],ebp
  41ed1b:	popa   
  41ed1c:	outs   dx,DWORD PTR ds:[esi]
  41ed1d:	sbb    al,0x8
  41ed1f:	outs   dx,BYTE PTR ds:[esi]
  41ed20:	push   esp
  41ed21:	add    eax,0xe9dcf4d7
  41ed26:	sti    
  41ed27:	(bad)  
  41ed29:	nop
  41ed2a:	cdq    
  41ed2b:	pop    es
  41ed2c:	xchg   edi,eax
  41ed2d:	imul   edx,DWORD PTR [ecx+0x10],0x2e
  41ed31:	jle    0x41ed2d
  41ed33:	imul   edi,esi,0x7e
  41ed36:	(bad)  
  41ed38:	outs   dx,DWORD PTR ds:[esi]
  41ed39:	(bad)  
  41ed3a:	call   0x2c198c7
  41ed3f:	mov    DWORD PTR ds:0xfebfc030,esp
  41ed45:	mov    edi,DWORD PTR [edi]
  41ed47:	(bad)  
  41ed48:	jae    0x41ed01
  41ed4a:	pop    ebp
  41ed4b:	out    dx,eax
  41ed4c:	cli    
  41ed4d:	mov    DWORD PTR ds:0xbd5af61a,edx
  41ed53:	dec    ecx
  41ed54:	or     edi,eax
  41ed56:	jle    0x41ece1
  41ed58:	test   eax,0xe1b4e1cc
  41ed5d:	je     0x41ed02
  41ed5f:	adc    DWORD PTR [eax+0x1e1f81e9],esp
  41ed65:	pop    DWORD PTR [eax]
  41ed67:	add    BYTE PTR [edi+0x1a],ah
  41ed6a:	mov    ebp,0xffd8717d
  41ed6f:	imul   edx,DWORD PTR [ecx],0xc0a5009
  41ed75:	jecxz  0x41ed77
  41ed77:	xchg   ecx,eax
  41ed78:	jno    0x41ed99
  41ed7a:	(bad)  
  41ed7b:	call   0x9fc44add
  41ed80:	inc    edx
  41ed81:	add    ch,bh
  41ed83:	adc    al,0xc9
  41ed85:	fs xchg esi,eax
  41ed87:	iret   
  41ed88:	mov    ecx,0xb0d1e66d
  41ed8d:	ins    DWORD PTR es:[edi],dx
  41ed8e:	cld    
  41ed8f:	bound  edx,QWORD PTR [edx]
  41ed91:	add    eax,0x4f4db189
  41ed96:	out    0x5,eax
  41ed98:	jge    0x41ee08
  41ed9a:	cld    
  41ed9b:	jae    0x41ed4e
  41ed9d:	fs push cs
  41ed9f:	inc    esi
  41eda0:	ror    DWORD PTR [ecx],1
  41eda2:	std    
  41eda3:	aam    0x86
  41eda5:	fs jbe 0x41edb7
  41eda8:	js     0x41ee17
  41edaa:	mov    DWORD PTR [edx],ebp
  41edac:	jl     0x41edb1
  41edae:	push   ecx
  41edaf:	ss loop 0x41edb6
  41edb2:	call   0xfcaf49c7
  41edb7:	xabort 0xd1
  41edba:	(bad)  
  41edbb:	sub    esp,ecx
  41edbd:	or     DWORD PTR [ebx+0x62],edx
  41edc0:	inc    ebp
  41edc1:	mov    ah,bl
  41edc3:	adc    DWORD PTR [ecx+ecx*1-0x77],ecx
  41edc7:	mov    ah,0xce
  41edc9:	in     al,dx
  41edca:	jmp    0x41edf5
  41edcc:	add    BYTE PTR [eax],al
  41edce:	(bad)  
  41edcf:	or     DWORD PTR [eax],eax
  41edd1:	lahf   
  41edd2:	sub    DWORD PTR [ebp-0x51],0x9d961
  41edd9:	je     0x41ed5d
  41eddb:	sub    BYTE PTR [ebx+edx*2],cl
  41edde:	fcmovbe st,st(1)
  41ede0:	out    0x7e,eax
  41ede2:	pop    esp
  41ede3:	ins    DWORD PTR es:[edi],dx
  41ede4:	cld    
  41ede5:	gs push ss
  41ede7:	inc    BYTE PTR [ebx+0x8b900]
  41eded:	add    bh,ah
  41edef:	sub    edx,DWORD PTR [esi+edx*1]
  41edf2:	mov    esp,0xd2046a05
  41edf7:	push   ebx
  41edf8:	mov    DWORD PTR [eax+ecx*4-0x4],eax
  41edfc:	addr16 js 0x41edca
  41edff:	dec    eax
  41ee00:	cld    
  41ee01:	dec    edi
  41ee02:	arpl   bp,dx
  41ee04:	jg     0x41edca
  41ee06:	and    BYTE PTR [ebx+0x621974bc],al
  41ee0c:	add    DWORD PTR [ebp+0x680c21f8],ecx
  41ee12:	mov    esp,0xbc003c95
  41ee17:	out    dx,al
  41ee18:	rol    DWORD PTR [ebx-0x3f7f0318],cl
  41ee1e:	sub    DWORD PTR [edx-0x79],esi
  41ee21:	jne    0x41ee17
  41ee23:	jp     0x41ee65
  41ee25:	and    al,0x2c
  41ee27:	pop    eax
  41ee28:	in     al,0xa3
  41ee2a:	imul   ebp,ebp,0xfffffffb
  41ee2d:	test   BYTE PTR [esp+esi*2+0x664d],bh
  41ee34:	jg     0x41eea2
  41ee36:	and    BYTE PTR [eax-0x12],al
  41ee39:	jb     0x41ee41
  41ee3b:	xor    BYTE PTR [eax],0x24
  41ee3e:	inc    esp
  41ee3f:	jg     0x41ee04
  41ee41:	xchg   ebx,eax
  41ee42:	mov    esp,0x7f659feb
  41ee47:	jl     0x41ede1
  41ee49:	inc    edi
  41ee4a:	adc    esi,DWORD PTR [ebp-0x4b]
  41ee4d:	popa   
  41ee4e:	or     al,0x8d
  41ee50:	js     0x41ee75
  41ee52:	dec    esp
  41ee53:	push   eax
  41ee54:	push   esp
  41ee55:	ja     0x41eec9
  41ee57:	inc    eax
  41ee58:	lods   al,BYTE PTR ds:[esi]
  41ee59:	out    dx,al
  41ee5a:	rol    DWORD PTR [ebx-0x270cfd98],cl
  41ee60:	(bad)  
  41ee61:	(bad)  
  41ee64:	aad    0x47
  41ee66:	add    eax,0x43e59532
  41ee6b:	jae    0x41ee4a
  41ee6d:	or     al,BYTE PTR [edi-0x2fa346bd]
  41ee73:	mov    dh,dl
  41ee75:	mov    bl,0xb3
  41ee77:	adc    ebp,0x60
  41ee7a:	add    al,ch
  41ee7c:	add    ebx,DWORD PTR [ecx]
  41ee7e:	add    al,0x0
  41ee80:	cmp    al,0x82
  41ee82:	add    eax,DWORD PTR [eax]
  41ee84:	aad    0x2a
  41ee86:	xchg   DWORD PTR [ebx-0x7],eax
  41ee89:	dec    esp
  41ee8a:	ror    BYTE PTR [eax+0x7fbbf7d6],1
  41ee90:	aad    0x60
  41ee92:	add    al,ch
  41ee94:	xlat   BYTE PTR ds:[ebx]
  41ee95:	dec    ecx
  41ee96:	add    eax,DWORD PTR [eax]
  41ee98:	add    BYTE PTR [eax],al
  41ee9a:	sub    al,0xaa
  41ee9c:	add    eax,DWORD PTR [eax]
  41ee9e:	aad    0xf7
  41eea0:	add    al,0xfd
  41eea2:	inc    ebp
  41eea3:	stc    
  41eea4:	add    eax,DWORD PTR [eax]
  41eea6:	aad    0xe7
  41eea8:	mov    BYTE PTR [edi],0x6f
  41eeab:	add    ebx,esp
  41eead:	mov    ah,BYTE PTR [ecx+0x21e816fc]
  41eeb3:	cli    
  41eeb4:	js     0x41eeb2
  41eeb6:	push   ecx
  41eeb7:	and    DWORD PTR [ecx],ecx
  41eeb9:	test   BYTE PTR [edi],ch
  41eebb:	popa   
  41eebc:	add    BYTE PTR [eax],al
  41eebe:	outs   dx,DWORD PTR ds:[esi]
  41eebf:	pop    ebp
  41eec0:	xchg   DWORD PTR [ebx-0x7],eax
  41eec3:	pop    esp
  41eec4:	ror    BYTE PTR [edx+0x50143d11],1
  41eeca:	ret    0x1075
  41eecd:	push   ss
  41eece:	adc    eax,0xe1c38561
  41eed3:	xchg   esi,eax
  41eed4:	and    al,0x87
  41eed6:	popa   
  41eed7:	cmp    al,0x3c
  41eed9:	jmp    DWORD PTR [edx+0x218ada60]
  41eedf:	or     cl,BYTE PTR [ebx]
  41eee1:	adc    BYTE PTR [esi-0x7b],bl
  41eee4:	add    al,BYTE PTR [edx+ecx*4+0x6a]
  41eee8:	out    0x6b,al
  41eeea:	arpl   WORD PTR [esi],sp
  41eeec:	into   
  41eeed:	jp     0x41eee9
  41eeef:	in     eax,dx
  41eef0:	or     dl,BYTE PTR [eax]
  41eef2:	aad    0xf5
  41eef4:	xor    al,BYTE PTR [esi+ebp*8-0x17fc22db]
  41eefb:	(bad)  
  41eefd:	mov    cl,0x0
  41eeff:	add    BYTE PTR [esi],cl
  41ef01:	dec    BYTE PTR es:[esi-0x2071796d]
  41ef08:	mov    esp,0xfdf03107
  41ef0d:	push   ds
  41ef0e:	test   eax,0xa91f01ef
  41ef13:	out    dx,eax
  41ef14:	hlt    
  41ef15:	push   ds
  41ef16:	test   eax,0x7e86c8ef
  41ef1b:	fldenv [edi-0x9089944]
  41ef21:	adc    al,0xea
  41ef23:	lock cwde 
  41ef25:	jle    0x41ef10
  41ef27:	jp     0x41eeb0
  41ef29:	add    DWORD PTR [edx-0x4d],esp
  41ef2c:	or     BYTE PTR [ecx],0xe7
  41ef2f:	add    ebp,ebp
  41ef31:	inc    eax
  41ef32:	syscall 
  41ef34:	aad    0x5e
  41ef36:	bnd jp 0x41efa0
  41ef39:	add    DWORD PTR [esi+eax*8-0x26],esp
  41ef3d:	jl     0x41eed9
  41ef3f:	pop    ds
  41ef40:	mov    ebp,0xd006fc61
  41ef45:	imul   edx,DWORD PTR [ecx],0x8a735426
  41ef4b:	out    dx,eax
  41ef4c:	int3   
  41ef4d:	xor    al,0x21
  41ef4f:	lock fcom QWORD PTR [ecx+0x74c51f9a]
  41ef56:	jecxz  0x41ef99
  41ef58:	push   ss
  41ef59:	cs add cl,bl
  41ef5c:	fldenv [esi+0x73]
  41ef5f:	(bad)
  41ef62:	jo     0x41ef55
  41ef64:	add    BYTE PTR [eax],al
  41ef66:	or     eax,0xe8d107dc
  41ef6b:	push   0xc79cd6fd
  41ef70:	mov    ah,al
  41ef72:	mov    ds:0x89e9034b,al
  41ef77:	mov    edi,0x2d6d7254
  41ef7c:	adc    BYTE PTR [esi-0x1aa36d5c],dh
  41ef82:	out    dx,al
  41ef83:	retf   
  41ef84:	std    
  41ef85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef86:	int3   
  41ef87:	xchg   ecx,eax
  41ef88:	xor    al,0x64
  41ef8a:	(bad)  
  41ef8b:	fmul   QWORD PTR [eax]
  41ef8d:	adc    DWORD PTR [ebp-0x74],0x71278efc
  41ef94:	xchg   esi,eax
  41ef95:	int    0xad
  41ef97:	gs push esp
  41ef99:	xchg   ecx,eax
  41ef9a:	inc    eax
  41ef9b:	sub    eax,0xc6fc76fd
  41efa0:	xor    BYTE PTR [ecx-0x16fcb508],ch
  41efa6:	and    edx,DWORD PTR [edx-0x35a64715]
  41efac:	add    edi,DWORD PTR [edi+0x50c57125]
  41efb2:	ror    DWORD PTR [ecx],1
  41efb4:	mov    edx,eax
  41efb6:	repnz mov DWORD PTR [edx+0x3d],esp
  41efba:	rcl    DWORD PTR [esp+esi*2+0x126604e5],1
  41efc1:	adc    ebx,eax
  41efc3:	leave  
  41efc4:	push   DWORD PTR [ecx-0x2c]
  41efc7:	mov    WORD PTR [edi-0x18ffff6b],?
  41efcd:	xchg   edx,eax
  41efce:	jl     0x41efbd
  41efd0:	pop    ecx
  41efd1:	and    eax,0x66d19500
  41efd6:	inc    edx
  41efd7:	add    al,bl
  41efd9:	mov    es,ebx
  41efdb:	add    al,0x64
  41efdd:	ja     0x41efcd
  41efdf:	push   esi
  41efe0:	stos   DWORD PTR es:[edi],eax
  41efe1:	pop    ss
  41efe2:	fcom   QWORD PTR [edx]
  41efe4:	ins    BYTE PTR es:[edi],dx
  41efe5:	or     al,0x7d
  41efe7:	jge    0x41f061
  41efe9:	into   
  41efea:	std    
  41efeb:	(bad)  
  41efec:	jl     0x41f047
  41efee:	xor    BYTE PTR [edx+0x74],ch
  41eff1:	hlt    
  41eff2:	sbb    ah,BYTE PTR [ebx+ecx*4]
  41eff5:	loope  0x41ef7e
  41eff7:	lock add ebx,ebx
  41effa:	jo     0x41f023
  41effc:	out    0xa7,eax
  41effe:	add    al,0x6a
  41f000:	ins    BYTE PTR es:[edi],dx
  41f001:	cmp    ah,BYTE PTR [ecx+ebp*1+0x39]
  41f005:	dec    ebx
  41f006:	cld    
  41f007:	mov    BYTE PTR [edx-0x6d],al
  41f00a:	pop    edx
  41f00b:	add    al,0xc7
  41f00d:	add    BYTE PTR gs:[eax+0x2c],ch
  41f011:	or     al,0x8
  41f013:	add    BYTE PTR [esp+ebp*8-0xb],dl
  41f017:	add    BYTE PTR [eax+ebp*8],bh
  41f01a:	mov    esp,0xe43a3475
  41f01f:	adc    DWORD PTR [eax],edx
  41f021:	loope  0x41f01e
  41f023:	mov    esp,DWORD PTR [ecx]
  41f025:	adc    al,0x81
  41f027:	div    BYTE PTR [eax]
  41f029:	adc    eax,0xe170eae8
  41f02e:	sti    
  41f02f:	push   esi
  41f030:	add    BYTE PTR [eax],al
  41f032:	xchg   esp,eax
  41f033:	loope  0x41f054
  41f035:	dec    DWORD PTR [ebx-0x4136a5bf]
  41f03b:	push   0xf06754fc
  41f040:	jg     0x41f02e
  41f042:	clc    
  41f043:	cmp    al,0x2f
  41f045:	fild   DWORD PTR [edx+0x39]
  41f048:	xchg   ecx,esi
  41f04a:	inc    ebp
  41f04b:	inc    eax
  41f04c:	clc    
  41f04d:	cmp    edi,edi
  41f04f:	jbe    0x41f062
  41f051:	mov    ebp,edx
  41f053:	mov    ch,0x6c
  41f055:	out    0xc4,eax
  41f057:	pop    esi
  41f058:	ja     0x41f056
  41f05a:	aas    
  41f05b:	jb     0x41efe6
  41f05d:	inc    edx
  41f05e:	lods   eax,DWORD PTR ds:[esi]
  41f05f:	jnp    0x41f069
  41f061:	mov    ebx,DWORD PTR [eax]
  41f063:	gs shr eax,1
  41f066:	ror    DWORD PTR [edx-0x23d9aeff],1
  41f06c:	mov    esi,0xd1242607
  41f071:	out    0x9a,eax
  41f073:	or     eax,DWORD PTR [ebx]
  41f075:	add    BYTE PTR [esi+0x39],cl
  41f078:	cmp    cl,bh
  41f07a:	jmp    0xc10b5c56
  41f07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f080:	je     0x41f0b2
  41f082:	xchg   edx,ebx
  41f084:	mov    edx,DWORD PTR [eax]
  41f086:	aad    0x70
  41f088:	ins    DWORD PTR es:[edi],dx
  41f089:	out    dx,al
  41f08a:	pop    esi
  41f08b:	mov    eax,0x6b6dc182
  41f090:	add    BYTE PTR [eax],al
  41f092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f093:	jg     0x41f0c2
  41f095:	call   0xa387f09a
  41f09a:	jne    0x41f098
  41f09c:	pop    esp
  41f09d:	ss js  0x41f0d8
  41f0a0:	push   ss
  41f0a1:	cmp    DWORD PTR [bx+si],edi
  41f0a4:	sub    BYTE PTR [esp+ebp*8+0x35],0x4e
  41f0a9:	add    ah,dh
  41f0ab:	mov    BYTE PTR [edi],bl
  41f0ad:	mov    ecx,0x70d53ea0
  41f0b2:	fiadd  DWORD PTR [eax+0x25ee66fd]
  41f0b8:	dec    esi
  41f0b9:	mov    bl,0x10
  41f0bb:	cmp    DWORD PTR [esi],edx
  41f0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0be:	add    DWORD PTR [ebx+0x7575148d],ecx
  41f0c4:	fldln2 
  41f0c6:	rol    DWORD PTR [edi-0x36],0xdf
  41f0ca:	or     esi,ebp
  41f0cc:	lods   al,BYTE PTR ds:[esi]
  41f0cd:	or     DWORD PTR [edx],eax
  41f0cf:	dec    ebp
  41f0d0:	and    eax,0xc1d52f2b
  41f0d5:	(bad)  
  41f0d7:	mov    BYTE PTR [eax],dl
  41f0d9:	adc    bh,bh
  41f0db:	(bad)  
  41f0dc:	aam    0x66
  41f0de:	add    eax,0x271a18b
  41f0e3:	imul   esp,DWORD PTR [edx-0x613e9e9a],0xffffffc6
  41f0ea:	mov    edx,ds
  41f0ec:	fwait
  41f0ed:	dec    ebx
  41f0ee:	out    dx,al
  41f0ef:	add    esp,DWORD PTR [esi]
  41f0f1:	xchg   ebx,eax
  41f0f2:	retf   0x6e82
  41f0f5:	add    eax,0x1a76c05f
  41f0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0fb:	rol    BYTE PTR [eax],cl
  41f0fd:	add    al,bh
  41f0ff:	nop
  41f100:	sub    esp,DWORD PTR [ecx-0x5b]
  41f103:	inc    edx
  41f104:	adc    al,0xbc
  41f106:	adc    cl,BYTE PTR ds:0xf00003e7
  41f10c:	pop    edi
  41f10d:	sar    BYTE PTR [ecx],0x4f
  41f110:	sub    esi,DWORD PTR [edi+0x4a]
  41f113:	xchg   ecx,eax
  41f114:	cmp    edi,DWORD PTR [ebx+ebx*2-0x3c]
  41f118:	call   0xaf8a:0xe667973d
  41f11f:	adc    DWORD PTR [edx-0x2],esi
  41f122:	xor    dh,BYTE PTR [ebx-0x6d]
  41f125:	jne    0x41f148
  41f127:	lea    esp,[esi-0x180c6111]
  41f12d:	jmp    0x5fed8609
  41f132:	call   0xc109:0x6f07a392
  41f139:	add    ebp,DWORD PTR [edi+0xd]
  41f13c:	aas    
  41f13d:	add    al,0xbf
  41f13f:	or     bh,ah
  41f141:	mov    bh,dl
  41f143:	mov    esi,DWORD PTR [esi+eax*1]
  41f146:	pop    ecx
  41f147:	or     DWORD PTR [eax],eax
  41f149:	call   0x61a9fb24
  41f14e:	out    0x9,eax
  41f150:	add    BYTE PTR [esi],ah
  41f152:	sti    
  41f153:	jno    0x41f18d
  41f155:	cmp    ecx,DWORD PTR [eax+0x66]
  41f158:	mov    BYTE PTR [ecx],dl
  41f15a:	push   edi
  41f15b:	data16 dec BYTE PTR [ebx+0x126671e1]
  41f162:	add    BYTE PTR [eax],al
  41f164:	(bad)  
  41f165:	or     DWORD PTR [ecx-0x76d3d0da],ecx
  41f16b:	ja     0x41f113
  41f16d:	xchg   edx,eax
  41f16e:	int3   
  41f16f:	add    DWORD PTR [ebx],esi
  41f171:	and    eax,0x8aa8e900
  41f176:	mul    ebp
  41f178:	fld    DWORD PTR [edi+0x9d6e9c8]
  41f17e:	mov    esp,DWORD PTR [esi]
  41f180:	aad    0xb9
  41f182:	cld    
  41f183:	fdiv   QWORD PTR [edx]
  41f185:	adc    al,0x40
  41f187:	jmp    0xea2abc7a
  41f18c:	(bad)  
  41f18d:	sbb    al,al
  41f18f:	pusha  
  41f190:	dec    edx
  41f191:	jno    0x41f1d2
  41f193:	push   0xffffffc9
  41f195:	gs jb  0x41f18d
  41f198:	enter  0xfdc7,0x69
  41f19c:	inc    edx
  41f19d:	addr16 add dh,bl
  41f1a0:	push   esp
  41f1a1:	loop   0x41f19f
  41f1a3:	xchg   BYTE PTR [eax-0x29165c95],ah
  41f1a9:	or     DWORD PTR [ecx],esi
  41f1ab:	test   eax,0xddfe5d54
  41f1b0:	pop    edx
  41f1b1:	jl     0x41f1b2
  41f1b3:	call   0x4d8c848e
  41f1b8:	dec    esp
  41f1b9:	hlt    
  41f1ba:	(bad)  
  41f1bc:	imul   ebx,eax,0x0
  41f1bf:	push   0xffffffb3
  41f1c1:	xor    BYTE PTR [ebx-0x1b9ab600],cl
  41f1c7:	xchg   ecx,eax
  41f1c8:	add    BYTE PTR [eax],al
  41f1ca:	sub    al,0x9
  41f1cc:	add    BYTE PTR [esi+0x6f],ah
  41f1cf:	cmc    
  41f1d0:	add    BYTE PTR [edi],cl
  41f1d2:	dec    ebx
  41f1d3:	out    0x85,al
  41f1d5:	jge    0x41f1c3
  41f1d7:	in     al,0xd7
  41f1d9:	je     0x41f193
  41f1db:	pop    ds
  41f1dc:	push   ds
  41f1dd:	jne    0x41f17d
  41f1df:	mov    DWORD PTR [edx],edi
  41f1e1:	add    BYTE PTR [eax+0x2b],cl
  41f1e4:	cmp    dx,WORD PTR [ecx-0x3b]
  41f1e8:	jae    0x41f211
  41f1ea:	daa    
  41f1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ec:	lock pand mm7,QWORD PTR [esi+0x841c2ff]
  41f1f4:	add    al,0x20
  41f1f6:	jl     0x41f26d
  41f1f8:	adc    al,0x66
  41f1fa:	stc    
  41f1fb:	fnsave [eax+0x17]
  41f1fe:	mov    esi,0x11f4798c
  41f203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f204:	hlt    
  41f205:	call   0x3d1c2c
  41f20a:	out    0x5b,eax
  41f20c:	in     al,dx
  41f20d:	test   DWORD PTR [ebx+esi*2],ebp
  41f210:	add    dh,al
  41f212:	stc    
  41f213:	fdivp  st(5),st
  41f215:	mov    dl,dl
  41f217:	xchg   edx,eax
  41f218:	jno    0x41f206
  41f21a:	fs cdq 
  41f21c:	out    0x0,al
  41f21e:	sub    al,0x46
  41f220:	sti    
  41f221:	inc    ebp
  41f222:	pop    ecx
  41f223:	mov    BYTE PTR [ecx-0x1],bh
  41f226:	cmp    al,0x73
  41f228:	and    al,0x66
  41f22a:	pop    ss
  41f22b:	pop    ebx
  41f22c:	jecxz  0x41f23d
  41f22e:	add    BYTE PTR [eax],al
  41f230:	test   al,0xec
  41f232:	cli    
  41f233:	inc    DWORD PTR [ebx-0x7807be6f]
  41f239:	dec    ebx
  41f23a:	or     al,0x89
  41f23c:	in     eax,dx
  41f23d:	nop
  41f23e:	inc    ecx
  41f23f:	adc    al,0xd5
  41f241:	out    0xc5,eax
  41f243:	repz pop esp
  41f245:	push   0xffffffb0
  41f247:	dec    BYTE PTR [ebx+0x17c6d7ac]
  41f24d:	inc    edx
  41f24e:	add    al,ch
  41f250:	push   esp
  41f251:	enter  0x0,0xd2
  41f255:	sahf   
  41f256:	js     0x41f23f
  41f258:	mov    esp,0x7fc7352
  41f25d:	xor    DWORD PTR [eax-0x19],ebp
  41f260:	and    al,ch
  41f262:	fs dec esi
  41f264:	pop    esi
  41f265:	jno    0x41f1ee
  41f267:	dec    edx
  41f268:	fld    QWORD PTR [edx-0x26a27735]
  41f26e:	add    BYTE PTR [eax],al
  41f270:	aad    0x83
  41f272:	out    0x3,al
  41f274:	sub    eax,0x7dfbcdc6
  41f279:	or     al,0x8a
  41f27b:	cld    
  41f27c:	sub    ch,0x43
  41f27f:	jae    0x41f241
  41f281:	out    dx,eax
  41f282:	out    dx,al
  41f283:	sti    
  41f284:	aad    0xbc
  41f286:	and    BYTE PTR [edi-0x18],bh
  41f289:	dec    esp
  41f28a:	add    eax,DWORD PTR [esi*4+0x5a25f970]
  41f291:	es jo  0x41f27b
  41f294:	add    BYTE PTR [eax],al
  41f296:	pusha  
  41f297:	adc    dh,BYTE PTR [ecx-0x4]
  41f29a:	pop    esi
  41f29b:	add    DWORD PTR [esi+0x7d08c9f5],0xbee83942
  41f2a5:	pop    es
  41f2a6:	mov    ah,bh
  41f2a8:	pop    ecx
  41f2a9:	out    0x25,eax
  41f2ab:	div    BYTE PTR [eax-0x4]
  41f2ae:	pop    ecx
  41f2af:	mov    cl,0xf6
  41f2b1:	or     eax,0x1e808883
  41f2b6:	adc    dh,ah
  41f2b8:	xor    eax,0xc509aac0
  41f2bd:	cmp    al,0x14
  41f2bf:	push   cs
  41f2c0:	out    0x7e,eax
  41f2c2:	xchg   edi,eax
  41f2c3:	gs pop edi
  41f2c5:	(bad)  
  41f2c6:	(bad)  
  41f2c7:	nop
  41f2c8:	sbb    DWORD PTR [ebx+ebp*8-0x1d80ab91],esi
  41f2cf:	arpl   WORD PTR [esi+0x7c],si
  41f2d2:	fisub  DWORD PTR [edx-0x1a]
  41f2d5:	and    BYTE PTR [esi],0x2e
  41f2d8:	(bad)  
  41f2da:	cli    
  41f2db:	fsubr  st(6),st
  41f2dd:	add    ebp,DWORD PTR [edi]
  41f2df:	push   cs
  41f2e0:	mov    edi,0x158c305b
  41f2e5:	jae    0x41f33d
  41f2e7:	dec    ecx
  41f2e8:	fstp   QWORD PTR [eax+0x3ea476a]
  41f2ee:	push   es
  41f2ef:	(bad)
  41f2f3:	mov    ebx,0xe45ffc80
  41f2f8:	out    dx,al
  41f2f9:	retf   
  41f2fa:	add    BYTE PTR [eax],al
  41f2fc:	jb     0x41f29e
  41f2fe:	add    BYTE PTR ds:0xd3a58ed5,al
  41f304:	jns    0x41f2e2
  41f306:	ficomp WORD PTR [ebx-0x6f]
  41f309:	outs   dx,DWORD PTR ds:[esi]
  41f30a:	out    0x3,al
  41f30c:	push   esi
  41f30d:	dec    ecx
  41f30e:	cmp    ecx,DWORD PTR [ebx]
  41f310:	sbb    eax,0xd503bd62
  41f315:	outs   dx,BYTE PTR ds:[esi]
  41f316:	or     esi,ebx
  41f318:	fcom   QWORD PTR [ebx+ebp*1+0x7e71a26c]
  41f31f:	or     eax,0x4a716242
  41f324:	mov    ah,BYTE PTR [edx+0x1b]
  41f327:	cld    
  41f328:	cmp    ah,BYTE PTR [ebx-0x732afc80]
  41f32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32f:	clc    
  41f330:	fldenv [ecx+0x621a727c]
  41f336:	inc    DWORD PTR [ecx+0xec018d8]
  41f33c:	enter  0x348,0xe9
  41f340:	sbb    eax,0xa8d3eb91
  41f345:	out    dx,eax
  41f346:	(bad)  
  41f347:	mov    ecx,0xf717f767
  41f34c:	push   ss
  41f34d:	bound  ecx,QWORD PTR [ecx+0x488ee29c]
  41f353:	in     eax,0x53
  41f355:	inc    esi
  41f356:	or     ebp,DWORD PTR [ecx+edx*1-0x23]
  41f35a:	adc    DWORD PTR [eax+eiz*1-0x24],esp
  41f35e:	add    ah,BYTE PTR [ebx+0x0]
  41f361:	add    BYTE PTR [ebx-0x23],ch
  41f364:	aas    
  41f365:	jmp    0xb94dbfbf
  41f36a:	push   cs
  41f36b:	mov    fs,esi
  41f36d:	jmp    0x7e378048
  41f372:	retf   
  41f373:	mov    DWORD PTR ds:0x800f9dd3,edi
  41f379:	ja     0x41f354
  41f37b:	or     DWORD PTR [ebx-0x1f],esi
  41f37e:	ret    
  41f37f:	dec    ecx
  41f380:	gs jo  0x41f31b
  41f383:	pop    ss
  41f384:	jmp    0x360bedac
  41f389:	ins    BYTE PTR es:[edi],dx
  41f38a:	out    dx,eax
  41f38b:	fsubr  QWORD PTR ds:0xc685d763
  41f391:	cmp    eax,0xf9f689c1
  41f396:	arpl   di,si
  41f398:	mov    DWORD PTR [edi],esp
  41f39a:	(bad)  
  41f39b:	mov    esi,esi
  41f39d:	xor    DWORD PTR [ebp+0xc],ecx
  41f3a0:	and    BYTE PTR [eax+0x7206dc11],0x97
  41f3a7:	push   0x9d6e199
  41f3ac:	jmp    0xf7d401ac
  41f3b1:	add    BYTE PTR [edi+0x2525e4c3],ah
  41f3b7:	or     eax,0x9575f00
  41f3bc:	das    
  41f3bd:	leave  
  41f3be:	shl    ah,cl
  41f3c0:	add    al,0x8b
  41f3c2:	xor    DWORD PTR [ebp-0x7f],esp
  41f3c5:	rol    BYTE PTR [eax],0x0
  41f3c8:	and    BYTE PTR [edx],cl
  41f3ca:	cmp    BYTE PTR [eax],0xd6
  41f3cd:	pop    eax
  41f3ce:	push   es
  41f3cf:	add    BYTE PTR [esp+ecx*1],0x0
  41f3d3:	jne    0x41f3c5
  41f3d5:	adc    eax,0x3cf2ebc0
  41f3da:	in     al,0x17
  41f3dc:	or     ebx,ebx
  41f3de:	sti    
  41f3df:	xor    ax,0x3447
  41f3e3:	pop    ebp
  41f3e4:	out    dx,al
  41f3e5:	pop    ebp
  41f3e6:	cld    
  41f3e7:	push   esp
  41f3e8:	inc    edi
  41f3e9:	jmp    0x84e8:0x8cc4e47f
  41f3f0:	mov    al,0xc
  41f3f2:	add    BYTE PTR [ebx+0x27],dl
  41f3f5:	push   ecx
  41f3f6:	add    al,0x8b
  41f3f8:	scas   eax,DWORD PTR es:[edi]
  41f3f9:	or     DWORD PTR [ebx+0x7f423848],esi
  41f3ff:	into   
  41f400:	jnp    0x41f3b0
  41f402:	sti    
  41f403:	jmp    FWORD PTR [esp+ecx*1+0x53]
  41f407:	mov    DWORD PTR [eax],esp
  41f409:	xor    dl,BYTE PTR [ecx+ecx*4]
  41f40c:	adc    BYTE PTR [edx],dh
  41f40e:	adc    BYTE PTR [esi-0x39],ah
  41f411:	pop    ds
  41f412:	jno    0x41f459
  41f414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f415:	jae    0x41f44e
  41f417:	retf   0x1aa0
  41f41a:	push   0x2
  41f41c:	in     eax,0x73
  41f41e:	test   DWORD PTR [eax+edx*8+0xd],ecx
  41f422:	or     esi,DWORD PTR [esi-0x749d5efc]
  41f428:	in     al,dx
  41f429:	dec    ecx
  41f42a:	(bad)  
  41f42c:	add    BYTE PTR [eax],al
  41f42e:	aad    0x92
  41f430:	clc    
  41f431:	fisubr WORD PTR gs:[edx+0x6af97b7d]
  41f438:	out    0x86,al
  41f43a:	mov    DWORD PTR [esi+0xa],eax
  41f43d:	lds    ebx,FWORD PTR [ecx-0x2a82f3b2]
  41f443:	jb     0x41f446
  41f445:	call   0xfcb1811f
  41f44a:	dec    esp
  41f44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f44c:	and    al,0x14
  41f44e:	scas   al,BYTE PTR es:[edi]
  41f44f:	xor    BYTE PTR [eax],al
  41f451:	test   BYTE PTR [eax-0x7affff8c],bl
  41f457:	mov    edx,0x1eda858c
  41f45c:	jl     0x41f45e
  41f45e:	pusha  
  41f45f:	test   eax,0xb15e6608
  41f464:	mov    edx,0x8a51ad4e
  41f469:	cld    
  41f46a:	mov    edx,0xc523c4da
  41f46f:	cmp    eax,DWORD PTR [esi+0xc]
  41f472:	push   ecx
  41f473:	popf   
  41f474:	add    al,BYTE PTR [eax]
  41f476:	aad    0x80
  41f478:	pop    eax
  41f479:	js     0x41f4ce
  41f47b:	pusha  
  41f47c:	ins    BYTE PTR es:[edi],dx
  41f47d:	cld    
  41f47e:	or     DWORD PTR [ebp+0x10],ecx
  41f481:	call   0xfcb1db4b
  41f486:	dec    esi
  41f487:	je     0x41f4fb
  41f489:	call   ebp
  41f48b:	mov    ah,0x6
  41f48d:	adc    DWORD PTR [ebp+0x1596d],0x7eb0a600
  41f497:	dec    eax
  41f498:	fld    DWORD PTR [ecx]
  41f49a:	aam    0xfc
  41f49c:	loope  0x41f4a2
  41f49e:	or     al,0xb0
  41f4a0:	(bad)  
  41f4a1:	retf   0x5e07
  41f4a4:	cmp    eax,0xd5003380
  41f4a9:	or     DWORD PTR [ebx+0x44],ebp
  41f4ac:	leave  
  41f4ad:	test   DWORD PTR [edx+0x6209d505],edx
  41f4b3:	add    ebx,eax
  41f4b5:	xchg   esi,eax
  41f4b6:	es shr bh,0x5f
  41f4ba:	test   DWORD PTR [edx*8-0x7943e12b],eax
  41f4c1:	sti    
  41f4c2:	jne    0x41f4bc
  41f4c4:	mov    dh,0xf5
  41f4c6:	popa   
  41f4c7:	shl    BYTE PTR [esi+0x5c4d4ef5],1
  41f4cd:	pop    edi
  41f4ce:	pop    ebp
  41f4cf:	pop    ebp
  41f4d0:	and    DWORD PTR [ecx],ecx
  41f4d2:	out    0x3,eax
  41f4d4:	pop    esp
  41f4d5:	(bad)  
  41f4d6:	add    dl,BYTE PTR [edi+ebp*2]
  41f4d9:	or     ecx,edx
  41f4db:	add    al,0x4e
  41f4dd:	mov    BYTE PTR [edx],0x17
  41f4e0:	and    eax,0x535c3493
  41f4e5:	sub    DWORD PTR ds:0x9a49566f,0xc2dd550f
  41f4ef:	(bad)  
  41f4f0:	xlat   BYTE PTR ds:[ebx]
  41f4f1:	aam    0xde
  41f4f3:	aad    0xb2
  41f4f5:	inc    esp
  41f4f6:	cwde   
  41f4f7:	outs   dx,BYTE PTR ds:[esi]
  41f4f8:	add    BYTE PTR [eax],al
  41f4fa:	mov    eax,ds:0x1e83f372
  41f4ff:	es out dx,al
  41f501:	pop    es
  41f502:	push   es
  41f503:	or     BYTE PTR [ebp-0x12221ba5],bl
  41f509:	outs   dx,BYTE PTR ds:[esi]
  41f50a:	jp     0x41f4d7
  41f50c:	sub    BYTE PTR [esi+0x79],0x8a
  41f510:	sub    ch,BYTE PTR [eax]
  41f512:	lds    ebx,FWORD PTR [esi-0x41]
  41f515:	jle    0x41f582
  41f517:	pop    esi
  41f518:	out    0xd9,al
  41f51a:	arpl   WORD PTR [edi-0x25],bx
  41f51d:	dec    ebx
  41f51f:	leave  
  41f520:	out    0xd3,al
  41f522:	push   ecx
  41f523:	hlt    
  41f524:	jmp    FWORD PTR [eax+eiz*8]
  41f527:	leave  
  41f528:	inc    DWORD PTR [edx-0x27]
  41f52b:	xchg   edx,eax
  41f52c:	or     ebp,0x62
  41f52f:	pop    esi
  41f530:	cld    
  41f531:	jmp    0x20ccdb3c
  41f536:	loop   0x41f55e
  41f538:	call   0xfca002f3
  41f53d:	je     0x41f591
  41f53f:	sub    dl,BYTE PTR [eax+0x5009d6e9]
  41f545:	adc    DWORD PTR [edi-0x55],0x9e5ae8ff
  41f54c:	or     al,0x6d
  41f54e:	and    ebx,DWORD PTR [edi-0x4]
  41f551:	jmp    0x75cd5462
  41f556:	mov    dl,0x5d
  41f558:	(bad)  
  41f559:	call   0xfa2b6734
  41f55e:	add    BYTE PTR [eax],al
  41f560:	(bad)  
  41f561:	or     DWORD PTR [ecx+ebp*1-0x17d0762d],eax
  41f568:	(bad)  
  41f569:	or     ebp,edi
  41f56b:	aam    0x5e
  41f56d:	cli    
  41f56e:	aas    
  41f56f:	jmp    0x744e92c1
  41f574:	call   0x5c15:0x1fda0d29
  41f57b:	lds    esp,FWORD PTR [ebx-0x29b77cf2]
  41f581:	or     DWORD PTR [eax],eax
  41f583:	ins    BYTE PTR es:[edi],dx
  41f584:	mov    ch,BYTE PTR [ecx]
  41f586:	sub    BYTE PTR [ecx],dh
  41f588:	adc    bl,BYTE PTR [ebp-0x4]
  41f58b:	jmp    0xe859e2ae
  41f590:	(bad)  
  41f591:	nop
  41f592:	add    DWORD PTR ds:0xe9000af1,0xffffff86
  41f599:	mov    edx,0xbaba4350
  41f59e:	cld    
  41f59f:	add    BYTE PTR [ecx+0x19],bh
  41f5a2:	cmovo  edi,DWORD PTR [esp+eax*4]
  41f5a6:	mov    esp,0x80dd0075
  41f5ab:	and    al,0xb4
  41f5ad:	pop    es
  41f5ae:	add    BYTE PTR [eax],al
  41f5b0:	cld    
  41f5b1:	loop   0x41f575
  41f5b3:	lea    esi,[eax+0x3c028c31]
  41f5b9:	or     eax,ebp
  41f5bb:	call   0x853de45e
  41f5c0:	ins    BYTE PTR es:[edi],dx
  41f5c1:	bound  ebx,QWORD PTR [esi+0x6a]
  41f5c4:	add    BYTE PTR [eax],al
  41f5c6:	mov    eax,0x8333524b
  41f5cb:	fadd   QWORD PTR [eax+0x24]
  41f5ce:	loopne 0x41f606
  41f5d0:	dec    esp
  41f5d1:	(bad)  
  41f5d2:	stc    
  41f5d3:	adc    BYTE PTR [esi],dl
  41f5d5:	inc    eax
  41f5d6:	cld    
  41f5d7:	mov    eax,eax
  41f5d9:	or     al,0x71
  41f5db:	xchg   ecx,eax
  41f5dc:	and    BYTE PTR [eax-0x76fff714],dl
  41f5e2:	sub    BYTE PTR ds:0x24788d50,ah
  41f5e8:	sbb    BYTE PTR [eax+0x31],dl
  41f5eb:	push   edx
  41f5ec:	and    BYTE PTR [esp+ebx*2+0x35],cl
  41f5f0:	push   ebx
  41f5f1:	mov    ebp,edi
  41f5f3:	xor    eax,0x4c987485
  41f5f8:	in     al,0x1b
  41f5fa:	call   0xecc7f1ed
  41f5ff:	popa   
  41f600:	and    ch,BYTE PTR [eax+0x24]
  41f603:	sti    
  41f604:	(bad)  
  41f605:	call   DWORD PTR [ebx-0x7ce3dfac]
  41f60b:	repz jmp 0x41f620
  41f60e:	sub    al,0x8
  41f610:	sti    
  41f611:	je     0x41f5db
  41f613:	stc    
  41f614:	xchg   BYTE PTR ds:0x3ffa24,dh
  41f61a:	aad    0x33
  41f61c:	push   edx
  41f61d:	cld    
  41f61e:	jmp    0x843f0229
  41f623:	lods   al,BYTE PTR ds:[esi]
  41f624:	les    esp,FWORD PTR [ebx]
  41f626:	loop   0x41f699
  41f628:	das    
  41f629:	rol    BYTE PTR [eax],0x0
  41f62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f62d:	add    dl,ah
  41f62f:	addr16 (bad) 
  41f631:	inc    edx
  41f632:	add    BYTE PTR [eax],al
  41f634:	cmp    bl,BYTE PTR [ebp+0x4]
  41f637:	adc    al,0x95
  41f639:	jb     0x41f5bb
  41f63b:	jnp    0x41f62e
  41f63d:	arpl   WORD PTR [ecx],ax
  41f63f:	jae    0x41f5c3
  41f641:	mov    esi,DWORD PTR [ebx+eiz*1+0x707d]
  41f648:	pusha  
  41f649:	out    0x24,al
  41f64b:	cld    
  41f64c:	aad    0x72
  41f64e:	add    ch,bh
  41f650:	dec    ecx
  41f651:	inc    esi
  41f652:	ins    BYTE PTR es:[edi],dx
  41f653:	(bad)  
  41f654:	cli    
  41f655:	jno    0x41f6d0
  41f657:	inc    ebx
  41f658:	mov    ecx,0xb1437d02
  41f65d:	add    dl,ah
  41f65f:	cld    
  41f660:	imul   eax,DWORD PTR [esi],0xe91c510
  41f666:	xor    BYTE PTR [eax],dl
  41f668:	fsubr  QWORD PTR [esi+0xd11c500]
  41f66e:	les    edx,FWORD PTR [ebp-0x33]
  41f671:	scas   al,BYTE PTR es:[edi]
  41f672:	add    ch,al
  41f674:	adc    DWORD PTR [ebp-0x3c],ecx
  41f677:	push   esi
  41f678:	(bad)  [esi+0x4d11c500]
  41f67e:	mov    eax,0xaecd7a
  41f683:	lds    edx,FWORD PTR [ecx]
  41f685:	dec    ebp
  41f686:	mov    esp,0xaeddc3
  41f68b:	lds    edx,FWORD PTR [ecx]
  41f68d:	dec    ebp
  41f68e:	shl    dh,1
  41f690:	add    BYTE PTR [eax],al
  41f692:	int    0xae
  41f694:	add    ch,al
  41f696:	adc    DWORD PTR [edx],ecx
  41f698:	or     edx,eax
  41f69a:	loop   0x41f6ac
  41f69c:	sub    DWORD PTR [edi*2+0x616b4d1c],eax
  41f6a3:	lock out 0x78,eax
  41f6a6:	push   esi
  41f6a7:	es ret 
  41f6a9:	add    al,0xd5
  41f6ab:	or     edi,ecx
  41f6ad:	adc    al,BYTE PTR [edi]
  41f6af:	or     ah,bh
  41f6b1:	jle    0x41f652
  41f6b3:	adc    DWORD PTR [edx-0x10],esp
  41f6b6:	idiv   cl
  41f6b8:	mov    fs,WORD PTR [esp+ecx*2-0x598062a5]
  41f6bf:	and    eax,0x80495bfb
  41f6c4:	lea    ebp,[ebx-0x7b]
  41f6c7:	jno    0x41f727
  41f6c9:	or     DWORD PTR [eax],edx
  41f6cb:	pop    ebx
  41f6cc:	sbb    eax,0x1149c5ca
  41f6d1:	jg     0x41f6ca
  41f6d3:	mov    esp,0xb4d500a8
  41f6d8:	jno    0x41f732
  41f6da:	jae    0x41f749
  41f6dc:	push   es
  41f6dd:	push   es
  41f6de:	aad    0x9
  41f6e0:	mov    edx,0x8ed54fd1
  41f6e5:	pop    esp
  41f6e6:	pop    esi
  41f6e7:	push   edi
  41f6e8:	out    0x3,al
  41f6ea:	pop    esp
  41f6eb:	mov    esp,0xde55e1ee
  41f6f0:	mov    ds:0x2dc49b03,al
  41f6f5:	add    al,0x0
  41f6f7:	add    al,cl
  41f6f9:	test   DWORD PTR [edi+0x5],ebp
  41f6fc:	aad    0x9
  41f6fe:	ins    BYTE PTR es:[edi],dx
  41f6ff:	mov    edx,0x95bab90
  41f705:	pop    ebx
  41f706:	xchg   ebx,eax
  41f707:	pop    ebx
  41f708:	xor    BYTE PTR [edi-0x73854257],cl
  41f70e:	push   ebp
  41f70f:	imul   ecx,DWORD PTR [ecx+0x1f0ff8e],0xffffffe0
  41f716:	imul   DWORD PTR [edx-0x12]
  41f719:	pop    ebp
  41f71a:	jb     0x41f729
  41f71c:	out    0x9,eax
  41f71e:	(bad)  
  41f71f:	in     eax,dx
  41f720:	jmp    0x87f1:0xd6e8fee8
  41f727:	cli    
  41f728:	(bad)  
  41f729:	or     ebp,edi
  41f72b:	cld    
  41f72c:	call   0xebf7:0xbfe94034
  41f733:	fist   DWORD PTR [esi]
  41f735:	pop    edx
  41f736:	cmp    ebp,ebx
  41f738:	ror    DWORD PTR [ecx],1
  41f73a:	add    BYTE PTR [eax-0x1603a506],dl
  41f740:	pop    es
  41f741:	(bad)  
  41f742:	lds    ebp,FWORD PTR [edx-0x51]
  41f745:	pop    ebp
  41f746:	push   esp
  41f747:	sub    DWORD PTR [ecx+ecx*4],0x978d86fc
  41f74e:	fistp  QWORD PTR [edi+edi*2+0x5d]
  41f752:	out    0xdd,eax
  41f754:	push   0x555cfc5d
  41f759:	data16 cli 
  41f75b:	data16 add BYTE PTR [eax],al
  41f75e:	jg     0x41f72a
  41f760:	mov    dl,ah
  41f762:	xchg   edx,eax
  41f763:	mov    edi,eax
  41f765:	push   esi
  41f766:	jle    0x41f7a4
  41f768:	pop    es
  41f769:	dec    esi
  41f76a:	outs   dx,DWORD PTR ds:[esi]
  41f76b:	add    BYTE PTR [edx+0x47],0x52
  41f76f:	cdq    
  41f770:	jae    0x41f785
  41f772:	dec    edx
  41f773:	or     bh,ch
  41f775:	mov    esp,0x4572821a
  41f77a:	ficomp DWORD PTR [eax+0xd]
  41f77d:	pop    edi
  41f77e:	push   ss
  41f77f:	pop    esi
  41f780:	xlat   BYTE PTR ds:[ebx]
  41f781:	add    dl,BYTE PTR [ecx]
  41f783:	test   BYTE PTR [eax-0x13],cl
  41f786:	sti    
  41f787:	cwde   
  41f788:	dec    edi
  41f789:	mov    dh,0x66
  41f78b:	pop    eax
  41f78c:	in     al,0x0
  41f78e:	xlat   BYTE PTR ds:[ebx]
  41f78f:	icebp  
  41f790:	(bad)  
  41f791:	(bad)  
  41f792:	stc    
  41f793:	pop    ecx
  41f794:	fmul   DWORD PTR [eax-0x621b1ccf]
  41f79a:	je     0x41f780
  41f79c:	sti    
  41f79d:	lea    eax,[ecx]
  41f79f:	out    dx,al
  41f7a0:	stc    
  41f7a1:	dec    DWORD PTR [ebx-0x203a1bc2]
  41f7a7:	loop   0x41f7a4
  41f7a9:	or     BYTE PTR [ecx],0xe4
  41f7ac:	cld    
  41f7ad:	push   cs
  41f7ae:	ror    ch,0xfc
  41f7b1:	(bad)  
  41f7b2:	cmp    al,0x37
  41f7b4:	cld    
  41f7b5:	imul   ebp,DWORD PTR [eax+eiz*8],0x1edcf841
  41f7bc:	shr    al,0x8a
  41f7bf:	test   ebx,edi
  41f7c1:	inc    DWORD PTR [eax]
  41f7c3:	add    BYTE PTR [edi],dh
  41f7c5:	cwde   
  41f7c6:	hlt    
  41f7c7:	cmpxchg DWORD PTR [ebp-0x4],esi
  41f7cb:	jmp    FWORD PTR [esi+edx*8]
  41f7ce:	jns    0x41f7c8
  41f7d0:	in     al,0x1d
  41f7d2:	jno    0x41f7d4
  41f7d4:	cld    
  41f7d5:	add    DWORD PTR ss:[ebp-0x17b3224f],ecx
  41f7dc:	xchg   ebx,eax
  41f7dd:	mov    bl,bh
  41f7df:	inc    DWORD PTR [eax+0x121970cd]
  41f7e5:	mov    ?,WORD PTR [ecx-0x10]
  41f7e8:	icebp  
  41f7e9:	addr16 push cs
  41f7eb:	cmovae ebx,DWORD PTR [ecx+0x514957ee]
  41f7f2:	call   0x42d2df
  41f7f7:	add    BYTE PTR [edi],dh
  41f7f9:	push   ecx
  41f7fa:	add    al,0xeb
  41f7fc:	scas   al,BYTE PTR es:[edi]
  41f7fd:	push   ds
  41f7fe:	rol    BYTE PTR [esp+edi*8+0x20f6e59],0x99
  41f806:	lock dec eax
  41f808:	aad    0xaa
  41f80a:	in     al,dx
  41f80b:	or     DWORD PTR ds:0x9b53edab,ecx
  41f811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f812:	addr16 (bad) 
  41f814:	jg     0x41f7be
  41f816:	fiadd  WORD PTR [eax+0x72fc5500]
  41f81c:	adc    dh,BYTE PTR [esi-0x2e824844]
  41f822:	jno    0x41f823
  41f824:	push   0xffffffbc
  41f826:	imul   DWORD PTR [ecx+0x0]
  41f829:	add    ch,cl
  41f82b:	aas    
  41f82c:	sub    eax,0x42393bc
  41f831:	std    
  41f832:	call   0xd5820e01
  41f837:	(bad)  [eax-0x7e]
  41f83a:	dec    ebx
  41f83b:	push   ss
  41f83c:	sbb    DWORD PTR [ecx-0x256970],ecx
  41f842:	mov    cl,bl
  41f844:	push   es
  41f845:	mov    ebp,edx
  41f847:	cli    
  41f848:	jmp    0x1aff:0xd86294ce
  41f84f:	add    BYTE PTR fs:[ebx+0x4579ca90],cl
  41f856:	sar    DWORD PTR [edx+0x48],1
  41f859:	out    dx,al
  41f85a:	aad    0x62
  41f85c:	jl     0x41f81d
  41f85e:	xor    BYTE PTR [eax-0x32],0xe7
  41f862:	fmul   QWORD PTR [esi]
  41f864:	addr16 cld 
  41f866:	jmp    0x675e:0xd4e7543c
  41f86d:	cld    
  41f86e:	push   ebp
  41f86f:	inc    ebp
  41f870:	addr16 jmp ebx
  41f873:	in     al,0xc0
  41f875:	cld    
  41f876:	retf   0x7c18
  41f879:	jb     0x41f838
  41f87b:	leave  
  41f87c:	pop    eax
  41f87d:	xchg   edi,eax
  41f87e:	mov    edx,0xb27a8128
  41f883:	or     ah,bh
  41f885:	out    dx,al
  41f886:	rcr    DWORD PTR [edi-0x17],cl
  41f889:	add    dl,al
  41f88b:	mov    WORD PTR [ebp-0x66ffff97],ss
  41f891:	push   edi
  41f892:	lods   eax,DWORD PTR ds:[esi]
  41f893:	jbe    0x41f89c
  41f895:	xchg   edx,eax
  41f896:	push   cs
  41f897:	int    0x84
  41f899:	or     ah,bh
  41f89b:	push   0x6feba05
  41f8a0:	test   BYTE PTR [edx],cl
  41f8a2:	out    0xd4,eax
  41f8a4:	jp     0x41f8e7
  41f8a6:	add    DWORD PTR [edi+0x69],esp
  41f8a9:	and    DWORD PTR [esp+ebx*2+0x3e65a7d],0xfffffffb
  41f8b1:	sbb    ah,BYTE PTR [edi-0x15b3e435]
  41f8b7:	add    esp,DWORD PTR [esi+0x2e83ca82]
  41f8bd:	ficomp WORD PTR [ecx]
  41f8bf:	into   
  41f8c0:	mov    eax,ds:0xa778e1e3
  41f8c5:	inc    ebp
  41f8c6:	ds pop esp
  41f8c8:	sahf   
  41f8c9:	cld    
  41f8ca:	out    0x3,eax
  41f8cc:	dec    esp
  41f8cd:	fstp   st(6)
  41f8cf:	xor    BYTE PTR [edi-0x279219ab],0x8
  41f8d6:	adc    DWORD PTR [edx],eax
  41f8d8:	lods   al,BYTE PTR ds:[esi]
  41f8d9:	fst    st(6)
  41f8db:	(bad)  
  41f8dd:	test   BYTE PTR [eax+eax*1],ch
  41f8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8e1:	test   bl,ch
  41f8e3:	addr16 pop ebp
  41f8e5:	dec    ebx
  41f8e6:	dec    esi
  41f8e7:	push   es
  41f8e8:	xchg   edx,eax
  41f8e9:	push   esi
  41f8ea:	pop    ebp
  41f8eb:	jns    0x41f94d
  41f8ed:	icebp  
  41f8ee:	mov    ebp,0xf84dc766
  41f8f3:	ret    
  41f8f4:	add    BYTE PTR [eax],al
  41f8f6:	rol    dh,cl
  41f8f8:	popf   
  41f8f9:	js     0x41f94a
  41f8fb:	pop    esi
  41f8fc:	jno    0x41f941
  41f8fe:	mov    edx,0x33a00001
  41f903:	push   esi
  41f904:	push   eax
  41f905:	pop    esp
  41f906:	jae    0x41f8c8
  41f908:	dec    edi
  41f909:	je     0x41f8c7
  41f90b:	pop    esi
  41f90c:	mov    BYTE PTR [edx],ch
  41f90e:	add    DWORD PTR [eax+0x47],esp
  41f911:	push   ss
  41f912:	xor    dl,BYTE PTR [esi+0x72]
  41f915:	adc    DWORD PTR [esp+ecx*8],ecx
  41f918:	retf   
  41f919:	push   es
  41f91a:	test   BYTE PTR [edx-0x76],bl
  41f91d:	jl     0x41f929
  41f91f:	push   esi
  41f920:	jb     0x41f917
  41f922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f923:	loopne 0x41f944
  41f925:	xchg   edx,eax
  41f926:	push   cs
  41f927:	inc    edi
  41f928:	add    ah,dh
  41f92a:	repz mov ebx,eax
  41f92d:	stc    
  41f92e:	push   edi
  41f92f:	pop    esi
  41f930:	sbb    al,0xe6
  41f932:	push   ebp
  41f933:	pushf  
  41f934:	(bad)  
  41f935:	call   0x1a067a10
  41f93a:	das    
  41f93b:	push   edi
  41f93c:	sub    DWORD PTR fs:[edi-0x1a4a0037],esp
  41f943:	or     DWORD PTR [ecx],edx
  41f945:	sub    ecx,ebx
  41f947:	mov    es,WORD PTR [edx-0xf]
  41f94a:	push   ebp
  41f94b:	xchg   esi,eax
  41f94c:	or     al,0x65
  41f94e:	dec    edi
  41f94f:	push   esi
  41f950:	cld    
  41f951:	jmp    0xfbedf509
  41f956:	push   ss
  41f957:	push   esi
  41f958:	cmp    edi,DWORD PTR [esi]
  41f95a:	add    BYTE PTR [eax],al
  41f95c:	(bad)  
  41f95d:	or     DWORD PTR [eax],eax
  41f95f:	hlt    
  41f960:	std    
  41f961:	push   esp
  41f962:	jb     0x41f945
  41f964:	jae    0x41f961
  41f966:	(bad)  
  41f967:	fist   DWORD PTR [esi]
  41f969:	push   esi
  41f96a:	or     esp,0xdc8155ee
  41f970:	ficom  WORD PTR [ebp+0x70]
  41f973:	sar    ah,cl
  41f975:	mov    ebp,0x183be169
  41f97a:	mov    esp,0xfc47fa00
  41f97f:	(bad)  
  41f980:	test   eax,0xac400e61
  41f985:	shl    ah,1
  41f987:	test   DWORD PTR [ebx],eax
  41f989:	gs pop ecx
  41f98b:	mov    edx,ecx
  41f98d:	std    
  41f98e:	adc    eax,0xc33ac40
  41f993:	lea    ebp,[edx+0x55]
  41f996:	dec    esp
  41f997:	lea    edi,[ebx]
  41f999:	push   ebp
  41f99a:	dec    esp
  41f99b:	(bad)  
  41f99c:	out    dx,eax
  41f99d:	iret   
  41f99e:	add    ch,BYTE PTR [edx-0x6a]
  41f9a1:	(bad)  
  41f9a2:	add    eax,DWORD PTR [ebx+0x478904aa]
  41f9a8:	mov    BYTE PTR [edi+0x4c],al
  41f9ab:	jmp    FWORD PTR [edi]
  41f9ad:	rol    DWORD PTR [ecx+0x8],cl
  41f9b0:	out    dx,eax
  41f9b1:	leave  
  41f9b2:	adc    al,0x66
  41f9b4:	out    dx,eax
  41f9b5:	outs   dx,BYTE PTR ds:[esi]
  41f9b6:	dec    eax
  41f9b7:	add    BYTE PTR [ebp-0x268bb36a],dh
  41f9bd:	lea    edi,[ebx+0x18]
  41f9c0:	add    BYTE PTR [eax],al
  41f9c2:	sub    al,0x65
  41f9c4:	sbb    esp,DWORD PTR [esi-0x51]
  41f9c7:	outs   dx,BYTE PTR ds:[esi]
  41f9c8:	inc    esi
  41f9c9:	add    al,ch
  41f9cb:	add    eax,0xb9eb6853
  41f9d0:	cmp    eax,0xdc400
  41f9d5:	or     BYTE PTR [ecx+esi*4],ch
  41f9d8:	ret    0x63d1
  41f9db:	out    dx,eax
  41f9dc:	add    eax,0x1ac5508
  41f9e2:	addr16 (bad) 
  41f9e4:	push   edx
  41f9e5:	call   0x3cf986
  41f9ea:	and    DWORD PTR [esp+eax*1-0x18],0xffffffa9
  41f9ef:	fdivr  st,st(4)
  41f9f1:	(bad)  
  41f9f2:	mov    esi,0xd55e5bcd
  41f9f7:	xchg   edi,eax
  41f9f8:	cmp    ecx,eax
  41f9fa:	fldenv [edx-0x33]
  41f9fd:	mov    BYTE PTR [ecx+0x56f75fdf],bh
  41fa03:	(bad)  
  41fa04:	xlat   BYTE PTR ds:[ebx]
  41fa05:	push   eax
  41fa06:	and    esi,DWORD PTR [esi+edx*8+0x1]
  41fa0a:	cmp    eax,0x213c0d02
  41fa0f:	sti    
  41fa10:	les    edi,FWORD PTR [esi]
  41fa12:	aad    0x62
  41fa14:	jns    0x41fa59
  41fa16:	icebp  
  41fa17:	pop    esi
  41fa18:	jge    0x41f9d9
  41fa1a:	or     BYTE PTR [ebp-0x40],ch
  41fa1d:	out    0xfa,al
  41fa1f:	popa   
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	out    dx,eax
  41fa23:	push   ecx
  41fa24:	arpl   WORD PTR [edx],dx
  41fa26:	add    BYTE PTR [eax],al
  41fa28:	leave  
  41fa29:	xor    eax,eax
  41fa2b:	jmp    DWORD PTR [edx]
  41fa2d:	fs or  eax,0x422c444
  41fa33:	call   0x461b17
  41fa38:	push   ecx
  41fa39:	mov    ds:0x619d83f3,al
  41fa3e:	add    BYTE PTR [eax],al
  41fa40:	cmp    al,0x3
  41fa42:	add    DWORD PTR [eax],eax
  41fa44:	aad    0xd7
  41fa46:	mov    ah,0x23
  41fa48:	in     eax,0xed
  41fa4a:	int3   
  41fa4b:	and    ecx,ecx
  41fa4d:	dec    edx
  41fa4e:	stc    
  41fa4f:	jmp    FWORD PTR [ebx]
  41fa51:	stos   DWORD PTR es:[edi],eax
  41fa52:	jns    0x41fa97
  41fa54:	stc    
  41fa55:	data16 jg 0x41fa4f
  41fa58:	sbb    ch,BYTE PTR [ebx+0x7c]
  41fa5b:	mov    ds:0x810062d5,eax
  41fa60:	jno    0x41faa8
  41fa62:	and    BYTE PTR [eax],al
  41fa64:	outs   dx,DWORD PTR ds:[esi]
  41fa65:	bnd je 0x41faab
  41fa68:	mov    cl,0x4a
  41fa6a:	(bad)  
  41fa6b:	jmp    DWORD PTR [edx-0x2bd41c76]
  41fa71:	or     edi,esp
  41fa73:	js     0x41fad3
  41fa75:	sub    eax,0x5168107
  41fa7a:	push   0xffffffe7
  41fa7c:	test   BYTE PTR ds:0x534ceee3,0xfd
  41fa83:	fs out 0x4d,eax
  41fa86:	fadd   st,st(3)
  41fa88:	mov    edx,0x232e88
  41fa8d:	add    BYTE PTR [esi],ah
  41fa8f:	in     eax,0x61
  41fa91:	sub    al,0x5e
  41fa93:	(bad)  
  41fa94:	retf   0xe71f
  41fa97:	cs jo  0x41fa97
  41fa9a:	dec    edi
  41fa9b:	mov    edx,0x18c8336
  41faa0:	xchg   esi,eax
  41faa1:	call   FWORD PTR [eax+ecx*2+0x11]
  41faa5:	or     eax,0x833dba4e
  41faaa:	jl     0x41fab9
  41faac:	jle    0x41faad
  41faae:	(bad)  
  41faaf:	inc    eax
  41fab0:	add    ecx,edi
  41fab2:	pop    edi
  41fab3:	mov    edx,0xd5c8485
  41fab8:	push   esi
  41fab9:	sti    
  41faba:	(bad)  
  41fabb:	mov    al,ds:0xac63f6a
  41fac0:	fild   WORD PTR [edx+ecx*1]
  41fac3:	sbb    BYTE PTR [edx-0x39b62691],ah
  41fac9:	or     BYTE PTR [ebp+0x9],cl
  41facc:	jp     0x41fad3
  41face:	fwait
  41facf:	pop    esi
  41fad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad1:	mov    BYTE PTR [edx-0x23],ch
  41fad4:	into   
  41fad5:	xchg   ebp,edi
  41fad7:	fadd   st(2),st
  41fad9:	dec    edx
  41fada:	xchg   esi,eax
  41fadb:	sub    eax,0x9d504c7
  41fae0:	out    0x62,eax
  41fae2:	add    DWORD PTR [ecx],0x52cedb72
  41fae8:	cmc    
  41fae9:	pop    es
  41faea:	dec    esi
  41faeb:	mov    dh,0xff
  41faed:	int3   
  41faee:	shl    BYTE PTR [ecx-0x7f],cl
  41faf1:	jno    0x41faf3
  41faf3:	add    BYTE PTR [esi+0x55],dh
  41faf6:	mov    ch,BYTE PTR [ebp+0x515029ba]
  41fafc:	mov    BYTE PTR [edi-0x4],cl
  41faff:	push   esi
  41fb00:	(bad)  
  41fb01:	(bad)  
  41fb02:	and    ebx,ebp
  41fb04:	ds jge 0x41fb1d
  41fb07:	inc    esi
  41fb08:	add    BYTE PTR ss:[ebx+0x5],0xc1
  41fb0d:	ret    0x31e7
  41fb10:	test   DWORD PTR [ebp-0x4],edx
  41fb13:	adc    DWORD PTR fs:[esi],eax
  41fb16:	sbb    ecx,0x37
  41fb19:	push   esi
  41fb1a:	cld    
  41fb1b:	ins    BYTE PTR es:[edi],dx
  41fb1c:	lea    esp,[esi]
  41fb1e:	sbb    BYTE PTR [ecx+0xfe6dafe],bh
  41fb24:	test   BYTE PTR [ecx-0x293d9329],0x44
  41fb2b:	jb     0x41fba2
  41fb2d:	sbb    BYTE PTR es:[esi+esi*8-0x2a],ch
  41fb32:	bound  eax,QWORD PTR ss:[edx]
  41fb35:	mov    ah,BYTE PTR [ebx+0xd]
  41fb38:	mov    ecx,0x44396a09
  41fb3d:	(bad)  
  41fb3e:	and    eax,DWORD PTR [ecx]
  41fb40:	inc    ebx
  41fb41:	push   edx
  41fb42:	dec    esp
  41fb43:	rol    DWORD PTR [edi+0x5be8ff21],0x46
  41fb4a:	or     edx,DWORD PTR [ebx-0x25]
  41fb4d:	jle    0x41fb92
  41fb4f:	or     eax,0xae4fbbd1
  41fb54:	sub    eax,0x291602
  41fb59:	add    cl,bl
  41fb5b:	mov    bl,al
  41fb5d:	in     eax,dx
  41fb5e:	inc    ebp
  41fb5f:	(bad)  
  41fb60:	and    ecx,ecx
  41fb62:	inc    esi
  41fb63:	push   0x60
  41fb65:	mov    WORD PTR [edi+0x55],?
  41fb68:	add    BYTE PTR [eax],0x32
  41fb6b:	hlt    
  41fb6c:	dec    edx
  41fb6d:	jne    0x41fbb4
  41fb6f:	fwait
  41fb70:	in     al,0x11
  41fb72:	add    eax,0x2c68fbe7
  41fb77:	xor    esp,edi
  41fb79:	(bad)  
  41fb7a:	jnp    0x41fb6d
  41fb7c:	fcmovnbe st,st(6)
  41fb7e:	das    
  41fb7f:	push   es
  41fb80:	sti    
  41fb81:	adc    eax,0x3c5718
  41fb86:	fld    DWORD PTR [edi]
  41fb88:	std    
  41fb89:	jmp    FWORD PTR [esp+edi*8-0x1404847d]
  41fb90:	sti    
  41fb91:	push   DWORD PTR [eax+0x29]
  41fb94:	sbb    al,0xe8
  41fb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb97:	mov    ebp,0xcd7ffffc
  41fb9c:	pop    ebx
  41fb9d:	pop    esi
  41fb9e:	xchg   edi,eax
  41fb9f:	and    cl,0x5d
  41fba2:	mov    esi,0xf7550008
  41fba7:	loopne 0x41fc28
  41fba9:	in     al,dx
  41fbaa:	xor    BYTE PTR [eax+0x397b5752],bl
  41fbb0:	or     BYTE PTR [ebp+0x75fb7149],cl
  41fbb6:	je     0x41fb38
  41fbb8:	in     al,dx
  41fbb9:	call   0x3daef7
  41fbbe:	add    BYTE PTR [eax],al
  41fbc0:	out    dx,eax
  41fbc1:	push   0x48b900f4
  41fbc6:	clc    
  41fbc7:	push   eax
  41fbc8:	adc    al,0x19
  41fbca:	in     eax,0xfe
  41fbcc:	sbb    edi,DWORD PTR [edi-0x2c]
  41fbcf:	mov    ecx,ebx
  41fbd1:	std    
  41fbd2:	sbb    bl,0xf1
  41fbd5:	or     cl,BYTE PTR [ecx+0x2f95b845]
  41fbdb:	shr    ah,0xdd
  41fbde:	std    
  41fbdf:	lock cmp ch,bl
  41fbe2:	xchg   al,bl
  41fbe4:	aad    0xe5
  41fbe6:	aam    0xf7
  41fbe8:	std    
  41fbe9:	jp     0x41fc21
  41fbeb:	std    
  41fbec:	add    ch,BYTE PTR [eax]
  41fbee:	ret    0x1689
  41fbf1:	sub    al,0x49
  41fbf3:	rcr    ebp,0x62
  41fbf6:	mov    esi,DWORD PTR [edx-0x17]
  41fbf9:	jecxz  0x41fbdf
  41fbfb:	or     edx,ebp
  41fbfd:	fstp   QWORD PTR [ecx+0x73]
  41fc00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc01:	fstp   st(2)
  41fc03:	xor    eax,0x4f409d60
  41fc08:	pop    eax
  41fc09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc0a:	dec    esi
  41fc0b:	dec    edi
  41fc0c:	lods   eax,DWORD PTR ds:[esi]
  41fc0d:	imul   esp,DWORD PTR [edx-0x1],0x7243e5ba
  41fc14:	mov    BYTE PTR [eax-0x75],0x4
  41fc18:	xor    ebx,DWORD PTR [ebp+eax*8-0xf]
  41fc1c:	sub    BYTE PTR [ebp-0x1a],bl
  41fc1f:	mov    BYTE PTR [edx],dl
  41fc21:	gs out 0x38,al
  41fc24:	add    BYTE PTR [eax],al
  41fc26:	sbb    bh,ch
  41fc28:	xlat   BYTE PTR ds:[ebx]
  41fc29:	dec    edx
  41fc2a:	mov    ah,BYTE PTR [ebp+0x4c9a810c]
  41fc30:	sbb    DWORD PTR [ebx-0x37],esi
  41fc33:	aam    0x31
  41fc35:	push   0x428d9c6b
  41fc3a:	sub    DWORD PTR [edx-0x16],esi
  41fc3d:	cmp    esi,edi
  41fc3f:	aad    0xdd
  41fc41:	sti    
  41fc42:	dec    eax
  41fc43:	and    eax,0x6798c60c
  41fc48:	add    BYTE PTR [edi-0x3097c140],al
  41fc4e:	fld    QWORD PTR [edi+0x5f]
  41fc51:	adc    BYTE PTR ds:0x9888f616,0x96
  41fc58:	adc    edx,edx
  41fc5a:	and    dl,BYTE PTR [ebx+0x9cd725f]
  41fc60:	pop    DWORD PTR [ebp-0x7462b0d6]
  41fc66:	xchg   edi,eax
  41fc67:	add    BYTE PTR [esi-0x159e2d2a],dl
  41fc6d:	sti    
  41fc6e:	add    DWORD PTR [eax+0x70],edx
  41fc71:	mov    esi,0x60f662c9
  41fc76:	icebp  
  41fc77:	dec    edi
  41fc78:	sbb    DWORD PTR [eax+ebx*8-0xf],ebp
  41fc7c:	ins    DWORD PTR es:[edi],dx
  41fc7d:	pusha  
  41fc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7f:	xor    al,0x4f
  41fc81:	in     al,0xd9
  41fc83:	dec    edi
  41fc84:	pop    ebp
  41fc85:	mov    ecx,0x596b595d
  41fc8a:	add    BYTE PTR [eax],al
  41fc8c:	fld    DWORD PTR [ebp+0x9d50368]
  41fc92:	jno    0x41fc8d
  41fc94:	push   esi
  41fc95:	cmp    al,0xb2
  41fc97:	fisttp WORD PTR [ecx]
  41fc99:	sbb    esp,DWORD PTR [eax]
  41fc9b:	adc    al,0xa8
  41fc9d:	mov    dh,BYTE PTR [eax]
  41fc9f:	adc    esp,DWORD PTR [esi]
  41fca1:	sti    
  41fca2:	jo     0x41fc5d
  41fca4:	fwait
  41fca5:	iret   
  41fca6:	and    bl,bl
  41fca8:	push   es
  41fca9:	add    eax,0xd5225d67
  41fcae:	in     al,0xed
  41fcb0:	(bad)  
  41fcb1:	mov    ch,BYTE PTR [eax*1-0x68f44e8]
  41fcb8:	pop    edi
  41fcb9:	mov    ah,0x16
  41fcbb:	sub    DWORD PTR [ebp+0x1],0x76
  41fcbf:	repz clc 
  41fcc1:	(bad)  
  41fcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc3:	xor    bl,BYTE PTR [ebx]
  41fcc5:	imul   esp,edx,0x4c43d5e5
  41fccb:	xor    DWORD PTR [ebx],0x1a
  41fcce:	ret    0x4e2e
  41fcd1:	mov    ah,0x85
  41fcd3:	test   BYTE PTR ds:0xb8f43605,bh
  41fcd9:	(bad)  
  41fcda:	push   DWORD PTR [esi-0x19]
  41fcdd:	(bad)  
  41fcde:	fsubrp st(5),st
  41fce0:	cmp    BYTE PTR [edx],cl
  41fce2:	retf   0x560f
  41fce5:	push   0x840b9234
  41fcea:	pop    ecx
  41fceb:	jbe    0x41fd3e
  41fced:	push   edx
  41fcee:	add    dl,BYTE PTR [esi]
  41fcf0:	add    BYTE PTR [eax],al
  41fcf2:	std    
  41fcf3:	in     al,0xc
  41fcf5:	inc    edi
  41fcf6:	(bad)  
  41fcf7:	(bad)  
  41fcf8:	fsubrp st(5),st
  41fcfa:	clc    
  41fcfb:	or     edx,ecx
  41fcfd:	orps   xmm5,XMMWORD PTR [eax+0x54]
  41fd01:	fimul  WORD PTR [ebx+0x48]
  41fd04:	inc    ebp
  41fd05:	push   edx
  41fd06:	inc    edi
  41fd07:	mov    dl,0x83
  41fd09:	cmp    ebp,DWORD PTR [ebp-0x2fd97ef7]
  41fd0f:	out    0x86,eax
  41fd11:	loope  0x41fd62
  41fd13:	inc    ebp
  41fd14:	pop    esp
  41fd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd16:	pop    ss
  41fd17:	sbb    al,bh
  41fd19:	rcr    esi,cl
  41fd1b:	out    0x86,eax
  41fd1d:	loope  0x41fd8d
  41fd1f:	lods   al,BYTE PTR ds:[esi]
  41fd20:	shl    BYTE PTR [edi+eiz*8-0x26],0x53
  41fd25:	jae    0x41fcf6
  41fd27:	test   esi,eax
  41fd29:	xchg   ebp,eax
  41fd2a:	mov    al,ds:0x2869c019
  41fd2f:	and    al,0x73
  41fd31:	in     al,0x6c
  41fd33:	or     BYTE PTR [eax+0x12],bl
  41fd36:	int3   
  41fd37:	mov    esi,esi
  41fd39:	ror    BYTE PTR [ebp-0x3860c1b1],cl
  41fd3f:	push   edi
  41fd40:	call   0x3699541b
  41fd45:	pop    ax
  41fd47:	loope  0x41fd3e
  41fd49:	repz cmp ch,bh
  41fd4c:	mov    ebp,0xef0930a0
  41fd51:	inc    edi
  41fd52:	push   esi
  41fd53:	pop    esp
  41fd54:	das    
  41fd55:	add    BYTE PTR [eax],al
  41fd57:	add    BYTE PTR [ebx+0x77],al
  41fd5a:	repnz inc edx
  41fd5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd5d:	add    BYTE PTR [eax-0x2196d307],al
  41fd63:	test   BYTE PTR [ebp+0x36],dh
  41fd66:	inc    DWORD PTR [edx-0x48f4fa9c]
  41fd6c:	inc    edx
  41fd6d:	mov    ds:0x5cfa73fe,al
  41fd72:	(bad)  
  41fd75:	or     al,BYTE PTR [eax]
  41fd77:	test   di,di
  41fd7a:	pop    ebp
  41fd7b:	ret    
  41fd7c:	das    
  41fd7d:	retf   0x866
  41fd80:	fidivr DWORD PTR [ebx+eax*1+0x58]
  41fd84:	das    
  41fd85:	xor    edx,0x982d274
  41fd8b:	xor    BYTE PTR [eax+ecx*2],cl
  41fd8e:	cld    
  41fd8f:	xor    bh,ah
  41fd91:	add    ebp,0x1180be74
  41fd97:	sub    al,0xdc
  41fd99:	inc    edi
  41fd9a:	cld    
  41fd9b:	cmp    BYTE PTR [esi+0x3f400735],ch
  41fda1:	retf   
  41fda2:	and    al,0x3b
  41fda4:	in     eax,dx
  41fda5:	cmp    dh,al
  41fda7:	and    esp,0xffffffab
  41fdaa:	mov    edi,0x68804953
  41fdaf:	and    al,0x70
  41fdb1:	mov    ah,al
  41fdb3:	call   FWORD PTR [edi-0x2b74abf0]
  41fdb9:	out    dx,eax
  41fdba:	out    0xf,al
  41fdbc:	add    BYTE PTR [eax],al
  41fdbe:	clc    
  41fdbf:	test   ah,bh
  41fdc1:	(bad)  
  41fdc2:	jl     0x41fd44
  41fdc4:	or     DWORD PTR [eax],esi
  41fdc6:	mov    esp,0x2c32fc47
  41fdcb:	xchg   esp,eax
  41fdcc:	aaa    
  41fdcd:	retf   
  41fdce:	stos   BYTE PTR es:[edi],al
  41fdcf:	sub    BYTE PTR [edi+0x3406d515],al
  41fdd5:	inc    eax
  41fdd6:	aad    0xe7
  41fdd8:	push   ecx
  41fdd9:	fisttp DWORD PTR ss:[esi]
  41fddc:	or     al,BYTE PTR [eax+0x56]
  41fddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fde0:	sub    edi,DWORD PTR [ecx]
  41fde2:	adc    al,0x11
  41fde4:	pop    eax
  41fde5:	call   0x6895e5b8
  41fdea:	and    edi,DWORD PTR [ebx]
  41fdec:	push   ecx
  41fdee:	pop    esi
  41fdef:	stos   DWORD PTR es:[edi],eax
  41fdf0:	aam    0x28
  41fdf2:	xchg   esp,eax
  41fdf3:	pop    es
  41fdf4:	dec    ecx
  41fdf5:	daa    
  41fdf6:	inc    ebx
  41fdf7:	(bad)  
  41fdf8:	xor    BYTE PTR [eax-0x2b],al
  41fdfb:	jp     0x41fe31
  41fdfd:	adc    dh,dl
  41fdff:	retf   
  41fe00:	xchg   DWORD PTR [edi+0x3a872161],edi
  41fe06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe07:	jb     0x41fdc7
  41fe09:	(bad)  
  41fe0a:	fistp  DWORD PTR [ebp+0x10]
  41fe0d:	rcl    BYTE PTR [esi],1
  41fe0f:	arpl   WORD PTR [edi+0x2bad3ef4],ax
  41fe15:	add    DWORD PTR [eax],ecx
  41fe17:	dec    edi
  41fe18:	xor    BYTE PTR [eax-0x2b],al
  41fe1b:	mov    gs,WORD PTR [eax]
  41fe1d:	push   ecx
  41fe1e:	push   es
  41fe1f:	jo     0x41fdd0
  41fe21:	xchg   BYTE PTR [eax],al
  41fe23:	add    bl,bh
  41fe25:	jmp    0x1134:0x35a203bd
  41fe2c:	adc    eax,0xf14d7f63
  41fe31:	jmp    0x41fdbb
  41fe33:	inc    ebp
  41fe34:	fucomp st(1)
  41fe36:	mov    ebp,0xf09c4c0b
  41fe3b:	xchg   BYTE PTR [ebx],bl
  41fe3d:	das    
  41fe3e:	mov    DWORD PTR [ebp-0x33],ebx
  41fe41:	fnstcw WORD PTR [ebp+0x24745c1f]
  41fe47:	mov    DWORD PTR [edx-0x1a54484],ebx
  41fe4d:	or     DWORD PTR [ecx+0x71b3d507],ebp
  41fe53:	push   ebx
  41fe54:	mov    ebp,0x600fe53
  41fe59:	push   ds
  41fe5a:	mov    bh,0xc0
  41fe5c:	cmp    dh,BYTE PTR [ebx-0x77252a3b]
  41fe62:	add    al,0x4
  41fe64:	sub    dh,dh
  41fe66:	sahf   
  41fe67:	icebp  
  41fe68:	loop   0x41fe73
  41fe6a:	scas   al,BYTE PTR es:[edi]
  41fe6b:	aad    0xce
  41fe6d:	popa   
  41fe6e:	into   
  41fe6f:	cmc    
  41fe70:	adc    DWORD PTR [ebp+ebx*4-0x2b],ecx
  41fe74:	fiadd  DWORD PTR [eax+0x4efaf82c]
  41fe7a:	inc    eax
  41fe7b:	pop    esp
  41fe7c:	stc    
  41fe7d:	dec    ebx
  41fe7e:	cld    
  41fe7f:	sti    
  41fe80:	cli    
  41fe81:	cmc    
  41fe82:	aam    0x5c
  41fe84:	jmp    0x69fb08
  41fe89:	add    BYTE PTR [esi+0x53],dl
  41fe8c:	repnz add eax,0x313b6183
  41fe92:	ror    BYTE PTR [ebx-0x79],1
  41fe95:	adc    esp,DWORD PTR [ebp-0x35771939]
  41fe9b:	test   DWORD PTR [esi],esp
  41fe9d:	xlat   BYTE PTR ds:[ebx]
  41fe9e:	pop    ss
  41fe9f:	jg     0x41fe7c
  41fea1:	das    
  41fea2:	test   edi,eax
  41fea4:	out    0x88,al
  41fea6:	xchg   edx,eax
  41fea7:	fistp  WORD PTR [edi]
  41fea9:	sub    ecx,DWORD PTR [esi-0x42]
  41feac:	xlat   BYTE PTR ds:[ebx]
  41fead:	cmp    edx,DWORD PTR [ebp+0x11]
  41feb0:	out    0xd6,eax
  41feb2:	fadd   DWORD PTR [esi-0x2ae7d4f1]
  41feb8:	sbb    ebx,DWORD PTR [eax]
  41feba:	jge    0x41fe92
  41febc:	lds    eax,FWORD PTR [esi-0x4e0b2a87]
  41fec2:	jp     0x41fef9
  41fec4:	rcr    DWORD PTR [ecx+ebp*2+0x29],cl
  41fec8:	add    BYTE PTR [edx+esi*4-0x1216bfc7],dh
  41fecf:	std    
  41fed0:	mov    BYTE PTR [esi-0x60d8bbbe],dh
  41fed6:	std    
  41fed7:	cmp    DWORD PTR [eax-0x17],eax
  41feda:	scas   al,BYTE PTR es:[edi]
  41fedb:	dec    esi
  41fedc:	adc    ecx,esi
  41fede:	sahf   
  41fedf:	cmp    DWORD PTR [edx],0xfffffff9
  41fee2:	out    0xc9,al
  41fee4:	call   FWORD PTR ds:0x62524a6f
  41feea:	lods   eax,DWORD PTR ds:[esi]
  41feeb:	mov    ebx,0x174e
  41fef0:	cmp    ebx,eax
  41fef2:	arpl   WORD PTR [edx],bp
  41fef4:	(bad)  [edi+ecx*8+0x70]
  41fef8:	adc    al,0x53
  41fefa:	out    0xbc,eax
  41fefc:	fmul   QWORD PTR [ecx]
  41fefe:	add    BYTE PTR [edx+0x24],ah
  41ff01:	add    eax,DWORD PTR [ecx+ebp*4-0x167b7a22]
  41ff08:	(bad)  
  41ff09:	or     DWORD PTR [ecx-0x87616d4],ecx
  41ff0f:	mov    edx,0x6181160a
  41ff14:	xchg   edi,eax
  41ff15:	(bad)  
  41ff16:	xor    DWORD PTR [edx+0x29],ebp
  41ff19:	out    0x73,eax
  41ff1b:	add    al,0x5a
  41ff1d:	push   edx
  41ff1e:	ins    DWORD PTR es:[edi],dx
  41ff1f:	aam    0xa6
  41ff21:	or     DWORD PTR [edx-0x23],0xe9fbe75b
  41ff28:	push   ebx
  41ff29:	out    0x7,eax
  41ff2b:	jmp    0x9949c67d
  41ff30:	dec    ebp
  41ff31:	(bad)  
  41ff32:	sti    
  41ff33:	mov    ecx,0xb717d82f
  41ff38:	inc    BYTE PTR [ecx+0x8]
  41ff3b:	jmp    0x95018616
  41ff40:	inc    esi
  41ff41:	mov    ah,0xe7
  41ff43:	add    BYTE PTR [edi-0x380003aa],bl
  41ff49:	cmp    eax,0x59ab574f
  41ff4e:	int3   
  41ff4f:	inc    ebx
  41ff50:	ins    BYTE PTR es:[edi],dx
  41ff51:	xchg   edi,eax
  41ff52:	sti    
  41ff53:	adc    eax,0x54140000
  41ff58:	cmp    al,0x0
  41ff5a:	and    al,0xfa
  41ff5c:	std    
  41ff5d:	jmp    FWORD PTR [ebx]
  41ff5f:	hlt    
  41ff60:	(bad)  
  41ff61:	and    DWORD PTR [edi+ebp*4],0x70
  41ff65:	sbb    esp,DWORD PTR [edi-0x2fd3ff]
  41ff6b:	add    eax,0xedd4c067
  41ff70:	pop    ebx
  41ff71:	or     BYTE PTR [eax],dh
  41ff73:	cmp    cl,BYTE PTR [eax]
  41ff75:	push   eax
  41ff77:	std    
  41ff78:	pop    es
  41ff79:	inc    DWORD PTR [ecx]
  41ff7b:	fimul  WORD PTR [esi]
  41ff7d:	inc    eax
  41ff7e:	in     al,dx
  41ff7f:	scas   eax,DWORD PTR es:[edi]
  41ff80:	mov    edi,0xd8594b57
  41ff85:	adc    bh,BYTE PTR [ebp+eax*1-0x74c87ba5]
  41ff8c:	jo     0x41ff94
  41ff8e:	outs   dx,DWORD PTR ds:[esi]
  41ff8f:	xor    DWORD PTR [esp+eiz*2],ecx
  41ff92:	loopne 0x41ffe9
  41ff94:	sti    
  41ff95:	jne    0x41ff6b
  41ff97:	in     al,0x71
  41ff99:	adc    al,0x2b
  41ff9b:	pop    edx
  41ff9c:	or     al,0xff
  41ff9e:	mov    eax,ds:0x81ff5611
  41ffa3:	in     eax,0x5a
  41ffa5:	leave  
  41ffa6:	(bad)  
  41ffa7:	cmp    ah,bh
  41ffa9:	push   eax
  41ffaa:	dec    edi
  41ffab:	jp     0x41ff34
  41ffad:	fstp   DWORD PTR [edi+0x61dd37b2]
  41ffb3:	or     al,0x32
  41ffb5:	shl    ch,0x10
  41ffb8:	std    
  41ffb9:	inc    DWORD PTR [eax]
  41ffbb:	add    BYTE PTR [ebp+esi*1-0x14],bh
  41ffbf:	iret   
  41ffc0:	aad    0x73
  41ffc2:	add    ch,bh
  41ffc4:	loopne 0x41ffc0
  41ffc6:	repnz aas 
  41ffc8:	aad    0xf8
  41ffca:	mov    esp,0x1b32de23
  41ffcf:	sub    ecx,ebp
  41ffd1:	and    al,dh
  41ffd3:	jmp    ecx
  41ffd5:	pop    esp
  41ffd6:	scas   eax,DWORD PTR es:[edi]
  41ffd7:	push   edx
  41ffd8:	mov    ebp,0xd5040031
  41ffdd:	addr16 in al,dx
  41ffdf:	addr16 out 0xf2,eax
  41ffe2:	add    esp,DWORD PTR [ecx-0x3d7d33]
  41ffe8:	out    dx,eax
  41ffe9:	jne    0x41fff1
  41ffeb:	test   BYTE PTR [esi],bl
  41ffed:	xor    eax,DWORD PTR [eax]
  41ffef:	add    BYTE PTR [esi+0x2e],cl
  41fff2:	lock iret 
  41fff4:	xchg   esi,eax
  41fff5:	xor    dl,BYTE PTR [ebx]
  41fff7:	ror    dh,0x7d
  41fffa:	rcl    DWORD PTR [ebx],1
  41fffc:	pop    esi
  41fffd:	ds add al,0xd0
  420000:	xchg   esi,eax
  420001:	xor    bl,BYTE PTR [ecx]
  420003:	sbb    al,0x57
  420005:	push   0x32d5887c
  42000a:	add    BYTE PTR [eax-0x52],al
  42000d:	jno    0x41ffe4
  42000f:	jmp    0x41ff9c
  420011:	lods   eax,DWORD PTR ds:[esi]
  420012:	pop    es
  420013:	mov    edx,ecx
  420015:	xor    al,BYTE PTR [eax]
  420017:	add    BYTE PTR [ebx-0x2abfcfc2],dl
  42001d:	fiadd  DWORD PTR [eax+0x10]
  420020:	add    BYTE PTR [eax],al
  420022:	ret    0x7fdf
  420025:	mov    edi,0xff73aeca
  42002a:	mov    dl,0x32
  42002c:	mov    eax,ds:0x73850f
  420031:	mov    eax,edx
  420033:	xor    BYTE PTR cs:[eax-0x2b],al
  420037:	stos   DWORD PTR es:[edi],eax
  420038:	or     al,0x78
  42003a:	out    0x9,eax
  42003c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42003d:	add    esp,DWORD PTR [eax]
  42003f:	mov    ah,0xc9
  420041:	mov    bl,dh
  420043:	mov    dl,BYTE PTR ds:0xa959caff
  420049:	add    eax,DWORD PTR [esi]
  42004b:	dec    ecx
  42004c:	mov    ebx,0xe6cc850b
  420051:	pop    eax
  420052:	mov    BYTE PTR [esi+ebp*8-0x7442a1e4],dl
  420059:	in     eax,dx
  42005a:	fstp   st(6)
  42005c:	in     eax,0xe
  42005e:	fstp   QWORD PTR [ecx+0x29]
  420061:	add    al,0x40
  420063:	pop    edi
  420064:	popa   
  420065:	push   ebx
  420066:	std    
  420067:	ds popa 
  420069:	es test eax,0xa104271b
  42006f:	add    al,0x51
  420071:	add    al,0x88
  420073:	fild   QWORD PTR [ecx+eax*1+0x32c925f]
  42007a:	sbb    ecx,edi
  42007c:	jmp    0x420069
  42007e:	adc    edi,ecx
  420080:	in     al,0x28
  420082:	and    edx,ecx
  420084:	out    0x41,al
  420086:	add    BYTE PTR [eax],al
  420088:	nop
  420089:	adc    ebp,DWORD PTR [edx-0x17d82395]
  42008f:	add    edx,DWORD PTR [esi+0x49]
  420092:	repnz or DWORD PTR [ebx],ebx
  420095:	int    0xca
  420097:	hlt    
  420098:	(bad)  [edx]
  42009a:	leave  
  42009b:	inc    ecx
  42009c:	push   ss
  42009d:	out    dx,al
  42009e:	icebp  
  42009f:	add    bh,BYTE PTR [eax+ebp*1+0x48c2edb5]
  4200a6:	sbb    ecx,DWORD PTR [eiz*4-0x78a71935]
  4200ad:	(bad)  
  4200af:	add    ebp,DWORD PTR [eax+0x1533eefd]
  4200b5:	or     al,BYTE PTR [eax]
  4200b7:	ss jmp 0x4200ff
  4200ba:	or     bl,cl
  4200bc:	(bad)  
  4200bd:	leave  
  4200be:	inc    ebp
  4200c0:	dec    esp
  4200c1:	scas   eax,DWORD PTR es:[edi]
  4200c2:	out    dx,eax
  4200c3:	cs cdq 
  4200c5:	inc    edi
  4200c6:	std    
  4200c7:	cld    
  4200c8:	ret    0x4018
  4200cb:	jmp    0xf265cc30
  4200d0:	and    esp,edx
  4200d2:	push   esi
  4200d3:	sub    dh,BYTE PTR [ebx]
  4200d5:	xchg   edx,eax
  4200d6:	jmp    0x420142
  4200d8:	repnz adc dl,BYTE PTR [ecx-0x69]
  4200dc:	popa   
  4200dd:	cld    
  4200de:	pop    edi
  4200df:	cld    
  4200e0:	push   ss
  4200e1:	inc    edi
  4200e2:	push   ebp
  4200e3:	push   ebx
  4200e4:	aad    0x90
  4200e6:	xlat   BYTE PTR ds:[ebx]
  4200e7:	ss dec esp
  4200e9:	int3   
  4200ea:	sti    
  4200eb:	cmp    DWORD PTR [eax],eax
  4200ed:	add    BYTE PTR [esp+ecx*8-0xd],bl
  4200f1:	sbb    DWORD PTR [edi],edi
  4200f3:	dec    eax
  4200f4:	push   ecx
  4200f5:	jo     0x4200f3
  4200f7:	inc    edx
  4200f8:	cld    
  4200f9:	lahf   
  4200fa:	push   esp
  4200fb:	xchg   DWORD PTR [ebx-0x27],esi
  4200fe:	pop    edi
  4200ff:	aam    0xf3
  420101:	ins    BYTE PTR es:[edi],dx
  420102:	cwde   
  420103:	mov    edx,0x452f9106
  420108:	cld    
  420109:	xchg   esi,eax
  42010a:	push   ebp
  42010b:	xchg   DWORD PTR [ebx-0x12],esi
  42010e:	pop    ebp
  42010f:	int3   
  420110:	sti    
  420111:	sbb    DWORD PTR [esp+ecx*8-0x9],ebx
  420115:	sbb    edi,ebp
  420117:	sbb    edx,DWORD PTR [ecx+0x60]
  42011a:	cld    
  42011b:	inc    edx
  42011c:	cld    
  42011d:	xchg   edi,eax
  42011e:	push   esp
  42011f:	xchg   BYTE PTR [ebx-0xa],dh
  420122:	push   edi
  420123:	ret    
  420124:	imul   ecx
  420126:	xchg   edx,eax
  420127:	jns    0xba741fe1
  42012d:	sbb    ebx,DWORD PTR [ecx]
  42012f:	xor    al,BYTE PTR [ecx]
  420131:	add    BYTE PTR [ecx*1-0x2a88a1a5],ch
  420138:	mov    edi,0x20323155
  42013d:	mov    ch,bh
  42013f:	mov    cl,0x70
  420141:	add    DWORD PTR [edx+ecx*1+0x4f],edi
  420145:	push   esi
  420146:	pop    es
  420147:	sbb    esp,esp
  420149:	adc    ch,BYTE PTR [edx+ecx*1]
  42014c:	push   ebx
  42014d:	xor    esp,ebx
  42014f:	xor    eax,0xd010
  420154:	aas    
  420155:	or     al,BYTE PTR [edi+0x2c20e5d8]
  42015b:	shr    BYTE PTR [edi],1
  42015d:	or     al,BYTE PTR [ebp+0x3ffa8c3d]
  420163:	add    BYTE PTR [ebx],dh
  420165:	hlt    
  420166:	data16 and al,0xb
  420169:	lahf   
  42016a:	in     al,dx
  42016b:	iret   
  42016c:	out    dx,eax
  42016d:	or     eax,0x4229ff53
  420172:	adc    al,BYTE PTR [eax+0x3c]
  420175:	mov    eax,eax
  420177:	or     al,0xcb
  420179:	(bad)  
  42017b:	and    BYTE PTR [ecx],0x5a
  42017e:	rol    BYTE PTR [ebx-0x4],1
  420181:	or     al,0xb
  420183:	xchg   BYTE PTR [edi+0x7900000d],ah
  420189:	add    esi,DWORD PTR [ecx+0x37]
  42018c:	retf   0x378a
  42018f:	add    al,cl
  420191:	sbb    al,0x6a
  420193:	aas    
  420194:	popa   
  420195:	pop    ecx
  420196:	dec    esp
  420197:	pop    eax
  420198:	inc    esp
  420199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42019a:	or     BYTE PTR [ecx],al
  42019c:	in     al,dx
  42019d:	das    
  42019e:	cmp    cl,BYTE PTR [ebp-0x17aafe37]
  4201a4:	bound  ecx,QWORD PTR ds:0xdc7ffffd
  4201aa:	adc    DWORD PTR [eax-0x3fbf2b],ebx
  4201b0:	popa   
  4201b1:	outs   dx,DWORD PTR ds:[esi]
  4201b2:	add    BYTE PTR [edx],al
  4201b4:	add    eax,0xfee6a0
  4201b9:	add    BYTE PTR [ecx+0x6e],dl
  4201bc:	mov    al,0x4f
  4201be:	dec    esi
  4201bf:	cmc    
  4201c0:	mov    al,0xe7
  4201c2:	ds enter 0x0,0xff
  4201c7:	jb     0x420150
  4201c9:	jb     0x420164
  4201cb:	dec    ebx
  4201cc:	push   0x31c987
  4201d1:	push   0x14
  4201d3:	out    0xcf,al
  4201d5:	push   ebx
  4201d6:	or     eax,0xd40bd81b
  4201db:	xor    ah,dh
  4201dd:	inc    ecx
  4201de:	dec    eax
  4201df:	(bad)  
  4201e0:	adc    BYTE PTR [eax+0x3d],bl
  4201e3:	rol    DWORD PTR [edi+edi*8],0x4a
  4201e7:	mov    esi,0xee4c53bc
  4201ec:	jmp    0x420176
  4201ee:	adc    ebp,DWORD PTR [edx-0x219f9444]
  4201f4:	jmp    0x4201ba
  4201f6:	nop
  4201f7:	push   es
  4201f8:	add    al,BYTE PTR [eax]
  4201fa:	aad    0x32
  4201fc:	xchg   DWORD PTR ds:0xc3bcad86,ebx
  420202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420203:	mov    bl,0x0
  420205:	add    ch,dl
  420207:	mov    dl,0x86
  420209:	(bad)  
  42020a:	in     eax,dx
  42020b:	xchg   BYTE PTR [ecx-0x1],ch
  42020e:	cli    
  42020f:	mov    ch,0x43
  420211:	jae    0x4201de
  420213:	scas   eax,DWORD PTR es:[edi]
  420214:	fsubr  QWORD PTR [edi-0x2b]
  420217:	sbb    BYTE PTR [eax],al
  420219:	mov    ebx,DWORD PTR [eax+0x69b042]
  42021f:	add    cl,dl
  420221:	pop    ds
  420222:	test   DWORD PTR [edx-0x67],eax
  420225:	and    ch,BYTE PTR [edi+eax*2-0x42]
  420229:	or     edi,esp
  42022b:	add    edx,DWORD PTR [ebx+ecx*2-0x1e]
  42022f:	push   esp
  420230:	movsx  ebx,bl
  420233:	dec    eax
  420234:	cmp    al,0xc9
  420236:	pop    ebx
  420237:	iret   
  420238:	xchg   cl,ah
  42023a:	dec    esi
  42023b:	test   esi,0x16e9e70a
  420241:	xchg   edi,eax
  420242:	mov    ebx,0xd8322ac7
  420247:	pop    es
  420248:	mov    al,BYTE PTR [ebx+esi*2-0x41]
  42024c:	push   es
  42024d:	ficom  DWORD PTR [eax-0x469f3bfe]
  420253:	xchg   BYTE PTR [edi],dl
  420255:	pop    esi
  420256:	mov    dh,0xac
  420258:	push   ebx
  420259:	(bad)  
  42025a:	jp     0x4202b0
  42025c:	(bad)  
  42025d:	fst    st(6)
  42025f:	ret    
  420260:	pop    edx
  420261:	lea    esp,[esi]
  420263:	iret   
  420264:	fist   WORD PTR [eax-0x41a04bdc]
  42026a:	pop    edx
  42026b:	ins    BYTE PTR es:[edi],dx
  42026c:	and    DWORD PTR [eax],esi
  42026e:	out    0x3,al
  420270:	sub    al,0x7
  420272:	sbb    DWORD PTR [esi+edx*2+0x49],eax
  420276:	push   edx
  420277:	icebp  
  420278:	pop    edi
  420279:	into   
  42027a:	xor    dh,BYTE PTR [edi+ecx*2+0x4db392ce]
  420281:	dec    esp
  420282:	mov    esi,0xfc0000dc
  420287:	or     bh,ah
  420289:	jle    0x4202d5
  42028b:	mov    ebp,0x96d6e9fe
  420290:	and    edx,esp
  420292:	mov    ch,BYTE PTR [edi-0x2a687916]
  420298:	xchg   DWORD PTR ss:[edi+0x7f8b165d],edx
  42029f:	mov    ecx,0x8ec328e
  4202a4:	add    cl,ch
  4202a6:	mov    esp,0x6af48ac8
  4202ab:	(bad)  
  4202ad:	xchg   edi,eax
  4202ae:	int    0x42
  4202b0:	cld    
  4202b1:	sar    DWORD PTR [eax-0x70],cl
  4202b4:	jb     0x4202c7
  4202b6:	jno    0x4202e3
  4202b8:	mov    al,ds:0x6a09d7e2
  4202bd:	scas   al,BYTE PTR es:[edi]
  4202be:	pop    ebx
  4202bf:	mov    eax,0x9b2ea15b
  4202c4:	or     al,ch
  4202c6:	(bad)  
  4202c7:	mov    es,WORD PTR [edx-0xf]
  4202ca:	pop    edi
  4202cb:	enter  0x7243,0xc0
  4202cf:	mov    eax,DWORD PTR [edx-0x4f]
  4202d2:	dec    edi
  4202d3:	loopne 0x420348
  4202d5:	xor    esi,DWORD PTR cs:[ebx+0x9d6e902]
  4202dc:	std    
  4202dd:	jl     0x420271
  4202df:	nop
  4202e0:	inc    edx
  4202e1:	inc    ebp
  4202e2:	es mov cl,0x4c
  4202e5:	xchg   edx,eax
  4202e6:	pop    ebx
  4202e7:	add    BYTE PTR [ebx],0xee
  4202ea:	add    BYTE PTR [eax],al
  4202ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ed:	inc    ebp
  4202ee:	out    0x37,eax
  4202f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202f1:	inc    esp
  4202f2:	cld    
  4202f3:	inc    eax
  4202f4:	push   0xc457bf88
  4202f9:	scas   eax,DWORD PTR es:[edi]
  4202fa:	add    DWORD PTR [esp+eax*1-0x39],ebx
  4202fe:	pop    ebp
  4202ff:	jb     0x420327
  420301:	fimul  DWORD PTR [edx-0x3bb329c]
  420307:	mov    dh,0x49
  420309:	jnp    0x420309
  42030b:	call   0x8a298ce6
  420310:	mov    al,ds:0x9164fc42
  420315:	mov    dh,0x16
  420317:	push   0xfffffffc
  420319:	scas   al,BYTE PTR es:[edi]
  42031a:	inc    DWORD PTR [edx]
  42031c:	fisttp QWORD PTR [esi+0x7dc80042]
  420322:	data16 add al,0xbf
  420325:	mov    BYTE PTR [ecx-0x428b4fc],al
  42032b:	push   eax
  42032c:	push   esp
  42032d:	test   dh,ah
  42032f:	add    BYTE PTR [ebx+ecx*4+0x616a04c3],ch
  420336:	(bad)  
  420339:	pop    edx
  42033a:	sti    
  42033b:	dec    ebp
  42033c:	mov    WORD PTR [ecx-0x64],fs
  42033f:	pop    edi
  420340:	jp     0x4203b5
  420342:	jg     0x420309
  420344:	xchg   esp,eax
  420345:	add    eax,0xa9f755c0
  42034a:	jge    0x420338
  42034c:	pushf  
  42034d:	ds cld 
  42034f:	inc    DWORD PTR [eax]
  420351:	add    BYTE PTR [edi],bh
  420353:	sub    BYTE PTR [edi],0xdb
  420356:	aas    
  420357:	xlat   BYTE PTR ds:[ebx]
  420358:	jno    0x420362
  42035a:	stc    
  42035b:	pusha  
  42035c:	loopne 0x4202e7
  42035e:	cmp    edx,edx
  420360:	in     al,0x6
  420362:	pop    ebx
  420363:	xlat   BYTE PTR ds:[ebx]
  420364:	sti    
  420365:	test   BYTE PTR [esi+eax*1+0x63d4184],ch
  42036c:	add    BYTE PTR [ebx+0x56],dl
  42036f:	or     eax,0x76204589
  420374:	sti    
  420375:	jne    0x420387
  420377:	ret    
  420378:	inc    ecx
  420379:	call   0xff33ad92
  42037e:	sbb    eax,ebx
  420380:	in     al,dx
  420381:	(bad)  
  420382:	icebp  
  420383:	mov    cl,0x85
  420385:	jne    0x42039b
  420387:	ficomp WORD PTR [esi+0x7fd74b7f]
  42038d:	(bad)  
  42038e:	cmp    eax,DWORD PTR [edi]
  420390:	test   BYTE PTR [ecx],bl
  420392:	in     eax,dx
  420393:	add    eax,0x44e65700
  420398:	das    
  420399:	rcl    ch,cl
  42039b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42039c:	inc    esi
  42039d:	push   esi
  42039e:	loop   0x420340
  4203a0:	xchg   ecx,edx
  4203a2:	shl    BYTE PTR [ebp+0x2fdaff4d],cl
  4203a8:	fiadd  DWORD PTR [edi+0x60]
  4203ab:	ss fs push edi
  4203ae:	mov    ebp,0xc2fefa2f
  4203b3:	pop    ebp
  4203b4:	mov    ebx,0x3800008a
  4203b9:	retf   
  4203ba:	test   al,0xe7
  4203bc:	and    al,0x2d
  4203be:	add    eax,DWORD PTR [eax]
  4203c0:	out    0x4,al
  4203c2:	jl     0x42041e
  4203c4:	int    0xb
  4203c6:	push   ebp
  4203c7:	or     al,0x53
  4203c9:	jmp    0x4203cb
  4203cb:	add    ch,dl
  4203cd:	stos   DWORD PTR es:[edi],eax
  4203ce:	mov    edi,0x54665e07
  4203d3:	mov    cl,cl
  4203d5:	mov    edx,0xa685727b
  4203da:	push   esi
  4203db:	or     al,0x59
  4203dd:	fild   DWORD PTR [eax]
  4203df:	add    ch,dl
  4203e1:	mov    dl,0xe
  4203e3:	add    dl,dl
  4203e5:	scas   al,BYTE PTR es:[edi]
  4203e6:	mov    eax,ds:0x7d335aff
  4203eb:	jnp    0x42044a
  4203ed:	das    
  4203ee:	jnp    0x42046a
  4203f0:	xor    eax,0x590c51a6
  4203f5:	xchg   ebx,eax
  4203f6:	add    eax,DWORD PTR [eax]
  4203f8:	aad    0xb2
  4203fa:	push   cs
  4203fb:	add    dl,ah
  4203fd:	scas   al,BYTE PTR es:[edi]
  4203fe:	jbe    0x4203ff
  420400:	sub    dh,BYTE PTR [ebx]
  420402:	jnp    0x42045f
  420404:	dec    ebp
  420405:	cmp    eax,DWORD PTR [ebp+0x7aa6cad8]
  42040b:	call   DWORD PTR [edx]
  42040d:	xor    eax,DWORD PTR [eax-0x7ba02ac8]
  420413:	adc    ebp,0x5403e709
  420419:	push   edx
  42041a:	popf   
  42041b:	mov    ah,0x0
  42041d:	add    BYTE PTR [esp+edx*4+0x42615ca1],al
  420424:	mov    WORD PTR [ecx+0x57],ss
  420427:	dec    edx
  420428:	cli    
  420429:	adc    cl,BYTE PTR [esi-0x39]
  42042c:	xor    BYTE PTR [ebp-0x4517ede],0xca
  420433:	inc    eax
  420434:	pop    ebx
  420435:	xchg   edi,eax
  420436:	bound  edi,QWORD PTR [eax]
  420438:	gs push ecx
  42043a:	mov    dl,0xd7
  42043c:	popa   
  42043d:	push   edx
  42043e:	mov    cl,0xe2
  420440:	scas   eax,DWORD PTR es:[edi]
  420441:	test   BYTE PTR [edx+0x4db1d240],ah
  420447:	dec    edi
  420448:	xchg   edi,eax
  420449:	jle    0x42045a
  42044b:	ds dec esi
  42044d:	push   es
  42044e:	mov    DWORD PTR [edi],edi
  420450:	xor    eax,0x9db54a88
  420455:	jl     0x42045e
  420457:	cmp    dh,BYTE PTR [ecx-0x31]
  42045a:	call   0xb662:0x177eb4d8
  420461:	nop
  420462:	mov    ds:0x4e03e711,al
  420467:	jbe    0x4204af
  420469:	pop    ecx
  42046a:	pop    ecx
  42046b:	inc    eax
  42046c:	push   cs
  42046d:	sub    BYTE PTR [edi+edi*1-0xb],cl
  420471:	test   BYTE PTR [esi],dl
  420473:	or     eax,0xb5414c6a
  420478:	adc    DWORD PTR [ebp+0x8],edi
  42047b:	fisubr DWORD PTR [ebx-0x42]
  42047e:	xor    DWORD PTR cs:[ebp+0x28000054],esp
  420485:	inc    eax
  420486:	bound  eax,QWORD PTR [ebx-0x5a]
  420489:	sbb    eax,0x12d2c66a
  42048e:	jb     0x420456
  420490:	ficom  DWORD PTR [edi+edi*8-0x8332667]
  420497:	ficomp WORD PTR [eax-0xa]
  42049a:	cld    
  42049b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42049c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42049d:	xor    DWORD PTR [ebx],ecx
  42049f:	sahf   
  4204a0:	or     eax,DWORD PTR [edi+eiz*8-0x37]
  4204a4:	out    0x3c,al
  4204a6:	cld    
  4204a7:	push   0xfffffffb
  4204a9:	inc    ebx
  4204aa:	push   DWORD PTR [ecx+0x13]
  4204ad:	cmp    BYTE PTR [eax+0x2a272afc],cl
  4204b3:	fldenv ds:0x9b625c3e
  4204b9:	inc    ebx
  4204ba:	pop    ebp
  4204bb:	ret    0x48ff
  4204be:	add    ebp,ecx
  4204c0:	imul   edx,DWORD PTR [edx+0x70a68eb],0x2
  4204c7:	jmp    0xabccdda2
  4204cc:	mov    edx,0x23419292
  4204d1:	ds cld 
  4204d3:	fwait
  4204d4:	or     DWORD PTR [eax-0x19],ebx
  4204d7:	neg    BYTE PTR [edx+0x3e]
  4204da:	cld    
  4204db:	ins    DWORD PTR es:[edi],dx
  4204dc:	push   ss
  4204dd:	mov    ebx,0xc3f1b663
  4204e2:	pop    es
  4204e3:	pop    ds
  4204e4:	fisttp QWORD PTR [ebx]
  4204e6:	je     0x420488
  4204e8:	add    BYTE PTR [eax],al
  4204ea:	jecxz  0x420477
  4204ec:	test   DWORD PTR [eax*1-0x7beeb0c2],0xccf6fc3d
  4204f7:	retf   
  4204f8:	pop    es
  4204f9:	fs xchg esi,eax
  4204fb:	mov    edx,0x3e813f35
  420500:	adc    ah,BYTE PTR [ebp+0x61ffff27]
  420506:	push   0x7
  420508:	mov    DWORD PTR [ecx+0x3b654],esi
  42050e:	das    
  42050f:	add    al,0xe5
  420511:	repz add dl,al
  420514:	sti    
  420515:	test   BYTE PTR [edx+eiz*2],bh
  420518:	push   cs
  420519:	mov    edi,edx
  42051b:	or     eax,DWORD PTR [ebx+0x8]
  42051e:	mov    edi,0xac0871ce
  420523:	fstp   st(2)
  420525:	cmovae ecx,edi
  420528:	std    
  420529:	pop    esi
  42052a:	hlt    
  42052b:	iret   
  42052c:	jno    0x420536
  42052e:	inc    esp
  42052f:	mov    bh,0xb
  420531:	call   DWORD PTR [ebx+0x70]
  420534:	repnz pop es
  420536:	mov    ebp,0x210c706f
  42053b:	xchg   ecx,eax
  42053c:	hlt    
  42053d:	std    
  42053e:	xor    ecx,edi
  420540:	dec    esp
  420541:	call   0x3d5574
  420546:	dec    esp
  420547:	add    al,0x57
  420549:	leave  
  42054a:	out    dx,al
  42054b:	adc    DWORD PTR [eax],eax
  42054d:	push   ebp
  42054e:	add    BYTE PTR [eax],al
  420550:	daa    
  420551:	stos   BYTE PTR es:[edi],al
  420552:	jg     0x420538
  420554:	adc    al,0x85
  420556:	call   0x4c838f
  42055b:	push   ebx
  42055c:	push   0x77
  42055e:	dec    sp
  420560:	add    DWORD PTR [edx+0x20],esp
  420563:	sub    al,0x94
  420565:	loop   0x42056b
  420567:	or     DWORD PTR [ebp+0xa],edi
  42056a:	xchg   esi,eax
  42056c:	cmc    
  42056d:	push   ecx
  42056e:	and    BYTE PTR [eax],dl
  420570:	out    0x50,eax
  420572:	add    al,0x89
  420574:	js     0x42055c
  420576:	adc    esi,DWORD PTR [ebx]
  420578:	inc    ebx
  420579:	mov    DWORD PTR [eax+0x24],eax
  42057c:	test   BYTE PTR [edx+0x53],bh
  42057f:	push   edi
  420580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420581:	in     al,0x52
  420583:	mov    DWORD PTR [eax-0x2a76d40f],edx
  420589:	aam    0x27
  42058b:	xor    BYTE PTR [edx],ah
  42058d:	xor    eax,0x30951110
  420592:	xchg   DWORD PTR [edi+0x4ad9e988],edi
  420598:	pop    eax
  420599:	cld    
  42059a:	daa    
  42059b:	and    al,0x9d
  42059d:	dec    eax
  42059e:	xor    eax,DWORD PTR [edi]
  4205a0:	aam    0x30
  4205a2:	mov    ch,0x54
  4205a4:	mov    ch,BYTE PTR [ebp+0xb523c4]
  4205aa:	mov    ds,edx
  4205ac:	hlt    
  4205ad:	lock add edx,DWORD PTR [esi+0x6f]
  4205b1:	sub    al,0xd6
  4205b3:	inc    BYTE PTR [eax]
  4205b5:	add    BYTE PTR [ecx+0x17],ah
  4205b8:	sub    BYTE PTR [eax+ebx*2],ch
  4205bb:	out    0x27,eax
  4205bd:	push   esp
  4205be:	lods   eax,DWORD PTR ds:[esi]
  4205bf:	xor    DWORD PTR [esi-0x4],edi
  4205c2:	mov    edx,0xed23c4b6
  4205c7:	cmp    BYTE PTR [edi+0x43],0xf1
  4205cb:	push   cs
  4205cc:	jg     0x420629
  4205ce:	stc    
  4205cf:	push   cs
  4205d0:	pop    esp
  4205d1:	inc    edx
  4205d2:	push   esi
  4205d3:	les    ecx,FWORD PTR [ebp-0x7d]
  4205d6:	xchg   ebp,eax
  4205d7:	ja     0x4205c1
  4205d9:	push   esp
  4205da:	and    bl,BYTE PTR [edi+edi*2-0x4bed46bd]
  4205e1:	push   ebp
  4205e2:	out    dx,eax
  4205e3:	cs (bad) 
  4205e5:	(bad)  
  4205e6:	popa   
  4205e7:	ja     0x42060d
  4205e9:	sub    al,0x5e
  4205eb:	call   0xc96d948
  4205f0:	dec    esi
  4205f1:	cmc    
  4205f2:	adc    BYTE PTR [ebx],bh
  4205f4:	(bad)  
  4205f5:	jae    0x4205de
  4205f7:	mov    bh,0xc4
  4205f9:	and    ebp,ebp
  4205fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205fc:	mov    edi,0x79324c0b
  420601:	inc    ebx
  420602:	icebp  
  420603:	or     DWORD PTR [ebx],eax
  420605:	jns    0x4205a6
  420607:	sbb    DWORD PTR [eax+0x3],esi
  42060a:	mov    bl,bl
  42060c:	xor    DWORD PTR [ecx+0x37],edi
  42060f:	fild   QWORD PTR [eax+0x71d6d500]
  420615:	pusha  
  420616:	push   ebp
  420617:	cs inc edx
  420619:	mov    cl,0x0
  42061b:	add    BYTE PTR [eax-0x1389c2c],ah
  420621:	fstp   DWORD PTR [ebx-0x39]
  420624:	push   es
  420625:	ficom  DWORD PTR [eax]
  420627:	add    bh,ch
  420629:	icebp  
  42062a:	popf   
  42062b:	dec    ebp
  42062c:	jmp    0x7e4db829
  420631:	cmp    eax,0xc6c9ba00
  420636:	and    ebx,DWORD PTR [eax+0x5f]
  420639:	mov    dh,0x46
  42063b:	lods   al,BYTE PTR ds:[esi]
  42063c:	mov    dl,0xf4
  42063e:	fiadd  WORD PTR [edx]
  420640:	aad    0xaf
  420642:	and    DWORD PTR [edi+0x3f],edi
  420645:	ss mov esi,0xe804a85b
  42064b:	add    ebx,DWORD PTR [esp+eax*2+0x6b]
  42064f:	sub    DWORD PTR [esi],esp
  420651:	or     BYTE PTR [edx+0x41],ah
  420654:	or     cl,BYTE PTR [edi-0x4fdd5c55]
  42065a:	out    0xd9,al
  42065c:	mov    dh,BYTE PTR [edx+0x5c635be7]
  420662:	sub    eax,0xfa45554d
  420667:	mov    al,0x7a
  420669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42066a:	in     al,dx
  42066b:	dec    esp
  42066c:	imul   ebx,esp,0x489ba8b4
  420672:	mov    bl,0x78
  420674:	outs   dx,BYTE PTR ds:[esi]
  420675:	mov    BYTE PTR [edx],dl
  420677:	or     al,0xa4
  420679:	rcl    DWORD PTR [ebp+0x19d6db],cl
  42067f:	jmp    0x93180684
  420684:	mul    DWORD PTR [edx+0x12]
  420687:	or     al,0x81
  420689:	or     ecx,ebx
  42068b:	mov    ah,BYTE PTR [ecx+ebp*8]
  42068e:	or     al,0x4
  420690:	std    
  420691:	sbb    al,0x45
  420693:	inc    esi
  420694:	inc    eax
  420695:	jmp    0xdbba1e23
  42069a:	push   ss
  42069b:	cmp    al,0x89
  42069d:	mov    eax,ds:0x6cf3df8f
  4206a2:	lods   eax,DWORD PTR ds:[esi]
  4206a3:	mov    bh,0x4
  4206a5:	sti    
  4206a6:	xchg   esi,eax
  4206a7:	and    ebp,DWORD PTR [ecx-0x2f62917]
  4206ad:	adc    al,0xd5
  4206af:	adc    ah,BYTE PTR ds:0x2fffbe6
  4206b6:	mov    ecx,0x9b7455db
  4206bb:	dec    edi
  4206bc:	imul   ebp,ecx,0x72424586
  4206c2:	xlat   BYTE PTR ds:[ebx]
  4206c3:	cmp    al,0x12
  4206c5:	rol    eax,1
  4206c7:	sti    
  4206c8:	jmp    FWORD PTR [edi-0x75]
  4206cb:	dec    edi
  4206cc:	and    BYTE PTR ds:0x495a84aa,0x50
  4206d3:	cmp    ecx,DWORD PTR [ecx+ebp*8]
  4206d6:	(bad)  
  4206d7:	mov    DWORD PTR [edx-0x23],edi
  4206da:	(bad)  
  4206db:	mov    dh,0x10
  4206dd:	ins    BYTE PTR es:[edi],dx
  4206de:	xchg   ebx,eax
  4206df:	daa    
  4206e0:	dec    edi
  4206e1:	lahf   
  4206e2:	adc    DWORD PTR [eax+0x2ef3],edi
  4206e8:	mov    ds:0xa2fcfd03,eax
  4206ed:	sbb    BYTE PTR [eax-0x17],al
  4206f0:	or     eax,0x6e9cfd18
  4206f5:	nop
  4206f6:	inc    edx
  4206f7:	sbb    eax,0x50037c
  4206fc:	fist   DWORD PTR [ebx+0x4]
  4206ff:	mov    ecx,eax
  420701:	mov    ds:0x347015fb,al
  420706:	cmp    al,0x0
  420708:	mov    cl,0xc6
  42070a:	jno    0x420724
  42070c:	cmp    edi,DWORD PTR [ecx]
  42070e:	test   al,0x12
  420710:	cld    
  420711:	add    eax,0x72fe539
  420716:	add    BYTE PTR [ebp-0x33],dh
  420719:	rol    BYTE PTR [ecx+0xc],0xec
  42071d:	frstor [eax-0x18f9031c]
  420723:	mov    dh,0x77
  420725:	jo     0x420707
  420727:	test   DWORD PTR [edi+0x5a],esp
  42072a:	ud0    edx,ecx
  42072d:	fld    DWORD PTR [edi+0x34deec45]
  420733:	push   cs
  420734:	dec    ebx
  420735:	iret   
  420736:	add    eax,0x45c265c1
  42073c:	push   edi
  42073d:	add    eax,0xde4075fb
  420742:	mov    cs,WORD PTR ds:0x7d7ccf4b
  420748:	inc    edi
  420749:	push   es
  42074a:	jno    0x420756
  42074c:	add    BYTE PTR [eax],al
  42074e:	daa    
  42074f:	dec    ecx
  420750:	or     al,0xff
  420752:	int3   
  420753:	fnstsw WORD PTR [esi+0xd]
  420756:	or     ecx,edi
  420758:	xchg   BYTE PTR [ebp+0x7],al
  42075b:	outs   dx,DWORD PTR ds:[esi]
  42075c:	pop    edx
  42075d:	pop    ebx
  42075e:	(bad)
  420761:	add    BYTE PTR [ecx-0x45],ah
  420764:	call   0x801017ec
  420769:	in     al,dx
  42076a:	add    BYTE PTR [ebx-0x309bdbb8],0x4f
  420771:	mov    ebp,DWORD PTR [ecx-0x12]
  420774:	push   cs
  420775:	inc    eax
  420776:	aad    0x30
  420778:	scas   al,BYTE PTR es:[edi]
  420779:	push   esp
  42077a:	in     eax,dx
  42077b:	xor    al,0x30
  42077d:	inc    eax
  42077e:	aad    0xb7
  420780:	dec    ebx
  420781:	cld    
  420782:	es mov bh,0x10
  420785:	call   0xfc8b4221
  42078a:	push   esi
  42078b:	cmp    BYTE PTR [ecx+0xc],cl
  42078e:	pop    ecx
  42078f:	xor    BYTE PTR [edx],al
  420791:	add    ch,dl
  420793:	mov    bh,0xf7
  420795:	sub    eax,DWORD PTR ds:0x156903ef
  42079b:	or     BYTE PTR [edi+0x33],dh
  42079e:	fnstsw WORD PTR [edi]
  4207a0:	cmp    esi,DWORD PTR [esi]
  4207a2:	fwait
  4207a3:	push   esp
  4207a4:	stc    
  4207a5:	test   esp,ebp
  4207a7:	xor    BYTE PTR [eax],al
  4207a9:	add    BYTE PTR [esi-0x16],dl
  4207ac:	out    dx,eax
  4207ad:	(bad)  
  4207ae:	imul   edi,DWORD PTR [esi],0x457d
  4207b4:	lds    ebp,FWORD PTR [ecx]
  4207b6:	mov    eax,0x7d266903
  4207bb:	inc    ebp
  4207bc:	mov    cl,0xa9
  4207be:	add    edi,esp
  4207c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c1:	and    al,BYTE PTR [eax]
  4207c3:	add    BYTE PTR [esi-0x12],bl
  4207c6:	repz cmp BYTE PTR [edi+esi*1-0x5c3278fe],dl
  4207ce:	(bad)  
  4207cf:	sbb    esi,DWORD PTR [edx-0x2b9a80c0]
  4207d5:	and    al,BYTE PTR [eax]
  4207d7:	mov    DWORD PTR [ebx],ebx
  4207d9:	sub    edi,DWORD PTR [esi]
  4207db:	inc    ebp
  4207dc:	shl    DWORD PTR [ecx],1
  4207de:	xchg   BYTE PTR [ebx],dl
  4207e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207e1:	add    BYTE PTR fs:[esi+0x5c],dl
  4207e5:	outs   dx,DWORD PTR ds:[esi]
  4207e6:	sbb    al,0x1c
  4207e8:	adc    BYTE PTR [esi+0x24],0x11
  4207ec:	adc    eax,0xcd724923
  4207f1:	or     DWORD PTR [edi+edi*4-0x4a],esi
  4207f5:	std    
  4207f6:	sbb    eax,0x15d9c6d0
  4207fb:	iret   
  4207fc:	mov    dh,0xed
  4207fe:	pop    ebx
  4207ff:	mov    edi,0x1205cdf6
  420804:	cmp    eax,0x4149fcbf
  420809:	loopne 0x420869
  42080b:	mov    edi,0x35ee20f6
  420810:	pop    ebp
  420811:	add    edi,ecx
  420813:	mov    WORD PTR [edi],fs
  420815:	cmp    ebp,ebx
  420817:	jge    0x420819
  420819:	add    BYTE PTR [edx],dh
  42081b:	(bad)  
  42081c:	aam    0x49
  42081e:	leave  
  42081f:	lea    ebx,[edx+0x3]
  420822:	aad    0x9
  420824:	addr16 enter 0x1cb6,0xe7
  420829:	clc    
  42082a:	push   esi
  42082b:	fwait
  42082c:	out    0x3,eax
  42082e:	aad    0xa4
  420830:	mov    ah,0x1c
  420832:	aam    0xfe
  420834:	shl    BYTE PTR [ebx],cl
  420836:	xchg   ebp,eax
  420837:	or     DWORD PTR [eax+eax*8-0x4a],ebp
  42083b:	in     eax,dx
  42083c:	ss inc edx
  42083e:	nop
  42083f:	or     eax,0x220948e7
  420844:	jbe    0x420887
  420846:	enter  0x6b38,0xb8
  42084a:	mul    ch
  42084c:	pop    ss
  42084d:	jnp    0x420865
  42084f:	out    dx,al
  420850:	ret    0xd97c
  420853:	mov    ds:0x66b2b3e7,eax
  420858:	das    
  420859:	dec    edx
  42085a:	mov    eax,ds:0xed1faa82
  42085f:	test   BYTE PTR [ebx+esi*8+0xc0acd5b],ah
  420866:	pop    esp
  420867:	iret   
  420868:	rcl    BYTE PTR [esp+ebx*4],cl
  42086b:	cmp    bh,0xac
  42086e:	(bad)  
  420870:	ss (bad) 
  420872:	shr    cl,cl
  420874:	or     al,0x6d
  420876:	xor    al,0x38
  420878:	cld    
  420879:	jmp    0xc965d569
  42087e:	add    BYTE PTR [eax],al
  420880:	es xor bh,dl
  420883:	outs   dx,DWORD PTR ds:[esi]
  420884:	pushf  
  420885:	xor    eax,0x8c4c2983
  42088a:	xchg   edx,eax
  42088b:	jmp    0xc8ac1266
  420890:	(bad)  
  420891:	std    
  420892:	out    0xd4,eax
  420894:	out    dx,al
  420895:	ss cld 
  420897:	jb     0x420837
  420899:	icebp  
  42089a:	clc    
  42089b:	push   ebp
  42089c:	cs scas al,BYTE PTR es:[edi]
  42089e:	test   BYTE PTR ss:[edx],0x6
  4208a2:	std    
  4208a3:	push   ebp
  4208a4:	mov    ch,0xfd
  4208a6:	cld    
  4208a7:	cmp    eax,0xd154fdb5
  4208ac:	adc    DWORD PTR [edi+0x3045b6fc],edi
  4208b2:	sub    bl,ch
  4208b4:	popf   
  4208b5:	xor    eax,0xe9b51dfc
  4208ba:	mov    BYTE PTR ds:0x8150e1b5,ah
  4208c0:	lds    esp,FWORD PTR [edi*8+0x23cb4f8e]
  4208c7:	loope  0x4208a2
  4208c9:	dec    eax
  4208ca:	jae    0x4208e2
  4208cc:	push   ecx
  4208cd:	aaa    
  4208ce:	or     al,0xe9
  4208d0:	(bad)  
  4208d1:	mov    es,WORD PTR [ebx-0x3b]
  4208d4:	mov    edx,0x1df2d52f
  4208d9:	mov    BYTE PTR ss:[ecx-0x2f],ah
  4208dd:	xor    BYTE PTR [ebx+0x13],dh
  4208e0:	and    cl,bl
  4208e2:	and    ebp,ebp
  4208e4:	add    BYTE PTR [eax],al
  4208e6:	inc    esi
  4208e7:	fdivp  st(4),st
  4208e9:	add    BYTE PTR [eax+0x17],cl
  4208ec:	and    bh,al
  4208ee:	jnp    0x42096b
  4208f0:	cld    
  4208f1:	jmp    FWORD PTR [edx+eax*8+0x11]
  4208f5:	cmp    BYTE PTR [ecx-0x437b03b5],cl
  4208fb:	inc    esi
  4208fc:	push   ss
  4208fd:	mov    edi,DWORD PTR [ebx]
  4208ff:	xor    esi,DWORD PTR [edi]
  420901:	ret    
  420902:	cmp    BYTE PTR [esi],bh
  420904:	bound  edi,QWORD PTR [ecx]
  420906:	inc    esp
  420907:	inc    edi
  420908:	or     bh,bh
  42090a:	enter  0x3416,0xff
  42090e:	enter  0x3416,0x50
  420912:	aam    0x39
  420914:	jne    0x420915
  420916:	inc    ebx
  420917:	addr16 in al,0xc9
  42091a:	daa    
  42091b:	sar    bl,1
  42091d:	dec    DWORD PTR [eax+0x6ce817e9]
  420923:	xor    edi,ebx
  420925:	jmp    DWORD PTR [ebx]
  420927:	pop    edx
  420928:	and    BYTE PTR [eax],ah
  42092a:	and    al,0x87
  42092c:	pop    es
  42092d:	inc    DWORD PTR [ebx-0x31]
  420930:	jo     0x420956
  420932:	aam    0xd5
  420934:	stos   BYTE PTR es:[edi],al
  420935:	or     eax,DWORD PTR [ebx-0x31]
  420938:	xchg   DWORD PTR [eax+ebx*1+0x1b],eax
  42093c:	test   DWORD PTR [esi-0x2c],eax
  42093f:	mov    dl,0x40
  420941:	and    al,0xf8
  420943:	mov    ch,0x42
  420945:	sbb    al,0x37
  420947:	js     0x420961
  420949:	add    DWORD PTR [eax],0x0
  42094c:	push   esp
  42094d:	into   
  42094e:	jo     0x4209a0
  420950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420951:	je     0x42096f
  420953:	mov    eax,DWORD PTR [edx+ebx*2+0x34]
  420957:	add    ecx,0x32
  42095a:	cld    
  42095b:	je     0x42090b
  42095d:	push   edx
  42095e:	cld    
  42095f:	shrd   DWORD PTR [edx],ecx,0xb8
  420963:	add    ch,dl
  420965:	add    BYTE PTR [eax+eax*1],al
  420968:	jge    0x420960
  42096a:	inc    esi
  42096b:	std    
  42096c:	mov    bh,BYTE PTR [ecx+0x75bc0bbe]
  420972:	hlt    
  420973:	or     al,0x17
  420975:	jle    0x42096b
  420977:	xor    al,0x28
  42097a:	add    BYTE PTR [esi+eax*8-0x45],dh
  42097e:	mov    ebp,0x206ed617
  420983:	push   ebp
  420984:	add    eax,0x3d07cf20
  420989:	mov    eax,0x214afcf8
  42098e:	ret    0x4e1f
  420991:	ins    DWORD PTR es:[edi],dx
  420992:	lock adc BYTE PTR ds:0xed86feb4,0xef
  42099a:	mov    edi,0x21c123
  42099f:	add    ch,dl
  4209a1:	fsubr  st,st(7)
  4209a3:	iret   
  4209a4:	xchg   esi,eax
  4209a5:	and    BYTE PTR [ebp+0x12],al
  4209a8:	xor    DWORD PTR [edx],esi
  4209aa:	sar    bh,0x5f
  4209ad:	in     al,0x1f
  4209af:	adc    al,0x0
  4209b1:	add    BYTE PTR [edx-0xf7756ea],ah
  4209b7:	sbb    al,0x42
  4209b9:	adc    edx,ebp
  4209bb:	mov    al,ds:0x20c623c4
  4209c0:	int3   
  4209c1:	sbb    dl,ah
  4209c3:	sbb    esp,DWORD PTR [eax]
  4209c5:	xor    ch,ch
  4209c7:	aas    
  4209c8:	stc    
  4209c9:	cld    
  4209ca:	shl    BYTE PTR [eax+0x3e41fc42],cl
  4209d0:	mov    ds:0x3e0a52b,eax
  4209d5:	imul   eax,ebx,0xdb433a4b
  4209db:	add    BYTE PTR cs:[ecx-0xff4f5cf],al
  4209e2:	mov    ds:0xd51542ad,al
  4209e7:	or     DWORD PTR [esi-0x10],edx
  4209ea:	sbb    bl,BYTE PTR [ebx]
  4209ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ed:	add    edi,DWORD PTR [esi+edi*2-0x65]
  4209f1:	jp     0x420a61
  4209f3:	mov    DWORD PTR [edx-0xd],ecx
  4209f6:	and    eax,0x5dadaaa0
  4209fb:	push   edx
  4209fc:	ds arpl bp,bx
  4209ff:	xor    al,0x25
  420a01:	jp     0x420a1a
  420a03:	add    ah,BYTE PTR [esi]
  420a05:	std    
  420a06:	pop    ebx
  420a07:	xor    eax,0xcc5a03e6
  420a0c:	loop   0x42098e
  420a0e:	dec    ecx
  420a0f:	mov    esi,0xb154db8
  420a14:	je     0x4209fc
  420a16:	add    BYTE PTR [eax],al
  420a18:	push   ebp
  420a19:	xor    edx,ebp
  420a1b:	int    0xcc
  420a1d:	mov    ch,BYTE PTR [ebp-0x1946d525]
  420a23:	into   
  420a24:	les    ebx,FWORD PTR [edx-0x2f]
  420a27:	lods   eax,DWORD PTR ds:[esi]
  420a28:	dec    edi
  420a29:	leave  
  420a2a:	aad    0xda
  420a2c:	adc    al,BYTE PTR [edx-0xa0d07dc]
  420a32:	rol    DWORD PTR [esi+0x1],1
  420a35:	and    esi,ebx
  420a37:	jbe    0x4209ce
  420a39:	xor    al,0x1d
  420a3b:	jnp    0x4209d5
  420a3d:	add    eax,0x33ff9bbf
  420a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a43:	pop    ecx
  420a44:	int3   
  420a45:	xchg   BYTE PTR [eax+edi*8],ch
  420a48:	mov    ebx,ecx
  420a4a:	jle    0x420a99
  420a4c:	xchg   edi,eax
  420a4d:	xor    ecx,DWORD PTR [ebp+0x6c02107b]
  420a53:	inc    esp
  420a54:	inc    edi
  420a55:	or     eax,0x3eb343b9
  420a5a:	(bad)  
  420a5b:	call   0x27cd1436
  420a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a61:	les    eax,FWORD PTR [edx-0x5d78579a]
  420a67:	jmp    0xaaa1442
  420a6c:	(bad)  [ecx]
  420a6e:	or     BYTE PTR [esi-0x66],0xc
  420a72:	call   0xfc78cb00
  420a77:	xchg   esi,eax
  420a78:	dec    esi
  420a7a:	pcmpgtb mm0,QWORD PTR [eax]
  420a7d:	add    BYTE PTR [edx],dh
  420a7f:	xor    BYTE PTR [edi+0x5c],cl
  420a82:	sub    ah,BYTE PTR [edi+ecx*2]
  420a85:	xchg   ebx,eax
  420a86:	retf   
  420a87:	ss jb  0x420a7b
  420a8a:	cdq    
  420a8b:	(bad)  
  420a8c:	sti    
  420a8d:	loopne 0x420a65
  420a8f:	or     DWORD PTR [eax],eax
  420a91:	push   cs
  420a92:	cmp    dh,BYTE PTR [edx+edx*1-0x8752957]
  420a99:	call   0xac7922a9
  420a9e:	call   0x4f24:0x12690cbe
  420aa5:	pop    esp
  420aa6:	or     al,0x89
  420aa8:	jp     0x420a87
  420aaa:	sbb    dh,BYTE PTR [edi+0x1c5061ab]
  420ab0:	mov    esp,DWORD PTR [edi]
  420ab2:	mov    cl,0xd9
  420ab4:	addr16 call 0xbec21490
  420aba:	or     ecx,DWORD PTR [eax+ebp*8]
  420abd:	adc    DWORD PTR [eax+0x2860fc36],esi
  420ac3:	adc    BYTE PTR [ecx+0x477ee92c],cl
  420ac9:	sahf   
  420aca:	push   edi
  420acb:	cmp    edi,esp
  420acd:	xchg   esi,eax
  420ace:	leave  
  420acf:	xor    esi,DWORD PTR [ebp-0x24]
  420ad2:	dec    ebp
  420ad3:	ror    BYTE PTR [ebx],0x0
  420ad6:	xor    eax,esi
  420ad8:	jo     0x420ae0
  420ada:	inc    ebp
  420adb:	jge    0x420afd
  420add:	mov    DWORD PTR [edx],eax
  420adf:	push   ss
  420ae0:	push   0x1c
  420ae2:	add    BYTE PTR [eax],al
  420ae4:	cmp    eax,DWORD PTR [esp+eax*1-0x18]
  420ae8:	(bad)  
  420aea:	cli    
  420aeb:	jmp    DWORD PTR [edi]
  420aed:	fild   WORD PTR [ecx+0x6265b0db]
  420af3:	and    edi,0xd
  420af6:	je     0x420b48
  420af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420af9:	sub    al,0xfb
  420afb:	jne    0x420a81
  420afd:	iret   
  420afe:	mov    bh,0xc5
  420b00:	stos   BYTE PTR es:[edi],al
  420b01:	int    0x81
  420b03:	shl    BYTE PTR [eax],0xb
  420b06:	xor    WORD PTR [edi+eax*1+0x74],0x36
  420b0c:	in     eax,0x6c
  420b0e:	sub    BYTE PTR [ecx+0x3ae71782],cl
  420b14:	fild   DWORD PTR [ebx+0x4]
  420b17:	call   0x3cff98
  420b1c:	lds    esi,FWORD PTR [esp+ecx*1-0x3a]
  420b20:	sbb    BYTE PTR [edi],0xfc
  420b23:	jmp    0x16f3:0xf07986f9
  420b2a:	sub    DWORD PTR ds:0x83fbc6fb,0xeffc9a9
  420b34:	jno    0x420b60
  420b36:	sti    
  420b37:	call   FWORD PTR [ebx]
  420b39:	rol    BYTE PTR [edx+0x18],0xec
  420b3d:	in     eax,0x6d
  420b3f:	jmp    FWORD PTR [ebx]
  420b41:	(bad)  
  420b42:	dec    esp
  420b43:	call   0x3d0fb0
  420b48:	add    BYTE PTR [eax],al
  420b4a:	lahf   
  420b4b:	in     eax,0xa2
  420b4d:	or     DWORD PTR [ebx],edi
  420b4f:	(bad)  
  420b50:	in     al,0xae
  420b52:	aad    0x6a
  420b54:	inc    ecx
  420b55:	cld    
  420b56:	pop    esp
  420b57:	jmp    0xc14a:0xe7d4afc3
  420b5e:	leave  
  420b5f:	and    bh,dl
  420b61:	mov    cl,al
  420b63:	lahf   
  420b64:	daa    
  420b65:	not    DWORD PTR [esi-0x4c]
  420b68:	mov    edi,0xd5351888
  420b6d:	push   ebp
  420b6e:	add    dl,ah
  420b70:	xrelease mov BYTE PTR [eax],bl
  420b73:	xor    DWORD PTR [ecx+0x2f],eax
  420b76:	pop    esi
  420b77:	ins    DWORD PTR es:[edi],dx
  420b78:	or     al,0xfd
  420b7a:	or     BYTE PTR [ecx],bh
  420b7c:	test   eax,ecx
  420b7e:	jp     0x420b37
  420b80:	cmp    cl,BYTE PTR [edx-0x792ffb17]
  420b86:	or     DWORD PTR ds:0xeaf0e7e4,ecx
  420b8c:	inc    eax
  420b8d:	cld    
  420b8e:	push   ecx
  420b8f:	loopne 0x420ba1
  420b91:	test   bl,dh
  420b93:	push   ds
  420b94:	add    BYTE PTR [eax],al
  420b96:	pop    esi
  420b97:	ins    DWORD PTR es:[edi],dx
  420b98:	or     al,ch
  420b9a:	push   edi
  420b9b:	xor    eax,0x6c4dfc41
  420ba0:	in     al,0xc
  420ba2:	pop    esi
  420ba3:	loop   0x420b78
  420ba5:	out    0xc5,eax
  420ba7:	into   
  420ba8:	inc    eax
  420ba9:	cld    
  420baa:	dec    esp
  420bab:	in     al,0xe7
  420bad:	pop    ss
  420bae:	add    BYTE PTR [eax],al
  420bb0:	ins    DWORD PTR es:[edi],dx
  420bb1:	and    DWORD PTR [edx+edx*1-0xf2783],esi
  420bb8:	or     al,BYTE PTR [ebx+0x17]
  420bbb:	dec    eax
  420bbc:	in     al,0xe0
  420bbe:	add    eax,DWORD PTR [ecx+0x180c71]
  420bc4:	cld    
  420bc5:	dec    esp
  420bc6:	add    eax,DWORD PTR [eax]
  420bc8:	aad    0x88
  420bca:	add    cl,BYTE PTR ds:0x4690959
  420bd0:	aad    0x9
  420bd2:	push   0xffffffa7
  420bd4:	neg    BYTE PTR [ecx]
  420bd6:	out    0xf6,eax
  420bd8:	ror    al,0xa4
  420bdb:	(bad)  
  420bdc:	idiv   bh
  420bde:	out    0xfc,eax
  420be0:	inc    esi
  420be1:	out    0xfa,al
  420be3:	mov    eax,0xe822851c
  420be8:	and    cl,BYTE PTR [ebp-0x4a2af811]
  420bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bef:	nop
  420bf0:	push   ss
  420bf1:	out    0xa6,al
  420bf3:	nop
  420bf4:	push   cs
  420bf5:	out    0xa,al
  420bf7:	sub    al,0x92
  420bf9:	push   0x4d
  420bfb:	inc    edx
  420bfc:	push   esi
  420bfd:	dec    edx
  420bfe:	mov    edx,0x2c64ff9
  420c03:	hlt    
  420c04:	and    ah,BYTE PTR [edx]
  420c06:	adc    al,0x62
  420c08:	push   0x31
  420c0a:	sub    eax,0xee1b6b7
  420c0f:	sub    dl,dl
  420c11:	xor    BYTE PTR ds:0xc6000042,bl
  420c17:	in     eax,0xd6
  420c19:	inc    edx
  420c1a:	out    0x41,eax
  420c1c:	clc    
  420c1d:	ret    
  420c1e:	inc    edx
  420c1f:	test   BYTE PTR [edx-0x5d7d1119],ch
  420c25:	out    0xe2,eax
  420c27:	xchg   BYTE PTR [esi],ah
  420c29:	mov    bh,0xdf
  420c2b:	xor    BYTE PTR [edx-0x19],0xc6
  420c2f:	and    al,0x4a
  420c31:	test   BYTE PTR [esi-0x79fc121b],bl
  420c37:	or     BYTE PTR [ebp-0x19004938],ch
  420c3d:	sub    al,0xa8
  420c3f:	mov    ds:0xe57e8ee4,eax
  420c44:	push   cs
  420c45:	fdiv   st(2),st
  420c47:	jmp    0xf489:0x9d7eaff
  420c4e:	es sbb al,0x40
  420c51:	jmp    0xea3e3d84
  420c56:	fimul  DWORD PTR ss:[eax+0x722da1ae]
  420c5d:	loope  0x420c74
  420c5f:	push   edi
  420c60:	imul   ecx,eax,0xc923b44b
  420c66:	mov    gs,WORD PTR [eax]
  420c68:	(bad)  
  420c69:	jmp    0x9d6:0xe9b909d7
  420c70:	cmp    BYTE PTR [edx+0x26882d68],0xa9
  420c77:	sub    eax,0xe172
  420c7c:	adc    eax,0x520a6957
  420c81:	mov    ah,0x23
  420c83:	adc    DWORD PTR [ecx-0x28171dd8],ebx
  420c89:	or     DWORD PTR [ecx-0x3d],edx
  420c8c:	adc    eax,0x1599c482
  420c91:	mov    esp,0x89ff2607
  420c96:	enter  0x541e,0x1c
  420c9a:	shr    BYTE PTR [edx-0xb03292a],1
  420ca0:	sahf   
  420ca1:	sbb    al,BYTE PTR [eax-0x17]
  420ca4:	push   esi
  420ca5:	mov    ah,0x23
  420ca7:	out    dx,eax
  420ca8:	(bad)  
  420ca9:	inc    BYTE PTR [ebx+0x9d168]
  420caf:	bound  ebp,QWORD PTR [edx+0x8]
  420cb2:	call   0xfc6ff2d7
  420cb7:	and    bl,BYTE PTR [eax-0x46c0f645]
  420cbd:	fucomi st,st(6)
  420cbf:	into   
  420cc0:	xchg   ebp,eax
  420cc1:	icebp  
  420cc2:	rol    BYTE PTR [eax],0xb8
  420cc5:	pop    esi
  420cc6:	xchg   eax,esi
  420cc8:	pop    ebp
  420cc9:	and    ah,cl
  420ccb:	inc    ebx
  420ccc:	cld    
  420ccd:	pop    esp
  420cce:	repnz sub BYTE PTR [ebx],dh
  420cd1:	js     0x420cff
  420cd3:	adc    BYTE PTR [edi+0x48],ah
  420cd6:	sub    al,0x14
  420cd8:	or     ebx,DWORD PTR fs:[ecx+0x28ac63ff]
  420cdf:	rol    BYTE PTR [eax],1
  420ce1:	add    bh,ch
  420ce3:	add    eax,0x13aa74fb
  420ce8:	call   0xfc0cb102
  420ced:	mov    eax,ds:0x3fdb90
  420cf2:	das    
  420cf3:	add    bl,BYTE PTR [bx+si]
  420cf6:	lods   al,BYTE PTR ds:[esi]
  420cf7:	lods   al,BYTE PTR ds:[esi]
  420cf8:	sub    al,dl
  420cfa:	aas    
  420cfb:	or     edi,DWORD PTR [edi+0x64]
  420cfe:	jp     0x420d2b
  420d00:	cld    
  420d01:	mov    al,ds:0x3fdb80
  420d06:	add    eax,0x5d1c024f
  420d0b:	pop    ds
  420d0c:	int3   
  420d0d:	inc    ebx
  420d0e:	jl     0x420d8e
  420d10:	dec    eax
  420d11:	and    al,0x24
  420d13:	test   BYTE PTR [eax+0x6],cl
  420d16:	pop    esp
  420d17:	lods   al,BYTE PTR ds:[esi]
  420d18:	sub    al,dl
  420d1a:	jg     0x420d27
  420d1c:	xchg   DWORD PTR [eax+ebx*1+0x6f],ecx
  420d20:	test   DWORD PTR [edx+edi*1+0x17],ecx
  420d24:	popf   
  420d25:	sub    al,0xdc
  420d27:	inc    ebp
  420d28:	cld    
  420d29:	mov    al,BYTE PTR [eax+0x70890c27]
  420d2f:	add    DWORD PTR [ebx+ebp*8],esp
  420d32:	or     al,0xca
  420d34:	jo     0x420d5a
  420d36:	mov    ah,0x82
  420d38:	and    BYTE PTR [esp+edi*2],0x5
  420d3c:	add    BYTE PTR [eax],al
  420d3e:	aad    0x48
  420d40:	lahf   
  420d41:	fwait
  420d42:	add    al,BYTE PTR [eax-0x80]
  420d45:	jnp    0x420d47
  420d47:	add    BYTE PTR [ecx-0x238bffb0],dh
  420d4d:	outs   dx,DWORD PTR ds:[esi]
  420d4e:	mov    bh,0x23
  420d50:	lds    ecx,FWORD PTR [eax-0x41]
  420d53:	ret    
  420d54:	jecxz  0x420db5
  420d56:	aam    0xfc
  420d58:	rol    BYTE PTR [ecx+edx*1+0x40],0xd5
  420d5d:	fwait
  420d5e:	push   es
  420d5f:	mov    ebp,0xffc070e1
  420d64:	enter  0xe7e4,0x17
  420d68:	shr    DWORD PTR [edx*8-0x5bbae678],1
  420d6f:	mov    BYTE PTR [eax],bl
  420d71:	push   ecx
  420d72:	mov    edi,esi
  420d74:	dec    edi
  420d75:	in     al,0xe7
  420d77:	addr16 dec esi
  420d79:	jne    0x420d8f
  420d7b:	push   ebp
  420d7c:	pop    esp
  420d7d:	and    DWORD PTR ds:0xc032ad12,edi
  420d83:	dec    DWORD PTR [edi+0x55]
  420d86:	or     al,ch
  420d88:	out    dx,eax
  420d89:	lock cmp al,0xfc
  420d8c:	scas   al,BYTE PTR es:[edi]
  420d8d:	jecxz  0x420d45
  420d8f:	or     DWORD PTR [ebx],eax
  420d91:	leave  
  420d92:	test   edi,ebp
  420d94:	(bad)  
  420d95:	(bad)  
  420d97:	shl    cl,0x41
  420d9a:	mov    edi,ebp
  420d9c:	je     0x420dda
  420d9e:	push   eax
  420d9f:	inc    eax
  420da0:	aad    0x8b
  420da2:	xor    ah,BYTE PTR [edi]
  420da4:	inc    edx
  420da5:	xchg   esp,eax
  420da6:	add    cl,BYTE PTR [ebp*1+0xfd0568]
  420dad:	add    BYTE PTR [edx],dh
  420daf:	mov    ebx,0xabb123c7
  420db4:	push   cs
  420db5:	sub    al,0x5
  420db7:	arpl   WORD PTR [eax],ax
  420db9:	xchg   DWORD PTR [ecx-0x57f00af7],edx
  420dbf:	cs repz pop edi
  420dc2:	in     al,0xc9
  420dc4:	out    0x90,al
  420dc6:	xchg   esi,eax
  420dc7:	in     eax,0x26
  420dc9:	sub    al,0x47
  420dcb:	xchg   edx,eax
  420dcc:	lds    edi,FWORD PTR [esi]
  420dce:	pop    ebp
  420dcf:	lds    eax,FWORD PTR [edx]
  420dd1:	sbb    BYTE PTR [eax-0x874ee31],cl
  420dd7:	retf   
  420dd8:	test   al,0x13
  420dda:	aad    0xd4
  420ddc:	jno    0x420e0d
  420dde:	mov    edx,0xd503cdd0
  420de3:	test   DWORD PTR [esi-0x262bfd49],esp
  420de9:	xor    eax,0xb7d6b703
  420dee:	shl    edx,1
  420df0:	repz mov eax,db2
  420df4:	inc    DWORD PTR [ebx]
  420df6:	aad    0x9
  420df8:	inc    edi
  420df9:	ds daa 
  420dfb:	sbb    ah,BYTE PTR [esi-0x48]
  420dfe:	fisubr WORD PTR [ebx+edx*8]
  420e01:	or     ecx,DWORD PTR [eax+0x15191b17]
  420e07:	or     ah,BYTE PTR [eax-0x48]
  420e0a:	retf   0xbb82
  420e0d:	divps  xmm0,xmm7
  420e10:	(bad)  
  420e12:	add    BYTE PTR [eax],al
  420e14:	pop    edi
  420e15:	(bad)  
  420e16:	fcmovbe st,st(3)
  420e18:	or     BYTE PTR ds:0x42a40bb3,ch
  420e1e:	push   cs
  420e1f:	ror    DWORD PTR [edi+0x2d],cl
  420e22:	sbb    eax,0x153255dd
  420e27:	mov    eax,0xe80dced9
  420e2c:	cli    
  420e2d:	push   ss
  420e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e2f:	add    ecx,DWORD PTR [esi-0x79fc2db9]
  420e35:	cmp    bh,0x4
  420e38:	out    dx,al
  420e39:	or     DWORD PTR ds:0xbf85d6e9,ebp
  420e3f:	pop    ebp
  420e40:	sbb    edi,edx
  420e42:	xor    bh,dl
  420e44:	push   cs
  420e45:	mov    eax,0xf4e05d0f
  420e4a:	jb     0x420e29
  420e4c:	inc    edx
  420e4d:	adc    ebp,DWORD PTR [eax-0x17]
  420e50:	(bad)  
  420e51:	or     DWORD PTR [eax-0x302dd42],esp
  420e57:	cmp    al,0xc5
  420e59:	cs jb  0x420e3d
  420e5c:	cdq    
  420e5d:	pop    ss
  420e5e:	jo     0x420e5c
  420e60:	xchg   esi,eax
  420e61:	sub    al,0x87
  420e63:	adc    al,0xe1
  420e65:	test   BYTE PTR [edx-0x1b],dh
  420e68:	push   ebx
  420e69:	(bad)  
  420e6a:	pop    ss
  420e6b:	cmp    DWORD PTR [edx-0x39],ecx
  420e6e:	adc    ebx,DWORD PTR [ecx]
  420e70:	mov    ebp,DWORD PTR ds:0x43a5f172
  420e76:	out    0x70,eax
  420e78:	add    BYTE PTR [eax],al
  420e7a:	adc    eax,0x540ffc2e
  420e7f:	xor    al,0xfc
  420e81:	(bad)  
  420e83:	sar    ah,1
  420e85:	add    al,0x45
  420e87:	pop    ss
  420e88:	inc    eax
  420e89:	jmp    0xe9555931
  420e8e:	mov    ds:0xbd6aeb81,eax
  420e93:	xor    al,0x80
  420e95:	dec    ebp
  420e96:	gs (bad) 
  420e98:	out    0x8c,eax
  420e9a:	jae    0x420ec8
  420e9c:	cld    
  420e9d:	adc    DWORD PTR gs:[ecx-0x5cf7258e],edi
  420ea4:	daa    
  420ea5:	ins    BYTE PTR es:[edi],dx
  420ea6:	sbb    eax,0x8bd00be8
  420eab:	add    BYTE PTR [ebx-0xc],dh
  420eae:	and    BYTE PTR [esp+edi*8+0x16101100],bh
  420eb5:	inc    eax
  420eb6:	cmp    al,0x89
  420eb8:	ror    BYTE PTR [ebx+esi*8],0x41
  420ebc:	and    BYTE PTR [eax],cl
  420ebe:	adc    al,0x8
  420ec0:	add    BYTE PTR [eax],al
  420ec2:	daa    
  420ec3:	cmp    ebx,edi
  420ec5:	jne    0x420ebf
  420ec7:	push   edi
  420ec8:	in     al,0x7d
  420eca:	repnz in al,dx
  420ecc:	sti    
  420ecd:	cmp    DWORD PTR [eax-0x1f8befdf],esp
  420ed3:	xor    BYTE PTR [eax+0x24],dh
  420ed6:	or     al,0x74
  420ed8:	sbb    ch,BYTE PTR [eax-0x14]
  420edb:	pop    es
  420edc:	add    BYTE PTR [eax+0x742b0000],ah
  420ee2:	and    BYTE PTR [eax],bl
  420ee4:	jnp    0x420f59
  420ee6:	and    BYTE PTR [eax],bl
  420ee8:	imul   esi,DWORD PTR [esp+eax*1-0x1],0xffffffc1
  420eed:	xor    edx,DWORD PTR [ecx]
  420eef:	inc    eax
  420ef0:	lods   al,BYTE PTR ds:[esi]
  420ef1:	xor    BYTE PTR [eax+0x24],0x8c
  420ef5:	xor    BYTE PTR [eax+0x24],0x80
  420ef9:	jl     0x420f3b
  420efb:	and    al,0x8c
  420efd:	push   edi
  420efe:	mov    DWORD PTR [eax+edx*4+0x27],eax
  420f02:	dec    esp
  420f03:	push   esi
  420f04:	sti    
  420f05:	jae    0x420f0b
  420f07:	xor    eax,ebp
  420f09:	fisub  WORD PTR [edi-0x4]
  420f0c:	sub    ebp,esi
  420f0e:	jg     0x420f08
  420f10:	or     esi,DWORD PTR [eax+ebx*1-0x73]
  420f14:	inc    eax
  420f15:	and    eax,DWORD PTR [ebx+ebp*8]
  420f18:	jg     0x420e9c
  420f1a:	inc    ecx
  420f1b:	or     al,0xab
  420f1d:	jae    0x420f33
  420f1f:	jmp    DWORD PTR [ecx]
  420f21:	adc    edi,ebx
  420f23:	jne    0x420f71
  420f25:	push   edi
  420f26:	sti    
  420f27:	jne    0x420f6d
  420f29:	out    dx,al
  420f2a:	adc    DWORD PTR [eax-0x2b],edx
  420f2d:	sub    eax,0xa798ffc0
  420f32:	and    eax,0x4d175a
  420f37:	push   ebx
  420f38:	pop    esi
  420f39:	std    
  420f3a:	jg     0x420f1f
  420f3c:	sbb    eax,0x832b2ca0
  420f41:	or     BYTE PTR [ecx],al
  420f43:	add    BYTE PTR cs:[eax],al
  420f46:	aad    0x20
  420f48:	jl     0x420f09
  420f4a:	adc    ebp,0x86ff5f4
  420f50:	xchg   DWORD PTR [ebx-0x4f],eax
  420f53:	dec    esp
  420f54:	sti    
  420f55:	jb     0x420f38
  420f57:	in     eax,dx
  420f58:	push   cs
  420f59:	push   esi
  420f5a:	test   DWORD PTR [ebx+0xe],ebp
  420f5d:	sbb    bl,cl
  420f5f:	loopne 0x420f64
  420f61:	adc    DWORD PTR [ecx],0xf943414d
  420f67:	cmp    al,ch
  420f69:	dec    edx
  420f6b:	and    BYTE PTR ds:0x80dc230,ch
  420f71:	push   eax
  420f72:	lods   eax,DWORD PTR ds:[esi]
  420f73:	js     0x420f73
  420f75:	cld    
  420f76:	mov    dl,0x49
  420f78:	lods   al,BYTE PTR ds:[esi]
  420f79:	and    eax,ecx
  420f7b:	xor    al,0xdc
  420f7d:	sub    DWORD PTR ss:0x8bb7410,edi
  420f84:	add    al,0x0
  420f86:	aad    0x80
  420f88:	cmp    BYTE PTR [ebx-0x4f],dh
  420f8b:	or     BYTE PTR [ecx],bh
  420f8d:	jae    0x420f48
  420f8f:	cmp    BYTE PTR [ecx],bh
  420f91:	jb     0x420f60
  420f93:	mov    ebx,0x60c8700e
  420f98:	add    BYTE PTR [edi-0x78ebfb1f],al
  420f9e:	jmp    0x11cd1f9f
  420fa3:	add    eax,0x9604fe4
  420fa8:	stos   DWORD PTR es:[edi],eax
  420fa9:	fild   WORD PTR [eax]
  420fab:	add    dl,ch
  420fad:	fnstenv [edx+edi*1+0x4cda01c7]
  420fb4:	xor    al,BYTE PTR [ebx+0x11]
  420fb7:	cmp    esi,DWORD PTR [ecx]
  420fb9:	xchg   dh,bh
  420fbb:	cmp    ah,BYTE PTR [edi-0x93f93f3]
  420fc1:	add    DWORD PTR [edx],eax
  420fc3:	pop    es
  420fc4:	dec    esp
  420fc5:	(bad)  
  420fc6:	fidivr DWORD PTR [edx]
  420fc8:	xchg   DWORD PTR [ecx],edx
  420fca:	out    0xb0,al
  420fcc:	out    0x2a,al
  420fce:	push   ebx
  420fcf:	adc    al,0xa5
  420fd1:	sub    bl,BYTE PTR [ebx+0xc]
  420fd4:	clc    
  420fd5:	adc    esi,DWORD PTR [ebx]
  420fd7:	adc    DWORD PTR [ebp-0x870daf7],edx
  420fdd:	retf   
  420fde:	test   al,0xf
  420fe0:	aad    0xd6
  420fe2:	sbb    al,0x8f
  420fe4:	in     ax,0xda
  420fe7:	rcl    ecx,1
  420fe9:	dec    DWORD PTR [edx]
  420feb:	adc    DWORD PTR ds:0xba5b720a,edx
  420ff1:	rol    bl,0x3
  420ff4:	aad    0x8d
  420ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ff7:	scas   eax,DWORD PTR es:[edi]
  420ff8:	test   al,0x45
  420ffb:	jne    0xa214f6ce
  421001:	dec    DWORD PTR [esi+0x7f0a1515]
  421007:	aaa    
  421008:	jg     0x421033
  42100a:	xchg   BYTE PTR gs:[edx+0xd229],al
  421011:	add    BYTE PTR [ebp+0x62],ch
  421014:	inc    esp
  421015:	cmp    bh,BYTE PTR [ecx-0x3f]
  421018:	dec    ebp
  421019:	adc    BYTE PTR [ecx+0x803a6fc],dl
  42101f:	enter  0x4671,0xfd
  421023:	dec    ebx
  421024:	(bad)  
  421025:	in     al,dx
  421026:	(bad)  
  421027:	mov    esp,0x5fe3d88
  42102c:	sub    ebp,ecx
  42102e:	(bad)  
  42102f:	lea    edi,[edi-0x4025ce6b]
  421035:	rcl    BYTE PTR ds:0x31cb7415,1
  42103b:	int3   
  42103c:	movq   mm5,mm1
  42103f:	loopne 0x421083
  421041:	aad    0x72
  421043:	add    DWORD PTR [eax-0x67],edx
  421046:	fistp  WORD PTR [ebx+0x11155c13]
  42104c:	std    
  42104d:	pop    esp
  42104e:	loope  0x421076
  421050:	jb     0x42103f
  421052:	scas   al,BYTE PTR es:[edi]
  421053:	shl    ah,cl
  421055:	(bad)  
  421056:	mov    esp,0x42cef789
  42105b:	push   cs
  42105c:	pop    ebx
  42105d:	(bad)  
  42105e:	or     ah,BYTE PTR [ebp-0x3b26d6ee]
  421064:	rcr    ecx,0xd6
  421067:	mov    esp,0x30a7bd88
  42106c:	fst    st(5)
  42106e:	(bad)  
  42106f:	or     DWORD PTR [ecx-0x407232ec],ecx
  421075:	sbb    eax,0x8bae0000
  42107a:	cmc    
  42107b:	adc    eax,0xdd559192
  421080:	sub    edi,DWORD PTR [ebx]
  421082:	jae    0x421063
  421084:	pop    ebx
  421085:	into   
  421086:	pop    ss
  421087:	(bad)  
  421088:	leave  
  421089:	mov    esi,es
  42108b:	cmc    
  42108c:	jecxz  0x4210b4
  42108e:	jb     0x42108d
  421090:	cmp    BYTE PTR [edi],ah
  421092:	dec    esp
  421093:	mov    eax,0xe14293a8
  421098:	scas   al,BYTE PTR es:[edi]
  421099:	push   cs
  42109a:	cmc    
  42109b:	dec    esi
  42109c:	lods   al,BYTE PTR ds:[esi]
  42109d:	mov    edi,esi
  42109f:	add    BYTE PTR [ebx],dl
  4210a1:	jns    0x4210af
  4210a3:	jmp    FWORD PTR [ecx]
  4210a5:	sbb    bl,bh
  4210a7:	jne    0x421125
  4210a9:	cmp    bh,bl
  4210ab:	jne    0x4210e1
  4210ad:	loope  0x4210c0
  4210af:	inc    esp
  4210b0:	dec    ecx
  4210b1:	dec    esp
  4210b2:	cld    
  4210b3:	pop    ebp
  4210b4:	or     esi,0x9579000c
  4210ba:	call   0xfc73bea7
  4210bf:	(bad)  
  4210c0:	mov    eax,0x231970cd
  4210c5:	ja     0x4210d7
  4210c7:	lea    ebp,[ecx+0x14]
  4210ca:	push   0x2
  4210cc:	add    esi,DWORD PTR [edi+0x8]
  4210cf:	push   0xfffffffc
  4210d1:	jne    0x4210cf
  4210d3:	out    0x30,eax
  4210d5:	(bad)  
  4210d7:	jmp    FWORD PTR [edi-0x1c]
  4210da:	sti    
  4210db:	jne    0x4210dd
  4210dd:	add    bl,bh
  4210df:	ds sti 
  4210e1:	and    eax,0x4018a4
  4210e6:	ror    edi,0xc
  4210e9:	add    BYTE PTR [ecx+0x1de8e896],bh
  4210ef:	xor    bh,ah
  4210f1:	(bad)  
  4210f2:	cmp    bl,cl
  4210f4:	jo     0x421138
  4210f6:	or     bh,BYTE PTR [ecx]
  4210f8:	mov    ebx,0xfc4e7c14
  4210fd:	push   esi
  4210fe:	arpl   WORD PTR [eax],bx
  421100:	fcom   DWORD PTR [edx]
  421102:	cld    
  421103:	or     eax,0xf3a47587
  421108:	(bad)  
  421109:	in     al,dx
  42110a:	and    esp,edx
  42110c:	jg     0x421106
  42110e:	add    esi,DWORD PTR [edi+0x1a]
  421111:	imul   edi,DWORD PTR [edx+esi*1-0x422ffb01],0x3f
  421119:	add    ch,dl
  42111b:	mov    bl,0xb8
  42111d:	adc    edx,esp
  42111f:	cmp    eax,0x411d8907
  421124:	xor    DWORD PTR [esi-0x27],0x30
  421128:	lods   al,BYTE PTR ds:[esi]
  421129:	add    eax,0x86dc714e
  42112e:	cwde   
  42112f:	sub    bh,cl
  421131:	cld    
  421132:	loopne 0x421100
  421134:	adc    al,BYTE PTR [eax-0x2b]
  421137:	addr16 (bad) 
  421139:	pop    edx
  42113a:	cmp    dl,BYTE PTR [esi-0x80]
  42113d:	adc    dl,BYTE PTR [ebp+0xc2830]
  421143:	add    cl,bh
  421145:	xor    BYTE PTR [eax],al
  421147:	test   BYTE PTR ds:0x8989099d,dl
  42114d:	push   esp
  42114e:	or     al,ch
  421150:	sub    DWORD PTR [edi],esp
  421152:	xor    al,0xfc
  421154:	or     dl,BYTE PTR [esi]
  421156:	clc    
  421157:	adc    dl,BYTE PTR [ebp-0x510bd7d0]
  42115d:	xor    BYTE PTR [eax],al
  42115f:	test   BYTE PTR ds:0x99890abd,dl
  421165:	adc    al,0xc
  421167:	call   0xfc76688d
  42116c:	ficom  DWORD PTR ds:0x311512c8
  421172:	iret   
  421173:	mov    BYTE PTR [ecx-0x2bf4494d],bh
  421179:	std    
  42117a:	or     al,0x81
  42117c:	cmp    BYTE PTR ds:0x88c472fc,ah
  421182:	push   ebx
  421183:	sub    ch,dl
  421185:	xor    BYTE PTR [edi+edi*4+0x29],bh
  421189:	sbb    DWORD PTR [ecx-0x72773ab6],ecx
  42118f:	in     eax,dx
  421190:	xchg   edx,eax
  421191:	mov    bh,0xd6
  421193:	cld    
  421194:	mov    al,0x9
  421196:	fist   WORD PTR [eax]
  421198:	adc    eax,0x7ba9b40a
  42119d:	scas   al,BYTE PTR es:[edi]
  42119e:	out    0xaf,al
  4211a0:	test   al,0x0
  4211a2:	aas    
  4211a3:	mov    ch,0xbc
  4211a5:	or     edi,esp
  4211a7:	mov    al,BYTE PTR [eax]
  4211a9:	add    BYTE PTR [edx-0x74],bh
  4211ac:	dec    ebx
  4211ad:	mov    cl,0xd5
  4211af:	leave  
  4211b0:	inc    ecx
  4211b1:	sar    DWORD PTR [edx],cl
  4211b3:	imul   eax,DWORD PTR [ecx],0x4
  4211b6:	aad    0x8d
  4211b8:	es mov al,0x94
  4211bb:	mov    edx,0x18acceb4
  4211c0:	adc    eax,0xa6f8e111
  4211c5:	add    eax,DWORD PTR [ebp-0x2c4024da]
  4211cb:	leave  
  4211cc:	out    0x8a,al
  4211ce:	out    0x35,eax
  4211d0:	fadd   st,st(3)
  4211d2:	adc    ah,BYTE PTR [ebx+0x5e]
  4211d5:	adc    edx,ebp
  4211d7:	or     DWORD PTR [edx],edi
  4211d9:	aaa    
  4211da:	mov    DWORD PTR [ebp-0x4c],0xbc26fac2
  4211e1:	jbe    0x4211b7
  4211e3:	or     bh,ah
  4211e5:	add    edi,esp
  4211e7:	push   ss
  4211e8:	iret   
  4211e9:	jecxz  0x4211f7
  4211eb:	or     edi,esp
  4211ed:	rcr    cl,cl
  4211ef:	fist   DWORD PTR [edx-0x51f5eab3]
  4211f5:	dec    ebp
  4211f6:	or     eax,0x21261a4d
  4211fb:	les    eax,FWORD PTR [ecx-0x2f]
  4211fe:	mov    dl,0xb4
  421200:	mov    al,0x3
  421202:	aad    0xd8
  421204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421205:	fcom   DWORD PTR [esi+ecx*1+0x364dd0e7]
  42120c:	addr16 daa 
  42120e:	add    BYTE PTR [eax],al
  421210:	jb     0x421220
  421212:	add    cl,ch
  421214:	(bad)  
  421215:	scas   eax,DWORD PTR es:[edi]
  421216:	jmp    FWORD PTR [ebp-0x1b]
  421219:	adc    eax,0xb9d6a90f
  42121e:	cld    
  42121f:	hlt    
  421220:	cmp    dl,BYTE PTR [eax+eax*2]
  421223:	jmp    0xe8a63664
  421228:	cmp    bl,bh
  42122a:	push   ss
  42122b:	push   ecx
  42122c:	lods   eax,DWORD PTR ds:[esi]
  42122d:	jmp    0x42122e
  42122f:	call   0x6d39da7d
  421234:	xchg   esi,eax
  421235:	xchg   edi,eax
  421236:	add    eax,0xff66f9a9
  42123b:	call   0x9396ce16
  421240:	(bad)  
  421241:	nop
  421242:	adc    cl,0xeb
  421245:	and    eax,0xea7eb9fc
  42124a:	pop    es
  42124b:	retf   
  42124c:	jmp    0x42127a
  42124e:	(bad)  
  42124f:	rcl    dh,1
  421251:	or     DWORD PTR [ebx-0x3ddd3c4],ecx
  421257:	out    dx,al
  421258:	mov    edi,0xc8e67456
  42125d:	xchg   ecx,eax
  42125e:	(bad)  
  42125f:	ins    BYTE PTR es:[edi],dx
  421260:	xor    ah,0xfa
  421263:	(bad)  
  421264:	test   al,0xd9
  421266:	mov    edi,0xfc9b9bc1
  42126b:	(bad)  
  42126c:	dec    esp
  42126d:	dec    edi
  42126e:	dec    edi
  42126f:	shr    DWORD PTR [eax-0x65],1
  421272:	cld    
  421273:	mov    dh,0x0
  421275:	add    BYTE PTR [ebp+ecx*2+0x4f],bl
  421279:	scas   al,BYTE PTR es:[edi]
  42127a:	fidiv  DWORD PTR [ecx-0x6d26d6f0]
  421280:	les    edi,FWORD PTR [ecx]
  421282:	add    al,bh
  421284:	xchg   edi,eax
  421285:	sti    
  421286:	xchg   esi,eax
  421287:	and    al,0x87
  421289:	and    al,0xed
  42128b:	sub    al,0xcd
  42128d:	add    BYTE PTR [esi+0x6c840008],al
  421293:	pop    ecx
  421294:	pop    ecx
  421295:	push   ebx
  421296:	stc    
  421297:	je     0x421231
  421299:	mov    eax,0xe09
  42129e:	and    al,0x2d
  4212a0:	clc    
  4212a1:	add    BYTE PTR [ecx+edx*4+0x31],ch
  4212a5:	in     al,dx
  4212a6:	outs   dx,BYTE PTR ds:[esi]
  4212a7:	dec    eax
  4212a8:	cld    
  4212a9:	mov    edx,0xdb4
  4212ae:	aas    
  4212af:	fnsave [ecx]
  4212b1:	fadd   st(2),st
  4212b3:	dec    edx
  4212b4:	cld    
  4212b5:	(bad)  
  4212b6:	repnz mov WORD PTR [edi+0x3a],?
  4212ba:	inc    edi
  4212bb:	in     eax,0x71
  4212bd:	xor    eax,edi
  4212bf:	fs clc 
  4212c1:	lea    esi,[eax+0x8]
  4212c4:	add    cl,BYTE PTR [ecx+0x75fbdc81]
  4212ca:	fmul   DWORD PTR [ecx+eax*4-0x42126d0]
  4212d1:	push   eax
  4212d2:	inc    esi
  4212d3:	pop    es
  4212d4:	mov    DWORD PTR [ebp-0x422bc],eax
  4212da:	add    BYTE PTR [eax],al
  4212dc:	ins    BYTE PTR es:[edi],dx
  4212dd:	mov    eax,DWORD PTR [ecx-0x64]
  4212e0:	mov    esp,0xecdb00f5
  4212e5:	pop    es
  4212e6:	dec    edi
  4212e7:	call   ecx
  4212e9:	rcl    edx,0x43
  4212ec:	cld    
  4212ed:	(bad)  
  4212ef:	cmp    esi,DWORD PTR [ebx]
  4212f1:	je     0x4212c6
  4212f3:	pop    ebx
  4212f4:	sbb    esi,DWORD PTR [ebx-0xc]
  4212f7:	call   0x3ed205
  4212fc:	fistp  DWORD PTR [eax]
  4212fe:	mov    esp,0xc9855e
  421303:	add    BYTE PTR [ecx],al
  421305:	xchg   ecx,eax
  421306:	call   0xce21e85c
  42130b:	push   esp
  42130c:	pop    esi
  42130d:	push   esi
  42130e:	cld    
  42130f:	rcl    DWORD PTR [esi],1
  421311:	xor    edi,ebp
  421313:	fadd   DWORD PTR [esi]
  421315:	add    BYTE PTR [ebx+ebx*2+0x5103f283],ch
  42131c:	pop    esi
  42131d:	pushf  
  42131e:	sub    ah,cl
  421320:	stos   BYTE PTR es:[edi],al
  421321:	xor    DWORD PTR [eax],eax
  421323:	push   ecx
  421324:	cmp    DWORD PTR es:[ecx-0x13],ecx
  421328:	adc    al,0x31
  42132a:	iret   
  42132b:	xchg   DWORD PTR [eax],edx
  42132d:	aam    0x28
  42132f:	mov    esp,0x3800318a
  421334:	clc    
  421335:	jecxz  0x4212e4
  421337:	pop    es
  421338:	(bad)  
  42133a:	lods   eax,DWORD PTR ds:[esi]
  42133b:	add    eax,DWORD PTR [esi]
  42133d:	icebp  
  42133e:	daa    
  42133f:	add    BYTE PTR [eax],al
  421341:	add    BYTE PTR [esi],al
  421343:	icebp  
  421344:	rcr    BYTE PTR [ebx+ebx*4+0x47],0x49
  421349:	ror    BYTE PTR [eax+0x397e24a7],0xe1
  421350:	add    BYTE PTR [eax],al
  421352:	aad    0x7f
  421354:	retf   0xaf54
  421357:	xor    BYTE PTR [ebp+0x301bc582],al
  42135d:	cld    
  42135e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135f:	mov    bh,bl
  421361:	pop    es
  421362:	mov    bh,0x2b
  421364:	sbb    edi,DWORD PTR [esi-0x53]
  421367:	xor    BYTE PTR [eax],al
  421369:	mov    ebp,DWORD PTR [eax-0x68]
  42136c:	imul   ebp,edx,0xffffffd5
  42136f:	xor    BYTE PTR [eax],al
  421371:	call   0x455af8
  421376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421377:	addr16 jo 0x421378
  42137a:	shl    BYTE PTR [eax],cl
  42137c:	or     BYTE PTR [edx-0x3cedfb0],0xc2
  421383:	or     DWORD PTR [edi],esi
  421385:	adc    DWORD PTR [edi],0xb1db3682
  42138b:	cld    
  42138c:	and    dl,BYTE PTR [edi]
  42138e:	adc    eax,0x2744640a
  421393:	(bad)  
  421394:	push   cs
  421395:	cmp    BYTE PTR [ebx-0x18cd19de],bl
  42139b:	sub    eax,ebx
  42139d:	ret    
  42139e:	mov    dl,BYTE PTR [ebp-0x4fedcfdd]
  4213a4:	out    0x9d,eax
  4213a6:	add    BYTE PTR [eax],al
  4213a8:	jp     0x42133f
  4213aa:	mov    ds:0x5fbb228b,eax
  4213af:	mov    cl,0x6e
  4213b1:	and    dh,bl
  4213b3:	xlat   BYTE PTR ds:[ebx]
  4213b4:	ror    cl,cl
  4213b6:	out    0x88,al
  4213b8:	sbb    bl,BYTE PTR [edi+edx*8+0x35d95780]
  4213bf:	xor    ecx,DWORD PTR [ecx-0x47]
  4213c2:	pop    ebx
  4213c3:	mov    ecx,0x4ee7313e
  4213c8:	cmp    ah,BYTE PTR [edx]
  4213ca:	adc    DWORD PTR [esi],eax
  4213cc:	out    0x49,eax
  4213ce:	push   0x44
  4213d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213d1:	adc    ecx,DWORD PTR ds:0xeb1ea247
  4213d7:	mov    ch,0x71
  4213d9:	xlat   BYTE PTR ds:[ebx]
  4213da:	shl    DWORD PTR es:[eax+0x3a471fbe],cl
  4213e1:	or     BYTE PTR [edx],al
  4213e3:	cmp    esp,DWORD PTR [edi-0x79ccc245]
  4213e9:	in     eax,dx
  4213ea:	div    BYTE PTR [edx]
  4213ec:	mov    DWORD PTR [ecx-0x71153c08],0x5fa70ce
  4213f6:	out    0x3,eax
  4213f8:	pushf  
  4213f9:	and    al,0x3c
  4213fb:	not    BYTE PTR [eax-0x6c67003a]
  421401:	and    DWORD PTR [edx-0x52],edx
  421404:	fld    QWORD PTR [ecx+0x11]
  421407:	sub    ecx,edx
  421409:	push   ds
  42140a:	xor    ah,cl
  42140c:	add    BYTE PTR [eax],al
  42140e:	push   es
  42140f:	retf   0x80ff
  421412:	(bad)  
  421413:	and    ch,bh
  421415:	mov    ds,WORD PTR [ebx-0x14]
  421418:	aaa    
  421419:	cdq    
  42141a:	xchg   ebx,eax
  42141b:	and    esp,edi
  42141d:	mov    edx,0x4a65b716
  421422:	xchg   esi,eax
  421423:	push   ecx
  421424:	inc    eax
  421425:	jmp    0xfc1e0ff1
  42142a:	xchg   esi,eax
  42142b:	and    edi,esp
  42142d:	xchg   esi,edx
  42142f:	or     DWORD PTR [eax],eax
  421431:	mov    edx,0xaacfcd4e
  421436:	(bad)  
  421437:	push   ds
  421438:	adc    ah,BYTE PTR [ecx]
  42143a:	ror    cl,0xff
  42143d:	in     eax,dx
  42143e:	iret   
  42143f:	add    eax,DWORD PTR [eax+0x19]
  421442:	adc    esp,DWORD PTR [ecx]
  421444:	add    DWORD PTR [esi],ecx
  421446:	(bad)  
  421447:	fmul   st,st(7)
  421449:	stos   BYTE PTR es:[edi],al
  42144a:	(bad)  
  42144b:	loop   0x421427
  42144d:	xchg   edi,eax
  42144e:	jae    0x4214a8
  421450:	iret   
  421451:	out    dx,al
  421452:	(bad)  
  421453:	or     eax,ebp
  421455:	repz (bad) 
  421457:	push   ds
  421458:	cld    
  421459:	ins    DWORD PTR es:[edi],dx
  42145a:	xchg   esi,eax
  42145b:	pushf  
  42145c:	ins    DWORD PTR es:[edi],dx
  42145d:	out    dx,al
  42145e:	(bad)  
  42145f:	adc    eax,DWORD PTR [eax+0x19]
  421462:	adc    esp,DWORD PTR [ecx]
  421464:	mov    DWORD PTR [ebx+eiz*1],esp
  421467:	inc    esi
  421468:	sub    BYTE PTR [ecx-0x78000386],dh
  42146e:	add    DWORD PTR [ecx+0x40],edx
  421471:	jmp    0x94421476
  421476:	or     esp,DWORD PTR [ecx]
  421478:	push   es
  421479:	shl    edi,1
  42147b:	add    BYTE PTR [eax],bl
  42147d:	push   es
  42147e:	sti    
  42147f:	(bad)  
  421480:	mov    edi,0xffd037f7
  421485:	add    eax,0x3cb30489
  42148a:	sti    
  42148b:	je     0x421415
  42148d:	adc    al,0x52
  42148f:	call   0x3d19f0
  421494:	fisub  DWORD PTR [ecx+ebp*1-0x3b9a3c0]
  42149b:	jmp    0xbc64:0x1b089f5d
  4214a2:	sti    
  4214a3:	inc    BYTE PTR [ebx]
  4214a5:	xchg   edx,eax
  4214a6:	mov    esp,0x99d9974
  4214ab:	cmp    BYTE PTR [esi+eax*2+0x19788cfc],bh
  4214b2:	dec    esp
  4214b3:	cmovnp ecx,DWORD PTR [eax]
  4214b6:	inc    eax
  4214b7:	shr    BYTE PTR [edi],1
  4214b9:	or     al,0xfb
  4214bb:	je     0x421485
  4214bd:	or     eax,0x3c7d0489
  4214c2:	in     al,0xad
  4214c4:	cmp    al,0xd9
  4214c6:	sti    
  4214c7:	data16 mov ch,0x10
  4214ca:	inc    eax
  4214cb:	shr    BYTE PTR [edi+0xc],1
  4214ce:	push   0xfc46ec44
  4214d3:	(bad)  
  4214d4:	sub    eax,edx
  4214d6:	push   cs
  4214d7:	inc    eax
  4214d8:	add    BYTE PTR [eax],al
  4214da:	sub    al,0x4d
  4214dc:	pop    ebx
  4214dd:	pop    esi
  4214de:	jno    0x4214a6
  4214e0:	add    BYTE PTR [eax],al
  4214e2:	push   0xffffff9a
  4214e4:	inc    eax
  4214e5:	sar    BYTE PTR [edi],1
  4214e7:	or     al,0x56
  4214e9:	jmp    FWORD PTR [ecx]
  4214eb:	aam    0xe
  4214ed:	inc    eax
  4214ee:	in     al,dx
  4214ef:	jge    0x421501
  4214f1:	pop    eax
  4214f2:	adc    edx,DWORD PTR [edi]
  4214f4:	xor    al,dl
  4214f6:	aad    0xf3
  4214f8:	add    esp,DWORD PTR [esi+0x36]
  4214fb:	push   cs
  4214fc:	push   esp
  4214fd:	inc    eax
  4214fe:	aad    0x3a
  421500:	idiv   edi
  421502:	shl    DWORD PTR [eax-0xd],cl
  421505:	mov    edi,0x7e7ed0c
  42150a:	dec    ecx
  42150b:	ds das 
  42150d:	jae    0x421500
  42150f:	sbb    al,dl
  421511:	sbb    BYTE PTR [ebp-0x4bc6e780],0x77
  421518:	das    
  421519:	push   ebp
  42151a:	jbe    0x421551
  42151c:	push   eax
  42151d:	inc    eax
  42151e:	aad    0x87
  421520:	adc    eax,0x3f0e7dc
  421525:	pop    esi
  421526:	xchg   edi,eax
  421527:	sub    eax,0x9d4e5300
  42152c:	and    ebx,0x7d
  42152f:	mov    dl,0x1c
  421531:	jae    0x421509
  421533:	xor    BYTE PTR [eax],al
  421535:	push   ecx
  421536:	add    esp,DWORD PTR [eax+0x7b]
  421539:	jp     0x421508
  42153b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42153c:	das    
  42153d:	or     al,0x0
  42153f:	add    BYTE PTR [ecx+0x8],dl
  421542:	add    DWORD PTR [eax],eax
  421544:	aad    0xb8
  421546:	fsub   DWORD PTR [edi]
  421548:	aad    0x30
  42154a:	test   BYTE PTR [edi-0x10d5b2e],bh
  421550:	cmp    dh,BYTE PTR [ecx]
  421552:	jnp    0x421598
  421554:	fnstcw WORD PTR ds:0x30d50201
  42155a:	inc    DWORD PTR [edx+0x3166]
  421560:	lods   eax,DWORD PTR ds:[esi]
  421561:	ins    BYTE PTR es:[edi],dx
  421562:	push   eax
  421563:	inc    eax
  421564:	aad    0x1f
  421566:	adc    bl,al
  421568:	out    0x70,eax
  42156a:	add    BYTE PTR [esi+0x56],ah
  42156d:	outs   dx,BYTE PTR ds:[esi]
  42156e:	in     al,dx
  42156f:	iret   
  421570:	xchg   esi,eax
  421571:	or     edi,esp
  421573:	add    esp,eax
  421575:	xchg   DWORD PTR [ebx+0x4],ebp
  421578:	aad    0x9
  42157a:	(bad)  
  42157b:	das    
  42157c:	loope  0x421587
  42157e:	out    0xa5,eax
  421580:	fild   DWORD PTR ds:0xa155403
  421586:	ins    BYTE PTR es:[edi],dx
  421587:	mov    eax,0x1b6ee5f6
  42158c:	ret    0xe61e
  42158f:	sbb    ecx,DWORD PTR [edx]
  421591:	and    esi,esp
  421593:	add    ebx,DWORD PTR [edi+eax*2+0x36]
  421597:	sbb    al,0x7c
  421599:	das    
  42159a:	xchg   esp,eax
  42159b:	das    
  42159c:	pop    ebx
  42159d:	(bad)
  4215a0:	push   edi
  4215a1:	dec    ecx
  4215a2:	cli    
  4215a3:	mov    ds:0x955f0000,al
  4215a8:	ret    0x42ef
  4215ab:	xor    dh,ah
  4215ad:	add    edx,ebp
  4215af:	xor    DWORD PTR [eax+0x731e7a2c],edi
  4215b5:	mov    eax,0x1a9ef9b6
  4215ba:	push   0x1e
  4215bc:	out    0x1b,al
  4215be:	mov    dh,0x20
  4215c0:	out    0x3,al
  4215c2:	cmp    dl,ch
  4215c4:	push   ss
  4215c5:	ret    
  4215c6:	push   edx
  4215c7:	test   DWORD PTR [esi],esp
  4215c9:	mov    eax,0x2f3692d4
  4215ce:	out    0x85,eax
  4215d0:	fadd   st,st(3)
  4215d2:	cmp    cl,dh
  4215d4:	and    eax,0xa935a6f9
  4215d9:	add    ebx,DWORD PTR [esi-0x3b]
  4215dc:	retf   0x88c7
  4215df:	mov    ecx,0x1e1a0851
  4215e4:	out    0x80,al
  4215e6:	dec    esi
  4215e7:	in     eax,0x6e
  4215e9:	add    eax,0x10009d5
  4215ee:	pushf  
  4215ef:	daa    
  4215f0:	std    
  4215f1:	out    dx,al
  4215f2:	jg     0x42158e
  4215f4:	and    eax,DWORD PTR ds:0x720f4a56
  4215fa:	xchg   ebx,eax
  4215fb:	into   
  4215fc:	out    0xee,eax
  4215fe:	xchg   BYTE PTR ds:0xb7d062fc,bl
  421604:	cld    
  421605:	sbb    ecx,edx
  421607:	xchg   edx,eax
  421608:	jp     0x4215fb
  42160a:	add    BYTE PTR [eax],al
  42160c:	outs   dx,BYTE PTR ds:[esi]
  42160d:	leave  
  42160e:	iret   
  42160f:	sub    bl,cl
  421611:	push   ds
  421612:	adc    cl,BYTE PTR [ebp-0x6e00361c]
  421618:	imul   esp,eax,0x9d6e7ff
  42161e:	jae    0x421623
  421620:	push   esi
  421621:	sahf   
  421622:	pop    es
  421623:	repnz bound ebp,QWORD PTR [ecx-0x6a82d276]
  42162a:	dec    edi
  42162b:	jle    0x42161a
  42162d:	push   ecx
  42162e:	adc    BYTE PTR [ecx],ch
  421630:	(bad)  [eax-0x4c620a41]
  421636:	call   edx
  421638:	jno    0x4215ca
  42163a:	inc    ebx
  42163b:	add    eax,0x6d8ab9d9
  421640:	jp     0x4215cb
  421642:	(bad)  
  421643:	call   0x864ed01e
  421648:	sbb    ecx,DWORD PTR [edi]
  42164a:	and    edi,DWORD PTR [esi]
  42164c:	(bad)  
  42164d:	or     DWORD PTR [eax],eax
  42164f:	cdq    
  421650:	repz xchg ebp,eax
  421652:	pop    es
  421653:	fisttp QWORD PTR cs:[ebp+0x10]
  421657:	test   eax,0x9fbf88d6
  42165c:	xor    eax,0x5de8f78a
  421661:	adc    BYTE PTR [ecx+0x73051e8e],al
  421667:	add    BYTE PTR ds:0x3c793c81,al
  42166d:	or     edi,esp
  42166f:	push   ss
  421670:	add    BYTE PTR [eax],al
  421672:	mov    esp,DWORD PTR [eax]
  421674:	bound  eax,QWORD PTR [ebx+0x200c2468]
  42167a:	mov    ?,eax
  42167c:	cs leave 
  42167e:	xchg   edx,eax
  42167f:	mov    al,ds:0x9bdc4448
  421684:	inc    eax
  421685:	and    al,0xdc
  421687:	cmp    ah,ah
  421689:	imul   ebx,DWORD PTR [ecx-0x74a80412],0xfffffff4
  421690:	scas   eax,DWORD PTR es:[edi]
  421691:	adc    al,0xec
  421693:	add    eax,0xa2e75e5b
  421698:	loope  0x4216f7
  42169a:	jle    0x4216ad
  42169c:	add    BYTE PTR [ebp+0x27],dl
  42169f:	jmp    0x5653:0x1dc18b52
  4216a6:	dec    ebx
  4216a7:	hlt    
  4216a8:	mov    ebx,0x8705bc14
  4216ad:	clc    
  4216ae:	add    eax,0x31e8046d
  4216b3:	and    edi,esp
  4216b5:	push   eax
  4216b7:	lds    esi,FWORD PTR [ecx+0x7]
  4216ba:	out    0xc6,eax
  4216bc:	in     eax,0x8d
  4216be:	jl     0x4216c8
  4216c0:	add    BYTE PTR [ebp-0x7d7fe0f5],al
  4216c6:	ins    BYTE PTR es:[edi],dx
  4216c7:	or     BYTE PTR [eax],al
  4216c9:	sbb    DWORD PTR [edx-0x40f58bf8],0xffffffeb
  4216d0:	or     DWORD PTR [ecx+esi*1-0x77],esi
  4216d4:	cli    
  4216d5:	pop    es
  4216d6:	add    BYTE PTR [eax],al
  4216d8:	sbb    DWORD PTR [ecx+0x4f],0x4ff4fb57
  4216df:	adc    DWORD PTR [eax+ecx*1-0x79],edi
  4216e3:	fcom   st(5)
  4216e5:	lods   eax,DWORD PTR ds:[esi]
  4216e6:	inc    esi
  4216e7:	jae    0x42169a
  4216e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216ea:	inc    ebp
  4216eb:	inc    edi
  4216ec:	mov    DWORD PTR ds:0x96d3e77f,esp
  4216f2:	stc    
  4216f3:	sub    ch,0x2b
  4216f6:	mov    ch,0x17
  4216f8:	dec    esi
  4216f9:	pop    ss
  4216fa:	pop    ss
  4216fb:	adc    al,0x86
  4216fd:	mov    eax,0x3b1d8100
  421702:	sbb    BYTE PTR [ecx+0x2],bl
  421705:	xor    al,0x2b
  421707:	mov    ch,bl
  421709:	inc    esi
  42170a:	clc    
  42170b:	push   eax
  42170c:	aas    
  42170d:	xor    DWORD PTR [edi],edx
  42170f:	in     al,dx
  421710:	pop    esi
  421711:	fdivp  st(3),st
  421713:	add    dl,0xdd
  421716:	fdivr  QWORD PTR [ebp-0x407eef]
  42171c:	or     BYTE PTR [ebp+edx*1-0x28],ah
  421720:	(bad)  
  421721:	lock add ebp,DWORD PTR [eax+0x19]
  421725:	cli    
  421726:	ret    
  421727:	push   DWORD PTR [edx-0x6d03d385]
  42172d:	cld    
  42172e:	sbb    eax,edi
  421730:	mov    DWORD PTR [ebx+ebp*1+0x4c3e8255],ebx
  421737:	adc    DWORD PTR ds:0xf8e731,edx
  42173d:	add    cl,ch
  42173f:	sub    dl,bl
  421741:	out    0xd0,eax
  421743:	mov    edx,0x3e62fc2a
  421748:	clc    
  421749:	cld    
  42174a:	rcl    BYTE PTR [ecx+edx*1+0x40],0xd5
  42174f:	addr16 ja 0x421794
  421752:	fnstsw WORD PTR [ebx-0x36]
  421755:	pop    edx
  421756:	pop    ss
  421757:	sub    eax,0x164e5600
  42175c:	inc    esp
  42175d:	adc    BYTE PTR [ebp-0x432b18f7],dl
  421763:	or     BYTE PTR [esi],bl
  421765:	mov    bh,0xf6
  421767:	cmc    
  421768:	add    DWORD PTR [ecx],edx
  42176a:	dec    esp
  42176b:	mov    dh,0xc2
  42176d:	call   FWORD PTR [ebp+0x4b]
  421770:	push   cs
  421771:	push   es
  421772:	daa    
  421773:	or     ah,bh
  421775:	xchg   DWORD PTR [edx-0x6a],eax
  421778:	loope  0x421713
  42177a:	aad    0xb2
  42177c:	in     eax,dx
  42177d:	push   esp
  42177e:	pop    ebp
  42177f:	and    ch,BYTE PTR [ebx+0x2b]
  421782:	and    edi,DWORD PTR [di]
  421785:	retf   0x1214
  421788:	out    0xd0,eax
  42178a:	dec    ebp
  42178b:	imul   esp,DWORD PTR cs:[eax],0x10d286ca
  421792:	and    al,0xb4
  421794:	adc    eax,0x620e472b
  421799:	ss mov ecx,0x267cde94
  42179f:	out    0xca,al
  4217a1:	jl     0x4217a3
  4217a3:	add    BYTE PTR [esi],bl
  4217a5:	out    0xfe,al
  4217a7:	sub    al,bh
  4217a9:	push   ebp
  4217aa:	stc    
  4217ab:	ret    
  4217ac:	call   0x6b0a:0xad81ae8f
  4217b3:	jg     0x42173f
  4217b5:	sbb    ah,dh
  4217b7:	cli    
  4217b8:	dec    ecx
  4217b9:	int3   
  4217ba:	fidivr WORD PTR [eax+0x16]
  4217bd:	out    0xce,al
  4217bf:	shl    DWORD PTR [ecx-0x6b],cl
  4217c2:	or     dl,BYTE PTR [eax]
  4217c4:	fcom   DWORD PTR [edx-0x5d]
  4217c7:	imul   esp
  4217c9:	pop    es
  4217ca:	sub    BYTE PTR [edx+ecx*8],ah
  4217cd:	push   cs
  4217ce:	sub    ah,dl
  4217d0:	mov    esp,0x4a7fcf09
  4217d5:	sbb    ah,dh
  4217d7:	(bad)  
  4217d8:	inc    ecx
  4217d9:	hlt    
  4217da:	jmp    FWORD PTR [eax]
  4217dc:	loop   0x4217a7
  4217de:	jmp    DWORD PTR [ebx-0x67]
  4217e1:	xchg   edi,eax
  4217e2:	add    ebx,edx
  4217e4:	fwait
  4217e5:	xor    DWORD PTR [ebx+0x72],ebx
  4217e8:	adc    eax,0xe96a17e6
  4217ed:	sbb    eax,0xd7939c72
  4217f2:	mov    bh,0xda
  4217f4:	push   ss
  4217f5:	sbb    ah,BYTE PTR [esi-0x7]
  4217f8:	sub    eax,DWORD PTR [ebx+0x1cd2cd5b]
  4217fe:	aad    0x62
  421800:	cld    
  421801:	pop    ebp
  421802:	adc    BYTE PTR [ecx],ch
  421804:	ror    DWORD PTR [esi],1
  421806:	add    cl,ch
  421808:	add    BYTE PTR [eax],al
  42180a:	(bad)  
  42180b:	adc    DWORD PTR [eax+0x43],edx
  42180e:	mov    eax,ds:0xffb6fcb9
  421813:	fwait
  421814:	or     esi,DWORD PTR [edx-0x66]
  421817:	in     eax,dx
  421818:	pop    ds
  421819:	mov    esi,0x25891185
  42181e:	mov    ch,0x1
  421820:	call   0xfc581665
  421825:	adc    esp,ecx
  421827:	adc    eax,0x82cec573
  42182c:	xlat   BYTE PTR ds:[ebx]
  42182d:	xchg   esi,eax
  42182e:	add    al,0xec
  421830:	cld    
  421831:	mov    ?,WORD PTR [edi-0x3eecb0e3]
  421837:	adc    eax,0x16dac573
  42183c:	aam    0x82
  42183e:	aam    0x8c
  421840:	cmc    
  421841:	cmc    
  421842:	fcom   DWORD PTR [eax-0x7d6339fb]
  421848:	rol    dl,0xe3
  42184b:	sub    ebx,DWORD PTR [edx+0x2b]
  42184e:	pop    esi
  42184f:	sbb    DWORD PTR [ebx+0x62],edx
  421852:	jmp    0xe88f:0x9400e389
  421859:	fs pop edi
  42185b:	cwde   
  42185c:	(bad)  
  42185d:	jmp    FWORD PTR [edi+0x21]
  421860:	jl     0x4218dd
  421862:	xor    al,0xe
  421864:	xchg   DWORD PTR [ebx+0x20],eax
  421867:	cmp    edx,DWORD PTR [ebx-0x75]
  42186a:	mov    ebp,0x830959
  42186f:	add    ah,al
  421871:	js     0x4218e5
  421873:	or     BYTE PTR [esi+0xf],dl
  421876:	pop    eax
  421877:	jmp    0x422555
  42187c:	and    WORD PTR [ecx+0x542d087c],cx
  421883:	call   0x3ef3c8
  421888:	stos   BYTE PTR es:[edi],al
  421889:	xchg   esi,eax
  42188a:	ret    
  42188b:	push   eax
  42188c:	xchg   BYTE PTR [edi+0x5b],cl
  42188f:	lea    edi,[eax+0x29]
  421892:	sub    al,0xe8
  421894:	xor    ebx,ebp
  421896:	cli    
  421897:	push   ebp
  421899:	inc    esp
  42189a:	add    eax,0xc02f1603
  4218a0:	in     al,dx
  4218a1:	hlt    
  4218a2:	mov    bh,0x0
  4218a4:	mov    esp,0xfbff2f0c
  4218a9:	cmp    cl,BYTE PTR [ecx+0x4c409844]
  4218af:	xor    edi,DWORD PTR [edx]
  4218b1:	mov    al,ds:0x3c982440
  4218b6:	test   DWORD PTR [eax+ebx*4+0x34],esi
  4218ba:	test   DWORD PTR [eax+ebx*4+0x40],esi
  4218be:	test   DWORD PTR [eax+ecx*4+0x1c],esi
  4218c2:	in     al,0xf8
  4218c4:	stos   BYTE PTR es:[edi],al
  4218c5:	jecxz  0x4218c2
  4218c7:	test   BYTE PTR [eax+eiz*4+0x11602440],bh
  4218ce:	add    BYTE PTR [edi+0x22d5],0x0
  4218d5:	add    BYTE PTR [edx-0xd],dl
  4218d8:	fwait
  4218d9:	leave  
  4218da:	fldenv [edx]
  4218dc:	add    BYTE PTR [eax+0x50],dl
  4218df:	outs   dx,BYTE PTR ds:[esi]
  4218e0:	fcomp  QWORD PTR [edi]
  4218e2:	sub    eax,0x32fd6d0f
  4218e7:	scas   al,BYTE PTR es:[edi]
  4218e8:	inc    ebx
  4218e9:	jae    0x4218a6
  4218eb:	out    dx,eax
  4218ec:	scas   eax,DWORD PTR es:[edi]
  4218ed:	and    ecx,ecx
  4218ef:	fwait
  4218f0:	mov    edi,0xd60ab923
  4218f5:	daa    
  4218f6:	aad    0x22
  4218f8:	fld    DWORD PTR [ebx-0x4f]
  4218fb:	sub    ch,bl
  4218fd:	lds    eax,FWORD PTR [ebx-0x4ebc848e]
  421903:	cmp    bl,BYTE PTR [edx-0x370b59d6]
  421909:	hlt    
  42190a:	in     al,0xea
  42190c:	push   ecx
  42190d:	jb     0x4218a3
  42190f:	cdq    
  421910:	lods   al,BYTE PTR ds:[esi]
  421911:	and    eax,ebp
  421913:	sti    
  421914:	inc    ecx
  421915:	jne    0x421908
  421917:	stos   DWORD PTR es:[edi],eax
  421918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421919:	and    esp,ecx
  42191b:	fwait
  42191c:	xor    ah,bh
  42191e:	inc    esi
  42191f:	sub    eax,0x2111a218
  421924:	add    BYTE PTR [ebp+edx*4+0x11fcffdd],al
  42192b:	inc    ebp
  42192c:	adc    BYTE PTR [ecx+0x72b6469a],al
  421932:	scas   eax,DWORD PTR es:[edi]
  421933:	sub    BYTE PTR [ebx+eiz*1-0x3f47717],0x0
  42193b:	add    BYTE PTR [ebx-0x46bc8a70],cl
  421941:	xor    al,0x18
  421943:	pop    ss
  421944:	inc    esi
  421945:	lahf   
  421946:	daa    
  421947:	xor    BYTE PTR [ebp-0x3adc53a6],dl
  42194d:	or     esi,esi
  42194f:	(bad)  
  421950:	and    ah,BYTE PTR [ebx]
  421952:	repnz sub dh,ah
  421955:	in     eax,dx
  421956:	cli    
  421957:	sbb    edx,DWORD PTR [eax+0x13]
  42195a:	dec    esp
  42195b:	sub    BYTE PTR [edi-0x32],bl
  42195e:	or     cl,BYTE PTR [eax]
  421960:	sub    eax,0x39297813
  421965:	sub    DWORD PTR ds:0x61b290c8,0x1e
  42196c:	(bad)
  421970:	mov    DWORD PTR cs:[edx],ecx
  421973:	outs   dx,DWORD PTR ds:[esi]
  421974:	ror    BYTE PTR [ecx],1
  421976:	out    0xd4,eax
  421978:	lds    esi,FWORD PTR [edx]
  42197a:	mov    ah,0xd0
  42197c:	push   ebx
  42197d:	mov    ch,0x6
  42197f:	jp     0x421920
  421981:	sub    eax,0x80eac66f
  421986:	xchg   ebx,eax
  421987:	das    
  421988:	pop    ebx
  421989:	mov    ch,0x22
  42198b:	jp     0x42191c
  42198d:	inc    ecx
  42198e:	outs   dx,DWORD PTR ds:[esi]
  42198f:	leave  
  421990:	push   es
  421991:	shr    DWORD PTR [ecx+0x650688b0],cl
  421997:	xchg   ecx,eax
  421998:	rcl    BYTE PTR [esi],cl
  42199a:	out    0x82,al
  42199c:	ret    0x450b
  42199f:	push   cs
  4219a0:	add    BYTE PTR [eax],al
  4219a2:	push   esp
  4219a3:	adc    ecx,ebp
  4219a5:	not    BYTE PTR [edi-0x72]
  4219a8:	out    0x3,al
  4219aa:	aad    0x16
  4219ac:	xor    edi,eax
  4219ae:	pop    edi
  4219af:	int3   
  4219b0:	xchg   esi,eax
  4219b1:	sbb    al,0xa6
  4219b3:	retf   
  4219b4:	out    0x3,al
  4219b6:	lods   al,BYTE PTR ds:[esi]
  4219b7:	xchg   ebx,eax
  4219b8:	popa   
  4219b9:	mov    ecx,0x1f82da
  4219be:	pop    esp
  4219bf:	sub    BYTE PTR [esi+0x4],0xd5
  4219c3:	or     DWORD PTR [edx+0x2c],ebp
  4219c6:	aam    0x6
  4219c8:	add    BYTE PTR [ebp+0x19],bl
  4219cb:	pop    DWORD PTR [edx+0x35]
  4219ce:	in     al,dx
  4219cf:	retf   
  4219d0:	stos   DWORD PTR es:[edi],eax
  4219d1:	mov    ecx,0xb8efbbdd
  4219d6:	fld    st(3)
  4219d8:	stos   DWORD PTR es:[edi],eax
  4219d9:	pusha  
  4219da:	and    al,0x66
  4219dc:	xchg   BYTE PTR [esi+edi*4-0x422a1d2],ch
  4219e3:	adc    eax,0x53bdace8
  4219e8:	dec    edi
  4219e9:	xor    dl,bh
  4219eb:	adc    eax,0x1635f2e7
  4219f0:	cld    
  4219f1:	je     0x42199f
  4219f3:	mov    bh,0xf8
  4219f5:	push   ds
  4219f6:	repnz dec ebp
  4219f8:	inc    edx
  4219f9:	add    ebp,esp
  4219fb:	or     DWORD PTR [eax],eax
  4219fd:	jmp    0x6ad758f
  421a02:	mov    edx,0x8be715
  421a07:	add    BYTE PTR [ebx],bh
  421a09:	push   ss
  421a0a:	cld    
  421a0b:	sbb    ecx,0xffffff80
  421a0e:	lds    ebx,FWORD PTR [esp+ebp*1+0x26]
  421a12:	out    0x4c,eax
  421a14:	push   ss
  421a15:	push   ss
  421a16:	cld    
  421a17:	push   0xffffff9b
  421a19:	jecxz  0x421a17
  421a1b:	and    al,0xf1
  421a1d:	xchg   edi,eax
  421a1e:	fiadd  WORD PTR [ecx-0xf]
  421a21:	pop    es
  421a22:	add    cl,ch
  421a24:	cmp    eax,0xf3c04f88
  421a29:	adc    eax,0xf7fa1950
  421a2e:	pop    ss
  421a2f:	xlat   BYTE PTR ds:[ebx]
  421a30:	xchg   esi,eax
  421a31:	adc    eax,0xa3aaad81
  421a36:	(bad)  
  421a37:	imul   edx,DWORD PTR [ebp-0x6a9db0db],0xd
  421a3e:	mov    DWORD PTR [ecx],esi
  421a40:	aad    0x21
  421a42:	mov    dl,0x0
  421a44:	sub    bh,ch
  421a46:	sti    
  421a47:	xor    eax,DWORD PTR [edx]
  421a49:	es jno 0x421a40
  421a4c:	jno    0x421a4e
  421a4e:	push   esi
  421a4f:	call   0x3cfadc
  421a54:	sti    
  421a55:	pop    ecx
  421a56:	in     al,dx
  421a57:	call   0x3cfacc
  421a5c:	xchg   edx,eax
  421a5d:	icebp  
  421a5e:	cli    
  421a5f:	cli    
  421a60:	call   0xfec4:0xa5c02eeb
  421a67:	jmp    FWORD PTR [esi+edx*4]
  421a6a:	jno    0x421a48
  421a6c:	add    BYTE PTR [eax],al
  421a6e:	mov    ch,0x59
  421a70:	call   0xfc98a05d
  421a75:	jmp    DWORD PTR [ebp+0x3983b849]
  421a7b:	cmc    
  421a7c:	std    
  421a7d:	lds    eax,FWORD PTR [ecx-0x14]
  421a80:	cld    
  421a81:	jl     0x421a74
  421a83:	pop    DWORD PTR [ecx-0xc]
  421a86:	out    0x7,eax
  421a88:	push   0x6
  421a8a:	xor    al,0x96
  421a8c:	inc    ecx
  421a8d:	shl    BYTE PTR [ebp+0x59],1
  421a90:	in     al,0x39
  421a92:	popa   
  421a93:	in     al,0xb
  421a95:	mov    ?,WORD PTR [edx+0x67000007]
  421a9b:	dec    esp
  421a9c:	call   0x853ba20c
  421aa1:	pop    ebp
  421aa2:	test   BYTE PTR [eax+0x64d5cc71],dl
  421aa8:	int3   
  421aa9:	cvtpi2ps xmm6,QWORD PTR [ecx]
  421aac:	(bad)  
  421aad:	(bad)  
  421aae:	mov    esp,0x37084191
  421ab3:	dec    esi
  421ab4:	add    al,ch
  421ab6:	stc    
  421ab7:	mov    esp,0xce30fffa
  421abc:	or     eax,DWORD PTR [ebp+edx*8-0x2a0001ec]
  421ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac5:	retf   
  421ac6:	(bad)  
  421ac7:	or     eax,0x8b008634
  421acc:	js     0x421b48
  421ace:	cmp    DWORD PTR [ecx-0x53],ebx
  421ad1:	jmp    0x421ad3
  421ad3:	add    bl,ah
  421ad5:	dec    ebx
  421ad6:	ja     0x421b4a
  421ad8:	cmp    DWORD PTR [eax],0x1b128b0c
  421ade:	retf   0x524f
  421ae1:	adc    eax,0x2295160c
  421ae6:	jg     0x421aab
  421ae8:	shl    DWORD PTR [ebp-0x2c348cbd],1
  421aee:	mov    esp,0x28655ef7
  421af3:	adc    BYTE PTR [ebx],0x3e
  421af6:	out    0x42,eax
  421af8:	xor    DWORD PTR [eax+0x42],esi
  421afb:	xor    BYTE PTR [ebx],ah
  421afd:	xchg   edi,eax
  421afe:	mov    esp,0x2865cceb
  421b03:	or     al,0x50
  421b05:	ret    
  421b06:	add    BYTE PTR [eax],al
  421b08:	aad    0x4d
  421b0a:	mov    bh,bh
  421b0c:	cli    
  421b0d:	and    ebx,esi
  421b0f:	sbb    BYTE PTR [edx],0x21
  421b12:	add    BYTE PTR [eax],al
  421b14:	pop    eax
  421b15:	addr16 or al,0x8b
  421b18:	push   0xdc83184e
  421b1d:	xor    esp,DWORD PTR [ebx]
  421b1f:	adc    DWORD PTR [ebp-0x1e95fa4b],0xffffffb5
  421b26:	mov    ebx,0xbd982507
  421b2b:	fcmovnbe st,st(6)
  421b2d:	pop    edi
  421b2e:	sar    ah,1
  421b30:	enter  0xa30,0x40
  421b34:	aad    0x9f
  421b36:	cmp    al,0xb
  421b38:	add    BYTE PTR [eax],al
  421b3a:	mov    ds:0x55182c0a,al
  421b3f:	inc    edi
  421b40:	bnd jp 0x421b72
  421b43:	xor    ah,BYTE PTR [ebx-0x3c]
  421b46:	shl    BYTE PTR [esi-0x7e5d51a5],cl
  421b4c:	and    ebx,DWORD PTR [edx+esi*2-0x47]
  421b50:	and    al,BYTE PTR [edx*8+0x53f4a68c]
  421b57:	lahf   
  421b58:	out    0x3,eax
  421b5a:	aad    0xb6
  421b5c:	dec    esi
  421b5d:	sub    edx,DWORD PTR [edi]
  421b5f:	or     ah,bh
  421b61:	jg     0x421af5
  421b63:	add    ebp,DWORD PTR [esi+eax*8+0x4b]
  421b67:	adc    esp,esi
  421b69:	js     0x421b84
  421b6b:	jg     0x421ba1
  421b6d:	sbb    edi,DWORD PTR [edx-0x36]
  421b70:	out    0x3,al
  421b72:	pop    ecx
  421b73:	dec    edx
  421b74:	in     eax,0x7e
  421b76:	sahf   
  421b77:	or     bh,ah
  421b79:	add    edx,DWORD PTR [ebp+eax*8+0x26]
  421b7d:	and    al,0x55
  421b7f:	xchg   ebp,eax
  421b80:	add    dh,cl
  421b82:	mov    ?,esp
  421b84:	adc    eax,0x297f4eae
  421b89:	sbb    edi,DWORD PTR [esi]
  421b8b:	(bad)  
  421b8c:	out    0x3,al
  421b8e:	push   edx
  421b8f:	int    0x26
  421b91:	jle    0x421bc5
  421b93:	add    ebx,DWORD PTR [edi-0x2a]
  421b96:	jmp    0x421baa
  421b98:	out    0x78,al
  421b9a:	xchg   edi,eax
  421b9b:	add    DWORD PTR [edx-0x3c],esi
  421b9e:	add    BYTE PTR [eax],al
  421ba0:	(bad)  
  421ba1:	jle    0x421bf9
  421ba3:	mov    al,ds:0xaeb6c4d1
  421ba8:	out    0x84,al
  421baa:	and    ecx,DWORD PTR [ebp+eiz*1-0x35063a46]
  421bb1:	sti    
  421bb2:	es add al,0x54
  421bb5:	dec    ebp
  421bb6:	jmp    esp
  421bb8:	js     0x421bcd
  421bba:	data16 loope 0x421c02
  421bbd:	(bad)  
  421bbe:	fwait
  421bbf:	cmp    ecx,ebp
  421bc1:	aad    0xeb
  421bc3:	lahf   
  421bc4:	mov    dh,0xa0
  421bc6:	inc    BYTE PTR [edx]
  421bc8:	aad    0x7e
  421bca:	inc    edx
  421bcb:	popa   
  421bcc:	dec    ecx
  421bcd:	mov    al,ds:0x9fd112ff
  421bd2:	add    DWORD PTR [edx+0x1e],esi
  421bd5:	sub    edx,DWORD PTR [ecx+ebp*8-0x6e76f62f]
  421bdc:	dec    esp
  421bdd:	xor    DWORD PTR [ebp*2-0x1603ed54],ecx
  421be4:	jle    0x421c60
  421be6:	cmp    ecx,ebp
  421be8:	(bad)  
  421be9:	adc    al,0x35
  421beb:	inc    ecx
  421bec:	or     BYTE PTR [ebx-0x3],ch
  421bef:	inc    esi
  421bf0:	dec    eax
  421bf1:	(bad)  
  421bf2:	imul   DWORD PTR [edx-0x2f]
  421bf5:	adc    edi,DWORD PTR [ebx-0x1b]
  421bf8:	pop    ebx
  421bf9:	sbb    edi,esp
  421bfb:	sub    eax,0x72fc1298
  421c00:	or     al,0x1a
  421c02:	call   0x63421c91
  421c07:	shr    DWORD PTR [edi+0x62],0x10
  421c0b:	add    al,BYTE PTR [ebx+0x31065c29]
  421c11:	jmp    FWORD PTR [ebx+0x2798b09]
  421c17:	sub    ch,BYTE PTR [edx-0x22]
  421c1a:	(bad)  
  421c1b:	or     DWORD PTR ds:0xf5879936,ecx
  421c21:	pop    ebp
  421c22:	cmc    
  421c23:	lahf   
  421c24:	sub    bl,BYTE PTR [edx]
  421c26:	or     edi,DWORD PTR [eax+0x3b5dd8f4]
  421c2c:	jb     0x421c46
  421c2e:	out    0x56,al
  421c30:	mov    edi,0x62bebf00
  421c35:	cmp    esp,DWORD PTR [eax+edi*2+0x23]
  421c39:	mov    esp,DWORD PTR [edx+0x7e]
  421c3c:	inc    ecx
  421c3d:	clc    
  421c3e:	add    DWORD PTR [edx-0x138c00d0],esi
  421c44:	in     al,0x33
  421c46:	mov    ecx,0x7d6a0005
  421c4b:	add    dl,0x8d
  421c4e:	loope  0x421c11
  421c50:	in     al,0x36
  421c52:	lods   eax,DWORD PTR ds:[esi]
  421c53:	add    eax,0x1a3b8300
  421c58:	sti    
  421c59:	dec    ebp
  421c5a:	in     al,0x71
  421c5c:	fisttp QWORD PTR [ebx-0xc78568f]
  421c62:	add    al,0x94
  421c64:	mov    ebp,0xbc383c00
  421c69:	inc    eax
  421c6a:	add    BYTE PTR [eax],al
  421c6c:	out    dx,eax
  421c6d:	repz inc edx
  421c6f:	cmp    edi,edx
  421c71:	jo     0x421cca
  421c73:	mov    ebp,DWORD PTR [ecx+0x5]
  421c76:	xchg   DWORD PTR [eax+0x38],ecx
  421c79:	add    BYTE PTR [ebp+0x7c],0x4a
  421c7d:	push   esp
  421c7e:	xchg   esi,eax
  421c80:	xchg   esp,eax
  421c81:	not    al
  421c83:	push   ebx
  421c85:	jg     0x421cd0
  421c87:	rol    BYTE PTR [edi+0x65c981c3],0x0
  421c8e:	push   esi
  421c8f:	lea    esp,[ecx-0x13]
  421c92:	in     al,0xf6
  421c94:	sub    al,0xd
  421c96:	add    bl,ch
  421c98:	in     al,0x79
  421c9a:	pop    ecx
  421c9b:	loopne 0x421c71
  421c9d:	cmp    ax,0xec00
  421ca1:	mov    BYTE PTR [esp+esi*2+0xc717ec5],bh
  421ca8:	jp     0x421cf2
  421caa:	sti    
  421cab:	add    ebp,edx
  421cad:	popf   
  421cae:	sbb    DWORD PTR [ebx-0x2f],esi
  421cb1:	aas    
  421cb2:	xchg   esp,eax
  421cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb4:	lods   eax,DWORD PTR ds:[esi]
  421cb5:	dec    esi
  421cb6:	(bad)  
  421cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cba:	inc    ebx
  421cbb:	jbe    0x421c84
  421cbd:	push   edi
  421cbe:	xchg   esp,eax
  421cbf:	fisttp WORD PTR [esi-0x1b]
  421cc2:	daa    
  421cc3:	out    0xf9,eax
  421cc5:	push   edi
  421cc6:	and    esp,edi
  421cc8:	push   esi
  421cc9:	add    eax,0xdd8a0010
  421cce:	aaa    
  421ccf:	mov    BYTE PTR [eax],al
  421cd1:	add    BYTE PTR [eax],ah
  421cd3:	pop    ebx
  421cd4:	shl    ch,cl
  421cd6:	jp     0x421cb5
  421cd8:	sub    ecx,DWORD PTR [eax+0x42827b18]
  421cde:	cdq    
  421cdf:	pop    edx
  421ce0:	fild   DWORD PTR [edx+0x69]
  421ce3:	das    
  421ce4:	mov    ebp,cs
  421ce6:	pop    eax
  421ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ce8:	push   ds
  421ce9:	cld    
  421cea:	enter  0x2bb2,0x81
  421cee:	dec    ebp
  421cef:	mov    eax,0x7ea8881e
  421cf4:	mov    al,BYTE PTR [edx+0xd]
  421cf7:	fwait
  421cf8:	int3   
  421cf9:	ret    
  421cfa:	pop    esp
  421cfb:	jne    0x421d51
  421cfd:	mov    al,BYTE PTR [eax-0x2f984a72]
  421d03:	sbb    edx,eax
  421d05:	jmp    FWORD PTR [edx+ebp*1+0x5d5c4eb0]
  421d0c:	adc    BYTE PTR [esi+0x7288ee90],al
  421d12:	sbb    DWORD PTR [ecx+0x5d13c794],ebp
  421d18:	pop    eax
  421d19:	(bad)  
  421d1a:	cli    
  421d1b:	add    DWORD PTR [eax],ecx
  421d1d:	(bad)  
  421d1e:	jmp    0x1f9d:0x551347a2
  421d25:	dec    bl
  421d27:	or     DWORD PTR [ebx-0x3f],ebp
  421d2a:	iret   
  421d2b:	paddusw mm4,QWORD PTR [eax]
  421d2e:	inc    edi
  421d2f:	cs mov esi,0xcd10cae0
  421d35:	mov    ecx,0xd1b20000
  421d3a:	mov    esi,0x330fb121
  421d3f:	adc    al,0xb2
  421d41:	fldcw  WORD PTR [esi+0x330fa121]
  421d47:	and    al,0xb2
  421d49:	loope  0x421ce9
  421d4b:	and    DWORD PTR [ecx-0x26c7ec2f],edx
  421d51:	outs   dx,BYTE PTR ds:[esi]
  421d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d53:	shl    BYTE PTR [eax],0xb3
  421d56:	lahf   
  421d57:	inc    ebp
  421d58:	ror    BYTE PTR [ecx],cl
  421d5a:	sbb    al,0x8d
  421d5c:	jle    0x421ce9
  421d5e:	sbb    BYTE PTR [ebx],0x55
  421d61:	push   ds
  421d62:	into   
  421d63:	mov    ah,0x7
  421d65:	mov    eax,0xf638d15
  421d6a:	sti    
  421d6b:	xchg   esp,esp
  421d6d:	leave  
  421d6e:	out    0x8a,al
  421d70:	xchg   esi,eax
  421d71:	in     eax,0xf2
  421d73:	mov    WORD PTR [ecx+0x3a8f9205],ds
  421d79:	(bad)  
  421d7b:	add    al,0x14
  421d7d:	mov    edx,0xfc02f63d
  421d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d83:	add    ebp,DWORD PTR ds:0xd503eb70
  421d89:	adc    BYTE PTR [esi],0xd4
  421d8c:	call   edx
  421d8e:	adc    edx,DWORD PTR [esi-0x2b424b65]
  421d94:	inc    edx
  421d95:	and    dl,BYTE PTR [esi]
  421d97:	sbb    al,0xf9
  421d99:	push   cs
  421d9a:	push   0x43
  421d9c:	add    BYTE PTR [eax],al
  421d9e:	addr16 out 0x93,al
  421da1:	aam    0x2a
  421da3:	mov    bh,0xff
  421da5:	test   al,0xae
  421da7:	sub    al,bh
  421da9:	out    dx,al
  421daa:	mov    edx,0xd05cbf8a
  421daf:	add    DWORD PTR [ebp+eiz*8+0x5f],0xd6e9878e
  421db7:	or     DWORD PTR [eax-0x57],ebp
  421dba:	mov    dl,0x7
  421dbc:	add    BYTE PTR [ecx],bl
  421dbe:	sar    bl,cl
  421dc0:	jmp    0x421d9d
  421dc2:	xchg   esi,eax
  421dc3:	push   cs
  421dc4:	sub    DWORD PTR [ecx-0x2b0304c3],0x52
  421dcb:	clc    
  421dcc:	aas    
  421dcd:	jmp    0xfd65e833
  421dd2:	mov    esi,0xd6e93ab9
  421dd7:	sub    bh,0xd2
  421dda:	fstp   QWORD PTR [edx-0x2323d4c]
  421de0:	sbb    DWORD PTR [eax+edx*8+0x9],0x0
  421de5:	bound  ebx,QWORD PTR [ebx]
  421de7:	daa    
  421de8:	pushf  
  421de9:	scas   eax,DWORD PTR es:[edi]
  421dea:	(bad)  
  421deb:	or     DWORD PTR [ebx+0x4fea3aad],ecx
  421df1:	daa    
  421df2:	sbb    eax,0x51e918ea
  421df7:	mov    ds:0xc2e90523,al
  421dfc:	les    eax,FWORD PTR [edi-0x2e]
  421dff:	rol    edx,1
  421e01:	mov    ch,0x0
  421e03:	add    BYTE PTR [esi+edi*4],ah
  421e06:	out    0xb9,eax
  421e08:	retf   
  421e09:	or     al,0xfc
  421e0b:	push   0x75
  421e0d:	jmp    0x65bf:0x7be3ed23
  421e14:	xchg   ecx,eax
  421e15:	call   0xe81f:0xea0d2e07
  421e1c:	(bad)  
  421e1d:	or     DWORD PTR [eax],eax
  421e1f:	add    BYTE PTR ds:0x7a0f005c,dl
  421e25:	lahf   
  421e26:	cld    
  421e27:	(bad)  
  421e28:	in     al,dx
  421e29:	jl     0x421e93
  421e2b:	and    al,0x4
  421e2d:	add    DWORD PTR [ebx+0x4],0xffffffa4
  421e31:	or     eax,0x85abfea6
  421e36:	mov    esp,0xfc93300f
  421e3b:	jmp    FWORD PTR [eax+eax*4+0x21f8031a]
  421e42:	adc    al,0x8d
  421e44:	(bad)  
  421e45:	std    
  421e46:	dec    edi
  421e47:	call   0x3e6719
  421e4c:	xor    cl,cl
  421e4e:	jno    0x421eb4
  421e50:	add    al,0x45
  421e52:	and    BYTE PTR [esi],dl
  421e54:	cld    
  421e55:	ins    BYTE PTR es:[edi],dx
  421e56:	and    BYTE PTR [esi],dl
  421e58:	ins    BYTE PTR es:[edi],dx
  421e59:	ja     0x421e70
  421e5b:	mov    esi,DWORD PTR [ebx-0x1b7f78ff]
  421e61:	or     BYTE PTR [eax],al
  421e63:	add    ah,al
  421e65:	jge    0x421e76
  421e67:	add    BYTE PTR [eax],al
  421e69:	add    BYTE PTR [ecx+ebx*2-0x5],ch
  421e6d:	adc    eax,0x3c1ad8
  421e72:	ror    eax,0x70
  421e75:	cmp    edi,eax
  421e77:	inc    ebx
  421e78:	add    BYTE PTR [ebx+0x44876d74],cl
  421e7e:	shl    BYTE PTR ds:0xe14f0166,1
  421e84:	stc    
  421e85:	shr    bl,cl
  421e87:	jmp    0x421e0a
  421e89:	shl    BYTE PTR [ebp+0x17],0xe4
  421e8d:	sahf   
  421e8e:	fldz   
  421e90:	sti    
  421e91:	test   BYTE PTR [esp+esi*2+0x2530fe16],bh
  421e98:	adc    al,BYTE PTR [eax+0x15e476d5]
  421e9e:	shl    BYTE PTR [eax+0x52],1
  421ea1:	call   0x9bc41986
  421ea6:	jmp    0x421eb3
  421ea8:	mov    BYTE PTR [eax-0x27],al
  421eab:	fadd   st(4),st
  421ead:	and    eax,edx
  421eaf:	and    DWORD PTR [eax+0x50cf97b],eax
  421eb5:	jae    0x421e98
  421eb7:	xchg   edi,eax
  421eb8:	inc    esp
  421eb9:	mov    BYTE PTR [ebx-0x2ac057b6],dl
  421ebf:	and    cl,ch
  421ec1:	add    BYTE PTR [ecx-0x1],0xfb
  421ec5:	aaa    
  421ec6:	xchg   ebx,eax
  421ec7:	out    0xe7,al
  421ec9:	adc    al,0xd4
  421ecb:	lahf   
  421ecc:	(bad)  
  421ecd:	and    eax,DWORD PTR [eax]
  421ecf:	add    BYTE PTR [ebp+0x338c51a],bh
  421ed5:	pop    ds
  421ed6:	or     ecx,DWORD PTR [ebx+eiz*1+0x4efc1a6c]
  421edd:	rol    DWORD PTR [edi],cl
  421edf:	push   0xffffffd7
  421ee1:	aam    0x2b
  421ee3:	xor    eax,0x831a843d
  421ee8:	xchg   ebp,eax
  421ee9:	push   ss
  421eea:	add    eax,0xf33f19c6
  421eef:	(bad)  
  421ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ef1:	ja     0x421ece
  421ef3:	pop    ebx
  421ef4:	stc    
  421ef5:	or     edx,DWORD PTR [ecx+ecx*1+0x4586f44a]
  421efc:	fxch   st(2)
  421efe:	ror    edx,1
  421f00:	cmp    edi,DWORD PTR [ebx-0x6026ba7a]
  421f06:	sbb    esi,DWORD PTR [ecx]
  421f08:	test   al,0x7
  421f0a:	jg     0x421f03
  421f0c:	mov    esp,0xc0fcc055
  421f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f12:	icebp  
  421f13:	aas    
  421f14:	aad    0x9
  421f16:	rol    bh,cl
  421f18:	mov    dh,0xed
  421f1a:	fild   DWORD PTR [ebx-0x6a199af3]
  421f20:	test   eax,0xd5a9b5b3
  421f25:	mov    cl,0xe
  421f27:	test   eax,0x87fd0bec
  421f2c:	and    dl,BYTE PTR [esi-0x277e4f23]
  421f32:	es sub al,0x0
  421f35:	add    BYTE PTR [eax],dh
  421f37:	adc    ch,ah
  421f39:	sbb    al,0x56
  421f3b:	dec    edx
  421f3c:	push   ebx
  421f3d:	or     ah,BYTE PTR [ebx+esi*4]
  421f40:	inc    eax
  421f41:	add    bl,BYTE PTR ds:0xb11a3622
  421f47:	or     eax,ebp
  421f49:	not    BYTE PTR [esi-0x8]
  421f4c:	es add al,0x5a
  421f4f:	(bad)  
  421f50:	or     al,BYTE PTR [eax]
  421f52:	cwde   
  421f53:	aam    0xbe
  421f55:	call   0xb5e72be2
  421f5a:	jb     0x421f41
  421f5c:	xchg   esp,eax
  421f5d:	sbb    eax,0x82d7f81
  421f62:	(bad)  
  421f63:	jge    0x421f4b
  421f65:	add    edx,ebp
  421f67:	mov    ecx,0xf88ef685
  421f6c:	es add al,0x4c
  421f6f:	ret    
  421f70:	jmp    0xd503:0xe681da88
  421f77:	mov    eax,ds:0x9ed94a6
  421f7c:	mov    bh,0x1c
  421f7e:	out    0x1d,eax
  421f80:	clc    
  421f81:	ret    
  421f82:	cmp    al,BYTE PTR [esi+0x14560c26]
  421f88:	inc    ebx
  421f89:	sbb    al,0x29
  421f8b:	pop    ds
  421f8c:	jmp    0x95ea:0x59988
  421f93:	mov    edx,0xf8d2d4fc
  421f98:	aas    
  421f99:	jmp    0xad8b1f9e
  421f9e:	pop    edx
  421f9f:	ret    0x284d
  421fa2:	pop    edx
  421fa3:	sub    ch,BYTE PTR [edi+edi*8]
  421fa6:	addr16 xchg ecx,eax
  421fa8:	cmp    ecx,edx
  421faa:	call   DWORD PTR [eax]
  421fac:	or     DWORD PTR [ebx+0x1505e8fe],esp
  421fb2:	push   ds
  421fb3:	jl     0x421f6f
  421fb5:	add    DWORD PTR [ecx-0x53],0x9e0c47d5
  421fbc:	cdq    
  421fbd:	test   BYTE PTR [edx+0xcf1d82d],0x9e
  421fc4:	xchg   ecx,eax
  421fc5:	add    al,0x66
  421fc7:	sbb    DWORD PTR fs:[edi-0x532cace0],edx
  421fce:	gs add al,cl
  421fd1:	cdq    
  421fd2:	sbb    BYTE PTR [edx+0x40],ah
  421fd5:	scas   al,BYTE PTR es:[edi]
  421fd6:	add    BYTE PTR [ebx-0x591c68a0],bh
  421fdc:	pusha  
  421fdd:	mov    dl,0x55
  421fdf:	sahf   
  421fe0:	test   BYTE PTR [edx-0x792ed6f2],dh
  421fe6:	mov    edi,0xf5d8d415
  421feb:	jo     0x422031
  421fed:	sub    BYTE PTR es:[edi*4-0x555077f3],0xff
  421ff6:	xor    BYTE PTR [ecx-0x3377b6e7],ch
  421ffc:	dec    BYTE PTR [ecx+0x5d4a]
  422002:	fcompp 
  422004:	mov    edi,0xfea23341
  422009:	call   0x51c0a9
  42200e:	add    al,0x5e
  422010:	popa   
  422011:	inc    ebx
  422012:	sub    al,0xde
  422014:	(bad)  
  422015:	addr16 sub eax,0x2c458706
  42201b:	jnp    0x42200b
  42201d:	mov    esi,DWORD PTR [ecx]
  42201f:	(bad)  
  422020:	jle    0x422087
  422022:	loopne 0x422029
  422024:	xchg   DWORD PTR [ecx+0x20],edx
  422027:	cmp    DWORD PTR [eax+0x5980a],0x0
  42202e:	cld    
  42202f:	inc    BYTE PTR [ebx+0x5ec9e]
  422035:	mov    eax,DWORD PTR [eax-0x43ff6005]
  42203b:	or     eax,0x8acc5d83
  422040:	fmul   DWORD PTR [edi]
  422042:	cmp    BYTE PTR [ecx-0x67530005],dl
  422048:	push   esi
  422049:	or     al,0xbf
  42204b:	inc    esi
  42204c:	sbb    BYTE PTR [ebp-0x5c],0x92
  422050:	pop    ss
  422051:	add    DWORD PTR [ebx+0x45],ebp
  422054:	sbb    al,al
  422056:	iret   
  422057:	push   eax
  422058:	mov    BYTE PTR [esi+esi*2-0x27],dl
  42205c:	sub    dl,dh
  42205e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42205f:	daa    
  422060:	cmp    BYTE PTR [ebp+0x70],0x98
  422064:	push   esi
  422065:	adc    BYTE PTR [eax],al
  422067:	add    BYTE PTR [edi+0x46],ch
  42206a:	sbb    BYTE PTR [ebp+0x5c],0x90
  42206e:	cmp    BYTE PTR [eax],al
  422070:	push   0x785388b9
  422075:	nop
  422076:	stc    
  422077:	or     BYTE PTR [esi-0x34],bl
  42207a:	xchg   BYTE PTR [edx-0x3c],bh
  42207d:	cmp    eax,0xfd3189ec
  422082:	and    BYTE PTR [ebp-0x68],0xc
  422086:	mov    DWORD PTR [ebp-0x2b],edx
  422089:	push   esi
  42208a:	fcmovbe st,st(4)
  42208c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42208d:	push   ds
  42208e:	pop    es
  42208f:	mov    ch,0x81
  422091:	mov    ds:0x25586607,eax
  422096:	mov    esp,DWORD PTR [edx]
  422098:	push   esp
  422099:	push   ebp
  42209a:	push   ss
  42209b:	or     al,0xd5
  42209d:	repnz add dl,BYTE PTR [ecx]
  4220a0:	(bad)  
  4220a1:	inc    ecx
  4220a2:	ficom  DWORD PTR [edx-0x33]
  4220a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a6:	icebp  
  4220a7:	adc    BYTE PTR ds:0x538fba7,0xa0
  4220ae:	or     DWORD PTR [ecx+0x39ecfe68],ecx
  4220b4:	dec    esi
  4220b5:	int    0x2
  4220b7:	dec    BYTE PTR [ebp+edi*4-0x76]
  4220bb:	jp     0x4220a2
  4220bd:	idiv   DWORD PTR [ebx+0x5b5bee3]
  4220c3:	pop    ecx
  4220c4:	(bad)  
  4220c6:	pusha  
  4220c7:	or     BYTE PTR [eax],0xdf
  4220ca:	sbb    DWORD PTR [edi-0x342c0000],ebp
  4220d0:	add    esi,DWORD PTR [ecx]
  4220d2:	xchg   ebp,eax
  4220d3:	xor    al,BYTE PTR [ebp-0x78]
  4220d6:	cmp    bl,bl
  4220d8:	test   DWORD PTR [edx-0x67],ecx
  4220db:	mov    edi,0x277dbfd2
  4220e0:	mov    eax,ds:0x8b48afe
  4220e5:	add    bh,ch
  4220e7:	(bad)  
  4220e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e9:	xchg   edi,eax
  4220ea:	lock xor eax,DWORD PTR [eax+ebp*8]
  4220ee:	fmul   DWORD PTR [edi]
  4220f0:	(bad)  
  4220f1:	call   FWORD PTR [esi-0x7f]
  4220f4:	aad    0xd8
  4220f6:	dec    esp
  4220f7:	and    eax,0xbf138818
  4220fc:	mov    WORD PTR [ebx+0x5],?
  4220ff:	and    ecx,DWORD PTR [edx+ebx*2-0x3c30f6ce]
  422106:	mov    edx,0xd5041909
  42210b:	pusha  
  42210c:	mov    dh,0x18
  42210e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42210f:	adc    DWORD PTR [edx-0x11],ecx
  422112:	mov    bl,BYTE PTR [edx]
  422114:	test   eax,0x494e5a03
  422119:	fst    QWORD PTR ds:0xa8b08e7d
  42211f:	icebp  
  422120:	movups xmm1,XMMWORD PTR [eax]
  422123:	or     BYTE PTR [edi+0x4c],ch
  422126:	pop    ebx
  422127:	push   esi
  422128:	cmp    eax,0xd87d0ddd
  42212d:	mov    ah,0x85
  42212f:	pop    edi
  422130:	pop    esi
  422131:	scas   eax,DWORD PTR es:[edi]
  422132:	add    BYTE PTR [eax],al
  422134:	or     dh,cl
  422136:	pop    ds
  422137:	sbb    ah,cl
  422139:	pop    es
  42213a:	inc    sp
  42213c:	and    dx,WORD PTR [esi+0xd7dd1b0]
  422143:	sbb    DWORD PTR [edi-0x16],eax
  422146:	loop   0x4220d6
  422148:	fiadd  DWORD PTR [esi]
  42214a:	cmc    
  42214b:	lahf   
  42214c:	retf   
  42214d:	dec    ecx
  42214e:	jmp    0xa965ab63
  422153:	adc    BYTE PTR [edx-0x5eded36e],al
  422159:	jge    0x4220f8
  42215b:	sub    esp,esp
  42215d:	std    
  42215e:	mov    bl,0x18
  422160:	retf   0xc264
  422163:	mov    fs,edi
  422165:	jno    0x422150
  422167:	add    DWORD PTR [edx+0x7193707],0xffffffea
  42216e:	xchg   edx,eax
  42216f:	mov    ds,edx
  422171:	push   es
  422172:	cmc    
  422173:	mov    bh,0xdb
  422175:	dec    ecx
  422176:	jmp    0x672c2105
  42217b:	(bad)  
  42217c:	pop    esi
  42217d:	pop    es
  42217e:	add    DWORD PTR [edx-0x6d],esp
  422181:	out    0xe7,eax
  422183:	fsub   QWORD PTR [ecx]
  422185:	mov    DWORD PTR [eax+0x2a],0x6ae86c51
  42218c:	adc    eax,DWORD PTR [ebx]
  42218e:	cld    
  42218f:	sbb    bl,BYTE PTR [ecx-0x28385f12]
  422195:	or     DWORD PTR [esi-0x29ffff13],edi
  42219b:	jae    0x4221b5
  42219d:	rcr    DWORD PTR [esi+0x6c],1
  4221a0:	aas    
  4221a1:	jmp    0xe8a47e64
  4221a6:	(bad)  
  4221a7:	nop
  4221a8:	stc    
  4221a9:	push   0x63
  4221ab:	add    eax,DWORD PTR [ecx]
  4221ad:	jb     0x4221c4
  4221af:	inc    ebx
  4221b0:	jmp    FWORD PTR ds:0x6280ef59
  4221b6:	push   es
  4221b7:	mov    edx,?
  4221b9:	jge    0x4221f2
  4221bb:	mov    bh,BYTE PTR [eax-0x1b]
  4221be:	jmp    0x758f:0xe5ea577c
  4221c5:	adc    DWORD PTR [ecx+0x44],edx
  4221c8:	add    BYTE PTR [ebp-0x78],bl
  4221cb:	xchg   ecx,eax
  4221cc:	inc    edx
  4221cd:	in     eax,dx
  4221ce:	xlat   BYTE PTR ds:[ebx]
  4221cf:	int3   
  4221d0:	push   eax
  4221d1:	(bad)  
  4221d2:	fs push cs
  4221d4:	mov    DWORD PTR [ecx+esi*8],esp
  4221d7:	mov    eax,eax
  4221d9:	cmp    eax,0xea1a9169
  4221de:	jecxz  0x422171
  4221e0:	inc    edx
  4221e1:	(bad)  
  4221e3:	int3   
  4221e4:	mov    DWORD PTR [esi*4+0x4ec55d8f],esp
  4221eb:	or     DWORD PTR [ebp+0x792d65a9],eax
  4221f1:	out    dx,al
  4221f2:	jne    0x4221f9
  4221f4:	cld    
  4221f5:	jmp    0x4812d0
  4221fa:	outs   dx,DWORD PTR ds:[esi]
  4221fb:	inc    edi
  4221fc:	add    al,0x0
  4221ff:	add    BYTE PTR [esi-0x46],ch
  422202:	cld    
  422203:	jne    0x422261
  422205:	push   ds
  422206:	dec    esi
  422207:	or     al,0xb1
  422209:	dec    ebp
  42220a:	outs   dx,DWORD PTR ds:[esi]
  42220b:	and    al,bh
  42220d:	rcr    bh,1
  42220f:	mov    DWORD PTR ds:0xbf04c08b,ebp
  422215:	enter  0x4df,0x97
  422219:	cmp    eax,0x3300c680
  42221e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42221f:	sub    DWORD PTR [ecx+0x1e],0xfffffffc
  422223:	mov    al,0xfd
  422225:	xor    al,BYTE PTR [esi]
  422227:	xor    edi,DWORD PTR [ebp+ecx*8+0x32518bc0]
  42222e:	or     BYTE PTR [ebp-0x28],0x1e
  422232:	xor    eax,eax
  422234:	aam    0xb
  422236:	bound  eax,QWORD PTR [ecx]
  422238:	cld    
  422239:	inc    edi
  42223a:	add    eax,DWORD PTR [eax]
  42223c:	inc    esi
  42223d:	add    ah,BYTE PTR [eax+ecx*2+0x51]
  422241:	retf   
  422242:	sti    
  422243:	out    0x4,eax
  422245:	stos   DWORD PTR es:[edi],eax
  422246:	cli    
  422247:	dec    DWORD PTR [edi-0x6ca27cc0]
  42224d:	xchg   esi,eax
  42224e:	push   esi
  42224f:	cld    
  422250:	inc    edi
  422251:	into   
  422252:	aaa    
  422253:	mov    esi,DWORD PTR [eax]
  422255:	adc    DWORD PTR [eax+0x3909bc00],eax
  42225b:	shl    edx,cl
  42225d:	mov    ebp,0x85a4bc80
  422262:	sti    
  422263:	inc    DWORD PTR [eax]
  422265:	add    BYTE PTR [ebp+esi*8+0x75],bh
  422269:	inc    esi
  42226a:	sub    ebp,edx
  42226c:	or     DWORD PTR [ecx+0x68845e1],ecx
  422272:	ja     0x4222bc
  422274:	outs   dx,DWORD PTR ds:[esi]
  422275:	cmp    dl,ch
  422277:	ins    DWORD PTR es:[edi],dx
  422278:	rol    DWORD PTR [edi],cl
  42227a:	pop    esi
  42227b:	sub    eax,0x7a9400f4
  422280:	rcr    bl,0x4c
  422283:	push   es
  422284:	and    BYTE PTR [esi],dh
  422286:	repnz push es
  422288:	clc    
  422289:	mov    BYTE PTR [eax-0x37f02916],ah
  42228f:	stc    
  422290:	xchg   BYTE PTR [edx-0x37],dl
  422293:	jns    0x422284
  422295:	lds    ebx,FWORD PTR [eax+0x12810453]
  42229b:	out    dx,eax
  42229c:	jle    0x42225d
  42229e:	fst    DWORD PTR [edi+0x35]
  4222a1:	adc    BYTE PTR [ebx],0xdf
  4222a4:	es mov esi,0x5ec0bf32
  4222ab:	into   
  4222ac:	daa    
  4222ad:	lds    ebx,FWORD PTR [eax-0x777f00ed]
  4222b3:	adc    cl,BYTE PTR es:[ecx+0x7e271398]
  4222ba:	jo     0x4222ad
  4222bc:	inc    ecx
  4222be:	int    0xf2
  4222c0:	xchg   BYTE PTR [ebp-0x37],al
  4222c3:	ins    DWORD PTR es:[edi],dx
  4222c4:	aas    
  4222c5:	jae    0x4222a1
  4222c7:	mov    ds:0x1212,al
  4222cc:	adc    ebx,esp
  4222ce:	mov    edi,0x27b44fff
  4222d3:	xor    bl,dl
  4222d5:	jecxz  0x4222ec
  4222d7:	push   ebp
  4222d8:	pop    esi
  4222d9:	loop   0x422307
  4222db:	mov    ch,0xcb
  4222dd:	rcl    DWORD PTR ds:0xd9469583,cl
  4222e3:	push   esp
  4222e4:	dec    eax
  4222e5:	inc    esp
  4222e6:	or     BYTE PTR [ecx+0x734475da],cl
  4222ec:	shl    BYTE PTR [edx],cl
  4222ee:	adc    eax,0xf90a1912
  4222f3:	ret    
  4222f4:	jp     0x42227d
  4222f6:	sbb    eax,0x1d09dee0
  4222fb:	in     al,0x1
  4222fd:	jo     0x4222e8
  4222ff:	test   eax,0x2dd6c62
  422304:	aad    0x9
  422306:	jp     0x422298
  422308:	mul    BYTE PTR ds:0x1e49ce72
  42230e:	sub    esp,esi
  422310:	add    cl,BYTE PTR [edx]
  422312:	ins    BYTE PTR es:[edi],dx
  422313:	inc    esp
  422314:	(bad)  
  422315:	or     ecx,DWORD PTR [eax]
  422317:	std    
  422318:	in     al,0xc9
  42231a:	add    ah,BYTE PTR ds:[ebp+0xa]
  42231e:	stos   BYTE PTR es:[edi],al
  42231f:	mov    ch,0x14
  422321:	or     eax,0xf54daee9
  422326:	cwde   
  422327:	mov    dl,0x5d
  422329:	dec    ecx
  42232a:	in     eax,0x3c
  42232c:	xchg   edi,eax
  42232d:	add    eax,0x3e6
  422332:	aad    0x9
  422334:	ins    BYTE PTR es:[edi],dx
  422335:	inc    esp
  422336:	xchg   BYTE PTR ds:0x565e038f,ch
  42233c:	adc    eax,0x11565fb3
  422341:	mov    bl,0x6c
  422343:	adc    bl,BYTE PTR [ecx-0x26ba38ec]
  422349:	ret    
  42234a:	ror    BYTE PTR [esi-0x79206fd7],cl
  422350:	ins    BYTE PTR es:[edi],dx
  422351:	pop    ss
  422352:	(bad)  
  422353:	jl     0x42233f
  422355:	mov    BYTE PTR [edi],dl
  422357:	add    dl,BYTE PTR [edx+0x160826fc]
  42235d:	inc    esp
  42235e:	inc    ebx
  42235f:	xchg   edi,eax
  422361:	cld    
  422362:	aad    0xc7
  422364:	test   al,0x1b
  422366:	aad    0xd0
  422368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422369:	scas   al,BYTE PTR es:[edi]
  42236a:	pop    ebp
  42236b:	test   BYTE PTR [eax],0x1a
  42236e:	pop    esp
  42236f:	fild   DWORD PTR [edi-0x44a515a]
  422375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422376:	loope  0x4223b9
  422378:	fcom   DWORD PTR ds:0x82c037d5
  42237e:	cmp    BYTE PTR [ebp+0x4f],bl
  422381:	mov    ss,WORD PTR [ebx+0xb]
  422384:	call   0xfc46e7f8
  422389:	jb     0x422371
  42238b:	xchg   edx,esi
  42238d:	cld    
  42238e:	dec    edx
  42238f:	cmp    eax,eax
  422391:	adc    BYTE PTR [edi],0x90
  422394:	inc    esp
  422395:	pop    es
  422396:	add    BYTE PTR [eax],al
  422398:	loopne 0x42232b
  42239a:	retf   0xc922
  42239d:	jns    0x4223b3
  42239f:	arpl   WORD PTR [edi],sp
  4223a1:	mov    edx,DWORD PTR [ebp-0x1e]
  4223a4:	dec    esp
  4223a5:	adc    ecx,DWORD PTR [eax+0x7584cd8]
  4223ab:	test   al,0x5e
  4223ad:	adc    ecx,DWORD PTR [eax-0xe]
  4223b0:	sahf   
  4223b1:	js     0x42239f
  4223b3:	ret    
  4223b4:	(bad)  
  4223b5:	outs   dx,DWORD PTR ds:[esi]
  4223b6:	add    BYTE PTR [esi],ah
  4223b8:	dec    ecx
  4223b9:	cmovg  esi,DWORD PTR [edi+0x16047dc9]
  4223c0:	sti    
  4223c1:	cmp    dl,BYTE PTR [eax]
  4223c3:	test   eax,0x6588ed6
  4223c8:	leave  
  4223c9:	loope  0x4223e1
  4223cb:	and    al,BYTE PTR [eax+0x1101c004]
  4223d1:	hlt    
  4223d2:	cli    
  4223d3:	out    dx,al
  4223d4:	dec    ebp
  4223d5:	leave  
  4223d6:	pop    edx
  4223d7:	inc    edx
  4223d8:	test   al,cl
  4223da:	add    al,0xe9
  4223dc:	ins    DWORD PTR es:[edi],dx
  4223dd:	xchg   ecx,eax
  4223de:	in     al,dx
  4223df:	push   0xfffffffd
  4223e1:	cli    
  4223e2:	jg     0x4223a1
  4223e4:	mov    ecx,0x84005359
  4223e9:	sub    DWORD PTR [edx],edx
  4223eb:	add    BYTE PTR [ebx+eax*4+0x76],bh
  4223ef:	adc    al,0xf8
  4223f1:	dec    ebp
  4223f2:	outs   dx,DWORD PTR ds:[esi]
  4223f3:	jl     0x422416
  4223f5:	rcr    BYTE PTR [edi],cl
  4223f7:	or     al,0xbc
  4223f9:	mov    ds:0x8d13,eax
  4223fe:	mov    eax,0xd65013f1
  422403:	or     eax,0xd669ff55
  422408:	rol    DWORD PTR [ebx+0x6c],1
  42240b:	xchg   ecx,eax
  42240c:	mov    ebx,0x778adf78
  422411:	and    al,0x28
  422413:	push   es
  422414:	je     0x422472
  422416:	scas   eax,DWORD PTR es:[edi]
  422417:	cdq    
  422418:	pop    ds
  422419:	and    BYTE PTR [edx+ebx*4],ch
  42241c:	push   es
  42241d:	dec    DWORD PTR [eax]
  42241f:	jmp    0xfffc:0x71e2e81b
  422426:	mov    ecx,0x93486e4d
  42242b:	mov    eax,ds:0x63a4201f
  422430:	adc    al,0x0
  422432:	cld    
  422433:	adc    bl,0x85
  422436:	out    0xa1,eax
  422438:	xor    ch,BYTE PTR [edx-0x14]
  42243b:	mov    edx,0xdd4aee3
  422440:	add    BYTE PTR [ebp+0x2b25a1bc],al
  422446:	stc    
  422447:	icebp  
  422448:	rol    DWORD PTR [ebx-0x14],1
  42244b:	adc    BYTE PTR [edi-0xdf281e0],bl
  422451:	add    eax,0x4037b4
  422456:	pushf  
  422457:	cdq    
  422458:	add    cl,BYTE PTR [ebx-0x7ecf05ff]
  42245e:	dec    esp
  42245f:	or     eax,0x0
  422464:	aad    0x6b
  422466:	rcr    BYTE PTR [ebx],0x4c
  422469:	jb     0x4224ba
  42246b:	call   FWORD PTR [edx-0x17034d0d]
  422471:	mov    edx,0xb7d53ff5
  422476:	cwde   
  422477:	and    eax,DWORD PTR [edx+0xfce436]
  42247d:	pop    es
  42247e:	(bad)  
  422480:	int    0x37
  422482:	(bad)  
  422484:	lds    edx,FWORD PTR [edi+0x16620b98]
  42248a:	cld    
  42248b:	cld    
  42248c:	rcr    dl,0x35
  42248f:	inc    eax
  422490:	aad    0x1f
  422492:	stos   DWORD PTR es:[edi],eax
  422493:	mov    BYTE PTR [eax],dh
  422495:	push   ss
  422496:	inc    edx
  422497:	pop    ds
  422498:	aad    0x15
  42249a:	jnp    0x422487
  42249c:	push   esp
  42249d:	push   edi
  42249e:	cmp    eax,DWORD PTR [ecx]
  4224a0:	aad    0xf2
  4224a2:	mov    dl,0xfc
  4224a4:	mov    al,ds:0xcd5a7b22
  4224a9:	dec    edi
  4224aa:	cwde   
  4224ab:	sub    ebx,DWORD PTR [edx]
  4224ad:	mov    esi,0x688fcd7
  4224b2:	(bad)  
  4224b4:	mov    ch,0x37
  4224b6:	cwde   
  4224b7:	sbb    eax,DWORD PTR [edx]
  4224b9:	mov    dh,0xe7
  4224bb:	cld    
  4224bc:	cmp    dh,0xe
  4224bf:	jb     0x422486
  4224c1:	pop    ds
  4224c2:	cwde   
  4224c3:	or     eax,DWORD PTR [esi+0x2bf817]
  4224c9:	add    BYTE PTR [edi],al
  4224cb:	mov    ah,0xff
  4224cd:	xchg   BYTE PTR [eax-0x1d40772a],dl
  4224d3:	jp     0x4224ec
  4224d5:	dec    edx
  4224d7:	repnz sbb DWORD PTR [edx-0x7],eax
  4224db:	icebp  
  4224dc:	inc    BYTE PTR [ebx+0x3e9099b]
  4224e2:	aad    0x86
  4224e4:	mov    esi,0xe9d75101
  4224e9:	add    edx,ebp
  4224eb:	mov    WORD PTR [eax+eax*1-0x2b],cs
  4224ef:	adc    BYTE PTR [ebp+0x40],ch
  4224f2:	xchg   edx,eax
  4224f3:	add    dl,ch
  4224f5:	sbb    esi,DWORD PTR [ecx+0x21]
  4224f8:	jmp    0xdb0b7e00
  4224fd:	xchg   DWORD PTR [ecx],edi
  4224ff:	or     ecx,ebp
  422501:	add    esi,DWORD PTR [eax+0x3c]
  422504:	call   0x5604:0x291afaf7
  42250b:	leave  
  42250c:	fiadd  DWORD PTR [edi+0x3e90929]
  422512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422513:	icebp  
  422514:	scas   al,BYTE PTR es:[edi]
  422515:	cli    
  422516:	dec    edx
  422517:	add    BYTE PTR [ecx-0x39],ah
  42251a:	xacquire xchg BYTE PTR [ecx-0x1660aeff],ch
  422521:	add    edx,ebp
  422523:	push   edi
  422524:	mov    dl,0x7c
  422526:	in     eax,dx
  422527:	jae    0x422512
  422529:	mov    bl,0x3a
  42252b:	(bad)  
  42252c:	repnz add eax,DWORD PTR [eax]
  42252f:	add    ch,dl
  422531:	xchg   esp,eax
  422532:	cmp    DWORD PTR [ebx-0x79],edi
  422535:	and    eax,0x7f861a64
  42253a:	(bad)  
  42253b:	(bad)  
  42253c:	(bad)  
  42253e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42253f:	add    ecx,DWORD PTR [esi+edi*2-0xb]
  422543:	jle    0x42259c
  422545:	xor    eax,0x58e9111c
  42254a:	adc    bl,cl
  42254c:	arpl   di,ax
  42254e:	inc    esp
  42254f:	in     al,0x94
  422551:	or     DWORD PTR [edx],ebp
  422553:	xchg   DWORD PTR [esi],eax
  422555:	std    
  422556:	cli    
  422557:	adc    ch,dl
  422559:	or     DWORD PTR [eax],eax
  42255b:	call   0x81582236
  422560:	(bad)  
  422561:	aas    
  422562:	add    BYTE PTR [esi+edx*1+0x7b],ch
  422566:	inc    eax
  422567:	jb     0x4225bc
  422569:	repz std 
  42256b:	(bad)  
  42256c:	lds    eax,FWORD PTR [ecx+0x5]
  42256f:	adc    eax,0x3c0049e3
  422574:	stos   DWORD PTR es:[edi],eax
  422575:	cmc    
  422576:	add    eax,0x49c0f1
  42257b:	fldcw  WORD PTR [edx+0x5]
  42257e:	das    
  42257f:	je     0x422533
  422581:	add    edi,esp
  422583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422584:	repz mov esi,DWORD PTR [esp+ebx*4]
  422588:	(bad)  
  42258b:	xchg   esi,eax
  42258c:	jge    0x422516
  42258e:	mov    ch,0x85
  422590:	retf   
  422591:	std    
  422592:	sti    
  422593:	scas   al,BYTE PTR es:[edi]
  422594:	add    BYTE PTR [eax],al
  422596:	pop    ebx
  422597:	cmp    edi,ebp
  422599:	jle    0x422580
  42259b:	or     BYTE PTR [eax],al
  42259d:	call   0xfd582278
  4225a2:	inc    edi
  4225a3:	aas    
  4225a4:	add    BYTE PTR [esi+edx*4+0x7b],ch
  4225a8:	push   cs
  4225a9:	rcl    esi,1
  4225ab:	mov    DWORD PTR [eax],eax
  4225ad:	jmp    0xd53d24f2
  4225b2:	xor    bh,dh
  4225b4:	das    
  4225b5:	inc    esi
  4225b6:	or     esp,DWORD PTR [ebx+0x11]
  4225b9:	test   eax,0xf975fcd6
  4225be:	in     eax,0x1b
  4225c0:	enter  0x16db,0xff
  4225c4:	pop    edx
  4225c5:	(bad)  
  4225c6:	jno    0x422613
  4225c8:	sub    al,0xc2
  4225ca:	scas   eax,DWORD PTR es:[edi]
  4225cb:	enter  0xe92c,0x2b
  4225cf:	xchg   edx,eax
  4225d0:	in     al,dx
  4225d1:	add    esi,esp
  4225d3:	push   ss
  4225d4:	add    BYTE PTR [eax],al
  4225d6:	mov    esp,0xb375bb86
  4225db:	scas   eax,DWORD PTR es:[edi]
  4225dc:	cld    
  4225dd:	and    eax,0x403484
  4225e2:	pop    edi
  4225e3:	ror    BYTE PTR [eax+0x55b7b075],0xff
  4225ea:	add    esi,esi
  4225ec:	imul   eax,DWORD PTR [eax],0xff03a08b
  4225f2:	mov    eax,ds:0x7c43d1ce
  4225f7:	mov    ah,0xfc
  4225f9:	jne    0x4225fb
  4225fb:	add    BYTE PTR [ebx+eax*4+0x9c1fff3],ch
  422602:	std    
  422603:	jne    0x422679
  422605:	femms  
  422607:	cmp    BYTE PTR [esi],ch
  422609:	retf   0x8afb
  42260c:	xchg   esp,eax
  42260d:	nop
  42260e:	cld    
  42260f:	jns    0x4225b1
  422611:	nop
  422612:	fdivr  DWORD PTR [eax-0x64]
  422615:	nop
  422616:	cmc    
  422617:	je     0x422621
  422619:	mov    edi,DWORD PTR ds:0x80c74000
  42261f:	jge    0x42263d
  422621:	or     dh,BYTE PTR [ecx+eax*2-0x16]
  422625:	mov    ecx,0xb43c43cb
  42262a:	cld    
  42262b:	adc    eax,0x3bfb94
  422630:	adc    BYTE PTR [eax],0x74
  422633:	shr    BYTE PTR [edi+0xa],1
  422636:	sti    
  422637:	je     0x42261a
  422639:	popf   
  42263a:	(bad)  
  42263b:	ja     0x422679
  42263d:	or     bh,ch
  42263f:	adc    eax,0x3bf5c4
  422644:	jno    0x42268b
  422646:	outs   dx,DWORD PTR ds:[esi]
  422647:	or     DWORD PTR [edi+0xd],esp
  42264a:	jecxz  0x422639
  42264c:	xchg   DWORD PTR [esi],ecx
  42264e:	cld    
  42264f:	jmp    0x422626
  422651:	repnz sar DWORD PTR [edi+0x4983051],1
  422658:	push   esi
  422659:	not    BYTE PTR [ebx+0x4f316cf]
  42265f:	push   esi
  422660:	add    BYTE PTR [eax],al
  422662:	ret    0x2bde
  422665:	adc    DWORD PTR ds:0x5e5daaf3,edx
  42266b:	mov    al,0xa6
  42266d:	pop    edx
  42266e:	xchg   edi,eax
  42266f:	add    eax,DWORD PTR [eax]
  422671:	push   esi
  422672:	or     ch,BYTE PTR [eax+0x7]
  422675:	sbb    BYTE PTR [edx-0x517d03aa],0x3f
  42267c:	(bad)  
  42267d:	push   ds
  42267e:	(bad)  
  42267f:	xlat   BYTE PTR ds:[ebx]
  422680:	aad    0x82
  422682:	sahf   
  422683:	aas    
  422684:	ror    BYTE PTR [edx-0x40770eee],cl
  42268a:	jmp    0x7c323e62
  42268f:	popf   
  422690:	or     cl,BYTE PTR [eax+0x73156e65]
  422696:	mov    cl,0xa
  422698:	aam    0x72
  42269a:	aad    0xf2
  42269c:	mov    dl,0x88
  42269e:	leave  
  42269f:	(bad)  
  4226a0:	repz push ebp
  4226a2:	sub    eax,0x3afc97c8
  4226a7:	addr16 aas 
  4226a9:	jb     0x42268a
  4226ab:	mov    esp,0x5d3a0517
  4226b0:	or     dh,BYTE PTR [ecx]
  4226b2:	adc    eax,0xe686df48
  4226b7:	mov    ds:0xdaefe904,al
  4226bc:	iret   
  4226bd:	jb     0x422694
  4226bf:	repnz mov dl,0xfc
  4226c2:	mov    DWORD PTR [esi],ecx
  4226c4:	clc    
  4226c5:	out    0x0,eax
  4226c7:	add    BYTE PTR [ebx-0x35],ah
  4226ca:	or     bh,ah
  4226cc:	pop    eax
  4226cd:	or     bh,BYTE PTR [esi]
  4226cf:	jns    0x4226e3
  4226d1:	or     eax,0xd1e04374
  4226d6:	mov    DWORD PTR [ecx+edi*2+0x5b],0x56d50727
  4226de:	outs   dx,BYTE PTR ds:[esi]
  4226df:	pop    ds
  4226e0:	push   ebp
  4226e1:	in     eax,dx
  4226e2:	loope  0x422666
  4226e4:	aas    
  4226e5:	push   cs
  4226e6:	jmp    0xffb87a90
  4226eb:	jp     0x422704
  4226ed:	out    dx,al
  4226ee:	pop    esp
  4226ef:	cli    
  4226f0:	cmp    al,0x7
  4226f2:	inc    ecx
  4226f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226f4:	pop    ebx
  4226f5:	inc    esi
  4226f6:	shl    DWORD PTR [ebp+ebp*4+0x2af73f14],0x70
  4226fe:	(bad)  [edi+eax*1]
  422701:	push   cs
  422702:	inc    ebx
  422703:	jnp    0x42271c
  422705:	repnz fs (bad) 
  422708:	outs   dx,DWORD PTR ds:[esi]
  422709:	pop    ecx
  42270a:	shl    DWORD PTR ds:0x9aa2fb80,0xc7
  422711:	mov    fs,WORD PTR [esp+ebx*1]
  422714:	adc    bh,ch
  422716:	sbb    al,0xfc
  422718:	jb     0x42278d
  42271a:	add    DWORD PTR ds:0x98a98551,ecx
  422720:	out    dx,eax
  422721:	arpl   WORD PTR [esi+edx*1-0x3a],sp
  422725:	sbb    dl,ah
  422727:	push   esp
  422728:	adc    BYTE PTR [ecx+0x6a],bl
  42272b:	xchg   edi,eax
  42272c:	add    BYTE PTR [eax],al
  42272e:	loop   0x42272c
  422730:	fdiv   st(3),st
  422732:	xor    bl,BYTE PTR [ebx-0x2f]
  422735:	or     al,0x21
  422737:	test   DWORD PTR [ecx],ebp
  422739:	cwde   
  42273a:	xlat   BYTE PTR ds:[ebx]
  42273b:	cmp    BYTE PTR [ecx],ch
  42273d:	(bad)  
  42273e:	std    
  42273f:	push   es
  422740:	test   BYTE PTR [ebx+0x13],0xc7
  422744:	in     eax,dx
  422745:	add    esp,DWORD PTR [esi+0x56450090]
  42274b:	lock add al,0xeb
  42274e:	(bad)  
  42274f:	or     DWORD PTR [edi-0x41],ecx
  422752:	and    DWORD PTR [ecx+eax*1-0x18],esp
  422756:	(bad)  
  422757:	or     DWORD PTR [ebp-0x4003a94],ecx
  42275d:	push   cs
  42275e:	mov    esi,edi
  422760:	jne    0x422753
  422762:	fst    DWORD PTR [edi]
  422764:	add    ch,dl
  422766:	xchg   esi,eax
  422767:	sti    
  422768:	xchg   BYTE PTR [ecx],dl
  42276a:	push   edx
  42276b:	loop   0x4227e7
  42276d:	ret    0xfe85
  422770:	das    
  422771:	(bad)  
  422773:	mov    ah,0x7c
  422775:	dec    edx
  422776:	cdq    
  422777:	sti    
  422778:	xchg   BYTE PTR [edi+0x4e],ah
  42277b:	push   0x40
  42277d:	jmp    0xc53eaf95
  422782:	fscale 
  422784:	push   eax
  422785:	jb     0x42279c
  422787:	jecxz  0x422751
  422789:	sahf   
  42278a:	enter  0x85fd,0xa9
  42278e:	dec    edx
  42278f:	sbb    DWORD PTR [edi-0x51],edi
  422792:	add    BYTE PTR [eax],al
  422794:	push   0x46
  422796:	jg     0x422737
  422798:	push   ds
  422799:	jns    0x422774
  42279b:	ficom  DWORD PTR [esi]
  42279d:	pop    esi
  42279e:	pop    edx
  42279f:	xor    cl,BYTE PTR [esi]
  4227a1:	leave  
  4227a2:	add    al,0xe9
  4227a4:	ins    DWORD PTR es:[edi],dx
  4227a5:	dec    BYTE PTR [edi+eax*1]
  4227a8:	mov    esp,0x110a8085
  4227ad:	sti    
  4227ae:	out    0x7c,al
  4227b0:	imul   edx,DWORD PTR [edx+0x36ca68ec],0x8
  4227b7:	jmp    0xc1957b92
  4227bc:	call   0xeae3:0x45e9fbfb
  4227c3:	add    BYTE PTR [edx+0x29fffc0c],ah
  4227c9:	mov    ecx,DWORD PTR [edx]
  4227cb:	inc    eax
  4227cc:	in     al,dx
  4227cd:	jg     0x42280f
  4227cf:	add    al,0x7f
  4227d1:	push   cs
  4227d2:	cld    
  4227d3:	jne    0x4227d0
  4227d5:	fdivr  DWORD PTR [ebx+0x92de9]
  4227db:	add    bh,bh
  4227dd:	adc    al,0x55
  4227df:	lea    edi,[ecx-0x7e]
  4227e2:	dec    ebx
  4227e3:	push   0x84836fad
  4227e8:	in     al,0x7c
  4227ea:	verw   WORD PTR [ebx+edi*2+0xd4c843e]
  4227f2:	push   cs
  4227f3:	sub    al,0xa8
  4227f5:	(bad)  
  4227f6:	sti    
  4227f7:	mov    BYTE PTR [eax],al
  4227f9:	add    bh,ch
  4227fb:	std    
  4227fc:	cmp    dh,al
  4227fe:	clc    
  4227ff:	imul   eax,DWORD PTR ss:[ecx],0x507fc931
  422806:	and    al,0xf4
  422808:	xchg   edx,eax
  422809:	mov    al,bh
  42280b:	sbb    eax,0x66c1466
  422810:	xchg   DWORD PTR [ebp-0x8],eax
  422813:	mov    ch,0x55
  422815:	push   0x7d
  422817:	dec    edi
  422818:	cmp    edx,edx
  42281a:	scas   eax,DWORD PTR es:[edi]
  42281b:	add    eax,0x2a59ff55
  422820:	adc    DWORD PTR [eax+0x3c],eax
  422823:	jge    0x422865
  422825:	or     al,0x17
  422827:	dec    eax
  422828:	outs   dx,DWORD PTR ds:[esi]
  422829:	lods   eax,DWORD PTR ds:[esi]
  42282a:	out    0x4,al
  42282c:	xchg   DWORD PTR [ebp-0x58],eax
  42282f:	mov    ch,0x63
  422831:	and    dl,BYTE PTR [esi+ecx*4]
  422834:	adc    ebp,eax
  422836:	jg     0x422822
  422838:	sti    
  422839:	push   DWORD PTR [ecx-0x2aaf8038]
  42283f:	mov    edx,0xf0e8fcae
  422844:	repnz aas 
  422846:	aad    0x79
  422848:	ret    
  422849:	adc    edi,DWORD PTR [esi+0x6f899022]
  42284f:	icebp  
  422850:	js     0x422894
  422852:	pop    ecx
  422853:	mov    al,ds:0xa8372197
  422858:	addr16 out 0xb5,eax
  42285b:	hlt    
  42285c:	(bad)  
  42285d:	inc    DWORD PTR [eax]
  42285f:	add    BYTE PTR [eax-0x53],cl
  422862:	jnp    0x4228b3
  422864:	cmp    eax,0xd6cf74cb
  422869:	cwde   
  42286a:	popf   
  42286b:	add    ebp,DWORD PTR [edx]
  42286d:	mov    eax,ds:0xd2051206
  422872:	mov    edi,0xcae45dff
  422877:	(bad)
  42287a:	mov    ds:0xb1d8a2fc,eax
  42287f:	push   ebp
  422880:	add    ecx,DWORD PTR [ebp+0x2]
  422883:	push   eax
  422884:	xchg   edx,eax
  422885:	(bad)  
  422886:	xlat   BYTE PTR ds:[ebx]
  422887:	push   cs
  422888:	adc    eax,0xd2c5cae3
  42288d:	outs   dx,BYTE PTR ds:[esi]
  42288e:	mov    bh,0xfc
  422890:	jp     0x422852
  422892:	jl     0x4228d4
  422894:	(bad)
  422897:	(bad)  
  422898:	push   0xffffffe3
  42289a:	mov    cl,0x86
  42289c:	push   ss
  42289d:	or     edi,DWORD PTR [esi]
  42289f:	inc    edx
  4228a0:	pop    esi
  4228a1:	jecxz  0x4228a9
  4228a3:	adc    bh,BYTE PTR [ebp-0x1]
  4228a6:	mov    edi,0x10265dff
  4228ab:	cmp    BYTE PTR [ebx],bl
  4228ad:	call   0xe316942d
  4228b2:	dec    DWORD PTR [eax+0x3fef3af0]
  4228b8:	aad    0x9
  4228ba:	iret   
  4228bb:	sti    
  4228bc:	xchg   edx,eax
  4228bd:	adc    dh,0xdf
  4228c0:	push   ebx
  4228c1:	jge    0x4228c4
  4228c3:	or     eax,DWORD PTR [eax]
  4228c5:	add    BYTE PTR [ecx],ch
  4228c7:	fisttp WORD PTR fs:[edx]
  4228ca:	xchg   ebp,edi
  4228cc:	jo     0x422894
  4228ce:	scas   al,BYTE PTR es:[edi]
  4228cf:	clc    
  4228d0:	adc    bh,BYTE PTR [esi-0x73]
  4228d3:	and    eax,0x7ef1b499
  4228d8:	xor    eax,0x2239957c
  4228dd:	lock cli 
  4228df:	sbb    DWORD PTR [ecx-0x623063fd],ebp
  4228e5:	lock and ah,BYTE PTR [eax-0x4d]
  4228e9:	js     0x422900
  4228eb:	sub    bl,BYTE PTR [ecx-0x6605e888]
  4228f1:	or     al,BYTE PTR [edi-0x2]
  4228f4:	add    DWORD PTR [ebp+0x1deaf7a8],ebx
  4228fa:	aam    0x3c
  4228fc:	test   eax,0x70fe2709
  422901:	lds    edi,FWORD PTR [esi-0x61102da1]
  422907:	sbb    eax,0x7cc20429
  42290c:	in     eax,0xf8
  42290e:	push   esi
  42290f:	or     al,ch
  422911:	add    edx,ebp
  422913:	test   BYTE PTR [esp+edx*1],ah
  422916:	clc    
  422917:	test   BYTE PTR [eax],ch
  422919:	cli    
  42291a:	lock retf 0x591
  42291e:	dec    ebp
  42291f:	dec    esp
  422920:	loope  0x42291a
  422922:	and    cl,cl
  422924:	loop   0x42297e
  422926:	xchg   ebp,eax
  422927:	and    eax,0xc560
  42292c:	push   es
  42292d:	mov    ds:0x8cd88fe6,al
  422932:	mov    DWORD PTR [eax],ecx
  422934:	push   ebp
  422935:	leave  
  422936:	add    ch,ch
  422938:	addr16 (bad) 
  42293a:	aas    
  42293b:	mov    ch,0xce
  42293d:	sub    ah,0x67
  422940:	int3   
  422941:	js     0x4229c0
  422943:	icebp  
  422944:	xlat   BYTE PTR ds:[ebx]
  422945:	iret   
  422946:	inc    ebp
  422947:	push   edx
  422948:	(bad)  
  422949:	push   es
  42294a:	test   DWORD PTR [edi],esi
  42294c:	ror    DWORD PTR [ecx],1
  42294e:	add    BYTE PTR [edx+ebx*4-0x3c],dh
  422952:	repz ds int3 
  422955:	into   
  422956:	inc    ebp
  422957:	xor    bl,cl
  422959:	loope  0x422997
  42295b:	xlat   BYTE PTR ds:[ebx]
  42295c:	(bad)  
  42295d:	or     DWORD PTR [esi-0x7],esp
  422960:	ds adc ah,0xaa
  422964:	(bad)  
  422965:	test   BYTE PTR [edi],bh
  422967:	aad    0x86
  422969:	out    dx,eax
  42296a:	cdq    
  42296b:	std    
  42296c:	fdivr  st(5),st
  42296e:	lea    edi,[edi+ebx*1]
  422971:	hlt    
  422972:	sti    
  422973:	(bad)  
  422974:	ficomp WORD PTR [ecx+eiz*2-0xa]
  422978:	fld    QWORD PTR [ecx+0x9d61f80]
  42297e:	add    BYTE PTR [eax-0x67],dh
  422981:	inc    ebx
  422982:	xchg   DWORD PTR [edi+0x4a45ef66],esp
  422988:	fdivr  st(5),st
  42298a:	push   0x9d7eb
  42298f:	je     0x422991
  422991:	add    BYTE PTR [ebx],al
  422993:	add    edi,eax
  422995:	mov    esi,0x2a8d46cd
  42299a:	sub    DWORD PTR [edi-0x18],eax
  42299d:	inc    ecx
  42299e:	int    0xf4
  4229a0:	sti    
  4229a1:	adc    edx,esi
  4229a3:	add    BYTE PTR [ebp+0x65],0x26
  4229a7:	outs   dx,DWORD PTR ds:[esi]
  4229a8:	push   ds
  4229a9:	pop    eax
  4229aa:	mov    esi,0x40b6e81e
  4229af:	idiv   ebx
  4229b1:	add    cl,cl
  4229b3:	mov    bh,0x7f
  4229b5:	push   eax
  4229b6:	jg     0x4229ba
  4229b8:	push   esp
  4229b9:	push   0x403ffc
  4229be:	mov    ebx,0x6c12fbe7
  4229c3:	or     eax,DWORD PTR [ebx+0xc0c83]
  4229c9:	add    bh,ah
  4229cb:	dec    eax
  4229cc:	or     al,0x84
  4229ce:	or     eax,0x63fffc01
  4229d3:	add    cl,BYTE PTR [esi]
  4229d5:	test   al,0x20
  4229d7:	retf   
  4229d8:	sti    
  4229d9:	mov    ch,BYTE PTR [ebp+eax*8-0x46ca8b0c]
  4229e0:	cld    
  4229e1:	adc    eax,0x3bfac8
  4229e6:	lea    ecx,gs:[edi+0x1]
  4229ea:	mov    esp,0x60c7390a
  4229ef:	fisubr DWORD PTR [ecx+0x1]
  4229f2:	or     dx,WORD PTR [edx-0x1]
  4229f6:	add    BYTE PTR [eax],al
  4229f8:	mov    eax,ds:0xbc400b12
  4229fd:	jae    0x42297f
  4229ff:	pop    esp
  422a00:	mov    ebp,0x733b000a
  422a05:	cdq    
  422a06:	sbb    BYTE PTR [eax+0x7b],dl
  422a09:	pop    edx
  422a0a:	dec    edi
  422a0b:	add    DWORD PTR [edx+ecx*1-0x3],edi
  422a0f:	adc    eax,0x3bfd9c
  422a14:	add    eax,0x6c01538b
  422a19:	or     bh,BYTE PTR [ecx]
  422a1b:	(bad)  
  422a1c:	mov    al,0x9
  422a1e:	ret    0x2745
  422a21:	or     al,0x52
  422a23:	push   edi
  422a24:	cmp    edi,eax
  422a26:	(bad)  
  422a27:	adc    al,0xac
  422a29:	or     eax,0x9bd54586
  422a2e:	mov    ds:0xa21c5d,eax
  422a33:	add    BYTE PTR [esi-0x1a3c1685],ah
  422a39:	and    BYTE PTR [esi+edx*2],al
  422a3c:	pop    esi
  422a3d:	jo     0x422ab6
  422a3f:	inc    ebp
  422a40:	leave  
  422a41:	pop    ds
  422a42:	cmp    DWORD PTR [edi-0x3501c57],0xbba7b06
  422a4c:	pop    esi
  422a4d:	sbb    eax,0xe095113c
  422a52:	cmp    BYTE PTR [edi-0x3501c77],0x22
  422a59:	jnp    0x422a15
  422a5b:	add    eax,DWORD PTR [eax]
  422a5d:	add    BYTE PTR [esi+0x38],dl
  422a60:	add    esi,DWORD PTR [ebx-0x2e]
  422a63:	nop
  422a64:	add    dl,BYTE PTR [edx]
  422a66:	push   ebp
  422a67:	icebp  
  422a68:	mov    edi,0xebae4fff
  422a6d:	adc    BYTE PTR [ebp-0x35b00169],0x3c
  422a74:	ja     0x422abb
  422a76:	in     eax,0x65
  422a78:	inc    esp
  422a79:	jae    0x422a4d
  422a7b:	xchg   edx,eax
  422a7c:	add    dl,BYTE PTR [edx]
  422a7e:	add    edx,edx
  422a80:	mov    edi,0x80ed5fff
  422a85:	mov    edi,0xfcafe029
  422a8a:	and    BYTE PTR [ebx-0x7d],0x23
  422a8e:	in     eax,0xe2
  422a90:	mov    esi,DWORD PTR [esi+0x5e]
  422a93:	ins    DWORD PTR es:[edi],dx
  422a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a95:	inc    BYTE PTR [edx+0x1bf80e3]
  422a9b:	out    0xaf,al
  422a9d:	cld    
  422a9e:	sub    edx,DWORD PTR [edi]
  422aa0:	add    eax,0xf0a3d500
  422aa5:	ffreep st(5)
  422aa7:	or     DWORD PTR [ecx],ebp
  422aa9:	add    al,0x4c
  422aab:	mov    WORD PTR ds:0x6c09d505,?
  422ab1:	inc    ebx
  422ab2:	(bad)  
  422ab3:	or     BYTE PTR [ecx],bh
  422ab5:	pop    es
  422ab6:	and    eax,0x3baf6b81
  422abb:	cmc    
  422abc:	jmp    0xeac09d41
  422ac1:	mov    bl,0x0
  422ac3:	add    BYTE PTR [ecx],ch
  422ac5:	pop    ds
  422ac6:	(bad)  
  422ac7:	repz loop 0x422ad3
  422aca:	outs   dx,BYTE PTR ds:[esi]
  422acb:	jge    0x422b47
  422acd:	or     ch,cl
  422acf:	add    edx,DWORD PTR [esi-0x36]
  422ad2:	fld    QWORD PTR [edx]
  422ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ad5:	hlt    
  422ad6:	xor    bh,BYTE PTR [edx+0x58]
  422ad9:	mov    ch,al
  422adb:	add    edx,ebp
  422add:	mov    gs,WORD PTR [ecx]
  422adf:	(bad)  
  422ae0:	mov    ah,0x5f
  422ae2:	jmp    0x3d61149a
  422ae7:	icebp  
  422ae8:	mov    ds:0xda01e409,al
  422aed:	hlt    
  422aee:	jmp    0xe9a20f82
  422af3:	cdq    
  422af4:	retf   0xf762
  422af7:	push   es
  422af8:	mov    BYTE PTR [ecx-0xb2afc18],al
  422afe:	aam    0xf
  422b00:	lds    ecx,FWORD PTR [ecx-0x17]
  422b03:	test   BYTE PTR [eax-0x2afc178b],dl
  422b09:	loope  0x422ac0
  422b0b:	arpl   WORD PTR [ecx+0x2da63af4],bx
  422b11:	enter  0x3ed,0x5c
  422b15:	inc    edx
  422b16:	stc    
  422b17:	dec    ecx
  422b18:	add    cl,BYTE PTR [edx]
  422b1a:	jmp    0x360b7c22
  422b1f:	(bad)  
  422b20:	bnd jne 0x422b23
  422b23:	or     eax,0xde4f09d5
  422b28:	add    BYTE PTR [eax],al
  422b2a:	repnz leave 
  422b2c:	push   edx
  422b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b2e:	pushf  
  422b2f:	add    eax,0xd23799b2
  422b34:	mov    ch,dh
  422b36:	inc    eax
  422b37:	push   esi
  422b38:	push   edi
  422b39:	int    0xb6
  422b3b:	jp     0x422b94
  422b3d:	lds    esi,FWORD PTR [edi-0x4a42c582]
  422b43:	jle    0x422b60
  422b45:	mov    ch,0x8b
  422b47:	jge    0x422b94
  422b49:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  422b4b:	test   al,0x0
  422b4d:	jmp    0x654ea428
  422b52:	xchg   BYTE PTR [edi+0x78d6e900],ah
  422b58:	add    al,0x1a
  422b5a:	cdq    
  422b5b:	loope  0x422b5b
  422b5d:	jno    0x422af6
  422b5f:	mov    WORD PTR [ecx-0x25],es
  422b62:	int    0x38
  422b64:	test   BYTE PTR [eax+0x77],bl
  422b67:	hlt    
  422b68:	sti    
  422b69:	jmp    0x78c62bc1
  422b6e:	je     0x422b64
  422b70:	sti    
  422b71:	jmp    0x297132d9
  422b76:	in     al,dx
  422b77:	or     BYTE PTR [edi+0x1134412b],al
  422b7d:	adc    ch,BYTE PTR [esi-0x26b66e79]
  422b83:	or     DWORD PTR [eax],eax
  422b85:	jl     0x422b29
  422b87:	xchg   DWORD PTR [ecx+0x9d948],edx
  422b8d:	pop    esp
  422b8e:	add    BYTE PTR [eax],al
  422b90:	aad    0x38
  422b92:	rcl    dl,0xd4
  422b95:	cmp    BYTE PTR [esi+0x2f039761],0xa9
  422b9c:	add    al,BYTE PTR [ecx+eax*1+0x0]
  422ba0:	mov    eax,0xcd844006
  422ba5:	pop    es
  422ba6:	je     0x422bab
  422ba8:	jmp    FWORD PTR [esi]
  422baa:	add    DWORD PTR [ebp+edi*4-0x10fc8bf7],eax
  422bb1:	or     eax,DWORD PTR cs:[ebp+ecx*1-0x40fc9002]
  422bb9:	inc    DWORD PTR cs:[ebx+0x36ff6fd]
  422bc0:	scas   eax,DWORD PTR es:[edi]
  422bc1:	cs add eax,edx
  422bc4:	cmp    BYTE PTR [edi],al
  422bc6:	dec    edi
  422bc7:	mov    edx,DWORD PTR [eax-0x76]
  422bca:	(bad)  
  422bcc:	lods   eax,DWORD PTR ds:[esi]
  422bcd:	sbb    cl,bh
  422bcf:	add    BYTE PTR [edi+eax*1],ch
  422bd2:	push   ecx
  422bd3:	dec    DWORD PTR [ecx]
  422bd5:	jg     0x422be1
  422bd7:	inc    eax
  422bd8:	cld    
  422bd9:	mov    dh,0xfc
  422bdb:	adc    eax,0x3bf9d4
  422be0:	imul   eax,DWORD PTR [esi+0x6f],0x1fba8165
  422be7:	add    al,0x4d
  422be9:	xchg   ecx,eax
  422bea:	pop    edi
  422beb:	lea    eax,[eax-0x2d]
  422bee:	jae    0x422c41
  422bf0:	inc    esi
  422bf1:	or     DWORD PTR [eax-0x1],edx
  422bf4:	add    BYTE PTR [eax],al
  422bf6:	leave  
  422bf7:	sbb    dl,BYTE PTR [eax]
  422bf9:	inc    eax
  422bfa:	mov    esp,0x6074bb73
  422bff:	mov    DWORD PTR [edi+0x24],esi
  422c02:	test   al,0xbc
  422c04:	outs   dx,BYTE PTR ds:[esi]
  422c05:	inc    ebp
  422c06:	inc    esi
  422c07:	push   es
  422c08:	xchg   DWORD PTR [eax+ebx*4-0x6],eax
  422c0c:	dec    ebx
  422c0d:	push   0x2934b001
  422c12:	test   BYTE PTR [ebx+0x647c0010],cl
  422c18:	dec    esp
  422c19:	(bad)  
  422c1a:	aad    0x24
  422c1c:	sub    BYTE PTR [eax+edx*2],cl
  422c1f:	adc    al,0x28
  422c21:	je     0x422c90
  422c23:	dec    ebp
  422c24:	jmp    0xb475:0xc46d72fa
  422c2b:	adc    BYTE PTR [ebx+0x41f8578],bh
  422c31:	call   0xfc41d375
  422c36:	pop    ecx
  422c37:	mov    al,ds:0xed560978
  422c3c:	pop    es
  422c3d:	into   
  422c3e:	xchg   esi,eax
  422c3f:	loopne 0x422c44
  422c41:	out    0xcc,eax
  422c43:	push   ss
  422c44:	add    al,0x87
  422c46:	push   ss
  422c47:	cwde   
  422c48:	idiv   ch
  422c4a:	sub    bh,BYTE PTR [ebx+0x5b]
  422c4d:	xchg   DWORD PTR [eax],edi
  422c4f:	add    eax,0x1fd4b0c3
  422c54:	mov    eax,DWORD PTR [ecx+edi*4-0x14]
  422c58:	(bad)  
  422c59:	inc    BYTE PTR [eax]
  422c5b:	add    BYTE PTR [esi],al
  422c5d:	fnstcw WORD PTR [edi]
  422c5f:	add    BYTE PTR [esi-0x4f],cl
  422c62:	sub    esp,DWORD PTR [edi]
  422c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c65:	add    al,0x8d
  422c67:	adc    BYTE PTR [esi-0x6f],bl
  422c6a:	das    
  422c6b:	daa    
  422c6c:	test   BYTE PTR [eax],cl
  422c6e:	lea    edx,[eax-0x27]
  422c71:	test   DWORD PTR [si-0x2c],edx
  422c75:	loopne 0x422c76
  422c77:	mov    ebp,0x8758e2d9
  422c7c:	mov    ecx,0x4e58f064
  422c81:	and    dl,BYTE PTR [ecx+0xf9d694d]
  422c87:	mov    DWORD PTR [eax],esp
  422c89:	out    dx,eax
  422c8a:	nop
  422c8b:	push   eax
  422c8c:	icebp  
  422c8d:	xchg   esp,eax
  422c8e:	nop
  422c8f:	dec    ebp
  422c90:	mov    cl,0x92
  422c92:	mov    WORD PTR [ebp-0x53],es
  422c95:	or     dl,cl
  422c97:	xchg   BYTE PTR [eax+esi*8-0x26],bh
  422c9b:	ins    DWORD PTR es:[edi],dx
  422c9c:	mov    ebx,DWORD PTR [ebx-0x2e]
  422c9f:	mov    bl,0x29
  422ca1:	or     ebp,ecx
  422ca3:	add    edi,DWORD PTR [esi+0x17]
  422ca6:	add    eax,0x4f0a1518
  422cab:	add    al,0x6e
  422cad:	pop    ss
  422cae:	test   DWORD PTR [esi],edx
  422cb0:	adc    eax,0xe1c3640a
  422cb5:	add    edi,DWORD PTR [ecx]
  422cb7:	xchg   ecx,eax
  422cb8:	cwde   
  422cb9:	loope  0x422cf4
  422cbb:	in     al,dx
  422cbc:	add    eax,0x292e5
  422cc1:	add    BYTE PTR [edi],cl
  422cc3:	int    0x33
  422cc5:	pop    ebx
  422cc6:	push   edx
  422cc7:	sti    
  422cc8:	outs   dx,BYTE PTR ds:[esi]
  422cc9:	dec    ecx
  422cca:	(bad)
  422ccd:	pop    es
  422cce:	aam    0x9
  422cd0:	jmp    0xe84c7a63
  422cd5:	add    edx,ebp
  422cd7:	pop    edx
  422cd8:	iret   
  422cd9:	addr16 pop edx
  422cdb:	hlt    
  422cdc:	push   ss
  422cdd:	(bad)  
  422cde:	lods   al,BYTE PTR ds:[esi]
  422cdf:	loope  0x422cf5
  422ce1:	out    dx,eax
  422ce2:	(bad)  
  422ce3:	lock fs ret 
  422ce6:	cmp    ebp,0xfdb97741
  422cec:	cwde   
  422ced:	mov    ss,WORD PTR [esi]
  422cef:	loop   0x422d21
  422cf1:	test   eax,0x618af0df
  422cf6:	sbb    eax,DWORD PTR [esi]
  422cf8:	jmp    0xed6874ff
  422cfd:	mov    ss,WORD PTR [eax+esi*8-0xf2ed863]
  422d04:	xchg   ebp,eax
  422d05:	daa    
  422d06:	leave  
  422d07:	pop    ebx
  422d08:	adc    DWORD PTR [ebp+0x28],eax
  422d0b:	or     ch,cl
  422d0d:	(bad)
  422d10:	add    BYTE PTR [ebx],ch
  422d12:	fimul  DWORD PTR [ecx]
  422d14:	push   ebp
  422d15:	bound  ebp,QWORD PTR [edx+0x60e1e470]
  422d1b:	inc    esi
  422d1c:	or     al,0x6a
  422d1e:	test   DWORD PTR ds:0x711c3f4f,ecx
  422d24:	clc    
  422d25:	int3   
  422d26:	add    BYTE PTR [eax],al
  422d28:	in     al,0x85
  422d2a:	outs   dx,DWORD PTR ds:[esi]
  422d2b:	call   0x674d3706
  422d30:	adc    eax,0x59e9000b
  422d35:	icebp  
  422d36:	sti    
  422d37:	fimul  WORD PTR [ebp+0x20]
  422d3a:	add    ecx,ebp
  422d3c:	(bad)  
  422d3d:	hlt    
  422d3e:	jne    0x422d31
  422d40:	aad    0x17
  422d42:	adc    ch,bh
  422d44:	xchg   esi,eax
  422d45:	or     DWORD PTR [edi+0xbf45291],eax
  422d4b:	ins    DWORD PTR es:[edi],dx
  422d4c:	xchg   edx,eax
  422d4d:	or     al,BYTE PTR [eax]
  422d4f:	jmp    0xdd666aa5
  422d54:	aad    0x55
  422d56:	sti    
  422d57:	aam    0x1e
  422d59:	add    BYTE PTR [eax-0x17],al
  422d5c:	leave  
  422d5d:	fmul   DWORD PTR [ecx-0x45e64d5b]
  422d63:	jmp    0x64423742
  422d68:	adc    DWORD PTR [ebx+0x24],esi
  422d6b:	lahf   
  422d6c:	mov    DWORD PTR [ebx+edi*8-0x2c],ebx
  422d70:	mov    dl,BYTE PTR ds:0xc95ae940
  422d76:	jns    0x422d51
  422d78:	jl     0x422dba
  422d7a:	push   ebx
  422d7b:	es dec edx
  422d7d:	add    bh,bl
  422d7f:	hlt    
  422d80:	(bad)  
  422d81:	(bad)  
  422d82:	aas    
  422d83:	jmp    0xf5667bd7
  422d88:	adc    DWORD PTR [edi],esi
  422d8a:	pop    esp
  422d8b:	add    BYTE PTR [eax],al
  422d8d:	add    BYTE PTR [eax+0x1ddc7c1b],ah
  422d93:	jle    0x422d65
  422d95:	inc    ebx
  422d96:	lods   al,BYTE PTR ds:[esi]
  422d97:	or     dh,BYTE PTR [ecx+0xbad04]
  422d9d:	jmp    FWORD PTR [ebx+ecx*1+0x1]
  422da1:	add    BYTE PTR [edx+edx*2-0x9],bh
  422da5:	jne    0x422e1b
  422da7:	or     dl,BYTE PTR [edx]
  422da9:	adc    al,0x80
  422dab:	dec    ebx
  422dac:	add    BYTE PTR [ebx-0xc79cc],cl
  422db2:	jnp    0x422d3b
  422db4:	clc    
  422db5:	add    BYTE PTR [ebx+ecx*1+0x4e],ch
  422db9:	push   ebx
  422dba:	ret    
  422dbb:	or     BYTE PTR [edx],dl
  422dbd:	pop    esp
  422dbe:	push   eax
  422dbf:	dec    ebx
  422dc0:	add    BYTE PTR [ecx+0x391021f0],cl
  422dc6:	or     BYTE PTR [edx],ah
  422dc8:	adc    al,0x74
  422dca:	xor    cl,BYTE PTR [edx]
  422dcc:	adc    bh,ah
  422dce:	cmovnp eax,DWORD PTR [eax]
  422dd1:	push   0x6bc
  422dd6:	mov    edi,0x3475f750
  422ddb:	or     dl,BYTE PTR [edx]
  422ddd:	lock cmovnp eax,DWORD PTR [eax]
  422de1:	sub    DWORD PTR [ecx],0xffffffff
  422de4:	cmc    
  422de5:	pshufw mm0,mm7,0x0
  422de9:	add    ah,ch
  422deb:	lock inc esp
  422ded:	and    al,0xc
  422def:	push   es
  422df0:	pop    es
  422df1:	test   DWORD PTR [eax],eax
  422df3:	add    BYTE PTR [esi+0xb],dl
  422df6:	add    BYTE PTR [eax],al
  422df8:	mov    ds:0xfc102446,al
  422dfd:	jbe    0x422e44
  422dff:	push   ebx
  422e00:	xchg   ebx,eax
  422e01:	or     DWORD PTR [edx],edx
  422e03:	sbb    al,0xc0
  422e05:	dec    edx
  422e06:	add    BYTE PTR [ebx-0xd7def2b],cl
  422e0c:	retf   0x9e64
  422e0f:	add    ch,dl
  422e11:	loopne 0x422d9d
  422e13:	inc    esp
  422e14:	icebp  
  422e15:	call   0xf84c7d69
  422e1a:	jne    0x422e24
  422e1c:	call   0x88e1:0x15140bd5
  422e23:	rcr    dl,0x64
  422e26:	lea    eax,[eax]
  422e28:	aad    0xe0
  422e2a:	imul   eax,DWORD PTR [eax],0xfb0c557a
  422e30:	jmp    0xe23d5e31
  422e35:	add    al,0x28
  422e37:	push   0x420d5
  422e3c:	add    esp,DWORD PTR [eax+0x20e90819]
  422e42:	add    al,0xe7
  422e44:	mov    ebx,0xe5244897
  422e49:	loopne 0x422e52
  422e4b:	add    ch,dl
  422e4d:	adc    al,0x8
  422e4f:	das    
  422e50:	adc    eax,0x824f119b
  422e55:	outs   dx,DWORD PTR ds:[esi]
  422e56:	sbb    DWORD PTR [eax+eax*1],esp
  422e59:	add    cl,cl
  422e5b:	and    BYTE PTR [edi+edi*2],al
  422e5e:	sbb    eax,0x7f4f785f
  422e63:	loopne 0x422e6f
  422e65:	mov    bl,0x15
  422e67:	mov    al,0x67
  422e69:	adc    esp,edx
  422e6b:	loopne 0x422e6c
  422e6d:	cli    
  422e6e:	sub    al,0xfa
  422e71:	adc    eax,0x3fcc75
  422e76:	(bad)  
  422e77:	in     al,dx
  422e78:	or     dh,BYTE PTR [ebx+0x10ec2105]
  422e7e:	dec    esp
  422e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e80:	and    ebx,DWORD PTR [edx+eiz*8]
  422e83:	or     DWORD PTR [edx-0x3b],ebx
  422e86:	xor    ecx,DWORD PTR [edx]
  422e88:	sbb    bh,BYTE PTR [ecx-0x33]
  422e8b:	sub    BYTE PTR [ebp+0xcaed27],0x14
  422e92:	cmp    eax,0xd5431972
  422e97:	jle    0x422e3e
  422e99:	daa    
  422e9a:	stc    
  422e9b:	sbb    BYTE PTR [ebp-0x627d0ed9],0x27
  422ea2:	vpaddsb xmm6,xmm3,XMMWORD PTR [ecx+0xfce09d5]
  422eaa:	jle    0x422ee3
  422eac:	popa   
  422ead:	sar    DWORD PTR [edx-0x4ae735f7],cl
  422eb3:	adc    eax,0x376e0429
  422eb8:	shl    DWORD PTR gs:[edx+0x18b209],cl
  422ebf:	add    BYTE PTR [ebp+0x18],ch
  422ec2:	sub    DWORD PTR [esi+ebp*4],eax
  422ec5:	dec    ebx
  422ec6:	(bad)  
  422ec7:	ret    
  422ec8:	mov    ds:0x83608480,al
  422ecd:	add    ch,cl
  422ecf:	pop    eax
  422ed0:	push   edx
  422ed1:	fisub  WORD PTR [esi-0x11]
  422ed4:	mov    ecx,0x1b0becf3
  422ed9:	dec    ecx
  422eda:	jmp    0x815dd7e6
  422edf:	inc    edi
  422ee0:	into   
  422ee1:	or     ecx,ebp
  422ee3:	xchg   DWORD PTR ds:0xd56a0c76,edx
  422ee9:	jle    0x422e8f
  422eeb:	lahf   
  422eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eed:	popa   
  422eee:	fs dec esp
  422ef0:	(bad)  
  422ef1:	and    al,BYTE PTR [ecx-0x4b]
  422ef4:	loopne 0x422eff
  422ef6:	jmp    0x6c5b8ff9
  422efb:	dec    eax
  422efc:	inc    ecx
  422efd:	in     eax,dx
  422efe:	add    BYTE PTR [edx+ecx*8+0x26e175f0],bh
  422f05:	icebp  
  422f06:	adc    eax,0x49ed01
  422f0b:	adc    dl,bl
  422f0d:	lock jne 0x422f09
  422f10:	mov    ebx,0x2d0e0c76
  422f15:	add    bh,bl
  422f17:	fmul   QWORD PTR [edx+0x15]
  422f1a:	inc    eax
  422f1b:	jmp    0xe94edab1
  422f20:	mov    al,ds:0x1b0806
  422f25:	add    BYTE PTR [edi],dl
  422f27:	or     al,BYTE PTR [ebx*2-0x10091e28]
  422f2e:	(bad)  
  422f2f:	or     DWORD PTR [ecx+ebp*4-0x56d0f803],eax
  422f36:	sbb    DWORD PTR [esp+eax*1-0x27d99617],ebp
  422f3d:	aad    0x16
  422f3f:	or     dl,BYTE PTR [ebp+0x62]
  422f42:	test   DWORD PTR gs:0x2c24e1,0x7584a0ed
  422f4d:	in     eax,dx
  422f4e:	retf   0xe82a
  422f51:	mov    esp,0x650009cb
  422f56:	sbb    DWORD PTR [ebp+0x18],esi
  422f59:	ret    0x89e3
  422f5c:	shr    BYTE PTR [edx],1
  422f5e:	fnstenv [esi+0x10]
  422f61:	jbe    0x422f05
  422f63:	sbb    DWORD PTR [edi+0x75f0ed1c],eax
  422f69:	icebp  
  422f6a:	(bad)  
  422f6b:	mov    ch,0xfd
  422f6d:	pop    esi
  422f6e:	add    ah,ah
  422f70:	adc    BYTE PTR [esi-0x7e],dl
  422f73:	adc    eax,0x57c6d4fb
  422f78:	sti    
  422f79:	add    BYTE PTR [ecx],ch
  422f7b:	add    bh,dh
  422f7d:	adc    eax,0x401308
  422f82:	inc    edx
  422f83:	dec    ebx
  422f84:	mov    edx,0x8354bc10
  422f89:	in     al,dx
  422f8a:	add    BYTE PTR [eax],al
  422f8c:	jmp    0x407:0x6fd20802
  422f93:	push   esi
  422f94:	aaa    
  422f95:	jae    0x422fa3
  422f97:	je     0x422f36
  422f99:	fild   WORD PTR [edi-0x7bf843f2]
  422f9f:	shr    BYTE PTR [eax],0xf
  422fa2:	xor    esi,DWORD PTR ds:0x3bd62c
  422fa8:	or     DWORD PTR [edi],edx
  422faa:	div    DWORD PTR [ebp-0x74]
  422fad:	or     BYTE PTR [ebp+0x14],0xa3
  422fb1:	je     0x422fbb
  422fb3:	call   0x3a1acb
  422fb8:	xchg   edi,eax
  422fb9:	pop    ss
  422fba:	div    DWORD PTR [ebp-0x78]
  422fbd:	out    dx,al
  422fbe:	jne    0x422fd0
  422fc0:	retf   0x75ec
  422fc3:	or     BYTE PTR [ebx],ah
  422fc5:	adc    al,0xd0
  422fc7:	adc    al,0xfc
  422fc9:	add    eax,0x177e5d56
  422fce:	add    BYTE PTR [ebp-0x39],dl
  422fd1:	(bad)  
  422fd3:	add    eax,0x3bd934
  422fd8:	cmp    BYTE PTR [ebp-0x7d],dl
  422fdb:	jne    0x422ffd
  422fdd:	jae    0x423000
  422fdf:	call   0x422bc9
  422fe4:	test   al,0xc6
  422fe6:	je     0x423000
  422fe8:	inc    edi
  422fe9:	xor    al,0x80
  422feb:	sar    BYTE PTR [edi],1
  422fed:	pop    es
  422fee:	jne    0x423000
  422ff0:	add    BYTE PTR [eax],al
  422ff2:	mov    ds:0xd58b1073,eax
  422ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ff8:	adc    edi,ebx
  422ffa:	push   0xe829e7e8
  422fff:	inc    ebx
  423000:	cld    
  423001:	out    0xc5,eax
  423003:	sub    esi,DWORD PTR [edx+0x14]
  423006:	fisubr DWORD PTR [ebp-0x4a2dadf1]
  42300c:	pop    es
  42300d:	sti    
  42300e:	loopne 0x42307c
  423010:	adc    eax,DWORD PTR [eax-0x2b]
  423013:	stos   BYTE PTR es:[edi],al
  423014:	pop    edx
  423015:	mov    esi,0x8752e0e5
  42301a:	rcl    DWORD PTR [edx],0x2
  42301d:	or     BYTE PTR [edi+0xb03ff9f],al
  423023:	js     0x423097
  423025:	or     al,0x21
  423027:	ret    0xffe7
  42302a:	loopne 0x42300c
  42302c:	inc    DWORD PTR [ebx+0x371c4c95]
  423032:	enter  0xd460,0x3f
  423036:	aad    0x4d
  423038:	adc    al,0xfb
  42303a:	call   0xc18fbb2f
  42303f:	ret    
  423040:	jno    0x42304a
  423042:	ins    DWORD PTR es:[edi],dx
  423043:	mov    edi,0xc75afbf8
  423048:	adc    al,0xfb
  42304a:	enter  0xf6d4,0x75
  42304e:	in     eax,0x2a
  423050:	div    DWORD PTR [ebp-0x33]
  423053:	mov    edx,DWORD PTR [ecx]
  423055:	fadd   QWORD PTR [eax]
  423057:	add    cl,ah
  423059:	and    BYTE PTR [edx+ebx*2],al
  42305c:	nop
  42305d:	sahf   
  42305e:	adc    al,0x0
  423060:	xor    BYTE PTR [edi-0x18],0xf2
  423064:	fdivr  st,st(0)
  423066:	aad    0x3f
  423068:	aad    0xdc
  42306a:	push   ecx
  42306b:	xchg   DWORD PTR [eax-0x2de9430],ecx
  423071:	or     BYTE PTR [ecx+ecx*1-0x3b9af62b],ah
  423078:	adc    DWORD PTR [ecx],0xd955310e
  42307e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42307f:	add    esp,DWORD PTR [eax+0x19]
  423082:	inc    edx
  423083:	jno    0x42304e
  423085:	jle    0x423033
  423087:	sbb    ebx,esi
  423089:	jae    0x42306c
  42308b:	jmp    0x4230fd
  42308d:	out    0x2a,al
  42308f:	sti    
  423090:	mov    dl,0xfd
  423092:	and    DWORD PTR [ecx-0x23],esi
  423095:	call   0xe969402e
  42309a:	pushf  
  42309b:	pop    es
  42309c:	scas   al,BYTE PTR es:[edi]
  42309d:	pop    edi
  42309e:	loope  0x42309a
  4230a0:	rcl    BYTE PTR ds:0x47d543dc,0x9c
  4230a7:	(bad)
  4230aa:	pushf  
  4230ab:	mov    es,WORD PTR [ecx-0x64f41b20]
  4230b1:	dec    ebp
  4230b2:	jmp    0x54d755b6
  4230b7:	adc    al,0x1
  4230b9:	sub    eax,ecx
  4230bb:	outs   dx,DWORD PTR ds:[esi]
  4230bc:	add    BYTE PTR [eax],al
  4230be:	loopne 0x4230c9
  4230c0:	jmp    0xe1a0c644
  4230c5:	ds test al,0x89
  4230c8:	cdq    
  4230c9:	inc    esi
  4230ca:	aad    0x5e
  4230cc:	fsqrt  
  4230ce:	enter  0x5dfd,0x48
  4230d2:	in     eax,dx
  4230d3:	call   0x3e6f3cf4
  4230d8:	popf   
  4230d9:	cli    
  4230da:	ds cmc 
  4230dc:	idiv   dl
  4230de:	test   al,0x1
  4230e0:	mov    dh,BYTE PTR [eax-0x3f]
  4230e3:	aas    
  4230e4:	xor    BYTE PTR [eax-0x2f],0xe8
  4230e8:	hlt    
  4230e9:	or     ebx,DWORD PTR [esi]
  4230eb:	(bad)  
  4230ec:	call   DWORD PTR [eax-0x1e]
  4230ef:	dec    ecx
  4230f0:	add    BYTE PTR [edi],cl
  4230f2:	lods   al,BYTE PTR ds:[esi]
  4230f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f4:	adc    al,0xe9
  4230f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f7:	nop
  4230f8:	in     al,dx
  4230f9:	push   edi
  4230fa:	aad    0x11
  4230fc:	into   
  4230fd:	stos   BYTE PTR es:[edi],al
  4230fe:	(bad)  
  4230ff:	or     eax,0x15656252
  423104:	je     0x42310e
  423106:	icebp  
  423107:	xor    BYTE PTR ds:0xc08dd6e9,cl
  42310d:	mov    ebp,0x693520ee
  423112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423113:	sub    BYTE PTR [eax],al
  423115:	pushf  
  423116:	out    0xe4,al
  423118:	jne    0x423113
  42311a:	dec    ebx
  42311b:	push   esi
  42311c:	adc    al,0x16
  42311e:	and    eax,0xe2e812
  423123:	add    BYTE PTR [edx-0x39ed041c],ah
  423129:	in     al,0x75
  42312b:	aad    0x9f
  42312d:	pop    esi
  42312e:	adc    BYTE PTR [edi-0x11f7a171],bl
  423134:	fidivr DWORD PTR [ebp+0x43d92914]
  42313a:	pop    ebp
  42313b:	stos   DWORD PTR es:[edi],eax
  42313c:	loope  0x423147
  42313e:	push   ebp
  42313f:	bound  edi,QWORD PTR [ebp-0x25]
  423142:	add    eax,0x2880e1
  423147:	in     eax,dx
  423148:	add    al,0x91
  42314a:	jne    0x423139
  42314c:	jmp    0x9:0xddcce82a
  423153:	adc    DWORD PTR gs:[ebp+0x18],ebx
  423157:	loop   0x42314c
  423159:	mov    eax,edx
  42315b:	sub    dl,cl
  42315d:	pop    esi
  42315e:	adc    BYTE PTR [esi+0x1c86f9c2],dl
  423164:	(bad)
  423167:	add    BYTE PTR [esp+esi*8],ah
  42316a:	(bad)  
  42316d:	loop   0x423152
  42316f:	adc    BYTE PTR [ebx+0x1ff1478],cl
  423175:	cld    
  423176:	dec    ebp
  423177:	jmp    DWORD PTR [ecx]
  423179:	adc    al,0xf7
  42317b:	adc    eax,0x4018e4
  423180:	sub    bh,BYTE PTR [edi]
  423182:	mov    edx,0x8356fc10
  423187:	in     al,dx
  423188:	add    BYTE PTR [eax],al
  42318a:	mov    ds:0x2fd203e8,al
  42318f:	or     al,0x4
  423191:	push   esi
  423192:	aaa    
  423193:	ja     0x4231a5
  423195:	je     0x423174
  423197:	cmc    
  423198:	xchg   edi,eax
  423199:	or     al,0xac
  42319b:	or     eax,DWORD PTR [eax+eax*8+0x35330360]
  4231a2:	cmp    al,0xbe
  4231a4:	cmp    eax,DWORD PTR [eax]
  4231a6:	inc    ecx
  4231a7:	sti    
  4231a8:	div    BYTE PTR [ebp-0x80]
  4231ab:	xchg   esi,eax
  4231ac:	dec    ebp
  4231ad:	sbb    BYTE PTR [ebx+0xbe80c78],bl
  4231b3:	out    0xf7,al
  4231b5:	call   edi
  4231b7:	cld    
  4231b8:	div    BYTE PTR [ebp-0x2c]
  4231bb:	loopne 0x423232
  4231bd:	adc    al,0xc2
  4231bf:	loopne 0x423236
  4231c1:	or     al,0x8b
  4231c3:	js     0x4231cd
  4231c5:	jmp    DWORD PTR [ecx+0x3]
  4231c8:	adc    eax,0x5d416c40
  4231cd:	ret    0xb80
  4231d0:	push   ebp
  4231d1:	mov    ebx,DWORD PTR [eax]
  4231d3:	fld    DWORD PTR ds:0x4e6e08
  4231d9:	add    al,0x2
  4231db:	xchg   ebp,eax
  4231dc:	jne    0x4231ee
  4231de:	loopne 0x42320a
  4231e0:	call   0x2f073b
  4231e5:	call   DWORD PTR [ecx-0x4f]
  4231e8:	imul   ebx,DWORD PTR [eax],0xffffffde
  4231eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231ec:	jg     0x4231be
  4231ee:	add    BYTE PTR [eax],al
  4231f0:	xchg   esi,eax
  4231f1:	lock push 0x10
  4231f4:	adc    ah,dh
  4231f6:	or     eax,DWORD PTR [edi+0x75f8b898]
  4231fc:	sar    DWORD PTR [eax],1
  4231fe:	xor    edi,esi
  423200:	cli    
  423201:	inc    edi
  423202:	in     al,dx
  423203:	pslld  mm0,mm5
  423206:	pop    ss
  423207:	sti    
  423208:	pusha  
  423209:	fcom   QWORD PTR [ecx-0x5]
  42320c:	push   0xcd75f8dc
  423211:	daa    
  423212:	or     bl,BYTE PTR [eax+ebp*8]
  423215:	mov    al,0xff
  423217:	pop    ecx
  423218:	sub    BYTE PTR [ebx],dh
  42321a:	or     eax,DWORD PTR [eax]
  42321c:	(bad)  
  42321d:	cmc    
  42321e:	or     edx,DWORD PTR ds:0x26af115
  423224:	ins    DWORD PTR es:[edi],dx
  423225:	iret   
  423226:	or     al,0x3e
  423228:	aad    0x33
  42322a:	cmp    al,0x5
  42322c:	test   esp,eax
  42322e:	aas    
  42322f:	add    BYTE PTR [eax],ah
  423231:	out    dx,eax
  423232:	mov    bh,0x75
  423234:	fidiv  WORD PTR [edx-0x12314101]
  42323a:	retf   
  42323b:	adc    al,0x15
  42323d:	icebp  
  42323e:	jo     0x423242
  423240:	cmp    eax,0xd53e08c9
  423245:	mov    bl,0x27
  423247:	add    eax,0x3fddbd
  42324c:	push   0xffffffa8
  42324e:	pop    ss
  42324f:	shl    BYTE PTR [edx-0x80],0x21
  423253:	sbb    eax,DWORD PTR [eax]
  423255:	add    al,ah
  423257:	xor    al,BYTE PTR [edi+edi*4]
  42325a:	mov    al,ds:0x317fe86b
  42325f:	or     ecx,edx
  423261:	in     eax,dx
  423262:	rcl    BYTE PTR [ecx],1
  423264:	mov    bh,0x43
  423266:	aad    0xd
  423268:	cmp    ecx,DWORD PTR [ebx+0x261511a0]
  42326e:	sub    eax,0xd503eed7
  423273:	lea    ebp,[ecx+0x7b8cb870]
  423279:	jo     0x42322f
  42327b:	xchg   edx,eax
  42327c:	and    eax,DWORD PTR [eax]
  42327e:	in     eax,dx
  42327f:	test   BYTE PTR [edx-0x9],ah
  423282:	dec    BYTE PTR [ebx+0x73c87029]
  423288:	add    DWORD PTR [esi+0x58],ecx
  42328b:	push   esp
  42328c:	xor    DWORD PTR [ebp-0x13],edx
  42328f:	fwait
  423290:	inc    esi
  423291:	neg    dh
  423293:	(bad)  
  423294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423295:	xlat   BYTE PTR ds:[ebx]
  423296:	pusha  
  423297:	dec    edi
  423298:	adc    DWORD PTR [edx+esi*4+0xb],edx
  42329c:	xchg   ebx,eax
  42329d:	imul   al
  42329f:	sub    esp,edi
  4232a1:	inc    ebx
  4232a2:	aad    0x43
  4232a4:	xor    dl,al
  4232a6:	(bad)  [ecx]
  4232a8:	mov    esp,0xfd89b98a
  4232ad:	sub    esp,DWORD PTR [edi-0x252e0ef1]
  4232b3:	or     ebp,esp
  4232b5:	dec    ebp
  4232b6:	pop    edx
  4232b7:	pop    edi
  4232b8:	loope  0x423329
  4232ba:	add    BYTE PTR [eax],al
  4232bc:	mov    edi,0xd50b68f1
  4232c1:	or     DWORD PTR [ebp-0x3d],ebp
  4232c4:	add    DWORD PTR [edi],ebp
  4232c6:	fs in  eax,dx
  4232c8:	jmp    0xd17f90f7
  4232cd:	icebp  
  4232ce:	sbb    dh,bh
  4232d0:	pop    esi
  4232d1:	in     eax,0x6c
  4232d3:	ret    
  4232d4:	loope  0x4232d4
  4232d6:	dec    esi
  4232d7:	sub    al,0xa7
  4232d9:	xchg   esi,eax
  4232da:	add    BYTE PTR [ecx+ebp*1],ah
  4232dd:	cmp    ebp,eax
  4232df:	inc    ecx
  4232e0:	ss loopne 0x4232de
  4232e3:	jo     0x42327a
  4232e5:	lds    ecx,FWORD PTR [ebp-0x18c5eedc]
  4232eb:	call   0xe1581388
  4232f0:	lds    ecx,FWORD PTR [ecx+0x0]
  4232f3:	daa    
  4232f4:	or     BYTE PTR [esp+eax*1-0x13735a17],ah
  4232fb:	push   0xfffffff2
  4232fd:	sbb    edx,esi
  4232ff:	in     al,0xce
  423301:	sar    DWORD PTR [edi],cl
  423303:	jmp    0xd4c96e02
  423308:	ficomp WORD PTR [ebp+0x2f]
  42330b:	inc    ecx
  42330c:	mov    edx,0x62e9000c
  423311:	leave  
  423312:	je     0x423327
  423314:	push   esp
  423315:	fdiv   DWORD PTR [edi+eax*1+0x56]
  423319:	pop    ds
  42331a:	xor    BYTE PTR [ecx+esi*8+0xe1428c],bh
  423321:	add    BYTE PTR [esi-0x3cd9051a],ch
  423327:	mov    es,eax
  423329:	xchg   ebp,eax
  42332a:	lds    ebp,FWORD PTR [ebx+0x30]
  42332d:	mov    edi,0xb8d0565d
  423332:	scas   al,BYTE PTR es:[edi]
  423333:	neg    esi
  423335:	pop    es
  423336:	mov    ds:0x5d214592,eax
  42333b:	dec    esi
  42333c:	rcr    BYTE PTR [ecx-0x11adf581],1
  423342:	rcr    BYTE PTR [ebp+0x3fd12914],cl
  423348:	leave  
  423349:	stos   DWORD PTR es:[edi],eax
  42334a:	aad    0x9
  42334c:	push   ebp
  42334d:	bound  edi,QWORD PTR [ebp+0x64]
  423350:	in     al,dx
  423351:	sbb    DWORD PTR [ebx+0xe],esi
  423354:	or     BYTE PTR [eax],al
  423356:	ds dec edx
  423358:	add    BYTE PTR [edx+ebp*8],al
  42335b:	xchg   edx,eax
  42335c:	jne    0x423366
  42335e:	or     BYTE PTR [ebx],bl
  423360:	call   0x4a6a47
  423365:	test   BYTE PTR [ecx+ebx*2+0x22],ch
  423369:	test   DWORD PTR [edx+0x59],ecx
  42336c:	push   ds
  42336d:	add    DWORD PTR [edx],0x18
  423370:	jne    0x423393
  423372:	mov    bh,0x23
  423374:	or     al,ch
  423376:	xchg   ebx,ebx
  423378:	idiv   edi
  42337a:	jns    0x423349
  42337c:	je     0x423393
  42337e:	(bad)  
  42337f:	sbb    eax,0xbde18d4e
  423384:	push   ecx
  423385:	call   0xe7ea338a
  42338a:	idiv   bh
  42338c:	gs and al,0xd8
  42338f:	lea    edi,[ecx]
  423391:	mov    eax,0x55edeb50
  423396:	not    DWORD PTR ds:0x3ffa88
  42339c:	jb     0x42336e
  42339e:	mov    edx,0xc01abc04
  4233a3:	push   0xffffffc0
  4233a5:	aaa    
  4233a6:	mov    DWORD PTR [esi-0x3c],eax
  4233a9:	nop
  4233aa:	ds or  al,0x25
  4233ad:	and    al,0x10
  4233af:	lea    edi,[edx+0x15]
  4233b2:	sub    ecx,ecx
  4233b4:	pop    esp
  4233b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233b6:	ds add al,0xad
  4233b9:	pop    es
  4233ba:	add    BYTE PTR [eax],al
  4233bc:	mov    ebx,0x3c79f7e3
  4233c1:	pop    es
  4233c2:	pop    esi
  4233c3:	mov    DWORD PTR [edx+0x13],esp
  4233c6:	not    DWORD PTR ds:0x4013d4
  4233cc:	jmp    DWORD PTR [edx-0x4d2a74f4]
  4233d2:	rcl    BYTE PTR [edx+0x4e],0xc2
  4233d6:	out    0xf,eax
  4233d8:	aad    0xf0
  4233da:	push   ecx
  4233dc:	cdq    
  4233dd:	or     al,0xc
  4233df:	add    ecx,eax
  4233e1:	repnz dec ebp
  4233e3:	call   0xfc3802d8
  4233e8:	dec    esi
  4233e9:	mov    bl,0x55
  4233eb:	mov    esi,0xf0d90000
  4233f0:	mov    BYTE PTR [edx-0x23],al
  4233f3:	mov    bl,0xfd
  4233f5:	sti    
  4233f6:	pushf  
  4233f7:	xor    BYTE PTR [eax*4+0x4ffce515],al
  4233fe:	adc    bh,BYTE PTR [esi-0xf6af139]
  423404:	hlt    
  423405:	jb     0x4233ec
  423407:	mov    BYTE PTR [eax],cl
  423409:	fdivp  st(3),st
  42340b:	imul   edi,DWORD PTR [edx+eax*1+0x3fc551],0x16
  423413:	jo     0x42348a
  423415:	or     ch,dl
  423417:	mov    ebp,0xb6d5660d
  42341c:	jmp    DWORD PTR [ebp-0x2c]
  42341f:	mov    dh,0xff
  423421:	cli    
  423422:	loopne 0x423428
  423424:	adc    DWORD PTR [eax-0x2b],eax
  423427:	imul   edi,DWORD PTR ds:0x6a305008,0xbfbf9601
  423431:	inc    eax
  423432:	xchg   esi,eax
  423433:	jmp    0x4233e1
  423435:	inc    ecx
  423436:	leave  
  423437:	outs   dx,DWORD PTR ds:[esi]
  423438:	imul   DWORD PTR [edx+eiz*1]
  42343b:	lock xor al,al
  42343e:	xchg   esi,eax
  42343f:	rep lods eax,DWORD PTR ds:[esi]
  423441:	dec    ecx
  423442:	in     eax,dx
  423443:	outs   dx,DWORD PTR ds:[esi]
  423444:	mov    edi,0xc031aed4
  423449:	push   ebp
  42344a:	dec    esi
  42344b:	or     ebp,edx
  42344d:	xchg   DWORD PTR [ecx+0x5b3329],eax
  423453:	add    BYTE PTR [edx-0x1f],dl
  423456:	push   ss
  423457:	les    edx,FWORD PTR ds:0x6de85495
  42345d:	mov    ebp,0xf14ef2f4
  423462:	mov    cl,0xd7
  423464:	dec    edi
  423465:	loop   0x4234c7
  423467:	dec    ecx
  423468:	inc    ecx
  423469:	xchg   esp,eax
  42346a:	and    al,0xf4
  42346c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42346d:	loop   0x42346b
  42346f:	jnp    0x423454
  423471:	dec    ecx
  423472:	jmp    0xe59e49ff
  423477:	and    al,0x98
  423479:	fisttp QWORD PTR [edx+0x28f75119]
  42347f:	add    al,0x5c
  423481:	dec    esp
  423482:	jns    0x4234e2
  423484:	loope  0x423477
  423486:	mov    ah,0x20
  423488:	aad    0x9
  42348a:	sbb    DWORD PTR [ecx+0x1351ed90],eax
  423490:	(bad)  
  423492:	pop    edx
  423493:	mov    BYTE PTR ds:0xcd5e195d,dl
  423499:	xchg   esp,eax
  42349a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42349b:	repz test DWORD PTR [esp+ebp*4-0x14f04219],edx
  4234a3:	repnz into 
  4234a5:	xchg   BYTE PTR [ecx],ch
  4234a7:	js     0x423488
  4234a9:	jae    0x423490
  4234ab:	adc    BYTE PTR [eax],0xde
  4234ae:	mov    ecx,0x11e61880
  4234b3:	out    dx,eax
  4234b4:	fsub   st,st(0)
  4234b6:	adc    cl,BYTE PTR [eax+0x56950000]
  4234bc:	fld    QWORD PTR [eax-0x6aee19f0]
  4234c2:	fnstsw ax
  4234c4:	cli    
  4234c5:	xchg   DWORD PTR [ebp+0x20d70057],edx
  4234cb:	mul    BYTE PTR [ebp-0x17]
  4234ce:	pop    ds
  4234cf:	in     eax,0x15
  4234d1:	add    edi,ecx
  4234d3:	dec    ecx
  4234d4:	add    BYTE PTR [ebx+0x69],dl
  4234d7:	mov    es,WORD PTR [ebp-0x27]
  4234da:	push   es
  4234db:	popa   
  4234dc:	ret    
  4234dd:	(bad)  
  4234df:	in     al,0x15
  4234e1:	fldlg2 
  4234e3:	dec    ecx
  4234e4:	add    BYTE PTR [edx+0x12],ch
  4234e7:	add    cl,BYTE PTR [ebp-0x630dd2d4]
  4234ed:	fadd   QWORD PTR [edi-0x1b]
  4234f0:	pop    ebx
  4234f1:	inc    edi
  4234f2:	jo     0x423495
  4234f4:	push   edx
  4234f5:	ss stos BYTE PTR es:[edi],al
  4234f7:	fld1   
  4234f9:	fisttp QWORD PTR [ebx]
  4234fb:	in     al,0xfb
  4234fd:	ficomp WORD PTR [edx+ecx*8-0x67]
  423501:	inc    esi
  423502:	pop    es
  423503:	or     al,BYTE PTR [eax]
  423505:	jmp    0x71360995
  42350a:	add    al,0xa0
  42350c:	mov    bh,dl
  42350e:	push   ds
  42350f:	add    al,0xcf
  423511:	addr16 out 0x14,eax
  423514:	mov    dl,0x29
  423516:	pop    ecx
  423517:	(bad)  
  423519:	arpl   WORD PTR [edx+0x620c25],bx
  42351f:	add    BYTE PTR [ebp-0x2956ee07],ah
  423525:	xchg   ecx,eax
  423526:	inc    edx
  423527:	jmp    0x423571
  423529:	inc    esi
  42352a:	and    al,0xd9
  42352c:	ds dec esp
  42352e:	call   FWORD PTR [ebx+0xc]
  423531:	push   es
  423532:	cli    
  423533:	sub    ebx,DWORD PTR [ebx+0x5d]
  423536:	and    al,0xf5
  423538:	(bad)  
  423539:	xchg   ecx,eax
  42353a:	push   edx
  42353b:	call   0xf5a8496a
  423540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423541:	push   ebp
  423542:	and    al,0x0
  423544:	je     0x423582
  423546:	not    edi
  423548:	dec    eax
  42354a:	or     al,0xeb
  42354c:	jno    0x423512
  42354e:	add    bh,bh
  423550:	imul   ebx,edx,0x62
  423553:	adc    al,0x84
  423555:	popa   
  423556:	sub    al,0x0
  423558:	jl     0x423596
  42355a:	jnp    0x423522
  42355c:	fs inc edx
  42355e:	not    edi
  423560:	out    dx,eax
  423561:	ror    DWORD PTR [edi+ebx*2],1
  423564:	cli    
  423565:	(bad)  
  423566:	or     al,0x0
  423568:	(bad)  
  423569:	push   edx
  42356a:	cmp    al,0x53
  42356c:	loop   0x4235cc
  42356e:	je     0x4235a8
  423570:	add    al,0x7
  423572:	out    dx,eax
  423573:	xor    edx,DWORD PTR [edi]
  423575:	xor    al,0x56
  423577:	sbb    dl,al
  423579:	xor    DWORD PTR [ebp+0x3e06ab04],ecx
  42357f:	and    al,al
  423581:	add    eax,DWORD PTR [ebx-0x19fffff8]
  423587:	(bad)  
  423589:	je     0x42359b
  42358b:	cld    
  42358c:	cli    
  42358d:	into   
  42358e:	outs   dx,DWORD PTR ds:[esi]
  42358f:	popf   
  423590:	imul   eax
  423592:	shl    DWORD PTR [esi+esi*8+0x74c581ff],1
  423599:	or     eax,0x18562d3f
  42359e:	dec    bh
  4235a0:	sub    eax,eax
  4235a2:	sub    cl,BYTE PTR [ebp-0x46]
  4235a5:	add    al,0xbc
  4235a7:	pop    esi
  4235a8:	ds and al,0x47
  4235ab:	dec    esp
  4235ac:	sbb    al,0x8d
  4235ae:	mov    al,0x53
  4235b0:	pop    es
  4235b1:	mov    bh,0xb0
  4235b3:	xor    ecx,DWORD PTR [ebp+0x45d3d04]
  4235b9:	cmp    BYTE PTR [edi-0x2a1b1c2e],bh
  4235bf:	popf   
  4235c0:	jl     0x4235ae
  4235c2:	out    dx,al
  4235c3:	in     eax,0xb
  4235c5:	into   
  4235c6:	push   ss
  4235c7:	icebp  
  4235c8:	push   esp
  4235c9:	push   edx
  4235ca:	pop    esi
  4235cb:	xchg   esi,eax
  4235cc:	xor    edx,DWORD PTR [ecx]
  4235ce:	adc    eax,0xd76658f1
  4235d3:	mov    ds:0x5c0a53f0,eax
  4235d8:	(bad)  
  4235d9:	lea    edx,[eax]
  4235db:	loope  0x42362c
  4235dd:	sti    
  4235de:	call   0xc5b826cb
  4235e3:	dec    edx
  4235e4:	icebp  
  4235e5:	sti    
  4235e6:	sub    ebp,DWORD PTR [esi-0x41]
  4235e9:	je     0x4235eb
  4235eb:	add    bh,bh
  4235ed:	repz dec edx
  4235ef:	or     al,0xaa
  4235f1:	dec    edx
  4235f2:	or     BYTE PTR [ebp+0x4f4fc090],cl
  4235f8:	xor    bh,dh
  4235fa:	sti    
  4235fb:	cli    
  4235fc:	rol    BYTE PTR [edi+ecx*1],0x40
  423600:	aad    0x6d
  423602:	mov    edi,0xfe40d174
  423607:	out    0xe5,al
  423609:	cli    
  42360a:	(bad)  
  42360b:	push   edx
  42360c:	mov    ds:0x88fb58f7,al
  423611:	shl    al,0x75
  423614:	int    0x6f
  423616:	fldcw  WORD PTR [esi]
  423618:	adc    eax,0x885751c8
  42361d:	xor    bh,bl
  42361f:	dec    DWORD PTR [eax+0x4e64eb9f]
  423625:	(bad)  
  423626:	das    
  423627:	add    ch,dl
  423629:	lock jl 0x42367a
  42362c:	fstp   DWORD PTR [ebx+0x55]
  42362f:	adc    al,0x4e
  423631:	mov    ds:0xf0ddb917,al
  423636:	(bad)  
  423637:	jmp    esi
  423639:	or     DWORD PTR [edx],esp
  42363b:	xor    al,0x95
  42363d:	lods   eax,DWORD PTR ds:[esi]
  42363e:	frstor [edx+0x21]
  423641:	or     al,0xc5
  423643:	and    edx,DWORD PTR [esi+ecx*8-0x1472fb24]
  42364a:	stc    
  42364b:	or     DWORD PTR [esi+0x3d3d42],0xa792fb00
  423655:	adc    edx,DWORD PTR [edx-0x5]
  423658:	jae    0x423624
  42365a:	push   cs
  42365b:	inc    eax
  42365c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42365d:	pop    ecx
  42365e:	push   edx
  42365f:	in     eax,dx
  423660:	data16 loopne 0x42362c
  423663:	icebp  
  423664:	mov    gs,edi
  423666:	pop    esi
  423667:	fiadd  WORD PTR [esi-0x16b5dcdc]
  42366d:	mov    BYTE PTR ds:0x1531e254,dl
  423673:	lock fiadd WORD PTR [edx*8-0x22b64cf7]
  42367b:	or     BYTE PTR [esi],dh
  42367d:	jnp    0x423647
  42367f:	loope  0x42367a
  423681:	inc    ebx
  423682:	aad    0x36
  423684:	sbb    al,0x1
  423686:	mov    bl,0x9
  423688:	mov    dl,bl
  42368a:	jb     0x423689
  42368c:	xchg   esi,eax
  42368d:	inc    ebx
  42368e:	aad    0x84
  423690:	test   eax,0xe971badb
  423695:	imul   edx,DWORD PTR [ebp-0x213a1f7],0xeeef63b7
  42369f:	xchg   ecx,eax
  4236a0:	sbb    al,0x24
  4236a2:	adc    ecx,DWORD PTR [edx-0x17]
  4236a5:	push   ebx
  4236a6:	ins    DWORD PTR es:[edi],dx
  4236a7:	stc    
  4236a8:	into   
  4236a9:	inc    ebx
  4236aa:	aad    0xf1
  4236ac:	sub    esi,ebp
  4236ae:	into   
  4236af:	(bad)  [esi+0x1]
  4236b2:	loope  0x42366b
  4236b4:	add    BYTE PTR [edx+0x39d60000],ch
  4236ba:	call   0xfc23c67a
  4236bf:	ins    DWORD PTR es:[edi],dx
  4236c0:	xchg   ecx,eax
  4236c1:	push   edi
  4236c2:	add    ebx,ebx
  4236c4:	xchg   esi,eax
  4236c5:	repz mov dh,0xe9
  4236c8:	(bad)  
  4236c9:	or     DWORD PTR [edx+0x5c],edx
  4236cc:	or     al,0xee
  4236ce:	mov    eax,0x9d1ef
  4236d3:	adc    DWORD PTR [eax-0x3e],esi
  4236d6:	add    cl,ch
  4236d8:	inc    edi
  4236da:	push   eax
  4236db:	out    dx,al
  4236dc:	xchg   DWORD PTR ds:0xcbb28afb,ebp
  4236e2:	aas    
  4236e3:	jmp    0x6d4dff97
  4236e8:	cmp    eax,0xcfe9000a
  4236ed:	push   ss
  4236ee:	test   al,0xdb
  4236f0:	xchg   esi,eax
  4236f1:	or     DWORD PTR [eax+0x9],ebp
  4236f4:	scas   eax,DWORD PTR es:[edi]
  4236f5:	dec    ecx
  4236f6:	add    BYTE PTR [ecx],bl
  4236f8:	sub    bh,BYTE PTR [eax+0x49bcf968]
  4236fe:	add    BYTE PTR [esi+0x2ace25ed],ah
  423704:	fnstcw WORD PTR [eax+ebp*1-0x45]
  423708:	xchg   edi,eax
  423709:	or     ebx,edi
  42370b:	mov    bh,0xae
  42370d:	inc    ebp
  42370e:	jbe    0x423739
  423710:	shl    eax,1
  423712:	xor    eax,0x1d24c5
  423717:	dec    edx
  423718:	fcmove st,st(3)
  42371a:	aas    
  42371b:	jmp    0xb8453720
  423720:	push   0x497cc9
  423725:	pop    esi
  423726:	popf   
  423727:	and    eax,0x7cd6aace
  42372c:	xor    BYTE PTR [ebx],bh
  42372e:	pop    ss
  42372f:	or     bh,bl
  423731:	add    dl,ch
  423733:	inc    eax
  423734:	je     0x4237b0
  423736:	ins    BYTE PTR es:[edi],dx
  423737:	or     bh,dh
  423739:	xor    eax,0x3bb7c8
  42373e:	pop    edi
  42373f:	adc    al,0xca
  423741:	inc    ebx
  423742:	mov    esp,0x2c68ceeb
  423747:	jae    0x423789
  423749:	add    bl,al
  42374b:	and    DWORD PTR [edx+edx*8],esp
  42374e:	aas    
  42374f:	or     BYTE PTR [ebx+0x47ee38],bl
  423755:	(bad)  
  423756:	jmp    0x3908:0x2fd23ca7
  42375d:	cmp    eax,0x3bba94
  423762:	or     esi,ebx
  423764:	cmp    BYTE PTR ds:0x3bb7d0,bh
  42376a:	clc    
  42376b:	or     eax,0xb7ec3d39
  423770:	cmp    eax,DWORD PTR [eax]
  423772:	or     dh,dh
  423774:	cmp    BYTE PTR ds:0x3bb7d4,bh
  42377a:	clc    
  42377b:	fnsave [edx]
  42377d:	(bad)  
  42377e:	call   0x43e794
  423783:	add    BYTE PTR [edi+0x7],al
  423786:	sub    al,al
  423788:	loop   0x4237d8
  42378a:	push   ebx
  42378b:	leave  
  42378c:	outs   dx,BYTE PTR ds:[esi]
  42378d:	adc    DWORD PTR [eax],eax
  42378f:	push   ebx
  423790:	ja     0x42375f
  423792:	jnp    0x423777
  423794:	std    
  423795:	push   edx
  423796:	adc    al,ch
  423798:	test   BYTE PTR [edx-0x9],bh
  42379b:	jmp    FWORD PTR [eax-0x3b]
  42379e:	je     0x4237a7
  4237a0:	jg     0x42377e
  4237a2:	add    edx,edx
  4237a4:	aas    
  4237a5:	or     BYTE PTR [ecx],al
  4237a7:	push   esi
  4237a8:	sub    ebp,DWORD PTR [ebp-0x502a2db4]
  4237ae:	(bad)  
  4237af:	mov    ecx,0x411f15
  4237b4:	mov    ebp,0xd5005e89
  4237b9:	jnp    0x42375b
  4237bb:	pusha  
  4237bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237bd:	mov    al,0xff
  4237bf:	pop    ecx
  4237c0:	pop    eax
  4237c1:	xor    DWORD PTR [ebx+0x4],esi
  4237c4:	out    0x30,eax
  4237c6:	dec    ecx
  4237c7:	mov    edi,0x6734858
  4237cc:	sub    eax,0xd53fd379
  4237d1:	or     BYTE PTR [edx-0x2e],dh
  4237d4:	aad    0xf0
  4237d6:	xlat   BYTE PTR ds:[ebx]
  4237d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d8:	paddusb mm5,mm4
  4237db:	cmp    al,0xd7
  4237dd:	pop    esi
  4237de:	loop   0x4237c8
  4237e0:	pop    edi
  4237e1:	aas    
  4237e2:	in     eax,dx
  4237e3:	sti    
  4237e4:	aaa    
  4237e5:	inc    ecx
  4237e6:	fdivr  DWORD PTR [edi]
  4237e8:	add    BYTE PTR [eax],al
  4237ea:	aad    0x64
  4237ec:	mov    edi,0x93c8c575
  4237f1:	inc    esi
  4237f2:	push   edx
  4237f3:	int3   
  4237f4:	sub    eax,DWORD PTR [esi+eax*8]
  4237f7:	xchg   edx,eax
  4237f8:	scas   eax,DWORD PTR es:[edi]
  4237f9:	(bad)  
  4237fa:	je     0x42381d
  4237fc:	fdivr  DWORD PTR [edi]
  4237fe:	aad    0x6d
  423800:	enter  0xd975,0xec
  423804:	add    DWORD PTR [esi+0x6a],ebp
  423807:	inc    ecx
  423808:	(bad)  
  423809:	push   esi
  42380a:	push   ss
  42380b:	stc    
  42380c:	or     ecx,esi
  42380e:	xchg   esi,eax
  42380f:	lock pop ecx
  423811:	sti    
  423812:	std    
  423813:	in     al,dx
  423814:	mov    ?,ebx
  423816:	or     dl,BYTE PTR [eax-0x5]
  423819:	int    0x96
  42381b:	lock add al,0x81
  42381f:	retf   
  423820:	push   esp
  423821:	sti    
  423822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423823:	imul   edx,DWORD PTR [edx],0x4c
  423826:	lds    ecx,FWORD PTR [ecx]
  423828:	test   eax,0xf9a68503
  42382d:	rcr    DWORD PTR [edx-0x5f0077f7],1
  423833:	inc    esi
  423834:	jmp    0xdddd3e25
  423839:	rol    DWORD PTR [edx],1
  42383b:	or     cl,bh
  42383d:	add    DWORD PTR ds:0xaff86af2,ebx
  423843:	fidivr DWORD PTR [ecx+0x2]
  423846:	push   cs
  423847:	(bad)  
  423848:	xlat   BYTE PTR ds:[ebx]
  423849:	ret    
  42384a:	bound  esi,QWORD PTR [esi+ebp*2]
  42384d:	fild   WORD PTR [eax]
  42384f:	add    BYTE PTR [ebp+ebp*8-0x1f],dl
  423853:	add    ebp,edx
  423855:	or     DWORD PTR [ebx],edx
  423857:	inc    esi
  423858:	fisttp QWORD PTR [eax]
  42385a:	jl     0x423886
  42385c:	push   eax
  42385d:	test   BYTE PTR [ecx],al
  42385f:	out    dx,al
  423860:	jle    0x42383c
  423862:	cdq    
  423863:	pop    ecx
  423864:	aad    0x6f
  423866:	jmp    0xe9b1fbc4
  42386b:	jmp    0x84d5:0x43f619c8
  423872:	test   eax,0xa917d970
  423877:	fist   WORD PTR [edi+0x3d817433]
  42387d:	fdivr  QWORD PTR [edx+0x419ba5eb]
  423883:	(bad)  
  423884:	repnz or DWORD PTR [ebx],edx
  423887:	jmp    0x423849
  423889:	test   BYTE PTR gs:[ebx-0x2b],0x33
  42388e:	call   0xaf04:0x28f6b511
  423895:	jno    0x42387c
  423897:	add    al,0xd5
  423899:	or     DWORD PTR [ecx+eax*4-0x3],esi
  42389d:	fstp   TBYTE PTR [edx-0x15]
  4238a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238a1:	outs   dx,DWORD PTR ds:[esi]
  4238a2:	add    cl,ch
  4238a4:	push   ebx
  4238a6:	cmp    ebx,eax
  4238a8:	xchg   esi,eax
  4238a9:	or     DWORD PTR [ebp-0x4240e8c],ecx
  4238af:	pop    esi
  4238b0:	xor    cl,0x3e
  4238b3:	sub    DWORD PTR [eax],eax
  4238b5:	add    BYTE PTR [edi+0x722985d5],bh
  4238bb:	outs   dx,BYTE PTR ds:[esi]
  4238bc:	into   
  4238bd:	stos   BYTE PTR es:[edi],al
  4238be:	(bad)  
  4238bf:	add    al,0x95
  4238c1:	sub    DWORD PTR [eax-0x68],edi
  4238c4:	add    al,0xe9
  4238c6:	add    eax,0x8d68ec91
  4238cb:	jb     0x4238d1
  4238cd:	jmp    0xf18814a8
  4238d2:	ror    DWORD PTR [eax+0x52],1
  4238d5:	mov    esi,0xe98c8d8f
  4238da:	(bad)  
  4238db:	or     DWORD PTR [eax+0x3fbe06c4],eax
  4238e1:	jmp    0x5bc43db7
  4238e6:	(bad)  [ecx]
  4238e8:	add    BYTE PTR [edx-0xe827c81],bh
  4238ee:	hlt    
  4238ef:	nop
  4238f0:	xor    ecx,0xfffffff3
  4238f3:	dec    ecx
  4238f4:	add    BYTE PTR [ebp+eax*4+0x62],ah
  4238f8:	test   esi,0x9fdbe23f
  4238fe:	(bad)  
  4238ff:	or     DWORD PTR [ebp-0x428d19c],ecx
  423905:	mov    dh,0x86
  423907:	sub    al,al
  423909:	sbb    DWORD PTR [ecx-0x44064c2c],eax
  42390f:	dec    ecx
  423910:	add    BYTE PTR [ecx],bh
  423912:	jmp    FWORD PTR cs:[edi]
  423915:	cli    
  423916:	xchg   esi,eax
  423917:	or     DWORD PTR [ebp-0x7affff57],eax
  42391d:	xor    BYTE PTR [ebp-0x21b8f00],cl
  423923:	(bad)  
  423924:	jnp    0x423962
  423926:	add    esi,0x79
  423929:	cmp    eax,0xe8e37bfd
  42392f:	push   esp
  423930:	sbb    eax,0xac84f7e4
  423935:	push   0x69f1ff0b
  42393a:	retf   0xbc43
  42393d:	push   edi
  42393e:	mov    ebx,0x5ffa1b50
  423943:	adc    ch,BYTE PTR [esp+ecx*1-0x7b]
  423947:	shl    BYTE PTR [eax-0x2f],0xf6
  42394b:	inc    ebp
  42394c:	mov    ah,0x8f
  42394e:	mov    edi,0x54e42f0c
  423953:	jb     0x42396d
  423955:	mov    eax,0xd4418b1f
  42395a:	(bad)  
  42395b:	shr    BYTE PTR [eax+0x4f0c8057],0x4c
  423962:	add    BYTE PTR [ecx],cl
  423964:	jno    0x42393a
  423966:	int    0x43
  423968:	jl     0x423921
  42396a:	or     esi,esi
  42396c:	jno    0x423942
  42396e:	int    0x43
  423970:	ins    BYTE PTR es:[edi],dx
  423971:	or     esi,DWORD PTR [edx+ecx*1-0x13]
  423975:	loopne 0x42397a
  423977:	sar    bh,cl
  423979:	or     eax,0xc3c0fe0
  42397e:	push   edi
  42397f:	pop    esi
  423980:	add    BYTE PTR [eax],al
  423982:	mov    esp,0x6ec9530c
  423987:	or     DWORD PTR [eax],eax
  423989:	push   ebp
  42398a:	mov    bh,0xb1
  42398c:	sub    esp,0xe68
  423992:	fist   WORD PTR [esi+0x1d]
  423995:	in     al,0x1e
  423997:	dec    esp
  423998:	add    BYTE PTR [esi-0x2b],dl
  42399b:	pop    ss
  42399c:	pop    esp
  42399d:	inc    esp
  42399e:	and    eax,0x26fb0423
  4239a3:	xchg   ebx,eax
  4239a4:	mov    edi,0xb693b566
  4239a9:	push   eax
  4239aa:	xor    ecx,DWORD PTR [esi]
  4239ac:	mov    ebp,0xa500d53f
  4239b1:	cmp    BYTE PTR ds:0x4c61ffa3,al
  4239b7:	in     eax,0x3f
  4239b9:	rcl    BYTE PTR [esi],1
  4239bb:	loope  0x423a1e
  4239bd:	mov    eax,ebx
  4239bf:	add    al,0xd4
  4239c1:	aas    
  4239c2:	aad    0x83
  4239c4:	xor    al,dl
  4239c6:	push   ss
  4239c7:	loope  0x4239b1
  4239c9:	adc    eax,0x3fb6cd
  4239ce:	push   esi
  4239cf:	sub    eax,0x14a251f8
  4239d4:	jae    0x42398b
  4239d6:	mov    edi,0x7dfbe8f4
  4239db:	test   DWORD PTR [esi-0x5],ecx
  4239de:	mov    ch,BYTE PTR [esp+eax*2+0x7c]
  4239e2:	ss pop ebp
  4239e4:	mov    ebp,0xd500003f
  4239e9:	pop    ebx
  4239ea:	mov    esi,0x54757d50
  4239ef:	sti    
  4239f0:	push   0x36
  4239f2:	stos   DWORD PTR es:[edi],eax
  4239f3:	push   ss
  4239f4:	popa   
  4239f5:	lock call 0xe95446e3
  4239fb:	sti    
  4239fc:	pop    esi
  4239fd:	test   eax,0x8658c034
  423a02:	out    dx,eax
  423a03:	std    
  423a04:	inc    edx
  423a05:	sar    BYTE PTR [edi],1
  423a07:	call   0xfc2b2db1
  423a0c:	pop    esi
  423a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a0e:	dec    edi
  423a0f:	call   0xfc2b2df8
  423a14:	lods   eax,DWORD PTR ds:[esi]
  423a15:	or     DWORD PTR [ebp+0x6e09956e],ebp
  423a1b:	shl    BYTE PTR [ebp-0x24b8032a],0x49
  423a22:	jmp    0x8313caab
  423a27:	xor    al,0x7
  423a29:	inc    eax
  423a2a:	adc    ebx,DWORD PTR [esi-0xe]
  423a2d:	cmp    al,0xff
  423a2f:	add    bh,BYTE PTR [ebp+0x9]
  423a32:	jmp    0x2ac58f3a
  423a37:	push   ebx
  423a38:	push   ss
  423a39:	dec    ebp
  423a3a:	pop    ebp
  423a3b:	jmp    0xe92b4414
  423a40:	loopne 0x4239df
  423a42:	test   DWORD PTR [ebx-0x2b],0xbe844182
  423a49:	(bad)  
  423a4a:	mov    ch,0x20
  423a4c:	add    BYTE PTR [eax],al
  423a4e:	pop    es
  423a4f:	test   DWORD PTR [edi+eiz*8-0x184b28fb],ebp
  423a56:	push   eax
  423a57:	mov    WORD PTR [ecx],ds
  423a59:	out    0x9e,al
  423a5b:	(bad)  
  423a5c:	mov    ecx,0xa4fc8e50
  423a61:	adc    eax,0xc3640a15
  423a66:	or     DWORD PTR [eax],edx
  423a68:	outs   dx,BYTE PTR ds:[esi]
  423a69:	ds jns 0x4239ec
  423a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a6d:	jmp    0x423a75
  423a6f:	xlat   BYTE PTR ds:[ebx]
  423a70:	fdivr  QWORD PTR [ebx+0x7ce949db]
  423a76:	sbb    dl,dl
  423a78:	data16 in al,dx
  423a7a:	pop    esi
  423a7b:	pop    ebp
  423a7c:	in     eax,0x9b
  423a7e:	aam    0x5d
  423a80:	out    0x32,eax
  423a82:	adc    eax,0xc33c1b8
  423a87:	outs   dx,DWORD PTR ds:[esi]
  423a88:	jo     0x423b02
  423a8a:	nop
  423a8b:	fnstcw WORD PTR [edi+eiz*8+0x6c00842e]
  423a92:	and    esp,edx
  423a94:	sti    
  423a95:	scas   al,BYTE PTR es:[edi]
  423a96:	add    DWORD PTR [eax+ecx*8],ebx
  423a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a9a:	xor    al,BYTE PTR [ebp+eax*4-0x42e0367]
  423aa1:	sbb    DWORD PTR [ebx+0x51],0x4da18efb
  423aa8:	ret    
  423aa9:	sub    dl,cl
  423aab:	xor    BYTE PTR ds:0x163229,0x60
  423ab2:	add    BYTE PTR [eax],al
  423ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ab5:	xor    eax,0xd2d92ac3
  423aba:	iret   
  423abb:	push   ecx
  423abc:	pusha  
  423abd:	fdivr  st,st(3)
  423abf:	pop    esi
  423ac0:	xor    DWORD PTR [esi+0x73],edi
  423ac3:	test   eax,0x5115d0d6
  423ac8:	jmp    0x7b443b16
  423acd:	pop    esi
  423ace:	or     DWORD PTR [edx-0x3f],esi
  423ad1:	loop   0x423acc
  423ad3:	pop    esi
  423ad4:	mov    dl,0xd1
  423ad6:	out    0xeb,eax
  423ad8:	in     al,0xc9
  423ada:	test   BYTE PTR [ecx],ch
  423adc:	and    eax,0x2ec7f09
  423ae1:	mov    edx,0xe1d1e93f
  423ae6:	mov    DWORD PTR [edx+edi*2-0x2f],esi
  423aea:	pop    ebx
  423aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aec:	inc    esi
  423aed:	or     edx,DWORD PTR [edi+0x30]
  423af0:	xchg   esi,eax
  423af1:	aas    
  423af2:	xchg   DWORD PTR ds:0x68f8ee56,eax
  423af8:	jge    0x423b58
  423afa:	add    ebp,ecx
  423afc:	(bad)  
  423afd:	inc    esp
  423afe:	push   edx
  423aff:	ss into 
  423b01:	push   esi
  423b02:	or     BYTE PTR [edx],bl
  423b04:	push   ds
  423b05:	push   ebp
  423b06:	jecxz  0x423af0
  423b08:	shl    esi,0xe3
  423b0b:	add    BYTE PTR [edx+0x48],bl
  423b0e:	add    BYTE PTR [ebp+0x3a],dh
  423b11:	push   esi
  423b12:	sbb    eax,0x484e08
  423b17:	inc    DWORD PTR [eax]
  423b19:	add    cl,ch
  423b1b:	aad    0xe3
  423b1d:	pop    esi
  423b1e:	ja     0x423b0c
  423b20:	test   DWORD PTR [esp+edi*1+0x3c31ff5a],0xec014cb6
  423b2b:	or     BYTE PTR [ebx+0x68],cl
  423b2e:	in     al,dx
  423b2f:	or     BYTE PTR [eax],cl
  423b31:	add    bh,cl
  423b33:	in     al,dx
  423b34:	adc    eax,0x490e68
  423b39:	mov    ds:0x3b96b0,eax
  423b3e:	mov    bh,0xc8
  423b40:	jne    0x423b55
  423b42:	xor    edi,edx
  423b44:	outs   dx,DWORD PTR ds:[esi]
  423b45:	adc    bh,BYTE PTR [eax+ecx*1-0x65]
  423b49:	mov    esp,0x880047fa
  423b4e:	mov    cl,0xbf
  423b50:	mov    esp,0xffafbc43
  423b55:	lds    edi,FWORD PTR [ecx-0x53bc4341]
  423b5b:	or     eax,0x91340962
  423b60:	mov    esi,0x88457c43
  423b65:	sbb    bh,bh
  423b67:	enter  0x4908,0x69
  423b6b:	loopne 0x423af0
  423b6d:	xor    eax,0x3ffac8
  423b72:	inc    esp
  423b73:	clc    
  423b74:	mov    esi,0xceeb7c43
  423b79:	push   0x3bb850
  423b7e:	add    BYTE PTR [eax],al
  423b80:	jae    0x423b45
  423b82:	lea    eax,[eax+ebx*8-0x3]
  423b86:	dec    edi
  423b87:	push   0x1e0d5
  423b8c:	aad    0x69
  423b8e:	add    esi,DWORD PTR [ebp+eiz*1+0x1f]
  423b92:	add    al,0xfb
  423b94:	enter  0xba2,0x40
  423b98:	aad    0x67
  423b9a:	cmp    ecx,DWORD PTR [eax]
  423b9c:	sub    eax,0x1afbe3e7
  423ba1:	les    si,DWORD PTR [esi+edx*2-0x19]
  423ba6:	call   0x5151f220
  423bab:	data16 aam 0xa
  423bae:	inc    esp
  423baf:	into   
  423bb0:	xchg   esi,eax
  423bb1:	loop   0x423b97
  423bb3:	adc    eax,0x3fb009
  423bb8:	push   esi
  423bb9:	in     eax,dx
  423bba:	(bad)  
  423bbc:	xchg   esi,eax
  423bbd:	loop   0x423ba3
  423bbf:	lahf   
  423bc0:	stc    
  423bc1:	adc    eax,DWORD PTR [ecx+0x0]
  423bc4:	push   cs
  423bc5:	and    ch,dh
  423bc7:	sub    DWORD PTR [ecx],0x3c
  423bca:	in     eax,0xfb
  423bcc:	lods   eax,DWORD PTR ds:[esi]
  423bcd:	popf   
  423bce:	jecxz  0x423bcb
  423bd0:	mov    edx,0x590bc465
  423bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bd6:	in     al,0xfb
  423bd8:	stos   BYTE PTR es:[edi],al
  423bd9:	sbb    al,0x6b
  423bdb:	or     BYTE PTR [ebp-0x650417a0],ch
  423be1:	les    ecx,FWORD PTR gs:[ebx]
  423be4:	add    BYTE PTR [eax],al
  423be6:	pop    ecx
  423be7:	mov    ah,0xe4
  423be9:	sti    
  423bea:	mov    bh,ah
  423bec:	or     bl,BYTE PTR [eax-0x61005f1c]
  423bf2:	add    ebp,esi
  423bf4:	inc    eax
  423bf5:	add    BYTE PTR [esi+0x5e516b07],ch
  423bfb:	mov    dh,0x3
  423bfd:	into   
  423bfe:	push   ss
  423bff:	loope  0x423bd8
  423c01:	arpl   WORD PTR [ecx+0xa],si
  423c04:	loop   0x423bea
  423c06:	or     al,bh
  423c08:	jmp    0xfae4:0xd2d2e87f
  423c0f:	or     al,0xed
  423c11:	sar    edx,1
  423c13:	or     DWORD PTR [esi-0x16b8f835],eax
  423c19:	sub    BYTE PTR [edx],ah
  423c1b:	pop    ebp
  423c1c:	add    dh,BYTE PTR [edi+0x61]
  423c1f:	mov    DWORD PTR cs:[edx],eax
  423c22:	aad    0x9
  423c24:	xchg   ecx,eax
  423c25:	in     eax,dx
  423c26:	adc    dl,bl
  423c28:	jmp    0xcdd0947d
  423c2d:	(bad)  
  423c2f:	or     ecx,ebp
  423c31:	push   ebx
  423c32:	(bad)  
  423c33:	sbb    al,0xdd
  423c35:	shl    DWORD PTR [edx+0x77b4009],1
  423c3b:	inc    edi
  423c3c:	jmp    0x26ff999c
  423c41:	add    al,0x1d
  423c43:	clc    
  423c44:	jne    0x423bd6
  423c46:	pop    ecx
  423c47:	loope  0x423c82
  423c49:	rol    DWORD PTR [eax],1
  423c4b:	add    ch,dl
  423c4d:	or     DWORD PTR [edx+0x6e],edx
  423c50:	int    0xe1
  423c52:	pusha  
  423c53:	out    0xbe,eax
  423c55:	shr    BYTE PTR [ebp-0x3d],cl
  423c58:	fimul  WORD PTR [ebp-0x2d511ad6]
  423c5e:	test   bl,0xa7
  423c61:	dec    esp
  423c62:	loope  0x423c65
  423c64:	dec    esp
  423c65:	hlt    
  423c66:	in     al,0xbc
  423c68:	ror    BYTE PTR [ecx],cl
  423c6a:	and    DWORD PTR [eax+0x3a6be75],0x9
  423c71:	or     eax,DWORD PTR [ecx]
  423c73:	sbb    eax,0xd802d278
  423c78:	jae    0x423c1c
  423c7a:	call   0x4466a8
  423c7f:	pop    esp
  423c80:	xchg   esi,eax
  423c81:	cs pop edx
  423c83:	xchg   edx,eax
  423c84:	fucomp st(4)
  423c86:	pop    ebp
  423c87:	stos   DWORD PTR es:[edi],eax
  423c88:	fisttp QWORD PTR [ecx]
  423c8a:	push   ebp
  423c8b:	jb     0x423cd2
  423c8d:	push   edx
  423c8e:	in     al,0xd1
  423c90:	pop    eax
  423c91:	in     eax,0x20
  423c93:	loope  0x423c6b
  423c95:	or     DWORD PTR [edx+0x1e],edx
  423c98:	inc    esp
  423c99:	xchg   ebp,eax
  423c9a:	and    al,0x31
  423c9c:	ror    DWORD PTR [ecx],cl
  423c9e:	add    cl,al
  423ca0:	mov    bh,0xd2
  423ca2:	sti    
  423ca3:	jmp    0x1b6699ed
  423ca8:	add    DWORD PTR [ebx-0x760961b6],ebp
  423cae:	and    BYTE PTR [edi+0x9d80000],0x0
  423cb5:	add    edx,ebx
  423cb7:	test   BYTE PTR [ebp+ecx*8-0x16042c9e],cl
  423cbe:	mov    eax,ds:0x45e175ce
  423cc3:	inc    ebp
  423cc4:	and    al,0xd5
  423cc6:	outs   dx,BYTE PTR ds:[esi]
  423cc7:	push   ecx
  423cc8:	aam    0xaa
  423cca:	(bad)  
  423ccb:	loope  0x423d1e
  423ccd:	cmp    edx,ecx
  423ccf:	or     DWORD PTR [edi-0x7e1df6d1],eax
  423cd5:	mov    ecx,0xad8dd5b7
  423cda:	cli    
  423cdb:	add    DWORD PTR [eax-0x2d],edx
  423cde:	shl    DWORD PTR [ecx+0x40],1
  423ce1:	sbb    ebx,DWORD PTR [edx]
  423ce3:	or     bh,bl
  423ce5:	aam    0xd6
  423ce7:	add    BYTE PTR [eax-0x17],al
  423cea:	arpl   dx,bx
  423cec:	test   DWORD PTR [edi],edx
  423cee:	sub    eax,0x32fcfafc
  423cf3:	add    BYTE PTR [eax-0x17],al
  423cf6:	mov    ch,0x9c
  423cf8:	add    BYTE PTR [eax],al
  423cfa:	jl     0x423d09
  423cfc:	jne    0x423d07
  423cfe:	inc    edx
  423cff:	in     al,dx
  423d00:	adc    eax,0x4d7ec8
  423d05:	xor    esp,DWORD PTR [edx+0x4c]
  423d08:	add    esi,0xffffff9a
  423d0b:	and    ch,0x5d
  423d0e:	jle    0x423d19
  423d10:	add    BYTE PTR [ebp-0x49],dl
  423d13:	loopne 0x423d90
  423d15:	in     al,0x0
  423d17:	add    BYTE PTR [esi+eax*4],ah
  423d1a:	in     al,dx
  423d1b:	in     al,0x41
  423d1d:	or     eax,0x30b95700
  423d22:	and    al,0x8
  423d24:	adc    al,0xeb
  423d26:	cli    
  423d27:	jmp    FWORD PTR [esp+ebp*8]
  423d2a:	jne    0x423d3c
  423d2c:	xchg   DWORD PTR [ecx],edi
  423d2e:	or     al,0x8d
  423d30:	mov    al,0x21
  423d32:	dec    esp
  423d33:	push   eax
  423d34:	imul   esi,edx,0x13
  423d37:	shr    BYTE PTR [edi-0x1bba7cfb],cl
  423d3d:	fs js  0x423d14
  423d40:	mov    edi,0x3ddde805
  423d45:	or     eax,0xe1775f00
  423d4a:	pop    ebp
  423d4b:	ret    0xcc8
  423d4e:	push   ebp
  423d4f:	mov    ebx,DWORD PTR [eax]
  423d51:	mov    ah,ch
  423d53:	push   0xc75eb82
  423d58:	sbb    DWORD PTR [edx-0x68],eax
  423d5b:	push   eax
  423d5c:	sbb    esi,DWORD PTR [edx]
  423d5e:	or     al,ch
  423d60:	pop    ebx
  423d61:	jmp    0x423d5a
  423d63:	(bad)  
  423d64:	cmp    DWORD PTR [edx-0x68],eax
  423d67:	push   eax
  423d68:	xchg   esi,eax
  423d69:	or     al,0x68
  423d6b:	inc    eax
  423d6c:	into   
  423d6d:	inc    edi
  423d6e:	add    bh,bh
  423d70:	or     DWORD PTR [ebx+ecx*1],0x8ae2d540
  423d77:	lock push eax
  423d79:	clc    
  423d7a:	push   edx
  423d7b:	pop    ss
  423d7c:	add    BYTE PTR [eax],al
  423d7e:	inc    DWORD PTR [edi]
  423d80:	cmp    ebx,edi
  423d82:	sar    dh,0xf4
  423d85:	aas    
  423d86:	aad    0x5d
  423d88:	mov    edi,0x7f9dc074
  423d8d:	add    ch,dl
  423d8f:	loop   0x423de4
  423d91:	or     ah,BYTE PTR [ebx-0x18380c51]
  423d97:	and    al,BYTE PTR [edi+ebp*1]
  423d9a:	adc    eax,0xddbec720
  423d9f:	loop   0x423d2d
  423da1:	ret    0x973e
  423da4:	xor    eax,DWORD PTR [edi-0x78d10ecf]
  423daa:	enter  0xb5be,0x3f
  423dae:	aad    0x13
  423db0:	cmp    eax,ebp
  423db2:	or     DWORD PTR [ebx-0x6439041f],eax
  423db8:	xchg   DWORD PTR [ebp-0x3],eax
  423dbb:	mov    edx,0x93da75c4
  423dc0:	mov    edi,0xffe210e9
  423dc5:	jmp    FWORD PTR [edi-0x1c]
  423dc8:	xor    al,0x4f
  423dca:	dec    eax
  423dcb:	and    eax,0x682a500c
  423dd0:	push   ebx
  423dd1:	or     BYTE PTR [ebp-0x72],bl
  423dd4:	loopne 0x423e3c
  423dd6:	ret    0xf338
  423dd9:	xor    esp,esp
  423ddb:	mov    al,ds:0x8e9584ff
  423de0:	add    eax,edx
  423de2:	add    BYTE PTR [eax],al
  423de4:	adc    BYTE PTR [eax],dl
  423de6:	jmp    DWORD PTR [eax+0x44f2cd]
  423dec:	push   esi
  423ded:	inc    ecx
  423dee:	clc    
  423def:	or     BYTE PTR [eax],bl
  423df1:	or     dh,ch
  423df3:	cmp    DWORD PTR [edx+0x15],edx
  423df6:	test   edx,esi
  423df8:	ret    0xb609
  423dfb:	fwait
  423dfc:	int    0xbb
  423dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dff:	add    edi,DWORD PTR [edx-0x554a1afc]
  423e05:	or     DWORD PTR [edi-0xeb99df9],ecx
  423e0b:	mov    cs,WORD PTR [eax]
  423e0d:	(bad)  
  423e0e:	xchg   edi,eax
  423e0f:	xor    esp,DWORD PTR [esi+0x1586bbce]
  423e15:	push   ebp
  423e16:	out    0xe1,al
  423e18:	cwde   
  423e19:	into   
  423e1a:	ss pushf 
  423e1c:	fnstcw WORD PTR [ebx+0x4fa0426]
  423e22:	in     eax,0xb5
  423e24:	jmp    0xb146:0x22084f09
  423e2b:	mov    cs,WORD PTR [eax-0x59cbe72f]
  423e31:	into   
  423e32:	mov    ebx,0x14ca5041
  423e37:	add    eax,0xe09244ff
  423e3c:	shr    BYTE PTR [ebp-0x6e2abb4d],0xa5
  423e43:	mov    ecx,0x567a09aa
  423e48:	add    BYTE PTR [eax],al
  423e4a:	fnsave [esi]
  423e4c:	sub    DWORD PTR [esi+eiz*8-0x6a789532],0x10e1e654
  423e57:	iret   
  423e58:	pop    edx
  423e59:	push   ss
  423e5a:	mov    ch,0xb7
  423e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e5d:	add    edi,DWORD PTR [ebp-0x17]
  423e60:	xor    eax,DWORD PTR [ebp+edx*8-0x32]
  423e64:	mov    esp,0x59e206db
  423e69:	fcomp  DWORD PTR [esi-0x6992ff32]
  423e6f:	push   esp
  423e70:	jmp    FWORD PTR [esi]
  423e72:	sbb    edx,ebx
  423e74:	cmp    ah,al
  423e76:	jne    0x423ecd
  423e78:	adc    eax,0x89d691
  423e7d:	jmp    0x11b81143
  423e82:	lods   eax,DWORD PTR ds:[esi]
  423e83:	rcl    BYTE PTR ds:0xe67a5,cl
  423e89:	adc    BYTE PTR [ebp+0x4ef6fbd2],bh
  423e8f:	inc    esp
  423e90:	clc    
  423e91:	xchg   edx,eax
  423e92:	pop    ds
  423e93:	(bad)
  423e97:	or     ebx,edi
  423e99:	adc    al,0x15
  423e9b:	mov    ebx,0xf41be93f
  423ea0:	jmp    0x423e9d
  423ea2:	xchg   esi,eax
  423ea3:	or     ebx,esi
  423ea5:	mov    eax,ds:0xa1f38e2e
  423eaa:	push   ss
  423eab:	xor    al,0x8d
  423ead:	inc    ebp
  423eae:	add    BYTE PTR [eax],al
  423eb0:	in     eax,dx
  423eb1:	jge    0x423e34
  423eb3:	mov    ebp,0xe9fbcfdd
  423eb8:	sar    BYTE PTR [ebp+eax*2+0x5],0xc9
  423ebd:	jl     0x423f04
  423ebf:	add    ecx,0xc10545ca
  423ec5:	or     DWORD PTR [eax],eax
  423ec7:	jmp    0xd8ce32d7
  423ecc:	xchg   esi,eax
  423ecd:	or     DWORD PTR [ebp-0x73038357],eax
  423ed3:	hlt    
  423ed4:	mov    esi,0xd6e9f692
  423ed9:	or     eax,ebp
  423edb:	adc    ecx,DWORD PTR [eax-0x239dfff6]
  423ee1:	icebp  
  423ee2:	adc    DWORD PTR [ecx+0x533cd6],ebp
  423ee8:	push   edi
  423ee9:	or     al,BYTE PTR [ecx]
  423eeb:	add    BYTE PTR [eax+ebx*1-0x7cce00d5],ch
  423ef2:	jo     0x423ef2
  423ef4:	ret    
  423ef5:	lods   al,BYTE PTR ds:[esi]
  423ef6:	dec    edi
  423ef7:	push   eax
  423ef8:	mov    bl,0x93
  423efa:	jnp    0x423ec0
  423efc:	jo     0x423f78
  423efe:	test   DWORD PTR [eax-0x1e],esi
  423f01:	lods   al,BYTE PTR ds:[esi]
  423f02:	not    DWORD PTR [eax-0xb]
  423f05:	mov    dh,BYTE PTR [eax-0x2]
  423f08:	shr    DWORD PTR [edi+esi*8+0x3bdb8815],cl
  423f0f:	add    cl,ch
  423f11:	lds    esi,FWORD PTR [ebp+0x9]
  423f14:	add    BYTE PTR [eax],al
  423f16:	outs   dx,DWORD PTR ds:[esi]
  423f17:	jp     0x423e9e
  423f19:	jo     0x423f4d
  423f1b:	lods   al,BYTE PTR ds:[esi]
  423f1c:	imul   ebx
  423f1e:	inc    edi
  423f1f:	popa   
  423f20:	add    BYTE PTR [ecx],al
  423f22:	sub    al,0x9
  423f24:	lea    eax,[ebp-0x85148]
  423f2a:	retf   
  423f2b:	adc    eax,0xc4afd6f7
  423f30:	or     al,0x8d
  423f32:	fnstcw WORD PTR [ecx-0x48]
  423f35:	cmc    
  423f36:	cld    
  423f37:	or     BYTE PTR [eax],al
  423f39:	call   0x42d880
  423f3e:	jno    0x423f71
  423f40:	inc    eax
  423f41:	mov    eax,0x95a
  423f46:	push   esp
  423f47:	(bad)  
  423f48:	rol    BYTE PTR [eax],1
  423f4a:	cld    
  423f4b:	jg     0x423f0b
  423f4d:	push   eax
  423f4e:	jno    0x423f91
  423f50:	mov    WORD PTR [eax-0x5d],ss
  423f53:	or     al,BYTE PTR [eax]
  423f55:	add    BYTE PTR [eax+eax*4],bh
  423f58:	mov    edi,0x9b7ce8
  423f5d:	add    BYTE PTR [ebp+0x42],al
  423f60:	pop    esp
  423f61:	(bad)  
  423f62:	aad    0xad
  423f64:	pop    ss
  423f65:	mov    eax,0xffffe2aa
  423f6a:	mov    ebp,0xd500af64
  423f6f:	pop    ebp
  423f70:	dec    eax
  423f71:	jo     0x423f78
  423f73:	leave  
  423f74:	add    al,0x2f
  423f76:	mov    esi,DWORD PTR [eax+edx*4+0x45]
  423f7a:	add    BYTE PTR [eax],al
  423f7c:	pop    ecx
  423f7d:	xchg   edx,eax
  423f7e:	xor    cl,BYTE PTR [ecx+0x7d8c7f08]
  423f84:	add    eax,0x7268586a
  423f89:	aad    0x33
  423f8b:	adc    BYTE PTR ds:0xe8c088e3,dl
  423f91:	scas   eax,DWORD PTR es:[edi]
  423f92:	nop
  423f93:	inc    ebp
  423f94:	in     eax,dx
  423f95:	jb     0x423fcc
  423f97:	lea    ebx,[eax-0x3772d066]
  423f9d:	xor    ch,ah
  423f9f:	fdiv   DWORD PTR [edx-0x1e]
  423fa2:	jmp    esi
  423fa4:	(bad)  
  423fa5:	pop    edi
  423fa6:	int3   
  423fa7:	sti    
  423fa8:	push   esi
  423fa9:	mov    edx,0x7ce74dd
  423fae:	ret    0xca72
  423fb1:	repnz fdiv QWORD PTR [ebp-0x53]
  423fb5:	gs pop ebx
  423fb7:	ins    BYTE PTR es:[edi],dx
  423fb8:	jg     0x423f9a
  423fba:	aaa    
  423fbb:	call   0xfc1f1e55
  423fc0:	add    dh,ch
  423fc2:	imul   ebp,eax,0x34
  423fc5:	mov    edx,ds
  423fc7:	sti    
  423fc8:	pop    esi
  423fc9:	and    eax,0x2908970
  423fce:	mov    esi,DWORD PTR [ebp-0x6b]
  423fd1:	dec    edx
  423fd2:	fadd   QWORD PTR [eax]
  423fd4:	aad    0xe2
  423fd6:	out    0x34,eax
  423fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fd9:	loope  0x423fda
  423fdb:	dec    esi
  423fdc:	pop    eax
  423fdd:	or     ch,BYTE PTR [esp+edx*2+0x0]
  423fe1:	add    BYTE PTR [edi+0x33345acb],bh
  423fe7:	or     BYTE PTR [edi+ebx*2+0x25],ah
  423feb:	xor    al,BYTE PTR [ecx-0xe]
  423fee:	(bad)  
  423fef:	retf   0x6a42
  423ff2:	int    0x7c
  423ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff5:	aas    
  423ff6:	add    eax,0x108ee760
  423ffb:	pop    esi
  423ffc:	xchg   ecx,eax
  423ffd:	jmp    0x423fd3
  423fff:	add    eax,0x557edd22
  424004:	lea    ecx,[esi+0x5712e210]
  42400a:	in     eax,0x39
  42400c:	pop    esi
  42400d:	(bad)  
  42400e:	push   edx
  42400f:	push   ebp
  424010:	test   DWORD PTR [ebx],esi
  424012:	sti    
  424013:	or     eax,0xe25f889e
  424018:	sbb    eax,esp
  42401a:	dec    edi
  42401b:	retf   
  42401c:	enterw 0x2ae5,0x70
  424021:	inc    esi
  424022:	mov    ecx,0xd4db662e
  424027:	dec    esp
  424028:	fistp  WORD PTR [ebx+0x3e90a2c]
  42402e:	cmp    eax,0xd503b2ab
  424033:	sub    esp,DWORD PTR [esi-0x3a]
  424036:	mov    eax,ds:0xd507a7c0
  42403b:	xor    ebp,DWORD PTR [ebx-0x1d]
  42403e:	ror    BYTE PTR [ecx],1
  424040:	jmp    0x330bad7a
  424045:	inc    esp
  424046:	add    BYTE PTR [eax],al
  424048:	aad    0x32
  42404a:	xchg   edx,eax
  42404b:	mul    dl
  42404d:	repz sub BYTE PTR [edx+edx*2],al
  424051:	std    
  424052:	mov    al,ds:0xe609a2b5
  424057:	push   cs
  424058:	mov    ecx,0xd92a00b7
  42405d:	dec    edx
  42405e:	(bad)  
  42405f:	fstp   QWORD PTR [ebp-0x3a]
  424062:	daa    
  424063:	ss dec esp
  424065:	cmc    
  424066:	add    BYTE PTR [ecx],bl
  424068:	ror    DWORD PTR [edx],0x4a
  42406b:	fmul   QWORD PTR [ecx+0x5db4bf2f]
  424071:	fld    QWORD PTR [ecx-0x43431ab]
  424077:	jmp    0x64957861
  42407c:	xor    edi,DWORD PTR [edx+0x9d62cb8]
  424082:	add    BYTE PTR [ecx],dl
  424084:	leave  
  424085:	mov    esi,0x944be900
  42408a:	not    BYTE PTR [ecx+edx*4]
  42408d:	into   
  42408e:	call   0xfc115c9c
  424093:	push   es
  424094:	push   es
  424095:	dec    esi
  424096:	xchg   DWORD PTR [esi],esp
  424098:	out    dx,al
  424099:	jns    0x424111
  42409b:	test   eax,0xa48d39d6
  4240a0:	sub    bh,BYTE PTR [ecx]
  4240a2:	call   0xfc1158b9
  4240a7:	jb     0x4240c2
  4240a9:	dec    edx
  4240aa:	(bad)  
  4240ab:	stc    
  4240ac:	add    BYTE PTR [eax],al
  4240ae:	arpl   di,ax
  4240b0:	push   eax
  4240b1:	ror    DWORD PTR [esi+0x3d],0xfb
  4240b5:	(bad)  
  4240b6:	retf   0x37c0
  4240b9:	sar    BYTE PTR [esi+0x6],0x2f
  4240bd:	test   eax,0xe900e300
  4240c2:	(bad)  
  4240c3:	adc    BYTE PTR [ebp-0xf],cl
  4240c6:	iret   
  4240c7:	jg     0x424079
  4240c9:	jmp    0x34c94aa4
  4240ce:	or     eax,0x5c994d80
  4240d3:	inc    esp
  4240d4:	or     BYTE PTR [eax],al
  4240d6:	inc    edi
  4240d7:	or     BYTE PTR [ebx-0x370db7bb],al
  4240dd:	cmp    DWORD PTR [edx+ecx*1-0x77],0x45
  4240e2:	dec    eax
  4240e3:	cdq    
  4240e4:	add    BYTE PTR [ebx],bh
  4240e6:	in     eax,dx
  4240e7:	pop    ecx
  4240e8:	inc    eax
  4240e9:	data16 cmc 
  4240eb:	adc    eax,0x926c3b74
  4240f0:	jne    0x4240d2
  4240f2:	aas    
  4240f3:	(bad)  
  4240f4:	imul   eax
  4240f6:	je     0x4240c6
  4240f8:	idiv   bh
  4240fa:	xor    dh,cl
  4240fc:	pop    es
  4240fd:	test   cl,bh
  4240ff:	or     eax,0x5abb0000
  424104:	call   0xe8efa308
  424109:	and    ebp,DWORD PTR [edx+0xd]
  42410c:	add    BYTE PTR [ecx+0x2de8d941],cl
  424112:	add    BYTE PTR [eax],al
  424114:	mov    ebp,0x5983f7e3
  424119:	fld    DWORD PTR [eax]
  42411b:	je     0x4240fd
  42411d:	jecxz  0x424194
  42411f:	hlt    
  424120:	dec    ebx
  424121:	mov    edx,0xd7c12bf
  424126:	mov    DWORD PTR [ebp+0x34],eax
  424129:	mov    eax,0xe5e988fe
  42412e:	mov    DWORD PTR [ebp+0x10],ecx
  424131:	cwde   
  424132:	inc    ebp
  424133:	clc    
  424134:	mov    DWORD PTR [eax+0x38],edx
  424137:	add    ch,BYTE PTR [ecx-0x211703a7]
  42413d:	jns    0x424135
  42413f:	push   DWORD PTR [edi+0x1]
  424142:	cld    
  424143:	(bad)  
  424144:	lock daa 
  424146:	cmp    eax,0xf8616f47
  42414b:	add    dl,bl
  42414d:	mov    ebx,0x9ad575f6
  424152:	mov    BYTE PTR [esi+ebp*4],al
  424155:	xchg   edi,eax
  424156:	push   eax
  424157:	hlt    
  424158:	test   DWORD PTR [edi-0xd3cf010],ecx
  42415e:	add    edi,DWORD PTR [edi-0x67]
  424161:	scas   al,BYTE PTR es:[edi]
  424162:	add    bh,BYTE PTR [ebp-0x33]
  424165:	aaa    
  424166:	push   eax
  424167:	hlt    
  424168:	fwait
  424169:	mov    dh,0x1a
  42416b:	add    BYTE PTR [ebp-0x4d054f52],ch
  424171:	pop    edi
  424172:	inc    eax
  424173:	lock pop esi
  424175:	ins    DWORD PTR es:[edi],dx
  424176:	iret   
  424177:	aaa    
  424178:	add    BYTE PTR [eax],al
  42417a:	sbb    BYTE PTR [ebx+0x7fe8c06],bh
  424180:	(bad)  
  424181:	sti    
  424182:	pusha  
  424183:	outs   dx,DWORD PTR ds:[esi]
  424184:	add    cl,BYTE PTR [ebp+0x28e6f700]
  42418a:	test   eax,0x9584d5f0
  42418f:	popf   
  424190:	or     DWORD PTR [edi-0x17cde0f0],eax
  424196:	mov    dh,bh
  424198:	fdivr  st,st(3)
  42419a:	ins    BYTE PTR es:[edi],dx
  42419b:	rcl    esi,cl
  42419d:	sti    
  42419e:	pop    edx
  42419f:	cmp    edx,DWORD PTR [eax-0x4]
  4241a2:	mov    ebp,0xd5404ba6
  4241a7:	gs sti 
  4241a9:	cmp    DWORD PTR [ebp-0x18601451],esp
  4241af:	repnz add eax,DWORD PTR [edi+0x5735ff1b]
  4241b6:	sbb    al,0x73
  4241b8:	sub    eax,DWORD PTR [edi+0x10e83131]
  4241be:	(bad)  
  4241bf:	mov    dl,0xff
  4241c1:	dec    esi
  4241c2:	jge    0x424196
  4241c4:	sti    
  4241c5:	dec    DWORD PTR [edx]
  4241c7:	dec    edx
  4241c8:	les    edx,FWORD PTR [ebx-0x6b]
  4241cb:	or     ecx,ebp
  4241cd:	xchg   BYTE PTR [eax-0x43],dl
  4241d0:	fldz   
  4241d3:	mov    al,0x41
  4241d5:	mov    bl,0xef
  4241d7:	(bad)  
  4241d8:	pop    esi
  4241d9:	or     al,BYTE PTR [ebp+0xc2c94]
  4241df:	add    ch,ch
  4241e1:	fst    DWORD PTR [ebx-0x14303126]
  4241e7:	add    ecx,ebx
  4241e9:	(bad)  
  4241ea:	jmp    0xd80d76d
  4241ef:	xchg   DWORD PTR [eax-0x42],ecx
  4241f2:	pop    ebx
  4241f3:	fldcw  WORD PTR [esi+0x5833bb59]
  4241f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241fa:	push   ebp
  4241fb:	fcomp  DWORD PTR [esi-0x7f53ae39]
  424201:	enter  0x803a,0x95
  424205:	ds in  eax,0xd8
  424208:	(bad)  
  424209:	xchg   edx,eax
  42420a:	es xor al,0x6d
  42420d:	fistp  QWORD PTR ds:0xe7b37eda
  424213:	adc    al,0x95
  424215:	arpl   WORD PTR [eax],sp
  424217:	(bad)  
  424218:	ror    DWORD PTR [ecx],1
  42421a:	mov    ah,0x8c
  42421c:	jno    0x4241a7
  42421e:	adc    eax,0xe909d408
  424223:	xor    al,0xbd
  424225:	test   eax,0x31d503ec
  42422a:	sub    DWORD PTR [ecx],esi
  42422c:	xchg   ebp,eax
  42422d:	or     DWORD PTR [esi+edi*2+0x3d],esi
  424231:	enter  0xd8da,0x3d
  424235:	push   ecx
  424236:	mov    eax,0x1c932ed9
  42423b:	or     BYTE PTR [ebp+0x2d0c2c92],al
  424241:	cmp    DWORD PTR [ebx+0xe0000d9],edx
  424247:	xchg   ebx,eax
  424248:	add    BYTE PTR [ecx-0x2d8b2175],dl
  42424e:	pop    ebx
  42424f:	(bad)  
  424250:	clc    
  424251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424252:	sbb    eax,0xa39e50c3
  424257:	sbb    DWORD PTR [edi-0x26511ad4],eax
  42425d:	mov    ah,0xfc
  42425f:	ret    0xa984
  424262:	mov    cl,BYTE PTR [edi+ebp*1]
  424265:	test   eax,0xb9feaf16
  42426a:	xchg   esi,eax
  42426b:	pop    esi
  42426c:	leave  
  42426d:	stos   DWORD PTR es:[edi],eax
  42426e:	mov    dh,0x54
  424271:	jb     0x424225
  424273:	mov    ah,ch
  424275:	and    esi,edx
  424277:	or     DWORD PTR [eax],eax
  424279:	mov    edx,0xf5b75ae4
  42427e:	xlat   BYTE PTR ds:[ebx]
  42427f:	or     DWORD PTR [eax],eax
  424281:	call   0x49f7:0x3968c149
  424288:	add    BYTE PTR [ebx+ecx*1-0x2a],ah
  42428c:	cli    
  42428d:	cs popf 
  42428f:	pop    ecx
  424290:	ret    
  424291:	lods   al,BYTE PTR ds:[esi]
  424292:	sahf   
  424293:	mov    ebp,0xb218a493
  424298:	sbb    eax,0x2fc28c3d
  42429d:	pop    ss
  42429e:	leave  
  42429f:	leave  
  4242a0:	xchg   BYTE PTR [ebp+0x6d30be5b],dh
  4242a6:	jecxz  0x42427d
  4242a8:	cli    
  4242a9:	test   BYTE PTR [eax],0x0
  4242ac:	and    cl,BYTE PTR [ecx+0x7f]
  4242af:	icebp  
  4242b0:	inc    ebx
  4242b1:	cmp    eax,0x4b1119fe
  4242b6:	aaa    
  4242b7:	fiadd  DWORD PTR [edi-0x6e56d04f]
  4242bd:	xchg   esp,eax
  4242be:	jne    0x424281
  4242c0:	xor    esp,ebx
  4242c2:	sti    
  4242c3:	add    BYTE PTR [edx],dl
  4242c5:	fidivr WORD PTR [ebx+0x65]
  4242c8:	dec    eax
  4242c9:	or     eax,0xdf30858d
  4242ce:	idiv   edi
  4242d0:	fcom   QWORD PTR [edx-0x52b11742]
  4242d6:	idiv   edi
  4242d8:	js     0x4242a7
  4242da:	je     0x424320
  4242dc:	ja     0x424265
  4242de:	call   0xf8209005
  4242e3:	mov    ebx,DWORD PTR [esp+edx*4+0x75]
  4242e7:	clc    
  4242e8:	cmp    esp,edx
  4242ea:	jbe    0x424320
  4242ec:	xchg   edi,ebx
  4242ee:	outs   dx,BYTE PTR ds:[esi]
  4242ef:	xor    BYTE PTR [edi-0x6600b021],dl
  4242f5:	adc    DWORD PTR [ebp+0x12b60445],ecx
  4242fb:	add    BYTE PTR [ebx],al
  4242fd:	fld    QWORD PTR [eax+eax*8+0x7cfabf88]
  424304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424305:	nop
  424306:	mov    esi,0xe8630157
  42430b:	call   0x39f195
  424310:	add    BYTE PTR [eax],al
  424312:	clc    
  424313:	int    0x74
  424315:	or     al,0x7
  424317:	aad    0xe8
  424319:	mov    bl,ah
  42431b:	fdivr  st(7),st
  42431d:	mov    ecx,DWORD PTR [ecx-0x1f]
  424320:	jecxz  0x42432c
  424322:	add    DWORD PTR [ebx-0x18],ebx
  424325:	call   0x39ec7b
  42432a:	(bad)  
  42432b:	xlat   BYTE PTR ds:[ebx]
  42432c:	dec    ebx
  42432d:	lea    edi,[ecx+0x33fff6d1]
  424333:	xor    eax,DWORD PTR [eax]
  424335:	push   eax
  424336:	xor    edi,DWORD PTR [edx+0xdfc1613]
  42433c:	jnp    0x424302
  42433e:	aad    0xae
  424340:	xor    al,BYTE PTR [edi-0x36c90ae5]
  424346:	pop    ss
  424347:	mov    bh,0xff
  424349:	push   esp
  42434a:	pop    esi
  42434b:	xlat   BYTE PTR ds:[ebx]
  42434c:	test   ah,ch
  42434e:	icebp  
  42434f:	mov    ch,0xff
  424351:	jmp    FWORD PTR [ebx-0x12db99e5]
  424357:	mov    edx,0x2df2faae
  42435c:	mov    edi,0xcf27dc74
  424361:	call   0x418e28
  424366:	out    dx,al
  424367:	mov    al,0xe
  424369:	shl    BYTE PTR [esi-0x52],0xb1
  42436d:	aas    
  42436e:	aad    0x35
  424370:	mov    edi,0xfef7590b
  424375:	inc    DWORD PTR [eax]
  424377:	add    ch,dl
  424379:	xchg   ecx,eax
  42437a:	pop    es
  42437b:	into   
  42437c:	push   ss
  42437d:	mov    bl,0xac
  42437f:	loopne 0x42435b
  424381:	mov    dl,0xff
  424383:	or     bl,BYTE PTR [ecx-0x79]
  424386:	(bad)  
  424387:	call   ebp
  424389:	cdq    
  42438a:	inc    DWORD PTR [edi]
  42438c:	aad    0xb2
  42438e:	dec    ebx
  42438f:	daa    
  424390:	std    
  424391:	(bad)  
  424392:	sti    
  424393:	inc    DWORD PTR [edx+0x7bcec64a]
  424399:	jmp    0x42441a
  42439b:	shr    cl,0xc1
  42439e:	shl    BYTE PTR ds:0x3e0489,cl
  4243a4:	dec    esi
  4243a5:	and    ah,bh
  4243a7:	fimul  DWORD PTR ds:[edx+edx*8]
  4243ab:	xchg   DWORD PTR [ebp+0x17],eax
  4243ae:	add    DWORD PTR [edi],ebp
  4243b0:	inc    ebx
  4243b1:	push   ecx
  4243b2:	sti    
  4243b3:	int    0x96
  4243b5:	mov    dl,0xe7
  4243b7:	sub    eax,0xd5e3090c
  4243bc:	daa    
  4243bd:	push   cs
  4243be:	icebp  
  4243bf:	mov    cl,0xea
  4243c1:	or     DWORD PTR [ecx],ecx
  4243c3:	push   eax
  4243c4:	ficom  DWORD PTR [esi-0x3bdf0774]
  4243ca:	ret    0x58ec
  4243cd:	lds    edi,FWORD PTR [edx-0x1ef1f92b]
  4243d3:	mov    cl,0xc2
  4243d5:	or     ecx,ebp
  4243d7:	add    dl,ch
  4243d9:	or     DWORD PTR ds:0x5b0000ee,ebx
  4243df:	push   es
  4243e0:	in     eax,0xb1
  4243e2:	stos   BYTE PTR es:[edi],al
  4243e3:	or     edi,edi
  4243e5:	add    edi,DWORD PTR [ebx+0x9]
  4243e8:	add    DWORD PTR [edi+0x6],ebx
  4243eb:	dec    edx
  4243ec:	jmp    0x20f4195a
  4243f1:	lods   al,BYTE PTR ds:[esi]
  4243f2:	aad    0x9
  4243f4:	jnp    0x4243f5
  4243f6:	fcmovbe st,st(7)
  4243f8:	es add al,0x15
  4243fb:	ds in  al,dx
  4243fd:	jmp    0x4243ea
  4243ff:	mov    ds:0xda7d55a,al
  424404:	loope  0x4243b7
  424406:	loop   0x424411
  424408:	imul   edx,DWORD PTR [eax-0x30],0x8eb399b1
  42440f:	ret    
  424410:	imul   edx,DWORD PTR [edi-0x23],0x5a22bd09
  424417:	std    
  424418:	in     al,0xb1
  42441a:	mov    edx,0x3dea1109
  42441f:	or     ch,cl
  424421:	mov    ds:0x3a6d7d1,al
  424426:	pop    edx
  424427:	mov    edx,0xee1c464
  42442c:	adc    DWORD PTR [esi+esi*2+0xa],edx
  424430:	jmp    0x9b8162
  424435:	sbb    ebp,DWORD PTR [ebx]
  424437:	mov    edi,0x840f8f5b
  42443c:	add    al,0xe9
  42443e:	add    ecx,DWORD PTR [ebx+0x38ec]
  424444:	out    0x52,al
  424446:	push   edx
  424447:	fs jecxz 0x42440f
  42444a:	das    
  42444b:	mov    dl,0xe6
  42444d:	nop
  42444e:	pop    ebp
  42444f:	(bad)  
  424452:	xchg   ecx,eax
  424453:	mov    edi,0x3dc08e21
  424458:	mov    eax,0x205ac0b1
  42445d:	mov    edi,0x59b6b17f
  424462:	call   0xfc01a9f8
  424467:	xchg   esi,eax
  424468:	xchg   ebx,eax
  424469:	(bad)
  42446c:	or     al,BYTE PTR cs:[eax]
  42446f:	push   0xffffffdb
  424471:	adc    esi,ecx
  424473:	sub    dl,cl
  424475:	sbb    DWORD PTR [eax-0x17],ebp
  424478:	(bad)  
  424479:	or     DWORD PTR [eax+0x5d91c503],eax
  42447f:	mov    DWORD PTR gs:[esp+ecx*4],ebx
  424483:	cmc    
  424484:	push   ss
  424485:	or     ch,BYTE PTR [edi-0x3c3a418]
  42448b:	inc    ecx
  42448c:	jmp    0xc8893f29
  424491:	mov    edi,DWORD PTR [edi+0x55829fa2]
  424497:	bound  edi,QWORD PTR [edx-0x78]
  42449a:	in     al,dx
  42449b:	fst    st(4)
  42449d:	or     DWORD PTR [eax],eax
  42449f:	je     0x424454
  4244a1:	adc    DWORD PTR [eax+0x1e],edx
  4244a4:	sbb    edx,DWORD PTR [edx]
  4244a6:	ret    0xac
  4244a9:	add    BYTE PTR [ecx-0x590b04f7],cl
  4244af:	sbb    DWORD PTR [eax+0x0],eax
  4244b2:	cmp    al,0x43
  4244b4:	shl    BYTE PTR [esi+eiz*2-0x7],0x4e
  4244b9:	inc    ecx
  4244bb:	push   cs
  4244bc:	mov    bl,0x4
  4244be:	sub    eax,0x54680006
  4244c3:	push   ebx
  4244c4:	inc    eax
  4244c5:	add    BYTE PTR [ecx+0xbfdf498],bh
  4244cb:	(bad)  
  4244cc:	call   0xf8198d14
  4244d1:	pop    ecx
  4244d2:	mov    ch,0x90
  4244d4:	sar    BYTE PTR [esi+0xb],0xfb
  4244d8:	addr16 adc bh,al
  4244db:	dec    ebp
  4244dc:	add    BYTE PTR [ebx+0x2b7fd33],cl
  4244e2:	cld    
  4244e3:	add    eax,0xa512e880
  4244e8:	add    BYTE PTR [eax],al
  4244ea:	jno    0x4244b9
  4244ec:	je     0x424516
  4244ee:	outs   dx,DWORD PTR ds:[esi]
  4244ef:	aad    0xf7
  4244f1:	je     0x424492
  4244f3:	inc    eax
  4244f4:	mov    edi,0x6fc34b50
  4244f9:	adc    ebp,esp
  4244fb:	add    eax,0xc1c1ff4b
  424500:	add    bh,0x6c
  424503:	fcom   QWORD PTR ds:0x4dae58
  424509:	dec    eax
  42450a:	cmp    DWORD PTR [ecx],eax
  42450c:	idiv   DWORD PTR [ebx]
  42450e:	add    BYTE PTR [eax],al
  424510:	hlt    
  424511:	scas   eax,DWORD PTR es:[edi]
  424512:	mov    ebx,0x453dbcfe
  424517:	dec    ebx
  424519:	bound  ecx,QWORD PTR [eax]
  42451b:	jmp    DWORD PTR [ecx+0x6c400a41]
  424521:	cld    
  424522:	push   edx
  424523:	mov    al,BYTE PTR [ecx-0x24]
  424526:	leave  
  424527:	ret    0xd64
  42452a:	push   ebp
  42452b:	mov    edx,ebp
  42452d:	push   es
  42452e:	and    esp,0x5d
  424531:	lea    eax,[edx]
  424533:	call   0xfc11060e
  424538:	push   ecx
  424539:	repz push edi
  42453b:	adc    BYTE PTR [edi+0x3b14d7b2],ch
  424541:	mov    al,0xce
  424543:	call   0x465816
  424548:	gs mov dl,0xda
  42454b:	(bad)  
  42454c:	in     al,0x72
  42454e:	jp     0x424535
  424550:	js     0x4245c5
  424552:	xlat   BYTE PTR ds:[ebx]
  424553:	aam    0x12
  424555:	enter  0x84ce,0x15
  424559:	mul    DWORD PTR ds:0xf877d566
  42455f:	mul    ebp
  424561:	repnz add edi,DWORD PTR [ecx+0x44ca0]
  424568:	jae    0x424513
  42456a:	div    DWORD PTR [ecx+ecx*8+0x2b]
  42456e:	aaa    
  42456f:	cmp    al,0x54
  424571:	iret   
  424572:	add    al,0x50
  424574:	add    BYTE PTR [eax],al
  424576:	sbb    BYTE PTR [ebx+0x3bdd74ff],dh
  42457c:	cmp    eax,DWORD PTR [ecx]
  42457e:	in     eax,dx
  42457f:	mov    bl,0xb7
  424581:	sti    
  424582:	mov    ah,0x83
  424584:	mov    edi,0xce94bdbf
  424589:	sti    
  42458a:	stos   BYTE PTR es:[edi],al
  42458b:	and    eax,esp
  42458d:	mov    esi,0x8738b2d9
  424592:	test   eax,0x2668db33
  424597:	mov    eax,ds:0x38dad715
  42459c:	shl    BYTE PTR [esi-0x29],cl
  42459f:	and    eax,0x5e259848
  4245a4:	adc    esi,DWORD PTR [ebp+0x439e09a9]
  4245aa:	aad    0xc0
  4245ac:	rcr    ebx,cl
  4245ae:	inc    eax
  4245af:	mov    eax,0x4648d212
  4245b4:	jno    0x4245e9
  4245b6:	cmp    eax,0xd50350f7
  4245bb:	test   DWORD PTR [ecx],ebp
  4245bd:	pop    eax
  4245be:	clc    
  4245bf:	xor    ebp,eax
  4245c1:	adc    BYTE PTR [eax-0x182d665f],0xb1
  4245c8:	data16 fldcw WORD PTR [esi]
  4245cb:	shr    BYTE PTR [edi+eax*2+0x3d],0x59
  4245d0:	shl    eax,0x72
  4245d3:	or     ecx,ebp
  4245d5:	xchg   DWORD PTR ds:0xd1ee36,edx
  4245db:	add    BYTE PTR [edx-0x77],cl
  4245de:	mov    esi,0x13847307
  4245e3:	sub    eax,0x379cc0c
  4245e8:	cli    
  4245e9:	sar    BYTE PTR [edi*2-0x337a7407],0x54
  4245f1:	lods   eax,DWORD PTR ds:[esi]
  4245f2:	mov    ch,0xfe
  4245f4:	fidivr DWORD PTR [edi-0x4d9c5ca]
  4245fa:	cmp    DWORD PTR [ecx],0xb604f5ce
  424600:	add    cl,BYTE PTR [edx]
  424602:	fs pop eax
  424604:	icebp  
  424605:	icebp  
  424606:	mov    ds:0xe914f948,al
  42460b:	(bad)  
  42460d:	call   FWORD PTR [ecx-0x2f]
  424610:	pop    ecx
  424611:	retf   0x21dd
  424614:	push   edx
  424615:	inc    esi
  424616:	add    eax,0xd368e28
  42461b:	and    al,0x58
  42461d:	ss add eax,0x464df8
  424623:	or     eax,0x32aaa77d
  424628:	test   bl,al
  42462a:	xchg   DWORD PTR [ecx-0x12],eax
  42462d:	pop    ebp
  42462e:	and    al,0x1
  424630:	shl    dl,1
  424632:	jne    0x424621
  424634:	fistp  QWORD PTR ds:0x45d3f924
  42463a:	and    al,0xc9
  42463c:	cs int3 
  42463e:	cmp    bh,dh
  424640:	add    BYTE PTR [eax],al
  424642:	and    eax,0x56204a7
  424647:	out    0x17,al
  424649:	push   0xbf0fe585
  42464e:	xlat   BYTE PTR ds:[ebx]
  42464f:	or     DWORD PTR [eax],eax
  424651:	out    dx,al
  424652:	pop    ebx
  424653:	add    eax,0x4ed6e901
  424658:	call   0x4c616f
  42465d:	ins    DWORD PTR es:[edi],dx
  42465e:	push   ss
  42465f:	adc    eax,DWORD PTR [ebp+eax*2+0x430009d8]
  424666:	(bad)  
  424667:	mov    WORD PTR [ebp+eax*1-0x33],es
  42466b:	pop    ecx
  42466c:	push   0x388ee7d9
  424671:	xchg   ecx,eax
  424672:	and    al,0xbc
  424674:	sti    
  424675:	xchg   esi,eax
  424676:	pop    ebx
  424677:	inc    ebp
  424678:	and    al,0xd9
  42467a:	push   es
  42467b:	sub    BYTE PTR [ecx],al
  42467d:	adc    DWORD PTR [ecx],edx
  42467f:	sar    BYTE PTR [edi],1
  424681:	jmp    0xda425b2b
  424686:	push   ss
  424687:	or     cl,BYTE PTR [ecx+0x3719fd25]
  42468d:	cs aad 0x85
  424690:	xor    eax,0xfb09d6ea
  424695:	cld    
  424696:	cmp    cl,BYTE PTR [edi]
  424698:	inc    eax
  424699:	jmp    0x42c181
  42469e:	jl     0x4246aa
  4246a0:	jne    0x4246b0
  4246a2:	ret    
  4246a3:	push   esi
  4246a4:	and    al,0x10
  4246a6:	add    BYTE PTR [eax],al
  4246a8:	ret    
  4246a9:	mov    bh,0xc3
  4246ab:	adc    bh,BYTE PTR [edx+ecx*1]
  4246ae:	mov    DWORD PTR [eax+ebx*4-0x46],edi
  4246b2:	cmp    BYTE PTR [eax+ebx*4-0x46],bh
  4246b6:	push   es
  4246b7:	test   BYTE PTR [ebp+eax*1+0x0],bl
  4246bb:	add    ah,dl
  4246bd:	sub    BYTE PTR [ecx+0x20a2d3fe],dl
  4246c3:	je     0x424700
  4246c5:	test   DWORD PTR ds:0x45de08,ecx
  4246cb:	adc    BYTE PTR [ecx+0x3c9c2496],dl
  4246d1:	or     al,BYTE PTR [eax]
  4246d3:	call   0x388267
  4246d8:	test   al,0xc5
  4246da:	jne    0x4246f6
  4246dc:	mov    cl,0x99
  4246de:	and    al,0xd0
  4246e0:	dec    BYTE PTR [ecx]
  4246e2:	add    al,ch
  4246e4:	outs   dx,DWORD PTR ds:[esi]
  4246e5:	int3   
  4246e6:	idiv   edi
  4246e8:	jno    0x42467b
  4246ea:	and    al,0x8c
  4246ec:	clc    
  4246ed:	or     DWORD PTR [eax],eax
  4246ef:	call   0x38823e
  4246f4:	dec    esi
  4246f6:	call   0x47a185
  4246fb:	idiv   BYTE PTR [ecx-0x43bc323f]
  424701:	mov    ecx,0x5e40d6f
  424706:	add    BYTE PTR [eax],al
  424708:	sub    al,0x60
  42470a:	adc    al,0xff
  42470c:	add    BYTE PTR [eax],al
  42470e:	mov    DWORD PTR ds:0x63bc4014,edi
  424714:	add    DWORD PTR [ebp+0x5033e578],ecx
  42471a:	aad    0xca
  42471c:	or     cl,BYTE PTR [edi+0x16]
  42471f:	or     esp,ebx
  424721:	xor    eax,0x8dcb4483
  424726:	sbb    DWORD PTR [edi],eax
  424728:	adc    al,0x50
  42472a:	and    cl,cl
  42472c:	add    ebx,edi
  42472e:	enter  0xf556,0x3f
  424732:	aad    0x37
  424734:	aam    0x37
  424736:	push   0xffffff97
  424738:	std    
  424739:	push   ecx
  42473a:	pop    edx
  42473b:	mov    esi,0xb2950ed7
  424740:	xor    eax,0xedfae0fb
  424745:	aas    
  424746:	aad    0x98
  424748:	add    al,0xe8
  42474a:	loop   0x424702
  42474c:	retf   0x32fb
  42474f:	aaa    
  424750:	and    edx,DWORD PTR [eax]
  424752:	adc    ebp,edi
  424754:	daa    
  424755:	adc    esp,edx
  424757:	(bad)  
  424759:	mov    edi,0x80e903f2
  42475f:	mov    al,0xff
  424761:	call   DWORD PTR [esi+0x47]
  424764:	sub    BYTE PTR [eax],dl
  424766:	in     eax,0xab
  424768:	mov    BYTE PTR [esi-0x29],bl
  42476b:	mov    dl,0xff
  42476d:	xlat   BYTE PTR gs:[ebx]
  42476f:	dec    edx
  424770:	inc    edi
  424771:	xor    al,0x0
  424773:	add    BYTE PTR [esp+ebp*1-0x29],bl
  424777:	sbb    al,0xeb
  424779:	fwait
  42477a:	retf   0x9189
  42477d:	into   
  42477e:	jmp    0x4247b6
  424780:	call   0xffb2:0xd73983db
  424787:	mov    WORD PTR [ecx-0x3a],ds
  42478a:	scas   eax,DWORD PTR es:[edi]
  42478b:	(bad)  
  42478c:	mov    edx,0x19c22fb2
  424791:	(bad)  
  424792:	icebp  
  424793:	push   DWORD PTR [edx-0x617f7bf7]
  424799:	mov    esp,0x1a45186e
  42479e:	test   eax,0x30fe5a03
  4247a3:	hlt    
  4247a4:	retf   0x6d09
  4247a7:	ret    
  4247a8:	or     ebp,esp
  4247aa:	and    al,BYTE PTR [edi-0x4f]
  4247ad:	or     ebp,eax
  4247af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247b0:	loope  0x424789
  4247b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247b3:	add    esi,ebx
  4247b5:	adc    esp,DWORD PTR [edx]
  4247b7:	adc    ebx,DWORD PTR [esi+0x16]
  4247ba:	mov    cl,0xf3
  4247bc:	call   0xb136:0xd4cb6609
  4247c3:	fstp   TBYTE PTR [edi+0x4d03e9c7]
  4247c9:	inc    ebp
  4247ca:	lds    eax,FWORD PTR [eax]
  4247cc:	sub    al,0xa4
  4247ce:	call   0xe8721cd6
  4247d3:	adc    BYTE PTR [ecx+0x341ce5],0x0
  4247da:	lods   eax,DWORD PTR ds:[esi]
  4247db:	or     DWORD PTR [ebp+0x16],edx
  4247de:	mov    esp,0xed74eb1
  4247e3:	mov    esp,0xf9b1485c
  4247e8:	sbb    ah,bl
  4247ea:	shl    BYTE PTR [ebx-0x17],cl
  4247ed:	add    edx,DWORD PTR [ecx-0x37]
  4247f0:	cmp    eax,0x3f097b8d
  4247f5:	add    ebx,DWORD PTR [eax+0x45]
  4247f8:	int    0xf4
  4247fa:	xchg   edx,eax
  4247fb:	push   ebx
  4247fc:	bswap  ebp
  4247fe:	pop    ss
  4247ff:	inc    ebp
  424800:	int    0x20
  424802:	aad    0xba
  424804:	mov    dl,0x87
  424806:	xchg   ebp,eax
  424807:	ss jmp 0x41da:0xe9e64183
  42480f:	imul   eax,DWORD PTR [eax],0x98d01
  424815:	jmp    0xfc225db3
  42481a:	push   ss
  42481b:	or     ah,bh
  42481d:	xor    al,0x54
  42481f:	es and al,0xf9
  424822:	(bad)  
  424823:	mov    DWORD PTR [ebp+eax*1-0x75],edi
  424827:	or     dh,BYTE PTR [ebp+0x0]
  42482a:	nop
  42482b:	sub    ecx,DWORD PTR [eax]
  42482d:	ds and al,0x6
  424830:	xchg   esp,edx
  424832:	or     ch,0x3f
  424835:	jmp    0xa8f37b48
  42483a:	(bad)  
  42483b:	mov    cl,0x1f
  42483d:	cmp    BYTE PTR [eax],al
  42483f:	add    BYTE PTR [ebx+0x4e9cfbbf],cl
  424845:	mov    es,WORD PTR [ebp+eax*8-0x16fff576]
  42484c:	push   eax
  42484d:	xor    cl,dh
  42484f:	stos   BYTE PTR es:[edi],al
  424850:	(bad)  
  424851:	pop    ecx
  424852:	xchg   DWORD PTR [edi],ebx
  424854:	mov    dl,0x8d
  424856:	and    al,0x11
  424858:	xlat   BYTE PTR ds:[ebx]
  424859:	or     DWORD PTR [eax],eax
  42485b:	shl    DWORD PTR [eax-0x73],1
  42485e:	sti    
  42485f:	fdivp  st(7),st
  424861:	add    BYTE PTR [eax],0xe9
  424864:	(bad)  
  424865:	and    eax,DWORD PTR [eax]
  424867:	inc    ebx
  424868:	(bad)  
  424869:	mov    WORD PTR [ebp+ecx*1+0xb],es
  42486d:	dec    ebx
  42486e:	push   edx
  42486f:	push   ebx
  424870:	or     al,cl
  424872:	inc    esp
  424873:	or     eax,0x96fb09b7
  424878:	push   ebx
  424879:	retf   0x1474
  42487c:	pop    ecx
  42487d:	ds and al,0xef
  424880:	push   DWORD PTR [edx+eiz*2]
  424883:	fs sbb ah,dh
  424886:	(bad)  
  424888:	sub    DWORD PTR [edx],ebp
  42488a:	pop    edi
  42488b:	add    BYTE PTR ds:0x6288684f,bh
  424891:	dec    ecx
  424892:	add    bh,bh
  424894:	push   edx
  424895:	mov    eax,edi
  424897:	add    DWORD PTR [ecx-0x2f83850a],esp
  42489d:	mov    ch,0xfb
  42489f:	jae    0x424906
  4248a1:	int    0x6b
  4248a3:	or     BYTE PTR [eax],al
  4248a5:	add    BYTE PTR [ebx],ch
  4248a7:	pop    edx
  4248a8:	or     al,0x8b
  4248aa:	jns    0x424856
  4248ac:	int    0x43
  4248ae:	ins    BYTE PTR es:[edi],dx
  4248af:	pop    esi
  4248b0:	imul   esp,esp,0x2e
  4248b3:	push   es
  4248b4:	call   0xf80f1568
  4248b9:	jmp    DWORD PTR [ecx]
  4248bb:	mov    esi,0xb2904c82
  4248c0:	mov    WORD PTR [eax+edx*4+0x3c00007a],es
  4248c7:	mov    WORD PTR [eax-0x2e],gs
  4248ca:	jg     0x4248d2
  4248cc:	push   eax
  4248cd:	mov    esp,edx
  4248cf:	fisub  WORD PTR [ebp-0x40]
  4248d2:	sub    al,0x6
  4248d4:	push   0x6bc00
  4248d9:	xor    eax,edi
  4248db:	stc    
  4248dc:	div    BYTE PTR [eax+edx*8-0x53]
  4248e0:	add    DWORD PTR [eax+edx*8-0x54],0xfffffff6
  4248e5:	adc    eax,0x3bb3f4
  4248ea:	pop    ss
  4248eb:	or     ch,al
  4248ed:	mov    dh,0x18
  4248ef:	into   
  4248f0:	test   DWORD PTR [esp+ebp*1-0x3387b42],0xafff0005
  4248fb:	mov    ebp,0xb06733f6
  424900:	pop    ss
  424901:	shr    BYTE PTR [edi-0x2a7b97fb],cl
  424907:	test   BYTE PTR [edx+0x0],al
  42490a:	add    BYTE PTR [eax],al
  42490c:	mov    ebp,0xc2fab3fd
  424911:	push   ecx
  424912:	pop    esp
  424913:	into   
  424914:	push   ss
  424915:	mov    ds:0x6af99478,eax
  42491a:	add    al,0x0
  42491c:	aad    0x2b
  42491e:	mov    dh,0xe8
  424920:	in     al,dx
  424921:	jo     0x424927
  424923:	add    dh,ah
  424925:	dec    ebx
  424926:	jl     0x42496c
  424928:	mov    ecx,0xb17c7fad
  42492d:	aad    0x4
  42492f:	or     ebx,DWORD PTR [eax+0x3d]
  424932:	add    al,0x0
  424934:	aad    0x25
  424936:	inc    eax
  424937:	and    al,0xb5
  424939:	xchg   edx,eax
  42493a:	xor    dl,BYTE PTR [edx+0x6]
  42493d:	push   esi
  42493e:	and    BYTE PTR [edi*2+0x5ffffa3],0x1b
  424946:	jmp    0x81629bc9
  42494b:	rcr    dl,0x3d
  42494e:	inc    eax
  42494f:	and    al,0xd0
  424951:	retf   0x2423
  424954:	enter  0x573e,0x66
  424958:	aam    0x2d
  42495a:	inc    eax
  42495b:	and    al,0xe1
  42495d:	xchg   edx,eax
  42495e:	push   edi
  42495f:	cmp    eax,DWORD PTR [esi-0x2a17e61d]
  424965:	faddp  st(6),st
  424967:	sti    
  424968:	pusha  
  424969:	out    0x1f,eax
  42496b:	xor    BYTE PTR [ebp+0x159f3],ah
  424971:	add    BYTE PTR [ebp-0x1e],ch
  424974:	mov    cl,0x3f
  424976:	aad    0x77
  424978:	lock rol edi,cl
  42497b:	loop   0x424980
  42497d:	xchg   DWORD PTR [ecx+0xe],ebp
  424980:	and    al,0x89
  424982:	cdq    
  424983:	or     ebp,ecx
  424985:	repz dec ebp
  424987:	(bad)
  42498b:	mov    ecx,0x340c6ce
  424990:	xor    cl,bl
  424992:	call   0xd586213c
  424997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424998:	jmp    0x4249d0
  42499a:	pusha  
  42499b:	dec    ebp
  42499c:	int    0xeb
  42499e:	sbb    ah,BYTE PTR [edi+eiz*8]
  4249a1:	retf   0xd9c8
  4249a4:	test   DWORD PTR [ebx-0x2b],0xe3bc1484
  4249ab:	dec    ecx
  4249ac:	jmp    0xf93072bd
  4249b1:	dec    edi
  4249b2:	xlat   BYTE PTR ds:[ebx]
  4249b3:	mov    eax,0xb8e51fbd
  4249b8:	adc    ecx,edx
  4249ba:	jmp    0x880d56ac
  4249bf:	pusha  
  4249c0:	sub    dh,BYTE PTR [ecx-0x1432aaa6]
  4249c6:	pop    edi
  4249c7:	cmp    eax,0xe73ae7c5
  4249cc:	dec    esp
  4249cd:	add    edx,ebp
  4249cf:	mov    DWORD PTR [edi+esi*8-0x3511c12b],ecx
  4249d6:	add    BYTE PTR [eax],al
  4249d8:	add    BYTE PTR [esi],ch
  4249da:	pop    ss
  4249db:	inc    esi
  4249dc:	aad    0xa1
  4249de:	sar    DWORD PTR [edi+0x2e],0xb8
  4249e2:	xchg   esi,eax
  4249e3:	fistp  DWORD PTR [ebx]
  4249e5:	(bad)
  4249e8:	push   ebx
  4249e9:	dec    ebp
  4249ea:	add    eax,0x2e57aff7
  4249ef:	jge    0x4249e1
  4249f1:	push   ebp
  4249f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249f3:	cld    
  4249f4:	add    bl,BYTE PTR [ebp+0x6e]
  4249f7:	fsub   DWORD PTR [esp+ebx*2+0x5ee71513]
  4249fe:	add    bl,bh
  424a00:	cmp    DWORD PTR [ecx-0x4bf347ad],esp
  424a06:	test   BYTE PTR [ecx-0x16247424],ch
  424a0c:	(bad)  
  424a0d:	or     DWORD PTR [ebx+0x1],edx
  424a10:	aam    0x89
  424a12:	add    cl,ch
  424a14:	lea    ebx,ds:0xa16d888
  424a1a:	lea    esp,[ebx*4-0x636dd0a6]
  424a21:	sbb    eax,0xa16d824
  424a26:	push   eax
  424a27:	data16 stos BYTE PTR es:[edi],al
  424a29:	jecxz  0x424a39
  424a2b:	test   eax,0x12f88ed6
  424a30:	lahf   
  424a31:	ds push esi
  424a33:	adc    BYTE PTR [edx-0x648854b],bh
  424a39:	or     eax,0x64b3
  424a3e:	cdq    
  424a3f:	ds inc ecx
  424a41:	iret   
  424a42:	push   ecx
  424a43:	repnz sub al,0xb4
  424a46:	rol    DWORD PTR [edx],1
  424a48:	mov    bl,0xb1
  424a4a:	shl    BYTE PTR [esi],1
  424a4c:	jmp    0x7f24ecd8
  424a51:	add    BYTE PTR [ecx+0x3b],cl
  424a54:	and    eax,0x740b1e6a
  424a59:	icebp  
  424a5a:	(bad)  
  424a5b:	cmp    al,0x25
  424a5d:	push   0x70
  424a5f:	mov    eax,0xca51c9e6
  424a64:	add    al,0x87
  424a66:	pop    ecx
  424a67:	repnz call FWORD PTR [esp+0x47]
  424a6c:	sti    
  424a6d:	hlt    
  424a6e:	out    0x1b,al
  424a70:	inc    eax
  424a71:	jmp    0xb826e135
  424a76:	cdq    
  424a77:	or     edi,esp
  424a79:	add    BYTE PTR [esi+ecx*4],al
  424a7c:	ret    
  424a7d:	adc    BYTE PTR [edi],al
  424a7f:	push   cs
  424a80:	jnp    0x424a4d
  424a82:	hlt    
  424a83:	dec    eax
  424a84:	xor    esi,DWORD PTR [ebp+0x30]
  424a87:	dec    edi
  424a88:	stos   BYTE PTR es:[edi],al
  424a89:	push   edi
  424a8a:	xor    ebp,DWORD PTR [eax+0xdfc1287]
  424a90:	push   edi
  424a91:	idiv   BYTE PTR [edi+0xc]
  424a94:	je     0x424ab9
  424a96:	push   esp
  424a97:	mov    bh,0xdd
  424a99:	call   DWORD PTR [ebx-0x2e]
  424a9c:	aaa    
  424a9d:	sahf   
  424a9e:	mov    esp,0x5ee0a
  424aa3:	add    BYTE PTR [esp+edi*2+0x34b8003b],dh
  424aaa:	fdiv   DWORD PTR [eax+eax*8+0x57]
  424aae:	add    BYTE PTR [eax+0x3b7a74],bh
  424ab4:	adc    al,0x2d
  424ab6:	loopne 0x424ab7
  424ab8:	adc    edx,esi
  424aba:	push   ss
  424abb:	mov    ebp,DWORD PTR [edi-0x55fb1735]
  424ac1:	jp     0x424ae7
  424ac3:	add    DWORD PTR [ebx-0x68],esi
  424ac6:	rol    cl,0x17
  424ac9:	push   cs
  424aca:	push   eax
  424acb:	or     bh,0xb
  424ace:	pop    es
  424acf:	mov    dh,0xff
  424ad1:	cli    
  424ad2:	out    0x35,eax
  424ad4:	out    0xc1,eax
  424ad6:	test   DWORD PTR [edx+0x74d33704],0x805d819
  424ae0:	into   
  424ae1:	dec    ebp
  424ae2:	add    BYTE PTR [edx],al
  424ae4:	test   al,0xbe
  424ae6:	push   DWORD PTR gs:[ebx]
  424ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aea:	fist   DWORD PTR [edx]
  424aec:	in     al,dx
  424aed:	or     eax,0xca455b56
  424af2:	sub    eax,eax
  424af4:	aad    0x24
  424af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424af7:	or     ebp,DWORD PTR [ecx+0x60]
  424afa:	xor    al,0xfb
  424afc:	loopne 0x424b22
  424afe:	cmc    
  424aff:	aas    
  424b00:	aad    0x64
  424b02:	xor    DWORD PTR [edi+0x522f10f9],eax
  424b08:	add    BYTE PTR [eax],al
  424b0a:	dec    esi
  424b0b:	std    
  424b0c:	sti    
  424b0d:	push   edx
  424b0e:	fidiv  DWORD PTR [ebx+edi*4+0x7ca3150e]
  424b15:	inc    ebp
  424b16:	leave  
  424b17:	and    eax,DWORD PTR [ebx]
  424b19:	add    BYTE PTR [esi-0x6b],cl
  424b1c:	push   eax
  424b1d:	xor    al,0x4f
  424b1f:	lods   eax,DWORD PTR ds:[esi]
  424b20:	jnp    0x424af9
  424b22:	sub    edi,eax
  424b24:	push   ss
  424b25:	repz pop esi
  424b27:	xchg   esp,eax
  424b28:	adc    bh,0x29
  424b2b:	fdivr  QWORD PTR [ecx+0x16]
  424b2e:	push   ecx
  424b2f:	dec    eax
  424b30:	push   eax
  424b31:	and    dl,ah
  424b33:	xchg   esp,eax
  424b34:	add    BYTE PTR [edx],dl
  424b36:	ficomp DWORD PTR [edi+eiz*4-0x22169d9]
  424b3d:	cmp    eax,0x74eda6bd
  424b42:	jl     0x424b67
  424b44:	push   es
  424b45:	add    cl,ah
  424b47:	test   al,0x44
  424b49:	xchg   BYTE PTR [esp+ebp*2-0xb1f2885],bh
  424b50:	push   cs
  424b51:	leave  
  424b52:	pop    eax
  424b53:	cli    
  424b54:	dec    edi
  424b55:	aaa    
  424b56:	pop    esi
  424b57:	retw   
  424b59:	lea    ecx,[ecx]
  424b5b:	mov    ds:0x35f83a7f,al
  424b60:	lea    esi,[edi]
  424b62:	mov    al,ds:0x55024bba
  424b67:	cmp    al,dl
  424b69:	and    ch,BYTE PTR [eax+0x747947]
  424b6f:	add    ah,dl
  424b71:	or     eax,ebp
  424b73:	xchg   ecx,eax
  424b74:	mov    bh,0x80
  424b76:	mov    ds:0xd37f63db,eax
  424b7b:	(bad)  
  424b7c:	pop    eax
  424b7d:	retf   0xfd54
  424b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b81:	mov    ah,0xdc
  424b83:	mov    edi,0xdae949e3
  424b88:	jmp    0x424b69
  424b8a:	stos   BYTE PTR es:[edi],al
  424b8b:	jp     0x424b1d
  424b8d:	add    eax,0xcc520460
  424b92:	mov    es,WORD PTR [ecx]
  424b94:	add    cl,dl
  424b96:	cmp    ebp,DWORD PTR [ebx]
  424b98:	pushf  
  424b99:	(bad)  
  424b9a:	loope  0x424b9f
  424b9c:	sub    BYTE PTR [ecx-0xa567d83],al
  424ba2:	adc    eax,0x19f63b2f
  424ba7:	das    
  424ba8:	cli    
  424ba9:	shl    BYTE PTR [eax+eax*2-0x67],1
  424bad:	pop    eax
  424bae:	sbb    edi,eax
  424bb0:	rcl    BYTE PTR [ecx],0xfb
  424bb3:	inc    ebx
  424bb4:	aad    0xf8
  424bb6:	sub    BYTE PTR [ebx+0xa],al
  424bb9:	into   
  424bba:	in     eax,0x7c
  424bbc:	sbb    dl,dl
  424bbe:	pusha  
  424bbf:	inc    eax
  424bc0:	add    DWORD PTR [edx+0x4e60c7ac],0x591a3325
  424bca:	xor    dl,BYTE PTR [eax-0x33]
  424bcd:	sub    BYTE PTR [edi+edi*4-0xf3ee1a2],0x0
  424bd5:	add    BYTE PTR [edx],dl
  424bd7:	or     ah,BYTE PTR [ebx+eax*8-0x40]
  424bdb:	or     al,0xd7
  424bdd:	ret    
  424bde:	sub    al,0x77
  424be0:	jmp    0xd96220e8
  424be5:	sub    eax,0xc52ebf3d
  424bea:	cs mov ah,0x0
  424bed:	jl     0x424c61
  424bef:	mov    WORD PTR [ebp+0x11],es
  424bf2:	inc    al
  424bf4:	lods   eax,DWORD PTR ds:[esi]
  424bf5:	out    0x18,eax
  424bf7:	add    BYTE PTR [edx],0x22
  424bfa:	adc    al,0x3d
  424bfc:	loopne 0x424bc0
  424bfe:	or     ecx,DWORD PTR [ebx-0xeae26bb]
  424c04:	sub    bh,BYTE PTR [esp+ebp*8]
  424c07:	scas   al,BYTE PTR es:[edi]
  424c08:	dec    ebp
  424c09:	mov    ch,0x10
  424c0b:	dec    esi
  424c0c:	lock lock mov ebx,0x5cbc73bd
  424c13:	dec    esi
  424c14:	cld    
  424c15:	jb     0x424c21
  424c17:	mov    esi,0xac91d8d
  424c1c:	lea    ebp,[esi]
  424c1e:	(bad)  
  424c1f:	cli    
  424c20:	mov    esi,0xbfe2d514
  424c25:	xchg   edx,eax
  424c26:	mov    dl,0xab
  424c28:	pop    esi
  424c29:	mov    bl,0x93
  424c2b:	scas   eax,DWORD PTR es:[edi]
  424c2c:	mov    DWORD PTR [edi],ebp
  424c2e:	aad    0xfa
  424c30:	mov    esi,0x32b09ff4
  424c35:	push   ecx
  424c36:	adc    ah,cl
  424c38:	cli    
  424c39:	pop    esi
  424c3a:	add    BYTE PTR [eax],al
  424c3c:	lods   al,BYTE PTR ds:[esi]
  424c3d:	imul   edi,ebx,0xfb4a92dc
  424c43:	aam    0xa6
  424c45:	pop    edx
  424c46:	call   0xfbf27bc8
  424c4b:	sbb    dh,BYTE PTR ds:[esi-0x739d5079]
  424c52:	dec    ebp
  424c53:	xor    eax,0x74f83d90
  424c58:	xchg   ebp,eax
  424c59:	add    DWORD PTR [ecx],eax
  424c5b:	mov    ecx,0x17c6902e
  424c60:	sbb    BYTE PTR [ebx+0xa78e542],cl
  424c66:	sub    eax,DWORD PTR [eax]
  424c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c69:	repz add ecx,DWORD PTR [eax+0x4582b608]
  424c70:	and    BYTE PTR [edi-0x77],al
  424c73:	inc    esi
  424c74:	xor    al,0x55
  424c76:	add    DWORD PTR [ebp+0x18],0x55
  424c7a:	mov    DWORD PTR [esi-0x8],eax
  424c7d:	xor    DWORD PTR [ebp-0x30],eax
  424c80:	outs   dx,DWORD PTR ds:[esi]
  424c81:	into   
  424c82:	sti    
  424c83:	jae    0x424c9f
  424c85:	out    dx,eax
  424c86:	jae    0x424c8d
  424c88:	fs in  al,dx
  424c8a:	add    eax,0x3e74e6eb
  424c8f:	push   cs
  424c90:	out    dx,al
  424c91:	rol    DWORD PTR [esi+eax*8],1
  424c94:	mov    dl,0xbb
  424c96:	add    BYTE PTR [eax-0x36ad1243],dh
  424c9c:	jle    0x424c50
  424c9e:	sti    
  424c9f:	push   esp
  424ca0:	add    BYTE PTR [eax],al
  424ca2:	aaa    
  424ca3:	fstp   TBYTE PTR [ebx-0x14]
  424ca6:	mov    esp,0xb1ff4ee4
  424cab:	scas   al,BYTE PTR es:[edi]
  424cac:	mov    WORD PTR [ebp+0x2c],?
  424caf:	sbb    dh,bh
  424cb1:	call   0x3a1910
  424cb6:	xor    bh,al
  424cb8:	je     0x424d33
  424cba:	pop    es
  424cbb:	hlt    
  424cbc:	repz mov edi,DWORD PTR [ecx]
  424cbf:	mov    esi,0x66d04be
  424cc4:	add    DWORD PTR [ebp+0x20],0x31
  424cc8:	or     BYTE PTR [eax+0x0],al
  424ccb:	jo     0x424d42
  424ccd:	stc    
  424cce:	and    al,0x1
  424cd0:	inc    ebp
  424cd1:	hlt    
  424cd2:	and    BYTE PTR [ebx+0x435b387b],dh
  424cd8:	cmc    
  424cd9:	xor    BYTE PTR [ebx*1-0x39d0fd8c],0x85
  424ce1:	rcl    ch,0x94
  424ce4:	add    al,0x80
  424ce6:	mov    ebp,0xec73ffa1
  424ceb:	nop
  424cec:	or     al,0x2a
  424cef:	sbb    BYTE PTR [esi+0x73bb23ac],ch
  424cf5:	lock push eax
  424cf7:	mov    edx,0xa07d264a
  424cfc:	dec    DWORD PTR [edi]
  424cfe:	aad    0x56
  424d00:	add    al,0x66
  424d02:	aad    0xf2
  424d04:	mov    esi,0x99000015
  424d09:	scas   eax,DWORD PTR es:[edi]
  424d0a:	aas    
  424d0b:	add    BYTE PTR [eax+0x60],bl
  424d0e:	cmp    DWORD PTR [eax],edx
  424d10:	sbb    DWORD PTR [eax-0x53],0xfffffffd
  424d14:	aad    0xa0
  424d16:	or     al,0xda
  424d19:	mov    ebx,0x8b68d3a6
  424d1f:	clc    
  424d20:	and    ebx,DWORD PTR [ebx-0x673c369d]
  424d26:	mov    edi,0x9b8bc575
  424d2b:	leave  
  424d2c:	mov    bl,0x88
  424d2e:	mov    edi,0x939ba175
  424d33:	leave  
  424d34:	mov    ds:0xfac38b38,eax
  424d39:	add    ch,cl
  424d3b:	mov    esi,0x8759a2d9
  424d40:	test   DWORD PTR [ebx],esp
  424d42:	(bad)  
  424d43:	cmp    ecx,DWORD PTR [eax]
  424d45:	mov    ds:0xafbb8049,al
  424d4a:	cmp    BYTE PTR [ecx],al
  424d4c:	sbb    edx,DWORD PTR [eax-0x614e8b42]
  424d52:	pop    ecx
  424d53:	sti    
  424d54:	enter  0x129a,0x40
  424d58:	aad    0x25
  424d5a:	les    esi,FWORD PTR [ebp-0xe]
  424d5d:	or     DWORD PTR [edi+0x8],ebp
  424d60:	jbe    0xee2b858f
  424d66:	enter  0xe537,0xed
  424d6a:	fbstp  TBYTE PTR ds:0xedd90000
  424d70:	repz cmp ebp,ebx
  424d73:	in     eax,dx
  424d74:	mov    edx,0xc1edd937
  424d79:	cmp    cl,dl
  424d7b:	jns    0x424d65
  424d7d:	scas   al,BYTE PTR es:[edi]
  424d7e:	adc    edi,ebx
  424d80:	test   al,0x61
  424d82:	dec    ebx
  424d83:	push   es
  424d84:	jmp    0x66e0a7e1
  424d89:	scas   eax,DWORD PTR es:[edi]
  424d8a:	in     eax,0xfc
  424d8c:	lahf   
  424d8d:	pop    edx
  424d8e:	ret    0x70b0
  424d91:	push   eax
  424d92:	loope  0x424d15
  424d94:	sub    al,0xc2
  424d96:	dec    esp
  424d97:	das    
  424d98:	mov    ecx,0xf0b1888c
  424d9d:	push   eax
  424d9e:	fld    QWORD PTR [eax]
  424da0:	imul   edi,ecx,0xffffffd5
  424da3:	or     ecx,ebp
  424da5:	pop    ecx
  424da6:	mov    edx,0xfcccd60b
  424dab:	ds xchg ebp,eax
  424dad:	aaa    
  424dae:	fisttp WORD PTR [ecx+0x36ef22c5]
  424db4:	icebp  
  424db5:	ret    0xb610
  424db8:	adc    BYTE PTR [eax],0xd4
  424dbb:	or     ecx,ebp
  424dbd:	nop
  424dbe:	leave  
  424dbf:	adc    BYTE PTR [edi+0x9],ch
  424dc2:	leave  
  424dc3:	in     eax,dx
  424dc4:	jmp    0xe94b7e51
  424dc9:	add    edx,DWORD PTR [edx+0x46]
  424dcc:	push   ebp
  424dcd:	ret    0xb618
  424dd0:	ins    BYTE PTR es:[edi],dx
  424dd1:	ret    
  424dd2:	add    BYTE PTR [eax],al
  424dd4:	fiadd  WORD PTR [esi+0x9d50337]
  424dda:	add    BYTE PTR [edx-0x63],ah
  424ddd:	add    DWORD PTR [edi],esp
  424ddf:	ss push esi
  424de1:	cs cli 
  424de3:	jmp    0xe85d934d
  424de8:	or     bh,bl
  424dea:	jle    0x424e03
  424dec:	iret   
  424ded:	add    al,0x82
  424def:	xor    edx,esi
  424df1:	or     DWORD PTR [eax],eax
  424df3:	imul   ebp,DWORD PTR [esi],0x9640ae3
  424df9:	or     DWORD PTR [eax],eax
  424dfb:	jmp    0xa9b9e7ee
  424e00:	(bad)  
  424e01:	daa    
  424e02:	add    ch,BYTE PTR [ecx]
  424e04:	je     0x424da7
  424e06:	ficom  WORD PTR ss:[esp+esi*4]
  424e0a:	test   BYTE PTR [ecx-0x16487a1c],ch
  424e10:	(bad)  
  424e11:	or     edx,eax
  424e13:	sub    al,0x17
  424e15:	or     ecx,ebp
  424e17:	jnp    0x424df2
  424e19:	or     DWORD PTR [eax],eax
  424e1b:	inc    ebx
  424e1c:	iret   
  424e1d:	push   esp
  424e1e:	aaa    
  424e1f:	mov    dh,0xf
  424e21:	sbb    ebp,DWORD PTR [eax+0x79]
  424e24:	or     BYTE PTR [edx+0x0],cl
  424e27:	xchg   ecx,eax
  424e28:	loope  0x424ddc
  424e2a:	sti    
  424e2b:	xchg   esi,eax
  424e2c:	dec    ebp
  424e2d:	retf   0xe074
  424e30:	pushf  
  424e31:	inc    ebp
  424e32:	cli    
  424e33:	call   0xe942e4b7
  424e38:	add    BYTE PTR [eax],al
  424e3a:	(bad)  
  424e3b:	retf   
  424e3c:	inc    ebp
  424e3d:	jbe    0x424e10
  424e3f:	add    dh,BYTE PTR [edx-0x4dfc6bdc]
  424e45:	mov    eax,ds:0xe94036c9
  424e4a:	cmp    DWORD PTR [edx+esi*2-0x7b096a02],0xffeef199
  424e55:	jmp    edi
  424e57:	inc    esi
  424e58:	lock lea edi,[eax]
  424e5b:	adc    eax,DWORD PTR [ecx]
  424e5d:	call   0x3a1a6b
  424e62:	mov    eax,0xf20b75c5
  424e67:	inc    esi
  424e68:	test   DWORD PTR [eax+0x720cca61],0xf575cfd
  424e72:	mov    al,BYTE PTR [esi-0x9]
  424e75:	mov    bh,BYTE PTR [ecx+eax*4+0x5e2c4073]
  424e7c:	inc    edx
  424e7d:	cmp    DWORD PTR [ecx+0x77],esi
  424e80:	jne    0x424ed0
  424e82:	jl     0x424e72
  424e84:	cmc    
  424e85:	add    BYTE PTR [ecx-0x57f2c3c3],ch
  424e8b:	inc    ecx
  424e8c:	cmp    al,0xa
  424e8e:	cwde   
  424e8f:	inc    ebp
  424e90:	cmp    al,0x9
  424e92:	mov    BYTE PTR [ecx],cl
  424e94:	cmp    al,0x26
  424e96:	test   eax,0xe445829e
  424e9b:	popf   
  424e9c:	mov    esi,0x24000083
  424ea1:	or     BYTE PTR [esi+0x23],ch
  424ea4:	push   ss
  424ea5:	pop    es
  424ea6:	push   0x45f798
  424eab:	(bad)  
  424eac:	clc    
  424ead:	call   0x17a59eb2
  424eb2:	pop    eax
  424eb3:	adc    edi,esp
  424eb5:	add    eax,0xffa9c085
  424eba:	add    BYTE PTR [ebp+0x54],0x85
  424ebe:	inc    ebp
  424ebf:	lock test eax,0x9c1804c0
  424ec5:	pop    ebp
  424ec6:	or     BYTE PTR [edx-0x7b28286],cl
  424ecc:	add    al,0x7
  424ece:	sbb    edi,edi
  424ed0:	aad    0x5d
  424ed2:	mov    bh,0x87
  424ed4:	lock push eax
  424ed6:	dec    eax
  424ed7:	mov    eax,ebp
  424ed9:	lock sti 
  424edb:	jl     0x424eaa
  424edd:	lahf   
  424ede:	test   edx,ecx
  424ee0:	pop    ebx
  424ee1:	idiv   DWORD PTR [edi-0x489aa1a6]
  424ee7:	daa    
  424ee8:	adc    ah,BYTE PTR [ebx-0x65df7be]
  424eee:	les    eax,FWORD PTR [edx*8-0x750f7392]
  424ef5:	sar    DWORD PTR [edi+0x43c92a2f],cl
  424efb:	and    al,0xc5
  424efd:	lahf   
  424efe:	mov    DWORD PTR [ebx+0x4effa0d5],eax
  424f04:	add    BYTE PTR [eax],al
  424f06:	pop    esi
  424f07:	mov    ebx,fs
  424f09:	maxps  xmm6,XMMWORD PTR [edx+ecx*1+0x38fffc80]
  424f11:	add    dl,BYTE PTR [ebx]
  424f13:	pushf  
  424f14:	out    dx,eax
  424f15:	inc    BYTE PTR es:[esi-0x7c]
  424f19:	stc    
  424f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f1b:	repz add eax,0x37fcdc80
  424f21:	add    eax,0x74ea7955
  424f26:	icebp  
  424f27:	and    bh,BYTE PTR [ebp+0x7f9e4641]
  424f2d:	stc    
  424f2e:	cld    
  424f2f:	adc    ecx,DWORD PTR [esi]
  424f31:	lea    esp,[esi+edi*1]
  424f34:	test   dh,dh
  424f36:	fcom   DWORD PTR [ebx]
  424f38:	or     DWORD PTR [eax+0x538e4ac],eax
  424f3e:	push   ebp
  424f3f:	mov    dh,BYTE PTR [esi]
  424f41:	jb     0x424f1f
  424f43:	sub    ch,dl
  424f45:	sar    BYTE PTR [edi-0x59],0x7f
  424f49:	loope  0x424f25
  424f4b:	or     DWORD PTR [ecx-0x46],ebp
  424f4e:	int3   
  424f4f:	cld    
  424f50:	jp     0x424f15
  424f52:	jg     0x424f15
  424f54:	imul   esp,DWORD PTR [ebx-0xbd9762a],0xbd69d368
  424f5e:	int3   
  424f5f:	cld    
  424f60:	pop    edx
  424f61:	ret    0xc05f
  424f64:	imul   esp,DWORD PTR [edx-0xbd8762a],0x6140000
  424f6e:	fld1   
  424f70:	inc    eax
  424f71:	fidiv  DWORD PTR [ecx+0x60]
  424f74:	add    eax,0xe558610b
  424f79:	pop    es
  424f7a:	les    bp,DWORD PTR [ebx]
  424f7d:	mov    al,ds:0xf9d18be6
  424f82:	mov    eax,ds:0xcd2de243
  424f87:	pop    ss
  424f88:	fiadd  WORD PTR [edi-0x52f14192]
  424f8e:	ds pop edi
  424f90:	pop    ss
  424f91:	push   es
  424f92:	jecxz  0x424f97
  424f94:	lahf   
  424f95:	(bad)  
  424f96:	loope  0x424f9b
  424f98:	pop    edx
  424f99:	inc    esi
  424f9a:	add    eax,0xe6c9720c
  424f9f:	inc    ebx
  424fa0:	xchg   DWORD PTR ds:0xc3deabdd,esi
  424fa6:	mov    bl,0xbe
  424fa8:	pop    edx
  424fa9:	mov    ecx,0x1b41b564
  424fae:	mov    ds:0x99fdf937,al
  424fb3:	aaa    
  424fb4:	icebp  
  424fb5:	std    
  424fb6:	cmp    dl,0xaf
  424fb9:	lods   al,BYTE PTR ds:[esi]
  424fba:	mov    cl,BYTE PTR [edx-0xd185f69]
  424fc0:	bound  ecx,QWORD PTR [ebx-0x59]
  424fc3:	or     edx,ebp
  424fc5:	push   esi
  424fc6:	add    BYTE PTR [edx+0x42],ah
  424fc9:	sub    al,0xec
  424fcb:	fst    QWORD PTR [edi+0x2e]
  424fce:	adc    ch,ch
  424fd0:	add    BYTE PTR [eax],al
  424fd2:	enter  0xfaff,0xd4
  424fd6:	out    0xb0,al
  424fd8:	adc    eax,0x49c42d
  424fdd:	pusha  
  424fde:	sbb    eax,0x57ede7ae
  424fe3:	es cld 
  424fe5:	jmp    0x624a9639
  424fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424feb:	std    
  424fec:	dec    esi
  424fed:	xchg   edi,eax
  424fee:	gs cmc 
  424ff0:	pop    es
  424ff1:	jb     0x424f98
  424ff3:	adc    eax,0x84d6c87f
  424ff8:	fdivr  DWORD PTR [esi-0x2d07b19f]
  424ffe:	adc    BYTE PTR [ecx*2-0x7d1ba66],bl
  425005:	adc    DWORD PTR [edx],esp
  425007:	pop    ebx
  425008:	cli    
  425009:	neg    BYTE PTR [ecx+esi*4+0x2f]
  42500d:	sbb    ecx,DWORD PTR [edi]
  42500f:	mov    dh,0x74
  425011:	sub    al,0xfc
  425013:	dec    esp
  425014:	or     BYTE PTR [esi+eiz*8-0xe],dl
  425018:	push   esp
  425019:	stc    
  42501a:	stos   BYTE PTR es:[edi],al
  42501b:	ds jg  0x42506a
  42501e:	ror    DWORD PTR [edx],0x74
  425021:	cs push esp
  425023:	cs adc bl,ch
  425026:	mov    ds:0x9534374a,al
  42502b:	cmp    BYTE PTR [esi],dl
  42502d:	scas   al,BYTE PTR es:[edi]
  42502e:	add    ch,BYTE PTR [esi+0x1a0aa64f]
  425034:	sti    
  425035:	hlt    
  425036:	add    BYTE PTR [eax],al
  425038:	push   ds
  425039:	sti    
  42503a:	aas    
  42503b:	jmp    0xe0b81a9b
  425040:	pop    ebp
  425041:	inc    ebp
  425042:	cld    
  425043:	add    BYTE PTR [edx+ecx*1],ch
  425046:	sti    
  425047:	cmp    DWORD PTR [eax+0x45d82ec],esp
  42504d:	mov    cl,0xd9
  42504f:	jb     0x425020
  425051:	mov    eax,0x529a5fbb
  425056:	leave  
  425057:	ret    0x77c
  42505a:	jnp    0x4250d9
  42505c:	ins    BYTE PTR es:[edi],dx
  42505d:	or     dh,BYTE PTR [ebp-0xf]
  425060:	test   DWORD PTR [edx-0x8],0x2313298b
  425067:	lock in eax,0xb6
  42506a:	loop   0x425053
  42506c:	mov    ecx,0xf8b1701
  425071:	mov    cl,0xd3
  425073:	jae    0x42500d
  425075:	jg     0x42507d
  425077:	xor    ch,0xa5
  42507a:	outs   dx,DWORD PTR ds:[esi]
  42507b:	or     bh,BYTE PTR [esi+ebp*2-0x78f483f7]
  425082:	stc    
  425083:	or     eax,0xfa7b015b
  425088:	cs cli 
  42508a:	add    ecx,DWORD PTR [ecx+0x42f49390]
  425090:	xor    dh,BYTE PTR [edx-0x75f38d15]
  425096:	repnz add bl,BYTE PTR [esi+0x7d7b34]
  42509d:	add    ah,ch
  42509f:	push   es
  4250a0:	je     0x4250bd
  4250a2:	jg     0x42508f
  4250a4:	smsw   WORD PTR [eax-0x38284e7]
  4250ab:	or     BYTE PTR [ebp+0x12],dh
  4250ae:	aaa    
  4250af:	dec    esp
  4250b0:	clc    
  4250b1:	inc    ebx
  4250b2:	xchg   edi,eax
  4250b3:	cli    
  4250b4:	sbb    BYTE PTR [ebp+0x60],0x81
  4250b8:	inc    ebp
  4250b9:	clc    
  4250ba:	out    dx,eax
  4250bb:	pusha  
  4250bc:	sti    
  4250bd:	mov    dl,ch
  4250bf:	fnsave [edi-0x174ae779]
  4250c5:	mov    esi,0x1ba8a14c
  4250ca:	dec    eax
  4250cb:	pushf  
  4250cc:	sbb    al,0x8d
  4250ce:	xor    DWORD PTR [eax+0x5cd685fe],esp
  4250d4:	fbstp  TBYTE PTR [ebx-0x33]
  4250d7:	in     al,0x6
  4250d9:	jl     0x4250ad
  4250db:	or     al,0xb
  4250dd:	jnp    0x4250b5
  4250df:	pop    edi
  4250e0:	test   al,0xeb
  4250e2:	pop    esi
  4250e3:	adc    esp,DWORD PTR gs:[edi]
  4250e6:	mov    ?,WORD PTR [ecx]
  4250e8:	pop    es
  4250e9:	xchg   DWORD PTR [esi+0x52fb2559],edx
  4250ef:	repz push ecx
  4250f1:	xchg   DWORD PTR [ecx],edi
  4250f3:	xchg   ecx,eax
  4250f4:	dec    esi
  4250f5:	push   edx
  4250f6:	stos   BYTE PTR es:[edi],al
  4250f7:	jecxz  0x42512a
  4250f9:	adc    BYTE PTR [edx],bh
  4250fb:	mov    ch,0xc3
  4250fd:	push   cs
  4250fe:	xchg   ebp,eax
  4250ff:	mov    al,ds:0x7588
  425104:	(bad)  [ecx]
  425106:	inc    edx
  425107:	clc    
  425108:	dec    esi
  425109:	pop    ebp
  42510a:	or     ecx,DWORD PTR [ebp-0xd075d27]
  425110:	xchg   BYTE PTR [eax],bh
  425112:	push   eax
  425113:	xchg   DWORD PTR [edx],edx
  425115:	mov    ebp,0x51b66f50
  42511b:	sti    
  42511c:	loopne 0x425132
  42511e:	push   cs
  42511f:	inc    eax
  425120:	aad    0x1f
  425122:	ror    BYTE PTR [esp+ebx*2],0xe5
  425126:	mov    bh,0x85
  425128:	adc    eax,0x588900ed
  42512d:	ins    BYTE PTR es:[edi],dx
  42512e:	stos   DWORD PTR es:[edi],eax
  42512f:	call   ebx
  425131:	div    BYTE PTR [edi-0x1488d779]
  425137:	fst    DWORD PTR [esi+0xa]
  42513a:	sahf   
  42513b:	add    eax,0xbf665641
  425140:	mov    bl,0x1e
  425142:	in     al,dx
  425143:	sub    edi,0x16
  425146:	adc    eax,0x814f5a46
  42514b:	mov    DWORD PTR ds:0x7dcbe0b,ecx
  425151:	fld    TBYTE PTR [eax-0x8]
  425154:	aam    0xe3
  425156:	repz out dx,al
  425158:	adc    al,BYTE PTR [eax+0x62]
  42515b:	xor    ebp,esp
  42515d:	test   al,0xf4
  42515f:	pop    ebx
  425160:	loop   0x4251ab
  425162:	jmp    0xed61e6e7
  425167:	out    dx,al
  425168:	add    BYTE PTR [eax],al
  42516a:	loope  0x425111
  42516c:	call   0xe8ba:0x93a5e0ba
  425173:	stc    
  425174:	fiadd  DWORD PTR [ebx-0x2b]
  425177:	repnz mov eax,DWORD PTR [edi]
  42517a:	pop    edx
  42517b:	daa    
  42517c:	icebp  
  42517d:	xchg   BYTE PTR [ecx],dl
  42517f:	push   ss
  425180:	out    0x38,al
  425182:	loope  0x425138
  425184:	out    0x8e,al
  425186:	mov    al,ds:0xb3b2cea5
  42518b:	xchg   ebx,eax
  42518c:	sahf   
  42518d:	mov    ss,WORD PTR [eax+0x1c599a15]
  425193:	int3   
  425194:	in     eax,0x3
  425196:	mov    al,ds:0xf186fd94
  42519b:	stc    
  42519c:	xor    eax,0xf51efe52
  4251a1:	mov    gs,WORD PTR [eax-0x2abc0833]
  4251a7:	test   al,0xb3
  4251a9:	mov    edx,0x406ff968
  4251ae:	fldcw  WORD PTR [eax+0x16208e93]
  4251b4:	add    BYTE PTR [eax+0x15],ah
  4251b7:	call   0xf134:0x96d12487
  4251be:	dec    ebx
  4251bf:	ror    DWORD PTR [ecx-0x3e1f9ac4],0xe6
  4251c6:	push   ebx
  4251c7:	mov    BYTE PTR [eax],al
  4251c9:	jmp    0x74918ea4
  4251ce:	add    BYTE PTR [eax],al
  4251d0:	fstp   QWORD PTR [ebp-0x5bf60b18]
  4251d6:	sti    
  4251d7:	pusha  
  4251d8:	adc    eax,0xcfa985a2
  4251dd:	lea    ecx,[ebp-0x78f62917]
  4251e3:	fsub   QWORD PTR [esi]
  4251e5:	loopne 0x4251a9
  4251e7:	fild   QWORD PTR [ebx-0x5ab1b0c4]
  4251ed:	stc    
  4251ee:	cli    
  4251ef:	fdiv   st(6),st
  4251f1:	sbb    BYTE PTR [eax-0x17],al
  4251f4:	push   ebp
  4251f5:	leave  
  4251f6:	jne    0x4251bd
  4251f8:	push   esi
  4251f9:	in     eax,0x36
  4251fb:	repz add eax,0x7eb4872c
  425201:	test   al,0xc6
  425203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425204:	inc    ebx
  425205:	cdq    
  425206:	je     0x4251ca
  425208:	pop    ebx
  425209:	ds cld 
  42520b:	bound  edx,QWORD PTR [edi]
  42520d:	mov    cs,esi
  42520f:	jge    0x42522b
  425211:	xchg   ebp,eax
  425212:	inc    esp
  425213:	(bad)  
  425214:	fchs   
  425216:	inc    esp
  425217:	icebp  
  425218:	lds    edx,FWORD PTR [esi]
  42521a:	push   ecx
  42521b:	pop    esp
  42521c:	rol    BYTE PTR [ecx],cl
  42521e:	xchg   DWORD PTR [edi-0x203afdd7],esi
  425224:	sub    al,0xb0
  425226:	or     al,0x5a
  425228:	fstp   TBYTE PTR [ebx]
  42522a:	push   ecx
  42522b:	jmp    0xc918:0xe83919
  425232:	idiv   bh
  425234:	add    BYTE PTR [eax],al
  425236:	aas    
  425237:	(bad)  
  425239:	add    BYTE PTR [edx],cl
  42523b:	stc    
  42523c:	div    BYTE PTR [ebp+0x70]
  42523f:	int3   
  425240:	add    al,0x1f
  425242:	mov    WORD PTR [edx+0x75],fs
  425245:	adc    al,0xfb
  425247:	mov    es,WORD PTR [edi+ebx*1]
  42524a:	in     al,dx
  42524b:	jne    0x42521f
  42524d:	les    edx,FWORD PTR [edx+0x61]
  425250:	sti    
  425251:	jl     0x4252a3
  425253:	xchg   ebp,eax
  425254:	inc    ebp
  425255:	or     BYTE PTR [edi-0x680904a5],ah
  42525b:	loopne 0x425254
  42525d:	add    edi,edi
  42525f:	xchg   edx,eax
  425260:	jne    0x42526e
  425262:	outs   dx,DWORD PTR ds:[esi]
  425263:	pop    ebx
  425264:	add    DWORD PTR [ebp+0x8],edi
  425267:	xchg   ebp,eax
  425268:	pop    ebp
  425269:	hlt    
  42526a:	mov    ebx,0x62338207
  425270:	idiv   edi
  425272:	xor    edx,DWORD PTR [esi+0x46720c45]
  425278:	leave  
  425279:	ret    0xb2c
  42527c:	push   ebp
  42527d:	mov    eax,DWORD PTR [eax]
  42527f:	cmp    ecx,DWORD PTR [ebx+0x56]
  425282:	(bad)  
  425283:	mov    dh,0xbf
  425285:	adc    bh,BYTE PTR [ebx+ecx*1+0x4f]
  425289:	dec    DWORD PTR [ecx+0xf]
  42528c:	not    esi
  42528e:	shl    esi,cl
  425290:	pop    es
  425291:	mov    edx,esp
  425293:	pusha  
  425294:	into   
  425295:	test   DWORD PTR [ebx],edx
  425297:	loope  0x4252ee
  425299:	test   DWORD PTR [eax],eax
  42529b:	add    BYTE PTR [ebx+eiz*8+0x13398b51],bh
  4252a2:	stos   BYTE PTR es:[edi],al
  4252a3:	aas    
  4252a4:	and    al,0x82
  4252a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252a7:	(bad)  
  4252a8:	adc    ebp,DWORD PTR [eax]
  4252aa:	shl    BYTE PTR [ebp+edx*8-0x14],0x43
  4252af:	push   eax
  4252b0:	dec    esp
  4252b1:	out    dx,al
  4252b2:	or     edi,ebx
  4252b4:	add    ebx,DWORD PTR [edx]
  4252b6:	cmp    bh,ah
  4252b8:	pusha  
  4252b9:	in     al,dx
  4252ba:	sti    
  4252bb:	std    
  4252bc:	push   ecx
  4252bd:	jo     0x4252ea
  4252bf:	lods   eax,DWORD PTR ss:[esi]
  4252c1:	pop    ecx
  4252c2:	(bad)  
  4252c3:	cli    
  4252c4:	mov    edx,0x8e85d71b
  4252c9:	cld    
  4252ca:	call   0x50ef6355
  4252cf:	push   eax
  4252d0:	push   es
  4252d1:	mov    DWORD PTR [eax-0x3c],edx
  4252d4:	fwait
  4252d5:	(bad)  
  4252d6:	jne    0x425313
  4252d8:	pusha  
  4252d9:	pop    esp
  4252da:	cld    
  4252db:	out    0xfc,eax
  4252dd:	dec    esi
  4252de:	mov    ecx,0x79d82fb
  4252e3:	repz popf 
  4252e5:	or     al,ah
  4252e7:	and    al,0x7a
  4252e9:	mov    dl,0xc5
  4252eb:	mov    bl,dl
  4252ed:	sub    edi,DWORD PTR [edx]
  4252ef:	cld    
  4252f0:	sbb    ecx,DWORD PTR [ecx-0x64]
  4252f3:	mov    ds:0xbf8c4f5b,al
  4252f8:	ds call 0xe8c0:0x2bd975b8
  425300:	add    BYTE PTR [eax],al
  425302:	mov    ?,WORD PTR cs:[ecx+0x5cce9afb]
  425309:	leave  
  42530a:	pop    ss
  42530b:	cwde   
  42530c:	call   DWORD PTR [esi+ebx*2+0xc]
  425310:	jle    0x4252fe
  425312:	lds    esi,FWORD PTR [ecx-0x79790001]
  425318:	push   eax
  425319:	data16 fistp DWORD PTR [ebx]
  42531c:	scas   eax,DWORD PTR es:[edi]
  42531d:	pop    eax
  42531e:	adc    esi,DWORD PTR [ebp-0x44]
  425321:	add    BYTE PTR [ebp+ebp*2+0x9530b07],bh
  425328:	imul   eax,DWORD PTR [edx*8+0x352c3909],0x22
  425330:	sub    DWORD PTR [edx+ebx*2],eax
  425333:	xlat   BYTE PTR ds:[ebx]
  425334:	rcl    DWORD PTR [eax-0x7e3d58d7],0x95
  42533b:	pop    ds
  42533c:	xor    al,0x89
  42533e:	pop    ds
  42533f:	or     al,0x5f
  425341:	add    eax,0xc34ea01
  425346:	stc    
  425347:	adc    ah,BYTE PTR ds:0x1a16eeff
  42534d:	add    edx,DWORD PTR [ecx+esi*4]
  425350:	or     BYTE PTR [ecx-0x74c6ede8],0x97
  425357:	icebp  
  425358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425359:	add    ebx,DWORD PTR [eax]
  42535b:	adc    bl,BYTE PTR [eax]
  42535d:	mov    DWORD PTR [eax-0x66],ebp
  425360:	jae    0x425319
  425362:	jle    0x425331
  425364:	fs mov ah,0x0
  425367:	add    BYTE PTR [edi-0x5b],bh
  42536a:	bound  eax,QWORD PTR [ebx]
  42536c:	aad    0x9
  42536e:	jmp    0x540a3d1e
  425373:	mov    bh,0x5a
  425375:	ret    0xdb64
  425378:	loope  0x425359
  42537a:	jbe    0x425376
  42537c:	cmp    dl,bh
  42537e:	mov    WORD PTR [esi-0x7ece6eb2],?
  425384:	ds push ds
  425386:	add    dl,BYTE PTR [ebx+0x7f]
  425389:	mov    bl,0x24
  42538b:	add    al,0xd5
  42538d:	lock and eax,0x4d233d4e
  425393:	mov    dh,0x1e
  425395:	xchg   ecx,eax
  425396:	pushf  
  425397:	pop    es
  425398:	xchg   esi,eax
  425399:	cmp    al,0x70
  42539b:	add    eax,0xb73188a7
  4253a0:	std    
  4253a1:	xor    al,BYTE PTR [eax]
  4253a3:	dec    ebp
  4253a4:	dec    ebx
  4253a5:	mov    eax,ds:0x92e69c87
  4253aa:	add    DWORD PTR [edi+0x3a019c95],ebp
  4253b0:	cmp    esp,esp
  4253b2:	mov    esi,0x458c2bd7
  4253b7:	rol    BYTE PTR [ebx-0x6b4fa8c1],cl
  4253bd:	adc    eax,0xee0a7200
  4253c2:	or     esp,DWORD PTR [edx+0x1a]
  4253c5:	out    dx,al
  4253c6:	pop    es
  4253c7:	pop    ss
  4253c8:	dec    esi
  4253c9:	sbb    eax,0xf124
  4253ce:	imul   edx,edi,0x7e
  4253d1:	test   eax,0xa87f39d3
  4253d6:	(bad)  [ecx+0x9d6dcda]
  4253dc:	add    BYTE PTR [edi],0xd5
  4253df:	or     DWORD PTR [edx-0xc],ebx
  4253e2:	aam    0x98
  4253e4:	fsubr  DWORD PTR [edx+0x18ec8d25]
  4253ea:	and    BYTE PTR [ebx+0x4e5d6145],dl
  4253f0:	clc    
  4253f1:	mov    ecx,0xab2a75be
  4253f6:	(bad)  
  4253f7:	xor    edi,edx
  4253f9:	call   0xbd3d5dd4
  4253fe:	fcmovb st,st(7)
  425400:	inc    ebp
  425401:	cmp    eax,0xe175a0d1
  425406:	outs   dx,BYTE PTR ds:[esi]
  425407:	sbb    ecx,ebx
  425409:	jmp    0xfe0678e4
  42540e:	and    DWORD PTR [ebx+0x8],esp
  425411:	jmp    0xefcb5212
  425416:	dec    ebp
  425417:	inc    edi
  425418:	add    al,0x83
  42541a:	(bad)  
  42541b:	cmp    ebx,edi
  42541d:	add    BYTE PTR [ecx],dh
  42541f:	add    BYTE PTR [esi],cl
  425421:	inc    eax
  425422:	cld    
  425423:	xchg   ah,al
  425425:	or     al,0x79
  425427:	out    0x17,al
  425429:	push   eax
  42542a:	jmp    0x42543f
  42542c:	in     al,0x12
  42542e:	mov    esp,0xc6830d
  425433:	add    BYTE PTR [edi],bh
  425435:	push   esp
  425436:	sub    esp,0x77
  425439:	in     al,0xb
  42543b:	sbb    DWORD PTR [eax],0x5
  42543e:	dec    ebx
  42543f:	cmp    DWORD PTR [esi+edi*4+0x4e],0x57
  425444:	leave  
  425445:	daa    
  425446:	add    DWORD PTR [eax],eax
  425448:	lods   al,BYTE PTR ds:[esi]
  425449:	push   cs
  42544a:	jg     0x42542e
  42544c:	lods   al,BYTE PTR ds:[esi]
  42544d:	pop    es
  42544e:	add    BYTE PTR [ebx-0x3f84e9ff],cl
  425454:	mov    al,0xf1
  425456:	adc    edx,DWORD PTR [eax+0x35]
  425459:	jecxz  0x42544e
  42545b:	call   0x426055
  425460:	in     al,dx
  425461:	pop    esp
  425462:	adc    eax,0x47a214
  425467:	xor    DWORD PTR [eax],0x12
  42546a:	test   eax,eax
  42546c:	fwait
  42546d:	and    esi,DWORD PTR [edi-0x17f88400]
  425473:	xor    DWORD PTR [ebp+ebx*2+0x5f3189f7],eax
  42547a:	lea    eax,[ebp-0x68]
  42547d:	cwde   
  42547e:	icebp  
  42547f:	push   eax
  425480:	(bad)
  425483:	call   0x38cdfa
  425488:	mov    ch,0xe2
  42548a:	sti    
  42548b:	cmp    esi,edx
  42548d:	repnz add esi,DWORD PTR [ebx]
  425490:	sti    
  425491:	jo     0x425507
  425493:	mov    ecx,DWORD PTR [ecx+0x6b]
  425496:	jnp    0x425497
  425498:	add    BYTE PTR [eax],al
  42549a:	aad    0xa6
  42549c:	xor    edi,edi
  42549e:	lods   al,BYTE PTR ds:[esi]
  42549f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254a0:	push   esp
  4254a1:	aaa    
  4254a2:	adc    esp,DWORD PTR [ebx]
  4254a4:	in     eax,0x8c
  4254a6:	lods   eax,DWORD PTR ds:[esi]
  4254a7:	mov    bl,0x29
  4254a9:	adc    al,0x2
  4254ab:	es stos DWORD PTR es:[edi],eax
  4254ad:	dec    edi
  4254ae:	cli    
  4254af:	mov    ebp,0xb095120b
  4254b4:	add    ah,0xd9
  4254b7:	sub    eax,0xf2d074bf
  4254bc:	jle    0x42547d
  4254be:	(bad)  
  4254bf:	mov    cl,0xff
  4254c1:	dec    DWORD PTR [esi]
  4254c3:	fs xor esi,ebx
  4254c6:	mov    esi,0x9ef22697
  4254cb:	mov    cl,0xff
  4254cd:	call   esi
  4254cf:	fnsave [edi-0x2e3fdb8b]
  4254d5:	test   DWORD PTR [edx+0x1886eefc],ebp
  4254db:	jge    0x42545d
  4254dd:	rcl    cl,0x30
  4254e0:	aaa    
  4254e1:	add    al,0xd6
  4254e3:	sbb    eax,0x502fc2f
  4254e8:	mov    DWORD PTR [eax],ecx
  4254ea:	pop    eax
  4254eb:	imul   ebp,DWORD PTR [ebx],0xbc05bc0e
  4254f1:	jb     0x4254d3
  4254f3:	pop    ss
  4254f4:	push   edx
  4254f5:	clc    
  4254f6:	mov    esi,0x55f77e49
  4254fb:	sub    eax,0x58
  425500:	out    0x6c,al
  425502:	inc    ecx
  425503:	add    eax,0xffffb12e
  425508:	push   cs
  425509:	cld    
  42550a:	xor    ch,dl
  42550c:	dec    esi
  42550d:	sti    
  42550e:	and    eax,0xffb11ed7
  425513:	jmp    DWORD PTR [eax+0x9]
  425516:	outs   dx,BYTE PTR ds:[esi]
  425517:	fcom   st(4)
  425519:	or     ecx,ebp
  42551b:	xchg   BYTE PTR [eax+0x141601a5],ch
  425521:	mov    ds:0x1c157f0a,eax
  425526:	loopne 0x4254dc
  425528:	and    BYTE PTR [ebp-0x5ceb2fef],0xf2
  42552f:	test   DWORD PTR [eax+0x55dc0199],eax
  425535:	mov    ds:0x422af6e2,eax
  42553a:	cmp    ecx,DWORD PTR [edi+0xc]
  42553d:	(bad)  
  42553e:	in     eax,0x3
  425540:	push   edx
  425541:	dec    esp
  425542:	int    0x81
  425544:	or     DWORD PTR ds:0xba21c2a,ecx
  42554a:	jmp    0x1b4c9052
  42554f:	mov    bl,0xe0
  425551:	add    ebx,edx
  425553:	inc    ebx
  425554:	aad    0x10
  425556:	pop    ebx
  425557:	dec    ecx
  425558:	lds    ecx,FWORD PTR [ebp+eiz*4-0x113d5a00]
  42555f:	ret    
  425560:	mov    edx,0xca9146
  425565:	add    BYTE PTR [edi],dl
  425567:	adc    ch,cl
  425569:	jl     0x425582
  42556b:	push   es
  42556c:	outs   dx,BYTE PTR ds:[esi]
  42556d:	dec    ecx
  42556e:	sar    DWORD PTR [ecx],1
  425570:	jb     0x4255ab
  425572:	int    0x27
  425574:	pusha  
  425575:	dec    edx
  425576:	fmul   QWORD PTR [ebx+ebp*1-0xb5efb01]
  42557d:	adc    eax,edi
  42557f:	dec    ecx
  425580:	jmp    0x6650e70b
  425585:	mov    bl,0xd4
  425587:	pop    ss
  425588:	add    al,0x9c
  42558a:	jmp    0x17:0x5a03e90e
  425591:	xor    eax,0x90e83b9e
  425596:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  425598:	sti    
  425599:	push   0x66
  42559b:	or     BYTE PTR [edx-0x30],dh
  42559e:	shl    DWORD PTR [edi+edx*8+0x6609d6e8],0xf5
  4255a6:	inc    edi
  4255a7:	pop    ss
  4255a8:	hlt    
  4255a9:	je     0x425608
  4255ab:	fnsave [ebx]
  4255ad:	inc    DWORD PTR [edi-0x5b]
  4255b0:	push   eax
  4255b1:	neg    ch
  4255b3:	cmc    
  4255b4:	adc    DWORD PTR [ecx-0xa3bdf2a],ebp
  4255ba:	pop    ebp
  4255bb:	retf   0x740b
  4255be:	sbb    ebp,DWORD PTR [eax]
  4255c0:	push   es
  4255c1:	ss push ecx
  4255c3:	cdq    
  4255c4:	add    DWORD PTR [ebp+edx*8-0x5c],edx
  4255c8:	jne    0x42558f
  4255ca:	add    BYTE PTR [eax],al
  4255cc:	dec    ebx
  4255cd:	int    0xe8
  4255cf:	std    
  4255d0:	pop    esp
  4255d1:	mov    ds:0xa48e63fb,eax
  4255d6:	jne    0x425585
  4255d8:	dec    esi
  4255d9:	out    0xc0,eax
  4255db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255dc:	mov    ?,WORD PTR [di-0x67]
  4255e0:	and    eax,DWORD PTR ds:[eax-0x40789869]
  4255e7:	sub    BYTE PTR [eax],0xa5
  4255ea:	sti    
  4255eb:	xchg   BYTE PTR ds:0x626aec89,ch
  4255f1:	stc    
  4255f2:	dec    esi
  4255f3:	pop    ds
  4255f4:	push   ds
  4255f5:	pop    DWORD PTR [ebp+0x6d]
  4255f8:	push   es
  4255f9:	mov    dl,0xd7
  4255fb:	jns    0x425621
  4255fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255fe:	xchg   DWORD PTR [ecx-0x1f],esp
  425601:	push   ds
  425602:	hlt    
  425603:	ins    BYTE PTR es:[edi],dx
  425604:	daa    
  425605:	push   ss
  425606:	add    al,0x1b
  425608:	sbb    DWORD PTR [eax-0x1e38ff9a],ebp
  42560e:	sti    
  42560f:	mov    edi,DWORD PTR [ecx-0x4]
  425612:	dec    ebp
  425613:	push   edi
  425614:	xchg   esp,eax
  425615:	sar    ch,1
  425617:	inc    DWORD PTR [ebx]
  425619:	mov    dh,dh
  42561b:	add    al,0x4e
  42561d:	pop    es
  42561e:	bound  eax,QWORD PTR [edx+eiz*2]
  425621:	rol    BYTE PTR [ebp+0x13],cl
  425624:	sub    al,0x91
  425626:	out    dx,al
  425627:	je     0x425661
  425629:	mov    DWORD PTR [edi],edi
  42562b:	or     eax,DWORD PTR [ebp+0x89f851]
  425631:	add    BYTE PTR [ecx+0x2bb70770],cl
  425637:	popf   
  425638:	or     BYTE PTR [ebp+0x10],0x3c
  42563c:	div    DWORD PTR [ebp-0xc]
  42563f:	(bad)  
  425640:	jmp    FWORD PTR [ecx-0x6]
  425643:	xor    DWORD PTR [ebx-0x38],0xffffffec
  425647:	or     eax,DWORD PTR [ebx+0x746439f0]
  42564d:	sbb    al,0x47
  42564f:	inc    edi
  425650:	or     BYTE PTR [ebx-0x1729e32c],cl
  425656:	call   0x39424c46
  42565b:	(bad)  
  42565c:	je     0x425662
  42565e:	jp     0x4256a7
  425660:	or     eax,DWORD PTR [ecx]
  425662:	inc    esp
  425663:	xchg   ebp,eax
  425664:	mov    BYTE PTR [eax],al
  425666:	lods   al,BYTE PTR ds:[esi]
  425667:	push   ds
  425668:	jge    0x42565e
  42566a:	arpl   di,bx
  42566c:	sti    
  42566d:	jne    0x4256a8
  42566f:	inc    ecx
  425670:	call   0xf79e830a
  425675:	mov    ch,BYTE PTR [ecx-0x38a1a90c]
  42567b:	bound  edi,QWORD PTR [edx-0x7cc783f4]
  425681:	in     al,dx
  425682:	sbb    eax,0xd5564b3c
  425687:	pop    edi
  425688:	jl     0x425700
  42568a:	in     eax,0x2b
  42568c:	mov    ecx,0xb9ac2bf3
  425691:	lea    edx,[edi+0xefe4b6]
  425697:	add    BYTE PTR [ebp+0x57],dl
  42569a:	add    al,0x2e
  42569c:	pop    esi
  42569d:	jmp    0x42569f
  42569f:	xchg   esp,eax
  4256a0:	nop
  4256a1:	in     al,0x9b
  4256a3:	jle    0x4256a8
  4256a5:	add    BYTE PTR [ecx-0xc06a99e],dh
  4256ab:	outs   dx,BYTE PTR ds:[esi]
  4256ac:	fld    st(2)
  4256ae:	mov    edi,0xb12da0e7
  4256b3:	jne    0x42568e
  4256b5:	arpl   sp,cx
  4256b7:	out    0xd6,eax
  4256b9:	and    eax,0xeb5e2c51
  4256be:	fwait
  4256bf:	bound  ecx,QWORD PTR [ebx]
  4256c1:	test   al,0xb0
  4256c3:	or     ebp,DWORD PTR [edx]
  4256c5:	test   eax,0xc9128754
  4256ca:	cmc    
  4256cb:	jmp    0x42569f
  4256cd:	iret   
  4256ce:	add    al,0x4b
  4256d1:	ins    BYTE PTR es:[edi],dx
  4256d2:	mov    al,0x75
  4256d4:	shl    edi,0x54
  4256d7:	call   0xfbf2ad0b
  4256dc:	push   ebp
  4256dd:	in     eax,dx
  4256de:	scas   eax,DWORD PTR es:[edi]
  4256df:	add    DWORD PTR [eax],esp
  4256e1:	sar    DWORD PTR [ebp+0x42],cl
  4256e4:	aam    0x24
  4256e6:	mov    edi,0xb776be74
  4256eb:	push   ebx
  4256ec:	loop   0x425724
  4256ee:	mov    edi,0x4916254f
  4256f3:	add    al,0x25
  4256f5:	mov    al,0x79
  4256f7:	inc    edx
  4256f8:	(bad)  
  4256f9:	add    BYTE PTR [ebp+0x45],bh
  4256fc:	add    BYTE PTR [eax],al
  4256fe:	(bad)  [edi]
  425700:	out    dx,eax
  425701:	out    0x20,eax
  425703:	or     ebx,edx
  425705:	mov    cl,0x5e
  425707:	pop    ecx
  425708:	call   0x2085565d
  42570d:	(bad)
  425710:	mov    ah,0x7c
  425712:	cmp    DWORD PTR [eax+0x9d59b55],ecx
  425718:	jmp    0x6478fe71
  42571d:	inc    esi
  42571e:	cmp    DWORD PTR [ecx],edi
  425720:	inc    ecx
  425721:	outs   dx,BYTE PTR ds:[esi]
  425722:	pop    esi
  425723:	lahf   
  425724:	and    dh,ah
  425726:	and    al,0x90
  425728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425729:	iret   
  42572a:	loop   0x4256f3
  42572c:	pushf  
  42572d:	or     bl,al
  42572f:	leave  
  425730:	add    BYTE PTR [edx-0x361661f5],al
  425736:	cwde   
  425737:	mov    ds:0xa9807ae9,al
  42573c:	mov    al,0x36
  42573e:	stc    
  42573f:	or     eax,0x9deb2963
  425744:	jmp    0xce28d4c9
  425749:	add    ch,BYTE PTR [edx+0x3ed4b97]
  42574f:	push   ss
  425750:	adc    bl,dh
  425752:	mov    cl,BYTE PTR [edi+0x717abe44]
  425758:	mov    fs,WORD PTR [esi]
  42575a:	jb     0x42578c
  42575c:	out    0x4b,eax
  42575e:	aaa    
  42575f:	xchg   ebx,eax
  425760:	and    al,0xc0
  425762:	add    BYTE PTR [eax],al
  425764:	xor    eax,DWORD PTR [esi]
  425766:	je     0x4257ab
  425768:	mov    eax,ds:0x85496c3a
  42576d:	cmp    dl,BYTE PTR [edx+0x28f3e519]
  425773:	add    al,0xa
  425775:	(bad)  
  425776:	cmc    
  425777:	sbb    BYTE PTR [eax-0x2],0x79
  42577b:	scas   eax,DWORD PTR es:[edi]
  42577c:	jle    0x4257b8
  42577e:	add    BYTE PTR [esp+ebx*1-0x32],ah
  425782:	push   eax
  425783:	adc    DWORD PTR [ecx+0x6266fae9],0xd523758
  42578d:	sub    BYTE PTR [ecx],bh
  42578f:	(bad)  
  425791:	adc    BYTE PTR [esp+ebx*8-0x2cfff62f],al
  425798:	fadd   DWORD PTR [edx+0x2f]
  42579b:	sub    DWORD PTR [edi+ebx*1-0x52],edx
  42579f:	cmp    cl,BYTE PTR [esi-0x3c3c58d9]
  4257a5:	inc    ecx
  4257a6:	bound  esi,QWORD PTR [eax-0x74]
  4257a9:	pop    ecx
  4257aa:	data16 stc 
  4257ac:	push   ebp
  4257ad:	(bad)  
  4257af:	mov    eax,0xb9b84755
  4257b4:	cmp    esi,edi
  4257b6:	pandn  mm2,QWORD PTR [esi-0x2ada80f7]
  4257bd:	mov    es,WORD PTR [ebp-0x45ebc2b]
  4257c3:	cdq    
  4257c4:	push   ebp
  4257c5:	inc    edi
  4257c6:	mov    al,0x39
  4257c8:	add    BYTE PTR [eax],al
  4257ca:	inc    ecx
  4257cb:	adc    eax,0x112bde23
  4257d0:	mov    bl,0x52
  4257d2:	out    0x85,eax
  4257d4:	rcr    dh,0x52
  4257d7:	les    eax,FWORD PTR [eax]
  4257d9:	jmp    0x6c727bb4
  4257de:	dec    ebp
  4257df:	std    
  4257e0:	cli    
  4257e1:	mov    dh,0x83
  4257e3:	cmp    DWORD PTR [edx+0x5c],edx
  4257e6:	in     eax,dx
  4257e7:	mov    DWORD PTR [edi-0x4f],edi
  4257ea:	jae    0x42579d
  4257ec:	ins    DWORD PTR es:[edi],dx
  4257ed:	jle    0x425857
  4257ef:	mov    al,ds:0x9293a985
  4257f4:	lods   al,BYTE PTR ds:[esi]
  4257f5:	jmp    0x13d61d0
  4257fa:	and    DWORD PTR [eax+0x5f07d782],0x6bf911e8
  425804:	idiv   DWORD PTR [edi*2+0x6d3a7f9b]
  42580b:	or     BYTE PTR [eax],al
  42580d:	call   0x387953
  425812:	ror    al,0x7
  425815:	test   BYTE PTR [edx+0x5],al
  425818:	add    BYTE PTR [eax],al
  42581a:	leave  
  42581b:	push   ecx
  42581c:	in     al,dx
  42581d:	xor    edi,ebx
  42581f:	cmp    BYTE PTR [ecx-0x3f7f1383],cl
  425825:	mov    ?,edx
  425827:	imul   eax,DWORD PTR [ebx-0xc1e5a10],0x3b
  42582e:	add    BYTE PTR [eax],al
  425830:	ret    
  425831:	fwait
  425832:	jg     0x425827
  425834:	cld    
  425835:	pop    es
  425836:	add    BYTE PTR [ecx],bh
  425838:	pop    ecx
  425839:	jl     0x425842
  42583b:	xchg   dh,cl
  42583d:	or     BYTE PTR [eax],al
  42583f:	add    BYTE PTR [esi-0xc],ah
  425842:	mov    WORD PTR [ebx-0x2c],es
  425845:	cmp    BYTE PTR [ebp-0x8c7f4ba],cl
  42584b:	adc    eax,0x3ff5e0
  425850:	outs   dx,DWORD PTR ds:[esi]
  425851:	ror    DWORD PTR [eax*4+0x4710e27c],1
  425858:	cmp    eax,0xac01d3c4
  42585d:	pop    es
  42585e:	xor    edi,DWORD PTR [ebp-0x78]
  425861:	fcomp  st(4)
  425863:	jmp    0x425e8e
  425868:	jp     0x4258ae
  42586a:	or     BYTE PTR [eax+0x75fa9dfa],al
  425870:	jge    0x425872
  425872:	neg    ebx
  425874:	aad    0xb1
  425876:	(bad)  
  425877:	call   esi
  425879:	or     eax,0x1d0037b8
  42587e:	cs push ss
  425880:	dec    esi
  425881:	out    0x9f,al
  425883:	imul   edx,DWORD PTR [ebp-0x2a000088],0x50f442af
  42588d:	adc    al,0xc9
  42588f:	add    ebp,edx
  425891:	mov    al,0x54
  425893:	call   0x74a35898
  425898:	stos   BYTE PTR es:[edi],al
  425899:	sti    
  42589a:	ds scas eax,DWORD PTR es:[edi]
  42589c:	icebp  
  42589d:	mov    edi,0xff37f159
  4258a2:	cmp    ebp,DWORD PTR [esi-0x65]
  4258a5:	xchg   DWORD PTR [eax-0x199066bc],ebx
  4258ab:	sar    BYTE PTR [edx+0x45],cl
  4258ae:	sub    eax,0x25757661
  4258b3:	stc    
  4258b4:	repnz mov DWORD PTR [ebx],edx
  4258b7:	hlt    
  4258b8:	jbe    0x4258ff
  4258ba:	add    DWORD PTR [eax-0x368c8b3b],edi
  4258c0:	xor    ch,al
  4258c2:	adc    DWORD PTR [ecx-0x791d8786],0x13
  4258c9:	lea    edx,[esi-0x1dacabf8]
  4258cf:	popf   
  4258d0:	adc    edx,DWORD PTR [edx]
  4258d2:	xchg   ebp,eax
  4258d3:	mov    al,0x80
  4258d5:	(bad)
  4258d9:	je     0x4258b6
  4258db:	loop   0x42595b
  4258dd:	ret    
  4258de:	sahf   
  4258df:	mov    cl,0xff
  4258e1:	(bad)  
  4258e2:	(bad)  
  4258e3:	aad    0x9b
  4258e5:	outs   dx,BYTE PTR ds:[esi]
  4258e6:	mov    ch,0xc7
  4258e8:	jmp    0x425952
  4258ea:	mov    ds:0xd5fffe77,eax
  4258ef:	or     esi,esp
  4258f1:	mov    eax,ss:0x3b813de
  4258f7:	add    BYTE PTR [esi+0x46],bl
  4258fa:	add    BYTE PTR [eax],al
  4258fc:	jge    0x42592e
  4258fe:	test   eax,0xe909d4c8
  425903:	add    BYTE PTR [eax],dl
  425905:	xchg   esi,eax
  425906:	ins    BYTE PTR es:[edi],dx
  425907:	jge    0x425893
  425909:	or     cl,ch
  42590b:	add    eax,DWORD PTR [edi]
  42590d:	mov    dl,0xd2
  42590f:	ins    BYTE PTR es:[edi],dx
  425910:	pop    edi
  425911:	call   0xc365:0xc9ab014e
  425918:	leave  
  425919:	or     edx,DWORD PTR [edx+0x3e]
  42591c:	cmp    eax,0x3e9ba48e
  425921:	adc    al,0x3d
  425923:	fwait
  425924:	aas    
  425925:	ja     0x425962
  425927:	lods   al,BYTE PTR ds:[esi]
  425928:	cs adc al,0x3d
  42592b:	fwait
  42592c:	aas    
  42592d:	pop    esp
  42592e:	sub    ebp,DWORD PTR [eax+edx*2-0x2464e6ec]
  425935:	sbb    al,0x1b
  425937:	lods   al,BYTE PTR ds:[esi]
  425938:	push   cs
  425939:	inc    esp
  42593a:	or     DWORD PTR [eax-0x70],edi
  42593d:	test   eax,0x82ac068
  425942:	jmp    0x5871b4a
  425947:	cld    
  425948:	jo     0x425958
  42594a:	rep stos DWORD PTR es:[edi],eax
  42594c:	out    dx,al
  42594d:	lods   eax,DWORD PTR ds:[esi]
  42594e:	jg     0x4259ce
  425950:	cwde   
  425951:	adc    DWORD PTR [esi],edx
  425953:	stos   DWORD PTR es:[edi],eax
  425954:	test   DWORD PTR [eax+0x7dbdb45c],edx
  42595a:	fs stos BYTE PTR es:[edi],al
  42595c:	into   
  42595d:	test   ecx,ebx
  42595f:	jge    0x425961
  425961:	add    BYTE PTR [eax-0x52],cl
  425964:	(bad)  
  425965:	mov    dl,0x41
  425967:	push   ecx
  425968:	add    BYTE PTR [ecx],ch
  42596a:	fstp   QWORD PTR [edi]
  42596c:	add    bl,dh
  42596e:	push   ebx
  42596f:	pop    ecx
  425970:	call   0x42c91eb8
  425975:	test   BYTE PTR [ebx],0x3a
  425978:	sti    
  425979:	hlt    
  42597a:	loop   0x425977
  42597c:	aas    
  42597d:	jmp    0x644f27d5
  425982:	cdq    
  425983:	push   ds
  425984:	or     ch,BYTE PTR [esi]
  425986:	push   eax
  425987:	int3   
  425988:	xlat   BYTE PTR ds:[ebx]
  425989:	call   0xf4796364
  42598e:	outs   dx,BYTE PTR ds:[esi]
  42598f:	daa    
  425990:	loopne 0x425914
  425992:	les    ecx,FWORD PTR [ecx+0x1dd6f17a]
  425998:	or     ebx,DWORD PTR [esi+0x4]
  42599b:	scas   al,BYTE PTR es:[edi]
  42599c:	xchg   DWORD PTR [esi+ecx*2-0x291ebd35],ebp
  4259a3:	mov    eax,ds:0x956f5b81
  4259a8:	sti    
  4259a9:	mov    ah,0x52
  4259ab:	mov    ds:0x957f7471,al
  4259b0:	lea    esi,[esi+eiz*2+0x6ca5c5a2]
  4259b7:	xchg   ebp,eax
  4259b8:	ret    0x43a4
  4259bb:	or     edi,ebx
  4259bd:	pushf  
  4259be:	adc    ah,BYTE PTR [edx-0x6ad0b3a3]
  4259c4:	xchg   BYTE PTR [eax+eax*1+0x5a352b00],ch
  4259cb:	mov    ds:0xe9045831,al
  4259d0:	test   DWORD PTR [eax+0x3a3d6aec],edx
  4259d6:	dec    edi
  4259d7:	aas    
  4259d8:	xchg   BYTE PTR [eax+0xd53f17d],dl
  4259de:	xchg   DWORD PTR [ecx+0x4e],ebp
  4259e1:	or     al,BYTE PTR [eax]
  4259e3:	jmp    0x12ea929
  4259e8:	inc    ecx
  4259e9:	dec    edx
  4259ea:	in     al,0x50
  4259ec:	test   BYTE PTR [ecx],cl
  4259ee:	(bad)  
  4259ef:	(bad)  
  4259f0:	arpl   WORD PTR ds:0xcd39e845,dx
  4259f6:	jne    0x4259ff
  4259f8:	jle    0x4259c6
  4259fa:	jmp    0x4ed7ec
  4259ff:	mov    ebp,ecx
  425a01:	imul   edi,DWORD PTR [ebx+0x65],0xfe7b0c5c
  425a08:	ins    DWORD PTR es:[edi],dx
  425a09:	fiadd  DWORD PTR [ebp-0x73]
  425a0c:	mov    ebx,0xb9895005
  425a11:	ins    DWORD PTR es:[edi],dx
  425a12:	not    DWORD PTR ds:0x3ffe44
  425a18:	out    dx,eax
  425a19:	jmp    0x5afb5b11
  425a1e:	je     0x425a50
  425a20:	mov    cl,0x43
  425a22:	add    al,0x8b
  425a24:	adc    DWORD PTR [ebx+edi*2-0x39],esi
  425a28:	inc    ebx
  425a29:	not    BYTE PTR [ebx]
  425a2b:	push   edi
  425a2c:	add    BYTE PTR [eax],al
  425a2e:	dec    edi
  425a2f:	arpl   WORD PTR ds:0x4c0a14,dx
  425a35:	cmp    eax,0xffffffa0
  425a38:	test   al,al
  425a3a:	cmp    ah,bh
  425a3c:	test   BYTE PTR [ebp-0x18],0x8d
  425a40:	mov    edi,0xbfddb
  425a45:	cmp    DWORD PTR [ecx+0x68],ebp
  425a48:	push   0xffffffe1
  425a4a:	out    0xa,eax
  425a4c:	add    DWORD PTR [ebp-0x18],0x13
  425a50:	inc    ebp
  425a51:	lock jecxz 0x425a3b
  425a54:	(bad)  
  425a56:	or     eax,edx
  425a58:	or     al,BYTE PTR [eax-0x14]
  425a5b:	mov    WORD PTR [ebp-0xc],fs
  425a5e:	mov    esp,0xd5360420
  425a63:	cmp    si,di
  425a66:	aad    0x2d
  425a68:	les    ecx,FWORD PTR [ebx]
  425a6a:	push   ecx
  425a6b:	(bad)  
  425a6c:	(bad)  
  425a6d:	call   ebp
  425a6f:	sbb    edi,DWORD PTR [ebx]
  425a71:	hlt    
  425a72:	(bad)  
  425a73:	in     eax,0xb3
  425a75:	das    
  425a76:	xchg   DWORD PTR [eax-0x52],esp
  425a79:	das    
  425a7a:	xchg   ebp,eax
  425a7b:	sti    
  425a7c:	std    
  425a7d:	popa   
  425a7e:	pop    esp
  425a7f:	out    dx,al
  425a80:	outs   dx,DWORD PTR ds:[esi]
  425a81:	pop    ecx
  425a82:	pop    eax
  425a83:	(bad)  
  425a84:	ins    DWORD PTR es:[edi],dx
  425a85:	out    dx,eax
  425a86:	minps  xmm0,XMMWORD PTR cs:[edi-0x28330561]
  425a8e:	aam    0xa0
  425a90:	(bad)  
  425a91:	inc    BYTE PTR [eax]
  425a93:	add    BYTE PTR [ecx],cl
  425a95:	mov    DWORD PTR [edi+0x55],esi
  425a98:	jne    0x425aa9
  425a9a:	test   DWORD PTR [edi-0x4e],esi
  425a9d:	mov    al,ds:0xa2bf252b
  425aa2:	inc    edi
  425aa3:	bound  ebx,QWORD PTR [esi+eiz*2+0x6b]
  425aa7:	or     ecx,DWORD PTR [ebx+0x4e61d764]
  425aad:	pop    esp
  425aae:	loopne 0x425b11
  425ab0:	adc    al,0x42
  425ab2:	cld    
  425ab3:	popa   
  425ab4:	fsubrp st(1),st
  425ab6:	sbb    eax,0x731e9889
  425abb:	aas    
  425abc:	idiv   BYTE PTR [edx-0x5]
  425abf:	dec    edi
  425ac0:	pusha  
  425ac1:	outs   dx,BYTE PTR ds:[esi]
  425ac2:	addr16 out 0xbb,eax
  425ac5:	xchg   BYTE PTR [edi+esi*2-0x7c075f44],al
  425acc:	cmp    esp,DWORD PTR [ecx-0x40800001]
  425ad2:	inc    edi
  425ad3:	bound  ebx,QWORD PTR [esi+eiz*2+0x6b]
  425ad7:	or     ebp,DWORD PTR [ebx]
  425ad9:	fs in  eax,dx
  425adb:	popa   
  425adc:	dec    esi
  425add:	or     ch,BYTE PTR [esi]
  425adf:	jmp    0x425b15
  425ae1:	leave  
  425ae2:	enter  0x34fb,0x3
  425ae6:	test   al,0x21
  425ae8:	dec    esp
  425ae9:	dec    esp
  425aea:	xchg   ebx,eax
  425aeb:	jbe    0x425ae7
  425aed:	loopne 0x425b3d
  425aef:	adc    al,0x5
  425af1:	test   DWORD PTR [eax+ebp*2],esp
  425af4:	add    eax,0x13dc97
  425af9:	add    bh,al
  425afb:	dec    ecx
  425afc:	jmp    0x5d8ec2f9
  425b01:	test   BYTE PTR [ecx+0x7d030f05],bl
  425b07:	test   ah,dh
  425b09:	test   al,0x7e
  425b0b:	push   es
  425b0c:	push   ebx
  425b0d:	ret    
  425b0e:	and    eax,0x7dd3fc85
  425b13:	fisubr WORD PTR ss:[eax-0x68036992]
  425b1a:	push   eax
  425b1b:	dec    esp
  425b1c:	xor    eax,0xe8d33d1b
  425b21:	add    ebx,DWORD PTR [edx-0x39]
  425b24:	push   ecx
  425b25:	stos   BYTE PTR es:[edi],al
  425b26:	call   0x15c1adc1
  425b2b:	sbb    eax,0xa5c0a8f0
  425b30:	outs   dx,BYTE PTR ds:[esi]
  425b31:	dec    esi
  425b32:	loope  0x425b55
  425b34:	stc    
  425b35:	cs aad 0x9
  425b38:	mov    edi,0x1b828afe
  425b3d:	fwait
  425b3e:	das    
  425b3f:	jmp    0xc99c0365
  425b44:	xchg   esp,eax
  425b45:	inc    edi
  425b46:	push   edx
  425b47:	dec    esp
  425b48:	or     edx,ebp
  425b4a:	cdq    
  425b4b:	cdq    
  425b4c:	xchg   esp,eax
  425b4d:	jmp    0x425ba2
  425b4f:	sbb    al,0xf1
  425b51:	jbe    0x425bc2
  425b53:	icebp  
  425b54:	xchg   ecx,eax
  425b55:	test   al,0xc0
  425b57:	mov    cl,0x0
  425b59:	fist   DWORD PTR [esi+0xd56609]
  425b5f:	add    BYTE PTR [ecx+0x56],dl
  425b62:	or     ebp,DWORD PTR [edx-0x6d]
  425b65:	push   cs
  425b66:	dec    edi
  425b67:	aaa    
  425b68:	jb     0x425b69
  425b6a:	adc    edi,edi
  425b6c:	push   ss
  425b6d:	or     bh,BYTE PTR [edi-0x5b]
  425b70:	mov    ebp,0xac3cc08e
  425b75:	das    
  425b76:	adc    al,0x19
  425b78:	sbb    edx,DWORD PTR [ecx+0x49d0d115]
  425b7e:	add    BYTE PTR [edx-0x6b],ch
  425b81:	push   es
  425b82:	push   ebx
  425b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b84:	in     al,0xb5
  425b86:	push   cs
  425b87:	sub    ecx,edx
  425b89:	xchg   BYTE PTR [ebp-0x47],dh
  425b8c:	popa   
  425b8d:	adc    eax,0x8d328e1c
  425b92:	jne    0x425b21
  425b94:	cmp    cl,BYTE PTR [edi-0xc]
  425b97:	ins    BYTE PTR es:[edi],dx
  425b98:	aad    0xd7
  425b9a:	cmp    BYTE PTR [eiz*1+0x33957e01],ch
  425ba1:	xchg   ecx,eax
  425ba2:	sti    
  425ba3:	push   edx
  425ba4:	adc    ch,BYTE PTR [eax+eax*1]
  425ba7:	pop    esi
  425ba8:	add    al,0xa6
  425baa:	lea    ebp,[esi+eiz*1-0x192b04c6]
  425bb1:	mov    eax,ds:0x917a0d31
  425bb6:	mov    BYTE PTR [edi+edi*2+0x3bc00d6],ah
  425bbd:	mov    WORD PTR [ebp-0x1f],?
  425bc0:	popf   
  425bc1:	sbb    BYTE PTR [eax],bl
  425bc3:	mov    edi,0xff3b0000
  425bc8:	xlat   BYTE PTR ds:[ebx]
  425bc9:	sti    
  425bca:	xchg   esi,eax
  425bcb:	or     DWORD PTR [esi-0x3],esp
  425bce:	push   edi
  425bcf:	push   ebp
  425bd0:	or     edi,DWORD PTR [edx+0x4c957]
  425bd6:	push   ebx
  425bd7:	ins    BYTE PTR es:[edi],dx
  425bd8:	adc    eax,0x490210
  425bdd:	xor    DWORD PTR [eax+0x1ff5191],0xffffffcd
  425be4:	or     al,BYTE PTR [eax-0x44]
  425be7:	adc    DWORD PTR [ebp-0x30],esi
  425bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425beb:	mov    al,0x17
  425bed:	jmp    FWORD PTR [ebx-0x6b178a95]
  425bf3:	lahf   
  425bf4:	mov    dl,0xfe
  425bf6:	fwait
  425bf7:	adc    al,BYTE PTR [ebp-0x5]
  425bfa:	retf   
  425bfb:	dec    ebx
  425bfc:	push   ebx
  425bfd:	leave  
  425bfe:	outs   dx,BYTE PTR ds:[esi]
  425bff:	pushf  
  425c00:	sti    
  425c01:	push   esp
  425c02:	aaa    
  425c03:	jge    0x425c80
  425c05:	in     al,dx
  425c06:	nop
  425c07:	xchg   DWORD PTR [ebp-0xc],esp
  425c0a:	jl     0x425c4f
  425c0c:	cmp    DWORD PTR [esi+0x70],0xffffff89
  425c10:	test   DWORD PTR [edi],0x811a
  425c16:	jl     0x425b9f
  425c18:	gs clc 
  425c1a:	jl     0x425c53
  425c1c:	bound  edi,QWORD PTR [eax]
  425c1e:	(bad)  
  425c1f:	push   esp
  425c20:	inc    ebp
  425c21:	lock ins DWORD PTR es:[edi],dx
  425c23:	or     BYTE PTR [eax],al
  425c25:	add    ch,al
  425c27:	inc    ecx
  425c28:	in     al,dx
  425c29:	mov    eax,DWORD PTR [eax]
  425c2b:	add    BYTE PTR [edx],dh
  425c2d:	pop    es
  425c2e:	inc    ebp
  425c2f:	clc    
  425c30:	xchg   esp,eax
  425c31:	fld    DWORD PTR [eax+eax*1]
  425c34:	sub    al,0x14
  425c36:	shl    BYTE PTR [ebp+0x34],0xf
  425c3a:	inc    ebp
  425c3b:	hlt    
  425c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c3d:	pop    esi
  425c3e:	call   0x4a8cde
  425c43:	(bad)  
  425c44:	cmp    DWORD PTR [edi+esi*8+0x4d],esp
  425c48:	in     al,dx
  425c49:	mov    ch,0x5c
  425c4b:	in     al,dx
  425c4c:	and    eax,0xd5ebf841
  425c51:	arpl   WORD PTR [esi+0x45],si
  425c54:	add    eax,0xaefc4029
  425c59:	jecxz  0x425c82
  425c5b:	cmp    eax,0x8793155e
  425c60:	(bad)  [edi]
  425c62:	cmp    al,bh
  425c64:	dec    eax
  425c65:	jbe    0x425c6b
  425c67:	or     BYTE PTR [edi],bh
  425c69:	xchg   ebp,eax
  425c6a:	dec    esi
  425c6b:	lea    edx,[ecx]
  425c6d:	lods   al,BYTE PTR ds:[esi]
  425c6e:	test   DWORD PTR [edi-0x3e],0x15120b96
  425c75:	mov    eax,ds:0x25e1c480
  425c7a:	les    esi,FWORD PTR [ebp-0x26]
  425c7d:	pop    ss
  425c7e:	cmp    edi,esp
  425c80:	dec    esi
  425c81:	imul   ebx,DWORD PTR [eax+ebx*2-0x5005f2f],0x20
  425c89:	ins    DWORD PTR es:[edi],dx
  425c8a:	fdecstp 
  425c8c:	mov    ch,dh
  425c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8f:	xchg   DWORD PTR [eax],eax
  425c91:	add    BYTE PTR [eax],bl
  425c93:	jge    0x425c96
  425c95:	idiv   DWORD PTR [esi-0x64840016]
  425c9b:	mov    WORD PTR [ebx],?
  425c9d:	hlt    
  425c9e:	pop    esi
  425c9f:	xchg   ebx,eax
  425ca0:	sti    
  425ca1:	cli    
  425ca2:	sbb    BYTE PTR [ecx],dl
  425ca4:	call   FWORD PTR [ecx+ebp*2-0x5e]
  425ca8:	inc    edx
  425ca9:	clc    
  425caa:	or     al,0xae
  425cac:	stos   DWORD PTR es:[edi],eax
  425cad:	or     ebx,DWORD PTR [ecx-0x58]
  425cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cb1:	sti    
  425cb2:	inc    edx
  425cb3:	pop    eax
  425cb4:	inc    esp
  425cb5:	leave  
  425cb6:	push   ss
  425cb7:	pop    ebx
  425cb8:	js     0x425caa
  425cba:	pop    esi
  425cbb:	in     al,0x9b
  425cbd:	in     al,dx
  425cbe:	shl    DWORD PTR [eax+0x551583ff],1
  425cc4:	add    al,0x8d
  425cc6:	xchg   edx,eax
  425cc7:	test   al,0x4f
  425cc9:	call   0x42f6706
  425cce:	aad    0x8c
  425cd0:	sub    DWORD PTR [ebx],ebp
  425cd2:	sar    DWORD PTR [esi+0x2a],cl
  425cd5:	jns    0x425ce6
  425cd7:	mov    ds:0x9d502c3,al
  425cdc:	ins    DWORD PTR es:[edi],dx
  425cdd:	les    esp,FWORD PTR [eax+0xc]
  425ce0:	mov    dh,0xc3
  425ce2:	xchg   ebp,eax
  425ce3:	xor    esp,DWORD PTR [esi]
  425ce5:	icebp  
  425ce6:	sbb    dh,BYTE PTR [esi+eiz*1]
  425ce9:	dec    edi
  425cea:	pop    edx
  425ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cec:	cmp    BYTE PTR [ecx+0x27],dl
  425cef:	cmp    ebp,DWORD PTR [esi+edi*1-0x3f]
  425cf3:	cmp    DWORD PTR [ecx-0x72],eax
  425cf6:	add    BYTE PTR [eax],al
  425cf8:	aad    0x9
  425cfa:	jmp    0xc351f99a
  425cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d00:	push   edx
  425d01:	xchg   ecx,eax
  425d02:	imul   BYTE PTR [ebp+0xd3d93ea]
  425d08:	push   edx
  425d09:	dec    esp
  425d0a:	lods   eax,DWORD PTR ds:[esi]
  425d0b:	sbb    ebp,ecx
  425d0d:	(bad)  
  425d0e:	mov    dh,0x4a
  425d10:	xchg   BYTE PTR [eax+0x108cdde],bl
  425d16:	shl    BYTE PTR [esi],1
  425d18:	jns    0x425d31
  425d1a:	in     eax,0x78
  425d1c:	lea    ebx,[esi-0x382b312]
  425d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d24:	pop    esi
  425d25:	jle    0x425d3b
  425d27:	test   al,0xaa
  425d29:	xchg   edx,eax
  425d2a:	scas   al,BYTE PTR es:[edi]
  425d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d2c:	leave  
  425d2d:	shl    BYTE PTR [ebp-0x58],1
  425d30:	aam    0x15
  425d32:	adc    eax,0x49a1cd1a
  425d37:	push   0x3f
  425d39:	xchg   edx,eax
  425d3a:	push   cs
  425d3b:	mov    esi,0xf3700aa9
  425d40:	pop    ebp
  425d41:	sbb    ebp,esp
  425d43:	js     0x425d6a
  425d45:	mov    WORD PTR [eax],es
  425d47:	aas    
  425d48:	jmp    0x42f:0x8fef88ef
  425d4f:	adc    DWORD PTR [eax-0x71],edi
  425d52:	sti    
  425d53:	push   ds
  425d54:	push   ebp
  425d55:	(bad)  
  425d57:	call   0xd83d690f
  425d5c:	add    BYTE PTR [eax],al
  425d5e:	dec    esi
  425d5f:	mov    ebx,0x373107b9
  425d64:	out    0xe4,eax
  425d66:	pop    ebp
  425d67:	(bad)  
  425d68:	out    0xe1,eax
  425d6a:	mov    DWORD PTR [ecx-0x6a87cf33],esp
  425d70:	das    
  425d71:	test   eax,0xb0573416
  425d76:	call   0x5341:0xc58737
  425d7d:	sbb    dh,BYTE PTR [esi-0x1f]
  425d80:	(bad)  
  425d81:	jo     0x425d77
  425d83:	lea    edi,[ecx]
  425d85:	aas    
  425d86:	int    0x13
  425d88:	sub    eax,0xc290cf62
  425d8d:	inc    edi
  425d8e:	pop    edx
  425d8f:	adc    ah,BYTE PTR [eax]
  425d91:	jmp    0xe5a85082
  425d96:	pop    ebx
  425d97:	retf   0x391c
  425d9a:	ss pop ss
  425d9c:	or     BYTE PTR [esi+0x2911fd6c],cl
  425da2:	rcl    DWORD PTR [eax],1
  425da4:	(bad)  
  425da5:	in     eax,dx
  425da6:	dec    ebp
  425da7:	retf   0xea75
  425daa:	aaa    
  425dab:	inc    edi
  425dac:	cld    
  425dad:	sub    bl,BYTE PTR [edx-0x33]
  425db0:	cmp    BYTE PTR [edx],ah
  425db2:	xchg   edi,eax
  425db3:	add    eax,0x47523a7c
  425db8:	cld    
  425db9:	mov    dh,0xfb
  425dbb:	ret    0xe5be
  425dbe:	(bad)  
  425dbf:	xchg   DWORD PTR ss:[eax],eax
  425dc2:	add    BYTE PTR [eax],al
  425dc4:	adc    dh,0x4a
  425dc7:	push   edi
  425dc8:	pop    ds
  425dc9:	ins    BYTE PTR es:[edi],dx
  425dca:	sub    ebx,ebx
  425dcc:	mov    ch,0xea
  425dce:	sti    
  425dcf:	cmp    DWORD PTR [edx+0x9],eax
  425dd2:	jbe    0x425e01
  425dd4:	xchg   DWORD PTR [ebx],eax
  425dd6:	sti    
  425dd7:	(bad)  
  425dd8:	pop    edx
  425dd9:	mov    BYTE PTR [eax+0x34],bh
  425ddc:	in     al,dx
  425ddd:	repnz sbb BYTE PTR [edx-0x14],ch
  425de1:	xchg   eax,eax
  425de3:	and    al,0x4c
  425de5:	ins    BYTE PTR es:[edi],dx
  425de6:	jne    0x425df0
  425de8:	jecxz  0x425d7b
  425dea:	movhps xmm5,QWORD PTR [ecx*1-0x7e4f3b85]
  425df2:	shl    BYTE PTR [ebp-0x41],0x6b
  425df6:	inc    ebp
  425df7:	cld    
  425df8:	out    dx,eax
  425df9:	mov    BYTE PTR [edi+0x44be738],bh
  425dff:	jl     0x425e70
  425e01:	jg     0x425e48
  425e03:	cld    
  425e04:	repz ror al,1
  425e07:	ret    0xcb8
  425e0a:	dec    esi
  425e0b:	push   edi
  425e0c:	aaa    
  425e0d:	jne    0x425d9c
  425e0f:	inc    edi
  425e10:	mov    al,ds:0x6450f17f
  425e15:	in     eax,0xf6
  425e17:	jmp    DWORD PTR [ebx-0x79]
  425e1a:	clc    
  425e1b:	add    ah,cl
  425e1d:	xchg   edi,eax
  425e1e:	jp     0x425de7
  425e20:	cwde   
  425e21:	shl    edi,cl
  425e23:	fwait
  425e24:	push   ebx
  425e25:	imul   esi,edi,0xffffff83
  425e28:	add    BYTE PTR [eax],al
  425e2a:	push   esp
  425e2b:	push   es
  425e2c:	jge    0x425e32
  425e2e:	pop    ds
  425e2f:	int3   
  425e30:	jecxz  0x425e35
  425e32:	(bad)  
  425e33:	int3   
  425e34:	inc    eax
  425e35:	pop    edi
  425e36:	adc    al,bh
  425e38:	add    DWORD PTR [eax+ebx*8-0x3],0xffffff82
  425e3d:	dec    esp
  425e3e:	aad    0xfe
  425e40:	ja     0x49cd04db
  425e46:	ror    DWORD PTR [ebx],1
  425e48:	lds    esi,FWORD PTR [ebp-0x2a]
  425e4b:	xchg   ebx,eax
  425e4c:	mov    edi,0x81e2bebf
  425e51:	loopne 0x425e66
  425e53:	(bad)
  425e58:	mov    ebp,0x2da29738
  425e5d:	cmp    dl,bh
  425e5f:	jno    0x425e64
  425e61:	sti    
  425e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e63:	or     ah,BYTE PTR [esi]
  425e65:	(bad)
  425e68:	add    ah,0xc9
  425e6b:	jecxz  0x425df6
  425e6d:	inc    esp
  425e6e:	mov    cl,0xa6
  425e70:	mov    cl,BYTE PTR [ecx+edi*8-0x58]
  425e74:	cmp    DWORD PTR [edi-0x4f402bf],eax
  425e7a:	or     esp,DWORD PTR [esp+eax*8]
  425e7d:	or     BYTE PTR ds:0xbd08bf24,ah
  425e83:	ds add eax,0x1e20d500
  425e89:	add    al,0xd5
  425e8b:	out    dx,al
  425e8c:	adc    bh,dh
  425e8e:	add    BYTE PTR [eax],al
  425e90:	mov    ds:0x5e55c579,eax
  425e95:	dec    ebp
  425e96:	test   esp,ebp
  425e98:	in     eax,0xce
  425e9a:	mov    eax,?
  425e9c:	dec    esi
  425e9d:	fild   WORD PTR [edi]
  425e9f:	push   ebx
  425ea0:	dec    esi
  425ea1:	test   BYTE PTR [ebx],0xff
  425ea4:	and    esp,DWORD PTR [ebp+0x78adc92c]
  425eaa:	mov    bl,0xb3
  425eac:	arpl   WORD PTR [eax],dx
  425eae:	mov    al,al
  425eb0:	retf   0x731c
  425eb3:	add    ch,dl
  425eb5:	mov    al,ds:0x9d1428c
  425eba:	mov    dh,0xd4
  425ebc:	sub    eax,DWORD PTR [ecx+0x2d4c93a4]
  425ec2:	pop    ebp
  425ec3:	fisttp DWORD PTR [edi+0x5c19cb05]
  425ec9:	sub    eax,0xdc23ad41
  425ece:	sbb    eax,0xb40ade8d
  425ed3:	fwait
  425ed4:	pop    esp
  425ed5:	sub    eax,0x99a9db2d
  425eda:	mov    ds:0x6c085beb,eax
  425edf:	dec    eax
  425ee0:	cli    
  425ee1:	push   es
  425ee2:	jg     0x425edb
  425ee4:	mov    ds:0x850ba27c,al
  425ee9:	mov    ds,esp
  425eeb:	test   esp,0x1184e949
  425ef1:	(bad)  
  425ef2:	imul   eax,esp,0x0
  425ef5:	add    BYTE PTR [ecx+0x2e],cl
  425ef8:	jmp    0x42a0:0x2c82c946
  425eff:	retf   
  425f00:	and    ebp,ebx
  425f02:	adc    DWORD PTR [edx-0x39a543ab],ebx
  425f08:	pop    esi
  425f09:	sar    DWORD PTR [ebp-0x615f3df6],1
  425f0f:	test   DWORD PTR [ecx+0x2382c216],ebp
  425f15:	or     BYTE PTR [edx-0x38],bl
  425f18:	ds (bad) 
  425f1a:	int    0xa
  425f1c:	jmp    0x425f4b
  425f1e:	mov    ebp,0x4c343248
  425f23:	aas    
  425f24:	in     eax,dx
  425f25:	mov    al,ds:0x43f2f9c8
  425f2a:	aad    0x8a
  425f2c:	lods   eax,DWORD PTR ds:[esi]
  425f2d:	divps  xmm0,XMMWORD PTR [ebp+esi*2-0x74]
  425f32:	fadd   DWORD PTR [ecx]
  425f34:	add    BYTE PTR [edx-0x65],ah
  425f37:	xchg   ebp,eax
  425f38:	jg     0x425f5e
  425f3a:	imul   edx,ecx,0xddaae36
  425f40:	mov    esi,DWORD PTR [edx-0x5c]
  425f43:	add    eax,0xa60e2067
  425f48:	aaa    
  425f49:	xchg   esi,eax
  425f4a:	je     0x425ede
  425f4c:	mov    al,0xe8
  425f4e:	loope  0x425f82
  425f50:	pop    edx
  425f51:	xor    BYTE PTR [eax],dl
  425f53:	add    eax,0x8d9b6200
  425f58:	test   DWORD PTR [ecx],ebp
  425f5a:	add    BYTE PTR [eax],al
  425f5c:	out    dx,al
  425f5d:	data16 jmpw 0x11e
  425f62:	test   al,0xe9
  425f64:	(bad)  
  425f65:	or     edi,esp
  425f67:	and    BYTE PTR [esi+0xd],dl
  425f6a:	and    al,0xe5
  425f6c:	(bad)  
  425f6d:	cmp    edx,DWORD PTR [ebx+0x72]
  425f70:	ds xchg cl,dh
  425f73:	jne    0x425f43
  425f75:	mov    eax,ds:0x9174947d
  425f7a:	mov    DWORD PTR [esi-0x2e3d7b2e],esp
  425f80:	sbb    cl,BYTE PTR [edi-0x35b22105]
  425f86:	jne    0x425f75
  425f88:	test   BYTE PTR [ebp-0x19],cl
  425f8b:	cld    
  425f8c:	pop    edi
  425f8d:	inc    eax
  425f8e:	add    al,0x28
  425f90:	out    dx,al
  425f91:	ret    0xd138
  425f94:	inc    eax
  425f95:	pop    eax
  425f96:	cli    
  425f97:	mov    dh,0x5d
  425f99:	retf   0xbd74
  425f9c:	pop    esi
  425f9d:	inc    eax
  425f9e:	add    al,0x72
  425fa0:	cwde   
  425fa1:	and    eax,0x7d7e1c0
  425fa6:	rcr    WORD PTR [ecx],1
  425fa9:	cmp    DWORD PTR [eax+0x60],edx
  425fac:	sbb    eax,DWORD PTR [esi]
  425fae:	sti    
  425faf:	add    BYTE PTR [ecx+0x6c401199],al
  425fb5:	mov    ah,al
  425fb7:	or     al,0xc
  425fb9:	pop    es
  425fba:	push   edi
  425fbb:	pop    esi
  425fbc:	jle    0x425fc0
  425fbe:	add    BYTE PTR [ebp+0x0],dl
  425fc1:	add    bh,al
  425fc3:	pop    ecx
  425fc4:	jnp    0x425fb2
  425fc6:	ins    BYTE PTR es:[edi],dx
  425fc7:	xlat   BYTE PTR ds:[ebx]
  425fc8:	mov    WORD PTR [ebp+0x0],?
  425fcb:	pop    esi
  425fcc:	mov    WORD PTR [ebx],es
  425fce:	cmp    al,0x9
  425fd0:	or     DWORD PTR [ebp+0x24],0xffffffe3
  425fd4:	add    BYTE PTR [ebx-0x78a20e],cl
  425fda:	retf   
  425fdb:	ins    BYTE PTR es:[edi],dx
  425fdc:	push   esi
  425fdd:	leave  
  425fde:	mov    esi,0x43560001
  425fe3:	cmp    al,0x8b
  425fe6:	fstp   QWORD PTR [ebp+0x6]
  425fe9:	pop    ebp
  425fea:	retf   0x896c
  425fed:	inc    edi
  425fee:	lock jg 0x425fac
  425ff1:	call   0x39c9aa
  425ff6:	jo     0x425fbd
  425ff8:	je     0x42600e
  425ffa:	push   edi
  425ffb:	jbe    0x426035
  425ffd:	add    ecx,DWORD PTR [edi+0x25737e2]
  426003:	ins    DWORD PTR es:[edi],dx
  426004:	adc    eax,0x48c210
  426009:	add    DWORD PTR [eax-0x4fe5004],0xffffffcb
  426010:	mov    edx,0x515d2755
  426015:	mov    ebp,ecx
  426017:	std    
  426018:	(bad)  
  426019:	rol    BYTE PTR [edi+eax*1-0x140099ff],0x1f
  426021:	add    BYTE PTR [edi+0xd882d3],bh
  426027:	add    BYTE PTR [edx],dh
  426029:	inc    ecx
  42602a:	test   DWORD PTR [eax],0x6639eed5
  426030:	shr    DWORD PTR ds:0xdf501c12,1
  426036:	call   DWORD PTR [ecx+0x5]
  426039:	or     al,0xf8
  42603b:	adc    ebp,ebx
  42603d:	loop   0x426042
  42603f:	jg     0x426052
  426041:	scas   al,BYTE PTR es:[edi]
  426042:	mov    al,al
  426044:	leave  
  426045:	repz xor DWORD PTR [edi+0x3ca79ac0],eax
  42604c:	xor    BYTE PTR [ebx],dh
  42604e:	call   0x159d:0xaa02d7f
  426055:	push   ds
  426056:	mov    edi,0x490ae175
  42605b:	or     al,0x88
  42605d:	scas   eax,DWORD PTR es:[edi]
  42605e:	sub    DWORD PTR [eax+ebx*2],eax
  426061:	arpl   bx,di
  426063:	dec    edi
  426064:	push   eax
  426065:	pop    edi
  426066:	sti    
  426067:	dec    edi
  426068:	cli    
  426069:	xchg   esp,eax
  42606a:	out    dx,eax
  42606b:	adc    DWORD PTR [ebp-0x263b815e],edx
  426071:	in     al,0x47
  426073:	sti    
  426074:	aam    0x93
  426076:	push   edx
  426077:	inc    ebx
  426078:	mov    ch,0x84
  42607a:	fdivr  QWORD PTR [esi]
  42607c:	cmc    
  42607d:	or     al,0xd
  42607f:	or     BYTE PTR [eax-0x53],0xff
  426083:	je     0x42605e
  426085:	cmp    al,BYTE PTR [edi+0x4362f53f]
  42608b:	sti    
  42608c:	add    BYTE PTR [eax],al
  42608e:	aam    0x3a
  426090:	cmp    DWORD PTR [ebx-0x1f],0x2f5a13a0
  426097:	mov    cl,0x8a
  426099:	jae    0x42608c
  42609b:	sbb    eax,0xf12b2441
  4260a0:	pushf  
  4260a1:	adc    eax,0x3fb2e1
  4260a6:	push   esi
  4260a7:	or     ch,BYTE PTR [ebp+0x15ca5010]
  4260ad:	in     eax,dx
  4260ae:	add    al,0x7f
  4260b0:	sbb    al,0xc
  4260b2:	jge    0x42609f
  4260b4:	mov    ebx,DWORD PTR [ebp+0x281875e]
  4260ba:	into   
  4260bb:	ins    BYTE PTR es:[edi],dx
  4260bc:	test   eax,0xbd151588
  4260c1:	fist   DWORD PTR [ecx-0x470f0c03]
  4260c7:	stc    
  4260c8:	jae    0x42610f
  4260ca:	icebp  
  4260cb:	cmp    DWORD PTR [ecx+eax*2-0x7],ebp
  4260cf:	cmp    DWORD PTR [edx-0x9],edx
  4260d2:	(bad)  
  4260d4:	test   al,0x3
  4260d6:	mov    ds:0x90c5f5c5,al
  4260db:	mov    ch,al
  4260dd:	or     al,0x46
  4260df:	inc    ebx
  4260e0:	std    
  4260e1:	and    eax,0x17f546cc
  4260e6:	iret   
  4260e7:	mov    DWORD PTR [edi+ecx*1+0x25e514d5],esp
  4260ee:	pop    esp
  4260ef:	inc    edi
  4260f0:	ffree  st(5)
  4260f2:	add    BYTE PTR [eax],al
  4260f4:	nop
  4260f5:	mov    ch,al
  4260f7:	mov    DWORD PTR [eax+0xc38a38a],ebx
  4260fd:	enter  0x3f1,0x3a
  426101:	retf   0x35b1
  426104:	push   edx
  426105:	cwde   
  426106:	pop    esi
  426107:	push   cs
  426108:	push   eax
  426109:	cmc    
  42610a:	out    0x88,eax
  42610c:	pop    ss
  42610d:	push   es
  42610e:	dec    esi
  42610f:	(bad)  
  426110:	in     eax,dx
  426111:	push   es
  426112:	test   al,0xd8
  426114:	test   DWORD PTR [edi],edx
  426116:	fimul  WORD PTR [esi-0x53e92de5]
  42611c:	adc    al,0x53
  42611e:	mov    ebx,0x77a9c
  426123:	sti    
  426124:	xchg   esi,eax
  426125:	test   eax,eax
  426127:	xor    eax,0xed4a8ed3
  42612c:	dec    ebp
  42612d:	aas    
  42612e:	add    al,0x12
  426130:	sahf   
  426131:	shl    edi,1
  426133:	aaa    
  426134:	add    dl,BYTE PTR [eax+0x34942ffb]
  42613a:	xchg   DWORD PTR [ebp+0x6a083c4d],edx
  426140:	and    cl,0x4e
  426143:	push   ds
  426144:	pop    edx
  426145:	xor    al,0xd8
  426147:	and    DWORD PTR [ecx+ecx*1-0x4cda1700],0xfdabf39
  426152:	das    
  426153:	sbb    cl,BYTE PTR [eax-0x7e]
  426156:	add    ah,BYTE PTR [edx+0x0]
  426159:	add    BYTE PTR [ebx-0x2e5272ff],dl
  42615f:	add    DWORD PTR [ebp-0x675ebd6c],ecx
  426165:	jmp    0xd5a86b40
  42616a:	push   ebx
  42616b:	inc    esp
  42616c:	in     al,dx
  42616d:	mov    ecx,0xb9d8444b
  426172:	push   ecx
  426173:	hlt    
  426174:	adc    edi,edi
  426176:	xchg   esi,eax
  426177:	or     DWORD PTR [edi+0x25],edi
  42617a:	rol    BYTE PTR [eax+eax*8+0x7ecae481],cl
  426181:	es scas al,BYTE PTR es:[edi]
  426183:	inc    eax
  426184:	pop    edx
  426185:	in     eax,dx
  426186:	jmp    0x56e5:0x61217f54
  42618d:	mov    al,0x93
  42618f:	push   cs
  426190:	add    BYTE PTR [edx-0x66],dh
  426193:	jno    0x426187
  426195:	cmp    al,BYTE PTR [edx-0x20efaca0]
  42619b:	or     eax,0x60c9007a
  4261a0:	test   BYTE PTR [ebx-0x72ebc886],0xb8
  4261a7:	or     al,0x8
  4261a9:	push   eax
  4261aa:	xor    ebx,DWORD PTR [edx]
  4261ac:	and    al,0x14
  4261ae:	xor    edi,DWORD PTR [ebx+0xf]
  4261b1:	push   ss
  4261b2:	mov    esp,0x70c47b0d
  4261b7:	mov    al,al
  4261b9:	je     0x426218
  4261bb:	sar    BYTE PTR [edx-0x39],1
  4261be:	add    BYTE PTR [eax],al
  4261c0:	xchg   esp,eax
  4261c1:	push   0xc2500459
  4261c6:	jnp    0x426190
  4261c8:	ret    
  4261c9:	inc    esp
  4261ca:	push   ebx
  4261cb:	ret    0xd38
  4261ce:	add    ebx,0xffffffa7
  4261d1:	pushf  
  4261d2:	sub    edx,edx
  4261d4:	cmc    
  4261d5:	cmp    eax,0x2bdb7404
  4261da:	cmp    DWORD PTR [eax-0x34],edx
  4261dd:	sbb    bh,dh
  4261df:	gs aad 0x3d
  4261e2:	xor    al,0x74
  4261e4:	neg    DWORD PTR [esi-0x38]
  4261e7:	push   esi
  4261e8:	jl     0x426190
  4261ea:	adc    al,0x73
  4261ec:	and    dl,BYTE PTR [esi+ebp*4]
  4261ef:	icebp  
  4261f0:	mov    dl,0x4e
  4261f2:	cmp    BYTE PTR [edx+edi*8+0x14],dl
  4261f6:	je     0x4261e8
  4261f8:	jl     0x4261a0
  4261fa:	adc    al,0xf
  4261fc:	imul   ecx,DWORD PTR [ebp+0x56],0xbb4d1ec3
  426203:	push   esi
  426204:	imul   edx,DWORD PTR [edi+0x77a86aea],0xffffffc3
  42620b:	sub    edi,DWORD PTR [ebx+eax*2+0x5ead1482]
  426212:	or     ecx,DWORD PTR [eax+0x4f400aa8]
  426218:	aad    0xe5
  42621a:	(bad)  
  42621b:	pop    ebx
  42621c:	add    esi,DWORD PTR [eax+esi*1+0x3ffba987]
  426223:	or     al,0x0
  426225:	add    BYTE PTR [esi+0x56],dl
  426228:	out    0x8c,eax
  42622a:	and    BYTE PTR [ebx-0x487d2a59],bl
  426230:	xchg   esi,eax
  426231:	xchg   DWORD PTR [eax],edx
  426233:	jg     0x4261bf
  426235:	dec    ebp
  426236:	(bad)  
  426238:	das    
  426239:	in     al,dx
  42623a:	jge    0x4261f3
  42623c:	xchg   esi,eax
  42623d:	sti    
  42623e:	bound  ecx,QWORD PTR [eax+esi*8]
  426241:	mov    WORD PTR [eax],ss
  426243:	lahf   
  426244:	das    
  426245:	lea    ebx,[eax-0x1f04d056]
  42624b:	data16 icebp 
  42624d:	aas    
  42624e:	aad    0xf3
  426250:	mov    edx,0x7340c0c
  426255:	add    BYTE PTR [eax+0x3981a2fb],cl
  42625b:	(bad)  
  42625c:	add    eax,DWORD PTR [eax]
  42625e:	aad    0xc0
  426260:	lea    esp,cs:[eax+0x6e]
  426264:	cdq    
  426265:	sti    
  426266:	adc    bl,dl
  426268:	lea    ebp,[ecx]
  42626a:	or     bh,BYTE PTR [edi]
  42626c:	sar    BYTE PTR [edi-0xbf01a6b],cl
  426272:	in     eax,dx
  426273:	jb     0x426219
  426275:	cli    
  426276:	repnz hlt 
  426278:	jg     0x42629a
  42627a:	jmp    0x42629a
  42627c:	xchg   esi,eax
  42627d:	push   eax
  42627e:	loop   0x4262fc
  426280:	ja     0x426290
  426282:	xchg   ebp,eax
  426283:	jb     0x426287
  426285:	shl    BYTE PTR ds:0x207ff6,0x0
  42628c:	retf   
  42628d:	sbb    BYTE PTR [ecx-0x58d0b1b0],0x5e
  426294:	mov    ah,0xa
  426296:	jecxz  0x426231
  426298:	outs   dx,BYTE PTR ds:[esi]
  426299:	jb     0x42624e
  42629b:	inc    ebp
  42629c:	aad    0x8d
  42629e:	test   eax,0xf8f3e710
  4262a3:	xchg   BYTE PTR [eax-0x5a],dl
  4262a6:	ret    
  4262a7:	cdq    
  4262a8:	mov    ds,edx
  4262aa:	ins    DWORD PTR es:[edi],dx
  4262ab:	ret    0xd17d
  4262ae:	(bad)  
  4262af:	call   0x92db:0x10a98e7e
  4262b6:	stos   DWORD PTR es:[edi],eax
  4262b7:	lods   al,BYTE PTR ds:[esi]
  4262b8:	jne    0x426323
  4262ba:	fwait
  4262bb:	cdq    
  4262bc:	push   ecx
  4262bd:	dec    edx
  4262be:	sbb    eax,0x81505bf1
  4262c3:	push   cs
  4262c4:	je     0x42624e
  4262c6:	add    BYTE PTR [edi-0x6684d9a8],0x4e
  4262cd:	fiadd  DWORD PTR [eax+0x6a86fa75]
  4262d3:	push   esp
  4262d4:	aam    0x72
  4262d6:	sbb    eax,0xe8f3c92e
  4262db:	xor    BYTE PTR [esi],ch
  4262dd:	sbb    eax,0x9e2f1f1
  4262e2:	mov    edi,0x658d49f3
  4262e7:	call   0x1d0e:0x3099870e
  4262ee:	fyl2x  
  4262f0:	add    BYTE PTR [eax],al
  4262f2:	ret    0x6609
  4262f5:	rcr    ch,0x94
  4262f8:	lods   al,BYTE PTR ds:[esi]
  4262f9:	(bad)  
  4262fa:	std    
  4262fb:	pop    ebp
  4262fc:	or     DWORD PTR [edx-0x7936b12],ebx
  426302:	fadd   QWORD PTR [esi-0x1b12cbf6]
  426308:	int    0x98
  42630a:	into   
  42630b:	cmp    ebp,DWORD PTR [ecx]
  42630d:	cmp    DWORD PTR [edi],ebp
  42630f:	push   ecx
  426310:	add    BYTE PTR [edx],ch
  426312:	pop    ecx
  426313:	inc    esp
  426314:	clc    
  426315:	daa    
  426316:	adc    BYTE PTR [edx],cl
  426318:	add    BYTE PTR [edx+eiz*4-0x28],bl
  42631c:	mov    ecx,0x4695f9
  426321:	aas    
  426322:	cmp    al,0x1c
  426324:	fdivr  st,st(3)
  426326:	push   ss
  426327:	or     al,BYTE PTR [eax+0x3f4b7104]
  42632d:	jmp    0xc1556008
  426332:	je     0x4262b7
  426334:	sti    
  426335:	scas   al,BYTE PTR es:[edi]
  426336:	cli    
  426337:	dec    ecx
  426338:	je     0x426331
  42633a:	pop    ecx
  42633b:	sub    al,0xfc
  42633d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42633e:	adc    DWORD PTR [edx],ecx
  426340:	add    BYTE PTR [edi+0x2ac27e63],ch
  426346:	ror    DWORD PTR [eax],1
  426348:	push   edx
  426349:	xchg   BYTE PTR [ebx+0x62],al
  42634c:	push   cs
  42634d:	sub    ecx,edx
  42634f:	jecxz  0x426308
  426351:	add    DWORD PTR [esi+eax*2+0xaa00],0x9ce81de8
  42635c:	dec    ebp
  42635d:	cmp    bl,0xb9
  426360:	dec    ebp
  426361:	std    
  426362:	and    esp,ebp
  426364:	cmp    eax,0x96f7141c
  426369:	or     DWORD PTR [edi+0x2d],edi
  42636c:	fidivr DWORD PTR [edx-0x28]
  42636f:	loop   0x426387
  426371:	leave  
  426372:	mov    ebp,0x86d6d6ed
  426377:	int3   
  426378:	push   es
  426379:	sbb    BYTE PTR [eax-0x17],al
  42637c:	or     esi,eax
  42637e:	push   ebp
  42637f:	xchg   DWORD PTR [edi-0x35],ebx
  426382:	sbb    eax,0x31cb4f8f
  426387:	sub    edx,0xffffff94
  42638a:	inc    ebx
  42638b:	add    BYTE PTR [ebp-0x3bb972c7],bh
  426391:	pop    esi
  426392:	in     al,dx
  426393:	push   eax
  426394:	xor    eax,0xb06e8873
  426399:	mov    ds:0x128083cb,al
  42639e:	bound  eax,QWORD PTR [edx+edx*1]
  4263a1:	sbb    WORD PTR [bx+si],ax
  4263a5:	adc    cl,BYTE PTR [ebp-0x72c65eb9]
  4263ab:	inc    esi
  4263ac:	js     0x4263e7
  4263ae:	not    ebx
  4263b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263b1:	adc    DWORD PTR [ebp+0x503aa846],ecx
  4263b7:	jmp    DWORD PTR [ecx+0x401181]
  4263bd:	add    BYTE PTR [edi+eiz*1-0x7d],bh
  4263c1:	inc    edi
  4263c2:	aad    0x88
  4263c4:	les    ecx,FWORD PTR [edx+edx*8]
  4263c7:	xchg   esi,eax
  4263c8:	and    BYTE PTR ds:[edx-0x7b],al
  4263cc:	std    
  4263cd:	jae    0x426406
  4263cf:	daa    
  4263d0:	cmp    DWORD PTR [edi+0x27],ebp
  4263d3:	adc    eax,0x921c6a15
  4263d8:	aas    
  4263d9:	sbb    ebx,esp
  4263db:	xchg   edx,eax
  4263dc:	ds and al,0x6c
  4263df:	pushf  
  4263e0:	retf   
  4263e1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4263e3:	inc    esp
  4263e4:	and    eax,DWORD PTR [ebx+0x12e311f0]
  4263ea:	push   ss
  4263eb:	jns    0x426379
  4263ed:	inc    esi
  4263ee:	loopne 0x42642a
  4263f0:	push   eax
  4263f1:	jmp    DWORD PTR [ecx]
  4263f3:	adc    DWORD PTR [ecx],0xc487ec40
  4263f9:	or     al,0xff
  4263fb:	dec    eax
  4263fc:	pop    ebp
  4263fd:	gs inc bx
  426400:	xor    al,0x5b
  426402:	mov    edi,0xd58b5538
  426407:	dec    ebp
  426408:	out    dx,eax
  426409:	adc    DWORD PTR [ebp+0x60142972],edx
  42640f:	mov    bl,0x7
  426411:	push   eax
  426412:	pop    eax
  426413:	lods   al,BYTE PTR ds:[esi]
  426414:	add    al,0x50
  426416:	fwait
  426417:	je     0x426418
  426419:	cli    
  42641a:	mov    al,ds:0xcb17f8e7
  42641f:	xor    al,BYTE PTR [edi+edi*2]
  426422:	add    BYTE PTR [eax],al
  426424:	xchg   ecx,eax
  426425:	jbe    0x426444
  426427:	jg     0x42644b
  426429:	adc    eax,DWORD PTR [esi+eiz*2]
  42642c:	rcr    esi,1
  42642e:	pop    es
  42642f:	lea    ebx,[edx]
  426431:	outs   dx,DWORD PTR ds:[esi]
  426432:	das    
  426433:	lea    edx,[ebx]
  426435:	pop    esi
  426436:	das    
  426437:	sti    
  426438:	test   al,0x47
  42643a:	pop    es
  42643b:	lea    edx,[ebx]
  42643d:	pop    esi
  42643e:	sub    DWORD PTR [eax],eax
  426440:	add    eax,0x5e62aeac
  426445:	sub    esp,esp
  426447:	jle    0x4263e2
  426449:	outs   dx,BYTE PTR ds:[esi]
  42644a:	sbb    eax,0x1d7a1389
  42644f:	jg     0x426423
  426451:	(bad)  
  426452:	jmp    DWORD PTR [ebp-0x1b]
  426455:	jle    0x426444
  426457:	mov    WORD PTR [edx-0x6c72d0aa],ds
  42645d:	push   edi
  42645e:	das    
  42645f:	sti    
  426460:	or     BYTE PTR [esi+eax*4+0x43],dl
  426464:	loope  0x426455
  426466:	mov    edx,0x16c550c
  42646b:	out    0xc8,eax
  42646d:	in     eax,0x3c
  42646f:	pop    ss
  426470:	jg     0x4264e4
  426472:	das    
  426473:	sti    
  426474:	es out dx,eax
  426476:	mov    edx,0x3832c60c
  42647b:	bound  ecx,QWORD PTR [esp+ebp*4-0x1a]
  42647f:	push   esi
  426480:	push   ss
  426481:	or     DWORD PTR [esi-0x70be8cd3],esi
  426487:	add    eax,DWORD PTR [eax]
  426489:	add    BYTE PTR [esi-0x3f69e670],al
  42648f:	and    ebx,esi
  426491:	inc    ebx
  426492:	aad    0x8e
  426494:	stos   DWORD PTR es:[edi],eax
  426495:	repz push ebx
  426497:	and    eax,0xa02edd9
  42649c:	cli    
  42649d:	mov    edx,0x455c49e2
  4264a2:	(bad)  
  4264a3:	es test al,0x81
  4264a6:	xchg   ebp,eax
  4264a7:	and    cl,BYTE PTR [edi-0x10]
  4264aa:	adc    dl,BYTE PTR [ebp-0x7cfaf3d6]
  4264b0:	mov    dh,0x87
  4264b2:	pop    ss
  4264b3:	shl    cl,cl
  4264b5:	dec    esp
  4264b6:	lds    eax,FWORD PTR [esi+0x6487fca5]
  4264bc:	into   
  4264bd:	(bad)  
  4264be:	fidivr DWORD PTR [ecx-0x26]
  4264c1:	dec    esp
  4264c2:	xlat   BYTE PTR ds:[ebx]
  4264c3:	shl    DWORD PTR [eax],1
  4264c5:	adc    BYTE PTR [esi+eax*4-0x3416106f],bh
  4264cc:	(bad)  
  4264cd:	repz dec ecx
  4264cf:	int3   
  4264d0:	loopne 0x426505
  4264d2:	pusha  
  4264d3:	retf   
  4264d4:	int3   
  4264d5:	xor    ecx,DWORD PTR [esi+0x57]
  4264d8:	add    ecx,DWORD PTR [ecx+0x4de20797]
  4264de:	pop    DWORD PTR [esi]
  4264e0:	add    eax,ebx
  4264e2:	xor    eax,0xd9c06612
  4264e7:	jmp    0x4264d6
  4264e9:	ret    0x90b7
  4264ec:	stos   BYTE PTR es:[edi],al
  4264ed:	iret   
  4264ee:	add    BYTE PTR [eax],al
  4264f0:	xor    ebp,DWORD PTR [eax]
  4264f2:	mov    edi,0xeccc61ff
  4264f7:	xor    ebx,DWORD PTR [eax-0x35]
  4264fa:	fdiv   QWORD PTR [ebx]
  4264fc:	(bad)  
  4264fd:	push   esi
  4264fe:	add    bh,cl
  426500:	dec    ebp
  426501:	enter  0xddfd,0xa0
  426505:	iret   
  426506:	dec    BYTE PTR [esi+0x6a086a17]
  42650c:	adc    eax,0x17e26216
  426511:	call   0xe0f90b9e
  426516:	push   esi
  426517:	sub    bh,dl
  426519:	mov    ch,ah
  42651b:	push   0xe8fea96d
  426520:	(bad)  
  426521:	xlat   BYTE PTR ds:[ebx]
  426522:	test   dh,ch
  426524:	loop   0x42656a
  426526:	bound  ebp,QWORD PTR [edx-0x7f]
  426529:	sub    BYTE PTR [edi+0x16],0x5a
  42652d:	mov    esp,0x7e41d460
  426532:	call   0x4c6302
  426537:	push   ds
  426538:	push   edx
  426539:	cld    
  42653a:	repz push 0xffffff8e
  42653d:	jle    0x426527
  42653f:	fld    DWORD PTR [eax]
  426541:	cmp    bl,0x65
  426544:	xchg   esi,eax
  426545:	std    
  426546:	sbb    esp,DWORD PTR [esi+0x648d85db]
  42654c:	mov    dh,0x84
  42654e:	sti    
  42654f:	xchg   esi,eax
  426550:	inc    ecx
  426551:	cld    
  426552:	repz add eax,DWORD PTR [eax]
  426555:	add    cl,bl
  426557:	fsqrt  
  426559:	cld    
  42655a:	fidiv  WORD PTR [ecx-0x6e]
  42655d:	push   0x89e87e69
  426562:	ret    
  426563:	jg     0x426560
  426565:	push   ss
  426566:	or     DWORD PTR [ebx],0xdf4167ae
  42656c:	enter  0x222b,0x82
  426570:	push   esp
  426571:	bound  esi,QWORD PTR [edx+0x2]
  426574:	in     al,0x51
  426576:	push   edi
  426577:	jne    0x42656d
  426579:	add    cl,bh
  42657b:	add    eax,0x356a5300
  426580:	lea    eax,[eax+ecx*8+0x7d]
  426584:	sub    dh,dh
  426586:	dec    esp
  426587:	(bad)  
  426588:	je     0x4265ae
  42658a:	call   0xc2b3b03c
  42658f:	popf   
  426590:	test   al,al
  426592:	repz add DWORD PTR [eax+eax*1+0x6ce80dbc],ebx
  42659a:	dec    edi
  42659b:	xchg   edi,eax
  42659c:	test   DWORD PTR [ebx+0x245c93f4],0x10bb8f98
  4265a6:	sub    DWORD PTR [edx-0x1d],edi
  4265a9:	or     al,0x5f
  4265ab:	popf   
  4265ac:	not    DWORD PTR [esi-0x16]
  4265af:	pop    ds
  4265b0:	add    eax,ebp
  4265b2:	out    dx,eax
  4265b3:	out    0xf6,eax
  4265b5:	(bad)  
  4265b6:	inc    eax
  4265b8:	adc    bl,ch
  4265ba:	add    BYTE PTR [eax],al
  4265bc:	and    DWORD PTR [ebx+edi*4-0x1c8736ff],esp
  4265c3:	imul   ebp,eax,0xc08df79c
  4265c9:	jno    0x4265e6
  4265cb:	call   0x3a169b
  4265d0:	out    dx,eax
  4265d1:	rol    BYTE PTR [ecx],0xeb
  4265d4:	cdq    
  4265d5:	mov    ds:0x7fe802bb,eax
  4265da:	jecxz  0x4265cb
  4265dc:	cmp    al,0xd
  4265de:	add    BYTE PTR [ebx+0x46e39b4f],al
  4265e4:	mov    edx,0x36740448
  4265e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265ea:	sub    DWORD PTR [ecx],eax
  4265ec:	cmp    al,0xd
  4265ee:	jnp    0x4265d3
  4265f0:	mov    bh,0xa0
  4265f2:	das    
  4265f3:	not    ch
  4265f5:	xor    eax,DWORD PTR [ebp+esi*2-0x1a]
  4265f9:	fst    QWORD PTR [edi]
  4265fb:	and    al,0xed
  4265fd:	fidivr DWORD PTR [edx-0x63bffda1]
  426603:	and    ah,ch
  426605:	jb     0x426606
  426607:	jle    0x426627
  426609:	mov    bl,0x9a
  42660b:	adc    ah,bl
  42660d:	xor    edi,esp
  42660f:	je     0x4265cc
  426611:	in     eax,dx
  426612:	pop    ss
  426613:	and    al,0xbd
  426615:	or     dl,BYTE PTR [ebx+0x5f]
  426618:	ror    BYTE PTR [edi],cl
  42661a:	pushf  
  42661b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42661c:	push   es
  42661d:	jae    0x42661e
  42661f:	jle    0x426621
  426621:	add    BYTE PTR [esi-0xeb37f86],cl
  426627:	pop    edx
  426628:	xchg   edi,eax
  426629:	iret   
  42662a:	ss jo  0x4265bb
  42662d:	aaa    
  42662e:	or     DWORD PTR [edi],ecx
  426630:	clc    
  426631:	jae    0x42660e
  426633:	inc    ebx
  426634:	pushf  
  426635:	add    ah,BYTE PTR [esi]
  426637:	pop    ecx
  426638:	mov    cs,WORD PTR [ebp-0x180bf8f7]
  42663e:	pusha  
  42663f:	inc    edx
  426640:	mov    ?,ebx
  426642:	and    ah,BYTE PTR [ecx]
  426644:	sar    DWORD PTR [edi+0x5da7ec1e],cl
  42664a:	xchg   edi,eax
  42664b:	data16 (bad) 
  42664d:	jg     0x4265f7
  42664f:	and    bh,BYTE PTR [eax+0x1971d53f]
  426655:	aaa    
  426656:	add    eax,DWORD PTR [eax-0x2d]
  426659:	cli    
  42665a:	stos   BYTE PTR es:[edi],al
  42665b:	aaa    
  42665c:	aaa    
  42665d:	push   0x45472a
  426662:	stos   BYTE PTR es:[edi],al
  426663:	pop    ss
  426664:	(bad)  
  426665:	adc    eax,0x3f6455
  42666a:	pop    esi
  42666b:	add    cl,dl
  42666d:	repnz mov eax,ds:0x4d1c0209
  426673:	sbb    al,0xe9
  426675:	add    eax,DWORD PTR [edi-0x1c600380]
  42667b:	leave  
  42667c:	call   0xf1377c09
  426681:	cmp    ah,BYTE PTR [edi+0x6fd480]
  426687:	add    ah,ah
  426689:	leave  
  42668a:	call   0x215854c8
  42668f:	cmc    
  426690:	stos   BYTE PTR es:[edi],al
  426691:	or     edx,eax
  426693:	xor    DWORD PTR [edx],esp
  426695:	(bad)  
  426696:	ins    DWORD PTR es:[edi],dx
  426697:	lahf   
  426698:	pop    edx
  426699:	ins    DWORD PTR es:[edi],dx
  42669a:	fnstenv [esi]
  42669c:	daa    
  42669d:	hlt    
  42669e:	call   0x1db3:0x7c8dad7e
  4266a5:	jb     0x426726
  4266a7:	pop    ebp
  4266a8:	aad    0x9
  4266aa:	xchg   esi,eax
  4266ab:	(bad)  
  4266ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266ad:	fcom   DWORD PTR [edx-0x1e283ce3]
  4266b3:	div    edx
  4266b5:	sbb    ch,BYTE PTR [ecx]
  4266b7:	add    al,0x50
  4266b9:	dec    edx
  4266ba:	pop    esp
  4266bb:	mul    BYTE PTR [ebx]
  4266bd:	lea    esp,[esp+esi*4]
  4266c0:	jge    0x4266c8
  4266c2:	or     al,0x91
  4266c4:	jle    0x42664c
  4266c6:	test   eax,0xa93ad018
  4266cb:	inc    esp
  4266cc:	jp     0x4266da
  4266ce:	test   bl,0xf
  4266d1:	jecxz  0x426682
  4266d3:	lds    ecx,FWORD PTR [eax]
  4266d5:	xchg   ebx,eax
  4266d6:	lea    eax,[ebx+0x3e73e69]
  4266dc:	aad    0xd7
  4266de:	(bad)  
  4266df:	xor    ebx,DWORD PTR [eax-0xb]
  4266e2:	js     0x426710
  4266e4:	sub    eax,0xd5044f43
  4266e9:	xchg   edx,eax
  4266ea:	add    BYTE PTR [edi-0x2d2d0000],ch
  4266f0:	mov    BYTE PTR [eax*2-0xec68a73],ah
  4266f7:	jno    0x426720
  4266f9:	xchg   ebx,eax
  4266fa:	ror    DWORD PTR [ecx],1
  4266fc:	lea    ebp,[ecx+edx*2+0x7d]
  426700:	sti    
  426701:	dec    esi
  426702:	imul   ebx,DWORD PTR [ecx-0x799bb905],0x8800b5c0
  42670c:	ret    0x7399
  42670f:	(bad)  
  426710:	sti    
  426711:	cdq    
  426712:	imul   eax,DWORD PTR [eax+ecx*8-0x177cbbdc],0x17
  42671a:	push   esi
  42671b:	cmp    ebx,0xffffffb7
  42671e:	(bad)  
  42671f:	mov    esi,0x88756255
  426724:	in     al,dx
  426725:	icebp  
  426726:	fmul   DWORD PTR [ecx]
  426728:	add    BYTE PTR [edx+edx*2-0x7f],ch
  42672c:	std    
  42672d:	test   BYTE PTR [ebp+0x71],0x64
  426731:	out    dx,al
  426732:	inc    ebp
  426733:	add    BYTE PTR [ecx+ebp*4+0x6c8d06ca],0x4e
  42673b:	jl     0x426738
  42673d:	(bad)  
  42673e:	outs   dx,BYTE PTR ds:[esi]
  42673f:	neg    BYTE PTR ds:0xbf5065ce
  426745:	sbb    al,0x0
  426747:	outs   dx,BYTE PTR ds:[esi]
  426748:	jg     0x426717
  42674a:	push   0xffffffcf
  42674c:	push   ecx
  42674d:	(bad)  
  42674e:	retf   
  42674f:	adc    DWORD PTR [edi-0x52ffff19],eax
  426755:	nop
  426756:	dec    ebp
  426757:	popf   
  426758:	jecxz  0x426726
  42675a:	pop    es
  42675b:	cmp    BYTE PTR [esp+esi*8+0xb],al
  42675f:	bound  eax,QWORD PTR [eax-0x2efc0519]
  426765:	out    0x0,eax
  426767:	add    dl,ah
  426769:	add    bl,BYTE PTR [ebp-0x10]
  42676c:	mov    ebx,0x7c85503a
  426771:	or     DWORD PTR [ebp+0xa3cdd],eax
  426777:	mov    esi,DWORD PTR [edx]
  426779:	dec    DWORD PTR [eax+edi*8+0x5d]
  42677d:	std    
  42677e:	dec    esp
  42677f:	or     al,0x14
  426781:	mov    ds:0x98fc4073,al
  426786:	jno    0x426790
  426788:	bound  ebx,QWORD PTR [ecx+0x4a712850]
  42678e:	pop    es
  42678f:	test   DWORD PTR [edx+ecx*1-0x38890000],eax
  426796:	test   DWORD PTR [ebx-0x17ab011c],0x6a201c1e
  4267a0:	enter  0xf739,0x91
  4267a4:	call   0x314267b1
  4267a9:	dec    ecx
  4267aa:	jne    0x426823
  4267ac:	(bad)  
  4267ad:	(bad)  
  4267ae:	sti    
  4267af:	cmp    DWORD PTR [ecx+0x6f626ea1],eax
  4267b5:	scas   al,BYTE PTR es:[edi]
  4267b6:	add    DWORD PTR [ebp+0x0],0x0
  4267ba:	mov    BYTE PTR [ecx],al
  4267bc:	jl     0x4267c1
  4267be:	cwde   
  4267bf:	xchg   edx,eax
  4267c0:	div    DWORD PTR [eax+eax*8-0x29]
  4267c4:	aas    
  4267c5:	mov    esi,DWORD PTR [ebx]
  4267c7:	sahf   
  4267c8:	or     bl,BYTE PTR [edx-0x3f7a7266]
  4267ce:	rcl    BYTE PTR [esi+ecx*2+0x6a],0x7c
  4267d3:	mov    al,cl
  4267d5:	call   DWORD PTR [ecx+ecx*2+0x13bfe90]
  4267dc:	clc    
  4267dd:	test   DWORD PTR [ebx],edi
  4267df:	and    ah,BYTE PTR [eax]
  4267e1:	mov    edx,ebp
  4267e3:	and    eax,0xab5652f8
  4267e8:	mov    ebp,eax
  4267ea:	sub    cl,ah
  4267ec:	mov    ebx,edi
  4267ee:	push   ecx
  4267ef:	mov    bl,0x18
  4267f1:	adc    BYTE PTR [esi+0x26],bl
  4267f4:	clc    
  4267f5:	cs adc eax,0x957bec0b
  4267fb:	jb     0x42683c
  4267fd:	call   0xfbcc6916
  426802:	stos   BYTE PTR es:[edi],al
  426803:	retf   0xab0a
  426806:	or     ecx,esp
  426808:	mov    al,BYTE PTR [ebp+0x1]
  42680b:	clc    
  42680c:	dec    eax
  42680d:	cld    
  42680e:	push   esi
  42680f:	xor    BYTE PTR [edi+esi*1-0x68],al
  426813:	retf   0x9f0d
  426816:	pop    esi
  426817:	mov    cs,WORD PTR [edi+0x771e9887]
  42681d:	or     BYTE PTR [eax],al
  42681f:	add    BYTE PTR [eax-0x4a],cl
  426822:	xchg   edi,eax
  426823:	dec    esi
  426824:	and    eax,0x5e283514
  426829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42682a:	xchg   DWORD PTR [edi+0x518aa2cd],eax
  426830:	int    0x7b
  426832:	sbb    BYTE PTR [esi+ebx*2],cl
  426835:	ins    BYTE PTR es:[edi],dx
  426836:	xor    eax,0x8a5705fb
  42683b:	jne    0x42680e
  42683d:	test   DWORD PTR [esi+eiz*2],0x8185bd4
  426844:	sub    edx,DWORD PTR [edi+ebp*1+0x54]
  426848:	push   eax
  426849:	mov    dl,0xfa
  42684b:	xor    DWORD PTR [ecx+0x7afb8a43],0x35
  426852:	cld    
  426853:	xchg   bl,bl
  426855:	sbb    al,0x8b
  426857:	push   eax
  426858:	or     eax,0x4e100fe8
  42685d:	or     ebx,ebp
  42685f:	repz or DWORD PTR ss:[ebx],esi
  426863:	(bad)  
  426864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426865:	or     eax,0xdbc0c36c
  42686a:	iret   
  42686b:	inc    esi
  42686c:	int    0xfb
  42686e:	pop    ds
  42686f:	jnp    0x4268ab
  426871:	lea    ebp,[esp+edi*8]
  426874:	test   esp,edx
  426876:	jno    0x42688e
  426878:	rcr    eax,1
  42687a:	imul   esi,DWORD PTR [ebx],0x18298695
  426880:	xchg   esi,eax
  426881:	nop
  426882:	out    0x80,al
  426884:	add    BYTE PTR [eax],al
  426886:	mov    al,ds:0xd519b819
  42688b:	jl     0x42685f
  42688d:	pop    es
  42688e:	xchg   edx,eax
  42688f:	jl     0x42682a
  426891:	jmp    0x4268e4
  426893:	dec    ecx
  426894:	mov    ah,0xf0
  426896:	out    dx,eax
  426897:	cmc    
  426898:	fdivr  QWORD PTR [edx-0x68]
  42689b:	jne    0x42682f
  42689d:	mov    gs,WORD PTR [eax+0xd]
  4268a0:	outs   dx,BYTE PTR ds:[esi]
  4268a1:	mov    dl,0xde
  4268a3:	cmc    
  4268a4:	clc    
  4268a5:	fwait
  4268a6:	ja     0x426924
  4268a8:	adc    cl,BYTE PTR [esi+0x7af8c552]
  4268ae:	int    0xd9
  4268b0:	add    DWORD PTR [ecx*8-0x51c91972],esi
  4268b7:	cmc    
  4268b8:	loopne 0x4268ec
  4268ba:	scas   al,BYTE PTR es:[edi]
  4268bb:	fisub  DWORD PTR [eax+ecx*4-0x7259096b]
  4268c2:	and    BYTE PTR [edx],dl
  4268c4:	outs   dx,BYTE PTR ds:[esi]
  4268c5:	add    DWORD PTR [edx],esp
  4268c7:	jnp    0x426902
  4268c9:	cmp    al,0x2e
  4268cb:	fsubr  QWORD PTR ds:0xe91a43bb
  4268d1:	ss push edx
  4268d3:	outs   dx,BYTE PTR ds:[esi]
  4268d4:	push   0x8fda0
  4268d9:	jmp    0x419540b4
  4268de:	popa   
  4268df:	(bad)  
  4268e0:	aas    
  4268e1:	jmp    0x29b9eaa4
  4268e6:	fnstenv [ecx+0x71]
  4268e9:	or     BYTE PTR [eax],al
  4268eb:	add    BYTE PTR [eax+0x7f],bl
  4268ee:	xchg   DWORD PTR [ecx+0x6d0b785a],ebx
  4268f4:	test   eax,0x55e90009
  4268f9:	in     eax,0xfb
  4268fb:	jmp    0xe9a870ad
  426900:	mov    esp,0xe1665209
  426905:	or     eax,0xdbea2985
  42690a:	xchg   bh,ch
  42690c:	mov    ecx,esp
  42690e:	idiv   DWORD PTR [eax-0x1499f624]
  426914:	sar    BYTE PTR [esi+0x50],0xd5
  426918:	pop    ebx
  426919:	dec    edx
  42691a:	jne    0x4268b5
  42691c:	into   
  42691d:	popa   
  42691e:	ja     0x4268c9
  426920:	(bad)  
  426921:	icebp  
  426922:	(bad)  
  426923:	mov    ds:0xd5e80996,al
  426928:	idiv   DWORD PTR [esi-0x5]
  42692b:	bound  ebx,QWORD PTR [ecx-0x7c]
  42692e:	sti    
  42692f:	xchg   ebp,eax
  426930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426931:	lea    eax,[ebp+0x5]
  426934:	add    DWORD PTR [ebp+0x7e636185],ecx
  42693a:	sti    
  42693b:	cdq    
  42693c:	sub    eax,ebp
  42693e:	scas   eax,DWORD PTR es:[edi]
  42693f:	cdq    
  426940:	push   ecx
  426941:	hlt    
  426942:	div    DWORD PTR [edx+0x60]
  426945:	or     bl,0xa6
  426948:	sbb    edi,DWORD PTR [edx+0x9d6e944]
  42694e:	ret    
  42694f:	add    BYTE PTR fs:[eax],al
  426952:	out    dx,al
  426953:	jg     0x426950
  426955:	add    BYTE PTR [ebx+0x7c00006e],dl
  42695b:	sahf   
  42695c:	out    dx,al
  42695d:	std    
  42695e:	and    ecx,DWORD PTR [ebp-0x7334f87d]
  426964:	push   eax
  426965:	or     bh,ah
  426967:	ret    
  426968:	test   DWORD PTR [ebx+0x51f73644],0x55fe0134
  426972:	push   ebx
  426973:	ss or  al,ch
  426976:	loope  0x4269e7
  426978:	idiv   bh
  42697a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42697b:	or     edi,esp
  42697d:	cmp    al,0x38
  42697f:	push   ds
  426980:	int3   
  426981:	add    BYTE PTR [esi+eax*1],ch
  426984:	adc    eax,eax
  426986:	jnp    0x426936
  426988:	jnp    0x42694a
  42698a:	adc    al,0x7d
  42698c:	scas   al,BYTE PTR es:[edi]
  42698d:	rcl    BYTE PTR [edx+eiz*8+0x2d93fff2],0x56
  426995:	leave  
  426996:	scas   eax,DWORD PTR es:[edi]
  426997:	xor    eax,DWORD PTR [ebx+0x7c9a7dec]
  42699d:	add    edi,esp
  42699f:	add    eax,0xd14b564b
  4269a4:	inc    DWORD PTR [eax]
  4269a6:	in     al,dx
  4269a7:	add    eax,0x91418d4b
  4269ac:	std    
  4269ad:	jmp    ebx
  4269af:	cmp    esi,edi
  4269b1:	jne    0x426953
  4269b3:	repnz out dx,eax
  4269b5:	mov    eax,DWORD PTR [eax]
  4269b7:	add    BYTE PTR [edx-0x77af08c1],ch
  4269bd:	nop
  4269be:	shl    BYTE PTR [edx+edi*4-0x76],0x65
  4269c3:	or     al,0xac
  4269c5:	xchg   edx,eax
  4269c6:	adc    al,0x8d
  4269c8:	sub    DWORD PTR [edx+0x3eb3fffd],ecx
  4269ce:	bound  eax,QWORD PTR [eax]
  4269d0:	aad    0xe3
  4269d2:	mov    ebx,0x76bf6dfb
  4269d7:	cli    
  4269d8:	jp     0x4269d4
  4269da:	inc    eax
  4269db:	or     al,0x5e
  4269dd:	jno    0x426a11
  4269df:	lea    ebx,[eax-0x19]
  4269e2:	test   ebx,edi
  4269e4:	bound  edx,QWORD PTR [edx]
  4269e6:	xchg   DWORD PTR [ebp-0x43],esi
  4269e9:	cmp    BYTE PTR [edi-0x79ac16b0],al
  4269ef:	test   DWORD PTR ds:0xc0890117,edx
  4269f5:	jp     0x426991
  4269f7:	cmovs  esp,esi
  4269fa:	jg     0x4269f6
  4269fc:	xor    bh,al
  4269fe:	xor    edx,DWORD PTR [ebx+0x56]
  426a01:	stos   DWORD PTR es:[edi],eax
  426a02:	xchg   eax,ebp
  426a04:	js     0x4269df
  426a06:	test   ebx,edi
  426a08:	dec    esp
  426a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a0a:	out    0x86,eax
  426a0c:	(bad)  [ebx-0x20ae7288]
  426a12:	xchg   bl,bh
  426a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a15:	(bad)  
  426a16:	adc    BYTE PTR [ebx+eiz*4],bl
  426a19:	iret   
  426a1a:	xor    edx,DWORD PTR [eax+eax*1]
  426a1d:	add    BYTE PTR [eax+0x23],bl
  426a20:	adc    DWORD PTR [esi],ecx
  426a22:	pop    eax
  426a23:	out    0x7f,al
  426a25:	cld    
  426a26:	loop   0x426a4f
  426a28:	xor    al,0x53
  426a2a:	push   esi
  426a2b:	cmp    eax,DWORD PTR [edi-0x7a16af18]
  426a31:	sti    
  426a32:	pop    esi
  426a33:	sbb    bh,BYTE PTR [ebx+0x2]
  426a36:	push   eax
  426a37:	xchg   ebp,eax
  426a38:	adc    DWORD PTR [ecx-0x46],0xfffffff5
  426a3c:	out    dx,al
  426a3d:	push   ecx
  426a3e:	mov    dl,0x92
  426a40:	out    dx,eax
  426a41:	test   BYTE PTR [ebp+0x387efaf6],dl
  426a47:	inc    DWORD PTR [bp+0x9d3]
  426a4c:	je     0x426a86
  426a4e:	(bad)  
  426a4f:	fcmovu st,st(1)
  426a51:	adc    cl,ah
  426a53:	(bad)  
  426a55:	xor    esp,ebp
  426a57:	mov    gs,WORD PTR [ecx+0x4c8cd10f]
  426a5d:	mov    ebp,ss
  426a5f:	jecxz  0x426aa2
  426a61:	jns    0x426a43
  426a63:	lea    edx,[ecx]
  426a65:	pushf  
  426a66:	mov    DWORD PTR [edi-0x60cfc17],ebp
  426a6c:	jae    0x426a7e
  426a6e:	cmp    eax,0x77bc90d1
  426a73:	or     ecx,ebp
  426a75:	jle    0x426a1f
  426a77:	adc    DWORD PTR [ecx+0x6f],edx
  426a7a:	ror    ecx,0xe8
  426a7d:	sub    BYTE PTR [esi],0x84
  426a80:	jns    0x426a7c
  426a82:	add    BYTE PTR [eax],al
  426a84:	xchg   ecx,eax
  426a85:	sub    BYTE PTR [ebp+esi*4-0x32],0xcd
  426a8a:	cwde   
  426a8b:	xchg   BYTE PTR [eax+0x1d7ee971],bl
  426a91:	std    
  426a92:	in     eax,0x78
  426a94:	cwde   
  426a95:	popa   
  426a96:	data16 or cl,dl
  426a99:	or     DWORD PTR [ebx-0xb316e06],esi
  426a9f:	jle    0x426b09
  426aa1:	sub    DWORD PTR [edi+0x34fdee34],edx
  426aa7:	xor    ebx,esi
  426aa9:	std    
  426aaa:	loopne 0x426b24
  426aac:	nop
  426aad:	lea    edi,[ecx-0xb88f876]
  426ab3:	imul   ebx,ebx,0xffffffc9
  426ab6:	call   0x23c60839
  426abb:	fwait
  426abc:	ret    
  426abd:	lahf   
  426abe:	add    ecx,DWORD PTR [edx-0x7522b1ce]
  426ac4:	and    BYTE PTR [esi],al
  426ac6:	add    BYTE PTR [ecx],al
  426ac8:	pop    edi
  426ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426aca:	cli    
  426acb:	out    dx,al
  426acc:	dec    esp
  426acd:	std    
  426ace:	pop    ss
  426acf:	rcl    DWORD PTR [esi+eiz*4+0x61c4defa],1
  426ad6:	rol    DWORD PTR [ebp+0x2f5b734f],0xa8
  426add:	inc    eax
  426ade:	mov    esi,0x86dcd6e5
  426ae3:	int    0x56
  426ae5:	data16 test bl,ch
  426ae8:	add    BYTE PTR [eax],al
  426aea:	(bad)  
  426aeb:	or     DWORD PTR [edi+0x17],ecx
  426aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aef:	loope  0x426aa8
  426af1:	and    bl,BYTE PTR [ecx-0x27ae97f7]
  426af7:	leave  
  426af8:	inc    DWORD PTR [eax-0x71052d24]
  426afe:	mov    eax,0xaea22f79
  426b03:	cld    
  426b04:	out    0xc2,eax
  426b06:	inc    ecx
  426b07:	add    eax,DWORD PTR [ebp+ebp*8+0x620009d8]
  426b0e:	xlat   BYTE PTR ds:[ebx]
  426b0f:	out    dx,eax
  426b10:	add    BYTE PTR [edx+0x615d80c4],bh
  426b16:	pop    esp
  426b17:	fidivr DWORD PTR [edi]
  426b19:	ins    BYTE PTR es:[edi],dx
  426b1a:	sbb    DWORD PTR [ebx],eax
  426b1c:	test   DWORD PTR [ebx],esi
  426b1e:	(bad)  
  426b1f:	or     DWORD PTR [eax],eax
  426b21:	jb     0x426afa
  426b23:	test   BYTE PTR [ebp+0x4d],cl
  426b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b27:	out    dx,eax
  426b28:	or     DWORD PTR [edi+0x6413da4d],ebx
  426b2e:	adc    DWORD PTR [ebx],eax
  426b30:	test   DWORD PTR [edi],ebp
  426b32:	(bad)  
  426b33:	or     DWORD PTR [eax],eax
  426b35:	adc    BYTE PTR [eax],dh
  426b37:	or     DWORD PTR [eax],eax
  426b39:	jmp    0x633e387f
  426b3e:	mov    ecx,0xb0005585
  426b43:	cmp    al,0x50
  426b45:	dec    DWORD PTR [ebp+0x42]
  426b48:	test   al,al
  426b4a:	mov    ebx,0x184f7
  426b4f:	add    BYTE PTR [edx+ecx*1+0x71b05d39],ch
  426b56:	jg     0x426bd4
  426b58:	jge    0x426b64
  426b5a:	add    BYTE PTR [ebx+0x88381b1],cl
  426b60:	dec    edx
  426b61:	or     al,BYTE PTR [ecx]
  426b63:	add    BYTE PTR [eax+edi*1-0x73],bh
  426b67:	xchg   ebp,eax
  426b68:	cld    
  426b69:	xor    bh,0xff
  426b6c:	mov    esi,0x6103f015
  426b71:	jl     0x426bbe
  426b73:	dec    DWORD PTR ds:0xe0c0847a
  426b79:	jbe    0x426b03
  426b7b:	pop    ebp
  426b7c:	pop    esp
  426b7d:	xchg   ebp,eax
  426b7e:	or     ecx,DWORD PTR [ebp-0x9754f]
  426b84:	pop    ebx
  426b85:	cmp    cl,BYTE PTR [ebx-0x7d]
  426b88:	fs sub eax,0xf780b929
  426b8f:	mov    ecx,esi
  426b91:	popf   
  426b92:	add    DWORD PTR [ebp+0x78],0xfffffff5
  426b96:	pop    es
  426b97:	push   esi
  426b98:	jns    0x426b81
  426b9a:	jg     0x426b99
  426b9c:	stos   DWORD PTR es:[edi],eax
  426b9d:	or     DWORD PTR [edx+0x68],0x142a0d9c
  426ba4:	dec    esp
  426ba5:	adc    DWORD PTR [ecx+0x14],0x4744a71
  426bac:	fild   WORD PTR [eax-0x886ed1d]
  426bb2:	jg     0x426bb1
  426bb4:	add    BYTE PTR [eax],al
  426bb6:	sti    
  426bb7:	adc    DWORD PTR [eax+0x53],0xe8f7b13f
  426bbe:	aad    0x1a
  426bc0:	jae    0x426bbc
  426bc2:	mov    edx,0x3b6686e8
  426bc7:	dec    BYTE PTR [ecx]
  426bc9:	test   BYTE PTR ds:0xd5a5061b,cl
  426bcf:	bound  eax,QWORD PTR [edi-0x6c]
  426bd2:	and    DWORD PTR [ebx+0x28a586ff],esp
  426bd8:	xchg   DWORD PTR [edi+edx*8-0x9],esi
  426bdc:	stos   BYTE PTR es:[edi],al
  426bdd:	xchg   DWORD PTR [eax],edx
  426bdf:	push   ebx
  426be0:	ja     0x426c57
  426be2:	jge    0x426bfc
  426be4:	mov    bh,0xb
  426be6:	sbb    DWORD PTR [ebx+0x78e1eec7],edi
  426bec:	sbb    eax,0x136c339
  426bf1:	mov    eax,0x4426bd
  426bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bf7:	xor    DWORD PTR [ecx*4+0x5233ee90],esi
  426bfe:	inc    edx
  426bff:	jbe    0x426c68
  426c01:	push   cs
  426c02:	xchg   ebp,eax
  426c03:	bound  esi,QWORD PTR [esi-0x28]
  426c06:	pusha  
  426c07:	es mov eax,gs
  426c0a:	pusha  
  426c0b:	fld    QWORD PTR [ecx-0xb58a905]
  426c11:	cli    
  426c12:	mov    al,ds:0xfdf076f2
  426c17:	cli    
  426c18:	push   esi
  426c19:	cli    
  426c1a:	add    BYTE PTR [eax],al
  426c1c:	or     bh,BYTE PTR [edi+edx*4-0x7d22d182]
  426c23:	jg     0x426c20
  426c25:	ret    
  426c26:	adc    BYTE PTR [esi+edx*2],al
  426c29:	inc    esi
  426c2a:	mov    eax,DWORD PTR [eax]
  426c2c:	jecxz  0x426bdb
  426c2e:	mov    edi,esi
  426c30:	outs   dx,WORD PTR ds:[esi]
  426c32:	sbb    DWORD PTR [ebx+0x48],ebp
  426c35:	mov    esi,0x9bd58bb
  426c3a:	repz pusha 
  426c3c:	aad    0x9
  426c3e:	ins    BYTE PTR es:[edi],dx
  426c3f:	inc    ecx
  426c40:	mov    ebp,0xba8d80d9
  426c45:	xchg   edx,eax
  426c46:	neg    DWORD PTR [ebx]
  426c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c49:	or     BYTE PTR [eax-0xe],ah
  426c4c:	xor    bh,BYTE PTR [edi-0x1a]
  426c4f:	gs shl ecx,cl
  426c52:	inc    DWORD PTR [edx]
  426c54:	cmp    BYTE PTR [edi],dl
  426c56:	adc    DWORD PTR [ebx+0x7af79c92],0x406dd997
  426c60:	and    DWORD PTR [ecx+0x2c],0xd3747e89
  426c67:	inc    eax
  426c68:	imul   ecx,DWORD PTR ds:0xe3f0d33d,0xd185106b
  426c72:	shl    BYTE PTR [eax+0x78e90931],0x98
  426c79:	jno    0x426cb4
  426c7b:	sbb    al,0x47
  426c7d:	or     BYTE PTR [ebx-0x45ffff0e],ah
  426c83:	jns    0x426c6b
  426c85:	ror    dl,0xe1
  426c88:	xchg   ebx,eax
  426c89:	add    bl,BYTE PTR [ebx]
  426c8b:	sbb    BYTE PTR [ecx],dl
  426c8d:	popf   
  426c8e:	sub    al,BYTE PTR [ecx-0x2a]
  426c91:	sbb    esp,DWORD PTR ds:0x53f2ad08
  426c97:	dec    ebx
  426c98:	sbb    DWORD PTR [ebx-0x68],edi
  426c9b:	jne    0x426cee
  426c9d:	test   DWORD PTR [ecx],0x988d5a74
  426ca3:	jge    0x426c86
  426ca5:	rsm    
  426ca7:	fistp  QWORD PTR [ebx-0x5eaa9788]
  426cad:	fwait
  426cae:	dec    ecx
  426caf:	lods   eax,DWORD PTR ds:[esi]
  426cb0:	jmp    0x10bcb8
  426cb5:	xor    BYTE PTR [esi-0x53150e1f],ah
  426cbb:	pop    ss
  426cbc:	push   0x1420d719
  426cc1:	xchg   ecx,eax
  426cc2:	gs jae 0x426cf2
  426cc5:	std    
  426cc6:	fisub  WORD PTR [eax-0x1]
  426cc9:	mov    ebx,0xeaefebc2
  426cce:	mov    ss,WORD PTR [edi]
  426cd0:	xchg   DWORD PTR [edi],esp
  426cd2:	out    0x8a,al
  426cd4:	inc    ebp
  426cd5:	cmc    
  426cd6:	aas    
  426cd7:	inc    ebx
  426cd8:	cld    
  426cd9:	out    dx,al
  426cda:	pop    eax
  426cdb:	mov    esi,DWORD PTR [ebp-0x2f]
  426cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cdf:	pop    esp
  426ce0:	xchg   DWORD PTR [ecx*2+0x39088b],esp
  426ce7:	add    BYTE PTR [eax-0x27],dl
  426cea:	pop    es
  426ceb:	bound  esi,QWORD PTR [edx-0x1c0e789b]
  426cf1:	fdiv   st(3),st
  426cf3:	sbb    ebp,DWORD PTR [ecx-0x2422ae92]
  426cf9:	dec    ecx
  426cfa:	or     esp,DWORD PTR [ebp+0x11]
  426cfd:	jo     0x426cfa
  426cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d00:	int3   
  426d01:	int3   
  426d02:	jmp    0x426d76
  426d04:	inc    ecx
  426d05:	ret    
  426d06:	cli    
  426d07:	cmp    BYTE PTR [ecx],bh
  426d09:	mov    WORD PTR [edx],es
  426d0b:	aaa    
  426d0c:	pop    eax
  426d0d:	fiadd  DWORD PTR [edi]
  426d0f:	jb     0x426ce3
  426d11:	jno    0x426d7b
  426d13:	lods   eax,DWORD PTR ds:[esi]
  426d14:	(bad)  [ecx]
  426d16:	add    BYTE PTR [ebx],al
  426d18:	out    dx,eax
  426d19:	shl    edi,1
  426d1b:	mov    eax,0xc6fb6f5e
  426d20:	mov    al,0xda
  426d22:	enter  0xb22a,0x8a
  426d26:	in     al,dx
  426d27:	push   0xe900865d
  426d2c:	(bad)  
  426d2d:	ret    0x51
  426d30:	dec    ebx
  426d31:	cld    
  426d32:	je     0x426cf8
  426d34:	test   BYTE PTR [esi-0x61],bl
  426d37:	add    ah,ch
  426d39:	lea    esi,[ebp+0xc]
  426d3c:	aaa    
  426d3d:	mov    ah,0x50
  426d3f:	push   0xffffffa4
  426d41:	and    DWORD PTR [ebp-0x8729743],ecx
  426d47:	call   esp
  426d49:	xchg   edx,eax
  426d4a:	xchg   esp,eax
  426d4b:	inc    BYTE PTR [eax]
  426d4d:	add    bl,ah
  426d4f:	push   ds
  426d50:	pop    ecx
  426d51:	test   esp,edi
  426d53:	or     esp,DWORD PTR [ecx]
  426d55:	mov    edi,DWORD PTR [ecx+0x6e]
  426d58:	or     BYTE PTR [eax],0x31
  426d5b:	and    ecx,DWORD PTR [edx+edx*2]
  426d5e:	mul    DWORD PTR [edx+ecx*2-0x6c088cb0]
  426d65:	add    BYTE PTR [esi+eax*1-0x7b],ch
  426d69:	rcr    BYTE PTR [ecx],0x70
  426d6c:	xor    BYTE PTR [ebp-0x70],0x8e
  426d70:	push   eax
  426d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d72:	xchg   edx,eax
  426d73:	(bad)  
  426d74:	jecxz  0x426d78
  426d76:	pop    edi
  426d77:	inc    esi
  426d78:	push   edi
  426d79:	pop    esi
  426d7a:	(bad)  
  426d7b:	scas   al,BYTE PTR es:[edi]
  426d7c:	mov    edx,0x83233c08
  426d81:	in     al,dx
  426d82:	mov    ebp,0x2c00c49a
  426d87:	push   es
  426d88:	dec    ebx
  426d89:	push   esi
  426d8a:	sti    
  426d8b:	lock jl 0x426d96
  426d8e:	jmp    0x426d80
  426d90:	out    dx,eax
  426d91:	push   esi
  426d92:	(bad)  
  426d93:	adc    eax,0x8db1e858
  426d98:	idiv   edi
  426d9a:	mov    ebx,0x756b6223
  426d9f:	xor    ebp,esp
  426da1:	pop    eax
  426da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426da3:	xchg   bh,dh
  426da5:	jmp    DWORD PTR [ebx-0x2a95b1db]
  426dab:	dec    esp
  426dac:	jbe    0x426df3
  426dae:	in     eax,0xb7
  426db0:	xchg   edi,eax
  426db1:	outs   dx,DWORD PTR ds:[esi]
  426db2:	add    BYTE PTR [eax],al
  426db4:	jmp    0x1656:0x8b5383ca
  426dbb:	mov    DWORD PTR [eax+0x3be826c8],edx
  426dc1:	and    BYTE PTR [ebx+edi*8+0x6619b122],al
  426dc8:	dec    esp
  426dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dca:	mov    ds:0x84baad58,eax
  426dcf:	sti    
  426dd0:	mov    dl,0x54
  426dd2:	test   al,0x39
  426dd4:	or     BYTE PTR [edi],dl
  426dd6:	jbe    0x426e1d
  426dd8:	popf   
  426dd9:	pusha  
  426dda:	push   0x45
  426ddc:	call   0xd0e6:0xe2fb22bb
  426de3:	add    ch,dl
  426de5:	bound  ecx,QWORD PTR [ebp+ebx*2-0x1c1f058b]
  426dec:	mov    esp,0xde746c35
  426df1:	jmp    0x426dcb
  426df3:	out    0x58,eax
  426df5:	push   ds
  426df6:	push   0x3ff73e8
  426dfb:	add    BYTE PTR [esi+edx*1+0x78],cl
  426dff:	cmp    DWORD PTR [eax-0x40da074e],esi
  426e05:	add    dl,BYTE PTR [ecx+0x6bcb2575]
  426e0b:	dec    eax
  426e0c:	jbe    0x426e71
  426e0e:	(bad)  
  426e0f:	cli    
  426e10:	test   al,0x92
  426e12:	mov    eax,edx
  426e14:	test   DWORD PTR [eax+edx*1],ebx
  426e17:	push   edi
  426e18:	add    BYTE PTR [eax],al
  426e1a:	push   eax
  426e1b:	outs   dx,BYTE PTR ds:[esi]
  426e1c:	lahf   
  426e1d:	call   0xfbc03ce4
  426e22:	lods   al,BYTE PTR ds:[esi]
  426e23:	sbb    DWORD PTR [ecx+0x6e09f545],edx
  426e29:	pop    ebx
  426e2a:	in     eax,dx
  426e2b:	scas   eax,DWORD PTR es:[edi]
  426e2c:	or     eax,0x2e3cd504
  426e31:	sub    DWORD PTR [eax+0x71],0x5e
  426e35:	inc    ecx
  426e36:	dec    ebp
  426e37:	sbb    al,0xa9
  426e39:	add    ebx,esi
  426e3b:	pop    eax
  426e3c:	add    cl,ah
  426e3e:	loop   0x426e35
  426e40:	mov    ecx,0xab0acd86
  426e45:	cmc    
  426e46:	push   ebx
  426e47:	inc    ecx
  426e48:	push   0xe909d465
  426e4d:	cmp    DWORD PTR [edi+eax*1],0xffffffa0
  426e51:	xchg   BYTE PTR [edi+ebp*2-0x6cca0758],bl
  426e58:	into   
  426e59:	inc    ebp
  426e5a:	test   BYTE PTR [ecx+0x70],dh
  426e5d:	leave  
  426e5e:	mov    dh,dh
  426e60:	in     al,dx
  426e61:	ss xchg ebp,eax
  426e63:	fs in  al,0x6b
  426e66:	out    0xa2,al
  426e68:	jecxz  0x426dec
  426e6a:	dec    esp
  426e6b:	(bad)  
  426e6c:	mov    ah,0x3e
  426e6e:	cmp    dh,ch
  426e70:	sub    DWORD PTR [edi+0x7c24849d],ecx
  426e76:	jge    0x426e01
  426e78:	je     0x426dfb
  426e7a:	pop    esi
  426e7b:	test   DWORD PTR [ecx-0x5affff09],ebp
  426e81:	jle    0x426eaf
  426e83:	dec    esp
  426e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e85:	fcom   QWORD PTR ds:0xf4f64fd7
  426e8b:	nop
  426e8c:	cwde   
  426e8d:	pop    ecx
  426e8e:	ss aam 0x3f
  426e91:	push   ss
  426e92:	inc    ebp
  426e93:	adc    edx,DWORD PTR [ebp-0x2b8499f7]
  426e99:	neg    cl
  426e9b:	sub    BYTE PTR [eax+0x12c86e3d],0x61
  426ea2:	add    BYTE PTR [eax+0x6efb7363],bl
  426ea8:	or     eax,0x8aac8944
  426ead:	je     0x426ec4
  426eaf:	ins    DWORD PTR es:[edi],dx
  426eb0:	loopne 0x426e7b
  426eb2:	call   DWORD PTR [ebp-0x13]
  426eb5:	pop    ebx
  426eb6:	call   0xfbb5ad08
  426ebb:	shr    edi,cl
  426ebd:	jl     0x426e74
  426ebf:	std    
  426ec0:	push   edi
  426ec1:	je     0x426ebe
  426ec3:	xchg   ecx,eax
  426ec4:	ds xchg esi,eax
  426ec6:	sahf   
  426ec7:	jmp    0x74b256a2
  426ecc:	mov    ebp,0x491158b7
  426ed1:	nop
  426ed2:	add    cl,ch
  426ed4:	arpl   bp,dx
  426ed6:	repz bound eax,QWORD PTR [ebp+0x5e1a3753]
  426edd:	xchg   esi,eax
  426ede:	je     0x426e89
  426ee0:	(bad)  
  426ee1:	add    al,BYTE PTR [ecx+ebx*1+0x0]
  426ee5:	add    bl,dl
  426ee7:	inc    esi
  426ee8:	or     esp,DWORD PTR [ebp-0x32a2cee2]
  426eee:	jge    0x426f5d
  426ef0:	xchg   BYTE PTR [edi+0x3b0ff548],ah
  426ef6:	xchg   BYTE PTR [edi+0x7cf154fa],bh
  426efc:	test   DWORD PTR ds:0xbefb7354,eax
  426f02:	bound  esp,QWORD PTR [ebx-0x5]
  426f05:	cmp    al,0xe1
  426f07:	fsqrt  
  426f09:	not    DWORD PTR [ebp+0x5b]
  426f0c:	xchg   ecx,eax
  426f0e:	push   eax
  426f0f:	dec    esp
  426f10:	call   0xfbb6cfba
  426f15:	push   0xffffff9d
  426f17:	or     eax,0x61ad14fb
  426f1c:	cdq    
  426f1d:	add    BYTE PTR [ebx+ecx*4-0x20de0009],al
  426f24:	out    0x51,eax
  426f26:	out    0x88,eax
  426f28:	idiv   edi
  426f2a:	add    ebx,edi
  426f2c:	out    0x49,eax
  426f2e:	pop    ss
  426f2f:	mov    dh,bh
  426f31:	jmp    DWORD PTR [ecx]
  426f33:	jecxz  0x426f1c
  426f35:	inc    ecx
  426f36:	daa    
  426f37:	mov    dh,bh
  426f39:	inc    DWORD PTR [ecx]
  426f3b:	iret   
  426f3c:	out    0x39,eax
  426f3e:	aaa    
  426f3f:	mov    dh,bh
  426f41:	jmp    DWORD PTR [ecx]
  426f43:	repz out 0x31,eax
  426f46:	addr16 mov edi,esi
  426f49:	mov    al,BYTE PTR [eax]
  426f4b:	add    BYTE PTR [ecx-0x77],dh
  426f4e:	push   edi
  426f4f:	pop    esi
  426f50:	xchg   edi,eax
  426f51:	ret    
  426f52:	mov    ecx,0x8257ac0c
  426f57:	in     al,dx
  426f58:	cmp    eax,0xbc02b7fa
  426f5d:	or     cl,BYTE PTR [ebx-0x73]
  426f60:	outs   dx,BYTE PTR ds:[esi]
  426f61:	push   ds
  426f62:	dec    edi
  426f63:	lea    eax,[ecx]
  426f65:	ds cld 
  426f67:	dec    DWORD PTR [ebx-0x2b267dac]
  426f6d:	xchg   ebx,eax
  426f6e:	sbb    al,0xff
  426f70:	jnp    0x426ef8
  426f72:	ror    BYTE PTR [edi],0xf0
  426f75:	jmp    0x4885:0x7f7c0000
  426f7c:	cdq    
  426f7d:	mov    edi,esi
  426f7f:	push   eax
  426f80:	test   BYTE PTR [ebp+0x7d1bfea0],bh
  426f86:	clc    
  426f87:	mov    DWORD PTR [ecx],ecx
  426f89:	cli    
  426f8a:	test   bh,bh
  426f8c:	sub    eax,DWORD PTR [esi+0xa2c01bf]
  426f92:	add    DWORD PTR [edi],0xffffffa9
  426f95:	aas    
  426f96:	not    DWORD PTR [ecx-0x2b]
  426f99:	das    
  426f9a:	adc    DWORD PTR [eax-0x9f9f],0x8510a058
  426fa4:	imul   esp,DWORD PTR [ecx-0x1],0x801d5eff
  426fab:	xchg   ebp,ebx
  426fad:	int    0xd1
  426faf:	repz add BYTE PTR [eax],al
  426fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fb3:	mov    al,0x80
  426fb5:	push   ecx
  426fb6:	fxam   
  426fb8:	or     ebx,DWORD PTR ds:[eax-0x1a]
  426fbc:	std    
  426fbd:	call   ebp
  426fbf:	mov    dh,0xed
  426fc1:	pop    esi
  426fc2:	push   eax
  426fc3:	lods   eax,DWORD PTR ds:[esi]
  426fc4:	mov    bh,0x58
  426fc6:	in     eax,dx
  426fc7:	jmp    0xe8177069
  426fcc:	leave  
  426fcd:	repz aas 
  426fcf:	sbb    al,0x8c
  426fd1:	ret    0x9925
  426fd4:	adc    DWORD PTR [eax-0x53],ebx
  426fd7:	test   al,0x8e
  426fd9:	cli    
  426fda:	mov    dl,0x14
  426fdc:	repnz repz pop esi
  426fdf:	cmp    edi,DWORD PTR [eax-0x29]
  426fe2:	mov    edi,0xff926727
  426fe7:	imul   edi,DWORD PTR [ebx-0x6],0xffffff96
  426feb:	adc    DWORD PTR fs:[edi-0x2c],0x62
  426ff0:	jmp    DWORD PTR [ebp-0x7]
  426ff3:	(bad)  
  426ff5:	lea    eax,[eax]
  426ff7:	(bad)  
  426ff8:	fmul   QWORD PTR [eax+0x646c5af0]
  426ffe:	xor    al,0x63
  427000:	inc    DWORD PTR [esi+0x8874718]
  427006:	dec    eax
  427007:	push   ss
  427008:	pusha  
  427009:	dec    esi
  42700a:	pop    esi
  42700b:	(bad)  
  42700c:	into   
  42700d:	dec    edi
  42700e:	dec    edx
  42700f:	rcl    BYTE PTR [edi-0x16f62b00],cl
  427015:	mov    BYTE PTR [eax],al
  427017:	add    BYTE PTR ds:0xa88aebf7,dl
  42701d:	dec    ebp
  42701e:	cmp    DWORD PTR [ecx-0x7275938c],0x38e7998
  427028:	dec    esp
  427029:	out    dx,eax
  42702a:	js     0x427016
  42702c:	jns    0x4270ac
  42702e:	cld    
  42702f:	xchg   ebx,eax
  427030:	lods   eax,DWORD PTR ds:[esi]
  427031:	popa   
  427032:	mov    bh,0xa4
  427034:	aad    0x9
  427036:	outs   dx,BYTE PTR ds:[esi]
  427037:	leave  
  427038:	inc    BYTE PTR [eax+0x518890f1]
  42703e:	mov    bh,0x8a
  427040:	pop    es
  427041:	fdivr  DWORD PTR [eax-0x1669bb82]
  427047:	add    edx,ebp
  427049:	xchg   BYTE PTR [ecx],ch
  42704b:	stc    
  42704c:	loope  0x426fce
  42704e:	mov    esp,0x8888bd5b
  427053:	jle    0x427013
  427055:	sub    BYTE PTR [edi+esi*2+0x17008b2],0xa9
  42705d:	fisttp WORD PTR [edx+0x9d96090]
  427063:	jg     0x427003
  427065:	rcl    DWORD PTR [eax],1
  427067:	xor    DWORD PTR [ebp+0x9],0x76088ae9
  42706e:	pop    esi
  42706f:	fnstcw WORD PTR [edx+0x30]
  427072:	repnz mov esp,0x428f569
  427078:	into   
  427079:	(bad)
  42707c:	add    BYTE PTR [eax],al
  42707e:	xchg   BYTE PTR [eax+0x4520c54],al
  427084:	fcmovb st,st(7)
  427086:	test   DWORD PTR [esi-0x1c2c0857],eax
  42708c:	gs cmp edx,ebp
  42708f:	cmc    
  427090:	(bad)  
  427091:	jmp    0x42701c
  427093:	adc    DWORD PTR [ecx+ebp*1-0x27],edi
  427097:	xlat   BYTE PTR ds:[ebx]
  427098:	dec    ebp
  427099:	cmp    BYTE PTR [esi+eax*4+0x50],ah
  42709d:	sahf   
  42709e:	mov    bl,0x70
  4270a0:	push   eax
  4270a1:	fs sbb eax,0xee815074
  4270a7:	jnp    0x4270a3
  4270a9:	xchg   BYTE PTR [edi+0x45],dl
  4270ac:	adc    al,0x7e
  4270ae:	or     eax,0x7e79875c
  4270b3:	aas    
  4270b4:	pop    ecx
  4270b5:	outs   dx,BYTE PTR ds:[esi]
  4270b6:	xor    DWORD PTR [eax+0x75],0x5d
  4270ba:	outs   dx,BYTE PTR ds:[esi]
  4270bb:	inc    edi
  4270bc:	pop    ecx
  4270bd:	pop    esi
  4270be:	jae    0x427046
  4270c0:	repnz (bad) 
  4270c2:	aam    0x1b
  4270c4:	xlat   BYTE PTR ds:[ebx]
  4270c5:	gs jg  0x4270c8
  4270c8:	test   BYTE PTR [ebx-0x2a],ch
  4270cb:	or     DWORD PTR [eax],eax
  4270cd:	rol    ebx,cl
  4270cf:	jle    0x427146
  4270d1:	dec    ecx
  4270d2:	scas   al,BYTE PTR es:[edi]
  4270d3:	sbb    eax,0xaa6941d7
  4270d8:	add    cl,ch
  4270da:	(bad)
  4270de:	push   edi
  4270df:	inc    edi
  4270e0:	add    al,0xbe
  4270e2:	add    BYTE PTR [eax],al
  4270e4:	pop    edi
  4270e5:	dec    eax
  4270e6:	push   eax
  4270e7:	bound  ecx,QWORD PTR [ebp+0x1a50e86f]
  4270ed:	outs   dx,DWORD PTR ds:[esi]
  4270ee:	sti    
  4270ef:	gs push ss
  4270f1:	idiv   ch
  4270f3:	not    BYTE PTR [esp+eiz*8]
  4270f6:	imul   ebx,DWORD PTR [ebp+edi*2+0x4b],0x8b6ad158
  4270fe:	add    cl,ch
  427100:	arpl   bp,ax
  427102:	idiv   DWORD PTR [ecx]
  427104:	add    BYTE PTR [edx+eax*8-0x43ab3c7],0x0
  42710c:	test   BYTE PTR [esi-0x4],bh
  42710f:	call   DWORD PTR [ebx+0x3e74c082]
  427115:	in     eax,dx
  427116:	mov    edx,0x757b016a
  42711b:	loopne 0x4270b1
  42711d:	fisttp QWORD PTR [ebx-0x60]
  427120:	cmp    al,0x7
  427122:	lea    eax,[ebp+0x44]
  427125:	push   esi
  427126:	dec    esi
  427127:	mov    edi,DWORD PTR [edx+0x56]
  42712a:	add    BYTE PTR [ebp+0x50],0xde
  42712e:	pop    esi
  42712f:	cld    
  427130:	xchg   ebx,eax
  427131:	in     al,dx
  427132:	add    eax,0x8
  427135:	or     esi,esi
  427137:	ret    
  427138:	js     0x42710a
  42713a:	jae    0x42714a
  42713c:	jae    0x4271b0
  42713e:	repz mov eax,DWORD PTR [ecx-0x1]
  427142:	jp     0x42710c
  427144:	sbb    ebp,0xffffffb1
  427147:	mov    DWORD PTR [eax],eax
  427149:	add    BYTE PTR [edx-0x6b8a0914],dl
  42714f:	(bad)  [ebp-0x5a]
  427152:	adc    ch,ch
  427154:	cmp    BYTE PTR [ebp+0x10],0x4c
  427158:	add    BYTE PTR [ebp-0x10],0x80
  42715c:	or     BYTE PTR [eax-0xd],dl
  42715f:	push   esi
  427160:	add    ecx,DWORD PTR [ebx+0x50f655bb]
  427166:	mov    ah,0x4d
  427168:	stos   DWORD PTR es:[edi],eax
  427169:	add    DWORD PTR [edi-0x41],esp
  42716c:	mov    ecx,0x8253ac04
  427171:	in     al,dx
  427172:	std    
  427173:	stc    
  427174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427175:	add    bh,BYTE PTR [esi+eax*1+0x2b]
  427179:	rol    BYTE PTR [ebx+eax*2+0x3],0x53
  42717e:	adc    DWORD PTR [ebx+0x7aab56c0],0xffffffb5
  427185:	fs aad 0x53
  427188:	jl     0x427185
  42718a:	push   esi
  42718b:	mov    al,ds:0xe37ae7db
  427190:	(bad)  
  427191:	(bad)  
  427192:	mov    edi,0x1d758b0a
  427197:	sbb    BYTE PTR [esp+edx*8+0x62],ch
  42719b:	pusha  
  42719c:	jmp    DWORD PTR [edi-0x2f]
  42719f:	popa   
  4271a0:	(bad)  
  4271a1:	call   FWORD PTR [esi-0x5e]
  4271a4:	iret   
  4271a5:	mov    WORD PTR [eax-0x4],ss
  4271a8:	jl     0x4271a5
  4271aa:	and    dh,BYTE PTR [eax]
  4271ac:	mov    ecx,0xd5000001
  4271b1:	pusha  
  4271b2:	jg     0x427141
  4271b4:	push   eax
  4271b5:	or     al,0x7b
  4271b7:	sti    
  4271b8:	or     ah,bh
  4271ba:	aas    
  4271bb:	call   0x41cf12
  4271c0:	(bad)  
  4271c1:	jecxz  0x4271fa
  4271c3:	ret    
  4271c4:	loop   0x4271aa
  4271c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271c7:	add    ch,dl
  4271c9:	pusha  
  4271ca:	cmp    al,0xe2
  4271cd:	dec    edx
  4271ce:	sbb    DWORD PTR [esi+0x65ff60d5],0x32
  4271d5:	div    cl
  4271d7:	fild   QWORD PTR ds:0xadebf9ea
  4271dd:	lds    ebx,FWORD PTR [ebx-0x3e222b00]
  4271e3:	test   DWORD PTR ds:0x5852fe7d,0xa2fae2f6
  4271ed:	sbb    bh,cl
  4271ef:	dec    esi
  4271f0:	dec    esp
  4271f1:	scas   al,BYTE PTR es:[edi]
  4271f2:	ja     0x42717d
  4271f4:	adc    BYTE PTR [edi+0x77],bl
  4271f7:	adc    eax,0xffbf4321
  4271fc:	pop    ecx
  4271fd:	xor    esi,edx
  4271ff:	adc    ecx,DWORD PTR [eax+0xa]
  427202:	sub    al,0x70
  427204:	add    eax,0x5426dc1
  427209:	xchg   edi,eax
  42720a:	push   esp
  42720b:	jl     0x42727a
  42720d:	pop    ecx
  42720e:	dec    ebx
  42720f:	add    al,0xd5
  427211:	sbb    al,0xc2
  427213:	outs   dx,DWORD PTR ds:[esi]
  427214:	add    BYTE PTR [eax],al
  427216:	push   edx
  427217:	mov    WORD PTR [ecx-0x4730a385],?
  42721d:	xchg   DWORD PTR ds:0xb3143469,edi
  427223:	adc    DWORD PTR [ecx+eax*8+0x42],esi
  427227:	sar    DWORD PTR [eax],0x7b
  42722a:	rol    BYTE PTR [ecx],0xfb
  42722d:	ret    
  42722e:	and    cl,BYTE PTR [ebp+eiz*4+0x73c4b308]
  427235:	icebp  
  427236:	inc    esi
  427237:	ret    0x3d90
  42723a:	outs   dx,BYTE PTR ds:[esi]
  42723b:	or     ch,cl
  42723d:	shl    BYTE PTR [edi+0x4dd3a394],cl
  427243:	iret   
  427244:	pusha  
  427245:	mov    DWORD PTR [eax+0x69ebb975],ebx
  42724b:	shl    BYTE PTR [esi-0x40f184fd],cl
  427251:	add    al,0x48
  427253:	mov    edi,0xc5608940
  427258:	cmp    edi,DWORD PTR [ebx-0x32]
  42725b:	jno    0x427228
  42725d:	sbb    edi,DWORD PTR [esi-0x5106a198]
  427263:	sbb    al,0x29
  427265:	cmp    al,0x18
  427267:	adc    dl,BYTE PTR [ecx-0x16f62ab9]
  42726d:	or     cl,BYTE PTR [eax+0x49]
  427270:	inc    sp
  427272:	xor    al,0x72
  427274:	add    al,0x76
  427276:	mov    gs,WORD PTR [eax-0x66]
  427279:	fld    DWORD PTR [eax]
  42727b:	add    BYTE PTR [ebx],ah
  42727d:	push   ebx
  42727e:	add    BYTE PTR [ebx],ch
  427280:	aad    0x9
  427282:	push   ebp
  427283:	(bad)  
  427284:	in     eax,dx
  427285:	mov    ch,ah
  427287:	jne    0x427261
  427289:	or     DWORD PTR [eax],eax
  42728b:	cmp    al,BYTE PTR [edi+0x4c3b65bb]
  427291:	fidivr WORD PTR [edi+0x31]
  427294:	jmp    0xd72c0d02
  427299:	icebp  
  42729a:	add    ebp,eax
  42729c:	(bad)  
  42729d:	or     DWORD PTR [edi],ebp
  42729f:	xchg   edx,eax
  4272a0:	sub    ecx,DWORD PTR [edi-0x59b3e63e]
  4272a6:	js     0x42724c
  4272a8:	scas   eax,DWORD PTR es:[edi]
  4272a9:	fs mov eax,0x8009d6eb
  4272af:	cmp    DWORD PTR [ecx-0x1b],0x6153e8ff
  4272b6:	sti    
  4272b7:	not    BYTE PTR [edx-0x291701ec]
  4272bd:	and    BYTE PTR [edi-0x1f37d1a],bh
  4272c3:	call   0xba06039e
  4272c8:	outs   dx,DWORD PTR ds:[esi]
  4272c9:	(bad)  
  4272ca:	pop    ss
  4272cb:	clc    
  4272cc:	push   ss
  4272cd:	push   0x2086ac88
  4272d2:	mov    edi,0x1785ade
  4272d7:	jmp    0x6c9162b2
  4272dc:	int    0x4b
  4272de:	pop    eax
  4272df:	inc    ecx
  4272e0:	add    BYTE PTR [eax],al
  4272e2:	lahf   
  4272e3:	add    DWORD PTR [eax],0x504b4be9
  4272e9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4272eb:	push   edi
  4272ec:	sti    
  4272ed:	hlt    
  4272ee:	jle    0x427308
  4272f0:	inc    eax
  4272f1:	jmp    0x654e19d9
  4272f6:	or     ecx,DWORD PTR [ecx]
  4272f8:	add    BYTE PTR [eax],al
  4272fa:	jl     0x42733c
  4272fc:	dec    edx
  4272fd:	lea    edi,[ecx]
  4272ff:	fist   WORD PTR [eax-0x73]
  427302:	cmp    ebx,ebp
  427304:	push   eax
  427305:	(bad)  
  427306:	fmul   QWORD PTR [ecx-0x66fef040]
  42730c:	add    DWORD PTR [eax],eax
  42730e:	jl     0x4272a6
  427310:	inc    ebp
  427311:	loopne 0x42730a
  427313:	adc    eax,0x4024558d
  427318:	mov    WORD PTR [ebp-0x78],ss
  42731b:	inc    eax
  42731c:	dec    ebx
  42731d:	mov    ecx,ebp
  42731f:	in     eax,0xf6
  427321:	push   ecx
  427322:	nop
  427323:	out    0xbf,al
  427325:	cmpxchg DWORD PTR [edx+0x0],esp
  427329:	add    BYTE PTR [esi+edx*4],bh
  42732c:	inc    ebp
  42732d:	loopne 0x4272d6
  42732f:	adc    eax,0x4060558d
  427334:	mov    WORD PTR [ebp+0x6c],ss
  427337:	inc    eax
  427338:	gs adc bh,ch
  42733b:	loopne 0x4273b1
  42733d:	fmul   DWORD PTR [ebx-0x74af388a]
  427343:	cmp    dh,BYTE PTR [ebx]
  427345:	test   DWORD PTR [eax],eax
  427347:	add    BYTE PTR [ecx+edx*1],ch
  42734a:	test   DWORD PTR [ebx-0x3],ecx
  42734d:	or     al,BYTE PTR [eax]
  42734f:	or     DWORD PTR [ecx],0xffffffcb
  427352:	add    ecx,DWORD PTR [edi]
  427354:	jno    0x42737b
  427356:	add    DWORD PTR [eax],eax
  427358:	in     al,dx
  427359:	xchg   ebp,eax
  42735a:	inc    ebp
  42735b:	aam    0x47
  42735d:	push   ss
  42735e:	lea    edx,[ebp+0x24]
  427361:	inc    eax
  427362:	arpl   WORD PTR [eax],ax
  427364:	lods   al,BYTE PTR ds:[esi]
  427365:	sub    al,BYTE PTR [eax]
  427367:	push   eax
  427368:	jmp    0x4273a4
  42736a:	xor    eax,DWORD PTR [ebp+0x1e8510fc]
  427370:	mov    ebp,0xd58b000a
  427375:	mov    ch,0x67
  427377:	xchg   ebp,ecx
  427379:	(bad)
  42737c:	daa    
  42737d:	test   bh,cl
  42737f:	cli    
  427380:	and    al,0x4d
  427382:	jp     0x427344
  427384:	shl    ch,cl
  427386:	js     0x427388
  427388:	aad    0x70
  42738a:	mov    WORD PTR [ebp+0x7d],es
  42738d:	fild   DWORD PTR [esi]
  42738f:	lea    eax,[eax]
  427391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427392:	aad    0x4e
  427394:	(bad)  
  427395:	lds    ecx,FWORD PTR [ebx+0x50]
  427398:	pop    edx
  427399:	and    eax,ecx
  42739b:	test   BYTE PTR ds:0xd5e27a5f,dl
  4273a1:	jo     0x4273a2
  4273a3:	xchg   BYTE PTR [eax+0x455d867c],bl
  4273a9:	pop    ecx
  4273aa:	pop    ss
  4273ab:	or     eax,DWORD PTR [eax]
  4273ad:	add    BYTE PTR [ebx-0x62],bl
  4273b0:	(bad)  
  4273b1:	call   ebp
  4273b3:	(bad)  
  4273b5:	jecxz  0x427405
  4273b7:	sub    eax,0x71a18d60
  4273bc:	sti    
  4273bd:	mov    BYTE PTR [eax-0x2ea5ca1c],dh
  4273c3:	ja     0x427346
  4273c5:	xchg   ebx,eax
  4273c6:	aad    0x70
  4273c8:	dec    DWORD PTR [eax+0x428be498]
  4273ce:	fnsave [ebx-0x46]
  4273d1:	jmp    0x42737a
  4273d3:	retf   
  4273d4:	mov    ecx,DWORD PTR [eax]
  4273d6:	push   esp
  4273d7:	leave  
  4273d8:	sbb    BYTE PTR [eax],al
  4273da:	(bad)  
  4273db:	add    al,dh
  4273dd:	and    ebx,DWORD PTR [esi+eiz*4]
  4273e0:	in     eax,dx
  4273e1:	xchg   BYTE PTR [ebp+0x5b],cl
  4273e4:	in     eax,dx
  4273e5:	aas    
  4273e6:	pop    ds
  4273e7:	call   0xc55f5c2b
  4273ec:	js     0x4273e9
  4273ee:	pop    eax
  4273ef:	or     ch,BYTE PTR [ecx]
  4273f1:	out    dx,eax
  4273f2:	or     eax,0x9e4b65bd
  4273f7:	xchg   edi,eax
  4273f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273f9:	jnp    0x4273a8
  4273fb:	add    esp,DWORD PTR [edx+0x79]
  4273fe:	mov    ss,WORD PTR [eax-0x6f3f93df]
  427404:	or     DWORD PTR [ebx],0x405dca33
  42740a:	ins    DWORD PTR es:[edi],dx
  42740b:	das    
  42740c:	pop    ebx
  42740d:	jns    0x42747d
  42740f:	(bad)
  427413:	add    BYTE PTR [ebp-0x1dfbb144],ch
  427419:	push   ecx
  42741a:	shr    BYTE PTR [edi+eax*4-0x72],cl
  42741e:	retf   
  42741f:	ja     0x42747b
  427421:	bound  ebp,QWORD PTR [edi+esi*2-0x3f]
  427425:	adc    edx,DWORD PTR [edx]
  427427:	or     DWORD PTR ds:0x42c96465,0x72
  42742e:	sar    DWORD PTR [esi+0x2f],0x65
  427432:	outs   dx,DWORD PTR ds:[esi]
  427433:	pop    esp
  427434:	xchg   BYTE PTR [ecx+0x45],dh
  427437:	mov    ds:0x5b6d651f,eax
  42743c:	mov    eax,ds:0x7d43d5f9
  427441:	add    DWORD PTR ds:0x6c250ac4,eax
  427447:	leave  
  427448:	or     dh,BYTE PTR [edx-0x5b]
  42744b:	jle    0x42744c
  42744d:	fs push 0xffffffc1
  427450:	out    0x90,al
  427452:	lods   al,BYTE PTR ds:[esi]
  427453:	outs   dx,DWORD PTR ds:[esi]
  427454:	push   0xffffffce
  427456:	dec    esp
  427457:	adc    al,0xaa
  427459:	retf   
  42745a:	in     al,dx
  42745b:	push   es
  42745c:	pop    ebx
  42745d:	repz dec ecx
  42745f:	ja     0x42742f
  427461:	sbb    BYTE PTR [esi],bl
  427463:	mov    edx,DWORD PTR [eax]
  427465:	data16 cmp ch,dh
  427468:	ficom  DWORD PTR [eax+0x5fa6e100]
  42746e:	push   ecx
  42746f:	shr    DWORD PTR [ebx],1
  427471:	iret   
  427472:	out    dx,eax
  427473:	jb     0x427409
  427475:	inc    eax
  427476:	xchg   DWORD PTR [eax+eax*1+0x44e52600],ebp
  42747d:	or     eax,0xde081ccd
  427482:	push   esp
  427483:	push   ds
  427484:	sti    
  427485:	push   es
  427486:	add    cl,BYTE PTR [ebp-0x5b002b3]
  42748c:	dec    edi
  42748d:	cwde   
  42748e:	add    edx,esp
  427490:	pop    ss
  427491:	bound  edx,QWORD PTR [esp+ebp*2+0x5f86f187]
  427498:	push   ecx
  427499:	icebp  
  42749a:	dec    edi
  42749b:	into   
  42749c:	shl    DWORD PTR [edx-0x32],cl
  42749f:	mov    ecx,0x8ce138fa
  4274a4:	inc    ebp
  4274a5:	(bad)
  4274a8:	xlat   BYTE PTR ds:[ebx]
  4274a9:	jb     0x427479
  4274ab:	mov    ecx,0x8cd918fa
  4274b0:	inc    ebp
  4274b1:	leave  
  4274b2:	pop    edi
  4274b3:	adc    DWORD PTR [eax-0x5a],edx
  4274b6:	add    DWORD PTR [edi+eax*4],ecx
  4274b9:	and    al,0x9d
  4274bb:	mov    WORD PTR [eax],cs
  4274bd:	cmp    DWORD PTR [edx+0xd6207ba],esp
  4274c3:	pop    esp
  4274c4:	push   0x9d6b5
  4274c9:	adc    ebp,DWORD PTR [eax]
  4274cb:	mov    esp,0x60863ce7
  4274d0:	sti    
  4274d1:	outs   dx,BYTE PTR ds:[esi]
  4274d2:	in     eax,0x53
  4274d4:	sti    
  4274d5:	cld    
  4274d6:	and    dl,BYTE PTR [ebx]
  4274d8:	inc    eax
  4274d9:	jmp    0x209936e9
  4274de:	add    BYTE PTR [eax],al
  4274e0:	xchg   edi,eax
  4274e1:	mov    esi,0x76593d86
  4274e6:	les    eax,FWORD PTR [eax]
  4274e8:	mov    ebp,0x6a530007
  4274ed:	push   esp
  4274ee:	arpl   WORD PTR [eax],cx
  4274f0:	fwait
  4274f1:	inc    edi
  4274f2:	sti    
  4274f3:	addr16 aam 0x12
  4274f6:	inc    eax
  4274f7:	add    ah,al
  4274f9:	mov    bl,0x55
  4274fb:	inc    ebx
  4274fd:	(bad)  
  4274fe:	clc    
  4274ff:	mov    DWORD PTR [ecx-0x19],eax
  427502:	test   bh,bh
  427504:	mov    bl,0xe3
  427506:	mov    BYTE PTR [ecx],al
  427508:	jl     0x427511
  42750a:	bound  edx,QWORD PTR [ebp-0xf]
  42750d:	pop    ecx
  42750e:	retf   
  42750f:	pop    eax
  427510:	aam    0x59
  427512:	xchg   edi,eax
  427513:	add    BYTE PTR [ecx+esi*2+0x51],bh
  427517:	lea    ecx,[ecx]
  427519:	jmp    0x0:0x8206e857
  427520:	mul    DWORD PTR [edx+edi*2+0x65]
  427524:	sub    BYTE PTR [esi],cl
  427526:	or     esi,0xffffffed
  427529:	mov    cl,BYTE PTR [ebp-0x30]
  42752c:	fst    QWORD PTR [esi+esi*8+0x50]
  427530:	xor    ah,ah
  427532:	mov    edi,0x49b90f
  427537:	add    BYTE PTR [edx+edx*4],bh
  42753a:	dec    DWORD PTR [ecx+esi*8+0x435750e5]
  427541:	sbb    eax,DWORD PTR ds:[ebp+0xd3c0000]
  427548:	test   DWORD PTR [edx],esi
  42754a:	std    
  42754b:	push   es
  42754c:	add    BYTE PTR [edx-0x15],ch
  42754f:	mov    dh,BYTE PTR [ebp-0x9237d58]
  427555:	pop    eax
  427556:	push   esp
  427557:	pop    ss
  427558:	pushf  
  427559:	add    ah,bh
  42755b:	xchg   ecx,eax
  42755c:	inc    ebp
  42755d:	clc    
  42755e:	addr16 adc eax,0xa1d5ff50
  427564:	add    ebp,ecx
  427566:	shl    DWORD PTR [eax-0x1],1
  427569:	call   FWORD PTR [eax-0x7b]
  42756c:	arpl   WORD PTR [esi+0x25],cx
  42756f:	and    al,0xcf
  427571:	adc    edx,DWORD PTR [eax+0x30]
  427574:	add    eax,0xff70c185
  427579:	call   FWORD PTR [esi-0x4b]
  42757c:	arpl   WORD PTR [edi-0x10350a33],ax
  427582:	pop    es
  427583:	mov    DWORD PTR [edi],edx
  427585:	adc    edx,DWORD PTR ds:0xe4facf71
  42758b:	cmc    
  42758c:	inc    ebx
  42758d:	or     ebx,DWORD PTR [eax+0x16]
  427590:	add    al,0x0
  427592:	aad    0x32
  427594:	mov    ebx,0xad43d4fa
  427599:	inc    ebp
  42759a:	push   0x20
  42759c:	add    DWORD PTR [ebp-0x48bbdd3],0x5
  4275a3:	(bad)  
  4275a4:	das    
  4275a5:	push   edi
  4275a6:	pusha  
  4275a7:	xchg   ebp,eax
  4275a8:	mov    edi,0x4a0000f9
  4275ad:	dec    ebx
  4275ae:	addr16 mov esp,0x5974a251
  4275b4:	pushf  
  4275b5:	cmc    
  4275b6:	or     esp,DWORD PTR ds:[ebx-0x46]
  4275ba:	(bad)  
  4275bb:	call   ebp
  4275bd:	xlat   BYTE PTR ds:[ebx]
  4275be:	mov    ecx,0xd90cafef
  4275c3:	mov    WORD PTR [eax+0x604ed188],es
  4275c9:	fld    QWORD PTR [esi]
  4275cb:	sti    
  4275cc:	or     cl,BYTE PTR [ebx-0x282a9a2f]
  4275d2:	dec    ebx
  4275d3:	dec    esi
  4275d4:	dec    esp
  4275d5:	std    
  4275d6:	imul   eax,DWORD PTR [edi+0x517500dd],0xffffffd9
  4275dd:	or     DWORD PTR [ebx+eax*2+0x68],ebp
  4275e1:	(bad)
  4275e4:	sbb    BYTE PTR [ecx],dl
  4275e6:	push   edx
  4275e7:	je     0x4275b7
  4275e9:	or     bl,BYTE PTR [esi+edi*2-0x23]
  4275ed:	pusha  
  4275ee:	inc    edx
  4275ef:	je     0x42763a
  4275f1:	add    ch,dl
  4275f3:	lods   al,BYTE PTR ds:[esi]
  4275f4:	dec    eax
  4275f5:	adc    dh,BYTE PTR [edx]
  4275f7:	je     0x4275a7
  4275f9:	call   0xd657f063
  4275fe:	cmc    
  4275ff:	adc    BYTE PTR [ebp-0x325315f4],0xe7
  427606:	imul   ecx,DWORD PTR [edx+0x8],0x71
  42760a:	add    DWORD PTR [eax+0x17cc9cd],0x0
  427611:	add    BYTE PTR [edx+0x1436449],dh
  427617:	sbb    al,0x64
  427619:	jle    0x4275f8
  42761b:	pusha  
  42761c:	jmp    0x5073:0xb18d0573
  427623:	iret   
  427624:	aam    0x5c
  427626:	pop    edi
  427627:	xchg   bl,dl
  427629:	jae    0x427684
  42762b:	dec    edx
  42762c:	push   ebp
  42762d:	adc    dl,bh
  42762f:	dec    ecx
  427630:	push   ecx
  427631:	or     al,0xc1
  427633:	leave  
  427634:	call   0xbd11bffc
  427639:	pop    esp
  42763a:	cmp    eax,DWORD PTR [esi+0x143273ab]
  427640:	data16 ins BYTE PTR es:[edi],dx
  427642:	stos   DWORD PTR es:[edi],eax
  427643:	aad    0xe3
  427645:	xchg   BYTE PTR ds:0xf001c0b,bl
  42764b:	(bad)  
  42764c:	mov    DWORD PTR [eax+ebp*4],ebp
  42764f:	pusha  
  427650:	repnz mov DWORD PTR [edi+0x52737a60],edx
  427657:	(bad)  
  427658:	(bad)  
  427659:	js     0x4276cd
  42765b:	adc    DWORD PTR [eax+0x6e],edx
  42765e:	add    BYTE PTR [ecx],cl
  427660:	xchg   esp,esp
  427662:	jbe    0x4275ec
  427664:	inc    ebp
  427665:	dec    ebp
  427666:	pop    edx
  427667:	adc    DWORD PTR [eax+0x56],edx
  42766a:	test   al,0x8
  42766c:	xchg   DWORD PTR [esi+edi*1+0x47990889],esp
  427673:	mov    ebx,0x640f
  427678:	adc    DWORD PTR [ecx+0x12323145],ecx
  42767e:	or     esp,DWORD PTR [ebp+0x37]
  427681:	fs sti 
  427683:	mov    DWORD PTR es:[ebx+0x51],esp
  427687:	icebp  
  427688:	sbb    ecx,DWORD PTR ds:0x8a91653
  42768e:	xchg   DWORD PTR [edx+eax*1-0x2916340e],ecx
  427695:	or     DWORD PTR [esi-0x6b],esp
  427698:	mov    gs,WORD PTR [eax-0xe]
  42769b:	pop    es
  42769c:	out    0x64,al
  42769e:	pop    ebx
  42769f:	(bad)  
  4276a0:	fwait
  4276a1:	push   ecx
  4276a2:	mov    edi,0xd790138
  4276a7:	fsubrp st(7),st
  4276a9:	sbb    eax,0xe7d75b04
  4276ae:	inc    eax
  4276b0:	mov    dh,0x57
  4276b2:	sti    
  4276b3:	(bad)  
  4276b4:	sahf   
  4276b5:	adc    eax,0x68c7befa
  4276ba:	push   es
  4276bb:	shr    DWORD PTR ds:0x8eaefb5c,0x42
  4276c2:	mul    DWORD PTR [esi-0x64998e59]
  4276c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276c9:	fs callw 0x177c
  4276ce:	test   BYTE PTR [esi+0xbec287],0xe1
  4276d5:	loopne 0x4276c2
  4276d7:	or     DWORD PTR [eax-0x5c],0x0
  4276de:	cld    
  4276df:	xchg   BYTE PTR [ebp-0x4],ah
  4276e2:	cld    
  4276e3:	inc    ecx
  4276e4:	dec    esi
  4276e5:	push   0xffffffef
  4276e7:	dec    ebp
  4276e8:	xor    al,0x84
  4276eb:	imul   eax,DWORD PTR [edx+0x3ce02bfe],0xffffff98
  4276f2:	into   
  4276f3:	dec    ebx
  4276f4:	sti    
  4276f5:	test   ah,ch
  4276f7:	push   esi
  4276f8:	add    dl,BYTE PTR [esi-0x5]
  4276fb:	ret    
  4276fc:	mov    BYTE PTR [ebp-0x1c],al
  4276ff:	fnsave [esp+esi*8+0x17]
  427703:	add    al,0x8d
  427705:	inc    ebp
  427706:	xor    al,0x3d
  427708:	outs   dx,DWORD PTR ds:[esi]
  427709:	mov    DWORD PTR [ecx-0x29],esi
  42770c:	xor    al,0x44
  42770f:	aam    0x44
  427711:	clc    
  427712:	js     0x42771f
  427714:	add    BYTE PTR [eax],al
  427716:	in     al,0x59
  427718:	xchg   ebp,eax
  427719:	add    BYTE PTR [eax+edi*1-0xa],ch
  42771d:	xlat   BYTE PTR ds:[ebx]
  42771e:	add    eax,0x648bba00
  427723:	mov    ebx,0xd97b81f6
  427728:	(bad)  
  427729:	jmp    FWORD PTR [eax+esi*2+0x4a]
  42772d:	lea    edi,[ecx+0x1bfff6ad]
  427733:	fnstsw WORD PTR [edx-0x96de418]
  427739:	push   DWORD PTR [eax-0x4bd8c3b]
  42773f:	adc    al,0xc9
  427741:	xor    eax,DWORD PTR [eax]
  427743:	add    BYTE PTR [edx-0x79],ah
  427746:	idiv   DWORD PTR [esi-0x4]
  427749:	sub    eax,0x7c1f875
  42774e:	sub    esi,esi
  427750:	aad    0xeb
  427752:	ret    0x5ff3
  427755:	gs out dx,eax
  427757:	sub    eax,0xfaa65659
  42775c:	cli    
  42775d:	fistp  QWORD PTR [ecx-0x6c]
  427760:	loopne 0x42777a
  427762:	outs   dx,BYTE PTR ds:[esi]
  427763:	sti    
  427764:	jmp    0x3be6:0xd76f459a
  42776b:	es pop ss
  42776d:	jo     0x427728
  42776f:	sar    BYTE PTR [ebx],0xea
  427772:	pop    es
  427773:	inc    edi
  427774:	adc    al,0xa7
  427776:	sub    al,0xcb
  427778:	inc    ecx
  427779:	add    DWORD PTR ds:0x7da33c0,esi
  42777f:	inc    edi
  427780:	pop    esp
  427781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427782:	imul   eax,DWORD PTR [edi+0x59d12d10],0xffffff8c
  427789:	xor    edx,ebx
  42778b:	xchg   BYTE PTR [ecx+0x2b4c5ff3],ch
  427791:	mov    esi,edx
  427793:	mov    WORD PTR [eax],es
  427795:	adc    esp,ecx
  427797:	out    0x82,eax
  427799:	jmp    0xd73177a1
  42779e:	jns    0x427815
  4277a0:	mov    eax,ds:0x4cf45778
  4277a5:	jo     0x4277a6
  4277a7:	add    BYTE PTR gs:[eax],al
  4277aa:	jmp    0x5638:0xfdb3f1d5
  4277b1:	cdq    
  4277b2:	aad    0x70
  4277b4:	jl     0x427803
  4277b6:	fnstsw WORD PTR [ebp+0x2d4cdfc1]
  4277bc:	js     0x42774b
  4277be:	nop
  4277bf:	lods   al,BYTE PTR ds:[esi]
  4277c0:	jbe    0x427807
  4277c2:	sub    eax,0x908948eb
  4277c7:	lods   al,BYTE PTR ds:[esi]
  4277c8:	xor    al,0xc0
  4277ca:	test   DWORD PTR [ecx],ecx
  4277cc:	cmp    esp,edx
  4277ce:	pop    ds
  4277cf:	aam    0xec
  4277d1:	jle    0x42777b
  4277d3:	push   ebp
  4277d4:	add    DWORD PTR [ebp-0x5c],edx
  4277d7:	retf   
  4277d8:	call   0xe63651ba
  4277dd:	pop    ebx
  4277de:	leave  
  4277df:	cli    
  4277e0:	jns    0x427852
  4277e2:	(bad)  
  4277e3:	push   eax
  4277e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277e5:	sti    
  4277e6:	jmp    0x6165:0x625f5db4
  4277ed:	sub    cl,0x84
  4277f0:	out    0x3,eax
  4277f2:	aad    0xb8
  4277f4:	mov    edx,0x5bb5bb7c
  4277f9:	xchg   edi,eax
  4277fa:	stc    
  4277fb:	xchg   ecx,eax
  4277fc:	jmp    0xa3d14d04
  427801:	pop    ds
  427802:	and    edx,DWORD PTR [ecx-0xa13a4f0]
  427808:	sub    DWORD PTR [eax+0x59],esi
  42780b:	dec    edx
  42780c:	xacquire xchg DWORD PTR [eax],eax
  42780f:	add    BYTE PTR [eax-0x78fc16f5],dh
  427815:	add    al,0xf9
  427817:	mul    ecx
  427819:	pop    esp
  42781a:	xchg   esp,eax
  42781b:	sti    
  42781c:	push   ecx
  42781d:	xchg   ch,cl
  42781f:	jg     0x4277f6
  427821:	or     ecx,ebp
  427823:	sar    DWORD PTR [edx-0x1c],cl
  427826:	icebp  
  427827:	outs   dx,DWORD PTR ds:[esi]
  427828:	outs   dx,BYTE PTR ds:[esi]
  427829:	jae    0x427849
  42782b:	add    dl,ch
  42782d:	or     DWORD PTR [esi+0x39],ebp
  427830:	(bad)  
  427832:	sub    BYTE PTR [edi*4-0x2afe16f9],al
  427839:	out    dx,eax
  42783a:	loopne 0x4278aa
  42783c:	or     BYTE PTR [esi+0x5c3ac3ab],bl
  427842:	xchg   ebx,eax
  427843:	jnp    0x427872
  427845:	sbb    DWORD PTR [eax],eax
  427847:	xchg   edx,eax
  427848:	(bad)  
  427849:	push   esp
  42784a:	or     esp,DWORD PTR [ebp+0x3f]
  42784d:	or     eax,DWORD PTR [eax]
  42784f:	jmp    0x7166fea9
  427854:	(bad)  [ecx]
  427856:	add    BYTE PTR [ecx],bh
  427858:	sub    DWORD PTR [eax-0x5],esp
  42785b:	jmp    0x1a913136
  427860:	test   DWORD PTR es:[ebp+eax*8-0x3e],ebx
  427865:	pusha  
  427866:	adc    eax,0xffc9c175
  42786b:	sbb    BYTE PTR [esi+0x50],bl
  42786e:	mov    DWORD PTR [ebp-0x2276d24e],ebp
  427874:	add    BYTE PTR [eax],al
  427876:	cli    
  427877:	sbb    DWORD PTR [ecx-0x17ea0d4b],ecx
  42787d:	lods   eax,DWORD PTR ds:[esi]
  42787e:	hlt    
  42787f:	or     DWORD PTR [eax],eax
  427881:	ins    DWORD PTR es:[edi],dx
  427882:	adc    DWORD PTR [ecx],edx
  427884:	test   bl,dl
  427886:	(bad)  [ecx]
  427888:	add    cl,al
  42788a:	test   BYTE PTR ds:0x47ce900,0xfb
  427891:	fsubr  QWORD PTR [edx+0x47]
  427894:	aas    
  427895:	jmp    0xadcbb09d
  42789a:	mov    dl,0xf5
  42789c:	sub    al,BYTE PTR ss:[edx-0x2917b478]
  4278a3:	or     DWORD PTR ds:0x9d9ff,eax
  4278a9:	pusha  
  4278aa:	popf   
  4278ab:	sub    BYTE PTR [eax],bl
  4278ad:	in     al,0xf0
  4278af:	or     al,BYTE PTR [eax]
  4278b1:	jmp    0xf9663e8f
  4278b6:	fstp   QWORD PTR [edi+0x1]
  4278b9:	jmp    0x60ba5c94
  4278be:	sbb    ch,BYTE PTR [eax]
  4278c0:	and    BYTE PTR [eax],al
  4278c2:	rcl    DWORD PTR [edi+ebx*1+0x38],0xf4
  4278c7:	mov    ebp,0x83c98d7
  4278cc:	bound  edi,QWORD PTR [ecx-0x7f]
  4278cf:	push   esp
  4278d0:	pop    ds
  4278d1:	inc    eax
  4278d2:	xchg   esp,eax
  4278d3:	mov    ebp,0x7fc98cb
  4278d8:	bound  edi,QWORD PTR [edx+0x0]
  4278db:	add    BYTE PTR [ecx+0x54],dh
  4278de:	pop    ds
  4278df:	dec    esp
  4278e0:	les    edi,FWORD PTR [ebp+0x7ec98bf]
  4278e6:	bound  edi,QWORD PTR [ebx-0x7f]
  4278e9:	push   esp
  4278ea:	pop    ds
  4278eb:	pop    eax
  4278ec:	les    edi,FWORD PTR [ebp+0x7ec98b3]
  4278f2:	jmp    0x4a65d4
  4278f7:	lea    edi,[eax]
  4278f9:	and    ecx,DWORD PTR [eax+0x5007bc00]
  4278ff:	mov    esi,0x713
  427904:	pop    edx
  427905:	in     al,dx
  427906:	jae    0x42792c
  427908:	nop
  427909:	mov    al,BYTE PTR [esp+0x7c]
  42790d:	cmp    BYTE PTR [ebx+0x57],cl
  427910:	repz add esp,edi
  427913:	adc    BYTE PTR [edi+eax*1-0x7b],ch
  427917:	rol    BYTE PTR [ebx+0x7c00ae83],0x7
  42791e:	lea    eax,[eax+ebx*4+0x6cffffdf]
  427925:	aaa    
  427926:	gs adc eax,0x441f4301
  42792c:	dec    esp
  42792d:	xor    al,0xf6
  42792f:	adc    eax,0x3ff66c
  427934:	in     eax,0x51
  427936:	pop    ds
  427937:	and    BYTE PTR [ebx+ebp*1],al
  42793a:	idiv   bh
  42793c:	aad    0x70
  42793e:	dec    DWORD PTR [edx]
  427940:	add    BYTE PTR [eax],al
  427942:	pop    edx
  427943:	loope  0x427948
  427945:	add    ch,dl
  427947:	aad    0x87
  427949:	and    al,0x5d
  42794b:	jno    0x42794c
  42794d:	inc    DWORD PTR [ebp-0x68b9306]
  427953:	adc    BYTE PTR [ebx+0x44],bh
  427956:	icebp  
  427957:	sbb    al,0xd1
  427959:	dec    edi
  42795a:	stos   BYTE PTR es:[edi],al
  42795b:	jnp    0x427970
  42795d:	cld    
  42795e:	in     eax,0x30
  427960:	add    al,0x85
  427962:	adc    eax,0x518cedf5
  427967:	dec    ebp
  427968:	ja     0x42796a
  42796a:	aad    0x70
  42796c:	iret   
  42796d:	push   ecx
  42796e:	jmp    0x2825:0x5018235c
  427975:	pusha  
  427976:	xchg   BYTE PTR [eax-0x4317052c],ah
  42797c:	adc    eax,DWORD PTR [eax-0x2b]
  42797f:	in     eax,dx
  427980:	inc    ebx
  427981:	je     0x4279ac
  427983:	call   0xd8279d57
  427988:	inc    esp
  427989:	call   0xfbaf979a
  42798e:	push   eax
  42798f:	xor    dl,ch
  427991:	ds das 
  427993:	mov    ds:0x8cf1747a,al
  427998:	(bad)  
  427999:	out    0xde,eax
  42799b:	mov    BYTE PTR [eax+eax*1],al
  42799e:	mov    bh,BYTE PTR [ebx+eiz*1+0x20]
  4279a2:	dec    esi
  4279a3:	mov    WORD PTR [ebx],fs
  4279a5:	and    BYTE PTR [eax],al
  4279a7:	add    BYTE PTR [edx-0x24],bh
  4279aa:	and    bl,BYTE PTR [eax]
  4279ac:	pop    esi
  4279ad:	and    dl,cl
  4279af:	cli    
  4279b0:	loope  0x4279fe
  4279b2:	and    esi,DWORD PTR [edi-0x903c]
  4279b8:	add    eax,0x5d3ed10a
  4279bd:	pop    ebx
  4279be:	fiadd  DWORD PTR [eax+0x436bf511]
  4279c4:	mov    edi,0xd2f65df7
  4279c9:	mov    dl,0x6d
  4279cb:	cmp    eax,0x6d67d83d
  4279d0:	test   DWORD PTR cs:[ecx+0x235b23f7],ebp
  4279d7:	or     dl,ch
  4279d9:	ds je  0x4279a3
  4279dc:	mov    dh,0x25
  4279de:	xchg   ecx,eax
  4279df:	inc    eax
  4279e0:	mov    ch,0x9
  4279e2:	jmp    0x8e60775f
  4279e7:	cld    
  4279e8:	push   ecx
  4279e9:	stc    
  4279ea:	sub    DWORD PTR [esi+ebp*8+0x59],0x71c127f5
  4279f2:	(bad)  [ebp-0x304ea621]
  4279f8:	mov    dh,0x25
  4279fa:	fdiv   st(2),st
  4279fc:	iret   
  4279fd:	fiadd  WORD PTR [eax+eiz*1]
  427a00:	mov    ebp,0xbe6d730b
  427a05:	mov    ecx,0xb4d4b3aa
  427a0a:	ins    DWORD PTR es:[edi],dx
  427a0b:	data16 add BYTE PTR [eax],al
  427a0e:	adc    BYTE PTR [ebp+eiz*8+0x3],cl
  427a12:	add    BYTE PTR [ebp-0x714e7dbb],al
  427a18:	in     eax,0x3
  427a1a:	aad    0xbc
  427a1c:	mov    edx,0xd601f8d4
  427a21:	dec    eax
  427a22:	pop    eax
  427a23:	iret   
  427a24:	adc    al,dl
  427a26:	adc    bl,BYTE PTR [ecx-0xc]
  427a29:	or     esp,edi
  427a2b:	leave  
  427a2c:	call   0x8f4913b1
  427a31:	out    dx,eax
  427a32:	pop    ecx
  427a33:	(bad)  
  427a35:	pop    eax
  427a36:	mov    ?,WORD PTR [ecx+0x6f]
  427a39:	push   esi
  427a3a:	(bad)  
  427a3b:	or     DWORD PTR [esi+0x64],esp
  427a3e:	int3   
  427a3f:	fmulp  st(7),st
  427a41:	inc    ecx
  427a42:	test   eax,0xd6e992e1
  427a47:	xchg   ebx,eax
  427a48:	add    al,0xe8
  427a4a:	(bad)  
  427a4b:	or     DWORD PTR [edx+0x74],edx
  427a4e:	adc    al,0x49
  427a50:	push   eax
  427a51:	ins    BYTE PTR es:[edi],dx
  427a52:	adc    al,0x89
  427a54:	push   eax
  427a55:	fs ins BYTE PTR es:[edi],dx
  427a57:	cmp    ch,0xae
  427a5a:	scas   al,BYTE PTR es:[edi]
  427a5b:	xchg   ecx,eax
  427a5c:	(bad)  
  427a5d:	call   0xc82b0438
  427a62:	add    eax,0x716afb59
  427a67:	push   esp
  427a68:	je     0x427a2e
  427a6a:	stos   DWORD PTR es:[edi],eax
  427a6b:	cwde   
  427a6c:	jb     0x427a36
  427a6e:	add    al,0x86
  427a70:	test   DWORD PTR [ecx+0x0],ebp
  427a73:	add    BYTE PTR [edx+0x54],bh
  427a76:	sti    
  427a77:	sbb    DWORD PTR [edx+0x4c],esp
  427a7a:	push   eax
  427a7b:	outs   dx,BYTE PTR ds:[esi]
  427a7c:	les    esi,FWORD PTR [ecx-0x792956f3]
  427a82:	inc    ebp
  427a83:	popa   
  427a84:	mov    eax,ds:0x32698585
  427a89:	push   ebp
  427a8a:	sti    
  427a8b:	mov    ecx,0x46fd051e
  427a90:	adc    ebx,DWORD PTR ds:[ebp+0x3d]
  427a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a95:	jmp    0x91b7:0xdf1db765
  427a9c:	(bad)  
  427a9d:	stc    
  427a9e:	xchg   edx,eax
  427a9f:	jmp    0x27050b7a
  427aa4:	xchg   esp,eax
  427aa5:	jo     0x427ac6
  427aa7:	jmp    0xa5058482
  427aac:	and    al,BYTE PTR [eax]
  427aae:	add    BYTE PTR [eax],al
  427ab0:	jl     0x427abe
  427ab2:	mov    edi,0x2a6c45
  427ab7:	add    BYTE PTR [ebp+edx*8+0x44],ch
  427abb:	hlt    
  427abc:	pop    ds
  427abd:	fimul  DWORD PTR [ebp+eax*4-0x91e3c]
  427ac4:	or     al,0x41
  427ac6:	dec    edx
  427ac7:	jmp    DWORD PTR [eax+0xb53e89a]
  427acd:	stc    
  427ace:	das    
  427acf:	adc    edi,esp
  427ad1:	or     eax,0x3e1c085
  427ad6:	dec    ebx
  427ad7:	push   ebx
  427ad8:	add    BYTE PTR [eax],al
  427ada:	mov    edi,0xbcf844d2
  427adf:	xor    eax,0xdbe51ca
  427ae4:	bound  eax,QWORD PTR [edx]
  427ae6:	out    0xe,al
  427ae8:	lea    edx,[ebp+0x60]
  427aeb:	ror    DWORD PTR [eax+ecx*4-0x17091cb7],1
  427af2:	jmp    0xf690:0xb2fff6fb
  427af9:	add    ebx,esi
  427afb:	pop    ss
  427afc:	cmp    DWORD PTR [ebp+0x68],ebx
  427aff:	pop    edx
  427b00:	or     eax,0x67e3b98b
  427b05:	retf   
  427b06:	mov    esp,0xab6a000b
  427b0b:	inc    ebx
  427b0c:	jecxz  0x427ab0
  427b0e:	push   ss
  427b0f:	in     al,0xf6
  427b11:	jmp    0x427ab7
  427b13:	in     al,0x74
  427b15:	clc    
  427b16:	add    al,0xe0
  427b18:	fwait
  427b19:	(bad)  
  427b1a:	jmp    0x427b5f
  427b1c:	pop    ecx
  427b1d:	pop    ebx
  427b1e:	cmc    
  427b1f:	iret   
  427b20:	push   esp
  427b21:	mov    ebp,eax
  427b23:	(bad)  
  427b24:	in     al,dx
  427b25:	add    BYTE PTR [ebp+0xb],bh
  427b28:	add    BYTE PTR [esi-0x2b],dl
  427b2b:	xchg   edi,eax
  427b2c:	adc    ax,0x535d
  427b30:	mov    edi,0x453c4dff
  427b35:	xchg   DWORD PTR [ebp-0xe],esp
  427b38:	push   0xfe606381
  427b3d:	inc    DWORD PTR [eax]
  427b3f:	add    ch,dl
  427b41:	in     eax,0xd0
  427b43:	mov    WORD PTR [eax+0x61],fs
  427b46:	push   0x40dc4afb
  427b4b:	call   0xfba85d1d
  427b50:	push   ecx
  427b51:	mov    eax,ds:0x3f5644f0
  427b56:	add    BYTE PTR [edi],ch
  427b58:	adc    eax,0xd87a6dee
  427b5d:	and    BYTE PTR ds:0x359b99c2,ch
  427b63:	rcr    BYTE PTR [eax+0x77],0xe6
  427b67:	add    al,0x95
  427b69:	imul   eax,DWORD PTR [ecx+0x7c],0xfffffffe
  427b6d:	xor    edi,DWORD PTR [edi]
  427b6f:	test   DWORD PTR [ebx],eax
  427b71:	pop    es
  427b72:	sti    
  427b73:	aas    
  427b74:	scas   al,BYTE PTR es:[edi]
  427b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b76:	call   0x7be32271
  427b7b:	repnz arpl WORD PTR [ecx],si
  427b7e:	clc    
  427b7f:	mov    cl,0x49
  427b81:	outs   dx,BYTE PTR ds:[esi]
  427b82:	(bad)  
  427b83:	cli    
  427b84:	shr    bh,cl
  427b86:	fisttp QWORD PTR [eax+0x36bfafd9]
  427b8c:	fwait
  427b8d:	cmp    al,0x58
  427b8f:	das    
  427b90:	xchg   ebp,eax
  427b91:	dec    esi
  427b92:	jbe    0x427b98
  427b94:	sub    bl,ah
  427b96:	cmp    eax,0x3f53d7e7
  427b9b:	pop    edx
  427b9c:	mov    WORD PTR [ebx],fs
  427b9e:	retf   
  427b9f:	xchg   BYTE PTR [ecx+0x2057e3],ch
  427ba5:	add    BYTE PTR [ebx],ch
  427ba7:	or     dh,BYTE PTR [edi+ebp*8-0x56]
  427bab:	xchg   ecx,eax
  427bac:	imul   eax,DWORD PTR [edx*8+0x64ff0109],0x977ce909
  427bb7:	sbb    dh,BYTE PTR [eax]
  427bb9:	jnp    0x427bcb
  427bbb:	push   edx
  427bbc:	mov    dh,0x43
  427bbe:	popf   
  427bbf:	int3   
  427bc0:	fcom   st(3)
  427bc2:	or     al,BYTE PTR [edi]
  427bc4:	push   esp
  427bc5:	inc    ebx
  427bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bc7:	push   esi
  427bc8:	pop    esp
  427bc9:	clc    
  427bca:	pop    ecx
  427bcb:	mov    esp,0xbeb2dbe0
  427bd0:	es add al,0xba
  427bd3:	inc    eax
  427bd4:	in     eax,0xd2
  427bd6:	pop    ebx
  427bd7:	(bad)  
  427bd8:	lock fst st(5)
  427bdb:	popa   
  427bdc:	psubw  mm3,QWORD PTR [edi]
  427bdf:	push   esi
  427be0:	adc    edi,DWORD PTR [ebx]
  427be2:	pop    ebx
  427be3:	add    eax,0x655bcee9
  427be8:	push   0xe9096957
  427bed:	add    edx,DWORD PTR [edx+0x7d2e5dbf]
  427bf3:	sti    
  427bf4:	sub    BYTE PTR [esi+eax*4],al
  427bf7:	loope  0x427bdf
  427bf9:	add    ebp,ebx
  427bfb:	push   ebp
  427bfc:	paddb  mm3,mm7
  427bff:	sbb    esi,DWORD PTR ds:0x6a099a41
  427c05:	push   ecx
  427c06:	pop    edx
  427c07:	push   edx
  427c08:	push   ss
  427c09:	dec    ebp
  427c0a:	add    BYTE PTR [eax],al
  427c0c:	add    dl,BYTE PTR [ecx-0x16]
  427c0f:	jg     0x427c67
  427c11:	or     ebp,ecx
  427c13:	add    edi,DWORD PTR [esi+0x107be0df]
  427c19:	push   0xffffffd1
  427c1b:	push   0xd0e90aae
  427c20:	adc    edi,DWORD PTR [ecx-0xd26601]
  427c26:	sti    
  427c27:	fst    DWORD PTR [esi-0x328db4ab]
  427c2d:	add    BYTE PTR [ebp+0x5],0xff
  427c31:	(bad)  
  427c32:	out    0x60,eax
  427c34:	xchg   ebx,eax
  427c35:	popa   
  427c36:	call   0x4c5888
  427c3b:	ins    DWORD PTR es:[edi],dx
  427c3c:	push   ss
  427c3d:	add    DWORD PTR [eax+ebx*4-0x7efff629],eax
  427c44:	bound  eax,QWORD PTR [ecx]
  427c46:	add    cl,ch
  427c48:	xor    BYTE PTR ds:0x487d1cfb,cl
  427c4e:	aas    
  427c4f:	jmp    0x2ccbb40f
  427c54:	lods   eax,DWORD PTR ds:[esi]
  427c55:	sbb    al,0xbf
  427c57:	fidiv  WORD PTR [edx-0x2916fee8]
  427c5d:	push   cs
  427c5e:	cli    
  427c5f:	call   0x2ccb863a
  427c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c65:	push   cs
  427c66:	cli    
  427c67:	call   0x2ccb8642
  427c6c:	jns    0x427c7c
  427c6e:	cli    
  427c6f:	call   0xa187c74
  427c74:	mov    DWORD PTR [ecx+eax*4],ebp
  427c77:	xchg   BYTE PTR [ebp+0x65],dh
  427c7a:	inc    ecx
  427c7b:	mov    eax,DWORD PTR [eax]
  427c7d:	jmp    0x5479de58
  427c82:	(bad)  [ecx]
  427c84:	(bad)  
  427c85:	cld    
  427c86:	call   0xe809:0xd6e97e91
  427c8d:	pop    ss
  427c8e:	or     DWORD PTR fs:[eax],eax
  427c91:	ins    BYTE PTR es:[edi],dx
  427c92:	les    edi,FWORD PTR [eax]
  427c94:	mov    eax,0x9d16a
  427c99:	inc    ecx
  427c9a:	clc    
  427c9b:	jle    0x427c9d
  427c9d:	add    BYTE PTR [ecx+edx*8-0x76ab4f8c],bh
  427ca4:	add    BYTE PTR [eax],al
  427ca6:	lods   al,BYTE PTR ds:[esi]
  427ca7:	mov    al,0x13
  427ca9:	xchg   ebp,eax
  427caa:	jl     0x427cb4
  427cac:	lea    esi,[ebp+0x50]
  427caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cb0:	test   DWORD PTR [eax],eax
  427cb2:	ins    BYTE PTR es:[edi],dx
  427cb3:	or     al,ch
  427cb5:	pop    es
  427cb6:	stc    
  427cb7:	or     eax,0xe06e900
  427cbc:	add    BYTE PTR [eax],al
  427cbe:	out    0x1a,eax
  427cc0:	push   eax
  427cc1:	adc    ebp,DWORD PTR [eax+ecx*1]
  427cc4:	lea    eax,[ebp-0x18]
  427cc7:	cmp    eax,0x8aeaff4e
  427ccc:	ror    BYTE PTR [edi],0xb9
  427ccf:	test   eax,0xd12c0000
  427cd4:	inc    esp
  427cd5:	les    eax,FWORD PTR [eax]
  427cd7:	add    ah,bh
  427cd9:	inc    esp
  427cda:	not    dh
  427cdc:	mov    ecx,0x8a8506c8
  427ce1:	or     BYTE PTR [eax],al
  427ce3:	add    BYTE PTR [ebx+0x59],ah
  427ce6:	add    edi,DWORD PTR [esi+0x863]
  427cec:	jmp    0xcf49:0x81fc74ec
  427cf3:	push   ebx
  427cf4:	mov    esp,0x6015f644
  427cf9:	clc    
  427cfa:	aas    
  427cfb:	add    BYTE PTR [ecx-0x38],bh
  427cfe:	jae    0x427d7a
  427d00:	push   ebx
  427d01:	pop    ecx
  427d02:	add    ecx,DWORD PTR [ebp-0xb16247]
  427d08:	(bad)  
  427d0a:	dec    edx
  427d0b:	push   eax
  427d0c:	jmp    0x427cf8
  427d0e:	adc    al,0xfc
  427d10:	int3   
  427d11:	inc    edi
  427d12:	sti    
  427d13:	test   ah,ch
  427d15:	bound  ebx,QWORD PTR [edx-0x1]
  427d18:	aad    0x35
  427d1a:	test   DWORD PTR [eax+ebx*1+0x20facce5],0xa4fcdc9
  427d25:	adc    al,0x10
  427d27:	cld    
  427d28:	lds    esp,FWORD PTR [eax-0x626a7b01]
  427d2e:	mov    bl,0x86
  427d30:	or     BYTE PTR [ecx],ch
  427d32:	push   edi
  427d33:	clc    
  427d34:	xor    ah,0x61
  427d37:	test   DWORD PTR [ebp+0x65bf7b],edx
  427d3d:	add    bh,ah
  427d3f:	mov    ch,0xaf
  427d41:	fs push 0xc
  427d44:	bound  ebx,QWORD PTR [eax+0x6d]
  427d47:	xchg   DWORD PTR [ebx-0x14a42b00],ecx
  427d4d:	sti    
  427d4e:	pop    esi
  427d4f:	sub    ecx,edx
  427d51:	cli    
  427d52:	shl    BYTE PTR [ecx+edi*2],0x7d
  427d56:	inc    ebp
  427d57:	adc    DWORD PTR [ecx-0x9f29fd],ebp
  427d5d:	out    0x96,eax
  427d5f:	in     eax,dx
  427d60:	popa   
  427d61:	sti    
  427d62:	push   esi
  427d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d64:	adc    al,0x85
  427d66:	adc    eax,0xa0870e13
  427d6b:	ins    BYTE PTR es:[edi],dx
  427d6c:	int3   
  427d6d:	xchg   BYTE PTR [ebx],ah
  427d6f:	dec    ecx
  427d70:	pop    ebp
  427d71:	jge    0x427d7e
  427d73:	lods   al,BYTE PTR ds:[esi]
  427d74:	add    al,0x89
  427d77:	pop    edi
  427d78:	fs inc edx
  427d7a:	shr    DWORD PTR [edi],1
  427d7c:	dec    eax
  427d7d:	lea    ebx,[eax-0x37c9a380]
  427d83:	pusha  
  427d84:	inc    DWORD PTR [esi+0xb6847dd]
  427d8a:	push   eax
  427d8b:	xchg   ebp,eax
  427d8c:	fs sti 
  427d8e:	shl    bl,cl
  427d90:	jmp    0xbf8a:0x7109bdfb
  427d97:	push   edx
  427d98:	and    edi,eax
  427d9a:	call   0x4162:0x2864e0dc
  427da1:	jmp    0x53827da6
  427da6:	inc    edx
  427da7:	(bad)  
  427daa:	das    
  427dab:	inc    edx
  427dac:	int    0x9
  427dae:	pushf  
  427daf:	js     0x427d32
  427db1:	xchg   BYTE PTR [ebp+0x6c],al
  427db4:	push   esp
  427db5:	gs icebp 
  427db7:	add    ebp,edx
  427db9:	or     DWORD PTR [esi+0x645753cd],esi
  427dbf:	shl    BYTE PTR [esi-0x4141a3ff],1
  427dc5:	mov    bh,0x6d
  427dc7:	dec    ebx
  427dc8:	ins    DWORD PTR es:[edi],dx
  427dc9:	test   eax,0x8d5e64eb
  427dce:	sub    eax,esi
  427dd0:	out    dx,eax
  427dd1:	pop    ebx
  427dd2:	jecxz  0x427de7
  427dd4:	pop    eax
  427dd5:	int    0xc
  427dd7:	cld    
  427dd8:	mov    BYTE PTR [edi+ecx*2],0x3
  427ddc:	ds fsubr st(0),st
  427ddf:	sar    DWORD PTR [edx],cl
  427de1:	aas    
  427de2:	int3   
  427de3:	fs cs pop esi
  427de6:	lock fs test al,0x1
  427dea:	sbb    DWORD PTR [edx+ebx*1+0x54],ebx
  427dee:	mov    dl,0x64
  427df0:	scas   eax,DWORD PTR es:[edi]
  427df1:	cdq    
  427df2:	call   0x44aed1bf
  427df7:	inc    edx
  427df8:	(bad)  [ecx]
  427dfa:	xor    al,0x79
  427dfc:	jmp    0xda3a0388
  427e01:	or     ecx,ebp
  427e03:	rol    BYTE PTR [edx+edi*4+0xfc0e],1
  427e0a:	push   ecx
  427e0b:	int3   
  427e0c:	sbb    cl,0xda
  427e0f:	sar    edi,0x75
  427e12:	jecxz  0x427e05
  427e14:	adc    DWORD PTR [ecx],ebp
  427e16:	rcl    eax,1
  427e18:	ret    
  427e19:	cmc    
  427e1a:	dec    ebx
  427e1b:	xchg   edi,eax
  427e1c:	or     BYTE PTR [esi+0x31],bl
  427e1f:	push   ebp
  427e20:	mov    eax,0x9d66f
  427e25:	inc    ecx
  427e26:	ja     0x427da9
  427e28:	add    cl,ch
  427e2a:	sub    edx,edi
  427e2c:	xchg   edi,eax
  427e2d:	sbb    DWORD PTR [ecx],0x2ee9000a
  427e33:	jbe    0x427dc4
  427e35:	jmp    0xe8471710
  427e3a:	(bad)  
  427e3b:	or     DWORD PTR [edi+0x72],ecx
  427e3e:	mov    eax,0x6e6c8cb9
  427e43:	push   esp
  427e44:	sti    
  427e45:	push   cs
  427e46:	xchg   BYTE PTR [esi-0x43],bh
  427e49:	jmp    0x423dd349
  427e4e:	xlat   BYTE PTR ds:[ebx]
  427e4f:	or     DWORD PTR [eax],eax
  427e51:	imul   ebp,DWORD PTR [esi-0x29168f47],0x1de6f7d0
  427e5b:	pop    ds
  427e5c:	test   DWORD PTR [ecx+0x644f231d],ebp
  427e62:	pop    esp
  427e63:	push   edx
  427e64:	test   dh,0xb6
  427e67:	mov    ecx,0x5469ae86
  427e6c:	adc    eax,0x23000021
  427e71:	adc    DWORD PTR [eax],eax
  427e73:	fs sbb al,0x59
  427e76:	push   eax
  427e77:	pop    esp
  427e78:	pop    esp
  427e79:	push   edx
  427e7a:	mul    BYTE PTR [esi+0x14e7b976]
  427e80:	je     0x427ed6
  427e82:	sti    
  427e83:	fs pop esp
  427e85:	push   edx
  427e86:	test   BYTE PTR [esi+0xfab976],0x1
  427e8d:	lea    ecx,[ebx]
  427e8f:	inc    eax
  427e90:	in     al,dx
  427e91:	div    esi
  427e93:	cmp    ecx,ecx
  427e95:	mov    al,0x6
  427e97:	test   DWORD PTR [eax+0x49000005],edx
  427e9d:	xor    edi,DWORD PTR [edi+0x645b8]
  427ea3:	add    BYTE PTR [ebx+eiz*1],dl
  427ea6:	mov    eax,DWORD PTR [eax]
  427ea8:	mov    esp,0x1b6cb579
  427ead:	in     eax,dx
  427eae:	idiv   BYTE PTR [eax+0x626]
  427eb4:	adc    al,0x53
  427eb6:	mov    al,BYTE PTR [eax]
  427eb8:	jl     0x427f33
  427eba:	jne    0x427e6c
  427ebc:	hlt    
  427ebd:	add    BYTE PTR [eax],0x0
  427ec0:	ins    BYTE PTR es:[edi],dx
  427ec1:	in     al,0x7
  427ec3:	xchg   ebx,eax
  427ec4:	jl     0x427ed2
  427ec6:	lea    eax,[ebp-0x50]
  427ec9:	jle    0x427f10
  427ecb:	in     al,dx
  427ecc:	jmp    0x5c41eb53
  427ed1:	jmp    0x427e5b
  427ed3:	inc    ebp
  427ed4:	add    BYTE PTR [eax],al
  427ed6:	dec    esp
  427ed7:	jg     0x427e97
  427ed9:	(bad)  
  427eda:	jno    0x427eec
  427edc:	and    al,0x0
  427ede:	sub    al,0xc
  427ee0:	mov    edi,0xfb4e0c45
  427ee5:	(bad)  
  427ee6:	cmp    al,0xc3
  427ee8:	inc    esp
  427ee9:	in     al,0xd2
  427eeb:	add    eax,0x41730000
  427ef0:	jecxz  0x427f15
  427ef2:	sub    al,0xc
  427ef4:	add    BYTE PTR [ecx+0x7482b1c1],cl
  427efa:	jns    0x427f0c
  427efc:	lea    eax,[ebp-0x91714]
  427f02:	mov    esp,0xd550bff8
  427f07:	adc    dh,BYTE PTR [esi+0xf54ea4f]
  427f0d:	setne  BYTE PTR [edx-0x78]
  427f11:	shl    BYTE PTR [eax-0x71],0x82
  427f15:	cli    
  427f16:	stc    
  427f17:	dec    ebp
  427f18:	std    
  427f19:	dec    edi
  427f1a:	pop    eax
  427f1b:	es pop esp
  427f1d:	push   eax
  427f1e:	push   eax
  427f1f:	fdivp  st(6),st
  427f21:	cld    
  427f22:	mov    edx,0x63e7aeb0
  427f27:	mov    ch,0x5d
  427f29:	sti    
  427f2a:	out    0x20,al
  427f2c:	jmp    0x60a1d7b9
  427f31:	sti    
  427f32:	call   0x9071:0x25503f54
  427f39:	inc    ebp
  427f3a:	add    BYTE PTR [eax],al
  427f3c:	lea    esi,[ecx-0x19]
  427f3f:	outs   dx,DWORD PTR ds:[esi]
  427f40:	sub    ah,BYTE PTR [ebx+0x7ad765ff]
  427f46:	add    cl,BYTE PTR [ebp-0x726ffaf8]
  427f4c:	aad    0xfd
  427f4e:	pop    ebp
  427f4f:	sti    
  427f50:	ins    DWORD PTR es:[edi],dx
  427f51:	pop    ss
  427f52:	or     bh,bl
  427f54:	pop    edx
  427f55:	test   al,0x82
  427f57:	sti    
  427f58:	(bad)  
  427f5a:	sahf   
  427f5b:	jg     0x427f25
  427f5d:	pop    esp
  427f5e:	(bad)  
  427f5f:	je     0x427f0e
  427f61:	aad    0x92
  427f63:	push   eax
  427f64:	cmp    dh,BYTE PTR [eax]
  427f66:	popa   
  427f67:	mov    eax,0xffff615b
  427f6c:	cmp    eax,0xd50071c3
  427f71:	aad    0xd2
  427f73:	ret    
  427f74:	pop    ebp
  427f75:	fld    DWORD PTR [ebx]
  427f77:	add    ch,dl
  427f79:	dec    eax
  427f7a:	mov    bl,0x8d
  427f7c:	aad    0x60
  427f7e:	mov    ah,0x86
  427f80:	sbb    ecx,DWORD PTR [edx]
  427f82:	cmp    DWORD PTR [edi+0x6199ba50],ecx
  427f88:	out    dx,al
  427f89:	mov    ecx,0x4cd59f63
  427f8e:	mov    ah,BYTE PTR [ecx+0x1d]
  427f91:	or     ecx,ebp
  427f93:	add    edx,DWORD PTR [ebp+0x62]
  427f96:	rcl    ebx,cl
  427f98:	ror    BYTE PTR [esi+0x66],cl
  427f9b:	pop    esp
  427f9c:	into   
  427f9d:	aad    0xc1
  427f9f:	xchg   BYTE PTR [eax],al
  427fa1:	add    BYTE PTR [ebp+0x49b505d5],dl
  427fa7:	test   BYTE PTR [ecx+0x5e],ah
  427faa:	scas   al,BYTE PTR es:[edi]
  427fab:	dec    esi
  427fac:	mov    ecx,0x49b9968c
  427fb1:	test   DWORD PTR [edx],0x3303a8fc
  427fb7:	or     DWORD PTR [edi+eax*8-0x76],ebp
  427fbb:	mov    ecx,0x538d8763
  427fc0:	sub    ah,BYTE PTR [ecx+0x25]
  427fc3:	bound  ebx,QWORD PTR [ebx*2-0x2099b182]
  427fca:	outs   dx,BYTE PTR ds:[esi]
  427fcb:	or     DWORD PTR [ebx+0x10cc53f7],ebx
  427fd1:	in     al,dx
  427fd2:	fwait
  427fd3:	or     ecx,ebp
  427fd5:	add    ebx,DWORD PTR ds:0xd503e97d
  427fdb:	popa   
  427fdc:	cld    
  427fdd:	dec    si
  427fdf:	dec    esi
  427fe0:	dec    BYTE PTR [ebx]
  427fe2:	ds aam 0xe0
  427fe5:	imul   edx,DWORD PTR [edi-0x719f248f],0xffffffaf
  427fec:	sub    eax,0x5db46a4b
  427ff1:	outs   dx,DWORD PTR ds:[esi]
  427ff2:	mov    ds:0x49b9e55d,al
  427ff7:	aam    0xc4
  427ff9:	fwait
  427ffa:	pusha  
  427ffb:	or     DWORD PTR [eax],eax
  427ffd:	jmp    0x5911e1d8
  428002:	(bad)  
  428003:	or     DWORD PTR [edi-0x36ffffcc],eax
  428009:	xchg   dl,al
  42800b:	jo     0x428028
  42800d:	push   edx
  42800e:	das    
  42800f:	test   eax,0x8e4fbe26
  428014:	or     eax,DWORD PTR [edx]
  428016:	lea    ebx,[esi*2-0x64df231f]
  42801d:	dec    ebp
  42801e:	imul   ebp,esp,0xebe80ab8
  428024:	rcl    DWORD PTR [eax-0x5],1
  428027:	(bad)  
  428028:	jl     0x84ae6936
  42802e:	in     al,dx
  42802f:	push   0x32
  428031:	push   edx
  428032:	cmp    DWORD PTR ds:0xe9fb4c2a,0x3b86bb61
  42803c:	dec    ebp
  42803d:	jle    0x427fd3
  42803f:	or     eax,0xe9000a09
  428044:	push   ebx
  428045:	enter  0xbb2b,0x49
  428049:	xor    ebp,eax
  42804b:	into   
  42804c:	loop   0x42809e
  42804e:	sti    
  42804f:	ins    DWORD PTR es:[edi],dx
  428050:	push   ss
  428051:	add    DWORD PTR [eax+edi*8-0xfff628],eax
  428058:	int    0xf9
  42805a:	jae    0x428030
  42805c:	mov    ch,0xd6
  42805e:	pop    es
  42805f:	fs push edx
  428061:	es pushf 
  428063:	jmp    0xd1928a3e
  428068:	push   ebx
  428069:	push   ecx
  42806a:	sti    
  42806b:	fiadd  WORD PTR [eax]
  42806d:	add    al,al
  42806f:	pop    eax
  428070:	add    ecx,ebp
  428072:	(bad)  
  428073:	test   BYTE PTR ds:0xd2751,dh
  428079:	add    BYTE PTR [edi+eax*1+0x62fc0200],al
  428080:	add    edi,edi
  428082:	or     DWORD PTR [ebp-0x42],ebp
  428085:	inc    ebx
  428086:	in     al,dx
  428087:	stos   DWORD PTR es:[edi],eax
  428088:	int    0x8b
  42808a:	xor    al,0xf9
  42808c:	sar    BYTE PTR [ebx],cl
  42808e:	aaa    
  42808f:	std    
  428090:	adc    esi,0xfffffffd
  428093:	or     BYTE PTR [eax],al
  428095:	lea    edi,[eax+0x21]
  428098:	cwde   
  428099:	add    ah,ch
  42809b:	or     BYTE PTR [eax+0x68],dl
  42809e:	push   ebx
  42809f:	lods   eax,DWORD PTR ds:[esi]
  4280a0:	(bad)  
  4280a1:	(bad)  
  4280a2:	jmp    0x42803c
  4280a4:	dec    edx
  4280a5:	push   ebx
  4280a6:	xor    al,0x4a
  4280a8:	pop    ds
  4280a9:	cmp    al,0x33
  4280ab:	push   ebx
  4280ac:	not    DWORD PTR [eax]
  4280ae:	jl     0x4280b8
  4280b0:	push   eax
  4280b1:	mov    esi,ebx
  4280b3:	jle    0x4280f9
  4280b5:	and    al,0xa0
  4280b7:	jge    0x428135
  4280b9:	and    al,0x9c
  4280bb:	jge    0x428119
  4280bd:	and    al,0x88
  4280bf:	loopne 0x42810a
  4280c1:	sbb    bh,BYTE PTR [eax+ecx*1-0x7c]
  4280c5:	shl    BYTE PTR [ebx+0x6c018e84],0x8
  4280cc:	push   0x88020
  4280d1:	push   0x0
  4280d3:	add    BYTE PTR [ebx+ebp*4+0x34],dh
  4280d7:	mov    esp,0xfefb48ba
  4280dc:	mov    edx,0x2824447e
  4280e1:	out    dx,eax
  4280e2:	mov    edx,0x30b80f
  4280e7:	add    BYTE PTR [ecx+eax*1],ch
  4280ea:	test   BYTE PTR [ecx],0x2c
  4280ed:	or     BYTE PTR [ecx+0x44dd844],cl
  4280f3:	(bad)  
  4280f4:	aad    0x61
  4280f6:	(bad)  
  4280f7:	dec    DWORD PTR [esi+eiz*1+0x28]
  4280fb:	adc    al,dl
  4280fd:	inc    esp
  4280fe:	add    al,0x0
  428100:	aad    0xd9
  428102:	ret    0xe923
  428105:	in     eax,0xd2
  428107:	and    esp,DWORD PTR [ecx-0x2aff7326]
  42810d:	bound  esp,QWORD PTR [edi-0x34]
  428110:	inc    ebp
  428111:	(bad)  
  428112:	dec    DWORD PTR [ecx+eiz*2+0x52b7af3e]
  428119:	(bad)  
  42811a:	(bad)  
  42811b:	(bad)  
  42811c:	in     eax,dx
  42811d:	ret    
  42811e:	outs   dx,BYTE PTR ds:[esi]
  42811f:	add    ch,dl
  428121:	fst    st(2)
  428123:	and    edx,DWORD PTR [ecx]
  428125:	sbb    DWORD PTR [edi+0x0],ebp
  428128:	aad    0x60
  42812a:	addr16 mov al,0x65
  42812d:	popa   
  42812e:	dec    DWORD PTR [ecx+ebp*1+0x44b82005]
  428135:	popa   
  428136:	(bad)  
  428137:	inc    DWORD PTR [eax]
  428139:	add    BYTE PTR [ebp-0x2aff9081],ch
  42813f:	aad    0xd2
  428141:	and    ecx,ecx
  428143:	mov    BYTE PTR [ecx+0x0],dh
  428146:	aad    0x60
  428148:	addr16 xchg esp,eax
  42814a:	gs popa 
  42814c:	(bad)  
  42814d:	call   0x41e2d8
  428152:	pusha  
  428153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428154:	and    ebx,DWORD PTR [ebp+eax*1-0x74]
  428158:	pop    edx
  428159:	adc    eax,0xffbf5005
  42815e:	push   ecx
  42815f:	and    DWORD PTR [edx],ecx
  428161:	test   DWORD PTR [edx],esi
  428163:	popa   
  428164:	(bad)  
  428165:	call   FWORD PTR [eax-0x23]
  428168:	and    bl,BYTE PTR [eax+0x4fff60d5]
  42816e:	jnp    0x42817a
  428170:	loop   0x428176
  428172:	aad    0x9
  428174:	xor    ebx,DWORD PTR [ebp-0x5f]
  428177:	and    eax,0x25998ef5
  42817c:	sub    eax,0xc1b28ab1
  428181:	test   DWORD PTR [esi],0x500428fa
  428187:	dec    edx
  428188:	loop   0x428111
  42818a:	cmp    eax,0x4803e90a
  42818f:	xchg   ch,cl
  428191:	jnp    0x428168
  428193:	or     ecx,ebp
  428195:	mov    bl,0x70
  428197:	hlt    
  428198:	arpl   ax,cx
  42819a:	mov    dh,0xbd
  42819c:	cmp    BYTE PTR [ebp-0xb210000],dh
  4281a2:	call   0x704c9499
  4281a7:	enter  0x29f6,0x21
  4281ab:	pop    ds
  4281ac:	mov    edi,0xce03e94a
  4281b1:	xor    BYTE PTR [edi+0x4],0xd5
  4281b5:	or     DWORD PTR [eax+ecx*4-0xf],ebp
  4281b9:	jno    0x4281a4
  4281bb:	add    edx,ebp
  4281bd:	mov    ecx,0x26215cb2
  4281c2:	or     DWORD PTR [edi-0x4f4ed9e7],ecx
  4281c8:	sbb    dh,BYTE PTR [ebx-0x68108cf]
  4281ce:	test   al,0x3
  4281d0:	push   eax
  4281d1:	dec    ecx
  4281d2:	popf   
  4281d3:	xlat   BYTE PTR ds:[ebx]
  4281d4:	popa   
  4281d5:	test   ebp,eax
  4281d7:	jnp    0x4281ae
  4281d9:	or     ecx,ebp
  4281db:	mov    bl,0x4
  4281dd:	dec    ebx
  4281de:	xchg   ebp,eax
  4281df:	daa    
  4281e0:	mov    ebp,0x9527ad7c
  4281e5:	mov    dh,0x98
  4281e7:	mov    ah,0x4f
  4281e9:	hlt    
  4281ea:	push   esp
  4281ec:	inc    esi
  4281ed:	or     al,BYTE PTR [eax]
  4281ef:	fs xchg ecx,eax
  4281f1:	aad    0x51
  4281f3:	out    0xa,al
  4281f5:	es adc dh,bl
  4281f8:	and    esi,DWORD PTR [edx+0xe]
  4281fb:	sub    ecx,ebx
  4281fd:	test   al,al
  4281ff:	dec    edi
  428200:	or     esp,esp
  428202:	jo     0x428278
  428204:	add    BYTE PTR [eax],al
  428206:	sub    ah,BYTE PTR [esi]
  428208:	je     0x42822b
  42820a:	jns    0x42823d
  42820c:	mov    ebp,ecx
  42820e:	(bad)  
  42820f:	dec    esi
  428210:	je     0x428217
  428212:	mov    cl,0x82
  428214:	jl     0x4281e3
  428216:	mov    dh,0x4e
  428218:	je     0x4281df
  42821a:	out    dx,al
  42821b:	add    dl,0x96
  42821e:	or     ah,BYTE PTR [esi]
  428220:	sbb    BYTE PTR [edx-0x19],dl
  428223:	dec    edx
  428224:	sti    
  428225:	jmp    0xc566405b
  42822a:	xchg   BYTE PTR [ecx],dh
  42822c:	xchg   ebx,eax
  42822d:	imul   esp,DWORD PTR [eax],0xc2a57f45
  428233:	mov    es,eax
  428235:	out    0xa4,eax
  428237:	nop
  428238:	jne    0x42822b
  42823a:	popa   
  42823b:	nop
  42823c:	retf   0xbd41
  42823f:	ret    0x4ef9
  428242:	push   edx
  428243:	dec    edx
  428244:	je     0x428230
  428246:	xor    esp,ecx
  428248:	add    edi,edx
  42824a:	int    0x96
  42824c:	inc    esp
  42824d:	or     eax,0xd18d31ad
  428252:	(bad)  
  428253:	or     DWORD PTR [edi+0xb40cd21],eax
  428259:	fs or  al,0x44
  42825c:	sti    
  42825d:	push   ss
  42825e:	add    DWORD PTR [esi+0x5feef523],edi
  428264:	xchg   ebp,eax
  428265:	add    dl,bl
  428267:	in     eax,0x37
  428269:	pop    esp
  42826a:	add    BYTE PTR [eax],al
  42826c:	adc    cl,dh
  42826e:	je     0x428279
  428270:	dec    ebx
  428271:	pusha  
  428272:	pop    ds
  428273:	sub    al,0xd4
  428275:	rcl    DWORD PTR [esi+edi*8-0x4fa67ac5],1
  42827c:	cmp    eax,0xe9e58288
  428281:	iret   
  428282:	add    eax,DWORD PTR [eax]
  428284:	loope  0x42821e
  428286:	in     al,dx
  428287:	sub    DWORD PTR [eax],0xfc000492
  42828d:	jg     0x4282e0
  42828f:	push   edi
  428290:	xchg   esi,eax
  428291:	adc    eax,0x4a99db2b
  428296:	repz push ebx
  428298:	lods   al,BYTE PTR ds:[esi]
  428299:	in     al,0x14
  42829b:	sbb    dl,ah
  42829d:	dec    esp
  42829e:	sti    
  42829f:	xor    BYTE PTR [eax],0x12
  4282a2:	lea    esi,[ebp+0x78]
  4282a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282a6:	mov    eax,DWORD PTR [eax]
  4282a8:	mov    esp,0x3b3be80c
  4282ad:	push   cs
  4282ae:	add    BYTE PTR [ebp-0x6b47fb3f],cl
  4282b4:	lods   al,BYTE PTR ds:[esi]
  4282b5:	or     al,0x0
  4282b7:	call   0x431786
  4282bc:	dec    edx
  4282bd:	or     DWORD PTR [ecx],eax
  4282bf:	add    BYTE PTR [edx+edi*2+0x7de4458c],ch
  4282c6:	mov    WORD PTR [ebp+0x8],es
  4282c9:	jle    0x428257
  4282cb:	mov    ebp,0xfff6e2fc
  4282d0:	add    BYTE PTR [eax],al
  4282d2:	add    al,0xf
  4282d4:	add    BYTE PTR [eax],al
  4282d6:	in     al,dx
  4282d7:	mov    ch,0xeb
  4282d9:	ins    BYTE PTR es:[edi],dx
  4282da:	jl     0x4282e8
  4282dc:	jnp    0x4282d6
  4282de:	retf   
  4282df:	pop    ecx
  4282e0:	and    al,0x3b
  4282e2:	aad    0xf3
  4282e4:	int    0x20
  4282e6:	add    esp,esi
  4282e8:	cmp    BYTE PTR [eax+0x4e],0xf
  4282ec:	push   edi
  4282ed:	push   eax
  4282ee:	pop    esi
  4282ef:	out    dx,eax
  4282f0:	mov    bl,0xfa
  4282f2:	call   0xd5827891
  4282f7:	in     eax,0xc0
  4282f9:	test   DWORD PTR [ebp+0x2e787fbd],0x2d505667
  428303:	pop    edi
  428304:	push   ebx
  428305:	sti    
  428306:	sbb    bl,BYTE PTR [ecx]
  428308:	mov    ecx,0x88da88fb
  42830d:	jne    0x428324
  42830f:	mov    dh,BYTE PTR [eax+0x0]
  428312:	aad    0x32
  428314:	addr16 aam 0x4b
  428317:	xor    bh,bh
  428319:	xchg   BYTE PTR [ebx],bl
  42831b:	ja     0x4282dd
  42831d:	out    0xcf,eax
  42831f:	xor    bh,bh
  428321:	call   FWORD PTR [edx]
  428323:	cmc    
  428324:	addr16 and dl,ch
  428327:	xor    bh,bh
  428329:	ret    0xc118
  42832c:	and    DWORD PTR [eax],eax
  42832e:	aad    0x30
  428330:	mov    WORD PTR [ebp-0x37],es
  428333:	test   BYTE PTR [ecx-0x73],dl
  428336:	add    BYTE PTR [eax],al
  428338:	push   eax
  428339:	mov    cl,0x57
  42833b:	sti    
  42833c:	mov    dl,0x81
  42833e:	mov    dl,0x4e
  428340:	stos   BYTE PTR es:[edi],al
  428341:	pop    ebp
  428342:	nop
  428343:	call   0x3032634e
  428348:	(bad)  
  428349:	jo     0x42834a
  42834b:	test   BYTE PTR [ebp+0x264ef986],dl
  428351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428352:	mov    BYTE PTR [ebp+0x7d],al
  428355:	mov    eax,ds:0x731cdce7
  42835a:	jmp    DWORD PTR [ebp-0x29]
  42835d:	or     DWORD PTR [edi+0x14dd5804],ecx
  428363:	mov    BYTE PTR [eax-0x76],dl
  428366:	adc    al,0x5a
  428368:	pop    esi
  428369:	xor    dh,BYTE PTR [edi]
  42836b:	add    cl,BYTE PTR [esi+0x47]
  42836e:	stos   DWORD PTR es:[edi],eax
  42836f:	xchg   BYTE PTR [edi+0xb],cl
  428372:	ja     0x4283b3
  428374:	cld    
  428375:	in     al,0xf4
  428377:	shl    dh,1
  428379:	xchg   edx,eax
  42837a:	ins    BYTE PTR es:[edi],dx
  42837b:	pop    ebx
  42837c:	mov    ebp,0xd503e952
  428381:	xor    DWORD PTR [ebx+0x4],0xe0c109d5
  428388:	clc    
  428389:	inc    esi
  42838a:	retf   0xdd6d
  42838d:	inc    esi
  42838e:	cmp    al,0x5c
  428390:	std    
  428391:	jl     0x4283e8
  428393:	pop    edx
  428394:	(bad)  
  428395:	out    0x12,al
  428397:	mov    ebp,0x8d144b0d
  42839c:	add    BYTE PTR [eax],al
  42839e:	add    DWORD PTR [ebx+0x36545c8d],ecx
  4283a4:	inc    ebp
  4283a5:	push   es
  4283a6:	aad    0x9
  4283a8:	ss mov dl,0x53
  4283ab:	cmp    al,0x32
  4283ad:	xchg   DWORD PTR [ecx-0x13],ebp
  4283b0:	push   eax
  4283b1:	add    al,0xd5
  4283b3:	or     DWORD PTR [edx+eax*8-0x12],ebp
  4283b7:	fistp  DWORD PTR [ebp+0x3b]
  4283ba:	lods   eax,DWORD PTR ds:[esi]
  4283bb:	popa   
  4283bc:	loope  0x428416
  4283be:	scas   al,BYTE PTR es:[edi]
  4283bf:	lea    ebp,[ecx]
  4283c1:	or     DWORD PTR [ecx-0x4a],edx
  4283c4:	out    0x3,al
  4283c6:	aad    0x3f
  4283c8:	jmp    0x4283bd
  4283ca:	es add al,0x5c
  4283cd:	shl    BYTE PTR [esi-0x2a8e7eff],1
  4283d3:	or     ecx,ebp
  4283d5:	imul   ebx,ebp,0xffffff97
  4283d8:	add    cl,ch
  4283da:	(bad)  
  4283db:	mov    es,edx
  4283dd:	pusha  
  4283de:	xchg   ebp,eax
  4283df:	jmp    0xb94f:0xda16da0f
  4283e6:	std    
  4283e7:	mov    esp,0xea256407
  4283ec:	pop    ds
  4283ed:	and    edx,0x38e93de4
  4283f3:	or     eax,0x955be866
  4283f8:	and    al,0x2d
  4283fa:	ror    DWORD PTR [ecx],1
  4283fc:	add    BYTE PTR [ecx],al
  4283fe:	push   ss
  4283ff:	or     edi,ebx
  428401:	out    0x0,al
  428403:	add    BYTE PTR [edi-0x29170207],bh
  428409:	xchg   esp,eax
  42840a:	test   BYTE PTR ds:0xe9000969,cl
  428410:	inc    esi
  428411:	cs int 0x74
  428414:	lods   al,BYTE PTR ds:[esi]
  428415:	inc    edx
  428416:	xchg   ecx,eax
  428418:	dec    edi
  428419:	lds    esp,FWORD PTR [ebx]
  42841b:	std    
  42841c:	jnp    0x428460
  42841e:	or     esp,DWORD PTR [ebp+0x3]
  428421:	inc    esp
  428422:	sti    
  428423:	jmp    0x1166417b
  428428:	inc    ecx
  428429:	mov    eax,ds:0x31d6e900
  42842e:	mov    edi,0x8709d65c
  428433:	out    dx,al
  428434:	push   ebx
  428435:	(bad)  
  428436:	and    ebx,ecx
  428438:	xchg   DWORD PTR [edx+ecx*8-0x6fbf7be8],ecx
  42843f:	pop    ecx
  428440:	(bad)  
  428441:	or     DWORD PTR [eax],eax
  428443:	ins    BYTE PTR es:[edi],dx
  428444:	push   ss
  428445:	adc    DWORD PTR [ebp+0x9d751],eax
  42844b:	bound  ebx,QWORD PTR [edx-0x17]
  42844e:	punpckldq mm3,mm6
  428451:	xchg   esi,eax
  428452:	push   esp
  428453:	add    al,bl
  428455:	adc    DWORD PTR [edx+0x50],ecx
  428458:	ret    
  428459:	ja     0x42847a
  42845b:	test   DWORD PTR [ecx+edx*1+0x97dc785],ebp
  428462:	add    BYTE PTR [ebp-0x47a3dab8],cl
  428468:	add    BYTE PTR [eax],al
  42846a:	push   ebp
  42846b:	or     DWORD PTR [eax],eax
  42846d:	add    ah,dl
  42846f:	ret    
  428470:	mov    WORD PTR [eax],es
  428472:	cmp    al,0x96
  428474:	inc    esp
  428475:	and    al,0x40
  428477:	xchg   esi,eax
  428478:	or     BYTE PTR [ebp+0x522c2568],cl
  42847e:	mov    bh,0xfa
  428480:	dec    ecx
  428481:	push   eax
  428482:	inc    ebx
  428483:	mov    ebx,0x93c0093
  428488:	test   eax,eax
  42848a:	mov    DWORD PTR [ebx+eax*4],ecx
  42848d:	je     0x428457
  42848f:	icebp  
  428490:	out    0xd3,eax
  428492:	mov    cl,0xdb
  428494:	test   BYTE PTR [ecx-0x14ec1648],0xf9
  42849b:	xchg   DWORD PTR [esp+0x18],esp
  42849f:	or     DWORD PTR [ebp-0x4cb6278c],ecx
  4284a5:	call   0x92a6:0xe80008fc
  4284ac:	add    BYTE PTR [eax],al
  4284ae:	ja     0x4284f9
  4284b0:	pop    ds
  4284b1:	or     al,0x37
  4284b3:	push   ss
  4284b4:	lea    edx,[eax+ebx*4+0x18]
  4284b8:	dec    edx
  4284b9:	mov    ebp,DWORD PTR [edx+0x77]
  4284bc:	dec    ebx
  4284bd:	call   FWORD PTR ds:0xbcffffba
  4284c3:	mov    eax,eax
  4284c5:	jne    0x42846a
  4284c7:	(bad)  
  4284c8:	je     0x4284ee
  4284ca:	mov    esp,0x8d97b5
  4284cf:	add    ch,dl
  4284d1:	fcom   QWORD PTR [edx-0x77]
  4284d4:	sbb    DWORD PTR [edi],ecx
  4284d6:	clc    
  4284d7:	out    0xd0,al
  4284d9:	scas   eax,DWORD PTR es:[edi]
  4284da:	fbld   TBYTE PTR [ebx]
  4284dc:	loope  0x428510
  4284de:	mov    BYTE PTR [ecx+esi*4-0x5e],dh
  4284e2:	xchg   edi,eax
  4284e3:	xchg   edi,eax
  4284e4:	aad    0x32
  4284e6:	jmp    edi
  4284e8:	fidivr DWORD PTR [ebp+0x6e4e0003]
  4284ee:	sbb    ecx,DWORD PTR [esi+ecx*2]
  4284f1:	sub    cl,BYTE PTR [eax-0x4eb106ac]
  4284f7:	xchg   BYTE PTR [ebx],ah
  4284f9:	mov    al,ds:0xde64faaf
  4284fe:	add    eax,DWORD PTR [eax]
  428500:	aad    0xb5
  428502:	inc    ebx
  428503:	jne    0x4284e5
  428505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428506:	iret   
  428507:	and    esi,ecx
  428509:	pop    edx
  42850a:	mov    eax,0x8663238c
  42850f:	fsubr  DWORD PTR [esi]
  428511:	xor    BYTE PTR [esi],cl
  428513:	xlat   BYTE PTR ds:[ebx]
  428514:	pusha  
  428515:	ficomp WORD PTR [edi]
  428517:	cmp    BYTE PTR [ebp-0x52],cl
  42851a:	(bad)  
  42851b:	call   ebp
  42851d:	pop    edx
  42851e:	cmp    al,0x8c
  428520:	aad    0x32
  428522:	xchg   BYTE PTR [ecx+edi*4+0x66],al
  428526:	xchg   BYTE PTR [eax],cl
  428528:	pop    eax
  428529:	push   es
  42852a:	and    BYTE PTR [eax],ch
  42852c:	xchg   DWORD PTR [edi-0x647ab1d4],esi
  428532:	je     0x4284c8
  428534:	add    BYTE PTR [eax],al
  428536:	aad    0x30
  428538:	inc    DWORD PTR [ebp+edx*4+0x49870846]
  42853f:	dec    ebp
  428540:	daa    
  428541:	call   0xfb973338
  428546:	pop    esi
  428547:	mov    ecx,0x9e7fe65
  42854c:	bound  ecx,QWORD PTR [edx+0x12f4ee19]
  428552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428553:	jmp    FWORD PTR [edx]
  428555:	push   es
  428556:	pop    ecx
  428557:	sahf   
  428558:	jmp    0xffee5a60
  42855d:	adc    ecx,esi
  42855f:	lea    ebp,[esi+0x3]
  428562:	aad    0x9
  428564:	out    dx,al
  428565:	xor    eax,0x3668dde
  42856a:	aad    0x9
  42856c:	mov    ebx,DWORD PTR [edx+esi*4]
  42856f:	mov    ebp,0xbe5f1a9a
  428574:	mov    ds,ebp
  428576:	or     eax,0x53d094fb
  42857b:	fmulp  st(4),st
  42857d:	not    DWORD PTR [ecx-0x32]
  428580:	(bad)  
  428581:	sti    
  428582:	xor    dl,BYTE PTR [eax]
  428584:	fild   DWORD PTR [ebx]
  428586:	aad    0x86
  428588:	ins    DWORD PTR es:[edi],dx
  428589:	pop    ds
  42858a:	int    0x8
  42858c:	push   edi
  42858d:	or     dl,BYTE PTR [esi+eax*8+0x4]
  428591:	cld    
  428592:	pop    ds
  428593:	inc    ebx
  428594:	jmp    0xa2540c9c
  428599:	rol    BYTE PTR [eax],0x0
  42859c:	mov    dh,0x21
  42859e:	fadd   QWORD PTR [ebx]
  4285a0:	aad    0x9
  4285a2:	dec    edi
  4285a3:	ror    DWORD PTR [ebp-0x42],cl
  4285a6:	or     al,0x20
  4285a8:	pusha  
  4285a9:	jle    0x4285b0
  4285ab:	adc    ch,0x9
  4285ae:	jmp    0x6d11806e
  4285b3:	add    al,0xd5
  4285b5:	inc    edx
  4285b6:	sbb    eax,0xa38eed20
  4285bb:	push   ebp
  4285bc:	inc    ecx
  4285bd:	out    dx,al
  4285be:	loopne 0x42856c
  4285c0:	adc    ebx,edx
  4285c2:	imul   eax,eax,0xfffffff6
  4285c5:	std    
  4285c6:	call   FWORD PTR [eax]
  4285c8:	inc    ecx
  4285c9:	fwait
  4285ca:	jge    0x42863b
  4285cc:	add    bl,al
  4285ce:	ret    
  4285cf:	add    DWORD PTR [edx],esp
  4285d1:	dec    edx
  4285d2:	jp     0x4285c8
  4285d4:	dec    ebp
  4285d5:	mov    esp,0xe6a55607
  4285da:	pop    ds
  4285db:	bound  edx,QWORD PTR [ebx]
  4285dd:	xor    dh,BYTE PTR [ebp-0x7bc0d744]
  4285e3:	sub    DWORD PTR [ebp+0x72affa43],esp
  4285e9:	aas    
  4285ea:	je     0x4285f1
  4285ec:	mov    cl,0x31
  4285ee:	imul   edi,DWORD PTR [ebx+0xb],0xba95fb3f
  4285f5:	sbb    eax,0x3f93c9e8
  4285fa:	sti    
  4285fb:	push   cs
  4285fc:	and    eax,0x111be6
  428601:	add    BYTE PTR [eax],dh
  428603:	int    0xfa
  428605:	inc    BYTE PTR [ebp-0x7653eed6]
  42860b:	ds push ebx
  42860d:	add    esp,ebx
  42860f:	int3   
  428610:	cli    
  428611:	out    0x4d,al
  428613:	int    0x23
  428615:	in     eax,dx
  428616:	dec    ebp
  428617:	adc    DWORD PTR [eax-0x2a],edx
  42861a:	inc    edi
  42861b:	or     al,BYTE PTR [edi-0x78e64adb]
  428621:	icebp  
  428622:	pop    ebx
  428623:	frstor [ebx]
  428625:	in     eax,dx
  428626:	inc    esp
  428627:	sar    dl,cl
  428629:	sbb    BYTE PTR [ebp+0x6adec08c],dh
  42862f:	add    al,0xfa
  428631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428632:	mov    DWORD PTR [edx-0x75353a84],ecx
  428638:	inc    esp
  428639:	int    0xc6
  42863b:	mov    BYTE PTR [eax],cl
  42863d:	cmp    DWORD PTR [eax],esp
  42863f:	fild   DWORD PTR [edi]
  428641:	add    BYTE PTR [edi+0x3e],al
  428644:	dec    esi
  428645:	(bad)  
  428646:	fmul   QWORD PTR ds:0xbec5e57
  42864c:	push   ebx
  42864d:	mov    edx,DWORD PTR [ecx+0x78]
  428650:	mov    ebp,0x8270ac04
  428655:	in     al,dx
  428656:	sub    eax,0x7c0237a9
  42865b:	or     eax,0x5029574e
  428660:	retf   
  428661:	mov    eax,0xcf9
  428666:	add    BYTE PTR [eax],al
  428668:	and    al,0xc4
  42866a:	add    BYTE PTR [eax],0x7c
  42866d:	xchg   edx,eax
  42866e:	mov    esi,0x4594746a
  428673:	hlt    
  428674:	jg     0x428645
  428676:	mov    WORD PTR [ebp-0x4c],es
  428679:	outs   dx,BYTE PTR ds:[esi]
  42867a:	dec    ebx
  42867b:	mov    DWORD PTR [ecx+0x3c001db5],0xe845bf0d
  428685:	inc    edx
  428686:	sti    
  428687:	jmp    FWORD PTR [esi+edi*8]
  42868a:	inc    esp
  42868b:	lock pop ds
  42868d:	or     eax,0x2f3b0000
  428692:	adc    edx,DWORD PTR [esi]
  428694:	in     al,dx
  428695:	add    eax,0x1828c47b
  42869a:	test   DWORD PTR [ebp-0x3027f],0x5651761b
  4286a4:	sbb    esp,DWORD PTR [edx-0x44]
  4286a7:	call   0x3057638e
  4286ac:	cmovge edi,ebx
  4286af:	test   BYTE PTR [ebx+eiz*2],bh
  4286b2:	sbb    DWORD PTR [esi-0x5e],edx
  4286b5:	or     DWORD PTR [ebp+eax*2+0x34637634],0xffffffd5
  4286bd:	cmc    
  4286be:	sar    edi,0x3c
  4286c1:	xor    eax,0x1d5000dd
  4286c6:	pop    eax
  4286c7:	lea    ecx,[eax+0x7a]
  4286ca:	push   ecx
  4286cb:	sti    
  4286cc:	add    BYTE PTR [eax],al
  4286ce:	mov    dl,0x8a
  4286d0:	mov    DWORD PTR [edx+ebp*4],eax
  4286d3:	scas   eax,DWORD PTR es:[edi]
  4286d4:	(bad)  
  4286d5:	jle    0x428679
  4286d7:	xor    edx,ebp
  4286d9:	ret    
  4286da:	fcom   QWORD PTR [ebp+0x4b]
  4286dd:	jb     0x4286c8
  4286df:	stos   DWORD PTR es:[edi],eax
  4286e0:	shl    bh,1
  4286e2:	std    
  4286e3:	jmp    0x4286e8
  4286e5:	add    ch,dl
  4286e7:	mov    ch,BYTE PTR [esi+0x0]
  4286ea:	aad    0x32
  4286ec:	push   edi
  4286ed:	adc    edx,DWORD PTR [edx-0x2218b109]
  4286f3:	out    dx,eax
  4286f4:	fdiv   st,st(7)
  4286f6:	ins    DWORD PTR es:[edi],dx
  4286f7:	call   0xc8b1:0x7f5afa74
  4286fe:	push   ss
  4286ff:	jge    0x42877b
  428701:	in     al,dx
  428702:	push   esp
  428703:	inc    DWORD PTR ds:[eax]
  428706:	aad    0x32
  428708:	xlat   BYTE PTR ds:[ebx]
  428709:	cli    
  42870a:	aad    0x32
  42870c:	call   DWORD PTR [edx+0x60]
  42870f:	lods   eax,DWORD PTR ds:[esi]
  428710:	add    edi,ebx
  428712:	sub    ch,BYTE PTR [edi]
  428714:	scas   eax,DWORD PTR es:[edi]
  428715:	out    0x58,eax
  428717:	rcl    DWORD PTR [eax-0x5],0x4f
  42871b:	lods   eax,DWORD PTR ds:[esi]
  42871c:	add    edi,ebx
  42871e:	adc    dl,BYTE PTR [edi+0x15]
  428721:	(bad)  
  428722:	aad    0x4f
  428724:	dec    esi
  428725:	sti    
  428726:	dec    edi
  428727:	fld    QWORD PTR [ebx+edi*8]
  42872a:	cli    
  42872b:	jle    0x42873f
  42872d:	rcl    BYTE PTR [ebp+0x69],0xaf
  428731:	xchg   DWORD PTR [eax],eax
  428733:	add    BYTE PTR [eax+0x69d00d70],dl
  428739:	or     DWORD PTR [eax],eax
  42873b:	mov    edx,0x52e77649
  428740:	into   
  428741:	aas    
  428742:	xlat   BYTE PTR ds:[ebx]
  428743:	xor    al,0xde
  428745:	ja     0x4286fe
  428747:	jmp    0xc46c9d99
  42874c:	adc    al,0x94
  42874e:	rol    DWORD PTR [edi-0x4e7e4a5d],cl
  428754:	sti    
  428755:	push   eax
  428756:	add    edi,DWORD PTR [ebp-0x2f]
  428759:	(bad)  
  42875a:	das    
  42875b:	inc    esi
  42875c:	add    BYTE PTR [ebx-0x117e7bb3],dl
  428762:	in     eax,0x3
  428764:	aad    0xda
  428766:	mov    dl,0xba
  428768:	cli    
  428769:	or     eax,0xb3d503f5
  42876e:	lock push edx
  428770:	test   al,0x7d
  428772:	sub    eax,esi
  428774:	push   0x40
  428776:	aam    0xcb
  428778:	ror    cl,1
  42877a:	call   0x3e3de4fd
  42877f:	jl     0x428751
  428781:	and    eax,0x85de4ece
  428786:	rol    BYTE PTR ds:0x987409d5,1
  42878c:	icebp  
  42878d:	ds cli 
  42878f:	push   ecx
  428790:	ins    DWORD PTR es:[edi],dx
  428791:	lahf   
  428792:	jmp    0x77745c9a
  428797:	jge    0x428799
  428799:	add    ch,dl
  42879b:	or     DWORD PTR [edi+edx*4+0x35],esi
  42879f:	inc    eax
  4287a0:	ficom  DWORD PTR [ecx+0x4d]
  4287a3:	push   0xffffffe9
  4287a5:	add    edx,ebp
  4287a7:	xor    DWORD PTR [edi+0x7e],eax
  4287aa:	aad    0x9
  4287ac:	je     0x428735
  4287ae:	mov    cl,0x3e
  4287b0:	mov    edx,0xffc55c51
  4287b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287b6:	push   0x5fe1664b
  4287bb:	(bad)  
  4287bc:	iret   
  4287bd:	je     0x4287d1
  4287bf:	arpl   WORD PTR [edi+0x39],cx
  4287c2:	and    al,0x15
  4287c4:	sbb    bh,bh
  4287c6:	xchg   esi,eax
  4287c7:	ds jle 0x42876f
  4287ca:	aad    0x8c
  4287cc:	jne    0x42882f
  4287ce:	dec    ecx
  4287cf:	push   0x31d6e900
  4287d4:	xor    esp,DWORD PTR [ebx-0x2f]
  4287d7:	or     DWORD PTR [ebp-0x617ebd0c],ecx
  4287dd:	jmp    0x142a91b8
  4287e2:	adc    ecx,DWORD PTR [edx]
  4287e4:	add    BYTE PTR [edx+eiz*4+0x7e],ah
  4287e8:	mov    eax,0x9d98a
  4287ed:	push   ecx
  4287ee:	push   0xffffff84
  4287f0:	add    cl,ch
  4287f2:	repz mov ah,0x83
  4287f5:	jno    0x428834
  4287f7:	or     DWORD PTR [eax],eax
  4287f9:	jmp    0xe9c8a1fc
  4287fe:	add    BYTE PTR [eax],al
  428800:	(bad)  
  428801:	mov    WORD PTR [ebx+0x9d61f],es
  428807:	pusha  
  428808:	adc    ah,BYTE PTR [esi]
  42880a:	add    eax,0x9d60f
  42880f:	jo     0x428823
  428811:	cs add eax,0x9d7ff
  428817:	pusha  
  428818:	adc    bl,BYTE PTR [edx-0x77]
  42881b:	mov    WORD PTR [edx+0x66e5458c],cs
  428821:	xchg   DWORD PTR [ebp-0x2b],eax
  428824:	xor    BYTE PTR [esi],al
  428826:	dec    edi
  428827:	(bad)  
  428828:	and    al,BYTE PTR [ebp+0x9d641cc]
  42882e:	add    BYTE PTR [eax],al
  428830:	ins    BYTE PTR es:[edi],dx
  428831:	fst    DWORD PTR [esp+edx*2]
  428834:	or     al,0x4a
  428836:	sti    
  428837:	test   BYTE PTR [ecx+ecx*1],bh
  42883a:	test   DWORD PTR [ebp+ebp*8+0x9],edx
  42883e:	add    BYTE PTR [ebx-0x61],dl
  428841:	je     0x42888d
  428843:	(bad)  
  428844:	stc    
  428845:	int    0x4f
  428847:	lea    edi,[ecx]
  428849:	icebp  
  42884a:	sti    
  42884b:	call   DWORD PTR [ebx+0x79]
  42884e:	mov    BYTE PTR [ebp+0x60],bl
  428851:	jbe    0x42883b
  428853:	sbb    edi,DWORD PTR [ebp-0x5e74fff7]
  428859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42885a:	test   BYTE PTR [ebp+0x20],0x9b
  42885e:	test   DWORD PTR [eax],0x8d4e09ac
  428864:	add    BYTE PTR [eax],al
  428866:	cmp    DWORD PTR [ecx-0xf0672b1],esi
  42886c:	sti    
  42886d:	call   DWORD PTR [ebx]
  42886f:	jns    0x4287f3
  428871:	inc    ebp
  428872:	adc    cl,ah
  428874:	ja     0x4288dd
  428876:	jl     0x428881
  428878:	mov    DWORD PTR [ebp-0x5c],eax
  42887b:	test   eax,edi
  42887d:	inc    DWORD PTR [ebx+0x6c00d685]
  428883:	or     DWORD PTR [ebx],esi
  428885:	ret    
  428886:	inc    ebx
  428887:	xchg   ebx,eax
  428888:	into   
  428889:	add    BYTE PTR [ecx+ecx*1],bh
  42888c:	cmp    DWORD PTR [ebp-0x2c],0xffffff82
  428890:	mov    WORD PTR [ebp-0x60],es
  428893:	js     0x428821
  428895:	test   esp,esi
  428897:	int3   
  428898:	idiv   bh
  42889a:	dec    esp
  42889b:	mov    esi,0x7bd4fc44
  4288a0:	pop    esi
  4288a1:	add    BYTE PTR [esi+edi*4],ch
  4288a4:	inc    esp
  4288a5:	clc    
  4288a6:	jg     0x428875
  4288a8:	div    BYTE PTR [ebp+edx*8+0x2e]
  4288ac:	push   es
  4288ad:	mov    edi,0x8cb20a8a
  4288b2:	nop
  4288b3:	jb     0x428869
  4288b5:	mov    WORD PTR [eax+0x6b],ds
  4288b8:	push   eax
  4288b9:	sti    
  4288ba:	jmp    0x214a:0xe1457722
  4288c1:	arpl   bp,dx
  4288c3:	xor    bh,BYTE PTR [ebp+eax*2-0x33]
  4288c7:	scas   eax,DWORD PTR es:[edi]
  4288c8:	dec    ebx
  4288c9:	sti    
  4288ca:	add    BYTE PTR [eax],al
  4288cc:	fisubr DWORD PTR [esi+0x32d5006e]
  4288d2:	push   es
  4288d3:	mov    edi,0x76acca
  4288d8:	aad    0x32
  4288da:	jbe    0x428921
  4288dc:	test   eax,0x4d7c0a5
  4288e1:	or     DWORD PTR ds:0x2bb5484f,eax
  4288e7:	cld    
  4288e8:	xchg   edx,eax
  4288e9:	(bad)  [edi+ecx*2-0x4d892a4]
  4288f0:	call   0xd582786b
  4288f5:	lods   eax,DWORD PTR ds:[esi]
  4288f6:	inc    ebx
  4288f7:	jne    0x4288bf
  4288f9:	xchg   esp,eax
  4288fa:	dec    edx
  4288fb:	jne    0x428962
  4288fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288fe:	enter  0x683,0xa3
  428902:	xor    BYTE PTR [ebp+0x7d],0x1a
  428906:	dec    esi
  428907:	arpl   bp,dx
  428909:	xor    dl,BYTE PTR [esi-0x1]
  42890c:	push   edi
  42890d:	jmp    0xf87f:0x1a98894a
  428914:	cmp    bh,BYTE PTR [esi-0x4be9c944]
  42891a:	mov    eax,0x5742a886
  42891f:	out    0x20,al
  428921:	sub    ecx,DWORD PTR [edx-0x7b]
  428924:	adc    eax,0x7b0e6309
  428929:	mov    bh,0x6b
  42892b:	cwde   
  42892c:	jno    0x42896a
  42892e:	ror    BYTE PTR [esi+0x0],cl
  428931:	add    BYTE PTR [ebp-0x2a8438cf],bl
  428937:	or     edx,eax
  428939:	fdiv   st,st(6)
  42893b:	(bad)  
  42893c:	mov    ds:0xc0b5efb6,eax
  428941:	jp     0x4289a3
  428943:	push   ebp
  428944:	sbb    DWORD PTR [ebx+0x3e908d6],ecx
  42894a:	mov    ebp,0xce4e206f
  42894f:	xchg   DWORD PTR [ebp+0xb4a59f3],ebp
  428955:	hlt    
  428956:	daa    
  428957:	lea    esi,[eax+esi*1]
  42895a:	mov    ebp,0xae4df6d9
  42895f:	xchg   BYTE PTR [ecx+0x243ca3d7],ch
  428965:	fs jmp 0x6bd7:0x23b2b65e
  42896d:	enter  0xda82,0x63
  428971:	mov    BYTE PTR [ebp+0x254e4a3e],bl
  428977:	cmp    edi,DWORD PTR [edi+ebx*2+0x463cb56e]
  42897e:	adc    BYTE PTR [edx-0x13],al
  428981:	add    al,0xd5
  428983:	or     DWORD PTR [edx],ebp
  428985:	clc    
  428986:	add    bl,BYTE PTR [edx]
  428988:	test   eax,0xea4a5803
  42898d:	xchg   DWORD PTR [eax],ebx
  42898f:	cmp    al,0x12
  428991:	dec    esi
  428992:	ds mov ch,0xc
  428995:	dec    esi
  428996:	add    BYTE PTR [eax],al
  428998:	loopne 0x428977
  42899a:	fadd   st,st(3)
  42899c:	xor    bh,BYTE PTR [esp+eiz*4]
  42899f:	push   edi
  4289a0:	stos   BYTE PTR es:[edi],al
  4289a1:	mov    esp,0xed5fcff
  4289a6:	jle    0x428a17
  4289a8:	mov    BYTE PTR [esi],bh
  4289aa:	sti    
  4289ab:	out    0x2a,al
  4289ad:	daa    
  4289ae:	call   0xfb821558
  4289b3:	adc    BYTE PTR [edx],dh
  4289b5:	pop    ebx
  4289b6:	jb     0x4289ad
  4289b8:	jge    0x428976
  4289ba:	fist   DWORD PTR [ecx-0x54]
  4289bd:	or     DWORD PTR [eax],eax
  4289bf:	jmp    0xe942ef22
  4289c4:	(bad)  
  4289c5:	xor    DWORD PTR [esi-0x73],ecx
  4289c8:	mov    BYTE PTR [esi],bh
  4289ca:	out    0xf1,eax
  4289cc:	and    DWORD PTR [ebp-0x708b6e25],esi
  4289d2:	cli    
  4289d3:	xchg   esi,eax
  4289d4:	jo     0x4289b6
  4289d6:	push   esi
  4289d7:	mov    al,ds:0x9586d514
  4289dc:	push   esi
  4289dd:	sub    eax,0x9d6e800
  4289e2:	dec    edi
  4289e3:	pop    ds
  4289e4:	push   0xa751153f
  4289e9:	cli    
  4289ea:	(bad)  
  4289eb:	jg     0x4289d9
  4289ed:	jnp    0x428976
  4289ef:	pop    ecx
  4289f0:	(bad)  
  4289f1:	aas    
  4289f2:	adc    DWORD PTR [edi+0x10],0x79e9000a
  4289f9:	lea    ecx,[ebp-0x29ffff17]
  4289ff:	or     DWORD PTR [ebp-0x4c12e94],ecx
  428a05:	fadd   QWORD PTR ss:[esi-0x18]
  428a09:	jp     0x428992
  428a0b:	inc    eax
  428a0c:	sti    
  428a0d:	ins    DWORD PTR es:[edi],dx
  428a0e:	cdq    
  428a0f:	mov    ch,0x7b
  428a11:	ficom  DWORD PTR [esi+0x4397f284]
  428a17:	mov    edx,0x3ed6e4b3
  428a1c:	sti    
  428a1d:	add    bl,bl
  428a1f:	jns    0x428a5c
  428a21:	cmp    esi,edx
  428a23:	pop    ecx
  428a24:	jmp    0x2bff:0xf705898a
  428a2b:	xchg   bl,dh
  428a2d:	push   DWORD PTR [ecx-0x1627ac5]
  428a33:	int3   
  428a34:	idiv   bh
  428a36:	jns    0x4289bb
  428a38:	sti    
  428a39:	dec    BYTE PTR [ebx]
  428a3b:	int    0xe2
  428a3d:	push   es
  428a3e:	imul   eax,DWORD PTR [ebx-0x32d400ff],0xbaf4b606
  428a48:	dec    ebx
  428a49:	or     ch,ch
  428a4b:	cmp    al,0xb1
  428a4d:	ret    
  428a4e:	dec    ecx
  428a4f:	inc    ecx
  428a50:	add    ecx,DWORD PTR [ebp-0xffdfe0]
  428a56:	imul   eax,esi,0x32
  428a59:	(bad)  
  428a5a:	jecxz  0x428a77
  428a5c:	xor    eax,DWORD PTR [ebp-0x5c]
  428a5f:	dec    ecx
  428a60:	sub    al,0x80
  428a62:	add    BYTE PTR [eax],al
  428a64:	jmp    0x2c428175
  428a69:	(bad)  
  428a6a:	je     0x428a72
  428a6c:	scas   eax,DWORD PTR es:[edi]
  428a6d:	js     0x428a72
  428a6f:	sub    bl,BYTE PTR [ecx-0x4049f9cb]
  428a75:	sbb    edx,ecx
  428a77:	test   DWORD PTR [esi+eax*2+0x21620f0c],ebp
  428a7e:	add    ah,BYTE PTR [esi-0x1b]
  428a81:	and    BYTE PTR [edi+0x42],cl
  428a84:	xlat   BYTE PTR ds:[ebx]
  428a85:	std    
  428a86:	jnp    0x428a7b
  428a88:	pop    edi
  428a89:	hlt    
  428a8a:	pop    ebp
  428a8b:	mov    DWORD PTR [eax+0x4e],edi
  428a8e:	loop   0x428a92
  428a90:	das    
  428a91:	int    0x55
  428a93:	pop    ebx
  428a94:	add    eax,0xd50003cb
  428a99:	jne    0x428b13
  428a9b:	in     al,dx
  428a9c:	push   esp
  428a9d:	aaa    
  428a9e:	jmp    0x8251:0xb02332fe
  428aa5:	pushf  
  428aa6:	imul   DWORD PTR [esi]
  428aa8:	(bad)  
  428aa9:	lods   eax,DWORD PTR ds:[esi]
  428aaa:	shl    ebx,0x86
  428aad:	xchg   edx,eax
  428aae:	dec    esp
  428aaf:	adc    eax,0xffbf38ed
  428ab4:	push   edi
  428ab5:	outs   dx,DWORD PTR ds:[esi]
  428ab6:	clc    
  428ab7:	addr16 mov ch,0x2e
  428aba:	(bad)  
  428abb:	jmp    FWORD PTR [edi+0x2a]
  428abe:	inc    esi
  428abf:	xor    eax,0xffc36931
  428ac4:	jmp    0x428b23
  428ac6:	(bad)  
  428ac7:	or     eax,0x22950000
  428acc:	jl     0x428b13
  428ace:	in     eax,0x3b
  428ad0:	inc    edx
  428ad1:	or     ebx,DWORD PTR [ecx-0x63]
  428ad4:	add    eax,0x492dd500
  428ad9:	add    ebp,edx
  428adb:	and    bh,BYTE PTR [ebp+eax*2-0x4b]
  428adf:	sub    eax,0x22d50149
  428ae4:	jl     0x428b2b
  428ae6:	lea    ebp,ds:0x22d50149
  428aec:	jl     0x428b33
  428aee:	jns    0x428ac5
  428af0:	nop
  428af1:	lock xchg ebx,eax
  428af3:	scas   eax,DWORD PTR es:[edi]
  428af4:	inc    esi
  428af5:	mov    eax,0xffff2233
  428afa:	call   0x7f22:0xd5013765
  428b01:	ret    
  428b02:	sbb    bh,bh
  428b04:	add    DWORD PTR [eax],eax
  428b06:	aad    0xa2
  428b08:	pop    ebx
  428b09:	sbb    BYTE PTR [edx+0x22],bl
  428b0c:	dec    DWORD PTR [eax+eiz*8-0x2a5c742a]
  428b13:	or     ecx,ebp
  428b15:	add    edi,DWORD PTR ds:0xd5046204
  428b1b:	xchg   BYTE PTR [eax+edx*8+0x3f],bl
  428b1f:	cmp    BYTE PTR [edx],cl
  428b21:	mov    WORD PTR [ebp+0x9],?
  428b24:	jmp    0x6376c82c
  428b29:	add    al,0xd5
  428b2b:	xchg   BYTE PTR [ebx+eiz*4+0x0],bh
  428b2f:	add    BYTE PTR [ebp+0x62],bl
  428b32:	jmp    0xd364603a
  428b37:	adc    ebp,0x46d06c09
  428b3d:	jno    0x428bbe
  428b3f:	add    edx,ebp
  428b41:	or     ecx,eax
  428b43:	fs push edi
  428b45:	or     ecx,ebp
  428b47:	jl     0x428ad1
  428b49:	cmp    eax,0xd8dec06c
  428b4e:	ds cld 
  428b50:	mov    eax,DWORD PTR [esi+0x37cf5364]
  428b56:	mov    ds:0x94cd53b3,al
  428b5b:	dec    edx
  428b5c:	dec    ecx
  428b5d:	lea    esp,[ecx-0x7221fb6]
  428b63:	ret    
  428b64:	mov    dl,0x8e
  428b66:	test   eax,0xe7cd51fa
  428b6b:	add    edx,ebp
  428b6d:	ficom  DWORD PTR ds:0x24850bb7
  428b73:	dec    esp
  428b74:	and    eax,0x895b6c85
  428b79:	aaa    
  428b7a:	pop    edx
  428b7b:	mov    bl,0x4d
  428b7d:	aad    0x44
  428b7f:	mov    dh,0x6d
  428b81:	push   es
  428b82:	call   0xc4c5608a
  428b87:	push   ebx
  428b88:	outs   dx,BYTE PTR ds:[esi]
  428b89:	int    0x4c
  428b8b:	mov    DWORD PTR [esi+0xa],ebx
  428b8e:	add    cl,ch
  428b90:	(bad)  
  428b91:	fisttp DWORD PTR [esp+eiz*4-0x26360000]
  428b98:	mov    WORD PTR [esi+ebp*4+0x35],gs
  428b9c:	sti    
  428b9d:	push   ds
  428b9e:	xchg   BYTE PTR [eax-0x5661eabb],dl
  428ba4:	arpl   cx,bp
  428ba6:	(bad)  
  428ba7:	add    BYTE PTR [ebp+0x1d],0x53
  428bab:	xor    bh,bl
  428bad:	out    dx,al
  428bae:	mov    ds:0xd6e90042,al
  428bb3:	(bad)  
  428bb4:	mov    esi,0x4b54de
  428bb9:	jmp    0xc9c01a94
  428bbe:	inc    edi
  428bbf:	xchg   BYTE PTR [ebp-0x77],al
  428bc2:	inc    ecx
  428bc3:	xchg   BYTE PTR [ebp-0x4cd623f],al
  428bc9:	sbb    DWORD PTR [eax-0x34],ebp
  428bcc:	sti    
  428bcd:	rcl    edx,1
  428bcf:	lods   eax,DWORD PTR ds:[esi]
  428bd0:	(bad)  
  428bd1:	call   0x6b125835
  428bd6:	and    DWORD PTR [ebx],esi
  428bd8:	or     ebp,DWORD PTR [ebp+0x75]
  428bdb:	or     DWORD PTR [eax],eax
  428bdd:	jmp    0x6f4e02b3
  428be2:	sub    eax,0x31e9000a
  428be7:	mov    ch,0xd7
  428be9:	pop    ds
  428bea:	and    cl,ch
  428bec:	mov    bl,0x19
  428bee:	sub    cl,BYTE PTR [ebp+0x330c75e8]
  428bf4:	push   eax
  428bf5:	bound  edx,QWORD PTR [edx+0x32]
  428bf8:	call   0xaa428cf0
  428bfd:	ss sti 
  428bff:	jo     0x428c43
  428c01:	ds jg  0x428c55
  428c04:	or     al,0xbe
  428c06:	jl     0x428c1a
  428c08:	sbb    BYTE PTR [eax+edi*2-0x34891900],bh
  428c0f:	add    edi,DWORD PTR [ecx]
  428c11:	out    0x4f,al
  428c13:	call   0x395ad6
  428c18:	mov    ecx,0xc16975cd
  428c1d:	mov    dh,0x73
  428c1f:	jmp    ebx
  428c21:	ror    BYTE PTR [edi-0x73],0xa9
  428c25:	aad    0xfb
  428c27:	jmp    ebx
  428c29:	jge    0x428bad
  428c2b:	inc    ebp
  428c2c:	rcl    ch,1
  428c2e:	test   DWORD PTR [esp+ebp*1+0xa],esp
  428c32:	cmp    eax,0xffffffaf
  428c35:	rol    BYTE PTR [eax],0x72
  428c38:	hlt    
  428c39:	mov    dh,bh
  428c3b:	push   ebx
  428c3d:	or     DWORD PTR [eax],eax
  428c3f:	jbe    0x428c30
  428c41:	push   ebx
  428c42:	adc    al,0x5f
  428c44:	xchg   esi,eax
  428c45:	pop    edx
  428c46:	mov    WORD PTR [ebp-0x93f30],?
  428c4c:	mov    ah,0xd5
  428c4e:	fild   DWORD PTR [ebp-0xb0f614]
  428c54:	cdq    
  428c55:	fld    QWORD PTR [edx+0x74c2607d]
  428c5b:	fadd   DWORD PTR [edi-0x35]
  428c5e:	div    BYTE PTR [ebp+0x0]
  428c61:	add    BYTE PTR [esi+eax*4+0x11],cl
  428c65:	add    ebp,DWORD PTR [ecx+ecx*1+0x5b1ee850]
  428c6c:	stc    
  428c6d:	(bad)  
  428c6e:	aas    
  428c6f:	cmc    
  428c70:	adc    eax,DWORD PTR [ebp+0x570b436c]
  428c76:	xor    DWORD PTR [edi+ebx*8-0x18],edi
  428c7a:	mov    ah,0x52
  428c7c:	stc    
  428c7d:	(bad)  
  428c7e:	clc    
  428c7f:	enter  0x373,0x23
  428c83:	je     0x428c68
  428c85:	xor    edx,ebp
  428c87:	div    DWORD PTR [ebx+0x7270064e]
  428c8d:	inc    ebp
  428c8e:	ins    DWORD PTR es:[edi],dx
  428c8f:	xchg   ebx,eax
  428c90:	jb     0x428c17
  428c92:	ins    DWORD PTR es:[edi],dx
  428c93:	test   DWORD PTR [edi-0x5],0xebc9fc05
  428c9a:	push   edx
  428c9b:	jle    0x428ce0
  428c9d:	ret    
  428c9e:	nop
  428c9f:	jmp    0x1548:0x22d500fa
  428ca6:	popf   
  428ca7:	xor    bh,BYTE PTR [edi-0x81ca601]
  428cad:	or     DWORD PTR [ecx],0xd
  428cb0:	dec    eax
  428cb1:	sti    
  428cb2:	and    bh,BYTE PTR [esi-0x613f04be]
  428cb8:	out    dx,eax
  428cb9:	aas    
  428cba:	aad    0x23
  428cbc:	mov    ebp,0x4fae56f3
  428cc1:	(bad)  
  428cc2:	shl    DWORD PTR [eax+0xfa76],cl
  428cc8:	cli    
  428cc9:	pop    ebx
  428cca:	inc    ebx
  428ccb:	jne    0x428cb2
  428ccd:	dec    edx
  428cce:	xchg   DWORD PTR [edi+0x5d0d4beb],eax
  428cd4:	in     eax,dx
  428cd5:	cld    
  428cd6:	out    dx,eax
  428cd7:	xchg   BYTE PTR [eax+0x46],bl
  428cda:	fadd   st(6),st
  428cdc:	aad    0x22
  428cde:	push   DWORD PTR [edi-0xdd82]
  428ce4:	lods   eax,DWORD PTR ds:[esi]
  428ce5:	stc    
  428ce6:	sub    al,0xfb
  428ce8:	mov    edx,0x28fafc87
  428ced:	(bad)  
  428cee:	pop    esp
  428cef:	xchg   esi,eax
  428cf0:	pop    esi
  428cf1:	mov    WORD PTR [ebx+0x5b],es
  428cf4:	add    ebp,eax
  428cf6:	cmp    al,0xbf
  428cf8:	addr16 ja 0x428d52
  428cfb:	loop   0x428d05
  428cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cfe:	inc    edx
  428cff:	test   DWORD PTR [ebp+0x7bf5dd09],edx
  428d05:	pop    es
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	inc    ebp
  428d08:	dec    eax
  428d09:	shl    edi,0xb
  428d0c:	les    edi,FWORD PTR [ebp+0x9d53e51]
  428d12:	es mov cl,0x5b
  428d15:	and    eax,0x8a5d6066
  428d1a:	inc    ebp
  428d1b:	jo     0x428d70
  428d1d:	xor    al,0xe9
  428d1f:	mov    dl,0xa4
  428d21:	adc    BYTE PTR [edi],0xaf
  428d24:	push   ecx
  428d25:	popf   
  428d26:	lds    ebp,FWORD PTR [ebx-0x2b]
  428d29:	or     ecx,ebp
  428d2b:	js     0x428d2d
  428d2d:	add    BYTE PTR [edi+0xc7ab6e5],dl
  428d33:	and    DWORD PTR [esi+0x47],eax
  428d36:	pop    ds
  428d37:	xor    al,0x65
  428d39:	inc    esp
  428d3a:	into   
  428d3b:	lea    ecx,[esi+0x2]
  428d3e:	aad    0x9
  428d40:	repz std 
  428d42:	fidivr DWORD PTR [ebp-0x127686e2]
  428d48:	sub    BYTE PTR [ecx+ebp*1-0x2fc16f7],cl
  428d4f:	daa    
  428d50:	gs add edx,ebp
  428d53:	sub    BYTE PTR [ebx+0x8ed997c],0x13
  428d5a:	adc    eax,0xcfb418d9
  428d5f:	mov    ebp,0xee2178e0
  428d64:	fcomp  st(3)
  428d66:	sub    eax,0x330426ac
  428d6b:	or     eax,0x866004ff
  428d70:	lds    ecx,FWORD PTR [edi+0x5be909d5]
  428d76:	shl    DWORD PTR [ebx],1
  428d78:	jnp    0x428dc0
  428d7a:	lods   al,BYTE PTR ds:[esi]
  428d7b:	(bad)  
  428d7c:	(bad)  
  428d7d:	jmp    0x8e0d:0xe86609d6
  428d84:	and    al,0x85
  428d86:	(bad)  
  428d87:	or     DWORD PTR [eax],eax
  428d89:	mov    ecx,0xa123bdfd
  428d8e:	push   cs
  428d8f:	imul   edi,eax,0x4f
  428d92:	add    BYTE PTR [eax],al
  428d94:	adc    ecx,DWORD PTR [esi-0x371d0940]
  428d9a:	std    
  428d9b:	call   0xa0347076
  428da0:	sub    al,0xa
  428da2:	lea    esp,[ebp+0x264fedea]
  428da8:	adc    ah,bh
  428daa:	dec    ebx
  428dab:	jb     0x428e27
  428dad:	out    0x53,eax
  428daf:	add    DWORD PTR [edx-0x56f10662],esi
  428db5:	int    0x23
  428db7:	leave  
  428db8:	push   edi
  428db9:	xor    bh,bl
  428dbb:	out    dx,al
  428dbc:	call   0x21a1:0xd6e8fe1d
  428dc3:	out    0xd6,eax
  428dc5:	or     DWORD PTR [esi-0xf],esp
  428dc8:	cdq    
  428dc9:	cld    
  428dca:	mov    ebx,0xfa3314a7
  428dcf:	cld    
  428dd0:	push   ds
  428dd1:	add    eax,0xcd6fe940
  428dd6:	and    ecx,DWORD PTR ds:0x2123b56a
  428ddc:	dec    ecx
  428ddd:	gs add cl,ch
  428de0:	(bad)  
  428de1:	and    DWORD PTR ds:0x8d09d165,ebx
  428de7:	and    eax,0x4fb7f1f5
  428dec:	ror    DWORD PTR [ecx],1
  428dee:	add    BYTE PTR [ecx-0x16ff7958],al
  428df4:	and    esi,DWORD PTR [esi+0x23]
  428dfa:	pop    esp
  428dfb:	jle    0x428da4
  428dfd:	add    BYTE PTR [esi+eax*1+0xe0001e8],ch
  428e04:	add    BYTE PTR [ebp-0x479bed88],cl
  428e0a:	pop    esp
  428e0b:	or     eax,0xd9240000
  428e10:	jp     0x428e12
  428e12:	jl     0x428e13
  428e14:	jae    0x428e3a
  428e16:	sar    BYTE PTR [edi+edi*2],1
  428e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e1a:	ins    DWORD PTR es:[edi],dx
  428e1b:	push   es
  428e1c:	add    BYTE PTR [ecx+0x39281220],cl
  428e22:	nop
  428e23:	adc    ah,BYTE PTR [eax]
  428e25:	lss    esp,FWORD PTR [eax+eax*1-0x62ed400]
  428e2d:	xor    ah,dl
  428e2f:	mov    al,0x7b
  428e31:	and    al,0x14
  428e33:	mov    cl,0x43
  428e35:	and    al,0x38
  428e37:	push   DWORD PTR [ebx]
  428e39:	mov    eax,0x16fb22b
  428e3e:	sub    al,0x6
  428e40:	xor    DWORD PTR ds:0x3b3970,0xffffffa9
  428e47:	jno    0x428e68
  428e49:	pop    eax
  428e4a:	mov    ebp,0x1bb833cc
  428e4f:	in     al,0x88
  428e51:	inc    esp
  428e52:	loopne 0x428e8d
  428e54:	mov    WORD PTR [eax+edx*8+0x5],es
  428e58:	push   eax
  428e59:	mov    esi,DWORD PTR [eax+0xff1fe9]
  428e5f:	add    al,ah
  428e61:	jge    0x428e5a
  428e63:	(bad)  
  428e64:	xor    eax,0x292c1f71
  428e69:	jno    0x428e8a
  428e6b:	xor    ah,bh
  428e6d:	mov    dl,0x43
  428e6f:	and    al,0x8c
  428e71:	(bad)  
  428e72:	xor    edi,DWORD PTR [eax-0x76d2682b]
  428e78:	adc    DWORD PTR [edi-0x19],eax
  428e7b:	mov    WORD PTR [ecx],ds
  428e7d:	aas    
  428e7e:	fisttp DWORD PTR [edi+0x4e]
  428e81:	out    0x1f,eax
  428e83:	and    BYTE PTR [edx-0x5c047891],dl
  428e89:	je     0x428ecf
  428e8b:	xchg   DWORD PTR [ebp-0x1edc3816],ebx
  428e91:	pop    ds
  428e92:	jnp    0x428eb0
  428e94:	aam    0x22
  428e96:	(bad)  
  428e97:	cmp    cl,ch
  428e99:	push   es
  428e9a:	in     al,dx
  428e9b:	or     bl,BYTE PTR [ecx+0x55]
  428e9e:	(bad)  
  428e9f:	call   ebp
  428ea1:	or     esp,DWORD PTR ds:0xfe2d590b
  428ea7:	call   ebp
  428ea9:	mov    ds:0x3ae923ba,eax
  428eae:	js     0x428ef4
  428eb0:	icebp  
  428eb1:	add    BYTE PTR ss:[ecx+edi*8+0x3a],0xfd
  428eb7:	jle    0x428ecf
  428eb9:	sub    eax,0x8234557
  428ebe:	inc    esp
  428ebf:	xchg   DWORD PTR [ecx+0xe7e746],edx
  428ec5:	add    cl,dl
  428ec7:	cmp    BYTE PTR [edi],bh
  428ec9:	sti    
  428eca:	pop    esi
  428ecb:	in     al,0x56
  428ecd:	xor    eax,0x873f2803
  428ed2:	add    DWORD PTR [esi],0xfe7188f0
  428ed8:	adc    esi,DWORD PTR [edi]
  428eda:	loop   0x428eb2
  428edc:	sar    DWORD PTR [esi+0x1b],1
  428edf:	and    DWORD PTR [edx+0x414fedc2],ecx
  428ee5:	sti    
  428ee6:	sar    BYTE PTR [ebx],cl
  428ee8:	ss je  0x428ee5
  428eeb:	lods   al,BYTE PTR ds:[esi]
  428eec:	add    eax,0x1d099584
  428ef1:	in     eax,dx
  428ef2:	(bad)  
  428ef3:	stc    
  428ef4:	adc    ebx,DWORD PTR [ebx+ebx*2]
  428ef7:	(bad)  
  428ef8:	out    0xff,eax
  428efa:	and    dh,BYTE PTR [esi-0x48f5001c]
  428f00:	pause  
  428f02:	adc    esi,esp
  428f04:	fmul   DWORD PTR [esi+0x111c21a7]
  428f0a:	aad    0x9
  428f0c:	jle    0x428f23
  428f0e:	push   eax
  428f0f:	lods   eax,DWORD PTR ds:[esi]
  428f10:	or     al,0x14
  428f12:	push   edx
  428f13:	push   edi
  428f14:	push   ecx
  428f15:	mov    ebp,DWORD PTR [edx-0x2ed0add0]
  428f1b:	or     ch,0xe7
  428f1e:	ror    BYTE PTR [ebp+eax*8-0x48f53519],cl
  428f25:	or     eax,0x140cad54
  428f2a:	add    BYTE PTR [eax],al
  428f2c:	dec    esi
  428f2d:	xor    cl,ch
  428f2f:	add    eax,edi
  428f31:	add    DWORD PTR [edx],ebp
  428f33:	enter  0x19f6,0xf4
  428f37:	add    edx,ebp
  428f39:	or     DWORD PTR [esi-0x38],ebx
  428f3c:	not    BYTE PTR ds:0xbc22fc69
  428f42:	jnp    0x428ed2
  428f44:	xchg   ecx,eax
  428f45:	in     eax,0xe0
  428f47:	or     ebp,0x9
  428f4a:	jge    0x428efb
  428f4c:	push   eax
  428f4d:	or     al,0x65
  428f4f:	inc    esp
  428f50:	mov    DWORD PTR [edi+0x586f424],esp
  428f56:	sbb    eax,0x690769f5
  428f5b:	mov    esi,0xdc5509d5
  428f60:	mov    bl,0x49
  428f62:	add    DWORD PTR [edi],eax
  428f64:	popa   
  428f65:	fld    TBYTE PTR [eax-0x9]
  428f68:	jmp    0x17ee:0x51290010
  428f6f:	jmp    0xa9c7c5f1
  428f74:	xchg   esp,eax
  428f75:	lock sbb al,BYTE PTR gs:[esi+esi*4+0x23]
  428f7b:	sbb    eax,0x6bbf2789
  428f80:	(bad)  
  428f81:	or     ebx,edi
  428f83:	std    
  428f84:	mov    dl,0xff
  428f86:	xchg   ch,bh
  428f88:	jp     0x428f71
  428f8a:	cli    
  428f8b:	std    
  428f8c:	jb     0x428fa5
  428f8e:	xchg   DWORD PTR [edi+0x34ab0000],esp
  428f94:	je     0x428fa3
  428f96:	ins    DWORD PTR es:[edi],dx
  428f97:	js     0x428faa
  428f99:	jmp    0x9f5d:0x415009d6
  428fa0:	stc    
  428fa1:	dec    esi
  428fa2:	pop    ebx
  428fa3:	inc    esi
  428fa4:	adc    al,0x6c
  428fa6:	push   ss
  428fa7:	mov    ah,0xd
  428fa9:	jb     0x428f38
  428fab:	pop    es
  428fac:	push   ebx
  428fad:	bound  esp,QWORD PTR [ecx+eiz*1+0x3294bd29]
  428fb4:	test   BYTE PTR [ecx],ch
  428fb6:	xor    BYTE PTR [eax],0xfa
  428fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fba:	fidiv  DWORD PTR [edx]
  428fbc:	inc    esp
  428fbd:	int    0x3e
  428fbf:	mov    BYTE PTR [ebp+eax*8+0x2e],al
  428fc3:	clc    
  428fc4:	inc    ebx
  428fc5:	int    0x36
  428fc7:	add    al,0x7e
  428fc9:	xchg   edx,eax
  428fca:	xchg   esp,eax
  428fcb:	xor    bh,bl
  428fcd:	test   BYTE PTR [ebx-0x15],0x23
  428fd1:	add    DWORD PTR [ebx+0x48e6fa81],edx
  428fd7:	(bad)  
  428fd8:	and    ecx,DWORD PTR [ecx]
  428fda:	pusha  
  428fdb:	scas   al,BYTE PTR es:[edi]
  428fdc:	and    esi,ebp
  428fde:	mov    esi,0x94cf8857
  428fe3:	jl     0x429029
  428fe5:	add    al,cl
  428fe7:	inc    ebp
  428fe8:	jecxz  0x42900f
  428fea:	mov    ecx,ebx
  428fec:	neg    BYTE PTR [edi-0x1e]
  428fef:	mov    ch,0x0
  428ff1:	pop    ebx
  428ff2:	aaa    
  428ff3:	out    0x5c,eax
  428ff5:	ret    0x0
  428ff8:	test   al,0xa
  428ffa:	push   ebp
  428ffb:	mov    esp,DWORD PTR [eax-0x76]
  428ffe:	in     al,dx
  428fff:	inc    eax
  429000:	mov    esi,0xeb56000a
  429005:	jle    0x42907c
  429007:	enter  0xbb14,0xff
  42900b:	(bad)  
  42900c:	jl     0x428ff0
  42900e:	aaa    
  42900f:	cmp    BYTE PTR [edx+ecx*1-0x7d],0xc6
  429014:	(bad)  
  429015:	std    
  429016:	mov    BYTE PTR [ebp+0x18],al
  429019:	xor    eax,0xf2398df1
  42901e:	dec    ebp
  42901f:	push   eax
  429020:	mov    ebx,0x6c26e346
  429025:	or     al,BYTE PTR [eax]
  429027:	(bad)  
  429028:	sub    esi,ebx
  42902a:	adc    DWORD PTR [eax],eax
  42902c:	cmp    al,0xa
  42902e:	mov    edi,0xfb250c45
  429033:	jmp    FWORD PTR [ecx+ecx*8]
  429036:	adc    al,0x18
  429038:	cmp    cl,BYTE PTR [edx-0x5]
  42903b:	cmp    al,0x19
  42903e:	sub    edi,edi
  429040:	mov    cl,0x86
  429042:	sar    ch,0xd3
  429045:	enter  0x564f,0x3a
  429049:	leave  
  42904a:	jae    0x429009
  42904c:	in     al,0x53
  42904e:	not    BYTE PTR ds:0x40154c
  429054:	jns    0x42901b
  429056:	je     0x429076
  429058:	mov    edx,0x8d5153
  42905d:	add    BYTE PTR [ecx-0x2a97b013],bh
  429063:	leave  
  429064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429065:	cmp    eax,0x6601cad5
  42906a:	aam    0xb5
  42906c:	shl    ebx,1
  42906e:	pusha  
  42906f:	sahf   
  429070:	ds std 
  429072:	retf   0x2774
  429075:	and    al,0xbe
  429077:	pop    ebp
  429078:	inc    eax
  429079:	inc    ebx
  42907a:	push   esi
  42907b:	fs add al,0x6e
  42907e:	cdq    
  42907f:	sub    dh,BYTE PTR [edx-0x73d0dc05]
  429085:	jge    0x429024
  429087:	or     ecx,DWORD PTR [ebp+0x0]
  42908a:	aad    0x22
  42908c:	ja     0x42903c
  42908e:	aad    0x22
  429090:	jmp    edi
  429092:	inc    ebx
  429093:	mov    es,WORD PTR [eax-0x5]
  429096:	outs   dx,BYTE PTR ds:[esi]
  429097:	sub    eax,DWORD PTR [eax+0x75]
  42909a:	jge    0x429077
  42909c:	pop    es
  42909d:	mov    BYTE PTR [ebx-0x34],dh
  4290a0:	fistp  WORD PTR [ecx-0x64]
  4290a3:	loopne 0x429076
  4290a5:	xchg   BYTE PTR [ecx-0x5e],dh
  4290a8:	sub    al,ah
  4290aa:	xlat   BYTE PTR ds:[ebx]
  4290ab:	and    bh,bh
  4290ad:	dec    esi
  4290ae:	stos   DWORD PTR es:[edi],eax
  4290af:	xchg   ebx,eax
  4290b0:	lods   eax,DWORD PTR ds:[esi]
  4290b1:	pop    es
  4290b2:	push   es
  4290b3:	sbb    BYTE PTR [edx-0x306fd2bb],cl
  4290b9:	cli    
  4290ba:	loopne 0x4290c6
  4290bc:	push   ss
  4290bd:	inc    eax
  4290be:	aad    0x9f
  4290c0:	inc    edx
  4290c1:	or     al,0x0
  4290c3:	add    BYTE PTR [ebp-0x2afff4be],bh
  4290c9:	mov    BYTE PTR [edi],al
  4290cb:	sti    
  4290cc:	loopne 0x429094
  4290ce:	dec    eax
  4290cf:	aas    
  4290d0:	aad    0x2b
  4290d2:	adc    eax,0xff62e778
  4290d7:	mov    BYTE PTR [eax-0x354108ca],bl
  4290dd:	or     DWORD PTR [ebp+0x24],ebp
  4290e0:	aam    0x9
  4290e2:	jmp    0xe94d7fef
  4290e7:	add    ecx,DWORD PTR [edi+eax*8-0x3c]
  4290eb:	or     edi,ebx
  4290ed:	or     ch,cl
  4290ef:	add    ebx,DWORD PTR [esi+eax*8-0x64]
  4290f3:	or     edi,ecx
  4290f5:	or     ch,cl
  4290f7:	add    ecx,DWORD PTR [esi+eax*8-0x38]
  4290fb:	xchg   ecx,eax
  4290fc:	add    cl,0xa1
  4290ff:	aas    
  429100:	scas   al,BYTE PTR es:[edi]
  429101:	jno    0x429159
  429103:	add    al,0xd5
  429105:	or     DWORD PTR [ecx-0x16f6aa37],eax
  42910b:	nop
  42910c:	and    BYTE PTR [edx+0x41],bh
  42910f:	js     0x4290e6
  429111:	or     ecx,ebp
  429113:	sub    ecx,ebp
  429115:	mov    ch,cl
  429117:	add    edx,DWORD PTR [eax-0x4a]
  42911a:	mov    al,ds:0xe909407c
  42911f:	add    edi,DWORD PTR [ebp-0x20]
  429122:	addr16 add al,0xd5
  429125:	jle    0x429103
  429127:	jg     0x429129
  429129:	add    BYTE PTR ds:0xd503e973,bl
  42912f:	and    ebx,esp
  429131:	test   ch,dl
  429133:	or     DWORD PTR [ecx+edi*4+0x26],ebp
  429137:	jno    0x4291b3
  429139:	add    al,0xd5
  42913b:	or     DWORD PTR [ecx+0x15],eax
  42913e:	push   esp
  42913f:	or     ecx,ebp
  429141:	nop
  429142:	cwde   
  429143:	sub    eax,0xd8d2a9b9
  429148:	arpl   WORD PTR [ecx+0x3f0a2c8d],cx
  42914e:	test   DWORD PTR [ecx-0x762afc19],esp
  429154:	cli    
  429155:	sbb    BYTE PTR [ecx-0x2956ffe7],ah
  42915b:	xchg   al,al
  42915d:	fimul  WORD PTR [ebp-0xd]
  429160:	add    cl,ch
  429162:	(bad)  
  429163:	mov    esp,0x7d063a4e
  429168:	inc    ebp
  429169:	rol    DWORD PTR [esi],1
  42916b:	jge    0x4290f2
  42916d:	sub    DWORD PTR [eax+esi*1-0x329fe605],edx
  429174:	out    dx,eax
  429175:	sbb    bh,al
  429177:	or     BYTE PTR [ecx],al
  429179:	jmp    0xb5c01454
  42917e:	sti    
  42917f:	(bad)  
  429180:	out    dx,eax
  429181:	repz or DWORD PTR [bx+si],eax
  429185:	jmp    0x5988100a
  42918a:	xchg   BYTE PTR [esi-0x7b],bh
  42918d:	sub    DWORD PTR [eax],eax
  42918f:	add    BYTE PTR [edi+ebp*1],dl
  429192:	sti    
  429193:	sbb    DWORD PTR [esi-0x3b],ebx
  429196:	sti    
  429197:	xchg   ecx,eax
  429198:	ins    DWORD PTR es:[edi],dx
  429199:	sar    bh,1
  42919b:	call   0x6b3a56f1
  4291a0:	mov    esi,0x1a6d0b2e
  4291a5:	or     al,BYTE PTR [eax]
  4291a7:	jmp    0x6f4dfe1b
  4291ac:	loop   0x4291b7
  4291ae:	add    cl,ch
  4291b0:	dec    edi
  4291b1:	lods   eax,DWORD PTR ds:[esi]
  4291b2:	jecxz  0x429153
  4291b4:	lds    edi,FWORD PTR gs:[ebx+0x40856599]
  4291bb:	xor    al,0x3
  4291bd:	das    
  4291be:	push   eax
  4291bf:	bound  ecx,QWORD PTR ds:0x1093e82f
  4291c5:	sub    edi,ebx
  4291c7:	jo     0x4291e6
  4291c9:	xor    edi,DWORD PTR [edi+0x11]
  4291cc:	jecxz  0x4291cc
  4291ce:	xor    DWORD PTR [eax-0x2a],0x9
  4291d2:	add    BYTE PTR [eax],al
  4291d4:	pop    ss
  4291d5:	enter  0x8606,0xad
  4291d9:	push   es
  4291da:	add    BYTE PTR [eax],al
  4291dc:	ja     0x429227
  4291de:	xlat   BYTE PTR ds:[ebx]
  4291df:	push   esi
  4291e0:	cdq    
  4291e1:	inc    ecx
  4291e2:	iret   
  4291e3:	push   eax
  4291e4:	imul   eax,DWORD PTR [edx-0x12f402c0],0xc9b18b4f
  4291ee:	out    0x3f,eax
  4291f0:	stos   BYTE PTR es:[edi],al
  4291f1:	add    eax,0x8900
  4291f6:	add    esi,ebp
  4291f8:	jp     0x4291f2
  4291fa:	mov    esi,DWORD PTR [ecx+0x6d]
  4291fd:	cmp    ebp,DWORD PTR [edi+0x73]
  429200:	imul   edx,DWORD PTR [edi+0x6b],0xfc129812
  429207:	add    eax,0x68cac085
  42920c:	mov    WORD PTR [ebp+0x74],es
  42920f:	push   ebp
  429210:	mov    WORD PTR [ebp-0x91514],es
  429216:	in     al,dx
  429217:	add    BYTE PTR [ebp-0x4],0x64
  42921b:	rcl    BYTE PTR [ebp+0x0],0x6c
  42921f:	cmp    eax,0x6a06eb83
  429225:	or     ch,bh
  429227:	in     al,dx
  429228:	idiv   bh
  42922a:	jl     0x429232
  42922c:	outs   dx,BYTE PTR ds:[esi]
  42922d:	add    edx,DWORD PTR [esi+0x7d6a5713]
  429233:	jnp    0x4292aa
  429235:	mov    BYTE PTR [esi+ebx*8+0x1b],dh
  429239:	cmp    BYTE PTR [esi+eax*1],0x4f
  42923d:	inc    DWORD PTR [ecx-0x73827d0e]
  429243:	in     al,dx
  429244:	je     0x429222
  429246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429247:	ret    
  429248:	div    BYTE PTR [ebp-0x30]
  42924b:	mov    al,0x10
  42924d:	add    edx,ebp
  42924f:	and    bh,bh
  429251:	dec    edi
  429252:	sub    eax,0x12f9b3fe
  429257:	lahf   
  429258:	inc    edi
  429259:	adc    al,0x0
  42925b:	add    BYTE PTR [eax-0x20],dl
  42925e:	mov    ecx,0xcaa5aa0f
  429263:	out    0xed,eax
  429265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429267:	stc    
  429268:	repnz fwait
  42926a:	ds je  0x429243
  42926d:	dec    ebx
  42926e:	ret    0xa6eb
  429271:	ja     0x429243
  429273:	dec    esi
  429274:	xchg   bh,ch
  429276:	mov    al,BYTE PTR [ebp-0x33]
  429279:	add    ecx,DWORD PTR [ebx+0x3c661585]
  42927f:	sti    
  429280:	and    eax,0xbaefb260
  429285:	fidivr WORD PTR [edi]
  429287:	ret    
  429288:	sbb    BYTE PTR [ebx+0x3],ch
  42928b:	add    ebp,edx
  42928d:	xor    bh,BYTE PTR [edx*1-0x40dd03]
  429294:	push   ecx
  429295:	jae    0x4292a3
  429297:	test   BYTE PTR [edx-0x6f],bh
  42929a:	cmp    al,0xfb
  42929c:	mov    bl,BYTE PTR [esi]
  42929e:	cmp    edi,ebx
  4292a0:	call   0xd582a6a3
  4292a5:	mov    bh,0xb1
  4292a7:	repz jge 0x4292c5
  4292aa:	test   edx,edi
  4292ac:	push   0xffffffea
  4292ae:	(bad)  
  4292b0:	jmp    0x4292d8
  4292b2:	mov    BYTE PTR [ebp+0x6d],bh
  4292b5:	dec    ebx
  4292b6:	dec    eax
  4292b7:	add    ch,dl
  4292b9:	xor    dh,BYTE PTR [edi-0x48]
  4292bc:	aad    0x32
  4292be:	jmp    edi
  4292c0:	add    BYTE PTR [eax],al
  4292c2:	imul   eax,DWORD PTR [esp+edi*1],0xfffffffb
  4292c6:	sub    edi,DWORD PTR cs:[esi*2+0x24110a3d]
  4292ce:	push   eax
  4292cf:	sub    BYTE PTR [edx],bl
  4292d1:	fdivr  QWORD PTR [esp+eax*8+0x1f]
  4292d5:	inc    eax
  4292d6:	adc    BYTE PTR [esi-0x74a51883],0x15
  4292dd:	das    
  4292de:	aam    0x9
  4292e0:	jmp    0xa2eddba
  4292e5:	add    edx,ebp
  4292e7:	scas   eax,DWORD PTR es:[edi]
  4292e8:	pop    edi
  4292e9:	(bad)  
  4292ea:	push   esi
  4292eb:	bound  edx,QWORD PTR [edx]
  4292ed:	xor    dl,ch
  4292ef:	or     DWORD PTR [ebx-0x73],eax
  4292f2:	cwde   
  4292f3:	(bad)  
  4292f4:	xchg   ecx,eax
  4292f5:	mov    eax,0xa1e90a24
  4292fa:	pop    ebp
  4292fb:	into   
  4292fc:	jo     0x42937a
  4292fe:	and    eax,DWORD PTR [edi-0x17]
  429301:	add    esi,DWORD PTR [edi]
  429303:	xchg   ebx,eax
  429304:	sub    al,0x8e
  429306:	jge    0x42934c
  429308:	fiadd  DWORD PTR [ebx]
  42930a:	aad    0xaf
  42930c:	outs   dx,DWORD PTR ds:[esi]
  42930d:	rcr    DWORD PTR [esi+0x61],0x2b
  429311:	jge    0x4292e8
  429313:	or     DWORD PTR [ebx],ecx
  429315:	lea    edx,[eax]
  429317:	cwde   
  429318:	push   ecx
  429319:	xchg   edx,eax
  42931a:	and    al,0xa
  42931c:	jmp    0x5910f0c2
  429321:	jl     0x429338
  429323:	sub    ch,cl
  429325:	add    eax,DWORD PTR [eax]
  429327:	add    bh,dh
  429329:	xchg   edx,eax
  42932a:	and    al,0x96
  42932c:	sub    eax,0xd5045b7d
  429331:	scas   eax,DWORD PTR es:[edi]
  429332:	outs   dx,DWORD PTR ds:[esi]
  429333:	rol    DWORD PTR [esi+0x61],0x47
  429337:	outs   dx,DWORD PTR ds:[esi]
  429338:	aad    0x9
  42933a:	ret    
  42933b:	mov    WORD PTR [eax-0xb807e81],ds
  429341:	or     ecx,ebp
  429343:	mov    eax,ds:0x50ffce4d
  429348:	mov    ecx,0xd6e9fc11
  42934d:	stos   DWORD PTR es:[edi],eax
  42934e:	mov    BYTE PTR [eax+ecx*2-0x26fa759f],ch
  429355:	or     DWORD PTR [edx+0x60],esp
  429358:	adc    al,0x84
  42935a:	mov    eax,0x99183
  42935f:	(bad)  
  429360:	pop    ecx
  429361:	into   
  429362:	cdq    
  429363:	inc    ecx
  429364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429365:	mov    esi,0x9134e8ff
  42936a:	inc    ebp
  42936b:	dec    ecx
  42936c:	jno    0x42939c
  42936e:	mov    ds:0x88abd6e9,al
  429373:	and    al,0x7b
  429375:	popa   
  429376:	mov    eax,ds:0x6209d68d
  42937b:	pusha  
  42937c:	xchg   ebp,eax
  42937d:	imul   edi,DWORD PTR [eax-0x4d84fc5],0x47
  429384:	push   eax
  429385:	int    0xa1
  429387:	jno    0x429336
  429389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42938a:	(bad)  
  42938b:	call   0x92b69390
  429390:	inc    ebp
  429391:	push   ecx
  429392:	cs ss sub ecx,ebp
  429396:	(bad)  
  429397:	stos   DWORD PTR es:[edi],eax
  429398:	mov    BYTE PTR [ebx+ebp*1],ch
  42939b:	(bad)  
  42939c:	in     al,0x36
  42939e:	(bad)  [ecx]
  4293a0:	bound  esi,QWORD PTR [eax-0x6b]
  4293a3:	jae    0x42935d
  4293a5:	and    ebp,esp
  4293a7:	or     DWORD PTR [eax],eax
  4293a9:	cmovs  ecx,ebp
  4293ac:	test   eax,0xe0931
  4293b1:	jmp    0x998825ea
  4293b6:	fimul  WORD PTR [eax-0x63]
  4293b9:	jmp    0xa4cb3f94
  4293be:	enter  0x2061,0x0
  4293c2:	mov    WORD PTR [ebx],cs
  4293c4:	add    BYTE PTR [esi-0x3b],ah
  4293c7:	dec    ecx
  4293c8:	scas   eax,DWORD PTR es:[edi]
  4293c9:	mov    eax,0xffffdf16
  4293ce:	sbb    dl,BYTE PTR [esi-0x6c4b49bb]
  4293d4:	in     eax,dx
  4293d5:	add    BYTE PTR [ecx+ebp*2],ch
  4293d8:	mov    BYTE PTR [ebp-0x7c],al
  4293db:	mov    ds:0xafcefb1,al
  4293e0:	pop    esi
  4293e1:	mov    DWORD PTR [ecx],edi
  4293e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293e4:	mov    bh,0x88
  4293e6:	jb     0x4293f2
  4293e8:	add    BYTE PTR [esi+0x75],ah
  4293eb:	dec    ecx
  4293ec:	mov    bh,0xb8
  4293ee:	jne    0x4293a8
  4293f0:	(bad)  
  4293f1:	inc    DWORD PTR [eax]
  4293f3:	add    BYTE PTR [edx+0x34be4592],bl
  4293f9:	xchg   esp,eax
  4293fa:	rol    DWORD PTR [eax],1
  4293fc:	in     al,dx
  4293fd:	push   0xa57c4588
  429402:	aas    
  429403:	xchg   DWORD PTR [edx+ecx*1-0x300676a2],edi
  42940a:	mov    bh,0xde
  42940c:	dec    edx
  42940d:	or     eax,0x67356600
  429412:	mov    edi,0x90bdb8
  429417:	add    dl,bl
  429419:	xchg   edx,eax
  42941a:	inc    ebp
  42941b:	mov    BYTE PTR [eax+edx*8],0x31
  42941f:	add    BYTE PTR [eax+ebp*2-0x78],bh
  429423:	inc    ebp
  429424:	inc    esp
  429425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429426:	jo     0x429490
  429428:	ins    BYTE PTR es:[edi],dx
  429429:	or     bl,BYTE PTR [esi-0x77]
  42942c:	test   eax,0xf211b7d7
  429431:	or     eax,0x66e56600
  429436:	(bad)  
  429437:	mov    eax,0x91c6
  42943c:	aad    0x56
  42943e:	xchg   BYTE PTR [ebp+0x23],al
  429441:	js     0x429482
  429443:	pop    ebx
  429444:	aad    0x30
  429446:	mov    eax,ds:0x7c009888
  42944b:	jnp    0x429453
  42944d:	xor    edi,edi
  42944f:	popa   
  429450:	pop    esp
  429451:	ins    DWORD PTR es:[edi],dx
  429452:	push   ebp
  429453:	mov    eax,0xffff7de7
  429458:	add    BYTE PTR [eax],al
  42945a:	mov    ebx,0x5dd3ba99
  42945f:	or     DWORD PTR [ebx+0x0],0x45868ed5
  429466:	and    ecx,eax
  429468:	inc    esi
  429469:	jge    0x429440
  42946b:	xor    BYTE PTR [ecx+0x7bf89088],ah
  429471:	fabs   
  429473:	xor    bh,bh
  429475:	popa   
  429476:	pop    esp
  429477:	cmc    
  429478:	pop    ecx
  429479:	mov    eax,0x3e064
  42947e:	jae    0x429429
  429480:	mov    ecx,0x5e9f8ddb
  429485:	add    ch,dl
  429487:	aam    0x86
  429489:	inc    ebp
  42948a:	mov    ds:0xd511fa8b,eax
  42948f:	xor    ah,BYTE PTR [ecx+0x77531888]
  429495:	sar    DWORD PTR [edx],cl
  429497:	xor    edi,edi
  429499:	popa   
  42949a:	dec    esp
  42949b:	out    dx,al
  42949c:	and    DWORD PTR [eax-0xbb23],edi
  4294a2:	sti    
  4294a3:	test   eax,0x8e4de3b9
  4294a8:	enter  0x82ff,0xd
  4294ac:	xchg   DWORD PTR [ebp+0x73],eax
  4294af:	(bad)  [edi+ebp*4-0x2b]
  4294b3:	xor    ah,BYTE PTR [ecx+0x510a1088]
  4294b9:	jnp    0x429481
  4294bb:	jl     0x4294a6
  4294bd:	add    eax,DWORD PTR [eax]
  4294bf:	add    bh,dh
  4294c1:	xchg   edx,eax
  4294c2:	lods   al,BYTE PTR ds:[esi]
  4294c3:	sub    eax,0x38b508d
  4294c8:	aad    0xab
  4294ca:	outs   dx,DWORD PTR ds:[esi]
  4294cb:	mov    esi,0xb5dd622e
  4294d0:	cmp    ah,BYTE PTR ds:0x33988acb
  4294d6:	jno    0x4294d0
  4294d8:	mov    BYTE PTR [ecx],cl
  4294da:	jmp    0x1911e280
  4294df:	jnp    0x42952f
  4294e1:	or     al,0xe9
  4294e3:	add    esi,DWORD PTR [edi-0x6e]
  4294e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294e7:	xor    eax,0x390954d
  4294ec:	aad    0xab
  4294ee:	outs   dx,DWORD PTR ds:[esi]
  4294ef:	mov    esi,0xb7f26206
  4294f4:	repnz and al,0x83
  4294f7:	mov    dl,BYTE PTR [eax+0x398a11b]
  4294fd:	or     ch,cl
  4294ff:	popf   
  429500:	dec    ebp
  429501:	iret   
  429502:	sar    BYTE PTR [ebp+edi*4-0x14],1
  429506:	call   0x2cd5cc0e
  42950b:	cmp    bh,BYTE PTR [ebp-0x6e]
  42950e:	cmp    BYTE PTR [edx*8-0x513ea055],al
  429515:	popa   
  429516:	lock int3 
  429518:	stos   BYTE PTR es:[edi],al
  429519:	and    al,0xb
  42951b:	lea    ebx,[eax]
  42951d:	and    al,0x61
  42951f:	mov    BYTE PTR [ebx+0x9de909],0x0
  429526:	pop    ebp
  429527:	into   
  429528:	call   0xe98b1da8
  42952d:	add    esi,edi
  42952f:	xchg   edx,eax
  429530:	and    al,0x2
  429532:	cmp    eax,0xd9660090
  429537:	or     DWORD PTR [edx+0x60],esp
  42953a:	xchg   esp,eax
  42953b:	or     BYTE PTR [eax+0x9a557],bh
  429541:	(bad)  
  429542:	dec    ecx
  429543:	into   
  429544:	add    DWORD PTR [ecx-0x16ff6b9c],edx
  42954a:	push   0xbef14591
  42954f:	sti    
  429550:	jmpw   0x3d2a
  429554:	mov    BYTE PTR [esp+ebx*8-0x2ee74e9f],ch
  42955b:	or     DWORD PTR [edx+0x70],esp
  42955e:	adc    al,0x10
  429560:	mov    eax,0x9d393
  429565:	(bad)  
  429566:	popa   
  429567:	into   
  429568:	or     DWORD PTR [ecx+0x5e],edx
  42956b:	(bad)  
  42956c:	(bad)  
  42956d:	call   0xd98826d2
  429572:	jle    0x4295eb
  429574:	mov    ds:0x88a7d6e9,al
  429579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42957a:	les    esp,FWORD PTR [ecx-0x63]
  42957d:	mov    ss,esi
  42957f:	or     DWORD PTR [edx+0x70],esp
  429582:	adc    eax,0x4f77b7f8
  429587:	or     al,BYTE PTR [eax]
  429589:	inc    edi
  42958a:	add    BYTE PTR [eax],al
  42958c:	pop    eax
  42958d:	int    0x11
  42958f:	sub    DWORD PTR [ebx],0x58e9000a
  429595:	xchg   edx,eax
  429596:	inc    ebp
  429597:	shr    DWORD PTR [esi],1
  429599:	out    0x8,al
  42959b:	jmp    0x2ccb3d76
  4295a0:	mov    edi,0xd6646b61
  4295a5:	or     DWORD PTR [edx+0x60],esp
  4295a8:	xchg   ebp,eax
  4295a9:	push   DWORD PTR [edi+0xa05ed]
  4295af:	add    dl,dl
  4295b1:	xchg   esp,eax
  4295b2:	inc    ebp
  4295b3:	push   ds
  4295b4:	adc    al,0xca
  4295b6:	lock add BYTE PTR [eax+edx*4-0x38],bh
  4295bb:	data16 cmc 
  4295bd:	push   ecx
  4295be:	sbb    edi,DWORD PTR [ecx-0xa47]
  4295c4:	xchg   edx,eax
  4295c5:	xchg   esi,eax
  4295c6:	dec    ebp
  4295c7:	and    ah,BYTE PTR [ebp+0x21]
  4295ca:	cmp    BYTE PTR [eax],al
  4295cc:	cmp    al,0x85
  4295ce:	mov    BYTE PTR [ebp-0x30],cl
  4295d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295d2:	rol    BYTE PTR [ebx],1
  4295d4:	sub    al,0x7
  4295d6:	pop    esi
  4295d7:	mov    DWORD PTR [ecx+0x45],edi
  4295da:	mov    eax,0x714d8
  4295df:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4295e1:	push   ecx
  4295e2:	and    edi,DWORD PTR [ecx+0x9515]
  4295e8:	bound  edx,QWORD PTR [esi+0x7da52a4d]
  4295ee:	out    dx,eax
  4295ef:	add    BYTE PTR [eax],al
  4295f1:	add    ah,ch
  4295f3:	test   BYTE PTR [eax-0x4659f7b3],cl
  4295f9:	mov    dl,0xfc
  4295fb:	push   es
  4295fc:	pop    esi
  4295fd:	mov    DWORD PTR [ecx+0x2d],ecx
  429600:	mov    eax,0x6ee34
  429605:	gs dec dx
  429608:	sub    edi,DWORD PTR [eax-0x3f43]
  42960e:	adc    cl,BYTE PTR [edi+0x41553c45]
  429614:	xchg   edx,eax
  429615:	add    BYTE PTR [esp+eax*4-0x6151b278],ch
  42961c:	ds lock mov esp,0xf1895e06
  429623:	sbb    edi,DWORD PTR [eax+0xdfdbf]
  429629:	mov    eax,0xfff358d5
  42962e:	mov    cl,BYTE PTR [edx]
  429630:	xchg   DWORD PTR [ebp+0x15],eax
  429633:	adc    eax,DWORD PTR [edi+0x28c9c14d]
  429639:	outs   dx,BYTE PTR ds:[esi]
  42963a:	aad    0x30
  42963c:	add    BYTE PTR [ecx-0x6b],0xa
  429640:	xchg   DWORD PTR [ebp+0x17],eax
  429643:	imul   ecx,eax,0x9d30d577
  429649:	mov    BYTE PTR [eax-0x528d568c],bl
  42964f:	dec    edx
  429650:	xchg   BYTE PTR [ebp-0x65],al
  429653:	mov    ch,dl
  429655:	scas   eax,DWORD PTR es:[edi]
  429656:	add    BYTE PTR [eax],al
  429658:	aad    0x30
  42965a:	popf   
  42965b:	mov    BYTE PTR [eax+0x77457768],bl
  429661:	xor    bh,bh
  429663:	popa   
  429664:	dec    esp
  429665:	jne    0x429630
  429667:	mov    bh,0x41
  429669:	sbb    edi,edi
  42966b:	(bad)  
  42966c:	jnp    0x429617
  42966e:	mov    edx,0x9d94d4b
  429673:	add    ch,dl
  429675:	xchg   edx,eax
  429676:	xchg   BYTE PTR [ebp-0x75],al
  429679:	enter  0xc239,0xd5
  42967d:	xor    BYTE PTR [ebp+0x77809088],bl
  429683:	sahf   
  429684:	loop   0x4296b5
  429686:	jmp    DWORD PTR [ecx+0x4c]
  429689:	in     eax,dx
  42968a:	int    0xb7
  42968c:	ins    BYTE PTR es:[edi],dx
  42968d:	inc    ebx
  42968e:	(bad)  
  42968f:	push   DWORD PTR [ebx]
  429691:	stos   BYTE PTR es:[edi],al
  429692:	mov    ecx,0xf19b7d53
  429697:	(bad)  
  429698:	mov    edx,0xb4586c9
  42969d:	fisub  DWORD PTR [ecx-0x7762cd2b]
  4296a4:	sbb    BYTE PTR [edx],cl
  4296a6:	inc    ecx
  4296a7:	jl     0x429681
  4296a9:	aas    
  4296aa:	jmp    0x2cd58db2
  4296af:	fiadd  DWORD PTR [edx-0x3b]
  4296b2:	mov    ch,0x3
  4296b4:	aad    0xa7
  4296b6:	outs   dx,DWORD PTR ds:[esi]
  4296b7:	mov    esi,0x8136621e
  4296bc:	add    BYTE PTR [eax],al
  4296be:	aad    0x9
  4296c0:	or     ecx,DWORD PTR [ebx-0x68cf3ff0]
  4296c6:	fisttp WORD PTR [ecx]
  4296c8:	jmp    0xc909e46a
  4296cd:	jnp    0x4296a6
  4296cf:	adc    eax,0x92b703e9
  4296d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296d5:	mov    eax,ds:0x3db128a
  4296da:	aad    0xa7
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    esi,0xfc7f61b6
  4296e2:	sub    ah,BYTE PTR [ecx]
  4296e4:	ret    
  4296e5:	mov    bl,BYTE PTR [eax+0x1db560a7]
  4296eb:	or     ch,cl
  4296ed:	popf   
  4296ee:	pop    ebp
  4296ef:	mov    DWORD PTR [eax-0x17273c85],0xac927703
  4296f9:	test   eax,0x324cb42
  4296fe:	aad    0xa7
  429700:	pop    edi
  429701:	mov    esi,0xe39617e
  429706:	aad    0x9
  429708:	dec    ebx
  429709:	jge    0x42969b
  42970b:	scas   eax,DWORD PTR es:[edi]
  42970c:	mov    al,ds:0xe909878d
  429711:	test   eax,0x6c58c65d
  429716:	loope  0x429739
  429718:	jmp    0x24d5ce20
  42971d:	mov    dh,0x6a
  42971f:	nop
  429720:	add    dl,cl
  429722:	add    BYTE PTR [eax],al
  429724:	ror    DWORD PTR [ecx],1
  429726:	bound  esp,QWORD PTR [eax-0x74]
  429729:	pushf  
  42972a:	popa   
  42972b:	jo     0x4296c1
  42972d:	fcmovb st,st(2)
  42972f:	and    al,0x81
  429731:	push   esi
  429732:	(bad)  
  429733:	lods   al,BYTE PTR ds:[esi]
  429734:	shl    BYTE PTR [ecx-0x6d],0xa2
  429738:	(bad)  [ecx]
  42973a:	push   ebx
  42973b:	psubb  mm0,mm6
  42973e:	jno    0x4297be
  429740:	int3   
  429741:	or     DWORD PTR [esi],0x7f82d129
  429747:	mov    ebx,edx
  429749:	mov    ?,WORD PTR [ebx+ebp*8]
  42974c:	adc    DWORD PTR [esi+edi*8],esp
  42974f:	imul   eax,DWORD PTR [edi],0x55a16e99
  429755:	mov    cs,WORD PTR [edi+ecx*2+0x2e872506]
  42975c:	fstp   DWORD PTR [esi+0x65]
  42975f:	aas    
  429760:	out    0x85,al
  429762:	sar    BYTE PTR [ebp+0x64bfef2f],0xdf
  429769:	mov    ds:0xc6557422,eax
  42976e:	mov    WORD PTR [edi],ds
  429770:	(bad)  
  429771:	and    al,0x62
  429773:	bound  esp,QWORD PTR [eax]
  429775:	and    ecx,DWORD PTR [ebx]
  429777:	push   edi
  429778:	add    BYTE PTR [edx-0x5606f440],ch
  42977e:	push   es
  42977f:	sbb    BYTE PTR [edi],bh
  429781:	out    dx,eax
  429782:	push   ebx
  429783:	lods   al,BYTE PTR ds:[esi]
  429784:	push   edx
  429785:	stos   DWORD PTR es:[edi],eax
  429786:	shr    BYTE PTR [ebx],0x0
  429789:	add    cl,ah
  42978b:	test   eax,0xe00ffd88
  429790:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  429792:	add    BYTE PTR [edx+0x2f],0xa9
  429796:	jl     0x42972a
  429798:	add    al,0x56
  42979a:	inc    edx
  42979b:	dec    esp
  42979c:	out    0x0,eax
  42979e:	scas   al,BYTE PTR es:[edi]
  42979f:	sbb    BYTE PTR [ebx+0x77d23f5e],bh
  4297a5:	leave  
  4297a6:	jg     0x4297ea
  4297a8:	sub    ah,0x2f
  4297ab:	out    0xf7,eax
  4297ad:	add    DWORD PTR [eax-0x9],0x4a
  4297b1:	push   esi
  4297b2:	retf   
  4297b3:	mov    BYTE PTR [esp-0x78],dh
  4297b7:	mov    bl,0xb8
  4297b9:	add    BYTE PTR [ebx+ecx*1-0x7d],ch
  4297bd:	cli    
  4297be:	pop    es
  4297bf:	into   
  4297c0:	out    0xbb,eax
  4297c2:	(bad)  
  4297c3:	add    eax,0x9e3a8b00
  4297c8:	inc    ebx
  4297c9:	and    al,0x7c
  4297cb:	sbb    BYTE PTR [ebx+0x4e3b1c50],bh
  4297d1:	push   0x3d5aaa
  4297d6:	push   ss
  4297d7:	adc    ah,BYTE PTR [edx+0x1]
  4297da:	mov    eax,ds:0xc72c1f36
  4297df:	(bad)  
  4297e1:	jmp    0x4297d2
  4297e3:	fdiv   st,st(6)
  4297e5:	pop    edi
  4297e6:	inc    edx
  4297e7:	push   eax
  4297e8:	and    ch,0x51
  4297eb:	enter  0x8b54,0x0
  4297ef:	add    al,al
  4297f1:	test   esp,ebp
  4297f3:	mov    al,0xfe
  4297f5:	or     al,BYTE PTR [eax]
  4297f7:	push   ebx
  4297f8:	dec    edx
  4297f9:	mov    al,ds:0x3a898de9
  4297fe:	cld    
  4297ff:	call   ebx
  429801:	mov    DWORD PTR [esi],edi
  429803:	sub    al,0x4e
  429805:	mov    al,ds:0xe207e8d8
  42980a:	cmc    
  42980b:	(bad)  
  42980c:	js     0x4297d8
  42980e:	push   es
  42980f:	test   dl,dl
  429811:	pop    es
  429812:	add    BYTE PTR [eax],al
  429814:	stos   BYTE PTR es:[edi],al
  429815:	adc    edx,DWORD PTR [eax]
  429817:	je     0x4297ee
  429819:	and    edi,DWORD PTR [ebp+edx*2-0x33]
  42981d:	mov    ebp,0x47b8507a
  429822:	xor    eax,ebp
  429824:	push   edi
  429825:	pop    edi
  429826:	xor    ebx,edi
  429828:	mov    esp,0xd500052e
  42982d:	idiv   DWORD PTR [edx-0x7b]
  429830:	add    eax,0x25fb3166
  429835:	jns    0x429830
  429837:	jne    0x4297c4
  429839:	ja     0x4298b8
  42983b:	fadd   st,st(6)
  42983d:	(bad)  
  42983e:	ja     0x42989d
  429840:	mov    eax,ds:0x590b504b
  429845:	jns    0x429846
  429847:	call   ebp
  429849:	stos   DWORD PTR es:[edi],eax
  42984a:	add    al,0x8d
  42984c:	adc    BYTE PTR [ebp-0x5fa5b132],ch
  429852:	ja     0x429854
  429854:	add    BYTE PTR [eax],al
  429856:	aad    0x30
  429858:	add    al,0xda
  42985b:	lods   eax,DWORD PTR ds:[esi]
  42985c:	cmp    eax,0x7c30d501
  429861:	inc    ebp
  429862:	cmp    DWORD PTR [ebx-0x47777305],ebx
  429868:	ror    DWORD PTR [edi+0x2a],1
  42986b:	or     DWORD PTR [ebx],0x823f1585
  429871:	mov    al,0xd4
  429873:	xor    bh,bh
  429875:	mov    WORD PTR [eax-0x2a499450],cs
  42987b:	xor    bh,bh
  42987d:	out    0xd6,eax
  42987f:	jp     0x429880
  429881:	jmp    FWORD PTR [edi+0x14]
  429884:	xor    BYTE PTR [ebp-0x3],dh
  429887:	mov    dl,0x3b
  429889:	sti    
  42988a:	pop    esi
  42988b:	out    0x1b,al
  42988d:	in     eax,0x6c
  42988f:	xor    BYTE PTR cs:[ebp-0x790df6eb],al
  429896:	pop    ecx
  429897:	or     ebp,ecx
  429899:	add    ebx,DWORD PTR [eax-0x69]
  42989c:	xchg   esp,eax
  42989d:	imul   ecx,DWORD PTR [edx-0x52fc16f6],0x3d
  4298a4:	inc    eax
  4298a5:	add    al,0xd5
  4298a7:	nop
  4298a8:	and    al,0x30
  4298aa:	push   edx
  4298ab:	adc    ah,BYTE PTR [esi+edx*8-0x7e]
  4298af:	mov    eax,0xba0b595d
  4298b4:	mov    eax,ds:0xe90a6992
  4298b9:	add    eax,DWORD PTR [eax]
  4298bb:	add    BYTE PTR [eax+0x4a],dl
  4298be:	sbb    al,0xff
  4298c0:	pop    ebx
  4298c1:	xchg   edi,eax
  4298c2:	mov    BYTE PTR [ebx],bl
  4298c4:	lds    ebx,FWORD PTR [edi-0x38a3cf7e]
  4298ca:	js     0x4298e8
  4298cc:	push   0xffffff92
  4298ce:	hlt    
  4298cf:	xor    edx,DWORD PTR [eax-0x69]
  4298d2:	mov    al,ds:0xe90a196b
  4298d7:	add    edi,DWORD PTR ds:0xd503e071
  4298dd:	nop
  4298de:	lods   al,BYTE PTR ds:[esi]
  4298df:	das    
  4298e0:	pop    edx
  4298e1:	adc    bl,BYTE PTR [esi+edx*8+0x22]
  4298e5:	mov    eax,0xb9a3596d
  4298ea:	cmp    DWORD PTR [edx+0x3e90a41],edx
  4298f0:	pop    eax
  4298f1:	dec    edx
  4298f2:	mov    ah,0xfe
  4298f4:	push   ebx
  4298f5:	xchg   edi,eax
  4298f6:	inc    eax
  4298f7:	sbb    edx,DWORD PTR [ecx]
  4298f9:	mov    ds:0xc75c301a,eax
  4298fe:	add    al,0x1c
  429900:	add    dl,BYTE PTR [edx-0x68b7e074]
  429906:	cmp    BYTE PTR [ebx+0x30],ch
  429909:	or     ch,cl
  42990b:	add    edi,ebp
  42990d:	xchg   esp,eax
  42990e:	jmp    FWORD PTR [edi-0x2a]
  429911:	or     DWORD PTR [edi+0x884aaa4],eax
  429917:	je     0x4298c5
  429919:	sub    BYTE PTR [esi+0x72],cl
  42991c:	and    ecx,esp
  42991e:	dec    edi
  42991f:	(bad)  
  429920:	add    BYTE PTR [eax],al
  429922:	push   0xd6e90075
  429927:	xchg   al,al
  429929:	cmp    al,0xd5
  42992b:	test   BYTE PTR [ebp-0x3b],dh
  42992e:	leave  
  42992f:	push   ecx
  429930:	jns    0x4298e9
  429932:	repnz test al,bl
  429935:	ret    0xecd7
  429938:	(bad)  
  429939:	je     0x429987
  42993b:	cmp    BYTE PTR [eax+0x9d15f],0x81
  429942:	mov    WORD PTR [ecx-0x39001701],fs
  429948:	sti    
  429949:	jb     0x4299bc
  42994b:	lea    edx,[ebp-0x63]
  42994e:	xchg   DWORD PTR [ebx+0x1f891bd2],eax
  429954:	xchg   ecx,eax
  429955:	push   ebp
  429956:	ror    DWORD PTR [ecx],1
  429958:	add    BYTE PTR [ecx+ebx*4-0x6a],ch
  42995c:	or     al,0x72
  42995e:	mov    WORD PTR [eax-0x18],es
  429961:	jg     0x4299d3
  429963:	and    bh,bl
  429965:	pusha  
  429966:	or     al,0x14
  429968:	out    0xea,eax
  42996a:	mov    cl,0x9e
  42996c:	div    DWORD PTR [edx+0x1c]
  42996f:	sub    al,0x37
  429971:	and    cl,BYTE PTR cs:[eax+0x9d6e986]
  429978:	(bad)  
  429979:	loopne 0x429979
  42997b:	push   cs
  42997c:	test   BYTE PTR [eax-0x2f],ch
  42997f:	or     DWORD PTR [eax],eax
  429981:	rcl    BYTE PTR [ebx+0x877c95],cl
  429987:	add    cl,ch
  429989:	shl    BYTE PTR [ebx+0x0],cl
  42998c:	push   esp
  42998d:	sub    eax,0x5760f87c
  429992:	cmp    BYTE PTR [ebp-0x1c],0xff
  429996:	imul   edi,ecx,0xffffffeb
  429999:	jmp    0x5582:0x633ac084
  4299a0:	cwde   
  4299a1:	mov    al,BYTE PTR [ebp-0xc]
  4299a4:	xchg   esp,eax
  4299a5:	outs   dx,DWORD PTR ds:[esi]
  4299a6:	std    
  4299a7:	jmp    FWORD PTR [eax+eiz*4-0x13c00b84]
  4299ae:	add    BYTE PTR [edx-0x5c],dh
  4299b1:	xchg   bh,dh
  4299b3:	jmp    FWORD PTR [ebx+0x7]
  4299b6:	add    BYTE PTR [esi-0x51],dh
  4299b9:	adc    DWORD PTR [edi+ebx*2],0xef71ff
  4299c0:	out    0x54,al
  4299c2:	mov    WORD PTR [ebp-0x9153c],?
  4299c8:	(bad)  
  4299c9:	std    
  4299ca:	mov    edi,0x4f077c78
  4299cf:	jmp    DWORD PTR [ecx-0x29]
  4299d2:	add    dh,0xeb
  4299d5:	popa   
  4299d6:	repz push ebx
  4299d8:	mov    esp,0x8cf44588
  4299dd:	dec    DWORD PTR [edx]
  4299df:	push   0xffffffaa
  4299e1:	jmp    0x429a5d
  4299e3:	les    eax,FWORD PTR [edx+edx*4-0x40]
  4299e7:	jle    0x429a29
  4299e9:	mov    al,ds:0x874
  4299ee:	fwait
  4299ef:	popa   
  4299f0:	out    dx,eax
  4299f1:	mov    edi,edx
  4299f3:	(bad)  
  4299f4:	and    eax,0x83ebea62
  4299f9:	shl    BYTE PTR [eax+0x8],0xf7
  4299fd:	inc    esi
  4299fe:	add    ah,ch
  429a00:	je     0x4299f6
  429a02:	in     al,0xe7
  429a04:	jne    0x429a04
  429a06:	aad    0xf3
  429a08:	sub    DWORD PTR [ebp+0x5],esi
  429a0b:	or     DWORD PTR [esi+0x2a03f231],eax
  429a11:	jne    0x429a0c
  429a13:	clc    
  429a14:	lea    esi,[ecx]
  429a16:	loop   0x429a2b
  429a18:	shl    edi,1
  429a1a:	dec    eax
  429a1b:	bound  ebp,QWORD PTR [edx]
  429a1d:	sti    
  429a1e:	sar    BYTE PTR [ebp+0x150e82b],cl
  429a24:	sub    eax,0x57d54efb
  429a29:	sti    
  429a2a:	inc    eax
  429a2b:	dec    ecx
  429a2c:	sbb    al,0x76
  429a2e:	in     al,0x43
  429a30:	sub    eax,0x795d1087
  429a35:	or     BYTE PTR ds:0x4e07cf54,al
  429a3b:	das    
  429a3c:	sar    dl,1
  429a3e:	and    eax,0x4559cc19
  429a43:	xor    eax,ecx
  429a45:	enter  0x2c97,0xff
  429a49:	push   esp
  429a4a:	dec    esi
  429a4b:	pushf  
  429a4c:	jle    0x429a3a
  429a4e:	mov    cl,0x2d
  429a50:	(bad)  
  429a51:	inc    DWORD PTR [eax]
  429a53:	add    BYTE PTR [esi],al
  429a55:	repz aam 0x65
  429a58:	int    0xa5
  429a5a:	ret    0xeff3
  429a5d:	xor    bh,cl
  429a5f:	cli    
  429a60:	call   0xd582ac6d
  429a65:	scas   eax,DWORD PTR es:[edi]
  429a66:	inc    edi
  429a67:	or     al,0x50
  429a69:	jge    0x429ab7
  429a6b:	cli    
  429a6c:	cmp    cl,bl
  429a6e:	imul   edi,DWORD PTR [ebx-0x1800cf2b],0xffffffce
  429a75:	dec    eax
  429a76:	(bad)  
  429a77:	call   DWORD PTR [eax-0x63]
  429a7a:	mov    ebx,0x6beb1afa
  429a7f:	rcl    ebp,0x9
  429a82:	jmp    0xa150978a
  429a87:	add    edx,ebp
  429a89:	mov    WORD PTR [edi+ebx*2+0x3e9493d],ds
  429a90:	aad    0x31
  429a92:	add    esi,DWORD PTR [ebp-0x4893e616]
  429a98:	push   es
  429a99:	popa   
  429a9a:	daa    
  429a9b:	add    al,0xd5
  429a9d:	or     DWORD PTR [ecx],eax
  429a9f:	xor    eax,DWORD PTR [esi+0xa]
  429aa2:	jmp    0xdb74eb25
  429aa7:	sub    al,0xbe
  429aa9:	sub    DWORD PTR [eax+ebp*1],0x48
  429aad:	(bad)  
  429aae:	and    DWORD PTR ds:0xc67019ae,ebp
  429ab4:	mov    dl,0x87
  429ab6:	and    al,0x60
  429ab8:	add    BYTE PTR [eax],al
  429aba:	dec    esp
  429abb:	iret   
  429abc:	les    edi,FWORD PTR [eax-0x69]
  429abf:	and    DWORD PTR [esp+esi*1],0xffffffc2
  429ac3:	pop    ds
  429ac4:	stos   BYTE PTR es:[edi],al
  429ac5:	(bad)  
  429ac6:	mov    cs,WORD PTR [ecx+ebp*8]
  429ac9:	add    edx,ebp
  429acb:	push   esp
  429acc:	in     eax,dx
  429acd:	add    dl,ch
  429acf:	or     DWORD PTR [esi],esi
  429ad1:	sub    eax,0x7e94dee9
  429ad6:	sub    BYTE PTR [edx],bh
  429ad8:	jge    0x429b06
  429ada:	pop    esi
  429adb:	sbb    ebp,edi
  429add:	div    BYTE PTR [esi+0x52]
  429ae0:	call   0x51cc6fe8
  429ae5:	jp     0x429a87
  429ae7:	or     ecx,ebp
  429ae9:	cmp    BYTE PTR ds:0x51e0dd19,0x4a
  429af0:	aad    0xc
  429af2:	mov    ds:0x233b6c86,al
  429af7:	sbb    DWORD PTR [edx],edi
  429af9:	rcr    DWORD PTR [ebx+0x51],cl
  429afc:	add    BYTE PTR [ecx-0x24a80117],bl
  429b02:	push   ss
  429b03:	sbb    DWORD PTR [esp+edi*4+0x318d86c2],ecx
  429b0a:	lods   al,BYTE PTR ds:[esi]
  429b0b:	adc    al,0xfb
  429b0d:	add    DWORD PTR [edx+0x550efb15],ebx
  429b13:	dec    esp
  429b14:	add    al,0x6
  429b16:	sub    edx,DWORD PTR ds:0x97553675
  429b1c:	imul   ecx
  429b1e:	add    BYTE PTR [eax],al
  429b20:	and    ch,bh
  429b22:	xchg   BYTE PTR [edx+ecx*1-0x5e],ch
  429b26:	(bad)  
  429b27:	jmp    0xaafaa502
  429b2c:	(bad)  [ecx]
  429b2e:	add    cl,al
  429b30:	jne    0x429b81
  429b32:	sti    
  429b33:	into   
  429b34:	rol    BYTE PTR [ecx],cl
  429b36:	sti    
  429b37:	cmp    al,0xe5
  429b39:	and    DWORD PTR [ebp+0x5b14ef3c],esi
  429b3f:	pop    ss
  429b40:	mov    al,BYTE PTR [ecx-0x41]
  429b43:	inc    ebx
  429b44:	xchg   ecx,eax
  429b45:	mov    al,0xc7
  429b47:	or     al,0x92
  429b49:	sbb    bl,ah
  429b4b:	in     eax,dx
  429b4c:	(bad)  
  429b4d:	or     DWORD PTR [eax],eax
  429b4f:	push   0x34
  429b51:	adc    al,0x0
  429b53:	xor    esp,0xc986fb34
  429b59:	mov    ds:0x21ae7ede,eax
  429b5e:	ror    DWORD PTR [esi+0x68e814ae],1
  429b64:	repnz adc al,0xfb
  429b67:	push   ecx
  429b68:	jl     0x429b8e
  429b6a:	sti    
  429b6b:	pop    esi
  429b6c:	loope  0x429be1
  429b6e:	jmp    0x429bc6
  429b70:	out    dx,al
  429b71:	and    edi,ecx
  429b73:	push   ebp
  429b74:	(bad)  
  429b75:	adc    al,0xe8
  429b77:	add    BYTE PTR [ecx-0x27],ch
  429b7a:	idiv   bh
  429b7c:	test   BYTE PTR [esi-0x71c000b],bh
  429b82:	(bad)  
  429b83:	xor    al,BYTE PTR [eax]
  429b85:	add    BYTE PTR [ebp+ecx*2-0xba67446],bh
  429b8c:	jp     0x429bdb
  429b8e:	loopne 0x429b74
  429b90:	out    0x4,eax
  429b92:	fmul   QWORD PTR ds:0x5577c300
  429b98:	pop    es
  429b99:	test   DWORD PTR [ebp+0x248b055a],esp
  429b9f:	adc    al,0x88
  429ba1:	dec    eax
  429ba2:	lock xchg esi,eax
  429ba4:	aas    
  429ba5:	or     al,0xff
  429ba7:	xchg   esi,eax
  429ba8:	dec    edi
  429ba9:	or     bh,dh
  429bab:	xlat   BYTE PTR ds:[ebx]
  429bac:	imul   esp,DWORD PTR ds:0x46f970a,0x5e6a0731
  429bb6:	(bad)  
  429bb7:	xlat   BYTE PTR ds:[ebx]
  429bb8:	push   0x19
  429bba:	sbb    dl,BYTE PTR [edi+0xd6d8310]
  429bc0:	mov    DWORD PTR [eax-0x50],ecx
  429bc3:	imul   eax,DWORD PTR [edx+edx*8+0x395ddfc9],0x83d15a8d
  429bce:	sub    eax,0x7048890d
  429bd3:	and    BYTE PTR [ebx+0x6311d6c3],bh
  429bd9:	cmp    cl,bl
  429bdb:	dec    esi
  429bdc:	sti    
  429bdd:	out    0x60,eax
  429bdf:	hlt    
  429be0:	(bad)  
  429be1:	call   FWORD PTR [edi]
  429be3:	mov    ebp,0x2248ca32
  429be8:	jp     0x429c67
  429bea:	add    BYTE PTR [eax],al
  429bec:	inc    esp
  429bed:	or     eax,0x39c53776
  429bf2:	div    DWORD PTR [ebx]
  429bf4:	aad    0xe0
  429bf6:	jnp    0x429c3d
  429bf8:	cmp    esp,edi
  429bfa:	rol    BYTE PTR [edi],0xa8
  429bfd:	push   es
  429bfe:	sahf   
  429bff:	cmp    cl,cl
  429c01:	popa   
  429c02:	mov    al,0x11
  429c04:	mov    bl,0x19
  429c06:	retf   
  429c07:	inc    eax
  429c08:	xlat   BYTE PTR ds:[ebx]
  429c09:	pop    ebp
  429c0a:	idiv   BYTE PTR [esi+0x15]
  429c0d:	and    ebp,edx
  429c0f:	inc    esp
  429c10:	int    0x27
  429c12:	mov    eax,eax
  429c14:	push   esi
  429c15:	outs   dx,BYTE PTR ds:[esi]
  429c16:	and    edi,ebx
  429c18:	(bad)  
  429c19:	adc    BYTE PTR [edi+0x3f540ce6],bh
  429c1f:	inc    eax
  429c20:	push   ss
  429c21:	pushf  
  429c22:	lahf   
  429c23:	out    0x56,eax
  429c25:	outs   dx,BYTE PTR ds:[esi]
  429c26:	and    edi,ebx
  429c28:	pop    es
  429c29:	loope  0x429c41
  429c2b:	ins    DWORD PTR es:[edi],dx
  429c2c:	mov    edx,0xd9bdff20
  429c31:	and    al,dl
  429c33:	xchg   BYTE PTR [ebp-0x38bae5b],bh
  429c39:	aaa    
  429c3a:	jo     0x429c3a
  429c3c:	xor    BYTE PTR [esi-0x5c0b8bbd],ah
  429c42:	sub    esi,DWORD PTR [eax]
  429c44:	and    BYTE PTR [esi],dh
  429c46:	clc    
  429c47:	mov    dl,0x17
  429c49:	and    eax,DWORD PTR [eax+edi*8+0x7efaf50d]
  429c50:	add    BYTE PTR [eax],al
  429c52:	jge    0x429c1c
  429c54:	stos   BYTE PTR es:[edi],al
  429c55:	add    ch,BYTE PTR [ebp+0x4]
  429c58:	(bad)  
  429c59:	cli    
  429c5a:	jb     0x429c43
  429c5c:	inc    esp
  429c5d:	call   0x41bd41
  429c62:	add    ah,BYTE PTR [ebp+eax*4+0x23]
  429c66:	aad    0xa
  429c68:	cld    
  429c69:	push   edi
  429c6a:	mov    dl,0x63
  429c6c:	into   
  429c6d:	cs inc ebx
  429c6f:	or     DWORD PTR [esi],ebx
  429c71:	push   edx
  429c72:	leave  
  429c73:	iret   
  429c74:	jmp    0xdf26fe9
  429c79:	cmp    ch,BYTE PTR [ecx-0x55bbea29]
  429c7f:	adc    BYTE PTR [edi+ebp*4],dl
  429c82:	fldenv [ebx-0x1cc341a]
  429c88:	sub    edi,DWORD PTR gs:[edx-0x1ae32c64]
  429c8f:	scas   eax,DWORD PTR es:[edi]
  429c90:	sub    edi,DWORD PTR gs:[esi+ebx*4+0x3049cf3]
  429c98:	loop   0x429d0a
  429c9a:	sbb    al,0x84
  429c9c:	xchg   ebp,eax
  429c9d:	stc    
  429c9e:	sbb    cl,BYTE PTR [edx+0x5ece0627]
  429ca4:	out    dx,eax
  429ca5:	test   ah,bl
  429ca7:	fdiv   DWORD PTR [ebp+0x1e]
  429caa:	aaa    
  429cab:	(bad)  
  429cac:	and    BYTE PTR [eax+0x2b188cb],dh
  429cb2:	ins    DWORD PTR es:[edi],dx
  429cb3:	or     BYTE PTR [ebp+0x1],dl
  429cb6:	add    BYTE PTR [eax],al
  429cb8:	(bad)  
  429cb9:	xor    al,0xbe
  429cbb:	add    al,0x3b
  429cbd:	add    dh,BYTE PTR [ecx]
  429cbf:	jnp    0x429ca7
  429cc1:	mov    bl,0xa5
  429cc3:	jle    0x429c58
  429cc5:	sahf   
  429cc6:	cmp    BYTE PTR [esi-0x2d],bh
  429cc9:	lea    esp,[eax+0x11bbf8af]
  429ccf:	cmc    
  429cd0:	test   cl,bl
  429cd2:	mov    eax,ds:0x13da7c83
  429cd7:	adc    eax,0x83e7c053
  429cdc:	ins    BYTE PTR es:[edi],dx
  429cdd:	xchg   edx,eax
  429cde:	adc    al,0xff
  429ce0:	jmp    0xe49f:0xd4af2112
  429ce7:	test   BYTE PTR [ebx],bl
  429ce9:	or     BYTE PTR [eax],al
  429ceb:	push   ss
  429cec:	sub    BYTE PTR [edi+0x451f5c06],cl
  429cf2:	and    BYTE PTR [edx+0x3f],0x98
  429cf6:	push   es
  429cf7:	out    dx,al
  429cf8:	lods   al,BYTE PTR ds:[esi]
  429cf9:	inc    edx
  429cfa:	call   FWORD PTR [esi-0x55]
  429cfd:	popf   
  429cfe:	lock cmp ecx,ecx
  429d01:	in     eax,dx
  429d02:	mov    WORD PTR [eax-0x1b087653],fs
  429d08:	gs or  al,0xb
  429d0b:	ja     0x429cdc
  429d0d:	adc    al,0xf5
  429d0f:	pop    esp
  429d10:	cmp    bl,BYTE PTR [edx]
  429d12:	leave  
  429d13:	adc    ah,bh
  429d15:	xchg   BYTE PTR [ecx+0x7e],bl
  429d18:	push   esi
  429d19:	sbb    eax,0x9e05
  429d1e:	jmp    0x8d17:0xd120b9ff
  429d25:	jge    0x429cce
  429d27:	bound  edi,QWORD PTR [esi]
  429d29:	adc    bl,BYTE PTR [edx-0x7ddf7c44]
  429d2f:	adc    edi,DWORD PTR [esi+0x1e]
  429d32:	xlat   BYTE PTR ds:[ebx]
  429d33:	xor    BYTE PTR [eax],0x72
  429d36:	add    dh,BYTE PTR [ecx-0x16a955a7]
  429d3c:	inc    DWORD PTR [edx-0x4f]
  429d3f:	mov    esp,0x262e34be
  429d44:	jg     0x429d1b
  429d46:	leave  
  429d47:	les    esp,FWORD PTR [ebp-0x18]
  429d4a:	mov    ecx,DWORD PTR [edi]
  429d4c:	adc    eax,0xffc9e949
  429d51:	arpl   WORD PTR [ecx],dx
  429d53:	sahf   
  429d54:	js     0x429d30
  429d56:	pextrw ecx,(bad),0xc5
  429d58:	dec    esi
  429d59:	adc    edx,eax
  429d5b:	mov    eax,0x452fcfa
  429d60:	inc    eax
  429d61:	jmp    0xb6e6bb
  429d66:	les    edi,FWORD PTR [eax]
  429d68:	mov    WORD PTR [ebp-0x28],es
  429d6b:	cmp    eax,0x1d40165
  429d70:	jl     0x429db2
  429d72:	cmp    al,0xeb
  429d74:	adc    al,0x6c
  429d76:	cmp    al,0x48
  429d78:	sti    
  429d79:	test   ah,ch
  429d7b:	pop    ecx
  429d7c:	cmp    BYTE PTR [ebp-0x72b01b7f],cl
  429d82:	add    BYTE PTR [eax],al
  429d84:	jno    0x429d66
  429d86:	dec    edi
  429d87:	lea    esi,[ecx-0x28]
  429d8a:	dec    edi
  429d8b:	jmp    DWORD PTR [ecx-0x14]
  429d8e:	mov    BYTE PTR [ebp-0x3c],bl
  429d91:	in     al,dx
  429d92:	adc    al,0x70
  429d94:	sub    al,0x48
  429d96:	sti    
  429d97:	test   BYTE PTR [ecx+ebx*2-0x1b9e00f1],ch
  429d9e:	div    BYTE PTR [ebp-0x3c]
  429da1:	in     al,dx
  429da2:	je     0x429d94
  429da4:	and    ebp,ebx
  429da6:	adc    al,0x74
  429da8:	cld    
  429da9:	inc    edi
  429daa:	sti    
  429dab:	test   BYTE PTR [edx+ebx*2-0x14ae00f4],ch
  429db2:	not    BYTE PTR ds:0x3ff828
  429db8:	das    
  429db9:	push   edx
  429dba:	idiv   edi
  429dbc:	not    esi
  429dbe:	jae    0x429dcc
  429dc0:	adc    DWORD PTR ds:0x7bc0007,0xffffff89
  429dc7:	jle    0x429d79
  429dc9:	xchg   esi,eax
  429dca:	push   ebp
  429dcb:	or     BYTE PTR [edi],ah
  429dcd:	dec    edx
  429dce:	imul   ebx
  429dd0:	jle    0x429dea
  429dd2:	mov    ebx,0x54c8355b
  429dd7:	mov    ebp,DWORD PTR [eax-0x78]
  429dda:	in     al,dx
  429ddb:	adc    BYTE PTR [edi-0x2a83c08b],bh
  429de1:	loopne 0x429de6
  429de3:	das    
  429de4:	mov    cs,WORD PTR [ecx+0x2a4f]
  429dea:	bound  ecx,QWORD PTR [esi+ecx*8-0x3076ef74]
  429df1:	gs aam 0x8
  429df4:	cwde   
  429df5:	jnp    0x429d8c
  429df7:	and    BYTE PTR [edx],ah
  429df9:	adc    eax,0xffbf10b1
  429dfe:	push   ecx
  429dff:	loope  0x429dab
  429e01:	cmp    DWORD PTR [eax+0x66],esp
  429e04:	sub    edx,DWORD PTR [eax+0x58]
  429e07:	outs   dx,BYTE PTR ds:[esi]
  429e08:	and    edx,DWORD PTR [eax+0x50]
  429e0b:	data16 das 
  429e0d:	push   eax
  429e0e:	sbb    bl,BYTE PTR [esi+0x27]
  429e11:	mov    DWORD PTR [eax-0x7aeade24],esi
  429e17:	xor    BYTE PTR [edi-0x551ea601],bh
  429e1d:	sbb    dl,bh
  429e1f:	jge    0x429e44
  429e21:	dec    edi
  429e22:	xchg   BYTE PTR [edi-0x67],cl
  429e25:	movq   QWORD PTR [ecx],mm4
  429e28:	and    dh,BYTE PTR [ebp-0x33]
  429e2b:	or     edx,DWORD PTR [eax]
  429e2d:	push   0x84ff60c5
  429e32:	xchg   ebp,eax
  429e33:	xchg   ebp,eax
  429e34:	add    BYTE PTR [edi-0x854dc2c],ch
  429e3a:	ret    0x7315
  429e3d:	push   cs
  429e3e:	adc    eax,0xebf7921
  429e43:	push   0x3e
  429e45:	add    al,0xd5
  429e47:	fnstsw WORD PTR [eax-0x14]
  429e4a:	add    al,0xf3
  429e4c:	js     0x429e83
  429e4e:	add    BYTE PTR [eax],al
  429e50:	in     eax,dx
  429e51:	xor    BYTE PTR [edi-0x4551d401],bh
  429e57:	sti    
  429e58:	and    eax,0xd56603c7
  429e5d:	or     DWORD PTR [edi],ecx
  429e5f:	add    edi,DWORD PTR [esi-0x64]
  429e62:	lock and al,0x87
  429e65:	mov    WORD PTR [ecx-0xbed5f51],gs
  429e6b:	push   edi
  429e6c:	ror    ecx,cl
  429e6e:	call   0xf3d1fbf3
  429e73:	aam    0x5b
  429e75:	int3   
  429e76:	je     0x429ef7
  429e78:	adc    eax,0xa61bc09d
  429e7d:	(bad)  
  429e7e:	bound  esp,QWORD PTR ds:0x25641152
  429e84:	test   eax,0x2ebf63f4
  429e89:	mov    ecx,0xba1eaf49
  429e8e:	into   
  429e8f:	add    bl,BYTE PTR [esi]
  429e91:	pushf  
  429e92:	lock and al,0x27
  429e95:	mov    WORD PTR [ecx],gs
  429e97:	mov    al,0xd6
  429e99:	jle    0x429ebd
  429e9b:	sbb    ebp,ecx
  429e9d:	mov    edx,0x13809d10
  429ea2:	sbb    dh,cl
  429ea4:	xor    dh,BYTE PTR [edx+0xd2b3ab2]
  429eaa:	jmp    0x9867fa7d
  429eaf:	rcr    BYTE PTR [ebx-0x54],cl
  429eb2:	add    BYTE PTR [eax+eax*1],al
  429eb5:	add    BYTE PTR [esi],ah
  429eb7:	(bad)  
  429eb9:	jmp    0x8524:0xb5750249
  429ec0:	sbb    al,0x18
  429ec2:	retf   0xe8c9
  429ec5:	jbe    0x429edf
  429ec7:	adc    bh,BYTE PTR [ecx]
  429ec9:	int    0x59
  429ecb:	(bad)  
  429ecc:	int3   
  429ecd:	sar    DWORD PTR [eax],cl
  429ecf:	or     al,0xc2
  429ed1:	scas   al,BYTE PTR es:[edi]
  429ed2:	rcl    BYTE PTR [eax],cl
  429ed4:	xchg   ebx,eax
  429ed5:	jle    0x429e6c
  429ed7:	xchg   edi,eax
  429ed8:	(bad)  
  429ed9:	cli    
  429eda:	or     eax,0x1664f7c7
  429edf:	xchg   esi,eax
  429ee0:	es push 0x16
  429ee3:	adc    BYTE PTR [edi-0x3b],ch
  429ee6:	into   
  429ee7:	and    al,0x79
  429ee9:	xchg   edi,eax
  429eea:	mov    cl,0x88
  429eec:	clc    
  429eed:	fs mov ecx,0x1b741695
  429ef3:	or     DWORD PTR [eax+0x7e],edx
  429ef6:	sbb    DWORD PTR [ecx],0x53
  429ef9:	add    edx,edi
  429efb:	adc    al,0x75
  429efd:	loope  0x429ef8
  429eff:	cmp    eax,DWORD PTR [ebp+0x53096b29]
  429f05:	push   ecx
  429f06:	aad    0x97
  429f08:	stc    
  429f09:	push   esi
  429f0a:	and    eax,0xe1625a14
  429f0f:	mov    ah,0xc8
  429f11:	sub    ebx,DWORD PTR [edx]
  429f13:	adc    DWORD PTR [esi-0x6a],ecx
  429f16:	mov    ecx,0xe52395
  429f1b:	add    BYTE PTR [eax+edi*1],al
  429f1e:	call   0xfb57587f
  429f23:	jb     0x429ed3
  429f25:	xchg   bl,bh
  429f27:	xchg   ebp,eax
  429f28:	or     eax,0xa9dfabb
  429f2d:	std    
  429f2e:	out    0x8c,eax
  429f30:	mov    ecx,0xa672fb14
  429f35:	xchg   dl,dh
  429f37:	jne    0x429f1b
  429f39:	mov    ebx,0xa9d8f652
  429f3e:	or     eax,0xc086d6a9
  429f43:	pop    esp
  429f44:	rcl    DWORD PTR [ebx],cl
  429f46:	mov    edi,0x79500137
  429f4b:	xlat   BYTE PTR ds:[ebx]
  429f4c:	idiv   BYTE PTR [edi+eiz*8-0x4edbf73]
  429f53:	add    dl,dh
  429f55:	dec    esp
  429f56:	test   ebx,eax
  429f58:	mov    bh,0xc7
  429f5a:	pop    es
  429f5b:	add    BYTE PTR [ebx+0x71],al
  429f5e:	pop    ds
  429f5f:	add    al,0x33
  429f61:	adc    dh,bh
  429f63:	adc    al,0xac
  429f65:	add    eax,0xed07e850
  429f6a:	idiv   bh
  429f6c:	clc    
  429f6d:	lds    esi,FWORD PTR [esi+ecx*1+0x53]
  429f71:	jno    0x429f92
  429f73:	add    al,0x53
  429f75:	adc    ch,bl
  429f77:	adc    al,0xfc
  429f79:	add    eax,0x748c085
  429f7e:	sub    eax,eax
  429f80:	add    BYTE PTR [eax],al
  429f82:	in     al,dx
  429f83:	mov    DWORD PTR [ebx],0xec7f7900
  429f89:	and    DWORD PTR [eax-0x30a9b5e7],0xffffffd0
  429f90:	dec    esi
  429f91:	lea    ecx,[ecx]
  429f93:	call   0xc6f874f
  429f98:	add    BYTE PTR [eax+0x17e7eb71],cl
  429f9e:	dec    edi
  429f9f:	or     al,0x0
  429fa1:	mov    edi,0x10000bec
  429fa6:	cmp    edx,DWORD PTR [edi-0x7e]
  429fa9:	(bad)  
  429faa:	sub    al,0xeb
  429fac:	adc    al,0x30
  429fae:	call   0x39cb9afe
  429fb3:	hlt    
  429fb4:	xor    al,bl
  429fb6:	pop    ecx
  429fb7:	adc    ecx,DWORD PTR [edx+0x57]
  429fba:	outs   dx,DWORD PTR ds:[esi]
  429fbb:	cmp    BYTE PTR [esi-0xced3cb0],0x14
  429fc2:	ins    BYTE PTR es:[edi],dx
  429fc3:	or     ecx,DWORD PTR [ecx-0x45cf4bbb]
  429fc9:	(bad)  
  429fcc:	(bad)  
  429fcd:	call   ebp
  429fcf:	and    BYTE PTR [esi],bl
  429fd1:	adc    eax,0xffbf15a1
  429fd6:	fwait
  429fd7:	into   
  429fd8:	sbb    ecx,DWORD PTR [ecx+0x7a275518]
  429fde:	mov    bl,BYTE PTR [eax+0x1e]
  429fe1:	test   BYTE PTR [ebp+0x858330],dl
  429fe7:	add    ch,dl
  429fe9:	and    bh,bh
  429feb:	xchg   BYTE PTR [eax],bl
  429fed:	sbb    DWORD PTR [ebp+eax*2+0x75423bdd],ecx
  429ff4:	(bad)  
  429ff5:	lods   eax,DWORD PTR ds:[esi]
  429ff6:	(bad)  
  429ff7:	ror    DWORD PTR [esi+ebx*8+0xb],cl
  429ffb:	xchg   DWORD PTR [ebp-0x37],eax
  429ffe:	es add ch,dl
  42a001:	and    BYTE PTR [edi],ah
  42a003:	mov    ah,0xc7
  42a005:	and    bh,bh
  42a007:	push   edx
  42a008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a009:	push   ebx
  42a00a:	push   ds
  42a00b:	jne    0x429fea
  42a00d:	scas   eax,DWORD PTR es:[edi]
  42a00e:	not    DWORD PTR [edi]
  42a010:	shl    DWORD PTR [eax-0x1],0x86
  42a014:	and    eax,0xc17512fc
  42a019:	jae    0x429fd1
  42a01b:	dec    esi
  42a01c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a01d:	jae    0x42a03d
  42a01f:	jne    0x429ffe
  42a021:	xlat   BYTE PTR ds:[ebx]
  42a022:	imul   ebx
  42a024:	jmp    0x5c99f89
  42a029:	sub    al,0x12
  42a02b:	je     0x429fd8
  42a02d:	out    dx,eax
  42a02e:	div    DWORD PTR [edi-0x3c]
  42a031:	pusha  
  42a032:	dec    DWORD PTR [edi-0x1e]
  42a035:	adc    eax,0x209513e7
  42a03a:	mov    ecx,0x20ebbd4f
  42a03f:	sti    
  42a040:	retf   0x3e9c
  42a043:	jne    0x42a018
  42a045:	jbe    0x42a065
  42a047:	adc    eax,0xc3fc09d1
  42a04c:	add    BYTE PTR [eax],al
  42a04e:	mov    dl,0x86
  42a050:	cmp    al,0x21
  42a052:	push   eax
  42a053:	dec    ecx
  42a054:	pop    ebp
  42a055:	or     BYTE PTR [edi+0x703c9c4],dl
  42a05b:	paddusb mm0,QWORD PTR [ebx]
  42a05e:	call   0x2a1e892c
  42a063:	(bad)  
  42a065:	bsf    ebp,DWORD PTR [esp+esi*4+0x1c0ed298]
  42a06d:	sbb    BYTE PTR [ebp+0x18],bh
  42a070:	fwait
  42a071:	and    DWORD PTR [esi+0xe],ebp
  42a074:	sbb    al,0x1c
  42a076:	pop    esi
  42a077:	hlt    
  42a078:	xchg   esp,eax
  42a079:	clc    
  42a07a:	call   0x1aae:0x4fc76f09
  42a081:	mov    ebp,0x3ed4b1d
  42a086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a087:	mov    ds:0xf5c72169,eax
  42a08c:	popa   
  42a08d:	idiv   DWORD PTR [esi]
  42a08f:	sti    
  42a090:	test   al,0x3
  42a092:	push   edx
  42a093:	xbegin 0xe843fe25
  42a099:	add    edx,ebp
  42a09b:	xor    BYTE PTR [ebp+0x7180dae7],0x10
  42a0a2:	aam    0x9
  42a0a4:	jmp    0xc33c3835
  42a0a9:	mov    WORD PTR [ecx+0x4d8af4e5],cs
  42a0af:	add    eax,ebp
  42a0b1:	add    eax,DWORD PTR [eax]
  42a0b3:	add    ch,dl
  42a0b5:	sub    BYTE PTR [ebx+0x618074f3],0xf4
  42a0bc:	aad    0x9
  42a0be:	jmp    0xfa38e7e3
  42a0c3:	div    dh
  42a0c5:	idiv   edi
  42a0c7:	test   al,0xd6
  42a0c9:	mov    eax,0xf966d4fa
  42a0ce:	aas    
  42a0cf:	jmp    0xffb6eb2f
  42a0d4:	popa   
  42a0d5:	fdivr  QWORD PTR [edi-0x2098ec7]
  42a0db:	call   0x2d7a59b6
  42a0e0:	jge    0x42a0cf
  42a0e2:	jae    0x42a0d5
  42a0e4:	mov    ch,0xf6
  42a0e6:	jae    0x42a0c5
  42a0e8:	xchg   esi,eax
  42a0e9:	or     eax,0xf6b5e7e6
  42a0ee:	pop    edi
  42a0ef:	std    
  42a0f0:	xchg   esi,eax
  42a0f1:	or     eax,0x4f95a686
  42a0f6:	or     al,0xe9
  42a0f8:	sub    eax,DWORD PTR [esp+ebp*8+0x4eedaa6a]
  42a0ff:	pop    ds
  42a100:	mov    WORD PTR [esi+ebp*8+0x7210f413],es
  42a107:	fst    QWORD PTR [ecx+0x32]
  42a10a:	xchg   DWORD PTR [eax-0xb],esi
  42a10d:	imul   bl
  42a10f:	sti    
  42a110:	push   ss
  42a111:	or     eax,0x8426a786
  42a116:	mov    cl,ah
  42a118:	add    BYTE PTR [eax],al
  42a11a:	xlat   BYTE PTR ds:[ebx]
  42a11b:	or     DWORD PTR [eax],eax
  42a11d:	fidivr WORD PTR [ebp-0x77]
  42a120:	adc    al,ch
  42a122:	(bad)  
  42a123:	or     ebx,edi
  42a125:	mov    bh,0x2
  42a127:	or     BYTE PTR [ebp+0x35],0x4f
  42a12b:	(bad)  
  42a12c:	imul   DWORD PTR [esi]
  42a12e:	add    ebp,ecx
  42a130:	or     eax,0x457ed6a9
  42a135:	adc    DWORD PTR [esi],esp
  42a137:	adc    BYTE PTR [ebp+0x15],dh
  42a13a:	mov    ch,0xf6
  42a13c:	dec    edi
  42a13d:	cmc    
  42a13e:	push   ss
  42a13f:	or     eax,0xf9fc0084
  42a144:	or     esi,0xffffffbc
  42a147:	or     BYTE PTR [eax],al
  42a149:	data16 das 
  42a14b:	ins    BYTE PTR es:[edi],dx
  42a14c:	repz add al,BYTE PTR [ecx+0xc]
  42a150:	xor    BYTE PTR [esi-0x54],0x1f
  42a154:	mov    ecx,0x8bd00
  42a159:	sub    ebp,DWORD PTR [edx]
  42a15b:	add    al,BYTE PTR [ecx]
  42a15d:	add    BYTE PTR [ebp+eax*1+0x497de87d],ch
  42a164:	out    0x1,eax
  42a166:	leave  
  42a167:	cmc    
  42a168:	add    BYTE PTR [ebp+0x40],bl
  42a16b:	loopne 0x42a1b2
  42a16d:	lsl    eax,WORD PTR [ebx-0xd]
  42a171:	xor    DWORD PTR [edx+edi*8],0x76
  42a175:	sbb    al,0xc0
  42a177:	adc    al,BYTE PTR [ebx+0x48]
  42a17a:	rcl    BYTE PTR [esi],0x43
  42a17d:	dec    eax
  42a17e:	add    BYTE PTR [eax],al
  42a180:	shl    BYTE PTR ds:0x7442e87a,0x21
  42a187:	dec    eax
  42a188:	inc    eax
  42a189:	cmovae esi,DWORD PTR [ebp+0x7c]
  42a18d:	fbld   TBYTE PTR [edx]
  42a18f:	mov    DWORD PTR [ecx],ebp
  42a191:	loopne 0x42a175
  42a193:	es mov edi,0x2a7405dd
  42a199:	inc    eax
  42a19a:	outs   dx,DWORD PTR ds:[esi]
  42a19b:	push   ss
  42a19c:	je     0x42a212
  42a19e:	add    cl,BYTE PTR [eax+0x1]
  42a1a1:	js     0x7dc17204
  42a1a7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1a9:	sbb    BYTE PTR [eax+0x7d7ec05d],cl
  42a1af:	call   0x5dcba24b
  42a1b4:	shl    al,1
  42a1b6:	std    
  42a1b7:	mov    BYTE PTR [ecx-0x8],cl
  42a1ba:	mov    BYTE PTR [ebp-0x2b],bl
  42a1bd:	push   es
  42a1be:	xchg   ecx,eax
  42a1bf:	inc    ebp
  42a1c0:	in     eax,dx
  42a1c1:	push   ecx
  42a1c2:	sbb    dl,BYTE PTR ds:0xffbf2dbd
  42a1c8:	push   ecx
  42a1c9:	loope  0x42a163
  42a1cb:	dec    ecx
  42a1cc:	das    
  42a1cd:	adc    DWORD PTR [edx],ebx
  42a1cf:	jne    0x42a18a
  42a1d1:	sbb    al,0xf8
  42a1d3:	mov    bh,0xc6
  42a1d5:	loopne 0x42a1da
  42a1d7:	test   eax,0x3fff20d5
  42a1dc:	sub    DWORD PTR [ecx],ebx
  42a1de:	test   eax,0x2be649fd
  42a1e3:	push   eax
  42a1e4:	add    BYTE PTR [eax],al
  42a1e6:	xchg   edx,eax
  42a1e7:	into   
  42a1e8:	pop    ds
  42a1e9:	sti    
  42a1ea:	loopne 0x42a1e0
  42a1ec:	idiv   DWORD PTR [edi]
  42a1ee:	aad    0xf0
  42a1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1f1:	(bad)  
  42a1f2:	jnp    0x42a22a
  42a1f4:	and    edx,DWORD PTR [edx*1+0x61458621]
  42a1fb:	cmp    al,cl
  42a1fd:	jmp    0x42a1ec
  42a1ff:	and    al,0x9e
  42a201:	call   FWORD PTR [edx-0x2f]
  42a204:	xchg   BYTE PTR [ebp+0x45],al
  42a207:	cmp    al,cl
  42a209:	out    0xa5,eax
  42a20b:	mov    edx,DWORD PTR [edi+0x270e42eb]
  42a211:	data16 aad 0x9b
  42a214:	xchg   edi,eax
  42a215:	sti    
  42a216:	xor    cl,BYTE PTR [esi]
  42a218:	stos   DWORD PTR es:[edi],eax
  42a219:	adc    edx,DWORD PTR [ebp+0x7e59ba20]
  42a21f:	jmp    0xcd90f761
  42a224:	mov    bl,0x86
  42a226:	cwde   
  42a227:	adc    al,0xf0
  42a229:	mov    al,ds:0x4eff20d5
  42a22e:	stos   BYTE PTR es:[edi],al
  42a22f:	dec    esp
  42a230:	shl    BYTE PTR [ebp-0x2a],1
  42a233:	jns    0x42a21b
  42a235:	shr    BYTE PTR [ecx+0x9],0xe4
  42a239:	jmp    0x888:0xf0d89615
  42a240:	jmp    0xbe2c0348
  42a245:	inc    esp
  42a246:	dec    ecx
  42a247:	test   ebp,0xde000044
  42a24d:	test   BYTE PTR [ecx+0x3],dl
  42a250:	aad    0x9
  42a252:	sub    cl,al
  42a254:	mov    esi,0xd503e700
  42a259:	xlat   BYTE PTR ds:[ebx]
  42a25a:	mov    ebp,0x2442f829
  42a25f:	and    bh,dl
  42a261:	pop    es
  42a262:	jmp    0xa259546a
  42a267:	(bad)  
  42a268:	mov    es,WORD PTR [esi]
  42a26a:	out    0x3,eax
  42a26c:	aad    0x1e
  42a26e:	iret   
  42a26f:	inc    ebp
  42a270:	sbb    BYTE PTR [esi],cl
  42a272:	add    BYTE PTR [edx*8-0x680b41f7],0xc4
  42a27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a27b:	data16 aad 0x9
  42a27e:	jmp    0x2c8578ab
  42a283:	and    BYTE PTR [edx],bh
  42a285:	or     ecx,ebp
  42a287:	add    eax,DWORD PTR [edx+0x56f78208]
  42a28d:	imul   DWORD PTR [eax]
  42a28f:	add    al,0x5a
  42a291:	adc    DWORD PTR [esi-0x39],ebx
  42a294:	rcl    al,cl
  42a296:	bound  esi,QWORD PTR [eax-0x6916f62b]
  42a29c:	xchg   edx,eax
  42a29d:	jle    0x42a30a
  42a29f:	lods   al,BYTE PTR ds:[esi]
  42a2a0:	aad    0x9
  42a2a2:	jmp    0xd4402c7f
  42a2a7:	ficomp WORD PTR [ebx+0x3a]
  42a2aa:	push   cs
  42a2ab:	mov    ?,WORD PTR [ecx+0x8]
  42a2ae:	jmp    0x5442a2b6
  42a2b3:	adc    BYTE PTR [eax],al
  42a2b5:	inc    ecx
  42a2b6:	aam    0x9
  42a2b8:	add    BYTE PTR [esi-0x632879fd],dh
  42a2be:	(bad)  [ebx-0xb3e461f]
  42a2c4:	arpl   bp,di
  42a2c6:	push   ss
  42a2c7:	or     ah,BYTE PTR [ebx+0x2f226ae1]
  42a2cd:	sub    DWORD PTR [esi-0x74],ebx
  42a2d0:	addr16 call 0x6fcbacac
  42a2d6:	ins    DWORD PTR es:[edi],dx
  42a2d7:	or     al,BYTE PTR [eax]
  42a2d9:	jmp    0xe8ae2f3d
  42a2de:	(bad)  
  42a2df:	or     DWORD PTR [edi+0x16f0f524],eax
  42a2e5:	bound  edx,QWORD PTR [ebx-0x1ae378ef]
  42a2eb:	xchg   edx,eax
  42a2ec:	mov    DWORD PTR [ecx-0x2a],edx
  42a2ef:	or     DWORD PTR [eax],eax
  42a2f1:	jo     0x42a313
  42a2f3:	outs   dx,BYTE PTR ds:[esi]
  42a2f4:	add    ecx,ebp
  42a2f6:	(bad)  
  42a2f7:	xchg   edx,eax
  42a2f8:	cmp    DWORD PTR ds:0x720009d6,0x425b1593
  42a302:	push   cs
  42a303:	enter  0xe907,0x23
  42a307:	nop
  42a308:	jmp    0x42a342
  42a30a:	test   BYTE PTR [ebx+0x53],bl
  42a30d:	jb     0x42a37a
  42a30f:	sbb    eax,0x5577987
  42a314:	add    ebx,ebp
  42a316:	add    BYTE PTR [eax],al
  42a318:	(bad)  
  42a319:	or     DWORD PTR [ecx+ebx*8+0x57],esi
  42a31d:	add    eax,0x9d6eb03
  42a322:	je     0x42a315
  42a324:	push   edi
  42a325:	add    eax,0x9d6eb04
  42a32a:	jne    0x42a2e1
  42a32c:	cmp    al,0x7
  42a32e:	cli    
  42a32f:	add    BYTE PTR [ecx+0x15],cl
  42a332:	not    DWORD PTR ds:0x3b0124
  42a338:	ja     0x42a37e
  42a33a:	xor    ebx,DWORD PTR [esi+0xc2c]
  42a340:	dec    eax
  42a341:	out    0x5,al
  42a343:	mov    bh,0x31
  42a345:	std    
  42a346:	mov    eax,DWORD PTR [ebp-0x40]
  42a349:	mov    esp,0x5db36464
  42a34e:	mov    edi,0xe04bbe6a
  42a353:	adc    bh,al
  42a355:	dec    ebx
  42a356:	push   eax
  42a357:	push   ebx
  42a358:	push   esi
  42a359:	jmp    0x42a350
  42a35b:	jne    0x42a311
  42a35d:	and    eax,0xccafc015
  42a362:	cli    
  42a363:	test   BYTE PTR [ecx+ebx*4+0xe],ch
  42a367:	add    DWORD PTR [ecx],0x22
  42a36a:	cli    
  42a36b:	push   cs
  42a36c:	clc    
  42a36d:	push   es
  42a36e:	add    BYTE PTR [eax],al
  42a370:	jl     0x42a301
  42a372:	jl     0x42a370
  42a374:	js     0x42a389
  42a376:	test   BYTE PTR [edi],cl
  42a378:	ins    DWORD PTR es:[edi],dx
  42a379:	or     al,0x0
  42a37b:	mov    DWORD PTR [eax],eax
  42a37d:	add    BYTE PTR [edx],ah
  42a37f:	sahf   
  42a380:	(bad)  
  42a381:	(bad)  
  42a382:	jl     0x42a397
  42a384:	scas   eax,DWORD PTR es:[edi]
  42a385:	pop    ebp
  42a386:	pop    esp
  42a387:	adc    ebp,DWORD PTR [edi+0x6ee2f7c7]
  42a38d:	adc    al,0xfc
  42a38f:	or     eax,0x172ce0c1
  42a394:	mov    ebx,0x29ac350
  42a399:	mov    ecx,esp
  42a39b:	and    DWORD PTR [edx+0x20],esp
  42a39e:	ret    
  42a39f:	call   0x7d79:0xabebff02
  42a3a6:	sbb    al,0xd
  42a3a8:	jne    0x42a3cd
  42a3aa:	aad    0xcc
  42a3ac:	(bad)  
  42a3ad:	sub    eax,0xe8466b15
  42a3b2:	inc    edx
  42a3b3:	jl     0x42a3cc
  42a3b5:	sti    
  42a3b6:	add    bh,BYTE PTR [ebp+0x32420af2]
  42a3bc:	mov    ah,0xfa
  42a3be:	push   0xdd7515de
  42a3c3:	sbb    ah,BYTE PTR [ecx-0x4bd91d07]
  42a3c9:	call   0x4195ed
  42a3ce:	rcr    BYTE PTR [esi-0x6bf050a],cl
  42a3d4:	es push esp
  42a3d6:	ret    
  42a3d7:	or     BYTE PTR [esi],dl
  42a3d9:	mov    DWORD PTR [eax],edx
  42a3db:	fld    DWORD PTR [ecx-0x7a182209]
  42a3e1:	adc    DWORD PTR [eax],eax
  42a3e3:	add    ah,dl
  42a3e5:	lock dec BYTE PTR [edx]
  42a3e8:	pop    ecx
  42a3e9:	(bad)  
  42a3ea:	(bad)  
  42a3eb:	call   ebp
  42a3ed:	jae    0x42a409
  42a3ef:	(bad)  
  42a3f0:	jecxz  0x42a45e
  42a3f2:	push   ebp
  42a3f3:	add    ch,dl
  42a3f5:	lock xor edi,0x7e8f3cd6
  42a3fc:	jle    0x42a3f4
  42a3fe:	mov    dl,BYTE PTR [eax+eiz*2+0x2c]
  42a402:	sbb    bh,BYTE PTR [edi+0x6c]
  42a405:	repnz lea eax,[ebx-0x60]
  42a409:	push   ecx
  42a40a:	(bad)  
  42a40b:	call   ebp
  42a40d:	and    al,0xe5
  42a40f:	cmp    al,0x77
  42a411:	icebp  
  42a412:	(bad)  
  42a413:	inc    ecx
  42a415:	(bad)  
  42a416:	xlat   BYTE PTR ds:[ebx]
  42a417:	sahf   
  42a418:	aad    0xf0
  42a41a:	(bad)  
  42a41b:	jae    0x42a407
  42a41d:	mov    ebp,0xf0d5005e
  42a422:	mov    ah,BYTE PTR [edi]
  42a424:	call   0xd5463032
  42a429:	or     esp,edx
  42a42b:	lahf   
  42a42c:	sub    eax,0xd503e867
  42a431:	xchg   edx,eax
  42a432:	stos   DWORD PTR es:[edi],eax
  42a433:	or     esi,DWORD PTR [ebx+0x8]
  42a436:	iret   
  42a437:	add    edi,DWORD PTR [ebx+0x9]
  42a43a:	xchg   esi,eax
  42a43b:	sbb    ah,al
  42a43d:	lods   eax,DWORD PTR ds:[esi]
  42a43e:	aad    0xc3
  42a440:	repnz push esi
  42a442:	inc    ecx
  42a443:	mov    esp,0x8e2206ee
  42a448:	add    BYTE PTR [eax],al
  42a44a:	cwde   
  42a44b:	and    DWORD PTR [esi-0x48],ebp
  42a44e:	fiadd  WORD PTR [esi]
  42a450:	pushf  
  42a451:	jecxz  0x42a476
  42a453:	icebp  
  42a454:	xchg   ebx,eax
  42a455:	sbb    cl,dh
  42a457:	push   es
  42a458:	les    esp,FWORD PTR [ebp+edx*8+0x9]
  42a45c:	jmp    0xe9b671f1
  42a461:	lods   eax,DWORD PTR ds:[esi]
  42a462:	scas   eax,DWORD PTR es:[edi]
  42a463:	push   es
  42a464:	jae    0x42a471
  42a466:	mov    dl,0x2c
  42a468:	and    al,0x64
  42a46a:	aad    0x9
  42a46c:	jmp    0xe9b65fff
  42a471:	lods   eax,DWORD PTR ds:[esi]
  42a472:	mov    edx,?
  42a474:	mov    edx,0xe9096bd7
  42a479:	add    ecx,DWORD PTR [eax]
  42a47b:	and    eax,0x96aa481
  42a480:	jmp    0xda6c8c9d
  42a485:	push   eax
  42a486:	xchg   ebp,eax
  42a487:	pop    ecx
  42a488:	adc    esi,esi
  42a48a:	aad    0x9
  42a48c:	jmp    0x925484a9
  42a491:	xor    DWORD PTR [esi-0x74b4d199],ebp
  42a497:	and    eax,0x979d6e9
  42a49c:	jmp    0xffd072a4
  42a4a1:	xchg   cl,bl
  42a4a3:	or     DWORD PTR [eax],eax
  42a4a5:	lods   al,BYTE PTR ds:[esi]
  42a4a6:	mov    bh,0x9
  42a4a8:	add    cl,ch
  42a4aa:	icebp  
  42a4ab:	mov    BYTE PTR [edx+ecx*4],bh
  42a4ae:	add    BYTE PTR [eax],al
  42a4b0:	ror    DWORD PTR [ecx],1
  42a4b2:	add    ch,bl
  42a4b4:	mov    eax,DWORD PTR [ebp+eiz*4-0x17]
  42a4b8:	(bad)  
  42a4b9:	or     DWORD PTR [ebx],ecx
  42a4bb:	ins    DWORD PTR es:[edi],dx
  42a4bc:	mov    dl,0x9
  42a4be:	add    cl,ch
  42a4c0:	and    ebp,DWORD PTR [ecx+0x7cd6e8ff]
  42a4c6:	retf   0x2262
  42a4c9:	push   cs
  42a4ca:	callw  0x218b
  42a4ce:	adc    BYTE PTR [ebx-0x304a92a],dl
  42a4d4:	xor    dl,BYTE PTR ds:0xed86e940
  42a4da:	ret    0xdc02
  42a4dd:	add    bh,ah
  42a4df:	xor    al,0xa2
  42a4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4e2:	(bad)  
  42a4e3:	call   0xaec7b5be
  42a4e8:	int    0x0
  42a4ea:	sti    
  42a4eb:	jb     0x42a550
  42a4ed:	adc    ebx,esi
  42a4ef:	sub    DWORD PTR [ebp-0x291404fb],esi
  42a4f5:	jge    0x42a491
  42a4f7:	xchg   ecx,eax
  42a4f8:	jbe    0x42a4ef
  42a4fa:	(bad)  
  42a4fb:	call   0xc2c12cb1
  42a500:	iret   
  42a501:	jge    0x42a53d
  42a503:	out    0x5c,al
  42a505:	push   ebx
  42a506:	sti    
  42a507:	scas   al,BYTE PTR es:[edi]
  42a508:	int    0x84
  42a50a:	idiv   eax
  42a50c:	cmp    al,0xb7
  42a50e:	jle    0x42a4b2
  42a510:	push   0x79
  42a512:	sbb    ch,BYTE PTR [edx+0x0]
  42a515:	add    cl,dh
  42a517:	push   ds
  42a518:	or     esp,DWORD PTR [esp+0x0]
  42a51c:	sti    
  42a51d:	add    BYTE PTR [ebx-0x24],bl
  42a520:	pushf  
  42a521:	add    BYTE PTR [ecx+ecx*1],ch
  42a524:	pop    es
  42a525:	test   DWORD PTR [edi],edi
  42a527:	and    dh,bh
  42a529:	jmp    esp
  42a52b:	mov    al,dh
  42a52d:	add    BYTE PTR [eax+esi*1],ch
  42a530:	dec    ebx
  42a531:	(bad)  
  42a532:	jnp    0x42a555
  42a534:	cmp    eax,0x8fca2
  42a539:	(bad)  
  42a53b:	xor    dh,dh
  42a53d:	call   FWORD PTR [ebx-0x4400c9d1]
  42a543:	and    DWORD PTR [ecx+0x8abff],edi
  42a549:	cmp    eax,0x95e
  42a54e:	inc    ecx
  42a54f:	lock add DWORD PTR [ebp-0x18],0x15243f95
  42a557:	or     DWORD PTR [eax],eax
  42a559:	add    DWORD PTR [ecx+edx*1+0x21db3784],edi
  42a560:	mul    DWORD PTR ds:0x10008ac
  42a566:	mov    bl,0x3f
  42a568:	adc    eax,eax
  42a56a:	xchg   ecx,eax
  42a56b:	sbb    BYTE PTR [eax],al
  42a56d:	add    BYTE PTR [ecx+ecx*1+0x8acf030],ch
  42a574:	pop    es
  42a575:	mov    bh,0x3c
  42a577:	xor    BYTE PTR ds:0x5100003d,cl
  42a57d:	or     eax,0x898b0000
  42a582:	adc    edi,edi
  42a584:	cmp    ebx,DWORD PTR [ebx+eax*4]
  42a587:	shl    DWORD PTR [edx],0x8b
  42a58a:	mov    edi,0xf716f00f
  42a58f:	(bad)  
  42a590:	cmp    esp,DWORD PTR [ebx-0x76943ecf]
  42a596:	out    0xfe,al
  42a598:	aad    0x9b
  42a59a:	adc    bh,bl
  42a59c:	rcl    dl,0x11
  42a59f:	jne    0x42a56e
  42a5a1:	sbb    BYTE PTR [edi+0x13842be8],dl
  42a5a7:	sti    
  42a5a8:	mov    BYTE PTR [edi+0x28],ah
  42a5ab:	jg     0x42a5e6
  42a5ad:	push   ss
  42a5ae:	scas   eax,DWORD PTR es:[edi]
  42a5af:	push   ecx
  42a5b0:	dec    esi
  42a5b1:	bound  eax,QWORD PTR [edi-0x32443abe]
  42a5b7:	cli    
  42a5b8:	pop    esp
  42a5b9:	fisttp QWORD PTR [edx]
  42a5bb:	(bad)  
  42a5bc:	int3   
  42a5bd:	call   0x258a:0xf2d500f3
  42a5c4:	add    ebp,DWORD PTR [ebp-0x1e96fefa]
  42a5ca:	test   DWORD PTR [ebp-0x3b],eax
  42a5cd:	addr16 leave 
  42a5cf:	or     ecx,DWORD PTR [esi+0x44]
  42a5d2:	sub    al,0x3f
  42a5d4:	fisub  WORD PTR [edx]
  42a5d6:	adc    edi,DWORD PTR [edi+0x38]
  42a5d9:	jmp    0xe95397f2
  42a5de:	cli    
  42a5df:	jae    0x42a5e1
  42a5e1:	add    dl,dh
  42a5e3:	xchg   esi,eax
  42a5e4:	add    edx,DWORD PTR [ebx+0x22]
  42a5e7:	shl    BYTE PTR ds:0x11f772e8,0xfb
  42a5ee:	mov    esi,0xcd8085cf
  42a5f3:	icebp  
  42a5f4:	(bad)  
  42a5f5:	dec    DWORD PTR [esi+ebp*1+0x10]
  42a5f9:	aaa    
  42a5fa:	call   0x25cd:0x8890166
  42a601:	adc    BYTE PTR [edx],ch
  42a603:	(bad)  
  42a604:	xchg   DWORD PTR ds:[ebx+0x728793d9],ecx
  42a60b:	mov    esp,0x6a95b301
  42a610:	shl    bl,0x4e
  42a613:	or     ch,BYTE PTR [ebx]
  42a615:	hlt    
  42a616:	push   ebx
  42a617:	push   ebp
  42a618:	in     eax,dx
  42a619:	mov    dh,BYTE PTR [eax-0x2a749fef]
  42a61f:	or     cl,ch
  42a621:	add    ebx,DWORD PTR [edx+0x4c]
  42a624:	(bad)  [edx-0x748fe678]
  42a62a:	(bad)  [eax]
  42a62c:	jmp    0xda258834
  42a631:	jg     0x42a5d2
  42a633:	pop    es
  42a634:	jmp    0x59a7f23c
  42a639:	cmp    BYTE PTR [eax-0x7],0xe6
  42a63d:	(bad)  
  42a63e:	(bad)  
  42a63f:	outs   dx,DWORD PTR ds:[esi]
  42a640:	call   0x263e7d6f
  42a645:	inc    DWORD PTR [eax]
  42a647:	add    BYTE PTR [esi-0x2bac6df1],al
  42a64d:	mov    fs,WORD PTR [edx]
  42a64f:	sub    edi,DWORD PTR [ecx+0x4c162991]
  42a655:	gs adc eax,0xc8f57082
  42a65b:	(bad)  
  42a65c:	(bad)  
  42a65d:	outs   dx,DWORD PTR ds:[esi]
  42a65e:	call   0x263e7d8d
  42a663:	ret    
  42a664:	inc    esi
  42a665:	adc    BYTE PTR [edx+0x2a8ed153],bl
  42a66b:	sub    eax,ebp
  42a66d:	xchg   ecx,eax
  42a66e:	icebp  
  42a66f:	adc    eax,0x8201645c
  42a674:	cmp    dl,dh
  42a676:	lock (bad) 
  42a678:	(bad)  
  42a679:	outs   dx,DWORD PTR ds:[esi]
  42a67a:	call   0xa63e7da7
  42a67f:	hlt    
  42a680:	push   es
  42a681:	adc    BYTE PTR [edx],dh
  42a683:	push   esp
  42a684:	or     DWORD PTR [edi-0x757ed34e],0xffffffb9
  42a68b:	adc    eax,0xd9004b5a
  42a690:	sar    DWORD PTR [ecx+0x9d6e803],0x8d
  42a697:	cmp    al,0xb9
  42a699:	(bad)  
  42a69a:	scas   eax,DWORD PTR es:[edi]
  42a69b:	jmp    0x342b077
  42a6a0:	jne    0x42a703
  42a6a2:	call   0xfb420c57
  42a6a7:	jb     0x42a682
  42a6a9:	mov    al,BYTE PTR [ecx+eax*4+0x0]
  42a6ad:	add    BYTE PTR [ecx+ecx*8-0xf],dl
  42a6b1:	pusha  
  42a6b2:	inc    edx
  42a6b3:	(bad)  
  42a6b4:	jle    0x42a727
  42a6b6:	and    BYTE PTR [edi+0x34],dh
  42a6b9:	rol    esi,cl
  42a6bb:	push   esi
  42a6bc:	sti    
  42a6bd:	hlt    
  42a6be:	scas   al,BYTE PTR es:[edi]
  42a6bf:	adc    al,BYTE PTR [eax-0x17]
  42a6c2:	jg     0x42a6cd
  42a6c4:	add    cl,ch
  42a6c6:	push   ss
  42a6c7:	jbe    0x42a6ed
  42a6c9:	adc    cl,0x9
  42a6cc:	shr    cl,0x5d
  42a6cf:	fstp   DWORD PTR [esi]
  42a6d1:	sbb    BYTE PTR [ecx+ebx*8],cl
  42a6d4:	jae    0x42a6ac
  42a6d6:	outs   dx,DWORD PTR ds:[esi]
  42a6d7:	or     DWORD PTR [eax],eax
  42a6d9:	in     eax,dx
  42a6da:	push   esi
  42a6db:	jl     0x42a6ed
  42a6dd:	mov    dh,0xe9
  42a6df:	push   ss
  42a6e0:	push   esp
  42a6e1:	std    
  42a6e2:	xchg   esi,eax
  42a6e3:	add    DWORD PTR [ecx+ebp*1-0x5376f99b],eax
  42a6ea:	loop   0x42a674
  42a6ec:	mul    DWORD PTR [eax+ecx*8+0x75]
  42a6f0:	sub    eax,0x7ee1fe9e
  42a6f5:	out    dx,al
  42a6f6:	leave  
  42a6f7:	mov    cl,0x3f
  42a6f9:	pop    ebp
  42a6fa:	mov    ah,0x38
  42a6fc:	jge    0x42a6d3
  42a6fe:	bound  edx,QWORD PTR [esi]
  42a700:	jmpw   0xab3d
  42a704:	adc    eax,0x418585
  42a709:	add    BYTE PTR [esi],ah
  42a70b:	or     eax,0x92cc0062
  42a710:	(bad)  
  42a711:	call   0x2444a716
  42a716:	idiv   edi
  42a718:	cmp    eax,eax
  42a71a:	repnz add DWORD PTR [ebp+ecx*1+0x0],ebp
  42a71f:	jmp    0x42a719
  42a721:	xchg   edx,eax
  42a722:	pop    esp
  42a723:	hlt    
  42a724:	mov    ecx,0xff3d7441
  42a729:	push   ss
  42a72a:	adc    eax,0xfacd1870
  42a72f:	test   BYTE PTR [ecx+edx*4+0x16],bh
  42a733:	test   DWORD PTR [ebx+0x533b0490],esp
  42a739:	xchg   ecx,eax
  42a73a:	add    dh,dh
  42a73c:	imul   esp,DWORD PTR [ecx],0x940273ff
  42a742:	pop    esp
  42a743:	cld    
  42a744:	mov    ebx,0xec01f2bf
  42a749:	or     al,0x0
  42a74b:	mov    edx,DWORD PTR [edi+0x31810e31]
  42a751:	adc    eax,0xcfc8001
  42a756:	je     0x42a765
  42a758:	push   ss
  42a759:	or     al,0x62
  42a75b:	add    BYTE PTR [esi+0xd],al
  42a75e:	sub    ebx,ebx
  42a760:	in     al,0xbb
  42a762:	idiv   edi
  42a764:	jecxz  0x42a7e5
  42a766:	test   DWORD PTR [edi],0xffffc638
  42a76c:	lods   al,BYTE PTR ds:[esi]
  42a76d:	xchg   DWORD PTR [eax+ebp*4+0x4c],eax
  42a771:	lods   eax,DWORD PTR ds:[esi]
  42a772:	mov    ebp,0xfad91445
  42a777:	inc    DWORD PTR [eax]
  42a779:	add    BYTE PTR [ebp+edx*1-0x3367a7eb],ch
  42a780:	cli    
  42a781:	test   BYTE PTR [esp+ecx*1],bh
  42a784:	test   BYTE PTR ds:0xfffef1d5,dh
  42a78a:	rcl    BYTE PTR [edi+0x7fca0fb0],cl
  42a790:	leave  
  42a791:	or     edx,DWORD PTR [ebx+edx*8+0x738d06f3]
  42a798:	xchg   ecx,eax
  42a799:	not    esp
  42a79b:	xor    eax,0xe46d52e7
  42a7a0:	cmp    ebx,0x73e45a52
  42a7a6:	shr    DWORD PTR [ebx+0xb],1
  42a7a9:	out    0xe1,eax
  42a7ab:	imul   ecx,ecx,0xf
  42a7ae:	out    dx,al
  42a7af:	sub    eax,0x8a6a0b44
  42a7b4:	jp     0x42a7fb
  42a7b6:	fxch   st(3)
  42a7b8:	(bad)  
  42a7b9:	mov    ebx,0xaf38714
  42a7be:	bound  esi,QWORD PTR [edx]
  42a7c0:	sti    
  42a7c1:	idiv   esi
  42a7c3:	bnd jns 0x42a843
  42a7c6:	fnsave [ebx-0x6f]
  42a7c9:	out    dx,eax
  42a7ca:	aad    0xd6
  42a7cc:	add    BYTE PTR [edi-0x5e],cl
  42a7cf:	fisub  DWORD PTR [ebx+0x0]
  42a7d2:	aad    0xf2
  42a7d4:	xchg   esi,eax
  42a7d5:	add    bh,dl
  42a7d7:	repnz (bad) 
  42a7d9:	out    0xc7,al
  42a7db:	cmp    cl,cl
  42a7dd:	pop    es
  42a7de:	add    BYTE PTR [eax],al
  42a7e0:	rcr    DWORD PTR [esi-0x66d5b111],1
  42a7e6:	fs add ch,dl
  42a7e9:	lock xchg esi,eax
  42a7eb:	std    
  42a7ec:	aam    0xf0
  42a7ee:	(bad)  
  42a7ef:	cli    
  42a7f0:	inc    eax
  42a7f1:	or     DWORD PTR [ecx+0xda17d45],eax
  42a7f7:	jne    0x42a7a2
  42a7f9:	ins    BYTE PTR es:[edi],dx
  42a7fa:	inc    esi
  42a7fb:	call   0xfb50a3ef
  42a800:	push   esi
  42a801:	or     ah,BYTE PTR [eax+eiz*1-0x2b]
  42a805:	jne    0x42a7f2
  42a807:	mov    dh,0x27
  42a809:	jb     0x42a795
  42a80b:	add    edx,ebp
  42a80d:	or     DWORD PTR [ecx+0xb],eax
  42a810:	jnp    0x42a811
  42a812:	call   0x243a8b35
  42a817:	cld    
  42a818:	stos   BYTE PTR es:[edi],al
  42a819:	jne    0x42a7ef
  42a81b:	mov    dh,0x7
  42a81d:	jb     0x42a7a0
  42a81f:	add    edx,ebp
  42a821:	or     DWORD PTR [ecx],edx
  42a823:	cld    
  42a824:	push   eax
  42a825:	(bad)  
  42a826:	call   0x6444683d
  42a82b:	enter  0x5a7a,0x8a
  42a82f:	cwde   
  42a830:	ds xchg ebx,eax
  42a832:	stos   BYTE PTR es:[edi],al
  42a833:	sbb    eax,DWORD PTR [edx+0x4]
  42a836:	jp     0x42a84a
  42a838:	stos   BYTE PTR es:[edi],al
  42a839:	jl     0x42a7bc
  42a83b:	add    ebp,DWORD PTR [ecx-0x4d44e9f1]
  42a841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a842:	call   0xd542a84a
  42a847:	jno    0x42a82e
  42a849:	add    eax,0xf53e09d5
  42a84e:	add    al,0x45
  42a850:	loope  0x42a845
  42a852:	xchg   BYTE PTR [esi+edx*4],bl
  42a855:	mov    edx,0x3e8a47a
  42a85a:	aad    0x71
  42a85c:	in     al,dx
  42a85d:	add    eax,0x982a09d5
  42a862:	loop   0x42a7f0
  42a864:	stos   DWORD PTR es:[edi],eax
  42a865:	pop    ebx
  42a866:	and    eax,0x520f93ff
  42a86b:	mov    DWORD PTR [eax],0x9fecb4f
  42a871:	sbb    DWORD PTR [eax],edx
  42a873:	adc    ch,al
  42a875:	xchg   edi,eax
  42a876:	rcr    DWORD PTR [edx-0x6e],1
  42a879:	fwait
  42a87a:	dec    edx
  42a87b:	or     DWORD PTR [eax],eax
  42a87d:	jmp    0xeb431a58
  42a882:	(bad)  
  42a883:	or     ebx,edi
  42a885:	pop    esp
  42a886:	loope  0x42a814
  42a888:	inc    esp
  42a889:	xchg   ecx,eax
  42a88a:	inc    ecx
  42a88b:	add    esi,DWORD PTR [ebp-0x2b]
  42a88e:	add    ah,cl
  42a890:	out    0x70,eax
  42a892:	retf   
  42a893:	add    bh,bl
  42a895:	mov    esi,0xf100069a
  42a89a:	(bad)  
  42a89b:	or     DWORD PTR [esi+ecx*1+0x43],esi
  42a89f:	(bad)  
  42a8a0:	xor    BYTE PTR [ecx-0x70182c28],ch
  42a8a6:	pop    edx
  42a8a7:	add    bh,bl
  42a8a9:	out    dx,al
  42a8aa:	add    BYTE PTR [eax],al
  42a8ac:	lods   eax,DWORD PTR ds:[esi]
  42a8ad:	dec    esp
  42a8ae:	adc    al,0xe6
  42a8b0:	popf   
  42a8b1:	leave  
  42a8b2:	dec    esi
  42a8b3:	test   al,0xf6
  42a8b5:	sbb    DWORD PTR [edi],eax
  42a8b7:	mov    cl,0x66
  42a8b9:	pushw  es
  42a8bb:	jmp    0x42a893
  42a8bd:	or     ebx,edi
  42a8bf:	cld    
  42a8c0:	rol    BYTE PTR [edx],cl
  42a8c2:	adc    eax,0x3e22f5
  42a8c7:	mov    BYTE PTR [edi+edx*2-0x37],0x2b
  42a8cc:	add    esi,edi
  42a8ce:	hlt    
  42a8cf:	in     al,dx
  42a8d0:	dec    bl
  42a8d2:	ds jmp 0x51621eaa
  42a8d8:	jne    0x42a87b
  42a8da:	cli    
  42a8db:	ds pop ebp
  42a8dd:	leave  
  42a8de:	jae    0x42a8b3
  42a8e0:	popa   
  42a8e1:	or     al,0x88
  42a8e3:	sbb    DWORD PTR [eax],edx
  42a8e5:	dec    BYTE PTR [ecx]
  42a8e7:	pop    esi
  42a8e8:	push   esi
  42a8e9:	push   es
  42a8ea:	add    ecx,ebp
  42a8ec:	(bad)  
  42a8ed:	adc    BYTE PTR [ebx+0xad960],dh
  42a8f3:	jmp    0x52930f
  42a8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8f9:	dec    eax
  42a8fa:	mov    ebx,0x13f991ff
  42a8ff:	inc    eax
  42a900:	lods   al,BYTE PTR ds:[esi]
  42a901:	and    eax,DWORD PTR ds:0xfac6be08
  42a907:	add    esi,DWORD PTR [eax]
  42a909:	into   
  42a90a:	loop   0x42a986
  42a90c:	push   esp
  42a90d:	sbb    dh,bh
  42a90f:	test   BYTE PTR [eax],al
  42a911:	add    BYTE PTR [edx*4-0xe4f74db],ch
  42a918:	inc    BYTE PTR [esp+edi*1+0x798b1995]
  42a91f:	adc    eax,0x897e6c43
  42a925:	add    BYTE PTR [ebp+0x9],ch
  42a928:	add    BYTE PTR [ecx-0x77f281bc],cl
  42a92e:	mov    esi,es
  42a930:	cli    
  42a931:	mov    dh,BYTE PTR [ebp+0x2c000104]
  42a937:	or     BYTE PTR [eax+0x4],0x6f
  42a93b:	dec    ecx
  42a93c:	inc    eax
  42a93d:	ret    0x930
  42a940:	sub    eax,eax
  42a942:	push   edi
  42a943:	adc    bh,dh
  42a945:	and    eax,0x3af4ac
  42a94a:	mov    dl,0x3
  42a94c:	or     dl,dl
  42a94e:	aas    
  42a94f:	or     DWORD PTR [esp+esi*2],eax
  42a952:	ficomp DWORD PTR ds:0x198b982b
  42a958:	test   al,al
  42a95a:	xor    ah,ah
  42a95c:	lahf   
  42a95d:	mov    ah,cl
  42a95f:	(bad)  
  42a962:	cmp    ch,ah
  42a964:	dec    BYTE PTR [eax+0x10874]
  42a96a:	mov    esp,0xc424447d
  42a96f:	jge    0x42a97e
  42a971:	mov    ch,dl
  42a973:	inc    edx
  42a974:	(bad)  
  42a975:	inc    DWORD PTR [eax]
  42a977:	add    BYTE PTR [ebp+0x71],cl
  42a97a:	add    eax,DWORD PTR [ecx]
  42a97c:	aad    0xf2
  42a97e:	sar    DWORD PTR [edi-0x8ceeb],cl
  42a984:	mov    ds:0x151446cd,eax
  42a989:	repz sbb BYTE PTR ds:0xffbec0dd,al
  42a990:	(bad)  
  42a991:	aas    
  42a992:	mov    dl,0x52
  42a994:	or     DWORD PTR [esi],ebp
  42a996:	sbb    al,0xef
  42a998:	(bad)  
  42a999:	retf   
  42a99a:	or     al,BYTE PTR [ebp+edx*4+0x986d03e]
  42a9a1:	pop    es
  42a9a2:	hlt    
  42a9a3:	cs imul esi,edi,0x2c
  42a9a7:	jne    0x42a969
  42a9a9:	adc    al,0xb2
  42a9ab:	push   ecx
  42a9ac:	push   es
  42a9ad:	enter  0x7849,0x25
  42a9b1:	das    
  42a9b2:	add    al,0xe8
  42a9b4:	rcr    BYTE PTR [ebx+0x2c9afb0a],cl
  42a9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a9bb:	mov    ebp,0x1509f2d9
  42a9c0:	lods   eax,DWORD PTR ds:[esi]
  42a9c1:	loope  0x42a981
  42a9c3:	dec    DWORD PTR [eax+0x1af8771f]
  42a9c9:	aad    0x62
  42a9cb:	setne  dl
  42a9ce:	(bad)
  42a9d1:	in     eax,0xb4
  42a9d3:	push   ecx
  42a9d4:	stos   BYTE PTR es:[edi],al
  42a9d5:	inc    edi
  42a9d6:	xor    ebp,DWORD PTR [edi]
  42a9d8:	adc    eax,0x5b3147
  42a9dd:	add    BYTE PTR [ebx+0x452509a7],dl
  42a9e3:	(bad)  
  42a9e4:	mov    esi,0xf6ece8ff
  42a9e9:	int    0x96
  42a9eb:	repnz add dh,BYTE PTR [esp+edx*1+0xa]
  42a9f0:	adc    DWORD PTR [eax+0x66],esi
  42a9f3:	sti    
  42a9f4:	sbb    DWORD PTR [eax+0xed17695],ecx
  42a9fa:	loopne 0x42a97d
  42a9fc:	clc    
  42a9fd:	ret    
  42a9fe:	mov    dl,0x90
  42aa00:	repz jnp 0x42a988
  42aa03:	inc    edi
  42aa04:	jmp    0xe850ffd5
  42aa09:	add    edx,ebp
  42aa0b:	je     0x42a9dd
  42aa0d:	mov    dl,0x24
  42aa0f:	aaa    
  42aa10:	test   eax,0x165a1ab3
  42aa15:	sub    edi,DWORD PTR [edi]
  42aa17:	cmp    BYTE PTR [ecx+0x7ee37ac2],0x15
  42aa1e:	outs   dx,BYTE PTR ds:[esi]
  42aa1f:	sti    
  42aa20:	cmc    
  42aa21:	inc    ebx
  42aa22:	cmovp  ebx,DWORD PTR [esi]
  42aa25:	inc    ebx
  42aa26:	sti    
  42aa27:	add    al,0xb2
  42aa29:	clc    
  42aa2a:	adc    bl,BYTE PTR [ecx]
  42aa2c:	sub    DWORD PTR [edx+eax*1],eax
  42aa2f:	retf   0xea5
  42aa32:	lock and eax,0xf542c3f4
  42aa38:	jmp    0x42aa35
  42aa3a:	or     BYTE PTR [edi-0x17],al
  42aa3d:	pop    es
  42aa3e:	xchg   DWORD PTR [ebp+0x2e],esi
  42aa41:	sbb    al,0x0
  42aa43:	add    BYTE PTR [edx+0x590e7992],dl
  42aa49:	retf   0xc1fc
  42aa4c:	pop    ds
  42aa4d:	adc    eax,0x9d2f4f1
  42aa52:	outs   dx,BYTE PTR ds:[esi]
  42aa53:	add    BYTE PTR [ebp-0x26],bl
  42aa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa57:	add    edi,DWORD PTR [eax+ecx*4+0x9d504e4]
  42aa5e:	aam    0xe5
  42aa60:	pop    ebx
  42aa61:	mov    ecx,0x9d504f0
  42aa66:	fs adc eax,0x9f002969
  42aa6c:	retf   
  42aa6d:	adc    al,0x70
  42aa6f:	aad    0x96
  42aa71:	cli    
  42aa72:	sub    DWORD PTR [ecx],0x6d
  42aa75:	adc    eax,0x4a86b94f
  42aa7a:	das    
  42aa7b:	xor    cl,BYTE PTR [eax]
  42aa7d:	adc    al,0xaa
  42aa80:	(bad)  
  42aa81:	icebp  
  42aa82:	inc    edx
  42aa83:	(bad)  
  42aa84:	fdivr  st,st(6)
  42aa86:	push   esi
  42aa87:	mov    edx,0x62bf6016
  42aa8c:	adc    BYTE PTR [eax-0x41],ah
  42aa8f:	(bad)  
  42aa90:	jecxz  0x42aab6
  42aa92:	lods   al,BYTE PTR ds:[esi]
  42aa93:	std    
  42aa94:	xchg   esi,eax
  42aa95:	cli    
  42aa96:	jge    0x42aaf5
  42aa98:	ins    DWORD PTR es:[edi],dx
  42aa99:	push   es
  42aa9a:	add    BYTE PTR [ebp-0x72],bl
  42aa9d:	jnp    0x42ab1b
  42aa9f:	add    eax,0xfb73fedd
  42aaa4:	push   ebx
  42aaa5:	div    DWORD PTR [ebx+0xf]
  42aaa8:	add    BYTE PTR [eax],al
  42aaaa:	retf   
  42aaab:	add    al,0x8
  42aaad:	fwait
  42aaae:	xchg   esp,eax
  42aaaf:	cli    
  42aab0:	(bad)  
  42aab1:	xor    al,0x3a
  42aab3:	loop   0x42aa8e
  42aab5:	jg     0x42aa8f
  42aab7:	inc    BYTE PTR [ebx-0x5ee1a257]
  42aabd:	popa   
  42aabe:	add    DWORD PTR [ebx],edi
  42aac0:	add    BYTE PTR [edx+0x59],ah
  42aac3:	or     DWORD PTR [ecx],eax
  42aac5:	jmp    0xd5843ba0
  42aaca:	mov    bh,0x91
  42aacc:	iret   
  42aacd:	sub    dl,cl
  42aacf:	cmp    BYTE PTR [edi-0x1b],0xd7
  42aad3:	or     DWORD PTR [eax],eax
  42aad5:	jo     0x42aaea
  42aad7:	adc    bh,BYTE PTR [esi-0x78a8291b]
  42aadd:	(bad)  
  42aadf:	add    DWORD PTR [ebx+0x4e],edx
  42aae2:	dec    ebp
  42aae3:	sbb    BYTE PTR es:[eax],al
  42aae6:	xchg   ebx,eax
  42aae7:	mov    eax,ds:0xa1a3181e
  42aaec:	push   ds
  42aaed:	sbb    BYTE PTR [edx],bh
  42aaef:	or     eax,0xcdafe015
  42aaf4:	cli    
  42aaf5:	mov    dh,ah
  42aaf7:	mov    esi,0x6e39ce2
  42aafc:	test   DWORD PTR [ebx-0x3da75915],0x8b4e0dac
  42ab06:	sub    cl,dh
  42ab08:	add    dl,BYTE PTR [edi-0x5d]
  42ab0b:	mov    eax,ds:0x181e
  42ab10:	mov    ds:0x83181ea1,eax
  42ab15:	mov    eax,ds:0x6ca181e
  42ab1a:	adc    eax,0xfacd7fd8
  42ab1f:	mov    ah,BYTE PTR [esi+edi*4+0x6a374e2]
  42ab26:	test   DWORD PTR [ebx-0x3da759c5],0x8b550d7c
  42ab30:	nop
  42ab31:	mov    edi,0xbe347581
  42ab36:	cmc    
  42ab37:	jne    0x42ab0d
  42ab39:	push   es
  42ab3a:	jne    0x42ab50
  42ab3c:	arpl   WORD PTR [eax+0x9d9ff0a],sp
  42ab42:	dec    esi
  42ab43:	jmp    FWORD PTR [ecx]
  42ab45:	dec    ebp
  42ab46:	adc    al,0x40
  42ab48:	cmp    al,0x72
  42ab4a:	clc    
  42ab4b:	push   edi
  42ab4c:	inc    esp
  42ab4d:	mov    bl,0xf5
  42ab4f:	jmp    DWORD PTR [ebx-0x1da0408f]
  42ab55:	test   al,0xbc
  42ab57:	adc    al,0xfc
  42ab59:	mov    edi,0x724aec81
  42ab5e:	jne    0x42ab68
  42ab60:	aad    0xb7
  42ab62:	or     esi,DWORD PTR [ebp-0x33]
  42ab65:	inc    edi
  42ab66:	xchg   edx,eax
  42ab67:	adc    ebp,edx
  42ab69:	mov    ch,0xee
  42ab6b:	cli    
  42ab6c:	push   0xc0fab4e6
  42ab71:	sub    dh,bl
  42ab73:	aas    
  42ab74:	add    BYTE PTR [eax],al
  42ab76:	aad    0x6b
  42ab78:	pop    es
  42ab79:	push   ebx
  42ab7a:	mov    ebp,0xc2fb0d0f
  42ab7f:	jnp    0x42abc5
  42ab81:	pop    ebx
  42ab82:	sbb    edi,DWORD PTR [esi-0x3f2aebc0]
  42ab88:	ja     0x42abfe
  42ab8a:	icebp  
  42ab8b:	cli    
  42ab8c:	mov    bl,0x86
  42ab8e:	lahf   
  42ab8f:	jnp    0x42ab40
  42ab91:	or     ecx,DWORD PTR [esi-0x2a]
  42ab94:	push   eax
  42ab95:	xchg   DWORD PTR ds:0x5eedff8b,eax
  42ab9b:	xor    bl,BYTE PTR [eax+0xa2ba426]
  42aba1:	jp     0x42ab74
  42aba3:	adc    eax,DWORD PTR [edi+eiz*8-0x41]
  42aba7:	loopne 0x42ab68
  42aba9:	and    eax,ebp
  42abab:	loope  0x42ab5e
  42abad:	jae    0x42ab56
  42abaf:	ins    DWORD PTR es:[edi],dx
  42abb0:	pop    es
  42abb1:	jp     0x42ab72
  42abb3:	imul   eax,esp,0x2f
  42abb6:	(bad)  
  42abb7:	mov    cl,0xf6
  42abb9:	mov    cl,0xec
  42abbb:	call   DWORD PTR [eax+0x14]
  42abbe:	sar    DWORD PTR [eax+ebp*8-0x2],cl
  42abc2:	mov    esp,DWORD PTR [ecx]
  42abc4:	int3   
  42abc5:	sbb    edx,edi
  42abc7:	sbb    eax,0xf2a84e6
  42abcc:	sbb    ebp,DWORD PTR [edi]
  42abce:	adc    eax,0x7b5aab22
  42abd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abd4:	sti    
  42abd5:	call   FWORD PTR [ecx+edx*8+0x7c]
  42abd9:	add    al,BYTE PTR [eax]
  42abdb:	add    BYTE PTR [edx-0x373e57f7],bl
  42abe1:	retf   
  42abe2:	rol    DWORD PTR [ecx],cl
  42abe4:	push   eax
  42abe5:	clc    
  42abe6:	rcl    DWORD PTR [edx+edi*8],1
  42abe9:	out    dx,al
  42abea:	adc    eax,0x9bedf244
  42abef:	jle    0x42abe2
  42abf1:	mov    DWORD PTR [eax+esi*8-0x2b],ecx
  42abf5:	or     ecx,ebp
  42abf7:	mov    dh,0x24
  42abf9:	xor    DWORD PTR [ebx+0x1e8327ef],0x7f
  42ac00:	pushf  
  42ac01:	loope  0x42abcf
  42ac03:	jmp    0x32f6:0xc15df7ba
  42ac0a:	mov    ds:0xbc8adffb,eax
  42ac0f:	jmp    0xbba:0xc0f2f7a2
  42ac16:	pop    esi
  42ac17:	shr    edx,0x80
  42ac1a:	mov    ds:0x6e07011b,eax
  42ac1f:	rcr    dh,0x80
  42ac22:	and    edi,DWORD PTR [eax+ecx*2]
  42ac25:	dec    ebp
  42ac26:	mov    eax,ds:0x5fc6107c
  42ac2b:	ror    dh,0x83
  42ac2e:	icebp  
  42ac2f:	xchg   al,bh
  42ac31:	stc    
  42ac32:	call   0xe9289cbd
  42ac37:	cli    
  42ac38:	test   cl,cl
  42ac3a:	pop    edi
  42ac3b:	ror    BYTE PTR [esi-0x75],0xa0
  42ac3f:	xchg   ecx,eax
  42ac40:	add    BYTE PTR [eax],al
  42ac42:	iret   
  42ac43:	mov    cs,WORD PTR [ebx-0x24]
  42ac46:	cmp    dh,bh
  42ac48:	loope  0x42ac9b
  42ac4a:	inc    ebp
  42ac4b:	stos   BYTE PTR es:[edi],al
  42ac4c:	cmp    ebp,eax
  42ac4e:	sub    bh,al
  42ac50:	int3   
  42ac51:	jo     0x42abf0
  42ac53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac54:	es add al,0xce
  42ac57:	mov    edi,0x2d82dff
  42ac5c:	mov    dl,0x1e
  42ac5e:	ror    eax,cl
  42ac60:	fcomip st,st(1)
  42ac62:	add    ecx,edx
  42ac64:	jg     0x42ac44
  42ac66:	rol    DWORD PTR [esi-0x77],cl
  42ac69:	lods   al,BYTE PTR ds:[esi]
  42ac6a:	add    al,BYTE PTR [eax*4+0x9d674]
  42ac71:	push   0xd
  42ac73:	repz shr DWORD PTR [edx+0x6d0b09d6],1
  42ac7a:	push   ebp
  42ac7b:	or     DWORD PTR [eax],eax
  42ac7d:	jmp    0xed856551
  42ac82:	inc    ebx
  42ac83:	inc    esp
  42ac84:	ins    BYTE PTR es:[edi],dx
  42ac85:	jo     0x42ac1c
  42ac87:	xchg   edx,eax
  42ac88:	xchg   BYTE PTR [edi+0x494481aa],ch
  42ac8e:	sub    ecx,DWORD PTR [eax+ebp*2-0x2e]
  42ac92:	fiadd  WORD PTR [eax+0x451b514c]
  42ac98:	or     dl,al
  42ac9a:	into   
  42ac9b:	add    BYTE PTR [ebp+eax*2+0x9],0x45
  42aca0:	lods   al,BYTE PTR ds:[esi]
  42aca1:	jb     0x42ac63
  42aca3:	cs enter 0xee,0x0
  42aca8:	and    al,0x4b
  42acaa:	add    eax,0x8901b9a8
  42acaf:	sbb    al,0x1
  42acb1:	add    esi,DWORD PTR [edx-0x3ef128ca]
  42acb7:	out    dx,al
  42acb8:	add    al,0x43
  42acba:	or     BYTE PTR [eax-0x6e],ah
  42acbd:	mov    dh,0xa
  42acbf:	ja     0x42acd5
  42acc1:	or     eax,ecx
  42acc3:	mov    DWORD PTR [ecx+0xf],eax
  42acc6:	shl    DWORD PTR [eax+0x7a],0xca
  42acca:	xchg   BYTE PTR [ecx+ebp*1],ch
  42accd:	xchg   ecx,eax
  42acce:	es stos DWORD PTR es:[edi],eax
  42acd0:	out    0xf1,al
  42acd2:	mov    BYTE PTR [eax],al
  42acd4:	icebp  
  42acd5:	pop    ecx
  42acd6:	add    DWORD PTR [esi+0xdb0],0x75
  42acdd:	mov    dh,0xb2
  42acdf:	mov    esi,DWORD PTR [edx+0x65]
  42ace2:	add    BYTE PTR [eax],al
  42ace4:	in     al,dx
  42ace5:	jle    0x42ad34
  42ace7:	cwde   
  42ace8:	mov    bl,0xb6
  42acea:	xchg   edx,eax
  42aceb:	add    esp,edi
  42aced:	or     DWORD PTR [eax],eax
  42acef:	mov    DWORD PTR [ecx],esi
  42acf1:	dec    esi
  42acf2:	not    DWORD PTR ds:0x3b3b98
  42acf8:	jno    0x42ad47
  42acfa:	pop    es
  42acfb:	(bad)
  42acff:	jmp    FWORD PTR [ebx-0x53d7118f]
  42ad05:	or     DWORD PTR [ebx-0x39],edi
  42ad08:	mov    dl,0x7c
  42ad0a:	dec    edi
  42ad0b:	add    eax,DWORD PTR [eax]
  42ad0d:	add    BYTE PTR [ebx+0x4989025b],bh
  42ad13:	sbb    DWORD PTR [ebx-0x7],edi
  42ad16:	push   edx
  42ad17:	bnd jle 0x42ad03
  42ad1a:	lods   eax,DWORD PTR ds:[esi]
  42ad1b:	or     DWORD PTR [eax],eax
  42ad1d:	add    DWORD PTR [ebp-0x237bfa56],0x8
  42ad24:	add    BYTE PTR [eax],al
  42ad26:	out    dx,eax
  42ad27:	jmp    DWORD PTR [ebx+0x74]
  42ad2a:	pop    ss
  42ad2b:	(bad)  
  42ad2c:	clc    
  42ad2d:	adc    BYTE PTR gs:[eax-0x7aeb0687],bh
  42ad34:	push   cs
  42ad35:	psrad  mm1,mm1
  42ad38:	dec    DWORD PTR [esi]
  42ad3a:	loop   0x42aced
  42ad3c:	cld    
  42ad3d:	rcr    BYTE PTR [ecx+esi*8],0x1
  42ad41:	sar    DWORD PTR [edi],0x1
  42ad44:	jmp    0x4bdacb
  42ad49:	mov    esi,ecx
  42ad4b:	jmp    0x917fd8a
  42ad50:	jmp    DWORD PTR [ebp-0x2b]
  42ad53:	or     DWORD PTR [ecx-0x4f47b1e9],0xfffffffa
  42ad5a:	mov    al,ds:0xe17507d2
  42ad5f:	jnp    0x42aceb
  42ad61:	pop    es
  42ad62:	std    
  42ad63:	push   edx
  42ad64:	or     ebx,edi
  42ad66:	add    ah,BYTE PTR [eax+0x7]
  42ad69:	add    edx,ecx
  42ad6b:	outs   dx,BYTE PTR ds:[esi]
  42ad6c:	popa   
  42ad6d:	sbb    al,0xd5
  42ad6f:	loop   0x42adea
  42ad71:	rol    BYTE PTR [eax],0x0
  42ad74:	popa   
  42ad75:	out    0xc1,eax
  42ad77:	sbb    ecx,esp
  42ad79:	dec    ebx
  42ad7a:	or     BYTE PTR [ebx],cl
  42ad7c:	push   eax
  42ad7d:	arpl   di,dx
  42ad7f:	call   edx
  42ad81:	fild   WORD PTR [ecx-0x25243ed]
  42ad87:	call   ebp
  42ad89:	sti    
  42ad8a:	push   eax
  42ad8b:	inc    ebx
  42ad8c:	shl    ebx,1
  42ad8e:	push   eax
  42ad8f:	push   ebx
  42ad90:	fsub   DWORD PTR [ecx]
  42ad92:	pop    ds
  42ad93:	or     dh,bl
  42ad95:	and    BYTE PTR [eax+eax*8],al
  42ad98:	fisub  WORD PTR [ebp+0x77c87cee]
  42ad9e:	mov    cl,0xb
  42ada0:	push   esi
  42ada1:	mov    esi,0x55da0084
  42ada6:	push   0x7de282fe
  42adab:	gs and edx,0xebf8f97d
  42adb2:	jg     0x42adb2
  42adb4:	aad    0xe2
  42adb6:	inc    BYTE PTR [esi+0x657f1b13]
  42adbc:	shl    edx,0x33
  42adbf:	clc    
  42adc0:	push   esi
  42adc1:	cmp    al,0xe4
  42adc3:	call   FWORD PTR [ebp+0x2d]
  42adc6:	adc    al,0x89
  42adc8:	nop
  42adc9:	or     DWORD PTR [ebp+0x5304d886],edx
  42adcf:	add    eax,0x537bbde
  42add4:	adc    al,0xe9
  42add6:	loopne 0x42add2
  42add8:	add    BYTE PTR [eax],al
  42adda:	pusha  
  42addb:	xor    BYTE PTR [esp+edx*1],ch
  42adde:	mov    eax,ds:0xb6b5e61a
  42ade3:	hlt    
  42ade4:	sub    esi,eax
  42ade6:	push   ebx
  42ade7:	dec    esi
  42ade8:	aad    0x7c
  42adea:	nop
  42adeb:	in     eax,0x1d
  42aded:	mov    esi,0x7b3b75da
  42adf2:	cwde   
  42adf3:	sbb    eax,0x4cabe0e
  42adf8:	pop    esp
  42adf9:	inc    edi
  42adfa:	aad    0x9
  42adfc:	jmp    0x70283e7b
  42ae01:	rol    edx,0x2f
  42ae04:	stos   DWORD PTR es:[edi],eax
  42ae05:	fild   DWORD PTR [esi+eax*2+0x5e]
  42ae09:	shl    DWORD PTR [edx+0x4ddfab1f],0x4d
  42ae10:	sbb    DWORD PTR [ebx+0x7ab90895],eax
  42ae16:	adc    dh,ah
  42ae18:	gs inc esp
  42ae1a:	mov    ds:0xe2f10243,eax
  42ae1f:	sbb    ebp,DWORD PTR [ecx+0x6c512c03]
  42ae25:	inc    esp
  42ae26:	add    BYTE PTR [esi],ah
  42ae28:	pop    esi
  42ae29:	mov    ecx,0x49b0372
  42ae2e:	into   
  42ae2f:	mov    ebx,0xea940537
  42ae34:	loopne 0x42ae30
  42ae36:	sub    BYTE PTR [edi],al
  42ae38:	test   eax,0x441a19ca
  42ae3d:	stc    
  42ae3e:	add    BYTE PTR [eax],al
  42ae40:	push   ebx
  42ae41:	pop    esp
  42ae42:	in     eax,dx
  42ae43:	adc    BYTE PTR [ecx],0x88
  42ae46:	(bad)  
  42ae47:	call   0xeb43348f
  42ae4c:	(bad)  
  42ae4d:	or     DWORD PTR [edi+0xc],edi
  42ae50:	in     eax,0x9
  42ae52:	aaa    
  42ae53:	das    
  42ae54:	adc    DWORD PTR [eax-0x4c],edi
  42ae57:	bound  edx,QWORD PTR ds:0x2524fadf
  42ae5d:	add    BYTE PTR [ecx+edi*2-0x61],0x4c
  42ae62:	adc    al,0xc2
  42ae64:	push   eax
  42ae65:	adc    edi,DWORD PTR [ebp+0x1e]
  42ae68:	mov    cs,WORD PTR [esp+ebp*8+0x6a]
  42ae6c:	xchg   esi,eax
  42ae6d:	xrelease xchg DWORD PTR [edx+eiz*8-0x28a6bb76],ebp
  42ae75:	inc    edi
  42ae76:	and    al,0x60
  42ae78:	adc    eax,0xd4297ee3
  42ae7d:	pop    ecx
  42ae7e:	sti    
  42ae7f:	mov    esp,0x114eec2
  42ae84:	ret    
  42ae85:	xor    al,BYTE PTR [eax]
  42ae87:	nop
  42ae88:	jns    0x42ae17
  42ae8a:	mov    edi,0x4c8ba4b4
  42ae8f:	sbb    ebx,eax
  42ae91:	mov    eax,0x4120ee00
  42ae96:	add    DWORD PTR [eax],ebp
  42ae98:	test   BYTE PTR [ecx],0x7
  42ae9b:	sub    bh,dl
  42ae9d:	leave  
  42ae9e:	lods   al,BYTE PTR ss:[esi]
  42aea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aea1:	jne    0x42aeb0
  42aea3:	jb     0x42aea5
  42aea5:	add    BYTE PTR [eax-0x2],cl
  42aea8:	jle    0x42ae5f
  42aeaa:	push   ecx
  42aeab:	or     DWORD PTR [ebx],ecx
  42aead:	pop    esp
  42aeae:	sti    
  42aeaf:	or     BYTE PTR [eax],al
  42aeb1:	jmp    0xea371b0b
  42aeb6:	(bad)  [esp+edx*1+0x62]
  42aeba:	sub    dl,BYTE PTR [esi]
  42aebc:	aaa    
  42aebd:	daa    
  42aebe:	jns    0x42af2e
  42aec0:	scas   al,BYTE PTR es:[edi]
  42aec1:	add    BYTE PTR [ebx+0x44],ah
  42aec4:	aas    
  42aec5:	add    DWORD PTR [ebx+0x44],eax
  42aec8:	inc    edi
  42aec9:	add    bh,BYTE PTR [ebp+0x2d]
  42aecc:	or     BYTE PTR [ebx],cl
  42aece:	ins    DWORD PTR es:[edi],dx
  42aecf:	or     al,bh
  42aed1:	xor    ecx,0x19
  42aed4:	add    BYTE PTR [ebp+0x25],dh
  42aed7:	xchg   BYTE PTR [esi],dh
  42aed9:	push   esp
  42aeda:	xor    esi,DWORD PTR [ebx+0x52]
  42aedd:	add    ebp,DWORD PTR [esi+eax*1]
  42aee0:	jnp    0x42aea9
  42aee2:	das    
  42aee3:	mov    DWORD PTR [esp+edi*8-0x21],edi
  42aee7:	cld    
  42aee8:	adc    DWORD PTR [ebp+0x20],0x6
  42aeec:	add    BYTE PTR [ebx+0x503ae9b9],cl
  42aef2:	es or  bh,dh
  42aef5:	jne    0x42aee7
  42aef7:	jo     0x42aec8
  42aef9:	dec    DWORD PTR [ecx]
  42aefb:	ficom  WORD PTR [eax-0x1]
  42aefe:	or     esi,esi
  42af00:	or     ebx,0xff068293
  42af06:	mov    ebp,esi
  42af08:	loop   0x42aeff
  42af0a:	add    BYTE PTR [eax],al
  42af0c:	add    BYTE PTR [edi],al
  42af0e:	imul   ecx
  42af10:	add    al,0xd0
  42af12:	cli    
  42af13:	inc    DWORD PTR [edi+0x60]
  42af16:	xchg   esp,eax
  42af17:	add    BYTE PTR [ebp+ecx*1+0x71b3d285],bh
  42af1e:	and    esi,edi
  42af20:	rol    DWORD PTR [esi],cl
  42af22:	pop    es
  42af23:	mov    dh,0x6b
  42af25:	icebp  
  42af26:	add    eax,0xbff043b6
  42af2b:	loopne 0x42afa1
  42af2d:	repnz mov edi,0x3d053989
  42af33:	push   DWORD PTR [ebx+0xd]
  42af36:	add    BYTE PTR [edi],cl
  42af38:	clc    
  42af39:	(bad)  
  42af3b:	call   ebp
  42af3d:	loop   0x42af06
  42af3f:	cmp    eax,0xa7acfd9
  42af44:	aam    0xe2
  42af46:	(bad)  
  42af47:	jle    0x42af01
  42af49:	mov    dh,0xfe
  42af4b:	jle    0x42af15
  42af4d:	mov    dl,0x9b
  42af4f:	or     bl,BYTE PTR [eax+0x33]
  42af52:	add    eax,0xbd7c3afb
  42af57:	daa    
  42af58:	push   esi
  42af59:	push   es
  42af5a:	lock call DWORD PTR [edi+0x19]
  42af5e:	in     al,0xff
  42af60:	dec    ebp
  42af61:	sbb    BYTE PTR es:[edx-0x9],bh
  42af65:	test   DWORD PTR [eax+ecx*1-0x1e],0x1400af38
  42af6d:	xor    dh,0x6
  42af70:	add    BYTE PTR [eax],al
  42af72:	bsf    esi,DWORD PTR [ecx-0xe7e09]
  42af79:	inc    ecx
  42af7a:	mov    ecx,0x5e13ba4f
  42af7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af80:	jmp    0xb549:0xc82e9888
  42af87:	(bad)  
  42af88:	and    al,0x87
  42af8a:	sbb    bh,dl
  42af8c:	mov    DWORD PTR [ecx-0xb],0xc22e71e7
  42af93:	pop    ds
  42af94:	add    al,0x87
  42af96:	adc    BYTE PTR [edi],dl
  42af98:	jbe    0x42afdf
  42af9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af9b:	jmp    0x42af59
  42af9d:	daa    
  42af9e:	and    esp,DWORD PTR [eax-0x345aba89]
  42afa4:	mov    esp,0xe9d4c23
  42afa9:	jg     0x42af40
  42afab:	in     al,0xae
  42afad:	xchg   BYTE PTR [eax],dl
  42afaf:	pop    es
  42afb0:	add    al,0xd7
  42afb3:	xchg   edx,eax
  42afb4:	add    edx,DWORD PTR ds:0x43fb09bd
  42afba:	aad    0x52
  42afbc:	inc    eax
  42afbd:	mov    DWORD PTR [edx],ebp
  42afbf:	jbe    0x42afcb
  42afc1:	(bad)  
  42afc2:	adc    edx,edi
  42afc4:	fnstcw WORD PTR [ecx+0x457b00c5]
  42afca:	aam    0xca
  42afcc:	(bad)  
  42afcd:	or     al,0xd2
  42afcf:	retf   
  42afd0:	pop    ebp
  42afd1:	call   0x0:0x3e90966
  42afd8:	repnz dec ebx
  42afda:	in     eax,dx
  42afdb:	cli    
  42afdc:	or     dl,BYTE PTR [ecx+ebp*4]
  42afdf:	inc    esp
  42afe0:	pop    esp
  42afe1:	inc    esi
  42afe2:	popf   
  42afe3:	jns    0x42af86
  42afe5:	xor    al,0x1b
  42afe7:	sub    al,0xa6
  42afe9:	mov    dl,0x6d
  42afeb:	dec    ecx
  42afec:	add    eax,esi
  42afee:	and    ebx,DWORD PTR [eax]
  42aff0:	pop    esp
  42aff1:	inc    esi
  42aff2:	jns    0x42af83
  42aff4:	cdq    
  42aff5:	adc    eax,0xb549ae
  42affa:	je     0x42afcb
  42affc:	in     al,dx
  42affd:	out    dx,eax
  42affe:	pop    ecx
  42afff:	(bad)  
  42b000:	xchg   ecx,eax
  42b001:	frstor [ebp-0x3c]
  42b004:	loopne 0x42af86
  42b006:	mov    ds:0x394653ef,eax
  42b00b:	pop    es
  42b00c:	pop    ss
  42b00d:	es jo  0x42b059
  42b010:	lds    ecx,FWORD PTR [ebx-0x10daf9d8]
  42b016:	mov    bl,0xef
  42b018:	mov    edi,0x1519e115
  42b01d:	or     al,al
  42b01f:	pop    esp
  42b020:	push   eax
  42b021:	retf   0x88e1
  42b024:	inc    eax
  42b025:	lock or DWORD PTR [ebx],eax
  42b028:	push   edx
  42b029:	cmp    eax,0x494712f9
  42b02e:	call   0x43f745
  42b033:	sub    BYTE PTR [eax+0x7],bh
  42b036:	pop    es
  42b037:	sub    BYTE PTR [edx-0x7f],cl
  42b03a:	xchg   ebx,eax
  42b03b:	jmp    0xa18b040
  42b040:	daa    
  42b041:	sub    ch,bl
  42b043:	cli    
  42b044:	xlat   BYTE PTR ds:[ebx]
  42b045:	repnz xchg esi,eax
  42b047:	das    
  42b048:	mov    DWORD PTR [ebx*2-0x6239ec8a],esp
  42b04f:	adc    eax,0x36ed2487
  42b054:	inc    edx
  42b055:	or     DWORD PTR [ebp-0x61],edx
  42b058:	call   0xfb358796
  42b05d:	scas   al,BYTE PTR es:[edi]
  42b05e:	popf   
  42b05f:	cmc    
  42b060:	add    cl,ch
  42b062:	(bad)  
  42b063:	or     DWORD PTR [esi-0x16],esp
  42b066:	jle    0x42b048
  42b068:	imul   ecx,DWORD PTR [edi+0x3f0af2d7],0x370b089f
  42b072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b073:	out    dx,eax
  42b074:	mov    edi,0xc106ce89
  42b079:	pop    esp
  42b07a:	loop   0x42b085
  42b07c:	mov    DWORD PTR [esi+eiz*8-0x299a7e7f],edi
  42b083:	or     DWORD PTR [eax],eax
  42b085:	adc    bh,BYTE PTR [edi+0x15]
  42b088:	jl     0x42b067
  42b08a:	cmovns edi,DWORD PTR [eax]
  42b08d:	call   0x5042ba68
  42b092:	xchg   DWORD PTR [ecx],ecx
  42b094:	add    cl,ch
  42b096:	push   ebx
  42b097:	inc    eax
  42b098:	or     al,0x28
  42b09a:	mov    al,0xec
  42b09c:	xchg   DWORD PTR [edx+ecx*8+0xf95186],edi
  42b0a3:	add    bl,bh
  42b0a5:	fld    DWORD PTR [esi+0x448749fd]
  42b0ab:	cmc    
  42b0ac:	dec    ecx
  42b0ad:	sbb    cl,BYTE PTR [eax]
  42b0af:	add    BYTE PTR [edi],al
  42b0b1:	push   ecx
  42b0b2:	or     al,0x8b
  42b0b4:	(bad)  
  42b0b5:	pop    ds
  42b0b6:	inc    esi
  42b0b7:	push   0x4103ef5
  42b0bc:	test   DWORD PTR [ecx-0x10],0x715c139
  42b0c3:	(bad)  
  42b0c4:	cld    
  42b0c5:	or     al,BYTE PTR [eax]
  42b0c7:	add    bh,ch
  42b0c9:	(bad)  
  42b0cc:	mov    cl,0x15
  42b0ce:	jmp    0x4cee48
  42b0d3:	mov    ecx,edx
  42b0d5:	xchg   ecx,eax
  42b0d6:	cli    
  42b0d7:	jmp    FWORD PTR [esi*1+0x18853bc9]
  42b0de:	test   bh,ah
  42b0e0:	fld    DWORD PTR ds:0x1fb3900
  42b0e6:	pop    es
  42b0e7:	test   DWORD PTR [edx+0xe],ebp
  42b0ea:	add    BYTE PTR [eax],al
  42b0ec:	mov    bh,0x18
  42b0ee:	mov    DWORD PTR [esi+0x5b0],ecx
  42b0f4:	xchg   DWORD PTR [eax+0x10],eax
  42b0f7:	ror    DWORD PTR [edi+eax*1+0x50],0xff
  42b0fc:	add    edi,esi
  42b0fe:	div    BYTE PTR [esi-0x18]
  42b101:	or     BYTE PTR ds:0x49e228,dl
  42b107:	mov    eax,DWORD PTR [eax]
  42b109:	add    BYTE PTR [ebx],dh
  42b10b:	push   ss
  42b10c:	cmp    DWORD PTR [edi-0xc],0xffffff82
  42b110:	inc    ebx
  42b111:	adc    BYTE PTR [edi+0x45],al
  42b114:	call   0x895ca19c
  42b119:	inc    ebp
  42b11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b11b:	loopne 0x42b14c
  42b11d:	sti    
  42b11e:	jmp    0x42b12a
  42b120:	pop    es
  42b121:	mov    dh,0x83
  42b123:	or     BYTE PTR [ecx-0x42792bbb],cl
  42b129:	add    dl,ch
  42b12b:	or     DWORD PTR [edx],esp
  42b12d:	neg    DWORD PTR [edx-0x46bb7304]
  42b133:	mov    ds:0x98d5664e,al
  42b138:	(bad)  
  42b139:	cli    
  42b13a:	or     bl,bl
  42b13c:	mov    DWORD PTR [edx-0x2a],edx
  42b13f:	xchg   esp,eax
  42b140:	push   DWORD PTR [ebp+eax*8+0x77]
  42b144:	int3   
  42b145:	cli    
  42b146:	loopne 0x42b126
  42b148:	push   DWORD PTR [ebp+ecx*8-0x36]
  42b14c:	ret    
  42b14d:	cmc    
  42b14e:	pop    edx
  42b14f:	mov    esp,0x2ed4f783
  42b154:	xor    BYTE PTR ds:0xfaffaeec,bh
  42b15a:	leave  
  42b15b:	std    
  42b15c:	cmp    BYTE PTR [edi+0x1a39e7c1],0x31
  42b163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b164:	dec    DWORD PTR [edx]
  42b166:	push   eax
  42b167:	push   ebx
  42b168:	and    eax,DWORD PTR [eax]
  42b16a:	aad    0xe3
  42b16c:	mov    eax,0xd4000042
  42b171:	retf   
  42b172:	mov    eax,0xdea1d74a
  42b177:	pop    es
  42b178:	fisub  WORD PTR [ecx-0x4baa07fd]
  42b17e:	push   edx
  42b17f:	je     0x42b1c5
  42b181:	mov    BYTE PTR [eax],cl
  42b183:	xchg   DWORD PTR [ebx-0x22bb7a2e],ebx
  42b189:	bound  eax,QWORD PTR [eax+0x55]
  42b18c:	rcr    BYTE PTR [esi-0xe],cl
  42b18f:	sbb    edx,ebp
  42b191:	loop   0x42b18b
  42b193:	inc    esp
  42b194:	cmc    
  42b195:	loope  0x42b1a6
  42b197:	test   DWORD PTR [eax-0x32],ecx
  42b19a:	(bad)  
  42b19b:	call   edx
  42b19d:	ins    BYTE PTR es:[edi],dx
  42b19e:	dec    eax
  42b19f:	add    edx,ecx
  42b1a1:	je     0x42b1f3
  42b1a3:	(bad)  
  42b1a4:	xchg   ebp,eax
  42b1a5:	or     DWORD PTR [ecx],ecx
  42b1a7:	or     edx,edx
  42b1a9:	retf   0xfbe5
  42b1ac:	and    ch,BYTE PTR ds:0x80a977bd
  42b1b2:	bound  eax,QWORD PTR [ebx-0x7b17136e]
  42b1b8:	xchg   edi,eax
  42b1b9:	or     BYTE PTR [eax+0x46],dh
  42b1bc:	in     eax,0xe2
  42b1be:	push   ebp
  42b1bf:	std    
  42b1c0:	jg     0x42b1ae
  42b1c2:	pop    ebp
  42b1c3:	inc    esi
  42b1c4:	mov    ecx,0xd56a3949
  42b1c9:	pop    edi
  42b1ca:	jmp    0x64549bcd
  42b1cf:	push   edi
  42b1d0:	pop    edx
  42b1d1:	push   esi
  42b1d2:	retf   0x79
  42b1d5:	add    ch,ah
  42b1d7:	sub    BYTE PTR [ebp-0x46023e01],0x79
  42b1de:	int    0xe1
  42b1e0:	cld    
  42b1e1:	stc    
  42b1e2:	aas    
  42b1e3:	in     al,dx
  42b1e4:	gs cld 
  42b1e6:	aad    0xfc
  42b1e8:	ins    BYTE PTR es:[edi],dx
  42b1e9:	mov    eax,ds:0x40e909ce
  42b1ee:	mov    esp,0xcfff91ed
  42b1f3:	test   DWORD PTR [esi+0x20],esi
  42b1f6:	aad    0x9
  42b1f8:	les    ebx,FWORD PTR [edi]
  42b1fa:	or     esp,ebp
  42b1fc:	jns    0x42b276
  42b1fe:	mov    dl,0x2e
  42b200:	into   
  42b201:	(bad)  
  42b202:	(bad)  
  42b203:	jmp    0x42b1f9
  42b205:	das    
  42b206:	mov    al,0xf
  42b208:	gs (bad) 
  42b20a:	out    dx,eax
  42b20b:	je     0x42b211
  42b20d:	mov    DWORD PTR [edx],esp
  42b20f:	jne    0x42b1ef
  42b211:	inc    eax
  42b212:	mov    edi,0xdfff49ed
  42b217:	test   ah,ch
  42b219:	daa    
  42b21a:	aad    0x9
  42b21c:	jmp    0x80e6:0x917b5
  42b223:	inc    eax
  42b224:	(bad)  
  42b225:	daa    
  42b226:	mov    ecx,0xd6280703
  42b22b:	icebp  
  42b22c:	jg     0x42b20c
  42b22e:	or     dh,BYTE PTR [esi-0x6c]
  42b231:	add    bh,BYTE PTR [ebp-0x26594e02]
  42b237:	(bad)  
  42b238:	mov    cl,0xb6
  42b23a:	add    BYTE PTR [eax],al
  42b23c:	aam    0xc8
  42b23e:	fcomip st,st(1)
  42b240:	iret   
  42b241:	enter  0xf0fe,0x56
  42b245:	xor    BYTE PTR [ebp+esi*2-0x7e],dl
  42b249:	stc    
  42b24a:	inc    esp
  42b24b:	or     eax,edx
  42b24d:	inc    BYTE PTR [ebp+ebp*4+0x6a0009c2]
  42b254:	xchg   ebx,eax
  42b255:	in     al,dx
  42b256:	out    0xce,eax
  42b258:	push   ecx
  42b259:	lock cli 
  42b25b:	test   BYTE PTR [eax-0x7711feb8],0x40
  42b262:	(bad)  
  42b263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b264:	add    eax,DWORD PTR ss:[edi]
  42b267:	test   al,0xff
  42b269:	shl    DWORD PTR [esi],1
  42b26b:	inc    edi
  42b26c:	mov    ecx,0xf5037dfe
  42b271:	or     DWORD PTR [eax],eax
  42b273:	sar    BYTE PTR [eax+0x71],cl
  42b276:	outs   dx,DWORD PTR ds:[esi]
  42b277:	mov    dl,0x61
  42b279:	push   ecx
  42b27a:	js     0x42b20e
  42b27c:	and    BYTE PTR [ebp+edi*1+0x7d],ch
  42b280:	sub    BYTE PTR [eax+eax*1],ch
  42b283:	jmp    0xe9d83853
  42b288:	(bad)  
  42b289:	or     DWORD PTR [ebx],ecx
  42b28b:	lahf   
  42b28c:	xchg   ebx,eax
  42b28d:	or     BYTE PTR [edi-0x7b7f8d51],al
  42b293:	(bad)
  42b296:	cli    
  42b297:	bound  ebx,QWORD PTR [eax]
  42b299:	dec    BYTE PTR [eax-0x888c700]
  42b29f:	inc    DWORD PTR [eax]
  42b2a1:	add    BYTE PTR [ebx],al
  42b2a3:	add    BYTE PTR [eax+0x68],0xd7
  42b2a7:	mov    ebp,0xeb648d87
  42b2ac:	cmc    
  42b2ad:	jmp    DWORD PTR [edi]
  42b2af:	pop    edx
  42b2b0:	or     BYTE PTR [ebx],ch
  42b2b2:	in     al,0x7d
  42b2b4:	xor    DWORD PTR [ebx+eax*8-0x15],0xfffffff5
  42b2b9:	mov    DWORD PTR [ecx],esi
  42b2bb:	imul   esi,edi,0xffffffff
  42b2be:	sar    DWORD PTR [edi-0x3f],cl
  42b2c1:	sub    eax,esp
  42b2c3:	sti    
  42b2c4:	lods   eax,DWORD PTR ds:[esi]
  42b2c5:	inc    edi
  42b2c6:	outs   dx,BYTE PTR ds:[esi]
  42b2c7:	(bad)
  42b2ca:	cmc    
  42b2cb:	pop    ecx
  42b2cc:	or     BYTE PTR [edi],0x4a
  42b2cf:	cmp    al,0xfb
  42b2d1:	or     ch,BYTE PTR ds:0x694fadfc
  42b2d7:	jg     0x42b31c
  42b2d9:	nop
  42b2da:	xor    esi,DWORD PTR [ebp+edi*1+0x2e57d04]
  42b2e1:	or     ebp,DWORD PTR [ebp+0x7e]
  42b2e4:	inc    ebx
  42b2e5:	xchg   esp,eax
  42b2e6:	mov    bh,0x42
  42b2e8:	adc    BYTE PTR [ecx-0x7303829],bl
  42b2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2ef:	inc    edx
  42b2f0:	test   BYTE PTR [ebx-0x57e46],cl
  42b2f6:	sub    al,0x7f
  42b2f8:	inc    ebx
  42b2f9:	mov    BYTE PTR [edi-0x7d],dh
  42b2fc:	xchg   edx,eax
  42b2fd:	add    ah,bh
  42b2ff:	add    eax,0xece48d8d
  42b304:	cmc    
  42b305:	inc    DWORD PTR [eax]
  42b307:	add    BYTE PTR [ebx],ch
  42b309:	and    BYTE PTR [edx-0x1],0x83
  42b30d:	in     al,dx
  42b30e:	(bad)  
  42b30f:	(bad)  
  42b310:	cld    
  42b311:	add    eax,0xec704589
  42b316:	adc    edi,esp
  42b318:	aad    0x2a
  42b31a:	inc    ecx
  42b31b:	add    BYTE PTR [eax+0x33],bl
  42b31e:	or     eax,0xfef7738b
  42b323:	call   edx
  42b325:	pop    edx
  42b326:	std    
  42b327:	sbb    eax,0xc27ff2d5
  42b32c:	fisttp DWORD PTR [ecx+0x2a]
  42b32f:	stc    
  42b330:	stos   BYTE PTR es:[edi],al
  42b331:	xor    BYTE PTR [edi+0x5b59c97c],al
  42b337:	lock dec esi
  42b339:	mov    dh,0x22
  42b33b:	inc    eax
  42b33c:	and    eax,0xfafe8d
  42b341:	out    dx,eax
  42b342:	mov    DWORD PTR [edx-0x2a],edx
  42b345:	out    0x71,eax
  42b347:	sbb    BYTE PTR [esi+0x2c],cl
  42b34a:	push   edx
  42b34b:	sti    
  42b34c:	call   0xd9b7af13
  42b351:	out    dx,eax
  42b352:	jno    0x42b35c
  42b354:	ins    DWORD PTR es:[edi],dx
  42b355:	fwait
  42b356:	idiv   dl
  42b358:	pop    edx
  42b359:	je     0x42b352
  42b35b:	add    cl,cl
  42b35d:	or     eax,0xdbc1bf83
  42b362:	cmp    DWORD PTR [edx],ebx
  42b364:	inc    ecx
  42b365:	test   al,0xfb
  42b367:	or     dl,BYTE PTR [eax+0x5f]
  42b36a:	and    DWORD PTR [eax],eax
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	aad    0xc7
  42b370:	mov    ah,0x42
  42b372:	aam    0xdf
  42b374:	mov    ah,0x4a
  42b376:	xlat   BYTE PTR ds:[ebx]
  42b377:	mov    cl,0xde
  42b379:	pop    es
  42b37a:	into   
  42b37b:	mov    cl,0xff
  42b37d:	not    DWORD PTR [ebp-0x28]
  42b380:	push   edx
  42b381:	je     0x42b3c5
  42b383:	jl     0x42b389
  42b385:	xchg   DWORD PTR [ebx-0x32bb7a1e],ebx
  42b38b:	ins    BYTE PTR es:[edi],dx
  42b38c:	add    al,0x3c
  42b38e:	nop
  42b38f:	fiadd  WORD PTR [esi]
  42b391:	cmp    al,0x81
  42b393:	or     edx,esi
  42b395:	xchg   cl,bl
  42b397:	add    al,0xe9
  42b399:	add    ecx,esi
  42b39b:	lahf   
  42b39c:	test   eax,0x999fde02
  42b3a1:	add    DWORD PTR [ecx+ebp*8+0xc9408f0],edx
  42b3a8:	inc    ecx
  42b3a9:	cmp    edi,0x3d
  42b3ac:	mov    ebp,0x942932ef
  42b3b1:	mov    BYTE PTR [ecx+ecx*4-0x18],dl
  42b3b5:	add    edx,ebp
  42b3b7:	xchg   esp,eax
  42b3b8:	mov    edx,0xf94e4c77
  42b3bd:	or     al,0x59
  42b3bf:	or     BYTE PTR [edx],0xfc
  42b3c2:	(bad)  
  42b3c3:	and    al,0xa4
  42b3c5:	repz iret 
  42b3c7:	lea    ebx,[eax-0x3]
  42b3ca:	jg     0x42b3b4
  42b3cc:	arpl   WORD PTR [edx+esi*2+0x68],ax
  42b3d0:	mov    cl,0x1a
  42b3d2:	add    BYTE PTR [eax],al
  42b3d4:	pop    esp
  42b3d5:	dec    esi
  42b3d6:	or     DWORD PTR [ecx-0x32],esi
  42b3d9:	xchg   esp,eax
  42b3da:	sub    ebx,DWORD PTR [esi+ecx*8]
  42b3dd:	lahf   
  42b3de:	sub    DWORD PTR [eax],eax
  42b3e0:	shr    dl,cl
  42b3e2:	ror    BYTE PTR [edi],1
  42b3e4:	adc    al,0x92
  42b3e6:	sub    ebx,DWORD PTR [edx+ebx*2]
  42b3e9:	dec    esi
  42b3ea:	add    eax,0x1a285544
  42b3ef:	(bad)  
  42b3f0:	sbb    edi,DWORD PTR [ecx]
  42b3f2:	fiadd  DWORD PTR [eax+0x3e900ce]
  42b3f8:	pop    edx
  42b3f9:	ds leave 
  42b3fb:	ins    DWORD PTR es:[edi],dx
  42b3fc:	aad    0xe8
  42b3fe:	sbb    ebx,DWORD PTR [eax]
  42b400:	push   cs
  42b401:	pop    esi
  42b402:	icebp  
  42b403:	push   ecx
  42b404:	push   cs
  42b405:	pop    esi
  42b406:	fsqrt  
  42b408:	mov    DWORD PTR ds:0xf1cd717a,edx
  42b40e:	(bad)  
  42b40f:	fsub   st(6),st
  42b411:	loop   0x42b40d
  42b413:	adc    DWORD PTR fs:[ebx],edx
  42b416:	test   ebp,edi
  42b418:	mov    eax,0x5c720009
  42b41d:	std    
  42b41e:	call   0x4c9bd0
  42b423:	fiadd  WORD PTR [esp+ecx*2+0x5484f601]
  42b42a:	(bad)  
  42b42b:	daa    
  42b42c:	mov    cl,0xf
  42b42e:	pop    es
  42b42f:	sub    dl,bl
  42b431:	loope  0x42b4b2
  42b433:	out    dx,al
  42b434:	sbb    bl,BYTE PTR [esi-0x14]
  42b437:	adc    BYTE PTR [eax],al
  42b439:	add    bl,dh
  42b43b:	loope  0x42b437
  42b43d:	push   ds
  42b43e:	dec    edx
  42b43f:	dec    esi
  42b440:	and    al,0xae
  42b442:	push   ss
  42b443:	cmp    ah,BYTE PTR [esi-0x17]
  42b446:	(bad)  
  42b447:	pop    esi
  42b448:	sbb    al,0x72
  42b44a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b44b:	in     al,0x74
  42b44d:	loope  0x42b49a
  42b44f:	rcl    BYTE PTR [ecx-0xa],1
  42b452:	in     eax,0xf9
  42b454:	cli    
  42b455:	je     0x42b429
  42b457:	loop   0x42b4cd
  42b459:	icebp  
  42b45a:	outs   dx,BYTE PTR ds:[esi]
  42b45b:	int    0xf2
  42b45d:	ficomp WORD PTR [edi-0x72]
  42b460:	mov    edi,0x20cd55e6
  42b465:	jmp    0x2ef4c740
  42b46a:	fcom   DWORD PTR [edx]
  42b46c:	mov    dl,0x2e
  42b46e:	ror    eax,cl
  42b470:	(bad)  
  42b472:	jecxz  0x42b43c
  42b474:	(bad)  
  42b475:	mov    al,0x56
  42b477:	and    al,0x54
  42b479:	sbb    eax,0x9ce0f22d
  42b47e:	pop    ds
  42b47f:	in     al,0x42
  42b481:	bound  edx,QWORD PTR [edi]
  42b483:	adc    al,0xb2
  42b485:	and    eax,edx
  42b487:	adc    dh,BYTE PTR [edx-0x3ef02400]
  42b48d:	loope  0x42b493
  42b48f:	sbb    dl,al
  42b491:	add    edi,DWORD PTR ds:0xe054328b
  42b497:	out    dx,al
  42b498:	or     DWORD PTR [ebp-0x30],0x6a514c
  42b49f:	add    ah,ch
  42b4a1:	jecxz  0x42b516
  42b4a3:	sbb    al,0x39
  42b4a5:	cmp    edi,ebx
  42b4a7:	(bad)  
  42b4a8:	mov    eax,ds:0x62cb8302
  42b4ad:	jecxz  0x42b522
  42b4af:	adc    bl,bh
  42b4b1:	pop    ecx
  42b4b2:	or     al,0xff
  42b4b4:	jno    0x42b4c8
  42b4b6:	call   0xf626982c
  42b4bb:	test   esp,ebp
  42b4bd:	adc    eax,DWORD PTR [ebp+0xa8d71]
  42b4c3:	jmp    0x3890e7
  42b4c8:	xor    edx,DWORD PTR [ebx]
  42b4ca:	scas   al,BYTE PTR es:[edi]
  42b4cb:	inc    edi
  42b4cc:	ins    DWORD PTR es:[edi],dx
  42b4cd:	adc    ebp,DWORD PTR [esi-0x253291b1]
  42b4d3:	or     BYTE PTR [edi-0x33],dh
  42b4d6:	stc    
  42b4d7:	idiv   esp
  42b4d9:	and    edx,DWORD PTR [esp+esi*2-0x78]
  42b4dd:	bnd jl 0x42b4dd
  42b4e0:	jnp    0x42b4c2
  42b4e2:	add    eax,0x70afbb6
  42b4e7:	mov    dh,0xf3
  42b4e9:	xadd   ecx,esp
  42b4ec:	inc    esp
  42b4ed:	adc    eax,0x34738bc8
  42b4f2:	rol    DWORD PTR [eax+0x45896b24],0x0
  42b4f9:	pop    esp
  42b4fa:	adc    BYTE PTR [ebx+0x518301e9],cl
  42b500:	xor    BYTE PTR [ebp+0x8907],dl
  42b506:	aad    0x25
  42b508:	hlt    
  42b509:	mov    BYTE PTR [eax+0x5603ebf4],bl
  42b50f:	adc    eax,0xd84cfff4
  42b514:	jle    0x42b50e
  42b516:	(bad)  
  42b517:	out    dx,eax
  42b518:	jp     0x42b4e1
  42b51a:	into   
  42b51b:	lock (bad) 
  42b51d:	jg     0x42b4fb
  42b51f:	enter  0x8407,0x1a
  42b523:	or     eax,DWORD PTR [eax+eax*1]
  42b526:	push   ebp
  42b527:	cmp    bl,BYTE PTR [edx+0xb]
  42b52a:	push   ecx
  42b52b:	jge    0x42b549
  42b52d:	add    ch,dl
  42b52f:	jb     0x42b528
  42b531:	push   esi
  42b532:	retf   0xa36e
  42b535:	push   ss
  42b536:	aad    0xf2
  42b538:	jle    0x42b532
  42b53a:	or     ah,al
  42b53c:	jp     0x42b4e1
  42b53e:	mov    esi,0x9c7ffef2
  42b543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b544:	push   0x9
  42b546:	push   ebp
  42b547:	cli    
  42b548:	popa   
  42b549:	or     edx,DWORD PTR [eax+0x58]
  42b54c:	add    al,0x0
  42b54e:	aad    0xdb
  42b550:	mov    al,0x47
  42b552:	(bad)  
  42b553:	repz mov al,0x3f
  42b556:	fnstenv [ecx]
  42b558:	fild   WORD PTR [edi]
  42b55a:	fisubr WORD PTR [edx]
  42b55c:	adc    DWORD PTR [ebx],0xffffffcc
  42b55f:	pop    ecx
  42b560:	inc    edx
  42b561:	hlt    
  42b562:	dec    esp
  42b563:	jne    0x42b5e0
  42b565:	call   DWORD PTR [edx-0xd]
  42b568:	cmp    edx,DWORD PTR [edx+0x0]
  42b56b:	add    cl,ah
  42b56d:	push   esi
  42b56e:	pop    es
  42b56f:	ret    
  42b570:	fwait
  42b571:	or     bh,bh
  42b573:	call   ebp
  42b575:	bnd jmp 0x42b5a1
  42b578:	pop    esi
  42b579:	xor    eax,0x681f8708
  42b57e:	push   ecx
  42b57f:	adc    dh,ch
  42b581:	or     DWORD PTR [eax+esi*8],edi
  42b584:	push   ebx
  42b585:	(bad)  
  42b586:	js     0x42b512
  42b588:	out    0x91,al
  42b58a:	pop    ebp
  42b58b:	push   ecx
  42b58c:	fst    DWORD PTR [eax+0x71972ca5]
  42b592:	jo     0x42b5d3
  42b594:	push   ebx
  42b595:	push   cs
  42b596:	outs   dx,BYTE PTR ds:[esi]
  42b597:	inc    esi
  42b598:	jmp    0xac4da233
  42b59d:	dec    esi
  42b59e:	fnstcw WORD PTR [eax-0x29]
  42b5a1:	mov    BYTE PTR [eax],ch
  42b5a3:	add    eax,0x8cf94f4c
  42b5a8:	fs jge 0x42b593
  42b5ab:	add    edx,ebp
  42b5ad:	mov    ?,WORD PTR [esi]
  42b5af:	outs   dx,DWORD PTR ds:[esi]
  42b5b0:	cld    
  42b5b1:	and    ch,BYTE PTR [edi+0x6e1e41ff]
  42b5b7:	std    
  42b5b8:	pop    ebx
  42b5b9:	adc    al,0x60
  42b5bb:	mov    DWORD PTR [esi+0x9],eax
  42b5be:	jmp    0xf98f0fc6
  42b5c3:	ret    0x77a
  42b5c6:	mov    ecx,0x121607f8
  42b5cb:	jno    0x42b5a6
  42b5cd:	in     al,0xf3
  42b5cf:	adc    eax,DWORD PTR [eax]
  42b5d1:	add    bh,ah
  42b5d3:	dec    ecx
  42b5d4:	jmp    0x6e40cd65
  42b5d9:	js     0x42b5b8
  42b5db:	xchg   edx,eax
  42b5dc:	stos   DWORD PTR es:[edi],eax
  42b5dd:	adc    edx,DWORD PTR [edx+0x4e]
  42b5e0:	add    DWORD PTR [esi+edx*4-0x42be8feb],eax
  42b5e7:	repnz popa 
  42b5e9:	out    dx,al
  42b5ea:	dec    edi
  42b5eb:	in     al,0x5d
  42b5ed:	inc    ecx
  42b5ee:	loope  0x42b579
  42b5f0:	or     DWORD PTR [ecx+0x5a],edx
  42b5f3:	push   esi
  42b5f4:	ror    DWORD PTR [ebp+0x7fea0189],1
  42b5fa:	mov    esp,0x22b5ffe5
  42b5ff:	sbb    ebx,DWORD PTR [ebp-0x47]
  42b602:	fimul  DWORD PTR [ebp-0x20dd5a9c]
  42b608:	jg     0x42b5eb
  42b60a:	jns    0x42b608
  42b60c:	mov    edi,0x7ee1f16a
  42b611:	test   eax,0x1e3a89d7
  42b616:	dec    eax
  42b617:	dec    ebp
  42b618:	and    dh,ch
  42b61a:	push   ebp
  42b61b:	sub    edx,DWORD PTR ds:0x448cd6e9
  42b621:	lds    edx,FWORD PTR [esi-0x1c1699c7]
  42b627:	pop    esp
  42b628:	sbb    al,0x6c
  42b62a:	and    ah,bl
  42b62c:	dec    edi
  42b62d:	mov    edi,0x62105ec3
  42b632:	mov    fs,eax
  42b634:	je     0x42b62b
  42b636:	add    BYTE PTR [eax],al
  42b638:	ret    
  42b639:	pop    esi
  42b63a:	or     BYTE PTR [ecx-0x3e],dl
  42b63d:	fdivp  st(2),st
  42b63f:	ss push esp
  42b641:	mov    ds:0xb2640a,eax
  42b646:	add    cl,ch
  42b648:	(bad)  [eax+eiz*1-0x12]
  42b64c:	push   ebp
  42b64d:	mov    DWORD PTR ds:0x7c8ad6e9,edx
  42b653:	cmc    
  42b654:	jno    0x42b65b
  42b656:	adc    eax,0x7a62d6e9
  42b65b:	mov    ebp,0xb2095dd6
  42b660:	add    BYTE PTR [edx+0xb],dh
  42b663:	sbb    BYTE PTR gs:[edx],al
  42b666:	add    cl,ch
  42b668:	push   0xc2eb184e
  42b66d:	imul   eax,DWORD PTR [edi-0x26e546d9],0x55
  42b674:	pushf  
  42b675:	sbb    bl,BYTE PTR [edx+0x0]
  42b678:	mov    al,ds:0x342b840a
  42b67d:	pop    es
  42b67e:	add    BYTE PTR [ebx-0x3f7afa06],cl
  42b684:	call   0x241be9b6
  42b689:	gs pop ss
  42b68b:	sbb    ah,bh
  42b68d:	push   es
  42b68e:	bound  eax,QWORD PTR [eax]
  42b690:	int    0x3d
  42b692:	lea    edx,[esi-0x10]
  42b695:	(bad)  
  42b696:	mov    ecx,0xf63f82e8
  42b69b:	inc    DWORD PTR [eax]
  42b69d:	add    BYTE PTR [ecx-0x3a],bh
  42b6a0:	add    eax,0xfffefa84
  42b6a5:	call   DWORD PTR [edi+0x32]
  42b6a8:	add    DWORD PTR [esi-0x30],0x6
  42b6ac:	enter  0x153b,0xc
  42b6b0:	jp     0x42b6a9
  42b6b2:	retf   
  42b6b3:	push   es
  42b6b4:	add    BYTE PTR [ebx-0x7537d009],cl
  42b6ba:	popf   
  42b6bb:	and    BYTE PTR [esi+0x2c],cl
  42b6be:	ret    
  42b6bf:	mov    edx,esp
  42b6c1:	pop    ss
  42b6c2:	mov    esp,0xadf87b06
  42b6c7:	jb     0x42b6d5
  42b6c9:	mov    ch,BYTE PTR [ebp+0xd]
  42b6cc:	xor    al,BYTE PTR [esi-0x5f]
  42b6cf:	or     eax,DWORD PTR [ebp+0x68bd7]
  42b6d5:	inc    edi
  42b6d6:	aad    0x7c
  42b6d8:	repz call ebx
  42b6db:	pop    ds
  42b6dc:	push   esi
  42b6dd:	push   0x8681ebc7
  42b6e2:	hlt    
  42b6e3:	push   es
  42b6e4:	add    BYTE PTR [eax],al
  42b6e6:	outs   dx,DWORD PTR ds:[esi]
  42b6e7:	and    al,0x68
  42b6e9:	cmp    edx,DWORD PTR [eax+esi*8+0x161189dc]
  42b6f0:	jecxz  0x42b6d5
  42b6f2:	aad    0xc2
  42b6f4:	cmp    bl,BYTE PTR [eax]
  42b6f6:	xlat   BYTE PTR ds:[ebx]
  42b6f7:	cmp    al,0x3b
  42b6f9:	xchg   DWORD PTR [ebx-0x5926c6c4],ecx
  42b6ff:	or     BYTE PTR [ecx-0x32ffffbf],cl
  42b705:	jne    0x42b6cb
  42b707:	jae    0x42b6db
  42b709:	inc    esi
  42b70a:	add    al,0x50
  42b70c:	dec    eax
  42b70d:	and    bl,BYTE PTR [eax]
  42b70f:	xchg   DWORD PTR [esi],edx
  42b711:	js     0x42b6a7
  42b713:	push   ebp
  42b714:	or     edi,DWORD PTR [ebx-0x18]
  42b717:	mov    BYTE PTR [esi+0x2a],cl
  42b71a:	sbb    BYTE PTR [edi],ah
  42b71c:	or     eax,0x5a0ad5c7
  42b721:	push   esi
  42b722:	or     eax,0x966d500
  42b727:	ss xchg ebx,eax
  42b729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b72a:	add    eax,DWORD PTR [ebp-0x11ca6]
  42b730:	push   esi
  42b731:	imul   edi,edi,0x73
  42b734:	jbe    0x42b7a3
  42b736:	inc    ecx
  42b737:	add    DWORD PTR [esi+0x15798156],ebp
  42b73d:	repz out 0x8d,eax
  42b740:	push   esi
  42b741:	mov    eax,ds:0x6dda003e
  42b746:	pop    ebx
  42b747:	adc    edx,ebp
  42b749:	bnd jg 0x42b7c5
  42b74c:	add    eax,0x5e6169f3
  42b751:	mov    cl,0x62
  42b753:	aaa    
  42b754:	lods   al,BYTE PTR ds:[esi]
  42b755:	jg     0x42b7d4
  42b757:	xchg   BYTE PTR [ebx],bl
  42b759:	fstp   TBYTE PTR [ecx-0x41]
  42b75c:	add    eax,ebp
  42b75e:	aaa    
  42b75f:	(bad)  
  42b761:	jae    0x42b7aa
  42b763:	adc    edx,ebp
  42b765:	repnz push 0x5000000
  42b76b:	ds dec edx
  42b76d:	sbb    al,0x4e
  42b76f:	or     ah,BYTE PTR [esi-0x24bbef15]
  42b775:	hlt    
  42b776:	push   ecx
  42b777:	retf   0x7fe1
  42b77a:	push   es
  42b77b:	stc    
  42b77c:	call   0x6e75e984
  42b781:	cmp    eax,0x38b134d1
  42b786:	or     al,0x11
  42b788:	push   0x1e
  42b78a:	(bad)  
  42b78b:	or     ecx,ebp
  42b78d:	mov    ebx,edx
  42b78f:	and    esi,DWORD PTR [ebx]
  42b791:	sub    dh,bl
  42b793:	xchg   dh,bh
  42b795:	or     al,0xd5
  42b797:	or     DWORD PTR [esi-0x5],esp
  42b79a:	aad    0x55
  42b79c:	fisttp QWORD PTR [ecx+0x3dbf0abb]
  42b7a2:	rcl    BYTE PTR [eax],0x64
  42b7a5:	or     al,dh
  42b7a7:	or     ecx,ebp
  42b7a9:	mov    BYTE PTR [ebp+ebp*2-0xd46c242],dl
  42b7b0:	sbb    eax,0x1de0cff5
  42b7b5:	push   esi
  42b7b6:	cmp    DWORD PTR [ecx],edx
  42b7b8:	addr16 out dx,al
  42b7ba:	in     al,0x9
  42b7bc:	jmp    0x422395ab
  42b7c1:	hlt    
  42b7c2:	pop    ebx
  42b7c3:	dec    edi
  42b7c4:	int    0x38
  42b7c6:	mov    WORD PTR [eax],ss
  42b7c8:	ins    DWORD PTR es:[edi],dx
  42b7c9:	add    eax,0x8829e09e
  42b7ce:	add    BYTE PTR [eax],al
  42b7d0:	adc    al,0x2
  42b7d2:	ins    BYTE PTR es:[edi],dx
  42b7d3:	ret    
  42b7d4:	push   es
  42b7d5:	daa    
  42b7d6:	(bad)  
  42b7d8:	sti    
  42b7d9:	cli    
  42b7da:	jle    0x42b7df
  42b7dc:	and    eax,0x5217b28f
  42b7e1:	int3   
  42b7e2:	adc    al,dl
  42b7e4:	or     eax,0x2a7df9e0
  42b7e9:	push   esi
  42b7ea:	add    ah,al
  42b7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7ed:	leave  
  42b7ee:	xchg   BYTE PTR [edx+edx*8-0x267a766e],bl
  42b7f5:	or     DWORD PTR [eax],eax
  42b7f7:	rcl    BYTE PTR [esi-0x3c16fffd],1
  42b7fd:	dec    edx
  42b7fe:	sbb    al,0x2
  42b800:	jns    0x42b819
  42b802:	fnstcw WORD PTR [esi]
  42b804:	xchg   BYTE PTR ds:[esi],al
  42b807:	add    edx,DWORD PTR [edi+0x5ac9752d]
  42b80d:	fadd   DWORD PTR [eax]
  42b80f:	xor    eax,0xe83e8619
  42b814:	ror    BYTE PTR [ebx+0x2d],0x14
  42b818:	and    al,BYTE PTR [edi+0x4be20541]
  42b81e:	sbb    al,0xd2
  42b820:	push   cs
  42b821:	push   ebp
  42b822:	leave  
  42b823:	nop
  42b824:	das    
  42b825:	loop   0x42b821
  42b827:	jle    0x42b7e3
  42b829:	inc    ebx
  42b82a:	push   0xc930dafc
  42b82f:	add    ch,0x18
  42b832:	pop    edx
  42b833:	loope  0x42b835
  42b835:	add    BYTE PTR [edi+0xc],cl
  42b838:	lea    ebp,[edx-0x2ebe6d39]
  42b83e:	xlat   BYTE PTR ds:[ebx]
  42b83f:	fwait
  42b840:	ds dec esi
  42b842:	cmp    dl,BYTE PTR [ecx+0x34]
  42b845:	imul   BYTE PTR [ebx+edx*1+0x8]
  42b849:	sub    BYTE PTR [eax-0x27b780f5],cl
  42b84f:	push   ss
  42b850:	pop    edx
  42b851:	mov    ebp,0xaf870420
  42b856:	add    al,BYTE PTR [ebp+0x16e395bf]
  42b85c:	pop    ebp
  42b85d:	loope  0x42b85b
  42b85f:	adc    ebp,DWORD PTR [edi]
  42b861:	cmp    edx,DWORD PTR [ebx]
  42b863:	xchg   ecx,eax
  42b864:	push   ecx
  42b865:	add    BYTE PTR [eax],bh
  42b867:	xor    BYTE PTR [edx-0x56904f1],bh
  42b86d:	jmp    FWORD PTR [eax+ebx*1-0x40]
  42b871:	jmp    0x42b8ef
  42b873:	or     al,0xae
  42b875:	add    eax,edi
  42b877:	inc    eax
  42b878:	xor    al,0xf
  42b87a:	bound  eax,QWORD PTR [edi]
  42b87c:	cli    
  42b87d:	rcl    BYTE PTR [edi+eax*1],0x7b
  42b881:	loopne 0x42b8b0
  42b883:	pop    ebp
  42b884:	push   cs
  42b885:	inc    edi
  42b886:	mov    esp,0x257503ec
  42b88b:	sbb    dl,cl
  42b88d:	cmp    ebp,DWORD PTR [ebp+0xc]
  42b890:	xchg   esp,eax
  42b891:	ret    0x1417
  42b894:	sub    edx,edx
  42b896:	test   ebp,0x9505
  42b89c:	ds pusha 
  42b89e:	mov    ebp,0x840c2c85
  42b8a3:	loopne 0x42b904
  42b8a5:	fdivr  st(5),st
  42b8a7:	jmp    0x38936d
  42b8ac:	addr16 push eax
  42b8ae:	sbb    BYTE PTR [ebx-0x3f7a9646],cl
  42b8b4:	loopne 0x42b8c5
  42b8b6:	xor    ebx,ecx
  42b8b8:	scas   eax,DWORD PTR es:[edi]
  42b8b9:	bound  eax,QWORD PTR cs:[eax]
  42b8bc:	mov    WORD PTR [ecx-0x37c8e3b0],cs
  42b8c2:	loop   0x42b8bd
  42b8c4:	test   al,bl
  42b8c6:	cmc    
  42b8c7:	test   esp,edi
  42b8c9:	or     eax,DWORD PTR [ebp-0xa2414de]
  42b8cf:	jmp    0x42b8a2
  42b8d1:	pop    esi
  42b8d2:	inc    ecx
  42b8d3:	sbb    al,0xd7
  42b8d5:	popf   
  42b8d6:	xor    ecx,ebx
  42b8d8:	jae    0x42b8e8
  42b8da:	or     BYTE PTR [ebx],0x76
  42b8dd:	dec    eax
  42b8de:	sub    al,0x75
  42b8e0:	aad    0xdd
  42b8e2:	xor    edi,0x282bfd4
  42b8e8:	jb     0x42b8f1
  42b8ea:	out    dx,al
  42b8eb:	test   DWORD PTR [esi],edx
  42b8ed:	repnz sub al,0x42
  42b8f0:	mov    al,0xe7
  42b8f2:	xor    dh,0x5b
  42b8f5:	out    dx,eax
  42b8f6:	lock xchg BYTE PTR [esi],dl
  42b8f9:	xor    ebp,DWORD PTR ds:0x84efb942
  42b8ff:	loopne 0x42b901
  42b901:	add    BYTE PTR [eax-0x49],al
  42b904:	lock xchg BYTE PTR [ebx-0x1d407cb4],dl
  42b90b:	ins    BYTE PTR es:[edi],dx
  42b90c:	call   0x2ce1e40a
  42b911:	pop    ebp
  42b912:	int    0xe7
  42b914:	mov    dh,dl
  42b916:	sbb    ebp,DWORD PTR [edi+0x311c2ef0]
  42b91c:	ja     0x42b967
  42b91e:	test   eax,0x530abdeb
  42b923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b924:	in     eax,dx
  42b925:	cli    
  42b926:	cli    
  42b927:	or     eax,edi
  42b929:	push   edi
  42b92a:	cld    
  42b92b:	scas   al,BYTE PTR es:[edi]
  42b92c:	in     eax,dx
  42b92d:	cli    
  42b92e:	jmp    0x81:0x666c50ca
  42b935:	mov    dl,0xd6
  42b937:	imul   edi,DWORD PTR [esi],0x34
  42b93a:	push   ss
  42b93b:	cmp    eax,0x39d10808
  42b940:	jecxz  0x42b93b
  42b942:	ret    0x2d34
  42b945:	pop    edx
  42b946:	sub    eax,eax
  42b948:	stos   BYTE PTR es:[edi],al
  42b949:	or     ch,BYTE PTR [ebx-0x10]
  42b94c:	jnp    0x42b997
  42b94e:	loope  0x42b8ff
  42b950:	clc    
  42b951:	add    ecx,ebp
  42b953:	out    dx,al
  42b954:	inc    DWORD PTR [ebx-0x50ed2c1]
  42b95a:	jl     0x42b966
  42b95c:	push   0xffffffef
  42b95e:	(bad)  
  42b95f:	fstp   st(5)
  42b961:	push   ecx
  42b962:	icebp  
  42b963:	pop    eax
  42b964:	dec    eax
  42b965:	add    DWORD PTR [eax],eax
  42b967:	add    BYTE PTR [edi+0x9],al
  42b96a:	pop    esi
  42b96b:	inc    edx
  42b96c:	test   eax,0xdd07fb48
  42b971:	or     dl,BYTE PTR [eax]
  42b973:	mov    bh,0x5c
  42b975:	(bad)  
  42b977:	sub    al,0xff
  42b979:	ins    DWORD PTR es:[edi],dx
  42b97a:	jbe    0x42b9fb
  42b97c:	fist   WORD PTR [ebx+0x159c7ce5]
  42b982:	es cli 
  42b984:	(bad)  
  42b985:	adc    eax,ebp
  42b987:	fmul   QWORD PTR [ecx+eiz*1]
  42b98a:	sub    esp,DWORD PTR [eax-0x22]
  42b98d:	mov    BYTE PTR [edx],bh
  42b98f:	icebp  
  42b990:	das    
  42b991:	fucomp st(1)
  42b993:	mov    ecx,0x38229023
  42b998:	fcmovbe st,st(3)
  42b99a:	in     al,0xfb
  42b99c:	loop   0x42b990
  42b99e:	outs   dx,BYTE PTR ds:[esi]
  42b99f:	icebp  
  42b9a0:	paddusw mm3,mm5
  42b9a3:	push   ecx
  42b9a4:	jno    0x42b9b2
  42b9a6:	dec    si
  42b9a8:	(bad)  
  42b9a9:	fmul   QWORD PTR [ecx+0x6e092700]
  42b9af:	inc    ecx
  42b9b0:	mov    eax,ds:0xcd077348
  42b9b5:	stc    
  42b9b6:	jge    0x42b948
  42b9b8:	push   ebx
  42b9b9:	dec    esp
  42b9ba:	std    
  42b9bb:	sub    al,0xac
  42b9bd:	or     al,0x66
  42b9bf:	inc    esi
  42b9c0:	into   
  42b9c1:	fcomp  QWORD PTR [ecx+0x0]
  42b9c4:	xchg   DWORD PTR [eax],ecx
  42b9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9c7:	test   dl,al
  42b9c9:	pminub mm0,QWORD PTR [edi-0x21330000]
  42b9d0:	inc    ecx
  42b9d1:	lock fild WORD PTR [ebx-0x23600df9]
  42b9d8:	jmp    FWORD PTR [ecx-0x52]
  42b9db:	adc    BYTE PTR [edx+0xb],dh
  42b9de:	pop    eax
  42b9df:	aam    0xc
  42b9e1:	popf   
  42b9e2:	jmp    0x42ba02
  42b9e4:	test   ecx,ebp
  42b9e6:	(bad)  
  42b9e7:	or     DWORD PTR [edi+edi*8-0x55],esi
  42b9eb:	sub    BYTE PTR [eax],ah
  42b9ed:	jmp    0xecc4cac8
  42b9f2:	fs (bad) 
  42b9f5:	mov    esp,0xe90029bf
  42b9fa:	aad    0x88
  42b9fc:	cmc    
  42b9fd:	in     al,dx
  42b9fe:	inc    edx
  42b9ff:	fild   QWORD PTR [esi]
  42ba01:	test   eax,0xee6047f8
  42ba06:	dec    ebp
  42ba07:	frndint 
  42ba09:	(bad)  
  42ba0a:	sub    dh,cl
  42ba0c:	fcmovne st,st(5)
  42ba0e:	inc    edx
  42ba0f:	fbstp  TBYTE PTR [esi]
  42ba11:	mov    al,ds:0xbdd45b2a
  42ba16:	xor    bl,bh
  42ba18:	jg     0x42ba0c
  42ba1a:	sbb    al,0xf
  42ba1c:	test   DWORD PTR [edx+0x2afadf05],esp
  42ba22:	sub    ch,al
  42ba24:	sti    
  42ba25:	sahf   
  42ba26:	repnz adc bl,BYTE PTR [edx+0x5]
  42ba2a:	cli    
  42ba2b:	pop    edx
  42ba2c:	xlat   BYTE PTR ds:[ebx]
  42ba2d:	pop    DWORD PTR [edx]
  42ba2f:	fisttp WORD PTR [edx]
  42ba31:	aas    
  42ba32:	add    BYTE PTR [eax],al
  42ba34:	(bad)  
  42ba35:	mov    ds:0x9d6e109,al
  42ba3a:	aas    
  42ba3b:	mov    dl,0x11
  42ba3d:	push   edi
  42ba3e:	sub    eax,0xfc985ade
  42ba43:	mov    dx,0xf85c
  42ba47:	lock ret 
  42ba49:	xchg   DWORD PTR [ecx+0x7ee0aa54],ebp
  42ba4f:	push   ecx
  42ba50:	stc    
  42ba51:	push   cs
  42ba52:	test   BYTE PTR [eax],al
  42ba54:	pop    ecx
  42ba55:	fprem1 
  42ba57:	jmp    DWORD PTR [ecx-0x53000559]
  42ba5d:	fdivr  QWORD PTR [esi-0x66]
  42ba60:	shr    edx,0xf5
  42ba63:	cmp    eax,0xfffff3fc
  42ba68:	in     eax,0xd5
  42ba6a:	clc    
  42ba6b:	jmp    ebx
  42ba6d:	sbb    BYTE PTR [eax],al
  42ba6f:	and    BYTE PTR [edi+eax*1+0x7],bh
  42ba73:	sub    bl,0xea
  42ba76:	cmc    
  42ba77:	jmp    DWORD PTR [ecx]
  42ba79:	loope  0x42ba95
  42ba7b:	add    BYTE PTR [esp+ebx*8-0x80],ch
  42ba7f:	jp     0x42bac2
  42ba81:	in     al,dx
  42ba82:	cmc    
  42ba83:	cmp    eax,0x25e3
  42ba88:	xor    eax,DWORD PTR [ebx-0x13dc029b]
  42ba8e:	cmp    ebx,DWORD PTR [edi-0x24]
  42ba91:	add    eax,0x62b80f00
  42ba96:	std    
  42ba97:	inc    DWORD PTR [eax]
  42ba99:	add    BYTE PTR [ebx+0x1a],ah
  42ba9c:	add    BYTE PTR [eax],dh
  42ba9e:	sub    al,0x7
  42baa0:	jmp    0xf62efd5f
  42baa5:	cmp    edx,DWORD PTR [edx-0x317cf897]
  42baab:	jmp    0x42baa2
  42baad:	push   ebx
  42baaf:	xchg   esp,eax
  42bab0:	stc    
  42bab1:	mov    eax,0xf12
  42bab6:	mov    edi,0x1177c12e
  42babb:	fdivr  QWORD PTR [esi+0x30]
  42babe:	pusha  
  42babf:	jmp    0x42bab6
  42bac1:	add    DWORD PTR [esi+ebx*8+0x5],0xffffff84
  42bac6:	fcmovnu st,st(1)
  42bac8:	cmc    
  42bac9:	jmp    FWORD PTR [edi]
  42bacb:	out    dx,eax
  42bacc:	sbb    cl,BYTE PTR [edi]
  42bace:	aad    0x6c
  42bad0:	or     eax,0x304bb2fc
  42bad5:	mov    al,ds:0xafef0d5
  42bada:	pop    ecx
  42badb:	mov    edi,0xd59afaea
  42bae0:	jle    0x42baf3
  42bae2:	aad    0xf0
  42bae4:	fisttp DWORD PTR [ebx-0x78]
  42bae7:	and    ebp,edx
  42bae9:	cmp    al,0xd5
  42baeb:	sar    dh,1
  42baed:	dec    edx
  42baef:	outs   dx,BYTE PTR ds:[esi]
  42baf0:	sti    
  42baf1:	cld    
  42baf2:	jb     0x42baff
  42baf4:	xor    BYTE PTR [esi],al
  42baf6:	mov    ch,0xf0
  42baf8:	dec    BYTE PTR [edx]
  42bafa:	pop    ebx
  42bafb:	fucomip st,st(0)
  42bafd:	cli    
  42bafe:	add    BYTE PTR [eax],al
  42bb00:	pop    edx
  42bb01:	xchg   ebp,eax
  42bb02:	sbb    DWORD PTR [eax],esp
  42bb04:	aad    0xf0
  42bb06:	stc    
  42bb07:	cmp    DWORD PTR ds:0xfaece7,0x1c
  42bb0e:	and    al,0x0
  42bb10:	aad    0xe3
  42bb12:	sbb    ah,0x2e
  42bb15:	retf   
  42bb16:	in     al,dx
  42bb17:	cmp    al,0xd5
  42bb19:	loopne 0x42bb19
  42bb1b:	jmp    FWORD PTR [edx+esi*4]
  42bb1e:	jmp    0x4d19d61d
  42bb23:	ins    BYTE PTR es:[edi],dx
  42bb24:	loop   0x42bb95
  42bb26:	xlat   BYTE PTR ds:[ebx]
  42bb27:	cld    
  42bb28:	or     ah,BYTE PTR [ebx+0x2fd6b1fc]
  42bb2e:	xor    edi,0xbc80e3cf
  42bb34:	out    dx,al
  42bb35:	mov    ch,ah
  42bb37:	jle    0x42bb26
  42bb39:	aam    0xfb
  42bb3b:	adc    DWORD PTR [edi],0x98faed5c
  42bb41:	ins    DWORD PTR es:[edi],dx
  42bb42:	add    al,0x0
  42bb44:	aad    0xb7
  42bb46:	xor    BYTE PTR [edx-0x129df537],0x1
  42bb4d:	xor    DWORD PTR [ecx],ecx
  42bb4f:	add    al,0xd5
  42bb51:	or     BYTE PTR [ebx-0x72],ch
  42bb54:	stos   DWORD PTR es:[edi],eax
  42bb55:	(bad)  [ecx+0x2f]
  42bb58:	cld    
  42bb59:	sub    ecx,ebp
  42bb5b:	add    ecx,esi
  42bb5d:	pop    DWORD PTR [edi+0x3fd99ff0]
  42bb63:	jle    0x42bb65
  42bb65:	add    BYTE PTR [ebx+0x2f2929d9],cl
  42bb6b:	data16 repnz xor BYTE PTR [esi],0xd7
  42bb70:	sbb    ebp,ebp
  42bb72:	iret   
  42bb73:	lahf   
  42bb74:	in     eax,0x40
  42bb76:	repnz rcr esi,1
  42bb79:	cld    
  42bb7a:	call   0x602fc00e
  42bb7f:	lea    eax,[eax]
  42bb81:	dec    edi
  42bb83:	pop    DWORD PTR [ecx-0x5426b018]
  42bb89:	xchg   BYTE PTR [edx-0x27],cl
  42bb8c:	call   0xdeb1128d
  42bb91:	in     al,dx
  42bb92:	aas    
  42bb93:	pop    ss
  42bb94:	or     ah,BYTE PTR [edx*8-0x487a25f7]
  42bb9b:	aad    0xc1
  42bb9d:	in     al,dx
  42bb9e:	loope  0x42bbc2
  42bba0:	or     DWORD PTR [edx*8+0x114f6a08],eax
  42bba7:	fldcw  WORD PTR [ecx-0x5e2b6226]
  42bbad:	in     al,dx
  42bbae:	iret   
  42bbaf:	lahf   
  42bbb0:	and    DWORD PTR [ebx],eax
  42bbb2:	into   
  42bbb3:	lahf   
  42bbb4:	and    DWORD PTR [edx],eax
  42bbb6:	adc    al,0xea
  42bbb8:	loopne 0x42bbb2
  42bbba:	adc    eax,0x1780a90d
  42bbbf:	or     eax,0x14e54670
  42bbc4:	add    BYTE PTR [ecx+ebp*8],ch
  42bbc7:	push   esi
  42bbc8:	punpckldq mm0,DWORD PTR [eax]
  42bbcb:	add    BYTE PTR [eax],cl
  42bbcd:	push   es
  42bbce:	(bad)  
  42bbcf:	in     eax,dx
  42bbd0:	push   edi
  42bbd1:	pop    DWORD PTR [edi]
  42bbd3:	fs jg  0x42bc36
  42bbd6:	add    esp,DWORD PTR [edx+0x6]
  42bbd9:	push   cs
  42bbda:	daa    
  42bbdb:	cmp    BYTE PTR [ebp-0x10e4d0fb],cl
  42bbe1:	cmp    ecx,DWORD PTR [eax-0x4c]
  42bbe4:	rcl    BYTE PTR [eax-0x37123aaf],1
  42bbea:	cmp    eax,0x5482d163
  42bbef:	sbb    eax,0x6b0b4bb2
  42bbf4:	mov    eax,ds
  42bbf6:	cli    
  42bbf7:	jmp    0xa5b50cbe
  42bbfc:	mov    edx,0x206e0b46
  42bc01:	fdivr  st,st(2)
  42bc03:	jmp    0xed955661
  42bc08:	add    eax,0x499c3bc3
  42bc0d:	call   0x70c0:0x7c3feb42
  42bc14:	cld    
  42bc15:	in     eax,0xa
  42bc17:	lahf   
  42bc18:	out    dx,al
  42bc19:	or     al,cl
  42bc1b:	enter  0xf29,0xc8
  42bc1f:	mul    BYTE PTR [ebx+ecx*2-0x1]
  42bc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc24:	xor    DWORD PTR [eax],edx
  42bc26:	pop    es
  42bc27:	stos   DWORD PTR es:[edi],eax
  42bc28:	nop
  42bc29:	inc    ebp
  42bc2a:	cld    
  42bc2b:	pusha  
  42bc2c:	xchg   esp,eax
  42bc2d:	shl    DWORD PTR [ecx+esi*8+0x0],1
  42bc31:	add    BYTE PTR [esi],ch
  42bc33:	sar    edx,cl
  42bc35:	sahf   
  42bc36:	outs   dx,BYTE PTR ds:[esi]
  42bc37:	add    BYTE PTR [ecx+edx*4+0x72],0x3d
  42bc3c:	hlt    
  42bc3d:	push   0x16
  42bc3f:	or     eax,0xd30900e7
  42bc44:	mov    al,0xc0
  42bc46:	imul   edx,DWORD PTR ds:0xd5d83b2,0xd3484d89
  42bc50:	mov    eax,0x40429688
  42bc55:	add    BYTE PTR [ebx+0x69627aa1],ch
  42bc5b:	dec    ebx
  42bc5c:	add    BYTE PTR [edi+0x35],al
  42bc5f:	adc    esp,edi
  42bc61:	mov    DWORD PTR [ecx-0x1d],esi
  42bc64:	add    eax,0x61
  42bc67:	shl    DWORD PTR [edx+0x75e2cbff],cl
  42bc6d:	mov    DWORD PTR [ecx],esi
  42bc6f:	jecxz  0x42bbf4
  42bc71:	ror    BYTE PTR [ebx-0x240fd7a9],cl
  42bc77:	loop   0x42bca2
  42bc79:	sar    BYTE PTR [esi],cl
  42bc7b:	push   esi
  42bc7c:	push   esp
  42bc7d:	adc    al,0x87
  42bc7f:	xchg   ebp,eax
  42bc80:	jbe    0x42bcb0
  42bc82:	fistp  DWORD PTR [eax+0x18]
  42bc85:	mov    eax,DWORD PTR [ecx-0x19]
  42bc88:	cmc    
  42bc89:	jne    0x42bcd7
  42bc8b:	pop    eax
  42bc8c:	ror    DWORD PTR [ebx-0x109b4a09],0x3b
  42bc93:	in     al,0x83
  42bc95:	rol    BYTE PTR [eax],0x0
  42bc98:	sub    edx,DWORD PTR [edi+0x74]
  42bc9b:	adc    eax,0x5cfb0b3c
  42bca0:	add    ah,ah
  42bca2:	inc    ebx
  42bca3:	adc    al,0xa7
  42bca5:	dec    ecx
  42bca6:	adc    al,0x3b
  42bca8:	icebp  
  42bca9:	loope  0x42bd23
  42bcab:	fdiv   DWORD PTR [edi+0x11]
  42bcae:	cld    
  42bcaf:	mov    esi,DWORD PTR [ecx+0xbc831e5]
  42bcb5:	push   edi
  42bcb6:	call   0x7a2718aa
  42bcbb:	jge    0x42bc92
  42bcbd:	mov    esi,?
  42bcbf:	or     dl,BYTE PTR [ecx+0x46]
  42bcc2:	or     eax,DWORD PTR [eax]
  42bcc4:	aad    0x5b
  42bcc6:	inc    eax
  42bcc7:	cld    
  42bcc8:	dec    esp
  42bcc9:	adc    BYTE PTR cs:[edi-0x76c13ae8],al
  42bcd0:	adc    ch,cl
  42bcd2:	dec    esi
  42bcd3:	jmp    0x419133
  42bcd8:	mov    edx,0x88706bd
  42bcdd:	xor    eax,0x6ba574e6
  42bce2:	rol    DWORD PTR [esi-0x14f1c772],0x9a
  42bce9:	pop    ss
  42bcea:	cmp    BYTE PTR [edi+0x152564e2],0xd5
  42bcf1:	loopne 0x42bcf4
  42bcf3:	pop    ebp
  42bcf4:	mov    ecx,edi
  42bcf6:	pushf  
  42bcf7:	jmp    0x0:0x4277f77a
  42bcfe:	aam    0x63
  42bd00:	mov    esi,0xeaad5c20
  42bd05:	test   edx,ebx
  42bd07:	int3   
  42bd08:	inc    eax
  42bd09:	outs   dx,BYTE PTR ds:[esi]
  42bd0a:	call   0x10b4f6a3
  42bd0f:	popf   
  42bd10:	aaa    
  42bd11:	jae    0x42bcc3
  42bd13:	mov    bh,0xb0
  42bd15:	push   edx
  42bd16:	fpatan 
  42bd18:	mov    dh,0x3b
  42bd1a:	mov    bh,ah
  42bd1c:	mov    al,0x42
  42bd1e:	xlat   BYTE PTR ds:[ebx]
  42bd1f:	out    dx,eax
  42bd20:	mov    al,al
  42bd22:	pop    esp
  42bd23:	cmc    
  42bd24:	xlat   BYTE PTR ds:[ebx]
  42bd25:	or     ch,BYTE PTR [ebx+0x1f]
  42bd28:	inc    eax
  42bd2a:	xor    al,0xd8
  42bd2c:	sti    
  42bd2d:	(bad)  
  42bd2e:	loop   0x42bd86
  42bd30:	inc    ecx
  42bd31:	call   DWORD PTR ds:0x1706fbc0
  42bd37:	or     DWORD PTR [eax+0x37],esi
  42bd3a:	stc    
  42bd3b:	jg     0x42bd60
  42bd3d:	in     al,dx
  42bd3e:	imul   eax,DWORD PTR [ecx],0xd5efe951
  42bd44:	or     DWORD PTR [ebx-0x67],edi
  42bd47:	shl    DWORD PTR [ebp-0x3f],1
  42bd4a:	shl    edx,1
  42bd4c:	mov    cl,0xf8
  42bd4e:	test   dl,cl
  42bd50:	arpl   WORD PTR [ebx+eax*4],di
  42bd53:	mov    DWORD PTR [edi+0x55474c03],eax
  42bd59:	stc    
  42bd5a:	jl     0x42bcde
  42bd5c:	mov    esi,0xe20a1546
  42bd61:	test   eax,0x682a0000
  42bd66:	lods   al,BYTE PTR ds:[esi]
  42bd67:	inc    ebx
  42bd68:	aad    0x4c
  42bd6a:	jo     0x42bda3
  42bd6c:	cdq    
  42bd6d:	and    DWORD PTR [ebx-0x4435a615],0x15
  42bd74:	dec    ebp
  42bd75:	aad    0x29
  42bd77:	jmp    0x35339e7b
  42bd7c:	mov    WORD PTR [ebx+0x6e],cs
  42bd7f:	ret    
  42bd80:	pop    ebp
  42bd81:	inc    edi
  42bd82:	adc    eax,0xd5d2117b
  42bd87:	aad    0xa0
  42bd89:	sbb    BYTE PTR [ebx+0x7cbfa20f],0x31
  42bd90:	or     dh,BYTE PTR [eax*4-0x127f3408]
  42bd97:	call   0x4ddc2db
  42bd9c:	push   edx
  42bd9d:	ret    0xd615
  42bda0:	mov    bl,0xea
  42bda2:	jmp    0x5e2ad7ec
  42bda7:	ss sub ebx,ecx
  42bdaa:	rol    BYTE PTR [ebx+edx*2],1
  42bdad:	push   cs
  42bdae:	icebp  
  42bdaf:	inc    esp
  42bdb0:	pop    ecx
  42bdb1:	mov    edx,0x3b8ae5ff
  42bdb6:	imul   BYTE PTR [esi-0x2bb3013]
  42bdbc:	jns    0x42be03
  42bdbe:	cld    
  42bdbf:	loopne 0x42bd6c
  42bdc1:	std    
  42bdc2:	jns    0x42bd68
  42bdc4:	imul   ecx,DWORD PTR [ebp-0x8],0x1e0000d2
  42bdcb:	add    BYTE PTR [edx+eiz*4+0x6afacffc],al
  42bdd2:	cmp    esp,esi
  42bdd4:	call   FWORD PTR [edi+0x3]
  42bdd7:	dec    BYTE PTR [edx]
  42bdd9:	gs xchg esp,eax
  42bddb:	clc    
  42bddc:	(bad)  
  42bddd:	call   0xa9670c1b
  42bde2:	das    
  42bde3:	dec    esi
  42bde4:	and    al,0xb9
  42bde6:	(bad)  
  42bde7:	jge    0x42bdfc
  42bde9:	jmp    0xd5844ac4
  42bdee:	loope  0x42bdb2
  42bdf0:	sub    dl,BYTE PTR es:[edi]
  42bdf3:	sbb    eax,0x1d02e6c1
  42bdf8:	adc    eax,0xfe8bd6e9
  42bdfd:	test   eax,0xee0148ae
  42be02:	repz push ebp
  42be05:	push   ss
  42be06:	jge    0x42bde9
  42be08:	jno    0x42be24
  42be0a:	ins    DWORD PTR es:[edi],dx
  42be0b:	iret   
  42be0c:	xchg   BYTE PTR [edi-0x2d36dafe],ch
  42be12:	sbb    DWORD PTR [ecx+0x37],ecx
  42be15:	sub    BYTE PTR [ebp-0x80],cl
  42be18:	adc    dl,ah
  42be1a:	(bad)  
  42be1b:	or     DWORD PTR [ebx],ecx
  42be1d:	lahf   
  42be1e:	out    0x8c,al
  42be20:	inc    ecx
  42be21:	sbb    DWORD PTR [edx],ebp
  42be23:	call   0x29fd:0xf8ace84a
  42be2a:	icebp  
  42be2b:	std    
  42be2c:	add    BYTE PTR [eax],al
  42be2e:	add    BYTE PTR [eax],al
  42be30:	pop    es
  42be31:	mov    bh,0x5
  42be33:	mov    dh,0xbb
  42be35:	push   cs
  42be36:	pop    es
  42be37:	mov    dh,0xb3
  42be39:	pop    es
  42be3a:	shl    eax,0xf4
  42be3d:	into   
  42be3e:	mov    edi,0x79e1a989
  42be43:	(bad)  
  42be44:	jmp    FWORD PTR [esi-0x22463894]
  42be4a:	(bad)  
  42be4b:	(bad)  
  42be4c:	in     al,dx
  42be4d:	pop    es
  42be4e:	pop    es
  42be4f:	mov    dh,0xab
  42be51:	push   cs
  42be52:	pop    es
  42be53:	mov    dh,0xeb
  42be55:	pop    es
  42be56:	jnp    0x42bebd
  42be58:	inc    eax
  42be59:	push   cs
  42be5a:	shl    eax,0xb4
  42be5d:	sar    BYTE PTR [ebx+esi*1+0x26f78dfe],1
  42be64:	ret    
  42be65:	cmp    DWORD PTR [ecx+ecx*4-0x291e4497],0x2f
  42be6d:	imul   edi,esp,0xf048eb00
  42be73:	add    DWORD PTR [edi+eax*1+0x0],edi
  42be77:	inc    edi
  42be78:	pop    ss
  42be79:	and    BYTE PTR [ebx],ch
  42be7b:	shr    BYTE PTR [esi+edx*2],0x44
  42be7f:	lock add eax,0xceebfc49
  42be85:	xchg   BYTE PTR [ebx-0x4],ah
  42be88:	jl     0x42bea2
  42be8a:	rol    BYTE PTR [eax-0xb],0x48
  42be8e:	lock inc edi
  42be90:	(bad)  
  42be91:	repnz mov WORD PTR [eax+0x0],cs
  42be95:	add    ch,bl
  42be97:	xchg   bh,bl
  42be99:	add    DWORD PTR [ebp-0xdf013f0],esi
  42be9f:	push   ebp
  42bea0:	sbb    BYTE PTR [ebp-0x14],0xd
  42bea4:	pop    es
  42bea5:	mov    esi,0x405c55bc
  42beaa:	aad    0xe0
  42beac:	cmp    DWORD PTR [ecx+0x447bc490],ecx
  42beb2:	sbb    eax,0xdd74bf66
  42beb7:	mov    cl,ah
  42beb9:	cli    
  42beba:	or     bl,BYTE PTR [edi*2-0x534c02bc]
  42bec1:	adc    dl,BYTE PTR [edx-0x2be7c08e]
  42bec7:	pop    ecx
  42bec8:	push   eax
  42bec9:	hlt    
  42beca:	fisub  DWORD PTR [ebx+ebx*8-0x1]
  42bece:	loop   0x42beb0
  42bed0:	jne    0x42bf1b
  42bed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bed3:	fld    TBYTE PTR [ebx+ecx*1-0x772f701c]
  42beda:	sbb    BYTE PTR [ebp+0x76],dl
  42bedd:	dec    esp
  42bede:	rcr    DWORD PTR [esi],0x7d
  42bee1:	push   esp
  42bee2:	loope  0x42bf0b
  42bee4:	mov    dh,0x7b
  42bee6:	add    BYTE PTR [eax],bh
  42bee8:	(bad)  
  42bee9:	xchg   DWORD PTR cs:[esi-0x4bcea5db],ebx
  42bef0:	jge    0x42bf4e
  42bef2:	shl    eax,0xfe
  42bef5:	or     cl,BYTE PTR [ebx-0x51]
  42bef8:	jne    0x42bf43
  42befa:	add    BYTE PTR [eax],al
  42befc:	(bad)
  42beff:	or     ecx,edi
  42bf01:	lahf   
  42bf02:	sub    ecx,DWORD PTR [ebp-0x7f]
  42bf05:	fstp   TBYTE PTR [edi+0xe]
  42bf08:	ins    BYTE PTR es:[edi],dx
  42bf09:	repz loope 0x42bf06
  42bf0c:	adc    ch,dl
  42bf0e:	jne    0x42bf5c
  42bf10:	popa   
  42bf11:	mov    ecx,0xf5db1437
  42bf16:	and    eax,0x8d6ce2c8
  42bf1b:	in     al,dx
  42bf1c:	dec    edx
  42bf1d:	fild   DWORD PTR [eax-0xe1fce84]
  42bf23:	test   BYTE PTR [edi-0x2afc02f7],cl
  42bf29:	cmp    BYTE PTR [ebx],0xe8
  42bf2c:	jecxz  0x42beef
  42bf2e:	push   ebx
  42bf2f:	sub    BYTE PTR [esp+eax*2-0xb],cl
  42bf33:	sub    BYTE PTR [edi+0x65],bh
  42bf36:	ss or  bl,dh
  42bf39:	fwait
  42bf3a:	aad    0x78
  42bf3c:	pushf  
  42bf3d:	sbb    edx,esp
  42bf3f:	lods   eax,DWORD PTR ds:[esi]
  42bf40:	into   
  42bf41:	(bad)  
  42bf42:	out    dx,eax
  42bf43:	add    DWORD PTR ss:[esp+ecx*8+0x40],ebx
  42bf48:	out    dx,al
  42bf49:	dec    ebx
  42bf4a:	cmc    
  42bf4b:	sub    dl,BYTE PTR [eax-0x41eeb03]
  42bf51:	out    dx,al
  42bf52:	pop    ebp
  42bf53:	ds pop ecx
  42bf55:	mov    WORD PTR [eax+0x1c14e270],gs
  42bf5b:	cld    
  42bf5c:	inc    esp
  42bf5d:	add    BYTE PTR [esi+0x150000ba],dh
  42bf63:	sbb    DWORD PTR [edx],0x48
  42bf66:	add    cl,bl
  42bf68:	icebp  
  42bf69:	je     0x42bf1f
  42bf6b:	rcr    DWORD PTR [ecx-0x1b],cl
  42bf6e:	sub    ecx,DWORD PTR [edi+0x59]
  42bf71:	add    al,0xce
  42bf73:	xchg   BYTE PTR [ecx],cl
  42bf75:	xlat   BYTE PTR ds:[ebx]
  42bf76:	lahf   
  42bf77:	sar    ebp,1
  42bf79:	inc    esi
  42bf7a:	xchg   ecx,eax
  42bf7b:	add    DWORD PTR [edi-0x5c],esp
  42bf7e:	adc    cl,0x31
  42bf81:	jns    0x42bf9c
  42bf83:	es test eax,0x2226117a
  42bf89:	outs   dx,DWORD PTR ds:[esi]
  42bf8a:	mov    ecx,0xd55a3184
  42bf8f:	rcr    BYTE PTR [ebx+0x9c55a07],1
  42bf95:	outs   dx,DWORD PTR ds:[esi]
  42bf96:	mov    ebp,0xe56f0237
  42bf9b:	shl    BYTE PTR [ebx-0x9],1
  42bf9e:	dec    edi
  42bf9f:	push   edi
  42bfa0:	add    cl,ah
  42bfa2:	push   ds
  42bfa3:	mov    edi,0x4831eeeb
  42bfa8:	test   DWORD PTR [ecx-0x82f79d7],ebp
  42bfae:	(bad)  
  42bfaf:	or     DWORD PTR [edi],esi
  42bfb1:	xor    al,0x2d
  42bfb3:	pusha  
  42bfb4:	aam    0xc0
  42bfb6:	jle    0x42bf89
  42bfb8:	cli    
  42bfb9:	(bad)  
  42bfba:	lea    edi,ds:0xf5cba6fc
  42bfc0:	add    cl,ch
  42bfc2:	(bad)  
  42bfc3:	or     DWORD PTR [edi-0x50],edi
  42bfc6:	add    BYTE PTR [eax],al
  42bfc8:	xlat   BYTE PTR ds:[ebx]
  42bfc9:	dec    ebp
  42bfca:	and    edx,esp
  42bfcc:	cwde   
  42bfcd:	pop    ebp
  42bfce:	or     ebp,DWORD PTR [edx+0x77]
  42bfd1:	sar    dl,cl
  42bfd3:	xchg   esi,eax
  42bfd4:	jmp    0xae6cc673
  42bfd9:	ds hlt 
  42bfdb:	not    BYTE PTR [ebx+0x10]
  42bfde:	clc    
  42bfdf:	jle    0x42bf92
  42bfe1:	rol    DWORD PTR [ebp+ebx*8+0x3d],cl
  42bfe5:	ds cld 
  42bfe7:	mov    al,0x3
  42bfe9:	idiv   BYTE PTR [ecx+0x46]
  42bfec:	std    
  42bfed:	ror    DWORD PTR [edx],0x65
  42bff0:	push   0x5556fae4
  42bff5:	dec    ebp
  42bff6:	in     al,dx
  42bff7:	jmp    0xf656fe1b
  42bffc:	adc    edi,DWORD PTR [esi+ecx*1+0x5c82d6e9]
  42c003:	xor    eax,0xfb7cc1ad
  42c008:	lods   eax,DWORD PTR ds:[esi]
  42c009:	xor    ebp,DWORD PTR [edx+ebx*4-0x3b]
  42c00d:	add    al,0xb2
  42c00f:	repnz mov edi,0xc39cf43e
  42c015:	adc    bl,bh
  42c017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c018:	retf   0x4512
  42c01b:	add    BYTE PTR [eax],dh
  42c01d:	push   0x5136ebe2
  42c022:	inc    ecx
  42c023:	jl     0x42bfd6
  42c025:	int3   
  42c026:	outs   dx,BYTE PTR ds:[esi]
  42c027:	adc    eax,DWORD PTR [edi+0x760847]
  42c02d:	add    BYTE PTR [edx],ch
  42c02f:	test   eax,0x5c3ba541
  42c035:	cmp    ebp,DWORD PTR [ebp-0x4]
  42c038:	xchg   BYTE PTR ds:0x83f5ec05,bl
  42c03e:	cdq    
  42c03f:	mov    ch,0xfa
  42c041:	push   cs
  42c042:	jno    0x42c077
  42c044:	in     al,dx
  42c045:	dec    DWORD PTR [ebx-0x10]
  42c048:	pop    esp
  42c049:	cld    
  42c04a:	sbb    eax,DWORD PTR [esi-0x13c40833]
  42c050:	add    DWORD PTR [ebp+0x10],0x1045894c
  42c057:	jmp    0x42c0cc
  42c059:	and    al,0x77
  42c05b:	xchg   esp,eax
  42c05c:	add    BYTE PTR fs:[ebx+0x31],bl
  42c060:	sbb    al,0x8b
  42c062:	xchg   ebx,ebp
  42c064:	jae    0x42c07e
  42c066:	loop   0x42c052
  42c068:	jae    0x42c07a
  42c06a:	sub    esi,DWORD PTR [ecx]
  42c06c:	or     al,0xff
  42c06e:	xchg   ecx,eax
  42c06f:	add    ebp,eax
  42c071:	or     DWORD PTR [eax],ebx
  42c073:	jmp    0x42c06a
  42c075:	dec    ebx
  42c076:	xor    esi,eax
  42c078:	add    eax,0xfad1b485
  42c07d:	call   edi
  42c07f:	dec    eax
  42c080:	cld    
  42c081:	jae    0x42c063
  42c083:	fcom   QWORD PTR [ebp+0x31eacbf7]
  42c089:	pop    esi
  42c08a:	cmp    ah,bh
  42c08c:	jp     0x42c035
  42c08e:	mov    ah,0xea
  42c090:	cmc    
  42c091:	sldt   WORD PTR [eax]
  42c094:	add    bh,bh
  42c096:	cmp    dh,dh
  42c098:	aad    0x9d
  42c09a:	test   BYTE PTR [eax],0xe1
  42c09d:	fisttp DWORD PTR [ecx-0x6727fabf]
  42c0a3:	push   edx
  42c0a4:	aam    0x5a
  42c0a6:	adc    BYTE PTR [eax],cl
  42c0a8:	push   esi
  42c0a9:	and    BYTE PTR [edx],al
  42c0ab:	cmp    cl,cl
  42c0ad:	loop   0x42c0bc
  42c0af:	test   ecx,esp
  42c0b1:	mov    ah,0xdd
  42c0b3:	cli    
  42c0b4:	cmp    al,0x32
  42c0b6:	xlat   BYTE PTR ds:[ebx]
  42c0b7:	cli    
  42c0b8:	and    ch,al
  42c0ba:	cwde   
  42c0bb:	inc    edx
  42c0bc:	aam    0x63
  42c0be:	(bad)  
  42c0bf:	std    
  42c0c0:	iret   
  42c0c1:	mov    eax,ds:0x56dae5e9
  42c0c6:	inc    esi
  42c0c7:	add    edx,edx
  42c0c9:	dec    esi
  42c0ca:	dec    esi
  42c0cb:	(bad)  
  42c0cc:	adc    eax,0x140706c1
  42c0d1:	pop    edx
  42c0d2:	dec    eax
  42c0d3:	cld    
  42c0d4:	push   esi
  42c0d5:	test   al,0x1
  42c0d7:	jmp    0x41a234
  42c0dc:	retf   0x4636
  42c0df:	add    edx,esp
  42c0e1:	push   cs
  42c0e2:	ss (bad) 
  42c0e4:	push   edi
  42c0e5:	add    eax,0x8095ffe0
  42c0ea:	push   es
  42c0eb:	pop    es
  42c0ec:	xchg   edi,eax
  42c0ed:	xchg   ebx,eax
  42c0ee:	mov    ah,0x7f
  42c0f0:	lods   al,BYTE PTR ds:[esi]
  42c0f1:	repz push cs
  42c0f3:	xchg   esp,eax
  42c0f4:	xchg   edi,eax
  42c0f5:	pop    ecx
  42c0f6:	cmp    ah,ch
  42c0f8:	add    BYTE PTR [eax],al
  42c0fa:	scas   al,BYTE PTR es:[edi]
  42c0fb:	sbb    al,BYTE PTR [edx-0x3a1f669c]
  42c101:	inc    esp
  42c102:	test   ecx,esp
  42c104:	(bad)  
  42c105:	call   ebp
  42c107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c108:	jmp    0x3f638760
  42c10d:	mov    DWORD PTR [eax],edx
  42c10f:	adc    DWORD PTR [esp+eax*2-0x2af1f68f],ecx
  42c116:	jmp    0x42c17c
  42c118:	sbb    eax,0xa8c9b203
  42c11d:	mov    WORD PTR [ecx],ss
  42c11f:	fisub  DWORD PTR [ecx+0x3afe95ee]
  42c125:	dec    edx
  42c126:	aam    0xfe
  42c128:	xor    dl,BYTE PTR [edx+0x43]
  42c12b:	mov    ecx,DWORD PTR [ebx+0x8c93adf]
  42c131:	or     edx,DWORD PTR [esi]
  42c133:	inc    esp
  42c134:	fld    DWORD PTR [ebx]
  42c136:	aad    0x9
  42c138:	jmp    0x6f24d549
  42c13d:	(bad)  
  42c13e:	xchg   edx,eax
  42c13f:	mov    ch,0x65
  42c141:	jecxz  0x42c118
  42c143:	xor    BYTE PTR [ebx],0xf0
  42c146:	fisttp WORD PTR [edi+0x49a05870]
  42c14c:	jmp    0x2ccc0061
  42c151:	aas    
  42c152:	xchg   ebp,eax
  42c153:	or     DWORD PTR [edx],ebp
  42c155:	mov    ebx,DWORD PTR [ecx-0x22b89033]
  42c15b:	sub    DWORD PTR [eax-0x32ffffa9],0xffffff91
  42c162:	mov    ecx,esp
  42c164:	iret   
  42c165:	dec    ebp
  42c166:	jo     0x42c1af
  42c168:	int    0xfd
  42c16a:	xor    bh,cl
  42c16c:	pop    ss
  42c16d:	aam    0x2b
  42c16f:	cld    
  42c170:	aad    0x82
  42c172:	adc    ebx,eax
  42c174:	fild   WORD PTR [ebp+0x9d5044c]
  42c17a:	outs   dx,BYTE PTR ds:[esi]
  42c17b:	push   edx
  42c17c:	in     eax,0xfc
  42c17e:	call   0x218b:0x3718c410
  42c185:	(bad)  
  42c186:	ins    DWORD PTR es:[edi],dx
  42c187:	dec    edi
  42c188:	mov    DWORD PTR [eax+0x70],ecx
  42c18b:	aaa    
  42c18c:	jmp    0xf565c1a1
  42c191:	push   ds
  42c192:	out    0xea,eax
  42c194:	leave  
  42c195:	mov    ebx,0x5e14e23d
  42c19a:	or     ebp,DWORD PTR [edx-0x71]
  42c19d:	cli    
  42c19e:	(bad)  
  42c19f:	call   0x62515969
  42c1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1a5:	sbb    DWORD PTR [ebx],ecx
  42c1a7:	aas    
  42c1a8:	in     eax,0x3
  42c1aa:	aas    
  42c1ab:	rcl    BYTE PTR [ebx-0x4a92f52b],0xd7
  42c1b2:	cli    
  42c1b3:	out    dx,al
  42c1b4:	xor    eax,0x9b721446
  42c1b9:	int    0x38
  42c1bb:	sub    al,0x1d
  42c1bd:	push   ebx
  42c1be:	aad    0x12
  42c1c0:	or     DWORD PTR [eax],eax
  42c1c2:	test   dh,cl
  42c1c4:	add    BYTE PTR [eax],al
  42c1c6:	add    al,dl
  42c1c8:	cli    
  42c1c9:	push   0xffffffab
  42c1cb:	(bad)  
  42c1cd:	outs   dx,DWORD PTR ds:[esi]
  42c1ce:	xchg   ebx,eax
  42c1cf:	cmc    
  42c1d0:	or     ch,BYTE PTR [esp+ebp*2-0x5]
  42c1d4:	(bad)  
  42c1d5:	call   0xe33ef039
  42c1da:	push   ds
  42c1db:	dec    esi
  42c1dc:	cmp    edx,esp
  42c1de:	xchg   esp,eax
  42c1df:	pop    ebp
  42c1e0:	outs   dx,DWORD PTR ds:[esi]
  42c1e1:	repz lds edx,FWORD PTR [edi+0x1a24620e]
  42c1e8:	or     edi,DWORD PTR [edi]
  42c1ea:	fiadd  DWORD PTR [ebx]
  42c1ec:	cmp    DWORD PTR [ebx*4-0x4bd5daa8],ebp
  42c1f3:	inc    ebp
  42c1f4:	adc    al,0xb0
  42c1f6:	sbb    esi,esi
  42c1f8:	jnp    0x42c244
  42c1fa:	mov    ecx,0x2a786f6
  42c1ff:	xchg   DWORD PTR [edi+0x5d13a1dd],edi
  42c205:	loope  0x42c233
  42c207:	add    BYTE PTR [edi],ch
  42c209:	add    ch,al
  42c20b:	inc    edi
  42c20c:	mov    DWORD PTR [esi+0x60],ecx
  42c20f:	in     eax,dx
  42c210:	ror    BYTE PTR [edi],0xf3
  42c213:	cmp    edi,ebp
  42c215:	inc    ebx
  42c217:	test   DWORD PTR [ebx-0x10],edi
  42c21a:	jl     0x42c215
  42c21c:	test   BYTE PTR [eax+0x3bf5e9c6],ch
  42c222:	and    DWORD PTR [ebp+eax*1-0xa4dca7e],ebp
  42c229:	inc    DWORD PTR [eax]
  42c22b:	add    bh,al
  42c22d:	inc    ebx
  42c22e:	and    al,0x40
  42c230:	lds    eax,FWORD PTR [ebx+0x24]
  42c233:	(bad)  
  42c234:	mov    ecx,0x56d78324
  42c239:	or     bh,dh
  42c23b:	jne    0x42c20d
  42c23d:	add    cl,0xff
  42c240:	mov    ebp,ecx
  42c242:	push   eax
  42c243:	(bad)  
  42c244:	jns    0x42c21b
  42c246:	cmc    
  42c247:	jne    0x42c279
  42c249:	stos   DWORD PTR es:[edi],eax
  42c24a:	jae    0x42c254
  42c24c:	and    al,0xf0
  42c24e:	loope  0x42c24f
  42c250:	inc    ebx
  42c251:	cmp    BYTE PTR [edx+0x13f0690f],0x0
  42c258:	cld    
  42c259:	xor    ebx,DWORD PTR ds:[ebp+0x30]
  42c25d:	cmp    ah,dl
  42c25f:	jmp    0x387481
  42c264:	ja     0x42c2a0
  42c266:	cld    
  42c267:	(bad)  
  42c268:	stc    
  42c269:	sar    edi,1
  42c26b:	(bad)  
  42c26c:	mov    esp,0xadf97b07
  42c271:	sub    esp,DWORD PTR [ecx]
  42c273:	cmp    esp,edx
  42c275:	pop    ecx
  42c276:	pop    es
  42c277:	xor    DWORD PTR [esi-0x4c],0xfffffff5
  42c27b:	jmp    DWORD PTR [ebx-0xabcfe8b]
  42c281:	cmp    ah,dh
  42c283:	pmullw mm3,QWORD PTR [eax+esi*4-0xc]
  42c288:	xchg   edx,eax
  42c289:	cmp    al,0xdb
  42c28b:	inc    esp
  42c28c:	loope  0x42c2e5
  42c28e:	push   ecx
  42c28f:	cld    
  42c290:	add    BYTE PTR [eax],al
  42c292:	mov    esp,0x9a79f29d
  42c297:	fadd   st,st(6)
  42c299:	or     bl,BYTE PTR [ecx-0x34]
  42c29c:	call   0x61a32d9b
  42c2a1:	in     al,dx
  42c2a2:	aad    0x59
  42c2a4:	push   ecx
  42c2a5:	adc    al,0xca
  42c2a7:	pop    ebp
  42c2a8:	iret   
  42c2a9:	adc    ch,dl
  42c2ab:	loopne 0x42c238
  42c2ad:	pop    esp
  42c2ae:	dec    ecx
  42c2af:	enter  0x7cc6,0x7
  42c2b3:	enter  0x6c3c,0xc6
  42c2b7:	scas   eax,DWORD PTR es:[edi]
  42c2b8:	or     DWORD PTR [edx-0xbb06622],esi
  42c2be:	mov    eax,ds:0x98fb3efd
  42c2c3:	aam    0x1b
  42c2c5:	inc    ebp
  42c2c6:	shl    DWORD PTR [esi+eiz*8],0xe6
  42c2ca:	out    dx,eax
  42c2cb:	addr16 inc ebp
  42c2cd:	jl     0x42c31f
  42c2cf:	mov    eax,ds:0xedbe0f52
  42c2d4:	or     esi,DWORD PTR [edx-0x35]
  42c2d7:	iret   
  42c2d8:	retf   
  42c2d9:	inc    eax
  42c2da:	pop    esp
  42c2db:	jmp    0x42c31c
  42c2dd:	aaa    
  42c2de:	adc    al,0xd4
  42c2e0:	mov    DWORD PTR [ecx+0x7ed96beb],eax
  42c2e6:	pop    eax
  42c2e7:	jo     0x42c2e7
  42c2e9:	or     bl,BYTE PTR [eax-0x65]
  42c2ec:	jmp    0x42c2e8
  42c2ee:	retf   0x3fc7
  42c2f1:	cld    
  42c2f2:	rcr    BYTE PTR [esi+0x3f],cl
  42c2f5:	cmc    
  42c2f6:	add    BYTE PTR [eax],al
  42c2f8:	mov    edx,0xf9448653
  42c2fd:	and    BYTE PTR [ebp+0x6209f144],cl
  42c303:	pop    eax
  42c304:	stc    
  42c305:	jle    0x42c338
  42c307:	imul   edx,ebp,0x5bffdbca
  42c30d:	mov    esi,0x33ed5849
  42c312:	inc    edx
  42c313:	pop    eax
  42c314:	in     eax,0xca
  42c316:	mov    bl,0xf
  42c318:	jle    0x42c36e
  42c31a:	loope  0x42c307
  42c31c:	add    cl,ah
  42c31e:	sub    esi,ebx
  42c320:	push   ecx
  42c321:	leave  
  42c322:	icebp  
  42c323:	mov    al,dh
  42c325:	imul   al
  42c327:	add    edx,DWORD PTR [edx]
  42c329:	(bad)  
  42c32b:	ffreep st(3)
  42c32d:	mov    ch,0xff
  42c32f:	or     al,BYTE PTR [eax-0x36]
  42c332:	add    DWORD PTR [esi],ecx
  42c334:	xchg   DWORD PTR [edx],edi
  42c336:	call   0xe7854a49
  42c33b:	les    esi,FWORD PTR ds:0x53cbde01
  42c341:	enter  0x47a9,0x31
  42c345:	or     cl,ch
  42c347:	add    edx,ebp
  42c349:	sub    BYTE PTR [ebx],0xe0
  42c34c:	xchg   ebx,eax
  42c34d:	ret    0xeae5
  42c350:	pop    esp
  42c351:	or     ecx,ebp
  42c353:	add    ecx,esi
  42c355:	xchg   ebx,eax
  42c356:	sub    DWORD PTR [ebx],eax
  42c358:	into   
  42c359:	xchg   ebx,eax
  42c35a:	sbb    DWORD PTR [edx],eax
  42c35c:	add    BYTE PTR [eax],al
  42c35e:	adc    al,0xe8
  42c360:	loopne 0x42c36a
  42c362:	adc    eax,DWORD PTR [eax-0x3f4c23cd]
  42c368:	aad    0xc3
  42c36a:	pop    edx
  42c36b:	or     ch,BYTE PTR [ecx]
  42c36d:	mov    ebx,DWORD PTR [ecx]
  42c36f:	(bad)  
  42c370:	fnstenv [edi-0x6b]
  42c373:	lea    ebp,[ecx-0x72a8b3ff]
  42c379:	mov    DWORD PTR [ecx],ecx
  42c37b:	ret    0x81ff
  42c37e:	ds int 0x44
  42c381:	jns    0x42c359
  42c383:	or     DWORD PTR [eax],eax
  42c385:	jmp    0xa4cb8d4f
  42c38a:	jp     0x42c3d8
  42c38c:	out    0xbb,eax
  42c38e:	in     eax,0xc9
  42c390:	aas    
  42c391:	pusha  
  42c392:	adc    bh,BYTE PTR [edx-0x2d1bc41a]
  42c398:	inc    eax
  42c399:	cli    
  42c39a:	xchg   esi,eax
  42c39b:	xchg   edx,eax
  42c39c:	dec    esp
  42c39d:	cmp    DWORD PTR [esi+0x4e],ebx
  42c3a0:	cld    
  42c3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3a2:	jge    0x42c3ee
  42c3a4:	or     ebx,DWORD PTR [edi+0x10]
  42c3a7:	or     ecx,DWORD PTR [ebx]
  42c3a9:	push   edi
  42c3aa:	mov    al,ds:0xe108bfc7
  42c3af:	clc    
  42c3b0:	mov    edi,0xb99226
  42c3b5:	jmp    0x3349cd90
  42c3ba:	sub    al,0x99
  42c3bc:	mov    WORD PTR [ecx+0x6ac09019],fs
  42c3c2:	add    BYTE PTR [eax],al
  42c3c4:	xor    DWORD PTR [edx],ecx
  42c3c6:	mov    DWORD PTR [eiz*1+0x7668ba14],ebp
  42c3cd:	inc    ax
  42c3cf:	jmp    0x81cb47b5
  42c3d4:	retf   
  42c3d5:	dec    ecx
  42c3d6:	add    BYTE PTR [esi],ch
  42c3d8:	dec    esi
  42c3d9:	dec    esi
  42c3da:	cld    
  42c3db:	jo     0x42c368
  42c3dd:	rol    DWORD PTR [eax+eiz*4-0x5146ee75],0x9
  42c3e5:	les    edi,FWORD PTR [edx+0x70]
  42c3e8:	xchg   ebx,eax
  42c3e9:	ror    DWORD PTR [edx],0x57
  42c3ec:	loope  0x42c439
  42c3ee:	mov    DWORD PTR [ebp*4+0x58debf8d],edi
  42c3f5:	sub    edi,edi
  42c3f7:	jmp    FWORD PTR [esp+ecx*1-0x76a93d85]
  42c3fe:	hlt    
  42c3ff:	btc    DWORD PTR [ebp+0xcbc10f2],ecx
  42c406:	mul    DWORD PTR [ecx+eiz*1]
  42c409:	lds    ebp,FWORD PTR [edx-0x35e653be]
  42c40f:	inc    edx
  42c410:	out    0xcb,eax
  42c412:	add    eax,0x9358c
  42c417:	add    BYTE PTR ds:0x6feb1400,al
  42c41d:	sbb    edx,ecx
  42c41f:	inc    edx
  42c420:	not    DWORD PTR [esi+0x6c]
  42c423:	cmp    eax,ebp
  42c425:	adc    eax,0x4c7b
  42c42a:	imul   ecx,DWORD PTR [eax+eax*1],0xffffff83
  42c42e:	cmp    al,ah
  42c430:	cli    
  42c431:	jae    0x42c47b
  42c433:	xor    al,BYTE PTR [eax]
  42c435:	jmp    DWORD PTR [edx-0x3c]
  42c438:	mov    edx,DWORD PTR [esi+0x38]
  42c43b:	xchg   ecx,eax
  42c43c:	mov    ecx,0xf657dce8
  42c441:	inc    ecx
  42c443:	int3   
  42c444:	add    eax,0xf5d82585
  42c449:	jmp    DWORD PTR [edi-0x2e1403b6]
  42c44f:	cwde   
  42c450:	push   eax
  42c451:	sbb    al,0xd7
  42c453:	xlat   BYTE PTR ds:[ebx]
  42c454:	xor    ecx,ebx
  42c456:	mov    ds:0xd60b84c1,eax
  42c45b:	push   ebx
  42c45c:	sub    al,0x75
  42c45e:	and    DWORD PTR [edi+0x47fb01f4],ecx
  42c464:	shl    bl,cl
  42c466:	cmp    esp,esp
  42c468:	test   BYTE PTR [ebx-0x13],cl
  42c46b:	and    eax,0x47eb2d46
  42c470:	(bad)  
  42c471:	repz aad 0x9f
  42c474:	(bad)  
  42c475:	xchg   BYTE PTR [eax],bl
  42c477:	cdq    
  42c478:	inc    edx
  42c479:	sti    
  42c47a:	sbb    ch,ah
  42c47c:	sbb    eax,DWORD PTR [ebp-0x1f]
  42c47f:	(bad)  
  42c480:	jne    0x42c46a
  42c482:	xchg   ebx,eax
  42c483:	mov    bl,0xfe
  42c485:	call   FWORD PTR [esi+0x1f]
  42c488:	push   0xb9ec8527
  42c48d:	or     al,BYTE PTR [eax]
  42c48f:	add    BYTE PTR [edx-0xd],dl
  42c492:	iret   
  42c493:	cli    
  42c494:	xchg   edx,eax
  42c495:	mov    ah,0xb6
  42c497:	call   0x41783b
  42c49c:	call   0xfeb0:0xd500ea76
  42c4a3:	jle    0x42c512
  42c4a5:	mov    dl,0x5
  42c4a7:	mov    WORD PTR [edi],gs
  42c4a9:	mov    bl,0xfe
  42c4ab:	call   FWORD PTR [esi+0x560b62ce]
  42c4b1:	push   ebx
  42c4b2:	sar    dl,1
  42c4b4:	push   edx
  42c4b5:	mov    al,0x90
  42c4b7:	push   cs
  42c4b8:	xchg   esi,eax
  42c4b9:	xor    ebx,edx
  42c4bb:	add    eax,0x8a05d6c9
  42c4c0:	push   edi
  42c4c1:	(bad)  
  42c4c2:	aad    0xfa
  42c4c4:	push   esi
  42c4c5:	mov    ebx,0x33c47a02
  42c4ca:	fimul  DWORD PTR [ecx+ebp*4]
  42c4cd:	adc    eax,DWORD PTR [ebp-0x14eaf0b]
  42c4d3:	jmp    edx
  42c4d5:	xor    eax,0xd80aef63
  42c4da:	cmp    DWORD PTR [ecx+0x75],0x778505b0
  42c4e1:	adc    ebp,0xfffffffa
  42c4e4:	repnz cmc 
  42c4e6:	out    dx,eax
  42c4e7:	cmp    BYTE PTR [eax-0x133fa724],dl
  42c4ed:	or     DWORD PTR [esi+eax*1],ebx
  42c4f0:	aad    0x9
  42c4f2:	fidivr WORD PTR [ecx]
  42c4f4:	add    BYTE PTR [eax],al
  42c4f6:	inc    ecx
  42c4f7:	cmp    eax,DWORD PTR [ebx+0x14140383]
  42c4fd:	in     eax,dx
  42c4fe:	add    esi,DWORD PTR [ebx+0x1e11c28a]
  42c504:	call   0x664c9a0c
  42c509:	fcmovnbe st,st(5)
  42c50b:	push   ss
  42c50c:	pop    ebp
  42c50d:	cmp    esp,DWORD PTR [ebx-0xe1173a]
  42c513:	xor    eax,0xbdd286ea
  42c518:	push   ecx
  42c519:	fcmovu st,st(7)
  42c51b:	jg     0x42c512
  42c51d:	inc    esi
  42c51e:	add    al,ah
  42c520:	out    dx,eax
  42c521:	or     dl,BYTE PTR [ecx-0x15]
  42c524:	xor    eax,0x2e8a6fda
  42c529:	and    ebx,esi
  42c52b:	(bad)  
  42c52c:	iret   
  42c52d:	(bad)  
  42c52e:	pop    edi
  42c52f:	(bad)  
  42c530:	fnstsw WORD PTR [bp+si]
  42c533:	or     ecx,ebp
  42c535:	add    ebx,esi
  42c537:	(bad)  
  42c538:	jecxz  0x42c510
  42c53a:	dec    edi
  42c53b:	(bad)  
  42c53c:	or     DWORD PTR [eax-0x17],eax
  42c53f:	add    BYTE PTR [edi+ebp*8+0x230fd4bc],ch
  42c546:	xor    eax,esi
  42c548:	call   0xe860570f
  42c54d:	add    edx,ebp
  42c54f:	or     DWORD PTR [esi-0x24],esp
  42c552:	aad    0x16
  42c554:	ins    DWORD PTR es:[edi],dx
  42c555:	hlt    
  42c556:	adc    dh,al
  42c558:	call   0xaf42c579
  42c55d:	xor    eax,0xba0a84da
  42c562:	rcr    ecx,0xcf
  42c565:	jg     0x42c53c
  42c567:	inc    esp
  42c568:	jb     0x42c52d
  42c56a:	(bad)  
  42c56b:	fistp  WORD PTR [edx-0x464c80e8]
  42c571:	cmp    eax,0xa5fb680c
  42c576:	(bad)  
  42c577:	call   0xa4c7d652
  42c57c:	mov    ds:0x28efac0,eax
  42c581:	push   ds
  42c582:	cmp    DWORD PTR [eax*8-0x466f2abd],ebp
  42c589:	or     al,BYTE PTR [eax]
  42c58b:	jmp    0xe8571425
  42c590:	(bad)  
  42c591:	or     DWORD PTR [eax],eax
  42c593:	push   0x79
  42c595:	or     cl,BYTE PTR [ebx]
  42c597:	ins    DWORD PTR es:[edi],dx
  42c598:	dec    ecx
  42c599:	or     al,BYTE PTR [eax]
  42c59b:	jmp    0xdeaf2589
  42c5a0:	pop    ecx
  42c5a1:	jge    0x42c591
  42c5a3:	inc    esi
  42c5a4:	pushf  
  42c5a5:	adc    BYTE PTR [edx-0x9bae626],dh
  42c5ab:	jecxz  0x42c5af
  42c5ad:	pop    ds
  42c5ae:	jg     0x42c5e3
  42c5b0:	ficom  DWORD PTR [eax]
  42c5b2:	mov    bh,BYTE PTR [ebx+eax*4-0x40]
  42c5b6:	cli    
  42c5b7:	push   0xe8ff8e33
  42c5bc:	(bad)  
  42c5bd:	adc    BYTE PTR [eax+eiz*2-0x3fd50000],al
  42c5c4:	cli    
  42c5c5:	push   es
  42c5c6:	cli    
  42c5c7:	sbb    eax,0x4342a439
  42c5cc:	rol    DWORD PTR [eax],1
  42c5ce:	lods   eax,DWORD PTR ds:[esi]
  42c5cf:	or     DWORD PTR [eax],eax
  42c5d1:	jmp    0xe85713eb
  42c5d6:	(bad)  
  42c5d7:	or     DWORD PTR [eax],eax
  42c5d9:	push   0x2e
  42c5db:	or     cl,BYTE PTR [ebx]
  42c5dd:	gs push edx
  42c5df:	or     al,BYTE PTR [eax]
  42c5e1:	jmp    0xaf25c7
  42c5e6:	add    ecx,DWORD PTR [esi-0x1dcc0c92]
  42c5ec:	add    eax,0x7b4e0fb6
  42c5f1:	cli    
  42c5f2:	not    BYTE PTR [ecx]
  42c5f4:	mov    WORD PTR [esi+0x3e],ss
  42c5f7:	loop   0x42c5ee
  42c5f9:	xor    DWORD PTR [esi+0xb],0x76
  42c5fd:	or     al,0x3d
  42c5ff:	out    0x83,eax
  42c601:	add    BYTE PTR [eax+ecx*1-0x24167af9],ch
  42c608:	cmc    
  42c609:	push   DWORD PTR [ebx]
  42c60b:	add    al,0x14
  42c60d:	cmp    ecx,edi
  42c60f:	mov    ecx,0x55d178
  42c614:	add    DWORD PTR [eax],eax
  42c616:	lods   al,BYTE PTR ds:[esi]
  42c617:	sbb    eax,0xf40542ca
  42c61c:	adc    edi,DWORD PTR [ebx]
  42c61e:	mov    esi,0x6d4a8c11
  42c623:	or     BYTE PTR [eax],al
  42c625:	jmp    0x42c627
  42c627:	add    BYTE PTR [edi+0x1d],ch
  42c62a:	retf   0xd742
  42c62d:	jmp    FWORD PTR [ebx+0xf]
  42c630:	(bad)  
  42c631:	dec    BYTE PTR [eax+eax*1]
  42c634:	ins    BYTE PTR es:[edi],dx
  42c635:	adc    DWORD PTR [esi+0x33fae70b],ebp
  42c63b:	mov    al,BYTE PTR [eax-0x49]
  42c63e:	cmp    DWORD PTR [eax-0x7afa3b23],eax
  42c644:	xor    eax,0xd3fff5de
  42c649:	add    edx,DWORD PTR [ecx+edi*1]
  42c64c:	jns    0x42c602
  42c64e:	js     0x42c629
  42c650:	aad    0xbf
  42c652:	(bad)  
  42c653:	jmp    FWORD PTR [ebx*1-0x55abd36]
  42c65a:	adc    edi,DWORD PTR [ebx]
  42c65c:	ds or  al,0x8c
  42c65f:	push   cs
  42c660:	aad    0xb1
  42c662:	(bad)  
  42c663:	(bad)  
  42c664:	out    dx,al
  42c665:	scas   al,BYTE PTR es:[edi]
  42c666:	or     eax,0x320797ce
  42c66b:	ins    BYTE PTR es:[edi],dx
  42c66c:	loop   0x42c69d
  42c66e:	jmp    0xceb2:0x1b2d50c
  42c675:	daa    
  42c676:	sub    dh,BYTE PTR [edi+ecx*2]
  42c679:	mov    esi,0x92553ef3
  42c67e:	dec    DWORD PTR [edx]
  42c680:	push   ecx
  42c681:	outs   dx,BYTE PTR ds:[esi]
  42c682:	aam    0xfa
  42c684:	ret    0x4094
  42c687:	adc    al,0xfc
  42c689:	cmc    
  42c68a:	out    dx,eax
  42c68b:	jns    0x42c68d
  42c68d:	add    BYTE PTR [edx+ebx*4-0x4e550048],cl
  42c694:	or     eax,0x312a17ce
  42c699:	adc    al,0xde
  42c69b:	out    dx,al
  42c69c:	add    cl,BYTE PTR [edi+eiz*4+0x7efffeb1]
  42c6a3:	mov    al,0xd
  42c6a5:	into   
  42c6a6:	pop    ss
  42c6a7:	sbb    BYTE PTR [edx],dh
  42c6a9:	ins    BYTE PTR es:[edi],dx
  42c6aa:	retf   0xb62f
  42c6ad:	or     edx,ebp
  42c6af:	mov    al,0x1
  42c6b1:	mov    dl,0xde
  42c6b3:	daa    
  42c6b4:	sub    dh,BYTE PTR [edi+ecx*2]
  42c6b7:	in     eax,0xf3
  42c6b9:	ds push ebp
  42c6bb:	adc    al,BYTE PTR ds:0xd542580b
  42c6c1:	cli    
  42c6c2:	dec    edx
  42c6c3:	sbb    al,0x41
  42c6c5:	adc    al,0xfc
  42c6c7:	ins    DWORD PTR es:[edi],dx
  42c6c8:	jmp    0x32ff:0xa51a1c79
  42c6cf:	mov    cl,0xd
  42c6d1:	into   
  42c6d2:	xchg   edi,eax
  42c6d3:	sub    DWORD PTR [ecx],esi
  42c6d5:	adc    al,0xde
  42c6d7:	out    dx,al
  42c6d8:	add    cl,BYTE PTR [ebx+eax*2-0x2afc16f6]
  42c6df:	scas   al,BYTE PTR es:[edi]
  42c6e0:	in     eax,0x12
  42c6e2:	sbb    ecx,DWORD PTR [eax+0xe]
  42c6e5:	ss jno 0x42c6fa
  42c6e8:	data16 jne 0x42c6b9
  42c6eb:	or     ecx,ebp
  42c6ed:	push   es
  42c6ee:	daa    
  42c6ef:	movd   mm5,DWORD PTR ds:0x8fa10000
  42c6f6:	in     al,0xf4
  42c6f8:	mov    ds:0xce04c789,eax
  42c6fd:	lea    edi,[ebx]
  42c6ff:	aad    0xcf
  42c701:	ret    0x4099
  42c704:	loope  0x42c706
  42c706:	sub    al,0xf0
  42c708:	cmp    al,0xe1
  42c70a:	jge    0x42c777
  42c70c:	jmp    0xbe1e:0x98d26d7
  42c713:	shr    DWORD PTR [esi],0x29
  42c716:	jle    0x42c71a
  42c718:	repnz xlat BYTE PTR ds:[ebx]
  42c71a:	es sbb edi,edi
  42c71d:	xor    eax,0x15fd82f2
  42c722:	jmp    0xddbea52a
  42c727:	mov    ah,BYTE PTR [esi+edi*8]
  42c72a:	pop    esi
  42c72b:	pop    es
  42c72c:	in     al,0x46
  42c72e:	imul   esp,esp,0x236412e2
  42c734:	fs ret 0xd631
  42c738:	sbb    DWORD PTR [esi],ebx
  42c73a:	lock inc eax
  42c73c:	rol    DWORD PTR [ebx+0x40],0xea
  42c740:	add    esi,edi
  42c742:	ss inc ecx
  42c744:	pop    esp
  42c745:	pop    esp
  42c746:	std    
  42c747:	sbb    al,BYTE PTR [ebx+0x3beabd45]
  42c74d:	not    DWORD PTR [esi]
  42c74f:	inc    ecx
  42c750:	jmp    0xfffd:0xaa068d63
  42c757:	in     al,0x0
  42c759:	add    dh,dl
  42c75b:	or     DWORD PTR [ebx],ecx
  42c75d:	aaa    
  42c75e:	iret   
  42c75f:	mov    dl,BYTE PTR [ecx+0x1d]
  42c762:	pop    edi
  42c763:	push   cs
  42c764:	adc    DWORD PTR [edx],ebp
  42c766:	push   ecx
  42c767:	test   eax,0xab82e60f
  42c76c:	out    dx,eax
  42c76d:	into   
  42c76e:	and    BYTE PTR [edi+0x4ccfdd44],bh
  42c774:	adc    al,0x3f
  42c776:	mov    ecx,DWORD PTR cs:[ecx+esi*4-0x44]
  42c77b:	enter  0x650a,0x73
  42c77f:	lods   al,BYTE PTR ds:[esi]
  42c780:	cli    
  42c781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c782:	push   esp
  42c783:	ds in  al,dx
  42c785:	jmp    0xe4d04e5b
  42c78a:	(bad)  
  42c78b:	or     DWORD PTR [edi-0x41bf5acc],eax
  42c791:	sbb    DWORD PTR [esi+0x5e],0xfffffffc
  42c795:	push   0xffffff8f
  42c797:	adc    al,0xb
  42c799:	outs   dx,BYTE PTR ds:[esi]
  42c79a:	dec    BYTE PTR [esi]
  42c79c:	add    cl,ch
  42c79e:	sub    ebp,0xff66c194
  42c7a4:	jmp    FWORD PTR [edi-0x36]
  42c7a7:	adc    eax,0x422a2837
  42c7ac:	xchg   DWORD PTR [edi-0x4528070e],esp
  42c7b2:	rol    DWORD PTR [eax+0x7a],0xe1
  42c7b6:	(bad)  
  42c7b7:	xor    eax,0xc4d6c316
  42c7bc:	jno    0x42c78f
  42c7be:	add    BYTE PTR [eax],al
  42c7c0:	dec    ebp
  42c7c1:	leave  
  42c7c2:	mov    WORD PTR [edi+0x11be884a],?
  42c7c8:	add    BYTE PTR [eax-0x6],cl
  42c7cb:	push   ss
  42c7cc:	ret    0x7480
  42c7cf:	mov    bh,0x4d
  42c7d1:	dec    esi
  42c7d2:	clc    
  42c7d3:	add    bh,al
  42c7d5:	mov    eax,0xf2085681
  42c7da:	mov    ecx,0x144ec43b
  42c7df:	mov    ch,BYTE PTR [edi]
  42c7e1:	and    edi,DWORD PTR [esi]
  42c7e3:	sub    al,0xb1
  42c7e5:	or     BYTE PTR [ebx-0x6],bh
  42c7e8:	std    
  42c7e9:	push   eax
  42c7ea:	cmp    al,0x8a
  42c7ec:	scas   eax,DWORD PTR es:[edi]
  42c7ed:	or     al,0x32
  42c7ef:	inc    esi
  42c7f0:	stc    
  42c7f1:	push   eax
  42c7f2:	xor    al,0x43
  42c7f4:	sbb    eax,DWORD PTR [eax]
  42c7f6:	adc    al,0x39
  42c7f8:	mov    ecx,0x17b376b9
  42c7fd:	hlt    
  42c7fe:	and    cl,al
  42c800:	ja     0x42c800
  42c802:	imul   ecx,DWORD PTR [ebx+0x3bcaf18c],0xffffff86
  42c809:	dec    esi
  42c80a:	pop    edi
  42c80b:	mov    eax,DWORD PTR [ecx+edx*4-0x32ce83c0]
  42c812:	outs   dx,BYTE PTR ds:[esi]
  42c813:	adc    edx,DWORD PTR [edi-0x4589f809]
  42c819:	sbb    ecx,ecx
  42c81b:	inc    ecx
  42c81c:	xor    eax,0x6d3b5c47
  42c821:	add    eax,0x6987
  42c826:	sub    eax,0xa983f5d6
  42c82b:	fdiv   st(2),st
  42c82d:	push   cs
  42c82e:	icebp  
  42c82f:	retf   0xffde
  42c832:	or     esp,DWORD PTR [edx]
  42c834:	pop    ebp
  42c835:	cld    
  42c836:	imul   ecx,DWORD PTR [edx-0x2a540fe7],0xffffff81
  42c83d:	inc    ebp
  42c83e:	rol    BYTE PTR [ebp-0x77],1
  42c841:	inc    ebp
  42c842:	rcl    dh,1
  42c844:	jae    0x42c86a
  42c846:	(bad)  
  42c847:	ins    DWORD PTR es:[edi],dx
  42c848:	fs add bl,ch
  42c84b:	dec    edi
  42c84c:	sbb    al,0x8b
  42c84e:	aad    0xeb
  42c850:	shl    DWORD PTR [ebp+ebx*8+0x78],cl
  42c854:	shl    DWORD PTR [ebp+eax*8+0x7],cl
  42c858:	dec    edx
  42c859:	or     al,0x2a
  42c85b:	xor    eax,0xe88e807
  42c860:	aam    0xfa
  42c862:	mov    fs,WORD PTR ds:0xfe580abf
  42c868:	std    
  42c869:	call   ebp
  42c86b:	jmp    0x42c89d
  42c86d:	cld    
  42c86e:	xchg   BYTE PTR [esi-0x24],bh
  42c871:	out    0xea,al
  42c873:	into   
  42c874:	into   
  42c875:	dec    BYTE PTR ds:0x908894db
  42c87b:	(bad)  
  42c87c:	or     ecx,eax
  42c87e:	pusha  
  42c87f:	mov    WORD PTR [edx+0x41],?
  42c882:	imul   edi,DWORD PTR [ebx-0x47a3915a],0xe98
  42c88c:	push   esi
  42c88d:	imul   eax,DWORD PTR [eax],0x75
  42c890:	shl    ebx,1
  42c892:	or     bl,al
  42c894:	inc    esi
  42c895:	aaa    
  42c896:	test   BYTE PTR [esi],dh
  42c898:	fistp  QWORD PTR [ebp+0x33f4e722]
  42c89e:	retf   0x2905
  42c8a1:	aad    0x81
  42c8a3:	jns    0x42c8da
  42c8a5:	mov    cl,0x57
  42c8a7:	test   BYTE PTR [esi+0x2b],dl
  42c8aa:	sti    
  42c8ab:	jae    0x42c891
  42c8ad:	xor    ecx,edx
  42c8af:	or     ecx,DWORD PTR [ecx]
  42c8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8b2:	xor    ebp,0x50
  42c8b5:	mov    cl,0xfe
  42c8b7:	jmp    edx
  42c8b9:	sub    eax,0x6afb5e
  42c8be:	inc    ebx
  42c8bf:	sti    
  42c8c0:	sbb    ch,bl
  42c8c2:	or     ecx,DWORD PTR [ebp-0x3f]
  42c8c5:	ins    BYTE PTR es:[edi],dx
  42c8c6:	nop
  42c8c7:	call   0xd364d281
  42c8cc:	dec    edi
  42c8cd:	add    edi,DWORD PTR [ebx-0x2c7531a1]
  42c8d3:	sar    BYTE PTR [edi],cl
  42c8d5:	mov    edi,0x8ae399d9
  42c8da:	(bad)  
  42c8db:	cld    
  42c8dc:	fild   WORD PTR [ebp-0x40e02d53]
  42c8e2:	gs into 
  42c8e4:	mov    edx,0xe46650e
  42c8e9:	mov    edi,0x6a0084e1
  42c8ee:	call   0xd542c8f6
  42c8f3:	push   cs
  42c8f4:	ins    DWORD PTR es:[edi],dx
  42c8f5:	sbb    esi,edi
  42c8f7:	mov    esi,0x29546c9
  42c8fc:	test   al,0x4f
  42c8fe:	add    eax,0xdfd30db1
  42c903:	mov    esi,0xe6931ed
  42c908:	data16 sti 
  42c90a:	iret   
  42c90b:	mov    esi,0x1a8702a1
  42c910:	data16 int 0xcd
  42c913:	xor    eax,0xe9c086f8
  42c918:	adc    al,0x0
  42c91a:	push   esp
  42c91b:	ret    
  42c91c:	dec    eax
  42c91d:	add    edx,ebp
  42c91f:	or     edx,ebp
  42c921:	mov    ch,cl
  42c923:	mov    esi,0x49dbd271
  42c928:	scas   al,BYTE PTR es:[edi]
  42c929:	les    ecx,FWORD PTR [esi]
  42c92b:	loop   0x42c97c
  42c92d:	ror    DWORD PTR [esi+edi*4+0x2e1f0e59],1
  42c934:	loop   0x42c8bc
  42c936:	mov    ds:0xdfd249bf,eax
  42c93b:	ja     0x42c912
  42c93d:	xchg   BYTE PTR [eax+0x13],ah
  42c940:	jmp    0x8735:0xffbf6d87
  42c947:	aas    
  42c948:	mul    dl
  42c94a:	xlat   BYTE PTR ds:[ebx]
  42c94b:	test   edi,ebx
  42c94d:	daa    
  42c94e:	daa    
  42c94f:	ret    
  42c950:	jle    0x42c975
  42c952:	inc    edx
  42c953:	adc    eax,DWORD PTR [esi+edi*1-0x3cdc0000]
  42c95a:	cli    
  42c95b:	push   0x20
  42c95d:	or     eax,0xc0146d0b
  42c962:	cli    
  42c963:	(bad)  
  42c964:	push   esi
  42c965:	mov    ah,0x84
  42c967:	jmp    0x654dd342
  42c96c:	sbb    al,al
  42c96e:	cli    
  42c96f:	out    0x90,al
  42c971:	dec    ecx
  42c972:	aaa    
  42c973:	test   al,0xa5
  42c975:	sub    eax,0xffffff9e
  42c978:	daa    
  42c979:	ret    
  42c97a:	cli    
  42c97b:	adc    ah,BYTE PTR [edi+0x6d6a0b2d]
  42c981:	sar    dl,0xbe
  42c984:	aam    0x7b
  42c986:	push   cs
  42c987:	push   0xb
  42c989:	add    al,0x74
  42c98b:	rcr    BYTE PTR [ecx-0x49],cl
  42c98e:	push   es
  42c98f:	sbb    eax,0xedf63ccf
  42c994:	sub    bl,BYTE PTR [ebx]
  42c996:	jg     0x42c92b
  42c998:	mov    edx,0xa3680c39
  42c99d:	xchg   bh,bh
  42c99f:	call   0x72c7da7a
  42c9a4:	xchg   eax,eax
  42c9a6:	cli    
  42c9a7:	sub    dl,BYTE PTR [ecx]
  42c9a9:	cmc    
  42c9aa:	shr    ch,0x94
  42c9ad:	mov    dl,0x7f
  42c9af:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42c9b1:	ror    BYTE PTR [eax-0x3f0b755c],0xe6
  42c9b8:	sti    
  42c9b9:	xor    eax,0x4efa
  42c9be:	test   ah,dh
  42c9c0:	pop    ecx
  42c9c1:	add    BYTE PTR [eax-0x5dad84f6],al
  42c9c7:	(bad)  
  42c9c9:	pminub mm0,QWORD PTR [esi]
  42c9cc:	adc    DWORD PTR [esi+0x48],0xffffffe3
  42c9d0:	dec    BYTE PTR [edi]
  42c9d2:	cmp    BYTE PTR [edx],cl
  42c9d4:	test   DWORD PTR [edx+eiz*8-0x26],ebx
  42c9d8:	cmc    
  42c9d9:	inc    ebx
  42c9da:	jecxz  0x42ca20
  42c9dc:	adc    al,0x39
  42c9de:	push   ecx
  42c9df:	mov    ch,0x76
  42c9e1:	faddp  st(5),st
  42c9e3:	inc    edi
  42c9e4:	idiv   bh
  42c9e6:	and    eax,DWORD PTR [eax+0x44]
  42c9e9:	adc    al,0x67
  42c9eb:	enter  0x8d05,0x3f
  42c9ef:	fcomi  st,st(5)
  42c9f1:	push   DWORD PTR [edi+0x6f0f6bf7]
  42c9f7:	call   0xa66c9f1
  42c9fc:	scas   al,BYTE PTR es:[edi]
  42c9fd:	add    esi,DWORD PTR [edi+0x2]
  42ca00:	xor    al,0xf6
  42ca02:	clc    
  42ca03:	mov    eax,0x1e780efe
  42ca08:	idiv   bh
  42ca0a:	and    eax,DWORD PTR [esi-0x9]
  42ca0d:	inc    ebp
  42ca0e:	test   al,0xf
  42ca10:	dec    ebp
  42ca11:	adc    al,0xf0
  42ca13:	ja     0x42c9fc
  42ca15:	sbb    al,0x62
  42ca17:	fprem1 
  42ca19:	mov    ecx,ebp
  42ca1b:	shl    DWORD PTR [ecx],0xc1
  42ca1e:	xchg   ebx,eax
  42ca1f:	cmp    edx,DWORD PTR [eax]
  42ca21:	inc    BYTE PTR [eax]
  42ca23:	add    BYTE PTR [ebx-0x27],dl
  42ca26:	xor    DWORD PTR [esi-0x30],ebx
  42ca29:	or     bh,BYTE PTR [ebx-0x12]
  42ca2c:	and    edx,ebx
  42ca2e:	cmc    
  42ca2f:	bswap  edx
  42ca31:	add    eax,0xdfe85683
  42ca36:	dec    BYTE PTR [edi]
  42ca38:	ins    DWORD PTR es:[edi],dx
  42ca39:	or     DWORD PTR [ebp-0x2faa2a08],eax
  42ca3f:	cli    
  42ca40:	push   ss
  42ca41:	dec    esp
  42ca42:	inc    edx
  42ca43:	adc    al,0xac
  42ca45:	jne    0x42ca39
  42ca47:	jnp    0x42c9cc
  42ca49:	pop    ecx
  42ca4a:	(bad)  
  42ca4c:	pop    edx
  42ca4d:	repz jne 0x42ca94
  42ca50:	jmp    0x584d880c
  42ca55:	inc    ebx
  42ca56:	retf   0x42fa
  42ca59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca5a:	xor    BYTE PTR [edx+ecx*8+0x2f],ch
  42ca5e:	mov    edi,esp
  42ca60:	xor    cl,BYTE PTR [ebx]
  42ca62:	add    BYTE PTR [edx+0x343937d6],dh
  42ca68:	sub    esp,DWORD PTR [esi+0x2eca00ee]
  42ca6e:	leave  
  42ca6f:	cld    
  42ca70:	adc    ch,BYTE PTR [ebx-0x416f04c2]
  42ca76:	or     ecx,DWORD PTR [ebp-0x17]
  42ca79:	pop    esi
  42ca7a:	stos   BYTE PTR es:[edi],al
  42ca7b:	call   0xfb0d9fbd
  42ca80:	pop    esp
  42ca81:	in     eax,0xf7
  42ca83:	ss adc al,0xb3
  42ca86:	jg     0x42ca34
  42ca88:	add    BYTE PTR [eax],al
  42ca8a:	loopne 0x42cb06
  42ca8c:	retf   0x7b36
  42ca8f:	inc    esi
  42ca90:	sti    
  42ca91:	jle    0x42caf2
  42ca93:	outs   dx,BYTE PTR ds:[esi]
  42ca94:	retf   0xdafa
  42ca97:	pop    edx
  42ca98:	inc    DWORD PTR [esi+0x3d4d52b]
  42ca9e:	in     eax,0xc0
  42caa0:	stc    
  42caa1:	test   BYTE PTR [ecx-0x72],cl
  42caa4:	retf   0x16fa
  42caa7:	test   BYTE PTR [eax+0x14],cl
  42caaa:	fsub   st(5),st
  42caac:	idiv   DWORD PTR [ebx+0x7b]
  42caaf:	mov    al,BYTE PTR [ecx+0x7d2c92fc]
  42cab5:	inc    esp
  42cab6:	loope  0x42cac1
  42cab8:	push   ds
  42cab9:	(bad)
  42cabc:	fst    st(0)
  42cabe:	jg     0x42ca7b
  42cac0:	or     eax,0x660b012e
  42cac5:	sub    al,0x68
  42cac7:	mov    ebx,0x724ff41
  42cacc:	outs   dx,BYTE PTR ds:[esi]
  42cacd:	mov    eax,ss:0xe2f3ecb3
  42cad3:	or     ah,BYTE PTR [ebp+0x62]
  42cad6:	dec    eax
  42cad7:	mov    ebx,0x453e4321
  42cadc:	cmc    
  42cadd:	or     al,0x88
  42cadf:	adc    eax,0x563dad95
  42cae4:	or     al,0xcf
  42cae6:	das    
  42cae7:	or     edi,DWORD PTR [ebx]
  42cae9:	inc    edi
  42caea:	(bad)  [edx]
  42caec:	xor    edi,DWORD PTR [edi]
  42caee:	add    BYTE PTR [eax],al
  42caf0:	ror    al,1
  42caf2:	or     ah,bh
  42caf4:	fcmovne st,st(0)
  42caf6:	pop    ebx
  42caf7:	push   eax
  42caf8:	(bad)  
  42caf9:	push   es
  42cafa:	into   
  42cafb:	dec    bh
  42cafd:	jae    0x42cb20
  42caff:	add    eax,0x22173ce
  42cb04:	adc    al,0xaa
  42cb06:	loopne 0x42cb02
  42cb08:	adc    eax,0x9f83c107
  42cb0d:	push   ebp
  42cb0e:	xor    eax,0xcc96ede0
  42cb13:	into   
  42cb14:	iret   
  42cb15:	or     dh,BYTE PTR [ebx+0x3e]
  42cb18:	retf   0x5b0b
  42cb1b:	ss fxch st(0)
  42cb1e:	xchg   ebx,edi
  42cb20:	ror    edi,cl
  42cb22:	pop    edi
  42cb23:	inc    eax
  42cb24:	test   eax,0x1f0aa006
  42cb29:	push   ss
  42cb2a:	bnd jg 0x42cb0e
  42cb2d:	push   es
  42cb2e:	jmp    0x4e536
  42cb33:	pop    es
  42cb34:	and    eax,0xb124c311
  42cb39:	mov    ebx,0xa2d6e9fa
  42cb3e:	dec    edx
  42cb3f:	push   0xffffffed
  42cb41:	jmp    0x82f40d45
  42cb46:	inc    esp
  42cb47:	add    eax,0xbcfb5a11
  42cb4c:	mov    dh,0xe
  42cb4e:	mov    dl,0xe6
  42cb50:	mov    esi,DWORD PTR ds:0xe61c
  42cb56:	push   0x96cabf8a
  42cb5b:	or     ebx,edi
  42cb5d:	pushf  
  42cb5e:	cs mov ebx,0x350bb7d1
  42cb64:	adc    BYTE PTR [edx+0x6f],ah
  42cb67:	mov    edi,0x351bdd74
  42cb6c:	or     BYTE PTR [ecx],dl
  42cb6e:	out    dx,eax
  42cb6f:	test   al,0xfa
  42cb71:	(bad)  
  42cb72:	push   edx
  42cb73:	jp     0x42cbe8
  42cb75:	loop   0x42cb5c
  42cb77:	pop    ds
  42cb78:	cld    
  42cb79:	out    dx,al
  42cb7a:	sbb    BYTE PTR [edi],cl
  42cb7c:	test   DWORD PTR ds:0xeefab9fc,edi
  42cb82:	pusha  
  42cb83:	inc    edi
  42cb84:	add    esi,esp
  42cb86:	dec    eax
  42cb87:	dec    edi
  42cb88:	(bad)  
  42cb89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb8a:	icebp  
  42cb8b:	add    DWORD PTR [edi],eax
  42cb8d:	test   al,0xd4
  42cb8f:	ror    DWORD PTR [edx],0x77
  42cb92:	nop
  42cb93:	or     BYTE PTR [ebx],cl
  42cb95:	jg     0x42cba7
  42cb97:	mov    eax,0x10c9c9bf
  42cb9c:	shr    DWORD PTR [ecx-0x1b],0xf1
  42cba0:	push   ebx
  42cba1:	adc    eax,0xc97d386d
  42cba6:	(bad)  
  42cba7:	add    al,0x85
  42cba9:	dec    ebx
  42cbaa:	aam    0x9
  42cbac:	add    BYTE PTR [eax],al
  42cbae:	stos   DWORD PTR es:[edi],eax
  42cbaf:	lahf   
  42cbb0:	std    
  42cbb1:	push   cs
  42cbb2:	loop   0x42cb41
  42cbb4:	mov    edx,0xfb0dbc63
  42cbb9:	test   DWORD PTR [eax],0x83005700
  42cbbf:	push   ebp
  42cbc0:	adc    BYTE PTR [ebx-0x6],0xfe
  42cbc4:	mov    eax,ds:0x6475f5a9
  42cbc9:	push   esi
  42cbcb:	jne    0x42cc39
  42cbcd:	(bad)  
  42cbce:	jae    0x42cbdc
  42cbd0:	sbb    esp,DWORD PTR [ecx+0x8]
  42cbd3:	call   0x3879ec
  42cbd8:	ror    ebp,0x5
  42cbdb:	test   DWORD PTR [esp+esi*4],eax
  42cbde:	cli    
  42cbdf:	inc    edi
  42cbe1:	dec    eax
  42cbe2:	and    bl,ch
  42cbe4:	daa    
  42cbe5:	xor    cl,BYTE PTR [esp-0x49]
  42cbe9:	add    BYTE PTR [ecx+eax*2],dl
  42cbec:	ins    DWORD PTR es:[edi],dx
  42cbed:	std    
  42cbee:	div    BYTE PTR [ebp+0x38]
  42cbf1:	xor    al,dl
  42cbf3:	jmp    DWORD PTR [ecx-0x6e00af2c]
  42cbf9:	mov    esp,0xc62875f5
  42cbfe:	jae    0x42cc08
  42cc00:	and    al,0x72
  42cc02:	(bad)  
  42cc04:	sbb    edx,DWORD PTR [eax+0x71810fba]
  42cc0a:	add    al,0x0
  42cc0c:	cld    
  42cc0d:	mov    DWORD PTR [ebp+0x202f6f03],edi
  42cc13:	add    BYTE PTR [edi+0xe],ah
  42cc16:	xor    eax,DWORD PTR [esi-0x40]
  42cc19:	lds    eax,FWORD PTR [eax]
  42cc1b:	(bad)  
  42cc1d:	into   
  42cc1e:	(bad)  
  42cc20:	add    BYTE PTR [eax],al
  42cc22:	jnp    0x42cc76
  42cc24:	clc    
  42cc25:	jmp    0x3d7f35
  42cc2a:	aad    0xc
  42cc2c:	fld1   
  42cc2e:	jge    0x42cbdc
  42cc30:	(bad)  
  42cc31:	dec    DWORD PTR [esi-0x3]
  42cc34:	daa    
  42cc35:	or     esp,DWORD PTR [ebx+0x1f]
  42cc38:	inc    DWORD PTR [eax+0x24]
  42cc3b:	inc    eax
  42cc3c:	push   edx
  42cc3d:	and    BYTE PTR [eax-0x11],bl
  42cc40:	std    
  42cc41:	cli    
  42cc42:	or     BYTE PTR [edi],cl
  42cc44:	ja     0x42cc8a
  42cc46:	leave  
  42cc47:	push   edi
  42cc48:	push   edx
  42cc49:	sbb    BYTE PTR [esi-0x15],bl
  42cc4c:	xor    al,0xfb
  42cc4e:	loopne 0x42cc02
  42cc50:	or     ebp,DWORD PTR cs:[ebx]
  42cc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc54:	sti    
  42cc55:	mov    cl,0x55
  42cc57:	loop   0x42ccb8
  42cc59:	inc    eax
  42cc5a:	aad    0xff
  42cc5c:	push   ecx
  42cc5d:	or     dh,dl
  42cc5f:	out    dx,eax
  42cc60:	dec    edi
  42cc62:	sub    eax,0x3afade9e
  42cc67:	cmp    eax,edi
  42cc69:	xor    BYTE PTR [edx],0xbd
  42cc6c:	retf   0x2afa
  42cc6f:	popf   
  42cc70:	jmp    0xcc75786f
  42cc75:	je     0x42cc40
  42cc77:	mov    bh,0xf4
  42cc79:	aaa    
  42cc7a:	jmp    0x42ccde
  42cc7c:	(bad)  
  42cc7d:	pop    eax
  42cc7e:	lods   al,BYTE PTR ds:[esi]
  42cc7f:	sub    eax,0x39ce74bf
  42cc84:	es jo  0x42cc87
  42cc87:	add    BYTE PTR [eax-0x11],cl
  42cc8a:	(bad)  
  42cc8b:	call   0x417930
  42cc90:	push   esi
  42cc91:	mov    BYTE PTR [edi-0x1],ah
  42cc94:	loop   0x42cc37
  42cc96:	(bad)  
  42cc97:	je     0x42cc65
  42cc99:	cmp    eax,DWORD PTR [ecx+0xc]
  42cc9c:	pop    esp
  42cc9d:	daa    
  42cc9e:	push   0x79a1caff
  42cca3:	ret    0xaac
  42cca6:	(bad)  
  42cca8:	mov    edx,0xf9416db7
  42ccad:	dec    ecx
  42ccae:	cmp    ebx,ecx
  42ccb0:	and    edx,ebp
  42ccb2:	fst    DWORD PTR [ecx-0x18044929]
  42ccb8:	iret   
  42ccb9:	jg     0x42cd13
  42ccbb:	les    esi,FWORD PTR [ebx]
  42ccbd:	dec    edx
  42ccbe:	jmp    0xe654ce8d
  42ccc3:	mov    dl,0x24
  42ccc5:	mov    bh,0xdb
  42ccc7:	repz push ebx
  42ccc9:	ret    
  42ccca:	pop    ecx
  42cccb:	push   ecx
  42cccc:	loope  0x42cc84
  42ccce:	(bad)  
  42ccd0:	jb     0x42ccdb
  42ccd2:	dec    ecx
  42ccd3:	retf   
  42ccd4:	pop    edi
  42ccd5:	lea    ebp,[eax]
  42ccd7:	sti    
  42ccd8:	push   ecx
  42ccd9:	or     edi,ebp
  42ccdb:	add    edx,ebp
  42ccdd:	jno    0x42ccad
  42ccdf:	(bad)  
  42cce0:	dec    edi
  42cce1:	mov    bh,0x3f
  42cce3:	outs   dx,BYTE PTR ds:[esi]
  42cce4:	cmp    esi,DWORD PTR [edi-0x126e80df]
  42ccea:	test   al,0x33
  42ccec:	add    BYTE PTR [eax],al
  42ccee:	cs cmp eax,0xf64fac9
  42ccf4:	or     dl,BYTE PTR [ecx-0x3f]
  42ccf7:	push   es
  42ccf8:	cmp    esi,DWORD PTR [edx+ebx*2+0x2b]
  42ccfc:	test   eax,0xd13d0e03
  42cd01:	push   es
  42cd02:	es pusha 
  42cd04:	jmp    0x81ca:0xad82e550
  42cd0b:	add    eax,0xa1dd50da
  42cd10:	lods   al,BYTE PTR ds:[esi]
  42cd11:	stos   BYTE PTR es:[edi],al
  42cd12:	out    dx,eax
  42cd13:	mov    dh,0x63
  42cd15:	ret    
  42cd16:	iret   
  42cd17:	mov    WORD PTR [esp+edi*8-0x117f4926],gs
  42cd1e:	into   
  42cd1f:	mov    dh,0xff
  42cd21:	mov    ch,0xa9
  42cd23:	push   ebp
  42cd24:	out    0xae,eax
  42cd26:	(bad)  
  42cd27:	pop    DWORD PTR [ebp+ecx*8-0x41]
  42cd2b:	js     0x42cd7f
  42cd2d:	call   0x1d3e2748
  42cd32:	icebp  
  42cd33:	add    dh,BYTE PTR [edx+0x1c3d8fe6]
  42cd39:	test   BYTE PTR [esi+esi*1-0x40],0xa
  42cd3e:	sbb    DWORD PTR [edx],ecx
  42cd40:	sti    
  42cd41:	cld    
  42cd42:	jle    0x42ccfb
  42cd44:	rcl    DWORD PTR [edi],0x8e
  42cd47:	cmp    eax,0xb346ea10
  42cd4c:	je     0x42cd3b
  42cd4e:	repz iret 
  42cd50:	cli    
  42cd51:	fadd   QWORD PTR [eax]
  42cd53:	add    BYTE PTR [esi-0x52],ch
  42cd56:	sub    BYTE PTR [esi],0x8f
  42cd59:	mov    bl,0x84
  42cd5b:	sub    DWORD PTR [edi-0x73],ebx
  42cd5e:	xor    al,0xd6
  42cd61:	or     DWORD PTR [eax-0x54ced2e],edi
  42cd67:	push   0x17
  42cd69:	mov    ah,0x87
  42cd6b:	addr16 mov dl,0xb6
  42cd6e:	cli    
  42cd6f:	jmp    0xe94bed85
  42cd74:	(bad)  
  42cd75:	mov    es,WORD PTR [ebp+eax*8-0x6a]
  42cd79:	pop    ecx
  42cd7a:	sti    
  42cd7b:	jl     0x42cd73
  42cd7d:	add    dh,BYTE PTR [edx+0x1c3d1fe6]
  42cd83:	out    0x64,al
  42cd85:	xchg   BYTE PTR [edi-0x4f66976],bh
  42cd8b:	pop    esp
  42cd8c:	jmp    0x1c7a9f47
  42cd91:	cmp    eax,0xb3286210
  42cd96:	je     0x42cd75
  42cd98:	or     eax,0x400083d
  42cd9d:	add    al,0xd7
  42cd9f:	call   DWORD PTR [ebx+0x390fbb35]
  42cda5:	pop    es
  42cda6:	or     DWORD PTR [eax],eax
  42cda8:	lods   al,BYTE PTR ds:[esi]
  42cda9:	xor    BYTE PTR [ecx+0x70],bl
  42cdac:	xor    al,0xa2
  42cdae:	idiv   bh
  42cdb0:	push   ebx
  42cdb1:	ror    edi,1
  42cdb3:	jmp    0x0:0x4581c343
  42cdba:	cwde   
  42cdbb:	mov    dl,0xb0
  42cdbd:	push   edi
  42cdbe:	lods   eax,DWORD PTR ds:[esi]
  42cdbf:	dec    ecx
  42cdc0:	push   eax
  42cdc1:	dec    DWORD PTR [ecx+0x7bb606e9]
  42cdc7:	ret    0x1c73
  42cdca:	mov    ds:0x8fc07a9b,eax
  42cdcf:	dec    ecx
  42cdd0:	add    bh,bh
  42cdd2:	mov    DWORD PTR [ecx-0x3dd53907],esp
  42cdd8:	jae    0x42cdea
  42cdda:	outs   dx,DWORD PTR ds:[esi]
  42cddb:	jns    0x42cdd2
  42cddd:	jne    0x42ce3f
  42cddf:	ss ret 0x89ff
  42cde3:	mov    cl,0xe2
  42cde5:	cmc    
  42cde6:	loop   0x42cdaa
  42cde8:	cmc    
  42cde9:	test   esp,ebp
  42cdeb:	mov    dl,0x83
  42cded:	cmc    
  42cdee:	inc    esp
  42cdef:	or     DWORD PTR [eax],eax
  42cdf1:	cmp    ebx,0xb
  42cdf4:	mov    DWORD PTR [esi+0x4c],edi
  42cdf7:	sbb    DWORD PTR [ebx],0xe7c2d3fc
  42cdfd:	in     eax,0x24
  42cdff:	or     DWORD PTR [eax],eax
  42ce01:	mov    edi,DWORD PTR [ecx]
  42ce03:	adc    eax,0x44035040
  42ce08:	and    BYTE PTR [edi],cl
  42ce0a:	retf   0xf70a
  42ce0d:	jne    0x42cddf
  42ce0f:	mov    dl,0xb0
  42ce11:	nop
  42ce12:	cmp    al,0x2e
  42ce14:	inc    eax
  42ce15:	add    ch,dl
  42ce17:	fisttp DWORD PTR [ecx+0x18]
  42ce1a:	(bad)  
  42ce1b:	jnp    0x42ce4d
  42ce1d:	sti    
  42ce1e:	add    BYTE PTR [eax],al
  42ce20:	pusha  
  42ce21:	sar    BYTE PTR [ebx-0x3a],cl
  42ce24:	sar    ch,cl
  42ce26:	idiv   edx
  42ce28:	inc    eax
  42ce29:	stos   DWORD PTR es:[edi],eax
  42ce2a:	(bad)  
  42ce2b:	lods   eax,DWORD PTR ds:[esi]
  42ce2c:	mov    ds:0x9584c763,eax
  42ce31:	mov    ebx,0xa2ddad79
  42ce36:	(bad)  
  42ce37:	mov    bh,0xcb
  42ce39:	sahf   
  42ce3a:	(bad)  
  42ce3b:	cli    
  42ce3c:	lods   al,BYTE PTR ds:[esi]
  42ce3d:	out    0xd9,eax
  42ce3f:	cli    
  42ce40:	call   0x2ffc:0xe2243a37
  42ce47:	add    DWORD PTR ds:0xb574c913,edx
  42ce4d:	rcl    DWORD PTR [eax-0x1d2a85fe],cl
  42ce53:	or     ch,BYTE PTR [ebx]
  42ce55:	and    bh,BYTE PTR [edi-0x385ceaa2]
  42ce5b:	je     0x42ce1a
  42ce5d:	lahf   
  42ce5e:	mov    edi,0xee755a51
  42ce63:	(bad)  
  42ce64:	and    dh,bl
  42ce66:	dec    ecx
  42ce67:	or     al,0x5e
  42ce69:	out    0xc7,eax
  42ce6b:	je     0x42ce3a
  42ce6d:	dec    edx
  42ce6e:	pop    eax
  42ce6f:	fidivr DWORD PTR [edx]
  42ce71:	jmp    0x42ceec
  42ce73:	mov    edi,0x8582de2
  42ce78:	aad    0xa2
  42ce7a:	xchg   BYTE PTR [ecx],bl
  42ce7c:	and    DWORD PTR [ebx],eax
  42ce7e:	enter  0x2ce8,0xc
  42ce82:	enter  0xfa,0x0
  42ce86:	pop    esi
  42ce87:	ins    BYTE PTR es:[edi],dx
  42ce88:	repnz shl ah,0x9f
  42ce8c:	jnp    0x42cea1
  42ce8e:	aam    0x29
  42ce90:	xor    dl,BYTE PTR [esi+ecx*2]
  42ce93:	or     DWORD PTR ds:0x2b82d905,esi
  42ce99:	fcom   DWORD PTR [ebx+0x43]
  42ce9c:	stc    
  42ce9d:	sbb    dl,BYTE PTR [eax-0x1acea043]
  42cea3:	test   esp,ebp
  42cea5:	jnp    0x42cf02
  42cea7:	add    dh,BYTE PTR [eax+0x39]
  42ceaa:	int    0x7f
  42ceac:	bound  eax,QWORD PTR [eax+0x7ce8b3c2]
  42ceb2:	or     DWORD PTR [edx+0x43fbbb6d],esp
  42ceb8:	adc    DWORD PTR [ebx+0x7d06b629],eax
  42cebe:	fidivr DWORD PTR [eax+eiz*8]
  42cec1:	mov    esi,0x3e6ea11
  42cec6:	aad    0x9
  42cec8:	mov    es,WORD PTR [eax]
  42ceca:	or     ch,BYTE PTR ds:0x4d5a03c9
  42ced0:	lds    eax,FWORD PTR [ebx+0x4c]
  42ced3:	dec    ebp
  42ced4:	or     eax,0xe9ede9c7
  42ced9:	(bad)  
  42ceda:	xlat   BYTE PTR ds:[ebx]
  42cedb:	mov    dl,0xdb
  42cedd:	and    ecx,esi
  42cedf:	jnp    0x42cf59
  42cee1:	(bad)  
  42cee2:	sti    
  42cee3:	dec    ecx
  42cee4:	jmp    0xe65898af
  42cee9:	scas   al,BYTE PTR es:[edi]
  42ceea:	add    BYTE PTR [eax],al
  42ceec:	dec    edi
  42ceed:	cmp    eax,0x5c1b7ad1
  42cef2:	sub    dl,BYTE PTR [ecx-0x1b]
  42cef5:	mov    dl,0x9b
  42cef7:	imul   DWORD PTR [edi]
  42cef9:	cmp    eax,0xd534dbf1
  42cefe:	adc    edi,eax
  42cf00:	pop    ecx
  42cf01:	retf   0xfa94
  42cf04:	fst    DWORD PTR [ebx]
  42cf06:	add    eax,0x64030fc7
  42cf0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf0c:	xlat   BYTE PTR ds:[ebx]
  42cf0d:	or     DWORD PTR [eax],eax
  42cf0f:	jmp    0x612b1493
  42cf14:	add    DWORD PTR [esi-0x1291701],0xffffffb1
  42cf1b:	cs sar dh,1
  42cf1e:	mov    cl,0x3e
  42cf20:	xlat   BYTE PTR ds:[ebx]
  42cf21:	enter  0xe1e0,0xdf
  42cf25:	int3   
  42cf26:	(bad)  
  42cf27:	mov    edi,0x3553ef56
  42cf2c:	outs   dx,BYTE PTR ds:[esi]
  42cf2d:	mov    edx,DWORD PTR [ecx-0x1b]
  42cf30:	aas    
  42cf31:	inc    esi
  42cf32:	adc    al,0x62
  42cf34:	or     eax,0xa9e588ba
  42cf39:	mov    edx,DWORD PTR [ecx-0x13]
  42cf3c:	das    
  42cf3d:	ss in  al,dx
  42cf3f:	pusha  
  42cf40:	sbb    bl,BYTE PTR [ecx]
  42cf42:	add    al,0x62
  42cf44:	loopne 0x42cf5f
  42cf46:	daa    
  42cf47:	xor    al,0xa5
  42cf49:	mov    edx,DWORD PTR [ecx-0x13]
  42cf4c:	(bad)  
  42cf4e:	clc    
  42cf4f:	pusha  
  42cf50:	add    BYTE PTR [eax],al
  42cf52:	fimul  DWORD PTR [ebx-0x506d30c4]
  42cf58:	cli    
  42cf59:	fnsave [ecx-0x75]
  42cf5c:	inc    esp
  42cf5d:	in     eax,dx
  42cf5e:	jmp    0xd72c6aeb
  42cf63:	or     DWORD PTR [edi],ebp
  42cf65:	sub    DWORD PTR [ecx-0x78],edi
  42cf68:	add    ch,cl
  42cf6a:	(bad)  
  42cf6b:	mov    al,BYTE PTR [ebp+eax*1-0x6f]
  42cf6f:	pop    ecx
  42cf70:	sti    
  42cf71:	mov    esp,0xe6b1fef6
  42cf76:	adc    edi,DWORD PTR ds:0x8260f61c
  42cf7c:	mov    edi,0xfb09968a
  42cf81:	pushf  
  42cf82:	cs mov bl,0xd1
  42cf85:	mov    bh,0x13
  42cf87:	cmp    eax,0x6f870010
  42cf8c:	cmc    
  42cf8d:	jne    0x42cf87
  42cf8f:	retf   0x873
  42cf92:	aam    0xf7
  42cf94:	fdiv   st(7),st
  42cf96:	jmp    0x42cfc9
  42cf98:	mov    ebx,0xfef8810f
  42cf9d:	(bad)  
  42cf9e:	cld    
  42cf9f:	into   
  42cfa0:	out    dx,eax
  42cfa1:	call   0x5d749bb1
  42cfa6:	hlt    
  42cfa7:	inc    edx
  42cfa8:	sbb    BYTE PTR [ecx],bh
  42cfaa:	or     bh,dl
  42cfac:	je     0x42cf5c
  42cfae:	aad    0xf7
  42cfb0:	push   edi
  42cfb1:	je     0x42cf6d
  42cfb3:	xor    al,BYTE PTR [ecx-0x53ffff78]
  42cfb9:	or     eax,0x4e020300
  42cfbe:	cmp    DWORD PTR [ebp-0x5c],eax
  42cfc1:	inc    ecx
  42cfc2:	xchg   ebx,eax
  42cfc3:	mov    esi,ecx
  42cfc5:	mov    ch,0x87
  42cfc7:	xchg   BYTE PTR [esi+eax*1],ch
  42cfca:	add    BYTE PTR [eax],al
  42cfcc:	pop    es
  42cfcd:	icebp  
  42cfce:	pop    es
  42cfcf:	mov    DWORD PTR [edx+0x78458355],esi
  42cfd5:	xor    al,0x81
  42cfd7:	pushf  
  42cfd8:	ins    BYTE PTR es:[edi],dx
  42cfd9:	or     eax,0xc9418b00
  42cfde:	in     eax,dx
  42cfdf:	fcom   st(7)
  42cfe1:	lds    esp,FWORD PTR [ebx]
  42cfe3:	sbb    BYTE PTR [eax],cl
  42cfe5:	(bad)  
  42cfe6:	cmc    
  42cfe7:	mov    DWORD PTR [edx],ebp
  42cfe9:	inc    ecx
  42cfea:	inc    eax
  42cfeb:	jmp    0x3d7e30
  42cff0:	dec    edi
  42cff1:	int    0x3a
  42cff3:	jmp    0x3d8000
  42cff8:	sbb    edi,DWORD PTR [edi+0x3d]
  42cffb:	add    DWORD PTR [ebx],ebp
  42cffd:	jg     0x42d04c
  42cfff:	add    ah,BYTE PTR [edi-0x2a3e9c09]
  42d005:	add    bh,ah
  42d007:	push   es
  42d008:	pop    ss
  42d009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d00a:	mov    ebp,0x7c29888
  42d00f:	rol    DWORD PTR [eax+0x29647fa8],0xa3
  42d016:	xlat   BYTE PTR ds:[ebx]
  42d017:	bswap  edx
  42d019:	clc    
  42d01a:	cmp    edi,edi
  42d01c:	add    BYTE PTR [eax],al
  42d01e:	jecxz  0x42cfb0
  42d020:	ds add al,0x14
  42d023:	ret    0x6f6
  42d026:	or     eax,0x4ed4322a
  42d02b:	sub    DWORD PTR [ebx-0x1],ebp
  42d02e:	shl    BYTE PTR [edx+0x1da54475],cl
  42d034:	cmp    dl,al
  42d036:	dec    esp
  42d037:	and    BYTE PTR [ebx-0x1],ch
  42d03a:	mov    edx,0xc54177a2
  42d03f:	and    edi,DWORD PTR [esi+edi*8-0x7753f2a3]
  42d046:	sbb    BYTE PTR [ebx-0x440881],al
  42d04c:	clc    
  42d04d:	mov    WORD PTR [eax+0x32],fs
  42d050:	(bad)  
  42d053:	cmp    DWORD PTR [edx],esi
  42d055:	fsubr  QWORD PTR [esi-0x2a]
  42d058:	ja     0x42d021
  42d05a:	xchg   esp,eax
  42d05b:	add    DWORD PTR [eax],0x8682c8fb
  42d061:	ds aad 0x39
  42d064:	cmp    bl,ah
  42d066:	pop    eax
  42d067:	loop   0x42d0b2
  42d069:	add    ebp,edi
  42d06b:	pop    esp
  42d06c:	(bad)  
  42d06d:	test   bl,bl
  42d06f:	mov    ds:0x429086fe,al
  42d074:	mov    esi,0xc392d7df
  42d079:	jno    0x42d044
  42d07b:	fisttp WORD PTR [ecx-0x24]
  42d07e:	xor    cl,BYTE PTR [ecx]
  42d080:	cld    
  42d081:	repz add BYTE PTR [eax],al
  42d084:	les    ecx,FWORD PTR [ecx-0x17]
  42d087:	js     0x42d022
  42d089:	sbb    DWORD PTR [esi+0x36],ebx
  42d08c:	icebp  
  42d08d:	and    BYTE PTR [ebx-0x36b9a421],0x79
  42d094:	or     cl,BYTE PTR [ebx+0x2abef724]
  42d09a:	into   
  42d09b:	les    edi,FWORD PTR [ebx-0x58]
  42d09e:	jmp    0x998d:0x280b177f
  42d0a5:	in     eax,0xd9
  42d0a7:	cmp    DWORD PTR [ecx-0x303b6500],edi
  42d0ad:	ja     0x42d127
  42d0af:	les    esi,FWORD PTR [ebx]
  42d0b1:	dec    edx
  42d0b2:	jmp    0x122cf0bd
  42d0b7:	ret    
  42d0b8:	dec    ecx
  42d0b9:	push   cs
  42d0ba:	pop    esi
  42d0bb:	iret   
  42d0bc:	mov    edi,0xae59d135
  42d0c1:	xor    eax,0xfe21c2f9
  42d0c6:	cdq    
  42d0c7:	cmp    ebp,ecx
  42d0c9:	mov    eax,ds:0xaf9fdfcc
  42d0ce:	pop    edi
  42d0cf:	dec    ecx
  42d0d0:	jmp    0xde48515f
  42d0d5:	test   DWORD PTR [esp+eax*1-0x2b],edx
  42d0d9:	or     DWORD PTR [esp+ebx*1+0x1369af79],esi
  42d0e0:	pop    ecx
  42d0e1:	sub    eax,0x2884d503
  42d0e7:	cmp    BYTE PTR [eax],al
  42d0e9:	add    dh,dl
  42d0eb:	in     al,dx
  42d0ec:	repnz mov edi,0x26d3af5f
  42d0f2:	pusha  
  42d0f3:	inc    ebp
  42d0f4:	sbb    DWORD PTR [ebp+0x3e89654],ecx
  42d0fa:	aad    0x82
  42d0fc:	jmp    FWORD PTR [ebx-0x1420358a]
  42d102:	xchg   BYTE PTR [edx+0x39164574],dh
  42d108:	or     al,0x1e
  42d10a:	mov    esp,0xd6a91219
  42d10f:	xchg   BYTE PTR [ecx+ecx*8-0x19],al
  42d113:	jnp    0x42d15c
  42d115:	call   0xeb924d01
  42d11a:	sbb    DWORD PTR [edx-0x4ff71df9],ebp
  42d120:	mov    edi,0x85e99c60
  42d125:	jmp    0x1d4e9c7d
  42d12a:	jge    0x42d12e
  42d12c:	test   BYTE PTR [ecx+0x16],dl
  42d12f:	mov    ah,0xfa
  42d131:	bound  ebx,QWORD PTR ds:0xb53486da
  42d137:	add    DWORD PTR [ecx+0x9d655],0xf99e4d64
  42d141:	scas   al,BYTE PTR es:[edi]
  42d142:	xchg   edi,eax
  42d143:	test   edi,0xe33f52f6
  42d149:	sahf   
  42d14a:	xchg   edi,eax
  42d14b:	mov    bl,0x14
  42d14d:	dec    ebp
  42d14e:	add    BYTE PTR [eax],al
  42d150:	push   ds
  42d151:	lock (bad) 
  42d153:	jg     0x42d173
  42d155:	stos   DWORD PTR es:[edi],eax
  42d156:	cli    
  42d157:	xchg   BYTE PTR [ebx+0x3d],bl
  42d15a:	fsubr  QWORD PTR [ebp+ecx*2-0x62]
  42d15e:	stc    
  42d15f:	jbe    0x42d0f8
  42d161:	test   edi,0x14b2dcf5
  42d167:	(bad)  
  42d168:	out    dx,al
  42d169:	out    dx,eax
  42d16a:	push   DWORD PTR [ecx+0xd]
  42d16d:	push   ss
  42d16e:	jmp    0x4c9ed8
  42d173:	bound  ebx,QWORD PTR [ebp-0x7eff7927]
  42d179:	into   
  42d17a:	xchg   DWORD PTR [esi+0xaa8],eax
  42d180:	mov    cl,0x81
  42d182:	jmp    0x48c8:0x31cc03fe
  42d189:	add    bh,dh
  42d18b:	adc    eax,0x3a3298
  42d190:	dec    ecx
  42d192:	cmp    ch,cl
  42d194:	mul    DWORD PTR [edx-0xb]
  42d197:	inc    DWORD PTR [edi+0x698b2441]
  42d19d:	push   ss
  42d19e:	inc    eax
  42d19f:	push   eax
  42d1a0:	add    esi,esi
  42d1a2:	pop    ds
  42d1a3:	jmp    FWORD PTR [ecx+0xe]
  42d1a6:	div    DWORD PTR [ebp+0x4]
  42d1a9:	bound  edi,QWORD PTR [esi]
  42d1ab:	fiadd  WORD PTR [ebx]
  42d1ad:	enter  0x4581,0xdc
  42d1b1:	add    BYTE PTR [eax-0x43ffff80],0x9
  42d1b8:	add    BYTE PTR [ebx+0x5e88fdf9],cl
  42d1be:	or     BYTE PTR [ecx-0x27688fc0],al
  42d1c4:	add    DWORD PTR [ebp+0x64],0xa31443b1
  42d1cb:	jl     0x42d196
  42d1cd:	out    0x43,al
  42d1cf:	retf   
  42d1d0:	cmc    
  42d1d1:	jne    0x42d177
  42d1d3:	jle    0x42d228
  42d1d5:	hlt    
  42d1d6:	arpl   bp,si
  42d1d8:	out    dx,eax
  42d1d9:	mov    edi,DWORD PTR [edx]
  42d1db:	jg     0x42d19e
  42d1dd:	call   0x389daa
  42d1e2:	jmp    0xc3c6d7ac
  42d1e7:	add    eax,0x4c7f0000
  42d1ec:	hlt    
  42d1ed:	(bad)  
  42d1ee:	cmp    DWORD PTR ds:0xfed575f7,edx
  42d1f4:	sub    DWORD PTR [eax],eax
  42d1f6:	push   edx
  42d1f7:	(bad)  
  42d1f8:	sbb    al,BYTE PTR [edi+0x18334422]
  42d1fe:	dec    esi
  42d1ff:	clc    
  42d200:	push   ebp
  42d201:	sti    
  42d202:	rcl    dl,0xbf
  42d205:	je     0x42d1e8
  42d207:	(bad)  [edx]
  42d209:	or     BYTE PTR ds:0x22fada17,bh
  42d20f:	les    esi,FWORD PTR es:[ebx+0x67]
  42d213:	or     ch,BYTE PTR [ebp-0x7a5d2afd]
  42d219:	pop    esp
  42d21a:	add    BYTE PTR [eax],al
  42d21c:	or     DWORD PTR [edx],edi
  42d21e:	dec    ebx
  42d21f:	adc    al,0xbe
  42d221:	cli    
  42d222:	cmp    cl,BYTE PTR [edx-0x6]
  42d225:	sub    eax,0xb6888717
  42d22a:	mov    edi,0xc937e574
  42d22f:	xchg   BYTE PTR [esi],cl
  42d231:	(bad)  [ebx]
  42d233:	(bad)  
  42d234:	fcmovbe st,st(3)
  42d236:	cmp    DWORD PTR [edi+0x5d03b349],0x1441c3c1
  42d240:	dec    esi
  42d241:	in     eax,0x17
  42d243:	aaa    
  42d244:	adc    BYTE PTR [ebx+0x3a],bh
  42d247:	fdivr  QWORD PTR [esi+0x29498bbb]
  42d24d:	push   ds
  42d24e:	(bad)  
  42d24f:	jae    0x42d20e
  42d251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d252:	pusha  
  42d253:	ins    BYTE PTR es:[edi],dx
  42d254:	daa    
  42d255:	mov    al,0xfb
  42d257:	pop    esp
  42d258:	fst    QWORD PTR [esi+ecx*1]
  42d25b:	das    
  42d25c:	xchg   ebp,eax
  42d25d:	loop   0x42d1e5
  42d25f:	inc    ecx
  42d260:	and    eax,ecx
  42d262:	(bad)  
  42d263:	or     cl,BYTE PTR [edx-0x4e]
  42d266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d267:	cli    
  42d268:	jb     0x42d2e1
  42d26a:	pop    ecx
  42d26b:	cld    
  42d26c:	fimul  DWORD PTR [ecx]
  42d26e:	div    DWORD PTR [si-0x54]
  42d272:	pop    ecx
  42d273:	mov    WORD PTR [ecx],ss
  42d275:	out    0xa8,al
  42d277:	mov    bl,BYTE PTR [ecx-0xec9b61b]
  42d27d:	sbb    BYTE PTR [ecx],0x2d
  42d280:	add    BYTE PTR [eax],al
  42d282:	aad    0xac
  42d284:	mov    bl,0x1f
  42d286:	push   edx
  42d287:	shl    BYTE PTR [ecx],0x36
  42d28a:	int    0x53
  42d28c:	sub    dh,BYTE PTR [esi]
  42d28e:	lds    ebp,FWORD PTR [ebx+ebx*4-0xec9e1f1]
  42d295:	stos   DWORD PTR es:[edi],eax
  42d296:	mov    ah,0xcf
  42d298:	adc    eax,eax
  42d29a:	pop    ecx
  42d29b:	leave  
  42d29c:	fld    DWORD PTR [esi+0x3e90574]
  42d2a2:	mov    edx,0x99fbf54e
  42d2a7:	lods   eax,DWORD PTR ds:[esi]
  42d2a8:	jne    0x42d27f
  42d2aa:	std    
  42d2ab:	scas   al,BYTE PTR es:[edi]
  42d2ac:	add    eax,eax
  42d2ae:	out    dx,eax
  42d2af:	jg     0x42d2e3
  42d2b1:	inc    eax
  42d2b2:	pop    eax
  42d2b3:	ret    0x87e9
  42d2b6:	out    dx,eax
  42d2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2b8:	sar    DWORD PTR [edi+0xf3d4c0b],1
  42d2be:	dec    ebx
  42d2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2c0:	retf   
  42d2c1:	mov    edi,0xc1befbf
  42d2c6:	into   
  42d2c7:	adc    DWORD PTR [ebx-0xa545057],0xffffffc3
  42d2ce:	jmp    0x8fc1:0xea602a80
  42d2d5:	shl    DWORD PTR [ebx+ebp*4-0x4de6746f],0xcf
  42d2dd:	dec    eax
  42d2de:	loope  0x42d2da
  42d2e0:	jae    0x42d2aa
  42d2e2:	jns    0x42d28f
  42d2e4:	jns    0x42d2e1
  42d2e6:	add    BYTE PTR [eax],al
  42d2e8:	sbb    al,0x1e
  42d2ea:	add    dh,ah
  42d2ec:	push   edi
  42d2ed:	mov    edi,0x2a6ee1
  42d2f2:	mov    dl,0xea
  42d2f4:	dec    edi
  42d2f5:	ret    
  42d2f6:	cmp    edx,DWORD PTR cs:[esi-0x56]
  42d2fa:	add    ch,BYTE PTR [ebx-0x637932d9]
  42d300:	or     dl,0xe7
  42d303:	jmp    0xbb52:0xaa08074c
  42d30a:	or     ch,BYTE PTR [ebp+0x75]
  42d30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d30e:	cli    
  42d30f:	cs push 0x46
  42d312:	adc    al,0x26
  42d314:	fsubr  st(5),st
  42d316:	gs jmp 0x625f0977
  42d31c:	sub    dh,BYTE PTR [eax-0x3ba00e8c]
  42d322:	push   ecx
  42d323:	push   es
  42d324:	mov    esp,0xca74fb19
  42d329:	scas   al,BYTE PTR es:[edi]
  42d32a:	je     0x42d30d
  42d32c:	ds mov ebp,0x862beed8
  42d332:	mov    edi,0xd0a17a5d
  42d337:	jmp    0xf395:0x348909d6
  42d33e:	(bad)  
  42d33f:	dec    esp
  42d340:	and    ebx,esi
  42d342:	pop    ecx
  42d343:	push   ebp
  42d344:	push   es
  42d345:	loop   0x42d351
  42d347:	ja     0x42d320
  42d349:	add    bh,0xfa
  42d34c:	add    BYTE PTR [eax],al
  42d34e:	test   BYTE PTR [ebx],ch
  42d350:	loope  0x42d338
  42d352:	adc    al,0xbb
  42d354:	fnsave [edx+0x5]
  42d357:	mov    dh,0xc0
  42d359:	xchg   ecx,eax
  42d35a:	xlat   BYTE PTR ds:[ebx]
  42d35b:	add    DWORD PTR [ebx],0xffffffe1
  42d35e:	pop    edx
  42d35f:	mov    edx,0xaf17c173
  42d364:	inc    esp
  42d365:	add    BYTE PTR [eax-0x68ebbc81],ah
  42d36b:	inc    ecx
  42d36c:	clc    
  42d36d:	jl     0x42d3c0
  42d36f:	pop    edi
  42d370:	adc    al,0x8b
  42d372:	mov    dl,0x49
  42d374:	test   eax,eax
  42d376:	adc    BYTE PTR [edi],0x33
  42d379:	pop    ebp
  42d37a:	fs hlt 
  42d37c:	add    eax,0x8945f533
  42d381:	dec    esi
  42d382:	js     0x42d333
  42d384:	mov    edi,0xde53cb0f
  42d389:	(bad)  
  42d38a:	sti    
  42d38b:	scas   eax,DWORD PTR es:[edi]
  42d38c:	pop    ebx
  42d38d:	cld    
  42d38e:	cmp    ecx,DWORD PTR [eax+0x6bfbe511]
  42d394:	add    DWORD PTR [ebp+0x10],0x10458946
  42d39b:	imul   esi,DWORD PTR [ebx+0x24],0x77
  42d39f:	shl    DWORD PTR [eax+eax*1-0x25],cl
  42d3a3:	icebp  
  42d3a4:	sbb    ecx,DWORD PTR [ebx+0x18736bc7]
  42d3aa:	bound  ebp,QWORD PTR [ebx+0x73]
  42d3ad:	adc    bl,ch
  42d3af:	icebp  
  42d3b0:	or     edi,edi
  42d3b2:	add    BYTE PTR [eax],al
  42d3b4:	popa   
  42d3b5:	(bad)  
  42d3b6:	out    0x4d,eax
  42d3b8:	adc    eax,0x2c85f56c
  42d3bd:	cld    
  42d3be:	test   BYTE PTR [ebp-0x41],cl
  42d3c1:	or     eax,0x48e74b00
  42d3c6:	cld    
  42d3c7:	jae    0x42d429
  42d3c9:	jne    0x42d3a4
  42d3cb:	in     al,0x7b
  42d3cd:	add    DWORD PTR [bp-0x18],0x300fba90
  42d3d5:	(bad)  
  42d3d6:	fdivp  st(7),st
  42d3d8:	jnp    0x42d37d
  42d3da:	pop    ebx
  42d3db:	or     BYTE PTR [ebx-0x2a1b3a71],ch
  42d3e1:	jg     0x42d39f
  42d3e3:	call   0xfaff626f
  42d3e8:	dec    esi
  42d3e9:	stc    
  42d3ea:	aas    
  42d3eb:	test   DWORD PTR [ebp+0x79ba82b8],edx
  42d3f1:	and    BYTE PTR [ebp+0xbab0836],bh
  42d3f7:	sub    BYTE PTR [ebx],0x57
  42d3fa:	mov    ebp,0x5a614cfa
  42d3ff:	aaa    
  42d400:	pop    ss
  42d401:	dec    edx
  42d402:	xlat   BYTE PTR ds:[ebx]
  42d403:	in     al,0x4a
  42d405:	pop    eax
  42d406:	mov    DWORD PTR [ecx+edi*8+0x72],eax
  42d40a:	test   DWORD PTR [ecx+eiz*8+0x19],ecx
  42d40e:	inc    ebx
  42d40f:	and    al,0x85
  42d411:	dec    ebx
  42d412:	in     eax,dx
  42d413:	xchg   BYTE PTR [eax+0x44f6da],dl
  42d419:	add    cl,cl
  42d41b:	lahf   
  42d41c:	mov    DWORD PTR [esi+0x36bd0831],ecx
  42d422:	mov    bl,0x8e
  42d424:	or     edi,DWORD PTR [edi+0x6e]
  42d427:	push   cs
  42d428:	mov    ebp,0xe8d2fa
  42d42d:	xchg   DWORD PTR [ebx-0x264df49e],ecx
  42d433:	stos   BYTE PTR es:[edi],al
  42d434:	aas    
  42d435:	cmp    DWORD PTR [eax+0x6b850b9e],edx
  42d43b:	(bad)  
  42d43c:	mov    ebx,0x17eddafa
  42d441:	sti    
  42d442:	dec    eax
  42d443:	pop    ss
  42d444:	es add dl,cl
  42d447:	cmp    eax,0xcfaa8720
  42d44c:	xor    DWORD PTR [eax],ebx
  42d44e:	dec    esi
  42d44f:	pop    ebx
  42d450:	push   esp
  42d451:	sti    
  42d452:	sub    bl,al
  42d454:	mov    ebx,0x3177d974
  42d459:	or     BYTE PTR [ebp-0x6024aaf7],ch
  42d45f:	test   al,0x63
  42d461:	ret    
  42d462:	push   es
  42d463:	pop    esp
  42d464:	jg     0x42d4ce
  42d466:	mov    BYTE PTR [eax-0x11e67718],ch
  42d46c:	sub    BYTE PTR [ebx-0x56e711ef],cl
  42d472:	mov    edx,0xadbc2b94
  42d477:	dec    esi
  42d478:	aad    0xc
  42d47a:	push   eax
  42d47b:	fisttp WORD PTR [esp+edi*4+0x0]
  42d47f:	add    BYTE PTR [edi-0x1c],bl
  42d482:	mov    edx,0x128cde2f
  42d487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d488:	dec    edi
  42d489:	test   al,0xd9
  42d48b:	jne    0x42d4d0
  42d48d:	dec    ebx
  42d48e:	add    BYTE PTR [edi+0x41],al
  42d491:	sbb    BYTE PTR [ebx+eiz*8+0x36],ah
  42d495:	test   al,0x31
  42d497:	mov    esp,0x3629fd91
  42d49c:	stc    
  42d49d:	xor    ebp,ecx
  42d49f:	mov    esp,0xd46e05a1
  42d4a4:	nop    ecx
  42d4a7:	mov    BYTE PTR [ebx],dl
  42d4a9:	aas    
  42d4aa:	or     dh,BYTE PTR [esi]
  42d4ac:	in     eax,0xa8
  42d4ae:	jnp    0x42d4bf
  42d4b0:	(bad)  
  42d4b1:	sbb    eax,0xc184abf1
  42d4b6:	icebp  
  42d4b7:	mov    ebx,0x7a74c951
  42d4bc:	in     eax,dx
  42d4bd:	cmp    eax,0x94d503e7
  42d4c2:	and    esp,eax
  42d4c4:	adc    dl,BYTE PTR [ecx-0x4ce51fd5]
  42d4ca:	stc    
  42d4cb:	mov    ds,WORD PTR [ecx]
  42d4cd:	mov    ds:0x16e140ff,al
  42d4d2:	ins    BYTE PTR es:[edi],dx
  42d4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4d4:	xchg   ebx,eax
  42d4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4d6:	push   DWORD PTR [ebp-0x2193be56]
  42d4dc:	pop    ebx
  42d4dd:	scas   eax,DWORD PTR es:[edi]
  42d4de:	jecxz  0x42d486
  42d4e0:	pop    esi
  42d4e1:	adc    al,0xb2
  42d4e3:	jmp    0xe630:0x51630000
  42d4ea:	add    al,0xb
  42d4ec:	or     BYTE PTR [edx],ch
  42d4ee:	or     BYTE PTR [esi-0xc],0xf6
  42d4f2:	cli    
  42d4f3:	fidivr WORD PTR [bp+0x2e]
  42d4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4f8:	inc    esp
  42d4f9:	(bad)  [edi]
  42d4fb:	push   ds
  42d4fc:	and    al,0x3
  42d4fe:	fldenv [edx-0x43b5fa8c]
  42d504:	cli    
  42d505:	aam    0xee
  42d507:	mov    es,esi
  42d509:	mov    edi,0x4e101e8f
  42d50e:	add    al,0x16
  42d510:	sti    
  42d511:	mov    esp,0x16f8b1ce
  42d516:	outs   dx,BYTE PTR ds:[esi]
  42d517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d518:	test   BYTE PTR [ecx],ch
  42d51a:	in     eax,0x77
  42d51c:	call   0x4cad52
  42d521:	jb     0x42d4b7
  42d523:	in     eax,dx
  42d524:	aas    
  42d525:	jo     0x42d4bb
  42d527:	in     eax,dx
  42d528:	dec    edi
  42d529:	add    bh,cl
  42d52b:	pop    DWORD PTR [ecx+edx*1+0x0]
  42d52f:	dec    esi
  42d530:	adc    al,0xf6
  42d532:	dec    ebp
  42d533:	sub    bh,bl
  42d535:	(bad)  
  42d536:	das    
  42d537:	loopne 0x42d592
  42d539:	test   edi,ebx
  42d53b:	xchg   DWORD PTR es:0x9f0aa41e,eax
  42d542:	shl    esi,cl
  42d544:	cmp    BYTE PTR [eax*4+0x448413],ah
  42d54b:	add    BYTE PTR [edx-0x5d],dh
  42d54e:	cli    
  42d54f:	into   
  42d550:	adc    eax,0xf900fafe
  42d555:	test   eax,0xd9730064
  42d55a:	sbb    ecx,DWORD PTR [ebx+0x1873634b]
  42d560:	aaa    
  42d561:	fcom   DWORD PTR [eax-0x1]
  42d564:	mov    ecx,0x8075f6fd
  42d569:	arpl   WORD PTR [ebx+0x8],si
  42d56c:	push   esp
  42d56d:	das    
  42d56e:	into   
  42d56f:	call   DWORD PTR [ebx-0x77]
  42d572:	mov    edx,0x9c761574
  42d577:	add    DWORD PTR [edx+ecx*1+0x62],edi
  42d57b:	repnz push ebp
  42d57d:	test   bh,bh
  42d57f:	jmp    FWORD PTR [edi+edx*4+0x43]
  42d583:	cld    
  42d584:	in     eax,0x49
  42d586:	adc    al,0x8b
  42d588:	jns    0x42d550
  42d58a:	cmp    cl,BYTE PTR [ecx-0x16b53987]
  42d590:	or     al,0xd
  42d592:	add    BYTE PTR [eax],al
  42d594:	(bad)  
  42d595:	dec    ecx
  42d596:	clc    
  42d597:	cmp    DWORD PTR [ecx+0x16],edi
  42d59a:	pop    es
  42d59b:	lea    eax,[ecx]
  42d59d:	outs   dx,DWORD PTR ds:[esi]
  42d59e:	cmc    
  42d59f:	push   DWORD PTR [edi-0x6ac493b0]
  42d5a5:	adc    edi,DWORD PTR [ebx+0x23]
  42d5a8:	fsub   DWORD PTR [ebx-0xb]
  42d5ab:	and    DWORD PTR [ecx+0x76],0x6
  42d5af:	jne    0x42d5b1
  42d5b1:	add    BYTE PTR [edi],ch
  42d5b3:	xchg   edi,eax
  42d5b4:	inc    eax
  42d5b5:	sbb    BYTE PTR [ecx-0x36],ch
  42d5b8:	outs   dx,BYTE PTR ds:[esi]
  42d5b9:	pop    ss
  42d5ba:	inc    esi
  42d5bb:	or     dl,BYTE PTR [eax-0x73]
  42d5be:	dec    edx
  42d5bf:	inc    BYTE PTR [edx+0x36cbd4c3]
  42d5c5:	(bad)  
  42d5c6:	repz and eax,0x5e390fbb
  42d5cc:	fdiv   st(7),st
  42d5ce:	aad    0xbb
  42d5d0:	lods   al,BYTE PTR ds:[esi]
  42d5d1:	and    al,0x4e
  42d5d3:	in     eax,dx
  42d5d4:	pop    ss
  42d5d5:	daa    
  42d5d6:	lea    ecx,[eax]
  42d5d8:	xlat   BYTE PTR ds:[ebx]
  42d5d9:	jb     0x42d5ac
  42d5db:	sbb    BYTE PTR ds:0x2b0f1b36,cl
  42d5e1:	adc    eax,0xafe5b56
  42d5e6:	push   ecx
  42d5e7:	mov    ax,ds:0x451992fa
  42d5ed:	add    edi,ecx
  42d5ef:	hlt    
  42d5f0:	loop   0x42d5fc
  42d5f2:	pop    ecx
  42d5f3:	push   0xffffffa1
  42d5f5:	cli    
  42d5f6:	jp     0x42d610
  42d5f8:	inc    ebx
  42d5f9:	hlt    
  42d5fa:	loop   0x42d5d8
  42d5fc:	add    al,0x7f
  42d5fe:	xchg   esp,eax
  42d5ff:	sbb    DWORD PTR [ebp+0x7f],eax
  42d602:	pop    esp
  42d603:	les    eax,FWORD PTR [edi]
  42d605:	and    esi,0x2b
  42d608:	mov    ecx,0x830f52fa
  42d60d:	xchg   edi,eax
  42d60e:	test   DWORD PTR [ecx-0x2],esi
  42d611:	jle    0x42d650
  42d613:	test   eax,0x8407
  42d618:	and    dh,BYTE PTR [ebx+0x2ce2fffe]
  42d61e:	(bad)  fs:[edx]
  42d621:	fadd   QWORD PTR [edi+esi*8+0x7f0e5cd1]
  42d628:	sbb    eax,0xd0172a9e
  42d62d:	sub    eax,0xabd50004
  42d632:	jns    0x42d5ba
  42d634:	not    DWORD PTR [ebx]
  42d636:	mov    ecx,0x40ca152e
  42d63b:	pusha  
  42d63c:	loop   0x42d66b
  42d63e:	sbb    ch,0xea
  42d641:	fwait
  42d642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d643:	stos   DWORD PTR es:[edi],eax
  42d644:	aad    0xb2
  42d646:	(bad)  
  42d647:	ss jnp 0x42d653
  42d64a:	push   ebp
  42d64b:	or     DWORD PTR [edx+0x69],edx
  42d64e:	call   0xdccab56
  42d653:	push   cs
  42d654:	into   
  42d655:	mov    gs,WORD PTR [esi+0x3]
  42d658:	aad    0x9
  42d65a:	es stos DWORD PTR es:[edi],eax
  42d65c:	inc    esi
  42d65d:	or     ecx,ebp
  42d65f:	add    ebp,DWORD PTR [edx]
  42d661:	mov    ds:0x3f5908df,al
  42d666:	(bad)  
  42d667:	mov    eax,0xe3a0889f
  42d66c:	fisttp WORD PTR [ebp-0x5b7059c9]
  42d672:	shl    DWORD PTR [ebx-0x7e],cl
  42d675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d676:	call   0x80cbd827
  42d67b:	or     al,BYTE PTR [eax]
  42d67d:	add    cl,ch
  42d67f:	sbb    esp,DWORD PTR [esi-0x45]
  42d682:	retf   0xf81d
  42d685:	test   BYTE PTR [edx+0x9],0xe9
  42d689:	add    ecx,esi
  42d68b:	mov    ds,WORD PTR [ebx]
  42d68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d68e:	dec    edi
  42d68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d690:	dec    ebp
  42d691:	pop    ds
  42d692:	retf   0xdea1
  42d695:	xor    eax,0x650889e
  42d69a:	into   
  42d69b:	mov    ecx,DWORD PTR [ebx]
  42d69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d69e:	das    
  42d69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6a0:	sti    
  42d6a1:	jle    0x42d6cd
  42d6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6a4:	call   0x30cb6455
  42d6a9:	or     eax,0xa5fb87ce
  42d6ae:	shld   DWORD PTR [ebp-0x45],esp,0xd9
  42d6b3:	sbb    ebp,DWORD PTR [eax-0x16f6a60a]
  42d6b9:	add    esi,edx
  42d6bb:	shr    BYTE PTR [ebp+0x49],cl
  42d6be:	test   eax,0xd10be49b
  42d6c3:	mov    al,0xff
  42d6c5:	sub    edx,DWORD PTR [ecx+0x52]
  42d6c8:	xor    al,0xf7
  42d6ca:	fisttp DWORD PTR [ebx]
  42d6cc:	add    al,0xd2
  42d6ce:	mov    bh,0x8c
  42d6d0:	dec    ecx
  42d6d1:	adc    eax,0xe808077b
  42d6d6:	outs   dx,DWORD PTR ds:[esi]
  42d6d7:	je     0x42d65f
  42d6d9:	pop    ds
  42d6da:	lds    ebx,FWORD PTR [ecx-0x55260efd]
  42d6e0:	(bad)  
  42d6e2:	add    BYTE PTR [eax],al
  42d6e4:	adc    ebx,esi
  42d6e6:	icebp  
  42d6e7:	in     eax,dx
  42d6e8:	into   
  42d6e9:	stc    
  42d6ea:	out    0x88,al
  42d6ec:	dec    esi
  42d6ed:	push   ecx
  42d6ee:	xor    al,0x9f
  42d6f0:	aad    0x11
  42d6f2:	adc    dh,ch
  42d6f4:	or     dl,al
  42d6f6:	loopne 0x42d68e
  42d6f8:	dec    edx
  42d6f9:	mov    al,ds:0x1e43f544
  42d6fe:	and    al,0x13
  42d700:	fstp   DWORD PTR [esi-0x47a0228c]
  42d706:	cli    
  42d707:	cld    
  42d708:	mov    esi,0x2217c68a
  42d70d:	push   ds
  42d70e:	adc    BYTE PTR [esi+0x4],ah
  42d711:	push   ss
  42d712:	sti    
  42d713:	aam    0xde
  42d715:	mov    cl,0x4
  42d717:	aas    
  42d718:	mov    ah,BYTE PTR [eax-0x722dd67c]
  42d71e:	jl     0x42d767
  42d720:	push   0xffffffa0
  42d722:	out    0xea,al
  42d724:	cld    
  42d725:	call   0x2bc9:0x3a889657
  42d72c:	xor    DWORD PTR [ebx-0x1a9e2d76],esp
  42d732:	(bad)  
  42d733:	out    dx,eax
  42d734:	push   ebx
  42d735:	in     eax,0xff
  42d737:	out    0x5b,al
  42d739:	in     eax,0xff
  42d73b:	icebp  
  42d73c:	push   ebx
  42d73d:	in     eax,0xff
  42d73f:	jmp    FWORD PTR [ecx]
  42d741:	ja     0x42d77f
  42d743:	add    BYTE PTR [eax],bh
  42d745:	jle    0x42d783
  42d747:	add    BYTE PTR [eax],al
  42d749:	add    BYTE PTR [ebp+0x7e],cl
  42d74c:	cmp    al,0x0
  42d74e:	push   0x4d003c7d
  42d753:	jle    0x42d791
  42d755:	add    BYTE PTR [edi+0x7d],bl
  42d758:	cmp    al,0x0
  42d75a:	push   0x58003c7d
  42d75f:	jbe    0x42d79d
  42d761:	add    BYTE PTR [edx+0x4e003c7d],dl
  42d767:	jge    0x42d7a5
  42d769:	add    BYTE PTR [edx+0x23003c78],ch
  42d76f:	jns    0x42d7ad
  42d771:	add    BYTE PTR [edi+esi*2+0x76e1003c],ch
  42d778:	cmp    al,0x0
  42d77a:	push   esi
  42d77b:	mov    edi,DWORD PTR [eax+eax*1]
  42d77e:	sub    BYTE PTR [ebx-0x6a8dffc4],cl
  42d784:	cmp    al,0x0
  42d786:	out    0x8c,al
  42d788:	cmp    al,0x0
  42d78a:	mov    WORD PTR [ebx+0x7952003c],cs
  42d790:	cmp    al,0x0
  42d792:	inc    ebx
  42d793:	xchg   esp,eax
  42d794:	cmp    al,0x0
  42d796:	cs jle 0x42d7d5
  42d799:	add    BYTE PTR [esi+0x72003c94],dh
  42d79f:	xchg   esp,eax
  42d7a0:	cmp    al,0x0
  42d7a2:	(bad)  
  42d7a3:	xchg   ebx,eax
  42d7a4:	cmp    al,0x0
  42d7a6:	adc    BYTE PTR [esp+edi*1+0x3c945e00],dl
  42d7ad:	add    BYTE PTR [eax],al
  42d7af:	add    BYTE PTR [ecx-0x6c],ch
  42d7b2:	cmp    al,0x0
  42d7b4:	sti    
  42d7b5:	xchg   ebx,eax
  42d7b6:	cmp    al,0x0
  42d7b8:	sbb    eax,0xd5003c85
  42d7bd:	out    dx,eax
  42d7be:	xchg   esi,eax
  42d7bf:	cmp    eax,0x3d9747d5
  42d7c4:	aad    0x11
  42d7c6:	xchg   edi,eax
  42d7c7:	cmp    eax,0x3d9713d5
  42d7cc:	aad    0x96
  42d7ce:	xchg   ebp,eax
  42d7cf:	cmp    eax,0x3d9babd5
  42d7d4:	aad    0x17
  42d7d6:	cdq    
  42d7d7:	cmp    eax,0x3d98fcd5
  42d7dc:	aad    0xa9
  42d7de:	xchg   edi,eax
  42d7df:	cmp    eax,0x3d98e4d5
  42d7e4:	aad    0x51
  42d7e6:	cdq    
  42d7e7:	cmp    eax,0x3d9939d5
  42d7ec:	aad    0xdf
  42d7ee:	cwde   
  42d7ef:	cmp    eax,0x3d8f6dd5
  42d7f4:	aad    0x2c
  42d7f6:	xchg   ecx,eax
  42d7f7:	cmp    eax,0x3d5cf6d5
  42d7fc:	aad    0x6c
  42d7fe:	test   DWORD PTR ds:0x3d8806d5,edi
  42d804:	aad    0xa8
  42d806:	cmp    DWORD PTR ds:0x3d8725d5,0x3d88bed5
  42d810:	aad    0x4a
  42d812:	xchg   BYTE PTR ds:0xa9d50000,bh
  42d818:	xchg   DWORD PTR ds:0x3d5df0d5,edi
  42d81e:	aad    0x83
  42d820:	pop    ebp
  42d821:	cmp    eax,0x3d8000d5
  42d826:	aad    0xc5
  42d828:	cmp    BYTE PTR ds:0x3d881fd5,0xd5
  42d82f:	out    dx,eax
  42d830:	pusha  
  42d831:	cmp    eax,0x3d5a59d5
  42d836:	aad    0x9
  42d838:	pop    ebx
  42d839:	pusha  
  42d83a:	enter  0xe709,0x5e
  42d83e:	ror    BYTE PTR [ecx],0xa7
  42d841:	pop    esi
  42d842:	mov    eax,0xb05f5e09
  42d847:	or     DWORD PTR [ecx],esi
  42d849:	pop    edi
  42d84a:	test   al,0x9
  42d84c:	mov    ebp,0xd809a05f
  42d851:	xchg   ebx,eax
  42d852:	cwde   
  42d853:	or     DWORD PTR [edx],esp
  42d855:	mov    WORD PTR [eax],ss
  42d857:	or     ch,ch
  42d859:	xchg   BYTE PTR [eax],cl
  42d85b:	or     cl,BYTE PTR [esi+eiz*2+0x0]
  42d85f:	or     ch,cl
  42d861:	add    bh,BYTE PTR [ebx-0x26001af5]
  42d867:	pop    es
  42d868:	jmp    0xd107:0xee13dc0b
  42d86f:	push   edx
  42d870:	and    BYTE PTR [edi],al
  42d872:	iret   
  42d873:	adc    cl,bl
  42d875:	adc    bl,BYTE PTR [esp+edi*8]
  42d878:	cmc    
  42d879:	sldt   WORD PTR [eax]
  42d87c:	loopne 0x42d875
  42d87e:	icebp  
  42d87f:	sbb    ebx,esp
  42d881:	add    ebp,edi
  42d883:	sbb    ebx,esp
  42d885:	add    ebp,edi
  42d887:	sbb    dl,cl
  42d889:	std    
  42d88a:	jecxz  0x42d8a1
  42d88c:	into   
  42d88d:	jmp    0xeaf8bb59
  42d892:	(bad)  
  42d893:	loop   0x42d84d
  42d895:	jmp    0x42d85c
  42d897:	(bad)  
  42d899:	out    0x9,eax
  42d89b:	in     al,dx
  42d89c:	repnz icebp 
  42d89e:	adc    ah,ch
  42d8a0:	cli    
  42d8a1:	repnz (bad) 
  42d8a3:	jmp    0xe63ec69b
  42d8a8:	popf   
  42d8a9:	push   edx
  42d8aa:	mov    al,0x4a
  42d8ac:	pushf  
  42d8ad:	push   edx
  42d8ae:	mov    al,0x4a
  42d8b0:	out    dx,al
  42d8b1:	lock call FWORD PTR [edi-0x5d226da]
  42d8b8:	add    bl,ah
  42d8ba:	xor    ebx,esp
  42d8bc:	clc    
  42d8bd:	aam    0x31
  42d8bf:	(bad)  
  42d8c0:	(bad)  
  42d8c1:	loopne 0x42d8f8
  42d8c3:	sar    bh,cl
  42d8c5:	aad    0x36
  42d8c7:	mov    al,ds:0xb049529f
  42d8cc:	loop   0x42d8aa
  42d8ce:	cmp    DWORD PTR [esi-0x55c1b56a],edi
  42d8d4:	call   0x9052:0x11e94246
  42d8db:	shl    BYTE PTR [ebp+ebx*8-0x1],0xf3
  42d8e0:	add    BYTE PTR [eax],al
  42d8e2:	fs (bad) 
  42d8e5:	aaa    
  42d8e6:	addr16 (bad) 
  42d8e9:	pop    ebx
  42d8ea:	inc    edi
  42d8eb:	(bad)  
  42d8ed:	scas   al,BYTE PTR es:[edi]
  42d8ee:	inc    edi
  42d8ef:	(bad)  
  42d8f1:	rol    DWORD PTR [edi-0x23],0xff
  42d8f5:	xchg   ebx,eax
  42d8f6:	dec    edx
  42d8f7:	(bad)  
  42d8f9:	sbb    DWORD PTR [ebp-0x23],esp
  42d8fc:	(bad)  
  42d8fd:	cmp    DWORD PTR [ebp-0x23],esp
  42d900:	jmp    FWORD PTR [esi-0x5900230b]
  42d906:	cmc    
  42d907:	fdiv   st(7),st
  42d909:	add    eax,0xafffdd45
  42d90e:	inc    ebp
  42d90f:	(bad)  
  42d911:	xlat   BYTE PTR ds:[ebx]
  42d912:	inc    ebp
  42d913:	(bad)  
  42d915:	pop    ss
  42d916:	inc    esp
  42d917:	(bad)  
  42d919:	push   ebx
  42d91a:	fs (bad) 
  42d91d:	shl    DWORD PTR [ecx-0x47940024],0xdc
  42d924:	call   DWORD PTR [ebp+0x57ffdcb0]
  42d92a:	mov    eax,0xdfffffdc
  42d92f:	daa    
  42d930:	cmp    eax,0x3d254900
  42d935:	add    BYTE PTR [eax+0x7c],al
  42d938:	cmp    al,0x0
  42d93a:	mov    ?,WORD PTR [edx+0x3c]
  42d93d:	add    BYTE PTR [esi-0x4dffc386],ch
  42d943:	sub    DWORD PTR ds:0xb2000000,edi
  42d949:	sub    DWORD PTR ds:0x3d2b1600,edi
  42d94f:	add    BYTE PTR [ebx-0x37ffc2db],bl
  42d955:	and    eax,0x2607003d
  42d95a:	cmp    eax,0x3d256e00
  42d95f:	add    ah,al
  42d961:	sub    BYTE PTR ds:0x3d28bd00,bh
  42d967:	add    dh,al
  42d969:	sub    BYTE PTR ds:0x3d2bdf00,bh
  42d96f:	add    al,al
  42d971:	sub    edi,DWORD PTR ds:0x3d28a900
  42d977:	add    dh,ch
  42d979:	sub    edi,DWORD PTR ds:0x3d2bbe00
  42d97f:	add    BYTE PTR [esi+0x32003d2b],bh
  42d985:	ds cmp eax,0x3d3e3200
  42d98b:	add    dh,bl
  42d98d:	sub    BYTE PTR ds:0x3d2a0200,bh
  42d993:	add    BYTE PTR [ebx],bh
  42d995:	sub    DWORD PTR ds:0x3d294200,edi
  42d99b:	add    bh,cl
  42d99d:	sub    DWORD PTR ds:0xe71f8900,edi
  42d9a3:	adc    DWORD PTR [eax-0x2a00006a],0x4c81b0
  42d9ad:	add    BYTE PTR [ecx],ch
  42d9af:	dec    edi
  42d9b0:	or     BYTE PTR [ebp+eiz*1+0x47],0x82
  42d9b5:	dec    esp
  42d9b6:	adc    edi,ebx
  42d9b8:	push   ecx
  42d9b9:	xchg   DWORD PTR [eax-0x58],edi
  42d9bc:	pop    eax
  42d9bd:	das    
  42d9be:	daa    
  42d9bf:	ja     0x42da3a
  42d9c1:	neg    DWORD PTR [eax+0x73]
  42d9c4:	lods   eax,DWORD PTR ds:[esi]
  42d9c5:	mov    BYTE PTR [eax+0xd547c10],ch
  42d9cb:	sub    DWORD PTR [eax-0x24],ebx
  42d9ce:	pop    esp
  42d9cf:	ins    DWORD PTR es:[edi],dx
  42d9d0:	stos   BYTE PTR es:[edi],al
  42d9d1:	mov    BYTE PTR [eax+0x5447bf8],al
  42d9d7:	sbb    esi,DWORD PTR [esi-0x7d5920ca]
  42d9dd:	and    ebx,edx
  42d9df:	mov    dl,0xfe
  42d9e1:	ss scas eax,DWORD PTR es:[edi]
  42d9e3:	xchg   esp,eax
  42d9e4:	sbb    BYTE PTR [ebx],0xda
  42d9e7:	mov    dl,0xfe
  42d9e9:	cmp    BYTE PTR [eax],ah
  42d9eb:	mov    ds:0xd5ec0931,eax
  42d9f0:	pop    ss
  42d9f1:	or     ebx,DWORD PTR [edx-0x6b]
  42d9f4:	pop    es
  42d9f5:	add    ch,dl
  42d9f7:	or     DWORD PTR [ebx+0x14],edx
  42d9fa:	sbb    BYTE PTR [esp+ebx*1+0x7a77cf1],ch
  42da01:	add    ch,dl
  42da03:	xchg   ebx,eax
  42da04:	ja     0x42da48
  42da06:	(bad)  [edi-0x1caf7739]
  42da0c:	mov    al,0xfa
  42da0e:	jb     0x42d9cc
  42da10:	ja     0x42da54
  42da12:	add    BYTE PTR [eax],al
  42da14:	leave  
  42da15:	sbb    DWORD PTR [ebx-0x4ee39db9],eax
  42da1b:	or     ah,BYTE PTR [edx]
  42da1d:	in     al,dx
  42da1e:	or     DWORD PTR [ecx-0x54f00a8],ecx
  42da24:	dec    edx
  42da25:	or     ah,BYTE PTR [ecx-0x16f2fcbc]
  42da2b:	jp     0x42da7e
  42da2d:	out    dx,al
  42da2e:	push   ecx
  42da2f:	mov    cl,0x2f
  42da31:	xchg   ebx,eax
  42da32:	arpl   sp,si
  42da34:	das    
  42da35:	popf   
  42da36:	inc    ecx
  42da37:	jge    0x42d9d0
  42da39:	jmp    0x935831ad
  42da3e:	stos   DWORD PTR es:[edi],eax
  42da3f:	stos   DWORD PTR es:[edi],eax
  42da40:	retf   
  42da41:	(bad)  
  42da42:	mov    bl,0x8
  42da44:	push   ss
  42da45:	inc    edi
  42da46:	and    DWORD PTR [ecx+eiz*4+0x49],esi
  42da4a:	jmp    0xb78999d1
  42da4f:	inc    esp
  42da50:	test   DWORD PTR ds:0xce517ec3,edx
  42da56:	add    dh,BYTE PTR [ecx+0x38f39df]
  42da5c:	dec    eax
  42da5d:	xchg   eax,esi
  42da5f:	mov    cl,0xcf
  42da61:	pushf  
  42da62:	cwde   
  42da63:	jl     0x42d9fc
  42da65:	mov    cl,0x5a
  42da67:	xchg   ebx,eax
  42da68:	mov    esp,0x51b36d9c
  42da6d:	xchg   ebx,eax
  42da6e:	pop    ebx
  42da6f:	or     DWORD PTR [ebx],edi
  42da71:	sahf   
  42da72:	mov    edi,0xe909d494
  42da77:	hlt    
  42da78:	add    BYTE PTR [eax],al
  42da7a:	nop
  42da7b:	nop
  42da7c:	and    bh,ah
  42da7e:	push   ebx
  42da7f:	shl    DWORD PTR [edi-0x40351f65],1
  42da85:	pop    es
  42da86:	or     ch,BYTE PTR [edx+0xa7584e7]
  42da8c:	jo     0x42dad4
  42da8e:	mov    eax,ds:0xcb495a0c
  42da93:	xchg   edx,eax
  42da94:	sbb    ecx,esp
  42da96:	fist   WORD PTR [edx+esi*1+0x0]
  42da9a:	xchg   esp,eax
  42da9b:	mov    dl,0xe5
  42da9d:	test   BYTE PTR [ebp+0xa],dh
  42daa0:	add    BYTE PTR [eax-0x2d],ah
  42daa3:	call   0xfc849a2
  42daa8:	mov    bl,0xb7
  42daaa:	rcl    BYTE PTR [eax],cl
  42daac:	stos   DWORD PTR es:[edi],eax
  42daad:	xor    ebp,edx
  42daaf:	pop    eax
  42dab0:	inc    ecx
  42dab1:	icebp  
  42dab2:	scas   eax,DWORD PTR es:[edi]
  42dab3:	cmp    eax,0xd9bea90
  42dab8:	push   DWORD PTR ds:0xa488cad9
  42dabe:	call   0x943d:0x8f795491
  42dac5:	bound  ebx,QWORD PTR [ecx+edx*1-0x1324ee3f]
  42dacc:	enter  0xf1a8,0xc8
  42dad0:	mov    BYTE PTR [esi+edi*4-0x60],ch
  42dad4:	cli    
  42dad5:	push   cs
  42dad6:	imul   ecx,DWORD PTR [edx+0x8],0x1f033e28
  42dadd:	sub    BYTE PTR [eax],al
  42dadf:	add    BYTE PTR [edi+0x45],bl
  42dae2:	in     al,0x60
  42dae4:	pop    ebx
  42dae5:	das    
  42dae6:	sti    
  42dae7:	out    dx,al
  42dae8:	jp     0x42da6e
  42daea:	inc    ecx
  42daeb:	icebp  
  42daec:	cdq    
  42daed:	mov    ds:0x92900a1c,eax
  42daf2:	test   BYTE PTR [ebp-0x7e],bl
  42daf5:	mov    al,ds:0x121362fa
  42dafa:	rcl    ecx,0xd0
  42dafd:	cli    
  42dafe:	shl    BYTE PTR [eax+0x4c],0x2b
  42db02:	sti    
  42db03:	mov    dh,0x42
  42db05:	test   BYTE PTR [ecx+esi*4+0x8],al
  42db09:	xchg   BYTE PTR [edi-0x5a],dl
  42db0c:	xor    ah,BYTE PTR [eax+0x9d62904]
  42db12:	add    BYTE PTR [eax+0x4c],ah
  42db15:	daa    
  42db16:	sti    
  42db17:	mov    ?,WORD PTR [edx]
  42db19:	xchg   edx,eax
  42db1a:	xchg   esp,eax
  42db1b:	add    ah,al
  42db1d:	push   0xfffffff5
  42db1f:	jmp    ebp
  42db21:	xor    BYTE PTR [esi-0x1],0xcb
  42db25:	push   0xffffff87
  42db27:	push   ebp
  42db28:	mov    esp,0xc5a4541c
  42db2d:	inc    eax
  42db2e:	test   BYTE PTR [ecx+0x5587c381],cl
  42db34:	dec    eax
  42db35:	sbb    eax,0x6a9b5c84
  42db3a:	cmc    
  42db3b:	mov    esi,DWORD PTR [edx-0x61]
  42db3e:	xchg   DWORD PTR [ebp+0x28],ebx
  42db41:	ds sti 
  42db43:	inc    DWORD PTR [eax]
  42db45:	add    BYTE PTR [esp+eax*1+0x74],bh
  42db49:	or     bh,BYTE PTR [ebp-0x52dcf283]
  42db4f:	sbb    al,0x44
  42db51:	mov    bh,ah
  42db53:	push   es
  42db54:	mov    DWORD PTR [ebp+0x74],edx
  42db57:	push   ds
  42db58:	inc    ecx
  42db59:	or     BYTE PTR [ecx],dl
  42db5b:	pop    es
  42db5c:	add    BYTE PTR [eax-0x14],dh
  42db5f:	add    dl,bh
  42db61:	pop    esi
  42db62:	pusha  
  42db63:	in     al,0x3c
  42db65:	add    BYTE PTR [esi+esi*8-0x66908c01],bh
  42db6c:	cli    
  42db6d:	dec    esp
  42db6f:	add    eax,0x5d94774
  42db74:	add    BYTE PTR [eax],dh
  42db76:	mov    esp,0xbc3d14d2
  42db7b:	push   es
  42db7c:	inc    eax
  42db7d:	add    al,ah
  42db7f:	fistp  QWORD PTR [eax+eax*1]
  42db82:	lods   al,BYTE PTR ds:[esi]
  42db83:	add    BYTE PTR ss:[edi+eax*4+0x0],dh
  42db88:	jmp    0x54cc76
  42db8d:	add    ah,dh
  42db8f:	mov    al,ds:0x1d6c000b
  42db94:	xchg   esp,eax
  42db95:	inc    eax
  42db96:	aad    0x73
  42db98:	test   eax,0xfe8ba8fa
  42db9d:	call   ebp
  42db9f:	add    ch,dh
  42dba1:	xchg   BYTE PTR [ebp+0x5c07ab71],cl
  42dba7:	aad    0x42
  42dba9:	sti    
  42dbaa:	add    BYTE PTR [eax],al
  42dbac:	dec    edx
  42dbad:	sub    esi,DWORD PTR [edi-0x74]
  42dbb0:	test   eax,0x4dfaaa23
  42dbb5:	and    eax,0x3332fb58
  42dbba:	xchg   esi,eax
  42dbbb:	and    al,0xbf
  42dbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbbe:	inc    esi
  42dbbf:	out    0x8,eax
  42dbc1:	mov    dh,0xff
  42dbc3:	out    0x1c,al
  42dbc5:	sbb    DWORD PTR [eax+0x3f],esi
  42dbc8:	adc    dl,bl
  42dbca:	test   eax,0x8029e1e6
  42dbcf:	aas    
  42dbd0:	add    ah,bl
  42dbd2:	test   eax,0x8019c9e6
  42dbd7:	inc    ebx
  42dbd8:	repnz repnz test eax,0xa9545087
  42dbdf:	cli    
  42dbe0:	loop   0x42dbf8
  42dbe2:	inc    ebp
  42dbe3:	or     BYTE PTR [esi+0x1d],cl
  42dbe6:	adc    edi,DWORD PTR [edi-0x4b]
  42dbe9:	test   al,0x7b
  42dbeb:	test   ch,dh
  42dbed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbee:	lods   al,BYTE PTR ds:[esi]
  42dbef:	cli    
  42dbf0:	dec    esi
  42dbf1:	push   0x49d66586
  42dbf6:	mov    ch,0xf8
  42dbf8:	loop   0x42dc71
  42dbfa:	inc    ecx
  42dbfb:	push   cs
  42dbfc:	(bad)  
  42dbfd:	mov    esp,0xd7958521
  42dc02:	call   0xc55f698d
  42dc07:	gs (bad) 
  42dc09:	cmp    DWORD PTR [ecx-0xd],ecx
  42dc0c:	mov    ds,WORD PTR [esi+esi*4-0x4fffff85]
  42dc13:	or     DWORD PTR [ebx+ebp*1-0x2c],esi
  42dc17:	and    al,0x9a
  42dc19:	add    DWORD PTR [edx-0x37],ebx
  42dc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc1d:	mov    ds:0x63f39868,eax
  42dc22:	sub    cl,BYTE PTR [ebp-0x17]
  42dc25:	js     0x42dba9
  42dc27:	sbb    DWORD PTR [ebx-0x8],0x4f
  42dc2b:	cdq    
  42dc2c:	jno    0x42dbb5
  42dc2e:	and    ebx,DWORD PTR [edi]
  42dc30:	loop   0x42dc4b
  42dc32:	dec    ebx
  42dc33:	mov    ds:0x9d50848,eax
  42dc38:	and    al,BYTE PTR [edi+0x35]
  42dc3b:	or     ebp,ecx
  42dc3d:	add    edx,ebp
  42dc3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc40:	fnstsw WORD PTR [eax-0x67]
  42dc43:	stc    
  42dc44:	outs   dx,DWORD PTR ds:[esi]
  42dc45:	xchg   esi,esp
  42dc47:	cwde   
  42dc48:	cmp    DWORD PTR [ebp+0x863b25b],ebp
  42dc4e:	into   
  42dc4f:	jb     0x42dc0f
  42dc51:	add    BYTE PTR [eax+eiz*4+0x2a31811f],bl
  42dc58:	sbb    ch,BYTE PTR [ebp+0x3f6609ef]
  42dc5e:	cmp    DWORD PTR [ecx-0x675590a1],ebx
  42dc64:	add    DWORD PTR [ebp-0x534370b3],ebp
  42dc6a:	iret   
  42dc6b:	cwde   
  42dc6c:	loope  0x42dce2
  42dc6e:	adc    al,0xfa
  42dc70:	pop    ebx
  42dc71:	dec    eax
  42dc72:	aad    0xb
  42dc74:	jo     0x42dcbc
  42dc76:	add    BYTE PTR [eax],al
  42dc78:	test   eax,0x2f1823d4
  42dc7d:	or     eax,0x8eb92e60
  42dc82:	lods   eax,DWORD PTR ds:[esi]
  42dc83:	aaa    
  42dc84:	sti    
  42dc85:	test   BYTE PTR [ebx],ch
  42dc87:	mov    al,ds:0xf0a6e43d
  42dc8c:	mov    al,ds:0x14b0ffba
  42dc91:	xchg   DWORD PTR [ebx],ecx
  42dc93:	jb     0x42dc32
  42dc95:	enter  0xed8c,0x67
  42dc99:	pop    ss
  42dc9a:	jmp    0x6e135a84
  42dc9f:	stc    
  42dca0:	push   ebp
  42dca1:	add    ebx,edi
  42dca3:	push   0x3f
  42dca5:	or     al,0x37
  42dca7:	mov    cl,0xa5
  42dca9:	fwait
  42dcaa:	xchg   BYTE PTR [edx+ecx*2-0x6d],bl
  42dcae:	cli    
  42dcaf:	jbe    0x42dd06
  42dcb1:	adc    eax,0xe70be9d8
  42dcb6:	icebp  
  42dcb7:	scas   eax,DWORD PTR es:[edi]
  42dcb8:	cmp    dl,BYTE PTR [esi+0x5b30066e]
  42dcbe:	inc    ecx
  42dcbf:	std    
  42dcc0:	lods   eax,DWORD PTR ds:[esi]
  42dcc1:	rol    BYTE PTR [eax-0x5678eb8],1
  42dcc7:	jmp    0x6a4a8ce3
  42dccc:	or     DWORD PTR ss:[ecx+0x448142a4],ecx
  42dcd3:	and    edx,ecx
  42dcd5:	push   es
  42dcd6:	xchg   DWORD PTR [esi+ecx*4-0x6c],ebp
  42dcda:	cli    
  42dcdb:	push   ds
  42dcdc:	add    BYTE PTR [eax],al
  42dcde:	icebp  
  42dcdf:	pop    ecx
  42dce0:	add    esp,ecx
  42dce2:	outs   dx,DWORD PTR ds:[esi]
  42dce3:	dec    ebp
  42dce4:	hlt    
  42dce5:	pop    ss
  42dce6:	cwde   
  42dce7:	add    eax,0x2f07d04
  42dcec:	mov    bl,0xa7
  42dcee:	call   0x6e6ba481
  42dcf3:	jno    0xfada4e01
  42dcf9:	jmp    0x70439451
  42dcfe:	adc    al,0xb6
  42dd00:	xchg   BYTE PTR [ecx+edi*2],ch
  42dd03:	add    al,0xb2
  42dd05:	mov    eax,gs:0xacffff97
  42dd0b:	or     ecx,DWORD PTR [ecx+0x44154c4d]
  42dd11:	int3   
  42dd12:	test   DWORD PTR [eax+0xc],0x8761e98b
  42dd19:	inc    ebp
  42dd1a:	xor    al,0x89
  42dd1c:	shl    DWORD PTR [esp+edx*8+0x16],1
  42dd20:	inc    esp
  42dd21:	in     al,dx
  42dd22:	icebp  
  42dd23:	xchg   ecx,eax
  42dd24:	jns    0x42dd61
  42dd26:	and    eax,0x272b05df
  42dd2b:	aad    0xc0
  42dd2d:	jmp    0xc8be2b70
  42dd32:	ret    
  42dd33:	push   ss
  42dd34:	repnz repz xchg edi,eax
  42dd37:	mov    ?,WORD PTR [ebx-0x2c]
  42dd3a:	sub    al,0xe7
  42dd3c:	pop    ebp
  42dd3d:	mov    esi,DWORD PTR [esi+0x9453a6]
  42dd43:	add    BYTE PTR [edi],cl
  42dd45:	dec    edi
  42dd46:	jnp    0x42dd05
  42dd48:	ins    BYTE PTR es:[edi],dx
  42dd49:	fs cmc 
  42dd4b:	jmp    FWORD PTR [edi+eiz*8]
  42dd4e:	sbb    edi,edi
  42dd50:	dec    ecx
  42dd51:	ja     0x42dcd4
  42dd53:	dec    ebp
  42dd54:	test   al,0x62
  42dd56:	mov    bl,0x40
  42dd58:	mov    bl,0x62
  42dd5a:	cmc    
  42dd5b:	lea    edi,[ecx+0x49]
  42dd5e:	idiv   edi
  42dd60:	rcl    DWORD PTR [esi],cl
  42dd62:	mov    esi,0xf89a20e8
  42dd67:	push   DWORD PTR [edi+0x38]
  42dd6a:	cld    
  42dd6b:	test   DWORD PTR [eax+ebx*8+0x17a7eb2a],ebp
  42dd72:	inc    esp
  42dd73:	xchg   esp,eax
  42dd74:	xchg   edi,eax
  42dd75:	mov    DWORD PTR [esi],edi
  42dd77:	push   DWORD PTR [ebx+0x1bf83163]
  42dd7d:	add    al,0x82
  42dd7f:	pop    es
  42dd80:	test   BYTE PTR [eax-0x402a00b2],0xa5
  42dd87:	je     0x42dd52
  42dd89:	and    ebp,DWORD PTR [eax+0x43]
  42dd8c:	call   0x7cb2:0x900a5cf
  42dd93:	inc    edx
  42dd94:	aam    0x9a
  42dd96:	jg     0x42ddec
  42dd98:	and    BYTE PTR [edi-0x5b],0x73
  42dd9c:	shl    edi,cl
  42dd9e:	jmp    0xe888:0x5ff2497c
  42dda5:	lods   al,BYTE PTR ds:[esi]
  42dda6:	icebp  
  42dda7:	mov    edi,0xed9c0000
  42ddac:	scas   eax,DWORD PTR es:[edi]
  42ddad:	jnp    0x42ddbf
  42ddaf:	retf   0xc83f
  42ddb2:	leave  
  42ddb3:	pop    esi
  42ddb4:	cdq    
  42ddb5:	adc    eax,0x8704d6da
  42ddba:	push   eax
  42ddbb:	clc    
  42ddbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddbd:	cli    
  42ddbe:	cmp    bl,BYTE PTR [edi-0x1422fc90]
  42ddc4:	inc    eax
  42ddc5:	hlt    
  42ddc6:	fisub  DWORD PTR [ebx+esi*4]
  42ddc9:	jmp    DWORD PTR [edx]
  42ddcb:	mov    al,ds:0x4c808944
  42ddd0:	jmp    0x4be8:0xa352e154
  42ddd7:	mov    al,ds:0x1ed2fffe
  42dddc:	add    eax,0xf5f49037
  42dde1:	and    DWORD PTR [edi],0xffffffa0
  42dde4:	(bad)  
  42dde5:	call   DWORD PTR [edi-0x6103afd7]
  42ddeb:	pop    ebp
  42ddec:	repnz ins DWORD PTR es:[edi],dx
  42ddee:	out    dx,al
  42ddef:	clc    
  42ddf0:	pop    edx
  42ddf1:	call   edx
  42ddf3:	mov    ds:0x9bf184eb,eax
  42ddf8:	test   al,0xfa
  42ddfa:	shr    BYTE PTR [esi],cl
  42ddfc:	xchg   edi,edi
  42ddfe:	mov    edx,0x9ece90a
  42de03:	jp     0x42ddee
  42de05:	sbb    DWORD PTR [edi+0xa],0x28ba03e9
  42de0c:	data16 add BYTE PTR [bx+si],al
  42de10:	ficom  DWORD PTR [ecx+eax*8+0x111992a9]
  42de17:	in     eax,dx
  42de18:	and    DWORD PTR [edx+0x3a],edi
  42de1b:	push   esp
  42de1c:	jle    0x42de3d
  42de1e:	lds    edi,FWORD PTR [ebp+0x11]
  42de21:	xchg   esi,eax
  42de22:	mov    eax,ds:0x7387452f
  42de27:	inc    eax
  42de28:	outs   dx,BYTE PTR ds:[esi]
  42de29:	xchg   ebp,eax
  42de2a:	xchg   ecx,eax
  42de2b:	test   eax,0xa98a4a29
  42de30:	pop    edi
  42de31:	mov    ds:0x954ceef2,al
  42de36:	ins    DWORD PTR es:[edi],dx
  42de37:	dec    edi
  42de38:	dec    ecx
  42de39:	(bad)
  42de3d:	mov    al,ds:0x4e797cbb
  42de42:	bound  ebp,QWORD PTR [ecx-0x6c5c7ed1]
  42de48:	sub    ecx,esp
  42de4a:	or     eax,0x5ef3b0d4
  42de4f:	ja     0x42ddd7
  42de51:	xchg   esp,eax
  42de52:	inc    ecx
  42de53:	test   eax,0xc10dc85b
  42de58:	ret    0xbc01
  42de5b:	adc    eax,DWORD PTR [edx-0x1ed0186c]
  42de61:	jg     0x42ded6
  42de63:	dec    edi
  42de64:	out    dx,al
  42de65:	xchg   esp,eax
  42de66:	sbb    esp,ebp
  42de68:	xchg   edx,eax
  42de69:	or     bl,BYTE PTR [ebp-0x4c7d5f06]
  42de6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de70:	mov    ds:0x35f53e,eax
  42de75:	add    BYTE PTR [ecx+ecx*4+0x7e],ch
  42de79:	test   al,0xd9
  42de7b:	push   ds
  42de7c:	add    cl,cl
  42de7e:	pop    ecx
  42de7f:	push   ebp
  42de80:	aas    
  42de81:	out    dx,al
  42de82:	ins    DWORD PTR es:[edi],dx
  42de83:	pop    DWORD PTR [eax]
  42de85:	pop    ebp
  42de86:	scas   al,BYTE PTR es:[edi]
  42de87:	adc    edi,DWORD PTR [ebp-0x57083d7]
  42de8d:	jmp    0x42de82
  42de8f:	push   DWORD PTR [esi]
  42de91:	xor    al,0x9d
  42de93:	and    ecx,DWORD PTR [ecx]
  42de95:	imul   eax,DWORD PTR [eax+0x10e5750e],0x1b55483
  42de9f:	push   ss
  42dea0:	clc    
  42dea1:	cli    
  42dea2:	aas    
  42dea3:	cmp    DWORD PTR [ebp+esi*8+0x7f],0xb014a445
  42deab:	ror    BYTE PTR [ecx+ebx*4-0x46],cl
  42deaf:	das    
  42deb0:	xchg   DWORD PTR [esi-0x6ec3a987],esp
  42deb6:	(bad)  [ecx]
  42deb8:	add    ah,bh
  42deba:	mov    eax,ds:0xbb0bfe4
  42debf:	sahf   
  42dec0:	or     cl,BYTE PTR [esi+edx*1-0x6d]
  42dec4:	shl    BYTE PTR [edx],0xf2
  42dec7:	mov    ecx,0x453fa571
  42decc:	(bad)  
  42dece:	fcmovu st,st(4)
  42ded0:	ret    0x51de
  42ded3:	sbb    DWORD PTR [ecx],eax
  42ded5:	jmp    0xf1f4dfb0
  42deda:	add    BYTE PTR [eax],al
  42dedc:	xchg   esi,eax
  42dedd:	fmul   QWORD PTR [ecx+edi*1-0x4e]
  42dee1:	repz ss pushf 
  42dee4:	inc    edx
  42dee5:	sbb    BYTE PTR ds:0xea2615e2,bl
  42deeb:	adc    bl,dh
  42deed:	fadd   st(2),st
  42deef:	out    0x59,al
  42def1:	cmp    eax,0xd6e901
  42def6:	mov    dl,0x0
  42def8:	les    eax,FWORD PTR [edi+0x33]
  42defb:	dec    ebp
  42defc:	int3   
  42defd:	in     al,0xfd
  42deff:	cmp    dh,bl
  42df01:	fsub   st(2),st
  42df03:	jmp    0x42deb2
  42df05:	iret   
  42df06:	xor    al,bh
  42df08:	stos   DWORD PTR es:[edi],eax
  42df09:	mov    BYTE PTR [ebx],bh
  42df0b:	add    DWORD PTR [edi+eax*1+0xf5c4589],edi
  42df12:	jl     0x42df10
  42df14:	aaa    
  42df15:	cmp    DWORD PTR [ebx+esi*1+0x50503e3c],ecx
  42df1c:	dec    ebx
  42df1d:	sbb    DWORD PTR [ebx],ebx
  42df1f:	dec    DWORD PTR [ebx+0x6b]
  42df22:	mov    ecx,DWORD PTR [ebp-0xa952c]
  42df28:	lods   eax,DWORD PTR ds:[esi]
  42df29:	out    dx,eax
  42df2a:	stc    
  42df2b:	dec    edi
  42df2c:	mov    ds:0xc989c60e,eax
  42df31:	test   DWORD PTR [edi-0x7beaf383],eax
  42df37:	sub    BYTE PTR [ebx+0x6b],bl
  42df3a:	cmc    
  42df3b:	call   0x383c74
  42df40:	add    BYTE PTR [eax],al
  42df42:	jg     0x42df9a
  42df44:	sbb    eax,0x7483d285
  42df4a:	daa    
  42df4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df4c:	dec    ebx
  42df4d:	call   0x45c47453
  42df52:	dec    esp
  42df53:	adc    eax,0x5eade844
  42df58:	adc    al,0xfc
  42df5a:	fwait
  42df5b:	push   0x5
  42df5d:	test   BYTE PTR [ebx+0x6d00000d],bl
  42df63:	pop    esi
  42df64:	adc    esp,edi
  42df66:	stos   DWORD PTR es:[edi],eax
  42df67:	push   0x6e
  42df69:	pop    ds
  42df6a:	je     0x42df6d
  42df6c:	cld    
  42df6d:	dec    ebx
  42df6f:	sahf   
  42df70:	shl    BYTE PTR [ebp+edx*8+0x4e],cl
  42df74:	icebp  
  42df75:	mov    edi,edi
  42df77:	mov    al,ds:0x754fffe
  42df7c:	add    bh,ah
  42df7e:	retf   0x2493
  42df81:	or     dh,bh
  42df83:	stc    
  42df84:	repnz test BYTE PTR [edi+0x5efffea0],cl
  42df8b:	sub    eax,0xc7e642a8
  42df90:	jmp    0x42dfee
  42df92:	mov    DWORD PTR [ebx*1-0x143aef79],esi
  42df99:	pushf  
  42df9a:	adc    eax,0x1faa1cc
  42df9f:	xchg   ecx,eax
  42dfa0:	in     eax,0x44
  42dfa2:	imul   ecx,edi,0xfb4c
  42dfa8:	add    ch,cl
  42dfaa:	jne    0x42dff8
  42dfac:	dec    ecx
  42dfad:	imul   ebp,DWORD PTR [edi+0x3f],0x6a
  42dfb1:	jae    0x42df54
  42dfb3:	mov    WORD PTR [eax-0x1c],cs
  42dfb6:	mov    ds:0x9885afa,al
  42dfbb:	das    
  42dfbc:	push   ebx
  42dfbd:	mov    edi,DWORD PTR [edi-0x41]
  42dfc0:	fisubr DWORD PTR ds:0xa042ff82
  42dfc6:	xchg   ebp,eax
  42dfc7:	aaa    
  42dfc8:	cld    
  42dfc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfca:	xchg   BYTE PTR [ebx+0x72],dh
  42dfcd:	pop    ss
  42dfce:	sub    BYTE PTR [eax+0x4c75723e],bl
  42dfd4:	dec    ecx
  42dfd5:	pop    es
  42dfd6:	jns    0x42e01b
  42dfd8:	sbb    al,BYTE PTR [ebx-0x5e]
  42dfdb:	ss adc al,0x53
  42dfde:	jecxz  0x42df65
  42dfe0:	pop    eax
  42dfe1:	jl     0x42df84
  42dfe3:	cli    
  42dfe4:	add    bl,BYTE PTR [eax+0x1fe274f6]
  42dfea:	push   0x2208f243
  42dfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dff0:	aad    0x1d
  42dff2:	xchg   esi,eax
  42dff3:	jns    0x42e04e
  42dff5:	cmp    al,0x12
  42dff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dff8:	fistp  QWORD PTR [ebp-0x65]
  42dffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dffc:	or     cl,BYTE PTR [ebx-0x18]
  42dfff:	das    
  42e000:	xor    BYTE PTR [ebx+0x2efda77b],al
  42e006:	adc    DWORD PTR [eax],esi
  42e008:	sbb    ch,dl
  42e00a:	imul   ebp,DWORD PTR [ebx+0x32270000],0x69
  42e011:	and    eax,0xd553ffae
  42e016:	jmp    0x42e026
  42e018:	shl    DWORD PTR [ecx],1
  42e01a:	xrelease mov DWORD PTR [ecx],ecx
  42e01d:	cli    
  42e01e:	or     edi,esp
  42e020:	mov    edx,0x33e9d93e
  42e025:	add    eax,0xa5284f02
  42e02a:	jg     0x42dfbd
  42e02c:	out    0x2f,eax
  42e02e:	jecxz  0x42dfbc
  42e030:	arpl   WORD PTR [esi+ebp*2-0x6f],ax
  42e034:	cdq    
  42e035:	add    ch,cl
  42e037:	add    ah,BYTE PTR [esi+0x67]
  42e03a:	push   ss
  42e03b:	xchg   ecx,eax
  42e03c:	mov    DWORD PTR [ebp+0x3ced1650],esp
  42e042:	pop    esp
  42e043:	(bad)  
  42e045:	jecxz  0x42dfe8
  42e047:	lds    ebx,FWORD PTR [ebp-0x79]
  42e04a:	push   es
  42e04b:	xchg   ecx,eax
  42e04c:	imul   esp,DWORD PTR [ebp-0x5a9b48c3],0x993ddd2f
  42e056:	(bad)
  42e059:	icebp  
  42e05a:	pop    ds
  42e05b:	dec    ecx
  42e05c:	push   cs
  42e05d:	lds    eax,FWORD PTR [esi-0x125697cf]
  42e063:	lea    edi,[ecx]
  42e065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e066:	xchg   BYTE PTR [ecx],bh
  42e068:	add    BYTE PTR [edx-0x4e],ch
  42e06b:	test   eax,0x87eab4ff
  42e070:	mov    ebp,ds
  42e072:	add    BYTE PTR [eax],al
  42e074:	xor    DWORD PTR [edx+edi*8-0x489a2de2],edx
  42e07b:	stos   BYTE PTR es:[edi],al
  42e07c:	(bad)  
  42e07d:	daa    
  42e07e:	hlt    
  42e07f:	mov    cl,0x53
  42e081:	mov    eax,0xb8bdf273
  42e086:	jae    0x42e06e
  42e088:	cmp    eax,0xd140e850
  42e08d:	or     DWORD PTR [eax],eax
  42e08f:	(bad)  
  42e090:	jmp    0x7ee9:0xfab084a1
  42e097:	pop    esp
  42e098:	lds    ecx,FWORD PTR [edx]
  42e09a:	or     esp,DWORD PTR [edi+0x4e]
  42e09d:	nop
  42e09e:	cli    
  42e09f:	jmp    0x724b1e51
  42e0a4:	sbb    edi,edx
  42e0a6:	mov    bl,dh
  42e0a8:	std    
  42e0a9:	cmp    eax,0x1c202f8
  42e0ae:	mov    DWORD PTR [ebx],esp
  42e0b0:	aad    0xa2
  42e0b2:	jge    0x42e09d
  42e0b4:	(bad)  
  42e0b5:	or     DWORD PTR [edi-0x4f],edi
  42e0b8:	cmp    DWORD PTR [edi-0xa549d84],esp
  42e0be:	cmp    BYTE PTR [ecx+edi*2],bl
  42e0c1:	sbb    al,0x3a
  42e0c3:	push   0x70
  42e0c5:	or     al,0x7c
  42e0c7:	retf   
  42e0c8:	retf   
  42e0c9:	or     al,0xb5
  42e0cb:	jno    0x42e13e
  42e0cd:	xchg   ebx,eax
  42e0ce:	cli    
  42e0cf:	sbb    DWORD PTR [ebp+eax*4-0x6c8e99cd],ebp
  42e0d6:	jle    0x42e101
  42e0d8:	add    BYTE PTR [eax],al
  42e0da:	push   ds
  42e0db:	inc    eax
  42e0dc:	xchg   DWORD PTR [esi+eax*8-0x591e3ff0],ebp
  42e0e3:	xchg   esp,eax
  42e0e4:	adc    al,0x0
  42e0e6:	sub    al,0xfe
  42e0e8:	aas    
  42e0e9:	add    BYTE PTR [edi+0x50],ch
  42e0ec:	push   es
  42e0ed:	cmp    DWORD PTR [ecx],edi
  42e0ef:	xor    al,0x79
  42e0f1:	push   es
  42e0f2:	jne    0x42e11b
  42e0f4:	pop    ebx
  42e0f5:	push   DWORD PTR [ebx+0x88d8165]
  42e0fb:	gs cmc 
  42e0fd:	inc    ebx
  42e0ff:	jmp    DWORD PTR [ebx+0x7b0b7fb8]
  42e105:	mov    ebp,0xfff5665c
  42e10a:	lods   al,BYTE PTR ds:[esi]
  42e10b:	fild   WORD PTR [ebx]
  42e10d:	xor    ebp,esp
  42e10f:	jno    0x42e113
  42e111:	mov    edi,DWORD PTR [ecx+0x33]
  42e114:	cwde   
  42e115:	sub    edi,DWORD PTR [esi+0x55]
  42e118:	repnz add DWORD PTR [edx-0x40fb82f8],0xffffffc5
  42e120:	loope  0x42e13b
  42e122:	not    eax
  42e124:	xchg   edi,eax
  42e125:	sub    ebp,ecx
  42e127:	adc    eax,0x7e9c4d82
  42e12c:	jnp    0x55646b0b
  42e132:	or     al,0x7d
  42e134:	dec    edi
  42e135:	add    al,0x47
  42e137:	pop    es
  42e138:	(bad)  
  42e139:	(bad)  
  42e13a:	adc    al,0x4b
  42e13c:	push   esi
  42e13d:	pop    ebx
  42e13e:	add    BYTE PTR [eax],al
  42e140:	xor    eax,0x9000ac8
  42e145:	jg     0x42e12d
  42e147:	push   ecx
  42e148:	out    dx,eax
  42e149:	shl    dh,cl
  42e14b:	jne    0x42e191
  42e14d:	mov    eax,0xefd453d1
  42e152:	add    eax,DWORD PTR [eax]
  42e154:	cmp    al,0x83
  42e156:	pop    ebx
  42e157:	push   DWORD PTR [ebx+0x6c110a90]
  42e15d:	or     eax,DWORD PTR [ebx-0x65042a08]
  42e163:	jae    0x42e1da
  42e165:	push   esi
  42e166:	xor    ebx,edi
  42e168:	adc    BYTE PTR [esi+eiz*4-0x61308a46],0x86
  42e170:	add    eax,0x9d73919c
  42e175:	or     ecx,DWORD PTR [ecx]
  42e177:	sbb    al,0x7
  42e179:	dec    BYTE PTR fs:[esi-0x7a]
  42e17d:	push   ebx
  42e17e:	pop    es
  42e17f:	shl    DWORD PTR [ebp+0x264ffe62],cl
  42e185:	push   esp
  42e186:	xor    eax,0xf540e0fb
  42e18b:	aas    
  42e18c:	aad    0x19
  42e18e:	dec    ecx
  42e18f:	or     dh,bh
  42e191:	jecxz  0x42e1aa
  42e193:	pop    ss
  42e194:	cmp    eax,0xaaffe5b1
  42e199:	rcr    BYTE PTR [esi+0x3e92b114],1
  42e19f:	add    BYTE PTR [edx+0xfb0c2d],bl
  42e1a5:	add    al,ch
  42e1a7:	push   0x5ed53ff4
  42e1ac:	inc    edi
  42e1ad:	sti    
  42e1ae:	aam    0xbb
  42e1b0:	adc    BYTE PTR [eax-0x2b],ch
  42e1b3:	and    bh,bh
  42e1b5:	inc    DWORD PTR [esi]
  42e1b7:	div    DWORD PTR [esi]
  42e1b9:	sti    
  42e1ba:	rol    BYTE PTR [ebp+esi*8+0x3f],0xd5
  42e1bf:	xlat   BYTE PTR ds:[ebx]
  42e1c0:	sahf   
  42e1c1:	adc    al,0x8d
  42e1c3:	xchg   edx,eax
  42e1c4:	add    BYTE PTR ds:[ebx-0x5504b7d6],dh
  42e1cb:	jmp    0x42e199
  42e1cd:	mov    ebp,0x8737a0cd
  42e1d2:	sub    DWORD PTR [ebx],esp
  42e1d4:	mov    ds:0x4b0c54f7,eax
  42e1d9:	(bad)  
  42e1da:	sub    cl,BYTE PTR [ecx]
  42e1dc:	jmp    0x312f3c17
  42e1e1:	cmc    
  42e1e2:	fimul  DWORD PTR [ecx]
  42e1e4:	mov    ebx,0x228ec23a
  42e1e9:	inc    edi
  42e1ea:	mov    cl,0xfe
  42e1ec:	call   0xd528607d
  42e1f1:	mov    WORD PTR [esi-0x1b],?
  42e1f4:	fdivr  DWORD PTR [edx]
  42e1f6:	jnp    0x42e203
  42e1f8:	sub    bh,al
  42e1fa:	retf   0xa8f8
  42e1fd:	add    ecx,DWORD PTR [ebp+eax*2-0x3b]
  42e201:	sti    
  42e202:	dec    ebp
  42e203:	or     eax,0x9253ffcd
  42e208:	or     DWORD PTR [edx],edx
  42e20a:	add    BYTE PTR [eax],al
  42e20c:	push   ecx
  42e20d:	shl    edi,cl
  42e20f:	add    edx,ebp
  42e211:	jle    0x42e1b7
  42e213:	out    0xf2,eax
  42e215:	cmp    edx,esi
  42e217:	push   ss
  42e218:	stc    
  42e219:	in     eax,dx
  42e21a:	and    DWORD PTR [edi-0xf],eax
  42e21d:	fst    DWORD PTR [esi+eax*1]
  42e220:	aad    0x9
  42e222:	(bad)  
  42e224:	jbe    0x42e221
  42e226:	sub    BYTE PTR [esp+edi*2],al
  42e229:	pop    es
  42e22a:	call   0x34c3b732
  42e22f:	call   0x11ecb2e6
  42e234:	push   edi
  42e235:	mov    al,ds:0xd0d503e8
  42e23a:	fist   DWORD PTR [edi]
  42e23c:	or     DWORD PTR [ecx-0x17],0xe8ac5910
  42e243:	add    edx,ebp
  42e245:	fsubr  DWORD PTR [eax-0x71a3125]
  42e24b:	sbb    ecx,esp
  42e24d:	sbb    BYTE PTR [eax+ebp*8],0xe6
  42e251:	shr    ah,cl
  42e253:	test   edi,ecx
  42e255:	test   edi,edi
  42e257:	lahf   
  42e258:	(bad)  [ecx]
  42e25a:	add    BYTE PTR [ecx],ch
  42e25c:	or     BYTE PTR [ecx+0x24],cl
  42e25f:	stc    
  42e260:	enter  0x509d,0x51
  42e264:	jnp    0x42e298
  42e266:	sti    
  42e267:	push   esi
  42e268:	pop    esi
  42e269:	dec    ecx
  42e26a:	and    al,0x9
  42e26c:	sub    al,cl
  42e26e:	or     ch,BYTE PTR [ebp+0x0]
  42e271:	add    BYTE PTR [ecx+0x35e9fa8c],ch
  42e277:	sbb    DWORD PTR [ecx+edi*8],esp
  42e27a:	lods   eax,DWORD PTR ds:[esi]
  42e27b:	and    DWORD PTR [eax],eax
  42e27d:	in     eax,0xd6
  42e27f:	or     ebx,edi
  42e281:	cld    
  42e282:	out    0xf9,al
  42e284:	aas    
  42e285:	jmp    0x1e797fd3
  42e28a:	in     al,0x85
  42e28c:	(bad)
  42e290:	lea    ebp,[ebp-0x68b01746]
  42e296:	outs   dx,BYTE PTR ds:[esi]
  42e297:	ds out 0xf7,eax
  42e29a:	jne    0x42e2d6
  42e29c:	xchg   ecx,esi
  42e29e:	jne    0x42e25b
  42e2a0:	test   dh,ah
  42e2a2:	retf   0x8713
  42e2a5:	and    eax,0xec36e8ad
  42e2aa:	mov    ?,WORD PTR [esi+0x21e3e93e]
  42e2b0:	sti    
  42e2b1:	(bad)  
  42e2b2:	xor    eax,0x16d94bf5
  42e2b7:	or     dh,BYTE PTR [edi]
  42e2b9:	in     al,dx
  42e2ba:	mov    si,0xe93e
  42e2be:	ret    
  42e2bf:	xor    DWORD PTR [edi+0xb6aa6f6],eax
  42e2c5:	mov    ebx,0xe9870a11
  42e2ca:	jle    0x42e277
  42e2cc:	aaa    
  42e2cd:	(bad)  
  42e2ce:	jne    0x42e255
  42e2d0:	mov    edi,0x83434100
  42e2d5:	dec    esp
  42e2d6:	add    BYTE PTR [eax],al
  42e2d8:	adc    BYTE PTR [eax+0x4b90c8b],bl
  42e2de:	add    BYTE PTR [eax],al
  42e2e0:	cmp    al,0x7b
  42e2e2:	outs   dx,BYTE PTR ds:[esi]
  42e2e3:	and    al,0x20
  42e2e5:	pusha  
  42e2e6:	ds aaa 
  42e2e8:	jp     0x42e353
  42e2ea:	jle    0x42e2ac
  42e2ec:	xor    BYTE PTR [ebx-0x6a2fab7f],bl
  42e2f2:	add    DWORD PTR [eax+edx*8-0x4b],0x91d04c81
  42e2fa:	cmc    
  42e2fb:	je     0x42e2dd
  42e2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2fe:	cmc    
  42e2ff:	inc    esp
  42e300:	rcl    BYTE PTR [ecx-0x57efbb0b],1
  42e306:	xchg   DWORD PTR [ebx*2-0x4fdb9197],eax
  42e30d:	pop    edi
  42e30e:	cmp    dh,bh
  42e310:	fld    TBYTE PTR [ecx+0x7e]
  42e313:	rol    BYTE PTR [eax+0x4],0xbe
  42e317:	inc    esp
  42e318:	nop
  42e319:	cli    
  42e31a:	add    BYTE PTR [edi-0x2c],dl
  42e31d:	mov    ecx,0xb7bbfe2d
  42e322:	cmc    
  42e323:	inc    DWORD PTR [eax]
  42e325:	mov    ds:0x795fff1a,al
  42e32a:	ds and al,0xd4
  42e32d:	aad    0xf6
  42e32f:	je     0x42e301
  42e331:	or     edi,esi
  42e333:	adc    eax,0x3a9564
  42e338:	icebp  
  42e339:	lds    eax,FWORD PTR ds:0x2f000085
  42e33f:	ins    BYTE PTR es:[edi],dx
  42e340:	cmc    
  42e341:	(bad)  
  42e342:	cmp    esi,edx
  42e344:	and    ebx,DWORD PTR [eax]
  42e346:	cmp    edx,DWORD PTR [edi+0x37]
  42e349:	jl     0x42e2db
  42e34b:	mov    eax,DWORD PTR ds:0x9a45d585
  42e351:	cli    
  42e352:	dec    edx
  42e353:	jl     0x42e36c
  42e355:	and    al,0xe9
  42e357:	js     0x42e3cb
  42e359:	xor    bh,BYTE PTR [ebx]
  42e35b:	or     al,0x86
  42e35d:	inc    ebx
  42e35e:	stc    
  42e35f:	mov    ds:0x278e5a39,eax
  42e364:	test   eax,0x482b165c
  42e369:	and    al,0xd1
  42e36b:	mov    eax,ds:0xdc048734
  42e370:	add    DWORD PTR [ecx+ecx*4-0x248c01a0],ebx
  42e377:	push   0xffffffa6
  42e379:	jno    0x42e33d
  42e37b:	retf   0x869a
  42e37e:	sbb    esi,DWORD PTR [ebx-0x40]
  42e381:	add    edx,ebp
  42e383:	jae    0x42e314
  42e385:	inc    ecx
  42e386:	fst    DWORD PTR [eax-0x67]
  42e389:	adc    al,0x25
  42e38b:	xchg   edx,eax
  42e38c:	add    BYTE PTR ds:[esi-0x8],bl
  42e390:	mov    dl,bh
  42e392:	inc    eax
  42e393:	lods   eax,DWORD PTR ds:[esi]
  42e394:	xchg   ecx,esi
  42e396:	dec    ecx
  42e397:	cdq    
  42e398:	test   DWORD PTR [ecx],eax
  42e39a:	das    
  42e39b:	mov    ds:0xb0b2c985,al
  42e3a0:	test   edx,eax
  42e3a2:	add    BYTE PTR [eax],al
  42e3a4:	or     ah,al
  42e3a6:	cs push edx
  42e3a8:	or     dh,BYTE PTR [edi]
  42e3aa:	into   
  42e3ab:	xchg   BYTE PTR [edi-0x51d13c11],ah
  42e3b1:	shl    esi,cl
  42e3b3:	lock pop eax
  42e3b5:	adc    ecx,ebx
  42e3b7:	cli    
  42e3b8:	add    BYTE PTR [ebx-0x77],0xcd
  42e3bc:	add    DWORD PTR [ebx+0x1ce31388],ebx
  42e3c2:	mov    cl,0x73
  42e3c4:	shr    BYTE PTR [eax],cl
  42e3c6:	hlt    
  42e3c7:	inc    eax
  42e3c8:	push   ss
  42e3c9:	or     dh,BYTE PTR [edx]
  42e3cb:	sbb    DWORD PTR [ebp-0x7c],ebp
  42e3ce:	cdq    
  42e3cf:	sbb    dh,dl
  42e3d1:	inc    eax
  42e3d2:	push   ds
  42e3d3:	pop    esp
  42e3d4:	ror    BYTE PTR [ecx],0xe2
  42e3d7:	adc    DWORD PTR [eax+ecx*1],0xffffffe9
  42e3db:	mov    cl,BYTE PTR [esi+0x1d88d8e5]
  42e3e1:	adc    eax,0x2acd8ce7
  42e3e6:	or     edi,DWORD PTR [ebx]
  42e3e8:	arpl   WORD PTR ds:0x9d5238e9,ax
  42e3ee:	mov    bh,0x82
  42e3f0:	jns    0x42e37f
  42e3f2:	call   0x56c18b29
  42e3f7:	shr    BYTE PTR [ebx],cl
  42e3f9:	test   BYTE PTR [edx],bh
  42e3fb:	pop    ss
  42e3fc:	fidiv  DWORD PTR [edx]
  42e3fe:	outs   dx,BYTE PTR ds:[esi]
  42e3ff:	and    cl,ah
  42e401:	fisubr WORD PTR [edi]
  42e403:	mov    BYTE PTR [edx],ch
  42e405:	adc    eax,0xed5
  42e40a:	es cmc 
  42e40c:	icebp  
  42e40d:	and    eax,0xa94b750
  42e412:	aaa    
  42e413:	xchg   ebx,eax
  42e414:	test   DWORD PTR [edx+0x42a10c95],0x3e10ff0f
  42e41e:	push   eax
  42e41f:	xor    BYTE PTR [ebx+0xa],0x32
  42e423:	jae    0x42e40b
  42e425:	dec    edx
  42e426:	xchg   esi,eax
  42e427:	iret   
  42e428:	in     al,dx
  42e429:	sbb    ch,dl
  42e42b:	adc    BYTE PTR [ecx-0x2f],ch
  42e42e:	pop    edx
  42e42f:	lock outs dx,DWORD PTR ds:[esi]
  42e431:	add    ebx,DWORD PTR [edx-0x31]
  42e434:	loopne 0x42e3bc
  42e436:	dec    edx
  42e437:	(bad)  
  42e438:	out    0x8a,al
  42e43a:	jmp    0xafe5:0x1ca02b94
  42e441:	ret    0x9da
  42e444:	add    BYTE PTR [eax],bl
  42e446:	mov    ds:0x96faef90,eax
  42e44b:	mov    cs,eax
  42e44d:	sbb    al,0xcd
  42e44f:	mov    cs,ebp
  42e451:	adc    al,0xe1
  42e453:	mov    dh,ch
  42e455:	xchg   esi,eax
  42e456:	push   0xda177a84
  42e45b:	rcl    DWORD PTR [edx-0x17],0xd1
  42e45f:	mov    DWORD PTR [ecx+ebp*4-0x56d0c72f],eax
  42e466:	or     al,0x79
  42e468:	je     0x42e44e
  42e46a:	sbb    BYTE PTR [ebx+esi*2-0x29ffff57],0x40
  42e472:	rcl    ah,1
  42e474:	or     ch,bl
  42e476:	cmp    bh,ch
  42e478:	loop   0x42e49e
  42e47a:	repz xor ah,bh
  42e47d:	push   ecx
  42e47e:	jle    0x42e4c8
  42e480:	hlt    
  42e481:	xchg   ebp,eax
  42e482:	adc    BYTE PTR [esi+0x42800cd6],0xe1
  42e489:	fimul  DWORD PTR [ebp+eiz*4+0x615010fa]
  42e490:	cmp    eax,DWORD PTR [edx+edi*8-0x5248162]
  42e497:	push   ss
  42e498:	push   0xef2a58e2
  42e49d:	adc    eax,0x48f3d168
  42e4a2:	add    BYTE PTR [ecx],dl
  42e4a4:	or     al,0xb1
  42e4a6:	(bad)  
  42e4a7:	call   0xea3ed201
  42e4ac:	inc    ecx
  42e4ad:	std    
  42e4ae:	or     esp,esi
  42e4b0:	ret    
  42e4b1:	adc    ebx,edi
  42e4b3:	hlt    
  42e4b4:	sub    bl,BYTE PTR [edx]
  42e4b6:	inc    eax
  42e4b7:	jmp    0x6b26b21b
  42e4bc:	adc    eax,DWORD PTR [esi+0x17a700fa]
  42e4c2:	sub    eax,eax
  42e4c4:	mov    esp,0x9465814a
  42e4c9:	mov    edx,eax
  42e4cb:	push   ebp
  42e4cd:	iret   
  42e4ce:	sti    
  42e4cf:	call   0x3dd8fb
  42e4d4:	add    BYTE PTR [eax],al
  42e4d6:	jle    0x42e4ec
  42e4d8:	add    BYTE PTR [ebp-0x49],dl
  42e4db:	mov    eax,0x9120ec79
  42e4e0:	dec    edi
  42e4e1:	or     bh,bl
  42e4e3:	xchg   edx,eax
  42e4e4:	pop    ss
  42e4e5:	push   esi
  42e4e6:	retf   
  42e4e7:	xchg   edx,eax
  42e4e8:	repnz (bad)
  42e4eb:	int    0x37
  42e4ed:	mov    ebp,DWORD PTR [ebx]
  42e4ef:	pusha  
  42e4f0:	and    ebx,edx
  42e4f2:	and    esi,ebp
  42e4f4:	retf   0x630f
  42e4f7:	dec    ecx
  42e4f8:	and    edx,esi
  42e4fa:	jne    0x42e51b
  42e4fc:	cld    
  42e4fd:	mov    ebx,DWORD PTR ds:0xb8758910
  42e503:	adc    eax,0x8e877a7
  42e508:	lock add ebp,DWORD PTR [ebx]
  42e50b:	test   BYTE PTR [edx+0x7d],bh
  42e50e:	hlt    
  42e50f:	or     ecx,DWORD PTR [ecx+0x820b455]
  42e515:	mov    edi,DWORD PTR [ebx+0x6b]
  42e518:	xchg   DWORD PTR [ebp-0x4c],eax
  42e51b:	mov    dl,0x0
  42e51d:	mov    DWORD PTR [ecx+0x13],ebp
  42e520:	xor    DWORD PTR [edi-0x74],0xffffff92
  42e524:	push   edi
  42e525:	or     al,0x87
  42e527:	dec    eax
  42e528:	hlt    
  42e529:	movlps QWORD PTR [esi+0x34],xmm0
  42e52d:	add    edx,DWORD PTR [ecx+0x13]
  42e530:	not    DWORD PTR ds:0x3a7e38
  42e536:	push   es
  42e537:	retf   
  42e538:	aaa    
  42e539:	cmp    al,0x0
  42e53b:	add    ch,dl
  42e53d:	jno    0x42e54e
  42e53f:	pop    ds
  42e540:	dec    esi
  42e541:	cs or  al,0xe7
  42e544:	(bad)  
  42e546:	dec    eax
  42e547:	clc    
  42e548:	pusha  
  42e549:	test   DWORD PTR [esi],eax
  42e54b:	out    0xd3,eax
  42e54d:	jmp    0x3744:0x2ed3880b
  42e554:	xchg   edx,eax
  42e555:	and    ecx,DWORD PTR [esi+0x2a4c9fe]
  42e55b:	inc    ebp
  42e55c:	dec    ecx
  42e55d:	pop    esp
  42e55e:	shr    DWORD PTR [ebp+0x39],0x8c
  42e562:	das    
  42e563:	cmp    al,0xd7
  42e565:	test   esi,esp
  42e567:	xchg   BYTE PTR [eax+0x5e1ca978],bl
  42e56d:	cs pushf 
  42e56f:	(bad)  
  42e570:	sbb    cl,BYTE PTR [edi+eax*1+0x20814e62]
  42e577:	mov    ebx,ebp
  42e579:	repz mov ebp,0x23157fd
  42e57f:	aaa    
  42e580:	adc    al,0x63
  42e582:	mov    ?,esi
  42e584:	or     esp,0xbf14502
  42e58a:	ret    
  42e58b:	ins    DWORD PTR es:[edi],dx
  42e58c:	or     cl,ah
  42e58e:	jmp    0x42e5cb
  42e590:	fnstcw WORD PTR [ebp+0x789086da]
  42e596:	test   eax,0x96b55e16
  42e59b:	(bad)  
  42e59c:	xchg   edx,eax
  42e59d:	or     ecx,DWORD PTR [edx]
  42e59f:	xchg   DWORD PTR [eax],eax
  42e5a1:	add    ch,ah
  42e5a3:	jmp    0x74d66495
  42e5a8:	cmp    DWORD PTR [edi+0x6dc34bd9],0xfc0f73a7
  42e5b2:	(bad)  
  42e5b3:	lods   eax,DWORD PTR ds:[esi]
  42e5b4:	xchg   edx,eax
  42e5b5:	ss xchg esi,eax
  42e5b7:	or     DWORD PTR [edi-0x5b],edx
  42e5ba:	das    
  42e5bb:	call   0xd8bb2fd
  42e5c0:	jmp    0x67b83ff5
  42e5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5c6:	pop    edx
  42e5c7:	or     ecx,ebp
  42e5c9:	add    esp,DWORD PTR [edx]
  42e5cb:	loopne 0x42e5de
  42e5cd:	fwait
  42e5ce:	loope  0x42e5e5
  42e5d0:	pop    esi
  42e5d1:	fwait
  42e5d2:	jp     0x42e592
  42e5d4:	and    bl,BYTE PTR [ebx-0x3ca5e9a1]
  42e5da:	pop    ebp
  42e5db:	int3   
  42e5dc:	xchg   esp,eax
  42e5dd:	imul   edx,ebp,0xfffffffd
  42e5e0:	jmp    0xc4b3bb38
  42e5e5:	push   es
  42e5e6:	aad    0x9
  42e5e8:	mov    dh,0xbe
  42e5ea:	mov    ah,0x42
  42e5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5ed:	adc    bl,dl
  42e5ef:	dec    esi
  42e5f0:	sub    edx,DWORD PTR [eax+0x3e88620]
  42e5f6:	push   edx
  42e5f7:	int3   
  42e5f8:	pop    esp
  42e5f9:	(bad)  [ecx+0x3d0ad519]
  42e5ff:	or     ebx,ebp
  42e601:	push   cs
  42e602:	mov    eax,0x34984
  42e607:	add    ch,dl
  42e609:	mov    dh,BYTE PTR [eax]
  42e60b:	or     ebx,DWORD PTR [esp+ecx*8+0x34]
  42e60f:	mov    BYTE PTR [ecx-0x17],dl
  42e612:	xor    DWORD PTR [edx+0x1029d8df],ebx
  42e618:	leave  
  42e619:	nop
  42e61a:	ret    
  42e61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e61c:	pop    ebp
  42e61d:	out    0x18,eax
  42e61f:	mov    WORD PTR [ecx],gs
  42e621:	jb     0x42e682
  42e623:	cmp    BYTE PTR [ecx-0x41dc9cb3],bh
  42e629:	test   DWORD PTR [ecx],eax
  42e62b:	xlat   BYTE PTR ds:[ebx]
  42e62c:	mov    dl,0x85
  42e62e:	call   0x24a7cd
  42e633:	fcom   QWORD PTR [esi]
  42e635:	or     al,BYTE PTR [ebp+0x2e08c529]
  42e63b:	test   eax,0xe8fd533e
  42e640:	(bad)  
  42e641:	mov    WORD PTR [ebp*1+0x36004585],?
  42e648:	push   edx
  42e649:	mov    fs,WORD PTR [ebx-0x3a]
  42e64c:	dec    esp
  42e64d:	or     BYTE PTR [edi+0x6c],0xaa
  42e651:	dec    ebp
  42e652:	dec    edi
  42e653:	mov    dh,0x27
  42e655:	mov    ?,WORD PTR [edi-0x78391422]
  42e65b:	cmp    al,0x73
  42e65d:	aas    
  42e65e:	iret   
  42e65f:	adc    eax,0xed4a8c30
  42e664:	push   ecx
  42e665:	mov    fs,WORD PTR [edi-0x72]
  42e668:	pop    esp
  42e669:	xor    BYTE PTR [esi],0xa8
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	retf   0x270e
  42e671:	test   al,0x5e
  42e673:	into   
  42e674:	out    dx,eax
  42e675:	(bad)  
  42e676:	int3   
  42e677:	mov    WORD PTR [ebp+eax*1+0x22fa803c],es
  42e67e:	push   ss
  42e67f:	push   es
  42e680:	add    eax,0x44921612
  42e685:	inc    ebp
  42e686:	push   eax
  42e687:	into   
  42e688:	repz push 0x31
  42e68b:	xchg   DWORD PTR [edi+0x4bf88aac],eax
  42e691:	ss stos BYTE PTR es:[edi],al
  42e693:	(bad)  
  42e694:	(bad)  
  42e695:	call   0xe4b71070
  42e69a:	dec    esi
  42e69b:	out    0xe,al
  42e69d:	adc    dl,BYTE PTR [esi]
  42e69f:	(bad)  [esp+eiz*2+0x16fa80e5]
  42e6a6:	or     DWORD PTR [edi-0x7efecabc],edx
  42e6ac:	rol    DWORD PTR [eax],1
  42e6ae:	inc    ecx
  42e6af:	dec    esi
  42e6b0:	add    eax,0x327d7195
  42e6b5:	pop    ebp
  42e6b6:	jg     0x42e6cc
  42e6b8:	sub    BYTE PTR [ebx-0x7a7e7bc5],cl
  42e6be:	hlt    
  42e6bf:	mov    ds:0x48b7fff5,al
  42e6c4:	jnp    0x42e6cb
  42e6c6:	xlat   BYTE PTR ds:[ebx]
  42e6c7:	dec    eax
  42e6c8:	xchg   DWORD PTR [ebp-0x70],eax
  42e6cb:	xchg   ebp,eax
  42e6cc:	add    eax,0xf715018b
  42e6d1:	inc    DWORD PTR [eax]
  42e6d3:	add    BYTE PTR [ebx],ch
  42e6d5:	gs mov edi,0xbf75767d
  42e6db:	mov    DWORD PTR [ecx-0x3bfc1e4b],esi
  42e6e1:	xor    ecx,DWORD PTR [ebx]
  42e6e3:	cmp    BYTE PTR [ecx],cl
  42e6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6e6:	jae    0x42e6f1
  42e6e8:	and    al,0x3b
  42e6ea:	or     ecx,DWORD PTR [edi]
  42e6ec:	mov    al,0xa0
  42e6ee:	clc    
  42e6ef:	call   FWORD PTR [ebx+0x3d]
  42e6f2:	not    DWORD PTR ds:0x3a7484
  42e6f8:	mov    bh,0xa0
  42e6fa:	xor    ebx,edi
  42e6fc:	sti    
  42e6fd:	add    edi,DWORD PTR [edi+edi*8]
  42e700:	jnp    0x42e6a3
  42e702:	dec    ebp
  42e703:	inc    DWORD PTR [ecx]
  42e705:	lods   al,BYTE PTR ds:[esi]
  42e706:	or     al,BYTE PTR [eax-0x14]
  42e709:	cmp    BYTE PTR [ebx-0x75],cl
  42e70c:	pushf  
  42e70d:	mov    eax,ds:0xc810cc13
  42e712:	(bad)  
  42e713:	cmp    ch,BYTE PTR [edi-0x54db7bef]
  42e719:	mov    eax,ds:0x10298bf5
  42e71e:	div    DWORD PTR [edi-0x28]
  42e721:	aaa    
  42e722:	not    DWORD PTR ds:0x3a76dc
  42e728:	aad    0xe9
  42e72a:	cmp    eax,eax
  42e72c:	(bad)  
  42e72d:	das    
  42e72e:	or     cl,BYTE PTR [ebx+ecx*1]
  42e731:	or     al,0xea
  42e733:	fcmovnb st,st(5)
  42e735:	mov    al,0xfe
  42e737:	call   0x7c1be73c
  42e73c:	xchg   edx,eax
  42e73d:	cli    
  42e73e:	xchg   ebx,eax
  42e73f:	scas   al,BYTE PTR es:[edi]
  42e740:	fwait
  42e741:	add    bl,bh
  42e743:	sub    DWORD PTR [ecx],edi
  42e745:	mov    esp,0x114ecda
  42e74a:	aad    0x70
  42e74c:	test   DWORD PTR [ecx+ecx*8-0x17],eax
  42e750:	inc    eax
  42e751:	mov    al,ds:0x26b8365e
  42e756:	adc    BYTE PTR [ebp-0x15c68b74],bl
  42e75c:	inc    eax
  42e75d:	mov    al,0x4e
  42e75f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42e761:	es cwde 
  42e763:	dec    eax
  42e764:	mov    edx,0xfe728d44
  42e769:	call   ebp
  42e76b:	jmp    0x2e8b9bb0
  42e770:	js     0x42e7c1
  42e772:	xor    al,dh
  42e774:	adc    dl,al
  42e776:	xchg   esi,eax
  42e777:	jo     0x42e704
  42e779:	pop    esp
  42e77a:	ins    DWORD PTR es:[edi],dx
  42e77b:	jmp    0x1052:0x5e1aac38
  42e782:	xchg   ebp,eax
  42e783:	jo     0x42e803
  42e785:	jl     0x42e796
  42e787:	jb     0x42e70e
  42e789:	cmp    al,0x75
  42e78b:	test   BYTE PTR [esi],bh
  42e78d:	add    BYTE PTR [eax+0x19448755],al
  42e793:	mov    eax,ds:0xa1014487
  42e798:	xchg   ecx,eax
  42e799:	adc    al,0x8d
  42e79b:	fs add BYTE PTR ds:[eax],al
  42e79f:	add    BYTE PTR [eax+0x31],dl
  42e7a2:	adc    DWORD PTR [edi+0x2b],esp
  42e7a5:	or     ah,BYTE PTR [edx]
  42e7a7:	icebp  
  42e7a8:	xchg   edx,eax
  42e7a9:	sbb    DWORD PTR [ecx+0x1ccc4c03],ebp
  42e7af:	fstp   QWORD PTR [ecx]
  42e7b1:	jbe    0x42e746
  42e7b3:	add    ah,ch
  42e7b5:	in     al,0xf8
  42e7b7:	pandn  mm2,mm6
  42e7ba:	stc    
  42e7bb:	adc    BYTE PTR [ebp+0x4a77b82],ah
  42e7c1:	adc    ebx,0xffffff9f
  42e7c4:	loop   0x42e78f
  42e7c6:	call   0x3654f955
  42e7cb:	mov    DWORD PTR [ecx],edx
  42e7cd:	dec    esi
  42e7ce:	sar    cl,0x79
  42e7d1:	or     cl,0x32
  42e7d4:	sti    
  42e7d5:	or     BYTE PTR [ecx-0x7f],dl
  42e7d8:	push   0xffffff82
  42e7da:	call   0x6158d175
  42e7df:	cmp    BYTE PTR [ecx],bh
  42e7e1:	adc    BYTE PTR [ecx+0x1ba5b1db],0xf5
  42e7e8:	mov    al,0x7
  42e7ea:	xor    ebp,DWORD PTR [esi+eiz*8]
  42e7ed:	push   es
  42e7ee:	jmp    0xdd3f25f6
  42e7f3:	xchg   esi,eax
  42e7f4:	leave  
  42e7f5:	sbb    eax,0x8ed543dc
  42e7fa:	and    ecx,DWORD PTR [ebx+edi*4]
  42e7fd:	or     BYTE PTR [eax+ecx*2+0x11],ah
  42e801:	jno    0x42e784
  42e803:	xchg   edi,eax
  42e804:	add    BYTE PTR [eax],al
  42e806:	jb     0xdb43f86d
  42e80c:	pop    ecx
  42e80d:	lock push cs
  42e80f:	sbb    DWORD PTR [ecx-0x9fbaafd],ebp
  42e815:	add    al,0xde
  42e817:	mov    WORD PTR [ecx+0x3],ds
  42e81a:	aad    0x9
  42e81c:	add    BYTE PTR [ecx],bh
  42e81e:	in     eax,dx
  42e81f:	sti    
  42e820:	jmp    eax
  42e822:	dec    esi
  42e823:	in     eax,0xe
  42e825:	lock or eax,0x88ed7366
  42e82b:	(bad)  
  42e82c:	push   cs
  42e82d:	call   0x21576d22
  42e832:	mov    BYTE PTR [ecx+0x0],0x60
  42e836:	adc    eax,0xa7a43776
  42e83b:	std    
  42e83c:	or     DWORD PTR [edx-0x91c09b5],ebx
  42e842:	retf   0x5171
  42e845:	out    dx,al
  42e846:	sub    BYTE PTR [ebp+0xf],0x29
  42e84a:	ror    DWORD PTR [eax-0x713a0ebc],1
  42e850:	dec    esp
  42e851:	mov    ebp,0xcefba229
  42e856:	dec    eax
  42e857:	rcl    BYTE PTR [ecx+0x53],1
  42e85a:	test   BYTE PTR gs:[ebp+ebp*8+0x49],dh
  42e85f:	pop    esp
  42e860:	cli    
  42e861:	cmp    al,0x45
  42e863:	jl     0x42e83c
  42e865:	rcl    BYTE PTR [esi],cl
  42e867:	inc    ecx
  42e868:	push   edx
  42e869:	jo     0x42e86b
  42e86b:	add    BYTE PTR [edx],cl
  42e86d:	ret    0xf4fa
  42e870:	sbb    dl,BYTE PTR [ecx]
  42e872:	inc    eax
  42e873:	jmp    0x1551c696
  42e878:	fcmovnbe st,st(0)
  42e87a:	cli    
  42e87b:	cld    
  42e87c:	dec    edx
  42e87d:	test   BYTE PTR [ecx+edx*4-0xd],dh
  42e881:	test   BYTE PTR [ecx*4+0x1a004121],dl
  42e888:	(bad)  
  42e889:	out    0xa,eax
  42e88b:	data16 fimul DWORD PTR ds:0x838abc88
  42e892:	rcl    BYTE PTR [ecx],cl
  42e894:	ret    0x749d
  42e897:	clc    
  42e898:	mov    esp,0x4005205
  42e89d:	outs   dx,BYTE PTR ds:[esi]
  42e89e:	stc    
  42e89f:	(bad)  
  42e8a0:	in     al,dx
  42e8a1:	xchg   ebp,eax
  42e8a2:	jae    0x42e8b0
  42e8a4:	mov    ds:0x7c150e70,eax
  42e8a9:	or     al,0x83
  42e8ab:	inc    ebp
  42e8ac:	les    esi,FWORD PTR [edx]
  42e8ae:	add    DWORD PTR [ebp+0x3ce2b071],ecx
  42e8b4:	loopne 0x42e84c
  42e8b6:	cmc    
  42e8b7:	push   ebx
  42e8b8:	jecxz  0x42e90a
  42e8ba:	jbe    0x42e88c
  42e8bc:	jg     0x42e8ca
  42e8be:	not    DWORD PTR ds:0x3a7ce0
  42e8c4:	xlat   BYTE PTR ds:[ebx]
  42e8c5:	aas    
  42e8c6:	out    dx,al
  42e8c7:	inc    ebp
  42e8c8:	mov    BYTE PTR [eax+0x38b55b6e],al
  42e8ce:	in     al,dx
  42e8cf:	jne    0x42e8d1
  42e8d1:	add    BYTE PTR [ecx+0x63],bh
  42e8d4:	pop    ebx
  42e8d5:	lock sbb BYTE PTR [eax],cl
  42e8d8:	dec    ebx
  42e8d9:	dec    DWORD PTR [ecx]
  42e8db:	xchg   esi,eax
  42e8dc:	cmc    
  42e8dd:	jne    0x42e85f
  42e8df:	not    DWORD PTR cs:0x3a7c98
  42e8e6:	mov    edi,0xb7c44b88
  42e8eb:	mov    ebp,0x957004e2
  42e8f0:	cmc    
  42e8f1:	push   0x32
  42e8f3:	cs push 0xc2f17
  42e8f9:	dec    ecx
  42e8fb:	adc    edi,esi
  42e8fd:	adc    eax,0x3a6f08
  42e902:	(bad)  
  42e903:	or     al,0x8d
  42e905:	dec    ebp
  42e906:	push   0x5be8bd91
  42e90b:	mov    eax,ds:0xf73fff5
  42e910:	rcl    BYTE PTR [esi-0x5d],0x6f
  42e914:	ficom  DWORD PTR [eax]
  42e916:	aad    0xb2
  42e918:	(bad)  
  42e919:	push   ecx
  42e91a:	bnd je 0x42e8cf
  42e91d:	setne  BYTE PTR [edx-0x78]
  42e921:	inc    esp
  42e922:	ficomp WORD PTR [esi+0x340c5734]
  42e928:	add    eax,DWORD PTR [eax]
  42e92a:	retf   
  42e92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e92c:	mov    al,BYTE PTR [edi]
  42e92e:	inc    ecx
  42e92f:	enter  0x5cd5,0xb1
  42e933:	xchg   esi,eax
  42e934:	stc    
  42e935:	cmp    BYTE PTR [eax],al
  42e937:	add    BYTE PTR [eax],bl
  42e939:	and    DWORD PTR [ebx],ecx
  42e93b:	or     al,BYTE PTR [esi]
  42e93d:	adc    BYTE PTR [edx],cl
  42e93f:	lock stos BYTE PTR es:[edi],al
  42e941:	(bad)  
  42e942:	mov    ds:0x9a56a251,al
  42e947:	unpckhps xmm6,XMMWORD PTR [ecx+0x2f]
  42e94b:	lea    esp,[eax]
  42e94d:	and    eax,0x947dc288
  42e952:	mov    bh,dl
  42e954:	add    BYTE PTR [esi+esi*1-0x5],0x0
  42e959:	lea    edx,gs:[ecx+eiz*1]
  42e95d:	jne    0x42e99d
  42e95f:	add    BYTE PTR [eax-0x4f],dl
  42e962:	sbb    BYTE PTR [ecx-0x1974e1b3],ah
  42e968:	sub    eax,0x270808bf
  42e96d:	xor    al,0x4
  42e96f:	add    al,0xa6
  42e971:	sti    
  42e972:	das    
  42e973:	and    al,0xcd
  42e975:	ss aaa 
  42e977:	xchg   DWORD PTR [ecx-0x5c8c0db4],edi
  42e97d:	mov    BYTE PTR [ebx-0x7877d5a8],dh
  42e983:	mov    edi,0xfa8925a9
  42e988:	mov    eax,ds:0x91348f31
  42e98d:	mov    al,ds:0xa0a0042
  42e992:	cld    
  42e993:	dec    ebx
  42e994:	in     eax,0xc9
  42e996:	call   0x5ac7d419
  42e99b:	sbb    BYTE PTR [eax],al
  42e99d:	add    BYTE PTR [esi+0x6007ab42],bh
  42e9a3:	xor    ecx,edi
  42e9a5:	inc    ebx
  42e9a6:	xchg   BYTE PTR [ecx-0x31],dh
  42e9a9:	aad    0xdc
  42e9ab:	jle    0x42ea0a
  42e9ad:	dec    edx
  42e9ae:	fst    QWORD PTR [eax+0x1e147ee1]
  42e9b4:	jo     0x42ea01
  42e9b6:	fpatan 
  42e9b8:	clc    
  42e9b9:	adc    BYTE PTR [esi+ecx*1],0xb9
  42e9bd:	xchg   BYTE PTR [edi+0x449bb211],dl
  42e9c3:	cmp    BYTE PTR [ebx],al
  42e9c5:	xchg   ebx,eax
  42e9c6:	pop    ebx
  42e9c7:	(bad)  
  42e9c8:	lock leave 
  42e9ca:	aam    0x8
  42e9cc:	(bad)  
  42e9cd:	sti    
  42e9ce:	daa    
  42e9cf:	fucomi st,st(1)
  42e9d1:	clc    
  42e9d2:	push   0x15
  42e9d4:	sub    DWORD PTR [esi+ebx*1],eax
  42e9d7:	loopne 0x42ea16
  42e9d9:	(bad)  
  42e9da:	ror    BYTE PTR [ecx],cl
  42e9dc:	fisttp DWORD PTR [eax]
  42e9de:	fstp   QWORD PTR [ebx+0x25]
  42e9e1:	add    al,0xd1
  42e9e3:	xlat   BYTE PTR ds:[ebx]
  42e9e4:	ins    DWORD PTR es:[edi],dx
  42e9e5:	pop    ss
  42e9e6:	mov    ecx,0x72e73511
  42e9eb:	out    0xf,eax
  42e9ed:	xchg   ebx,eax
  42e9ee:	dec    edi
  42e9ef:	test   DWORD PTR [eax-0x24811ce9],ebp
  42e9f5:	(bad)  
  42e9f7:	retf   0x92e8
  42e9fa:	loope  0x42e9bd
  42e9fc:	test   DWORD PTR [ebx-0x2b],0x17a884
  42ea03:	add    bl,dl
  42ea05:	inc    edx
  42ea06:	stc    
  42ea07:	pop    es
  42ea08:	test   al,0x4
  42ea0a:	mov    dh,0xc3
  42ea0c:	fidiv  DWORD PTR [edx-0x1]
  42ea0f:	loope  0x42ea78
  42ea11:	cli    
  42ea12:	and    ebx,ebp
  42ea14:	int3   
  42ea15:	adc    BYTE PTR [edi*1-0x40ffc1f5],0x10
  42ea1d:	push   es
  42ea1e:	add    BYTE PTR [ebx+esi*2-0x111b0e8e],bh
  42ea25:	dec    ebx
  42ea26:	ds jmp 0x7295c606
  42ea2c:	lds    edx,FWORD PTR [ecx]
  42ea2e:	je     0x42ea2e
  42ea30:	outs   dx,BYTE PTR ds:[esi]
  42ea31:	sbb    al,0x59
  42ea33:	mov    DWORD PTR cs:[bx-0x4b63],edi
  42ea39:	xor    BYTE PTR [ebx*4+0x16003c86],0xad
  42ea41:	mov    ch,0x10
  42ea43:	test   eax,0x6cef84d6
  42ea48:	cmp    al,0xf9
  42ea4a:	sbb    eax,edx
  42ea4c:	les    eax,FWORD PTR ds:0xc66cde75
  42ea52:	movaps xmm2,xmm4
  42ea55:	adc    bh,bl
  42ea57:	pop    esp
  42ea58:	aad    0x80
  42ea5a:	adc    al,0xa5
  42ea5c:	cmp    DWORD PTR ds:0x121f6200,0x64d7e7c2
  42ea66:	or     al,0xc6
  42ea68:	add    BYTE PTR [eax],al
  42ea6a:	retf   0xfb19
  42ea6d:	xor    al,0xd5
  42ea6f:	fdivr  st,st(2)
  42ea71:	fcomp  QWORD PTR [edx]
  42ea73:	sbb    DWORD PTR [eax-0x17],eax
  42ea76:	add    eax,0xd5ab5ce0
  42ea7b:	or     edx,esi
  42ea7d:	in     al,0x3e
  42ea7f:	dec    edi
  42ea80:	ds jmp 0x15c9c260
  42ea86:	cmp    eax,0x12007405
  42ea8b:	mov    eax,ds:0x9a9b58c1
  42ea90:	jle    0x42ea52
  42ea92:	adc    BYTE PTR [ebp+esi*8+0x35],ch
  42ea96:	clc    
  42ea97:	mov    eax,0x747b0039
  42ea9c:	mov    dl,0x11
  42ea9e:	sub    al,0x9
  42eaa0:	test   eax,eax
  42eaa2:	adc    BYTE PTR [ecx+esi*1+0x70],bh
  42eaa6:	lock adc ecx,DWORD PTR [eax]
  42eaa9:	(bad)  
  42eaaa:	in     al,dx
  42eaab:	pop    es
  42eaac:	add    DWORD PTR [eax-0x1c],0xffffff9d
  42eab0:	std    
  42eab1:	push   ebp
  42eab2:	or     esi,DWORD PTR [ebp-0x5e]
  42eab5:	adc    al,0x7c
  42eab7:	or     BYTE PTR [esi-0x3e],dl
  42eaba:	mov    al,0x8
  42eabc:	out    dx,al
  42eabd:	add    eax,0x39b6c4
  42eac2:	rol    BYTE PTR [edx-0x7d],0x74
  42eac6:	nop
  42eac7:	sub    BYTE PTR [esi+0x26],0xc4
  42eacb:	mov    DWORD PTR [edx-0x1],edx
  42eace:	add    BYTE PTR [eax],al
  42ead0:	fwait
  42ead1:	test   BYTE PTR [edx+0x3399a974],bh
  42ead7:	jl     0x42eac5
  42ead9:	(bad)  
  42eada:	(bad)  
  42eadb:	inc    BYTE PTR [ecx+0x6c400fd0]
  42eae1:	cmp    DWORD PTR [edx+0x6a4d7974],0x4
  42eae8:	add    DWORD PTR [esi-0x40],edi
  42eaeb:	add    BYTE PTR [ebp-0x3],ch
  42eaee:	cmp    cl,BYTE PTR [eax]
  42eaf0:	xchg   DWORD PTR [ecx],edx
  42eaf2:	dec    esi
  42eaf3:	push   DWORD PTR [ecx]
  42eaf5:	mov    al,ds:0x3a3c4009
  42eafa:	mov    edx,0x3a22c04
  42eaff:	or     BYTE PTR [esi-0x3b],bh
  42eb02:	inc    DWORD PTR [ebx]
  42eb04:	aad    0x3c
  42eb06:	jge    0x42eb7b
  42eb08:	icebp  
  42eb09:	pop    esi
  42eb0a:	adc    bl,BYTE PTR [edi]
  42eb0c:	sub    eax,0x1afb2c35
  42eb11:	out    0xbe,al
  42eb13:	jae    0x42eb04
  42eb15:	repz sar DWORD PTR [ebx+0x25],1
  42eb19:	das    
  42eb1a:	add    al,0xfb
  42eb1c:	call   0xd582d8cb
  42eb21:	in     eax,0xbe
  42eb23:	jae    0x42eb04
  42eb25:	pop    ss
  42eb26:	adc    al,0x8
  42eb28:	pusha  
  42eb29:	sar    DWORD PTR gs:[edi+0x51fbd795],cl
  42eb30:	fidiv  DWORD PTR [ebp+0xbe2]
  42eb36:	rcr    BYTE PTR [esi-0x46],cl
  42eb39:	adc    edx,DWORD PTR ds:0xcdbe3071
  42eb3f:	jo     0x42eb72
  42eb41:	xchg   DWORD PTR [ecx-0x78f7fded],ebp
  42eb47:	mov    al,0xfe
  42eb49:	add    eax,DWORD PTR [esi]
  42eb4b:	call   0xfd4df379
  42eb50:	pop    ds
  42eb51:	call   0xfad29425
  42eb56:	pop    ecx
  42eb57:	xor    DWORD PTR [ebx],edx
  42eb59:	bound  ecx,QWORD PTR [edx+0x16d00ab6]
  42eb5f:	jno    0x42eaea
  42eb61:	adc    al,0x3d
  42eb63:	cmp    BYTE PTR [esi],0x0
  42eb66:	pop    esi
  42eb67:	popa   
  42eb68:	mov    cl,dh
  42eb6a:	loope  0x42eba0
  42eb6c:	(bad)  
  42eb6d:	pop    ecx
  42eb6e:	fnstcw WORD PTR ds:0x6cd87f3b
  42eb74:	(bad)  
  42eb75:	jae    0x42eb59
  42eb77:	(bad)  
  42eb78:	repz mov WORD PTR [ebx-0x6772d1a4],ss
  42eb7f:	or     ebp,esi
  42eb81:	xor    ebp,DWORD PTR ds:0x2f8dc969
  42eb87:	xchg   DWORD PTR [ebx],edx
  42eb89:	hlt    
  42eb8a:	sub    dh,bh
  42eb8c:	mov    ebx,0xf0f41e36
  42eb91:	mov    es,ecx
  42eb93:	push   ecx
  42eb94:	fadd   DWORD PTR [ebx-0x2b]
  42eb97:	out    dx,eax
  42eb98:	call   0x8442ec2b
  42eb9d:	adc    DWORD PTR [esi-0x74],ebx
  42eba0:	js     0x42ebb7
  42eba2:	mov    dh,0x8e
  42eba4:	loope  0x42eb8f
  42eba6:	hlt    
  42eba7:	inc    ebx
  42eba8:	aad    0x72
  42ebaa:	xor    bl,ch
  42ebac:	sub    dl,bl
  42ebae:	dec    ecx
  42ebaf:	push   ss
  42ebb0:	int    0xc9
  42ebb2:	outs   dx,DWORD PTR ds:[esi]
  42ebb3:	inc    esi
  42ebb4:	mov    ecx,0xe2bfd37a
  42ebb9:	leave  
  42ebba:	call   0xa88ce5ed
  42ebbf:	jnp    0x42eb95
  42ebc1:	outs   dx,BYTE PTR ds:[esi]
  42ebc2:	repz mov es,WORD PTR [ecx+0x1a]
  42ebc6:	sbb    bl,BYTE PTR [ecx]
  42ebc8:	loope  0x42eba0
  42ebca:	adc    ecx,edi
  42ebcc:	jbe    0x42ebe3
  42ebce:	test   eax,0xa3deff03
  42ebd3:	ror    esi,0x9
  42ebd6:	xchg   esp,eax
  42ebd7:	jp     0x42ec57
  42ebd9:	jae    0x42ebc6
  42ebdb:	sti    
  42ebdc:	cwde   
  42ebdd:	(bad)  
  42ebde:	call   0x43d1fdea
  42ebe3:	cld    
  42ebe4:	and    al,0xf6
  42ebe6:	pop    eax
  42ebe7:	pushf  
  42ebe8:	out    0xd2,eax
  42ebea:	ror    DWORD PTR [esi+0x27544956],1
  42ebf0:	pop    esi
  42ebf1:	xor    al,0x45
  42ebf3:	mov    ah,0x9b
  42ebf5:	or     DWORD PTR [edx+0x188af8],edi
  42ebfb:	sub    ecx,edx
  42ebfd:	sub    bh,0x64
  42ec00:	add    BYTE PTR [eax],al
  42ec02:	push   0xe8e254f6
  42ec07:	add    eax,0xf8623975
  42ec0c:	pop    ss
  42ec0d:	xchg   esi,eax
  42ec0e:	rcl    BYTE PTR ds:0x7f2917fb,0x71
  42ec15:	cmc    
  42ec16:	dec    ebx
  42ec17:	cmc    
  42ec18:	or     edi,DWORD PTR [esi+0xd]
  42ec1b:	mov    esi,0xfad1290f
  42ec20:	jl     0x42ebfb
  42ec22:	(bad)  
  42ec23:	cmc    
  42ec24:	sub    al,0xbe
  42ec26:	dec    ebx
  42ec27:	clc    
  42ec28:	pop    es
  42ec29:	pop    esi
  42ec2a:	in     eax,dx
  42ec2b:	inc    ecx
  42ec2c:	pop    gs
  42ec2e:	(bad)  
  42ec2f:	jecxz  0x42ec30
  42ec31:	dec    ebp
  42ec32:	enter  0x8711,0x41
  42ec36:	mov    esp,0xcd3e4f15
  42ec3b:	fst    DWORD PTR [ebx]
  42ec3d:	test   eax,0xd2d77cd6
  42ec42:	xchg   esi,eax
  42ec43:	fdiv   st(2),st
  42ec45:	lahf   
  42ec46:	mov    esi,0xc2a78939
  42ec4b:	je     0x42ec61
  42ec4d:	and    eax,0xae0039a6
  42ec52:	mov    esp,0xd1efc477
  42ec57:	shl    esi,1
  42ec59:	in     al,dx
  42ec5a:	arpl   si,di
  42ec5c:	psadbw mm4,mm2
  42ec5f:	add    eax,0x558aee4f
  42ec64:	push   cs
  42ec65:	sub    DWORD PTR [eax],eax
  42ec67:	add    cl,dl
  42ec69:	rcl    DWORD PTR [esi+0x3c],cl
  42ec6c:	xchg   edi,eax
  42ec6d:	add    eax,0x64ec3c00
  42ec72:	xchg   BYTE PTR [edx+0x59],ch
  42ec75:	or     al,BYTE PTR [eax]
  42ec77:	add    BYTE PTR [esp+ecx*4-0x1a],ch
  42ec7b:	mov    al,ds:0x56000d38
  42ec80:	jmp    0x42ec12
  42ec82:	mov    edx,0x132874
  42ec87:	push   eax
  42ec88:	jae    0x42ec0b
  42ec8a:	out    0x12,al
  42ec8c:	cld    
  42ec8d:	or     eax,0xd3d023d
  42ec92:	add    BYTE PTR [edi],cl
  42ec94:	mov    eax,0x2cfffac7
  42ec99:	clc    
  42ec9a:	test   eax,0xcfd7c
  42ec9f:	call   0x3b9d4c
  42eca4:	mov    eax,ds:0x73fd64e0
  42eca9:	xchg   dl,ah
  42ecab:	mov    DWORD PTR [edi-0x78],ebx
  42ecae:	cmc    
  42ecaf:	mov    esi,DWORD PTR [eax+edi*8-0x79789f45]
  42ecb6:	cmc    
  42ecb7:	xor    ebp,DWORD PTR [ebp+edx*4-0x78ed5a71]
  42ecbe:	add    esi,0xa56c946c
  42ecc4:	xacquire xchg BYTE PTR [ecx],ch
  42ecc7:	(bad)  
  42ecc8:	jnp    0x42ecc1
  42ecca:	add    DWORD PTR [eax+0x0],0x0
  42ecce:	rol    DWORD PTR [esi-0x8abaf0b],cl
  42ecd4:	inc    edi
  42ecd5:	aaa    
  42ecd6:	xchg   ebp,eax
  42ecd7:	xchg   esp,eax
  42ecd8:	adc    edx,DWORD PTR [ebp-0x2d]
  42ecdb:	xchg   BYTE PTR [esp+eax*2+0x72],ah
  42ecdf:	lea    eax,ds:[ebp+0x14]
  42ece3:	aas    
  42ece4:	push   eax
  42ece5:	jmp    FWORD PTR [ecx+0x6c401064]
  42eceb:	mov    DWORD PTR [esi+0xc19930c],edi
  42ecf1:	(bad)  
  42ecf2:	aad    0xe5
  42ecf4:	ds sti 
  42ecf6:	bound  eax,QWORD PTR [edi+0x75]
  42ecf9:	je     0x42ed28
  42ecfb:	stc    
  42ecfc:	inc    ecx
  42ecfd:	mov    al,0x52
  42ecff:	pop    ebp
  42ed00:	cmp    dl,BYTE PTR [ecx]
  42ed02:	xchg   ebp,eax
  42ed03:	bound  edi,QWORD PTR [ecx+0x44]
  42ed06:	inc    ebp
  42ed07:	adc    bh,BYTE PTR [ebx+0x44]
  42ed0a:	ins    DWORD PTR es:[edi],dx
  42ed0b:	xor    dh,BYTE PTR ds:0x44167568
  42ed11:	add    BYTE PTR [eax-0x1b],bl
  42ed14:	push   ds
  42ed15:	mul    DWORD PTR [edx]
  42ed17:	xchg   DWORD PTR [esi],ebp
  42ed19:	call   0xfacf7024
  42ed1e:	pop    eax
  42ed1f:	mov    ds:0xa2c70411,al
  42ed24:	xchg   edi,eax
  42ed25:	xor    DWORD PTR [edi+0x52],ebp
  42ed28:	jns    0x42ed6e
  42ed2a:	add    eax,0x71ae79b2
  42ed2f:	popa   
  42ed30:	(bad)  
  42ed31:	inc    DWORD PTR [eax]
  42ed33:	add    BYTE PTR [ebx-0x1cd63836],al
  42ed39:	(bad)  
  42ed3a:	push   ss
  42ed3b:	call   0xfb415016
  42ed40:	inc    esi
  42ed41:	mov    edx,DWORD PTR gs:[ecx+edi*4]
  42ed45:	push   ebx
  42ed46:	add    BYTE PTR ds:[eax+0x21],bl
  42ed4a:	adc    edx,DWORD PTR [eax]
  42ed4c:	and    dh,BYTE PTR [eax]
  42ed4e:	aad    0xfa
  42ed50:	enter  0xee20,0x3f
  42ed54:	aad    0x8
  42ed56:	mov    al,ds:0x9808a3e3
  42ed5b:	(bad)  
  42ed5c:	bound  ebp,QWORD PTR gs:[ebx]
  42ed5f:	pop    edx
  42ed60:	pushf  
  42ed61:	and    al,0x32
  42ed63:	xchg   DWORD PTR [ecx-0x1c],edi
  42ed66:	mov    ds:0xdd7556f7,al
  42ed6b:	push   ecx
  42ed6c:	and    cl,BYTE PTR [edx]
  42ed6e:	dec    edi
  42ed6f:	add    eax,0xf4ed1d6e
  42ed74:	stos   BYTE PTR es:[edi],al
  42ed75:	or     DWORD PTR [ecx],edi
  42ed77:	mov    ecx,ecx
  42ed79:	int    0xf7
  42ed7b:	inc    ebx
  42ed7c:	aad    0x76
  42ed7e:	sti    
  42ed7f:	jg     0x42eda3
  42ed81:	retf   
  42ed82:	call   0xd6a4f705
  42ed87:	inc    ebx
  42ed88:	aad    0x76
  42ed8a:	xchg   ecx,eax
  42ed8b:	jg     0x42ed8e
  42ed8d:	push   0xfffffff5
  42ed8f:	inc    ebx
  42ed90:	aad    0x62
  42ed92:	and    eax,DWORD PTR [ecx+0x7f35fe6a]
  42ed98:	add    BYTE PTR [eax],al
  42ed9a:	xchg   esi,eax
  42ed9b:	sub    eax,0x89d1cef9
  42eda0:	cwde   
  42eda1:	inc    edi
  42eda2:	aad    0xfc
  42eda4:	mov    bl,0x86
  42eda6:	mov    gs,WORD PTR ds:0x278987dd
  42edac:	dec    eax
  42edad:	jl     0x42edb9
  42edaf:	retf   
  42edb0:	call   0xd4b9c1d2
  42edb5:	(bad)  
  42edb7:	or     al,0xfd
  42edb9:	add    al,0xd5
  42edbb:	or     ecx,eax
  42edbd:	or     eax,DWORD PTR ds:0x39be8cb
  42edc3:	jb     0x42edfe
  42edc5:	mov    edx,DWORD PTR [ebx+0x4]
  42edc8:	popa   
  42edc9:	mov    ah,0x3
  42edcb:	or     ah,BYTE PTR [ecx-0x7b]
  42edce:	test   BYTE PTR [eax],0xe9
  42edd1:	add    ebp,DWORD PTR [esi-0x144b9ac4]
  42edd7:	or     DWORD PTR [edx],edx
  42edd9:	mov    bl,0x38
  42eddb:	or     bh,BYTE PTR [edi+0x3]
  42edde:	xor    esi,DWORD PTR [edi+0x73]
  42ede1:	inc    eax
  42ede2:	mov    ecx,0xa48a9911
  42ede7:	mov    bh,bh
  42ede9:	lock dec edi
  42edeb:	std    
  42edec:	test   al,0xba
  42edee:	cmp    DWORD PTR [ebp-0x6591b941],ecx
  42edf4:	mov    edi,0x5c6dea3f
  42edf9:	stos   BYTE PTR es:[edi],al
  42edfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edfb:	mov    gs,ebx
  42edfd:	push   0x8e420000
  42ee02:	(bad)  
  42ee03:	call   0xbe94b4de
  42ee08:	in     eax,0x1
  42ee0a:	xchg   DWORD PTR [ecx-0x51c641a2],edx
  42ee10:	dec    edi
  42ee11:	add    esi,DWORD PTR [ebx-0xc324e57]
  42ee17:	push   ecx
  42ee18:	rol    DWORD PTR [edx],1
  42ee1a:	test   DWORD PTR [edi],ebp
  42ee1c:	fmul   DWORD PTR [ecx]
  42ee1e:	add    BYTE PTR [ebp+edx*4+0x71],bl
  42ee22:	dec    edi
  42ee23:	xchg   ch,ah
  42ee25:	add    ebx,edi
  42ee27:	aam    0xaa
  42ee29:	pop    es
  42ee2a:	inc    eax
  42ee2b:	jmp    0xbdb6a485
  42ee30:	fdiv   DWORD PTR [edi-0x75]
  42ee33:	stos   BYTE PTR es:[edi],al
  42ee34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee35:	fsqrt  
  42ee37:	aam    0x5e
  42ee39:	test   DWORD PTR [esi],edi
  42ee3b:	adc    eax,0x9d3e8ea9
  42ee40:	pop    ebp
  42ee41:	test   DWORD PTR [edi+0x46],esi
  42ee44:	pop    edi
  42ee45:	jo     0x42ee2e
  42ee47:	sub    DWORD PTR [ebp+0x5564fa75],esi
  42ee4d:	std    
  42ee4e:	cli    
  42ee4f:	cs dec edi
  42ee51:	(bad)
  42ee54:	mov    dl,0x75
  42ee56:	cli    
  42ee57:	jno    0x42ee6e
  42ee59:	jno    0x42ee41
  42ee5b:	in     eax,dx
  42ee5c:	xchg   esp,eax
  42ee5d:	into   
  42ee5e:	cli    
  42ee5f:	jmp    0x13de4ba
  42ee64:	add    BYTE PTR [eax],al
  42ee66:	jl     0x42ee5c
  42ee68:	xor    ecx,DWORD PTR [ebp+ebp*4-0x37]
  42ee6c:	push   DWORD PTR [ebx+0x35]
  42ee6f:	fwait
  42ee70:	inc    ebx
  42ee71:	hlt    
  42ee72:	pushf  
  42ee73:	sbb    bh,BYTE PTR [ebx]
  42ee75:	dec    DWORD PTR [edi]
  42ee77:	jb     0x42ee6e
  42ee79:	(bad)  
  42ee7a:	jnp    0x42ee56
  42ee7c:	cmp    eax,0x45da7b0c
  42ee81:	or     BYTE PTR ds:0x7d0b0aae,ch
  42ee87:	jae    0x42ee36
  42ee89:	paddsb mm6,QWORD PTR [edx-0x53]
  42ee8d:	inc    edi
  42ee8e:	xor    BYTE PTR [eax-0x26],cl
  42ee91:	adc    BYTE PTR [edi],dh
  42ee93:	dec    eax
  42ee94:	dec    edx
  42ee95:	dec    edi
  42ee97:	jne    0x42ee8e
  42ee99:	jne    0x42eebf
  42ee9b:	adc    BYTE PTR [ebx],0x74
  42ee9e:	and    cl,cl
  42eea0:	inc    DWORD PTR [esp+ebp*2-0x1f95f4e6]
  42eea7:	sub    BYTE PTR [ecx+0xc],0x8b
  42eeab:	fs out 0x12,al
  42eeae:	lods   al,BYTE PTR ds:[esi]
  42eeaf:	or     eax,0xf51bc085
  42eeb4:	stos   BYTE PTR es:[edi],al
  42eeb5:	add    ah,bh
  42eeb7:	or     al,ch
  42eeb9:	ror    DWORD PTR [ecx-0x537b0a7e],0x19
  42eec0:	pop    esi
  42eec1:	mov    ebp,DWORD PTR [edi]
  42eec3:	jns    0x42ef29
  42eec5:	adc    BYTE PTR [ebx+0x73],dh
  42eec8:	push   cs
  42eec9:	add    DWORD PTR [eax],eax
  42eecb:	add    BYTE PTR [eax+ecx*1+0x5158e850],bh
  42eed2:	clc    
  42eed3:	(bad)  
  42eed4:	jmp    0x42eef4
  42eed6:	or     al,0xff
  42eed8:	repnz xor BYTE PTR [ebx+0x8],0x46
  42eedd:	mov    ebp,?
  42eedf:	jae    0x42eeb6
  42eee1:	push   0xffffff87
  42eee3:	scas   al,BYTE PTR es:[edi]
  42eee4:	dec    ebp
  42eee5:	popa   
  42eee6:	(bad)  
  42eee7:	call   DWORD PTR [edx+0x150e8a55]
  42eeed:	arpl   WORD PTR [ecx-0x41],di
  42eef0:	or     DWORD PTR [ebx+0x62d6e816],edi
  42eef6:	(bad)  
  42eef7:	cli    
  42eef8:	out    0x7e,al
  42eefa:	xchg   DWORD PTR [ecx+edi*2],edx
  42eefd:	jo     0x42ef3d
  42eeff:	add    BYTE PTR [eax-0x5e],bl
  42ef02:	or     DWORD PTR [ecx],edx
  42ef04:	dec    esi
  42ef05:	pop    ds
  42ef06:	hlt    
  42ef07:	jg     0x42ee96
  42ef09:	push   es
  42ef0a:	(bad)  
  42ef0b:	call   ebp
  42ef0d:	popa   
  42ef0e:	or     DWORD PTR [esi],edx
  42ef10:	dec    edi
  42ef11:	and    eax,0xc89de689
  42ef16:	add    ecx,DWORD PTR [ebp-0xd19a]
  42ef1c:	aad    0x93
  42ef1e:	sar    dl,1
  42ef20:	enter  0xeda2,0x3f
  42ef24:	aad    0x8a
  42ef26:	out    0xde,eax
  42ef28:	adc    ecx,DWORD PTR [ebx-0x426bb85]
  42ef2e:	ds and al,0x0
  42ef31:	add    ch,dl
  42ef33:	(bad)  
  42ef34:	(bad)  
  42ef35:	aas    
  42ef36:	cmp    BYTE PTR [ebp+0x66157f2f],0x2e
  42ef3d:	lea    edx,[eax-0x3704d132]
  42ef43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef44:	jmp    0x188d:0x48d53f
  42ef4b:	lds    ebp,FWORD PTR [esi]
  42ef4d:	sti    
  42ef4e:	xchg   BYTE PTR [ebp+0x3bd5fffd],bl
  42ef54:	jmp    0xe265:0xfea0e13b
  42ef5b:	or     DWORD PTR [edi+0x4cd59fd],ecx
  42ef61:	xor    ebx,DWORD PTR [esi-0x2afd4349]
  42ef67:	or     DWORD PTR [edx],ecx
  42ef69:	out    dx,al
  42ef6a:	rcr    BYTE PTR ds:0x94503a9,cl
  42ef70:	fwait
  42ef71:	sub    al,0x8c
  42ef73:	dec    eax
  42ef74:	loopne 0x42ef79
  42ef76:	and    BYTE PTR [edi-0x4],bh
  42ef79:	xor    DWORD PTR [esi+0x72],0x65
  42ef7d:	cwde   
  42ef7e:	into   
  42ef7f:	(bad)  
  42ef80:	xor    bh,BYTE PTR [ebx+0x70]
  42ef83:	jg     0x42efaf
  42ef85:	lock pop es
  42ef87:	dec    ebx
  42ef88:	call   0xe8b64254
  42ef8d:	xchg   ah,al
  42ef8f:	sbb    eax,0x19f93870
  42ef94:	sbb    BYTE PTR [edi-0x2e1f0000],al
  42ef9a:	aam    0x43
  42ef9c:	aad    0x8c
  42ef9e:	test   al,0xf7
  42efa0:	push   esi
  42efa1:	xchg   esp,eax
  42efa2:	call   0x2ac1c4aa
  42efa7:	lock push ebx
  42efa9:	ret    0x8ec4
  42efac:	adc    eax,0x9503e90a
  42efb1:	std    
  42efb2:	jecxz  0x42f02c
  42efb4:	pushf  
  42efb5:	or     eax,0x1452017e
  42efba:	retw   
  42efbc:	mov    dh,0x7a
  42efbe:	daa    
  42efbf:	add    al,0xd5
  42efc1:	or     ecx,edi
  42efc3:	bt     DWORD PTR [esi+0x13],edi
  42efc7:	inc    eax
  42efc8:	ror    ecx,0xe8
  42efcb:	xor    dl,BYTE PTR [edx+0x4a]
  42efce:	fdiv   QWORD PTR [ebx]
  42efd0:	pop    eax
  42efd1:	int    0x4
  42efd3:	call   0x1e4262ea
  42efd8:	push   esp
  42efd9:	mov    dl,0xa
  42efdb:	push   esp
  42efdc:	cdq    
  42efdd:	xchg   BYTE PTR [edi+0x418b8d9c],bh
  42efe3:	cmc    
  42efe4:	push   edi
  42efe5:	mov    dl,0x13
  42efe7:	mov    ecx,0xf5e81d53
  42efec:	push   ss
  42efed:	or     al,BYTE PTR [ebp-0x793c1ad7]
  42eff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eff4:	jb     0x42efb9
  42eff6:	jle    0x42f021
  42eff8:	aad    0xd9
  42effa:	mov    WORD PTR [ebp+0xe920000],fs
  42f000:	push   eax
  42f001:	out    0x3b,al
  42f003:	lea    edi,[edi-0x194d1a12]
  42f009:	jmp    0x42ef8f
  42f00b:	mov    dl,0x83
  42f00d:	test   eax,0x3ffb37e2
  42f012:	inc    ebp
  42f013:	mov    eax,DWORD PTR [ecx]
  42f015:	mov    esi,0x62102dd2
  42f01a:	dec    edi
  42f01b:	push   0xffffffe5
  42f01d:	lods   al,BYTE PTR ds:[esi]
  42f01e:	pop    ebx
  42f01f:	outs   dx,DWORD PTR ds:[esi]
  42f020:	xchg   bh,ch
  42f022:	push   ebx
  42f023:	mul    BYTE PTR [ebx]
  42f025:	in     eax,dx
  42f026:	mov    eax,ds:0x9ffd23c6
  42f02b:	enter  0x6013,0xd2
  42f02f:	sub    eax,0x9e058628
  42f034:	push   cs
  42f035:	sub    ecx,ebx
  42f037:	mov    WORD PTR [edi-0x733e0003],?
  42f03d:	and    eax,0x515015f5
  42f042:	in     eax,0x24
  42f044:	sti    
  42f045:	pop    esi
  42f046:	mov    ebx,0xafe8afcf
  42f04b:	mov    ah,ah
  42f04d:	lods   al,BYTE PTR ds:[esi]
  42f04e:	xchg   edi,eax
  42f04f:	jle    0x42f092
  42f051:	add    al,al
  42f053:	cmp    eax,0x7b1815f7
  42f058:	cmp    al,BYTE PTR [eax]
  42f05a:	mov    edi,0x3506874d
  42f05f:	das    
  42f060:	add    al,0x89
  42f062:	add    BYTE PTR [eax],al
  42f064:	jp     0x42f0db
  42f066:	add    esi,0x8b4f1eef
  42f06c:	mov    esp,0xa239f55b
  42f071:	call   DWORD PTR [eax]
  42f073:	mov    edi,DWORD PTR [edx]
  42f075:	jno    0x42f06c
  42f077:	xor    al,0x14
  42f079:	mov    BYTE PTR [ebx],dl
  42f07b:	enter  0xcd9e,0xff
  42f07f:	inc    esi
  42f080:	daa    
  42f081:	inc    edi
  42f082:	ins    BYTE PTR es:[edi],dx
  42f083:	out    dx,eax
  42f084:	jae    0x42f086
  42f086:	add    al,0xe8
  42f088:	cmp    BYTE PTR [eax+edi*8-0x1],dl
  42f08c:	out    dx,eax
  42f08d:	scas   eax,DWORD PTR es:[edi]
  42f08e:	push   es
  42f08f:	push   esi
  42f090:	and    esp,DWORD PTR [ecx-0x3a]
  42f093:	adc    bh,ah
  42f095:	add    eax,0x3d6f5e57
  42f09a:	dec    ebx
  42f09b:	push   esi
  42f09c:	mov    bh,0x95
  42f09e:	mov    eax,DWORD PTR [esi+0x10]
  42f0a1:	cmp    eax,0x79184489
  42f0a6:	cmc    
  42f0a7:	adc    eax,0x3a7c14
  42f0ac:	jmp    DWORD PTR [ecx-0xba1c9]
  42f0b2:	push   ebx
  42f0b3:	push   ebp
  42f0b4:	dec    edi
  42f0b5:	cwde   
  42f0b6:	aaa    
  42f0b7:	push   ds
  42f0b8:	or     cl,BYTE PTR [eax+0x4d]
  42f0bb:	mov    ebp,DWORD PTR [edx+0x7ffd8309]
  42f0c1:	inc    ecx
  42f0c2:	mov    dl,0x0
  42f0c4:	or     BYTE PTR [edx+0x64],dl
  42f0c7:	add    BYTE PTR [eax],al
  42f0c9:	add    BYTE PTR [ebx-0x2a004da7],al
  42f0cf:	ins    DWORD PTR es:[edi],dx
  42f0d0:	xchg   edx,eax
  42f0d1:	or     eax,0xbf796315
  42f0d6:	pop    esi
  42f0d7:	mov    al,ds:0x2fe774fa
  42f0dc:	shl    BYTE PTR [edi+0xdb64dba],1
  42f0e2:	adc    eax,0xd1417763
  42f0e7:	jecxz  0x42f0c8
  42f0e9:	mov    bh,0xd5
  42f0eb:	sbb    edi,ebp
  42f0ed:	xchg   cl,cl
  42f0ef:	fidiv  DWORD PTR [esi+0xb]
  42f0f2:	ins    DWORD PTR es:[edi],dx
  42f0f3:	mov    ds:0xf4bb3739,eax
  42f0f8:	mov    ecx,0x77504c5a
  42f0fd:	(bad)  
  42f0fe:	xchg   esp,eax
  42f0ff:	add    esi,edi
  42f101:	jle    0x42f09e
  42f103:	xchg   si,ax
  42f105:	xchg   DWORD PTR [eax+ebp*2-0x299da37d],edi
  42f10c:	fild   WORD PTR [edi]
  42f10e:	pop    edx
  42f10f:	ins    DWORD PTR es:[edi],dx
  42f110:	mov    ds:0x2462950d,al
  42f115:	push   edi
  42f116:	lods   al,BYTE PTR ds:[esi]
  42f117:	mov    ds:0x11318729,eax
  42f11c:	das    
  42f11d:	dec    edi
  42f11e:	dec    eax
  42f11f:	pop    ds
  42f120:	clc    
  42f121:	push   ecx
  42f122:	test   ecx,ebp
  42f124:	cmp    eax,edi
  42f126:	sub    ch,BYTE PTR [ebp-0x5a]
  42f129:	or     eax,0xd6cf6295
  42f12e:	add    BYTE PTR [eax],al
  42f130:	fdiv   QWORD PTR [edi]
  42f132:	cld    
  42f133:	or     bl,BYTE PTR [eax-0x30]
  42f136:	(bad)  
  42f137:	call   ebp
  42f139:	dec    ecx
  42f13a:	and    DWORD PTR [edx+edx*8],ecx
  42f13d:	out    0x79,al
  42f13f:	(bad)  
  42f140:	cli    
  42f141:	popa   
  42f142:	ja     0x42f14e
  42f144:	pusha  
  42f145:	ja     0x42f141
  42f147:	mov    ecx,ds
  42f149:	or     DWORD PTR [edi+edi*8-0x1e],esi
  42f14d:	outs   dx,DWORD PTR ds:[esi]
  42f14e:	call   0x40b052cd
  42f153:	(bad)  
  42f154:	std    
  42f155:	outs   dx,DWORD PTR ds:[esi]
  42f156:	dec    ecx
  42f157:	jg     0x42f0e3
  42f159:	not    bl
  42f15b:	xor    BYTE PTR [ebx],bh
  42f15d:	push   es
  42f15e:	cmp    cl,BYTE PTR [esi]
  42f160:	in     eax,0x6e
  42f162:	mov    ebx,0xe0f5aff7
  42f167:	xor    BYTE PTR [esi-0x1d0e96eb],ch
  42f16d:	or     DWORD PTR [esi-0x6d],ebp
  42f170:	jecxz  0x42f1ec
  42f172:	pushf  
  42f173:	ror    ebp,cl
  42f175:	int3   
  42f176:	hlt    
  42f177:	(bad)  
  42f179:	jecxz  0x42f161
  42f17b:	xor    BYTE PTR [edx],dl
  42f17d:	outs   dx,DWORD PTR ds:[esi]
  42f17e:	jae    0x42f16f
  42f180:	lock outs dx,BYTE PTR ds:[esi]
  42f182:	call   0xc5cf:0xd36f6e19
  42f189:	leave  
  42f18a:	call   0x5381417
  42f18f:	add    ecx,0xffffff9d
  42f192:	test   bl,0x0
  42f195:	add    BYTE PTR [edx-0x41],dl
  42f198:	xor    al,BYTE PTR [ebx-0x3c28721f]
  42f19e:	inc    edx
  42f19f:	aad    0xb9
  42f1a1:	sbb    DWORD PTR ds:0x5a04291c,ecx
  42f1a7:	call   FWORD PTR [ebp-0x7]
  42f1aa:	cs dec ecx
  42f1ac:	xchg   DWORD PTR [esi],eax
  42f1ae:	sub    eax,0x1f81d06b
  42f1b3:	arpl   bx,di
  42f1b5:	mov    ss,edi
  42f1b7:	sbb    BYTE PTR [ebx],0x80
  42f1ba:	push   ebx
  42f1bb:	add    DWORD PTR [eax+0x38],esi
  42f1be:	push   esp
  42f1bf:	outs   dx,DWORD PTR ds:[esi]
  42f1c0:	loope  0x42f19b
  42f1c2:	call   DWORD PTR [eax+eax*1]
  42f1c5:	mov    cl,0xc9
  42f1c7:	leave  
  42f1c8:	(bad)  
  42f1c9:	cmp    eax,edx
  42f1cb:	jb     0x42f241
  42f1cd:	popa   
  42f1ce:	push   esi
  42f1cf:	push   ss
  42f1d0:	fdiv   st(3),st
  42f1d2:	push   ss
  42f1d3:	outs   dx,DWORD PTR ds:[esi]
  42f1d4:	pop    esp
  42f1d5:	arpl   WORD PTR [edx],bx
  42f1d7:	fmul   st,st(0)
  42f1d9:	sub    esp,ecx
  42f1db:	or     DWORD PTR [ecx-0x66],edx
  42f1de:	push   ebx
  42f1df:	or     eax,0x6e96dbd8
  42f1e4:	push   ebx
  42f1e5:	sahf   
  42f1e6:	inc    ebp
  42f1e7:	lock or edx,DWORD PTR [esi-0x5005c0a9]
  42f1ee:	into   
  42f1ef:	(bad)  
  42f1f1:	hlt    
  42f1f2:	cli    
  42f1f3:	cld    
  42f1f4:	aas    
  42f1f5:	jmp    0xa6044ec5
  42f1fa:	add    BYTE PTR [eax],al
  42f1fc:	mov    dl,0x2
  42f1fe:	add    eax,eax
  42f200:	(bad)  
  42f201:	sti    
  42f202:	das    
  42f203:	jb     0x42f1d4
  42f205:	lds    ebp,FWORD PTR es:[edx-0xf]
  42f209:	outs   dx,BYTE PTR cs:[esi]
  42f20b:	jmp    0xa84:0x72582e78
  42f212:	data16 fisubr WORD PTR [eax+0x9]
  42f216:	(bad)  
  42f217:	in     eax,0x81
  42f219:	(bad)  [edi-0x32]
  42f21c:	in     eax,dx
  42f21d:	pop    ecx
  42f21e:	or     eax,0xbf84d929
  42f223:	xor    al,0xc8
  42f225:	out    dx,al
  42f226:	les    ebp,FWORD PTR [ecx]
  42f228:	repnz and ebp,DWORD PTR [esi-0x6a]
  42f22c:	mov    ebx,0xed2dc205
  42f231:	add    al,BYTE PTR [eax]
  42f233:	ss push esi
  42f235:	aas    
  42f236:	cli    
  42f237:	daa    
  42f238:	loope  0x42f214
  42f23a:	cli    
  42f23b:	hlt    
  42f23c:	stos   BYTE PTR es:[edi],al
  42f23d:	cld    
  42f23e:	aas    
  42f23f:	add    ah,ch
  42f241:	jnp    0x42f281
  42f243:	and    al,0xeb
  42f245:	push   0x5b
  42f247:	pop    ebx
  42f248:	vrcpss xmm1,xmm7,DWORD PTR [ebx+0x20e68768]
  42f250:	and    dl,BYTE PTR [ebx-0x7f]
  42f253:	cmp    eax,0x4016ac
  42f258:	out    dx,eax
  42f259:	out    dx,eax
  42f25a:	(bad)  
  42f25b:	push   DWORD PTR [eax+0x6a0009]
  42f261:	add    BYTE PTR [ebx],bl
  42f263:	push   ebx
  42f264:	cmc    
  42f265:	jne    0x42f22b
  42f267:	pop    edi
  42f268:	(bad)  
  42f269:	(bad)  
  42f26a:	xchg   ecx,eax
  42f26b:	xor    eax,0x7ebc4014
  42f270:	inc    ebx
  42f271:	cld    
  42f272:	das    
  42f273:	icebp  
  42f274:	push   DWORD PTR [ebx-0x71]
  42f277:	jl     0x42f2bc
  42f279:	cld    
  42f27a:	dec    ebx
  42f27b:	imul   eax,edi,0xffffffc2
  42f27e:	jo     0x42f289
  42f280:	jnp    0x42f2ff
  42f282:	rcl    BYTE PTR [esi],1
  42f284:	je     0x42f277
  42f286:	jmp    0x6b93cccc
  42f28b:	adc    eax,0x93c14b0
  42f290:	lea    eax,[ebp-0x74]
  42f293:	push   esi
  42f294:	cmc    
  42f295:	adc    eax,0x4011b4
  42f29a:	xchg   esi,eax
  42f29b:	or     BYTE PTR [esi+0x56],cl
  42f29e:	add    bh,BYTE PTR [ebp+0x43]
  42f2a1:	loopne 0x42f27f
  42f2a3:	mov    cl,ch
  42f2a5:	test   DWORD PTR [ebp+esi*2-0x33],ebp
  42f2a9:	jmp    0x42f258
  42f2ab:	mov    ch,BYTE PTR [esi+0x24]
  42f2ae:	xor    BYTE PTR [edx+0x491e2413],cl
  42f2b4:	cli    
  42f2b5:	(bad)  
  42f2b6:	adc    ecx,eax
  42f2b8:	or     al,0x40
  42f2ba:	aad    0x62
  42f2bc:	jg     0x42f331
  42f2be:	mov    cl,0x66
  42f2c0:	in     al,dx
  42f2c1:	(bad)  
  42f2c2:	jp     0x42f326
  42f2c4:	dec    BYTE PTR [edi]
  42f2c6:	add    BYTE PTR [eax],al
  42f2c8:	aad    0xeb
  42f2ca:	adc    al,ah
  42f2cc:	les    esp,FWORD PTR [edx]
  42f2ce:	add    al,0x85
  42f2d0:	adc    eax,0xe2500b77
  42f2d5:	ins    DWORD PTR es:[edi],dx
  42f2d6:	inc    esi
  42f2d7:	or     eax,0xae6295
  42f2dc:	mov    esi,0x97c03460
  42f2e1:	data16 (bad) 
  42f2e3:	push   esp
  42f2e4:	dec    esi
  42f2e5:	(bad)  
  42f2e6:	into   
  42f2e7:	dec    esi
  42f2e8:	and    ebx,esi
  42f2ea:	retf   0x4fb
  42f2ed:	dec    ecx
  42f2ee:	std    
  42f2ef:	gs aad 0x1b
  42f2f2:	repz pop es
  42f2f4:	dec    esp
  42f2f5:	popf   
  42f2f6:	jp     0x42f347
  42f2f8:	call   0x8163:0x150fd275
  42f2ff:	mov    edi,0x448b7900
  42f304:	in     eax,0x5f
  42f306:	ds dec edi
  42f308:	and    bl,dh
  42f30a:	ret    0x507
  42f30d:	je     0x42f300
  42f30f:	or     ebx,DWORD PTR [eax-0xb]
  42f312:	jp     0x42f2fb
  42f314:	mov    DWORD PTR [edx-0x2],esp
  42f317:	dec    DWORD PTR [esi+0x4a]
  42f31a:	imul   edi,esi,0x57
  42f31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f31e:	jg     0x42f39e
  42f320:	dec    esi
  42f321:	cmp    esi,edx
  42f323:	imul   ecx,DWORD PTR [ebx-0x61],0xfffffffd
  42f327:	je     0x42f2db
  42f329:	(bad)  
  42f32b:	pop    es
  42f32c:	add    BYTE PTR [eax],al
  42f32e:	aam    0x2e
  42f330:	push   es
  42f331:	jg     0x42f2db
  42f333:	push   0x4
  42f335:	jne    0x42f3b5
  42f337:	or     DWORD PTR [esp+ebx*2-0x5f],ebp
  42f33b:	add    al,0xd6
  42f33d:	inc    ebx
  42f33e:	je     0x42f2c2
  42f340:	jmp    0x7d9d91b1
  42f345:	mov    es,ebx
  42f347:	ins    BYTE PTR es:[edi],dx
  42f348:	or     al,BYTE PTR [ebp-0x9173b42]
  42f34e:	repz mov esi,0x3295117d
  42f354:	and    al,0x14
  42f356:	xor    BYTE PTR ds:0x744b,dl
  42f35b:	sub    ah,0xc8
  42f35e:	pop    ebx
  42f35f:	push   edx
  42f360:	gs jnp 0x42f32b
  42f363:	cmc    
  42f364:	inc    BYTE PTR [ecx+eax*2-0x90918fe]
  42f36b:	rcl    BYTE PTR [eax-0x49],cl
  42f36e:	fsubr  DWORD PTR [ebx+0x31]
  42f371:	mov    WORD PTR [edx-0x3008cd7b],?
  42f377:	push   0xffffff9b
  42f379:	adc    eax,DWORD PTR [esi]
  42f37b:	aam    0x19
  42f37d:	push   ss
  42f37e:	sub    eax,0x5003a918
  42f383:	dec    edx
  42f384:	xchg   ebx,eax
  42f385:	add    al,0x2
  42f387:	aas    
  42f388:	add    ecx,ebx
  42f38a:	jb     0x42f3e1
  42f38c:	rol    DWORD PTR [ecx+0x6c257f6f],0x0
  42f393:	add    BYTE PTR [ebx-0x78],ch
  42f396:	and    BYTE PTR [eax+0x42afcefc],al
  42f39c:	into   
  42f39d:	or     DWORD PTR [ebx+ecx*4],esi
  42f3a0:	fnstenv ds:[edi]
  42f3a3:	xor    DWORD PTR [ecx-0x6e6f1793],0x71
  42f3aa:	pop    ss
  42f3ab:	jmp    0x1a9:0x7ee8dfd5
  42f3b2:	add    BYTE PTR [eax+0x1c],ah
  42f3b5:	jae    0x42f406
  42f3b7:	scas   al,BYTE PTR es:[edi]
  42f3b8:	mov    esp,0xd1290fd5
  42f3bd:	test   BYTE PTR [edi+0x65d7f014],bh
  42f3c3:	in     eax,dx
  42f3c4:	gs (bad) 
  42f3c6:	sti    
  42f3c7:	cmp    DWORD PTR [esi+eax*8+0x7],esp
  42f3cb:	sbb    DWORD PTR [edx-0xb],edi
  42f3ce:	or     ebp,DWORD PTR [esp+ebp*8+0x72]
  42f3d2:	out    0xd2,eax
  42f3d4:	(bad)  
  42f3d5:	or     DWORD PTR [eax],eax
  42f3d7:	movd   mm5,DWORD PTR [ebx+0x7d]
  42f3db:	xor    DWORD PTR [edx-0x15],ebx
  42f3de:	mul    ebp
  42f3e0:	int    0x5
  42f3e2:	cmp    DWORD PTR [esi+ebx*8-0x5395fc0b],ebp
  42f3e9:	outs   dx,BYTE PTR ds:[esi]
  42f3ea:	push   DWORD PTR [ecx-0x74]
  42f3ed:	outs   dx,BYTE PTR ds:[esi]
  42f3ee:	enter  0xe12b,0x9
  42f3f2:	push   ebp
  42f3f3:	bound  esp,QWORD PTR ds:0xa48cd8
  42f3f9:	add    dl,cl
  42f3fb:	fsqrt  
  42f3fd:	pushf  
  42f3fe:	(bad)  
  42f3ff:	jmp    0x830b:0xf6121eca
  42f406:	(bad)  
  42f407:	outs   dx,BYTE PTR ds:[esi]
  42f408:	je     0x42f3eb
  42f40a:	add    edi,DWORD PTR [ecx]
  42f40c:	sti    
  42f40d:	fdivr  QWORD PTR [edx-0x6]
  42f410:	aas    
  42f411:	jmp    0x29c82d09
  42f416:	fcmovb st,st(5)
  42f418:	jl     0x42f3ef
  42f41a:	jecxz  0x42f431
  42f41c:	pop    esp
  42f41d:	stc    
  42f41e:	xchg   esi,eax
  42f41f:	push   0xffffff85
  42f421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f422:	xor    ecx,ebp
  42f424:	mov    ebp,0x86d4d6f9
  42f429:	mov    ebp,0x2ebb29
  42f42e:	ja     0x42f487
  42f430:	mov    ecx,DWORD PTR [ebp+0x70]
  42f433:	push   ebp
  42f434:	dec    ecx
  42f435:	push   0x3e
  42f437:	push   edi
  42f438:	dec    ecx
  42f439:	push   ebx
  42f43a:	jae    0x42f4ad
  42f43c:	add    bh,BYTE PTR [eax-0x7ffff9d3]
  42f442:	int3   
  42f443:	jl     0x42f488
  42f445:	cld    
  42f446:	arpl   WORD PTR [ecx],dx
  42f448:	js     0x42f45a
  42f44a:	lods   al,BYTE PTR ds:[esi]
  42f44b:	add    eax,0x20f9c085
  42f450:	div    DWORD PTR [ebp-0xc]
  42f453:	jmp    0x530a:0x71631473
  42f45a:	jae    0x42f4cd
  42f45c:	push   es
  42f45d:	inc    DWORD PTR [eax]
  42f45f:	add    cl,bh
  42f461:	jmp    0xfd7f0a5b
  42f466:	aas    
  42f467:	add    BYTE PTR [ecx],bh
  42f469:	int    0x73
  42f46b:	add    bl,BYTE PTR [edi+0xe]
  42f46e:	div    DWORD PTR [ebp+0x10]
  42f471:	call   0x4dcf5089
  42f476:	cli    
  42f477:	mov    edi,edi
  42f479:	inc    ebx
  42f47a:	mov    edx,0x8b550d88
  42f480:	ror    BYTE PTR [ebx+0x39ff0ce6],0xf2
  42f487:	dec    DWORD PTR [edi+0x3f]
  42f48a:	xor    DWORD PTR ds:0x3ffd50,0x50f65201
  42f494:	das    
  42f495:	les    ecx,FWORD PTR [ecx-0x1]
  42f498:	jmp    0x70a07db5
  42f49d:	cmp    esi,ebp
  42f49f:	jne    0x42f505
  42f4a1:	out    0x2d,al
  42f4a3:	dec    DWORD PTR [edx-0x2a8a456f]
  42f4a9:	sub    ecx,DWORD PTR [ecx+0x40fc4144]
  42f4af:	je     0x42f481
  42f4b1:	(bad)  
  42f4b3:	idiv   DWORD PTR [esi]
  42f4b5:	push   0x5bd1bf7f
  42f4ba:	aas    
  42f4bb:	jae    0x42f49a
  42f4bd:	dec    edx
  42f4be:	sti    
  42f4bf:	and    DWORD PTR [ebx],ebx
  42f4c1:	mov    al,0x86
  42f4c3:	inc    esp
  42f4c4:	add    BYTE PTR [eax],al
  42f4c6:	or     DWORD PTR [edi+edi*1+0x73],ebp
  42f4ca:	mov    ecx,0xa4fbcaed
  42f4cf:	and    bh,BYTE PTR [ebp+0x74]
  42f4d2:	leave  
  42f4d3:	add    edi,DWORD PTR [ebp+0x74]
  42f4d6:	fucom  st(7)
  42f4d8:	xor    al,0xfb
  42f4da:	add    esi,esi
  42f4dc:	inc    ebx
  42f4dd:	je     0x42f4a4
  42f4df:	jmp    0x42f4a3
  42f4e1:	cmovle ebx,DWORD PTR [esi-0x2422778e]
  42f4e8:	ret    0x5cfb
  42f4eb:	mov    ch,0x76
  42f4ed:	out    0xcd,al
  42f4ef:	xlat   BYTE PTR ds:[ebx]
  42f4f0:	repnz rep lods eax,DWORD PTR ds:[esi]
  42f4f3:	dec    edx
  42f4f4:	and    al,0xfa
  42f4f6:	mov    dl,0x27
  42f4f8:	xor    eax,0xe7ec0fb
  42f4fd:	inc    eax
  42f4fe:	aad    0xeb
  42f500:	ret    0xfbf7
  42f503:	dec    ebx
  42f504:	inc    ebp
  42f505:	mov    ebp,0x2ecf72e1
  42f50a:	xchg   ebp,eax
  42f50b:	mov    ds:0x18254fce,al
  42f510:	clc    
  42f511:	and    ebx,ebp
  42f513:	rdmsr  
  42f515:	sti    
  42f516:	enter  0xee6,0x40
  42f51a:	aad    0x5f
  42f51c:	xor    al,0x87
  42f51e:	jge    0x42f57f
  42f520:	push   edi
  42f521:	adc    eax,0x40e3097e
  42f526:	dec    edi
  42f527:	(bad)  
  42f528:	cmp    al,0x14
  42f52a:	add    BYTE PTR [eax],al
  42f52c:	xchg   ebp,eax
  42f52d:	or     DWORD PTR [edi+0x40],ebx
  42f530:	stos   DWORD PTR es:[edi],eax
  42f531:	dec    ebx
  42f532:	in     al,0x3
  42f534:	dec    eax
  42f535:	mov    ecx,0x132880d3
  42f53a:	jmp    0x1e03:0xe90ad384
  42f541:	sub    eax,0xcb080554
  42f546:	call   0x157b02ce
  42f54b:	cmp    DWORD PTR [ebp+0x62],edx
  42f54e:	mov    esi,0xa793c4f7
  42f553:	lgs    esp,FWORD PTR ds:0x25d6f208
  42f55a:	push   ebp
  42f55c:	(bad)  
  42f55d:	mov    esp,?
  42f55f:	daa    
  42f560:	(bad)  [ecx]
  42f562:	fiadd  DWORD PTR [edi+0x3e908fb]
  42f568:	push   ebp
  42f569:	jno    0x42f583
  42f56b:	test   ch,cl
  42f56d:	adc    edx,esp
  42f56f:	test   BYTE PTR [edi+0x5203e90a],ah
  42f575:	into   
  42f576:	or     al,0x8
  42f578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f579:	inc    edx
  42f57a:	fld    QWORD PTR [ebx+0x2b]
  42f57d:	push   0xffffffe5
  42f57f:	and    BYTE PTR [edx-0x2],0x3f
  42f583:	inc    esp
  42f584:	call   0xfc1:0xede9e867
  42f58b:	mov    esp,0x89e8678a
  42f590:	add    BYTE PTR [eax],al
  42f592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f593:	mov    bl,BYTE PTR [esi]
  42f595:	and    edx,DWORD PTR [ebp+0x64]
  42f598:	xchg   ecx,esi
  42f59a:	fisttp QWORD PTR [ecx-0x70200702]
  42f5a0:	inc    DWORD PTR [esi+edx*8+0x9]
  42f5a4:	add    BYTE PTR [ecx-0x21],ch
  42f5a7:	sbb    al,0xb
  42f5a9:	ins    BYTE PTR es:[edi],dx
  42f5aa:	jns    0x42f613
  42f5ac:	cli    
  42f5ad:	jmp    0xb429f3ea
  42f5b2:	pop    ecx
  42f5b3:	bound  ebp,QWORD PTR [edx]
  42f5b5:	ficom  WORD PTR [ebp-0x68]
  42f5b8:	(bad)  
  42f5b9:	call   0xd254e594
  42f5be:	pushf  
  42f5bf:	out    0xf8,al
  42f5c1:	push   es
  42f5c2:	into   
  42f5c3:	mov    WORD PTR [ecx+0x6609d6e9],es
  42f5c9:	inc    BYTE PTR [ebx+0x51b885a6]
  42f5cf:	dec    ebp
  42f5d0:	pop    ds
  42f5d1:	imul   eax,DWORD PTR [ebx+0x56e46de9],0xe4ff755d
  42f5db:	out    0xf8,al
  42f5dd:	mov    ecx,0x70800de2
  42f5e2:	mov    al,ds:0x58696be3
  42f5e7:	xor    BYTE PTR [esi+ecx*8+0x56],dh
  42f5eb:	popa   
  42f5ec:	sub    al,0xd5
  42f5ee:	mov    al,0xe6
  42f5f0:	clc    
  42f5f1:	push   es
  42f5f2:	lds    edi,FWORD PTR [eax+0x7f]
  42f5f5:	push   eax
  42f5f6:	add    BYTE PTR [eax],al
  42f5f8:	sti    
  42f5f9:	fisttp QWORD PTR [eax]
  42f5fb:	imul   esi,DWORD PTR [eax],0xb8997524
  42f601:	cld    
  42f602:	out    0x63,al
  42f604:	mov    bl,0xfe
  42f606:	out    0x67,al
  42f608:	dec    esp
  42f609:	mov    ecx,0x121369cf
  42f60e:	jb     0x42f5ba
  42f610:	push   esi
  42f611:	popa   
  42f612:	sub    ah,dh
  42f614:	add    bh,al
  42f616:	cli    
  42f617:	push   cs
  42f618:	(bad)  
  42f619:	outs   dx,DWORD PTR ds:[esi]
  42f61a:	fild   WORD PTR [eax]
  42f61c:	imul   ebx,DWORD PTR [eax-0x31e97f31],0x50
  42f623:	inc    eax
  42f624:	ins    BYTE PTR es:[edi],dx
  42f625:	or     dh,BYTE PTR [ebp+0x2c]
  42f628:	in     al,dx
  42f629:	in     al,0x19
  42f62b:	jne    0x42f5b8
  42f62d:	je     0x42f645
  42f62f:	jmp    0x38d8cb
  42f634:	cmp    ebx,DWORD PTR [eax-0x35997f31]
  42f63a:	push   eax
  42f63b:	inc    eax
  42f63c:	cmp    al,0xa
  42f63e:	je     0x42f647
  42f640:	xchg   BYTE PTR [esi],al
  42f642:	jmp    0xf626618f
  42f647:	and    BYTE PTR [ebp+0x2f],0x74
  42f64b:	loope  0x42f6c9
  42f64d:	in     eax,0x35
  42f64f:	je     0x42f650
  42f651:	push   ds
  42f652:	rol    BYTE PTR [eax+0x2e],0x66
  42f656:	cli    
  42f657:	push   cs
  42f658:	mov    ds:0xba7abd,al
  42f65d:	add    BYTE PTR [eax+edi*1],bh
  42f660:	cmp    al,BYTE PTR [eax]
  42f662:	cld    
  42f663:	pop    eax
  42f664:	out    dx,eax
  42f665:	jmp    0x42f6b5
  42f667:	adc    ebp,DWORD PTR [esi-0x455b932f]
  42f66d:	push   esi
  42f66e:	jl     0x42f679
  42f670:	add    BYTE PTR [ebx+esi*4+0x77],dh
  42f674:	sbb    ebp,ecx
  42f676:	ret    
  42f677:	loopne 0x42f66e
  42f679:	jmp    FWORD PTR [esi+eiz*8]
  42f67c:	sbb    DWORD PTR [ebx+edx*8-0x78],esi
  42f680:	idiv   DWORD PTR [edi]
  42f682:	popa   
  42f683:	shl    cl,1
  42f685:	in     eax,dx
  42f686:	mov    ebx,0x2680cf9b
  42f68b:	leave  
  42f68c:	push   eax
  42f68d:	inc    eax
  42f68e:	jl     0x42f699
  42f690:	jne    0x42f656
  42f692:	cld    
  42f693:	in     eax,0x19
  42f695:	je     0x42f66c
  42f697:	mov    ebx,0xaa48b469
  42f69c:	(bad)  
  42f69d:	mov    eax,0xfeb19e
  42f6a2:	cdq    
  42f6a3:	mov    cl,0xfe
  42f6a5:	and    BYTE PTR [ecx-0x76d6014f],dl
  42f6ab:	mov    cl,0xfe
  42f6ad:	and    DWORD PTR ss:[ecx],esi
  42f6b0:	add    al,0x75
  42f6b2:	sbb    DWORD PTR [ecx],esi
  42f6b4:	add    al,0x88
  42f6b6:	adc    DWORD PTR [ecx],esi
  42f6b8:	add    al,0xa0
  42f6ba:	or     DWORD PTR [ecx],esi
  42f6bc:	add    al,0xbf
  42f6be:	and    DWORD PTR [ecx],esi
  42f6c0:	add    al,0xd1
  42f6c2:	add    BYTE PTR [eax],al
  42f6c4:	sbb    DWORD PTR [ecx],esi
  42f6c6:	add    al,0xf0
  42f6c8:	adc    DWORD PTR [ecx],esi
  42f6ca:	add    al,0x55
  42f6cc:	dec    esi
  42f6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6ce:	test   bl,ah
  42f6d0:	or     eax,0x5e2f67f0
  42f6d5:	push   ds
  42f6d6:	adc    al,0x87
  42f6d8:	nop
  42f6d9:	outs   dx,BYTE PTR ds:[esi]
  42f6da:	xor    eax,eax
  42f6dc:	dec    esp
  42f6dd:	das    
  42f6de:	and    BYTE PTR [esp+ebx*2],dl
  42f6e1:	aaa    
  42f6e2:	and    BYTE PTR [esp+ebx*2],cl
  42f6e5:	das    
  42f6e6:	and    BYTE PTR [eax],bl
  42f6e8:	dec    esp
  42f6e9:	aaa    
  42f6ea:	and    BYTE PTR [eax],dl
  42f6ec:	dec    edi
  42f6ed:	sub    eax,0xb65d4f11
  42f6f2:	sbb    al,BYTE PTR [edi]
  42f6f4:	push   ebp
  42f6f5:	dec    esi
  42f6f6:	sbb    al,BYTE PTR [edi]
  42f6f8:	inc    edx
  42f6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6fa:	mov    edi,DWORD PTR [ebp+ecx*8+0x3e]
  42f6fe:	jmp    FWORD PTR [esi]
  42f700:	xchg   ebp,eax
  42f701:	mov    ecx,0x72d51028
  42f706:	jns    0x42f6d5
  42f708:	sub    BYTE PTR [esi-0x112bb674],dh
  42f70e:	inc    esi
  42f70f:	jae    0x42f6d3
  42f711:	or     DWORD PTR [ecx+0x7b],ebp
  42f714:	mov    dh,bl
  42f716:	je     0x5fe00499
  42f71c:	cli    
  42f71d:	(bad)  
  42f71e:	imul   edi
  42f720:	(bad)  
  42f724:	loopne 0x42f726
  42f726:	outs   dx,BYTE PTR ds:[esi]
  42f727:	rol    DWORD PTR [eax],0x0
  42f72a:	retf   0x288e
  42f72d:	lock mov edx,DWORD PTR [eax-0x71dd86e6]
  42f734:	test   al,0xef
  42f736:	adc    ecx,DWORD PTR [edi-0x7006eede]
  42f73c:	in     al,0xd
  42f73e:	dec    ebp
  42f73f:	retf   
  42f740:	icebp  
  42f741:	ins    BYTE PTR es:[edi],dx
  42f742:	outs   dx,DWORD PTR ds:[esi]
  42f743:	sub    eax,0x91d2076e
  42f748:	and    dl,BYTE PTR [ecx]
  42f74a:	repnz dec ecx
  42f74c:	sub    BYTE PTR [ebx+0x34],ch
  42f74f:	adc    al,0xe9
  42f751:	add    ebx,DWORD PTR [ebx-0x35]
  42f754:	out    0x37,eax
  42f756:	mov    esp,0x8e8ae4de
  42f75b:	sub    eax,0xdeb237f5
  42f760:	in     al,0x8a
  42f762:	sahf   
  42f763:	sub    eax,0xddcc37dd
  42f768:	les    esi,FWORD PTR [edi]
  42f76a:	leave  
  42f76b:	(bad)  
  42f76d:	aaa    
  42f76e:	rcr    ch,0xcc
  42f771:	aaa    
  42f772:	out    0xdd,eax
  42f774:	add    BYTE PTR [eax],bh
  42f776:	in     eax,dx
  42f777:	(bad)  
  42f779:	aaa    
  42f77a:	jmp    0x42f759
  42f77c:	clc    
  42f77d:	aaa    
  42f77e:	loop   0x42f75d
  42f780:	fdiv   QWORD PTR [edi]
  42f782:	(bad)  
  42f783:	(bad)  
  42f785:	aaa    
  42f786:	leave  
  42f787:	fucom  st(4)
  42f789:	aaa    
  42f78a:	rcr    ah,0xff
  42f78d:	in     al,dx
  42f78e:	add    BYTE PTR [eax],al
  42f790:	dec    edi
  42f791:	iret   
  42f792:	and    ecx,DWORD PTR [ecx]
  42f794:	pop    edx
  42f795:	pop    es
  42f796:	adc    DWORD PTR [eax-0x6e],esi
  42f799:	daa    
  42f79a:	adc    BYTE PTR [eax+0x42],dh
  42f79d:	daa    
  42f79e:	and    al,0xd2
  42f7a0:	push   cs
  42f7a1:	adc    BYTE PTR [esp+ecx*2+0x690009dc],al
  42f7a8:	ins    BYTE PTR es:[edi],dx
  42f7a9:	or     ch,BYTE PTR [edi]
  42f7ab:	jb     0x42f7cf
  42f7ad:	daa    
  42f7ae:	adc    BYTE PTR [ebx-0x42],ah
  42f7b1:	(bad)  
  42f7b2:	pmaxsw mm2,QWORD PTR ds:0xd5678107
  42f7b9:	or     DWORD PTR [eax-0x18],eax
  42f7bc:	(bad)  
  42f7bd:	push   cs
  42f7be:	sub    DWORD PTR [ecx-0x2e],0x9
  42f7c2:	add    BYTE PTR [edx],bl
  42f7c4:	xchg   DWORD PTR [edi],ecx
  42f7c6:	mov    dl,0x2f
  42f7c8:	rcl    cl,1
  42f7ca:	jle    0x42f78d
  42f7cc:	loope  0x42f7dc
  42f7ce:	and    esi,0xffffffc6
  42f7d1:	or     DWORD PTR [eax],eax
  42f7d3:	scas   al,BYTE PTR es:[edi]
  42f7d4:	mov    ch,0x8c
  42f7d6:	pop    ecx
  42f7d7:	(bad)  
  42f7d8:	pop    ss
  42f7d9:	arpl   WORD PTR [edx-0x5e],di
  42f7dc:	int3   
  42f7dd:	push   cs
  42f7de:	test   BYTE PTR [esi],al
  42f7e0:	ror    DWORD PTR [ecx],cl
  42f7e2:	add    BYTE PTR [ecx+0x6e],ch
  42f7e5:	or     al,0xb
  42f7e7:	ins    DWORD PTR es:[edi],dx
  42f7e8:	or     edx,DWORD PTR [ecx]
  42f7ea:	add    cl,ch
  42f7ec:	push   esi
  42f7ed:	sub    edi,edi
  42f7ef:	imul   edx,DWORD PTR [ebx],0x6afb0b
  42f7f5:	add    BYTE PTR [ebx-0x348c04f2],bl
  42f7fb:	loop   0x42f7f3
  42f7fd:	mov    cl,0xdb
  42f7ff:	lea    esi,[ebp+0x2409d6e8]
  42f805:	dec    ebp
  42f806:	popa   
  42f807:	or     dl,al
  42f809:	add    BYTE PTR [edx+0xd],bh
  42f80c:	adc    ebx,ebp
  42f80e:	push   ebp
  42f80f:	(bad)  
  42f810:	icebp  
  42f811:	or     eax,0x780e2b3
  42f816:	jl     0x42f81e
  42f818:	cmp    bl,0x86
  42f81b:	or     eax,DWORD PTR [ebp+0x67b86]
  42f821:	(bad)  
  42f822:	sub    cl,BYTE PTR ds:0x8e1deb2a
  42f828:	icebp  
  42f829:	or     eax,0xa77e263
  42f82e:	ins    BYTE PTR es:[edi],dx
  42f82f:	push   es
  42f830:	cmp    bl,0x76
  42f833:	or     eax,DWORD PTR [ebp+0x63679]
  42f839:	(bad)  
  42f83a:	cli    
  42f83b:	or     al,0x2d
  42f83d:	cmp    DWORD PTR [eax],ecx
  42f83f:	sub    dl,BYTE PTR [esp+esi*2]
  42f842:	test   eax,0xc70c3d8f
  42f847:	(bad)  
  42f848:	outs   dx,BYTE PTR ds:[esi]
  42f849:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42f84b:	dec    edx
  42f84c:	push   ds
  42f84d:	adc    bh,al
  42f84f:	push   ecx
  42f850:	push   ds
  42f851:	adc    al,0xb7
  42f853:	push   edx
  42f854:	push   ds
  42f855:	adc    al,0xed
  42f857:	mov    cs,eax
  42f859:	inc    DWORD PTR [eax]
  42f85b:	add    BYTE PTR [ecx+ecx*4-0x46],cl
  42f85f:	je     0x42f867
  42f861:	nop
  42f862:	inc    eax
  42f863:	pop    ss
  42f864:	or     bl,ah
  42f866:	push   es
  42f867:	pop    es
  42f868:	je     0x42f80e
  42f86a:	or     eax,0x2412ba8a
  42f86f:	jg     0x42f8d5
  42f871:	mov    ds:0x88f30f1e,al
  42f876:	add    DWORD PTR [eax],0xffffffbc
  42f879:	or     eax,0xf9d8647b
  42f87e:	(bad)  
  42f87f:	call   0x38d0fc
  42f884:	aad    0xf2
  42f886:	jne    0x42f8a7
  42f888:	loop   0x42f870
  42f88a:	repz push es
  42f88c:	aad    0x72
  42f88e:	jle    0x42f886
  42f890:	int3   
  42f891:	outs   dx,DWORD PTR ds:[esi]
  42f892:	jp     0x42f8fb
  42f894:	into   
  42f895:	jb     0x42f895
  42f897:	rcr    DWORD PTR [ebx],0x72
  42f89a:	es jmp 0xfab5205e
  42f8a0:	push   ebp
  42f8a1:	sub    al,0x9
  42f8a3:	or     edx,DWORD PTR [eax+0x36]
  42f8a6:	std    
  42f8a7:	call   ebp
  42f8a9:	in     al,dx
  42f8aa:	cld    
  42f8ab:	mov    edi,0x7a6757d
  42f8b0:	shl    ch,cl
  42f8b2:	rol    BYTE PTR [esi],1
  42f8b4:	aad    0x72
  42f8b6:	cmp    al,0x41
  42f8b8:	aam    0xa3
  42f8ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8bb:	xadd   BYTE PTR [esi+edi*2+0x79],bl
  42f8c0:	add    BYTE PTR [eax],al
  42f8c2:	jmp    0x42f929
  42f8c4:	jmp    0xe7fe:0x68b30603
  42f8cb:	mov    dl,0xc3
  42f8cd:	mov    edi,0x44087035
  42f8d2:	stc    
  42f8d3:	outs   dx,DWORD PTR ds:[esi]
  42f8d4:	xchg   BYTE PTR [ecx-0x3e],al
  42f8d7:	jmp    0x42f895
  42f8d9:	bswap  esi
  42f8db:	mov    ah,0xef
  42f8dd:	adc    al,0x5e
  42f8df:	cdq    
  42f8e0:	je     0x42f8b1
  42f8e2:	push   esi
  42f8e3:	jnp    0x42f8e8
  42f8e5:	je     0x42f8b6
  42f8e7:	sub    al,BYTE PTR ds:0xfe415185
  42f8ed:	call   DWORD PTR [ebp+0x59]
  42f8f0:	jle    0x42f920
  42f8f2:	pop    es
  42f8f3:	fnstsw WORD PTR [ecx-0x79a84eee]
  42f8f9:	inc    ebx
  42f8fa:	stc    
  42f8fb:	aas    
  42f8fc:	add    eax,DWORD PTR [esi+ebx*4-0x408a9cf7]
  42f903:	xchg   esp,eax
  42f904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f905:	pop    ds
  42f906:	in     eax,0x34
  42f908:	lods   al,BYTE PTR ds:[esi]
  42f909:	pop    es
  42f90a:	mov    esp,0xd503db16
  42f90f:	xchg   esp,eax
  42f910:	stos   DWORD PTR es:[edi],eax
  42f911:	pop    es
  42f912:	cli    
  42f913:	lds    eax,FWORD PTR [esp+edx*1]
  42f916:	push   edx
  42f917:	iret   
  42f918:	in     al,0x0
  42f91a:	sbb    dl,bh
  42f91c:	dec    edi
  42f91d:	mov    DWORD PTR [eax-0x52e0536e],eax
  42f923:	xchg   esp,eax
  42f924:	mov    ds:0xc200000b,al
  42f929:	push   eax
  42f92a:	xchg   ecx,eax
  42f92b:	adc    esi,ecx
  42f92d:	pop    es
  42f92e:	into   
  42f92f:	mov    edi,0xb7631b6
  42f934:	pop    edx
  42f935:	cmp    DWORD PTR [edi-0x38],ebp
  42f938:	mov    dh,0x15
  42f93a:	dec    BYTE PTR [ebx]
  42f93c:	pop    edx
  42f93d:	mov    ch,0xc4
  42f93f:	sub    ebx,DWORD PTR [ebp+ebx*8+0xc]
  42f943:	xor    dl,al
  42f945:	fld    QWORD PTR [esp+ebx*1]
  42f948:	aad    0xd6
  42f94a:	loopne 0x42f8d4
  42f94c:	scas   al,BYTE PTR es:[edi]
  42f94d:	and    eax,0x25ae8af9
  42f952:	loope  0x42f8dc
  42f954:	mov    eax,ds:0xc3420e11
  42f959:	int    0xc
  42f95b:	xor    BYTE PTR [edi+eax*8-0x20],bl
  42f95f:	mov    BYTE PTR [esi-0x697906db],dl
  42f965:	stc    
  42f966:	cdq    
  42f967:	mov    dl,BYTE PTR [esi-0x6b7706db]
  42f96d:	adc    esi,ebx
  42f96f:	inc    edx
  42f970:	pop    ebp
  42f971:	iret   
  42f972:	hlt    
  42f973:	add    al,0x58
  42f975:	gs in  al,dx
  42f977:	add    edx,ebp
  42f979:	inc    edi
  42f97a:	jmp    FWORD PTR [esi]
  42f97c:	(bad)  
  42f97d:	and    BYTE PTR [ecx],bh
  42f97f:	and    eax,0x6d0b01f5
  42f984:	and    DWORD PTR [ecx-0x6],0x13cc4d5e
  42f98b:	ins    BYTE PTR es:[edi],dx
  42f98c:	add    BYTE PTR [eax],al
  42f98e:	push   ss
  42f98f:	fld    TBYTE PTR [edx]
  42f991:	bound  edx,QWORD PTR [edx-0x72edefd5]
  42f997:	sub    ebx,DWORD PTR [eax]
  42f999:	jb     0x42f925
  42f99b:	sub    ebx,DWORD PTR [eax]
  42f99d:	test   al,0xa7
  42f99f:	mov    cl,cl
  42f9a1:	cs xchg BYTE PTR es:[edi+0x4187cc9d],bh
  42f9a9:	neg    dl
  42f9ab:	nop
  42f9ac:	or     esp,eax
  42f9ae:	pop    esi
  42f9af:	leave  
  42f9b0:	adc    ah,BYTE PTR [ebx+0x28]
  42f9b3:	cld    
  42f9b4:	and    eax,DWORD PTR [esi-0x11dc34b2]
  42f9ba:	rol    DWORD PTR [edi+eax*2+0x7e63c6f6],1
  42f9c1:	test   edx,ebp
  42f9c3:	add    DWORD PTR [eax],eax
  42f9c5:	ror    dh,1
  42f9c7:	arpl   dx,di
  42f9c9:	fimul  WORD PTR [edi-0x4c15ff38]
  42f9cf:	or     esi,DWORD PTR [edi]
  42f9d1:	stos   DWORD PTR es:[edi],eax
  42f9d2:	(bad)  
  42f9d3:	test   DWORD PTR [edi-0x78f6290b],eax
  42f9d9:	scas   eax,DWORD PTR es:[edi]
  42f9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9db:	dec    esi
  42f9dc:	test   BYTE PTR [ecx+0x2786050d],ch
  42f9e2:	out    dx,al
  42f9e3:	and    eax,0x91d9f581
  42f9e8:	inc    ecx
  42f9e9:	idiv   BYTE PTR [eax-0x38]
  42f9ec:	adc    cl,ch
  42f9ee:	out    0x86,eax
  42f9f0:	inc    ebx
  42f9f1:	lds    eax,FWORD PTR [eax]
  42f9f3:	add    bh,dl
  42f9f5:	adc    al,BYTE PTR [eax+eax*1+0x9d3]
  42f9fc:	addr16 push ecx
  42f9fe:	push   ds
  42f9ff:	adc    BYTE PTR [edi+0x55400651],dl
  42fa05:	inc    esi
  42fa06:	or     eax,DWORD PTR [eax]
  42fa08:	lods   al,BYTE PTR ds:[esi]
  42fa09:	mov    dh,cl
  42fa0b:	push   esp
  42fa0c:	mov    eax,ds:0xe006845c
  42fa11:	fadd   DWORD PTR [esi]
  42fa13:	add    DWORD PTR [esp+edx*1],esi
  42fa16:	jecxz  0x42fa65
  42fa18:	sub    al,0xef
  42fa1a:	inc    ebx
  42fa1b:	rdtsc  
  42fa1d:	lahf   
  42fa1e:	or     eax,DWORD PTR [eax]
  42fa20:	jl     0x42f9ac
  42fa22:	and    ah,bh
  42fa24:	mov    dl,0x53
  42fa26:	adc    BYTE PTR [edx],al
  42fa28:	mov    dl,0x53
  42fa2a:	stc    
  42fa2b:	add    DWORD PTR [edx-0x2aee00ad],esi
  42fa31:	sub    ecx,DWORD PTR [eax+eax*1]
  42fa34:	jl     0x42f9c0
  42fa36:	and    BYTE PTR [ebx],al
  42fa38:	out    dx,eax
  42fa39:	dec    ebx
  42fa3a:	add    bh,bh
  42fa3c:	out    dx,eax
  42fa3d:	dec    ebx
  42fa3e:	push   es
  42fa3f:	(bad)  
  42fa40:	mov    esp,0xa87404ee
  42fa45:	test   ecx,esi
  42fa47:	or     eax,0xfb7a92a0
  42fa4c:	add    al,0xb
  42fa4e:	test   DWORD PTR [ecx],ebx
  42fa50:	cmp    DWORD PTR [edx],ecx
  42fa52:	add    dh,al
  42fa54:	repnz add al,0x5
  42fa57:	jmp    0xdb23fa5c
  42fa5c:	cmc    
  42fa5d:	jmp    FWORD PTR [edi+ebp*8-0x217ef0b2]
  42fa64:	(bad)  
  42fa65:	(bad)  
  42fa66:	cld    
  42fa67:	iret   
  42fa68:	inc    eax
  42fa69:	add    edx,esi
  42fa6b:	mov    esp,0x9ec0bf3
  42fa70:	cmp    bl,0xd5
  42fa73:	sbb    al,0xff
  42fa75:	test   BYTE PTR [edi+0x71],ch
  42fa78:	(bad)  
  42fa79:	call   FWORD PTR [ebx]
  42fa7b:	cs add eax,0xf992ec03
  42fa81:	call   edx
  42fa83:	repz imul ecx,DWORD PTR [edi-0x26],0xd500d6e5
  42fa8b:	jb     0x42fad5
  42fa8d:	inc    ecx
  42fa8e:	aam    0x5a
  42fa90:	pop    ebx
  42fa91:	rcr    dh,1
  42fa93:	jb     0x42fa93
  42fa95:	jg     0x42fa45
  42fa97:	pop    esp
  42fa98:	std    
  42fa99:	test   BYTE PTR [ebx],cl
  42fa9b:	jb     0x42fa9b
  42fa9d:	call   DWORD PTR [ebx+0x7c0903a5]
  42faa3:	aam    0xf9
  42faa5:	dec    DWORD PTR [edx-0x3e303e42]
  42faab:	pop    ecx
  42faac:	cmc    
  42faad:	dec    ebp
  42faae:	repz imul esi,DWORD PTR [eax+0x56effbbe],0x2f
  42fab6:	repz jmp 0xadde0a84
  42fabc:	add    eax,DWORD PTR [esi]
  42fabe:	add    BYTE PTR [eax],al
  42fac0:	ins    BYTE PTR es:[edi],dx
  42fac1:	sar    cl,1
  42fac3:	call   DWORD PTR [edx-0xd]
  42fac6:	imul   ebp,DWORD PTR [ecx],0x414869c0
  42facc:	aam    0x57
  42face:	push   ebp
  42facf:	xchg   esp,eax
  42fad0:	into   
  42fad1:	jb     0x42fad1
  42fad3:	jg     0x42fb03
  42fad5:	add    esi,eax
  42fad7:	and    eax,0x7b263855
  42fadc:	clc    
  42fadd:	int3   
  42fade:	jl     0x42fb21
  42fae0:	(bad)
  42fae3:	mov    edi,0xba00ccdf
  42fae8:	push   ds
  42fae9:	lds    eax,FWORD PTR [ecx+eax*8]
  42faec:	jnp    0x42faf7
  42faee:	pop    sp
  42faf0:	stos   BYTE PTR es:[edi],al
  42faf1:	jecxz  0x42fb62
  42faf3:	retf   0xa2e2
  42faf6:	mov    DWORD PTR ds:0x2d0309d5,eax
  42fafc:	adc    al,0xd
  42fafe:	imul   ebp,edx,0xffffffd3
  42fb01:	or     ecx,ebp
  42fb03:	jge    0x42fb19
  42fb05:	cmc    
  42fb06:	int3   
  42fb07:	sbb    esi,0xce73800b
  42fb0d:	or     ecx,ebp
  42fb0f:	jle    0x42fb0c
  42fb11:	cmp    DWORD PTR [ebx+edi*8],ebx
  42fb14:	daa    
  42fb15:	outs   dx,DWORD PTR ds:[esi]
  42fb16:	retf   0x6f00
  42fb19:	dec    eax
  42fb1a:	ret    0xba84
  42fb1d:	sbb    ebx,ecx
  42fb1f:	jp     0x42fb35
  42fb21:	clc    
  42fb22:	and    cl,dl
  42fb24:	add    BYTE PTR [eax],al
  42fb26:	aad    0xd
  42fb28:	inc    eax
  42fb29:	xor    dl,dl
  42fb2b:	or     ecx,ebp
  42fb2d:	or     DWORD PTR [ebx-0x6b0563d7],0xffffffc3
  42fb34:	out    0xfe,eax
  42fb36:	jge    0x42fb51
  42fb38:	fiadd  WORD PTR [ebx]
  42fb3a:	aad    0x89
  42fb3c:	or     eax,0x6846e134
  42fb41:	ins    DWORD PTR es:[edi],dx
  42fb42:	popf   
  42fb43:	fsubr  QWORD PTR [eax]
  42fb45:	jmp    0x49b3:0xe9d6c35b
  42fb4c:	fsubp  st(1),st
  42fb4e:	iret   
  42fb4f:	fwait
  42fb50:	lods   eax,DWORD PTR ds:[esi]
  42fb51:	jmp    0x85854491
  42fb56:	cmp    bl,BYTE PTR [ecx]
  42fb58:	dec    ebx
  42fb59:	jnp    0x42faef
  42fb5b:	idiv   DWORD PTR [ebp-0x6737ae76]
  42fb61:	das    
  42fb62:	int3   
  42fb63:	aam    0xd3
  42fb65:	jmp    0xaa429749
  42fb6a:	cld    
  42fb6b:	(bad)  
  42fb6d:	stc    
  42fb6e:	in     al,dx
  42fb6f:	nop
  42fb70:	inc    ecx
  42fb71:	std    
  42fb72:	mov    edx,cs
  42fb74:	add    bh,ch
  42fb76:	(bad)  
  42fb77:	pop    ecx
  42fb78:	add    eax,0xf689d6e9
  42fb7d:	leave  
  42fb7e:	aad    0x85
  42fb80:	out    0xf3,eax
  42fb82:	(bad)  
  42fb83:	or     DWORD PTR [esi-0x74da13d9],eax
  42fb89:	in     eax,0x0
  42fb8b:	add    ch,dl
  42fb8d:	jo     0x42fbfd
  42fb8f:	fst    st(6)
  42fb91:	or     DWORD PTR [ebp+0x91f26aa],ecx
  42fb97:	(bad)  
  42fb98:	cld    
  42fb99:	out    0x86,eax
  42fb9b:	scas   eax,DWORD PTR es:[edi]
  42fb9c:	ret    0x66e7
  42fb9f:	sub    DWORD PTR [eax-0x2678f517],esp
  42fba5:	call   0xdcbf23a8
  42fbaa:	out    0xf9,eax
  42fbac:	aas    
  42fbad:	push   0xe7d6e8fe
  42fbb2:	mov    BYTE PTR [edi+0x2836e7e2],ch
  42fbb8:	ins    DWORD PTR es:[edi],dx
  42fbb9:	dec    edi
  42fbba:	call   0xfa9e6405
  42fbbf:	imul   esi,ecx,0x56d37404
  42fbc5:	push   esp
  42fbc6:	or     al,0x75
  42fbc8:	jmp    0x440cf256
  42fbcd:	xchg   ebx,eax
  42fbce:	shl    DWORD PTR [edi+0x7ee90ed7],0x3f
  42fbd5:	pop    ebx
  42fbd6:	cli    
  42fbd7:	imul   edi,DWORD PTR [esi-0x6f1f8af3],0x81f900c8
  42fbe1:	xchg   ecx,eax
  42fbe2:	add    eax,0x80072c00
  42fbe7:	sti    
  42fbe8:	push   es
  42fbe9:	pop    esp
  42fbea:	add    DWORD PTR [eax-0x39fff90a],0x0
  42fbf1:	add    BYTE PTR [edx-0x2416d7fc],bh
  42fbf7:	pop    edi
  42fbf8:	cli    
  42fbf9:	(bad)  
  42fbfa:	jl     0x42fbea
  42fbfc:	add    al,0x74
  42fbfe:	dec    esi
  42fbff:	loopne 0x42fc41
  42fc01:	pop    ss
  42fc02:	sbb    BYTE PTR [edx+0x6],bh
  42fc05:	sbb    eax,0x1d945
  42fc0a:	mov    esp,0xb30df186
  42fc0f:	sbb    BYTE PTR [ebx+0xa],0xac
  42fc13:	push   es
  42fc14:	cmp    bl,0xc6
  42fc17:	pop    ebx
  42fc18:	jle    0x42fc6e
  42fc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc1b:	push   es
  42fc1c:	add    BYTE PTR [eax+0x4e7b06da],al
  42fc22:	mov    ah,0xeb
  42fc24:	jns    0x42fc74
  42fc26:	mov    al,ds:0x80c384eb
  42fc2b:	es cmp al,0x61
  42fc2e:	jae    0x42fbb8
  42fc30:	dec    esp
  42fc31:	or     ebp,DWORD PTR [esi+eax*1+0x3c]
  42fc35:	jp     0x42fbba
  42fc37:	add    DWORD PTR [ebx+ecx*1+0x7c],0x6
  42fc3c:	pop    es
  42fc3d:	mov    esi,0x1640c3bf
  42fc42:	ins    BYTE PTR es:[edi],dx
  42fc43:	les    eax,FWORD PTR [eax+0x3]
  42fc46:	ins    DWORD PTR es:[edi],dx
  42fc47:	xchg   edx,esi
  42fc49:	dec    esi
  42fc4a:	rcr    DWORD PTR [esi-0x4240bf92],cl
  42fc50:	cmp    DWORD PTR [ecx+ecx*4-0x62],esi
  42fc54:	outs   dx,BYTE PTR ds:[esi]
  42fc55:	sub    al,0x0
  42fc57:	add    BYTE PTR [edi-0x228c0642],ch
  42fc5d:	popf   
  42fc5e:	outs   dx,BYTE PTR ds:[esi]
  42fc5f:	sbb    ch,dl
  42fc61:	out    dx,eax
  42fc62:	push   esi
  42fc63:	add    ebp,DWORD PTR [ecx+0x500ab63d]
  42fc69:	fs cmc 
  42fc6b:	call   DWORD PTR [edx]
  42fc6d:	mov    ds:0x47df11c4,al
  42fc72:	leave  
  42fc73:	rcr    DWORD PTR [ebx-0x631904ce],0xaa
  42fc7a:	les    edx,FWORD PTR [ecx]
  42fc7c:	xlat   BYTE PTR ds:[ebx]
  42fc7d:	ja     0x42fc4c
  42fc7f:	rcl    DWORD PTR [ebx-0x6f18fca6],0xa2
  42fc86:	les    edx,FWORD PTR [ecx]
  42fc88:	aad    0x77
  42fc8a:	rol    ecx,0x1b
  42fc8d:	inc    ecx
  42fc8e:	pop    es
  42fc8f:	out    0x14,eax
  42fc91:	test   eax,0x8be911c4
  42fc96:	and    eax,0xf2a0ad7f
  42fc9b:	sub    eax,0x481b3f1d
  42fca0:	sbb    eax,0x29480937
  42fca5:	popa   
  42fca6:	mov    dh,0x73
  42fca8:	enter  0xf99a,0x84
  42fcac:	lods   al,BYTE PTR ds:[esi]
  42fcad:	pop    ebp
  42fcae:	(bad)  
  42fcaf:	call   DWORD PTR [ebx+0x6e0a14a9]
  42fcb5:	inc    edi
  42fcb6:	inc    esp
  42fcb7:	inc    ecx
  42fcb8:	jecxz  0x42fd21
  42fcba:	push   ebp
  42fcbb:	adc    DWORD PTR [eax],eax
  42fcbd:	add    BYTE PTR [ebx+0x7e1514b1],bl
  42fcc3:	push   ebx
  42fcc4:	inc    esp
  42fcc5:	inc    ecx
  42fcc6:	retf   
  42fcc7:	aaa    
  42fcc8:	push   ebp
  42fcc9:	add    eax,0xff14a993
  42fcce:	aas    
  42fccf:	outs   dx,DWORD PTR ds:[esi]
  42fcd0:	inc    esp
  42fcd1:	inc    ecx
  42fcd2:	jecxz  0x42fd3c
  42fcd4:	inc    esp
  42fcd5:	inc    ecx
  42fcd6:	aam    0x34
  42fcd8:	pop    ebx
  42fcd9:	add    bh,BYTE PTR [eax]
  42fcdb:	or     ah,dl
  42fcdd:	ins    DWORD PTR es:[edi],dx
  42fcde:	push   esi
  42fcdf:	xor    eax,0x47487e9
  42fce4:	jmp    0xf30357ec
  42fce9:	cld    
  42fcea:	fs dec esp
  42fcec:	ins    DWORD PTR es:[edi],dx
  42fced:	or     BYTE PTR [eax-0x26],bl
  42fcf0:	jne    0x42fcb3
  42fcf2:	or     bl,cl
  42fcf4:	lods   eax,DWORD PTR ds:[esi]
  42fcf5:	and    al,0x88
  42fcf7:	(bad)  
  42fcf8:	pop    esi
  42fcf9:	mov    esi,0x6b5b07fb
  42fcfe:	jb     0x42fd15
  42fd00:	loop   0x42fd05
  42fd02:	pusha  
  42fd03:	add    ch,BYTE PTR [ebx+0x7ffcd5c6]
  42fd09:	ins    BYTE PTR es:[edi],dx
  42fd0a:	ficomp DWORD PTR [eax-0x18]
  42fd0d:	jns    0x42fd2b
  42fd0f:	or     eax,0x13cdb5ea
  42fd14:	aad    0x4
  42fd16:	into   
  42fd17:	lea    edi,[edi+0x4]
  42fd1a:	aad    0x9
  42fd1c:	imul   ebp,DWORD PTR [edx-0x27],0x840ade
  42fd23:	add    BYTE PTR [ebp+0x22fddc0a],ch
  42fd29:	push   ebp
  42fd2a:	mov    al,ds:0xaa4fcdf6
  42fd2f:	adc    eax,0x41762e4
  42fd34:	aad    0x9
  42fd36:	imul   ebp,DWORD PTR [ebx-0x80],0xd0586407
  42fd3d:	or     ecx,ebp
  42fd3f:	sub    DWORD PTR [ebx-0x47],0xffffffe9
  42fd43:	xchg   BYTE PTR [ebx-0x68fc16fd],dl
  42fd49:	iret   
  42fd4a:	repnz sti 
  42fd4c:	ins    DWORD PTR es:[edi],dx
  42fd4d:	lahf   
  42fd4e:	call   0xfeccd256
  42fd53:	stc    
  42fd54:	rol    edi,0xff
  42fd57:	push   0xb87509ae
  42fd5c:	push   esi
  42fd5d:	pop    edi
  42fd5e:	dec    edx
  42fd5f:	pop    esp
  42fd60:	cs dec edx
  42fd62:	inc    ecx
  42fd63:	imul   DWORD PTR ds:0xd6e99961
  42fd69:	or     DWORD PTR [eax+0x19ded7d0],eax
  42fd6f:	imul   edi,DWORD PTR [ebp-0x33],0xca90f074
  42fd76:	adc    ebx,ebx
  42fd78:	lahf   
  42fd79:	(bad)  
  42fd7a:	(bad)  
  42fd7b:	call   0xe93b8756
  42fd80:	jmp    0x42fd90
  42fd82:	and    BYTE PTR [edx-0x50fe2135],0x0
  42fd89:	add    BYTE PTR [eax],bl
  42fd8b:	cli    
  42fd8c:	push   cs
  42fd8d:	sub    ch,0xd7
  42fd90:	clc    
  42fd91:	jmp    0x42fd64
  42fd93:	mov    ?,WORD PTR [ecx-0xd]
  42fd96:	(bad)  
  42fd97:	or     DWORD PTR [eax-0x7afb688e],eax
  42fd9d:	hlt    
  42fd9e:	mov    esp,0x982ffa57
  42fda3:	stc    
  42fda4:	rsqrtps xmm6,XMMWORD PTR [ebp-0x54170729]
  42fdab:	sub    eax,0xdcd55380
  42fdb0:	and    al,0x69
  42fdb2:	std    
  42fdb3:	les    esi,FWORD PTR [edi+eiz*8+0x10]
  42fdb7:	leave  
  42fdb8:	adc    ebp,esp
  42fdba:	sbb    eax,0xa3327fc1
  42fdbf:	fiadd  WORD PTR [ecx]
  42fdc1:	das    
  42fdc2:	cwde   
  42fdc3:	stc    
  42fdc4:	add    edx,DWORD PTR [edx]
  42fdc6:	xchg   ebp,eax
  42fdc7:	xlat   BYTE PTR ds:[ebx]
  42fdc8:	imul   BYTE PTR [eax-0x1cbe719f]
  42fdce:	(bad)  
  42fdcf:	or     edx,eax
  42fdd1:	add    BYTE PTR [edx-0x7f14f103],al
  42fdd7:	mov    esi,edi
  42fdd9:	add    al,cl
  42fddb:	cli    
  42fddc:	jg     0x42fdd8
  42fdde:	sbb    ah,BYTE PTR [eax+0x1]
  42fde1:	xor    BYTE PTR [edi],0x3f
  42fde4:	jae    0x42fdec
  42fde6:	jb     0x42fe34
  42fde8:	adc    BYTE PTR [esi],dl
  42fdea:	pop    ss
  42fdeb:	add    eax,DWORD PTR [eax+0x300000f9]
  42fdf1:	push   esp
  42fdf2:	sbb    DWORD PTR [ebp-0x7ffff4fb],0x16
  42fdf9:	push   edx
  42fdfa:	add    eax,0xfa54a085
  42fdff:	jmp    FWORD PTR [esi+eiz*8+0x4a]
  42fe03:	jno    0xfc4305df
  42fe09:	enter  0x1640,0xf9
  42fe0d:	xlat   BYTE PTR ds:[ebx]
  42fe0e:	jnp    0x42fe18
  42fe10:	dec    edx
  42fe11:	int    0x82
  42fe13:	dec    esi
  42fe14:	mov    edi,0xbc0863b5
  42fe19:	or     al,BYTE PTR [eax+0x7e538cfb]
  42fe1f:	pop    esp
  42fe20:	mov    ah,0xa
  42fe22:	add    BYTE PTR [ecx],bh
  42fe24:	jo     0x42fe1c
  42fe26:	pop    ds
  42fe27:	jne    0x42fdcd
  42fe29:	xlat   BYTE PTR ds:[ebx]
  42fe2a:	ds and al,0x9c
  42fe2d:	aad    0x3e
  42fe2f:	and    al,0xcc
  42fe31:	push   ds
  42fe32:	rol    BYTE PTR [eax-0x75fb0766],0xc7
  42fe39:	push   edx
  42fe3a:	mov    es,eax
  42fe3c:	pop    esp
  42fe3d:	push   ebx
  42fe3e:	mov    al,0x46
  42fe40:	ins    DWORD PTR es:[edi],dx
  42fe41:	mov    dl,0x26
  42fe43:	idiv   DWORD PTR [ebx+0x7d4682e2]
  42fe49:	add    DWORD PTR cs:[edi],ecx
  42fe4c:	aad    0xe5
  42fe4e:	adc    eax,0x7c60d508
  42fe53:	inc    ecx
  42fe54:	add    BYTE PTR [eax],al
  42fe56:	jmp    0xacf9:0xe40b9344
  42fe5d:	or     ch,dl
  42fe5f:	pusha  
  42fe60:	jle    0x42fe58
  42fe62:	iret   
  42fe63:	fcom   QWORD PTR [ebp+0x7f]
  42fe66:	cs pop ebp
  42fe68:	jmp    0x3874:0x1e6b55e5
  42fe6f:	dec    ebx
  42fe70:	inc    ecx
  42fe71:	jg     0x42fe91
  42fe73:	push   0xffffffea
  42fe75:	andnps xmm1,XMMWORD PTR [ebx-0x9]
  42fe79:	jae    0x42fe59
  42fe7b:	loopne 0x42fee6
  42fe7d:	pop    ds
  42fe7e:	mov    ah,dl
  42fe80:	inc    eax
  42fe81:	inc    ecx
  42fe82:	aam    0x46
  42fe84:	pop    ecx
  42fe85:	pop    ss
  42fe86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe87:	mov    al,ds:0x509388e0
  42fe8c:	fmul   QWORD PTR [eax]
  42fe8e:	jge    0x42fe70
  42fe90:	imul   ecx,DWORD PTR [ebx+esi*2],0xe20dc0e9
  42fe97:	mov    ch,0x3e
  42fe99:	add    esi,edx
  42fe9b:	fcmovb st,st(0)
  42fe9d:	add    ah,bh
  42fe9f:	neg    BYTE PTR [edi]
  42fea1:	and    dl,cl
  42fea3:	out    dx,al
  42fea4:	dec    esp
  42fea5:	add    dl,ch
  42fea7:	bound  edi,QWORD PTR [ecx+0x42]
  42feaa:	shl    DWORD PTR [edi],1
  42feac:	inc    edx
  42fead:	jae    0x42fea0
  42feaf:	out    0xca,eax
  42feb1:	and    esi,ebp
  42feb3:	out    0xb2,eax
  42feb5:	and    esp,ebp
  42feb7:	idiv   DWORD PTR [ecx]
  42feb9:	push   eax
  42feba:	add    BYTE PTR [eax],al
  42febc:	pop    esi
  42febd:	and    eax,0x2358cf66
  42fec2:	jmp    0x42fec9
  42fec4:	dec    edi
  42fec5:	lods   eax,DWORD PTR ds:[esi]
  42fec6:	or     eax,0xf50a5924
  42fecb:	call   DWORD PTR [edx-0x34]
  42fece:	icebp  
  42fecf:	jge    0x42fee5
  42fed1:	std    
  42fed2:	int3   
  42fed3:	jmp    0x8edf:0xfac4ce52
  42feda:	test   al,0x6e
  42fedc:	dec    edi
  42fedd:	push   ebp
  42fede:	gs fcomip st,st(6)
  42fee1:	sub    ecx,ebp
  42fee3:	pop    esp
  42fee4:	pop    ecx
  42fee5:	or     eax,0x515503e9
  42feea:	or     cl,bh
  42feec:	push   esi
  42feed:	jle    0x42fed0
  42feef:	add    edx,ebp
  42fef1:	mov    ebp,ecx
  42fef3:	mov    esp,0xfc748ecf
  42fef8:	adc    dl,BYTE PTR [ebp-0x56]
  42fefb:	ret    0xf4d5
  42fefe:	iret   
  42feff:	xchg   bh,dl
  42ff01:	or     ecx,ebp
  42ff03:	add    DWORD PTR [ebx],0xffffffbe
  42ff06:	fnstcw WORD PTR [esi-0x29]
  42ff09:	push   esi
  42ff0a:	mov    eax,ds:0xe7cc1469
  42ff0f:	and    ebp,esp
  42ff11:	fldl2t 
  42ff13:	add    edx,ebp
  42ff15:	mov    DWORD PTR [ebp+0x7b8edfd0],ecx
  42ff1b:	push   0xc2a254cf
  42ff20:	add    BYTE PTR [eax],al
  42ff22:	aad    0x2a
  42ff24:	or     dl,0xd7
  42ff27:	or     ecx,ebp
  42ff29:	sub    DWORD PTR [ebx-0x74810e47],0x55
  42ff30:	pop    ecx
  42ff31:	imul   edx,DWORD PTR [ebx+ecx*8-0x3a53da19],0x89d503e1
  42ff3c:	cmp    eax,0x178ede19
  42ff41:	push   0x2eff547f
  42ff46:	xchg   edi,eax
  42ff47:	or     DWORD PTR [edi],ebx
  42ff49:	inc    eax
  42ff4a:	ret    
  42ff4b:	or     BYTE PTR [eax],al
  42ff4d:	jmp    0xde0e1335
  42ff52:	pop    esi
  42ff53:	inc    DWORD PTR [edx-0x5b017e0]
  42ff59:	xchg   DWORD PTR [ebp-0x6e],ecx
  42ff5c:	mov    esi,0x2f6c518f
  42ff61:	xchg   DWORD PTR [edi+0x172f0fca],edi
  42ff67:	or     DWORD PTR [eax+eax*1],esp
  42ff6a:	jecxz  0x42ff74
  42ff6c:	add    cl,ch
  42ff6e:	push   esi
  42ff6f:	pop    ebx
  42ff70:	sub    esi,ebp
  42ff72:	mov    ds:0xadd6f6d0,eax
  42ff77:	dec    edx
  42ff78:	inc    ecx
  42ff79:	call   0xee4a6271
  42ff7e:	(bad)  
  42ff7f:	or     DWORD PTR [ebp+0x910a92a],ecx
  42ff85:	out    0x0,al
  42ff87:	add    BYTE PTR [ebp+0x77],dl
  42ff8a:	imul   BYTE PTR [esi+0x670aea7d]
  42ff90:	xchg   ecx,eax
  42ff91:	jmp    0x2f88:0xe7a6917e
  42ff98:	ret    
  42ff99:	inc    edi
  42ff9a:	inc    ecx
  42ff9b:	call   0xf02a6094
  42ffa0:	(bad)  
  42ffa1:	or     DWORD PTR [eax+0x8decb82],eax
  42ffa7:	scas   eax,DWORD PTR es:[edi]
  42ffa8:	xchg   esp,eax
  42ffa9:	or     ah,BYTE PTR [ebx]
  42ffab:	and    BYTE PTR [eax],0x9
  42ffae:	add    cl,ch
  42ffb0:	push   esi
  42ffb1:	pop    esp
  42ffb2:	add    eax,0xfbba22ee
  42ffb7:	push   esi
  42ffb8:	sub    eax,0xfd529b62
  42ffbd:	dec    edi
  42ffbe:	jg     0x42ffc0
  42ffc0:	pop    ss
  42ffc1:	push   ebp
  42ffc2:	add    eax,0xf5eb2f84
  42ffc7:	push   esi
  42ffc9:	dec    eax
  42ffca:	or     eax,0xd5b0b24
  42ffcf:	jmp    0x3d4ef6
  42ffd4:	mov    edx,0xd531ff48
  42ffd9:	jo     0x42ffdb
  42ffdb:	add    BYTE PTR [edx+edx*2],bh
  42ffde:	mov    al,0xc3
  42ffe0:	mov    BYTE PTR [esi+0x76c54ba],0x84
  42ffe7:	shl    BYTE PTR [ebx],0xd3
  42ffea:	mov    cl,0x7
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	cmp    al,0x7
  42fff0:	cmp    DWORD PTR [eax+ebx*8+0x1],edx
  42fff4:	jne    0x42fffe
  42fff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fff7:	xchg   ecx,eax
  42fff8:	push   ds
  42fff9:	adc    BYTE PTR [ebp+0x331c1e91],dh
  42ffff:	lods   eax,DWORD PTR ds:[esi]
  430000:	mov    edx,0xc0672483
  430005:	inc    esi
  430006:	out    dx,eax
  430007:	push   es
  430008:	mov    esi,0x73f5ed46
  43000d:	sub    al,0x7f
  43000f:	mov    ch,0xb
  430011:	je     0x42ffe5
  430013:	xchg   dl,ah
  430015:	add    al,0xc8
  430017:	std    
  430018:	inc    edi
  430019:	punpckhwd mm1,QWORD PTR [ebx-0x1]
  43001d:	(bad)  
  43001e:	mov    esp,0xc4024114
  430023:	mov    ch,0x63
  430025:	push   es
  430026:	lods   al,BYTE PTR ds:[esi]
  430027:	push   es
  430028:	mov    esi,0xe753ae46
  43002d:	pop    esp
  43002e:	mov    edx,0x7ac60006
  430033:	or     BYTE PTR ds:0xfa545fe9,al
  430039:	call   ebp
  43003b:	and    bh,BYTE PTR [edx-0x4a362a03]
  430041:	add    ebp,edx
  430043:	pusha  
  430044:	icebp  
  430045:	mov    cl,0x96
  430047:	(bad)  
  430048:	cmp    DWORD PTR [edi-0x7c015edf],0xffffff95
  43004f:	xor    edi,DWORD PTR [edx+0x2d]
  430052:	add    BYTE PTR [eax],al
  430054:	aam    0x60
  430056:	dec    BYTE PTR [edx]
  430058:	sub    esp,DWORD PTR [edx-0x6a9b700]
  43005e:	test   BYTE PTR [edx],0x5a
  430061:	inc    edi
  430062:	cld    
  430063:	dec    DWORD PTR [edx+0xb]
  430066:	and    BYTE PTR [ebp-0x420c69],cl
  43006c:	cmp    BYTE PTR [edx+0x33c23bfd],ah
  430072:	(bad)  
  430073:	mov    edi,0xfe1a982b
  430078:	sub    eax,0xd5fffe13
  43007d:	cmp    bh,BYTE PTR [esi+edi*8-0x6b0ced32]
  430084:	adc    eax,0xd623364a
  430089:	cmp    DWORD PTR [ebp+edi*8+0x41645ffa],esi
  430090:	(bad)  
  430091:	fs aam 0x73
  430094:	fld    TBYTE PTR [edx+ebp*8+0xa]
  430098:	dec    eax
  430099:	mov    al,ds:0x62b1c764
  43009e:	pop    ebx
  43009f:	cmp    bh,dl
  4300a1:	(bad)  
  4300a2:	inc    cl
  4300a4:	adc    esp,DWORD PTR [ebp-0x6]
  4300a7:	call   0x416765
  4300ac:	mov    ebx,0x2385ff21
  4300b1:	fs jle 0x4300ac
  4300b4:	fisttp WORD PTR [ecx]
  4300b6:	bnd jle 0x4300b9
  4300b9:	add    BYTE PTR [ecx-0x31fc16f6],bl
  4300bf:	xchg   edi,eax
  4300c0:	aaa    
  4300c1:	sub    DWORD PTR [ebx],edx
  4300c3:	outs   dx,BYTE PTR ds:[esi]
  4300c4:	gs ret 
  4300c6:	mov    al,BYTE PTR [eax]
  4300c8:	ins    BYTE PTR es:[edi],dx
  4300c9:	lods   eax,DWORD PTR ds:[esi]
  4300ca:	adc    BYTE PTR [ecx-0x18],0x83
  4300ce:	jge    0x4300d3
  4300d0:	loop   0x430052
  4300d2:	xor    DWORD PTR [edi],eax
  4300d4:	jmp    0xe70b97dc
  4300d9:	cld    
  4300da:	ins    DWORD PTR es:[edi],dx
  4300db:	xchg   esi,eax
  4300dc:	jecxz  0x4300e1
  4300de:	aad    0x4f
  4300e0:	stos   BYTE PTR es:[edi],al
  4300e1:	add    bl,BYTE PTR [ebx-0x40]
  4300e4:	in     eax,0x83
  4300e6:	dec    ebp
  4300e7:	cli    
  4300e8:	icebp  
  4300e9:	jle    0x430154
  4300eb:	or     ch,cl
  4300ed:	add    ecx,esi
  4300ef:	xchg   edi,eax
  4300f0:	pop    ss
  4300f1:	sub    DWORD PTR [ebx+0x2ac365a1],esi
  4300f7:	add    BYTE PTR [esi+edi*2+0x22],ch
  4300fb:	push   ecx
  4300fc:	call   0xbe441e84
  430101:	ss or  al,0xc8
  430104:	in     eax,0x79
  430106:	pushf  
  430107:	or     al,0x69
  430109:	imul   ecx,esp,0xffffffd8
  43010c:	xor    dh,ch
  43010e:	inc    esp
  43010f:	cmp    ebp,esi
  430111:	sub    DWORD PTR [esi],0x6004288d
  430117:	in     al,0x68
  430119:	imul   edx,ecx,0x0
  43011c:	repnz add BYTE PTR fs:[eax],al
  430120:	ror    DWORD PTR [ecx],1
  430122:	jmp    0xdf4f1564
  430127:	pop    edx
  430128:	cmp    eax,0xbf03e907
  43012d:	(bad)  
  43012e:	in     eax,0x79
  430130:	or     al,0xd
  430132:	add    BYTE PTR [ecx+0x3e],ch
  430135:	cli    
  430136:	jb     0x430157
  430138:	mov    al,ds:0x5723d09a
  43013d:	inc    esp
  43013e:	jle    0x4300e9
  430140:	(bad)  
  430141:	(bad)  
  430142:	ds imul edi,esi,0x4f640b00
  430149:	add    eax,0xcac0e900
  43014e:	std    
  43014f:	icebp  
  430150:	pop    ds
  430151:	retf   0xe904
  430154:	(bad)  
  430155:	push   ebx
  430156:	inc    ecx
  430157:	jmp    0xbee:0x68fec2ec
  43015e:	jae    0x430127
  430160:	popa   
  430161:	call   0xa97e:0x3054d3d0
  430168:	(bad)  
  430169:	(bad)  
  43016a:	push   ss
  43016b:	imul   ebp,DWORD PTR [esi-0x89bf4f6],0xf0e90006
  430175:	retf   0xdcfd
  430178:	(bad)  
  430179:	icebp  
  43017a:	add    al,0xe9
  43017c:	(bad)  
  43017d:	mov    esi,esi
  43017f:	or     DWORD PTR [eax],esp
  430181:	mov    WORD PTR [edi],cs
  430183:	in     al,dx
  430184:	add    BYTE PTR [eax],al
  430186:	(bad)  
  430187:	or     edx,eax
  430189:	daa    
  43018a:	xlat   BYTE PTR ds:[ebx]
  43018b:	or     ecx,ebp
  43018d:	out    dx,al
  43018e:	add    edx,DWORD PTR [eax-0x6]
  430191:	imul   ebp,DWORD PTR [ebp+0x16],0xcab32275
  430198:	add    BYTE PTR [ebx],al
  43019a:	mov    esi,0xe80523b5
  43019f:	mov    esi,ebx
  4301a1:	in     eax,0xd6
  4301a3:	or     DWORD PTR [edi-0x41e72ed2],eax
  4301a9:	adc    eax,0x5386ed
  4301ae:	nop
  4301af:	pop    es
  4301b0:	or     DWORD PTR [eax+edx*4-0x5],0x22
  4301b5:	retf   0xd0cd
  4301b8:	enter  0x4cff,0xd0
  4301bc:	mov    edx,0x40d1a674
  4301c1:	pop    ss
  4301c2:	ror    bh,1
  4301c4:	push   es
  4301c5:	push   es
  4301c6:	hlt    
  4301c7:	mov    WORD PTR ds:0x23fe328a,cs
  4301cd:	jg     0x4301d3
  4301cf:	(bad)  
  4301d0:	push   ds
  4301d1:	packssdw mm2,mm0
  4301d4:	push   esp
  4301d5:	clc    
  4301d6:	stos   DWORD PTR es:[edi],eax
  4301d7:	in     eax,0x79
  4301d9:	rol    BYTE PTR fs:[ecx],1
  4301dc:	add    cl,ch
  4301de:	add    ecx,DWORD PTR [edi-0x6]
  4301e1:	(bad)  
  4301e2:	in     al,dx
  4301e3:	loope  0x4301f0
  4301e5:	jne    0x430229
  4301e7:	or     eax,0x141
  4301ec:	mov    DWORD PTR [edx+0x50d780a8],esi
  4301f2:	add    eax,0xfa4fed85
  4301f7:	inc    DWORD PTR [edx]
  4301f9:	(bad)  
  4301fa:	jmp    DWORD PTR [edi]
  4301fc:	xlat   BYTE PTR ds:[ebx]
  4301fd:	test   DWORD PTR [edx-0x5],edi
  430200:	int3   
  430201:	cli    
  430202:	adc    DWORD PTR [eax+esi*1+0x2780000b],0xfffffffd
  43020a:	push   es
  43020b:	test   BYTE PTR [edi+0x1],dh
  43020e:	add    BYTE PTR [eax],al
  430210:	aad    0x91
  430212:	push   ds
  430213:	adc    al,0xc1
  430215:	std    
  430216:	add    BYTE PTR [eax+eiz*8+0x55],0x87
  43021b:	inc    esp
  43021c:	rcl    BYTE PTR [ecx-0x40],1
  43021f:	inc    esi
  430220:	in     eax,dx
  430221:	pop    ds
  430222:	mov    esi,0x800aef46
  430227:	sti    
  430228:	aad    0x65
  43022a:	xlat   BYTE PTR ds:[ebx]
  43022b:	dec    esp
  43022c:	xor    ebp,DWORD PTR [eax+0x60f000c5]
  430232:	sbb    edx,DWORD PTR [ecx+esi*8+0x34]
  430236:	or     eax,0xfe5d3584
  43023b:	call   FWORD PTR [esi+0x27]
  43023e:	adc    BYTE PTR [edi],dh
  430240:	xchg   edi,eax
  430241:	sub    al,0x2a
  430243:	xchg   DWORD PTR [ecx],eax
  430245:	add    eax,0xfd2186f8
  43024a:	repz es lahf 
  43024d:	xchg   ecx,eax
  43024e:	mov    ecx,ecx
  430250:	add    BYTE PTR [eax],al
  430252:	xor    al,0x88
  430255:	mov    edi,0x418c5b01
  43025a:	retf   0x86fc
  43025d:	or     edx,edx
  43025f:	call   0x9e921529
  430264:	cmc    
  430265:	and    ebx,edx
  430267:	fadd   st,st(7)
  430269:	and    esp,edx
  43026b:	addr16 xchg ecx,eax
  43026e:	inc    edx
  43026f:	call   FWORD PTR [esi+0x7e]
  430272:	mov    ecx,0x2dfff23c
  430277:	inc    ebx
  430278:	add    al,BYTE PTR [eax]
  43027a:	aad    0xe0
  43027c:	pop    edx
  43027d:	add    eax,0x414866a0
  430282:	aam    0xf8
  430284:	push   0xffffffa9
  430286:	retf   0xd076
  430289:	std    
  43028a:	pop    esp
  43028b:	mov    ds:0x4956200a,eax
  430290:	or     esi,DWORD PTR [esp+edx*4+0x19]
  430294:	fsub   DWORD PTR [eax]
  430296:	mov    WORD PTR [ebx+esi*8],ss
  430299:	dec    eax
  43029a:	sbb    ebx,DWORD PTR [esi]
  43029c:	add    al,BYTE PTR [eax]
  43029e:	(bad)  
  4302a0:	pop    esp
  4302a1:	(bad)  
  4302a2:	loop   0x4302ac
  4302a4:	jmp    0x900ccf2c
  4302a9:	push   ebp
  4302aa:	ror    DWORD PTR [ebp-0x18],cl
  4302ad:	pop    ds
  4302ae:	sub    bh,ch
  4302b0:	jae    0x4302f5
  4302b2:	mov    esp,0x10cc42
  4302b7:	add    BYTE PTR [edx-0x5d3993e7],dh
  4302bd:	push   cs
  4302be:	loopne 0x4302d2
  4302c0:	push   esi
  4302c1:	or     esp,esp
  4302c3:	add    edx,ebp
  4302c5:	cld    
  4302c6:	mov    ds:0x18621b46,al
  4302cb:	jge    0x43032a
  4302cd:	(bad)  
  4302ce:	loopne 0x43025c
  4302d0:	and    al,0xfe
  4302d2:	aas    
  4302d3:	dec    ebp
  4302d4:	or     DWORD PTR [ebp-0x18],0x1f
  4302d8:	repnz (bad) 
  4302da:	out    dx,eax
  4302db:	dec    ecx
  4302dc:	adc    al,0x8
  4302de:	jecxz  0x43034c
  4302e0:	sub    DWORD PTR [ecx],ecx
  4302e2:	jmp    0xf22ba3ea
  4302e7:	js     0x430303
  4302e9:	dec    esp
  4302ea:	xor    BYTE PTR [edi],ah
  4302ec:	fiadd  WORD PTR [ecx-0x61c3fa56]
  4302f2:	in     eax,0x3
  4302f4:	aad    0x43
  4302f6:	stos   BYTE PTR es:[edi],al
  4302f7:	add    al,0xe8
  4302f9:	bound  edi,QWORD PTR [edi-0x1eb2d09e]
  4302ff:	cdq    
  430300:	pushf  
  430301:	pop    es
  430302:	pop    edi
  430303:	inc    esi
  430304:	into   
  430305:	sub    DWORD PTR [esi+0x5b],esp
  430308:	leave  
  430309:	cld    
  43030a:	imul   eax,DWORD PTR [edx+edx*1-0x632817b3],0x59119f20
  430315:	and    ch,0x3
  430318:	aad    0x88
  43031a:	iret   
  43031b:	or     eax,DWORD PTR [eax]
  43031d:	add    dh,bl
  43031f:	test   edi,edi
  430321:	xor    eax,0x200009d0
  430326:	std    
  430327:	add    DWORD PTR [ecx-0xa],ecx
  43032a:	push   edx
  43032b:	(bad)  
  43032c:	(bad)  
  43032d:	call   0x69b56808
  430332:	sub    ch,ch
  430334:	or     ah,BYTE PTR [ebp-0x4d]
  430337:	dec    ebx
  430338:	cli    
  430339:	jmp    0xbe130e89
  43033e:	fild   WORD PTR [eax]
  430340:	sub    DWORD PTR [edi-0x23],0x9
  430344:	add    BYTE PTR [ebx],al
  430346:	(bad)  
  430348:	add    eax,0xfb007f66
  43034d:	xlat   BYTE PTR ds:[ebx]
  43034e:	fisub  WORD PTR [ecx-0x64]
  430351:	adc    dl,cl
  430353:	or     DWORD PTR [ecx-0x45ff3159],ecx
  430359:	sub    dl,BYTE PTR [eax+0x64]
  43035c:	das    
  43035d:	push   eax
  43035e:	sub    ecx,DWORD PTR [esi-0x6]
  430361:	jmp    0x6341ce5a
  430366:	xchg   DWORD PTR [ebx+0x7a],ecx
  430369:	and    ah,cl
  43036b:	add    BYTE PTR [ebx-0x5b04b36],al
  430371:	out    0x6c,al
  430373:	cmp    DWORD PTR ds:0x3fcbb16b,esi
  430379:	jmp    0xff568a63
  43037e:	mov    ch,0x4f
  430380:	jg     0x430372
  430382:	add    BYTE PTR [eax],al
  430384:	fadd   QWORD PTR [eax]
  430386:	test   edx,edx
  430388:	(bad)  [ecx]
  43038a:	add    BYTE PTR [edi-0x2ff5b1f4],ch
  430390:	or     BYTE PTR [ebx-0x6],cl
  430393:	jmp    0x554c54e9
  430398:	and    eax,0x300f8cb
  43039d:	xor    al,0xd
  43039f:	cmp    DWORD PTR ds:0xfef979b8,0xfffffff8
  4303a6:	jge    0x43038b
  4303a8:	xor    ecx,ebp
  4303aa:	cmc    
  4303ab:	sub    ax,WORD PTR [edx-0x1]
  4303af:	sub    bh,BYTE PTR [eax+eiz*8+0x7bc02ef]
  4303b6:	test   BYTE PTR [esi-0x51],0x7d
  4303ba:	dec    eax
  4303bb:	add    ebp,DWORD PTR [eax+esi*4]
  4303be:	add    ecx,DWORD PTR [edi]
  4303c0:	cmp    edx,DWORD PTR ds:0xfa23fffc
  4303c6:	lods   eax,DWORD PTR ds:[esi]
  4303c7:	shl    DWORD PTR [esi-0x7b],1
  4303ca:	test   BYTE PTR [ebx-0x7af8f894],0xbf
  4303d1:	stos   DWORD PTR es:[edi],eax
  4303d2:	cmc    
  4303d3:	(bad)  
  4303d4:	cld    
  4303d5:	scas   eax,DWORD PTR es:[edi]
  4303d6:	dec    BYTE PTR [esi]
  4303d8:	stc    
  4303d9:	mov    esp,0xc16cfffc
  4303de:	inc    eax
  4303df:	add    cl,BYTE PTR [esi+0x7c02bfe0]
  4303e5:	pop    es
  4303e6:	test   BYTE PTR [esi+0x0],0x0
  4303ea:	outs   dx,DWORD PTR ds:[esi]
  4303eb:	jge    0x430435
  4303ed:	add    ebp,esp
  4303ef:	scas   eax,DWORD PTR es:[edi]
  4303f0:	add    al,0xf
  4303f2:	mov    ebx,0xe3fffba4
  4303f7:	stc    
  4303f8:	lods   eax,DWORD PTR ds:[esi]
  4303f9:	shl    DWORD PTR [esi],1
  4303fb:	test   edx,ebp
  4303fd:	sub    DWORD PTR [edi+eax*1+0x7],0xffffff85
  430402:	(bad)  
  430403:	stos   DWORD PTR es:[edi],eax
  430404:	cmc    
  430405:	(bad)  
  430406:	mov    esp,0xb90f07af
  43040b:	int3   
  43040c:	cld    
  43040d:	jmp    FWORD PTR [eax*8-0x21f2fdc0]
  430414:	pop    DWORD PTR [edx]
  430416:	aad    0x60
  430418:	(bad)  
  430419:	jg     0x430419
  43041b:	or     WORD PTR [ebp-0x5a5b71d],ax
  430422:	loop   0x4303f6
  430424:	sar    ebp,0x57
  430427:	dec    ecx
  430428:	repz rcr DWORD PTR [ebx-0x408bd59f],0x18
  430430:	fmul   DWORD PTR [edx]
  430432:	sbb    eax,0xd770875c
  430437:	pusha  
  430438:	(bad)  
  430439:	jg     0x43040e
  43043b:	push   eax
  43043c:	imul   ebp,DWORD PTR [eax-0x29],0x60
  430440:	(bad)  
  430441:	jg     0x430426
  430443:	pop    eax
  430444:	imul   esp,DWORD PTR [eax-0x29],0x60
  430448:	(bad)  
  430449:	jg     0x43041e
  43044b:	imul   ebx,DWORD PTR fs:[eax+0x0],0x0
  430450:	xlat   BYTE PTR ds:[ebx]
  430451:	pusha  
  430452:	inc    cl
  430454:	sbb    esp,DWORD PTR [edx+0x28]
  430457:	jmp    0x416381
  43045c:	dec    esi
  43045d:	jmp    0x84fe:0x60d05c6b
  430464:	xchg   ebp,eax
  430465:	xchg   esp,eax
  430466:	in     eax,dx
  430467:	test   ebx,edx
  430469:	cld    
  43046a:	dec    BYTE PTR [edx]
  43046c:	sub    esp,DWORD PTR [eax]
  43046e:	push   ebx
  43046f:	xlat   BYTE PTR ds:[ebx]
  430470:	mov    esi,0x46df7f20
  430475:	fild   WORD PTR [ebx+0x10]
  430478:	ds pop edi
  43047a:	or     eax,0xc1e895c0
  43047f:	add    BYTE PTR [esi-0x65],cl
  430482:	test   BYTE PTR [ebp+edx*1-0x28df7da5],0x60
  43048a:	(bad)  
  43048b:	cli    
  43048c:	add    eax,0x510a43e5
  430491:	or     DWORD PTR [eax+0x6e4a0f58],ecx
  430497:	(bad)
  43049a:	pop    edi
  43049b:	pand   mm4,QWORD PTR [eax+0x76]
  43049f:	pop    eax
  4304a0:	dec    DWORD PTR [ecx+0x68]
  4304a3:	pop    edx
  4304a4:	fdivr  st,st(2)
  4304a6:	arpl   WORD PTR [ebx-0x19],si
  4304a9:	dec    ecx
  4304aa:	mov    cl,0x55
  4304ac:	xchg   esp,eax
  4304ad:	repnz push 0xf205848c
  4304b3:	mov    BYTE PTR [eax],al
  4304b5:	add    BYTE PTR [esi],al
  4304b7:	or     eax,0x285303e9
  4304bc:	pop    edi
  4304bd:	inc    edx
  4304be:	xor    BYTE PTR [edx],0xe6
  4304c1:	stos   DWORD PTR es:[edi],eax
  4304c2:	fidivr DWORD PTR [esi+0x18d5abdc]
  4304c8:	fs cmp eax,0x8ae909d5
  4304ce:	or     al,0x12
  4304d0:	pop    esi
  4304d1:	(bad)
  4304d4:	aaa    
  4304d5:	or     ah,BYTE PTR [ebp-0x63750a41]
  4304db:	xor    al,BYTE PTR [ebp+0x7]
  4304de:	aad    0x9
  4304e0:	fs inc ebx
  4304e2:	push   es
  4304e3:	mov    ds:0x18736268,eax
  4304e8:	jae    0x43052c
  4304ea:	jae    0x43047b
  4304ec:	imul   eax,DWORD PTR [ebx-0x22],0x18
  4304f0:	stos   BYTE PTR es:[edi],al
  4304f1:	pop    es
  4304f2:	push   eax
  4304f3:	push   ebx
  4304f4:	pushf  
  4304f5:	or     al,0x17
  4304f7:	shl    bh,1
  4304f9:	push   ss
  4304fa:	cmp    al,0x7a
  4304fc:	out    0x3,eax
  4304fe:	aad    0x89
  430500:	add    eax,0x6e1dc102
  430505:	dec    ebp
  430506:	cmp    ch,BYTE PTR [ebp-0x712afc1c]
  43050c:	jmp    FWORD PTR [eax]
  43050e:	or     dl,BYTE PTR [edx]
  430510:	ret    0xd1a7
  430513:	add    ecx,ebp
  430515:	jle    0x4304ed
  430517:	or     DWORD PTR [eax],eax
  430519:	jb     0x43051b
  43051b:	add    BYTE PTR [ebx-0x29125cd0],bl
  430521:	or     DWORD PTR [ebp+0x518dc8a9],eax
  430527:	(bad)  
  430528:	nop
  430529:	inc    ebx
  43052a:	cs test eax,0x5c0a605d
  430530:	cdq    
  430531:	sar    BYTE PTR [esi-0x37],1
  430534:	retf   0xbfc8
  430537:	in     eax,dx
  430538:	aas    
  430539:	retf   
  43053a:	cli    
  43053b:	sahf   
  43053c:	sub    BYTE PTR [edx],al
  43053e:	push   esp
  43053f:	int    0xbe
  430541:	mov    ebp,0xec8d6207
  430546:	pshufw mm3,QWORD PTR [ebp-0x628de814],0xec
  43054e:	and    esp,DWORD PTR [ecx]
  430550:	dec    esi
  430551:	int3   
  430552:	and    ebx,ecx
  430554:	das    
  430555:	loop   0x430557
  430557:	jmp    0x2af51a32
  43055c:	pop    edi
  43055d:	enter  0xbcbf,0x96
  430561:	dec    eax
  430562:	ss dec esi
  430564:	enter  0xca8d,0xeb
  430568:	(bad)  
  430569:	or     DWORD PTR [ebx],ecx
  43056b:	jg     0x43057e
  43056d:	mov    ds:0x92ceaf88,al
  430572:	push   ecx
  430573:	fst    QWORD PTR [eax]
  430575:	retf   
  430576:	add    dh,dl
  430578:	mov    edi,0xd6e900fd
  43057d:	mov    esi,esi
  43057f:	in     al,0x0
  430581:	add    BYTE PTR [ebx],ch
  430583:	adc    edx,eax
  430585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430586:	xlat   BYTE PTR ds:[ebx]
  430587:	cli    
  430588:	call   0x4e288d
  43058d:	add    BYTE PTR [ebx],bh
  43058f:	sahf   
  430590:	mov    ecx,0x53cdac8a
  430595:	inc    eax
  430596:	sub    al,0x28
  430598:	div    DWORD PTR [ebp+0x13]
  43059b:	mov    ecx,?
  43059d:	cmp    esp,DWORD PTR [eax-0x33047fec]
  4305a3:	push   ss
  4305a4:	test   DWORD PTR [ebx-0x39fff412],edx
  4305aa:	ret    0x300c
  4305ad:	jmp    0x4310b1
  4305b2:	ja     0x43060a
  4305b4:	add    cl,BYTE PTR [ebx-0x5bf8e63e]
  4305ba:	xchg   BYTE PTR [edi],cl
  4305bc:	shl    ecx,0xb0
  4305bf:	xchg   esp,eax
  4305c0:	dec    eax
  4305c1:	or     BYTE PTR [ebx+0x289baa5],bh
  4305c7:	sbb    bl,BYTE PTR [ecx+0x11160201]
  4305cd:	push   esi
  4305ce:	mov    eax,0xac00dfb4
  4305d3:	or     eax,DWORD PTR [eax-0x7ae98605]
  4305d9:	fdivr  DWORD PTR [ebx+ecx*1+0x0]
  4305dd:	jmp    0x430631
  4305df:	mov    esi,ecx
  4305e1:	or     bh,BYTE PTR [ebx-0x70]
  4305e4:	push   ecx
  4305e5:	test   BYTE PTR [eax],0x0
  4305e8:	or     esp,esi
  4305ea:	add    DWORD PTR [esi+0x64],0xe50c3e12
  4305f1:	jl     0x4305f1
  4305f3:	je     0x430669
  4305f5:	mov    ecx,DWORD PTR [eax]
  4305f7:	and    BYTE PTR ds:0xfbffee21,dl
  4305fd:	int3   
  4305fe:	inc    eax
  4305ff:	add    DWORD PTR [eax],esp
  430601:	mov    ah,0xaf
  430603:	add    ch,dl
  430605:	xor    dh,bh
  430607:	xchg   BYTE PTR [eax-0x6bbd89c],dl
  43060d:	pusha  
  43060e:	xchg   DWORD PTR [ecx-0x27],ecx
  430611:	xor    eax,ecx
  430613:	cmovle ebx,DWORD PTR [edi-0x152166fa]
  43061a:	fild   DWORD PTR ds:0xd8193491
  430620:	xchg   BYTE PTR [ecx+ecx*4],ch
  430623:	mov    esi,0x7b82824e
  430628:	mov    cl,0x38
  43062a:	(bad)  
  43062b:	je     0x43060b
  43062d:	mov    ebx,0xb9c523d7
  430632:	xlat   BYTE PTR ds:[ebx]
  430633:	and    edi,DWORD PTR [ebp-0x51f82755]
  430639:	cwde   
  43063a:	cli    
  43063b:	lds    ebx,FWORD PTR [esi+edi*8+0x7]
  43063f:	xchg   DWORD PTR [ecx],ebx
  430641:	dec    ebp
  430642:	out    dx,al
  430643:	mov    WORD PTR [ecx],ds
  430645:	xor    dl,BYTE PTR [ebp-0x78]
  430648:	adc    DWORD PTR [ebp-0x12],ecx
  43064b:	xchg   BYTE PTR [eax],al
  43064d:	add    BYTE PTR [esi+0x5c0bc03b],dl
  430653:	es or  al,0x75
  430656:	ss ja  0x430616
  430659:	add    al,ah
  43065b:	mov    edi,DWORD PTR [eax+0x53d8e7f]
  430661:	test   DWORD PTR [edi-0x23],esi
  430664:	push   esi
  430665:	cli    
  430666:	fwait
  430667:	jbe    0x43066c
  430669:	xor    bh,BYTE PTR [esp+edi*2+0x7ae9181a]
  430670:	mov    DWORD PTR [edx-0x3f],eax
  430673:	or     eax,DWORD PTR [edx+0x73]
  430676:	mov    cl,0xab
  430678:	scas   eax,DWORD PTR es:[edi]
  430679:	and    edi,DWORD PTR [ebp-0x1adc3855]
  43067f:	or     esi,ecx
  430681:	dec    ebp
  430682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430683:	xchg   edx,eax
  430684:	sub    bl,BYTE PTR [ebx+0x12]
  430687:	mov    WORD PTR [eax],gs
  430689:	rcl    al,1
  43068b:	xchg   ebx,eax
  43068c:	mov    ds:0xf490f6f2,al
  430691:	or     al,0x5d
  430693:	iret   
  430694:	ror    DWORD PTR [ebp-0x2532e16c],1
  43069a:	push   edx
  43069b:	int    0xc4
  43069d:	or     bl,dh
  43069f:	mov    WORD PTR [eax+0x65460f56],ds
  4306a5:	fbstp  TBYTE PTR [esi-0x359116df]
  4306ab:	mov    ebp,ecx
  4306ad:	or     eax,0x505b8cde
  4306b2:	add    BYTE PTR [eax],al
  4306b4:	out    dx,eax
  4306b5:	inc    ebp
  4306b6:	outs   dx,DWORD PTR ds:[esi]
  4306b7:	mov    cl,0xd6
  4306b9:	dec    edi
  4306ba:	sub    al,BYTE PTR ds:0x202446af
  4306c0:	in     eax,0x90
  4306c2:	sub    al,0x20
  4306c4:	in     eax,0x0
  4306c6:	and    eax,0x6c14f920
  4306cb:	mov    ch,0x45
  4306ce:	mov    DWORD PTR [esi+0x3e4ee2e],eax
  4306d4:	and    esp,esi
  4306d6:	ins    DWORD PTR es:[edi],dx
  4306d7:	ret    0x8eda
  4306da:	test   al,0xcf
  4306dc:	not    DWORD PTR [eax-0x6f0edfec]
  4306e2:	mov    ah,0x1f
  4306e4:	in     eax,0xf0
  4306e6:	cs mov ah,0x5b
  4306e9:	push   esp
  4306ea:	push   ecx
  4306eb:	xor    edx,DWORD PTR [ecx+0x4a]
  4306ee:	aam    0xd
  4306f0:	pop    ebx
  4306f1:	int3   
  4306f2:	fstp   DWORD PTR [edi]
  4306f4:	push   edi
  4306f5:	push   ss
  4306f6:	jecxz  0x430683
  4306f8:	adc    al,0x1d
  4306fa:	add    BYTE PTR [edi],bh
  4306fc:	xchg   esp,eax
  4306fd:	sbb    BYTE PTR [ebx-0x22],bh
  430700:	push   ebp
  430701:	stos   BYTE PTR es:[edi],al
  430702:	in     eax,dx
  430703:	es scas eax,DWORD PTR es:[edi]
  430705:	ret    
  430706:	jnp    0x4306cd
  430708:	xor    al,BYTE PTR [ebp+0x6e]
  43070b:	(bad)  
  43070c:	dec    ebx
  43070d:	enter  0x640b,0x96
  430711:	mov    eax,0xe97a7222
  430716:	adc    esi,DWORD PTR [edx+0x0]
  430719:	add    BYTE PTR [edx],bl
  43071b:	jmp    0xd9cbc92f
  430720:	xchg   BYTE PTR [edi],bl
  430722:	scas   eax,DWORD PTR es:[edi]
  430723:	push   esp
  430724:	test   BYTE PTR [ecx+0x27860f25],ch
  43072a:	add    al,0xe9
  43072c:	and    ch,0xd5
  43072f:	xchg   ecx,eax
  430730:	inc    ecx
  430731:	test   BYTE PTR [edx+ecx*8-0x7123b9ee],0x2b
  430739:	mov    ebx,0x357e3f7c
  43073e:	mov    ch,0xe9
  430740:	push   DWORD PTR [edi+edi*8]
  430743:	mov    WORD PTR [edx-0x13],es
  430746:	dec    ebx
  430747:	test   DWORD PTR [ebx-0x3a],esi
  43074a:	push   ecx
  43074b:	fsub   DWORD PTR [ebx]
  43074d:	leave  
  43074e:	dec    ecx
  43074f:	shl    BYTE PTR [ebx],1
  430751:	stc    
  430752:	add    DWORD PTR [eax+edx*2+0x72],ecx
  430756:	pop    ds
  430757:	inc    eax
  430758:	iret   
  430759:	sbb    DWORD PTR fs:[ecx+0x17976305],edi
  430760:	and    al,0x65
  430762:	fisttp QWORD PTR ds:0x3a85af88
  430768:	inc    ecx
  430769:	neg    BYTE PTR [ebp+0x265e850f]
  43076f:	inc    eax
  430770:	cli    
  430771:	push   0xffffff8d
  430773:	call   0x54bf078f
  430778:	sub    BYTE PTR [ebx-0x3f7ccbc5],cl
  43077e:	add    BYTE PTR [eax],al
  430780:	sbb    cl,ch
  430782:	adc    BYTE PTR [eax+ebx*8+0x45],0x81
  430787:	dec    esp
  430788:	sbb    BYTE PTR [eax],bh
  43078a:	and    edx,ecx
  43078c:	jge    0x430723
  43078e:	enter  0xfcff,0xc4
  430792:	mov    edx,0x40963674
  430797:	pop    ss
  430798:	sbb    BYTE PTR [edi+0x47a40906],cl
  43079e:	or     eax,0x75396af6
  4307a3:	vmwrite ecx,ebx
  4307a6:	out    dx,eax
  4307a7:	push   ebx
  4307a9:	xchg   esp,eax
  4307aa:	inc    ebx
  4307ab:	adc    bl,al
  4307ad:	xchg   BYTE PTR [ecx+0x6cbc1e5],al
  4307b3:	add    BYTE PTR [esi+0x4a],dh
  4307b6:	or     eax,0xc0c6024
  4307bb:	jmp    0x431036
  4307c0:	jbe    0x43080c
  4307c2:	or     eax,0xd0b3124
  4307c7:	jmp    0x430f0e
  4307cc:	inc    esi
  4307cd:	dec    ecx
  4307ce:	or     eax,0x130b4724
  4307d3:	jmp    0x430f16
  4307d8:	es dec ecx
  4307da:	or     eax,0x100afc24
  4307df:	jmp    0x430786
  4307e1:	xchg   ebp,eax
  4307e2:	inc    eax
  4307e3:	pop    ss
  4307e4:	add    BYTE PTR [eax],al
  4307e6:	cwde   
  4307e7:	mov    edi,0x57271806
  4307ec:	test   BYTE PTR [esi-0x75],al
  4307ef:	and    ebx,DWORD PTR [ecx+0x6b39d50c]
  4307f5:	bound  ebx,QWORD PTR [edi+0x6b]
  4307f8:	out    dx,eax
  4307f9:	and    ebx,DWORD PTR [ebp+0x3d]
  4307fc:	push   es
  4307fd:	mov    BYTE PTR [ebx],bl
  4307ff:	pop    esp
  430800:	gs push 0x8657fc64
  430806:	and    ecx,ecx
  430808:	dec    eax
  430809:	add    ch,dl
  43080b:	xor    BYTE PTR [ecx-0x41],bh
  43080e:	leave  
  43080f:	aas    
  430810:	mov    WORD PTR [ecx],es
  430812:	icebp  
  430813:	das    
  430814:	pop    es
  430815:	mov    dl,0x15
  430817:	sbb    al,0x37
  430819:	push   ss
  43081a:	adc    eax,0x56ee5eb0
  43081f:	icebp  
  430820:	in     eax,dx
  430821:	out    0xd6,al
  430823:	jg     0x430863
  430825:	aas    
  430826:	pop    ebp
  430827:	imul   edi,ebp,0xffffff86
  43082a:	xchg   edx,eax
  43082b:	or     BYTE PTR [ecx+0x26acd2bf],al
  430831:	out    dx,al
  430832:	cli    
  430833:	pop    ebx
  430834:	push   edx
  430835:	iret   
  430836:	pop    eax
  430837:	jno    0x43083b
  430839:	test   BYTE PTR [esi+edi*2-0x14b005ae],dh
  430840:	jmp    0x1b88:0x82d4f23
  430847:	pop    esp
  430848:	imul   ecx,DWORD PTR ds:0x6bc70000,0x52
  43084f:	test   DWORD PTR [ebx],ebx
  430851:	cmp    al,0x1a
  430853:	xchg   esi,eax
  430854:	leave  
  430855:	ss add bl,BYTE PTR gs:[edi-0x16]
  43085a:	jmp    0x1b87:0xf23c4923
  430861:	pop    esp
  430862:	mov    BYTE PTR [ecx-0x3e],al
  430865:	enter  0xad2,0x58
  430869:	das    
  43086a:	push   ebx
  43086b:	cli    
  43086c:	mov    cl,BYTE PTR [ecx]
  43086e:	or     eax,0x4e22ce77
  430873:	mov    BYTE PTR [edx],ch
  430875:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  430877:	add    ebp,DWORD PTR [edx+0xc03a653]
  43087d:	pop    edx
  43087e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43087f:	add    ebx,DWORD PTR [eax+0x59]
  430882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430883:	add    ebp,DWORD PTR [ecx]
  430885:	pop    ecx
  430886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430887:	add    ecx,DWORD PTR [edi+0x2503a659]
  43088d:	pop    ecx
  43088e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43088f:	add    esp,DWORD PTR [ebx]
  430891:	pop    ecx
  430892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430893:	add    eax,DWORD PTR [ecx+0x59]
  430896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430897:	add    eax,ebp
  430899:	pop    eax
  43089a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43089b:	add    ecx,DWORD PTR [eax+ebx*2+0x58a803a6]
  4308a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4308a3:	add    esi,DWORD PTR [edi+0x58]
  4308a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4308a7:	add    esp,DWORD PTR [esi]
  4308a9:	pop    eax
  4308aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4308ab:	add    ebp,ecx
  4308ad:	push   edi
  4308ae:	es add al,0x0
  4308b1:	add    cl,al
  4308b3:	push   edi
  4308b4:	es add al,0x88
  4308b7:	push   edi
  4308b8:	es add al,0xcb
  4308bb:	push   esi
  4308bc:	es add al,0x9f
  4308bf:	pop    ebp
  4308c0:	es add al,0x44
  4308c3:	pop    ebp
  4308c4:	es add al,0x44
  4308c7:	pop    ebp
  4308c8:	es add al,0x64
  4308cb:	push   esi
  4308cc:	es add al,0x6b
  4308cf:	push   esi
  4308d0:	es add al,0x63
  4308d3:	push   esi
  4308d4:	es add al,0x5b
  4308d7:	push   esi
  4308d8:	es add al,0x53
  4308db:	push   esi
  4308dc:	es add al,0x4b
  4308df:	push   esi
  4308e0:	es add al,0x43
  4308e3:	push   esi
  4308e4:	es add al,0x3b
  4308e7:	push   esi
  4308e8:	jmp    FWORD PTR [edx]
  4308ea:	fstp   DWORD PTR [ebx]
  4308ec:	aad    0x2b
  4308ee:	sar    edx,1
  4308f0:	aam    0xab
  4308f2:	(bad)  
  4308f3:	add    ch,dl
  4308f5:	stos   DWORD PTR es:[edi],eax
  4308f6:	(bad)  
  4308f7:	(bad)  
  4308f8:	aam    0xab
  4308fa:	(bad)  
  4308fb:	lods   al,BYTE PTR ds:[esi]
  4308fc:	aam    0xab
  4308fe:	(bad)  
  4308ff:	ret    0xabd4
  430902:	(bad)  
  430903:	mov    ds:0x68d6abd4,al
  430908:	aam    0xab
  43090a:	(bad)  
  43090b:	dec    eax
  43090c:	aam    0xab
  43090e:	(bad)  
  43090f:	sub    al,0xd4
  430911:	stos   DWORD PTR es:[edi],eax
  430912:	(bad)  
  430913:	scas   al,BYTE PTR es:[edi]
  430914:	leave  
  430915:	stos   DWORD PTR es:[edi],eax
  430916:	add    BYTE PTR [eax],al
  430918:	(bad)  
  430919:	mov    dl,0xd1
  43091b:	stos   DWORD PTR es:[edi],eax
  43091c:	(bad)  
  43091d:	sbb    ebx,eax
  43091f:	stos   DWORD PTR es:[edi],eax
  430920:	(bad)  
  430921:	xchg   cl,cl
  430923:	stos   DWORD PTR es:[edi],eax
  430924:	(bad)  
  430925:	sub    ecx,ecx
  430927:	stos   DWORD PTR es:[edi],eax
  430928:	(bad)  
  430929:	pop    ds
  43092a:	(bad)  
  43092b:	stos   DWORD PTR es:[edi],eax
  43092c:	(bad)  
  43092d:	xlat   BYTE PTR ds:[ebx]
  43092e:	(bad)  
  43092f:	stos   DWORD PTR es:[edi],eax
  430930:	(bad)  
  430931:	ret    
  430932:	(bad)  
  430933:	sub    ebx,ecx
  430935:	dec    edi
  430936:	(bad)  
  430937:	sub    edx,ecx
  430939:	pop    esi
  43093a:	(bad)  
  43093b:	sub    ebx,ecx
  43093d:	cmp    cl,cl
  43093f:	sub    edx,ecx
  430941:	jno    0x430918
  430943:	sub    ebx,ecx
  430945:	aas    
  430946:	(bad)  
  430947:	sub    edx,ecx
  430949:	fcmovnu st,st(3)
  43094b:	sub    ebx,ecx
  43094d:	mov    al,ds:0xacd12bdb
  430952:	retf   0xd92b
  430955:	add    edx,edi
  430957:	sub    edx,ecx
  430959:	loopne 0x430930
  43095b:	sub    ebx,ecx
  43095d:	xchg   esp,eax
  43095e:	shr    DWORD PTR [ebx],1
  430960:	shr    DWORD PTR [ecx-0x2f],1
  430963:	add    dh,ch
  430965:	add    eax,0x5eed6b1
  43096a:	(bad)  
  43096b:	(bad)  
  43096c:	mov    esi,0xbed6f705
  430971:	add    eax,0xc2ed71a
  430976:	inc    edx
  430977:	xlat   BYTE PTR ds:[ebx]
  430978:	cs or  al,0x6a
  43097b:	xlat   BYTE PTR ds:[ebx]
  43097c:	add    BYTE PTR [eax],al
  43097e:	ds or  al,0x92
  430981:	xlat   BYTE PTR ds:[ebx]
  430982:	ds or  al,0x92
  430985:	xlat   BYTE PTR ds:[ebx]
  430986:	cs or  al,0x92
  430989:	xlat   BYTE PTR ds:[ebx]
  43098a:	cs or  al,0x92
  43098d:	xlat   BYTE PTR ds:[ebx]
  43098e:	jle    0x43099c
  430990:	dec    ebx
  430991:	mov    ah,BYTE PTR ds:0x6103b9ce
  430997:	inc    eax
  430998:	sub    eax,eax
  43099a:	pop    ss
  43099b:	leave  
  43099c:	push   eax
  43099d:	setae  BYTE PTR [esi+ecx*1+0x57]
  4309a2:	mov    bh,0xff
  4309a4:	fs fs mov ch,0x76
  4309a8:	in     eax,dx
  4309a9:	jmp    FWORD PTR [edi+0x4c73ffdd]
  4309af:	xchg   DWORD PTR ds:0xf0215268,edi
  4309b5:	je     0x43099b
  4309b7:	mov    bh,BYTE PTR [edx-0xfdd6d9c]
  4309bd:	je     0x43099b
  4309bf:	xchg   ebx,eax
  4309c0:	mov    ecx,0xa80a14c0
  4309c5:	and    BYTE PTR [ecx-0x5efe5dd2],ah
  4309cb:	cmp    bh,BYTE PTR [ecx+0x79]
  4309ce:	mov    eax,0xf80d770b
  4309d3:	aas    
  4309d4:	jns    0x430a4f
  4309d6:	les    ecx,FWORD PTR [ebx]
  4309d8:	imul   eax,DWORD PTR ds:0xeb3acb9f,0xffffffd5
  4309df:	xor    cl,BYTE PTR [edi]
  4309e1:	rol    BYTE PTR [eax],0x0
  4309e4:	or     ch,bh
  4309e6:	mov    eax,0xd5b43bbe
  4309eb:	pmullw mm6,QWORD PTR [esi]
  4309ee:	add    esp,DWORD PTR [edx+0x56]
  4309f1:	cmp    dh,al
  4309f3:	inc    DWORD PTR [eax]
  4309f5:	sub    DWORD PTR [eax+eax*1-0x1b],ecx
  4309f9:	pop    esp
  4309fa:	push   es
  4309fb:	das    
  4309fc:	xchg   ebp,eax
  4309fd:	hlt    
  4309fe:	dec    esp
  4309ff:	add    ch,bl
  430a01:	pop    esp
  430a02:	push   esi
  430a03:	out    0x5e,eax
  430a05:	rcl    BYTE PTR [ebx-0x6],1
  430a08:	push   0xffffffe9
  430a0a:	idiv   DWORD PTR [edi+0x788f415]
  430a10:	pop    es
  430a11:	sbb    al,BYTE PTR gs:[edx*2-0x32d0002e]
  430a19:	mov    bl,0xd2
  430a1b:	and    edx,ecx
  430a1d:	xor    BYTE PTR [eax-0x17d257f9],cl
  430a23:	adc    BYTE PTR [edi+0x72f050b],cl
  430a29:	mov    ah,0xd2
  430a2b:	and    edx,ecx
  430a2d:	xor    DWORD PTR [ebx],eax
  430a2f:	xchg   esp,eax
  430a30:	pop    ss
  430a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a32:	stos   BYTE PTR es:[edi],al
  430a33:	or     eax,0xaea8d7
  430a38:	mov    BYTE PTR [edx-0x46291f7d],0xb3
  430a3f:	add    ebx,DWORD PTR [ebp+0x29]
  430a42:	call   0x44798fcf
  430a47:	add    eax,DWORD PTR [eax]
  430a49:	add    ch,dl
  430a4b:	mov    edx,0xa14f12c4
  430a50:	sbb    ebp,0x52
  430a53:	std    
  430a54:	or     BYTE PTR [eax+0x12d74ecf],al
  430a5a:	push   esi
  430a5b:	or     DWORD PTR ds:0xea09d128,esp
  430a61:	ja     0x430ad3
  430a63:	aas    
  430a64:	sahf   
  430a65:	test   BYTE PTR [eax+0x2233d71f],cl
  430a6b:	sub    al,0x1
  430a6d:	push   ss
  430a6e:	test   DWORD PTR [ecx+0x550fb17],edx
  430a74:	jmp    0x67705e31
  430a79:	pusha  
  430a7a:	out    0xb,al
  430a7c:	jmp    0x6e1b1484
  430a81:	push   esp
  430a82:	ret    
  430a83:	bound  ecx,QWORD PTR ds:0xbf21e157
  430a89:	and    ebp,edi
  430a8b:	mov    bl,0xe5
  430a8d:	jmp    0xac77cedf
  430a92:	mov    ds:0xa559a38c,al
  430a97:	ficomp DWORD PTR [ebx-0x27]
  430a9a:	inc    esi
  430a9b:	xor    edx,edx
  430a9d:	pop    es
  430a9e:	aas    
  430a9f:	mov    cs,WORD PTR ds:[ecx]
  430aa2:	mov    ds:0x29606b8c,al
  430aa7:	or     DWORD PTR ds:[edi+ebx*1+0xddf0b4],esi
  430aaf:	add    dh,dl
  430ab1:	xor    DWORD PTR [edx-0x5],esi
  430ab4:	adc    bh,BYTE PTR [esi]
  430ab6:	ins    BYTE PTR es:[edi],dx
  430ab7:	inc    esp
  430ab8:	xchg   BYTE PTR [edx+0x2d598095],bh
  430abe:	jecxz  0x430b12
  430ac0:	(bad)  
  430ac1:	fcomp  st(1)
  430ac3:	clc    
  430ac4:	ficomp WORD PTR [ebx]
  430ac6:	sub    DWORD PTR [eax+edx*2],eax
  430ac9:	dec    ecx
  430aca:	push   esp
  430acb:	in     eax,0xaa
  430acd:	(bad)  
  430acf:	xlat   BYTE PTR ds:[ebx]
  430ad0:	into   
  430ad1:	mov    WORD PTR [ebx+0x5f],fs
  430ad4:	sar    DWORD PTR ds:0x2586b5ff,1
  430ada:	cli    
  430adb:	push   esp
  430adc:	daa    
  430add:	inc    eax
  430ade:	gs in  al,dx
  430ae0:	jl     0x430b22
  430ae2:	je     0x430ad1
  430ae4:	push   ebp
  430ae5:	xchg   bl,ch
  430ae7:	xchg   esp,eax
  430ae8:	pop    es
  430ae9:	inc    eax
  430aea:	dec    edi
  430aeb:	cmp    al,BYTE PTR [ecx]
  430aed:	add    DWORD PTR [eax],ecx
  430aef:	jmp    0xf60290ca
  430af4:	loope  0x430b06
  430af6:	mov    dl,0x2c
  430af8:	or     esp,0x9d66967
  430afe:	add    BYTE PTR [esi-0x52],bl
  430b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b02:	std    
  430b03:	add    DWORD PTR [ecx],ebx
  430b05:	out    0x3f,al
  430b07:	cmp    edx,DWORD PTR [ebx+0x7eba4a3d]
  430b0d:	cmp    eax,0x4016e9fa
  430b12:	je     0x430b01
  430b14:	add    BYTE PTR [eax],al
  430b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b17:	adc    eax,0x3d16dbb4
  430b1c:	jge    0x430b4f
  430b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b1f:	mov    eax,0x15a7b90a
  430b24:	enter  0x16fb,0x3d
  430b28:	stos   BYTE PTR es:[edi],al
  430b29:	call   0x2c0bdf92
  430b2e:	and    bh,BYTE PTR ds:0x3a7b2930
  430b34:	push   esp
  430b35:	jb     0x430ae9
  430b37:	lea    eax,[ebp+eiz*8+0x46]
  430b3b:	inc    eax
  430b3c:	je     0x430b1b
  430b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b3f:	aad    0x7
  430b41:	ins    BYTE PTR es:[edi],dx
  430b42:	xchg   ecx,eax
  430b43:	mov    eax,0xb584365b
  430b48:	or     eax,ecx
  430b4a:	test   BYTE PTR [ebp+0x3460cefa],dl
  430b50:	test   BYTE PTR [eax],al
  430b52:	adc    esp,DWORD PTR [edx+0x39]
  430b55:	dec    DWORD PTR [ecx]
  430b57:	ss cmc 
  430b59:	aaa    
  430b5a:	xor    DWORD PTR [esi+edi*2],0x10
  430b5e:	in     al,dx
  430b5f:	add    eax,0xe7d8c085
  430b64:	dec    ebp
  430b65:	dec    ecx
  430b67:	inc    ecx
  430b68:	xor    DWORD PTR [ebp-0x50],0xd40843bb
  430b6f:	aad    0x6d
  430b71:	inc    eax
  430b72:	lods   al,BYTE PTR ds:[esi]
  430b73:	js     0x430b57
  430b75:	mov    ds:0x83f5cc57,al
  430b7a:	add    BYTE PTR [eax],al
  430b7c:	cmp    BYTE PTR [ecx],cl
  430b7e:	test   eax,eax
  430b80:	jb     0x430bb9
  430b82:	cmc    
  430b83:	jne    0x430b09
  430b85:	and    dl,0x9a
  430b88:	mov    edx,0x89fff5d7
  430b8d:	inc    eax
  430b8e:	loop   0x430c0d
  430b90:	pop    esp
  430b91:	(bad)  
  430b93:	pop    esi
  430b94:	cmp    esp,eax
  430b96:	jo     0x430ba8
  430b98:	adc    bl,bl
  430b9a:	cmc    
  430b9b:	jne    0x430bcd
  430b9d:	fst    DWORD PTR [ebx]
  430b9f:	enter  0x481e,0xfa
  430ba3:	pop    esi
  430ba4:	adc    esi,eax
  430ba6:	or     al,BYTE PTR [eax]
  430ba8:	imul   edi,DWORD PTR [ebp+0x29d083e6],0xb4498d50
  430bb2:	mov    dl,0x0
  430bb4:	sub    eax,0xd6e80008
  430bb9:	inc    eax
  430bba:	cli    
  430bbb:	push   DWORD PTR [edi-0x31]
  430bbe:	dec    edx
  430bbf:	jmp    FWORD PTR [ecx]
  430bc1:	xor    BYTE PTR [edi],cl
  430bc3:	inc    eax
  430bc4:	in     al,dx
  430bc5:	mov    esi,0xc879fc43
  430bca:	add    eax,0xfe77d584
  430bcf:	call   ebp
  430bd1:	(bad)  
  430bd2:	mov    eax,0x86c2588c
  430bd7:	add    ah,dl
  430bd9:	xor    dh,bh
  430bdb:	out    0x74,eax
  430bdd:	sub    bh,dh
  430bdf:	inc    DWORD PTR [eax]
  430be1:	add    BYTE PTR [esi+0x36],cl
  430be4:	xchg   esi,eax
  430be5:	or     eax,0xc27b3115
  430bea:	add    eax,0xaafbd19c
  430bef:	jnp    0x430c6c
  430bf1:	xlat   BYTE PTR ds:[ebx]
  430bf2:	push   eax
  430bf3:	push   cs
  430bf4:	xor    BYTE PTR [edi-0x1ce29],dh
  430bfa:	jge    0x430ba1
  430bfc:	cmc    
  430bfd:	dec    DWORD PTR [edx-0x7db0b858]
  430c03:	ss dec edx
  430c05:	cli    
  430c06:	mov    ds:0x60efc1ba,eax
  430c0b:	pop    esi
  430c0c:	ss mov bh,0xd6
  430c0f:	xor    esi,edi
  430c11:	jmp    FWORD PTR [ebp+0x7d]
  430c14:	cmc    
  430c15:	call   FWORD PTR [edx-0x48]
  430c18:	inc    edi
  430c19:	dec    edi
  430c1a:	push   edx
  430c1b:	jbe    0x430c67
  430c1d:	cli    
  430c1e:	and    eax,DWORD PTR [eax+0x58]
  430c21:	xchg   BYTE PTR ds:0xb9733038,bh
  430c27:	sub    ecx,edx
  430c29:	out    dx,eax
  430c2a:	test   eax,0xa1fa0b93
  430c2f:	lahf   
  430c30:	(bad)  
  430c31:	add    ebx,DWORD PTR [ecx+0x71]
  430c34:	(bad)  
  430c35:	out    0x4b,eax
  430c37:	lock push eax
  430c39:	cli    
  430c3a:	adc    dl,BYTE PTR [esi+0x36]
  430c3d:	adc    BYTE PTR [ebp-0xebb8ad0],dl
  430c43:	scas   eax,DWORD PTR es:[edi]
  430c44:	inc    esi
  430c45:	cli    
  430c46:	add    BYTE PTR [eax],al
  430c48:	or     DWORD PTR [ecx],0xd694ef4
  430c4e:	fcmovu st,st(1)
  430c50:	rcr    cl,cl
  430c52:	cmp    DWORD PTR [ecx+edi*8+0x3b],ebx
  430c56:	leave  
  430c57:	dec    edi
  430c58:	dec    ecx
  430c59:	(bad)
  430c5c:	popa   
  430c5d:	les    esi,FWORD PTR [esp+esi*4-0x49e4f6d0]
  430c64:	mov    edi,0x46446356
  430c69:	(bad)  
  430c6a:	aad    0x2a
  430c6c:	in     eax,dx
  430c6d:	mov    ah,0xa0
  430c6f:	(bad)  
  430c70:	dec    DWORD PTR [esi+0xd51582b]
  430c76:	jecxz  0x430cf2
  430c78:	adc    eax,0x6446c12
  430c7d:	add    eax,0xb4d64c66
  430c82:	fdivr  QWORD PTR [edx-0x2b]
  430c85:	(bad)  
  430c86:	and    esp,DWORD PTR [eax+0x6]
  430c89:	or     eax,0x3aded962
  430c8e:	sar    ebx,cl
  430c90:	sbb    dl,bl
  430c92:	inc    eax
  430c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c94:	pop    esp
  430c95:	cmp    cl,BYTE PTR [ecx-0x3d]
  430c98:	fild   DWORD PTR [ebx-0xc]
  430c9b:	or     dh,BYTE PTR [eax+0x4f34b641]
  430ca1:	mov    ah,0x3c
  430ca3:	dec    edi
  430ca4:	test   eax,0x3ed92939
  430ca9:	cmp    bh,bl
  430cab:	pop    DWORD PTR [eax]
  430cad:	add    al,ah
  430caf:	leave  
  430cb0:	call   0x201e9063
  430cb5:	inc    edx
  430cb6:	fimul  DWORD PTR [ecx]
  430cb8:	cmp    bh,dl
  430cba:	dec    ebp
  430cbb:	repnz loop 0x430c8a
  430cbe:	mul    al
  430cc0:	sub    al,BYTE PTR [edi+0x3fff7571]
  430cc6:	retf   0x3aec
  430cc9:	jmp    0xf8ee:0xd79000fa
  430cd0:	(bad)  
  430cd1:	retf   
  430cd2:	out    dx,al
  430cd3:	and    BYTE PTR [eax+0x783801df],dl
  430cd9:	in     eax,0x8
  430cdb:	sub    DWORD PTR [ebx+0x77],esi
  430cde:	pop    eax
  430cdf:	fdiv   QWORD PTR [ebx-0x26]
  430ce2:	ins    BYTE PTR es:[edi],dx
  430ce3:	lods   eax,DWORD PTR ds:[esi]
  430ce4:	mov    bl,0xb3
  430ce6:	ret    0x901a
  430ce9:	mov    ds:0xa3b393c9,eax
  430cee:	pop    ecx
  430cef:	fld    TBYTE PTR [edx-0x5]
  430cf2:	outs   dx,BYTE PTR ds:[esi]
  430cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cf4:	mov    bl,0x93
  430cf6:	call   0x27eead99
  430cfb:	out    dx,al
  430cfc:	mov    bl,0x0
  430cfe:	mov    al,ds:0xc07dc09f
  430d03:	test   DWORD PTR [esi-0xd],ecx
  430d06:	xchg   ebx,eax
  430d07:	lahf   
  430d08:	loop   0x430d00
  430d0a:	int    0xca
  430d0c:	jg     0x430d6f
  430d0e:	pop    ecx
  430d0f:	scas   al,BYTE PTR es:[edi]
  430d10:	jecxz  0x430c9e
  430d12:	add    BYTE PTR [eax],al
  430d14:	fxch   st(2)
  430d16:	das    
  430d17:	xchg   ebx,eax
  430d18:	pop    ecx
  430d19:	xchg   cl,bl
  430d1b:	out    0x88,al
  430d1d:	lahf   
  430d1e:	das    
  430d1f:	add    edx,ebx
  430d21:	sub    DWORD PTR [edx+0x43],ebx
  430d24:	push   ecx
  430d25:	scas   al,BYTE PTR es:[edi]
  430d26:	fnstenv [edx]
  430d28:	inc    edx
  430d29:	sub    cl,BYTE PTR [edi-0x4c51b2d9]
  430d2f:	push   ebx
  430d30:	call   0xe23e810f
  430d35:	mov    al,ds:0x6ecdec46
  430d3a:	mov    dh,0x8f
  430d3c:	data16 scas al,BYTE PTR es:[edi]
  430d3e:	mov    bl,0x0
  430d40:	(bad)  
  430d41:	cmp    BYTE PTR [edi],bl
  430d43:	nop
  430d44:	sar    ch,cl
  430d46:	loop   0x430d38
  430d48:	jmp    0x638f:0x915c3391
  430d4f:	mov    ah,0x7a
  430d51:	dec    esp
  430d52:	xor    BYTE PTR fs:[esp+ecx*4+0x4859b463],bh
  430d5a:	push   0x2c
  430d5c:	adc    al,0xcd
  430d5e:	arpl   WORD PTR [ebx+0x4a],cx
  430d61:	jno    0x430dd2
  430d63:	hlt    
  430d64:	xchg   ebp,eax
  430d65:	dec    esp
  430d66:	loop   0x430d60
  430d68:	push   0x6c
  430d6a:	cmp    DWORD PTR cs:[edx],eax
  430d6d:	xchg   ecx,eax
  430d6e:	and    esi,DWORD PTR [eax+0x392e8c76]
  430d74:	retf   0x5790
  430d77:	mov    dh,0x0
  430d79:	add    BYTE PTR [esi-0x74],al
  430d7c:	xor    edi,DWORD PTR [ecx]
  430d7e:	xor    dh,BYTE PTR [ecx+0xb]
  430d81:	pop    esp
  430d82:	mov    edi,0x8d4b930b
  430d87:	dec    esi
  430d88:	xor    ebx,DWORD PTR [edi+eax*4+0xd]
  430d8c:	xchg   ebx,eax
  430d8d:	dec    ebx
  430d8e:	adc    eax,0xaa90e10a
  430d93:	mov    ah,BYTE PTR [ebx-0x4c]
  430d96:	inc    esi
  430d97:	xor    ebx,DWORD PTR [esp+eiz*8+0x4a4ff05e]
  430d9e:	jno    0x430daf
  430da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430da1:	sar    BYTE PTR [ecx+0x2902109],0xfd
  430da8:	xchg   esp,eax
  430da9:	shr    dl,0xbc
  430dac:	mov    ecx,DWORD PTR [edx-0x4f]
  430daf:	inc    esi
  430db0:	xchg   esp,eax
  430db1:	xor    BYTE PTR [esi],dh
  430db3:	fild   WORD PTR [esi+0x39]
  430db6:	mov    dh,BYTE PTR [eax+0x67]
  430db9:	pop    esp
  430dba:	aad    0xf0
  430dbc:	adc    bl,BYTE PTR [eax-0x18326e72]
  430dc2:	(bad)
  430dc5:	bound  eax,QWORD PTR [ecx+0xc]
  430dc8:	das    
  430dc9:	jmp    0x15e06255
  430dce:	(bad)  
  430dcf:	sub    eax,0x6445e0fa
  430dd4:	and    DWORD PTR [ecx+eiz*1-0x64],0x4b819ef8
  430ddc:	dec    esp
  430ddd:	xchg   esi,eax
  430dde:	add    BYTE PTR [eax],al
  430de0:	mov    ?,WORD PTR [ebx+esi*4-0x5b4769d]
  430de7:	and    BYTE PTR [ebp-0x71],ah
  430dea:	sub    eax,0x3e0f010c
  430def:	fs push cs
  430df1:	js     0x430e60
  430df3:	outs   dx,BYTE PTR ds:[esi]
  430df4:	test   eax,0x6da1006b
  430df9:	and    BYTE PTR [ebx],al
  430dfb:	inc    ecx
  430dfc:	pop    ecx
  430dfd:	cdq    
  430dfe:	jge    0x430e64
  430e00:	mov    cl,0x2e
  430e02:	push   ecx
  430e03:	inc    eax
  430e04:	cmp    eax,0x33787226
  430e09:	retf   
  430e0a:	jge    0x430ddd
  430e0c:	dec    eax
  430e0d:	cmp    BYTE PTR [ecx+0x40],al
  430e10:	imul   ecx,ebx,0x24a466d5
  430e16:	int3   
  430e17:	jmp    0x3fa2:0x392b8de2
  430e1e:	sub    bh,BYTE PTR [esi-0x7fa55400]
  430e24:	inc    ecx
  430e25:	fcos   
  430e27:	call   ebp
  430e29:	xchg   ebx,eax
  430e2a:	mov    ah,0x52
  430e2c:	lods   eax,DWORD PTR ds:[esi]
  430e2d:	push   ss
  430e2e:	(bad)  
  430e2f:	call   ebp
  430e31:	out    0xd1,eax
  430e33:	pop    es
  430e34:	mov    ebp,0xeb377109
  430e39:	or     DWORD PTR [edx],ebx
  430e3b:	not    dl
  430e3d:	pop    ds
  430e3e:	test   eax,0xdc4d9a03
  430e43:	jle    0x430e45
  430e45:	add    BYTE PTR [ecx-0x12],cl
  430e48:	add    cl,BYTE PTR [edi+ecx*1+0x22]
  430e4c:	and    BYTE PTR [ecx-0xc81c904],al
  430e52:	dec    ecx
  430e53:	lea    eax,[ebp+ecx*2-0x11]
  430e57:	ss lahf 
  430e59:	int3   
  430e5a:	push   es
  430e5b:	retf   
  430e5c:	call   0xd34b65bc
  430e61:	dec    ebx
  430e62:	push   ecx
  430e63:	dec    edx
  430e64:	push   esp
  430e65:	cmc    
  430e66:	pop    ebx
  430e67:	dec    edi
  430e68:	sbb    BYTE PTR [eax+eax*4-0x73],bl
  430e6c:	mov    edx,0x1149f04b
  430e71:	stos   BYTE PTR es:[edi],al
  430e72:	and    eax,DWORD PTR [ecx-0x5a]
  430e75:	add    ch,dl
  430e77:	test   BYTE PTR [ebx-0x18],ah
  430e7a:	scas   al,BYTE PTR es:[edi]
  430e7b:	ss cdq 
  430e7d:	pop    ss
  430e7e:	xchg   ebp,eax
  430e7f:	test   BYTE PTR [ebx+0x20],ah
  430e82:	lahf   
  430e83:	mov    DWORD PTR ss:[ecx+ecx*2-0x73],ebx
  430e88:	or     BYTE PTR [ebx-0x71],0xfc
  430e8c:	add    al,0x36
  430e8e:	ret    
  430e8f:	or     DWORD PTR [esi+0x43],ebx
  430e92:	or     dh,BYTE PTR [edi]
  430e94:	shl    ebx,cl
  430e96:	loopne 0x430e61
  430e98:	call   0xf700391d
  430e9d:	adc    eax,0x206b848a
  430ea2:	pop    edi
  430ea3:	ss dec ecx
  430ea5:	mov    ah,0x3a
  430ea7:	mov    ah,0x6c
  430ea9:	dec    edx
  430eaa:	add    BYTE PTR [eax],al
  430eac:	dec    edi
  430ead:	and    DWORD PTR ds:0xff7a155f,0xffffffe7
  430eb4:	fwait
  430eb5:	and    ch,BYTE PTR [edx+0x19fbb1e3]
  430ebb:	mov    al,ds:0x7101de8a
  430ec0:	xor    al,0x7a
  430ec2:	test   al,0x3e
  430ec4:	ret    
  430ec5:	repnz (bad) 
  430ec7:	pop    edx
  430ec8:	pop    edi
  430ec9:	cmc    
  430eca:	test   eax,0x81f5284c
  430ecf:	inc    esp
  430ed0:	and    al,0xd2
  430ed2:	pop    ebx
  430ed3:	mov    ds:0xa879cf6b,eax
  430ed8:	out    0x66,al
  430eda:	(bad)  
  430edb:	sub    BYTE PTR [ebp-0x53],ch
  430ede:	cmc    
  430edf:	push   0x4cc4fcf5
  430ee4:	repz jns 0x430edc
  430ee7:	aad    0x42
  430ee9:	stc    
  430eea:	xor    BYTE PTR [edx+ebp*4+0x4a],0xfb
  430eef:	jmp    0x430ea1
  430ef1:	jno    0x430ed3
  430ef3:	mov    esi,0x6084f8b3
  430ef8:	pushf  
  430ef9:	dec    eax
  430efa:	and    al,0xc9
  430efc:	push   ecx
  430efd:	xlat   BYTE PTR ds:[ebx]
  430efe:	mov    eax,0x8ab93668
  430f03:	ins    DWORD PTR es:[edi],dx
  430f04:	in     eax,dx
  430f05:	add    cl,dh
  430f07:	push   0xbc722975
  430f0c:	xchg   ecx,eax
  430f0d:	cmc    
  430f0e:	imul   BYTE PTR [eax+0x0]
  430f11:	add    BYTE PTR [ebp-0x2f],dh
  430f14:	imul   esp,DWORD PTR [edi],0xe70cbea
  430f1a:	adc    DWORD PTR [ebp-0x27],ecx
  430f1d:	sub    ch,0x6f
  430f20:	js     0x430f00
  430f22:	lock out dx,eax
  430f24:	cmp    al,0x38
  430f26:	fstp   st(3)
  430f28:	jns    0x430ef8
  430f2a:	shr    bh,0x89
  430f2d:	add    BYTE PTR [ecx+0x5a],bl
  430f30:	xor    eax,0x6ea8cbbc
  430f35:	mov    gs,WORD PTR [ecx+0x4d05ae2f]
  430f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f3c:	mov    edi,0x900626f2
  430f41:	jmp    0x29ad:0xfb76ac30
  430f48:	push   esi
  430f49:	sar    ah,cl
  430f4b:	mov    ds:0x3e3d7e41,eax
  430f50:	lahf   
  430f51:	leave  
  430f52:	ss jmp 0x430f33
  430f55:	add    eax,0xbe375cf8
  430f5a:	cdq    
  430f5b:	dec    ecx
  430f5c:	ficom  WORD PTR [edx]
  430f5e:	xor    DWORD PTR [edi+0x44],0x5
  430f62:	stc    
  430f63:	xchg   ebx,eax
  430f64:	mov    edi,0x55803ffe
  430f69:	lds    esi,FWORD PTR [eax+0x6dea8fe7]
  430f6f:	mov    ds:0xbd1ddeba,eax
  430f74:	in     eax,dx
  430f75:	test   BYTE PTR [eax],al
  430f77:	add    BYTE PTR [ebx],al
  430f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f7a:	sub    bh,BYTE PTR [edx]
  430f7c:	imul   ebx,DWORD PTR [ebp+0x41],0xead6258f
  430f83:	fisubr WORD PTR [ecx]
  430f85:	sbb    bl,BYTE PTR [edi+ecx*4+0x7f]
  430f89:	mov    al,ds:0x28b97941
  430f8e:	push   esi
  430f8f:	nop
  430f90:	push   eax
  430f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f92:	inc    ecx
  430f93:	xchg   edx,eax
  430f94:	jmp    0x430fbf
  430f96:	scas   al,BYTE PTR es:[edi]
  430f97:	cli    
  430f98:	jo     0x430f81
  430f9a:	(bad)  
  430f9b:	out    0x4d,al
  430f9d:	cmp    al,0x36
  430f9f:	cs mov esi,0xddef4154
  430fa5:	pop    esi
  430fa6:	out    dx,al
  430fa7:	cli    
  430fa8:	aad    0x20
  430faa:	popf   
  430fab:	mov    bh,0xca
  430fad:	in     eax,dx
  430fae:	mov    esi,0xe8597fab
  430fb3:	xor    bl,cl
  430fb5:	je     0x43100e
  430fb7:	jb     0x431029
  430fb9:	sbb    eax,DWORD PTR [esi]
  430fbb:	cmp    edx,edx
  430fbd:	push   es
  430fbe:	inc    edx
  430fbf:	pop    es
  430fc0:	aad    0x75
  430fc2:	jnp    0x430faf
  430fc4:	push   esp
  430fc5:	push   es
  430fc6:	rol    BYTE PTR [ecx],1
  430fc8:	aad    0x22
  430fca:	mov    bl,0x51
  430fcc:	dec    esi
  430fcd:	cs std 
  430fcf:	call   ebp
  430fd1:	xchg   ebx,eax
  430fd2:	jno    0x431048
  430fd4:	adc    DWORD PTR [edi+0x3b90c144],esi
  430fda:	(bad)  
  430fdb:	out    0x0,eax
  430fdd:	add    dh,ah
  430fdf:	sub    al,0xfe
  430fe1:	call   FWORD PTR [esi+0x64]
  430fe4:	scas   al,BYTE PTR es:[edi]
  430fe5:	cli    
  430fe6:	enter  0xef0a,0x3f
  430fea:	aad    0xf
  430fec:	dec    esi
  430fed:	mov    BYTE PTR [eax],bl
  430fef:	pop    ebp
  430ff0:	or     eax,edx
  430ff2:	fisub  DWORD PTR [edi+eiz*2+0x7121c2ff]
  430ff9:	jl     0x431064
  430ffb:	scas   al,BYTE PTR es:[edi]
  430ffc:	ret    
  430ffd:	add    BYTE PTR [ebp-0x5500063b],bh
  431003:	mov    eax,0x1ea24f3f
  431008:	push   eax
  431009:	cli    
  43100a:	ror    al,0xf4
  43100d:	aas    
  43100e:	aad    0x57
  431010:	inc    eax
  431011:	jae    0x431013
  431013:	mov    esi,0xa624f7b1
  431018:	jno    0x430fb9
  43101a:	js     0x430fd8
  43101c:	inc    edi
  43101d:	push   eax
  43101e:	pop    esp
  43101f:	push   es
  431020:	dec    esp
  431021:	cli    
  431022:	test   DWORD PTR [edx],ecx
  431024:	dec    bx
  431026:	aad    0xbc
  431028:	enter  0x5176,0x92
  43102c:	dec    ebp
  43102d:	dec    eax
  43102e:	dec    edi
  43102f:	fidivr DWORD PTR [esi-0x31cd4cfe]
  431035:	add    BYTE PTR [edi-0x35ec2cce],ah
  43103b:	leave  
  43103c:	call   0xa10082bf
  431041:	jbe    0x431043
  431043:	add    BYTE PTR [ecx+0x6a],dl
  431046:	and    ecx,DWORD PTR [eax+0x1f]
  431049:	ficomp DWORD PTR [ecx]
  43104b:	out    dx,al
  43104c:	inc    edx
  43104d:	sbb    BYTE PTR [ecx-0x5c7f5afd],ch
  431053:	dec    ebx
  431054:	pop    ecx
  431055:	lea    esp,[eax+0x4c]
  431058:	push   DWORD PTR [edx]
  43105a:	cwde   
  43105b:	jbe    0x4310ae
  43105d:	push   0xfffffff3
  43105f:	inc    edi
  431060:	out    dx,eax
  431061:	fldl2t 
  431063:	in     eax,dx
  431064:	xchg   esi,eax
  431065:	push   ss
  431066:	sub    DWORD PTR [eax+ebx*2],eax
  431069:	dec    edx
  43106a:	push   ebx
  43106b:	out    0x53,eax
  43106d:	int    0xd0
  43106f:	jns    0x4310c7
  431071:	int3   
  431072:	jo     0x4310bf
  431074:	iret   
  431075:	xor    bl,BYTE PTR [eax]
  431077:	sbb    DWORD PTR [edx+0x62916b32],0x2e
  43107e:	mov    cl,0x47
  431080:	mov    edx,0xaf49bae1
  431085:	dec    ebx
  431086:	sub    eax,DWORD PTR [edi-0x2b]
  431089:	not    BYTE PTR [edx-0x6ec1deb9]
  43108f:	icebp  
  431090:	dec    esi
  431091:	pop    ss
  431092:	sub    DWORD PTR [edx*2+0x80481b4],eax
  431099:	or     esi,DWORD PTR [edi-0x5c92bd]
  43109f:	out    0xd6,eax
  4310a1:	or     edx,eax
  4310a3:	and    al,0x12
  4310a5:	xor    eax,DWORD PTR [edi-0x1ffff24]
  4310ab:	outs   dx,DWORD PTR ds:[esi]
  4310ac:	and    esp,DWORD PTR [ebp-0x6f]
  4310af:	xor    cl,BYTE PTR [ebx-0x733d5154]
  4310b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310b6:	stos   BYTE PTR es:[edi],al
  4310b7:	ret    0xac8c
  4310ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4310bb:	ret    0x3e65
  4310be:	mov    esp,0xc99f7cd
  4310c3:	xor    al,0x54
  4310c5:	xchg   edi,eax
  4310c6:	test   eax,0x2426f7bd
  4310cb:	or     cl,BYTE PTR [edi]
  4310cd:	test   eax,0x54480d6
  4310d2:	fiadd  WORD PTR [edi+0x73]
  4310d5:	loop   0x4310b4
  4310d7:	sub    edi,edi
  4310d9:	call   0xbc80fb4
  4310de:	ror    DWORD PTR [ecx],1
  4310e0:	add    BYTE PTR [eax+0x650a3a05],dh
  4310e6:	lods   eax,DWORD PTR ds:[esi]
  4310e7:	xor    bh,dl
  4310e9:	jmp    0xea32c645
  4310ee:	jecxz  0x431077
  4310f0:	mov    dl,0xe9
  4310f2:	(bad)  
  4310f3:	or     DWORD PTR [ebp-0x793edadc],ecx
  4310f9:	sub    al,0x11
  4310fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310fc:	adc    bh,BYTE PTR [esi-0x169a8636]
  431102:	sbb    edx,DWORD PTR [esi]
  431104:	adc    dl,bl
  431106:	xchg   esi,eax
  431107:	xor    DWORD PTR [ebx-0x6f795457],eax
  43110d:	jmp    0xa191112
  431112:	xchg   DWORD PTR [eiz*1+0xadebf86],ebp
  431119:	mov    edi,edi
  43111b:	jmp    FWORD PTR [ebp+ecx*1-0x73]
  43111f:	lea    ecx,[edx+eax*8]
  431122:	cmc    
  431123:	dec    ebp
  431125:	enter  0x106a,0x54
  431129:	pop    ds
  43112a:	aaa    
  43112b:	(bad)  
  43112c:	sti    
  43112d:	mov    al,0xba
  43112f:	je     0x4310b7
  431131:	mov    dl,0x83
  431133:	mov    al,ds:0x50f5c7a9
  431138:	test   eax,0x9bfb9289
  43113d:	(bad)  
  43113e:	mov    ebx,DWORD PTR [ebp-0xa3db4]
  431144:	xchg   esp,eax
  431145:	add    dh,BYTE PTR [edi-0x2]
  431148:	sti    
  431149:	mov    al,0xba
  43114b:	je     0x4311b7
  43114d:	mov    ah,0xb9
  43114f:	push   eax
  431150:	les    edi,FWORD PTR [ebp+0x76]
  431153:	(bad)  
  431154:	jmp    0x431106
  431156:	mov    edx,0x533e74
  43115b:	push   edi
  43115c:	mov    DWORD PTR [ecx-0x39040676],ecx
  431162:	dec    edx
  431163:	mov    edi,DWORD PTR [edi-0x2bff9b84]
  431169:	sar    edi,1
  43116b:	(bad)  
  43116c:	in     al,dx
  43116d:	mov    al,0xba
  43116f:	je     0x431137
  431171:	push   ebx
  431172:	cli    
  431173:	mov    WORD PTR [eax],es
  431175:	add    BYTE PTR [ecx-0x4a],al
  431178:	idiv   edi
  43117a:	fwait
  43117b:	jne    0x4311e1
  43117d:	add    BYTE PTR [eax+ebp*8-0x768401d1],ah
  431184:	mov    edx,0x83b79274
  431189:	nop
  43118a:	gs (bad) 
  43118c:	cmc    
  43118d:	push   eax
  43118e:	daa    
  43118f:	jno    0x43117f
  431191:	(bad)  
  431192:	mov    esp,0xd545c035
  431197:	xchg   edi,eax
  431198:	(bad)  
  431199:	out    0xc0,eax
  43119b:	pushf  
  43119c:	inc    esp
  43119d:	cli    
  43119e:	sub    BYTE PTR ds:0x1ee0fa4a,0xef
  4311a5:	aas    
  4311a6:	aad    0xe0
  4311a8:	or     BYTE PTR [ebp+0x65],dh
  4311ab:	dec    edi
  4311ac:	or     BYTE PTR [eax+0x62],0xa7
  4311b0:	inc    esp
  4311b1:	cli    
  4311b2:	loopne 0x43115e
  4311b4:	inc    esp
  4311b5:	adc    al,0xe1
  4311b7:	xor    edi,DWORD PTR [esi+0x7ed907ff]
  4311bd:	jl     0x4311f0
  4311bf:	fadd   QWORD PTR [ebx]
  4311c1:	add    ch,dl
  4311c3:	pop    ds
  4311c4:	jp     0x4311b2
  4311c6:	xor    esi,edi
  4311c8:	inc    esp
  4311c9:	mov    WORD PTR [eax-0x26],ss
  4311cc:	dec    eax
  4311cd:	cli    
  4311ce:	and    dh,BYTE PTR [edx-0x28]
  4311d1:	add    BYTE PTR [edi+0x5502dc0f],ch
  4311d7:	and    bh,dh
  4311d9:	push   ecx
  4311da:	add    BYTE PTR [eax],al
  4311dc:	or     dh,BYTE PTR ds:0x22950f0e
  4311e2:	jns    0x4311a3
  4311e4:	xor    BYTE PTR [ecx-0x28],0x1
  4311e8:	mov    ah,BYTE PTR [ebp+0x1eec8f7a]
  4311ee:	inc    ebx
  4311ef:	dec    edi
  4311f0:	push   eax
  4311f1:	popf   
  4311f2:	data16 neg dl
  4311f5:	dec    esi
  4311f6:	scas   al,BYTE PTR es:[edi]
  4311f7:	push   ecx
  4311f8:	mov    ebp,0xd5fffec3
  4311fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4311fe:	ds jae 0x4311ec
  431201:	push   cs
  431202:	jae    0x431188
  431204:	gs dec edx
  431206:	inc    ebx
  431207:	cli    
  431208:	add    eax,0xe4535c0f
  43120d:	pop    esi
  43120e:	inc    ebx
  43120f:	adc    DWORD PTR [ebp-0x68ffe2f6],0xffffffc5
  431216:	cdq    
  431217:	add    bl,BYTE PTR [ebx-0x3b]
  43121a:	xchg   ecx,eax
  43121b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43121c:	sub    al,0xd3
  43121e:	lahf   
  43121f:	inc    eax
  431220:	sub    DWORD PTR [ebx+0x4a6e8294],eax
  431226:	jmp    0x43122b
  431228:	aad    0xd7
  43122a:	sbb    DWORD PTR [edi+0x21],esi
  43122d:	pop    edx
  43122e:	ins    BYTE PTR es:[edi],dx
  43122f:	inc    esp
  431230:	pop    edi
  431231:	and    dh,ah
  431233:	les    ebx,FWORD PTR [edi+ebp*1+0x6b]
  431237:	xchg   BYTE PTR [edx-0x4bbaece],dl
  43123d:	dec    ecx
  43123e:	pop    ebp
  43123f:	xor    eax,0x163a0000
  431244:	push   0xf3833f45
  431249:	and    ebx,0xffffffc9
  43124c:	call   0x2a1d29c9
  431251:	sub    eax,0x867349f3
  431256:	bound  edi,QWORD PTR [eax]
  431258:	sbb    DWORD PTR [edx+edx*8+0x7c],eax
  43125c:	arpl   WORD PTR [ebx],si
  43125e:	push   cs
  43125f:	das    
  431260:	or     DWORD PTR [ebx+0x9],ebx
  431263:	mov    al,BYTE PTR [edx]
  431265:	inc    esp
  431266:	push   ebx
  431267:	inc    edi
  431268:	cwde   
  431269:	inc    esp
  43126a:	add    al,0x2f
  43126c:	mov    ebx,0xe8cb0427
  431271:	adc    cl,0x1
  431274:	mov    bh,0xc7
  431276:	fimul  DWORD PTR [eax]
  431278:	ficomp DWORD PTR [ecx]
  43127a:	mov    ebp,0x7404291b
  43127f:	sub    DWORD PTR [edx-0x3f743d39],esi
  431285:	inc    ebx
  431286:	inc    esi
  431287:	add    DWORD PTR [edi+0x43],ecx
  43128a:	and    ch,BYTE PTR [edi]
  43128c:	(bad)  
  43128d:	(bad)  
  43128f:	cld    
  431290:	aas    
  431291:	jmp    0xa6455884
  431296:	push   ss
  431297:	jle    0x431225
  431299:	test   eax,0x81fa33d1
  43129e:	cmc    
  43129f:	mov    bh,0xf9
  4312a1:	mov    fs,WORD PTR [ebp+edi*2-0x49]
  4312a5:	jg     0x4312a7
  4312a7:	add    BYTE PTR [esi],dl
  4312a9:	xor    al,0xe7
  4312ab:	cwde   
  4312ac:	xor    dh,BYTE PTR [eax]
  4312ae:	cli    
  4312af:	add    edx,ebx
  4312b1:	jl     0x43126f
  4312b3:	mov    eax,ds:0xc1fa33a3
  4312b8:	inc    ebp
  4312b9:	jge    0x43128a
  4312bb:	pop    ebp
  4312bc:	xchg   esi,eax
  4312bd:	xor    esp,edi
  4312bf:	jb     0x431312
  4312c1:	xor    dl,bh
  4312c3:	bound  ecx,QWORD PTR [esi-0x29179842]
  4312c9:	or     DWORD PTR [eax+0xec1cc3e],eax
  4312cf:	test   eax,0x493486d6
  4312d4:	mov    ebp,0x4c73ffc9
  4312d9:	inc    esi
  4312da:	neg    BYTE PTR [esi]
  4312dc:	xchg   esi,eax
  4312dd:	mov    esi,0x36916c8c
  4312e2:	cli    
  4312e3:	push   cs
  4312e4:	sub    DWORD PTR [ebx],esi
  4312e6:	shl    DWORD PTR [esp+ecx*2+0x66],1
  4312ea:	stc    
  4312eb:	(bad)  
  4312ec:	xchg   edi,eax
  4312ed:	mov    esi,0x38696c8c
  4312f2:	cli    
  4312f3:	out    dx,al
  4312f4:	push   es
  4312f5:	xor    edx,ecx
  4312f7:	je     0x43130e
  4312f9:	pop    esi
  4312fa:	mov    bh,0xcd
  4312fc:	(bad)  
  4312fd:	or     DWORD PTR [eax],eax
  4312ff:	rol    DWORD PTR [edi+0x2f],0xfa
  431303:	jmp    0xea996d
  431308:	xchg   edx,eax
  431309:	enter  0x50f5,0x0
  43130d:	add    BYTE PTR [ecx-0x7e],al
  431310:	ret    0x63fb
  431313:	enter  0x8d4a,0x39
  431317:	mov    eax,ds:0x5973fff8
  43131c:	mov    eax,DWORD PTR [ebp-0xa13bc]
  431322:	int3   
  431323:	jl     0x4312e2
  431325:	push   eax
  431326:	adc    esi,DWORD PTR [ebp-0x2]
  431329:	jmp    FWORD PTR [edx+ebx*4-0x4d]
  43132d:	inc    eax
  43132e:	out    dx,al
  43132f:	(bad)  
  431330:	cmc    
  431331:	call   0x3f0793
  431336:	out    dx,eax
  431337:	les    ecx,FWORD PTR [esi]
  431339:	test   DWORD PTR [edx+ecx*2+0x58fa8b02],ebp
  431340:	loop   0x4312f6
  431342:	cld    
  431343:	retf   0x83f5
  431346:	shl    ebp,1
  431348:	rol    BYTE PTR [ebx+0x2c],1
  43134b:	enter  0x873,0x6
  43134f:	or     edi,esi
  431351:	adc    eax,0x4015b8
  431356:	add    DWORD PTR [ecx-0x380c0336],0x47e4e84a
  431360:	clc    
  431361:	inc    DWORD PTR [ebx-0x47]
  431364:	call   FWORD PTR [ebp-0x4b]
  431367:	ret    
  431368:	push   ebx
  431369:	mov    esp,eax
  43136b:	test   esi,esp
  43136d:	or     dh,bh
  43136f:	or     BYTE PTR [eax],al
  431371:	push   ebx
  431372:	add    BYTE PTR [eax],al
  431374:	dec    edx
  431375:	sbb    BYTE PTR [esi+0x29500475],ch
  43137b:	inc    DWORD PTR [esi-0x4b7a72ff]
  431381:	in     al,dx
  431382:	cmc    
  431383:	call   ebp
  431385:	repnz inc eax
  431387:	je     0x431356
  431389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43138a:	inc    ebp
  43138b:	out    0x3a,eax
  43138d:	dec    eax
  43138e:	cmp    bh,dl
  431390:	mov    dl,0xf5
  431392:	adc    eax,DWORD PTR [edi-0x7b76d8f8]
  431398:	popf   
  431399:	pop    ebp
  43139a:	inc    eax
  43139b:	cli    
  43139c:	lods   eax,DWORD PTR ds:[esi]
  43139d:	(bad)  
  43139e:	mov    edi,0x43a692f9
  4313a3:	jae    0x431356
  4313a5:	lahf   
  4313a6:	mov    edx,0x1416d513
  4313ab:	sti    
  4313ac:	add    BYTE PTR [edi+0x3f],cl
  4313af:	je     0x431376
  4313b1:	stos   DWORD PTR es:[edi],eax
  4313b2:	adc    bh,BYTE PTR [esi+eax*8]
  4313b5:	loop   0x4313ba
  4313b7:	test   DWORD PTR [ebp-0x1f04efca],edx
  4313bd:	xor    bh,BYTE PTR [edi]
  4313bf:	adc    al,0xd
  4313c1:	xor    DWORD PTR [esi+0x40da57ff],edi
  4313c7:	jae    0x43139b
  4313c9:	arpl   WORD PTR [ebx+0x7070b1fa],ax
  4313cf:	sub    eax,0x56e08b15
  4313d4:	sbb    al,0xe0
  4313d6:	pop    ss
  4313d7:	add    BYTE PTR [eax],al
  4313d9:	add    BYTE PTR [ebp+0x21],ah
  4313dc:	sub    esi,esp
  4313de:	xor    BYTE PTR [edi+0x32017e2f],0xd3
  4313e5:	push   ecx
  4313e6:	pop    esi
  4313e7:	dec    ebp
  4313e8:	mov    dh,0xf
  4313ea:	xchg   ebp,eax
  4313eb:	and    dh,bl
  4313ed:	(bad)  
  4313ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4313ef:	mov    ch,0xc2
  4313f1:	test   DWORD PTR [ebp-0x79fc5371],0x68fad38f
  4313fb:	sub    al,BYTE PTR [esi+0x5108da5c]
  431401:	add    edx,ebp
  431403:	or     DWORD PTR [ecx+0x40],ebp
  431406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431407:	test   DWORD PTR [eax+0x5dd313b6],ebp
  43140d:	(bad)  
  43140e:	push   ds
  43140f:	sbb    ch,BYTE PTR [ecx]
  431411:	add    al,0x5c
  431413:	int    0xf0
  431415:	lods   eax,DWORD PTR ds:[esi]
  431416:	(bad)  
  431417:	sub    bh,BYTE PTR [ebx]
  431419:	adc    BYTE PTR [ebx],bh
  43141b:	push   es
  43141c:	aas    
  43141d:	or     bh,ch
  43141f:	and    DWORD PTR [edx+0x6b2b913d],edx
  431425:	(bad)  
  431426:	jp     0x431402
  431428:	arpl   si,ax
  43142a:	xchg   dl,bl
  43142c:	xor    eax,0x15d87bae
  431431:	aad    0x6f
  431433:	mov    ch,0xec
  431435:	inc    eax
  431436:	loope  0x431469
  431438:	jno    0x431493
  43143a:	pop    ecx
  43143b:	dec    edx
  43143c:	repz or al,0x0
  43143f:	add    BYTE PTR [esi-0x4b],bl
  431442:	pop    esp
  431443:	inc    eax
  431444:	daa    
  431445:	xchg   ebx,ebx
  431447:	xor    edx,ebp
  431449:	mov    ch,0xdd
  43144b:	inc    eax
  43144c:	cdq    
  43144d:	add    DWORD PTR [esi-0x42],esp
  431450:	shl    BYTE PTR [ebp+0x63b44b6],cl
  431456:	and    eax,esi
  431458:	das    
  431459:	or     DWORD PTR [edx],esi
  43145b:	mov    dh,0x2a
  43145d:	sub    edx,DWORD PTR [ecx]
  43145f:	loopne 0x4314b1
  431461:	lds    esp,FWORD PTR [ecx]
  431463:	loope  0x431410
  431465:	inc    eax
  431466:	es or  edx,ebp
  431469:	aam    0x63
  43146b:	scas   eax,DWORD PTR es:[edi]
  43146c:	mov    dh,0x7d
  43146e:	addr16 das 
  431470:	or     cl,BYTE PTR [eax]
  431472:	jmp    0x9216b67a
  431477:	hlt    
  431478:	sub    bh,BYTE PTR [ebp-0x1]
  43147b:	arpl   WORD PTR [edx+0x2d],di
  43147e:	cli    
  43147f:	out    dx,al
  431480:	add    al,0xbb
  431482:	dec    edi
  431483:	push   ebx
  431484:	mov    ebp,0xac22dba
  431489:	push   ss
  43148a:	xor    dl,bh
  43148c:	xchg   esi,eax
  43148d:	sub    al,BYTE PTR [ebx-0x79648357]
  431493:	cld    
  431494:	xchg   esi,eax
  431495:	sti    
  431496:	aas    
  431497:	jmp    0xb4e699e1
  43149c:	loop   0x4314cd
  43149e:	dec    edi
  43149f:	scas   al,BYTE PTR es:[edi]
  4314a0:	add    eax,DWORD PTR [esp+edi*1-0x17ffff4b]
  4314a7:	leave  
  4314a8:	call   DWORD PTR [ecx+0x4d847d72]
  4314ae:	adc    al,0x30
  4314b0:	cli    
  4314b1:	cmp    DWORD PTR [edx-0x69259feb],edi
  4314b7:	sub    cl,BYTE PTR [ebx-0x5d2029c]
  4314bd:	jbe    0x431448
  4314bf:	das    
  4314c0:	adc    al,0x69
  4314c2:	(bad)  
  4314c3:	leave  
  4314c4:	jmp    FWORD PTR [ebx-0x67]
  4314c7:	mov    dh,0x39
  4314c9:	ins    BYTE PTR es:[edi],dx
  4314ca:	pop    esp
  4314cb:	data16 cld 
  4314cd:	push   esi
  4314ce:	add    bh,BYTE PTR [ebx-0x5990c806]
  4314d4:	mov    WORD PTR [edx+eax*8-0x429b7346],gs
  4314db:	sub    eax,0x2f0936fa
  4314e0:	shl    BYTE PTR [ecx+edx*4-0x4a],cl
  4314e4:	ror    DWORD PTR [edi-0x5d4052a9],0x4d
  4314eb:	adc    edi,ebx
  4314ed:	pushf  
  4314ee:	inc    edx
  4314ef:	fstp   TBYTE PTR [edi+0xbc54987]
  4314f5:	add    BYTE PTR [ecx+0x40],ch
  4314f8:	mov    edx,0x7810eb50
  4314fd:	push   ss
  4314fe:	sub    al,0x6
  431500:	test   eax,eax
  431502:	popa   
  431503:	add    ch,BYTE PTR [ebx+0x6213a701]
  431509:	adc    BYTE PTR [eax],al
  43150b:	add    BYTE PTR [ebx-0x1e17899e],ch
  431511:	adc    eax,0x47ebfff6
  431516:	test   bl,al
  431518:	test   DWORD PTR [ebx+eax*8-0x1349a8c],0xe694c1ff
  431523:	sbb    DWORD PTR [eax+0x9],0x3c7c0001
  43152a:	push   eax
  43152b:	push   edi
  43152c:	out    0xfd,al
  43152e:	div    BYTE PTR [ebp+0x74]
  431531:	xchg   esp,eax
  431532:	xlat   BYTE PTR ds:[ebx]
  431533:	(bad)  
  431534:	(bad)  
  431536:	dec    edi
  431537:	call   0x39260c
  43153c:	sub    eax,0x1d66ea52
  431541:	push   edx
  431542:	out    dx,al
  431543:	rcl    DWORD PTR [ebp+edi*8+0x5d],0x31
  431548:	sbb    edi,0xcdefc929
  43154e:	test   BYTE PTR [ecx+esi*1+0x19],dl
  431552:	xor    BYTE PTR [ecx+ebx*1-0x1b],dl
  431556:	cmp    al,BYTE PTR [ebx+0x2751094]
  43155c:	das    
  43155d:	int    0x3f
  43155f:	and    ebp,0x14
  431562:	push   0xffffffea
  431564:	scas   eax,DWORD PTR es:[edi]
  431565:	dec    ecx
  431566:	or     al,BYTE PTR [eax]
  431568:	jo     0x431570
  43156a:	div    DWORD PTR [ebp+0xc]
  43156d:	jp     0x431522
  43156f:	call   0x1181574
  431574:	cmp    bh,dl
  431576:	in     eax,dx
  431577:	lock std 
  431579:	stc    
  43157a:	bnd jl 0x43158b
  43157d:	push   esi
  43157e:	pop    eax
  43157f:	sahf   
  431580:	cs out 0x9e,eax
  431583:	ss cmp al,0xfa
  431586:	retf   0xc7e0
  431589:	adc    edx,DWORD PTR [esi+0x3a]
  43158c:	add    esi,DWORD PTR [ecx+esi*8-0x26]
  431590:	mov    bh,0xb
  431592:	or     eax,0x5b819c6
  431597:	scas   eax,DWORD PTR es:[edi]
  431598:	ret    
  431599:	(bad)  
  43159a:	cmp    al,0x38
  43159c:	daa    
  43159d:	add    ch,BYTE PTR [ebp-0xe]
  4315a0:	xchg   DWORD PTR [edi],edi
  4315a2:	aad    0xcc
  4315a4:	add    DWORD PTR [ebx+0x5],ebx
  4315a7:	lods   al,BYTE PTR ds:[esi]
  4315a8:	inc    esp
  4315a9:	xchg   BYTE PTR [esi-0x77172286],al
  4315af:	xchg   DWORD PTR [edx-0x13f301e5],ecx
  4315b5:	dec    esi
  4315b6:	dec    eax
  4315b7:	in     eax,dx
  4315b8:	xor    ecx,DWORD PTR [edi+0x72]
  4315bb:	inc    ebp
  4315bc:	mov    dl,BYTE PTR [ecx]
  4315be:	adc    eax,0xfe59db33
  4315c3:	imul   edi,DWORD PTR ds:0x7347d50f,0x413660bf
  4315cd:	ja     0x431568
  4315cf:	jb     0x4315cf
  4315d1:	cs daa 
  4315d3:	add    eax,DWORD PTR [edi+0x61]
  4315d6:	add    BYTE PTR [eax],al
  4315d8:	(bad)  
  4315d9:	bound  eax,QWORD PTR [eax]
  4315db:	outs   dx,DWORD PTR ds:[esi]
  4315dc:	int3   
  4315dd:	mov    BYTE PTR [edi+0x7337d14f],al
  4315e3:	lock dec edi
  4315e5:	inc    esi
  4315e6:	lock sub eax,0x404d24c5
  4315ec:	pop    ebp
  4315ed:	or     ebp,edi
  4315ef:	std    
  4315f0:	je     0x4315d6
  4315f2:	mov    al,0x1
  4315f4:	jae    0x431628
  4315f6:	mov    dl,0xc
  4315f8:	inc    esi
  4315f9:	leave  
  4315fa:	out    0x45,al
  4315fc:	(bad)  
  4315fd:	loope  0x4315e7
  4315ff:	inc    eax
  431600:	fbld   TBYTE PTR [eax+0x28]
  431603:	(bad)  
  431604:	(bad)  
  431605:	dec    esi
  431606:	jo     0x4315d7
  431608:	call   0x4a3c:0x34ab609
  43160f:	stc    
  431610:	adc    cl,BYTE PTR [esi+edx*2]
  431613:	jmp    0xbba0d52b
  431618:	(bad)  
  431619:	push   ss
  43161a:	xchg   ebx,eax
  43161b:	sbb    ebx,esi
  43161d:	pop    esi
  43161e:	scas   al,BYTE PTR es:[edi]
  43161f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431620:	fbld   TBYTE PTR [edi-0x4]
  431623:	or     al,0x37
  431625:	fld    TBYTE PTR [ebp+0x6d23eba5]
  43162b:	cmp    al,0x92
  43162d:	daa    
  43162e:	call   0x266601d8
  431633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431634:	dec    ebp
  431635:	out    0x22,al
  431637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431638:	ret    
  431639:	mov    ecx,0xb1e6
  43163e:	(bad)  
  43163f:	(bad)  
  431640:	sbb    eax,0xe6ca260d
  431645:	lock lea esi,[eax+0x4b170f5f]
  43164c:	adc    ecx,DWORD PTR [ecx+0xbab933e]
  431652:	retf   0xec35
  431655:	shl    BYTE PTR [esi+edi*4-0x62b7f442],1
  43165c:	dec    esp
  43165d:	fdivr  DWORD PTR [edx]
  43165f:	adc    edi,edx
  431661:	cmp    eax,0xf839db2f
  431666:	pop    ss
  431667:	popf   
  431668:	dec    ecx
  43166a:	pop    ds
  43166b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43166c:	sti    
  43166d:	scas   eax,DWORD PTR es:[edi]
  43166e:	sub    eax,0x3cf14490
  431673:	or     al,0x8d
  431675:	xchg   esp,eax
  431676:	mov    esi,0x1be7bf
  43167b:	and    edx,edi
  43167d:	rcr    BYTE PTR [ecx+0x13724b9d],cl
  431683:	pcmpgtd mm6,mm0
  431686:	push   ebx
  431687:	sahf   
  431688:	pop    es
  431689:	xchg   edx,eax
  43168a:	scas   al,BYTE PTR es:[edi]
  43168b:	inc    esi
  43168c:	xor    edi,ebp
  43168e:	push   cs
  43168f:	loopne 0x431653
  431691:	pop    esp
  431692:	retf   
  431693:	pop    DWORD PTR [ebp+ebx*8-0x26]
  431697:	dec    edx
  431698:	cwde   
  431699:	add    dl,BYTE PTR [ebx]
  43169b:	nop
  43169c:	xlat   BYTE PTR ds:[ebx]
  43169d:	mov    eax,0xf6ee8ff2
  4316a2:	add    BYTE PTR [eax],al
  4316a4:	aas    
  4316a5:	sahf   
  4316a6:	imul   edx
  4316a8:	gs push cs
  4316aa:	lea    ebp,[edi]
  4316ac:	sar    DWORD PTR [ecx+0x22dd34fa],cl
  4316b2:	adc    al,0xe1
  4316b4:	in     al,0xc9
  4316b6:	(bad)  
  4316b7:	aas    
  4316b8:	mov    al,ds:0xd81dbf8d
  4316bd:	mov    ds:0x9325c04,eax
  4316c2:	out    0xea,eax
  4316c4:	pop    ecx
  4316c5:	(bad)  
  4316c8:	sbb    eax,0x2ba07a22
  4316cd:	and    DWORD PTR [edi+0xe],edx
  4316d0:	das    
  4316d1:	mov    edi,0x9d92bc8
  4316d6:	or     edx,DWORD PTR [edi-0x584ded29]
  4316dc:	ror    DWORD PTR [eax-0x21],1
  4316df:	loope  0x4316bc
  4316e1:	dec    eax
  4316e2:	out    0x0,al
  4316e4:	xchg   DWORD PTR [eax],edi
  4316e6:	sub    esp,0x810648a7
  4316ec:	nop
  4316ed:	jge    0x4316e9
  4316ef:	(bad)  
  4316f0:	cld    
  4316f1:	aaa    
  4316f2:	dec    ebp
  4316f3:	(bad)  
  4316f4:	call   DWORD PTR [ecx+0x1eec408d]
  4316fa:	cmc    
  4316fb:	mov    DWORD PTR [edi+0x3a],esp
  4316fe:	xchg   DWORD PTR [ebx+0x28],edi
  431701:	xchg   ebp,eax
  431702:	jno    0x43175c
  431704:	mov    ebx,0x564e
  431709:	add    al,bh
  43170b:	or     DWORD PTR [eax],eax
  43170d:	mov    DWORD PTR [edi],ebp
  43170f:	mov    ax,WORD PTR [ebx-0x4c]
  431713:	cmp    dl,ah
  431715:	push   edx
  431716:	scas   eax,DWORD PTR es:[edi]
  431717:	loopne 0x43170e
  431719:	push   0xffffffc0
  43171b:	xchg   edx,eax
  43171c:	imul   ebp,DWORD PTR [eax],0x5b8737fb
  431722:	fsubr  st(0),st
  431724:	adc    ebx,DWORD PTR [eax]
  431726:	mov    cl,BYTE PTR [ecx-0x6]
  431729:	cmp    BYTE PTR [eax+0xd],0x62
  43172d:	add    eax,0x1c00c8c4
  431732:	push   ebx
  431733:	dec    edi
  431734:	cli    
  431735:	(bad)  
  431736:	mov    edi,0xaeef641d
  43173b:	or     eax,0xd29843bf
  431740:	in     eax,0x42
  431742:	jl     0x43170c
  431744:	cmp    DWORD PTR [eax],edi
  431746:	test   eax,esi
  431748:	cmp    al,0x0
  43174a:	in     eax,0x4b
  43174c:	pop    edx
  43174d:	cmp    DWORD PTR [ecx+0x11],esp
  431750:	je     0x431767
  431752:	in     al,dx
  431753:	loopne 0x4317c8
  431755:	or     BYTE PTR [edx-0x5bf7966e],cl
  43175b:	cmp    eax,0xbbd5ffda
  431760:	xor    edi,0x89013ed8
  431766:	scas   al,BYTE PTR es:[edi]
  431767:	push   edx
  431768:	mov    DWORD PTR [ecx+edx*8-0x69],esi
  43176c:	inc    eax
  43176d:	out    0x0,eax
  43176f:	add    BYTE PTR [edx-0x5a05c7ac],ch
  431775:	test   eax,0x765807bf
  43177a:	sbb    dl,BYTE PTR [edx-0x5b]
  43177d:	add    edx,DWORD PTR [eax]
  43177f:	sbb    bl,ah
  431781:	jb     0x431781
  431783:	jle    0x43179e
  431785:	inc    edi
  431786:	xchg   DWORD PTR [ebp+ebx*8-0x7e],eax
  43178a:	xchg   DWORD PTR [ecx+edi*8-0x7e],eax
  43178e:	xor    eax,0x9645da31
  431793:	adc    al,0x15
  431795:	xor    edi,DWORD PTR [edi-0x41]
  431798:	inc    ecx
  431799:	sbb    eax,DWORD PTR [ebp-0x1cd8e4a]
  43179f:	jmp    FWORD PTR [esi+0x18b308dd]
  4317a5:	dec    edi
  4317a6:	retf   
  4317a7:	inc    edi
  4317a8:	and    DWORD PTR [esi],esi
  4317aa:	and    edi,0xffffffc8
  4317ad:	(bad)  
  4317af:	cs xchg ebp,eax
  4317b1:	aam    0x86
  4317b3:	inc    esp
  4317b4:	jnp    0x43177b
  4317b6:	mov    dl,0xd3
  4317b8:	dec    ebp
  4317b9:	ins    BYTE PTR es:[edi],dx
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	aad    0x7a
  4317be:	adc    al,0xfa
  4317c0:	jp     0x43183d
  4317c2:	add    BYTE PTR [ebp+eiz*8+0x5fa3893],0x9e
  4317ca:	mov    edx,0x4b7b05e3
  4317cf:	imul   ebx,DWORD PTR [ebx-0x65],0x7f
  4317d3:	mov    edi,0x50c90000
  4317d8:	add    DWORD PTR [ebp+eax*8+0x3f396209],0x8a416db9
  4317e3:	xchg   esi,eax
  4317e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317e5:	stos   DWORD PTR es:[edi],eax
  4317e6:	mov    eax,0x3e2bb8ca
  4317eb:	clc    
  4317ec:	call   0xd890b9f4
  4317f1:	mov    bl,BYTE PTR [ebx-0x2afc178b]
  4317f7:	mov    gs,WORD PTR [eax]
  4317f9:	mov    ecx,0x684588d7
  4317fe:	add    ah,BYTE PTR [eax+ebp*8]
  431801:	add    ebx,DWORD PTR [esi+0x1dda2590]
  431807:	inc    edi
  431808:	loopne 0x43180d
  43180a:	adc    BYTE PTR [eax+0x14ee8514],0x93
  431811:	rcl    BYTE PTR [ebx+0x19],1
  431814:	arpl   WORD PTR [edi+0x3e962c6],si
  43181a:	aad    0x9
  43181c:	shl    DWORD PTR [eax-0x3f],1
  43181f:	and    ebx,ecx
  431821:	mov    WORD PTR [esi+edi*4],ss
  431824:	arpl   si,cx
  431826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431827:	mov    eax,0x8f1ab95b
  43182c:	icebp  
  43182d:	rol    DWORD PTR ds:0x9ffa2732,cl
  431833:	and    ebp,ebp
  431835:	shl    DWORD PTR [esi],0x9e
  431838:	loopne 0x431836
  43183a:	add    BYTE PTR [eax],al
  43183c:	pop    ss
  43183d:	push   cs
  43183e:	sbb    bl,BYTE PTR [ecx]
  431840:	dec    esp
  431841:	retf   
  431842:	in     al,0x8c
  431844:	push   esp
  431845:	jbe    0x43182f
  431847:	add    edx,ebp
  431849:	mov    WORD PTR [eax+0x65b9c4b9],gs
  43184f:	inc    ecx
  431850:	cli    
  431851:	mov    ebx,0x7b72406d
  431856:	inc    DWORD PTR [esi]
  431858:	mov    esp,cr0
  43185b:	test   eax,0xeee7097b
  431860:	dec    eax
  431861:	arpl   si,sp
  431863:	jmp    0x520c:0xb63f6341
  43186a:	mov    esi,0x7e2f59b4
  43186f:	dec    ebp
  431870:	fidivr WORD PTR [ecx-0x2d315b7a]
  431876:	push   ecx
  431877:	sahf   
  431878:	popa   
  431879:	and    dh,BYTE PTR [esi]
  43187b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43187c:	dec    edx
  43187d:	adc    BYTE PTR [ebp+0x9d7fc],al
  431883:	push   0x3d
  431885:	ret    
  431886:	jmp    ebp
  431888:	jb     0x431895
  43188a:	add    ecx,ebp
  43188c:	(bad)  
  43188d:	mov    al,BYTE PTR [ecx+ebx*8+0x4f]
  431891:	(bad)  
  431892:	and    ebp,ebp
  431894:	dec    ecx
  431895:	into   
  431896:	adc    esp,DWORD PTR [edx-0x12]
  431899:	xor    cl,cl
  43189b:	jmp    0xe6922276
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	test   esi,esp
  4318a4:	(bad)  
  4318a6:	jp     0x431892
  4318a8:	dec    edi
  4318a9:	or     BYTE PTR fs:[edx],0xe8
  4318ad:	jecxz  0x4318b2
  4318af:	and    dl,bh
  4318b1:	call   0x124eff18
  4318b6:	stc    
  4318b7:	mov    WORD PTR [edx-0x2a],es
  4318ba:	mov    dl,0x9f
  4318bc:	jae    0x43189f
  4318be:	add    BYTE PTR [eax],0xb
  4318c1:	ins    BYTE PTR es:[edi],dx
  4318c2:	sub    DWORD PTR [ebx],esp
  4318c4:	cli    
  4318c5:	jmp    0x6d4d7bc4
  4318ca:	stc    
  4318cb:	and    bh,dl
  4318cd:	jmp    0xa2e031
  4318d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318d3:	push   ebp
  4318d4:	outs   dx,BYTE PTR ds:[esi]
  4318d5:	jae    0x43187b
  4318d7:	push   ebp
  4318d8:	add    eax,0xdc385
  4318dd:	add    BYTE PTR [ebp-0x4ff0b19d],al
  4318e3:	popf   
  4318e4:	cli    
  4318e5:	jmp    FWORD PTR [edi+ecx*4]
  4318e8:	jae    0x4318fa
  4318ea:	outs   dx,DWORD PTR ds:[esi]
  4318eb:	fld    TBYTE PTR [esi+0x24]
  4318ee:	sub    al,0x54
  4318f0:	cmc    
  4318f1:	adc    eax,0x4013fc
  4318f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318f7:	dec    eax
  4318f8:	push   cs
  4318f9:	mov    DWORD PTR [edi+eax*4],esp
  4318fc:	mov    esi,0x87e2770c
  431901:	je     0x431913
  431903:	or     ch,al
  431905:	pop    es
  431906:	add    BYTE PTR [eax],al
  431908:	fcmovnu st,st(2)
  43190a:	cmc    
  43190b:	test   BYTE PTR [edx+ecx*1+0x5fc8684],bh
  431912:	add    BYTE PTR [edx-0x13],ch
  431915:	ins    DWORD PTR es:[edi],dx
  431916:	outs   dx,BYTE PTR ds:[esi]
  431917:	xchg   edi,eax
  431918:	sub    al,0x6
  43191a:	lea    eax,[edi+0x6c]
  43191d:	cmc    
  43191e:	into   
  43191f:	ins    DWORD PTR es:[edi],dx
  431920:	mov    edx,0x20c083d8
  431925:	pop    ebp
  431926:	cmc    
  431927:	ja     0x431911
  431929:	xchg   esp,eax
  43192a:	cmp    eax,0x42708b54
  43192f:	mov    esp,ebx
  431931:	xor    eax,0xf5a84d81
  431936:	xor    al,0x68
  431938:	pop    edx
  431939:	fdivr  DWORD PTR [esi-0x40]
  43193c:	rol    BYTE PTR [ecx+edi*2+0x67],1
  431940:	loopne 0x431947
  431942:	mov    edi,0xacc47
  431947:	add    BYTE PTR [esp+esi*8+0x16],ch
  43194b:	mov    edx,ebp
  43194d:	out    dx,eax
  43194e:	lahf   
  43194f:	xchg   BYTE PTR [eax],al
  431951:	and    esp,ebp
  431953:	mov    ebp,0x723144e9
  431958:	or     DWORD PTR [edi+eax*8-0x39dfadf5],ebx
  43195f:	out    0xe4,eax
  431961:	or     dh,BYTE PTR [edx]
  431963:	cli    
  431964:	pop    ecx
  431965:	rep stos BYTE PTR es:[edi],al
  431967:	sub    eax,0x4a8732af
  43196c:	add    BYTE PTR [eax],al
  43196e:	(bad)  
  431970:	mov    ebp,0x7fd02af0
  431975:	(bad)  
  431976:	shr    BYTE PTR [ebp-0x1fe50518],cl
  43197c:	test   DWORD PTR [edx+0x75],eax
  43197f:	mov    bl,0x36
  431981:	add    BYTE PTR [ebx-0x270882d4],cl
  431987:	inc    DWORD PTR gs:[esi+0x17e31690]
  43198e:	sub    eax,0xd50011d3
  431993:	cmp    edi,DWORD PTR [ecx+0x34f2bf53]
  431999:	mov    edi,0xbff028ee
  43199e:	mov    esi,0x2a006e34
  4319a3:	xchg   ecx,eax
  4319a4:	aad    0x86
  4319a6:	mov    eax,0xd50f3dc5
  4319ab:	fwait
  4319ac:	mov    esi,0xa3f29a17
  4319b1:	add    ch,dl
  4319b3:	xor    bh,dh
  4319b5:	cs xchg ebp,eax
  4319b7:	jae    0x431982
  4319b9:	push   edx
  4319ba:	dec    esi
  4319bb:	dec    ecx
  4319bc:	mov    BYTE PTR [edx-0x13],dh
  4319bf:	stos   DWORD PTR es:[edi],eax
  4319c0:	mov    ecx,0xfa5a565f
  4319c5:	jae    0x431977
  4319c7:	or     DWORD PTR [esi+0x3c],esp
  4319ca:	jnp    0x431961
  4319cc:	add    BYTE PTR [edx-0x4fc35790],ch
  4319d2:	add    BYTE PTR [eax],al
  4319d4:	stos   BYTE PTR es:[edi],al
  4319d5:	or     DWORD PTR [esi+edi*4+0x12],ebx
  4319d9:	xor    ah,dl
  4319db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4319dc:	pop    esp
  4319dd:	and    BYTE PTR [ebx+0x44],ah
  4319e0:	leave  
  4319e1:	push   es
  4319e2:	dec    sp
  4319e4:	dec    edi
  4319e5:	xor    al,0xd6
  4319e7:	test   eax,0x3d3194d5
  4319ec:	xchg   esp,eax
  4319ed:	test   eax,0x9d503e4
  4319f2:	inc    ecx
  4319f3:	inc    ecx
  4319f4:	cmp    ah,BYTE PTR [eax]
  4319f6:	dec    ecx
  4319f7:	icebp  
  4319f8:	(bad)  
  4319f9:	shl    BYTE PTR [edx+0x6db78b40],0xb3
  431a00:	jmp    0x6543:0x53a3aa94
  431a07:	cmp    al,0xd9
  431a09:	xchg   esi,eax
  431a0a:	in     al,dx
  431a0b:	lock cmp dh,BYTE PTR [ebp*4-0x194c7835]
  431a13:	aam    0x66
  431a15:	jmp    0xf2ac56d7
  431a1a:	cdq    
  431a1b:	stos   DWORD PTR es:[edi],eax
  431a1c:	xchg   BYTE PTR [ebp-0x379ffc58],dl
  431a22:	cwde   
  431a23:	sub    esp,DWORD PTR [esi+0x5934eaae]
  431a29:	dec    edx
  431a2a:	pop    ebx
  431a2b:	(bad)  
  431a2c:	cmp    edx,DWORD PTR [edx-0x27]
  431a2f:	sub    dl,bh
  431a31:	nop
  431a32:	push   edx
  431a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a34:	mov    bl,0xd
  431a36:	aas    
  431a37:	add    eax,DWORD PTR [eax]
  431a39:	add    BYTE PTR [eax+eax*8+0x4c],cl
  431a3d:	mov    ebx,DWORD PTR [edx+ebp*4]
  431a40:	shr    BYTE PTR [edx+eax*4-0x3e4a00e1],1
  431a47:	call   0x3a4f:0xc95bd923
  431a4e:	test   eax,0xa99f6b72
  431a53:	sbb    edx,edi
  431a55:	repnz push ss
  431a57:	mov    al,ds:0x4ad58fdf
  431a5c:	pop    edx
  431a5d:	daa    
  431a5e:	jl     0x431abd
  431a60:	add    ebp,ecx
  431a62:	and    BYTE PTR [eax-0x36a22e90],cl
  431a68:	pop    edi
  431a69:	push   ss
  431a6a:	dec    esp
  431a6b:	adc    eax,0x963b617e
  431a70:	add    ebx,DWORD PTR [edx]
  431a72:	cdq    
  431a73:	daa    
  431a74:	xor    eax,0x1a961ea1
  431a79:	ret    
  431a7a:	aam    0xb1
  431a7c:	mov    ebx,0x8b1f16be
  431a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a82:	es daa 
  431a84:	jb     0x431a4b
  431a86:	shl    BYTE PTR [ebx],0x84
  431a89:	sub    DWORD PTR [ebx],esi
  431a8b:	push   es
  431a8c:	jg     0x431abf
  431a8e:	shl    DWORD PTR [edi],0x19
  431a91:	xor    BYTE PTR es:[edi+0x9d6e8fe],bh
  431a98:	sti    
  431a99:	xchg   ebp,eax
  431a9a:	add    dl,BYTE PTR [ebx]
  431a9c:	lea    ebp,[edi-0x43fa0000]
  431aa2:	out    0xa3,eax
  431aa4:	jp     0x431ac6
  431aa6:	cli    
  431aa7:	(bad)  
  431aa8:	das    
  431aa9:	clc    
  431aaa:	mov    edi,0x7e20f66a
  431aaf:	test   eax,0xab59c2d3
  431ab4:	fisttp QWORD PTR [ecx]
  431ab6:	push   ebp
  431ab7:	(bad)  
  431ab8:	cmc    
  431ab9:	lahf   
  431aba:	jmp    0x431ab1
  431abc:	mov    edi,DWORD PTR [eax-0x11d8ffae]
  431ac2:	xor    ecx,0x476edaf9
  431ac8:	push   ss
  431ac9:	push   es
  431aca:	push   0xa6cc8
  431acf:	push   edi
  431ad0:	add    DWORD PTR [ecx],edi
  431ad2:	imul   al
  431ad4:	js     0x431ae9
  431ad6:	idiv   bh
  431ad8:	cmc    
  431ad9:	push   eax
  431ada:	repnz test DWORD PTR [edx+ecx*1],ebp
  431ade:	test   dl,bl
  431ae0:	ins    DWORD PTR es:[edi],dx
  431ae1:	or     al,BYTE PTR [eax]
  431ae3:	mov    edi,ecx
  431ae5:	fnstcw WORD PTR [ecx-0x8]
  431ae8:	sub    ecx,DWORD PTR [ebx]
  431aea:	jp     0x431aba
  431aec:	sub    eax,0x3b6a000a
  431af1:	pop    ss
  431af2:	int3   
  431af3:	pop    ecx
  431af4:	mov    edx,esp
  431af6:	adc    edx,0x33
  431af9:	xchg   ecx,eax
  431afa:	mov    ch,0x1
  431afc:	sub    al,0xa
  431afe:	dec    edx
  431aff:	push   0x8
  431b01:	inc    ebx
  431b02:	mov    ebx,DWORD PTR [ebp+0x0]
  431b05:	add    al,cl
  431b07:	pushf  
  431b08:	inc    ebx
  431b09:	cld    
  431b0a:	xchg   esp,eax
  431b0b:	retf   0xfe00
  431b0e:	mov    bl,0xfe
  431b10:	inc    ebp
  431b11:	lea    ebp,[ecx]
  431b13:	(bad)  
  431b14:	dec    edx
  431b15:	push   0x555
  431b1a:	aam    0xeb
  431b1c:	mov    edi,0xc29ed3fd
  431b21:	test   DWORD PTR [ebp+0x798b1461],esp
  431b27:	aad    0x64
  431b29:	pop    ss
  431b2a:	(bad)  
  431b2b:	mov    bh,0x51
  431b2d:	idiv   DWORD PTR [edi-0x3f8a336e]
  431b33:	cs pop ebx
  431b35:	hlt    
  431b36:	push   cs
  431b37:	adc    DWORD PTR [ecx+0x7936d545],ecx
  431b3d:	shr    BYTE PTR [esi-0x23182cd5],0x31
  431b44:	xor    dl,bh
  431b46:	(bad)  
  431b47:	jb     0x431bc4
  431b49:	inc    esp
  431b4a:	lea    ebp,[esi-0x21a6f5c2]
  431b50:	add    al,0x0
  431b52:	aad    0x95
  431b54:	(bad)  
  431b55:	repz add eax,0x6aff8bfb
  431b5b:	xor    edx,DWORD PTR [esi]
  431b5d:	lods   al,BYTE PTR ds:[esi]
  431b5e:	xchg   esp,eax
  431b5f:	mov    gs,WORD PTR ds:0x49ae7d86
  431b65:	or     bl,BYTE PTR [ecx-0x1c]
  431b68:	add    al,0x0
  431b6a:	add    BYTE PTR [eax],al
  431b6c:	aad    0xa7
  431b6e:	(bad)  
  431b6f:	repz push esi
  431b71:	fwait
  431b72:	out    dx,al
  431b73:	or     dl,BYTE PTR [edi-0x18]
  431b76:	add    al,0x0
  431b78:	aad    0x5f
  431b7a:	push   ss
  431b7b:	hlt    
  431b7c:	stc    
  431b7d:	mov    bl,0x2d
  431b7f:	test   BYTE PTR ds:0xd42c803c,dl
  431b85:	xor    bh,dh
  431b87:	test   BYTE PTR [edx],dl
  431b89:	push   edi
  431b8a:	cmc    
  431b8b:	push   ecx
  431b8c:	pop    esi
  431b8d:	fcom   DWORD PTR [esi]
  431b8f:	rcr    ebx,1
  431b91:	xor    bh,dh
  431b93:	adc    DWORD PTR ds:0xeb2f157e,0xfffffffb
  431b9a:	mov    bh,0xf7
  431b9c:	std    
  431b9d:	adc    bh,bh
  431b9f:	stc    
  431ba0:	loop   0x431c01
  431ba2:	push   ss
  431ba3:	aad    0xd5
  431ba5:	add    al,0x2e
  431ba7:	xchg   BYTE PTR [ebx-0x2afeea07],bl
  431bad:	xor    ch,BYTE PTR ds:0xc7a7bd74
  431bb3:	sti    
  431bb4:	lods   eax,DWORD PTR ds:[esi]
  431bb5:	or     DWORD PTR [ecx],edx
  431bb7:	pop    eax
  431bb8:	mov    cl,0x1c
  431bba:	ins    DWORD PTR es:[edi],dx
  431bbb:	scas   eax,DWORD PTR es:[edi]
  431bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431bbd:	mov    eax,0x1e8e19c0
  431bc2:	leave  
  431bc3:	jge    0x431bd6
  431bc5:	push   ds
  431bc6:	dec    ebp
  431bc7:	inc    esp
  431bc8:	fiadd  WORD PTR [esi+0x31deb8a8]
  431bce:	xor    eax,DWORD PTR [eax+eax*1]
  431bd1:	add    BYTE PTR [edi+0x1c],bh
  431bd4:	pop    edi
  431bd5:	(bad)  
  431bd6:	push   0xffffff86
  431bd8:	test   al,0xb7
  431bda:	fldcw  WORD PTR [edi+0x5d73d29a]
  431be0:	arpl   WORD PTR [edx+0x1789b4da],si
  431be6:	jge    0x431bdf
  431be8:	sub    BYTE PTR [edx+ebx*2],al
  431beb:	inc    ebx
  431bec:	nop
  431bed:	outs   dx,BYTE PTR ds:[esi]
  431bee:	dec    ebx
  431bef:	sbb    al,0xe8
  431bf1:	jl     0x431b8c
  431bf3:	and    DWORD PTR [edi-0x36],ebx
  431bf6:	repnz nop
  431bf8:	stos   DWORD PTR es:[edi],eax
  431bf9:	das    
  431bfa:	pop    ebp
  431bfb:	ret    
  431bfc:	or     al,0x7d
  431bfe:	xchg   ecx,eax
  431bff:	sbb    DWORD PTR [edi-0x36],ebx
  431c02:	repnz xor DWORD PTR [eax+0x36],edi
  431c06:	sbb    DWORD PTR [esi*8+0x3c960755],ebx
  431c0d:	jge    0x431ba0
  431c0f:	adc    eax,0xe99c7a99
  431c14:	pop    edi
  431c15:	retf   0x92b6
  431c18:	mov    edx,0x3cf5eff7
  431c1d:	push   ss
  431c1e:	xchg   ebp,eax
  431c1f:	or     esi,edx
  431c21:	xor    BYTE PTR [ebp-0x47493365],bl
  431c27:	mov    ah,0x99
  431c29:	fsub   DWORD PTR [edi]
  431c2b:	sbb    edx,ebx
  431c2d:	push   edi
  431c2e:	fmul   st,st(1)
  431c30:	(bad)  
  431c31:	call   0xb27ee575
  431c36:	add    BYTE PTR [eax],al
  431c38:	or     eax,0xd13e1096
  431c3d:	enter  0xdeff,0xe5
  431c41:	mov    bh,0xe7
  431c43:	sub    ecx,ebx
  431c45:	pop    ds
  431c46:	cli    
  431c47:	inc    ebx
  431c48:	out    0xb2,eax
  431c4a:	out    0x46,al
  431c4c:	les    ebx,FWORD PTR [eax+0x31e3be3b]
  431c52:	or     eax,0x598cd929
  431c57:	icebp  
  431c58:	stc    
  431c59:	sbb    esi,DWORD PTR ds:0x8cfd2aae
  431c5f:	sub    al,0xa1
  431c61:	mov    ecx,0x39cb964f
  431c66:	adc    BYTE PTR [ecx],ch
  431c68:	rol    DWORD PTR [edi+edi*4+0x7c88e9fd],1
  431c6f:	jns    0x431c42
  431c71:	or     BYTE PTR [eax],al
  431c73:	jmp    0xbb3e2202
  431c78:	add    eax,0x16fbc7f6
  431c7d:	sbb    eax,DWORD PTR [edi+0x74d43e22]
  431c83:	or     al,0xa0
  431c85:	mov    al,ds:0xa2fcba03
  431c8a:	idiv   BYTE PTR ds:0xe9621b18
  431c90:	(bad)  
  431c91:	adc    DWORD PTR [eax],eax
  431c93:	inc    ecx
  431c94:	mov    dh,BYTE PTR ds:0x5b522efa
  431c9a:	je     0x431c8e
  431c9c:	add    BYTE PTR [eax],al
  431c9e:	push   eax
  431c9f:	sbb    esp,edx
  431ca1:	add    eax,0x83fa1da5
  431ca6:	(bad)  
  431ca7:	and    dl,BYTE PTR [esi-0x18485a26]
  431cad:	add    ah,dh
  431caf:	fsincos 
  431cb1:	jmp    DWORD PTR [ebx-0x2]
  431cb4:	int3   
  431cb5:	dec    ecx
  431cb7:	jmp    0xff0f:0xfd6cc029
  431cbe:	adc    esi,ebp
  431cc0:	loop   0x431c87
  431cc2:	mov    ebx,eax
  431cc4:	cmc    
  431cc5:	push   ebx
  431cc6:	xchg   esp,eax
  431cc7:	stos   BYTE PTR es:[edi],al
  431cc8:	cmc    
  431cc9:	std    
  431cca:	mov    eax,DWORD PTR [esi+0x4bbbffc2]
  431cd0:	push   ecx
  431cd1:	leave  
  431cd2:	aas    
  431cd3:	inc    eax
  431cd4:	sub    esp,0x810250f7
  431cda:	cmp    BYTE PTR ds:0x377cfffa,cl
  431ce0:	push   eax
  431ce1:	push   edi
  431ce2:	inc    esp
  431ce3:	(bad)  
  431ce5:	jmp    FWORD PTR [esi+eax*4+0x3b]
  431ce9:	jo     0x431d0b
  431ceb:	inc    esi
  431cec:	cli    
  431ced:	add    BYTE PTR [edx+0x52],dl
  431cf0:	mov    esi,DWORD PTR [ebp-0xa279c]
  431cf6:	push   esp
  431cf7:	jbe    0x431d67
  431cf9:	(bad)  
  431cfa:	stos   DWORD PTR es:[edi],eax
  431cfb:	mov    BYTE PTR [ebx-0x3c],al
  431cfe:	ins    BYTE PTR es:[edi],dx
  431cff:	jle    0x431c98
  431d01:	add    BYTE PTR [eax],al
  431d03:	add    BYTE PTR [esi+eax*1],bh
  431d06:	add    esi,0x5c
  431d09:	(bad)  
  431d0a:	outs   dx,BYTE PTR ds:[esi]
  431d0b:	mov    edi,0x3d81ea89
  431d10:	dec    eax
  431d11:	idiv   DWORD PTR [edi]
  431d13:	add    BYTE PTR [ecx+0x50],bh
  431d16:	mov    esi,0xbc061450
  431d1b:	inc    ebx
  431d1c:	in     al,dx
  431d1d:	scas   al,BYTE PTR es:[edi]
  431d1e:	(bad)  
  431d1f:	(bad)  
  431d20:	cld    
  431d21:	test   DWORD PTR [ecx-0x1],ecx
  431d24:	mov    ds:0xd550c09e,eax
  431d29:	or     BYTE PTR [edi-0x7bf5248f],bl
  431d2f:	cmp    al,0x45
  431d31:	idiv   DWORD PTR [esi-0x115f2a01]
  431d37:	mov    WORD PTR [eax-0x4505cef5],cs
  431d3d:	or     edi,DWORD PTR [ebx+0x7f30b373]
  431d43:	inc    esp
  431d44:	xchg   ecx,eax
  431d45:	rcr    DWORD PTR [ebx-0x1dd2a69],cl
  431d4b:	xchg   BYTE PTR [ebx+0x522f1bd3],dl
  431d51:	dec    esi
  431d52:	sub    DWORD PTR [eax+edx*1-0x2a983191],ecx
  431d59:	sahf   
  431d5a:	mov    ebp,0x516827ff
  431d5f:	xchg   BYTE PTR [ebx-0x1cdae42d],bl
  431d65:	js     0x431d90
  431d67:	pop    edx
  431d68:	add    BYTE PTR [eax],al
  431d6a:	add    ebx,esp
  431d6c:	cmp    al,0xbd
  431d6e:	shl    DWORD PTR [edx],1
  431d70:	xlat   BYTE PTR ds:[ebx]
  431d71:	xchg   BYTE PTR [ecx-0xe],al
  431d74:	aam    0x4e
  431d76:	mov    ds:0xaa07aca5,al
  431d7b:	test   eax,0x3e3af7af
  431d80:	inc    esi
  431d81:	or     eax,0xd6ed2295
  431d86:	in     al,dx
  431d87:	pop    eax
  431d88:	(bad)  
  431d89:	jae    0x431d34
  431d8b:	stos   DWORD PTR es:[edi],eax
  431d8c:	les    ebp,FWORD PTR [ebx]
  431d8e:	fsubrp st(3),st
  431d90:	mov    dl,0x6c
  431d92:	pop    esp
  431d93:	outs   dx,BYTE PTR ds:[esi]
  431d94:	sub    dh,BYTE PTR [ecx-0x3d]
  431d97:	xlat   BYTE PTR ds:[ebx]
  431d98:	les    esi,FWORD PTR [ebx]
  431d9a:	dec    esi
  431d9b:	imul   esi,edx,0xb4e0272e
  431da1:	sub    ebx,DWORD PTR [edx+ecx*1-0x45]
  431da5:	div    DWORD PTR [ebx+0x3b]
  431da8:	in     al,dx
  431da9:	add    al,BYTE PTR [edi-0x62d6a227]
  431daf:	mov    eax,0x18fab7e0
  431db4:	fild   DWORD PTR [edi-0x25173628]
  431dba:	pop    ss
  431dbb:	add    dh,BYTE PTR [ebx+eiz*1-0x4d16f2b5]
  431dc2:	loop   0x431ddc
  431dc4:	sub    esi,DWORD PTR [eax]
  431dc6:	push   ebx
  431dc7:	into   
  431dc8:	fsub   st(1),st
  431dca:	adc    al,0xe6
  431dcc:	push   esi
  431dcd:	cmp    al,BYTE PTR [eax]
  431dcf:	add    BYTE PTR [edi-0x43e62f62],bl
  431dd5:	and    cl,0x7a
  431dd8:	das    
  431dd9:	push   cs
  431dda:	jo     0x431da9
  431ddc:	fiadd  DWORD PTR [edx+ebp*1-0x2eb60c08]
  431de3:	add    BYTE PTR [edi],dl
  431de5:	loop   0x431df5
  431de7:	adc    eax,0xfc131905
  431dec:	pop    edi
  431ded:	(bad)  
  431dee:	clc    
  431def:	adc    eax,0x48660a15
  431df4:	ficomp WORD PTR [eax]
  431df6:	sti    
  431df7:	sub    ecx,DWORD PTR [edi-0x2]
  431dfa:	pushf  
  431dfb:	adc    dl,BYTE PTR [ebp+0x32033909]
  431e01:	add    dl,BYTE PTR [edx]
  431e03:	sub    eax,0xc3f635c9
  431e08:	sub    bl,dl
  431e0a:	sub    ch,cl
  431e0c:	mov    eax,DWORD PTR [edx+0x26]
  431e0f:	or     ch,dl
  431e11:	mov    esi,0x2593205d
  431e16:	fcom   st(0)
  431e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e19:	dec    edi
  431e1a:	mov    ds:0xff17022c,eax
  431e1f:	fist   DWORD PTR [edx+0x6]
  431e22:	inc    eax
  431e23:	jmp    0xafcf3e95
  431e28:	out    dx,al
  431e29:	(bad)  
  431e2a:	mov    BYTE PTR [esi+eiz*4-0x38ceebed],ah
  431e31:	leave  
  431e32:	(bad)  
  431e33:	fld    DWORD PTR [eax]
  431e35:	add    BYTE PTR ds:0xbe015c82,bl
  431e3b:	mov    cl,0x2b
  431e3d:	ja     0x431eb0
  431e3f:	nop
  431e40:	inc    esp
  431e41:	loope  0x431e98
  431e43:	push   edi
  431e44:	add    esp,DWORD PTR [eax-0x66]
  431e47:	sbb    ecx,DWORD PTR [eax+0x4190a944]
  431e4d:	adc    DWORD PTR [edi],edi
  431e4f:	or     BYTE PTR [ebp+0x500dc92d],cl
  431e55:	into   
  431e56:	dec    ebx
  431e57:	sbb    edi,edx
  431e59:	fsubr  st(2),st
  431e5b:	sti    
  431e5c:	aas    
  431e5d:	jmp    0x6c4e69b7
  431e62:	push   ss
  431e63:	sahf   
  431e64:	inc    edx
  431e65:	bound  ebx,QWORD PTR [eax+0x692bfee7]
  431e6b:	xchg   edi,eax
  431e6c:	jl     0x431e5b
  431e6e:	(bad)  
  431e6f:	pushf  
  431e70:	or     ebx,edx
  431e72:	lahf   
  431e73:	add    DWORD PTR [edi],0x890b8e60
  431e79:	xor    DWORD PTR [ecx+0x30],ecx
  431e7c:	es jb  0x431ebd
  431e7f:	mov    cs,eax
  431e81:	std    
  431e82:	cmp    dl,BYTE PTR [eax-0x76783d2e]
  431e88:	cmc    
  431e89:	jno    0x431e50
  431e8b:	or     DWORD PTR [eax],eax
  431e8d:	fcmovnbe st,st(3)
  431e8f:	adc    bh,BYTE PTR [edi]
  431e91:	in     eax,dx
  431e92:	cmp    al,0xe
  431e94:	pop    ecx
  431e95:	pusha  
  431e96:	(bad)  
  431e97:	rol    DWORD PTR [edi+0x0],1
  431e9a:	add    BYTE PTR [eax],al
  431e9c:	clc    
  431e9d:	pop    eax
  431e9e:	add    cl,BYTE PTR [ecx+0x48871314]
  431ea4:	call   0x1cc61d9a
  431ea9:	adc    edi,edx
  431eab:	lds    edi,FWORD PTR [ecx]
  431ead:	out    0xff,al
  431eaf:	(bad)  
  431eb0:	cmp    ebx,esp
  431eb2:	add    DWORD PTR [ebp-0x3c],0xb0084389
  431eb9:	mov    DWORD PTR [ecx+0x264c9717],edi
  431ebf:	jb     0x431ef2
  431ec1:	out    0x73,al
  431ec3:	lock ret 
  431ec5:	cld    
  431ec6:	fist   DWORD PTR [edx]
  431ec8:	jl     0x431ed4
  431eca:	add    BYTE PTR [ebp-0x4d],0x42
  431ece:	push   ecx
  431ecf:	leave  
  431ed0:	outs   dx,BYTE PTR ds:[esi]
  431ed1:	adc    eax,0xf23754fa
  431ed6:	jns    0x431ebc
  431ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431ed9:	mov    fs,esi
  431edb:	adc    BYTE PTR [edi],al
  431edd:	jae    0x512363
  431ee3:	add    dl,bl
  431ee5:	xchg   esp,eax
  431ee6:	ds and al,0x90
  431ee9:	xchg   edi,eax
  431eea:	cmp    DWORD PTR [ebx+ebp*4],edi
  431eed:	xchg   esp,eax
  431eee:	ds and al,0x68
  431ef1:	(bad)  
  431ef5:	ja     0x431ef1
  431ef7:	mov    eax,?
  431ef9:	sub    DWORD PTR [edx],edx
  431efb:	push   eax
  431efc:	out    0xf,al
  431efe:	not    DWORD PTR ds:0xff5c0000
  431f04:	aas    
  431f05:	add    BYTE PTR [ecx+0x3c00010c],al
  431f0b:	popw   es
  431f0d:	xor    DWORD PTR [esp+ecx*1+0xda98507],0x0
  431f15:	add    ch,dl
  431f17:	mov    ds:0x20dd239f,eax
  431f1c:	icebp  
  431f1d:	mov    edi,0xbda4c58
  431f22:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  431f24:	ret    0xa507
  431f27:	fist   WORD PTR [eax]
  431f29:	fadd   st,st(7)
  431f2b:	pusha  
  431f2c:	inc    BYTE PTR [esi-0x4080bf6a]
  431f32:	imul   eax,DWORD PTR [edx+0x79],0x3ca5b146
  431f39:	jae    0x431f29
  431f3b:	push   ecx
  431f3c:	into   
  431f3d:	out    0x92,eax
  431f3f:	push   cs
  431f40:	sub    edx,edi
  431f42:	dec    esi
  431f43:	or     edi,DWORD PTR [ebx+0x3e]
  431f46:	icebp  
  431f47:	test   eax,0xade123bf
  431f4c:	es je  0x431f2a
  431f4f:	ins    BYTE PTR es:[edi],dx
  431f50:	jle    0x431f9c
  431f52:	(bad)  
  431f53:	and    bl,BYTE PTR [ecx]
  431f55:	add    cl,BYTE PTR [esi-0x41]
  431f58:	fild   WORD PTR [edi]
  431f5a:	push   esi
  431f5b:	jne    0x431f82
  431f5d:	mov    WORD PTR [esi],ss
  431f5f:	sbb    ecx,esi
  431f61:	cli    
  431f62:	call   0x8333dd
  431f67:	add    ch,dl
  431f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f6a:	and    eax,0x1bf06173
  431f6f:	or     eax,0x83fe22d6
  431f74:	xchg   ebp,eax
  431f75:	(bad)  
  431f76:	(bad)  
  431f77:	mov    ecx,0x11ec55
  431f7c:	ds dec esi
  431f7e:	and    eax,0xcd1ef173
  431f83:	gs fprem 
  431f86:	add    esp,DWORD PTR [esi+0x7]
  431f89:	pushf  
  431f8a:	icebp  
  431f8b:	out    0x6c,eax
  431f8d:	enter  0xfa27,0xda
  431f91:	or     DWORD PTR [ebx-0x2cbd8cd],ebx
  431f97:	xor    DWORD PTR [ebp+0x2c],edx
  431f9a:	call   0x684cd629
  431f9f:	inc    ecx
  431fa0:	mov    al,ah
  431fa2:	(bad)  
  431fa3:	add    esp,DWORD PTR [esi-0x6d8cbdf]
  431fa9:	adc    al,0x3f
  431fab:	mov    esi,0xca2914ef
  431fb0:	mov    WORD PTR [eax-0x46dc37f5],es
  431fb6:	ins    DWORD PTR es:[edi],dx
  431fb7:	(bad)  
  431fb8:	mov    dh,0x1
  431fba:	add    DWORD PTR ds:0xf60914ce,ecx
  431fc0:	mov    dh,BYTE PTR [eax-0x483d00da]
  431fc6:	xchg   edx,eax
  431fc7:	jle    0x431f73
  431fc9:	mov    esp,0xc963
  431fce:	fidivr DWORD PTR [eax-0x872f017]
  431fd4:	sub    BYTE PTR [eax+edx*2],al
  431fd7:	xchg   ebx,eax
  431fd8:	adc    BYTE PTR [ecx],ch
  431fda:	out    0x21,eax
  431fdc:	test   al,0x28
  431fde:	xchg   ecx,eax
  431fdf:	adc    al,0xc9
  431fe1:	mov    dl,0xba
  431fe3:	and    DWORD PTR [eax+0x4e148128],eax
  431fe9:	adc    al,0x1d
  431feb:	dec    esp
  431fec:	jmp    0x340535f4
  431ff1:	sub    ebp,ebx
  431ff3:	dec    ebx
  431ff4:	enter  0xa428,0x21
  431ff8:	inc    esp
  431ff9:	sub    BYTE PTR [ecx+0x14],bl
  431ffc:	(bad)  
  431ffd:	sti    
  431ffe:	stos   BYTE PTR es:[edi],al
  431fff:	dec    ebx
  432000:	loop   0x432005
  432002:	xchg   edi,eax
  432003:	sar    ebx,0x2a
  432006:	xchg   ebx,eax
  432007:	adc    al,0xd3
  432009:	inc    edi
  43200a:	enter  0xffc9,0xe8
  43200e:	sbb    eax,0x1aaa56b2
  432013:	mov    ebp,ebx
  432015:	push   0xe8ff14bd
  43201a:	(bad)  
  43201b:	mov    WORD PTR [edx],es
  43201d:	mov    edx,0xe9877c91
  432022:	(bad)  
  432023:	or     DWORD PTR [edx+0x70],edx
  432026:	sbb    bl,BYTE PTR [ecx+eax*8]
  432029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43202a:	lods   eax,DWORD PTR ds:[esi]
  43202b:	adc    al,0x8b
  43202d:	lods   al,BYTE PTR ds:[esi]
  43202e:	mov    dh,0xc4
  432030:	xchg   BYTE PTR [esi],dh
  432032:	add    BYTE PTR [eax],al
  432034:	leave  
  432035:	retf   
  432036:	cld    
  432037:	lods   al,BYTE PTR es:[esi]
  432039:	mov    BYTE PTR [edi-0xb8a512],bh
  43203f:	call   0x587ac1a
  432044:	jmp    0xec4a7cad
  432049:	mov    ebp,edi
  43204b:	push   0xffffffef
  43204d:	adc    al,0x73
  43204f:	in     eax,dx
  432050:	push   eax
  432051:	add    esp,edi
  432053:	out    0x51,al
  432055:	adc    DWORD PTR [edx],edx
  432057:	pop    esp
  432058:	mov    ds:0xb8411bad,al
  43205d:	adc    al,0x2d
  43205f:	test   eax,0x954486a6
  432064:	push   0xd3c64a13
  432069:	icebp  
  43206a:	adc    DWORD PTR [ecx],ebp
  43206c:	rcl    DWORD PTR [edx-0x7dcb1a3d],1
  432072:	je     0x4320e9
  432074:	sub    al,0xc1
  432076:	jae    0x43207f
  432078:	pop    eax
  432079:	and    DWORD PTR [esi+ebp*8],edx
  43207c:	fstp   TBYTE PTR [edi-0x1]
  43207f:	call   0x5c52cc5a
  432084:	mov    ebp,DWORD PTR [esi]
  432086:	dec    edi
  432087:	add    cl,cl
  432089:	push   ebx
  43208a:	mov    dh,0x50
  43208c:	mov    ebx,0xfc161003
  432091:	or     eax,0xf608c47b
  432096:	add    BYTE PTR [ebx-0xb8f0000],cl
  43209c:	xchg   DWORD PTR [ebp+0x74],eax
  43209f:	imul   eax,DWORD PTR [ecx-0x8b4ebb],0x60f321fe
  4320a9:	shr    DWORD PTR [esi+ecx*1+0x68dc758b],0x87
  4320b1:	inc    ebp
  4320b2:	jb     0x4320a2
  4320b4:	xor    bl,BYTE PTR [ebx-0x46]
  4320b7:	loope  0x432102
  4320b9:	push   0xfffa29dc
  4320be:	imul   edx,DWORD PTR [ebx-0x52],0xceeefa8b
  4320c5:	pop    ebp
  4320c6:	(bad)  
  4320c8:	jle    0x43208a
  4320ca:	inc    eax
  4320cb:	or     al,0x7b
  4320cd:	jge    0x432093
  4320cf:	push   es
  4320d0:	je     0x432122
  4320d2:	aaa    
  4320d3:	inc    esp
  4320d4:	add    dl,BYTE PTR [ebx+0x54]
  4320d7:	push   ss
  4320d8:	jae    0x4320da
  4320da:	lods   al,BYTE PTR ds:[esi]
  4320db:	jo     0x4320e0
  4320dd:	pop    eax
  4320de:	daa    
  4320df:	fsubr  st(2),st
  4320e1:	lds    ebx,FWORD PTR [esp+ebp*8]
  4320e4:	cmc    
  4320e5:	test   BYTE PTR [eax+ebx*2],bh
  4320e8:	aaa    
  4320e9:	push   0x6d
  4320eb:	xchg   ecx,eax
  4320ec:	inc    ebx
  4320ed:	loopne 0x4320cb
  4320ef:	mov    gs,ebp
  4320f1:	call   0x3901d1
  4320f6:	or     DWORD PTR [ecx-0x36],ebx
  4320f9:	call   0x3b62e7
  4320fe:	add    BYTE PTR [eax],al
  432100:	cmp    cl,BYTE PTR [eax-0xb]
  432103:	adc    ch,0xfd
  432106:	and    al,BYTE PTR [edx+ebx*8]
  432109:	sahf   
  43210a:	fsqrt  
  43210c:	inc    edx
  43210d:	mov    ebp,ebp
  43210f:	mov    edi,0xbd3ce79b
  432114:	frstor [eax]
  432116:	cwde   
  432117:	add    BYTE PTR [eax-0x13],bl
  43211a:	and    ecx,DWORD PTR [edi+0x4e]
  43211d:	mov    bl,0x1b
  43211f:	add    al,0x18
  432121:	mov    bl,0x22
  432123:	out    0x31,al
  432125:	mov    ebx,0xa5580bb0
  43212a:	add    edi,ebx
  43212c:	add    cl,bl
  43212e:	and    dh,BYTE PTR [ebp+ecx*8-0x48]
  432132:	sub    esi,esp
  432134:	repnz fidiv DWORD PTR [esi-0x42]
  432138:	test   ebx,esp
  43213a:	mov    al,0xf7
  43213c:	push   eax
  43213d:	gs dec esi
  43213f:	cli    
  432140:	pusha  
  432141:	and    al,0xce
  432143:	out    0xec,eax
  432145:	jle    0x43216b
  432147:	cli    
  432148:	retf   0xd3b6
  43214b:	cli    
  43214c:	ret    0x7608
  43214f:	xlat   BYTE PTR ds:[ebx]
  432150:	xchg   edx,eax
  432151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432152:	add    edi,ebx
  432154:	mov    dl,0x18
  432156:	jbe    0x4320ea
  432158:	adc    eax,0x9e451623
  43215d:	and    DWORD PTR es:[ebp-0x2b],esp
  432161:	popf   
  432162:	mov    edi,0x250000df
  432167:	lods   al,BYTE PTR ds:[esi]
  432168:	sub    edi,esp
  43216a:	dec    ecx
  43216b:	aas    
  43216c:	and    edx,edi
  43216e:	push   eax
  43216f:	into   
  432170:	push   ebx
  432171:	out    0xdf,eax
  432173:	out    dx,al
  432174:	and    edx,edi
  432176:	pop    edi
  432177:	fs adc eax,0x12ac0097
  43217d:	xor    BYTE PTR [ecx+0xa],0x9d
  432181:	add    ch,dl
  432183:	or     DWORD PTR [esi],esi
  432185:	iret   
  432186:	dec    edi
  432187:	imul   DWORD PTR [ecx+edx*1-0x6b]
  43218b:	or     DWORD PTR [esi-0x48],ebx
  43218e:	fiadd  DWORD PTR [edx+0x853182b]
  432194:	jp     0x432209
  432196:	pop    edx
  432197:	or     ch,cl
  432199:	add    ebx,DWORD PTR [eax-0x49]
  43219c:	jl     0x432139
  43219e:	repnz xchg esi,eax
  4321a0:	call   0xc148d4a8
  4321a5:	sbb    edx,esp
  4321a7:	test   eax,0x4a562652
  4321ac:	sar    esi,cl
  4321ae:	mov    al,0x49
  4321b0:	dec    edi
  4321b1:	dec    esp
  4321b2:	cli    
  4321b3:	adc    al,ch
  4321b5:	jp     0x43218b
  4321b7:	adc    BYTE PTR [ebx-0x5335ac05],bh
  4321bd:	adc    BYTE PTR [ecx+0x79782111],0x19
  4321c4:	adc    BYTE PTR ds:0x7f110faa,ah
  4321ca:	add    BYTE PTR [eax],al
  4321cc:	mov    dl,BYTE PTR [ebp+0x1a492607]
  4321d2:	ins    DWORD PTR es:[edi],dx
  4321d3:	rol    dh,0x21
  4321d6:	and    ebp,ebx
  4321d8:	scas   eax,DWORD PTR es:[edi]
  4321d9:	adc    BYTE PTR [ebp+0x4b],bl
  4321dc:	push   ecx
  4321dd:	xor    al,0xd9
  4321df:	jne    0x43223c
  4321e1:	or     ecx,ebp
  4321e3:	add    ecx,DWORD PTR [eax+0x4e]
  4321e6:	in     al,dx
  4321e7:	sub    DWORD PTR [edi-0x49893ff0],ecx
  4321ed:	adc    cl,cl
  4321ef:	jns    0x432202
  4321f1:	sbb    cl,BYTE PTR [esi+0x3]
  4321f4:	dec    eax
  4321f5:	xchg   BYTE PTR [edx+ebp*1],ch
  4321f8:	outs   dx,DWORD PTR ds:[esi]
  4321f9:	adc    bh,bh
  4321fb:	sbb    ah,ch
  4321fd:	(bad)
  432200:	adc    al,0x29
  432202:	ins    BYTE PTR es:[edi],dx
  432203:	jmp    0x4321b5
  432205:	adc    eax,DWORD PTR [esi+0x363744a1]
  43220b:	xchg   edx,eax
  43220c:	test   DWORD PTR [esi-0x2f42197a],ebp
  432212:	sbb    esi,DWORD PTR [eax+0x12]
  432215:	and    BYTE PTR [esi],dh
  432217:	and    al,0xcd
  432219:	pushf  
  43221a:	add    DWORD PTR [edx+0x62],ebp
  43221d:	sbb    dl,bh
  43221f:	adc    BYTE PTR [edi],0xbf
  432222:	addr16 xor ecx,edx
  432225:	or     DWORD PTR [eax],eax
  432227:	mov    dh,0xee
  432229:	idiv   dl
  43222b:	push   esp
  43222c:	mov    al,0xd7
  43222e:	mov    esi,0x30000d5
  432233:	rcl    DWORD PTR [edi-0xb],1
  432236:	sub    edi,esi
  432238:	dec    esi
  432239:	rcl    DWORD PTR [edx-0x45],cl
  43223c:	out    0xe1,eax
  43223e:	mov    cl,0xd
  432240:	cli    
  432241:	repnz xchg ebp,eax
  432243:	pushf  
  432244:	push   cs
  432245:	loopne 0x432255
  432247:	add    al,0x74
  432249:	out    dx,eax
  43224a:	dec    ebp
  43224b:	dec    esp
  43224c:	xchg   BYTE PTR [edi],ah
  43224e:	jmp    0xf85219c4
  432253:	add    DWORD PTR [ecx+eax*1-0x24],0x5d1151fd
  43225b:	adc    eax,0xc5e9f6fa
  432260:	imul   eax
  432262:	(bad)  
  432263:	or     DWORD PTR [eax],eax
  432265:	out    0xa9,al
  432267:	daa    
  432268:	inc    esp
  432269:	jecxz  0x432226
  43226b:	adc    edx,DWORD PTR [edx-0x3f]
  43226e:	jno    0x432285
  432270:	cld    
  432271:	into   
  432272:	mov    ecx,0xa400ef95
  432277:	push   ds
  432278:	hlt    
  432279:	std    
  43227a:	xor    edx,DWORD PTR [edx-0x22560100]
  432280:	or     DWORD PTR [ebp+0x74],0x447c3a92
  432287:	mov    bh,0xd2
  432289:	(bad)  
  43228a:	jae    0x4322a6
  43228c:	mov    edx,0xffdde183
  432291:	push   cs
  432292:	enter  0x55ca,0x5b
  432296:	add    BYTE PTR [eax],al
  432298:	test   ecx,ecx
  43229a:	(bad)  
  43229b:	inc    esi
  43229d:	stc    
  43229e:	out    0xbe,eax
  4322a0:	stc    
  4322a1:	in     al,0xf5
  4322a3:	push   eax
  4322a4:	or     DWORD PTR [ebp-0x2],0x13ffb34f
  4322ab:	push   ss
  4322ac:	cmp    al,0xb
  4322ae:	jnp    0x432274
  4322b0:	lock (bad) 
  4322b2:	mov    edx,0xba18fb74
  4322b7:	jmp    0x432d68
  4322bc:	add    ebx,DWORD PTR [esi+0x404f1c3d]
  4322c2:	sub    ebp,ebp
  4322c4:	dec    edx
  4322c5:	ins    DWORD PTR es:[edi],dx
  4322c6:	xor    ebp,eax
  4322c8:	cmp    BYTE PTR [ecx+eax*4],bh
  4322cb:	dec    esp
  4322cc:	cwde   
  4322cd:	cli    
  4322ce:	or     BYTE PTR [ecx],0x5a
  4322d1:	and    edi,DWORD PTR [edi]
  4322d3:	sbb    BYTE PTR [ecx+0x4f],ch
  4322d6:	fs add esp,esp
  4322d9:	xor    ebx,DWORD PTR [edi-0x2]
  4322dc:	mov    bl,0x96
  4322de:	jmp    0x6239:0x325fa93b
  4322e5:	sub    BYTE PTR fs:[ebp+0x7b7b0212],cl
  4322ec:	js     0x432308
  4322ee:	jae    0x43230d
  4322f0:	aad    0xab
  4322f2:	add    al,BYTE PTR [ebp+0x7ef6b495]
  4322f8:	xchg   ebp,eax
  4322f9:	sbb    al,0xac
  4322fb:	add    eax,DWORD PTR [eax]
  4322fd:	add    BYTE PTR ds:0x517c69e,al
  432303:	pop    eax
  432304:	clc    
  432305:	adc    ecx,ebx
  432307:	loopne 0x43230c
  432309:	jg     0x43229c
  43230b:	adc    al,0x87
  43230d:	mov    edi,0x7ec8f2c9
  432312:	push   ss
  432313:	sub    cl,bl
  432315:	sub    ecx,eax
  432317:	push   ebp
  432318:	mov    ch,0xe7
  43231a:	pop    esp
  43231b:	mov    DWORD PTR [eax],esp
  43231d:	cli    
  43231e:	loop   0x4322f7
  432320:	(bad)  
  432321:	sub    esi,esp
  432323:	test   DWORD PTR [ebp-0x4cebe7ca],esp
  432329:	xchg   BYTE PTR [ecx-0x23790c04],cl
  43232f:	inc    esi
  432330:	fild   DWORD PTR [eax-0x11]
  432333:	sub    eax,0xc8d765c7
  432338:	push   eax
  432339:	pop    edi
  43233a:	sti    
  43233b:	(bad)  
  43233c:	mov    ch,bh
  43233e:	scas   al,BYTE PTR es:[edi]
  43233f:	aad    0x97
  432341:	aaa    
  432342:	lods   al,BYTE PTR ds:[esi]
  432343:	push   es
  432344:	sahf   
  432345:	sub    DWORD PTR [eax+0x7e],edx
  432348:	add    bh,BYTE PTR [edi+0x5e]
  43234b:	sbb    al,0xfa
  43234d:	je     0x43233f
  43234f:	xchg   edi,eax
  432350:	add    al,BYTE PTR [ebp+0x7ef56f95]
  432356:	xchg   ebp,eax
  432357:	sub    ebp,DWORD PTR [edi+ecx*1+0x19c69625]
  43235e:	add    eax,0x13f70c
  432363:	add    bl,al
  432365:	(bad)  
  432366:	(bad)  
  432367:	jle    0x432302
  432369:	das    
  43236a:	xchg   DWORD PTR [edi-0x3704f5df],edi
  432370:	adc    ecx,DWORD PTR [ecx-0x10]
  432373:	fidivr WORD PTR [ebp+ecx*4-0x30854645]
  43237a:	iret   
  43237b:	and    BYTE PTR [edi-0x28],bh
  43237e:	test   al,0xc1
  432380:	adc    DWORD PTR [ecx-0x4c2af85a],esi
  432386:	shl    dl,0x5d
  432389:	pop    gs
  43238b:	push   ebx
  43238c:	aad    0x20
  43238e:	cwde   
  43238f:	mov    ecx,0x8e9f80a7
  432394:	(bad)  
  432395:	cdq    
  432396:	test   eax,0x2875510a
  43239b:	add    al,0x50
  43239d:	adc    al,0xfc
  43239f:	or     BYTE PTR ds:0x2f22a767,bh
  4323a5:	cmp    DWORD PTR [ecx+0x2b],0x2269f437
  4323ac:	and    al,0xc6
  4323ae:	or     al,0x10
  4323b0:	aam    0x95
  4323b2:	loop   0x43236e
  4323b4:	repnz or dl,BYTE PTR [eax+0x20]
  4323b8:	inc    DWORD PTR [eax+0x479cc221]
  4323be:	in     al,dx
  4323bf:	add    ecx,DWORD PTR [eax-0x644bb380]
  4323c5:	mov    bl,0x99
  4323c7:	and    al,BYTE PTR [eax]
  4323c9:	add    BYTE PTR [ecx-0x13],ch
  4323cc:	cmc    
  4323cd:	fist   WORD PTR ds:[esi+0xcca8f00]
  4323d4:	xchg   ebx,eax
  4323d5:	test   edi,0x4922f896
  4323db:	dec    BYTE PTR [ecx]
  4323dd:	cwde   
  4323de:	sar    BYTE PTR [eax+0x99c2b95],cl
  4323e4:	jmp    0xff5c75ec
  4323e9:	mov    cl,0xcb
  4323eb:	cwde   
  4323ec:	jp     0x432375
  4323ee:	jns    0x43239f
  4323f0:	pop    ds
  4323f1:	pop    ebp
  4323f2:	test   eax,0x9f6c0fa6
  4323f7:	enter  0x394e,0xb4
  4323fb:	cmc    
  4323fc:	pop    ss
  4323fd:	not    DWORD PTR [esi-0x3a5282f4]
  432403:	mov    ds:0x813f20fd,eax
  432408:	inc    ecx
  432409:	sub    eax,0x84257c4
  43240e:	das    
  43240f:	or     DWORD PTR [edx-0x37],0x7c
  432413:	dec    ecx
  432414:	loopne 0x432407
  432416:	jl     0x43241b
  432418:	ror    DWORD PTR [edi],0x4e
  43241b:	retf   0x6241
  43241e:	or     al,0xf0
  432420:	mov    BYTE PTR [edi],ch
  432422:	and    DWORD PTR [edx-0x67f2e1c8],ebp
  432428:	ds add edx,ebp
  43242b:	jle    0x43246e
  43242d:	adc    eax,0xbc600000
  432432:	cli    
  432433:	cld    
  432434:	push   cs
  432435:	cli    
  432436:	aas    
  432437:	jmp    0xc34e6c8d
  43243c:	std    
  43243d:	mov    bl,0x61
  43243f:	pusha  
  432440:	(bad)  
  432442:	or     bh,BYTE PTR [edi+0x1c]
  432445:	aad    0x61
  432447:	jb     0x43244d
  432449:	fsub   DWORD PTR [ecx+0x28]
  43244c:	mov    dh,0x4
  43244e:	(bad)
  432453:	(bad)  
  432454:	pop    edi
  432455:	leave  
  432456:	push   ecx
  432457:	push   0x1c
  432459:	out    0x8c,eax
  43245b:	scas   eax,DWORD PTR es:[edi]
  43245c:	cmp    BYTE PTR [eax-0x4c689fb1],0xfa
  432463:	add    BYTE PTR [ecx-0x43bfefe9],dl
  432469:	xchg   BYTE PTR [esi+0x6648350c],bh
  43246f:	pop    edi
  432470:	aaa    
  432471:	rcr    BYTE PTR [eax+0x5b],0x15
  432475:	dec    ebx
  432476:	mov    esp,0x81547c18
  43247b:	in     al,dx
  43247c:	mov    ebp,0x6db70556
  432481:	ss int3 
  432483:	adc    DWORD PTR [ebp+eax*1+0x3be50875],0xfffffff2
  43248b:	mov    ecx,eax
  43248d:	jmp    0xef323073
  432492:	or     eax,0x42000075
  432497:	adc    BYTE PTR [ebx-0x8],0xc5
  43249b:	cmp    esi,esi
  43249d:	push   edx
  43249e:	imul   esi,DWORD PTR [esi+ecx*1-0x1],0xffffffe1
  4324a3:	adc    eax,0xfb31ff4c
  4324a8:	div    BYTE PTR [ebp+0x24]
  4324ab:	jmp    0xe8f2:0x73abfc73
  4324b2:	xor    BYTE PTR [edi],al
  4324b4:	add    BYTE PTR [eax],al
  4324b6:	(bad)
  4324b9:	add    BYTE PTR [ecx+0x7e],al
  4324bc:	out    0x81,al
  4324be:	cwde   
  4324bf:	cli    
  4324c0:	add    BYTE PTR [eax],al
  4324c2:	in     al,dx
  4324c3:	push   ebp
  4324c4:	mov    cl,0x64
  4324c6:	add    DWORD PTR [edi],eax
  4324c8:	add    BYTE PTR [esi+0x43],dl
  4324cb:	xor    BYTE PTR [ebx+0x20],bl
  4324ce:	and    ebp,DWORD PTR [ecx+0x64]
  4324d1:	je     0x432467
  4324d3:	mov    ebp,0x7dfbfded
  4324d8:	jmp    0xd574:0xed2deb33
  4324df:	push   ss
  4324e0:	es data16 loopne 0x4324df
  4324e4:	pop    ds
  4324e5:	cs xchg ebp,eax
  4324e7:	cdq    
  4324e8:	mov    al,ds:0x8a22926f
  4324ed:	xchg   edx,eax
  4324ee:	adc    eax,0x1388a821
  4324f3:	gs test al,0x88
  4324f6:	sbb    ecx,ebp
  4324f8:	xchg   cl,bh
  4324fa:	add    BYTE PTR [eax],al
  4324fc:	push   eax
  4324fd:	sub    edx,DWORD PTR [edi-0x184aaab0]
  432503:	inc    DWORD PTR [esi]
  432505:	aad    0xab
  432507:	(bad)  
  432508:	aad    0x20
  43250a:	(bad)  
  43250b:	out    0x40,eax
  43250d:	push   ebx
  43250e:	and    dl,bh
  432510:	dec    esi
  432511:	push   eax
  432512:	mov    cl,dh
  432514:	loope  0x432545
  432516:	es xor ch,al
  432519:	arpl   WORD PTR [edx],bx
  43251b:	cs adc eax,0xc9c40163
  432521:	loopne 0x432526
  432523:	bound  ecx,QWORD PTR [edx+eiz*8-0x35]
  432527:	out    0xd7,al
  432529:	dec    edi
  43252a:	adc    al,0x88
  43252c:	mov    ds:0xa9f18710,al
  432531:	sub    eax,DWORD PTR [ebp-0x757d20e]
  432537:	cli    
  432538:	adc    bl,BYTE PTR [ebx+eax*2-0x6d68268d]
  43253f:	outs   dx,DWORD PTR ds:[esi]
  432540:	in     eax,dx
  432541:	xor    esi,edi
  432543:	cli    
  432544:	cli    
  432545:	mov    ds:0x97c47443,eax
  43254a:	add    ah,BYTE PTR [esi-0x2c]
  43254d:	xchg   edi,eax
  43254e:	dec    edx
  43254f:	cli    
  432550:	lds    ecx,FWORD PTR [edi]
  432552:	ds pop edx
  432554:	jnp    0x4325cd
  432556:	dec    ebx
  432557:	mov    ebp,0x8ae709f5
  43255c:	sbb    DWORD PTR [edx],ebp
  43255e:	pop    edi
  43255f:	xor    al,0x0
  432561:	add    ch,dl
  432563:	or     edi,esp
  432565:	ficom  DWORD PTR [edx-0x64252d82]
  43256b:	jle    0x432523
  43256d:	nop
  43256e:	inc    ebp
  43256f:	shl    bh,cl
  432571:	add    edx,ebp
  432573:	sbb    BYTE PTR [edx],bh
  432575:	adc    ah,bl
  432577:	shr    DWORD PTR [esp+ecx*1-0x9],1
  43257b:	inc    esp
  43257c:	xlat   BYTE PTR ds:[ebx]
  43257d:	xchg   edx,eax
  43257e:	fst    DWORD PTR [ecx+eiz*4-0x566b32d6]
  432585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432586:	ret    
  432587:	cld    
  432588:	push   ebp
  432589:	add    bl,BYTE PTR [edx-0x33]
  43258c:	or     eax,0xa7bfdf45
  432591:	test   eax,0x2c85f1d5
  432596:	pop    ecx
  432597:	or     DWORD PTR [edi-0x30],ebx
  43259a:	repnz xchg ecx,eax
  43259c:	sub    al,0xe8
  43259e:	xor    ecx,DWORD PTR [esi]
  4325a0:	mov    eax,ds:0xe209f6c8
  4325a5:	push   ebp
  4325a6:	xchg   ecx,eax
  4325a7:	sub    eax,0x70140301
  4325ac:	inc    bx
  4325ae:	(bad)  
  4325af:	outs   dx,DWORD PTR ds:[esi]
  4325b0:	jo     0x432578
  4325b2:	(bad)  
  4325b3:	sbb    BYTE PTR [edx],bh
  4325b5:	inc    ebx
  4325b6:	mov    dh,cl
  4325b8:	jnp    0x4325cf
  4325ba:	adc    DWORD PTR [ecx],ecx
  4325bc:	jno    0x432584
  4325be:	fimul  DWORD PTR [esi-0x72b268d9]
  4325c4:	aam    0xb
  4325c6:	add    BYTE PTR [eax],al
  4325c8:	aad    0x94
  4325ca:	in     al,dx
  4325cb:	repz les ecx,FWORD PTR [ecx-0x19]
  4325cf:	xchg   edi,eax
  4325d0:	fdiv   QWORD PTR [ebx-0x29]
  4325d3:	push   ds
  4325d4:	imul   edx,DWORD PTR [ecx],0x4d136400
  4325da:	push   eax
  4325db:	cs pop es
  4325dd:	mov    ah,al
  4325df:	cmc    
  4325e0:	push   edi
  4325e1:	test   DWORD PTR [ecx+ebp*8],ecx
  4325e4:	push   0x12
  4325e6:	data16 cmc 
  4325e8:	fstp   TBYTE PTR [ebp+0xc]
  4325eb:	pop    esp
  4325ec:	fwait
  4325ed:	pop    esp
  4325ee:	push   eax
  4325ef:	push   es
  4325f0:	out    0x87,eax
  4325f2:	(bad)  
  4325f3:	in     eax,dx
  4325f4:	ret    
  4325f5:	jge    0x43260b
  4325f7:	arpl   WORD PTR [ebp-0x798b06e8],cx
  4325fd:	xor    al,0x2e
  4325ff:	out    0x62,al
  432601:	sub    al,0x8b
  432603:	mov    edi,DWORD PTR es:[ebp+0x18]
  432607:	rol    DWORD PTR [ebx],0x1e
  43260a:	stc    
  43260b:	into   
  43260c:	pop    ecx
  43260d:	test   DWORD PTR [eax],ebx
  43260f:	in     eax,dx
  432610:	inc    eax
  432611:	or     al,0x2d
  432613:	test   eax,0x7f090cac
  432618:	xchg   edx,eax
  432619:	and    BYTE PTR [eax+0x3ef4826],cl
  43261f:	xchg   ecx,eax
  432620:	imul   ebx,DWORD PTR ds:0x7b4c9ef9,0x10
  432627:	add    eax,DWORD PTR [ebp-0x6b]
  43262a:	inc    ecx
  43262b:	test   DWORD PTR [eax],0xf95a6600
  432631:	call   0x349b:0x6a207dc8
  432638:	stc    
  432639:	cld    
  43263a:	sbb    bl,BYTE PTR [edx-0x7]
  43263d:	call   0x7ed4:0xd43bbe0
  432644:	and    BYTE PTR [edx-0x73],ch
  432647:	and    BYTE PTR [esi-0x18],ah
  43264a:	inc    esi
  43264b:	pop    edx
  43264c:	call   0xfa48e645
  432651:	add    bl,ah
  432653:	pop    esp
  432654:	dec    esi
  432655:	adc    al,0xbb
  432657:	nop
  432658:	icebp  
  432659:	(bad)  
  43265a:	mov    ds:0xbcfffd26,eax
  43265f:	or     eax,DWORD PTR [ebx-0x7eea972e]
  432665:	ja     0x432623
  432667:	cwde   
  432668:	test   al,bh
  43266a:	loop   0x432690
  43266c:	imul   al
  43266e:	cli    
  43266f:	sbb    ah,bh
  432671:	jmp    DWORD PTR [edi]
  432673:	dec    ebp
  432674:	call   0xf669c95c
  432679:	push   ebp
  43267a:	aaa    
  43267b:	cmp    bh,BYTE PTR [edx-0x14]
  43267e:	mov    al,ds:0xac8b4ebd
  432683:	mov    cl,0x15
  432685:	lea    edi,[ecx+0x16564931]
  43268b:	and    eax,0xa3ff2a
  432690:	into   
  432691:	adc    DWORD PTR [eax],eax
  432693:	add    BYTE PTR [ebp+ecx*1-0x12573f7d],bh
  43269a:	cmp    BYTE PTR [ebp+0x18],0xb
  43269e:	adc    BYTE PTR [eax],al
  4326a0:	cmp    al,0xa0
  4326a2:	push   cs
  4326a3:	idiv   ecx
  4326a5:	and    eax,0xb2c0100
  4326aa:	jae    0x4326ba
  4326ac:	pop    ss
  4326ad:	mov    al,ds:0x1df98bdd
  4326b2:	xor    al,dh
  4326b4:	sub    cl,BYTE PTR [edi]
  4326b6:	and    esi,eax
  4326b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4326b9:	and    al,BYTE PTR [edx-0x37383c39]
  4326bf:	ret    
  4326c0:	jmp    0xa0c70c55
  4326c5:	test   BYTE PTR [edi+0x33],0xaa
  4326c9:	xchg   ecx,eax
  4326ca:	mov    edx,0x15e5d589
  4326cf:	out    0x3d,eax
  4326d1:	pop    eax
  4326d2:	sbb    al,0xfa
  4326d4:	push   esi
  4326d5:	dec    ecx
  4326d6:	sti    
  4326d7:	or     dl,BYTE PTR [edi+0x3f]
  4326da:	std    
  4326db:	call   ebp
  4326dd:	ins    DWORD PTR es:[edi],dx
  4326de:	ret    0x25fb
  4326e1:	retf   
  4326e2:	mov    ebp,0xa7c3eb65
  4326e7:	cli    
  4326e8:	ret    0x39fd
  4326eb:	adc    BYTE PTR ds:0xe2bf82f1,dl
  4326f1:	ins    BYTE PTR es:[edi],dx
  4326f2:	cmp    bh,bh
  4326f4:	stos   BYTE PTR es:[edi],al
  4326f5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4326f7:	push   ds
  4326f8:	add    BYTE PTR [eax],al
  4326fa:	push   eax
  4326fb:	lods   eax,DWORD PTR ds:[esi]
  4326fc:	xor    DWORD PTR [ebp+0x45],esp
  4326ff:	mov    al,ds:0xdeed141c
  432704:	mov    ebp,0x8b457ff
  432709:	push   edx
  43270a:	out    dx,eax
  43270b:	push   es
  43270c:	mov    DWORD PTR [ecx+eiz*4+0x40],eax
  432710:	mov    cl,0x65
  432712:	jb     0x4326eb
  432714:	out    dx,eax
  432715:	xlat   BYTE PTR ds:[ebx]
  432716:	les    esi,FWORD PTR [eax]
  432718:	add    al,0x85
  43271a:	xchg   ebp,eax
  43271b:	idiv   DWORD PTR [ecx-0x63]
  43271e:	aad    0xf0
  432720:	std    
  432721:	push   edx
  432722:	pusha  
  432723:	xor    eax,0xb75e5130
  432728:	mov    ah,0xe6
  43272a:	add    eax,0x3b7e0df4
  43272f:	inc    BYTE PTR [esi]
  432731:	and    DWORD PTR [ecx-0x10],0xfffffffd
  432735:	call   FWORD PTR [edi-0x1]
  432738:	jge    0x432732
  43273a:	sub    al,0xfc
  43273c:	add    BYTE PTR [eax+0xc8f881c],al
  432742:	push   esi
  432743:	js     0x432744
  432745:	je     0x432724
  432747:	or     DWORD PTR [esi+0x47],ebp
  43274a:	mov    ebx,0x9604eb4c
  43274f:	or     BYTE PTR [ebp-0x1af88dfd],bh
  432755:	xchg   esi,eax
  432756:	lds    edx,FWORD PTR [ebx+eax*8+0x4f5e06d0]
  43275d:	stos   DWORD PTR es:[edi],eax
  43275e:	add    BYTE PTR [eax],al
  432760:	ins    DWORD PTR es:[edi],dx
  432761:	or     edi,esp
  432763:	xchg   dl,cl
  432765:	add    eax,0x61b341b5
  43276a:	outs   dx,BYTE PTR ds:[esi]
  43276b:	inc    edi
  43276c:	sti    
  43276d:	dec    esi
  43276e:	jmp    0x4326f8
  432770:	cmp    al,0xf
  432772:	data16 sub al,0xd9
  432775:	xchg   edx,eax
  432776:	mov    ds:0x745d81d0,eax
  43277b:	rol    DWORD PTR [esi-0x316f05a6],0xcb
  432782:	stos   DWORD PTR es:[edi],eax
  432783:	shl    BYTE PTR [esi-0x92ea10d],1
  432789:	sbb    ah,BYTE PTR [edi]
  43278b:	add    al,0xfb
  43278d:	add    al,0xdb
  43278f:	xor    DWORD PTR [ecx-0x36],edx
  432792:	pop    ebx
  432793:	aad    0x5b
  432795:	dec    edi
  432796:	fucomip st,st(6)
  432798:	sub    ecx,DWORD PTR [ecx-0x791dff31]
  43279e:	xlat   BYTE PTR ds:[ebx]
  43279f:	add    edx,DWORD PTR [edi+0x5d2c9b4f]
  4327a5:	dec    edi
  4327a6:	xchg   esp,eax
  4327a7:	(bad)  
  4327a8:	rcl    BYTE PTR [eax-0x2ea5f7c4],cl
  4327ae:	call   0xd9ad:0xe76fcab0
  4327b5:	xchg   esi,eax
  4327b6:	and    al,0x30
  4327b8:	call   0x64dc:0x1f1b0d58
  4327bf:	inc    ebx
  4327c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4327c1:	or     BYTE PTR [eax],al
  4327c3:	pusha  
  4327c4:	add    BYTE PTR [eax],al
  4327c6:	ins    DWORD PTR es:[edi],dx
  4327c7:	std    
  4327c8:	pop    ecx
  4327c9:	pop    esp
  4327ca:	adc    eax,0x65665101
  4327cf:	add    DWORD PTR [edi-0x1],esp
  4327d2:	inc    ebx
  4327d3:	outs   dx,DWORD PTR ds:[esi]
  4327d4:	stc    
  4327d5:	push   esi
  4327d6:	in     eax,0xe0
  4327d8:	pop    gs
  4327da:	(bad)  
  4327db:	mov    WORD PTR [ebx+0x41],es
  4327de:	sbb    al,0xd2
  4327e0:	mov    esi,0xf98cd6ed
  4327e5:	pushf  
  4327e6:	arpl   ax,si
  4327e8:	jg     0x432827
  4327ea:	push   es
  4327eb:	pop    es
  4327ec:	cli    
  4327ed:	jmp    0xaaed2d2b
  4327f2:	(bad)  
  4327f3:	xor    al,0xc3
  4327f5:	pusha  
  4327f6:	xchg   ebp,eax
  4327f7:	add    BYTE PTR [eax-0x5fa099c],cl
  4327fd:	push   es
  4327fe:	push   ecx
  4327ff:	xchg   ebp,eax
  432800:	fdiv   st(4),st
  432802:	mov    esp,0xce5c87ff
  432807:	add    eax,0xa55eeefa
  43280c:	aam    0xe4
  43280e:	fdiv   st(7),st
  432810:	xchg   DWORD PTR [ecx+eax*8+0x5ed6fa05],edx
  432817:	(bad)
  43281a:	int3   
  43281b:	jmp    DWORD PTR [edx+0x75]
  43281e:	repnz cld 
  432820:	sti    
  432821:	mov    esi,0x648c6abc
  432826:	std    
  432827:	add    eax,0xaefa
  43282c:	ja     0x4327be
  43282e:	fwait
  43282f:	mov    cl,0xea
  432831:	(bad)  
  432832:	stc    
  432833:	pop    es
  432834:	dec    ebp
  432835:	(bad)  
  432836:	les    edx,FWORD PTR [esp+ecx*8-0x75a29d01]
  43283d:	(bad)  
  43283e:	sti    
  43283f:	add    BYTE PTR [ebx+0x22],bl
  432842:	pop    edi
  432843:	mov    WORD PTR [ecx-0x7400039f],cs
  432849:	add    DWORD PTR [esi-0x9e3737b],0xfdc487ff
  432853:	mov    BYTE PTR [ecx+0x35],dh
  432856:	cld    
  432857:	dec    DWORD PTR [ebx-0x4cfbbb74]
  43285d:	test   BYTE PTR [ecx],ch
  43285f:	std    
  432860:	fwait
  432861:	and    al,BYTE PTR [eax]
  432863:	add    ch,ch
  432865:	pop    es
  432866:	xchg   DWORD PTR [ebp-0x9e4f0],eax
  43286c:	aaa    
  43286d:	into   
  43286e:	cmc    
  43286f:	push   0x39fab4
  432874:	inc    ebp
  432875:	sbb    ebp,0xfffffffd
  432878:	retf   
  432879:	and    dh,dh
  43287b:	adc    eax,0x39f6cc
  432880:	daa    
  432881:	retf   
  432882:	cmc    
  432883:	xor    ebp,ecx
  432885:	xor    eax,0x77c0007
  43288a:	mov    ebx,0x8b5420f7
  432890:	add    BYTE PTR [eax],al
  432892:	test   al,0xbc
  432894:	call   0xf665c3e8
  432899:	int3   
  43289a:	(bad)  
  43289b:	or     al,BYTE PTR [eax]
  43289d:	mov    al,0xbf
  43289f:	or     eax,0x72e0373
  4328a4:	add    cl,ch
  4328a6:	loopne 0x4328b0
  4328a8:	add    BYTE PTR [eax],al
  4328aa:	mov    bh,0x21
  4328ac:	dec    edi
  4328ad:	mov    ecx,DWORD PTR [esi+0x4374c0e6]
  4328b3:	test   bh,ch
  4328b5:	je     0x4328f6
  4328b7:	mov    esi,0x66d5ff82
  4328bc:	test   BYTE PTR [ebp+0x49f568c5],0x4d
  4328c3:	loop   0x432882
  4328c5:	inc    eax
  4328c6:	push   eax
  4328c7:	jnp    0x432853
  4328c9:	lock scas al,BYTE PTR es:[edi]
  4328cb:	sbb    al,BYTE PTR [ebx-0x35]
  4328ce:	sbb    DWORD PTR [ebp+0x3d11cb41],esp
  4328d4:	inc    ecx
  4328d5:	retf   
  4328d6:	or     DWORD PTR ds:0x6821cb41,esi
  4328dc:	sbb    BYTE PTR [esi+ebx*2+0x45],dl
  4328e0:	scas   al,BYTE PTR es:[edi]
  4328e1:	xchg   BYTE PTR [eax-0x22794f08],cl
  4328e7:	pop    es
  4328e8:	sbb    dh,BYTE PTR [ecx+0x43]
  4328eb:	push   0xec580bc2
  4328f0:	or     ecx,DWORD PTR [edi+0x4c]
  4328f3:	mov    ch,0x11
  4328f5:	push   ecx
  4328f6:	add    BYTE PTR [eax],al
  4328f8:	scas   al,BYTE PTR es:[edi]
  4328f9:	out    dx,eax
  4328fa:	or     BYTE PTR [eax-0x2b],0x67
  4328fe:	mov    bh,bl
  432900:	pop    esi
  432901:	ss fdivr st(2),st
  432904:	sub    dl,bl
  432906:	and    BYTE PTR [ebx-0x20f0f],0xd5
  43290d:	addr16 ret 0x2613
  432911:	fwait
  432912:	scas   al,BYTE PTR es:[edi]
  432913:	cli    
  432914:	sub    BYTE PTR [ecx],al
  432916:	jg     0x4328db
  432918:	leave  
  432919:	ins    DWORD PTR es:[edi],dx
  43291a:	inc    esp
  43291b:	jns    0x4328f4
  43291d:	addr16 xor bh,dh
  432920:	loope  0x432906
  432922:	(bad)  
  432923:	bnd jmp 0x4328f9
  432926:	test   DWORD PTR [ecx+ecx*8+0x77],ecx
  43292a:	scas   eax,DWORD PTR es:[edi]
  43292b:	pop    es
  43292c:	pop    esi
  43292d:	rol    DWORD PTR [ebp-0x6f6bf13e],0x1a
  432934:	pop    eax
  432935:	or     DWORD PTR [eax-0x51711c70],esi
  43293b:	jmp    0x43295c
  43293d:	cdq    
  43293e:	pop    ebp
  43293f:	cld    
  432940:	push   eax
  432941:	sbb    eax,0x8be8be8
  432946:	xor    DWORD PTR [edx+ecx*8-0x76f19bb7],ecx
  43294d:	stc    
  43294e:	pop    esi
  43294f:	leave  
  432950:	fimul  WORD PTR [esi+0xba0c14]
  432956:	pop    ds
  432957:	sbb    al,BYTE PTR [edi+0xbab9ad]
  43295d:	add    BYTE PTR [edi+0x2bb94c8e],cl
  432963:	aad    0x1b
  432965:	dec    eax
  432966:	push   cs
  432967:	aad    0x33
  432969:	dec    eax
  43296a:	push   cs
  43296b:	aad    0x2b
  43296d:	dec    eax
  43296e:	sahf   
  43296f:	into   
  432970:	pop    esi
  432971:	pop    ss
  432972:	and    DWORD PTR [ebp+0xaae853b],edx
  432978:	call   0x6e9ffe80
  43297d:	mov    ecx,0x995e58da
  432982:	fiadd  WORD PTR [esi-0x79056ed2]
  432988:	add    dl,BYTE PTR [eax+0x7d500f6]
  43298e:	out    0x49,eax
  432990:	out    0xa9,eax
  432992:	mov    dh,BYTE PTR [ebx-0x19]
  432995:	test   eax,0xa9e77382
  43299a:	jp     0x432964
  43299c:	out    0xed,eax
  43299e:	jb     0x4329a1
  4329a0:	call   0xcb43a5d0
  4329a5:	push   ss
  4329a6:	jecxz  0x43296d
  4329a8:	(bad)  [esi-0x473b6afd]
  4329ae:	xchg   ebx,eax
  4329af:	pop    eax
  4329b0:	add    BYTE PTR [edx+0x65],ah
  4329b3:	adc    DWORD PTR [ebx+0x7d0b50b7],eax
  4329b9:	and    al,0x45
  4329bb:	add    DWORD PTR [ebp-0x3c],esi
  4329be:	retf   
  4329bf:	adc    eax,0xff0c
  4329c4:	push   ss
  4329c5:	add    DWORD PTR [eax-0x17],ebp
  4329c8:	ins    BYTE PTR es:[edi],dx
  4329c9:	add    DWORD PTR [eax-0x17],ebp
  4329cc:	ins    BYTE PTR es:[edi],dx
  4329cd:	add    DWORD PTR [eax-0x17],ebp
  4329d0:	rol    DWORD PTR [eax],cl
  4329d2:	adc    al,0xe9
  4329d4:	(bad)  
  4329d5:	or     eax,ebp
  4329d7:	sub    eax,0x6afa03e8
  4329dc:	mov    edx,0x2fbe5a1c
  4329e1:	mov    bl,ah
  4329e3:	mov    ah,0x97
  4329e5:	jg     0x4329e0
  4329e7:	jmp    0x432a2d
  4329e9:	std    
  4329ea:	dec    ecx
  4329eb:	div    BYTE PTR [ebx+0x2]
  4329ee:	inc    BYTE PTR [ecx+0x13]
  4329f1:	inc    esi
  4329f2:	hlt    
  4329f3:	jmp    0x604333ce
  4329f8:	jge    0x4329fe
  4329fa:	mov    BYTE PTR [esi+ebx*8-0x29166a73],ah
  432a01:	or     DWORD PTR [eax],eax
  432a03:	(bad)  
  432a04:	jmp    0x432a2d
  432a06:	mov    ebp,0xf2fbe4da
  432a0b:	test   eax,0x7608f857
  432a10:	xchg   ecx,eax
  432a11:	xchg   DWORD PTR [ebx-0x2f],eax
  432a14:	pop    edi
  432a15:	dec    ebp
  432a16:	adc    al,0x99
  432a18:	dec    ecx
  432a19:	pop    edx
  432a1a:	dec    ebp
  432a1b:	jb     0x4329d5
  432a1d:	call   0x40c09e1
  432a22:	jle    0x4329d1
  432a24:	popa   
  432a25:	icebp  
  432a26:	call   0x8509:0xd60000e8
  432a2d:	add    BYTE PTR [ecx+0x43e8d0fd],bh
  432a33:	gs mov edi,0xe9927f03
  432a39:	push   esi
  432a3a:	fistp  QWORD PTR [ebx-0x76c7aa0a]
  432a40:	mov    ebp,0x7745b90c
  432a45:	or     al,0xb7
  432a47:	mov    al,0x9
  432a49:	mov    eax,DWORD PTR [edx-0x6e]
  432a4c:	mov    edx,0xf617c8e8
  432a51:	inc    DWORD PTR [edi-0x10a8ee40]
  432a57:	mov    ch,0xf6
  432a59:	push   ebp
  432a5a:	sub    BYTE PTR [ecx+0x45690cbd],cl
  432a60:	ja     0x432a6e
  432a62:	addr16 mov al,0x9
  432a65:	mov    esi,DWORD PTR [ebx+0x34e8ba92]
  432a6b:	push   ss
  432a6c:	idiv   bh
  432a6e:	addr16 enter 0x5711,0x6a
  432a73:	mov    esp,0x8aa855f6
  432a78:	mov    ebp,0x7746390c
  432a7d:	or     al,0x47
  432a7f:	scas   eax,DWORD PTR es:[edi]
  432a80:	or     DWORD PTR [ebx-0x17406efd],ecx
  432a86:	nop
  432a87:	adc    eax,0x1a87fff6
  432a8c:	outs   dx,DWORD PTR ds:[esi]
  432a8d:	sbb    eax,DWORD PTR [eax]
  432a8f:	add    BYTE PTR [edi-0xdc4f648],ch
  432a95:	cwde   
  432a96:	or     eax,0x5003698b
  432a9b:	push   ebx
  432a9c:	pop    esi
  432a9d:	push   ss
  432a9e:	push   esp
  432a9f:	adc    al,0xef
  432aa1:	ds add eax,0xe8953c85
  432aa7:	cmp    edx,ebp
  432aa9:	jecxz  0x432a37
  432aab:	sbb    al,0xd6
  432aad:	sub    eax,0xc8f836f4
  432ab2:	mov    WORD PTR [esi+ebx*2],ss
  432ab5:	es cld 
  432ab7:	push   ecx
  432ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ab9:	and    BYTE PTR [ebx],dl
  432abb:	push   esp
  432abc:	jmp    0x504e6434
  432ac1:	mov    cl,0x93
  432ac3:	out    0x3e,eax
  432ac5:	hlt    
  432ac6:	or     BYTE PTR [eax-0x2b],0xcb
  432aca:	xchg   edx,eax
  432acb:	pmaxub mm1,QWORD PTR [esi+0x364e0f8b]
  432ad2:	cld    
  432ad3:	push   ecx
  432ad4:	stos   BYTE PTR es:[edi],al
  432ad5:	and    DWORD PTR [ebx],edx
  432ad7:	push   esp
  432ad8:	loope  0x432b4d
  432ada:	cmp    DWORD PTR [ebx],ecx
  432adc:	pop    eax
  432add:	mov    cl,0x94
  432adf:	call   0x38cf72a2
  432ae4:	pop    esi
  432ae5:	mov    dh,0xed
  432ae7:	xchg   BYTE PTR [edx],dl
  432ae9:	fucom  st(0)
  432aeb:	xchg   BYTE PTR [esi],cl
  432aed:	or     al,0x43
  432aef:	inc    ebp
  432af0:	dec    esp
  432af1:	sahf   
  432af2:	or     eax,0x8b00000a
  432af7:	aam    0xfe
  432af9:	xchg   DWORD PTR [eax],esp
  432afb:	in     al,dx
  432afc:	add    al,0xb2
  432afe:	in     eax,0x68
  432b00:	jmp    0xaaa1f505
  432b05:	push   es
  432b06:	pop    ebp
  432b07:	add    BYTE PTR [ecx+0x7ab0a554],cl
  432b0d:	int    0x28
  432b0f:	adc    bl,al
  432b11:	repnz retf 0x8c6d
  432b15:	cli    
  432b16:	xchg   edx,eax
  432b17:	inc    DWORD PTR [ecx+0x14807cee]
  432b1d:	cli    
  432b1e:	xor    bl,0x92
  432b21:	movsx  ecx,BYTE PTR [ecx]
  432b24:	ficom  DWORD PTR [edi-0x7f190d47]
  432b2a:	sbb    eax,0xd290fe0a
  432b2f:	inc    edx
  432b30:	leave  
  432b31:	call   0x56a4:0xec2c92bd
  432b38:	pop    ss
  432b39:	adc    esp,DWORD PTR [ecx-0x31b799eb]
  432b3f:	test   BYTE PTR [edi-0x65bdd268],ah
  432b45:	xchg   esi,eax
  432b46:	iret   
  432b47:	repnz out 0x80,al
  432b4a:	popf   
  432b4b:	or     DWORD PTR [esi+0x2492d290],edi
  432b51:	adc    bl,ah
  432b53:	add    edx,edi
  432b55:	neg    BYTE PTR [ebx+0x4c]
  432b58:	fistp  QWORD PTR [ecx+0x58a70000]
  432b5e:	jb     0x432b19
  432b60:	out    0x8a,al
  432b62:	mov    ds:0xdbc95000,eax
  432b67:	sub    DWORD PTR [ebx+0x44],ebx
  432b6a:	pop    ebx
  432b6b:	jg     0x432aee
  432b6d:	add    DWORD PTR [edi+0x3e],ebx
  432b70:	pop    ebx
  432b71:	idiv   dh
  432b73:	ds mov bl,0xf9
  432b76:	(bad)  
  432b77:	adc    al,0x4e
  432b79:	xor    esi,edi
  432b7b:	dec    edx
  432b7c:	cmp    edx,DWORD PTR [edi]
  432b7e:	pop    esi
  432b7f:	rol    esi,0x93
  432b82:	arpl   WORD PTR [ecx+0x1322fd42],ax
  432b88:	pop    ebp
  432b89:	mov    esi,0xfdae046c
  432b8e:	adc    al,ch
  432b90:	dec    ebp
  432b91:	dec    edi
  432b92:	adc    ecx,edi
  432b94:	cmp    BYTE PTR [ecx-0x40],0x7e
  432b98:	adc    DWORD PTR [edx],eax
  432b9a:	outs   dx,DWORD PTR ds:[esi]
  432b9b:	cdq    
  432b9c:	ficom  DWORD PTR [edx-0xe2d6c00]
  432ba2:	addr16 out dx,eax
  432ba4:	out    0xff,eax
  432ba6:	xor    eax,0x85164bc3
  432bab:	sub    al,0xcd
  432bad:	xchg   ecx,eax
  432bae:	pushf  
  432baf:	fs dec esi
  432bb1:	add    dl,bh
  432bb3:	into   
  432bb4:	fstp   DWORD PTR [eax-0x181675]
  432bba:	stc    
  432bbb:	sub    al,cl
  432bbd:	dec    ebp
  432bbe:	hlt    
  432bbf:	repnz add BYTE PTR [eax],al
  432bc2:	(bad)  
  432bc3:	imul   ecx,DWORD PTR [edx],0x62
  432bc6:	test   DWORD PTR [ecx],eax
  432bc8:	xchg   BYTE PTR [ecx+ebp*1],bl
  432bcb:	xchg   edx,eax
  432bcc:	jnp    0x432b6f
  432bce:	leave  
  432bcf:	inc    edx
  432bd0:	cli    
  432bd1:	xchg   esi,eax
  432bd2:	mov    DWORD PTR [ebx+0x459bf973],0x9ee6af4
  432bdc:	xchg   DWORD PTR [ebp*8-0x1b1177f1],esp
  432be3:	(bad)  
  432be4:	stc    
  432be5:	bound  eax,QWORD PTR [edx-0x3899877b]
  432beb:	inc    DWORD PTR [ebp-0x502a29b]
  432bf1:	push   esi
  432bf2:	(bad)  
  432bf3:	xchg   ecx,eax
  432bf4:	push   ebx
  432bf5:	dec    ebp
  432bf6:	pop    ecx
  432bf7:	inc    ebp
  432bf8:	clc    
  432bf9:	jb     0x432bfb
  432bfb:	test   al,bh
  432bfd:	push   eax
  432bfe:	xlat   BYTE PTR ds:[ebx]
  432bff:	(bad)  
  432c00:	stc    
  432c01:	ss inc ebx
  432c03:	add    BYTE PTR [edx+eiz*2-0x26],dl
  432c07:	dec    ebx
  432c08:	push   edx
  432c09:	jb     0x432c58
  432c0b:	add    al,0x2d
  432c0d:	inc    edx
  432c0e:	fwait
  432c0f:	jmp    0x432c85
  432c11:	in     al,dx
  432c12:	xchg   ecx,eax
  432c13:	pop    ebp
  432c14:	or     al,0x96
  432c16:	mov    dh,0xff
  432c18:	adc    eax,DWORD PTR [eax]
  432c1a:	mov    BYTE PTR [edx],al
  432c1c:	cmp    al,BYTE PTR [eax]
  432c1e:	mov    bl,0x8
  432c20:	push   cs
  432c21:	add    BYTE PTR [eax+ecx*1+0x49],ch
  432c25:	push   ebx
  432c26:	add    BYTE PTR [eax],al
  432c28:	pop    edi
  432c29:	mov    bl,0x4a
  432c2b:	call   0x394624
  432c30:	call   DWORD PTR [ecx+0xd]
  432c33:	xor    DWORD PTR [edx+ebx*1],0x57
  432c37:	pop    ebx
  432c38:	test   eax,0x2c5d3846
  432c3d:	xchg   esp,eax
  432c3e:	sar    bh,cl
  432c40:	add    DWORD PTR [edx],eax
  432c42:	div    DWORD PTR [ebp+0x1c]
  432c45:	sbb    DWORD PTR [esp+ecx*1-0x1e],esi
  432c49:	sbb    eax,0x83c11d9
  432c4e:	jns    0x432c14
  432c50:	sub    al,0xcd
  432c52:	mov    edx,0x177d4d7d
  432c57:	add    DWORD PTR [edi+edx*1+0x74],0xffffffd7
  432c5c:	pop    ebx
  432c5d:	hlt    
  432c5e:	add    eax,0xbd05bc16
  432c63:	add    BYTE PTR [esi],cl
  432c65:	or     BYTE PTR [eax],al
  432c67:	add    BYTE PTR [edi+0x59],dl
  432c6a:	cmp    bh,0x31
  432c6d:	jge    0x432c54
  432c6f:	lea    esi,[ecx]
  432c71:	hlt    
  432c72:	dec    ecx
  432c73:	inc    DWORD PTR [ecx]
  432c75:	clc    
  432c76:	div    BYTE PTR [ebp-0x8]
  432c79:	sbb    BYTE PTR [eax+ecx*1+0x24],dh
  432c7d:	xchg   edx,eax
  432c7e:	idiv   bh
  432c80:	or     eax,DWORD PTR [ebp+0x466910bd]
  432c86:	vmaxps ymm0,ymm6,ymm1
  432c8a:	dec    esi
  432c8b:	mov    eax,DWORD PTR [eax]
  432c8d:	add    BYTE PTR [eax-0x1d],dh
  432c90:	or     DWORD PTR [ebx-0x74f21c90],ecx
  432c96:	aad    0xa4
  432c98:	loope  0x432cb1
  432c9a:	add    BYTE PTR [edi-0x66dbaf53],bh
  432ca0:	add    esi,edi
  432ca2:	pop    ss
  432ca3:	icebp  
  432ca4:	mov    eax,ds:0xfdf0c8fa
  432ca9:	call   ebp
  432cab:	push   ecx
  432cac:	add    al,0xb0
  432cae:	push   ss
  432caf:	icebp  
  432cb0:	aam    0xc3
  432cb2:	pop    esp
  432cb3:	and    eax,0x69f907e8
  432cb8:	loop   0x432cb9
  432cba:	pop    edx
  432cbb:	icebp  
  432cbc:	std    
  432cbd:	xchg   BYTE PTR [ecx-0x52792bf4],bl
  432cc3:	clc    
  432cc4:	jl     0x432d11
  432cc6:	stc    
  432cc7:	add    al,0xd3
  432cc9:	sbb    BYTE PTR [esi+0x41],cl
  432ccc:	add    BYTE PTR [edi+0x33],bh
  432ccf:	mov    ds:0x355e3691,eax
  432cd4:	call   0xfda830c
  432cd9:	jae    0x432cac
  432cdb:	xlat   BYTE PTR ds:[ebx]
  432cdc:	adc    esi,DWORD PTR [ecx-0x3d]
  432cdf:	jne    0x432cb2
  432ce1:	jno    0x432d3b
  432ce3:	sbb    eax,0xe84e0f53
  432ce8:	jbe    0x432d31
  432cea:	leave  
  432ceb:	outs   dx,DWORD PTR ds:[esi]
  432cec:	mov    WORD PTR [ebx],es
  432cee:	aad    0xdd
  432cf0:	cmp    DWORD PTR [edi+0x0],esp
  432cf3:	add    ah,dl
  432cf5:	icebp  
  432cf6:	std    
  432cf7:	dec    DWORD PTR [esi-0x50]
  432cfa:	cmc    
  432cfb:	out    0xeb,eax
  432cfd:	add    esi,edi
  432cff:	dec    DWORD PTR [ecx+esi*8+0x77d5fffd]
  432d06:	les    eax,FWORD PTR [edi]
  432d08:	lods   eax,DWORD PTR ds:[esi]
  432d09:	lock repz (bad) 
  432d0c:	mov    edx,0x62634d47
  432d11:	or     esp,ebp
  432d13:	add    edx,ebp
  432d15:	or     edi,esp
  432d17:	test   BYTE PTR [esi+0x3b1b221],dl
  432d1d:	(bad)  
  432d1e:	pop    esi
  432d1f:	mov    edi,0xc1fa05b6
  432d24:	(bad)  
  432d25:	add    esp,edi
  432d27:	add    edx,ebp
  432d29:	shr    eax,0x3
  432d2c:	aad    0x9
  432d2e:	jae    0x432d04
  432d30:	pop    ebx
  432d31:	inc    ebp
  432d32:	or     edi,esp
  432d34:	push   ebx
  432d35:	push   ecx
  432d36:	out    dx,eax
  432d37:	rcr    BYTE PTR [edx+0x5f0b53f1],cl
  432d3d:	cli    
  432d3e:	xor    al,0x7b
  432d40:	mov    edx,0xde94c221
  432d45:	cli    
  432d46:	aaa    
  432d47:	hlt    
  432d48:	aas    
  432d49:	jns    0x432d26
  432d4b:	sbb    edi,esp
  432d4d:	cli    
  432d4e:	stos   BYTE PTR es:[edi],al
  432d4f:	btr    ebp,eax
  432d52:	repz mov al,0x53
  432d55:	inc    ebp
  432d56:	ret    
  432d57:	sti    
  432d58:	add    BYTE PTR [eax],al
  432d5a:	pop    ebx
  432d5b:	push   ebp
  432d5c:	retf   
  432d5d:	repz dec ebp
  432d5f:	pop    es
  432d60:	dec    edi
  432d61:	add    edx,ebp
  432d63:	or     edi,esp
  432d65:	inc    edx
  432d66:	mov    eax,ds:0xdae82b8e
  432d6b:	mov    es,eax
  432d6d:	push   cs
  432d6e:	test   DWORD PTR ds:0xfaca956a,ebx
  432d74:	fcomp  st(3)
  432d76:	repnz adc ebx,DWORD PTR [edx+0xf]
  432d7a:	fild   WORD PTR [ebp-0x3887ffd5]
  432d80:	jecxz  0x432d85
  432d82:	sub    BYTE PTR [eax-0x66],ah
  432d85:	mov    dl,0x53
  432d87:	in     al,0xf6
  432d89:	inc    ebx
  432d8a:	repz aam 0x0
  432d8d:	cli    
  432d8e:	add    al,0x28
  432d90:	repnz cli 
  432d92:	jecxz  0x432d87
  432d94:	iret   
  432d95:	ret    0x537b
  432d98:	pop    ebx
  432d99:	sub    bl,BYTE PTR [esi]
  432d9b:	out    dx,eax
  432d9c:	test   DWORD PTR [eax],ebx
  432d9e:	push   ds
  432d9f:	retf   0xe866
  432da2:	out    dx,al
  432da3:	dec    edi
  432da4:	psubsw mm2,mm6
  432da7:	sub    al,al
  432da9:	mov    edx,0xbac727af
  432dae:	les    esp,FWORD PTR [edi]
  432db0:	stc    
  432db1:	out    dx,al
  432db2:	mov    eax,0x27d5855d
  432db7:	pop    ebx
  432db8:	push   ecx
  432db9:	push   ebx
  432dba:	fldcw  WORD PTR [edi+0x0]
  432dbd:	inc    ecx
  432dbe:	add    BYTE PTR [eax],al
  432dc0:	(bad)  
  432dc1:	idiv   BYTE PTR [esi]
  432dc3:	jmp    0x48d71f51
  432dc8:	ror    DWORD PTR [ecx],1
  432dca:	pop    ecx
  432dcb:	pop    ds
  432dcc:	outs   dx,BYTE PTR ds:[esi]
  432dcd:	push   esi
  432dce:	mov    ebp,0x2464be1c
  432dd3:	loope  0x432e39
  432dd5:	pop    edx
  432dd6:	stc    
  432dd7:	sbb    eax,0x55e81d3d
  432ddc:	shl    bl,1
  432dde:	stc    
  432ddf:	push   0xffffff92
  432de1:	add    al,0x5b
  432de3:	stos   DWORD PTR es:[edi],eax
  432de4:	push   cs
  432de5:	stc    
  432de6:	lds    esi,FWORD PTR [ebp-0x52333b36]
  432dec:	ret    0xccc4
  432def:	(bad)  
  432df0:	retf   
  432df1:	pop    ebp
  432df2:	test   DWORD PTR [ebp+0x57],edi
  432df5:	in     eax,0x18
  432df7:	jb     0x432e16
  432df9:	adc    DWORD PTR [ebp+0x72],ecx
  432dfc:	and    eax,0x4762521d
  432e01:	adc    DWORD PTR ds:0x28f8a19,ebp
  432e07:	add    dl,bh
  432e09:	shl    esi,0x0
  432e0c:	sti    
  432e0d:	shr    ebp,0x1
  432e10:	lods   al,BYTE PTR ds:[esi]
  432e11:	or     al,0x0
  432e13:	lea    esp,[edi-0x4]
  432e16:	jp     0x432e10
  432e18:	repnz mov al,ds:0x10728b02
  432e1e:	stc    
  432e1f:	into   
  432e20:	jg     0x432e1a
  432e22:	xor    edi,edi
  432e24:	add    BYTE PTR [eax],al
  432e26:	dec    ecx
  432e27:	clc    
  432e28:	or     BYTE PTR [esi-0x80],0x73
  432e2c:	dec    edi
  432e2d:	or     BYTE PTR [edi+0x37],ch
  432e30:	sub    cl,BYTE PTR [esi+eax*2]
  432e33:	pop    es
  432e34:	push   esp
  432e35:	or     al,0xf7
  432e37:	ror    DWORD PTR [ecx],0xf6
  432e3a:	mov    esp,0xf90f5e01
  432e3f:	sti    
  432e40:	add    BYTE PTR [eax],al
  432e42:	ins    BYTE PTR es:[edi],dx
  432e43:	ja     0x432e91
  432e45:	call   0x8c38e0ff
  432e4a:	test   DWORD PTR [ecx],0x72244587
  432e50:	inc    esp
  432e51:	sbb    BYTE PTR [ebp+0x6783e5d0],dh
  432e57:	pop    es
  432e58:	ins    DWORD PTR es:[edi],dx
  432e59:	pusha  
  432e5a:	inc    edi
  432e5b:	jnp    0x4f5afc
  432e61:	add    BYTE PTR [ecx-0xf74ad0f],dh
  432e67:	jg     0x432e76
  432e69:	lea    edi,[eax-0x4676f681]
  432e6f:	sbb    eax,0xd0750082
  432e74:	icebp  
  432e75:	test   DWORD PTR ds:0xab8b0d91,esi
  432e7b:	adc    eax,0x683ff01
  432e80:	mov    edi,0xfd5fd545
  432e85:	test   BYTE PTR [ebp+0x7ac9c5],dl
  432e8b:	add    BYTE PTR [esi],dl
  432e8d:	jl     0x432e50
  432e8f:	test   DWORD PTR [esi+0x29],0xb6bbf77f
  432e96:	cmp    edi,DWORD PTR [edi+0x30]
  432e99:	sub    BYTE PTR [esp+esi*2],al
  432e9c:	cmc    
  432e9d:	jnp    0x432ea1
  432e9f:	jg     0x432e3e
  432ea1:	pop    ss
  432ea2:	cwde   
  432ea3:	push   es
  432ea4:	dec    esi
  432ea5:	scas   eax,DWORD PTR es:[edi]
  432ea6:	add    edi,edi
  432ea8:	mov    ds:0x8a37f9d4,eax
  432ead:	xchg   esi,eax
  432eae:	stc    
  432eaf:	xchg   BYTE PTR [ebx],dl
  432eb1:	in     eax,0x78
  432eb3:	push   ecx
  432eb4:	int    0xe3
  432eb6:	cmp    al,0x2e
  432eb8:	loope  0x432e74
  432eba:	or     al,0x54
  432ebc:	fnstcw WORD PTR [ebx-0x3e]
  432ebf:	repz add dh,BYTE PTR [edi]
  432ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432ec3:	xchg   BYTE PTR [eax+0x3e],dh
  432ec6:	aas    
  432ec7:	ret    0xdc98
  432eca:	std    
  432ecb:	call   ebp
  432ecd:	loopne 0x432ee7
  432ecf:	int3   
  432ed0:	dec    esi
  432ed1:	cs hlt 
  432ed3:	cmp    ch,0x43
  432ed6:	(bad)  
  432ed7:	ins    BYTE PTR es:[edi],dx
  432ed8:	xor    eax,0xe87ed53e
  432edd:	xor    BYTE PTR [ebx],dh
  432edf:	ds aad 0xe0
  432ee2:	xchg   ecx,eax
  432ee3:	pop    ds
  432ee4:	lods   eax,DWORD PTR ds:[esi]
  432ee5:	xor    BYTE PTR [ebx],dh
  432ee7:	ds aad 0x88
  432eea:	dec    eax
  432eeb:	pmullw mm4,mm0
  432eee:	add    bl,0x0
  432ef1:	add    cl,bl
  432ef3:	ins    DWORD PTR es:[edi],dx
  432ef4:	cmp    eax,0xba6bca73
  432ef9:	movq   mm1,mm4
  432efc:	scas   al,BYTE PTR es:[edi]
  432efd:	cli    
  432efe:	ror    BYTE PTR [ecx],0xb7
  432f01:	xor    al,0xa3
  432f03:	or     DWORD PTR [esi+0x47],esp
  432f06:	rol    BYTE PTR [edx-0x5945085c],cl
  432f0c:	dec    ecx
  432f0d:	or     al,0xcf
  432f0f:	sub    BYTE PTR [edi+esi*8-0x6814ae03],0xe5
  432f17:	sbb    BYTE PTR [ebx+edi*8+0x305e5f20],0x53
  432f1f:	ror    DWORD PTR [edi],0x50
  432f22:	pushf  
  432f23:	neg    BYTE PTR [edx]
  432f25:	js     0x432f38
  432f27:	push   ds
  432f28:	pop    esi
  432f29:	mov    esi,0xff9f808a
  432f2e:	push   ebx
  432f2f:	pcmpgtd mm1,QWORD PTR [ebx]
  432f32:	jl     0x432fb1
  432f34:	out    dx,al
  432f35:	js     0x432f43
  432f37:	push   cs
  432f38:	out    0x3c,al
  432f3a:	ret    
  432f3b:	add    eax,0x6010caf
  432f40:	outs   dx,BYTE PTR ds:[esi]
  432f41:	mov    edx,0xfc3182ce
  432f46:	pop    ebx
  432f47:	(bad)  
  432f48:	push   ss
  432f49:	clc    
  432f4a:	or     bh,dh
  432f4c:	xor    al,0xf8
  432f4e:	push   ebx
  432f4f:	dec    esp
  432f50:	mov    bh,0x7f
  432f52:	call   0x3200:0x336e01
  432f59:	inc    ebx
  432f5a:	mov    cl,0xb
  432f5c:	das    
  432f5d:	mov    bl,0xa9
  432f5f:	or     ebp,DWORD PTR [edi]
  432f61:	mul    al
  432f63:	mov    dh,0xce
  432f65:	push   es
  432f66:	arpl   WORD PTR [ebx+0x7f92f61f],si
  432f6c:	mov    eax,ds:0x53b33801
  432f71:	ret    0xa78f
  432f74:	cld    
  432f75:	cmc    
  432f76:	jp     0x432f95
  432f78:	mov    ah,0xf6
  432f7a:	add    BYTE PTR [esi-0x22],dh
  432f7d:	repz and ebx,ecx
  432f80:	in     al,0x35
  432f82:	add    BYTE PTR [esi-0xc],ah
  432f85:	sbb    eax,0xf2d6a912
  432f8a:	and    ecx,DWORD PTR [ecx]
  432f8c:	(bad)  
  432f8d:	xor    eax,0x5dde6200
  432f92:	test   DWORD PTR [ebp+0x58],edx
  432f95:	loope  0x432fbf
  432f97:	jmp    0x3420:0x499d09d6
  432f9e:	add    BYTE PTR [eax-0x54],ah
  432fa1:	shl    DWORD PTR [edi+0x1382d6aa],1
  432fa7:	inc    ecx
  432fa8:	or     BYTE PTR [eax+eax*1],dh
  432fab:	pusha  
  432fac:	jl     0x432f87
  432fae:	mov    bh,0xaa
  432fb0:	(bad)  
  432fb1:	xor    BYTE PTR [ebx],0x19
  432fb4:	adc    BYTE PTR [eax+eax*1],dh
  432fb7:	jo     0x432f45
  432fb9:	shl    DWORD PTR [edi-0x29ffff56],0x67
  432fc0:	mov    esp,ss
  432fc2:	fidiv  WORD PTR [ecx-0x7ecb16c3]
  432fc8:	or     ecx,ebp
  432fca:	or     DWORD PTR [eax+eax*1],esi
  432fcd:	dec    edi
  432fce:	int    0x15
  432fd0:	enter  0x1390,0xf5
  432fd4:	arpl   WORD PTR [ebp-0x2b],si
  432fd7:	int    0xb7
  432fd9:	sub    dl,cl
  432fdb:	mov    WORD PTR [si],cs
  432fde:	cdq    
  432fdf:	mov    cl,0x3d
  432fe1:	jmp    0x656eb15a
  432fe6:	xchg   ecx,eax
  432fe7:	xor    eax,DWORD PTR [eax]
  432fe9:	jge    0x432f8a
  432feb:	or     eax,0xf51b50f0
  432ff0:	xchg   BYTE PTR [ecx+edx*8],ah
  432ff3:	xchg   esp,eax
  432ff4:	in     al,0x0
  432ff6:	xchg   ebp,eax
  432ff7:	retf   
  432ff8:	stc    
  432ff9:	mov    dh,BYTE PTR [ecx-0x5a1766f7]
  432fff:	retf   
  433000:	stc    
  433001:	mov    WORD PTR [ecx+0x35f49af5],?
  433007:	int3   
  433008:	stc    
  433009:	mov    dh,BYTE PTR [ecx+0x28]
  43300c:	cmc    
  43300d:	jmp    FWORD PTR [ebx]
  43300f:	dec    eax
  433010:	add    al,0x30
  433012:	gs retf 
  433014:	stc    
  433015:	add    BYTE PTR [ebp+ecx*1+0x4624a100],ch
  43301c:	cmp    al,BYTE PTR [eax]
  43301e:	pop    edi
  43301f:	sbb    al,0xb1
  433021:	inc    ebx
  433022:	add    BYTE PTR [eax],al
  433024:	mov    esp,0x34e00447
  433029:	int3   
  43302a:	stc    
  43302b:	or     BYTE PTR [eax-0x7e383ff8],dh
  433031:	adc    al,0xb1
  433033:	inc    ebx
  433034:	jl     0x433043
  433036:	add    BYTE PTR [eax],al
  433038:	ins    BYTE PTR es:[edi],dx
  433039:	ins    DWORD PTR es:[edi],dx
  43303a:	stc    
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	das    
  43303d:	or     BYTE PTR [edi-0x9f33b7b],al
  433043:	call   FWORD PTR ds:0x6c43a9f5
  433049:	outs   dx,DWORD PTR ds:[esi]
  43304a:	test   ah,bl
  43304c:	js     0x433050
  43304e:	imul   BYTE PTR [edx+0x3c]
  433051:	add    DWORD PTR [eax+eiz*8],edx
  433054:	dec    ebp
  433055:	enter  0x67f9,0xa8
  433059:	cli    
  43305a:	cmp    DWORD PTR [eax],eax
  43305c:	jnp    0x433042
  43305e:	fst    QWORD PTR [ecx]
  433060:	cld    
  433061:	or     eax,0x8300968
  433066:	sar    bh,0x21
  433069:	adc    BYTE PTR [eax],dl
  43306b:	inc    eax
  43306c:	sub    al,0xb8
  43306e:	not    BYTE PTR ds:0x3feda2d5
  433074:	aad    0xa9
  433076:	inc    ebx
  433077:	retf   
  433078:	adc    DWORD PTR [esi-0x59f634c8],edi
  43307e:	cmp    bl,cl
  433080:	and    DWORD PTR [ebx+edi*2],edx
  433083:	inc    ebx
  433084:	mov    cl,0xde
  433086:	cld    
  433087:	mov    edi,0x1a680000
  43308c:	jnp    0x4330d9
  43308e:	mov    cl,0xf2
  433090:	jl     0x4330d5
  433092:	stc    
  433093:	in     al,dx
  433094:	aam    0xcd
  433096:	ret    0x7b52
  433099:	xlat   BYTE PTR ds:[ebx]
  43309a:	dec    esi
  43309b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43309c:	fld    DWORD PTR [edi]
  43309e:	ret    0x7b32
  4330a1:	out    dx,eax
  4330a2:	pop    esi
  4330a3:	and    BYTE PTR [edi],cl
  4330a5:	arpl   cx,si
  4330a7:	sar    BYTE PTR [edi+eax*8+0x4e],1
  4330ab:	and    ecx,DWORD PTR [edi]
  4330ad:	arpl   cx,si
  4330af:	lock add al,0xd1
  4330b2:	jle    0x433058
  4330b4:	jl     0x43307d
  4330b6:	pop    esi
  4330b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4330b8:	(bad)  [edi]
  4330ba:	dec    esi
  4330bb:	xchg   ebp,eax
  4330bc:	(bad)  [ebx]
  4330be:	dec    esi
  4330bf:	lods   eax,DWORD PTR ds:[esi]
  4330c0:	fld    DWORD PTR [edi]
  4330c2:	test   BYTE PTR [edx],cl
  4330c4:	sub    eax,0x2d0784d6
  4330c9:	xlat   BYTE PTR ds:[ebx]
  4330ca:	into   
  4330cb:	mov    ecx,0xd062f38a
  4330d0:	jl     0x4330c1
  4330d2:	dec    edx
  4330d3:	inc    ebp
  4330d4:	loopne 0x4330e9
  4330d6:	pop    esi
  4330d7:	test   eax,0xd0f9437c
  4330dc:	adc    cl,ah
  4330de:	(bad)  
  4330df:	xchg   ecx,eax
  4330e0:	xchg   ebx,eax
  4330e1:	or     esi,ebp
  4330e3:	adc    al,0xe0
  4330e5:	or     esp,DWORD PTR [edx-0x21f56c18]
  4330eb:	or     DWORD PTR [ebx],ebp
  4330ed:	loopne 0x4330ef
  4330ef:	add    dl,dl
  4330f1:	jnp    0x4330e3
  4330f3:	mov    ecx,0xf3cb4dbb
  4330f8:	jecxz  0x433157
  4330fa:	ret    
  4330fb:	out    dx,eax
  4330fc:	mov    bl,0xce
  4330fe:	into   
  4330ff:	mov    edi,0xafde01b6
  433104:	mov    dh,0x5
  433106:	jp     0x433135
  433108:	out    0xd1,eax
  43310a:	sub    ax,0x7fe2
  43310e:	sub    eax,0x407f0b7c
  433113:	jl     0x4330af
  433115:	jle    0x433140
  433117:	test   eax,0x11e71988
  43311c:	adc    eax,0xd48fa706
  433121:	xchg   al,al
  433123:	sti    
  433124:	mov    dl,0x76
  433126:	or     ecx,DWORD PTR [ecx]
  433128:	sbb    eax,0x5bfcaf0e
  43312d:	sbb    BYTE PTR [edi+0x5],ch
  433130:	sahf   
  433131:	or     dl,ch
  433133:	push   ecx
  433134:	push   edx
  433135:	fsubrp st(3),st
  433137:	clc    
  433138:	dec    esp
  433139:	leave  
  43313a:	mov    eax,0xf2aa7ab3
  43313f:	add    edx,ebp
  433141:	push   eax
  433142:	mov    al,ds:0x7cf26a84
  433147:	add    al,0xdc
  433149:	or     esp,DWORD PTR [esi]
  43314b:	or     ah,dl
  43314d:	(bad)  
  43314e:	outs   dx,BYTE PTR ds:[esi]
  43314f:	pop    es
  433150:	add    DWORD PTR [edi-0x35],edi
  433153:	scas   al,BYTE PTR es:[edi]
  433154:	add    BYTE PTR [eax],al
  433156:	pop    ebx
  433157:	stc    
  433158:	mov    esi,0xf74453f3
  43315d:	jns    0x4330f8
  43315f:	add    edx,eax
  433161:	mov    ecx,0x774e1ce
  433166:	das    
  433167:	repnz add BYTE PTR [edx+0x13],ch
  43316b:	out    dx,eax
  43316c:	je     0x433155
  43316e:	push   edi
  43316f:	jne    0x43317d
  433171:	jmp    0x3c9e18c9
  433176:	xchg   esi,eax
  433177:	mov    edi,ecx
  433179:	cmp    al,0x8e
  43317b:	fdivrp st(2),st
  43317d:	es std 
  43317f:	xor    DWORD PTR [ebp+0x1f],ecx
  433182:	jle    0x433166
  433184:	test   DWORD PTR [eax-0x982dcbb],esp
  43318a:	out    dx,al
  43318b:	icebp  
  43318c:	je     0x43314a
  43318e:	pop    edi
  43318f:	dec    ebp
  433190:	or     al,ch
  433192:	fsubr  st,st(2)
  433194:	sub    al,0x73
  433196:	(bad)  
  433197:	hlt    
  433198:	dec    ebx
  433199:	loope  0x4331ea
  43319b:	(bad)  
  43319c:	call   0xfa370d6d
  4331a1:	stos   BYTE PTR es:[edi],al
  4331a2:	push   edi
  4331a3:	xor    edi,ecx
  4331a5:	mov    ah,0xc2
  4331a7:	hlt    
  4331a8:	adc    esp,ebp
  4331aa:	mov    eax,0x916a0031
  4331af:	daa    
  4331b0:	jae    0x4331a8
  4331b2:	pop    ds
  4331b3:	les    esi,FWORD PTR [eax-0x6b01122]
  4331b9:	push   ss
  4331ba:	add    BYTE PTR [eax],al
  4331bc:	shr    BYTE PTR [edi+0x7b],cl
  4331bf:	loope  0x433197
  4331c1:	je     0x433197
  4331c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4331c4:	das    
  4331c5:	dec    esi
  4331c6:	mov    ebp,0x8555da72
  4331cb:	add    eax,0x4828e556
  4331d0:	fnstcw WORD PTR [ecx-0x397816c3]
  4331d6:	xchg   DWORD PTR [ebx*8-0x361ebc79],esp
  4331dd:	inc    ebp
  4331de:	fcomp  DWORD PTR [edx]
  4331e0:	cdq    
  4331e1:	xor    BYTE PTR [ecx+0x0],dl
  4331e4:	mov    DWORD PTR [ecx-0x1e067bfb],0x91bf046d
  4331ee:	or     eax,0x15ca6a20
  4331f3:	sub    BYTE PTR [edx-0x36],0xd5
  4331f7:	and    eax,0x263f0e8
  4331fc:	cmp    cl,dl
  4331fe:	fsub   QWORD PTR [ebx]
  433200:	les    ebx,FWORD PTR [edi+0x28e944bf]
  433206:	daa    
  433207:	push   0xffffffe6
  433209:	jno    0x433248
  43320b:	add    eax,0x75f6bd41
  433210:	add    al,0x8
  433212:	adc    al,0x50
  433214:	fcmove st,st(4)
  433216:	stc    
  433217:	mov    WORD PTR [ecx+0x28],?
  43321a:	jp     0x4331e0
  43321c:	mov    al,0x71
  43321e:	imul   eax,DWORD PTR [ecx],0xf5360000
  433224:	cmp    DWORD PTR [ebp+eax*1-0x7e750766],eax
  43322b:	loopne 0x43324f
  43322d:	(bad)  
  43322e:	xor    al,0xb9
  433230:	add    al,0xdc
  433232:	cli    
  433233:	mov    al,0x4
  433235:	(bad)  [ebx+esi*2-0x7efeefbc]
  43323c:	(bad)  
  43323d:	(bad)  
  43323e:	mov    edx,0x3d50f9ee
  433243:	jae    0x433291
  433245:	fdiv   DWORD PTR [ecx-0x2fb274fb]
  43324b:	and    DWORD PTR ds:0x4ebc4d24,edx
  433251:	dec    DWORD PTR [ecx+0x6c400fb8]
  433257:	mov    DWORD PTR [ebp-0x63843ec],edi
  43325d:	pop    ebp
  43325e:	aad    0x4d
  433260:	cld    
  433261:	test   BYTE PTR ds:0x152f0040,dl
  433267:	(bad)  
  433269:	gs retf 
  43326b:	test   al,0xfb
  43326d:	inc    DWORD PTR [edx-0x19044e95]
  433273:	lea    esp,[ebx+0x390b0e7]
  433279:	cli    
  43327a:	sbb    al,0xa3
  43327c:	ja     0x433278
  43327e:	mov    al,ds:0xf17e186b
  433283:	int    0x5e
  433285:	inc    DWORD PTR [eax]
  433287:	add    BYTE PTR [edx],ch
  433289:	and    eax,DWORD PTR [edi+ebp*1]
  43328c:	sbb    BYTE PTR [ecx-0x47],bh
  43328f:	sti    
  433290:	xchg   BYTE PTR [eax],dl
  433292:	ja     0x433308
  433294:	int    0x17
  433296:	ja     0x433314
  433298:	leave  
  433299:	adc    esp,DWORD PTR [edi]
  43329b:	ss into 
  43329d:	(bad)  
  43329e:	jmp    0x8c345adb
  4332a3:	or     bh,dh
  4332a5:	push   ebx
  4332a6:	repz sub DWORD PTR [edi-0x1f],0xfffffffd
  4332ab:	call   FWORD PTR [edi+ecx*8+0x16]
  4332af:	sahf   
  4332b0:	aad    0xe0
  4332b2:	std    
  4332b3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4332b5:	mov    ch,0x0
  4332b7:	jg     0x433284
  4332b9:	daa    
  4332ba:	jge    0x433338
  4332bc:	in     eax,0xf
  4332be:	add    edi,edx
  4332c0:	or     cl,BYTE PTR [edi-0x3317051d]
  4332c6:	jmp    0x433307
  4332c8:	aad    0x9a
  4332ca:	jmp    0x433324
  4332cc:	push   es
  4332cd:	xchg   esp,eax
  4332ce:	mov    al,0x4e
  4332d0:	push   es
  4332d1:	ins    BYTE PTR es:[edi],dx
  4332d2:	or     eax,0x708cd88
  4332d7:	hlt    
  4332d8:	pop    edx
  4332d9:	or     ah,dl
  4332db:	adc    BYTE PTR [esi],0x16
  4332de:	outs   dx,BYTE PTR ds:[esi]
  4332df:	cmp    eax,0x8ed27733
  4332e4:	out    0x7c,al
  4332e6:	and    al,0x10
  4332e8:	mov    ch,dh
  4332ea:	fsubr  QWORD PTR [edi+0x49c40000]
  4332f0:	out    0xc8,eax
  4332f2:	imul   edx,DWORD PTR [ecx+0x10],0xffffff87
  4332f6:	stc    
  4332f7:	xor    ch,BYTE PTR [esi+0x4430c88f]
  4332fd:	hlt    
  4332fe:	test   ah,bh
  433300:	cdq    
  433301:	mov    ds,edx
  433303:	pop    edx
  433304:	cmp    bl,BYTE PTR [eax+edx*2]
  433307:	out    dx,al
  433308:	mov    al,BYTE PTR [ebx+edi*2]
  43330b:	(bad)
  43330e:	leave  
  43330f:	std    
  433310:	rol    bl,1
  433312:	jmp    0x5e02:0x4daabd60
  433319:	inc    edx
  43331a:	repz cs push ds
  43331d:	adc    DWORD PTR [esi+0xc],eax
  433320:	jo     0x43331f
  433322:	or     eax,0xe286f745
  433327:	xor    cl,BYTE PTR [esi-0x71]
  43332a:	enter  0xa430,0xf3
  43332e:	and    al,0xfd
  433330:	cmp    DWORD PTR [esi+0x1b9a5ada],ecx
  433336:	add    dh,ch
  433338:	sub    al,BYTE PTR [ebx+ebx*1]
  43333b:	(bad)  
  43333c:	repz add al,0xe9
  43333f:	std    
  433340:	lock ret 
  433342:	mov    ah,BYTE PTR [eax-0x3b]
  433345:	sbb    BYTE PTR [edi+0x32],dl
  433348:	push   cs
  433349:	(bad)  
  43334a:	int3   
  43334b:	pop    ecx
  43334c:	je     0x43330c
  43334e:	pop    cx
  433350:	xchg   edx,eax
  433351:	sbb    eax,DWORD PTR [eax]
  433353:	add    BYTE PTR [edx-0x2909ff13],ch
  433359:	outs   dx,DWORD PTR ds:[esi]
  43335a:	(bad)  
  43335b:	fld    QWORD PTR [ebp-0x2acb7a52]
  433361:	push   ebx
  433362:	pop    edx
  433363:	sbb    ah,BYTE PTR [esp+edx*2]
  433366:	call   0xfa336fc0
  43336b:	mov    al,ds:0x1cf98412
  433370:	(bad)  
  433371:	fnstsw WORD PTR [edi-0x33]
  433374:	mov    ecx,0x79e9f9ef
  433379:	or     DWORD PTR [eax-0x3ce32ed6],esi
  43337f:	jo     0x43331d
  433381:	in     eax,dx
  433382:	test   DWORD PTR [ecx+ebx*8],esp
  433385:	cmp    al,0x85
  433387:	xor    al,0xe5
  433389:	pop    ebx
  43338a:	sub    eax,0x7b849e97
  43338f:	fldenv [ecx-0x76]
  433392:	mov    ah,0x7c
  433394:	(bad)  
  433395:	xrelease xchg DWORD PTR [esi*8+0x486ef9f1],esi
  43339d:	mov    edx,0xefd664b8
  4333a2:	xchg   DWORD PTR [ecx+eax*8+0x5056f9f1],edx
  4333a9:	mov    ecx,0xefd64ccc
  4333ae:	xchg   DWORD PTR [ecx+eax*8-0xf],edi
  4333b2:	stc    
  4333b3:	ds pop eax
  4333b5:	mov    ecx,0x34d0
  4333ba:	(bad)  
  4333bb:	out    dx,eax
  4333bc:	xchg   DWORD PTR [ebp+ecx*4-0xf],esi
  4333c0:	stc    
  4333c1:	es pusha 
  4333c3:	mov    ecx,0xefd61cb0
  4333c8:	xchg   DWORD PTR [ecx+edx*4-0xf],ebx
  4333cc:	stc    
  4333cd:	push   cs
  4333ce:	mov    edx,0x9d0073c7
  4333d3:	or     BYTE PTR [esp+ecx*1],dl
  4333d6:	or     BYTE PTR [ecx+0x0],0x56
  4333da:	inc    edx
  4333db:	push   ebx
  4333dc:	dec    esi
  4333dd:	push   esi
  4333de:	mov    bl,0x5
  4333e0:	push   cs
  4333e1:	add    BYTE PTR [ecx+ecx*1],bh
  4333e4:	call   0xf64b54de
  4333e9:	xor    DWORD PTR [eax+0x15],0x7b
  4333ed:	enter  0xde0b,0x40
  4333f1:	or     bh,BYTE PTR [ecx+ecx*1]
  4333f4:	xor    ebx,esi
  4333f6:	loopne 0x4333c4
  4333f8:	or     BYTE PTR [ebx],0xb5
  4333fb:	mov    cl,0xd8
  4333fd:	std    
  4333fe:	imul   ecx,DWORD PTR [eax],0xffffff88
  433401:	mov    ch,0x5c
  433403:	or     dh,dh
  433405:	inc    DWORD PTR [ebp+0x6bfdc0b1]
  43340b:	or     BYTE PTR [eax-0x9f6774b],cl
  433411:	jmp    DWORD PTR [ecx+ebx*4-0x19]
  433415:	std    
  433416:	imul   eax,DWORD PTR [edi],0xffffff83
  433419:	leave  
  43341a:	sti    
  43341b:	test   BYTE PTR [esi],al
  43341d:	or     al,BYTE PTR [eax]
  43341f:	add    ah,ch
  433421:	or     BYTE PTR [ebx],bh
  433423:	cmp    DWORD PTR [ecx-0x30],esi
  433426:	cmc    
  433427:	jmp    FWORD PTR [ebx]
  433429:	jle    0x4333c0
  43342b:	mov    al,ds:0xff60829
  433430:	sbb    bl,ah
  433432:	add    DWORD PTR [eax],eax
  433434:	mov    esp,0xdc2cb97e
  433439:	dec    ecx
  43343a:	pop    eax
  43343b:	ja     0x4333f8
  43343d:	pop    ss
  43343e:	mov    dh,0xc1
  433440:	jnp    0x4333f4
  433442:	xor    BYTE PTR [eax-0x6d],0x48
  433446:	add    BYTE PTR [ebx+0x2e317dc],al
  43344c:	aad    0xcf
  43344e:	mov    ebp,0x226085
  433453:	cli    
  433454:	jb     0x4333ed
  433456:	mov    ebp,0x8134da07
  43345b:	adc    BYTE PTR [ebp-0x35],al
  43345e:	cmp    eax,0x10a9400
  433463:	xchg   DWORD PTR [eax-0x5e],ebx
  433466:	stc    
  433467:	stc    
  433468:	dec    edx
  433469:	pop    edi
  43346a:	cld    
  43346b:	or     dl,dl
  43346d:	pop    esi
  43346e:	push   0x6abb3af9
  433473:	add    DWORD PTR [edi+0x5209c207],ecx
  433479:	adc    al,0x5
  43347b:	add    ch,dl
  43347d:	mov    bl,0x28
  43347f:	sbb    DWORD PTR [edi],0xffffffd0
  433482:	inc    esp
  433483:	add    BYTE PTR [eax],al
  433485:	add    BYTE PTR [esi+0x75],dl
  433488:	in     al,dx
  433489:	sti    
  43348a:	or     cl,BYTE PTR [ebx-0x61b77801]
  433490:	stc    
  433491:	stc    
  433492:	cli    
  433493:	push   0x82f0b0b1
  433498:	inc    DWORD PTR [edi-0x60661e0]
  43349e:	loop   0x433508
  4334a0:	mov    cl,0xd0
  4334a2:	fcomp  DWORD PTR [edx-0x1]
  4334a5:	xchg   DWORD PTR [eax-0x350606af],ecx
  4334ab:	jp     0x43345e
  4334ad:	enter  0x54c0,0xff
  4334b1:	out    0xe8,eax
  4334b3:	jmp    0x832634b5
  4334b8:	mov    ebp,0x7801bd7d
  4334bd:	inc    esi
  4334be:	push   esi
  4334bf:	dec    ecx
  4334c0:	add    esi,DWORD PTR [ebx+eiz*8+0x5f]
  4334c4:	in     al,dx
  4334c5:	or     BYTE PTR [ecx],cl
  4334c7:	or     cl,ah
  4334c9:	dec    ebx
  4334ca:	sbb    eax,0x6d84f476
  4334cf:	pop    es
  4334d0:	loop   0x433458
  4334d2:	aad    0x0
  4334d4:	out    0x3,eax
  4334d6:	lock jl 0x4334d0
  4334d9:	(bad)  
  4334da:	ins    BYTE PTR es:[edi],dx
  4334db:	jmp    0x4334cc
  4334dd:	jmp    0x7cd8:0x3e70263
  4334e4:	idiv   esi
  4334e6:	dec    esp
  4334e7:	jmp    0x4334d4
  4334e9:	jmp    0x3e7:0x2470000
  4334f0:	sar    BYTE PTR [edi+edx*8-0x2],0x3c
  4334f5:	jmp    0x4334df
  4334f7:	jmp    0x7caa:0x3e7023b
  4334fe:	mov    bh,0xfe
  433500:	sbb    al,0xeb
  433502:	addr16 add edx,ebp
  433505:	or     eax,eax
  433507:	(bad)  
  433509:	or     edi,esp
  43350b:	test   BYTE PTR [esi-0x6],bl
  43350e:	pushf  
  43350f:	add    bh,bh
  433511:	pop    es
  433512:	adc    al,0xcd
  433515:	or     edi,esp
  433517:	sub    edx,0x1f
  43351a:	cld    
  43351b:	sub    al,0x50
  43351d:	add    esp,DWORD PTR [esi-0x38]
  433520:	fldcw  WORD PTR [esi]
  433522:	test   eax,0x6cce1e8a
  433527:	add    bh,cl
  433529:	sub    BYTE PTR [edi+ecx*8-0x32],0xea
  43352e:	pop    edx
  43352f:	adc    BYTE PTR [esi-0x48],cl
  433532:	fild   WORD PTR [ebx]
  433534:	aad    0x86
  433536:	pop    esp
  433537:	repz scas al,BYTE PTR es:[edi]
  433539:	jmp    0xfe2b:0x8ca40742
  433540:	pushf  
  433541:	jmp    0xe900:0x1754000
  433548:	popa   
  433549:	xchg   ah,cl
  43354b:	and    al,0xd5
  43354d:	out    dx,eax
  43354e:	sub    DWORD PTR gs:[eax],eax
  433551:	add    al,dl
  433553:	add    BYTE PTR [edx+0x8454b20],bh
  433559:	cmp    DWORD PTR [edi-0x7a],ebx
  43355c:	int3   
  43355d:	add    al,0xd5
  43355f:	out    dx,eax
  433560:	out    0x65,eax
  433562:	into   
  433563:	or     DWORD PTR [eax],eax
  433565:	pusha  
  433566:	and    esp,ecx
  433568:	sti    
  433569:	out    dx,al
  43356a:	push   edx
  43356b:	loop   0x4335e4
  43356d:	icebp  
  43356e:	(bad)  
  43356f:	or     DWORD PTR [eax+0x2376efe0],eax
  433575:	(bad)
  43357a:	out    dx,eax
  43357b:	mov    DWORD PTR [edi-0x611ca7c],0xe88650be
  433585:	mov    ah,0x1a
  433587:	lock or DWORD PTR [esi+ebp*4+0x1],ebx
  43358c:	add    cl,ch
  43358e:	push   edi
  43358f:	jle    0x433579
  433591:	pushf  
  433592:	add    dh,al
  433594:	stc    
  433595:	or     BYTE PTR [edx+0x5fe90001],0x86
  43359c:	call   0x66332025
  4335a1:	test   eax,0xa0ba00cf
  4335a6:	inc    esp
  4335a7:	inc    ebp
  4335a8:	or     BYTE PTR [ecx+0x64e88d60],bl
  4335ae:	retf   0xe7e3
  4335b1:	adc    eax,0x690009d1
  4335b6:	add    BYTE PTR [eax],al
  4335b8:	mov    eax,0x569e7451
  4335bd:	loope  0x433627
  4335bf:	add    BYTE PTR [eax+0x27],ch
  4335c2:	cmp    cl,0x90
  4335c5:	popa   
  4335c6:	sbb    BYTE PTR [eax-0x7af89f1b],al
  4335cc:	mov    al,ds:0xfd000015
  4335d1:	jp     0x4335c3
  4335d3:	std    
  4335d4:	jecxz  0x4335be
  4335d6:	add    BYTE PTR [eax],cl
  4335d8:	ins    BYTE PTR es:[edi],dx
  4335d9:	or     eax,0xd740de1
  4335de:	add    BYTE PTR [eax+0x106d7997],al
  4335e4:	das    
  4335e5:	mov    es,WORD PTR [ebp-0x8179e10]
  4335eb:	add    BYTE PTR [ecx*1+0x1034e900],ch
  4335f2:	add    BYTE PTR [eax],al
  4335f4:	scas   eax,DWORD PTR es:[edi]
  4335f5:	jns    0x4335e7
  4335f7:	std    
  4335f8:	and    ebp,eax
  4335fa:	adc    cl,ch
  4335fc:	jo     0x43360e
  4335fe:	add    BYTE PTR [eax],al
  433600:	mov    edi,0x63fdf079
  433605:	call   0x10501f2a
  43360a:	add    BYTE PTR [eax],al
  43360c:	jbe    0x433619
  43360e:	cmp    al,0x36
  433610:	jmp    0xedbeb615
  433615:	and    BYTE PTR [ebp+0x11],ch
  433618:	scas   eax,DWORD PTR es:[edi]
  433619:	dec    esp
  43361a:	jns    0x4335a9
  43361c:	add    BYTE PTR [eax],al
  43361e:	dec    esp
  43361f:	or     dh,dh
  433621:	(bad)  
  433622:	cld    
  433623:	mov    WORD PTR [eax],es
  433625:	add    BYTE PTR [ebp-0x34],al
  433628:	(bad)  
  433629:	(bad)  
  43362a:	in     al,dx
  43362b:	sub    BYTE PTR [ebx],ch
  43362d:	jne    0x4335da
  43362f:	mov    WORD PTR [ebx+0x1],?
  433632:	out    dx,al
  433633:	bound  ecx,QWORD PTR [ecx]
  433635:	inc    ebx
  433636:	outs   dx,DWORD PTR ds:[esi]
  433637:	lea    ebx,[ebp-0x5c22a10]
  43363d:	stc    
  43363e:	mov    dl,0xd7
  433640:	cli    
  433641:	stc    
  433642:	mov    esp,0xd500027a
  433647:	out    0x61,al
  433649:	or     DWORD PTR [ecx-0x6e],edx
  43364c:	add    al,BYTE PTR [eax]
  43364e:	aad    0xf6
  433650:	ins    BYTE PTR es:[edi],dx
  433651:	or     DWORD PTR [ecx-0x76],edx
  433654:	add    al,BYTE PTR [eax]
  433656:	aad    0xc6
  433658:	push   0x9
  43365a:	push   ecx
  43365b:	bound  eax,QWORD PTR [edx]
  43365d:	add    ch,dl
  43365f:	(bad)  
  433660:	js     0x43366b
  433662:	push   ecx
  433663:	pop    edx
  433664:	add    al,BYTE PTR [eax]
  433666:	aad    0xa6
  433668:	jne    0x433673
  43366a:	push   ecx
  43366b:	jb     0x43366f
  43366d:	add    ch,dl
  43366f:	mov    dh,0x55
  433671:	or     DWORD PTR [ecx+0x6a],edx
  433674:	add    eax,DWORD PTR [eax]
  433676:	aad    0x59
  433678:	mov    cl,0xc0
  43367a:	cmp    BYTE PTR [edi-0x4e94f605],bh
  433680:	push   esp
  433681:	xchg   DWORD PTR [eax],eax
  433683:	add    BYTE PTR [eax-0x66],ah
  433686:	stc    
  433687:	stc    
  433688:	and    ah,BYTE PTR [edi+0x32c34411]
  43368e:	add    al,0x57
  433690:	pop    eax
  433691:	mov    dl,0x78
  433693:	sub    BYTE PTR [esi+0x5d],bl
  433696:	mov    eax,0x868702fb
  43369b:	sub    edx,0x7c
  43369e:	sti    
  43369f:	stc    
  4336a0:	pusha  
  4336a1:	cmp    eax,0x8eeafbdc
  4336a6:	in     al,dx
  4336a7:	xchg   ecx,eax
  4336a8:	fbld   TBYTE PTR [esi-0x5]
  4336ab:	xchg   dh,dl
  4336ad:	xor    ecx,DWORD PTR [ebx+eax*4-0x604893e]
  4336b4:	push   ecx
  4336b5:	or     ah,BYTE PTR [edi]
  4336b7:	or     eax,0x3e25259
  4336bc:	aad    0x92
  4336be:	fs mov eax,0x8a4ae7ae
  4336c4:	push   esi
  4336c5:	test   DWORD PTR [ebp+edi*8-0x64],0x9edc7495
  4336cd:	out    0x32,eax
  4336cf:	in     al,dx
  4336d0:	cld    
  4336d1:	jecxz  0x4336fd
  4336d3:	std    
  4336d4:	jb     0x4336d5
  4336d6:	jmp    0x595a0bde
  4336db:	ret    
  4336dc:	clc    
  4336dd:	loope  0x43366a
  4336df:	or     al,0x5c
  4336e1:	add    ch,ah
  4336e3:	add    edx,ebp
  4336e5:	push   ss
  4336e6:	imul   esp,DWORD PTR [ebp+0x0],0x0
  4336ea:	arpl   di,sp
  4336ec:	out    0x80,eax
  4336ee:	pop    ebp
  4336ef:	cmp    esp,edx
  4336f1:	mov    WORD PTR [ebx+0xa],es
  4336f4:	out    0x3,eax
  4336f6:	fmul   QWORD PTR [ebp+0x9d50367]
  4336fc:	data16 jmp 0x4336f9
  4336ff:	pop    ebp
  433700:	test   DWORD PTR [ebx-0x63],0x9d4c2f5d
  433707:	pop    ebp
  433708:	out    dx,eax
  433709:	dec    ebx
  43370a:	lea    edx,[esi]
  43370c:	fs inc esi
  43370e:	(bad)  
  43370f:	or     edi,esp
  433711:	adc    DWORD PTR [edx+0x2a],0xffffffa2
  433715:	xchg   BYTE PTR [ecx],dl
  433717:	in     eax,0xa2
  433719:	cld    
  43371a:	add    ah,bh
  43371c:	out    0x3,eax
  43371e:	dec    ebp
  43371f:	xchg   ebp,eax
  433720:	cmp    dh,0xec
  433723:	out    0x66,al
  433725:	mov    fs,ebp
  433727:	in     al,0x82
  433729:	cld    
  43372a:	xchg   ebp,eax
  43372b:	and    BYTE PTR [ebx+ebp*8],dh
  43372e:	fsubrp st(6),st
  433730:	add    BYTE PTR [esi+0x63],dh
  433733:	mov    dh,ah
  433735:	ins    BYTE PTR es:[edi],dx
  433736:	leave  
  433737:	loopne 0x4336c0
  433739:	ins    BYTE PTR es:[edi],dx
  43373a:	mov    edx,0x7e5ef9e2
  43373f:	or     esi,edi
  433741:	call   0x7dc6c61c
  433746:	stos   DWORD PTR es:[edi],eax
  433747:	loopne 0x433742
  433749:	not    BYTE PTR [ebx+0x1a]
  43374c:	(bad)  
  43374d:	call   0xc9193752
  433752:	add    DWORD PTR [ecx-0x6d],0xffffffe0
  433756:	stc    
  433757:	out    0xd6,eax
  433759:	or     DWORD PTR [eax],eax
  43375b:	adc    BYTE PTR [edx-0x19],ch
  43375e:	stc    
  43375f:	jmp    0x1533c1e5
  433764:	jno    0x433746
  433766:	xor    cl,ah
  433768:	(bad)  
  433769:	or     DWORD PTR [ecx],ecx
  43376b:	ins    BYTE PTR es:[edi],dx
  43376c:	or     DWORD PTR ds:[eax],eax
  43376f:	jmp    0xf533c9cb
  433774:	dec    esi
  433775:	loopne 0x433777
  433777:	loope  0x43374f
  433779:	or     edi,esp
  43377b:	jo     0x433756
  43377d:	or     DWORD PTR [eax],eax
  43377f:	(bad)  
  433780:	push   esp
  433781:	fsincos 
  433783:	(bad)  
  433784:	sbb    DWORD PTR cs:[eax],ecx
  433787:	jmp    0x68499262
  43378c:	dec    esp
  43378d:	fsincos 
  43378f:	mov    esi,0xe908091e
  433794:	(bad)  
  433795:	mov    WORD PTR [ebx-0x61ff33f],cs
  43379b:	push   0x0
  43379d:	loopne 0x433812
  43379f:	in     al,0x39
  4337a1:	loopne 0x43379c
  4337a3:	xchg   esi,eax
  4337a4:	outs   dx,BYTE PTR ds:[esi]
  4337a5:	fs shl ebp,0xe7
  4337a9:	mov    eax,esi
  4337ab:	add    BYTE PTR [ecx-0x1e],bl
  4337ae:	not    DWORD PTR [eax]
  4337b0:	in     al,0x9
  4337b2:	add    BYTE PTR [ecx-0x3df70000],cl
  4337b8:	cmc    
  4337b9:	(bad)  
  4337ba:	cmp    edx,DWORD PTR [ebp-0x5cba0389]
  4337c0:	in     al,0xfd
  4337c2:	sbb    esp,ecx
  4337c4:	pop    es
  4337c5:	test   BYTE PTR [eax-0x3800061b],ah
  4337cb:	fild   QWORD PTR [ebp+0xb]
  4337ce:	dec    ebp
  4337cf:	cli    
  4337d0:	scas   eax,DWORD PTR es:[edi]
  4337d1:	inc    ebx
  4337d2:	lods   al,BYTE PTR ds:[esi]
  4337d3:	xchg   esi,eax
  4337d4:	jge    0x4337ba
  4337d6:	leave  
  4337d7:	loopne 0x4337d0
  4337d9:	mov    esi,ecx
  4337db:	jmp    0xc8ff37d5
  4337e0:	jge    0x4337aa
  4337e2:	fchs   
  4337e4:	test   DWORD PTR [ecx],0xe900097c
  4337ea:	mov    fs,ebp
  4337ec:	stc    
  4337ed:	(bad)  
  4337ee:	out    dx,eax
  4337ef:	cmc    
  4337f0:	pop    eax
  4337f1:	(bad)  
  4337f3:	xchg   edx,eax
  4337f4:	cli    
  4337f5:	(bad)  
  4337f6:	cmp    al,0x51
  4337f8:	dec    eax
  4337f9:	je     0x4337c0
  4337fb:	xor    edi,DWORD PTR [edx-0x8d84ff1]
  433801:	call   FWORD PTR [ebx]
  433803:	push   ecx
  433804:	dec    eax
  433805:	xadd   DWORD PTR ds:0x8c3c0004,edi
  43380c:	mov    edi,0xf08a6304
  433811:	std    
  433812:	pop    ebx
  433813:	loopne 0x433825
  433815:	or     ah,bh
  433817:	or     BYTE PTR [ecx+0x580000bd],al
  43381d:	loop   0x433816
  43381f:	jmp    eax
  433821:	sbb    eax,0xe1b3b707
  433826:	push   eax
  433827:	push   0x3f2d5
  43382c:	aad    0x45
  43382e:	xor    ah,0xe0
  433831:	mov    esi,esi
  433833:	push   eax
  433834:	dec    eax
  433835:	outs   dx,BYTE PTR ds:[esi]
  433836:	(bad)  
  433838:	rcr    BYTE PTR [ebx+0x4d],cl
  43383b:	call   0xfa399173
  433840:	push   esi
  433841:	ss or  eax,0x16be9583
  433847:	rcr    DWORD PTR [eax-0x7e],0xf8
  43384b:	stc    
  43384c:	stos   BYTE PTR es:[edi],al
  43384d:	icebp  
  43384e:	std    
  43384f:	call   ebp
  433851:	aaa    
  433852:	adc    al,BYTE PTR [esi-0x7c7ad8ee]
  433858:	mov    DWORD PTR ds:0x6d92f9f6,ebx
  43385e:	(bad)  
  433860:	sub    BYTE PTR [ebx],0x4
  433863:	add    ch,dl
  433865:	repnz mov BYTE PTR [ebx-0x60a0297],al
  43386c:	pop    esp
  43386d:	ins    DWORD PTR es:[edi],dx
  43386e:	fsincos 
  433870:	bound  ecx,QWORD PTR [ebx]
  433872:	in     al,dx
  433873:	call   0x85412b4e
  433878:	fisubr DWORD PTR [edi-0x42]
  43387b:	add    al,0x5c
  43387d:	xor    eax,0xfbd1
  433882:	inc    edx
  433883:	jmp    0x4338c0
  433885:	ret    0x4ec1
  433888:	mov    esi,DWORD PTR [eax-0x27]
  43388b:	push   esi
  43388d:	xor    eax,0x95b3e22
  433892:	push   0xffffffda
  433894:	pop    edi
  433895:	aaa    
  433896:	(bad)  
  433897:	lock or BYTE PTR [esi+0x61],bh
  43389b:	cmc    
  43389c:	std    
  43389d:	inc    DWORD PTR [edx]
  43389f:	ins    DWORD PTR es:[edi],dx
  4338a0:	hlt    
  4338a1:	sti    
  4338a2:	add    cl,BYTE PTR [ecx]
  4338a4:	mov    ds:0xe709cd04,al
  4338a9:	or     BYTE PTR [edx+ecx*8],ah
  4338ac:	sbb    ebp,DWORD PTR [edx]
  4338ae:	mov    eax,0xe4d45ed2
  4338b3:	mov    dh,0x28
  4338b5:	or     BYTE PTR [edx],0x14
  4338b8:	arpl   WORD PTR [edx-0x2a],bp
  4338bb:	or     edi,esp
  4338bd:	mov    WORD PTR [edi-0x6d7f6a25],fs
  4338c3:	adc    ebp,DWORD PTR [ebx+0x66]
  4338c6:	(bad)  
  4338c7:	or     edi,esp
  4338c9:	mov    ah,BYTE PTR [esi-0x12]
  4338cc:	push   esp
  4338cd:	stc    
  4338ce:	lods   al,BYTE PTR ds:[esi]
  4338cf:	mov    ecx,0xd24e8b3f
  4338d4:	inc    esp
  4338d5:	stc    
  4338d6:	pushf  
  4338d7:	icebp  
  4338d8:	addr16 add eax,0xb76009d5
  4338de:	popf   
  4338df:	in     eax,0x2a
  4338e1:	stc    
  4338e2:	pop    edx
  4338e3:	popf   
  4338e4:	or     esi,edi
  4338e6:	add    BYTE PTR [eax],al
  4338e8:	jl     0x4338cd
  4338ea:	adc    BYTE PTR [ecx+0x70],ch
  4338ed:	jecxz  0x4338d6
  4338ef:	mov    ds:0x3a699c5,al
  4338f4:	pop    edx
  4338f5:	lea    ecx,[ebx]
  4338f7:	neg    DWORD PTR [ebx+eiz*8+0x6c]
  4338fb:	push   esp
  4338fc:	push   edx
  4338fd:	xchg   ecx,eax
  4338fe:	fild   WORD PTR [ebx+0x51]
  433901:	shl    DWORD PTR [edx+edi*8-0x8],1
  433905:	(bad)  
  433906:	rcl    BYTE PTR [eax+edi*1-0x1d],1
  43390a:	out    0x84,eax
  43390c:	sub    eax,0x5588e25a
  433911:	or     edi,esp
  433913:	add    ecx,esp
  433915:	lea    ecx,[edi+0x3]
  433918:	aad    0x9
  43391a:	data16 sti 
  43391c:	jbe    0x433930
  43391e:	add    BYTE PTR [ebp-0x69],ah
  433921:	in     al,0xf9
  433923:	jmp    0xf6a51b81
  433928:	dec    esp
  433929:	or     dl,bh
  43392b:	sahf   
  43392c:	in     eax,dx
  43392d:	fs clc 
  43392f:	add    BYTE PTR [ebp+0x32],ah
  433932:	jge    0x4338c5
  433934:	ins    BYTE PTR es:[edi],dx
  433935:	adc    BYTE PTR [esp+eax*2+0x6af9e0d8],al
  43393c:	into   
  43393d:	jo     0x433948
  43393f:	ins    BYTE PTR es:[edi],dx
  433940:	mul    esp
  433942:	stc    
  433943:	jmp    0x6533c00c
  433948:	mov    ebp,0x2680e0
  43394d:	add    BYTE PTR [ebx],dh
  43394f:	jmp    0xe900:0x11ad56fb
  433956:	(bad)  
  433957:	pop    ebp
  433958:	sbb    ebp,DWORD PTR [eax+0x53]
  43395b:	fsincos 
  43395d:	lea    ecx,ds:[ecx]
  433960:	(bad)  
  433961:	call   0x6a53263c
  433966:	pop    ebx
  433967:	fsincos 
  433969:	es jge 0x4339b5
  43396c:	shl    DWORD PTR [esi+esi*2-0x22],0xf9
  433971:	push   ss
  433972:	fmul   DWORD PTR [ecx]
  433974:	add    cl,ch
  433976:	push   ecx
  433977:	xchg   al,dh
  433979:	add    al,0x5d
  43397b:	loopne 0x433924
  43397d:	jmp    0xe64342d8
  433982:	retf   0xff70
  433985:	call   0x7244c660
  43398a:	mov    cl,BYTE PTR ds:0xeae1a67d
  433990:	xchg   ecx,eax
  433991:	call   0xf8b6436c
  433996:	push   esi
  433997:	fisub  DWORD PTR [ecx+0x0]
  43399a:	fld    DWORD PTR [edx-0x41]
  43399d:	test   DWORD PTR [eax+eiz*8],esp
  4339a0:	idiv   edi
  4339a2:	std    
  4339a3:	add    eax,0x3e170000
  4339a8:	xor    DWORD PTR [ebp-0x81f9c],eax
  4339ae:	shl    bl,cl
  4339b0:	add    BYTE PTR [ebp-0x1fac0000],0xf7
  4339b7:	inc    DWORD PTR [edi-0x13ffff5a]
  4339bd:	and    al,0x95
  4339bf:	call   0x7f3b1315
  4339c4:	xchg   BYTE PTR [ebp+ebp*4-0x826ce18],dl
  4339cb:	sub    edx,0xbcfff942
  4339d1:	dec    edi
  4339d2:	not    DWORD PTR ds:0x400f64
  4339d8:	gs xchg ebx,eax
  4339da:	test   edi,ebp
  4339dc:	adc    ecx,ebx
  4339de:	test   DWORD PTR [ecx-0xa5e07],0x74c08ac3
  4339e8:	mov    ds:0xb1e47d8e,al
  4339ed:	fdiv   st,st(7)
  4339ef:	mov    DWORD PTR [ecx],ecx
  4339f1:	mov    dl,0xf5
  4339f3:	inc    ebx
  4339f5:	hlt    
  4339f6:	push   es
  4339f7:	mov    ecx,esi
  4339f9:	in     eax,dx
  4339fa:	cmc    
  4339fb:	call   ebx
  4339fd:	hlt    
  4339fe:	dec    BYTE PTR [ecx-0xa173f]
  433a04:	inc    ebx
  433a05:	out    dx,eax
  433a06:	jge    0x4339f8
  433a08:	xor    eax,ebx
  433a0a:	test   DWORD PTR [eax-0x7286ec68],0xfff7e278
  433a14:	aad    0x72
  433a16:	std    
  433a17:	inc    DWORD PTR [eax]
  433a19:	add    ch,dl
  433a1b:	imul   edi,edx,0xfffffff8
  433a1e:	pusha  
  433a1f:	scas   eax,DWORD PTR es:[edi]
  433a20:	clc    
  433a21:	stc    
  433a22:	adc    bl,BYTE PTR [eax+esi*4-0x1c]
  433a26:	or     BYTE PTR [eax-0x34b7060e],bl
  433a2c:	clc    
  433a2d:	stc    
  433a2e:	cli    
  433a2f:	jae    0x4339eb
  433a31:	or     BYTE PTR [esi+eiz*2-0x6b],bl
  433a35:	sti    
  433a36:	jmp    0x8069:0xe1418677
  433a3d:	pushf  
  433a3e:	fadd   DWORD PTR [edi-0x4e6cf60e]
  433a44:	dec    ebp
  433a45:	stc    
  433a46:	add    BYTE PTR [esi-0x8],0xf9
  433a4a:	ret    0x803d
  433a4d:	cwde   
  433a4e:	mov    eax,0x552f267
  433a53:	pop    edx
  433a54:	mov    eax,0xf237a8dc
  433a59:	call   0xfa3571d6
  433a5e:	push   esi
  433a5f:	cs adc eax,0x6f0dd380
  433a65:	adc    BYTE PTR [ebp+eiz*2-0x13],dl
  433a69:	sti    
  433a6a:	sub    BYTE PTR [edi],0xfd
  433a6d:	(bad)  
  433a6e:	jp     0x433a62
  433a70:	repnz cmp DWORD PTR [ecx-0x3],0xfffffff1
  433a75:	stc    
  433a76:	pop    esi
  433a77:	ins    DWORD PTR es:[edi],dx
  433a78:	fsincos 
  433a7a:	bound  ecx,QWORD PTR [edi]
  433a7c:	mov    BYTE PTR [eax+0x0],dl
  433a7f:	add    ah,dl
  433a81:	pop    esp
  433a82:	add    eax,0x70195940
  433a87:	idiv   DWORD PTR [esp+esi*2]
  433a8a:	repz stc 
  433a8c:	inc    edx
  433a8d:	daa    
  433a8e:	sub    al,0x38
  433a91:	or     edx,esp
  433a93:	cmc    
  433a94:	fisttp QWORD PTR [ecx]
  433a96:	out    0x3,eax
  433a98:	push   edx
  433a99:	jbe    0x433a2a
  433a9b:	neg    DWORD PTR [eax+eiz*8]
  433a9e:	mov    esi,0x36f19820
  433aa3:	add    eax,0xf5bc0c59
  433aa8:	or     al,0x51
  433aaa:	pop    ds
  433aab:	add    eax,0xf5a9c559
  433ab0:	cld    
  433ab1:	mov    ecx,DWORD PTR [edi+0x5186dc01]
  433ab7:	add    edx,ebp
  433ab9:	or     DWORD PTR [edx-0x7521e281],ebp
  433abf:	cmc    
  433ac0:	mov    ah,0x9
  433ac2:	out    0x3,eax
  433ac4:	mov    DWORD PTR [ebp-0x20330889],0xea56bd67
  433ace:	ins    BYTE PTR es:[edi],dx
  433acf:	cmc    
  433ad0:	mov    esp,0xd503e6fa
  433ad5:	push   cs
  433ad6:	arpl   WORD PTR [eax-0x75ad2051],sp
  433adc:	push   esi
  433add:	mov    ds:0x69cf54c,al
  433ae2:	cwde   
  433ae3:	mov    ebp,0xb6560000
  433ae8:	cmp    al,0xf5
  433aea:	mov    WORD PTR [edx],ds
  433aec:	pop    edi
  433aed:	jg     0x433a95
  433aef:	(bad)  [edx]
  433af1:	cmc    
  433af2:	xchg   esp,eax
  433af3:	test   DWORD PTR [edi],esi
  433af5:	imul   DWORD PTR [edi+ebx*8-0x1b]
  433af9:	add    edx,ebp
  433afb:	or     DWORD PTR [eax],eax
  433afd:	test   BYTE PTR [edi-0x21],bl
  433b00:	or     ch,BYTE PTR [ebx+0x3e6f9d5]
  433b06:	fadd   QWORD PTR [ecx+eiz*2+0xdf4cf6]
  433b0d:	push   0xffffff80
  433b0f:	push   es
  433b10:	test   al,0xc9
  433b12:	stos   BYTE PTR es:[edi],al
  433b13:	clc    
  433b14:	xchg   BYTE PTR [edx+ecx*1+0x7edef9e3],ah
  433b1b:	dec    edx
  433b1c:	je     0x433b0d
  433b1e:	fldenv [eax+0x62dcd41]
  433b24:	or     DWORD PTR [esi-0x2f],edi
  433b27:	fst    QWORD PTR [edi+0x40b1e4d2]
  433b2d:	(bad)
  433b32:	pop    edi
  433b33:	in     eax,0xfe
  433b35:	fld    DWORD PTR [edi+eax*4]
  433b38:	mov    ebx,0xf9e0e3bd
  433b3d:	lahf   
  433b3e:	arpl   cx,bx
  433b40:	sti    
  433b41:	mov    fs,ecx
  433b43:	dec    ecx
  433b44:	je     0x433b28
  433b46:	or     eax,0xd679bc
  433b4b:	add    BYTE PTR [edx+0x6],al
  433b4e:	xor    eax,0xf10f45af
  433b53:	xchg   ecx,eax
  433b54:	push   ebp
  433b55:	iret   
  433b56:	add    BYTE PTR [esi-0x74],bl
  433b59:	pop    esi
  433b5a:	mov    ebx,DWORD PTR [ecx-0x5d]
  433b5d:	loopne 0x433b58
  433b5f:	jmp    0x5643453b
  433b64:	sbb    ebx,edx
  433b66:	sti    
  433b67:	inc    esi
  433b68:	mov    DWORD PTR [ecx],ecx
  433b6a:	nop
  433b6b:	jmp    0x6319c046
  433b70:	jle    0x433bcc
  433b72:	(bad)  
  433b73:	stc    
  433b74:	popf   
  433b75:	pop    esp
  433b76:	mov    ebx,0xf9e06b11
  433b7b:	jmp    0x6d044963
  433b80:	outs   dx,BYTE PTR ds:[esi]
  433b81:	loop   0x433b7c
  433b83:	push   cs
  433b84:	xlat   BYTE PTR ds:[ebx]
  433b85:	or     DWORD PTR [eax],eax
  433b87:	add    BYTE PTR [ecx+esi*8],bh
  433b8a:	adc    al,BYTE PTR [ebx-0xa256f]
  433b90:	dec    ebx
  433b91:	repnz mov eax,0xa2e00
  433b97:	cmp    ecx,eax
  433b99:	mov    ebp,0x5b0bfff5
  433b9e:	dec    BYTE PTR [eax-0xa424f]
  433ba4:	or     ebx,DWORD PTR [esi-0x41]
  433ba7:	or     edi,DWORD PTR [edi]
  433ba9:	pusha  
  433baa:	(bad)  
  433bab:	and    BYTE PTR [ecx-0x4b],dh
  433bae:	cmc    
  433baf:	inc    DWORD PTR [eax]
  433bb1:	add    BYTE PTR [ebx-0x78],cl
  433bb4:	ins    DWORD PTR es:[edi],dx
  433bb5:	repz ja 0x433b48
  433bb8:	call   0xf81d77ba
  433bbd:	lea    eax,[eax+ebx*8-0x9]
  433bc1:	push   DWORD PTR [ecx-0x3b]
  433bc4:	ja     0x433bcc
  433bc6:	ja     0x433b9a
  433bc8:	add    eax,ebx
  433bca:	shr    BYTE PTR [edx],1
  433bcc:	add    DWORD PTR [ebp-0x824a4],0x25
  433bd3:	xor    al,0x50
  433bd5:	push   ebx
  433bd6:	jecxz  0x433b95
  433bd8:	out    dx,al
  433bd9:	hlt    
  433bda:	cmp    ebx,ecx
  433bdc:	jnp    0x433b9f
  433bde:	int3   
  433bdf:	test   cl,dh
  433be1:	cmp    DWORD PTR ds:0xbfdac7b,esi
  433be7:	fld    DWORD PTR [ebx+0x76cc07f8]
  433bed:	push   es
  433bee:	jg     0x433b7a
  433bf0:	mov    eax,0x88d8cbfd
  433bf5:	push   cs
  433bf6:	pop    edx
  433bf7:	mov    esp,0xd4418db5
  433bfc:	and    eax,esi
  433bfe:	xor    ah,al
  433c00:	jge    0x433bf2
  433c02:	aad    0xf5
  433c04:	in     al,dx
  433c05:	stc    
  433c06:	aad    0xf0
  433c08:	std    
  433c09:	call   FWORD PTR [esi+ebp*2-0x1c]
  433c0d:	sti    
  433c0e:	dec    edx
  433c0f:	fdivr  QWORD PTR [ebx+esi*4+0x39]
  433c13:	(bad)  
  433c14:	out    dx,al
  433c15:	stc    
  433c16:	add    BYTE PTR [eax],al
  433c18:	rcl    DWORD PTR [ecx-0x14563f78],0x7a
  433c1f:	retf   0x2a55
  433c22:	xor    al,0x74
  433c24:	mov    esi,DWORD PTR [ebx-0x33e71b80]
  433c2a:	out    dx,al
  433c2b:	test   DWORD PTR [eax-0x31],esp
  433c2e:	lock stc 
  433c30:	or     ah,BYTE PTR [ebp-0x386acffc]
  433c36:	das    
  433c37:	inc    edi
  433c38:	jae    0x433c13
  433c3a:	sub    eax,0x4432db74
  433c3f:	xor    eax,0x25f7f61b
  433c44:	pop    eax
  433c45:	(bad)  
  433c46:	lock stc 
  433c48:	fisub  DWORD PTR [ecx-0x38021a1b]
  433c4e:	out    dx,eax
  433c4f:	jae    0x433c2f
  433c51:	push   ecx
  433c52:	or     eax,0x7cf316b0
  433c57:	xor    DWORD PTR [ecx+0x5ef9ee6d],0x6d
  433c5e:	loope  0x433c5b
  433c60:	stos   BYTE PTR es:[edi],al
  433c61:	cmp    ebx,edx
  433c63:	add    DWORD PTR [ebx+esi*2],ecx
  433c66:	and    eax,0x3de62100
  433c6b:	xor    eax,0x25f89da3
  433c70:	push   eax
  433c71:	inc    esi
  433c72:	lock stc 
  433c74:	sub    BYTE PTR [ecx-0x78],0xe0
  433c78:	js     0x433ca5
  433c7a:	out    dx,al
  433c7b:	jge    0x433c7d
  433c7d:	add    BYTE PTR [eax],dh
  433c7f:	or     DWORD PTR [edi-0x10],edx
  433c82:	ins    BYTE PTR es:[edi],dx
  433c83:	fsubr  st(7),st
  433c85:	add    dl,BYTE PTR [esi+0x63]
  433c88:	call   0x64d41190
  433c8d:	repz dec esi
  433c8f:	fadd   QWORD PTR [edx]
  433c91:	fwait
  433c92:	xchg   ebp,eax
  433c93:	push   ebp
  433c94:	mov    ch,0x9c
  433c96:	aad    0xa
  433c98:	out    0x3,eax
  433c9a:	rcl    DWORD PTR [edx],0x21
  433c9d:	mov    BYTE PTR [ecx],cl
  433c9f:	fsubrp st(2),st
  433ca1:	icebp  
  433ca2:	(bad)  
  433ca3:	lock call FWORD PTR [ebx-0x361fa7de]
  433caa:	push   esi
  433cab:	mov    ch,0xcc
  433cad:	icebp  
  433cae:	or     al,0x30
  433cb0:	into   
  433cb1:	std    
  433cb2:	xor    al,BYTE PTR [edi]
  433cb4:	xor    edx,DWORD PTR [ebx]
  433cb6:	pop    ss
  433cb7:	xchg   BYTE PTR [ebx+0x7dbfcef],bl
  433cbd:	leave  
  433cbe:	push   esi
  433cbf:	mov    ecx,0x9ecf1a4
  433cc4:	out    0x3,eax
  433cc6:	aad    0x90
  433cc8:	je     0x433c8a
  433cca:	(bad)  
  433ccc:	mov    bl,BYTE PTR ds:0xf184ea6e
  433cd2:	int3   
  433cd3:	das    
  433cd4:	pop    esp
  433cd5:	aam    0xbe
  433cd7:	(bad)  [edx-0x6]
  433cda:	push   esi
  433cdb:	fisubr DWORD PTR [ecx+esi*8-0x54]
  433cdf:	push   cs
  433ce0:	fcomp  QWORD PTR [eax]
  433ce2:	add    BYTE PTR [eax],al
  433ce4:	lods   al,BYTE PTR ds:[esi]
  433ce5:	xchg   ebp,eax
  433ce6:	xchg   ebx,eax
  433ce7:	out    dx,eax
  433ce8:	pushf  
  433ce9:	(bad)  [edi+eax*4+0x7d]
  433ced:	fisttp QWORD PTR [edx-0xf]
  433cf0:	and    BYTE PTR [eax+0x7],dh
  433cf3:	fdiv   QWORD PTR [ebx]
  433cf5:	(bad)  
  433cf6:	cmp    dh,cl
  433cf8:	add    dh,al
  433cfa:	add    ch,ah
  433cfc:	test   DWORD PTR [edi-0x1e9bd330],edx
  433d02:	test   DWORD PTR [ebp+ebp*1-0x21],esp
  433d06:	stc    
  433d07:	push   ds
  433d08:	loop   0x433c90
  433d0a:	fcom   DWORD PTR [esp+eiz*2]
  433d0d:	loope  0x433c9a
  433d0f:	pop    esp
  433d10:	sub    eax,0x2906f9df
  433d15:	call   0xf983:0xd845fef4
  433d1c:	sub    esp,ecx
  433d1e:	stc    
  433d1f:	loope  0x433cc0
  433d21:	push   ebp
  433d22:	adc    eax,0xfbda53df
  433d27:	fisub  WORD PTR ds:0x7dfb7306
  433d2d:	dec    esp
  433d2e:	sbb    WORD PTR [edx+0x5c4d886],dx
  433d35:	loope  0x433d1f
  433d37:	push   ecx
  433d38:	std    
  433d39:	loopne 0x433d34
  433d3b:	push   0x12
  433d3d:	push   cs
  433d3e:	jge    0x433dac
  433d40:	cs (bad) 
  433d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433d44:	(bad)  
  433d45:	push   ebp
  433d46:	outs   dx,DWORD PTR ds:[esi]
  433d47:	push   0x0
  433d49:	add    BYTE PTR [ebx],dh
  433d4b:	jmp    0x17a:0x9e596fb
  433d52:	push   eax
  433d53:	xchg   eax,esp
  433d55:	test   ch,al
  433d57:	loopne 0x433cde
  433d59:	xor    al,0xba
  433d5b:	fdivp  st(1),st
  433d5d:	jbe    0x433d9e
  433d5f:	xchg   DWORD PTR [esp+ebp*2-0x61f61f5b],ebp
  433d66:	fsubr  st(0),st
  433d68:	mov    ecx,DWORD PTR [ebp-0x46061f4d]
  433d6e:	clc    
  433d6f:	pop    es
  433d70:	mov    esp,DWORD PTR [edx+ecx*4-0x6ff74c7]
  433d77:	mov    ds:0x50c3fff5,al
  433d7c:	push   eax
  433d7d:	inc    esi
  433d7e:	adc    al,0x1f
  433d80:	in     eax,dx
  433d81:	inc    ebx
  433d83:	test   esp,eax
  433d85:	adc    cl,bh
  433d87:	(bad)  
  433d88:	ins    DWORD PTR es:[edi],dx
  433d89:	sub    BYTE PTR [ebp-0x7d],dh
  433d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d8d:	std    
  433d8e:	ret    
  433d8f:	fnstenv [eax+eiz*1-0x1d]
  433d93:	xchg   ebx,eax
  433d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d95:	std    
  433d96:	rcr    ecx,cl
  433d98:	test   DWORD PTR [ebp-0x8140c],eax
  433d9e:	mov    cl,0x1b
  433da0:	hlt    
  433da1:	call   0x3b0fc0
  433da6:	mov    edi,0x3fdac98
  433dab:	jmp    0xa079:0x5900
  433db2:	jecxz  0x433dd5
  433db4:	jg     0x433d3e
  433db6:	fdivr  st,st(5)
  433db8:	adc    ebp,edx
  433dba:	imul   ebx
  433dbc:	hlt    
  433dbd:	jmp    0x8bf7:0xea41e0ad
  433dc4:	xchg   ecx,eax
  433dc5:	icebp  
  433dc6:	cmc    
  433dc7:	push   DWORD PTR [ebx]
  433dc9:	mov    BYTE PTR [ebp-0x28],bh
  433dcc:	inc    ecx
  433dcd:	jmp    0xfff7:0xd646e8f7
  433dd4:	add    eax,0x51d8b58d
  433dd9:	jmp    0x5033ed5
  433dde:	out    dx,al
  433ddf:	test   DWORD PTR [ebx+ebx*8],edi
  433de2:	idiv   edi
  433de4:	mov    eax,0x6f570a61
  433de9:	xor    esp,DWORD PTR [eax]
  433deb:	lea    edi,[ecx]
  433ded:	(bad)  
  433dee:	cmc    
  433def:	call   ebp
  433df1:	aas    
  433df2:	fsubr  QWORD PTR [esi+0x7de94886]
  433df8:	xchg   ecx,eax
  433df9:	fistp  QWORD PTR [esi-0x45]
  433dfc:	inc    ecx
  433dfd:	push   ss
  433dfe:	jmp    0x11da13fc
  433e03:	stc    
  433e04:	sub    BYTE PTR [edi-0x11],ah
  433e07:	stc    
  433e08:	push   0x30
  433e0a:	pop    ss
  433e0b:	cmp    al,0xcb
  433e0d:	mov    ds:0x3f307cfd,al
  433e12:	out    dx,eax
  433e13:	stc    
  433e14:	add    BYTE PTR [eax],al
  433e16:	push   edx
  433e17:	jecxz  0x433e65
  433e19:	test   DWORD PTR [eax+0x43],ebp
  433e1c:	out    dx,eax
  433e1d:	stc    
  433e1e:	inc    edx
  433e1f:	pop    esp
  433e20:	scas   eax,DWORD PTR es:[edi]
  433e21:	fdivr  QWORD PTR [eax]
  433e23:	loopne 0x433e0f
  433e25:	sub    eax,0x87fd6d2b
  433e2a:	push   eax
  433e2b:	shl    al,0xf9
  433e2e:	and    ch,BYTE PTR [edi-0x43]
  433e31:	je     0x433e1d
  433e33:	ins    BYTE PTR es:[edi],dx
  433e34:	mov    ch,0xe7
  433e36:	ret    0xeac0
  433e39:	stc    
  433e3a:	or     dh,BYTE PTR [esi-0x1d6aee07]
  433e40:	ret    0xe300
  433e43:	loop   0x433e42
  433e45:	jmp    DWORD PTR [esi-0x7aafb25e]
  433e4b:	adc    dl,BYTE PTR [edi+eiz*8-0x2]
  433e4f:	jge    0x433e3b
  433e51:	stc    
  433e52:	fcmovbe st,st(5)
  433e54:	stc    
  433e55:	adc    DWORD PTR ds:0x225152e3,edx
  433e5b:	clc    
  433e5c:	push   eax
  433e5d:	out    0x98,eax
  433e5f:	pop    ebp
  433e60:	jmp    0xb2fb:0xbd15fcf9
  433e67:	addr16 jno 0x433e75
  433e6a:	push   esi
  433e6b:	or     DWORD PTR [ebx+eax*8+0x65ad89e],esp
  433e72:	int3   
  433e73:	mov    cs,WORD PTR [eax+edi*8-0x77a12774]
  433e7a:	add    BYTE PTR [eax],al
  433e7c:	lods   eax,DWORD PTR ds:[esi]
  433e7d:	(bad)  
  433e7e:	inc    edx
  433e7f:	out    dx,al
  433e80:	pop    eax
  433e81:	inc    esi
  433e82:	cmp    ecx,DWORD PTR [esi+0x1f]
  433e85:	sbb    eax,0xa27d4a24
  433e8a:	cmp    eax,0x26c26cee
  433e8f:	xchg   ebx,eax
  433e90:	ret    
  433e91:	add    al,0xa6
  433e93:	add    esp,DWORD PTR [edx+eax*1+0x2b403a6]
  433e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433e9b:	add    edx,DWORD PTR [esi]
  433e9d:	add    ah,BYTE PTR [esi-0x59fc1afd]
  433ea3:	add    esp,eax
  433ea5:	add    esp,DWORD PTR [esi-0x59fc4afd]
  433eab:	add    esp,DWORD PTR [eax+0x58042604]
  433eb1:	fdiv   DWORD PTR [ecx+edi*2]
  433eb4:	sub    DWORD PTR [ebx+eax*8+0x4c84a424],ecx
  433ebb:	add    BYTE PTR [eax-0x25883d28],cl
  433ec1:	shl    BYTE PTR [eax+ebp*8],1
  433ec4:	cld    
  433ec5:	xlat   BYTE PTR ds:[ebx]
  433ec6:	mov    dl,0x6d
  433ec8:	clc    
  433ec9:	and    ebp,DWORD PTR [eax-0x13]
  433ecc:	in     al,dx
  433ecd:	xlat   BYTE PTR ds:[ebx]
  433ece:	mov    ds:0x9a29676d,al
  433ed3:	pop    ss
  433ed4:	leave  
  433ed5:	jmp    DWORD PTR [esi]
  433ed7:	add    al,0x94
  433ed9:	or     dh,cl
  433edb:	add    edx,ebp
  433edd:	or     DWORD PTR [esi+0x250000c3],esi
  433ee3:	cmp    dl,BYTE PTR [edi]
  433ee5:	push   esp
  433ee6:	and    eax,0x8f2900e2
  433eeb:	sar    ecx,1
  433eed:	push   0xffffff9d
  433eef:	(bad)  
  433ef0:	jl     0x433f23
  433ef2:	mov    al,0xed
  433ef4:	data16 jo 0x433f21
  433ef7:	out    dx,al
  433ef8:	dec    ebp
  433ef9:	mov    edi,0x62145b81
  433efe:	add    al,BYTE PTR [edx]
  433f00:	stc    
  433f01:	mov    esp,0x494382e6
  433f06:	and    DWORD PTR [edi+0x5aee4173],ecx
  433f0c:	loopne 0x433f34
  433f0e:	adc    ah,dh
  433f10:	ds jmp 0x482b48ec
  433f16:	pop    ebp
  433f17:	sar    ecx,1
  433f19:	bound  esp,QWORD PTR [ecx]
  433f1b:	and    eax,0x61d6ac0
  433f20:	xor    eax,0x3a4dc121
  433f25:	(bad)  
  433f26:	stos   DWORD PTR es:[edi],eax
  433f27:	push   es
  433f28:	aaa    
  433f29:	lods   al,BYTE PTR ds:[esi]
  433f2a:	cmp    dl,BYTE PTR [esi+0x2b]
  433f2d:	mov    dl,0x26
  433f2f:	pop    esi
  433f30:	and    esp,DWORD PTR [edx]
  433f32:	xor    DWORD PTR [edi+ebx*1+0x71],ebx
  433f36:	shr    ah,1
  433f38:	sbb    edx,esi
  433f3a:	shr    ebp,cl
  433f3c:	js     0x433f24
  433f3e:	lea    eax,[edx-0x20]
  433f41:	jno    0x433f1a
  433f43:	in     al,dx
  433f44:	(bad)  
  433f46:	add    BYTE PTR [eax],al
  433f48:	mov    ebx,0x11194fe9
  433f4d:	(bad)  
  433f4e:	(bad)  
  433f4f:	call   0x6a9a7e2a
  433f54:	out    dx,al
  433f55:	shl    BYTE PTR [ebp+eiz*8+0x5d],1
  433f59:	xchg   esp,eax
  433f5a:	in     eax,0xea
  433f5c:	sub    al,0xd4
  433f5e:	pop    eax
  433f5f:	das    
  433f60:	sbb    al,0x31
  433f62:	mov    DWORD PTR [eax],0xcccc966f
  433f68:	fistp  QWORD PTR [edx]
  433f6a:	mov    bl,0x18
  433f6c:	in     al,dx
  433f6d:	dec    ecx
  433f6e:	add    bl,ch
  433f70:	mov    bh,0x39
  433f72:	dec    ecx
  433f73:	mov    ebx,0x3b9dd4
  433f78:	daa    
  433f79:	pop    ss
  433f7a:	and    al,0xc
  433f7c:	cmc    
  433f7d:	adc    DWORD PTR [eax],ecx
  433f7f:	mov    DWORD PTR [edi],edi
  433f81:	push   cs
  433f82:	sub    DWORD PTR [ebx-0x78],0x3450493f
  433f89:	inc    ebx
  433f8a:	push   ebp
  433f8b:	pop    ecx
  433f8c:	inc    edi
  433f8d:	enter  0x4,0xbb
  433f91:	mov    edx,0x96a8ccbb
  433f96:	int3   
  433f97:	int3   
  433f98:	test   al,0x96
  433f9a:	int3   
  433f9b:	int3   
  433f9c:	mov    bh,0xe5
  433f9e:	dec    ebp
  433f9f:	mov    ecx,DWORD PTR [eax+0x5e]
  433fa2:	inc    ebp
  433fa3:	or     BYTE PTR [edi+edx*1+0x6c2c0052],dl
  433faa:	xor    DWORD PTR [ecx],eax
  433fac:	add    BYTE PTR [eax],al
  433fae:	mov    al,0xe
  433fb0:	sub    eax,eax
  433fb2:	pop    ecx
  433fb3:	leave  
  433fb4:	add    DWORD PTR [ecx-0x8],0xe
  433fb8:	mov    ecx,0x3d3df481
  433fbd:	add    ah,bh
  433fbf:	pop    eax
  433fc0:	out    0x33,eax
  433fc2:	dec    esi
  433fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433fc4:	add    eax,DWORD PTR [ecx]
  433fc6:	in     al,dx
  433fc7:	or     DWORD PTR [esi+0x39],ebx
  433fca:	les    eax,FWORD PTR ds:0x563e9407
  433fd0:	mov    edx,0xcc913f5d
  433fd5:	int3   
  433fd6:	sub    BYTE PTR [ecx-0x6ed73334],dl
  433fdc:	int3   
  433fdd:	int3   
  433fde:	aad    0x67
  433fe0:	in     eax,0x53
  433fe2:	pop    esi
  433fe3:	push   edi
  433fe4:	jns    0x434029
  433fe6:	int    0x57
  433fe8:	cmp    al,0x3c
  433fea:	(bad)  
  433feb:	call   0x5252:0xb714b0f5
  433ff2:	ficomp DWORD PTR [ebx]
  433ff4:	jae    0x433ff8
  433ff6:	out    0x10,al
  433ff8:	dec    ebp
  433ff9:	mov    edx,DWORD PTR [ecx]
  433ffb:	fild   DWORD PTR ds:0xab58b83
  434001:	test   DWORD PTR [eax],ecx
  434003:	mov    bh,0x7a
  434005:	dec    eax
  434006:	rol    DWORD PTR [edi],1
  434008:	jmp    0x434078
  43400a:	int3   
  43400b:	push   edi
  43400c:	dec    esp
  43400d:	or     dh,dl
  43400f:	stc    
  434010:	sub    ch,dh
  434012:	add    BYTE PTR [eax],al
  434014:	out    0xe8,eax
  434016:	inc    ebx
  434017:	jge    0x433fae
  434019:	mov    ebx,0xfae7d22a
  43401e:	xor    al,al
  434020:	mov    dl,0x9c
  434022:	dec    edx
  434023:	pop    ebx
  434024:	push   ss
  434025:	mov    ebp,esi
  434027:	addr16 int 0x85
  43402a:	inc    edx
  43402b:	add    BYTE PTR ds:0xd500044f,ch
  434031:	pop    edi
  434032:	pop    edi
  434033:	cld    
  434034:	aad    0x24
  434036:	add    al,0x0
  434038:	xchg   ebp,eax
  434039:	loop   0x43408a
  43403b:	call   0xfa29f3f4
  434040:	lods   al,BYTE PTR ds:[esi]
  434041:	gs mov ebp,0x4067c874
  434047:	or     BYTE PTR [esi-0x12adb25c],ch
  43404d:	xor    ah,dh
  43404f:	stc    
  434050:	repnz stc 
  434052:	dec    edx
  434053:	adc    DWORD PTR ds:0x9585191f,0x9
  43405a:	retf   
  43405b:	(bad)  
  43405c:	in     eax,dx
  43405d:	hlt    
  43405e:	xchg   ecx,eax
  43405f:	rcl    DWORD PTR [eax-0x16],cl
  434062:	call   0x8a195729
  434067:	jmp    0x4e50:0x238ed4bc
  43406e:	mov    edi,DWORD PTR [esi-0x2b]
  434071:	and    bh,0x36
  434074:	xchg   edx,eax
  434075:	push   ss
  434076:	in     al,0x3
  434078:	add    BYTE PTR [eax],al
  43407a:	aad    0xc9
  43407c:	repnz (bad) 
  43407e:	pop    edx
  43407f:	sub    BYTE PTR [eax],0xc6
  434082:	pop    eax
  434083:	outs   dx,BYTE PTR ds:[esi]
  434084:	aas    
  434085:	ret    0xd616
  434088:	dec    ecx
  434089:	jmp    0x7f6d:0xc3f6d47c
  434090:	out    0x3,eax
  434092:	aad    0xc8
  434094:	xor    ah,BYTE PTR [eax]
  434096:	test   eax,0x9103a6fb
  43409b:	lds    esi,FWORD PTR [ebx]
  43409d:	mov    bh,0x89
  43409f:	lds    ebp,FWORD PTR [ebx]
  4340a1:	mov    bh,0x21
  4340a3:	lds    ebx,FWORD PTR [esi+0x3f]
  4340a6:	icebp  
  4340a7:	add    DWORD PTR [esi+0x37],ebx
  4340aa:	stc    
  4340ab:	stc    
  4340ac:	in     eax,dx
  4340ad:	mov    ebx,0xf7c34550
  4340b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4340b3:	add    bl,BYTE PTR [esi+0x3f]
  4340b6:	icebp  
  4340b7:	or     eax,0xf963e3f2
  4340bc:	out    0x54,al
  4340be:	and    al,0xea
  4340c0:	outs   dx,BYTE PTR ds:[esi]
  4340c1:	int3   
  4340c2:	pop    eax
  4340c3:	dec    ebp
  4340c4:	or     edi,esp
  4340c6:	add    eax,0x10036d
  4340cb:	mov    esp,0x1b1406e
  4340d0:	mov    dl,0xe3
  4340d2:	lock mov dh,0x0
  4340d5:	adc    dl,BYTE PTR [ebx]
  4340d7:	stc    
  4340d8:	inc    DWORD PTR [eax+0x6a]
  4340db:	clc    
  4340dc:	cmp    al,0xe9
  4340de:	add    BYTE PTR [eax],al
  4340e0:	jp     0x4340b4
  4340e2:	xor    ebp,ecx
  4340e4:	(bad)  
  4340e5:	or     DWORD PTR [eax],eax
  4340e7:	bound  edx,QWORD PTR ds:0x1d60102e
  4340ed:	adc    BYTE PTR cs:[ebp+ebx*1+0x2e],dh
  4340f2:	adc    dl,dl
  4340f4:	mov    dh,0x45
  4340f6:	push   edx
  4340f7:	push   ds
  4340f8:	jbe    0x434104
  4340fa:	mov    al,0x2a
  4340fc:	fldenv [edx]
  4340fe:	inc    ebx
  4340ff:	gs loopne 0x4340c8
  434102:	push   eax
  434103:	jo     0x434137
  434105:	loop   0x434100
  434107:	fdivr  QWORD PTR [esi-0x73]
  43410a:	inc    ebx
  43410b:	dec    ebp
  43410c:	xchg   esp,eax
  43410d:	inc    edi
  43410e:	cld    
  43410f:	inc    edi
  434110:	ins    BYTE PTR es:[edi],dx
  434111:	sar    ecx,1
  434113:	jo     0x4340c7
  434115:	ror    DWORD PTR [ebx-0x62919954],1
  43411b:	jmp    0x2a434af6
  434120:	fdivr  DWORD PTR [esi]
  434122:	lock test edi,ecx
  434125:	(bad)  
  434126:	(bad)  
  434127:	call   0xae9a4b02
  43412c:	lea    ebp,[edi]
  43412e:	push   ebp
  43412f:	jb     0x43414b
  434131:	das    
  434132:	dec    edi
  434133:	sub    dh,BYTE PTR [eax+0xd6253d0]
  434139:	shl    DWORD PTR [ebx-0x2b],1
  43413c:	sub    eax,0xabe61057
  434141:	add    eax,0x54f9
  434146:	adc    DWORD PTR [ebx-0x60],ebp
  434149:	aam    0x90
  43414b:	or     DWORD PTR [eax-0x17],ebp
  43414e:	inc    esi
  43414f:	adc    eax,0x2e240000
  434154:	in     eax,0xff
  434156:	xor    ecx,DWORD PTR [esi-0x333ee73c]
  43415c:	cmp    edi,0xffffffc9
  43415f:	push   esp
  434160:	in     al,dx
  434161:	push   ecx
  434162:	call   0xde1:0xa0c6d54
  434169:	fs retf 0x46
  43416d:	mov    ecx,edi
  43416f:	rol    DWORD PTR [esi+eax*2-0x7d57c040],1
  434176:	test   eax,0xb015f6fe
  43417b:	clc    
  43417c:	aas    
  43417d:	add    BYTE PTR [ebx+0x6],bh
  434180:	add    DWORD PTR [eax],eax
  434182:	lods   al,BYTE PTR ds:[esi]
  434183:	push   es
  434184:	jnp    0x4341d4
  434186:	and    BYTE PTR [esi],0x7b
  434189:	enter  0xb023,0x40
  43418d:	add    DWORD PTR [esi+eax*1-0x58],ebp
  434191:	inc    eax
  434192:	cmp    al,dl
  434194:	clc    
  434195:	adc    eax,0x3ff880
  43419a:	mov    ebx,0x6c001a06
  43419f:	push   es
  4341a0:	jecxz  0x434184
  4341a2:	pop    ds
  4341a3:	sbb    eax,0x623da8d3
  4341a8:	or     cl,BYTE PTR [ecx-0x2d7e0000]
  4341ae:	mov    eax,ds:0x83686810
  4341b3:	dec    esi
  4341b4:	inc    esp
  4341b5:	(bad)  
  4341b6:	loopne 0x4341b6
  4341b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4341b9:	rol    BYTE PTR [edx+0x3e553046],1
  4341bf:	or     al,0xaf
  4341c1:	out    0xe7,al
  4341c3:	and    DWORD PTR [edi+eax*1-0x7f],0x46
  4341c8:	add    BYTE PTR [ebp+0x56],dl
  4341cb:	add    al,0xd5
  4341cd:	imul   eax,DWORD PTR [edi-0x4],0x4b42c
  4341d4:	aad    0x15
  4341d6:	ss lahf 
  4341d8:	popf   
  4341d9:	mov    edx,0x2858003d
  4341de:	and    al,0x35
  4341e0:	in     al,0x1b
  4341e2:	stc    
  4341e3:	jl     0x4341fa
  4341e5:	and    BYTE PTR ds:0xe2e148f0,ah
  4341eb:	jae    0x4341c6
  4341ed:	ja     0x4341fe
  4341ef:	jo     0x4341dc
  4341f1:	and    al,BYTE PTR [edi+edx*2]
  4341f4:	push   eax
  4341f5:	mov    ds:0xb6b2276f,eax
  4341fa:	icebp  
  4341fb:	adc    DWORD PTR ds:0x64d4ee3,edx
  434201:	hlt    
  434202:	dec    esp
  434203:	rcl    ebp,0xd0
  434206:	std    
  434207:	call   ebp
  434209:	cmp    ch,BYTE PTR ds:0x7d388ae1
  43420f:	les    eax,FWORD PTR [eax]
  434211:	add    cl,ch
  434213:	arpl   WORD PTR [ecx+edi*8+0x48a6c],di
  43421a:	aad    0x63
  43421c:	mov    esp,0xf1a15c20
  434221:	in     al,0x65
  434223:	sbb    BYTE PTR [edx],bh
  434225:	or     al,0xcd
  434227:	loope  0x434226
  434229:	jmp    FWORD PTR [edx-0x6c7a938a]
  43422f:	jmp    0x8704:0xab503a76
  434236:	retf   
  434237:	pop    ebx
  434238:	xor    bl,BYTE PTR [eax]
  43423a:	dec    BYTE PTR [edx]
  43423c:	cmp    esi,DWORD PTR ds:0x4326a2e
  434242:	mov    ds:0x1a504ab3,eax
  434247:	or     bl,BYTE PTR [eax+edi*8+0xd]
  43424b:	test   DWORD PTR [edx+0xe],0xbf660995
  434252:	rol    DWORD PTR [edx+0x46f0e824],1
  434258:	outs   dx,BYTE PTR ds:[esi]
  434259:	inc    eax
  43425a:	loope  0x4341e8
  43425c:	mov    edi,0x65f461e6
  434261:	jmp    0x434242
  434263:	push   ebp
  434264:	sar    DWORD PTR [edx-0x3a],1
  434267:	imul   edi,ecx,0xaf84d543
  43426d:	xor    BYTE PTR [ebp-0x63c0210],0xca
  434274:	nop
  434275:	add    BYTE PTR [eax],al
  434277:	add    BYTE PTR [eax-0x292592f4],bh
  43427d:	stos   BYTE PTR es:[edi],al
  43427e:	sbb    ecx,DWORD PTR [esi]
  434280:	adc    eax,0xd943790a
  434285:	sub    ebx,esi
  434287:	push   cs
  434288:	xor    ecx,DWORD PTR [esi+esi*4]
  43428b:	push   edx
  43428c:	mov    WORD PTR [esi-0x15],ss
  43428f:	out    0xe6,al
  434291:	popa   
  434292:	stc    
  434293:	inc    ebx
  434294:	aad    0x2c
  434296:	and    eax,0x65f99182
  43429b:	jmp    0x434309
  43429d:	push   ebp
  43429e:	add    DWORD PTR [ebx+0x17],edi
  4342a1:	add    bl,BYTE PTR [ebp+0x38]
  4342a4:	int    0x81
  4342a6:	(bad)  
  4342a8:	les    ebx,FWORD PTR [edx+eiz*1]
  4342ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4342ad:	jle    0x434253
  4342af:	sti    
  4342b0:	call   0x7af6:0x3df79cd0
  4342b7:	or     eax,0xbf660995
  4342bc:	loope  0x434240
  4342be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4342bf:	out    0xe2,eax
  4342c1:	dec    esi
  4342c2:	add    ch,dh
  4342c4:	mov    bl,0x8
  4342c6:	jge    0x434267
  4342c8:	and    dh,al
  4342ca:	jl     0x43427d
  4342cc:	clc    
  4342cd:	in     eax,0x8
  4342cf:	jb     0x43429b
  4342d1:	add    DWORD PTR [ebx],esp
  4342d3:	(bad)  
  4342d4:	(bad)  [ecx]
  4342d6:	add    BYTE PTR [esi],ch
  4342d8:	mov    WORD PTR [ebx],?
  4342da:	(bad)  
  4342db:	stos   BYTE PTR es:[edi],al
  4342dc:	add    BYTE PTR [eax],al
  4342de:	sub    eax,0xdb2123d2
  4342e3:	dec    ecx
  4342e4:	add    BYTE PTR [edi],bl
  4342e6:	pop    esp
  4342e7:	fld    DWORD PTR [ebp+0x4a86cd27]
  4342ed:	stc    
  4342ee:	and    DWORD PTR [ebp-0x29020a88],eax
  4342f4:	jb     0x4342e1
  4342f6:	cmp    eax,0x458e83d7
  4342fb:	sbb    eax,DWORD PTR [ebp+0x4a84c929]
  434301:	in     eax,dx
  434302:	sbb    DWORD PTR [edx],edi
  434304:	dec    edi
  434305:	cmp    DWORD PTR [edx+0x1c6ef9de],0xf8e81c4c
  43430f:	std    
  434310:	(bad)  
  434311:	loopne 0x4342f9
  434313:	into   
  434314:	jnp    0x434313
  434316:	fist   WORD PTR [ebx+0x10]
  434319:	bound  edi,QWORD PTR [ebx-0x1d3ed913]
  43431f:	test   BYTE PTR [edx-0x23],dh
  434322:	push   ebp
  434323:	(bad)  
  434324:	or     al,0x6a
  434326:	sti    
  434327:	cmc    
  434328:	push   DWORD PTR [ebx-0xead79a8]
  43432e:	iret   
  43432f:	cmp    edx,DWORD PTR [eax]
  434331:	mov    esi,0xbccc8c90
  434336:	mov    ebp,0xaa6252dd
  43433b:	add    DWORD PTR [ebx+0x7dd63200],eax
  434341:	ret    0x0
  434344:	cmp    al,0xb
  434346:	add    BYTE PTR [ebx-0x3f82f88e],cl
  43434c:	sti    
  43434d:	dec    esi
  43434e:	scas   eax,DWORD PTR es:[edi]
  43434f:	add    ah,bh
  434351:	or     cl,BYTE PTR [edi-0x75]
  434354:	je     0x43435f
  434356:	jnp    0x434357
  434358:	(bad)  
  434359:	pop    ecx
  43435a:	sub    al,0x83
  43435c:	or     edx,DWORD PTR [eax]
  43435e:	je     0x434387
  434360:	jg     0x434347
  434362:	inc    ecx
  434363:	je     0x434343
  434365:	mov    bh,dh
  434367:	pop    ebx
  434368:	mov    al,ds:0x93ff7b06
  43436d:	pop    ecx
  43436e:	sbb    BYTE PTR [ebx+0x13745b7b],al
  434374:	cmp    eax,0xac0292e6
  434379:	or     dh,BYTE PTR [ebx+ecx*1-0x15]
  43437d:	popf   
  43437e:	idiv   bh
  434380:	pop    ebx
  434381:	in     eax,0x56
  434383:	pop    ebp
  434384:	jle    0x434354
  434386:	stc    
  434387:	mov    ch,ah
  434389:	int    0x7e
  43438b:	shl    BYTE PTR [eax-0x1fb17b29],0x35
  434392:	add    DWORD PTR [esi-0x1c],0x35
  434396:	not    ecx
  434398:	out    dx,eax
  434399:	mov    cs,WORD PTR [eax]
  43439b:	mov    eax,DWORD PTR [edx+0x6]
  43439e:	add    DWORD PTR [edx+0x40],0x4f
  4343a2:	shl    BYTE PTR [ecx+edi*2+0x51],0x46
  4343a7:	and    al,0x0
  4343a9:	add    BYTE PTR [ecx+edx*2],bh
  4343ac:	sub    BYTE PTR ds:[eiz*8-0x2cff7c37],bh
  4343b4:	test   BYTE PTR [esi+0x48],dl
  4343b7:	push   ecx
  4343b8:	cmp    al,BYTE PTR [eax-0x2b]
  4343bb:	pop    ebp
  4343bc:	mov    ebp,0x336bc874
  4343c1:	and    al,0x85
  4343c3:	pop    ebx
  4343c4:	cmp    ebp,DWORD PTR [eax]
  4343c6:	test   edi,ecx
  4343c8:	iret   
  4343c9:	jge    0x4343e4
  4343cb:	call   0x6bfc9648
  4343d0:	aas    
  4343d1:	cmp    BYTE PTR [eax-0x60],bl
  4343d4:	pop    eax
  4343d5:	or     ebx,DWORD PTR [esi+0x1e]
  4343d8:	sub    BYTE PTR [eax+0x4e],dl
  4343db:	push   ds
  4343dc:	sub    al,0x50
  4343de:	cli    
  4343df:	nop
  4343e0:	add    esp,0x1c365bdd
  4343e6:	pop    esi
  4343e7:	es sub al,0x85
  4343ea:	xchg   ebx,eax
  4343eb:	cld    
  4343ec:	xor    DWORD PTR [eax-0x26],edx
  4343ef:	jo     0x434372
  4343f1:	(bad)  
  4343f2:	(bad)  [edi-0xd358243]
  4343f8:	or     al,0x93
  4343fa:	xchg   ebp,eax
  4343fb:	adc    al,0xc5
  4343fd:	inc    edx
  4343fe:	(bad)  
  434400:	std    
  434401:	call   ebp
  434403:	and    al,0x4c
  434405:	jge    0x4343bc
  434407:	dec    esi
  434408:	aas    
  434409:	mov    esi,0xfa95e2d9
  43440e:	add    BYTE PTR [eax],al
  434410:	call   0x821:0x305add5c
  434417:	add    BYTE PTR [ecx-0x6e332fe1],bl
  43441d:	mov    cs,WORD PTR [edx+0x1a54eec]
  434423:	push   ecx
  434424:	pop    esi
  434425:	dec    ebx
  434426:	sbb    edi,esi
  434428:	jecxz  0x43440a
  43442a:	mov    dh,bh
  43442c:	pop    eax
  43442d:	adc    al,0x57
  43442f:	add    esp,DWORD PTR [esi+0x165b3d22]
  434435:	or     cl,dh
  434437:	retf   0x4452
  43443a:	jecxz  0x4343ca
  43443c:	xchg   edi,eax
  43443d:	in     eax,dx
  43443e:	pop    ebp
  43443f:	inc    esp
  434440:	fisttp QWORD PTR [eax-0x359faf1]
  434446:	ins    DWORD PTR es:[edi],dx
  434447:	adc    dl,BYTE PTR [eax+0x34]
  43444a:	mov    bh,0x3a
  43444c:	xchg   edx,eax
  43444d:	aaa    
  43444e:	(bad)  
  43444f:	ds mov edx,0xe3eee709
  434455:	mov    bh,bl
  434457:	add    eax,0x96df986
  43445c:	pop    eax
  43445d:	cmp    al,0x17
  43445f:	cmp    esp,DWORD PTR [ebp-0x48a540c6]
  434465:	or     edi,esp
  434467:	mov    WORD PTR [edi+0x59f96e19],ss
  43446d:	inc    edi
  43446e:	fistp  QWORD PTR [edx]
  434470:	mov    edi,DWORD PTR [ecx]
  434472:	mov    edi,0xb800007c
  434477:	int3   
  434478:	mov    ds:0xa3890f04,al
  43447d:	cmpps  xmm1,XMMWORD PTR [esi-0x21],0x8e
  434482:	xchg   esp,eax
  434483:	sub    al,0x2c
  434485:	(bad)  
  434486:	mov    eax,ds:0x99cfb3bd
  43448b:	mov    ebp,0xbd91cfab
  434490:	push   ss
  434491:	(bad)  
  434492:	cld    
  434493:	sbb    eax,0xe048f11
  434498:	push   cs
  434499:	pop    ebx
  43449a:	add    DWORD PTR [ecx+0x3c586fa2],eax
  4344a0:	add    edx,DWORD PTR [ecx-0x1eb2ff9f]
  4344a6:	ins    BYTE PTR es:[edi],dx
  4344a7:	int3   
  4344a8:	push   cs
  4344a9:	aam    0xa0
  4344ab:	(bad)  
  4344ac:	mov    ch,0x3e
  4344ae:	pop    eax
  4344af:	inc    esp
  4344b0:	add    cl,dh
  4344b2:	mov    ds:0x9d10c80,eax
  4344b7:	cmp    ch,al
  4344b9:	mov    edi,0x72f9d23b
  4344be:	(bad)  
  4344bf:	cmp    eax,0x2492ae85
  4344c4:	pop    ecx
  4344c5:	cdq    
  4344c6:	add    DWORD PTR [ebx],esi
  4344c8:	ins    BYTE PTR es:[edi],dx
  4344c9:	push   0x12
  4344cb:	std    
  4344cc:	es sahf 
  4344ce:	loop   0x434450
  4344d0:	or     al,0x99
  4344d2:	(bad)  
  4344d3:	call   0x21fe:0xe458ef3f
  4344da:	add    BYTE PTR [eax],al
  4344dc:	adc    BYTE PTR [ebx+0x4],bl
  4344df:	adc    bl,BYTE PTR [eax]
  4344e1:	out    0xfe,al
  4344e3:	sbb    DWORD PTR [ecx],edx
  4344e5:	inc    ebx
  4344e6:	bound  esp,QWORD PTR [eax-0x2a]
  4344e9:	pop    eax
  4344ea:	out    0x72,eax
  4344ec:	test   BYTE PTR [ecx-0x7b],cl
  4344ef:	call   0xc3d:0xe656fd52
  4344f6:	cli    
  4344f7:	push   0xffffffbe
  4344f9:	int3   
  4344fa:	ss stos BYTE PTR es:[edi],al
  4344fc:	and    eax,DWORD PTR [esi]
  4344fe:	and    eax,0x2eccb0aa
  434503:	test   eax,0xe887680b
  434508:	or     esp,ebx
  43450a:	std    
  43450b:	jns    0x434565
  43450d:	or     DWORD PTR [ebp+0x1],edi
  434510:	int    0x9
  434512:	or     DWORD PTR [ebp-0x71],ebp
  434515:	or     al,BYTE PTR [eax]
  434517:	jmp    0xeab77e7d
  43451c:	int    0x5d
  43451e:	test   DWORD PTR [edi],ebp
  434520:	fdivr  DWORD PTR [eax]
  434522:	cmp    BYTE PTR [edx-0x5f],ah
  434525:	cmp    al,0xe8
  434527:	push   ecx
  434528:	ja     0x4344fb
  43452a:	stc    
  43452b:	add    BYTE PTR [ebp+0x42],bh
  43452e:	je     0x4344bb
  434530:	dec    ebx
  434531:	xor    edi,DWORD PTR [ebx-0x3c]
  434534:	push   0x8e03f286
  434539:	int3   
  43453a:	test   BYTE PTR [edi+0x60],dh
  43453d:	push   es
  43453e:	outs   dx,DWORD PTR ds:[esi]
  43453f:	cmp    BYTE PTR [eax],al
  434541:	add    bh,al
  434543:	cmp    BYTE PTR [eax+0xf],bl
  434546:	call   0xe096:0x744780ff
  43454d:	pminsw mm6,QWORD PTR [edi]
  434550:	stc    
  434551:	xor    ch,ch
  434553:	and    al,0x3f
  434555:	push   esp
  434556:	mov    ch,0x40
  434558:	dec    eax
  434559:	add    DWORD PTR [esi],0xfcfff901
  43455f:	xor    eax,0x85fb8b0c
  434564:	js     0x43456a
  434566:	in     al,dx
  434567:	stc    
  434568:	jl     0x434598
  43456a:	and    ebp,edx
  43456c:	test   DWORD PTR [ebx+0xec67b],0x3c477dec
  434576:	out    0xc7,eax
  434578:	imul   esp,DWORD PTR [edi+0x37],0x32
  43457c:	ins    BYTE PTR es:[edi],dx
  43457d:	add    ebp,DWORD PTR [esi-0x13]
  434580:	mov    ebp,0xc61d9173
  434585:	mov    eax,DWORD PTR [ebp-0x42fd0c79]
  43458b:	push   es
  43458c:	add    BYTE PTR [esi-0x47],dh
  43458f:	ins    DWORD PTR es:[edi],dx
  434590:	cli    
  434591:	add    BYTE PTR [esi+eax*1+0x15644f83],ch
  434598:	sti    
  434599:	int    0xd6
  43459b:	add    eax,0xdc70e849
  4345a0:	idiv   edi
  4345a2:	out    dx,eax
  4345a3:	ret    0x30c
  4345a6:	add    BYTE PTR [eax],al
  4345a8:	aad    0x12
  4345aa:	aas    
  4345ab:	xchg   DWORD PTR [edx+0x20],edx
  4345ae:	idiv   edi
  4345b0:	push   0xffffffa7
  4345b2:	les    ecx,FWORD PTR [ebx-0x121b5]
  4345b8:	aad    0xd7
  4345ba:	ret    
  4345bb:	ins    DWORD PTR es:[edi],dx
  4345bc:	cli    
  4345bd:	pop    es
  4345be:	aam    0x7f
  4345c0:	adc    ebx,esi
  4345c2:	(bad)  
  4345c3:	call   ebp
  4345c5:	mov    bh,0xc5
  4345c7:	xor    eax,0x85036a44
  4345cc:	and    al,0x67
  4345ce:	push   eax
  4345cf:	cmp    BYTE PTR [ebx-0x2a993a21],al
  4345d5:	jno    0x4345bc
  4345d7:	inc    edx
  4345d8:	das    
  4345d9:	rcr    ecx,cl
  4345db:	jge    0x4345f6
  4345dd:	lods   al,BYTE PTR ds:[esi]
  4345de:	(bad)  
  4345df:	mov    al,0x15
  4345e1:	retf   0xfffd
  4345e4:	mov    ds:0x9ccbd47,eax
  4345e9:	or     eax,0x138bec85
  4345ee:	test   DWORD PTR [ebx-0x23],edi
  4345f1:	push   edi
  4345f2:	inc    ecx
  4345f3:	or     al,0x23
  4345f5:	mov    ebx,ecx
  4345f7:	add    ch,dl
  4345f9:	pop    edi
  4345fa:	(bad)  
  4345fb:	cmc    
  4345fc:	push   cs
  4345fd:	jno    0x43464c
  4345ff:	pop    es
  434600:	pop    esi
  434601:	mov    ds:0xb2f9a48f,eax
  434606:	std    
  434607:	call   ebp
  434609:	sub    eax,DWORD PTR [ecx+0x74]
  43460c:	add    BYTE PTR [eax],al
  43460e:	push   esi
  43460f:	fwait
  434610:	add    esi,DWORD PTR [ecx-0x3b]
  434613:	call   0x4185:0x48a2fa7d
  43461a:	and    DWORD PTR [esi],esi
  43461c:	les    ecx,FWORD PTR [ecx]
  43461e:	pop    ecx
  43461f:	pop    eax
  434620:	add    al,0x0
  434622:	aad    0x9
  434624:	call   0xaad8376f
  434629:	aas    
  43462a:	push   eax
  43462b:	popa   
  43462c:	ret    
  43462d:	(bad)  
  43462e:	adc    al,0x3e
  434630:	out    0x3,eax
  434632:	aad    0x9
  434634:	je     0x43463e
  434636:	mov    dl,0x3d
  434638:	jecxz  0x434654
  43463a:	test   DWORD PTR [eax+esi*8],edi
  43463d:	sub    ah,BYTE PTR ds:0x52579293
  434643:	push   ecx
  434644:	xchg   ebx,eax
  434645:	mov    BYTE PTR [edx],bl
  434647:	inc    edx
  434648:	loop   0x4345d4
  43464a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43464b:	add    esi,esp
  43464d:	mov    ah,0x38
  43464f:	or     al,0xd6
  434651:	mov    cl,0xb3
  434653:	or     esi,ecx
  434655:	les    eax,FWORD PTR [ebp-0x40146da5]
  43465b:	add    eax,0x515803e7
  434660:	jnp    0x4345ee
  434662:	xchg   esp,eax
  434663:	outs   dx,BYTE PTR gs:[esi]
  434665:	push   es
  434666:	or     ch,0xf7
  434669:	jmp    0x4346ba
  43466b:	(bad)  
  43466c:	rcr    dh,cl
  43466e:	pop    eax
  43466f:	sbb    DWORD PTR [esi+0x5c],esp
  434672:	add    BYTE PTR [eax],al
  434674:	lds    ecx,FWORD PTR [ecx]
  434676:	cmp    eax,DWORD PTR [edi+0x58]
  434679:	pop    ecx
  43467a:	sbb    ecx,DWORD PTR [ebx+0x465e3584]
  434680:	add    ebp,esi
  434682:	xchg   edi,eax
  434683:	xor    bh,dl
  434685:	or     ah,bh
  434687:	add    ecx,DWORD PTR [eax]
  434689:	ficom  DWORD PTR ds:0xfd25682
  43468f:	pop    es
  434690:	pop    eax
  434691:	push   eax
  434692:	iret   
  434693:	add    ch,BYTE PTR [edx-0x4c]
  434696:	in     eax,0x12
  434698:	xchg   ebp,eax
  434699:	xor    esp,edi
  43469b:	xor    DWORD PTR ds:0x4f810061,eax
  4346a1:	(bad)  
  4346a2:	(bad)  
  4346a3:	call   0x72af9907
  4346a8:	fild   DWORD PTR [esi-0x3c]
  4346ab:	stc    
  4346ac:	dec    ecx
  4346ad:	push   edx
  4346ae:	pop    esp
  4346af:	inc    ecx
  4346b0:	pop    ds
  4346b1:	(bad)  
  4346b2:	stc    
  4346b3:	dec    esi
  4346b4:	pop    edi
  4346b5:	sbb    bh,BYTE PTR [ebp-0x3d]
  4346b8:	enterw 0x640a,0xb
  4346bd:	ret    
  4346be:	stc    
  4346bf:	ss adc esi,edi
  4346c2:	mov    edi,0x8586958f
  4346c7:	pushf  
  4346c8:	ror    BYTE PTR [edx+esi*8+0x498e2795],cl
  4346cf:	mov    ch,0x5d
  4346d1:	sar    BYTE PTR [eax-0x1a],1
  4346d4:	pop    edi
  4346d5:	dec    edx
  4346d6:	cmp    dl,ch
  4346d8:	add    BYTE PTR [eax],al
  4346da:	sbb    DWORD PTR [esi-0x9e94602],ebp
  4346e0:	int    0x6a
  4346e2:	xor    BYTE PTR ds:0x57145509,cl
  4346e8:	test   DWORD PTR [esi],edi
  4346ea:	test   esi,ebp
  4346ec:	into   
  4346ed:	cmp    eax,ecx
  4346ef:	pop    edx
  4346f0:	call   0x4d135a
  4346f5:	bound  edx,QWORD PTR [eax-0x6ad178cb]
  4346fb:	mov    es,WORD PTR [ecx]
  4346fd:	push   0xd
  4346ff:	sbb    eax,ebp
  434701:	mov    ch,0xac
  434703:	sar    ecx,0x62
  434706:	fdiv   st,st(4)
  434708:	mov    edi,0x731a17e0
  43470d:	out    dx,eax
  43470e:	push   ebp
  43470f:	les    eax,FWORD PTR [esi+eiz*8]
  434712:	sub    ecx,edx
  434714:	pop    ecx
  434715:	das    
  434716:	sbb    DWORD PTR [ebp-0x20],eax
  434719:	add    BYTE PTR [esi+0x1a83bb08],ch
  43471f:	adc    al,BYTE PTR [edi]
  434721:	xchg   esp,eax
  434722:	cmp    al,0x5
  434724:	push   esi
  434725:	lea    esi,[eax-0x50a306f3]
  43472b:	fxch   st(4)
  43472d:	int3   
  43472e:	test   al,0xd9
  434730:	int3   
  434731:	int3   
  434732:	xor    DWORD PTR [edx-0x1ddac14],edx
  434738:	cmp    BYTE PTR [ebp+0x64],0xa2
  43473c:	stc    
  43473d:	inc    DWORD PTR [eax]
  43473f:	add    BYTE PTR [ebx+ecx*1-0x7d],ch
  434743:	push   DWORD PTR [edi+0x323d744c]
  434749:	or     al,0x0
  43474b:	add    BYTE PTR [edi-0x17],bl
  43474e:	out    0x51,eax
  434750:	ftst   
  434752:	test   DWORD PTR [ebx+0x75835f83],0xfe2808
  43475c:	sub    al,0xb
  43475e:	imul   ecx,DWORD PTR [eax],0xffffffb1
  434761:	fild   WORD PTR [edi]
  434763:	test   BYTE PTR [ecx+ecx*1],dh
  434766:	add    BYTE PTR [eax],al
  434768:	jno    0x434737
  43476a:	pop    es
  43476b:	test   BYTE PTR [ebx+0x6f00000b],dh
  434771:	loop   0x43476e
  434773:	jno    0x43470d
  434775:	nop
  434776:	aas    
  434777:	dec    eax
  434778:	ja     0x4347cf
  43477a:	pop    eax
  43477b:	mov    eax,ebx
  43477d:	cmp    DWORD PTR [ebx-0x1f861f89],eax
  434783:	mov    edi,ebx
  434785:	and    eax,0xbae8b607
  43478a:	sti    
  43478b:	xor    ch,BYTE PTR [ebp-0x17]
  43478e:	ds push esp
  434790:	inc    edi
  434791:	push   esi
  434792:	inc    esp
  434793:	and    edx,ebp
  434795:	mov    ds:0x2a155188,al
  43479a:	inc    esp
  43479b:	dec    eax
  43479c:	cmp    edi,DWORD PTR [ecx+eax*1]
  43479f:	aas    
  4347a0:	xor    edi,DWORD PTR [edx]
  4347a2:	add    DWORD PTR [esi+0x0],ebp
  4347a5:	add    BYTE PTR [esi-0x11],bl
  4347a8:	outs   dx,DWORD PTR ds:[esi]
  4347a9:	sbb    eax,0x51887d1a
  4347ae:	adc    eax,0xf0494c0
  4347b3:	cmp    al,0x4c
  4347b5:	dec    eax
  4347b6:	pop    esi
  4347b7:	xchg   DWORD PTR [ecx+0x62],eax
  4347ba:	pop    esi
  4347bb:	fild   QWORD PTR [ecx+0x62]
  4347be:	dec    esp
  4347bf:	les    eax,FWORD PTR [edi-0x7d]
  4347c2:	xchg   ebp,eax
  4347c3:	jl     0x4347c1
  4347c5:	test   BYTE PTR [edx-0x6ae7734],ah
  4347cb:	or     ecx,esp
  4347cd:	jg     0x4347fe
  4347cf:	mov    dh,0xfe
  4347d1:	call   ebp
  4347d3:	stos   DWORD PTR es:[edi],eax
  4347d4:	(bad)  
  4347d5:	jno    0x4347b7
  4347d7:	xor    BYTE PTR [eax+ebp*8],0xec
  4347db:	sar    ebp,cl
  4347dd:	call   DWORD PTR [esi-0xc]
  4347e0:	add    al,0x87
  4347e2:	xchg   edx,eax
  4347e3:	nop
  4347e4:	cmp    BYTE PTR [ecx+0x75],0xb3
  4347e8:	or     al,0x7e
  4347ea:	mov    al,0xb1
  4347ec:	std    
  4347ed:	(bad)  
  4347ee:	jnp    0x43482b
  4347f0:	inc    ebp
  4347f1:	ins    BYTE PTR es:[edi],dx
  4347f2:	jae    0x43480f
  4347f4:	inc    ebp
  4347f5:	jo     0x434855
  4347f7:	inc    edi
  4347f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347f9:	adc    dl,ch
  4347fb:	mov    al,0x8b
  4347fd:	inc    ecx
  4347fe:	jne    0x43483b
  434800:	lea    esp,[ebx+eax*8-0x75f70250]
  434807:	push   0x5e
  434809:	xchg   DWORD PTR [eax],eax
  43480b:	add    cl,bl
  43480d:	sbb    al,0x89
  43480f:	xchg   ecx,eax
  434810:	pop    ebp
  434811:	or     bh,cl
  434813:	add    edx,ebp
  434815:	nop
  434816:	push   edx
  434817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434818:	(bad)  
  434819:	or     edi,esp
  43481b:	daa    
  43481c:	test   al,0x8d
  43481e:	jecxz  0x434835
  434820:	mov    ds:0x9af247a4,al
  434825:	(bad)
  434828:	xchg   ebp,eax
  434829:	adc    eax,0x52f57439
  43482e:	daa    
  43482f:	add    al,0xf7
  434831:	or     al,BYTE PTR [ebx-0x18f1a28d]
  434837:	add    ebx,DWORD PTR [esi-0x72]
  43483a:	jp     0x4348b8
  43483c:	ror    DWORD PTR [ecx],1
  43483e:	out    0x84,eax
  434840:	and    al,ch
  434842:	inc    edx
  434843:	add    al,0xd5
  434845:	and    edi,0xc909d504
  43484b:	push   ds
  43484c:	sbb    eax,0x840adb39
  434851:	shl    edx,cl
  434853:	xchg   ecx,eax
  434854:	mov    edx,0xd543a229
  434859:	mov    al,0xe4
  43485b:	or     ah,BYTE PTR [ebx+ebx*8+0x28]
  43485f:	out    dx,al
  434860:	aam    0x14
  434862:	cmp    DWORD PTR [esi+0x3a751b5],eax
  434868:	ja     0x434874
  43486a:	push   ebx
  43486b:	sbb    DWORD PTR [ebp+0x13],0xffffffe7
  43486f:	add    eax,DWORD PTR [eax]
  434871:	add    BYTE PTR [eax-0x73],bl
  434874:	xor    ecx,0xfffffffa
  434877:	les    edx,FWORD PTR [esi]
  434879:	int    0xb8
  43487b:	enter  0x8310,0x35
  43487f:	sbb    al,0xe7
  434881:	add    ebx,DWORD PTR [eax+0x4d]
  434884:	inc    edi
  434885:	or     eax,DWORD PTR [ecx-0x35]
  434888:	adc    BYTE PTR [ebx+0x49],al
  43488b:	xchg   ecx,eax
  43488c:	add    BYTE PTR [eax-0xd8bada5],bh
  434892:	push   edi
  434893:	mov    DWORD PTR [eax],eax
  434895:	jmp    0x6a948370
  43489a:	xchg   ecx,eax
  43489b:	(bad)  
  43489c:	outs   dx,DWORD PTR ds:[esi]
  43489d:	cmp    ebx,DWORD PTR [ecx]
  43489f:	lea    eax,[ecx+0x9]
  4348a2:	fsub   DWORD PTR [edx+0x6c]
  4348a5:	jb     0x43488e
  4348a7:	xor    eax,0x8f211e85
  4348ac:	dec    ecx
  4348ad:	adc    DWORD PTR [edx+0x4a],ebx
  4348b0:	cmp    dh,bl
  4348b2:	fs dec ebp
  4348b4:	(bad)  
  4348b5:	jmp    0xf6b2:0xae85e643
  4348bc:	mov    esp,0x855e160a
  4348c1:	scas   al,BYTE PTR es:[edi]
  4348c2:	ror    BYTE PTR [ecx+eax*2+0x47acfb1],cl
  4348c9:	test   al,0xfb
  4348cb:	fild   DWORD PTR [ebp-0x78d86962]
  4348d1:	in     eax,0x0
  4348d3:	adc    esi,DWORD PTR [ecx-0x4dffff52]
  4348d9:	mov    cs,WORD PTR [ecx-0x4f]
  4348dc:	arpl   WORD PTR [edx+0x44],bx
  4348df:	(bad)  
  4348e0:	pop    ecx
  4348e1:	or     eax,0x298f0e46
  4348e6:	mov    ch,0xe8
  4348e8:	(bad)  
  4348e9:	or     DWORD PTR [eax],eax
  4348eb:	je     0x434954
  4348ed:	lods   al,BYTE PTR ds:[esi]
  4348ee:	jge    0x4348d9
  4348f0:	(bad)  
  4348f1:	or     edi,edi
  4348f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4348f4:	jp     0x434884
  4348f6:	push   ecx
  4348f7:	and    eax,edx
  4348f9:	pop    edx
  4348fa:	ins    BYTE PTR es:[edi],dx
  4348fb:	jb     0x434899
  4348fd:	popa   
  4348fe:	shr    DWORD PTR [esi],0x71
  434901:	or     DWORD PTR [eax],eax
  434903:	jmp    0xf55bde
  434908:	out    dx,al
  434909:	mov    ?,WORD PTR [edi]
  43490b:	dec    eax
  43490c:	outs   dx,DWORD PTR ds:[esi]
  43490d:	scas   al,BYTE PTR es:[edi]
  43490e:	pop    es
  43490f:	mov    dh,0xf6
  434911:	push   es
  434912:	sub    eax,ecx
  434914:	iret   
  434915:	dec    eax
  434916:	push   esp
  434917:	mov    ebx,ebp
  434919:	push   ebp
  43491a:	jecxz  0x434979
  43491c:	daa    
  43491d:	stc    
  43491e:	imul   ecx,DWORD PTR [ebx+0x48225fb],0xffffffae
  434925:	xchg   esi,eax
  434926:	xchg   DWORD PTR [eax-0x74fff886],esp
  43492c:	sub    ebp,DWORD PTR [edx+0xe]
  43492f:	add    BYTE PTR [esi+ebx*1-0x12],bh
  434933:	data16 cmc 
  434935:	sbb    DWORD PTR [edx-0x75],eax
  434938:	sti    
  434939:	ins    DWORD PTR es:[edi],dx
  43493a:	push   cs
  43493b:	add    BYTE PTR [eax],al
  43493d:	add    BYTE PTR [esi+edx*4-0x79],bh
  434941:	cwde   
  434942:	push   0x7
  434944:	add    BYTE PTR [eax-0x61054788],cl
  43494a:	dec    esp
  43494b:	mov    eax,0x9943fff9
  434950:	shl    BYTE PTR [esi+0x3d],0x3b
  434954:	jg     0x4348ea
  434956:	sub    al,0x7
  434958:	add    BYTE PTR [ebx+0xe41c3],cl
  43495e:	cmp    al,0x8c
  434960:	test   BYTE PTR [edi+0xda8],al
  434966:	(bad)  
  434967:	jl     0x43498c
  434969:	retf   
  43496a:	adc    eax,0xfc16a092
  43496f:	push   es
  434970:	pop    es
  434971:	xchg   esp,eax
  434972:	mov    esi,0x777447e0
  434977:	(bad)  
  434979:	pop    esi
  43497a:	mov    al,ds:0x780fee42
  43497f:	shl    ebp,1
  434981:	call   ebp
  434983:	fisttp DWORD PTR [ecx+ecx*2+0x78c62d81]
  43498a:	shl    BYTE PTR [edi],cl
  43498c:	inc    eax
  43498d:	cmp    dh,dl
  43498f:	jno    0x43497d
  434991:	inc    BYTE PTR [edi]
  434993:	jno    0x434921
  434995:	push   ecx
  434996:	xor    DWORD PTR [edi+0x4],eax
  434999:	and    eax,0x5133fea4
  43499e:	mov    ebp,0x15a0
  4349a3:	add    ch,dl
  4349a5:	daa    
  4349a6:	inc    eax
  4349a7:	ins    BYTE PTR es:[edi],dx
  4349a8:	dec    esp
  4349a9:	jmp    0x4349e2
  4349ab:	test   edx,edx
  4349ad:	das    
  4349ae:	mov    ecx,0xd5107d10
  4349b3:	stc    
  4349b4:	mov    ah,BYTE PTR [edi]
  4349b6:	or     BYTE PTR [ebp-0x4],bh
  4349b9:	loopne 0x4349b8
  4349bb:	or     BYTE PTR [eax+0x44],dl
  4349be:	sar    cl,cl
  4349c0:	jb     0x434945
  4349c2:	aaa    
  4349c3:	sub    eax,0xbd327795
  4349c8:	dec    esi
  4349c9:	mov    ds:0xc88c8331,eax
  4349ce:	add    BYTE PTR [ebp-0x40fcf766],al
  4349d4:	ds scas al,BYTE PTR es:[edi]
  4349d6:	adc    al,0xc0
  4349d8:	push   es
  4349d9:	pop    ds
  4349da:	test   dl,bh
  4349dc:	sar    DWORD PTR [ebx+0x3787be69],1
  4349e2:	xor    BYTE PTR [esi+edi*8+0x1],ch
  4349e6:	xor    edx,DWORD PTR [eax-0x76]
  4349e9:	or     BYTE PTR [eax-0x734f2ac8],ah
  4349ef:	inc    ecx
  4349f0:	cmp    DWORD PTR [ecx],0xb35e5c40
  4349f6:	test   ah,al
  4349f8:	in     eax,0x8
  4349fa:	lock idiv dl
  4349fd:	or     dl,ah
  4349ff:	mov    ebx,esp
  434a01:	mul    BYTE PTR [esi+0x5c19aa1d]
  434a07:	pop    es
  434a08:	add    BYTE PTR [eax],al
  434a0a:	pusha  
  434a0b:	ret    
  434a0c:	jecxz  0x434a14
  434a0e:	inc    esi
  434a0f:	leave  
  434a10:	and    dh,BYTE PTR [esi]
  434a12:	sub    BYTE PTR [edx+0x66],dl
  434a15:	in     al,0xcb
  434a17:	pop    esi
  434a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434a19:	cmp    DWORD PTR [edi-0x6a9025fa],0x61
  434a20:	inc    ecx
  434a21:	cmp    ebx,DWORD PTR [esi+0x46]
  434a24:	out    0x4,eax
  434a26:	push   cs
  434a27:	int    0x3c
  434a29:	mov    esi,DWORD PTR [ecx+0x502f315d]
  434a2f:	aas    
  434a30:	out    dx,eax
  434a31:	call   0xc150:0x3e7c192
  434a38:	pop    esi
  434a39:	inc    edi
  434a3a:	or     DWORD PTR [ebx-0x3e840190],ecx
  434a40:	out    0x52,eax
  434a42:	shl    DWORD PTR [ecx-0x3e932629],cl
  434a48:	pop    esi
  434a49:	inc    edi
  434a4a:	jmp    0x5c419ad9
  434a4f:	shl    edi,0x52
  434a52:	fisttp DWORD PTR [esp+edi*4+0x6b10d507]
  434a59:	es inc ebx
  434a5b:	shl    edi,0x80
  434a5e:	adc    dl,BYTE PTR [ecx]
  434a60:	imul   ebp,DWORD PTR [edi+0x12e7c133],0x15
  434a67:	lea    edx,[eax]
  434a69:	add    esi,DWORD PTR [ebx+0x3f5e52]
  434a6f:	add    BYTE PTR [ebp+0x583bb294],cl
  434a75:	pop    ecx
  434a76:	mov    ecx,DWORD PTR [edx+0x19fff584]
  434a7c:	stc    
  434a7d:	xchg   BYTE PTR [ecx-0x4f],cl
  434a80:	sar    DWORD PTR [ebx+0x4c],cl
  434a83:	clc    
  434a84:	aam    0xee
  434a86:	mov    esi,0x8555aa0a
  434a8b:	es xchg ebp,eax
  434a8d:	push   ds
  434a8e:	out    dx,al
  434a8f:	bound  ebp,QWORD PTR [ebx+0x212e8749]
  434a95:	sub    al,0x85
  434a97:	in     eax,0x11
  434a99:	sub    al,0x87
  434a9b:	in     eax,dx
  434a9c:	and    al,0x87
  434a9e:	dec    ecx
  434a9f:	cmp    eax,0x723452f6
  434aa4:	add    ecx,DWORD PTR [edx+0x9]
  434aa7:	push   esi
  434aa8:	stos   BYTE PTR es:[edi],al
  434aa9:	inc    esi
  434aaa:	test   DWORD PTR [esi],esp
  434aac:	adc    DWORD PTR [edi-0x7904daaf],eax
  434ab2:	jno    0x434ac9
  434ab4:	xor    ecx,DWORD PTR [ecx+0x525e3334]
  434aba:	pusha  
  434abb:	bound  esi,QWORD PTR [ebx-0x291445c7]
  434ac1:	or     DWORD PTR [eax],eax
  434ac3:	jo     0x434ae0
  434ac5:	inc    edx
  434ac6:	xchg   DWORD PTR [esi-0x368e76f6],esi
  434acc:	push   ebp
  434acd:	leave  
  434ace:	je     0x434a73
  434ad0:	mov    edi,0xe98092
  434ad5:	add    dh,dl
  434ad7:	or     DWORD PTR [ebp-0x55],ebp
  434ada:	pop    edi
  434adb:	pop    edx
  434adc:	ins    BYTE PTR es:[edi],dx
  434add:	bound  ebx,QWORD PTR [ebx+0x511924ed]
  434ae3:	test   al,0x2
  434ae5:	call   0x387854c0
  434aea:	fwait
  434aeb:	stc    
  434aec:	dec    edi
  434aed:	mov    esi,0xe91ff72e
  434af2:	(bad)  
  434af3:	les    eax,FWORD PTR ds:[eax]
  434af6:	add    al,0x8d
  434af8:	aas    
  434af9:	pusha  
  434afa:	jg     0x434ae0
  434afc:	std    
  434afd:	jbe    0x434b29
  434aff:	sbb    eax,0xbec8897
  434b04:	add    BYTE PTR [edi+ebp*8-0x78],dh
  434b08:	clc    
  434b09:	add    eax,DWORD PTR [ecx-0x67a87b44]
  434b0f:	repnz dec esi
  434b11:	jo     0x434b80
  434b13:	jecxz  0x434b15
  434b15:	adc    BYTE PTR [ebx+ecx*1+0x4d45036e],bh
  434b1c:	pusha  
  434b1d:	mov    esi,ebx
  434b1f:	pop    ebp
  434b20:	jnp    0x434b1a
  434b22:	scas   eax,DWORD PTR es:[edi]
  434b23:	push   es
  434b24:	jp     0x434b95
  434b26:	mov    ebp,0xf339000b
  434b2b:	and    eax,0xad28707
  434b30:	add    BYTE PTR [eax],al
  434b32:	rcl    BYTE PTR [eax-0xf1d93b1],cl
  434b38:	dec    esi
  434b39:	add    BYTE PTR fs:[eax],al
  434b3c:	pop    es
  434b3d:	std    
  434b3e:	imul   ecx,DWORD PTR [ebx+0x2b5e59bb],0x5f
  434b45:	xchg   ecx,eax
  434b46:	xchg   edi,eax
  434b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434b48:	jb     0x434b55
  434b4a:	add    BYTE PTR [ebp-0x750aec80],cl
  434b50:	xor    esp,DWORD PTR [ebx+0x7]
  434b53:	mov    bh,0xb6
  434b55:	nop
  434b56:	(bad)  
  434b57:	mov    al,ds:0x66000b32
  434b5c:	lds    edx,FWORD PTR [ecx]
  434b5e:	dec    ebx
  434b5f:	mov    ebp,DWORD PTR [ebx+0x2c000e65]
  434b65:	xchg   edx,eax
  434b66:	(bad)  
  434b67:	cwde   
  434b68:	xor    cl,BYTE PTR [ebx]
  434b6a:	add    BYTE PTR [edi+edi*1],ch
  434b6d:	xchg   ebx,eax
  434b6e:	add    al,0x1a
  434b70:	aad    0xa7
  434b72:	mov    eax,eax
  434b74:	pop    esi
  434b75:	mov    dl,0xfd
  434b77:	call   ebp
  434b79:	mov    cl,0x74
  434b7b:	mov    al,ds:0x8fdb0e3
  434b80:	dec    ebx
  434b81:	popa   
  434b82:	fs inc edi
  434b84:	xchg   ebp,eax
  434b85:	mov    al,0x5b
  434b87:	dec    DWORD PTR [esi+0x40]
  434b8a:	jne    0x434b90
  434b8c:	aad    0xb0
  434b8e:	add    BYTE PTR [edx+ecx*2-0x250006c7],0x31
  434b96:	mov    esi,0xfdb0d2f9
  434b9b:	mov    bh,0xd5
  434b9d:	mov    cl,0xfd
  434b9f:	inc    DWORD PTR [eax]
  434ba1:	add    BYTE PTR [ebx],bh
  434ba3:	mov    esp,0xdfc96dc5
  434ba8:	mov    edi,es
  434baa:	loop   0x434c0a
  434bac:	jle    0x434c0e
  434bae:	adc    dh,cl
  434bb0:	add    esp,ebp
  434bb2:	shl    BYTE PTR [edi-0x756b3074],1
  434bb8:	cld    
  434bb9:	or     BYTE PTR [ebx+0x32],cl
  434bbc:	pop    ebp
  434bbd:	dec    eax
  434bbe:	adc    eax,0x5eff5bb1
  434bc3:	das    
  434bc4:	test   DWORD PTR [edi],eax
  434bc6:	aad    0xb0
  434bc8:	mov    BYTE PTR [ecx-0x241af],al
  434bce:	mov    esi,0x9cc70ff3
  434bd3:	das    
  434bd4:	popf   
  434bd5:	adc    dl,ch
  434bd7:	mov    al,0x88
  434bd9:	inc    ecx
  434bda:	int    0xb7
  434bdc:	imul   edi,DWORD PTR [edi-0x2fd7dca2],0x7d499fd4
  434be6:	adc    eax,0xad4185ee
  434beb:	or     DWORD PTR [eax+0x46],esi
  434bee:	fnsave [edx+0x99a86e6]
  434bf4:	call   0xb2d5f52d
  434bf9:	addr16 enter 0x7ad7,0x15
  434bfe:	push   eax
  434bff:	inc    esi
  434c00:	scas   eax,DWORD PTR es:[edi]
  434c01:	mov    BYTE PTR [ecx+eiz*2+0x345e],cl
  434c08:	rcr    edx,0x7
  434c0b:	mov    BYTE PTR [ecx+eax*1+0x189999f2],bl
  434c12:	in     eax,0x16
  434c14:	and    ch,dl
  434c16:	sub    DWORD PTR [eax],edi
  434c18:	push   eax
  434c19:	dec    esi
  434c1a:	and    edi,DWORD PTR [ebp+0x14]
  434c1d:	push   edx
  434c1e:	repnz call 0x5558:0xae064ad1
  434c26:	daa    
  434c27:	push   0x52
  434c29:	push   es
  434c2a:	or     eax,0x13456403
  434c2f:	jg     0x434c4d
  434c31:	push   edx
  434c32:	outs   dx,BYTE PTR ds:[esi]
  434c33:	cmp    ebx,DWORD PTR [ecx]
  434c35:	and    al,0x60
  434c37:	or     BYTE PTR [ebx],dl
  434c39:	sub    eax,0x8209d503
  434c3f:	inc    ebx
  434c40:	or     eax,0x1c053637
  434c45:	cs push cx
  434c48:	int    0x9
  434c4a:	pop    esi
  434c4b:	dec    ebx
  434c4c:	add    ebp,eax
  434c4e:	stos   BYTE PTR es:[edi],al
  434c4f:	pop    ebx
  434c50:	aad    0x9
  434c52:	out    0x3,eax
  434c54:	xchg   esp,eax
  434c55:	inc    ebp
  434c56:	mov    DWORD PTR ds:0x2e709d5,0xd344a759
  434c60:	dec    esp
  434c61:	xchg   ecx,eax
  434c62:	xchg   edx,eax
  434c63:	das    
  434c64:	push   esi
  434c65:	fadd   DWORD PTR [eax]
  434c67:	mov    cl,0xcf
  434c69:	xchg   BYTE PTR [ecx-0xf],cl
  434c6c:	add    BYTE PTR [eax],al
  434c6e:	fcmovnb st,st(3)
  434c70:	in     eax,0xeb
  434c72:	ret    
  434c73:	les    esp,FWORD PTR [esi-0x17]
  434c76:	ret    
  434c77:	jnp    0x434cc9
  434c79:	mov    eax,0xd727b1df
  434c7e:	(bad)  
  434c7f:	or     DWORD PTR [ebp+0x186aab6],eax
  434c85:	push   0xd
  434c87:	sbb    al,BYTE PTR [edi-0x684e555a]
  434c8d:	test   DWORD PTR [edi],0x53fe85c3
  434c93:	xor    al,0x10
  434c95:	jmp    0xd4eed571
  434c9a:	pop    es
  434c9b:	ret    
  434c9c:	pop    ecx
  434c9d:	das    
  434c9e:	jmp    0x793e:0x922455c9
  434ca5:	push   ecx
  434ca6:	fst    DWORD PTR [edx]
  434ca8:	test   BYTE PTR [ebx-0x2a],bl
  434cab:	or     DWORD PTR [eax],eax
  434cad:	bound  ebx,QWORD PTR [edi]
  434caf:	test   DWORD PTR cs:[esi],esi
  434cb2:	fld    DWORD PTR [ebx-0x79780ebc]
  434cb8:	xchg   ecx,eax
  434cb9:	dec    ecx
  434cba:	pushf  
  434cbb:	mov    esp,0x655762f9
  434cc0:	adc    ch,cl
  434cc2:	(bad)  
  434cc3:	out    dx,al
  434cc4:	icebp  
  434cc5:	pop    es
  434cc6:	add    dh,dh
  434cc8:	dec    esi
  434cc9:	(bad)  
  434cca:	jmp    DWORD PTR [ecx-0x792916ee]
  434cd0:	mov    DWORD PTR [ecx-0x43940000],ecx
  434cd6:	stc    
  434cd7:	jno    0x434cb3
  434cd9:	add    edi,edi
  434cdb:	jne    0x434d13
  434cdd:	pop    ss
  434cde:	add    cl,ch
  434ce0:	xlat   BYTE PTR ds:[ebx]
  434ce1:	ja     0x434cb3
  434ce3:	add    BYTE PTR [edx],bl
  434ce5:	add    eax,0x8a8979c
  434cea:	add    BYTE PTR [eax],al
  434cec:	mov    cl,0x84
  434cee:	(bad)  
  434cef:	xchg   esp,eax
  434cf0:	cmp    al,0x8
  434cf2:	add    BYTE PTR [ebx+0xe2cbb],cl
  434cf8:	sub    al,0x1b
  434cfa:	mov    ebx,0xe68ab39
  434cff:	add    ah,bh
  434d01:	pusha  
  434d02:	daa    
  434d03:	mov    eax,DWORD PTR [ebx-0x14]
  434d06:	jl     0x434cd1
  434d08:	push   esp
  434d09:	jae    0xb9469156
  434d0f:	jmp    0x434d0f
  434d11:	adc    al,al
  434d13:	mov    ebp,DWORD PTR [ebx-0x38ff9dd7]
  434d19:	js     0x434d65
  434d1b:	push   eax
  434d1c:	fld    QWORD PTR [edx-0x7cf843cb]
  434d23:	inc    edi
  434d24:	and    BYTE PTR [edi],bh
  434d26:	aas    
  434d27:	pop    esp
  434d28:	inc    edi
  434d29:	adc    DWORD PTR [ebx-0x3c],edi
  434d2c:	pushf  
  434d2d:	fcomip st,st(2)
  434d2f:	cmc    
  434d30:	sbb    ecx,0xffffff83
  434d33:	bsr    edi,edx
  434d36:	imul   edi,edi,0x0
  434d39:	add    bl,dh
  434d3b:	popa   
  434d3c:	xor    DWORD PTR [ecx-0x64],esi
  434d3f:	loopne 0x434d90
  434d41:	jmp    DWORD PTR [ebx-0x27]
  434d44:	stc    
  434d45:	pop    esi
  434d46:	loopne 0x434d20
  434d48:	inc    edi
  434d49:	je     0x434d50
  434d4b:	stc    
  434d4c:	addr16 jmp 0x3b2752
  434d52:	call   FWORD PTR [eax+0x68]
  434d55:	add    BYTE PTR [eax-0x6fa87caf],cl
  434d5b:	ds aas 
  434d5d:	cmp    ch,dl
  434d5f:	es dec eax
  434d61:	(bad)  
  434d62:	push   ebx
  434d63:	sub    BYTE PTR [edi-0x60],bh
  434d66:	jecxz  0x434d18
  434d68:	std    
  434d69:	test   BYTE PTR [edx-0x7b],ch
  434d6c:	idiv   bh
  434d6e:	cmp    al,al
  434d70:	xlat   BYTE PTR ds:[ebx]
  434d71:	bound  ebx,QWORD PTR [ebp+esi*4+0x3b]
  434d75:	test   DWORD PTR [edx+0x51],eax
  434d78:	idiv   bh
  434d7a:	and    bh,BYTE PTR [eax]
  434d7c:	jg     0x434d16
  434d7e:	ret    
  434d7f:	mov    al,0xfd
  434d81:	xchg   ecx,ebx
  434d83:	sar    esi,0x98
  434d86:	xor    eax,0xd2fffddb
  434d8b:	bnd ret 
  434d8d:	(bad)  
  434d8e:	aam    0x54
  434d90:	xchg   DWORD PTR [ebp+edx*8+0x518afdb0],edx
  434d97:	sub    al,0x71
  434d99:	add    ch,dl
  434d9b:	mov    al,0x76
  434d9d:	jno    0x434d9f
  434d9f:	add    BYTE PTR [ebp+0x27],ch
  434da2:	inc    eax
  434da3:	pop    esp
  434da4:	pop    eax
  434da5:	imul   eax,DWORD PTR [ebp+0x1],0xfd0beb5e
  434dac:	xchg   ebp,eax
  434dad:	xlat   BYTE PTR ds:[ebx]
  434dae:	add    ebp,DWORD PTR ds:0xc522795
  434db4:	out    0x9e,al
  434db6:	test   dl,bh
  434db8:	shl    DWORD PTR [ebx+0x3807be71],1
  434dbe:	cmp    BYTE PTR [esi+ebp*8-0x7f],ch
  434dc2:	xor    edx,DWORD PTR [eax+0x2a]
  434dc5:	mov    eax,ebp
  434dc7:	xor    al,0xd5
  434dc9:	mov    al,0x7c
  434dcb:	inc    ecx
  434dcc:	icebp  
  434dcd:	cmp    DWORD PTR [eax+0x5c],ecx
  434dd0:	dec    esi
  434dd1:	stos   DWORD PTR es:[edi],eax
  434dd2:	test   ah,al
  434dd4:	lds    ecx,FWORD PTR [eax+0x96af338]
  434dda:	bound  edi,QWORD PTR [esp+ecx*8-0xa]
  434dde:	or     bl,BYTE PTR es:[edx-0x2fff23e7]
  434de5:	mov    ebx,0xc96600e3
  434dea:	mov    ds:0x6651a831,al
  434def:	jecxz  0x434e2c
  434df1:	pop    ebp
  434df2:	test   BYTE PTR es:[edi],ch
  434df5:	add    eax,0x5a1577da
  434dfa:	shr    DWORD PTR [esi+ecx*2],0x45
  434dfe:	out    0x2,eax
  434e00:	jle    0x434dc8
  434e02:	mov    esp,0x100007c
  434e07:	mov    ?,WORD PTR [ebx+edi*8-0x4d412f47]
  434e0e:	mov    DWORD PTR ds:0xfed9456e,esp
  434e14:	daa    
  434e15:	push   edi
  434e16:	mov    ss,WORD PTR [eax+0x4f53ef9f]
  434e1c:	sti    
  434e1d:	jl     0x434dba
  434e1f:	adc    DWORD PTR [eax+0x3a],esi
  434e22:	mov    ebp,0xd21425c2
  434e27:	mov    ecx,0x25203e7
  434e2c:	jo     0x434e6a
  434e2e:	fld    DWORD PTR [edx+0x4252002f]
  434e34:	pop    es
  434e35:	jge    0x434e54
  434e37:	loop   0x434e98
  434e39:	cmp    al,0xf9
  434e3b:	sub    BYTE PTR [edi],0x14
  434e3e:	pop    edx
  434e3f:	inc    edx
  434e40:	fistp  QWORD PTR [ebp+ecx*1-0xa]
  434e44:	arpl   WORD PTR [ebp+eax*8+0xe],di
  434e48:	out    0x3,eax
  434e4a:	xchg   esp,eax
  434e4b:	dec    edx
  434e4c:	fild   DWORD PTR [ebx]
  434e4e:	push   ebp
  434e4f:	or     ah,bh
  434e51:	jl     0x434e60
  434e53:	add    BYTE PTR es:[eax-0x4f],ah
  434e57:	pop    ecx
  434e58:	xchg   DWORD PTR [ecx],esp
  434e5a:	adc    eax,0x6e2980cb
  434e5f:	mov    ecx,0x9d6e8f9
  434e64:	add    BYTE PTR [esi],ch
  434e66:	pop    ecx
  434e67:	into   
  434e68:	adc    eax,0xd60000e9
  434e6d:	mov    dl,0xf9
  434e6f:	inc    esi
  434e70:	adc    ah,bh
  434e72:	mov    edi,0xe149c
  434e77:	jno    0x434e9c
  434e79:	mov    bl,0xf9
  434e7b:	cs in  al,0x77
  434e7e:	add    al,0xe9
  434e80:	(bad)  
  434e81:	(bad)  
  434e82:	int3   
  434e83:	sub    eax,0xbcccc615
  434e88:	(bad)  
  434e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434e8a:	test   DWORD PTR [esi+ecx*1-0x62cf7ca6],ebx
  434e91:	cmp    eax,0x8bea8085
  434e96:	stc    
  434e97:	jge    0x434f0e
  434e99:	inc    esi
  434e9a:	push   edx
  434e9b:	bound  ecx,QWORD PTR [ebp+eax*1+0xb91df83]
  434ea2:	sub    eax,0xe5d403c2
  434ea7:	out    0x4f,eax
  434ea9:	aam    0xbf
  434eab:	rcl    dl,cl
  434ead:	idiv   BYTE PTR [edi+eax*8-0x1a]
  434eb1:	xor    al,0xfd
  434eb3:	imul   esi,DWORD PTR [eax+0xabf8302],0xaeaf7d1c
  434ebd:	xor    al,0x3
  434ebf:	push   0xffffff90
  434ec1:	add    bh,BYTE PTR [edx-0x13]
  434ec4:	call   0xa3db0727
  434ec9:	mov    dl,0xf9
  434ecb:	les    esi,FWORD PTR cs:[edi+0x8]
  434ecf:	add    BYTE PTR [eax],al
  434ed1:	add    BYTE PTR [ebx+esi*1+0x3f],ch
  434ed5:	xor    al,0xf1
  434ed7:	int3   
  434ed8:	je     0x434ef6
  434eda:	and    eax,0x8374245f
  434edf:	cld    
  434ee0:	add    BYTE PTR [ecx-0x3c],0x34
  434ee4:	inc    ecx
  434ee5:	and    al,0x1c
  434ee7:	(bad)  
  434ee8:	leave  
  434ee9:	mov    edi,DWORD PTR [ecx-0x4c]
  434eec:	jl     0x434eb2
  434eee:	xor    al,0xcf
  434ef0:	aas    
  434ef1:	xor    al,0x2c
  434ef3:	or     al,0x0
  434ef5:	add    BYTE PTR [ebp+0x35],bl
  434ef8:	push   edi
  434ef9:	or     BYTE PTR [ebp+0x34e8245f],dh
  434eff:	(bad)  
  434f00:	idiv   edi
  434f02:	sbb    ah,bl
  434f04:	push   esi
  434f05:	pop    ebp
  434f06:	out    dx,al
  434f07:	mov    ah,0xf9
  434f09:	mov    bh,0xea
  434f0b:	(bad)  
  434f0c:	idiv   edi
  434f0e:	cmp    edi,ecx
  434f10:	mov    ecx,0xcc77ec08
  434f15:	int3   
  434f16:	test   al,0x78
  434f18:	int3   
  434f19:	int3   
  434f1a:	push   ecx
  434f1b:	xor    ebp,esp
  434f1d:	mov    esi,DWORD PTR [ecx]
  434f1f:	mov    esp,0x217334c
  434f24:	mov    ebx,0x22700f
  434f29:	add    BYTE PTR [ebx+ecx*4-0x6f54cec8],bh
  434f30:	mov    al,BYTE PTR [eax]
  434f32:	lods   al,BYTE PTR ds:[esi]
  434f33:	or     edi,DWORD PTR [ebx+0x7d]
  434f36:	add    BYTE PTR [eax],al
  434f38:	mov    al,ds:0x34850703
  434f3d:	push   cs
  434f3e:	add    BYTE PTR [eax],al
  434f40:	ret    0x6d30
  434f43:	or     BYTE PTR [edi-0x25f69226],dh
  434f49:	ss cmp edi,esi
  434f4c:	aad    0xfb
  434f4e:	sub    BYTE PTR [esi+0x5a76a0e5],bh
  434f54:	(bad)  
  434f56:	sub    esp,DWORD PTR [eax]
  434f58:	add    BYTE PTR [ebx-0xf4abd3c],bh
  434f5e:	sub    edi,DWORD PTR ds:0x282a29d5
  434f64:	pushf  
  434f65:	into   
  434f66:	and    DWORD PTR [ebx-0x2e],esi
  434f69:	out    dx,eax
  434f6a:	inc    ecx
  434f6b:	and    al,0x25
  434f6d:	jns    0x434faf
  434f6f:	add    BYTE PTR [esi+0x6f],bl
  434f72:	adc    eax,0x33009385
  434f77:	push   0xfffdac09
  434f7c:	mov    edi,0x4f92da1
  434f81:	sub    al,0xcc
  434f83:	jge    0x434f9e
  434f85:	mov    ebp,0xa4a0f508
  434f8a:	sub    al,0x5a
  434f8c:	dec    ebp
  434f8d:	sbb    eax,0x7c0af9cb
  434f92:	sub    bh,BYTE PTR [esi+0x5378a0e5]
  434f98:	leave  
  434f99:	xchg   edx,eax
  434f9a:	jbe    0x435016
  434f9c:	add    BYTE PTR [eax],al
  434f9e:	rcl    DWORD PTR [esi+0x8a15976],1
  434fa4:	jecxz  0x434fa0
  434fa6:	loop   0x434f57
  434fa8:	js     0x434f82
  434faa:	push   eax
  434fab:	int3   
  434fac:	push   ecx
  434fad:	adc    al,0x5e
  434faf:	out    0x1b,al
  434fb1:	test   DWORD PTR [ebx],ebx
  434fb3:	or     eax,0x91c25033
  434fb8:	add    ah,0xcd
  434fbb:	outs   dx,DWORD PTR ds:[esi]
  434fbc:	inc    ebx
  434fbd:	sbb    al,0xd5
  434fbf:	mov    al,ds:0x70afffd
  434fc4:	ja     0x434f83
  434fc6:	dec    BYTE PTR [ecx]
  434fc8:	inc    esp
  434fc9:	ret    0x9c5
  434fcc:	pop    edi
  434fcd:	leave  
  434fce:	mov    WORD PTR [esi-0x33d1d76e],?
  434fd4:	test   DWORD PTR [ebx],0xbfb3c591
  434fda:	mov    ebp,eax
  434fdc:	stos   DWORD PTR es:[edi],eax
  434fdd:	mov    edi,0x43aac5a1
  434fe2:	sbb    DWORD PTR [edx],edi
  434fe4:	iret   
  434fe5:	inc    ebx
  434fe6:	aad    0xce
  434fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434fe9:	aaa    
  434fea:	ror    BYTE PTR [ecx],cl
  434fec:	out    0x3,eax
  434fee:	adc    al,0x49
  434ff0:	mov    bh,0x53
  434ff2:	cmc    
  434ff3:	dec    ecx
  434ff4:	out    0xc4,eax
  434ff6:	xchg   ebp,eax
  434ff7:	push   ecx
  434ff8:	in     al,dx
  434ff9:	add    edx,ebp
  434ffb:	or     DWORD PTR [esi],esp
  434ffd:	mov    edi,0x789cc521
  435002:	add    BYTE PTR [eax],al
  435004:	cmp    DWORD PTR [eax-0x6f],ebx
  435007:	js     0x434fb9
  435009:	adc    eax,0x9e14d66
  43500e:	mov    dl,0x78
  435010:	or     eax,0x9f78be3c
  435015:	in     eax,dx
  435016:	pop    ebp
  435017:	xor    BYTE PTR [ebp-0x2afc178f],dh
  43501d:	or     DWORD PTR [esi],edx
  43501f:	jecxz  0x435079
  435021:	inc    edx
  435022:	mov    edi,0x9845ea59
  435027:	int3   
  435028:	adc    ecx,DWORD PTR [edx+0x4f53f8ab]
  43502e:	adc    eax,DWORD PTR [ecx+0x2ade3f95]
  435034:	lea    ecx,[ebx]
  435036:	out    0x3,eax
  435038:	aad    0x53
  43503a:	outs   dx,BYTE PTR ds:[esi]
  43503b:	loope  0x43505b
  43503d:	leave  
  43503e:	test   bl,0xea
  435041:	dec    ebx
  435042:	add    BYTE PTR [ecx],al
  435044:	add    al,0x7
  435046:	test   DWORD PTR [edi],ebx
  435048:	cmc    
  435049:	jnp    0x43504a
  43504b:	call   0x8c105a26
  435050:	adc    BYTE PTR [eax+0x30],cl
  435053:	pusha  
  435054:	pop    ss
  435055:	out    0x86,al
  435057:	aaa    
  435058:	loope  0x435048
  43505a:	je     0x435035
  43505c:	sti    
  43505d:	inc    edi
  43505e:	sub    dl,al
  435060:	sahf   
  435061:	and    al,0x28
  435063:	bound  ebp,QWORD PTR [edx+0x178505]
  435069:	add    ch,al
  43506b:	pop    ecx
  43506c:	and    eax,0xe843a031
  435071:	pop    ebx
  435072:	jle    0x435027
  435074:	stc    
  435075:	bound  edx,QWORD PTR [edi+0x3d257ce1]
  43507b:	mov    WORD PTR [edx+0x15],es
  43507e:	out    dx,al
  43507f:	retf   0xf942
  435082:	(bad)  
  435083:	or     DWORD PTR [eax],eax
  435085:	jmp    0x629e1a4d
  43508a:	xor    al,0x51
  43508c:	mov    ebp,0x86f994d2
  435091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435092:	sbb    bh,bh
  435094:	rcr    BYTE PTR [edi+0xd7b8cd5],0x82
  43509b:	retf   0xb285
  43509e:	add    cl,BYTE PTR [esi+0x57dbb552]
  4350a4:	xor    BYTE PTR [ecx-0x64b03d35],bl
  4350aa:	(bad)  
  4350ab:	jno    0x435086
  4350ad:	out    0xf,al
  4350af:	(bad)  
  4350b0:	dec    ebx
  4350b1:	fstp   QWORD PTR [ebx-0x33]
  4350b4:	or     al,0x2
  4350b6:	cwde   
  4350b7:	cmp    eax,0x61b6224
  4350bc:	test   DWORD PTR [eax],eax
  4350be:	add    bl,BYTE PTR [edx]
  4350c0:	dec    edi
  4350c1:	sub    edi,DWORD PTR [ebx-0x8]
  4350c4:	dec    eax
  4350c5:	call   0x3ab0cc
  4350ca:	aaa    
  4350cb:	sti    
  4350cc:	daa    
  4350cd:	add    DWORD PTR [eax],0x0
  4350d0:	push   0xac7e82bc
  4350d5:	fild   WORD PTR [eax-0x3fe46faa]
  4350db:	pop    esi
  4350dc:	imul   DWORD PTR [ecx+0x4b07c355]
  4350e2:	sub    BYTE PTR [ecx],al
  4350e4:	ret    0x311d
  4350e7:	inc    esi
  4350e8:	sub    al,0x59
  4350ea:	inc    esi
  4350ec:	mov    edx,0x6c00001d
  4350f1:	or     BYTE PTR [ebx-0x2ffb1faa],al
  4350f7:	jae    0x435132
  4350f9:	or     ecx,ecx
  4350fb:	mov    DWORD PTR [edx-0x13cca8e4],ecx
  435101:	loop   0x435085
  435103:	in     eax,0x51
  435105:	retf   
  435106:	int3   
  435107:	int3   
  435108:	dec    ecx
  435109:	xor    ebp,esp
  43510b:	mov    edi,DWORD PTR [ecx-0x50]
  43510e:	jl     0x4350fc
  435110:	cld    
  435111:	idiv   BYTE PTR [eax+eax*8+0x3]
  435115:	xor    al,0xf4
  435117:	adc    edi,esp
  435119:	pop    es
  43511a:	cmp    DWORD PTR [eax-0x10],0xffffff88
  43511e:	test   DWORD PTR [edi],0xbd568
  435124:	cld    
  435125:	mov    bh,BYTE PTR [eax+0xc]
  435128:	cld    
  435129:	scas   al,BYTE PTR es:[edi]
  43512a:	jge    0x43510b
  43512c:	inc    DWORD PTR [edi]
  43512e:	add    BYTE PTR [ebx+0xa6d0db4],al
  435134:	add    BYTE PTR [eax],al
  435136:	aas    
  435137:	inc    esi
  435138:	add    al,0x0
  43513a:	aad    0xab
  43513c:	jp     0x43510e
  43513e:	out    0xa0,al
  435140:	std    
  435141:	jl     0x43513d
  435143:	mov    bh,0x4a
  435145:	add    bl,BYTE PTR [edx-0x55000e54]
  43514b:	mov    eax,ds:0x27d1487c
  435150:	hlt    
  435151:	xchg   BYTE PTR [eax],cl
  435153:	cdq    
  435154:	jnp    0x43519e
  435156:	in     eax,0x37
  435158:	inc    esp
  435159:	add    al,0x26
  43515b:	sub    BYTE PTR [edi],ah
  43515d:	cmp    BYTE PTR [esi+ebp*8-0x39],cl
  435161:	xchg   DWORD PTR [eax],edx
  435163:	xchg   ecx,eax
  435164:	jnp    0x435167
  435166:	or     edi,DWORD PTR [eax]
  435168:	dec    edi
  435169:	cmp    al,0x5c
  43516b:	out    dx,al
  43516c:	rol    DWORD PTR [edi+0x4b753908],cl
  435172:	jne    0x435158
  435174:	cmp    al,bl
  435176:	aad    0xa0
  435178:	std    
  435179:	call   DWORD PTR [esi+0x59]
  43517c:	out    0x8,al
  43517e:	pop    edx
  43517f:	add    edx,esi
  435181:	(bad)  
  435182:	cmp    cl,BYTE PTR [eax+eiz*1-0x7d]
  435186:	(bad)  [ecx]
  435188:	inc    ebx
  435189:	add    BYTE PTR [esi+0x64],bl
  43518c:	cmc    
  43518d:	adc    BYTE PTR ds:0xd2c0fc7e,0xbc
  435194:	std    
  435195:	call   ebp
  435197:	sbb    eax,ecx
  435199:	sldt   WORD PTR [eax]
  43519c:	aad    0xa0
  43519e:	test   dl,bh
  4351a0:	in     eax,0x8f
  4351a2:	and    edi,DWORD PTR [ebp+0x78]
  4351a5:	or     al,0x4
  4351a7:	or     DWORD PTR [ecx+0x78],ebx
  4351aa:	repz (bad) 
  4351ac:	jmp    0xc195:0xe3fe8fab
  4351b3:	test   DWORD PTR [ebx],ecx
  4351b5:	or     dh,BYTE PTR [esi-0x5e78ec1d]
  4351bb:	sti    
  4351bc:	push   ebx
  4351bd:	pop    esp
  4351be:	iret   
  4351bf:	add    al,0x9d
  4351c1:	xchg   cl,cl
  4351c3:	repz sub ah,dl
  4351c6:	mov    ecx,0x3307dd40
  4351cb:	or     ch,BYTE PTR [edx]
  4351cd:	scas   eax,DWORD PTR es:[edi]
  4351ce:	sar    BYTE PTR [ebp+edx*8+0x9],cl
  4351d2:	xor    al,0x12
  4351d4:	xor    ecx,DWORD PTR [edx]
  4351d6:	or     eax,0x8f09fb04
  4351db:	sub    dl,ah
  4351dd:	or     edi,esp
  4351df:	jp     0x4351f5
  4351e1:	adc    bh,ch
  4351e3:	add    eax,0x6193444e
  4351e8:	pop    edx
  4351e9:	push   esp
  4351ea:	mov    edi,DWORD PTR [esp+eax*1+0x12]
  4351ee:	sbb    BYTE PTR [esi],dh
  4351f0:	ins    DWORD PTR es:[edi],dx
  4351f1:	inc    eax
  4351f2:	rol    BYTE PTR [ebx],1
  4351f4:	aad    0x7e
  4351f6:	mov    esp,0x70cf00cb
  4351fb:	inc    eax
  4351fc:	in     eax,dx
  4351fd:	neg    BYTE PTR [eax-0x40]
  435200:	add    BYTE PTR [eax],al
  435202:	aam    0x8
  435204:	out    0x3,eax
  435206:	aad    0xa0
  435208:	pop    eax
  435209:	repnz xor dh,BYTE PTR [edx-0x350abf92]
  435210:	stos   BYTE PTR es:[edi],al
  435211:	repz and dh,BYTE PTR [edx-0x36a9fc19]
  435218:	fwait
  435219:	add    BYTE PTR [ecx+ecx*2],dl
  43521c:	xlat   BYTE PTR ds:[ebx]
  43521d:	enter  0xb20c,0x12
  435221:	rcl    DWORD PTR [ecx+eax*1-0x67a90718],1
  435228:	out    0x3,eax
  43522a:	aad    0x2
  43522c:	xor    esp,eax
  43522e:	sub    ch,BYTE PTR [ecx-0x339e1f00]
  435234:	mov    edi,0xc0b4de00
  435239:	sbb    al,BYTE PTR [edi-0x2916e687]
  43523f:	or     ecx,esi
  435241:	fcom   DWORD PTR [eax+eax*8+0x73]
  435245:	push   esi
  435246:	ds mov edi,0x31aacb80
  43524c:	div    cl
  43524e:	sbb    al,BYTE PTR [eax]
  435250:	test   DWORD PTR [ecx+eiz*4],ebp
  435253:	xchg   BYTE PTR [ebx-0x4f],dl
  435256:	pop    edx
  435257:	dec    edx
  435258:	sbb    BYTE PTR [edx+0x25],bh
  43525b:	dec    edx
  43525c:	add    BYTE PTR [eax-0x16ffff25],dl
  435262:	dec    DWORD PTR [edx+0x24]
  435265:	test   al,0x0
  435267:	add    BYTE PTR [esi+0x56b28506],bl
  43526d:	ror    DWORD PTR [ecx],1
  43526f:	push   0xffffff83
  435271:	push   es
  435272:	jge    0x43521c
  435274:	popa   
  435275:	mov    eax,es
  435277:	hlt    
  435278:	int3   
  435279:	mov    BYTE PTR [ecx+0xd],cl
  43527c:	pop    edi
  43527d:	mov    cl,0xf9
  43527f:	jmp    0x3a437a5a
  435284:	aaa    
  435285:	sub    BYTE PTR [eax],al
  435287:	ret    
  435288:	(bad)  
  435289:	mov    BYTE PTR [ecx-0x23],dl
  43528c:	push   cs
  43528d:	xor    BYTE PTR ds:0x4b86d6e9,cl
  435293:	loope  0x435234
  435295:	pop    esp
  435296:	clc    
  435297:	sub    dh,bh
  435299:	add    ecx,esi
  43529b:	cmp    dl,BYTE PTR [esi-0x31]
  43529e:	(bad)  
  43529f:	imul   ecx,DWORD PTR [esi+0x9],0x87eeae87
  4352a6:	aas    
  4352a7:	fnstcw WORD PTR [ecx+0x12]
  4352aa:	sub    eax,0xee1cb700
  4352af:	jmp    0x3d088d
  4352b4:	daa    
  4352b5:	jne    0x435325
  4352b7:	lds    esi,FWORD PTR [edi-0x6]
  4352ba:	imul   ecx
  4352bc:	lea    edi,[ecx+edi*8+0x7fa47ff]
  4352c3:	(bad)  
  4352c4:	out    dx,al
  4352c5:	popf   
  4352c6:	mov    WORD PTR [esp+ebp*8+0x5],?
  4352ca:	adc    DWORD PTR [ebp+0x0],0x0
  4352ce:	xchg   esp,eax
  4352cf:	int    0xc1
  4352d1:	adc    BYTE PTR [esp+ecx*1+0x5b7cfe7b],bh
  4352d8:	sbb    al,BYTE PTR [ebx+0xf00c1e9]
  4352de:	add    BYTE PTR [edi-0x4883fff6],ah
  4352e4:	scas   eax,DWORD PTR es:[edi]
  4352e5:	add    ch,BYTE PTR [ebx-0xf]
  4352e8:	sti    
  4352e9:	mov    ebx,DWORD PTR [edx+0x7b]
  4352ec:	loopne 0x435330
  4352ee:	jmp    FWORD PTR [esi+0x8]
  4352f1:	mov    ecx,eax
  4352f3:	mov    ebp,0xc6efd7fb
  4352f8:	adc    BYTE PTR [edx+0x4a],dh
  4352fb:	sub    eax,0xc3bc1057
  435300:	or     BYTE PTR [edi],cl
  435302:	mov    cl,0x38
  435304:	adc    BYTE PTR [eax],al
  435306:	sub    al,0xbf
  435308:	mov    ebx,0xc8c00
  43530d:	je     0x43533a
  43530f:	xor    edi,DWORD PTR ds:0x184cf308
  435315:	xchg   ebx,eax
  435316:	pusha  
  435317:	dec    esp
  435318:	add    cl,ch
  43531a:	imul   edi,DWORD PTR [ecx+edi*8+0x1fef87ff],0xffffff85
  435322:	mov    esp,0xd58b0240
  435327:	jmp    0x4352ec
  435329:	out    0xcd,eax
  43532b:	and    esp,esp
  43532d:	call   FWORD PTR [ebp-0x46]
  435330:	retf   0x41
  435333:	add    ch,al
  435335:	mov    ds:0x2ed5ffff,al
  43533a:	jecxz  0x4352c3
  43533c:	js     0x4352ec
  43533e:	mov    ebp,0xfe5adde5
  435343:	mov    ah,BYTE PTR [eax]
  435345:	mov    ebp,0x2cb05b7c
  43534a:	cmp    ebx,DWORD PTR [eax]
  43534c:	daa    
  43534d:	icebp  
  43534e:	fcomi  st,st(2)
  435350:	retf   0xfda0
  435353:	test   BYTE PTR [eax],al
  435355:	leave  
  435356:	jne    0x435399
  435358:	mov    ebp,0xa32da8b3
  43535d:	push   0xa192fdfb
  435362:	std    
  435363:	in     al,0xd0
  435365:	and    eax,edx
  435367:	and    BYTE PTR [esi],al
  435369:	ret    
  43536a:	cmp    BYTE PTR [ebx+0x79],0xa1
  43536e:	hlt    
  43536f:	add    DWORD PTR [ebp-0x2f],0xfffffffd
  435373:	(bad)  
  435374:	(bad)  
  435376:	std    
  435377:	clc    
  435378:	adc    BYTE PTR ds:0x8186ca77,dh
  43537e:	ds jge 0x43539c
  435381:	mov    ecx,0xa44d5376
  435386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435387:	jge    0x4353cc
  435389:	add    DWORD PTR [esi-0x26],ecx
  43538c:	dec    esi
  43538d:	push   0x6d15831d
  435392:	add    BYTE PTR [edi+0x41cca48d],al
  435398:	add    BYTE PTR [eax],al
  43539a:	lds    esp,FWORD PTR [eax+0x74d5ffff]
  4353a0:	adc    ecx,DWORD PTR [eax+0x791309b0]
  4353a6:	adc    BYTE PTR [ebx+0x1fac336],al
  4353ac:	sub    dl,bl
  4353ae:	in     eax,0xc8
  4353b0:	(bad)  
  4353b1:	jmp    0x43542b
  4353b3:	add    eax,0x81f93f74
  4353b8:	lods   al,BYTE PTR ds:[esi]
  4353b9:	(bad)  
  4353ba:	dec    ebp
  4353bb:	push   ebp
  4353bc:	add    DWORD PTR [esi+edi*2-0x62],edi
  4353c0:	pop    esi
  4353c1:	xor    eax,0xdc3859ed
  4353c6:	dec    ebx
  4353c7:	pop    ss
  4353c8:	out    0x3,eax
  4353ca:	pop    eax
  4353cb:	push   esp
  4353cc:	iret   
  4353cd:	jp     0x4353e3
  4353cf:	adc    dl,BYTE PTR [esi]
  4353d1:	test   eax,0xfcaab800
  4353d6:	test   eax,0xb803e7ae
  4353db:	add    al,0x66
  4353dd:	(bad)
  4353e0:	add    eax,0xe7ae0e81
  4353e5:	hlt    
  4353e6:	push   esi
  4353e7:	or     eax,0xfed503f7
  4353ec:	pop    eax
  4353ed:	add    DWORD PTR [esp+edi*1-0x75],edi
  4353f1:	js     0x435392
  4353f3:	fiadd  DWORD PTR [edi-0x103817bf]
  4353f9:	jp     0x435401
  4353fb:	mov    dl,0xe6
  4353fd:	stos   DWORD PTR es:[edi],eax
  4353fe:	add    BYTE PTR [eax],al
  435400:	fsubr  DWORD PTR [edi-0x7dd0ae29]
  435406:	stos   BYTE PTR es:[edi],al
  435407:	and    edx,DWORD PTR [esi-0x37]
  43540a:	shr    ebp,cl
  43540c:	pop    ecx
  43540d:	ret    0xe268
  435410:	cmp    al,0x9
  435412:	out    0x3,eax
  435414:	pop    edx
  435415:	inc    ecx
  435416:	out    dx,eax
  435417:	js     0x4353b5
  435419:	jmp    0xa1a6148b
  43541e:	add    cl,ah
  435420:	lahf   
  435421:	out    dx,al
  435422:	or     esi,DWORD PTR [esi]
  435424:	rcr    DWORD PTR [ecx],1
  435426:	add    bl,ch
  435428:	(bad)  
  435429:	or     DWORD PTR [edi+edi*8+0x7e],esi
  43542d:	push   edx
  43542e:	in     al,dx
  43542f:	sub    BYTE PTR ds:0x6beb6601,bl
  435435:	pop    edx
  435436:	in     al,dx
  435437:	jno    0x4353ec
  435439:	mov    ds:0x3beea685,al
  43543e:	push   eax
  43543f:	add    ebp,ebx
  435441:	sbb    BYTE PTR [eax],al
  435443:	jmp    0x713bad95
  435448:	push   ds
  435449:	adc    ch,BYTE PTR ds:0xc1bbcac2
  43544f:	out    dx,al
  435450:	ror    BYTE PTR [ecx],cl
  435452:	add    cl,ch
  435454:	outs   dx,DWORD PTR ds:[esi]
  435455:	dec    ebx
  435456:	adc    cl,ch
  435458:	ror    BYTE PTR [ecx],cl
  43545a:	add    BYTE PTR ds:0xd9fa2ef8,dh
  435460:	jecxz  0x43546d
  435462:	jge    0x435490
  435464:	add    BYTE PTR [eax],al
  435466:	xchg   ebp,eax
  435467:	or     cl,BYTE PTR [ecx]
  435469:	ins    DWORD PTR es:[edi],dx
  43546a:	aaa    
  43546b:	add    eax,DWORD PTR [eax]
  43546d:	jmp    0x9641cc59
  435472:	and    al,0xae
  435474:	test   DWORD PTR [edi+0x6a3eaa8a],ebx
  43547a:	lahf   
  43547b:	add    al,BYTE PTR [edi-0x2e50deec]
  435481:	push   0xffffff97
  435483:	sbb    ch,BYTE PTR [esi-0x71]
  435486:	bound  ecx,QWORD PTR [ebx+0x20]
  435489:	jo     0x435441
  43548b:	dec    ecx
  43548c:	sub    DWORD PTR [ecx],0xfffffffd
  43548f:	scas   al,BYTE PTR es:[edi]
  435490:	mov    BYTE PTR [ecx-0x6be451e],dh
  435496:	(bad)  
  435497:	stos   DWORD PTR es:[edi],eax
  435498:	stc    
  435499:	add    BYTE PTR [esi*8+0x5d418815],bh
  4354a0:	mov    ecx,0xf9df34eb
  4354a5:	mov    WORD PTR [ecx+0x5d],?
  4354a8:	mov    BYTE PTR [ebp-0x1f],bl
  4354ab:	jl     0x4354fc
  4354ad:	sbb    BYTE PTR ds:0xfa9de857,bh
  4354b3:	or     BYTE PTR [eax],al
  4354b5:	mov    ebp,DWORD PTR [ecx]
  4354b7:	jno    0x43543a
  4354b9:	inc    edi
  4354ba:	hlt    
  4354bb:	mov    bl,0xd4
  4354bd:	xor    ebp,edx
  4354bf:	pop    ebx
  4354c0:	push   es
  4354c1:	mov    ebp,DWORD PTR [ebx]
  4354c3:	test   eax,0x48c07e
  4354c8:	mov    edi,0xcc000040
  4354cd:	or     BYTE PTR [eax],al
  4354cf:	add    BYTE PTR [edi+edi*4+0x8ac04ff],ch
  4354d6:	add    bh,dh
  4354d8:	sti    
  4354d9:	adc    eax,0x8bc0400
  4354de:	pop    es
  4354df:	test   BYTE PTR [ebx],cl
  4354e1:	or     DWORD PTR [eax],eax
  4354e3:	add    BYTE PTR [edi],dh
  4354e5:	inc    eax
  4354e6:	inc    eax
  4354e7:	mov    esi,ecx
  4354e9:	leave  
  4354ea:	add    DWORD PTR [ebp+0x68],0x7976baab
  4354f1:	jnp    0x4354ac
  4354f3:	mov    DWORD PTR [ecx-0x6c3f828f],esi
  4354f9:	test   BYTE PTR [ebx+0x0],ch
  4354fc:	jl     0x435506
  4354fe:	or     DWORD PTR [edi-0x74],0xffffff81
  435502:	shl    DWORD PTR [edx+eiz*1+0x7b],0x41
  435507:	adc    BYTE PTR [ebp+0x585d459],dh
  43550d:	cmc    
  43550e:	xor    ecx,DWORD PTR [ebx+0x4a84a88b]
  435514:	aad    0xae
  435516:	jmp    0x5c18:0x53279548
  43551d:	jne    0x4354c0
  43551f:	std    
  435520:	sbb    al,BYTE PTR [edi]
  435522:	retf   0xd072
  435525:	pop    es
  435526:	push   edi
  435527:	in     al,0x5e
  435529:	loopne 0x4354b4
  43552b:	push   ebx
  43552c:	or     eax,0x438a72
  435531:	add    BYTE PTR [ecx],ch
  435533:	lahf   
  435534:	dec    eax
  435535:	in     al,0xa7
  435537:	jb     0x4354de
  435539:	dec    esp
  43553a:	push   cs
  43553b:	sti    
  43553c:	mov    ebp,0x8bae9085
  435541:	push   ebx
  435542:	fstp   QWORD PTR [esi]
  435544:	ror    DWORD PTR [edx+eiz*8],0x5a
  435548:	or     eax,0xfda0d700
  43554d:	jae    0x43553e
  43554f:	aaa    
  435550:	push   ecx
  435551:	hlt    
  435552:	dec    esi
  435553:	out    0xbb,al
  435555:	test   DWORD PTR [edx],ecx
  435557:	mov    ecx,0xc9045053
  43555c:	mov    bh,0x13
  43555e:	aad    0xa0
  435560:	mov    WORD PTR [ebx-0x63],ss
  435563:	cmp    al,BYTE PTR [edi+0x18]
  435566:	dec    esi
  435567:	fidiv  WORD PTR [edi+0x35d1827]
  43556d:	sar    BYTE PTR [ebx+ebx*8+0x69288743],1
  435574:	cmp    DWORD PTR [ecx+0x15],0xffffffa1
  435578:	adc    BYTE PTR [ebx-0x234b7],al
  43557e:	xchg   edx,eax
  43557f:	fadd   QWORD PTR [ebx+0x0]
  435582:	aad    0xa0
  435584:	std    
  435585:	rcl    dl,0x9a
  435588:	std    
  435589:	call   ebp
  43558b:	xor    eax,DWORD PTR [edi+0x10]
  43558e:	aad    0x9
  435590:	out    dx,eax
  435591:	add    edx,ebp
  435593:	cli    
  435594:	bound  ecx,QWORD PTR [ecx+0x9d50000]
  43559a:	out    0x84,eax
  43559c:	scas   al,BYTE PTR es:[edi]
  43559d:	lods   eax,DWORD PTR ds:[esi]
  43559e:	out    0x10,eax
  4355a0:	push   ecx
  4355a1:	cmp    dh,cl
  4355a3:	add    edx,ebp
  4355a5:	mul    BYTE PTR [esi]
  4355a7:	(bad)  
  4355a8:	xchg   edx,eax
  4355a9:	or     edx,esp
  4355ab:	jns    0x43558e
  4355ad:	sbb    DWORD PTR [edi+0x6eb5968a],esp
  4355b3:	dec    ecx
  4355b4:	mov    ch,0x80
  4355b6:	lods   al,BYTE PTR ds:[esi]
  4355b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4355b8:	push   esi
  4355b9:	retf   0xe29b
  4355bc:	pop    ecx
  4355bd:	inc    edx
  4355be:	jmp    0x43554a
  4355c0:	sahf   
  4355c1:	aad    0x6c
  4355c3:	retf   
  4355c4:	imul   edx,DWORD PTR [edx],0xee95516e
  4355ca:	sahf   
  4355cb:	jecxz  0x43560e
  4355cd:	sti    
  4355ce:	pop    ebp
  4355cf:	push   edi
  4355d0:	mov    eax,ds:0x4da82c7f
  4355d5:	add    eax,0x4a14c0ed
  4355da:	pop    esi
  4355db:	push   esi
  4355dc:	lods   eax,DWORD PTR ds:[esi]
  4355dd:	xchg   BYTE PTR [eax+ebp*4-0x2b],cl
  4355e1:	xor    eax,0xb6168cef
  4355e6:	inc    BYTE PTR [esi-0x67]
  4355e9:	aaa    
  4355ea:	jb     0x4355a4
  4355ec:	adc    al,0x1a
  4355ee:	out    0x5,eax
  4355f0:	aad    0x9
  4355f2:	sbb    ebx,DWORD PTR [ecx]
  4355f4:	pop    eax
  4355f5:	cmp    al,0x93
  4355f7:	mov    WORD PTR [esi],fs
  4355f9:	mov    dl,0x5e
  4355fb:	dec    eax
  4355fc:	add    BYTE PTR [eax],al
  4355fe:	int    0x58
  435600:	xor    eax,0xdc547d54
  435605:	add    edx,ebp
  435607:	jle    0x43561d
  435609:	mov    esp,0xd1004252
  43560e:	popa   
  43560f:	inc    esi
  435610:	hlt    
  435611:	rcl    BYTE PTR [ebx+0x5938fdad],0x2e
  435618:	in     al,0xe9
  43561a:	dec    edi
  43561b:	push   esi
  43561c:	clc    
  43561d:	out    0x5b,al
  43561f:	mov    dh,0xb
  435621:	jmp    0x724dfafc
  435626:	(bad)  
  435627:	jmp    0x9257fae
  43562c:	shr    DWORD PTR [ecx-0x16fff60e],0xd6
  435633:	enter  0xa941,0xd6
  435637:	or     DWORD PTR [eax],eax
  435639:	jmp    0xe9445e4b
  43563e:	(bad)  
  43563f:	or     ecx,esi
  435641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435642:	(bad)  
  435643:	or     DWORD PTR [eax],edx
  435645:	jmp    0x71c75720
  43564a:	(bad)  
  43564b:	or     DWORD PTR [eax],eax
  43564d:	push   0x13
  43564f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435650:	add    dh,bl
  435652:	push   edx
  435653:	imul   ecx,DWORD PTR [ebx],0xbff6d6e9
  435659:	ins    BYTE PTR es:[edi],dx
  43565a:	in     eax,dx
  43565b:	in     eax,dx
  43565c:	jmp    ebp
  43565e:	sub    BYTE PTR [esi],dl
  435660:	adc    BYTE PTR [ecx],ch
  435662:	add    BYTE PTR [eax],al
  435664:	pop    eax
  435665:	dec    ebp
  435666:	hlt    
  435667:	jb     0x435683
  435669:	jmp    0x3dc0:0x8d6d2c86
  435670:	js     0x435600
  435672:	dec    eax
  435673:	add    eax,0x6cd45558
  435678:	nop
  435679:	push   ds
  43567a:	adc    DWORD PTR [edx+0xa],esi
  43567d:	dec    edx
  43567e:	xor    eax,0x9368121
  435683:	bound  ecx,QWORD PTR [esi+edi*4]
  435686:	xchg   BYTE PTR [eax],al
  435688:	mov    cl,0x71
  43568a:	mov    BYTE PTR [esi+eiz*2],al
  43568d:	push   0x42b7403f
  435692:	clc    
  435693:	cmp    DWORD PTR [ecx],0x71
  435696:	add    BYTE PTR [esp+eax*2-0x6c],dh
  43569a:	cmp    eax,0xfc52f7f4
  43569f:	jb     0x4356ec
  4356a1:	popa   
  4356a2:	aas    
  4356a3:	adc    BYTE PTR [ebx+ecx*1],bh
  4356a6:	add    BYTE PTR [eax],al
  4356a8:	pusha  
  4356a9:	add    BYTE PTR [ebx+0x4d94e04d],al
  4356af:	clc    
  4356b0:	ja     0x435702
  4356b2:	sbb    BYTE PTR [ecx+0x6e],dl
  4356b5:	cmp    eax,0xd00a5e8
  4356ba:	add    BYTE PTR [ebx+0x47816541],cl
  4356c0:	in     al,0x93
  4356c2:	cmp    eax,0xfc5215f4
  4356c7:	add    eax,DWORD PTR [eax]
  4356c9:	add    BYTE PTR [esp+ecx*4-0x6a131b8b],bh
  4356d0:	dec    ebp
  4356d1:	clc    
  4356d2:	mov    ebx,0xbc0d3d91
  4356d7:	or     al,0xe3
  4356d9:	push   cs
  4356da:	inc    edi
  4356db:	push   eax
  4356dc:	and    BYTE PTR [ebp-0x39011f94],al
  4356e2:	cld    
  4356e3:	mov    cl,0xf9
  4356e5:	(bad)  
  4356e6:	mov    esp,0xa407bf0c
  4356eb:	or     al,0x0
  4356ed:	add    BYTE PTR [ebx+0x4f],ah
  4356f0:	adc    BYTE PTR [eax],al
  4356f2:	jle    0x435700
  4356f4:	add    BYTE PTR [ecx+edi*2-0x75],dh
  4356f8:	not    BYTE PTR [eax]
  4356fa:	fbstp  TBYTE PTR [ebp+0xc6c9b86]
  435700:	add    BYTE PTR [eax],al
  435702:	aad    0x33
  435704:	inc    eax
  435705:	cld    
  435706:	aad    0xc7
  435708:	or     DWORD PTR [edi],0x8fdb2d0
  43570e:	and    esi,DWORD PTR [edx+edi*4-0x34d4aeb5]
  435715:	int    0x35
  435717:	hlt    
  435718:	jl     0x4356dc
  43571a:	int    0x19
  43571c:	pop    eax
  43571d:	clc    
  43571e:	(bad)  
  43571f:	dec    edx
  435720:	jle    0x43571c
  435722:	(bad)
  435725:	or     DWORD PTR [edx-0x79],esp
  435728:	adc    eax,0x889efc35
  43572d:	cmc    
  43572e:	add    BYTE PTR [eax],al
  435730:	push   ds
  435731:	out    0xb9,eax
  435733:	sub    eax,0x85b3a32e
  435738:	xchg   edx,eax
  435739:	adc    al,BYTE PTR [edi-0x79577640]
  43573f:	dec    ecx
  435740:	in     eax,0xf1
  435742:	mov    ebx,0x4115607
  435747:	xchg   DWORD PTR [ebp-0x4aae799a],ebx
  43574d:	idiv   DWORD PTR [esi]
  43574f:	xor    ah,dl
  435751:	mov    dl,0xfd
  435753:	(bad)  
  435754:	aas    
  435755:	mov    cl,0x27
  435757:	add    BYTE PTR [edi],bh
  435759:	mov    cl,0xa5
  43575b:	add    ch,cl
  43575d:	mov    al,0xfd
  43575f:	test   BYTE PTR [eax],cl
  435761:	cdq    
  435762:	mov    BYTE PTR [ebx-0x53],dl
  435765:	sub    al,BYTE PTR [ebx+0x18]
  435768:	pop    esp
  435769:	repnz repz rcr dl,0x9b
  43576e:	std    
  43576f:	call   ebp
  435771:	mov    ecx,0xb0d50c50
  435776:	cmp    dl,0xb5
  435779:	jecxz  0x435758
  43577b:	jl     0x43577d
  43577d:	or     ah,BYTE PTR [ebx+0x7e8dcc04]
  435783:	adc    ch,dl
  435785:	or     edx,esp
  435787:	jne    0x4357f4
  435789:	test   al,0x1c
  43578b:	rcr    BYTE PTR [eax-0x28],0x96
  43578f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435790:	fwait
  435791:	mov    ah,BYTE PTR [ecx+0x5a00000c]
  435797:	cmp    eax,0x8b2d016f
  43579c:	imul   esp,esp,0xc96ec7b0
  4357a2:	push   eax
  4357a3:	retf   
  4357a4:	sub    BYTE PTR [ebp+eax*8+0x2c044888],ah
  4357ab:	or     ah,bh
  4357ad:	add    BYTE PTR ds:0x2dc32693,cl
  4357b3:	adc    ch,BYTE PTR [eax]
  4357b5:	mov    ds:0xbce6ecdd,eax
  4357ba:	aad    0x9
  4357bc:	out    0xc2,al
  4357be:	pop    eax
  4357bf:	push   ebp
  4357c0:	out    dx,eax
  4357c1:	ret    0x1f0
  4357c4:	out    0xc0,al
  4357c6:	pop    edx
  4357c7:	dec    edi
  4357c8:	out    dx,eax
  4357c9:	mov    ch,BYTE PTR [edx-0x4f272a27]
  4357cf:	lahf   
  4357d0:	sub    al,BYTE PTR ds:0x3e709d3
  4357d6:	push   eax
  4357d7:	daa    
  4357d8:	jecxz  0x4357dd
  4357da:	fmul   QWORD PTR [ebp+0x9d508e9]
  4357e0:	dec    ebp
  4357e1:	add    al,0x33
  4357e3:	or     cl,BYTE PTR [ebp+0x4]
  4357e6:	mov    ebp,0xd503e154
  4357eb:	xchg   edx,eax
  4357ec:	xor    al,0xc
  4357ee:	pop    edx
  4357ef:	dec    esi
  4357f0:	fisttp WORD PTR [edx+0x566dd9db]
  4357f6:	(bad)  
  4357f7:	into   
  4357f8:	add    dh,ch
  4357fa:	add    BYTE PTR [eax],al
  4357fc:	fisttp QWORD PTR [ecx]
  4357fe:	add    cl,ch
  435800:	push   ebp
  435801:	and    cl,BYTE PTR [esp+ebp*8]
  435804:	leave  
  435805:	lea    ebx,[ebp*8+0x147d09d6]
  43580c:	lds    ecx,FWORD PTR [ebx]
  43580e:	or     DWORD PTR [ebp-0x3c],esp
  435811:	adc    eax,0x2055e900
  435816:	add    al,0xe9
  435818:	or     bh,dh
  43581a:	test   BYTE PTR [edi-0x65fe39ab],ah
  435820:	ins    DWORD PTR es:[edi],dx
  435821:	in     al,dx
  435822:	out    dx,al
  435823:	cs sar edi,1
  435826:	(bad)  
  435827:	call   0xe2da0702
  43582c:	(bad)  
  43582d:	or     DWORD PTR [ebp+0x4f],edi
  435830:	aad    0x34
  435832:	es push edx
  435834:	rcl    BYTE PTR [edx+0x9d6e995],1
  43583a:	add    BYTE PTR [edx-0x35],ch
  43583d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43583e:	add    dh,bl
  435840:	pop    edx
  435841:	mov    BYTE PTR ds:0xb210d6e9,0xeb
  435848:	xor    DWORD PTR [edx-0x4],edx
  43584b:	bound  ebx,QWORD PTR [eax]
  43584d:	aam    0xe0
  43584f:	stos   DWORD PTR es:[edi],eax
  435850:	push   ebp
  435851:	retf   
  435852:	or     BYTE PTR [eax-0x7d],dh
  435855:	mov    eax,ds:0xa05520fd
  43585a:	std    
  43585b:	jp     0x435805
  43585d:	pop    ebp
  43585f:	sbb    BYTE PTR [eax],al
  435861:	add    BYTE PTR [ebp-0x71],ch
  435864:	mov    ebp,0x7ea5706a
  435869:	leave  
  43586a:	fimul  DWORD PTR [ecx+ecx*2-0x25dac13]
  435871:	push   ebp
  435872:	push   es
  435873:	mov    ds:0x8e290024,eax
  435878:	xor    DWORD PTR [ebx+0x7c],eax
  43587b:	into   
  43587c:	jecxz  0x435880
  43587e:	cmp    ecx,DWORD PTR [ecx]
  435880:	add    eax,0x7b096c00
  435885:	out    dx,al
  435886:	outs   dx,DWORD PTR ds:[esi]
  435887:	jbe    0x4358c0
  435889:	or     edi,DWORD PTR [ecx+ecx*1-0x7d]
  43588d:	(bad)  
  43588e:	push   esp
  43588f:	xchg   ebp,eax
  435890:	out    dx,eax
  435891:	call   DWORD PTR [ebx-0x73]
  435894:	jne    0x4358a2
  435896:	push   0xffffffc8
  435898:	call   DWORD PTR [edx]
  43589a:	cmp    al,0x9
  43589c:	add    BYTE PTR [ebp+0x10],dh
  43589f:	into   
  4358a0:	jecxz  0x4358a4
  4358a2:	scas   eax,DWORD PTR es:[edi]
  4358a3:	outs   dx,DWORD PTR ds:[esi]
  4358a4:	sti    
  4358a5:	call   0x436cdd
  4358aa:	std    
  4358ab:	je     0x4358a7
  4358ad:	(bad)  
  4358ae:	cmp    edi,ecx
  4358b0:	(bad)  
  4358b1:	jmp    FWORD PTR [esp+ecx*4]
  4358b4:	out    0x3,al
  4358b6:	test   ebp,edi
  4358b8:	add    al,BYTE PTR [eax]
  4358ba:	cld    
  4358bb:	xchg   ebx,eax
  4358bc:	cmp    eax,0x184dbb08
  4358c1:	xchg   ebx,eax
  4358c2:	dec    eax
  4358c3:	dec    ecx
  4358c4:	add    bh,al
  4358c6:	add    BYTE PTR [eax],al
  4358c8:	jmp    0x4358cb
  4358ca:	add    BYTE PTR [eax],al
  4358cc:	cld    
  4358cd:	int    0xe3
  4358cf:	add    bh,BYTE PTR [edi+0x6f]
  4358d2:	sti    
  4358d3:	call   0x436ca1
  4358d8:	addr16 iret 
  4358da:	jnp    0x4358bd
  4358dc:	mov    ebx,0xd7d3eab3
  4358e1:	mov    esi,?
  4358e3:	and    BYTE PTR [edi],bh
  4358e5:	scas   eax,DWORD PTR es:[edi]
  4358e6:	jl     0x435965
  4358e8:	mov    al,0x8
  4358ea:	pop    es
  4358eb:	test   bh,dh
  4358ed:	adc    al,0x0
  4358ef:	add    ch,dl
  4358f1:	stos   DWORD PTR es:[edi],eax
  4358f2:	outs   dx,DWORD PTR ds:[esi]
  4358f3:	(bad)  
  4358f4:	mov    ds:0x8b85b805,eax
  4358f9:	jg     0x435898
  4358fb:	ds push esi
  4358fd:	ins    BYTE PTR es:[edi],dx
  4358fe:	add    eax,0x25b2087
  435903:	fcom   DWORD PTR [esi+0x74]
  435906:	(bad)  [ebp-0x65]
  435909:	pop    ss
  43590a:	retf   0x9685
  43590d:	jnp    0x4358e3
  43590f:	and    ebp,DWORD PTR [edx+0x7b]
  435912:	std    
  435913:	call   DWORD PTR [ecx+ecx*4-0x646bcaf3]
  43591a:	adc    BYTE PTR ds:0x2db6234f,0x2e
  435921:	pop    edi
  435922:	scas   eax,DWORD PTR es:[edi]
  435923:	jge    0x4358e5
  435925:	(bad)  
  435926:	inc    DWORD PTR [esi+0x1be7292]
  43592c:	add    BYTE PTR [eax],al
  43592e:	jecxz  0x4358e2
  435930:	std    
  435931:	(bad)  
  435932:	fidiv  DWORD PTR [esi]
  435934:	scas   eax,DWORD PTR es:[edi]
  435935:	push   es
  435936:	aad    0xb2
  435938:	mov    esi,0xfdb2ca01
  43593d:	call   FWORD PTR [esi+0x6b]
  435940:	cmp    eax,0x7fe69087
  435945:	rcl    dl,0x2e
  435948:	push   ebp
  435949:	add    dl,ch
  43594b:	mov    dl,0x8a
  43594d:	dec    ebx
  43594e:	icebp  
  43594f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435950:	les    esi,FWORD PTR [edx-0x30]
  435953:	daa    
  435954:	les    eax,FWORD PTR [edi+0x4b89fe90]
  43595a:	in     eax,0xc6
  43595c:	les    esi,FWORD PTR [edx-0x28]
  43595f:	pop    ss
  435960:	les    eax,FWORD PTR [edi-0x3f865af0]
  435966:	shr    BYTE PTR [ebx+eax*8],cl
  435969:	push   es
  43596a:	aad    0x9
  43596c:	out    0x8c,eax
  43596e:	push   ds
  43596f:	sahf   
  435970:	outs   dx,BYTE PTR ds:[esi]
  435971:	dec    edi
  435972:	lods   eax,DWORD PTR ds:[esi]
  435973:	(bad)  
  435974:	sub    al,0xac
  435976:	adc    bh,BYTE PTR [eax]
  435978:	aaa    
  435979:	lods   al,BYTE PTR ds:[esi]
  43597a:	in     eax,dx
  43597b:	mov    edx,0x4d58b9c2
  435980:	mov    bl,0x3
  435982:	push   ss
  435983:	mov    ds:0xf1813f00,al
  435988:	and    esi,DWORD PTR [edx+edi*2+0x68d8f4e]
  43598f:	mov    ds:0xc066,al
  435994:	f2xm1  
  435996:	sub    DWORD PTR [edx+edi*2-0x24],eax
  43599a:	fadd   QWORD PTR [ebx]
  43599c:	aad    0x86
  43599e:	or     DWORD PTR [edx],0x206bebc0
  4359a4:	icebp  
  4359a5:	or     DWORD PTR [esi+0x37],esp
  4359a8:	inc    ecx
  4359a9:	or     bl,dl
  4359ab:	jg     0x435967
  4359ad:	movntq QWORD PTR [ebx],mm0
  4359b0:	fcomp  QWORD PTR [ebx-0x1b]
  4359b3:	mov    eax,0xca5ea59e
  4359b8:	adc    BYTE PTR [edx+0x121784a5],ch
  4359be:	jo     0x435a0f
  4359c0:	or     eax,0xf851f07
  4359c5:	adc    al,0xb5
  4359c7:	fstp   DWORD PTR [eax-0x31]
  4359ca:	mov    ds:0xff0ec8dc,ax
  4359d0:	jae    0x43599a
  4359d2:	call   0x5e4d2ed9
  4359d7:	lds    ebx,FWORD PTR [edx+0x53]
  4359da:	xchg   edx,eax
  4359dc:	lock or al,0x6e
  4359df:	int    0x50
  4359e1:	stos   BYTE PTR es:[edi],al
  4359e2:	fiadd  DWORD PTR [edx+ebp*4+0x59a90012]
  4359e9:	bound  eax,QWORD PTR [eax+ebp*1]
  4359ec:	push   0xdcd77d0d
  4359f1:	and    bh,BYTE PTR [ecx+0x49]
  4359f4:	iret   
  4359f5:	mov    ds:0xe9f9,al
  4359fa:	dec    edi
  4359fb:	dec    eax
  4359fc:	fs pusha 
  4359fe:	or     eax,0x8a6e0946
  435a03:	fwait
  435a04:	stc    
  435a05:	mov    esi,0xe61aa151
  435a0a:	push   ebp
  435a0b:	hlt    
  435a0c:	imul   BYTE PTR [esi+0x1141c83d]
  435a12:	(bad)  [ecx]
  435a14:	add    cl,ch
  435a16:	xchg   ebp,eax
  435a17:	or     BYTE PTR [edi],cl
  435a19:	jmp    0x1ec863f4
  435a1e:	test   eax,0x82548dc
  435a23:	push   esp
  435a24:	in     eax,0xea
  435a26:	push   ebx
  435a27:	dec    edx
  435a28:	add    BYTE PTR [edx+0x7c],ch
  435a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a2c:	outs   dx,BYTE PTR ds:[esi]
  435a2d:	retf   
  435a2e:	push   ecx
  435a2f:	push   ds
  435a30:	cld    
  435a31:	jmp    0xf13fe813
  435a36:	(bad)  
  435a37:	or     DWORD PTR [ecx],ecx
  435a39:	lahf   
  435a3a:	fsub   DWORD PTR [eax-0x30b6b2b5]
  435a40:	int    0x49
  435a42:	cwde   
  435a43:	and    al,0xc2
  435a45:	icebp  
  435a46:	pop    edi
  435a47:	ss clc 
  435a49:	jmp    0xbfc0:0xeafa241e
  435a50:	test   DWORD PTR [esi-0x1a4eef42],ebp
  435a56:	stos   DWORD PTR es:[edi],eax
  435a57:	cdq    
  435a58:	and    BYTE PTR [ecx+0x6ac58cd6],ch
  435a5e:	add    BYTE PTR [eax],al
  435a60:	aaa    
  435a61:	or     BYTE PTR [edx+0x0],ah
  435a64:	inc    ebp
  435a65:	dec    ecx
  435a66:	aas    
  435a67:	jo     0x435a34
  435a69:	loope  0x435ad2
  435a6b:	mov    edi,DWORD PTR [ebx-0xb]
  435a6e:	mov    eax,0xe686afeb
  435a73:	add    esi,edi
  435a75:	dec    eax
  435a76:	pop    esp
  435a77:	jb     0x435ac8
  435a79:	push   ds
  435a7a:	or     eax,DWORD PTR [eax]
  435a7c:	lods   al,BYTE PTR ds:[esi]
  435a7d:	or     eax,0xdd144731
  435a82:	sbb    ch,bl
  435a84:	adc    DWORD PTR [edx+0xd7c24a4],0x0
  435a8b:	add    bh,dh
  435a8d:	push   eax
  435a8e:	push   0x4d12030f
  435a93:	lock pushf 
  435a95:	dec    ebp
  435a96:	add    BYTE PTR [ebx],dh
  435a98:	add    BYTE PTR cs:[ecx-0x92a44ac],al
  435a9f:	inc    edi
  435aa0:	aam    0x9e
  435aa2:	inc    eax
  435aa3:	push   0x87857f4e
  435aa8:	mov    WORD PTR [edx],cs
  435aaa:	add    BYTE PTR [eax],al
  435aac:	mov    ecx,0x2d896c48
  435ab1:	mov    ?,WORD PTR [edi]
  435ab3:	dec    esp
  435ab4:	test   eax,0x3c02f090
  435ab9:	or     eax,0x51738d4a
  435abe:	push   eax
  435abf:	push   ecx
  435ac0:	repz add eax,0xffff
  435ac6:	cld    
  435ac7:	or     al,0x62
  435ac9:	adc    edi,DWORD PTR [ecx-0x20]
  435acc:	outs   dx,DWORD PTR ds:[esi]
  435acd:	push   eax
  435ace:	push   ss
  435acf:	or     eax,0xcfda9e8
  435ad4:	add    BYTE PTR [ebx-0x3b849acf],cl
  435ada:	aam    0x8e
  435adc:	cmp    eax,0xc42dd5d8
  435ae1:	or     DWORD PTR [eax+0x6],edx
  435ae4:	or     al,0x0
  435ae6:	aad    0x19
  435ae8:	cmp    DWORD PTR [eax-0x6e],ebp
  435aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435aec:	lldt   bp
  435aef:	mov    dl,0x86
  435af1:	inc    ecx
  435af2:	xor    DWORD PTR [edx+edi*1+0x2befec60],esi
  435af9:	or     DWORD PTR [esi+0x13],edx
  435afc:	(bad)  
  435afd:	call   ebp
  435aff:	sub    eax,DWORD PTR [edx+0x54]
  435b02:	pop    ebp
  435b03:	mov    cl,0xfd
  435b05:	call   ebp
  435b07:	sbb    DWORD PTR [ebp+0x4bef1a85],0x1d
  435b0e:	xchg   esi,eax
  435b0f:	sub    edi,ecx
  435b11:	jle    0x435b61
  435b13:	push   0xffffffc4
  435b15:	out    0xdd,eax
  435b17:	xchg   edi,eax
  435b18:	imul   eax,edi,0x5c
  435b1b:	in     eax,0xaf
  435b1d:	xor    eax,0x7cf10093
  435b22:	fmul   DWORD PTR [esi-0x68a6f703]
  435b28:	or     al,0x0
  435b2a:	add    BYTE PTR [eax],al
  435b2c:	aad    0xaf
  435b2e:	imul   edi,esi,0x43
  435b31:	in     eax,0xb7
  435b33:	test   DWORD PTR [ebx],ecx
  435b35:	sbb    DWORD PTR [ebp+0x3f5ea285],0x7d
  435b3c:	adc    ebx,DWORD PTR [edx-0x4ea22802]
  435b42:	std    
  435b43:	call   ebp
  435b45:	jecxz  0x435ae3
  435b47:	test   DWORD PTR [edx+0xd538c56],esp
  435b4d:	pop    edx
  435b4e:	fidivr WORD PTR [esi+ecx*2+0xd8584ae]
  435b55:	icebp  
  435b56:	stos   DWORD PTR es:[edi],eax
  435b57:	or     dl,ah
  435b59:	or     DWORD PTR [ecx-0x34],ebx
  435b5c:	push   edx
  435b5d:	inc    esi
  435b5e:	adc    edi,edx
  435b60:	or     al,0x18
  435b62:	sub    BYTE PTR [edx+0x1300ca0d],cl
  435b68:	push   eax
  435b69:	mov    eax,ds:0x932432d7
  435b6e:	das    
  435b6f:	les    edi,FWORD PTR [edx-0x6d921dee]
  435b75:	jecxz  0x435b6e
  435b77:	xor    ebp,esp
  435b79:	mov    dl,0xea
  435b7b:	xchg   BYTE PTR [ecx-0x1a],dh
  435b7e:	out    0x3,al
  435b80:	aad    0x9
  435b82:	data16 aaa 
  435b84:	cdq    
  435b85:	or     bl,dl
  435b87:	jg     0x435bcb
  435b89:	adc    ah,bh
  435b8b:	add    ebx,esp
  435b8d:	push   edi
  435b8e:	in     eax,0xb4
  435b90:	add    BYTE PTR [eax],al
  435b92:	push   cs
  435b93:	sahf   
  435b94:	pop    esi
  435b95:	(bad)  
  435b96:	mov    BYTE PTR [edx+0x12978125],ch
  435b9c:	jo     0x435bed
  435b9e:	ins    DWORD PTR es:[edi],dx
  435b9f:	or     edi,DWORD PTR [edi-0x1d69e977]
  435ba5:	ins    DWORD PTR es:[edi],dx
  435ba6:	mov    ebx,esp
  435ba8:	xchg   edi,eax
  435ba9:	xor    ch,BYTE PTR [edx]
  435bab:	(bad)  
  435bad:	enter  0x4750,0xf
  435bb1:	sar    DWORD PTR [eax],1
  435bb3:	repz ja 0x435bd4
  435bb6:	push   eax
  435bb7:	dec    ebp
  435bb8:	jno    0x435bd8
  435bba:	pop    edx
  435bbb:	dec    esi
  435bbc:	stos   BYTE PTR es:[edi],al
  435bbd:	xor    ebp,DWORD PTR [edi+eax*2]
  435bc0:	iret   
  435bc1:	stos   BYTE PTR es:[edi],al
  435bc2:	xchg   ebx,eax
  435bc3:	or     bh,ah
  435bc5:	add    esi,DWORD PTR [edi+0x77ad9c92]
  435bcb:	mov    al,BYTE PTR [eax+0x14]
  435bce:	xchg   BYTE PTR [ecx],dh
  435bd0:	jmp    0xd4a8:0x8d116d
  435bd7:	xchg   BYTE PTR [ebx+0xd],cl
  435bda:	in     al,dx
  435bdb:	scas   al,BYTE PTR es:[edi]
  435bdc:	ins    DWORD PTR es:[edi],dx
  435bdd:	xlat   BYTE PTR ds:[ebx]
  435bde:	push   ebx
  435bdf:	data16 and al,0xe9
  435be2:	(bad)  
  435be3:	or     DWORD PTR [eax],eax
  435be5:	push   0xffffffa2
  435be7:	popf   
  435be8:	add    dh,bl
  435bea:	push   edx
  435beb:	dec    edi
  435bec:	or     cl,ch
  435bee:	(bad)  
  435bef:	adc    BYTE PTR [edx-0x3ad7615],dh
  435bf5:	bound  eax,QWORD PTR [eax]
  435bf7:	add    BYTE PTR [ebx+0x1a62e0cc],dl
  435bfd:	mov    esi,0x11686a3e
  435c02:	std    
  435c03:	rcr    BYTE PTR [ebx-0x22],0xfd
  435c07:	pop    edi
  435c08:	or     esp,DWORD PTR [edx-0x493b26cb]
  435c0e:	test   DWORD PTR [esi],ebp
  435c10:	mov    ecx,0x4612e5cc
  435c15:	mov    al,al
  435c17:	out    0xfa,al
  435c19:	pop    eax
  435c1a:	add    ecx,ebp
  435c1c:	(bad)  
  435c1d:	adc    BYTE PTR [ecx-0x7acc57cb],dh
  435c23:	stos   BYTE PTR es:[edi],al
  435c24:	push   ebp
  435c25:	test   eax,0x9c9669fd
  435c2a:	rol    BYTE PTR [edx-0x72b4792c],0x5f
  435c31:	dec    edx
  435c32:	hlt    
  435c33:	push   0x78
  435c35:	lahf   
  435c36:	call   0x4d327d
  435c3b:	pop    es
  435c3c:	push   esp
  435c3d:	xchg   esi,eax
  435c3e:	psadbw mm7,QWORD PTR [eax+0xaac87cd]
  435c45:	sbb    cl,BYTE PTR [edx+0x64]
  435c48:	xchg   edi,eax
  435c49:	pushf  
  435c4a:	ss pop ecx
  435c4c:	vpmulhuw xmm0,xmm4,XMMWORD PTR [eax]
  435c50:	sti    
  435c51:	xchg   BYTE PTR [esp+0x9ec],ah
  435c58:	outs   dx,DWORD PTR ds:[esi]
  435c59:	xlat   BYTE PTR ds:[ebx]
  435c5a:	sti    
  435c5b:	add    BYTE PTR [eax],al
  435c5d:	add    BYTE PTR [ebx],dl
  435c5f:	push   ds
  435c60:	fld    DWORD PTR [edi]
  435c62:	cld    
  435c63:	or     DWORD PTR [edi],eax
  435c65:	mov    dh,0xee
  435c67:	push   esp
  435c68:	inc    ebp
  435c69:	cld    
  435c6a:	ja     0x435c30
  435c6c:	retf   
  435c6d:	loopne 0x435ca6
  435c6f:	inc    esp
  435c70:	fadd   QWORD PTR [edx+0x3f]
  435c73:	pop    edi
  435c74:	or     BYTE PTR [ebx],al
  435c76:	hlt    
  435c77:	cmp    DWORD PTR [ecx],0x3
  435c7a:	xor    eax,0xac3bf84c
  435c7f:	fcmovbe st,st(0)
  435c81:	rol    DWORD PTR [edi-0x737c44e3],cl
  435c87:	adc    DWORD PTR [ebx-0x40],edi
  435c8a:	scas   eax,DWORD PTR es:[edi]
  435c8b:	push   ds
  435c8c:	cmp    eax,0xfb7d3df4
  435c91:	mov    bh,0x91
  435c93:	pop    ecx
  435c94:	idiv   edi
  435c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c97:	inc    ebp
  435c98:	test   DWORD PTR [ecx+0x6b],eax
  435c9b:	lods   al,BYTE PTR ds:[esi]
  435c9c:	jmp    0x75c83814
  435ca1:	cld    
  435ca2:	jl     0x435cac
  435ca4:	test   BYTE PTR [ebx+edi*2-0x5f0fff7],bl
  435cab:	add    esi,edi
  435cad:	dec    ebp
  435cae:	pusha  
  435caf:	sbb    eax,0x1d5cd3c6
  435cb4:	inc    ebp
  435cb5:	fsub   st(6),st
  435cb7:	test   BYTE PTR [esi-0x7a2ed0f8],bh
  435cbd:	inc    ecx
  435cbe:	cmp    ebx,DWORD PTR [esi]
  435cc0:	dec    ebp
  435cc1:	clc    
  435cc2:	add    BYTE PTR [eax],al
  435cc4:	not    DWORD PTR [ebp+0x6a]
  435cc7:	(bad)  
  435cc9:	jl     0x435c4e
  435ccb:	ret    
  435ccc:	aad    0x2f
  435cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ccf:	jns    0x435d27
  435cd1:	repz clc 
  435cd3:	xchg   BYTE PTR [eax-0x251a3d22],dl
  435cd9:	mov    ch,BYTE PTR [ebx-0x272c0507]
  435cdf:	mov    esi,0x4378e2d6
  435ce4:	loope  0x435cd1
  435ce6:	inc    esi
  435ce7:	in     al,0xd5
  435ce9:	mov    dl,0xfd
  435ceb:	dec    DWORD PTR [esi+0x64]
  435cee:	adc    eax,0x45279afd
  435cf3:	fs (bad) 
  435cf5:	imul   ebx,DWORD PTR ds:0x86ab8d35,0xffffffca
  435cfc:	xlat   BYTE PTR ds:[ebx]
  435cfd:	mov    dl,0xfd
  435cff:	jl     0x435d31
  435d01:	xchg   edi,eax
  435d02:	std    
  435d03:	jae    0x435cce
  435d05:	pop    ss
  435d06:	dec    eax
  435d07:	in     al,0xae
  435d09:	scas   eax,DWORD PTR es:[edi]
  435d0a:	add    BYTE PTR [edi-0x2b],0x27
  435d0e:	ds push 0x62b7fd92
  435d14:	pop    esp
  435d15:	out    dx,al
  435d16:	cmp    al,0x70
  435d18:	and    bl,0x1b
  435d1b:	jge    0x435d15
  435d1d:	pop    esi
  435d1e:	std    
  435d1f:	jb     0x435ca2
  435d21:	daa    
  435d22:	inc    esi
  435d23:	fs (bad) 
  435d25:	jmp    0x435d4a
  435d27:	aaa    
  435d28:	add    BYTE PTR [eax],al
  435d2a:	sbb    bh,bl
  435d2c:	cld    
  435d2d:	jge    0x435da7
  435d2f:	jne    0x435cdf
  435d31:	stc    
  435d32:	push   esi
  435d33:	retf   
  435d34:	adc    BYTE PTR [ecx],cl
  435d36:	push   ecx
  435d37:	loope  0x435d3f
  435d39:	add    ch,dl
  435d3b:	add    al,0x81
  435d3d:	mov    ecx,0xfffdb0c5
  435d42:	aad    0xbb
  435d44:	or     DWORD PTR [ebp+0x3e709d3],0x917844e
  435d4e:	aad    0x9
  435d50:	fs inc edx
  435d52:	adc    DWORD PTR [edx+0x4d947ce8],0x7059a74
  435d5c:	out    0x3,eax
  435d5e:	mov    edx,DWORD PTR [eax+0x445e239a]
  435d64:	xchg   ebx,eax
  435d65:	push   ebx
  435d66:	call   0xe79b:0xe2fce7c4
  435d6d:	push   ebp
  435d6e:	dec    esi
  435d6f:	inc    esp
  435d70:	xchg   edi,eax
  435d71:	push   ebx
  435d72:	cmp    ecx,DWORD PTR [ecx]
  435d74:	call   FWORD PTR [ecx]
  435d76:	cld    
  435d77:	or     edi,esp
  435d79:	xchg   BYTE PTR [ecx-0x62b78ffe],bl
  435d7f:	test   DWORD PTR [edi],esp
  435d81:	add    dl,BYTE PTR [esi+0x1d]
  435d84:	hlt    
  435d85:	mov    cl,0xac
  435d87:	(bad)  
  435d88:	cmp    ah,BYTE PTR [eax]
  435d8a:	dec    esi
  435d8b:	dec    ebx
  435d8c:	dec    ebx
  435d8d:	jnp    0x435d8f
  435d8f:	add    BYTE PTR [edx+edi*1],al
  435d92:	fs cdq 
  435d94:	test   DWORD PTR [eax],ecx
  435d96:	out    0x3,eax
  435d98:	sbb    ecx,DWORD PTR [ebp+0x39254c2a]
  435d9e:	outs   dx,BYTE PTR ds:[esi]
  435d9f:	inc    ecx
  435da0:	cmc    
  435da1:	ret    0x9e7
  435da4:	aad    0x9
  435da6:	out    0x7c,eax
  435da8:	adc    al,0x26
  435daa:	aaa    
  435dab:	jg     0x435db6
  435dad:	dec    ebx
  435dae:	pop    ss
  435daf:	push   esi
  435db0:	repz pop es
  435db2:	jg     0x435d81
  435db4:	dec    DWORD PTR [ecx]
  435db6:	out    0x84,eax
  435db8:	adc    DWORD PTR [edx],eax
  435dba:	jo     0x435e03
  435dbc:	sbb    eax,0x5601a785
  435dc1:	mov    esi,0xa1647d00
  435dc6:	jge    0x435db4
  435dc8:	sub    cl,BYTE PTR [ecx]
  435dca:	test   DWORD PTR [esi+ebp*2-0x2905fe37],edi
  435dd1:	or     DWORD PTR [eax],eax
  435dd3:	out    0x5a,al
  435dd5:	pop    ss
  435dd6:	add    ch,cl
  435dd8:	(bad)  
  435dd9:	enter  0xdd01,0xd6
  435ddd:	or     DWORD PTR [eax],eax
  435ddf:	push   0xffffffaa
  435de1:	popf   
  435de2:	add    bh,BYTE PTR [ebx+0x397b1ab4]
  435de8:	rcr    DWORD PTR [edx+0x26a8e9f9],cl
  435dee:	test   DWORD PTR [esi+ebx*8+0x14b85],esp
  435df5:	add    BYTE PTR [eax+0x37],dl
  435df8:	lock pusha 
  435dfa:	or     DWORD PTR [esi],ecx
  435dfc:	test   DWORD PTR [esi+ebp*2-0x58df77e],esi
  435e03:	test   eax,0x84c69987
  435e08:	push   ebx
  435e09:	in     eax,dx
  435e0a:	pop    es
  435e0b:	adc    DWORD PTR [eax-0x13],0x6
  435e0f:	sbb    DWORD PTR [ecx+0x21],0x1e
  435e13:	sbb    DWORD PTR [ecx+eax*8],edi
  435e16:	shr    eax,1
  435e18:	(bad)  
  435e19:	call   0x724ba527
  435e1e:	es push cs
  435e20:	test   DWORD PTR [ecx],esi
  435e22:	loope  0x435da8
  435e24:	pop    ecx
  435e25:	icebp  
  435e26:	icebp  
  435e27:	sbb    BYTE PTR [eax+eiz*2],bh
  435e2a:	add    esi,DWORD PTR [edx+0x49e1f985]
  435e30:	add    al,0x6a
  435e32:	xchg   edx,eax
  435e33:	adc    DWORD PTR [ebp-0x2a],edi
  435e36:	push   ecx
  435e37:	or     DWORD PTR [ebx-0x67],0xffffffcf
  435e3b:	ss clc 
  435e3d:	add    ch,al
  435e3f:	inc    ebx
  435e40:	cld    
  435e41:	cmpxchg DWORD PTR [edx],edi
  435e44:	std    
  435e45:	(bad)  
  435e46:	cmp    al,0xd1
  435e48:	jg     0x435e0e
  435e4a:	pop    es
  435e4b:	push   es
  435e4c:	add    bh,bh
  435e4e:	mov    ebx,0x99e9f759
  435e53:	add    eax,DWORD PTR [eax]
  435e55:	add    BYTE PTR [edi+0x49],dh
  435e58:	push   esp
  435e59:	mov    eax,0x5fd0000
  435e5e:	add    BYTE PTR [eax],al
  435e60:	fbld   TBYTE PTR [esi-0x41]
  435e63:	xchg   DWORD PTR [eax-0x3fffff3],esi
  435e69:	add    eax,0xa5340000
  435e6e:	mov    esp,0x3f1da48b
  435e73:	dec    esp
  435e74:	add    cl,BYTE PTR [bx+si-0xb75]
  435e79:	retf   
  435e7a:	loope  0x435e84
  435e7c:	stos   DWORD PTR es:[edi],eax
  435e7d:	adc    eax,ecx
  435e7f:	mov    DWORD PTR [ecx+0x61],esi
  435e82:	xor    ecx,esi
  435e84:	inc    edx
  435e85:	dec    esp
  435e86:	cmp    edi,0x3f
  435e89:	call   0x91ce5f89
  435e8e:	mov    ecx,0x70dac05
  435e93:	mov    dh,0xae
  435e95:	push   0x57f7fc45
  435e9a:	retf   
  435e9b:	loopne 0x435e94
  435e9d:	fcom   DWORD PTR [ebx+0x42]
  435ea0:	out    dx,eax
  435ea1:	iret   
  435ea2:	or     BYTE PTR [ebx],al
  435ea4:	xor    al,0x26
  435ea6:	stc    
  435ea7:	(bad)  
  435ea8:	jl     0x435eb7
  435eaa:	retf   
  435eab:	loopne 0x435ea4
  435ead:	fmul   DWORD PTR [ebx-0x77]
  435eb0:	mov    eax,ds:0x2f234865
  435eb5:	adc    eax,0x2bd58104
  435eba:	mov    esp,0xfaab3cbf
  435ebf:	mov    cl,0x0
  435ec1:	add    BYTE PTR [edx+ebx*1],cl
  435ec4:	inc    edi
  435ec5:	hlt    
  435ec6:	(bad)  
  435ec7:	push   0x6359bf31
  435ecc:	stc    
  435ecd:	adc    DWORD PTR ds:0x6dfffda3,0x33
  435ed4:	stc    
  435ed5:	sbb    BYTE PTR [ebp-0x5d],0xfd
  435ed9:	call   FWORD PTR [esi-0x15]
  435edc:	ret    0xdde7
  435edf:	sub    DWORD PTR [edi],edi
  435ee1:	aam    0xd2
  435ee3:	sbb    BYTE PTR [ebx-0x6b17779],bh
  435ee9:	mov    cl,0x1d
  435eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435eec:	inc    eax
  435eed:	in     al,0x5c
  435eef:	outs   dx,BYTE PTR ds:[esi]
  435ef0:	leave  
  435ef1:	mov    eax,0xfffda2d4
  435ef6:	push   es
  435ef7:	add    esi,DWORD PTR [ebp+0x4b]
  435efa:	mov    ecx,0xa6bcde6a
  435eff:	or     dh,BYTE PTR [ebp+0x4b]
  435f02:	leave  
  435f03:	loope  0x435e9f
  435f05:	adc    dh,dl
  435f07:	loope  0x435f7d
  435f09:	enter  0x675e,0x39
  435f0d:	test   ecx,edx
  435f0f:	sub    bh,cl
  435f11:	mov    cl,0x10
  435f13:	push   edi
  435f14:	jl     0x435f59
  435f16:	mov    eax,ds:0xe2089561
  435f1b:	js     0x435eda
  435f1d:	std    
  435f1e:	xchg   ebp,eax
  435f1f:	sti    
  435f20:	shl    DWORD PTR [edx+0x23],0xbc
  435f24:	add    ecx,DWORD PTR [ebx-0x5da20000]
  435f2a:	std    
  435f2b:	call   ebp
  435f2d:	and    esi,DWORD PTR [eax]
  435f2f:	cld    
  435f30:	aad    0xb7
  435f32:	sbb    DWORD PTR [edi],0x3e709d8
  435f38:	int3   
  435f39:	pop    edi
  435f3a:	in     eax,0x7a
  435f3c:	pop    ds
  435f3d:	mov    esp,0xb59e7a87
  435f42:	mov    al,BYTE PTR [eax+0x41]
  435f45:	dec    ebx
  435f46:	out    0xcb,al
  435f48:	int3   
  435f49:	pop    edi
  435f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435f4b:	jl     0x435ee3
  435f4d:	lods   eax,DWORD PTR ds:[esi]
  435f4e:	loop   0x435fc5
  435f50:	adc    cl,BYTE PTR [edi+ebx*4]
  435f53:	imul   esp,DWORD PTR [edx],0xffffff98
  435f56:	out    0x3,eax
  435f58:	or     BYTE PTR [ecx-0x7406bf92],ch
  435f5e:	sub    ebx,edi
  435f60:	push   ebx
  435f61:	ds dec edi
  435f63:	cmp    esp,eax
  435f65:	int3   
  435f66:	push   ss
  435f67:	fwait
  435f68:	int3   
  435f69:	pusha  
  435f6a:	lods   al,BYTE PTR ds:[esi]
  435f6b:	int    0xf0
  435f6d:	enter  0x3e5e,0x99
  435f71:	test   bl,ah
  435f73:	test   BYTE PTR [edx+0x4e],bl
  435f76:	sbb    eax,esp
  435f78:	in     eax,dx
  435f79:	add    dl,ch
  435f7b:	jne    0x435f12
  435f7d:	or     ebp,DWORD PTR [edi+eiz*4+0x5992d000]
  435f84:	int3   
  435f85:	pop    edi
  435f86:	mov    ah,0xd0
  435f88:	push   eax
  435f89:	dec    ebp
  435f8a:	repz rol DWORD PTR [eax],1
  435f8d:	add    BYTE PTR [eax+0x5c7bf7e3],bh
  435f93:	into   
  435f94:	into   
  435f95:	add    edx,ebp
  435f97:	sub    BYTE PTR [edi-0x15fd4d3d],0x75
  435f9e:	call   0xe709:0xe0c86209
  435fa5:	sar    BYTE PTR [eax-0x1d],1
  435fa8:	mov    bh,0x7b
  435faa:	push   cs
  435fab:	scas   al,BYTE PTR es:[edi]
  435fac:	outs   dx,BYTE PTR ds:[esi]
  435fad:	mov    esp,0xd900a132
  435fb2:	out    dx,eax
  435fb3:	inc    eax
  435fb4:	inc    eax
  435fb5:	gs cdq 
  435fb7:	sbb    eax,DWORD PTR ds:0xfffed0ae
  435fbd:	call   0xed7a0e98
  435fc2:	(bad)  
  435fc3:	or     DWORD PTR [eax-0x3f04f537],ebp
  435fc9:	outs   dx,BYTE PTR ds:[esi]
  435fca:	or     eax,0x81e8fffd
  435fcf:	xchg   ecx,eax
  435fd0:	stc    
  435fd1:	jbe    0x435fe3
  435fd3:	or     DWORD PTR ds:0xe709d6e9,eax
  435fd9:	or     ch,cl
  435fdb:	or     DWORD PTR [eax],eax
  435fdd:	xchg   ecx,eax
  435fde:	cdq    
  435fdf:	sbb    eax,0x1926209
  435fe4:	shr    DWORD PTR [ecx-0x568b7b32],0xd6
  435feb:	scas   al,BYTE PTR es:[edi]
  435fec:	or     ch,ah
  435fee:	(bad)  
  435fef:	or     DWORD PTR [ecx],ecx
  435ff1:	jg     0x435ff3
  435ff3:	add    BYTE PTR [ecx],ch
  435ff5:	adc    eax,0x405fdedf
  435ffa:	dec    eax
  435ffb:	cs sar dl,1
  435ffe:	(bad)  
  435fff:	call   0xa184ecda
  436004:	push   ebx
  436005:	leave  
  436006:	je     0x435fae
  436008:	lods   eax,DWORD PTR ds:[esi]
  436009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43600a:	ins    DWORD PTR es:[edi],dx
  43600b:	sar    BYTE PTR [ebx],1
  43600d:	outs   dx,BYTE PTR ds:[esi]
  43600e:	and    al,0xe9
  436010:	(bad)  
  436011:	or     DWORD PTR [eax],eax
  436013:	push   0xfffffffa
  436015:	xchg   ebp,eax
  436016:	add    dh,bl
  436018:	pop    edx
  436019:	(bad)  
  43601a:	add    ebp,ecx
  43601c:	(bad)  
  43601d:	add    BYTE PTR [edx-0x3bdbe15],dh
  436023:	bound  ecx,QWORD PTR [eax-0x3c]
  436026:	loopne 0x436053
  436028:	push   esp
  436029:	retf   
  43602a:	or     BYTE PTR [eax],al
  43602c:	add    eax,0x3403f840
  436031:	mov    eax,ds:0xc7ae4870
  436036:	or     DWORD PTR [edi-0x4c],0x25
  43603a:	stc    
  43603b:	jmp    FWORD PTR [edx+ecx*1-0x35]
  43603f:	loopne 0x436068
  436041:	pop    ebx
  436042:	dec    eax
  436043:	and    edi,DWORD PTR [edi+0xb]
  436046:	aas    
  436047:	inc    eax
  436048:	jg     0x4360bb
  43604a:	stc    
  43604b:	mov    gs,WORD PTR [eax+0x1]
  43604e:	add    BYTE PTR [eax],al
  436050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436051:	aad    0x3f
  436053:	mov    DWORD PTR [ebx+0x1352],esi
  436059:	add    BYTE PTR [ecx*8+0xa2c15ff],ch
  436060:	add    BYTE PTR [ebx+0x1b84243],cl
  436066:	cld    
  436067:	or     DWORD PTR [eax],eax
  436069:	ror    DWORD PTR [edx+edx*8+0x5287c31a],cl
  436070:	add    DWORD PTR [edi+0x4c],0x11
  436074:	add    al,0x88
  436076:	ja     0x4360ca
  436078:	mov    ecx,0xaf94f4e9
  43607d:	leave  
  43607e:	gs dec edi
  436080:	hlt    
  436081:	cmp    eax,DWORD PTR [edx]
  436083:	fistp  QWORD PTR [edi]
  436085:	nop
  436086:	aas    
  436087:	in     al,0xfb
  436089:	add    BYTE PTR [ebx-0x53fc3673],ah
  43608f:	or     DWORD PTR [edi],eax
  436091:	mov    dh,0xbe
  436093:	inc    bp
  436095:	cld    
  436096:	aaa    
  436097:	push   edi
  436098:	retf   
  436099:	loopne 0x4360d2
  43609b:	(bad)  
  43609c:	push   edi
  43609d:	inc    edx
  43609e:	das    
  43609f:	enter  0x308,0x94
  4360a3:	es stc 
  4360a5:	call   ebp
  4360a7:	mov    ds:0x2875ccfd,al
  4360ac:	xor    eax,0xabf64c50
  4360b1:	dec    eax
  4360b2:	mov    dh,0x5f
  4360b4:	jns    0x4360ba
  4360b6:	push   esp
  4360b7:	sub    BYTE PTR [edi+edi*4-0x4e095494],bh
  4360be:	add    BYTE PTR [eax],al
  4360c0:	mov    WORD PTR [edx],ds
  4360c2:	aas    
  4360c3:	hlt    
  4360c4:	push   cs
  4360c5:	gs sub eax,0xf5737dbf
  4360cb:	add    BYTE PTR [ebp+0x4efffda3],0x5b
  4360d2:	ret    
  4360d3:	out    0xdd,eax
  4360d5:	sbb    DWORD PTR [edi],esi
  4360d7:	aam    0xda
  4360d9:	aam    0xba
  4360db:	xchg   DWORD PTR [eax+0xdb1f58e],edx
  4360e1:	mov    al,ds:0x6e5ce438
  4360e6:	sar    DWORD PTR [eax-0x25d2c],0x26
  4360ed:	inc    ebx
  4360ee:	jns    0x43613b
  4360f0:	icebp  
  4360f1:	pop    edx
  4360f2:	loop   0x4360b0
  4360f4:	push   es
  4360f5:	cmp    edi,DWORD PTR [ecx+0x4b]
  4360f8:	loope  0x4360db
  4360fa:	call   0x4ec8:0x78e1d610
  436101:	fs dec ebp
  436103:	test   ecx,ebx
  436105:	sbb    dh,ch
  436107:	mov    cl,0x18
  436109:	xlat   BYTE PTR ds:[ebx]
  43610a:	jp     0x43614f
  43610c:	leave  
  43610d:	loope  0x4360aa
  43610f:	or     dl,cl
  436111:	aam    0xc3
  436113:	std    
  436114:	xchg   ebp,eax
  436115:	(bad)  
  436116:	mov    edi,0x27200372
  43611b:	cld    
  43611c:	aad    0xb3
  43611e:	jns    0x43615f
  436120:	(bad)  
  436121:	or     edi,esp
  436123:	add    eax,DWORD PTR [eax]
  436125:	add    ah,bl
  436127:	pop    ebx
  436128:	in     eax,0x7e
  43612a:	lahf   
  43612b:	mov    eax,0xb60e7ec7
  436130:	retf   0x7938
  436133:	inc    edi
  436134:	out    0xcb,al
  436136:	fcomp  QWORD PTR [ebx-0x5c]
  436139:	jl     0x436151
  43613b:	scas   al,BYTE PTR es:[edi]
  43613c:	loop   0x4361af
  43613e:	call   0xe794:0x5a6b9f08
  436145:	add    esp,DWORD PTR [eax]
  436147:	test   eax,0x8831386e
  43614c:	test   eax,0x8f3e5bfb
  436151:	cmp    ebx,eax
  436153:	enter  0x9b96,0xdc
  436157:	pop    esp
  436158:	sub    al,0xca
  43615a:	sub    cl,cl
  43615c:	pop    esi
  43615d:	cmp    al,BYTE PTR [ebp+0x5284e380]
  436163:	dec    esi
  436164:	pop    ebx
  436165:	(bad)  
  436166:	std    
  436167:	add    dl,ch
  436169:	jno    0x436180
  43616b:	or     BYTE PTR [edi+ebx*4+0x5dd2cbc8],ch
  436172:	int3   
  436173:	pop    ebx
  436174:	mov    ah,0xc8
  436176:	pop    eax
  436177:	dec    esi
  436178:	xor    edx,esi
  43617a:	lock fbstp TBYTE PTR [edi]
  43617d:	add    al,0x4c
  43617f:	int    0xce
  436181:	add    edx,ebp
  436183:	sub    BYTE PTR [edi],0xc4
  436186:	mov    edx,0x71ea02
  43618b:	add    BYTE PTR [edx-0x17409df7],dl
  436191:	or     edi,esp
  436193:	(bad)  
  436194:	mov    al,0xdf
  436196:	idiv   DWORD PTR [ebx+0x1e]
  436199:	scas   al,BYTE PTR es:[edi]
  43619a:	dec    edi
  43619b:	inc    ebx
  43619c:	and    DWORD PTR [ebx],eax
  43619e:	add    BYTE PTR [edx+0x15],ah
  4361a1:	add    al,cl
  4361a3:	test   eax,0x297484ce
  4361a8:	fldcw  WORD PTR [edx+0x9d6eb58]
  4361ae:	test   DWORD PTR [ecx-0x573fa684],esp
  4361b4:	pop    esi
  4361b5:	cli    
  4361b6:	jl     0x436181
  4361b8:	ins    BYTE PTR es:[edi],dx
  4361b9:	mov    WORD PTR [ecx+0x25],cs
  4361bc:	out    dx,al
  4361bd:	dec    eax
  4361be:	dec    eax
  4361bf:	scas   al,BYTE PTR es:[edi]
  4361c0:	aam    0xf8
  4361c2:	(bad)  
  4361c3:	call   0x3184ee9e
  4361c8:	ror    cl,cl
  4361ca:	je     0x4361f5
  4361cc:	cmp    BYTE PTR [ebx+0xf59cb6d],ah
  4361d2:	cld    
  4361d3:	jmp    0xebd3e915
  4361d8:	(bad)  
  4361d9:	or     DWORD PTR [ecx],ecx
  4361db:	aaa    
  4361dc:	rcl    DWORD PTR [eax-0x405f8ab5],cl
  4361e2:	int    0x89
  4361e4:	xchg   ebx,eax
  4361e5:	adc    al,0xc2
  4361e7:	icebp  
  4361e8:	(bad)  
  4361e9:	ss clc 
  4361eb:	jmp    0x0:0xa170dd1e
  4361f2:	enter  0x85af,0x9e
  4361f6:	mov    esi,0xd6e8ff51
  4361fb:	or     ebp,ecx
  4361fd:	dec    ecx
  4361fe:	or     BYTE PTR [eax+ecx*2+0x4293180a],ah
  436205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436206:	add    DWORD PTR [ebp-0x36a8a01],ebp
  43620c:	(bad)  
  43620d:	call   0xe95b6aa7
  436212:	(bad)  
  436213:	or     DWORD PTR [ebp-0x74],edi
  436216:	xchg   BYTE PTR [ecx],cl
  436218:	or     DWORD PTR [eax],eax
  43621a:	inc    eax
  43621b:	sar    cl,1
  43621d:	(bad)  
  43621e:	mov    esp,0x97e04515
  436223:	fucomi st,st(7)
  436225:	mov    esi,DWORD PTR [ebx-0x2e]
  436228:	xor    al,cl
  43622a:	xor    cl,bh
  43622c:	and    al,cl
  43622e:	add    eax,0xb33bf3d4
  436233:	mov    cl,0x6f
  436235:	or     eax,0x1bc021ef
  43623a:	jl     0x436242
  43623c:	add    BYTE PTR [edi],cl
  43623e:	icebp  
  43623f:	sub    bh,cl
  436241:	jmp    FWORD PTR [ebp+edx*1+0x47]
  436245:	xor    BYTE PTR [edi-0x39],ah
  436248:	outs   dx,BYTE PTR ds:[esi]
  436249:	(bad)  
  43624b:	mov    DWORD PTR [ebx+0x470d204f],0xf3d3b528
  436255:	sub    eax,DWORD PTR [eax]
  436257:	add    BYTE PTR [ebp+esi*2+0x3],dh
  43625b:	mov    ebp,ebx
  43625d:	cdq    
  43625e:	and    al,0xc8
  436260:	aas    
  436261:	shr    DWORD PTR [edi],1
  436263:	mov    esi,ecx
  436265:	pop    ecx
  436266:	or     DWORD PTR [ebp+0x40],0x85404715
  43626d:	fcmovnu st,st(3)
  43626f:	cmp    edi,DWORD PTR [ebp-0x5274f328]
  436275:	jne    0x43627d
  436277:	mov    ebx,DWORD PTR [ecx+0x6e]
  43627a:	and    ecx,eax
  43627c:	addr16 dec ecx
  43627e:	inc    eax
  43627f:	mov    DWORD PTR [ecx],edi
  436281:	ret    0x4581
  436284:	enter  0x3d0f,0xf4
  436288:	ja     0x436265
  43628a:	out    dx,eax
  43628b:	cmp    edi,ebp
  43628d:	(bad)  
  43628f:	mov    bh,ch
  436291:	adc    edi,DWORD PTR ds:0xb5cbd5f4
  436297:	xchg   DWORD PTR [eax],ecx
  436299:	repz jnp 0x4362e7
  43629c:	xchg   ecx,eax
  43629d:	mov    esp,0xfb1085b5
  4362a2:	jne    0x4362ed
  4362a4:	adc    eax,0xeed4322c
  4362a9:	ins    DWORD PTR es:[edi],dx
  4362aa:	xchg   ebp,eax
  4362ab:	xchg   DWORD PTR [eax],esp
  4362ad:	dec    edi
  4362ae:	xchg   ebp,eax
  4362af:	or     BYTE PTR [esi-0x5c],bh
  4362b2:	js     0x4362fb
  4362b4:	aad    0x2b
  4362b6:	aaa    
  4362b7:	aam    0x4f
  4362b9:	scas   eax,DWORD PTR es:[edi]
  4362ba:	add    al,0x85
  4362bc:	add    BYTE PTR [eax],al
  4362be:	sbb    BYTE PTR [ebx+0x5015087c],bh
  4362c4:	aaa    
  4362c5:	hlt    
  4362c6:	dec    esp
  4362c7:	ficomp WORD PTR [ebx+0x21246973]
  4362cd:	inc    eax
  4362ce:	aad    0x97
  4362d0:	cmp    BYTE PTR [ecx],0xd4
  4362d3:	mov    ds:0x8edac0fd,al
  4362d8:	std    
  4362d9:	call   ebp
  4362db:	mov    eax,esi
  4362dd:	(bad)  
  4362de:	xor    ah,BYTE PTR [ebx-0x5cda8482]
  4362e4:	repnz or DWORD PTR [ebp-0x5e],0xfffffffd
  4362e9:	dec    DWORD PTR [esi-0x1a]
  4362ec:	fwait
  4362ed:	xchg   BYTE PTR [edx-0x6af78a9e],ah
  4362f3:	das    
  4362f4:	aaa    
  4362f5:	lock dec esp
  4362f7:	pop    esi
  4362f8:	xchg   ebp,eax
  4362f9:	rcl    edx,0x96
  4362fc:	std    
  4362fd:	call   ebp
  4362ff:	cmp    DWORD PTR [edi+edi*8],edx
  436302:	jmp    0xf2a2:0xcd797ea2
  436309:	and    DWORD PTR ds:0x56fffda3,0x9
  436310:	and    esp,esp
  436312:	cmp    eax,ebp
  436314:	imul   esp,DWORD PTR [eax],0xfffffff9
  436317:	or     DWORD PTR [esi+0x29],esp
  43631a:	mov    ecx,0x227fda09
  43631f:	or     esp,edi
  436321:	add    eax,DWORD PTR [eax]
  436323:	add    ah,bl
  436325:	push   edi
  436326:	in     eax,0xa6
  436328:	push   cs
  436329:	mov    ds,WORD PTR [esi-0x4a]
  43632c:	mov    BYTE PTR [ecx+0x19782a5],ch
  436332:	jo     0x436384
  436334:	lea    ecx,[edi+edi*4]
  436337:	cmp    BYTE PTR [edi-0x17],0x54
  43633b:	(bad)  
  43633c:	push   eax
  43633d:	inc    esi
  43633e:	(bad)  
  43633f:	ficom  DWORD PTR [edi]
  436341:	call   0x1028:0xadd386e
  436348:	bound  eax,QWORD PTR [edi-0x2d]
  43634b:	jl     0x436363
  43634d:	stos   BYTE PTR es:[edi],al
  43634e:	fs ret 
  436350:	leave  
  436351:	loop   0x4363c0
  436353:	cmp    BYTE PTR ds:0xa50c3284,bh
  436359:	in     al,0x9e
  43635b:	cmp    BYTE PTR [ecx+edi*8+0x15a354e6],0xea
  436363:	fwait
  436364:	fwait
  436365:	add    edi,esp
  436367:	add    edi,DWORD PTR [eax]
  436369:	push   es
  43636a:	jg     0x436376
  43636c:	sbb    BYTE PTR [eax+0x19e7ae7],dl
  436372:	outs   dx,BYTE PTR ds:[esi]
  436373:	push   eax
  436374:	or     eax,0x5a0ba282
  436379:	dec    edx
  43637a:	pop    ss
  43637b:	cmp    DWORD PTR [ecx+edi*8-0x1a],0x7a
  436380:	xchg   esi,eax
  436381:	cdq    
  436382:	jo     0x4363c4
  436384:	cmc    
  436385:	and    DWORD PTR [esi],0x30
  436388:	add    BYTE PTR [eax],al
  43638a:	shl    dh,0xff
  43638d:	call   0x62436cc5
  436392:	(bad)  
  436393:	dec    edi
  436394:	(bad)  
  436396:	xlat   BYTE PTR ds:[ebx]
  436397:	dec    esi
  436398:	test   DWORD PTR [edx],esi
  43639a:	cdq    
  43639b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43639c:	or     BYTE PTR [eax+0x71],ch
  43639f:	or     bh,cl
  4363a1:	jmp    0xf223b27c
  4363a6:	xlat   BYTE PTR ds:[ebx]
  4363a7:	dec    esi
  4363a8:	test   DWORD PTR [edx],esi
  4363aa:	cdq    
  4363ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363ac:	sbb    dl,ch
  4363ae:	xchg   ecx,eax
  4363af:	aad    0x40
  4363b1:	rol    edx,1
  4363b3:	std    
  4363b4:	test   BYTE PTR [ecx+ecx*4],ch
  4363b7:	retf   0x140
  4363ba:	fs push ss
  4363bc:	inc    eax
  4363bd:	jmp    0xb2709a1f
  4363c2:	fs cdq 
  4363c4:	shr    esi,0xdd
  4363c7:	or     DWORD PTR [eax],eax
  4363c9:	jmp    0xe94b7523
  4363ce:	popa   
  4363cf:	mov    ecx,DWORD PTR [edx+0x7d09d6e9]
  4363d5:	es loope 0x4363e1
  4363d8:	or     DWORD PTR [ebp+0x55],esp
  4363db:	or     al,BYTE PTR [eax]
  4363dd:	jmp    0x1a63f837
  4363e2:	aaa    
  4363e3:	push   cs
  4363e4:	jnp    0x43636b
  4363e6:	rol    DWORD PTR [eax],1
  4363e8:	test   BYTE PTR [edx-0x27],dh
  4363eb:	or     DWORD PTR [eax],eax
  4363ed:	out    0x0,al
  4363ef:	add    BYTE PTR [eax+0x3d1cfa8f],ch
  4363f5:	test   edx,ecx
  4363f7:	cmp    dh,BYTE PTR [ecx]
  4363f9:	sar    BYTE PTR [edi+eiz*1+0x1],1
  4363fd:	mov    BYTE PTR [ebx+0x51],dl
  436400:	aam    0xb1
  436402:	jge    0x436453
  436404:	stc    
  436405:	sbb    al,0xda
  436407:	add    bh,dl
  436409:	inc    esp
  43640a:	sbb    al,0x74
  43640c:	dec    eax
  43640d:	adc    al,BYTE PTR [ebp+0x8]
  436410:	stos   DWORD PTR es:[edi],eax
  436411:	dec    edx
  436412:	sbb    BYTE PTR [ebx-0x38ffb578],dl
  436418:	mov    ebx,0xac000007
  43641d:	adc    edi,edi
  43641f:	and    ah,0x7
  436422:	pop    es
  436423:	xchg   ah,bl
  436425:	jbe    0x43641e
  436427:	call   DWORD PTR [eax+ebp*2]
  43642a:	idiv   edi
  43642c:	mov    ds:0x375f5344,eax
  436431:	outs   dx,DWORD PTR ds:[esi]
  436432:	push   ebp
  436433:	ret    0xa74
  436436:	add    DWORD PTR [ebp-0x7c],0x11
  43643a:	inc    ebp
  43643b:	call   0x8b4f3745
  436440:	mov    cl,0x55
  436442:	adc    DWORD PTR [eax],0x89fc3ff7
  436448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436449:	cmc    
  43644a:	adc    BYTE PTR [eax+0x78],0x13
  43644e:	outs   dx,DWORD PTR ds:[esi]
  43644f:	cmp    al,0xc2
  436451:	adc    dl,BYTE PTR [edi+0x38]
  436454:	add    BYTE PTR [eax],al
  436456:	out    0x1d,eax
  436458:	cli    
  436459:	(bad)  
  43645a:	cmp    al,0xa
  43645c:	push   edi
  43645d:	mov    ebx,DWORD PTR [ecx+0x47]
  436460:	mov    edx,0xd4992c08
  436465:	xor    ecx,DWORD PTR [edx+0x4d]
  436468:	call   FWORD PTR [ebx]
  43646a:	cmp    al,0xa
  43646c:	add    bh,al
  43646e:	stc    
  43646f:	mov    ebp,0xa2cfff9
  436474:	jecxz  0x43647d
  436476:	cmp    ecx,edi
  436478:	xlat   BYTE PTR ds:[ebx]
  436479:	std    
  43647a:	jae    0x4364e1
  43647c:	test   DWORD PTR [ebx+0x4d849239],0x487648d5
  436486:	loope  0x4364b3
  436488:	xor    dh,al
  43648a:	pop    esp
  43648b:	mov    al,0x78
  43648d:	push   ebx
  43648e:	loope  0x4364a8
  436490:	xor    eax,0xf9704c10
  436495:	jl     0x4364e9
  436497:	or     eax,DWORD PTR [edi+eax*4]
  43649a:	sub    ch,BYTE PTR [ebx+0x76017176]
  4364a0:	or     eax,0x2298fa7d
  4364a5:	sub    bl,BYTE PTR [esi+0x66]
  4364a8:	popf   
  4364a9:	test   DWORD PTR [eax],ebx
  4364ab:	fwait
  4364ac:	call   0xe05a29ef
  4364b1:	test   BYTE PTR [eax],dl
  4364b3:	add    edi,DWORD PTR [eax+0x5b]
  4364b6:	fisttp QWORD PTR [edx]
  4364b8:	int3   
  4364b9:	in     eax,0x0
  4364bb:	add    BYTE PTR [edx+0x9c087a4],cl
  4364c1:	xchg   edi,eax
  4364c2:	mov    BYTE PTR [ecx],0xdb
  4364c5:	mov    ds:0xd813fffd,al
  4364ca:	pop    ebx
  4364cb:	cld    
  4364cc:	push   0xffffffc4
  4364ce:	popf   
  4364cf:	pop    ecx
  4364d0:	dec    esi
  4364d1:	(bad)  
  4364d2:	aas    
  4364d3:	mov    esi,0x738aa2cd
  4364d8:	frstor [edi]
  4364da:	inc    edi
  4364db:	sar    dh,1
  4364dd:	fadd   QWORD PTR [edi]
  4364df:	test   DWORD PTR [eax-0x1aa6167e],esp
  4364e5:	mov    eax,ds:0xdcd40847
  4364ea:	idiv   esi
  4364ec:	mov    esp,DWORD PTR [esi-0x5d32867e]
  4364f2:	mov    WORD PTR [ebx+0x5],es
  4364f5:	(bad)  
  4364f6:	aam    0x82
  4364f8:	cs xchg edi,eax
  4364fa:	lock jl 0x436487
  4364fd:	or     edi,esi
  4364ff:	add    edx,DWORD PTR [eax-0x587107eb]
  436505:	std    
  436506:	pop    ebp
  436507:	dec    ebx
  436508:	int    0xe0
  43650a:	xor    eax,0x7ba18536
  43650f:	or     dl,ch
  436511:	or     DWORD PTR [esi+0x13],ecx
  436514:	push   eax
  436515:	cmp    al,0xe3
  436517:	mov    fs,WORD PTR [edx+esi*8]
  43651a:	std    
  43651b:	into   
  43651c:	sbb    bh,BYTE PTR [eax]
  43651e:	movhps QWORD PTR [eax],xmm0
  436521:	add    dl,al
  436523:	mov    edi,fs
  436525:	mov    WORD PTR [edx+esi*8],ss
  436528:	pop    edi
  436529:	dec    edx
  43652a:	in     eax,0x80
  43652c:	loop   0x4364b4
  43652e:	lods   eax,DWORD PTR ds:[esi]
  43652f:	clc    
  436530:	jp     0x436541
  436532:	xchg   esp,eax
  436533:	inc    esi
  436534:	out    dx,eax
  436535:	add    edx,ebp
  436537:	or     edi,esp
  436539:	xchg   BYTE PTR [ebp-0x6bf58c05],cl
  43653f:	inc    esi
  436540:	out    dx,eax
  436541:	add    eax,DWORD PTR [edx+0xc8ee78c]
  436547:	push   es
  436548:	fidivr DWORD PTR [eax+ecx*8-0x1749e93e]
  43654f:	stos   BYTE PTR es:[edi],al
  436550:	daa    
  436551:	xchg   DWORD PTR [ebp+0x0],ebx
  436554:	jmp    0x9b0c:0x24081b78
  43655b:	mov    al,ch
  43655d:	adc    ebp,0x9
  436560:	out    0x6,eax
  436562:	adc    cl,BYTE PTR [eax]
  436564:	xor    ah,al
  436566:	mov    ecx,0x5a03b70e
  43656b:	xor    edi,DWORD PTR [ebx-0x61792ee8]
  436571:	pop    ss
  436572:	xlat   BYTE PTR ds:[ebx]
  436573:	mov    ah,bh
  436575:	psrlw  mm2,QWORD PTR [esi]
  436578:	add    al,dl
  43657a:	arpl   WORD PTR [eax-0x28],cx
  43657d:	fs push ss
  43657f:	add    al,BYTE PTR [ebx-0x66dcb68]
  436585:	mov    edi,0x51bb0000
  43658a:	cmc    
  43658b:	push   esi
  43658c:	aaa    
  43658d:	xchg   edx,eax
  43658e:	pop    ecx
  43658f:	bound  edi,QWORD PTR ds:0xd6f1be30
  436595:	xchg   BYTE PTR [ebx+0x21],al
  436598:	xchg   esp,eax
  436599:	ss pop ecx
  43659b:	bound  edi,QWORD PTR [ebp+0x2f]
  43659e:	mov    esi,0xfa51d6e1
  4365a3:	es ja  0x436537
  4365a6:	pop    ecx
  4365a7:	jb     0x436616
  4365a9:	das    
  4365aa:	mov    esi,0xf984d6e1
  4365af:	jle    0x43656e
  4365b1:	into   
  4365b2:	call   DWORD PTR [esi-0x54]
  4365b5:	into   
  4365b6:	(bad)  
  4365b7:	mov    esp,0x38ffceaf
  4365bc:	jg     0x43658c
  4365be:	inc    ebx
  4365c0:	jle    0x436590
  4365c2:	dec    DWORD PTR [ecx+0x34ffce71]
  4365c8:	outs   dx,BYTE PTR ds:[esi]
  4365c9:	into   
  4365ca:	(bad)  
  4365cb:	jmp    0x7d433450
  4365d0:	jnp    0x4365a0
  4365d2:	push   edi
  4365d4:	jno    0x4365a4
  4365d6:	jmp    FWORD PTR [esi+0x68]
  4365d9:	into   
  4365da:	(bad)  
  4365db:	jnp    0x43661d
  4365dd:	into   
  4365de:	call   FWORD PTR [edi+0x70ffce38]
  4365e4:	inc    ebp
  4365e5:	into   
  4365e6:	inc    DWORD PTR [ebx-0x7e0031bb]
  4365ec:	add    BYTE PTR [eax],al
  4365ee:	and    eax,0x3a25ffce
  4365f3:	into   
  4365f4:	(bad)  
  4365f5:	jmp    FWORD PTR [edi-0x65]
  4365f8:	cmp    al,0x0
  4365fa:	jge    0x436593
  4365fc:	cmp    al,0x0
  4365fe:	loop   0x4365b6
  436600:	cmp    al,0x0
  436602:	or     BYTE PTR [eax-0x4a05ffc4],bh
  436608:	cmp    al,0x0
  43660a:	xchg   edi,eax
  43660b:	mov    ah,0x3c
  43660d:	add    dl,dl
  43660f:	mov    dl,0x3c
  436611:	add    BYTE PTR [edi-0x4e],bh
  436614:	cmp    al,0x0
  436616:	and    eax,0x9003cb1
  43661b:	mov    cl,0x3c
  43661d:	add    cl,bl
  43661f:	mov    al,0x3c
  436621:	add    bh,dh
  436623:	mov    al,0x3c
  436625:	add    BYTE PTR [eax],al
  436627:	mov    cl,0x3c
  436629:	add    BYTE PTR [edi-0x66ffc352],cl
  43662f:	call   0x3c:0x9a9a003c
  436636:	js     0x4365d2
  436638:	cmp    al,0x0
  43663a:	dec    ecx
  43663b:	call   0x56ec:0x7d71003c
  436642:	div    edx
  436644:	pop    es
  436645:	test   DWORD PTR [edx-0x4d74cb0e],esp
  43664b:	or     DWORD PTR [ebp-0x40],edi
  43664e:	adc    BYTE PTR [eax+0x4e84],dh
  436654:	rol    BYTE PTR [edx+0x7ccb74c1],1
  43665a:	inc    eax
  43665b:	xor    al,0xf1
  43665d:	(bad)  
  43665e:	je     0x43666a
  436660:	in     al,dx
  436661:	jl     0x4366a1
  436663:	sub    ah,ch
  436665:	push   0xfe7083c9
  43666a:	or     BYTE PTR [esi+0x38],0x7d
  43666e:	dec    esi
  43666f:	sub    ch,dl
  436671:	daa    
  436672:	inc    edi
  436673:	and    al,0x84
  436675:	into   
  436676:	sahf   
  436677:	rcl    BYTE PTR [esi+0x5c],1
  43667a:	add    eax,0xfdac93c1
  43667f:	call   ebp
  436681:	mov    al,ds:0xfdabbfd4
  436686:	rol    DWORD PTR [edx*8-0x5066098],0x2a
  43668e:	aas    
  43668f:	pop    ebx
  436690:	pop    ss
  436691:	pushf  
  436692:	std    
  436693:	retf   
  436694:	sbb    esp,ebp
  436696:	enter  0x11cc,0xd4
  43669a:	enter  0x9cc,0xdc
  43669e:	enter  0xa1cc,0xa6
  4366a2:	mov    esp,gs
  4366a4:	pop    esi
  4366a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4366a6:	add    eax,0xed4e4e4d
  4366ab:	push   eax
  4366ac:	dec    esi
  4366ad:	sub    bh,BYTE PTR [esi-0x620e3a17]
  4366b3:	stc    
  4366b4:	stos   BYTE PTR es:[edi],al
  4366b5:	jae    0x4366b4
  4366b7:	jl     0x4366b9
  4366b9:	add    BYTE PTR [esi+0x4e2d1272],bl
  4366bf:	scas   al,BYTE PTR es:[edi]
  4366c0:	or     DWORD PTR [ecx],ecx
  4366c2:	dec    ebx
  4366c3:	arpl   WORD PTR [esi+eax*8],ax
  4366c6:	push   esp
  4366c7:	jp     0x436658
  4366c9:	stc    
  4366ca:	aad    0x72
  4366cc:	lar    edx,WORD PTR [edx+ebx*2-0x6d]
  4366d1:	stc    
  4366d2:	aad    0x72
  4366d4:	(bad)  
  4366d5:	not    BYTE PTR [eax+ebx*2-0x6d]
  4366d9:	stc    
  4366da:	aad    0x72
  4366dc:	lar    edx,WORD PTR [eax+ebx*2-0x6d]
  4366e1:	stc    
  4366e2:	aad    0x72
  4366e4:	xchg   cl,al
  4366e6:	adc    al,0x53
  4366e8:	hlt    
  4366e9:	pop    eax
  4366ea:	into   
  4366eb:	or     DWORD PTR [eax-0x14b461c5],ebp
  4366f1:	add    eax,DWORD PTR [edi+0x56101c94]
  4366f7:	adc    BYTE PTR [edx+ecx*1],0x4e
  4366fb:	shl    bh,1
  4366fd:	cmp    eax,0xc21be47c
  436702:	loope  0x43670d
  436704:	data16 fwait
  436706:	in     eax,0xfc
  436708:	and    eax,0xf4fe2889
  43670d:	nop
  43670e:	xor    DWORD PTR [esi],ebp
  436710:	out    0x3,eax
  436712:	aad    0x9
  436714:	loop   0x43676b
  436716:	xlat   BYTE PTR ds:[ebx]
  436717:	or     al,0x1f
  436719:	inc    esi
  43671a:	loopne 0x43669d
  43671c:	scas   al,BYTE PTR es:[edi]
  43671d:	sbb    BYTE PTR [eax],al
  43671f:	add    dh,ah
  436721:	mov    al,BYTE PTR [eax-0x6b]
  436724:	int3   
  436725:	or     edi,esp
  436727:	adc    edi,edx
  436729:	mov    al,BYTE PTR [eax-0x6b]
  43672c:	mov    esp,0x2a5be709
  436731:	mov    ah,dl
  436733:	and    DWORD PTR [eax+esi*2-0x6b2355d8],0x25
  43673b:	lds    esi,FWORD PTR [ebp-0x673e31f3]
  436741:	dec    edi
  436742:	cdq    
  436743:	les    esi,FWORD PTR [ebp+0x19]
  436746:	xchg   edx,eax
  436747:	or     cl,BYTE PTR [edx-0x1c]
  43674a:	mov    eax,ecx
  43674c:	ror    DWORD PTR [ecx],1
  43674e:	push   0xe71e459a
  436753:	add    ebx,esp
  436755:	mov    esi,DWORD PTR [ebp-0x70f62afd]
  43675b:	outs   dx,BYTE PTR ds:[esi]
  43675c:	cmp    dh,bh
  43675e:	and    BYTE PTR [edi+0xacd4a78],dl
  436764:	pop    edx
  436765:	fdivp  st(7),st
  436767:	in     al,0x51
  436769:	outs   dx,BYTE PTR ds:[esi]
  43676a:	mov    al,0xd4
  43676c:	(bad)  
  43676d:	or     DWORD PTR [eax+0x9d042],edi
  436773:	ins    BYTE PTR es:[edi],dx
  436774:	cli    
  436775:	sub    eax,0x1b80e600
  43677a:	std    
  43677b:	mov    ds:0xe852bbd3,al
  436780:	xlat   BYTE PTR ds:[ebx]
  436781:	cmp    ch,0xb2
  436784:	add    BYTE PTR [eax],al
  436786:	jecxz  0x436743
  436788:	push   edx
  436789:	jmp    0x436762
  43678b:	cmp    ch,0xa2
  43678e:	sar    DWORD PTR [ebx-0x7f2815ae],cl
  436794:	std    
  436795:	xor    ah,bl
  436797:	mov    ebx,0x80d7ed52
  43679c:	std    
  43679d:	and    dl,bl
  43679f:	mov    ebx,0x80d7ec52
  4367a4:	std    
  4367a5:	xor    ah,bl
  4367a7:	mov    ebx,0x7ed7ef52
  4367ac:	std    
  4367ad:	and    dl,bl
  4367af:	mov    ebx,0x7ed7ee52
  4367b4:	std    
  4367b5:	xor    ah,bl
  4367b7:	mov    ebx,0x7ed7e152
  4367bc:	std    
  4367bd:	and    dl,bl
  4367bf:	mov    ebx,0x7ed7f052
  4367c4:	std    
  4367c5:	xor    ah,bl
  4367c7:	mov    ebx,0x7ed7e352
  4367cc:	std    
  4367cd:	and    dl,bl
  4367cf:	mov    ebx,0x7ed5f252
  4367d4:	std    
  4367d5:	mov    dl,0xe0
  4367d7:	mov    ebx,0x7ed5e552
  4367dc:	std    
  4367dd:	mov    ds:0x52bbd0,al
  4367e2:	popa   
  4367e3:	or     dh,cl
  4367e5:	add    eax,DWORD PTR [esi+0x56ae15]
  4367eb:	add    BYTE PTR [edx],dh
  4367ed:	or     dh,cl
  4367ef:	add    esi,DWORD PTR [esi+0x15]
  4367f2:	scas   al,BYTE PTR es:[edi]
  4367f3:	push   esi
  4367f4:	inc    ebx
  4367f5:	or     dh,cl
  4367f7:	add    esp,DWORD PTR [esi+0x9]
  4367fa:	icebp  
  4367fb:	cmp    DWORD PTR [edx+0x7e],0x41
  4367ff:	ud1    ebx,DWORD PTR [edi+esi*8]
  436803:	call   DWORD PTR [ebx-0x1a]
  436806:	push   0xef8afb80
  43680b:	loope  0x43684a
  43680d:	mov    ah,0x7
  43680f:	imul   ebx,DWORD PTR [esi+0x15],0x873ff00
  436816:	ret    0xdb8
  436819:	mov    edi,edi
  43681b:	jg     0x4367a8
  43681d:	lods   al,BYTE PTR ds:[esi]
  43681e:	mov    ecx,0xca3403ea
  436823:	paddsb mm4,QWORD PTR [ebp-0x5ae9fc09]
  43682a:	inc    ebp
  43682b:	or     al,0xb3
  43682d:	(bad)  
  43682e:	xor    edi,edi
  436830:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436832:	jge    0x43680f
  436834:	ret    
  436835:	mov    cs,ecx
  436837:	add    BYTE PTR [edx+ecx*1+0x15acfb7b],bh
  43683e:	jp     0x4367d5
  436840:	lods   al,BYTE PTR ds:[esi]
  436841:	or     al,BYTE PTR [eax]
  436843:	mov    ebp,edi
  436845:	dec    edx
  436846:	call   0x2475694f
  43684b:	add    BYTE PTR [ebx-0x24],dh
  43684e:	or     eax,0xb6000003
  436853:	adc    al,0xae
  436855:	push   esi
  436856:	ins    DWORD PTR es:[edi],dx
  436857:	or     ecx,esi
  436859:	add    esp,DWORD PTR [esi]
  43685b:	adc    eax,0x72d556ae
  436860:	add    bh,dh
  436862:	(bad)  
  436863:	stos   BYTE PTR es:[edi],al
  436864:	or     al,0xb2
  436866:	add    esi,DWORD PTR [eax+eax*1-0x9]
  43686a:	(bad)  
  43686b:	mov    edx,0x74a3b20c
  436870:	add    bh,dh
  436872:	(bad)  
  436873:	stos   BYTE PTR es:[edi],al
  436874:	or     al,0xb2
  436876:	mov    ds:0xd6f70075,eax
  43687b:	mov    edx,0x7683b20c
  436880:	add    bh,dh
  436882:	(bad)  
  436883:	stos   BYTE PTR es:[edi],al
  436884:	or     al,0xb2
  436886:	xor    DWORD PTR [edi+0x0],0xfffffff7
  43688a:	(bad)  
  43688b:	mov    edx,0x68a3b20c
  436890:	add    bh,dh
  436892:	(bad)  
  436893:	stos   BYTE PTR es:[edi],al
  436894:	or     al,0xb2
  436896:	mov    ds:0xd6f70079,eax
  43689b:	cmp    cl,BYTE PTR [edx+esi*4]
  43689e:	sub    DWORD PTR [edx+0x0],0xfffffff7
  4368a2:	(bad)  
  4368a3:	sub    cl,BYTE PTR [edx+esi*4]
  4368a6:	cmp    DWORD PTR [ebx+0x0],0xfffffff7
  4368aa:	(bad)  
  4368ab:	cmp    BYTE PTR [edx+esi*4],cl
  4368ae:	and    ebp,DWORD PTR [edi+0x0]
  4368b1:	not    esi
  4368b3:	sub    BYTE PTR [edx+esi*4],cl
  4368b6:	add    BYTE PTR [eax],al
  4368b8:	and    edi,DWORD PTR [esi+0x0]
  4368bb:	not    esi
  4368bd:	cmp    BYTE PTR [edx+esi*4],cl
  4368c0:	add    ebp,DWORD PTR [ebp+0x0]
  4368c3:	not    esi
  4368c5:	sub    BYTE PTR [edx+esi*4],cl
  4368c8:	add    edi,DWORD PTR [eax+eax*1-0x9]
  4368cc:	(bad)  
  4368cd:	cmp    BYTE PTR [eax-0x69901a1b],al
  4368d3:	jge    0x436870
  4368d5:	arpl   WORD PTR [ebp+0x9],ax
  4368d8:	push   eax
  4368d9:	or     bl,BYTE PTR [ebx-0x65]
  4368dc:	ins    BYTE PTR es:[edi],dx
  4368dd:	test   DWORD PTR [edi+edi*4-0x1f],esp
  4368e1:	adc    dl,ah
  4368e3:	push   ecx
  4368e4:	xlat   BYTE PTR ds:[ebx]
  4368e5:	or     BYTE PTR [edi+0x2e825842],bl
  4368eb:	adc    DWORD PTR [esi-0x3e],eax
  4368ee:	cmp    BYTE PTR [esp+edx*8-0x7d5a4577],al
  4368f5:	jo     0x4368d1
  4368f7:	sub    al,0xb
  4368f9:	adc    eax,0x92c9ae7
  4368fe:	lods   eax,DWORD PTR ds:[esi]
  4368ff:	pop    esp
  436900:	mov    edx,0x2483ea89
  436905:	ins    DWORD PTR es:[edi],dx
  436906:	test   al,0xae
  436908:	int3   
  436909:	repnz xchg esp,eax
  43690b:	or     edx,ebp
  43690d:	test   BYTE PTR [edx+0x7],bh
  436910:	add    edx,DWORD PTR [ecx+0x6a423aaa]
  436916:	xlat   BYTE PTR ds:[ebx]
  436917:	cmp    dl,al
  436919:	dec    edx
  43691a:	mov    esi,0x33000038
  43691f:	push   ss
  436920:	out    0xc7,eax
  436922:	sbb    DWORD PTR [esi-0x47],edx
  436925:	mov    ?,ebx
  436927:	jl     0x436960
  436929:	and    edi,0x79890bfd
  43692f:	sub    eax,0x9d503e7
  436934:	cmp    ebp,eax
  436936:	sar    al,0xcf
  436939:	or     al,BYTE PTR [edi+0x32b3d61a]
  43693f:	push   0x9d5041a
  436944:	sub    BYTE PTR [ebp+ecx*8-0x428f1cc8],ch
  43694b:	sub    ah,BYTE PTR [edi+0x73d3d203]
  436951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436952:	sbb    ch,bl
  436954:	jmp    FWORD PTR [ecx+0x5f]
  436957:	sub    DWORD PTR [ecx],ecx
  436959:	imul   ecx,edx,0xffffff83
  43695c:	stc    
  43695d:	jmp    0xcf02e8c5
  436962:	aad    0x8e
  436964:	stc    
  436965:	sbb    bl,al
  436967:	mov    ss,eax
  436969:	test   al,0x28
  43696b:	sbb    DWORD PTR [ebp+0x86e19a1],eax
  436971:	push   0xe9008273
  436976:	(bad)  
  436977:	add    al,0xde
  436979:	scas   al,BYTE PTR es:[edi]
  43697a:	(bad)  
  43697b:	or     DWORD PTR [eax],eax
  43697d:	jb     0x4369c1
  43697f:	xchg   edi,eax
  436980:	sbb    ah,al
  436982:	add    BYTE PTR [eax],al
  436984:	xchg   esi,eax
  436985:	or     DWORD PTR ds:0x27219dfd,ebp
  43698b:	sub    ecx,edx
  43698d:	mov    ds,eax
  43698f:	test   al,0x43
  436991:	and    DWORD PTR ds:0x1f218dd5,ebp
  436997:	sub    ecx,ebx
  436999:	sub    cl,bh
  43699b:	jmp    0xfd707376
  4369a0:	push   ebp
  4369a1:	and    DWORD PTR [ebx],ebp
  4369a3:	test   eax,0xed4f36d6
  4369a8:	push   ebx
  4369a9:	ret    
  4369aa:	mov    edi,0xf926e641
  4369af:	jmp    0xe5c8738a
  4369b4:	push   ebp
  4369b5:	and    ah,BYTE PTR [ebx]
  4369b7:	test   eax,0x28d68cd6
  4369bc:	imul   edx,DWORD PTR [edx],0x7f
  4369bf:	or     cl,BYTE PTR [edi+0xa]
  4369c2:	add    cl,ch
  4369c4:	add    DWORD PTR [edi],0xffffff9b
  4369c7:	icebp  
  4369c8:	mov    cl,0x43
  4369ca:	add    BYTE PTR [edx+0x58],ah
  4369cd:	ret    
  4369ce:	in     eax,0x0
  4369d0:	je     0x436a2e
  4369d2:	std    
  4369d3:	pushf  
  4369d4:	je     0x436a44
  4369d6:	cmp    DWORD PTR [eax],eax
  4369d8:	in     eax,dx
  4369d9:	lods   al,BYTE PTR ds:[esi]
  4369da:	test   DWORD PTR [eax],0x42b076c
  4369e0:	icebp  
  4369e1:	test   DWORD PTR [esi],esp
  4369e3:	inc    eax
  4369e4:	jl     0x436a44
  4369e6:	cmp    cl,BYTE PTR [eax]
  4369e8:	add    BYTE PTR [eax],al
  4369ea:	idiv   DWORD PTR [ebp-0x69a31547]
  4369f0:	fadd   st,st(1)
  4369f2:	daa    
  4369f3:	push   ss
  4369f4:	jns    0x4369d9
  4369f6:	mov    ecx,DWORD PTR [esi]
  4369f8:	add    BYTE PTR [eax],al
  4369fa:	lods   eax,DWORD PTR ds:[esi]
  4369fb:	stos   DWORD PTR es:[edi],eax
  4369fc:	test   DWORD PTR [eax],0x1483072c
  436a02:	mov    cl,0x85
  436a04:	push   ds
  436a05:	inc    eax
  436a06:	cmp    al,0x5e
  436a08:	or     eax,0x3970249d
  436a0d:	add    BYTE PTR [edi-0xb14463b],dh
  436a13:	pop    ebp
  436a14:	or     eax,0x3967f49d
  436a19:	add    BYTE PTR [ecx],dl
  436a1b:	mov    ds:0x5dec0000,al
  436a20:	or     eax,0x396ad485
  436a25:	add    bh,cl
  436a27:	ss or  al,0x8b
  436a2a:	scas   al,BYTE PTR es:[edi]
  436a2b:	inc    esi
  436a2c:	call   0xe43b41
  436a31:	add    BYTE PTR [ebp+edx*4+0x63b48504],bh
  436a38:	cmp    DWORD PTR [eax],eax
  436a3a:	aaa    
  436a3b:	les    edi,FWORD PTR [ecx-0x24784b15]
  436a41:	(bad)  
  436a42:	mov    esp,0xb0330006
  436a47:	sti    
  436a48:	pop    ss
  436a49:	sub    ebp,edx
  436a4b:	mov    al,0xfd
  436a4d:	test   BYTE PTR [eax],al
  436a4f:	add    BYTE PTR [edi+0x31],bh
  436a52:	stos   DWORD PTR es:[edi],eax
  436a53:	sbb    dh,al
  436a55:	je     0x436ac9
  436a57:	sbb    BYTE PTR [eax+esi*4+0x7b777efd],dh
  436a5e:	std    
  436a5f:	call   ebp
  436a61:	mov    edi,0x1dcd92f9
  436a66:	inc    esp
  436a67:	add    BYTE PTR [esi-0x7a7b0bcf],ah
  436a6d:	mov    cl,0xab
  436a6f:	adc    BYTE PTR [esi-0x48],cl
  436a72:	mov    esi,0xa2f1dde5
  436a77:	stc    
  436a78:	aad    0x70
  436a7a:	std    
  436a7b:	test   cl,ch
  436a7d:	in     eax,0xf4
  436a7f:	and    dl,BYTE PTR [ebp+0x32dd7e70]
  436a85:	jo     0x436a84
  436a87:	jmp    esi
  436a89:	jl     0x436afd
  436a8b:	sbb    ah,ch
  436a8d:	xor    BYTE PTR [eax*4+0x18acb0fd],al
  436a94:	(bad)  
  436a95:	fs jb  0x436ab0
  436a98:	mov    ah,0x30
  436a9a:	add    al,0x23
  436a9c:	add    dh,BYTE PTR [eax-0x3]
  436a9f:	inc    esi
  436aa1:	pop    esp
  436aa2:	jp     0x436abc
  436aa4:	shl    BYTE PTR [eax+0x7c842cfd],0x8c
  436aab:	mov    esi,0x22ecc814
  436ab0:	fisubr DWORD PTR [edi-0x3]
  436ab3:	inc    DWORD PTR [eax]
  436ab5:	add    BYTE PTR [esi+0x6f],bl
  436ab8:	jp     0x436ad2
  436aba:	lock mov dl,0xfd
  436abd:	test   BYTE PTR [edi+0x5408ac32],bl
  436ac3:	aam    0x97
  436ac5:	add    ch,dl
  436ac7:	or     edi,esp
  436ac9:	aam    0xd6
  436acb:	sahf   
  436acc:	(bad)  
  436acd:	jmp    0x755a:0xbd5e09e2
  436ad4:	out    dx,eax
  436ad5:	aam    0xd6
  436ad7:	sahf   
  436ad8:	(bad)  
  436ada:	retf   0x6809
  436add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436ade:	jl     0x436aea
  436ae0:	out    0x3,eax
  436ae2:	test   al,0x5
  436ae4:	push   esp
  436ae5:	sti    
  436ae6:	mov    edi,0x2a82e6c9
  436aeb:	sub    dl,BYTE PTR [esi]
  436aed:	inc    ebp
  436aee:	pop    ebp
  436aef:	(bad)  
  436af0:	shl    esp,0x51
  436af3:	pop    edx
  436af4:	pop    esi
  436af5:	mov    esp,0xc4d77492
  436afa:	xor    BYTE PTR [edx],dl
  436afc:	push   0xe70a3ca2
  436b01:	add    edx,DWORD PTR [eax+0x16]
  436b04:	push   esp
  436b05:	cld    
  436b06:	test   ecx,0x810884e6
  436b0c:	out    0x3,eax
  436b0e:	aad    0x3c
  436b10:	sti    
  436b11:	js     0x436ad0
  436b13:	xor    ah,BYTE PTR [edi]
  436b15:	add    al,0x58
  436b17:	bound  ebp,QWORD PTR [eax-0x12ffff55]
  436b1d:	cmp    al,0xd3
  436b1f:	js     0x436afe
  436b21:	sub    ah,BYTE PTR [edi]
  436b23:	add    al,0xb6
  436b25:	and    bh,0x3
  436b28:	aad    0x3c
  436b2a:	sti    
  436b2b:	or     ch,0x2e
  436b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b2f:	add    esi,DWORD PTR [eax+0x1b8b52da]
  436b35:	dec    ebx
  436b36:	aas    
  436b37:	hlt    
  436b38:	test   DWORD PTR [eax-0x6b2afc19],0x26dd80e3
  436b42:	add    BYTE PTR [ecx+0x28d686d6],ch
  436b48:	jle    0x436b5b
  436b4a:	jg     0x436b56
  436b4c:	inc    edx
  436b4d:	or     DWORD PTR [eax],eax
  436b4f:	jmp    0xf1de77db
  436b54:	test   eax,0x4f620040
  436b59:	shl    ch,0xe1
  436b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b5d:	or     al,0x9b
  436b5f:	loope  0x436bda
  436b61:	inc    eax
  436b62:	add    BYTE PTR [eax+0x37],ch
  436b65:	add    BYTE PTR [eax],0xe9
  436b68:	(bad)  
  436b69:	cs add al,0x7c
  436b6c:	outs   dx,BYTE PTR ds:[esi]
  436b6d:	xor    eax,DWORD PTR [eax-0x17]
  436b70:	sbb    edx,DWORD PTR [ebx]
  436b72:	adc    ebp,0x3d
  436b75:	cmp    cl,0x6a
  436b78:	push   0x5e196e05
  436b7d:	pop    ebx
  436b7e:	mov    edi,0xd40000d3
  436b83:	xchg   cl,bh
  436b85:	cli    
  436b86:	sar    esi,1
  436b88:	mov    esi,0xbf815fe5
  436b8d:	xchg   esi,eax
  436b8e:	es jmp eax
  436b91:	sahf   
  436b92:	(bad)  
  436b93:	or     DWORD PTR [eax],eax
  436b95:	bound  eax,QWORD PTR [edx]
  436b97:	ret    
  436b98:	sbb    ah,al
  436b9a:	xchg   esi,eax
  436b9b:	or     DWORD PTR [ebp+0x86611a1],eax
  436ba1:	push   0xe9008237
  436ba6:	(bad)  
  436ba7:	cs cmp al,0x4c
  436baa:	out    dx,al
  436bab:	es inc eax
  436bad:	jmp    0x5302cd11
  436bb2:	fisubr WORD PTR [esp+edi*1]
  436bb5:	je     0x436b95
  436bb7:	push   ds
  436bb8:	inc    eax
  436bb9:	jmp    0x43ee73
  436bbe:	mov    esp,0x393c2b0b
  436bc3:	and    DWORD PTR [esi],0x40
  436bc6:	lods   al,BYTE PTR ds:[esi]
  436bc7:	mov    esi,fs
  436bc9:	add    al,0x76
  436bcb:	xchg   esp,eax
  436bcc:	mov    edi,0x53380b75
  436bd1:	test   edx,ecx
  436bd3:	push   cs
  436bd4:	adc    dl,BYTE PTR [eax+0x3308cdb3]
  436bda:	int3   
  436bdb:	test   edx,ebx
  436bdd:	(bad)  
  436bde:	jl     0x436beb
  436be0:	add    cl,al
  436be2:	in     al,0x12
  436be4:	sub    eax,DWORD PTR [eax+eax*1]
  436be7:	add    BYTE PTR [ecx],bl
  436be9:	sbb    DWORD PTR [edx],0x40
  436bec:	jl     0x436bb4
  436bee:	inc    ebp
  436bef:	jne    0x436b8c
  436bf1:	(bad)  
  436bf2:	rcr    BYTE PTR [esi+0x2f],1
  436bf5:	push   edx
  436bf6:	int3   
  436bf7:	int3   
  436bf8:	cdq    
  436bf9:	nop
  436bfa:	in     al,dx
  436bfb:	mov    esi,ecx
  436bfd:	adc    DWORD PTR [ebp-0x37],edi
  436c00:	or     DWORD PTR [eax+0x4be1c02c],eax
  436c06:	or     al,0x0
  436c08:	mov    bh,0x2e
  436c0a:	adc    BYTE PTR [ebx+0x25e80df9],cl
  436c10:	jno    0x436ba7
  436c12:	neg    DWORD PTR [ebp+0x6e]
  436c15:	adc    al,BYTE PTR [eax]
  436c17:	int3   
  436c18:	fldcw  WORD PTR [esi+ecx*2]
  436c1b:	push   ebx
  436c1c:	jg     0x436bcf
  436c1e:	and    al,0x8b
  436c20:	call   0xb0ce9d8e
  436c25:	imul   esi,DWORD PTR ds:0x831dae8b,0x5909a
  436c2f:	add    BYTE PTR [edi-0x37bd7cb8],dh
  436c35:	nop
  436c36:	push   edx
  436c37:	jl     0x436c0e
  436c39:	push   esp
  436c3a:	add    BYTE PTR [edi-0x40b78d42],bh
  436c40:	mov    dh,0x60
  436c42:	or     al,bl
  436c44:	dec    esp
  436c45:	pop    esp
  436c46:	fld    DWORD PTR [edi+edx*2+0x3e0]
  436c4d:	add    ch,dl
  436c4f:	jmp    0x436c86
  436c51:	je     0x436c41
  436c53:	enter  0xfe17,0x4f
  436c57:	enter  0x5c84,0xf1
  436c5b:	js     0x436be5
  436c5d:	outs   dx,BYTE PTR ds:[esi]
  436c5e:	int    0xe9
  436c60:	mov    ecx,tr2
  436c63:	sti    
  436c64:	and    eax,0xc9fc506c
  436c69:	dec    DWORD PTR [ebp-0xc]
  436c6c:	fcomp  DWORD PTR [edi]
  436c6e:	pop    esi
  436c6f:	daa    
  436c70:	mov    ebx,eax
  436c72:	push   esi
  436c73:	push   eax
  436c74:	add    BYTE PTR [edi-0x7b0ffae7],al
  436c7a:	pop    ss
  436c7b:	add    eax,0x70d401e1
  436c80:	std    
  436c81:	and    al,0x3d
  436c83:	(bad)  
  436c84:	std    
  436c85:	sub    al,0x30
  436c87:	sti    
  436c88:	ds js  0x436cd7
  436c8b:	sub    al,0xe0
  436c8d:	sbb    edx,esi
  436c8f:	rol    BYTE PTR [esi+0x478f174],0xb1
  436c96:	ret    0x30f9
  436c99:	and    al,0xc5
  436c9b:	addr16 dec esp
  436c9d:	pop    esp
  436c9e:	int    0x8f
  436ca0:	xchg   BYTE PTR [ecx+esi*4+0x74],bl
  436ca4:	mov    BYTE PTR [esi-0x6b],dh
  436ca7:	sti    
  436ca8:	call   0x82985ad0
  436cad:	inc    edi
  436cae:	aad    0x53
  436cb0:	(bad)  
  436cb1:	or     DWORD PTR [eax],eax
  436cb3:	add    BYTE PTR [edx],ah
  436cb5:	or     ebx,esi
  436cb7:	inc    esp
  436cb8:	test   al,0x4c
  436cba:	jmp    0x5203:0xe708f57d
  436cc1:	jo     0x436caa
  436cc3:	add    ecx,edx
  436cc5:	jge    0x436cb9
  436cc7:	mov    ebp,DWORD PTR [ecx-0x33fc18f6]
  436ccd:	mov    ah,0xab
  436ccf:	shr    BYTE PTR [ebp-0x71f1d9bf],cl
  436cd5:	xchg   ecx,eax
  436cd6:	stos   DWORD PTR es:[edi],eax
  436cd7:	(bad)  
  436cd9:	or     al,0x52
  436cdb:	call   FWORD PTR [ebx-0x1d2054c0]
  436ce1:	neg    BYTE PTR [ecx]
  436ce3:	mov    ah,cl
  436ce5:	and    eax,0x5b90f6e
  436cea:	outs   dx,BYTE PTR ds:[esi]
  436ceb:	pop    ss
  436cec:	mov    cl,0x29
  436cee:	out    0x92,al
  436cf0:	pop    eax
  436cf1:	mov    dl,0xef
  436cf4:	and    BYTE PTR [edx-0x70a36c1f],al
  436cfa:	fwait
  436cfb:	int3   
  436cfc:	ror    BYTE PTR [edx],cl
  436cfe:	out    0x3,eax
  436d00:	pop    esi
  436d01:	mov    dh,0x17
  436d03:	cld    
  436d04:	dec    ebx
  436d05:	jge    0x436cee
  436d07:	jle    0x436ce2
  436d09:	aaa    
  436d0a:	test   BYTE PTR [edi],0x3
  436d0d:	neg    edx
  436d0f:	jle    0x436caa
  436d11:	aaa    
  436d12:	jecxz  0x436cea
  436d14:	xchg   esi,eax
  436d15:	aas    
  436d16:	jmp    0x436d30
  436d18:	add    BYTE PTR [eax],al
  436d1a:	aam    0x88
  436d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d1d:	cld    
  436d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436d1f:	jb     0x436d9f
  436d21:	adc    eax,0x5ce34790
  436d26:	or     al,0x7d
  436d28:	out    0x3,eax
  436d2a:	xchg   BYTE PTR [ebx],al
  436d2c:	data16 (bad) 
  436d2e:	sti    
  436d2f:	dec    ecx
  436d30:	add    BYTE PTR [ecx+0x69ff30e9],al
  436d36:	and    ecx,DWORD PTR [edx]
  436d38:	mov    ebp,ebp
  436d3a:	adc    BYTE PTR [esi+0x25f1057c],al
  436d40:	rcl    DWORD PTR [ebx+ebx*8],0x7c
  436d44:	stc    
  436d45:	jmp    0x9dc83b2f
  436d4a:	mov    edx,0xb29d8534
  436d4f:	and    BYTE PTR ds:0x850ec62a,dh
  436d55:	mov    ch,0xb2
  436d57:	add    al,0x85
  436d59:	mov    ds:0xc55c8716,eax
  436d5e:	call   0xf8cf:0x71cd1485
  436d65:	push   cs
  436d66:	data16 xchg BYTE PTR [ebp+ecx*8+0x6e],bl
  436d6b:	add    DWORD PTR [ebp+eax*8+0x6a],0xffffff83
  436d70:	inc    esi
  436d71:	jns    0x436d16
  436d73:	mov    ebp,0xf5ebbc7b
  436d78:	and    ebp,ebp
  436d7a:	fstp   TBYTE PTR [ecx-0x79]
  436d7d:	push   ebp
  436d7e:	add    BYTE PTR [eax],al
  436d80:	ins    DWORD PTR es:[edi],dx
  436d81:	add    al,0x9
  436d83:	sahf   
  436d84:	add    al,BYTE PTR [edx-0x7]
  436d87:	(bad)  
  436d88:	fmul   st,st(1)
  436d8a:	xchg   BYTE PTR ds:0xd585102d,ah
  436d90:	xor    ah,BYTE PTR [ebx+0x1f]
  436d93:	mov    dh,0x47
  436d95:	add    BYTE PTR [ebp-0x3ecbc2eb],0x2d
  436d9c:	sub    eax,0xd6e7fe20
  436da1:	or     DWORD PTR [edi+0x5486e923],eax
  436da7:	lds    ebx,FWORD PTR [esi]
  436da9:	test   DWORD PTR [eax+eax*1+0x10],ebx
  436dad:	ins    BYTE PTR es:[edi],dx
  436dae:	test   BYTE PTR [edx+0x0],al
  436db1:	dec    ebx
  436db2:	sar    DWORD PTR [edi-0x2],1
  436db5:	cli    
  436db6:	mov    edx,0x54643083
  436dbb:	pop    esi
  436dbc:	sbb    edi,DWORD PTR [ecx]
  436dbe:	mov    ebx,0x6b24e60d
  436dc3:	ins    DWORD PTR es:[edi],dx
  436dc4:	repnz dec ebp
  436dc6:	das    
  436dc7:	and    BYTE PTR [ebx-0x33978be2],ah
  436dcd:	sub    BYTE PTR [ecx+0x73],bl
  436dd0:	mov    DWORD PTR [ebx+0x19],ebx
  436dd3:	outs   dx,DWORD PTR ds:[esi]
  436dd4:	ins    BYTE PTR es:[edi],dx
  436dd5:	adc    esp,DWORD PTR [ecx+0x6d]
  436dd8:	xchg   ebp,eax
  436dd9:	adc    al,0x5d
  436ddb:	mov    WORD PTR fs:[esi],fs
  436dde:	imul   esi,DWORD PTR [ebx+0x51],0x2a
  436de2:	pop    edx
  436de3:	ins    BYTE PTR es:[edi],dx
  436de4:	add    BYTE PTR [eax],al
  436de6:	gs addr16 pop esp
  436de9:	outs   dx,DWORD PTR ds:[esi]
  436dea:	push   eax
  436deb:	xor    ah,BYTE PTR [eax]
  436ded:	data16 (bad) 
  436def:	daa    
  436df0:	and    BYTE PTR gs:[esi],ch
  436df3:	adc    eax,0x675a6161
  436df8:	dec    ebx
  436df9:	popa   
  436dfa:	push   ebp
  436dfb:	adc    ebx,DWORD PTR [ebp+0x72]
  436dfe:	enter  0x7065,0x72
  436e02:	add    eax,0x9a657422
  436e07:	sub    bh,BYTE PTR gs:[ecx]
  436e0a:	in     eax,0x4d
  436e0c:	push   es
  436e0d:	or     ch,BYTE PTR [edi+0x4a]
  436e10:	int3   
  436e11:	int3   
  436e12:	push   0xb9cccc4a
  436e17:	adc    DWORD PTR [eax+eax*1+0x1eb1073c],0x2d
  436e1f:	pop    es
  436e20:	add    BYTE PTR [esi-0x57],dl
  436e23:	xor    DWORD PTR [eax+eax*1],esp
  436e26:	aad    0x5f
  436e28:	xchg   edi,eax
  436e29:	bound  ebx,QWORD PTR [ecx+eiz*2-0x7c]
  436e2d:	rcr    cl,0x39
  436e30:	adc    ebx,esi
  436e32:	dec    eax
  436e33:	out    dx,eax
  436e34:	jnp    0x436e3d
  436e36:	aad    0x70
  436e38:	inc    esi
  436e39:	sbb    dl,ch
  436e3b:	jo     0x436e3a
  436e3d:	sub    al,0xeb
  436e3f:	dec    edx
  436e40:	jbe    0x436e72
  436e42:	push   esi
  436e43:	xor    DWORD PTR [eax],ecx
  436e45:	inc    edi
  436e46:	dec    eax
  436e47:	fidivr WORD PTR [eax+0x7e]
  436e4a:	add    BYTE PTR [eax],al
  436e4c:	dec    ecx
  436e4d:	addr16 std 
  436e4f:	(bad)  
  436e50:	jl     0x436eb1
  436e52:	std    
  436e53:	call   ebp
  436e55:	in     eax,dx
  436e56:	daa    
  436e57:	and    al,0xd5
  436e59:	jg     0x436df2
  436e5b:	bound  ebx,QWORD PTR [eax+eax*4-0x7c]
  436e5f:	rcr    cl,0xb9
  436e62:	adc    dh,bl
  436e64:	pop    ebp
  436e65:	jno    0x436e64
  436e67:	call   ebp
  436e69:	mov    dh,BYTE PTR [esi+0x7e]
  436e6c:	popa   
  436e6d:	fs std 
  436e6f:	inc    esi
  436e71:	xor    BYTE PTR [ebp+0x7e],dh
  436e74:	sub    DWORD PTR [edx-0x3],edx
  436e77:	call   FWORD PTR [esi+ebp*8+0x5b]
  436e7b:	adc    dl,ch
  436e7d:	jo     0x436ef5
  436e7f:	jle    0x436ea6
  436e81:	jp     0x436e80
  436e83:	dec    DWORD PTR [esi+ebp*8+0x5c]
  436e87:	adc    dl,ch
  436e89:	jo     0x436eba
  436e8b:	mov    ebp,0xccb99c19
  436e90:	adc    DWORD PTR [ecx+edi*4-0x4653f634],esi
  436e97:	int3   
  436e98:	and    DWORD PTR ds:0xe784ec7b,ebx
  436e9e:	ins    BYTE PTR es:[edi],dx
  436e9f:	push   eax
  436ea0:	leave  
  436ea1:	or     edi,esp
  436ea3:	add    ecx,DWORD PTR [eax-0x22e9922d]
  436ea9:	mov    ?,WORD PTR [ebx+0x53]
  436eac:	test   eax,0x3e70e
  436eb1:	add    BYTE PTR [esi+0xd],cl
  436eb4:	mov    ecx,0xbe7d9e7a
  436eb9:	mov    ebp,0x3488adc
  436ebe:	aad    0x9
  436ec0:	in     al,dx
  436ec1:	(bad)  
  436ec2:	pop    ecx
  436ec3:	mov    ch,0x6f
  436ec5:	and    edx,eax
  436ec7:	or     edi,esp
  436ec9:	jl     0x436f3c
  436ecb:	xor    BYTE PTR [ebx-0x25863504],0x58
  436ed2:	jmp    0xd99c6197
  436ed7:	cwde   
  436ed8:	ror    esp,0xa1
  436edb:	cld    
  436edc:	iret   
  436edd:	push   ss
  436ede:	int    0x83
  436ee0:	push   ebx
  436ee1:	or     ebp,edi
  436ee3:	sbb    eax,0xbe5003e7
  436ee8:	outs   dx,DWORD PTR ds:[esi]
  436ee9:	das    
  436eea:	fmul   DWORD PTR [ecx]
  436eec:	out    0xcd,eax
  436eee:	data16 adc BYTE PTR [edi+0x7a7982f7],ch
  436ef5:	add    bh,BYTE PTR [edx+0x117b3384]
  436efb:	add    eax,0xdf5003e7
  436f00:	jmp    0x25ff:0x7a1e25ff
  436f07:	push   ss
  436f08:	xchg   edx,eax
  436f09:	or     BYTE PTR es:[ebp+0x55],bl
  436f0d:	inc    esp
  436f0e:	(bad)  
  436f0f:	sbb    al,0x5e
  436f11:	cmp    DWORD PTR [ecx-0x7c],eax
  436f14:	arpl   WORD PTR [edx],ax
  436f16:	add    BYTE PTR [eax],al
  436f18:	popf   
  436f19:	sbb    eax,0x95eb03e7
  436f1e:	add    bh,ch
  436f20:	(bad)  
  436f21:	sbb    eax,0x23c8e900
  436f26:	test   DWORD PTR [ecx+ebx*1],edi
  436f29:	nop
  436f2a:	mov    ah,0x79
  436f2c:	lds    ecx,FWORD PTR [esi]
  436f2e:	add    cl,ch
  436f30:	(bad)  
  436f31:	cdq    
  436f32:	push   eax
  436f33:	cmc    
  436f34:	(bad)  
  436f35:	or     DWORD PTR [ebp-0x78af2988],eax
  436f3b:	hlt    
  436f3c:	out    dx,al
  436f3d:	cmp    eax,0x8f54f7c6
  436f42:	dec    ebx
  436f43:	ins    DWORD PTR es:[edi],dx
  436f44:	pusha  
  436f45:	test   DWORD PTR [eax-0x687203b],esi
  436f4b:	mov    edi,0xb4e38eff
  436f50:	xchg   edi,eax
  436f51:	mov    ss,WORD PTR [ebx+0x4d]
  436f54:	lds    eax,FWORD PTR ds:[edi]
  436f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436f58:	cmp    DWORD PTR [esi+0x78af9d88],ebx
  436f5e:	stc    
  436f5f:	xchg   edx,eax
  436f60:	das    
  436f61:	ins    DWORD PTR es:[edi],dx
  436f62:	pop    ebx
  436f63:	sub    ah,BYTE PTR [eax]
  436f65:	xchg   esi,eax
  436f66:	mov    al,0xc5
  436f68:	lahf   
  436f69:	js     0x436f64
  436f6b:	mov    edi,0xb4e38ebf
  436f70:	xchg   edi,eax
  436f71:	inc    ebp
  436f72:	int3   
  436f73:	sbb    eax,0x35cc4595
  436f78:	xchg   ebp,eax
  436f79:	inc    ebp
  436f7a:	int3   
  436f7b:	sub    eax,0x45950000
  436f80:	int3   
  436f81:	pushf  
  436f82:	out    dx,eax
  436f83:	gs jge 0x436f83
  436f86:	jle    0x436f15
  436f88:	dec    edi
  436f89:	in     eax,dx
  436f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436f8b:	mov    ss,WORD PTR [edi]
  436f8d:	jb     0x436fa0
  436f8f:	add    al,BYTE PTR [edi+0xf8e693c]
  436f95:	pusha  
  436f96:	std    
  436f97:	push   ebp
  436f98:	test   DWORD PTR [eax],eax
  436f9a:	fld    QWORD PTR [ecx]
  436f9c:	dec    esi
  436f9d:	mov    ecx,ecx
  436f9f:	lods   eax,DWORD PTR ds:[esi]
  436fa0:	adc    DWORD PTR [ecx+0x34],0x3f
  436fa4:	cmp    DWORD PTR [ecx-0x4],0x5a
  436fa8:	ret    0xd989
  436fab:	mov    eax,ds:0xf34db707
  436fb0:	rol    ecx,0x5e
  436fb3:	jl     0x436fb9
  436fb5:	retf   0xf475
  436fb8:	cmp    ecx,DWORD PTR [ebx]
  436fba:	in     al,dx
  436fbb:	or     eax,DWORD PTR [ecx-0x68b4378]
  436fc1:	push   DWORD PTR [ebp-0xc]
  436fc4:	inc    ebx
  436fc5:	or     ebp,esp
  436fc7:	or     eax,DWORD PTR [ecx-0x68cdb78]
  436fcd:	inc    DWORD PTR [ebp-0xd]
  436fd0:	dec    ebx
  436fd1:	or     edi,DWORD PTR [ebx+ecx*1+0x747c8881]
  436fd8:	stc    
  436fd9:	inc    DWORD PTR [ebp-0xd]
  436fdc:	push   ebx
  436fdd:	or     edi,DWORD PTR [ebx+ecx*1+0x8881]
  436fe4:	inc    esp
  436fe5:	je     0x436fe0
  436fe7:	push   DWORD PTR [edi]
  436fe9:	repz push ebx
  436feb:	adc    al,0xac
  436fed:	or     eax,DWORD PTR [ebx+0x3270494]
  436ff3:	add    BYTE PTR [esp+ebx*2-0x3e],bh
  436ff7:	data16 cmc 
  436ff9:	mov    eax,DWORD PTR ss:[edx]
  436ffc:	pop    es
  436ffd:	repz push ebx
  436fff:	adc    al,0x7c
  437001:	or     ebp,DWORD PTR [ebx]
  437003:	idiv   BYTE PTR ds:0xf5d854f6
  437009:	sbb    esp,edi
  43700b:	mov    ecx,edi
  43700d:	test   DWORD PTR [ecx-0x7],edi
  437010:	icebp  
  437011:	or     eax,DWORD PTR [eax]
  437013:	add    ch,dl
  437015:	outs   dx,DWORD PTR ds:[esi]
  437016:	jp     0x43706e
  437018:	aam    0x60
  43701a:	std    
  43701b:	mov    ah,BYTE PTR [ecx-0x7]
  43701e:	das    
  43701f:	add    eax,0x537660d5
  437024:	and    ebx,edi
  437026:	enter  0x22fd,0x61
  43702a:	fmul   st,st(6)
  43702c:	(bad)  
  43702d:	mov    edx,0xfa015375
  437032:	cmp    al,dh
  437034:	gs in  al,dx
  437036:	cmp    ah,dh
  437038:	dec    esi
  437039:	jb     0x437037
  43703b:	mov    al,0x89
  43703d:	sar    ebp,cl
  43703f:	or     BYTE PTR [edx],ch
  437041:	and    eax,0xbb95fe77
  437046:	mov    esp,0xdb00007a
  43704b:	cs ja  0x437017
  43704e:	dec    esp
  43704f:	push   esi
  437050:	test   DWORD PTR [edx+0x5c],esp
  437053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437054:	jo     0x437054
  437056:	movzx  edx,BYTE PTR [ebp+0x8ec1a79]
  43705d:	in     al,0x33
  43705f:	rol    BYTE PTR [edi-0x2840eb8],1
  437065:	jmp    esi
  437067:	ss (bad) 
  437069:	shl    BYTE PTR [ecx],1
  43706b:	imul   edi,DWORD PTR [eax-0x12],0xffffffee
  43706f:	pop    ss
  437070:	ja     0x4370ed
  437072:	jne    0x43706f
  437074:	xlat   BYTE PTR ds:[ebx]
  437075:	mov    al,0xda
  437077:	xlat   BYTE PTR ds:[ebx]
  437078:	iret   
  437079:	mov    esi,ss
  43707b:	push   ss
  43707c:	sti    
  43707d:	test   al,0x8a
  43707f:	popa   
  437080:	jne    0x43702a
  437082:	retf   
  437083:	pusha  
  437084:	std    
  437085:	test   BYTE PTR [eax],bl
  437087:	sbb    eax,0x50e9c781
  43708c:	cld    
  43708d:	mov    al,0x1
  43708f:	or     bh,BYTE PTR [eax+0x1]
  437092:	push   eax
  437093:	pop    esp
  437094:	jmp    0xe75f:0x7708245c
  43709b:	or     edi,esp
  43709d:	js     0x43705d
  43709f:	jne    0x43710f
  4370a1:	push   ss
  4370a2:	sub    eax,0xd198248a
  4370a7:	jbe    0x4370cd
  4370a9:	mov    al,ds:0x956485a6
  4370ae:	add    BYTE PTR [eax],al
  4370b0:	int3   
  4370b1:	lea    ebp,[ebx+0x6c09d503]
  4370b7:	dec    edi
  4370b8:	lea    esi,ds:0x82d503de
  4370be:	sbb    al,0x90
  4370c0:	xchg   edx,eax
  4370c1:	out    dx,eax
  4370c2:	gs dec edi
  4370c4:	popf   
  4370c5:	xor    eax,0x9d503ee
  4370ca:	fs ja  0x43705a
  4370cd:	xor    eax,0xfcd503de
  4370d2:	idiv   DWORD PTR [esi+0x79]
  4370d5:	cs out 0x3,eax
  4370d8:	aad    0x9
  4370da:	cwd    
  4370dc:	ret    
  4370dd:	ret    0x80c0
  4370e0:	add    ecx,DWORD PTR [edx]
  4370e2:	mov    ebx,0x63893795
  4370e7:	cmp    ebp,edi
  4370e9:	add    bh,ah
  4370eb:	add    esp,DWORD PTR [ebx-0x2a73d54d]
  4370f1:	or     DWORD PTR [ecx-0x253d96fe],ecx
  4370f7:	clc    
  4370f8:	mov    dh,BYTE PTR [ebp+0x5e]
  4370fb:	mov    ecx,0x80da0af7
  437100:	outs   dx,DWORD PTR ds:[esi]
  437101:	or     BYTE PTR [ebp+edx*4-0x14],ch
  437105:	mov    esp,0x8f69366e
  43710a:	add    BYTE PTR [ebx],bl
  43710c:	retf   0x86e0
  43710f:	ins    BYTE PTR es:[edi],dx
  437110:	cmp    al,BYTE PTR [ebx]
  437112:	mov    cl,0x26
  437114:	add    BYTE PTR [eax],al
  437116:	shl    al,1
  437118:	repz fs pop esi
  43711b:	(bad)  
  43711c:	push   ebx
  43711d:	(bad)  
  43711e:	cld    
  43711f:	jns    0x4370ac
  437121:	xchg   ebp,eax
  437122:	mov    ecx,0xd6e904d5
  437127:	adc    BYTE PTR [ebp+0x9d6e9],0x62
  43712e:	fbstp  TBYTE PTR [ebp-0x7]
  437131:	sbb    al,0x41
  437133:	imul   ecx
  437135:	in     eax,dx
  437136:	xchg   ecx,eax
  437137:	clc    
  437138:	(bad)  
  43713a:	int    0x61
  43713c:	jns    0x437104
  43713e:	(bad)  
  43713f:	mov    ecx,0x80d3627c
  437144:	je     0x4371b8
  437146:	fstp   TBYTE PTR [esi]
  437148:	div    ch
  43714a:	stc    
  43714b:	(bad)  
  43714c:	(bad)  
  43714d:	ret    0x8f2f
  437150:	cmc    
  437151:	bound  ebp,QWORD PTR [ecx+edx*2-0x723261f7]
  437158:	or     DWORD PTR [esi-0x7e4e8ba8],ecx
  43715e:	(bad)  
  43715f:	je     0x43715a
  437161:	(bad)  
  437162:	cmp    DWORD PTR [eax],ebx
  437164:	stc    
  437165:	mov    ah,0x62
  437167:	mov    ?,WORD PTR [ebx+0x35]
  43716a:	sub    bh,cl
  43716c:	fild   QWORD PTR [esi+ecx*2-0x8]
  437170:	mov    ebx,0x7d65cc62
  437175:	push   ss
  437176:	fcmovne st,st(3)
  437178:	xchg   BYTE PTR [eax+eax*1-0x6e079e00],bl
  43717f:	mov    dh,0xac
  437181:	fiadd  WORD PTR [esp+eax*1+0xccb6ac]
  437188:	test   al,0xb1
  43718a:	int3   
  43718b:	int3   
  43718c:	mov    eax,0x41ccccb1
  437191:	repz jmp 0x437117
  437194:	pop    eax
  437195:	js     0x4371e3
  437197:	push   esi
  437198:	adc    esi,ebp
  43719a:	lock mov edx,DWORD PTR [edi+ebp*2]
  43719e:	mov    al,0x47
  4371a0:	cs pop ebx
  4371a2:	retf   
  4371a3:	(bad)  
  4371a4:	icebp  
  4371a5:	test   edi,esi
  4371a7:	call   FWORD PTR [ebx]
  4371a9:	jg     0x43712c
  4371ab:	inc    ebp
  4371ac:	ins    BYTE PTR es:[edi],dx
  4371ad:	icebp  
  4371ae:	inc    ecx
  4371af:	pop    es
  4371b0:	mov    ecx,0x6c85041e
  4371b5:	sbb    DWORD PTR [eax],ecx
  4371b7:	mov    ecx,0x886
  4371bc:	jns    0x4371d6
  4371be:	sti    
  4371bf:	mov    bh,0x6b
  4371c1:	jg     0x4371c3
  4371c3:	add    dl,dl
  4371c5:	test   BYTE PTR [ebx-0x61],0x2
  4371c9:	mov    ebx,edx
  4371cb:	pcmpgtb mm7,mm0
  4371ce:	(bad)  
  4371cf:	(bad)  
  4371d0:	in     al,dx
  4371d1:	mov    bh,BYTE PTR [edi+0x74f6af06]
  4371d7:	cld    
  4371d8:	inc    edi
  4371d9:	add    cl,BYTE PTR [eax]
  4371db:	mov    DWORD PTR [ecx+0x5d8383],ecx
  4371e1:	add    BYTE PTR [esp+esi*8],bl
  4371e4:	mov    edx,0x78b698b
  4371e9:	mov    bh,0xb7
  4371eb:	int    0x32
  4371ed:	shr    DWORD PTR [ecx+0x73],1
  4371f0:	xor    al,0xc3
  4371f2:	pusha  
  4371f3:	sub    DWORD PTR [ebx],esi
  4371f5:	(bad)  
  4371f6:	imul   esi,DWORD PTR [ebp+0x5f],0x7c881001
  4371fd:	or     bh,BYTE PTR [edi+eax*1-0x1d]
  437201:	das    
  437202:	aad    0xe5
  437204:	mov    esp,0x4057e374
  437209:	clc    
  43720a:	jmp    0x523c9187
  43720f:	in     al,dx
  437210:	add    BYTE PTR [esi],al
  437212:	aad    0x60
  437214:	pop    ds
  437215:	stc    
  437216:	push   edx
  437217:	and    eax,0x5852fffb
  43721c:	jmp    0x8bac19d
  437221:	pop    es
  437222:	mov    ebx,0xcfc07f5b
  437227:	pusha  
  437228:	std    
  437229:	in     al,0xda
  43722b:	ret    0x8186
  43722e:	adc    DWORD PTR [edi-0x3],esi
  437231:	jmp    esi
  437233:	mov    ?,WORD PTR [ebp+0x43]
  437236:	sbb    eax,0xdf73aaee
  43723b:	jmp    0x611872b9
  437240:	jb     0x4372b0
  437242:	(bad)  
  437243:	xchg   esi,ebp
  437245:	xor    al,0x0
  437247:	add    BYTE PTR [esi],dl
  437249:	push   ds
  43724a:	cli    
  43724b:	mov    dh,0xdb
  43724d:	pusha  
  43724e:	std    
  43724f:	call   FWORD PTR [eax+0x72]
  437252:	and    ch,0xcd
  437255:	cmp    edi,edi
  437257:	call   ebp
  437259:	pusha  
  43725a:	jb     0x4372cb
  43725c:	rcr    bh,1
  43725e:	cmp    ah,bh
  437260:	rcl    ebx,1
  437262:	xor    ah,dh
  437264:	dec    eax
  437265:	loope  0x43728d
  437267:	pop    edx
  437268:	push   ds
  437269:	call   0x3cd9ce06
  43726e:	mov    eax,0xb82499cc
  437273:	int3   
  437274:	xchg   ecx,eax
  437275:	xchg   ebp,eax
  437276:	jl     0x437264
  437278:	push   esi
  437279:	xor    al,0xe8
  43727b:	dec    esp
  43727c:	sub    ecx,DWORD PTR [edx]
  43727e:	outs   dx,BYTE PTR ds:[esi]
  43727f:	xchg   esi,eax
  437280:	fdivr  QWORD PTR [edx+0x57b005b9]
  437286:	mov    edx,0xa44a827c
  43728b:	xchg   edi,eax
  43728c:	ins    BYTE PTR es:[edi],dx
  43728d:	jb     0x437291
  43728f:	mov    DWORD PTR [edx-0x2c],edx
  437292:	bnd jbe 0x4372b0
  437295:	or     ebp,DWORD PTR [edx]
  437297:	aas    
  437298:	pop    ebp
  437299:	or     eax,0x8cd503e7
  43729e:	mov    esi,0x6db0d90e
  4372a3:	add    edx,ebp
  4372a5:	or     DWORD PTR [edx-0x18f9c2c2],ebp
  4372ab:	add    eax,DWORD PTR [eax]
  4372ad:	add    ch,dl
  4372af:	mov    edx,es
  4372b1:	clc    
  4372b2:	push   edx
  4372b3:	cmp    al,0xe4
  4372b5:	add    edx,ebp
  4372b7:	xchg   BYTE PTR [ecx+0x34809401],ch
  4372bd:	xchg   esp,eax
  4372be:	pop    edx
  4372bf:	hlt    
  4372c0:	mov    cs,WORD PTR [edx+ecx*1+0x72]
  4372c4:	out    0x3,eax
  4372c6:	pop    eax
  4372c7:	jb     0x437327
  4372c9:	push   es
  4372ca:	add    eax,0x59c85202
  4372cf:	cld    
  4372d0:	jp     0x4372d6
  4372d2:	sbb    BYTE PTR [eax-0xba5600c],al
  4372d8:	jp     0x437354
  4372da:	xchg   BYTE PTR [ebp-0x52],dh
  4372dd:	mov    dl,0x4e
  4372df:	add    bl,BYTE PTR [esi]
  4372e1:	xchg   ecx,eax
  4372e2:	fadd   QWORD PTR [ebp+0x71c2ff52]
  4372e8:	push   cs
  4372e9:	das    
  4372ea:	mov    ebp,0xd55e5c01
  4372ef:	or     edi,esp
  4372f1:	jbe    0x437364
  4372f3:	es out 0x3,eax
  4372f6:	aad    0x9
  4372f8:	add    dh,ah
  4372fa:	add    eax,0x90afb0ae
  4372ff:	jno    0x4372fa
  437301:	jb     0x437311
  437303:	scas   al,BYTE PTR es:[edi]
  437304:	adc    ch,cl
  437306:	(bad)  
  437307:	mov    bh,0x10
  437309:	jmp    0x36687ce4
  43730e:	mov    eax,ds:0xa47a47
  437313:	add    BYTE PTR [ebp-0x46],ch
  437316:	mov    ah,0x39
  437318:	fiadd  DWORD PTR [edi]
  43731a:	add    cl,ch
  43731c:	mov    ah,0x86
  43731e:	rol    BYTE PTR [edi+0x31855089],cl
  437324:	dec    ecx
  437325:	jmp    0x43732d
  437327:	jns    0x4372ba
  437329:	sbb    eax,DWORD PTR [eax]
  43732b:	jmp    0x91dc2e73
  437330:	inc    ebx
  437331:	jno    0x43732c
  437333:	jb     0x437316
  437335:	adc    eax,0x7229dd88
  43733a:	inc    eax
  43733b:	frstor [ebx]
  43733d:	mov    ebx,0x71037098
  437342:	stc    
  437343:	jb     0x43730e
  437345:	adc    eax,0x89013985
  43734a:	sbb    al,0xf8
  43734c:	jg     0x4372e7
  43734e:	mov    esp,0xaf09d6f7
  437353:	fstp   DWORD PTR [edi-0x29160690]
  437359:	jo     0x4373ac
  43735b:	(bad)  
  43735d:	inc    esi
  43735e:	bound  ebx,QWORD PTR [edx+0x234c846b]
  437364:	popa   
  437365:	jmp    0x4372ed
  437367:	cdq    
  437368:	adc    DWORD PTR [eax+eax*1],ebx
  43736b:	jmp    0x432770af
  437370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437371:	jmp    0xa7b:0xd6080084
  437378:	add    BYTE PTR [eax],al
  43737a:	lods   al,BYTE PTR ds:[esi]
  43737b:	or     al,0x5e
  43737d:	ror    DWORD PTR [esi],cl
  43737f:	adc    BYTE PTR [ecx],al
  437381:	nop
  437382:	add    al,0x60
  437384:	stc    
  437385:	(bad)  
  437386:	jg     0x43733f
  437388:	and    DWORD PTR [ebp-0x20],ebx
  43738b:	out    dx,al
  43738c:	xchg   DWORD PTR [edx+edi*2-0x6f0fff4],edi
  437393:	adc    bh,dh
  437395:	call   ebx
  437397:	mov    cs,WORD PTR [ecx]
  437399:	add    al,0x6c
  43739b:	or     al,0x7d
  43739d:	div    BYTE PTR [ebx-0x10]
  4373a0:	ret    0x3c01
  4373a3:	or     al,0x33
  4373a5:	jne    0x4373c7
  4373a7:	ja     0x437426
  4373a9:	stos   BYTE PTR es:[edi],al
  4373aa:	sub    al,0xc
  4373ac:	add    BYTE PTR [edi],cl
  4373ae:	pop    ebx
  4373af:	clc    
  4373b0:	scas   eax,DWORD PTR es:[edi]
  4373b1:	jle    0x4373e9
  4373b3:	or     al,0x0
  4373b5:	mov    edi,0xc0c
  4373ba:	(bad)  
  4373bb:	jle    0x43733e
  4373bd:	dec    ebp
  4373be:	xrelease xchg DWORD PTR fs:[edx+ebp*1+0x433b000c],edi
  4373c7:	push   es
  4373c8:	push   0xafe0ab0f
  4373cd:	jl     0x4373c5
  4373cf:	or     eax,DWORD PTR [eax]
  4373d1:	mov    DWORD PTR [ecx+0x5ed35e91],ebp
  4373d7:	repz inc edi
  4373d9:	or     BYTE PTR [ebp-0x37],ah
  4373dc:	jecxz  0x437444
  4373de:	add    BYTE PTR [eax],al
  4373e0:	cmc    
  4373e1:	sti    
  4373e2:	mov    bh,0x16
  4373e4:	mov    esp,0xc850830b
  4373e9:	icebp  
  4373ea:	jg     0x4373a4
  4373ec:	retf   0xb
  4373ef:	mov    ch,dl
  4373f1:	pop    esp
  4373f2:	hlt    
  4373f3:	test   BYTE PTR [eax],bl
  4373f5:	lds    eax,FWORD PTR [ebx]
  4373f7:	pop    eax
  4373f8:	sar    ebx,0x4
  4373fb:	adc    al,0x4e
  4373fd:	mov    ecx,0xfa4585f5
  437402:	jmp    0x5e08:0xe8e992ff
  437409:	icebp  
  43740a:	inc    eax
  43740b:	adc    dl,ch
  43740d:	pusha  
  43740e:	jbe    0x43748b
  437410:	imul   esp,DWORD PTR [edx+0x25],0xd7712414
  437417:	(bad)
  43741a:	xchg   edx,eax
  43741b:	test   DWORD PTR [eax],edx
  43741d:	or     DWORD PTR [eax+0x54],edi
  437420:	iret   
  437421:	jo     0x437498
  437423:	nop
  437424:	xchg   ecx,eax
  437425:	push   edi
  437426:	std    
  437427:	call   FWORD PTR [esi+0x2e]
  43742a:	mov    BYTE PTR [edx+0x4c],ah
  43742d:	test   eax,0x60d5124c
  437432:	cwde   
  437433:	pop    ds
  437434:	mov    ebx,0xa9b047eb
  437439:	jp     0x437438
  43743b:	(bad)  
  43743c:	mov    ebx,0x4d859b93
  437441:	cmc    
  437442:	jmp    0x12437546
  437447:	(bad)  
  437448:	hlt    
  437449:	mov    bh,0x4d
  43744b:	outs   dx,DWORD PTR ds:[esi]
  43744c:	std    
  43744d:	call   esi
  43744f:	sbb    eax,0xd54d878c
  437454:	jmp    0xb08f6758
  437459:	xchg   DWORD PTR [eax+0x4db0f384],eax
  43745f:	das    
  437460:	idiv   bh
  437462:	fidiv  DWORD PTR [edi]
  437464:	hlt    
  437465:	call   edx
  437467:	pusha  
  437468:	fdiv   st,st(6)
  43746a:	pop    esp
  43746b:	or     DWORD PTR [ebx+ecx*4-0x11647ea8],esi
  437472:	mov    edx,0x2fb50e6e
  437477:	out    0xd9,eax
  437479:	dec    esp
  43747a:	inc    ebp
  43747b:	lods   eax,DWORD PTR ds:[esi]
  43747c:	in     eax,dx
  43747d:	add    edx,ebp
  43747f:	adc    BYTE PTR [edi+edx*4+0x79455b37],0x1d
  437487:	add    ah,BYTE PTR [eax+0x3f]
  43748a:	jno    0x437473
  43748c:	out    dx,eax
  43748d:	jae    0x4374cc
  43748f:	pop    ss
  437490:	out    0x3,eax
  437492:	push   eax
  437493:	fsqrt  
  437495:	jns    0x4374ec
  437497:	mov    cl,0xf1
  437499:	add    edx,ebp
  43749b:	sub    ebx,0x2c459f2
  4374a1:	add    edi,ebp
  4374a3:	adc    eax,0x82e90c5e
  4374a8:	lahf   
  4374a9:	sti    
  4374aa:	add    BYTE PTR [eax],al
  4374ac:	push   eax
  4374ad:	cdq    
  4374ae:	mov    al,ds:0x6f6e42ed
  4374b3:	out    dx,eax
  4374b4:	int    0x82
  4374b6:	ja     0x4374ff
  4374b8:	(bad)  
  4374b9:	or     edi,esp
  4374bb:	js     0x43746b
  4374bd:	pop    ebp
  4374be:	call   0xd7fc3dee
  4374c3:	fst    DWORD PTR [eax]
  4374c5:	out    0x95,eax
  4374c7:	xchg   esp,eax
  4374c8:	pop    eax
  4374c9:	mov    esp,0x3a176ae
  4374ce:	xchg   edi,eax
  4374cf:	jp     0x437536
  4374d1:	lods   eax,DWORD PTR ds:[esi]
  4374d2:	icebp  
  4374d3:	add    edx,ebp
  4374d5:	cmp    BYTE PTR [eax+ecx*4],0x77
  4374d9:	or     BYTE PTR [edi+0x4b],0xc7
  4374dd:	or     edi,esp
  4374df:	cwde   
  4374e0:	retf   
  4374e1:	out    0x6d,eax
  4374e3:	dec    ebx
  4374e4:	sbb    DWORD PTR [ebx],eax
  4374e6:	add    cl,ch
  4374e8:	(bad)  
  4374e9:	out    0xcc,eax
  4374eb:	xchg   al,ch
  4374ed:	add    al,0xb8
  4374ef:	mov    eax,ds:0xeaf96db0
  4374f4:	add    esi,DWORD PTR [edx-0x79]
  4374f7:	popa   
  4374f8:	sbb    bl,BYTE PTR [eax]
  4374fa:	add    cl,ch
  4374fc:	sub    eax,0xd6dfbc82
  437501:	or     DWORD PTR [ebp+0x2b],edi
  437504:	push   ebx
  437505:	out    dx,eax
  437506:	mul    bh
  437508:	fmul   st,st(5)
  43750a:	xchg   BYTE PTR [edx+eiz*2+0xbcce8],dl
  437511:	add    ch,bh
  437513:	rol    DWORD PTR [edi],0x70
  437516:	mov    ebx,0xe6e06265
  43751b:	mov    cl,0x12
  43751d:	jmp    0xdd93fbf8
  437522:	fmul   QWORD PTR [ecx+0x9d6d7b8]
  437528:	mov    ch,ch
  43752a:	inc    edi
  43752b:	xchg   BYTE PTR [ebx+0x5],al
  43752e:	xlat   BYTE PTR ds:[ebx]
  43752f:	rcl    DWORD PTR [ebx],1
  437531:	jb     0x437574
  437533:	sbb    DWORD PTR [esi+0x187879],eax
  437539:	jmp    0x614b37a1
  43753e:	int    0x2
  437540:	test   DWORD PTR [ecx+0x15],ebx
  437543:	sbb    BYTE PTR [eax],al
  437545:	jmp    0xe92f6695
  43754a:	sbb    DWORD PTR cs:[edi+0x6243b8d9],ebp
  437551:	mov    edx,0x9bbdee86
  437556:	dec    eax
  437557:	call   0x6062:0x9d6ffbc
  43755e:	sub    DWORD PTR [edx+0x8ec0012],esi
  437564:	loope  0x4375b6
  437566:	out    dx,al
  437567:	or     BYTE PTR [eax],al
  437569:	outs   dx,WORD PTR ds:[esi]
  43756b:	jecxz  0x4375ca
  43756d:	or     DWORD PTR [esi+ebp*4],ebp
  437570:	push   cs
  437571:	add    BYTE PTR [ebx+eax*4+0x2b9],ch
  437578:	and    eax,0xbcfffa2e
  43757d:	inc    edi
  43757e:	adc    BYTE PTR [eax],al
  437580:	mov    esp,0xa6fa7b08
  437585:	pop    ss
  437586:	xchg   DWORD PTR [ecx],ebx
  437588:	lods   eax,DWORD PTR ds:[esi]
  437589:	or     BYTE PTR [eax],al
  43758b:	movlps QWORD PTR [esi-0x46],xmm7
  43758f:	or     bh,BYTE PTR [eax+ecx*1+0x23]
  437593:	stc    
  437594:	add    eax,0x48bf15b
  437599:	dec    edx
  43759a:	push   cs
  43759b:	add    BYTE PTR [ebx+ebp*1-0x39],bh
  43759f:	jle    0x4375f4
  4375a1:	pop    ss
  4375a2:	scas   eax,DWORD PTR es:[edi]
  4375a3:	nop
  4375a4:	lods   al,BYTE PTR ds:[esi]
  4375a5:	sti    
  4375a6:	(bad)  
  4375a7:	jmp    ebp
  4375a9:	push   edx
  4375aa:	in     eax,0x66
  4375ac:	out    dx,eax
  4375ad:	jecxz  0x437531
  4375af:	dec    eax
  4375b0:	xor    al,0x7d
  4375b2:	cmp    eax,0x8ffe92e4
  4375b7:	mov    eax,0x8b000842
  4375bc:	in     al,dx
  4375bd:	adc    DWORD PTR [edx+0x124480],eax
  4375c3:	add    BYTE PTR [esp+eax*1-0x1e0e74f7],ah
  4375ca:	clc    
  4375cb:	push   edi
  4375cc:	xor    BYTE PTR [ebx+0x78],bh
  4375cf:	adc    al,0x77
  4375d1:	inc    eax
  4375d2:	add    DWORD PTR [edx+0xead7c],ecx
  4375d8:	in     al,dx
  4375d9:	jg     0x4375ef
  4375db:	sldt   WORD PTR [eax]
  4375de:	aad    0xe7
  4375e0:	mov    WORD PTR [ebx+eax*8+0x6084fd62],?
  4375e7:	xchg   esi,eax
  4375e8:	add    al,0x58
  4375ea:	shl    DWORD PTR [ecx],0xd
  4375ed:	es lahf 
  4375ef:	sti    
  4375f0:	push   eax
  4375f1:	jmp    0x8bbf8454
  4375f6:	sub    DWORD PTR [edi+0x6d],esi
  4375f9:	xchg   DWORD PTR [ebp-0x73],esp
  4375fc:	pop    ss
  4375fd:	add    ch,dl
  4375ff:	out    0xd7,eax
  437601:	sti    
  437602:	xor    ebp,edx
  437604:	mov    ah,0xb8
  437606:	retf   
  437607:	pusha  
  437608:	std    
  437609:	in     al,0xf5
  43760b:	inc    edx
  43760c:	mov    bh,BYTE PTR [eax-0x2986b]
  437612:	repz (bad)
  437615:	test   DWORD PTR [ebp-0x1b],ecx
  437618:	push   ss
  437619:	add    ch,dl
  43761b:	or     BYTE PTR [eax+edi*4],0x2d
  43761f:	imul   edi,ebp,0xffffffff
  437622:	(bad)  
  437623:	lea    esi,[ebp-0x79]
  437626:	dec    ebp
  437627:	lds    edx,FWORD PTR [esi]
  437629:	add    ch,dl
  43762b:	test   DWORD PTR [esp+edi*4+0x7cfd60eb],0xf7835e17
  437636:	shl    dl,1
  437638:	fild   WORD PTR [esi-0x3319c360]
  43763e:	aaa    
  43763f:	call   0x437e0f
  437644:	pop    esp
  437645:	es push 0xbbd0cc62
  43764b:	adc    dl,ch
  43764d:	pusha  
  43764e:	mov    WORD PTR [eax-0x17],ss
  437651:	out    0x83,al
  437653:	mov    eax,0x87fd60e3
  437658:	(bad)  [ecx]
  43765a:	clc    
  43765b:	mov    WORD PTR [esi-0x3924179b],ss
  437661:	jle    0x437672
  437663:	sbb    BYTE PTR [ebx-0x66],dl
  437666:	push   eax
  437667:	sbb    dl,ch
  437669:	or     DWORD PTR [esi-0x34],ebp
  43766c:	rol    BYTE PTR [ecx-0x66a7ef2d],cl
  437672:	xor    ebx,DWORD PTR [edx]
  437674:	aad    0x9
  437676:	pop    esi
  437677:	jmp    FWORD PTR [esi+0x6a17bf08]
  43767d:	sbb    DWORD PTR ds:0x4257374e,ecx
  437683:	test   DWORD PTR [ebx+0x76],ebp
  437686:	pusha  
  437687:	xchg   esp,eax
  437688:	popa   
  437689:	adc    esp,edi
  43768b:	add    esi,DWORD PTR [edi]
  43768d:	cmp    DWORD PTR [edi-0x44],0x6ae709e7
  437694:	mov    dl,0x8
  437696:	out    0x3,eax
  437698:	not    DWORD PTR [esi+0x5]
  43769b:	jmp    0x9d5:0x1a5f99d3
  4376a2:	inc    bx
  4376a4:	push   0x2f861
  4376a9:	add    ch,dl
  4376ab:	or     edx,esi
  4376ad:	mov    eax,0x3ed434d
  4376b2:	aad    0x1e
  4376b4:	lock mov bl,BYTE PTR [esi-0x7e73a18f]
  4376bb:	adc    esp,edi
  4376bd:	add    eax,DWORD PTR [eax]
  4376bf:	cmp    ebx,DWORD PTR [ecx-0x17]
  4376c2:	fnsave [edx+0x9d34777]
  4376c8:	out    0x8a,eax
  4376ca:	xchg   BYTE PTR [ebp+0x49],bl
  4376cd:	push   ebp
  4376ce:	sti    
  4376cf:	jge    0x437700
  4376d1:	or     al,0x5a
  4376d3:	(bad)  
  4376d4:	dec    esp
  4376d6:	cld    
  4376d7:	add    dl,BYTE PTR [eax+0x9dc71]
  4376dd:	jb     0x437705
  4376df:	push   ss
  4376e0:	xchg   BYTE PTR [ecx+0x2e],ch
  4376e3:	pop    ss
  4376e4:	add    cl,ch
  4376e6:	pop    esi
  4376e7:	add    eax,0x661b620f
  4376ec:	jmp    DWORD PTR [eax]
  4376ee:	mov    ebp,0x61d57884
  4376f3:	rol    BYTE PTR [edi],cl
  4376f5:	arpl   WORD PTR [esi-0x5f],sp
  4376f8:	adc    ch,cl
  4376fa:	(bad)  
  4376fb:	xchg   ecx,eax
  4376fc:	adc    al,0xf6
  4376fe:	dec    ecx
  4376ff:	jp     0x4376bd
  437701:	not    esi
  437703:	or     DWORD PTR [ebp+0x51693ad4],eax
  437709:	cmc    
  43770a:	addr16 cli 
  43770c:	and    eax,0xac000033
  437711:	push   esi
  437712:	jmp    0x8ba51a89
  437717:	popf   
  437718:	fcomp  DWORD PTR [ecx-0x79]
  43771b:	pop    ecx
  43771c:	inc    edx
  43771d:	cld    
  43771e:	(bad)  
  43771f:	call   0x883f346d
  437724:	pop    edi
  437725:	mov    ds:0x9d6ffb8,al
  43772a:	in     eax,0xc9
  43772c:	ins    BYTE PTR es:[edi],dx
  43772d:	mov    ?,WORD PTR [eax+0x9c82d]
  437733:	xchg   DWORD PTR [ecx-0x759e7a96],ebp
  437739:	cld    
  43773a:	(bad)  
  43773b:	call   0xa1fb876c
  437740:	jecxz  0x43774b
  437742:	add    dl,ch
  437744:	add    eax,0x15618761
  437749:	cld    
  43774a:	(bad)  
  43774b:	call   0x100099f
  437750:	cli    
  437751:	or     al,0x0
  437753:	cmp    DWORD PTR [esi],0xffffffe3
  437756:	jp     0x437751
  437758:	cmc    
  437759:	push   dx
  43775b:	mov    ecx,ebp
  43775d:	fstp   DWORD PTR [ebp-0x2d]
  437760:	dec    esi
  437761:	xchg   ebp,eax
  437762:	dec    eax
  437763:	or     BYTE PTR [ebp+0x52],ah
  437766:	frstor [esi-0xb]
  437769:	jl     0x437723
  43776b:	push   ss
  43776c:	in     al,dx
  43776d:	or     al,0x83
  43776f:	push   eax
  437770:	clc    
  437771:	xchg   edx,eax
  437772:	cmp    BYTE PTR [eax+0xcaa0000],0x0
  437779:	mov    BYTE PTR [eax+0x584582fd],bh
  43777f:	push   cs
  437780:	pop    eax
  437781:	adc    al,0x47
  437783:	or     ax,0x2c8a
  437787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437788:	push   cs
  437789:	add    BYTE PTR [ebx+edx*4+0x2340848],bh
  437790:	pop    es
  437791:	mov    edi,esp
  437793:	dec    ecx
  437794:	push   cs
  437795:	add    BYTE PTR [ebx+edx*4+0x75],bh
  437799:	in     al,dx
  43779a:	jge    0x4377e0
  43779c:	or     eax,0xc2329cb1
  4377a1:	mov    di,0x7af8
  4377a5:	ret    0x96cb
  4377a8:	nop
  4377a9:	mov    esp,0x66000c6a
  4377ae:	cmc    
  4377af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4377b0:	mov    eax,0xe30c6c16
  4377b5:	adc    ebx,DWORD PTR [edx-0x45]
  4377b8:	fldenv [esi+0x35]
  4377bb:	jl     0x437775
  4377bd:	push   ss
  4377be:	sub    al,0xc
  4377c0:	jnp    0x437783
  4377c2:	sub    edx,DWORD PTR [ebp+0xc2abc88]
  4377c8:	add    BYTE PTR [ebx+0x2d782dd5],cl
  4377ce:	pop    es
  4377cf:	jmp    0x999463cb
  4377d4:	clc    
  4377d5:	or     DWORD PTR [esp+ebx*8-0x4],ecx
  4377d9:	inc    DWORD PTR [eax]
  4377db:	add    ch,dl
  4377dd:	mov    bh,0xc8
  4377df:	not    esi
  4377e1:	jb     0x4377e0
  4377e3:	(bad)  
  4377e4:	out    dx,al
  4377e5:	sysexit 
  4377e7:	out    dx,eax
  4377e8:	push   0xd502bc78
  4377ed:	jb     0x4377ec
  4377ef:	rcr    BYTE PTR [eax-0x2a000186],0x72
  4377f6:	data16 or al,0x8c
  4377f9:	jo     0x4377f8
  4377fb:	call   ebp
  4377fd:	mov    bh,0xc8
  4377ff:	neg    ecx
  437801:	jo     0x437800
  437803:	call   DWORD PTR [esi-0x4a]
  437806:	ins    DWORD PTR es:[edi],dx
  437807:	add    al,0xfc
  437809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43780a:	or     DWORD PTR gs:[eax+0x1d],edx
  43780e:	ja     0x437809
  437810:	mov    ds:0x4e54dbb8,al
  437815:	(bad)  
  437816:	fistp  QWORD PTR [ecx+eiz*4-0x6633b6cb]
  43781d:	xchg   BYTE PTR [esi-0x3813db14],al
  437823:	pop    es
  437824:	dec    esi
  437825:	fistp  QWORD PTR [eax-0x318f2aee]
  43782b:	add    ch,BYTE PTR [edx-0x1]
  43782e:	jns    0x437829
  437830:	or     bh,BYTE PTR [ebx+eax*1+0x7e70d500]
  437837:	neg    esi
  437839:	out    0xd2,al
  43783b:	popa   
  43783c:	pop    esi
  43783d:	add    ebx,esp
  43783f:	int3   
  437840:	add    BYTE PTR [eax],al
  437842:	aaa    
  437843:	in     al,dx
  437844:	retf   0x4c13
  437847:	or     ch,BYTE PTR [eax+eax*4]
  43784a:	mov    bh,0x10
  43784c:	jno    0x43780a
  43784e:	(bad)  
  43784f:	or     edi,esp
  437851:	mov    BYTE PTR [edi+0x5d865d11],al
  437857:	add    bh,ah
  437859:	add    ebx,DWORD PTR [ebp+0xe]
  43785c:	fadd   DWORD PTR [edx]
  43785e:	scas   eax,DWORD PTR es:[edi]
  43785f:	std    
  437860:	pop    esp
  437861:	xchg   esi,eax
  437862:	dec    edx
  437863:	add    bh,ah
  437865:	add    edx,DWORD PTR [eax-0x18]
  437868:	cli    
  437869:	mov    BYTE PTR [edi-0x113891ef],bl
  43786f:	xchg   ecx,eax
  437870:	sti    
  437871:	or     al,0x58
  437873:	or     BYTE PTR [ebx+0x16],0xd5
  437877:	or     eax,ebp
  437879:	fucom  st(6)
  43787b:	cwde   
  43787c:	xlat   BYTE PTR ds:[ebx]
  43787d:	sub    DWORD PTR [ebx+0x406c95ef],edx
  437883:	dec    esp
  437884:	je     0x437811
  437886:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  437888:	stc    
  437889:	add    edx,ebp
  43788b:	out    dx,eax
  43788c:	outs   dx,DWORD PTR ds:[esi]
  43788d:	xchg   BYTE PTR [ebp-0x1],ch
  437890:	out    0x3,al
  437892:	mov    eax,0xb550c0fa
  437897:	out    dx,eax
  437898:	out    dx,eax
  437899:	test   DWORD PTR [ebp-0x1],ecx
  43789c:	out    0x3,al
  43789e:	or     BYTE PTR [ecx-0x14],cl
  4378a1:	mov    cl,BYTE PTR [edi-0x5b]
  4378a4:	rol    DWORD PTR [ebx],1
  4378a6:	add    BYTE PTR [eax],al
  4378a8:	aad    0x92
  4378aa:	lods   al,BYTE PTR ds:[esi]
  4378ab:	addps  xmm2,XMMWORD PTR [edi+0x9d5165b]
  4378b2:	lahf   
  4378b3:	sub    BYTE PTR [edx+0x12],0x89
  4378b7:	aad    0xf4
  4378b9:	xchg   edx,eax
  4378ba:	pop    ss
  4378bb:	out    0x21,al
  4378bd:	imul   ebp,DWORD PTR [esi-0x32],0xffffffe6
  4378c1:	nop
  4378c2:	add    BYTE PTR [edx+eax*8+0x795706eb],ch
  4378c9:	sti    
  4378ca:	(bad)  
  4378cb:	call   0x734b342d
  4378d0:	push   eax
  4378d1:	mov    eax,ds:0x91d6e912
  4378d6:	add    al,0xf8
  4378d8:	xlat   BYTE PTR ds:[ebx]
  4378d9:	ret    
  4378da:	adc    esi,DWORD PTR [ebx+0x68]
  4378dd:	sahf   
  4378de:	adc    ch,cl
  4378e0:	(bad)  
  4378e1:	mov    WORD PTR [edx-0x23],?
  4378e4:	dec    ebp
  4378e5:	rol    DWORD PTR [edi],cl
  4378e7:	bound  edx,QWORD PTR [ebx]
  4378e9:	bound  ecx,QWORD PTR [eax-0x6d731e03]
  4378ef:	pop    ebp
  4378f0:	ror    BYTE PTR [ecx],0x0
  4378f3:	call   0xf9f272f8
  4378f8:	lods   al,BYTE PTR ds:[esi]
  4378f9:	dec    edi
  4378fa:	bound  ebx,QWORD PTR [edx+0x74bde73e]
  437900:	pop    edi
  437901:	js     0x4378bf
  437903:	(bad)  
  437905:	or     DWORD PTR [edx+0x60],esp
  437908:	push   eax
  437909:	mov    ds:0xe912,al
  43790e:	(bad)  
  43790f:	outs   dx,BYTE PTR ds:[esi]
  437910:	or     eax,0x626a05c7
  437915:	loopne 0x43796f
  437917:	mov    ds:0xe6d6e912,al
  43791c:	mov    esi,0xbc905fec
  437921:	xlat   BYTE PTR ds:[ebx]
  437922:	(bad)  
  437923:	or     DWORD PTR [ebp-0x75711954],eax
  437929:	ins    DWORD PTR es:[edi],dx
  43792a:	loopne 0x437935
  43792c:	add    BYTE PTR [edx+0x16],ch
  43792f:	data16 jge 0x437952
  437932:	fcmovu st,st(7)
  437934:	push   ecx
  437935:	(bad)  
  437936:	dec    ebp
  437937:	cmp    ah,BYTE PTR [edx+0x3a]
  43793a:	hlt    
  43793b:	mov    cs,WORD PTR [edx+0x0]
  43793e:	xor    BYTE PTR [eax+0x1052fc3d],dl
  437944:	mov    ?,WORD PTR [eax-0x74fff6de]
  43794a:	bound  edx,QWORD PTR [ecx]
  43794c:	add    BYTE PTR [esi-0x78c],0xa4
  437953:	or     DWORD PTR [ecx],ecx
  437955:	add    edx,ebp
  437957:	stc    
  437958:	adc    DWORD PTR [esi-0x7bb],0x8b0d5f87
  437962:	mov    edx,0x48458315
  437967:	xchg   esi,eax
  437968:	adc    al,0xf
  43796a:	ja     0x4379e3
  43796c:	mov    esp,0xf908fc16
  437971:	pop    ebp
  437972:	add    BYTE PTR [eax],al
  437974:	loopne 0x437913
  437976:	adc    BYTE PTR [edx],ch
  437978:	ss push 0xcb6fe8cc
  43797e:	xrelease mov DWORD PTR [edx],esi
  437981:	mov    ds:0x6abc000e,al
  437986:	add    BYTE PTR [esi-0x7fc],0x57
  43798d:	cld    
  43798e:	pop    ebp
  43798f:	rcr    DWORD PTR [eax+ebp*2],cl
  437992:	add    al,BYTE PTR [esi-0x88c]
  437998:	das    
  437999:	iret   
  43799a:	add    ecx,DWORD PTR [ecx+0xea1fa]
  4379a0:	jl     0x4379bd
  4379a2:	idiv   DWORD PTR [ecx]
  4379a4:	dec    ecx
  4379a5:	clc    
  4379a6:	push   es
  4379a7:	mov    gs,WORD PTR [edx]
  4379a9:	push   cs
  4379aa:	add    BYTE PTR [eax],al
  4379ac:	test   DWORD PTR [edi+0x87c16bc],0x6279f97b
  4379b6:	pop    edi
  4379b7:	pmullw mm0,mm4
  4379ba:	mov    WORD PTR [esp+edx*1-0x75f7024d],cs
  4379c1:	test   BYTE PTR [ebp-0x28d2086],0x61
  4379c8:	dec    esi
  4379c9:	add    bl,dh
  4379cb:	int3   
  4379cc:	aaa    
  4379cd:	out    0xc5,eax
  4379cf:	adc    edi,DWORD PTR [ebx-0x3c4770a7]
  4379d5:	jb     0x4379d4
  4379d7:	or     BYTE PTR [eax],al
  4379d9:	add    BYTE PTR [ebx-0x24],ch
  4379dc:	mov    ah,0x12
  4379de:	aad    0x72
  4379e0:	mov    dl,BYTE PTR [edx-0x23]
  4379e3:	ficom  DWORD PTR [eax]
  4379e5:	(bad)  
  4379e7:	sub    al,0x10
  4379e9:	or     DWORD PTR [ebx-0x44],ecx
  4379ec:	mov    ebx,0x8a72d512
  4379f1:	dec    edx
  4379f2:	leave  
  4379f3:	xlat   BYTE PTR ds:[ebx]
  4379f4:	into   
  4379f5:	pop    es
  4379f6:	pop    ebp
  4379f7:	data16 adc al,0x85
  4379fa:	dec    ebx
  4379fb:	mov    esi,0xc1d5000e
  437a00:	or     al,0x26
  437a02:	lahf   
  437a03:	adc    edx,DWORD PTR [ecx-0x18]
  437a06:	mov    ?,WORD PTR [edx-0x3]
  437a09:	call   ebp
  437a0b:	jno    0x4379e4
  437a0d:	adc    edx,DWORD PTR [esi-0x51]
  437a10:	jb     0x437a74
  437a12:	pop    esp
  437a13:	repz mov ah,0x12
  437a16:	aad    0x70
  437a18:	mov    WORD PTR [edx-0x29c9f],ss
  437a1e:	scas   al,BYTE PTR es:[edi]
  437a1f:	syscall 
  437a21:	mov    dl,0x5a
  437a23:	ffree  st(3)
  437a25:	aas    
  437a26:	aad    0x4a
  437a28:	mov    dl,BYTE PTR [ebx+ebx*2-0x2afff465]
  437a2f:	dec    edx
  437a30:	push   edx
  437a31:	fdivp  st(3),st
  437a33:	or     eax,esi
  437a35:	xchg   ecx,eax
  437a36:	sub    eax,0xe003e6fc
  437a3b:	dec    eax
  437a3c:	out    0x8c,al
  437a3e:	add    BYTE PTR [eax],al
  437a40:	dec    edi
  437a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a42:	icebp  
  437a43:	add    edx,ebp
  437a45:	push   es
  437a46:	(bad)  
  437a47:	cmp    eax,0x87e9f9ce
  437a4c:	mov    ds:0x5079f262,eax
  437a51:	aad    0xde
  437a53:	int3   
  437a54:	pop    edi
  437a55:	jl     0x437ad2
  437a57:	add    al,0xd5
  437a59:	or     DWORD PTR [esi+0x42],ebp
  437a5c:	sub    eax,0x1c79ced5
  437a61:	(bad)  
  437a62:	sbb    al,0x8
  437a64:	call   0xe709:0xd28c5994
  437a6b:	mov    WORD PTR [edi],ss
  437a6d:	jb     0x437a62
  437a6f:	jnp    0x437a6d
  437a71:	bound  ecx,QWORD PTR [edx]
  437a73:	fstp   QWORD PTR [ecx+0x6d]
  437a76:	inc    esp
  437a77:	inc    ebp
  437a78:	sbb    DWORD PTR [esi-0x55],edx
  437a7b:	dec    eax
  437a7c:	adc    DWORD PTR [esi+0x3c],edx
  437a7f:	(bad)  
  437a80:	jmp    0x2057f60b
  437a85:	(bad)  
  437a86:	and    al,0xc
  437a88:	clc    
  437a89:	aaa    
  437a8a:	adc    ecx,edx
  437a8c:	or     edi,DWORD PTR [edx+0x47]
  437a8f:	adc    dl,ch
  437a91:	or     edx,ebx
  437a93:	jg     0x437a7f
  437a95:	push   es
  437a96:	out    0x3,eax
  437a98:	mov    al,0xa
  437a9a:	ins    BYTE PTR es:[edi],dx
  437a9b:	loopne 0x437a93
  437a9d:	or     DWORD PTR [esi-0x31],ebx
  437aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437aa1:	mov    ds,WORD PTR [edi-0x60]
  437aa4:	add    BYTE PTR [eax],al
  437aa6:	out    0x9,eax
  437aa8:	out    0x8,eax
  437aaa:	inc    esp
  437aab:	adc    eax,0x81458c98
  437ab0:	add    bh,bl
  437ab2:	(bad)  
  437ab3:	or     DWORD PTR [ecx],ecx
  437ab5:	ja     0x437a5c
  437ab7:	xor    edi,DWORD PTR [esi]
  437ab9:	jo     0x437a4d
  437abb:	pop    esi
  437abc:	xor    DWORD PTR [eax],0x50
  437abf:	xchg   ecx,eax
  437ac0:	mov    esp,0x8709d6ff
  437ac5:	mov    ah,0xc2
  437ac7:	adc    BYTE PTR [ebx+0x9d170],al
  437acd:	out    dx,al
  437ace:	test   DWORD PTR [ebp-0x6821454],edi
  437ad4:	(bad)  
  437ad5:	call   0x7139a7b0
  437ada:	sbb    ebx,DWORD PTR [edx+0x35]
  437add:	scas   al,BYTE PTR es:[edi]
  437ade:	sbb    al,0xc3
  437ae0:	or     BYTE PTR [esi+0x6262b4ea],bl
  437ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ae7:	out    0xcc,eax
  437ae9:	retf   
  437aea:	pop    ecx
  437aeb:	rol    DWORD PTR [edi],1
  437aed:	jo     0x437b1a
  437aef:	pop    esi
  437af0:	(bad)  
  437af1:	loopne 0x437b59
  437af3:	mov    eax,ds:0x8cd6e912
  437af8:	push   eax
  437af9:	std    
  437afa:	pop    eax
  437afb:	cmp    DWORD PTR [eax-0x77f62909],0x4060c7f5
  437b05:	cmc    
  437b06:	popa   
  437b07:	rol    BYTE PTR [edi],cl
  437b09:	jae    0x437b0b
  437b0b:	add    BYTE PTR [esi-0x67],ah
  437b0e:	adc    ch,cl
  437b10:	(bad)  
  437b11:	xchg   BYTE PTR [eax-0x23],bh
  437b14:	dec    ecx
  437b15:	(bad)  
  437b18:	loop   0x437b2c
  437b1a:	test   DWORD PTR [ecx+0x62],edi
  437b1d:	cld    
  437b1e:	(bad)  
  437b1f:	call   0x98574541
  437b24:	(bad)  
  437b25:	daa    
  437b26:	mov    bh,0x29
  437b29:	je     0x437ab0
  437b2b:	add    BYTE PTR [ecx-0x1b],al
  437b2e:	test   BYTE PTR [esi+eax*4-0x23],dl
  437b32:	adc    BYTE PTR [eax-0x500],0x9a
  437b39:	xchg   esp,eax
  437b3a:	mov    al,0xb8
  437b3c:	push   0xd
  437b3e:	add    cl,ch
  437b40:	clc    
  437b41:	push   es
  437b42:	add    BYTE PTR [eax],al
  437b44:	dec    edx
  437b45:	mov    ?,WORD PTR [ebx+esi*4]
  437b48:	pop    edx
  437b49:	mov    dh,0xdd
  437b4b:	inc    bp
  437b4d:	popf   
  437b4e:	mov    eax,0xfb0d2c16
  437b53:	leave  
  437b54:	aad    0x73
  437b56:	sti    
  437b57:	(bad)  
  437b58:	cmp    al,0x12
  437b5a:	scas   al,BYTE PTR es:[edi]
  437b5b:	mov    esi,0x394e9c
  437b60:	xor    esi,DWORD PTR [eax+0x612abb94]
  437b66:	stc    
  437b67:	jmp    DWORD PTR [edi-0xa]
  437b6a:	(bad)  
  437b6b:	(bad)  
  437b6c:	cld    
  437b6d:	xor    edx,edx
  437b6f:	mov    DWORD PTR [eax],eax
  437b71:	add    cl,ch
  437b73:	fld    QWORD PTR [edx-0x3cdc0bab]
  437b79:	jle    0x437b18
  437b7b:	or     BYTE PTR [edi+0x4097694],ch
  437b81:	add    ah,ch
  437b83:	lea    ecx,[ebp-0x10]
  437b86:	retf   0xd9bc
  437b89:	mov    esi,esp
  437b8b:	or     eax,0x9e2c095e
  437b90:	push   cs
  437b91:	add    BYTE PTR [edi+eax*1+0x100498ae],ch
  437b98:	add    BYTE PTR [eax],al
  437b9a:	aaa    
  437b9b:	ss or  eax,0xf6f6d088
  437ba1:	inc    eax
  437ba2:	test   al,0x7
  437ba4:	scas   al,BYTE PTR es:[edi]
  437ba5:	cwde   
  437ba6:	aad    0x79
  437ba8:	or     al,BYTE PTR [eax]
  437baa:	aad    0xeb
  437bac:	retf   
  437bad:	adc    ebx,DWORD PTR [esi-0x7e]
  437bb0:	add    eax,0x8641e188
  437bb5:	nop
  437bb6:	cmp    DWORD PTR [eax-0x3],eax
  437bb9:	call   FWORD PTR [esi-0x73]
  437bbc:	ins    DWORD PTR es:[edi],dx
  437bbd:	stc    
  437bbe:	adc    eax,0xaf10b45f
  437bc3:	sbb    al,0xda
  437bc5:	int3   
  437bc6:	outs   dx,BYTE PTR ds:[esi]
  437bc7:	jmp    0x437b8f
  437bc9:	mul    DWORD PTR [eax-0x6a]
  437bcc:	pop    es
  437bcd:	lock pop esp
  437bcf:	ret    0x12b7
  437bd2:	aad    0x72
  437bd4:	fild   DWORD PTR [esi+0x1a5d0000]
  437bda:	or     al,BYTE PTR [eax]
  437bdc:	aad    0xb
  437bde:	adc    eax,0xb6de5e62
  437be3:	add    al,0xd9
  437be5:	jb     0x437be4
  437be7:	popa   
  437be8:	push   es
  437be9:	push   esp
  437bea:	fild   DWORD PTR [esi]
  437bec:	gs jp  0x437bfa
  437bef:	add    ch,dl
  437bf1:	jae    0x437bbb
  437bf3:	test   DWORD PTR [edx+ebx*8-0x50],0x8672d512
  437bfb:	sbb    al,0x30
  437bfd:	cmp    al,ah
  437bff:	aas    
  437c00:	aad    0xdb
  437c02:	iret   
  437c03:	sti    
  437c04:	dec    esp
  437c05:	sbb    eax,0xfdfe8374
  437c0a:	cmc    
  437c0b:	and    al,0x9
  437c0d:	into   
  437c0e:	fadd   QWORD PTR [ebp+0x15]
  437c11:	jno    0x437b99
  437c13:	mov    BYTE PTR [ecx+0x7afffd37],al
  437c19:	inc    ecx
  437c1a:	std    
  437c1b:	call   ebp
  437c1d:	dec    ebx
  437c1e:	jbe    0x437c55
  437c20:	call   0x5993:0x34d3e10a
  437c27:	fisttp QWORD PTR [ecx-0x2534a199]
  437c2d:	out    0xdf,eax
  437c2f:	mov    ebx,0x3e6f84d
  437c34:	int3   
  437c35:	xchg   edi,eax
  437c36:	pop    edi
  437c37:	mov    ebx,0x8ae709e7
  437c3c:	add    BYTE PTR [eax],al
  437c3e:	in     eax,dx
  437c3f:	cmc    
  437c40:	pop    esi
  437c41:	pop    ss
  437c42:	mov    ds:0xcc0fa75e,al
  437c47:	xchg   edi,eax
  437c48:	jg     0x437c06
  437c4a:	(bad)  
  437c4b:	or     edi,esp
  437c4d:	mov    bl,BYTE PTR [ebp-0x1904a1ef]
  437c53:	xchg   ecx,eax
  437c54:	jecxz  0x437c5c
  437c56:	pop    eax
  437c57:	cmp    BYTE PTR [ebx],0xd
  437c5a:	aad    0x9
  437c5c:	bnd ret 0x98c6
  437c60:	xlat   BYTE PTR ds:[ebx]
  437c61:	sub    DWORD PTR [eax],edx
  437c63:	call   0xcd9be31d
  437c68:	(bad)  
  437c69:	xchg   DWORD PTR [ecx+0x5bded712],ecx
  437c6f:	call   0x8ce:0x9d50e8f
  437c76:	ja     0x437cb2
  437c78:	rcr    esi,0xd3
  437c7b:	cdq    
  437c7c:	outs   dx,DWORD PTR ds:[esi]
  437c7d:	push   cs
  437c7e:	aad    0x9
  437c80:	out    0x48,al
  437c82:	push   edx
  437c83:	xchg   edx,eax
  437c84:	arpl   WORD PTR [esi],cx
  437c86:	aad    0x9
  437c88:	sub    eax,0x685d868b
  437c8d:	jp     0x437c64
  437c8f:	or     bh,ah
  437c91:	add    edi,DWORD PTR [eax]
  437c93:	adc    edx,esi
  437c95:	lods   eax,DWORD PTR ds:[esi]
  437c96:	jae    0x437c81
  437c98:	and    esp,eax
  437c9a:	mov    edx,0x5de50073
  437c9f:	inc    edi
  437ca0:	mov    edi,0xa8000080
  437ca5:	adc    DWORD PTR [edx+0x3fc6b998],esi
  437cab:	jmp    0xe64f4efd
  437cb0:	inc    ecx
  437cb1:	(bad)  [esi-0x436ea215]
  437cb7:	(bad)  
  437cb9:	or     DWORD PTR [ebp+0x9d6d9],esi
  437cbf:	add    cl,BYTE PTR [eax]
  437cc1:	xchg   DWORD PTR [ebx+0x39],edi
  437cc4:	lods   al,BYTE PTR ds:[esi]
  437cc5:	inc    esp
  437cc6:	jp     0x437c51
  437cc8:	dec    ebp
  437cc9:	mov    edx,0x1d29ee0b
  437cce:	scas   al,BYTE PTR es:[edi]
  437ccf:	(bad)  
  437cd0:	pop    ebp
  437cd1:	cmp    BYTE PTR [edx+0x3a],ah
  437cd4:	mov    bh,0x84
  437cd6:	dec    eax
  437cd7:	icebp  
  437cd8:	and    BYTE PTR [edi],al
  437cda:	nop
  437cdb:	inc    ecx
  437cdc:	retf   
  437cdd:	or     DWORD PTR [eax],eax
  437cdf:	out    0x80,al
  437ce1:	cmp    DWORD PTR [eax-0x7af62929],0x1c91c539
  437ceb:	clc    
  437cec:	mov    eax,ds:0x1e6213c9
  437cf1:	cli    
  437cf2:	or     BYTE PTR [edi-0x16ed6992],dl
  437cf8:	(bad)  
  437cf9:	test   BYTE PTR [eax-0xf],dl
  437cfc:	dec    esi
  437cfd:	std    
  437cfe:	push   cs
  437cff:	bound  eax,QWORD PTR [esi-0x63]
  437d02:	adc    ch,cl
  437d04:	(bad)  
  437d05:	pusha  
  437d06:	inc    eax
  437d07:	std    
  437d08:	add    BYTE PTR [eax],al
  437d0a:	daa    
  437d0b:	stc    
  437d0c:	and    eax,0xe94cf8b3
  437d11:	bound  ebx,QWORD PTR [ebx-0x20ca7493]
  437d17:	pop    ecx
  437d18:	xchg   DWORD PTR [eax],eax
  437d1a:	sbb    al,0x95
  437d1c:	push   cs
  437d1d:	add    BYTE PTR [edx+edx*4-0x6f1d03b3],ch
  437d24:	mov    eax,0x982b8
  437d29:	jmp    0x437d00
  437d2b:	xchg   edx,eax
  437d2c:	push   ebp
  437d2d:	or     al,0x92
  437d2f:	xchg   edx,eax
  437d30:	sbb    al,0xb3
  437d32:	mov    ds:0x7566daba,al
  437d37:	cmp    DWORD PTR [eax-0x4f693ea],0xbc9105ce
  437d41:	push   ss
  437d42:	jl     0x437d4d
  437d44:	cmp    DWORD PTR [ecx+eiz*8],0xffffffa8
  437d48:	cmp    DWORD PTR [eax+0x6c],eax
  437d4b:	xchg   edx,eax
  437d4c:	push   ebp
  437d4d:	or     cl,dh
  437d4f:	aad    0x6
  437d51:	test   BYTE PTR [eax+ecx*1+0xd170000],bh
  437d58:	lods   eax,DWORD PTR ds:[esi]
  437d59:	fadd   DWORD PTR [esi-0x3b7506b7]
  437d5f:	xchg   esp,eax
  437d60:	push   cs
  437d61:	add    BYTE PTR [edi+edx*4],bh
  437d64:	adc    BYTE PTR [eax],al
  437d66:	cmp    al,0x9
  437d68:	and    esi,edi
  437d6a:	test   edi,0x5675
  437d70:	xchg   edx,eax
  437d71:	fsub   st(1),st
  437d73:	dec    di
  437d75:	lock or BYTE PTR [eax-0xc],0x72
  437d7a:	add    dh,BYTE PTR [eax+0x54]
  437d80:	jmp    0x437d24
  437d82:	cwde   
  437d83:	mov    eax,0x8b000912
  437d88:	lods   al,BYTE PTR ds:[esi]
  437d89:	add    DWORD PTR [eax+0x3fd7fd1c],ecx
  437d8f:	adc    al,0xeb
  437d91:	mov    ds:0x5cd5b998,al
  437d96:	std    
  437d97:	call   FWORD PTR [esi+0x2]
  437d9a:	sbb    BYTE PTR [ebp+0x1c755b0d],al
  437da0:	retf   
  437da1:	xlat   BYTE PTR ds:[ebx]
  437da2:	mov    edi,DWORD PTR [ebx+ecx*8+0x15f8fd72]
  437da9:	aaa    
  437daa:	mov    ah,0x10
  437dac:	out    dx,eax
  437dad:	pop    ss
  437dae:	out    0xcc,al
  437db0:	scas   eax,DWORD PTR es:[edi]
  437db1:	inc    esp
  437db2:	jl     0x437d44
  437db4:	dec    ebp
  437db5:	pop    esp
  437db6:	std    
  437db7:	call   FWORD PTR [eax-0x6a]
  437dba:	sub    dh,al
  437dbc:	dec    esi
  437dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437dbe:	cmc    
  437dbf:	xchg   BYTE PTR [ebp-0x22],ah
  437dc2:	adc    eax,0x11c7d500
  437dc7:	bound  eax,QWORD PTR [esi+0x4506e5d0]
  437dcd:	jmp    0x873e:0x6fd50015
  437dd4:	add    BYTE PTR [eax],al
  437dd6:	pop    ebp
  437dd7:	mov    dh,0x15
  437dd9:	add    ch,dl
  437ddb:	out    0xbe,eax
  437ddd:	repz (bad) 
  437ddf:	fisub  DWORD PTR [ebx-0x18d2aee]
  437de5:	jge    0x437e07
  437de7:	push   esi
  437de8:	outs   dx,BYTE PTR ds:[esi]
  437de9:	stc    
  437dea:	ficom  DWORD PTR [ebx]
  437dec:	xchg   ecx,eax
  437ded:	(bad)  
  437dee:	(bad)  
  437def:	jb     0x437dee
  437df1:	test   BYTE PTR [ebp+0x7e],cl
  437df4:	pop    ss
  437df5:	add    ch,dl
  437df7:	je     0x437e06
  437df9:	add    ch,dl
  437dfb:	jb     0x437e17
  437dfd:	out    dx,al
  437dfe:	dec    esp
  437dff:	std    
  437e00:	sti    
  437e01:	xor    al,0xb
  437e03:	sbb    al,0xf1
  437e05:	or     BYTE PTR [edx],ch
  437e07:	(bad)  
  437e09:	add    edx,ebp
  437e0b:	jb     0x437df4
  437e0d:	test   BYTE PTR [ebx],cl
  437e0f:	or     DWORD PTR [ecx],ecx
  437e11:	push   edi
  437e12:	sti    
  437e13:	(bad)  
  437e14:	das    
  437e15:	cld    
  437e16:	pop    ebx
  437e17:	mov    ebp,0x79d3e996
  437e1c:	dec    edi
  437e1d:	sbb    ebp,edx
  437e1f:	or     DWORD PTR [esi-0x2d],ebp
  437e22:	out    0x8f,al
  437e24:	pop    edi
  437e25:	stos   DWORD PTR es:[edi],eax
  437e26:	(bad)  
  437e27:	or     edi,esp
  437e29:	jnp    0x437df4
  437e2b:	clc    
  437e2c:	imul   eax,ebx,0x17df8ec6
  437e32:	push   eax
  437e33:	shr    dh,cl
  437e35:	jge    0x437e9c
  437e37:	mov    eax,ds:0x3f9
  437e3c:	aad    0x8e
  437e3e:	lods   al,BYTE PTR ds:[esi]
  437e3f:	jae    0x437e8e
  437e41:	div    cl
  437e43:	jle    0x437eaa
  437e45:	sahf   
  437e46:	rol    DWORD PTR [ebx],1
  437e48:	aad    0x5a
  437e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437e4b:	pop    ss
  437e4c:	cmp    bh,dl
  437e4e:	cld    
  437e4f:	cmp    eax,0x7e1136f7
  437e54:	push   cs
  437e55:	adc    ch,BYTE PTR [edi+edx*8-0x28]
  437e59:	pop    ecx
  437e5a:	pusha  
  437e5b:	xchg   ebx,eax
  437e5c:	mov    esp,esi
  437e5e:	out    0x3,al
  437e60:	mov    bh,0x90
  437e62:	aaa    
  437e63:	stos   DWORD PTR es:[edi],eax
  437e64:	out    0x9,eax
  437e66:	out    0x2,eax
  437e68:	fs (bad) 
  437e6a:	in     eax,0x7
  437e6c:	aad    0x9
  437e6e:	mov    dl,cl
  437e70:	pop    ebx
  437e71:	xchg   edx,eax
  437e72:	fwait
  437e73:	sbb    dl,ch
  437e75:	or     DWORD PTR [esi],edi
  437e77:	jge    0x437e6f
  437e79:	mov    esp,0x9751eaa5
  437e7e:	out    0x7,eax
  437e80:	aad    0x9
  437e82:	dec    ecx
  437e83:	push   ebp
  437e84:	idiv   DWORD PTR [edx-0x5dbd04c0]
  437e8a:	add    bh,bl
  437e8c:	(bad)  
  437e8d:	or     ebp,edi
  437e8f:	mov    ds:0xffbc915e,al
  437e94:	(bad)  
  437e95:	or     DWORD PTR [ecx],ecx
  437e97:	push   esi
  437e98:	push   0xd6e8fd5b
  437e9d:	mov    edi,0x7986
  437ea2:	jge    0x437e9b
  437ea4:	(bad)  
  437ea5:	call   0x1d270433
  437eaa:	sbb    BYTE PTR [esi-0x34],cl
  437ead:	xor    esp,DWORD PTR [edx+ebx*4+0x49e87af9]
  437eb4:	mov    esi,DWORD PTR [edi+0x3d]
  437eb7:	or     DWORD PTR [eax],eax
  437eb9:	jmp    0x5f4341d1
  437ebe:	adc    ebx,DWORD PTR [ebx+0x6d]
  437ec1:	out    0x6c,eax
  437ec3:	fnsave [esi]
  437ec5:	jmp    0x6a83474d
  437eca:	push   ss
  437ecb:	push   es
  437ecc:	iret   
  437ecd:	inc    ebx
  437ece:	push   eax
  437ecf:	popa   
  437ed0:	sbb    DWORD PTR [edi+0x677ce800],ebp
  437ed6:	sub    DWORD PTR [ecx],ecx
  437ed8:	add    cl,ch
  437eda:	(bad)  
  437edb:	(bad)  
  437edc:	xor    ecx,DWORD PTR [edi-0x164360af]
  437ee2:	(bad)  
  437ee3:	or     DWORD PTR [eax],eax
  437ee5:	jl     0x437ebf
  437ee7:	out    0x7c,eax
  437ee9:	aas    
  437eea:	icebp  
  437eeb:	or     DWORD PTR [eax],eax
  437eed:	jmp    0x316355c8
  437ef2:	stc    
  437ef3:	or     DWORD PTR [eax],eax
  437ef5:	jmp    0xe8580e95
  437efa:	(bad)  
  437efb:	or     DWORD PTR [eax+0x12504f],edx
  437f01:	push   esp
  437f02:	xlat   BYTE PTR ds:[ebx]
  437f03:	leave  
  437f04:	jl     0x437f06
  437f06:	add    BYTE PTR [eax],al
  437f08:	sub    eax,0xfd003502
  437f0d:	add    eax,0x15137c00
  437f12:	rol    bl,0x64
  437f15:	pop    es
  437f16:	add    BYTE PTR [eax],al
  437f18:	in     al,dx
  437f19:	(bad)  
  437f1a:	retf   
  437f1b:	int3   
  437f1c:	sbb    BYTE PTR [ecx],0xcc
  437f1f:	int3   
  437f20:	scas   eax,DWORD PTR es:[edi]
  437f21:	int    0x4d
  437f23:	mov    ebx,DWORD PTR [ebp-0x72]
  437f26:	fiadd  WORD PTR [ecx]
  437f28:	mov    ebx,0xe45d141
  437f2e:	rol    BYTE PTR [ebp-0x2e16a5b2],0x54
  437f35:	cmp    edi,DWORD PTR [esp+ecx*8-0x3333e720]
  437f3c:	rcr    BYTE PTR [eax],0xcc
  437f3f:	int3   
  437f40:	not    esp
  437f42:	mov    ebx,0x4b0d6c16
  437f47:	adc    DWORD PTR ds:0x83227755,0xffffff93
  437f4e:	cwde   
  437f4f:	mov    eax,0x8b000d8a
  437f54:	cmp    al,0x1
  437f56:	or     DWORD PTR [eax+0x64],0xffffffd5
  437f5a:	sbb    edx,DWORD PTR [ecx]
  437f5c:	repz dec esp
  437f5e:	or     eax,0x8301748b
  437f63:	push   eax
  437f64:	xor    al,0xa
  437f66:	scas   al,BYTE PTR es:[edi]
  437f67:	cwde   
  437f68:	xchg   ebp,eax
  437f69:	repnz (bad) 
  437f6b:	inc    DWORD PTR [eax]
  437f6d:	add    bh,al
  437f6f:	cld    
  437f70:	jl     0x437f3b
  437f72:	mov    ds:0x344882fe,al
  437f77:	(bad)  
  437f78:	dec    edi
  437f79:	adc    al,0xa6
  437f7b:	test   DWORD PTR [eax-0x77f303ea],edi
  437f81:	sbb    al,0xd5
  437f83:	push   ecx
  437f84:	push   0x40
  437f86:	jmp    0x4ca5ba7e
  437f8b:	fld    TBYTE PTR [ebx+0x7c62d512]
  437f91:	mov    BYTE PTR [ecx],ch
  437f93:	cmp    ebp,edi
  437f95:	(bad)  
  437f96:	jle    0x437f3b
  437f98:	inc    eax
  437f99:	int3   
  437f9a:	or     DWORD PTR [edi-0x595e33c0],ebx
  437fa0:	inc    eax
  437fa1:	int3   
  437fa2:	cdq    
  437fa3:	adc    eax,0x2126ec75
  437fa8:	jne    0x437f81
  437faa:	dec    esi
  437fab:	aam    0x5b
  437fad:	mov    ?,WORD PTR [edx+0x287d68d7]
  437fb3:	imul   edi,ebp,0xffffffc0
  437fb6:	push   ebp
  437fb7:	push   ds
  437fb8:	adc    al,BYTE PTR [eax]
  437fba:	aad    0x5a
  437fbc:	std    
  437fbd:	call   ebp
  437fbf:	ds mov edi,0x76571d84
  437fc5:	push   eax
  437fc6:	int    0xea
  437fc8:	(bad)  
  437fc9:	(bad)  
  437fcb:	mov    ds:0x5b058511,al
  437fd0:	rol    BYTE PTR [eax+eax*1+0x7636ed00],cl
  437fd7:	lds    edx,FWORD PTR [ecx+ecx*8+0x57c987fb]
  437fde:	push   0x40
  437fe0:	jmp    0x5e576bc0
  437fe5:	xchg   edx,eax
  437fe6:	cmc    
  437fe7:	test   DWORD PTR [esi],ecx
  437fe9:	add    BYTE PTR [ebx-0x78],dl
  437fec:	leave  
  437fed:	aaa    
  437fee:	push   0x40
  437ff0:	leave  
  437ff1:	fucomi st,st(3)
  437ff3:	adc    ebx,DWORD PTR [esi+0x72]
  437ff6:	cmc    
  437ff7:	test   BYTE PTR [esi],cl
  437ff9:	pop    edi
  437ffa:	push   esp
  437ffb:	mov    edi,0x7bef092c
  438000:	loope  0x438002
  438002:	fcmovb st,st(3)
  438004:	out    0xb8,al
  438006:	imul   ecx,DWORD PTR [edx-0x77],0xfffffff3
  43800a:	pop    ebp
  43800b:	mov    ebx,0xfc1784e6
  438010:	cdq    
  438011:	sbb    BYTE PTR [esp+edi*8],0x50
  438015:	neg    DWORD PTR [esi+0xf]
  438018:	rol    BYTE PTR [esp+ecx*1-0x5372204],cl
  43801f:	lds    edx,FWORD PTR [edi+0x33]
  438022:	adc    al,0x66
  438024:	das    
  438025:	mov    bl,0x33
  438027:	inc    ebx
  438028:	xchg   ecx,eax
  438029:	inc    esi
  43802a:	fwait
  43802b:	aas    
  43802c:	mov    DWORD PTR [esi-0x4d],eax
  43802f:	aas    
  438030:	mov    eax,ds:0x993fab46
  438035:	inc    esi
  438036:	sbb    al,0x7b
  438038:	add    BYTE PTR [eax],al
  43803a:	mov    cl,0x8b
  43803c:	jnp    0x438061
  43803e:	pop    es
  43803f:	test   esp,ebx
  438041:	popa   
  438042:	rol    BYTE PTR [eax-0x61],0x4
  438046:	aad    0x9
  438048:	out    0x1a,eax
  43804a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43804b:	test   DWORD PTR [ebx],edx
  43804d:	ret    0x82f4
  438050:	mov    ebx,0xe5f07538
  438055:	je     0x43804e
  438057:	or     bh,BYTE PTR [ecx]
  438059:	(bad)  
  43805a:	and    eax,0x97cc148
  43805f:	int    0x6
  438061:	ret    
  438062:	rcl    DWORD PTR [ecx-0x16],1
  438065:	in     eax,dx
  438066:	sbb    ebx,DWORD PTR ss:[ecx]
  438069:	mov    BYTE PTR [eax],ch
  43806b:	rol    dl,cl
  43806d:	inc    BYTE PTR [ebp+0x560139be]
  438073:	cmp    al,0x73
  438075:	adc    eax,0xad009edc
  43807a:	std    
  43807b:	test   DWORD PTR ss:[ecx],esp
  43807e:	push   ss
  43807f:	jmp    0x376dae0a
  438084:	call   0xf993fc12
  438089:	dec    edi
  43808a:	jle    0x438099
  43808c:	mov    cl,0x27
  43808e:	lods   al,BYTE PTR ds:[esi]
  43808f:	fs jp  0x438037
  438092:	and    ecx,DWORD PTR [esi+0x45941ce3]
  438098:	int3   
  438099:	sbb    al,0x5c
  43809b:	gs jge 0x43805b
  43809e:	add    BYTE PTR [eax],al
  4380a0:	(bad)  [ebp-0x465a0ebd]
  4380a6:	test   cl,ah
  4380a8:	dec    ebp
  4380a9:	retf   0x6207
  4380ac:	test   eax,0x55f18502
  4380b1:	dec    esi
  4380b2:	stc    
  4380b3:	mov    edx,0x81538f16
  4380b8:	cs ret 
  4380ba:	sti    
  4380bb:	scas   al,BYTE PTR es:[edi]
  4380bc:	pop    ebx
  4380bd:	mov    ecx,0x9d6e913
  4380c2:	add    cl,ch
  4380c4:	(bad)  
  4380c5:	dec    eax
  4380c6:	xor    BYTE PTR [ebp+0x140009e2],0xd7
  4380cd:	or     DWORD PTR [eax],eax
  4380cf:	fs daa 
  4380d1:	aam    0x31
  4380d3:	iret   
  4380d4:	push   ebp
  4380d5:	adc    eax,0xf462e981
  4380da:	clc    
  4380db:	outs   dx,DWORD PTR ds:[esi]
  4380dc:	mov    edx,edi
  4380de:	(bad)  
  4380df:	call   0xfd93fcc1
  4380e4:	(bad)  
  4380e5:	or     DWORD PTR [edi+0x4b56365],eax
  4380eb:	jmp    0xd870fc6
  4380f0:	xchg   ebx,eax
  4380f1:	lea    esi,[eax]
  4380f3:	add    BYTE PTR [esi+edi*8-0x1],dh
  4380f7:	(bad)  
  4380f8:	cmp    al,0xd1
  4380fa:	(bad)  
  4380fb:	jmp    0x438130
  4380fd:	sbb    edx,ecx
  4380ff:	data16 mov ch,0x31
  438102:	add    BYTE PTR [edx],0x0
  438105:	add    BYTE PTR [eax+eiz*1+0x13a8f83d],bh
  43810c:	jnp    0x4380cc
  43810e:	mov    esp,0xeefffff1
  438113:	dec    dx
  438115:	adc    DWORD PTR ds:0xbd057508,0xffffffd0
  43811c:	mov    eax,0xc018eeeb
  438121:	push   DWORD PTR [edx+0x3a]
  438124:	or     eax,0x8dd2bc00
  438129:	push   eax
  43812a:	ror    BYTE PTR [ecx],0x0
  43812d:	mov    DWORD PTR [eax],esi
  43812f:	jg     0x43818d
  438131:	or     ebp,DWORD PTR [ecx+ecx*1+0x9bc01b2]
  438138:	add    BYTE PTR [esi+0x25],ah
  43813b:	std    
  43813c:	jle    0x438104
  43813e:	xor    BYTE PTR [edi],cl
  438140:	pop    eax
  438141:	adc    al,0xac
  438143:	or     DWORD PTR [eax],eax
  438145:	dec    DWORD PTR [edx]
  438147:	jno    0x438157
  438149:	add    BYTE PTR [esp+ecx*4-0x2d],bh
  43814d:	je     0x4381c6
  43814f:	push   esi
  438150:	mov    al,0x44
  438152:	out    dx,eax
  438153:	or     ah,BYTE PTR [ecx]
  438155:	xchg   BYTE PTR [eax-0x1],cl
  438158:	(bad)  
  438159:	(bad)  
  43815a:	jmp    DWORD PTR [esi+0x96c1450]
  438160:	cli    
  438161:	jnp    0x438141
  438163:	iret   
  438164:	inc    esp
  438165:	cld    
  438166:	(bad)  
  438167:	cmp    eax,DWORD PTR [ecx]
  438169:	mov    DWORD PTR [eax],eax
  43816b:	add    BYTE PTR [esi-0x2a797cf3],al
  438171:	xchg   edx,eax
  438172:	adc    DWORD PTR [eax],eax
  438174:	aad    0xd9
  438176:	pop    ss
  438177:	mov    esi,0xf54e2b5e
  43817c:	push   esi
  43817d:	or     dh,bh
  43817f:	jnp    0x438145
  438181:	outs   dx,DWORD PTR ds:[esi]
  438182:	js     0x438146
  438184:	sub    eax,0x12f959bb
  438189:	sbb    BYTE PTR [ecx+0x68dfd1c4],al
  43818f:	inc    DWORD PTR [ecx-0x2bc86b5]
  438195:	jmp    0x64427958
  43819a:	js     0x438140
  43819c:	mov    cl,0x62
  43819e:	std    
  43819f:	call   ebp
  4381a1:	out    0x7d,eax
  4381a3:	push   eax
  4381a4:	shl    DWORD PTR [edx-0x3],0x84
  4381a8:	popa   
  4381a9:	in     al,0xc7
  4381ab:	add    al,0xd5
  4381ad:	bound  edi,QWORD PTR [edx-0x66]
  4381b0:	xor    eax,0xdfffd68
  4381b5:	jmp    0x65fd:0x62c9507d
  4381bc:	aam    0xd7
  4381be:	cmp    eax,0xf9025387
  4381c3:	call   FWORD PTR [edx-0x6d153276]
  4381c9:	jmp    0x438243
  4381cb:	xor    ch,0x57
  4381ce:	std    
  4381cf:	inc    DWORD PTR [eax]
  4381d1:	add    BYTE PTR [esi+0x28],dl
  4381d4:	jmp    DWORD PTR gs:[eax-0x62]
  4381d8:	or     DWORD PTR [eax],eax
  4381da:	aad    0xd7
  4381dc:	jne    0x438232
  4381de:	shl    DWORD PTR [edx-0x3],0x86
  4381e2:	inc    ecx
  4381e3:	in     al,dx
  4381e4:	mov    DWORD PTR [edx*8-0x566dfb9e],0xd503fb09
  4381ef:	sub    BYTE PTR [ecx-0x30],0xe6
  4381f3:	or     edi,esp
  4381f5:	jl     0x438248
  4381f7:	sub    DWORD PTR [ebx-0x76abcd02],0x7e
  4381fe:	ror    DWORD PTR [ecx+eax*4+0x5e74c906],0xb9
  438206:	and    ch,bl
  438208:	pop    edi
  438209:	adc    BYTE PTR [edi+edi*2+0x7b],bl
  43820d:	or     DWORD PTR [ebp+0x5b03e6fd],ebp
  438213:	test   ecx,ebp
  438215:	retf   
  438216:	out    0x9,al
  438218:	out    0x86,eax
  43821a:	sbb    DWORD PTR ds:0x9bdc54fd,ecx
  438220:	xchg   ebp,eax
  438221:	mul    cl
  438223:	add    bh,BYTE PTR [ecx+0x54]
  438226:	push   eax
  438227:	(bad)  
  438228:	scas   al,BYTE PTR es:[edi]
  438229:	imul   edx,DWORD PTR [ebx+0x22f97b82],0xcc03e6fe
  438233:	call   0xbe53:0xe1b8
  43823a:	popa   
  43823b:	add    eax,0x8b1b8137
  438240:	stos   DWORD PTR es:[edi],eax
  438241:	sub    BYTE PTR [ecx-0x1d],0xd9
  438245:	or     edi,esp
  438247:	les    esi,FWORD PTR [eax]
  438249:	or     DWORD PTR [esi+0x41],ebx
  43824c:	pop    edx
  43824d:	lds    ebx,FWORD PTR [esi+0x5b]
  438250:	fwait
  438251:	pop    dx
  438253:	push   0x0
  438255:	dec    esi
  438256:	jmp    0x4381de
  438258:	aas    
  438259:	mov    edx,0x7d503f2
  43825e:	bnd js 0x43820c
  438261:	push   edx
  438262:	cmp    ch,BYTE PTR [edx+0x5c]
  438265:	test   BYTE PTR [eax],al
  438267:	popf   
  438268:	retf   0x9
  43826b:	bound  edx,QWORD PTR [esi+edi*4+0x13]
  43826f:	jmp    0x89d60f4a
  438274:	inc    ebx
  438275:	push   ebx
  438276:	stc    
  438277:	bound  edi,QWORD PTR [ebp+0xb]
  43827a:	xchg   DWORD PTR [ebp+0x54],esi
  43827d:	mov    dh,0x4
  43827f:	jmp    0x12060f5a
  438284:	das    
  438285:	pusha  
  438286:	stc    
  438287:	neg    BYTE PTR [eax+0x645cfbae]
  43828d:	push   ss
  43828e:	add    eax,0xaf61d6e9
  438293:	fsubr  QWORD PTR [eax+edx*2+0x59]
  438297:	xor    bh,BYTE PTR [eax+0x66]
  43829a:	pop    ebx
  43829b:	stos   BYTE PTR es:[edi],al
  43829c:	add    BYTE PTR [eax],al
  43829e:	lods   eax,DWORD PTR ds:[esi]
  43829f:	inc    ebp
  4382a0:	int3   
  4382a1:	mov    ch,0xad
  4382a3:	inc    ebp
  4382a4:	int3   
  4382a5:	lods   eax,DWORD PTR ds:[esi]
  4382a6:	popf   
  4382a7:	inc    ebp
  4382a8:	int3   
  4382a9:	pop    ds
  4382aa:	pop    eax
  4382ab:	pop    ecx
  4382ac:	test   DWORD PTR [edi-0x23],esp
  4382af:	or     al,0x0
  4382b1:	jmp    0xe9d802f9
  4382b6:	(bad)  
  4382b7:	or     DWORD PTR [edx-0x7f],edx
  4382ba:	js     0x43831d
  4382bc:	stc    
  4382bd:	mov    ?,WORD PTR [eax]
  4382bf:	mov    BYTE PTR [eax],ch
  4382c1:	repnz (bad) 
  4382c3:	or     DWORD PTR [ebx+0xb216f],ecx
  4382c9:	jmp    0x7e7aed52
  4382ce:	cld    
  4382cf:	push   eax
  4382d0:	mov    ebp,DWORD PTR [edi-0x3f]
  4382d3:	or     al,0x0
  4382d5:	jmp    0x550eed80
  4382da:	in     al,dx
  4382db:	push   eax
  4382dc:	jge    0x438303
  4382de:	ins    DWORD PTR es:[edi],dx
  4382df:	call   0xeb00:0x67c000e
  4382e6:	outs   dx,DWORD PTR ds:[esi]
  4382e7:	fild   DWORD PTR [eax+0x0]
  4382ea:	jae    0x438284
  4382ec:	mov    BYTE PTR [ebp+edi*2-0x409a06ba],cl
  4382f3:	mov    eax,ds:0x6467e86
  4382f8:	add    BYTE PTR [eax],al
  4382fa:	pop    ecx
  4382fb:	das    
  4382fc:	or     BYTE PTR [esi+0x4038d4ac],dh
  438302:	add    BYTE PTR [eax],al
  438304:	cmp    al,0x68
  438306:	jl     0x4382c4
  438308:	mov    bl,BYTE PTR [edi+0x3]
  43830b:	add    BYTE PTR [esi+eax*1],ch
  43830e:	ins    DWORD PTR es:[edi],dx
  43830f:	cmp    BYTE PTR [ebx],dh
  438311:	cwde   
  438312:	mov    BYTE PTR [edx+0x65f94dbd],cl
  438318:	outs   dx,DWORD PTR ds:[esi]
  438319:	stos   BYTE PTR es:[edi],al
  43831a:	xchg   BYTE PTR [esi-0xa],bh
  43831d:	add    eax,0x1c890000
  438322:	pop    es
  438323:	mov    dh,0x8c
  438325:	iret   
  438326:	cmp    BYTE PTR [eax-0x14],al
  438329:	addr16 jl 0x4382e8
  43832c:	jp     0x43838e
  43832e:	add    eax,DWORD PTR [eax]
  438330:	mov    esp,0x3f306d0d
  438335:	mov    ch,0x3
  438337:	xor    DWORD PTR [esi+eax*1+0x75],0xffffffb0
  43833c:	xor    DWORD PTR [ecx-0x2c42eec7],ebx
  438342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438343:	push   ss
  438344:	mov    esp,0xe4c3560d
  438349:	fmul   DWORD PTR [ebx+0x40]
  43834c:	jge    0x43835a
  43834e:	xchg   BYTE PTR [eax+0x5e000daa],ch
  438354:	mov    edi,0xf102e885
  438359:	cwde   
  43835a:	cmp    DWORD PTR [ecx],edx
  43835c:	aad    0x61
  43835e:	ja     0x438308
  438360:	retf   
  438361:	(bad)  
  438362:	std    
  438363:	pop    ecx
  438364:	xchg   esi,eax
  438365:	in     al,0x54
  438367:	std    
  438368:	add    BYTE PTR [eax],al
  43836a:	push   ecx
  43836b:	lahf   
  43836c:	mov    ebp,0x94e8d40e
  438371:	adc    dl,ch
  438373:	(bad)  
  438374:	(bad)  
  438375:	mov    esp,0xcc311719
  43837a:	adc    DWORD PTR [edi],ebx
  43837c:	xor    esp,ecx
  43837e:	or     DWORD PTR [esi-0x59a11384],ecx
  438384:	cmc    
  438385:	test   BYTE PTR [ebp-0x39],bl
  438388:	push   cs
  438389:	add    ch,dl
  43838b:	jecxz  0x4383f2
  43838d:	or     ebx,DWORD PTR [ebx+0x5e51d489]
  438393:	(bad)  
  438394:	or     BYTE PTR [edx+0x5e],ah
  438397:	xchg   ecx,eax
  438398:	fcmove st,st(4)
  43839a:	neg    ebx
  43839c:	mov    ebx,0x8d697307
  4383a1:	mov    eax,0x8fd62cb
  4383a6:	and    ebp,ebx
  4383a8:	stos   DWORD PTR es:[edi],eax
  4383a9:	adc    dl,ch
  4383ab:	bound  esi,QWORD PTR [esi+0x50]
  4383ae:	shr    edx,0x7
  4383b1:	psrad  mm3,mm0
  4383b4:	mov    esi,DWORD PTR [edi-0x7029d1d]
  4383ba:	adc    eax,0xe1487657
  4383bf:	jmp    0x438394
  4383c1:	pop    es
  4383c2:	pop    ebp
  4383c3:	pop    esi
  4383c4:	adc    al,0x85
  4383c6:	inc    ebp
  4383c7:	(bad)  
  4383c8:	or     DWORD PTR [eax],eax
  4383ca:	aad    0xcf
  4383cc:	ret    
  4383cd:	adc    eax,DWORD PTR [eax]
  4383cf:	add    BYTE PTR [edx+esi*1+0x17],ah
  4383d3:	(bad)  
  4383d4:	sti    
  4383d5:	jae    0x438429
  4383d7:	test   DWORD PTR [eax],ebx
  4383d9:	or     dh,bh
  4383db:	add    BYTE PTR [ebx+0x5c],0x70
  4383df:	xchg   esp,eax
  4383e0:	cmp    edi,esi
  4383e2:	out    0x3,al
  4383e4:	pop    eax
  4383e5:	mov    dh,0xda
  4383e7:	fst    QWORD PTR [ebx-0x67]
  4383ea:	jg     0x4383fa
  4383ec:	aad    0x9
  4383ee:	cdq    
  4383ef:	retf   0xaf0
  4383f2:	aas    
  4383f3:	cmp    ecx,DWORD PTR [eax+0x50]
  4383f6:	sub    al,BYTE PTR [ebx+0x42c40511]
  4383fc:	mov    bh,0x84
  4383fe:	mov    ah,0xf
  438400:	mov    bh,0x3c
  438402:	add    eax,0x600c7283
  438407:	jl     0x438472
  438409:	mul    esi
  43840b:	add    ebx,DWORD PTR [eax-0x42]
  43840e:	(bad)  
  43840f:	fst    st(3)
  438411:	jns    0x438442
  438413:	push   cs
  438414:	aad    0x9
  438416:	pop    esi
  438417:	rcr    esi,1
  438419:	jecxz  0x438402
  43841b:	pop    ebx
  43841c:	arpl   WORD PTR [edx+ebx*8+0x66],dx
  438420:	js     0x438467
  438422:	jmp    0x4383ec
  438424:	xor    DWORD PTR ds:0x3d19379b,edi
  43842a:	mov    bl,0x37
  43842c:	adc    DWORD PTR ds:0x3d0937ab,edi
  438432:	sbb    al,0x7b
  438434:	add    BYTE PTR [eax],al
  438436:	sar    DWORD PTR [ecx-0x5d184eb],0x38
  43843d:	jnp    0x438485
  43843f:	add    ah,BYTE PTR [esi-0x5b]
  438442:	push   ecx
  438443:	or     ah,bh
  438445:	add    edx,ebp
  438447:	mov    dh,0xa1
  438449:	shr    BYTE PTR [esi-0x2afc18f6],0xcf
  438450:	adc    eax,0x8adf7b
  438455:	imul   dl
  438457:	dec    edi
  438458:	je     0x43843b
  43845a:	cs fdivr st(5),st
  43845d:	data16 sti 
  43845f:	xchg   BYTE PTR [ecx+0xd],al
  438462:	cld    
  438463:	mov    ebx,DWORD PTR [eax]
  438465:	loop   0x43843d
  438467:	or     DWORD PTR [eax+0x41],edx
  43846a:	sub    edx,DWORD PTR [ebx-0x7]
  43846d:	inc    esi
  43846e:	fld    QWORD PTR [ebx+0x9d6f224]
  438474:	dec    edi
  438475:	inc    ecx
  438476:	dec    DWORD PTR [ebp-0x7]
  438479:	cs push edi
  43847b:	inc    esi
  43847c:	or     BYTE PTR [edx+0x0],dh
  43847f:	bound  ebp,QWORD PTR [edi]
  438481:	pop    ds
  438482:	mov    bl,0x50
  438484:	test   DWORD PTR [edi+0x4e],edi
  438487:	cld    
  438488:	(bad)  
  438489:	call   0xdff0083d
  43848e:	(bad)  
  43848f:	or     DWORD PTR [ebp+0x2b],edi
  438492:	sbb    al,0xce
  438494:	mov    esi,0xfd6799e3
  438499:	daa    
  43849a:	add    BYTE PTR [eax],al
  43849c:	test   eax,0x6d2c884c
  4384a1:	adc    al,0xc6
  4384a3:	push   esi
  4384a4:	clc    
  4384a5:	gs std 
  4384a7:	arpl   WORD PTR [esp+ecx*1],bp
  4384aa:	test   DWORD PTR [eax+0x2040c62],edi
  4384b0:	xchg   edi,eax
  4384b1:	fcom   DWORD PTR [edx+esi*2]
  4384b4:	sbb    al,BYTE PTR [ebx]
  4384b6:	sub    DWORD PTR [ecx+0x2c84fac5],0xffffffe5
  4384bd:	mov    eax,0x6693394c
  4384c2:	mov    edi,0x7d51309f
  4384c7:	lods   eax,DWORD PTR ds:[esi]
  4384c8:	leave  
  4384c9:	dec    sp
  4384cb:	call   0xc08ea6
  4384d0:	sbb    cl,dh
  4384d2:	(bad)  
  4384d3:	jmp    FWORD PTR [esi+ecx*2+0x5d18408]
  4384da:	add    BYTE PTR [eax],al
  4384dc:	inc    edi
  4384dd:	adc    BYTE PTR [edi],al
  4384df:	test   BYTE PTR [ecx+0x5],ch
  4384e2:	add    BYTE PTR [eax],al
  4384e4:	pop    es
  4384e5:	fdivr  DWORD PTR [ebx-0x7cf583ea]
  4384eb:	jge    0x43854d
  4384ed:	xlat   BYTE PTR ds:[ebx]
  4384ee:	dec    esi
  4384ef:	add    al,0xef
  4384f1:	loop   0x4384f7
  4384f3:	jle    0x438533
  4384f5:	sub    al,0x84
  4384f7:	ret    0xb922
  4384fa:	fisttp WORD PTR [ebx+0x95dfe6a]
  438500:	add    BYTE PTR [eax],al
  438502:	mov    dl,0x9d
  438504:	push   cs
  438505:	add    BYTE PTR [edx*2-0x7b6151],ch
  43850c:	(bad)  
  43850d:	push   DWORD PTR [edi+0x3888018f]
  438513:	or     esi,edi
  438515:	inc    esi
  438516:	add    BYTE PTR [ebp-0x51],dl
  438519:	sahf   
  43851a:	(bad)  
  43851d:	push   DWORD PTR [edi-0x71]
  438520:	or     eax,0x814dca8b
  438525:	sbb    al,0x4
  438527:	sar    DWORD PTR [ebp-0x44],1
  43852a:	repnz or DWORD PTR [eax],eax
  43852d:	push   DWORD PTR [edx-0x39ef5707]
  438533:	or     eax,0x8906d35e
  438538:	shl    bl,0x35
  43853b:	iret   
  43853c:	mov    ebx,0x5e09bc16
  438541:	mov    DWORD PTR [edx-0x5f],eax
  438544:	push   cs
  438545:	add    BYTE PTR [edx+esi*4-0x702a99f6],ch
  43854c:	pop    edi
  43854d:	(bad)  
  43854e:	(bad)  
  438550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438551:	adc    dl,ch
  438553:	bound  eax,QWORD PTR [eax+0x72d9d6bf]
  438559:	mov    esp,0x84fd62eb
  43855e:	adc    bh,bl
  438560:	ja     0x4384ec
  438562:	lods   eax,DWORD PTR ds:[esi]
  438563:	push   edi
  438564:	std    
  438565:	inc    DWORD PTR [eax]
  438567:	add    BYTE PTR [esi-0x2b],cl
  43856a:	add    BYTE PTR ds:0x4fbd62d5,al
  438570:	adc    al,0x92
  438572:	mov    edi,0x705f6d4d
  438577:	stc    
  438578:	pop    edx
  438579:	fidivr WORD PTR [edx-0x78]
  43857c:	fsub   QWORD PTR [edx-0x3]
  43857f:	dec    edi
  438580:	pop    eax
  438581:	lods   eax,DWORD PTR ds:[esi]
  438582:	mov    BYTE PTR [eax],al
  438584:	aad    0x62
  438586:	into   
  438587:	test   BYTE PTR [ebx],dl
  438589:	sti    
  43858a:	and    esi,ebx
  43858c:	xor    dh,ah
  43858e:	jg     0x438554
  438590:	ror    DWORD PTR [ecx],0x77
  438593:	add    ch,dl
  438595:	bound  edi,QWORD PTR [eax-0x76]
  438598:	pop    ecx
  438599:	xor    eax,0xd65efffd
  43859e:	or     BYTE PTR [ebx-0x87f9f6e],cl
  4385a4:	shl    ah,1
  4385a6:	mov    cl,0x61
  4385a8:	dec    esi
  4385a9:	xchg   ebx,eax
  4385aa:	out    0xcc,al
  4385ac:	mul    edi
  4385ae:	int    0x13
  4385b0:	jae    0x43861b
  4385b2:	ja     0x43856c
  4385b4:	retf   
  4385b5:	(bad)  
  4385b6:	std    
  4385b7:	or     BYTE PTR [ebx],ah
  4385b9:	lods   eax,DWORD PTR ds:[esi]
  4385ba:	fwait
  4385bb:	adc    dl,ch
  4385bd:	bound  ecx,QWORD PTR [edx-0x1522ae]
  4385c3:	push   cs
  4385c4:	ret    0x2909
  4385c7:	clc    
  4385c8:	int    0x93
  4385ca:	jns    0x438569
  4385cc:	add    BYTE PTR [eax],al
  4385ce:	(bad)  
  4385cf:	or     edi,esp
  4385d1:	mov    ds,WORD PTR [edi]
  4385d3:	neg    BYTE PTR [ebp-0x46]
  4385d6:	fiadd  DWORD PTR [ecx+0x7351f4e3]
  4385dc:	cmp    edi,edx
  4385de:	xchg   edx,eax
  4385df:	dec    esp
  4385e0:	jb     0x4385ac
  4385e2:	out    0x9a,al
  4385e4:	xlat   BYTE PTR ds:[ebx]
  4385e5:	sub    eax,0x6c35e39b
  4385ea:	clc    
  4385eb:	inc    edi
  4385ec:	push   esi
  4385ed:	lea    eax,[edi-0x73]
  4385f0:	stc    
  4385f1:	add    edx,ebp
  4385f3:	jecxz  0x438654
  4385f5:	mov    bl,BYTE PTR ds:0x7003e6f3
  4385fb:	clc    
  4385fc:	shl    BYTE PTR [esi],0x35
  4385ff:	jecxz  0x4385e0
  438601:	mov    DWORD PTR [ebp-0x3ffc190d],ecx
  438607:	dec    edx
  438608:	out    0x8c,al
  43860a:	dec    edi
  43860b:	(bad)  
  43860c:	icebp  
  43860d:	add    edx,ebp
  43860f:	loope  0x43860f
  438611:	leave  
  438612:	jmp    0xe6c9:0xe0eb7f09
  438619:	mov    ss,WORD PTR [edi]
  43861b:	popa   
  43861c:	aaa    
  43861d:	pop    eax
  43861e:	or     al,0x4c
  438620:	dec    ax
  438622:	fld    QWORD PTR [eax+0x61676c11]
  438628:	loop   0x43868c
  43862a:	push   esi
  43862b:	dec    esp
  43862c:	push   ebx
  43862d:	or     ebx,DWORD PTR [eax+0x43]
  438630:	mov    edi,0xe200001e
  438635:	dec    ebx
  438636:	retf   0x7cc2
  438639:	mov    al,0x6d
  43863b:	push   0x4fab487e
  438640:	mov    eax,ds:0x5a1c003e
  438645:	pop    esi
  438646:	test   DWORD PTR [eiz*8-0x3ed35700],esp
  43864d:	mov    ebx,0x517713e7
  438652:	stc    
  438653:	push   0x12
  438655:	push   es
  438656:	pop    ebx
  438657:	stos   BYTE PTR es:[edi],al
  438658:	adc    bh,BYTE PTR [esi]
  43865a:	int3   
  43865b:	mov    ch,0xa
  43865d:	ds int3 
  43865f:	lods   eax,DWORD PTR ds:[esi]
  438660:	and    bh,BYTE PTR [esi]
  438662:	int3   
  438663:	sbb    al,0x5a
  438665:	pop    esi
  438666:	test   DWORD PTR [eiz*8+0x5afde7b9],esp
  43866d:	push   ecx
  43866e:	stc    
  43866f:	push   0x1a
  438671:	push   es
  438672:	pop    ebx
  438673:	sub    bl,BYTE PTR [edx]
  438675:	ds int3 
  438677:	sbb    eax,0x35cc3e12
  43867c:	or     bh,BYTE PTR [esi]
  43867e:	int3   
  43867f:	sub    eax,0x40cc3da2
  438684:	iret   
  438685:	or     DWORD PTR [eax],eax
  438687:	jmp    0xe94349f1
  43868c:	gs ret 
  43868e:	(bad)  
  43868f:	call   0xe94349d9
  438694:	inc    ebp
  438695:	ret    
  438696:	(bad)  
  438697:	call   0xc388869c
  43869c:	(bad)  
  43869d:	call   0xe8439078
  4386a2:	(bad)  
  4386a3:	or     DWORD PTR [eax],eax
  4386a5:	jmp    0x9d6:0xe60009d6
  4386ac:	add    dh,dh
  4386ae:	(bad)  
  4386af:	or     DWORD PTR [eax],eax
  4386b1:	(bad)  
  4386b2:	(bad)  
  4386b3:	or     DWORD PTR [eax],eax
  4386b5:	push   ss
  4386b6:	ror    DWORD PTR [ecx],1
  4386b8:	add    BYTE PTR [esi-0x27],cl
  4386bb:	or     DWORD PTR [eax],eax
  4386bd:	add    BYTE PTR [ebx],dl
  4386bf:	push   es
  4386c0:	add    BYTE PTR [eax],al
  4386c2:	xchg   ebx,eax
  4386c3:	push   es
  4386c4:	add    BYTE PTR [eax],al
  4386c6:	add    DWORD PTR [eax+eax*1],0x0
  4386ca:	jae    0x4386cc
  4386cc:	add    BYTE PTR [eax],al
  4386ce:	jae    0x4386c8
  4386d0:	(bad)  
  4386d1:	call   DWORD PTR [ebx+0x8]
  4386d4:	add    BYTE PTR [eax],al
  4386d6:	inc    ebx
  4386d7:	sub    BYTE PTR [eax],al
  4386d9:	add    BYTE PTR [ebx+0x68],dl
  4386dc:	stc    
  4386dd:	call   DWORD PTR [ebx-0x18]
  4386e0:	(bad)  
  4386e1:	call   DWORD PTR [ebx]
  4386e3:	jmp    0xe94786e0
  4386e8:	cli    
  4386e9:	push   ebx
  4386eb:	call   0xe93786ee
  4386f0:	push   es
  4386f1:	add    BYTE PTR [ebx],dl
  4386f3:	jmp    0xe946870e
  4386f8:	add    BYTE PTR ss:[ebx],dl
  4386fb:	jmp    0x438776
  438700:	adc    ebp,ecx
  438702:	test   BYTE PTR [eax],0x13
  438705:	jmp    0xe9468900
  43870a:	test   BYTE PTR [ebx],0xf3
  43870d:	call   0xe9368f08
  438712:	test   BYTE PTR [edi],0xd3
  438715:	call   0xe906a710
  43871a:	idiv   BYTE PTR [edi]
  43871c:	shr    eax,cl
  43871e:	idiv   BYTE PTR [edi-0x2d]
  438721:	call   0x90af871c
  438726:	dec    esi
  438727:	push   ebx
  438728:	mov    al,ds:0xf040ec84
  43872d:	jl     0x4387a3
  43872f:	and    al,0x94
  438731:	jl     0x4387a9
  438733:	sbb    al,0x67
  438735:	nop
  438736:	std    
  438737:	mov    dl,ch
  438739:	pop    edx
  43873a:	add    al,0xd0
  43873c:	push   esi
  43873d:	inc    esi
  43873e:	or     al,0x87
  438740:	xchg   ecx,eax
  438741:	cld    
  438742:	das    
  438743:	xchg   DWORD PTR [ecx],ebp
  438745:	psubb  mm0,QWORD PTR [ecx+edi*1+0x1384c017]
  43874d:	arpl   WORD PTR [edx+ebx*2-0xe99a437],cx
  438754:	nop
  438755:	xor    al,0x6c
  438757:	jg     0x438715
  438759:	xor    bh,dh
  43875b:	call   ebp
  43875d:	xor    ecx,DWORD PTR [edi+eax*4-0x7]
  438761:	push   esi
  438762:	sbb    DWORD PTR [edi+0x4f010000],eax
  438768:	and    eax,0xed571987
  43876d:	test   BYTE PTR [edx],bl
  43876f:	daa    
  438770:	mov    ecx,DWORD PTR [ecx+0x25]
  438773:	mov    edx,0xb9dd23c0
  438778:	enter  0xd923,0x9a
  43877c:	(bad)  
  43877d:	call   ebp
  43877f:	xor    cl,BYTE PTR [ecx+ecx*2+0x485d2401]
  438786:	pop    esp
  438787:	das    
  438788:	and    DWORD PTR [eax-0x2cd2c],edi
  43878e:	dec    esi
  43878f:	test   al,0xb5
  438791:	int3   
  438792:	xor    eax,0xf944867b
  438797:	mov    WORD PTR cs:[ecx-0x3],es
  43879b:	stos   DWORD PTR es:[edi],eax
  43879c:	iret   
  43879d:	das    
  43879e:	dec    esi
  43879f:	adc    BYTE PTR [ecx],0x87
  4387a2:	xchg   ecx,eax
  4387a3:	push   esi
  4387a4:	adc    DWORD PTR [edi-0x78f2b15f],eax
  4387aa:	mov    eax,ds:0x72851556
  4387af:	jp     0x43873d
  4387b1:	pop    ecx
  4387b2:	mov    ecx,0xb6d86e09
  4387b7:	cmc    
  4387b8:	ins    DWORD PTR es:[edi],dx
  4387b9:	shl    BYTE PTR [esi+0x644e0e1d],1
  4387bf:	jmp    0x438826
  4387c1:	inc    ebp
  4387c2:	shl    ah,1
  4387c4:	mov    al,0x9c
  4387c6:	loope  0x4387d1
  4387c8:	out    0x3,eax
  4387ca:	add    BYTE PTR [eax],al
  4387cc:	lock dec edx
  4387ce:	fs loopne 0x4387c7
  4387d1:	and    eax,0x5150a8b6
  4387d6:	(bad)  
  4387d7:	inc    ebx
  4387d8:	shl    BYTE PTR [ebx+0x6c],0xd8
  4387dc:	mul    BYTE PTR ds:0x1df6d860
  4387e2:	jle    0x4387e0
  4387e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4387e5:	dec    edi
  4387e6:	out    0x3,al
  4387e8:	aad    0x9
  4387ea:	repz repz mov ecx,0x17065d49
  4387f1:	xchg   ebp,eax
  4387f2:	sahf   
  4387f3:	cmp    DWORD PTR [eax],0x11
  4387f6:	ss fdiv DWORD PTR fs:[ecx]
  4387fa:	dec    esi
  4387fb:	ins    BYTE PTR es:[edi],dx
  4387fc:	push   eax
  4387fd:	lds    ecx,FWORD PTR [edx]
  4387ff:	and    al,ah
  438801:	push   es
  438802:	(bad)  
  438803:	xchg   edx,eax
  438804:	cwde   
  438805:	or     ebp,esp
  438807:	push   cs
  438808:	pop    ecx
  438809:	xchg   edx,eax
  43880a:	in     eax,0x3
  43880c:	aad    0xc0
  43880e:	mov    ebp,0x94da91b3
  438813:	jg     0x438865
  438815:	or     eax,0xede984cb
  43881a:	out    0x3,al
  43881c:	cmc    
  43881d:	or     DWORD PTR [eax+eax*4-0x75],esi
  438821:	cld    
  438822:	fcom   DWORD PTR ss:[esi+0x730f26fc]
  438829:	mov    bh,dh
  43882b:	(bad)  
  43882c:	ja     0x4387e5
  43882e:	(bad)  
  43882f:	jnp    0x438831
  438831:	add    BYTE PTR ds:0xe8f07f00,bl
  438837:	mov    ebx,0xf80c5562
  43883c:	jle    0x438821
  43883e:	stc    
  43883f:	mov    cl,0x62
  438841:	and    ah,bh
  438843:	out    dx,eax
  438844:	mov    bh,0xe8
  438846:	(bad)  
  438847:	or     DWORD PTR [eax],eax
  438849:	div    BYTE PTR [edi+eax*4-0x18]
  43884d:	icebp  
  43884e:	push   edi
  43884f:	sub    cl,BYTE PTR [ecx]
  438851:	push   0x1e
  438853:	or     al,0x73
  438855:	xlat   BYTE PTR ds:[ebx]
  438856:	and    ecx,DWORD PTR [eax+0xa56e900]
  43885c:	jae    0x438849
  43885e:	aas    
  43885f:	push   ss
  438860:	shr    esp,0xb6
  438863:	jbe    0x4388a2
  438865:	jmp    0xe943923e
  43886a:	dec    DWORD PTR [edi]
  43886c:	shl    esp,0x76
  43886f:	jbe    0x4388ae
  438871:	jmp    0xe943924d
  438876:	cmp    al,0xe0
  438878:	push   esp
  438879:	sar    edi,0x88
  43887c:	nop
  43887d:	imul   ecx,DWORD PTR [edi],0xc7e47111
  438883:	dec    ecx
  438884:	bound  edi,QWORD PTR [esp+ecx*2+0x4d]
  438888:	sub    BYTE PTR [edx],0x46
  43888b:	push   esi
  43888c:	loopne 0x438880
  43888e:	mov    esi,0x4e0d148c
  438893:	(bad)  
  438894:	and    esp,ecx
  438896:	add    BYTE PTR [eax],al
  438898:	neg    DWORD PTR [edx-0x7b]
  43889b:	in     eax,dx
  43889c:	test   eax,0xead3cc8f
  4388a1:	push   esp
  4388a2:	jmp    0x438911
  4388a4:	xchg   esi,eax
  4388a5:	mov    edx,0x19ae2816
  4388aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4388ab:	add    BYTE PTR ds:0xfb101d67,dl
  4388b1:	mov    WORD PTR [edx+0x4],ds
  4388b4:	in     al,dx
  4388b5:	or     dh,BYTE PTR [ecx]
  4388b7:	je     0x4388c9
  4388b9:	aas    
  4388ba:	jo     0x438880
  4388bc:	add    eax,0xfcfffd7d
  4388c1:	xchg   ecx,eax
  4388c2:	rol    cl,1
  4388c4:	push   ss
  4388c5:	ds or  eax,0x54
  4388c9:	or     BYTE PTR ds:[eax+edx*4+0x3c00000d],al
  4388d1:	stos   DWORD PTR es:[edi],eax
  4388d2:	push   es
  4388d3:	je     0x4388a6
  4388d5:	and    edx,ecx
  4388d7:	jae    0x438876
  4388d9:	nop
  4388da:	loope  0x43890f
  4388dc:	jl     0x43890d
  4388de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4388df:	mov    ah,BYTE PTR [edi-0x73]
  4388e2:	mov    ebx,0x2ad5f10
  4388e7:	call   0x1fb6022
  4388ec:	jl     0x4388f8
  4388ee:	add    bl,dl
  4388f0:	pop    esp
  4388f1:	push   ebp
  4388f2:	and    ebx,ecx
  4388f4:	(bad)  
  4388f5:	iret   
  4388f6:	retf   0x6fed
  4388f9:	cli    
  4388fa:	adc    BYTE PTR [eax+eax*1+0x0],0xe0
  4388ff:	inc    ebp
  438900:	jns    0x4388fd
  438902:	jnp    0x438961
  438904:	push   es
  438905:	xor    ebp,DWORD PTR [edi+ebp*1-0x7248755a]
  43890c:	mov    ebx,0x2adef10
  438911:	call   0x4610add
  438916:	mov    bh,0x59
  438918:	sbb    eax,0x82fecf0c
  43891d:	add    al,0xad
  43891f:	nop
  438920:	rol    cl,1
  438922:	(bad)  
  438923:	cmp    eax,0x4ad5cc83
  438928:	cmp    ebp,ecx
  43892a:	sub    BYTE PTR [edx+0x3fe5a84b],ch
  438930:	sub    DWORD PTR [esi+0x7ffd30d5],0x62d12ef4
  43893a:	mov    edi,0x5f0ecf19
  43893f:	pop    ecx
  438940:	adc    al,al
  438942:	jae    0x4388d9
  438944:	xchg   ebp,eax
  438946:	push   ebp
  438947:	jae    0x438936
  438949:	int3   
  43894a:	cmc    
  43894b:	sub    ah,BYTE PTR [ebp-0x7a]
  43894e:	mov    al,ds:0xd5fffe8b
  438953:	xor    dh,BYTE PTR [eax]
  438955:	loopne 0x438964
  438957:	or     DWORD PTR ds:0x6aa0901d,esi
  43895d:	std    
  43895e:	mov    ds:0x86fd98,al
  438963:	add    BYTE PTR [ecx],ah
  438965:	dec    edi
  438966:	sub    DWORD PTR [ebp+0x23c1489a],eax
  43896c:	in     eax,dx
  43896d:	push   edi
  43896e:	aas    
  43896f:	or     DWORD PTR [edi-0x19],edx
  438972:	cld    
  438973:	call   ebp
  438975:	mov    bh,0xc8
  438977:	and    ebx,ebp
  438979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43897a:	push   ebx
  43897b:	and    eax,0xfd65b087
  438980:	pop    esp
  438981:	xor    eax,0x6d5f0185
  438986:	inc    BYTE PTR [ebp-0x3d7fcef5]
  43898c:	(bad)  
  43898d:	stos   BYTE PTR es:[edi],al
  43898e:	ret    
  43898f:	(bad)  
  438990:	pop    edx
  438991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438992:	(bad)  
  438993:	jl     0x4389a7
  438995:	xor    BYTE PTR [eax-0x5c],dl
  438998:	dec    esi
  438999:	xchg   DWORD PTR [ecx],esp
  43899b:	sub    al,0x2c
  43899d:	arpl   WORD PTR [ecx+edi*8+0x32],bx
  4389a1:	or     ah,BYTE PTR [esi+0x59]
  4389a4:	sub    bh,BYTE PTR [esi-0x125ee5a5]
  4389aa:	mov    esi,0x5dd565d7
  4389af:	iret   
  4389b0:	mov    dh,0x21
  4389b2:	ins    DWORD PTR es:[edi],dx
  4389b3:	add    al,0x88
  4389b5:	xor    ah,dh
  4389b7:	mov    edx,DWORD PTR [edx+ecx*1-0x73073ba1]
  4389be:	mov    ds:0xeb4c7000,al
  4389c3:	push   esi
  4389c4:	xor    esi,DWORD PTR [ebx]
  4389c6:	iret   
  4389c7:	pop    edx
  4389c8:	add    BYTE PTR [eax],al
  4389ca:	fadd   QWORD PTR [edi+edi*2-0x3c]
  4389ce:	int    0x8e
  4389d0:	fld    DWORD PTR [esi]
  4389d2:	aad    0x9
  4389d4:	jg     0x4389db
  4389d6:	aad    0x9
  4389d8:	out    0x36,eax
  4389da:	mov    ch,0xd1
  4389dc:	add    eax,0x5e4ab841
  4389e1:	mov    al,0xf6
  4389e3:	adc    DWORD PTR [esi+0x0],ebp
  4389e6:	sub    esi,DWORD PTR [ebx]
  4389e8:	pop    ebp
  4389e9:	pop    edx
  4389ea:	pushf  
  4389eb:	inc    esp
  4389ec:	aas    
  4389ed:	(bad)  
  4389ee:	int    0x8e
  4389f0:	test   DWORD PTR [esi],eax
  4389f2:	aad    0x9
  4389f4:	aas    
  4389f5:	add    eax,0x36e709d5
  4389fa:	jne    0x4389cd
  4389fc:	lds    eax,FWORD PTR [eax+0x78]
  4389ff:	dec    edx
  438a00:	pop    esi
  438a01:	mov    al,0xb6
  438a03:	adc    eax,0x32eb006e
  438a08:	add    BYTE PTR [ebx+0x5c],bl
  438a0b:	inc    esp
  438a0c:	pop    esi
  438a0d:	dec    esp
  438a0e:	push   eax
  438a0f:	int    0x2
  438a11:	adc    BYTE PTR [edx+eiz*2+0x6e],al
  438a15:	shl    dh,1
  438a17:	add    esi,edi
  438a19:	inc    ebp
  438a1a:	int3   
  438a1b:	xchg   DWORD PTR [eax],eax
  438a1d:	pop    ss
  438a1e:	ror    DWORD PTR [ecx],cl
  438a20:	add    dl,ch
  438a22:	mov    al,ds:0xc6cd7bc6
  438a27:	or     DWORD PTR [ebx-0x3b],esi
  438a2a:	repz test ch,bh
  438a2d:	sbb    BYTE PTR [eax],al
  438a2f:	add    BYTE PTR [edx-0x33],cl
  438a32:	and    esi,ecx
  438a34:	repz test BYTE PTR [edx-0x77],dh
  438a38:	mov    ebx,0x5245ed84
  438a3d:	cmp    ah,BYTE PTR ds:0x34d76bfb
  438a43:	sub    BYTE PTR [edi],al
  438a45:	(bad)  
  438a46:	and    al,0xa8
  438a48:	sub    DWORD PTR [ebp-0x7b],0xffffffd6
  438a4c:	mov    bl,0x33
  438a4e:	in     eax,0x21
  438a50:	dec    edx
  438a51:	int    0x23
  438a53:	sbb    edx,esi
  438a55:	push   ecx
  438a56:	jb     0x438a6d
  438a58:	sar    BYTE PTR [ebp+0x39dbf523],cl
  438a5e:	and    eax,0x8551ebb8
  438a63:	and    eax,0xa83521f5
  438a68:	test   cl,dh
  438a6a:	and    al,0xa8
  438a6c:	or     ebp,DWORD PTR [esi-0x7b]
  438a6f:	sbb    eax,0x1d8501f5
  438a74:	mov    ch,0xf9
  438a76:	xor    al,0xa8
  438a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438a79:	and    DWORD PTR ds:0x856e2ba8,esp
  438a7f:	jle    0x438a2c
  438a81:	xor    esp,ebp
  438a83:	aad    0xdb
  438a85:	cmp    DWORD PTR ds:0x23ce5b58,esp
  438a8b:	add    edx,eax
  438a8d:	xor    BYTE PTR [edx-0x1f],0xab
  438a91:	sub    ch,0x85
  438a94:	add    BYTE PTR [eax],al
  438a96:	arpl   WORD PTR [ecx],di
  438a98:	and    eax,0xc8940e00
  438a9d:	repz pop eax
  438a9f:	xchg   esp,eax
  438aa0:	je     0x438ac6
  438aa2:	shl    BYTE PTR [ecx+ecx*1-0x7d1ffc02],1
  438aa9:	jmp    DWORD PTR [ebx]
  438aab:	pop    eax
  438aac:	or     BYTE PTR [esi-0x7],ch
  438aaf:	xchg   ebx,eax
  438ab0:	jecxz  0x438ac1
  438ab2:	push   edx
  438ab3:	and    esp,DWORD PTR [edi+ecx*1]
  438ab6:	arpl   WORD PTR [esi+eax*1+0x423606e],bp
  438abd:	jae    0xb6329177
  438ac3:	xchg   ebx,eax
  438ac4:	pop    esp
  438ac5:	and    al,0xf4
  438ac7:	mov    bl,0xf8
  438ac9:	(bad)  
  438aca:	jecxz  0x438ac9
  438acc:	mov    eax,0x6eee0183
  438ad1:	adc    dh,bl
  438ad3:	xor    dh,ch
  438ad5:	movlps xmm4,QWORD PTR [eax]
  438ad8:	jnp    0x438aa0
  438ada:	mov    eax,0x2ffeeb11
  438adf:	add    esp,DWORD PTR [eax]
  438ae1:	seta   al
  438ae4:	push   es
  438ae5:	fistp  DWORD PTR [eax+edx*1+0x61a3e076]
  438aec:	aad    0x8b
  438aee:	mov    eax,0x70b6078d
  438af3:	adc    BYTE PTR [esi-0x37],ah
  438af6:	xchg   edi,eax
  438af7:	scas   eax,DWORD PTR es:[edi]
  438af8:	add    eax,0x0
  438afb:	add    BYTE PTR [ecx-0x631745c1],cl
  438b01:	je     0x438b34
  438b03:	jl     0x438a8d
  438b05:	or     BYTE PTR ss:[esi+0xca0],al
  438b0c:	mov    ch,0x59
  438b0e:	sbb    eax,0xe1a48b14
  438b13:	adc    ebp,edx
  438b15:	cs std 
  438b17:	call   FWORD PTR [esi+0x0]
  438b1a:	cmp    eax,0xf498e5e6
  438b1f:	or     BYTE PTR [ecx-0x30],bl
  438b22:	add    eax,DWORD PTR [eax]
  438b24:	aad    0xaf
  438b26:	arpl   WORD PTR [ecx],cx
  438b28:	test   eax,0x14cd085c
  438b2d:	cmp    esp,edi
  438b2f:	(bad)  
  438b30:	shl    BYTE PTR [edx+0x4f2d253e],cl
  438b36:	add    DWORD PTR [ebx-0x3b8623],eax
  438b3c:	xlat   BYTE PTR ds:[ebx]
  438b3d:	and    DWORD PTR [edi],eax
  438b3f:	int    0x14
  438b41:	scas   eax,DWORD PTR es:[edi]
  438b42:	push   eax
  438b43:	and    BYTE PTR [edx-0x1795f7a2],al
  438b49:	(bad)  
  438b4a:	out    0x39,eax
  438b4c:	push   esi
  438b4d:	jb     0x438b48
  438b4f:	or     dh,ah
  438b51:	popa   
  438b52:	test   bl,al
  438b54:	mov    ch,0x2b
  438b56:	ins    BYTE PTR es:[edi],dx
  438b57:	rcr    DWORD PTR [esi-0x11],0x1f
  438b5b:	or     al,0xda
  438b5d:	imul   esp,DWORD PTR [ebp+0x9],0x0
  438b61:	add    BYTE PTR [ebx+0x5b],al
  438b64:	or     BYTE PTR [ecx-0x60],bh
  438b67:	lods   al,BYTE PTR ds:[esi]
  438b68:	clc    
  438b69:	jl     0x438b4d
  438b6b:	mov    eax,0x728d8540
  438b70:	ins    BYTE PTR es:[edi],dx
  438b71:	adc    dh,ch
  438b73:	cdq    
  438b74:	or     BYTE PTR [edx-0x74],ch
  438b77:	retf   
  438b78:	in     al,dx
  438b79:	or     BYTE PTR [ecx-0x1],bl
  438b7c:	cld    
  438b7d:	call   ebp
  438b7f:	mov    bl,0x5c
  438b81:	or     DWORD PTR [ecx],ecx
  438b83:	sbb    BYTE PTR [edi],al
  438b85:	int    0x94
  438b87:	sub    bh,ah
  438b89:	(bad)  
  438b8a:	loop   0x438bbc
  438b8c:	ds and eax,0x8060a7d
  438b92:	push   esi
  438b93:	adc    al,al
  438b95:	les    ebx,FWORD PTR [edx+0xc]
  438b98:	xor    BYTE PTR [edx-0x73051a37],cl
  438b9e:	adc    al,0xf5
  438ba0:	stos   BYTE PTR es:[edi],al
  438ba1:	pop    ds
  438ba2:	in     eax,dx
  438ba3:	add    al,0x26
  438ba5:	or     BYTE PTR [ebx-0x2afc188e],bh
  438bab:	xchg   esp,eax
  438bac:	sbb    eax,0x15f5248c
  438bb1:	test   BYTE PTR [edx],bh
  438bb3:	or     eax,0x94d016d
  438bb8:	pop    ebp
  438bb9:	rcl    DWORD PTR [ebx],0x93
  438bbc:	mov    cl,0x5
  438bbe:	mov    BYTE PTR [edi-0x1a],al
  438bc1:	mov    edx,DWORD PTR [edx+ecx*1+0xb06f]
  438bc8:	clc    
  438bc9:	mov    ebp,DWORD PTR [edx]
  438bcb:	add    al,0x0
  438bcd:	pop    si
  438bcf:	iret   
  438bd0:	mov    dh,0xed
  438bd2:	ins    DWORD PTR es:[edi],dx
  438bd3:	mov    eax,0x29d011b6
  438bd8:	fadd   QWORD PTR [eax-0x2e]
  438bdb:	mov    DWORD PTR [edx],ebx
  438bdd:	or     ah,BYTE PTR [esi+0x5b]
  438be0:	retf   0x7eb5
  438be3:	sbb    eax,0xd00ee641
  438be8:	push   0x5b4a5dd0
  438bed:	or     BYTE PTR [esi+0x6d],ah
  438bf0:	test   al,0x88
  438bf2:	sub    al,BYTE PTR ds:0x8be4c84d
  438bf8:	adc    al,0xd
  438bfa:	data16 aas 
  438bfc:	fnstcw WORD PTR [edi*1-0x1119d675]
  438c03:	ins    BYTE PTR es:[edi],dx
  438c04:	aad    0x40
  438c06:	jp     0x438c5f
  438c08:	push   eax
  438c09:	inc    eax
  438c0a:	add    BYTE PTR [ecx-0x67],al
  438c0d:	adc    DWORD PTR [ebx+0x9d18f],eax
  438c13:	push   0xfffffff9
  438c15:	adc    cl,BYTE PTR [ecx]
  438c17:	cmp    dl,BYTE PTR [eax]
  438c19:	adc    edi,DWORD PTR [edx+0x28]
  438c1c:	test   BYTE PTR ds:0xfd89e183,0xff
  438c23:	jmp    0x724812b4
  438c28:	test   al,0x4d
  438c2a:	cli    
  438c2b:	add    BYTE PTR ss:[eax],al
  438c2e:	mov    al,BYTE PTR [esi+0x111181f9]
  438c34:	adc    DWORD PTR [edi-0x27],0x9
  438c38:	add    BYTE PTR [edx-0x4f],ch
  438c3b:	adc    cl,BYTE PTR [ecx]
  438c3d:	cmp    bl,BYTE PTR [eax-0x49d785ee]
  438c43:	or     eax,0xfd41f183
  438c48:	push   DWORD PTR [ecx+0x15]
  438c4b:	in     al,dx
  438c4c:	or     ebp,edx
  438c4e:	lahf   
  438c4f:	xchg   BYTE PTR [ecx+eiz*2],al
  438c52:	js     0x438c6c
  438c54:	stc    
  438c55:	out    0x8b,al
  438c57:	xchg   cl,bh
  438c59:	jb     0x438be9
  438c5b:	xchg   BYTE PTR [ebp+ecx*1-0x1b],al
  438c5f:	cmp    bh,dl
  438c61:	bound  ebx,QWORD PTR [edx+0x160237eb]
  438c67:	adc    DWORD PTR [esi-0x75],edi
  438c6a:	(bad)  
  438c6b:	or     DWORD PTR [eax],eax
  438c6d:	jmp    0x9c1:0x57bbd1f
  438c74:	jae    0x438c3f
  438c76:	out    dx,eax
  438c77:	jle    0x438c76
  438c79:	cwde   
  438c7a:	mov    edi,0xbe31724e
  438c7f:	dec    esi
  438c80:	in     eax,dx
  438c81:	inc    ebp
  438c82:	pop    edi
  438c83:	cmp    DWORD PTR ds:0x45b3ff00,esp
  438c89:	cmp    ebx,DWORD PTR [ebp+0x4d]
  438c8c:	inc    ebx
  438c8d:	sub    ecx,DWORD PTR [ebp-0x24]
  438c90:	mov    ds:0xe300008b,eax
  438c95:	repz jmp 0xbc24:0x44942ceb
  438c9d:	and    cl,al
  438c9f:	jbe    0x438c75
  438ca1:	or     dh,BYTE PTR [esp-0x20]
  438ca5:	or     dh,al
  438ca7:	sub    edi,ebp
  438ca9:	repz (bad) 
  438cab:	cmp    ebx,ebp
  438cad:	dec    esp
  438cae:	and    ebp,DWORD PTR [ebx]
  438cb0:	int    0xdb
  438cb2:	mov    ds:0x381f608b,eax
  438cb7:	mov    ebp,DWORD PTR [eax+0x1f]
  438cba:	xor    BYTE PTR [ebx],bh
  438cbc:	fisttp QWORD PTR [ebx+edx*1+0x2b]
  438cc0:	int    0xdb
  438cc2:	mov    ds:0xeaf3e38b,eax
  438cc7:	jmp    0x438ce5
  438cc9:	or     al,0xf0
  438ccb:	sub    edi,ebp
  438ccd:	and    cl,cl
  438ccf:	jbe    0x438cc5
  438cd1:	repz enter 0x90f3,0x93
  438cd6:	out    dx,eax
  438cd7:	sub    edi,edi
  438cd9:	nop
  438cda:	ret    0x50f3
  438cdd:	xchg   ecx,eax
  438cde:	je     0x438d04
  438ce0:	fcom   DWORD PTR [eax-0x4c4bdba4]
  438ce6:	and    edi,esi
  438ce8:	fwait
  438ce9:	aam    0xb0
  438ceb:	add    ch,dh
  438ced:	dec    eax
  438cee:	stc    
  438cef:	mov    ecx,0xa86
  438cf4:	xchg   edi,eax
  438cf5:	icebp  
  438cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438cf7:	and    BYTE PTR [eax],al
  438cf9:	add    al,al
  438cfb:	adc    DWORD PTR [ecx+0xaac00],esi
  438d01:	mov    edx,0xfffd2bd5
  438d06:	aad    0x8b
  438d08:	clc    
  438d09:	mov    dh,0x81
  438d0b:	call   0x2a808cce
  438d10:	std    
  438d11:	call   ebp
  438d13:	mov    esi,esp
  438d15:	test   cl,ah
  438d17:	inc    esp
  438d18:	and    DWORD PTR [edi-0x3fb627],esi
  438d1e:	sbb    al,0xa
  438d20:	add    al,0x0
  438d22:	aad    0xcb
  438d24:	add    eax,DWORD PTR [ebp-0x7d43fb6f]
  438d2a:	or     al,0x7c
  438d2c:	add    BYTE PTR [edi+0x4088288d],al
  438d32:	shr    DWORD PTR [ecx-0x4c2a1b0d],1
  438d38:	adc    BYTE PTR [eax+0x66],ah
  438d3b:	jae    0x438d3a
  438d3d:	std    
  438d3e:	mov    eax,ds:0x5edb8832
  438d43:	ins    BYTE PTR es:[edi],dx
  438d44:	sbb    DWORD PTR [eax+0x5e],ebx
  438d47:	jmp    0x438ccf
  438d49:	push   eax
  438d4a:	loope  0x438d3d
  438d4c:	fs std 
  438d4e:	scas   eax,DWORD PTR es:[edi]
  438d4f:	inc    ecx
  438d50:	ds (bad) 
  438d53:	dec    ebx
  438d54:	xchg   DWORD PTR ss:[ebp+0x5c],ebp
  438d58:	xchg   BYTE PTR [esi-0x5f],dl
  438d5b:	mov    ebx,0x8b47
  438d60:	jns    0x438d66
  438d62:	clc    
  438d63:	xor    DWORD PTR ss:[edi],ecx
  438d66:	lock jb 0x438d4a
  438d69:	pop    es
  438d6a:	dec    edi
  438d6b:	test   ebp,ebx
  438d6d:	mov    ecx,0x2fe123b0
  438d72:	push   eax
  438d73:	test   DWORD PTR ds:0xdee5802f,ecx
  438d79:	xor    DWORD PTR [ecx+0x7009c923],esi
  438d7f:	adc    esp,DWORD PTR [eax+0xb]
  438d82:	out    0x3,eax
  438d84:	aad    0x58
  438d86:	xchg   al,cl
  438d88:	or     edi,edi
  438d8a:	push   es
  438d8b:	xchg   ecx,eax
  438d8c:	ror    BYTE PTR [ecx],0xe5
  438d8f:	into   
  438d90:	ror    BYTE PTR [esi+edx*4],cl
  438d93:	inc    edx
  438d94:	fdivr  QWORD PTR [ebx-0x171bfb55]
  438d9a:	jge    0x438d26
  438d9c:	sti    
  438d9d:	add    DWORD PTR [esi-0x49],ebp
  438da0:	mov    dh,0x15
  438da2:	push   ds
  438da3:	ss (bad) 
  438da5:	paddd  mm6,QWORD PTR ds:0x8ade48c8
  438dac:	popf   
  438dad:	add    eax,0x38f0094e
  438db2:	xor    dh,BYTE PTR ds:0x8ade43b0
  438db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438db9:	add    eax,0x19f6b75e
  438dbe:	fidiv  WORD PTR [edi+eiz*4]
  438dc1:	push   cs
  438dc2:	into   
  438dc3:	xor    al,0x0
  438dc5:	add    BYTE PTR [edx-0x2afd17b8],dl
  438dcb:	or     DWORD PTR [eax-0x45],esp
  438dce:	shl    BYTE PTR [eax],cl
  438dd0:	hlt    
  438dd1:	sub    BYTE PTR [eax],al
  438dd3:	xor    eax,0xb14821a
  438dd8:	call   0x6fd662e0
  438ddd:	repz popa 
  438ddf:	inc    ebp
  438de0:	daa    
  438de1:	jno    0x438d63
  438de3:	fidivr WORD PTR [eax]
  438de5:	mov    bl,0x91
  438de7:	dec    ebp
  438de8:	cmp    al,0x7f
  438dea:	mov    ecx,0x59d0bb88
  438def:	(bad)  
  438df0:	(bad)  
  438df1:	push   ss
  438df2:	xchg   ebp,eax
  438df3:	or     al,0x72
  438df5:	cmp    al,0x58
  438df7:	dec    edx
  438df8:	add    BYTE PTR [eax-0x57fae5d0],ch
  438dfe:	push   0xffffff85
  438e00:	pop    ebx
  438e01:	cmc    
  438e02:	sbb    ecx,ecx
  438e04:	mov    ds:0x87649c70,eax
  438e09:	sub    al,0x35
  438e0b:	test   BYTE PTR [ebx+0x59],al
  438e0e:	add    cl,cl
  438e10:	mov    bl,0x70
  438e12:	mov    WORD PTR [edi+eax*4+0x24],?
  438e16:	inc    ebp
  438e17:	test   BYTE PTR [ebx-0x57],al
  438e1a:	ret    0x5249
  438e1d:	fs stos DWORD PTR es:[edi],eax
  438e1f:	mov    ch,0x15
  438e21:	push   edx
  438e22:	iret   
  438e23:	nop
  438e24:	xchg   ebp,eax
  438e25:	jmp    0xe6439800
  438e2a:	add    BYTE PTR [eax],al
  438e2c:	outs   dx,DWORD PTR ds:[esi]
  438e2d:	or     eax,0xc5a7c73d
  438e32:	dec    edx
  438e33:	lea    edx,[ebp+ecx*8+0x4a]
  438e37:	test   DWORD PTR [ecx],ebx
  438e39:	cmc    
  438e3a:	mov    ebp,0x7386b4bb
  438e3f:	shl    DWORD PTR [ebx-0x754b78f1],1
  438e45:	or     DWORD PTR [ecx],0x9009d6e9
  438e4b:	(bad)  
  438e4c:	push   ebx
  438e4d:	mov    ebp,0xb8d94542
  438e52:	add    DWORD PTR [ecx+0x79ff4153],esi
  438e58:	mov    BYTE PTR [ebx+eax*2+0x7251dbfd],al
  438e5f:	in     al,0x61
  438e61:	enter  0x72fb,0x9e
  438e65:	mov    al,al
  438e67:	push   esp
  438e68:	lock test BYTE PTR [ebx-0x3],al
  438e6c:	dec    ebx
  438e6d:	sbb    al,cl
  438e6f:	and    al,0xc9
  438e71:	sti    
  438e72:	(bad)  
  438e73:	jmp    FWORD PTR [edi+eax*1-0x4173b27d]
  438e7a:	add    DWORD PTR [ebx+0x108303bc],eax
  438e80:	xor    eax,0xa8007c3d
  438e85:	sar    ch,1
  438e87:	add    BYTE PTR [edi+eax*1+0x0],bh
  438e8b:	pop    esi
  438e8c:	scas   eax,DWORD PTR es:[edi]
  438e8d:	(bad)  
  438e8e:	push   edx
  438e8f:	mov    eax,DWORD PTR [eax]
  438e91:	add    BYTE PTR [ecx+0x7a],bl
  438e94:	mov    esp,0x61357
  438e99:	add    BYTE PTR [esp+ecx*1-0x41],bh
  438e9d:	jbe    0x438f10
  438e9f:	xor    DWORD PTR [esp+edi*2+0x71],edi
  438ea3:	arpl   WORD PTR [eax],ax
  438ea5:	jne    0x438f10
  438ea7:	push   eax
  438ea8:	xor    al,0xf8
  438eaa:	cs aam 0x32
  438ead:	iret   
  438eae:	das    
  438eaf:	add    al,0x81
  438eb1:	jge    0x438e43
  438eb3:	cwde   
  438eb4:	stc    
  438eb5:	jmp    FWORD PTR [edi+eax*1]
  438eb8:	adc    esi,0xffffffc1
  438ebb:	and    bl,BYTE PTR ds:0x4ca03300
  438ec1:	push   ebp
  438ec2:	pop    eax
  438ec3:	add    al,0xee
  438ec5:	sub    edi,DWORD PTR [ebp+0x7f420f4e]
  438ecb:	int3   
  438ecc:	push   es
  438ecd:	jbe    0x438ea2
  438ecf:	mov    ebx,0xe079084c
  438ed4:	jne    0x438ee9
  438ed6:	imul   esi,esp,0xce7f0573
  438edc:	clc    
  438edd:	jae    0x438ed5
  438edf:	ja     0x438f38
  438ee1:	xor    DWORD PTR [edi+edx*8+0x6b098b52],0xffffffbc
  438ee9:	xor    edi,DWORD PTR [edi+ebp*1-0x7e]
  438eed:	inc    ebp
  438eee:	aad    0xaa
  438ef0:	mov    edi,esi
  438ef2:	ret    0xfd30
  438ef5:	in     al,0x0
  438ef7:	add    ch,cl
  438ef9:	mov    ch,0xa7
  438efb:	and    al,0xd5
  438efd:	xor    ch,bh
  438eff:	inc    DWORD PTR [ebp-0x36]
  438f02:	jp     0x438f50
  438f04:	fsub   DWORD PTR [ebp+eiz*8-0x5ed1f104]
  438f0b:	jge    0x438ea2
  438f0d:	cs out 0x86,eax
  438f10:	sbb    DWORD PTR [esi],ebp
  438f12:	cmp    DWORD PTR [ebp+0x7d],0x4ee6d32a
  438f19:	cmc    
  438f1a:	repz test al,ch
  438f1d:	pop    esp
  438f1e:	adc    al,0xc0
  438f20:	push   eax
  438f21:	imul   ebx,eax,0xfaffb26
  438f27:	cmp    eax,0x8ea5cd5
  438f2c:	mov    dh,BYTE PTR [esp+eax*8]
  438f2f:	or     BYTE PTR [edx-0x447c4d84],al
  438f35:	test   eax,0xbbca5207
  438f3a:	idiv   DWORD PTR [ebx+edi*4]
  438f3d:	sti    
  438f3e:	(bad)  
  438f3f:	push   edx
  438f40:	push   ecx
  438f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438f42:	mov    bh,0x52
  438f44:	pop    ecx
  438f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438f46:	mov    al,0x7
  438f48:	xchg   ebp,eax
  438f49:	daa    
  438f4a:	outs   dx,BYTE PTR ds:[esi]
  438f4c:	sub    dh,BYTE PTR [edi+0x2ffd7d41]
  438f52:	xchg   cl,bh
  438f54:	add    cl,BYTE PTR [ebx]
  438f56:	dec    edi
  438f57:	je     0x438f15
  438f59:	js     0x438f2c
  438f5b:	or     al,0x0
  438f5d:	add    BYTE PTR [edx],bl
  438f5f:	gs sub eax,edi
  438f62:	sahf   
  438f63:	jo     0x438f62
  438f65:	rcr    BYTE PTR [eax-0x6ab3f3f0],0x9
  438f6c:	out    0x7a,eax
  438f6e:	push   ds
  438f6f:	cs into 
  438f71:	adc    ecx,DWORD PTR [ebp-0x3d3be24e]
  438f77:	out    0xe4,al
  438f79:	add    eax,0xc67009d5
  438f7e:	mov    ?,WORD PTR [edx+0x7f]
  438f81:	mov    esp,0x60409ea
  438f86:	mov    ds:0x167ae739,eax
  438f8b:	sub    ch,BYTE PTR [edx-0x17f5893a]
  438f91:	add    edx,ebp
  438f93:	and    al,0xe4
  438f95:	jp     0x438f9d
  438f97:	sub    ah,BYTE PTR [eax-0x2a]
  438f9a:	sahf   
  438f9b:	push   ecx
  438f9c:	sub    al,0x68
  438f9e:	loopne 0x438fa9
  438fa0:	out    0x3,eax
  438fa2:	push   eax
  438fa3:	iret   
  438fa4:	fidivr DWORD PTR [ebp+edx*8-0x7e]
  438fa8:	and    al,0x54
  438faa:	push   edx
  438fab:	(bad)  
  438fac:	ds jl  0x438f4d
  438faf:	xor    eax,0x9d5029f
  438fb4:	out    0x34,eax
  438fb6:	xor    eax,0xbe7a2dfd
  438fbb:	xor    DWORD PTR [eax-0x52],esi
  438fbe:	test   DWORD PTR ds:[edi],edi
  438fc1:	jle    0x438fc3
  438fc3:	add    BYTE PTR [ebp+0x12ce6038],bl
  438fc9:	and    DWORD PTR [edi+esi*1-0x7bcd38ae],0xb
  438fd1:	or     edx,DWORD PTR [eax+ecx*1+0x3e5ddce]
  438fd8:	aad    0x24
  438fda:	fld    QWORD PTR [ebx+eax*1-0x500383f4]
  438fe1:	ftst   
  438fe3:	add    edx,ebp
  438fe5:	or     BYTE PTR [eax],al
  438fe7:	push   0xffffffe4
  438fe9:	ss stc 
  438feb:	jmp    0xd32b4c4f
  438ff0:	rol    BYTE PTR [ebx+0x9d6e995],1
  438ff6:	add    BYTE PTR [edx-0x5c],ah
  438ff9:	dec    eax
  438ffa:	xchg   BYTE PTR [ecx+ecx*1],dh
  438ffd:	(bad)  
  438ffe:	jae    0x438fcd
  439000:	iret   
  439001:	inc    esi
  439002:	mov    BYTE PTR [eax+eiz*4],dl
  439005:	lea    edx,[ebx-0x3f]
  439008:	mov    ds:0xd961fe79,al
  43900d:	dec    cl
  43900f:	and    al,0xdb
  439011:	dec    ebx
  439012:	inc    ebx
  439013:	stc    
  439014:	(bad)  
  439015:	cs sbb eax,0xb1016e17
  43901b:	jmp    0x43901c
  43901d:	(bad)  
  43901e:	fucomip st,st(2)
  439020:	push   ss
  439021:	nop
  439022:	adc    al,0xf1
  439024:	out    dx,eax
  439025:	(bad)  
  439026:	(bad)  [ecx+0x0]
  439029:	add    BYTE PTR [eax+ecx*1],bl
  43902c:	bound  esp,QWORD PTR [edx+0x5d]
  43902f:	adc    BYTE PTR [edx+0x70],ah
  439032:	mov    WORD PTR [esi],es
  439034:	in     eax,0xf3
  439036:	nop
  439037:	int3   
  439038:	bswap  ecx
  43903a:	out    0x49,eax
  43903c:	bound  esp,QWORD PTR [eax+0xc]
  43903f:	push   es
  439040:	test   DWORD PTR [esi+ebx*4-0x6d8d3b12],esi
  439047:	mov    ?,WORD PTR [ebx+0x45]
  43904a:	dec    edi
  43904b:	cmp    cl,bh
  43904d:	jmp    0x7321d728
  439052:	into   
  439053:	inc    esi
  439054:	jmp    0x876ba4cb
  439059:	lods   al,BYTE PTR ds:[esi]
  43905a:	mov    esi,0xd1743484
  43905f:	or     DWORD PTR [eax],eax
  439061:	add    ah,bh
  439063:	or     bh,al
  439065:	(bad)  
  439066:	clc    
  439067:	test   BYTE PTR [ebx-0x39ed0383],al
  43906d:	sub    ebp,DWORD PTR [esi-0x4b8acf4a]
  439073:	mov    ah,0x4c
  439075:	clc    
  439076:	cmp    DWORD PTR [ecx-0x8],esi
  439079:	mov    eax,0xbad
  43907e:	jg     0x43902b
  439080:	or     BYTE PTR [ebp-0x78],0x82
  439084:	mov    ecx,0x418aa574
  439089:	add    BYTE PTR ds:0xc17cd3,bh
  43908f:	add    cl,ah
  439091:	ret    
  439092:	jl     0x439054
  439094:	lock xor al,0x86
  439097:	js     0x439104
  439099:	in     al,dx
  43909a:	lock add esp,DWORD PTR [esp+edx*8-0x7]
  43909f:	xor    cl,BYTE PTR [ebx-0x74]
  4390a2:	cmp    eax,0xf7837ee8
  4390a7:	(bad)  
  4390a8:	jl     0x4390b5
  4390aa:	pop    esi
  4390ab:	add    DWORD PTR [eax+0x69899d70],esi
  4390b1:	xlat   BYTE PTR ds:[ebx]
  4390b2:	ins    BYTE PTR es:[edi],dx
  4390b3:	sbb    esi,edi
  4390b5:	jo     0x4390a4
  4390b7:	cmpxchg dh,dh
  4390ba:	(bad)  
  4390bb:	jmp    FWORD PTR [esp+esi*4]
  4390be:	inc    esp
  4390bf:	call   0x8b4d30df
  4390c4:	xor    DWORD PTR [edi],0x7b38b708
  4390ca:	or     BYTE PTR [ebp-0x1c],0xb3
  4390ce:	enter  0x413b,0xc7
  4390d2:	push   es
  4390d3:	xchg   BYTE PTR [eax],ah
  4390d5:	enter  0xfff6,0x87
  4390d9:	push   ecx
  4390da:	lds    esp,FWORD PTR [ebx]
  4390dc:	aad    0x17
  4390de:	jl     0x439153
  4390e0:	adc    DWORD PTR [eax+ebx*8-0x29],ebx
  4390e4:	loop   0x43908a
  4390e6:	in     eax,dx
  4390e7:	clc    
  4390e8:	jmp    0x7623:0x68d58137
  4390ef:	pop    ebx
  4390f0:	fldcw  WORD PTR [ebx+0xefb7]
  4390f6:	pop    esi
  4390f7:	in     eax,0x3b
  4390f9:	mov    ebx,ecx
  4390fb:	mov    ds:0xabc54b74,al
  439100:	mov    eax,0x8c6beef7
  439105:	push   DWORD PTR [edx-0x3e7502e0]
  43910b:	cmp    esi,DWORD PTR [eax]
  43910d:	loopne 0x4390ed
  43910f:	adc    eax,0xd5b96d58
  439114:	xlat   BYTE PTR ds:[ebx]
  439115:	push   edx
  439116:	cmp    DWORD PTR [edi],edi
  439118:	xchg   esp,eax
  439119:	cmp    bh,BYTE PTR [esi+0x3c0816f]
  43911f:	sub    eax,0x6e563ebf
  439124:	(bad)  
  439125:	cld    
  439126:	xor    cl,BYTE PTR [ebx-0x4e]
  439129:	repz out 0x9b,eax
  43912c:	ja     0x4391a1
  43912e:	cdq    
  43912f:	stos   DWORD PTR es:[edi],eax
  439130:	mov    al,0xd3
  439132:	dec    esi
  439133:	in     eax,dx
  439134:	sti    
  439135:	mov    eax,0xfffd20d4
  43913a:	es iret 
  43913c:	(bad)  
  43913d:	ror    BYTE PTR [ebp+ebx*2+0x2d],1
  439141:	xchg   DWORD PTR [eax-0x2b078104],esp
  439147:	jne    0x43913e
  439149:	jle    0x43917a
  43914b:	pushf  
  43914c:	add    BYTE PTR [eax],al
  43914e:	aad    0xcb
  439150:	idiv   BYTE PTR [ebp+ebx*1+0x22]
  439154:	ror    BYTE PTR [ebx],cl
  439156:	push   esp
  439157:	or     DWORD PTR ds:0x80000b4,ebx
  43915d:	ss out 0xfc,eax
  439160:	cmp    DWORD PTR [ecx-0x19],0x2182d503
  439167:	jns    0x4391cf
  439169:	sbb    eax,0x552f66e
  43916e:	gs jns 0x439140
  439171:	sbb    DWORD PTR [edi+ecx*2+0x367dd4d],0x58
  439179:	cld    
  43917a:	ins    DWORD PTR es:[edi],dx
  43917b:	mov    esi,0x42a8e1ba
  439180:	retf   0x6008
  439183:	(bad)  
  439184:	mov    ds:0x54bf5fac,al
  439189:	or     al,dl
  43918b:	aad    0xac
  43918d:	xor    eax,0xe06379ba
  439192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439193:	adc    BYTE PTR [edx-0x2d0bdbb4],dl
  439199:	sub    DWORD PTR [ebx+esi*8],0xf22c82f4
  4391a0:	push   edi
  4391a1:	xor    eax,0xbf51b31b
  4391a6:	xchg   esi,eax
  4391a7:	xchg   BYTE PTR [eax+0x1678e2be],cl
  4391ad:	inc    esi
  4391ae:	mov    BYTE PTR [eax+ebp*4-0x32],0x8e
  4391b3:	xlat   BYTE PTR ds:[ebx]
  4391b4:	enter  0x2480,0x50
  4391b8:	pop    eax
  4391b9:	(bad)  
  4391ba:	cli    
  4391bb:	js     0x4391b7
  4391bd:	clc    
  4391be:	cmp    eax,0x9600007a
  4391c3:	xor    DWORD PTR [edi-0x3a],ebx
  4391c6:	retf   
  4391c7:	xor    BYTE PTR [edi],0x78
  4391ca:	sbb    BYTE PTR [ecx-0x7ec2cfd6],al
  4391d0:	lods   al,BYTE PTR ds:[esi]
  4391d1:	repz pop ebx
  4391d3:	push   es
  4391d4:	add    BYTE PTR [edi-0x65],ch
  4391d7:	retf   
  4391d8:	clc    
  4391d9:	jno    0x4391b2
  4391db:	or     DWORD PTR [eax],eax
  4391dd:	jmp    0x26c6bba7
  4391e2:	sub    cl,BYTE PTR [edx]
  4391e4:	nop
  4391e5:	cmp    BYTE PTR [esi-0x636b3e78],bl
  4391eb:	mov    al,al
  4391ed:	jge    0x4391de
  4391ef:	jg     0x439239
  4391f1:	inc    dl
  4391f3:	cmp    al,0xfd
  4391f5:	lock add BYTE PTR [edi-0x7b],ah
  4391f9:	xchg   esp,eax
  4391fa:	or     cl,BYTE PTR [edi+0x64dfd43]
  439200:	xchg   ebx,eax
  439201:	jmp    0xe8439bdc
  439206:	mov    esi,0x32cd438d
  43920b:	fst    DWORD PTR [edi]
  43920d:	es jg  0x43919b
  439210:	(bad)  
  439211:	stc    
  439212:	push   ss
  439213:	fild   WORD PTR [esp+ecx*8+0xf59756c]
  43921a:	popa   
  43921b:	xor    al,0xf9
  43921d:	jmp    0x84c870f8
  439222:	sub    al,0x75
  439224:	int3   
  439225:	xchg   esi,eax
  439226:	add    BYTE PTR [eax],al
  439228:	mov    ah,0x25
  43922a:	movaps xmm1,xmm3
  43922d:	inc    ebp
  43922e:	int3   
  43922f:	jb     0x439244
  439231:	ja     0x4391c3
  439233:	adc    ecx,esi
  439235:	lods   eax,DWORD PTR ds:[esi]
  439236:	cmp    al,0xe9
  439238:	jp     0x4391cd
  43923a:	add    cl,ch
  43923c:	(bad)  
  43923d:	or     DWORD PTR [eax+0x72],edx
  439240:	adc    eax,0x1d700fe8
  439245:	call   0xe860f659
  43924a:	lar    edi,WORD PTR [ecx+0x4b0051c6]
  439251:	mov    bl,0x3c
  439253:	clc    
  439254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439255:	sub    ah,cl
  439257:	push   eax
  439258:	mov    bh,0x4a
  43925a:	cmc    
  43925b:	(bad)  
  43925c:	cmp    esp,ecx
  43925e:	idiv   bh
  439260:	mov    bl,0xc0
  439262:	add    BYTE PTR [ebp-0x4c],0xb2
  439266:	cmp    al,0xf0
  439268:	dec    eax
  439269:	imul   eax,DWORD PTR [eax],0x0
  43926c:	cld    
  43926d:	pop    es
  43926e:	mov    ebx,0x63d8218b
  439273:	mov    ecx,esi
  439275:	pop    es
  439276:	add    BYTE PTR [eax],al
  439278:	in     al,dx
  439279:	fs pop eax
  43927b:	pop    esi
  43927c:	test   BYTE PTR [bx+si-0x3d],0xb3
  439281:	jmp    0xcccc:0xdec163f
  439288:	push   DWORD PTR [edi-0x7c]
  43928b:	inc    esp
  43928c:	add    BYTE PTR [eax],al
  43928e:	fsub   DWORD PTR ds:0x25e9c004
  439294:	test   BYTE PTR [eax+ebx*8+0x39],cl
  439298:	test   BYTE PTR [eax+ecx*8+0x3d],al
  43929c:	sub    al,0xd2
  43929e:	dec    ebx
  43929f:	fiadd  WORD PTR [edx+0x1d7307d8]
  4392a5:	or     al,0x6b
  4392a7:	fiadd  WORD PTR [edx-0x7bb1a82d]
  4392ad:	enter  0x6af7,0x1d
  4392b1:	adc    al,0xe7
  4392b3:	bound  ebx,QWORD PTR ds:0x1d72e710
  4392b9:	or     al,0x3d
  4392bb:	(bad)  
  4392bc:	enter  0x6ddb,0xd5
  4392c0:	enter  0x47d8,0xf6
  4392c4:	ins    BYTE PTR es:[edi],dx
  4392c5:	hlt    
  4392c6:	stos   DWORD PTR es:[edi],eax
  4392c7:	fild   DWORD PTR [edx-0x272c2a10]
  4392cd:	and    ecx,ebp
  4392cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4392d0:	xor    al,0x85
  4392d2:	xchg   ecx,eax
  4392d3:	add    al,0xf0
  4392d5:	lock cmp esp,DWORD PTR [eax]
  4392d8:	xor    al,0x6e
  4392da:	retf   
  4392db:	aaa    
  4392dc:	test   eax,0xf57be523
  4392e1:	ins    DWORD PTR es:[edi],dx
  4392e2:	shl    BYTE PTR [edi],cl
  4392e4:	mov    ecx,0x49ad123
  4392e9:	dec    edx
  4392ea:	(bad)  
  4392eb:	out    dx,al
  4392ec:	jns    0x4392b0
  4392ee:	xchg   ebx,eax
  4392ef:	ja     0x439334
  4392f1:	adc    BYTE PTR [eax],al
  4392f3:	add    ch,dl
  4392f5:	or     al,BYTE PTR [esi-0x7]
  4392f8:	loop   0x43931a
  4392fa:	std    
  4392fb:	call   ebp
  4392fd:	sbb    BYTE PTR [esi-0x7],al
  439300:	shl    BYTE PTR [eax],cl
  439302:	std    
  439303:	call   ebp
  439305:	sub    al,BYTE PTR [edi-0x7]
  439308:	ret    0xf076
  43930b:	cmp    al,0xd5
  43930d:	jp     0x4392ff
  43930f:	cmp    al,0xd5
  439311:	and    ch,bh
  439313:	call   ebp
  439315:	dec    ebx
  439316:	inc    edi
  439317:	stc    
  439318:	mov    ds:0xd53e8b96,al
  43931d:	mov    cl,BYTE PTR [ebx-0x2df2ac2]
  439323:	call   ebp
  439325:	imul   eax,DWORD PTR [edi-0x7],0xffffff82
  439329:	cmp    dl,cl
  43932b:	cmp    eax,0x3dca2cd5
  439330:	aad    0x20
  439332:	std    
  439333:	call   ebp
  439335:	mov    eax,DWORD PTR [edi-0x7]
  439338:	bound  eax,QWORD PTR [ebx-0x502ac0ba]
  43933e:	inc    ebp
  43933f:	aas    
  439340:	aad    0x20
  439342:	std    
  439343:	call   ebp
  439345:	or     DWORD PTR [edx+0x49],esp
  439348:	cmp    al,0x32
  43934a:	(bad)  
  43934b:	dec    ecx
  43934c:	cli    
  43934d:	or     edx,ebx
  43934f:	dec    ecx
  439350:	repnz or edi,esp
  439353:	add    edx,ebp
  439355:	or     DWORD PTR [edx+0x49],eax
  439358:	add    BYTE PTR [eax],al
  43935a:	sbb    al,0x32
  43935c:	add    DWORD PTR [edi-0x26],eax
  43935f:	or     ebp,edi
  439361:	inc    esi
  439362:	ror    BYTE PTR [ecx],cl
  439364:	out    0x3,eax
  439366:	aad    0x9
  439368:	and    cl,BYTE PTR [ecx-0x4]
  43936b:	xor    DWORD PTR [esi-0x45f645b9],esi
  439371:	inc    edi
  439372:	mov    dl,0x9
  439374:	out    0x3,eax
  439376:	aad    0x9
  439378:	add    cl,BYTE PTR [ecx-0x24]
  43937b:	xor    DWORD PTR [edi+0x46],esp
  43937e:	xchg   ebp,eax
  43937f:	or     DWORD PTR [ebx+0x46],ebp
  439382:	adc    eax,0xd503e70a
  439387:	or     edx,esp
  439389:	dec    eax
  43938a:	mov    esp,0xfa46b431
  43938f:	or     DWORD PTR [eax-0x18f60dba],esi
  439395:	add    edx,ebp
  439397:	or     edx,eax
  439399:	dec    eax
  43939a:	pushf  
  43939b:	xor    DWORD PTR [edx],ebp
  43939d:	xchg   ebx,eax
  43939e:	fimul  DWORD PTR [ecx]
  4393a0:	push   ss
  4393a1:	xchg   ebx,eax
  4393a2:	ror    BYTE PTR [ecx],cl
  4393a4:	out    0x3,eax
  4393a6:	aad    0x9
  4393a8:	mov    ds:0xc3317c48,al
  4393ad:	xchg   ebx,eax
  4393ae:	mov    edx,0xb293bf09
  4393b3:	or     edi,esp
  4393b5:	add    edx,ebp
  4393b7:	or     DWORD PTR [edx-0x9cea3b8],eax
  4393bd:	iret   
  4393be:	add    BYTE PTR [eax],al
  4393c0:	cwde   
  4393c1:	or     DWORD PTR [eax],eax
  4393c3:	(bad)  
  4393c4:	and    ch,bh
  4393c6:	(bad)  
  4393c7:	call   0xe9439da2
  4393cc:	(bad)  
  4393cd:	or     DWORD PTR [eax],eax
  4393cf:	jmp    0xbc439daa
  4393d4:	pop    ecx
  4393d5:	push   ds
  4393d6:	and    DWORD PTR [eax-0x75],esp
  4393d9:	ror    BYTE PTR [ebp-0x61],0x7e
  4393dd:	mov    DWORD PTR [eax],edx
  4393df:	jmp    0xe9523dba
  4393e4:	(bad)  
  4393e5:	int    0xe
  4393e7:	jmp    0xe95265c2
  4393ec:	(bad)  
  4393ed:	aad    0xe
  4393ef:	jmp    0xe95239ca
  4393f4:	(bad)  
  4393f5:	lea    ecx,[edi]
  4393f7:	jmp    0xe95315d2
  4393fc:	(bad)  
  4393fd:	test   DWORD PTR [edi],ecx
  4393ff:	jmp    0xe9525dda
  439404:	(bad)  
  439405:	in     eax,dx
  439406:	push   cs
  439407:	jmp    0xe95285e2
  43940c:	(bad)  
  43940d:	cmc    
  43940e:	push   cs
  43940f:	jmp    0xe95259ea
  439414:	(bad)  
  439415:	lods   eax,DWORD PTR ds:[esi]
  439416:	push   cs
  439417:	jmp    0xe95235f2
  43941c:	(bad)  
  43941d:	clc    
  43941e:	adc    eax,0xee9d6e9
  439423:	jmp    0xe199428
  439428:	psubsw mm2,mm6
  43942b:	adc    DWORD PTR [edi],ecx
  43942d:	jmp    0xe952aa08
  439432:	(bad)  
  439433:	in     eax,0xe
  439435:	jmp    0xe9526210
  43943a:	(bad)  
  43943b:	ror    DWORD PTR [esi],0x0
  43943e:	ins    BYTE PTR es:[edi],dx
  43943f:	or     al,0x44
  439441:	adc    DWORD PTR [esp+ecx*1+0x0],ebp
  439445:	adc    DWORD PTR [esp+ecx*1],edi
  439448:	cld    
  439449:	adc    BYTE PTR [esp+ecx*1],bh
  43944c:	clc    
  43944d:	adc    BYTE PTR [esp+ecx*1],ch
  439450:	hlt    
  439451:	adc    BYTE PTR [esp+ecx*1],ch
  439454:	add    al,0x11
  439456:	cmp    al,0xc
  439458:	cmp    al,0x11
  43945a:	cmp    al,0xc
  43945c:	sub    BYTE PTR [ecx],dl
  43945e:	sub    al,0xc
  439460:	and    al,0x11
  439462:	sub    al,0xc
  439464:	loopne 0x439476
  439466:	cld    
  439467:	or     ebx,esp
  439469:	adc    ah,bh
  43946b:	or     ebx,eax
  43946d:	adc    ah,ch
  43946f:	or     edx,esp
  439471:	adc    ah,ch
  439473:	or     esp,esp
  439475:	adc    ah,bh
  439477:	or     ebx,DWORD PTR [ecx+edx*1]
  43947a:	cld    
  43947b:	or     ebx,DWORD PTR [esi+0x40bec11]
  439481:	adc    esp,ebp
  439483:	or     eax,eax
  439485:	adc    BYTE PTR [ebx+ecx*1+0x10bc],bh
  43948c:	mov    esp,0xac10b80b
  439491:	or     esi,DWORD PTR [eax+edx*1+0x10c40bac]
  439498:	mov    esp,0xbc10fc0b
  43949d:	or     edi,DWORD PTR [esi+0x11]
  4394a0:	lods   al,BYTE PTR ds:[esi]
  4394a1:	or     esp,esp
  4394a3:	adc    BYTE PTR [ebx+ecx*1+0xb7c10a0],ch
  4394aa:	pushf  
  4394ab:	adc    BYTE PTR [ebx+ecx*1-0x68],bh
  4394af:	adc    BYTE PTR [ebx+ecx*1-0x6c],ch
  4394b3:	adc    BYTE PTR [ebx+ecx*1-0x5c],ch
  4394b7:	adc    ch,dl
  4394b9:	and    ch,bh
  4394bb:	fcmovnb st,st(5)
  4394bd:	and    ch,bh
  4394bf:	popa   
  4394c0:	les    esp,FWORD PTR [eax]
  4394c2:	std    
  4394c3:	ret    
  4394c4:	lds    esp,FWORD PTR [eax]
  4394c6:	std    
  4394c7:	jg     0x4394ae
  4394c9:	and    ch,bh
  4394cb:	jnp    0x4394b2
  4394cd:	and    ch,bh
  4394cf:	ja     0x4394b6
  4394d1:	and    ch,bh
  4394d3:	jae    0x4394ba
  4394d5:	and    ch,bh
  4394d7:	add    ebp,0x20
  4394da:	std    
  4394db:	mov    ebx,0x41fd20c5
  4394e0:	les    esp,FWORD PTR [eax]
  4394e2:	std    
  4394e3:	mov    ds:0xffd20c5,eax
  4394e8:	in     al,0x20
  4394ea:	std    
  4394eb:	or     esp,esp
  4394ed:	and    ch,bh
  4394ef:	pop    es
  4394f0:	add    BYTE PTR [eax],al
  4394f2:	in     al,0x20
  4394f4:	std    
  4394f5:	add    esp,esp
  4394f7:	and    ch,bh
  4394f9:	inc    esp
  4394fb:	and    ch,bh
  4394fd:	sti    
  4394fe:	lds    esp,FWORD PTR [eax]
  439500:	std    
  439501:	test   ebp,0xc5f3fd20
  439507:	and    ch,bh
  439509:	ret    
  43950a:	in     eax,0x20
  43950c:	std    
  43950d:	mov    edi,0xbbfd20e5
  439512:	in     eax,0x20
  439514:	std    
  439515:	mov    bh,0xe5
  439517:	and    ch,bh
  439519:	mov    bl,0xc5
  43951b:	and    ch,bh
  43951d:	scas   eax,DWORD PTR es:[edi]
  43951e:	lds    esp,FWORD PTR [eax]
  439520:	std    
  439521:	stos   DWORD PTR es:[edi],eax
  439522:	lds    esp,FWORD PTR [eax]
  439524:	std    
  439525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439526:	lds    esp,FWORD PTR [eax]
  439528:	std    
  439529:	das    
  43952a:	in     eax,0x20
  43952c:	std    
  43952d:	sub    esp,ebp
  43952f:	and    ch,bh
  439531:	daa    
  439532:	in     eax,0x9
  439534:	out    0x3,eax
  439536:	mov    cl,0x19
  439538:	out    0x3,eax
  43953a:	mov    ch,0x19
  43953c:	out    0x3,eax
  43953e:	leave  
  43953f:	sbb    edi,esp
  439541:	add    edi,DWORD PTR [ebp-0x3efc18e7]
  439547:	sbb    edi,esp
  439549:	add    esp,ebp
  43954b:	sbb    edi,esp
  43954d:	add    ebx,ecx
  43954f:	sbb    edi,esp
  439551:	add    ecx,ebp
  439553:	sbb    edi,esp
  439555:	add    eax,DWORD PTR [eax]
  439557:	add    cl,dl
  439559:	sbb    edi,esp
  43955b:	add    edx,ebp
  43955d:	sbb    edi,esp
  43955f:	add    ebp,DWORD PTR [ecx]
  439561:	(bad)  
  439562:	out    0x3,al
  439564:	sbb    eax,0x2103e6fe
  439569:	(bad)  
  43956a:	out    0x3,al
  43956c:	add    eax,0xf903e6fe
  439571:	std    
  439572:	out    0x3,al
  439574:	iret   
  439575:	sbb    bh,ah
  439577:	add    esp,DWORD PTR [ecx]
  439579:	(bad)  
  43957a:	out    0x3,al
  43957c:	aas    
  43957d:	sbb    edi,esp
  43957f:	add    esi,DWORD PTR [ebx]
  439581:	sbb    edi,esp
  439583:	add    ebx,DWORD PTR [esi+edx*1]
  439586:	out    0x3,eax
  439588:	jmp    0xd2477ca2
  43958d:	sbb    esp,edi
  43958f:	add    esi,DWORD PTR [ecx+0x1b]
  439592:	out    0x3,eax
  439594:	xchg   ecx,eax
  439595:	std    
  439596:	out    0x3,al
  439598:	in     al,dx
  439599:	sbb    edi,esp
  43959b:	add    edx,DWORD PTR [ebp+0x6903e6fd]
  4395a1:	std    
  4395a2:	out    0x3,al
  4395a4:	pop    ebp
  4395a5:	std    
  4395a6:	out    0x3,al
  4395a8:	popa   
  4395a9:	std    
  4395aa:	out    0x3,al
  4395ac:	dec    ecx
  4395ad:	std    
  4395ae:	(bad)  
  4395af:	call   0xe94d0f8a
  4395b4:	(bad)  
  4395b5:	pop    ebp
  4395b6:	or     ecx,ebp
  4395b8:	(bad)  
  4395b9:	popa   
  4395ba:	or     ecx,ebp
  4395bc:	add    BYTE PTR [eax],al
  4395be:	(bad)  
  4395bf:	gs or  ecx,ebp
  4395c2:	(bad)  
  4395c3:	imul   ecx,DWORD PTR [ecx],0x98dd6e9
  4395c9:	jmp    0xe94d27a4
  4395ce:	(bad)  
  4395cf:	xchg   ebp,eax
  4395d0:	or     ecx,ebp
  4395d2:	(bad)  
  4395d3:	cdq    
  4395d4:	or     ecx,ebp
  4395d6:	(bad)  
  4395d7:	jge    0x4395e2
  4395d9:	jmp    0xe94d17b4
  4395de:	(bad)  
  4395df:	test   DWORD PTR [ecx],ecx
  4395e1:	jmp    0xe94d1fbc
  4395e6:	(bad)  
  4395e7:	lods   eax,DWORD PTR ds:[esi]
  4395e8:	or     cl,ch
  4395ea:	(bad)  
  4395eb:	mov    cl,0x8
  4395ed:	jmp    0xe94cecc8
  4395f2:	(bad)  
  4395f3:	daa    
  4395f4:	psubsw mm2,mm6
  4395f7:	cmp    eax,0x42d6e90f
  4395fc:	or     ecx,ebp
  4395fe:	(bad)  
  4395ff:	(bad)  [eax]
  439601:	jmp    0xe94c53dc
  439606:	(bad)  
  439607:	ror    DWORD PTR [eax],0xe9
  43960a:	(bad)  
  43960b:	lds    ecx,FWORD PTR [eax]
  43960d:	jmp    0xe94c5fe8
  439612:	(bad)  
  439613:	in     eax,dx
  439614:	or     cl,ch
  439616:	(bad)  
  439617:	icebp  
  439618:	or     cl,ch
  43961a:	(bad)  
  43961b:	cmc    
  43961c:	or     cl,ch
  43961e:	(bad)  
  43961f:	stc    
  439620:	or     cl,ch
  439622:	add    BYTE PTR [eax],al
  439624:	(bad)  
  439625:	fisttp QWORD PTR [eax]
  439627:	jmp    0x4c7802
  43962c:	lods   al,BYTE PTR ds:[esi]
  43962d:	or     BYTE PTR [esi+0x11],al
  439630:	jl     0x43963a
  439632:	xor    BYTE PTR [edi],cl
  439634:	jl     0x43963e
  439636:	sub    al,0xf
  439638:	ins    BYTE PTR es:[edi],dx
  439639:	or     BYTE PTR [eax],ch
  43963b:	(bad)  
  43963d:	or     BYTE PTR [edi+ecx*1],ah
  439640:	jl     0x43964a
  439642:	and    BYTE PTR [edi],cl
  439644:	jl     0x43964e
  439646:	sbb    al,0xf
  439648:	ins    BYTE PTR es:[edi],dx
  439649:	or     BYTE PTR [eax],bl
  43964b:	(bad)  
  43964d:	or     BYTE PTR [edi+ecx*1],dl
  439650:	cmp    al,0x8
  439652:	adc    BYTE PTR [edi],cl
  439654:	cmp    al,0x8
  439656:	or     al,0xf
  439658:	sub    al,0x8
  43965a:	mov    ebx,0x4082c10
  43965f:	(bad)  
  439661:	or     BYTE PTR [eax],al
  439663:	(bad)  
  439665:	or     ah,bh
  439667:	push   cs
  439668:	sub    al,0x8
  43966a:	clc    
  43966b:	push   cs
  43966c:	sub    al,0x8
  43966e:	hlt    
  43966f:	push   cs
  439670:	cld    
  439671:	pop    es
  439672:	inc    esp
  439673:	adc    ah,bh
  439675:	pop    es
  439676:	push   eax
  439677:	adc    ah,ch
  439679:	pop    es
  43967a:	cmp    al,0x10
  43967c:	in     al,dx
  43967d:	pop    es
  43967e:	dec    eax
  43967f:	adc    ah,bh
  439681:	pop    es
  439682:	loopne 0x439692
  439684:	cld    
  439685:	pop    es
  439686:	fmul   QWORD PTR [esi]
  439688:	add    BYTE PTR [eax],al
  43968a:	in     al,dx
  43968b:	pop    es
  43968c:	fmul   DWORD PTR [esi]
  43968e:	in     al,dx
  43968f:	pop    es
  439690:	aam    0xe
  439692:	mov    esp,0xbc0ed407
  439697:	pop    es
  439698:	or     al,0xf
  43969a:	lods   al,BYTE PTR ds:[esi]
  43969b:	pop    es
  43969c:	enter  0xac0e,0x7
  4396a0:	les    ecx,FWORD PTR [esi]
  4396a2:	mov    esp,0xd50ec007
  4396a7:	and    ch,bh
  4396a9:	mov    ebx,0xb7fd20d3
  4396ae:	retf   
  4396af:	and    ch,bh
  4396b1:	mov    bl,0xe3
  4396b3:	and    ch,bh
  4396b5:	mov    bl,0xdb
  4396b7:	and    ch,bh
  4396b9:	scas   eax,DWORD PTR es:[edi]
  4396ba:	shl    DWORD PTR [eax],cl
  4396bc:	std    
  4396bd:	stos   DWORD PTR es:[edi],eax
  4396be:	retf   
  4396bf:	and    ch,bh
  4396c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4396c2:	jecxz  0x4396e4
  4396c4:	std    
  4396c5:	mov    ds:0x9ffd20db,eax
  4396ca:	shl    DWORD PTR [eax],cl
  4396cc:	std    
  4396cd:	fwait
  4396ce:	retf   
  4396cf:	and    ch,bh
  4396d1:	xchg   edi,eax
  4396d2:	jecxz  0x4396f4
  4396d4:	std    
  4396d5:	(bad)  
  4396d7:	and    ch,bh
  4396d9:	fcmovnbe st,st(3)
  4396db:	and    ch,bh
  4396dd:	xlat   BYTE PTR ds:[ebx]
  4396de:	retf   
  4396df:	and    ch,bh
  4396e1:	shl    ebx,cl
  4396e3:	and    ch,bh
  4396e5:	iret   
  4396e6:	(bad)  [eax]
  4396e8:	std    
  4396e9:	retf   
  4396ea:	shl    DWORD PTR [eax],cl
  4396ec:	std    
  4396ed:	mov    DWORD PTR [eax],0xfd20cb00
  4396f3:	ret    
  4396f4:	jecxz  0x439716
  4396f6:	std    
  4396f7:	aam    0xdb
  4396f9:	and    ch,bh
  4396fb:	rcl    bl,1
  4396fd:	and    ch,bh
  4396ff:	mov    al,0xca
  439701:	and    ch,bh
  439703:	arpl   bx,sp
  439705:	and    ch,bh
  439707:	sbb    edx,0xd27dfd20
  43970d:	and    ch,bh
  43970f:	mov    esp,0x42fd20cb
  439714:	loop   0x439736
  439716:	std    
  439717:	imul   ebx,edx,0x20
  43971a:	std    
  43971b:	dec    ebx
  43971c:	shl    DWORD PTR [eax],cl
  43971e:	std    
  43971f:	nop
  439720:	retf   0xe709
  439723:	add    ebx,DWORD PTR [ecx]
  439725:	cld    
  439726:	out    0x3,al
  439728:	adc    eax,0x1503e6fc
  43972d:	cld    
  43972e:	out    0x3,al
  439730:	sub    eax,0xc903e6fc
  439735:	sti    
  439736:	out    0x3,al
  439738:	mov    ch,0xfb
  43973a:	out    0x3,al
  43973c:	loope  0x439739
  43973e:	out    0x3,al
  439740:	(bad)  
  439742:	out    0x3,al
  439744:	leave  
  439745:	sti    
  439746:	out    0x3,al
  439748:	mov    al,0xfa
  43974a:	out    0x3,al
  43974c:	mov    ah,0xfa
  43974e:	out    0x3,al
  439750:	mov    ebp,0x3e6fb
  439755:	add    cl,ch
  439757:	sti    
  439758:	out    0x3,al
  43975a:	push   ebx
  43975b:	adc    ah,bh
  43975d:	add    eax,DWORD PTR [ecx-0x75fc18ee]
  439763:	adc    edi,esp
  439765:	add    edi,DWORD PTR [ecx+edx*1-0x19]
  439769:	add    esi,ebx
  43976b:	adc    bh,ah
  43976d:	add    ebx,DWORD PTR [ebp-0xfc18f0]
  439773:	movntq QWORD PTR [ebx],mm0
  439776:	ret    0xe70f
  439779:	add    eax,DWORD PTR [ecx]
  43977b:	cld    
  43977c:	out    0x3,al
  43977e:	add    eax,0xe903e6fc
  439783:	sti    
  439784:	out    0x3,al
  439786:	std    
  439787:	sti    
  439788:	out    0x3,al
  43978a:	icebp  
  43978b:	sti    
  43978c:	out    0x3,al
  43978e:	cmc    
  43978f:	sti    
  439790:	out    0x3,al
  439792:	stc    
  439793:	sti    
  439794:	out    0x3,al
  439796:	lods   eax,DWORD PTR ds:[esi]
  439797:	pop    ss
  439798:	out    0x3,eax
  43979a:	in     eax,0x17
  43979c:	add    cl,ch
  43979e:	(bad)  
  43979f:	adc    eax,0x4bd6e90a
  4397a4:	or     ecx,ebp
  4397a6:	(bad)  
  4397a7:	push   ecx
  4397a8:	or     ebp,ecx
  4397aa:	(bad)  
  4397ab:	dec    ecx
  4397ac:	or     ebp,ecx
  4397ae:	(bad)  
  4397af:	gs or  ebp,ecx
  4397b2:	(bad)  
  4397b3:	popa   
  4397b4:	or     ebp,ecx
  4397b6:	(bad)  
  4397b7:	pop    ebp
  4397b8:	or     ebp,ecx
  4397ba:	add    BYTE PTR [eax],al
  4397bc:	(bad)  
  4397bd:	mov    ds:0x75d6e909,eax
  4397c2:	or     ebp,ecx
  4397c4:	(bad)  
  4397c5:	ss adc ebp,ecx
  4397c8:	(bad)  
  4397c9:	fist   DWORD PTR [ecx]
  4397cb:	jmp    0xe94f01a6
  4397d0:	(bad)  
  4397d1:	test   DWORD PTR [ebx],ecx
  4397d3:	jmp    0xe9538dae
  4397d8:	(bad)  
  4397d9:	mov    edi,0x79d6e90f
  4397de:	or     ebp,ecx
  4397e0:	(bad)  
  4397e1:	xchg   ebp,eax
  4397e2:	or     ebp,ecx
  4397e4:	(bad)  
  4397e5:	xchg   ecx,eax
  4397e6:	or     ebp,ecx
  4397e8:	(bad)  
  4397e9:	lea    ecx,[ebx]
  4397eb:	jmp    0xe94f21c6
  4397f0:	(bad)  
  4397f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4397f2:	or     ch,cl
  4397f4:	(bad)  
  4397f5:	jno    0x439807
  4397f7:	jmp    0xe953e4d2
  4397fc:	(bad)  
  4397fd:	inc    edi
  4397fe:	adc    cl,ch
  439800:	(bad)  
  439801:	and    dl,BYTE PTR [eax]
  439803:	jmp    0xe94e59de
  439808:	(bad)  
  439809:	mov    ebp,0x63d6e90a
  43980e:	or     ecx,ebp
  439810:	(bad)  
  439811:	lds    ecx,FWORD PTR [edx]
  439813:	jmp    0x4e59ee
  439818:	mov    esp,0xbc0d540c
  43981d:	or     al,0x50
  43981f:	or     eax,0xcac0000
  439824:	dec    esp
  439825:	or     eax,0xf9e0cac
  43982a:	mov    esp,0xbc0d440c
  43982f:	or     al,0x96
  439831:	shrd   DWORD PTR [esp+ebp*1],ecx,0xd
  439836:	lods   al,BYTE PTR ds:[esi]
  439837:	or     al,0x38
  439839:	or     eax,0xf8a0c7c
  43983e:	jl     0x43984c
  439840:	and    BYTE PTR ds:0xd1c0c6c,cl
  439846:	ins    BYTE PTR es:[edi],dx
  439847:	or     al,0x18
  439849:	or     eax,0xd140c7c
  43984e:	jl     0x43985c
  439850:	adc    BYTE PTR ds:0xd0c0c6c,cl
  439856:	ins    BYTE PTR es:[edi],dx
  439857:	or     al,0x8
  439859:	or     eax,0xd040c3c
  43985e:	cmp    al,0xc
  439860:	jge    0x439876
  439862:	sub    al,0xc
  439864:	cld    
  439865:	or     al,0x2c
  439867:	or     al,0xf8
  439869:	or     al,0x3c
  43986b:	or     al,0xf4
  43986d:	or     al,0x3c
  43986f:	or     al,0xf0
  439871:	or     al,0x2c
  439873:	or     al,0xec
  439875:	or     al,0x2c
  439877:	or     al,0xe8
  439879:	or     al,0xfc
  43987b:	or     esp,esp
  43987d:	or     al,0xfc
  43987f:	or     ebp,DWORD PTR [eax]
  439881:	push   cs
  439882:	in     al,dx
  439883:	or     esp,DWORD PTR [esi+ecx*1]
  439886:	add    BYTE PTR [eax],al
  439888:	in     al,dx
  439889:	or     esp,DWORD PTR [eax]
  43988b:	push   cs
  43988c:	cld    
  43988d:	or     ebx,DWORD PTR [esi+ecx*1]
  439890:	cld    
  439891:	or     esi,DWORD PTR [esi]
  439893:	pmullw mm6,QWORD PTR [edx]
  439896:	std    
  439897:	xor    eax,0x31fd32ca
  43989c:	loop   0x4398ce
  43989e:	std    
  43989f:	sub    eax,0xbffd30da
  4398a4:	shl    DWORD PTR [eax],1
  4398a6:	std    
  4398a7:	mov    ebx,0xb7fd30c9
  4398ac:	loope  0x4398de
  4398ae:	std    
  4398af:	mov    bl,0xd9
  4398b1:	xor    ch,bh
  4398b3:	scas   eax,DWORD PTR es:[edi]
  4398b4:	shl    DWORD PTR [eax],1
  4398b6:	std    
  4398b7:	stos   DWORD PTR es:[edi],eax
  4398b8:	leave  
  4398b9:	xor    ch,bh
  4398bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398bc:	loope  0x4398ee
  4398be:	std    
  4398bf:	mov    ds:0xaffd30d9,eax
  4398c4:	shl    DWORD PTR [eax],1
  4398c6:	std    
  4398c7:	stos   DWORD PTR es:[edi],eax
  4398c8:	leave  
  4398c9:	xor    ch,bh
  4398cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398cc:	loope  0x4398fe
  4398ce:	std    
  4398cf:	mov    ds:0x9ffd30d9,eax
  4398d4:	shl    DWORD PTR [eax],1
  4398d6:	std    
  4398d7:	fwait
  4398d8:	leave  
  4398d9:	xor    ch,bh
  4398db:	icebp  
  4398dc:	jecxz  0x43990e
  4398de:	std    
  4398df:	in     eax,dx
  4398e0:	(bad)  [eax]
  4398e2:	std    
  4398e3:	mov    ebx,0xe5fd30e8
  4398e8:	retf   
  4398e9:	xor    ch,bh
  4398eb:	aam    0x0
  4398ed:	add    al,cl
  4398ef:	xor    ch,bh
  4398f1:	fstp   st(3)
  4398f3:	xor    ch,bh
  4398f5:	(bad)  
  4398f7:	xor    ch,bh
  4398f9:	aad    0xcb
  4398fb:	xor    ch,bh
  4398fd:	shl    ebx,1
  4398ff:	xor    ch,bh
  439901:	int    0xdb
  439903:	xor    ch,bh
  439905:	pop    edi
  439906:	shl    DWORD PTR [eax],1
  439908:	std    
  439909:	pop    ebx
  43990a:	leave  
  43990b:	xor    ch,bh
  43990d:	push   edi
  43990e:	loope  0x439919
  439910:	out    0x3,eax
  439912:	adc    DWORD PTR ds:0x158503e7,0x158903e7
  43991c:	out    0x3,eax
  43991e:	sbb    eax,0x1103e716
  439923:	push   ss
  439924:	out    0x3,eax
  439926:	adc    eax,0xf903e716
  43992b:	adc    eax,0x15ed03e7
  439930:	out    0x3,eax
  439932:	loope  0x439949
  439934:	out    0x3,eax
  439936:	in     eax,0x15
  439938:	out    0x3,eax
  43993a:	jmp    0xbd478054
  43993f:	adc    eax,0x15b103e7
  439944:	out    0x3,eax
  439946:	mov    ch,0x15
  439948:	out    0x3,eax
  43994a:	fst    DWORD PTR ds:0x15cd03e7
  439950:	out    0x3,eax
  439952:	add    BYTE PTR [eax],al
  439954:	rcl    DWORD PTR ds:0x15c503e7,0xe7
  43995b:	add    ecx,ecx
  43995d:	adc    eax,0x15dd03e7
  439962:	out    0x3,eax
  439964:	rcl    DWORD PTR ds:0x15d503e7,1
  43996a:	out    0x3,eax
  43996c:	cmp    DWORD PTR [edx],edx
  43996e:	out    0x3,eax
  439970:	sub    eax,0x2103e712
  439975:	adc    ah,bh
  439977:	add    esp,DWORD PTR ds:0x2903e712
  43997d:	adc    ah,bh
  43997f:	add    edi,ebp
  439981:	adc    edi,esp
  439983:	add    esi,ecx
  439985:	adc    edi,esp
  439987:	add    esi,ebp
  439989:	adc    DWORD PTR [eax],eax
  43998b:	jmp    0xe948df66
  439990:	(bad)  
  439991:	inc    ecx
  439992:	add    eax,0x53dd6e9
  439997:	jmp    0xe948d372
  43999c:	(bad)  
  43999d:	push   ebp
  43999e:	add    eax,0x551d6e9
  4399a3:	jmp    0xe948e77e
  4399a8:	(bad)  
  4399a9:	dec    ecx
  4399aa:	add    eax,0x565d6e9
  4399af:	jmp    0xe948fb8a
  4399b4:	(bad)  
  4399b5:	pop    ebp
  4399b6:	add    eax,0xd60000e9
  4399bb:	dec    esp
  4399bc:	add    eax,0x548d6e9
  4399c1:	jmp    0xe9490b9c
  4399c6:	(bad)  
  4399c7:	ins    DWORD PTR es:[edi],dx
  4399c8:	add    eax,0x569d6e9
  4399cd:	jmp    0xe95429a8
  4399d2:	(bad)  
  4399d3:	clc    
  4399d4:	push   cs
  4399d5:	jmp    0xe9531fb0
  4399da:	(bad)  
  4399db:	jns    0x4399e2
  4399dd:	jmp    0xe9492fb8
  4399e2:	(bad)  
  4399e3:	xchg   ecx,eax
  4399e4:	add    eax,0x57dd6e9
  4399e9:	jmp    0xe94923c4
  4399ee:	(bad)  
  4399ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4399f0:	add    al,0xe9
  4399f2:	(bad)  
  4399f3:	daa    
  4399f4:	or     ebp,ecx
  4399f6:	(bad)  
  4399f7:	inc    ebx
  4399f8:	or     ebp,ecx
  4399fa:	(bad)  
  4399fb:	cdq    
  4399fc:	add    al,0xe9
  4399fe:	(bad)  
  4399ff:	mov    ch,0x4
  439a01:	jmp    0x484bdc
  439a06:	cld    
  439a07:	or     BYTE PTR [ebx+ecx*1-0x14],ah
  439a0b:	or     BYTE PTR [eax-0x53f713f5],dh
  439a11:	or     edi,esp
  439a13:	or     BYTE PTR [ecx+0x7d08fc0c],al
  439a19:	or     al,0xec
  439a1b:	or     BYTE PTR [ecx+0xc],bh
  439a1e:	add    BYTE PTR [eax],al
  439a20:	in     al,dx
  439a21:	or     BYTE PTR [ebp+0xc],dh
  439a24:	mov    esp,0xbc0b9808
  439a29:	or     BYTE PTR [ebx+ecx*1+0xb9008ac],dl
  439a30:	lods   al,BYTE PTR ds:[esi]
  439a31:	or     BYTE PTR [ebx+ecx*1+0xb8808bc],cl
  439a38:	mov    esp,0xac0b8408
  439a3d:	or     BYTE PTR [eax+0x7c08ac0b],al
  439a43:	or     edi,DWORD PTR [eax+ecx*1+0x78]
  439a47:	or     edi,DWORD PTR [eax+ecx*1+0x74]
  439a4b:	or     ebp,DWORD PTR [eax+ecx*1+0x20]
  439a4f:	or     ebp,DWORD PTR [eax+ecx*1+0x1c]
  439a53:	or     edi,DWORD PTR [eax+ecx*1+0x18]
  439a57:	or     edi,DWORD PTR [eax+ecx*1+0x14]
  439a5b:	or     ebp,DWORD PTR [eax+ecx*1+0x10]
  439a5f:	or     ebp,DWORD PTR [eax+ecx*1+0xc]
  439a63:	or     edi,DWORD PTR [eax+ecx*1]
  439a66:	or     BYTE PTR [ebx],cl
  439a68:	cmp    al,0x8
  439a6a:	add    al,0xb
  439a6c:	sub    al,0x8
  439a6e:	add    BYTE PTR [ebx],cl
  439a70:	sub    al,0x8
  439a72:	cld    
  439a73:	or     bh,BYTE PTR [eax+ecx*1]
  439a76:	clc    
  439a77:	or     bh,BYTE PTR [eax+ecx*1]
  439a7a:	hlt    
  439a7b:	or     ch,BYTE PTR [eax+ecx*1]
  439a7e:	lock or dl,ch
  439a81:	xor    bh,ch
  439a83:	jmp    0x439a85
  439a85:	add    bh,bl
  439a87:	xor    bh,ch
  439a89:	out    0xdf,eax
  439a8b:	xor    bh,ch
  439a8d:	jecxz  0x439a5e
  439a8f:	xor    bh,ch
  439a91:	out    dx,eax
  439a92:	iret   
  439a93:	xor    bh,ch
  439a95:	jmp    0x439a76
  439a97:	xor    bh,ch
  439a99:	out    0xdf,eax
  439a9b:	xor    bh,ch
  439a9d:	ror    edi,cl
  439a9f:	xor    bh,ch
  439aa1:	inc    esp
  439aa2:	into   
  439aa3:	xor    bh,ch
  439aa5:	retf   
  439aa6:	fbstp  TBYTE PTR [eax]
  439aa8:	std    
  439aa9:	xor    eax,ebx
  439aab:	xor    ch,bh
  439aad:	sub    eax,0xcffd30d0
  439ab2:	iret   
  439ab3:	xor    ch,bh
  439ab5:	retf   
  439ab6:	fbstp  TBYTE PTR [eax]
  439ab8:	std    
  439ab9:	(bad)  
  439aba:	fbstp  TBYTE PTR [eax]
  439abc:	std    
  439abd:	mov    bl,0xcf
  439abf:	xor    ch,bh
  439ac1:	and    al,0xce
  439ac3:	xor    ch,bh
  439ac5:	stos   DWORD PTR es:[edi],eax
  439ac6:	fbstp  TBYTE PTR [eax]
  439ac8:	std    
  439ac9:	addr16 in al,0x30
  439acc:	std    
  439acd:	mov    ds:0x9ffd30cf,eax
  439ad2:	iret   
  439ad3:	xor    ch,bh
  439ad5:	fbstp  TBYTE PTR [eax]
  439ad8:	std    
  439ad9:	xchg   edi,eax
  439ada:	fbstp  TBYTE PTR [eax]
  439adc:	std    
  439add:	xchg   ebx,eax
  439ade:	iret   
  439adf:	xor    ch,bh
  439ae1:	(bad)  
  439ae2:	iret   
  439ae3:	xor    ch,bh
  439ae5:	mov    ebx,edi
  439ae7:	xor    ch,bh
  439ae9:	xchg   DWORD PTR [eax],eax
  439aeb:	add    bh,bl
  439aed:	xor    ch,bh
  439aef:	or     edi,0x30
  439af2:	std    
  439af3:	jg     0x439ac4
  439af5:	xor    ch,bh
  439af7:	mov    ebx,edi
  439af9:	xor    ch,bh
  439afb:	jmp    0x439ad8
  439afd:	or     edi,esp
  439aff:	add    ebp,DWORD PTR [ecx-0x5afc18f1]
  439b05:	movntq QWORD PTR [ebx],mm0
  439b08:	or     DWORD PTR [edi],0xf7d03e7
  439b0e:	out    0x3,eax
  439b10:	jns    0x439b21
  439b12:	out    0x3,eax
  439b14:	jne    0x439b25
  439b16:	out    0x3,eax
  439b18:	xchg   ecx,eax
  439b19:	movntq QWORD PTR [ebx],mm0
  439b1c:	lea    ecx,[edi]
  439b1e:	out    0x3,eax
  439b20:	mov    DWORD PTR [edi],ecx
  439b22:	out    0x3,eax
  439b24:	test   DWORD PTR [edi],ecx
  439b26:	out    0x3,eax
  439b28:	and    DWORD PTR [eax],edx
  439b2a:	out    0x3,eax
  439b2c:	sbb    eax,0xaa03e710
  439b31:	adc    esp,edi
  439b33:	add    esp,DWORD PTR ds:0x2103e710
  439b39:	adc    bh,ah
  439b3b:	add    ebx,DWORD PTR ds:0x1903e710
  439b41:	adc    bh,ah
  439b43:	add    edx,DWORD PTR ds:0xd103e710
  439b49:	movntq QWORD PTR [ebx],mm0
  439b4c:	int    0xf
  439b4e:	out    0x3,eax
  439b50:	add    BYTE PTR [eax],al
  439b52:	leave  
  439b53:	movntq QWORD PTR [ebx],mm0
  439b56:	mov    ch,0xf
  439b58:	out    0x3,eax
  439b5a:	ror    DWORD PTR [edi],1
  439b5c:	out    0x3,eax
  439b5e:	int    0xf
  439b60:	out    0x3,eax
  439b62:	leave  
  439b63:	movntq QWORD PTR [ebx],mm0
  439b66:	lds    ecx,FWORD PTR [edi]
  439b68:	out    0x3,eax
  439b6a:	loope  0x439b7b
  439b6c:	out    0x3,eax
  439b6e:	jb     0x439b7e
  439b70:	out    0x3,eax
  439b72:	(bad)  [edi]
  439b74:	out    0x3,eax
  439b76:	aad    0xf
  439b78:	add    cl,ch
  439b7a:	(bad)  
  439b7b:	and    eax,0x21d6e907
  439b80:	pop    es
  439b81:	jmp    0xe94ab95c
  439b86:	(bad)  
  439b87:	sbb    DWORD PTR [edi],eax
  439b89:	jmp    0xe94ad164
  439b8e:	(bad)  
  439b8f:	xor    DWORD PTR [edi],eax
  439b91:	jmp    0xe94ac96c
  439b96:	(bad)  
  439b97:	sub    DWORD PTR [edi],eax
  439b99:	jmp    0xe94ae174
  439b9e:	(bad)  
  439b9f:	inc    ecx
  439ba0:	pop    es
  439ba1:	jmp    0xe94ad97c
  439ba6:	(bad)  
  439ba7:	cmp    DWORD PTR [edi],eax
  439ba9:	jmp    0xe94ae984
  439bae:	(bad)  
  439baf:	test   al,0x4
  439bb1:	jmp    0xe94ae18c
  439bb6:	add    BYTE PTR [eax],al
  439bb8:	(bad)  
  439bb9:	dec    ecx
  439bba:	pop    es
  439bbb:	jmp    0xe94af996
  439bc0:	(bad)  
  439bc1:	popa   
  439bc2:	pop    es
  439bc3:	jmp    0xe94af19e
  439bc8:	(bad)  
  439bc9:	pop    ecx
  439bca:	pop    es
  439bcb:	jmp    0xe94b09a6
  439bd0:	(bad)  
  439bd1:	jno    0x439bda
  439bd3:	jmp    0xe94b01ae
  439bd8:	(bad)  
  439bd9:	sbb    eax,0x7dd6e905
  439bde:	pop    es
  439bdf:	jmp    0xe94b1dba
  439be4:	(bad)  
  439be5:	jne    0x439bee
  439be7:	jmp    0xe94b15c2
  439bec:	(bad)  
  439bed:	lea    eax,[edi]
  439bef:	jmp    0x4b2dca
  439bf4:	sub    al,0xd
  439bf6:	test   BYTE PTR [ecx],cl
  439bf8:	sub    al,0xd
  439bfa:	or     BYTE PTR [ecx],0x3c
  439bfd:	or     eax,0xd3c097c
  439c02:	js     0x439c0d
  439c04:	sub    al,0xd
  439c06:	je     0x439c11
  439c08:	sub    al,0xd
  439c0a:	jo     0x439c15
  439c0c:	cld    
  439c0d:	or     al,0x6c
  439c0f:	or     esp,edi
  439c11:	or     al,0x68
  439c13:	or     esp,ebp
  439c15:	or     al,0xca
  439c17:	or     ebp,esp
  439c19:	or     al,0x60
  439c1b:	or     DWORD PTR [eax],eax
  439c1d:	add    ah,bh
  439c1f:	or     al,0x5c
  439c21:	or     esp,edi
  439c23:	or     al,0x58
  439c25:	or     esp,ebp
  439c27:	or     al,0x54
  439c29:	or     esp,ebp
  439c2b:	or     al,0x50
  439c2d:	or     DWORD PTR [esp+ecx*1+0xcbc094c],edi
  439c34:	dec    eax
  439c35:	or     DWORD PTR [esp+ecx*1+0xcac0944],ebp
  439c3c:	inc    eax
  439c3d:	or     DWORD PTR [esp+ecx*1+0xcbc093c],edi
  439c44:	cmp    BYTE PTR [ecx],cl
  439c46:	lods   al,BYTE PTR ds:[esi]
  439c47:	or     al,0x34
  439c49:	or     DWORD PTR [esp+ecx*1+0xc7c0b96],ebp
  439c50:	xchg   edx,eax
  439c51:	or     edi,DWORD PTR [esp+ecx*1-0x72]
  439c55:	or     ebp,DWORD PTR [esp+ecx*1-0x76]
  439c59:	or     ebp,DWORD PTR [esp+ecx*1+0x31]
  439c5d:	or     DWORD PTR [esp+ecx*1-0x7e],edi
  439c61:	or     edi,DWORD PTR [esp+ecx*1+0x7e]
  439c65:	or     ebp,DWORD PTR [esp+ecx*1+0x7a]
  439c69:	or     ebp,DWORD PTR [esp+ecx*1+0x21]
  439c6d:	or     ebp,edx
  439c6f:	xor    bh,ch
  439c71:	and    bl,ah
  439c73:	xor    bh,ch
  439c75:	jno    0x439c45
  439c77:	xor    bh,ch
  439c79:	sbb    cl,ah
  439c7b:	xor    bh,ch
  439c7d:	imul   ebx,esi,0x65fd32
  439c83:	add    dh,bl
  439c85:	xor    bh,ch
  439c87:	popa   
  439c88:	into   
  439c89:	xor    bh,ch
  439c8b:	pop    ebp
  439c8c:	into   
  439c8d:	xor    bh,ch
  439c8f:	out    dx,eax
  439c90:	fnsave [edx]
  439c92:	std    
  439c93:	jmp    0x439c72
  439c95:	xor    bh,ch
  439c97:	out    0xcd,eax
  439c99:	xor    bh,ch
  439c9b:	dec    ebp
  439c9c:	into   
  439c9d:	xor    bh,ch
  439c9f:	neg    ch
  439ca1:	xor    bh,ch
  439ca3:	repnz fnsave [edx]
  439ca6:	std    
  439ca7:	out    dx,al
  439ca8:	int    0x32
  439caa:	std    
  439cab:	jmp    0x30dd:0xe6fd32cd
  439cb2:	std    
  439cb3:	loop   0x439c92
  439cb5:	xor    ch,bh
  439cb7:	xor    esi,ecx
  439cb9:	xor    ch,bh
  439cbb:	sub    eax,0xd6fd30ce
  439cc0:	fnsave [eax]
  439cc2:	std    
  439cc3:	rcr    ch,cl
  439cc5:	xor    ch,bh
  439cc7:	into   
  439cc8:	int    0x30
  439cca:	std    
  439ccb:	retf   0x30cd
  439cce:	std    
  439ccf:	sbb    esi,ebx
  439cd1:	xor    ch,bh
  439cd3:	adc    eax,0x11fd30de
  439cd8:	into   
  439cd9:	xor    ch,bh
  439cdb:	or     eax,0xb6fd30ce
  439ce0:	fnsave [eax]
  439ce2:	std    
  439ce3:	mov    dl,0xdd
  439ce5:	xor    ch,bh
  439ce7:	scas   al,BYTE PTR es:[edi]
  439ce8:	add    BYTE PTR [eax],al
  439cea:	int    0x9
  439cec:	out    0x3,eax
  439cee:	cs adc ah,bh
  439cf1:	add    edi,DWORD PTR [edx+0x12]
  439cf4:	out    0x3,eax
  439cf6:	jbe    0x439d0a
  439cf8:	out    0x3,eax
  439cfa:	inc    edi
  439cfb:	adc    al,0xe7
  439cfd:	add    ebx,DWORD PTR [esi+0x12]
  439d00:	out    0x3,eax
  439d02:	dec    edx
  439d03:	adc    ah,bh
  439d05:	add    eax,DWORD PTR [esi+0x12]
  439d08:	out    0x3,eax
  439d0a:	push   edx
  439d0b:	adc    ah,bh
  439d0d:	add    ecx,DWORD PTR [esi+0x12]
  439d10:	out    0x3,eax
  439d12:	pop    edx
  439d13:	adc    ah,bh
  439d15:	add    edx,DWORD PTR [esi+0x12]
  439d18:	out    0x3,eax
  439d1a:	adc    BYTE PTR [ecx],0xe7
  439d1d:	add    edi,DWORD PTR [esi+0x11]
  439d20:	out    0x3,eax
  439d22:	push   0x11
  439d24:	out    0x3,eax
  439d26:	adc    di,sp
  439d29:	add    edx,DWORD PTR [edi]
  439d2b:	adc    al,0xe7
  439d2d:	add    ebx,DWORD PTR [ebx]
  439d2f:	adc    al,0xe7
  439d31:	add    ecx,DWORD PTR [edi-0x7cfc18ed]
  439d37:	adc    esp,edi
  439d39:	add    eax,DWORD PTR [edi+0x6b03e713]
  439d3f:	adc    esp,edi
  439d41:	add    edi,DWORD PTR [edi+0x13]
  439d44:	out    0x3,eax
  439d46:	jae    0x439d5b
  439d48:	out    0x3,eax
  439d4a:	ja     0x439d5f
  439d4c:	out    0x3,eax
  439d4e:	add    BYTE PTR [eax],al
  439d50:	cmp    edx,DWORD PTR [ebx]
  439d52:	out    0x3,eax
  439d54:	outs   dx,DWORD PTR ds:[esi]
  439d55:	adc    esp,edi
  439d57:	add    esp,DWORD PTR [ebx+0x13]
  439d5a:	out    0x3,eax
  439d5c:	addr16 adc esp,edi
  439d5f:	add    ecx,DWORD PTR [ebx+0x13]
  439d62:	out    0x3,eax
  439d64:	pop    edi
  439d65:	adc    eax,DWORD PTR [eax]
  439d67:	jmp    0xe94a2542
  439d6c:	(bad)  
  439d6d:	mov    eax,DWORD PTR [esi]
  439d6f:	jmp    0xe9493d4a
  439d74:	(bad)  
  439d75:	mov    ds:0x97d6e905,eax
  439d7a:	add    eax,0x59bd6e9
  439d7f:	jmp    0xe9494d5a
  439d84:	(bad)  
  439d85:	mov    bl,0x5
  439d87:	jmp    0xe9494562
  439d8c:	(bad)  
  439d8d:	stos   DWORD PTR es:[edi],eax
  439d8e:	add    eax,0x5bfd6e9
  439d93:	jmp    0xe949616e
  439d98:	(bad)  
  439d99:	mov    bh,0x5
  439d9b:	jmp    0xe9495976
  439da0:	(bad)  
  439da1:	iret   
  439da2:	add    eax,0x5d3d6e9
  439da7:	jmp    0xe9496582
  439dac:	(bad)  
  439dad:	retf   
  439dae:	add    eax,0x5dfd6e9
  439db3:	jmp    0xe0199db8
  439db8:	add    eax,0x5d3d6e9
  439dbd:	jmp    0xe9497598
  439dc2:	(bad)  
  439dc3:	jmp    0x439dca
  439dc5:	jmp    0xe9498da0
  439dca:	(bad)  
  439dcb:	jecxz  0x439dd2
  439dcd:	jmp    0xe94985a8
  439dd2:	(bad)  
  439dd3:	sti    
  439dd4:	add    eax,0x5ffd6e9
  439dd9:	jmp    0xe94991b4
  439dde:	(bad)  
  439ddf:	test   DWORD PTR ds:0xa096c00,0x6097c0a
  439de9:	or     bh,BYTE PTR [ecx+ecx*1+0x2]
  439ded:	or     ch,BYTE PTR [ecx+ecx*1-0x2]
  439df1:	or     DWORD PTR [ecx+ecx*1-0x6],ebp
  439df5:	or     DWORD PTR [ecx+ecx*1],edi
  439df8:	test   BYTE PTR [ecx],0x3c
  439dfb:	or     edx,esi
  439dfd:	or     DWORD PTR [ecx+ecx*1],ebp
  439e00:	out    dx,al
  439e01:	or     DWORD PTR [ecx+ecx*1],ebp
  439e04:	jmp    0x3c09:0xe6093c09
  439e0b:	or     edx,esp
  439e0d:	or     DWORD PTR [ecx+ecx*1],ebp
  439e10:	fimul  WORD PTR [ecx]
  439e12:	sub    al,0x9
  439e14:	fimul  DWORD PTR [ecx]
  439e16:	cld    
  439e17:	or     dh,dl
  439e19:	or     DWORD PTR [eax],eax
  439e1b:	add    ah,bh
  439e1d:	or     dl,dl
  439e1f:	or     esp,ebp
  439e21:	or     dh,cl
  439e23:	or     esp,ebp
  439e25:	or     dl,cl
  439e27:	or     esp,edi
  439e29:	or     dh,al
  439e2b:	or     esp,edi
  439e2d:	or     dl,al
  439e2f:	or     esp,ebp
  439e31:	or     BYTE PTR [esi-0x45f713f7],bh
  439e37:	or     DWORD PTR [eax+ecx*1+0x8bc09b6],edi
  439e3e:	mov    dl,0x9
  439e40:	lods   al,BYTE PTR ds:[esi]
  439e41:	or     BYTE PTR [esi-0x55f753f7],ch
  439e47:	or     DWORD PTR [eax+ecx*1+0x8bc09a6],edi
  439e4e:	mov    ds:0x9e08ac09,al
  439e53:	or     DWORD PTR [eax+ecx*1+0x87c099a],ebp
  439e5a:	xchg   esi,eax
  439e5b:	or     ebp,edx
  439e5d:	xor    bh,ch
  439e5f:	xchg   ebp,eax
  439e60:	int3   
  439e61:	xor    bh,ch
  439e63:	xchg   ecx,eax
  439e64:	int3   
  439e65:	xor    bh,ch
  439e67:	(bad)  
  439e68:	fdiv   QWORD PTR [edx]
  439e6a:	std    
  439e6b:	mov    esp,ebx
  439e6d:	xor    bh,ch
  439e6f:	test   esp,ecx
  439e71:	xor    bh,ch
  439e73:	or     esp,0xdc7dfd32
  439e79:	xor    bh,ch
  439e7b:	jns    0x439e59
  439e7d:	xor    bh,ch
  439e7f:	jne    0x439e81
  439e81:	add    ah,cl
  439e83:	xor    bh,ch
  439e85:	jno    0x439e53
  439e87:	xor    bh,ch
  439e89:	ins    DWORD PTR es:[edi],dx
  439e8a:	fdiv   QWORD PTR [edx]
  439e8c:	std    
  439e8d:	imul   ebx,esp,0xcc65fd32
  439e93:	xor    bh,ch
  439e95:	popa   
  439e96:	int3   
  439e97:	xor    bh,ch
  439e99:	pop    ebp
  439e9a:	fdiv   QWORD PTR [edx]
  439e9c:	std    
  439e9d:	pop    ecx
  439e9e:	fdiv   QWORD PTR [edx]
  439ea0:	std    
  439ea1:	push   ebp
  439ea2:	int3   
  439ea3:	xor    bh,ch
  439ea5:	push   ecx
  439ea6:	int3   
  439ea7:	xor    bh,ch
  439ea9:	dec    ebp
  439eaa:	fdiv   QWORD PTR [edx]
  439eac:	std    
  439ead:	dec    ecx
  439eae:	fdiv   QWORD PTR [edx]
  439eb0:	std    
  439eb1:	inc    ebp
  439eb2:	int3   
  439eb3:	xor    bh,ch
  439eb5:	inc    ecx
  439eb6:	int3   
  439eb7:	xor    bh,ch
  439eb9:	cmp    eax,0x39fd30dc
  439ebe:	fdiv   QWORD PTR [eax]
  439ec0:	std    
  439ec1:	xor    eax,0x31fd30cc
  439ec6:	int3   
  439ec7:	xor    ch,bh
  439ec9:	sub    eax,0x29fd30dc
  439ece:	fdiv   QWORD PTR [eax]
  439ed0:	std    
  439ed1:	and    eax,0x21fd30cc
  439ed6:	int3   
  439ed7:	or     edi,esp
  439ed9:	add    esi,ebx
  439edb:	adc    bh,ah
  439edd:	add    ebp,edi
  439edf:	adc    bh,ah
  439ee1:	add    ebp,ebx
  439ee3:	adc    bh,ah
  439ee5:	add    eax,DWORD PTR [eax]
  439ee7:	add    bh,ah
  439ee9:	adc    bh,ah
  439eeb:	add    esp,ebx
  439eed:	adc    bh,ah
  439eef:	add    ebx,edi
  439ef1:	adc    bh,ah
  439ef3:	add    ebx,ebx
  439ef5:	adc    bh,ah
  439ef7:	add    edx,edi
  439ef9:	adc    bh,ah
  439efb:	add    edx,DWORD PTR [ebx+0x12]
  439efe:	out    0x3,eax
  439f00:	dec    edi
  439f01:	adc    ah,bh
  439f03:	add    ecx,DWORD PTR [ebx+0x12]
  439f06:	out    0x3,eax
  439f08:	inc    edi
  439f09:	adc    ah,bh
  439f0b:	add    eax,DWORD PTR [ebx+0x12]
  439f0e:	out    0x3,eax
  439f10:	aas    
  439f11:	adc    ah,bh
  439f13:	add    edi,DWORD PTR [ebx]
  439f15:	adc    ah,bh
  439f17:	add    esi,DWORD PTR [edi]
  439f19:	adc    ah,bh
  439f1b:	add    esi,DWORD PTR [ebx]
  439f1d:	adc    ah,bh
  439f1f:	add    ebp,DWORD PTR [edi]
  439f21:	adc    ah,bh
  439f23:	add    ebp,DWORD PTR [ebx]
  439f25:	adc    ah,bh
  439f27:	add    esp,DWORD PTR [edi]
  439f29:	adc    ah,bh
  439f2b:	add    esp,DWORD PTR [ebx]
  439f2d:	adc    ah,bh
  439f2f:	add    ebx,DWORD PTR [edi]
  439f31:	adc    ah,bh
  439f33:	add    ebx,DWORD PTR [ebx]
  439f35:	adc    ah,bh
  439f37:	add    edx,DWORD PTR [edi]
  439f39:	adc    ah,bh
  439f3b:	add    edx,DWORD PTR [ebx-0x70fc18ef]
  439f41:	adc    edi,esp
  439f43:	add    ecx,DWORD PTR [ebx-0x78fc18ef]
  439f49:	adc    edi,esp
  439f4b:	add    eax,DWORD PTR [eax]
  439f4d:	add    BYTE PTR [ebx+0x7f03e711],al
  439f53:	adc    DWORD PTR [eax],eax
  439f55:	jmp    0xe94c0330
  439f5a:	(bad)  
  439f5b:	addr16 or cl,ch
  439f5e:	(bad)  
  439f5f:	jnp    0x439f69
  439f61:	jmp    0xe94c1f3c
  439f66:	(bad)  
  439f67:	jae    0x439f71
  439f69:	jmp    0xe94c1744
  439f6e:	(bad)  
  439f6f:	mov    ecx,DWORD PTR [eax]
  439f71:	jmp    0xe94c2f4c
  439f76:	(bad)  
  439f77:	or     DWORD PTR [eax],0xffffffe9
  439f7a:	(bad)  
  439f7b:	xchg   DWORD PTR [eax],ecx
  439f7d:	jmp    0xe94b3b58
  439f82:	(bad)  
  439f83:	lahf   
  439f84:	pop    es
  439f85:	jmp    0xe94b3360
  439f8a:	(bad)  
  439f8b:	xchg   edi,eax
  439f8c:	pop    es
  439f8d:	jmp    0xe94b4b68
  439f92:	(bad)  
  439f93:	scas   eax,DWORD PTR es:[edi]
  439f94:	pop    es
  439f95:	jmp    0xe94b4370
  439f9a:	(bad)  
  439f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f9c:	pop    es
  439f9d:	jmp    0xe94b5b78
  439fa2:	(bad)  
  439fa3:	mov    edi,0xb3d6e907
  439fa8:	pop    es
  439fa9:	jmp    0xe94b5784
  439fae:	(bad)  
  439faf:	retf   
  439fb0:	pop    es
  439fb1:	jmp    0xd0199fb6
  439fb6:	pop    es
  439fb7:	jmp    0xe94b6392
  439fbc:	(bad)  
  439fbd:	mov    DWORD PTR [edi],0x7d7d6e9
  439fc3:	jmp    0xe94b739e
  439fc8:	(bad)  
  439fc9:	fild   WORD PTR [edi]
  439fcb:	jmp    0x4b7ba6
  439fd0:	mov    esp,0xbc082a0d
  439fd5:	or     eax,0xdac0826
  439fda:	and    cl,BYTE PTR [eax]
  439fdc:	lods   al,BYTE PTR ds:[esi]
  439fdd:	or     eax,0xd7c081e
  439fe2:	sbb    cl,BYTE PTR [eax]
  439fe4:	jl     0x439ff3
  439fe6:	push   ss
  439fe7:	or     BYTE PTR [ebp+ecx*1+0x12],ch
  439feb:	or     BYTE PTR [ebp+ecx*1+0xe],ch
  439fef:	or     BYTE PTR [ebp+ecx*1+0xa],bh
  439ff3:	or     BYTE PTR [ebp+ecx*1+0x27],bh
  439ff7:	pop    es
  439ff8:	ins    BYTE PTR es:[edi],dx
  439ff9:	or     eax,0xd6c0723
  439ffe:	inc    BYTE PTR [edi]
  43a000:	cmp    al,0xd
  43a002:	cli    
  43a003:	pop    es
  43a004:	cmp    al,0xd
  43a006:	test   BYTE PTR [edi],0x2c
  43a009:	or     eax,0xd2c07f2
  43a00e:	out    dx,al
  43a00f:	pop    es
  43a010:	cmp    al,0xd
  43a012:	jmp    0x7:0xe60d3c07
  43a019:	add    BYTE PTR [ecx*1+0xd2c07e2],ch
  43a020:	fiadd  WORD PTR [edi]
  43a022:	cld    
  43a023:	or     al,0xda
  43a025:	pop    es
  43a026:	cld    
  43a027:	or     al,0xd6
  43a029:	pop    es
  43a02a:	in     al,dx
  43a02b:	or     al,0xd2
  43a02d:	pop    es
  43a02e:	in     al,dx
  43a02f:	or     al,0xce
  43a031:	pop    es
  43a032:	cld    
  43a033:	or     al,0xca
  43a035:	pop    es
  43a036:	cld    
  43a037:	or     al,0xc6
  43a039:	pop    es
  43a03a:	in     al,dx
  43a03b:	or     al,0xc2
  43a03d:	pop    es
  43a03e:	in     al,dx
  43a03f:	or     al,0xbe
  43a041:	pop    es
  43a042:	mov    esp,0xbc07ba0c
  43a047:	or     al,0xb6
  43a049:	pop    es
  43a04a:	aad    0x22
  43a04c:	std    
  43a04d:	mov    ch,0xd2
  43a04f:	and    bh,ch
  43a051:	mov    cl,0xda
  43a053:	and    bh,ch
  43a055:	lods   eax,DWORD PTR ds:[esi]
  43a056:	shl    BYTE PTR [edx],cl
  43a058:	std    
  43a059:	fsub   DWORD PTR fs:[edx]
  43a05c:	std    
  43a05d:	pusha  
  43a05e:	shl    BYTE PTR [edx],1
  43a060:	std    
  43a061:	pop    esp
  43a062:	fsub   DWORD PTR [edx]
  43a064:	std    
  43a065:	pop    eax
  43a066:	shl    BYTE PTR [edx],1
  43a068:	std    
  43a069:	push   esp
  43a06a:	fsub   DWORD PTR [edx]
  43a06c:	std    
  43a06d:	push   eax
  43a06e:	shl    BYTE PTR [edx],1
  43a070:	std    
  43a071:	dec    esp
  43a072:	fsub   DWORD PTR [edx]
  43a074:	std    
  43a075:	and    edx,eax
  43a077:	and    bh,ch
  43a079:	mov    edx,ebx
  43a07b:	and    bh,ch
  43a07d:	test   DWORD PTR [eax],eax
  43a07f:	add    dl,dl
  43a081:	and    bh,ch
  43a083:	sbb    edx,0xd27dfd22
  43a089:	and    bh,ch
  43a08b:	xor    al,0xd8
  43a08d:	and    bh,ch
  43a08f:	xor    al,dl
  43a091:	and    bh,ch
  43a093:	sub    al,0xd8
  43a095:	and    bh,ch
  43a097:	sub    al,dl
  43a099:	and    bh,ch
  43a09b:	imul   ebx,edx,0xd265fd22
  43a0a1:	and    bh,ch
  43a0a3:	popa   
  43a0a4:	fisub  DWORD PTR [edx]
  43a0a6:	std    
  43a0a7:	pop    ebp
  43a0a8:	shl    BYTE PTR [edx],cl
  43a0aa:	std    
  43a0ab:	pop    ecx
  43a0ac:	fisub  DWORD PTR [edx]
  43a0ae:	std    
  43a0af:	push   ebp
  43a0b0:	shl    BYTE PTR [edx],cl
  43a0b2:	std    
  43a0b3:	push   ecx
  43a0b4:	fisub  DWORD PTR [edx]
  43a0b6:	std    
  43a0b7:	dec    ebp
  43a0b8:	shl    BYTE PTR [edx],cl
  43a0ba:	std    
  43a0bb:	add    al,0xd8
  43a0bd:	and    bh,ch
  43a0bf:	add    al,dl
  43a0c1:	and    bh,ch
  43a0c3:	cld    
  43a0c4:	(bad)  [ecx]
  43a0c6:	out    0x3,eax
  43a0c8:	or     ecx,DWORD PTR [edi]
  43a0ca:	out    0x3,eax
  43a0cc:	dec    DWORD PTR [esi]
  43a0ce:	out    0x3,eax
  43a0d0:	add    ecx,DWORD PTR [edi]
  43a0d2:	out    0x3,eax
  43a0d4:	out    0xe,eax
  43a0d6:	out    0x3,eax
  43a0d8:	sti    
  43a0d9:	push   cs
  43a0da:	out    0x3,eax
  43a0dc:	out    dx,eax
  43a0dd:	push   cs
  43a0de:	out    0x3,eax
  43a0e0:	repz push cs
  43a0e2:	out    0x3,eax
  43a0e4:	add    BYTE PTR [eax],al
  43a0e6:	mov    bh,0xe
  43a0e8:	out    0x3,eax
  43a0ea:	jmp    0x43a0fa
  43a0ec:	out    0x3,eax
  43a0ee:	fisttp WORD PTR [esi]
  43a0f0:	out    0x3,eax
  43a0f2:	jecxz  0x43a102
  43a0f4:	out    0x3,eax
  43a0f6:	(bad)  
  43a0f7:	push   cs
  43a0f8:	out    0x3,eax
  43a0fa:	fisttp DWORD PTR [esi]
  43a0fc:	out    0x3,eax
  43a0fe:	iret   
  43a0ff:	push   cs
  43a100:	out    0x3,eax
  43a102:	ror    DWORD PTR [esi],cl
  43a104:	out    0x3,eax
  43a106:	xlat   BYTE PTR ds:[ebx]
  43a107:	push   cs
  43a108:	out    0x3,eax
  43a10a:	dec    ebx
  43a10b:	adc    bh,ah
  43a10d:	add    edi,DWORD PTR [edi]
  43a10f:	adc    bh,ah
  43a111:	add    eax,DWORD PTR [ebx+0x10]
  43a114:	out    0x3,eax
  43a116:	daa    
  43a117:	adc    bh,ah
  43a119:	add    edi,DWORD PTR [ebx]
  43a11b:	adc    bh,ah
  43a11d:	add    ebp,DWORD PTR [edi]
  43a11f:	adc    bh,ah
  43a121:	add    esi,DWORD PTR [ebx]
  43a123:	adc    bh,ah
  43a125:	add    esi,edi
  43a127:	movntq QWORD PTR [ebx],mm0
  43a12a:	sub    edx,DWORD PTR [eax]
  43a12c:	out    0x3,eax
  43a12e:	pop    ds
  43a12f:	adc    bh,ah
  43a131:	add    esp,DWORD PTR [ebx]
  43a133:	adc    bh,ah
  43a135:	add    eax,DWORD PTR [edi]
  43a137:	adc    bh,ah
  43a139:	add    ebx,DWORD PTR [ebx]
  43a13b:	adc    bh,ah
  43a13d:	add    ebx,DWORD PTR [eax+0xe]
  43a140:	add    cl,ch
  43a142:	(bad)  
  43a143:	mov    BYTE PTR [ecx+ebp*8],al
  43a146:	(bad)  
  43a147:	xchg   esp,eax
  43a148:	add    ebp,ecx
  43a14a:	add    BYTE PTR [eax],al
  43a14c:	(bad)  
  43a14d:	push   edi
  43a14e:	add    ch,cl
  43a150:	(bad)  
  43a151:	push   ebx
  43a152:	add    ch,cl
  43a154:	(bad)  
  43a155:	pop    edi
  43a156:	add    ch,cl
  43a158:	(bad)  
  43a159:	pop    ebx
  43a15a:	add    ch,cl
  43a15c:	(bad)  
  43a15d:	addr16 add ch,cl
  43a160:	(bad)  
  43a161:	arpl   WORD PTR [edx],ax
  43a163:	jmp    0xe946113e
  43a168:	(bad)  
  43a169:	imul   eax,DWORD PTR [edx],0xffffffe9
  43a16c:	(bad)  
  43a16d:	ja     0x43a171
  43a16f:	jmp    0xe946154a
  43a174:	(bad)  
  43a175:	jg     0x43a179
  43a177:	jmp    0xe9461d52
  43a17c:	(bad)  
  43a17d:	xchg   DWORD PTR [edx],eax
  43a17f:	jmp    0xe946255a
  43a184:	(bad)  
  43a185:	pop    DWORD PTR [edx]
  43a187:	jmp    0xe9462d62
  43a18c:	(bad)  
  43a18d:	xchg   edi,eax
  43a18e:	add    ecx,ebp
  43a190:	(bad)  
  43a191:	xchg   ebx,eax
  43a192:	add    ecx,ebp
  43a194:	(bad)  
  43a195:	lahf   
  43a196:	add    ecx,ebp
  43a198:	(bad)  
  43a199:	fwait
  43a19a:	add    ecx,ebp
  43a19c:	(bad)  
  43a19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a19e:	add    ecx,ebp
  43a1a0:	(bad)  
  43a1a1:	mov    ds:0xafd6e901,eax
  43a1a6:	add    ecx,ebp
  43a1a8:	(bad)  
  43a1a9:	stos   DWORD PTR es:[edi],eax
  43a1aa:	add    ecx,ebp
  43a1ac:	(bad)  
  43a1ad:	mov    bh,0x1
  43a1af:	jmp    0xb419a1b4
  43a1b4:	add    ecx,ebp
  43a1b6:	(bad)  
  43a1b7:	mov    edi,0xbbd6e901
  43a1bc:	add    DWORD PTR [eax],eax
  43a1be:	cld    
  43a1bf:	or     DWORD PTR [edx+0x6],ecx
  43a1c2:	in     al,dx
  43a1c3:	or     DWORD PTR [ebx],eax
  43a1c5:	add    al,0xec
  43a1c7:	or     edi,edi
  43a1c9:	add    edi,DWORD PTR [ecx+ecx*1+0x9bc03fb]
  43a1d0:	test   DWORD PTR [ebx],0x63609ac
  43a1d6:	lods   al,BYTE PTR ds:[esi]
  43a1d7:	or     DWORD PTR [edx],esi
  43a1d9:	push   es
  43a1da:	mov    esp,0xbc062e09
  43a1df:	or     DWORD PTR [edx],ebp
  43a1e1:	push   es
  43a1e2:	lods   al,BYTE PTR ds:[esi]
  43a1e3:	or     DWORD PTR [esi],esp
  43a1e5:	push   es
  43a1e6:	lods   al,BYTE PTR ds:[esi]
  43a1e7:	or     DWORD PTR [edx],esp
  43a1e9:	push   es
  43a1ea:	jl     0x43a1f5
  43a1ec:	push   ds
  43a1ed:	push   es
  43a1ee:	jl     0x43a1f9
  43a1f0:	sbb    al,BYTE PTR [esi]
  43a1f2:	ins    BYTE PTR es:[edi],dx
  43a1f3:	or     DWORD PTR [esi],edx
  43a1f5:	push   es
  43a1f6:	ins    BYTE PTR es:[edi],dx
  43a1f7:	or     DWORD PTR [edx],edx
  43a1f9:	push   es
  43a1fa:	jl     0x43a205
  43a1fc:	push   cs
  43a1fd:	push   es
  43a1fe:	jl     0x43a209
  43a200:	or     al,BYTE PTR [esi]
  43a202:	ins    BYTE PTR es:[edi],dx
  43a203:	or     DWORD PTR [esi],eax
  43a205:	push   es
  43a206:	ins    BYTE PTR es:[edi],dx
  43a207:	or     DWORD PTR [edx],eax
  43a209:	push   es
  43a20a:	cmp    al,0x9
  43a20c:	inc    BYTE PTR ds:0x5fa093c
  43a212:	sub    al,0x9
  43a214:	test   BYTE PTR ds:0x92c0000,0xf2
  43a21b:	add    eax,0x5ee093c
  43a220:	cmp    al,0x9
  43a222:	jmp    0x2c05:0xe6092c05
  43a229:	or     edx,esp
  43a22b:	add    eax,0x5de08fc
  43a230:	cld    
  43a231:	or     dl,bl
  43a233:	add    eax,0x5d608ec
  43a238:	aad    0x22
  43a23a:	std    
  43a23b:	aad    0xd8
  43a23d:	and    bh,ch
  43a23f:	rcl    eax,1
  43a241:	and    bh,ch
  43a243:	int    0xd8
  43a245:	and    bh,ch
  43a247:	leave  
  43a248:	shl    BYTE PTR [edx],1
  43a24a:	std    
  43a24b:	(bad)
  43a24e:	std    
  43a24f:	rcl    eax,0x22
  43a252:	std    
  43a253:	mov    ebp,0xb9fd22d8
  43a258:	shl    BYTE PTR [edx],1
  43a25a:	std    
  43a25b:	mov    ch,0xd8
  43a25d:	and    bh,ch
  43a25f:	mov    cl,0xd0
  43a261:	and    bh,ch
  43a263:	lods   eax,DWORD PTR ds:[esi]
  43a264:	fsub   DWORD PTR [edx]
  43a266:	std    
  43a267:	test   eax,0xa5fd22d0
  43a26c:	fsub   DWORD PTR [edx]
  43a26e:	std    
  43a26f:	mov    eax,ds:0x9dfd22d0
  43a274:	fsub   DWORD PTR [edx]
  43a276:	std    
  43a277:	cdq    
  43a278:	shl    BYTE PTR [edx],1
  43a27a:	std    
  43a27b:	xchg   ebp,eax
  43a27c:	add    BYTE PTR [eax],al
  43a27e:	fsub   DWORD PTR [edx]
  43a280:	std    
  43a281:	xchg   ecx,eax
  43a282:	shl    BYTE PTR [edx],1
  43a284:	std    
  43a285:	(bad)  
  43a286:	fsub   DWORD PTR [edx]
  43a288:	std    
  43a289:	mov    eax,edx
  43a28b:	and    bh,ch
  43a28d:	test   eax,ebx
  43a28f:	and    bh,ch
  43a291:	adc    eax,0xd87dfd22
  43a297:	and    bh,ch
  43a299:	jns    0x43a26b
  43a29b:	and    bh,ch
  43a29d:	jne    0x43a277
  43a29f:	and    bh,ch
  43a2a1:	jno    0x43a273
  43a2a3:	and    bh,ch
  43a2a5:	ins    DWORD PTR es:[edi],dx
  43a2a6:	fsub   DWORD PTR [edx]
  43a2a8:	std    
  43a2a9:	imul   edx,eax,0xd865fd22
  43a2af:	and    bh,ch
  43a2b1:	popa   
  43a2b2:	ror    BYTE PTR [ecx],1
  43a2b4:	out    0x3,eax
  43a2b6:	mov    ds:0x9f03e70e,eax
  43a2bb:	push   cs
  43a2bc:	out    0x3,eax
  43a2be:	mov    ecx,DWORD PTR [esi]
  43a2c0:	out    0x3,eax
  43a2c2:	xchg   DWORD PTR [esi],ecx
  43a2c4:	out    0x3,eax
  43a2c6:	xchg   ebx,eax
  43a2c7:	push   cs
  43a2c8:	out    0x3,eax
  43a2ca:	(bad)  
  43a2cb:	push   cs
  43a2cc:	out    0x3,eax
  43a2ce:	sbb    ecx,DWORD PTR ds:0xd1703e7
  43a2d4:	out    0x3,eax
  43a2d6:	add    ecx,DWORD PTR ds:0xcff03e7
  43a2dc:	out    0x3,eax
  43a2de:	jmp    0x43a2ec
  43a2e0:	out    0x3,eax
  43a2e2:	add    BYTE PTR [eax],al
  43a2e4:	out    0xc,eax
  43a2e6:	out    0x3,eax
  43a2e8:	repz or al,0xe7
  43a2eb:	add    ebp,edi
  43a2ed:	or     al,0xe7
  43a2ef:	add    edi,DWORD PTR [ebx-0x48fc18f4]
  43a2f5:	or     al,0xe7
  43a2f7:	add    esp,ebx
  43a2f9:	or     al,0xe7
  43a2fb:	add    ebx,edi
  43a2fd:	or     al,0xe7
  43a2ff:	add    ecx,ebx
  43a301:	or     al,0xe7
  43a303:	add    eax,edi
  43a305:	or     al,0xe7
  43a307:	add    edx,ebx
  43a309:	or     al,0xe7
  43a30b:	add    ecx,edi
  43a30d:	or     al,0xe7
  43a30f:	add    ebx,ebx
  43a311:	or     al,0xe7
  43a313:	add    edx,edi
  43a315:	or     al,0xe7
  43a317:	add    eax,DWORD PTR [ebx+0xe]
  43a31a:	out    0x3,eax
  43a31c:	aas    
  43a31d:	push   cs
  43a31e:	out    0x3,eax
  43a320:	sub    ecx,DWORD PTR [esi]
  43a322:	out    0x3,eax
  43a324:	daa    
  43a325:	push   cs
  43a326:	out    0x3,eax
  43a328:	xor    ecx,DWORD PTR [esi]
  43a32a:	out    0x3,eax
  43a32c:	das    
  43a32d:	push   cs
  43a32e:	add    cl,ch
  43a330:	(bad)  
  43a331:	sub    eax,DWORD PTR [ecx+ebp*8]
  43a334:	(bad)  
  43a335:	daa    
  43a336:	add    al,0xe9
  43a338:	(bad)  
  43a339:	xor    eax,DWORD PTR [ecx+ebp*8]
  43a33c:	(bad)  
  43a33d:	das    
  43a33e:	add    al,0xe9
  43a340:	(bad)  
  43a341:	cmp    eax,DWORD PTR [ecx+ebp*8]
  43a344:	(bad)  
  43a345:	aaa    
  43a346:	add    al,0xe9
  43a348:	add    BYTE PTR [eax],al
  43a34a:	(bad)  
  43a34b:	inc    ebx
  43a34c:	add    al,0xe9
  43a34e:	(bad)  
  43a34f:	aas    
  43a350:	add    al,0xe9
  43a352:	(bad)  
  43a353:	dec    ebx
  43a354:	add    al,0xe9
  43a356:	(bad)  
  43a357:	inc    edi
  43a358:	add    al,0xe9
  43a35a:	(bad)  
  43a35b:	push   ebx
  43a35c:	add    al,0xe9
  43a35e:	(bad)  
  43a35f:	dec    edi
  43a360:	add    al,0xe9
  43a362:	(bad)  
  43a363:	pop    ebx
  43a364:	add    al,0xe9
  43a366:	(bad)  
  43a367:	push   edi
  43a368:	add    al,0xe9
  43a36a:	(bad)  
  43a36b:	arpl   WORD PTR [ecx+ebp*8],ax
  43a36e:	(bad)  
  43a36f:	pop    edi
  43a370:	add    al,0xe9
  43a372:	(bad)  
  43a373:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffffd6
  43a377:	addr16 add al,0xe9
  43a37a:	(bad)  
  43a37b:	jae    0x43a381
  43a37d:	jmp    0xe9481358
  43a382:	(bad)  
  43a383:	jnp    0x43a389
  43a385:	jmp    0xe9481b60
  43a38a:	(bad)  
  43a38b:	add    DWORD PTR [ecx+ebp*8],0xffffffd6
  43a38f:	jg     0x43a395
  43a391:	jmp    0xe9482f6c
  43a396:	(bad)  
  43a397:	xchg   DWORD PTR [ecx+ebp*8],eax
  43a39a:	(bad)  
  43a39b:	xchg   ebx,eax
  43a39c:	add    ebp,ecx
  43a39e:	(bad)  
  43a39f:	pop    DWORD PTR [ebx]
  43a3a1:	jmp    0xe9473f7c
  43a3a6:	(bad)  
  43a3a7:	xchg   edi,eax
  43a3a8:	add    eax,DWORD PTR [eax]
  43a3aa:	sub    al,0x6
  43a3ac:	push   0x4
  43a3ae:	add    BYTE PTR [eax],al
  43a3b0:	sub    al,0x6
  43a3b2:	data16 add al,0xfc
  43a3b5:	add    eax,0x5fc0462
  43a3ba:	pop    esi
  43a3bb:	add    al,0xec
  43a3bd:	add    eax,0x5ec045a
  43a3c2:	push   esi
  43a3c3:	add    al,0xfc
  43a3c5:	add    eax,0x5fc0452
  43a3ca:	dec    esi
  43a3cb:	add    al,0xec
  43a3cd:	add    eax,0x5ec044a
  43a3d2:	inc    esi
  43a3d3:	add    al,0xbc
  43a3d5:	or     eax,0xdbc0442
  43a3da:	ds add al,0xac
  43a3dd:	or     eax,0xdac043a
  43a3e2:	ss add al,0xbc
  43a3e5:	or     eax,0xdbc0432
  43a3ea:	cs add al,0xac
  43a3ed:	or     eax,0xdac042a
  43a3f2:	es add al,0x7c
  43a3f5:	or     eax,0xd7c0422
  43a3fa:	push   ds
  43a3fb:	add    al,0x6c
  43a3fd:	or     eax,0xd6c041a
  43a402:	push   ss
  43a403:	add    al,0x7c
  43a405:	or     eax,0xd7c0412
  43a40a:	push   cs
  43a40b:	add    al,0x6c
  43a40d:	or     eax,0xd6c040a
  43a412:	push   es
  43a413:	add    al,0x0
  43a415:	add    BYTE PTR [ecx*1+0xd3c0402],bh
  43a41c:	inc    BYTE PTR [ebx]
  43a41e:	sub    al,0xd
  43a420:	cli    
  43a421:	add    ebp,DWORD PTR [ecx*1+0x22d503f6]
  43a428:	std    
  43a429:	cmc    
  43a42a:	(bad)  
  43a42b:	and    bh,ch
  43a42d:	icebp  
  43a42e:	(bad)  
  43a42f:	and    bh,ch
  43a431:	in     eax,dx
  43a432:	(bad)  
  43a433:	and    bh,ch
  43a435:	jmp    0xe640c710
  43a43a:	(bad)  
  43a43b:	and    bh,ch
  43a43d:	loope  0x43a415
  43a43f:	and    bh,ch
  43a441:	fst    st(6)
  43a443:	and    bh,ch
  43a445:	(bad)  
  43a447:	and    bh,ch
  43a449:	aad    0xd6
  43a44b:	and    bh,ch
  43a44d:	rcl    esi,1
  43a44f:	and    bh,ch
  43a451:	int    0xd6
  43a453:	and    bh,ch
  43a455:	push   ds
  43a456:	aam    0x22
  43a458:	std    
  43a459:	sbb    dl,ah
  43a45b:	and    bh,ch
  43a45d:	push   ss
  43a45e:	aam    0x22
  43a460:	std    
  43a461:	adc    dl,ah
  43a463:	and    bh,ch
  43a465:	or     eax,0x31fd22d4
  43a46a:	aam    0x22
  43a46c:	std    
  43a46d:	cmp    dl,ah
  43a46f:	and    bh,ch
  43a471:	add    dl,ah
  43a473:	and    bh,ch
  43a475:	(bad)  
  43a476:	aad    0x22
  43a478:	std    
  43a479:	cli    
  43a47a:	add    BYTE PTR [eax],al
  43a47c:	aad    0x22
  43a47e:	std    
  43a47f:	not    ch
  43a481:	and    bh,ch
  43a483:	repnz aad 0x22
  43a486:	std    
  43a487:	in     eax,dx
  43a488:	aad    0x22
  43a48a:	std    
  43a48b:	jmp    0x22d5:0xe6fd22d5
  43a492:	std    
  43a493:	loop   0x43a46a
  43a495:	and    bh,ch
  43a497:	(bad)  
  43a499:	and    bh,ch
  43a49b:	fcmovbe st,st(5)
  43a49d:	and    bh,ch
  43a49f:	(bad)  
  43a4a0:	aad    0x9
  43a4a2:	out    0x3,eax
  43a4a4:	es or  edi,esp
  43a4a7:	add    esp,DWORD PTR [ebx]
  43a4a9:	or     edi,esp
  43a4ab:	add    ebx,DWORD PTR [esi]
  43a4ad:	or     edi,esp
  43a4af:	add    ebx,DWORD PTR [edx]
  43a4b1:	or     edi,esp
  43a4b3:	add    edx,DWORD PTR [esi]
  43a4b5:	or     edi,esp
  43a4b7:	add    edx,DWORD PTR [edx+0x9]
  43a4ba:	out    0x3,eax
  43a4bc:	dec    esi
  43a4bd:	or     edi,esp
  43a4bf:	add    ecx,DWORD PTR [edx+0x9]
  43a4c2:	out    0x3,eax
  43a4c4:	inc    esi
  43a4c5:	or     edi,esp
  43a4c7:	add    eax,DWORD PTR [edx+0x9]
  43a4ca:	out    0x3,eax
  43a4cc:	ds or  edi,esp
  43a4cf:	add    edi,DWORD PTR [edx]
  43a4d1:	or     edi,esp
  43a4d3:	add    esi,DWORD PTR [esi]
  43a4d5:	or     edi,esp
  43a4d7:	add    ebp,DWORD PTR [edi]
  43a4d9:	bsf    edx,esi
  43a4dc:	pop    ebp
  43a4dd:	lds    eax,FWORD PTR ds:0x1600003e
  43a4e3:	in     al,dx
  43a4e4:	out    0x3e,al
  43a4e6:	push   ss
  43a4e7:	or     al,0xc7
  43a4e9:	add    edx,ebp
  43a4eb:	or     DWORD PTR [edx],ebp
  43a4ed:	rcl    esp,0xe9
  43a4f0:	out    0x3,al
  43a4f2:	aad    0x8a
  43a4f4:	test   dl,dh
  43a4f6:	ficom  DWORD PTR [ecx+eiz*8-0x58f7e9c2]
  43a4fd:	add    edx,ebp
  43a4ff:	or     DWORD PTR [esi-0x3f],ebx
  43a502:	loope  0x43a502
  43a504:	cwde   
  43a505:	sti    
  43a506:	dec    edi
  43a507:	push   es
  43a508:	imul   eax,DWORD PTR [edx],0xffa78ad5
  43a50e:	ins    DWORD PTR es:[edi],dx
  43a50f:	cmp    ah,BYTE PTR [esi+0x2b]
  43a512:	pop    esp
  43a513:	xchg   esi,eax
  43a514:	call   0xe2ebb93
  43a519:	sar    ebp,0xaf
  43a51c:	call   DWORD PTR [edx]
  43a51e:	sbb    BYTE PTR [esi+0x4d0c06c3],cl
  43a524:	or     cl,ch
  43a526:	sti    
  43a527:	retf   0xe915
  43a52a:	(bad)  
  43a52b:	or     DWORD PTR [eax],eax
  43a52d:	bound  edx,QWORD PTR ds:0x165708ee
  43a533:	adc    BYTE PTR [esi+ebp*4],ah
  43a536:	(bad)  
  43a537:	or     DWORD PTR [eax],eax
  43a539:	inc    eax
  43a53a:	push   ss
  43a53b:	psubw  mm5,mm1
  43a53e:	add    DWORD PTR ds:0xca8178f1,edi
  43a544:	add    eax,0xae00006a
  43a549:	push   cs
  43a54a:	je     0x43a531
  43a54c:	push   edi
  43a54d:	retf   
  43a54e:	adc    eax,0xfe1257e8
  43a553:	shl    edx,cl
  43a555:	lea    eax,[edx-0x1d]
  43a558:	fiadd  DWORD PTR [edi+0x2a19ef53]
  43a55e:	add    ebp,eax
  43a560:	push   es
  43a561:	or     eax,DWORD PTR [eax]
  43a563:	(bad)  
  43a565:	or     DWORD PTR [ebx-0x6f39913],ecx
  43a56b:	push   0x16
  43a56d:	push   es
  43a56e:	stc    
  43a56f:	cmp    DWORD PTR [edi],edx
  43a571:	test   DWORD PTR [ebx-0x36],eax
  43a574:	stos   DWORD PTR es:[edi],eax
  43a575:	pop    eax
  43a576:	inc    eax
  43a577:	call   0x287bced3
  43a57c:	out    dx,al
  43a57d:	or     al,0x88
  43a57f:	lods   al,BYTE PTR ds:[esi]
  43a580:	fmul   DWORD PTR [ebp+edi*4+0x6a]
  43a584:	sub    eax,0x76652008
  43a589:	lea    eax,[edx+0x3]
  43a58c:	(bad)  
  43a58d:	test   BYTE PTR [ebx+0xa],al
  43a590:	pusha  
  43a591:	pop    eax
  43a592:	inc    eax
  43a593:	jmp    0x43a5ea
  43a595:	sub    DWORD PTR [ecx],eax
  43a597:	add    ch,ah
  43a599:	dec    esi
  43a59a:	or     eax,DWORD PTR [ebx+0x74fcfc11]
  43a5a0:	mov    DWORD PTR ss:[ebp+0xa],esi
  43a5a4:	sub    al,0x5f
  43a5a6:	std    
  43a5a7:	sub    cl,0x3
  43a5aa:	add    al,0xc3
  43a5ac:	add    BYTE PTR [eax],al
  43a5ae:	mov    edi,0xc01fff66
  43a5b3:	or     DWORD PTR [ebx+0x45],edi
  43a5b6:	es push cs
  43a5b8:	mov    esp,0x90fd183
  43a5bd:	jne    0x43a5b7
  43a5bf:	mov    BYTE PTR ds:0xe7c8fe1a,bh
  43a5c5:	bound  esi,QWORD PTR [ebx-0x1c]
  43a5c8:	test   BYTE PTR [ebx+0x44f90029],0xdf
  43a5cf:	mov    BYTE PTR ds:0xf6c8fe23,bh
  43a5d5:	inc    ebp
  43a5d6:	iret   
  43a5d7:	enter  0x457a,0xcf
  43a5db:	or     edi,DWORD PTR [ebx+0x100b9183]
  43a5e1:	jne    0x43a59d
  43a5e3:	icebp  
  43a5e4:	(bad)  
  43a5e6:	repz out 0xba,al
  43a5e9:	call   0x43b156
  43a5ee:	dec    DWORD PTR [edx+0x5cac0275]
  43a5f4:	add    ch,al
  43a5f6:	mul    dh
  43a5f8:	idiv   bh
  43a5fa:	ror    DWORD PTR [esp+ebx*1-0x3d],cl
  43a5fe:	in     al,0x36
  43a600:	sti    
  43a601:	(bad)  
  43a602:	jl     0x43a5ce
  43a604:	jp     0x43a683
  43a606:	aas    
  43a607:	dec    ecx
  43a608:	outs   dx,BYTE PTR ds:[esi]
  43a609:	push   es
  43a60a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a60b:	sub    bh,bl
  43a60d:	(bad)  
  43a60e:	jl     0x43a5da
  43a610:	test   BYTE PTR [ebp+0x0],0x0
  43a614:	aad    0xff
  43a616:	ds jge 0x43a5f9
  43a619:	and    ch,bl
  43a61b:	jnp    0x43a5ed
  43a61d:	lahf   
  43a61e:	mov    ecx,0x805fd81c
  43a623:	inc    ebx
  43a624:	neg    BYTE PTR [edi]
  43a626:	inc    eax
  43a627:	jge    0x43a5e9
  43a629:	and    BYTE PTR [ebp-0x46602f8e],bh
  43a62f:	sbb    al,0xdc
  43a631:	pop    edi
  43a632:	cmp    BYTE PTR [ebx-0x29],0x42
  43a636:	stos   BYTE PTR es:[edi],al
  43a637:	add    dl,BYTE PTR [esi-0x1a]
  43a63a:	fiadd  WORD PTR [edx]
  43a63c:	push   ss
  43a63d:	mov    al,ds:0x5fd61cb9
  43a642:	adc    eax,0x23940a80
  43a647:	stc    
  43a648:	cwde   
  43a649:	aas    
  43a64a:	inc    eax
  43a64b:	jge    0x43a6c5
  43a64d:	out    dx,eax
  43a64e:	ret    
  43a64f:	jb     0x43a608
  43a651:	jecxz  0x43a60c
  43a653:	std    
  43a654:	stos   BYTE PTR es:[edi],al
  43a655:	and    bh,ch
  43a657:	jmp    edx
  43a659:	gs loopne 0x43a5e0
  43a65c:	nop
  43a65d:	push   edx
  43a65f:	mov    cl,0xdd
  43a661:	popf   
  43a662:	clc    
  43a663:	mov    esi,edx
  43a665:	and    al,BYTE PTR [eax+0x4cdbd9c0]
  43a66b:	rcl    DWORD PTR [eax],0x21
  43a66e:	(bad)  
  43a670:	mov    dl,0x22
  43a672:	inc    eax
  43a673:	stc    
  43a674:	adc    BYTE PTR [eax+0x40],al
  43a677:	jge    0x43a679
  43a679:	add    BYTE PTR [eax],ah
  43a67b:	xor    BYTE PTR [ebp-0x45fc098e],bh
  43a681:	sbb    al,0x93
  43a683:	fistp  QWORD PTR gs:[edi+0x8]
  43a687:	inc    ecx
  43a688:	hlt    
  43a689:	jb     0x43a666
  43a68b:	or     bl,BYTE PTR [edi+edi*8+0x7a]
  43a68f:	or     edi,esp
  43a691:	inc    esi
  43a692:	pop    eax
  43a693:	mov    BYTE PTR ds:0x64012713,0x8
  43a69a:	dec    edi
  43a69b:	or     bh,ah
  43a69d:	xchg   BYTE PTR [ebp-0x6fcb3dfb],dl
  43a6a3:	mov    BYTE PTR [edi+eiz*8],ah
  43a6a6:	dec    ebx
  43a6a7:	inc    edi
  43a6a8:	mov    dl,0xc9
  43a6aa:	loope  0x43a6b7
  43a6ac:	and    al,0xe6
  43a6ae:	mov    edx,0xa612c48e
  43a6b3:	add    ecx,DWORD PTR [edi-0x18f3d45d]
  43a6b9:	inc    esi
  43a6ba:	pop    eax
  43a6bb:	mov    ch,0x12
  43a6be:	add    DWORD PTR [si+0x8],esi
  43a6c2:	pop    edi
  43a6c3:	or     bh,ah
  43a6c5:	xchg   BYTE PTR ds:0x40347205,dl
  43a6cb:	mov    ah,ch
  43a6cd:	add    eax,0x2bec8db5
  43a6d2:	jmp    0x686700e1
  43a6d7:	mov    BYTE PTR ds:0x3d212008,0x22
  43a6de:	add    BYTE PTR [eax],al
  43a6e0:	fmul   QWORD PTR [ebx]
  43a6e2:	leavew 
  43a6e4:	icebp  
  43a6e5:	pop    es
  43a6e6:	xchg   DWORD PTR es:[esi-0x29],ecx
  43a6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a6eb:	cwde   
  43a6ec:	aam    0x21
  43a6ee:	lahf   
  43a6ef:	add    al,0xd5
  43a6f1:	or     DWORD PTR [esi],esp
  43a6f3:	xchg   DWORD PTR [esi],edx
  43a6f5:	out    0xe4,eax
  43a6f7:	inc    esi
  43a6f8:	sub    ch,al
  43a6fa:	lds    eax,FWORD PTR [edi]
  43a6fc:	pusha  
  43a6fd:	xchg   DWORD PTR [esi+eiz*8-0x5e99b929],esp
  43a704:	ror    ecx,0x73
  43a707:	or     DWORD PTR [ebp-0x23],edi
  43a70a:	jmp    edi
  43a70c:	(bad)  
  43a70d:	or     DWORD PTR [ebp-0x6efe7ff],edi
  43a713:	out    0x1b,al
  43a715:	and    dl,BYTE PTR [esi]
  43a717:	fbstp  TBYTE PTR [edi-0x2cab82f0]
  43a71d:	or     al,0x74
  43a71f:	out    0xae,eax
  43a721:	popa   
  43a722:	cli    
  43a723:	(bad)  
  43a724:	test   DWORD PTR [eax+ebp*8-0x27],0xaa0009d1
  43a72c:	pop    ebx
  43a72d:	(bad)  
  43a72e:	sbb    al,0xea
  43a730:	xchg   ebx,eax
  43a731:	mov    WORD PTR [edx-0x11],?
  43a734:	push   ss
  43a735:	cwde   
  43a736:	add    ch,BYTE PTR [edx+0x1d]
  43a739:	out    dx,al
  43a73a:	push   es
  43a73b:	stos   BYTE PTR es:[edi],al
  43a73c:	pop    ebx
  43a73d:	(bad)  
  43a73e:	sbb    al,0xe4
  43a740:	xchg   ebx,eax
  43a741:	mov    WORD PTR [edx-0x11],?
  43a744:	add    BYTE PTR [eax],al
  43a746:	push   es
  43a747:	cwde   
  43a748:	add    ch,BYTE PTR [edx+0x1d]
  43a74b:	out    dx,al
  43a74c:	cld    
  43a74d:	test   eax,0xc9018f5b
  43a752:	pop    ebp
  43a753:	or     BYTE PTR [ebp-0x54],bh
  43a756:	sti    
  43a757:	pop    es
  43a758:	mov    ebp,0x6ee1d6a
  43a75d:	sub    dl,BYTE PTR [esi-0x71]
  43a760:	jmp    edi
  43a762:	cmp    eax,0xf4cfe809
  43a767:	adc    cl,bh
  43a769:	sub    bh,dh
  43a76b:	aas    
  43a76c:	add    cl,ch
  43a76e:	(bad)  
  43a76f:	dec    esp
  43a770:	sub    BYTE PTR [esi+edx*8-0x1108bf6],0xb5
  43a778:	stc    
  43a779:	push   ds
  43a77a:	test   DWORD PTR [eax+eax*4-0x6c],0xe7740ad9
  43a782:	out    dx,al
  43a783:	sar    ecx,0x0
  43a786:	(bad)  
  43a788:	mov    edx,0x10050983
  43a78d:	jne    0x43a801
  43a78f:	fidivr WORD PTR [ebx]
  43a791:	(bad)  
  43a792:	imul   ebp,eax,0xffffffba
  43a795:	call   0x43acfa
  43a79a:	aas    
  43a79b:	test   BYTE PTR [ebp+0x33],dh
  43a79e:	lods   al,BYTE PTR ds:[esi]
  43a79f:	jb     0x43a7a0
  43a7a1:	out    0xe4,eax
  43a7a3:	add    eax,0x847f0000
  43a7a8:	jne    0x43a7ac
  43a7aa:	add    BYTE PTR [eax],al
  43a7ac:	fdiv   QWORD PTR [edx-0x2]
  43a7af:	xor    cl,0x24
  43a7b2:	add    bl,al
  43a7b4:	scas   eax,DWORD PTR es:[edi]
  43a7b5:	inc    edx
  43a7b6:	sbb    al,0x5
  43a7b8:	jg     0x43a77e
  43a7ba:	jp     0x43a839
  43a7bc:	ds push ss
  43a7be:	ins    DWORD PTR es:[edi],dx
  43a7bf:	adc    BYTE PTR [ecx+esi*2-0xa],dl
  43a7c3:	dec    DWORD PTR [ebx+0x7c]
  43a7c6:	cmp    eax,0x1c42fd1a
  43a7cb:	xor    DWORD PTR [ecx+0x54c2ff24],0x61
  43a7d2:	idiv   bh
  43a7d4:	imul   edi,DWORD PTR [ebp+edi*1+0x1a],0xfffffffd
  43a7d9:	inc    edx
  43a7da:	sbb    al,0x83
  43a7dc:	xor    DWORD PTR ds:0x6a6fc2fd,esp
  43a7e2:	sub    al,0x40
  43a7e4:	add    DWORD PTR [eax],eax
  43a7e6:	call   0x516440
  43a7eb:	ret    
  43a7ec:	aas    
  43a7ed:	test   eax,0x10811ffa
  43a7f2:	jnp    0x43a839
  43a7f4:	iret   
  43a7f5:	adc    bh,BYTE PTR [ebx-0x2117e7d]
  43a7fb:	ret    0x8cc4
  43a7fe:	hlt    
  43a7ff:	call   ebp
  43a801:	pop    ds
  43a802:	cmp    DWORD PTR [ebx-0x3d],0xfffffff2
  43a806:	xchg   ecx,eax
  43a807:	add    DWORD PTR [ebp+0x39],edi
  43a80a:	sbb    ecx,edi
  43a80c:	mov    dh,BYTE PTR [esp+ebp*1]
  43a80f:	sub    al,BYTE PTR [eax]
  43a811:	add    ch,dl
  43a813:	repnz cld 
  43a815:	mov    esp,0x3fd47656
  43a81a:	call   0xb6872c14
  43a81f:	in     eax,dx
  43a820:	inc    ebx
  43a821:	jge    0x43a803
  43a823:	hlt    
  43a824:	fdiv   QWORD PTR [edx-0x30]
  43a827:	jae    0x43a7eb
  43a829:	sbb    al,0xd8
  43a82b:	mov    bl,0x83
  43a82d:	inc    ebx
  43a82e:	div    bl
  43a830:	inc    ebx
  43a831:	add    al,0xf2
  43a834:	std    
  43a835:	jb     0x43a80a
  43a837:	retf   0xfb75
  43a83a:	xor    dh,BYTE PTR [eax-0xd2b17bd]
  43a840:	cld    
  43a841:	call   DWORD PTR [esi]
  43a843:	pop    ebx
  43a844:	and    cl,bh
  43a846:	sbb    bl,BYTE PTR [eax-0x3c6f82bd]
  43a84c:	mov    esp,0x2f9ad372
  43a851:	stc    
  43a852:	add    al,BYTE PTR [eax+0x757ee844]
  43a858:	and    cl,bh
  43a85a:	push   esi
  43a85b:	mov    dh,0xe3
  43a85d:	(bad)  
  43a85e:	pop    ss
  43a85f:	je     0x43a7fb
  43a861:	std    
  43a862:	ret    0xade
  43a865:	call   0xf963fdd8
  43a86a:	push   esi
  43a86b:	mov    ch,0xe3
  43a86d:	add    edx,DWORD PTR [esi-0x3d0561a6]
  43a873:	aas    
  43a874:	test   BYTE PTR [ebx+0x0],al
  43a877:	add    dh,dh
  43a879:	hlt    
  43a87a:	inc    ebx
  43a87b:	call   0x2066b1f3
  43a880:	lods   al,BYTE PTR ds:[esi]
  43a881:	icebp  
  43a882:	in     al,0x1e
  43a884:	pushf  
  43a885:	or     BYTE PTR [esi-0x62],ah
  43a888:	les    ecx,FWORD PTR [ecx]
  43a88a:	xchg   esp,eax
  43a88b:	or     al,0x58
  43a88d:	dec    esi
  43a88e:	fld    QWORD PTR [edx]
  43a890:	push   ss
  43a891:	sub    eax,0xce1c666
  43a896:	es test dh,bh
  43a899:	pop    ds
  43a89a:	call   0x8b357d35
  43a89f:	pop    ds
  43a8a0:	ins    BYTE PTR es:[edi],dx
  43a8a1:	or     BYTE PTR [esi-0x17dbe975],ah
  43a8a7:	enter  0x8cb9,0x23
  43a8ab:	jecxz  0x43a8fd
  43a8ad:	retf   
  43a8ae:	mov    eax,gs:0xd23b2848
  43a8b4:	cmp    cl,BYTE PTR [edi-0xec3e04e]
  43a8ba:	pushf  
  43a8bb:	and    BYTE PTR [eax+ecx*1],ch
  43a8be:	mov    ax,ds:0xb1409c4
  43a8c4:	pop    eax
  43a8c5:	dec    esi
  43a8c6:	in     eax,dx
  43a8c7:	add    al,0x96
  43a8c9:	sub    al,0x66
  43a8cb:	leave  
  43a8cc:	icebp  
  43a8cd:	montmul (bad)
  43a8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a8cf:	or     DWORD PTR [esi-0x2b6717e1],0xfffffff1
  43a8d6:	add    bl,BYTE PTR [edi]
  43a8d8:	cld    
  43a8d9:	pop    es
  43a8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a8db:	mov    eax,DWORD PTR [eax]
  43a8dd:	add    BYTE PTR [esi-0x363717dd],dl
  43a8e3:	mov    WORD PTR [ebx+0x3ecae0e2],fs
  43a8e9:	mov    eax,0x2c4a07de
  43a8ee:	ins    DWORD PTR es:[edi],dx
  43a8ef:	push   es
  43a8f0:	inc    edx
  43a8f1:	pop    ds
  43a8f2:	dec    eax
  43a8f3:	test   ecx,edx
  43a8f5:	add    eax,DWORD PTR [esi+0x13]
  43a8f8:	add    BYTE PTR [edx-0x74],ah
  43a8fb:	sbb    eax,0x86b7a3ff
  43a900:	inc    ebx
  43a901:	retf   0xc4d2
  43a904:	jl     0x43a8a2
  43a906:	test   al,0x8
  43a908:	je     0x43a8f9
  43a90a:	out    dx,al
  43a90b:	aas    
  43a90c:	stc    
  43a90d:	push   cs
  43a90e:	repnz les eax,FWORD PTR [esp+ebp*4-0x35bbf774]
  43a916:	push   edi
  43a917:	dec    ebx
  43a918:	sbb    eax,0x1df217eb
  43a91d:	in     eax,dx
  43a91e:	rol    DWORD PTR [eax],cl
  43a920:	call   0xf9445e74
  43a925:	push   0x35
  43a927:	sbb    edi,edi
  43a929:	push   esi
  43a92a:	shl    ecx,cl
  43a92c:	push   ss
  43a92d:	into   
  43a92e:	repz add BYTE PTR [ebp-0xe2e28e],bh
  43a935:	and    esi,DWORD PTR [esi]
  43a937:	xchg   BYTE PTR [ebx+0xa],al
  43a93a:	xlat   BYTE PTR ds:[ebx]
  43a93b:	(bad)  
  43a93c:	out    0x23,eax
  43a93e:	cmc    
  43a93f:	add    cl,bh
  43a941:	push   0x0
  43a943:	add    BYTE PTR [ebp+0x19],dh
  43a946:	add    bl,BYTE PTR [edi]
  43a948:	fcomi  st,st(1)
  43a94a:	cli    
  43a94b:	xchg   edi,eax
  43a94c:	mov    ebx,0xe681bd00
  43a951:	cld    
  43a952:	clc    
  43a953:	xchg   BYTE PTR [edi+0x4b],bl
  43a956:	push   ss
  43a957:	call   0x2cc0cf69
  43a95c:	test   BYTE PTR [esi+edi*4],0x81
  43a960:	mov    dh,0xfc
  43a962:	clc    
  43a963:	mov    si,0xfc2d
  43a967:	pop    esi
  43a968:	ret    
  43a969:	test   BYTE PTR [ebx-0x1],bh
  43a96c:	int    0x83
  43a96e:	add    al,BYTE PTR [ecx+0xb]
  43a971:	add    al,0xf9
  43a973:	add    BYTE PTR [ebx],dl
  43a975:	dec    esp
  43a976:	add    DWORD PTR [ebp-0x4a],0xd
  43a97a:	cmp    eax,0x1bd22f23
  43a97f:	add    bh,bh
  43a981:	xor    dh,BYTE PTR [edi-0x17d80c05]
  43a987:	add    eax,eax
  43a989:	daa    
  43a98a:	test   DWORD PTR [ebx+0x74f8fc41],0xa748b86
  43a994:	jg     0x43a9ad
  43a996:	jge    0x43a944
  43a998:	ins    BYTE PTR es:[edi],dx
  43a999:	or     al,BYTE PTR [eax]
  43a99b:	add    DWORD PTR [ecx],0x15
  43a99e:	add    al,0xf
  43a9a0:	adc    ch,BYTE PTR [ecx+0x0]
  43a9a3:	add    BYTE PTR [edx+esi*1-0x66],bh
  43a9a7:	inc    BYTE PTR [eax]
  43a9a9:	add    BYTE PTR [ebx+0x183bb24],al
  43a9af:	add    dl,bh
  43a9b1:	je     0x43a9f9
  43a9b3:	mov    DWORD PTR [edx+ecx*1+0x3f],esi
  43a9b7:	adc    eax,0xa2c8c7d
  43a9bc:	add    BYTE PTR [ebx+0xef91801],al
  43a9c2:	xchg   edx,eax
  43a9c3:	mov    edi,edi
  43a9c5:	(bad)  
  43a9c6:	cmp    al,0x32
  43a9c8:	jp     0x43a9c8
  43a9ca:	inc    ebx
  43a9cb:	and    al,0xbb
  43a9cd:	add    ecx,0xffffffff
  43a9d0:	cli    
  43a9d1:	je     0x43a9df
  43a9d3:	mov    DWORD PTR [edx+ecx*1-0x1],esi
  43a9d7:	adc    al,0x7d
  43a9d9:	ins    BYTE PTR es:[edi],dx
  43a9da:	in     al,dx
  43a9db:	or     DWORD PTR [eax],eax
  43a9dd:	call   0x3ad1b2
  43a9e2:	aas    
  43a9e3:	mov    BYTE PTR [esi+edx*1-0x1],dh
  43a9e7:	sahf   
  43a9e8:	add    al,0x83
  43a9ea:	add    DWORD PTR [eax],edx
  43a9ec:	sti    
  43a9ed:	je     0x43a9c4
  43a9ef:	mov    edx,0x54d35624
  43a9f4:	sbb    edi,DWORD PTR [ebp+0x3f2ce56]
  43a9fa:	dec    eax
  43a9fb:	idiv   DWORD PTR [edi+0x7b]
  43a9fe:	iret   
  43a9ff:	out    dx,eax
  43aa00:	xchg   ecx,eax
  43aa01:	inc    edi
  43aa02:	mov    ebp,0xaaf91aab
  43aa07:	xor    BYTE PTR [edi+0x7b],bh
  43aa0a:	retf   
  43aa0b:	in     eax,dx
  43aa0c:	xchg   ecx,eax
  43aa0d:	add    DWORD PTR [eax],eax
  43aa0f:	add    BYTE PTR [ebp-0x6d06e521],ch
  43aa15:	xor    BYTE PTR [edi+0x7b],bh
  43aa18:	jecxz  0x43aa0e
  43aa1a:	xchg   ecx,eax
  43aa1b:	or     edx,DWORD PTR [esi-0x7a]
  43aa1e:	pop    es
  43aa1f:	std    
  43aa20:	add    ecx,ecx
  43aa22:	and    al,0x26
  43aa24:	jae    0x43aa1a
  43aa26:	sbb    edi,DWORD PTR [ebp+0xf26e56]
  43aa2c:	call   0xcfbf2a35
  43aa31:	out    dx,eax
  43aa32:	xchg   ecx,eax
  43aa33:	pop    ss
  43aa34:	push   esi
  43aa35:	push   esi
  43aa36:	iret   
  43aa37:	aas    
  43aa38:	sar    dh,0x7f
  43aa3b:	jnp    0x43aa10
  43aa3d:	repnz nop
  43aa3f:	or     ebp,DWORD PTR ds:0x32f91aef
  43aa45:	mov    al,0x24
  43aa47:	add    ch,BYTE PTR [ebx]
  43aa49:	lods   al,BYTE PTR ds:[esi]
  43aa4a:	sbb    edi,DWORD PTR [ebp-0x109d1b2]
  43aa50:	xchg   ecx,eax
  43aa51:	iret   
  43aa52:	jg     0x43aa97
  43aa54:	mov    dh,0xf0
  43aa56:	aas    
  43aa57:	call   0xf95f3357
  43aa5c:	in     eax,dx
  43aa5d:	rcl    BYTE PTR [edi],0xf9
  43aa60:	cli    
  43aa61:	outs   dx,DWORD PTR ds:[esi]
  43aa62:	call   0xf0e8:0x2f5d911
  43aa69:	or     DWORD PTR [esp+ebx*1-0x24],esp
  43aa6d:	enter  0xc66d,0xc0
  43aa71:	or     ch,BYTE PTR [eax+eiz*8+0x4f510000]
  43aa78:	push   es
  43aa79:	add    DWORD PTR [eax-0x43e6cc0f],ecx
  43aa7f:	add    al,0x4f
  43aa81:	repnz rol DWORD PTR [edx+esi*1],0x80
  43aa86:	cs sbb al,0xe7
  43aa89:	xchg   esi,eax
  43aa8a:	aam    0xf1
  43aa8c:	sub    bl,BYTE PTR [esi]
  43aa8e:	pushf  
  43aa8f:	add    al,0x26
  43aa91:	sbb    BYTE PTR [esi],0x1c
  43aa94:	in     eax,0x96
  43aa96:	aam    0xf1
  43aa98:	dec    esi
  43aa99:	push   ds
  43aa9a:	mov    WORD PTR [esi+eiz*1],es
  43aa9d:	cmp    dh,0x1b
  43aaa0:	out    0x96,al
  43aaa2:	aam    0xf1
  43aaa4:	inc    edx
  43aaa5:	push   ds
  43aaa6:	ins    BYTE PTR es:[edi],dx
  43aaa7:	add    al,0x26
  43aaa9:	sub    dh,0x1b
  43aaac:	jmp    0x43aa3e
  43aaae:	aam    0xf1
  43aab0:	xchg   BYTE PTR [ecx],bl
  43aab2:	pop    esp
  43aab3:	add    al,0xa6
  43aab5:	xchg   esi,ecx
  43aab7:	sbb    esp,esp
  43aab9:	nop
  43aaba:	aam    0xf1
  43aabc:	pop    edx
  43aabd:	sbb    DWORD PTR [esp+eax*1],edi
  43aac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aac1:	xchg   DWORD PTR [esi-0x2b6615e5],edi
  43aac7:	icebp  
  43aac8:	pop    esi
  43aac9:	sbb    DWORD PTR [esp+eax*1],ebp
  43aacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aacd:	(bad)  
  43aace:	xchg   esi,eax
  43aacf:	pop    ds
  43aad0:	call   0x2bcc6495
  43aad5:	out    0x10,eax
  43aad7:	(bad)  
  43aad8:	jle    0x43ab37
  43aada:	add    BYTE PTR [eax],al
  43aadc:	add    eax,DWORD PTR [edx+eax*4]
  43aadf:	xchg   DWORD PTR [esi+0x1b],edi
  43aae2:	out    0x90,eax
  43aae4:	aam    0xf1
  43aae6:	inc    DWORD PTR [esp+ecx*8]
  43aae9:	add    bh,cl
  43aaeb:	stos   BYTE PTR es:[edi],al
  43aaec:	push   edx
  43aaed:	adc    BYTE PTR [edx],0xe8
  43aaf0:	inc    ebp
  43aaf1:	or     ch,al
  43aaf3:	leave  
  43aaf4:	mov    ebp,0x5a2af902
  43aaf9:	jg     0x43ab0d
  43aafb:	jmp    0x43ab62
  43aafd:	adc    al,0xe8
  43aaff:	mov    ah,0xe0
  43ab01:	add    cl,bh
  43ab03:	push   0x5c
  43ab05:	or     eax,0xeb68bcfd
  43ab0a:	inc    esi
  43ab0b:	sub    al,0xce
  43ab0d:	add    BYTE PTR [ebp-0x2e6c396],bh
  43ab13:	xchg   ebx,eax
  43ab14:	aam    0xf1
  43ab16:	cmp    dl,BYTE PTR [esi+ebp*8]
  43ab19:	add    BYTE PTR [ebp+0x4196c6a],bh
  43ab1f:	jl     0x43aaaa
  43ab21:	jmp    0x43ab48
  43ab23:	add    ebx,esi
  43ab25:	add    BYTE PTR [ebp+0x74],bh
  43ab28:	loopne 0x43ab2e
  43ab2a:	ins    DWORD PTR es:[edi],dx
  43ab2b:	mov    esi,0xe6fb27be
  43ab30:	mov    edi,0x675c7cc4
  43ab35:	or     BYTE PTR [ebx-0x11],dh
  43ab38:	(bad)  
  43ab39:	sbb    edi,ebx
  43ab3b:	into   
  43ab3c:	out    dx,eax
  43ab3d:	les    edi,FWORD PTR [esp+eax*2+0x0]
  43ab41:	add    BYTE PTR [edi+0x9],al
  43ab44:	jae    0x43ab1e
  43ab46:	out    dx,al
  43ab47:	or     dh,dh
  43ab49:	mov    dh,0xcf
  43ab4b:	test   BYTE PTR [ebx-0x1d],bh
  43ab4e:	sar    DWORD PTR [ebp+0xc],cl
  43ab51:	xchg   ecx,eax
  43ab52:	(bad)  
  43ab54:	clc    
  43ab55:	sahf   
  43ab56:	xchg   ebx,eax
  43ab57:	icebp  
  43ab58:	cli    
  43ab59:	xchg   ebp,eax
  43ab5a:	out    dx,eax
  43ab5b:	add    BYTE PTR [ebp-0xe2ea9e],bh
  43ab61:	push   DWORD PTR [ecx+0xf457bea]
  43ab67:	or     al,0xbb
  43ab69:	call   0x3ad088
  43ab6e:	jg     0x43ab11
  43ab70:	push   cs
  43ab71:	add    BYTE PTR [ecx],al
  43ab73:	or     eax,ebp
  43ab75:	loope  0x43abef
  43ab77:	pop    ds
  43ab78:	test   ebx,0x10ea23f
  43ab7e:	mov    eax,ds:0x18d5e808
  43ab83:	and    bh,dh
  43ab85:	ret    
  43ab86:	das    
  43ab87:	mov    ds:0xfd71020e,al
  43ab8c:	loopne 0x43ab50
  43ab8e:	in     eax,0x1f
  43ab90:	test   DWORD PTR [ebx+0x73fb1479],0xfcb62e5e
  43ab9a:	jmp    0x43abbb
  43ab9c:	mov    ebx,0xfbf85983
  43aba1:	je     0x43ac15
  43aba3:	cs stos BYTE PTR es:[edi],al
  43aba5:	cld    
  43aba6:	add    BYTE PTR [eax],al
  43aba8:	jnp    0x43abca
  43abaa:	mov    ebx,0xfcf8e983
  43abaf:	je     0x43ab3e
  43abb1:	cs xchg edi,eax
  43abb3:	stc    
  43abb4:	jnp    0x43abd6
  43abb6:	jnp    0x43ac35
  43abb8:	or     ax,0x2f74
  43abbc:	adc    al,0x84
  43abbe:	cld    
  43abbf:	call   FWORD PTR [ebx]
  43abc1:	dec    esp
  43abc2:	jnp    0x43ac41
  43abc4:	and    al,BYTE PTR [ebx]
  43abc6:	outs   dx,BYTE PTR ds:[esi]
  43abc7:	push   es
  43abc8:	and    al,0x90
  43abca:	sti    
  43abcb:	jmp    FWORD PTR [ebx+0x4c]
  43abce:	jnp    0x43ac4d
  43abd0:	add    cl,BYTE PTR [eax]
  43abd2:	ins    DWORD PTR es:[edi],dx
  43abd3:	adc    DWORD PTR [ecx+eiz*4-0xf],eax
  43abd7:	(bad)  
  43abd8:	cmp    ecx,DWORD PTR [esp+esi*2-0x77102af6]
  43abdf:	or     edi,ebp
  43abe1:	pop    ss
  43abe2:	sbb    cl,bh
  43abe4:	add    ch,BYTE PTR [edi-0x7d0691d5]
  43abea:	pop    ss
  43abeb:	mov    ebp,0xfefa355e
  43abf0:	xchg   ecx,eax
  43abf1:	iret   
  43abf2:	add    DWORD PTR [ebx-0x4a],0xffffffef
  43abf6:	inc    ebx
  43abf7:	call   0xf95b1532
  43abfc:	push   esi
  43abfd:	(bad)  
  43abfe:	out    dx,al
  43abff:	inc    DWORD PTR [ecx-0x17]
  43ac02:	and    al,0x52
  43ac04:	ror    DWORD PTR [eax+0x17],0xbd
  43ac08:	push   esi
  43ac09:	mov    esi,0xfeee
  43ac0e:	sub    ecx,esi
  43ac10:	and    al,0x46
  43ac12:	test   eax,0x56bd1730
  43ac17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ac18:	out    dx,al
  43ac19:	std    
  43ac1a:	and    esi,esi
  43ac1c:	and    al,0x31
  43ac1e:	mov    WORD PTR [eax],ds
  43ac20:	pop    ss
  43ac21:	jge    0x43ac2b
  43ac23:	in     eax,dx
  43ac24:	add    ecx,DWORD PTR [ecx]
  43ac26:	pop    ecx
  43ac27:	mov    esp,?
  43ac29:	call   ebp
  43ac2b:	sbb    ah,bh
  43ac2d:	sti    
  43ac2e:	jb     0x43ac28
  43ac30:	inc    ebx
  43ac31:	jge    0x43ac1b
  43ac33:	fadd   DWORD PTR [ebx]
  43ac35:	jae    0x43abf7
  43ac37:	jae    0x43abcb
  43ac39:	std    
  43ac3a:	retf   0xed55
  43ac3d:	out    0xeb,eax
  43ac3f:	fst    DWORD PTR [edi]
  43ac41:	stc    
  43ac42:	push   esi
  43ac43:	dec    esi
  43ac44:	or     bh,ch
  43ac46:	(bad)  
  43ac47:	sub    BYTE PTR [esi+ecx*1],ch
  43ac4a:	cmp    eax,eax
  43ac4c:	pop    ss
  43ac4d:	mov    ebp,0xf910e73d
  43ac52:	sub    dh,BYTE PTR [ebx+eax*4-0x14f63485]
  43ac59:	mov    ss,esp
  43ac5b:	icebp  
  43ac5c:	out    0x17,al
  43ac5e:	or     al,0x1
  43ac60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ac61:	test   BYTE PTR [esi-0x2b711be9],cl
  43ac67:	icebp  
  43ac68:	jp     0x43ac86
  43ac6a:	cld    
  43ac6b:	add    BYTE PTR [esi-0x16e8917c],ah
  43ac71:	mov    es,WORD PTR [eax]
  43ac73:	add    bl,bl
  43ac75:	icebp  
  43ac76:	xchg   DWORD PTR [ebx],ebx
  43ac78:	fadd   QWORD PTR [eax]
  43ac7a:	xchg   si,ax
  43ac7c:	ror    BYTE PTR [ebx+edx*8],1
  43ac7f:	jmp    0xcccc:0x184ddeba
  43ac86:	gs xchg esi,eax
  43ac88:	in     al,0x8
  43ac8a:	mov    esp,0xe57f39f0
  43ac8f:	repz daa 
  43ac91:	sbb    edi,DWORD PTR [edi]
  43ac93:	aas    
  43ac94:	lods   eax,DWORD PTR ds:[esi]
  43ac95:	add    BYTE PTR [edx],ch
  43ac97:	test   BYTE PTR [esi],bl
  43ac99:	adc    al,0xe6
  43ac9b:	(bad)  
  43ac9c:	into   
  43ac9d:	icebp  
  43ac9e:	es sbb al,0x8c
  43aca1:	add    BYTE PTR [esi],ah
  43aca3:	sub    eax,DWORD PTR [ebx+0x4]
  43aca6:	or     bl,BYTE PTR [eax]
  43aca8:	inc    eax
  43aca9:	xchg   esp,eax
  43acaa:	stos   DWORD PTR es:[edi],eax
  43acab:	std    
  43acac:	jnp    0x43acf3
  43acae:	mov    BYTE PTR [esi+edx*1+0x7d44e62d],0xf4
  43acb6:	out    dx,al
  43acb7:	pop    ss
  43acb8:	pop    esp
  43acb9:	mov    WORD PTR [ebx-0x12],fs
  43acbc:	pop    edx
  43acbd:	jne    0x43acb3
  43acbf:	sub    esp,DWORD PTR [ecx+eax*1-0x2e]
  43acc3:	pop    ss
  43acc4:	enter  0xdd7e,0x2
  43acc8:	int3   
  43acc9:	xchg   BYTE PTR [esi-0x30f62afc],al
  43accf:	xchg   DWORD PTR [eax],ebp
  43acd1:	add    BYTE PTR [eax],al
  43acd3:	mov    dh,0x96
  43acd5:	jle    0x43ad52
  43acd7:	xlat   BYTE PTR ds:[ebx]
  43acd8:	add    BYTE PTR [eax],al
  43acda:	fnstcw WORD PTR [ebx+edx*1-0x6f]
  43acde:	cmp    eax,0x569ef8f8
  43ace3:	test   BYTE PTR [esi],al
  43ace5:	jmp    0x9d6:0xe9828cd3
  43acec:	call   0xf9468cee
  43acf1:	stos   BYTE PTR es:[edi],al
  43acf2:	push   esi
  43acf3:	test   BYTE PTR [edx],dl
  43acf5:	jmp    0x43ad3c
  43acf7:	sbb    ebp,eax
  43acf9:	or     cl,al
  43acfb:	add    bh,cl
  43acfd:	push   0x3c
  43acff:	push   es
  43ad00:	std    
  43ad01:	in     eax,dx
  43ad02:	push   ebp
  43ad03:	push   0xf1d6e900
  43ad08:	push   esi
  43ad09:	push   edx
  43ad0a:	jmp    0xfd19:0x5c6abd00
  43ad11:	mov    bl,0xa9
  43ad13:	out    0x41,eax
  43ad15:	xor    edx,eax
  43ad17:	add    BYTE PTR [ebp-0x54],bh
  43ad1a:	int3   
  43ad1b:	cld    
  43ad1c:	jae    0x43acd8
  43ad1e:	out    dx,al
  43ad1f:	aas    
  43ad20:	cmc    
  43ad21:	push   ds
  43ad22:	jmp    0x730b:0x78947cbc
  43ad29:	out    0xae,eax
  43ad2b:	cmp    esi,ebp
  43ad2d:	push   es
  43ad2e:	loop   0x43acec
  43ad30:	jl     0x43adae
  43ad32:	or     BYTE PTR [ebx+esi*2],0xd8
  43ad36:	mov    esi,0xcbeef81c
  43ad3b:	jl     0x43adb8
  43ad3d:	repz add BYTE PTR [eax],al
  43ad40:	xlat   BYTE PTR ds:[ebx]
  43ad41:	jp     0x43ad73
  43ad43:	ror    DWORD PTR [ebx-0xa],1
  43ad46:	clc    
  43ad47:	(bad)  
  43ad48:	xchg   edi,eax
  43ad49:	jl     0x43adc6
  43ad4b:	test   DWORD PTR [eax+0x7c],0x724000f
  43ad52:	clc    
  43ad53:	push   DWORD PTR [ebx-0x74]
  43ad56:	je     0x43ad62
  43ad58:	aas    
  43ad59:	call   0xfff7:0x2434e811
  43ad60:	outs   dx,DWORD PTR ds:[esi]
  43ad61:	mov    WORD PTR [esi+edx*1-0x5],?
  43ad65:	xchg   edi,eax
  43ad66:	jmp    edi
  43ad68:	imul   edx,DWORD PTR [eax],0xfd57fff7
  43ad6e:	loopne 0x43ad65
  43ad70:	push   esi
  43ad71:	sbb    bh,dh
  43ad73:	ret    
  43ad74:	addr16 leave 
  43ad76:	adc    al,BYTE PTR [ecx]
  43ad78:	mov    ecx,0xf457bea
  43ad7d:	or     DWORD PTR [ebx-0x8e23518],edi
  43ad83:	(bad)  
  43ad84:	aas    
  43ad85:	mov    ds:0xf5a9000e,al
  43ad8a:	loopne 0x43ad5e
  43ad8c:	sub    ebx,DWORD PTR [eax]
  43ad8e:	test   DWORD PTR [ebx+0x74fb1091],0xfac6324d
  43ad98:	jecxz  0x43adb1
  43ad9a:	mov    ebx,0xf9ec7183
  43ad9f:	je     0x43ad3e
  43ada1:	xor    dh,BYTE PTR [ebx-0xcffff09]
  43ada7:	pop    ss
  43ada8:	jnp    0x43ae27
  43adaa:	jbe    0x43adb7
  43adac:	ins    DWORD PTR es:[edi],dx
  43adad:	cmp    dl,ah
  43adaf:	dec    edi
  43adb0:	bnd call ebx
  43adb3:	dec    ebx
  43adb4:	jnp    0x43ae33
  43adb6:	mov    cl,BYTE PTR [eax]
  43adb8:	ins    DWORD PTR es:[edi],dx
  43adb9:	adc    esp,edx
  43adbb:	pop    esi
  43adbc:	out    dx,eax
  43adbd:	push   DWORD PTR [ebx-0x78]
  43adc0:	je     0x43adcc
  43adc2:	outs   dx,DWORD PTR ds:[esi]
  43adc3:	(bad)  
  43adc4:	sbb    ebp,eax
  43adc6:	pop    esp
  43adc7:	and    esi,edi
  43adc9:	call   ebp
  43adcb:	mov    bl,0x7e
  43adcd:	jnp    0x43adba
  43adcf:	xrelease mov DWORD PTR [esi],ecx
  43add2:	sub    eax,0x32f90b75
  43add7:	jae    0x43ad6a
  43add9:	add    eax,0xe8083dd6
  43adde:	dec    esp
  43addf:	mov    edx,0x9816f912
  43ade4:	jle    0x43addc
  43ade6:	adc    bl,BYTE PTR [edi-0x56f7ac2]
  43adec:	std    
  43aded:	inc    edx
  43adee:	mov    dh,0x73
  43adf0:	mov    ecx,0x12b3d71c
  43adf5:	inc    ebx
  43adf6:	mov    dh,0xa7
  43adf8:	mov    eax,0xfcf0dafd
  43adfd:	jmp    ebx
  43adff:	and    al,0xde
  43ae01:	jg     0x43ae5b
  43ae03:	adc    al,BYTE PTR [ebx]
  43ae05:	jae    0x43ade2
  43ae07:	pop    edx
  43ae08:	mov    bl,0xf5
  43ae0a:	add    BYTE PTR [eax],al
  43ae0c:	retf   0x3f54
  43ae0f:	test   DWORD PTR [eax],ebx
  43ae11:	adc    BYTE PTR [ebx],al
  43ae13:	mov    dl,0xcd
  43ae15:	jne    0x43ae17
  43ae17:	mov    dl,dh
  43ae19:	bnd jg 0x43addc
  43ae1c:	shl    DWORD PTR [ebx],1
  43ae1e:	xor    al,0xc1
  43ae20:	sbb    cl,dh
  43ae22:	fdiv   st(7),st
  43ae24:	call   0x12d0:0x18f93ff3
  43ae2b:	inc    ebx
  43ae2c:	mov    bh,0x72
  43ae2e:	xchg   ecx,eax
  43ae2f:	sbb    eax,0xe7fa95d2
  43ae34:	ror    BYTE PTR [eax],0x13
  43ae37:	stc    
  43ae38:	xchg   esi,eax
  43ae39:	js     0x43adfc
  43ae3b:	add    DWORD PTR [edx+ecx*1+0x67db5b85],eax
  43ae42:	mov    ecx,0x9909ca1c
  43ae47:	or     ebx,DWORD PTR [esi+0x6]
  43ae4a:	imul   eax,DWORD PTR [eax],0xffa688d5
  43ae50:	cmp    eax,0xd4b65dda
  43ae55:	fcmovb st,st(7)
  43ae57:	mov    bl,BYTE PTR [esi-0x69eb59fd]
  43ae5d:	sub    BYTE PTR [ecx+0x2b89c0be],dh
  43ae63:	loop   0x43ae32
  43ae65:	jbe    0x43ae50
  43ae67:	sub    edx,DWORD PTR [ebx]
  43ae69:	add    ebx,DWORD PTR [edx+0x2b914814]
  43ae6f:	loope  0x43ae71
  43ae71:	add    ch,cl
  43ae73:	mov    bl,0xe6
  43ae75:	xlat   BYTE PTR ds:[ebx]
  43ae76:	ss jbe 0x43ae4e
  43ae79:	xlat   BYTE PTR ds:[ebx]
  43ae7a:	xor    eax,0x3cd7e976
  43ae7f:	jbe    0x43ae5e
  43ae81:	xlat   BYTE PTR ds:[ebx]
  43ae82:	sub    eax,0xcdd7e176
  43ae87:	jne    0x43ae6e
  43ae89:	sub    cl,bl
  43ae8b:	ret    
  43ae8c:	mov    ds:0xab8fca03,eax
  43ae91:	loopne 0x43ae60
  43ae93:	mov    bl,0xde
  43ae95:	xchg   cl,dl
  43ae97:	mov    esp,ebp
  43ae99:	add    esi,DWORD PTR [eax]
  43ae9b:	retf   0x14e2
  43ae9e:	test   ebx,eax
  43aea0:	stos   DWORD PTR es:[edi],eax
  43aea1:	add    edx,ebp
  43aea3:	enter  0xbe29,0xb9
  43aea7:	sti    
  43aea8:	stos   DWORD PTR es:[edi],eax
  43aea9:	loope  0x43aebd
  43aeab:	jg     0x43ae72
  43aead:	add    al,0x6
  43aeaf:	add    al,0xff
  43aeb1:	push   edi
  43aeb2:	mov    bh,ah
  43aeb4:	or     DWORD PTR [eax+0x50],eax
  43aeb7:	inc    esi
  43aeb8:	mov    BYTE PTR [edi+eiz*1],0x9
  43aebc:	mov    ebx,0x3be173
  43aec1:	mov    ch,0x2
  43aec3:	jbe    0x43aefb
  43aec5:	lods   eax,DWORD PTR ds:[esi]
  43aec6:	sti    
  43aec7:	jne    0x43aefb
  43aec9:	and    eax,0x1d2e75bf
  43aece:	mov    esi,0xa3152a75
  43aed3:	jne    0x43aefb
  43aed5:	or     eax,0x759a0000
  43aeda:	and    al,BYTE PTR ds:0xfd1e75b5
  43aee0:	mov    ch,0x75
  43aee2:	sbb    dh,ch
  43aee4:	mov    ah,0x75
  43aee6:	push   ss
  43aee7:	in     eax,dx
  43aee8:	mov    bh,0x75
  43aeea:	adc    ah,ch
  43aeec:	jb     0x43af66
  43aeee:	push   cs
  43aeef:	fnsave ds:0x34d50a78
  43aef5:	js     0x43aefd
  43aef7:	int    0x37
  43aef9:	js     0x43aefd
  43aefb:	(bad)
  43aefe:	(bad)  
  43aeff:	xchg   ecx,eax
  43af00:	ffree  st(7)
  43af02:	inc    edx
  43af03:	call   0xca8635e1
  43af08:	xlat   BYTE PTR ds:[ebx]
  43af09:	mov    bh,0x7
  43af0b:	je     0x43aeea
  43af0d:	(bad)  
  43af0e:	cld    
  43af0f:	call   0x56477967
  43af14:	or     eax,ecx
  43af16:	inc    edx
  43af17:	call   0xad3c6bf2
  43af1c:	mov    ebx,0x510b4301
  43af21:	jg     0x43af41
  43af23:	out    0x3d,al
  43af25:	or     eax,ebp
  43af27:	mov    eax,ds:0x2af900c9
  43af2c:	adc    al,BYTE PTR [edi+0x1d]
  43af2f:	out    dx,al
  43af30:	sub    al,0x12
  43af32:	mov    ebp,DWORD PTR [ebp+0x57]
  43af35:	or     al,BYTE PTR [ecx+ebp*8]
  43af38:	(bad)  
  43af39:	cld    
  43af3a:	clc    
  43af3b:	add    BYTE PTR [eax],al
  43af3d:	add    bh,bh
  43af3f:	inc    ebp
  43af40:	add    al,0xff
  43af42:	int3   
  43af43:	inc    edx
  43af44:	test   DWORD PTR [ebp-0x71],0xec223d19
  43af4b:	cwde   
  43af4c:	sbb    cl,BYTE PTR [edi]
  43af4e:	mov    cl,0xf
  43af50:	call   0xf75be476
  43af55:	ret    
  43af56:	mov    bh,0xd1
  43af58:	sbb    ecx,DWORD PTR [edi]
  43af5a:	(bad)  
  43af5b:	inc    DWORD PTR [ebp+0x806aa84]
  43af61:	add    BYTE PTR [esp+eax*1],bh
  43af64:	add    BYTE PTR [ebx-0x2f08fc94],al
  43af6a:	outs   dx,DWORD PTR ds:[esi]
  43af6b:	sbb    BYTE PTR ds:0x1ad23a23,bh
  43af71:	sub    cl,0xe3
  43af74:	pop    es
  43af75:	jne    0x43af69
  43af77:	push   ds
  43af78:	repnz clc 
  43af7a:	dec    ebx
  43af7b:	sbb    BYTE PTR [ebx+0x7e2c18b],bh
  43af81:	mov    dh,0xe4
  43af83:	mov    DWORD PTR [ebx-0x7051372],eax
  43af89:	(bad)  
  43af8a:	out    dx,eax
  43af8b:	push   es
  43af8c:	jnp    0x43af4e
  43af8e:	rcl    BYTE PTR [edi],0xd0
  43af91:	ret    
  43af92:	repz rcl DWORD PTR [edx],1
  43af95:	add    BYTE PTR [esi+eax*1-0x1c8e7500],ch
  43af9c:	pop    es
  43af9d:	mov    dh,0x7c
  43af9f:	add    eax,0xbf35
  43afa4:	mov    esp,0x7d7f0006
  43afa9:	push   ds
  43afaa:	or     al,0xf6
  43afac:	jmp    0x43afc5
  43afae:	jnp    0x43b02d
  43afb0:	xchg   edx,eax
  43afb1:	pcmpeqd mm0,QWORD PTR [esi]
  43afb4:	in     al,0x57
  43afb6:	clc    
  43afb7:	call   ebp
  43afb9:	adc    eax,DWORD PTR [edx-0x18]
  43afbc:	inc    edi
  43afbd:	adc    eax,0xad5ef90e
  43afc2:	jmp    0xb643:0x81d011fe
  43afc9:	out    dx,al
  43afca:	inc    ecx
  43afcb:	rcl    DWORD PTR [eax],0xd7
  43afce:	cld    
  43afcf:	call   ebp
  43afd1:	lock jnp 0x43b017
  43afd4:	imul   bl
  43afd6:	push   esi
  43afd7:	inc    eax
  43afd8:	aam    0x15
  43afda:	dec    edi
  43afdb:	add    ch,dl
  43afdd:	lock (bad) 
  43afdf:	adc    BYTE PTR ds:0x2af9109a,bh
  43afe5:	outs   dx,DWORD PTR ds:[esi]
  43afe6:	mov    DWORD PTR [ecx],edx
  43afe8:	aam    0x3d
  43afea:	xchg   ebp,eax
  43afeb:	jl     0x43af85
  43afed:	rol    BYTE PTR [edi],cl
  43afef:	jp     0x43b067
  43aff1:	cwde   
  43aff2:	cmp    al,0xa
  43aff5:	fwait
  43aff6:	inc    edx
  43aff7:	cmp    edx,DWORD PTR ds:0x79fffcf0
  43affd:	xor    dh,BYTE PTR [ebp-0x42]
  43b000:	adc    al,0x96
  43b002:	pop    es
  43b003:	xchg   DWORD PTR [edi+ebp*2],edx
  43b006:	sbb    eax,0x56000009
  43b00b:	jbe    0x43b006
  43b00d:	jb     0x43afdd
  43b00f:	outs   dx,DWORD PTR ds:[esi]
  43b010:	add    eax,0x14a54900
  43b015:	pop    esi
  43b016:	int    0x58
  43b018:	bsr    edx,DWORD PTR [esi+0x5d]
  43b01c:	(bad)  
  43b01d:	jb     0x43b021
  43b01f:	fs add eax,0x14e929fe
  43b025:	dec    esi
  43b026:	lods   eax,DWORD PTR ds:[esi]
  43b027:	cmp    BYTE PTR [edi],cl
  43b029:	mov    ebp,0x73033a56
  43b02e:	ror    DWORD PTR [edx-0x39],cl
  43b031:	not    DWORD PTR [edx+0x845220a]
  43b037:	repz loopne 0x43afd0
  43b03a:	aam    0xe1
  43b03c:	ror    BYTE PTR [ebx],cl
  43b03e:	jl     0x43b039
  43b040:	and    eax,0x7c116a85
  43b045:	or     DWORD PTR [ebp+0x3b],edi
  43b048:	call   DWORD PTR [eax]
  43b04a:	pop    esp
  43b04b:	int    0x65
  43b04d:	or     ecx,esp
  43b04f:	jle    0x43b032
  43b051:	sbb    esi,edi
  43b053:	icebp  
  43b054:	loope  0x43b066
  43b056:	mov    dl,ah
  43b058:	call   DWORD PTR [esi]
  43b05a:	cmp    al,0xf9
  43b05c:	pop    ebp
  43b05d:	(bad)  
  43b05e:	loopne 0x43b06a
  43b060:	and    al,0xe5
  43b062:	mov    cl,0x4e
  43b064:	push   es
  43b065:	push   es
  43b066:	push   0x22ee23d1
  43b06b:	stc    
  43b06c:	out    0x3,al
  43b06e:	add    BYTE PTR [eax],al
  43b070:	push   eax
  43b071:	dec    edi
  43b072:	push   es
  43b073:	add    DWORD PTR [edi+0x4a],eax
  43b076:	call   0xe74dfe49
  43b07b:	add    edi,DWORD PTR [edx+ebx*1+0x7f]
  43b07f:	into   
  43b080:	pop    es
  43b081:	stc    
  43b082:	mov    DWORD PTR [esi+ebp*2-0x476e15e1],eax
  43b089:	loope  0x43b101
  43b08b:	sbb    ah,bl
  43b08d:	clc    
  43b08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b08f:	into   
  43b090:	sbb    cl,BYTE PTR [edx]
  43b092:	out    0x3,eax
  43b094:	push   ecx
  43b095:	das    
  43b096:	jo     0x43b0dd
  43b098:	mov    ah,bl
  43b09a:	loop   0x43b116
  43b09c:	or     BYTE PTR [edi+eax*2-0x270bc800],0x96
  43b0a4:	(bad)  [edi+edi*1+0x4f1b26fa]
  43b0ab:	inc    eax
  43b0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b0ad:	clc    
  43b0ae:	push   DWORD PTR ds:0xdef67711
  43b0b4:	imul   ecx,DWORD PTR [edx],0xffffffe8
  43b0b7:	sub    eax,0x2af8f2ed
  43b0bc:	fidivr WORD PTR [edx-0x711ae90d]
  43b0c2:	inc    edx
  43b0c3:	repz xlat BYTE PTR ds:[ebx]
  43b0c5:	dec    esp
  43b0c6:	sbb    eax,0xfe15936a
  43b0cb:	sub    DWORD PTR ds:0xd6e9164d,ecx
  43b0d1:	or     DWORD PTR [eax],eax
  43b0d3:	bound  eax,QWORD PTR [eax]
  43b0d5:	add    BYTE PTR [ebx],bl
  43b0d7:	adc    eax,0xf7119f09
  43b0dc:	cmp    ebx,DWORD PTR [esi+0x560009d9]
  43b0e2:	sub    dh,al
  43b0e4:	aam    0xd5
  43b0e6:	loop   0x43b0da
  43b0e8:	jl     0x43b12e
  43b0ea:	and    ecx,DWORD PTR [esp+esi*2]
  43b0ed:	out    dx,eax
  43b0ee:	push   edi
  43b0ef:	je     0x43b103
  43b0f1:	out    dx,eax
  43b0f2:	inc    edx
  43b0f3:	adc    BYTE PTR [ebp+0x2c],bh
  43b0f6:	or     ecx,DWORD PTR [ecx]
  43b0f8:	jns    0x43b0e5
  43b0fa:	out    dx,eax
  43b0fb:	cmp    al,ch
  43b0fd:	imul   ebp,edx,0x24aaf8f2
  43b103:	mov    eax,0x75d6e8ff
  43b108:	xor    al,0x70
  43b10a:	xchg   edi,eax
  43b10b:	mov    eax,0xb861e5e5
  43b110:	jl     0x43b09a
  43b112:	fidiv  DWORD PTR [esi+esi*8-0x21]
  43b116:	ins    DWORD PTR es:[edi],dx
  43b117:	sbb    al,0x7d
  43b119:	pusha  
  43b11a:	leave  
  43b11b:	je     0x43b13d
  43b11d:	push   0xffffffd0
  43b11f:	hlt    
  43b120:	ins    BYTE PTR es:[edi],dx
  43b121:	repnz push edi
  43b123:	(bad)  
  43b124:	std    
  43b125:	aam    0xa8
  43b127:	out    dx,eax
  43b128:	push   edx
  43b129:	add    bl,ch
  43b12b:	push   es
  43b12c:	test   ebx,0x7507042f
  43b132:	mov    bh,0x8c
  43b134:	lock or BYTE PTR [eax+0xd],al
  43b138:	call   0xeb43b182
  43b13d:	push   es
  43b13e:	test   ebx,0xffecc5e4
  43b144:	jecxz  0x43b1b8
  43b146:	cmp    eax,0x1bc27d1a
  43b14b:	cmp    DWORD PTR [ecx],0xffffffec
  43b14e:	cli    
  43b14f:	ret    0xc0bb
  43b152:	adc    al,BYTE PTR [eax]
  43b154:	ins    BYTE PTR es:[edi],dx
  43b155:	or     eax,DWORD PTR [eax]
  43b157:	mov    edi,DWORD PTR [ecx-0x14]
  43b15a:	pop    es
  43b15b:	mov    dh,0xfc
  43b15d:	or     al,0x35
  43b15f:	mov    edi,0x7f000b2c
  43b164:	cmp    eax,0x23f45c13
  43b169:	or     BYTE PTR [ebx+0x7d],bh
  43b16c:	or     dl,BYTE PTR [eax]
  43b16e:	jbe    0x43b192
  43b170:	add    al,0xf8
  43b172:	out    dx,eax
  43b173:	jmp    DWORD PTR [ebx+0x4c]
  43b176:	xor    eax,0xafcc0
  43b17b:	jl     0x43b186
  43b17d:	jbe    0x43b139
  43b17f:	shl    DWORD PTR [esi+0xf],0x81
  43b183:	shr    DWORD PTR [edi+0x2d],0x7
  43b187:	add    DWORD PTR [esi+0xa],0x6d
  43b18b:	push   es
  43b18c:	inc    esp
  43b18d:	sbb    al,0xee
  43b18f:	jmp    DWORD PTR [ebx+0x4b]
  43b192:	call   0xf74b117d
  43b197:	mov    edi,ecx
  43b199:	jecxz  0x43b194
  43b19b:	inc    esp
  43b19c:	fisttp WORD PTR [edx+0x233c]
  43b1a2:	scas   al,BYTE PTR es:[edi]
  43b1a3:	dec    ebx
  43b1a4:	mov    edi,0xfcfad545
  43b1a9:	call   ebp
  43b1ab:	loopne 0x43b222
  43b1ad:	inc    ebx
  43b1ae:	idiv   bh
  43b1b0:	push   edx
  43b1b1:	inc    eax
  43b1b2:	aam    0xf5
  43b1b4:	dec    ecx
  43b1b5:	add    ch,dl
  43b1b7:	loopne 0x43b142
  43b1b9:	push   ss
  43b1ba:	jge    0x43b1a6
  43b1bc:	adc    cl,bh
  43b1be:	mov    ah,BYTE PTR [ebx-0x70]
  43b1c1:	adc    eax,ebx
  43b1c3:	pushf  
  43b1c4:	hlt    
  43b1c5:	jl     0x43b1bf
  43b1c7:	test   BYTE PTR [ecx],0x79
  43b1ca:	xlat   BYTE PTR ds:[ebx]
  43b1cb:	or     ecx,edi
  43b1cd:	out    0x20,eax
  43b1cf:	test   BYTE PTR [edx],0xf9
  43b1d2:	xchg   esi,eax
  43b1d3:	mov    ch,0x3c
  43b1d5:	add    ch,dl
  43b1d7:	loopne 0x43b161
  43b1d9:	and    bl,BYTE PTR [edx+eiz*1+0x44]
  43b1dd:	out    0xd1,al
  43b1df:	jns    0x43b21e
  43b1e1:	jge    0x43b217
  43b1e3:	out    0x7f,eax
  43b1e5:	test   cl,0x55
  43b1e8:	idiv   DWORD PTR [esp+ebp*1-0x18]
  43b1ec:	mov    BYTE PTR [esi],cl
  43b1ee:	cmp    eax,0x22f91254
  43b1f3:	mov    ds:0x35caf67e,eax
  43b1f8:	add    ch,al
  43b1fa:	pop    esp
  43b1fb:	mov    esi,0x9816f90a
  43b200:	(bad)  
  43b201:	in     al,dx
  43b202:	add    dl,BYTE PTR [edi+0x4376]
  43b208:	(bad)  
  43b20a:	rcr    DWORD PTR [esi+edx*2],0x2d
  43b20e:	(bad)  
  43b210:	pop    ss
  43b211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b212:	rcl    BYTE PTR ds:0xfffce0d5,0x4e
  43b219:	and    eax,0x238b08df
  43b21e:	std    
  43b21f:	cmp    cl,BYTE PTR [edx-0x2afc18f6]
  43b225:	je     0x43b21f
  43b227:	sbb    esi,DWORD PTR [ebp-0x7]
  43b22a:	push   ecx
  43b22b:	or     eax,0x4f17730
  43b230:	das    
  43b231:	sub    eax,0xf5a4b14f
  43b236:	cmp    DWORD PTR [ecx-0x22],eax
  43b239:	leave  
  43b23a:	out    0x3,al
  43b23c:	aad    0x75
  43b23e:	int    0x7a
  43b240:	dec    ebx
  43b241:	retf   
  43b242:	or     al,0x8
  43b244:	pop    edx
  43b245:	retf   
  43b246:	gs and ecx,esp
  43b249:	mov    BYTE PTR [edi+edi*8],cl
  43b24c:	out    0x0,eax
  43b24e:	or     dx,dx
  43b251:	jge    0x43b23c
  43b253:	sbb    esi,DWORD PTR [ebx+0x180cf9fb]
  43b259:	loop   0x43b226
  43b25b:	adc    BYTE PTR [ebp+esi*8+0x5d],cl
  43b25f:	(bad)  
  43b260:	loopne 0x43b26c
  43b262:	sub    al,0xe1
  43b264:	ror    DWORD PTR [esi+0x6],0x2
  43b268:	js     0x43b237
  43b26a:	sub    ebp,edx
  43b26c:	add    BYTE PTR [eax],al
  43b26e:	xor    dh,ch
  43b270:	out    0x3,al
  43b272:	push   eax
  43b273:	dec    edi
  43b274:	push   es
  43b275:	std    
  43b276:	fs dec edx
  43b278:	call   0xe74e104b
  43b27d:	add    ecx,DWORD PTR [edx+ebx*1-0xb064541]
  43b284:	mov    eax,ds:0xe21b7e80
  43b289:	lea    ecx,[eax-0x13e96d1f]
  43b28f:	hlt    
  43b290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b291:	into   
  43b292:	sub    cl,BYTE PTR [edx]
  43b294:	out    0x3,eax
  43b296:	popa   
  43b297:	dec    esi
  43b298:	jo     0x43b2db
  43b29a:	sbb    ah,al
  43b29c:	(bad)  
  43b29d:	in     al,dx
  43b29e:	dec    edi
  43b29f:	mov    ch,0x7c
  43b2a1:	mov    cl,cl
  43b2a3:	jne    0x43b29b
  43b2a5:	cmc    
  43b2a6:	imul   ecx,DWORD PTR [edx],0xffffffe8
  43b2a9:	dec    ecx
  43b2aa:	jecxz  0x43b29e
  43b2ac:	clc    
  43b2ad:	sub    dl,BYTE PTR [ebp-0x5]
  43b2b0:	or     dl,ah
  43b2b2:	shl    cl,1
  43b2b4:	sar    BYTE PTR [ecx+edx*8],cl
  43b2b7:	repnz mov esp,0x72ffcc6a
  43b2bd:	fst    DWORD PTR [ebp-0x4]
  43b2c0:	push   DWORD PTR [ebp+edi*2+0x53f1f775]
  43b2c7:	sbb    ch,al
  43b2c9:	sub    ebx,esp
  43b2cb:	repnz clc 
  43b2cd:	sub    dl,BYTE PTR [ebp-0x5]
  43b2d0:	or     BYTE PTR [eax+eax*1-0x88a9300],dl
  43b2d7:	icebp  
  43b2d8:	push   edx
  43b2d9:	or     ch,al
  43b2db:	cmp    ebx,eax
  43b2dd:	repnz clc 
  43b2df:	sub    ch,dh
  43b2e1:	xchg   esi,eax
  43b2e2:	in     eax,dx
  43b2e3:	out    dx,al
  43b2e4:	fimul  WORD PTR [esi+0x48d80342]
  43b2ea:	sbb    eax,0xfe15146a
  43b2ef:	test   eax,0x25cbc5ed
  43b2f4:	push   edi
  43b2f5:	idiv   al
  43b2f7:	jmp    0xe943bcd2
  43b2fc:	(bad)  
  43b2fd:	or     DWORD PTR [eax],eax
  43b2ff:	mov    ebp,0xb5f8f685
  43b304:	add    esp,esi
  43b306:	clc    
  43b307:	popf   
  43b308:	xor    esi,0x9d6e9f8
  43b30e:	add    cl,ch
  43b310:	(bad)  
  43b311:	or     DWORD PTR [eax],eax
  43b313:	jno    0x43b38f
  43b315:	idiv   al
  43b317:	add    BYTE PTR [eax-0x43000704],dl
  43b31d:	mov    bh,dl
  43b31f:	(bad)  
  43b320:	mov    esp,0xbc000007
  43b325:	pop    es
  43b326:	add    BYTE PTR [eax],al
  43b328:	push   0x60
  43b32a:	sti    
  43b32b:	jmp    FWORD PTR [edi+esi*8+0x7638fff8]
  43b332:	sti    
  43b333:	(bad)  
  43b334:	mov    esp,0x7
  43b339:	add    BYTE PTR [edi+eax*1+0x679e0000],ch
  43b340:	sti    
  43b341:	dec    DWORD PTR [eax+0x38fff8fc]
  43b347:	outs   dx,DWORD PTR ds:[esi]
  43b348:	sti    
  43b349:	jmp    FWORD PTR [edi+eax*1+0x0]
  43b34d:	add    BYTE PTR [edi+eax*1+0x0],ch
  43b351:	add    BYTE PTR [edi+eiz*2-0x5],al
  43b355:	jmp    FWORD PTR [eax]
  43b357:	cld    
  43b358:	clc    
  43b359:	dec    eax
  43b35b:	jne    0x43b358
  43b35d:	jmp    FWORD PTR [edi+eax*1+0x0]
  43b361:	add    BYTE PTR [edi+eax*1],bh
  43b364:	add    BYTE PTR [eax],al
  43b366:	mov    ds:0x58fffb6d,al
  43b36b:	cld    
  43b36c:	clc    
  43b36d:	inc    DWORD PTR [esp+esi*2+0x73cfffb]
  43b374:	add    BYTE PTR [eax],al
  43b376:	cmp    al,0x7
  43b378:	add    BYTE PTR [eax],al
  43b37a:	add    ch,BYTE PTR [esi-0x5]
  43b37d:	call   DWORD PTR [edi+esi*8-0x76ff0008]
  43b384:	cli    
  43b385:	(bad)  
  43b386:	cld    
  43b387:	push   es
  43b388:	add    BYTE PTR [eax],al
  43b38a:	in     al,dx
  43b38b:	push   es
  43b38c:	add    BYTE PTR [eax],al
  43b38e:	repnz ins BYTE PTR es:[edi],dx
  43b390:	sti    
  43b391:	call   ebp
  43b393:	push   esp
  43b394:	in     eax,dx
  43b395:	(bad)  
  43b396:	jmp    0xfce0:0xe2fd7a80
  43b39d:	inc    DWORD PTR [eax]
  43b39f:	add    ch,dl
  43b3a1:	loopne 0x43b39f
  43b3a3:	call   ebp
  43b3a5:	xor    BYTE PTR [ebx-0x3],ah
  43b3a8:	retf   0xf050
  43b3ab:	inc    edx
  43b3ad:	inc    eax
  43b3ae:	cmp    ch,0xba
  43b3b1:	loopne 0x43b3af
  43b3b3:	call   ebp
  43b3b5:	loopne 0x43b3b3
  43b3b7:	call   ebp
  43b3b9:	push   esp
  43b3ba:	(bad)  
  43b3bb:	std    
  43b3bc:	mov    ds:0x9affed50,al
  43b3c1:	ins    BYTE PTR es:[edi],dx
  43b3c2:	jnp    0x43b3c1
  43b3c4:	xchg   edx,eax
  43b3c5:	loopne 0x43b3c3
  43b3c7:	call   ebp
  43b3c9:	loopne 0x43b3c7
  43b3cb:	call   ebp
  43b3cd:	jl     0x43b42f
  43b3cf:	std    
  43b3d0:	jp     0x43b3ae
  43b3d2:	out    dx,eax
  43b3d3:	push   DWORD PTR [edx-0x78]
  43b3d6:	je     0x43b3d5
  43b3d8:	push   0xffffffe0
  43b3da:	cld    
  43b3db:	call   ebp
  43b3dd:	loopne 0x43b3db
  43b3df:	call   ebp
  43b3e1:	push   0xd852fd60
  43b3e6:	icebp  
  43b3e7:	dec    DWORD PTR [edx-0x68]
  43b3ea:	je     0x43b3e9
  43b3ec:	inc    edx
  43b3ed:	loopne 0x43b3eb
  43b3ef:	call   ebp
  43b3f1:	loopne 0x43b3ef
  43b3f3:	call   ebp
  43b3f5:	mov    dh,0x58
  43b3f7:	std    
  43b3f8:	sub    ch,al
  43b3fa:	repz jmp DWORD PTR [edx]
  43b3fd:	sub    al,0x7b
  43b3ff:	std    
  43b400:	sbb    ah,al
  43b402:	cld    
  43b403:	inc    DWORD PTR [eax]
  43b405:	add    ch,dl
  43b407:	loopne 0x43b405
  43b409:	call   ebp
  43b40b:	add    al,0x5e
  43b40d:	std    
  43b40e:	add    cl,BYTE PTR [ecx]
  43b410:	repz icebp 
  43b412:	cli    
  43b413:	icebp  
  43b414:	out    0x3,al
  43b416:	aad    0x9
  43b418:	out    0x3,eax
  43b41a:	aad    0x9
  43b41c:	out    0x3,eax
  43b41e:	aad    0x9
  43b420:	out    0x3,eax
  43b422:	aad    0x9
  43b424:	out    0x3,eax
  43b426:	aad    0x9
  43b428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b429:	ins    DWORD PTR es:[edi],dx
  43b42a:	enter  0x92f1,0x6d
  43b42e:	shl    cl,0x52
  43b431:	ins    DWORD PTR es:[edi],dx
  43b432:	mov    eax,0xb067e4f1
  43b437:	icebp  
  43b438:	cli    
  43b439:	addr16 test al,0xf1
  43b43c:	(bad)  
  43b43d:	addr16 mov al,ds:0xfef1
  43b441:	addr16 cwde 
  43b443:	icebp  
  43b444:	stos   BYTE PTR es:[edi],al
  43b445:	addr16 nop
  43b447:	icebp  
  43b448:	les    esp,FWORD PTR [edi-0x78]
  43b44b:	icebp  
  43b44c:	mov    dl,0x67
  43b44e:	xor    cl,0x70
  43b451:	push   0x6842f178
  43b456:	jo     0x43b449
  43b458:	push   edx
  43b459:	push   0x6832f168
  43b45e:	pusha  
  43b45f:	icebp  
  43b460:	adc    ch,BYTE PTR [eax+0x58]
  43b463:	icebp  
  43b464:	loop   0x43b4cc
  43b466:	push   eax
  43b467:	icebp  
  43b468:	into   
  43b469:	data16 add BYTE PTR [eax],al
  43b46c:	dec    eax
  43b46d:	icebp  
  43b46e:	mov    esp,0x22f14066
  43b473:	addr16 cmp cl,dh
  43b476:	sub    BYTE PTR [edi+0x30],ah
  43b479:	icebp  
  43b47a:	xor    BYTE PTR [edi+0x28],ah
  43b47d:	icebp  
  43b47e:	dec    esi
  43b47f:	addr16 and cl,dh
  43b482:	outs   dx,BYTE PTR ds:[esi]
  43b483:	data16 sbb cl,dh
  43b486:	pop    esi
  43b487:	data16 adc cl,dh
  43b48a:	dec    DWORD PTR [esi-0x5807118d]
  43b490:	jnp    0x43b480
  43b492:	clc    
  43b493:	mov    esi,DWORD PTR [ebx-0x12]
  43b496:	clc    
  43b497:	mov    ds:0xdbf8ee7b,eax
  43b49c:	jl     0x43b48c
  43b49e:	clc    
  43b49f:	pop    ds
  43b4a0:	outs   dx,DWORD PTR ds:[esi]
  43b4a1:	out    dx,al
  43b4a2:	clc    
  43b4a3:	adc    ebp,DWORD PTR [edi-0x12]
  43b4a6:	clc    
  43b4a7:	std    
  43b4a8:	cmp    al,0xef
  43b4aa:	clc    
  43b4ab:	pop    ecx
  43b4ac:	cmp    al,0xef
  43b4ae:	clc    
  43b4af:	dec    ebx
  43b4b0:	sub    al,0xef
  43b4b2:	clc    
  43b4b3:	lea    ebp,[ecx]
  43b4b5:	out    dx,eax
  43b4b6:	clc    
  43b4b7:	jmp    0xb743be92
  43b4bc:	xor    edi,ebp
  43b4be:	clc    
  43b4bf:	or     eax,0xe7f8ef38
  43b4c4:	xor    edi,ebp
  43b4c6:	clc    
  43b4c7:	in     eax,dx
  43b4c8:	stc    
  43b4c9:	out    dx,al
  43b4ca:	clc    
  43b4cb:	cmp    eax,0x1bf8eef0
  43b4d0:	add    BYTE PTR [eax],al
  43b4d2:	clc    
  43b4d3:	out    dx,al
  43b4d4:	clc    
  43b4d5:	gs lock out dx,al
  43b4d8:	clc    
  43b4d9:	xchg   edi,eax
  43b4da:	stc    
  43b4db:	out    dx,al
  43b4dc:	clc    
  43b4dd:	jmp    0x743beb8
  43b4e2:	imul   esi
  43b4e4:	clc    
  43b4e5:	test   edi,esi
  43b4e7:	out    dx,al
  43b4e8:	clc    
  43b4e9:	and    DWORD PTR [edi-0x48860712],esi
  43b4ef:	out    dx,al
  43b4f0:	clc    
  43b4f1:	mov    DWORD PTR [edi-0x4f480712],esi
  43b4f7:	out    dx,al
  43b4f8:	clc    
  43b4f9:	stos   DWORD PTR es:[edi],eax
  43b4fa:	mov    eax,0xb087f8ee
  43b4ff:	out    dx,al
  43b500:	clc    
  43b501:	mov    edi,DWORD PTR [eax-0x4bff0712]
  43b507:	data16 sti 
  43b509:	inc    DWORD PTR [eax-0x1300049a]
  43b50f:	data16 sti 
  43b511:	(bad)  
  43b512:	ds data16 sti 
  43b515:	dec    DWORD PTR [eiz*2+0x64f6fffb]
  43b51c:	sti    
  43b51d:	(bad)  
  43b51e:	cld    
  43b51f:	or     eax,DWORD PTR [eax]
  43b521:	add    BYTE PTR [eax-0x7100048b],al
  43b527:	jne    0x43b524
  43b529:	dec    DWORD PTR [edx]
  43b52b:	jbe    0x43b528
  43b52d:	jmp    FWORD PTR [esi+0x76]
  43b530:	sti    
  43b531:	call   DWORD PTR [esi+0x76]
  43b534:	sti    
  43b535:	inc    DWORD PTR [eax]
  43b537:	add    BYTE PTR [eax-0x5500048a],ch
  43b53d:	jbe    0x43b53a
  43b53f:	call   esi
  43b541:	je     0x43b53e
  43b543:	inc    esp
  43b545:	je     0x43b542
  43b547:	jmp    DWORD PTR [esi+esi*2-0x5]
  43b54b:	push   DWORD PTR [esi+esi*2]
  43b54e:	sti    
  43b54f:	call   DWORD PTR [esi+esi*2+0x74f8fffb]
  43b556:	sti    
  43b557:	(bad)  
  43b558:	cli    
  43b559:	je     0x43b556
  43b55b:	call   FWORD PTR [edx]
  43b55d:	jne    0x43b55a
  43b55f:	inc    DWORD PTR [esi*2+0x74c2fffb]
  43b566:	sti    
  43b567:	dec    esp
  43b569:	je     0x43b566
  43b56b:	dec    DWORD PTR [esi+esi*2-0x5]
  43b56f:	(bad)  
  43b570:	cmp    bh,BYTE PTR [ecx-0x5]
  43b573:	dec    DWORD PTR [esi]
  43b575:	jns    0x43b572
  43b577:	(bad)  
  43b578:	fidivr DWORD PTR [ebx-0x5]
  43b57b:	(bad)  
  43b57c:	cli    
  43b57d:	jnp    0x43b57a
  43b57f:	call   ebp
  43b581:	sub    al,0x6e
  43b583:	std    
  43b584:	and    al,BYTE PTR [ebx+0x6e]
  43b587:	std    
  43b588:	sbb    dh,BYTE PTR [ebx]
  43b58a:	outs   dx,BYTE PTR ds:[esi]
  43b58b:	std    
  43b58c:	adc    ah,BYTE PTR [ebx+0x6f]
  43b58f:	std    
  43b590:	or     dl,BYTE PTR [ebx+0x6f]
  43b593:	std    
  43b594:	add    al,BYTE PTR [ebp+0x6afafd6e]
  43b59a:	outs   dx,DWORD PTR ds:[esi]
  43b59b:	std    
  43b59c:	add    BYTE PTR [eax],al
  43b59e:	repnz sahf 
  43b5a0:	outs   dx,BYTE PTR ds:[esi]
  43b5a1:	std    
  43b5a2:	jmp    0x73fe:0xe2fd6e82
  43b5a9:	std    
  43b5aa:	(bad)  
  43b5ac:	ins    DWORD PTR es:[edi],dx
  43b5ad:	std    
  43b5ae:	shr    al,cl
  43b5b0:	ins    DWORD PTR es:[edi],dx
  43b5b1:	std    
  43b5b2:	retf   0x6dbc
  43b5b5:	std    
  43b5b6:	ret    0x6dae
  43b5b9:	std    
  43b5ba:	mov    edx,0xb2fd6d24
  43b5bf:	pushf  
  43b5c0:	ins    DWORD PTR es:[edi],dx
  43b5c1:	std    
  43b5c2:	stos   BYTE PTR es:[edi],al
  43b5c3:	shr    BYTE PTR [ebp-0x3],0xa2
  43b5c7:	fsubr  DWORD PTR [ebp-0x3]
  43b5ca:	call   0x6e4c:0x92fd6e5e
  43b5d1:	std    
  43b5d2:	mov    al,BYTE PTR [esi+0x2482fd6d]
  43b5d8:	outs   dx,BYTE PTR ds:[esi]
  43b5d9:	std    
  43b5da:	jp     0x43b60a
  43b5dc:	outs   dx,BYTE PTR ds:[esi]
  43b5dd:	std    
  43b5de:	jb     0x43b5f8
  43b5e0:	outs   dx,BYTE PTR ds:[esi]
  43b5e1:	std    
  43b5e2:	push   0xffffffe0
  43b5e4:	push   0x68f862fd
  43b5e9:	std    
  43b5ea:	pop    edx
  43b5eb:	mov    esp,0xb252fd68
  43b5f0:	push   0x68a04afd
  43b5f5:	std    
  43b5f6:	inc    edx
  43b5f7:	xchg   esp,eax
  43b5f8:	push   0x45093afd
  43b5fd:	jo     0x43b62f
  43b5ff:	out    dx,al
  43b600:	fs jo  0x43b603
  43b603:	add    BYTE PTR [eax],ch
  43b605:	out    dx,al
  43b606:	mov    BYTE PTR [eax+0x20],dh
  43b609:	out    dx,al
  43b60a:	mov    WORD PTR [eax+0x18],?
  43b60d:	out    dx,al
  43b60e:	mov    dl,0x70
  43b610:	adc    dh,ch
  43b612:	(bad)  
  43b613:	jo     0x43b61d
  43b615:	out    dx,al
  43b616:	sub    bl,BYTE PTR [ebp+0x0]
  43b619:	out    dx,al
  43b61a:	(bad)  
  43b61b:	pop    esp
  43b61c:	clc    
  43b61d:	in     eax,dx
  43b61e:	cli    
  43b61f:	pop    esp
  43b620:	lock in eax,dx
  43b622:	out    dx,al
  43b623:	pop    esp
  43b624:	call   0xe0a24b16
  43b629:	in     eax,dx
  43b62a:	push   ss
  43b62b:	je     0x43b605
  43b62d:	in     eax,dx
  43b62e:	and    dh,BYTE PTR [eax+edx*8-0x13]
  43b632:	sub    dh,BYTE PTR [eax+ecx*8-0x13]
  43b636:	mov    dl,0x73
  43b638:	shr    ch,0xb8
  43b63b:	jae    0x43b5f5
  43b63d:	in     eax,dx
  43b63e:	push   es
  43b63f:	je     0x43b5f1
  43b641:	in     eax,dx
  43b642:	jmp    0xa075:0x4eeda873
  43b649:	in     eax,dx
  43b64a:	ds jne 0x43b5e5
  43b64d:	in     eax,dx
  43b64e:	adc    al,0x75
  43b650:	nop
  43b651:	in     eax,dx
  43b652:	and    BYTE PTR [ebp-0x78],dh
  43b655:	in     eax,dx
  43b656:	xor    BYTE PTR [ebp-0x80],0xed
  43b65a:	dec    eax
  43b65b:	jne    0x43b6d5
  43b65d:	in     eax,dx
  43b65e:	jo     0x43b6d5
  43b660:	jo     0x43b64f
  43b662:	fs jne 0x43b6cd
  43b665:	in     eax,dx
  43b666:	xchg   esi,eax
  43b667:	je     0x43b669
  43b669:	add    BYTE PTR [eax-0x13],ah
  43b66c:	xchg   BYTE PTR [eax+ebx*2-0x13],dh
  43b670:	lods   al,BYTE PTR ds:[esi]
  43b671:	je     0x43b6c3
  43b673:	in     eax,dx
  43b674:	mov    edx,0xffed4874
  43b679:	(bad)  
  43b67a:	leave  
  43b67b:	out    dx,al
  43b67c:	clc    
  43b67d:	in     eax,0xc1
  43b67f:	out    dx,al
  43b680:	clc    
  43b681:	(bad)  [eax-0x5f2e0712]
  43b687:	out    dx,al
  43b688:	clc    
  43b689:	mov    ebp,0x8df8eea8
  43b68e:	mov    al,ds:0x8889f8ee
  43b693:	out    dx,al
  43b694:	clc    
  43b695:	push   ebp
  43b696:	sub    dh,0xf8
  43b699:	popa   
  43b69a:	mov    dh,ch
  43b69c:	clc    
  43b69d:	aaa    
  43b69e:	sub    esi,0xfffffff8
  43b6a1:	adc    DWORD PTR [ebx-0x12],ebp
  43b6a4:	clc    
  43b6a5:	inc    ebx
  43b6a6:	arpl   si,bp
  43b6a8:	clc    
  43b6a9:	and    DWORD PTR [ebx-0x12],ebp
  43b6ac:	clc    
  43b6ad:	int    0x60
  43b6af:	out    dx,al
  43b6b0:	clc    
  43b6b1:	mov    ecx,0xcbf8ef48
  43b6b6:	inc    eax
  43b6b7:	out    dx,eax
  43b6b8:	clc    
  43b6b9:	fisttp DWORD PTR [eax-0x11]
  43b6bc:	clc    
  43b6bd:	jmp    0x43b6ff
  43b6bf:	out    dx,eax
  43b6c0:	clc    
  43b6c1:	push   ecx
  43b6c2:	sub    ebp,edi
  43b6c4:	clc    
  43b6c5:	cmp    eax,0x2ff8ef23
  43b6ca:	sub    ebp,edi
  43b6cc:	clc    
  43b6cd:	cdq    
  43b6ce:	add    BYTE PTR [eax],al
  43b6d0:	and    ebp,edi
  43b6d2:	clc    
  43b6d3:	lea    ecx,[ebx]
  43b6d5:	out    dx,eax
  43b6d6:	clc    
  43b6d7:	popa   
  43b6d8:	add    ebp,edi
  43b6da:	clc    
  43b6db:	gs or  ebp,edi
  43b6de:	clc    
  43b6df:	lods   eax,DWORD PTR ds:[esi]
  43b6e0:	add    ebp,edi
  43b6e2:	clc    
  43b6e3:	xchg   ebx,eax
  43b6e4:	jmp    0x43b6d4
  43b6e6:	clc    
  43b6e7:	ret    
  43b6e8:	jecxz  0x43b6d8
  43b6ea:	clc    
  43b6eb:	scas   eax,DWORD PTR es:[edi]
  43b6ec:	jmp    0x43b6dc
  43b6ee:	clc    
  43b6ef:	shl    ebx,1
  43b6f1:	out    dx,al
  43b6f2:	clc    
  43b6f3:	add    BYTE PTR [eax],ch
  43b6f5:	jae    0x43b6f2
  43b6f7:	jmp    FWORD PTR [edx]
  43b6f9:	jae    0x43b6f6
  43b6fb:	call   FWORD PTR [esi]
  43b6fd:	jae    0x43b6fa
  43b6ff:	push   DWORD PTR [edx]
  43b701:	jae    0x43b6fe
  43b703:	push   DWORD PTR [ecx+ebx*4]
  43b706:	sti    
  43b707:	call   FWORD PTR [ecx+ebx*4]
  43b70a:	sti    
  43b70b:	push   DWORD PTR [edx-0x67]
  43b70e:	sti    
  43b70f:	inc    DWORD PTR [edx-0x67]
  43b712:	sti    
  43b713:	(bad)  
  43b714:	jp     0x43b6af
  43b716:	sti    
  43b717:	push   DWORD PTR [edx-0x67]
  43b71a:	sti    
  43b71b:	dec    edx
  43b71d:	cdq    
  43b71e:	sti    
  43b71f:	dec    DWORD PTR [esi-0x4d000467]
  43b725:	cdq    
  43b726:	sti    
  43b727:	(bad)  
  43b728:	mov    esp,0x12fffb99
  43b72d:	jl     0x43b72a
  43b72f:	call   DWORD PTR [eax+0x7c]
  43b732:	sti    
  43b733:	inc    DWORD PTR [eax]
  43b735:	add    BYTE PTR [edx+0x48fffb7b],dh
  43b73b:	jnp    0x43b738
  43b73d:	(bad)  
  43b73e:	ds xchg esp,eax
  43b740:	sti    
  43b741:	jmp    FWORD PTR [edi+eax*1-0x5f180000]
  43b748:	sti    
  43b749:	push   DWORD PTR [ecx+eiz*4-0x5]
  43b74d:	call   DWORD PTR [edx-0x5f]
  43b750:	sti    
  43b751:	jmp    FWORD PTR [edi+eax*1+0x7820000]
  43b758:	add    BYTE PTR [eax-0x7ffff87c],al
  43b75e:	jne    0x43b767
  43b760:	add    BYTE PTR [eax-0x7ffff892],al
  43b766:	jl     0x43b76f
  43b768:	add    BYTE PTR [eax],al
  43b76a:	pop    esi
  43b76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b76c:	sti    
  43b76d:	call   ebp
  43b76f:	mov    ds:0xbb5afc9c,al
  43b774:	pushf  
  43b775:	cld    
  43b776:	push   edx
  43b777:	loope  0x43b775
  43b779:	call   ebp
  43b77b:	retf   0xfc9c
  43b77e:	inc    edx
  43b77f:	out    0x9c,eax
  43b781:	cld    
  43b782:	cmp    bl,bl
  43b784:	popf   
  43b785:	cld    
  43b786:	xor    dl,bl
  43b788:	popf   
  43b789:	cld    
  43b78a:	sub    ch,BYTE PTR [ebp-0x4edd0363]
  43b790:	popf   
  43b791:	cld    
  43b792:	sbb    ah,BYTE PTR [ebp-0x76ed0363]
  43b798:	popf   
  43b799:	cld    
  43b79a:	add    BYTE PTR [eax],al
  43b79c:	or     bl,BYTE PTR [ecx+0x5102fc9d]
  43b7a2:	sahf   
  43b7a3:	cld    
  43b7a4:	cli    
  43b7a5:	sbb    al,0x9d
  43b7a7:	cld    
  43b7a8:	repnz sbb BYTE PTR [ebp-0x62d31504],bl
  43b7af:	cld    
  43b7b0:	loop   0x43b7d8
  43b7b2:	popf   
  43b7b3:	cld    
  43b7b4:	fcmovbe st,st(4)
  43b7b6:	popf   
  43b7b7:	cld    
  43b7b8:	sar    BYTE PTR [ebp+ebx*4-0x622f3504],cl
  43b7bf:	cld    
  43b7c0:	ret    0x9f76
  43b7c3:	cld    
  43b7c4:	mov    edx,0xb2fc9e82
  43b7c9:	dec    eax
  43b7ca:	lahf   
  43b7cb:	cld    
  43b7cc:	stos   BYTE PTR es:[edi],al
  43b7cd:	ss lahf 
  43b7cf:	cld    
  43b7d0:	mov    ds:0x9afc9e94,al
  43b7d5:	retf   0xfffc
  43b7d8:	push   ebp
  43b7d9:	loopne 0x43b7d7
  43b7db:	call   ebp
  43b7dd:	fs popf 
  43b7df:	cld    
  43b7e0:	and    al,0xfc
  43b7e3:	call   ebp
  43b7e5:	mov    eax,0x972fc94
  43b7ea:	mov    DWORD PTR [ebx-0x644f1597],ebx
  43b7f0:	popa   
  43b7f1:	jmp    0x9bd0:0xea599b9e
  43b7f8:	push   ecx
  43b7f9:	jmp    0x9bd4:0xea499bca
  43b800:	add    BYTE PTR [eax],al
  43b802:	inc    ecx
  43b803:	jmp    0x99f6:0xea3999f2
  43b80a:	xor    edx,ebp
  43b80c:	ret    0x2999
  43b80f:	jmp    0x99a4:0xea2199b6
  43b816:	sbb    edx,ebp
  43b818:	nop
  43b819:	cdq    
  43b81a:	adc    edx,ebp
  43b81c:	mov    ds,WORD PTR [ecx-0x66a115f7]
  43b822:	add    edx,ebp
  43b824:	pop    esp
  43b825:	cdq    
  43b826:	stc    
  43b827:	jmp    0xea35515c
  43b82c:	push   cs
  43b82d:	cdq    
  43b82e:	jmp    0xe1e0011c
  43b833:	jmp    0xea1d54d4
  43b838:	stos   BYTE PTR es:[edi],al
  43b839:	pushf  
  43b83a:	shr    ecx,1
  43b83c:	je     0x43b7da
  43b83e:	leave  
  43b83f:	jmp    0xea055496
  43b844:	fcomp  DWORD PTR [edx-0x653f1647]
  43b84a:	mov    cl,0xe9
  43b84c:	and    BYTE PTR [ebx-0x654b1657],bl
  43b852:	mov    eax,ds:0x999acae9
  43b857:	jmp    0xe9d55314
  43b85c:	fs fwait
  43b85e:	mov    ecx,ebp
  43b860:	push   esp
  43b861:	fwait
  43b862:	sub    ecx,0x88ff
  43b868:	pop    esi
  43b869:	out    0xf8,al
  43b86b:	jne    0x43b8bb
  43b86d:	out    0xf8,al
  43b86f:	sub    eax,0x41f8e64e
  43b874:	ds out 0xf8,al
  43b877:	sbb    edi,DWORD PTR [esi]
  43b879:	out    0xf8,al
  43b87b:	lea    esi,[ecx-0x1a]
  43b87e:	clc    
  43b87f:	xchg   ecx,eax
  43b880:	imul   esp,esi,0xe6619df8
  43b886:	clc    
  43b887:	cdq    
  43b888:	pop    ecx
  43b889:	out    0xf8,al
  43b88b:	test   eax,0x1df8e651
  43b890:	dec    eax
  43b891:	out    0xf8,al
  43b893:	pop    es
  43b894:	inc    eax
  43b895:	out    0xf8,al
  43b897:	(bad)  
  43b898:	cmp    esi,esp
  43b89a:	clc    
  43b89b:	jecxz  0x43b90e
  43b89d:	out    0xf8,al
  43b89f:	ret    
  43b8a0:	push   0x5fe7f8e6
  43b8a5:	out    0xf8,al
  43b8a7:	push   edi
  43b8a8:	pop    esi
  43b8a9:	out    0xf8,al
  43b8ab:	ret    
  43b8ac:	push   eax
  43b8ad:	out    0xf8,al
  43b8af:	lds    ecx,FWORD PTR [eax-0x1a]
  43b8b2:	clc    
  43b8b3:	lods   eax,DWORD PTR ds:[esi]
  43b8b4:	inc    eax
  43b8b5:	out    0xf8,al
  43b8b7:	test   eax,0xebf8e638
  43b8bc:	imul   esp,ebp,0xfffffff8
  43b8bf:	(bad)  [ebx-0x1b]
  43b8c2:	clc    
  43b8c3:	lds    ebp,FWORD PTR [ebx-0x1b]
  43b8c6:	clc    
  43b8c7:	mov    ebx,0x2bf8e563
  43b8cc:	add    BYTE PTR [eax],al
  43b8ce:	dec    edx
  43b8cf:	in     eax,0xf8
  43b8d1:	mov    ecx,0xbdf8e543
  43b8d6:	dec    ebx
  43b8d7:	in     eax,0xf8
  43b8d9:	mov    bl,0x3d
  43b8db:	in     eax,0xf8
  43b8dd:	popf   
  43b8de:	ins    DWORD PTR es:[edi],dx
  43b8df:	in     eax,0xf8
  43b8e1:	add    al,dl
  43b8e3:	cmp    bl,0xff
  43b8e6:	in     al,0x82
  43b8e8:	sti    
  43b8e9:	jmp    DWORD PTR [esi+0x76fffb81]
  43b8ef:	cmp    ebx,0xfb817eff
  43b8f5:	dec    eax
  43b8f7:	cmp    bl,0xff
  43b8fa:	int3   
  43b8fb:	cmp    bl,0xff
  43b8fe:	lock cmp bl,0xff
  43b902:	nop
  43b903:	cmp    bl,0xff
  43b906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b907:	cmp    bl,0xff
  43b90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b90b:	cmp    bl,0xff
  43b90e:	xchg   edx,eax
  43b90f:	cmp    bl,0xff
  43b912:	mov    dl,0x7f
  43b914:	sti    
  43b915:	(bad)  
  43b916:	jle    0x43b997
  43b918:	sti    
  43b919:	dec    DWORD PTR [edi+edi*2+0x7ff0fffb]
  43b920:	sti    
  43b921:	call   eax
  43b923:	jg     0x43b920
  43b925:	call   edx
  43b927:	jg     0x43b924
  43b929:	jmp    FWORD PTR [edx+eax*4-0x5]
  43b92d:	push   DWORD PTR [edx-0x7d]
  43b930:	sti    
  43b931:	inc    DWORD PTR [eax]
  43b933:	add    BYTE PTR [ebx+eax*4-0x7c8d0005],bl
  43b93a:	sti    
  43b93b:	(bad)  
  43b93c:	mov    eax,0x2fffb83
  43b941:	test   bl,bh
  43b943:	(bad)  
  43b944:	cli    
  43b945:	cmp    ebx,0xffffffff
  43b948:	nop
  43b949:	cmp    ebx,0xfb81a0ff
  43b94f:	push   DWORD PTR [ecx+eax*4-0x7edd0005]
  43b956:	sti    
  43b957:	dec    DWORD PTR [ecx+eax*4-0x5]
  43b95b:	call   ebp
  43b95d:	adc    BYTE PTR [esi-0x68ce6d04],0xfc
  43b964:	mov    al,BYTE PTR [ebx]
  43b966:	xchg   edi,eax
  43b967:	cld    
  43b968:	or     BYTE PTR [ebp-0x69],0xfc
  43b96c:	jp     0x43b995
  43b96e:	xchg   edi,eax
  43b96f:	cld    
  43b970:	jb     0x43b95b
  43b972:	xchg   edx,eax
  43b973:	cld    
  43b974:	push   0xb
  43b976:	xchg   edx,eax
  43b977:	cld    
  43b978:	bound  edx,QWORD PTR [ebp-0xea50369]
  43b97e:	cld    
  43b97f:	call   ebp
  43b981:	and    BYTE PTR [edi-0x5854b504],0xfc
  43b988:	inc    edx
  43b989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b98b:	cld    
  43b98c:	cmp    cl,cl
  43b98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b98f:	cld    
  43b990:	xor    al,bl
  43b992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b993:	cld    
  43b994:	sub    al,ch
  43b996:	mov    al,ds:0x220000fc
  43b99b:	lahf   
  43b99c:	mov    al,ds:0xa0b11afc
  43b9a1:	cld    
  43b9a2:	adc    cl,BYTE PTR [ebx+0x470afca0]
  43b9a8:	mov    eax,ds:0xa17102fc
  43b9ad:	cld    
  43b9ae:	cli    
  43b9af:	dec    eax
  43b9b0:	test   al,0xfc
  43b9b2:	repnz add ch,BYTE PTR [eax-0x57cd1504]
  43b9b9:	cld    
  43b9ba:	loop   0x43b992
  43b9bc:	mov    al,ds:0xa0e4dafc
  43b9c1:	cld    
  43b9c2:	shl    al,cl
  43b9c4:	mov    al,ds:0x9d7acafc
  43b9c9:	cld    
  43b9ca:	ret    0x9d7e
  43b9cd:	cld    
  43b9ce:	mov    edx,0xb2fc9e38
  43b9d3:	dec    edx
  43b9d4:	sahf   
  43b9d5:	cld    
  43b9d6:	stos   BYTE PTR es:[edi],al
  43b9d7:	or     DWORD PTR [ecx-0x19195e5e],esp
  43b9dd:	add    edx,ebp
  43b9df:	or     DWORD PTR [ebx],ebx
  43b9e1:	mov    ds:0x3f7e691,al
  43b9e6:	aad    0x89
  43b9e8:	jmp    0x43b9ed
  43b9ea:	aad    0x89
  43b9ec:	out    0x3,eax
  43b9ee:	aad    0x89
  43b9f0:	jecxz  0x43b9f5
  43b9f2:	aad    0x89
  43b9f4:	loope  0x43b9f9
  43b9f6:	aad    0x89
  43b9f8:	xchg   esi,eax
  43b9f9:	add    edx,ebp
  43b9fb:	mov    DWORD PTR [ecx+eiz*4-0x19a70000],esp
  43ba02:	inc    esi
  43ba03:	mov    eax,ds:0xa172e651
  43ba08:	dec    ecx
  43ba09:	out    0xea,al
  43ba0b:	add    edx,ebp
  43ba0d:	mov    DWORD PTR [eax-0x5f],edi
  43ba10:	cmp    esi,esp
  43ba12:	jne    0x43ba17
  43ba14:	aad    0x89
  43ba16:	and    BYTE PTR [ecx-0x5dc519d7],0x21
  43ba1d:	out    0xf0,al
  43ba1f:	add    edx,ebp
  43ba21:	mov    ebx,edi
  43ba23:	add    edx,ebp
  43ba25:	mov    DWORD PTR [edx+0x4],edx
  43ba28:	aad    0x89
  43ba2a:	in     al,0x3
  43ba2c:	aad    0x89
  43ba2e:	aam    0x3
  43ba30:	aad    0x89
  43ba32:	call   0xd2cd8f3a
  43ba37:	add    edx,ebp
  43ba39:	mov    edx,ecx
  43ba3b:	mov    eax,ds:0xa1fce5e1
  43ba40:	fxam   
  43ba42:	mul    BYTE PTR [ecx+0x3f6e5d1]
  43ba48:	aad    0x89
  43ba4a:	in     eax,0x3
  43ba4c:	aad    0x89
  43ba4e:	aad    0x3
  43ba50:	aad    0x89
  43ba52:	inc    DWORD PTR ds:0xd68009d9
  43ba58:	(bad)  
  43ba59:	or     DWORD PTR [eax+0x9d6e9],eax
  43ba5f:	push   ecx
  43ba60:	jb     0x43ba48
  43ba62:	clc    
  43ba63:	pop    ebx
  43ba64:	add    BYTE PTR [eax],al
  43ba66:	cmp    ah,dh
  43ba68:	clc    
  43ba69:	dec    ebp
  43ba6a:	xor    ah,dh
  43ba6c:	clc    
  43ba6d:	out    dx,eax
  43ba6e:	cmp    dh,ah
  43ba70:	clc    
  43ba71:	fnstenv [eax]
  43ba73:	out    0xf8,al
  43ba75:	sar    DWORD PTR [eax],cl
  43ba77:	out    0xf8,al
  43ba79:	pop    es
  43ba7a:	xor    esp,esi
  43ba7c:	clc    
  43ba7d:	aad    0x38
  43ba7f:	out    0xf8,al
  43ba81:	xlat   BYTE PTR ds:[ebx]
  43ba82:	xor    dh,ah
  43ba84:	clc    
  43ba85:	test   eax,0xa1f8e678
  43ba8a:	jo     0x43ba72
  43ba8c:	clc    
  43ba8d:	fwait
  43ba8e:	js     0x43ba76
  43ba90:	clc    
  43ba91:	xchg   ecx,eax
  43ba92:	jo     0x43ba7a
  43ba94:	clc    
  43ba95:	mov    edi,DWORD PTR [ecx-0x1a]
  43ba98:	clc    
  43ba99:	jns    0x43bb0b
  43ba9b:	out    0xf8,al
  43ba9d:	addr16 jnp 0x43ba86
  43baa0:	clc    
  43baa1:	addr16 jo 0x43ba8a
  43baa4:	clc    
  43baa5:	jnp    0x43badf
  43baa7:	out    0xf8,al
  43baa9:	jae    0x43badb
  43baab:	out    0xf8,al
  43baad:	lea    edi,[eax]
  43baaf:	out    0xf8,al
  43bab1:	(bad)  
  43bab2:	xor    dh,ah
  43bab4:	clc    
  43bab5:	jne    0x43baef
  43bab7:	out    0xf8,al
  43bab9:	mov    eax,ds:0xbbf8e630
  43babe:	cmp    dh,ah
  43bac0:	clc    
  43bac1:	mov    edi,0x81f8e630
  43bac6:	js     0x43baad
  43bac8:	clc    
  43bac9:	jmp    0xa19bace
  43bace:	add    BYTE PTR [eax],al
  43bad0:	ds test eax,0xa84cfffb
  43bad6:	sti    
  43bad7:	(bad)  
  43bad8:	jp     0x43ba82
  43bada:	sti    
  43badb:	jmp    esi
  43badd:	test   al,0xfb
  43badf:	dec    DWORD PTR [esi-0x58]
  43bae2:	sti    
  43bae3:	push   DWORD PTR [eax+0x7cfffba7]
  43bae9:	or     BYTE PTR [eax],al
  43baeb:	add    BYTE PTR [ecx+0xc],bl
  43baee:	dec    ebx
  43baef:	jns    0x43bb30
  43baf1:	pop    esp
  43baf2:	pop    ebp
  43baf3:	ins    DWORD PTR es:[edi],dx
  43baf4:	pusha  
  43baf5:	outs   dx,DWORD PTR ds:[esi]
  43baf6:	gs gs push eax
  43baf9:	jne    0x43bb39
  43bafb:	imul   ebp,DWORD PTR [eax],0x4969546b
  43bb01:	imul   eax,DWORD PTR [eax],0x0
  43bb04:	push   esp
  43bb05:	or     bh,BYTE PTR [edi]
  43bb07:	gs jo  0x43bb46
  43bb0a:	popa   
  43bb0b:	ins    DWORD PTR es:[edi],dx
  43bb0c:	push   ecx
  43bb0d:	inc    edx
  43bb0e:	outs   dx,BYTE PTR ds:[si]
  43bb10:	push   ecx
  43bb11:	dec    edi
  43bb12:	data16 dec bx
  43bb15:	pop    edx
  43bb16:	gs popa 
  43bb18:	mov    al,0x6f
  43bb1a:	outs   dx,BYTE PTR ds:[si]
  43bb1c:	cmp    al,0x8
  43bb1e:	outs   dx,DWORD PTR ds:[esi]
  43bb1f:	add    dh,bl
  43bb21:	push   0x74
  43bb23:	push   ebx
  43bb24:	mov    ch,0x5c
  43bb26:	je     0x43bb8d
  43bb28:	cdq    
  43bb29:	cmp    DWORD PTR [ecx+0x6d],esp
  43bb2c:	xchg   ecx,eax
  43bb2d:	or     eax,0x4c6
  43bb32:	loopne 0x43bb8f
  43bb34:	jno    0x43bb7b
  43bb36:	mov    bl,BYTE PTR [ecx+0x5d]
  43bb39:	jb     0x43bafa
  43bb3b:	pop    ebx
  43bb3c:	popa   
  43bb3d:	je     0x43bad4
  43bb3f:	ins    BYTE PTR es:[edi],dx
  43bb40:	pop    ecx
  43bb41:	ins    BYTE PTR es:[edi],dx
  43bb42:	lahf   
  43bb43:	push   0x5b
  43bb45:	je     0x43bb0c
  43bb47:	jo     0x43bbaf
  43bb49:	add    ch,dl
  43bb4b:	jns    0x43bb4c
  43bb4d:	push   eax
  43bb4e:	xor    al,0xa
  43bb50:	jo     0x43bb94
  43bb52:	xor    bl,bh
  43bb54:	push   ecx
  43bb55:	sub    ecx,DWORD PTR [si]
  43bb58:	push   0x6a0f2263
  43bb5d:	arpl   WORD PTR [esi],si
  43bb5f:	(bad)  
  43bb61:	push   esi
  43bb62:	fstp   DWORD PTR [edi-0x44ef8ba1]
  43bb68:	pop    edi
  43bb69:	push   0x9
  43bb6b:	icebp  
  43bb6c:	cld    
  43bb6d:	fst    st(7)
  43bb6f:	test   eax,0xba096766
  43bb74:	arpl   WORD PTR [esp+ebp*8-0x3a],bp
  43bb78:	pop    edi
  43bb79:	cmp    eax,0x6768c9e7
  43bb7e:	not    cl
  43bb80:	pusha  
  43bb81:	dec    ebp
  43bb82:	clc    
  43bb83:	(bad)
  43bb87:	xchg   edx,eax
  43bb88:	cld    
  43bb89:	lods   eax,DWORD PTR ds:[esi]
  43bb8a:	fstp   DWORD PTR [edi-0x7f4f9ca0]
  43bb90:	cld    
  43bb91:	ss (bad) 
  43bb93:	pushf  
  43bb94:	pop    edi
  43bb95:	pop    edi
  43bb96:	add    BYTE PTR [eax],al
  43bb98:	ret    
  43bb99:	lea    eax,[ecx+0x6e]
  43bb9c:	mov    esp,0xb45d6c64
  43bba1:	fs push edx
  43bba3:	arpl   WORD PTR [esi-0x549694bc],si
  43bba9:	lock cld 
  43bbab:	jmp    0x74a9f185
  43bbb0:	jo     0x43bbf0
  43bbb2:	inc    ecx
  43bbb3:	outs   dx,BYTE PTR ds:[esi]
  43bbb4:	ins    BYTE PTR es:[edi],dx
  43bbb5:	and    al,0x6b
  43bbb7:	pop    ebp
  43bbb8:	je     0x43bc0e
  43bbba:	push   ecx
  43bbbb:	arpl   WORD PTR [esi+0x24],si
  43bbbe:	imul   ebp,DWORD PTR [ecx+0x7b],0xfffffff0
  43bbc2:	cld    
  43bbc3:	adc    ch,0x9
  43bbc6:	es jbe 0x43bc3f
  43bbc9:	push   0x5c166113
  43bbce:	or     al,0x6a
  43bbd0:	inc    ecx
  43bbd1:	cmp    esp,edi
  43bbd3:	add    eax,esp
  43bbd5:	or     eax,0x5e32651a
  43bbda:	and    DWORD PTR [ebx+0x43],ebp
  43bbdd:	push   ebp
  43bbde:	cld    
  43bbdf:	and    DWORD PTR [bx+di-0x9],esi
  43bbe3:	addr16 ss push ebx
  43bbe6:	lds    ebp,FWORD PTR [ebp+0x36]
  43bbe9:	shl    DWORD PTR [bp-0x2b],cl
  43bbed:	or     DWORD PTR [eax],edi
  43bbef:	add    edx,DWORD PTR [ecx]
  43bbf1:	ins    DWORD PTR es:[edi],dx
  43bbf2:	mov    ebx,0xa66d0960
  43bbf7:	jne    0x43bbeb
  43bbf9:	pop    ebp
  43bbfa:	shl    BYTE PTR [esi+0x0],1
  43bbfd:	add    BYTE PTR [edx],dl
  43bbff:	jbe    0x43bb97
  43bc01:	pusha  
  43bc02:	or     BYTE PTR [esi-0x40],bl
  43bc05:	push   0xffffffef
  43bc07:	or     DWORD PTR [ebp-0x758a67fd],esi
  43bc0d:	jbe    0x43bbc5
  43bc0f:	push   ecx
  43bc10:	mov    BYTE PTR [ecx-0x4f],ch
  43bc13:	jne    0x43bb99
  43bc15:	add    ecx,DWORD PTR [esi-0x3e896cf4]
  43bc1b:	push   edi
  43bc1c:	mov    esp,DWORD PTR [eax-0x41]
  43bc1f:	dec    eax
  43bc20:	out    0x3,eax
  43bc22:	xchg   ebx,eax
  43bc23:	or     al,0x7b
  43bc25:	jbe    0x43bbd0
  43bc27:	push   edi
  43bc28:	inc    esi
  43bc29:	je     0x43bbcd
  43bc2b:	jae    0x43bc55
  43bc2d:	add    al,0xb3
  43bc2f:	or     BYTE PTR [ecx],ch
  43bc31:	jbe    0x43bca9
  43bc33:	ins    BYTE PTR es:[edi],dx
  43bc34:	sbb    ebp,DWORD PTR [ebx-0x5d]
  43bc37:	push   edi
  43bc38:	dec    eax
  43bc39:	jbe    0x43bbbd
  43bc3b:	or     DWORD PTR [edi+edi*8],eax
  43bc3e:	test   DWORD PTR [edi+0x0],edx
  43bc41:	inc    eax
  43bc42:	gs inc dx
  43bc45:	inc    eax
  43bc46:	ins    DWORD PTR es:[edi],dx
  43bc47:	data16 add BYTE PTR [esi-0x2f],dh
  43bc4b:	and    al,0x6e
  43bc4d:	add    al,0x36
  43bc4f:	push   esi
  43bc50:	arpl   WORD PTR [edi],bp
  43bc52:	outs   dx,BYTE PTR ds:[esi]
  43bc54:	arpl   WORD PTR [esi],si
  43bc56:	fnstcw WORD PTR [edx]
  43bc58:	jmp    FWORD PTR [esi]
  43bc5a:	sub    eax,0x17116d5d
  43bc5f:	imul   ebp,DWORD PTR [esp+ecx*1+0x0],0x625d1300
  43bc67:	pop    es
  43bc68:	add    dh,BYTE PTR [eax+0x6d]
  43bc6b:	jmp    0xa6429c46
  43bc70:	xor    edx,DWORD PTR [esi+0x4c]
  43bc73:	enter  0x5601,0x43
  43bc77:	fisttp DWORD PTR [eax]
  43bc79:	jae    0x43bce9
  43bc7b:	jmp    0xa6420956
  43bc80:	adc    edx,DWORD PTR [esi+0x50]
  43bc83:	mov    ebx,0xc53f3efd
  43bc88:	add    dh,BYTE PTR [eax+0x63]
  43bc8b:	call   0x4dd9:0xdd0009e1
  43bc92:	imul   ecx,DWORD PTR [eax-0x7498b256],0x806e40c8
  43bc9c:	xchg   edi,eax
  43bc9d:	or     DWORD PTR [eax],eax
  43bc9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bca0:	xor    esi,DWORD PTR [ebp+0x6d]
  43bca3:	jge    0x43bc45
  43bca5:	ds jo  0x43bd18
  43bca8:	xchg   edi,eax
  43bca9:	or     DWORD PTR [eax],eax
  43bcab:	sub    BYTE PTR [edx],bl
  43bcad:	jne    0x43bd1c
  43bcaf:	push   ebp
  43bcb0:	mov    edi,DWORD PTR [esi]
  43bcb2:	imul   ebx,DWORD PTR [ecx-0x6a],0x9
  43bcb6:	add    BYTE PTR [edi],bl
  43bcb8:	add    dh,BYTE PTR [ebp+0x6d]
  43bcbb:	add    BYTE PTR [eax-0x5d9a93a9],bh
  43bcc1:	cmp    al,BYTE PTR [eax]
  43bcc3:	add    BYTE PTR ds:0x694fe0,cl
  43bcc9:	add    BYTE PTR [eax-0x3297c4c0],bl
  43bccf:	push   edi
  43bcd0:	push   esp
  43bcd1:	outs   dx,DWORD PTR ds:[esi]
  43bcd2:	add    DWORD PTR [ecx+0x6c],esi
  43bcd5:	je     0x43bcac
  43bcd7:	inc    edi
  43bcd8:	jno    0x43bd4e
  43bcda:	fld    DWORD PTR ds:0x7101035f
  43bce0:	ins    BYTE PTR es:[edi],dx
  43bce1:	je     0x43bca8
  43bce3:	inc    edi
  43bce4:	jno    0x43bd5a
  43bce6:	fnstcw WORD PTR [ecx]
  43bce8:	addr16 push edi
  43bcea:	aad    0x69
  43bcec:	pop    ebp
  43bced:	inc    ebx
  43bcee:	test   BYTE PTR [ebx+0x6a],ch
  43bcf1:	add    BYTE PTR [ebp+eax*1+0x4c],al
  43bcf5:	outs   dx,DWORD PTR ds:[esi]
  43bcf6:	lahf   
  43bcf7:	imul   ebp,DWORD PTR [esi+eax*2-0x62],0x3f
  43bcfc:	pop    ebp
  43bcfd:	add    BYTE PTR [ebx+0x5],cl
  43bd00:	dec    ecx
  43bd01:	jne    0x43bc9c
  43bd03:	push   esi
  43bd04:	jno    0x43bd56
  43bd06:	cdq    
  43bd07:	push   esi
  43bd08:	pop    esi
  43bd09:	outs   dx,DWORD PTR ds:[esi]
  43bd0a:	push   ds
  43bd0b:	addr16 pop ecx
  43bd0d:	outs   dx,BYTE PTR ds:[esi]
  43bd0e:	dec    edi
  43bd0f:	aas    
  43bd10:	cmp    ebp,DWORD PTR [edi+0x69]
  43bd13:	jb     0x43bd89
  43bd15:	outs   dx,BYTE PTR gs:[esi]
  43bd17:	or     al,0x8b
  43bd19:	add    bh,BYTE PTR [ebx+0x3f]
  43bd1c:	je     0x43bd72
  43bd1e:	gs arpl WORD PTR gs:[ebx+0x63],ax
  43bd23:	outs   dx,DWORD PTR ds:[esi]
  43bd24:	data16 je 0x43bd63
  43bd27:	or     al,0xad
  43bd29:	add    BYTE PTR [edi+0x56],ch
  43bd2c:	pop    ebp
  43bd2d:	popa   
  43bd2e:	add    BYTE PTR [eax],al
  43bd30:	js     0x43bd9c
  43bd32:	push   esp
  43bd33:	push   0x64596aae
  43bd38:	aad    0xf2
  43bd3a:	cld    
  43bd3b:	int    0xd7
  43bd3d:	sub    bl,BYTE PTR [edi+0x5f]
  43bd40:	test   DWORD PTR [edi+ebx*2],eax
  43bd43:	aas    
  43bd44:	or     DWORD PTR [esi+0x61],0xfdabd55d
  43bd4b:	inc    edi
  43bd4c:	js     0x43bd9f
  43bd4e:	je     0x43bd8f
  43bd50:	imul   esi,esi,0xafd55d60
  43bd56:	std    
  43bd57:	inc    edi
  43bd58:	xor    BYTE PTR [edx],dl
  43bd5a:	je     0x43bd9e
  43bd5c:	inc    edi
  43bd5d:	push   es
  43bd5e:	pop    edi
  43bd5f:	add    ch,dl
  43bd61:	sbb    bh,dh
  43bd63:	inc    eax
  43bd64:	cmp    ch,dl
  43bd66:	dec    esp
  43bd67:	outs   dx,BYTE PTR ds:[esi]
  43bd68:	cmp    dl,BYTE PTR [edi+ebx*2]
  43bd6b:	ins    DWORD PTR es:[edi],dx
  43bd6c:	sub    DWORD PTR es:[edi+0x5f],ebx
  43bd70:	and    eax,0xd7c9fcf1
  43bd75:	cwde   
  43bd76:	pop    edi
  43bd77:	pop    edi
  43bd78:	add    eax,0x96d5fad
  43bd7d:	ret    
  43bd7e:	popa   
  43bd7f:	ja     0x43bd56
  43bd81:	adc    eax,0xd1f847fe
  43bd86:	ins    BYTE PTR es:[edi],dx
  43bd87:	cmp    eax,0x7463cde7
  43bd8c:	clc    
  43bd8d:	lock cld 
  43bd8f:	call   0x6eaf5c65
  43bd94:	add    BYTE PTR [eax],al
  43bd96:	leave  
  43bd97:	jne    0x43bdfc
  43bd99:	ins    BYTE PTR es:[edi],dx
  43bd9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bd9b:	and    BYTE PTR [ecx+0x74],0xb8
  43bd9f:	xchg   ebx,eax
  43bda0:	push   0xffadd500
  43bda5:	imul   esp,DWORD PTR [esi-0x47a290ac],0x60
  43bdac:	ins    BYTE PTR es:[edi],dx
  43bdad:	push   ecx
  43bdae:	aad    0xaf
  43bdb0:	jmp    FWORD PTR [ebx-0x5a]
  43bdb3:	or     DWORD PTR [ebx+0x72],ebx
  43bdb6:	mov    al,0x68
  43bdb8:	push   ebx
  43bdb9:	dec    edi
  43bdba:	aad    0x9
  43bdbc:	hlt    
  43bdbd:	add    al,0x96
  43bdbf:	popa   
  43bdc0:	push   edi
  43bdc1:	outs   dx,DWORD PTR gs:[esi]
  43bdc3:	gs sub al,0x66
  43bdc6:	addr16 jo 0x43bdfe
  43bdc9:	addr16 jg 0x43be38
  43bdcc:	dec    esp
  43bdcd:	imul   di,WORD PTR [edx],0x7233
  43bdd2:	jb     0x43be43
  43bdd4:	or     dh,BYTE PTR [ebx+0x24]
  43bdd7:	or     al,dh
  43bdd9:	add    al,0x17
  43bddb:	jno    0x43bde0
  43bddd:	popa   
  43bdde:	sub    DWORD PTR [ecx-0x4],esi
  43bde1:	pusha  
  43bde2:	and    DWORD PTR [edi+0x2b],ebp
  43bde5:	addr16 inc eax
  43bde7:	inc    esi
  43bde8:	or     BYTE PTR [eax+0x36],dh
  43bdeb:	add    BYTE PTR ss:[ecx+0x36],ch
  43bdef:	or     ah,BYTE PTR [esi+0x1]
  43bdf2:	adc    al,0x65
  43bdf4:	fisttp DWORD PTR [edi-0xa]
  43bdf7:	ins    BYTE PTR es:[edi],dx
  43bdf8:	xlat   BYTE PTR ds:[ebx]
  43bdf9:	cmp    eax,0x6df20000
  43bdfe:	int3   
  43bdff:	inc    ebp
  43be00:	and    ch,BYTE PTR [ebp-0x3c]
  43be03:	dec    esi
  43be04:	aad    0x9
  43be06:	daa    
  43be07:	add    ah,BYTE PTR [ebx]
  43be09:	gs enter 0x175f,0x71
  43be0e:	ret    
  43be0f:	pusha  
  43be10:	aad    0x9
  43be12:	add    DWORD PTR fs:[eiz*2+0x6cb64f9b],edx
  43be1a:	xchg   edi,eax
  43be1b:	push   ebx
  43be1c:	stos   BYTE PTR es:[edi],al
  43be1d:	push   ebp
  43be1e:	jg     0x43be6e
  43be20:	aad    0x9
  43be22:	ret    
  43be23:	add    al,0x97
  43be25:	jo     0x43bdba
  43be27:	pusha  
  43be28:	mov    DWORD PTR [eax-0x74],esi
  43be2b:	pusha  
  43be2c:	sub    DWORD PTR [esi+0x0],0x5f3cbba5
  43be33:	jge    0x43be0d
  43be35:	data16 ins BYTE PTR es:[edi],dx
  43be37:	dec    esp
  43be38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43be39:	imul   ax,WORD PTR [ecx+edx*8-0x13],0xfffe
  43be3f:	sub    eax,0x404255a2
  43be44:	ins    DWORD PTR es:[edi],dx
  43be45:	push   0x47
  43be47:	push   edi
  43be48:	xchg   ebx,eax
  43be49:	jo     0x43beb9
  43be4b:	dec    esp
  43be4c:	jbe    0x43bea3
  43be4e:	addr16 inc esi
  43be50:	jnp    0x43be71
  43be52:	ja     0x43be75
  43be54:	jbe    0x43bec9
  43be56:	fs adc eax,0x9000a32
  43be5c:	aam    0x50
  43be5e:	imul   ebx,DWORD PTR [edi],0x48220000
  43be64:	addr16 std 
  43be66:	sbb    ecx,DWORD PTR [ecx+0x78]
  43be69:	push   ds
  43be6a:	(bad)  
  43be6c:	(bad)  
  43be6d:	and    eax,0x42560a
  43be72:	sub    eax,0x2af53f69
  43be77:	ins    BYTE PTR es:[edi],dx
  43be78:	addr16 retf 
  43be7a:	add    edx,DWORD PTR [esi+0x63]
  43be7d:	ficomp DWORD PTR [ecx]
  43be7f:	or     al,BYTE PTR [eax]
  43be81:	mov    edx,0xd5634e82
  43be86:	mov    ebx,0x10b6646f
  43be8b:	dec    eax
  43be8c:	addr16 int 0xb
  43be8f:	or     al,BYTE PTR [eax]
  43be91:	lock xlat BYTE PTR ds:[ebx]
  43be93:	inc    edi
  43be94:	addr16 mov edi,0x9b6747fa
  43be9a:	lds    edx,FWORD PTR [ebp+0x42]
  43be9d:	nop
  43be9e:	mov    dl,0x68
  43bea0:	push   ecx
  43bea1:	jmp    0xa742ee7c
  43bea6:	scas   eax,DWORD PTR es:[edi]
  43bea7:	outs   dx,DWORD PTR ds:[esi]
  43bea8:	add    BYTE PTR fs:[edi+0x65],bh
  43beac:	addr16 jae 0x43bf00
  43beaf:	or     DWORD PTR ds:0x66707201,edi
  43beb5:	cmp    bh,BYTE PTR fs:[eax+edi*2]
  43beb9:	je     0x43be7d
  43bebb:	jo     0x43bf29
  43bebd:	gs ret 
  43bebf:	add    eax,0x3cbe03f2
  43bec4:	ins    BYTE PTR es:[edi],dx
  43bec5:	add    BYTE PTR gs:[eax],al
  43bec8:	lea    ebx,[edx+0x5d]
  43becb:	dec    ebp
  43becc:	mov    cl,0x59
  43bece:	pop    ebp
  43becf:	js     0x43becd
  43bed1:	or     bh,dh
  43bed3:	add    DWORD PTR [ebx-0x72b78bc4],esi
  43bed9:	arpl   WORD PTR [esp+ebp*2-0x1f],sp
  43bedd:	push   eax
  43bede:	data16 data16 fist DWORD PTR [edi+0x65]
  43bee3:	popa   
  43bee4:	loopne 0x43bf56
  43bee6:	outs   dx,BYTE PTR ds:[si]
  43bee8:	lods   al,BYTE PTR ds:[esi]
  43bee9:	or     BYTE PTR [eax+0x5],cl
  43beec:	enter  0x745a,0x72
  43bef0:	fist   WORD PTR [ebp+0x71]
  43bef3:	push   edi
  43bef4:	lods   al,BYTE PTR ds:[esi]
  43bef5:	or     BYTE PTR ds:0x743cf302,bl
  43befb:	dec    esi
  43befc:	popf   
  43befd:	ins    BYTE PTR es:[edi],dx
  43befe:	popa   
  43beff:	jbe    0x43be92
  43bf01:	cmp    DWORD PTR [ecx+0x73],esi
  43bf04:	mov    al,ds:0x3a49653b
  43bf09:	add    BYTE PTR ds:[bx+si+0xa],ah
  43bf0e:	aas    
  43bf0f:	and    BYTE PTR gs:[esi+0x5d],cl
  43bf13:	jb     0x43bf34
  43bf15:	outs   dx,DWORD PTR ds:[esi]
  43bf16:	outs   dx,BYTE PTR ds:[si]
  43bf18:	xor    DWORD PTR [eax+0x4f],esp
  43bf1b:	add    BYTE PTR [ebx-0x24],ah
  43bf1e:	dec    ebx
  43bf1f:	gs pusha 
  43bf21:	push   ds
  43bf22:	popa   
  43bf23:	ins    BYTE PTR es:[edi],dx
  43bf24:	aad    0x8d
  43bf26:	dec    esp
  43bf27:	imul   ebp,DWORD PTR [esp+ebx*2+0x6369],0x74ada7
  43bf32:	aad    0x71
  43bf34:	std    
  43bf35:	cmp    al,0xa7
  43bf37:	lea    ebx,[ebp+0x74]
  43bf3a:	mov    al,0xa6
  43bf3c:	outs   dx,BYTE PTR gs:[esi]
  43bf3e:	js     0x43bf8f
  43bf40:	js     0x43bfab
  43bf42:	xchg   DWORD PTR [ecx+0x55],ebp
  43bf45:	add    ch,dl
  43bf47:	mov    BYTE PTR [edi],0x52
  43bf4a:	ins    BYTE PTR es:[edi],dx
  43bf4b:	inc    eax
  43bf4c:	js     0x43bfc1
  43bf4e:	je     0x43bf86
  43bf50:	inc    esi
  43bf51:	outs   dx,BYTE PTR ds:[esi]
  43bf52:	jo     0x43bf99
  43bf54:	add    al,0x66
  43bf56:	fcos   
  43bf58:	data16 je 0x43beee
  43bf5b:	dec    ecx
  43bf5c:	pusha  
  43bf5d:	arpl   WORD PTR [ecx],bp
  43bf5f:	cli    
  43bf60:	pop    esi
  43bf61:	arpl   bp,dx
  43bf63:	add    DWORD PTR [edx],0x45fd3841
  43bf69:	sub    DWORD PTR ds:0x6751,eax
  43bf6e:	das    
  43bf6f:	push   cs
  43bf70:	inc    edi
  43bf71:	js     0x43bf48
  43bf73:	jns    0x43bf7c
  43bf75:	push   edx
  43bf76:	sub    al,0xdf
  43bf78:	jo     0x43bfed
  43bf7a:	xor    al,0xdd
  43bf7c:	inc    ebx
  43bf7d:	ins    BYTE PTR es:[edi],dx
  43bf7e:	add    DWORD PTR [ecx+eiz*2+0xefd500],esi
  43bf85:	dec    esi
  43bf86:	clc    
  43bf87:	lds    ebx,FWORD PTR [ebp+0x72]
  43bf8a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bf8c:	pop    ebx
  43bf8d:	outs   dx,BYTE PTR ds:[esi]
  43bf8e:	clc    
  43bf8f:	iret   
  43bf90:	jo     0x43bffb
  43bf92:	add    BYTE PTR [eax],al
  43bf94:	out    0xc9,eax
  43bf96:	push   ebp
  43bf97:	add    ch,dl
  43bf99:	push   ds
  43bf9a:	add    eax,DWORD PTR [ecx-0x10]
  43bf9d:	xchg   esp,eax
  43bf9e:	inc    esi
  43bf9f:	ror    DWORD PTR [bx+di],0x8c
  43bfa3:	push   edi
  43bfa4:	mov    dl,0x6c
  43bfa6:	test   BYTE PTR [ebx],al
  43bfa8:	daa    
  43bfa9:	or     ch,BYTE PTR [ebx-0x6c9b5698]
  43bfaf:	push   0x68937097
  43bfb4:	test   BYTE PTR [ecx],cl
  43bfb6:	mov    BYTE PTR [edi],al
  43bfb8:	nop
  43bfb9:	fs jnp 0x43c005
  43bfbc:	mov    dl,0x6d
  43bfbe:	test   BYTE PTR [ecx+ecx*4+0x55],al
  43bfc2:	push   ebp
  43bfc3:	pop    ebp
  43bfc4:	stos   DWORD PTR es:[edi],eax
  43bfc5:	push   esp
  43bfc6:	push   ebx
  43bfc7:	imul   esi,DWORD PTR [eax+0x32],0x7dd03e7
  43bfce:	and    ch,BYTE PTR [ecx+0x69]
  43bfd1:	dec    esp
  43bfd2:	push   edx
  43bfd3:	push   0x3c446d66
  43bfd8:	sub    BYTE PTR [ebx+0x4b],0x60
  43bfdc:	jbe    0x43c010
  43bfde:	out    0x3,eax
  43bfe0:	adc    ecx,DWORD PTR [eax]
  43bfe2:	sub    ch,BYTE PTR [ecx+0x41]
  43bfe5:	cmp    dl,BYTE PTR ds:0x1b69475d
  43bfeb:	imul   esp,DWORD PTR ds:0x3a69fa58,0x21570c6e
  43bff5:	pop    eax
  43bff6:	adc    BYTE PTR [edx+0x0],ah
  43bff9:	add    BYTE PTR [ebx+esi*1],dh
  43bffc:	out    0x3,eax
  43bffe:	fld    DWORD PTR [edi]
  43c000:	and    ch,BYTE PTR [ecx+0x9]
  43c003:	cmp    dl,ch
  43c005:	pop    esp
  43c006:	pop    es
  43c007:	imul   edx,ebx,0xc2582568
  43c00d:	imul   esi,edx,0xff3cc46d
  43c013:	push   ebp
  43c014:	call   0xe968:0xa2088903
  43c01b:	inc    esp
  43c01c:	add    bh,al
  43c01e:	fsub   QWORD PTR [edx+0x6e]
  43c021:	mov    esi,0x97636eb4
  43c026:	ret    0x5f37
  43c029:	fwait
  43c02a:	mov    eax,ds:0xad855e3a
  43c02f:	cmp    BYTE PTR [eax],al
  43c031:	inc    ecx
  43c032:	(bad)  
  43c033:	sbb    al,0x6e
  43c035:	mov    WORD PTR [ecx-0x57669cab],?
  43c03b:	jo     0x43c09a
  43c03d:	mov    WORD PTR [ebx-0x2916ae94],fs
  43c043:	vcvtss2si esi,DWORD PTR [edx+0x55]
  43c048:	cmp    eax,0x636b8b54
  43c04d:	inc    edi
  43c04e:	jge    0x43c085
  43c050:	push   0x643a7a5b
  43c055:	jmp    0x2e404a30
  43c05a:	imul   esp,DWORD PTR [esi+0x6a],0x63000019
  43c061:	jo     0x43c0c0
  43c063:	inc    esp
  43c064:	dec    eax
  43c065:	add    BYTE PTR [bp+si+0x3ddd],ch
  43c06a:	push   0x64393a1b
  43c06f:	fiadd  DWORD PTR [eax]
  43c071:	dec    esp
  43c072:	sbb    ebp,DWORD PTR [bx+si]
  43c075:	pop    esi
  43c076:	add    dh,al
  43c078:	rol    DWORD PTR [ebp+0x69],1
  43c07b:	or     BYTE PTR ds:0x230b6746,ch
  43c081:	cmp    DWORD PTR [esi-0x10],ebp
  43c084:	sub    eax,0xdd2d000a
  43c089:	cmp    eax,0x38fbdb68
  43c08e:	fs sbb al,bl
  43c091:	inc    ebx
  43c092:	arpl   cx,dx
  43c094:	jmp    0x3b0e:0x52000009
  43c09b:	jb     0x43c036
  43c09d:	ins    BYTE PTR es:[edi],dx
  43c09e:	je     0x43c105
  43c0a0:	cmp    BYTE PTR [edx+0x67],ch
  43c0a3:	ins    BYTE PTR es:[edi],dx
  43c0a4:	adc    al,0x70
  43c0a6:	ins    BYTE PTR es:[edi],dx
  43c0a7:	jo     0x43c0d8
  43c0a9:	pop    ds
  43c0aa:	dec    ebx
  43c0ab:	outs   dx,BYTE PTR ds:[esi]
  43c0ac:	dec    ebp
  43c0ad:	pop    ebp
  43c0ae:	imul   ebp,DWORD PTR [eax+0x53],0x61
  43c0b2:	add    BYTE PTR [eax],al
  43c0b4:	mov    ebx,0xa8653f0c
  43c0b9:	dec    ebp
  43c0ba:	ins    DWORD PTR es:[di],dx
  43c0bc:	push   ecx
  43c0bd:	ins    BYTE PTR es:[edi],dx
  43c0be:	data16 fs jo 0x43c0f6
  43c0c2:	data16 add BYTE PTR gs:[eax],al
  43c0c6:	imul   ecx,DWORD PTR ds:0x6cc1034f,0x70
  43c0cd:	push   esi
  43c0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c0cf:	jo     0x43c140
  43c0d1:	dec    edi
  43c0d2:	mov    al,BYTE PTR [ebx+0x61]
  43c0d5:	ins    BYTE PTR es:[edi],dx
  43c0d6:	cdq    
  43c0d7:	or     eax,0x6bc904ce
  43c0dc:	gs popa 
  43c0de:	pushf  
  43c0df:	xor    esp,DWORD PTR [ecx+0x65]
  43c0e2:	fwait
  43c0e3:	dec    edx
  43c0e4:	pop    esi
  43c0e5:	inc    esi
  43c0e6:	adc    eax,0x40005d6a
  43c0eb:	or     eax,0x6cd9723b
  43c0f0:	je     0x43c157
  43c0f2:	jmp    0x706c:0xd1656c34
  43c0f9:	jo     0x43c0c0
  43c0fb:	imul   ebx,DWORD PTR [edi+0x57],0xffffffac
  43c0ff:	or     al,0xe8
  43c101:	add    al,ch
  43c103:	pusha  
  43c104:	jo     0x43c172
  43c106:	aad    0x6e
  43c108:	pop    ecx
  43c109:	je     0x43c0a4
  43c10b:	adc    al,0x59
  43c10d:	outs   dx,BYTE PTR ds:[esi]
  43c10e:	cwde   
  43c10f:	cmp    BYTE PTR [ebp+0x0],bl
  43c112:	aad    0xd3
  43c114:	add    BYTE PTR [esi-0x8],cl
  43c117:	mov    bl,0x71
  43c119:	imul   esi,eax,0x76
  43c11c:	push   esp
  43c11d:	outs   dx,BYTE PTR ds:[esi]
  43c11e:	clc    
  43c11f:	shl    DWORD PTR [eax+0x0],0xd5
  43c123:	mov    dh,0x2
  43c125:	inc    ecx
  43c126:	mov    eax,0x69399e
  43c12b:	add    BYTE PTR [ecx-0x649ca78b],dh
  43c131:	jns    0x43c18b
  43c133:	arpl   WORD PTR [ebx-0x759ca67f],cx
  43c139:	loop   0x43c137
  43c13b:	cdq    
  43c13c:	xlat   BYTE PTR ds:[ebx]
  43c13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c13e:	popa   
  43c13f:	je     0x43c0c9
  43c141:	push   ebx
  43c142:	bound  ebp,QWORD PTR [esi-0x6f]
  43c145:	test   DWORD PTR [esi+0x5f],esp
  43c148:	mov    BYTE PTR [esi+0x71],dl
  43c14b:	push   ebx
  43c14c:	pushf  
  43c14d:	push   ds
  43c14e:	arpl   WORD PTR [edx+0x7a],bp
  43c151:	cmp    eax,0xe2706163
  43c156:	cld    
  43c157:	xchg   esi,eax
  43c158:	fst    DWORD PTR [ebx]
  43c15a:	addr16 je 0x43c0de
  43c15d:	cmp    ch,BYTE PTR [esi+0x63]
  43c160:	je     0x43c1b0
  43c162:	push   esp
  43c163:	outs   dx,BYTE PTR ds:[esi]
  43c164:	ins    BYTE PTR es:[edi],dx
  43c165:	dec    edi
  43c166:	outs   dx,BYTE PTR ds:[esi]
  43c167:	addr16 dec ecx
  43c169:	sbb    al,BYTE PTR [ebp*2+0x746713d1]
  43c170:	adc    DWORD PTR [edx],eax
  43c172:	ins    DWORD PTR es:[edi],dx
  43c173:	je     0x43c185
  43c175:	rep ins DWORD PTR es:[edi],dx
  43c177:	imul   esp,DWORD PTR [edi],0xd108fce1
  43c17d:	repnz ins WORD PTR es:[edi],dx
  43c180:	cmp    ch,bl
  43c182:	inc    edi
  43c183:	jb     0x43c1b5
  43c185:	vmread DWORD PTR [eax],eax
  43c188:	aad    0x26
  43c18a:	inc    BYTE PTR [eax-0x7]
  43c18d:	or     edx,edx
  43c18f:	popa   
  43c190:	add    BYTE PTR [eax],al
  43c192:	and    ah,BYTE PTR [esi-0x55]
  43c195:	pop    esi
  43c196:	sbb    BYTE PTR [ebx-0x19],ah
  43c199:	add    edx,DWORD PTR [esi-0x3a05df4]
  43c19f:	imul   ecx,eax,0x5f
  43c1a2:	push   es
  43c1a3:	push   0x62f85ecb
  43c1a8:	out    0x3,eax
  43c1aa:	inc    esp
  43c1ab:	or     al,0xa0
  43c1ad:	jb     0x43c1ba
  43c1af:	imul   ecx,DWORD PTR [ebx-0x7c9749af],0xe75bc153
  43c1b9:	add    edi,DWORD PTR [esi]
  43c1bb:	push   cs
  43c1bc:	mov    cl,0x5c
  43c1be:	mov    ebx,0xb1647c5d
  43c1c3:	dec    edi
  43c1c4:	jne    0x43c22e
  43c1c6:	mov    dh,0x4c
  43c1c8:	outs   dx,DWORD PTR ds:[esi]
  43c1c9:	add    edi,ebx
  43c1cb:	or     eax,0x5d7b5c91
  43c1d0:	pop    esp
  43c1d1:	gs jno 0x43c21c
  43c1d4:	dec    ebx
  43c1d5:	pusha  
  43c1d6:	ins    BYTE PTR es:[edi],dx
  43c1d7:	push   0x2c
  43c1d9:	ins    BYTE PTR es:[edi],dx
  43c1da:	aad    0x9
  43c1dc:	stc    
  43c1dd:	or     BYTE PTR [ebx+ebx*2+0x39767850],al
  43c1e4:	xor    eax,0x366c785f
  43c1e9:	jae    0x43c209
  43c1eb:	ins    DWORD PTR es:[edi],dx
  43c1ec:	cmp    al,0x5f
  43c1ee:	cmp    edx,DWORD PTR [ecx-0x19]
  43c1f1:	add    edx,DWORD PTR [edi+0xb]
  43c1f4:	and    ch,BYTE PTR [ecx+0x0]
  43c1f7:	add    BYTE PTR [ecx+0x3e],al
  43c1fa:	push   DWORD PTR [ecx+0x36]
  43c1fd:	imul   eax,DWORD PTR [ebx],0xfb683c43
  43c203:	push   0x3e75e1d
  43c208:	dec    edx
  43c209:	or     eax,0x5dfc1a00
  43c20e:	push   esp
  43c20f:	add    DWORD PTR [edi],eax
  43c211:	imul   ebx,DWORD PTR [edi-0x33],0x17
  43c215:	popa   
  43c216:	push   0xffffffd5
  43c218:	in     eax,dx
  43c219:	push   ecx
  43c21a:	je     0x43c205
  43c21c:	(bad)  
  43c21d:	inc    ebp
  43c21e:	(bad)  
  43c21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c220:	std    
  43c221:	pop    ebp
  43c222:	push   eax
  43c223:	mov    ebx,0xba633503
  43c228:	out    0x4e,eax
  43c22a:	fs jmp 0xaa433606
  43c230:	les    ebp,FWORD PTR [edx+0x5f]
  43c233:	popf   
  43c234:	lods   eax,DWORD PTR ds:[esi]
  43c235:	inc    edx
  43c236:	jae    0x43c1cd
  43c238:	lods   eax,DWORD PTR ds:[esi]
  43c239:	push   ecx
  43c23a:	push   ecx
  43c23b:	jmp    0xa6428d16
  43c240:	mov    ebp,0xa47c3d5d
  43c245:	arpl   WORD PTR [bx+0x3da2],cx
  43c24a:	push   0x64367d7b
  43c24f:	mov    al,ds:0xac000972
  43c254:	int    0x3d
  43c256:	ins    BYTE PTR es:[edi],dx
  43c257:	pop    edx
  43c258:	xchg   esi,eax
  43c259:	gs ins BYTE PTR es:[edi],dx
  43c25b:	inc    esi
  43c25c:	add    BYTE PTR [eax],al
  43c25e:	je     0x43c269
  43c260:	add    BYTE PTR [edi+0x3a6c3ddd],ah
  43c266:	fwait
  43c267:	arpl   WORD PTR [si-0x2f],ax
  43c26b:	(bad)  
  43c26c:	(bad)  
  43c26d:	sub    eax,DWORD PTR [ecx+0x6d]
  43c270:	je     0x43c28b
  43c272:	inc    edi
  43c273:	arpl   WORD PTR [ebp+0xc],bx
  43c276:	inc    esp
  43c277:	add    BYTE PTR [bx+di-0x33],al
  43c27b:	inc    esi
  43c27c:	arpl   WORD PTR ds:0xfe6e641a,bx
  43c282:	and    al,0x41
  43c284:	imul   eax,DWORD PTR [eax],0x6cd0
  43c28a:	sub    ecx,DWORD PTR [ecx]
  43c28c:	aas    
  43c28d:	gs nop
  43c28f:	dec    edx
  43c290:	ins    DWORD PTR es:[di],dx
  43c292:	mov    WORD PTR [esp+esi*2+0x65],ds
  43c296:	sahf   
  43c297:	pop    ss
  43c298:	pop    ecx
  43c299:	ins    DWORD PTR es:[edi],dx
  43c29a:	xchg   ecx,eax
  43c29b:	add    BYTE PTR ds:[eax],al
  43c29e:	and    ecx,DWORD PTR [ecx]
  43c2a0:	aas    
  43c2a1:	or     BYTE PTR gs:[edi+0x61],0x6c
  43c2a6:	xchg   ecx,eax
  43c2a7:	dec    eax
  43c2a8:	je     0x43c31e
  43c2aa:	push   ds
  43c2ab:	xor    BYTE PTR [edx+0x75],bl
  43c2ae:	nop
  43c2af:	ins    BYTE PTR es:[edi],dx
  43c2b0:	imul   eax,DWORD PTR [ebp-0x7c],0x3e
  43c2b4:	add    BYTE PTR [eax],al
  43c2b6:	popa   
  43c2b7:	or     al,BYTE PTR [edi+0x70]
  43c2ba:	push   ecx
  43c2bb:	aaa    
  43c2bc:	cmp    eax,0x74376176
  43c2c1:	push   edi
  43c2c2:	add    BYTE PTR [eax],al
  43c2c4:	cmp    al,0x9
  43c2c6:	mov    ecx,0x746c7301
  43c2cb:	inc    ebx
  43c2cc:	mov    eax,ds:0x5a656a5a
  43c2d1:	pop    ebp
  43c2d2:	push   eax
  43c2d3:	jb     0x43c260
  43c2d5:	imul   ebx,DWORD PTR [ebp+0x73],0x64109f
  43c2dc:	sub    eax,0x8e65540d
  43c2e1:	xor    al,0x61
  43c2e3:	outs   dx,BYTE PTR ds:[esi]
  43c2e4:	popf   
  43c2e5:	push   ecx
  43c2e6:	pop    ebp
  43c2e7:	push   esp
  43c2e8:	test   BYTE PTR [edi+0x5d],dl
  43c2eb:	popa   
  43c2ec:	nop
  43c2ed:	or     eax,0x57ff00a1
  43c2f2:	pop    ebp
  43c2f3:	popa   
  43c2f4:	add    BYTE PTR [ebp+0x4a],ch
  43c2f7:	gs jmp 0xa93733
  43c2fd:	ss push 0x65
  43c300:	aad    0x1
  43c302:	push   0x5cd500
  43c307:	push   eax
  43c308:	daa    
  43c309:	cld    
  43c30a:	pop    esi
  43c30b:	arpl   WORD PTR [esi],sp
  43c30d:	shr    BYTE PTR [edi],1
  43c30f:	sbb    ecx,DWORD PTR cs:[edx]
  43c312:	outs   dx,BYTE PTR ds:[esi]
  43c313:	ins    DWORD PTR es:[edi],dx
  43c314:	add    esp,edi
  43c316:	add    ebx,DWORD PTR [eax+0x696e92d6]
  43c31c:	test   ch,0x6f
  43c31f:	ins    DWORD PTR es:[edi],dx
  43c320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c321:	lock cmp DWORD PTR [ebx-0x13],esp
  43c325:	mov    esi,0x53
  43c32a:	aad    0x3b
  43c32c:	inc    DWORD PTR [esi-0x15]
  43c32f:	sahf   
  43c330:	popa   
  43c331:	outs   dx,BYTE PTR ds:[esi]
  43c332:	ror    ebx,0x5f
  43c335:	gs mov al,0xce
  43c338:	xor    eax,0x6170b66a
  43c33d:	imul   esi,DWORD PTR [eax-0x2aff8f7c],0x7
  43c344:	inc    DWORD PTR [esi-0x45]
  43c347:	jle    0x43c3aa
  43c349:	outs   dx,BYTE PTR ds:[esi]
  43c34a:	mov    cl,0x7b
  43c34c:	pop    edi
  43c34d:	gs mov al,0x8e
  43c350:	inc    eax
  43c351:	arpl   WORD PTR [esi+0x50],si
  43c354:	bound  ebp,QWORD PTR [ebx+0x70]
  43c357:	push   esp
  43c358:	jno    0x43c35a
  43c35a:	aad    0x26
  43c35c:	jmp    FWORD PTR [ebx-0x7a]
  43c35f:	ds jb  0x43c3bf
  43c362:	xor    BYTE PTR [edx],0x5b
  43c365:	aas    
  43c366:	aad    0xab
  43c368:	call   DWORD PTR [ebx+0x71]
  43c36b:	(bad)  
  43c36d:	arpl   WORD PTR [ecx-0x4],sp
  43c370:	bound  ebp,QWORD PTR [eax+ecx*2+0x46]
  43c374:	add    al,0xc8
  43c376:	sar    esp,1
  43c378:	push   edi
  43c379:	ins    DWORD PTR es:[edi],dx
  43c37a:	or     cl,BYTE PTR es:[eax+esi*2]
  43c37e:	daa    
  43c37f:	imul   ecx,DWORD PTR [ebx],0xa70a3671
  43c385:	add    BYTE PTR [ecx],al
  43c387:	ins    DWORD PTR es:[edi],dx
  43c388:	adc    eax,0x8643a59
  43c38d:	jo     0x43c38f
  43c38f:	add    BYTE PTR [esi],dh
  43c391:	cmp    dh,ch
  43c393:	pop    edx
  43c394:	xor    BYTE PTR [ebp-0xa],ch
  43c397:	jbe    0x43c36e
  43c399:	or     esp,ebp
  43c39b:	push   es
  43c39c:	or     al,0x5a
  43c39e:	int3   
  43c39f:	pop    ecx
  43c3a0:	push   cs
  43c3a1:	pop    ebp
  43c3a2:	shl    DWORD PTR [eax-0x13],cl
  43c3a5:	cmp    ah,bh
  43c3a7:	add    esp,DWORD PTR [ecx+0xe]
  43c3aa:	mov    dl,0x4f
  43c3ac:	adc    BYTE PTR [ebx-0x34],cl
  43c3af:	outs   dx,DWORD PTR ds:[esi]
  43c3b0:	call   0xa66c:0xc75cb366
  43c3b7:	pop    edx
  43c3b8:	mov    edi,0xb657ba56
  43c3bd:	mov    WORD PTR ss:[esi-0x58],?
  43c3c1:	pusha  
  43c3c2:	mov    bl,BYTE PTR [ecx-0x66]
  43c3c5:	ins    DWORD PTR es:[edi],dx
  43c3c6:	out    0x3,eax
  43c3c8:	jb     0x43c3d2
  43c3ca:	mov    ds:0x923ba960,al
  43c3cf:	push   edi
  43c3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c3d1:	test   BYTE PTR fs:[ecx],bh
  43c3d4:	mov    dl,0x64
  43c3d6:	mov    WORD PTR [ecx+0x7c],es
  43c3d9:	push   edi
  43c3da:	xchg   ecx,eax
  43c3db:	pop    edx
  43c3dc:	jno    0x43c43a
  43c3de:	push   esp
  43c3df:	popa   
  43c3e0:	mov    fs,WORD PTR [edx+0x54]
  43c3e3:	pop    edx
  43c3e4:	imul   edi,DWORD PTR [ecx],0x5d7f5d42
  43c3ea:	xor    al,BYTE PTR [esi*8+0x61612a08]
  43c3f1:	dec    esp
  43c3f2:	aas    
  43c3f3:	pop    ebp
  43c3f4:	add    BYTE PTR [eax],al
  43c3f6:	dec    ecx
  43c3f7:	inc    edi
  43c3f8:	add    BYTE PTR [esi+0x35],al
  43c3fb:	addr16 push esp
  43c3fd:	inc    ecx
  43c3fe:	dec    ebx
  43c3ff:	addr16 pop edi
  43c401:	or     eax,0x3703e3d1
  43c406:	adc    BYTE PTR [esp+esi*2+0x1c],ah
  43c40a:	xor    BYTE PTR [esi+0x4f],ah
  43c40d:	adc    al,0x34
  43c40f:	fs ja  0x43c43e
  43c412:	sub    DWORD PTR [edx],ecx
  43c414:	add    BYTE PTR [edx+0x86343db],ch
  43c41a:	cmc    
  43c41b:	cmp    DWORD PTR [esi-0x2],ebp
  43c41e:	sti    
  43c41f:	ins    WORD PTR es:[edi],dx
  43c421:	fidivr DWORD PTR [ebp-0x1731949a]
  43c427:	pop    edx
  43c428:	add    BYTE PTR [ecx+0x6a],bl
  43c42b:	cmp    BYTE PTR [edi-0x25],ah
  43c42e:	repnz push esi
  43c430:	pop    edi
  43c431:	aad    0x6
  43c433:	imul   esi,DWORD PTR fs:[ebp-0x538bcb4b],0xa20009be
  43c43e:	xchg   ebp,eax
  43c43f:	inc    ebx
  43c440:	dec    edx
  43c441:	lods   al,BYTE PTR ds:[esi]
  43c442:	add    ah,BYTE PTR ds:0x6592cf2e
  43c448:	ins    BYTE PTR es:[edi],dx
  43c449:	jmp    0xb941dc24
  43c44e:	jg     0x43c4b4
  43c450:	je     0x43c406
  43c452:	mov    ch,0x64
  43c454:	ins    DWORD PTR es:[edi],dx
  43c455:	mov    BYTE PTR [edi+0x66],dh
  43c458:	push   ecx
  43c459:	jmp    0x219c45e
  43c45e:	(bad)  
  43c45f:	fwait
  43c460:	jns    0x43c4bb
  43c462:	push   edx
  43c463:	push   eax
  43c464:	sbb    DWORD PTR [ebp+0x73],0x48
  43c468:	lea    ecx,[ebx+eiz*2+0x50]
  43c46c:	test   BYTE PTR [ecx],cl
  43c46e:	add    BYTE PTR [edx],al
  43c470:	fst    DWORD PTR [eax+ebp*2]
  43c473:	add    BYTE PTR [ebp+0xb6f4c5b],cl
  43c479:	xor    DWORD PTR [edx+0x41],ebp
  43c47c:	mov    esp,0xfb01200d
  43c481:	xor    BYTE PTR [ebx+eax*2-0x27],dh
  43c485:	push   edi
  43c486:	imul   ebp,DWORD PTR [edi-0x32],0x35
  43c48a:	addr16 jae 0x43c449
  43c48d:	or     eax,0x30fb012b
  43c492:	je     0x43c4dd
  43c494:	iret   
  43c495:	xor    ah,BYTE PTR [esi+0x49]
  43c498:	loop   0x43c505
  43c49a:	add    BYTE PTR [bp+di],bh
  43c49d:	push   es
  43c49e:	inc    esp
  43c49f:	jb     0x43c46e
  43c4a1:	pop    edx
  43c4a2:	inc    ecx
  43c4a3:	arpl   WORD PTR [ebx+0x9000033],sp
  43c4a9:	push   es
  43c4aa:	cmp    eax,0x4f619578
  43c4af:	imul   esp,DWORD PTR [edx],0x1f776731
  43c4b5:	adc    BYTE PTR [eax+0x0],bh
  43c4b8:	xchg   edx,eax
  43c4b9:	or     al,0x3f
  43c4bb:	mov    BYTE PTR gs:[esi],dh
  43c4be:	jno    0x43c533
  43c4c0:	add    BYTE PTR [eax],al
  43c4c2:	mov    BYTE PTR [eax],dh
  43c4c4:	gs dec ebp
  43c4c6:	dec    ecx
  43c4c7:	popa   
  43c4c8:	push   0x69
  43c4ca:	pop    edi
  43c4cb:	push   esi
  43c4cc:	add    BYTE PTR [eax],al
  43c4ce:	add    al,0xd
  43c4d0:	cmp    ebp,DWORD PTR [eax+0x4d]
  43c4d3:	push   edi
  43c4d4:	push   esp
  43c4d5:	outs   dx,DWORD PTR ds:[esi]
  43c4d6:	arpl   WORD PTR [eax],si
  43c4d8:	gs push edi
  43c4da:	cld    
  43c4db:	or     al,0x43
  43c4dd:	add    ch,BYTE PTR [esi+0x30]
  43c4e0:	pop    edi
  43c4e1:	imul   edi,DWORD PTR [edi+0x60],0x31af725d
  43c4e8:	pop    ecx
  43c4e9:	jae    0x43c47a
  43c4eb:	dec    esp
  43c4ec:	add    BYTE PTR [eax],al
  43c4ee:	aad    0x4f
  43c4f0:	std    
  43c4f1:	inc    ebx
  43c4f2:	js     0x43c53c
  43c4f4:	outs   dx,BYTE PTR ds:[esi]
  43c4f6:	je     0x43c52d
  43c4f8:	pop    ecx
  43c4f9:	push   eax
  43c4fa:	inc    edi
  43c4fb:	inc    eax
  43c4fc:	arpl   WORD PTR [ecx-0x2b],dx
  43c4ff:	sti    
  43c500:	cld    
  43c501:	inc    eax
  43c502:	cmp    BYTE PTR [edi],dl
  43c504:	xor    DWORD PTR [ebx+0x46],esp
  43c507:	hlt    
  43c508:	pop    esp
  43c509:	popa   
  43c50a:	cmp    BYTE PTR [ebx],dl
  43c50c:	push   edi
  43c50d:	ins    DWORD PTR es:[edi],dx
  43c50e:	aad    0x56
  43c510:	std    
  43c511:	inc    ebx
  43c512:	cmp    BYTE PTR [ecx],cl
  43c514:	dec    edi
  43c515:	addr16 sub edi,edi
  43c518:	push   esi
  43c519:	jno    0x43c540
  43c51b:	aad    0x57
  43c51d:	pop    ebp
  43c51e:	and    ah,bl
  43c520:	cld    
  43c521:	sbb    ebp,edx
  43c523:	and    ebx,DWORD PTR [ebp+0x6c]
  43c526:	add    BYTE PTR [eax],al
  43c528:	jmp    0xf9ae1abc
  43c52d:	mov    edi,0xc7e7506f
  43c532:	arpl   WORD PTR [ecx-0x2b],dx
  43c535:	(bad)  
  43c537:	cmp    al,0xf4
  43c539:	mov    dh,0x50
  43c53b:	push   ecx
  43c53c:	mov    esp,0xc26958c0
  43c541:	jb     0x43c5b5
  43c543:	imul   esi,DWORD PTR [esi-0x28b6035f],0xbc615994
  43c54d:	jae    0x43c5b7
  43c54f:	arpl   WORD PTR [edi-0x59a0af5d],sp
  43c555:	jae    0x43c5a6
  43c557:	add    ch,dl
  43c559:	jle    0x43c55d
  43c55b:	dec    esi
  43c55c:	js     0x43c5dc
  43c55e:	pop    ecx
  43c55f:	pop    edi
  43c560:	xchg   BYTE PTR [ebp+0x43],bh
  43c563:	pop    edi
  43c564:	test   DWORD PTR [esi+0x6a],edx
  43c567:	outs   dx,BYTE PTR ds:[esi]
  43c568:	jo     0x43c573
  43c56a:	out    0x3,eax
  43c56c:	dec    ebp
  43c56d:	or     DWORD PTR [ebx],esp
  43c56f:	popa   
  43c570:	ja     0x43c5b0
  43c572:	sub    edi,DWORD PTR ds:0x584061a0
  43c578:	jno    0x43c5b3
  43c57a:	xor    eax,0xe7493057
  43c57f:	add    esp,DWORD PTR [ecx+0xa]
  43c582:	sub    esp,DWORD PTR [ecx+0x37]
  43c585:	inc    esi
  43c586:	cmp    ebx,DWORD PTR [edi+0x25]
  43c589:	pop    esp
  43c58a:	adc    ah,BYTE PTR [ebx+0x0]
  43c58d:	add    dl,dh
  43c58f:	or     DWORD PTR [edi+0x571802],ecx
  43c595:	jo     0x43c597
  43c597:	bound  esp,QWORD PTR [ebx]
  43c599:	popa   
  43c59a:	sub    BYTE PTR [ebx-0x5],ah
  43c59d:	push   esi
  43c59e:	add    eax,0x1104600a
  43c5a3:	or     DWORD PTR gs:[ecx],edi
  43c5a6:	sbb    DWORD PTR [ecx+0x26],eax
  43c5a9:	pop    esp
  43c5aa:	repnz pop ebp
  43c5ac:	retf   
  43c5ad:	push   ebx
  43c5ae:	add    ebx,DWORD PTR [edi-0x3a]
  43c5b1:	dec    esi
  43c5b2:	aad    0x9
  43c5b4:	outs   dx,BYTE PTR ds:[esi]
  43c5b5:	add    al,0x19
  43c5b7:	ror    DWORD PTR gs:[esi-0xe],0x5f
  43c5bc:	retf   
  43c5bd:	push   esi
  43c5be:	les    edi,FWORD PTR [ecx]
  43c5c0:	mov    ch,0x56
  43c5c2:	test   al,0x48
  43c5c4:	out    0x3,eax
  43c5c6:	mov    dh,0xb
  43c5c8:	xchg   ebp,eax
  43c5c9:	pusha  
  43c5ca:	test   eax,0xb6728864
  43c5cf:	inc    ebp
  43c5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c5d1:	add    edi,ebx
  43c5d3:	or     esi,DWORD PTR [edi-0x639d49a0]
  43c5d9:	pusha  
  43c5da:	test   al,0x5a
  43c5dc:	mov    BYTE PTR [esi+0x76],bl
  43c5df:	dec    eax
  43c5e0:	out    0x3,eax
  43c5e2:	jmp    0x43c5ec
  43c5e4:	add    BYTE PTR [esi-0x55bbaa8b],ch
  43c5ea:	xchg   ebp,eax
  43c5eb:	push   ecx
  43c5ec:	add    BYTE PTR [edx],bl
  43c5ee:	xlat   BYTE PTR ds:[ebx]
  43c5ef:	cmp    DWORD PTR [ebx+0x44],esp
  43c5f2:	add    BYTE PTR [eax],al
  43c5f4:	mov    es,WORD PTR [edx+0x63]
  43c5f7:	pop    edx
  43c5f8:	cs popaw 
  43c5fb:	inc    esp
  43c5fc:	mov    cl,BYTE PTR [ecx]
  43c5fe:	add    bh,bl
  43c600:	(bad)  [eax+0x63]
  43c603:	xor    eax,0x39675e16
  43c608:	aaa    
  43c609:	popa   
  43c60a:	pop    edi
  43c60b:	cmp    esi,DWORD PTR ds:0x381d5f46
  43c611:	or     al,BYTE PTR [eax]
  43c613:	jae    0x43c5e9
  43c615:	cmp    al,0x63
  43c617:	sbb    eax,0x1a6e5b16
  43c61c:	add    ah,BYTE PTR [eax+0x50]
  43c61f:	push   ss
  43c620:	push   es
  43c621:	or     al,BYTE PTR [eax]
  43c623:	sub    al,0xd7
  43c625:	aas    
  43c626:	arpl   WORD PTR [esi],cx
  43c628:	and    BYTE PTR [ebp+0x74],bl
  43c62b:	add    al,0x7
  43c62d:	or     eax,0x5ce7c86c
  43c632:	inc    ebx
  43c633:	loope  0x43c650
  43c635:	or     al,BYTE PTR [eax]
  43c637:	push   ebp
  43c638:	aam    0x35
  43c63a:	outs   dx,BYTE PTR ds:[esi]
  43c63b:	enter  0x5d00,0x6c
  43c63f:	enter  0x6ac2,0x4b
  43c643:	(bad)  
  43c644:	(bad)  
  43c645:	pop    esp
  43c646:	pop    edi
  43c647:	into   
  43c648:	mov    ch,0x9
  43c64a:	add    cl,ah
  43c64c:	ror    DWORD PTR [eax+0x63],1
  43c64f:	popf   
  43c650:	xchg   edi,eax
  43c651:	cs jo  0x43c5e9
  43c654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c655:	pop    edi
  43c656:	arpl   cx,bp
  43c658:	add    BYTE PTR [eax],al
  43c65a:	(bad)  
  43c65b:	out    dx,al
  43c65c:	(bad)  
  43c65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c65e:	mov    ch,0x55
  43c660:	inc    esp
  43c661:	add    BYTE PTR [edi],bh
  43c663:	or     bh,BYTE PTR [edi+0x1]
  43c666:	xor    ebp,DWORD PTR [ecx+0x74]
  43c669:	push   ebp
  43c66a:	jl     0x43c69a
  43c66c:	pop    ecx
  43c66d:	je     0x43c6c0
  43c66f:	cmp    BYTE PTR [ebp+0x63],bl
  43c672:	nop
  43c673:	add    eax,0x2ebe0006
  43c678:	pop    edi
  43c679:	imul   ebx,DWORD PTR [edx-0x6596a6cb],0xe6000059
  43c683:	pop    es
  43c684:	inc    edi
  43c685:	jo     0x43c698
  43c687:	xor    al,0x41
  43c689:	outs   dx,BYTE PTR ds:[esi]
  43c68a:	cld    
  43c68b:	pop    esp
  43c68c:	je     0x43c6d2
  43c68e:	adc    DWORD PTR [ebx+0x63],ebx
  43c691:	je     0x43c65e
  43c693:	push   ebp
  43c694:	add    BYTE PTR [eax],al
  43c696:	and    al,BYTE PTR [esi]
  43c698:	inc    esp
  43c699:	ror    BYTE PTR gs:[ebx],cl
  43c69c:	push   0x61
  43c69e:	cdq    
  43c69f:	sub    al,0x50
  43c6a1:	jb     0x43c68e
  43c6a3:	push   0x39
  43c6a5:	add    BYTE PTR [ecx],ah
  43c6a7:	push   es
  43c6a8:	inc    esp
  43c6a9:	ror    BYTE PTR gs:[ecx+0x6c],cl
  43c6ad:	fcom   QWORD PTR [bx+0x67]
  43c6b1:	arpl   WORD PTR [ebx],si
  43c6b3:	or     DWORD PTR [eax+0x742c2f02],eax
  43c6b9:	inc    ebx
  43c6ba:	lea    ebx,[ecx+0x74]
  43c6bd:	jne    0x43c6bf
  43c6bf:	add    BYTE PTR [esi+0x2c],bh
  43c6c2:	add    BYTE PTR [eax],al
  43c6c4:	scas   al,BYTE PTR es:[edi]
  43c6c5:	or     BYTE PTR [edi],bh
  43c6c7:	cmp    BYTE PTR gs:[esi],0x61
  43c6cb:	outs   dx,BYTE PTR ds:[esi]
  43c6cc:	adc    BYTE PTR [esi],dh
  43c6ce:	outs   dx,DWORD PTR ds:[esi]
  43c6cf:	inc    esp
  43c6d0:	outs   dx,DWORD PTR ds:[esi]
  43c6d1:	or     DWORD PTR [edx+eax*1+0x6e],ecx
  43c6d5:	sub    al,0x5f
  43c6d7:	imul   ecx,DWORD PTR [edi+0x5d],0x9fd5725d
  43c6de:	push   eax
  43c6df:	pop    edi
  43c6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c6e1:	outs   dx,DWORD PTR ds:[esi]
  43c6e2:	cmp    DWORD PTR [eax-0x6c],edi
  43c6e5:	loop   0x43c6e3
  43c6e7:	pop    edx
  43c6e8:	aam    0xa3
  43c6ea:	pop    ecx
  43c6eb:	je     0x43c67d
  43c6ed:	jge    0x43c75e
  43c6ef:	ins    DWORD PTR es:[edi],dx
  43c6f0:	je     0x43c675
  43c6f2:	pop    ecx
  43c6f3:	push   ecx
  43c6f4:	aad    0x5a
  43c6f6:	inc    BYTE PTR [eax+0x70]
  43c6f9:	ss dec ecx
  43c6fb:	jo     0x43c776
  43c6fd:	inc    ecx
  43c6fe:	jo     0x43c763
  43c700:	xchg   DWORD PTR [ebx+0x52],eax
  43c703:	add    ch,dl
  43c705:	sub    ebp,edi
  43c707:	inc    eax
  43c708:	xor    BYTE PTR [edi],dl
  43c70a:	xor    DWORD PTR [ebx+0x46],esp
  43c70d:	adc    BYTE PTR [ebp+0x61],bl
  43c710:	xor    BYTE PTR [edx],ah
  43c712:	add    al,0xdc
  43c714:	aad    0x1d
  43c716:	push   edx
  43c717:	fs add eax,0x296a5502
  43c71d:	jecxz  0x43c71b
  43c71f:	sub    ebp,edx
  43c721:	pop    ds
  43c722:	pop    esp
  43c723:	pop    edi
  43c724:	add    BYTE PTR [eax],al
  43c726:	pop    es
  43c727:	pop    ss
  43c728:	push   ebx
  43c729:	jno    0x43c71b
  43c72b:	ror    BYTE PTR [ebx+0x0],1
  43c72e:	aad    0x4f
  43c730:	call   DWORD PTR [ebx-0x16]
  43c733:	cmc    
  43c734:	push   ecx
  43c735:	div    BYTE PTR [bp+di+0x6358]
  43c73a:	aad    0xa0
  43c73c:	std    
  43c73d:	inc    eax
  43c73e:	clc    
  43c73f:	scas   al,BYTE PTR es:[edi]
  43c740:	aaa    
  43c741:	arpl   sp,bx
  43c743:	rcl    BYTE PTR [ebx+0x5f],0xc7
  43c747:	mov    esi,0x96b4744f
  43c74c:	pop    ecx
  43c74d:	add    ch,dl
  43c74f:	inc    BYTE PTR fs:[eax-0x50]
  43c753:	xchg   esi,eax
  43c754:	dec    ebx
  43c755:	addr16 ret 
  43c757:	or     DWORD PTR [ebx-0x61f65bac],ecx
  43c75d:	add    DWORD PTR [eax-0x71a07e9a],edx
  43c763:	xchg   si,ax
  43c765:	jo     0x43c719
  43c767:	mov    WORD PTR fs:[edi+0x72],cs
  43c76b:	pop    esi
  43c76c:	test   BYTE PTR [esi+eax*4+0x55],dl
  43c770:	call   0x695e:0x96071103
  43c777:	xor    al,0x50
  43c779:	jb     0x43c7ec
  43c77b:	pop    esp
  43c77c:	push   edx
  43c77d:	push   eax
  43c77e:	ins    BYTE PTR es:[edi],dx
  43c77f:	pop    ebx
  43c780:	dec    edx
  43c781:	cmp    edx,ebp
  43c783:	or     DWORD PTR [ecx+0x5],esi
  43c786:	adc    al,0x65
  43c788:	cmp    edi,DWORD PTR [ebx]
  43c78a:	add    BYTE PTR [eax],al
  43c78c:	xor    bl,BYTE PTR [ebx+eax*2+0x73]
  43c790:	inc    esp
  43c791:	ds inc edx
  43c793:	jb     0x43c7c9
  43c795:	xor    esp,edi
  43c797:	add    eax,DWORD PTR [ecx]
  43c799:	pop    es
  43c79a:	cmp    ch,BYTE PTR [ebp+0x3f]
  43c79d:	data16 or bl,BYTE PTR [ebx+0x17]
  43c7a1:	pop    eax
  43c7a2:	add    dh,BYTE PTR [ecx+0x5]
  43c7a5:	pop    ebx
  43c7a6:	add    BYTE PTR [edx+0x9],dh
  43c7a9:	or     dl,BYTE PTR [edx+0x85b1905]
  43c7af:	push   0x6b085d1a
  43c7b4:	div    BYTE PTR [edx]
  43c7b6:	out    0x3,eax
  43c7b8:	push   esi
  43c7b9:	or     DWORD PTR [edx-0x35ca1e98],ebp
  43c7bf:	push   ebx
  43c7c0:	add    al,0x61
  43c7c2:	shl    DWORD PTR [edi-0x14],0x52
  43c7c6:	out    0x3,eax
  43c7c8:	retf   0xaa08
  43c7cb:	push   0x68cf36c1
  43c7d0:	mov    cl,0x5d
  43c7d2:	add    BYTE PTR [esi-0x419ba057],bl
  43c7d8:	(bad)
  43c7dc:	ror    BYTE PTR [eax+0x63],1
  43c7df:	xchg   ebp,eax
  43c7e0:	fbld   TBYTE PTR [edx+0x6a]
  43c7e3:	lea    esp,[edi-0x577eaba8]
  43c7e9:	pop    di
  43c7eb:	(bad)  
  43c7ec:	(bad)  
  43c7ed:	pop    ebx
  43c7ee:	imul   ecx,DWORD PTR [edx+0x5c6d0000],0x972a06d
  43c7f8:	add    BYTE PTR [edx],dl
  43c7fa:	fld    DWORD PTR [esi+0x6a]
  43c7fd:	dec    ebp
  43c7fe:	test   BYTE PTR [esi+0x6a],ah
  43c801:	push   esp
  43c802:	(bad)  [ebp-0x2]
  43c805:	cmp    DWORD PTR [edi+ebx*2+0x64],ebp
  43c809:	sbb    al,0x3c
  43c80b:	pop    ebp
  43c80c:	ins    DWORD PTR es:[edi],dx
  43c80d:	dec    eax
  43c80e:	ds addr16 push ecx
  43c811:	jmp    0x2e424cec
  43c816:	sub    al,0x56
  43c818:	push   ebx
  43c819:	cmp    bh,BYTE PTR [esp+ebx*2]
  43c81c:	dec    ecx
  43c81d:	or     edi,DWORD PTR [ebx]
  43c81f:	addr16 pop ebp
  43c821:	adc    eax,0x6626010
  43c826:	add    ebx,DWORD PTR [edi+0x5f]
  43c829:	adc    eax,0x1e6a6100
  43c82e:	shl    DWORD PTR [ebx+0x5df030fe],1
  43c834:	addr16 std 
  43c836:	in     eax,dx
  43c837:	ds arpl di,di
  43c83a:	or     eax,0xe5cc7443
  43c83f:	or     DWORD PTR [eax],eax
  43c841:	and    bl,bl
  43c843:	cmp    DWORD PTR [ecx-0x26],ebp
  43c846:	add    dh,BYTE PTR [esi]
  43c848:	push   0x642abddb
  43c84d:	add    BYTE PTR [ecx+0xd736b61],al
  43c853:	pop    edi
  43c854:	pop    ebp
  43c855:	push   edi
  43c856:	add    BYTE PTR [eax],al
  43c858:	sub    al,0x6
  43c85a:	dec    ecx
  43c85b:	add    DWORD PTR [ebx+0x61],edi
  43c85e:	je     0x43c8ad
  43c860:	pop    ecx
  43c861:	pop    eax
  43c862:	ins    DWORD PTR es:[edi],dx
  43c863:	dec    ecx
  43c864:	dec    eax
  43c865:	popa   
  43c866:	gs inc ebx
  43c868:	push   ebx
  43c869:	xor    DWORD PTR [esi+0x74],esp
  43c86c:	cld    
  43c86d:	add    eax,0x613b014e
  43c872:	je     0x43c8c1
  43c874:	pop    ecx
  43c875:	pop    eax
  43c876:	ins    DWORD PTR es:[edi],dx
  43c877:	push   ebx
  43c878:	js     0x43c8df
  43c87a:	je     0x43c8e1
  43c87c:	cld    
  43c87d:	add    eax,0x62bb010a
  43c882:	je     0x43c8c7
  43c884:	nop
  43c885:	imul   si,WORD PTR [ebx-0x4e],0x66
  43c88a:	gs or  ecx,DWORD PTR gs:[esi]
  43c88e:	in     al,dx
  43c88f:	add    ch,bh
  43c891:	imul   esi,DWORD PTR fs:[ecx+ebx*1+0x39],0x50
  43c897:	popa   
  43c898:	(bad)  
  43c899:	sub    al,0x65
  43c89b:	gs call 0xe5b732d1
  43c8a1:	cmp    ebx,DWORD PTR [esi+0x6f]
  43c8a4:	jmp    0x43c8b3
  43c8a6:	out    dx,eax
  43c8a7:	add    bl,al
  43c8a9:	pop    edi
  43c8aa:	pop    ecx
  43c8ab:	arpl   di,dx
  43c8ad:	std    
  43c8ae:	data16 jo 0x43c83a
  43c8b1:	pop    ebp
  43c8b2:	inc    ebp
  43c8b3:	shl    BYTE PTR gs:[eax+0x3d],cl
  43c8b7:	js     0x43c925
  43c8b9:	or     eax,0x14d
  43c8be:	mov    ebx,0x994d7430
  43c8c3:	cmp    ebp,DWORD PTR [ebp+0x49]
  43c8c6:	mov    BYTE PTR [eax],dh
  43c8c8:	gs push edx
  43c8ca:	aad    0xd5
  43c8cc:	arpl   WORD PTR [ebp+edx*8+0x6b],si
  43c8d0:	std    
  43c8d1:	inc    eax
  43c8d2:	mov    al,0x86
  43c8d4:	dec    ecx
  43c8d5:	arpl   WORD PTR [ebx-0x28fa0383],si
  43c8db:	ins    DWORD PTR es:[edi],dx
  43c8dc:	popa   
  43c8dd:	push   0xffffffa8
  43c8df:	imul   edx,DWORD PTR [eax+0x63],0x695278b8
  43c8e6:	mov    al,0x82
  43c8e8:	outs   dx,DWORD PTR ds:[esi]
  43c8e9:	stos   DWORD PTR es:[di],eax
  43c8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c8ec:	cld    
  43c8ed:	daa    
  43c8ee:	xlat   BYTE PTR ds:[ebx]
  43c8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c8f0:	dec    esp
  43c8f1:	arpl   WORD PTR [ebx+0x76],di
  43c8f4:	popa   
  43c8f5:	ins    DWORD PTR es:[edi],dx
  43c8f6:	outs   dx,BYTE PTR ds:[esi]
  43c8f7:	ds jo  0x43c96a
  43c8fa:	mov    ds:0xd475fcb2,al
  43c8ff:	outs   dx,DWORD PTR ds:[esi]
  43c900:	popa   
  43c901:	je     0x43c889
  43c903:	bound  ecx,QWORD PTR gs:[ebx+0x78]
  43c907:	pop    eax
  43c908:	push   ecx
  43c909:	add    ch,dl
  43c90b:	dec    eax
  43c90c:	add    ecx,DWORD PTR [ebp+0x38]
  43c90f:	pop    edi
  43c910:	dec    ebx
  43c911:	arpl   WORD PTR [ebp+edx*2+0x6f],cx
  43c915:	pop    edi
  43c916:	inc    edi
  43c917:	dec    edi
  43c918:	xor    esi,DWORD PTR [esp+esi*1+0x7]
  43c91c:	popa   
  43c91d:	add    ch,dl
  43c91f:	and    al,0xfd
  43c921:	inc    eax
  43c922:	add    BYTE PTR [eax],al
  43c924:	xor    BYTE PTR [edi],ah
  43c926:	dec    ecx
  43c927:	arpl   WORD PTR [ebx],si
  43c929:	push   ds
  43c92a:	inc    ebp
  43c92b:	je     0x43c95d
  43c92d:	push   cs
  43c92e:	inc    ebp
  43c92f:	inc    esp
  43c930:	aad    0x34
  43c932:	inc    BYTE PTR [eax-0x10]
  43c935:	(bad)  
  43c936:	xor    BYTE PTR [eax+0x7],ch
  43c939:	push   cs
  43c93a:	pop    ebp
  43c93b:	adc    DWORD PTR fs:[esi],edx
  43c93e:	push   ebx
  43c93f:	gs jmp 0xd544160c
  43c945:	or     esi,eax
  43c947:	add    eax,0x6ac22f13
  43c94c:	call   0xa499958e
  43c951:	xor    bh,BYTE PTR [ecx-0x4bbf4399]
  43c957:	data16 mov al,0x3c
  43c95a:	enter  0xb668,0x60
  43c95e:	out    0x3,eax
  43c960:	dec    BYTE PTR [ebx]
  43c962:	call   0xaf6a:0xba37b653
  43c969:	sub    eax,0x3d88588a
  43c96e:	mov    BYTE PTR [edi+0x7a],dl
  43c971:	cmp    BYTE PTR [ecx+0x38],bh
  43c974:	aad    0x9
  43c976:	cmp    eax,0x732e9005
  43c97b:	aaa    
  43c97c:	ins    DWORD PTR es:[edi],dx
  43c97d:	cmp    ecx,DWORD PTR [edx+eiz*2+0x54844d79]
  43c984:	jo     0x43c9c3
  43c986:	push   edx
  43c987:	push   esp
  43c988:	add    BYTE PTR [eax],al
  43c98a:	aad    0x9
  43c98c:	sub    eax,0x42359804
  43c991:	push   ebx
  43c992:	ss dec esi
  43c994:	inc    esp
  43c995:	push   ebx
  43c996:	xor    BYTE PTR [esi],bh
  43c998:	push   edx
  43c999:	push   esp
  43c99a:	aad    0x9
  43c99c:	dec    edi
  43c99d:	add    eax,0x343b2d14
  43c9a2:	inc    ebx
  43c9a3:	aaa    
  43c9a4:	inc    esi
  43c9a5:	imul   edi,DWORD PTR [eax],0x2f6d3a3b
  43c9ab:	or     dl,BYTE PTR cs:[edi+0x8]
  43c9af:	or     BYTE PTR ds:[eax-0x6],bl
  43c9b3:	ss stc 
  43c9b5:	add    eax,DWORD PTR ds:0xf652260a
  43c9bb:	sub    bl,dh
  43c9bd:	push   0x7003124
  43c9c2:	std    
  43c9c3:	xor    BYTE PTR [ecx+0x1a],dh
  43c9c6:	or     eax,0xf3d07467
  43c9cb:	xor    edx,DWORD PTR [ecx-0x17]
  43c9ce:	(bad)  
  43c9cf:	push   ebx
  43c9d0:	add    BYTE PTR [edx-0x3b92cf3e],ch
  43c9d6:	add    ebp,DWORD PTR [edi]
  43c9d8:	push   0xffffffcd
  43c9da:	mov    bl,0x38
  43c9dc:	dec    ebp
  43c9dd:	mov    ch,0xb1
  43c9df:	cmp    eax,0x9c0c667
  43c9e4:	add    BYTE PTR [ebx-0x629cab29],al
  43c9ea:	out    0x37,al
  43c9ec:	imul   ecx,DWORD PTR [edx+0x34ad0000],0x3381be6d
  43c9f6:	fs jle 0x43c99c
  43c9f9:	push   esp
  43c9fa:	je     0x43c984
  43c9fc:	stos   BYTE PTR es:[edi],al
  43c9fd:	imul   ecx,DWORD PTR cs:[edi-0x55ff9c2a],0x755f2a84
  43ca08:	jge    0x43ca57
  43ca0a:	arpl   WORD PTR [edx+0x6e],bx
  43ca0d:	cmp    eax,0x9a25969
  43ca12:	add    BYTE PTR [ebp+0x3b6d4ed9],bh
  43ca18:	cmp    al,0x65
  43ca1a:	je     0x43ca48
  43ca1c:	inc    esp
  43ca1d:	cmp    dh,BYTE PTR [eax+eax*2-0x2f]
  43ca21:	push   cs
  43ca22:	(bad)  
  43ca23:	and    edi,DWORD PTR [eax]
  43ca25:	cmp    dl,BYTE PTR [ecx+0x40]
  43ca28:	cmp    ebp,DWORD PTR [esi]
  43ca2a:	imul   ebx,DWORD PTR [esi],0xf6730e9
  43ca30:	std    
  43ca31:	xor    al,0x0
  43ca33:	mov    dl,0xd9
  43ca35:	dec    esi
  43ca36:	ins    DWORD PTR es:[edi],dx
  43ca37:	ss clc 
  43ca39:	xor    esp,DWORD PTR [eax+eax*1-0x15]
  43ca3d:	pop    esi
  43ca3e:	add    BYTE PTR [eax],al
  43ca40:	xor    cl,BYTE PTR [eax]
  43ca42:	dec    ebx
  43ca43:	gs jo  0x43ca45
  43ca46:	pusha  
  43ca47:	outs   dx,BYTE PTR ds:[esi]
  43ca48:	shl    BYTE PTR [esi],1
  43ca4a:	outs   dx,DWORD PTR ds:[esi]
  43ca4b:	push   eax
  43ca4c:	mov    ebx,DWORD PTR [ebx+0x0]
  43ca4f:	add    BYTE PTR [eax+0xd],dh
  43ca52:	aas    
  43ca53:	add    BYTE PTR gs:[eax],al
  43ca56:	xor    BYTE PTR [ebp+0x66],cl
  43ca59:	arpl   WORD PTR [ecx],dx
  43ca5b:	pop    ebx
  43ca5c:	je     0x43cacd
  43ca5e:	jle    0x43ca6a
  43ca60:	adc    BYTE PTR [ecx],al
  43ca62:	jae    0x43ca95
  43ca64:	je     0x43caa9
  43ca66:	sbb    BYTE PTR ds:0x3748736b,ch
  43ca6c:	data16 arpl WORD PTR [bp+si],cx
  43ca70:	xchg   esp,eax
  43ca71:	add    DWORD PTR [ebx+0x31],esi
  43ca74:	je     0x43cacd
  43ca76:	push   ebp
  43ca77:	xor    al,0x64
  43ca79:	outs   dx,DWORD PTR ds:[esi]
  43ca7a:	arpl   WORD PTR [ebp+0x66],dx
  43ca7d:	imul   cx,WORD PTR [edx],0x64
  43ca81:	add    DWORD PTR [ebx],esi
  43ca83:	xor    DWORD PTR [eax+edx*2+0x5d],esi
  43ca87:	pop    eax
  43ca88:	pop    ebp
  43ca89:	outs   dx,BYTE PTR ds:[esi]
  43ca8a:	pusha  
  43ca8b:	or     bl,BYTE PTR [ecx+eax*1+0x57742eb3]
  43ca92:	test   DWORD PTR [edi],esi
  43ca94:	outs   dx,DWORD PTR fs:[esi]
  43ca96:	xor    edi,eax
  43ca98:	pop    esp
  43ca99:	arpl   WORD PTR [eax],sp
  43ca9b:	push   cs
  43ca9c:	xor    al,BYTE PTR [edx]
  43ca9e:	fcom   QWORD PTR [edi+0x61]
  43caa1:	outs   dx,BYTE PTR ds:[esi]
  43caa2:	add    bh,bh
  43caa4:	pusha  
  43caa5:	outs   dx,BYTE PTR ds:[esi]
  43caa6:	and    BYTE PTR [edi],dh
  43caa8:	outs   dx,DWORD PTR ds:[esi]
  43caa9:	add    BYTE PTR [edi+0xe],ch
  43caac:	cmp    eax,0x6c28c171
  43cab1:	push   edx
  43cab2:	shr    DWORD PTR [edx],1
  43cab4:	je     0x43cab6
  43cab6:	aad    0x5d
  43cab8:	std    
  43cab9:	inc    esi
  43caba:	add    BYTE PTR [eax],al
  43cabc:	sti    
  43cabd:	push   ds
  43cabe:	popa   
  43cabf:	outs   dx,BYTE PTR ds:[esi]
  43cac0:	push   es
  43cac1:	push   ss
  43cac2:	pop    edi
  43cac3:	je     0x43caec
  43cac5:	push   cs
  43cac6:	pop    edi
  43cac7:	je     0x43ca9e
  43cac9:	outs   dx,DWORD PTR ds:[esi]
  43caca:	add    eax,DWORD PTR [edi+eiz*8+0x11]
  43cace:	push   ebx
  43cacf:	inc    ebx
  43cad0:	stc    
  43cad1:	shl    DWORD PTR [ecx+0x0],cl
  43cad4:	aad    0x5c
  43cad6:	add    al,0x42
  43cad8:	mov    esp,0xb04e68ce
  43cadd:	iret   
  43cade:	push   eax
  43cadf:	add    ch,dl
  43cae1:	fwait
  43cae2:	add    eax,DWORD PTR [esp+ebp*4+0x7f]
  43cae6:	dec    esp
  43cae7:	pop    edi
  43cae8:	test   eax,0xb04b64cf
  43caed:	jg     0x43cb3e
  43caef:	pop    edi
  43caf0:	mov    edx,0xd5003395
  43caf5:	(bad)  
  43caf6:	dec    BYTE PTR [edx-0x7a]
  43caf9:	xchg   ebx,eax
  43cafa:	xor    ebx,DWORD PTR [edi+0x7c]
  43cafd:	sahf   
  43cafe:	inc    edx
  43caff:	imul   eax,DWORD PTR [edi-0x7e93ae83],0x786c4c99
  43cb09:	imul   ebx,DWORD PTR [esi+0x66],0x70
  43cb0d:	(bad)  
  43cb0e:	push   eax
  43cb0f:	ins    DWORD PTR es:[edi],dx
  43cb10:	aad    0x5
  43cb12:	das    
  43cb13:	inc    ebx
  43cb14:	xchg   DWORD PTR [edi],ebx
  43cb16:	push   cs
  43cb17:	sub    bh,BYTE PTR [ecx]
  43cb19:	dec    edi
  43cb1a:	jo     0x43cb1c
  43cb1c:	aad    0x55
  43cb1e:	std    
  43cb1f:	inc    esi
  43cb20:	add    BYTE PTR [eax],al
  43cb22:	xor    ebx,DWORD PTR [edx+0x58]
  43cb25:	addr16 xor al,0xff
  43cb28:	pusha  
  43cb29:	dec    ebp
  43cb2a:	sub    al,0x0
  43cb2c:	pop    eax
  43cb2d:	arpl   WORD PTR [eax],di
  43cb2f:	and    BYTE PTR [ebx+esi*2+0x29],ch
  43cb33:	or     cl,BYTE PTR [ebx]
  43cb35:	ins    DWORD PTR es:[edi],dx
  43cb36:	and    al,0x34
  43cb38:	and    al,0x5c
  43cb3a:	and    al,0xa
  43cb3c:	stos   DWORD PTR es:[edi],eax
  43cb3d:	add    ecx,eax
  43cb3f:	aaa    
  43cb40:	adc    BYTE PTR [ecx+ecx*1+0x4d],dl
  43cb44:	or     al,0x58
  43cb46:	or     eax,0x56bf62b
  43cb4b:	sub    esi,ebp
  43cb4d:	(bad)  
  43cb4e:	dec    BYTE PTR [ecx]
  43cb50:	cmp    BYTE PTR [ebx],al
  43cb52:	mov    al,ds:0xe153e037
  43cb57:	dec    edx
  43cb58:	(bad)  
  43cb59:	push   edx
  43cb5a:	(bad)  
  43cb5b:	xor    dl,ch
  43cb5d:	data16 or BYTE PTR ds:0x41b657b9,dh
  43cb64:	mov    ebx,0x2e09d534
  43cb69:	add    esi,eax
  43cb6b:	aaa    
  43cb6c:	mov    al,0x53
  43cb6e:	mov    eax,ds:0xb66fc457
  43cb73:	sub    dl,BYTE PTR [esi-0x76cb279a]
  43cb79:	push   edi
  43cb7a:	jbe    0x43cbbd
  43cb7c:	fwait
  43cb7d:	add    edi,DWORD PTR [eax]
  43cb7f:	or     DWORD PTR [esi+0x7b398a51],esp
  43cb85:	inc    eax
  43cb86:	add    BYTE PTR [eax],al
  43cb88:	imul   ebp,DWORD PTR [esi],0xffffff88
  43cb8b:	push   edi
  43cb8c:	jbe    0x43cbdf
  43cb8e:	mov    BYTE PTR [eax+0x7d],dl
  43cb91:	or     DWORD PTR [ecx],esi
  43cb93:	add    esp,DWORD PTR [eax+0x61546037]
  43cb99:	dec    ebp
  43cb9a:	inc    esp
  43cb9b:	push   edi
  43cb9c:	dec    ecx
  43cb9d:	cmp    BYTE PTR [edx+0x5d],al
  43cba0:	sbb    eax,0xd56c5629
  43cba5:	or     DWORD PTR [edi+0x4037f804],ebp
  43cbab:	push   esp
  43cbac:	sub    DWORD PTR [edx+0x0],edx
  43cbaf:	dec    eax
  43cbb0:	add    dh,BYTE PTR [edx]
  43cbb2:	inc    esp
  43cbb3:	dec    eax
  43cbb4:	add    eax,0xd09e0063
  43cbb9:	push   eax
  43cbba:	jo     0x43cbc0
  43cbbc:	call   FWORD PTR [ecx+0x6e]
  43cbbf:	push   es
  43cbc0:	repnz es ins DWORD PTR es:[edi],dx
  43cbc3:	sbb    al,ch
  43cbc5:	xor    BYTE PTR [ebp+0xc],ah
  43cbc8:	out    dx,eax
  43cbc9:	or     DWORD PTR [eax],eax
  43cbcb:	push   ss
  43cbcc:	fmul   DWORD PTR [eax+0x63]
  43cbcf:	std    
  43cbd0:	mov    ds:0x41a642a,eax
  43cbd5:	fs aas 
  43cbd7:	fmul   QWORD PTR [edx]
  43cbd9:	xor    ch,BYTE PTR [ecx-0x25]
  43cbdc:	sar    DWORD PTR ds:0xc5d6e977,0xfe
  43cbe3:	popf   
  43cbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cbe5:	es push 0xffffff9d
  43cbe8:	scas   al,BYTE PTR es:[edi]
  43cbe9:	xor    esp,DWORD PTR [ebx-0x38]
  43cbec:	add    BYTE PTR [eax],al
  43cbee:	xchg   edx,eax
  43cbef:	pop    ebp
  43cbf0:	imul   eax,edx,0x91002fb5
  43cbf6:	(bad)  [eax+0x63]
  43cbf9:	popf   
  43cbfa:	jecxz  0x43cc26
  43cbfc:	fs mov edx,0x9c3f63a5
  43cc02:	call   0x773d:0x719b6931
  43cc09:	stos   BYTE PTR es:[edi],al
  43cc0a:	outs   dx,DWORD PTR ds:[esi]
  43cc0b:	ss push 0x75
  43cc0e:	(bad)  
  43cc0f:	pop    ebx
  43cc10:	jmp    FWORD PTR [ebp+0x7e543d75]
  43cc16:	jae    0x43cc3e
  43cc18:	push   0x30
  43cc1a:	outs   dx,DWORD PTR ds:[esi]
  43cc1b:	daa    
  43cc1c:	imul   ebx,DWORD PTR [ebx+0x3c],0x3e407463
  43cc23:	xor    BYTE PTR [eax],al
  43cc25:	dec    ebp
  43cc26:	fld    DWORD PTR [esi+ebp*2]
  43cc29:	add    BYTE PTR [ecx],cl
  43cc2b:	sub    eax,0x5bcc6574
  43cc30:	arpl   WORD PTR [bx+di],bx
  43cc33:	pop    ebx
  43cc34:	imul   eax,DWORD PTR [ecx-0x21],0xfffffff8
  43cc38:	push   0x65
  43cc3a:	mov    esi,0xbfffff6
  43cc3f:	push   cs
  43cc40:	dec    esp
  43cc41:	outs   dx,DWORD PTR ds:[esi]
  43cc42:	shl    DWORD PTR [edx],cl
  43cc44:	ins    DWORD PTR es:[edi],dx
  43cc45:	jo     0x43cc03
  43cc47:	pop    ebx
  43cc48:	popa   
  43cc49:	jbe    0x43cc30
  43cc4b:	xor    DWORD PTR [ebp+0x67],ebx
  43cc4e:	fincstp 
  43cc50:	pop    eax
  43cc51:	ins    BYTE PTR es:[edi],dx
  43cc52:	add    BYTE PTR [eax],al
  43cc54:	imul   ebp,DWORD PTR [ecx],0x693004f
  43cc5a:	cmp    DWORD PTR [esi+eax*4+0x59],esp
  43cc5e:	imul   esi,DWORD PTR [eax+ecx*4+0x2f],0x63
  43cc63:	gs adc dh,dh
  43cc66:	imul   ebp,DWORD PTR [ecx+0x2a],0xb656c35
  43cc6d:	sub    DWORD PTR [ebx+0x0],ebp
  43cc70:	retf   0x3b06
  43cc73:	jb     0x43ccda
  43cc75:	push   esi
  43cc76:	je     0x43ccce
  43cc78:	sbb    DWORD PTR [ecx+eiz*2+0x66],ebx
  43cc7c:	jne    0x43cc79
  43cc7e:	pusha  
  43cc7f:	bound  ebp,QWORD PTR [di]
  43cc82:	je     0x43ccf9
  43cc84:	outs   dx,BYTE PTR ds:[esi]
  43cc85:	sub    DWORD PTR [edi+0x0],ecx
  43cc88:	mov    ecx,0x55723b06
  43cc8d:	push   esi
  43cc8e:	je     0x43ccd7
  43cc90:	pop    ecx
  43cc91:	push   edx
  43cc92:	inc    ebx
  43cc93:	gs neg BYTE PTR gs:[eax+0x72]
  43cc98:	dec    ebp
  43cc99:	xor    DWORD PTR [eax],eax
  43cc9b:	add    BYTE PTR [esi],ah
  43cc9d:	or     eax,0x5635723b
  43cca2:	je     0x43cced
  43cca4:	aad    0x45
  43cca6:	push   esp
  43cca7:	imul   eax,DWORD PTR [edi+0x57],0xb33c634b
  43ccae:	cld    
  43ccaf:	mov    al,0xd5
  43ccb1:	repz push ecx
  43ccb3:	ja     0x43ccda
  43ccb5:	(bad)  
  43ccb6:	aas    
  43ccb7:	arpl   WORD PTR [eax],ax
  43ccb9:	add    BYTE PTR [esi],ah
  43ccbb:	not    DWORD PTR [ecx+0x69]
  43ccbe:	sbb    al,0xfc
  43ccc0:	pop    eax
  43ccc1:	ja     0x43cc98
  43ccc3:	daa    
  43ccc4:	std    
  43ccc5:	inc    esi
  43ccc6:	push   es
  43ccc7:	add    BYTE PTR [ecx+0x6c],bl
  43ccca:	icebp  
  43cccb:	jmp    0x43cd32
  43cccd:	imul   eax,DWORD PTR [edx],0xf9673319
  43ccd3:	mov    dl,0xfc
  43ccd5:	xor    esp,edx
  43ccd7:	out    dx,eax
  43ccd8:	pop    eax
  43ccd9:	je     0x43ccec
  43ccdb:	push   es
  43ccdc:	popaw  
  43ccde:	loope  0x43ccba
  43cce0:	xor    esp,DWORD PTR [edi-0x47]
  43cce3:	mov    dl,0xfc
  43cce5:	imul   edx,ebp,0x73
  43cce8:	addr16 push 0xffffffcb
  43cceb:	lds    edx,FWORD PTR [edx+0x74]
  43ccee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ccef:	fstp   DWORD PTR [eax+0x54]
  43ccf2:	ret    0x48a3
  43ccf5:	outs   dx,BYTE PTR ds:[esi]
  43ccf6:	mov    esp,0xac4d5fc8
  43ccfb:	(bad)  
  43ccfc:	das    
  43ccfd:	add    ch,dl
  43ccff:	xchg   ecx,eax
  43cd00:	add    cl,BYTE PTR [esi+0x78]
  43cd03:	xchg   DWORD PTR [edi+0x70],eax
  43cd06:	jo     0x43cc90
  43cd08:	dec    ebx
  43cd09:	arpl   WORD PTR [ebp+eiz*2+0x54],di
  43cd0d:	push   ecx
  43cd0e:	aad    0x77
  43cd10:	add    cl,BYTE PTR [esi+0x78]
  43cd13:	xchg   DWORD PTR [ecx],edi
  43cd15:	push   0x60
  43cd17:	test   DWORD PTR [ebx+0x63],ecx
  43cd1a:	pop    esp
  43cd1b:	gs push esp
  43cd1d:	push   ecx
  43cd1e:	add    BYTE PTR [eax],al
  43cd20:	aad    0x9
  43cd22:	pop    ss
  43cd23:	push   es
  43cd24:	and    esp,DWORD PTR [edi]
  43cd26:	inc    edx
  43cd27:	inc    ebp
  43cd28:	cmp    DWORD PTR [ecx],esi
  43cd2a:	push   esi
  43cd2b:	pop    edi
  43cd2c:	sbb    BYTE PTR [edi],ah
  43cd2e:	push   eax
  43cd2f:	add    al,0x44
  43cd31:	or     esi,DWORD PTR [eax]
  43cd33:	push   0x3a
  43cd35:	ss push eax
  43cd37:	arpl   WORD PTR [ecx],di
  43cd39:	xor    ebp,DWORD PTR ds:0x4627105f
  43cd3f:	dec    edi
  43cd40:	sub    esi,DWORD PTR [ebx]
  43cd42:	sbb    ebx,DWORD PTR [ebx+0x19]
  43cd45:	daa    
  43cd46:	push   ss
  43cd47:	gs sti 
  43cd49:	xor    dl,BYTE PTR [edi]
  43cd4b:	push   eax
  43cd4c:	in     al,dx
  43cd4d:	cmp    esp,edi
  43cd4f:	add    eax,DWORD PTR [edi+0xb]
  43cd52:	push   ss
  43cd53:	pop    edi
  43cd54:	jmp    0xe6a8d1b5
  43cd59:	cmp    eax,DWORD PTR [eax]
  43cd5b:	push   eax
  43cd5c:	jmp    0xd03b:0xf8550445
  43cd63:	push   ebx
  43cd64:	leave  
  43cd65:	xor    ch,dl
  43cd67:	aas    
  43cd68:	stos   BYTE PTR es:[edi],al
  43cd69:	sub    al,0xc3
  43cd6b:	add    esi,DWORD PTR [edx+0xb]
  43cd6e:	mov    dh,0x5e
  43cd70:	ror    DWORD PTR [edi-0x38],0x66
  43cd74:	mov    dh,0x25
  43cd76:	xchg   esi,eax
  43cd77:	pop    esi
  43cd78:	mov    BYTE PTR [esi],dh
  43cd7a:	mov    ch,0x6a
  43cd7c:	test   eax,0xb769a042
  43cd81:	xor    BYTE PTR [edx-0x7cfffffd],bh
  43cd87:	or     DWORD PTR [esi-0x73c88098],esp
  43cd8d:	push   ebp
  43cd8e:	mov    DWORD PTR [ebx+edx*4+0x55],ebx
  43cd92:	jb     0x43cdc3
  43cd94:	mov    dh,BYTE PTR [esi+esi*2]
  43cd97:	sub    al,0x74
  43cd99:	push   ebp
  43cd9a:	jb     0x43cdd1
  43cd9c:	add    BYTE PTR [eax-0x5e],dh
  43cd9f:	sub    al,0x6d
  43cda1:	mov    al,BYTE PTR [eax+0x3a5d7028]
  43cda7:	xor    BYTE PTR [esi+ecx*2+0x6],dl
  43cdab:	sub    ebx,DWORD PTR [ebp+0x5c]
  43cdae:	daa    
  43cdaf:	daa    
  43cdb0:	je     0x43ce02
  43cdb2:	adc    eax,0x74a6d2b
  43cdb7:	daa    
  43cdb8:	jo     0x43cdef
  43cdba:	xor    dh,BYTE PTR [eax]
  43cdbc:	push   ecx
  43cdbd:	jmp    0x26432098
  43cdc2:	xor    al,0x36
  43cdc4:	dec    ebp
  43cdc5:	or     al,0xf6
  43cdc7:	cmp    ch,BYTE PTR [esi+0x10]
  43cdca:	and    eax,0x260c4437
  43cdcf:	pop    ebp
  43cdd0:	outs   dx,BYTE PTR ds:[esi]
  43cdd1:	add    BYTE PTR [ecx],ah
  43cdd3:	ss imul edi,ebx,0xd5d5ea7
  43cdda:	shl    DWORD PTR [edi-0x3],1
  43cddd:	sbb    esp,esi
  43cddf:	xor    eax,0x3af6044d
  43cde4:	outs   dx,BYTE PTR ds:[esi]
  43cde5:	shl    BYTE PTR [edx+0xc44436],1
  43cdeb:	add    BYTE PTR [edi-0x593f91a4],ah
  43cdf1:	xor    eax,0x5f07db69
  43cdf6:	pop    ebp
  43cdf7:	aad    0xd6
  43cdf9:	idiv   ch
  43cdfb:	call   0x5eb5:0xbb3d28b5
  43ce02:	je     0x43cdc8
  43ce04:	(bad)
  43ce08:	scas   al,BYTE PTR es:[edi]
  43ce09:	pop    eax
  43ce0a:	add    BYTE PTR [edi-0x719cb02c],cl
  43ce10:	leave  
  43ce11:	cmp    ah,BYTE PTR [ebx-0x65]
  43ce14:	cdq    
  43ce15:	pop    ebx
  43ce16:	pop    edi
  43ce17:	add    BYTE PTR [eax+0x5a],cl
  43ce1a:	pop    ebp
  43ce1b:	inc    ebp
  43ce1c:	push   esp
  43ce1d:	lock (bad) 
  43ce1f:	jmp    FWORD PTR [edx+0x8]
  43ce22:	dec    edx
  43ce23:	gs push ebx
  43ce25:	cld    
  43ce26:	pop    esp
  43ce27:	je     0x43ce3b
  43ce29:	and    eax,0x4911756c
  43ce2e:	js     0x43ce87
  43ce30:	lods   al,BYTE PTR ds:[esi]
  43ce31:	or     bh,bh
  43ce33:	add    cl,dh
  43ce35:	push   esp
  43ce36:	ins    DWORD PTR es:[edi],dx
  43ce37:	popa   
  43ce38:	or     bl,bh
  43ce3a:	pusha  
  43ce3b:	fs mov esp,0xc244390a
  43ce41:	inc    esp
  43ce42:	push   eax
  43ce43:	dec    ecx
  43ce44:	lahf   
  43ce45:	sbb    BYTE PTR [esi],ah
  43ce47:	fs call 0xec43ce7e
  43ce4d:	add    al,0x6f
  43ce4f:	jbe    0x43ce51
  43ce51:	add    dl,bl
  43ce53:	pop    edx
  43ce54:	jo     0x43cec8
  43ce56:	aad    0x27
  43ce58:	je     0x43cec0
  43ce5a:	rol    DWORD PTR ds:0x4c630167,cl
  43ce60:	data16 jae 0x43cebf
  43ce63:	pop    eax
  43ce64:	popa   
  43ce65:	outs   dx,BYTE PTR ds:[esi]
  43ce66:	pusha  
  43ce67:	pop    esp
  43ce68:	cmp    DWORD PTR [eax],eax
  43ce6a:	das    
  43ce6b:	or     dl,BYTE PTR [eax+0x61]
  43ce6e:	and    BYTE PTR [edx],dh
  43ce70:	inc    ecx
  43ce71:	jae    0x43cdf4
  43ce73:	clc    
  43ce74:	dec    ebx
  43ce75:	push   edi
  43ce76:	sub    al,0xa
  43ce78:	inc    ecx
  43ce79:	add    BYTE PTR [ebp+eiz*1+0x74],cl
  43ce7d:	push   0x64662d72
  43ce82:	jb     0x43ceb1
  43ce84:	ins    BYTE PTR es:[edi],dx
  43ce85:	cmp    ah,BYTE PTR gs:0xa536565
  43ce8c:	add    DWORD PTR [eax],0x4c
  43ce8f:	and    eax,0x82d56874
  43ce94:	pop    edi
  43ce95:	imul   ebp,DWORD PTR [edx-0x6a],0x5f
  43ce99:	inc    edx
  43ce9a:	jl     0x43ce30
  43ce9c:	pop    edi
  43ce9d:	dec    ebp
  43ce9e:	test   DWORD PTR gs:[ebp+0x51],ebx
  43cea2:	aad    0x9b
  43cea4:	cld    
  43cea5:	dec    edi
  43cea6:	je     0x43cedc
  43cea8:	gs inc edi
  43ceaa:	inc    esi
  43ceab:	out    dx,eax
  43ceac:	outs   dx,BYTE PTR fs:[esi]
  43ceae:	xor    BYTE PTR [eax+0x50],dl
  43ceb1:	imul   eax,DWORD PTR [edi+0x5a],0x2b
  43ceb8:	aad    0x3f
  43ceba:	add    al,0x50
  43cebc:	xor    al,0xff
  43cebe:	imul   ecx,DWORD PTR [ebp+0x3e],0x5a
  43cec2:	push   esp
  43cec3:	dec    esi
  43cec4:	xor    al,BYTE PTR [eax+edx*2+0x51]
  43cec8:	aad    0x4b
  43ceca:	add    al,0x50
  43cecc:	hlt    
  43cecd:	push   ds
  43cece:	ins    BYTE PTR es:[edi],dx
  43cecf:	push   ebx
  43ced0:	sti    
  43ced1:	and    DWORD PTR [ecx+0x69],ecx
  43ced4:	or     DWORD PTR [esi],ecx
  43ced6:	das    
  43ced7:	jo     0x43cecd
  43ced9:	mulps  xmm5,XMMWORD PTR [ebp+0xa]
  43cedd:	mov    bl,0xfc
  43cedf:	je     0x43ceb6
  43cee1:	and    bl,BYTE PTR [ebp+0x74]
  43cee4:	in     eax,dx
  43cee5:	in     eax,0x5c
  43cee7:	je     0x43cedf
  43cee9:	or     ch,BYTE PTR [edi]
  43ceeb:	jo     0x43cea5
  43ceed:	iret   
  43ceee:	sub    eax,DWORD PTR [eax]
  43cef0:	aad    0x10
  43cef2:	std    
  43cef3:	dec    esp
  43cef4:	leave  
  43cef5:	loopne 0x43cf36
  43cef7:	imul   eax,ebp,0xffffff9c
  43cefa:	sub    eax,DWORD PTR [eax]
  43cefc:	aad    0xc3
  43cefe:	cld    
  43ceff:	dec    edi
  43cf00:	mov    ah,0x76
  43cf02:	fs dec edi
  43cf04:	test   al,0xc3
  43cf06:	dec    eax
  43cf07:	arpl   WORD PTR [esi+0x785d5d82],ax
  43cf0d:	or     DWORD PTR [esi-0x20f62ad4],edx
  43cf13:	add    esp,DWORD PTR [ebp-0x479464d6]
  43cf19:	sub    bh,BYTE PTR [ecx+0x64]
  43cf1c:	add    BYTE PTR [eax],al
  43cf1e:	jg     0x43cf52
  43cf20:	xchg   BYTE PTR [edx+0x79],ah
  43cf23:	xor    bh,BYTE PTR [ebp+0x5e]
  43cf26:	test   BYTE PTR [ecx],cl
  43cf28:	ins    BYTE PTR es:[edi],dx
  43cf29:	add    al,0x85
  43cf2b:	sub    dh,BYTE PTR [ebx+0x6b]
  43cf2e:	and    esp,DWORD PTR [edi]
  43cf30:	push   esp
  43cf31:	gs inc edi
  43cf33:	daa    
  43cf34:	and    eax,0x56312063
  43cf39:	push   0x2d3f391a
  43cf3e:	aad    0x9
  43cf40:	dec    ebp
  43cf41:	add    eax,DWORD PTR [esi]
  43cf43:	cmp    BYTE PTR [ebx+0x2f],cl
  43cf46:	das    
  43cf47:	daa    
  43cf48:	ss popa 
  43cf4a:	cli    
  43cf4b:	cmp    DWORD PTR [ebx+eax*2-0x2b],eax
  43cf4f:	or     DWORD PTR [ecx],eax
  43cf51:	add    ebx,DWORD PTR [eax]
  43cf53:	ss adc eax,0x2139ee41
  43cf59:	dec    ebx
  43cf5a:	mov    edx,0x20032309
  43cf5f:	ss cmc 
  43cf61:	xor    cl,ah
  43cf63:	aaa    
  43cf64:	xor    BYTE PTR [ebx-0x2b],al
  43cf67:	or     DWORD PTR [ebx+eax*1],ebp
  43cf6a:	or     BYTE PTR [esi],dh
  43cf6c:	cmc    
  43cf6d:	xor    cl,cl
  43cf6f:	aaa    
  43cf70:	mov    al,0x2c
  43cf72:	aad    0x9
  43cf74:	xchg   edx,eax
  43cf75:	add    edx,DWORD PTR [eax-0x56a154af]
  43cf7b:	rcr    DWORD PTR es:[esi-0x79],cl
  43cf7f:	sub    dl,bl
  43cf81:	dec    esi
  43cf82:	add    BYTE PTR [eax],al
  43cf84:	mov    dh,0x54
  43cf86:	out    0x3,eax
  43cf88:	jo     0x43cf93
  43cf8a:	add    BYTE PTR [edx-0x429cba72],bl
  43cf90:	mov    bl,0x35
  43cf92:	arpl   WORD PTR [edx-0x16aecb55],si
  43cf98:	(bad)  
  43cf99:	sbb    al,0xff
  43cf9b:	mov    ecx,0x7c3d2b8a
  43cfa0:	xchg   BYTE PTR [edi+0x47],cl
  43cfa3:	sahf   
  43cfa4:	(bad)  
  43cfa5:	stc    
  43cfa6:	call   FWORD PTR [eax-0x5797ca89]
  43cfac:	jp     0x43cfd3
  43cfae:	mov    BYTE PTR ds:0x30556d25,dh
  43cfb5:	sub    eax,0xebd93668
  43cfba:	(bad)  
  43cfbb:	cmp    BYTE PTR [eax],dh
  43cfbd:	ss push 0x43263d28
  43cfc3:	inc    ecx
  43cfc4:	or     eax,0x3a6a27
  43cfc9:	xor    DWORD PTR [edx+0x1e],ebp
  43cfcc:	ror    DWORD PTR [eax+ecx*2+0x1d],1
  43cfd0:	into   
  43cfd1:	cli    
  43cfd2:	dec    edi
  43cfd3:	xor    BYTE PTR [edi-0x26f293db],dh
  43cfd9:	sbb    edi,edi
  43cfdb:	cmp    DWORD PTR [ecx],ebx
  43cfdd:	daa    
  43cfde:	ins    BYTE PTR es:[edi],dx
  43cfdf:	std    
  43cfe0:	sbb    eax,0xc0a6342
  43cfe5:	arpl   WORD PTR ss:[esi],dx
  43cfe8:	add    BYTE PTR [eax],al
  43cfea:	fnstcw WORD PTR [edi+edi*8+0x19]
  43cfee:	cdq    
  43cfef:	dec    eax
  43cff0:	arpl   bp,si
  43cff2:	pushf  
  43cff3:	xor    BYTE PTR [ebp+ecx*8-0x43],ch
  43cff7:	sub    edx,DWORD PTR [eax-0x38]
  43cffa:	stos   BYTE PTR es:[edi],al
  43cffb:	xor    DWORD PTR [ecx-0x17],edx
  43cffe:	(bad)  
  43cfff:	pop    es
  43d000:	add    BYTE PTR [edx+0x6b2eb7],ch
  43d006:	sbb    eax,0x54c6429
  43d00b:	sub    DWORD PTR [ebp+0x54],ebx
  43d00e:	adc    eax,DWORD PTR [esi+0x6a]
  43d011:	addr16 dec edx
  43d013:	add    BYTE PTR [eax],al
  43d015:	add    BYTE PTR [edi-0x1],cl
  43d018:	cmp    al,0x4c
  43d01a:	xor    BYTE PTR [edx+ebp*1],dl
  43d01d:	cs dec eax
  43d01f:	pop    ebx
  43d020:	ins    BYTE PTR es:[edi],dx
  43d021:	add    BYTE PTR [edx],al
  43d023:	pop    es
  43d024:	aas    
  43d025:	gs push 0x5e656b01
  43d02b:	dec    eax
  43d02c:	pop    ecx
  43d02d:	ins    DWORD PTR es:[edi],dx
  43d02e:	dec    ecx
  43d02f:	push   edx
  43d030:	js     0x43d089
  43d032:	mov    esp,0x1f654b06
  43d037:	popa   
  43d038:	push   0x33
  43d03a:	fsubrp st(7),st
  43d03c:	arpl   WORD PTR [eax+edx*1+0x6],bp
  43d040:	jle    0x43d042
  43d042:	call   DWORD PTR [ebx+0x5d]
  43d045:	popa   
  43d046:	call   0xdeb81b7b
  43d04b:	xor    BYTE PTR [ecx+0x6d],bl
  43d04e:	add    BYTE PTR [eax],al
  43d050:	repz daa 
  43d052:	dec    eax
  43d053:	inc    edi
  43d054:	shl    BYTE PTR [esi],1
  43d056:	pop    edx
  43d057:	popa   
  43d058:	loopne 0x43d05f
  43d05a:	adc    BYTE PTR [eax],al
  43d05c:	scas   eax,DWORD PTR es:[edi]
  43d05d:	cmp    esi,DWORD PTR es:[edx-0x37]
  43d061:	and    al,0x74
  43d063:	gs mov ch,0x27
  43d066:	imul   esi,DWORD PTR [ebp+ebx*8+0x27],0x5b
  43d06b:	gs ins BYTE PTR es:[edi],dx
  43d06d:	push   es
  43d06e:	ins    BYTE PTR es:[edi],dx
  43d06f:	add    BYTE PTR [edi-0x2a91b2da],ch
  43d075:	daa    
  43d076:	popa   
  43d077:	je     0x43d09e
  43d079:	and    eax,0x3136696c
  43d07e:	add    BYTE PTR [eax],al
  43d080:	aad    0x13
  43d082:	add    al,0x3d
  43d084:	ret    0x5e69
  43d087:	addr16 mov eax,ds:0x63d9
  43d08b:	ins    BYTE PTR es:[edi],dx
  43d08c:	lods   al,BYTE PTR ds:[esi]
  43d08d:	(bad)  
  43d08e:	addr16 inc ebx
  43d090:	popf   
  43d091:	mov    al,0xfc
  43d093:	pop    es
  43d094:	aad    0x6f
  43d096:	cmp    BYTE PTR [ebp-0x64],cl
  43d099:	ins    BYTE PTR es:[edi],dx
  43d09a:	inc    esi
  43d09b:	outs   dx,BYTE PTR ds:[esi]
  43d09c:	jb     0x43d02b
  43d09e:	xor    DWORD PTR [edi+eax*4-0x77],esi
  43d0a2:	pop    esi
  43d0a3:	popa   
  43d0a4:	aad    0x99
  43d0a6:	add    ecx,DWORD PTR [ebp+0x61]
  43d0a9:	ds pop esp
  43d0ab:	push   0x7a
  43d0ad:	bound  edx,QWORD PTR [edx+0x69]
  43d0b0:	push   0x47376b
  43d0b5:	add    BYTE PTR [ecx],bl
  43d0b7:	jne    0x43d0b5
  43d0b9:	push   0x2e134639
  43d0be:	repz dec esi
  43d0c0:	pusha  
  43d0c1:	ins    BYTE PTR es:[edi],dx
  43d0c2:	aad    0xf
  43d0c4:	add    al,0x3d
  43d0c6:	daa    
  43d0c7:	dec    esi
  43d0c8:	pop    ebp
  43d0c9:	je     0x43d0fb
  43d0cb:	in     al,0x5e
  43d0cd:	imul   esp,DWORD PTR ds:0x37675842,0x4f
  43d0d4:	popa   
  43d0d5:	ds cld 
  43d0d7:	(bad)  
  43d0d8:	pop    eax
  43d0d9:	pop    edi
  43d0da:	add    eax,0xd52ffca3
  43d0df:	jecxz  0x43d132
  43d0e1:	arpl   sp,si
  43d0e3:	push   ss
  43d0e4:	popa   
  43d0e5:	cmp    eax,0x5f4cb602
  43d0ea:	loope  0x43d105
  43d0ec:	bound  ebp,QWORD PTR [eax+edi*8-0x12]
  43d0f0:	inc    edx
  43d0f1:	add    ch,dl
  43d0f3:	mov    bh,0x2
  43d0f5:	dec    ebp
  43d0f6:	mov    eax,0xc15d61b6
  43d0fb:	or     DWORD PTR [edx-0x39d1449b],esi
  43d101:	push   edi
  43d102:	aad    0x9
  43d104:	dec    ecx
  43d105:	add    al,0x99
  43d107:	cs mov ebx,0xb22ea166
  43d10d:	gs mov ebx,0xd557c62e
  43d113:	or     ebp,esi
  43d115:	add    edx,eax
  43d117:	cmp    eax,esp
  43d119:	bound  eax,QWORD PTR [eax]
  43d11b:	add    BYTE PTR [ecx-0x5bbb54d2],al
  43d121:	or     DWORD PTR [esi],ebp
  43d123:	add    edx,DWORD PTR [esi+ebp*1+0x3f76479b]
  43d12a:	and    BYTE PTR [esi+esi*2+0x4c],0x88
  43d12f:	push   ebx
  43d130:	jo     0x43d13b
  43d132:	push   es
  43d133:	add    al,0x91
  43d135:	and    DWORD PTR cs:[esi+0x49],0x2f
  43d13a:	mov    ds:0xf609d544,eax
  43d13f:	add    eax,DWORD PTR [ebx]
  43d141:	and    edx,DWORD PTR [ebx+0x46]
  43d144:	sub    DWORD PTR [esi],edi
  43d146:	out    0x3,eax
  43d148:	fwait
  43d149:	or     ah,BYTE PTR [edx]
  43d14b:	and    DWORD PTR [bp+0x30],ecx
  43d14f:	inc    esi
  43d150:	cmp    bh,BYTE PTR [esi]
  43d152:	ss add al,0xe6
  43d155:	or     DWORD PTR [esi],esp
  43d157:	push   esi
  43d158:	imul   BYTE PTR [edx]
  43d15a:	xor    esp,DWORD PTR [edi+0x11]
  43d15d:	inc    ebx
  43d15e:	and    eax,0x132cf635
  43d163:	pop    ebx
  43d164:	in     al,dx
  43d165:	daa    
  43d166:	out    0x3,eax
  43d168:	cli    
  43d169:	or     esi,DWORD PTR ds:0x123df867
  43d16f:	push   esi
  43d170:	test   BYTE PTR [ebp+0x26],0x4
  43d174:	in     eax,0xb
  43d176:	add    BYTE PTR [edx],bl
  43d178:	mov    dh,0x3b
  43d17a:	arpl   WORD PTR ds:0x89000990,sp
  43d180:	add    BYTE PTR [eax],al
  43d182:	fadd   DWORD PTR [esi+0x63]
  43d185:	aad    0x0
  43d187:	sub    eax,0x2ae8dd5d
  43d18c:	push   0xffffffe9
  43d18e:	(bad)  
  43d18f:	cmp    al,0xff
  43d191:	lods   eax,DWORD PTR ds:[esi]
  43d192:	mov    edx,0x83cd4230
  43d197:	es push 0xfd70d6e9
  43d19d:	cdq    
  43d19e:	jae    0x43d1dd
  43d1a0:	push   edx
  43d1a1:	nop
  43d1a2:	jnp    0x43d1de
  43d1a4:	jo     0x43d134
  43d1a6:	mov    al,ds:0x7d9b493d
  43d1ab:	dec    esp
  43d1ac:	js     0x43d197
  43d1ae:	(bad)  
  43d1af:	dec    edx
  43d1b0:	inc    esp
  43d1b1:	mov    al,0xc9
  43d1b3:	out    0x29,eax
  43d1b5:	test   DWORD PTR [edx+0x25],edi
  43d1b8:	add    BYTE PTR [eax-0x57b2a72a],ah
  43d1be:	add    DWORD PTR [ebx],ebp
  43d1c0:	push   0x4d
  43d1c2:	(bad)  [ebp+0x0]
  43d1c5:	ss push es
  43d1c7:	test   DWORD PTR [ebp+0x4c],0x61003c36
  43d1ce:	shr    DWORD PTR [ebx],1
  43d1d0:	outs   dx,BYTE PTR ds:[esi]
  43d1d1:	dec    esp
  43d1d2:	sub    al,0x57
  43d1d4:	fs inc ebp
  43d1d6:	pop    es
  43d1d7:	das    
  43d1d8:	push   0x4f
  43d1da:	xor    cl,BYTE PTR [edx]
  43d1dc:	add    BYTE PTR [eax-0x2f],ah
  43d1df:	sub    BYTE PTR [ebx+0x1d],ah
  43d1e2:	clc    
  43d1e3:	sub    eax,0x1b64
  43d1e8:	sbb    BYTE PTR [edx+eiz*2],ah
  43d1eb:	push   es
  43d1ec:	fldl2t 
  43d1ee:	push   DWORD PTR ds:0x3cf6a6
  43d1f4:	pop    esi
  43d1f5:	and    bl,BYTE PTR [ecx+0x74]
  43d1f8:	rol    DWORD PTR [eax+0x6e],1
  43d1fb:	ficom  DWORD PTR gs:[ecx+0x0]
  43d1ff:	add    BYTE PTR [esi],dl
  43d201:	or     ecx,DWORD PTR [edi+0x53]
  43d204:	ins    DWORD PTR es:[edi],dx
  43d205:	inc    edx
  43d206:	outs   dx,BYTE PTR ds:[esi]
  43d207:	or     bl,BYTE PTR gs:[edi+0x4b]
  43d20b:	sbb    BYTE PTR gs:[edx],ah
  43d20e:	pop    ebx
  43d20f:	je     0x43d24d
  43d211:	or     ebx,DWORD PTR [edi]
  43d213:	add    BYTE PTR [ebx-0x4],al
  43d216:	cmp    BYTE PTR [ebp+0xa],al
  43d219:	push   edx
  43d21a:	gs dec esi
  43d21c:	and    DWORD PTR [edi+0x6f],ebx
  43d21f:	outs   dx,DWORD PTR ds:[esi]
  43d220:	dec    esi
  43d221:	push   esp
  43d222:	cmp    eax,0x74555176
  43d227:	jae    0x43d215
  43d229:	or     al,BYTE PTR [edi]
  43d22b:	add    BYTE PTR [ebx],dh
  43d22d:	cld    
  43d22e:	cmp    BYTE PTR [ecx+0x50],al
  43d231:	das    
  43d232:	push   0x65
  43d234:	pop    edi
  43d235:	pop    ebx
  43d236:	push   esp
  43d237:	outs   dx,DWORD PTR ds:[esi]
  43d238:	aas    
  43d239:	pop    edi
  43d23a:	push   0x69
  43d23c:	pop    edx
  43d23d:	das    
  43d23e:	dec    edi
  43d23f:	add    BYTE PTR [edx-0x12acb0f6],al
  43d245:	hlt    
  43d246:	data16 arpl WORD PTR [eax],sp
  43d249:	sub    al,BYTE PTR [eax]
  43d24b:	add    BYTE PTR [eax],al
  43d24d:	add    BYTE PTR [edi-0x2acb0f6],ah
  43d253:	dec    edx
  43d254:	ins    BYTE PTR es:[edi],dx
  43d255:	outs   dx,DWORD PTR ds:[esi]
  43d256:	fbld   TBYTE PTR [eax]
  43d258:	cmp    eax,0x74581176
  43d25d:	add    bl,dh
  43d25f:	cli    
  43d260:	sub    DWORD PTR [edi-0x71],ebx
  43d263:	sbb    BYTE PTR [esi],ah
  43d265:	fs call 0x8343d294
  43d26b:	or     eax,0xf8d54650
  43d270:	cmp    ch,BYTE PTR [ebx-0x1b]
  43d273:	mov    bh,0x4e
  43d275:	je     0x43d28d
  43d277:	push   es
  43d278:	dec    esi
  43d279:	je     0x43d281
  43d27b:	mov    ebp,0xa0b86e59
  43d280:	cld    
  43d281:	push   ds
  43d282:	aad    0xe3
  43d284:	data16 outs dx,BYTE PTR ds:[esi]
  43d286:	leave  
  43d287:	fs ins BYTE PTR es:[di],dx
  43d28a:	mov    al,0xdc
  43d28c:	addr16 cmp eax,0x6750d2b8
  43d292:	mov    bl,0xc9
  43d294:	pop    ebp
  43d295:	pop    edi
  43d296:	test   eax,0xaa6e42c5
  43d29b:	lds    ebp,FWORD PTR ds:0x67728274
  43d2a1:	add    ch,dl
  43d2a3:	cdq    
  43d2a4:	cld    
  43d2a5:	cmp    al,0x78
  43d2a7:	xchg   edx,eax
  43d2a8:	push   eax
  43d2a9:	dec    ecx
  43d2aa:	test   DWORD PTR [ebp-0x6c93b2a6],ecx
  43d2b0:	push   eax
  43d2b1:	arpl   WORD PTR [eax],ax
  43d2b3:	add    BYTE PTR [eax+0x73],bh
  43d2b6:	push   eax
  43d2b7:	imul   esp,DWORD PTR [edi-0x7b],0xd2d50031
  43d2be:	cld    
  43d2bf:	cmp    al,0x38
  43d2c1:	xor    DWORD PTR [ecx+0x3d],edx
  43d2c4:	cmp    DWORD PTR [esi+ecx*2],esi
  43d2c7:	arpl   WORD PTR [esi],sp
  43d2c9:	push   edi
  43d2ca:	pop    ebx
  43d2cb:	outs   dx,BYTE PTR ds:[esi]
  43d2cc:	xor    BYTE PTR [ebx-0x202ad404],ah
  43d2d2:	pusha  
  43d2d3:	outs   dx,BYTE PTR ds:[esi]
  43d2d4:	and    esi,ebp
  43d2d6:	pop    ecx
  43d2d7:	jae    0x43d309
  43d2d9:	loopne 0x43d33b
  43d2db:	outs   dx,BYTE PTR ds:[esi]
  43d2dc:	and    DWORD PTR [edx+0x62],ebx
  43d2df:	test   BYTE PTR [bx+di+0x58],0x63
  43d2e4:	push   es
  43d2e5:	jmp    0x5212:0xa094d59
  43d2ec:	test   BYTE PTR [ecx],0xc4
  43d2ef:	add    esi,DWORD PTR [eax+0x1158152e]
  43d2f5:	aas    
  43d2f6:	pop    ss
  43d2f7:	pusha  
  43d2f8:	cli    
  43d2f9:	sub    BYTE PTR [eax],cl
  43d2fb:	pop    eax
  43d2fc:	test   BYTE PTR [eax+0x4],0x52
  43d300:	leave  
  43d301:	and    cl,BYTE PTR [ecx]
  43d303:	pop    ebx
  43d304:	test   al,0x2a
  43d306:	repz data16 add BYTE PTR ds:0x31b657d1,ah
  43d30e:	rol    DWORD PTR [ebx],cl
  43d310:	(bad)  
  43d311:	or     dh,BYTE PTR [edi-0x30b172bb]
  43d317:	push   ebx
  43d318:	add    BYTE PTR [eax],al
  43d31a:	lods   al,BYTE PTR ds:[esi]
  43d31b:	aaa    
  43d31c:	mov    ebx,0xb337b640
  43d321:	xor    BYTE PTR [ecx-0x69994adc],cl
  43d327:	xor    edi,esp
  43d329:	add    ebp,DWORD PTR [eax]
  43d32b:	or     ah,BYTE PTR [esi-0x6cc67daf]
  43d331:	ss jg  0x43d36d
  43d334:	xchg   ebp,eax
  43d335:	pop    esp
  43d336:	popa   
  43d337:	xchg   BYTE PTR cs:[edi-0x67],dl
  43d33b:	sub    bh,BYTE PTR [ebx+0x62]
  43d33e:	aad    0x9
  43d340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d341:	xor    DWORD PTR [edx],ebp
  43d343:	pop    edx
  43d344:	fwait
  43d345:	adc    bl,bh
  43d347:	jecxz  0x43d2cb
  43d349:	pop    edi
  43d34a:	xor    DWORD PTR [edx],ecx
  43d34c:	inc    eax
  43d34d:	add    al,0xd
  43d34f:	ds push ebx
  43d351:	push   esp
  43d352:	and    bh,BYTE PTR [edi]
  43d354:	dec    esp
  43d355:	push   edx
  43d356:	and    al,BYTE PTR [ebx+0x39]
  43d359:	data16 sub al,0x4b
  43d35c:	out    0x3,eax
  43d35e:	sub    cl,BYTE PTR [edx]
  43d360:	xor    BYTE PTR [esi+0x9],bl
  43d363:	das    
  43d364:	add    BYTE PTR [ebx],bh
  43d366:	sub    ebp,DWORD PTR [ecx]
  43d368:	je     0x43d394
  43d36a:	and    BYTE PTR [eax],ah
  43d36c:	push   0xc
  43d36e:	hlt    
  43d36f:	cmp    eax,0x8fd6e93f
  43d374:	call   FWORD PTR [edi]
  43d376:	or     edi,DWORD PTR [esi]
  43d378:	arpl   WORD PTR [ebx],bx
  43d37a:	add    ebp,DWORD PTR [ecx]
  43d37c:	je     0x43d396
  43d37e:	add    BYTE PTR [eax],al
  43d380:	add    ch,BYTE PTR [ecx]
  43d382:	outs   dx,BYTE PTR ds:[esi]
  43d383:	add    BYTE PTR [eax],dl
  43d385:	cmp    dh,BYTE PTR [eax+eax*1-0x58]
  43d389:	pop    ds
  43d38a:	push   ecx
  43d38b:	jmp    0xb0436666
  43d390:	cwde   
  43d391:	cmp    eax,0x2890db63
  43d396:	je     0x43d353
  43d398:	mov    bl,0x54
  43d39a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  43d39c:	jg     0x43d3c3
  43d39e:	arpl   cx,bp
  43d3a0:	(bad)  
  43d3a1:	jmp    FWORD PTR gs:[edi-0x449cc250]
  43d3a8:	test   al,0x28
  43d3aa:	je     0x43d346
  43d3ac:	jnp    0x43d3eb
  43d3ae:	dec    ecx
  43d3af:	cdq    
  43d3b0:	mov    ds:0x978f692c,al
  43d3b5:	or     DWORD PTR [eax],eax
  43d3b7:	mov    esi,0x957441d6
  43d3bc:	xchg   BYTE PTR [edx+0x70],al
  43d3bf:	mov    WORD PTR [eax+0x43],?
  43d3c2:	arpl   WORD PTR [eax+0x2b],di
  43d3c5:	daa    
  43d3c6:	ins    DWORD PTR es:[edi],dx
  43d3c7:	jge    0x43d3e0
  43d3c9:	or     al,BYTE PTR [eax]
  43d3cb:	fwait
  43d3cc:	(bad)  
  43d3cd:	inc    ecx
  43d3ce:	je     0x43d42d
  43d3d0:	and    ebx,esi
  43d3d2:	arpl   WORD PTR [ebp-0x15],ax
  43d3d5:	outs   dx,DWORD PTR es:[esi]
  43d3d7:	pop    esp
  43d3d8:	xor    al,0x25
  43d3da:	je     0x43d3fd
  43d3dc:	xor    al,0x53
  43d3de:	add    BYTE PTR fs:[ecx],cl
  43d3e1:	pop    esp
  43d3e2:	imul   eax,DWORD PTR [ecx+0x0],0x0
  43d3e6:	jl     0x43d3ef
  43d3e8:	push   ebx
  43d3e9:	add    BYTE PTR [ecx+ebx*2+0x28df7074],dh
  43d3f0:	fs mov si,0x6928
  43d3f5:	jne    0x43d3d0
  43d3f7:	pop    edx
  43d3f8:	je     0x43d43b
  43d3fa:	jl     0x43d403
  43d3fc:	pop    DWORD PTR [eax]
  43d3fe:	mov    ch,0x4f
  43d400:	je     0x43d467
  43d402:	pop    esi
  43d403:	push   ecx
  43d404:	pop    ebp
  43d405:	je     0x43d40a
  43d407:	pop    esi
  43d408:	pop    ebp
  43d409:	outs   dx,BYTE PTR ds:[esi]
  43d40a:	std    
  43d40b:	or     eax,0x4ff50063
  43d410:	je     0x43d477
  43d412:	push   ds
  43d413:	push   ecx
  43d414:	pop    ebp
  43d415:	je     0x43d496
  43d417:	pop    ebx
  43d418:	addr16 jae 0x43d434
  43d41b:	out    dx,eax
  43d41c:	pop    eax
  43d41d:	outs   dx,BYTE PTR ds:[esi]
  43d41e:	sbb    BYTE PTR [ebx+0x5d],bl
  43d421:	add    BYTE PTR [ecx+0x486e410d],dh
  43d427:	sub    ch,BYTE PTR [edx+0x6e]
  43d42a:	sbb    DWORD PTR [ebx+0x49],eax
  43d42d:	jne    0x43d448
  43d42f:	pop    ebp
  43d430:	jno    0x43d481
  43d432:	pop    esp
  43d433:	inc    ebx
  43d434:	popa   
  43d435:	outs   dx,DWORD PTR ds:[esi]
  43d436:	bound  ecx,QWORD PTR [esi+0x0]
  43d439:	add    BYTE PTR [eax+0x486e410d],bl
  43d43f:	sub    ch,BYTE PTR [edx+0x6e]
  43d442:	dec    ecx
  43d443:	inc    ebx
  43d444:	dec    ebx
  43d445:	gs dec eax
  43d447:	dec    esp
  43d448:	outs   dx,DWORD PTR ds:[si]
  43d44a:	add    BYTE PTR [eax],al
  43d44c:	push   edi
  43d44d:	push   ebp
  43d44e:	pop    ebp
  43d44f:	inc    ecx
  43d450:	lods   al,BYTE PTR ds:[esi]
  43d451:	push   es
  43d452:	imul   eax,DWORD PTR [eax],0x5
  43d455:	push   eax
  43d456:	je     0x43d4bd
  43d458:	push   cs
  43d459:	push   eax
  43d45a:	pop    ebp
  43d45b:	je     0x43d432
  43d45d:	fist   WORD PTR [ecx+0x5f]
  43d460:	ss dec eax
  43d462:	das    
  43d463:	outs   dx,BYTE PTR ds:[esi]
  43d464:	sub    edx,esp
  43d466:	add    ebx,DWORD PTR [ebp+edx*8-0x8]
  43d46a:	dec    edi
  43d46b:	je     0x43d472
  43d46d:	adc    BYTE PTR [edi+0x6a],bl
  43d470:	stc    
  43d471:	push   cs
  43d472:	pop    edi
  43d473:	outs   dx,DWORD PTR ds:[esi]
  43d474:	add    BYTE PTR [esi],al
  43d476:	push   ecx
  43d477:	je     0x43d491
  43d479:	jmp    0xfe18d4c0
  43d47e:	add    ecx,DWORD PTR [eax-0x17]
  43d481:	sbb    al,0x54
  43d483:	dec    ebp
  43d484:	lock sbb ah,BYTE PTR [eax+0x4e]
  43d488:	mov    eax,0xc6634fb1
  43d48d:	mov    ah,0x3f
  43d48f:	js     0x43d43b
  43d491:	mov    al,ds:0x79d5acfc
  43d496:	push   esi
  43d497:	je     0x43d451
  43d499:	into   
  43d49a:	push   esi
  43d49b:	arpl   WORD PTR [ecx-0x798ba091],sp
  43d4a1:	fsub   QWORD PTR [ebx+0x74]
  43d4a4:	mov    al,ds:0x815f416f
  43d4a9:	les    esp,FWORD PTR [edx+0x5f]
  43d4ac:	jbe    0x43d475
  43d4ae:	inc    ebx
  43d4af:	add    BYTE PTR [eax],al
  43d4b1:	add    ch,dl
  43d4b3:	push   edi
  43d4b4:	std    
  43d4b5:	inc    esi
  43d4b6:	imul   edx,DWORD PTR [edi+ebx*2+0x488d836e],0x4f
  43d4be:	pusha  
  43d4bf:	test   DWORD PTR [edx+0x77],edx
  43d4c2:	cdq    
  43d4c3:	or     DWORD PTR [eax+0x5f],0x67643294
  43d4ca:	inc    ecx
  43d4cb:	and    BYTE PTR [edx+0x6c],0x30
  43d4cf:	mov    ds:0x69d59ffc,eax
  43d4d4:	push   esi
  43d4d5:	je     0x43d507
  43d4d7:	or     dl,BYTE PTR [ebp+0x5a]
  43d4da:	ss ss xor eax,0x29260a5f
  43d4e1:	pop    ebx
  43d4e2:	xor    DWORD PTR [edi],esp
  43d4e4:	and    al,0x4c
  43d4e6:	fimul  DWORD PTR [ecx]
  43d4e8:	and    DWORD PTR [ebx*1+0x18543336],eax
  43d4ef:	daa    
  43d4f0:	inc    ecx
  43d4f1:	pusha  
  43d4f2:	adc    esp,DWORD PTR [edi]
  43d4f4:	cmp    BYTE PTR [edi-0xa],cl
  43d4f7:	cmp    al,0x1b
  43d4f9:	xor    ebp,edx
  43d4fb:	or     DWORD PTR [ebx+0x4],edx
  43d4fe:	adc    ah,BYTE PTR [eax]
  43d500:	sbb    ebx,DWORD PTR [edi-0xd]
  43d503:	pop    ds
  43d504:	add    al,0x50
  43d506:	or     BYTE PTR [edi],ah
  43d508:	sti    
  43d509:	xor    al,0xc9
  43d50b:	sub    dh,bl
  43d50d:	dec    esi
  43d50e:	mov    eax,0xb158084c
  43d513:	sub    ecx,DWORD PTR [eax]
  43d515:	add    BYTE PTR gs:[eax],al
  43d518:	mov    al,0x58
  43d51a:	out    0x3,eax
  43d51c:	cdq    
  43d51d:	or     DWORD PTR [edx-0x2aa95ea2],esp
  43d523:	push   edi
  43d524:	loopne 0x43d550
  43d526:	(bad)  
  43d527:	pop    ebx
  43d528:	mov    dh,0x46
  43d52a:	ror    DWORD PTR [edi-0x7d],1
  43d52d:	xor    dh,BYTE PTR [eax-0x65df88a7]
  43d533:	add    edx,DWORD PTR [eax-0x7eb060f7]
  43d539:	cmp    DWORD PTR [eax-0x7ba486a1],ebp
  43d53f:	push   edx
  43d540:	es xchg si,ax
  43d543:	dec    edi
  43d544:	lea    esp,[esi]
  43d546:	mov    BYTE PTR [edi+0x76],bl
  43d549:	cmp    esi,DWORD PTR [esi+0x30]
  43d54c:	aad    0x9
  43d54e:	xchg   edx,eax
  43d54f:	cmp    bl,BYTE PTR [edi]
  43d551:	inc    ebx
  43d552:	add    BYTE PTR [edi-0x7ad5a9fd],ah
  43d558:	and    bl,BYTE PTR [esi]
  43d55a:	add    BYTE PTR [esi],dh
  43d55c:	in     eax,dx
  43d55d:	dec    esp
  43d55e:	aas    
  43d55f:	xor    al,0xe5
  43d561:	fisubr WORD PTR ds:0x6c1e3507
  43d567:	jmp    0x37438842
  43d56c:	xor    dh,BYTE PTR [esi]
  43d56e:	push   ebx
  43d56f:	cmp    ch,BYTE PTR [edx]
  43d571:	and    BYTE PTR [ecx+0x4c],al
  43d574:	and    eax,0x1c476a49
  43d579:	or     al,BYTE PTR [eax]
  43d57b:	or     al,0x0
  43d57d:	add    cl,bl
  43d57f:	inc    ebx
  43d580:	arpl   WORD PTR ds:0x2b673a16,dx
  43d586:	adc    ch,BYTE PTR [edx+eiz*2]
  43d589:	add    al,0x3
  43d58b:	dec    esp
  43d58c:	outs   dx,BYTE PTR ds:[esi]
  43d58d:	or     al,0xb2
  43d58f:	or     DWORD PTR [eax],eax
  43d591:	jl     0x43d569
  43d593:	inc    ebx
  43d594:	arpl   bp,di
  43d596:	repz push ds
  43d598:	arpl   bx,di
  43d59a:	sti    
  43d59b:	and    esi,DWORD PTR [ebx-0x2c]
  43d59e:	(bad)  
  43d59f:	inc    ebx
  43d5a0:	inc    ebx
  43d5a1:	mov    ch,0x97
  43d5a3:	pop    ecx
  43d5a4:	inc    edi
  43d5a5:	sbb    cl,bl
  43d5a7:	jecxz  0x43d60c
  43d5a9:	mov    ebp,0x9f000982
  43d5ae:	xlat   BYTE PTR ds:[ebx]
  43d5af:	push   edx
  43d5b0:	arpl   WORD PTR [ebx-0x1696dc60],di
  43d5b6:	(bad)  
  43d5b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d5b8:	add    edi,DWORD PTR [ebx+ebx*4-0x6066a2dc]
  43d5bf:	or     DWORD PTR [eax],eax
  43d5c1:	adc    dl,ch
  43d5c3:	and    ah,BYTE PTR [ebx-0x7c]
  43d5c6:	jns    0x43d5ec
  43d5c8:	jo     0x43d5b3
  43d5ca:	(bad)  
  43d5cb:	mov    ds:0x50690003,eax
  43d5d0:	gs jae 0x43d624
  43d5d3:	aas    
  43d5d4:	add    BYTE PTR [eax],al
  43d5d6:	sub    al,BYTE PTR [esi]
  43d5d8:	push   edi
  43d5d9:	jne    0x43d613
  43d5db:	aas    
  43d5dc:	addr16 ja 0x43d59b
  43d5df:	or     edi,esp
  43d5e1:	add    al,BYTE PTR [eax]
  43d5e3:	add    bl,ch
  43d5e5:	push   ebp
  43d5e6:	ins    DWORD PTR es:[edi],dx
  43d5e7:	jb     0x43d5fa
  43d5e9:	sub    ebx,DWORD PTR [ecx+0x6c]
  43d5ec:	fadd   DWORD PTR ds:0x2c1d046f
  43d5f2:	imul   eax,DWORD PTR [eax],0xffffff98
  43d5f5:	or     ah,BYTE PTR [ebp+0x65]
  43d5f8:	sbb    DWORD PTR [ecx+0x67],edx
  43d5fb:	jbe    0x43d60e
  43d5fd:	push   es
  43d5fe:	pushf  
  43d5ff:	add    ebx,DWORD PTR [ebx]
  43d601:	pop    ecx
  43d602:	ins    BYTE PTR es:[edi],dx
  43d603:	je     0x43d5e0
  43d605:	and    al,0x0
  43d607:	add    ch,dl
  43d609:	or     DWORD PTR [edi+0x77],edx
  43d60c:	rcl    BYTE PTR [esi+0x61],0x0
  43d610:	or     ah,BYTE PTR fs:[ebp+0x65]
  43d614:	fldcw  WORD PTR [edx]
  43d616:	push   0x140b2c72
  43d61b:	add    eax,0x636a3f3f
  43d620:	or     DWORD PTR [ebx+0x0],ebx
  43d623:	add    BYTE PTR [ecx],bl
  43d625:	pop    esp
  43d626:	outs   dx,BYTE PTR ds:[esi]
  43d627:	arpl   si,di
  43d629:	ds es fs pop eax
  43d62d:	push   edi
  43d62e:	add    BYTE PTR [eax],al
  43d630:	bound  ecx,QWORD PTR [edx]
  43d632:	pop    esi
  43d633:	jb     0x43d646
  43d635:	sub    al,BYTE PTR [eax]
  43d637:	add    BYTE PTR [esi+0x38736109],ch
  43d63d:	sub    bl,BYTE PTR [ecx+0x64]
  43d640:	pop    esi
  43d641:	ds je  0x43d6a9
  43d644:	cld    
  43d645:	or     dl,bl
  43d647:	add    DWORD PTR [eax],eax
  43d649:	add    ch,dl
  43d64b:	ja     0x43d6a8
  43d64d:	imul   esi,DWORD PTR [edi-0x60],0x67d628fc
  43d654:	dec    ebp
  43d655:	push   0x45
  43d657:	xor    ebx,DWORD PTR [edx+ebp*2+0x49]
  43d65b:	jg     0x43d659
  43d65d:	xlat   BYTE PTR cs:[ebx]
  43d65f:	jg     0x43d6bc
  43d661:	je     0x43d6a5
  43d663:	inc    edx
  43d664:	add    al,0x6a
  43d666:	rcl    BYTE PTR [edi+0x5d],1
  43d669:	je     0x43d69d
  43d66b:	inc    esi
  43d66c:	pop    esi
  43d66d:	add    ch,dl
  43d66f:	pop    esi
  43d670:	clc    
  43d671:	push   0xfffffff4
  43d673:	push   esp
  43d674:	pop    eax
  43d675:	imul   esi,esi,0xd582fca0
  43d67b:	pop    ss
  43d67c:	and    DWORD PTR [esi-0xc],ebx
  43d67f:	inc    esp
  43d680:	pop    ebx
  43d681:	imul   edi,esp,0xd5695a16
  43d687:	pop    edi
  43d688:	cld    
  43d689:	pop    eax
  43d68a:	add    dl,BYTE PTR [ecx]
  43d68c:	pop    ebx
  43d68d:	imul   ebp,esp,0xd5695aae
  43d693:	pop    ss
  43d694:	add    ebx,DWORD PTR [ecx-0x4d]
  43d697:	sbb    DWORD PTR [eax+0x63],ebx
  43d69a:	mov    bl,0x7
  43d69c:	add    al,0x45
  43d69e:	xlat   BYTE PTR ds:[ebx]
  43d69f:	call   DWORD PTR [edi+0x6d]
  43d6a2:	mov    eax,0xe36755bd
  43d6a7:	adc    al,0x4
  43d6a9:	dec    eax
  43d6aa:	fnstenv [edi+0x49]
  43d6ad:	outs   dx,BYTE PTR ds:[esi]
  43d6ae:	add    BYTE PTR [eax],al
  43d6b0:	lods   al,BYTE PTR ds:[esi]
  43d6b1:	aam    0x5f
  43d6b3:	add    ch,dl
  43d6b5:	out    0x3,al
  43d6b7:	pop    ecx
  43d6b8:	jl     0x43d72d
  43d6ba:	arpl   WORD PTR [ecx+ecx*4+0x79],si
  43d6be:	cld    
  43d6bf:	xchg   dh,dl
  43d6c1:	(bad)  
  43d6c2:	dec    edi
  43d6c3:	je     0x43d72a
  43d6c5:	or     DWORD PTR [edi+ecx*2+0x50852491],ebx
  43d6cc:	je     0x43d728
  43d6ce:	fwait
  43d6cf:	push   ecx
  43d6d0:	jb     0x43d6f1
  43d6d2:	add    BYTE PTR [ebp+edx*8+0x9],0xdf
  43d6d7:	call   FWORD PTR [eax]
  43d6d9:	mov    esi,DWORD PTR ss:[eax]
  43d6dc:	das    
  43d6dd:	xor    eax,0xa315580
  43d6e2:	daa    
  43d6e3:	add    al,0x14
  43d6e5:	daa    
  43d6e6:	pop    ebx
  43d6e7:	inc    ecx
  43d6e8:	cmp    BYTE PTR es:[ebp+0x5f],dl
  43d6ec:	das    
  43d6ed:	ss aaa 
  43d6ef:	push   edx
  43d6f0:	sub    al,0x29
  43d6f2:	inc    esp
  43d6f3:	push   ecx
  43d6f4:	add    BYTE PTR [edx],cl
  43d6f6:	xchg   esi,eax
  43d6f7:	add    BYTE PTR [esi],ah
  43d6f9:	sbb    al,0x4f
  43d6fb:	arpl   di,bp
  43d6fd:	and    eax,0x46f15f43
  43d702:	das    
  43d703:	popa   
  43d704:	idiv   BYTE PTR [ecx]
  43d706:	sbb    ebx,DWORD PTR [ebx-0x4]
  43d709:	sbb    esp,DWORD PTR [ecx]
  43d70b:	pop    ebx
  43d70c:	icebp  
  43d70d:	xor    eax,0x9d5520c
  43d712:	inc    esp
  43d713:	add    BYTE PTR [eax],al
  43d715:	add    BYTE PTR [eax-0x40d104da],ah
  43d71b:	and    DWORD PTR [eax],ecx
  43d71d:	push   esi
  43d71e:	mov    ecx,0x96600c1d
  43d723:	xor    DWORD PTR [esi],eax
  43d725:	pop    edi
  43d726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d727:	xor    eax,0x43bf54d0
  43d72c:	rcl    BYTE PTR [edi-0x57],1
  43d72f:	es aad 0x3
  43d732:	jge    0x43d73e
  43d734:	stos   BYTE PTR es:[edi],al
  43d735:	pop    esi
  43d736:	lea    ebp,[eax]
  43d738:	int3   
  43d739:	push   ebx
  43d73a:	or     DWORD PTR [edi+ecx*8+0x62],0xc500256f
  43d742:	fwait
  43d743:	sbb    ebp,DWORD PTR ds:0x9d6e9
  43d749:	jmp    0xe943e124
  43d74e:	(bad)  
  43d74f:	or     DWORD PTR [eax],eax
  43d751:	jmp    0xe943e12c
  43d756:	(bad)  
  43d757:	or     DWORD PTR [eax],eax
  43d759:	jmp    0xe943e134
  43d75e:	(bad)  
  43d75f:	or     DWORD PTR [eax],eax
  43d761:	jmp    0xe943e13c
  43d766:	(bad)  
  43d767:	or     DWORD PTR [eax],eax
  43d769:	jmp    0xe943e144
  43d76e:	(bad)  
  43d76f:	or     DWORD PTR [eax],eax
  43d771:	jmp    0xe943e14c
  43d776:	(bad)  
  43d777:	or     DWORD PTR [eax],eax
  43d779:	jmp    0xa19d77e
  43d77e:	add    cl,ch
  43d780:	(bad)  
  43d781:	or     DWORD PTR [eax],eax
  43d783:	jmp    0xe943e15e
  43d788:	(bad)  
  43d789:	or     DWORD PTR [eax],eax
  43d78b:	jmp    0xe943e166
  43d790:	(bad)  
  43d791:	or     DWORD PTR [eax],eax
  43d793:	jmp    0xe943e16e
  43d798:	(bad)  
  43d799:	or     DWORD PTR [eax],eax
  43d79b:	jmp    0xe943e176
  43d7a0:	(bad)  
  43d7a1:	or     DWORD PTR [eax],eax
  43d7a3:	jmp    0xe943e17e
  43d7a8:	(bad)  
  43d7a9:	or     DWORD PTR [eax],eax
  43d7ab:	jmp    0xe943e186
  43d7b0:	(bad)  
  43d7b1:	or     DWORD PTR [eax],eax
  43d7b3:	jmp    0xe943e18e
  43d7b8:	(bad)  
  43d7b9:	or     DWORD PTR [eax],eax
  43d7bb:	add    ah,bh
  43d7bd:	pop    es
  43d7be:	add    BYTE PTR [eax],al
  43d7c0:	in     al,dx
  43d7c1:	pop    es
  43d7c2:	add    BYTE PTR [eax],al
  43d7c4:	in     al,dx
  43d7c5:	pop    es
  43d7c6:	add    BYTE PTR [eax],al
  43d7c8:	cld    
  43d7c9:	pop    es
  43d7ca:	add    BYTE PTR [eax],al
  43d7cc:	cld    
  43d7cd:	pop    es
  43d7ce:	add    BYTE PTR [eax],al
  43d7d0:	in     al,dx
  43d7d1:	pop    es
  43d7d2:	add    BYTE PTR [eax],al
  43d7d4:	xor    cl,dh
  43d7d6:	cmp    BYTE PTR [ebx+0x44b7a02d],bh
  43d7dc:	mov    esp,0x7
  43d7e1:	add    BYTE PTR [edi+eax*1-0x61d80000],ch
  43d7e8:	cmp    BYTE PTR [eax],al
  43d7ea:	sub    BYTE PTR [esi+0xdc0038],bl
  43d7f0:	mov    ebx,DWORD PTR [ecx]
  43d7f2:	lods   al,BYTE PTR ds:[esi]
  43d7f3:	pop    es
  43d7f4:	add    BYTE PTR [eax],al
  43d7f6:	lods   al,BYTE PTR ds:[esi]
  43d7f7:	pop    es
  43d7f8:	add    BYTE PTR [eax],al
  43d7fa:	jl     0x43d803
  43d7fc:	add    BYTE PTR [eax],al
  43d7fe:	jl     0x43d803
  43d800:	add    BYTE PTR [eax],al
  43d802:	ins    DWORD PTR es:[edi],dx
  43d803:	imul   esi,edi,0xffffffff
  43d806:	jns    0x43d80f
  43d808:	add    BYTE PTR [eax],al
  43d80a:	ja     0x43d813
  43d80c:	add    BYTE PTR [eax],al
  43d80e:	mov    esp,0x43000005
  43d813:	add    eax,DWORD PTR [eax]
  43d815:	add    ah,ch
  43d817:	add    eax,0xc6bd0000
  43d81c:	idiv   edi
  43d81e:	xor    al,0x7
  43d820:	add    BYTE PTR [eax],al
  43d822:	inc    esp
  43d823:	pop    es
  43d824:	add    BYTE PTR [eax],al
  43d826:	or     al,0x7
  43d828:	add    BYTE PTR [eax],al
  43d82a:	inc    ebx
  43d82b:	pop    es
  43d82c:	add    BYTE PTR [eax],al
  43d82e:	cmp    al,0x7
  43d830:	add    BYTE PTR [eax],al
  43d832:	sub    al,0x7
  43d834:	add    BYTE PTR [eax],al
  43d836:	aad    0xa0
  43d838:	pop    esp
  43d839:	std    
  43d83a:	shl    BYTE PTR [eax-0x5f2a0004],cl
  43d840:	cld    
  43d841:	call   ebp
  43d843:	mov    al,ds:0x2c4
  43d848:	xchg   ebp,eax
  43d849:	mov    al,ds:0xa0d5fffc
  43d84e:	cld    
  43d84f:	call   ebp
  43d851:	mov    al,ds:0xa09507ba
  43d856:	cld    
  43d857:	call   ebp
  43d859:	mov    al,ds:0x60d5fffc
  43d85e:	cwde   
  43d85f:	or     edx,DWORD PTR ds:0xd5fffca1
  43d865:	mov    al,ds:0x90d5fffc
  43d86a:	ror    DWORD PTR [eax],0x15
  43d86d:	mov    eax,ds:0xa0d5fffc
  43d872:	cld    
  43d873:	call   ebp
  43d875:	add    al,0xb8
  43d877:	or     eax,0xfffca115
  43d87c:	aad    0xa0
  43d87e:	cld    
  43d87f:	call   DWORD PTR [ebp+0x4a]
  43d882:	xchg   ebp,eax
  43d883:	adc    DWORD PTR ds:0xd5fffca1,edx
  43d889:	mov    al,ds:0x1cb5fffc
  43d88e:	jg     0x43d8a6
  43d890:	adc    eax,0xd5fffca1
  43d895:	mov    al,ds:0xb78cb900
  43d89a:	mov    ?,WORD PTR [ebx]
  43d89c:	xchg   ebp,eax
  43d89d:	mov    al,ds:0x9574fffc
  43d8a2:	enter  0xdec9,0x5e
  43d8a6:	ror    DWORD PTR [ecx-0x6b],1
  43d8a9:	shr    BYTE PTR [ecx+ebx*4-0x4f980000],0xe9
  43d8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d8b2:	js     0x43d8bd
  43d8b4:	sub    al,0xa0
  43d8b6:	mov    ebx,0x1e603749
  43d8bb:	in     al,0x4b
  43d8bd:	sbb    eax,0xaef03a5f
  43d8c2:	mov    DWORD PTR [ecx-0x48],ecx
  43d8c5:	cdq    
  43d8c6:	and    eax,0xd611a594
  43d8cb:	jl     0x43d8cc
  43d8cd:	jb     0x43d91b
  43d8cf:	dec    ecx
  43d8d0:	xor    BYTE PTR [edx-0x7bebbab6],al
  43d8d6:	sar    BYTE PTR [edx+0x67],1
  43d8d9:	test   DWORD PTR [ebx],esp
  43d8db:	dec    ecx
  43d8dc:	push   edx
  43d8dd:	jmp    DWORD PTR [edi+0x13c21970]
  43d8e3:	or     DWORD PTR [edi-0x3b],edi
  43d8e6:	xchg   ecx,eax
  43d8e7:	dec    edx
  43d8e8:	mov    cl,cl
  43d8ea:	call   0x2d51:0x9b82ff96
  43d8f1:	xchg   esi,eax
  43d8f2:	jb     0x43d93f
  43d8f4:	mov    ds:0x23f3987,eax
  43d8f9:	sti    
  43d8fa:	dec    edi
  43d8fb:	mov    eax,ds:0x4c0ea456
  43d900:	mov    ebx,edi
  43d902:	pop    esp
  43d903:	enter  0x9fbf,0x89
  43d907:	mov    ch,0x38
  43d909:	outs   dx,BYTE PTR ds:[esi]
  43d90a:	or     ecx,DWORD PTR [ebp-0x78]
  43d90d:	stos   BYTE PTR es:[edi],al
  43d90e:	in     al,0xac
  43d910:	call   0x6af8:0xb30000b6
  43d917:	xor    DWORD PTR [ebp+ecx*2+0x73c413cf],0xffffff8e
  43d91f:	jb     0x43d903
  43d921:	lods   al,BYTE PTR ds:[esi]
  43d922:	mov    ds:0x8e4e40c8,eax
  43d927:	imul   esp,DWORD PTR [esi],0x1bad719d
  43d92d:	push   esp
  43d92e:	add    bl,dh
  43d930:	dec    ebx
  43d931:	rol    BYTE PTR [edx+0x4],cl
  43d934:	add    eax,0xacf78eca
  43d939:	jb     0x43d8da
  43d93b:	add    BYTE PTR [eax-0x7a],dh
  43d93e:	inc    ecx
  43d93f:	in     al,0xbb
  43d941:	cli    
  43d942:	or     edx,esp
  43d944:	push   edi
  43d945:	mov    esi,DWORD PTR [edx-0x41]
  43d948:	sqrtps xmm1,XMMWORD PTR [ebx-0x5f]
  43d94c:	nop
  43d94d:	lods   eax,DWORD PTR ds:[esi]
  43d94e:	mov    al,ds:0x32ddee5a
  43d953:	jno    0x43d9b8
  43d955:	mov    bl,0x4c
  43d957:	mov    ah,0x6d
  43d959:	stos   DWORD PTR es:[edi],eax
  43d95a:	pop    edx
  43d95b:	fcom   QWORD PTR [ebx]
  43d95d:	inc    esp
  43d95e:	xor    eax,0x55967762
  43d963:	push   cs
  43d964:	sub    ch,BYTE PTR [edi+ebp*8+0x48]
  43d968:	mov    ecx,0x65445368
  43d96d:	fstp   DWORD PTR [esi+0x18]
  43d970:	jb     0x43d8ff
  43d972:	push   ebp
  43d973:	bound  ecx,QWORD PTR [ecx+0x705aeb]
  43d979:	add    BYTE PTR [edi-0x43],bl
  43d97c:	pusha  
  43d97d:	xchg   ebx,eax
  43d97e:	inc    ebx
  43d97f:	mov    al,ds:0x86540eec
  43d984:	(bad)  
  43d985:	sub    al,0xaa
  43d987:	sub    BYTE PTR [edx+0x35],ch
  43d98a:	mov    ?,WORD PTR [ebp-0x70]
  43d98d:	or     DWORD PTR [ebx-0x5a],ecx
  43d990:	dec    esi
  43d991:	dec    ecx
  43d992:	popf   
  43d993:	jmp    0x43da07
  43d995:	jmp    0xb443e370
  43d99a:	xchg   edx,eax
  43d99b:	ror    ebx,cl
  43d99d:	lods   eax,DWORD PTR ds:[esi]
  43d99e:	mov    dl,ah
  43d9a0:	retf   
  43d9a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d9a2:	and    bl,BYTE PTR [ebp+0xe4a1838]
  43d9a8:	rol    DWORD PTR [eax],1
  43d9aa:	(bad)  
  43d9ab:	fdiv   QWORD PTR [edx+ecx*1]
  43d9ae:	arpl   WORD PTR ds:0xf1c63ff1,bp
  43d9b4:	xor    bl,bh
  43d9b6:	retf   
  43d9b7:	cwde   
  43d9b8:	(bad)  
  43d9b9:	outs   dx,BYTE PTR ds:[esi]
  43d9ba:	push   ds
  43d9bb:	(bad)  
  43d9bc:	in     eax,dx
  43d9bd:	aas    
  43d9be:	out    dx,eax
  43d9bf:	mov    ebp,0x6e056524
  43d9c4:	push   eax
  43d9c5:	pop    ss
  43d9c6:	arpl   WORD PTR [ebx-0x623c017],di
  43d9cc:	sbb    al,BYTE PTR [ebx+esi*1-0x3e53c0fb]
  43d9d3:	xor    edi,esp
  43d9d5:	aas    
  43d9d6:	cmp    al,0x32
  43d9d8:	scas   eax,DWORD PTR es:[edi]
  43d9d9:	imul   ecx,DWORD PTR [eax+0x19],0xbcfe
  43d9e0:	add    edx,DWORD PTR [edx-0x5750c01d]
  43d9e6:	mov    ah,0x42
  43d9e8:	data16 jo 0x43d9b8
  43d9eb:	xchg   esp,eax
  43d9ec:	sbb    eax,ecx
  43d9ee:	fistp  QWORD PTR [edi]
  43d9f0:	out    dx,al
  43d9f1:	addr16 cmc 
  43d9f3:	into   
  43d9f4:	pop    ebp
  43d9f5:	(bad)
  43d9f9:	xor    eax,0x39cb3fdd
  43d9fe:	push   ebx
  43d9ff:	loope  0x43d9ea
  43da01:	shl    DWORD PTR [esi-0x3e8fee6c],1
  43da07:	aas    
  43da08:	push   cs
  43da09:	ror    BYTE PTR [ebx+0x3b],cl
  43da0c:	rcl    DWORD PTR [ecx-0x3b],0x14
  43da10:	cli    
  43da11:	and    DWORD PTR [edi-0x4e10b5c1],0xffffff94
  43da18:	gs push edx
  43da1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da1b:	push   ds
  43da1c:	std    
  43da1d:	(bad)  
  43da1e:	mov    WORD PTR [edi],?
  43da20:	nop
  43da21:	lods   al,BYTE PTR ds:[esi]
  43da22:	mov    esi,0x763cd5e2
  43da27:	xor    al,0x4
  43da29:	adc    al,BYTE PTR [ebp+0x57120275]
  43da2f:	push   edi
  43da30:	adc    al,0xa7
  43da32:	jae    0x43da80
  43da34:	mov    cl,0xc2
  43da36:	jne    0x43da90
  43da38:	jmp    0x7ab7:0x5028a97f
  43da3f:	lea    edx,[eax-0x62]
  43da42:	mov    ch,0x43
  43da44:	add    BYTE PTR [eax],al
  43da46:	rcl    BYTE PTR [ecx+edi*8],cl
  43da49:	mov    ds:0x2066f9fc,al
  43da4e:	out    dx,eax
  43da4f:	iret   
  43da50:	fs and eax,0x9e6865ba
  43da56:	stc    
  43da57:	sbb    al,0x28
  43da59:	jl     0x43d9ee
  43da5b:	add    bh,bl
  43da5d:	push   edx
  43da5e:	mov    ds:0x9023593,eax
  43da63:	aam    0x50
  43da65:	jno    0x43dabd
  43da67:	call   DWORD PTR [edx-0x49ddf782]
  43da6d:	xor    eax,0x231d8adc
  43da72:	push   ss
  43da73:	bound  edi,QWORD PTR [ebx+ebp*4-0x31742e0f]
  43da7a:	in     eax,dx
  43da7b:	xor    al,BYTE PTR [ecx-0x6f]
  43da7e:	pop    ebp
  43da7f:	mov    al,0xbf
  43da81:	rcr    dh,1
  43da83:	test   BYTE PTR fs:[edi-0x23],dl
  43da87:	fwait
  43da88:	jae    0x43da71
  43da8a:	jbe    0x43daba
  43da8c:	arpl   sp,di
  43da8e:	mov    edi,0x17428076
  43da93:	mov    al,0x72
  43da95:	xchg   esi,eax
  43da96:	call   0xaf6db042
  43da9b:	mov    ds:0x9871c33,eax
  43daa0:	(bad)  
  43daa1:	fisubr DWORD PTR [eax-0x576bd049]
  43daa7:	loopne 0x43daf1
  43daa9:	xchg   BYTE PTR [eax],al
  43daab:	add    BYTE PTR [ecx+ecx*8-0x748825cf],cl
  43dab2:	dec    eax
  43dab3:	popa   
  43dab4:	xchg   ebx,ebx
  43dab6:	test   BYTE PTR [ebx],ch
  43dab8:	cmp    eax,0x49
  43dabb:	push   ecx
  43dabc:	dec    esp
  43dabd:	dec    ebp
  43dabe:	adc    BYTE PTR [edi-0x2e],dh
  43dac1:	cmc    
  43dac2:	or     ecx,DWORD PTR [ebp+0x31]
  43dac5:	hlt    
  43dac6:	adc    al,bh
  43dac8:	popf   
  43dac9:	cmp    al,BYTE PTR [ecx+0x59ec71cd]
  43dacf:	pop    esp
  43dad0:	fldcw  WORD PTR [ebp+0x26]
  43dad3:	fnstsw WORD PTR [eax]
  43dad5:	and    al,0x3e
  43dad7:	stos   DWORD PTR es:[edi],eax
  43dad8:	adc    al,0x7
  43dada:	push   ecx
  43dadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dadc:	push   edx
  43dadd:	inc    ebx
  43dade:	xchg   edx,eax
  43dadf:	xchg   esp,eax
  43dae0:	sahf   
  43dae1:	data16 mov dh,0x82
  43dae4:	mov    eax,0x364aa901
  43dae9:	sub    BYTE PTR [edx+eax*4],dl
  43daec:	pop    ebp
  43daed:	jne    0x43dacf
  43daef:	xchg   edi,eax
  43daf0:	aas    
  43daf1:	sti    
  43daf2:	or     dh,al
  43daf4:	pushf  
  43daf5:	test   DWORD PTR [eax],ebp
  43daf7:	rcr    DWORD PTR [edx-0x7d9aebf2],1
  43dafd:	adc    bh,ah
  43daff:	add    edx,ebp
  43db01:	or     edi,esp
  43db03:	add    edx,ebp
  43db05:	or     edi,esp
  43db07:	add    edx,ebp
  43db09:	or     DWORD PTR [edi],edi
  43db0b:	inc    edx
  43db0c:	adc    eax,0x42ef0a
  43db11:	add    BYTE PTR ds:0xd502e80a,dl
  43db17:	or     ecx,ebx
  43db19:	add    dl,ch
  43db1b:	or     DWORD PTR [eax],eax
  43db1d:	out    0xd6,al
  43db1f:	or     DWORD PTR [eax],eax
  43db21:	rcr    DWORD PTR [ebx],0x4a
  43db24:	add    BYTE PTR [ecx+0x16],cl
  43db27:	dec    edx
  43db28:	add    cl,ch
  43db2a:	(bad)  
  43db2b:	or     DWORD PTR [eax],eax
  43db2d:	not    esi
  43db2f:	or     DWORD PTR [eax],eax
  43db31:	(bad)  
  43db33:	or     DWORD PTR [eax],eax
  43db35:	jmp    0xe143e510
  43db3a:	xchg   esp,eax
  43db3b:	dec    ecx
  43db3c:	add    cl,ch
  43db3e:	(bad)  
  43db3f:	or     DWORD PTR [eax],eax
  43db41:	fcmovbe st,st(6)
  43db43:	or     DWORD PTR [eax],eax
  43db45:	out    dx,al
  43db46:	(bad)  
  43db47:	or     DWORD PTR [eax],eax
  43db49:	jmp    0xe843e524
  43db4e:	(bad)  
  43db4f:	or     DWORD PTR [eax],eax
  43db51:	add    eax,0xe90049bd
  43db56:	(bad)  
  43db57:	or     DWORD PTR [eax],eax
  43db59:	jmp    0x5d43e534
  43db5e:	push   esp
  43db5f:	in     eax,0xff
  43db61:	clc    
  43db62:	stos   BYTE PTR es:[edi],al
  43db63:	dec    ecx
  43db64:	add    BYTE PTR [ebp+0x54],dh
  43db67:	in     eax,0xff
  43db69:	ror    BYTE PTR [edx],1
  43db6b:	dec    edx
  43db6c:	add    BYTE PTR [ecx+0x54],ah
  43db6f:	in     al,0xff
  43db71:	push   0x80ffe454
  43db76:	add    BYTE PTR [eax],al
  43db78:	push   ebp
  43db79:	in     al,0xff
  43db7b:	js     0x43dbd2
  43db7d:	in     al,0xff
  43db7f:	adc    BYTE PTR [ebp-0x1c],0xff
  43db83:	mov    BYTE PTR [ebp-0x1c],dl
  43db86:	inc    DWORD PTR [eax+0x54]
  43db89:	in     al,0xff
  43db8b:	cmp    BYTE PTR [esp+eiz*8-0x1],dl
  43db8f:	sub    al,0x54
  43db91:	in     al,0xff
  43db93:	adc    BYTE PTR [esp+eiz*8-0x1],dl
  43db97:	(bad)  
  43db98:	jl     0x43db23
  43db9a:	cmp    BYTE PTR [eax],al
  43db9c:	les    ecx,FWORD PTR [edx-0x767fffc8]
  43dba2:	cmp    BYTE PTR [eax],al
  43dba4:	jl     0x43db2f
  43dba6:	cmp    BYTE PTR [eax],al
  43dba8:	mov    DWORD PTR fs:[eax],edi
  43dbab:	add    BYTE PTR [eax-0x76],dh
  43dbae:	cmp    BYTE PTR [eax],al
  43dbb0:	push   0x5400388a
  43dbb5:	mov    bh,BYTE PTR [eax]
  43dbb7:	add    BYTE PTR [eax-0x76],dh
  43dbba:	cmp    BYTE PTR [eax],al
  43dbbc:	dec    eax
  43dbbd:	mov    bh,BYTE PTR [eax]
  43dbbf:	add    BYTE PTR [eax-0x76],dh
  43dbc2:	cmp    BYTE PTR [eax],al
  43dbc4:	js     0x43db50
  43dbc6:	cmp    BYTE PTR [eax],al
  43dbc8:	inc    eax
  43dbc9:	mov    bh,BYTE PTR [eax]
  43dbcb:	add    BYTE PTR [eax-0x76],bh
  43dbce:	cmp    BYTE PTR [eax],al
  43dbd0:	and    al,0x8a
  43dbd2:	cmp    BYTE PTR [eax],al
  43dbd4:	xor    BYTE PTR [edx-0x75bbffc8],cl
  43dbda:	cmp    BYTE PTR [eax],al
  43dbdc:	add    BYTE PTR [eax],al
  43dbde:	fadd   DWORD PTR [edi-0x75fbffc8]
  43dbe4:	cmp    BYTE PTR [eax],al
  43dbe6:	mov    al,0x87
  43dbe8:	cmp    BYTE PTR [eax],al
  43dbea:	rol    BYTE PTR [edi-0x77ffffc8],0x38
  43dbf1:	add    BYTE PTR [eax+ecx*4],ah
  43dbf4:	cmp    BYTE PTR [eax],al
  43dbf6:	dec    eax
  43dbf7:	mov    BYTE PTR [eax],bh
  43dbf9:	add    BYTE PTR [eax+ecx*4],ch
  43dbfc:	cmp    BYTE PTR [eax],al
  43dbfe:	push   eax
  43dbff:	mov    BYTE PTR [eax],bh
  43dc01:	add    BYTE PTR [eax-0x78],bh
  43dc04:	cmp    BYTE PTR [eax],al
  43dc06:	nop
  43dc07:	mov    BYTE PTR [eax],bh
  43dc09:	add    BYTE PTR [esi+ecx*4-0x7157ffc8],bl
  43dc10:	cmp    BYTE PTR [eax],al
  43dc12:	aad    0x5c
  43dc14:	cmp    DWORD PTR [edi],0xffffffd5
  43dc17:	jl     0x43db9c
  43dc19:	aas    
  43dc1a:	aad    0x2c
  43dc1c:	test   BYTE PTR [edi],bh
  43dc1e:	aad    0x48
  43dc20:	test   BYTE PTR [edi],bh
  43dc22:	aad    0x54
  43dc24:	test   BYTE PTR [edi],bh
  43dc26:	aad    0x9c
  43dc28:	jl     0x43dc69
  43dc2a:	aad    0xc
  43dc2c:	test   BYTE PTR [edi],bh
  43dc2e:	aad    0x8c
  43dc30:	xor    al,0x40
  43dc32:	aad    0x60
  43dc34:	xor    al,0x40
  43dc36:	aad    0x38
  43dc38:	xor    eax,0x3554d540
  43dc3d:	inc    eax
  43dc3e:	aad    0x18
  43dc40:	xor    eax,0xd5000040
  43dc45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dc46:	xor    eax,0x3510d540
  43dc4b:	inc    eax
  43dc4c:	aad    0x60
  43dc4e:	xor    eax,0x356cd540
  43dc53:	inc    eax
  43dc54:	aad    0x0
  43dc56:	xor    eax,0x3510d540
  43dc5b:	inc    eax
  43dc5c:	aad    0x9c
  43dc5e:	xor    eax,0x35e4d540
  43dc63:	inc    eax
  43dc64:	aad    0x48
  43dc66:	ss inc eax
  43dc68:	aad    0xf8
  43dc6a:	xor    eax,0x362cd540
  43dc6f:	inc    eax
  43dc70:	aad    0x4c
  43dc72:	ss inc eax
  43dc74:	aad    0x2c
  43dc76:	ss inc eax
  43dc78:	aad    0x78
  43dc7a:	ss inc eax
  43dc7c:	aad    0x78
  43dc7e:	ss inc eax
  43dc80:	aad    0x80
  43dc82:	ss inc eax
  43dc84:	aad    0x64
  43dc86:	ss inc eax
  43dc88:	aad    0xb8
  43dc8a:	ss inc eax
  43dc8c:	aad    0x9
  43dc8e:	jecxz  0x43dcc8
  43dc90:	adc    eax,0x1538b70a
  43dc95:	or     cl,BYTE PTR [edi+0x770a1538]
  43dc9b:	cmp    BYTE PTR ds:0x15393f0a,dl
  43dca1:	or     al,BYTE PTR [edi+0x39]
  43dca4:	adc    eax,0x392b0a
  43dca9:	add    BYTE PTR ds:0x1538cb0a,dl
  43dcaf:	or     dh,bh
  43dcb1:	cmp    BYTE PTR [ebp-0x6ac868f7],dl
  43dcb7:	or     DWORD PTR [ebx-0x48f66ac9],ecx
  43dcbd:	aaa    
  43dcbe:	xchg   ebp,eax
  43dcbf:	or     DWORD PTR [ebx+0x4f099537],ebp
  43dcc5:	aaa    
  43dcc6:	xchg   ebp,eax
  43dcc7:	or     edi,esp
  43dcc9:	add    edx,ebp
  43dccb:	or     edi,esp
  43dccd:	add    edx,ebp
  43dccf:	or     edi,esp
  43dcd1:	add    edx,ebp
  43dcd3:	or     edi,esp
  43dcd5:	add    edx,ebp
  43dcd7:	or     edi,esp
  43dcd9:	add    edx,ebp
  43dcdb:	or     eax,ebp
  43dcdd:	add    eax,0x3e709bb
  43dce2:	aad    0x9
  43dce4:	out    0x3,eax
  43dce6:	aad    0x9
  43dce8:	out    0x3,eax
  43dcea:	aad    0x9
  43dcec:	jb     0x43dc9b
  43dcee:	fwait
  43dcef:	or     edi,esp
  43dcf1:	add    edx,ebp
  43dcf3:	or     edi,esp
  43dcf5:	add    edx,ebp
  43dcf7:	or     edi,esp
  43dcf9:	add    edx,ebp
  43dcfb:	or     ecx,ebx
  43dcfd:	scas   al,BYTE PTR es:[edi]
  43dcfe:	sti    
  43dcff:	or     edi,esp
  43dd01:	add    edx,ebp
  43dd03:	or     edi,esp
  43dd05:	add    edx,ebp
  43dd07:	or     DWORD PTR [eax],eax
  43dd09:	jmp    0x8443e6e4
  43dd0e:	add    BYTE PTR [eax],al
  43dd10:	imul   esp,eax,0xffffffff
  43dd13:	call   0xe943e6ee
  43dd18:	(bad)  
  43dd19:	or     DWORD PTR [eax],eax
  43dd1b:	jmp    0xe343e6f6
  43dd20:	xor    ah,al
  43dd22:	(bad)  
  43dd23:	call   0xe943e6fe
  43dd28:	(bad)  
  43dd29:	or     DWORD PTR [eax],eax
  43dd2b:	jmp    0x7e43e706
  43dd30:	sub    eax,0xd6e8ffe0
  43dd35:	or     DWORD PTR [eax],eax
  43dd37:	jmp    0xe943e712
  43dd3c:	(bad)  
  43dd3d:	or     DWORD PTR [eax],eax
  43dd3f:	fwait
  43dd40:	ins    DWORD PTR es:[edi],dx
  43dd41:	loopne 0x43dd42
  43dd43:	call   0xe943e71e
  43dd48:	(bad)  
  43dd49:	or     DWORD PTR [eax],eax
  43dd4b:	jmp    0xbb43e726
  43dd50:	jae    0x43dd32
  43dd52:	(bad)  
  43dd53:	call   0xe943e72e
  43dd58:	(bad)  
  43dd59:	or     DWORD PTR [eax],eax
  43dd5b:	jmp    0x6943e736
  43dd60:	xor    ah,al
  43dd62:	(bad)  
  43dd63:	call   0xe943e73e
  43dd68:	(bad)  
  43dd69:	or     DWORD PTR [eax],eax
  43dd6b:	jmp    0x7943e746
  43dd70:	xor    ah,al
  43dd72:	(bad)  
  43dd73:	call   0xa19dd78
  43dd78:	add    cl,ch
  43dd7a:	(bad)  
  43dd7b:	or     DWORD PTR [eax],eax
  43dd7d:	jmp    0xe443e758
  43dd82:	ins    BYTE PTR es:[edi],dx
  43dd83:	(bad)  
  43dd85:	(bad)  
  43dd86:	mov    esp,0xbc00000c
  43dd8b:	or     al,0x0
  43dd8d:	add    BYTE PTR [esp+ecx*1+0x72890000],ch
  43dd94:	cmp    DWORD PTR [eax],eax
  43dd96:	jl     0x43dda4
  43dd98:	add    BYTE PTR [eax],al
  43dd9a:	jl     0x43dda8
  43dd9c:	add    BYTE PTR [eax],al
  43dd9e:	ins    BYTE PTR es:[edi],dx
  43dd9f:	or     al,0x0
  43dda1:	add    cl,ah
  43dda3:	jae    0x43ddde
  43dda5:	add    BYTE PTR [esp+ecx*1+0x0],bh
  43dda9:	add    BYTE PTR [esp+ecx*1+0x0],bh
  43ddad:	add    BYTE PTR [esp+ecx*1+0x0],ch
  43ddb1:	add    BYTE PTR [edx+0x3c003910],ah
  43ddb7:	or     al,0x0
  43ddb9:	add    BYTE PTR [esp+ecx*1],bh
  43ddbc:	add    BYTE PTR [eax],al
  43ddbe:	sub    al,0xc
  43ddc0:	add    BYTE PTR [eax],al
  43ddc2:	je     0x43ddd3
  43ddc4:	cmp    DWORD PTR [eax],eax
  43ddc6:	cmp    al,0xc
  43ddc8:	add    BYTE PTR [eax],al
  43ddca:	cmp    al,0xc
  43ddcc:	add    BYTE PTR [eax],al
  43ddce:	sub    al,0xc
  43ddd0:	add    BYTE PTR [eax],al
  43ddd2:	cs cli 
  43ddd4:	cmp    BYTE PTR [eax],al
  43ddd6:	cld    
  43ddd7:	or     eax,DWORD PTR [eax]
  43ddd9:	add    BYTE PTR [eax],al
  43dddb:	add    ah,bh
  43dddd:	or     eax,DWORD PTR [eax]
  43dddf:	add    ah,ch
  43dde1:	or     eax,DWORD PTR [eax]
  43dde3:	add    BYTE PTR [eax],ah
  43dde5:	cli    
  43dde6:	cmp    BYTE PTR [eax],al
  43dde8:	cld    
  43dde9:	or     eax,DWORD PTR [eax]
  43ddeb:	add    ah,bh
  43dded:	or     eax,DWORD PTR [eax]
  43ddef:	add    ah,ch
  43ddf1:	or     eax,DWORD PTR [eax]
  43ddf3:	add    BYTE PTR [eax-0x6],ch
  43ddf6:	cmp    BYTE PTR [eax],al
  43ddf8:	mov    esp,0xbc00000b
  43ddfd:	or     eax,DWORD PTR [eax]
  43ddff:	add    ch,dl
  43de01:	mov    al,0xfc
  43de03:	call   ebp
  43de05:	icebp  
  43de06:	or     bh,BYTE PTR [esi]
  43de08:	aad    0xb0
  43de0a:	cld    
  43de0b:	call   ebp
  43de0d:	mov    al,0xfc
  43de0f:	call   ebp
  43de11:	mov    al,0xfc
  43de13:	call   ebp
  43de15:	ror    DWORD PTR [ebx],0x3e
  43de18:	aad    0xb0
  43de1a:	cld    
  43de1b:	call   ebp
  43de1d:	mov    al,0xfc
  43de1f:	call   ebp
  43de21:	mov    al,0xfc
  43de23:	call   ebp
  43de25:	lahf   
  43de26:	add    eax,0xfcb0d53e
  43de2b:	call   ebp
  43de2d:	mov    al,0xfc
  43de2f:	call   ebp
  43de31:	mov    al,0xfc
  43de33:	call   ebp
  43de35:	aad    0x4
  43de37:	ds aad 0xb0
  43de3a:	cld    
  43de3b:	call   ebp
  43de3d:	mov    al,0xfc
  43de3f:	inc    DWORD PTR [eax]
  43de41:	add    ch,dl
  43de43:	mov    al,0xfc
  43de45:	call   ebp
  43de47:	cmp    eax,DWORD PTR ds:0xfcb0d53e
  43de4d:	call   ebp
  43de4f:	mov    al,0xfc
  43de51:	call   ebp
  43de53:	mov    al,0xfc
  43de55:	call   ebp
  43de57:	mov    cl,0x0
  43de59:	ds aad 0xb0
  43de5c:	cld    
  43de5d:	call   ebp
  43de5f:	mov    al,0xfc
  43de61:	call   ebp
  43de63:	mov    al,0xfc
  43de65:	call   ebp
  43de67:	add    BYTE PTR ds:0xb0d5,bh
  43de6c:	cld    
  43de6d:	call   ebp
  43de6f:	mov    al,0xfc
  43de71:	call   ebp
  43de73:	mov    al,0xfc
  43de75:	call   ebp
  43de77:	inc    eax
  43de78:	or     BYTE PTR [esi],bh
  43de7a:	aad    0x9
  43de7c:	out    0x3,eax
  43de7e:	aad    0x9
  43de80:	out    0x3,eax
  43de82:	aad    0x9
  43de84:	out    0x3,eax
  43de86:	aad    0x9
  43de88:	xor    BYTE PTR [eax],cl
  43de8a:	repz or edi,esp
  43de8d:	add    edx,ebp
  43de8f:	or     edi,esp
  43de91:	add    edx,ebp
  43de93:	or     edi,esp
  43de95:	add    edx,ebp
  43de97:	or     edx,ecx
  43de99:	or     bl,dl
  43de9b:	or     edi,esp
  43de9d:	add    edx,ebp
  43de9f:	or     edi,esp
  43dea1:	add    edx,ebp
  43dea3:	or     edi,esp
  43dea5:	add    eax,DWORD PTR [eax]
  43dea7:	add    ch,dl
  43dea9:	or     DWORD PTR [ecx+ecx*1-0x4d],eax
  43dead:	or     edi,esp
  43deaf:	add    edx,ebp
  43deb1:	or     edi,esp
  43deb3:	add    edx,ebp
  43deb5:	or     edi,esp
  43deb7:	add    edx,ebp
  43deb9:	or     DWORD PTR [ecx+0x8],edi
  43debc:	adc    ecx,DWORD PTR [edx]
  43debe:	out    0x3,eax
  43dec0:	aad    0x9
  43dec2:	out    0x3,eax
  43dec4:	aad    0x9
  43dec6:	out    0x3,eax
  43dec8:	aad    0x9
  43deca:	(bad)  
  43decb:	add    eax,0x3e709f3
  43ded0:	aad    0x9
  43ded2:	out    0x3,eax
  43ded4:	aad    0x9
  43ded6:	out    0x3,eax
  43ded8:	aad    0x9
  43deda:	addr16 add eax,0x3e709d3
  43dee0:	aad    0x9
  43dee2:	out    0x3,eax
  43dee4:	aad    0x9
  43dee6:	out    0x3,eax
  43dee8:	aad    0x9
  43deea:	sbb    al,0x5
  43deec:	mov    bl,0x9
  43deee:	out    0x3,eax
  43def0:	aad    0x9
  43def2:	out    0x3,eax
  43def4:	aad    0x9
  43def6:	add    cl,ch
  43def8:	(bad)  
  43def9:	or     DWORD PTR [eax],eax
  43defb:	into   
  43defc:	fcmovnu st,st(3)
  43defe:	(bad)  
  43deff:	call   0xe943e8da
  43df04:	(bad)  
  43df05:	or     DWORD PTR [eax],eax
  43df07:	jmp    0xd943e8e2
  43df0c:	add    BYTE PTR [eax],al
  43df0e:	xchg   esi,eax
  43df0f:	(bad)  
  43df11:	call   0xe943e8ec
  43df16:	(bad)  
  43df17:	or     DWORD PTR [eax],eax
  43df19:	jmp    0x4943e8f4
  43df1e:	xchg   esi,eax
  43df1f:	(bad)  
  43df21:	call   0xe943e8fc
  43df26:	(bad)  
  43df27:	or     DWORD PTR [eax],eax
  43df29:	jmp    0xc943e904
  43df2e:	cdq    
  43df2f:	(bad)  
  43df31:	call   0xe943e90c
  43df36:	(bad)  
  43df37:	or     DWORD PTR [eax],eax
  43df39:	jmp    0xf243e914
  43df3e:	pop    ss
  43df3f:	(bad)  
  43df41:	call   0xe943e91c
  43df46:	(bad)  
  43df47:	or     DWORD PTR [eax],eax
  43df49:	jmp    0x1343e924
  43df4e:	push   ss
  43df4f:	(bad)  
  43df51:	call   0xe943e92c
  43df56:	(bad)  
  43df57:	or     DWORD PTR [eax],eax
  43df59:	jmp    0x3043e934
  43df5e:	push   ss
  43df5f:	(bad)  
  43df61:	call   0xe943e93c
  43df66:	(bad)  
  43df67:	or     DWORD PTR [eax],eax
  43df69:	jmp    0x5043e944
  43df6e:	push   ss
  43df6f:	(bad)  
  43df71:	inc    DWORD PTR [eax]
  43df73:	add    ah,bh
  43df75:	or     BYTE PTR [eax],al
  43df77:	add    ah,ch
  43df79:	or     BYTE PTR [eax],al
  43df7b:	add    ah,ch
  43df7d:	or     BYTE PTR [eax],al
  43df7f:	add    BYTE PTR [eax],dh
  43df81:	enter  0x3a,0xbc
  43df85:	or     BYTE PTR [eax],al
  43df87:	add    BYTE PTR [eax+ecx*1+0x8ac0000],ch
  43df8e:	add    BYTE PTR [eax],al
  43df90:	add    DWORD PTR [edi+0x8bc003a],0x0
  43df97:	add    BYTE PTR [eax+ecx*1+0x8ac0000],ch
  43df9e:	add    BYTE PTR [eax],al
  43dfa0:	sub    eax,0x7c003a89
  43dfa5:	or     BYTE PTR [eax],al
  43dfa7:	add    BYTE PTR [eax+ecx*1+0x0],ch
  43dfab:	add    BYTE PTR [eax+ecx*1+0x0],ch
  43dfaf:	add    BYTE PTR [edi+eax*4],ah
  43dfb2:	cmp    al,BYTE PTR [eax]
  43dfb4:	jl     0x43dfbe
  43dfb6:	add    BYTE PTR [eax],al
  43dfb8:	ins    BYTE PTR es:[edi],dx
  43dfb9:	or     BYTE PTR [eax],al
  43dfbb:	add    BYTE PTR [eax+ecx*1+0x0],ch
  43dfbf:	add    BYTE PTR [ecx],ch
  43dfc1:	mov    bh,BYTE PTR [edx]
  43dfc3:	add    BYTE PTR [eax+ecx*1],bh
  43dfc6:	add    BYTE PTR [eax],al
  43dfc8:	sub    al,0x8
  43dfca:	add    BYTE PTR [eax],al
  43dfcc:	sub    al,0x8
  43dfce:	add    BYTE PTR [eax],al
  43dfd0:	xor    ecx,DWORD PTR [edx+0x83c003a]
  43dfd6:	add    BYTE PTR [eax],al
  43dfd8:	add    BYTE PTR [eax],al
  43dfda:	sub    al,0x8
  43dfdc:	add    BYTE PTR [eax],al
  43dfde:	sub    al,0x8
  43dfe0:	add    BYTE PTR [eax],al
  43dfe2:	ret    
  43dfe3:	mov    bh,BYTE PTR [edx]
  43dfe5:	add    ah,bh
  43dfe7:	pop    es
  43dfe8:	add    BYTE PTR [eax],al
  43dfea:	in     al,dx
  43dfeb:	pop    es
  43dfec:	add    BYTE PTR [eax],al
  43dfee:	aad    0xb2
  43dff0:	cld    
  43dff1:	call   ebp
  43dff3:	ins    BYTE PTR es:[edi],dx
  43dff4:	jg     0x43e033
  43dff6:	aad    0xb2
  43dff8:	cld    
  43dff9:	call   ebp
  43dffb:	mov    dl,0xfc
  43dffd:	call   ebp
  43dfff:	mov    dl,0xfc
  43e001:	call   ebp
  43e003:	and    al,BYTE PTR [eax-0x34f2ac3]
  43e009:	call   ebp
  43e00b:	mov    al,0xfc
  43e00d:	call   ebp
  43e00f:	mov    al,0xfc
  43e011:	call   ebp
  43e013:	fidivr DWORD PTR [edi+0x3d]
  43e016:	aad    0xb0
  43e018:	cld    
  43e019:	call   ebp
  43e01b:	mov    al,0xfc
  43e01d:	call   ebp
  43e01f:	mov    al,0xfc
  43e021:	call   ebp
  43e023:	stc    
  43e024:	jg     0x43e063
  43e026:	aad    0xb0
  43e028:	cld    
  43e029:	call   ebp
  43e02b:	mov    al,0xfc
  43e02d:	call   ebp
  43e02f:	mov    al,0xfc
  43e031:	call   ebp
  43e033:	pop    esi
  43e034:	mov    dl,0x3e
  43e036:	aad    0xb0
  43e038:	cld    
  43e039:	call   ebp
  43e03b:	mov    al,0xfc
  43e03d:	inc    DWORD PTR [eax]
  43e03f:	add    ch,dl
  43e041:	mov    al,0xfc
  43e043:	call   ebp
  43e045:	xchg   edi,eax
  43e046:	mov    cl,0x3e
  43e048:	aad    0xb0
  43e04a:	cld    
  43e04b:	call   ebp
  43e04d:	mov    al,0xfc
  43e04f:	call   ebp
  43e051:	mov    al,0xfc
  43e053:	call   ebp
  43e055:	xchg   edi,eax
  43e056:	(bad)  
  43e057:	ds aad 0xb0
  43e05a:	cld    
  43e05b:	call   ebp
  43e05d:	mov    al,0xfc
  43e05f:	call   ebp
  43e061:	mov    al,0xfc
  43e063:	call   ebp
  43e065:	inc    ebx
  43e066:	cwde   
  43e067:	ds aad 0x9
  43e06a:	out    0x3,eax
  43e06c:	aad    0x9
  43e06e:	out    0x3,eax
  43e070:	aad    0x9
  43e072:	out    0x3,eax
  43e074:	aad    0x9
  43e076:	cmp    eax,0xe709ab98
  43e07b:	add    edx,ebp
  43e07d:	or     edi,esp
  43e07f:	add    edx,ebp
  43e081:	or     edi,esp
  43e083:	add    edx,ebp
  43e085:	or     eax,esi
  43e087:	or     cx,WORD PTR [edx]
  43e08a:	out    0x3,eax
  43e08c:	aad    0x9
  43e08e:	out    0x3,eax
  43e090:	aad    0x9
  43e092:	out    0x3,eax
  43e094:	aad    0x9
  43e096:	or     al,0x8e
  43e098:	jmp    0x43e0a3
  43e09a:	out    0x3,eax
  43e09c:	aad    0x9
  43e09e:	out    0x3,eax
  43e0a0:	aad    0x9
  43e0a2:	out    0x3,eax
  43e0a4:	add    BYTE PTR [eax],al
  43e0a6:	aad    0x9
  43e0a8:	add    eax,0xe709cb93
  43e0ad:	add    edx,ebp
  43e0af:	or     edi,esp
  43e0b1:	add    edx,ebp
  43e0b3:	or     DWORD PTR [esp+eiz*4-0x4e],ebx
  43e0b7:	or     DWORD PTR [ebx-0x5c],ecx
  43e0ba:	stos   BYTE PTR es:[edi],al
  43e0bb:	or     edi,esp
  43e0bd:	add    edx,ebp
  43e0bf:	or     DWORD PTR [edx+0x3a80d273],ebx
  43e0c5:	das    
  43e0c6:	xchg   ebp,eax
  43e0c7:	or     DWORD PTR [edi],esi
  43e0c9:	das    
  43e0ca:	xchg   ebp,eax
  43e0cb:	or     DWORD PTR [ebx],edx
  43e0cd:	das    
  43e0ce:	xchg   ebp,eax
  43e0cf:	or     DWORD PTR [edi],ecx
  43e0d1:	das    
  43e0d2:	xchg   ebp,eax
  43e0d3:	or     DWORD PTR [ebx],ecx
  43e0d5:	das    
  43e0d6:	xchg   ebp,eax
  43e0d7:	or     DWORD PTR [edi],eax
  43e0d9:	das    
  43e0da:	xchg   ebp,eax
  43e0db:	or     DWORD PTR [ebx],esp
  43e0dd:	das    
  43e0de:	xchg   ebp,eax
  43e0df:	or     DWORD PTR [edi],ebx
  43e0e1:	das    
  43e0e2:	xchg   ebp,eax
  43e0e3:	or     DWORD PTR [eax],eax
  43e0e5:	sbb    eax,0x190049c2
  43e0ea:	mov    edx,0xb3b50049
  43e0ef:	dec    ecx
  43e0f0:	add    BYTE PTR [ecx-0x16ffb655],dh
  43e0f6:	(bad)  
  43e0f7:	or     DWORD PTR [eax],eax
  43e0f9:	jmp    0xe943ead4
  43e0fe:	(bad)  
  43e0ff:	or     DWORD PTR [eax],eax
  43e101:	jmp    0xe943eadc
  43e106:	(bad)  
  43e107:	or     DWORD PTR [eax],eax
  43e109:	jmp    0xa19e10e
  43e10e:	add    cl,ch
  43e110:	(bad)  
  43e111:	or     DWORD PTR [eax],eax
  43e113:	jmp    0xe943eaee
  43e118:	(bad)  
  43e119:	or     DWORD PTR [eax],eax
  43e11b:	jmp    0xe943eaf6
  43e120:	(bad)  
  43e121:	or     DWORD PTR [eax],eax
  43e123:	jmp    0xe943eafe
  43e128:	(bad)  
  43e129:	or     DWORD PTR [eax],eax
  43e12b:	jmp    0xe943eb06
  43e130:	(bad)  
  43e131:	or     DWORD PTR [eax],eax
  43e133:	jmp    0xe943eb0e
  43e138:	(bad)  
  43e139:	or     DWORD PTR [eax],eax
  43e13b:	jmp    0xe943eb16
  43e140:	(bad)  
  43e141:	or     DWORD PTR [eax],eax
  43e143:	jmp    0xe943eb1e
  43e148:	(bad)  
  43e149:	or     DWORD PTR [eax],eax
  43e14b:	jmp    0xe943eb26
  43e150:	(bad)  
  43e151:	or     DWORD PTR [eax],eax
  43e153:	jmp    0xe943eb2e
  43e158:	(bad)  
  43e159:	or     DWORD PTR [eax],eax
  43e15b:	jmp    0x43eb36
  43e160:	sub    al,0xd
  43e162:	add    BYTE PTR [eax],al
  43e164:	sub    al,0xd
  43e166:	add    BYTE PTR [eax],al
  43e168:	cld    
  43e169:	or     al,0x0
  43e16b:	add    ah,bh
  43e16d:	or     al,0x0
  43e16f:	add    BYTE PTR [eax],al
  43e171:	add    ah,ch
  43e173:	or     al,0x0
  43e175:	add    ah,ch
  43e177:	or     al,0x0
  43e179:	add    ah,bh
  43e17b:	or     al,0x0
  43e17d:	add    ah,bh
  43e17f:	or     al,0x0
  43e181:	add    ah,ch
  43e183:	or     al,0x0
  43e185:	add    ah,ch
  43e187:	or     al,0x0
  43e189:	add    BYTE PTR [esp+ecx*1+0xcbc0000],bh
  43e190:	add    BYTE PTR [eax],al
  43e192:	lods   al,BYTE PTR ds:[esi]
  43e193:	or     al,0x0
  43e195:	add    BYTE PTR [esp+ecx*1+0xcbc0000],ch
  43e19c:	add    BYTE PTR [eax],al
  43e19e:	mov    esp,0xac00000c
  43e1a3:	or     al,0x0
  43e1a5:	add    BYTE PTR [esp+ecx*1+0xc7c0000],ch
  43e1ac:	add    BYTE PTR [eax],al
  43e1ae:	jl     0x43e1bc
  43e1b0:	add    BYTE PTR [eax],al
  43e1b2:	ins    BYTE PTR es:[edi],dx
  43e1b3:	or     al,0x0
  43e1b5:	add    BYTE PTR [esp+ecx*1+0x0],ch
  43e1b9:	add    BYTE PTR [esp+ecx*1+0x0],bh
  43e1bd:	add    BYTE PTR [esp+ecx*1+0x0],bh
  43e1c1:	add    BYTE PTR [esp+ecx*1+0x0],ch
  43e1c5:	add    BYTE PTR [esp+ecx*1+0x0],ch
  43e1c9:	add    BYTE PTR [esp+ecx*1],bh
  43e1cc:	add    BYTE PTR [eax],al
  43e1ce:	cmp    al,0xc
  43e1d0:	add    BYTE PTR [eax],al
  43e1d2:	sub    al,0xc
  43e1d4:	add    BYTE PTR [eax],al
  43e1d6:	add    BYTE PTR [eax],al
  43e1d8:	sub    al,0xc
  43e1da:	add    BYTE PTR [eax],al
  43e1dc:	aad    0xa2
  43e1de:	cld    
  43e1df:	call   ebp
  43e1e1:	mov    ds:0xa2d5fffc,al
  43e1e6:	cld    
  43e1e7:	call   ebp
  43e1e9:	mov    ds:0xa2d5fffc,al
  43e1ee:	cld    
  43e1ef:	call   ebp
  43e1f1:	mov    ds:0xa2d5fffc,al
  43e1f6:	cld    
  43e1f7:	call   ebp
  43e1f9:	mov    ds:0xa2d5fffc,al
  43e1fe:	cld    
  43e1ff:	call   ebp
  43e201:	mov    ds:0xa2d5fffc,al
  43e206:	cld    
  43e207:	call   ebp
  43e209:	mov    ds:0xa0d5fffc,al
  43e20e:	cld    
  43e20f:	call   ebp
  43e211:	mov    al,ds:0xa0d5fffc
  43e216:	cld    
  43e217:	call   ebp
  43e219:	mov    al,ds:0xa0d5fffc
  43e21e:	or     al,0x0
  43e220:	aad    0xc0
  43e222:	cld    
  43e223:	call   ebp
  43e225:	jl     0x43e21e
  43e227:	outs   dx,DWORD PTR ds:[esi]
  43e228:	loop   0x43e232
  43e22a:	clc    
  43e22b:	add    ecx,ebp
  43e22d:	mov    al,0xe4
  43e22f:	sbb    ecx,ebp
  43e231:	enter  0x33e4,0xbd
  43e235:	loopne 0x43e222
  43e237:	dec    ebx
  43e238:	mov    ebp,0x63ec48
  43e23d:	add    BYTE PTR [ebp-0x2affc360],ch
  43e243:	mov    al,ds:0xf0d50003
  43e248:	in     al,0x53
  43e24a:	sahf   
  43e24b:	call   0x41523e34
  43e250:	in     eax,0x63
  43e252:	push   cs
  43e253:	dec    ecx
  43e254:	in     eax,0x6b
  43e256:	dec    BYTE PTR [ecx]
  43e258:	pop    ss
  43e259:	jmp    0x43e221
  43e25b:	rcr    BYTE PTR [edx],cl
  43e25d:	lock push esi
  43e25f:	(bad)  
  43e260:	(bad)  
  43e261:	lock inc esi
  43e263:	(bad)  
  43e264:	push   0xfffffff0
  43e266:	jbe    0x43e23e
  43e268:	push   edx
  43e269:	lock data16 (bad) 
  43e26c:	cmp    dh,al
  43e26e:	push   ss
  43e26f:	(bad)  
  43e270:	mov    ds:0x8ad626f0,al
  43e275:	lock not ch
  43e278:	push   edx
  43e279:	lock push es
  43e27b:	(bad)  
  43e27c:	pop    edx
  43e27d:	lock (bad) 
  43e27f:	aam    0xe2
  43e281:	lock (bad) 
  43e283:	aam    0xea
  43e285:	lock mov dh,0xd4
  43e288:	adc    dh,cl
  43e28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e28b:	aam    0xfa
  43e28d:	lock push ss
  43e28f:	aad    0xa2
  43e291:	lock es aad 0x8a
  43e295:	lock ss aad 0x92
  43e299:	lock inc esi
  43e29b:	aad    0x9a
  43e29d:	lock push esi
  43e29f:	aam    0x62
  43e2a1:	icebp  
  43e2a2:	add    BYTE PTR [eax],al
  43e2a4:	inc    esi
  43e2a5:	aam    0x6a
  43e2a7:	icebp  
  43e2a8:	jbe    0x43e27e
  43e2aa:	push   edx
  43e2ab:	icebp  
  43e2ac:	data16 aam 0x3a
  43e2af:	icebp  
  43e2b0:	xchg   esi,eax
  43e2b1:	aam    0x22
  43e2b3:	icebp  
  43e2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e2b5:	aam    0xa
  43e2b7:	icebp  
  43e2b8:	jbe    0x43e28e
  43e2ba:	shl    al,cl
  43e2bc:	xchg   ah,dl
  43e2be:	(bad)  
  43e2c0:	(bad)  
  43e2c1:	xlat   BYTE PTR ds:[ebx]
  43e2c2:	loop   0x43e2b1
  43e2c4:	(bad)  
  43e2c5:	xlat   BYTE PTR ds:[ebx]
  43e2c6:	jmp    0xa6ee:0x12d7b6ed
  43e2cd:	xlat   BYTE PTR ds:[ebx]
  43e2ce:	cli    
  43e2cf:	in     eax,dx
  43e2d0:	xchg   esi,eax
  43e2d1:	xlat   BYTE PTR ds:[ebx]
  43e2d2:	jmp    DWORD PTR [ebx+edi*1]
  43e2d5:	cmp    bh,BYTE PTR [edx]
  43e2d7:	or     eax,0x153a2a33
  43e2dc:	sub    ebx,DWORD PTR [edx]
  43e2de:	cmp    bl,BYTE PTR ds:0x65398a43
  43e2e4:	cmp    BYTE PTR [edx+0x39],bh
  43e2e7:	ins    DWORD PTR es:[edi],dx
  43e2e8:	xor    BYTE PTR [edx+0x39],ch
  43e2eb:	push   ebp
  43e2ec:	sub    BYTE PTR [edx+0x39],bl
  43e2ef:	cmp    eax,0xa539ca00
  43e2f4:	clc    
  43e2f5:	mov    ecx,0xa9f08d39
  43e2fa:	cmp    DWORD PTR [ebp-0x18],edx
  43e2fd:	cdq    
  43e2fe:	cmp    DWORD PTR [ebp+0x0],ebx
  43e301:	or     bh,BYTE PTR [ecx]
  43e303:	in     eax,0xfb
  43e305:	stc    
  43e306:	cmp    ch,ch
  43e308:	add    BYTE PTR [eax],al
  43e30a:	repz jmp 0xda2df848
  43e310:	cmp    ch,bh
  43e312:	ret    
  43e313:	dec    ecx
  43e314:	cmp    DWORD PTR [ebp-0x72c6c645],esp
  43e31a:	mov    bl,0x29
  43e31c:	cmp    DWORD PTR [ebp-0x62c6e655],edx
  43e322:	ret    
  43e323:	mov    DWORD PTR [eax],edi
  43e325:	gs mov ebx,0xb36d3879
  43e32b:	imul   edi,DWORD PTR [eax],0x3859ab55
  43e331:	cmp    eax,0x2538c983
  43e336:	jnp    0x43e2f1
  43e338:	cmp    BYTE PTR ds:0xd538a973,cl
  43e33e:	push   0x80dd3899
  43e343:	xchg   ebp,eax
  43e344:	clc    
  43e345:	jmp    0x1143ed50
  43e34a:	(bad)  
  43e34b:	or     DWORD PTR [eax],eax
  43e34d:	add    BYTE PTR [eax-0x67],ch
  43e350:	add    al,0x30
  43e352:	sub    BYTE PTR [ecx-0x6227cfec],bl
  43e358:	and    al,0x30
  43e35a:	dec    eax
  43e35b:	cdq    
  43e35c:	xor    al,0x30
  43e35e:	call   0xe8742800
  43e363:	popf   
  43e364:	push   esp
  43e365:	xor    al,bl
  43e367:	popf   
  43e368:	fs xor al,cl
  43e36b:	popf   
  43e36c:	je     0x43e39e
  43e36e:	add    BYTE PTR [eax],al
  43e370:	test   al,0x9d
  43e372:	test   BYTE PTR [eax],dh
  43e374:	test   al,0x9d
  43e376:	xchg   esp,eax
  43e377:	xor    BYTE PTR [eax-0x37cf5b63],bl
  43e37d:	popf   
  43e37e:	mov    ah,0x30
  43e380:	test   al,0x9d
  43e382:	les    esi,FWORD PTR [eax]
  43e384:	test   al,0x9d
  43e386:	aam    0x30
  43e388:	cwde   
  43e389:	popf   
  43e38a:	in     al,0x30
  43e38c:	mov    BYTE PTR [ebp-0x6817cf0c],bl
  43e392:	add    al,0x31
  43e394:	test   al,0x97
  43e396:	adc    al,0x31
  43e398:	fcomp  DWORD PTR [eax-0x6837cedc]
  43e39e:	xor    al,0x31
  43e3a0:	push   0x68314497
  43e3a5:	xchg   edi,eax
  43e3a6:	push   esp
  43e3a7:	xor    DWORD PTR [eax-0x69],ebx
  43e3aa:	xor    DWORD PTR fs:[eax-0x69],ecx
  43e3ae:	je     0x43e3e1
  43e3b0:	sub    BYTE PTR [ecx-0x66d7ce7c],bl
  43e3b6:	xchg   esp,eax
  43e3b7:	xor    DWORD PTR [eax],ebx
  43e3b9:	cdq    
  43e3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e3bb:	xor    eax,ecx
  43e3bd:	cwde   
  43e3be:	mov    ah,0x31
  43e3c0:	sub    BYTE PTR [edi-0x68d7ce3c],dl
  43e3c6:	aam    0x31
  43e3c8:	aad    0xc6
  43e3ca:	in     eax,dx
  43e3cb:	jmp    0x43e371
  43e3cd:	mov    esi,0xa6a4fbed
  43e3d2:	out    dx,al
  43e3d3:	or     eax,DWORD PTR [eax]
  43e3d5:	add    BYTE PTR [edi],al
  43e3d7:	mov    edi,0x7071bee
  43e3dc:	out    dx,al
  43e3dd:	sub    eax,DWORD PTR [edi]
  43e3df:	lahf   
  43e3e0:	out    dx,al
  43e3e1:	cmp    eax,DWORD PTR [edi]
  43e3e3:	out    0xed,eax
  43e3e5:	dec    ebx
  43e3e6:	out    0xde,eax
  43e3e8:	in     eax,dx
  43e3e9:	pop    ebx
  43e3ea:	out    0x6,eax
  43e3ec:	out    dx,al
  43e3ed:	imul   esp,edi,0xfffffffe
  43e3f0:	in     eax,dx
  43e3f1:	jnp    0x43e3da
  43e3f3:	es out dx,eax
  43e3f5:	mov    eax,edi
  43e3f7:	ds out dx,eax
  43e3f9:	fwait
  43e3fa:	mov    DWORD PTR [esi-0x11],0xeedec7ab
  43e401:	mov    ebx,0xcbeee6c7
  43e406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e407:	fsubp  st(6),st
  43e409:	(bad)  [edi-0x581410ba]
  43e40f:	ds out dx,eax
  43e411:	sti    
  43e412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e414:	out    dx,eax
  43e415:	or     eax,DWORD PTR [esi]
  43e417:	mov    ebp,0x5061bef
  43e41c:	out    dx,eax
  43e41d:	sub    eax,DWORD PTR [esi]
  43e41f:	popf   
  43e420:	out    dx,eax
  43e421:	cmp    eax,DWORD PTR [esi]
  43e423:	gs out dx,eax
  43e425:	dec    ebx
  43e426:	out    0x5c,al
  43e428:	out    dx,eax
  43e429:	pop    ebx
  43e42a:	out    0x84,al
  43e42c:	out    dx,eax
  43e42d:	imul   esp,esi,0x7c
  43e430:	out    dx,eax
  43e431:	jnp    0x43e419
  43e433:	and    al,0xf0
  43e435:	mov    eax,esi
  43e437:	cmp    al,0xf0
  43e439:	fwait
  43e43a:	add    BYTE PTR [eax],al
  43e43c:	mov    BYTE PTR [eax+esi*8-0x55],0xc6
  43e441:	fsub   st(7),st
  43e443:	mov    ebx,0xf7ab09c6
  43e448:	sahf   
  43e449:	xlat   BYTE PTR ds:[ebx]
  43e44a:	mov    dl,0xf7
  43e44c:	mov    ss,edi
  43e44e:	retf   0x6ef7
  43e451:	xlat   BYTE PTR ds:[ebx]
  43e452:	shl    bh,cl
  43e454:	pop    esi
  43e455:	xlat   BYTE PTR ds:[ebx]
  43e456:	jmp    0xeeef:0xd2dddeef
  43e45d:	fisttp QWORD PTR [edx]
  43e45f:	lock out dx,al
  43e461:	(bad)  
  43e463:	out    dx,eax
  43e464:	(bad)  
  43e465:	(bad)  [edx]
  43e467:	lock sahf 
  43e469:	fnsave [edx]
  43e46b:	lock mov ds,ebp
  43e46e:	or     dh,al
  43e470:	scas   al,BYTE PTR es:[edi]
  43e471:	fst    QWORD PTR [edx]
  43e473:	lock sahf 
  43e475:	(bad)  [edx-0x10]
  43e478:	pop    esi
  43e479:	ficom  WORD PTR [edx-0x10]
  43e47c:	outs   dx,BYTE PTR ds:[esi]
  43e47d:	fimul  WORD PTR [edx-0x10]
  43e480:	fidiv  WORD PTR cs:[edx]
  43e483:	lock cli 
  43e485:	xchg   edx,eax
  43e486:	out    0x23,al
  43e488:	aad    0x9
  43e48a:	mov    bh,0x3
  43e48c:	aad    0x9
  43e48e:	jmp    0x43e486
  43e490:	jbe    0x43e468
  43e492:	mov    esi,0xbad66af6
  43e497:	test   BYTE PTR [edx-0x29],0x62
  43e49b:	neg    DWORD PTR [edx-0x2a]
  43e49e:	push   edx
  43e49f:	test   DWORD PTR [eax],0x72d67a00
  43e4a5:	idiv   esi
  43e4a7:	(bad)  [edx-0x4d21e111]
  43e4ad:	out    dx,eax
  43e4ae:	push   cs
  43e4af:	fimul  WORD PTR [edx-0x6d21d111]
  43e4b5:	out    dx,eax
  43e4b6:	push   ds
  43e4b7:	fisubr WORD PTR [edx-0x10]
  43e4ba:	pop    esi
  43e4bb:	fst    QWORD PTR [edx-0x10]
  43e4be:	outs   dx,BYTE PTR ds:[esi]
  43e4bf:	(bad)  
  43e4c1:	dec    esp
  43e4c2:	test   DWORD PTR [esi+0x33],ebx
  43e4c5:	xor    eax,0xad334e85
  43e4ca:	cmp    BYTE PTR [esi-0x51854acd],0x33
  43e4d1:	int    0x72
  43e4d3:	sahf   
  43e4d4:	xor    edx,ebp
  43e4d6:	push   0xffffff92
  43e4d8:	clc    
  43e4d9:	jmp    0x1143eee4
  43e4de:	ror    DWORD PTR [ecx],1
  43e4e0:	add    cl,dl
  43e4e2:	xor    ch,dh
  43e4e4:	xor    ecx,DWORD PTR [ecx]
  43e4e6:	inc    ebp
  43e4e7:	(bad)  
  43e4e8:	xor    esi,DWORD PTR [ecx-0x46cc41be]
  43e4ee:	cmp    al,BYTE PTR [esi]
  43e4f0:	xor    esp,ecx
  43e4f2:	and    eax,0x27a9315a
  43e4f7:	dec    edx
  43e4f8:	aaa    
  43e4f9:	xor    eax,0x7d374200
  43e4fe:	stc    
  43e4ff:	ins    DWORD PTR es:[edi],dx
  43e500:	cmp    ebp,ecx
  43e502:	xchg   dx,ax
  43e504:	clc    
  43e505:	and    DWORD PTR [eax],eax
  43e507:	add    cl,dl
  43e509:	or     DWORD PTR [eax],eax
  43e50b:	jno    0x43e4f4
  43e50d:	jge    0x43e53f
  43e50f:	jge    0x43e4f8
  43e511:	imul   esi,DWORD PTR [eax],0x5
  43e514:	icebp  
  43e515:	dec    ecx
  43e516:	cmp    BYTE PTR [esi+ebp*8+0x77],ah
  43e51a:	aaa    
  43e51b:	loope  0x43e4e0
  43e51d:	cmp    dh,BYTE PTR ds:0x3492bb71
  43e523:	idiv   BYTE PTR [edx-0x4db4c4b2]
  43e529:	repnz cmp dh,BYTE PTR [eax+0x593b1bbd]
  43e530:	mov    ebp,0xacb83ab9
  43e535:	xor    edi,DWORD PTR [edx]
  43e537:	imul   ebp,DWORD PTR [edx+ebx*4-0x5bacffc7],0xa40e3f4b
  43e542:	cmp    BYTE PTR [edi],0xc8
  43e545:	mov    ds:0xa3ca3fc8,eax
  43e54a:	clc    
  43e54b:	(bad)  
  43e54c:	jl     0x43e57b
  43e54e:	stc    
  43e54f:	call   FWORD PTR [esi+eax*1+0x0]
  43e553:	add    BYTE PTR [edx-0x63],bh
  43e556:	cmp    dh,BYTE PTR [eax]
  43e558:	out    dx,eax
  43e559:	xchg   ebp,eax
  43e55a:	pusha  
  43e55b:	xor    ebp,edx
  43e55d:	xchg   edi,eax
  43e55e:	loopne 0x43e592
  43e560:	cmp    BYTE PTR [esi-0x695ecc96],dl
  43e566:	fnsave [ebx]
  43e568:	das    
  43e569:	mov    eax,ds:0x342c
  43e56e:	pop    edx
  43e56f:	call   0x3559:0xa03d34bb
  43e576:	mov    eax,0x4b3593a0
  43e57b:	mov    eax,ds:0x9ba13667
  43e580:	sub    eax,0x18a52c37
  43e585:	cmp    BYTE PTR [edx-0x63],dh
  43e588:	xchg   ebx,eax
  43e589:	cmp    BYTE PTR [esi+0x7438c69d],bh
  43e58f:	popf   
  43e590:	sbb    BYTE PTR [ecx],bh
  43e592:	and    DWORD PTR [esi+edx*2+0x6aa41739],esp
  43e599:	cmp    DWORD PTR [ebx],ecx
  43e59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e59c:	cwde   
  43e59d:	cmp    DWORD PTR [edi-0x5c],esp
  43e5a0:	sar    DWORD PTR [ecx],1
  43e5a2:	or     ah,BYTE PTR [ebp-0x615ac5f6]
  43e5a8:	sbb    al,0x3a
  43e5aa:	mov    esi,0x243a639e
  43e5af:	mov    al,ds:0x9fcd3abd
  43e5b4:	add    eax,0xeb5dd53b
  43e5b9:	xchg   ebp,eax
  43e5ba:	fsubp  st(4),st
  43e5bc:	jmp    0xc91e:0xe096cee2
  43e5c3:	push   esi
  43e5c4:	loopne 0x43e585
  43e5c6:	shl    eax,0xe7
  43e5c9:	sar    DWORD PTR [ecx-0x4e121801],1
  43e5cf:	stos   BYTE PTR es:[edi],al
  43e5d0:	loopne 0x43e5ff
  43e5d2:	add    BYTE PTR [eax],al
  43e5d4:	test   al,0xe7
  43e5d6:	loopne 0x43e63b
  43e5d8:	mov    al,ds:0x98d1e17a
  43e5dd:	pop    es
  43e5de:	out    0x2f,al
  43e5e0:	adc    ebx,ecx
  43e5e2:	in     eax,0x71
  43e5e4:	or     ecx,DWORD PTR [esi+eiz*8-0x18fefc30]
  43e5eb:	cmp    eax,0xe0e769fa
  43e5f0:	repnz mov ds:0xe2aff6c,al
  43e5f6:	std    
  43e5f7:	call   ebp
  43e5f9:	test   al,0xec
  43e5fb:	ss in  eax,0x6
  43e5fe:	hlt    
  43e5ff:	imul   eax,ebp,0x39
  43e602:	in     eax,dx
  43e603:	stc    
  43e604:	lds    esp,FWORD PTR [ebp-0xb3bf713]
  43e60a:	in     al,dx
  43e60b:	push   esp
  43e60c:	les    eax,FWORD PTR [ebp*8-0x12535b99]
  43e613:	jle    0x43e5b9
  43e615:	sbb    esi,ebp
  43e617:	mov    DWORD PTR [ebp+ecx*1-0x735b6b12],esp
  43e61e:	in     eax,dx
  43e61f:	mov    ebx,0xebee4304
  43e624:	add    al,0xd4
  43e626:	in     eax,dx
  43e627:	test   BYTE PTR [esp+ebp*4],0xf2
  43e62b:	or     eax,0x58f2bb07
  43e630:	out    0x9,eax
  43e632:	push   ebp
  43e633:	cmc    
  43e634:	outs   dx,DWORD PTR ds:[esi]
  43e635:	fcom   QWORD PTR [ebp-0xc]
  43e638:	add    BYTE PTR [eax],al
  43e63a:	(bad)  
  43e63c:	mov    eax,0x87d4f7ef
  43e641:	out    dx,al
  43e642:	stc    
  43e643:	aam    0x15
  43e645:	out    dx,al
  43e646:	in     al,0xd7
  43e648:	xchg   ebp,eax
  43e649:	icebp  
  43e64a:	(bad)  
  43e64b:	xlat   BYTE PTR ds:[ebx]
  43e64c:	imul   esi,ecx,0xf0a6d89f
  43e652:	cli    
  43e653:	(bad)  
  43e654:	push   ebp
  43e655:	out    dx,eax
  43e656:	xor    edi,edx
  43e658:	(bad)  
  43e659:	jmp    0x43e651
  43e65b:	ror    DWORD PTR [eax-0x402d8314],1
  43e661:	in     al,dx
  43e662:	push   cs
  43e663:	shr    DWORD PTR [ecx-0x13],1
  43e666:	(bad)  
  43e667:	shl    DWORD PTR [ebx+0x15d142ed],1
  43e66d:	jmp    0xd356:0xeb34d45c
  43e674:	shr    ebx,0x30
  43e677:	ror    ecx,cl
  43e679:	out    0xa3,eax
  43e67b:	int    0x92
  43e67d:	call   0xe91bb376
  43e682:	cmp    ch,cl
  43e684:	repnz in eax,0xca
  43e687:	iret   
  43e688:	sub    eax,0x84d052e6
  43e68d:	out    0xbf,al
  43e68f:	into   
  43e690:	out    0xc3,al
  43e692:	repnz mov fs,WORD PTR [esi+0x4]
  43e696:	aad    0x9
  43e698:	repz repz jae 0x43e675
  43e69c:	inc    esp
  43e69d:	hlt    
  43e69e:	add    BYTE PTR [eax],al
  43e6a0:	lods   al,BYTE PTR ds:[esi]
  43e6a1:	fadd   st,st(5)
  43e6a3:	hlt    
  43e6a4:	pop    ebp
  43e6a5:	fcomp  DWORD PTR [ebp+esi*8+0xb]
  43e6a9:	(bad)  
  43e6ab:	repnz std 
  43e6ad:	(bad)  
  43e6af:	(bad)
  43e6b2:	sub    al,0x12
  43e6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e6b5:	loop   0x43e6ea
  43e6b7:	fdivr  QWORD PTR [edx-0x5ac5cc75]
  43e6bd:	mov    eax,ds:0xeda5f133
  43e6c2:	xor    ch,BYTE PTR [ecx-0x7c]
  43e6c5:	pop    ebp
  43e6c6:	xor    al,BYTE PTR [edi-0x7c]
  43e6c9:	cmc    
  43e6ca:	xor    DWORD PTR [edi+0x2d317670],eax
  43e6d0:	imul   eax,ecx,0x31
  43e6d3:	ret    0x3083
  43e6d6:	xor    DWORD PTR [eax+0x7a],edx
  43e6d9:	enter  0xf830,0x6e
  43e6dd:	int    0x37
  43e6df:	inc    esi
  43e6e0:	imul   edx,DWORD PTR [eax+edi*1],0x37083eba
  43e6e7:	fdivr  DWORD PTR [ecx]
  43e6e9:	and    BYTE PTR [edi],dh
  43e6eb:	xor    BYTE PTR [ecx],0xa5
  43e6ee:	fisubr WORD PTR ss:[esp+ebp*8]
  43e6f2:	xor    eax,0x35613f2e
  43e6f7:	arpl   WORD PTR [esp+esi*8],di
  43e6fa:	xor    al,0x12
  43e6fc:	cs jno 0x43e733
  43e6ff:	mov    eax,ds:0xe734bd2f
  43e704:	add    BYTE PTR [eax],al
  43e706:	cli    
  43e707:	lods   eax,DWORD PTR ds:[esi]
  43e708:	cmp    ebx,esp
  43e70a:	std    
  43e70b:	dec    esi
  43e70c:	cmp    esp,eax
  43e70e:	sti    
  43e70f:	fstp   TBYTE PTR [eax]
  43e711:	push   ebp
  43e712:	repz arpl WORD PTR [eax],di
  43e715:	jmp    0xca3c7520
  43e71a:	(bad)  
  43e71b:	or     DWORD PTR [eax],eax
  43e71d:	jmp    0xc1742d08
  43e722:	out    0xa2,al
  43e724:	das    
  43e725:	clc    
  43e726:	leave  
  43e727:	jmp    0x96bce75a
  43e72c:	dec    ecx
  43e72d:	xor    DWORD PTR [esi+0xa318696],esp
  43e733:	xchg   esi,eax
  43e734:	std    
  43e735:	xor    DWORD PTR [ebp+0x7532489b],esp
  43e73b:	fwait
  43e73c:	(bad)  
  43e73d:	xor    cl,ch
  43e73f:	call   0x33a1:0x98553306
  43e746:	(bad)  
  43e747:	xchg   edi,eax
  43e748:	push   DWORD PTR [ebx]
  43e74a:	popfw  
  43e74c:	xchg   DWORD PTR [edi+edx*1],esi
  43e74f:	popf   
  43e750:	repz xor al,0x91
  43e753:	call   0x3738:0x99b9357b
  43e75a:	hlt    
  43e75b:	popf   
  43e75c:	jge    0x43e797
  43e75e:	fcomp  DWORD PTR [edi-0x5caec519]
  43e764:	mov    edi,DWORD PTR [ebx+ebx*2]
  43e767:	mov    ds:0x3ccc,al
  43e76c:	sbb    DWORD PTR [edx-0x5aebc236],esp
  43e772:	pop    eax
  43e773:	aas    
  43e774:	xchg   ecx,eax
  43e775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e776:	clc    
  43e777:	(bad)  
  43e778:	cmp    al,0x69
  43e77a:	clc    
  43e77b:	inc    DWORD PTR [eax+0x6]
  43e77e:	add    BYTE PTR [eax],al
  43e780:	je     0x43e718
  43e782:	stc    
  43e783:	xor    BYTE PTR ds:0xb7311098,bl
  43e789:	cwde   
  43e78a:	dec    ecx
  43e78b:	xor    ecx,ebx
  43e78d:	cwde   
  43e78e:	jge    0x43e7c1
  43e790:	stos   DWORD PTR es:[edi],eax
  43e791:	cwde   
  43e792:	popf   
  43e793:	xor    DWORD PTR [esi+0x4631c598],edi
  43e799:	cdq    
  43e79a:	clc    
  43e79b:	xor    ebp,eax
  43e79d:	xchg   edi,eax
  43e79e:	inc    esi
  43e79f:	xor    ch,BYTE PTR [ebx]
  43e7a1:	fwait
  43e7a2:	push   esi
  43e7a3:	xor    dl,ch
  43e7a5:	retf   0x6eee
  43e7a8:	pop    es
  43e7a9:	and    dh,ch
  43e7ab:	xchg   ebx,eax
  43e7ac:	pop    es
  43e7ad:	sub    esi,ebp
  43e7af:	mov    bh,0x7
  43e7b1:	jecxz  0x43e7a0
  43e7b3:	rol    BYTE PTR [edi],0x3f
  43e7b6:	out    dx,al
  43e7b7:	in     al,0xe7
  43e7b9:	(bad)  
  43e7ba:	in     eax,dx
  43e7bb:	std    
  43e7bc:	out    0x99,eax
  43e7be:	out    dx,eax
  43e7bf:	push   cs
  43e7c0:	out    0xba,al
  43e7c2:	out    dx,eax
  43e7c3:	cmp    ah,dh
  43e7c5:	push   eax
  43e7c6:	out    dx,eax
  43e7c7:	push   ebp
  43e7c8:	(bad)  
  43e7c9:	pop    ebx
  43e7ca:	out    dx,eax
  43e7cb:	ins    BYTE PTR es:[edi],dx
  43e7cc:	(bad)  
  43e7cd:	mov    bh,ch
  43e7cf:	jg     0x43e7d1
  43e7d1:	add    dh,al
  43e7d3:	sbb    edi,ebp
  43e7d5:	mov    dh,al
  43e7d7:	loop   0x43e7c7
  43e7d9:	shl    DWORD PTR [esi-0x592a110e],0xb5
  43e7e0:	out    dx,eax
  43e7e1:	in     al,dx
  43e7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e7e3:	test   al,0xef
  43e7e5:	std    
  43e7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e7e7:	test   al,0xe8
  43e7e9:	push   cs
  43e7ea:	or     DWORD PTR [ecx-0x6cfed418],ebx
  43e7f0:	call   0xe8cff126
  43e7f5:	retf   0x6f01
  43e7f8:	call   0xe90ad1d7
  43e7fd:	pop    ss
  43e7fe:	loopne 0x43e803
  43e800:	jmp    0xe9ffd02c
  43e805:	mov    dl,0xe0
  43e807:	add    dl,ch
  43e809:	clc    
  43e80a:	retf   
  43e80b:	mov    ah,0xeb
  43e80d:	inc    esp
  43e80e:	ret    0xec17
  43e811:	retf   0x7fca
  43e814:	jmp    0x43e86f
  43e816:	mov    ebp,0xad9ee492
  43e81b:	dec    edx
  43e81c:	in     eax,0xa8
  43e81e:	lods   eax,DWORD PTR ds:[esi]
  43e81f:	or     DWORD PTR [ebx+ebp*8-0x14dd2ee1],ebx
  43e826:	adc    dl,cl
  43e828:	and    bl,ch
  43e82a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e82b:	shr    BYTE PTR [edx],cl
  43e82d:	jmp    0x43e7e7
  43e82f:	rcl    BYTE PTR [eax],cl
  43e831:	jmp    0x43e83a
  43e833:	sar    edx,1
  43e835:	jmp    0xea9c:0xd0f80000
  43e83c:	and    edx,ecx
  43e83e:	xchg   ebx,eax
  43e83f:	jmp    0xd13b:0xea87d101
  43e846:	fs jmp 0xd0b1:0xea2bd16e
  43e84e:	(bad)  
  43e84f:	call   0xe900b707
  43e854:	push   ds
  43e855:	iret   
  43e856:	push   eax
  43e857:	call   0xe855b790
  43e85c:	loope  0x43e82a
  43e85e:	mov    esp,0x44cd11e6
  43e863:	loope  0x43e8cd
  43e865:	int    0xc6
  43e867:	loop   0x43e8c3
  43e869:	mov    esp,esi
  43e86b:	xchg   ebx,eax
  43e86c:	push   edx
  43e86d:	mov    eax,DWORD PTR [esi+0x4]
  43e870:	aad    0x9
  43e872:	daa    
  43e873:	aad    0x94
  43e875:	fcom   DWORD PTR [edi]
  43e877:	aad    0xa5
  43e879:	fsubr  DWORD PTR [ecx-0x2b]
  43e87c:	pop    edi
  43e87d:	(bad)  [esi-0x2b]
  43e880:	dec    esp
  43e881:	fstp   DWORD PTR [edi-0x2b]
  43e884:	pop    ebp
  43e885:	fnstenv [ecx-0x6a27002b]
  43e88b:	aad    0xb
  43e88d:	fsincos 
  43e88f:	aad    0x64
  43e891:	fmul   DWORD PTR [ebx-0x6f29282a]
  43e897:	fsub   st,st(2)
  43e899:	aam    0xff
  43e89b:	ret    0x0
  43e89e:	push   cs
  43e89f:	(bad)  [edi]
  43e8a1:	xor    eax,0xe1371d09
  43e8a6:	add    DWORD PTR [ebx],edi
  43e8a8:	ss push esi
  43e8aa:	sti    
  43e8ab:	sti    
  43e8ac:	xor    al,0x66
  43e8ae:	mov    dl,0x74
  43e8b0:	xor    al,0x83
  43e8b2:	stos   BYTE PTR es:[edi],al
  43e8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e8b4:	xor    al,0x57
  43e8b6:	mov    ds:0x9ab63c32,al
  43e8bb:	add    DWORD PTR [ebx],edi
  43e8bd:	fbstp  TBYTE PTR [ebp-0x4b0fc516]
  43e8c3:	cmp    bh,BYTE PTR ds:[edx+0x7a392fb7]
  43e8ca:	mov    dh,0x8a
  43e8cc:	clc    
  43e8cd:	jmp    0x6e3c73a8
  43e8d2:	ror    DWORD PTR [ecx],1
  43e8d4:	add    bl,dh
  43e8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e8d7:	inc    edx
  43e8d8:	xor    BYTE PTR [edi-0x5f],ch
  43e8db:	stos   BYTE PTR es:[edi],al
  43e8dc:	das    
  43e8dd:	add    ecx,DWORD PTR [ecx-0x7e15d067]
  43e8e3:	add    BYTE PTR [edi],ch
  43e8e5:	or     ecx,DWORD PTR [eax-0x7e95d0ec]
  43e8eb:	jae    0x43e91b
  43e8ed:	sub    eax,0x472e2f2b
  43e8f2:	and    ebx,DWORD PTR [edx]
  43e8f4:	cs jno 0x43e91f
  43e8f7:	jne    0x43e926
  43e8f9:	sbb    BYTE PTR [edx],ah
  43e8fb:	mov    DWORD PTR [edi+eax*2],ebp
  43e8fe:	or     eax,0x1e32f3
  43e903:	add    BYTE PTR [esp+esi*1],cl
  43e906:	xor    ebx,DWORD PTR [edx-0x3]
  43e909:	xchg   ebx,eax
  43e90a:	xor    dl,BYTE PTR [eax]
  43e90c:	jmp    DWORD PTR ds:0x692f6731
  43e912:	xor    BYTE PTR [edi+0x2f],cl
  43e915:	das    
  43e916:	cmp    BYTE PTR [eax],al
  43e918:	and    DWORD PTR [ebp-0x534cc6c9],ebp
  43e91e:	jmp    0xe43b:0x13ab0c3a
  43e925:	stos   BYTE PTR es:[edi],al
  43e926:	jbe    0x43e963
  43e928:	pop    esi
  43e929:	stos   DWORD PTR es:[edi],eax
  43e92a:	nop
  43e92b:	cmp    edi,DWORD PTR [ecx+ebp*4+0x69433c44]
  43e932:	popf   
  43e933:	cmp    al,0xf7
  43e935:	push   0x6a433d68
  43e93a:	aad    0x3d
  43e93c:	sub    ebp,DWORD PTR [ebx-0x6d]
  43e93f:	imul   BYTE PTR ds:[edx-0x31]
  43e943:	xlat   BYTE PTR ds:[ebx]
  43e945:	ins    BYTE PTR es:[edi],dx
  43e946:	xor    eax,0x846c693f
  43e94b:	aas    
  43e94c:	and    ebp,DWORD PTR [ebp+edx*4+0x3f]
  43e950:	push   ds
  43e951:	ins    BYTE PTR es:[edi],dx
  43e952:	test   eax,0xb66c223f
  43e957:	aas    
  43e958:	mov    al,0x6b
  43e95a:	sar    DWORD PTR [edi],0xdc
  43e95d:	imul   ecx,esi,0x3f
  43e960:	(bad)  
  43e961:	imul   ebx,edx,0x3f
  43e964:	aam    0x6b
  43e966:	in     eax,0x3f
  43e968:	add    BYTE PTR [eax],al
  43e96a:	sub    BYTE PTR [ebx-0xd],0x3f
  43e96e:	ins    BYTE PTR es:[edi],dx
  43e96f:	jge    0x43e96a
  43e971:	jmp    DWORD PTR [eax]
  43e973:	push   cs
  43e974:	add    BYTE PTR [eax],al
  43e976:	aas    
  43e977:	pop    ebp
  43e978:	add    esi,DWORD PTR [eax]
  43e97a:	cmp    bl,BYTE PTR [ebp+0x1b]
  43e97d:	xor    cl,cl
  43e97f:	pop    ebp
  43e980:	sub    esi,DWORD PTR [eax]
  43e982:	sub    DWORD PTR [ebp+0x3f],ebx
  43e985:	xor    bl,cl
  43e987:	pop    ebp
  43e988:	dec    ebp
  43e989:	xor    BYTE PTR [edi-0x53cfa6a3],dl
  43e98f:	pop    ebp
  43e990:	jle    0x43e9c2
  43e992:	aad    0xda
  43e994:	rcr    ebp,cl
  43e996:	lds    ebx,FWORD PTR [ebp+0x7dc407d3]
  43e99c:	int    0xd
  43e99e:	les    ebx,FWORD PTR [edi-0x33]
  43e9a1:	sbb    esp,DWORD PTR [ecx+edx*2+0x4ba421cd]
  43e9a8:	int    0x2f
  43e9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9ab:	sub    cl,ch
  43e9ad:	cmp    BYTE PTR [ecx+ebx*2-0x31fb1833],ah
  43e9b4:	int3   
  43e9b5:	in     eax,dx
  43e9b6:	add    al,0xdd
  43e9b8:	int3   
  43e9b9:	std    
  43e9ba:	add    al,0xea
  43e9bc:	shl    DWORD PTR [edi+eax*1-0x18282ddc],1
  43e9c3:	rcl    ecx,1
  43e9c5:	mul    bh
  43e9c7:	arpl   bx,dx
  43e9c9:	push   ds
  43e9ca:	out    0xc4,al
  43e9cc:	rcr    DWORD PTR [ebp+0x0],cl
  43e9cf:	add    dh,ah
  43e9d1:	clc    
  43e9d2:	rcr    BYTE PTR [edx-0x572d363a],cl
  43e9d8:	(bad)  
  43e9d9:	xor    edx,ebx
  43e9db:	iret   
  43e9dc:	(bad)  
  43e9dd:	psrlq  mm0,QWORD PTR ds:0x1ad060c1
  43e9e4:	test   eax,0xa1f5d083
  43e9e9:	ins    DWORD PTR es:[edi],dx
  43e9ea:	sar    DWORD PTR [eax+ebp*4],1
  43e9ed:	cmp    al,0xd1
  43e9ef:	push   0xffffffa0
  43e9f1:	hlt    
  43e9f2:	rol    DWORD PTR [esi-0x3c2e60f8],1
  43e9f8:	add    BYTE PTR [ebp-0x6f4e02f],bh
  43e9fe:	(bad)  
  43e9ff:	aam    0x3
  43ea01:	push   ss
  43ea02:	xlat   BYTE PTR ds:[ebx]
  43ea03:	ins    BYTE PTR es:[edi],dx
  43ea04:	jmp    0xd7eb:0xe283d739
  43ea0b:	fsub   st(2),st
  43ea0d:	or     DWORD PTR [esp+ebx*8],esi
  43ea10:	push   edx
  43ea11:	inc    ecx
  43ea12:	dec    ecx
  43ea13:	fist   DWORD PTR [eax+0x41]
  43ea16:	xchg   esi,eax
  43ea17:	fnclex 
  43ea19:	inc    edx
  43ea1a:	mov    cl,0xda
  43ea1c:	jmp    0x43ea61
  43ea1e:	dec    ebx
  43ea1f:	fisttp QWORD PTR ds:0xdcdce143
  43ea25:	inc    esp
  43ea26:	hlt    
  43ea27:	fcom   QWORD PTR [ebx+0x44]
  43ea2a:	mov    bl,ah
  43ea2c:	cmc    
  43ea2d:	inc    ebx
  43ea2e:	std    
  43ea2f:	fist   WORD PTR [esi+0xdede46]
  43ea35:	add    BYTE PTR [ebp+eax*2+0x23],bl
  43ea39:	fidivr WORD PTR [ebp-0x201e0cbb]
  43ea3f:	inc    edi
  43ea40:	or     esp,edx
  43ea42:	lock inc edi
  43ea44:	sti    
  43ea45:	loope  0x43ea38
  43ea47:	inc    edi
  43ea48:	sahf   
  43ea49:	loope  0x43ea80
  43ea4b:	dec    eax
  43ea4c:	mov    cl,0xe1
  43ea4e:	xchg   esp,eax
  43ea4f:	dec    eax
  43ea50:	inc    esp
  43ea51:	loope  0x43ea26
  43ea53:	inc    esi
  43ea54:	mov    ebp,0xe68792e0
  43ea59:	jecxz  0x43e9e6
  43ea5b:	xchg   DWORD PTR [edx-0x31f62afd],ebx
  43ea61:	shl    DWORD PTR [ebx],cl
  43ea63:	cmp    dh,BYTE PTR ds:0x4c3aa8d5
  43ea69:	aam    0x84
  43ea6b:	cmp    ecx,DWORD PTR ds:0xc53b7cd4
  43ea71:	shl    DWORD PTR [ebx+edi*1-0x33],cl
  43ea75:	sar    DWORD PTR [ebx+edi*1],cl
  43ea78:	aad    0xd3
  43ea7a:	inc    esp
  43ea7b:	cmp    ecx,ebp
  43ea7d:	sar    DWORD PTR [ebx+edi*1],cl
  43ea80:	in     eax,0xd7
  43ea82:	aam    0x3d
  43ea84:	in     eax,dx
  43ea85:	xlat   BYTE PTR ds:[ebx]
  43ea86:	fdivr  QWORD PTR ds:0xee02db00
  43ea8c:	xor    esi,DWORD PTR [edi-0x2fcc7a03]
  43ea92:	std    
  43ea93:	inc    esi
  43ea94:	xor    esp,DWORD PTR [esi]
  43ea96:	sub    al,0x9f
  43ea98:	xor    bl,BYTE PTR [edi+0x472c0000]
  43ea9e:	xor    bl,BYTE PTR [esi+0x2b]
  43eaa1:	enter  0x9131,0x23
  43eaa5:	xor    BYTE PTR [ecx],0xe9
  43eaa8:	push   es
  43eaa9:	mov    al,bh
  43eaab:	(bad)
  43eaae:	add    BYTE PTR [edi*8-0x6dace43],ch
  43eab5:	enter  0xdd37,0xae
  43eab9:	xchg   esp,eax
  43eaba:	ss fwait
  43eabc:	test   al,0x50
  43eabe:	ss mov al,ss:0x9cbf360a
  43eac5:	scas   eax,DWORD PTR es:[edi]
  43eac6:	xor    eax,0x3beb8e26
  43eacb:	and    esi,DWORD PTR [ebp-0x4a53c498]
  43ead1:	mov    al,ds:0x8716e939
  43ead6:	clc    
  43ead7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ead8:	(bad)  
  43ead9:	or     DWORD PTR [eax],eax
  43eadb:	jbe    0x43ea7d
  43eadd:	stos   DWORD PTR es:[edi],eax
  43eade:	cs mov ah,0xa4
  43eae1:	call   0xcce66c19
  43eae6:	xor    DWORD PTR [ebx-0x75],ebp
  43eae9:	xchg   BYTE PTR [ecx],dh
  43eaeb:	mov    ah,0x83
  43eaed:	add    al,0x31
  43eaef:	int3   
  43eaf0:	jle    0x43eb2b
  43eaf2:	cmp    BYTE PTR [ecx+0x7e],ch
  43eaf5:	mov    BYTE PTR [edi],dh
  43eaf7:	jmp    0x43eb2a
  43eaf9:	inc    esp
  43eafa:	aaa    
  43eafb:	xlat   BYTE PTR ds:[ebx]
  43eafc:	sub    DWORD PTR [ecx+0xcf35],ebx
  43eb02:	sbb    al,0xd9
  43eb04:	xor    al,0x0
  43eb06:	test   BYTE PTR [ebx+0x6],ah
  43eb09:	cmp    al,0xc2
  43eb0b:	data16 (bad) 
  43eb0d:	cmp    al,0xc4
  43eb0f:	addr16 pop edi
  43eb11:	ds jmp 0x6283917d
  43eb17:	addr16 clc 
  43eb19:	(bad)  
  43eb1a:	cld    
  43eb1b:	cmp    ecx,edi
  43eb1d:	jmp    DWORD PTR [eax]
  43eb1f:	or     eax,0x5d070000
  43eb24:	and    dh,BYTE PTR [ecx]
  43eb26:	cmp    al,0x5d
  43eb28:	xor    DWORD PTR [ecx],esi
  43eb2a:	mov    esp,0xc4313e5c
  43eb2f:	pop    esp
  43eb30:	push   esp
  43eb31:	xor    esi,ecx
  43eb33:	pop    esp
  43eb34:	bound  esi,QWORD PTR [ecx]
  43eb36:	pop    eax
  43eb37:	pop    ebp
  43eb38:	xchg   ebp,eax
  43eb39:	xor    DWORD PTR [eax+0x5e],ebx
  43eb3c:	mov    ds:0xb85e6031,al
  43eb41:	xor    edx,edi
  43eb43:	pop    ebp
  43eb44:	(bad)  
  43eb45:	xor    eax,edi
  43eb47:	pop    ebp
  43eb48:	add    BYTE PTR [edx],dh
  43eb4a:	jo     0x43eba7
  43eb4c:	xchg   edx,eax
  43eb4d:	xor    dl,BYTE PTR [edi+0x5b]
  43eb50:	mov    dh,0x32
  43eb52:	leave  
  43eb53:	pop    edx
  43eb54:	aad    0x32
  43eb56:	ret    0x195a
  43eb59:	xor    ebx,DWORD PTR [eax]
  43eb5b:	pop    eax
  43eb5c:	scas   al,BYTE PTR es:[edi]
  43eb5d:	xor    esi,DWORD PTR [edx-0x64cbeaa9]
  43eb63:	pop    ebp
  43eb64:	cmp    esi,DWORD PTR [eax+eax*1]
  43eb67:	add    BYTE PTR [edi+0x5d],dl
  43eb6a:	leave  
  43eb6b:	xor    al,0xd9
  43eb6d:	pop    esp
  43eb6e:	jmp    0x43eba4
  43eb70:	jge    0x43ebd4
  43eb72:	push   0x35
  43eb74:	mov    bl,0x61
  43eb76:	(bad)  
  43eb77:	xor    eax,0x360c5f61
  43eb7c:	push   eax
  43eb7d:	pop    edi
  43eb7e:	sub    BYTE PTR [esi],dh
  43eb80:	aad    0x46
  43eb82:	shl    BYTE PTR [ecx+0xb],cl
  43eb85:	mov    ecx,ss
  43eb87:	fild   WORD PTR [ebx]
  43eb89:	js     0x43eb5e
  43eb8b:	sbb    ch,dl
  43eb8d:	and    al,0xd3
  43eb8f:	jns    0x43eb73
  43eb91:	(bad)  
  43eb93:	fucomi st,st(2)
  43eb95:	ja     0x43eb6b
  43eb97:	jnp    0x43eb76
  43eb99:	rcr    ebx,1
  43eb9b:	mov    cl,0xcd
  43eb9d:	jecxz  0x43eb7a
  43eb9f:	ror    ebp,0xae
  43eba2:	fcmovnu st,st(1)
  43eba4:	mov    ebp,0xbde7db90
  43eba9:	(bad)  
  43ebac:	lods   eax,DWORD PTR ds:[esi]
  43ebad:	dec    edi
  43ebae:	aad    0x3d
  43ebb0:	lods   al,BYTE PTR ds:[esi]
  43ebb1:	sub    ebp,edx
  43ebb3:	dec    edi
  43ebb4:	pushf  
  43ebb5:	sbb    al,0xd5
  43ebb7:	pusha  
  43ebb8:	pushf  
  43ebb9:	push   edi
  43ebba:	aad    0x6e
  43ebbc:	or     al,0x6a
  43ebbe:	aad    0x84
  43ebc0:	or     al,0xfe
  43ebc2:	aam    0xc2
  43ebc4:	cld    
  43ebc5:	addr16 (bad) 
  43ebc7:	sbb    bh,bh
  43ebc9:	sbb    dl,dh
  43ebcb:	sub    BYTE PTR [eax],al
  43ebcd:	add    bh,ch
  43ebcf:	jge    0x43eba7
  43ebd1:	inc    eax
  43ebd2:	out    dx,eax
  43ebd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ebd4:	(bad)  
  43ebd5:	dec    esi
  43ebd6:	fistp  WORD PTR [ecx-0xa20842a]
  43ebdc:	aad    0x89
  43ebde:	iret   
  43ebdf:	fcmovnbe st,st(5)
  43ebe1:	or     eax,0xb8d7c6ce
  43ebe6:	mov    esi,0xbeecd724
  43ebeb:	fcomp  DWORD PTR fs:[eax-0x4f]
  43ebef:	inc    ecx
  43ebf0:	loopne 0x43ebd0
  43ebf2:	test   eax,0xa030d963
  43ebf7:	mov    ds:0x9985dd9,al
  43ebfc:	push   0xffffffde
  43ebfe:	jae    0x43ec46
  43ec00:	xchg   esi,eax
  43ec01:	fisub  WORD PTR [esi]
  43ec03:	inc    esi
  43ec04:	(bad)
  43ec07:	inc    esi
  43ec08:	into   
  43ec09:	(bad)  
  43ec0b:	inc    ebx
  43ec0c:	fcmovnu st,st(5)
  43ec0e:	rol    DWORD PTR [ebx+0x2],cl
  43ec11:	fdivp  st(7),st
  43ec13:	inc    ebx
  43ec14:	out    dx,al
  43ec15:	fst    QWORD PTR [esi-0x7421e1bd]
  43ec1b:	inc    ebx
  43ec1c:	push   es
  43ec1d:	fidiv  WORD PTR [ebp+0x43]
  43ec20:	or     al,0xde
  43ec22:	xchg   DWORD PTR [ebx+0xe],eax
  43ec25:	fiadd  WORD PTR [eax+0x48dd5e43]
  43ec2b:	inc    ebx
  43ec2c:	pop    edi
  43ec2d:	fnstsw WORD PTR [eax]
  43ec2f:	inc    ebx
  43ec30:	dec    ecx
  43ec31:	fld    QWORD PTR [eax]
  43ec33:	add    BYTE PTR [esi],ah
  43ec35:	inc    ebx
  43ec36:	xor    ebx,ebp
  43ec38:	and    BYTE PTR [ebx-0x60],al
  43ec3b:	fisttp QWORD PTR [eax]
  43ec3d:	inc    ebx
  43ec3e:	inc    ebx
  43ec3f:	fnsave [ebp-0x3a22a8bc]
  43ec45:	inc    esp
  43ec46:	push   esp
  43ec47:	(bad)  
  43ec49:	inc    edx
  43ec4a:	neg    ah
  43ec4c:	jecxz  0x43ec90
  43ec4e:	or     ch,bl
  43ec50:	cmc    
  43ec51:	inc    edx
  43ec52:	scas   eax,DWORD PTR es:[edi]
  43ec53:	fdiv   QWORD PTR [ecx]
  43ec55:	inc    ebx
  43ec56:	scas   eax,DWORD PTR es:[edi]
  43ec57:	fsubr  QWORD PTR [ecx+0x43]
  43ec5a:	adc    eax,0xe743a2dc
  43ec5f:	and    edx,DWORD PTR [edx-0x2afca97d]
  43ec65:	or     edi,esi
  43ec67:	sar    DWORD PTR [ecx+0x13d3a739],cl
  43ec6d:	cmp    cl,BYTE PTR [edx+0x6a39e7d3]
  43ec73:	sar    DWORD PTR [eax],cl
  43ec75:	cmp    al,BYTE PTR [eax]
  43ec77:	adc    BYTE PTR [esi-0x7819d080],al
  43ec7d:	xor    BYTE PTR [edi],ch
  43ec7f:	sub    al,0x28
  43ec81:	int    0x2e
  43ec83:	js     0x43eca5
  43ec85:	mov    dl,0x2e
  43ec87:	mov    eax,0xc22e6928
  43ec8c:	and    BYTE PTR ds:0xa10b6d2e,ah
  43ec92:	sub    eax,0x2d3d0393
  43ec97:	dec    ecx
  43ec98:	add    BYTE PTR [eax],al
  43ec9a:	or     dl,BYTE PTR [edx-0x4dfd75d4]
  43eca0:	sub    al,0xae
  43eca2:	sub    dh,BYTE PTR [edx+0x2c]
  43eca5:	pushf  
  43eca6:	and    bh,BYTE PTR [edx]
  43eca8:	xor    al,0x3a
  43ecaa:	and    eax,0x255133b0
  43ecaf:	inc    edi
  43ecb0:	xor    esi,DWORD PTR [edx-0x1ecc88fb]
  43ecb6:	add    eax,0x5b5332e
  43ecbb:	mov    esi,DWORD PTR [edx]
  43ecbd:	fld    DWORD PTR [eiz*1+0x70a4b632]
  43ecc4:	xor    DWORD PTR [edi+eiz*4+0x1b],edx
  43ecc8:	xor    DWORD PTR [eax-0x5a],edx
  43eccb:	pop    ds
  43eccc:	cmp    BYTE PTR [ebx],bl
  43ecce:	cdq    
  43eccf:	ja     0x43ed08
  43ecd1:	jae    0x43ec63
  43ecd3:	sub    dh,BYTE PTR [esi]
  43ecd5:	stos   DWORD PTR es:[edi],eax
  43ecd6:	mov    al,bl
  43ecd8:	xor    al,0xc0
  43ecda:	or     DWORD PTR [edi+0x34],0x47
  43ecde:	jp     0x43ece8
  43ece0:	cmp    al,0xf8
  43ece2:	stos   BYTE PTR es:[edi],al
  43ece3:	aas    
  43ece4:	cmp    al,0x73
  43ece6:	lods   eax,DWORD PTR ds:[esi]
  43ece7:	gs cmp ebp,edx
  43ecea:	popf   
  43eceb:	adc    bh,BYTE PTR [ebx]
  43eced:	repz popf 
  43ecef:	and    eax,0x6186003b
  43ecf4:	cmp    eax,0x9360fd3d
  43ecf9:	cmp    eax,0x3e726057
  43ecfe:	add    BYTE PTR [eax],al
  43ed00:	rcr    DWORD PTR [edi-0x21],0x3e
  43ed04:	sub    ah,BYTE PTR [eax-0xa]
  43ed07:	ds dec edx
  43ed09:	pop    edi
  43ed0a:	and    DWORD PTR [edi],edi
  43ed0c:	add    BYTE PTR [edi+0x7a],bl
  43ed0f:	aas    
  43ed10:	mov    bl,0x5f
  43ed12:	clc    
  43ed13:	(bad)  
  43ed14:	cmp    al,0x16
  43ed16:	stc    
  43ed17:	call   DWORD PTR [eax+0x3100000d]
  43ed1d:	push   esi
  43ed1e:	add    dh,BYTE PTR [eax]
  43ed20:	int3   
  43ed21:	pop    ebp
  43ed22:	sbb    eax,0x2b5d2631
  43ed27:	xor    DWORD PTR [esi+0x5d],edi
  43ed2a:	xor    BYTE PTR [ecx],0x86
  43ed2d:	pop    ebp
  43ed2e:	popf   
  43ed2f:	xor    DWORD PTR ds:0x8132655c,edx
  43ed35:	pop    esp
  43ed36:	repz xor dh,bl
  43ed39:	pop    edx
  43ed3a:	add    al,0x33
  43ed3c:	std    
  43ed3d:	pop    edx
  43ed3e:	hlt    
  43ed3f:	xor    ebp,DWORD PTR [eax+ebx*2-0x68]
  43ed43:	outs   dx,DWORD PTR ss:[esi]
  43ed45:	pop    ebx
  43ed46:	aad    0x38
  43ed48:	add    BYTE PTR [esi+0xf],bl
  43ed4b:	cmp    ah,BYTE PTR [edi+ebx*2-0x46]
  43ed4f:	cmp    dh,bl
  43ed51:	pop    esi
  43ed52:	lds    edi,FWORD PTR [edx]
  43ed54:	xchg   ebx,eax
  43ed55:	pusha  
  43ed56:	adc    eax,0x2261dc3b
  43ed5b:	cmp    eax,0x3dc0623e
  43ed60:	or     eax,0x3e9c62
  43ed65:	add    BYTE PTR [edi],ah
  43ed67:	arpl   WORD PTR [ecx-0x339cd7c2],bp
  43ed6d:	ds aad 0x24
  43ed70:	xlat   BYTE PTR ds:[ebx]
  43ed71:	stc    
  43ed72:	mov    ebx,0xb241d54a
  43ed77:	(bad)  
  43ed78:	aad    0x82
  43ed7a:	stos   BYTE PTR es:[edi],al
  43ed7b:	jb     0x43edf9
  43ed7d:	(bad)  
  43ed7e:	(bad)  {k7}{z}
  43ed83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed84:	sar    DWORD PTR [esp+eax*1+0x73dccbd],cl
  43ed8b:	inc    esp
  43ed8c:	rol    BYTE PTR [esi+0x6],cl
  43ed8f:	cld    
  43ed90:	shr    BYTE PTR [edi+0x34d2c406],cl
  43ed96:	jmp    0xe0f1b631
  43ed9b:	dec    esi
  43ed9c:	enter  0xe8ec,0x6e
  43eda0:	into   
  43eda1:	add    eax,0x1ace64e3
  43eda6:	retf   
  43eda7:	fs into 
  43eda9:	aaa    
  43edaa:	ret    
  43edab:	dec    edi
  43edac:	iret   
  43edad:	push   esp
  43edae:	retf   0xcf1d
  43edb1:	jnp    0x43ed75
  43edb3:	lock into 
  43edb5:	stos   BYTE PTR es:[edi],al
  43edb6:	stos   BYTE PTR es:[edi],al
  43edb7:	mov    ebx,0xe7ad5dce
  43edbc:	fld    TBYTE PTR [eax-0x37245263]
  43edc2:	popf   
  43edc3:	cdq    
  43edc4:	(bad)  [esp+ecx*1+0x38]
  43edc8:	aad    0xef
  43edca:	add    BYTE PTR [eax],al
  43edcc:	or     al,0xeb
  43edce:	aam    0x15
  43edd0:	call   DWORD PTR [eax]
  43edd2:	fidivr DWORD PTR [eax]
  43edd4:	push   DWORD PTR [edi-0x1d108126]
  43edda:	fst    DWORD PTR [ecx-0x42267911]
  43ede0:	fisubr WORD PTR [edx-0x30]
  43ede3:	adc    ebx,ecx
  43ede5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ede6:	rcl    BYTE PTR [ebx-0x2f],1
  43ede9:	or     edx,eax
  43edeb:	xlat   BYTE PTR ds:[ebx]
  43edec:	pop    edx
  43eded:	cmp    eax,0x3f15d806
  43edf2:	cdq    
  43edf3:	(bad)  
  43edf4:	mov    esi,0x5cd9873f
  43edf9:	aas    
  43edfa:	cmp    bl,dl
  43edfc:	sub    bh,BYTE PTR [edi]
  43edfe:	push   es
  43edff:	fisub  DWORD PTR [esi+0x3f]
  43ee02:	in     eax,dx
  43ee03:	fxch   st(1)
  43ee05:	inc    eax
  43ee06:	inc    edi
  43ee07:	fnstcw WORD PTR [edx+0x40]
  43ee0a:	xchg   ecx,eax
  43ee0b:	fadd   DWORD PTR [esi+0x16d89b40]
  43ee11:	inc    eax
  43ee12:	mov    ds:0xa94026d8,eax
  43ee17:	fdivr  DWORD PTR [edx]
  43ee19:	inc    eax
  43ee1a:	mov    edx,0xe6802ad8
  43ee1f:	jae    0x43ee44
  43ee21:	adc    BYTE PTR [edx+0x3],0xd5
  43ee25:	or     edi,esp
  43ee27:	shl    eax,cl
  43ee29:	cmp    esi,edi
  43ee2b:	sar    DWORD PTR [edi+0xd3d139],cl
  43ee31:	add    BYTE PTR [edx-0x582bddc7],bl
  43ee37:	cmp    DWORD PTR [esp+edx*8],ebp
  43ee3a:	ja     0x43ee75
  43ee3c:	adc    al,0xd4
  43ee3e:	bound  edi,QWORD PTR [ecx]
  43ee40:	adc    dl,0xe8
  43ee43:	cmp    ebp,edx
  43ee45:	iret   
  43ee46:	dec    ebx
  43ee47:	xor    eax,0x3689cf39
  43ee4c:	xor    al,0xcf
  43ee4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ee4f:	ss dec eax
  43ee51:	iret   
  43ee52:	mov    cl,0x36
  43ee54:	jmp    0x43ee24
  43ee56:	out    0x34,eax
  43ee58:	jmp    0x43ee28
  43ee5a:	add    BYTE PTR ds:0x3525ceb8,dh
  43ee60:	(bad)  
  43ee61:	into   
  43ee62:	jb     0x43ee99
  43ee64:	add    BYTE PTR [edx],dh
  43ee66:	mov    esp,DWORD PTR [ecx-0x135be3cf]
  43ee6c:	xor    BYTE PTR [esi+0x1e376aae],ah
  43ee72:	sahf   
  43ee73:	and    dh,BYTE PTR [edi]
  43ee75:	repz cwde 
  43ee77:	repz xor eax,0x34ca91e4
  43ee7d:	mov    ch,0x89
  43ee7f:	repz xor al,0xb9
  43ee82:	mov    bh,BYTE PTR [edx]
  43ee84:	cmp    al,0xaf
  43ee86:	cmp    cl,0x3b
  43ee89:	inc    edx
  43ee8a:	sub    cl,BYTE PTR [edx]
  43ee8c:	cmp    cl,BYTE PTR [eax+0x23]
  43ee8f:	jmp    0x6a39:0xf92b5939
  43ee96:	add    BYTE PTR [eax],al
  43ee98:	and    edx,DWORD PTR [eax-0x4af476c7]
  43ee9e:	cmp    DWORD PTR [ebx+eax*1+0xbca394d],ebp
  43eea5:	cmp    DWORD PTR [ecx],0xffffffe5
  43eea8:	add    edi,DWORD PTR [edx]
  43eeaa:	cmp    DWORD PTR [edx+ebp*1-0x1a],eax
  43eeae:	cmp    BYTE PTR [edx],bl
  43eeb0:	and    dh,ch
  43eeb2:	cmp    BYTE PTR [ebx+0x2a],bh
  43eeb5:	sahf   
  43eeb6:	cmp    BYTE PTR [ebp+0x22],dl
  43eeb9:	push   ebx
  43eeba:	cmp    BYTE PTR [edi-0x16c783f6],dh
  43eec0:	jbe    0x43ef41
  43eec2:	clc    
  43eec3:	mov    cl,0xd8
  43eec5:	or     DWORD PTR [eax],eax
  43eec7:	mov    ecx,0x1a303a06
  43eecc:	test   eax,0xa1a52fb3
  43eed1:	jns    0x43ef02
  43eed3:	jmp    0x40a0:0x712e8ba9
  43eeda:	sub    eax,0x2ce887c9
  43eedf:	add    BYTE PTR [edi],ah
  43eee1:	pop    ebx
  43eee2:	stos   BYTE PTR es:[edi],al
  43eee3:	xor    edx,DWORD PTR [edx+ebx*2-0x43]
  43eee7:	xor    edi,DWORD PTR [esi-0x7dcc2fa6]
  43eeed:	dec    esi
  43eeee:	cmp    al,0x34
  43eef0:	ins    DWORD PTR es:[edi],dx
  43eef1:	dec    esi
  43eef2:	js     0x43ef28
  43eef4:	adc    DWORD PTR [edx-0x39],ebx
  43eef7:	xor    al,0xda
  43eef9:	pop    ecx
  43eefa:	sbb    dh,BYTE PTR ds:0x598b0000
  43ef00:	dec    ecx
  43ef01:	xor    eax,0x357a5940
  43ef06:	icebp  
  43ef07:	pop    eax
  43ef08:	mov    ds:0xbc589e35,eax
  43ef0d:	xor    eax,0x35f558d4
  43ef12:	cmp    ecx,DWORD PTR [esi+ecx*1+0x36]
  43ef16:	fisttp WORD PTR [edi+0x3a]
  43ef19:	ss add eax,0x5f368450
  43ef1f:	dec    esp
  43ef20:	(bad)  
  43ef21:	ss sbb eax,0x5c36df4c
  43ef27:	dec    esp
  43ef28:	out    dx,eax
  43ef29:	sbb    BYTE PTR ss:[edi+0x5d],cl
  43ef2d:	aaa    
  43ef2e:	jnp    0x43ef7f
  43ef30:	test   al,0x37
  43ef32:	cmp    cl,BYTE PTR [edi-0x5]
  43ef35:	aaa    
  43ef36:	lock popa 
  43ef38:	pop    ss
  43ef39:	cmp    BYTE PTR [eax],cl
  43ef3b:	bound  esp,QWORD PTR [eax+edi*1]
  43ef3e:	repz popa 
  43ef40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ef41:	cmp    BYTE PTR [ebp+0x5238d262],dl
  43ef47:	bound  ebx,QWORD PTR [edx]
  43ef49:	cmp    DWORD PTR [ecx],edx
  43ef4b:	pop    ebp
  43ef4c:	dec    ebx
  43ef4d:	cmp    esp,ebx
  43ef4f:	pop    esi
  43ef50:	mov    ds:0xd55e0739,al
  43ef55:	cmp    ecx,eax
  43ef57:	arpl   WORD PTR ds:0xd6a7d53a,di
  43ef5d:	pop    ebp
  43ef5e:	out    dx,eax
  43ef5f:	aam    0xd6
  43ef61:	or     eax,DWORD PTR [eax]
  43ef63:	add    dh,ch
  43ef65:	or     al,0xd5
  43ef67:	dec    ebx
  43ef68:	fisub  WORD PTR [edi-0x7b21a32b]
  43ef6e:	aad    0xc6
  43ef70:	into   
  43ef71:	popa   
  43ef72:	rcl    BYTE PTR [ecx+ecx*8],1
  43ef75:	add    ebx,eax
  43ef77:	and    ecx,eax
  43ef79:	dec    esi
  43ef7a:	shr    BYTE PTR [edi],1
  43ef7c:	mov    ecx,0xb135d05d
  43ef81:	dec    ebx
  43ef82:	rol    BYTE PTR [ebx-0x57],1
  43ef85:	mov    ecx,0x9fa149d0
  43ef8a:	rcl    BYTE PTR [edi-0x67],1
  43ef8d:	xchg   ebp,eax
  43ef8e:	rcr    BYTE PTR [ebp+0x11],1
  43ef91:	test   al,dl
  43ef93:	imul   ecx,DWORD PTR [ecx],0xffffffe2
  43ef96:	xlat   BYTE PTR ds:[ebx]
  43ef97:	jno    0x43ef9a
  43ef99:	call   0xee3d6f75
  43ef9e:	xlat   BYTE PTR ds:[ebx]
  43ef9f:	test   ecx,esi
  43efa1:	fcmovnbe st,st(7)
  43efa3:	xchg   ebx,eax
  43efa4:	jmp    0xe1ddc792
  43efa9:	(bad)  
  43efaa:	xlat   BYTE PTR ds:[ebx]
  43efab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43efac:	fld    DWORD PTR [ebp-0xc2e5229]
  43efb2:	xlat   BYTE PTR ds:[ebx]
  43efb3:	mov    ebx,0xc1d7b1c9
  43efb8:	shl    DWORD PTR [edi-0x42463029],0xd7
  43efbf:	aad    0xb1
  43efc1:	stos   DWORD PTR es:[edi],eax
  43efc2:	xlat   BYTE PTR ds:[ebx]
  43efc3:	jecxz  0x43ef6e
  43efc5:	cdq    
  43efc6:	xlat   BYTE PTR ds:[ebx]
  43efc7:	jmp    0xffe4efcc
  43efcc:	xlat   BYTE PTR ds:[ebx]
  43efcd:	neg    DWORD PTR [ecx+0x11fdd7f5]
  43efd3:	ror    DWORD PTR fs:[ebx],1
  43efd6:	or     BYTE PTR [edx],cl
  43efd8:	clc    
  43efd9:	(bad)  
  43efda:	in     al,0x3e
  43efdc:	(bad)  
  43efdd:	(bad)  
  43efde:	fidivr DWORD PTR [esi]
  43efe0:	or     al,0xd7
  43efe2:	clc    
  43efe3:	ds cli 
  43efe5:	(bad)  
  43efe6:	out    0x3e,al
  43efe8:	add    bh,dl
  43efea:	fdivr  QWORD PTR [esi]
  43efec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43efed:	(bad)  
  43efee:	adc    bh,BYTE PTR [edi]
  43eff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eff1:	(bad)  
  43eff2:	and    BYTE PTR [edi],bh
  43eff4:	xchg   edx,eax
  43eff5:	(bad)  
  43eff6:	cs aas 
  43eff8:	mov    dh,dl
  43effa:	hlt    
  43effb:	ds mov ss,esi
  43effe:	jmp    0x8a3e:0xe8d69c3e
  43f005:	(bad)  
  43f006:	push   esi
  43f007:	ds jo  0x43efe1
  43f00a:	dec    esp
  43f00b:	ds push esi
  43f00d:	xlat   BYTE PTR ds:[ebx]
  43f00e:	inc    edx
  43f00f:	ds push esp
  43f011:	xlat   BYTE PTR ds:[ebx]
  43f012:	jo     0x43f052
  43f014:	inc    edx
  43f015:	xlat   BYTE PTR ds:[ebx]
  43f016:	jle    0x43f056
  43f018:	cwde   
  43f019:	(bad)  
  43f01a:	test   BYTE PTR [esi],bh
  43f01c:	sahf   
  43f01d:	(bad)  
  43f01e:	jp     0x43f05e
  43f020:	lods   al,BYTE PTR ds:[esi]
  43f021:	(bad)  
  43f022:	sbb    BYTE PTR [esi],bh
  43f024:	call   0xfcd6:0xa03e06d6
  43f02b:	cmp    eax,0xd6c6
  43f030:	xor    bh,BYTE PTR [esi]
  43f032:	(bad)  
  43f033:	(bad)  
  43f034:	add    BYTE PTR [esi],bh
  43f036:	mov    dl,0xd6
  43f038:	push   cs
  43f039:	ds call 0xee7fc514
  43f03f:	aad    0xca
  43f041:	cmp    edi,esp
  43f043:	aad    0xc8
  43f045:	cmp    ebp,edx
  43f047:	aad    0xb6
  43f049:	cmp    edx,eax
  43f04b:	aad    0xac
  43f04d:	cmp    esi,DWORD PTR [esi+0x3ba2d5]
  43f053:	mov    ah,0xa8
  43f055:	cmp    eax,0xcfa3263a
  43f05a:	cmp    DWORD PTR [eax-0x43c62658],edi
  43f060:	mov    al,ds:0x88d939dd
  43f065:	clc    
  43f066:	cmp    esp,ecx
  43f068:	cmp    dh,0x39
  43f06b:	jae    0x43eff5
  43f06d:	mov    edi,DWORD PTR [ecx]
  43f06f:	push   esi
  43f070:	and    BYTE PTR [eax-0x5a5772c7],0x39
  43f077:	jp     0x43f019
  43f079:	mov    bl,0x39
  43f07b:	xor    BYTE PTR [eax-0x5fc9c6b4],ch
  43f081:	pusha  
  43f082:	cmp    DWORD PTR [edx],ecx
  43f084:	mov    BYTE PTR [esi+0x39],dh
  43f087:	fld    QWORD PTR [ecx-0x763ec6eb]
  43f08d:	cmp    edi,DWORD PTR [ecx]
  43f08f:	mov    ds:0xe9f87b81,al
  43f094:	add    BYTE PTR [eax],al
  43f096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f097:	jnp    0x43f091
  43f099:	push   ecx
  43f09a:	(bad)  
  43f09b:	or     DWORD PTR [eax],eax
  43f09d:	call   0x487408c8
  43f0a2:	and    DWORD PTR [edx],eax
  43f0a4:	xor    BYTE PTR [edx+0x9],bh
  43f0a7:	xchg   ebp,eax
  43f0a8:	das    
  43f0a9:	xchg   esi,eax
  43f0aa:	add    ecx,eax
  43f0ac:	das    
  43f0ad:	ror    DWORD PTR [ecx],cl
  43f0af:	adc    BYTE PTR [edi],ch
  43f0b1:	pop    es
  43f0b2:	add    dl,ah
  43f0b4:	cs inc ecx
  43f0b6:	sub    dl,al
  43f0b8:	cs xchg ebp,eax
  43f0ba:	and    BYTE PTR [esi+ebp*1],bh
  43f0bd:	cs sub edi,esi
  43f0c0:	sub    eax,0x2db82376
  43f0c5:	mov    ds:0x902d720b,eax
  43f0ca:	add    edi,DWORD PTR [ebx+0x2d]
  43f0cd:	add    BYTE PTR [edx+edx*2+0x5280337c],dh
  43f0d4:	pop    es
  43f0d5:	xor    al,0x3e
  43f0d7:	bound  ebx,QWORD PTR [esp+esi*1+0x34d96175]
  43f0de:	frstor [eax+0x52]
  43f0e1:	xor    eax,0x361f612f
  43f0e6:	les    ebx,FWORD PTR [edi+0x35]
  43f0e9:	ss push 0x25367a60
  43f0ef:	pusha  
  43f0f0:	mov    eax,ds:0x4c601b36
  43f0f5:	cmp    dl,ch
  43f0f7:	dec    ebp
  43f0f8:	and    al,0x39
  43f0fa:	add    BYTE PTR [eax],al
  43f0fc:	dec    eax
  43f0fd:	dec    ebp
  43f0fe:	test   al,0x39
  43f100:	adc    ecx,DWORD PTR [esp+ecx*4+0x3b]
  43f104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f105:	dec    edx
  43f106:	cmp    edi,DWORD PTR [edi+esi*1]
  43f109:	dec    edx
  43f10a:	imul   edi,DWORD PTR [esp+ebp*4],0x59
  43f10e:	pop    es
  43f10f:	cmp    eax,0x3d3a591f
  43f114:	dec    esi
  43f115:	pop    ecx
  43f116:	ja     0x43f155
  43f118:	or     eax,0x553dd159
  43f11d:	pop    eax
  43f11e:	addr16 ds pop ecx
  43f121:	pop    eax
  43f122:	pushf  
  43f123:	ds pop esi
  43f125:	pop    eax
  43f126:	mov    ebx,0x5358693e
  43f12b:	aas    
  43f12c:	xchg   ecx,eax
  43f12d:	push   esi
  43f12e:	clc    
  43f12f:	jmp    FWORD PTR [esi+eax*2]
  43f132:	stc    
  43f133:	(bad)  
  43f134:	call   0xe643f13e
  43f139:	push   ebp
  43f13a:	xor    DWORD PTR [ecx],esi
  43f13c:	mov    dl,0x54
  43f13e:	push   edx
  43f13f:	xor    DWORD PTR [ebx],esp
  43f141:	push   esp
  43f142:	mov    ?,WORD PTR [ebx]
  43f144:	pushf  
  43f145:	push   ebx
  43f146:	mov    ch,0x33
  43f148:	aad    0x3d
  43f14a:	fsubr  DWORD PTR [ecx-0x3b2f265f]
  43f150:	test   eax,0xa05ed760
  43f155:	jb     0x43f12e
  43f157:	jle    0x43f161
  43f159:	mov    edi,edx
  43f15b:	or     eax,DWORD PTR [ebx]
  43f15d:	mov    ah,0xd6
  43f15f:	js     0x43f161
  43f161:	add    BYTE PTR [ebx],cl
  43f163:	gs aad 0x6
  43f166:	add    cl,BYTE PTR [esi+0xaeab4d5]
  43f16c:	retf   0xeea9
  43f16f:	fwait
  43f170:	leave  
  43f171:	iret   
  43f172:	ficom  WORD PTR [ecx-0x38]
  43f175:	sbb    cl,0xbe
  43f178:	iret   
  43f179:	(bad)  
  43f17a:	shl    bl,1
  43f17c:	iret   
  43f17d:	es retf 0xac62
  43f181:	inc    BYTE PTR [edx-0x2a000311]
  43f187:	add    ecx,ebp
  43f189:	mul    BYTE PTR [ebp-0x58502d37]
  43f18f:	sbb    eax,0xa9a626d3
  43f194:	ror    DWORD PTR [ebp-0x492e295a],1
  43f19a:	push   es
  43f19b:	or     eax,0x7d06edd2
  43f1a0:	sar    ch,cl
  43f1a2:	push   es
  43f1a3:	jge    0x43f175
  43f1a5:	or     eax,0xa6d80d01
  43f1aa:	jmp    0xe0e1c93e
  43f1af:	mov    dl,al
  43f1b1:	mov    edx,0xabd5c3e8
  43f1b6:	jecxz  0x43f1ac
  43f1b8:	aad    0xbc
  43f1ba:	retf   
  43f1bb:	xchg   ebx,eax
  43f1bc:	aad    0xe0
  43f1be:	ret    
  43f1bf:	mov    ch,0xd5
  43f1c1:	test   bl,0x9
  43f1c4:	(bad)  
  43f1c6:	add    BYTE PTR [eax],al
  43f1c8:	dec    ebp
  43f1c9:	inc    ecx
  43f1ca:	jno    0x43f1a5
  43f1cc:	stc    
  43f1cd:	inc    eax
  43f1ce:	pop    ecx
  43f1cf:	int3   
  43f1d0:	add    BYTE PTR [edx],dh
  43f1d2:	xchg   esp,ecx
  43f1d4:	or     DWORD PTR [edx+ecx*4],esi
  43f1d7:	into   
  43f1d8:	leave  
  43f1d9:	xor    al,0xc7
  43f1db:	int3   
  43f1dc:	push   ss
  43f1dd:	xor    eax,0x3523cd16
  43f1e2:	add    ecx,ebp
  43f1e4:	inc    edi
  43f1e5:	xor    eax,0x346acd86
  43f1ea:	cmp    al,0xcd
  43f1ec:	mov    ebx,0xcfcff834
  43f1f1:	xor    eax,0x35e4cfff
  43f1f6:	pop    eax
  43f1f7:	rol    BYTE PTR [edx+0x35],1
  43f1fa:	(bad)  
  43f1fb:	ror    BYTE PTR [edi+0x35],1
  43f1fe:	sub    eax,edx
  43f200:	mov    WORD PTR ds:0x36cdcee3,?
  43f206:	add    edi,ecx
  43f208:	fnstenv [esi]
  43f20a:	fmul   st,st(6)
  43f20c:	scas   eax,DWORD PTR es:[edi]
  43f20d:	ss scas eax,DWORD PTR es:[edi]
  43f20f:	into   
  43f210:	lock ss xchg edi,eax
  43f213:	into   
  43f214:	in     al,0x36
  43f216:	gs iret 
  43f218:	push   ebx
  43f219:	ss pop ebp
  43f21b:	iret   
  43f21c:	je     0x43f254
  43f21e:	xor    al,0xcf
  43f220:	sub    esi,DWORD PTR [esi]
  43f222:	sti    
  43f223:	into   
  43f224:	inc    esi
  43f225:	ss fmulp st(6),st
  43f228:	cmp    esi,DWORD PTR [esi]
  43f22a:	repnz rol DWORD PTR [eax],1
  43f22d:	add    BYTE PTR [edi+esi*1+0x375cd169],ch
  43f234:	jae    0x43f207
  43f236:	cmp    al,0x37
  43f238:	mov    ecx,ss
  43f23a:	imul   esi,DWORD PTR [edi],0xffffff9a
  43f23d:	rcr    DWORD PTR [ecx+0x38],1
  43f240:	add    cl,ch
  43f242:	ss ja  0x43f23d
  43f245:	jge    0x43f21d
  43f247:	or     DWORD PTR [eax],eax
  43f249:	add    eax,0xab2dab23
  43f24e:	or     BYTE PTR [edi-0x47feb1d4],dl
  43f254:	sub    al,0xb5
  43f256:	or     DWORD PTR [edi+0x2c],edi
  43f259:	fld    DWORD PTR [edx]
  43f25b:	push   ds
  43f25c:	xor    al,0xfc
  43f25e:	stos   BYTE PTR es:[edi],al
  43f25f:	mov    esi,DWORD PTR [ebx]
  43f261:	push   edi
  43f262:	mov    ds:0xaa783369,al
  43f267:	aas    
  43f268:	xor    ebx,DWORD PTR [edx-0x5d]
  43f26b:	xchg   esp,eax
  43f26c:	xor    DWORD PTR [edx+0x4b314d8c],ecx
  43f272:	mov    WORD PTR [ecx+0x768e8730],cs
  43f278:	aaa    
  43f279:	cld    
  43f27a:	(bad)  
  43f27b:	icebp  
  43f27c:	ss fs lahf 
  43f27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f280:	sub    ebx,DWORD PTR ss:[edi-0x70ecc9b9]
  43f287:	imul   esi,DWORD PTR [esi],0x14
  43f28a:	(bad)  
  43f28b:	jge    0x43f2c3
  43f28d:	out    0xa0,al
  43f28f:	aas    
  43f290:	ss (bad) 
  43f292:	add    BYTE PTR [eax],al
  43f294:	cwde   
  43f295:	shl    BYTE PTR ds:0x3585908d,cl
  43f29b:	mov    BYTE PTR fs:[edi+0x35],dl
  43f29f:	out    0x21,eax
  43f2a1:	cmp    dh,BYTE PTR ds:0x34901994
  43f2a7:	sub    BYTE PTR [ecx],dl
  43f2a9:	jb     0x43f2df
  43f2ab:	pop    ss
  43f2ac:	and    eax,0x5853be9
  43f2b1:	mov    edi,0x4705a03b
  43f2b6:	cmp    eax,edi
  43f2b8:	add    eax,0xdb003b2d
  43f2bd:	pop    eax
  43f2be:	mov    al,ds:0xbe58933d
  43f2c3:	cmp    eax,0x3df05960
  43f2c8:	in     eax,dx
  43f2c9:	inc    esp
  43f2ca:	adc    DWORD PTR [esi],edi
  43f2cc:	sbb    eax,0x7e3e5045
  43f2d1:	inc    edi
  43f2d2:	cmp    DWORD PTR [esi],0x3e934773
  43f2d8:	jl     0x43f321
  43f2da:	into   
  43f2db:	xor    DWORD PTR ds:[eax+0x2e],ecx
  43f2df:	aas    
  43f2e0:	xchg   ebx,eax
  43f2e1:	inc    edi
  43f2e2:	push   edi
  43f2e3:	aas    
  43f2e4:	xlat   BYTE PTR ds:[ebx]
  43f2e5:	inc    esi
  43f2e6:	cdq    
  43f2e7:	aas    
  43f2e8:	jns    0x43f330
  43f2ea:	(bad)  
  43f2eb:	aas    
  43f2ec:	adc    DWORD PTR [edi-0x8],eax
  43f2ef:	(bad)  
  43f2f0:	mov    esp,0x50fff99a
  43f2f5:	or     eax,0x0
  43f2fa:	ins    BYTE PTR es:[edi],dx
  43f2fb:	pop    edx
  43f2fc:	inc    edi
  43f2fd:	xor    BYTE PTR [ecx+0x6330975a],cl
  43f303:	pop    ebp
  43f304:	scas   al,BYTE PTR es:[edi]
  43f305:	xor    BYTE PTR [eax],al
  43f307:	pop    esi
  43f308:	mov    edi,0xcf5ddd30
  43f30d:	xor    dh,cl
  43f30f:	pop    ebp
  43f310:	loopne 0x43f342
  43f312:	jecxz  0x43f371
  43f314:	out    dx,al
  43f315:	xor    BYTE PTR [ebx+0x5d],dh
  43f318:	adc    eax,0x3b5d2231
  43f31d:	xor    DWORD PTR [ebx],edi
  43f31f:	pop    ebp
  43f320:	pop    edx
  43f321:	xor    edx,ecx
  43f323:	pop    ebp
  43f324:	jae    0x43f357
  43f326:	mov    ebp,0xa931865c
  43f32b:	pop    esp
  43f32c:	xchg   esi,eax
  43f32d:	xor    DWORD PTR [eax+0x5d],ecx
  43f330:	mov    esp,0x5d6631
  43f335:	xor    dl,ch
  43f337:	outs   dx,BYTE PTR ds:[esi]
  43f338:	into   
  43f339:	adc    ah,bh
  43f33b:	or     dh,cl
  43f33d:	pusha  
  43f33e:	out    0x33,eax
  43f340:	into   
  43f341:	jne    0x43f30a
  43f343:	xchg   dh,cl
  43f345:	mov    bl,0xc7
  43f347:	scas   al,BYTE PTR es:[edi]
  43f348:	into   
  43f349:	icebp  
  43f34a:	(bad)  
  43f34b:	push   0xffffffcd
  43f34d:	sub    esi,eax
  43f34f:	es int 0x75
  43f352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f353:	ror    ebp,cl
  43f355:	mov    ch,0xa6
  43f357:	(bad)  
  43f359:	into   
  43f35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f35b:	mov    ebp,cs
  43f35d:	repnz add BYTE PTR [eax],al
  43f360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f361:	dec    edi
  43f362:	shr    BYTE PTR [edi+0x9],1
  43f365:	in     al,dx
  43f366:	rcl    BYTE PTR [ecx+0x5ed33001],1
  43f36c:	or     dh,BYTE PTR [ebx]
  43f36e:	shl    BYTE PTR ds:0xd6cb4ffd,cl
  43f374:	in     al,dx
  43f375:	(bad)  
  43f376:	retf   
  43f377:	and    al,0xef
  43f379:	adc    eax,0x5edfd3c6
  43f37e:	lds    esp,FWORD PTR [ebp-0x2739c722]
  43f384:	into   
  43f385:	cmp    eax,0x7cc903c6
  43f38a:	enter  0xc166,0x64
  43f38e:	iret   
  43f38f:	popa   
  43f390:	mov    eax,0xb0c2cf8d
  43f395:	add    eax,0x6fab84d0
  43f39a:	leave  
  43f39b:	xor    BYTE PTR [edx-0x657b3642],ah
  43f3a1:	(bad)  
  43f3a2:	cld    
  43f3a3:	std    
  43f3a4:	push   edx
  43f3a5:	dec    edi
  43f3a6:	add    eax,DWORD PTR [eax]
  43f3a8:	aad    0x60
  43f3aa:	int3   
  43f3ab:	inc    edx
  43f3ac:	add    eax,0x585ccee
  43f3b1:	or     dh,BYTE PTR [edi-0x2c]
  43f3b4:	jle    0x43f3f0
  43f3b6:	scas   eax,DWORD PTR es:[edi]
  43f3b7:	aam    0x28
  43f3b9:	cmp    dl,BYTE PTR [ecx]
  43f3bb:	shl    DWORD PTR [eax+0x46d3633a],cl
  43f3c1:	cmp    ecx,DWORD PTR [ebx+0x3e0000d3]
  43f3c7:	cmp    edx,DWORD PTR [ebx-0x49c50f2d]
  43f3cd:	rcl    edx,cl
  43f3cf:	aaa    
  43f3d0:	add    al,0xd2
  43f3d2:	lds    esi,FWORD PTR [edi]
  43f3d4:	cmp    al,0xd2
  43f3d6:	mov    ?,WORD PTR [edi]
  43f3d8:	add    eax,0x173770d2
  43f3dd:	rcr    BYTE PTR [ebx+0x38],cl
  43f3e0:	js     0x43f3b4
  43f3e2:	push   ecx
  43f3e3:	cmp    DWORD PTR [esi-0x2f],ebx
  43f3e6:	jae    0x43f420
  43f3e8:	stos   BYTE PTR es:[edi],al
  43f3e9:	sar    DWORD PTR [edi+0x8d7da38],1
  43f3ef:	ds sub al,bl
  43f3f2:	ss ds jb 0x43f3ce
  43f3f6:	ja     0x43f435
  43f3f8:	fadd   DWORD PTR es:[esi-0x3f27b2c3]
  43f3ff:	ds int 0xd6
  43f402:	mov    bh,BYTE PTR [esi]
  43f404:	sbb    edi,edx
  43f406:	jns    0x43f446
  43f408:	aas    
  43f409:	xlat   BYTE PTR ds:[ebx]
  43f40a:	fistp  QWORD PTR [ebx]
  43f40c:	or     edx,esi
  43f40e:	enter  0x9d3b,0xd5
  43f412:	sbb    edi,DWORD PTR [edx+ebx*4]
  43f415:	aad    0x5d
  43f417:	cmp    edx,DWORD PTR [ecx-0x2a]
  43f41a:	xchg   BYTE PTR [ebx],bh
  43f41c:	sbb    edx,esi
  43f41e:	iret   
  43f41f:	cmp    al,0x2c
  43f421:	aad    0x76
  43f423:	cmp    al,0x4
  43f425:	aad    0x0
  43f427:	xor    ch,BYTE PTR [eax-0x52ffff35]
  43f42d:	xor    DWORD PTR [eax],eax
  43f42f:	inc    ecx
  43f430:	adc    DWORD PTR [edi+esi*1+0x36d70fae],esp
  43f437:	push   esp
  43f438:	push   ds
  43f439:	out    dx,eax
  43f43a:	ss ins BYTE PTR es:[edi],dx
  43f43c:	pop    ds
  43f43d:	xchg   ebp,eax
  43f43e:	ss sahf 
  43f440:	cmovns esi,DWORD PTR [esi]
  43f443:	mov    dh,0xf
  43f445:	jge    0x43f47d
  43f447:	fcomp  QWORD PTR [edx+edi*1]
  43f44a:	ss das 
  43f44c:	pop    ds
  43f44d:	jmp    0x94506287
  43f452:	xor    eax,0x35a00c87
  43f457:	pop    ebx
  43f458:	sbb    al,0x4b
  43f45a:	xor    eax,0x350b1ca1
  43f45f:	cli    
  43f460:	or     eax,0xdd5352d
  43f465:	into   
  43f466:	xor    al,0x15
  43f468:	pushf  
  43f469:	std    
  43f46a:	xor    al,0x59
  43f46c:	popf   
  43f46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f46e:	xor    al,0xa9
  43f470:	lea    ebx,[ecx+0x34]
  43f473:	jno    0x43f402
  43f475:	or     DWORD PTR [eax*1-0x52c3ce7b],edi
  43f47c:	call   0x3b98:0x926e3bd5
  43f483:	or     BYTE PTR [edx-0x5dd8c4bd],0x77
  43f48a:	cmp    edx,edi
  43f48c:	fwait
  43f48d:	daa    
  43f48e:	cmp    esi,ebx
  43f490:	add    BYTE PTR [eax],al
  43f492:	xchg   ebx,eax
  43f493:	iret   
  43f494:	cmp    al,bl
  43f496:	mov    esi,ebx
  43f498:	cmp    cl,BYTE PTR [ebx+eiz*4-0x5a]
  43f49c:	cmp    dh,BYTE PTR [eax]
  43f49e:	fwait
  43f49f:	popa   
  43f4a0:	cmp    dl,BYTE PTR [eax]
  43f4a2:	xchg   ebx,eax
  43f4a3:	jae    0x43f4df
  43f4a5:	out    0x88,al
  43f4a7:	add    DWORD PTR [edx],edi
  43f4a9:	add    BYTE PTR [ecx],dh
  43f4ab:	inc    ebp
  43f4ac:	adc    al,0x3e
  43f4ae:	pop    ds
  43f4af:	inc    ebp
  43f4b0:	es xchg DWORD PTR ds:[ebp+0x6f],eax
  43f4b5:	ds mov ah,0x44
  43f4b8:	mov    esp,0xe40713e
  43f4bd:	aas    
  43f4be:	sar    DWORD PTR [esi],cl
  43f4c0:	pusha  
  43f4c1:	aas    
  43f4c2:	mov    edx,0x6e3f903e
  43f4c7:	aas    
  43f4c8:	lds    edi,FWORD PTR [edi]
  43f4ca:	aaa    
  43f4cb:	aas    
  43f4cc:	call   0xfabaf110
  43f4d1:	dec    DWORD PTR [esp+ecx*1+0x57050000]
  43f4d8:	xor    BYTE PTR ds:[esi+ebx*2-0x60],dl
  43f4dd:	xor    BYTE PTR [edx+0x5e],dl
  43f4e0:	jge    0x43f513
  43f4e2:	jns    0x43f540
  43f4e4:	mov    ah,0x31
  43f4e6:	adc    DWORD PTR [ebp+0x33],ebx
  43f4e9:	xor    al,BYTE PTR [ebx]
  43f4eb:	pop    esp
  43f4ec:	dec    eax
  43f4ed:	xor    ch,cl
  43f4ef:	pop    ebx
  43f4f0:	pop    ebx
  43f4f1:	xor    bl,dl
  43f4f3:	pop    ebx
  43f4f4:	xchg   ecx,eax
  43f4f5:	xor    al,BYTE PTR [eax]
  43f4f7:	add    BYTE PTR [ebx],dl
  43f4f9:	pop    esp
  43f4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f4fb:	xor    dl,BYTE PTR [eax+0x5b]
  43f4fe:	mov    dl,0x32
  43f500:	dec    ebx
  43f501:	pop    ebx
  43f502:	mov    esi,0xc95bf832
  43f507:	xor    ah,ah
  43f509:	pop    ebx
  43f50a:	(bad)  
  43f50b:	xor    bl,BYTE PTR [edi]
  43f50d:	pop    esp
  43f50e:	loop   0x43f542
  43f510:	int3   
  43f511:	pop    ebx
  43f512:	in     eax,dx
  43f513:	xor    cl,al
  43f515:	pop    ebx
  43f516:	cli    
  43f517:	xor    dh,BYTE PTR [ebx+0x5b]
  43f51a:	push   es
  43f51b:	xor    esi,DWORD PTR [eax+0x5b]
  43f51e:	adc    al,0x33
  43f520:	nop
  43f521:	pop    ebx
  43f522:	and    al,0x33
  43f524:	aad    0xb2
  43f526:	rcr    DWORD PTR [ecx-0x5a],1
  43f529:	jg     0x43f4fc
  43f52b:	imul   eax,DWORD PTR [esi],0x697d0e1
  43f531:	(bad)
  43f534:	push   es
  43f535:	sub    dl,cl
  43f537:	rol    DWORD PTR [esi],1
  43f539:	add    eax,0x58e6ded1
  43f53e:	rcl    DWORD PTR [ecx+eiz*8],1
  43f541:	adc    al,dl
  43f543:	xor    cl,ch
  43f545:	sbb    dl,al
  43f547:	dec    esp
  43f548:	loope  0x43f514
  43f54a:	iret   
  43f54b:	xchg   cl,cl
  43f54d:	in     al,dx
  43f54e:	enter  0xc1b7,0xf3
  43f552:	enter  0xc9de,0x46
  43f556:	enter  0xc000,0x55
  43f55a:	iret   
  43f55b:	adc    al,BYTE PTR [eax]
  43f55d:	add    BYTE PTR [eax-0x5fcb30f6],ch
  43f563:	push   ds
  43f564:	iret   
  43f565:	dec    edi
  43f566:	test   al,0x32
  43f568:	iret   
  43f569:	pop    edx
  43f56a:	mov    al,ds:0x866cf0c
  43f56f:	sbb    bh,cl
  43f571:	xchg   DWORD PTR [eax],eax
  43f573:	retf   
  43f574:	iret   
  43f575:	mov    esi,0xffcf8408
  43f57a:	add    BYTE PTR [edx-0x32],dl
  43f57d:	inc    ecx
  43f57e:	jmp    0x43f536
  43f580:	into   
  43f581:	dec    ebp
  43f582:	jecxz  0x43f534
  43f584:	into   
  43f585:	arpl   bx,bp
  43f587:	push   ebp
  43f588:	into   
  43f589:	mov    al,ds:0xc8ceefe3
  43f58e:	retf   
  43f58f:	push   cs
  43f590:	iret   
  43f591:	fld    st(3)
  43f593:	ret    
  43f594:	into   
  43f595:	out    0xcb,al
  43f597:	xor    edi,ecx
  43f599:	test   bl,0x6a
  43f59c:	int    0xa
  43f59e:	stos   BYTE PTR es:[edi],al
  43f59f:	or     ebx,edi
  43f5a1:	shl    BYTE PTR [eax+edi*1+0x3917d2cb],cl
  43f5a8:	sahf   
  43f5a9:	ror    BYTE PTR [ebx],cl
  43f5ab:	cmp    DWORD PTR [edx+0x6a38d0d2],esi
  43f5b1:	rcr    BYTE PTR [ebx+0x39],cl
  43f5b4:	inc    ebx
  43f5b5:	sar    BYTE PTR [ebx+0x39],cl
  43f5b8:	pop    ds
  43f5b9:	ror    BYTE PTR [edi],cl
  43f5bb:	cmp    DWORD PTR ds:0xe1392ad2,edx
  43f5c1:	rol    DWORD PTR [eax],1
  43f5c3:	add    BYTE PTR [ecx+esi*1+0x31a7cc4a],al
  43f5ca:	push   0xa5324dcc
  43f5cf:	int3   
  43f5d0:	sbb    BYTE PTR [edx],dh
  43f5d2:	mov    edx,0xeb320fcc
  43f5d7:	retf   0x32dc
  43f5da:	sti    
  43f5db:	retf   0x3298
  43f5de:	cmp    cl,bl
  43f5e0:	outs   dx,BYTE PTR ds:[esi]
  43f5e1:	xor    ah,BYTE PTR [ebp-0x35]
  43f5e4:	push   edx
  43f5e5:	xor    eax,DWORD PTR [ebp-0x35]
  43f5e8:	cmp    dh,BYTE PTR [ebx]
  43f5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f5eb:	retf   
  43f5ec:	adc    dh,BYTE PTR [ebx]
  43f5ee:	test   eax,0xef32b1cb
  43f5f3:	int    0xef
  43f5f5:	xor    eax,esi
  43f5f7:	int    0x19
  43f5f9:	xor    al,0x5
  43f5fb:	into   
  43f5fc:	dec    esi
  43f5fd:	xor    esp,esp
  43f5ff:	int3   
  43f600:	imul   esi,DWORD PTR [eiz*1+0x293492cd],0x752dcccd
  43f60b:	enter  0x2d90,0xf7
  43f60f:	(bad)  
  43f610:	call   0x670af243
  43f615:	cs dec ebx
  43f617:	(bad)  
  43f618:	push   0x8f25002f
  43f61d:	push   edi
  43f61e:	cmp    DWORD PTR [esi],ebp
  43f620:	lahf   
  43f621:	(bad)  
  43f622:	cmp    BYTE PTR ds:0xdd39209c,al
  43f628:	add    BYTE PTR [eax],al
  43f62a:	(bad)  
  43f62b:	retf   
  43f62c:	cmp    BYTE PTR [ebx-0x6ac72f73],bh
  43f632:	sbb    eax,0x1c3338f2
  43f637:	push   ebp
  43f638:	cmp    cl,ch
  43f63a:	outs   dx,BYTE PTR ss:[esi]
  43f63c:	clc    
  43f63d:	inc    ebp
  43f63e:	ror    DWORD PTR [ecx],1
  43f640:	add    ah,ah
  43f642:	push   es
  43f643:	sbb    BYTE PTR [eax],dh
  43f645:	push   ss
  43f646:	add    edx,eax
  43f648:	das    
  43f649:	inc    edx
  43f64a:	or     edi,ebx
  43f64c:	das    
  43f64d:	fwait
  43f64e:	push   es
  43f64f:	jns    0x43f680
  43f651:	sbb    eax,0xb62e4726
  43f656:	daa    
  43f657:	dec    edi
  43f658:	cs mov ebx,0x2c2e0127
  43f65e:	and    ebx,ebx
  43f660:	sub    eax,0x2def0b35
  43f665:	jno    0x43f667
  43f667:	xchg   edx,eax
  43f668:	sub    eax,0x2d6c08bf
  43f66d:	fwait
  43f66e:	add    BYTE PTR [ebp+ebp*1+0x36],dh
  43f672:	test   al,0xe0
  43f674:	sub    al,0xff
  43f676:	mov    eax,ds:0xa9b22c85
  43f67b:	ins    BYTE PTR es:[edi],dx
  43f67c:	sub    al,0x83
  43f67e:	mov    eax,ds:0xa2c92c6d
  43f683:	xor    eax,0xc8852634
  43f688:	xor    edx,DWORD PTR [ecx+0x2e33a192]
  43f68e:	add    BYTE PTR [eax],al
  43f690:	mov    bl,BYTE PTR [edx+0x33]
  43f693:	sub    al,0xa2
  43f695:	push   es
  43f696:	xor    eax,DWORD PTR [eax]
  43f698:	cmp    eax,DWORD PTR [eax+0x4b]
  43f69b:	xor    eax,0x35954036
  43f6a0:	dec    edi
  43f6a1:	inc    eax
  43f6a2:	mov    dl,0x35
  43f6a4:	int3   
  43f6a5:	aas    
  43f6a6:	aam    0x35
  43f6a8:	addr16 pop ecx
  43f6aa:	push   cs
  43f6ab:	test   BYTE PTR ss:[ecx+0x31],bl
  43f6af:	ss adc eax,0xe436cf59
  43f6b5:	pop    eax
  43f6b6:	sbb    edi,DWORD PTR [eax]
  43f6b8:	int3   
  43f6b9:	inc    edx
  43f6ba:	or     bh,BYTE PTR [ecx]
  43f6bc:	adc    al,0x44
  43f6be:	push   ecx
  43f6bf:	cmp    DWORD PTR [eax+0x44],ecx
  43f6c2:	cmp    DWORD PTR [ecx],0x39ba43eb
  43f6c8:	sbb    al,0x44
  43f6ca:	xor    eax,0x1443013b
  43f6cf:	cmp    al,0xe1
  43f6d1:	inc    ecx
  43f6d2:	addr16 cmp al,0x83
  43f6d5:	inc    ecx
  43f6d6:	loope  0x43f714
  43f6d8:	xchg   esi,eax
  43f6d9:	inc    eax
  43f6da:	push   ss
  43f6db:	bound  ecx,QWORD PTR ds:[eax+0x1]
  43f6df:	aas    
  43f6e0:	sbb    cl,BYTE PTR [eax+0x43]
  43f6e3:	aas    
  43f6e4:	mov    DWORD PTR [esi-0x8],eax
  43f6e7:	(bad)  
  43f6e8:	cld    
  43f6e9:	pop    edx
  43f6ea:	cli    
  43f6eb:	dec    eax
  43f6ed:	add    eax,0x5aff0000
  43f6f2:	push   ebp
  43f6f3:	xor    BYTE PTR [eax],al
  43f6f5:	add    BYTE PTR [esi+0x56],cl
  43f6f8:	cmp    dh,BYTE PTR [edx]
  43f6fa:	cmp    ebx,DWORD PTR [eax+edx*1+0x33]
  43f6fe:	xor    eax,0x5834355b
  43f703:	pop    ecx
  43f704:	out    0x34,eax
  43f706:	mov    DWORD PTR [ecx-0x57],ebx
  43f709:	xor    eax,0x36173ca3
  43f70e:	mov    esp,0xd536323f
  43f713:	pop    ebx
  43f714:	retf   0xcb84
  43f717:	cmc    
  43f718:	leave  
  43f719:	push   ds
  43f71a:	ret    0xc49e
  43f71d:	mov    DWORD PTR [ebp-0x43793437],edi
  43f723:	and    ecx,ebx
  43f725:	inc    esi
  43f726:	scas   eax,DWORD PTR es:[edi]
  43f727:	fcmovnb st,st(5)
  43f729:	leave  
  43f72a:	scas   eax,DWORD PTR es:[edi]
  43f72b:	and    eax,0x829e2cc6
  43f730:	(bad)  
  43f733:	pop    edx
  43f734:	ror    bh,0x11
  43f737:	data16 (bad) 
  43f739:	adc    al,0x8
  43f73b:	add    edi,0xc6d4006f
  43f741:	fwait
  43f742:	clc    
  43f743:	ret    
  43f744:	(bad)  
  43f745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f746:	lock cmp eax,edi
  43f749:	mov    ebp,0xcfc7bae8
  43f74e:	loopne 0x43f793
  43f750:	(bad)  
  43f751:	repnz fmul DWORD PTR ds:0xe1d36ac2
  43f758:	ret    0x91
  43f75b:	add    bl,cl
  43f75d:	arpl   cx,ax
  43f75f:	or     eax,edx
  43f761:	pusha  
  43f762:	cmp    al,0xfe
  43f764:	cli    
  43f765:	(bad)  
  43f767:	add    ch,dl
  43f769:	clc    
  43f76a:	int3   
  43f76b:	shl    BYTE PTR [ebp-0x5a213349],0x7d
  43f772:	int3   
  43f773:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f775:	jp     0x43f74a
  43f777:	fiadd  WORD PTR [esi+esi*1]
  43f77a:	into   
  43f77b:	xor    al,BYTE PTR [esi]
  43f77d:	dec    ecx
  43f77e:	int    0x6d
  43f780:	push   es
  43f781:	je     0x43f750
  43f783:	ret    0xf601
  43f786:	enter  0xe830,0x9e
  43f78a:	iret   
  43f78b:	or     eax,0xce1609e3
  43f790:	jecxz  0x43f7c5
  43f792:	ror    ebx,0x5a
  43f795:	xor    dh,BYTE PTR [ebx]
  43f797:	retf   
  43f798:	fdiv   DWORD PTR [edx]
  43f79a:	jno    0x43f765
  43f79c:	cmp    BYTE PTR [eax],dh
  43f79e:	repnz (bad) 
  43f7a0:	mov    ebp,0xa1c7992d
  43f7a5:	cs xor al,0xc7
  43f7a8:	adc    eax,0x7dc5102c
  43f7ad:	sub    al,0x1b
  43f7af:	(bad)
  43f7b2:	out    0x33,eax
  43f7b4:	pop    ebx
  43f7b5:	ins    DWORD PTR es:[edi],dx
  43f7b6:	jle    0x43f7bb
  43f7b8:	aad    0x9
  43f7ba:	rcl    bl,0x29
  43f7bd:	cmp    ch,BYTE PTR [eax]
  43f7bf:	aam    0x0
  43f7c1:	add    al,ch
  43f7c3:	aaa    
  43f7c4:	ret    0x8ad1
  43f7c7:	aaa    
  43f7c8:	jo     0x43f79b
  43f7ca:	and    al,0x38
  43f7cc:	rcl    edx,cl
  43f7ce:	in     al,dx
  43f7cf:	cmp    BYTE PTR [ebx-0x2f],al
  43f7d2:	xlat   BYTE PTR ds:[ebx]
  43f7d3:	xor    eax,0x3674d031
  43f7d8:	cdq    
  43f7d9:	rcl    BYTE PTR [ecx],1
  43f7db:	ss imul ecx,edi,0xcf973748
  43f7e2:	icebp  
  43f7e3:	ss loopne 0x43f7b3
  43f7e6:	push   eax
  43f7e7:	xor    al,0xa7
  43f7e9:	into   
  43f7ea:	add    eax,0x18ceb934
  43f7ef:	xor    eax,0x319bcbd3
  43f7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f7f5:	int3   
  43f7f6:	in     al,0x31
  43f7f8:	or     ebx,ecx
  43f7fa:	cdq    
  43f7fb:	xor    al,bl
  43f7fd:	leave  
  43f7fe:	sti    
  43f7ff:	das    
  43f800:	sbb    eax,0xe63041ca
  43f805:	enter  0x30f0,0x0
  43f809:	and    DWORD PTR [esi+ebx*8-0x6d63a6cc],ebx
  43f810:	xor    al,0x22
  43f812:	lea    edi,[ebx+edi*1+0x4b]
  43f816:	lea    ebx,[esi+0x3b]
  43f819:	ins    BYTE PTR es:[edi],dx
  43f81a:	call   0xf86b:0xb6e9f86c
  43f821:	mov    cl,0xd6
  43f823:	or     DWORD PTR [eax],eax
  43f825:	xlat   BYTE PTR ds:[ebx]
  43f826:	add    BYTE PTR [eax],al
  43f828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f829:	and    DWORD PTR [eax],esi
  43f82b:	test   BYTE PTR [esi-0x7ecbd09f],0x31
  43f832:	das    
  43f833:	push   edx
  43f834:	xchg   al,ch
  43f836:	sub    eax,0x2d098717
  43f83b:	mov    ebp,0xc6341925
  43f840:	sbb    bl,BYTE PTR [edi]
  43f842:	xor    al,0x2a
  43f844:	and    eax,0x8d93271
  43f849:	mov    dh,0x31
  43f84b:	shl    BYTE PTR [ecx],cl
  43f84d:	or     esi,DWORD PTR [ecx]
  43f84f:	pop    ecx
  43f850:	sbb    cl,bh
  43f852:	ss jns 0x43f864
  43f855:	mov    WORD PTR [esi],?
  43f857:	loope  0x43f868
  43f859:	add    al,0x36
  43f85b:	out    0x1c,eax
  43f85d:	xor    BYTE PTR ds:0x34b11c17,0x99
  43f864:	or     eax,0xe6e9f86c
  43f869:	imul   edi,eax,0x69
  43f86c:	(bad)  
  43f86d:	or     DWORD PTR [eax],eax
  43f86f:	pop    ds
  43f870:	add    DWORD PTR [eax+0x2f],edx
  43f873:	inc    ecx
  43f874:	add    al,0x5d
  43f876:	sub    al,0xd6
  43f878:	or     cl,BYTE PTR [ecx+0x33]
  43f87b:	fldenv [eax-0x64c7cdd4]
  43f881:	fidiv  DWORD PTR [ecx]
  43f883:	add    BYTE PTR [edi+0x20367f3d],bh
  43f889:	cmp    eax,0x36b6
  43f88e:	dec    ebp
  43f88f:	cmp    eax,0x3d2f36cf
  43f894:	add    dh,BYTE PTR [edi]
  43f896:	aad    0x3c
  43f898:	and    esi,DWORD PTR [edi]
  43f89a:	jno    0x43f8da
  43f89c:	xchg   ecx,eax
  43f89d:	aaa    
  43f89e:	mov    ?,WORD PTR [edi]
  43f8a0:	cmp    BYTE PTR cs:[esi],dh
  43f8a3:	aas    
  43f8a4:	ja     0x43f8de
  43f8a6:	push   ds
  43f8a7:	aas    
  43f8a8:	fwait
  43f8a9:	cmp    dl,bl
  43f8ab:	ds jmp 0x8338:0xfd3eaa38
  43f8b3:	inc    eax
  43f8b4:	and    DWORD PTR [ecx],edi
  43f8b6:	xor    BYTE PTR [eax+0x52],al
  43f8b9:	cmp    edx,ebp
  43f8bb:	aas    
  43f8bc:	lea    edi,[ecx]
  43f8be:	fwait
  43f8bf:	aas    
  43f8c0:	scas   eax,DWORD PTR es:[edi]
  43f8c1:	cmp    DWORD PTR [ebx],eax
  43f8c3:	inc    eax
  43f8c4:	out    dx,al
  43f8c5:	cmp    DWORD PTR [edi],ebp
  43f8c7:	inc    ecx
  43f8c8:	jg     0x43f904
  43f8ca:	mov    ds:0xf13aa440,al
  43f8cf:	inc    eax
  43f8d0:	sar    DWORD PTR [edx],1
  43f8d2:	jbe    0x43f916
  43f8d4:	ja     0x43f911
  43f8d6:	or     BYTE PTR [ebx],ch
  43f8d8:	(bad)  
  43f8da:	out    dx,al
  43f8db:	leave  
  43f8dc:	out    0x3c,al
  43f8de:	jge    0x43f8a8
  43f8e0:	push   esp
  43f8e1:	aas    
  43f8e2:	fwait
  43f8e3:	(bad)  
  43f8e4:	mov    ds:0xffc7333f,eax
  43f8e9:	(bad)  
  43f8ea:	in     al,dx
  43f8eb:	xchg   dl,bh
  43f8ed:	call   FWORD PTR [eax+0x5]
  43f8f3:	add    BYTE PTR [ebx],al
  43f8f5:	aaa    
  43f8f6:	push   esp
  43f8f7:	xor    ebp,ecx
  43f8f9:	xor    al,0x6b
  43f8fb:	xor    DWORD PTR [ecx+0x34],ebp
  43f8fe:	mov    esi,DWORD PTR [ecx]
  43f900:	aad    0xc5
  43f902:	xor    dh,BYTE PTR [ebp-0x29cd4afc]
  43f908:	add    al,0x98
  43f90a:	xor    bh,cl
  43f90c:	add    al,0x52
  43f90e:	xor    dl,BYTE PTR [ecx]
  43f910:	out    0xb6,eax
  43f912:	xor    al,BYTE PTR [ebp-0x19]
  43f915:	adc    eax,0x51e76532
  43f91a:	xor    bh,BYTE PTR [ebp-0x19]
  43f91d:	stc    
  43f91e:	xor    DWORD PTR [ecx-0x4ace7139],ebx
  43f924:	(bad)  
  43f925:	and    DWORD PTR [edx],esi
  43f927:	aam    0xc7
  43f929:	es xor ch,ch
  43f92c:	(bad)  
  43f92d:	pop    esi
  43f92e:	xor    DWORD PTR [ecx],edx
  43f930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f931:	add    esi,DWORD PTR [ecx]
  43f933:	inc    eax
  43f934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f935:	mov    dh,BYTE PTR [ecx]
  43f937:	ins    DWORD PTR es:[edi],dx
  43f938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f939:	xchg   DWORD PTR [eax],esi
  43f93b:	ret    
  43f93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f93d:	adc    BYTE PTR [ecx],dh
  43f93f:	mov    ebp,0xe6382709
  43f944:	add    DWORD PTR [ecx+0x150b8637],ecx
  43f94a:	ss adc ebp,edi
  43f94d:	mov    BYTE PTR [edx*2+0x593a24ec],dh
  43f954:	out    dx,al
  43f955:	gs add BYTE PTR ds:[eax],al
  43f959:	add    ch,dl
  43f95b:	pusha  
  43f95c:	mov    ebp,?
  43f95e:	sbb    al,BYTE PTR [eax]
  43f960:	add    al,0x0
  43f962:	aad    0x38
  43f964:	cmp    BYTE PTR [ecx-0x3f],bl
  43f967:	sbb    al,0x37
  43f969:	pop    ebp
  43f96a:	enter  0x36ca,0x9b
  43f96e:	ret    
  43f96f:	std    
  43f970:	cmp    dh,BYTE PTR [esp+ebp*4]
  43f973:	aad    0x39
  43f975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f976:	scas   al,BYTE PTR es:[edi]
  43f977:	cdq    
  43f978:	cmp    DWORD PTR [eax-0x5e],ebx
  43f97b:	or     edi,esp
  43f97d:	mov    ds:0x3ae69d8,eax
  43f982:	aad    0x9
  43f984:	xchg   esi,eax
  43f985:	xor    eax,0x367b1d1f
  43f98a:	iret   
  43f98b:	sbb    eax,0x1e533834
  43f990:	scas   al,BYTE PTR es:[edi]
  43f991:	aaa    
  43f992:	loopne 0x43f9b2
  43f994:	sbb    bh,BYTE PTR [ecx]
  43f996:	dec    ecx
  43f997:	pop    ds
  43f998:	mov    WORD PTR [eax],?
  43f99a:	and    BYTE PTR ss:[esi+0x39],bl
  43f99e:	jge    0x43f9c1
  43f9a0:	pusha  
  43f9a1:	cmp    dh,BYTE PTR [esi-0x6ac42edf]
  43f9a7:	and    ch,BYTE PTR [edi]
  43f9a9:	cmp    eax,DWORD PTR [ecx-0x2bf5ede]
  43f9af:	daa    
  43f9b0:	mov    ebx,0x6b285541
  43f9b5:	inc    ecx
  43f9b6:	pop    ebp
  43f9b7:	sub    BYTE PTR [ebx+0x41],bl
  43f9ba:	inc    ebp
  43f9bb:	sub    BYTE PTR [ebx+0x41],bh
  43f9be:	add    BYTE PTR [eax],al
  43f9c0:	cmp    eax,0x75417b28
  43f9c5:	sub    BYTE PTR [ebx+0x41],cl
  43f9c8:	jge    0x43f9f2
  43f9ca:	cmp    eax,DWORD PTR [ecx-0x7b]
  43f9cd:	sub    BYTE PTR [ebx],bh
  43f9cf:	inc    ecx
  43f9d0:	jge    0x43f9fa
  43f9d2:	cmp    eax,DWORD PTR [ecx+0x15]
  43f9d5:	sub    BYTE PTR [ebx],ch
  43f9d7:	inc    ecx
  43f9d8:	sbb    eax,0x5411b28
  43f9dd:	sub    BYTE PTR [ebx-0x44d802be],bh
  43f9e3:	inc    edx
  43f9e4:	cmc    
  43f9e5:	daa    
  43f9e6:	retf   
  43f9e7:	inc    edx
  43f9e8:	std    
  43f9e9:	daa    
  43f9ea:	mov    ebx,0xbb280542
  43f9ef:	inc    edx
  43f9f0:	std    
  43f9f1:	daa    
  43f9f2:	mov    ebx,0x28d542
  43f9f7:	in     eax,dx
  43f9f8:	xchg   ebp,eax
  43f9f9:	adc    DWORD PTR [ecx],edi
  43f9fb:	fst    QWORD PTR [ebp-0x6a02c707]
  43fa01:	add    DWORD PTR [ecx],edi
  43fa03:	std    
  43fa04:	adc    eax,0x15cd392a
  43fa09:	xor    bh,BYTE PTR [ecx]
  43fa0b:	mov    ebp,0xbd391a15
  43fa10:	adc    eax,0x15bd3922
  43fa15:	retf   0x2d38
  43fa18:	adc    al,0xd2
  43fa1a:	cmp    BYTE PTR ds:0xbd38ba14,bl
  43fa20:	adc    eax,0xbd38c2
  43fa25:	add    BYTE PTR ds:0x15cd38ea,dl
  43fa2b:	repnz cmp BYTE PTR [ebp-0x42c725eb],bh
  43fa32:	adc    eax,0x15bd38e2
  43fa37:	mov    bh,BYTE PTR [eax]
  43fa39:	ins    DWORD PTR es:[edi],dx
  43fa3a:	adc    al,0x92
  43fa3c:	cmp    BYTE PTR [ebp+0x14],bl
  43fa3f:	jp     0x43fa79
  43fa41:	jge    0x43fa57
  43fa43:	cmp    BYTE PTR [eax],0x7d
  43fa46:	xchg   esp,eax
  43fa47:	or     DWORD PTR [eax],eax
  43fa49:	jmp    0x323c60d4
  43fa4e:	(bad)  [ecx]
  43fa50:	add    cl,ah
  43fa52:	push   es
  43fa53:	push   es
  43fa54:	xor    cl,cl
  43fa56:	out    0x2d,al
  43fa58:	xor    cl,al
  43fa5a:	out    0x35,al
  43fa5c:	xor    BYTE PTR [ecx+0x21301de6],bh
  43fa62:	loope  0x43fa89
  43fa64:	xor    BYTE PTR [ecx],ch
  43fa66:	leave  
  43fa67:	int    0x2f
  43fa69:	and    ecx,eax
  43fa6b:	aad    0x2f
  43fa6d:	cmp    ecx,ecx
  43fa6f:	mov    ebp,0x1db4002f
  43fa74:	pop    esp
  43fa75:	xor    BYTE PTR [ebp+ebx*1+0x1d943064],bl
  43fa7c:	ins    BYTE PTR es:[edi],dx
  43fa7d:	xor    BYTE PTR [ebp+ebx*1+0x1db43074],bl
  43fa84:	jl     0x43fab6
  43fa86:	cmp    al,0x1b
  43fa88:	test   BYTE PTR [eax],dh
  43fa8a:	add    BYTE PTR [eax],al
  43fa8c:	xor    al,0x1b
  43fa8e:	mov    WORD PTR [eax],?
  43fa90:	cmp    al,0x1b
  43fa92:	xchg   esp,eax
  43fa93:	xor    BYTE PTR [ebx+ebx*1],dh
  43fa96:	pushf  
  43fa97:	xor    BYTE PTR [ebx+ebx*1],bl
  43fa9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa9b:	xor    BYTE PTR [ebx+ebx*1],dl
  43fa9e:	lods   al,BYTE PTR ds:[esi]
  43fa9f:	xor    ah,bl
  43faa1:	sbb    dh,BYTE PTR [eax+esi*1+0x30bc1b74]
  43faa8:	mov    esp,0xb430c41a
  43faad:	sbb    cl,ah
  43faaf:	xor    BYTE PTR [edx+ebx*1+0x1c9530d4],bh
  43fab6:	cmp    eax,0xe8223233
  43fabb:	aaa    
  43fabc:	jle    0x43fae1
  43fabe:	push   edx
  43fabf:	cmp    BYTE PTR [edx],ch
  43fac1:	and    esi,DWORD PTR [esi+0x38]
  43fac4:	in     al,0x22
  43fac6:	xchg   ebx,eax
  43fac7:	cmp    BYTE PTR [eax-0x5cc747de],bl
  43facd:	and    bl,ah
  43facf:	cmp    dl,ch
  43fad1:	and    dl,BYTE PTR [esi]
  43fad3:	cmp    DWORD PTR [ecx+0x24],edi
  43fad6:	jno    0x43fb11
  43fad8:	popf   
  43fad9:	and    esp,DWORD PTR [ebx-0x4cdc12c7]
  43fadf:	cmp    DWORD PTR [eiz*1+0x23b73a5a],edx
  43fae6:	dec    esi
  43fae7:	cmp    eax,DWORD PTR [edx+eiz*1+0x58d53b95]
  43faee:	cmp    BYTE PTR [ecx],cl
  43faf0:	add    BYTE PTR [eax],al
  43faf2:	rcl    BYTE PTR [eax],0x3f
  43faf5:	int3   
  43faf6:	mov    eax,0xb0e13ead
  43fafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fafc:	ds push es
  43fafe:	stos   DWORD PTR es:[edi],eax
  43faff:	sub    DWORD PTR [edx],edi
  43fb01:	push   ebx
  43fb02:	mov    ds:0x9b693a17,eax
  43fb07:	sub    bh,BYTE PTR [edx]
  43fb09:	xchg   ebx,eax
  43fb0a:	adc    esi,DWORD PTR [eax+0x710bda39]
  43fb10:	cmp    DWORD PTR [edx],edx
  43fb12:	add    dl,BYTE PTR [esi+0x39]
  43fb15:	push   eax
  43fb16:	cli    
  43fb17:	bound  edi,QWORD PTR [ecx]
  43fb19:	xor    dl,0xf4
  43fb1c:	cmp    BYTE PTR [edx+ebp*8-0x1d25c758],ch
  43fb23:	lea    edi,[eax]
  43fb25:	add    ch,dl
  43fb27:	jo     0x43fb65
  43fb29:	std    
  43fb2a:	xchg   edx,eax
  43fb2b:	je     0x43fb30
  43fb2d:	add    ch,dl
  43fb2f:	ins    DWORD PTR es:[edi],dx
  43fb30:	sub    al,0x1d
  43fb32:	lds    eax,FWORD PTR [edx]
  43fb34:	xor    al,0x4d
  43fb36:	lds    ebp,FWORD PTR [ecx-0x6d5a6dd4]
  43fb3c:	xor    esi,DWORD PTR [edi-0x27cc205b]
  43fb42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fb43:	int    0x33
  43fb45:	cld    
  43fb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fb47:	jb     0x43fb7c
  43fb49:	sbb    al,0x4
  43fb4b:	inc    edx
  43fb4c:	xor    edi,DWORD PTR [ebx]
  43fb4e:	add    al,0xa5
  43fb50:	xor    edx,DWORD PTR [esi+0x4]
  43fb53:	xor    DWORD PTR [ebx],0x7c
  43fb56:	add    BYTE PTR [eax],al
  43fb58:	add    al,0xc4
  43fb5a:	xor    dl,BYTE PTR [edi-0x4accde1c]
  43fb60:	in     al,0x2
  43fb62:	xor    ebx,eax
  43fb64:	in     al,0x61
  43fb66:	xor    edi,edx
  43fb68:	in     al,0x9
  43fb6a:	cld    
  43fb6b:	xor    eax,ebp
  43fb6d:	sbb    ebp,DWORD PTR [esi]
  43fb6f:	xor    ah,BYTE PTR [eax-0x7ccdbbe5]
  43fb75:	sbb    edi,DWORD PTR [eax+0x31]
  43fb78:	sub    eax,0x1f31911b
  43fb7d:	sbb    ebx,DWORD PTR [ecx-0x18e500cf]
  43fb83:	xor    al,bh
  43fb85:	sbb    ch,ch
  43fb87:	xor    al,BYTE PTR [esi+0x1a]
  43fb8a:	push   esp
  43fb8b:	xor    cl,BYTE PTR [eax-0x36cd75e7]
  43fb91:	sbb    ebx,esi
  43fb93:	aaa    
  43fb94:	loopne 0x43fbb3
  43fb96:	shl    BYTE PTR [edi],0xec
  43fb99:	sbb    eax,0x1e1437ba
  43fb9e:	adc    al,0x38
  43fba0:	ss push ds
  43fba2:	div    DWORD PTR [edi]
  43fba4:	and    DWORD PTR [esi],ebx
  43fba6:	pushf  
  43fba7:	aaa    
  43fba8:	rcr    BYTE PTR [esi],1
  43fbaa:	and    bh,BYTE PTR [ecx]
  43fbac:	pop    ds
  43fbad:	pop    ds
  43fbae:	jo     0x43fbe8
  43fbb0:	pusha  
  43fbb1:	pop    ds
  43fbb2:	daa    
  43fbb3:	cmp    BYTE PTR [ebp+0x1f],dh
  43fbb6:	push   ebp
  43fbb7:	cmp    bh,dl
  43fbb9:	sbb    esi,esi
  43fbbb:	xor    eax,0x1c120000
  43fbc0:	xor    ax,0x1c93
  43fbc4:	inc    ebx
  43fbc5:	xor    eax,0x37011ccc
  43fbca:	cdq    
  43fbcb:	sbb    al,0x88
  43fbcd:	ss ret 0x481c
  43fbd1:	sbb    BYTE PTR ss:0x21e6360f,0xea
  43fbd9:	cmp    esi,esp
  43fbdb:	and    ecx,edx
  43fbdd:	cmp    eax,DWORD PTR [ebp-0x4fc461df]
  43fbe3:	and    DWORD PTR [eax],eax
  43fbe5:	je     0x43fbc5
  43fbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fbe8:	aaa    
  43fbe9:	and    al,0xde
  43fbeb:	inc    ebp
  43fbec:	aaa    
  43fbed:	fcom   st(1)
  43fbef:	adc    esi,DWORD PTR [edi]
  43fbf1:	std    
  43fbf2:	iret   
  43fbf3:	sbb    dh,BYTE PTR [edi]
  43fbf5:	adc    al,0xbe
  43fbf7:	iret   
  43fbf8:	xor    BYTE PTR ss:[esi-0x5138c920],bh
  43fbff:	pop    ss
  43fc00:	ss jo  0x43fbb2
  43fc03:	jp     0x43fc3a
  43fc05:	stos   DWORD PTR es:[edi],eax
  43fc06:	lahf   
  43fc07:	inc    ebp
  43fc08:	xor    eax,0x350d9fc2
  43fc0d:	sbb    DWORD PTR [esi+edx*4],ecx
  43fc10:	xor    al,0x7d
  43fc12:	or     al,0x99
  43fc14:	xor    al,0x64
  43fc16:	adc    eax,0x15a13ba9
  43fc1b:	cmp    BYTE PTR [ebx],bh
  43fc1d:	jl     0x43fc34
  43fc1f:	or     BYTE PTR [ebx],bh
  43fc21:	repz add BYTE PTR [eax],al
  43fc24:	jmp    0x43fc35
  43fc26:	cmp    ebx,ebx
  43fc28:	jecxz  0x43fc21
  43fc2a:	cmp    dl,bl
  43fc2c:	(bad)  
  43fc2e:	cmp    cl,BYTE PTR [ebx]
  43fc30:	shl    BYTE PTR [edi],cl
  43fc32:	cmp    edx,DWORD PTR [ebx]
  43fc34:	retf   0x3b2f
  43fc37:	push   ds
  43fc38:	ret    
  43fc39:	or     DWORD PTR [eax],eax
  43fc3b:	jmp    0x7a3c6366
  43fc40:	(bad)  [ecx]
  43fc42:	add    BYTE PTR [edx],dl
  43fc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fc45:	or     esi,DWORD PTR [edx]
  43fc47:	(bad)  
  43fc48:	test   al,0x8e
  43fc4a:	xor    DWORD PTR [edx-0x5d],ecx
  43fc4d:	push   ss
  43fc4e:	xor    ebx,ebx
  43fc50:	or     DWORD PTR [eax+esi*1+0x3689006b],edi
  43fc57:	aas    
  43fc58:	inc    BYTE PTR [edi]
  43fc5a:	ss scas al,BYTE PTR es:[edi]
  43fc5c:	std    
  43fc5d:	xchg   esp,eax
  43fc5e:	xor    al,0x0
  43fc60:	jp     0x43fc88
  43fc62:	pop    edx
  43fc63:	ds push edx
  43fc65:	bound  edi,QWORD PTR es:[esi]
  43fc68:	pop    edx
  43fc69:	es push 0x3e
  43fc6c:	mov    ds:0x7a3e7226,al
  43fc71:	and    edi,DWORD PTR [edx+0x3e]
  43fc74:	jb     0x43fc9c
  43fc76:	cmp    BYTE PTR [esi],0x7a
  43fc79:	mov    bh,BYTE PTR es:[esi]
  43fc7c:	and    BYTE PTR [esi],0x92
  43fc7f:	ds jp  0x43fca8
  43fc82:	call   0x3e:0xa226523e
  43fc89:	add    BYTE PTR [edx+0x26],bl
  43fc8c:	stos   BYTE PTR es:[edi],al
  43fc8d:	bound  esp,QWORD PTR ds:[esi]
  43fc90:	mov    dl,0x3e
  43fc92:	cmp    ah,BYTE PTR ds:0x25723eba
  43fc98:	ret    0x7a3e
  43fc9b:	and    eax,0x25823eca
  43fca0:	sar    BYTE PTR [esi],cl
  43fca2:	jp     0x43fcc9
  43fca4:	fidivr DWORD PTR [esi]
  43fca6:	push   edx
  43fca7:	and    eax,0x255a3ee2
  43fcac:	jmp    0xfa3e:0xf225223e
  43fcb3:	and    al,0xfa
  43fcb5:	ds jb  0x43fcde
  43fcb8:	add    bh,BYTE PTR [edi]
  43fcba:	jp     0x43fce2
  43fcbc:	or     bh,BYTE PTR [edi]
  43fcbe:	and    BYTE PTR [esi],0x12
  43fcc1:	aas    
  43fcc2:	jp     0x43fcea
  43fcc4:	sbb    bh,BYTE PTR [edi]
  43fcc6:	shl    BYTE PTR [edx+eiz*1],cl
  43fcc9:	aas    
  43fcca:	fisub  DWORD PTR [edx+ebp*1]
  43fccd:	aas    
  43fcce:	bound  esp,QWORD PTR [esi]
  43fcd0:	xor    bh,BYTE PTR [edi]
  43fcd2:	cmp    ah,BYTE PTR [esi]
  43fcd4:	cmp    bh,BYTE PTR [edi]
  43fcd6:	jb     0x43fcfe
  43fcd8:	inc    edx
  43fcd9:	aas    
  43fcda:	aad    0xaa
  43fcdc:	cmp    ecx,DWORD PTR [esi-0x6]
  43fcdf:	call   0x5e3b:0xaaf2563b
  43fce6:	jmp    0x3b8a:0xe2663b8a
  43fced:	add    BYTE PTR [eax],al
  43fcef:	add    ch,dl
  43fcf1:	jo     0x43fd4f
  43fcf3:	std    
  43fcf4:	adc    dl,BYTE PTR [ebp-0x1d2afffd]
  43fcfa:	xor    ebx,ecx
  43fcfc:	lds    ecx,FWORD PTR [ebx+0x33]
  43fcff:	cmc    
  43fd00:	(bad)  
  43fd03:	inc    ebx
  43fd04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fd05:	pop    ds
  43fd06:	xor    edx,DWORD PTR [ebx-0x1cd225c]
  43fd0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fd0d:	ins    DWORD PTR es:[edi],dx
  43fd0e:	xor    dh,BYTE PTR [edi-0x59]
  43fd11:	lods   al,BYTE PTR ds:[esi]
  43fd12:	xor    edx,ebx
  43fd14:	pop    es
  43fd15:	push   eax
  43fd16:	xor    DWORD PTR [ecx-0x39cf41fa],ebp
  43fd1c:	push   es
  43fd1d:	jns    0x43fd4f
  43fd1f:	cli    
  43fd20:	push   es
  43fd21:	pop    edx
  43fd22:	sub    BYTE PTR [ecx+ebp*8+0x5],cl
  43fd26:	xor    BYTE PTR [edi+0x5c2efae1],dh
  43fd2c:	call   0xe1042bed
  43fd31:	in     eax,0x2e
  43fd33:	cli    
  43fd34:	enter  0x2e62,0x3e
  43fd38:	ret    
  43fd39:	inc    edi
  43fd3a:	cs jbe 0x43fd08
  43fd3d:	jg     0x43fd6c
  43fd3f:	dec    esp
  43fd40:	ret    0x2db3
  43fd43:	sub    DWORD PTR [edx-0x52f0d343],0x3b
  43fd4a:	xor    al,0x1a
  43fd4c:	popf   
  43fd4d:	(bad)  
  43fd4f:	das    
  43fd50:	popf   
  43fd51:	mov    ds:0x7434,al
  43fd56:	or     eax,0x453c0c0a
  43fd5b:	and    DWORD PTR [ecx+0x6820a83c],ebp
  43fd61:	cmp    eax,0x3dea2077
  43fd66:	cli    
  43fd67:	pop    ds
  43fd68:	mov    edi,0x931f943d
  43fd6d:	cmp    eax,0x3ec61f4f
  43fd72:	jmp    0xab829d95
  43fd77:	push   ds
  43fd78:	ja     0x43fdb8
  43fd7a:	int    0x25
  43fd7c:	pusha  
  43fd7d:	cmp    BYTE PTR [eiz*1+0x25433796],dh
  43fd84:	test   al,0x37
  43fd86:	sbb    eax,0xda37c125
  43fd8b:	and    al,0x4f
  43fd8d:	cmp    bl,BYTE PTR [ebx+0x23]
  43fd90:	daa    
  43fd91:	cmp    edx,DWORD PTR [ebx+0x22]
  43fd94:	ret    0xd53a
  43fd97:	or     edi,esp
  43fd99:	jae    0x43fd63
  43fd9b:	popa   
  43fd9c:	push   ss
  43fd9d:	add    al,0xd5
  43fd9f:	or     DWORD PTR [ecx],ebp
  43fda1:	xor    eax,0x345c1b39
  43fda6:	jg     0x43fdc3
  43fda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fda9:	xor    al,0x84
  43fdab:	sbb    eax,DWORD PTR [edx-0xe41fcc]
  43fdb1:	xor    eax,0x35621c2a
  43fdb6:	cmp    al,0x1c
  43fdb8:	cmp    al,0x35
  43fdba:	add    BYTE PTR [eax],al
  43fdbc:	rcr    BYTE PTR [edi+eiz*4],cl
  43fdbf:	adc    DWORD PTR ss:0x1cea36ba,ebx
  43fdc6:	cmp    bl,BYTE PTR ss:[di]
  43fdca:	aad    0x2f
  43fdcc:	sbb    DWORD PTR [esi],edx
  43fdce:	mov    ch,0x2f
  43fdd0:	xor    DWORD PTR [esi],edx
  43fdd2:	add    bh,bl
  43fdd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fdd5:	aam    0x32
  43fdd7:	add    DWORD PTR ds:0x4783254,0x4a
  43fdde:	xor    DWORD PTR [ebx+0x7],eax
  43fde1:	xor    BYTE PTR [eax],bh
  43fde3:	addr16 (bad) 
  43fde5:	lahf   
  43fde6:	aaa    
  43fde7:	retf   0xb8f1
  43fdea:	ss jo  0x43fdd6
  43fded:	adc    al,0x36
  43fdef:	mov    edi,0x4f356ce0
  43fdf4:	(bad)  [esp+esi*1-0x26]
  43fdf8:	retf   0x3c2b
  43fdfb:	jg     0x43fdca
  43fdfd:	aas    
  43fdfe:	cmp    esp,ebx
  43fe00:	mov    ebp,0xc26d3ae1
  43fe05:	jg     0x43fe41
  43fe07:	pop    esp
  43fe08:	scas   eax,DWORD PTR es:[edi]
  43fe09:	mov    ds:0x5ed6e939,al
  43fe0e:	clc    
  43fe0f:	cmp    eax,0xe10009d9
  43fe14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fe15:	(bad)  
  43fe16:	cs pusha 
  43fe18:	push   es
  43fe19:	jge    0x43fe49
  43fe1b:	dec    eax
  43fe1c:	add    esp,DWORD PTR [edx+0xa92c]
  43fe22:	or     BYTE PTR [edx+0x2c],al
  43fe25:	cmp    eax,0x933b805
  43fe2a:	in     eax,0xd9
  43fe2c:	xor    edi,edi
  43fe2e:	cli    
  43fe2f:	fnsave [ebx]
  43fe31:	imul   esp,ebp,0xffffff91
  43fe34:	xor    esp,DWORD PTR [edi-0x1b]
  43fe37:	jl     0x43fe6c
  43fe39:	dec    ebp
  43fe3a:	lds    edi,FWORD PTR [esi+0x33]
  43fe3d:	xchg   ebx,eax
  43fe3e:	lds    esi,FWORD PTR [eax-0x5d3a5ecd]
  43fe44:	xor    ebp,DWORD PTR [esi]
  43fe46:	lds    edx,FWORD PTR [edx+0x33]
  43fe49:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  43fe4b:	xor    eax,DWORD PTR ds:[eax]
  43fe4e:	add    BYTE PTR [edx],bl
  43fe50:	jmp    0xf95da989
  43fe55:	xor    al,0x76
  43fe57:	das    
  43fe58:	or     eax,0x2830df35
  43fe5d:	xor    eax,0x35312f22
  43fe62:	ins    BYTE PTR es:[edi],dx
  43fe63:	das    
  43fe64:	jo     0x43fe9c
  43fe66:	mov    ecx,0x2936cf1b
  43fe6b:	sbb    DWORD PTR [esi],edi
  43fe6d:	aaa    
  43fe6e:	mov    eax,0xe737a11a
  43fe73:	sbb    dh,bl
  43fe75:	aaa    
  43fe76:	pop    esi
  43fe77:	and    al,0x83
  43fe79:	cmp    BYTE PTR [ebx],cl
  43fe7b:	and    al,0x7
  43fe7d:	cmp    edi,ebp
  43fe7f:	and    al,0x26
  43fe81:	cmp    esp,DWORD PTR [ebp+0x3d7a21]
  43fe87:	add    BYTE PTR [ebx+eiz*1-0x4040000],cl
  43fe8e:	cli    
  43fe8f:	push   DWORD PTR [ebp+eax*1+0x1c310000]
  43fe96:	jb     0x43feca
  43fe98:	push   ebp
  43fe99:	push   ss
  43fe9a:	mov    ecx,0xf6158632
  43fe9f:	xor    bh,BYTE PTR [esi-0x39cd01ea]
  43fea5:	push   ss
  43fea6:	push   es
  43fea7:	xor    edi,DWORD PTR [esi-0x5dccf1ea]
  43fead:	push   ss
  43feae:	(bad)  
  43feaf:	xor    esi,DWORD PTR [esi+edx*1+0x7f]
  43feb3:	xor    al,0x9
  43feb5:	das    
  43feb6:	jmp    0x2335:0x4a305934
  43febd:	xor    BYTE PTR [ebp+esi*1+0x35d03033],ah
  43fec4:	adc    BYTE PTR [eax],dh
  43fec6:	and    esi,DWORD PTR [esi]
  43fec8:	aad    0xb2
  43feca:	cs dec ebx
  43fecc:	stos   DWORD PTR es:[edi],eax
  43fecd:	in     al,dx
  43fece:	cs mov cl,0xa3
  43fed1:	adc    al,0x2f
  43fed3:	fldcw  WORD PTR [ebx-0x5dd3d09c]
  43fed9:	xor    BYTE PTR [eax],0x75
  43fedc:	adc    ebx,ebp
  43fede:	xor    BYTE PTR [edi-0x38c814f6],cl
  43fee4:	add    dh,BYTE PTR [ecx+0x1c]
  43fee7:	std    
  43fee8:	cmp    dl,BYTE PTR [ecx-0x4]
  43feeb:	inc    DWORD PTR [eax]
  43feed:	add    ch,dl
  43feef:	mov    al,ds:0x3e65933
  43fef4:	xor    al,0xdf
  43fef6:	out    0x7b,al
  43fef8:	sub    DWORD PTR [eax],edi
  43fefa:	jecxz  0x43fece
  43fefc:	cs jmp 0x6d7448cd
  43ff02:	leave  
  43ff03:	ss xor bx,ax
  43ff07:	jo     0x43ff35
  43ff09:	std    
  43ff0a:	cli    
  43ff0b:	mov    WORD PTR [ebx],es
  43ff0d:	add    ch,dl
  43ff0f:	(bad)  
  43ff10:	sub    al,0x12
  43ff12:	mov    al,ds:0xaa6d2965
  43ff17:	cmp    ecx,DWORD PTR fs:[eax]
  43ff1a:	pushf  
  43ff1b:	cmp    edx,DWORD PTR fs:[eax]
  43ff1e:	or     al,0x35
  43ff20:	cmp    ebx,DWORD PTR [eax]
  43ff22:	or     al,0x5
  43ff24:	cmp    esp,DWORD PTR [eax]
  43ff26:	cld    
  43ff27:	inc    esp
  43ff28:	cmp    ebp,DWORD PTR [eax]
  43ff2a:	cld    
  43ff2b:	inc    esp
  43ff2c:	cmp    esi,DWORD PTR [eax]
  43ff2e:	in     al,dx
  43ff2f:	xor    al,0x3b
  43ff31:	cmp    ah,ch
  43ff33:	inc    esp
  43ff34:	cmp    eax,DWORD PTR [eax-0x24]
  43ff37:	and    al,0x3b
  43ff39:	dec    eax
  43ff3a:	fsub   QWORD PTR [ebx+edi*1]
  43ff3d:	push   eax
  43ff3e:	int3   
  43ff3f:	hlt    
  43ff40:	cmp    bl,BYTE PTR [eax-0x34]
  43ff43:	or     ebx,eax
  43ff45:	cmp    al,0xf5
  43ff47:	and    bl,al
  43ff49:	cmp    al,0xed
  43ff4b:	and    bl,al
  43ff4d:	cmp    al,0xe5
  43ff4f:	and    bl,dl
  43ff51:	cmp    al,0x0
  43ff53:	add    ch,ch
  43ff55:	and    bl,al
  43ff57:	cmp    al,0x55
  43ff59:	and    BYTE PTR [ebx+0x3d],ah
  43ff5c:	dec    ebp
  43ff5d:	and    BYTE PTR [ebx+0x3d],ah
  43ff60:	push   edi
  43ff61:	sbb    eax,0x1d8b386e
  43ff66:	xor    DWORD PTR [eax],edi
  43ff68:	sub    ebx,DWORD PTR ds:0x1cd53809
  43ff6e:	jecxz  0x43ffa8
  43ff70:	retf   0xd01c
  43ff73:	cmp    BYTE PTR [ebp+0x7d38b31c],dl
  43ff79:	sbb    al,0x8b
  43ff7b:	cmp    BYTE PTR [edi+0x64395d1c],bl
  43ff81:	sbb    al,0x38
  43ff83:	cmp    DWORD PTR [edi+0x1c],ecx
  43ff86:	lods   eax,DWORD PTR ds:[esi]
  43ff87:	cmp    BYTE PTR [edi],ah
  43ff89:	sbb    al,0xcd
  43ff8b:	cmp    cl,bh
  43ff8d:	sbb    ebx,edi
  43ff8f:	xor    eax,0x36141fc6
  43ff94:	stos   DWORD PTR es:[edi],eax
  43ff95:	pop    ds
  43ff96:	xor    DWORD PTR [esi],esi
  43ff98:	mov    ebx,DWORD PTR [edi]
  43ff9a:	dec    ecx
  43ff9b:	ss push ebp
  43ff9d:	pop    ds
  43ff9e:	arpl   WORD PTR ds:0x35a61c6a,si
  43ffa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ffa5:	sbb    al,0x88
  43ffa7:	xor    eax,0x36f81cae
  43ffac:	aad    0x9
  43ffae:	out    0xc3,eax
  43ffb0:	mov    cl,0x5d
  43ffb2:	out    dx,al
  43ffb3:	add    edx,ebp
  43ffb5:	or     DWORD PTR [ebp+0x37],esp
  43ffb8:	add    BYTE PTR [eax],al
  43ffba:	lods   eax,DWORD PTR ds:[esi]
  43ffbb:	push   ds
  43ffbc:	fbstp  TBYTE PTR ds:0xac001c61
  43ffc2:	enter  0x38c6,0x10
  43ffc6:	ret    0x3858
  43ffc9:	jmp    0x1a3c5e74
  43ffce:	ror    DWORD PTR [ecx],1
  43ffd0:	add    dh,ch
  43ffd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ffd3:	out    dx,al
  43ffd4:	xor    ah,BYTE PTR [ebp+eiz*4+0x7a]
  43ffd8:	xor    dl,BYTE PTR [eax+0x643789a5]
  43ffde:	sahf   
  43ffdf:	in     eax,0x35
  43ffe1:	sub    BYTE PTR [ecx+edx*2],cl
  43ffe4:	xor    eax,0x3a370d6a
  43ffe9:	lea    ecx,[eax]
  43ffeb:	xchg   edx,eax
  43ffec:	cmp    edx,edx
  43ffee:	add    ecx,ebx
  43fff0:	cmp    BYTE PTR [esi+0x2538d7eb],bh
  43fff6:	jecxz  0x440001
  43fff8:	add    cl,ch
  43fffa:	ss pop esi
  43fffc:	clc    
  43fffd:	mov    cl,0xd6
  43ffff:	or     DWORD PTR [eax],eax
  440001:	addr16 leave 
  440003:	js     0x440033
  440005:	dec    esi
  440006:	shr    DWORD PTR [ebp-0x2f3ad4d2],0x33
  44000d:	add    ebp,0xfffffffd
  440010:	xor    cl,BYTE PTR [ecx]
  440012:	ret    0x332d
  440015:	sbb    DWORD PTR [edx-0x4dd6cce3],edi
  44001b:	int    0x32
  44001d:	sbb    DWORD PTR [eax],eax
  44001f:	add    BYTE PTR [edx+0x24932bd],ch
  440025:	out    dx,al
  440026:	xor    bh,BYTE PTR [ecx]
  440028:	cli    
  440029:	fnsave [edx]
  44002b:	imul   esi,edx,0xea79328d
  440031:	jge    0x440065
  440033:	dec    ecx
  440034:	add    ch,BYTE PTR [esi-0x6205a6ce]
  44003a:	xor    al,BYTE PTR [eax]
  44003c:	ins    BYTE PTR es:[edi],dx
  44003d:	sub    al,0xcc
  44003f:	xor    eax,0x2c3c
  440044:	jl     0x43ffde
  440046:	sti    
  440047:	(bad)  
  440048:	fmul   DWORD PTR [eax]
  44004a:	add    BYTE PTR [eax],al
  44004c:	jl     0x440066
  44004e:	adc    al,0x30
  440050:	int3   
  440051:	sbb    ah,BYTE PTR [ebx+esi*1]
  440054:	rcr    BYTE PTR [edx],1
  440056:	cmp    BYTE PTR [ebx],dh
  440058:	dec    eax
  440059:	sbb    DWORD PTR [ebx+esi*1+0x1c],esp
  44005d:	sbb    DWORD PTR [ebx+esi*1-0x6c],esi
  440061:	sbb    DWORD PTR [ebx+esi*1-0x44],edi
  440065:	sbb    al,BYTE PTR [ebx+esi*1+0x338c1ab4]
  44006c:	mov    esp,0x5433941a
  440071:	sbb    bl,BYTE PTR [ebx+esi*1+0x33a41a9c]
  440078:	xchg   esp,eax
  440079:	sbb    ch,BYTE PTR [ebx+esi*1+0x33b41adc]
  440080:	xchg   esp,eax
  440081:	sbb    bh,BYTE PTR [ebx+esi*1+0x1abc0000]
  440088:	les    esi,FWORD PTR [ebx]
  44008a:	mov    ah,0x1a
  44008c:	int3   
  44008d:	xor    edi,DWORD PTR [ecx+ebx*1]
  440090:	aam    0x33
  440092:	adc    al,0x19
  440094:	fdiv   QWORD PTR [ebx]
  440096:	sbb    al,0x19
  440098:	in     al,0x33
  44009a:	adc    al,0x19
  44009c:	in     al,dx
  44009d:	xor    ebx,DWORD PTR [ecx+ebx*1]
  4400a0:	hlt    
  4400a1:	xor    edx,DWORD PTR [ecx+ebx*1]
  4400a4:	cld    
  4400a5:	xor    edi,DWORD PTR [ebx+ebp*1+0x2bb43404]
  4400ac:	or     al,0x34
  4400ae:	mov    esp,0xd434142b
  4400b3:	sbb    DWORD PTR [esp+esi*1],ebx
  4400b6:	aad    0x50
  4400b8:	sub    BYTE PTR [ecx+eiz*8],ah
  4400bb:	dec    eax
  4400bc:	sub    BYTE PTR [ecx+ebp*8],ch
  4400bf:	mov    al,ds:0x48e13428
  4400c4:	sub    BYTE PTR [ecx+ecx*8],bh
  4400c7:	xor    BYTE PTR [eax],dh
  4400c9:	inc    esp
  4400ca:	shr    DWORD PTR [eax],0x30
  4400cd:	dec    esp
  4400ce:	leave  
  4400cf:	mov    al,ds:0x48c15428
  4400d4:	sub    BYTE PTR [ecx+ebp*4+0x50],bl
  4400d8:	sub    BYTE PTR [ecx+eiz*4+0x48],ah
  4400dc:	sub    BYTE PTR [ecx+ebp*4-0x60],ch
  4400e0:	sub    BYTE PTR [ecx+eiz*4+0x48],dh
  4400e4:	sub    BYTE PTR [ecx+ecx*1-0xf],bh
  4400e8:	sub    BYTE PTR [eax+eax*1+0x28e90100],al
  4400ef:	mov    WORD PTR [ecx],cs
  4400f1:	loope  0x44011b
  4400f3:	xchg   esp,eax
  4400f4:	add    DWORD PTR [ecx-0x2f1663d8],ecx
  4400fa:	sub    BYTE PTR [ecx+eiz*8-0x1653d738],ah
  440101:	and    BYTE PTR [ecx],ch
  440103:	mov    ah,0xe1
  440105:	enter  0xbc28,0xc9
  440109:	xor    BYTE PTR [ecx],ch
  44010b:	(bad)
  44010f:	int3   
  440110:	leave  
  440111:	dec    esp
  440112:	aaa    
  440113:	hlt    
  440114:	shl    DWORD PTR [edi+esi*1+0x14],0xa8
  440119:	or     al,0x37
  44011b:	xor    al,0xa0
  44011d:	and    al,0x37
  44011f:	push   esp
  440120:	test   al,0xcc
  440122:	ss je  0x4400c5
  440125:	in     al,0x36
  440127:	xchg   esp,eax
  440128:	or     BYTE PTR [ebp-0x5aff4bca],cl
  44012e:	ss aam 0x8
  440131:	or     cl,BYTE PTR [ebx-0x1ceb3ec7]
  440137:	cmp    ecx,ecx
  440139:	adc    ecx,ebx
  44013b:	cmp    ecx,esp
  44013d:	adc    esp,DWORD PTR [ebx]
  44013f:	cmp    cl,BYTE PTR [ecx]
  440141:	adc    al,0xb
  440143:	cmp    ah,BYTE PTR [ecx]
  440145:	adc    al,0x63
  440147:	cmp    ch,BYTE PTR [ecx+0x13]
  44014a:	dec    ebx
  44014b:	cmp    al,BYTE PTR [ecx+0x13]
  44014e:	mov    ds:0xa900003a,eax
  440153:	adc    ecx,DWORD PTR [ebx+0x3a]
  440156:	adc    DWORD PTR [ebx],0x12c93ae3
  44015c:	or     edi,DWORD PTR [ebx]
  44015e:	mov    eax,ds:0x93aa312
  440163:	adc    ecx,ebx
  440165:	cmp    ah,cl
  440167:	adc    ah,BYTE PTR [ebx+0x3b]
  44016a:	imul   edx,DWORD PTR [edx],0x12813b8b
  440170:	and    edi,DWORD PTR [ebx]
  440172:	sub    DWORD PTR [edx],edx
  440174:	or     edi,DWORD PTR [ebx]
  440176:	inc    ecx
  440177:	adc    ah,bl
  440179:	sub    ecx,ecx
  44017b:	and    ebx,ecx
  44017d:	sub    esp,ecx
  44017f:	and    DWORD PTR [ebx-0x74de76d5],esp
  440185:	sub    esp,DWORD PTR [ecx+0x692c6321]
  44018b:	and    DWORD PTR [edi+0x2c],eax
  44018e:	xor    DWORD PTR [ecx],esp
  440190:	aaa    
  440191:	sub    al,0x49
  440193:	and    DWORD PTR [edi-0x58dec6d5],ebx
  440199:	sub    ebx,DWORD PTR [ecx]
  44019b:	and    DWORD PTR [edi-0x48dee6d5],ebx
  4401a1:	sub    ecx,DWORD PTR [ecx]
  4401a3:	and    DWORD PTR [edi-0x18df06d5],ebx
  4401a9:	add    edx,ebp
  4401ab:	or     DWORD PTR [eax],eax
  4401ad:	jmp    0xe9440b88
  4401b2:	(bad)  
  4401b3:	or     DWORD PTR [eax],eax
  4401b5:	jmp    0xa1a01ba
  4401ba:	add    cl,ch
  4401bc:	(bad)  
  4401bd:	or     DWORD PTR [eax],eax
  4401bf:	jmp    0xe9440b9a
  4401c4:	(bad)  
  4401c5:	or     DWORD PTR [eax],eax
  4401c7:	jmp    0xe9440ba2
  4401cc:	(bad)  
  4401cd:	or     DWORD PTR [eax],eax
  4401cf:	jmp    0xe9440baa
  4401d4:	(bad)  
  4401d5:	or     DWORD PTR [eax],eax
  4401d7:	jmp    0xe9440bb2
  4401dc:	(bad)  
  4401dd:	or     DWORD PTR [eax],eax
  4401df:	jmp    0xe9440bba
  4401e4:	(bad)  
  4401e5:	or     DWORD PTR [eax],eax
  4401e7:	jmp    0xe9440bc2
  4401ec:	(bad)  
  4401ed:	or     DWORD PTR [eax],eax
  4401ef:	jmp    0xe9440bca
  4401f4:	(bad)  
  4401f5:	or     DWORD PTR [eax],eax
  4401f7:	jmp    0xe9440bd2
  4401fc:	(bad)  
  4401fd:	or     DWORD PTR [eax],eax
  4401ff:	jmp    0xe9440bda
  440204:	(bad)  
  440205:	or     DWORD PTR [eax],eax
  440207:	jmp    0xe9440be2
  44020c:	(bad)  
  44020d:	or     DWORD PTR [eax],eax
  44020f:	jmp    0xe9440bea
  440214:	(bad)  
  440215:	or     DWORD PTR [eax],eax
  440217:	jmp    0xe9440bf2
  44021c:	add    BYTE PTR [eax],al
  44021e:	(bad)  
  44021f:	or     DWORD PTR [eax],eax
  440221:	jmp    0xe9440bfc
  440226:	(bad)  
  440227:	or     DWORD PTR [eax],eax
  440229:	add    ah,ch
  44022b:	or     al,0x0
  44022d:	add    BYTE PTR [esp+ecx*1+0xcbc0000],bh
  440234:	add    BYTE PTR [eax],al
  440236:	lods   al,BYTE PTR ds:[esi]
  440237:	or     al,0x0
  440239:	add    BYTE PTR [esp+ecx*1+0xcbc0000],ch
  440240:	add    BYTE PTR [eax],al
  440242:	mov    esp,0xac00000c
  440247:	or     al,0x0
  440249:	add    BYTE PTR [esp+ecx*1+0xc7c0000],ch
  440250:	add    BYTE PTR [eax],al
  440252:	jl     0x440260
  440254:	add    BYTE PTR [eax],al
  440256:	ins    BYTE PTR es:[edi],dx
  440257:	or     al,0x0
  440259:	add    BYTE PTR [esp+ecx*1+0x0],ch
  44025d:	add    BYTE PTR [esp+ecx*1+0x0],bh
  440261:	add    BYTE PTR [esp+ecx*1+0x0],bh
  440265:	add    BYTE PTR [esp+ecx*1+0x0],ch
  440269:	add    BYTE PTR [esp+ecx*1+0x0],ch
  44026d:	add    BYTE PTR [esp+ecx*1],bh
  440270:	add    BYTE PTR [eax],al
  440272:	cmp    al,0xc
  440274:	add    BYTE PTR [eax],al
  440276:	sub    al,0xc
  440278:	add    BYTE PTR [eax],al
  44027a:	sub    al,0xc
  44027c:	add    BYTE PTR [eax],al
  44027e:	cmp    al,0xc
  440280:	add    BYTE PTR [eax],al
  440282:	add    BYTE PTR [eax],al
  440284:	cmp    al,0xc
  440286:	add    BYTE PTR [eax],al
  440288:	sub    al,0xc
  44028a:	add    BYTE PTR [eax],al
  44028c:	sub    al,0xc
  44028e:	add    BYTE PTR [eax],al
  440290:	cld    
  440291:	or     eax,DWORD PTR [eax]
  440293:	add    ah,bh
  440295:	or     eax,DWORD PTR [eax]
  440297:	add    ah,ch
  440299:	or     eax,DWORD PTR [eax]
  44029b:	add    ah,ch
  44029d:	or     eax,DWORD PTR [eax]
  44029f:	add    ah,bh
  4402a1:	or     eax,DWORD PTR [eax]
  4402a3:	add    ch,dl
  4402a5:	(bad)  
  4402a6:	cld    
  4402a7:	call   ebp
  4402a9:	(bad)  
  4402aa:	cld    
  4402ab:	call   ebp
  4402ad:	(bad)  
  4402ae:	cld    
  4402af:	call   ebp
  4402b1:	pusha  
  4402b2:	cld    
  4402b3:	call   ebp
  4402b5:	pusha  
  4402b6:	cld    
  4402b7:	call   ebp
  4402b9:	pusha  
  4402ba:	cld    
  4402bb:	call   ebp
  4402bd:	pusha  
  4402be:	cld    
  4402bf:	call   ebp
  4402c1:	pusha  
  4402c2:	cld    
  4402c3:	call   ebp
  4402c5:	pusha  
  4402c6:	cld    
  4402c7:	call   ebp
  4402c9:	pusha  
  4402ca:	cld    
  4402cb:	call   ebp
  4402cd:	pusha  
  4402ce:	cld    
  4402cf:	call   ebp
  4402d1:	pusha  
  4402d2:	cld    
  4402d3:	call   ebp
  4402d5:	pusha  
  4402d6:	cld    
  4402d7:	call   ebp
  4402d9:	pusha  
  4402da:	cld    
  4402db:	call   ebp
  4402dd:	pusha  
  4402de:	cld    
  4402df:	call   ebp
  4402e1:	pusha  
  4402e2:	cld    
  4402e3:	call   ebp
  4402e5:	pusha  
  4402e6:	cld    
  4402e7:	inc    DWORD PTR [eax]
  4402e9:	add    ch,dl
  4402eb:	pusha  
  4402ec:	cld    
  4402ed:	call   ebp
  4402ef:	pusha  
  4402f0:	cld    
  4402f1:	call   ebp
  4402f3:	pusha  
  4402f4:	cld    
  4402f5:	call   ebp
  4402f7:	pusha  
  4402f8:	cld    
  4402f9:	call   ebp
  4402fb:	pusha  
  4402fc:	cld    
  4402fd:	call   ebp
  4402ff:	pusha  
  440300:	cld    
  440301:	call   ebp
  440303:	pusha  
  440304:	cld    
  440305:	call   ebp
  440307:	pusha  
  440308:	cld    
  440309:	call   ebp
  44030b:	pusha  
  44030c:	cld    
  44030d:	call   ebp
  44030f:	pusha  
  440310:	cld    
  440311:	call   ebp
  440313:	pusha  
  440314:	cld    
  440315:	call   ebp
  440317:	pusha  
  440318:	cld    
  440319:	call   ebp
  44031b:	pusha  
  44031c:	cld    
  44031d:	call   ebp
  44031f:	or     edi,esp
  440321:	add    edx,ebp
  440323:	or     edi,esp
  440325:	add    edx,ebp
  440327:	or     edi,esp
  440329:	add    edx,ebp
  44032b:	or     edi,esp
  44032d:	add    edx,ebp
  44032f:	or     edi,esp
  440331:	add    edx,ebp
  440333:	or     edi,esp
  440335:	add    edx,ebp
  440337:	or     edi,esp
  440339:	add    edx,ebp
  44033b:	or     edi,esp
  44033d:	add    edx,ebp
  44033f:	or     edi,esp
  440341:	add    edx,ebp
  440343:	or     edi,esp
  440345:	add    edx,ebp
  440347:	or     edi,esp
  440349:	add    edx,ebp
  44034b:	or     edi,esp
  44034d:	add    eax,DWORD PTR [eax]
  44034f:	add    ch,dl
  440351:	or     edi,esp
  440353:	add    edx,ebp
  440355:	or     edi,esp
  440357:	add    edx,ebp
  440359:	or     edi,esp
  44035b:	add    edx,ebp
  44035d:	or     edi,esp
  44035f:	add    edx,ebp
  440361:	or     edi,esp
  440363:	add    edx,ebp
  440365:	or     edi,esp
  440367:	add    edx,ebp
  440369:	or     edi,esp
  44036b:	add    edx,ebp
  44036d:	or     edi,esp
  44036f:	add    edx,ebp
  440371:	or     edi,esp
  440373:	add    edx,ebp
  440375:	or     edi,esp
  440377:	add    edx,ebp
  440379:	or     edi,esp
  44037b:	add    edx,ebp
  44037d:	or     edi,esp
  44037f:	add    edx,ebp
  440381:	or     edi,esp
  440383:	add    edx,ebp
  440385:	or     edi,esp
  440387:	add    edx,ebp
  440389:	or     edi,esp
  44038b:	add    edx,ebp
  44038d:	or     edi,esp
  44038f:	add    edx,ebp
  440391:	or     edi,esp
  440393:	add    edx,ebp
  440395:	or     edi,esp
  440397:	add    edx,ebp
  440399:	or     DWORD PTR [eax],eax
  44039b:	jmp    0xe9440d76
  4403a0:	(bad)  
  4403a1:	or     DWORD PTR [eax],eax
  4403a3:	jmp    0xe9440d7e
  4403a8:	(bad)  
  4403a9:	or     DWORD PTR [eax],eax
  4403ab:	jmp    0xe9440d86
  4403b0:	(bad)  
  4403b1:	or     DWORD PTR [eax],eax
  4403b3:	jmp    0xa1a03b8
  4403b8:	add    cl,ch
  4403ba:	(bad)  
  4403bb:	or     DWORD PTR [eax],eax
  4403bd:	jmp    0xe9440d98
  4403c2:	(bad)  
  4403c3:	or     DWORD PTR [eax],eax
  4403c5:	jmp    0xe9440da0
  4403ca:	(bad)  
  4403cb:	or     DWORD PTR [eax],eax
  4403cd:	jmp    0xe9440da8
  4403d2:	(bad)  
  4403d3:	or     DWORD PTR [eax],eax
  4403d5:	jmp    0xe9440db0
  4403da:	(bad)  
  4403db:	or     DWORD PTR [eax],eax
  4403dd:	jmp    0xe9440db8
  4403e2:	(bad)  
  4403e3:	or     DWORD PTR [eax],eax
  4403e5:	jmp    0xe9440dc0
  4403ea:	(bad)  
  4403eb:	or     DWORD PTR [eax],eax
  4403ed:	jmp    0xe9440dc8
  4403f2:	(bad)  
  4403f3:	or     DWORD PTR [eax],eax
  4403f5:	jmp    0xe9440dd0
  4403fa:	(bad)  
  4403fb:	or     DWORD PTR [eax],eax
  4403fd:	jmp    0xe9440dd8
  440402:	(bad)  
  440403:	or     DWORD PTR [eax],eax
  440405:	jmp    0xe9440de0
  44040a:	(bad)  
  44040b:	or     DWORD PTR [eax],eax
  44040d:	jmp    0xe9440de8
  440412:	(bad)  
  440413:	or     DWORD PTR [eax],eax
  440415:	add    ah,bh
  440417:	or     BYTE PTR [eax],al
  440419:	add    BYTE PTR [eax],al
  44041b:	add    ah,bh
  44041d:	or     BYTE PTR [eax],al
  44041f:	add    ah,ch
  440421:	or     BYTE PTR [eax],al
  440423:	add    ah,ch
  440425:	or     BYTE PTR [eax],al
  440427:	add    ah,bh
  440429:	or     BYTE PTR [eax],al
  44042b:	add    ah,bh
  44042d:	or     BYTE PTR [eax],al
  44042f:	add    ah,ch
  440431:	or     BYTE PTR [eax],al
  440433:	add    ah,ch
  440435:	or     BYTE PTR [eax],al
  440437:	add    BYTE PTR [eax+ecx*1+0x8bc0000],bh
  44043e:	add    BYTE PTR [eax],al
  440440:	lods   al,BYTE PTR ds:[esi]
  440441:	or     BYTE PTR [eax],al
  440443:	add    BYTE PTR [eax+ecx*1+0x8bc0000],ch
  44044a:	add    BYTE PTR [eax],al
  44044c:	mov    esp,0xac000008
  440451:	or     BYTE PTR [eax],al
  440453:	add    BYTE PTR [eax+ecx*1+0x87c0000],ch
  44045a:	add    BYTE PTR [eax],al
  44045c:	jl     0x440466
  44045e:	add    BYTE PTR [eax],al
  440460:	ins    BYTE PTR es:[edi],dx
  440461:	or     BYTE PTR [eax],al
  440463:	add    BYTE PTR [eax+ecx*1+0x0],ch
  440467:	add    BYTE PTR [eax+ecx*1+0x0],bh
  44046b:	add    BYTE PTR [eax+ecx*1+0x0],bh
  44046f:	add    BYTE PTR [eax+ecx*1+0x0],ch
  440473:	add    BYTE PTR [eax+ecx*1+0x0],ch
  440477:	add    BYTE PTR [eax+ecx*1],bh
  44047a:	add    BYTE PTR [eax],al
  44047c:	cmp    al,0x8
  44047e:	add    BYTE PTR [eax],al
  440480:	add    BYTE PTR [eax],al
  440482:	sub    al,0x8
  440484:	add    BYTE PTR [eax],al
  440486:	sub    al,0x8
  440488:	add    BYTE PTR [eax],al
  44048a:	cmp    al,0x8
  44048c:	add    BYTE PTR [eax],al
  44048e:	cmp    al,0x8
  440490:	add    BYTE PTR [eax],al
  440492:	aad    0x62
  440494:	cld    
  440495:	call   ebp
  440497:	(bad)  
  440498:	cld    
  440499:	call   ebp
  44049b:	(bad)  
  44049c:	cld    
  44049d:	call   ebp
  44049f:	(bad)  
  4404a0:	cld    
  4404a1:	call   ebp
  4404a3:	(bad)  
  4404a4:	cld    
  4404a5:	call   ebp
  4404a7:	(bad)  
  4404a8:	cld    
  4404a9:	call   ebp
  4404ab:	(bad)  
  4404ac:	cld    
  4404ad:	call   ebp
  4404af:	(bad)  
  4404b0:	cld    
  4404b1:	call   ebp
  4404b3:	(bad)  
  4404b4:	cld    
  4404b5:	call   ebp
  4404b7:	(bad)  
  4404b8:	cld    
  4404b9:	call   ebp
  4404bb:	pusha  
  4404bc:	cld    
  4404bd:	call   ebp
  4404bf:	pusha  
  4404c0:	cld    
  4404c1:	call   ebp
  4404c3:	pusha  
  4404c4:	cld    
  4404c5:	call   ebp
  4404c7:	pusha  
  4404c8:	cld    
  4404c9:	call   ebp
  4404cb:	pusha  
  4404cc:	cld    
  4404cd:	call   ebp
  4404cf:	pusha  
  4404d0:	cld    
  4404d1:	call   ebp
  4404d3:	pusha  
  4404d4:	cld    
  4404d5:	call   ebp
  4404d7:	pusha  
  4404d8:	cld    
  4404d9:	call   ebp
  4404db:	pusha  
  4404dc:	cld    
  4404dd:	call   ebp
  4404df:	pusha  
  4404e0:	cld    
  4404e1:	call   ebp
  4404e3:	pusha  
  4404e4:	cld    
  4404e5:	inc    DWORD PTR [eax]
  4404e7:	add    ch,dl
  4404e9:	pusha  
  4404ea:	cld    
  4404eb:	call   ebp
  4404ed:	pusha  
  4404ee:	cld    
  4404ef:	call   ebp
  4404f1:	pusha  
  4404f2:	cld    
  4404f3:	call   ebp
  4404f5:	pusha  
  4404f6:	cld    
  4404f7:	call   ebp
  4404f9:	pusha  
  4404fa:	cld    
  4404fb:	call   ebp
  4404fd:	pusha  
  4404fe:	cld    
  4404ff:	call   ebp
  440501:	pusha  
  440502:	cld    
  440503:	call   ebp
  440505:	pusha  
  440506:	cld    
  440507:	call   ebp
  440509:	pusha  
  44050a:	cld    
  44050b:	call   ebp
  44050d:	or     edi,esp
  44050f:	add    edx,ebp
  440511:	or     edi,esp
  440513:	add    edx,ebp
  440515:	or     edi,esp
  440517:	add    edx,ebp
  440519:	or     edi,esp
  44051b:	add    edx,ebp
  44051d:	or     edi,esp
  44051f:	add    edx,ebp
  440521:	or     edi,esp
  440523:	add    edx,ebp
  440525:	or     edi,esp
  440527:	add    edx,ebp
  440529:	or     edi,esp
  44052b:	add    edx,ebp
  44052d:	or     edi,esp
  44052f:	add    edx,ebp
  440531:	or     edi,esp
  440533:	add    edx,ebp
  440535:	or     edi,esp
  440537:	add    edx,ebp
  440539:	or     edi,esp
  44053b:	add    edx,ebp
  44053d:	or     edi,esp
  44053f:	add    edx,ebp
  440541:	or     edi,esp
  440543:	add    edx,ebp
  440545:	or     edi,esp
  440547:	add    edx,ebp
  440549:	or     edi,esp
  44054b:	add    eax,DWORD PTR [eax]
  44054d:	add    ch,dl
  44054f:	or     edi,esp
  440551:	add    edx,ebp
  440553:	or     edi,esp
  440555:	add    edx,ebp
  440557:	or     edi,esp
  440559:	add    edx,ebp
  44055b:	or     edi,esp
  44055d:	add    edx,ebp
  44055f:	or     edi,esp
  440561:	add    edx,ebp
  440563:	or     edi,esp
  440565:	add    edx,ebp
  440567:	or     edi,esp
  440569:	add    edx,ebp
  44056b:	or     edi,esp
  44056d:	add    edx,ebp
  44056f:	or     edi,esp
  440571:	add    edx,ebp
  440573:	or     edi,esp
  440575:	add    edx,ebp
  440577:	or     edi,esp
  440579:	add    edx,ebp
  44057b:	or     edi,esp
  44057d:	add    edx,ebp
  44057f:	or     edi,esp
  440581:	add    edx,ebp
  440583:	or     edi,esp
  440585:	add    edx,ebp
  440587:	or     DWORD PTR [eax],eax
  440589:	jmp    0xe9440f64
  44058e:	(bad)  
  44058f:	or     DWORD PTR [eax],eax
  440591:	jmp    0xe9440f6c
  440596:	(bad)  
  440597:	or     DWORD PTR [eax],eax
  440599:	jmp    0xe9440f74
  44059e:	(bad)  
  44059f:	or     DWORD PTR [eax],eax
  4405a1:	jmp    0xe9440f7c
  4405a6:	(bad)  
  4405a7:	or     DWORD PTR [eax],eax
  4405a9:	jmp    0xe9440f84
  4405ae:	(bad)  
  4405af:	or     DWORD PTR [eax],eax
  4405b1:	jmp    0xa1a05b6
  4405b6:	add    cl,ch
  4405b8:	(bad)  
  4405b9:	or     DWORD PTR [eax],eax
  4405bb:	jmp    0xe9440f96
  4405c0:	(bad)  
  4405c1:	or     DWORD PTR [eax],eax
  4405c3:	jmp    0xe9440f9e
  4405c8:	(bad)  
  4405c9:	or     DWORD PTR [eax],eax
  4405cb:	jmp    0xe9440fa6
  4405d0:	(bad)  
  4405d1:	or     DWORD PTR [eax],eax
  4405d3:	jmp    0xe9440fae
  4405d8:	(bad)  
  4405d9:	or     DWORD PTR [eax],eax
  4405db:	jmp    0xe9440fb6
  4405e0:	(bad)  
  4405e1:	or     DWORD PTR [eax],eax
  4405e3:	jmp    0xe9440fbe
  4405e8:	(bad)  
  4405e9:	or     DWORD PTR [eax],eax
  4405eb:	jmp    0xe9440fc6
  4405f0:	(bad)  
  4405f1:	or     DWORD PTR [eax],eax
  4405f3:	jmp    0xe9440fce
  4405f8:	(bad)  
  4405f9:	or     DWORD PTR [eax],eax
  4405fb:	jmp    0xe9440fd6
  440600:	(bad)  
  440601:	or     DWORD PTR [eax],eax
  440603:	add    BYTE PTR [ecx*1+0xd2c0000],bh
  44060a:	add    BYTE PTR [eax],al
  44060c:	sub    al,0xd
  44060e:	add    BYTE PTR [eax],al
  440610:	cmp    al,0xd
  440612:	add    BYTE PTR [eax],al
  440614:	cmp    al,0xd
  440616:	add    BYTE PTR [eax],al
  440618:	add    BYTE PTR [eax],al
  44061a:	sub    al,0xd
  44061c:	add    BYTE PTR [eax],al
  44061e:	sub    al,0xd
  440620:	add    BYTE PTR [eax],al
  440622:	cld    
  440623:	or     al,0x0
  440625:	add    ah,bh
  440627:	or     al,0x0
  440629:	add    ah,ch
  44062b:	or     al,0x0
  44062d:	add    ah,ch
  44062f:	or     al,0x0
  440631:	add    ah,bh
  440633:	or     al,0x0
  440635:	add    ah,bh
  440637:	or     al,0x0
  440639:	add    ah,ch
  44063b:	or     al,0x0
  44063d:	add    ah,ch
  44063f:	or     al,0x0
  440641:	add    BYTE PTR [esp+ecx*1+0xcbc0000],bh
  440648:	add    BYTE PTR [eax],al
  44064a:	lods   al,BYTE PTR ds:[esi]
  44064b:	or     al,0x0
  44064d:	add    BYTE PTR [esp+ecx*1+0xcbc0000],ch
  440654:	add    BYTE PTR [eax],al
  440656:	mov    esp,0xac00000c
  44065b:	or     al,0x0
  44065d:	add    BYTE PTR [esp+ecx*1+0xc7c0000],ch
  440664:	add    BYTE PTR [eax],al
  440666:	jl     0x440674
  440668:	add    BYTE PTR [eax],al
  44066a:	ins    BYTE PTR es:[edi],dx
  44066b:	or     al,0x0
  44066d:	add    BYTE PTR [esp+ecx*1+0x0],ch
  440671:	add    BYTE PTR [esp+ecx*1+0x0],bh
  440675:	add    BYTE PTR [esp+ecx*1+0x0],bh
  440679:	add    BYTE PTR [esp+ecx*1+0x0],ch
  44067d:	add    BYTE PTR [eax],al
  44067f:	add    ch,dl
  440681:	(bad)  
  440682:	cld    
  440683:	call   ebp
  440685:	(bad)  
  440686:	cld    
  440687:	call   ebp
  440689:	(bad)  
  44068a:	cld    
  44068b:	call   ebp
  44068d:	(bad)  
  44068e:	cld    
  44068f:	call   ebp
  440691:	(bad)  
  440692:	cld    
  440693:	call   ebp
  440695:	(bad)  
  440696:	cld    
  440697:	call   ebp
  440699:	(bad)  
  44069a:	cld    
  44069b:	call   ebp
  44069d:	(bad)  
  44069e:	cld    
  44069f:	call   ebp
  4406a1:	(bad)  
  4406a2:	cld    
  4406a3:	call   ebp
  4406a5:	(bad)  
  4406a6:	cld    
  4406a7:	call   ebp
  4406a9:	(bad)  
  4406aa:	cld    
  4406ab:	call   ebp
  4406ad:	(bad)  
  4406ae:	cld    
  4406af:	call   ebp
  4406b1:	(bad)  
  4406b2:	cld    
  4406b3:	call   ebp
  4406b5:	(bad)  
  4406b6:	cld    
  4406b7:	call   ebp
  4406b9:	(bad)  
  4406ba:	cld    
  4406bb:	call   ebp
  4406bd:	(bad)  
  4406be:	cld    
  4406bf:	call   ebp
  4406c1:	(bad)  
  4406c2:	cld    
  4406c3:	call   ebp
  4406c5:	pusha  
  4406c6:	cld    
  4406c7:	call   ebp
  4406c9:	pusha  
  4406ca:	cld    
  4406cb:	call   ebp
  4406cd:	pusha  
  4406ce:	cld    
  4406cf:	call   ebp
  4406d1:	pusha  
  4406d2:	cld    
  4406d3:	call   ebp
  4406d5:	pusha  
  4406d6:	cld    
  4406d7:	call   ebp
  4406d9:	pusha  
  4406da:	cld    
  4406db:	call   ebp
  4406dd:	pusha  
  4406de:	cld    
  4406df:	call   ebp
  4406e1:	pusha  
  4406e2:	cld    
  4406e3:	inc    DWORD PTR [eax]
  4406e5:	add    ch,dl
  4406e7:	pusha  
  4406e8:	cld    
  4406e9:	call   ebp
  4406eb:	pusha  
  4406ec:	cld    
  4406ed:	call   ebp
  4406ef:	pusha  
  4406f0:	cld    
  4406f1:	call   ebp
  4406f3:	pusha  
  4406f4:	cld    
  4406f5:	call   ebp
  4406f7:	pusha  
  4406f8:	cld    
  4406f9:	call   ebp
  4406fb:	or     edi,esp
  4406fd:	add    edx,ebp
  4406ff:	or     edi,esp
  440701:	add    edx,ebp
  440703:	or     edi,esp
  440705:	add    edx,ebp
  440707:	or     edi,esp
  440709:	add    edx,ebp
  44070b:	or     edi,esp
  44070d:	add    edx,ebp
  44070f:	or     edi,esp
  440711:	add    edx,ebp
  440713:	or     edi,esp
  440715:	add    edx,ebp
  440717:	or     edi,esp
  440719:	add    edx,ebp
  44071b:	or     edi,esp
  44071d:	add    edx,ebp
  44071f:	or     edi,esp
  440721:	add    edx,ebp
  440723:	or     edi,esp
  440725:	add    edx,ebp
  440727:	or     edi,esp
  440729:	add    edx,ebp
  44072b:	or     edi,esp
  44072d:	add    edx,ebp
  44072f:	or     edi,esp
  440731:	add    edx,ebp
  440733:	or     edi,esp
  440735:	add    edx,ebp
  440737:	or     edi,esp
  440739:	add    edx,ebp
  44073b:	or     edi,esp
  44073d:	add    edx,ebp
  44073f:	or     edi,esp
  440741:	add    edx,ebp
  440743:	or     edi,esp
  440745:	add    edx,ebp
  440747:	or     edi,esp
  440749:	add    eax,DWORD PTR [eax]
  44074b:	add    ch,dl
  44074d:	or     edi,esp
  44074f:	add    edx,ebp
  440751:	or     edi,esp
  440753:	add    edx,ebp
  440755:	or     edi,esp
  440757:	add    edx,ebp
  440759:	or     edi,esp
  44075b:	add    edx,ebp
  44075d:	or     edi,esp
  44075f:	add    edx,ebp
  440761:	or     edi,esp
  440763:	add    edx,ebp
  440765:	or     edi,esp
  440767:	add    edx,ebp
  440769:	or     edi,esp
  44076b:	add    edx,ebp
  44076d:	or     edi,esp
  44076f:	add    edx,ebp
  440771:	or     edi,esp
  440773:	add    edx,ebp
  440775:	or     DWORD PTR [eax],eax
  440777:	jmp    0xe9441152
  44077c:	(bad)  
  44077d:	or     DWORD PTR [eax],eax
  44077f:	jmp    0xe944115a
  440784:	(bad)  
  440785:	or     DWORD PTR [eax],eax
  440787:	jmp    0xe9441162
  44078c:	(bad)  
  44078d:	or     DWORD PTR [eax],eax
  44078f:	jmp    0xe944116a
  440794:	(bad)  
  440795:	or     DWORD PTR [eax],eax
  440797:	jmp    0xe9441172
  44079c:	(bad)  
  44079d:	or     DWORD PTR [eax],eax
  44079f:	jmp    0xe944117a
  4407a4:	(bad)  
  4407a5:	or     DWORD PTR [eax],eax
  4407a7:	jmp    0xe9441182
  4407ac:	(bad)  
  4407ad:	or     DWORD PTR [eax],eax
  4407af:	jmp    0xa1a07b4
  4407b4:	add    cl,ch
  4407b6:	(bad)  
  4407b7:	or     DWORD PTR [eax],eax
  4407b9:	jmp    0xe9441194
  4407be:	(bad)  
  4407bf:	or     DWORD PTR [eax],eax
  4407c1:	jmp    0xe944119c
  4407c6:	(bad)  
  4407c7:	or     DWORD PTR [eax],eax
  4407c9:	jmp    0xe94411a4
  4407ce:	(bad)  
  4407cf:	or     DWORD PTR [eax],eax
  4407d1:	jmp    0xe94411ac
  4407d6:	(bad)  
  4407d7:	or     DWORD PTR [eax],eax
  4407d9:	jmp    0xe94411b4
  4407de:	(bad)  
  4407df:	or     DWORD PTR [eax],eax
  4407e1:	jmp    0xe94411bc
  4407e6:	(bad)  
  4407e7:	or     DWORD PTR [eax],eax
  4407e9:	jmp    0xe94411c4
  4407ee:	(bad)  
  4407ef:	or     DWORD PTR [eax],eax
  4407f1:	add    BYTE PTR [ecx+ecx*1+0x0],ch
  4407f5:	add    BYTE PTR [ecx+ecx*1+0x0],ch
  4407f9:	add    BYTE PTR [ecx+ecx*1+0x0],bh
  4407fd:	add    BYTE PTR [ecx+ecx*1+0x0],bh
  440801:	add    BYTE PTR [ecx+ecx*1+0x0],ch
  440805:	add    BYTE PTR [ecx+ecx*1+0x0],ch
  440809:	add    BYTE PTR [ecx+ecx*1],bh
  44080c:	add    BYTE PTR [eax],al
  44080e:	cmp    al,0x9
  440810:	add    BYTE PTR [eax],al
  440812:	sub    al,0x9
  440814:	add    BYTE PTR [eax],al
  440816:	add    BYTE PTR [eax],al
  440818:	sub    al,0x9
  44081a:	add    BYTE PTR [eax],al
  44081c:	cmp    al,0x9
  44081e:	add    BYTE PTR [eax],al
  440820:	cmp    al,0x9
  440822:	add    BYTE PTR [eax],al
  440824:	sub    al,0x9
  440826:	add    BYTE PTR [eax],al
  440828:	sub    al,0x9
  44082a:	add    BYTE PTR [eax],al
  44082c:	cld    
  44082d:	or     BYTE PTR [eax],al
  44082f:	add    ah,bh
  440831:	or     BYTE PTR [eax],al
  440833:	add    ah,ch
  440835:	or     BYTE PTR [eax],al
  440837:	add    ah,ch
  440839:	or     BYTE PTR [eax],al
  44083b:	add    ah,bh
  44083d:	or     BYTE PTR [eax],al
  44083f:	add    ah,bh
  440841:	or     BYTE PTR [eax],al
  440843:	add    ah,ch
  440845:	or     BYTE PTR [eax],al
  440847:	add    ah,ch
  440849:	or     BYTE PTR [eax],al
  44084b:	add    BYTE PTR [eax+ecx*1+0x8bc0000],bh
  440852:	add    BYTE PTR [eax],al
  440854:	lods   al,BYTE PTR ds:[esi]
  440855:	or     BYTE PTR [eax],al
  440857:	add    BYTE PTR [eax+ecx*1+0x8bc0000],ch
  44085e:	add    BYTE PTR [eax],al
  440860:	mov    esp,0xac000008
  440865:	or     BYTE PTR [eax],al
  440867:	add    BYTE PTR [eax+ecx*1+0x62d50000],ch
  44086e:	cld    
  44086f:	call   ebp
  440871:	(bad)  
  440872:	cld    
  440873:	call   ebp
  440875:	(bad)  
  440876:	cld    
  440877:	call   ebp
  440879:	(bad)  
  44087a:	cld    
  44087b:	inc    DWORD PTR [eax]
  44087d:	add    ch,dl
  44087f:	(bad)  
  440880:	cld    
  440881:	call   ebp
  440883:	(bad)  
  440884:	cld    
  440885:	call   ebp
  440887:	(bad)  
  440888:	cld    
  440889:	call   ebp
  44088b:	(bad)  
  44088c:	cld    
  44088d:	call   ebp
  44088f:	(bad)  
  440890:	cld    
  440891:	call   ebp
  440893:	(bad)  
  440894:	cld    
  440895:	call   ebp
  440897:	(bad)  
  440898:	cld    
  440899:	call   ebp
  44089b:	(bad)  
  44089c:	cld    
  44089d:	call   ebp
  44089f:	(bad)  
  4408a0:	cld    
  4408a1:	call   ebp
  4408a3:	(bad)  
  4408a4:	cld    
  4408a5:	call   ebp
  4408a7:	(bad)  
  4408a8:	cld    
  4408a9:	call   ebp
  4408ab:	(bad)  
  4408ac:	cld    
  4408ad:	call   ebp
  4408af:	(bad)  
  4408b0:	cld    
  4408b1:	call   ebp
  4408b3:	(bad)  
  4408b4:	cld    
  4408b5:	call   ebp
  4408b7:	(bad)  
  4408b8:	cld    
  4408b9:	call   ebp
  4408bb:	(bad)  
  4408bc:	cld    
  4408bd:	call   ebp
  4408bf:	(bad)  
  4408c0:	cld    
  4408c1:	call   ebp
  4408c3:	(bad)  
  4408c4:	cld    
  4408c5:	call   ebp
  4408c7:	(bad)  
  4408c8:	cld    
  4408c9:	call   ebp
  4408cb:	(bad)  
  4408cc:	cld    
  4408cd:	call   ebp
  4408cf:	pusha  
  4408d0:	cld    
  4408d1:	call   ebp
  4408d3:	pusha  
  4408d4:	cld    
  4408d5:	call   ebp
  4408d7:	pusha  
  4408d8:	cld    
  4408d9:	call   ebp
  4408db:	pusha  
  4408dc:	cld    
  4408dd:	call   ebp
  4408df:	pusha  
  4408e0:	cld    
  4408e1:	inc    DWORD PTR [eax]
  4408e3:	add    ch,dl
  4408e5:	pusha  
  4408e6:	cld    
  4408e7:	call   ebp
  4408e9:	or     edi,esp
  4408eb:	add    edx,ebp
  4408ed:	or     edi,esp
  4408ef:	add    edx,ebp
  4408f1:	or     edi,esp
  4408f3:	add    edx,ebp
  4408f5:	or     edi,esp
  4408f7:	add    edx,ebp
  4408f9:	or     edi,esp
  4408fb:	add    edx,ebp
  4408fd:	or     edi,esp
  4408ff:	add    edx,ebp
  440901:	or     edi,esp
  440903:	add    edx,ebp
  440905:	or     edi,esp
  440907:	add    edx,ebp
  440909:	or     edi,esp
  44090b:	add    edx,ebp
  44090d:	or     edi,esp
  44090f:	add    edx,ebp
  440911:	or     edi,esp
  440913:	add    edx,ebp
  440915:	or     edi,esp
  440917:	add    edx,ebp
  440919:	or     edi,esp
  44091b:	add    edx,ebp
  44091d:	or     edi,esp
  44091f:	add    edx,ebp
  440921:	or     edi,esp
  440923:	add    edx,ebp
  440925:	or     edi,esp
  440927:	add    edx,ebp
  440929:	or     edi,esp
  44092b:	add    edx,ebp
  44092d:	or     edi,esp
  44092f:	add    edx,ebp
  440931:	or     edi,esp
  440933:	add    edx,ebp
  440935:	or     edi,esp
  440937:	add    edx,ebp
  440939:	or     edi,esp
  44093b:	add    edx,ebp
  44093d:	or     edi,esp
  44093f:	add    edx,ebp
  440941:	or     edi,esp
  440943:	add    edx,ebp
  440945:	or     edi,esp
  440947:	add    eax,DWORD PTR [eax]
  440949:	add    ch,dl
  44094b:	or     edi,esp
  44094d:	add    edx,ebp
  44094f:	or     edi,esp
  440951:	add    edx,ebp
  440953:	or     edi,esp
  440955:	add    edx,ebp
  440957:	or     edi,esp
  440959:	add    edx,ebp
  44095b:	or     edi,esp
  44095d:	add    edx,ebp
  44095f:	or     edi,esp
  440961:	add    edx,ebp
  440963:	or     DWORD PTR [eax],eax
  440965:	jmp    0xe9441340
  44096a:	(bad)  
  44096b:	or     DWORD PTR [eax],eax
  44096d:	jmp    0xe9441348
  440972:	(bad)  
  440973:	or     DWORD PTR [eax],eax
  440975:	jmp    0xe9441350
  44097a:	(bad)  
  44097b:	or     DWORD PTR [eax],eax
  44097d:	jmp    0xe9441358
  440982:	(bad)  
  440983:	or     DWORD PTR [eax],eax
  440985:	jmp    0xe9441360
  44098a:	(bad)  
  44098b:	or     DWORD PTR [eax],eax
  44098d:	jmp    0xe9441368
  440992:	(bad)  
  440993:	or     DWORD PTR [eax],eax
  440995:	jmp    0xe9441370
  44099a:	(bad)  
  44099b:	or     DWORD PTR [eax],eax
  44099d:	jmp    0xe9441378
  4409a2:	(bad)  
  4409a3:	or     DWORD PTR [eax],eax
  4409a5:	jmp    0xe9441380
  4409aa:	(bad)  
  4409ab:	or     DWORD PTR [eax],eax
  4409ad:	jmp    0xa1a09b2
  4409b2:	add    cl,ch
  4409b4:	(bad)  
  4409b5:	or     DWORD PTR [eax],eax
  4409b7:	jmp    0xe9441392
  4409bc:	(bad)  
  4409bd:	or     DWORD PTR [eax],eax
  4409bf:	jmp    0xe944139a
  4409c4:	(bad)  
  4409c5:	or     DWORD PTR [eax],eax
  4409c7:	jmp    0xe94413a2
  4409cc:	(bad)  
  4409cd:	or     DWORD PTR [eax],eax
  4409cf:	jmp    0xe94413aa
  4409d4:	(bad)  
  4409d5:	or     DWORD PTR [eax],eax
  4409d7:	jmp    0xe94413b2
  4409dc:	(bad)  
  4409dd:	or     DWORD PTR [eax],eax
  4409df:	add    BYTE PTR [ebp+ecx*1+0xdbc0000],ch
  4409e6:	add    BYTE PTR [eax],al
  4409e8:	mov    esp,0xac00000d
  4409ed:	or     eax,0xdac0000
  4409f2:	add    BYTE PTR [eax],al
  4409f4:	jl     0x440a03
  4409f6:	add    BYTE PTR [eax],al
  4409f8:	jl     0x440a07
  4409fa:	add    BYTE PTR [eax],al
  4409fc:	ins    BYTE PTR es:[edi],dx
  4409fd:	or     eax,0xd6c0000
  440a02:	add    BYTE PTR [eax],al
  440a04:	jl     0x440a13
  440a06:	add    BYTE PTR [eax],al
  440a08:	jl     0x440a17
  440a0a:	add    BYTE PTR [eax],al
  440a0c:	ins    BYTE PTR es:[edi],dx
  440a0d:	or     eax,0xd6c0000
  440a12:	add    BYTE PTR [eax],al
  440a14:	add    BYTE PTR [eax],al
  440a16:	cmp    al,0xd
  440a18:	add    BYTE PTR [eax],al
  440a1a:	cmp    al,0xd
  440a1c:	add    BYTE PTR [eax],al
  440a1e:	sub    al,0xd
  440a20:	add    BYTE PTR [eax],al
  440a22:	sub    al,0xd
  440a24:	add    BYTE PTR [eax],al
  440a26:	cmp    al,0xd
  440a28:	add    BYTE PTR [eax],al
  440a2a:	cmp    al,0xd
  440a2c:	add    BYTE PTR [eax],al
  440a2e:	sub    al,0xd
  440a30:	add    BYTE PTR [eax],al
  440a32:	sub    al,0xd
  440a34:	add    BYTE PTR [eax],al
  440a36:	cld    
  440a37:	or     al,0x0
  440a39:	add    ah,bh
  440a3b:	or     al,0x0
  440a3d:	add    ah,ch
  440a3f:	or     al,0x0
  440a41:	add    ah,ch
  440a43:	or     al,0x0
  440a45:	add    ah,bh
  440a47:	or     al,0x0
  440a49:	add    ah,bh
  440a4b:	or     al,0x0
  440a4d:	add    ah,ch
  440a4f:	or     al,0x0
  440a51:	add    ah,ch
  440a53:	or     al,0x0
  440a55:	add    BYTE PTR [esp+ecx*1+0x32d50000],bh
  440a5c:	cld    
  440a5d:	call   ebp
  440a5f:	xor    bh,ah
  440a61:	call   ebp
  440a63:	xor    bh,ah
  440a65:	call   ebp
  440a67:	xor    bh,ah
  440a69:	call   ebp
  440a6b:	xor    bh,ah
  440a6d:	call   ebp
  440a6f:	xor    bh,ah
  440a71:	call   ebp
  440a73:	xor    bh,ah
  440a75:	call   ebp
  440a77:	xor    bh,ah
  440a79:	inc    DWORD PTR [eax]
  440a7b:	add    ch,dl
  440a7d:	xor    bh,ah
  440a7f:	call   ebp
  440a81:	xor    bh,ah
  440a83:	call   ebp
  440a85:	xor    bh,ah
  440a87:	call   ebp
  440a89:	xor    bh,ah
  440a8b:	call   ebp
  440a8d:	xor    bh,ah
  440a8f:	call   ebp
  440a91:	xor    bh,ah
  440a93:	call   ebp
  440a95:	xor    bh,ah
  440a97:	call   ebp
  440a99:	xor    bh,ah
  440a9b:	call   ebp
  440a9d:	xor    bh,ah
  440a9f:	call   ebp
  440aa1:	xor    bh,ah
  440aa3:	call   ebp
  440aa5:	xor    bh,ah
  440aa7:	call   ebp
  440aa9:	xor    bh,ah
  440aab:	call   ebp
  440aad:	xor    bh,ah
  440aaf:	call   ebp
  440ab1:	xor    bh,ah
  440ab3:	call   ebp
  440ab5:	xor    bh,ah
  440ab7:	call   ebp
  440ab9:	xor    bh,ah
  440abb:	call   ebp
  440abd:	xor    bh,ah
  440abf:	call   ebp
  440ac1:	xor    bh,ah
  440ac3:	call   ebp
  440ac5:	xor    bh,ah
  440ac7:	call   ebp
  440ac9:	xor    bh,ah
  440acb:	call   ebp
  440acd:	xor    bh,ah
  440acf:	call   ebp
  440ad1:	xor    bh,ah
  440ad3:	call   ebp
  440ad5:	or     edi,esp
  440ad7:	add    edx,ebp
  440ad9:	or     edi,esp
  440adb:	add    edx,ebp
  440add:	or     edi,esp
  440adf:	add    eax,DWORD PTR [eax]
  440ae1:	add    ch,dl
  440ae3:	or     edi,esp
  440ae5:	add    edx,ebp
  440ae7:	or     edi,esp
  440ae9:	add    edx,ebp
  440aeb:	or     edi,esp
  440aed:	add    edx,ebp
  440aef:	or     edi,esp
  440af1:	add    edx,ebp
  440af3:	or     edi,esp
  440af5:	add    edx,ebp
  440af7:	or     edi,esp
  440af9:	add    edx,ebp
  440afb:	or     edi,esp
  440afd:	add    edx,ebp
  440aff:	or     edi,esp
  440b01:	add    edx,ebp
  440b03:	or     edi,esp
  440b05:	add    edx,ebp
  440b07:	or     edi,esp
  440b09:	add    edx,ebp
  440b0b:	or     edi,esp
  440b0d:	add    edx,ebp
  440b0f:	or     edi,esp
  440b11:	add    edx,ebp
  440b13:	or     edi,esp
  440b15:	add    edx,ebp
  440b17:	or     edi,esp
  440b19:	add    edx,ebp
  440b1b:	or     edi,esp
  440b1d:	add    edx,ebp
  440b1f:	or     edi,esp
  440b21:	add    edx,ebp
  440b23:	or     edi,esp
  440b25:	add    edx,ebp
  440b27:	or     edi,esp
  440b29:	add    edx,ebp
  440b2b:	or     edi,esp
  440b2d:	add    edx,ebp
  440b2f:	or     edi,esp
  440b31:	add    edx,ebp
  440b33:	or     edi,esp
  440b35:	add    edx,ebp
  440b37:	or     edi,esp
  440b39:	add    edx,ebp
  440b3b:	or     edi,esp
  440b3d:	add    edx,ebp
  440b3f:	or     DWORD PTR [edx-0x671e1c89],eax
  440b45:	(bad)  
  440b46:	add    BYTE PTR [eax],al
  440b48:	dec    esp
  440b49:	dec    ebx
  440b4a:	sbb    ebx,DWORD PTR [edi+0x6f]
  440b4d:	outs   dx,DWORD PTR ds:[esi]
  440b4e:	ja     0x440b4b
  440b50:	and    dl,BYTE PTR [ecx]
  440b52:	add    dh,bl
  440b54:	mov    eax,0x957680ab
  440b59:	rcr    edi,cl
  440b5b:	mov    al,0x88
  440b5d:	mov    bl,0x3a
  440b5f:	repnz scas eax,DWORD PTR es:[edi]
  440b61:	mov    bh,0x11
  440b63:	sbb    bh,BYTE PTR [edi+0x31]
  440b66:	add    BYTE PTR [edi-0x1a],bh
  440b69:	ficom  WORD PTR [edi+0x4d]
  440b6c:	mov    ecx,0xc563280b
  440b71:	pop    ebp
  440b72:	mov    al,0x11
  440b74:	sbb    DWORD PTR [esi],esi
  440b76:	mov    dl,0x13
  440b78:	add    BYTE PTR [edi],dh
  440b7a:	xor    BYTE PTR [edx+edi*4-0x2eab4a5c],bh
  440b81:	cmp    dl,BYTE PTR [ebx]
  440b83:	lea    ebp,[ebx]
  440b85:	loope  0x440b31
  440b87:	clc    
  440b88:	addr16 and ebx,edi
  440b8b:	fidiv  DWORD PTR [ecx-0x41]
  440b8e:	mov    ah,BYTE PTR [eax]
  440b90:	xchg   cl,ah
  440b92:	add    DWORD PTR [esi-0xc254cc8],0x6b
  440b99:	mov    ebx,0x61787775
  440b9e:	sub    esp,edx
  440ba0:	scas   al,BYTE PTR es:[edi]
  440ba1:	mov    cl,BYTE PTR [edi-0x5a]
  440ba4:	ret    0xd91e
  440ba7:	in     al,dx
  440ba8:	shl    BYTE PTR [ecx+0xc907],0x5a
  440baf:	outs   dx,DWORD PTR ds:[esi]
  440bb0:	clc    
  440bb1:	inc    ebp
  440bb2:	loope  0x440c1a
  440bb4:	repnz xor ecx,DWORD PTR [ebp-0x18]
  440bb8:	scas   eax,DWORD PTR es:[edi]
  440bb9:	pop    es
  440bba:	xchg   esp,eax
  440bbb:	imul   ebp,DWORD PTR [eax-0x70487d43],0xe9bb831d
  440bc5:	loope  0x440b86
  440bc7:	xor    BYTE PTR [edi],bh
  440bc9:	cld    
  440bca:	dec    edx
  440bcb:	push   esi
  440bcc:	in     al,dx
  440bcd:	add    al,cl
  440bcf:	jl     0x440c3d
  440bd1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  440bd3:	ss (bad) 
  440bd5:	into   
  440bd6:	lods   al,BYTE PTR ds:[esi]
  440bd7:	dec    ebx
  440bd8:	jmp    0x4dc8:0x1b939fe9
  440bdf:	sub    al,0x51
  440be1:	outs   dx,BYTE PTR ds:[esi]
  440be2:	and    ecx,DWORD PTR [edx-0x69]
  440be5:	sub    BYTE PTR [ebp+0x52],dh
  440be8:	ds add edx,esi
  440beb:	and    al,0x79
  440bed:	sbb    ebx,esp
  440bef:	mov    ah,BYTE PTR [edi]
  440bf1:	inc    esi
  440bf2:	sub    al,0x5e
  440bf4:	pop    ebx
  440bf5:	mov    esp,0xa35c8788
  440bfa:	mov    WORD PTR [esi+ebx*4-0x34],?
  440bfe:	xor    BYTE PTR [edx-0x43],dh
  440c01:	aas    
  440c02:	jnp    0x440bb8
  440c04:	mov    cl,0xe1
  440c06:	mov    bh,0x13
  440c08:	stc    
  440c09:	repz cmp al,0x43
  440c0c:	je     0x440b9c
  440c0e:	mov    ds:0x57cb9f,al
  440c13:	add    ch,cl
  440c15:	leave  
  440c16:	mov    fs,WORD PTR [eax+0x41313087]
  440c1c:	dec    ebp
  440c1d:	pop    edi
  440c1e:	hlt    
  440c1f:	jge    0x440bbf
  440c21:	pop    ebx
  440c22:	inc    ecx
  440c23:	inc    edi
  440c24:	int3   
  440c25:	xor    eax,0x3dc86f90
  440c2a:	or     eax,0x123a8543
  440c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c30:	in     eax,0x7b
  440c32:	xor    esi,ebx
  440c34:	sbb    ah,al
  440c36:	lahf   
  440c37:	data16 jne 0x440bd8
  440c3a:	xchg   edx,eax
  440c3b:	or     eax,0xea9c7cd5
  440c40:	push   edi
  440c41:	push   0xffffffab
  440c43:	ds aad 0xa5
  440c46:	enter  0xd5bc,0x82
  440c4a:	or     DWORD PTR [esi+edi*1-0x71],eax
  440c4e:	fmul   DWORD PTR [edi+0x5f0e433b]
  440c54:	jns    0x440bef
  440c56:	rcl    DWORD PTR [ecx],1
  440c58:	xchg   ebp,eax
  440c59:	adc    eax,0x574cfbc9
  440c5e:	and    BYTE PTR [edi],bl
  440c60:	mov    eax,ds:0x973161ea
  440c65:	push   ebp
  440c66:	sub    eax,0x70fa9213
  440c6b:	or     DWORD PTR [edx-0x16],ebx
  440c6e:	inc    edi
  440c6f:	imul   ebx,DWORD PTR [ebp+eiz*8+0x5e],0x69c7a107
  440c77:	sti    
  440c78:	add    BYTE PTR [eax],al
  440c7a:	push   0x9ec53820
  440c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440c80:	pop    eax
  440c81:	dec    esp
  440c82:	xlat   BYTE PTR ds:[ebx]
  440c83:	mov    esp,0x893fda3e
  440c88:	cmc    
  440c89:	lods   eax,DWORD PTR ds:[esi]
  440c8a:	test   eax,0x92514835
  440c8f:	add    eax,0x9e1ab63b
  440c94:	dec    ebx
  440c95:	push   ds
  440c96:	fmulp  st(4),st
  440c98:	addr16 hlt 
  440c9a:	sub    bl,BYTE PTR [ecx+0x30d68c31]
  440ca0:	mov    ch,BYTE PTR [esp+esi*2]
  440ca3:	dec    edi
  440ca4:	mov    al,0x65
  440ca6:	gs and bh,bh
  440ca9:	jmp    DWORD PTR [ecx]
  440cab:	cli    
  440cac:	fwait
  440cad:	jg     0x440c9c
  440caf:	(bad)  
  440cb0:	or     esp,esi
  440cb2:	retf   0x85d2
  440cb5:	xor    bl,bl
  440cb7:	aad    0xd5
  440cb9:	pop    ebp
  440cba:	scas   eax,DWORD PTR es:[edi]
  440cbb:	rcr    DWORD PTR [esp+eiz*4-0x2a],cl
  440cbf:	pop    ss
  440cc0:	shl    esi,1
  440cc2:	mov    BYTE PTR [ecx],cl
  440cc4:	aas    
  440cc5:	push   esi
  440cc6:	sub    bh,ah
  440cc8:	jmp    0x440c6b
  440cca:	xchg   edi,eax
  440ccb:	mov    bh,0xfe
  440ccd:	and    dl,BYTE PTR [eax-0x52]
  440cd0:	add    BYTE PTR [ecx+0x1ef41378],ch
  440cd6:	out    dx,eax
  440cd7:	aad    0x26
  440cd9:	sbb    edi,esp
  440cdb:	aam    0xf0
  440cdd:	add    DWORD PTR [eax],0x0
  440ce0:	push   esp
  440ce1:	add    al,0xd9
  440ce3:	push   0x0
  440ce5:	jo     0x440cf2
  440ce7:	les    ecx,FWORD PTR [ebp+0x54cf3f17]
  440ced:	pop    edi
  440cee:	inc    ebp
  440cef:	or     eax,0xbdd42a0d
  440cf4:	jno    0x440d32
  440cf6:	or     ah,BYTE PTR [edx-0x7d4efc79]
  440cfc:	repz jge 0x440c8e
  440cff:	retf   
  440d00:	mov    esp,0xe2504e06
  440d05:	jmp    0x383e8d6c
  440d0a:	dec    eax
  440d0b:	call   0x64191094
  440d10:	xchg   ebp,eax
  440d11:	or     cl,BYTE PTR [ebx-0x66786461]
  440d17:	mov    cl,0xea
  440d19:	pop    es
  440d1a:	nop
  440d1b:	jmp    0x3ba9:0xa744a776
  440d22:	test   DWORD PTR [edi+0x12],eax
  440d25:	fiadd  WORD PTR [ebx+0x5271393f]
  440d2b:	sbb    DWORD PTR [ebp+0x0],esp
  440d2e:	dec    esp
  440d2f:	push   ecx
  440d30:	scas   eax,DWORD PTR es:[edi]
  440d31:	outs   dx,BYTE PTR ds:[esi]
  440d32:	xlat   BYTE PTR ds:[ebx]
  440d33:	rcl    eax,1
  440d35:	inc    edx
  440d36:	(bad)  
  440d37:	mov    ch,0x32
  440d39:	(bad)  
  440d3a:	adc    DWORD PTR [ebx+0x77ff59a9],esi
  440d40:	stos   BYTE PTR es:[edi],al
  440d41:	ja     0x440cf7
  440d43:	jae    0x440d45
  440d45:	add    BYTE PTR [ebx-0x69],bh
  440d48:	cdq    
  440d49:	xor    bl,BYTE PTR [esp+eax*2+0x10]
  440d4d:	mov    ds:0xcc34a458,al
  440d52:	or     DWORD PTR [esi-0x35],edx
  440d55:	int3   
  440d56:	and    DWORD PTR [esi-0x35],edx
  440d59:	int3   
  440d5a:	or     BYTE PTR [esi-0x32b1ae15],0x7
  440d61:	mov    cl,ch
  440d63:	xchg   ecx,eax
  440d64:	dec    edx
  440d65:	call   FWORD PTR [esi+0x2c]
  440d68:	pop    edx
  440d69:	ret    
  440d6a:	and    BYTE PTR [edi-0x24d4ae15],cl
  440d70:	sub    al,0xc9
  440d72:	xor    DWORD PTR [edi-0x44a1cf92],ecx
  440d78:	or     ecx,DWORD PTR [ebx+0x46852623]
  440d7e:	int    0x90
  440d80:	inc    edx
  440d81:	cld    
  440d82:	dec    esi
  440d83:	ret    
  440d84:	pop    ds
  440d85:	mov    ecx,ebx
  440d87:	mov    DWORD PTR [eax],edi
  440d89:	imul   eax,DWORD PTR [ecx],0xb
  440d8c:	cmp    BYTE PTR [edi],0xe
  440d8f:	mov    esi,0xe26ceafd
  440d94:	pop    ecx
  440d95:	mov    edi,DWORD PTR [eax-0x1c]
  440d98:	mov    esp,0xeb8f00cc
  440d9d:	xor    DWORD PTR [ecx-0x13],0xffffff84
  440da1:	inc    ebp
  440da2:	int    0x90
  440da4:	inc    edx
  440da5:	loopne 0x440e05
  440da7:	aam    0xdf
  440da9:	mov    eax,DWORD PTR [eax]
  440dab:	add    BYTE PTR [eax+0x150fc29],ah
  440db1:	xchg   ecx,eax
  440db2:	push   edx
  440db3:	in     al,0x4e
  440db5:	int3   
  440db6:	jecxz  0x440d43
  440db8:	popf   
  440db9:	sar    esp,0x4c
  440dbc:	fst    QWORD PTR [eax-0x23b107b6]
  440dc2:	test   DWORD PTR [ebx+0x44fced97],0xe84290dd
  440dcc:	pop    esi
  440dcd:	aam    0xf7
  440dcf:	mov    esp,DWORD PTR [ecx+ebp*8-0x6f32ab04]
  440dd6:	push   edx
  440dd7:	lock pop esi
  440dd9:	int3   
  440dda:	test   DWORD PTR [ebx+0x4cfd259d],0xfc4a90cd
  440de4:	adc    cl,ah
  440de6:	repz add ch,dl
  440de9:	or     DWORD PTR [eax],eax
  440deb:	jmp    0x440dc9
  440ded:	xchg   esp,eax
  440dee:	push   edx
  440def:	hlt    
  440df0:	push   esi
  440df1:	dec    esp
  440df2:	dec    BYTE PTR [eax+0x45843620]
  440df8:	lods   eax,DWORD PTR ds:[esi]
  440df9:	xchg   ebp,eax
  440dfa:	dec    edx
  440dfb:	hlt    
  440dfc:	out    dx,al
  440dfd:	rcl    DWORD PTR [edi],1
  440dff:	jae    0x440e0e
  440e01:	xchg   ebp,eax
  440e02:	push   edx
  440e03:	lock dec esi
  440e05:	or     al,0xfd
  440e07:	inc    esp
  440e08:	fst    QWORD PTR [edx+0xfffdc42]
  440e0e:	push   0xd60000ac
  440e13:	leave  
  440e14:	dec    DWORD PTR [edx-0x17b1a1f8]
  440e1a:	add    eax,0x5600000b
  440e1f:	inc    esi
  440e20:	or     eax,DWORD PTR [ebp-0x74eb486b]
  440e26:	add    BYTE PTR [esi],dh
  440e28:	test   BYTE PTR [ebp+0x3d],al
  440e2b:	adc    DWORD PTR [ecx+0x4a92a50c],esi
  440e31:	in     al,dx
  440e32:	dec    esi
  440e33:	xlat   BYTE PTR ds:[ebx]
  440e34:	jmp    0x440dc1
  440e36:	nop
  440e37:	cmp    eax,0xd450484
  440e3c:	inc    ebx
  440e3d:	or     BYTE PTR [esi],bh
  440e3f:	jne    0xbed13392
  440e45:	add    al,0x4c
  440e47:	iret   
  440e48:	out    dx,eax
  440e49:	jmp    0x440e84
  440e4b:	std    
  440e4c:	mov    edi,0xbcdef08b
  440e51:	int3   
  440e52:	adc    DWORD PTR [esi-0x35],ecx
  440e55:	int3   
  440e56:	or     DWORD PTR [esi-0x35],ecx
  440e59:	int3   
  440e5a:	and    DWORD PTR [esi-0x35],ecx
  440e5d:	int3   
  440e5e:	adc    BYTE PTR [ebx+ebp*8-0x17de0e7d],0x5
  440e66:	fiadd  DWORD PTR [eax-0x8]
  440e69:	mov    DWORD PTR [eax],ebx
  440e6b:	xor    al,BYTE PTR [ebp+eax*2+0x29e7d9bd]
  440e72:	ret    0xf840
  440e75:	add    DWORD PTR [eax],0x0
  440e78:	xchg   ecx,eax
  440e79:	add    eax,0xccbd249d
  440e7e:	jmp    DWORD PTR [edi+0x69]
  440e81:	or     al,0x40
  440e83:	add    BYTE PTR [esi-0x32],cl
  440e86:	out    0x51,eax
  440e88:	call   0x9d0a:0x16e82416
  440e8f:	sub    BYTE PTR [ebp-0x34],bh
  440e92:	jmp    FWORD PTR [ecx-0x2b]
  440e95:	mov    bl,0xff
  440e97:	mov    DWORD PTR [si],ecx
  440e9a:	inc    eax
  440e9b:	add    BYTE PTR [edx+0x16],dh
  440e9e:	sub    al,ch
  440ea0:	push   ss
  440ea1:	or     al,BYTE PTR [edi+0x42486d45]
  440ea7:	cld    
  440ea8:	aad    0x9
  440eaa:	add    BYTE PTR [eax],al
  440eac:	adc    al,BYTE PTR ds:[ebp-0x4273b6ab]
  440eb3:	add    DWORD PTR [esi+edx*8-0x5],ecx
  440eb7:	cmp    DWORD PTR [eax-0xb8cf8c3],0xffffff94
  440ebe:	inc    edx
  440ebf:	cld    
  440ec0:	pop    esi
  440ec1:	or     eax,0xc9d68c83
  440ec6:	call   DWORD PTR [eax+0x4e]
  440ec9:	(bad)  
  440eca:	out    0x52,eax
  440ecc:	adc    dl,BYTE PTR [esi]
  440ece:	and    al,0xe8
  440ed0:	xchg   esi,eax
  440ed1:	or     DWORD PTR [ebp+0x392014d],eax
  440ed7:	lea    esi,[ecx+0x3c31]
  440edd:	add    dh,bh
  440edf:	pop    eax
  440ee0:	test   ch,ah
  440ee2:	mov    BYTE PTR [ebx+ecx*8-0x34],cl
  440ee6:	adc    DWORD PTR [ebp-0x35],ecx
  440ee9:	int3   
  440eea:	or     DWORD PTR [ebp-0x35],ecx
  440eed:	int3   
  440eee:	mov    eax,ds:0x20cccb4e
  440ef3:	xchg   ebx,eax
  440ef4:	jmp    0x440e97
  440ef6:	push   ebp
  440ef7:	xor    bh,BYTE PTR [eax+eax*1]
  440efa:	sti    
  440efb:	xchg   edx,eax
  440efc:	aas    
  440efd:	xor    BYTE PTR [esi-0x33],bl
  440f00:	pop    es
  440f01:	ds pop esp
  440f03:	rol    BYTE PTR [edi],cl
  440f05:	pop    ebp
  440f06:	xchg   esi,eax
  440f07:	dec    esi
  440f08:	retf   
  440f09:	int3   
  440f0a:	mov    DWORD PTR [esi-0x35],ecx
  440f0d:	int3   
  440f0e:	mov    eax,ds:0x20cccb4e
  440f13:	xchg   ebx,eax
  440f14:	jmp    0x440ea1
  440f16:	sbb    BYTE PTR [esi],cl
  440f18:	push   eax
  440f19:	mov    ecx,DWORD PTR [eax]
  440f1b:	adc    cl,BYTE PTR [edi-0x1]
  440f1e:	enter  0xe7e5,0x43
  440f22:	aad    0xdc
  440f24:	mov    esp,0xcb4e91cc
  440f29:	int3   
  440f2a:	mov    DWORD PTR [esi-0x35],ecx
  440f2d:	int3   
  440f2e:	and    DWORD PTR [esi-0x35],ecx
  440f31:	int3   
  440f32:	mov    al,ds:0x3183eb92
  440f37:	adc    ah,BYTE PTR [esi+0x0]
  440f3a:	scas   eax,DWORD PTR es:[edi]
  440f3b:	or     DWORD PTR [eax-0x24],ebp
  440f3e:	(bad)  
  440f3f:	leave  
  440f40:	(bad)  
  440f41:	inc    BYTE PTR [eax]
  440f43:	add    al,al
  440f45:	icebp  
  440f46:	out    0x43,eax
  440f48:	aad    0x90
  440f4a:	inc    edx
  440f4b:	clc    
  440f4c:	lods   eax,DWORD PTR ds:[esi]
  440f4d:	xor    esp,edi
  440f4f:	aas    
  440f50:	aad    0x92
  440f52:	inc    edx
  440f53:	clc    
  440f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440f55:	xor    DWORD PTR [ebp+0x7c3f02ff],esi
  440f5b:	(bad)  
  440f5c:	int    0x90
  440f5e:	inc    edx
  440f5f:	cld    
  440f60:	pop    esi
  440f61:	int    0xf
  440f63:	push   ecx
  440f64:	pop    esi
  440f65:	aad    0xb
  440f67:	push   edx
  440f68:	dec    esi
  440f69:	lds    eax,FWORD PTR [edi]
  440f6b:	push   eax
  440f6c:	fcmovbe st,st(4)
  440f6e:	sti    
  440f6f:	mov    edi,DWORD PTR [eax+0x20ccbcdc]
  440f75:	xchg   ebx,eax
  440f76:	jmp    0x440fc9
  440f78:	call   0x9:0xd500fbc4
  440f7f:	jmp    0x440f5d
  440f81:	xchg   edx,eax
  440f82:	inc    edx
  440f83:	cld    
  440f84:	push   esi
  440f85:	dec    ecx
  440f86:	dec    BYTE PTR [eax+0x4d843e18]
  440f8c:	cdq    
  440f8d:	add    cl,BYTE PTR [ebx+0x10]
  440f90:	push   es
  440f91:	pop    ds
  440f92:	test   DWORD PTR [ebp-0x23],edx
  440f95:	or     dl,BYTE PTR [ebx-0x4]
  440f98:	shl    BYTE PTR [edi-0x3],cl
  440f9b:	mov    cl,BYTE PTR [eax]
  440f9d:	push   cs
  440f9e:	std    
  440f9f:	dec    esp
  440fa0:	jno    0x440fb0
  440fa2:	mov    dl,0x11
  440fa4:	scas   al,BYTE PTR es:[edi]
  440fa5:	dec    ebx
  440fa6:	jae    0x440faf
  440fa8:	add    BYTE PTR [eax],al
  440faa:	sbb    eax,0xd5000008
  440faf:	xor    al,BYTE PTR [ebx]
  440fb1:	jmp    0x440fd8
  440fb3:	cli    
  440fb4:	mov    edi,0xbcdc308b
  440fb9:	int3   
  440fba:	adc    DWORD PTR [ebp-0x35],ecx
  440fbd:	int3   
  440fbe:	or     DWORD PTR [ebp-0x35],ecx
  440fc1:	int3   
  440fc2:	and    DWORD PTR [ebp-0x35],ecx
  440fc5:	int3   
  440fc6:	adc    BYTE PTR [edx+0x9bdb9eb],0x0
  440fcd:	add    BYTE PTR [ecx-0x1f76f96e],dh
  440fd3:	mov    edi,esp
  440fd5:	inc    ebx
  440fd6:	aad    0xdc
  440fd8:	mov    esp,0xcb4d11cc
  440fdd:	int3   
  440fde:	or     DWORD PTR [ebp-0x35],ecx
  440fe1:	int3   
  440fe2:	and    DWORD PTR [ebp-0x35],ecx
  440fe5:	int3   
  440fe6:	adc    BYTE PTR [edx+0x18f183eb],0x85
  440fed:	inc    ebp
  440fee:	int    0x8a
  440ff0:	ja     0x440ff6
  440ff2:	aad    0xc
  440ff4:	test   BYTE PTR [eax-0x74fff62b],cl
  440ffa:	adc    BYTE PTR [edx],dl
  440ffc:	test   DWORD PTR [ecx-0x2f],edx
  440fff:	mov    ch,ah
  441001:	or     BYTE PTR [eax+esi*1-0x6e5eaa7a],al
  441008:	inc    edx
  441009:	or     BYTE PTR [esi+0x4a],dl
  44100c:	pop    es
  44100d:	mov    DWORD PTR [eax],eax
  44100f:	add    BYTE PTR [eax],dl
  441011:	cmp    al,al
  441013:	inc    ebp
  441014:	xchg   ecx,eax
  441015:	or     al,BYTE PTR [eax]
  441017:	add    ch,dl
  441019:	xor    BYTE PTR [esi],al
  44101b:	mov    edx,DWORD PTR [eax]
  44101d:	ds jl  0x440fe1
  441020:	aam    0x92
  441022:	dec    edx
  441023:	cld    
  441024:	pop    esi
  441025:	xlat   BYTE PTR ds:[ebx]
  441026:	sti    
  441027:	cmp    eax,DWORD PTR [eax]
  441029:	ss ins BYTE PTR es:[edi],dx
  44102b:	inc    esi
  44102c:	dec    esi
  44102d:	(bad)  
  44102e:	sti    
  44102f:	mov    ecx,DWORD PTR [eax]
  441031:	cmp    cl,BYTE PTR [eax]
  441033:	mov    bh,0xe9
  441035:	retf   0xfabe
  441038:	(bad)  [eax-0x837fc0b]
  44103e:	test   BYTE PTR [ebp+0x39],al
  441041:	xchg   ecx,eax
  441042:	dec    edx
  441043:	lock loop 0x4410ba
  441046:	adc    eax,DWORD PTR [ecx+0x54]
  441049:	sub    al,bh
  44104b:	pmullw mm1,QWORD PTR [ecx]
  44104e:	xchg   DWORD PTR [ebp+0x1d],edx
  441051:	xchg   ecx,eax
  441052:	inc    edx
  441053:	or     BYTE PTR [esi-0x31],bl
  441056:	or     eax,DWORD PTR [ebx]
  441058:	fst    QWORD PTR [eax+0x64ef852]
  44105e:	lsl    edx,WORD PTR [eax-0x22b27ae7]
  441065:	nop
  441066:	push   edx
  441067:	or     al,0xd6
  441069:	sbb    al,BYTE PTR [ebp+0x392dd4d]
  44106f:	or     ch,dh
  441071:	jb     0x440ff7
  441073:	push   ebp
  441074:	add    BYTE PTR [eax],al
  441076:	fst    QWORD PTR [eax-0x3829f7be]
  44107c:	add    ecx,DWORD PTR [ecx+0x6be71218]
  441082:	mov    edx,0xb88bf83c
  441087:	fidivr WORD PTR [esp+ecx*8-0x7c146f00]
  44108e:	mov    cl,0xe5
  441090:	test   BYTE PTR [ebp-0x33],al
  441093:	xchg   edx,eax
  441094:	inc    edx
  441095:	in     al,0x5e
  441097:	into   
  441098:	jecxz  0x441025
  44109a:	and    BYTE PTR [esi],ah
  44109c:	cld    
  44109d:	push   eax
  44109e:	rcl    DWORD PTR [edx-0x39b117ae],0xe7
  4410a5:	mov    ebx,DWORD PTR [ebp-0x77]
  4410a8:	(bad)  
  4410a9:	call   ebp
  4410ab:	xchg   edx,eax
  4410ac:	dec    edx
  4410ad:	lock push esi
  4410af:	mov    esi,0x85ca00ef
  4410b4:	hlt    
  4410b5:	add    ch,dl
  4410b7:	or     DWORD PTR [ebp+0x5308dd55],eax
  4410bd:	lock dec esp
  4410bf:	(bad)  
  4410c0:	fisttp WORD PTR [ebx+0x787c2990]
  4410c6:	lds    ecx,FWORD PTR [ecx]
  4410c8:	or     DWORD PTR [eax+esi*1-0x50fffff7],eax
  4410cf:	or     DWORD PTR [esi+0x0],esp
  4410d2:	dec    esi
  4410d3:	into   
  4410d4:	fisttp WORD PTR [ebx+0x50fd11a8]
  4410da:	add    BYTE PTR [eax],al
  4410dc:	(bad)  
  4410de:	clc    
  4410df:	adc    eax,0x3c31ad
  4410e4:	dec    esp
  4410e5:	(bad)  
  4410e6:	sti    
  4410e7:	mov    ebx,DWORD PTR [eax-0x2ac783d7]
  4410ed:	mov    ch,0x16
  4410ef:	mov    edx,DWORD PTR [eax-0x32aa7bd7]
  4410f5:	or     BYTE PTR [edi],cl
  4410f7:	mov    DWORD PTR [eax],ebp
  4410f9:	test   BYTE PTR ss:[ebp-0x4b],al
  4410fd:	(bad)
  441101:	ror    DWORD PTR [edi],1
  441103:	mov    DWORD PTR [eax],ecx
  441105:	cs in  al,0x17
  441108:	pop    esi
  441109:	aad    0xdf
  44110b:	mov    edx,DWORD PTR [eax]
  44110d:	adc    bh,ch
  44110f:	inc    ecx
  441110:	lds    edx,FWORD PTR [eax-0x32b10bbe]
  441116:	fisttp WORD PTR [ebx+0x10fd1228]
  44111c:	pop    esp
  44111d:	aad    0xeb
  44111f:	(bad)  
  441120:	sbb    BYTE PTR [edx-0x1],al
  441123:	call   ebp
  441125:	or     DWORD PTR [ebp+0x77877545],eax
  44112b:	adc    ch,dl
  44112d:	mov    ch,0x8
  44112f:	mov    edx,DWORD PTR [eax]
  441131:	sub    bh,BYTE PTR [ecx+edi*1-0x2b]
  441135:	mov    ch,0x0
  441137:	(bad)  
  441138:	cwde   
  441139:	inc    ecx
  44113a:	(bad)  
  44113b:	call   ebp
  44113d:	or     DWORD PTR [ebp+0x49000055],eax
  441143:	xchg   DWORD PTR ds:0x84a8c100,esi
  441149:	inc    ebp
  44114a:	sub    DWORD PTR [edi+0xa348107],ecx
  441150:	add    BYTE PTR [eax],al
  441152:	push   ebp
  441153:	mov    dh,0x1b
  441155:	mov    eax,DWORD PTR [eax-0x47fd7bcb]
  44115b:	cmp    bh,al
  44115d:	dec    DWORD PTR [edx+0x14d84d9]
  441163:	(bad)  
  441165:	mov    ch,0xf8
  441167:	cmp    bh,al
  441169:	sbb    DWORD PTR [ecx],0x12
  44116c:	xchg   DWORD PTR [ebp+0x9],eax
  44116f:	das    
  441170:	sbb    ecx,DWORD PTR [ebx+0x2843588]
  441176:	dec    esi
  441177:	int    0x7
  441179:	lea    ebp,[ecx]
  44117b:	adc    bh,dh
  44117d:	push   ecx
  44117e:	pop    esi
  44117f:	(bad)  
  441180:	sti    
  441181:	push   eax
  441182:	lods   eax,DWORD PTR ds:[esi]
  441183:	xchg   edx,eax
  441184:	cli    
  441185:	(bad)  
  441186:	mov    edx,0x5c08c386
  44118b:	(bad)  
  44118c:	fisttp DWORD PTR [ebx+0x55842e18]
  441192:	adc    DWORD PTR [eax+0x36108b0e],0x90d9c07c
  44119c:	inc    edx
  44119d:	hlt    
  44119e:	pop    esi
  44119f:	int3   
  4411a0:	jmp    0x441125
  4411a2:	xchg   esp,eax
  4411a3:	add    eax,0x4d87
  4411a8:	imul   ebp,DWORD PTR [esi],0x2a088b90
  4411ae:	jl     0x441172
  4411b0:	rcl    DWORD PTR [eax+0xb6ce052],0xf9
  4411b7:	call   FWORD PTR [edx-0x72]
  4411ba:	loop   0x441219
  4411bc:	push   ss
  4411bd:	dec    ebp
  4411be:	retf   
  4411bf:	int3   
  4411c0:	mov    al,ds:0x3183eb8e
  4411c5:	adc    DWORD PTR [eax-0x10],ebp
  4411c8:	(bad)  
  4411c9:	leave  
  4411ca:	(bad)  
  4411cb:	dec    al
  4411cd:	stc    
  4411ce:	out    0x43,eax
  4411d0:	aad    0x90
  4411d2:	inc    edx
  4411d3:	clc    
  4411d4:	lods   eax,DWORD PTR ds:[esi]
  4411d5:	cmp    eax,0x8ed53ffc
  4411da:	inc    edx
  4411db:	clc    
  4411dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4411dd:	xor    DWORD PTR [ecx],edi
  4411df:	std    
  4411e0:	or     bh,BYTE PTR [edx]
  4411e2:	jl     0x4411a8
  4411e4:	int    0x90
  4411e6:	inc    edx
  4411e7:	cld    
  4411e8:	dec    esi
  4411e9:	int3   
  4411ea:	sqrtps xmm3,XMMWORD PTR [esi-0x2c]
  4411ee:	or     edx,DWORD PTR [edx+0x5e]
  4411f1:	les    eax,FWORD PTR [edi]
  4411f3:	push   eax
  4411f4:	loop   0x4411c9
  4411f6:	sti    
  4411f7:	mov    esi,eax
  4411f9:	fstp   TBYTE PTR [esp+ecx*8-0x3334b95f]
  441200:	and    BYTE PTR [ebp+0x2251a1eb],al
  441206:	cmp    al,0x0
  441208:	xchg   ebx,eax
  441209:	or     ch,BYTE PTR [eax-0x75]
  44120c:	add    BYTE PTR [eax],al
  44120e:	enter  0xe78d,0x43
  441212:	aad    0x82
  441214:	dec    edi
  441215:	add    DWORD PTR [edi+0x4d],esp
  441218:	xchg   DWORD PTR [eax-0x30],edx
  44121b:	(bad)  
  44121c:	mov    esp,0xcb46a1cc
  441221:	int3   
  441222:	and    BYTE PTR [ebp+0x67183eb],al
  441228:	lahf   
  441229:	sub    BYTE PTR [ebp-0x33],0xff
  44122d:	mov    al,BYTE PTR [edi+0x5e3ec6fd]
  441233:	retf   0x8b2f
  441236:	xchg   DWORD PTR [ebp-0x3db1c133],eax
  44123c:	or     ecx,DWORD PTR [ebx-0xbb57cd9]
  441242:	pop    esi
  441243:	iret   
  441244:	repz mov ecx,DWORD PTR [ebp+0x3d4d8705]
  44124b:	test   DWORD PTR [edx-0x8],edx
  44124e:	pop    esp
  44124f:	(bad)  
  441251:	mov    eax,0x9d4
  441256:	pop    eax
  441257:	dec    edx
  441258:	jae    0x44129e
  44125a:	push   esi
  44125b:	mov    bh,0xf7
  44125d:	add    BYTE PTR [eax-0x13fd2f3],cl
  441263:	cmc    
  441264:	test   BYTE PTR [ebp-0x3],cl
  441267:	test   BYTE PTR [esi+0x18],cl
  44126a:	mov    esi,0xcc7507de
  44126f:	test   BYTE PTR [edx-0x8],al
  441272:	add    BYTE PTR [eax],al
  441274:	pop    esi
  441275:	(bad)  
  441276:	or     ecx,DWORD PTR [ecx+0x5585158d]
  44127c:	fld    QWORD PTR [edx+eax*2+0x17cb5c10]
  441283:	mov    eax,0x9d4
  441288:	scas   al,BYTE PTR es:[edi]
  441289:	adc    DWORD PTR [ebp+0xe84bd4d],eax
  44128f:	mov    DWORD PTR [eax],ecx
  441291:	xor    al,BYTE PTR [ebp+eax*2-0x3bd0b53]
  441298:	sub    BYTE PTR [esi],cl
  44129a:	sub    eax,0xe50daec0
  44129f:	mov    bl,0xc6
  4412a1:	dec    ecx
  4412a2:	test   ch,ah
  4412a4:	sub    BYTE PTR [ebp-0x35],cl
  4412a7:	int3   
  4412a8:	xchg   ecx,eax
  4412a9:	inc    ebp
  4412aa:	retf   
  4412ab:	int3   
  4412ac:	mov    DWORD PTR [ebp-0x35],eax
  4412af:	int3   
  4412b0:	mov    eax,ds:0xcccb45
  4412b5:	test   ebx,ebp
  4412b7:	xor    DWORD PTR [ecx+0x11],0xffffffc1
  4412bb:	inc    ebp
  4412bc:	pop    ebp
  4412bd:	or     DWORD PTR [eax],esi
  4412bf:	add    ch,dl
  4412c1:	mov    eax,ds:0x9950403
  4412c6:	lahf   
  4412c7:	ins    BYTE PTR es:[edi],dx
  4412c8:	sub    eax,0x2d4fffcc
  4412cd:	fdiv   st(3),st
  4412cf:	push   DWORD PTR [edx]
  4412d1:	mov    ebx,es
  4412d3:	or     BYTE PTR [esi+ecx*8-0xd],bl
  4412d7:	push   0x0
  4412d9:	add    BYTE PTR [ebp-0x7b07b57c],dl
  4412df:	test   BYTE PTR [edx],dl
  4412e1:	dec    esp
  4412e2:	std    
  4412e3:	retf   
  4412e4:	dec    DWORD PTR [edx+0x6a4fd997]
  4412ea:	aad    0x38
  4412ec:	push   edx
  4412ed:	hlt    
  4412ee:	ss int 0xe7
  4412f1:	inc    ebx
  4412f2:	aad    0x8c
  4412f4:	cmp    al,BYTE PTR [ebp+edi*8-0x35]
  4412f8:	(bad)  
  4412f9:	jmp    FWORD PTR [eax+0x10]
  4412fc:	mov    eax,0x9d502
  441301:	jmp    0x441342
  441303:	or     DWORD PTR [edx],0x0
  441306:	(bad)  
  441307:	leave  
  441308:	dec    DWORD PTR [eax+0x673a10]
  44130e:	mov    bl,0xb
  441310:	add    BYTE PTR [eax-0x2b],ch
  441313:	or     al,BYTE PTR [eax+0x0]
  441316:	pop    esi
  441317:	sbb    eax,0xa16e844
  44131c:	jg     0x4412e0
  44131e:	aad    0xa
  441320:	add    BYTE PTR [eax],al
  441322:	daa    
  441323:	and    bl,BYTE PTR [ecx+0x7c378afe]
  441329:	(bad)  
  44132a:	shl    DWORD PTR [ecx-0x1],1
  44132d:	add    dl,BYTE PTR ds:0xd6002b0a
  441333:	or     DWORD PTR [eax],eax
  441335:	mov    ebx,eax
  441337:	int    0xe7
  441339:	inc    ebx
  44133a:	aad    0xe2
  44133c:	(bad)  
  44133d:	mov    DWORD PTR [eax],eax
  44133f:	add    al,cl
  441341:	mov    ebp,0x82d543e7
  441346:	adc    dh,BYTE PTR [ebp+edi*1-0x35]
  44134a:	call   DWORD PTR [ecx+0x74]
  44134d:	into   
  44134e:	out    0x43,eax
  441350:	aad    0xd9
  441352:	test   BYTE PTR [ebp+0x25],cl
  441355:	(bad)  
  441357:	popf   
  441358:	sub    DWORD PTR [edi],esi
  44135a:	clc    
  44135b:	sbb    DWORD PTR [ecx],0x6
  44135e:	test   DWORD PTR ds:0x3c2191,edx
  441364:	(bad)  
  441365:	fadd   QWORD PTR [edi]
  441367:	mov    DWORD PTR [eax-0x12aa7bdf],esp
  44136d:	fisttp QWORD PTR ss:[ebx-0x33432b10]
  441374:	and    DWORD PTR [esi-0x35],eax
  441377:	int3   
  441378:	add    BYTE PTR [edx+0x1988beb],0x35
  44137f:	inc    ebp
  441380:	leave  
  441381:	mov    edx,0x2188b00
  441386:	in     eax,0x5
  441388:	mov    esi,0xd145850a
  44138d:	aam    0xbc
  44138f:	int3   
  441390:	mov    DWORD PTR [ebp-0x35],eax
  441393:	int3   
  441394:	mov    eax,ds:0xcccb45
  441399:	sub    ebx,0xffffff83
  44139c:	mov    cl,0xe5
  44139e:	rol    BYTE PTR [ebp-0x67],0x9
  4413a2:	adc    BYTE PTR [eax+eax*1],al
  4413a5:	add    ch,dl
  4413a7:	add    BYTE PTR [edx+0x8],0x5c
  4413ab:	int3   
  4413ac:	xlat   BYTE PTR ds:[ebx]
  4413ad:	mov    edx,DWORD PTR [eax]
  4413af:	push   edx
  4413b0:	test   BYTE PTR [ebp-0x33],dl
  4413b3:	or     cl,BYTE PTR [edi+0x3c]
  4413b6:	pop    esp
  4413b7:	(bad)  
  4413b9:	mov    edx,DWORD PTR [eax]
  4413bb:	sub    cl,BYTE PTR [eax]
  4413bd:	mov    bh,0xd
  4413bf:	push   ds
  4413c0:	test   DWORD PTR [ebp+0x75],edx
  4413c3:	test   BYTE PTR [ebx+0xa],al
  4413c6:	in     eax,dx
  4413c7:	add    BYTE PTR [edx-0x18],0xbd
  4413cb:	sbb    eax,0x82d54004
  4413d0:	or     ch,BYTE PTR [ebp+ebp*1-0x36]
  4413d4:	call   DWORD PTR [eax+0x3d]
  4413d7:	(bad)  
  4413d8:	hlt    
  4413d9:	jmp    FWORD PTR [edx]
  4413db:	mov    al,bl
  4413dd:	or     BYTE PTR [esp+ecx*8-0x11],cl
  4413e1:	push   0xffffff95
  4413e3:	mov    eax,ds:0x9d52fff
  4413e8:	push   0xde500
  4413ed:	push   0xffffffd5
  4413ef:	ss push edx
  4413f1:	lock dec esp
  4413f3:	int3   
  4413f4:	jecxz  0x441381
  4413f6:	mov    BYTE PTR [ecx],ch
  4413f8:	test   BYTE PTR [edx-0x7f],al
  4413fb:	fld    DWORD PTR [ebp+ecx*2+0x5584d8cd]
  441402:	icebp  
  441403:	(bad)  
  441405:	rcl    eax,0x35
  441408:	clc    
  441409:	add    DWORD PTR [eax],0x0
  44140c:	xchg   ecx,eax
  44140d:	push   es
  44140e:	rol    DWORD PTR [ebp-0x37],0xa
  441412:	add    BYTE PTR [eax],al
  441414:	aad    0x20
  441416:	push   es
  441417:	mov    ebx,DWORD PTR [eax]
  441419:	ds jl  0x4413dc
  44141c:	aam    0x82
  44141e:	inc    edx
  44141f:	hlt    
  441420:	dec    esi
  441421:	(bad)  
  441422:	fisttp WORD PTR [edi]
  441424:	(bad)  
  441425:	fild   DWORD PTR [ecx]
  441427:	cmp    DWORD PTR [eax],ebp
  441429:	ds ins BYTE PTR es:[edi],dx
  44142b:	pop    ecx
  44142c:	pop    esi
  44142d:	iret   
  44142e:	out    0x83,eax
  441430:	std    
  441431:	sbb    eax,0x81107400
  441436:	dec    edx
  441437:	call   0x53c792
  44143c:	loope  0x441433
  44143e:	test   BYTE PTR [ebp+0x6d],dl
  441441:	cmp    DWORD PTR ds:0xdfc74e10,0x8af5a48b
  44144b:	inc    esp
  44144c:	in     eax,0x34
  44144e:	test   BYTE PTR [ebp+0x35],cl
  441451:	stc    
  441452:	int    0xf7
  441454:	(bad)  
  441455:	cmc    
  441456:	test   BYTE PTR [ebp+0x35],dl
  441459:	add    eax,0xd9e942a9
  44145e:	test   BYTE PTR [ebp+0x2d],al
  441461:	or     DWORD PTR [edx+0x8],0x5113c1d6
  441468:	pop    esi
  441469:	(bad)  
  44146b:	mov    edx,DWORD PTR [eax+0x41fc2d]
  441471:	add    cl,dl
  441473:	(bad)  
  441475:	push   ebp
  441476:	clc    
  441477:	xor    al,0xf8
  441479:	sbb    DWORD PTR [ecx],0x6
  44147c:	test   DWORD PTR [ebp-0x3],ecx
  44147f:	mov    BYTE PTR [esi-0x1838b3d8],bh
  441485:	jmp    0x4414ce
  441487:	adc    DWORD PTR [edx-0x1c],0xfc092227
  44148e:	retf   0x7c34
  441491:	(bad)  
  441492:	fldenv [ecx+0xa150423]
  441498:	lahf   
  441499:	ins    BYTE PTR es:[edi],dx
  44149a:	mov    ebp,0xbd4fffc8
  44149f:	xor    ch,0xff
  4414a2:	mov    ds:0x4c08c388,al
  4414a7:	into   
  4414a8:	fild   DWORD PTR [ebx+0x43e7a1d0]
  4414ae:	aad    0x9
  4414b0:	jae    0x4414bc
  4414b2:	dec    esi
  4414b3:	push   es
  4414b4:	pusha  
  4414b5:	call   0xff931ed0
  4414ba:	or     BYTE PTR [esi+0x7c],dl
  4414bd:	cmp    eax,0x3c21fd
  4414c2:	aad    0xbe
  4414c4:	sbb    ebp,DWORD PTR [edx+0x15]
  4414c7:	mov    ds:0x9d52fff,al
  4414cc:	test   DWORD PTR [ebp+0x49],edx
  4414cf:	xlat   BYTE PTR ds:[ebx]
  4414d0:	test   BYTE PTR [ebp+0x35],al
  4414d3:	add    BYTE PTR [edi+0x34],0x0
  4414d7:	add    BYTE PTR [esp+esi*1-0x32890fae],ah
  4414de:	out    0x43,eax
  4414e0:	aad    0x20
  4414e2:	adc    ch,BYTE PTR [edx-0x6b]
  4414e5:	mov    eax,ds:0x9d52fff
  4414ea:	test   DWORD PTR [ebp+0x11],edx
  4414ed:	xlat   BYTE PTR ds:[ebx]
  4414ee:	add    BYTE PTR gs:[edx],cl
  4414f1:	fsubp  st(7),st
  4414f3:	mov    ds:0x3c2199,eax
  4414f8:	push   esi
  4414f9:	test   BYTE PTR [ebx-0x18],0x96
  4414fd:	or     DWORD PTR [eax],eax
  4414ff:	jne    0x4414c1
  441501:	lahf   
  441502:	aas    
  441503:	push   0xfffff9d5
  441508:	dec    esi
  441509:	into   
  44150a:	sti    
  44150b:	push   eax
  44150c:	aas    
  44150d:	or     bh,cl
  44150f:	push   ebp
  441510:	lds    esp,FWORD PTR [edi+0x43]
  441513:	call   0x4dc91f2e
  441518:	mov    cl,0x81
  44151a:	dec    edx
  44151b:	fcomp  DWORD PTR [esi-0x23]
  44151e:	xlat   BYTE PTR ds:[ebx]
  44151f:	mov    edx,DWORD PTR [eax]
  441521:	push   edx
  441522:	cld    
  441523:	inc    ecx
  441524:	loope  0x4414a6
  441526:	inc    edx
  441527:	loopne 0x441577
  441529:	(bad)
  44152c:	and    al,0xda
  44152e:	dec    ebp
  44152f:	mov    edx,DWORD PTR [eax]
  441531:	cs dec edi
  441533:	mov    edx,eax
  441535:	int    0xe7
  441537:	inc    ebx
  441538:	aad    0xd8
  44153a:	out    0x91,eax
  44153c:	add    BYTE PTR [eax],al
  44153e:	jno    0x441573
  441540:	clc    
  441541:	adc    DWORD PTR [ecx+0x75558506],0xffffff87
  441548:	mov    ch,0xa4
  44154a:	aad    0x9
  44154c:	add    BYTE PTR [eax],al
  44154e:	leave  
  44154f:	lock test BYTE PTR [ebp+0x35],al
  441553:	jg     0x44159f
  441555:	fcom   st(6)
  441557:	sbb    DWORD PTR [edi-0x78f62b00],0x527f414d
  441561:	loopne 0x4415d7
  441563:	into   
  441564:	out    0x43,eax
  441566:	aad    0xde
  441568:	cmp    eax,0xe7be7634
  44156d:	inc    ebx
  44156e:	aad    0x7e
  441570:	or     dh,BYTE PTR [ebp+edi*8-0x3a]
  441574:	call   DWORD PTR [eax+0x4e]
  441577:	sbb    eax,0x996e844
  44157c:	dec    esi
  44157d:	mov    ebx,DWORD PTR [eax+0x69e84f25]
  441583:	das    
  441584:	clc    
  441585:	call   DWORD PTR [esi+0x4e]
  441588:	or     ecx,DWORD PTR [ebx+0x15842988]
  44158e:	sbb    DWORD PTR [edx],esp
  441590:	cmp    al,0x0
  441592:	(bad)  
  441593:	fsub   DWORD PTR [edi]
  441595:	mov    eax,ebp
  441597:	(bad)  
  441598:	out    0x43,eax
  44159a:	aad    0x86
  44159c:	cmp    ch,BYTE PTR [eax-0x43]
  44159f:	(bad)  
  4415a0:	(bad)  
  4415a1:	inc    DWORD PTR [eax]
  4415a3:	add    BYTE PTR [eax],ah
  4415a5:	out    0x9e,al
  4415a7:	inc    esp
  4415a8:	lods   eax,DWORD PTR ds:[esi]
  4415a9:	(bad)  
  4415aa:	dec    DWORD PTR [edi+0x4e]
  4415ad:	add    al,0x84
  4415af:	call   0x8b931fca
  4415b4:	loopne 0x44155f
  4415b6:	out    0x43,eax
  4415b8:	aad    0xd7
  4415ba:	out    0x75,eax
  4415bc:	jns    0x4415f0
  4415be:	clc    
  4415bf:	sbb    DWORD PTR [ecx+0x7d449f05],0xffffffc6
  4415c6:	dec    DWORD PTR [edi+0x6d]
  4415c9:	retf   0xfff6
  4415cc:	pop    edx
  4415cd:	xchg   bl,al
  4415cf:	add    al,0x3e
  4415d1:	test   eax,0xc9d13467
  4415d6:	dec    DWORD PTR [edx+0x43e7a5d0]
  4415dc:	aad    0xd8
  4415de:	out    0x51,eax
  4415e0:	sub    al,0x32
  4415e2:	clc    
  4415e3:	adc    DWORD PTR [ecx],0x1
  4415e6:	xchg   DWORD PTR [ebp+0x9],eax
  4415e9:	jle    0x4415fd
  4415eb:	inc    esp
  4415ec:	sub    eax,0x5e51ffc6
  4415f1:	int3   
  4415f2:	fisttp WORD PTR [ebx+0x43e7cdd8]
  4415f8:	aad    0x6
  4415fa:	dec    eax
  4415fb:	sub    BYTE PTR [esi+edi*2-0x3a029fee],ah
  441602:	call   DWORD PTR [ecx-0x3]
  441605:	(bad)  
  441607:	inc    DWORD PTR [eax]
  441609:	add    dl,ah
  44160b:	test   ebx,eax
  44160d:	or     al,0x34
  44160f:	test   eax,0x6d543e7
  441614:	shl    ch,0xd6
  441617:	or     DWORD PTR [ebp-0x325274],ebx
  44161d:	mov    WORD PTR [eax],cs
  44161f:	xor    cl,BYTE PTR [esi+0x6a]
  441622:	adc    eax,0xc08b01a4
  441627:	jge    0x441610
  441629:	inc    ebx
  44162a:	aad    0xdb
  44162c:	clc    
  44162d:	push   ebp
  44162e:	and    DWORD PTR [edx],0x3192fbdd
  441634:	mov    bh,0x1
  441636:	aad    0x9
  441638:	add    BYTE PTR [ebx+0x4bdcf78],cl
  44163e:	aad    0x3d
  441640:	retf   
  441641:	int3   
  441642:	mov    eax,ds:0xcccb3e
  441647:	test   ebx,ebp
  441649:	mov    ebx,DWORD PTR [eax]
  44164b:	add    al,BYTE PTR [ebp-0x4330a6c0]
  441651:	int3   
  441652:	and    DWORD PTR [esi],edi
  441654:	retf   
  441655:	int3   
  441656:	mov    al,ds:0xab53eb84
  44165b:	fadd   DWORD PTR [ebp+edi*1+0x3c21a5]
  441662:	pop    esi
  441663:	subps  xmm5,xmm0
  441666:	xchg   esi,eax
  441667:	or     DWORD PTR [ebp+0x3c218d35],eax
  44166d:	add    BYTE PTR [eax],al
  44166f:	add    BYTE PTR [edx-0x31],bh
  441672:	push   esp
  441673:	pop    ebp
  441674:	push   ss
  441675:	ds retf 
  441677:	int3   
  441678:	mov    al,ds:0x6d51eb84
  44167d:	lds    eax,FWORD PTR [ebx]
  44167f:	inc    eax
  441680:	aad    0x6a
  441682:	imul   ebp,eax,0xffffff96
  441685:	or     DWORD PTR [eax-0x18],edx
  441688:	cmp    DWORD PTR [edx],esi
  44168a:	clc    
  44168b:	call   DWORD PTR [esi+0x46]
  44168e:	pop    es
  44168f:	mov    DWORD PTR [eax-0x22b27bd3],edx
  441695:	fisub  DWORD PTR [ebp+0x0]
  441698:	pop    esi
  441699:	push   ss
  44169a:	mov    al,ch
  44169c:	push   ss
  44169d:	or     cl,BYTE PTR [esi-0x1]
  4416a0:	and    BYTE PTR [esi],ch
  4416a2:	test   ch,ah
  4416a4:	adc    BYTE PTR [ebp-0x35],cl
  4416a7:	int3   
  4416a8:	add    BYTE PTR [ebp-0x1a4e7c15],al
  4416ae:	rol    BYTE PTR [ebp-0x63],0x9
  4416b2:	add    BYTE PTR [eax],al
  4416b4:	aad    0x48
  4416b6:	inc    edx
  4416b7:	fmul   QWORD PTR ds:0x9a00000a
  4416bd:	(bad)  
  4416be:	repz add ebp,edx
  4416c1:	or     DWORD PTR [eax],eax
  4416c3:	(bad)  
  4416c4:	sbb    BYTE PTR [esi],ch
  4416c6:	(bad)  
  4416c7:	call   ebp
  4416c9:	or     ecx,eax
  4416cb:	inc    ebp
  4416cc:	jns    0x4416d7
  4416ce:	add    BYTE PTR [eax],al
  4416d0:	aad    0x84
  4416d2:	dec    edx
  4416d3:	or     BYTE PTR [eax],al
  4416d5:	add    BYTE PTR [esi+edi*8+0x5f],bl
  4416d9:	call   0xaa2c2074
  4416de:	dec    edx
  4416df:	xor    al,bh
  4416e1:	mov    eax,ds:0x3c21b5
  4416e6:	clc    
  4416e7:	xor    al,bh
  4416e9:	add    ch,dl
  4416eb:	mov    ch,0xb
  4416ed:	(bad)  
  4416ee:	fsub   DWORD PTR [ecx+0x9d543e7]
  4416f4:	add    BYTE PTR [eax],al
  4416f6:	aad    0x24
  4416f8:	add    eax,0xe7a1d0c7
  4416fd:	inc    ebx
  4416fe:	aad    0xa
  441700:	add    BYTE PTR [eax],al
  441702:	aad    0x8c
  441704:	cmp    ah,BYTE PTR [eax-0x3]
  441707:	retf   
  441708:	(bad)  
  441709:	jmp    DWORD PTR [eax+0x3]
  44170c:	rol    DWORD PTR ds:0x3c216d,0xd5
  441713:	or     DWORD PTR [eax],eax
  441715:	add    BYTE PTR [esi-0x13],dl
  441718:	addr16 call 0x75442134
  44171e:	shl    BYTE PTR [ebx-0x61f0101],1
  441724:	out    0x43,eax
  441726:	aad    0x6a
  441728:	pop    edi
  441729:	call   0xdc92144
  44172e:	xor    eax,0x4c003c22
  441733:	mov    ebp,0xa9e88be7
  441738:	out    0x43,eax
  44173a:	add    BYTE PTR [eax],al
  44173c:	aad    0x82
  44173e:	inc    edx
  44173f:	call   0x897fe31a
  441744:	adc    BYTE PTR [edx],ah
  441746:	test   BYTE PTR [ebp+0x7d],cl
  441749:	or     DWORD PTR [edx],0xffcb7d4c
  44174f:	addr16 add eax,0x5a004006
  441755:	adc    eax,0x996e830
  44175a:	popf   
  44175b:	ins    BYTE PTR es:[edi],dx
  44175c:	cmp    eax,0xd8c6ffcb
  441761:	lods   eax,DWORD PTR ds:[esi]
  441762:	out    0x43,eax
  441764:	aad    0xb4
  441766:	add    eax,DWORD PTR [eax-0x2b]
  441769:	mov    eax,ds:0x995045f
  44176e:	test   DWORD PTR ds:0x3c21b1,edx
  441774:	xchg   DWORD PTR [ecx],esp
  441776:	mov    ebp,0x7c2f12f7
  44177b:	(bad)  
  44177c:	(bad)  [edx+0x77]
  44177f:	call   0x163d211a
  441784:	jge    0x4417a7
  441786:	cmp    al,0x0
  441788:	ss and bh,0x43
  44178c:	aad    0x68
  44178e:	jnp    0x441778
  441790:	xchg   esi,eax
  441791:	or     DWORD PTR [eax-0x18],edx
  441794:	and    DWORD PTR [eax],esi
  441796:	clc    
  441797:	call   DWORD PTR [esi+0x45]
  44179a:	add    ecx,DWORD PTR [ecx+0x4d843a10]
  4417a0:	add    BYTE PTR [eax],al
  4417a2:	(bad)
  4417a5:	aad    0xbb
  4417a7:	cs clc 
  4417a9:	sbb    DWORD PTR [ecx-0x429b62fb],0xffffffca
  4417b0:	dec    DWORD PTR [edx+0x6a4d3a08]
  4417b6:	aad    0x68
  4417b8:	arpl   ax,bp
  4417ba:	push   ss
  4417bb:	or     dl,BYTE PTR [eax-0x18]
  4417be:	imul   esi,DWORD PTR [esi],0x4556fff8
  4417c4:	or     ecx,DWORD PTR [ebx+0x4d863a08]
  4417ca:	jne    0x44174e
  4417cc:	push   edx
  4417cd:	cld    
  4417ce:	scas   al,BYTE PTR es:[edi]
  4417cf:	aam    0xef
  4417d1:	jae    0x4417d2
  4417d3:	add    BYTE PTR [edx-0x20],0x5
  4417d7:	or     DWORD PTR [edx-0x24],0xffffffa4
  4417db:	and    DWORD PTR [ecx+0x7c2e4afb],ebp
  4417e1:	(bad)  
  4417e2:	int    0x6a
  4417e4:	outs   dx,DWORD PTR ds:[esi]
  4417e5:	call   0x15c92180
  4417ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4417eb:	and    DWORD PTR [eax+eax*1],edi
  4417ee:	xchg   DWORD PTR [eax+0x7b],ebp
  4417f1:	call   0x4541218c
  4417f6:	xor    ecx,ebx
  4417f8:	test   BYTE PTR ds:0x3c2179,cl
  4417fe:	(bad)  
  4417ff:	mov    esp,0x55ed51fb
  441804:	idiv   bh
  441806:	add    BYTE PTR [eax],al
  441808:	cli    
  441809:	mov    ebx,eax
  44180b:	or     al,0x5e
  44180d:	aam    0xf3
  44180f:	add    eax,DWORD PTR [eax-0x6ab03b3]
  441815:	jg     0x441869
  441817:	in     al,0x4e
  441819:	(bad)  
  44181a:	sti    
  44181b:	add    ebx,DWORD PTR [eax]
  44181d:	dec    esi
  44181e:	xchg   BYTE PTR [ebp-0x37],al
  441821:	or     DWORD PTR [edx-0x20],0xe86ffeee
  441828:	push   ss
  441829:	or     al,BYTE PTR [edi-0x66de4ab3]
  44182f:	(bad)  
  441830:	adc    BYTE PTR [edx],dh
  441832:	(bad)  
  441833:	call   ebp
  441835:	or     ebp,esp
  441837:	or     DWORD PTR [esi-0x29],ecx
  44183a:	test   DWORD PTR [ebx+0x55870697],0xf842818d
  441844:	mov    esi,0xbd73efc6
  441849:	or     BYTE PTR [edx],0x64
  44184c:	jge    0x441817
  44184e:	inc    DWORD PTR [edx]
  441850:	sbb    BYTE PTR [edx],dh
  441852:	test   BYTE PTR [ecx],dl
  441854:	(bad)  
  441855:	(bad)  
  441856:	mul    DWORD PTR [ecx+0x3c21f1]
  44185c:	(bad)  
  44185d:	(bad)  
  44185e:	test   DWORD PTR [ecx-0x7b57f1b],0x3e64b54
  441868:	aad    0x9
  44186a:	test   DWORD PTR ds:0x21b90000,edx
  441870:	cmp    al,0x0
  441872:	(bad)  
  441873:	(bad)  
  441874:	div    DWORD PTR [ebx]
  441876:	iret   
  441877:	push   0x63
  441879:	call   0x45412214
  44187e:	or     eax,0x42eb0783
  441883:	sub    DWORD PTR [edx],0x54
  441886:	in     eax,dx
  441887:	enter  0x88ff,0xb8
  44188b:	(bad)  
  44188d:	inc    ebx
  44188e:	aad    0xf8
  441890:	(bad)  
  441891:	mov    DWORD PTR [eax-0x2abc183f],esp
  441897:	clc    
  441898:	(bad)  
  441899:	mov    DWORD PTR [eax-0x2abc1833],edi
  44189f:	and    DWORD PTR [ecx-0x9],ecx
  4418a2:	retf   0x8a2c
  4418a5:	or     eax,0x3c24a2
  4418aa:	dec    esp
  4418ab:	mov    esi,0x8d5b9f7
  4418b0:	inc    eax
  4418b1:	add    BYTE PTR [edx+eiz*1-0x1],dl
  4418b5:	add    dl,ch
  4418b7:	or     DWORD PTR [ebp-0x311f62ab],eax
  4418bd:	mov    eax,ebp
  4418bf:	shl    edi,1
  4418c1:	inc    ebx
  4418c2:	aad    0x6a
  4418c4:	push   edi
  4418c5:	call   0xe89422e0
  4418ca:	shr    DWORD PTR [edi],1
  4418cc:	clc    
  4418cd:	call   DWORD PTR [esi+0x45]
  4418d0:	add    ecx,DWORD PTR [ebx-0x5a280000]
  4418d6:	out    0x43,eax
  4418d8:	aad    0xda
  4418da:	out    0xd5,eax
  4418dc:	pop    edi
  4418dd:	sub    al,0xf8
  4418df:	test   DWORD PTR ds:0x153303b6,edx
  4418e5:	and    BYTE PTR ds:0xe7d5f88b,ah
  4418eb:	inc    ebx
  4418ec:	aad    0x88
  4418ee:	ret    
  4418ef:	add    al,0x56
  4418f1:	out    dx,al
  4418f2:	addr16 call 0x7444228e
  4418f8:	int3   
  4418f9:	push   0x43
  4418fb:	call   0x44cb2296
  441900:	mov    ecx,0x85de805
  441905:	sub    al,0xf8
  441907:	mov    ebp,eax
  441909:	test   edi,esp
  44190b:	inc    ebx
  44190c:	aad    0xd7
  44190e:	mov    esp,0xe2801533
  441913:	pop    ebp
  441914:	push   ss
  441915:	cmp    eax,0x9d5cccb
  44191a:	add    BYTE PTR [eax],al
  44191c:	aad    0x9
  44191e:	add    BYTE PTR [eax],al
  441920:	aad    0x9
  441922:	add    BYTE PTR [eax],al
  441924:	aad    0x9
  441926:	add    BYTE PTR [eax],al
  441928:	aad    0x9
  44192a:	add    BYTE PTR [eax],al
  44192c:	aad    0x9
  44192e:	add    BYTE PTR [eax],al
  441930:	aad    0x9
  441932:	add    BYTE PTR [eax],al
  441934:	aad    0x9
  441936:	add    BYTE PTR [eax],al
  441938:	add    BYTE PTR [eax],al
  44193a:	aad    0x9
  44193c:	add    BYTE PTR [eax],al
  44193e:	aad    0x9
  441940:	add    BYTE PTR [eax],al
  441942:	aad    0x9
  441944:	add    BYTE PTR [eax],al
  441946:	aad    0x9
  441948:	add    BYTE PTR [eax],al
  44194a:	aad    0x9
  44194c:	add    BYTE PTR [eax],al
  44194e:	aad    0x9
  441950:	add    BYTE PTR [eax],al
  441952:	aad    0x9
  441954:	add    BYTE PTR [eax],al
  441956:	aad    0x9
  441958:	add    BYTE PTR [eax],al
  44195a:	aad    0x9
  44195c:	add    BYTE PTR [eax],al
  44195e:	aad    0x9
  441960:	add    BYTE PTR [eax],al
  441962:	aad    0x9
  441964:	add    BYTE PTR [eax],al
  441966:	aad    0x9
  441968:	add    BYTE PTR [eax],al
  44196a:	aad    0x9
  44196c:	add    BYTE PTR [eax],al
  44196e:	aad    0x9
  441970:	add    BYTE PTR [eax],al
  441972:	aad    0x9
  441974:	add    BYTE PTR [eax],al
  441976:	aad    0x9
  441978:	add    BYTE PTR [eax],al
  44197a:	aad    0x9
  44197c:	add    BYTE PTR [eax],al
  44197e:	aad    0x9
  441980:	add    BYTE PTR [eax],al
  441982:	aad    0x9
  441984:	add    BYTE PTR [eax],al
  441986:	aad    0x9
  441988:	add    BYTE PTR [eax],al
  44198a:	aad    0x9
  44198c:	add    BYTE PTR [eax],al
  44198e:	aad    0x9
  441990:	add    BYTE PTR [eax],al
  441992:	aad    0x9
  441994:	add    BYTE PTR [eax],al
  441996:	aad    0x9
  441998:	add    BYTE PTR [eax],al
  44199a:	aad    0x9
  44199c:	add    BYTE PTR [eax],al
  44199e:	add    BYTE PTR [eax],al
  4419a0:	aad    0x9
  4419a2:	add    BYTE PTR [eax],al
  4419a4:	aad    0x9
  4419a6:	add    BYTE PTR [eax],al
  4419a8:	aad    0x9
  4419aa:	add    BYTE PTR [eax],al
  4419ac:	aad    0x9
  4419ae:	add    BYTE PTR [eax],al
  4419b0:	aad    0x9
  4419b2:	add    BYTE PTR [eax],al
  4419b4:	aad    0x9
  4419b6:	add    BYTE PTR [eax],al
  4419b8:	aad    0x9
  4419ba:	add    BYTE PTR [eax],al
  4419bc:	aad    0x9
  4419be:	add    BYTE PTR [eax],al
  4419c0:	aad    0x9
  4419c2:	add    BYTE PTR [eax],al
  4419c4:	aad    0x9
  4419c6:	add    BYTE PTR [eax],al
  4419c8:	aad    0x9
  4419ca:	add    BYTE PTR [eax],al
  4419cc:	aad    0x9
  4419ce:	add    BYTE PTR [eax],al
  4419d0:	aad    0x9
  4419d2:	add    BYTE PTR [eax],al
  4419d4:	aad    0x9
  4419d6:	add    BYTE PTR [eax],al
  4419d8:	aad    0x9
  4419da:	add    BYTE PTR [eax],al
  4419dc:	aad    0x9
  4419de:	add    BYTE PTR [eax],al
  4419e0:	aad    0x9
  4419e2:	add    BYTE PTR [eax],al
  4419e4:	aad    0x9
  4419e6:	add    BYTE PTR [eax],al
  4419e8:	aad    0x9
  4419ea:	add    BYTE PTR [eax],al
  4419ec:	aad    0x9
  4419ee:	add    BYTE PTR [eax],al
  4419f0:	aad    0x9
  4419f2:	add    BYTE PTR [eax],al
  4419f4:	aad    0x9
  4419f6:	add    BYTE PTR [eax],al
  4419f8:	add    BYTE PTR [eax+eax*1],al
  4419fb:	add    ch,dl
  4419fd:	or     DWORD PTR [eax],eax
  4419ff:	add    BYTE PTR [ebp+0x49000009],bh
  441a05:	cmp    dl,BYTE PTR [eax-0x67c596cd]
  441a0b:	xor    ebp,DWORD PTR [ecx+0x3a]
  441a0e:	mov    al,ds:0xa83a3933
  441a13:	xor    edx,ebp
  441a15:	fld    DWORD PTR [ebx]
  441a17:	add    BYTE PTR [ebp-0x79fffff7],bh
  441a1d:	xor    al,0xbb
  441a1f:	cmp    eax,0x3dca3415
  441a24:	or     dh,BYTE PTR [eax+ebx*8]
  441a27:	cmp    eax,0x3e0337b3
  441a2c:	(bad)  [ebx]
  441a2e:	sbb    BYTE PTR [esi],bh
  441a30:	or     DWORD PTR [ebx*2-0x7ecbc1c2],esi
  441a37:	ds pop esp
  441a39:	xor    al,0xd
  441a3b:	aas    
  441a3c:	aad    0xe9
  441a3e:	add    eax,DWORD PTR [eax]
  441a40:	or     DWORD PTR [edx],0x39c10000
  441a46:	div    DWORD PTR [eax]
  441a48:	nop
  441a49:	cmp    al,BYTE PTR ds:0x3d3ac131
  441a4f:	xor    DWORD PTR [edx],ebp
  441a51:	cmp    ebp,esi
  441a53:	xor    DWORD PTR [esi-0x33cdf4c5],eax
  441a59:	aaa    
  441a5a:	pop    ds
  441a5b:	xor    bh,BYTE PTR [edx+0x323c37]
  441a61:	add    BYTE PTR [edi],dl
  441a63:	cmp    BYTE PTR [esi+0x32],dl
  441a66:	hlt    
  441a67:	aaa    
  441a68:	imul   esi,DWORD PTR [edx],0x327537c2
  441a6e:	pop    ebp
  441a6f:	cmp    cl,dh
  441a71:	xor    cl,BYTE PTR [edx+0x38]
  441a74:	mov    dh,0x33
  441a76:	jle    0x441ab1
  441a78:	int    0x33
  441a7a:	or     edi,DWORD PTR [ecx]
  441a7c:	loopne 0x441ab1
  441a7e:	sub    BYTE PTR [ecx],bh
  441a80:	adc    al,0x34
  441a82:	mov    edi,0x8034323d
  441a87:	cmp    eax,0x3e5c3481
  441a8c:	(bad)  
  441a8d:	xor    al,0x63
  441a8f:	lods   al,BYTE PTR ds:[esi]
  441a91:	xor    al,0x48
  441a93:	ds mov ebx,0xca3e1634
  441a99:	xor    al,0x4
  441a9b:	fbstp  TBYTE PTR ds:[edx+edi*8]
  441a9f:	cmp    eax,0x3eda34f5
  441aa4:	adc    DWORD PTR ds:0x35293ebe,esi
  441aaa:	push   es
  441aab:	aas    
  441aac:	inc    ecx
  441aad:	xor    eax,0x357e3f4d
  441ab2:	pop    ecx
  441ab3:	ds xchg ebp,eax
  441ab5:	xor    eax,0x35b23e5f
  441aba:	ret    
  441abb:	ds clc 
  441abd:	xor    eax,0x36113bd0
  441ac2:	mov    esi,0x36243b
  441ac7:	add    bl,ch
  441ac9:	cmp    edi,DWORD PTR [ecx]
  441acb:	sar    DWORD PTR ss:[ebx],cl
  441ace:	inc    esp
  441acf:	sbb    BYTE PTR ss:[edi+ebx*2],bh
  441ad3:	ss stc 
  441ad5:	cmp    ebp,DWORD PTR [edx+0x36]
  441ad8:	jmp    0x7e3b:0xec36753b
  441adf:	ss push ecx
  441ae1:	cmp    edx,DWORD PTR [edx-0x62c4c2ca]
  441ae7:	ss aaa 
  441ae9:	cmp    edi,DWORD PTR [edi-0x9c4e0ca]
  441aef:	ss dec ecx
  441af1:	cmp    eax,DWORD PTR [edx]
  441af3:	aaa    
  441af4:	sar    DWORD PTR [esi+esi*1],1
  441af7:	aaa    
  441af8:	sahf   
  441af9:	cmp    al,0x68
  441afb:	aaa    
  441afc:	mov    cl,0x3c
  441afe:	xchg   BYTE PTR [edi],dh
  441b00:	inc    esi
  441b01:	cmp    al,0x99
  441b03:	aaa    
  441b04:	je     0x441b42
  441b06:	test   eax,0xbc3c6137
  441b0b:	aaa    
  441b0c:	and    BYTE PTR [edx+edx*8],bh
  441b0f:	aaa    
  441b10:	hlt    
  441b11:	cmp    esi,ebp
  441b13:	aaa    
  441b14:	add    edi,DWORD PTR [esi+eax*1]
  441b17:	cmp    al,ah
  441b19:	xor    DWORD PTR [eax],eax
  441b1b:	add    ch,dl
  441b1d:	or     DWORD PTR [eax],eax
  441b1f:	add    ch,dl
  441b21:	or     DWORD PTR [eax],eax
  441b23:	add    ch,dl
  441b25:	or     DWORD PTR [eax],eax
  441b27:	add    ch,dl
  441b29:	or     DWORD PTR [eax],eax
  441b2b:	add    BYTE PTR [eax],al
  441b2d:	add    ch,dl
  441b2f:	or     DWORD PTR [eax],eax
  441b31:	add    ch,dl
  441b33:	or     DWORD PTR [eax],eax
  441b35:	add    ch,dl
  441b37:	or     DWORD PTR [eax],eax
  441b39:	add    ch,dl
  441b3b:	or     DWORD PTR [eax],eax
  441b3d:	add    ch,dl
  441b3f:	or     DWORD PTR [eax],eax
  441b41:	add    ch,dl
  441b43:	or     DWORD PTR [eax],eax
  441b45:	add    ch,dl
  441b47:	or     DWORD PTR [eax],eax
  441b49:	add    ch,dl
  441b4b:	or     DWORD PTR [eax],eax
  441b4d:	add    ch,dl
  441b4f:	or     DWORD PTR [eax],eax
  441b51:	add    ch,dl
  441b53:	or     DWORD PTR [eax],eax
  441b55:	add    ch,dl
  441b57:	or     DWORD PTR [eax],eax
  441b59:	add    ch,dl
  441b5b:	or     DWORD PTR [eax],eax
  441b5d:	add    ch,dl
  441b5f:	or     DWORD PTR [eax],eax
  441b61:	add    ch,dl
  441b63:	or     DWORD PTR [eax],eax
  441b65:	add    ch,dl
  441b67:	or     DWORD PTR [eax],eax
  441b69:	add    ch,dl
  441b6b:	or     DWORD PTR [eax],eax
  441b6d:	add    ch,dl
  441b6f:	or     DWORD PTR [eax],eax
  441b71:	add    ch,dl
  441b73:	or     DWORD PTR [eax],eax
  441b75:	add    ch,dl
  441b77:	or     DWORD PTR [eax],eax
  441b79:	add    ch,dl
  441b7b:	or     DWORD PTR [eax],eax
  441b7d:	add    ch,dl
  441b7f:	or     DWORD PTR [eax],eax
  441b81:	add    ch,dl
  441b83:	or     DWORD PTR [eax],eax
  441b85:	add    ch,dl
  441b87:	or     DWORD PTR [eax],eax
  441b89:	add    ch,dl
  441b8b:	or     DWORD PTR [eax],eax
  441b8d:	add    ch,dl
  441b8f:	or     DWORD PTR [eax],eax
  441b91:	add    BYTE PTR [eax],al
  441b93:	add    ch,dl
  441b95:	or     DWORD PTR [eax],eax
  441b97:	add    ch,dl
  441b99:	or     DWORD PTR [eax],eax
  441b9b:	add    ch,dl
  441b9d:	or     DWORD PTR [eax],eax
  441b9f:	add    ch,dl
  441ba1:	or     DWORD PTR [eax],eax
  441ba3:	add    ch,dl
  441ba5:	or     DWORD PTR [eax],eax
  441ba7:	add    ch,dl
  441ba9:	or     DWORD PTR [eax],eax
  441bab:	add    ch,dl
  441bad:	or     DWORD PTR [eax],eax
  441baf:	add    ch,dl
  441bb1:	or     DWORD PTR [eax],eax
  441bb3:	add    ch,dl
  441bb5:	or     DWORD PTR [eax],eax
  441bb7:	add    ch,dl
  441bb9:	or     DWORD PTR [eax],eax
  441bbb:	add    ch,dl
  441bbd:	or     DWORD PTR [eax],eax
  441bbf:	add    ch,dl
  441bc1:	or     DWORD PTR [eax],eax
  441bc3:	add    ch,dl
  441bc5:	or     DWORD PTR [eax],eax
  441bc7:	add    ch,dl
  441bc9:	or     DWORD PTR [eax],eax
  441bcb:	add    ch,dl
  441bcd:	or     DWORD PTR [eax],eax
  441bcf:	add    ch,dl
  441bd1:	or     DWORD PTR [eax],eax
  441bd3:	add    ch,dl
  441bd5:	or     DWORD PTR [eax],eax
  441bd7:	add    ch,dl
  441bd9:	or     DWORD PTR [eax],eax
  441bdb:	add    ch,dl
  441bdd:	or     DWORD PTR [eax],eax
  441bdf:	add    ch,dl
  441be1:	or     DWORD PTR [eax],eax
  441be3:	add    ch,dl
  441be5:	or     DWORD PTR [eax],eax
  441be7:	add    ch,dl
  441be9:	or     DWORD PTR [eax],eax
  441beb:	add    ch,dl
  441bed:	or     DWORD PTR [eax],eax
  441bef:	add    ch,dl
  441bf1:	or     DWORD PTR [eax],eax
  441bf3:	add    ch,dl
  441bf5:	or     DWORD PTR [eax],eax
  441bf7:	add    BYTE PTR [eax],al
  441bf9:	add    ch,dl
  441bfb:	or     DWORD PTR [eax],eax
  441bfd:	add    ch,dl
  441bff:	or     DWORD PTR [eax],eax
  441c01:	add    ch,dl
  441c03:	or     DWORD PTR [eax],eax
  441c05:	add    ch,dl
  441c07:	or     DWORD PTR [eax],eax
  441c09:	add    ch,dl
  441c0b:	or     DWORD PTR [eax],eax
  441c0d:	add    ch,dl
  441c0f:	or     DWORD PTR [eax],eax
  441c11:	add    ch,dl
  441c13:	or     DWORD PTR [eax],eax
  441c15:	add    ch,dl
  441c17:	or     DWORD PTR [eax],eax
  441c19:	add    ch,dl
  441c1b:	or     DWORD PTR [eax],eax
  441c1d:	add    ch,dl
  441c1f:	or     DWORD PTR [eax],eax
  441c21:	add    ch,dl
  441c23:	or     DWORD PTR [eax],eax
  441c25:	add    ch,dl
  441c27:	or     DWORD PTR [eax],eax
  441c29:	add    ch,dl
  441c2b:	or     DWORD PTR [eax],eax
  441c2d:	add    ch,dl
  441c2f:	or     DWORD PTR [eax],eax
  441c31:	add    ch,dl
  441c33:	or     DWORD PTR [eax],eax
  441c35:	add    ch,dl
  441c37:	or     DWORD PTR [eax],eax
  441c39:	add    ch,dl
  441c3b:	or     DWORD PTR [eax],eax
  441c3d:	add    ch,dl
  441c3f:	or     DWORD PTR [eax],eax
  441c41:	add    ch,dl
  441c43:	or     DWORD PTR [eax],eax
  441c45:	add    ch,dl
  441c47:	or     DWORD PTR [eax],eax
  441c49:	add    ch,dl
  441c4b:	or     DWORD PTR [eax],eax
  441c4d:	add    ch,dl
  441c4f:	or     DWORD PTR [eax],eax
  441c51:	add    ch,dl
  441c53:	or     DWORD PTR [eax],eax
  441c55:	add    ch,dl
  441c57:	or     DWORD PTR [eax],eax
  441c59:	add    ch,dl
  441c5b:	or     DWORD PTR [eax],eax
  441c5d:	add    BYTE PTR [eax],al
  441c5f:	add    ch,dl
  441c61:	or     DWORD PTR [eax],eax
  441c63:	add    ch,dl
  441c65:	or     DWORD PTR [eax],eax
  441c67:	add    ch,dl
  441c69:	or     DWORD PTR [eax],eax
  441c6b:	add    ch,dl
  441c6d:	or     DWORD PTR [eax],eax
  441c6f:	add    ch,dl
  441c71:	or     DWORD PTR [eax],eax
  441c73:	add    ch,dl
  441c75:	or     DWORD PTR [eax],eax
  441c77:	add    ch,dl
  441c79:	or     DWORD PTR [eax],eax
  441c7b:	add    ch,dl
  441c7d:	or     DWORD PTR [eax],eax
  441c7f:	add    ch,dl
  441c81:	or     DWORD PTR [eax],eax
  441c83:	add    ch,dl
  441c85:	or     DWORD PTR [eax],eax
  441c87:	add    ch,dl
  441c89:	or     DWORD PTR [eax],eax
  441c8b:	add    ch,dl
  441c8d:	or     DWORD PTR [eax],eax
  441c8f:	add    ch,dl
  441c91:	or     DWORD PTR [eax],eax
  441c93:	add    ch,dl
  441c95:	or     DWORD PTR [eax],eax
  441c97:	add    ch,dl
  441c99:	or     DWORD PTR [eax],eax
  441c9b:	add    ch,dl
  441c9d:	or     DWORD PTR [eax],eax
  441c9f:	add    ch,dl
  441ca1:	or     DWORD PTR [eax],eax
  441ca3:	add    ch,dl
  441ca5:	or     DWORD PTR [eax],eax
  441ca7:	add    ch,dl
  441ca9:	or     DWORD PTR [eax],eax
  441cab:	add    ch,dl
  441cad:	or     DWORD PTR [eax],eax
  441caf:	add    ch,dl
  441cb1:	or     DWORD PTR [eax],eax
  441cb3:	add    ch,dl
  441cb5:	or     DWORD PTR [eax],eax
  441cb7:	add    ch,dl
  441cb9:	or     DWORD PTR [eax],eax
  441cbb:	add    ch,dl
  441cbd:	or     DWORD PTR [eax],eax
  441cbf:	add    ch,dl
  441cc1:	or     DWORD PTR [eax],eax
  441cc3:	add    BYTE PTR [eax],al
  441cc5:	add    ch,dl
  441cc7:	or     DWORD PTR [eax],eax
  441cc9:	add    ch,dl
  441ccb:	or     DWORD PTR [eax],eax
  441ccd:	add    ch,dl
  441ccf:	or     DWORD PTR [eax],eax
  441cd1:	add    ch,dl
  441cd3:	or     DWORD PTR [eax],eax
  441cd5:	add    ch,dl
  441cd7:	or     DWORD PTR [eax],eax
  441cd9:	add    ch,dl
  441cdb:	or     DWORD PTR [eax],eax
  441cdd:	add    ch,dl
  441cdf:	or     DWORD PTR [eax],eax
  441ce1:	add    ch,dl
  441ce3:	or     DWORD PTR [eax],eax
  441ce5:	add    ch,dl
  441ce7:	or     DWORD PTR [eax],eax
  441ce9:	add    ch,dl
  441ceb:	or     DWORD PTR [eax],eax
  441ced:	add    ch,dl
  441cef:	or     DWORD PTR [eax],eax
  441cf1:	add    ch,dl
  441cf3:	or     DWORD PTR [eax],eax
  441cf5:	add    ch,dl
  441cf7:	or     DWORD PTR [eax],eax
  441cf9:	add    ch,dl
  441cfb:	or     DWORD PTR [eax],eax
  441cfd:	add    ch,dl
  441cff:	or     DWORD PTR [eax],eax
  441d01:	add    ch,dl
  441d03:	or     DWORD PTR [eax],eax
  441d05:	add    ch,dl
  441d07:	or     DWORD PTR [eax],eax
  441d09:	add    ch,dl
  441d0b:	or     DWORD PTR [eax],eax
  441d0d:	add    ch,dl
  441d0f:	or     DWORD PTR [eax],eax
  441d11:	add    ch,dl
  441d13:	or     DWORD PTR [eax],eax
  441d15:	add    ch,dl
  441d17:	or     DWORD PTR [eax],eax
  441d19:	add    ch,dl
  441d1b:	or     DWORD PTR [eax],eax
  441d1d:	add    ch,dl
  441d1f:	or     DWORD PTR [eax],eax
  441d21:	add    ch,dl
  441d23:	or     DWORD PTR [eax],eax
  441d25:	add    ch,dl
  441d27:	or     DWORD PTR [eax],eax
  441d29:	add    BYTE PTR [eax],al
  441d2b:	add    ch,dl
  441d2d:	or     DWORD PTR [eax],eax
  441d2f:	add    ch,dl
  441d31:	or     DWORD PTR [eax],eax
  441d33:	add    ch,dl
  441d35:	or     DWORD PTR [eax],eax
  441d37:	add    ch,dl
  441d39:	or     DWORD PTR [eax],eax
  441d3b:	add    ch,dl
  441d3d:	or     DWORD PTR [eax],eax
  441d3f:	add    ch,dl
  441d41:	or     DWORD PTR [eax],eax
  441d43:	add    ch,dl
  441d45:	or     DWORD PTR [eax],eax
  441d47:	add    ch,dl
  441d49:	or     DWORD PTR [eax],eax
  441d4b:	add    ch,dl
  441d4d:	or     DWORD PTR [eax],eax
  441d4f:	add    ch,dl
  441d51:	or     DWORD PTR [eax],eax
  441d53:	add    ch,dl
  441d55:	or     DWORD PTR [eax],eax
  441d57:	add    ch,dl
  441d59:	or     DWORD PTR [eax],eax
  441d5b:	add    ch,dl
  441d5d:	or     DWORD PTR [eax],eax
  441d5f:	add    ch,dl
  441d61:	or     DWORD PTR [eax],eax
  441d63:	add    ch,dl
  441d65:	or     DWORD PTR [eax],eax
  441d67:	add    ch,dl
  441d69:	or     DWORD PTR [eax],eax
  441d6b:	add    ch,dl
  441d6d:	or     DWORD PTR [eax],eax
  441d6f:	add    ch,dl
  441d71:	or     DWORD PTR [eax],eax
  441d73:	add    ch,dl
  441d75:	or     DWORD PTR [eax],eax
  441d77:	add    ch,dl
  441d79:	or     DWORD PTR [eax],eax
  441d7b:	add    ch,dl
  441d7d:	or     DWORD PTR [eax],eax
  441d7f:	add    ch,dl
  441d81:	or     DWORD PTR [eax],eax
  441d83:	add    ch,dl
  441d85:	or     DWORD PTR [eax],eax
  441d87:	add    ch,dl
  441d89:	or     DWORD PTR [eax],eax
  441d8b:	add    ch,dl
  441d8d:	or     DWORD PTR [eax],eax
  441d8f:	add    BYTE PTR [eax],al
  441d91:	add    ch,dl
  441d93:	or     DWORD PTR [eax],eax
  441d95:	add    ch,dl
  441d97:	or     DWORD PTR [eax],eax
  441d99:	add    ch,dl
  441d9b:	or     DWORD PTR [eax],eax
  441d9d:	add    ch,dl
  441d9f:	or     DWORD PTR [eax],eax
  441da1:	add    ch,dl
  441da3:	or     DWORD PTR [eax],eax
  441da5:	add    ch,dl
  441da7:	or     DWORD PTR [eax],eax
  441da9:	add    ch,dl
  441dab:	or     DWORD PTR [eax],eax
  441dad:	add    ch,dl
  441daf:	or     DWORD PTR [eax],eax
  441db1:	add    ch,dl
  441db3:	or     DWORD PTR [eax],eax
  441db5:	add    ch,dl
  441db7:	or     DWORD PTR [eax],eax
  441db9:	add    ch,dl
  441dbb:	or     DWORD PTR [eax],eax
  441dbd:	add    ch,dl
  441dbf:	or     DWORD PTR [eax],eax
  441dc1:	add    ch,dl
  441dc3:	or     DWORD PTR [eax],eax
  441dc5:	add    ch,dl
  441dc7:	or     DWORD PTR [eax],eax
  441dc9:	add    ch,dl
  441dcb:	or     DWORD PTR [eax],eax
  441dcd:	add    ch,dl
  441dcf:	or     DWORD PTR [eax],eax
  441dd1:	add    ch,dl
  441dd3:	or     DWORD PTR [eax],eax
  441dd5:	add    ch,dl
  441dd7:	or     DWORD PTR [eax],eax
  441dd9:	add    ch,dl
  441ddb:	or     DWORD PTR [eax],eax
  441ddd:	add    ch,dl
  441ddf:	or     DWORD PTR [eax],eax
  441de1:	add    ch,dl
  441de3:	or     DWORD PTR [eax],eax
  441de5:	add    ch,dl
  441de7:	or     DWORD PTR [eax],eax
  441de9:	add    ch,dl
  441deb:	or     DWORD PTR [eax],eax
  441ded:	add    ch,dl
  441def:	or     DWORD PTR [eax],eax
  441df1:	add    ch,dl
  441df3:	or     DWORD PTR [eax],eax
  441df5:	add    BYTE PTR [eax],al
  441df7:	add    ch,dl
  441df9:	or     DWORD PTR [eax],eax
  441dfb:	add    ch,dl
  441dfd:	or     DWORD PTR [eax],eax
  441dff:	add    ch,dl
  441e01:	or     DWORD PTR [eax],eax
  441e03:	add    ch,dl
  441e05:	or     DWORD PTR [eax],eax
  441e07:	add    ch,dl
  441e09:	or     DWORD PTR [eax],eax
  441e0b:	add    ch,dl
  441e0d:	or     DWORD PTR [eax],eax
  441e0f:	add    BYTE PTR [edi-0x6c],ch
  441e12:	and    DWORD PTR [eax+0x4e],ebx
  441e15:	jne    0x441da5
  441e17:	ret    
  441e18:	aad    0xfc
  441e1a:	jge    0x441dc2
  441e1c:	jno    0x441e36
  441e1e:	mov    eax,0x66221709
  441e23:	xchg   DWORD PTR [edi-0x21],esi
  441e26:	dec    ebp
  441e27:	loopne 0x441df2
  441e29:	push   ecx
  441e2a:	ins    DWORD PTR es:[edi],dx
  441e2b:	cmp    eax,0x16717b0b
  441e30:	xor    ebx,DWORD PTR [edx-0x11]
  441e33:	pop    es
  441e34:	scas   al,BYTE PTR es:[edi]
  441e35:	xor    ebx,DWORD PTR [ecx+0x58]
  441e38:	fs pusha 
  441e3a:	add    eax,0xd40c9a28
  441e3f:	mov    bh,0x58
  441e41:	shl    bl,0xb5
  441e44:	pop    edx
  441e45:	icebp  
  441e46:	lock aaa 
  441e48:	aad    0x27
  441e4a:	mov    ds:0xf500b5ba,eax
  441e4f:	adc    al,0xe4
  441e51:	neg    BYTE PTR [esi-0x53]
  441e54:	adc    DWORD PTR [ebx+0x1913e11d],esi
  441e5a:	jns    0x441de9
  441e5c:	pop    ecx
  441e5d:	jae    0x441ebe
  441e5f:	test   bh,ch
  441e61:	mov    eax,ds:0x6f7add6d
  441e66:	jne    0x441ee2
  441e68:	mov    fs,WORD PTR [ecx-0x784d321]
  441e6e:	test   BYTE PTR [eax+0x4f],dl
  441e71:	pushf  
  441e72:	sbb    bh,bl
  441e74:	sbb    eax,0x60089f96
  441e79:	test   BYTE PTR [ecx-0x1f2f1b01],ch
  441e7f:	cmc    
  441e80:	cli    
  441e81:	test   BYTE PTR [esi],ah
  441e83:	mov    al,0x26
  441e85:	frstor [edi+0x71ec54af]
  441e8b:	nop
  441e8c:	cld    
  441e8d:	xchg   esi,eax
  441e8e:	jne    0x441e7e
  441e90:	or     bl,bl
  441e92:	out    dx,al
  441e93:	inc    eax
  441e94:	in     eax,dx
  441e95:	mov    eax,ss
  441e97:	repz in al,dx
  441e99:	push   ecx
  441e9a:	je     0x441f01
  441e9c:	retf   
  441e9d:	outs   dx,DWORD PTR ds:[esi]
  441e9e:	int3   
  441e9f:	into   
  441ea0:	rol    BYTE PTR [edx-0xe],0xe9
  441ea4:	mov    bl,0x8a
  441ea6:	and    ecx,eax
  441ea8:	xchg   ecx,eax
  441ea9:	addr16 pop ecx
  441eab:	outs   dx,BYTE PTR ds:[esi]
  441eac:	ja     0x441f0a
  441eae:	lahf   
  441eaf:	sub    cl,cl
  441eb1:	inc    ebp
  441eb2:	inc    esi
  441eb3:	add    ebp,DWORD PTR [edx]
  441eb5:	aas    
  441eb6:	sbb    DWORD PTR [ecx],0x462f9d27
  441ebc:	mov    al,0x71
  441ebe:	arpl   WORD PTR [esp+ebx*1-0x1f5c9ba2],di
  441ec5:	push   edi
  441ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441ec7:	int3   
  441ec8:	mov    ah,0xa5
  441eca:	lds    edi,FWORD PTR [edi]
  441ecc:	pxor   mm7,QWORD PTR [ecx+0x10e4be1]
  441ed3:	hlt    
  441ed4:	rcr    BYTE PTR [edx],1
  441ed6:	jl     0x441e66
  441ed8:	es mov dh,0xd3
  441edb:	push   edi
  441edc:	push   ecx
  441edd:	fcom   QWORD PTR [esi+0x396b1ba0]
  441ee3:	inc    ecx
  441ee4:	loope  0x441f5c
  441ee6:	cld    
  441ee7:	jge    0x441ecb
  441ee9:	ja     0x441f34
  441eeb:	inc    edi
  441eec:	nop
  441eed:	imul   ebx,DWORD PTR [eax+0x15119c6f],0x1a6d5943
  441ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441ef8:	leave  
  441ef9:	push   edi
  441efa:	cmp    esi,ebx
  441efc:	outs   dx,BYTE PTR ds:[esi]
  441efd:	sti    
  441efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441eff:	dec    cx
  441f01:	mov    cl,0x9a
  441f03:	or     eax,0xeaa45729
  441f08:	fwait
  441f09:	mov    ebp,0xb8193eb3
  441f0e:	sar    BYTE PTR [eax+edx*2+0x64bb440f],1
  441f15:	jl     0x441ea7
  441f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441f18:	lock xor esp,DWORD PTR [ecx+0x6c]
  441f1c:	imul   esi,DWORD PTR [edi+0x16],0xfc4ce540
  441f23:	mov    DWORD PTR [esp],ebx
  441f26:	and    esp,ecx
  441f28:	cmp    dh,ah
  441f2a:	ss ret 0xd2ed
  441f2e:	adc    al,0xcf
  441f30:	pop    eax
  441f31:	xchg   ebp,eax
  441f32:	push   cs
  441f33:	lahf   
  441f34:	dec    eax
  441f35:	les    ebp,FWORD PTR [esi-0x77]
  441f38:	xchg   ebp,eax
  441f39:	jecxz  0x441f43
  441f3b:	hlt    
  441f3c:	jnp    0x441f2c
  441f3e:	cld    
  441f3f:	mov    ch,0x52
  441f41:	aam    0xca
  441f43:	sti    
  441f44:	into   
  441f45:	std    
  441f46:	push   ebx
  441f47:	add    cl,BYTE PTR [esi-0x6655223d]
  441f4d:	sbb    dh,BYTE PTR [edx+0x56cc05d4]
  441f53:	(bad)  
  441f54:	lods   eax,DWORD PTR ds:[esi]
  441f55:	fistp  QWORD PTR [ecx+0x21c8ed47]
  441f5b:	or     esp,DWORD PTR [esi-0x2648041c]
  441f61:	(bad)  
  441f62:	xchg   ebx,eax
  441f63:	add    eax,DWORD PTR [edx]
  441f65:	mov    ?,WORD PTR [ebx]
  441f67:	mov    eax,ds:0x906a5463
  441f6c:	xor    al,BYTE PTR [ebx]
  441f6e:	add    ah,bl
  441f70:	fdivr  DWORD PTR [eax+0xeac2880]
  441f76:	hlt    
  441f77:	pop    ss
  441f78:	loopne 0x441f04
  441f7a:	xor    eax,0x627aed0e
  441f7f:	push   0xffffffe7
  441f81:	loope  0x441f2e
  441f83:	add    ebx,ebx
  441f85:	jne    0x441f70
  441f87:	jne    0x441f61
  441f89:	mul    dl
  441f8b:	and    cl,BYTE PTR ds:0xe87245a2
  441f91:	and    DWORD PTR [ebx+0x6aabe665],ecx
  441f97:	push   cs
  441f98:	or     eax,0xc04dfe3d
  441f9d:	cmp    esi,esi
  441f9f:	dec    esp
  441fa0:	inc    BYTE PTR [eax-0x16f1c07a]
  441fa6:	xor    ch,BYTE PTR [edx+0x13bf4025]
  441fac:	pop    eax
  441fad:	dec    ebp
  441fae:	xchg   bl,bl
  441fb0:	arpl   WORD PTR [edi],cx
  441fb2:	dec    eax
  441fb3:	loopne 0x441fa7
  441fb5:	pop    esi
  441fb6:	ret    
  441fb7:	mul    BYTE PTR [edx+eiz*4]
  441fba:	aad    0x3f
  441fbc:	test   BYTE PTR [ecx+0x48d9b431],0x1e
  441fc3:	add    ebx,DWORD PTR [ebx-0x43dfef0d]
  441fc9:	xor    DWORD PTR [eax-0xe],0xffffffae
  441fcd:	imul   esi,esi,0x3f
  441fd0:	xor    ah,al
  441fd2:	mov    DWORD PTR [eax],0x83c9bcfc
  441fd8:	xlat   BYTE PTR ds:[ebx]
  441fd9:	push   edx
  441fda:	add    BYTE PTR [edx],0xe9
  441fdd:	imul   esp,esp,0x33a4a263
  441fe3:	mul    bl
  441fe5:	les    eax,FWORD PTR [eax+0x54]
  441fe8:	popf   
  441fe9:	fdivr  st(3),st
  441feb:	test   eax,0x3a903af4
  441ff0:	in     eax,0xf2
  441ff2:	ins    DWORD PTR es:[edi],dx
  441ff3:	stos   DWORD PTR es:[edi],eax
  441ff4:	jno    0x442068
  441ff6:	and    bh,bh
  441ff8:	pusha  
  441ff9:	push   esi
  441ffa:	call   0x7b94f733
  441fff:	shl    BYTE PTR [ecx-0x45444a14],1
  442005:	in     eax,0x95
  442007:	sahf   
  442008:	retf   
  442009:	mov    al,BYTE PTR [ecx]
  44200b:	sbb    BYTE PTR [ebx-0x7a],bh
  44200e:	.byte 0xa1
  44200f:	.byte 0x3b
