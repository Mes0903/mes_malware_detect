
031ee31921dc121fceae66c8fcfaf60f0bd4d7ea2d65d8394f6e23288897e5f0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	loop   0x4010f1
  4010fd:	sub    al,0x6c
  4010ff:	xor    eax,0x776b4128
  401104:	jb     0x4010ea
  401106:	mov    ah,0x77
  401108:	ja     0x40115a
  40110a:	rol    DWORD PTR [ebp+0x7b],0x74
  40110e:	xor    DWORD PTR ds:0x8037b2e7,esi
  401114:	jne    0x40116a
  401116:	add    BYTE PTR [ebp+0x5b],bh
  401119:	shl    BYTE PTR [ebx-0x58],cl
  40111c:	xchg   esp,eax
  40111d:	jg     0x4010e6
  40111f:	xchg   edx,eax
  401120:	stc    
  401121:	jne    0x40111c
  401123:	ror    BYTE PTR ds:0x1aec0712,cl
  401129:	pop    ecx
  40112a:	pop    ecx
  40112b:	cmp    eax,0x625c130f
  401130:	in     eax,0x80
  401132:	cmp    al,0xdc
  401134:	call   0xa8263810
  401139:	in     eax,dx
  40113a:	mov    ch,0x3b
  40113c:	(bad)  
  40113d:	mov    ebx,0xb4476b14
  401142:	test   BYTE PTR [edi],bh
  401144:	cmp    dh,BYTE PTR [edx-0x45ef27b5]
  40114a:	(bad)  
  40114c:	jp     0x401158
  40114e:	jo     0x4010e3
  401150:	pop    ss
  401151:	cmp    eax,0x45be7685
  401156:	mov    cl,0x26
  401158:	pop    esi
  401159:	retf   
  40115a:	ror    ebp,cl
  40115c:	adc    BYTE PTR [ebx+0x68676d30],cl
  401162:	jbe    0x401106
  401164:	sub    ah,dl
  401166:	jg     0x4011d9
  401168:	mov    esp,0x46a35c93
  40116d:	adc    BYTE PTR [ecx-0x5e67bdd7],ah
  401173:	fisttp QWORD PTR [ebx+eax*8-0x5099d3e0]
  40117a:	jp     0x4011d1
  40117c:	test   BYTE PTR [esi],0x54
  40117f:	les    eax,FWORD PTR [ebx]
  401181:	in     eax,dx
  401182:	or     al,0xee
  401184:	test   ebx,esi
  401186:	push   ebp
  401187:	push   0xb2e2c6e1
  40118c:	not    BYTE PTR [ebx]
  40118e:	cmc    
  40118f:	cli    
  401190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401191:	mov    BYTE PTR [ebp+0x56],ch
  401194:	and    DWORD PTR [ecx+0x4f006560],esi
  40119a:	xor    BYTE PTR [ebx-0x54e9c190],0x9
  4011a1:	add    DWORD PTR [esi+0x743224bb],0x78
  4011a8:	iret   
  4011a9:	sbb    esi,edi
  4011ab:	fist   DWORD PTR [esi]
  4011ad:	xor    al,0x4f
  4011af:	push   es
  4011b0:	mov    ah,0x2
  4011b2:	cmp    al,0xb2
  4011b4:	cwde   
  4011b5:	push   eax
  4011b6:	es clc 
  4011b8:	cdq    
  4011b9:	mov    bh,0x50
  4011bb:	retf   
  4011bc:	inc    ebx
  4011bd:	inc    edx
  4011be:	xor    ebp,DWORD PTR fs:0x230a77a7
  4011c5:	add    ebx,edx
  4011c7:	leave  
  4011c8:	jbe    0x4011a7
  4011ca:	bound  edi,QWORD PTR ds:0xadef4b6b
  4011d0:	add    BYTE PTR [edi-0x5fc91a9c],ch
  4011d6:	outs   dx,BYTE PTR ds:[esi]
  4011d7:	push   ebx
  4011d8:	(bad)  
  4011d9:	aaa    
  4011da:	mov    dl,0xd8
  4011dc:	ja     0x4011eb
  4011de:	iret   
  4011df:	in     eax,dx
  4011e0:	leave  
  4011e1:	out    0xa6,al
  4011e3:	shr    DWORD PTR [ebx],1
  4011e5:	xchg   esi,eax
  4011e6:	xor    eax,0x2a52d7b4
  4011eb:	push   ecx
  4011ec:	add    al,0x4b
  4011ee:	add    eax,0x2c6c3e9c
  4011f3:	pop    ebp
  4011f4:	test   BYTE PTR [edi],bl
  4011f6:	enter  0x30bb,0x17
  4011fa:	add    al,0xee
  4011fc:	cli    
  4011fd:	xlat   BYTE PTR ds:[ebx]
  4011fe:	stos   BYTE PTR es:[edi],al
  4011ff:	mov    DWORD PTR [esi-0x2],ebp
  401202:	cdq    
  401203:	ret    
  401204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401205:	popa   
  401206:	js     0x4011b1
  401208:	jno    0x4011b1
  40120a:	xchg   edi,eax
  40120b:	inc    ebp
  40120c:	dec    ecx
  40120d:	cld    
  40120e:	push   eax
  40120f:	jb     0x401227
  401211:	xchg   ebx,eax
  401212:	pop    ecx
  401213:	mov    edx,0xc67ead1
  401218:	or     ecx,ecx
  40121a:	jmp    0x297fa99a
  40121f:	loop   0x40126e
  401221:	outs   dx,DWORD PTR ds:[esi]
  401222:	(bad)  
  401223:	cmp    dh,BYTE PTR [edx]
  401225:	outs   dx,DWORD PTR ds:[esi]
  401226:	xor    eax,0x680b9cc
  40122b:	fisttp DWORD PTR [ebp+0x7d]
  40122e:	fild   QWORD PTR [edi]
  401230:	dec    ecx
  401231:	xchg   ebp,eax
  401232:	shr    DWORD PTR [ebx+0x7f],cl
  401235:	fucomip st,st(3)
  401237:	call   0xaa764d21
  40123c:	retf   0xf52d
  40123f:	shl    DWORD PTR [esi],cl
  401241:	sbb    ecx,DWORD PTR [esi-0x78c0bbac]
  401247:	sub    eax,0xf391f524
  40124c:	pop    ds
  40124d:	push   0x47aa76cc
  401252:	loope  0x401201
  401254:	jae    0x401203
  401256:	daa    
  401257:	icebp  
  401258:	cwde   
  401259:	add    al,0xe1
  40125b:	and    eax,0x5cdd68
  401260:	sub    ecx,DWORD PTR [ecx]
  401262:	cmp    eax,0xf78e1216
  401267:	or     bl,BYTE PTR [ebx+0xe46a409]
  40126d:	dec    ebp
  40126e:	xchg   DWORD PTR [ecx-0x24],edx
  401271:	jp     0x4011fa
  401273:	add    BYTE PTR [ebx-0x26479d0c],bh
  401279:	mov    ch,0xd4
  40127b:	mov    eax,ds:0xa072eaf1
  401280:	pcmpeqb mm0,QWORD PTR [ecx-0x52e925a9]
  401287:	jns    0x40121a
  401289:	mov    dl,0x22
  40128b:	cmp    BYTE PTR [edi+0x51],ah
  40128e:	inc    ebp
  40128f:	or     BYTE PTR [edx+0x9a2cc66],ch
  401295:	fwait
  401296:	xor    al,0x85
  401298:	mov    ebp,esp
  40129a:	call   0x22a0:0x74100d1b
  4012a1:	adc    DWORD PTR [edi-0x1e026a7e],0x4a
  4012a8:	xor    eax,0xeadceeec
  4012ad:	adc    edx,ebp
  4012af:	cli    
  4012b0:	push   esp
  4012b1:	push   esp
  4012b2:	enter  0x54e6,0x3f
  4012b6:	in     eax,dx
  4012b7:	int    0x1b
  4012b9:	and    eax,0xe29468a1
  4012be:	pop    ss
  4012bf:	adc    DWORD PTR [ebx-0x77],0xf2d5bc5f
  4012c6:	inc    esi
  4012c7:	mov    eax,0x5660f752
  4012cc:	mov    ah,0xee
  4012ce:	out    0x13,al
  4012d0:	fcmove st,st(3)
  4012d2:	and    al,al
  4012d4:	add    DWORD PTR ds:0xb0479191,eax
  4012da:	pusha  
  4012db:	push   ds
  4012dc:	and    al,0x14
  4012de:	inc    esp
  4012df:	or     al,0xcf
  4012e1:	cmp    eax,edx
  4012e3:	addr16 test al,0x5d
  4012e6:	popf   
  4012e7:	sbb    al,0xe
  4012e9:	sbb    BYTE PTR [edx-0x597c9b40],bl
  4012ef:	inc    esi
  4012f0:	les    edi,FWORD PTR [ecx+ecx*4-0x78]
  4012f4:	mov    BYTE PTR [eax-0x22],dl
  4012f7:	sbb    al,0xf3
  4012f9:	bound  eax,QWORD PTR [eax-0x4c]
  4012fc:	ror    BYTE PTR [edi],cl
  4012fe:	jns    0x401303
  401300:	pop    edi
  401301:	adc    BYTE PTR ds:0xd9b532fe,al
  401307:	sub    BYTE PTR [edx],al
  401309:	outs   dx,DWORD PTR ds:[esi]
  40130a:	test   DWORD PTR [edi+ecx*4+0x26],edi
  40130e:	loope  0x40134a
  401310:	add    BYTE PTR [eax-0x24],al
  401313:	xor    al,0x91
  401315:	dec    edi
  401316:	pusha  
  401317:	(bad)  
  401318:	in     al,dx
  401319:	imul   cl
  40131b:	jecxz  0x401356
  40131d:	fidiv  DWORD PTR [ebp-0x3]
  401320:	jp     0x40133c
  401322:	or     eax,0x642d4968
  401327:	shl    DWORD PTR [eax-0x34],cl
  40132a:	sbb    edx,esp
  40132c:	mov    DWORD PTR [edi-0x5e],ebp
  40132f:	cmp    eax,0x21a47eca
  401334:	ror    BYTE PTR [edi+ebx*1],0xa2
  401338:	js     0x4012c7
  40133a:	popf   
  40133b:	popf   
  40133c:	test   al,0x75
  40133e:	sub    al,BYTE PTR [esi+edi*4-0x377db3e2]
  401345:	mov    bh,0xf3
  401347:	add    esi,DWORD PTR [edi+0x53e64a2a]
  40134d:	jne    0x4013c2
  40134f:	call   0xe09840d2
  401354:	(bad)  
  401356:	rol    BYTE PTR [edx+0x5ead6dda],0x20
  40135d:	pushf  
  40135e:	dec    ebp
  40135f:	cmp    eax,0xcac98e6c
  401364:	mov    ds:0xaa6c6fb6,al
  401369:	fist   WORD PTR [eax]
  40136b:	xchg   esi,eax
  40136c:	xchg   dl,bl
  40136e:	call   0xdf43e116
  401373:	inc    ebx
  401374:	jne    0x40132b
  401376:	mov    DWORD PTR [eax+0x11],ebx
  401379:	(bad)  
  40137a:	aam    0xfc
  40137c:	imul   esp,DWORD PTR [edi-0x14],0x5671c765
  401383:	test   eax,0x3e992041
  401388:	cmp    al,dl
  40138a:	mov    BYTE PTR [esi],ch
  40138c:	push   es
  40138d:	and    al,0x97
  40138f:	add    al,0xc7
  401391:	ins    BYTE PTR es:[edi],dx
  401392:	aad    0xe1
  401394:	sub    DWORD PTR [esi-0x4512a65d],ecx
  40139a:	outs   dx,BYTE PTR ds:[esi]
  40139b:	push   esi
  40139c:	xchg   ebp,eax
  40139d:	jmp    0x3766:0xd6d8f295
  4013a4:	xor    eax,0xfbbb9327
  4013a9:	adc    al,0x99
  4013ab:	jns    0x4013fe
  4013ad:	ins    DWORD PTR es:[edi],dx
  4013ae:	test   DWORD PTR [esi],0xeb1f2eb2
  4013b4:	add    al,0x83
  4013b6:	and    ch,BYTE PTR [edx+0x229875e4]
  4013bc:	sbb    edx,DWORD PTR [edx+0x5f]
  4013bf:	sbb    eax,0xee63ca72
  4013c4:	mov    edx,0xc8c14114
  4013c9:	dec    ebx
  4013ca:	lahf   
  4013cb:	jbe    0x40140f
  4013cd:	inc    ebp
  4013ce:	call   0x8e35:0x143f6df7
  4013d5:	clc    
  4013d6:	sbb    bl,BYTE PTR [edi+0x78]
  4013d9:	mov    esp,0x9388f9c1
  4013de:	add    BYTE PTR [edx-0x6eb79d18],0x3f
  4013e5:	lock mov edx,0x7c5f8cd0
  4013eb:	das    
  4013ec:	adc    eax,0xaee21e72
  4013f1:	inc    esi
  4013f2:	pop    DWORD PTR [ebx]
  4013f4:	push   ebx
  4013f5:	inc    edi
  4013f6:	arpl   WORD PTR ds:0xd80880a1,bp
  4013fc:	and    al,0x51
  4013fe:	pop    ds
  4013ff:	push   ebp
  401400:	popa   
  401401:	mov    ds,WORD PTR [ebx+0x43524e64]
  401407:	mov    ds:0x482f6e2c,eax
  40140c:	push   esp
  40140d:	push   edx
  40140e:	ins    DWORD PTR es:[edi],dx
  40140f:	and    dl,cl
  401411:	imul   ebp,DWORD PTR [eax-0x3d44d5a1],0x14
  401418:	in     eax,0x93
  40141a:	sbb    eax,0x9b1a6f65
  40141f:	xchg   esp,eax
  401420:	leave  
  401421:	test   al,0x59
  401423:	std    
  401424:	pop    ds
  401425:	(bad)  
  401426:	ss repnz stos BYTE PTR es:[edi],al
  401429:	adc    al,bh
  40142b:	lock jle 0x401453
  40142e:	enter  0xdbd8,0xff
  401432:	inc    eax
  401433:	shr    DWORD PTR [edi-0x1f513eea],cl
  401439:	call   0x7425b06e
  40143e:	test   al,0xed
  401440:	(bad)  [edx-0x289f2b1e]
  401446:	mov    ebx,ebp
  401448:	imul   edx,DWORD PTR [ebx],0x244e2cf
  40144e:	sub    dh,ch
  401450:	mov    dh,0x93
  401452:	shr    ah,0xe8
  401455:	(bad)  
  401456:	fadd   DWORD PTR [edi]
  401458:	pop    ebx
  401459:	xchg   edi,eax
  40145a:	push   ss
  40145b:	iret   
  40145c:	lods   al,BYTE PTR ds:[esi]
  40145d:	push   esi
  40145e:	and    ebp,DWORD PTR [esi-0x48767c3b]
  401464:	mov    ds:0x78148b86,eax
  401469:	mov    ah,0xc5
  40146b:	xor    ch,BYTE PTR [esi-0x15]
  40146e:	mov    ebx,0x3c843920
  401473:	jnp    0x4014c3
  401475:	hlt    
  401476:	inc    ebp
  401477:	adc    al,0x1b
  401479:	sub    bh,BYTE PTR [ecx-0x63]
  40147c:	mov    esp,0x76813e0f
  401481:	dec    esi
  401482:	pop    es
  401483:	lahf   
  401484:	add    dh,dl
  401486:	sbb    eax,0x43ba2eab
  40148b:	jl     0x401503
  40148d:	sub    ebp,DWORD PTR [esi+0x22]
  401490:	icebp  
  401491:	cmp    esi,ecx
  401493:	out    dx,eax
  401494:	jge    0x40149e
  401496:	iret   
  401497:	repz ror ebp,cl
  40149a:	xchg   DWORD PTR cs:[eax],ebp
  40149d:	cmp    BYTE PTR [eax],ah
  40149f:	push   esp
  4014a0:	adc    al,0x20
  4014a2:	jl     0x4014fd
  4014a4:	hlt    
  4014a5:	jmp    0x40149c
  4014a7:	push   ecx
  4014a8:	pop    di
  4014aa:	pop    ds
  4014ab:	icebp  
  4014ac:	wbinvd 
  4014ae:	scas   eax,DWORD PTR es:[edi]
  4014af:	xor    BYTE PTR [eax],ah
  4014b1:	ins    DWORD PTR es:[edi],dx
  4014b2:	ins    DWORD PTR es:[edi],dx
  4014b3:	fisubr WORD PTR [edx-0x42]
  4014b6:	sub    bh,ch
  4014b8:	mov    edi,0x536aeaad
  4014bd:	fstp   TBYTE PTR [ebx]
  4014bf:	dec    ecx
  4014c0:	adc    esp,DWORD PTR [edx+0x6419d3db]
  4014c6:	(bad)  
  4014c7:	fisttp WORD PTR [edx+0x4b]
  4014ca:	adc    al,0x45
  4014cc:	cmp    DWORD PTR [ebx-0x71],esi
  4014cf:	aam    0x99
  4014d1:	pop    es
  4014d2:	leave  
  4014d3:	cmp    edx,DWORD PTR [edi+0x52]
  4014d6:	popa   
  4014d7:	fincstp 
  4014d9:	fcom   QWORD PTR [ecx-0x2a562925]
  4014df:	or     edx,DWORD PTR [esi*4+0x5372c1de]
  4014e6:	and    eax,0xbfb02b0c
  4014eb:	mov    al,0x92
  4014ed:	mov    esi,0xc0e9c2f3
  4014f2:	sahf   
  4014f3:	das    
  4014f4:	mov    al,ds:0xbcaaa40a
  4014f9:	pop    ecx
  4014fa:	mov    al,0x4c
  4014fc:	inc    esp
  4014fd:	push   es
  4014fe:	loop   0x40149c
  401500:	mov    ebp,0x76977db
  401505:	sar    bl,1
  401507:	mov    dh,0xfa
  401509:	mov    al,ds:0x5f05ebda
  40150e:	push   ebp
  40150f:	(bad)  
  401511:	shl    BYTE PTR [edx-0x74],cl
  401514:	mov    edx,0x640d98a4
  401519:	enter  0x8098,0x20
  40151d:	fdiv   DWORD PTR [edi]
  40151f:	jns    0x40155b
  401521:	arpl   WORD PTR [esi],cx
  401523:	lods   al,BYTE PTR ds:[esi]
  401524:	cmp    eax,0xd870d367
  401529:	call   0xd5537b83
  40152e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40152f:	xor    eax,0xaaa53d8b
  401534:	addr16 je 0x401578
  401537:	ins    BYTE PTR es:[edi],dx
  401538:	push   ebx
  401539:	or     DWORD PTR [ebp+0x10],ebx
  40153c:	xchg   ecx,eax
  40153d:	add    al,0x59
  40153f:	pop    ebx
  401540:	das    
  401541:	in     al,dx
  401542:	lahf   
  401543:	fisubr WORD PTR [esi]
  401545:	inc    edi
  401546:	xchg   BYTE PTR [ebx],bl
  401548:	dec    edi
  401549:	lahf   
  40154a:	leave  
  40154b:	loopne 0x4015be
  40154d:	jb     0x4014e9
  40154f:	push   esi
  401550:	and    BYTE PTR [ecx+0x15],dl
  401553:	call   FWORD PTR [esi]
  401555:	dec    esp
  401556:	jo     0x40158a
  401558:	jg     0x40156d
  40155a:	test   cl,ah
  40155c:	push   ebx
  40155d:	cwde   
  40155e:	xchg   ebx,eax
  40155f:	sbb    eax,0xe16a4efb
  401564:	inc    edi
  401565:	faddp  st(5),st
  401567:	js     0x401583
  401569:	fs (bad) 
  40156b:	stos   BYTE PTR es:[edi],al
  40156c:	ss push cs
  40156e:	stc    
  40156f:	mov    edi,0xe3587646
  401574:	jns    0x4015e2
  401576:	inc    esp
  401577:	in     al,dx
  401578:	add    ebp,DWORD PTR ds:0xdd32b4df
  40157e:	fisttp WORD PTR [ebx+0x17]
  401581:	mov    eax,ds:0xcb150e44
  401586:	(bad)  
  401587:	ss pusha 
  401589:	pop    edi
  40158a:	jp     0x401571
  40158c:	mov    ah,0x91
  40158e:	mov    dl,0x99
  401590:	sbb    bl,BYTE PTR [edx-0x1c]
  401593:	pop    ecx
  401594:	push   ds
  401595:	fist   WORD PTR [ebp+0x5a]
  401598:	(bad)  
  401599:	jg     0x401526
  40159b:	jbe    0x401538
  40159d:	cmp    eax,DWORD PTR [ebx+0x35]
  4015a0:	and    BYTE PTR [edx-0x3b],0x72
  4015a4:	push   eax
  4015a5:	dec    esp
  4015a6:	lea    eax,[ecx-0x4f1b029d]
  4015ac:	sbb    ebp,esp
  4015ae:	sub    dl,BYTE PTR [ebx]
  4015b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b1:	lods   eax,DWORD PTR ds:[esi]
  4015b2:	sahf   
  4015b3:	(bad)  
  4015b4:	adc    edx,DWORD PTR [edx+0x4a4b0a2b]
  4015ba:	test   DWORD PTR [edx],ecx
  4015bc:	adc    bl,BYTE PTR [edx+0x398a4a93]
  4015c2:	cmp    eax,0xc6ec3b2c
  4015c7:	sbb    BYTE PTR ds:0xac815da9,0x9a
  4015ce:	inc    esp
  4015cf:	and    BYTE PTR [ebp-0x7b5ddbf0],0xe2
  4015d6:	jno    0x40163c
  4015d8:	cmp    edx,DWORD PTR [edi]
  4015da:	(bad)  
  4015db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015dc:	cmp    BYTE PTR [ebx+0x453aee4d],bl
  4015e2:	je     0x4015c1
  4015e4:	xor    eax,DWORD PTR [edi+0x7]
  4015e7:	enter  0xf40d,0xe7
  4015eb:	fcom   DWORD PTR [ebx+0x53d6032]
  4015f1:	pop    ebp
  4015f2:	push   eax
  4015f3:	xchg   edi,eax
  4015f4:	(bad)
  4015f7:	mov    al,ds:0x6c741276
  4015fc:	mov    ebx,0x9bb7bff2
  401601:	dec    eax
  401602:	dec    edx
  401603:	cmp    al,BYTE PTR [edi+0x245c3822]
  401609:	scas   al,BYTE PTR es:[edi]
  40160a:	jmp    0x4015dd
  40160c:	mov    ecx,0xdcad384b
  401611:	cwde   
  401612:	imul   edi,ecx,0xffffff92
  401615:	inc    ebx
  401616:	les    edx,FWORD PTR [edx-0x4c1bdc1d]
  40161c:	rcl    esi,cl
  40161e:	stc    
  40161f:	dec    ebp
  401620:	inc    edx
  401621:	repz adc al,0xca
  401624:	jnp    0x4015bf
  401626:	jnp    0x40167c
  401628:	stc    
  401629:	jbe    0x40168b
  40162b:	icebp  
  40162c:	jne    0x4015b4
  40162e:	inc    edx
  40162f:	xor    dh,0xba
  401632:	sbb    ebx,DWORD PTR [esi]
  401634:	ins    DWORD PTR es:[edi],dx
  401635:	rol    DWORD PTR [edx+0x56],0x10
  401639:	or     eax,0x9c43b2f7
  40163e:	jg     0x40166d
  401640:	loop   0x401676
  401642:	ja     0x401617
  401644:	fmul   QWORD PTR [edi-0x3bcc2865]
  40164a:	xchg   esp,eax
  40164b:	mov    cl,0x7c
  40164d:	test   BYTE PTR [edi-0x22],ah
  401650:	sub    ebx,DWORD PTR [ebx+0x9]
  401653:	mov    esp,0x5735903c
  401658:	mov    dl,0x4c
  40165a:	mov    esi,0x72494579
  40165f:	shr    BYTE PTR [ebp-0x5a964a3f],1
  401665:	push   edi
  401666:	push   0x340c3c66
  40166b:	dec    ecx
  40166c:	cmp    eax,0x216b5d37
  401671:	inc    esp
  401672:	adc    al,0xa9
  401674:	ins    BYTE PTR es:[edi],dx
  401675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401676:	dec    esi
  401677:	mov    eax,0x76c716e8
  40167c:	into   
  40167d:	add    BYTE PTR [esi-0x6f],ah
  401680:	(bad)  
  401681:	sub    al,0xff
  401683:	sar    BYTE PTR [esi+0x3e],1
  401686:	mov    esp,0xc0b985cd
  40168b:	cli    
  40168c:	mov    esp,0xb073f08
  401691:	mov    cl,0xe4
  401693:	scas   al,BYTE PTR es:[edi]
  401694:	cmc    
  401695:	in     al,dx
  401696:	js     0x4016df
  401698:	sbb    bh,BYTE PTR [eax+0x2]
  40169b:	jmp    0x4016b8
  40169d:	outs   dx,BYTE PTR ds:[esi]
  40169e:	cmp    al,0x83
  4016a0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4016a2:	out    dx,eax
  4016a3:	scas   al,BYTE PTR es:[edi]
  4016a4:	ret    
  4016a5:	pop    ds
  4016a6:	hlt    
  4016a7:	jmp    0xadb7:0x6b7adc4e
  4016ae:	int    0xa7
  4016b0:	bound  edx,QWORD PTR [edi+edi*4-0x2ca855ce]
  4016b7:	retf   
  4016b8:	scas   eax,DWORD PTR es:[edi]
  4016b9:	xchg   ebx,eax
  4016ba:	test   edx,0xa1781713
  4016c0:	mov    al,0x1d
  4016c2:	jge    0x401723
  4016c4:	mov    al,0xa0
  4016c6:	add    eax,0x6a3532a7
  4016cb:	js     0x40167b
  4016cd:	fdivr  QWORD PTR ss:[ebx+0x43]
  4016d1:	inc    eax
  4016d2:	ror    BYTE PTR [esi-0x71],cl
  4016d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016d6:	pusha  
  4016d7:	and    eax,0x858759cc
  4016dc:	loopne 0x4016bc
  4016de:	sbb    cl,al
  4016e0:	into   
  4016e1:	inc    edx
  4016e2:	mov    bh,BYTE PTR [edx+0x690b1881]
  4016e8:	mov    cl,BYTE PTR [ebx+0x23]
  4016eb:	call   0x5a12:0x756658d3
  4016f2:	jle    0x40174e
  4016f4:	sub    al,0x49
  4016f6:	test   eax,0x31ede52e
  4016fb:	sahf   
  4016fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016fd:	popf   
  4016fe:	jl     0x4016bf
  401700:	xchg   edx,eax
  401701:	adc    esi,0x32d1f33
  401707:	ss shl bh,cl
  40170a:	adc    esp,esi
  40170c:	(bad)  
  40170d:	jg     0x4016d8
  40170f:	(bad)  
  401710:	aam    0xdc
  401712:	fld    TBYTE PTR [ebp+ecx*1-0xf19aeee]
  401719:	test   DWORD PTR [edx-0x56f84580],ebx
  40171f:	dec    edi
  401720:	jecxz  0x40173c
  401722:	fld    QWORD PTR [ebx]
  401724:	ret    0xcc1d
  401727:	adc    DWORD PTR [ebx-0x3e831df],0xffffffe0
  40172e:	inc    ebx
  40172f:	in     eax,dx
  401730:	xchg   DWORD PTR [edi],edi
  401732:	int3   
  401733:	ror    BYTE PTR [eax-0x74333429],1
  401739:	jne    0x401749
  40173b:	jb     0x401704
  40173d:	or     DWORD PTR [edi+0x5a3fac3a],eax
  401743:	jmp    0x4017a5
  401745:	pop    edi
  401746:	aam    0xb4
  401748:	mov    ebp,DWORD PTR ds:0xdaa5e476
  40174e:	in     eax,dx
  40174f:	ins    DWORD PTR es:[edi],dx
  401750:	pop    ds
  401751:	mov    edi,0xc49d797
  401756:	dec    ebx
  401757:	rol    DWORD PTR [edi+edx*8+0x3bf0b7f5],0x88
  40175f:	gs jmp 0x6835:0xfa700e90
  401767:	and    esi,ebp
  401769:	jnp    0x401746
  40176b:	cmc    
  40176c:	cmp    al,0x55
  40176e:	adc    BYTE PTR [ebx],al
  401770:	enter  0xe9ae,0x26
  401774:	rcl    DWORD PTR [ecx+0x4d9ae5ce],cl
  40177a:	mov    edi,0x61edc484
  40177f:	scas   al,BYTE PTR es:[edi]
  401780:	and    bl,BYTE PTR [edi+0x78]
  401783:	loop   0x401711
  401785:	mov    esp,0xeceb6d46
  40178a:	mov    ch,0x4d
  40178c:	cmp    eax,0xd07f6945
  401791:	out    dx,eax
  401792:	mov    eax,0x37719f9e
  401797:	push   ds
  401798:	aaa    
  401799:	mov    BYTE PTR [edx+eiz*2],ah
  40179c:	aas    
  40179d:	jnp    0x4017db
  40179f:	test   DWORD PTR [ecx-0x1ecc5977],ebx
  4017a5:	out    0xbc,eax
  4017a7:	pop    eax
  4017a8:	add    cl,BYTE PTR [edi]
  4017aa:	je     0x4017dc
  4017ac:	jne    0x4017ad
  4017ae:	mov    eax,0x8fead132
  4017b3:	(bad)  
  4017b4:	rcl    DWORD PTR [edx-0x427814d9],1
  4017ba:	daa    
  4017bb:	out    0xda,eax
  4017bd:	fmulp  st(5),st
  4017bf:	lods   al,BYTE PTR ds:[esi]
  4017c0:	call   DWORD PTR [ebx+edx*1]
  4017c3:	imul   esp,DWORD PTR [edx],0xaed66b26
  4017c9:	iret   
  4017ca:	mov    eax,ds:0x35dc54b1
  4017cf:	adc    ecx,DWORD PTR [edi-0x5d]
  4017d2:	arpl   ax,si
  4017d4:	sbb    al,0x74
  4017d6:	sub    cl,BYTE PTR [ebp-0xcdcaccd]
  4017dc:	hlt    
  4017dd:	stos   BYTE PTR es:[edi],al
  4017de:	(bad)  [edi-0x606cafbc]
  4017e4:	dec    esp
  4017e5:	push   edi
  4017e6:	in     al,0x45
  4017e8:	or     BYTE PTR [edx+0x46],bl
  4017eb:	fcom   DWORD PTR [eax]
  4017ed:	dec    ecx
  4017ee:	add    edx,DWORD PTR [ebx]
  4017f0:	push   esi
  4017f1:	(bad)  
  4017f2:	les    edx,FWORD PTR [ebp+eax*4+0x4ce02bed]
  4017f9:	je     0x401818
  4017fb:	mov    WORD PTR [ebx+0x2a],ss
  4017fe:	xchg   esp,eax
  4017ff:	imul   eax,DWORD PTR [esi-0x6d],0x2a
  401803:	test   eax,0x8d623303
  401808:	sub    eax,0x75ad94b9
  40180d:	cmp    BYTE PTR [edx-0x7c],bh
  401810:	test   BYTE PTR [eax],ch
  401812:	push   ds
  401813:	push   edi
  401814:	mov    ecx,0xb4682116
  401819:	fidivr DWORD PTR [ebp+0x5753915d]
  40181f:	mul    BYTE PTR [esi+eiz*8+0x3bed1881]
  401826:	and    ebp,DWORD PTR [edi]
  401828:	and    esi,DWORD PTR [esp+ebx*8]
  40182b:	(bad)  
  40182c:	xor    esi,DWORD PTR [ebx+0x2cb58dc8]
  401832:	sbb    eax,0x49fb92bd
  401837:	in     al,dx
  401838:	xor    bl,BYTE PTR [eax+0x70]
  40183b:	(bad)  [eax+0x6170c20b]
  401841:	dec    ebp
  401842:	loope  0x40183a
  401844:	mov    WORD PTR [ecx-0x9f1133d],fs
  40184a:	sub    cl,BYTE PTR [eax-0x49]
  40184d:	jmp    0x761a:0x43016959
  401854:	mov    dh,0x95
  401856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401857:	mov    bh,0x1a
  401859:	fcom   DWORD PTR [ebp+0x44a31639]
  40185f:	test   eax,0xa1f469e1
  401864:	push   ebx
  401865:	int3   
  401866:	mov    cl,0x6a
  401868:	sub    eax,0x96543f9e
  40186d:	fsubr  QWORD PTR [edx-0x619b03e9]
  401873:	aad    0x9
  401875:	lods   eax,DWORD PTR ds:[esi]
  401876:	mov    edi,0xdb6a8380
  40187b:	mov    BYTE PTR [ecx],dh
  40187d:	inc    edx
  40187e:	pushf  
  40187f:	jp     0x401865
  401881:	mov    esi,0x70c25a27
  401886:	or     esp,esi
  401888:	add    eax,0x22f6bcd
  40188d:	pop    esp
  40188e:	and    BYTE PTR [ecx],ah
  401890:	std    
  401891:	pinsrw mm0,WORD PTR [esi+0x65],0x15
  401896:	sbb    DWORD PTR [edi+0xae5aa92],ecx
  40189c:	ror    BYTE PTR [ebx-0x77],cl
  40189f:	jmp    0xd077a15
  4018a4:	jmp    0xbb852552
  4018a9:	pop    es
  4018aa:	cs pop edx
  4018ac:	pop    ebp
  4018ad:	push   ebx
  4018ae:	inc    ebx
  4018af:	inc    edx
  4018b0:	into   
  4018b1:	cmp    DWORD PTR [ebx+0x6e],eax
  4018b4:	mov    dh,bl
  4018b6:	jecxz  0x4018b6
  4018b8:	gs adc eax,0x8d4244d6
  4018be:	ins    BYTE PTR es:[edi],dx
  4018bf:	int    0xc7
  4018c1:	fmul   QWORD PTR [edi*8-0x62f60d4]
  4018c8:	pusha  
  4018c9:	push   ebp
  4018ca:	cmp    eax,0xf6e882fb
  4018cf:	mov    bh,0x90
  4018d1:	mov    dh,0x53
  4018d3:	adc    BYTE PTR [ebp-0x21],cl
  4018d6:	lea    ebx,gs:[esi-0x1]
  4018da:	jnp    0x4018e5
  4018dc:	adc    al,0x18
  4018de:	imul   ebp,ebp,0xc06bd9ef
  4018e4:	sti    
  4018e5:	outs   dx,DWORD PTR ds:[esi]
  4018e6:	dec    esi
  4018e7:	int    0x77
  4018e9:	mov    dh,0x38
  4018eb:	jge    0x4018c0
  4018ed:	shr    DWORD PTR [eax+edi*1],0xec
  4018f1:	sbb    al,0xef
  4018f3:	inc    eax
  4018f4:	sub    DWORD PTR [ebx],ebx
  4018f6:	add    ah,ch
  4018f8:	jb     0x4018c2
  4018fa:	push   esp
  4018fb:	les    edx,FWORD PTR [edi]
  4018fd:	or     ecx,ebx
  4018ff:	dec    esi
  401900:	push   ecx
  401901:	pop    ss
  401902:	or     bh,dh
  401904:	repz pop edx
  401906:	psubsw mm6,QWORD PTR [ebx+edx*1]
  40190a:	and    edx,edx
  40190c:	test   DWORD PTR [eax+eax*8],esp
  40190f:	js     0x4018ad
  401911:	sahf   
  401912:	inc    esp
  401913:	lea    edx,[edx-0x203ff4da]
  401919:	daa    
  40191a:	mov    eax,ds:0xae314e6e
  40191f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401920:	pop    ebp
  401921:	into   
  401922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401923:	jo     0x4018b3
  401925:	ja     0x4018cc
  401927:	jg     0x401911
  401929:	xor    eax,0x6994de77
  40192e:	scas   al,BYTE PTR es:[edi]
  40192f:	into   
  401930:	push   ss
  401931:	dec    edx
  401932:	les    edx,FWORD PTR [eax+0x71]
  401935:	add    cl,bh
  401937:	inc    ecx
  401938:	or     al,0xc7
  40193a:	dec    edx
  40193b:	inc    esi
  40193c:	xchg   esp,eax
  40193d:	loope  0x401952
  40193f:	mov    eax,0x753d3586
  401944:	or     al,0xfe
  401946:	push   eax
  401947:	fwait
  401948:	cmp    BYTE PTR [ecx],dh
  40194a:	fimul  WORD PTR [ecx+edi*8-0x36cc988c]
  401951:	cmp    BYTE PTR [edi+0x49],bh
  401954:	ins    BYTE PTR es:[edi],dx
  401955:	pop    ebp
  401956:	ror    BYTE PTR [edx+0x386463c2],cl
  40195c:	pop    eax
  40195d:	adc    ah,BYTE PTR [ebp+0x2758199f]
  401963:	lds    edx,FWORD PTR [esi-0xcb3e939]
  401969:	push   0xc2f3c296
  40196e:	mov    edi,0x724dafac
  401973:	pop    edx
  401974:	into   
  401975:	xchg   ebx,eax
  401976:	retf   
  401977:	add    al,0xf2
  401979:	cmp    ebp,DWORD PTR [edx-0x4c]
  40197c:	test   eax,esi
  40197e:	out    0x70,al
  401980:	cmp    ebx,edx
  401982:	or     DWORD PTR [edi-0x14],ebx
  401985:	inc    esi
  401986:	pusha  
  401987:	inc    ebx
  401988:	and    al,0x3b
  40198a:	inc    esp
  40198b:	stc    
  40198c:	out    dx,al
  40198d:	xchg   ebx,eax
  40198e:	push   es
  40198f:	pop    eax
  401990:	pushf  
  401991:	and    eax,0x4604a11
  401996:	inc    esp
  401997:	sbb    al,0xcb
  401999:	test   esi,ebx
  40199b:	push   esp
  40199c:	mov    edi,0x9661c3ad
  4019a1:	outs   dx,DWORD PTR ds:[esi]
  4019a2:	jne    0x401933
  4019a4:	scas   eax,DWORD PTR es:[edi]
  4019a5:	or     BYTE PTR [ecx],dh
  4019a7:	add    edi,0x31
  4019aa:	or     DWORD PTR [ecx+0x4e],ebp
  4019ad:	adc    eax,0x9a3ddd48
  4019b2:	xchg   esp,eax
  4019b3:	hlt    
  4019b4:	inc    ebx
  4019b5:	mov    bl,0x1b
  4019b7:	mov    ch,BYTE PTR [edi-0x6c53ffca]
  4019bd:	adc    bl,BYTE PTR [edx+0x68]
  4019c0:	push   esp
  4019c1:	pop    edx
  4019c2:	or     dh,BYTE PTR [edx-0x50]
  4019c5:	dec    ebx
  4019c6:	xor    BYTE PTR [edi-0x32],cl
  4019c9:	add    al,0x23
  4019cb:	outs   dx,DWORD PTR ds:[esi]
  4019cc:	pop    ebx
  4019cd:	xchg   ebx,eax
  4019ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019cf:	lahf   
  4019d0:	jo     0x401a3c
  4019d2:	xlat   BYTE PTR ds:[ebx]
  4019d3:	in     eax,dx
  4019d4:	jle    0x4019da
  4019d6:	lahf   
  4019d7:	add    ch,dl
  4019d9:	mov    ds:0xd5aff0e0,eax
  4019de:	outs   dx,BYTE PTR ds:[esi]
  4019df:	outs   dx,DWORD PTR ds:[esi]
  4019e0:	add    ebp,DWORD PTR ds:0xafc5b67a
  4019e6:	cmp    al,dl
  4019e8:	neg    dl
  4019ea:	xchg   esp,eax
  4019eb:	fild   WORD PTR [esi]
  4019ed:	push   es
  4019ee:	adc    BYTE PTR [ecx+0x51d49cb1],bl
  4019f4:	loopne 0x40199a
  4019f6:	mov    ecx,0xb39ea20c
  4019fb:	pusha  
  4019fc:	pop    es
  4019fd:	outs   dx,DWORD PTR ds:[esi]
  4019fe:	xor    esp,DWORD PTR [ebx+0x2b4b51e4]
  401a04:	or     eax,DWORD PTR [eax+0x4d]
  401a07:	fs xor al,0x5b
  401a0a:	push   ecx
  401a0b:	mov    edx,0x200be9f7
  401a10:	mov    esi,0xd259ef47
  401a15:	mov    WORD PTR [edx-0x1ae41538],ds
  401a1b:	(bad)  
  401a1d:	pop    ds
  401a1e:	pop    ds
  401a1f:	out    0x72,al
  401a21:	dec    edi
  401a22:	and    BYTE PTR [ebx],dl
  401a24:	outs   dx,BYTE PTR ds:[esi]
  401a25:	fwait
  401a26:	cmp    ch,BYTE PTR [edx+0x60fe198f]
  401a2c:	push   edi
  401a2d:	shl    DWORD PTR ds:0x431ab752,cl
  401a33:	xor    BYTE PTR [eax],dh
  401a35:	mov    dl,BYTE PTR [edi+0x6]
  401a38:	fucomp st(1)
  401a3a:	mov    ds:0xf3021d34,al
  401a3f:	dec    ebp
  401a40:	lar    ebp,WORD PTR [esi+esi*8+0x2b4ecfb7]
  401a48:	add    DWORD PTR [ebx+eax*8+0x11],0xd2c9cdd0
  401a50:	retf   
  401a51:	inc    ecx
  401a52:	cmp    DWORD PTR [esi],esp
  401a54:	ret    0x7fc3
  401a57:	push   edx
  401a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a59:	inc    ecx
  401a5a:	test   al,0x8b
  401a5c:	imul   ecx,ecx,0x5c
  401a5f:	and    esi,DWORD PTR [ecx+0x791131ac]
  401a65:	sbb    BYTE PTR ds:0x7574a435,0xb8
  401a6c:	cld    
  401a6d:	ror    DWORD PTR [esi+0xe],0x47
  401a71:	adc    eax,0x2a84a8a3
  401a76:	push   ecx
  401a77:	imul   edi
  401a79:	inc    esi
  401a7a:	and    al,0x6e
  401a7c:	rcr    DWORD PTR [ebx-0x4488309],0x41
  401a83:	jl     0x401a26
  401a85:	xor    ch,cl
  401a87:	and    al,0xad
  401a89:	outs   dx,DWORD PTR ds:[esi]
  401a8a:	add    DWORD PTR [esi+0x4976ed48],0xfffffff9
  401a91:	jmp    0x7a81a84a
  401a96:	das    
  401a97:	test   eax,edx
  401a99:	js     0x401aaf
  401a9b:	xchg   esp,eax
  401a9c:	mov    edx,0xb30f509f
  401aa1:	mov    edx,0x5c9a568b
  401aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aa7:	pop    eax
  401aa8:	scas   eax,DWORD PTR es:[edi]
  401aa9:	mov    ebx,?
  401aab:	test   edi,esp
  401aad:	fwait
  401aae:	sbb    ebx,DWORD PTR [ebx*4+0x4a26f032]
  401ab5:	test   al,0xf3
  401ab7:	nop
  401ab8:	into   
  401ab9:	int3   
  401aba:	lea    eax,[esi]
  401abc:	(bad)  
  401abe:	(bad)  
  401abf:	mov    eax,DWORD PTR [edi+0x5e]
  401ac2:	xchg   ecx,eax
  401ac3:	das    
  401ac4:	fsubr  DWORD PTR [ebx]
  401ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ac7:	cmp    esp,eax
  401ac9:	add    eax,0xd70e32cf
  401ace:	aad    0x97
  401ad0:	or     ch,al
  401ad2:	mov    edi,0xbc8da0bd
  401ad7:	pop    edx
  401ad8:	inc    edi
  401ad9:	jns    0x401a86
  401adb:	mov    al,0x5e
  401add:	mov    edi,0x9229e728
  401ae2:	xchg   esp,eax
  401ae3:	xor    BYTE PTR [ebx],ch
  401ae5:	addr16 push ds
  401ae7:	test   ecx,esi
  401ae9:	cmp    ah,BYTE PTR [eax-0x25ce39da]
  401aef:	aam    0x6e
  401af1:	(bad)  
  401af2:	out    0x56,al
  401af4:	xor    DWORD PTR [ebx-0x4637063e],edi
  401afa:	jbe    0x401aa6
  401afc:	mov    edi,DWORD PTR [eax+0x5]
  401aff:	xchg   esi,eax
  401b00:	inc    ecx
  401b01:	inc    ecx
  401b02:	setle  bh
  401b05:	imul   BYTE PTR [eax-0x48c2d4d3]
  401b0b:	aam    0xf1
  401b0d:	dec    esp
  401b0e:	stos   BYTE PTR es:[edi],al
  401b0f:	jns    0x401aea
  401b11:	hlt    
  401b12:	inc    esi
  401b13:	test   BYTE PTR [esi-0x49],cl
  401b16:	xchg   ebx,eax
  401b17:	sahf   
  401b18:	xor    esp,DWORD PTR [ecx+0xe6fb1c2]
  401b1e:	gs dec eax
  401b20:	adc    ecx,ebp
  401b22:	(bad)  
  401b23:	jle    0x401b8c
  401b25:	in     al,dx
  401b26:	gs add al,0x8a
  401b29:	scas   al,BYTE PTR es:[edi]
  401b2a:	aaa    
  401b2b:	xlat   BYTE PTR ds:[ebx]
  401b2c:	fadd   QWORD PTR [ebx+edx*8+0x4e0194b2]
  401b33:	push   0xffffffc9
  401b35:	mov    edi,0x769205b7
  401b3a:	sub    DWORD PTR [ebx+0x22],ebx
  401b3d:	and    eax,0xf6463ce6
  401b42:	or     edx,DWORD PTR [ecx]
  401b44:	cmp    ch,dh
  401b46:	jmp    0xf0c480c9
  401b4b:	nop
  401b4c:	sub    al,0x51
  401b4e:	xor    BYTE PTR [esi],0x57
  401b51:	add    al,0x9c
  401b53:	mov    cl,0x53
  401b55:	pop    ebp
  401b56:	shl    BYTE PTR [eax-0x1b61dffe],cl
  401b5c:	jno    0x401b18
  401b5e:	and    DWORD PTR [ebp*8-0x3ed2b5b9],edi
  401b65:	push   es
  401b66:	pop    edx
  401b67:	jns    0x401b0d
  401b69:	mov    edx,0xbcf219f6
  401b6e:	(bad)  
  401b6f:	mov    cl,0x89
  401b71:	jno    0x401b16
  401b73:	jne    0x401b60
  401b75:	mov    dl,0x45
  401b77:	jb     0x401b4c
  401b79:	mov    al,cl
  401b7b:	imul   BYTE PTR [ebx+edx*8+0x5259b961]
  401b82:	inc    ebp
  401b83:	inc    ecx
  401b84:	jp     0x401b92
  401b86:	retf   
  401b87:	push   es
  401b88:	fsub   st,st(7)
  401b8a:	(bad)  
  401b8b:	test   dh,dh
  401b8d:	xor    edx,esi
  401b8f:	sub    al,0xba
  401b91:	cmp    al,0x7
  401b93:	outs   dx,DWORD PTR ds:[esi]
  401b94:	sbb    esi,ebx
  401b96:	or     al,0xe3
  401b98:	stos   BYTE PTR es:[edi],al
  401b99:	sahf   
  401b9a:	fdivr  QWORD PTR [ebx]
  401b9c:	mov    ebx,0xf8c73590
  401ba1:	vpsllq ymm1,ymm6,xmm4
  401ba5:	xchg   ebx,esi
  401ba7:	neg    BYTE PTR [ebx+0x41ac6101]
  401bad:	mov    esp,0x1fcea61b
  401bb2:	cmp    eax,0xb261864c
  401bb7:	mov    bh,0x16
  401bb9:	fwait
  401bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bbb:	daa    
  401bbc:	adc    edi,ebx
  401bbe:	push   esp
  401bbf:	cs scas eax,DWORD PTR es:[edi]
  401bc1:	fadd   DWORD PTR [ecx]
  401bc3:	fisttp WORD PTR [ecx+0x4a]
  401bc6:	jne    0x401b9b
  401bc8:	shr    DWORD PTR [ebx+0x6cec5e7e],cl
  401bce:	mov    al,BYTE PTR [ebx-0x39]
  401bd1:	sub    eax,0xaa6b1d1f
  401bd6:	sbb    al,0x6d
  401bd8:	push   esi
  401bd9:	sahf   
  401bda:	repz cmp ecx,DWORD PTR [eax]
  401bdd:	mov    bh,0x66
  401bdf:	hlt    
  401be0:	add    edi,ebp
  401be2:	jecxz  0x401ba5
  401be4:	out    0xe6,al
  401be6:	mov    ds:0x66e0f9e3,al
  401beb:	sti    
  401bec:	fwait
  401bed:	call   0x9a35:0xddcd8f40
  401bf4:	mov    bh,0x78
  401bf6:	jnp    0x401bda
  401bf8:	lock cs inc esp
  401bfb:	jmp    0xd15123e3
  401c00:	adc    al,0xce
  401c02:	(bad)  
  401c05:	ja     0x401c32
  401c07:	cmp    dl,cl
  401c09:	mov    ah,BYTE PTR [ebx+eiz*4+0x65b359d4]
  401c10:	fcmove st,st(2)
  401c12:	cmp    dh,BYTE PTR ds:0xd31f1263
  401c18:	and    DWORD PTR ds:0xe81d5222,esi
  401c1e:	int3   
  401c1f:	int    0xd5
  401c21:	sar    BYTE PTR [ebp-0x2d],1
  401c24:	(bad)  
  401c25:	mov    ebx,0x4ed5e8e4
  401c2a:	jne    0x401bd3
  401c2c:	retf   
  401c2d:	getsec 
  401c2f:	out    dx,eax
  401c30:	jl     0x401c69
  401c32:	sbb    bl,ch
  401c34:	add    ebp,DWORD PTR [edi+eiz*8-0xf]
  401c38:	std    
  401c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c3a:	mov    ebp,0x1c7b85f1
  401c3f:	inc    edx
  401c40:	cmc    
  401c41:	dec    esi
  401c42:	jne    0x401bee
  401c44:	outs   dx,DWORD PTR ds:[esi]
  401c45:	fstp   st(0)
  401c47:	add    DWORD PTR [ecx],esp
  401c49:	pop    edi
  401c4a:	and    esi,DWORD PTR [ebp-0x64]
  401c4d:	mov    cl,0x7a
  401c4f:	mov    esp,0x5d0f25b
  401c54:	inc    edi
  401c55:	push   es
  401c56:	and    edx,DWORD PTR [ebx-0x12]
  401c59:	push   edx
  401c5a:	(bad)  
  401c5b:	push   ecx
  401c5c:	(bad)  
  401c5d:	jb     0x401c85
  401c5f:	hlt    
  401c60:	jo     0x401bfa
  401c62:	add    al,0x32
  401c64:	imul   ebp,DWORD PTR [ebp+0x5c],0x2afba83a
  401c6b:	push   ds
  401c6c:	xchg   DWORD PTR [ebx-0x62],esp
  401c6f:	pop    edi
  401c70:	mov    ch,0x41
  401c72:	xchg   BYTE PTR [ebp+0x35e50401],dh
  401c78:	mov    esp,0x191ccac7
  401c7d:	sbb    esp,DWORD PTR [ebp-0x4716297b]
  401c83:	addr16 dec edx
  401c85:	loope  0x401c69
  401c87:	inc    eax
  401c88:	add    DWORD PTR [esi],ebp
  401c8a:	pop    eax
  401c8b:	pushf  
  401c8c:	imul   edi,DWORD PTR [edi],0x51f7a205
  401c92:	aaa    
  401c93:	enter  0x8e83,0x68
  401c97:	aas    
  401c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c99:	xchg   esi,eax
  401c9a:	push   ecx
  401c9b:	xor    eax,0xbd4266d6
  401ca0:	pop    edi
  401ca1:	imul   ebp,DWORD PTR [ebp-0x30],0xd26cbed
  401ca8:	push   es
  401ca9:	call   0x3b68:0x2d0fa4ba
  401cb0:	lods   al,BYTE PTR ds:[esi]
  401cb1:	and    ah,BYTE PTR [ecx+0x64138a06]
  401cb7:	stos   BYTE PTR es:[edi],al
  401cb8:	stos   BYTE PTR es:[edi],al
  401cb9:	hlt    
  401cba:	inc    ebp
  401cbb:	jbe    0x401ca9
  401cbd:	push   es
  401cbe:	and    edx,eax
  401cc0:	add    al,BYTE PTR [eax]
  401cc2:	add    DWORD PTR [edx+ebx*1],ebx
  401cc5:	adc    dl,BYTE PTR [esi+0x4e]
  401cc8:	cs inc eax
  401cca:	xacquire xchg DWORD PTR [edi+0x6389dcf8],ebx
  401cd1:	int    0x1
  401cd3:	lods   al,BYTE PTR ds:[esi]
  401cd4:	cmp    al,0xb2
  401cd6:	sub    DWORD PTR [edx+ebx*8+0x6d29a454],ecx
  401cdd:	fs add bl,bh
  401ce0:	adc    eax,0xc588830b
  401ce5:	shr    BYTE PTR [eax-0x411044b2],0x1a
  401cec:	(bad)  
  401ced:	stc    
  401cee:	or     eax,0x2b01eddc
  401cf3:	ret    0x6808
  401cf6:	push   edi
  401cf7:	inc    ebp
  401cf8:	(bad)  
  401cf9:	in     eax,0x59
  401cfb:	jns    0x401cc6
  401cfd:	dec    esp
  401cfe:	cmp    esp,eax
  401d00:	dec    ecx
  401d01:	xchg   ebp,eax
  401d02:	leave  
  401d03:	mov    ds:0x422a8506,al
  401d08:	test   eax,0xa2cc4eac
  401d0d:	jl     0x401cbe
  401d0f:	leave  
  401d10:	test   DWORD PTR [ecx-0x75e30eab],edx
  401d16:	enter  0x5aa,0x84
  401d1a:	inc    ecx
  401d1b:	xor    DWORD PTR [eax+0x2f],0xffffffe1
  401d1f:	inc    esp
  401d20:	repz fidivr DWORD PTR [edi]
  401d23:	fld    DWORD PTR [esi-0x732fcefd]
  401d29:	add    al,0xde
  401d2b:	inc    ebp
  401d2c:	into   
  401d2d:	pop    es
  401d2e:	out    0xf2,eax
  401d30:	jne    0x401d38
  401d32:	out    dx,eax
  401d33:	out    0xc6,eax
  401d35:	icebp  
  401d36:	mov    ds:0x76950389,eax
  401d3b:	imul   esp,DWORD PTR [ebp+0x56],0xb68b9a4a
  401d42:	pushw  ss
  401d44:	sub    ebx,DWORD PTR [ebx-0x13]
  401d47:	adc    eax,0x65cd2e3f
  401d4c:	push   0xc93f2e66
  401d51:	pop    edi
  401d52:	mov    ds:0xb68eac59,eax
  401d57:	dec    esi
  401d58:	mov    cl,0x46
  401d5a:	jne    0x401d05
  401d5c:	xor    BYTE PTR [esi-0x2a5a065d],ah
  401d62:	xor    DWORD PTR [edi+0x21],esi
  401d65:	bound  ebx,QWORD PTR [edi-0x43d60744]
  401d6b:	shr    DWORD PTR [eax-0x6044ce95],0xec
  401d72:	ja     0x401d2f
  401d74:	lods   al,BYTE PTR ds:[esi]
  401d75:	push   edi
  401d76:	iret   
  401d77:	cmp    al,0xe1
  401d79:	call   0x235a68e9
  401d7e:	jnp    0x401dd1
  401d80:	inc    edi
  401d81:	mov    WORD PTR [edx+0x5fd37756],ds
  401d87:	loop   0x401d31
  401d89:	call   FWORD PTR [ebx+edx*1]
  401d8c:	ja     0x401dfc
  401d8e:	(bad)  
  401d8f:	dec    ebp
  401d90:	or     eax,0xaf314456
  401d95:	repz imul esp,DWORD PTR ds:0x72a46201,0x3dea9172
  401da0:	popf   
  401da1:	sub    edi,DWORD PTR [eax]
  401da3:	mov    ebx,0x55f9b008
  401da8:	jmp    0x401d5f
  401daa:	push   ebx
  401dab:	push   ds
  401dac:	retf   
  401dad:	mov    bl,0x2
  401daf:	js     0x401dc1
  401db1:	jmp    0x536d324f
  401db6:	xchg   edi,eax
  401db7:	mov    ch,0x8a
  401db9:	loope  0x401dcf
  401dbb:	mov    ecx,0x358448ab
  401dc0:	clc    
  401dc1:	xlat   BYTE PTR ds:[ebx]
  401dc2:	fmul   QWORD PTR [esi+eax*1-0x7e92c3e7]
  401dc9:	mov    WORD PTR [edi],?
  401dcb:	inc    esp
  401dcc:	pop    ebx
  401dcd:	into   
  401dce:	and    esi,ecx
  401dd0:	inc    edx
  401dd1:	cmp    eax,0xb3cf22cb
  401dd6:	nop
  401dd7:	ss loop 0x401d8f
  401dda:	dec    BYTE PTR [ecx-0x13ccdf2d]
  401de0:	loopne 0x401dc9
  401de2:	jp     0x401d85
  401de4:	pop    ebp
  401de5:	mov    ds:0xcf27e3f6,al
  401dea:	je     0x401e05
  401dec:	mov    fs,WORD PTR [edx]
  401dee:	add    eax,0x1c1c7efe
  401df3:	mov    BYTE PTR [eax+0x4e22f193],al
  401df9:	(bad)  
  401dfa:	in     al,dx
  401dfb:	or     DWORD PTR [ecx+0x19e2909b],ecx
  401e01:	and    eax,0x6ea1bedf
  401e06:	gs out dx,eax
  401e08:	mov    ss,WORD PTR [ebp+0x61ee7761]
  401e0e:	gs dec esi
  401e10:	push   ds
  401e11:	fwait
  401e12:	cmp    eax,0x2652a212
  401e17:	and    eax,0xc94dbf87
  401e1c:	daa    
  401e1d:	in     eax,0x91
  401e1f:	pop    ebx
  401e20:	js     0x401dff
  401e22:	int    0xce
  401e24:	(bad)  
  401e25:	push   ss
  401e26:	fwait
  401e27:	sub    bh,BYTE PTR [esi+0x6f]
  401e2a:	jae    0x401e0b
  401e2c:	cmp    al,0x8b
  401e2e:	adc    eax,0xcb85057a
  401e33:	jmp    0x1cb47f3a
  401e38:	fisub  DWORD PTR [edx-0x22a74001]
  401e3e:	xchg   esp,eax
  401e3f:	mov    BYTE PTR [esi+edi*8-0xd],bh
  401e43:	or     eax,DWORD PTR [esp+esi*8]
  401e46:	cmp    eax,edi
  401e48:	xor    dh,BYTE PTR [edx-0x67]
  401e4b:	arpl   WORD PTR [ecx+0x49cd214f],ax
  401e51:	sbb    al,0xc5
  401e53:	mov    eax,0x11014a1
  401e58:	cmc    
  401e59:	adc    BYTE PTR [edx-0x18],bl
  401e5c:	push   edx
  401e5d:	push   ebx
  401e5e:	mov    ds:0x71655d56,al
  401e63:	mov    ds,WORD PTR [eax+0x59]
  401e66:	jl     0x401e19
  401e68:	mov    cl,ah
  401e6a:	mov    al,ds:0xca86cc71
  401e6f:	jae    0x401ea2
  401e71:	jp     0x401ed3
  401e73:	outs   dx,BYTE PTR ds:[esi]
  401e74:	call   0x845d:0xf1c7b0d
  401e7b:	dec    ebx
  401e7c:	inc    ebp
  401e7d:	pop    esi
  401e7e:	sub    BYTE PTR [ecx-0x6a],dl
  401e81:	fstp   DWORD PTR [eax+0x68]
  401e84:	fwait
  401e85:	test   DWORD PTR [ecx+0x71369e42],0xed3a2d1e
  401e8f:	and    DWORD PTR [edx+0x14],ecx
  401e92:	adc    al,0x7a
  401e94:	js     0x401eda
  401e96:	bound  edx,QWORD PTR [edi]
  401e98:	jecxz  0x401e42
  401e9a:	es gs out dx,eax
  401e9d:	push   es
  401e9e:	jno    0x401ead
  401ea0:	int    0x2c
  401ea2:	jmp    0xfdfc:0x9f8d4de2
  401ea9:	mov    edx,0x6b8afd8d
  401eae:	sub    esi,DWORD PTR [ebx+ecx*2-0x62]
  401eb2:	push   ebx
  401eb3:	fcom   QWORD PTR ds:0x1e206942
  401eb9:	push   0x840a7170
  401ebe:	btr    DWORD PTR [ebx+0x7f],eax
  401ec2:	mov    esp,DWORD PTR [ecx+0x35]
  401ec5:	pop    esi
  401ec6:	xchg   edx,eax
  401ec7:	cmc    
  401ec8:	mov    ecx,0x94d846c1
  401ecd:	out    0xd3,al
  401ecf:	dec    ebp
  401ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed1:	fimul  DWORD PTR [ecx+0x55]
  401ed4:	pop    ecx
  401ed5:	ret    
  401ed6:	jecxz  0x401ef4
  401ed8:	aam    0x38
  401eda:	mov    dl,0xa2
  401edc:	dec    esp
  401edd:	clc    
  401ede:	and    eax,0xb3ecdefc
  401ee3:	fdivr  DWORD PTR [ecx+eiz*4-0x615f1f05]
  401eea:	jmp    0x401e6d
  401eec:	or     BYTE PTR [ecx*8-0x339df7f5],bh
  401ef3:	dec    esp
  401ef4:	adc    al,0xde
  401ef6:	jmp    0x4904:0xc57d50c4
  401efd:	mov    eax,ds:0x89842e5
  401f02:	mov    bh,0x87
  401f04:	xchg   esp,eax
  401f05:	and    al,0xcd
  401f07:	add    esp,DWORD PTR [edx+0x6a]
  401f0a:	gs enter 0x1344,0x1a
  401f0f:	push   edi
  401f10:	pop    esi
  401f11:	test   BYTE PTR [edx+0x1c],bl
  401f14:	je     0x401f4d
  401f16:	jecxz  0x401f92
  401f18:	int    0x17
  401f1a:	sbb    ecx,DWORD PTR [eax]
  401f1c:	das    
  401f1d:	mov    edx,0xeb922dec
  401f22:	mov    bh,BYTE PTR [ebx-0x1b]
  401f25:	ins    DWORD PTR es:[edi],dx
  401f26:	int    0xc8
  401f28:	aam    0xfc
  401f2a:	inc    edx
  401f2b:	loopne 0x401f61
  401f2d:	push   ds
  401f2e:	cld    
  401f2f:	repnz test BYTE PTR [esi-0xf],ah
  401f33:	test   DWORD PTR [esp+ebx*8],esp
  401f36:	push   ebp
  401f37:	mov    edx,0x44d1bd25
  401f3c:	mov    ebp,0x2e874b38
  401f41:	mov    edx,0x33dd8eeb
  401f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f47:	daa    
  401f48:	imul   ebp,DWORD PTR [edi],0x1eeaa3a6
  401f4e:	ja     0x401fa5
  401f50:	sub    BYTE PTR [esi+0x434b99e7],0x77
  401f57:	mov    ah,0xc
  401f59:	dec    edi
  401f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f5b:	cmp    dh,BYTE PTR [ebx+esi*1+0x443ae895]
  401f62:	inc    ebx
  401f63:	out    0x9b,eax
  401f65:	pop    esp
  401f66:	cs out dx,al
  401f68:	data16 fstp st(6)
  401f6b:	mov    ebp,DWORD PTR [eax-0x5e]
  401f6e:	test   DWORD PTR [edi],ebx
  401f70:	sub    ah,dl
  401f72:	dec    esi
  401f73:	xor    eax,0x20d84160
  401f78:	loop   0x401f76
  401f7a:	dec    edx
  401f7b:	or     eax,0x355622d8
  401f80:	mov    cl,0x91
  401f82:	es js  0x402002
  401f85:	retf   0x7fe
  401f88:	jns    0x401f16
  401f8a:	push   0xf3eb9f4f
  401f8f:	das    
  401f90:	rcr    ebp,cl
  401f92:	lahf   
  401f93:	jmp    0x114d:0x9e272984
  401f9a:	mov    eax,0xc91312fd
  401f9f:	aas    
  401fa0:	(bad)  
  401fa1:	mov    cl,0x6
  401fa3:	call   0xea394af4
  401fa8:	outs   dx,BYTE PTR ds:[esi]
  401fa9:	fnstcw WORD PTR [esi+0x2a]
  401fac:	xchg   ebx,eax
  401fad:	push   ds
  401fae:	ins    DWORD PTR es:[edi],dx
  401faf:	xchg   bl,ah
  401fb1:	sub    al,0x8f
  401fb3:	mov    ecx,0xc53e517b
  401fb8:	fstp   DWORD PTR [edi]
  401fba:	push   cs
  401fbb:	popa   
  401fbc:	mov    edi,0xfc3c12c7
  401fc1:	cli    
  401fc2:	or     DWORD PTR [esi+0x6d],esi
  401fc5:	jp     0x401f8a
  401fc7:	pop    esi
  401fc8:	sbb    cl,ah
  401fca:	cmp    BYTE PTR [edi],dh
  401fcc:	or     al,0xc
  401fce:	mov    ds:0xa1632395,al
  401fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fd4:	dec    ebx
  401fd5:	sbb    al,0x87
  401fd7:	sub    al,0xfc
  401fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fda:	xchg   al,dl
  401fdc:	call   0xbc2d237
  401fe1:	fcomi  st,st(6)
  401fe3:	loopne 0x401f8e
  401fe5:	xchg   edx,eax
  401fe6:	sub    DWORD PTR ds:0x2fce2dcc,esi
  401fec:	sbb    eax,0xba5bb2d9
  401ff1:	std    
  401ff2:	mul    esp
  401ff4:	hlt    
  401ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff6:	add    ebx,DWORD PTR [ecx+0x55]
  401ff9:	je     0x401ff3
  401ffb:	mov    eax,0xa0bcc3d4
  402000:	sub    BYTE PTR [ebx+0x68857b05],0x8b
  402007:	xor    eax,0x78911840
  40200c:	pop    edx
  40200d:	in     al,dx
  40200e:	fist   DWORD PTR [ebx+0x51af162a]
  402014:	out    0xca,al
  402016:	mov    eax,ds:0x8dff3452
  40201b:	adc    eax,0x7f9e50af
  402020:	(bad)  
  402021:	ficomp DWORD PTR ds:0xd919ba05
  402027:	adc    esp,DWORD PTR [ecx-0x7b]
  40202a:	das    
  40202b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40202c:	test   DWORD PTR [ebp+ebx*4+0x53],eax
  402030:	sub    DWORD PTR [esi+0x2b],edi
  402033:	pushf  
  402034:	cwde   
  402035:	aam    0xae
  402037:	shl    BYTE PTR [esi],0xac
  40203a:	add    al,BYTE PTR [esi+eiz*4-0x29de5714]
  402041:	(bad)  
  402042:	retf   0xcba0
  402045:	fsub   QWORD PTR [eax]
  402047:	push   edx
  402048:	pusha  
  402049:	icebp  
  40204a:	inc    ebp
  40204b:	les    edx,FWORD PTR [eax+0x29]
  40204e:	or     BYTE PTR [ecx+0x21f18494],ch
  402054:	add    edx,esp
  402056:	dec    ebx
  402057:	sbb    ebx,DWORD PTR [eax]
  402059:	cmp    DWORD PTR [ecx],edi
  40205b:	fs popf 
  40205d:	out    dx,eax
  40205e:	test   al,0x24
  402060:	pop    ss
  402061:	into   
  402062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402063:	stc    
  402064:	repz shr BYTE PTR [eax],cl
  402067:	aaa    
  402068:	cdq    
  402069:	xchg   ebx,eax
  40206a:	or     DWORD PTR [ebp+0x19],esi
  40206d:	push   esi
  40206e:	popf   
  40206f:	fldcw  WORD PTR [ecx-0x41]
  402072:	dec    esp
  402073:	push   ss
  402074:	jae    0x402093
  402076:	test   eax,0x82e0edfa
  40207b:	outs   dx,DWORD PTR ds:[esi]
  40207c:	cmp    al,0x9
  40207e:	fsubrp st(1),st
  402080:	jns    0x402002
  402082:	pop    edi
  402083:	mov    esi,0xc87fd458
  402088:	mov    al,ds:0xe7849b64
  40208d:	stos   DWORD PTR es:[edi],eax
  40208e:	cli    
  40208f:	cdq    
  402090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402091:	and    DWORD PTR [ebp+0x40],esi
  402094:	jb     0x402025
  402096:	or     DWORD PTR [esi+0x34],ebx
  402099:	cmp    BYTE PTR [eax*4-0x74530f8d],cl
  4020a0:	add    ebx,DWORD PTR [ebx]
  4020a2:	xchg   ebx,eax
  4020a3:	jne    0x402124
  4020a5:	in     eax,dx
  4020a6:	dec    eax
  4020a7:	jae    0x4020dc
  4020a9:	scas   al,BYTE PTR es:[edi]
  4020aa:	popa   
  4020ab:	sub    eax,0xa02d019b
  4020b0:	adc    al,0x55
  4020b2:	into   
  4020b3:	adc    cl,BYTE PTR [ecx-0x3ae61346]
  4020b9:	mov    edx,0x53285a30
  4020be:	adc    bh,bh
  4020c0:	hlt    
  4020c1:	hlt    
  4020c2:	xor    eax,0x66f94bc5
  4020c7:	js     0x402108
  4020c9:	sbb    al,0x44
  4020cb:	xor    eax,0xd2536cb7
  4020d0:	stos   DWORD PTR es:[edi],eax
  4020d1:	ficomp WORD PTR [esi+esi*1]
  4020d4:	xchg   BYTE PTR [esi-0x73],al
  4020d7:	loopne 0x402133
  4020d9:	std    
  4020da:	fs inc esp
  4020dc:	fdivr  DWORD PTR ds:0xff878e48
  4020e2:	mov    ebp,DWORD PTR [edi]
  4020e4:	leave  
  4020e5:	or     eax,0x6b604c9e
  4020ea:	icebp  
  4020eb:	or     BYTE PTR [eax],dl
  4020ed:	inc    ecx
  4020ee:	(bad)  
  4020ef:	shr    al,1
  4020f1:	aad    0x85
  4020f3:	jne    0x4020b9
  4020f5:	mov    cl,0x86
  4020f7:	or     al,0x50
  4020f9:	jns    0x40211c
  4020fb:	push   cs
  4020fc:	lock cmp DWORD PTR [ecx+0x42],ecx
  402100:	xlat   BYTE PTR ds:[ebx]
  402101:	pop    ebp
  402102:	add    cl,BYTE PTR [ebp+0x16]
  402105:	fisubr DWORD PTR [ebx-0x6b]
  402108:	(bad)  
  402109:	icebp  
  40210a:	mov    eax,0xd2928f3e
  40210f:	out    dx,al
  402110:	push   esp
  402111:	in     eax,dx
  402112:	nop
  402113:	icebp  
  402114:	ror    DWORD PTR [eax-0x42],cl
  402117:	imul   BYTE PTR [edx-0x27]
  40211a:	(bad)  
  40211b:	cmp    al,0xe5
  40211d:	pop    DWORD PTR [edx+0x27]
  402120:	imul   ebp,DWORD PTR [ecx+0x61937e58],0x4bf52f6d
  40212a:	xor    DWORD PTR [ebp-0x66478258],edi
  402130:	lahf   
  402131:	push   edi
  402132:	dec    edi
  402133:	cli    
  402134:	ret    0xceb2
  402137:	cld    
  402138:	aad    0x8f
  40213a:	nop
  40213b:	jge    0x4020ed
  40213d:	cwde   
  40213e:	cmp    DWORD PTR [ebx+0x5b1221b2],0xffffff94
  402145:	stos   DWORD PTR es:[edi],eax
  402146:	or     bh,BYTE PTR ds:0x7ae6ac0c
  40214c:	fsubr  st,st(1)
  40214e:	imul   edi,DWORD PTR ds:0xc9969e4e,0xffffffac
  402155:	inc    ebx
  402156:	nop
  402157:	push   cs
  402158:	dec    esp
  402159:	aad    0xae
  40215b:	jmp    0x402124
  40215d:	or     DWORD PTR [ebx+esi*1+0x217146fb],ebx
  402164:	cmp    edi,DWORD PTR [ebp-0x1f]
  402167:	jns    0x402125
  402169:	in     al,0x46
  40216b:	popf   
  40216c:	loop   0x402153
  40216e:	rcr    BYTE PTR [edx-0x40],0x4b
  402172:	fdiv   DWORD PTR [ecx+0x20115cb6]
  402178:	ret    
  402179:	(bad)  
  40217a:	adc    cl,ch
  40217c:	in     eax,0xae
  40217e:	out    0xff,al
  402180:	mul    ecx
  402182:	out    dx,eax
  402183:	cwde   
  402184:	pop    es
  402185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402186:	mov    BYTE PTR ds:0x6ebdaddc,ah
  40218c:	lds    eax,FWORD PTR [edi-0x1]
  40218f:	scas   al,BYTE PTR es:[edi]
  402190:	fist   WORD PTR [ecx-0x18f3283d]
  402196:	dec    ecx
  402197:	cld    
  402198:	pop    es
  402199:	test   DWORD PTR [eax-0x74a11e42],eax
  40219f:	aam    0x57
  4021a1:	add    DWORD PTR [ebx],ecx
  4021a3:	je     0x402181
  4021a5:	sub    al,0xda
  4021a7:	push   esi
  4021a8:	pop    ss
  4021a9:	xchg   DWORD PTR [ecx],ebp
  4021ab:	push   cs
  4021ac:	dec    ebx
  4021ad:	mov    al,ds:0xf935fe78
  4021b2:	sbb    al,0x13
  4021b4:	fcom   DWORD PTR [eax+0x7ef98d95]
  4021ba:	out    0xe5,al
  4021bc:	xrelease mov DWORD PTR [esi+esi*1-0x52],ebp
  4021c1:	iret   
  4021c2:	cmp    bl,BYTE PTR [ebx+0x37]
  4021c5:	sub    eax,0x4a0655c3
  4021ca:	cmp    bh,bh
  4021cc:	xlat   BYTE PTR ds:[ebx]
  4021cd:	fmul   DWORD PTR [edi]
  4021cf:	pop    esi
  4021d0:	mov    ah,0x35
  4021d2:	pop    es
  4021d3:	retf   
  4021d4:	mov    ?,WORD PTR [ebx-0x140bba0e]
  4021da:	xor    eax,DWORD PTR [edi]
  4021dc:	data16 (bad) 
  4021de:	(bad)  
  4021e0:	into   
  4021e1:	or     al,0xe3
  4021e3:	add    DWORD PTR [ebp+0x3ca0eca7],0xfffffffc
  4021ea:	jmp    0x402231
  4021ec:	dec    eax
  4021ed:	clc    
  4021ee:	cmovns eax,DWORD PTR [edi+0x11]
  4021f2:	or     ecx,DWORD PTR ds:0xaab7d7f
  4021f8:	adc    esi,DWORD PTR [esp+ecx*4-0x1b891b26]
  4021ff:	(bad)  
  402200:	(bad)  
  402201:	out    0x70,eax
  402203:	inc    edi
  402204:	aam    0xc
  402206:	mov    al,ds:0xe107e10
  40220b:	(bad)  
  40220c:	retf   
  40220d:	push   cs
  40220e:	hlt    
  40220f:	out    dx,al
  402210:	stc    
  402211:	ss cld 
  402213:	xchg   dh,bl
  402215:	cld    
  402216:	in     eax,dx
  402217:	scas   al,BYTE PTR es:[edi]
  402218:	sti    
  402219:	test   BYTE PTR ds:0x91840cf3,bh
  40221f:	mov    ah,0x77
  402221:	jae    0x4021c0
  402223:	or     al,BYTE PTR [ebp+0x60]
  402226:	or     cl,dl
  402228:	ins    DWORD PTR es:[edi],dx
  402229:	sub    bl,ah
  40222b:	(bad)  
  40222c:	rcr    BYTE PTR [ecx+0x49],0x27
  402230:	mov    esi,0x4af93df3
  402235:	out    dx,eax
  402236:	loop   0x4022b1
  402238:	cmp    esi,DWORD PTR [ebp+0x7b]
  40223b:	cdq    
  40223c:	ficomp DWORD PTR [ebp+0x73]
  40223f:	jmp    0x470d7d05
  402244:	or     eax,0x7aec769f
  402249:	das    
  40224a:	mov    dh,0xc2
  40224c:	mov    DWORD PTR [edx],esp
  40224e:	mov    DWORD PTR [edx-0xc6be79c],edx
  402254:	aaa    
  402255:	cmp    dl,BYTE PTR [ebx]
  402257:	sub    ebx,DWORD PTR [edi+0x3]
  40225a:	sbb    BYTE PTR [eax+ebp*4+0x8],bl
  40225e:	pop    ds
  40225f:	and    esp,DWORD PTR [eax+0x20]
  402262:	mov    eax,ds:0x66474fb2
  402267:	mov    esp,0xe94202a9
  40226c:	cmp    ecx,eax
  40226e:	mov    bl,0x44
  402270:	js     0x4021f9
  402272:	aaa    
  402273:	cmp    al,0xda
  402275:	inc    ebp
  402276:	jne    0x402289
  402278:	je     0x4022e2
  40227a:	mov    ecx,0xb8a1bcac
  40227f:	repnz lahf 
  402281:	test   al,0x85
  402283:	outs   dx,DWORD PTR ds:[esi]
  402284:	and    BYTE PTR [eax-0x1e5d68a7],ah
  40228a:	cmp    edx,DWORD PTR [esi+0x6f64ec41]
  402290:	jb     0x40224d
  402292:	sbb    ebp,edi
  402294:	add    ah,bl
  402296:	or     DWORD PTR [ebx+0x1a],ebx
  402299:	pop    ecx
  40229a:	or     BYTE PTR [edi+0x35c91cb2],bh
  4022a0:	es das 
  4022a2:	mov    al,ds:0x4789324c
  4022a7:	inc    esi
  4022a8:	or     bh,BYTE PTR [esi-0x38]
  4022ab:	sub    ebp,esi
  4022ad:	inc    ebp
  4022ae:	jmp    0xd02c:0x8a115ebd
  4022b5:	ja     0x40227d
  4022b7:	push   ecx
  4022b8:	sbb    eax,0x345a0806
  4022bd:	loope  0x4022c0
  4022bf:	je     0x402298
  4022c1:	and    BYTE PTR [ecx-0x37],al
  4022c4:	push   eax
  4022c5:	ins    BYTE PTR es:[edi],dx
  4022c6:	test   esp,edi
  4022c8:	inc    edi
  4022c9:	pop    edx
  4022ca:	repz cmc 
  4022cc:	gs sbb eax,esi
  4022cf:	cmp    al,0xc4
  4022d1:	pushf  
  4022d2:	arpl   WORD PTR [edx+0x2ef69262],bx
  4022d8:	call   0xcd54:0xbe31e73
  4022df:	cmp    al,0x3b
  4022e1:	ret    0x7460
  4022e4:	iret   
  4022e5:	out    dx,eax
  4022e6:	xchg   ebx,eax
  4022e7:	and    dh,cl
  4022e9:	and    BYTE PTR [edx+0x5034063b],cl
  4022ef:	call   0x9df5:0x591efe50
  4022f6:	leave  
  4022f7:	mov    BYTE PTR [ebx+0x60],al
  4022fa:	push   ebp
  4022fb:	add    ah,BYTE PTR [ebx-0x7a]
  4022fe:	sbb    eax,0x80db6bce
  402303:	jo     0x40231e
  402305:	sub    DWORD PTR [edi+0x53],edx
  402308:	and    ch,BYTE PTR [ebx+edi*2+0x2b]
  40230c:	rcl    DWORD PTR [ecx+0x6e],cl
  40230f:	dec    esi
  402310:	das    
  402311:	cdq    
  402312:	inc    eax
  402313:	addr16 (bad) 
  402315:	cmc    
  402316:	mov    ds:0x902b4399,eax
  40231b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40231c:	sbb    eax,0xdbb59383
  402321:	lods   al,BYTE PTR ds:[esi]
  402322:	mov    edx,0xaa42e29f
  402327:	jp     0x402390
  402329:	les    edx,FWORD PTR [esi]
  40232b:	(bad)  
  40232c:	out    dx,eax
  40232d:	mov    esp,0x9cd04f4d
  402332:	dec    esp
  402333:	cmp    al,0x8e
  402335:	sar    DWORD PTR [ebx+ebx*4],0x17
  402339:	aam    0x8b
  40233b:	and    ch,cl
  40233d:	fs imul edi,DWORD PTR cs:[edx+0x25],0xfffffff4
  402343:	xor    eax,0x56a4e162
  402348:	adc    al,0x4b
  40234a:	xor    DWORD PTR [esi],0xab4f1c7
  402350:	cld    
  402351:	fnsave [edx+0x3beb786a]
  402357:	loopne 0x402349
  402359:	lods   al,BYTE PTR ds:[esi]
  40235a:	jno    0x4023c7
  40235c:	jmp    0xed4:0x8b8392ea
  402363:	repz adc al,0x24
  402366:	inc    eax
  402367:	ins    DWORD PTR es:[edi],dx
  402368:	(bad)  
  402369:	fwait
  40236a:	cli    
  40236b:	xchg   esp,eax
  40236c:	shr    BYTE PTR [ecx],0x3c
  40236f:	icebp  
  402370:	mov    ds:0x9840e7b7,eax
  402375:	or     cl,BYTE PTR [ebx-0x70]
  402378:	lock (bad) 
  40237a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40237b:	pop    ebx
  40237c:	push   eax
  40237d:	lock jno 0x40234c
  402380:	cmp    DWORD PTR [ebx-0x2af06606],ecx
  402386:	jo     0x402309
  402388:	dec    eax
  402389:	mov    edx,DWORD PTR [ebp+0xd]
  40238c:	stc    
  40238d:	addr16 inc esp
  40238f:	(bad)  
  402391:	xor    dh,BYTE PTR [edi-0x50]
  402394:	xchg   esp,eax
  402395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402396:	xchg   edx,edi
  402398:	aam    0xcb
  40239a:	sbb    ecx,DWORD PTR [ebx+eiz*1+0x22]
  40239e:	jmp    0x11ad91d7
  4023a3:	fbstp  TBYTE PTR [edx+eax*4]
  4023a6:	push   ebx
  4023a7:	repnz out 0x8f,al
  4023aa:	ja     0x402413
  4023ac:	in     al,dx
  4023ad:	std    
  4023ae:	sub    ebx,DWORD PTR [ecx+0x2f]
  4023b1:	out    dx,al
  4023b2:	dec    esi
  4023b3:	clc    
  4023b4:	frstor [ebp+eiz*1-0x66]
  4023b8:	inc    eax
  4023b9:	add    eax,0x659edd85
  4023be:	loopne 0x402365
  4023c0:	retf   0x5d75
  4023c3:	push   eax
  4023c4:	shl    BYTE PTR [ebx],0x6
  4023c7:	js     0x402367
  4023c9:	(bad)
  4023cc:	cli    
  4023cd:	int    0x8e
  4023cf:	lods   al,BYTE PTR ds:[esi]
  4023d0:	pop    ebx
  4023d1:	aad    0x29
  4023d3:	dec    eax
  4023d4:	inc    ebp
  4023d5:	loope  0x40241f
  4023d7:	ret    
  4023d8:	dec    edx
  4023d9:	xchg   edx,eax
  4023da:	mov    bh,0x2f
  4023dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023dd:	dec    edx
  4023de:	popa   
  4023df:	iret   
  4023e0:	and    DWORD PTR [eax],ebx
  4023e2:	pop    ebx
  4023e3:	push   edi
  4023e4:	xchg   edx,eax
  4023e5:	shr    DWORD PTR [eax],0xca
  4023e8:	jno    0x40242b
  4023ea:	and    eax,0x64330672
  4023ef:	dec    ebx
  4023f0:	mov    BYTE PTR gs:0x8efa35f8,ah
  4023f7:	xchg   BYTE PTR [edi+0x36],al
  4023fa:	cwde   
  4023fb:	test   bl,ah
  4023fd:	push   ds
  4023fe:	cmp    al,0xb
  402400:	add    cl,BYTE PTR [ebp-0x589c2c90]
  402406:	or     al,0x3a
  402408:	ins    BYTE PTR es:[edi],dx
  402409:	aas    
  40240a:	outs   dx,BYTE PTR ds:[esi]
  40240b:	sar    DWORD PTR [ecx],1
  40240d:	inc    esi
  40240e:	(bad)  
  40240f:	rol    BYTE PTR [ebp-0x2b9f99cb],1
  402415:	inc    eax
  402416:	setae  BYTE PTR [edi+0x30345489]
  40241d:	aam    0x1b
  40241f:	xchg   ebx,eax
  402420:	and    al,0xa5
  402422:	(bad)  
  402423:	pop    esp
  402424:	cmp    esp,DWORD PTR cs:[ebp+0x2]
  402428:	cmp    BYTE PTR [eax-0x6e8378f4],0xbc
  40242f:	hlt    
  402430:	jmp    0x9f39:0xf475530a
  402437:	inc    esp
  402438:	out    0x3a,eax
  40243a:	xchg   DWORD PTR [ebp+0x6c],ebp
  40243d:	pop    es
  40243e:	int3   
  40243f:	xchg   esi,eax
  402440:	fld    QWORD PTR [edi]
  402442:	pop    ss
  402443:	fwait
  402444:	ret    
  402445:	bound  ecx,QWORD PTR [edi]
  402447:	and    edx,DWORD PTR [ebp-0x8a0652f]
  40244d:	jbe    0x4024c8
  40244f:	push   edx
  402450:	xchg   ebx,eax
  402451:	dec    esi
  402452:	push   0xc617a684
  402457:	hlt    
  402458:	sbb    BYTE PTR ds:0xaf397c17,0xcc
  40245f:	fstp   TBYTE PTR [ebx]
  402461:	sub    esi,edi
  402463:	(bad)  
  402464:	jg     0x4024de
  402466:	mov    al,0x0
  402468:	and    DWORD PTR ds:0xf8a6e523,edx
  40246e:	add    eax,0xdfc053eb
  402473:	fwait
  402474:	int    0xdf
  402476:	and    edx,DWORD PTR ds:0xe3709969
  40247c:	mov    eax,0x29011048
  402481:	mov    gs,ebx
  402483:	jle    0x402434
  402485:	leave  
  402486:	out    0xe5,eax
  402488:	out    0x57,al
  40248a:	test   DWORD PTR ds:0xa535f796,edx
  402490:	xlat   BYTE PTR ds:[ebx]
  402491:	push   esp
  402492:	out    dx,al
  402493:	inc    edx
  402494:	in     al,0x5d
  402496:	dec    eax
  402497:	jl     0x4024d4
  402499:	xchg   edi,eax
  40249a:	pop    ebx
  40249b:	je     0x402451
  40249d:	jnp    0x40244d
  40249f:	stc    
  4024a0:	ds out dx,eax
  4024a2:	repz shr DWORD PTR [edx+ebx*8-0x98aaceb],1
  4024aa:	clc    
  4024ab:	inc    ecx
  4024ac:	sbb    eax,0x401803d7
  4024b1:	inc    esp
  4024b2:	(bad)  
  4024b3:	cmp    ah,bh
  4024b5:	je     0x402497
  4024b7:	and    eax,0x5288dc66
  4024bc:	pop    es
  4024bd:	fs sti 
  4024bf:	dec    esp
  4024c0:	loop   0x4024c3
  4024c2:	cli    
  4024c3:	mov    dh,0x79
  4024c5:	dec    ebp
  4024c6:	add    al,0x7a
  4024c8:	adc    edx,edx
  4024ca:	cmp    al,0x9a
  4024cc:	sbb    bh,BYTE PTR [ebp+esi*4+0x3eeb9832]
  4024d3:	push   ebp
  4024d4:	xor    eax,0xe15c3491
  4024d9:	lods   al,BYTE PTR ds:[esi]
  4024da:	aad    0x10
  4024dc:	clc    
  4024dd:	mov    edi,0xd61bfec3
  4024e2:	rcr    ebp,cl
  4024e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024e5:	sbb    eax,0xd440e63
  4024ea:	shl    DWORD PTR [ecx+eax*2-0x18],1
  4024ee:	mov    bh,0x13
  4024f0:	out    0x67,eax
  4024f2:	add    DWORD PTR [ebx-0x14],esp
  4024f5:	xchg   DWORD PTR [eax+0x7458c119],esi
  4024fb:	mov    al,0xf1
  4024fd:	pop    edi
  4024fe:	add    ebp,DWORD PTR [eax-0x34]
  402501:	pop    ebp
  402502:	jb     0x402492
  402504:	or     ch,BYTE PTR [ebp+0x465d24e5]
  40250a:	adc    dh,BYTE PTR [ebx-0x48acffbc]
  402510:	dec    edi
  402511:	outs   dx,DWORD PTR ds:[esi]
  402512:	sahf   
  402513:	pop    DWORD PTR [esi+0x27]
  402516:	mov    cs,WORD PTR [ecx+0x6]
  402519:	pop    ebx
  40251a:	imul   ecx,DWORD PTR [esp+eax*4+0xc],0xa2f087e9
  402522:	add    ch,0x2f
  402525:	addr16 out dx,al
  402527:	push   edi
  402528:	cmp    al,0x54
  40252a:	fwait
  40252b:	scas   eax,DWORD PTR es:[edi]
  40252c:	mov    ch,0xf4
  40252e:	dec    ebp
  40252f:	pop    es
  402530:	scas   eax,DWORD PTR es:[edi]
  402531:	push   edx
  402532:	mov    ch,0xd6
  402534:	jns    0x4025b4
  402536:	push   ds
  402537:	mov    ch,BYTE PTR [ebp-0x3]
  40253a:	pop    ss
  40253b:	or     eax,0xd6569318
  402540:	mov    ds:0x518c6058,al
  402545:	cmp    al,0xfd
  402547:	add    al,0x7a
  402549:	push   0x92c00e77
  40254e:	out    dx,eax
  40254f:	nop
  402550:	loope  0x4025ce
  402552:	adc    al,0x69
  402554:	pushf  
  402555:	add    ecx,DWORD PTR [eax]
  402557:	dec    esp
  402558:	ins    BYTE PTR es:[edi],dx
  402559:	mov    ds:0xd80b9664,al
  40255e:	dec    esi
  40255f:	xchg   edi,eax
  402560:	jl     0x4025ab
  402562:	nop
  402563:	popa   
  402564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402565:	mov    WORD PTR [ebx],cs
  402567:	out    0x44,eax
  402569:	sbb    ebx,DWORD PTR [eax+ebx*4]
  40256c:	test   BYTE PTR [ecx+ecx*1+0x16],ah
  402570:	mov    al,0x95
  402572:	sub    ebp,ebx
  402574:	or     dh,BYTE PTR [eax]
  402576:	push   cs
  402577:	sbb    al,ah
  402579:	pop    ds
  40257a:	cmp    ah,BYTE PTR [ebx]
  40257c:	push   esp
  40257d:	jl     0x40254c
  40257f:	or     DWORD PTR [ebx-0x6a],esi
  402582:	aas    
  402583:	(bad)  
  402584:	or     cl,BYTE PTR [edi-0x779d91ab]
  40258a:	rol    WORD PTR [eax+ecx*8],cl
  40258e:	xor    al,0x44
  402590:	cli    
  402591:	xchg   BYTE PTR [edi+0x6d],ch
  402594:	sub    BYTE PTR [eax-0xf],bl
  402597:	lods   al,BYTE PTR ds:[esi]
  402598:	mov    edi,0xad252998
  40259d:	jno    0x4025d3
  40259f:	cwde   
  4025a0:	inc    edx
  4025a1:	and    BYTE PTR [ebx],bl
  4025a3:	adc    cl,al
  4025a5:	retf   0x1c30
  4025a8:	mov    al,ds:0x45c6fe9e
  4025ad:	mov    dl,0x1f
  4025af:	mov    dl,0x5a
  4025b1:	xor    DWORD PTR [eax],edi
  4025b3:	push   ebx
  4025b4:	add    bl,0xb5
  4025b7:	xchg   esi,eax
  4025b8:	adc    al,0x87
  4025ba:	test   DWORD PTR [ebx],edx
  4025bc:	mov    BYTE PTR [ebx+edx*1-0x1],dl
  4025c0:	lods   al,BYTE PTR ds:[esi]
  4025c1:	inc    ecx
  4025c2:	test   eax,0x9dd7b1c4
  4025c7:	and    DWORD PTR [ebx+0x62],0xd9d91522
  4025ce:	push   ebp
  4025cf:	xor    al,0x90
  4025d1:	pop    esi
  4025d2:	cmc    
  4025d3:	sar    BYTE PTR [ebx-0x52593d16],cl
  4025d9:	add    eax,edi
  4025db:	mov    BYTE PTR [ecx+0x52],0xac
  4025df:	or     al,BYTE PTR ds:0xc4f9003a
  4025e5:	mov    cl,al
  4025e7:	fidiv  DWORD PTR [esi-0x19]
  4025ea:	xor    bh,dl
  4025ec:	jge    0x4025f8
  4025ee:	jbe    0x402626
  4025f0:	mov    ds:0xea24e50c,eax
  4025f5:	div    BYTE PTR [ebx-0x7c]
  4025f8:	lods   al,BYTE PTR ds:[esi]
  4025f9:	push   esi
  4025fa:	pop    ebx
  4025fb:	adc    bl,0x91
  4025fe:	push   edi
  4025ff:	mov    esi,0xc73a9c98
  402604:	dec    ebp
  402605:	data16 fcmovbe st,st(7)
  402608:	lods   eax,DWORD PTR ds:[esi]
  402609:	mov    al,es:0x2af6d693
  40260f:	add    DWORD PTR [ebx],0xffffff98
  402612:	cs push ecx
  402614:	sti    
  402615:	repnz fcmovnb st,st(3)
  402618:	mov    ch,dl
  40261a:	iret   
  40261b:	enter  0x2f5b,0x66
  40261f:	add    al,BYTE PTR [ebp-0x39]
  402622:	je     0x402636
  402624:	sbb    al,0xfd
  402626:	add    eax,0x1d28d0c8
  40262b:	in     eax,dx
  40262c:	std    
  40262d:	add    eax,0x239e3158
  402632:	(bad)  
  402633:	retf   0xfbc4
  402636:	sbb    DWORD PTR [esi-0x4d],ebp
  402639:	dec    ecx
  40263a:	jnp    0x4025c2
  40263c:	adc    BYTE PTR [edx-0x4f],al
  40263f:	(bad)  
  402640:	retw   
  402642:	xor    al,0x82
  402644:	cmp    ebp,eax
  402646:	arpl   WORD PTR [ebx-0x72493225],dx
  40264c:	or     dl,BYTE PTR [ebx-0x4e2de105]
  402652:	sbb    eax,0xa9de7f22
  402657:	sub    DWORD PTR [ebp-0x5e],esi
  40265a:	(bad)  
  40265b:	adc    DWORD PTR [eax],esp
  40265d:	jl     0x4026d5
  40265f:	add    ah,cl
  402661:	xchg   ebp,eax
  402662:	fist   WORD PTR [ecx]
  402664:	mov    dl,0x88
  402666:	mov    eax,DWORD PTR [ebp+0x6]
  402669:	mov    ds,WORD PTR [esi+0x24]
  40266c:	sbb    al,0xaf
  40266e:	out    0xfb,al
  402670:	test   ebp,0x46492b5e
  402676:	cmc    
  402677:	add    BYTE PTR [edi-0x6],ah
  40267a:	cmc    
  40267b:	sub    DWORD PTR [eax+0x44],esp
  40267e:	add    BYTE PTR [esi+0x650ec7a6],dh
  402684:	(bad)  
  402687:	jne    0x402674
  402689:	sbb    dh,BYTE PTR [eax+0x65f05818]
  40268f:	ror    edx,cl
  402691:	jmp    0xc09b:0x4289b060
  402698:	int3   
  402699:	ret    
  40269a:	mov    eax,ds:0xf1538ba5
  40269f:	xchg   ecx,eax
  4026a0:	gs cld 
  4026a2:	cmp    bh,al
  4026a4:	push   edi
  4026a5:	xor    edx,DWORD PTR [esi]
  4026a7:	into   
  4026a8:	sub    ebp,DWORD PTR [edx+0x6408a7ac]
  4026ae:	in     al,dx
  4026af:	pushf  
  4026b0:	sub    dl,bh
  4026b2:	iret   
  4026b3:	push   eax
  4026b4:	xor    BYTE PTR [edx],ah
  4026b6:	(bad)  ds:0xebfb73c4
  4026bc:	aam    0xe2
  4026be:	icebp  
  4026bf:	ins    DWORD PTR es:[edi],dx
  4026c0:	dec    al
  4026c2:	mul    al
  4026c4:	jnp    0x402715
  4026c6:	mov    ch,0x82
  4026c8:	cmp    BYTE PTR [ebp-0x57],bh
  4026cb:	sbb    BYTE PTR [edi-0x7c],al
  4026ce:	(bad)  
  4026cf:	xlat   BYTE PTR ds:[ebx]
  4026d0:	inc    edx
  4026d1:	es sub eax,0x54f4488
  4026d7:	pop    es
  4026d8:	xor    edx,ecx
  4026da:	cmp    DWORD PTR [ebx],0xffffffe8
  4026dd:	int3   
  4026de:	stos   DWORD PTR es:[edi],eax
  4026df:	add    DWORD PTR [edx-0x48d5bd5e],esp
  4026e5:	and    DWORD PTR [ebp+0x2f620780],0x68b1f1d8
  4026ef:	outs   dx,BYTE PTR ds:[esi]
  4026f0:	jae    0x4026ef
  4026f2:	fs dec edi
  4026f4:	sahf   
  4026f5:	jo     0x4026e6
  4026f7:	loopne 0x40269e
  4026f9:	sbb    cl,BYTE PTR [eax-0x1c41ce91]
  4026ff:	push   cs
  402700:	ja     0x402742
  402702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402703:	lock loop 0x4026f0
  402706:	ins    DWORD PTR es:[edi],dx
  402707:	or     dl,dh
  402709:	aas    
  40270a:	rcl    BYTE PTR [ecx],cl
  40270c:	ja     0x40277a
  40270e:	jmp    0x3ca3c142
  402713:	sahf   
  402714:	dec    edi
  402715:	push   eax
  402716:	leave  
  402717:	cli    
  402718:	or     ebp,esi
  40271a:	mov    ah,0xcb
  40271c:	inc    edi
  40271d:	lods   al,BYTE PTR ds:[esi]
  40271e:	dec    ecx
  40271f:	loope  0x402736
  402721:	jns    0x402734
  402723:	jne    0x402758
  402725:	mov    eax,ds:0x632298ec
  40272a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40272b:	mov    ds:0xddc6766d,eax
  402730:	add    dl,ah
  402732:	shr    DWORD PTR [ecx+0x868e081],1
  402738:	mov    dh,0x24
  40273a:	lods   al,BYTE PTR ds:[esi]
  40273b:	push   ss
  40273c:	jb     0x402730
  40273e:	mov    eax,ds:0x394f4712
  402743:	mov    ebx,0xb61af7ec
  402748:	mov    edi,0x1e95a4c9
  40274d:	(bad)  
  40274e:	jp     0x4027aa
  402750:	push   ecx
  402751:	(bad)  
  402752:	mov    edx,0xdb50b481
  402757:	les    edi,FWORD PTR [edx+eax*2-0x654e5621]
  40275e:	mov    ch,0x30
  402760:	bswap  edx
  402762:	stc    
  402763:	iret   
  402764:	jne    0x402753
  402766:	push   ecx
  402767:	or     edx,DWORD PTR [esp+ebx*4+0x4e]
  40276b:	lds    esi,FWORD PTR [eax]
  40276d:	add    eax,0x9cac73cf
  402772:	adc    DWORD PTR [edi-0x259b862f],0x4dc4665f
  40277c:	lds    ebx,FWORD PTR [ebx+0x2a]
  40277f:	std    
  402780:	push   cs
  402781:	icebp  
  402782:	dec    ebp
  402783:	jns    0x402763
  402785:	outs   dx,BYTE PTR ds:[esi]
  402786:	pop    esi
  402787:	sar    BYTE PTR [bp+di+0x4a],cl
  40278b:	rcl    dh,cl
  40278d:	out    dx,eax
  40278e:	imul   esp,eax,0xe46cd794
  402794:	dec    esi
  402795:	xor    dh,dl
  402797:	mov    al,0x21
  402799:	je     0x40271d
  40279b:	ins    BYTE PTR es:[edi],dx
  40279c:	or     eax,0x58c7dd95
  4027a1:	lock shl DWORD PTR [eax+0x12],cl
  4027a5:	mov    cl,0xbf
  4027a7:	push   cs
  4027a8:	loop   0x4027b7
  4027aa:	inc    eax
  4027ab:	nop
  4027ac:	(bad)
  4027b0:	xchg   esi,eax
  4027b1:	ss retf 
  4027b3:	mov    ecx,0x3e60f38d
  4027b8:	sub    BYTE PTR [esi],al
  4027ba:	sti    
  4027bb:	ja     0x402820
  4027bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027be:	rcr    BYTE PTR [ebp-0x4978e7f6],1
  4027c4:	loope  0x4027e7
  4027c6:	sub    DWORD PTR [edx-0x282076fb],0xdb68e08f
  4027d0:	lock int 0xfa
  4027d3:	sbb    esi,0xac0a19d0
  4027d9:	pop    ds
  4027da:	test   DWORD PTR [edx-0x47],0xcc032979
  4027e1:	test   DWORD PTR [ebp-0x23b8f0d4],ebp
  4027e7:	xor    esp,DWORD PTR [edx-0x2deda6fa]
  4027ed:	popf   
  4027ee:	cli    
  4027ef:	out    dx,al
  4027f0:	ins    DWORD PTR es:[edi],dx
  4027f1:	xchg   edi,eax
  4027f2:	in     al,0x5f
  4027f4:	push   esi
  4027f5:	mov    dh,0x7e
  4027f7:	in     eax,dx
  4027f8:	(bad)  
  4027f9:	aad    0x27
  4027fb:	fdiv   DWORD PTR [esi]
  4027fd:	in     al,0xe8
  4027ff:	in     al,0xb5
  402801:	and    eax,0xac6ea038
  402806:	jb     0x4027d3
  402808:	(bad)  
  402809:	jecxz  0x4027d6
  40280b:	dec    esp
  40280c:	pusha  
  40280d:	in     eax,dx
  40280e:	and    DWORD PTR [edi+0x4],edi
  402811:	push   ds
  402812:	jns    0x4027d9
  402814:	adc    BYTE PTR [edx+0x8],bl
  402817:	jb     0x4027f8
  402819:	and    eax,0x21acb385
  40281e:	out    dx,eax
  40281f:	cli    
  402820:	and    eax,0x2dd23d3f
  402825:	adc    al,0x1c
  402827:	loop   0x4028a4
  402829:	ins    BYTE PTR es:[edi],dx
  40282a:	jmp    0xa3bf083f
  40282f:	test   BYTE PTR [esi+edx*4+0x6a],0x42
  402834:	pop    ebp
  402835:	outs   dx,DWORD PTR ds:[esi]
  402836:	lods   al,BYTE PTR ds:[esi]
  402837:	mov    ds:0x697c6e05,eax
  40283c:	xchg   edx,eax
  40283d:	in     al,0x80
  40283f:	ss int3 
  402841:	jmp    0xc5fcc0df
  402846:	imul   ebx,DWORD PTR [eax],0x40683f4c
  40284c:	jns    0x40288b
  40284e:	sar    BYTE PTR [esi+0xe8070cb],cl
  402854:	adc    ecx,DWORD PTR [eax-0x3f7c4968]
  40285a:	test   eax,0xd987bd76
  40285f:	pop    ebp
  402860:	jle    0x402878
  402862:	call   esp
  402864:	loop   0x40281d
  402866:	mov    ebp,0x91e3843b
  40286b:	jp     0x402843
  40286d:	stos   BYTE PTR es:[edi],al
  40286e:	call   0x4db1e1ba
  402873:	mov    bl,0xb6
  402875:	(bad)  
  402876:	cmc    
  402877:	in     eax,0xc7
  402879:	inc    edi
  40287a:	and    al,0x6
  40287c:	dec    edx
  40287d:	sub    DWORD PTR [edx-0x440fb375],ebx
  402883:	mov    ebx,0xe9e03ff9
  402888:	pop    ebp
  402889:	in     eax,0x60
  40288b:	out    0xcb,eax
  40288d:	and    al,0x4f
  40288f:	push   ss
  402890:	push   es
  402891:	xchg   edi,esi
  402893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402894:	(bad)  
  402895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402896:	jle    0x4028af
  402898:	jmp    0x9d1ab3b6
  40289d:	imul   esp,esi,0xffffffaa
  4028a0:	in     eax,dx
  4028a1:	and    eax,0x809a46e1
  4028a6:	ja     0x4028df
  4028a8:	xlat   BYTE PTR ds:[ebx]
  4028a9:	icebp  
  4028aa:	popa   
  4028ab:	cmp    al,0xfb
  4028ad:	mov    edi,0x164da596
  4028b2:	clc    
  4028b3:	(bad)  
  4028b5:	sbb    BYTE PTR [eax+0x61667fc9],dh
  4028bb:	jp     0x40292d
  4028bd:	xor    BYTE PTR [edx+0x4a9fc28b],cl
  4028c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c4:	mov    dh,0x3f
  4028c6:	add    edx,DWORD PTR [edi]
  4028c8:	add    eax,0xe87898bc
  4028cd:	idiv   DWORD PTR [ebp-0x40]
  4028d0:	xor    ah,BYTE PTR [ebp-0x40e58837]
  4028d6:	sbb    eax,0x3d174bce
  4028db:	data16 shr BYTE PTR [ebx+0x3b],0x95
  4028e0:	inc    esp
  4028e1:	fs sbb bh,BYTE PTR gs:[ecx-0x3337940b]
  4028e9:	enter  0xda3b,0x6c
  4028ed:	lds    ebx,FWORD PTR ds:0xd7cf674
  4028f3:	mov    ch,0x55
  4028f5:	add    DWORD PTR [esi-0x6],0x982c7e82
  4028fc:	ss add edi,ebp
  4028ff:	mov    ebx,0xe8b75731
  402904:	sub    cl,BYTE PTR [esi+edx*1+0x4fdf34aa]
  40290b:	push   esi
  40290c:	mov    ah,0x35
  40290e:	inc    ebx
  40290f:	add    DWORD PTR [edi-0x725267b4],ebx
  402915:	xor    dh,BYTE PTR [edi]
  402917:	out    dx,al
  402918:	(bad)  
  402919:	rol    eax,cl
  40291b:	aas    
  40291c:	mov    dl,BYTE PTR [edi-0x60]
  40291f:	imul   ebx,DWORD PTR [ecx-0x2b],0x79
  402923:	lods   al,BYTE PTR ds:[esi]
  402924:	dec    eax
  402925:	jae    0x402975
  402927:	sub    BYTE PTR [eax+0x586749e0],bh
  40292d:	inc    eax
  40292e:	xchg   esi,eax
  40292f:	fstp   st(3)
  402931:	jg     0x40297c
  402933:	loopne 0x402969
  402935:	loopne 0x4029b0
  402937:	cld    
  402938:	or     DWORD PTR [esi+0x11],0x6f09b1de
  40293f:	out    0x54,eax
  402941:	mov    WORD PTR [ebp-0x5cca7158],fs
  402947:	cmp    BYTE PTR [ecx+0x25c5d5cd],bh
  40294d:	sbb    eax,0x8fa6a7e8
  402952:	lods   eax,DWORD PTR ds:[esi]
  402953:	or     eax,0x66285b4b
  402958:	fisubr DWORD PTR [si+0x225e]
  40295d:	or     ch,BYTE PTR [ecx]
  40295f:	mov    esp,esi
  402961:	dec    ecx
  402962:	and    ebx,DWORD PTR [ecx-0x75]
  402965:	jo     0x402911
  402967:	inc    eax
  402968:	jmp    0xfd87:0xb690fdea
  40296f:	mov    ah,0x12
  402971:	rcl    DWORD PTR [ecx],1
  402973:	lahf   
  402974:	sbb    ebx,DWORD PTR [esi]
  402976:	(bad)  
  402977:	cwde   
  402978:	mov    ds,WORD PTR [eax+0x4f]
  40297b:	sbb    eax,DWORD PTR [ebp-0x5a5b54ac]
  402981:	(bad)  
  402983:	xchg   esi,eax
  402984:	mov    bh,0x9f
  402986:	mov    ah,0x2a
  402988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402989:	lods   al,BYTE PTR ds:[esi]
  40298a:	(bad)  
  40298b:	lahf   
  40298c:	or     DWORD PTR [edx+ecx*8],edx
  40298f:	sub    edi,ebx
  402991:	mov    bh,0x33
  402993:	mov    edi,0xc502f02f
  402998:	test   DWORD PTR [esi],0x63db42fa
  40299e:	sub    ebp,DWORD PTR [ebx-0x3]
  4029a1:	and    al,0x81
  4029a3:	mov    esi,0xbd19283a
  4029a8:	ja     0x4029bd
  4029aa:	and    al,dh
  4029ac:	mov    esi,0x433ec3d9
  4029b1:	push   ss
  4029b2:	jp     0x402972
  4029b4:	mov    ds:0x5d6be8bb,eax
  4029b9:	out    dx,al
  4029ba:	mov    dl,0x1c
  4029bc:	mov    edi,0xa7b5b9c8
  4029c1:	mov    bh,bl
  4029c3:	dec    ebp
  4029c4:	into   
  4029c5:	not    BYTE PTR [ecx]
  4029c7:	out    0x67,al
  4029c9:	mov    eax,ds:0x58138497
  4029ce:	cwde   
  4029cf:	call   0x277:0x7615f20b
  4029d6:	gs pop es
  4029d8:	mov    ch,0x17
  4029da:	push   0x612b88f0
  4029df:	sub    esp,DWORD PTR [edx-0x27]
  4029e2:	xor    ah,BYTE PTR [edx+edi*8+0x1e]
  4029e6:	fadd   DWORD PTR [esp+ebx*1]
  4029e9:	aaa    
  4029ea:	xor    ch,BYTE PTR [ebx+0x6d9896f1]
  4029f0:	aaa    
  4029f1:	jnp    0x4029e5
  4029f3:	ss jmp 0x25218e5e
  4029f9:	mov    ebx,0x3c8ba3e9
  4029fe:	xor    dh,dh
  402a00:	cmp    esp,DWORD PTR [esi-0x7b90bcdf]
  402a06:	pop    ecx
  402a07:	ins    DWORD PTR es:[edi],dx
  402a08:	jp     0x40298d
  402a0a:	fbstp  TBYTE PTR [esi-0x63]
  402a0d:	in     al,0x7d
  402a0f:	and    BYTE PTR [edx-0x53],0x33
  402a13:	out    dx,eax
  402a14:	pop    edx
  402a15:	dec    edi
  402a16:	ss mov eax,0xa89b700b
  402a1c:	loopne 0x402a42
  402a1e:	pop    edi
  402a1f:	dec    ebx
  402a20:	scas   eax,DWORD PTR es:[edi]
  402a21:	add    al,0xb4
  402a23:	jmp    0x633a:0xe027083e
  402a2a:	stos   BYTE PTR es:[edi],al
  402a2b:	jo     0x402a76
  402a2d:	adc    edi,edx
  402a2f:	or     ebx,ebp
  402a31:	adc    BYTE PTR [eax],al
  402a33:	lds    eax,FWORD PTR [ecx+0x4f]
  402a36:	fst    DWORD PTR [ebx]
  402a38:	bound  esi,QWORD PTR [esi]
  402a3a:	mov    eax,0xb5b93ade
  402a3f:	ror    ah,1
  402a41:	(bad)  
  402a43:	xor    dl,0x86
  402a46:	hlt    
  402a47:	mov    DWORD PTR [ecx+0x6c273f63],edx
  402a4d:	into   
  402a4e:	sbb    esp,eax
  402a50:	mov    dh,0x3d
  402a52:	adc    ch,BYTE PTR [eax+0x6a]
  402a55:	arpl   WORD PTR [eax],cx
  402a57:	xchg   esi,eax
  402a58:	ins    BYTE PTR es:[edi],dx
  402a59:	add    al,0xd4
  402a5b:	loopne 0x402aa6
  402a5d:	adc    edx,DWORD PTR [ecx-0x17]
  402a60:	scas   al,BYTE PTR es:[edi]
  402a61:	in     al,0xe8
  402a63:	loope  0x402aa1
  402a65:	cmc    
  402a66:	sbb    eax,0x5ca82a16
  402a6b:	pusha  
  402a6c:	fsubr  st(6),st
  402a6e:	add    eax,0xe2189cd1
  402a73:	xor    al,0xa5
  402a75:	jmp    0xc61f:0x6ceabb90
  402a7c:	repz repz (bad) ds:0xb24149d9
  402a84:	and    DWORD PTR [ebx+0x51],ebx
  402a87:	in     al,0x9f
  402a89:	pop    ebp
  402a8a:	(bad)  
  402a8b:	in     al,0xfa
  402a8d:	jmp    FWORD PTR [esi+0x7d]
  402a90:	push   esi
  402a91:	mov    DWORD PTR [edi],ebp
  402a93:	test   eax,0xf459f238
  402a98:	sub    eax,0xe8ac7d36
  402a9d:	jle    0x402aa0
  402a9f:	inc    eax
  402aa0:	lds    ebp,FWORD PTR [eax]
  402aa2:	(bad)  
  402aa4:	cmp    BYTE PTR [eax+esi*4],dl
  402aa7:	xchg   edx,eax
  402aa8:	lea    eax,[ecx-0x50]
  402aab:	mov    al,BYTE PTR [eax]
  402aad:	ja     0x402a4b
  402aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ab0:	push   edi
  402ab1:	scas   eax,DWORD PTR es:[edi]
  402ab2:	xor    al,0x2b
  402ab4:	mov    esi,0x37deb64a
  402ab9:	inc    ecx
  402aba:	and    ebp,DWORD PTR [ebx]
  402abc:	dec    eax
  402abd:	ins    DWORD PTR es:[edi],dx
  402abe:	data16 jbe 0x402a47
  402ac1:	repnz mov esi,0x953b2863
  402ac7:	adc    DWORD PTR [edx],eax
  402ac9:	sar    esp,cl
  402acb:	dec    edi
  402acc:	pop    ebx
  402acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ace:	scas   eax,DWORD PTR es:[edi]
  402acf:	aaa    
  402ad0:	mov    cl,0xdf
  402ad2:	aam    0xe3
  402ad4:	cdq    
  402ad5:	mov    esp,0x19e52fb4
  402ada:	jp     0x402acf
  402adc:	jge    0x402b38
  402ade:	jp     0x402a6d
  402ae0:	into   
  402ae1:	ffreep st(4)
  402ae3:	jg     0x402b3b
  402ae5:	xor    al,ah
  402ae7:	mov    eax,ds:0x8f7dde85
  402aec:	and    eax,0x857bec2b
  402af1:	xor    BYTE PTR [ebx],dl
  402af3:	mov    esi,0xc1b6d922
  402af8:	imul   eax,esp,0x2256c7e5
  402afe:	push   ebx
  402aff:	dec    eax
  402b00:	xchg   BYTE PTR [ecx+0x542958b5],ch
  402b06:	cmp    DWORD PTR [eax+0x4412900e],edx
  402b0c:	cmp    BYTE PTR [eax],bh
  402b0e:	stos   DWORD PTR es:[edi],eax
  402b0f:	sahf   
  402b10:	jbe    0x402b5e
  402b12:	enter  0x45ca,0xb9
  402b16:	jp     0x402b23
  402b18:	out    dx,eax
  402b19:	cld    
  402b1a:	call   0xf05b:0x77e3fa32
  402b21:	enter  0x43f1,0xe6
  402b25:	sbb    eax,0x5871738e
  402b2a:	mov    edi,0xba5cf647
  402b2f:	daa    
  402b30:	xchg   DWORD PTR [esi-0x16665d43],edx
  402b36:	adc    al,0x9a
  402b38:	pop    edi
  402b39:	gs mov al,0x77
  402b3c:	mov    bl,0x8a
  402b3e:	int3   
  402b3f:	pop    ecx
  402b40:	neg    DWORD PTR [esi-0xb]
  402b43:	sbb    DWORD PTR [edi-0x1bb8c07a],0xffffffae
  402b4a:	inc    esp
  402b4b:	das    
  402b4c:	inc    edx
  402b4d:	xchg   ebp,eax
  402b4e:	pop    ds
  402b4f:	lods   al,BYTE PTR ds:[esi]
  402b50:	dec    ecx
  402b51:	add    eax,0xfc087d71
  402b56:	mov    ecx,0x268479fe
  402b5b:	aaa    
  402b5c:	daa    
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	pop    esi
  402b5f:	and    eax,DWORD PTR [ecx+0x3e914b51]
  402b65:	xor    BYTE PTR [eax+ebx*2+0xf91e626],bh
  402b6c:	call   0xb98e1fe1
  402b71:	outs   dx,DWORD PTR ds:[esi]
  402b72:	js     0x402bbe
  402b74:	inc    ebp
  402b75:	adc    esp,DWORD PTR es:[ebx-0x659cb4a2]
  402b7c:	out    0x58,eax
  402b7e:	scas   eax,DWORD PTR es:[edi]
  402b7f:	add    BYTE PTR [edi-0x61],0x51
  402b83:	or     edi,edi
  402b85:	mov    eax,0xf30b511a
  402b8a:	popf   
  402b8b:	push   es
  402b8c:	mov    dh,0x74
  402b8e:	pop    esi
  402b8f:	js     0x402bc6
  402b91:	call   0x432aa324
  402b96:	xchg   edi,eax
  402b97:	and    DWORD PTR [eax-0x51],edx
  402b9a:	cmp    al,ah
  402b9c:	mov    ds:0x3f7c7031,eax
  402ba1:	stos   BYTE PTR es:[edi],al
  402ba2:	dec    ecx
  402ba3:	sub    ah,dh
  402ba5:	loopne 0x402bdc
  402ba7:	out    0xff,eax
  402ba9:	sahf   
  402baa:	(bad)  
  402bab:	pop    edx
  402bac:	push   0x1232d787
  402bb1:	mov    edi,DWORD PTR [ebx]
  402bb3:	cmp    bl,BYTE PTR [ecx]
  402bb5:	sbb    al,0xfe
  402bb7:	in     al,dx
  402bb8:	ror    BYTE PTR [ebx+0x7c7f440b],cl
  402bbe:	std    
  402bbf:	jle    0x402c29
  402bc1:	jae    0x402be0
  402bc3:	lock mov cl,0x1e
  402bc6:	lock int 0xd3
  402bc9:	je     0x402bc5
  402bcb:	lds    esi,FWORD PTR [edi-0x48]
  402bce:	aam    0x42
  402bd0:	outs   dx,BYTE PTR ds:[esi]
  402bd1:	outs   dx,DWORD PTR ds:[esi]
  402bd2:	inc    esp
  402bd3:	cdq    
  402bd4:	fwait
  402bd5:	in     eax,dx
  402bd6:	dec    ebp
  402bd7:	cwde   
  402bd8:	ficom  DWORD PTR [edi+ebp*2]
  402bdb:	in     eax,0x36
  402bdd:	cli    
  402bde:	jb     0x402be1
  402be0:	les    edx,FWORD PTR [eax+0x74]
  402be3:	popa   
  402be4:	cli    
  402be5:	inc    edx
  402be6:	pop    edi
  402be7:	xchg   ebp,eax
  402be8:	xor    ebp,ebp
  402bea:	mov    dh,0xb9
  402bec:	jnp    0x402c4c
  402bee:	sbb    dh,BYTE PTR [ecx+0xb8a72c1]
  402bf4:	and    DWORD PTR [eax+edx*8+0x37],0x74
  402bf9:	outs   dx,DWORD PTR ds:[esi]
  402bfa:	jl     0x402c64
  402bfc:	retf   0x621b
  402bff:	cmp    ebx,DWORD PTR [eax-0x27]
  402c02:	out    dx,eax
  402c03:	lods   eax,DWORD PTR ds:[esi]
  402c04:	push   ds
  402c05:	std    
  402c06:	jmp    0x3b81d80f
  402c0b:	mov    BYTE PTR [edi-0xdd54722],ch
  402c11:	loopne 0x402c7d
  402c13:	adc    eax,0xe37c0eb0
  402c18:	sbb    esp,ebp
  402c1a:	les    eax,FWORD PTR [ebx+0x2d]
  402c1d:	or     eax,0x1a627e34
  402c22:	aas    
  402c23:	or     BYTE PTR [ecx],0xc2
  402c26:	in     al,dx
  402c27:	(bad)  
  402c28:	xor    eax,0xf94c7fab
  402c2d:	jnp    0x402c83
  402c2f:	outs   dx,BYTE PTR ds:[esi]
  402c30:	(bad)  [ebx+0x32ebde8]
  402c36:	imul   esp,DWORD PTR [ecx],0x33
  402c39:	or     BYTE PTR [edx+0x460064b4],ch
  402c3f:	fnstsw WORD PTR [ecx+eiz*1]
  402c42:	cld    
  402c43:	and    eax,DWORD PTR [edi-0x6b0a37e4]
  402c49:	(bad)  
  402c4a:	mov    gs,ebp
  402c4c:	xor    BYTE PTR [ebx],ah
  402c4e:	jmp    0x402c0b
  402c50:	and    eax,ebx
  402c52:	push   eax
  402c53:	mov    ds:0x225d9701,al
  402c58:	pop    edx
  402c59:	add    al,0x1e
  402c5b:	cli    
  402c5c:	repz je 0x402cc4
  402c5f:	jnp    0x402be8
  402c61:	and    eax,0x7fbebec2
  402c66:	in     al,dx
  402c67:	sub    ch,bh
  402c69:	push   cs
  402c6a:	jg     0x402c30
  402c6c:	aam    0x22
  402c6e:	lahf   
  402c6f:	xchg   ebp,eax
  402c70:	inc    esp
  402c71:	aas    
  402c72:	popf   
  402c73:	mov    WORD PTR [ebp-0x473c8e68],?
  402c79:	xchg   edx,eax
  402c7a:	sti    
  402c7b:	in     eax,0xb
  402c7d:	fs cmp esi,edx
  402c80:	cli    
  402c81:	or     DWORD PTR [edi-0x24],esi
  402c84:	daa    
  402c85:	mov    ds:0xe8b70c78,al
  402c8a:	ficomp WORD PTR [ecx]
  402c8c:	div    BYTE PTR [edi-0x4c5d0e02]
  402c92:	outs   dx,BYTE PTR ds:[esi]
  402c93:	pop    es
  402c94:	xchg   ebx,eax
  402c95:	sub    DWORD PTR [edx-0x68132fc6],0x10d6f9bb
  402c9f:	jo     0x402c8d
  402ca1:	dec    di
  402ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ca4:	push   esp
  402ca5:	in     al,0xea
  402ca7:	mov    esp,0x2aa208b9
  402cac:	aas    
  402cad:	call   0x9673a94f
  402cb2:	add    eax,0xfcbbd57e
  402cb7:	mov    esi,0xea8dbfc7
  402cbc:	pop    ebp
  402cbd:	imul   DWORD PTR [esi+0xb1b14c0]
  402cc3:	cld    
  402cc4:	out    dx,eax
  402cc5:	inc    ebx
  402cc6:	sbb    eax,0x53c1c948
  402ccb:	mov    ah,0x4e
  402ccd:	mov    ?,esp
  402ccf:	xchg   DWORD PTR [ecx],ebp
  402cd1:	xor    ah,BYTE PTR [edi+edx*1+0x261cd0ef]
  402cd8:	push   edi
  402cd9:	out    dx,al
  402cda:	xor    BYTE PTR [edx-0x115f3db0],ah
  402ce0:	dec    edi
  402ce1:	fisttp DWORD PTR [ebx-0x7ac4b812]
  402ce7:	sbb    DWORD PTR [esp+edx*8],ebp
  402cea:	(bad)  
  402ceb:	imul   edi,edi,0xffffffd6
  402cee:	xlat   BYTE PTR ds:[ebx]
  402cef:	cmp    DWORD PTR [eax-0xc],ebp
  402cf2:	push   edi
  402cf3:	jo     0x402d62
  402cf5:	and    al,0xd3
  402cf7:	pusha  
  402cf8:	cmp    ebx,DWORD PTR [esi+0x74a8640c]
  402cfe:	xor    al,0x70
  402d00:	test   eax,0x373007af
  402d05:	stc    
  402d06:	test   eax,0xbf60c1b3
  402d0b:	call   0x4674:0x9cd744e5
  402d12:	cwde   
  402d13:	and    al,0x1e
  402d15:	and    al,0x20
  402d17:	fwait
  402d18:	adc    dl,BYTE PTR [ecx]
  402d1a:	shl    BYTE PTR [esi-0x4f],1
  402d1d:	cmp    ecx,DWORD PTR [edi-0x71]
  402d20:	mov    ch,0x3b
  402d22:	mov    dh,0x9e
  402d24:	push   ebx
  402d25:	jmp    0x402d26
  402d27:	push   0x6aa3b909
  402d2c:	add    BYTE PTR [ebx+0x58b58bfe],bh
  402d32:	in     eax,dx
  402d33:	sub    DWORD PTR [esp+edi*8],esp
  402d36:	push   esp
  402d37:	jae    0x402d2d
  402d39:	retf   
  402d3a:	outs   dx,BYTE PTR ds:[esi]
  402d3b:	xor    bh,BYTE PTR [esi]
  402d3d:	add    BYTE PTR [eax-0x29],ah
  402d40:	rol    DWORD PTR [eax],cl
  402d42:	mov    edi,esi
  402d44:	push   ecx
  402d45:	ficomp WORD PTR [eax+0x79]
  402d48:	nop
  402d49:	sbb    DWORD PTR [esi-0x13],ebx
  402d4c:	clc    
  402d4d:	(bad)  
  402d4e:	loope  0x402dcd
  402d50:	inc    esp
  402d51:	out    0x61,al
  402d53:	add    cl,ah
  402d55:	enter  0xdd6d,0xea
  402d59:	mov    cl,0x2f
  402d5b:	inc    DWORD PTR [eax-0x1b]
  402d5e:	shl    DWORD PTR [ebx],1
  402d60:	scas   eax,DWORD PTR es:[edi]
  402d61:	jae    0x402d6a
  402d63:	xor    cl,BYTE PTR [eax-0x7f]
  402d66:	aas    
  402d67:	dec    ecx
  402d68:	sub    BYTE PTR [ecx],al
  402d6a:	cmp    BYTE PTR [ebp-0x14],bl
  402d6d:	xor    al,0xda
  402d6f:	push   edx
  402d70:	in     al,0xad
  402d72:	ret    
  402d73:	call   0x655e:0xea39e8fb
  402d7a:	mov    ch,dl
  402d7c:	in     eax,0x32
  402d7e:	pop    es
  402d7f:	inc    edx
  402d80:	sbb    al,0x8d
  402d82:	setae  BYTE PTR [esi]
  402d85:	cmp    ebx,DWORD PTR [edx]
  402d87:	add    DWORD PTR cs:[esi+0x52],edi
  402d8b:	popa   
  402d8c:	rcr    edx,cl
  402d8e:	pop    es
  402d8f:	addr16 pop edx
  402d91:	mov    BYTE PTR [esi],0xa1
  402d94:	js     0x402dbd
  402d96:	lahf   
  402d97:	push   esi
  402d98:	pusha  
  402d99:	mov    bh,0x80
  402d9b:	xlat   BYTE PTR ds:[ebx]
  402d9c:	mov    eax,ds:0xe42f733a
  402da1:	inc    ebp
  402da2:	cmp    al,0x41
  402da4:	mov    ds,WORD PTR [edx-0x3a]
  402da7:	adc    cl,dh
  402da9:	scas   eax,DWORD PTR es:[edi]
  402daa:	aam    0xa
  402dac:	sbb    dh,BYTE PTR [edi-0x2a]
  402daf:	push   ds
  402db0:	mov    ds:0x6176b59,eax
  402db5:	in     al,dx
  402db6:	mov    edx,0x19f6e448
  402dbb:	out    0x1d,eax
  402dbd:	js     0x402d4a
  402dbf:	jl     0x402d9e
  402dc1:	push   esp
  402dc2:	inc    ebp
  402dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dc4:	push   edi
  402dc5:	add    ecx,DWORD PTR [ecx+0x4a]
  402dc8:	fdiv   DWORD PTR [edx-0x228987c8]
  402dce:	stos   BYTE PTR es:[edi],al
  402dcf:	repz jne 0x402e23
  402dd2:	cld    
  402dd3:	shl    edi,cl
  402dd5:	call   0xb5d6:0x6582522d
  402ddc:	push   ebx
  402ddd:	sub    ah,ch
  402ddf:	loop   0x402dce
  402de1:	jecxz  0x402da8
  402de3:	cli    
  402de4:	xchg   DWORD PTR [esi-0x2e9cb73b],esp
  402dea:	mov    al,ds:0x807daa35
  402def:	push   esi
  402df0:	in     eax,dx
  402df1:	fsubrp st(5),st
  402df3:	push   es
  402df4:	ins    BYTE PTR es:[edi],dx
  402df5:	mov    bl,0x8d
  402df7:	test   BYTE PTR [ebx+0x26],0xfb
  402dfb:	jp     0x402e2e
  402dfd:	clc    
  402dfe:	cmp    bl,BYTE PTR [edi-0x26]
  402e01:	pop    ds
  402e02:	pushf  
  402e03:	fcomi  st,st(4)
  402e05:	xor    DWORD PTR [edx+0x1ecd3aeb],ebp
  402e0b:	jbe    0x402db8
  402e0d:	jl     0x402dde
  402e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e10:	in     al,dx
  402e11:	aas    
  402e12:	(bad)  
  402e14:	xchg   ch,cl
  402e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e17:	call   0xe3a2c156
  402e1c:	call   0x2b32:0x4ea069ba
  402e23:	retf   0x9d82
  402e26:	idiv   BYTE PTR ds:0x4f74bd0e
  402e2c:	push   ebp
  402e2d:	les    edi,FWORD PTR [ebx]
  402e2f:	mov    cl,0xbc
  402e31:	fst    QWORD PTR [ebx-0x4cdd5533]
  402e37:	inc    esp
  402e38:	jmp    0x8ec190da
  402e3d:	mov    bl,0x84
  402e3f:	iret   
  402e40:	push   ebx
  402e41:	sub    DWORD PTR [eax-0x3],edx
  402e44:	jbe    0x402e02
  402e46:	push   edi
  402e47:	call   0x7e7050c
  402e4c:	das    
  402e4d:	stos   BYTE PTR es:[edi],al
  402e4e:	lock xchg esp,eax
  402e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e52:	mov    edx,0x5bb93847
  402e57:	inc    esp
  402e58:	add    eax,0x1de751cc
  402e5d:	stos   BYTE PTR es:[edi],al
  402e5e:	and    edx,esp
  402e60:	add    DWORD PTR [eax],0x45391d41
  402e66:	mov    ch,0xb9
  402e68:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e6a:	add    DWORD PTR [esi],ebx
  402e6c:	fs mov ebx,es
  402e6f:	xor    cl,cl
  402e71:	shl    ecx,0xdf
  402e74:	xchg   ebp,eax
  402e75:	cmc    
  402e76:	jmp    0x44a8:0xc24e1781
  402e7d:	(bad)  
  402e7e:	sti    
  402e7f:	std    
  402e80:	ror    BYTE PTR [ebx-0x40915016],cl
  402e86:	dec    dl
  402e88:	jp     0x402e41
  402e8a:	imul   DWORD PTR [ebp+0x45435a08]
  402e90:	and    eax,DWORD PTR [eax-0x67bbcec3]
  402e96:	fisub  DWORD PTR [eax]
  402e98:	xchg   esp,eax
  402e99:	cli    
  402e9a:	pop    es
  402e9b:	jne    0x402e94
  402e9d:	mov    edx,0x3c148de9
  402ea2:	(bad)  
  402ea3:	int    0x37
  402ea5:	aaa    
  402ea6:	inc    ecx
  402ea7:	das    
  402ea8:	mov    dh,0x8f
  402eaa:	(bad)  
  402eab:	loopne 0x402ef1
  402ead:	pusha  
  402eae:	sbb    ebp,DWORD PTR [ecx-0x59096821]
  402eb4:	enter  0xd799,0xa2
  402eb8:	out    dx,al
  402eb9:	pusha  
  402eba:	dec    edx
  402ebb:	pop    esi
  402ebc:	jmp    0x402f34
  402ebe:	sti    
  402ebf:	inc    ecx
  402ec0:	fcomp  st(0)
  402ec2:	push   ds
  402ec3:	push   edx
  402ec4:	sbb    DWORD PTR [edx+0x12],esi
  402ec7:	dec    esp
  402ec8:	cs leave 
  402eca:	xor    ecx,DWORD PTR [ebx]
  402ecc:	std    
  402ecd:	sti    
  402ece:	stos   BYTE PTR es:[edi],al
  402ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed0:	hlt    
  402ed1:	pushf  
  402ed2:	fwait
  402ed3:	popf   
  402ed4:	les    esi,FWORD PTR [ebx]
  402ed6:	jg     0x402eb5
  402ed8:	jns    0x402ed9
  402eda:	pop    ss
  402edb:	in     eax,0x2d
  402edd:	cmp    edi,DWORD PTR [eax]
  402edf:	xchg   esi,eax
  402ee0:	fmul   DWORD PTR [ecx-0x7c933ca1]
  402ee6:	mov    ch,BYTE PTR [eax+ebp*8-0x12]
  402eea:	jl     0x402eab
  402eec:	dec    BYTE PTR [ebp-0x3f]
  402eef:	rcr    ah,1
  402ef1:	jecxz  0x402f4d
  402ef3:	push   eax
  402ef4:	les    ecx,FWORD PTR [esi+ecx*2]
  402ef7:	cmp    edi,ebp
  402ef9:	stos   DWORD PTR es:[edi],eax
  402efa:	outs   dx,DWORD PTR ds:[esi]
  402efb:	dec    edx
  402efc:	sub    eax,0x4b64a204
  402f01:	push   esp
  402f02:	stos   DWORD PTR es:[edi],eax
  402f03:	loope  0x402f13
  402f05:	retf   
  402f06:	push   ecx
  402f07:	mov    ah,0xcc
  402f09:	dec    esi
  402f0a:	pop    es
  402f0b:	lds    ebp,FWORD PTR [ebx]
  402f0d:	mov    WORD PTR [eax-0x51],cs
  402f10:	xchg   esi,eax
  402f11:	sub    eax,0x6be3a1b
  402f16:	int3   
  402f17:	pop    DWORD PTR [edi]
  402f19:	test   eax,0xbd09f7cf
  402f1e:	mov    DWORD PTR [edx],ecx
  402f20:	pop    ecx
  402f21:	jmp    DWORD PTR [ebx+0x30]
  402f24:	jno    0x402ed2
  402f26:	push   ebx
  402f27:	cmp    ebx,DWORD PTR [ebp+ecx*4+0x16107e15]
  402f2e:	iret   
  402f2f:	and    eax,0x9dae55a7
  402f34:	sbb    BYTE PTR [eax],ch
  402f36:	sub    DWORD PTR [ebp+0x66],edi
  402f39:	adc    BYTE PTR [esi+0x7],0xd1
  402f3d:	adc    eax,0x1ce7248e
  402f42:	imul   edx,DWORD PTR [eax+ebx*2+0x7db3049f],0x3d09bd13
  402f4d:	or     BYTE PTR [edx+eax*1],dl
  402f50:	push   edx
  402f51:	xor    al,0x9
  402f53:	sahf   
  402f54:	frstor [edi+0x6346cd26]
  402f5a:	add    dl,bl
  402f5c:	pop    edx
  402f5d:	push   ebx
  402f5e:	sbb    DWORD PTR [ebx+0x1e],ebp
  402f61:	clc    
  402f62:	inc    ebx
  402f63:	sbb    eax,DWORD PTR [ebp+eiz*2-0x2ce4430b]
  402f6a:	jmp    0xc76f:0xe94dd3dc
  402f71:	cs mov bl,0x93
  402f74:	sub    BYTE PTR [eax-0x27a5e694],ch
  402f7a:	pop    ebp
  402f7b:	stos   DWORD PTR es:[edi],eax
  402f7c:	cmp    DWORD PTR [eax+0x6e511ff7],edx
  402f82:	mov    esi,0x7b4ad4b7
  402f87:	inc    ebx
  402f88:	mov    eax,ds:0xe39ec4c6
  402f8d:	xchg   BYTE PTR [eax],al
  402f8f:	mov    edx,0xa7c74b28
  402f94:	or     al,0xc1
  402f96:	or     DWORD PTR [esi],esi
  402f98:	(bad)  
  402f99:	push   cs
  402f9a:	fxam   
  402f9c:	loopne 0x402f4c
  402f9e:	or     al,0x1f
  402fa0:	mov    ds:0xc3ba69a3,al
  402fa5:	jmp    0xac55:0x93eb52e4
  402fac:	or     eax,0x253f70e4
  402fb1:	add    bl,dl
  402fb3:	jae    0x402f79
  402fb5:	pop    ss
  402fb6:	fcomi  st,st(4)
  402fb8:	adc    DWORD PTR [ebx],eax
  402fba:	nop
  402fbb:	cmp    al,0x4f
  402fbd:	jno    0x402fad
  402fbf:	pop    ds
  402fc0:	inc    ebp
  402fc1:	cs mov bl,0xbb
  402fc4:	out    dx,eax
  402fc5:	into   
  402fc6:	cmp    ebx,esp
  402fc8:	push   cs
  402fc9:	(bad)  
  402fca:	mov    esi,0xc00a491c
  402fcf:	push   ss
  402fd0:	mov    bl,BYTE PTR [ebp+eiz*4-0x14ce8923]
  402fd7:	std    
  402fd8:	outs   dx,DWORD PTR ds:[esi]
  402fd9:	out    dx,al
  402fda:	pop    ds
  402fdb:	pop    ss
  402fdc:	add    ecx,DWORD PTR [ebp+0x7b]
  402fdf:	pop    ebx
  402fe0:	mov    ch,0xae
  402fe2:	mov    eax,ds:0xb18b59a9
  402fe7:	shr    DWORD PTR [esi-0x49bf9ab5],1
  402fed:	pop    ebx
  402fee:	cmp    DWORD PTR [edi+0x31eff8f9],ecx
  402ff4:	data16 int3 
  402ff6:	data16 mov ds:0xc25abb13,al
  402ffc:	xchg   DWORD PTR [ebx-0x263a7980],ecx
  403002:	aaa    
  403003:	loop   0x403055
  403005:	cmp    edi,DWORD PTR [eax-0x597e2883]
  40300b:	inc    eax
  40300c:	cdq    
  40300d:	xchg   DWORD PTR [edi-0x7c9d5fc8],ebx
  403013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403014:	aam    0x49
  403016:	test   BYTE PTR [edi+0x61],cl
  403019:	push   esp
  40301a:	test   DWORD PTR [ecx+0x2292dd2a],esp
  403020:	mov    ds:0x2275126c,al
  403025:	jnp    0x402fe0
  403027:	test   DWORD PTR [eax+eiz*1+0x2ea7513c],ebp
  40302e:	add    BYTE PTR [edx+ebx*1+0x6a],0xfd
  403033:	leave  
  403034:	arpl   si,sp
  403036:	arpl   WORD PTR [ecx-0x617fea38],di
  40303c:	push   edx
  40303d:	stos   BYTE PTR es:[edi],al
  40303e:	arpl   WORD PTR [eiz*1+0x3d0e2bbd],bp
  403045:	daa    
  403046:	adc    al,0x98
  403048:	pusha  
  403049:	push   edi
  40304a:	sbb    eax,0x60a3176a
  40304f:	xor    eax,0x86497425
  403054:	adc    al,0xa9
  403056:	fwait
  403057:	xor    eax,0x55a21616
  40305c:	jae    0x403002
  40305e:	icebp  
  40305f:	xchg   ecx,eax
  403060:	fmul   QWORD PTR [esi+ebp*1]
  403063:	popa   
  403064:	add    BYTE PTR [eax+0x48],ah
  403067:	cmp    BYTE PTR [edx+0x799507d],bl
  40306d:	and    BYTE PTR ds:0xcdc644c5,dl
  403073:	add    ah,BYTE PTR [ebp+0xc4d848]
  403079:	or     DWORD PTR [edi+0x52],0x92c6e0cc
  403080:	in     eax,dx
  403081:	les    edi,FWORD PTR [ebx+0x79348429]
  403087:	aad    0xe9
  403089:	lock xor edx,DWORD PTR [ebp+ecx*1-0x42]
  40308e:	aaa    
  40308f:	adc    dl,bh
  403091:	mov    edx,0x1b412ecc
  403096:	das    
  403097:	push   0x6f
  403099:	hlt    
  40309a:	inc    ebp
  40309b:	leave  
  40309c:	xlat   BYTE PTR ds:[ebx]
  40309d:	xchg   ecx,eax
  40309e:	popf   
  40309f:	xchg   ebp,eax
  4030a0:	mov    bh,0xd6
  4030a2:	jle    0x403108
  4030a4:	mov    WORD PTR ds:0x3eb1427b,cs
  4030aa:	stos   DWORD PTR es:[edi],eax
  4030ab:	out    dx,eax
  4030ac:	dec    edi
  4030ad:	push   es
  4030ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030af:	sbb    DWORD PTR [bx+0x736a],esp
  4030b4:	mov    eax,0xbdef0403
  4030b9:	div    BYTE PTR [ebx]
  4030bb:	adc    DWORD PTR [edx-0x2e983d42],edx
  4030c1:	ins    BYTE PTR es:[edi],dx
  4030c2:	push   edi
  4030c3:	sbb    al,0x17
  4030c5:	mov    DWORD PTR [ebp+edi*8-0x64],ecx
  4030c9:	test   BYTE PTR [esi+0x3814d0eb],cl
  4030cf:	test   BYTE PTR [edx+0x20ba293d],cl
  4030d5:	or     esp,DWORD PTR [eax-0x7e2aefbb]
  4030db:	fistp  QWORD PTR [esi]
  4030dd:	mov    esi,0x9584d42e
  4030e2:	xchg   ebp,eax
  4030e3:	hlt    
  4030e4:	repz or eax,0x9609caf0
  4030ea:	fidiv  DWORD PTR [ecx+eax*8]
  4030ed:	jne    0x40312d
  4030ef:	adc    eax,0x25c2343b
  4030f4:	iret   
  4030f5:	xchg   edx,eax
  4030f6:	ins    DWORD PTR es:[edi],dx
  4030f7:	xchg   edi,eax
  4030f8:	push   ecx
  4030f9:	or     al,0x26
  4030fb:	push   0xffffffcf
  4030fd:	ret    0x115c
  403100:	sbb    BYTE PTR [ebx-0x14],0x8
  403104:	mov    bh,0x10
  403106:	add    bl,ch
  403108:	xchg   ebp,eax
  403109:	inc    ebx
  40310a:	push   cs
  40310b:	ds into 
  40310d:	fmul   st,st(7)
  40310f:	cli    
  403110:	sar    DWORD PTR [ebx-0x8e9dd55],0xda
  403117:	and    bl,BYTE PTR [ecx]
  403119:	push   ebx
  40311a:	xchg   esp,eax
  40311b:	jl     0x40311f
  40311d:	les    esi,FWORD PTR [edx]
  40311f:	push   eax
  403120:	cmp    dh,BYTE PTR [edx+0x12]
  403123:	daa    
  403124:	xlat   BYTE PTR ds:[ebx]
  403125:	sub    ah,dl
  403127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403128:	push   ebp
  403129:	cmp    eax,0xd001f0e6
  40312e:	inc    ebp
  40312f:	es popf 
  403131:	adc    ebp,esp
  403133:	xlat   BYTE PTR ds:[ebx]
  403134:	nop
  403135:	mov    ah,BYTE PTR [ecx]
  403137:	fwait
  403138:	mov    ebx,0x8acd50ef
  40313d:	(bad)  
  40313e:	out    dx,al
  40313f:	dec    edx
  403140:	add    DWORD PTR [bx],ebx
  403143:	push   ds
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	mov    dl,al
  403147:	(bad)  
  403148:	cld    
  403149:	fwait
  40314a:	out    dx,al
  40314b:	mov    dl,0xbc
  40314d:	out    0x76,eax
  40314f:	retf   0xad74
  403152:	(bad)  
  403154:	xchg   edi,esp
  403156:	out    0x8,eax
  403158:	pop    ss
  403159:	xchg   edx,eax
  40315a:	stos   DWORD PTR es:[edi],eax
  40315b:	rcl    BYTE PTR [ebx+0x8bfdba1],1
  403161:	fs pop sp
  403164:	lds    ebx,FWORD PTR ds:0xb136de35
  40316a:	rol    DWORD PTR [eax+esi*8-0x24],1
  40316e:	sbb    edx,DWORD PTR [edx+0x44cefda4]
  403174:	fld    QWORD PTR ds:0xf552b3a8
  40317a:	test   DWORD PTR [eax+0x1650b728],ebx
  403180:	test   DWORD PTR [ebx-0xe],edi
  403183:	imul   edi,DWORD PTR [eax-0x4e],0xd45a2ebd
  40318a:	hlt    
  40318b:	fild   QWORD PTR [ebx-0x57]
  40318e:	call   0x75c165b8
  403193:	mov    eax,0x227ec237
  403198:	scas   eax,DWORD PTR es:[edi]
  403199:	nop
  40319a:	(bad)  
  40319c:	pop    edi
  40319d:	add    BYTE PTR [eax-0x9],cl
  4031a0:	dec    eax
  4031a1:	aad    0x19
  4031a3:	add    eax,0xf7644e05
  4031a8:	mov    cl,0xc1
  4031aa:	sub    eax,0xa94f1e69
  4031af:	js     0x403169
  4031b1:	cmp    eax,0x7e02ac91
  4031b6:	ds push eax
  4031b8:	stc    
  4031b9:	test   DWORD PTR [ebx+edx*2+0xe],ecx
  4031bd:	fwait
  4031be:	lea    esp,[ebx]
  4031c0:	test   eax,0x7d4c652
  4031c5:	pop    es
  4031c6:	(bad)  
  4031c7:	sahf   
  4031c8:	mov    eax,ds:0x65baf320
  4031cd:	cwde   
  4031ce:	jl     0x4031af
  4031d0:	jns    0x40320c
  4031d2:	lock adc ch,BYTE PTR [ecx+0x74]
  4031d6:	xchg   edi,eax
  4031d7:	xchg   edi,eax
  4031d8:	aas    
  4031d9:	popa   
  4031da:	lods   al,BYTE PTR ds:[esi]
  4031db:	pushf  
  4031dc:	mov    edx,0xa56cb7be
  4031e1:	mov    ecx,0x8e1e21d5
  4031e6:	adc    eax,0xfececac1
  4031eb:	outs   dx,BYTE PTR ds:[esi]
  4031ec:	add    al,0xe2
  4031ee:	aaa    
  4031ef:	adc    eax,0x5063dd39
  4031f4:	add    al,0xd9
  4031f6:	stc    
  4031f7:	mov    al,ds:0xcf9d7031
  4031fc:	fsub   st,st(2)
  4031fe:	adc    DWORD PTR [edi-0x6963678c],esi
  403204:	es push esp
  403206:	js     0x403213
  403208:	lea    eax,[eax-0x2dfa6791]
  40320e:	or     edx,DWORD PTR [edx]
  403210:	jno    0x4031cb
  403212:	xchg   edx,eax
  403213:	sahf   
  403214:	pop    ecx
  403215:	aas    
  403216:	or     DWORD PTR [edi-0x1d8b91ff],ebp
  40321c:	mov    ah,0x5f
  40321e:	mov    eax,ds:0xa5545f0b
  403223:	xchg   DWORD PTR [edi+ebp*8],edx
  403226:	gs jg  0x4032a4
  403229:	xchg   edi,eax
  40322a:	xor    bh,BYTE PTR [eax+0x265c1e75]
  403230:	enter  0x82fc,0xa7
  403234:	in     al,0xe8
  403236:	stos   DWORD PTR es:[edi],eax
  403237:	int    0xf
  403239:	loopne 0x40324c
  40323b:	and    edx,DWORD PTR ds:0x75d2b02b
  403241:	pop    ss
  403242:	xchg   esp,eax
  403243:	xchg   ebx,eax
  403244:	jo     0x403267
  403246:	xor    eax,0xad27f3a2
  40324b:	cdq    
  40324c:	std    
  40324d:	and    eax,0xbdfef50
  403252:	fiadd  WORD PTR ds:0x23339c57
  403258:	adc    DWORD PTR [edi+0x5e],edx
  40325b:	or     ecx,ecx
  40325d:	xor    DWORD PTR [esp+eiz*4+0x518e654b],ebp
  403264:	add    ch,BYTE PTR [esi]
  403266:	mov    esp,0xedbc5cd3
  40326b:	gs data16 jbe 0x40327c
  40326f:	inc    ecx
  403270:	and    eax,0xfe74c684
  403275:	inc    ebx
  403276:	xchg   edx,eax
  403277:	pop    ecx
  403278:	(bad)  
  403279:	pop    ds
  40327a:	dec    ebx
  40327b:	push   ecx
  40327c:	aas    
  40327d:	ror    DWORD PTR [ebx],cl
  40327f:	add    al,0x4e
  403281:	push   ebx
  403282:	dec    esp
  403283:	cdq    
  403284:	retf   
  403285:	dec    esp
  403286:	xchg   edi,eax
  403287:	adc    edi,ecx
  403289:	jle    0x4032b6
  40328b:	push   cs
  40328c:	push   edx
  40328d:	jmp    0x9bd3:0x744d2162
  403294:	pop    edx
  403295:	test   BYTE PTR [ebx+0x60],0xd2
  403299:	xchg   ecx,eax
  40329a:	in     al,dx
  40329b:	mov    eax,0x49d4d57e
  4032a0:	aam    0xf3
  4032a2:	jp     0x4032ca
  4032a4:	mov    bh,0xd3
  4032a6:	jns    0x403262
  4032a8:	cmp    ch,dl
  4032aa:	es pop eax
  4032ac:	sub    ah,BYTE PTR [ecx]
  4032ae:	sub    edx,DWORD PTR ds:0x2ea12bba
  4032b4:	adc    ch,dh
  4032b6:	inc    edx
  4032b7:	mov    ?,WORD PTR [edx+ecx*1+0x196e12b4]
  4032be:	add    esi,eax
  4032c0:	adc    eax,0xbbc8909b
  4032c5:	out    dx,al
  4032c6:	and    BYTE PTR [edi-0x69],dl
  4032c9:	daa    
  4032ca:	or     eax,0x436bd0bd
  4032cf:	pusha  
  4032d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d1:	jl     0x4032df
  4032d3:	daa    
  4032d4:	iret   
  4032d5:	icebp  
  4032d6:	and    ch,BYTE PTR [esi-0x67]
  4032d9:	and    BYTE PTR [edx+0x7],dl
  4032dc:	cs (bad) 
  4032de:	mov    dh,0x9c
  4032e0:	les    ebp,FWORD PTR [ebp+0x50]
  4032e3:	mov    al,ds:0x34b89e47
  4032e8:	mov    ebp,0x9213ca95
  4032ed:	rcr    dl,cl
  4032ef:	mov    ds:0x2bb11859,eax
  4032f4:	dec    esi
  4032f5:	call   0x6916:0x4c58e296
  4032fc:	sbb    dl,bl
  4032fe:	inc    ebx
  4032ff:	and    dh,BYTE PTR [ebx]
  403301:	or     esi,DWORD PTR [eax]
  403303:	push   0xf02e25a4
  403308:	test   eax,0x68bae9c
  40330d:	mov    edx,0xc59f410a
  403312:	iret   
  403313:	test   eax,0xedbcdb8f
  403318:	lea    eax,[ebp-0x61248ff4]
  40331e:	push   ds
  40331f:	in     al,0x77
  403321:	dec    eax
  403322:	pop    ebp
  403323:	or     eax,0x46b239b2
  403328:	xchg   esp,eax
  403329:	fadd   st,st(5)
  40332b:	(bad)  
  40332c:	and    dl,al
  40332e:	int    0x59
  403330:	aas    
  403331:	inc    edi
  403332:	jns    0x403314
  403334:	jle    0x40331f
  403336:	pop    es
  403337:	pop    esi
  403338:	ins    DWORD PTR es:[edi],dx
  403339:	xor    BYTE PTR [ecx],dh
  40333b:	out    dx,al
  40333c:	xchg   DWORD PTR [ebp-0x28],ebx
  40333f:	mov    esi,0x39a40d97
  403344:	dec    ebx
  403345:	(bad)  
  403346:	mov    ds:0xe8219201,eax
  40334b:	or     BYTE PTR [ecx+0x85144b9],ah
  403351:	rcr    DWORD PTR [edx],1
  403353:	adc    ah,BYTE PTR [ecx+0x16a5f4e1]
  403359:	mov    ?,WORD PTR [eax+0x34c01a66]
  40335f:	lds    ebp,FWORD PTR [esi]
  403361:	xor    dx,WORD PTR [esi-0x2bc72880]
  403368:	(bad)  
  403369:	xor    dh,BYTE PTR [eax]
  40336b:	and    ecx,DWORD PTR [edi+0x4b]
  40336e:	sbb    dh,BYTE PTR [edi]
  403370:	dec    esp
  403371:	jg     0x4032fd
  403373:	cli    
  403374:	adc    DWORD PTR [eax],ebx
  403376:	jmp    0xb841:0xa65f738
  40337d:	aaa    
  40337e:	xchg   DWORD PTR [edi+0x20565949],ebx
  403384:	fbld   TBYTE PTR [ebx]
  403386:	pushf  
  403387:	dec    ebx
  403388:	xchg   ecx,eax
  403389:	jne    0x4033bb
  40338b:	mov    al,0xad
  40338d:	push   ebp
  40338e:	aam    0x25
  403390:	in     al,0x9e
  403392:	dec    eax
  403393:	loop   0x403412
  403395:	stos   BYTE PTR es:[edi],al
  403396:	gs retf 0xe31
  40339a:	mov    edi,0xfc3ca11
  40339f:	out    dx,al
  4033a0:	call   0xd4fb:0x5c0e919e
  4033a7:	jns    0x4033a5
  4033a9:	jmp    0x4e1e5086
  4033ae:	lds    ebp,FWORD PTR [esi+0x5fdd3973]
  4033b4:	inc    edi
  4033b5:	sub    eax,DWORD PTR [edi-0x23e35107]
  4033bb:	out    dx,eax
  4033bc:	jg     0x403355
  4033be:	iret   
  4033bf:	clc    
  4033c0:	mov    ecx,DWORD PTR [ebp+0x2c8293fc]
  4033c6:	push   edx
  4033c7:	push   0x7ef8e623
  4033cc:	and    bh,0x17
  4033cf:	in     eax,dx
  4033d0:	fwait
  4033d1:	in     al,dx
  4033d2:	mov    es,WORD PTR [edx-0xa]
  4033d5:	dec    edx
  4033d6:	stos   DWORD PTR es:[edi],eax
  4033d7:	cs pop ss
  4033d9:	call   0xe305e094
  4033de:	stos   DWORD PTR es:[edi],eax
  4033df:	lea    edx,[edi-0x43]
  4033e2:	inc    edi
  4033e3:	icebp  
  4033e4:	pop    ebp
  4033e5:	mov    ds:0x75fe84db,al
  4033ea:	jp     0x403465
  4033ec:	inc    eax
  4033ed:	push   edx
  4033ee:	adc    eax,edi
  4033f0:	lods   al,BYTE PTR ds:[esi]
  4033f1:	pushw  0x5d3a
  4033f5:	outs   dx,BYTE PTR ds:[esi]
  4033f6:	out    dx,al
  4033f7:	icebp  
  4033f8:	mov    bl,0x4d
  4033fa:	sbb    BYTE PTR [eax],bl
  4033fc:	sahf   
  4033fd:	repnz mov DWORD PTR [ebx-0xedcf3b],esp
  403404:	jle    0x40341e
  403406:	jecxz  0x403481
  403408:	mov    edx,0x8d082880
  40340d:	out    dx,eax
  40340e:	js     0x403400
  403410:	and    al,0x41
  403412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403413:	loope  0x403397
  403415:	sub    al,0x22
  403417:	cli    
  403418:	jnp    0x403489
  40341a:	xchg   esi,eax
  40341b:	pop    esi
  40341c:	je     0x4033c4
  40341e:	outs   dx,BYTE PTR ds:[esi]
  40341f:	xchg   DWORD PTR [ecx],edi
  403421:	pop    esp
  403422:	mov    WORD PTR [ebx+eax*2],?
  403425:	aaa    
  403426:	adc    cl,bl
  403428:	call   0xc00de58f
  40342d:	fwait
  40342e:	and    al,0xaa
  403430:	cmp    bh,ch
  403432:	jno    0x40346d
  403434:	das    
  403435:	pop    esi
  403436:	fwait
  403437:	int    0x49
  403439:	cdq    
  40343a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40343b:	pop    ds
  40343c:	mov    ebx,0x281839ea
  403441:	into   
  403442:	push   ds
  403443:	pop    esp
  403444:	or     al,0x62
  403446:	dec    eax
  403447:	fild   WORD PTR ds:0xaf64ec5a
  40344d:	pop    ebx
  40344e:	jnp    0x4033dc
  403450:	xchg   esp,eax
  403451:	jb     0x4034a8
  403453:	cmp    dh,dl
  403455:	pop    edx
  403456:	retf   0x7b8
  403459:	pop    esi
  40345a:	test   BYTE PTR [ebp-0x66],cl
  40345d:	push   ebp
  40345e:	scas   al,BYTE PTR es:[edi]
  40345f:	xor    eax,0x208af4
  403464:	leave  
  403465:	xor    al,0x0
  403467:	cmp    al,0xf4
  403469:	cmc    
  40346a:	mov    dl,0xc9
  40346c:	pop    es
  40346d:	dec    eax
  40346e:	jno    0x4034b2
  403470:	or     cl,BYTE PTR [ebx+0x624a44b8]
  403476:	cmp    eax,0x4b206ac3
  40347b:	sbb    al,0x2c
  40347d:	push   ds
  40347e:	jle    0x403469
  403480:	std    
  403481:	fwait
  403482:	outs   dx,DWORD PTR ds:[esi]
  403483:	(bad)  
  403485:	stos   BYTE PTR es:[edi],al
  403486:	jmp    0x4034a9
  403488:	pop    esi
  403489:	sub    esp,esp
  40348b:	lea    esp,[esi-0x7f7c7c7d]
  403491:	pop    esi
  403492:	mov    edx,0x9fb3bf64
  403497:	int    0x19
  403499:	jecxz  0x4034ef
  40349b:	or     ebx,DWORD PTR [eax+esi*2-0x863ca4a]
  4034a2:	dec    esi
  4034a3:	dec    ebp
  4034a4:	sbb    al,0x5c
  4034a6:	ror    dh,cl
  4034a8:	and    al,0x63
  4034aa:	retf   
  4034ab:	xor    cl,bl
  4034ad:	loope  0x403446
  4034af:	jmp    0x4034e8
  4034b1:	cmp    BYTE PTR [eax-0x69],dh
  4034b4:	fldenv [ebx+edi*1]
  4034b7:	ficom  DWORD PTR [eax+eiz*1]
  4034ba:	fidiv  DWORD PTR [edx]
  4034bc:	dec    edi
  4034bd:	mov    ebp,0x53f11c9a
  4034c2:	add    DWORD PTR [ebx-0x1560add7],edi
  4034c8:	test   ch,0xd
  4034cb:	jmp    0x4034b7
  4034cd:	jns    0x40344f
  4034cf:	mov    bh,0x7e
  4034d1:	fsubr  DWORD PTR [eax+ebx*1]
  4034d4:	call   0x8663:0xbaa198ca
  4034db:	mov    esp,0x3ba7f766
  4034e0:	push   ebp
  4034e1:	xchg   DWORD PTR [esi+0x51f7dca1],ebp
  4034e7:	dec    ecx
  4034e8:	pop    esp
  4034e9:	loop   0x4034ea
  4034eb:	mov    WORD PTR [ebp-0x9a59636],fs
  4034f1:	daa    
  4034f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f3:	sbb    ebx,esp
  4034f5:	cmc    
  4034f6:	scas   al,BYTE PTR es:[edi]
  4034f7:	outs   dx,BYTE PTR ds:[esi]
  4034f8:	mov    bl,0xb3
  4034fa:	jge    0x4034b8
  4034fc:	cs ret 
  4034fe:	mov    cl,BYTE PTR [ebp+0x24]
  403501:	pop    edi
  403502:	mov    dl,BYTE PTR [ebx-0x6a912fa8]
  403508:	sbb    DWORD PTR [ebx+0x2b],0x4a
  40350c:	inc    ecx
  40350d:	pop    ss
  40350e:	push   es
  40350f:	in     al,dx
  403510:	out    dx,al
  403511:	shl    ecx,1
  403513:	inc    ecx
  403514:	cmp    edi,ebp
  403516:	push   ds
  403517:	xchg   ebx,eax
  403518:	daa    
  403519:	pusha  
  40351a:	xchg   ebp,eax
  40351b:	fisubr WORD PTR [ebx-0x2258872b]
  403521:	int    0x30
  403523:	jmp    0x4034dc
  403525:	ror    DWORD PTR [esi-0x5e],1
  403528:	mov    cl,0xf0
  40352a:	inc    esi
  40352b:	inc    ebp
  40352c:	push   ss
  40352d:	(bad)  
  40352e:	loope  0x403541
  403530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403531:	outs   dx,BYTE PTR ds:[esi]
  403532:	sbb    esi,ecx
  403534:	xor    ch,BYTE PTR [esi+eax*8-0x65]
  403538:	cwde   
  403539:	outs   dx,DWORD PTR ds:[esi]
  40353a:	popf   
  40353b:	adc    eax,0x6c99fe64
  403540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403541:	sbb    DWORD PTR [ebx+ebp*2-0x34517251],0x79c350cc
  40354c:	mov    ds:0x858c02b8,eax
  403551:	lds    ecx,FWORD PTR [esi+0x3e]
  403554:	ins    BYTE PTR es:[edi],dx
  403555:	arpl   WORD PTR [ebx],ax
  403557:	cmc    
  403558:	push   ss
  403559:	sub    eax,0xb37c62d3
  40355e:	into   
  40355f:	mov    bh,0xa9
  403561:	jmp    0x40359e
  403563:	cld    
  403564:	outs   dx,DWORD PTR ds:[esi]
  403565:	hlt    
  403566:	shl    DWORD PTR [esi],1
  403568:	add    DWORD PTR [ebx+0x2d2be16f],esp
  40356e:	inc    esp
  40356f:	or     DWORD PTR [ecx],ebp
  403571:	adc    eax,0x5b27b391
  403576:	das    
  403577:	arpl   WORD PTR [ecx+0x5f5b9838],cx
  40357d:	daa    
  40357e:	in     eax,0x5f
  403580:	mov    ebp,0x5a141379
  403585:	in     al,dx
  403586:	pushf  
  403587:	gs js  0x40351f
  40358a:	callw  0x8c79
  40358e:	xlat   BYTE PTR ds:[ebx]
  40358f:	cmp    eax,eax
  403591:	outs   dx,BYTE PTR ds:[esi]
  403592:	fimul  DWORD PTR [esi]
  403594:	loop   0x403528
  403596:	repnz dec edx
  403598:	push   0xffffffcd
  40359a:	sub    al,bl
  40359c:	test   eax,0xd1276360
  4035a1:	inc    edx
  4035a2:	push   esi
  4035a3:	sub    cl,BYTE PTR cs:[ebx-0x5c]
  4035a7:	pop    ebx
  4035a8:	aad    0xd7
  4035aa:	fidivr DWORD PTR [ecx-0x1c]
  4035ad:	jne    0x4035e2
  4035af:	push   edx
  4035b0:	mov    ecx,edi
  4035b2:	add    DWORD PTR [ebx+0x3e9827d],0x0
  4035b9:	out    0xd7,eax
  4035bb:	clc    
  4035bc:	push   eax
  4035bd:	push   ebp
  4035be:	sahf   
  4035bf:	stc    
  4035c0:	fcmovb st,st(7)
  4035c2:	imul   ebp,DWORD PTR [ebp+ebx*1-0x6a6f3a73],0xf685938a
  4035cd:	in     eax,0x5
  4035cf:	mov    dl,0x1
  4035d1:	and    al,0x50
  4035d3:	sti    
  4035d4:	inc    ebx
  4035d5:	mov    dh,0x26
  4035d7:	jno    0x40360c
  4035d9:	push   esi
  4035da:	adc    eax,0x38943b27
  4035df:	cmp    eax,0x6f2e6ba0
  4035e4:	lahf   
  4035e5:	int3   
  4035e6:	dec    eax
  4035e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035e8:	sar    DWORD PTR [esi+0x7],cl
  4035eb:	lds    ebx,FWORD PTR [ecx-0xa]
  4035ee:	push   esi
  4035ef:	sub    DWORD PTR [edi+0x442f3e40],eax
  4035f5:	add    al,0x5c
  4035f7:	pop    ss
  4035f8:	mov    ecx,0x69a7e458
  4035fd:	and    BYTE PTR [esi+0x2caf7a5d],bh
  403603:	push   0xffffffc2
  403605:	(bad)  
  403606:	(bad)  
  403607:	dec    edx
  403608:	dec    esi
  403609:	sbb    al,0xa4
  40360b:	lea    eax,[ecx]
  40360d:	retfw  
  40360f:	and    BYTE PTR [esi-0x28],al
  403612:	bound  ecx,QWORD PTR [eax]
  403614:	shl    cl,1
  403616:	mov    ?,eax
  403618:	and    DWORD PTR [eax-0x41e983f5],edi
  40361e:	repnz mov al,0x3c
  403621:	(bad)  
  403622:	fst    QWORD PTR [eax+ebx*8+0x74585ca9]
  403629:	stos   DWORD PTR es:[edi],eax
  40362a:	jbe    0x403671
  40362c:	inc    edi
  40362d:	js     0x40364f
  40362f:	sbb    al,0x3b
  403631:	jmp    FWORD PTR ds:0x3fbb5560
  403637:	popa   
  403638:	inc    ebp
  403639:	hlt    
  40363a:	outs   dx,DWORD PTR ds:[esi]
  40363b:	repnz xchg eax,ebp
  40363e:	(bad)  
  40363f:	aaa    
  403640:	adc    cl,BYTE PTR [ebp-0x39d76141]
  403646:	adc    ch,cl
  403648:	arpl   WORD PTR [ecx],di
  40364a:	push   esi
  40364b:	xchg   edx,ebp
  40364d:	sbb    al,0x8d
  40364f:	scas   al,BYTE PTR es:[edi]
  403650:	enter  0xc91,0x3e
  403654:	cdq    
  403655:	addr16 (bad) 
  403657:	jecxz  0x403626
  403659:	push   ds
  40365a:	push   edi
  40365b:	and    eax,0x8a9a858
  403660:	mov    ds,WORD PTR [ecx]
  403662:	xchg   edx,eax
  403663:	stos   BYTE PTR es:[edi],al
  403664:	aaa    
  403665:	fistp  QWORD PTR [esi+0x4df6f0ca]
  40366b:	stc    
  40366c:	or     BYTE PTR [eax+0x2d],ch
  40366f:	jp     0x40363f
  403671:	mov    ebp,DWORD PTR [ebp-0x4]
  403674:	xor    bl,BYTE PTR [eax]
  403676:	sahf   
  403677:	pop    eax
  403678:	xchg   edx,eax
  403679:	call   0x56c52425
  40367e:	push   ss
  40367f:	call   WORD PTR [esi-0x18375c21]
  403686:	push   0xfc0b5d7d
  40368b:	sbb    BYTE PTR gs:[esi],dh
  40368e:	sbb    DWORD PTR [ecx],0x44
  403691:	push   eax
  403692:	(bad)  
  403693:	or     eax,0xd3751e8b
  403698:	(bad)  
  403699:	ds dec ebx
  40369b:	dec    edx
  40369c:	icebp  
  40369d:	lahf   
  40369e:	pushf  
  40369f:	in     al,0x2a
  4036a1:	pop    ds
  4036a2:	in     eax,0xd3
  4036a4:	shr    DWORD PTR [esi],0xa4
  4036a7:	inc    eax
  4036a8:	adc    ah,BYTE PTR [edx+0x171c81c9]
  4036ae:	and    BYTE PTR [eax+0x1dc3cb6b],bh
  4036b4:	add    ah,BYTE PTR [ecx]
  4036b6:	sub    eax,0x9dbeb2c1
  4036bb:	mov    eax,0xb09dbe48
  4036c0:	inc    edi
  4036c1:	scas   eax,DWORD PTR es:[edi]
  4036c2:	fs adc al,dh
  4036c5:	lock push es
  4036c7:	imul   ebp,esp,0x323e966
  4036cd:	repnz sar DWORD PTR [edi],1
  4036d0:	mov    ecx,DWORD PTR [ecx+edi*2-0x313d6165]
  4036d7:	sbb    BYTE PTR [esi],al
  4036d9:	sbb    cl,BYTE PTR ds:0x13009cc
  4036df:	(bad)  
  4036e1:	pop    ss
  4036e2:	mov    WORD PTR [eax+0x30],ds
  4036e5:	jbe    0x403695
  4036e7:	ins    BYTE PTR es:[edi],dx
  4036e8:	rcl    DWORD PTR [eax-0x3c],1
  4036eb:	(bad)  
  4036ec:	ror    BYTE PTR [ecx+ebx*8],cl
  4036ef:	(bad)  
  4036f0:	mov    esi,0xb8196f4f
  4036f5:	rcr    DWORD PTR [esi-0x16],0x7d
  4036f9:	fwait
  4036fa:	or     al,0x1a
  4036fc:	popa   
  4036fd:	or     ecx,DWORD PTR [eax-0x20]
  403700:	stos   BYTE PTR es:[edi],al
  403701:	xchg   DWORD PTR [ebp+0x6c],ecx
  403704:	adc    eax,0x3ac7044e
  403709:	sbb    edx,0x13
  40370c:	bound  esp,QWORD PTR [ebp-0x4e]
  40370f:	cwde   
  403710:	fld    DWORD PTR [eax]
  403712:	and    eax,DWORD PTR [eax+0x29]
  403715:	push   edx
  403716:	dec    ebp
  403717:	mov    cl,0xd8
  403719:	out    0x3d,al
  40371b:	(bad)  
  40371c:	xlat   BYTE PTR ds:[ebx]
  40371d:	xor    BYTE PTR [eax+0x582fe798],bh
  403723:	imul   esi,DWORD PTR [eax-0x38],0xd8faafad
  40372a:	imul   ebp,ebx,0xf179a1fa
  403730:	jle    0x403763
  403732:	mov    bh,0xff
  403734:	adc    cl,BYTE PTR [edx]
  403736:	mov    dl,0xef
  403738:	mov    dh,0x9f
  40373a:	xlat   BYTE PTR ds:[ebx]
  40373b:	retf   0x1b01
  40373e:	or     al,BYTE PTR [ebp+0x9]
  403741:	mov    edx,0x594d95ed
  403746:	fbld   TBYTE PTR [ecx-0x6feeeb0d]
  40374c:	dec    edi
  40374d:	arpl   WORD PTR [eax],di
  40374f:	mul    DWORD PTR [edi-0x5025db80]
  403755:	mov    ch,0x2a
  403757:	mov    ch,0x7e
  403759:	cmp    DWORD PTR [ebx-0x6bbf2570],esi
  40375f:	cmp    DWORD PTR [esp+eax*2-0x32],ebp
  403763:	jns    0x40375d
  403765:	pop    esi
  403766:	in     al,dx
  403767:	and    ecx,ebx
  403769:	pushf  
  40376a:	mov    ecx,0xd599705
  40376f:	add    DWORD PTR [ebp+0x4d2e0f80],esi
  403775:	gs addr16 aas 
  403778:	jge    0x4037d9
  40377a:	mov    bl,BYTE PTR [esi+eax*4]
  40377d:	sub    ah,BYTE PTR [eax+esi*8]
  403780:	repnz in al,0xe4
  403783:	jl     0x403730
  403785:	imul   esp,edx,0x4cc9921d
  40378b:	pop    es
  40378c:	xchg   esp,eax
  40378d:	mov    edx,0x8b9f691c
  403792:	add    BYTE PTR [ecx-0x74],ah
  403795:	test   eax,0xd0aa7121
  40379a:	xchg   edx,eax
  40379b:	leave  
  40379c:	cmp    edx,DWORD PTR [ebx]
  40379e:	dec    esp
  40379f:	push   eax
  4037a0:	inc    ecx
  4037a1:	dec    edi
  4037a2:	sub    al,0x8a
  4037a4:	xchg   esi,eax
  4037a5:	ficom  WORD PTR [edi-0x46]
  4037a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037a9:	pushf  
  4037aa:	out    0xd8,al
  4037ac:	fst    DWORD PTR [edi+eax*1-0x29]
  4037b0:	aas    
  4037b1:	inc    eax
  4037b2:	les    ecx,FWORD PTR [edi]
  4037b4:	pop    eax
  4037b5:	mov    eax,ds:0x5736ffe6
  4037ba:	mov    ecx,0x416c4029
  4037bf:	fst    QWORD PTR ds:0xf436132d
  4037c5:	rcl    DWORD PTR [ecx+0x10],cl
  4037c8:	push   0x419e87de
  4037cd:	int3   
  4037ce:	fiadd  WORD PTR [eax-0x4a]
  4037d1:	xchg   esi,eax
  4037d2:	jmp    0x442e:0xd5c5569e
  4037d9:	dec    edx
  4037da:	add    dl,ah
  4037dc:	fs js  0x403851
  4037df:	cmc    
  4037e0:	dec    ecx
  4037e1:	jmp    0x9d8c:0xbf24226e
  4037e8:	add    eax,DWORD PTR [ebx+0x5e]
  4037eb:	mov    bl,0x7f
  4037ed:	jge    0x403814
  4037ef:	stc    
  4037f0:	scas   al,BYTE PTR es:[edi]
  4037f1:	rcr    DWORD PTR [esi-0x59],cl
  4037f4:	dec    ecx
  4037f5:	jle    0x40380d
  4037f7:	xor    BYTE PTR [eax-0x4e],0x77
  4037fb:	(bad)  
  4037fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037fd:	test   al,0x1d
  4037ff:	fsub   st(6),st
  403801:	xor    al,0x87
  403803:	cli    
  403804:	pop    edx
  403805:	imul   DWORD PTR [eax]
  403807:	mov    esp,0xa6ccee22
  40380c:	jns    0x40383d
  40380e:	mov    edi,0x55de6af0
  403813:	(bad)  
  403814:	in     eax,dx
  403815:	push   edi
  403816:	ins    DWORD PTR es:[edi],dx
  403817:	xchg   esi,eax
  403818:	sbb    BYTE PTR [eax+0x28],0x11
  40381c:	sbb    eax,0x1b555490
  403821:	fnstcw WORD PTR [edx-0xc2f8a41]
  403827:	mov    dh,0x41
  403829:	mov    esi,0xeb68c2eb
  40382e:	mov    esp,0x485c1c02
  403833:	xchg   ebx,eax
  403834:	push   ss
  403835:	out    0x36,al
  403837:	shl    al,cl
  403839:	push   ds
  40383a:	nop
  40383b:	test   BYTE PTR [edi],bh
  40383d:	add    BYTE PTR [edx+0xeebf1d0],al
  403843:	cmp    cl,BYTE PTR [esi+0x7adc9ca0]
  403849:	push   eax
  40384a:	jae    0x403804
  40384c:	and    al,0xe2
  40384e:	into   
  40384f:	push   ds
  403850:	xchg   ebx,eax
  403851:	push   ebp
  403852:	fld    TBYTE PTR [esi+0x69]
  403855:	cwde   
  403856:	cmp    al,0x5d
  403858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403859:	mov    ah,0x36
  40385b:	sbb    edx,DWORD PTR [esi]
  40385d:	dec    esi
  40385e:	mov    BYTE PTR [ebx],cl
  403860:	push   ebx
  403861:	bound  ecx,QWORD PTR [ebp+esi*2+0x8]
  403865:	xor    ah,ch
  403867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403868:	js     0x4038d6
  40386a:	add    al,0x6c
  40386c:	sbb    eax,0xd18b8731
  403871:	nop
  403872:	dec    esi
  403873:	and    ebx,ebp
  403875:	push   esp
  403876:	adc    al,0x4
  403878:	nop
  403879:	mov    dh,BYTE PTR [esi-0x1f]
  40387c:	xchg   ecx,eax
  40387d:	and    al,BYTE PTR [esp+eax*4-0x4c]
  403881:	mov    dh,0xcd
  403883:	dec    eax
  403884:	std    
  403885:	clc    
  403886:	sbb    eax,0xd7246b4f
  40388b:	pop    ecx
  40388c:	std    
  40388d:	shl    dl,cl
  40388f:	mov    DWORD PTR [edi],ebx
  403891:	xchg   BYTE PTR [ebx-0x8],ch
  403894:	mov    al,ds:0x60aef855
  403899:	shl    BYTE PTR [esi-0x79],cl
  40389c:	ins    DWORD PTR es:[edi],dx
  40389d:	rcr    BYTE PTR [edi],cl
  40389f:	dec    ebx
  4038a0:	mov    BYTE PTR [edi],dl
  4038a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038a3:	fidiv  DWORD PTR [edx]
  4038a5:	jb     0x403881
  4038a7:	ins    BYTE PTR es:[edi],dx
  4038a8:	push   edx
  4038a9:	dec    edx
  4038aa:	cmp    ch,dh
  4038ac:	mov    esp,0x8172fa11
  4038b1:	jae    0x403837
  4038b3:	shl    cl,cl
  4038b5:	jne    0x4038a6
  4038b7:	push   eax
  4038b8:	test   al,0xd5
  4038ba:	pop    ebx
  4038bb:	sub    ecx,ebp
  4038bd:	cmp    eax,0xac3e0d46
  4038c2:	cld    
  4038c3:	mov    bh,0x1e
  4038c5:	and    al,0x32
  4038c7:	mov    al,0xc8
  4038c9:	out    dx,al
  4038ca:	scas   al,BYTE PTR es:[edi]
  4038cb:	das    
  4038cc:	out    0x3a,al
  4038ce:	jecxz  0x403866
  4038d0:	mov    bh,0x87
  4038d2:	pop    ecx
  4038d3:	test   dh,dl
  4038d5:	push   cs
  4038d6:	mov    ebx,0xe016ce08
  4038db:	(bad)  
  4038dc:	loope  0x4038a7
  4038de:	lea    edi,[ebx+0x1a163725]
  4038e4:	arpl   bp,sp
  4038e6:	cmp    al,0xf7
  4038e8:	pop    ecx
  4038e9:	or     DWORD PTR [edi-0x26],0xdd19fab8
  4038f0:	xchg   DWORD PTR [edi+esi*4],edi
  4038f3:	xor    BYTE PTR [esi+0x17ebdf44],0x1b
  4038fa:	test   al,0xeb
  4038fc:	dec    ecx
  4038fd:	leave  
  4038fe:	dec    esi
  4038ff:	jmp    0xb50b:0xe82bdf65
  403906:	jmp    0x9e46:0xcf3e5cbc
  40390d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40390e:	push   esi
  40390f:	jmp    0x2aa27f83
  403914:	push   esp
  403915:	jmp    0x4038b8
  403917:	mov    eax,ds:0x4672f423
  40391c:	fimul  DWORD PTR [ebx-0x58]
  40391f:	adc    BYTE PTR [eax],0xd9
  403922:	push   0xffffff95
  403924:	push   edx
  403925:	adc    al,0x36
  403927:	(bad)  
  403928:	test   dh,dl
  40392a:	xchg   ebp,eax
  40392b:	aaa    
  40392c:	gs add esi,ebp
  40392f:	mov    ebx,0xafdc644b
  403934:	lahf   
  403935:	in     al,0x4e
  403937:	inc    esp
  403938:	and    ch,BYTE PTR [edi+0x28]
  40393b:	cld    
  40393c:	(bad)  
  40393d:	aad    0xcc
  40393f:	cld    
  403940:	jp     0x403944
  403942:	pop    esp
  403943:	xor    eax,eax
  403945:	and    ebx,DWORD PTR [esi+0x59]
  403948:	push   esp
  403949:	les    edx,FWORD PTR [eax]
  40394b:	cmp    ebx,esi
  40394d:	and    BYTE PTR [ecx],dl
  40394f:	out    0xee,eax
  403951:	mov    eax,0xc415c28b
  403956:	jbe    0x4039bc
  403958:	sahf   
  403959:	hlt    
  40395a:	mov    ebp,0xcbeaa1dd
  40395f:	add    DWORD PTR [ebp-0x75a73f3a],esp
  403965:	repz cmp DWORD PTR [ecx],0xe0277aca
  40396c:	jmp    ecx
  40396e:	mov    dh,0xe6
  403970:	inc    ebp
  403971:	ins    DWORD PTR es:[edi],dx
  403972:	popf   
  403973:	cmp    al,0x8c
  403975:	ret    0xfeae
  403978:	pop    ecx
  403979:	ds dec esp
  40397b:	jne    0x40399a
  40397d:	fisubr WORD PTR ds:0xb326aed
  403983:	loop   0x40395a
  403985:	popa   
  403986:	(bad)  
  403987:	call   DWORD PTR [ebp+0x76]
  40398a:	imul   esi,DWORD PTR [edi],0xffffffe0
  40398d:	mov    bl,BYTE PTR [eax]
  40398f:	lea    edi,[esi]
  403991:	enter  0x3e70,0x6e
  403995:	retf   0x738f
  403998:	mov    bl,0xb2
  40399a:	sbb    dl,dl
  40399c:	jg     0x4039f7
  40399e:	sbb    esi,DWORD PTR [esi+esi*2]
  4039a1:	rcr    DWORD PTR [edi],1
  4039a3:	adc    eax,0xdb716aa1
  4039a8:	outs   dx,BYTE PTR ds:[esi]
  4039a9:	cmp    eax,0xadb8f744
  4039ae:	sub    BYTE PTR [ebx],dl
  4039b0:	in     al,dx
  4039b1:	(bad)  
  4039b3:	arpl   WORD PTR fs:[ecx+0x23],bx
  4039b7:	lea    ecx,[esi-0x1f0e077b]
  4039bd:	xchg   ecx,eax
  4039be:	ret    0x83e5
  4039c1:	scas   al,BYTE PTR es:[edi]
  4039c2:	push   ebp
  4039c3:	test   DWORD PTR ds:0x8a201706,edx
  4039c9:	enter  0x8788,0xa3
  4039cd:	ins    BYTE PTR es:[edi],dx
  4039ce:	xchg   edi,eax
  4039d0:	rol    BYTE PTR [eax+0x75],cl
  4039d3:	rcr    BYTE PTR [ecx+0x1f061a95],0xa9
  4039da:	popf   
  4039db:	push   edi
  4039dc:	jge    0x4039b9
  4039de:	pop    edi
  4039df:	lods   eax,DWORD PTR ss:[esi]
  4039e1:	dec    DWORD PTR [edx+ebp*4-0x5d]
  4039e5:	adc    DWORD PTR [ebp-0x8],ebp
  4039e8:	(bad)  
  4039e9:	int    0x9e
  4039eb:	in     al,dx
  4039ec:	inc    esp
  4039ed:	add    eax,0xae0310a8
  4039f2:	das    
  4039f3:	xlat   BYTE PTR ds:[ebx]
  4039f4:	sub    esi,DWORD PTR [eax+0x2c]
  4039f7:	inc    eax
  4039f8:	jnp    0x403a36
  4039fa:	icebp  
  4039fb:	dec    esp
  4039fc:	dec    ecx
  4039fd:	out    0xbf,al
  4039ff:	mov    ds:0xd96ab890,eax
  403a04:	fstp   QWORD PTR [ecx+esi*8-0x37987041]
  403a0b:	(bad)  
  403a0d:	and    al,0xf6
  403a0f:	jp     0x403a8d
  403a11:	xchg   ebp,eax
  403a12:	ret    0x1620
  403a15:	(bad)
  403a19:	cmp    DWORD PTR [esp+ecx*8-0x5ce6ade0],eax
  403a20:	xor    eax,ecx
  403a22:	fwait
  403a23:	div    BYTE PTR ds:0x61fab1a5
  403a29:	lea    eax,[esp+ebp*2]
  403a2c:	nop
  403a2d:	pop    es
  403a2e:	outs   dx,BYTE PTR ds:[esi]
  403a2f:	mov    ebx,0xe86e6e7e
  403a34:	(bad)  
  403a35:	jmp    0x26e16a5f
  403a3a:	in     eax,0xe7
  403a3c:	add    dh,BYTE PTR [edx-0x66005dc6]
  403a42:	cld    
  403a43:	mov    ebp,0xc0cfcf54
  403a48:	icebp  
  403a49:	jnp    0x403a30
  403a4b:	and    bl,ch
  403a4d:	xchg   ecx,eax
  403a4e:	cdq    
  403a4f:	dec    eax
  403a50:	dec    ebp
  403a51:	aaa    
  403a52:	pop    ss
  403a53:	pusha  
  403a54:	and    eax,0x9f1f685a
  403a59:	xlat   BYTE PTR ds:[ebx]
  403a5a:	push   edi
  403a5b:	jo     0x403aa8
  403a5d:	test   al,dl
  403a5f:	push   ebx
  403a60:	mov    ebp,0x9060b59c
  403a65:	cmc    
  403a66:	dec    eax
  403a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a68:	mov    al,ds:0xb667de4a
  403a6d:	push   edx
  403a6e:	push   es
  403a6f:	ror    DWORD PTR [esi-0x607c981c],cl
  403a75:	xchg   DWORD PTR [eax+0x41],ecx
  403a78:	inc    edx
  403a79:	jg     0x403abc
  403a7b:	or     DWORD PTR [ecx-0x13],ebx
  403a7e:	daa    
  403a7f:	or     esp,DWORD PTR [eax-0x6797ab95]
  403a85:	iret   
  403a86:	and    al,0xa9
  403a88:	add    ch,BYTE PTR [eax]
  403a8a:	or     edx,ebx
  403a8c:	jge    0x403a65
  403a8e:	gs lock jp 0x403ade
  403a92:	pop    esi
  403a93:	aam    0x21
  403a95:	mov    ds:0x8766f0e,eax
  403a9a:	and    bl,al
  403a9c:	xchg   esi,eax
  403a9d:	cli    
  403a9e:	cmp    eax,0xb46ae2e0
  403aa3:	loope  0x403a47
  403aa5:	imul   edx,edi,0x5
  403aa8:	bound  ebp,QWORD PTR ds:0xe7ea5cbf
  403aae:	mov    al,0xa9
  403ab0:	jmp    0xc61089d
  403ab5:	ds push cs
  403ab7:	mov    edx,0xb24382fe
  403abc:	mov    al,0x52
  403abe:	cmc    
  403abf:	or     eax,0xb190b486
  403ac4:	mov    bl,0xb6
  403ac6:	aas    
  403ac7:	pop    esi
  403ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac9:	mov    ebx,0xb5a01952
  403ace:	scas   eax,DWORD PTR es:[edi]
  403acf:	push   cs
  403ad0:	(bad)  
  403ad1:	retf   
  403ad2:	div    DWORD PTR [esi-0x7d20dcab]
  403ad8:	nop
  403ad9:	dec    edi
  403ada:	pop    ecx
  403adb:	adc    ebp,DWORD PTR [esi]
  403add:	std    
  403ade:	cwde   
  403adf:	into   
  403ae0:	pop    edi
  403ae1:	sub    BYTE PTR [esi-0x37],dh
  403ae4:	jns    0x403a95
  403ae6:	outs   dx,DWORD PTR ds:[esi]
  403ae7:	add    BYTE PTR [eax-0xc],al
  403aea:	icebp  
  403aeb:	or     edi,DWORD PTR [ecx-0x9]
  403aee:	and    dh,ch
  403af0:	ss stos DWORD PTR es:[edi],eax
  403af2:	xor    DWORD PTR ds:0x2257e0c2,0x17
  403af9:	fs retf 
  403afb:	pop    ebx
  403afc:	idiv   DWORD PTR [edx]
  403afe:	js     0x403aff
  403b00:	sar    BYTE PTR [ebp+0x12018cd],0x1b
  403b07:	push   ebx
  403b08:	inc    edi
  403b09:	mov    bl,0xda
  403b0b:	add    BYTE PTR [edx+0x90bd80f],al
  403b11:	fs ss pop esi
  403b14:	cs xchg esi,eax
  403b16:	sub    al,0xac
  403b18:	sub    BYTE PTR [ebp+0x37],al
  403b1b:	xlat   BYTE PTR ds:[ebx]
  403b1c:	ja     0x403abc
  403b1e:	cld    
  403b1f:	cli    
  403b20:	sub    al,dh
  403b22:	push   cs
  403b23:	popa   
  403b24:	adc    eax,0x750c20fb
  403b29:	xchg   BYTE PTR ds:0x3541e92c,cl
  403b2f:	sub    al,0xe6
  403b31:	and    BYTE PTR [esi],0x5d
  403b34:	ds sub eax,0xd92cf353
  403b3a:	sbb    al,0x71
  403b3c:	dec    DWORD PTR [edx-0x202465d7]
  403b42:	mov    dl,0xd4
  403b44:	pop    ebx
  403b45:	and    DWORD PTR [edx],eax
  403b47:	pop    edi
  403b48:	aas    
  403b49:	stos   DWORD PTR es:[edi],eax
  403b4a:	in     eax,dx
  403b4b:	cmp    bh,BYTE PTR [eax+eiz*2+0x258facd6]
  403b52:	lods   eax,DWORD PTR ds:[esi]
  403b53:	mov    ebp,0x21ce20d1
  403b58:	dec    esi
  403b59:	inc    ecx
  403b5a:	adc    eax,ebp
  403b5c:	cmp    ebx,DWORD PTR [edi+0x66103ec1]
  403b62:	sbb    ebp,DWORD PTR [eax-0x6b]
  403b65:	add    bl,BYTE PTR [ebp-0x12e1ffd6]
  403b6b:	mov    esi,0x110113f0
  403b70:	das    
  403b71:	icebp  
  403b72:	mov    ah,0xac
  403b74:	adc    BYTE PTR [edx+ebp*4-0xc],0xfa
  403b79:	lods   al,BYTE PTR ds:[si]
  403b7b:	nop
  403b7c:	mov    ebp,DWORD PTR [ebp-0x60]
  403b7f:	sbb    dh,BYTE PTR [ecx-0x56]
  403b82:	ins    DWORD PTR es:[edi],dx
  403b83:	jmp    0x403b89
  403b85:	cdq    
  403b86:	jl     0x403b3a
  403b88:	jns    0x403bd6
  403b8a:	cmp    al,0x1f
  403b8c:	push   esi
  403b8d:	inc    ebp
  403b8e:	jge    0x403b4f
  403b90:	not    BYTE PTR [ebp+edi*4+0x5]
  403b94:	lock xor al,0x30
  403b97:	(bad)  
  403b98:	in     eax,dx
  403b99:	sub    esp,DWORD PTR [edx]
  403b9b:	fyl2xp1 
  403b9d:	(bad)  
  403b9f:	and    esi,DWORD PTR [eax+edx*2]
  403ba2:	sahf   
  403ba3:	lods   al,BYTE PTR ds:[esi]
  403ba4:	addr16 inc eax
  403ba6:	rcl    DWORD PTR [eax-0xd],0xb3
  403baa:	scas   eax,DWORD PTR es:[edi]
  403bab:	in     al,dx
  403bac:	inc    edi
  403bad:	lea    ebx,cs:[ebx+0x6a]
  403bb1:	cmp    BYTE PTR [ecx-0x63db4553],0x80
  403bb8:	jle    0x403b71
  403bba:	mov    WORD PTR [eax-0x13fc9b9],?
  403bc0:	xor    BYTE PTR [edi-0x26],bl
  403bc3:	daa    
  403bc4:	cs aaa 
  403bc6:	out    dx,al
  403bc7:	and    BYTE PTR [ebp+0x427c3a88],0xda
  403bce:	sub    eax,0x6783462d
  403bd3:	and    esp,DWORD PTR [ebx-0x3393303b]
  403bd9:	pusha  
  403bda:	inc    ebp
  403bdb:	in     al,0x8a
  403bdd:	mov    dl,0xd7
  403bdf:	nop
  403be0:	xor    cl,ch
  403be2:	cmp    esp,DWORD PTR [edx]
  403be4:	inc    esi
  403be5:	sbb    al,0xea
  403be7:	jp     0x403c10
  403be9:	shr    edx,cl
  403beb:	push   ecx
  403bec:	scas   al,BYTE PTR es:[edi]
  403bed:	xchg   ecx,eax
  403bee:	adc    BYTE PTR [ebx],bh
  403bf0:	out    dx,al
  403bf1:	mov    WORD PTR [ebx],ss
  403bf3:	mov    dh,0x4b
  403bf5:	(bad)  
  403bf6:	xchg   esi,eax
  403bf7:	mov    edi,ebx
  403bf9:	mov    dh,0x1a
  403bfb:	hlt    
  403bfc:	pop    esp
  403bfd:	aad    0x88
  403bff:	pop    ss
  403c00:	dec    esp
  403c01:	in     al,0x83
  403c03:	out    0xde,eax
  403c05:	push   es
  403c06:	fimul  DWORD PTR [edi-0x1d]
  403c09:	(bad)  
  403c0a:	sub    ecx,DWORD PTR [eax+0x30]
  403c0d:	shr    DWORD PTR [ebp+0x402cfee8],1
  403c13:	in     eax,0xe2
  403c15:	adc    dl,bh
  403c17:	push   ds
  403c18:	sub    DWORD PTR [esi+eiz*8+0x2d],edi
  403c1c:	fdiv   DWORD PTR [edx+0x23]
  403c1f:	inc    ecx
  403c20:	pop    edi
  403c21:	jl     0x403c16
  403c23:	mov    ebx,0xb33fc34a
  403c28:	xchg   DWORD PTR [ebx+eiz*1],eax
  403c2b:	clc    
  403c2c:	loopne 0x403c5c
  403c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c2f:	pop    esi
  403c30:	push   ebp
  403c31:	mov    ch,0xcd
  403c33:	loop   0x403bfe
  403c35:	retw   
  403c37:	out    0x45,al
  403c39:	(bad)  
  403c3a:	std    
  403c3b:	dec    ecx
  403c3c:	jno    0x403c94
  403c3e:	fldln2 
  403c40:	test   eax,0x7aa1bdb8
  403c45:	repz cwde 
  403c47:	call   0x9818:0x82d0053d
  403c4e:	xor    al,0xfd
  403c50:	cmp    al,0xc6
  403c52:	cmp    BYTE PTR [ebx+edx*8+0x77],0xc0
  403c57:	and    ch,cl
  403c59:	dec    ebp
  403c5a:	shl    cl,0x78
  403c5d:	pop    ebx
  403c5e:	int3   
  403c5f:	js     0x403c5f
  403c61:	jbe    0x403cbf
  403c63:	adc    al,0x62
  403c65:	inc    esp
  403c66:	xor    eax,edi
  403c68:	dec    eax
  403c69:	lock jmp 0x9995:0xc3ef0cc0
  403c71:	xor    al,0x1a
  403c73:	dec    edx
  403c74:	lock pushf 
  403c76:	out    0x91,al
  403c78:	sbb    bl,cl
  403c7a:	loopne 0x403ccc
  403c7c:	retf   0x3f46
  403c7f:	push   ebx
  403c80:	int3   
  403c81:	pop    esi
  403c82:	nop    DWORD PTR [edx-0x65dd6152]
  403c89:	stos   DWORD PTR es:[edi],eax
  403c8a:	and    dh,BYTE PTR [edx-0x13]
  403c8d:	inc    edx
  403c8e:	add    eax,0x8198fc68
  403c93:	jne    0x403c7d
  403c95:	fs icebp 
  403c97:	or     BYTE PTR [edi+0x269782b],dh
  403c9d:	inc    ebp
  403c9e:	dec    BYTE PTR [edi-0x10]
  403ca1:	lds    ebx,FWORD PTR [ebp-0x21]
  403ca4:	cwde   
  403ca5:	add    BYTE PTR [edi+0x43],ch
  403ca8:	mov    eax,ds:0x27182586
  403cad:	imul   ebx,DWORD PTR [edi],0xd6c73950
  403cb3:	xor    BYTE PTR [edx+ebx*4+0x15],cl
  403cb7:	mov    ebx,0xa5039cf7
  403cbc:	hlt    
  403cbd:	push   ss
  403cbe:	or     ebp,DWORD PTR [ecx-0x1e]
  403cc1:	mov    ds:0x8bbd7284,al
  403cc6:	call   0xd2fe169f
  403ccb:	(bad)  
  403ccc:	fidivr WORD PTR [eax+0x1b022bdf]
  403cd2:	ins    DWORD PTR es:[edi],dx
  403cd3:	inc    edx
  403cd4:	ficom  DWORD PTR [eax-0x78]
  403cd7:	(bad)  
  403cd8:	mov    ebx,DWORD PTR [edi+0x658c434d]
  403cde:	nop
  403cdf:	xchg   edi,eax
  403ce0:	xlat   BYTE PTR ds:[ebx]
  403ce1:	inc    ebx
  403ce2:	fcom   QWORD PTR [ecx+0x1e240ef]
  403ce8:	ss cmc 
  403cea:	ret    0x37d3
  403ced:	pop    ecx
  403cee:	mov    ds:0xbb8e761,al
  403cf3:	ja     0x403cb7
  403cf5:	xlat   BYTE PTR ds:[ebx]
  403cf6:	and    al,0x42
  403cf8:	pop    ebx
  403cf9:	je     0x403cf2
  403cfb:	das    
  403cfc:	retf   
  403cfd:	shl    DWORD PTR [ebx],0x3c
  403d00:	int    0xcf
  403d02:	scas   al,BYTE PTR es:[edi]
  403d03:	(bad)  
  403d04:	xchg   ch,cl
  403d06:	jnp    0x403ca1
  403d08:	add    DWORD PTR [edi+0x1e],edi
  403d0b:	fld    QWORD PTR [esi+0x5e902d28]
  403d11:	je     0x403d00
  403d13:	sti    
  403d14:	or     dl,BYTE PTR [ebp-0x73842ca3]
  403d1a:	inc    ebx
  403d1b:	pop    esp
  403d1c:	mov    ecx,0xbd18f9c1
  403d21:	mov    ebp,0x24ed1ed0
  403d26:	or     al,BYTE PTR [ecx]
  403d28:	xchg   BYTE PTR [eax+0x21],dh
  403d2b:	push   0xd881d9d3
  403d30:	push   ss
  403d31:	popf   
  403d32:	mov    edx,0xc98f720
  403d37:	mov    esp,DWORD PTR [ecx-0x25]
  403d3a:	mov    ds:0xb027d52c,al
  403d3f:	sbb    cl,bl
  403d41:	fiadd  DWORD PTR [eax-0x5]
  403d44:	dec    DWORD PTR [edx-0x24]
  403d47:	int3   
  403d48:	lods   eax,DWORD PTR ds:[esi]
  403d49:	imul   DWORD PTR [eax+0x54528880]
  403d4f:	rol    ah,1
  403d51:	(bad)  
  403d52:	in     al,0x42
  403d54:	cmc    
  403d55:	and    DWORD PTR [ebx+0x6a0067c9],ebp
  403d5b:	imul   esi,DWORD PTR [ebx-0x34],0x3da4fcfd
  403d62:	in     al,0xcb
  403d64:	push   0xfca52fbc
  403d69:	mov    al,ds:0xf6acd503
  403d6e:	stos   BYTE PTR es:[edi],al
  403d6f:	dec    ebp
  403d70:	into   
  403d71:	xchg   DWORD PTR [ecx+eax*4-0x74],edx
  403d75:	or     DWORD PTR [edx-0x20f66d5f],esp
  403d7b:	inc    edx
  403d7c:	aas    
  403d7d:	adc    al,0xa
  403d7f:	sbb    DWORD PTR [eax-0x67],0xffffffca
  403d83:	inc    edi
  403d84:	sub    al,al
  403d86:	pop    edi
  403d87:	call   0x52fdfca1
  403d8c:	cld    
  403d8d:	push   ds
  403d8e:	jno    0x403d9a
  403d90:	add    DWORD PTR [esi+0x2a27b0a4],ebp
  403d96:	cwde   
  403d97:	test   BYTE PTR [ecx-0x2bd71dd6],bh
  403d9d:	jne    0x403e16
  403d9f:	lods   eax,DWORD PTR ds:[esi]
  403da0:	and    eax,0xba257f93
  403da5:	cmp    bh,BYTE PTR [edi]
  403da7:	(bad)  
  403da8:	mov    ds:0x73866ad0,al
  403dad:	sub    DWORD PTR [ecx+0x43d6cbbf],ebp
  403db3:	sti    
  403db4:	mov    bl,0x6c
  403db6:	xchg   esp,eax
  403db7:	mov    DWORD PTR [edi],esi
  403db9:	push   ss
  403dba:	mov    edi,0xdbe99bc4
  403dbf:	dec    esp
  403dc0:	or     ebx,eax
  403dc2:	into   
  403dc3:	loopne 0x403d75
  403dc5:	dec    edx
  403dc6:	jns    0x403d84
  403dc8:	cmp    BYTE PTR [edx+0x21],al
  403dcb:	lods   eax,DWORD PTR gs:[esi]
  403dcd:	mov    ch,0x74
  403dcf:	jl     0x403d6a
  403dd1:	and    BYTE PTR [ecx+0x8],cl
  403dd4:	ret    
  403dd5:	jno    0x403d68
  403dd7:	adc    al,0xc2
  403dd9:	mov    dl,0x51
  403ddb:	faddp  st(2),st
  403ddd:	sbb    BYTE PTR [ebx-0x36c3df8e],cl
  403de3:	add    esp,ebp
  403de5:	xchg   edx,eax
  403de6:	dec    edx
  403de7:	or     eax,0x4a5a37
  403dec:	mov    dh,0x93
  403dee:	jbe    0x403e33
  403df0:	(bad)
  403df3:	test   DWORD PTR [esi-0x7a588cf7],edi
  403df9:	bnd jb 0x403e18
  403dfc:	int3   
  403dfd:	mov    al,ds:0x2b9d0c41
  403e02:	retf   
  403e03:	jb     0x403e47
  403e05:	inc    edi
  403e06:	or     bh,BYTE PTR [eax]
  403e08:	nop
  403e09:	xchg   ebp,eax
  403e0a:	cld    
  403e0b:	mov    ah,0xc6
  403e0d:	jbe    0x403dd6
  403e0f:	sub    al,0x80
  403e11:	or     dh,0x46
  403e14:	arpl   WORD PTR [ebp-0x80],dx
  403e17:	cmp    al,0x12
  403e19:	stos   BYTE PTR es:[edi],al
  403e1a:	sub    DWORD PTR [esi],0x4b00160f
  403e20:	sbb    bh,BYTE PTR ds:0x8d17254d
  403e26:	dec    edi
  403e27:	pop    eax
  403e28:	mov    bh,0xc9
  403e2a:	fnsave [edx+eiz*8+0x47d82d59]
  403e31:	dec    ebx
  403e32:	cmp    al,0xff
  403e34:	jg     0x403de9
  403e36:	call   ebx
  403e38:	cmp    DWORD PTR [esi+0x69d05e10],0xb45813c4
  403e42:	mov    bl,al
  403e44:	das    
  403e45:	sub    ah,bh
  403e47:	mov    bl,0x6d
  403e49:	jne    0x403eb1
  403e4b:	rol    DWORD PTR [edx],cl
  403e4d:	xchg   BYTE PTR [esi],ch
  403e4f:	add    DWORD PTR [edi+0x19a8842a],edi
  403e55:	xchg   ebp,eax
  403e56:	push   edx
  403e57:	and    edi,DWORD PTR [ebx]
  403e59:	scas   eax,DWORD PTR es:[edi]
  403e5a:	stos   BYTE PTR es:[edi],al
  403e5b:	in     al,dx
  403e5c:	iret   
  403e5d:	pop    ebx
  403e5e:	push   ebx
  403e5f:	into   
  403e60:	in     al,dx
  403e61:	out    dx,eax
  403e62:	xlat   BYTE PTR ds:[ebx]
  403e63:	aas    
  403e64:	and    al,0xcb
  403e66:	xor    dl,dh
  403e68:	adc    ebx,DWORD PTR [eax+0x6a]
  403e6b:	pop    edx
  403e6c:	push   ecx
  403e6d:	pop    esp
  403e6e:	mov    al,0x21
  403e70:	push   ecx
  403e71:	pop    ebx
  403e72:	sahf   
  403e73:	cmp    esi,DWORD PTR [eax-0x68]
  403e76:	pop    edi
  403e77:	pop    ss
  403e78:	fxch   st(3)
  403e7a:	ins    DWORD PTR es:[edi],dx
  403e7b:	dec    esi
  403e7c:	ds jae 0x403e8b
  403e7f:	aad    0x73
  403e81:	test   cl,bl
  403e83:	stc    
  403e84:	pop    ebp
  403e85:	pop    ebx
  403e86:	xor    esp,edx
  403e88:	mov    al,ds:0x5961ecf5
  403e8d:	add    dh,bl
  403e8f:	inc    edx
  403e90:	mov    al,ds:0x72b6b66a
  403e95:	data16 jp 0x403ecb
  403e98:	adc    BYTE PTR [ebx+0x7],0xe6
  403e9c:	cmovp  ebx,DWORD PTR [eax-0x2cb820b4]
  403ea3:	clc    
  403ea4:	or     eax,0x76f1d816
  403ea9:	loope  0x403efb
  403eab:	sub    eax,DWORD PTR ss:[edx]
  403eae:	aad    0x91
  403eb0:	clc    
  403eb1:	inc    ebp
  403eb2:	and    bl,BYTE PTR [ecx+edi*4]
  403eb5:	cdq    
  403eb6:	or     ebp,edi
  403eb8:	enter  0x6e08,0x67
  403ebc:	add    eax,0xf7b8d345
  403ec1:	mov    bh,BYTE PTR [eax]
  403ec3:	jp     0x403ea3
  403ec5:	loopne 0x403e60
  403ec7:	out    dx,al
  403ec8:	add    ebx,ecx
  403eca:	hlt    
  403ecb:	shr    ebx,cl
  403ecd:	push   0x3d
  403ecf:	fidivr DWORD PTR [esi+0x0]
  403ed2:	mov    DWORD PTR [esi+0xcd269ac],edx
  403ed8:	and    DWORD PTR [ecx],0xd86b908e
  403ede:	ja     0x403f11
  403ee0:	sar    BYTE PTR [edx+0x36],cl
  403ee3:	jp     0x403f0c
  403ee5:	popf   
  403ee6:	pusha  
  403ee7:	cmp    eax,0xfbbc2f3d
  403eec:	jmp    0xb42c:0xbff5bd92
  403ef3:	add    al,0xd
  403ef5:	dec    eax
  403ef6:	or     eax,0x30c9cecf
  403efb:	neg    BYTE PTR ds:0x3b30d1ab
  403f01:	dec    ebx
  403f02:	retf   0x2348
  403f05:	shl    DWORD PTR [edx],1
  403f07:	sub    DWORD PTR [edx+0x23f67c27],edi
  403f0d:	and    BYTE PTR [edi-0x3f97ff29],ah
  403f13:	pavgw  mm6,QWORD PTR [ecx-0x25110c54]
  403f1a:	lds    edi,FWORD PTR [esi-0x571e728]
  403f20:	pop    ebx
  403f21:	add    esp,esi
  403f23:	(bad)  
  403f24:	out    0x95,eax
  403f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f27:	loop   0x403ec7
  403f29:	(bad)  
  403f2a:	sbb    eax,0x6b0a295d
  403f2f:	mov    bh,0xb7
  403f31:	jns    0x403f5a
  403f33:	ret    0x7a64
  403f36:	adc    al,0x1
  403f38:	fcom   QWORD PTR [edi+ebx*1-0x26]
  403f3c:	popa   
  403f3d:	and    esp,eax
  403f3f:	loope  0x403fb3
  403f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f42:	and    al,0x82
  403f44:	or     ebp,DWORD PTR [edx]
  403f46:	adc    dl,BYTE PTR [ecx-0x2f0d490f]
  403f4c:	neg    DWORD PTR [ebx+0x21]
  403f4f:	mov    ds:0x134c5fc,eax
  403f54:	adc    eax,DWORD PTR [edi]
  403f56:	neg    DWORD PTR [esi+edx*4-0x3171f579]
  403f5d:	cwde   
  403f5e:	fisttp WORD PTR [edi-0x67f76f77]
  403f64:	pop    es
  403f65:	xor    dh,al
  403f67:	repnz aas 
  403f69:	outs   dx,BYTE PTR ds:[esi]
  403f6a:	lea    eax,[ebx]
  403f6c:	push   ss
  403f6d:	mov    al,ds:0x3a0ccaac
  403f72:	clc    
  403f73:	sub    bl,BYTE PTR [ebx+0x75649572]
  403f79:	sbb    ch,ch
  403f7b:	loope  0x403fd7
  403f7d:	jno    0x403f23
  403f7f:	mov    dh,0x49
  403f81:	push   0x4b4062f4
  403f86:	cmc    
  403f87:	sub    al,0xdc
  403f89:	iret   
  403f8a:	push   ecx
  403f8b:	sbb    eax,0x18f2f111
  403f90:	ret    0x5353
  403f93:	or     BYTE PTR [ecx+eiz*4+0x4b],bl
  403f97:	imul   esi,DWORD PTR [ecx],0xf19c32e4
  403f9d:	aas    
  403f9e:	cld    
  403f9f:	or     DWORD PTR es:[ebx],edx
  403fa2:	add    eax,0x3d8651fb
  403fa8:	adc    eax,0xcf3aca6e
  403fad:	mov    al,0x4
  403faf:	out    dx,eax
  403fb0:	ja     0x403f95
  403fb2:	jmp    0x403f98
  403fb4:	push   cs
  403fb5:	push   ebx
  403fb6:	jp     0x404032
  403fb8:	sbb    al,0xec
  403fba:	xchg   esi,eax
  403fbb:	out    0xe8,eax
  403fbd:	sub    al,0xc3
  403fbf:	sbb    DWORD PTR [ebx-0x4deb8ad3],edx
  403fc5:	pop    ebp
  403fc6:	jbe    0x403fa8
  403fc8:	(bad)  
  403fc9:	adc    DWORD PTR [esp+edx*8+0x6ec8f68],eax
  403fd0:	ja     0x404017
  403fd2:	daa    
  403fd3:	mov    esp,0xfb69f4e8
  403fd8:	fcomip st,st(0)
  403fda:	pop    ds
  403fdb:	sub    DWORD PTR [ebx],ecx
  403fdd:	(bad)  
  403fde:	jmp    DWORD PTR [eax-0x4d31ba6c]
  403fe4:	push   edi
  403fe5:	stc    
  403fe6:	adc    esp,DWORD PTR [eax+0x4d627e3b]
  403fec:	fcomp  QWORD PTR [esi]
  403fee:	sbb    BYTE PTR [eax+0x27c99670],0x9d
  403ff5:	and    al,0xa2
  403ff7:	in     al,0x94
  403ff9:	loopne 0x40401f
  403ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ffc:	out    0x48,al
  403ffe:	xlat   BYTE PTR fs:[ebx]
  404000:	out    dx,al
  404001:	mov    ebx,0x4d0359ca
  404006:	(bad)  [edi+0xf426ea]
  40400c:	mov    edi,DWORD PTR [esi]
  40400e:	mov    edi,0x8f3667f1
  404013:	push   0x7
  404015:	fadd   DWORD PTR [ebx-0x1a624c61]
  40401b:	and    edi,DWORD PTR [esi+0x63]
  40401e:	pop    edx
  40401f:	push   ss
  404020:	outs   dx,DWORD PTR ds:[esi]
  404021:	call   0x261b4693
  404026:	add    ch,BYTE PTR [eax]
  404028:	std    
  404029:	retf   
  40402a:	mov    ds:0x1c49b515,eax
  40402f:	lods   al,BYTE PTR ds:[esi]
  404030:	int3   
  404031:	dec    ebx
  404032:	cli    
  404033:	loopne 0x40403d
  404035:	fidiv  WORD PTR [edx]
  404037:	or     esi,0xffffffab
  40403a:	jmp    0x404034
  40403c:	mov    edi,tr5
  40403f:	xchg   ecx,eax
  404040:	pop    edi
  404041:	mov    ds:0x523ddb20,al
  404046:	mov    dl,0x89
  404048:	mov    bl,0x3b
  40404a:	bound  edi,QWORD PTR [edx]
  40404c:	inc    esp
  40404d:	pop    edi
  40404e:	xor    edx,edi
  404050:	and    al,0xd0
  404052:	or     al,0x8a
  404054:	scas   eax,DWORD PTR es:[edi]
  404055:	xchg   edx,eax
  404056:	bound  ecx,QWORD PTR [eax+0x7e]
  404059:	jg     0x403fed
  40405b:	jp     0x40408d
  40405d:	push   ecx
  40405e:	mov    ch,0x44
  404060:	mov    dh,0xf1
  404062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404063:	mov    ebx,0xb78df0d9
  404068:	or     eax,0x6d6f0394
  40406d:	cmp    BYTE PTR [edx-0x7d],0x25
  404071:	adc    al,0x80
  404073:	int    0x10
  404075:	add    eax,DWORD PTR [edx+0xd]
  404078:	leave  
  404079:	arpl   WORD PTR [esi-0x33],dx
  40407c:	cmp    bl,dl
  40407e:	push   ebx
  40407f:	jmp    0x404033
  404081:	add    bl,BYTE PTR [esi-0x47366b70]
  404087:	adc    al,0xaf
  404089:	add    al,0x63
  40408b:	dec    ebx
  40408c:	mov    al,0xe6
  40408e:	iret   
  40408f:	or     BYTE PTR [edi+0x7],ah
  404092:	cmp    DWORD PTR [ebx+0x3f757a95],0xed619649
  40409c:	xchg   ecx,eax
  40409d:	rol    BYTE PTR [edx+0xe],0xc1
  4040a1:	stos   BYTE PTR es:[edi],al
  4040a2:	dec    eax
  4040a3:	and    BYTE PTR ds:0xf914d1cb,dh
  4040a9:	pop    edx
  4040aa:	xchg   esi,eax
  4040ab:	out    0x2e,al
  4040ad:	and    al,0x29
  4040af:	fist   DWORD PTR [ecx+0x442f3da]
  4040b5:	aaa    
  4040b6:	sub    eax,DWORD PTR [ecx]
  4040b8:	sbb    al,0xcc
  4040ba:	or     DWORD PTR [eax+0x42],esi
  4040bd:	lahf   
  4040be:	les    esi,FWORD PTR [ebx-0x28484d5c]
  4040c4:	inc    ecx
  4040c5:	inc    eax
  4040c6:	out    0xf9,al
  4040c8:	push   es
  4040c9:	mov    ?,WORD PTR [edi]
  4040cb:	inc    esp
  4040cc:	jg     0x4040e9
  4040ce:	sub    eax,0x21bb23dd
  4040d3:	fdiv   DWORD PTR [edi]
  4040d5:	les    ebp,FWORD PTR [ebp+0x49]
  4040d8:	sbb    eax,0x17aa1e71
  4040dd:	and    al,0xf9
  4040df:	and    ch,BYTE PTR [ebp-0x54ee1ecc]
  4040e5:	xlat   BYTE PTR ds:[ebx]
  4040e6:	mov    edi,0x6c4e4d82
  4040eb:	jmp    0x1f5b:0xe42098f1
  4040f2:	push   ecx
  4040f3:	add    al,BYTE PTR [ebp-0x707d0621]
  4040f9:	xchg   DWORD PTR [edi],edi
  4040fb:	mov    ds:0xb20a9902,al
  404100:	ss enter 0x1c78,0xab
  404105:	jle    0x40409a
  404107:	sub    al,0xfe
  404109:	cmp    edi,DWORD PTR [esi+0x10150817]
  40410f:	ss mov esp,0x690fe47
  404115:	mov    WORD PTR [ebx+0x7e0eaa4f],fs
  40411b:	push   edx
  40411c:	mov    WORD PTR [eax+0x3a],cs
  40411f:	sub    dl,BYTE PTR [edi+0xa7d2b8e]
  404125:	popf   
  404126:	loop   0x40411f
  404128:	repz dec ecx
  40412a:	icebp  
  40412b:	push   ecx
  40412c:	xchg   DWORD PTR [ecx-0x4a8589fe],esi
  404132:	mov    edi,0x16d77138
  404137:	or     bh,ch
  404139:	fidiv  WORD PTR [ebp+0x4e0f51cd]
  40413f:	xor    ebp,DWORD PTR [esi-0x6]
  404142:	addr16 es in eax,dx
  404145:	or     esp,DWORD PTR [edi+esi*1+0x7d61070]
  40414c:	push   edi
  40414d:	stos   DWORD PTR es:[edi],eax
  40414e:	add    DWORD PTR [edx],ebx
  404150:	(bad)  
  404151:	and    ah,BYTE PTR [ebx-0x4d]
  404154:	inc    edx
  404155:	ficomp DWORD PTR [edx-0x71]
  404158:	cld    
  404159:	aaa    
  40415a:	test   al,0x29
  40415c:	fwait
  40415d:	mov    edx,0x5b1f4be3
  404162:	push   ecx
  404163:	test   BYTE PTR [edx],dh
  404165:	mov    bh,0x6f
  404167:	test   eax,0xc09c17b6
  40416c:	jbe    0x404159
  40416e:	jb     0x4041a8
  404170:	xor    cl,BYTE PTR [esi+0xb27f30e]
  404176:	pop    ds
  404177:	push   ecx
  404178:	xor    DWORD PTR [edx+edi*2+0x62],0x66
  40417d:	fcmovbe st,st(5)
  40417f:	loop   0x4041c1
  404181:	not    dh
  404183:	stos   BYTE PTR es:[edi],al
  404184:	and    ebx,ebp
  404186:	xchg   edi,eax
  404187:	or     eax,0x5835ee2b
  40418c:	xor    eax,0xf0f022c8
  404191:	sub    DWORD PTR [ebx],ebp
  404193:	mov    cl,0xd3
  404195:	call   0x9d9fe16b
  40419a:	popf   
  40419b:	int3   
  40419c:	xor    BYTE PTR [ebx],0x80
  40419f:	repnz adc al,BYTE PTR [ebx-0x5c14de7b]
  4041a6:	inc    ebp
  4041a7:	leave  
  4041a8:	adc    DWORD PTR [ecx+0x45],ecx
  4041ab:	repnz mov esp,0x163a3f30
  4041b1:	mov    al,ds:0xd04fe5ba
  4041b6:	inc    esi
  4041b7:	pop    ebx
  4041b8:	imul   esp,DWORD PTR ds:0xe6e9aa06,0x69f9ce6b
  4041c2:	jg     0x404201
  4041c4:	retf   0x824
  4041c7:	addr16 mov ebp,0x27e49aa5
  4041cd:	jmp    0x4041ba
  4041cf:	into   
  4041d0:	in     eax,0x18
  4041d2:	daa    
  4041d3:	add    ecx,DWORD PTR [edx]
  4041d5:	js     0x404192
  4041d7:	fs mov bl,0x55
  4041da:	in     eax,dx
  4041db:	aaa    
  4041dc:	fiadd  DWORD PTR [ecx]
  4041de:	and    esi,edi
  4041e0:	sbb    ecx,eax
  4041e2:	jae    0x4041c7
  4041e4:	out    dx,eax
  4041e5:	aam    0x25
  4041e7:	mov    edx,ebp
  4041e9:	stos   BYTE PTR es:[edi],al
  4041ea:	xchg   ecx,eax
  4041eb:	jp     0x4041c6
  4041ed:	push   ds
  4041ee:	sbb    DWORD PTR [eax],ebx
  4041f0:	mov    al,ds:0xa2385972
  4041f5:	xchg   ecx,eax
  4041f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f7:	push   edx
  4041f8:	out    0xb7,eax
  4041fa:	cli    
  4041fb:	mov    bh,0x75
  4041fd:	jge    0x4041a7
  4041ff:	or     dh,BYTE PTR ds:0x2b9cc6c1
  404205:	dec    edx
  404206:	dec    eax
  404207:	add    al,BYTE PTR [ecx]
  404209:	or     al,0x9e
  40420b:	hlt    
  40420c:	(bad)  
  40420d:	std    
  40420e:	pop    ss
  40420f:	mov    ds:0x7b66cb4,al
  404214:	pop    esi
  404215:	adc    BYTE PTR [ebx],bh
  404217:	es (bad) 
  404219:	xor    ecx,esi
  40421b:	cmp    edi,DWORD PTR [eax]
  40421d:	or     ecx,DWORD PTR [edi+ebp*4+0x5a]
  404221:	adc    BYTE PTR [esi-0x3abfa418],ch
  404227:	xor    bl,BYTE PTR [eax]
  404229:	jg     0x404251
  40422b:	jp     0x40420a
  40422d:	sub    al,0x9d
  40422f:	mov    ch,0xfc
  404231:	ror    DWORD PTR [esi+0x2d],1
  404234:	push   ds
  404235:	ins    BYTE PTR es:[edi],dx
  404236:	outs   dx,DWORD PTR ds:[esi]
  404237:	stc    
  404238:	sub    ch,BYTE PTR [ecx-0x6f9d19e7]
  40423e:	fdivr  DWORD PTR [edi+0x99c1e33]
  404244:	fld    st(5)
  404246:	xlat   BYTE PTR ds:[ebx]
  404247:	sahf   
  404248:	dec    ebx
  404249:	xchg   ecx,eax
  40424a:	xor    eax,0xc943071e
  40424f:	dec    edx
  404250:	push   ebp
  404251:	add    DWORD PTR [edx],esi
  404253:	xchg   BYTE PTR [ecx-0x63],ch
  404256:	add    BYTE PTR [eax],cl
  404258:	in     al,0x68
  40425a:	xchg   esp,eax
  40425b:	popa   
  40425c:	cmp    DWORD PTR [edi+0x7ca1df1d],0x57
  404263:	xchg   ebx,eax
  404264:	pop    es
  404265:	and    esi,ebp
  404267:	out    dx,eax
  404268:	shl    dl,cl
  40426a:	iret   
  40426b:	call   0x27af0cf
  404270:	mov    DWORD PTR [eax+0x52],ebp
  404273:	xor    dh,BYTE PTR [ebp+0x56]
  404276:	inc    esi
  404277:	xor    DWORD PTR ds:0xc80f7cf9,esi
  40427d:	cld    
  40427e:	xchg   edi,eax
  40427f:	out    0x2d,al
  404281:	repz xchg ebp,eax
  404283:	xchg   esi,eax
  404284:	mov    DWORD PTR [edx-0x43],edi
  404287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404288:	mov    eax,eax
  40428a:	push   0x9b18c687
  40428f:	pop    eax
  404290:	aad    0x2c
  404292:	shl    BYTE PTR [edi-0x2b],0x82
  404296:	adc    cl,cl
  404298:	cmp    ebp,esp
  40429a:	pop    ecx
  40429b:	repnz in eax,dx
  40429d:	leave  
  40429e:	cmp    al,0xfc
  4042a0:	lds    ebx,FWORD PTR [esi+edx*4-0x33]
  4042a4:	cmp    eax,0x62ab8c46
  4042a9:	and    al,0xab
  4042ab:	call   0x6a81b442
  4042b0:	inc    edi
  4042b1:	into   
  4042b2:	test   BYTE PTR [edi+0x205c5386],ah
  4042b8:	jmp    0x40432a
  4042ba:	(bad)  
  4042bb:	xchg   edx,eax
  4042bc:	pop    edx
  4042bd:	mov    DWORD PTR [ebp+0x395feab6],0x87fa5668
  4042c7:	in     al,dx
  4042c8:	fs loopne 0x4042ef
  4042cb:	mov    ?,WORD PTR [edx]
  4042cd:	loop   0x404285
  4042cf:	dec    esi
  4042d0:	push   cs
  4042d1:	shl    ch,1
  4042d3:	or     eax,0x947604c1
  4042d8:	fprem1 
  4042da:	aad    0xf
  4042dc:	gs cld 
  4042de:	push   esp
  4042df:	lock jns 0x40431a
  4042e2:	mov    DWORD PTR [edi+ecx*4-0xa],edi
  4042e6:	xchg   edx,eax
  4042e7:	ret    
  4042e8:	adc    eax,0x48de80d1
  4042ed:	mov    dh,BYTE PTR [edi]
  4042ef:	mov    ds:0x66407e7b,eax
  4042f4:	sub    DWORD PTR [edx],eax
  4042f6:	jle    0x40431c
  4042f8:	jmp    0x411a70c5
  4042fd:	sub    al,0x1c
  4042ff:	int3   
  404300:	mov    dh,0xb8
  404302:	mov    al,0x88
  404304:	fstp   st(5)
  404306:	leave  
  404307:	mov    BYTE PTR [esi+0x3c1997c0],ah
  40430d:	or     DWORD PTR [edi],edi
  40430f:	push   ds
  404310:	add    ebp,edi
  404312:	sahf   
  404313:	and    eax,0xc703ebbf
  404318:	or     DWORD PTR [edx+0x39],0x6e3913d1
  40431f:	dec    eax
  404320:	dec    ebx
  404321:	out    0x40,al
  404323:	mov    edi,0xde35f237
  404328:	sbb    al,0xa8
  40432a:	xchg   edx,eax
  40432b:	inc    ecx
  40432c:	or     bh,BYTE PTR [ebp+0x78126324]
  404332:	outs   dx,DWORD PTR ds:[esi]
  404333:	jp     0x4042c3
  404335:	jge    0x404362
  404337:	adc    dh,BYTE PTR [edi+0x2]
  40433a:	shl    DWORD PTR [edi-0x403eed03],1
  404340:	nop
  404341:	push   edi
  404342:	add    ch,BYTE PTR ds:0x42e9d74
  404348:	loop   0x4043bf
  40434a:	loope  0x404301
  40434c:	add    esp,DWORD PTR [eax]
  40434e:	xor    ebp,ebx
  404350:	pop    ecx
  404351:	retf   0xd564
  404354:	push   0xe6dbdce2
  404359:	daa    
  40435a:	test   eax,0x57d9307a
  40435f:	pusha  
  404360:	retf   
  404361:	leave  
  404362:	jo     0x4043c6
  404364:	pop    edx
  404365:	out    0x8d,eax
  404367:	jb     0x40433c
  404369:	ror    BYTE PTR [eax+0xea36e76],cl
  40436f:	shr    DWORD PTR [esi],0x45
  404372:	dec    ecx
  404373:	popf   
  404374:	scas   al,BYTE PTR es:[edi]
  404375:	fnsave [edx]
  404377:	ja     0x4043f1
  404379:	pop    ss
  40437a:	and    eax,0x7c856206
  40437f:	es push cs
  404381:	pop    ss
  404382:	enter  0x2233,0xc
  404386:	in     al,dx
  404387:	pushf  
  404388:	mov    dh,0x38
  40438a:	fs pop esp
  40438c:	cmp    DWORD PTR [eax],eax
  40438e:	pop    ecx
  40438f:	neg    BYTE PTR [ebx+0x47]
  404392:	adc    DWORD PTR [eax],0x258fcc0d
  404398:	cmp    al,0x1e
  40439a:	test   DWORD PTR [esi-0x31],0x55c64ef9
  4043a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043a2:	sbb    DWORD PTR ds:0x2cc97b6f,0x8739ec84
  4043ac:	mov    eax,ds:0xfb7d905f
  4043b1:	dec    edi
  4043b2:	test   DWORD PTR [ebx],ebp
  4043b4:	xor    DWORD PTR [eax-0x76],ecx
  4043b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b8:	xor    ebp,DWORD PTR [ecx]
  4043ba:	arpl   WORD PTR [edx-0x3],cx
  4043bd:	push   cs
  4043be:	mov    edi,DWORD PTR [edi+ebp*4+0x30304119]
  4043c5:	inc    edi
  4043c6:	and    edx,ebx
  4043c8:	and    BYTE PTR [eax-0x37],0xfd
  4043cc:	fsub   DWORD PTR [eax]
  4043ce:	and    DWORD PTR ds:[ebp-0x51],edi
  4043d2:	mov    ds:0x89b94715,eax
  4043d7:	dec    ebx
  4043d8:	(bad)  
  4043d9:	rcl    eax,1
  4043db:	xchg   ecx,eax
  4043dc:	push   ebp
  4043de:	es xchg ebx,eax
  4043e0:	mov    eax,0xbdc69fa6
  4043e5:	sbb    dh,BYTE PTR [ecx]
  4043e7:	sti    
  4043e8:	or     esp,DWORD PTR [ecx+0x35]
  4043eb:	sbb    DWORD PTR ds:[ecx+0x27d818e7],eax
  4043f2:	retf   0xb682
  4043f5:	sub    BYTE PTR [eax],bh
  4043f7:	adc    edi,DWORD PTR [ebp-0x5d]
  4043fa:	push   ss
  4043fb:	mov    esi,0x4ef6253c
  404400:	or     al,BYTE PTR [edi]
  404402:	inc    eax
  404403:	and    al,0xe8
  404405:	(bad)  
  404406:	cmc    
  404407:	je     0x404410
  404409:	adc    dl,ch
  40440b:	(bad)  
  40440c:	sahf   
  40440d:	sbb    edi,DWORD PTR [ebx-0x23]
  404410:	mov    ch,0x40
  404412:	in     al,dx
  404413:	xor    DWORD PTR [ecx+0x4b],ecx
  404416:	jp     0x4043e0
  404418:	add    al,0x4a
  40441a:	inc    esp
  40441b:	cli    
  40441c:	push   ebp
  40441d:	add    eax,0x54a5bdae
  404422:	neg    BYTE PTR [eax]
  404424:	pop    esi
  404425:	dec    esi
  404426:	mov    DWORD PTR [ecx],esp
  404428:	adc    BYTE PTR [edx+0x5e],al
  40442b:	mov    ch,0x9d
  40442d:	out    0xf3,eax
  40442f:	jns    0x404463
  404431:	mov    ecx,0xb222dd05
  404436:	mov    dl,0x5a
  404438:	mov    eax,ds:0x862ac761
  40443d:	in     eax,dx
  40443e:	lock test BYTE PTR gs:[eax+esi*1+0x3b],dl
  404444:	leave  
  404445:	jg     0x404464
  404447:	xchg   ebp,eax
  404448:	in     al,0x9e
  40444a:	and    al,0x69
  40444c:	jmp    0x404406
  40444e:	dec    edi
  40444f:	inc    edi
  404450:	mov    ?,edx
  404452:	dec    esi
  404453:	sahf   
  404454:	mul    DWORD PTR [eax]
  404456:	stc    
  404457:	xchg   edx,eax
  404458:	ror    edx,1
  40445a:	cmp    ebp,0x56
  40445d:	loop   0x4044d2
  40445f:	mov    al,0xa4
  404461:	jl     0x404401
  404463:	test   eax,0x9ed74991
  404468:	in     al,0x1a
  40446a:	jbe    0x4044d3
  40446c:	pop    edi
  40446d:	lock out 0x50,eax
  404470:	es add al,0x83
  404473:	vmwrite edi,esi
  404476:	jae    0x4044aa
  404478:	adc    al,0x32
  40447a:	js     0x4044a7
  40447c:	mov    ebx,0x72a434cc
  404481:	inc    edx
  404482:	push   DWORD PTR [edx+0x77]
  404485:	jmp    FWORD PTR [ebx]
  404487:	imul   eax,DWORD PTR [edx],0xffffffe3
  40448a:	sbb    BYTE PTR ds:0xb037bf03,bl
  404490:	cdq    
  404491:	sub    esi,DWORD PTR [ebp+0x21]
  404494:	push   esi
  404495:	jecxz  0x40444c
  404497:	adc    ch,BYTE PTR [edx-0x1c]
  40449a:	int    0x9a
  40449c:	sbb    al,0x9b
  40449e:	sbb    al,0x55
  4044a0:	pop    ecx
  4044a1:	push   ebp
  4044a2:	xor    BYTE PTR [edx+edi*2+0x1ca694fe],dl
  4044a9:	dec    eax
  4044aa:	mov    cl,0x6e
  4044ac:	sub    al,bl
  4044ae:	jno    0x4044e2
  4044b0:	jnp    0x404446
  4044b2:	mov    ds:0x93d0d9ff,al
  4044b7:	repnz shl BYTE PTR [eax],1
  4044ba:	inc    eax
  4044bb:	test   BYTE PTR [esi],dh
  4044bd:	push   cs
  4044be:	nop
  4044bf:	lods   eax,DWORD PTR ds:[esi]
  4044c0:	inc    ebp
  4044c1:	push   ds
  4044c2:	sub    edi,DWORD PTR fs:[edx-0x39f1fe61]
  4044c9:	pop    ds
  4044ca:	imul   esp,ebp,0xffffffbc
  4044cd:	sbb    ch,ch
  4044cf:	add    DWORD PTR [ebp-0x6fe6c60],0x3aa45f7f
  4044d9:	inc    edx
  4044da:	scas   al,BYTE PTR es:[edi]
  4044db:	cli    
  4044dc:	vpackssdw xmm6,xmm2,XMMWORD PTR [eax]
  4044e0:	retf   0x5f71
  4044e3:	xchg   ecx,ecx
  4044e5:	add    eax,0xf5e4461a
  4044eb:	push   ss
  4044ec:	cmp    edi,DWORD PTR [edx+0x50244b82]
  4044f2:	cmp    BYTE PTR [edi],dl
  4044f4:	cmp    al,0x4f
  4044f6:	(bad)  
  4044f7:	fisubr DWORD PTR cs:[eax+0x5f]
  4044fb:	dec    esp
  4044fc:	push   esi
  4044fd:	rcr    esp,cl
  4044ff:	inc    esp
  404500:	pop    ds
  404501:	repz jg 0x40455f
  404504:	shl    DWORD PTR [ebx-0x7b6e1106],0x27
  40450b:	lahf   
  40450c:	pop    esi
  40450d:	lahf   
  40450e:	sbb    DWORD PTR ds:0x99b7f5a9,ecx
  404514:	mov    bl,0xb5
  404516:	dec    esp
  404517:	xchg   ebp,eax
  404518:	fnstsw WORD PTR [esi-0x42]
  40451b:	jmp    0xd85c51e7
  404520:	jmp    0x296d:0x5f8cccde
  404527:	push   es
  404528:	fwait
  404529:	cmp    eax,0x62e896c
  40452e:	std    
  40452f:	mov    ds:0xad2ca211,eax
  404534:	mov    bl,0xcc
  404536:	lods   eax,DWORD PTR ds:[esi]
  404537:	push   esi
  404538:	seta   BYTE PTR [esp+esi*2]
  40453c:	lock xor eax,0xe400a827
  404542:	lods   eax,DWORD PTR ds:[esi]
  404543:	jecxz  0x404501
  404545:	leave  
  404546:	jg     0x404544
  404548:	mov    al,ds:0x7d6ec764
  40454d:	test   DWORD PTR [esi-0x512e6954],edi
  404553:	mov    dh,0x4
  404555:	xchg   esp,eax
  404556:	mov    ds:0x9229d45d,al
  40455b:	lds    esp,FWORD PTR [edx-0x9]
  40455e:	jl     0x404573
  404560:	jmp    0x4b57:0xca081f5d
  404567:	pop    esi
  404568:	sub    ah,bl
  40456a:	shl    DWORD PTR [edi+0x8d09335],1
  404570:	adc    DWORD PTR [esp+ebp*2+0x1bf4e50e],0xb947624c
  40457b:	dec    ebx
  40457c:	cmp    edi,DWORD PTR [ecx]
  40457e:	test   eax,0xf916a228
  404583:	mov    ds:0x2a649ed4,al
  404588:	cwde   
  404589:	cld    
  40458a:	dec    ebp
  40458b:	and    eax,0x8f756a56
  404590:	mov    al,0xb4
  404592:	cmp    eax,0x7372edf2
  404597:	push   ebp
  404598:	outs   dx,BYTE PTR ds:[esi]
  404599:	or     esp,eax
  40459b:	sbb    esi,DWORD PTR [ebp-0x2d]
  40459e:	js     0x404596
  4045a0:	cmp    eax,0x8da85da7
  4045a5:	mov    esp,DWORD PTR [ecx+edi*1-0x60]
  4045a9:	enter  0x4670,0xa9
  4045ad:	jbe    0x4045db
  4045af:	ret    0xab98
  4045b2:	stos   DWORD PTR es:[edi],eax
  4045b3:	int3   
  4045b4:	sbb    BYTE PTR [edx],0x85
  4045b7:	fwait
  4045b8:	pusha  
  4045b9:	and    edi,DWORD PTR [ebx+0x6c]
  4045bc:	dec    eax
  4045bd:	adc    BYTE PTR [ebx+0x6a30fb7d],0xfd
  4045c4:	outs   dx,DWORD PTR ds:[esi]
  4045c5:	xor    bh,bh
  4045c7:	jmp    0x40461e
  4045c9:	jae    0x404636
  4045cb:	inc    esi
  4045cc:	mov    ebp,0xad297db2
  4045d1:	jl     0x4045f5
  4045d3:	mov    cl,0x10
  4045d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d6:	dec    ecx
  4045d7:	loopne 0x404570
  4045d9:	mov    dh,0x27
  4045db:	inc    edi
  4045dd:	sti    
  4045de:	sahf   
  4045df:	jle    0x404645
  4045e1:	out    0x8a,eax
  4045e3:	repnz fcomp st(3)
  4045e6:	arpl   WORD PTR [edx-0x38486ac5],si
  4045ec:	rol    DWORD PTR [edx+edi*4],0x97
  4045f0:	(bad)  
  4045f2:	mov    ds,WORD PTR [edx+0x5d]
  4045f5:	or     ecx,DWORD PTR [edx]
  4045f7:	mov    edi,es
  4045f9:	jmp    0x4045b9
  4045fb:	jns    0x404597
  4045fd:	ja     0x4045d1
  4045ff:	pop    edx
  404600:	cld    
  404601:	sti    
  404602:	push   esi
  404603:	cs mov ch,0x43
  404606:	dec    ecx
  404607:	test   DWORD PTR [eax],esp
  404609:	int    0x8e
  40460b:	aas    
  40460c:	dec    esp
  40460d:	mov    ecx,0xa02e67e7
  404612:	mov    dh,0xab
  404614:	(bad)  
  404615:	int3   
  404616:	mov    ah,0xde
  404618:	adc    BYTE PTR [eax+0x7f],ah
  40461b:	sub    DWORD PTR [ecx+0x500e4bdc],0x3e
  404622:	fisubr DWORD PTR ss:[edi]
  404625:	rcr    DWORD PTR [edi+0x6d],0x9f
  404629:	jp     0x4045e6
  40462b:	nop
  40462c:	push   ecx
  40462d:	mov    edi,0x8fdc337d
  404632:	xor    DWORD PTR [ecx+0x14d764b3],0x5d50629e
  40463c:	pusha  
  40463d:	ins    BYTE PTR es:[edi],dx
  40463e:	dec    ebp
  40463f:	repz je 0x4045de
  404642:	jne    0x404630
  404644:	icebp  
  404645:	or     eax,edx
  404647:	xchg   esi,eax
  404648:	jae    0x4046ad
  40464a:	(bad)  
  40464b:	(bad)  
  40464c:	and    BYTE PTR [ecx+0x34e9f368],ch
  404652:	fcmovu st,st(3)
  404654:	sub    eax,0x60e132b2
  404659:	adc    eax,0x631fa373
  40465e:	or     ebp,ebp
  404660:	or     edi,0xeefc93cb
  404666:	mov    al,0x3b
  404668:	mov    DWORD PTR [edi+0x7bb144de],edi
  40466e:	xchg   ebx,eax
  40466f:	dec    edx
  404670:	out    0x61,eax
  404672:	call   0x2285118c
  404677:	add    al,0xc8
  404679:	push   edi
  40467a:	lds    edx,FWORD PTR [ebp+0x5ceb8022]
  404680:	jle    0x404667
  404682:	dec    esi
  404683:	leave  
  404684:	ins    DWORD PTR es:[edi],dx
  404685:	xchg   edx,eax
  404686:	fisubr WORD PTR [ebp-0x16bcde5b]
  40468c:	or     esi,DWORD PTR [esi]
  40468e:	xor    BYTE PTR [esi],bh
  404690:	(bad)  
  404691:	push   0xfffffffa
  404693:	sub    al,0xa0
  404695:	fld    QWORD PTR [ebx+0x78]
  404698:	lea    edi,[ebp-0x2fa8f1c8]
  40469e:	pusha  
  40469f:	xor    eax,DWORD PTR [edx+0x10508fec]
  4046a5:	mov    al,0xf
  4046a7:	leave  
  4046a8:	jb     0x40465c
  4046aa:	or     ebx,DWORD PTR [ebp-0x2fd52d40]
  4046b0:	xor    eax,0xea89a2b1
  4046b5:	test   al,0xcd
  4046b7:	push   eax
  4046b8:	std    
  4046b9:	jmp    0x4c18:0xe2672a48
  4046c0:	add    al,0x4b
  4046c2:	out    dx,al
  4046c3:	pop    edx
  4046c4:	pop    edi
  4046c5:	shl    DWORD PTR [edx+ecx*2-0x49387583],1
  4046cc:	lds    esi,FWORD PTR [ebp-0x264061bd]
  4046d2:	dec    edx
  4046d3:	jne    0x4046e1
  4046d5:	repnz daa 
  4046d7:	mov    esi,0xe1a8066
  4046dc:	mov    cl,0xfd
  4046de:	jnp    0x404690
  4046e0:	and    DWORD PTR ss:[ecx+0x42],esi
  4046e4:	call   0x329c8af7
  4046e9:	jne    0x4046cb
  4046eb:	xchg   ecx,eax
  4046ec:	jnp    0x4046be
  4046ee:	daa    
  4046ef:	mov    esp,0x4fdea73b
  4046f4:	xor    eax,0xbf9b9763
  4046f9:	fcomip st,st(3)
  4046fb:	mov    BYTE PTR [edi+edi*4],bl
  4046fe:	or     DWORD PTR [edx+0x4a592d7e],ecx
  404704:	data16 fimul DWORD PTR [esi+0x6e]
  404708:	rcl    BYTE PTR [ecx],1
  40470a:	(bad)  
  40470b:	into   
  40470c:	imul   BYTE PTR [edi-0x54]
  40470f:	mov    cl,0x48
  404711:	sub    BYTE PTR [esi],bl
  404713:	sahf   
  404714:	pop    ebp
  404715:	dec    esp
  404716:	scas   al,BYTE PTR es:[edi]
  404717:	and    al,0x64
  404719:	mov    ch,0x3f
  40471b:	push   es
  40471c:	int3   
  40471d:	adc    BYTE PTR [ecx-0x525bd507],dl
  404723:	push   eax
  404724:	fmul   QWORD PTR [edi-0x31cfd6ea]
  40472a:	repz sub edi,ebp
  40472d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472e:	(bad)  
  40472f:	sar    DWORD PTR [edx+0x667a8933],1
  404735:	xor    eax,0x942678fc
  40473a:	sub    BYTE PTR [eax+0x11],dl
  40473d:	lock cmp esi,DWORD PTR [ecx+ebx*1-0x4f]
  404742:	ins    DWORD PTR es:[edi],dx
  404743:	sbb    DWORD PTR [ebx+ebp*2],esp
  404746:	add    esp,DWORD PTR [eax+edi*4]
  404749:	fcmovnbe st,st(7)
  40474b:	adc    ebx,ecx
  40474d:	jmp    0xb85:0xe9855b76
  404754:	ins    DWORD PTR es:[edi],dx
  404755:	cmp    eax,0x7c3a0eff
  40475a:	push   eax
  40475b:	add    eax,0x31dd9012
  404760:	push   0x9a01bba3
  404765:	jne    0x40472d
  404767:	ret    0x7bb9
  40476a:	stos   DWORD PTR es:[edi],eax
  40476b:	fcomi  st,st(7)
  40476d:	sub    BYTE PTR [edx],0xe7
  404770:	loop   0x404796
  404772:	cmc    
  404773:	adc    eax,0x4f284484
  404778:	xchg   edx,eax
  404779:	adc    al,0x73
  40477b:	pop    es
  40477c:	jmp    0x6c5d:0x54c5116f
  404783:	in     eax,0x36
  404785:	mov    ecx,0x3ca0d523
  40478a:	aad    0x53
  40478c:	sbb    BYTE PTR [edx+ebx*1-0x208fa9d5],0xf9
  404794:	sahf   
  404795:	xchg   BYTE PTR [ebp-0x71b391af],ah
  40479b:	push   esp
  40479c:	sahf   
  40479d:	mov    cl,0x91
  40479f:	mov    bl,dl
  4047a1:	xlat   BYTE PTR ds:[ebx]
  4047a2:	scas   eax,DWORD PTR es:[edi]
  4047a3:	call   0xb274:0x53e2df55
  4047aa:	sbb    al,0x4
  4047ac:	test   eax,0x15fd4d6c
  4047b1:	xor    eax,0x622af294
  4047b6:	loope  0x4047ae
  4047b8:	or     bh,BYTE PTR [esi+0x70]
  4047bb:	or     al,0x19
  4047bd:	loopne 0x4047b2
  4047bf:	mov    ecx,0x5c935497
  4047c4:	js     0x4047ad
  4047c6:	pop    edx
  4047c7:	push   esi
  4047c8:	outs   dx,DWORD PTR ds:[esi]
  4047c9:	jmp    0x4047ca
  4047cb:	jbe    0x4047f2
  4047cd:	sbb    BYTE PTR [eax+0x56],al
  4047d0:	fs popf 
  4047d2:	or     ebx,DWORD PTR [ebx+esi*2-0x55c242fa]
  4047d9:	push   cs
  4047da:	or     edx,DWORD PTR [esi+eiz*1]
  4047dd:	xor    eax,0x3c3fa587
  4047e2:	inc    esi
  4047e3:	push   cs
  4047e4:	inc    ebp
  4047e5:	(bad)  
  4047e6:	jl     0x404789
  4047e8:	mov    ecx,es
  4047ea:	sbb    DWORD PTR [esi+0x4c],eax
  4047ed:	dec    esp
  4047ee:	xchg   ecx,eax
  4047ef:	aas    
  4047f0:	adc    eax,0x8d08f38e
  4047f5:	stos   BYTE PTR es:[edi],al
  4047f6:	fs sbb ch,cl
  4047f9:	idiv   DWORD PTR [edx-0x9179bcd]
  4047ff:	mov    ch,0x27
  404801:	push   edx
  404802:	jbe    0x4047ef
  404804:	int    0x7f
  404806:	inc    ecx
  404807:	aas    
  404808:	dec    esp
  404809:	test   DWORD PTR [eax+0x71],edx
  40480c:	(bad)  
  40480d:	imul   esp,DWORD PTR [ebp-0x3f1a859c],0xffffff81
  404814:	jae    0x4047f9
  404816:	out    dx,eax
  404817:	sbb    al,BYTE PTR [ebp-0x1]
  40481a:	fmulp  st(6),st
  40481c:	inc    esi
  40481d:	ja     0x40479f
  40481f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404820:	mov    dh,0x9f
  404822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404823:	stos   BYTE PTR es:[edi],al
  404824:	push   0x46e02d35
  404829:	scas   al,BYTE PTR es:[edi]
  40482a:	scas   eax,DWORD PTR es:[edi]
  40482b:	pushf  
  40482c:	int    0x88
  40482e:	lods   al,BYTE PTR ds:[esi]
  40482f:	fcmovu st,st(0)
  404831:	or     ch,BYTE PTR [edx+0x4ed0bd]
  404837:	add    DWORD PTR [edi-0x7fef0c34],0x8eac4230
  404841:	lahf   
  404842:	mov    ebx,DWORD PTR ds:0x33110e6a
  404848:	adc    edi,ebp
  40484a:	mov    WORD PTR [edi],?
  40484c:	loope  0x40485b
  40484e:	mov    eax,ds:0x9a4a92e0
  404853:	scas   al,BYTE PTR es:[edi]
  404854:	lods   eax,DWORD PTR ds:[si]
  404856:	popf   
  404857:	pop    esp
  404858:	cs rcl esi,cl
  40485b:	leave  
  40485c:	add    bl,BYTE PTR [edx+0x4d0557a3]
  404862:	retf   
  404863:	(bad)  
  404865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404866:	mov    bl,0xa9
  404868:	or     ebx,DWORD PTR [eax-0x80]
  40486b:	push   esp
  40486c:	mov    ds:0x424b2462,eax
  404871:	xor    al,0x70
  404873:	sub    eax,DWORD PTR [ebx-0x46]
  404876:	pushf  
  404877:	inc    edx
  404878:	ins    DWORD PTR es:[edi],dx
  404879:	inc    BYTE PTR [eax-0x4e]
  40487c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40487d:	adc    eax,0x1d780e48
  404882:	aad    0x3a
  404884:	out    dx,al
  404885:	(bad)  
  404886:	ins    DWORD PTR es:[edi],dx
  404887:	in     eax,dx
  404888:	stc    
  404889:	mov    ebp,0x8dd16a88
  40488e:	or     bh,BYTE PTR [eax-0x14a41283]
  404894:	call   0x808cb9a7
  404899:	arpl   WORD PTR [edx-0x23],ax
  40489c:	cwde   
  40489d:	jle    0x4048a3
  40489f:	call   0x550489e2
  4048a4:	cmp    al,0xb2
  4048a6:	push   ebx
  4048a7:	mov    BYTE PTR [edi-0x6b],dh
  4048aa:	retf   0xb009
  4048ad:	adc    eax,0xcba5ad5a
  4048b2:	sti    
  4048b3:	retf   0x9985
  4048b6:	sbb    DWORD PTR [edx],ebx
  4048b8:	les    esp,FWORD PTR [ebx+eax*4+0x61886645]
  4048bf:	jb     0x4048c3
  4048c1:	sub    eax,0x82aa8ca8
  4048c6:	pop    ebp
  4048c7:	mov    bh,0x4f
  4048c9:	xor    al,0x6f
  4048cb:	fcmovnu st,st(1)
  4048cd:	(bad)  
  4048ce:	cmc    
  4048cf:	mov    BYTE PTR [edi],ch
  4048d1:	mov    ds:0xbec84f8a,al
  4048d6:	call   0xdd41:0xffcbac13
  4048dd:	xor    BYTE PTR [edi+0x4f],0xb0
  4048e1:	lahf   
  4048e2:	and    BYTE PTR [edi-0x7b],bh
  4048e5:	dec    eax
  4048e6:	jl     0x404876
  4048e8:	push   0x8fd41894
  4048ed:	les    esi,FWORD PTR [esi+0x78]
  4048f0:	mov    esp,0x4f045f3f
  4048f5:	dec    edx
  4048f6:	hlt    
  4048f7:	imul   esi,DWORD PTR [esi-0x3346f277],0x4dc8365c
  404901:	cmc    
  404902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404903:	(bad)  
  404904:	loope  0x404922
  404906:	jns    0x40492e
  404908:	or     BYTE PTR [ebp+eiz*1+0x5287cf2e],bl
  40490f:	or     DWORD PTR [ecx],eax
  404911:	mov    cl,0x2b
  404913:	ret    0xe8d4
  404916:	jg     0x404918
  404918:	xchg   edi,eax
  404919:	mov    ecx,0xd3b74126
  40491e:	(bad)  
  40491f:	mov    ebx,0x2e2aca8
  404924:	inc    BYTE PTR [edi+0x12a69db8]
  40492a:	ss mov eax,0x45419cc5
  404930:	sbb    eax,0x720aded3
  404935:	inc    ebp
  404936:	lds    esi,FWORD PTR [ebx]
  404938:	mov    esp,0x3889179d
  40493d:	stos   BYTE PTR es:[edi],al
  40493e:	cmp    al,0x70
  404940:	push   eax
  404941:	stc    
  404942:	lock pop ecx
  404944:	xchg   edi,eax
  404945:	icebp  
  404946:	and    ecx,DWORD PTR [ebp-0x24]
  404949:	arpl   WORD PTR [edx-0x1c],si
  40494c:	sub    al,0x6
  40494e:	in     eax,0xf1
  404950:	(bad)  
  404952:	fld    TBYTE PTR [esi]
  404954:	xchg   ebx,eax
  404955:	lea    eax,[edx-0x1eaead9e]
  40495b:	call   0x839c:0x29302d52
  404962:	sub    BYTE PTR [esi+0x60],0xb9
  404966:	ds std 
  404968:	lds    esi,FWORD PTR [edx]
  40496a:	xchg   esp,eax
  40496b:	xor    ah,BYTE PTR [ebp-0x776ef92e]
  404971:	xchg   esi,eax
  404972:	in     al,0xb4
  404974:	pop    eax
  404975:	(bad)  
  404976:	fdivr  st(1),st
  404978:	lds    ebx,FWORD PTR [esi]
  40497a:	mov    BYTE PTR [ebx],ch
  40497c:	call   0x19385ff2
  404981:	pop    eax
  404982:	sbb    eax,0xbe01eb68
  404987:	das    
  404988:	and    DWORD PTR [esi+0x9],esp
  40498b:	jno    0x4049a2
  40498d:	sti    
  40498e:	inc    esi
  40498f:	jg     0x4049bf
  404991:	adc    eax,0x68aceead
  404996:	pop    es
  404997:	ins    BYTE PTR es:[edi],dx
  404998:	retf   0x4914
  40499b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499c:	std    
  40499d:	and    esi,DWORD PTR [ebx-0x6e9de071]
  4049a3:	dec    ecx
  4049a4:	push   cs
  4049a5:	pushf  
  4049a6:	gs cwde 
  4049a8:	jae    0x4049d8
  4049aa:	xchg   esi,eax
  4049ab:	pop    esi
  4049ac:	jge    0x404a25
  4049ae:	(bad)  
  4049af:	xchg   edi,eax
  4049b0:	xor    ch,dh
  4049b2:	mov    bh,0x3
  4049b4:	inc    ebp
  4049b5:	ja     0x4049ce
  4049b7:	cmp    DWORD PTR [edi-0xb8616eb],ebx
  4049bd:	shl    DWORD PTR [esi+0x1619841],1
  4049c3:	inc    esi
  4049c4:	test   DWORD PTR [esi+0x36],ebp
  4049c7:	or     dl,bh
  4049c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ca:	std    
  4049cb:	cwde   
  4049cc:	add    al,0xf4
  4049ce:	jbe    0x404987
  4049d0:	leave  
  4049d1:	inc    dx
  4049d3:	psllq  mm7,QWORD PTR [ebp+0x52c121fe]
  4049da:	mov    ch,0x35
  4049dc:	dec    ecx
  4049dd:	sbb    BYTE PTR [ebp+0x76f3019c],bl
  4049e3:	mov    ?,WORD PTR [ebx+0x5c]
  4049e6:	sbb    edi,DWORD PTR ds:0xa360de95
  4049ec:	jmp    0x4049ea
  4049ee:	mov    dl,0x7a
  4049f0:	sub    eax,0x6d5c3f14
  4049f5:	pop    es
  4049f6:	(bad)
  4049f9:	xlat   BYTE PTR ds:[ebx]
  4049fa:	cli    
  4049fb:	dec    esi
  4049fc:	stc    
  4049fd:	or     ecx,ebx
  4049ff:	jno    0x404a02
  404a01:	pop    ebx
  404a02:	fld    st(2)
  404a04:	ss jecxz 0x404a4d
  404a07:	dec    esp
  404a08:	out    0x7b,al
  404a0a:	add    ah,BYTE PTR [ebx+edx*1+0x6f]
  404a0e:	lods   eax,DWORD PTR ds:[esi]
  404a0f:	xchg   ebx,eax
  404a10:	test   al,0x41
  404a12:	cmp    BYTE PTR [ebp-0x3d],bh
  404a15:	and    BYTE PTR [esi-0x63],dl
  404a18:	pop    ebx
  404a19:	mov    ebx,0xa9d479e2
  404a1e:	push   es
  404a1f:	cmp    DWORD PTR [edi+0x34264fb0],esp
  404a25:	xchg   ebp,eax
  404a26:	xlat   BYTE PTR ds:[ebx]
  404a27:	ret    
  404a28:	(bad)  
  404a29:	stos   DWORD PTR es:[edi],eax
  404a2a:	loop   0x4049fd
  404a2c:	ja     0x404a9f
  404a2e:	(bad)  
  404a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a31:	dec    edi
  404a32:	jle    0x404a78
  404a34:	pusha  
  404a35:	push   esi
  404a36:	dec    esi
  404a37:	in     al,dx
  404a38:	sub    eax,0xa711e7cc
  404a3d:	and    dl,0x46
  404a40:	out    0xb9,al
  404a42:	jle    0x404a8b
  404a44:	ja     0x404a36
  404a46:	ret    0x421e
  404a49:	imul   edi,DWORD PTR [ecx+edx*1+0x35],0xffffffb3
  404a4e:	rcr    eax,0x1c
  404a51:	push   edi
  404a52:	std    
  404a53:	loop   0x404a1c
  404a55:	rcl    DWORD PTR [edx+0x74],cl
  404a58:	jmp    0x95a3dae2
  404a5d:	mov    ebp,DWORD PTR [eax-0x8d08ae6]
  404a63:	call   0xdacc0a68
  404a68:	fst    DWORD PTR [ecx]
  404a6a:	add    al,0xb8
  404a6c:	push   ebx
  404a6d:	push   edi
  404a6e:	xchg   BYTE PTR [ebp+0x7f5505c3],al
  404a74:	dec    edx
  404a75:	xor    edi,edi
  404a77:	ret    0x8e35
  404a7a:	mov    edx,0x71573bf7
  404a7f:	aam    0xee
  404a81:	jmp    0xad9a:0x2d26e3d4
  404a88:	aad    0x8
  404a8a:	dec    edx
  404a8b:	mov    bh,0x2c
  404a8d:	test   ax,0xee54
  404a91:	jo     0x404a99
  404a93:	aaa    
  404a94:	pushf  
  404a95:	pop    es
  404a96:	pop    esp
  404a97:	std    
  404a98:	sbb    BYTE PTR [ebx+0x35b27990],0xb5
  404a9f:	ins    DWORD PTR es:[edi],dx
  404aa0:	call   DWORD PTR [edi]
  404aa2:	sub    edx,DWORD PTR [esp+ebp*2]
  404aa5:	adc    ecx,DWORD PTR [ebx-0x206092ef]
  404aab:	sbb    eax,0xcaa913f0
  404ab0:	xchg   ebx,eax
  404ab1:	into   
  404ab2:	sar    DWORD PTR [eax-0x4c07b43e],1
  404ab8:	cmp    edi,ecx
  404aba:	or     BYTE PTR [edi+edi*8-0x11f118da],dh
  404ac1:	sub    BYTE PTR [edx-0x56dd2f36],ch
  404ac7:	into   
  404ac8:	or     DWORD PTR [ebx],esi
  404aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404acb:	out    0xf0,al
  404acd:	popa   
  404ace:	dec    ecx
  404acf:	adc    al,0xc9
  404ad1:	or     ebp,DWORD PTR [edx+eiz*2+0x32]
  404ad5:	out    dx,al
  404ad6:	test   BYTE PTR [ebp+0x2784695],0x4e
  404add:	sti    
  404ade:	sub    DWORD PTR cs:[edx],0x2b
  404ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae3:	je     0x404afd
  404ae5:	mov    ebp,0x1281503b
  404aea:	jne    0x404aad
  404aec:	dec    ebx
  404aed:	xor    ah,bh
  404aef:	and    al,0x4b
  404af1:	cmp    al,0x15
  404af3:	mov    dl,0x2e
  404af5:	leave  
  404af6:	mov    ds:0x56d3f4d,al
  404afb:	adc    DWORD PTR [esi+0x33],ecx
  404afe:	mov    ecx,0x5b637e1e
  404b03:	xchg   ecx,eax
  404b04:	je     0x404b66
  404b06:	call   DWORD PTR [ecx-0x661150bb]
  404b0c:	sar    ah,1
  404b0e:	lea    esp,[esi-0x78d33f8]
  404b14:	jle    0x404b84
  404b16:	pop    es
  404b17:	iret   
  404b18:	(bad)  
  404b19:	repz in al,dx
  404b1b:	jp     0x404b6e
  404b1d:	inc    ebx
  404b1e:	and    eax,0x64a0d4ae
  404b23:	mov    ds,ecx
  404b25:	mov    BYTE PTR [esi+edi*2],ch
  404b28:	add    cl,dl
  404b2a:	xchg   edi,eax
  404b2b:	jne    0x404b7c
  404b2d:	bound  ebx,QWORD PTR [edx-0x24a7b939]
  404b33:	push   edx
  404b34:	lods   eax,DWORD PTR ds:[esi]
  404b35:	div    al
  404b37:	jmp    0xfbbf4850
  404b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b3d:	xor    dl,BYTE PTR [edi+0x2c]
  404b40:	loope  0x404b5c
  404b42:	sahf   
  404b43:	mov    BYTE PTR [edx*8-0x793c9a12],cl
  404b4a:	adc    eax,0x9cc3884b
  404b4f:	repz mov eax,0xef55ddb7
  404b55:	arpl   WORD PTR [edx-0x51ed0528],bx
  404b5b:	xchg   edi,eax
  404b5c:	push   ss
  404b5d:	jmp    0xf8b9:0xaa432e0d
  404b64:	xlat   BYTE PTR ds:[ebx]
  404b65:	enter  0xee1e,0x90
  404b69:	cmp    edi,0x87251dce
  404b6f:	js     0x404bd8
  404b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b72:	in     al,dx
  404b73:	push   ebp
  404b74:	inc    esi
  404b75:	xchg   ebx,eax
  404b76:	js     0x404b76
  404b78:	add    eax,0x4af019d5
  404b7d:	jo     0x404b4a
  404b7f:	ss push ebx
  404b81:	test   al,0xb0
  404b83:	jno    0x404b06
  404b85:	jge    0x404b07
  404b87:	lods   al,BYTE PTR ds:[esi]
  404b88:	dec    ebx
  404b89:	sbb    al,0xe6
  404b8b:	repz cmc 
  404b8d:	sbb    eax,0x2c12c377
  404b92:	dec    esi
  404b93:	inc    ebp
  404b94:	ds pop ebx
  404b96:	ror    DWORD PTR [ecx+ebp*4],1
  404b99:	pop    esp
  404b9a:	add    dl,BYTE PTR [edx+0x2b77c8ef]
  404ba0:	loope  0x404b24
  404ba2:	inc    esp
  404ba3:	mov    ebp,0x72c5c1d7
  404ba8:	cwde   
  404ba9:	mul    BYTE PTR [ecx]
  404bab:	out    0x2a,eax
  404bad:	iret   
  404bae:	adc    DWORD PTR [esi+0x40],eax
  404bb1:	nop
  404bb2:	cmp    BYTE PTR ds:0x6eb878d4,dl
  404bb8:	ss cmp al,0x8
  404bbb:	sub    edi,DWORD PTR [edi-0x70105ad2]
  404bc1:	scas   al,BYTE PTR es:[edi]
  404bc2:	js     0x404c1a
  404bc4:	sub    ch,BYTE PTR [ebp-0x788e9d71]
  404bca:	adc    eax,0xfbb0e605
  404bcf:	xor    ah,dl
  404bd1:	pop    es
  404bd2:	jmp    0x85db:0xc01380b7
  404bd9:	cmp    ch,dh
  404bdb:	dec    ebp
  404bdc:	adc    BYTE PTR [ecx+eiz*2],dl
  404bdf:	mov    ah,0x92
  404be1:	(bad)  
  404be2:	push   ds
  404be3:	enter  0xbdfc,0x29
  404be7:	fstp   TBYTE PTR [ebp+0x3b]
  404bea:	push   ebp
  404beb:	mov    ds:0x8d1599ea,al
  404bf0:	call   0x4758:0x1c593c21
  404bf7:	add    eax,0x1caca169
  404bfc:	pop    es
  404bfd:	bound  eax,QWORD PTR [edi]
  404bff:	dec    ebx
  404c00:	fdiv   DWORD PTR [edi-0x19]
  404c03:	push   edx
  404c04:	jmp    0xfed3:0x4429d7e9
  404c0b:	cmp    eax,0x6cb1cd07
  404c10:	gs add BYTE PTR fs:[edx],0xd6
  404c15:	pop    edx
  404c16:	xor    ebx,DWORD PTR [ebx]
  404c18:	mov    ebx,0xd855cf09
  404c1d:	cmp    BYTE PTR [ebx],dh
  404c1f:	mov    ?,WORD PTR [esi+0x8]
  404c22:	mov    ebx,0x216ccc96
  404c27:	push   0x53
  404c29:	retf   
  404c2a:	imul   esi,DWORD PTR [ecx],0x79d5620f
  404c30:	stos   BYTE PTR es:[edi],al
  404c31:	sahf   
  404c32:	cmp    DWORD PTR [ecx+0x45c4638],0xffffff94
  404c39:	scas   eax,DWORD PTR es:[edi]
  404c3a:	sbb    al,0xc
  404c3c:	xor    DWORD PTR [eax+edi*8-0x3974daa5],edx
  404c43:	mov    bl,bh
  404c45:	test   al,0x14
  404c47:	stos   DWORD PTR es:[edi],eax
  404c48:	jno    0x404c0a
  404c4a:	ins    BYTE PTR es:[edi],dx
  404c4b:	imul   ebp,DWORD PTR [esi+0x2e2d69ae],0xffffff95
  404c52:	in     al,0xba
  404c54:	jno    0x404bf7
  404c56:	jno    0x404bf3
  404c58:	daa    
  404c59:	outs   dx,DWORD PTR ds:[esi]
  404c5a:	adc    ch,bh
  404c5c:	or     esp,0x5e20bc3e
  404c62:	jne    0x404c9f
  404c64:	pop    eax
  404c65:	mov    edx,0xd5af3f81
  404c6a:	or     al,0x49
  404c6c:	or     eax,0x5d18fd2
  404c71:	fnstsw WORD PTR [esi-0x20]
  404c74:	push   ebx
  404c75:	aas    
  404c76:	mov    BYTE PTR [esi-0x187cca5e],ah
  404c7c:	inc    esi
  404c7d:	cmp    ch,BYTE PTR [ebp+esi*2+0x602ca616]
  404c84:	push   0x17
  404c86:	mov    cl,0xe1
  404c88:	mov    dh,0xba
  404c8a:	div    DWORD PTR [ecx+0x48]
  404c8d:	mov    ecx,0x10389230
  404c92:	xor    BYTE PTR [esp+esi*4],al
  404c95:	in     al,dx
  404c96:	dec    esp
  404c97:	div    BYTE PTR ds:0x3c9c22a0
  404c9d:	sbb    DWORD PTR [edx+0x272c1d4c],esp
  404ca3:	adc    DWORD PTR [eax-0xb379cfb],0x34c3d77b
  404cad:	sbb    ebx,DWORD PTR [edx-0x37c6d240]
  404cb3:	pop    esp
  404cb4:	mov    ds:0x9a727a9,al
  404cb9:	inc    esi
  404cba:	test   DWORD PTR [eax-0x1a4d0cef],esp
  404cc0:	ja     0x404c46
  404cc2:	dec    esp
  404cc3:	push   0xffffffbb
  404cc5:	(bad)  
  404cc7:	jg     0x404d35
  404cc9:	std    
  404cca:	or     BYTE PTR [edx+0x64b2fff],cl
  404cd0:	jae    0x404c80
  404cd2:	jno    0x404cec
  404cd4:	cmp    esi,0x3e9ae899
  404cda:	fbld   TBYTE PTR [esi-0x2e]
  404cdd:	push   esi
  404cde:	xlat   BYTE PTR ds:[ebx]
  404cdf:	pop    gs
  404ce1:	push   ebx
  404ce2:	std    
  404ce3:	pop    ss
  404ce4:	sbb    DWORD PTR [edi],0x5dffda36
  404cea:	outs   dx,BYTE PTR ds:[esi]
  404ceb:	cmp    eax,0x7df26929
  404cf0:	adc    bh,BYTE PTR ds:0x7e8c65a4
  404cf6:	sub    eax,0x7363dc2e
  404cfb:	in     al,dx
  404cfc:	lea    ebp,[ecx]
  404cfe:	jb     0x404cee
  404d00:	icebp  
  404d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d02:	clc    
  404d03:	dec    ecx
  404d04:	sub    BYTE PTR [edx-0x57b6b6f2],bl
  404d0a:	adc    bl,BYTE PTR [edi+ebx*8+0x43]
  404d0e:	jae    0x404d45
  404d10:	jle    0x404d22
  404d12:	cmp    DWORD PTR [edi+0x26],ebx
  404d15:	mov    dh,BYTE PTR [ecx+ebx*8+0x36]
  404d19:	out    0x68,al
  404d1b:	cs adc edi,edi
  404d1e:	(bad)  
  404d1f:	stos   DWORD PTR es:[edi],eax
  404d20:	pushw  ds
  404d22:	psubsb mm1,QWORD PTR [eax]
  404d25:	sub    esi,DWORD PTR [ecx+0x5953ea74]
  404d2b:	fidivr WORD PTR [eax-0x5b8ebff7]
  404d31:	dec    eax
  404d32:	adc    esi,DWORD PTR [eax+0xa]
  404d35:	xor    al,0x39
  404d37:	cmp    DWORD PTR [ecx],ecx
  404d39:	pushf  
  404d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d3b:	out    0xc0,eax
  404d3d:	je     0x404cf3
  404d3f:	inc    ecx
  404d40:	jl     0x404d3f
  404d42:	mov    ecx,0x258e4cc0
  404d47:	sub    al,dl
  404d49:	xchg   BYTE PTR [edi+0x495635b6],dl
  404d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d50:	and    al,0xc
  404d52:	xchg   BYTE PTR [eax+0x5b],dl
  404d55:	push   cs
  404d56:	pop    edi
  404d57:	(bad)  
  404d58:	xchg   esi,eax
  404d59:	daa    
  404d5a:	adc    BYTE PTR [ecx+0x78],ah
  404d5d:	retf   
  404d5e:	adc    bl,BYTE PTR [eax+eiz*2]
  404d61:	loop   0x404ddd
  404d63:	clc    
  404d64:	mov    WORD PTR [ebx],?
  404d66:	mov    bl,BYTE PTR [ecx+0x3b666a01]
  404d6c:	out    dx,eax
  404d6d:	mov    DWORD PTR [esi-0x6b],esp
  404d70:	out    0x59,al
  404d72:	push   edx
  404d73:	jmp    0x848e:0x74c22f6f
  404d7a:	iret   
  404d7b:	xlat   BYTE PTR ds:[ebx]
  404d7c:	dec    esi
  404d7d:	xchg   edx,eax
  404d7e:	push   edx
  404d7f:	inc    esi
  404d80:	pop    esp
  404d81:	lock jg 0x404d50
  404d84:	pop    ecx
  404d85:	std    
  404d86:	mov    dl,0x39
  404d88:	inc    esi
  404d89:	fisttp DWORD PTR [edi]
  404d8b:	dec    eax
  404d8c:	addr16 mov ch,0x4f
  404d8f:	and    eax,0xc62dce0c
  404d94:	std    
  404d95:	outs   dx,DWORD PTR ds:[esi]
  404d96:	push   0xa3c0715a
  404d9b:	dec    ecx
  404d9c:	xchg   edi,eax
  404d9d:	in     eax,0x5a
  404d9f:	dec    edi
  404da0:	cmp    BYTE PTR [eax-0x5c],dh
  404da3:	sub    BYTE PTR [eax-0x1dde26e8],al
  404da9:	pop    DWORD PTR [edi-0xd]
  404dac:	pop    eax
  404dad:	repz ds jnp 0x404dc3
  404db1:	fnstcw WORD PTR [ebp-0x202165a8]
  404db7:	shl    cl,1
  404db9:	pop    esp
  404dba:	sbb    ebx,ecx
  404dbc:	and    eax,0xd2c83cdf
  404dc1:	inc    edx
  404dc2:	jno    0x404e2f
  404dc4:	adc    bh,dh
  404dc6:	push   ds
  404dc7:	fcom   DWORD PTR [edx+0xd]
  404dca:	ja     0x404d61
  404dcc:	mov    ch,0x67
  404dce:	xchg   esi,eax
  404dcf:	in     eax,dx
  404dd0:	xor    ebp,edx
  404dd2:	(bad)  
  404dd3:	pop    esp
  404dd4:	nop
  404dd5:	hlt    
  404dd6:	jo     0x404d89
  404dd8:	xchg   DWORD PTR [esi-0x6b],esp
  404ddb:	arpl   WORD PTR [edi+0x22],bx
  404dde:	pop    ss
  404ddf:	sbb    esi,ebp
  404de1:	sbb    DWORD PTR ds:0xbe81f312,0x50
  404de8:	call   0x3c:0xd306bef4
  404def:	jo     0x404e22
  404df1:	(bad)  
  404df2:	data16 icebp 
  404df4:	fwait
  404df5:	test   eax,0x8bb59432
  404dfa:	ja     0x404ddd
  404dfc:	mov    esp,0xff02883b
  404e01:	mov    dh,0x89
  404e03:	enter  0x176a,0x94
  404e07:	xchg   edi,eax
  404e08:	mov    bh,0xb3
  404e0a:	sbb    BYTE PTR [edx-0x4b],dl
  404e0d:	xchg   esi,eax
  404e0e:	pop    ecx
  404e0f:	mov    ecx,0x8e8ff2df
  404e14:	inc    esp
  404e15:	or     eax,0xd0eb26de
  404e1a:	cmp    eax,0xba42d945
  404e1f:	adc    al,0x30
  404e21:	scas   eax,DWORD PTR es:[edi]
  404e22:	push   0x3a
  404e24:	sbb    BYTE PTR [ecx],dl
  404e26:	mov    es,WORD PTR [ebp-0x1f]
  404e29:	retf   0x4682
  404e2c:	call   0x407:0x8ac1d958
  404e33:	inc    esi
  404e34:	out    dx,al
  404e35:	aaa    
  404e36:	sub    eax,0xc3f1895c
  404e3b:	ins    DWORD PTR es:[edi],dx
  404e3c:	push   edx
  404e3d:	(bad)  
  404e3e:	sub    DWORD PTR [eax],ebx
  404e40:	dec    ecx
  404e41:	sbb    edx,edi
  404e43:	ss (bad) 
  404e45:	fidivr WORD PTR [ebp+0x4e]
  404e48:	pop    eax
  404e49:	adc    cl,ch
  404e4b:	push   esi
  404e4c:	inc    ebx
  404e4d:	jmp    0xfc09:0x6dd94ad
  404e54:	rol    eax,cl
  404e56:	sub    BYTE PTR [edi],ah
  404e58:	jle    0x404ddf
  404e5a:	sbb    eax,0xfc5b07b3
  404e5f:	in     al,dx
  404e60:	xchg   ebx,eax
  404e61:	test   ch,ch
  404e63:	mov    BYTE PTR [ecx],ch
  404e65:	push   edi
  404e66:	inc    esp
  404e67:	jmp    0x404e94
  404e69:	dec    esi
  404e6a:	mov    ecx,eax
  404e6c:	mov    edi,0xe98a1654
  404e71:	adc    BYTE PTR [edx],0x34
  404e74:	mov    al,ds:0x7d0ba
  404e79:	enter  0x5f78,0xda
  404e7d:	in     eax,0x3c
  404e7f:	stos   BYTE PTR es:[edi],al
  404e80:	push   eax
  404e81:	fcmovnbe st,st(0)
  404e83:	jmp    0xc415:0xc7df223
  404e8a:	add    ah,bl
  404e8c:	mov    al,ds:0x712ede99
  404e91:	cdq    
  404e92:	cmp    dh,BYTE PTR [ebx]
  404e94:	aad    0x47
  404e96:	or     DWORD PTR [edx+0x10],ecx
  404e99:	out    dx,al
  404e9a:	pop    ebx
  404e9b:	pop    ecx
  404e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e9d:	test   DWORD PTR [ebx+0x6b],0x128c3cf7
  404ea4:	adc    DWORD PTR [bp+di],0xfffffff9
  404ea8:	or     eax,edx
  404eaa:	es (bad) 
  404eac:	out    0xca,eax
  404eae:	ins    BYTE PTR es:[edi],dx
  404eaf:	cmp    eax,0xe5bd740b
  404eb4:	gs add eax,0x40a065f3
  404eba:	jp     0x404eb1
  404ebc:	cld    
  404ebd:	test   BYTE PTR [eax-0x79],ch
  404ec0:	(bad)  
  404ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec3:	mov    gs,WORD PTR [esi-0x5c27d7f3]
  404ec9:	inc    DWORD PTR [ebx-0x1cdf292b]
  404ecf:	cmc    
  404ed0:	aaa    
  404ed1:	add    eax,ebp
  404ed3:	jae    0x404f4c
  404ed5:	les    ebp,FWORD PTR [ebp-0x7482e284]
  404edb:	inc    esi
  404edc:	mov    edx,0xe7dd73fa
  404ee1:	jne    0x404e7e
  404ee3:	gs push ebp
  404ee5:	jecxz  0x404f04
  404ee7:	mov    esi,0x94d74b38
  404eec:	out    dx,al
  404eed:	aas    
  404eee:	push   es
  404eef:	sub    ecx,DWORD PTR [edi]
  404ef1:	int3   
  404ef2:	sub    cl,BYTE PTR [ecx-0x307f3ae8]
  404ef8:	push   0xffffff9f
  404efa:	lock stos DWORD PTR es:[edi],eax
  404efc:	ins    DWORD PTR es:[edi],dx
  404efd:	jno    0x404f61
  404eff:	fbstp  TBYTE PTR [edx+0x60]
  404f02:	gs addr16 clc 
  404f05:	iret   
  404f06:	dec    ebx
  404f07:	inc    ebx
  404f08:	push   ebx
  404f09:	or     BYTE PTR [bx-0x6f],dl
  404f0d:	dec    edx
  404f0e:	xchg   esi,eax
  404f0f:	push   cs
  404f10:	outs   dx,BYTE PTR ds:[esi]
  404f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f12:	cwde   
  404f13:	push   esp
  404f14:	fwait
  404f15:	imul   DWORD PTR [ecx+0x2]
  404f18:	jns    0x404f81
  404f1a:	pop    eax
  404f1b:	add    dh,BYTE PTR [eax+0x776bf410]
  404f21:	add    eax,0x464c1678
  404f26:	cmp    DWORD PTR ds:0x2356384d,ecx
  404f2c:	cwde   
  404f2d:	inc    edx
  404f2e:	cmp    dl,BYTE PTR [edx-0x7506b4eb]
  404f34:	(bad)  
  404f35:	(bad)  
  404f36:	sbb    al,0x7e
  404f38:	or     DWORD PTR [edx-0x34],esp
  404f3b:	dec    ebp
  404f3c:	sbb    edx,edx
  404f3e:	jp     0x404f80
  404f40:	or     BYTE PTR [ebp+0x77fd49ff],dh
  404f46:	mov    dh,0xd
  404f48:	add    al,0xc2
  404f4a:	mov    WORD PTR [esi+0x21c5aacd],fs
  404f50:	mov    dl,0x5b
  404f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f53:	int3   
  404f54:	sub    al,0xe1
  404f56:	(bad)  
  404f57:	jge    0x404f5e
  404f59:	pushf  
  404f5a:	jecxz  0x404fd1
  404f5c:	and    BYTE PTR [ebp-0x47936a6b],0xec
  404f63:	push   esi
  404f64:	in     eax,dx
  404f65:	cmp    eax,0xaefcfe71
  404f6a:	call   0xc476cf1d
  404f6f:	add    ebx,DWORD PTR [eax+edx*1]
  404f72:	mov    bl,0x84
  404f74:	stos   DWORD PTR es:[edi],eax
  404f75:	lock aas 
  404f77:	adc    edi,DWORD PTR [edi+edx*2-0x627ceb2c]
  404f7e:	jno    0x404fdb
  404f80:	sub    DWORD PTR [esi+0x53],edx
  404f83:	xor    al,0x70
  404f85:	(bad)  
  404f86:	xchg   ebx,eax
  404f87:	cmp    al,0x33
  404f89:	mov    dh,0x5c
  404f8b:	fsubp  st(7),st
  404f8d:	js     0x404fbf
  404f8f:	test   eax,0xbe22da03
  404f94:	popf   
  404f95:	mov    dh,0x2b
  404f97:	fcomi  st,st(5)
  404f99:	mov    edi,DWORD PTR [ebp-0x84e31d6]
  404f9f:	pop    ebp
  404fa0:	mov    bl,0x7f
  404fa2:	add    esi,DWORD PTR [edi-0x7b]
  404fa5:	sbb    eax,0x891ff898
  404faa:	test   ebp,0x7451bf37
  404fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb1:	push   edi
  404fb2:	dec    esi
  404fb3:	ins    BYTE PTR es:[edi],dx
  404fb4:	pop    edi
  404fb5:	mov    ebp,0xc544b803
  404fba:	nop
  404fbb:	mov    ecx,0x493f2015
  404fc0:	(bad)  
  404fc2:	mov    dl,0x79
  404fc4:	loop   0x40500b
  404fc6:	fsubr  DWORD PTR [eax+0x35a26a08]
  404fcc:	mov    ds:0x7b07e33,al
  404fd1:	call   0x4540:0xf21a9632
  404fd8:	ror    BYTE PTR [edi-0xe],0xfb
  404fdc:	in     al,0x38
  404fde:	mov    ebx,ecx
  404fe0:	idiv   DWORD PTR [eax+0xf089944]
  404fe6:	push   cs
  404fe7:	push   0xa02f3c80
  404fec:	mov    eax,ds:0xee34f246
  404ff1:	std    
  404ff2:	mov    ebp,0xb6c19373
  404ff7:	add    ecx,DWORD PTR [ebx-0x28]
  404ffa:	addr16 pop eax
  404ffc:	(bad)  
  404ffd:	pop    esp
  404ffe:	add    DWORD PTR [edx-0x4f1abda9],ecx
  405004:	ret    
  405005:	std    
  405006:	mov    esp,0x9231a2fc
  40500b:	scas   al,BYTE PTR es:[edi]
  40500c:	jp     0x404f8e
  40500e:	mov    ebp,0x7a77c0f6
  405013:	mov    dh,0x18
  405015:	sbb    cl,BYTE PTR [ecx]
  405017:	push   esi
  405018:	test   edx,edi
  40501a:	or     eax,DWORD PTR [ecx+ebp*1]
  40501d:	js     0x405032
  40501f:	mov    eax,ds:0xecf4a931
  405024:	mov    BYTE PTR [ecx+0x50ed016a],dh
  40502a:	sub    DWORD PTR fs:[edi-0x2c],esi
  40502e:	pusha  
  40502f:	push   ebp
  405030:	jae    0x40504c
  405032:	cdq    
  405033:	retf   0x9b02
  405036:	pop    esp
  405037:	and    BYTE PTR [esi+0x640da5a],bl
  40503d:	cmp    DWORD PTR [esi+0x30],esp
  405040:	or     BYTE PTR [ecx],cl
  405042:	or     eax,0xc99fa980
  405047:	fwait
  405048:	adc    bl,bl
  40504a:	pop    edx
  40504b:	sbb    BYTE PTR [esi],0x5c
  40504e:	ret    
  40504f:	ds inc ecx
  405051:	test   edx,ebp
  405053:	and    eax,0x3b7e3cd7
  405058:	addr16 push cs
  40505a:	rol    BYTE PTR [ebp+0xc],cl
  40505d:	push   edx
  40505e:	cmp    DWORD PTR [ecx-0x3dad7cf8],edx
  405064:	cmp    ebx,DWORD PTR [edx-0x14]
  405067:	std    
  405068:	cmp    eax,0xbdde40bf
  40506d:	jae    0x40502a
  40506f:	les    ebp,FWORD PTR [ecx+0x3c]
  405072:	sub    BYTE PTR [esi],bl
  405074:	sub    ch,BYTE PTR [edx+0x22024a3d]
  40507a:	int    0xd2
  40507c:	push   ecx
  40507d:	adc    edi,DWORD PTR [edi+0x236b7528]
  405083:	push   ds
  405084:	ja     0x405064
  405086:	out    dx,al
  405087:	lds    esp,FWORD PTR [esi-0x2105111a]
  40508d:	jo     0x4050d8
  40508f:	mov    DWORD PTR [edi],0x6cebb51d
  405095:	push   ebp
  405096:	push   ebp
  405097:	pop    eax
  405098:	enter  0xc418,0xfb
  40509c:	jns    0x405041
  40509e:	mov    cl,0x6d
  4050a0:	popa   
  4050a1:	leave  
  4050a2:	test   eax,0x6050f4f8
  4050a8:	mov    WORD PTR [eax-0x75311fc9],?
  4050ae:	inc    eax
  4050af:	dec    edi
  4050b0:	push   edx
  4050b1:	ss jg  0x405089
  4050b4:	in     eax,dx
  4050b5:	and    eax,0x6bc7c880
  4050ba:	xlat   BYTE PTR ds:[ebx]
  4050bb:	inc    ebx
  4050bc:	jl     0x405107
  4050be:	test   bl,cl
  4050c0:	cmp    eax,0xd2d38bba
  4050c5:	(bad)  
  4050c6:	jo     0x40506d
  4050c8:	push   edx
  4050c9:	aas    
  4050ca:	(bad)  
  4050cb:	out    0xc5,eax
  4050cd:	push   0xf9c40f9e
  4050d2:	fwait
  4050d3:	push   ss
  4050d4:	les    ebp,FWORD PTR [ebp-0x2797adfc]
  4050da:	pop    esi
  4050db:	jl     0x4050fe
  4050dd:	adc    eax,0xc8cb738d
  4050e2:	or     eax,0xb4d15935
  4050e7:	dec    esp
  4050e8:	(bad)  
  4050e9:	xchg   edi,eax
  4050ea:	add    BYTE PTR [edi+0x11],dl
  4050ed:	loope  0x4050c5
  4050ef:	sbb    edx,DWORD PTR [ebx-0x1e]
  4050f2:	out    0xfc,al
  4050f4:	sbb    dl,BYTE PTR ds:0xd9f5283f
  4050fa:	jo     0x4050ad
  4050fc:	xchg   ebx,eax
  4050fd:	fmul   st(6),st
  4050ff:	cmp    BYTE PTR [edi+esi*1+0x74a36172],cl
  405106:	jg     0x40514a
  405108:	je     0x40513d
  40510a:	or     edi,DWORD PTR [esi+0x57]
  40510d:	and    eax,0xc1a1ebe6
  405112:	push   ss
  405113:	pop    ds
  405114:	(bad)  
  405115:	adc    al,0x35
  405117:	xchg   esi,eax
  405118:	push   cs
  405119:	jmp    0xbc9d:0x8fb328b0
  405120:	xor    al,BYTE PTR [ecx+0x3a]
  405123:	pop    ebx
  405124:	es dec ecx
  405126:	adc    dh,al
  405128:	out    0x2a,al
  40512a:	sbb    dl,ch
  40512c:	popf   
  40512d:	pop    ds
  40512e:	in     al,dx
  40512f:	xor    DWORD PTR [edx],ebx
  405131:	je     0x40514e
  405133:	mov    ah,0xfd
  405135:	cld    
  405136:	pusha  
  405137:	xchg   ecx,eax
  405138:	xor    al,0xca
  40513a:	stos   DWORD PTR es:[edi],eax
  40513b:	xor    dh,BYTE PTR [ebx+0x56d77327]
  405141:	push   ebp
  405142:	fdivr  DWORD PTR [ecx-0x4e]
  405145:	jecxz  0x4051b7
  405147:	das    
  405148:	gs inc edi
  40514a:	xor    eax,0x5d1c7a5c
  40514f:	xchg   ebx,eax
  405150:	ret    0x4bd9
  405153:	out    dx,eax
  405154:	shl    DWORD PTR [ebx],1
  405156:	jmp    0xfb61:0xd880311
  40515d:	inc    edx
  40515e:	adc    eax,0x944fceab
  405163:	push   es
  405164:	mov    al,ds:0xed2e83d
  405169:	xor    DWORD PTR [esi+edi*4+0x11],ecx
  40516d:	pop    ecx
  40516e:	mov    bh,0xcc
  405170:	stos   DWORD PTR es:[edi],eax
  405171:	pop    ebp
  405172:	jmp    0x2dc8:0x6185e73
  405179:	nop
  40517a:	add    DWORD PTR [edi],ebx
  40517c:	jmp    0xc0cd5ddf
  405181:	mov    ah,0xcc
  405183:	daa    
  405184:	pop    ebx
  405185:	mov    ds,WORD PTR [eax-0x3f]
  405188:	pop    ecx
  405189:	jno    0x4051a8
  40518b:	jge    0x4051b0
  40518d:	jg     0x4051b3
  40518f:	push   ebp
  405190:	dec    edx
  405191:	pushf  
  405192:	fst    QWORD PTR [ecx]
  405194:	cmp    edi,esp
  405196:	and    al,0x2f
  405198:	jle    0x405130
  40519a:	push   eax
  40519b:	inc    ebp
  40519c:	loopne 0x40515c
  40519e:	cmp    edx,esp
  4051a0:	mov    cl,BYTE PTR [edi+0x37b73095]
  4051a6:	call   0xafb3:0x47a470f0
  4051ad:	cmc    
  4051ae:	push   esp
  4051af:	outs   dx,BYTE PTR ds:[esi]
  4051b0:	pop    ebp
  4051b1:	ror    BYTE PTR [esi-0x880276d],1
  4051b7:	lds    ebx,FWORD PTR [esi+0x5b674c7e]
  4051bd:	pop    ecx
  4051be:	mov    eax,ds:0x4674cda2
  4051c3:	pop    edi
  4051c4:	shr    BYTE PTR [ecx-0x1e],1
  4051c7:	dec    edx
  4051c8:	xor    al,0x88
  4051ca:	hlt    
  4051cb:	lahf   
  4051cc:	inc    ebp
  4051cd:	push   es
  4051ce:	imul   edi,DWORD PTR [ebx+edi*1],0x8580f540
  4051d5:	inc    eax
  4051d6:	sub    esi,ecx
  4051d8:	ret    0xe726
  4051db:	popf   
  4051dc:	jno    0x4051c5
  4051de:	cmp    BYTE PTR [ecx+0x56],bl
  4051e1:	adc    ebx,edx
  4051e3:	dec    ebx
  4051e4:	adc    al,dh
  4051e6:	adc    DWORD PTR [eax+0x7ee98ee7],edx
  4051ec:	iret   
  4051ed:	aam    0x59
  4051ef:	sbb    al,ch
  4051f1:	in     eax,dx
  4051f2:	cdq    
  4051f3:	gs scas al,BYTE PTR es:[edi]
  4051f5:	push   0x4614260b
  4051fa:	jle    0x40521d
  4051fc:	pop    esp
  4051fd:	mov    eax,0x98a0daa
  405202:	adc    ah,BYTE PTR [ecx-0x16]
  405205:	ror    BYTE PTR [esi+0x58],0x65
  405209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40520a:	mov    cl,0x22
  40520c:	xchg   ebp,eax
  40520d:	pop    esp
  40520e:	test   eax,0x4a56e04f
  405213:	xor    cl,BYTE PTR [ebp-0x2c]
  405216:	lods   al,BYTE PTR ds:[esi]
  405217:	sti    
  405218:	inc    esp
  405219:	push   0x35
  40521b:	fild   WORD PTR [edi]
  40521d:	sbb    eax,0xf8e0218a
  405222:	data16 xor dl,BYTE PTR [ecx+0x8]
  405226:	jnp    0x405297
  405228:	in     al,0xc7
  40522a:	push   ebp
  40522b:	sbb    BYTE PTR [esi],al
  40522d:	jmp    0xde5f:0x721a09ab
  405234:	(bad)  
  405235:	push   esi
  405236:	sbb    edx,eax
  405238:	jl     0x405229
  40523a:	inc    esi
  40523b:	cmp    edx,DWORD PTR [edx+0x242000c9]
  405241:	adc    DWORD PTR [ebp+0x4c],ebp
  405244:	loopne 0x40522c
  405246:	jmpw   0x8a07
  40524a:	mov    bh,0x5b
  40524c:	adc    eax,0x424328c2
  405251:	hlt    
  405252:	cmp    ch,bh
  405254:	cli    
  405255:	je     0x40522a
  405257:	fcomp  st(6)
  405259:	mov    ch,0x70
  40525b:	aaa    
  40525c:	dec    eax
  40525d:	jns    0x405249
  40525f:	pop    ss
  405260:	xchg   esi,eax
  405261:	lods   eax,DWORD PTR ds:[esi]
  405262:	push   ebp
  405263:	div    bh
  405265:	loop   0x405264
  405267:	stos   DWORD PTR es:[edi],eax
  405268:	mov    BYTE PTR [ebx],ah
  40526a:	cmp    DWORD PTR [esi-0x4cf6c564],ebx
  405270:	das    
  405271:	pop    eax
  405272:	ss dec esi
  405274:	ds gs out dx,eax
  405277:	into   
  405278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405279:	xchg   bx,ax
  40527b:	stc    
  40527c:	pushaw 
  40527e:	xor    bl,BYTE PTR [ebp+esi*2+0x564e413]
  405285:	loope  0x405239
  405287:	add    eax,0x65eb6335
  40528c:	mov    dh,0xa3
  40528e:	mov    ebx,0xb542b4dc
  405293:	cmp    BYTE PTR [edi+0x7e],ch
  405296:	xor    al,0x4e
  405298:	mov    ah,0x15
  40529a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40529b:	mov    ah,0x15
  40529d:	jl     0x40530b
  40529f:	in     eax,0xb
  4052a1:	sbb    BYTE PTR [esi+edx*1],dl
  4052a4:	mov    edi,0x56f5d935
  4052a9:	adc    DWORD PTR [eax+edx*2],ecx
  4052ac:	mov    eax,ds:0x2055bece
  4052b1:	xchg   ebx,eax
  4052b2:	and    eax,0x40e14cfe
  4052b7:	stos   DWORD PTR es:[edi],eax
  4052b8:	out    0xe9,eax
  4052ba:	dec    esp
  4052bb:	stos   BYTE PTR es:[edi],al
  4052bc:	fsubr  DWORD PTR [esi]
  4052be:	pop    es
  4052bf:	hlt    
  4052c0:	ficom  DWORD PTR [ecx+eiz*1-0x4f0a3dbd]
  4052c7:	add    al,0xd4
  4052c9:	sub    al,0x26
  4052cb:	inc    eax
  4052cc:	lods   eax,DWORD PTR ds:[esi]
  4052cd:	retf   0x1ba1
  4052d0:	push   edx
  4052d1:	push   edi
  4052d2:	pop    ss
  4052d3:	scas   eax,DWORD PTR es:[edi]
  4052d4:	call   0x7c8f3d7c
  4052d9:	pop    ebp
  4052da:	test   al,0x77
  4052dc:	(bad)  
  4052dd:	fist   WORD PTR ds:0x2aa52e88
  4052e3:	dec    eax
  4052e4:	rcr    DWORD PTR [ebx],1
  4052e6:	jo     0x405303
  4052e8:	in     eax,0xe9
  4052ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052eb:	icebp  
  4052ec:	ret    0xb1f5
  4052ef:	jno    0x405342
  4052f1:	fucom  st(3)
  4052f3:	test   bh,al
  4052f5:	inc    ebx
  4052f6:	pop    ebx
  4052f7:	enter  0x16ed,0x3f
  4052fb:	scas   al,BYTE PTR es:[edi]
  4052fc:	(bad)  
  4052fd:	shr    DWORD PTR [esi-0x72],1
  405300:	inc    ecx
  405301:	out    0xc2,al
  405303:	je     0x405323
  405305:	addr16 pop esp
  405307:	push   edi
  405308:	push   eax
  405309:	outs   dx,BYTE PTR ds:[esi]
  40530a:	jmp    0x8b87:0x2a5aa06d
  405311:	add    eax,0x6ce8cfa8
  405316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405317:	push   ebp
  405318:	dec    ebx
  405319:	popa   
  40531a:	inc    esi
  40531b:	add    eax,ecx
  40531d:	(bad)  
  40531e:	in     al,dx
  40531f:	lea    ecx,[edi-0x65]
  405322:	fimul  WORD PTR [eax+0x5d8b09e1]
  405328:	aaa    
  405329:	xor    eax,0x5a710186
  40532e:	mov    ds:0x35e9b21b,eax
  405333:	sti    
  405334:	xchg   esp,eax
  405335:	stc    
  405336:	std    
  405337:	sbb    DWORD PTR [ecx+0x54f30ef5],ebx
  40533d:	cmp    ebx,DWORD PTR [eax+0x5770d3ec]
  405343:	or     ecx,DWORD PTR [ebx-0x5518c825]
  405349:	jno    0x4053a7
  40534b:	sbb    edx,DWORD PTR [edi+0x29ee8598]
  405351:	les    edx,FWORD PTR [ebx-0x2a2b4ee5]
  405357:	int3   
  405358:	push   ebp
  405359:	int3   
  40535a:	mov    ds:0x102a0f05,al
  40535f:	sbb    edx,DWORD PTR [esi-0x1b9953a8]
  405365:	inc    ebx
  405366:	shl    BYTE PTR [ecx+0x5429a43e],1
  40536c:	inc    edx
  40536d:	call   0xc0b49718
  405372:	jl     0x405346
  405374:	push   esi
  405375:	dec    ebp
  405376:	outs   dx,BYTE PTR ds:[esi]
  405377:	jae    0x405306
  405379:	jp     0x405391
  40537b:	xchg   ebx,eax
  40537c:	call   0xb604:0xefca0a47
  405383:	popf   
  405384:	cmp    ebx,esp
  405386:	jmp    0xe3c4:0x73790c69
  40538d:	repnz jmp 0x44ae:0xd728329e
  405395:	test   eax,0x1d2301a8
  40539a:	adc    DWORD PTR [ebp-0x5ddc5d11],eax
  4053a0:	es aad 0xe0
  4053a3:	leave  
  4053a4:	aam    0x2e
  4053a6:	xor    dl,dh
  4053a8:	call   0x2866d6a7
  4053ad:	imul   eax
  4053af:	and    al,0x57
  4053b1:	aaa    
  4053b2:	std    
  4053b3:	pop    eax
  4053b4:	xchg   esp,eax
  4053b5:	xchg   edi,eax
  4053b6:	adc    al,0x57
  4053b8:	aam    0x36
  4053ba:	mov    bl,0xa5
  4053bc:	aaa    
  4053bd:	adc    DWORD PTR [esi+0x24],edi
  4053c0:	push   cs
  4053c1:	je     0x405362
  4053c3:	dec    eax
  4053c4:	test   al,bh
  4053c6:	mov    cl,dh
  4053c8:	xchg   edi,eax
  4053c9:	jne    0x4053fb
  4053cb:	(bad)  
  4053cc:	xor    al,0x2e
  4053ce:	or     DWORD PTR [ecx-0x73226302],0xf
  4053d5:	mov    DWORD PTR [esi],esi
  4053d7:	enter  0x3b4,0x78
  4053db:	cdq    
  4053dc:	or     al,0xc7
  4053de:	fs xchg ecx,eax
  4053e0:	jg     0x4053ed
  4053e2:	aam    0x22
  4053e4:	sbb    ah,ah
  4053e6:	pop    esi
  4053e7:	retf   0x4a94
  4053ea:	pop    ebx
  4053eb:	(bad)  [esi+0x74]
  4053ee:	loop   0x405422
  4053f0:	shl    DWORD PTR [ebx],cl
  4053f2:	std    
  4053f3:	aas    
  4053f4:	xchg   esi,eax
  4053f5:	dec    BYTE PTR [edx-0x3a]
  4053f8:	xor    DWORD PTR [ecx],esi
  4053fa:	add    BYTE PTR [esp+esi*2],ah
  4053fd:	std    
  4053fe:	push   esi
  4053ff:	ins    BYTE PTR es:[edi],dx
  405400:	pop    ds
  405401:	cwde   
  405402:	pop    ecx
  405403:	les    ebp,FWORD PTR [ebp-0x3e2b366]
  405409:	xor    al,0x78
  40540b:	sbb    eax,ebp
  40540d:	(bad)  
  40540f:	xchg   DWORD PTR [ecx-0x5],ebp
  405412:	mov    edx,0x354106cf
  405417:	xor    DWORD PTR [edx-0x354abfcf],ebx
  40541d:	retf   0xd10b
  405420:	jp     0x4053b5
  405422:	adc    eax,0x482f2d48
  405427:	jbe    0x40545e
  405429:	stos   DWORD PTR es:[edi],eax
  40542a:	jmp    0x822196fb
  40542f:	jb     0x405482
  405431:	mov    dl,0x60
  405433:	cmp    ecx,DWORD PTR [ebx-0x1358c12a]
  405439:	mov    dh,al
  40543b:	int3   
  40543c:	cmp    BYTE PTR [edx-0x4],dl
  40543f:	mov    DWORD PTR [eax],esp
  405441:	mov    esp,0x63211b9e
  405446:	(bad)  
  405447:	int3   
  405448:	fisubr WORD PTR [eax-0x36930568]
  40544e:	(bad)  
  40544f:	cmp    BYTE PTR [ebx],cl
  405451:	std    
  405452:	and    eax,0xd20ca975
  405457:	or     edx,eax
  405459:	mov    edi,0x2500d103
  40545e:	sub    ebp,DWORD PTR [ecx-0xe]
  405461:	sub    eax,0xfd7752f9
  405466:	dec    esi
  405467:	aaa    
  405468:	(bad)  
  405469:	mov    ebp,0x9cb1e157
  40546e:	add    al,0x3
  405470:	aas    
  405471:	add    DWORD PTR [eax-0x72e28b36],ebp
  405477:	popa   
  405478:	adc    edx,DWORD PTR [ecx+0x3cdd8a41]
  40547e:	adc    dl,BYTE PTR [ecx*8-0x7fd653c9]
  405485:	xchg   DWORD PTR [ecx+ebp*4-0x4a],eax
  405489:	shl    dl,0x3
  40548c:	leave  
  40548d:	mov    esi,0x919fcd02
  405492:	mov    ebx,0x55f948
  405497:	mov    ebx,0x7a837082
  40549c:	sbb    cl,BYTE PTR [ebx]
  40549e:	cmp    BYTE PTR [ebx-0x7f],0x7f
  4054a2:	loopne 0x4054cf
  4054a4:	dec    esi
  4054a5:	shr    BYTE PTR [esi],1
  4054a7:	inc    eax
  4054a8:	loopne 0x40546e
  4054aa:	mov    ds:0x7f59ae1a,al
  4054af:	adc    cl,0x47
  4054b2:	outs   dx,DWORD PTR ds:[esi]
  4054b3:	cmc    
  4054b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054b5:	in     eax,dx
  4054b6:	pop    DWORD PTR [esi-0x2b]
  4054b9:	daa    
  4054ba:	xchg   ebx,eax
  4054bb:	sub    BYTE PTR [ecx+0x45],dl
  4054be:	mov    al,0x9e
  4054c0:	aad    0xe7
  4054c2:	dec    ecx
  4054c3:	mov    dl,0x3c
  4054c5:	and    BYTE PTR [ecx],0x79
  4054c8:	xsha1  (bad)
  4054c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ca:	dec    esp
  4054cb:	dec    ebp
  4054cc:	gs out dx,al
  4054ce:	pop    ebx
  4054cf:	imul   DWORD PTR [eax+eax*2-0x20292a6d]
  4054d6:	outs   dx,BYTE PTR ds:[esi]
  4054d7:	pop    ebp
  4054d8:	rol    DWORD PTR [ebp-0x4],0x7c
  4054dc:	shr    ah,1
  4054de:	cmp    al,0xd7
  4054e0:	mov    al,ds:0xb3f07dcc
  4054e5:	add    eax,0x8b8a3124
  4054ea:	adc    BYTE PTR ds:0x4058bcee,cl
  4054f0:	mov    cl,0x96
  4054f2:	or     al,0x4c
  4054f4:	pop    edx
  4054f5:	jg     0x40549b
  4054f7:	sub    bh,cl
  4054f9:	xor    DWORD PTR [ecx-0x67],eax
  4054fc:	mov    ds:0x4caead56,eax
  405501:	iret   
  405502:	adc    DWORD PTR [edi+0x1d234986],esp
  405508:	xchg   ebp,eax
  405509:	dec    eax
  40550a:	dec    ebp
  40550b:	mov    cl,0x45
  40550d:	and    esp,esp
  40550f:	nop
  405510:	push   es
  405511:	out    dx,al
  405512:	push   edi
  405513:	jbe    0x405577
  405515:	mov    al,BYTE PTR [edx+edx*4+0x5b39ce83]
  40551c:	shr    DWORD PTR [esi],1
  40551e:	shr    DWORD PTR [esi-0x3b],cl
  405521:	rol    BYTE PTR [esi-0x52],1
  405524:	lock add esi,DWORD PTR [ecx+0x6c]
  405528:	sub    eax,0x4b1c773e
  40552d:	clc    
  40552e:	rcl    DWORD PTR [ecx-0x42],1
  405531:	mov    ds:0xb633bca,al
  405536:	loop   0x4054e4
  405538:	icebp  
  405539:	mov    dh,0xf0
  40553b:	pop    edx
  40553c:	mov    eax,0x6d9f5ce2
  405541:	add    BYTE PTR [ecx-0x1d1fdd2b],0x40
  405548:	push   ebp
  405549:	sbb    al,0x8
  40554b:	(bad)  
  40554c:	adc    eax,DWORD PTR [ebp+ebx*4-0x11]
  405550:	cmp    eax,0xbb977abc
  405555:	jo     0x4055c4
  405557:	repnz add al,0x33
  40555a:	fmul   st,st(1)
  40555c:	xlat   BYTE PTR ds:[ebx]
  40555d:	jecxz  0x405582
  40555f:	in     eax,0x85
  405561:	mov    ebp,0x7625e5e5
  405566:	imul   edi,DWORD PTR [eax+edx*2+0x57564fa9],0x646fcc20
  405571:	xchg   esi,eax
  405572:	jge    0x405512
  405574:	sbb    eax,0x7c87ed03
  405579:	push   ebp
  40557a:	push   esp
  40557b:	pop    esp
  40557c:	cdq    
  40557d:	xor    eax,0xd653b39
  405582:	loop   0x405553
  405584:	jmp    0x405602
  405586:	add    al,BYTE PTR [ebx]
  405588:	mov    al,0x18
  40558a:	xchg   edi,eax
  40558b:	(bad)  
  40558c:	sub    DWORD PTR ds:0x97b88e6,ecx
  405592:	jns    0x40557a
  405594:	inc    ecx
  405595:	jg     0x405547
  405597:	aaa    
  405598:	das    
  405599:	mov    eax,ds:0x913cfea9
  40559e:	js     0x405538
  4055a0:	mov    bh,0x14
  4055a2:	dec    esp
  4055a3:	fs nop
  4055a5:	rcr    DWORD PTR [ecx-0x2cc8b625],cl
  4055ab:	adc    eax,0xe3a92e25
  4055b0:	ret    0xdc4a
  4055b3:	mov    cl,0xed
  4055b5:	(bad)  
  4055b6:	jne    0x405579
  4055b8:	mov    cl,0x70
  4055ba:	and    DWORD PTR ds:0xd5a4e351,esp
  4055c0:	xor    DWORD PTR [edi],edi
  4055c2:	push   ebx
  4055c3:	idiv   DWORD PTR [esi]
  4055c5:	adc    BYTE PTR [ebp-0x13],0xad
  4055c9:	xchg   ebx,eax
  4055ca:	(bad)  
  4055cc:	or     al,0x1c
  4055ce:	mov    ebp,0x8a7ac375
  4055d3:	cs pop ecx
  4055d5:	(bad)  
  4055d7:	neg    bh
  4055d9:	mov    ds:0xab09ba1d,eax
  4055de:	sub    dh,BYTE PTR [ebp+0x37ee8269]
  4055e4:	fst    DWORD PTR [edx+0x706cd699]
  4055ea:	pop    es
  4055eb:	int    0x60
  4055ed:	out    0x57,al
  4055ef:	xchg   ecx,ecx
  4055f1:	add    edi,ecx
  4055f3:	or     DWORD PTR [ebx],ebx
  4055f5:	retf   
  4055f6:	mov    bl,0xb9
  4055f8:	add    bl,BYTE PTR [ebp+ebp*2+0x75]
  4055fc:	pop    ecx
  4055fd:	outs   dx,BYTE PTR ds:[esi]
  4055fe:	hlt    
  4055ff:	in     al,0xd
  405601:	or     bl,BYTE PTR [edx+0x6d]
  405604:	mov    ebp,edi
  405606:	outs   dx,DWORD PTR ds:[esi]
  405607:	push   ebp
  405608:	adc    eax,edi
  40560a:	jo     0x405653
  40560c:	out    0x1,al
  40560e:	add    BYTE PTR [edx],bh
  405610:	add    DWORD PTR [edx],eax
  405612:	jecxz  0x40567d
  405614:	popf   
  405615:	adc    esi,DWORD PTR [ebx+0x5033e6d0]
  40561b:	and    al,0x8e
  40561d:	out    0xb7,al
  40561f:	into   
  405620:	xchg   bh,dl
  405622:	repnz popf 
  405624:	leave  
  405625:	xchg   edx,eax
  405626:	pop    ecx
  405627:	(bad)  
  405628:	mov    ch,0x3b
  40562a:	jge    0x405630
  40562c:	jmp    0x4055ca
  40562e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40562f:	ins    BYTE PTR es:[edi],dx
  405630:	push   ss
  405631:	ret    0xe747
  405634:	jmp    0xeda:0xf8e07c79
  40563b:	jmp    0x405687
  40563d:	shl    DWORD PTR [ecx+0x72],cl
  405640:	push   edi
  405641:	fidivr WORD PTR [esi+ebp*2]
  405644:	shl    BYTE PTR [edi+ecx*1+0x55690d89],cl
  40564b:	sub    DWORD PTR [ebx-0x6e],esi
  40564e:	iret   
  40564f:	outs   dx,BYTE PTR ds:[esi]
  405650:	adc    DWORD PTR [eax+0x4c],edx
  405653:	in     al,0xa
  405655:	or     al,BYTE PTR [ecx-0x7d3742d3]
  40565b:	adc    ebp,esi
  40565d:	xchg   dh,dl
  40565f:	and    al,0x62
  405661:	jmp    0xc4fa42e
  405666:	mov    ds:0xc0574475,eax
  40566b:	mov    dh,0x8f
  40566d:	pusha  
  40566e:	sub    esi,DWORD PTR [eax+ebp*8+0x2f]
  405672:	je     0x4056af
  405674:	test   dl,cl
  405676:	mov    BYTE PTR [ecx+0x7076061d],al
  40567c:	icebp  
  40567d:	fs xor al,0x3e
  405680:	inc    eax
  405681:	mov    ebx,0x63de46a4
  405686:	sbb    DWORD PTR [esi],esi
  405688:	cs dec edx
  40568a:	enter  0x129b,0x7c
  40568e:	push   eax
  40568f:	test   cl,al
  405691:	push   ds
  405692:	(bad)  
  405693:	lahf   
  405694:	fsub   DWORD PTR [eax-0x42609b83]
  40569a:	(bad)  
  40569b:	jge    0x405688
  40569d:	cli    
  40569e:	jge    0x405679
  4056a0:	icebp  
  4056a1:	mov    al,BYTE PTR [eax]
  4056a3:	sub    BYTE PTR [ebp+0x44],bl
  4056a6:	int    0xa3
  4056a8:	mov    ah,0x5b
  4056aa:	cwde   
  4056ab:	idiv   dh
  4056ad:	push   esi
  4056ae:	shl    BYTE PTR [ecx-0x52],cl
  4056b1:	cmp    al,0xf4
  4056b3:	dec    edi
  4056b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b5:	ror    BYTE PTR [esi],1
  4056b7:	rcr    DWORD PTR [edx+0x70],1
  4056ba:	les    edi,FWORD PTR [eax]
  4056bc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4056be:	inc    ebx
  4056bf:	lods   eax,DWORD PTR ds:[esi]
  4056c0:	inc    edi
  4056c1:	fnsave [ecx+esi*2+0x3f]
  4056c5:	xlat   BYTE PTR ds:[ebx]
  4056c6:	jmp    0xe29a25bb
  4056cb:	test   BYTE PTR ds:0x770d6909,al
  4056d1:	aam    0x0
  4056d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d4:	jb     0x4056c0
  4056d6:	stos   DWORD PTR es:[edi],eax
  4056d7:	xchg   DWORD PTR [ebp-0x700a82cd],esp
  4056dd:	xchg   ecx,eax
  4056de:	retf   0x1325
  4056e1:	hlt    
  4056e2:	and    bh,dl
  4056e4:	clc    
  4056e5:	push   ebx
  4056e6:	nop
  4056e7:	(bad)  
  4056e8:	loope  0x40572b
  4056ea:	ins    DWORD PTR es:[edi],dx
  4056eb:	mov    ebp,0xa41cb665
  4056f0:	mov    ch,0x3b
  4056f2:	hlt    
  4056f3:	jle    0x405725
  4056f5:	dec    edi
  4056f6:	aam    0xc4
  4056f8:	popa   
  4056f9:	ss clc 
  4056fb:	jbe    0x40569a
  4056fd:	arpl   WORD PTR [eax],si
  4056ff:	icebp  
  405700:	mov    al,ds:0x2101f5a5
  405705:	sub    edx,ecx
  405707:	cmp    BYTE PTR [edx-0x24],al
  40570a:	and    eax,0x5f5ce7b8
  40570f:	inc    ebp
  405710:	and    bh,dl
  405712:	stc    
  405713:	xchg   edi,eax
  405714:	xchg   edx,eax
  405715:	sbb    eax,0x74bae384
  40571a:	jl     0x405742
  40571c:	inc    ecx
  40571d:	inc    esi
  40571e:	std    
  40571f:	mov    fs,WORD PTR ds:0x39ba1f9a
  405725:	shl    ecx,1
  405727:	dec    ecx
  405728:	imul   eax,DWORD PTR [edi-0xfa3e816],0x3ee8a28d
  405732:	cmp    DWORD PTR [edx+0x3b8046a7],ebp
  405738:	lea    ebp,[ebp-0x6d]
  40573b:	push   ecx
  40573c:	lods   al,BYTE PTR ds:[esi]
  40573d:	stos   BYTE PTR es:[edi],al
  40573e:	out    0x32,eax
  405740:	je     0x405728
  405742:	mov    edi,0xb4f9a65a
  405747:	repz mov ecx,esp
  40574a:	dec    BYTE PTR [edx-0x37]
  40574d:	fcomp  st(6)
  40574f:	dec    esi
  405750:	in     eax,0xca
  405752:	sbb    dl,0x99
  405755:	dec    esi
  405756:	add    ebx,esp
  405758:	xchg   edi,eax
  405759:	add    DWORD PTR [esi+0x45],ebx
  40575c:	out    0xfb,al
  40575e:	data16 das 
  405760:	lahf   
  405761:	not    BYTE PTR [esi-0x44]
  405764:	jo     0x405742
  405766:	imul   ebp,ecx,0xf658fc6f
  40576c:	outs   dx,DWORD PTR ds:[esi]
  40576d:	mov    ebx,0x6c6e7c6f
  405772:	mov    edi,0x1361fa0a
  405777:	cmp    al,0x4a
  405779:	pop    esi
  40577a:	lods   al,BYTE PTR ds:[esi]
  40577b:	sbb    eax,0x601d18f7
  405780:	(bad)  
  405781:	inc    ecx
  405782:	shl    dl,cl
  405784:	out    dx,eax
  405785:	sbb    eax,DWORD PTR [ebx+0x75fe2a12]
  40578b:	dec    edx
  40578c:	jge    0x405803
  40578e:	or     dh,BYTE PTR [edi-0x5d]
  405791:	inc    eax
  405792:	mov    eax,0x79a7ba6a
  405797:	add    DWORD PTR [eax+eax*1+0x6e665587],ebx
  40579e:	mov    ecx,0x9c7e543c
  4057a3:	fnsave [ebp+0x37]
  4057a6:	lea    esi,[edx+0x67756d94]
  4057ac:	daa    
  4057ad:	imul   ecx,DWORD PTR [ebp-0x459f6d97],0xffffffb0
  4057b4:	lock test ch,0x7d
  4057b8:	jg     0x405834
  4057ba:	mov    DWORD PTR [eax],0xfb00d0b8
  4057c0:	popf   
  4057c1:	dec    eax
  4057c2:	or     BYTE PTR [esi+0x76c80940],bh
  4057c8:	pop    ecx
  4057c9:	fst    DWORD PTR [edx+eiz*1+0x10]
  4057cd:	xchg   ecx,eax
  4057ce:	mov    al,ds:0xe6a3b32d
  4057d3:	push   ecx
  4057d4:	pop    DWORD PTR [esi-0x5b]
  4057d7:	mov    eax,0x7d79fc56
  4057dc:	mov    esi,0xbc8136c4
  4057e1:	ficom  DWORD PTR [ecx]
  4057e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e4:	aam    0x9d
  4057e6:	shr    DWORD PTR [edi+eiz*1-0x32a6da10],0x14
  4057ee:	push   cs
  4057ef:	imul   edx,DWORD PTR [eax-0x35],0x9c1b45d3
  4057f6:	pop    eax
  4057f7:	les    esi,FWORD PTR [edi+esi*2-0x4b]
  4057fb:	or     eax,0x9d2f73b0
  405800:	into   
  405801:	xor    eax,DWORD PTR [esi+0x6c]
  405804:	repnz and esi,DWORD PTR [esi]
  405807:	mov    ecx,0xb1c93c5a
  40580c:	pop    es
  40580d:	ins    DWORD PTR es:[edi],dx
  40580e:	cmp    BYTE PTR [ebx],dh
  405810:	add    BYTE PTR ss:[edi+0x58d25d8c],ch
  405817:	add    BYTE PTR cs:[ebp+ebx*2-0x6c],cl
  40581c:	es scas al,BYTE PTR es:[edi]
  40581e:	pop    ss
  40581f:	lock sub DWORD PTR [edi],esi
  405822:	push   esi
  405823:	pop    esp
  405824:	mov    edi,0x65bd76f5
  405829:	jae    0x4057d9
  40582b:	dec    edi
  40582c:	out    dx,al
  40582d:	push   edx
  40582e:	push   eax
  40582f:	lock and BYTE PTR [edx-0x35],bl
  405833:	and    eax,0x42ae97e1
  405838:	mov    edi,0x1c56b54a
  40583d:	ret    
  40583e:	ins    BYTE PTR es:[edi],dx
  40583f:	jae    0x405825
  405841:	xchg   edx,eax
  405842:	mov    cl,0xdc
  405844:	mov    esi,edx
  405846:	fs dec ecx
  405848:	push   ax
  40584a:	add    eax,0x4ddd71ab
  40584f:	sar    DWORD PTR [edi],1
  405851:	mov    ebp,0x389b782a
  405856:	retf   
  405857:	jle    0x4058c9
  405859:	pop    ecx
  40585a:	cwde   
  40585b:	jns    0x405881
  40585d:	(bad)  
  40585e:	jb     0x4058c3
  405860:	test   al,0xd4
  405862:	cmp    al,0x54
  405864:	lock shl BYTE PTR [edi+0x27],1
  405868:	inc    ebx
  405869:	stos   DWORD PTR es:[edi],eax
  40586a:	pop    edi
  40586b:	dec    edx
  40586c:	mov    ch,0xa2
  40586e:	jns    0x40583f
  405870:	xchg   edx,eax
  405871:	dec    ebp
  405872:	jns    0x4058ec
  405874:	ja     0x405820
  405876:	jns    0x4058cc
  405878:	mov    ah,0x13
  40587a:	(bad)  
  40587b:	loope  0x4058e9
  40587d:	pop    es
  40587e:	test   al,0x98
  405880:	clc    
  405881:	inc    ebx
  405883:	jmp    FWORD PTR [ecx]
  405885:	pop    es
  405886:	inc    edx
  405887:	enter  0x374d,0xf0
  40588b:	add    eax,0xe1f2bd23
  405890:	out    0x15,eax
  405892:	dec    edx
  405893:	pop    ebp
  405894:	jge    0x40581b
  405896:	inc    ecx
  405897:	push   0x56
  405899:	mov    ecx,0xf4f8a67f
  40589e:	(bad)  
  40589f:	ins    DWORD PTR es:[edi],dx
  4058a0:	fmul   st(7),st
  4058a2:	xchg   esi,eax
  4058a3:	cmp    BYTE PTR [eax],al
  4058a5:	pop    ebx
  4058a6:	add    al,0x19
  4058a8:	mov    ecx,ss
  4058aa:	cmp    al,al
  4058ac:	push   cs
  4058ad:	inc    edi
  4058ae:	mov    eax,ds:0xbb867332
  4058b3:	add    ch,BYTE PTR [ebp+eiz*1-0xc364dcd]
  4058ba:	mov    ebp,0xe4c84f46
  4058bf:	pop    es
  4058c0:	pop    esi
  4058c1:	scas   eax,DWORD PTR es:[edi]
  4058c2:	bound  esp,QWORD PTR [eax+eiz*2]
  4058c5:	in     al,0xe4
  4058c7:	dec    edi
  4058c8:	xchg   edi,eax
  4058c9:	sub    DWORD PTR [eax],eax
  4058cb:	dec    edx
  4058cc:	(bad)  
  4058cd:	adc    al,0x50
  4058cf:	fcom   QWORD PTR [esi+0x4]
  4058d2:	mov    WORD PTR [ebp-0x2fc00b09],?
  4058d8:	cs ss cld 
  4058db:	xchg   BYTE PTR [edx+0x44224692],cl
  4058e1:	inc    esi
  4058e2:	xor    al,0x28
  4058e4:	pusha  
  4058e5:	ins    DWORD PTR es:[edi],dx
  4058e6:	sbb    cl,al
  4058e8:	std    
  4058e9:	inc    ecx
  4058ea:	pop    ecx
  4058eb:	push   esi
  4058ec:	(bad)  
  4058ed:	add    eax,0x3a41c2c1
  4058f2:	in     eax,0x35
  4058f4:	sbb    dh,bl
  4058f6:	xchg   esp,eax
  4058f7:	or     ecx,esi
  4058f9:	mov    al,0xf7
  4058fb:	jl     0x40591e
  4058fd:	scas   al,BYTE PTR es:[edi]
  4058fe:	hlt    
  4058ff:	imul   ecx,DWORD PTR [ebx-0x29],0xffffffbd
  405903:	repz sbb al,0x2d
  405907:	mov    ebp,DWORD PTR [ebp+0x42]
  40590a:	arpl   WORD PTR [ebx+0x68],di
  40590d:	push   eax
  40590e:	into   
  40590f:	adc    ah,BYTE PTR [eax+0x23]
  405912:	rcl    ah,0x8
  405915:	or     BYTE PTR [eax],cl
  405917:	and    eax,0xffffff85
  40591a:	sbb    BYTE PTR [edi+0x7d],dl
  40591d:	out    0xbc,al
  40591f:	in     al,dx
  405920:	rcl    BYTE PTR ds:0x95d7a19,cl
  405926:	mov    bh,0x4a
  405928:	jne    0x40595c
  40592a:	push   0xffffffef
  40592c:	jne    0x405978
  40592e:	and    eax,0x7262bb06
  405933:	pusha  
  405934:	pop    edx
  405935:	test   eax,0x467733fa
  40593a:	scas   eax,DWORD PTR es:[edi]
  40593b:	push   0xffffffb1
  40593d:	push   esi
  40593e:	dec    ebp
  40593f:	lds    edi,FWORD PTR [esp+eiz*8-0x3e]
  405943:	fwait
  405944:	cdq    
  405945:	mov    al,0x74
  405947:	dec    ebp
  405948:	es hlt 
  40594a:	inc    edi
  40594b:	addr16 xor al,0x8f
  40594e:	mov    dl,BYTE PTR [esi-0x4f]
  405951:	cld    
  405952:	fxch   st(7)
  405954:	jmp    0x6789:0xafe6821e
  40595b:	test   al,0xd2
  40595d:	stc    
  40595e:	mov    al,0x87
  405960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405961:	retf   0x3000
  405964:	fnsave [esi]
  405966:	pushf  
  405967:	lods   al,BYTE PTR ds:[esi]
  405968:	leave  
  405969:	dec    ebp
  40596a:	dec    ebx
  40596b:	hlt    
  40596c:	dec    ebx
  40596d:	push   edi
  40596e:	push   ebp
  40596f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405970:	adc    esp,DWORD PTR [eax]
  405972:	lahf   
  405973:	repz stc 
  405975:	sub    DWORD PTR [esi+ebx*4-0x71e73d6e],ebp
  40597c:	inc    esp
  40597d:	pop    ebx
  40597e:	aam    0xf
  405980:	fwait
  405981:	xor    al,0xdf
  405983:	pop    esp
  405984:	adc    BYTE PTR [edi],bl
  405986:	and    al,0x6a
  405988:	xor    edi,DWORD PTR [ebp+0x40]
  40598b:	xchg   BYTE PTR [ebx-0x32],ch
  40598e:	scas   eax,DWORD PTR es:[edi]
  40598f:	pop    edx
  405990:	or     esi,DWORD PTR [edx-0x6e128a93]
  405996:	leave  
  405997:	cs es nop
  40599a:	stos   BYTE PTR es:[edi],al
  40599b:	push   eax
  40599c:	(bad)  
  40599d:	iret   
  40599e:	push   cs
  40599f:	push   ebx
  4059a0:	loope  0x40594b
  4059a2:	sub    ch,BYTE PTR [ecx-0x6228638e]
  4059a8:	call   0xeb55:0xdcdbfc96
  4059af:	aas    
  4059b0:	sti    
  4059b1:	xor    al,bl
  4059b3:	xor    esp,DWORD PTR [ebp+0x1f]
  4059b6:	mov    ds:0x6c6679ec,eax
  4059bb:	dec    edi
  4059bc:	inc    ebp
  4059bd:	lds    edx,FWORD PTR [ebx+0x4b8b9380]
  4059c3:	fcmovu st,st(1)
  4059c5:	pushf  
  4059c6:	jecxz  0x4059be
  4059c8:	stos   BYTE PTR es:[edi],al
  4059c9:	pop    eax
  4059ca:	(bad)  
  4059cc:	loopne 0x405a0c
  4059ce:	in     eax,dx
  4059cf:	xor    al,BYTE PTR [ecx-0x13b9c2ad]
  4059d5:	sti    
  4059d6:	mov    ah,0x29
  4059d8:	push   ecx
  4059d9:	push   edx
  4059da:	iret   
  4059db:	mov    cl,0x40
  4059dd:	nop
  4059de:	xchg   DWORD PTR [ebp+edi*2+0x6b63368c],ebp
  4059e5:	ins    BYTE PTR es:[edi],dx
  4059e6:	adc    eax,DWORD PTR [ecx]
  4059e8:	xchg   BYTE PTR [edx+edi*4-0x6d],ch
  4059ec:	push   ds
  4059ed:	aaa    
  4059ee:	les    ecx,FWORD PTR [eax+0x2614dda7]
  4059f4:	sub    ecx,edx
  4059f6:	cdq    
  4059f7:	jecxz  0x405a1f
  4059f9:	mov    eax,ds:0xd3392aa4
  4059fe:	xchg   esp,eax
  4059ff:	push   ds
  405a00:	stos   BYTE PTR es:[edi],al
  405a01:	mov    eax,DWORD PTR [edi]
  405a03:	and    edi,DWORD PTR [edx*4-0x161ea910]
  405a0a:	xor    DWORD PTR [edx-0x6c8988c3],edx
  405a10:	push   es
  405a11:	cwde   
  405a12:	push   ecx
  405a13:	mov    esp,0x807e43b
  405a18:	adc    DWORD PTR [esi-0x78],0xd29227cb
  405a1f:	pusha  
  405a20:	dec    ecx
  405a21:	cmp    BYTE PTR [esi],cl
  405a23:	loop   0x405a21
  405a25:	xchg   esp,eax
  405a26:	mov    eax,ds:0x163efd0e
  405a2b:	add    ebp,ebx
  405a2d:	sbb    BYTE PTR [ebx],0x60
  405a30:	fwait
  405a31:	sub    eax,0x390cef82
  405a36:	cli    
  405a37:	cld    
  405a38:	add    ebx,eax
  405a3a:	lods   al,BYTE PTR ds:[esi]
  405a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a3c:	aam    0x58
  405a3e:	retf   
  405a3f:	cmp    ah,BYTE PTR [esi+0x61875af]
  405a45:	mov    eax,ds:0x527a7268
  405a4a:	and    DWORD PTR [edx+eax*8],esp
  405a4d:	xor    al,0xd4
  405a4f:	repz add eax,0x9e633044
  405a55:	arpl   WORD PTR [esi+0x33],sp
  405a58:	jo     0x405a00
  405a5a:	mov    ds:0xe962f0e5,eax
  405a5f:	lods   eax,DWORD PTR ds:[esi]
  405a60:	mov    esi,0xa193d1de
  405a65:	adc    BYTE PTR [edx],ch
  405a67:	mov    ds:0x59fcbce0,eax
  405a6c:	push   ebx
  405a6d:	add    BYTE PTR [esi+0x18],ch
  405a70:	sbb    ecx,DWORD PTR [esi+0x17]
  405a73:	test   eax,0xe83ecc36
  405a78:	mov    eax,0x5f06b533
  405a7d:	inc    ecx
  405a7e:	das    
  405a7f:	xor    eax,0x187dd9c8
  405a84:	cld    
  405a85:	icebp  
  405a86:	rol    esp,1
  405a88:	mov    eax,ds:0xdf162bb4
  405a8d:	popf   
  405a8e:	inc    ebx
  405a8f:	ins    BYTE PTR es:[edi],dx
  405a90:	mov    dh,0x99
  405a92:	xchg   BYTE PTR [ebx],dl
  405a94:	in     al,0xfe
  405a96:	cmc    
  405a97:	adc    BYTE PTR [esi-0x379733e8],dh
  405a9d:	fnsave [ebx+0x45]
  405aa0:	jl     0x405ad5
  405aa2:	or     ebp,DWORD PTR [eax-0xb]
  405aa5:	jbe    0x405a3b
  405aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aa8:	mov    ah,0xfa
  405aaa:	sar    al,0xcb
  405aad:	or     eax,0xc4d2241d
  405ab2:	xor    esi,edx
  405ab4:	adc    BYTE PTR [ecx+0x2150d7a7],dh
  405aba:	mov    ds:0xc656f314,eax
  405abf:	pop    ecx
  405ac0:	cdq    
  405ac1:	mov    bh,0x63
  405ac3:	and    BYTE PTR [ecx+eiz*2],ah
  405ac6:	dec    esi
  405ac7:	adc    eax,0x411ddc49
  405acc:	inc    ebx
  405acd:	mov    BYTE PTR [ecx+0x3e],bh
  405ad0:	iret   
  405ad1:	and    bl,dh
  405ad3:	or     dl,ah
  405ad5:	stos   DWORD PTR es:[edi],eax
  405ad6:	cld    
  405ad7:	nop
  405ad8:	mov    bl,0xe
  405ada:	data16 (bad) 
  405adc:	jnp    0x405ae7
  405ade:	arpl   WORD PTR [ebx+0x79],cx
  405ae1:	retf   
  405ae2:	add    ah,BYTE PTR [eax+ebp*2-0x35]
  405ae6:	jmp    0x405ad2
  405ae8:	xor    ebx,DWORD PTR [ecx-0x5a1608b4]
  405aee:	adc    DWORD PTR [edx],esp
  405af0:	pop    ebx
  405af1:	or     eax,0x34cfaad5
  405af6:	arpl   WORD PTR [eax],dx
  405af8:	gs aam 0x36
  405afb:	or     al,0xdf
  405afd:	and    dh,dl
  405aff:	inc    ebp
  405b00:	xchg   DWORD PTR [edi-0x66],esi
  405b03:	dec    ebx
  405b04:	cmp    al,BYTE PTR [edx+0x12]
  405b07:	push   ss
  405b08:	mov    DWORD PTR [ebp+0x69f98839],esi
  405b0e:	push   edi
  405b0f:	stc    
  405b10:	fdiv   st,st(5)
  405b12:	add    edi,edi
  405b14:	test   DWORD PTR [edx],edx
  405b16:	popa   
  405b17:	sbb    al,0x20
  405b19:	or     edi,eax
  405b1b:	mov    cl,0x3f
  405b1d:	sub    DWORD PTR [eax+0x9bcbcd3],0x3001ca3
  405b27:	mov    DWORD PTR [eax+eax*2],ebp
  405b2a:	cmc    
  405b2b:	sub    eax,0x704a2b91
  405b30:	arpl   WORD PTR [ecx],bx
  405b32:	jmp    0x405ad9
  405b34:	jbe    0x405b6b
  405b36:	fidiv  WORD PTR [edi]
  405b38:	mov    dh,0x1d
  405b3a:	mov    ds:0x6b04944e,al
  405b3f:	jle    0x405adb
  405b41:	sbb    dl,BYTE PTR [ebx-0xc6d3b47]
  405b47:	(bad)
  405b4a:	pop    ebp
  405b4b:	int    0xdc
  405b4d:	scas   al,BYTE PTR es:[edi]
  405b4e:	jno    0x405b53
  405b50:	cmc    
  405b51:	pushf  
  405b52:	jo     0x405afd
  405b54:	or     al,0xfc
  405b56:	repz pop esp
  405b58:	mov    eax,ds:0x7d251cf5
  405b5d:	mov    dl,0xdc
  405b5f:	xor    al,0x76
  405b61:	add    eax,0x4ac0c7b3
  405b66:	cmp    eax,0xb491bfa9
  405b6b:	pop    eax
  405b6c:	xlat   BYTE PTR ds:[ebx]
  405b6d:	(bad)  
  405b6e:	push   edx
  405b6f:	and    DWORD PTR [ebx],eax
  405b71:	jecxz  0x405afd
  405b73:	inc    esi
  405b74:	mov    edx,0x30c49b2
  405b79:	jle    0x405bca
  405b7b:	mov    esp,0x54a862fb
  405b80:	adc    al,0x53
  405b82:	push   esp
  405b83:	mov    ebp,0xbf605454
  405b88:	jno    0x405bba
  405b8a:	imul   edx,DWORD PTR [ecx+0x3],0x408a2def
  405b91:	and    esp,DWORD PTR [eax+edi*1-0x4a]
  405b95:	arpl   WORD PTR [edx],sp
  405b97:	mov    edx,0x246e21e
  405b9c:	mov    al,ds:0x3b7f4d02
  405ba1:	call   0x4a1f:0x18020b96
  405ba8:	imul   eax,edx,0x8f835ca2
  405bae:	es push ebp
  405bb0:	jno    0x405c0b
  405bb2:	aas    
  405bb3:	xor    esi,0xffffffeb
  405bb6:	data16 jae 0x405bd6
  405bb9:	loop   0x405bc9
  405bbb:	cdq    
  405bbc:	pop    ebx
  405bbd:	cmp    eax,DWORD PTR [ebp+0x19c168e6]
  405bc3:	test   DWORD PTR ds:0x16e6a1cd,edx
  405bc9:	into   
  405bca:	cmp    eax,DWORD PTR [edi-0x1c58e51a]
  405bd0:	cli    
  405bd1:	or     DWORD PTR [ebp+0x7b],eax
  405bd4:	not    BYTE PTR [ebp+0x4b]
  405bd7:	xchg   esp,eax
  405bd8:	popf   
  405bd9:	loope  0x405bb7
  405bdb:	rep outs dx,BYTE PTR ds:[esi]
  405bdd:	pop    eax
  405bde:	out    dx,al
  405bdf:	adc    BYTE PTR [ebp+0x724eea6b],bh
  405be5:	xor    BYTE PTR [ebx-0x52],bh
  405be8:	push   ebp
  405be9:	idiv   ecx
  405beb:	in     eax,0x8f
  405bed:	pop    edx
  405bee:	ror    eax,cl
  405bf0:	mov    esi,0xd10d857a
  405bf6:	nop
  405bf7:	(bad)  
  405bf8:	scas   al,BYTE PTR es:[edi]
  405bf9:	enter  0xa3cb,0xff
  405bfd:	jl     0x405c3b
  405bff:	sahf   
  405c00:	inc    ecx
  405c01:	cwde   
  405c02:	adc    eax,DWORD PTR [esi]
  405c04:	add    BYTE PTR [esi+0x1c],ch
  405c07:	ins    DWORD PTR es:[edi],dx
  405c08:	push   es
  405c09:	js     0x405c7c
  405c0b:	add    dh,BYTE PTR [ebp-0x79a994bb]
  405c11:	pop    esi
  405c12:	lahf   
  405c13:	ins    DWORD PTR es:[edi],dx
  405c14:	dec    ebp
  405c15:	lock cmc 
  405c17:	sub    edx,DWORD PTR [esi+0x2f]
  405c1a:	lods   al,BYTE PTR ds:[esi]
  405c1b:	add    ecx,DWORD PTR [ebp-0x3ac6e839]
  405c21:	(bad)  
  405c22:	in     eax,dx
  405c23:	jo     0x405c17
  405c25:	inc    ebx
  405c26:	inc    esp
  405c27:	and    al,0xec
  405c29:	mov    edi,DWORD PTR [esi-0x1a5bdb7e]
  405c2f:	leave  
  405c30:	xor    DWORD PTR [edi-0x71b0a961],edi
  405c36:	inc    ecx
  405c37:	xor    ebx,DWORD PTR [eax]
  405c39:	int    0x18
  405c3b:	lods   eax,DWORD PTR ds:[esi]
  405c3c:	daa    
  405c3d:	xchg   DWORD PTR [ebx+ecx*2],edi
  405c40:	lock das 
  405c42:	mov    DWORD PTR [eax],edx
  405c44:	jmp    0x8d2d:0xa8989ae5
  405c4b:	imul   esi,ebp,0xffffffb9
  405c4e:	jmp    0xbabf:0xcf87dd47
  405c55:	fcos   
  405c57:	dec    eax
  405c58:	sbb    eax,0x3e964db3
  405c5d:	test   al,0xa
  405c5f:	inc    ebx
  405c60:	add    esp,eax
  405c62:	and    bh,BYTE PTR [ebp+0x26c7e0f7]
  405c68:	mul    DWORD PTR [ecx]
  405c6a:	js     0x405cda
  405c6c:	jecxz  0x405ce4
  405c6e:	add    esi,DWORD PTR [ebx]
  405c70:	and    BYTE PTR [edi-0x65],cl
  405c73:	mov    esi,0xc2d34f8b
  405c78:	sbb    ebp,DWORD PTR [ebp-0x2d]
  405c7b:	(bad)  
  405c7c:	out    dx,eax
  405c7d:	lds    edx,FWORD PTR [edi-0xeac2445]
  405c83:	mov    esp,0x74adca6
  405c88:	mov    ah,0xe4
  405c8a:	mov    bl,0x67
  405c8c:	mov    ds:0xeb41121a,al
  405c91:	dec    ebp
  405c92:	xchg   esp,eax
  405c93:	and    edi,DWORD PTR [ecx+0x73]
  405c96:	cld    
  405c97:	mov    al,0x5b
  405c99:	hlt    
  405c9a:	sbb    ah,BYTE PTR [ecx-0x6e]
  405c9d:	in     al,dx
  405c9e:	popf   
  405c9f:	cld    
  405ca0:	cmp    BYTE PTR [edi+ebp*4],dl
  405ca3:	lods   al,BYTE PTR ds:[esi]
  405ca4:	das    
  405ca5:	xor    bh,bh
  405ca7:	xchg   esi,eax
  405ca8:	ror    DWORD PTR [esi-0xc],1
  405cab:	add    eax,0x1f3c28b5
  405cb0:	dec    esi
  405cb1:	push   ebp
  405cb2:	xchg   DWORD PTR [ecx+0x7f],ebx
  405cb5:	(bad)  
  405cb6:	or     bh,BYTE PTR [esi+0x12]
  405cb9:	mov    al,ds:0xac1735d4
  405cbe:	lea    esp,[esi+0x66]
  405cc1:	lods   al,BYTE PTR ds:[esi]
  405cc2:	inc    ebx
  405cc3:	mov    al,0xe6
  405cc5:	cmp    eax,0x5ebdd2b4
  405cca:	inc    ebx
  405ccb:	pop    DWORD PTR ds:0x3a49e69e
  405cd1:	cmp    BYTE PTR [ebx],bl
  405cd3:	push   ecx
  405cd4:	xchg   ebx,eax
  405cd5:	fldenv [edi]
  405cd7:	inc    edi
  405cd8:	fisttp WORD PTR [esi]
  405cda:	or     ebp,DWORD PTR [edx]
  405cdc:	enter  0x8d4c,0xba
  405ce0:	mov    al,0x62
  405ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce3:	xchg   DWORD PTR [edx+0x51],esi
  405ce6:	les    ebp,FWORD PTR [esi-0x78c45d17]
  405cec:	mov    ecx,0x29717af9
  405cf1:	push   0xffffffe7
  405cf3:	mul    edi
  405cf5:	mov    ebx,ecx
  405cf7:	call   0xf943c8e9
  405cfc:	ja     0x405d30
  405cfe:	es push es
  405d00:	cs jecxz 0x405d7b
  405d03:	jl     0x405d5b
  405d05:	repnz mov WORD PTR [esi-0x48],?
  405d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d0a:	push   edx
  405d0b:	sahf   
  405d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d0d:	icebp  
  405d0e:	popa   
  405d0f:	fcom   DWORD PTR [ecx+eiz*1-0x34]
  405d13:	gs addr16 push es
  405d16:	mov    ch,0xc0
  405d18:	pop    ss
  405d19:	call   0xe252:0xaecd3cf1
  405d20:	pop    edi
  405d21:	cmp    al,0x9d
  405d23:	cmp    bh,BYTE PTR [ebp+0x6cb64cfb]
  405d29:	mov    WORD PTR [edi-0x42],cs
  405d2c:	ja     0x405d34
  405d2e:	xchg   esp,eax
  405d2f:	pop    esp
  405d30:	fild   DWORD PTR [ebp-0x448de562]
  405d36:	push   ecx
  405d37:	stos   DWORD PTR es:[edi],eax
  405d38:	dec    ecx
  405d39:	cmp    al,BYTE PTR [ebp-0x8]
  405d3c:	fstp   QWORD PTR [esi-0x5c]
  405d3f:	adc    al,BYTE PTR [ebx]
  405d41:	loop   0x405d01
  405d43:	push   esp
  405d44:	les    ebx,FWORD PTR [ebx+0x24aea026]
  405d4a:	cwde   
  405d4b:	(bad)  
  405d4c:	sbb    ch,BYTE PTR [esi]
  405d4e:	adc    BYTE PTR [esp+eax*8+0x5a],0x87
  405d53:	daa    
  405d54:	mov    cl,0x26
  405d56:	scas   eax,DWORD PTR es:[edi]
  405d57:	js     0x405d49
  405d59:	jmp    0xf361:0x73747a51
  405d60:	add    eax,0x556ccd
  405d65:	(bad)  
  405d67:	mov    eax,ds:0xa47dedd8
  405d6c:	mov    edx,0xa0768e81
  405d71:	mov    ds:0xd66d0a25,eax
  405d76:	sub    eax,DWORD PTR [ebx+0xe]
  405d79:	push   ebx
  405d7a:	mov    ds:0xec1e3387,eax
  405d7f:	dec    ecx
  405d80:	sub    edi,DWORD PTR [edi-0x41c5d557]
  405d86:	pop    ecx
  405d87:	pop    es
  405d88:	cmp    dl,BYTE PTR [eax]
  405d8a:	jmp    0x405d28
  405d8c:	pop    esp
  405d8d:	loope  0x405d84
  405d8f:	sub    dl,BYTE PTR gs:[edx]
  405d92:	aad    0x4d
  405d94:	pop    esi
  405d95:	(bad)
  405d98:	ja     0x405db4
  405d9a:	inc    esp
  405d9b:	cmp    eax,0xb6ea31ca
  405da0:	retf   
  405da1:	(bad)
  405da5:	sub    BYTE PTR [ebp+0x6d875528],bh
  405dab:	cld    
  405dac:	jo     0x405da8
  405dae:	arpl   WORD PTR [ebx],ax
  405db0:	sbb    cl,BYTE PTR [eax]
  405db2:	jle    0x405d84
  405db4:	retf   0x6b90
  405db7:	push   edx
  405db8:	adc    bh,BYTE PTR [ebp-0x5d]
  405dbb:	cdq    
  405dbc:	sub    ecx,DWORD PTR [ecx+0x4fcdc64e]
  405dc2:	jl     0x405e32
  405dc4:	pop    edx
  405dc5:	(bad)  
  405dc6:	and    al,BYTE PTR [edx]
  405dc8:	dec    edx
  405dc9:	repnz or cl,BYTE PTR [edi]
  405dcc:	in     eax,0x7e
  405dce:	cmc    
  405dcf:	xor    esi,esp
  405dd1:	xchg   esi,eax
  405dd2:	daa    
  405dd3:	cli    
  405dd4:	iret   
  405dd5:	xor    dl,BYTE PTR [edx+edx*1+0x53]
  405dd9:	jb     0x405d8c
  405ddb:	cwde   
  405ddc:	jmp    0x405dee
  405dde:	sbb    eax,0xbab5ac98
  405de3:	jb     0x405e39
  405de5:	ret    0x1ee3
  405de8:	dec    ebx
  405de9:	cmp    ecx,DWORD PTR [edx]
  405deb:	int3   
  405dec:	or     DWORD PTR [edi-0x2c],ebp
  405def:	cmp    al,0xe5
  405df1:	push   ds
  405df2:	sub    DWORD PTR [ebp-0x1],edi
  405df5:	adc    dh,BYTE PTR [ecx]
  405df7:	add    edi,eax
  405df9:	inc    ebx
  405dfa:	pop    ss
  405dfb:	sub    bh,BYTE PTR [esi+0x2b]
  405dfe:	iret   
  405dff:	fwait
  405e00:	mov    ebx,0xbcbf0d6e
  405e05:	mov    cl,0x40
  405e07:	inc    esi
  405e08:	push   ecx
  405e09:	inc    ebx
  405e0a:	aas    
  405e0b:	sbb    esi,DWORD PTR [edi]
  405e0d:	dec    ecx
  405e0e:	dec    edi
  405e0f:	sub    al,BYTE PTR ds:0x70a76b56
  405e15:	pop    ebp
  405e16:	or     dh,cl
  405e18:	(bad)  
  405e1a:	aam    0x82
  405e1c:	and    al,0xb6
  405e1e:	(bad)  
  405e1f:	pusha  
  405e20:	inc    ecx
  405e21:	push   esp
  405e22:	call   0x6f0f16a5
  405e27:	pop    ds
  405e28:	mov    ch,0x16
  405e2a:	sbb    cl,BYTE PTR [ebp+esi*2-0x80]
  405e2e:	inc    ecx
  405e2f:	fmul   QWORD PTR [edx]
  405e31:	or     eax,0xaa841869
  405e36:	jmp    0x95c0e6b1
  405e3b:	loop   0x405e2b
  405e3d:	repnz mov edx,0x38cd6d1d
  405e43:	(bad)  
  405e44:	ja     0x405e57
  405e46:	xchg   edi,eax
  405e47:	mov    dh,0xcf
  405e49:	test   al,0x39
  405e4b:	or     dh,BYTE PTR [ebp+0xfec5728]
  405e51:	and    al,0xdf
  405e53:	daa    
  405e54:	in     eax,dx
  405e55:	out    0x1f,al
  405e57:	(bad)  
  405e58:	iret   
  405e59:	repnz mov WORD PTR [edx+0x2f6c905e],es
  405e60:	repz push edi
  405e62:	mov    edx,0xf090f852
  405e67:	sahf   
  405e68:	cmp    ebx,DWORD PTR [ebx]
  405e6a:	pop    ecx
  405e6b:	and    BYTE PTR [esi],cl
  405e6d:	retf   0xb2cc
  405e70:	mov    edi,0x972879cb
  405e75:	mov    al,ds:0xb66beb5b
  405e7a:	cmc    
  405e7b:	imul   edx,DWORD PTR [ebx+ebp*2-0x3d3f1f28],0x21
  405e83:	push   edx
  405e84:	dec    eax
  405e85:	push   ecx
  405e86:	fiadd  WORD PTR [ecx]
  405e88:	pushf  
  405e89:	push   esp
  405e8a:	jmp    0x405e75
  405e8c:	add    eax,0x88fb0d21
  405e91:	xchg   esi,eax
  405e92:	xchg   BYTE PTR [ebx-0x1371b069],ah
  405e98:	leave  
  405e99:	sub    esi,DWORD PTR [ebp-0x7cc8d76b]
  405e9f:	js     0x405e44
  405ea1:	aad    0xaa
  405ea3:	sub    ch,BYTE PTR [ecx]
  405ea5:	cli    
  405ea6:	push   0xffffffbf
  405ea8:	aaa    
  405ea9:	fdivrp st(1),st
  405eab:	fsubr  QWORD PTR [ecx-0x5ecacbeb]
  405eb1:	test   eax,0xec5ac2ee
  405eb6:	push   ds
  405eb7:	leave  
  405eb8:	xchg   esi,eax
  405eb9:	mov    edi,0xb31e2ba3
  405ebe:	stos   DWORD PTR es:[edi],eax
  405ebf:	cs jmp 0x7dfb9115
  405ec5:	jno    0x405eb2
  405ec7:	xchg   DWORD PTR cs:[esp+esi*4],edx
  405ecb:	out    0x6e,eax
  405ecd:	push   cs
  405ece:	xor    DWORD PTR [edx],eax
  405ed0:	fisttp DWORD PTR ds:0xaaeed2d5
  405ed6:	outs   dx,DWORD PTR ds:[esi]
  405ed7:	in     al,0x76
  405ed9:	inc    edx
  405eda:	outs   dx,BYTE PTR ds:[esi]
  405edb:	enter  0x1003,0x83
  405edf:	or     BYTE PTR [esi+ebx*2-0x69],cl
  405ee3:	cmp    DWORD PTR ds:0xc0a469b8,0x73ee3ca2
  405eed:	sub    dh,ch
  405eef:	cmp    ch,BYTE PTR [ebx-0x6d]
  405ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ef3:	jle    0x405ea5
  405ef5:	cmp    BYTE PTR [edi],bl
  405ef7:	cmp    eax,DWORD PTR [edx]
  405ef9:	cdq    
  405efa:	rol    al,1
  405efc:	push   ecx
  405efd:	arpl   WORD PTR [eax+0x64],cx
  405f00:	jbe    0x405efc
  405f02:	addr16 adc ah,bl
  405f05:	(bad)  
  405f06:	sbb    esp,DWORD PTR ds:0x79837aea
  405f0c:	test   BYTE PTR [eax],dl
  405f0e:	inc    ebx
  405f0f:	push   ss
  405f10:	pop    ebp
  405f11:	ja     0x405ec0
  405f13:	jo     0x405f77
  405f15:	enter  0x7a93,0x7e
  405f19:	or     bl,BYTE PTR [eax+ebp*2-0x6f]
  405f1d:	daa    
  405f1e:	push   cs
  405f1f:	pop    esi
  405f20:	push   ebp
  405f21:	test   eax,0x6e9ac614
  405f26:	mov    cl,BYTE PTR [eax+0x47b21de4]
  405f2c:	addr16 mov ecx,0xb98fdf3c
  405f32:	push   ebx
  405f33:	imul   edi,DWORD PTR ds:[edx+0x12],0x1b
  405f38:	jmp    0x405f80
  405f3a:	retf   0xf99a
  405f3d:	cli    
  405f3e:	and    ch,bh
  405f40:	test   al,0x2e
  405f42:	lock (bad) 
  405f44:	std    
  405f45:	push   edx
  405f46:	push   es
  405f47:	adc    eax,0x2b2c99b9
  405f4c:	lods   eax,DWORD PTR ds:[esi]
  405f4d:	dec    esp
  405f4e:	arpl   bp,bx
  405f50:	ret    0x74b3
  405f53:	or     BYTE PTR [edi],bh
  405f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f56:	push   ebx
  405f57:	test   DWORD PTR [esi+0x3b47f615],0x69b01b7e
  405f61:	push   ds
  405f62:	xor    DWORD PTR [ebx-0x40],ebx
  405f65:	and    eax,0xbf3141c1
  405f6a:	call   0x821b82e0
  405f6f:	xchg   esi,eax
  405f70:	out    0xf6,al
  405f72:	sub    DWORD PTR [esi-0x5],esp
  405f75:	les    eax,FWORD PTR [edi-0x40b0717f]
  405f7b:	xor    eax,DWORD PTR [edi]
  405f7d:	aas    
  405f7e:	aam    0x90
  405f80:	add    cl,BYTE PTR [edx+ebp*1+0x3dc8a790]
  405f87:	mov    edx,0x42a3ee32
  405f8c:	fistp  DWORD PTR ds:0x85fae544
  405f92:	aam    0xe
  405f94:	mov    bh,0xc5
  405f96:	jbe    0x405ff5
  405f98:	scas   al,BYTE PTR es:[edi]
  405f99:	dec    edx
  405f9a:	retf   
  405f9b:	xor    BYTE PTR [ebp+0x5f79aec0],bl
  405fa1:	xchg   dx,ax
  405fa3:	push   0x30c2a9ca
  405fa8:	mov    ds:0xbd89fb25,eax
  405fad:	les    ebp,FWORD PTR [edi+0x18]
  405fb0:	mov    WORD PTR [ecx],fs
  405fb2:	adc    eax,0x806f6c59
  405fb7:	ds sbb al,0xe0
  405fba:	jg     0x405fbd
  405fbc:	push   0xffffff95
  405fbe:	and    al,0x2a
  405fc0:	repz sub eax,0x585af1a5
  405fc6:	sub    al,0x11
  405fc8:	jg     0x405fc0
  405fca:	pop    ecx
  405fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fcc:	adc    eax,DWORD PTR [ebx-0x21]
  405fcf:	and    esp,DWORD PTR [edx-0x39dacfcb]
  405fd5:	mov    dh,0xba
  405fd7:	xor    DWORD PTR ds:0xd7ee267b,edx
  405fdd:	adc    eax,ecx
  405fdf:	int3   
  405fe0:	fucomp st(4)
  405fe2:	(bad)  
  405fe3:	out    dx,eax
  405fe4:	jne    0x405ff6
  405fe6:	dec    ecx
  405fe7:	inc    ecx
  405fe8:	push   ds
  405fe9:	cld    
  405fea:	data16 add BYTE PTR [edx-0x36],dh
  405fee:	cmp    edi,esp
  405ff0:	pop    ebx
  405ff1:	mov    ebx,0xc0e4c83c
  405ff6:	out    dx,al
  405ff7:	gs fs push eax
  405ffa:	push   es
  405ffb:	pop    esp
  405ffc:	in     al,dx
  405ffd:	push   es
  405ffe:	mov    al,ds:0x77bb620a
  406003:	ret    
  406004:	(bad)  
  406005:	shl    DWORD PTR [ebx-0x9c0f971],cl
  40600b:	(bad)  
  40600c:	xchg   DWORD PTR [edx+0x1e],ebx
  40600f:	sbb    edi,DWORD PTR [ecx+0x43]
  406012:	add    edi,DWORD PTR [eax+eiz*8+0x49]
  406016:	dec    esi
  406017:	fwait
  406018:	cmc    
  406019:	ret    
  40601a:	clc    
  40601b:	push   ebp
  40601c:	shl    DWORD PTR [edi-0x7d],0x5c
  406020:	xchg   ecx,eax
  406021:	sti    
  406022:	adc    bh,BYTE PTR [ebx+0x3]
  406025:	dec    esi
  406026:	(bad)  
  406027:	(bad)  
  406028:	sub    esi,ecx
  40602a:	sub    BYTE PTR [edi+edi*1-0x30],ch
  40602e:	xor    DWORD PTR [ebx-0x59],ecx
  406031:	dec    eax
  406032:	push   ebx
  406033:	xchg   esi,eax
  406034:	cmp    BYTE PTR [esi+0xd],bl
  406037:	jae    0x4060b5
  406039:	retf   
  40603a:	jg     0x405fc9
  40603c:	in     al,0xe6
  40603e:	dec    esp
  40603f:	loop   0x405fe7
  406041:	rcl    ah,cl
  406043:	aam    0xdd
  406045:	leave  
  406046:	lea    eax,[ebp+0x52d5a1f0]
  40604c:	mov    cl,0x5e
  40604e:	sbb    eax,0xab35af3c
  406053:	xlat   BYTE PTR ds:[ebx]
  406054:	or     al,0x4d
  406056:	xlat   BYTE PTR ds:[ebx]
  406057:	lock add dh,bh
  40605a:	xchg   esi,eax
  40605b:	es repz mov cl,0x9d
  40605f:	shl    DWORD PTR [ecx],1
  406061:	ror    ah,1
  406063:	xchg   esi,eax
  406064:	jg     0x4060b4
  406066:	popf   
  406067:	stos   DWORD PTR es:[edi],eax
  406068:	sti    
  406069:	(bad)  
  40606a:	jno    0x406054
  40606c:	mov    gs,esp
  40606e:	cmp    al,0xd4
  406070:	xchg   DWORD PTR [eax-0x790949ba],esi
  406076:	mov    BYTE PTR [ebx],dh
  406078:	ins    BYTE PTR es:[edi],dx
  406079:	fucomp st(6)
  40607b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607c:	jmp    0x58d3:0xa010070c
  406083:	adc    edx,eax
  406085:	call   0x52ab:0x32ff4989
  40608c:	adc    al,dh
  40608e:	and    bl,BYTE PTR [ebx+ebp*1]
  406091:	jno    0x406039
  406093:	aas    
  406094:	push   cs
  406095:	dec    esi
  406096:	xor    esi,ebp
  406098:	inc    esi
  406099:	jnp    0x406086
  40609b:	scas   eax,DWORD PTR es:[edi]
  40609c:	fs xchg ebx,eax
  40609e:	xchg   edi,eax
  40609f:	stos   DWORD PTR es:[edi],eax
  4060a0:	sahf   
  4060a1:	adc    eax,0x21708cc7
  4060a6:	ins    DWORD PTR es:[edi],dx
  4060a7:	das    
  4060a8:	je     0x40610f
  4060aa:	aas    
  4060ab:	arpl   cx,bp
  4060ad:	mov    edx,0x17254613
  4060b2:	in     eax,dx
  4060b3:	je     0x4060f8
  4060b5:	call   0x3fb0:0xe5f18b52
  4060bc:	add    DWORD PTR [ecx-0x419417b4],esp
  4060c2:	pop    esp
  4060c3:	mov    bh,0x67
  4060c5:	call   DWORD PTR [edx]
  4060c7:	int    0x41
  4060c9:	jns    0x40611b
  4060cb:	mov    esi,0xd9af5aa3
  4060d0:	add    dh,BYTE PTR [edi+0x2fd70023]
  4060d6:	add    al,0xf
  4060d8:	lock out dx,eax
  4060da:	adc    al,0x64
  4060dc:	mov    edx,0xe5d060ec
  4060e1:	out    0xe2,al
  4060e3:	xchg   ecx,eax
  4060e4:	xchg   ebx,eax
  4060e5:	retf   0xcf5b
  4060e8:	mov    ebx,0x14501386
  4060ed:	or     ch,BYTE PTR [ebx]
  4060ef:	push   DWORD PTR [esi-0x12]
  4060f2:	sub    al,0x83
  4060f4:	xlat   BYTE PTR cs:[ebx]
  4060f6:	std    
  4060f7:	and    DWORD PTR [edx-0x650d8b64],0xffffff89
  4060fe:	mov    al,ds:0x4c6df00d
  406103:	mov    eax,ds:0x8ff43d1e
  406108:	jge    0x4060f7
  40610a:	pop    esi
  40610b:	xlat   BYTE PTR ds:[ebx]
  40610c:	test   al,0x16
  40610e:	retf   0x41c9
  406111:	sbb    al,BYTE PTR [ebp+0x57]
  406114:	test   BYTE PTR [esi-0x476e357b],bl
  40611a:	das    
  40611b:	int3   
  40611c:	(bad)  
  40611d:	clc    
  40611e:	cdq    
  40611f:	(bad)  
  406120:	xchg   ebx,eax
  406121:	sub    DWORD PTR [edi],ecx
  406123:	ret    0x29a1
  406126:	pop    ecx
  406127:	xor    al,0x4d
  406129:	mov    edx,0x49bf07fb
  40612e:	mov    ds:0xd6f874a6,eax
  406133:	jo     0x4060e2
  406135:	mov    ch,0x30
  406137:	(bad)  
  406138:	mov    ebx,0xdb1f34ab
  40613d:	ret    0x7245
  406140:	ss mov eax,0xaa4c8f74
  406146:	jmp    0x406116
  406148:	cs and ecx,esp
  40614b:	push   ebp
  40614c:	mov    cl,0xc
  40614e:	mov    cl,0xaf
  406150:	mov    dh,0x4a
  406152:	cmp    BYTE PTR [edx-0xe],0x57
  406156:	xchg   esp,eax
  406157:	enterw 0x6df1,0x84
  40615c:	fnstenv [ecx]
  40615e:	sbb    dl,dl
  406160:	add    eax,0x1ca41f46
  406165:	or     DWORD PTR [esi+edi*2-0x79f338a3],0xf83d663f
  406170:	nop
  406171:	mov    bh,0x83
  406173:	iret   
  406174:	mov    ebx,DWORD PTR [ebp+0x75]
  406177:	or     eax,0xc077a775
  40617c:	xor    DWORD PTR [ebp-0x6d],0x7cc0fcfc
  406183:	aas    
  406184:	outs   dx,BYTE PTR ds:[esi]
  406186:	rcl    esi,cl
  406188:	sub    ch,bh
  40618a:	stos   DWORD PTR es:[edi],eax
  40618b:	aaa    
  40618c:	dec    eax
  40618d:	imul   esi,DWORD PTR [edx+ecx*4+0x46],0x6fab8a99
  406195:	lods   eax,DWORD PTR ds:[esi]
  406196:	add    eax,edx
  406198:	das    
  406199:	add    ah,BYTE PTR [esi+0x28ab283b]
  40619f:	les    esi,FWORD PTR [ebx-0x23]
  4061a2:	jmp    0xe002:0xc406b74d
  4061a9:	dec    ebp
  4061aa:	sub    esp,ebx
  4061ac:	rcr    ecx,cl
  4061ae:	lods   eax,DWORD PTR ds:[esi]
  4061af:	cmp    al,0x50
  4061b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061b2:	jg     0x4061b3
  4061b4:	ds adc al,0x34
  4061b7:	daa    
  4061b8:	xchg   esi,eax
  4061b9:	fistp  DWORD PTR [edx+0x2d503087]
  4061bf:	les    edx,FWORD PTR [esi]
  4061c1:	fnsave [edi]
  4061c3:	cdq    
  4061c4:	(bad)  
  4061c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061c7:	je     0x406235
  4061c9:	xor    DWORD PTR [ecx-0x6d],ebp
  4061cc:	ins    DWORD PTR es:[edi],dx
  4061cd:	ds push ds
  4061cf:	(bad)  
  4061d1:	fwait
  4061d2:	repz shl BYTE PTR ds:[edi-0x6],cl
  4061d7:	jmp    0x406216
  4061d9:	mov    cl,bl
  4061db:	ror    BYTE PTR [edx],cl
  4061dd:	pop    ecx
  4061de:	loopne 0x406230
  4061e0:	imul   eax,DWORD PTR [edx+0x2e],0x90d6fa4a
  4061e7:	push   0xdeec5c21
  4061ec:	inc    ecx
  4061ed:	pop    esp
  4061ee:	xor    ebp,DWORD PTR [edx+edi*2]
  4061f1:	lods   al,BYTE PTR ds:[esi]
  4061f2:	add    DWORD PTR [esi+ebx*1],edx
  4061f5:	les    esi,FWORD PTR [ecx]
  4061f7:	lods   eax,DWORD PTR ds:[esi]
  4061f8:	jno    0x4061b0
  4061fa:	iret   
  4061fb:	xchg   ebp,eax
  4061fc:	ds nop
  4061fe:	xchg   ebp,eax
  4061ff:	push   cs
  406200:	fs aad 0x8a
  406203:	mov    eax,0xc3c728ec
  406208:	add    cl,BYTE PTR [edx]
  40620a:	inc    esi
  40620b:	call   0x1ef6:0x5c1655c8
  406212:	mov    ecx,0x7c27f308
  406217:	repz sar BYTE PTR es:[esi],cl
  40621b:	and    DWORD PTR [ecx-0x33],0x38227961
  406222:	add    al,0x5
  406224:	mov    esi,0xfc17451e
  406229:	div    BYTE PTR [ebx+0x3e58cfaf]
  40622f:	jp     0x406262
  406231:	lds    edx,FWORD PTR [edi-0xeb7a5c1]
  406237:	sar    DWORD PTR [bx+di+0x27],cl
  40623b:	sbb    ebx,DWORD PTR [ebp-0x2eaf77ca]
  406241:	test   DWORD PTR [ebx],esi
  406243:	in     eax,0xb5
  406245:	mov    ds:0xb437e4d4,eax
  40624a:	inc    edx
  40624b:	cmp    DWORD PTR [ecx-0x67],esp
  40624e:	(bad)  
  40624f:	shr    BYTE PTR [ebp+0x75],1
  406252:	sbb    DWORD PTR [ecx+0x3cf49fbf],eax
  406258:	cmp    al,0x3c
  40625a:	sub    ebp,DWORD PTR [ebx+0x1f68af53]
  406260:	add    DWORD PTR [edi],ecx
  406262:	pop    ebx
  406263:	push   0xef7e8094
  406268:	or     dl,BYTE PTR [edi+0x37]
  40626b:	jbe    0x40627b
  40626d:	mov    ch,0x69
  40626f:	and    ebp,DWORD PTR [ecx-0xeb3f131]
  406275:	(bad)
  406279:	add    ecx,DWORD PTR es:[esi-0x52e8a6b2]
  406280:	add    edi,ecx
  406282:	mov    cl,0x46
  406284:	in     eax,dx
  406285:	and    al,0x7
  406287:	lahf   
  406288:	push   es
  406289:	dec    ecx
  40628a:	(bad)  
  40628b:	mov    dl,0xd2
  40628d:	jb     0x406298
  40628f:	pop    edx
  406290:	and    dh,BYTE PTR [ebx]
  406292:	pushf  
  406293:	int3   
  406294:	lds    edi,FWORD PTR [edi+0x6d]
  406297:	fsubr  QWORD PTR [esi+ebp*1-0x968c1f3]
  40629e:	imul   edx,DWORD PTR [esi],0xffffffc7
  4062a1:	jmp    0x40628e
  4062a3:	xor    ah,ch
  4062a5:	gs test al,0x73
  4062a8:	call   0x5b0e:0x46260509
  4062af:	lock mov al,0x4a
  4062b2:	cdq    
  4062b3:	add    eax,0x5157cb33
  4062b8:	ja     0x4062ec
  4062ba:	or     dl,ah
  4062bc:	mov    sp,0xa17f
  4062c0:	popf   
  4062c1:	inc    eax
  4062c2:	sub    BYTE PTR [ebp-0x763858d1],bl
  4062c8:	sub    al,0xbf
  4062ca:	not    esp
  4062cc:	mov    esp,0x75be3a50
  4062d1:	push   ebx
  4062d2:	(bad)  
  4062d3:	jmp    0x3ae3b276
  4062d8:	es inc BYTE PTR fs:[edi-0x60b481b1]
  4062e0:	les    esi,FWORD PTR [eax+0x2a]
  4062e3:	jmp    0x406265
  4062e5:	jle    0x4062b5
  4062e7:	and    cl,BYTE PTR [esi]
  4062e9:	js     0x406315
  4062eb:	jge    0x4062ea
  4062ed:	outs   dx,DWORD PTR ds:[esi]
  4062ee:	pop    edi
  4062ef:	sub    BYTE PTR [eax],al
  4062f1:	cli    
  4062f2:	mov    ds:0x6a0ca076,al
  4062f7:	into   
  4062f8:	daa    
  4062f9:	xchg   BYTE PTR [edi-0x3f80b77a],al
  4062ff:	cmp    BYTE PTR [eax],ah
  406301:	mov    esp,0xef93cf8a
  406306:	add    DWORD PTR [eax+0x591f7071],esp
  40630c:	rol    DWORD PTR [ecx+0x68],cl
  40630f:	xchg   DWORD PTR [eax-0x52],ecx
  406312:	mov    bl,0x4c
  406314:	addr16 mov ds:0xf801,eax
  406318:	inc    esi
  406319:	add    al,0x64
  40631b:	aad    0x22
  40631d:	(bad)  
  40631e:	lahf   
  40631f:	cmc    
  406320:	add    DWORD PTR [edx+eax*4+0x22],ebx
  406324:	rcl    cl,1
  406326:	xchg   DWORD PTR [ebx-0x57],ecx
  406329:	jg     0x406350
  40632b:	add    ch,ah
  40632d:	aaa    
  40632e:	call   0x2cc4:0x8d7b8db5
  406335:	add    esi,DWORD PTR [ebx-0x27]
  406338:	nop
  406339:	and    al,dl
  40633b:	fadd   DWORD PTR [edx]
  40633d:	mov    ds:0xf1d6b40,al
  406342:	jg     0x406319
  406344:	(bad)  [ebx+0x63]
  406347:	cmp    eax,0xa4d1c50e
  40634c:	xchg   ebx,eax
  40634d:	daa    
  40634e:	retf   
  40634f:	xchg   esp,eax
  406350:	lds    ebp,FWORD PTR [edx]
  406352:	and    BYTE PTR [edx-0x2998b3e2],cl
  406358:	test   BYTE PTR [edi+0x4bc90cb5],ah
  40635e:	or     al,0xb
  406360:	push   0xffffffa6
  406362:	popa   
  406363:	cmp    DWORD PTR [edx+0x7a],eax
  406366:	stos   DWORD PTR es:[edi],eax
  406367:	mov    al,BYTE PTR [edx]
  406369:	(bad)  
  40636a:	xchg   esp,eax
  40636b:	sbb    ebx,DWORD PTR [eax]
  40636d:	repnz test al,0xdd
  406370:	inc    ecx
  406371:	pusha  
  406372:	adc    DWORD PTR [eax-0x3d],ebp
  406375:	jb     0x406300
  406377:	xchg   ecx,eax
  406378:	adc    al,0x17
  40637a:	inc    ebx
  40637b:	shl    BYTE PTR [ebx],0x1b
  40637e:	or     bh,al
  406380:	or     edi,edx
  406382:	iret   
  406383:	fwait
  406384:	sbb    BYTE PTR [ecx],bl
  406386:	stc    
  406387:	add    al,0x5c
  406389:	std    
  40638a:	dec    ebp
  40638b:	nop
  40638c:	cmp    dh,BYTE PTR [edx-0x4f88a283]
  406392:	dec    edi
  406393:	pop    edx
  406394:	lods   eax,DWORD PTR ds:[esi]
  406395:	fbld   TBYTE PTR [edi-0x18]
  406398:	push   cs
  406399:	adc    cl,BYTE PTR ds:0x46db95fe
  40639f:	add    ebp,0xfc6ce6d
  4063a5:	sub    dh,BYTE PTR [edx-0xe]
  4063a8:	bound  ebx,QWORD PTR es:[ebp+ebx*4+0x56e6e6fd]
  4063b0:	in     eax,0x67
  4063b2:	add    BYTE PTR [eax-0x6df7d9dc],al
  4063b8:	loopne 0x40638a
  4063ba:	adc    eax,0x5e8022f1
  4063bf:	psubw  mm7,QWORD PTR ss:[ebx]
  4063c3:	shl    edx,1
  4063c5:	repz xor ebx,DWORD PTR [edx-0x14]
  4063c9:	push   es
  4063ca:	ret    0x6242
  4063cd:	mov    eax,0x3f21b368
  4063d2:	adc    BYTE PTR [ebx-0x38],cl
  4063d5:	ror    BYTE PTR [edx-0x7388fe9],cl
  4063db:	inc    edi
  4063dc:	dec    ebx
  4063dd:	int    0xc6
  4063df:	les    ebp,FWORD PTR [edi]
  4063e1:	pop    es
  4063e2:	dec    ebx
  4063e3:	push   ebp
  4063e4:	ss ss inc esi
  4063e7:	jmp    0x61fd:0xdc9fb72a
  4063ee:	or     esi,DWORD PTR [edx]
  4063f0:	xchg   edx,eax
  4063f1:	rcr    al,cl
  4063f3:	cmc    
  4063f4:	(bad)  
  4063f5:	gs inc eax
  4063f7:	fxch   st(6)
  4063f9:	xor    BYTE PTR [ecx+0x3f],al
  4063fc:	popf   
  4063fd:	scas   eax,DWORD PTR es:[edi]
  4063fe:	push   ss
  4063ff:	out    0xab,eax
  406401:	cmp    al,0xa4
  406403:	out    dx,al
  406404:	pushf  
  406405:	sub    esp,edi
  406407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406408:	fdiv   DWORD PTR [ecx+0x43]
  40640b:	fstp   QWORD PTR [edx+0x7f]
  40640e:	cmp    al,0xc8
  406410:	arpl   WORD PTR [ecx+ebp*8],cx
  406413:	mov    WORD PTR [eax+0x58],cs
  406416:	pop    ebx
  406417:	dec    eax
  406418:	dec    esp
  406419:	xor    esp,DWORD PTR [edi+0x2]
  40641c:	scas   eax,DWORD PTR es:[edi]
  40641d:	mov    ds:0x18b995bc,al
  406422:	in     al,dx
  406423:	lods   eax,DWORD PTR ds:[esi]
  406424:	leave  
  406425:	fisttp DWORD PTR [ebp+0x6d40b839]
  40642b:	int3   
  40642c:	sub    edi,edx
  40642e:	stos   DWORD PTR es:[edi],eax
  40642f:	repz dec ebx
  406431:	dec    eax
  406432:	sub    DWORD PTR [edi],ebx
  406434:	out    dx,al
  406435:	mov    bh,0x62
  406437:	icebp  
  406438:	mov    eax,ds:0x502c263c
  40643d:	jg     0x4063d0
  40643f:	clc    
  406440:	outs   dx,BYTE PTR ds:[esi]
  406441:	jb     0x4063f9
  406443:	dec    ebp
  406444:	cmp    eax,0xbe42f0f
  406449:	mov    ebx,0x72d027bb
  40644e:	mov    edx,0xd3bf112
  406453:	punpcklwd mm5,mm4
  406456:	das    
  406457:	add    BYTE PTR [edi+esi*8-0x22],ah
  40645b:	xchg   ebp,eax
  40645c:	shl    al,0xbd
  40645f:	adc    BYTE PTR [ebp+0xe8e8739],bl
  406465:	mov    al,ds:0x6302a53
  40646a:	cmp    eax,0x8ff69221
  40646f:	jge    0x4064db
  406471:	test   DWORD PTR [eax+0x58aebb70],0x788ae43f
  40647b:	inc    esi
  40647c:	jecxz  0x40642a
  40647e:	ins    DWORD PTR es:[edi],dx
  40647f:	xchg   BYTE PTR [edx],al
  406481:	pop    ss
  406482:	sub    DWORD PTR [ebp+0x3],ebx
  406485:	fstp   TBYTE PTR [esi]
  406487:	std    
  406488:	ins    DWORD PTR es:[edi],dx
  406489:	pop    ds
  40648a:	or     edi,DWORD PTR [ebp-0x548bbb94]
  406490:	jle    0x4064f6
  406492:	ss sub DWORD PTR fs:[edi+0x47],esi
  406497:	fwait
  406498:	imul   edi,DWORD PTR [eax+0x0],0x1
  40649c:	je     0x4064de
  40649e:	sbb    eax,0x4b56fc3f
  4064a3:	xchg   edx,eax
  4064a4:	and    BYTE PTR [ebp+eax*4-0x60],ah
  4064a8:	pop    ebx
  4064a9:	repz inc DWORD PTR [esi+0x6da7cfc2]
  4064b0:	adc    ecx,ebx
  4064b2:	in     eax,0xe0
  4064b4:	jae    0x4064bf
  4064b6:	repz jo 0x4064a3
  4064b9:	imul   esp,DWORD PTR [ebp-0x53],0xffffffca
  4064bd:	clc    
  4064be:	outs   dx,BYTE PTR ds:[esi]
  4064bf:	int3   
  4064c0:	push   edi
  4064c1:	push   ebp
  4064c2:	xchg   ebp,eax
  4064c3:	pop    edx
  4064c4:	pop    ds
  4064c5:	in     eax,0xe1
  4064c7:	add    ah,dl
  4064c9:	stos   DWORD PTR es:[edi],eax
  4064ca:	pop    ss
  4064cb:	cmp    DWORD PTR [edx],0x7e
  4064ce:	and    al,0x65
  4064d0:	out    dx,eax
  4064d1:	pop    es
  4064d2:	into   
  4064d3:	popa   
  4064d4:	idiv   ebx
  4064d6:	lds    edi,FWORD PTR [esi-0x4b]
  4064d9:	xchg   edx,eax
  4064da:	push   0x72cd4f22
  4064df:	rol    bp,cl
  4064e2:	pushf  
  4064e3:	push   es
  4064e4:	aad    0xee
  4064e6:	hlt    
  4064e7:	stos   BYTE PTR es:[edi],al
  4064e8:	outs   dx,BYTE PTR ds:[esi]
  4064e9:	push   ds
  4064ea:	test   edx,0x61402f8c
  4064f0:	bound  esi,QWORD PTR [ebp-0x6d]
  4064f3:	shr    DWORD PTR [esi+0x1836156f],1
  4064f9:	xchg   edx,eax
  4064fa:	and    DWORD PTR [esi-0x6d87ae15],esp
  406500:	cs jle 0x40650a
  406503:	jle    0x406491
  406505:	nop
  406506:	push   edi
  406507:	add    DWORD PTR [ecx-0x17],eax
  40650a:	push   eax
  40650b:	or     eax,0xee14d67d
  406510:	lods   al,BYTE PTR ds:[esi]
  406511:	inc    ebx
  406512:	push   esi
  406513:	sbb    eax,0xcc750055
  406518:	mov    edi,0x53472eba
  40651d:	jae    0x406519
  40651f:	int    0xf8
  406521:	jo     0x4064f9
  406523:	adc    al,0x34
  406525:	ss scas al,BYTE PTR es:[edi]
  406527:	dec    esi
  406528:	inc    esp
  406529:	xchg   ah,bh
  40652b:	aad    0x5a
  40652d:	push   edx
  40652e:	inc    ebp
  40652f:	mov    dl,0xc7
  406531:	fild   DWORD PTR [edi]
  406533:	jbe    0x406589
  406535:	sub    DWORD PTR [edi+esi*4-0x24d0f83],ecx
  40653c:	adc    DWORD PTR [ebx-0x1],ebp
  40653f:	cmc    
  406540:	jmp    0x40651b
  406542:	imul   ebp,DWORD PTR [edx],0xd579c453
  406548:	jle    0x406562
  40654a:	mov    ebx,0xf0615d96
  40654f:	push   0xbaea3f19
  406554:	and    eax,0x2259aced
  406559:	cwde   
  40655a:	(bad)  
  40655b:	mov    eax,ds:0x69891ee3
  406560:	mov    cs,WORD PTR [esi-0x12]
  406563:	or     DWORD PTR [ecx],edx
  406565:	xor    BYTE PTR [esi-0x6c094a],bh
  40656b:	cli    
  40656c:	mov    cl,0x5a
  40656e:	xchg   ebp,eax
  40656f:	push   cs
  406570:	mov    esi,0xea41894a
  406575:	(bad)  
  406576:	aam    0x3e
  406578:	sub    edx,eax
  40657a:	adc    DWORD PTR [edi+esi*2],esp
  40657d:	jbe    0x406522
  40657f:	mov    dl,0x7c
  406581:	ds pop ebx
  406583:	or     BYTE PTR [eax+eiz*8],ah
  406586:	in     eax,0x65
  406588:	nop
  406589:	(bad)  
  40658a:	or     dh,BYTE PTR [eax-0x5fd0c23f]
  406590:	(bad)  
  406592:	xlat   BYTE PTR ds:[ebx]
  406593:	mov    ?,WORD PTR [esi]
  406595:	popf   
  406596:	jmp    0x8d1c:0x384de8b8
  40659d:	sbb    DWORD PTR [edx-0x34],eax
  4065a0:	inc    ebx
  4065a1:	(bad)  
  4065a2:	leave  
  4065a3:	je     0x4065ee
  4065a5:	ins    BYTE PTR es:[edi],dx
  4065a6:	ins    DWORD PTR es:[edi],dx
  4065a7:	idiv   ch
  4065a9:	fs cs jg 0x406622
  4065ad:	es (bad) 
  4065af:	cmp    DWORD PTR [eax],eax
  4065b1:	and    eax,0x4a031702
  4065b6:	mov    al,ds:0x868d24b0
  4065bb:	stc    
  4065bc:	fcom   DWORD PTR [edi-0x1eae9721]
  4065c2:	mov    esp,0x90db88aa
  4065c7:	nop
  4065c8:	push   esp
  4065c9:	cld    
  4065ca:	xor    BYTE PTR [eax+0x6f],ch
  4065cd:	inc    ecx
  4065ce:	ret    0x9d55
  4065d1:	(bad)  
  4065d3:	mov    bl,0x7a
  4065d5:	out    dx,eax
  4065d6:	fimul  WORD PTR [esi]
  4065d8:	adc    BYTE PTR [eax*2+0x2848d08d],dh
  4065df:	cmp    ecx,DWORD PTR [ebp+0x3e543a2d]
  4065e5:	add    BYTE PTR [ebp+0x1c],bl
  4065e8:	outs   dx,BYTE PTR ds:[esi]
  4065e9:	fsub   st,st(5)
  4065eb:	or     eax,0xd1e71f8e
  4065f0:	push   ss
  4065f1:	add    ebx,0xffffffb1
  4065f4:	shr    BYTE PTR [edi+eiz*1-0x48c0f12d],1
  4065fb:	mov    esi,0xfee59fff
  406600:	test   al,0xf6
  406602:	jge    0x40659a
  406604:	pop    ss
  406605:	mov    ebx,0x740ceedd
  40660a:	adc    al,0xf7
  40660c:	iret   
  40660d:	dec    DWORD PTR [edx+0x788ce3df]
  406613:	pop    eax
  406614:	arpl   WORD PTR ds:[edx-0x2c69e8cd],dx
  40661b:	adc    BYTE PTR [edi+0x60],dh
  40661e:	xor    eax,0xd948c62f
  406623:	xchg   DWORD PTR [edx],ebx
  406625:	pop    ecx
  406626:	cmpxchg BYTE PTR [edx+0x533b9a06],ch
  40662d:	dec    edx
  40662e:	jo     0x406695
  406630:	xchg   ecx,eax
  406631:	inc    ecx
  406632:	cmp    eax,0xfbfe85a2
  406637:	fisttp DWORD PTR [esi-0x139d0775]
  40663d:	jne    0x406654
  40663f:	jns    0x406694
  406641:	or     BYTE PTR [edi-0x498ba637],0x69
  406648:	cld    
  406649:	enter  0x24b0,0xc5
  40664d:	pop    ds
  40664e:	in     al,0x4d
  406650:	ins    BYTE PTR es:[edi],dx
  406651:	add    al,0x7a
  406653:	dec    ebx
  406654:	mov    al,0x78
  406656:	(bad)  
  406658:	imul   ebx,DWORD PTR [esi+0x6d96f132],0x65
  40665f:	add    eax,0x7df83aae
  406664:	jb     0x40667e
  406666:	adc    al,0x1c
  406668:	jle    0x406673
  40666a:	sbb    eax,0x24d1cd85
  40666f:	or     DWORD PTR [eax-0x7e0e4ca1],esi
  406675:	and    BYTE PTR [edi-0x609ecb99],al
  40667b:	dec    edx
  40667c:	cdq    
  40667d:	mov    ds:0xd43dffcd,eax
  406682:	pop    ebx
  406683:	ss repz mov dl,0xea
  406687:	add    ebp,DWORD PTR [edx-0x2b32c5bd]
  40668d:	xor    BYTE PTR [edx],bl
  40668f:	xchg   esi,esi
  406691:	jb     0x406630
  406693:	fisubr DWORD PTR [esp+ebp*1+0x6249c63a]
  40669a:	(bad)
  40669d:	add    BYTE PTR [ebx+0xd],bl
  4066a0:	sbb    ebx,DWORD PTR [esi+0x4]
  4066a3:	es cld 
  4066a5:	xor    DWORD PTR ds:0xd73c58f1,eax
  4066ab:	push   ss
  4066ac:	lods   al,BYTE PTR ds:[esi]
  4066ad:	push   es
  4066ae:	les    eax,FWORD PTR [edi+0xd0ee9e]
  4066b4:	(bad)  
  4066b5:	in     eax,dx
  4066b6:	mov    ebp,0xc2b162b7
  4066bb:	repz or dl,BYTE PTR [edx]
  4066be:	movhps QWORD PTR [ecx-0x37839aae],xmm3
  4066c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c6:	ret    
  4066c7:	shl    BYTE PTR [esi],0x85
  4066ca:	jmp    0x8697a1dc
  4066cf:	mov    al,0xbb
  4066d1:	imul   ecx,ebx,0xdd3c8e95
  4066d7:	push   ecx
  4066d8:	jge    0x406715
  4066da:	fst    st(3)
  4066dc:	inc    edi
  4066dd:	loop   0x4066b5
  4066df:	pushf  
  4066e0:	inc    eax
  4066e1:	stos   BYTE PTR es:[edi],al
  4066e2:	pusha  
  4066e3:	test   eax,0x652ab1bd
  4066e8:	imul   eax
  4066ea:	xchg   esp,eax
  4066eb:	sub    al,0x60
  4066ed:	dec    edi
  4066ee:	cmp    cl,cl
  4066f0:	sub    al,0xfe
  4066f2:	inc    eax
  4066f3:	data16 sub BYTE PTR [ebp-0x48819e94],bh
  4066fa:	push   eax
  4066fb:	pop    ds
  4066fc:	test   al,0xfb
  4066fe:	pop    eax
  4066ff:	neg    DWORD PTR [esi+0x4cc145c5]
  406705:	sbb    esi,DWORD PTR [ebx+ecx*8]
  406708:	fisttp DWORD PTR [ebx]
  40670a:	cmp    BYTE PTR [ebx+0x7dd80bdd],0x62
  406711:	mov    ds:0xa38fc81f,eax
  406716:	ret    
  406717:	mov    BYTE PTR [ebx+edx*8-0x1c],ah
  40671b:	mov    cl,0xf6
  40671d:	xor    al,0x50
  40671f:	push   0xffffffbe
  406721:	sub    edi,DWORD PTR [ebp+ebx*1-0x21]
  406725:	lock test ecx,0xbac13966
  40672c:	sub    DWORD PTR [esi],eax
  40672e:	adc    eax,DWORD PTR [ecx]
  406730:	xor    al,0xb
  406732:	inc    ebx
  406733:	fnstenv [esi]
  406735:	repz enter 0xfc35,0x94
  40673a:	or     ah,0x49
  40673d:	cmp    DWORD PTR [edi+ecx*4],0xfffffffa
  406741:	mov    WORD PTR [ecx+0x22],?
  406744:	sbb    eax,0x7b139a9f
  406749:	clc    
  40674a:	and    ah,cl
  40674c:	pop    es
  40674d:	ffree  st(3)
  40674f:	xor    ecx,0x27
  406752:	jno    0x406749
  406754:	int3   
  406755:	rcr    DWORD PTR [esi],0xf6
  406758:	dec    ecx
  406759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40675a:	add    al,0xee
  40675c:	(bad)  
  40675d:	leave  
  40675e:	dec    edi
  40675f:	loop   0x406748
  406761:	shl    BYTE PTR [edx+0x3d],cl
  406764:	mov    BYTE PTR [ebx],dl
  406766:	(bad)  ds:0x4e0581a5
  40676c:	push   eax
  40676d:	cmp    eax,0x53821360
  406772:	pop    esi
  406773:	lods   eax,DWORD PTR ds:[esi]
  406774:	repnz (bad) 
  406776:	pop    ebx
  406777:	(bad)  
  406778:	adc    al,0x9e
  40677a:	or     eax,DWORD PTR [edi+0x49e9bb9b]
  406780:	popa   
  406781:	shr    DWORD PTR [eax+0x46],cl
  406784:	or     al,0xd0
  406786:	sub    DWORD PTR ds:0xe4a3e42a,edi
  40678c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40678d:	call   0x288c522e
  406792:	jo     0x4067cc
  406794:	out    dx,al
  406795:	lds    eax,FWORD PTR [esi]
  406797:	retf   
  406798:	test   BYTE PTR [edi],al
  40679a:	mov    eax,ds:0x848bd8ef
  40679f:	out    0x47,eax
  4067a1:	pop    ds
  4067a2:	(bad)
  4067a7:	mov    DWORD PTR [eax-0x47],edx
  4067aa:	cmp    esp,eax
  4067ac:	es xchg esp,eax
  4067ae:	cld    
  4067af:	into   
  4067b0:	jl     0x406810
  4067b2:	je     0x406764
  4067b4:	ins    BYTE PTR es:[edi],dx
  4067b5:	push   edx
  4067b6:	fiadd  WORD PTR [ecx]
  4067b8:	mov    edx,0x47f0db23
  4067bd:	and    al,0x2
  4067bf:	jl     0x406774
  4067c1:	in     eax,0xfa
  4067c3:	and    esp,esi
  4067c5:	ret    0xcfab
  4067c8:	mov    eax,0xc401fc16
  4067cd:	push   cs
  4067ce:	(bad)  [ecx+0x168094b]
  4067d4:	pusha  
  4067d5:	data16 ja 0x4067cf
  4067d8:	aaa    
  4067d9:	lea    esi,[ecx+0x30]
  4067dc:	aaa    
  4067dd:	je     0x40680c
  4067df:	xchg   ebx,eax
  4067e0:	xor    ah,BYTE PTR [ebx]
  4067e2:	and    bh,BYTE PTR [edi-0x53154c11]
  4067e8:	shr    edi,cl
  4067ea:	nop
  4067eb:	xchg   esp,eax
  4067ec:	push   0x9d76cc36
  4067f1:	adc    esp,DWORD PTR [ebp-0x61]
  4067f4:	enter  0xb045,0xbf
  4067f8:	push   edi
  4067f9:	aam    0xca
  4067fb:	(bad)  [edi]
  4067fd:	fisub  WORD PTR [ecx+edx*8-0x35]
  406801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406802:	mov    esp,0xacc3739e
  406807:	xchg   eax,ebx
  406809:	push   ebp
  40680a:	int    0xa
  40680c:	cmp    bh,BYTE PTR ds:0xb1ee0ab4
  406812:	shl    BYTE PTR [ebx-0x65acd0b8],cl
  406818:	popa   
  406819:	jae    0x406836
  40681b:	inc    ecx
  40681c:	std    
  40681d:	pop    edi
  40681e:	xor    eax,DWORD PTR [ebx+ecx*1]
  406821:	xchg   edi,eax
  406822:	gs cs jge 0x4067e0
  406826:	fcom   DWORD PTR [esi]
  406828:	(bad)  
  406829:	iret   
  40682a:	aam    0x4f
  40682c:	sbb    DWORD PTR [edi],ebx
  40682e:	sub    ch,dh
  406830:	inc    ecx
  406831:	jnp    0x406828
  406833:	push   edi
  406834:	xchg   BYTE PTR [eax-0x6cb6b07c],cl
  40683a:	mov    edx,0xc687853b
  40683f:	js     0x4067d5
  406841:	out    0x9f,eax
  406843:	pop    esi
  406844:	jnp    0x40685e
  406846:	and    eax,0x5c121110
  40684b:	sub    BYTE PTR [ebp+0x3de6f8ab],bl
  406851:	rcl    edi,1
  406853:	adc    eax,0xedf83551
  406858:	push   ecx
  406859:	xchg   ebp,eax
  40685a:	xchg   esp,eax
  40685b:	pop    ecx
  40685c:	xor    edx,DWORD PTR [ecx]
  40685e:	imul   esi,DWORD PTR [ecx-0x4a],0x31
  406862:	data16 sbb bl,0x53
  406866:	popf   
  406867:	(bad)  
  406868:	and    ebx,esi
  40686a:	test   BYTE PTR [edi],0x2e
  40686d:	mov    al,0x53
  40686f:	shl    BYTE PTR ds:0x2403426b,cl
  406875:	inc    edx
  406876:	push   ds
  406877:	push   esi
  406878:	hlt    
  406879:	sub    BYTE PTR [edi-0x7ffd6578],0x9d
  406880:	mov    ch,0xb2
  406882:	outs   dx,BYTE PTR ds:[esi]
  406883:	inc    ecx
  406884:	jmp    FWORD PTR [ecx+0x7f]
  406887:	and    eax,0x6a7e78b4
  40688c:	cmp    eax,0x88d6485a
  406891:	cmp    esp,ebx
  406893:	xchg   esi,eax
  406894:	sti    
  406895:	pop    ds
  406896:	imul   edi,esi,0xe80b321f
  40689c:	push   edi
  40689d:	call   FWORD PTR [eax+eax*2]
  4068a0:	push   0x601b0016
  4068a5:	in     al,0xef
  4068a7:	imul   ecx,DWORD PTR [eax-0x1838fcd7],0x22d05945
  4068b1:	and    DWORD PTR [edx+ebx*8-0xf11ec89],edi
  4068b8:	inc    ebp
  4068b9:	xor    ebx,ebx
  4068bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068bc:	mov    eax,0x10ea9dec
  4068c1:	mov    WORD PTR [eax+0x6],cs
  4068c4:	ret    
  4068c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068c6:	clc    
  4068c7:	outs   dx,BYTE PTR ds:[esi]
  4068c8:	loop   0x4068c4
  4068ca:	sbb    ebp,esi
  4068cc:	sbb    eax,0x84c398df
  4068d1:	(bad)  
  4068d3:	call   0x488e2ca8
  4068d8:	imul   ebp,DWORD PTR [edi-0x16],0x4e796cc1
  4068df:	jle    0x406885
  4068e1:	fwait
  4068e2:	dec    eax
  4068e3:	in     eax,dx
  4068e4:	and    eax,DWORD PTR [esp+eax*1+0x4a]
  4068e8:	cmp    cl,dh
  4068ea:	inc    edx
  4068eb:	sub    eax,0x76330821
  4068f0:	cld    
  4068f1:	repnz dec ebp
  4068f3:	cli    
  4068f4:	daa    
  4068f5:	sbb    DWORD PTR [edi],ebp
  4068f7:	mov    ds:0xac1ba05f,eax
  4068fc:	inc    ebx
  4068fd:	out    0xd5,al
  4068ff:	and    DWORD PTR [esi-0x1647afb4],ebx
  406905:	add    al,0xda
  406907:	jmp    0x216:0x528222a4
  40690e:	mov    ds:0x5c050506,al
  406913:	jp     0x40689d
  406915:	push   esi
  406916:	jnp    0x40698e
  406918:	xchg   esi,eax
  406919:	fst    DWORD PTR [esi]
  40691b:	call   0x6a440b4b
  406920:	inc    esi
  406921:	fadd   QWORD PTR [esi]
  406923:	jle    0x4068c3
  406925:	lds    esi,FWORD PTR [ebp+0x7]
  406928:	sub    DWORD PTR [esi+0x11ad04b0],ecx
  40692e:	sub    DWORD PTR [ebx],esp
  406930:	call   0xb7b7:0x2a0d840d
  406937:	mov    ebp,0xdbabe544
  40693c:	mov    al,0x44
  40693e:	mov    esp,0xe5c5715d
  406943:	sub    edi,DWORD PTR [edi]
  406945:	dec    edx
  406946:	lock sbb DWORD PTR [edi-0xf601c76],eax
  40694d:	pop    eax
  40694e:	jno    0x4069cd
  406950:	jb     0x40695d
  406952:	mov    al,0x86
  406954:	jb     0x40691c
  406956:	enter  0x91dd,0xca
  40695a:	sbb    ebp,DWORD PTR [ebx-0x71f10150]
  406960:	push   0xfffffff6
  406962:	shl    ecx,0xb3
  406965:	daa    
  406966:	(bad)  
  406968:	sbb    edx,DWORD PTR [edi+0x6b]
  40696b:	pop    edi
  40696c:	out    0x7f,eax
  40696e:	fsubr  QWORD PTR [ebx+esi*2]
  406971:	cdq    
  406972:	add    edi,DWORD PTR [eax+0x402c082f]
  406978:	xor    al,BYTE PTR [ecx+0x10]
  40697b:	fwait
  40697c:	cwde   
  40697d:	inc    esi
  40697e:	daa    
  40697f:	mov    al,ds:0xc30c71e5
  406984:	ror    DWORD PTR cs:[ebx-0x35571032],0xa3
  40698c:	cmp    esp,DWORD PTR [ebx+0x480f219a]
  406992:	jg     0x406914
  406994:	mov    ds:0x1483db5a,eax
  40699a:	fstp   TBYTE PTR [ebx]
  40699c:	mov    gs,WORD PTR [ecx+ebp*2]
  40699f:	call   0xabcf:0x91bab72b
  4069a6:	(bad)  
  4069a8:	mov    ch,0x2
  4069aa:	inc    esi
  4069ab:	mov    ds:0xa04c7154,eax
  4069b0:	pop    edi
  4069b1:	and    al,0x44
  4069b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b4:	repnz or BYTE PTR [esi],0x47
  4069b8:	push   edi
  4069b9:	inc    ecx
  4069ba:	in     al,0x76
  4069bc:	leave  
  4069bd:	jmp    0xc43d385a
  4069c2:	push   ecx
  4069c3:	outs   dx,BYTE PTR ds:[esi]
  4069c4:	jmp    0x406947
  4069c6:	int3   
  4069c7:	bnd ja 0x406a2e
  4069ca:	mov    al,ds:0x7215d9ad
  4069cf:	jle    0x406a4b
  4069d1:	jecxz  0x406a29
  4069d3:	retf   0xff4e
  4069d6:	jbe    0x406963
  4069d8:	or     al,0x69
  4069da:	xor    dh,BYTE PTR [ebp+0xf03bd6f]
  4069e0:	mov    edi,0x8c6c1e2a
  4069e5:	mov    eax,0x9b163b99
  4069ea:	(bad)  
  4069eb:	xor    al,0x8d
  4069ed:	mov    esi,0x57505c39
  4069f2:	xchg   esp,eax
  4069f4:	sbb    bl,BYTE PTR [eax+edi*4]
  4069f7:	dec    eax
  4069f8:	or     eax,0x78777f6e
  4069fd:	add    DWORD PTR [ecx],0x1
  406a00:	call   0xcf2:0xf9d1a660
  406a07:	mov    ebx,0x172f0638
  406a0c:	mov    edi,0x8cd30733
  406a11:	jae    0x5c33f28b
  406a17:	xchg   esp,eax
  406a18:	fstp   TBYTE PTR [ecx+0x42b5f592]
  406a1e:	imul   esi,ecx,0xffffffcf
  406a21:	jmp    0x54426bb0
  406a26:	cmp    edi,eax
  406a28:	add    BYTE PTR [edi-0x74],bh
  406a2b:	xor    dl,BYTE PTR [eax]
  406a2d:	add    cl,ah
  406a2f:	add    BYTE PTR [edx+eax*8],ch
  406a32:	rcr    DWORD PTR [edx+ebp*4],0xaa
  406a36:	sahf   
  406a37:	ficom  DWORD PTR [esi+0x146add30]
  406a3d:	mov    gs:0x8b49b93b,al
  406a43:	mov    fs,edi
  406a45:	jg     0x4069e1
  406a47:	cs xchg ebx,eax
  406a49:	inc    ebp
  406a4a:	dec    esi
  406a4b:	jmp    0x4069ed
  406a4d:	adc    DWORD PTR [esi],eax
  406a4f:	jmp    0x406ac2
  406a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a52:	iret   
  406a53:	push   esp
  406a54:	xor    DWORD PTR [esp+ebp*1-0x38],edx
  406a58:	fimul  DWORD PTR [edi+0x23]
  406a5b:	retf   0xc654
  406a5e:	push   eax
  406a5f:	and    ecx,DWORD PTR [edx+0x3e]
  406a62:	xchg   ebx,eax
  406a63:	test   al,bh
  406a65:	jno    0x406a38
  406a67:	xchg   DWORD PTR [ebx-0x22],edi
  406a6a:	xchg   DWORD PTR [ebp-0x2d],ecx
  406a6d:	out    0x4c,al
  406a6f:	adc    ch,BYTE PTR [ebx-0x6323fe79]
  406a75:	xor    ecx,ecx
  406a77:	shl    DWORD PTR [ebp+0x600a4c86],cl
  406a7d:	mov    dl,0x82
  406a7f:	loope  0x406ab3
  406a81:	int3   
  406a82:	je     0x406a09
  406a84:	mov    ds:0xe2da0adf,al
  406a89:	xchg   esp,eax
  406a8a:	cmp    ebp,DWORD PTR [ebx+0x6]
  406a8d:	inc    ebx
  406a8e:	adc    al,0x5
  406a90:	in     eax,0xd
  406a92:	add    al,0x95
  406a94:	js     0x406a92
  406a96:	repz mov ds:0xd75a5941,eax
  406a9c:	rol    DWORD PTR [edi+eax*1],1
  406a9f:	out    0xda,eax
  406aa1:	sti    
  406aa2:	mov    esi,0x65ee52e
  406aa7:	fnstcw WORD PTR [eax+edi*2+0x120c7f62]
  406aae:	xor    bl,BYTE PTR [edx]
  406ab0:	mov    eax,0x55fb2e1e
  406ab5:	std    
  406ab6:	leave  
  406ab7:	dec    edx
  406ab8:	jmp    0x43b6:0x264b6422
  406abf:	call   0xc1bc:0xad2a0684
  406ac6:	or     al,0x29
  406ac8:	test   BYTE PTR [edi],0x79
  406acb:	mov    ecx,0x4390ee04
  406ad0:	data16 arpl WORD PTR [ecx+0x142fd960],si
  406ad7:	iret   
  406ad8:	sbb    dh,ch
  406ada:	sti    
  406adb:	xchg   ebp,eax
  406adc:	mov    esp,0x29e78905
  406ae1:	push   ds
  406ae2:	shl    ch,cl
  406ae4:	or     BYTE PTR ds:0xdd0475ec,ch
  406aea:	push   esp
  406aeb:	int3   
  406aec:	ror    DWORD PTR ds:0xc0d0ad9f,1
  406af2:	out    dx,al
  406af3:	mov    esi,0x267f7ff7
  406af8:	push   0x36
  406afa:	mov    al,ds:0xdc08f20e
  406aff:	in     eax,dx
  406b00:	outs   dx,DWORD PTR ds:[esi]
  406b01:	xchg   ecx,eax
  406b02:	jae    0x406b75
  406b04:	cwde   
  406b05:	stc    
  406b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b07:	sub    DWORD PTR [ecx],0xf9afb5a
  406b0d:	popa   
  406b0e:	in     eax,dx
  406b0f:	jae    0x406b53
  406b11:	inc    ebx
  406b12:	push   ebx
  406b13:	fs ror dl,0x66
  406b17:	sbb    bh,BYTE PTR fs:[ebx]
  406b1a:	enter  0xb616,0x55
  406b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b1f:	jns    0x406b68
  406b21:	adc    eax,0xea5abf87
  406b26:	inc    edx
  406b27:	xor    eax,0x6b28b718
  406b2c:	loopne 0x406add
  406b2e:	dec    ecx
  406b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b31:	sub    BYTE PTR [esi-0x4c],cl
  406b34:	cmp    ecx,ebx
  406b36:	imul   esi,DWORD PTR [ebp-0x41],0x3e557977
  406b3d:	adc    al,0xba
  406b3f:	and    ebx,DWORD PTR [edi+0x3e4fe05d]
  406b45:	push   edi
  406b46:	jae    0x406aeb
  406b48:	lock add al,0x5b
  406b4b:	mov    ch,0xdc
  406b4d:	jns    0x406aee
  406b4f:	xchg   edi,eax
  406b50:	sub    eax,ecx
  406b52:	cmp    eax,0x19ce6184
  406b57:	(bad)  [edi+esi*8+0x458e0b4b]
  406b5e:	or     bh,BYTE PTR [edi]
  406b60:	cmp    eax,0x9f7cd21
  406b65:	mov    edx,0xe97c936e
  406b6a:	xchg   edi,eax
  406b6b:	scas   al,BYTE PTR es:[edi]
  406b6c:	es cld 
  406b6e:	adc    esp,DWORD PTR [edi]
  406b70:	lods   eax,DWORD PTR ds:[esi]
  406b71:	xchg   esp,eax
  406b72:	in     al,dx
  406b73:	out    dx,al
  406b74:	scas   eax,DWORD PTR es:[edi]
  406b75:	popa   
  406b76:	lahf   
  406b77:	pop    ebp
  406b78:	(bad)  
  406b79:	xchg   edx,eax
  406b7a:	lea    eax,[edi-0x15]
  406b7d:	ret    
  406b7e:	nop
  406b7f:	test   al,0x4c
  406b81:	xor    BYTE PTR [esi*2+0x816e090],bh
  406b88:	test   DWORD PTR [esi-0x6f8f8f77],0x1e526004
  406b92:	adc    DWORD PTR [ecx+edi*1-0x61],esi
  406b96:	jle    0x406ba4
  406b98:	inc    edx
  406b99:	or     dh,BYTE PTR [edi+ebx*8]
  406b9c:	cwde   
  406b9d:	push   edi
  406b9e:	mov    ds:0xaa5323c7,al
  406ba3:	push   eax
  406ba4:	mov    ecx,0x7dc0630a
  406ba9:	data16 int 0x5d
  406bac:	sbb    DWORD PTR [esi+0x42],ecx
  406baf:	lea    ebp,[edi+0x46]
  406bb2:	imul   ecx,DWORD PTR [ebx-0x2d],0x2db78289
  406bb9:	imul   BYTE PTR [ecx]
  406bbb:	cs dec edx
  406bbd:	xchg   ebx,eax
  406bbe:	es mov ebp,0x266d0ce0
  406bc4:	sub    ebp,ebx
  406bc6:	mov    eax,ds:0x828ee718
  406bcb:	push   ecx
  406bcc:	inc    esi
  406bcd:	in     eax,dx
  406bce:	and    al,bh
  406bd0:	push   ebp
  406bd1:	cmp    BYTE PTR [edx+eiz*1],dh
  406bd4:	sti    
  406bd5:	fdivr  DWORD PTR [eax-0xc11f3c6]
  406bdb:	in     al,dx
  406bdc:	leave  
  406bdd:	lds    esp,FWORD PTR [ebx]
  406bdf:	ds jecxz 0x406c1c
  406be2:	add    BYTE PTR [esi+0xd],bl
  406be5:	add    DWORD PTR [ecx],ebx
  406be7:	jmp    DWORD PTR [edx-0x7e]
  406bea:	gs mov esi,?
  406bed:	fs in  eax,0xf3
  406bf0:	push   ss
  406bf1:	sbb    al,0xd
  406bf3:	scas   eax,DWORD PTR es:[edi]
  406bf4:	inc    ebx
  406bf5:	rcl    DWORD PTR [edi],cl
  406bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf8:	outs   dx,BYTE PTR ds:[esi]
  406bf9:	aad    0xfe
  406bfb:	xlat   BYTE PTR ds:[ebx]
  406bfc:	and    al,BYTE PTR [edi-0x1a]
  406bff:	mov    cl,0xf2
  406c01:	xchg   esp,eax
  406c02:	retf   0x649
  406c05:	cdq    
  406c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c07:	ins    DWORD PTR es:[edi],dx
  406c08:	push   DWORD PTR [eax-0x7aade173]
  406c0e:	xor    DWORD PTR [ecx],eax
  406c10:	pop    edi
  406c11:	pop    ebx
  406c12:	in     al,0x6f
  406c14:	mov    eax,0xa716350f
  406c19:	cld    
  406c1a:	jne    0x406bf3
  406c1c:	iret   
  406c1d:	lea    ebp,[ebp-0x78061b3e]
  406c23:	xchg   ebp,eax
  406c24:	push   es
  406c25:	mov    al,BYTE PTR [edi+0x14]
  406c28:	adc    eax,0xf8d0ba6
  406c2d:	mov    ah,0x4f
  406c2f:	jnp    0x406bb2
  406c31:	neg    ebp
  406c33:	xchg   ebp,eax
  406c34:	push   0xffffffd7
  406c36:	cmp    ebp,esp
  406c38:	cld    
  406c39:	xchg   ebx,eax
  406c3a:	iret   
  406c3b:	and    DWORD PTR [esi+0x59ad8524],edx
  406c41:	in     eax,0x55
  406c43:	ds mov esp,0x5c8fe305
  406c49:	daa    
  406c4a:	mov    al,0xc0
  406c4c:	push   0xffffffb8
  406c4e:	int3   
  406c4f:	mov    eax,es
  406c51:	mov    eax,ds:0xbd32acc0
  406c56:	outs   dx,BYTE PTR ds:[esi]
  406c57:	add    ch,BYTE PTR [ebp+0x37e4ab9d]
  406c5d:	and    al,0xc1
  406c5f:	dec    eax
  406c60:	retf   
  406c61:	cmp    eax,0xe1fc8c7e
  406c66:	push   0xffffffec
  406c68:	lock mov edi,ecx
  406c6b:	xchg   ebp,eax
  406c6c:	int3   
  406c6d:	pop    es
  406c6e:	js     0x406cec
  406c70:	std    
  406c71:	popa   
  406c72:	dec    esp
  406c73:	ins    BYTE PTR es:[edi],dx
  406c74:	inc    esp
  406c75:	retf   0x94a4
  406c78:	sub    eax,0x94cf5def
  406c7d:	jo     0x406caf
  406c7f:	(bad)  
  406c80:	jle    0x406c96
  406c82:	sbb    BYTE PTR [edx],dh
  406c84:	mov    edx,DWORD PTR [esi+eiz*4+0x4f]
  406c88:	pop    es
  406c89:	pop    edx
  406c8a:	imul   edi,DWORD PTR [ecx-0x13],0xffffffab
  406c8e:	retf   
  406c8f:	scas   al,BYTE PTR es:[edi]
  406c90:	int    0x8b
  406c92:	adc    bl,BYTE PTR [ebx+edx*2-0x13]
  406c96:	xchg   edx,eax
  406c97:	jo     0x406cf3
  406c99:	out    0xcf,al
  406c9b:	(bad)  
  406c9c:	in     al,0xe1
  406c9e:	daa    
  406c9f:	hlt    
  406ca0:	inc    ebp
  406ca1:	cwde   
  406ca2:	dec    ebp
  406ca3:	dec    edi
  406ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ca5:	lock lods eax,DWORD PTR ds:[esi]
  406ca7:	test   eax,0xeb0738a1
  406cac:	mov    dh,0x47
  406cae:	push   esi
  406caf:	sub    al,0xc3
  406cb1:	cwde   
  406cb2:	call   0xe9b:0xab4ca502
  406cb9:	add    BYTE PTR [ecx],dh
  406cbb:	add    eax,0xcb585bdd
  406cc0:	inc    eax
  406cc1:	add    eax,0xbc01f78f
  406cc6:	fidivr DWORD PTR [edx+0x1999590b]
  406ccc:	inc    eax
  406ccd:	(bad)  
  406cce:	cmp    al,0xfe
  406cd0:	or     esi,DWORD PTR [edx-0x3e]
  406cd3:	add    DWORD PTR [edx+0x6a],esi
  406cd6:	inc    edx
  406cd7:	popa   
  406cd8:	sbb    dh,BYTE PTR [esi+0x47571923]
  406cde:	cmp    DWORD PTR [eax],eax
  406ce0:	inc    esi
  406ce1:	push   cs
  406ce2:	ret    
  406ce3:	mov    dl,0x2f
  406ce5:	mov    ebp,0xa61eeaa
  406cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ceb:	ds retf 
  406ced:	adc    bl,BYTE PTR [ebx+0x71fb19bd]
  406cf3:	inc    esi
  406cf4:	mov    eax,ds:0x3226796c
  406cf9:	cmp    eax,DWORD PTR [ebp-0x5f]
  406cfc:	loop   0x406cc1
  406cfe:	(bad)  
  406cff:	fisttp WORD PTR [ecx+eiz*8-0x2c]
  406d03:	mov    ?,WORD PTR [edi+esi*4+0x1f]
  406d07:	sbb    DWORD PTR [esi],ebp
  406d09:	ret    0x257a
  406d0c:	call   0xb3d:0xa63ea7b8
  406d13:	leave  
  406d14:	lock and eax,0x232721fc
  406d1a:	cli    
  406d1b:	popf   
  406d1c:	ret    0xce43
  406d1f:	jb     0x406d98
  406d21:	and    al,0x12
  406d23:	add    ecx,DWORD PTR [edi]
  406d25:	into   
  406d26:	pop    ecx
  406d27:	sub    eax,0x762437da
  406d2c:	sti    
  406d2d:	fistp  QWORD PTR [ebx-0x41]
  406d30:	ja     0x406d6b
  406d32:	add    ch,dl
  406d34:	jg     0x406ce3
  406d36:	dec    edx
  406d37:	jne    0x406cf0
  406d39:	dec    eax
  406d3a:	inc    ebp
  406d3b:	pop    ebp
  406d3c:	mov    cl,0x36
  406d3e:	pop    ebx
  406d3f:	inc    ebp
  406d40:	rol    BYTE PTR [eax-0x53],cl
  406d43:	aaa    
  406d44:	and    bh,BYTE PTR [ecx-0x45]
  406d47:	retf   0x1bf4
  406d4a:	sbb    BYTE PTR [esi],bh
  406d4c:	pop    ebx
  406d4d:	out    0xa4,eax
  406d4f:	and    eax,0x89ffdf39
  406d54:	dec    edi
  406d55:	ja     0x406cf0
  406d57:	jbe    0x406da5
  406d59:	mov    cl,0x86
  406d5b:	ins    DWORD PTR es:[edi],dx
  406d5c:	(bad)  [edx-0x190d6ab2]
  406d62:	dec    edi
  406d63:	inc    ebp
  406d64:	sbb    ah,BYTE PTR [ebx]
  406d66:	dec    edx
  406d67:	in     al,dx
  406d68:	lods   al,BYTE PTR ds:[esi]
  406d69:	ins    BYTE PTR es:[edi],dx
  406d6a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  406d6c:	ds dec eax
  406d6e:	pop    es
  406d6f:	bound  ebx,QWORD PTR [eax+0x63d7aad2]
  406d75:	inc    ecx
  406d76:	cli    
  406d77:	jle    0x406dad
  406d79:	sar    al,1
  406d7b:	fstp   TBYTE PTR [esi-0x2b]
  406d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d7f:	add    esp,DWORD PTR [ecx]
  406d81:	sahf   
  406d82:	retf   0x7035
  406d85:	adc    eax,DWORD PTR [edx-0xf82edcb]
  406d8b:	inc    esi
  406d8c:	inc    eax
  406d8d:	aad    0x67
  406d8f:	or     eax,0x7988502e
  406d94:	jae    0x406dd4
  406d96:	sub    ebp,ecx
  406d98:	xchg   DWORD PTR [edi+0x63],ebp
  406d9b:	lods   al,BYTE PTR ds:[esi]
  406d9c:	add    al,0x3f
  406d9e:	xchg   ebx,eax
  406d9f:	xor    bh,BYTE PTR [edx+0x4c679c58]
  406da5:	xor    BYTE PTR [edi+0x60],dh
  406da8:	jno    0x406d63
  406daa:	ret    
  406dab:	adc    eax,0xe5fee1fe
  406db0:	sbb    al,0x4f
  406db2:	xchg   esp,eax
  406db3:	sbb    edx,DWORD PTR [esp+eiz*4+0x5147cd4]
  406dba:	mov    ebx,0xa3559d55
  406dbf:	push   ss
  406dc0:	xchg   edx,eax
  406dc1:	rcl    DWORD PTR [edi],0x6e
  406dc4:	das    
  406dc5:	cmp    dl,BYTE PTR [ebp-0x5b3c0079]
  406dcb:	daa    
  406dcc:	or     BYTE PTR [ebx+0x53],bl
  406dcf:	leave  
  406dd0:	push   esp
  406dd1:	add    eax,0x893a676d
  406dd6:	repz (bad) 
  406dd8:	shl    bl,1
  406dda:	mov    edx,0xcd85bda2
  406ddf:	int    0x59
  406de1:	out    dx,al
  406de2:	mov    eax,edx
  406de4:	xor    al,ah
  406de6:	adc    eax,0x10b6b7bd
  406deb:	call   FWORD PTR [edi]
  406ded:	inc    eax
  406dee:	dec    esp
  406def:	ss enter 0xac8c,0x8c
  406df4:	mov    esp,DWORD PTR [ecx]
  406df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df7:	mov    esp,0x2d01d53e
  406dfc:	pushf  
  406dfd:	or     eax,0x7e1bd753
  406e02:	cmp    eax,0x5b7fcc34
  406e07:	nop
  406e08:	cmp    al,dh
  406e0a:	fs call 0xdbc0:0x45d0fbcc
  406e12:	adc    al,0x5f
  406e14:	in     al,0x41
  406e16:	lods   eax,DWORD PTR ds:[esi]
  406e17:	shl    BYTE PTR [ebp-0x5cde8bc7],1
  406e1d:	inc    edx
  406e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1f:	in     eax,0x40
  406e21:	(bad)  
  406e22:	dec    esp
  406e23:	add    ah,BYTE PTR [edx-0x5a]
  406e26:	outs   dx,DWORD PTR ds:[esi]
  406e27:	je     0x406da9
  406e29:	or     edi,DWORD PTR [esi]
  406e2b:	mov    ch,0x43
  406e2d:	mov    ah,0xe2
  406e2f:	(bad)  
  406e30:	add    edi,ebx
  406e32:	outs   dx,BYTE PTR ds:[esi]
  406e33:	or     BYTE PTR [ecx],dh
  406e35:	adc    ah,BYTE PTR [ebp-0x1adda878]
  406e3b:	in     al,0x9
  406e3d:	xchg   esi,eax
  406e3e:	xor    eax,0xaae5f2e2
  406e43:	pushf  
  406e44:	pushf  
  406e45:	cmp    ebx,DWORD PTR [esi]
  406e47:	cmp    esi,DWORD PTR [ecx+0x2b]
  406e4a:	aam    0xf2
  406e4c:	dec    eax
  406e4d:	inc    ebp
  406e4e:	push   edx
  406e4f:	popf   
  406e50:	jmp    0xe1d67fa3
  406e55:	leave  
  406e56:	js     0x406e19
  406e58:	iret   
  406e59:	retf   
  406e5a:	in     eax,0x0
  406e5c:	idiv   DWORD PTR [ebx-0x25]
  406e5f:	mov    ch,0x9d
  406e61:	loop   0x406def
  406e63:	sub    al,0xfd
  406e65:	jns    0x406e66
  406e67:	out    dx,eax
  406e68:	sbb    ebx,0xac28cd2a
  406e6e:	mov    ds:0xd447c849,al
  406e73:	popf   
  406e74:	lea    edi,[esi+ecx*8-0x53]
  406e78:	out    dx,eax
  406e79:	fstp   TBYTE PTR [edx+0x56]
  406e7c:	aam    0xdc
  406e7e:	mov    edi,0xaab000ec
  406e83:	jl     0x406e85
  406e85:	dec    edx
  406e86:	lds    ecx,FWORD PTR [edx+edi*8]
  406e89:	and    eax,0xb538241d
  406e8e:	iretw  
  406e90:	pop    ds
  406e91:	push   esp
  406e92:	(bad)  
  406e94:	sub    eax,0xb88fa29
  406e99:	jno    0x406e27
  406e9b:	sub    cl,BYTE PTR [eax]
  406e9d:	(bad)  
  406e9e:	and    al,0x1b
  406ea0:	int    0x3a
  406ea2:	dec    edi
  406ea3:	outs   dx,DWORD PTR ds:[esi]
  406ea4:	in     al,0x59
  406ea6:	loope  0x406e6f
  406ea8:	jmp    0x406f18
  406eaa:	stc    
  406eab:	ss out dx,al
  406ead:	leave  
  406eae:	add    al,0x6b
  406eb0:	sub    BYTE PTR [esi],bh
  406eb2:	cld    
  406eb3:	add    esi,ebx
  406eb5:	test   al,0x47
  406eb7:	das    
  406eb8:	push   es
  406eb9:	cmp    bh,dh
  406ebb:	aaa    
  406ebc:	and    BYTE PTR [esi],0xf1
  406ebf:	enter  0xe3a0,0xfb
  406ec3:	retf   
  406ec4:	xchg   esp,eax
  406ec5:	jmp    0xd922:0x44780db6
  406ecc:	sub    ebp,DWORD PTR [esp+eiz*4+0x295f0beb]
  406ed3:	mov    dl,0x9c
  406ed5:	inc    edi
  406ed6:	cdq    
  406ed7:	inc    edx
  406ed8:	mov    ds:0x1ce58d66,al
  406edd:	xchg   esi,eax
  406ede:	sbb    DWORD PTR [ecx+0x35],eax
  406ee1:	push   ebx
  406ee2:	push   ss
  406ee3:	inc    edi
  406ee4:	xlat   BYTE PTR ds:[ebx]
  406ee5:	jo     0x406ef6
  406ee7:	fwait
  406ee8:	xchg   ecx,eax
  406ee9:	out    0xa8,al
  406eeb:	aaa    
  406eec:	sahf   
  406eed:	(bad)  
  406eee:	aad    0xa1
  406ef0:	stc    
  406ef1:	adc    dl,BYTE PTR [ebx]
  406ef3:	jg     0x406e8b
  406ef5:	jl     0x406e99
  406ef7:	test   edx,ebx
  406ef9:	test   eax,0x208e5d93
  406efe:	xor    BYTE PTR [edx],dh
  406f00:	xchg   esp,eax
  406f01:	stc    
  406f02:	mov    ebp,0x2ef6a1b2
  406f07:	dec    ebx
  406f08:	loopne 0x406f5c
  406f0a:	adc    al,0xcf
  406f0c:	stos   DWORD PTR es:[edi],eax
  406f0d:	mov    ebx,0x58e988da
  406f12:	xchg   edi,eax
  406f13:	xchg   esp,eax
  406f14:	xor    eax,0x704351d9
  406f19:	scas   al,BYTE PTR es:[edi]
  406f1a:	dec    edi
  406f1b:	mov    DWORD PTR [eax+0x31],ebp
  406f1e:	adc    eax,0x46ab4e9f
  406f23:	loopne 0x406f19
  406f25:	jecxz  0x406f97
  406f27:	in     eax,0xa5
  406f29:	call   0x1793:0xa376305d
  406f30:	mov    ebp,0x4d7e6665
  406f35:	and    ecx,eax
  406f37:	xchg   edi,eax
  406f38:	jl     0x406f45
  406f3a:	jmp    0x406f79
  406f3c:	popa   
  406f3d:	scas   al,BYTE PTR es:[edi]
  406f3e:	pop    ds
  406f3f:	bound  esp,QWORD PTR ds:[eax+0x40c5af11]
  406f46:	loop   0x406f25
  406f48:	inc    ecx
  406f49:	mov    ah,0xc1
  406f4b:	xor    al,0xc8
  406f4d:	inc    ebp
  406f4e:	mov    bh,0x7
  406f50:	xchg   ebx,eax
  406f52:	dec    ebp
  406f53:	xchg   esi,eax
  406f54:	cmp    ebp,edx
  406f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f57:	push   ds
  406f58:	cmp    esp,esi
  406f5a:	sar    ebx,0x7a
  406f5d:	mov    ch,0x7
  406f5f:	jb     0x406efe
  406f61:	or     ah,BYTE PTR [esi+0x18]
  406f64:	add    DWORD PTR [ebx-0x5e4c1622],edx
  406f6a:	dec    esi
  406f6b:	hlt    
  406f6c:	mov    ds,ecx
  406f6e:	ins    DWORD PTR es:[edi],dx
  406f6f:	in     eax,0xd6
  406f71:	out    dx,al
  406f72:	retf   0xa99a
  406f75:	jbe    0x406f2c
  406f77:	inc    edi
  406f78:	xor    eax,DWORD PTR [ebp+0x615b7702]
  406f7e:	xchg   edx,eax
  406f7f:	and    ecx,DWORD PTR [edi+eiz*2-0x6817089b]
  406f86:	ret    0x65e6
  406f89:	and    DWORD PTR [eax+edx*1+0x70],edx
  406f8d:	inc    edx
  406f8e:	ins    DWORD PTR es:[edi],dx
  406f8f:	mov    ecx,0x30fd5468
  406f94:	retf   0x9629
  406f97:	inc    edx
  406f98:	adc    eax,0xaf711667
  406f9d:	fisttp DWORD PTR [edx+0x2c74db0b]
  406fa3:	sahf   
  406fa4:	jl     0x406fc6
  406fa6:	data16 sti 
  406fa8:	daa    
  406fa9:	mov    edi,0xf05e425b
  406fae:	xor    bl,ah
  406fb0:	retf   
  406fb1:	rcl    DWORD PTR [edi+0x6e],1
  406fb4:	int    0x86
  406fb6:	push   ds
  406fb7:	int    0x98
  406fb9:	xor    ebx,ebx
  406fbb:	int    0x1e
  406fbd:	sbb    al,0x77
  406fbf:	outs   dx,DWORD PTR ds:[esi]
  406fc1:	repz push ebp
  406fc3:	mov    eax,ds:0x63b7b079
  406fc8:	into   
  406fc9:	sahf   
  406fca:	test   eax,0x29a16bde
  406fcf:	scas   al,BYTE PTR es:[edi]
  406fd0:	idiv   BYTE PTR [eax-0x32aea666]
  406fd6:	out    dx,al
  406fd7:	test   DWORD PTR [esi+0x60],0x626c5388
  406fde:	dec    edi
  406fdf:	(bad)  
  406fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fe1:	out    dx,al
  406fe2:	retf   
  406fe3:	push   0xffffffc4
  406fe5:	fisttp QWORD PTR [bx-0x3938]
  406fea:	fiadd  DWORD PTR ds:0x4e88224a
  406ff0:	aaa    
  406ff1:	sub    DWORD PTR [esp+ebp*4+0x21cdacfb],ebp
  406ff8:	or     edx,edi
  406ffa:	fisttp QWORD PTR [eax+0x331ab5ab]
  407000:	loop   0x406ff0
  407002:	xchg   BYTE PTR [edi+0x3f],bh
  407005:	sub    esp,DWORD PTR [esi+0x7]
  407008:	inc    ebx
  407009:	mov    esp,0x6304f605
  40700e:	and    edi,edx
  407010:	or     al,0xf9
  407012:	(bad)  
  407013:	call   0x228a:0x9ea31e7d
  40701a:	out    0xa1,eax
  40701c:	mov    ecx,0x1cc2b4a9
  407021:	enter  0x8296,0x24
  407025:	imul   DWORD PTR [ecx-0x5d]
  407028:	aaa    
  407029:	xchg   esi,eax
  40702b:	lock (bad) 
  40702d:	icebp  
  40702e:	lahf   
  40702f:	mov    eax,ds:0x4fd52d91
  407034:	jl     0x406fe7
  407036:	sbb    al,0x32
  407038:	xor    cl,al
  40703a:	xor    esp,ebx
  40703c:	mov    ds:0xd35f3670,eax
  407041:	or     edi,DWORD PTR [edx+0x14]
  407044:	loopne 0x407069
  407046:	sub    esi,DWORD PTR [ecx+0x1ec42463]
  40704c:	dec    esi
  40704d:	retf   
  40704e:	ins    DWORD PTR es:[edi],dx
  40704f:	pop    edx
  407050:	add    ebp,DWORD PTR [ecx-0x3687ea57]
  407056:	addr16 xchg esi,eax
  407058:	push   ss
  407059:	pop    edx
  40705a:	(bad)  
  40705b:	lahf   
  40705c:	in     al,0xe5
  40705e:	in     al,dx
  40705f:	shl    DWORD PTR [eax+eiz*8+0x57e14fdc],1
  407066:	cmp    dl,bl
  407068:	sbb    al,0xb4
  40706a:	push   ds
  40706b:	jo     0x4070e7
  40706d:	and    eax,0x725cfecf
  407072:	inc    edi
  407073:	sbb    eax,0x57e8b6b5
  407078:	sub    al,0x2
  40707a:	inc    edx
  40707b:	das    
  40707c:	adc    al,0x1
  40707e:	mov    ch,BYTE PTR [edi]
  407080:	pop    ss
  407081:	push   es
  407082:	in     eax,dx
  407083:	push   eax
  407084:	and    BYTE PTR [edi-0x39],dl
  407087:	cs cwde 
  407089:	or     al,0x28
  40708b:	aad    0xec
  40708d:	(bad)  
  40708e:	rcl    BYTE PTR [edi+0x5d7096e4],1
  407094:	rcl    cl,cl
  407096:	mov    ecx,0x2ad5649e
  40709b:	xchg   esp,eax
  40709c:	stos   BYTE PTR es:[edi],al
  40709d:	pop    esp
  40709e:	lds    eax,FWORD PTR [edi]
  4070a0:	repz mov dl,0x83
  4070a3:	loop   0x4070b0
  4070a5:	loope  0x40703d
  4070a7:	mov    ebx,0x5be4fd66
  4070ac:	in     al,0xdd
  4070ae:	pusha  
  4070af:	cmc    
  4070b0:	add    edi,ebp
  4070b2:	dec    esi
  4070b3:	push   edi
  4070b4:	push   ss
  4070b5:	jne    0x4070a4
  4070b7:	dec    ebp
  4070b8:	stc    
  4070b9:	jbe    0x407067
  4070bb:	xor    esi,DWORD PTR [ebp-0x52]
  4070be:	inc    eax
  4070bf:	or     BYTE PTR [ebx+0x537afb3e],ch
  4070c5:	and    eax,0x3e2548e9
  4070ca:	jecxz  0x407089
  4070cc:	lods   al,BYTE PTR ds:[esi]
  4070cd:	fidiv  WORD PTR [edx]
  4070cf:	add    al,0xc4
  4070d1:	add    BYTE PTR [edx-0xb],dl
  4070d4:	add    al,0x3d
  4070d6:	push   eax
  4070d7:	cdq    
  4070d8:	imul   cl
  4070da:	cmp    eax,DWORD PTR [ecx]
  4070dc:	inc    ebx
  4070dd:	jge    0x407087
  4070df:	sub    BYTE PTR [ecx],0xd4
  4070e2:	nop
  4070e3:	cwde   
  4070e4:	dec    ecx
  4070e5:	lea    edi,[ebx-0x1dad2c0]
  4070eb:	push   esp
  4070ec:	xor    eax,0x50af06b8
  4070f1:	jb     0x40714e
  4070f3:	xor    eax,DWORD PTR [ebx-0xf472d62]
  4070f9:	and    eax,0xe0419fa5
  4070fe:	mov    dh,0x1e
  407100:	ret    0xfee2
  407103:	push   ebx
  407104:	pop    eax
  407105:	pop    edi
  407106:	popf   
  407107:	test   DWORD PTR [edi],ecx
  407109:	addr16 cs or eax,0x4a30d708
  407110:	mov    dl,0x8b
  407112:	shl    esi,0xe9
  407115:	lock nop
  407117:	adc    esi,DWORD PTR ds:0x65c9f65e
  40711d:	jmp    0x40711c
  40711f:	inc    ebx
  407120:	dec    eax
  407121:	dec    edi
  407122:	push   eax
  407123:	shl    dh,1
  407125:	inc    ebp
  407126:	sbb    ecx,DWORD PTR [edi+0x455cf666]
  40712c:	xchg   bh,ah
  40712e:	dec    edi
  40712f:	clc    
  407130:	adc    DWORD PTR [edx-0x598f3708],ebx
  407136:	loopne 0x407176
  407138:	mov    al,ds:0x9b2496fb
  40713d:	mov    edx,0x92e012cd
  407142:	cwde   
  407143:	mov    bh,0x1f
  407145:	test   al,0x37
  407147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407148:	inc    ebp
  407149:	push   edi
  40714a:	sub    al,0x95
  40714c:	mov    ds:0xbf29b946,al
  407151:	jmp    DWORD PTR [ecx]
  407153:	xchg   BYTE PTR [ebp+0x3099087d],al
  407159:	js     0x407126
  40715b:	xor    al,0x16
  40715d:	adc    BYTE PTR [edi+0x459ab39],0x7c
  407164:	jl     0x407171
  407166:	imul   edx,DWORD PTR [edi],0xb12a5456
  40716c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40716d:	rcr    eax,0xbc
  407170:	cmc    
  407171:	pushf  
  407172:	aaa    
  407173:	xor    al,dl
  407175:	jb     0x4071e7
  407177:	(bad)  
  407178:	leave  
  407179:	pop    esp
  40717a:	jmp    0x9e7e1e20
  40717f:	push   DWORD PTR [eax]
  407181:	sbb    BYTE PTR [ecx+eax*8],dl
  407184:	cdq    
  407185:	dec    edx
  407186:	mov    ds:0x21ba3d75,eax
  40718b:	inc    edx
  40718c:	retf   
  40718d:	inc    eax
  40718e:	xor    DWORD PTR [ecx],0xffffffd9
  407191:	sub    BYTE PTR [eax],cl
  407193:	popa   
  407194:	xchg   edx,eax
  407195:	ror    DWORD PTR [edi+0x4ce2d80f],cl
  40719b:	loope  0x4071c6
  40719d:	ins    BYTE PTR es:[edi],dx
  40719e:	fcomi  st,st(4)
  4071a0:	dec    eax
  4071a1:	mov    bl,0x91
  4071a3:	pop    edx
  4071a4:	dec    esi
  4071a5:	dec    ebp
  4071a6:	jmp    0xa095ed1a
  4071ab:	mov    dh,cl
  4071ad:	jl     0xd0f49cd9
  4071b3:	dec    edi
  4071b4:	ficomp WORD PTR [edi-0x46]
  4071b7:	pop    edi
  4071b8:	jno    0x40713b
  4071ba:	loop   0x4071eb
  4071bc:	sahf   
  4071bd:	xor    DWORD PTR [edi-0x28b9a041],0xcf3e53eb
  4071c7:	out    0x29,eax
  4071c9:	inc    eax
  4071ca:	shl    BYTE PTR [ecx],1
  4071cc:	test   ebx,ebp
  4071ce:	fst    QWORD PTR [esp+ebp*2-0x440eb949]
  4071d5:	mov    ah,0x62
  4071d7:	pop    bx
  4071d9:	ja     0x407169
  4071db:	adc    bl,ch
  4071dd:	fcom   DWORD PTR [edx-0x79d8115b]
  4071e3:	call   DWORD PTR [ecx]
  4071e5:	inc    esi
  4071e6:	int    0x92
  4071e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e9:	repnz cdq 
  4071eb:	push   es
  4071ec:	and    al,0x60
  4071ee:	dec    esi
  4071ef:	fbstp  TBYTE PTR [eax-0x52b6258a]
  4071f5:	mov    edi,0x2458f559
  4071fa:	mov    ah,0xc
  4071fc:	int3   
  4071fd:	pushf  
  4071fe:	xchg   edx,eax
  4071ff:	shl    DWORD PTR [eax],cl
  407201:	mov    bh,0x0
  407203:	fstp   TBYTE PTR [edx-0x4e]
  407206:	sub    ch,BYTE PTR [edx]
  407208:	add    edi,DWORD PTR [ebx]
  40720a:	push   ebx
  40720b:	xor    esp,DWORD PTR [ebx]
  40720d:	arpl   WORD PTR [esi+0x66],di
  407210:	out    0x4f,al
  407212:	std    
  407213:	add    bl,dl
  407215:	add    al,BYTE PTR [ebx]
  407217:	out    0x7b,al
  407219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40721a:	push   edx
  40721b:	int    0xc4
  40721d:	ja     0x407200
  40721f:	push   eax
  407220:	jp     0x4071f6
  407222:	pop    ds
  407223:	or     al,0x66
  407225:	jno    0x4071f2
  407227:	in     eax,0x1
  407229:	aam    0xf0
  40722b:	aad    0x2c
  40722d:	loope  0x407277
  40722f:	retf   
  407230:	lods   al,BYTE PTR ds:[esi]
  407231:	dec    edi
  407232:	cmc    
  407233:	adc    BYTE PTR [ebx],dh
  407235:	jle    0x4071f8
  407237:	imul   esp,DWORD PTR [ecx+esi*2-0x7a],0xffffff94
  40723c:	ret    
  40723d:	pop    eax
  40723e:	xor    edx,DWORD PTR [esi-0x6f564ae9]
  407244:	push   ecx
  407245:	pop    esp
  407246:	inc    esi
  407247:	add    eax,0x4fc26915
  40724c:	lock mov edi,0x3ac00998
  407252:	push   ss
  407253:	addr16 inc eax
  407255:	cwde   
  407256:	xchg   ecx,eax
  407257:	jmp    0x407221
  407259:	fnstsw WORD PTR ds:0x8b52cf1a
  40725f:	mov    dh,0xa5
  407261:	adc    ch,BYTE PTR [edx+edx*2-0x4c0e9464]
  407268:	cmp    cl,0x82
  40726b:	dec    ebx
  40726c:	cli    
  40726d:	cmp    eax,0xa3c353c
  407272:	mov    ds:0x16c4e24e,al
  407277:	mov    ds:0x1960afb0,eax
  40727c:	push   eax
  40727d:	leave  
  40727e:	scas   al,BYTE PTR es:[edi]
  40727f:	add    BYTE PTR [ebp+0x67],dl
  407282:	int    0xd4
  407284:	repz mov ebp,0x7f8777e5
  40728a:	js     0x4072c4
  40728c:	inc    edx
  40728d:	add    eax,0x4375423a
  407292:	push   0x8b848e1b
  407297:	lahf   
  407298:	xchg   DWORD PTR [edi-0x11a8e921],esi
  40729e:	adc    bh,al
  4072a0:	dec    edx
  4072a1:	or     DWORD PTR [edi],ebx
  4072a3:	aam    0x91
  4072a5:	mov    esi,0x84f613c6
  4072aa:	pop    ecx
  4072ab:	jbe    0x4072c4
  4072ad:	std    
  4072ae:	cdq    
  4072af:	fld    TBYTE PTR [edx]
  4072b1:	jg     0x4072fd
  4072b3:	inc    edi
  4072b4:	push   0x905a1672
  4072b9:	pop    ecx
  4072ba:	ja     0x407282
  4072bc:	and    BYTE PTR [ebx+0x4a3a440a],cl
  4072c2:	pop    esp
  4072c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c4:	test   al,0x74
  4072c6:	or     BYTE PTR [eax+ecx*1],bh
  4072c9:	adc    BYTE PTR [esi],dl
  4072cb:	fbld   TBYTE PTR [eax+0x6a31b2b9]
  4072d1:	push   ecx
  4072d2:	gs inc ebx
  4072d4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4072d6:	mov    ds:0xfd639893,eax
  4072db:	adc    al,0xfa
  4072dd:	xor    al,0x19
  4072df:	das    
  4072e0:	bound  ecx,QWORD PTR [eax]
  4072e2:	sbb    DWORD PTR [esi+0x38299f34],0xffffffda
  4072e9:	popf   
  4072ea:	mov    ds:0x48463683,al
  4072ef:	mov    cl,0x89
  4072f1:	arpl   WORD PTR [edx],si
  4072f3:	fsubr  QWORD PTR [esi-0x54]
  4072f6:	or     eax,DWORD PTR [ebp+0x19f452a]
  4072fc:	cmp    ah,al
  4072fe:	dec    ebp
  4072ff:	fxch   st(3)
  407301:	sub    al,0x6
  407303:	ins    BYTE PTR es:[edi],dx
  407304:	adc    eax,0x830f1ebe
  407309:	xor    eax,DWORD PTR [esi+0xbad4a02]
  40730f:	cs or  eax,0x894a2cac
  407315:	and    ebx,DWORD PTR [esi]
  407317:	out    dx,eax
  407318:	cmp    DWORD PTR [ebx+esi*1-0x282ccbe7],esp
  40731f:	or     al,0xec
  407321:	test   ah,al
  407323:	call   0xcd5a6cc5
  407328:	imul   ebx,DWORD PTR [ecx+0x60],0xf5196e5a
  40732f:	add    edx,eax
  407331:	loop   0x4072e9
  407333:	stos   DWORD PTR es:[edi],eax
  407334:	jge    0x4072b7
  407336:	aaa    
  407337:	cdq    
  407338:	in     al,dx
  407339:	nop
  40733a:	and    dh,BYTE PTR [esp+esi*8]
  40733d:	stc    
  40733e:	mov    dl,0xc4
  407340:	inc    edx
  407341:	les    esp,FWORD PTR [ebp+ebp*4+0x6866f04f]
  407348:	in     al,dx
  407349:	(bad)  
  40734a:	cmp    bl,bl
  40734c:	jb     0x40731b
  40734e:	int3   
  40734f:	bnd jbe 0x40737f
  407352:	xor    al,0xd6
  407354:	leave  
  407355:	leave  
  407356:	mov    edi,0xfd09d47a
  40735b:	(bad)
  40735e:	jno    0x407396
  407360:	fimul  WORD PTR [ebx]
  407362:	push   ebp
  407363:	pop    es
  407364:	gs out dx,eax
  407366:	xlat   BYTE PTR ds:[ebx]
  407367:	add    BYTE PTR [ecx+0x701089ad],cl
  40736d:	push   es
  40736e:	xor    esi,0x8075227a
  407374:	mov    al,0x5f
  407376:	and    ebx,DWORD PTR [ecx-0x3a]
  407379:	add    al,0xf2
  40737b:	sub    eax,0x1ae135d3
  407380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407381:	jb     0x407337
  407383:	es stos BYTE PTR es:[edi],al
  407385:	inc    ebp
  407386:	gs xchg ebp,eax
  407388:	test   DWORD PTR [esi],ecx
  40738a:	mov    ?,WORD PTR [ebp+0x5827d48d]
  407390:	xchg   ecx,eax
  407391:	xlat   BYTE PTR ds:[ebx]
  407392:	pop    esi
  407393:	retf   0x1119
  407396:	xchg   eax,ebp
  407398:	mov    eax,0x5da9f8a8
  40739d:	in     al,dx
  40739e:	cdq    
  40739f:	xor    ah,cl
  4073a1:	xor    al,0x82
  4073a3:	push   ss
  4073a4:	aam    0x89
  4073a6:	dec    edx
  4073a7:	xor    DWORD PTR [esi-0x44],0xa9c18396
  4073ae:	jno    0x40740a
  4073b0:	std    
  4073b1:	into   
  4073b2:	daa    
  4073b3:	jo     0x4073d6
  4073b5:	push   ebx
  4073b6:	or     al,0x90
  4073b8:	mov    eax,0x3073b47e
  4073bd:	arpl   WORD PTR [esi],si
  4073bf:	push   esi
  4073c0:	in     al,0x70
  4073c2:	add    esp,DWORD PTR [edx+0xcd11048]
  4073c8:	dec    esi
  4073c9:	mov    dh,0x90
  4073cb:	ins    BYTE PTR es:[edi],dx
  4073cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073cd:	adc    eax,0xb7360f99
  4073d2:	shr    BYTE PTR [esi-0x7e],1
  4073d5:	iret   
  4073d6:	xor    BYTE PTR [ecx+0x28],bl
  4073d9:	xor    dh,cl
  4073db:	dec    esi
  4073dc:	push   0xd521f324
  4073e1:	jbe    0x407445
  4073e3:	loope  0x407366
  4073e5:	(bad)
  4073e8:	xor    eax,0xe425e3fc
  4073ed:	xchg   edx,eax
  4073ee:	jb     0x4073f0
  4073f0:	jg     0x4073a3
  4073f2:	push   es
  4073f3:	mov    ebx,DWORD PTR [eax+0x7b]
  4073f6:	mov    eax,?
  4073f8:	clc    
  4073f9:	test   eax,0x1423e0cb
  4073fe:	add    al,0x9e
  407400:	lods   al,BYTE PTR ds:[esi]
  407401:	pop    ds
  407402:	icebp  
  407403:	jne    0x407425
  407405:	mov    bl,0x12
  407407:	pop    esp
  407408:	inc    eax
  407409:	pop    ebp
  40740a:	out    dx,al
  40740b:	jp     0x40739f
  40740d:	jp     0x40742b
  40740f:	std    
  407410:	jo     0x40740b
  407412:	mov    eax,ds:0xe6f250e
  407417:	and    DWORD PTR [eax-0x61c92a5a],esi
  40741d:	mov    ecx,0xfe716230
  407422:	push   cs
  407423:	les    ebx,FWORD PTR [edx+0x5a]
  407426:	push   esp
  407427:	repz and BYTE PTR [edi-0x26],0xc
  40742c:	ret    
  40742d:	mov    edx,DWORD PTR [ebx-0x67]
  407430:	jae    0x407473
  407432:	int    0xb5
  407434:	inc    esp
  407435:	and    BYTE PTR [ebx-0x3c11c26a],dl
  40743b:	xor    ebp,DWORD PTR [ecx]
  40743d:	inc    ecx
  40743e:	(bad)  
  40743f:	test   eax,0x5b45318
  407444:	or     edx,DWORD PTR [di+0x32]
  407448:	mov    dh,0xcf
  40744a:	das    
  40744b:	les    esi,FWORD PTR [edi]
  40744d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40744e:	imul   esp,DWORD PTR cs:[ebx],0x467481e3
  407455:	inc    edi
  407456:	ja     0x4074b1
  407458:	mov    DWORD PTR [eax-0x4e],edx
  40745b:	dec    esp
  40745c:	mov    cl,dh
  40745e:	xor    ah,BYTE PTR [edx+0x78261c73]
  407464:	shl    esp,0x9f
  407467:	and    esp,ebp
  407469:	imul   ecx,ecx,0x56
  40746c:	std    
  40746d:	xchg   esi,eax
  40746e:	jo     0x407465
  407470:	xor    eax,0x8be270b7
  407475:	mov    edi,0x7f8d7e1c
  40747a:	stos   BYTE PTR es:[edi],al
  40747b:	jnp    0x407417
  40747d:	lds    ebp,FWORD PTR [ebp-0x6a09994b]
  407483:	sbb    eax,DWORD PTR [ecx]
  407485:	cmp    bh,BYTE PTR [eax+eiz*4-0x6fd70888]
  40748c:	sub    DWORD PTR [edi-0x1a],edi
  40748f:	inc    esp
  407490:	mov    bh,0x3b
  407492:	push   0x44
  407494:	sti    
  407495:	xor    DWORD PTR [edx+0x4],edi
  407498:	sub    bl,al
  40749a:	out    dx,al
  40749b:	scas   eax,DWORD PTR es:[edi]
  40749c:	sub    al,0x1b
  40749e:	out    dx,al
  40749f:	xchg   DWORD PTR [esi+0x515b5d49],edx
  4074a5:	or     cl,dh
  4074a7:	dec    ebx
  4074a8:	adc    ch,BYTE PTR [edx]
  4074aa:	mov    bl,0xd4
  4074ac:	or     bl,ah
  4074ae:	inc    esp
  4074af:	pop    esp
  4074b0:	jb     0x407461
  4074b2:	ins    DWORD PTR es:[edi],dx
  4074b3:	dec    ecx
  4074b4:	sbb    esi,DWORD PTR [ebp+0x40e7e45b]
  4074ba:	inc    eax
  4074bb:	ins    DWORD PTR es:[edi],dx
  4074bc:	loopne 0x4074d9
  4074be:	or     eax,0xd1fbce3c
  4074c3:	ins    DWORD PTR es:[edi],dx
  4074c4:	sbb    eax,0x16429b35
  4074c9:	enter  0xbef9,0xe0
  4074cd:	lods   eax,DWORD PTR ds:[esi]
  4074ce:	scas   al,BYTE PTR es:[edi]
  4074cf:	lds    esp,FWORD PTR [eax]
  4074d1:	jmp    0x407513
  4074d3:	iret   
  4074d4:	int3   
  4074d5:	(bad)  
  4074d6:	iret   
  4074d7:	seta   BYTE PTR [edi+0x3538992]
  4074de:	mov    ecx,DWORD PTR [edi]
  4074e0:	xor    BYTE PTR [ebp-0x6b],bl
  4074e3:	retf   
  4074e4:	or     BYTE PTR [ebp-0x5b],0x97
  4074e8:	inc    edi
  4074e9:	pop    edx
  4074ea:	data16 mul BYTE PTR [eax+0x4a]
  4074ee:	dec    eax
  4074ef:	push   0xffffffa6
  4074f1:	js     0x407547
  4074f3:	push   cs
  4074f4:	jmp    0xd4ea:0xb0b91d78
  4074fb:	sbb    eax,0x41588e47
  407500:	rcl    edi,0x83
  407503:	xor    ch,dl
  407505:	cmp    eax,0x3e4a1943
  40750a:	push   eax
  40750b:	push   esi
  40750c:	out    dx,eax
  40750d:	or     esp,DWORD PTR [edi-0x18]
  407510:	and    ah,bl
  407512:	mov    eax,ds:0x47892686
  407517:	xchg   edx,eax
  407518:	dec    ebp
  407519:	xor    DWORD PTR [edx-0x4490c314],edi
  40751f:	int    0xa9
  407521:	mov    ebp,0xe7e97693
  407526:	popa   
  407527:	or     ah,ah
  407529:	stos   BYTE PTR es:[edi],al
  40752a:	inc    ebx
  40752b:	xchg   esi,eax
  40752c:	pusha  
  40752d:	imul   edi,eax,0x5
  407530:	ds pop ss
  407532:	loope  0x40755c
  407534:	lods   eax,DWORD PTR ds:[esi]
  407535:	enter  0xa793,0xec
  407539:	mov    bh,0xb5
  40753b:	mov    edi,0x3c2abc2a
  407540:	scas   al,BYTE PTR es:[edi]
  407541:	sahf   
  407542:	mov    eax,ds:0x8a72d493
  407547:	loopne 0x4075a1
  407549:	xor    al,0x8d
  40754b:	push   0xb53b458f
  407550:	cwde   
  407551:	mov    edi,0xd969133f
  407556:	mov    BYTE PTR [ebx+0x6],ch
  407559:	jbe    0x407543
  40755b:	bound  eax,QWORD PTR [edx+0x64c1b22c]
  407561:	xchg   sp,ax
  407563:	cdq    
  407564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407565:	mov    esi,0xf4121751
  40756a:	arpl   WORD PTR [edi+0x47],bp
  40756d:	jb     0x407596
  40756f:	push   ds
  407570:	and    ah,BYTE PTR [edx]
  407572:	das    
  407573:	mov    esi,0xe4847894
  407578:	xor    al,0xa7
  40757a:	lock sub ecx,eax
  40757d:	je     0x40757e
  40757f:	adc    eax,0xb2540d3
  407584:	retf   0x285c
  407587:	jg     0x407607
  407589:	xchg   ecx,eax
  40758a:	fmul   QWORD PTR [edx+0x4f]
  40758d:	loop   0x40759a
  40758f:	jp     0x4075a8
  407591:	jl     0x4075bf
  407593:	faddp  st(1),st
  407595:	push   esp
  407596:	push   esp
  407597:	pop    ecx
  407598:	pop    edx
  407599:	(bad)  
  40759a:	mov    ch,0x6
  40759c:	mov    ss,WORD PTR [ebp+0x2c]
  40759f:	lea    esi,[edx]
  4075a1:	sbb    DWORD PTR [eax],eax
  4075a3:	fwait
  4075a4:	mov    esi,0x7e7d57f2
  4075a9:	sub    ah,BYTE PTR [esi+ebp*2+0x77def3e7]
  4075b0:	mov    DWORD PTR [eax-0x27],ebx
  4075b3:	push   ecx
  4075b4:	push   ds
  4075b5:	dec    edx
  4075b6:	aad    0xff
  4075b8:	pop    ebp
  4075b9:	mov    BYTE PTR es:[edi-0x74c0a3e0],bl
  4075c0:	out    0x81,eax
  4075c2:	jl     0x407597
  4075c4:	and    eax,0x8cb644eb
  4075c9:	aas    
  4075ca:	dec    edi
  4075cb:	clc    
  4075cc:	popa   
  4075cd:	add    ch,dh
  4075cf:	shl    BYTE PTR [ebx],1
  4075d1:	pop    esp
  4075d2:	sub    dh,BYTE PTR [edx+0x10]
  4075d5:	jns    0x4075ef
  4075d7:	dec    esp
  4075d8:	mov    ch,0x6a
  4075da:	add    eax,0x2539610c
  4075df:	popf   
  4075e0:	loope  0x40761e
  4075e2:	outs   dx,BYTE PTR ds:[esi]
  4075e3:	cmc    
  4075e4:	mov    WORD PTR [edx],ds
  4075e6:	lock sbb BYTE PTR [edi],bh
  4075e9:	icebp  
  4075ea:	or     esi,edi
  4075ec:	adc    al,0x48
  4075ee:	inc    esp
  4075ef:	sbb    dl,al
  4075f1:	imul   ebp,DWORD PTR [esi+0x61fc6b55],0x7ce99f5a
  4075fb:	sbb    dl,BYTE PTR [ecx+0x2c]
  4075fe:	dec    ecx
  4075ff:	add    ecx,DWORD PTR [eax-0x10]
  407602:	loope  0x407596
  407604:	lahf   
  407605:	(bad)  
  407606:	fisttp WORD PTR [ecx]
  407608:	addr16 sub eax,0x9516dfd9
  40760e:	pusha  
  40760f:	lock fwait
  407611:	and    edx,edi
  407613:	add    ah,BYTE PTR [esi+esi*2-0x411c40ff]
  40761a:	pop    ebx
  40761b:	cmc    
  40761c:	(bad)  
  40761d:	lahf   
  40761e:	inc    edx
  40761f:	xor    ebx,DWORD PTR ds:0x5aa84ba8
  407625:	sub    BYTE PTR [edx-0x3a],0x66
  407629:	call   0xee84260b
  40762e:	adc    ecx,DWORD PTR ds:0x81d49f0b
  407634:	lds    esp,FWORD PTR [esi]
  407636:	push   ebx
  407637:	ins    DWORD PTR es:[edi],dx
  407638:	mov    al,ds:0xefd1318a
  40763d:	cli    
  40763e:	adc    esp,DWORD PTR [edi-0x1521756b]
  407644:	or     bh,dl
  407646:	xchg   ecx,eax
  407647:	stos   DWORD PTR es:[edi],eax
  407648:	(bad)  
  40764a:	jg     0x40766b
  40764c:	xchg   ebx,eax
  40764d:	lods   al,BYTE PTR ds:[esi]
  40764e:	fadd   DWORD PTR [edi+0x12]
  407651:	xor    ebp,DWORD PTR [edi-0x6e]
  407654:	les    edi,FWORD PTR [esp+ebp*1+0x5c5a3ed4]
  40765b:	shr    BYTE PTR ds:0xefb99b7b,0xe3
  407662:	jns    0x4076c3
  407664:	ret    0x3725
  407667:	jns    0x40766a
  407669:	jne    0x407600
  40766b:	fdiv   DWORD PTR [eax+0x4e]
  40766e:	cs loope 0x40765c
  407671:	idiv   DWORD PTR [ebx+0x20]
  407674:	fld    st(1)
  407676:	and    dh,BYTE PTR [ebx-0x3f]
  407679:	mov    bh,0x95
  40767b:	mov    ecx,0xe3d5226d
  407680:	add    eax,0x1ab339bb
  407685:	dec    esi
  407686:	jmp    0x40761b
  407688:	out    dx,eax
  407689:	test   DWORD PTR [esi+0x70],esp
  40768c:	pop    ss
  40768d:	dec    ebx
  40768e:	stos   DWORD PTR es:[edi],eax
  40768f:	dec    esi
  407690:	jmp    0xa089:0x3e39be4f
  407697:	jo     0x407633
  407699:	jge    0x4076df
  40769b:	(bad)  
  40769c:	es push ecx
  40769e:	pop    esp
  40769f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4076a1:	lahf   
  4076a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a3:	mov    bl,0x7e
  4076a5:	push   ebp
  4076a6:	daa    
  4076a7:	pop    ss
  4076a8:	leave  
  4076a9:	test   al,0x3c
  4076ab:	mov    ah,0x6f
  4076ad:	cmp    eax,0xc5568027
  4076b2:	jo     0x407646
  4076b4:	inc    esi
  4076b5:	jmp    0x55ff:0x4fad3aa2
  4076bc:	cld    
  4076bd:	test   al,0xb9
  4076bf:	pop    ebp
  4076c0:	jp     0x4076e1
  4076c2:	pop    eax
  4076c3:	pusha  
  4076c4:	gs mov edx,0x5b318234
  4076ca:	jp     0x40770d
  4076cc:	cs push edi
  4076ce:	fwait
  4076cf:	es pop eax
  4076d1:	and    DWORD PTR [ebp-0x20],eax
  4076d4:	mov    es,WORD PTR [eax+eiz*1]
  4076d7:	adc    eax,0x5ebf2ab5
  4076dc:	repz std 
  4076de:	loope  0x40772f
  4076e0:	and    BYTE PTR [esp+edi*8-0x176835cd],al
  4076e7:	scas   al,BYTE PTR es:[edi]
  4076e8:	jbe    0x407702
  4076ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076eb:	fsubr  QWORD PTR [edi]
  4076ed:	mov    cl,0xe2
  4076ef:	jnp    0x4076d4
  4076f1:	and    esp,DWORD PTR ds:0x97c0b92d
  4076f7:	not    DWORD PTR [esi]
  4076f9:	jp     0x4076c8
  4076fb:	inc    eax
  4076fc:	out    dx,al
  4076fd:	sbb    bl,BYTE PTR [eax+0x3474e615]
  407703:	push   cs
  407704:	mov    al,ds:0x3edea8f5
  407709:	push   ebp
  40770a:	mov    dl,0xaa
  40770c:	mov    ebx,edx
  40770e:	pop    ds
  40770f:	jmp    0x724ceace
  407714:	and    eax,0xa0662c93
  407719:	jecxz  0x40770e
  40771b:	and    DWORD PTR [edi-0x1a89996e],ecx
  407721:	retf   
  407722:	pop    esp
  407723:	adc    edi,DWORD PTR [ebp+0xfe25642]
  407729:	lock daa 
  40772b:	mov    ecx,0xdf34bd71
  407730:	dec    esp
  407731:	(bad)  
  407732:	inc    BYTE PTR [eax-0x2c]
  407735:	jmp    0x693c:0xb124aa47
  40773c:	fwait
  40773d:	sahf   
  40773e:	mov    edi,0x4553be8c
  407743:	inc    edi
  407744:	xlat   BYTE PTR ds:[ebx]
  407745:	add    dl,BYTE PTR [edi]
  407747:	cmp    dl,cl
  407749:	mov    ecx,DWORD PTR [esi-0x5bd7e619]
  40774f:	mov    eax,0xec727691
  407754:	or     dl,BYTE PTR [edi+0x50]
  407757:	mov    esp,0xc58969b
  40775c:	add    al,0x6
  40775e:	jnp    0x4076f4
  407760:	push   0xedbeb6c7
  407765:	(bad)
  407769:	jo     0x4076ee
  40776b:	idiv   bh
  40776d:	dec    esp
  40776e:	inc    edx
  40776f:	(bad)  
  407770:	cdq    
  407771:	nop
  407772:	imul   eax,DWORD PTR [eax-0x30],0x56
  407776:	sub    DWORD PTR [ebp+0x18916239],0xffffffdc
  40777d:	push   0x7676e8d7
  407782:	adc    al,al
  407784:	dec    esp
  407785:	adc    BYTE PTR [edx-0x1e],al
  407788:	inc    edi
  407789:	pushf  
  40778a:	cmp    dl,BYTE PTR [esp+esi*2+0x7d]
  40778e:	add    ecx,DWORD PTR fs:[ecx+0x28204b2]
  407795:	sbb    ah,BYTE PTR [edx+0x231dbcc5]
  40779b:	(bad)  
  40779c:	(bad)  
  40779e:	out    0x78,al
  4077a0:	mov    eax,0x9861c386
  4077a5:	pusha  
  4077a6:	dec    ebx
  4077a7:	or     DWORD PTR [edx+ebp*2-0x21],edi
  4077ab:	sub    al,BYTE PTR [edi-0x59]
  4077ae:	test   BYTE PTR [edx+0x52],dl
  4077b1:	xchg   ebx,eax
  4077b2:	xor    DWORD PTR [ebx+0x48],ecx
  4077b5:	and    eax,0x8b38c1eb
  4077ba:	mov    bl,0x2d
  4077bc:	push   edx
  4077bd:	ins    DWORD PTR es:[edi],dx
  4077be:	aam    0x1a
  4077c0:	mov    WORD PTR [edx+edx*4-0x6c],ss
  4077c4:	xchg   edx,eax
  4077c5:	loope  0x40781b
  4077c7:	fstp   TBYTE PTR ds:0x2bad0fe7
  4077cd:	test   BYTE PTR [esi],cl
  4077cf:	std    
  4077d0:	xor    DWORD PTR [ecx+ecx*1-0x69632da3],edi
  4077d7:	arpl   dx,si
  4077d9:	dec    ebp
  4077da:	xchg   esi,edi
  4077dc:	lahf   
  4077dd:	mov    ebx,0x63ae1c89
  4077e2:	adc    DWORD PTR [ebp-0x57],ecx
  4077e5:	aad    0xe2
  4077e7:	sub    al,0x82
  4077e9:	mov    BYTE PTR [ebp+0x36ba90b2],dl
  4077ef:	push   ebx
  4077f0:	test   al,0xa0
  4077f2:	xor    al,0xda
  4077f4:	cmp    ebp,eax
  4077f6:	in     al,0xed
  4077f8:	lods   al,BYTE PTR ds:[esi]
  4077f9:	out    dx,al
  4077fa:	popa   
  4077fb:	clc    
  4077fc:	enter  0xbda0,0xa3
  407800:	dec    ebx
  407801:	jnp    0x40782d
  407803:	sbb    BYTE PTR [esi+0x5f],ch
  407806:	sti    
  407807:	das    
  407808:	aas    
  407809:	sbb    dl,BYTE PTR [ebp-0x33]
  40780c:	fcom   DWORD PTR [esi-0x55]
  40780f:	out    dx,eax
  407810:	xlat   BYTE PTR ds:[ebx]
  407811:	adc    dl,al
  407813:	out    0x97,eax
  407815:	fist   DWORD PTR [ecx-0x10c9d70c]
  40781b:	push   0x525c014a
  407820:	repnz push esp
  407822:	sub    al,0xe2
  407824:	scas   eax,DWORD PTR es:[edi]
  407825:	imul   ecx,DWORD PTR [edi-0x3142f69a],0xc0e77820
  40782f:	aad    0x21
  407831:	imul   eax,DWORD PTR [ebp-0x284a7fb8],0x76327b29
  40783b:	clc    
  40783c:	cdq    
  40783d:	test   BYTE PTR [edx],al
  40783f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407840:	imul   eax,DWORD PTR [edi-0x2042619f],0x19f02278
  40784a:	and    DWORD PTR [eax+0x1e],ecx
  40784d:	mov    ebp,0xd1d93adc
  407852:	pop    ecx
  407853:	jmp    0xa6ac:0xd78fbda1
  40785a:	sub    BYTE PTR [edx],ah
  40785c:	sti    
  40785d:	jp     0x407809
  40785f:	jb     0x40788a
  407861:	inc    esp
  407862:	jno    0x40786e
  407864:	xor    al,0xad
  407866:	jnp    0x4078a3
  407868:	out    dx,al
  407869:	aam    0xb3
  40786b:	mov    ecx,0x1bd7ee3a
  407870:	ins    BYTE PTR es:[edi],dx
  407871:	enter  0xde3,0x24
  407875:	jnp    0x407859
  407877:	mov    al,0x81
  407879:	into   
  40787a:	(bad)  
  40787b:	ficom  DWORD PTR [edi+0x700a2b50]
  407881:	out    0x1f,al
  407883:	push   0xffffff98
  407885:	mov    dl,0xb3
  407887:	daa    
  407888:	fst    DWORD PTR [eax]
  40788a:	bound  ebp,QWORD PTR [eax]
  40788c:	and    al,0xea
  40788e:	stos   DWORD PTR es:[edi],eax
  40788f:	push   0xffffffa5
  407891:	in     eax,dx
  407892:	xor    ch,BYTE PTR [eax+0x73]
  407895:	lea    esp,[esi]
  407897:	add    al,BYTE PTR [esi-0x762d4e27]
  40789d:	mov    ah,0x37
  40789f:	xchg   ebp,eax
  4078a0:	loop   0x407827
  4078a2:	mov    ds:0xa8785917,al
  4078a7:	jns    0x407855
  4078a9:	dec    edx
  4078aa:	and    eax,0xa03e7a19
  4078af:	xchg   DWORD PTR [eax+0x4989895b],edi
  4078b5:	das    
  4078b6:	ins    DWORD PTR es:[edi],dx
  4078b7:	add    BYTE PTR [edi-0x4d0655eb],bl
  4078bd:	and    eax,DWORD PTR [ecx-0x66f3dc0e]
  4078c3:	lods   al,BYTE PTR ds:[esi]
  4078c4:	pop    es
  4078c5:	cld    
  4078c6:	inc    edx
  4078c7:	pop    ebx
  4078c8:	int    0x80
  4078ca:	daa    
  4078cb:	test   BYTE PTR [edx-0x544ad6d4],cl
  4078d1:	pop    eax
  4078d2:	xor    bl,BYTE PTR [edi-0x489ac4a8]
  4078d8:	jae    0x407957
  4078da:	cmp    al,0x78
  4078dc:	ret    
  4078dd:	not    DWORD PTR ds:0x22d1fe79
  4078e3:	or     eax,0x8abd61e1
  4078e8:	jmp    0x4078be
  4078ea:	mov    esp,0x999c8bcc
  4078ef:	and    dh,BYTE PTR [eax+0x38]
  4078f2:	push   ebp
  4078f3:	loop   0x4078eb
  4078f5:	adc    dh,ch
  4078f7:	call   0xec02551b
  4078fc:	mov    ds,WORD PTR [ecx+0x30]
  4078ff:	push   cs
  407900:	ins    DWORD PTR es:[edi],dx
  407901:	leave  
  407902:	outs   dx,DWORD PTR ds:[esi]
  407903:	mov    eax,0xf40d8798
  407908:	inc    esp
  407909:	mov    ecx,0x8d598fd4
  40790e:	pushf  
  40790f:	daa    
  407910:	das    
  407911:	leave  
  407912:	(bad)
  407915:	cmc    
  407916:	sbb    dh,BYTE PTR [eax+edi*8]
  407919:	bound  ecx,QWORD PTR [ebp+0x6a98fce5]
  40791f:	xor    edx,esi
  407921:	add    ch,bh
  407923:	data16 mov ds:0x65c926aa,al
  407929:	dec    ebx
  40792a:	and    ebx,eax
  40792c:	add    BYTE PTR [esi-0x6f6a8701],ah
  407932:	shl    ah,0x9a
  407935:	out    dx,al
  407936:	jo     0x407912
  407938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407939:	mov    BYTE PTR [ebp+0x773028ae],dh
  40793f:	stos   DWORD PTR es:[edi],eax
  407940:	aam    0xf9
  407942:	pop    es
  407943:	pop    ds
  407944:	and    WORD PTR [edi+0x1cd5da01],sp
  40794b:	sbb    ebx,eax
  40794d:	test   BYTE PTR [esi-0x47],dh
  407950:	std    
  407951:	xchg   esp,eax
  407952:	dec    edi
  407953:	or     DWORD PTR [edx-0x6093d8b2],ebp
  407959:	mov    BYTE PTR [ecx],ch
  40795b:	fistp  WORD PTR [ecx-0x5e]
  40795e:	pop    es
  40795f:	jmp    0xf215186f
  407964:	push   ebp
  407965:	sbb    esp,ebp
  407967:	sar    DWORD PTR [edi-0x19dc0980],1
  40796d:	pop    es
  40796e:	cwde   
  40796f:	sbb    BYTE PTR [ebx],bl
  407971:	cs adc al,0x3c
  407974:	jne    0x407941
  407976:	aaa    
  407977:	push   edx
  407978:	pop    eax
  407979:	sbb    BYTE PTR [esi-0x227a5c75],0x34
  407980:	das    
  407981:	pop    ds
  407982:	(bad)  [ecx]
  407984:	jb     0x4079d8
  407986:	repnz fisttp DWORD PTR ss:[eax+0x55]
  40798b:	loop   0x407952
  40798d:	pop    esi
  40798e:	popa   
  40798f:	sbb    ebp,ebp
  407991:	rol    BYTE PTR [esi],cl
  407993:	xchg   esi,eax
  407994:	mov    WORD PTR [edi-0x22eec1f5],es
  40799a:	mov    edx,0x2852cd9f
  40799f:	imul   ebx
  4079a1:	les    edx,FWORD PTR [edx-0x25b73b9]
  4079a7:	loope  0x40795f
  4079a9:	push   esi
  4079ab:	mov    dh,0x91
  4079ad:	or     bl,BYTE PTR [eax-0x3a1e4c4b]
  4079b3:	xor    BYTE PTR [ebx+0x43179b04],0xe2
  4079ba:	jp     0x4079f6
  4079bc:	or     al,0xee
  4079be:	into   
  4079bf:	jb     0x407a05
  4079c1:	push   0xa7a838fe
  4079c6:	xchg   esi,eax
  4079c7:	push   eax
  4079c8:	nop
  4079c9:	les    ecx,FWORD PTR ds:0x2bfdb8d3
  4079cf:	int3   
  4079d0:	pinsrw mm4,WORD PTR [ecx],0x20
  4079d4:	enter  0xafcf,0xe2
  4079d8:	pop    ebx
  4079d9:	ficomp WORD PTR [ecx]
  4079db:	xchg   ecx,eax
  4079dc:	inc    eax
  4079dd:	push   es
  4079de:	mov    ch,0x7d
  4079e0:	int    0x28
  4079e2:	pop    eax
  4079e3:	test   DWORD PTR [edi-0x3e],edx
  4079e6:	fisttp DWORD PTR [ebp-0x6f]
  4079e9:	pop    ds
  4079ea:	push   ebx
  4079eb:	int3   
  4079ec:	repz sub esp,DWORD PTR [edi-0x51]
  4079f0:	dec    ecx
  4079f1:	loop   0x407a64
  4079f3:	cmc    
  4079f4:	test   DWORD PTR [esi+esi*2],ecx
  4079f7:	into   
  4079f8:	pop    ebx
  4079f9:	cli    
  4079fa:	out    dx,eax
  4079fb:	mov    ?,WORD PTR [edx-0x3e3a11a0]
  407a01:	repnz adc al,0xe1
  407a04:	jbe    0x407a44
  407a06:	ror    DWORD PTR [ebx+0x506f7e7e],cl
  407a0c:	push   0x47a2a012
  407a11:	ds mov ch,0x47
  407a14:	or     DWORD PTR ds:0x3c2a5a3a,esi
  407a1a:	in     eax,0x16
  407a1c:	mov    DWORD PTR [esi+eiz*4],ebx
  407a1f:	ins    DWORD PTR es:[edi],dx
  407a20:	push   ebp
  407a21:	pop    esp
  407a22:	pop    ds
  407a23:	in     al,0x5a
  407a25:	call   0x2cf83d7a
  407a2a:	sub    ebp,edx
  407a2c:	or     al,0xdb
  407a2e:	add    eax,0xc34ac085
  407a33:	inc    ecx
  407a34:	dec    ecx
  407a35:	fidiv  DWORD PTR [edx+0x35561e38]
  407a3b:	jge    0x407a80
  407a3d:	ffreep st(7)
  407a3f:	mov    ?,WORD PTR [edi+edi*4+0x368d157b]
  407a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a47:	push   esp
  407a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a49:	jae    0x407a4f
  407a4b:	mov    edx,0x3d13f8c7
  407a50:	les    esp,FWORD PTR [eax+0x6eb350a1]
  407a56:	out    0xae,eax
  407a58:	es gs dec ecx
  407a5b:	iret   
  407a5c:	inc    edi
  407a5d:	adc    eax,0x11422a56
  407a62:	out    dx,eax
  407a63:	das    
  407a64:	enter  0xa02f,0x5
  407a68:	inc    esp
  407a69:	mov    edi,0x2076b52e
  407a6e:	ja     0x407a23
  407a70:	xor    ch,cl
  407a72:	(bad)  
  407a73:	or     eax,0x5017c6ca
  407a78:	or     ebx,DWORD PTR [edx-0x6e29d2a1]
  407a7e:	sbb    eax,0x6e7ef3be
  407a83:	push   0x4207aa71
  407a88:	jge    0x407a86
  407a8a:	mov    dh,0xc0
  407a8c:	inc    ebp
  407a8d:	sub    ebx,edx
  407a8f:	ss mov edx,0x9cff3bd0
  407a95:	bound  esi,QWORD PTR [ebx-0x457ec42b]
  407a9b:	fiadd  WORD PTR [ebp-0x59d55395]
  407aa1:	stos   BYTE PTR es:[edi],al
  407aa2:	lods   eax,DWORD PTR ds:[esi]
  407aa3:	and    BYTE PTR [eax],dh
  407aa5:	push   eax
  407aa6:	xor    DWORD PTR [edx],eax
  407aa8:	and    edx,ebx
  407aaa:	cmc    
  407aab:	mov    ds:0xfb24f5ae,al
  407ab0:	sub    al,0xdd
  407ab2:	fiadd  DWORD PTR [ecx]
  407ab4:	das    
  407ab5:	int3   
  407ab6:	ss inc esp
  407ab8:	sub    dl,dh
  407aba:	ds push ebp
  407abc:	jmp    0x298e:0xa7c4ee86
  407ac3:	ja     0x407abf
  407ac5:	arpl   WORD PTR [ebp-0x4540c26a],bp
  407acb:	ins    DWORD PTR es:[edi],dx
  407acc:	sbb    esp,ebx
  407ace:	test   esp,ecx
  407ad0:	out    0xf5,al
  407ad2:	leave  
  407ad3:	fstp   st(0)
  407ad5:	ret    
  407ad6:	cmp    al,0xee
  407ad8:	mov    esi,0x5460c2f2
  407add:	ins    DWORD PTR es:[edi],dx
  407ade:	adc    ecx,0xffffffe9
  407ae1:	inc    BYTE PTR [esi-0x24]
  407ae4:	dec    esi
  407ae5:	dec    ebx
  407ae6:	jno    0x407b64
  407ae8:	ins    DWORD PTR es:[edi],dx
  407ae9:	xchg   DWORD PTR [edx-0x12],edx
  407aec:	mov    bh,0x7c
  407aee:	or     al,0x62
  407af0:	test   DWORD PTR [ecx+eax*8],edx
  407af3:	imul   edx,DWORD PTR [edx],0x474af51a
  407af9:	xor    DWORD PTR [ebx],eax
  407afb:	mov    eax,ds:0xb599f717
  407b00:	ins    BYTE PTR es:[edi],dx
  407b01:	lods   eax,DWORD PTR ds:[esi]
  407b02:	scas   eax,DWORD PTR es:[edi]
  407b03:	push   cs
  407b04:	rol    BYTE PTR [ecx],1
  407b06:	repz out 0x38,eax
  407b09:	mov    bl,0x66
  407b0b:	rcl    DWORD PTR [ebx+0x5cb3d83a],1
  407b11:	jp     0x407af8
  407b13:	push   ebx
  407b14:	xor    BYTE PTR [ecx+0x10],al
  407b17:	or     ebp,DWORD PTR [ecx-0x4d]
  407b1a:	pop    esp
  407b1b:	sbb    al,0xd1
  407b1d:	cmp    ebp,esp
  407b1f:	dec    ebx
  407b20:	and    BYTE PTR [edx-0x770cfe28],ch
  407b26:	jmp    0x596:0x9686b626
  407b2d:	ficomp DWORD PTR [edi]
  407b2f:	test   eax,0x1e356aa0
  407b34:	es xchg ecx,eax
  407b36:	int    0x38
  407b38:	push   ebx
  407b39:	dec    ebp
  407b3a:	xor    edx,edi
  407b3c:	imul   ebx,DWORD PTR [edi],0x26343d7b
  407b42:	aad    0xdf
  407b44:	xchg   edx,eax
  407b45:	xlat   BYTE PTR ds:[ebx]
  407b46:	cmp    al,0x24
  407b48:	test   al,0xd8
  407b4a:	add    DWORD PTR [edx+ecx*1+0x23],0x64cb72cd
  407b52:	lods   al,BYTE PTR ds:[esi]
  407b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b54:	sub    ch,BYTE PTR [esi-0x4674c21a]
  407b5a:	adc    BYTE PTR [eax+ecx*2],ch
  407b5d:	sub    eax,0x5451e61b
  407b62:	push   esi
  407b63:	mov    dl,0x1b
  407b65:	xor    bh,ch
  407b67:	adc    esp,DWORD PTR [esi-0x16]
  407b6a:	(bad)  
  407b6b:	into   
  407b6c:	mov    cl,BYTE PTR ds:0x6469f259
  407b72:	loopne 0x407b01
  407b74:	mov    al,0xa0
  407b76:	pop    ss
  407b77:	push   ds
  407b78:	popf   
  407b79:	or     ebx,DWORD PTR [ecx]
  407b7b:	push   es
  407b7c:	rcr    ebx,cl
  407b7e:	outs   dx,BYTE PTR ds:[esi]
  407b7f:	dec    edx
  407b80:	sahf   
  407b81:	or     ch,bh
  407b83:	xchg   DWORD PTR ds:[eax+0x40],edi
  407b87:	jmp    0x407b1e
  407b89:	cmp    eax,0xc0ce8e80
  407b8e:	or     bl,BYTE PTR [ebp+0x5142d128]
  407b94:	jg     0x407b6d
  407b96:	sbb    ch,ch
  407b98:	loopne 0x407b40
  407b9a:	dec    edi
  407b9b:	sub    ebp,DWORD PTR [ebp-0x26]
  407b9e:	dec    edi
  407b9f:	mov    esp,gs
  407ba1:	adc    ecx,DWORD PTR [edx+0x1aa0b41b]
  407ba7:	add    cl,dl
  407ba9:	arpl   WORD PTR [edx+0x51cacd9b],ax
  407baf:	push   0x8bb5c905
  407bb4:	out    dx,eax
  407bb5:	std    
  407bb6:	and    ebx,ebx
  407bb8:	inc    ebx
  407bb9:	xchg   edi,eax
  407bba:	push   0x52
  407bbc:	lods   al,BYTE PTR ds:[esi]
  407bbd:	adc    eax,0xe889332b
  407bc2:	push   edx
  407bc3:	ja     0x407bdf
  407bc5:	aad    0x15
  407bc7:	shl    BYTE PTR [edx],1
  407bc9:	and    ebx,DWORD PTR [ebx-0x18e2ba1b]
  407bcf:	push   ebp
  407bd0:	add    bh,BYTE PTR [edx-0x515897a9]
  407bd6:	dec    eax
  407bd7:	shl    BYTE PTR [edx+0x1f26ffc0],cl
  407bdd:	jecxz  0x407c57
  407bdf:	mov    bl,0x42
  407be1:	push   ds
  407be2:	loope  0x407c41
  407be4:	push   cs
  407be5:	(bad)  
  407be6:	stc    
  407be7:	out    dx,al
  407be8:	frstor [eax-0x9]
  407beb:	sbb    DWORD PTR [esi-0x608a17ad],esp
  407bf1:	popf   
  407bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf3:	mov    edi,0xe6c5baf4
  407bf8:	in     al,dx
  407bf9:	mov    ds:0x21dad793,al
  407bfe:	and    esi,DWORD PTR [ebx-0x685e1f91]
  407c04:	push   esp
  407c05:	dec    ebx
  407c06:	mov    ch,0x1c
  407c08:	imul   edx,DWORD PTR [esi+eax*4+0x54],0xdaa1c8f5
  407c10:	dec    eax
  407c11:	xor    eax,0x422ff6c5
  407c16:	hlt    
  407c17:	mov    BYTE PTR [eax],bh
  407c19:	lahf   
  407c1a:	mov    dl,0x60
  407c1c:	lea    ebp,[edi+0x297804c1]
  407c22:	and    edx,DWORD PTR [edx]
  407c24:	retf   
  407c25:	inc    edx
  407c26:	sbb    DWORD PTR [ebx+edi*8+0x11],0xdb9b4463
  407c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c2f:	out    dx,al
  407c30:	lods   al,BYTE PTR ds:[esi]
  407c31:	inc    edi
  407c32:	mov    edx,0x532b2728
  407c37:	push   es
  407c38:	in     eax,dx
  407c39:	and    BYTE PTR [eax],dl
  407c3b:	inc    eax
  407c3c:	mov    BYTE PTR [ecx+0x38a5291e],dl
  407c42:	lods   al,BYTE PTR ds:[esi]
  407c43:	aad    0x70
  407c45:	repz retf 
  407c47:	inc    eax
  407c48:	cmc    
  407c49:	push   cs
  407c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4b:	stos   BYTE PTR es:[edi],al
  407c4c:	stc    
  407c4d:	push   edi
  407c4e:	aam    0x4
  407c50:	inc    ebx
  407c51:	and    ebx,DWORD PTR [edi-0x7d]
  407c54:	mov    cl,0x8d
  407c56:	cld    
  407c57:	lock das 
  407c59:	dec    edi
  407c5a:	add    eax,0xee2a4323
  407c5f:	mov    bl,0x41
  407c61:	retf   0x6538
  407c64:	pusha  
  407c65:	(bad)  
  407c67:	popf   
  407c68:	loop   0x407ca7
  407c6a:	jmp    0xd1c92591
  407c6f:	mov    bh,0xdd
  407c71:	sbb    BYTE PTR ds:0x8a469554,bl
  407c77:	add    BYTE PTR [edi],al
  407c79:	fadd   DWORD PTR [ebx]
  407c7b:	ins    DWORD PTR es:[edi],dx
  407c7c:	sub    BYTE PTR [eax],dl
  407c7e:	or     ah,dl
  407c80:	out    dx,al
  407c81:	xor    DWORD PTR [ebp+esi*1-0x65],edx
  407c85:	xchg   esi,eax
  407c86:	mov    ds:0xc333c72a,al
  407c8b:	repnz int3 
  407c8d:	mov    ecx,0xd64986ca
  407c92:	iret   
  407c93:	ficom  WORD PTR [edi]
  407c95:	mov    bl,0xdd
  407c97:	xchg   esp,eax
  407c98:	xchg   edi,eax
  407c99:	sub    eax,0xa9167fc0
  407c9e:	dec    edi
  407c9f:	sahf   
  407ca0:	sbb    al,0x1a
  407ca2:	in     al,dx
  407ca3:	(bad)  
  407ca4:	fild   QWORD PTR [ebx+0x25]
  407ca7:	mov    ?,edx
  407ca9:	lods   al,BYTE PTR ds:[esi]
  407caa:	sbb    eax,eax
  407cac:	cwde   
  407cad:	icebp  
  407cae:	sbb    BYTE PTR [esi+0x18],dl
  407cb1:	aaa    
  407cb2:	push   0x26
  407cb4:	sub    BYTE PTR [ecx],bl
  407cb6:	call   0xff49:0xb68e1522
  407cbd:	dec    esp
  407cbe:	pop    esi
  407cbf:	dec    edi
  407cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc1:	loop   0x407cc8
  407cc3:	push   edi
  407cc4:	jmp    0xc60b:0xb9ebcde3
  407ccb:	arpl   WORD PTR [edi-0x5ea1adbd],si
  407cd1:	pop    edi
  407cd2:	mov    bh,0xdd
  407cd4:	push   cs
  407cd5:	mov    eax,0x3f37f14f
  407cda:	sub    al,0x1
  407cdc:	jge    0x407d2d
  407cde:	std    
  407cdf:	(bad)  
  407ce0:	mov    dl,0x16
  407ce2:	imul   esi
  407ce4:	loop   0x407cd3
  407ce6:	in     eax,dx
  407ce7:	fsubr  DWORD PTR [ebx]
  407ce9:	inc    ebx
  407cea:	data16 stc 
  407cec:	xchg   esp,eax
  407ced:	gs test al,0x6e
  407cf0:	fcmovnb st,st(7)
  407cf2:	fs mov edx,0x5b319f20
  407cf8:	test   esp,edx
  407cfa:	mov    ch,0xef
  407cfc:	and    edi,DWORD PTR [ecx-0x77]
  407cff:	sbb    eax,0x6749754f
  407d04:	fs scas eax,DWORD PTR es:[edi]
  407d06:	in     al,0xaf
  407d08:	call   0x4f98:0xc16c4d92
  407d0f:	rcr    ebx,1
  407d11:	test   eax,0xf33d5385
  407d16:	sar    DWORD PTR ds:0xa5aa857b,1
  407d1c:	adc    BYTE PTR [esi-0x41],bl
  407d1f:	mov    edx,0xe9c85db0
  407d24:	mov    esi,DWORD PTR [esi+0x6b96b2e3]
  407d2a:	call   0xa523bd30
  407d2f:	retf   
  407d30:	xor    eax,DWORD PTR ds:0x6ea02137
  407d36:	sub    esi,DWORD PTR [ebp-0x7cb4c388]
  407d3c:	dec    esp
  407d3d:	sub    eax,0x2a8ae076
  407d42:	lahf   
  407d43:	test   DWORD PTR [ebx+0x6787cb84],ebx
  407d49:	mov    ds:0x7b53bf6f,al
  407d4e:	pop    esi
  407d4f:	cmp    edx,DWORD PTR [ecx]
  407d51:	and    dl,BYTE PTR es:[edi+0x4ddc78e7]
  407d58:	push   ds
  407d59:	sub    bl,bh
  407d5b:	adc    eax,0x2133553d
  407d60:	rcl    DWORD PTR [ebx-0x40],1
  407d63:	and    BYTE PTR [ebp+0x22],dh
  407d66:	sti    
  407d67:	in     al,dx
  407d68:	adc    DWORD PTR [edi+ebx*4+0x61133612],ecx
  407d6f:	cdq    
  407d70:	jecxz  0x407d00
  407d72:	or     DWORD PTR [ebp+0x6d],esi
  407d75:	jle    0x407cfe
  407d77:	sub    bh,dh
  407d79:	xchg   ecx,eax
  407d7a:	rcr    BYTE PTR ds:0xa5bc48fa,1
  407d80:	out    0xc4,eax
  407d82:	popa   
  407d83:	mov    ds,WORD PTR [edx]
  407d85:	xchg   esp,eax
  407d86:	(bad)  
  407d87:	test   DWORD PTR [ebx-0xf],0x6aadd9c7
  407d8e:	sahf   
  407d8f:	push   es
  407d90:	ja     0x407d67
  407d92:	ja     0x407e13
  407d94:	out    dx,al
  407d95:	inc    ebp
  407d96:	sbb    ecx,ebp
  407d98:	sub    eax,0xf5050a9
  407d9d:	fadd   DWORD PTR [edi+0x7e]
  407da0:	or     cl,BYTE PTR [ebp-0x36f0beab]
  407da6:	dec    eax
  407da7:	add    bl,ah
  407da9:	cmp    BYTE PTR gs:0x151281b4,bh
  407db0:	aas    
  407db1:	or     al,0x51
  407db3:	loope  0x407d64
  407db5:	fwait
  407db6:	cmc    
  407db7:	inc    edi
  407db8:	sub    eax,0xa4e12589
  407dbd:	popf   
  407dbe:	xchg   edi,eax
  407dbf:	(bad)  
  407dc0:	test   eax,0x6b84b026
  407dc5:	clc    
  407dc6:	(bad)  [esi-0x37]
  407dc9:	add    DWORD PTR [ebx-0x10],edx
  407dcc:	lods   eax,DWORD PTR ds:[esi]
  407dcd:	out    dx,eax
  407dce:	mov    ah,0xa7
  407dd0:	pop    ecx
  407dd1:	xor    al,al
  407dd3:	mov    eax,0x188196e1
  407dd8:	out    0x32,eax
  407dda:	xchg   edx,esp
  407ddc:	std    
  407ddd:	xor    ebp,DWORD PTR [eax+0x1819ff99]
  407de3:	cwde   
  407de4:	inc    esi
  407de5:	icebp  
  407de6:	lahf   
  407de7:	dec    edx
  407de8:	xor    ebp,DWORD PTR [eax-0x6b15a0ad]
  407dee:	nop
  407def:	loope  0x407e51
  407df1:	jge    0x407e30
  407df3:	sub    BYTE PTR [ecx+0x3f],bh
  407df6:	pop    ebp
  407df7:	sbb    bl,BYTE PTR fs:0xb46e26b4
  407dfe:	ficom  DWORD PTR [edi+0x14]
  407e01:	push   cs
  407e02:	or     al,0xfe
  407e04:	adc    dh,al
  407e06:	push   ecx
  407e07:	inc    esp
  407e08:	das    
  407e09:	aaa    
  407e0a:	outs   dx,DWORD PTR ds:[esi]
  407e0b:	jmp    0x407de7
  407e0d:	or     ecx,esp
  407e0f:	dec    edx
  407e10:	gs xor eax,0x351090b3
  407e16:	icebp  
  407e17:	mov    ebx,0xd349ea6d
  407e1c:	jmp    0x407e0a
  407e1e:	fimul  WORD PTR [esi-0x7]
  407e21:	mul    DWORD PTR [esi]
  407e23:	mov    bl,0xe
  407e25:	xchg   DWORD PTR [eax-0x79],edi
  407e28:	icebp  
  407e29:	cmp    al,al
  407e2b:	jo     0x407db8
  407e2d:	jno    0x407e6f
  407e2f:	jne    0x407e51
  407e31:	xchg   ecx,eax
  407e32:	and    DWORD PTR [esi+0x1768b3c1],0x3058c29d
  407e3c:	loope  0x407e70
  407e3e:	clc    
  407e3f:	cpuid  
  407e41:	or     BYTE PTR [ebx],0xd
  407e44:	mov    edi,0xdec92155
  407e49:	or     BYTE PTR [eax+ebp*2-0x13],0x85
  407e4e:	xchg   esp,eax
  407e4f:	jne    0x407e5b
  407e51:	xlat   BYTE PTR ds:[ebx]
  407e52:	out    dx,al
  407e53:	adc    al,0xb1
  407e55:	adc    al,0x69
  407e57:	addr16 test al,0xe8
  407e5a:	dec    esi
  407e5b:	imul   edx,DWORD PTR [edi-0x78],0x5a5115a1
  407e62:	nop
  407e63:	in     eax,dx
  407e64:	mov    ebx,0x890b55bc
  407e69:	bound  edi,QWORD PTR [ebp+0x4aae637b]
  407e6f:	mov    bl,0x21
  407e71:	push   0x65de68c9
  407e76:	shl    BYTE PTR [edx-0x10],cl
  407e79:	out    0x64,al
  407e7b:	dec    ebp
  407e7c:	fldenv [esi+0x5d42ada5]
  407e82:	push   es
  407e83:	cs mov cl,0xf7
  407e86:	push   esi
  407e87:	aas    
  407e88:	popa   
  407e89:	push   cs
  407e8a:	mov    eax,0x7bb4356c
  407e8f:	cmp    esi,ebp
  407e91:	out    0xf0,eax
  407e93:	push   cs
  407e94:	and    al,0xa4
  407e96:	adc    BYTE PTR [esi+0x2b1ce7bc],0x59
  407e9d:	(bad)  
  407e9e:	mov    edi,0x6ae88971
  407ea3:	lds    esi,FWORD PTR [esp+esi*8]
  407ea6:	pop    eax
  407ea7:	pop    dx
  407ea9:	inc    edi
  407eaa:	inc    esi
  407eab:	(bad)  
  407ead:	mov    al,es:0x71b3b8e0
  407eb3:	add    BYTE PTR [ebx-0x74],ah
  407eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb7:	dec    ebp
  407eb8:	sub    eax,esi
  407eba:	push   0xb
  407ebc:	add    al,0xb5
  407ebe:	push   ebp
  407ebf:	mov    esi,DWORD PTR [ebx+0x326c2846]
  407ec5:	out    dx,al
  407ec6:	sbb    al,0x26
  407ec8:	call   0xa1f3bf6e
  407ecd:	xchg   ecx,eax
  407ece:	(bad)  
  407ed0:	mov    edi,0xfc7bb89d
  407ed5:	int3   
  407ed6:	xchg   ecx,eax
  407ed7:	fild   QWORD PTR [edi]
  407ed9:	push   ss
  407eda:	fcos   
  407edc:	daa    
  407edd:	call   0x7180dc73
  407ee2:	sub    al,BYTE PTR [edi-0x5a462b65]
  407ee8:	mov    dh,bl
  407eea:	imul   ebx,DWORD PTR [eax+0x12c10765],0x1c
  407ef1:	int    0xb6
  407ef3:	scas   eax,DWORD PTR es:[edi]
  407ef4:	cld    
  407ef5:	jp     0x407e92
  407ef7:	add    eax,0x27f5434c
  407efc:	push   ecx
  407efd:	sub    al,0xa8
  407eff:	test   al,0xda
  407f01:	daa    
  407f02:	rcl    BYTE PTR [edi],1
  407f04:	int    0xff
  407f06:	jo     0x407f41
  407f08:	xchg   ebx,eax
  407f09:	pop    esp
  407f0a:	test   BYTE PTR [eax],0xf6
  407f0d:	fwait
  407f0e:	xchg   esi,eax
  407f0f:	popf   
  407f10:	xor    DWORD PTR [edi-0x23],0x5c
  407f14:	jnp    0x407f6c
  407f16:	adc    eax,0x3c1a7ebd
  407f1b:	pop    esp
  407f1c:	pop    es
  407f1d:	fcom   QWORD PTR [eax-0x48]
  407f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f21:	add    BYTE PTR [ecx+0x5b],bl
  407f24:	push   ds
  407f25:	enter  0x41e5,0x9
  407f29:	cmp    dh,BYTE PTR [ebp+edi*4+0x5d]
  407f2d:	xlat   BYTE PTR ds:[ebx]
  407f2e:	sti    
  407f2f:	fisub  WORD PTR [eax]
  407f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f32:	je     0x407f1b
  407f34:	xchg   esi,eax
  407f35:	fiadd  DWORD PTR [esi]
  407f37:	adc    BYTE PTR [edi+0xde2b727],bl
  407f3d:	and    eax,0x256f9711
  407f42:	scas   eax,DWORD PTR es:[edi]
  407f43:	hlt    
  407f44:	mov    ecx,DWORD PTR [esi]
  407f46:	mov    bh,0xac
  407f48:	jbe    0x407f5b
  407f4a:	sub    eax,esp
  407f4c:	jns    0x407f64
  407f4e:	add    ah,BYTE PTR [esi-0x20]
  407f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f52:	add    dl,BYTE PTR [ecx]
  407f54:	in     eax,dx
  407f55:	mov    ds:0x70fd3cb7,eax
  407f5a:	push   ebx
  407f5b:	mov    ebx,0xb5a9dd59
  407f60:	adc    eax,edi
  407f62:	fnstsw WORD PTR [ebp-0x64]
  407f65:	dec    esp
  407f66:	sbb    DWORD PTR [edx-0x46097015],ebx
  407f6c:	adc    DWORD PTR [edx-0x1e8a5990],edx
  407f72:	add    DWORD PTR [esi+eiz*8],0x15e6dc64
  407f79:	arpl   WORD PTR [edx*2-0x3b7035e],di
  407f80:	ret    
  407f81:	xor    esp,DWORD PTR [esi]
  407f83:	imul   esp,DWORD PTR [edi-0x3c],0xadeb6721
  407f8a:	sar    BYTE PTR [ebp-0x3],cl
  407f8d:	scas   eax,DWORD PTR es:[edi]
  407f8e:	jle    0x407fb5
  407f90:	xchg   ebx,eax
  407f91:	mov    edx,0x9610d78f
  407f96:	or     BYTE PTR [ebx],ch
  407f98:	cmp    BYTE PTR [eax+0x48],bh
  407f9b:	out    dx,eax
  407f9c:	pop    edx
  407f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9e:	xchg   esp,eax
  407f9f:	jmp    0x8f476988
  407fa4:	pop    es
  407fa5:	mov    bh,0x5a
  407fa7:	fs pop esp
  407fa9:	dec    eax
  407faa:	fcmovb st,st(1)
  407fac:	into   
  407fad:	and    BYTE PTR [esp+edx*4+0x1c3043c7],0x18
  407fb5:	mov    BYTE PTR [ebx+0x7e],ah
  407fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fb9:	mov    BYTE PTR [ebx+0x15],dl
  407fbc:	adc    ah,cl
  407fbe:	mov    ecx,0x8aa1b4a0
  407fc3:	mov    dh,BYTE PTR [edx]
  407fc5:	sub    DWORD PTR [ebp-0x8],edi
  407fc8:	fadd   st(5),st
  407fca:	jo     0x407fb2
  407fcc:	retf   0x3c56
  407fcf:	fild   WORD PTR [esp+0x4e5d5166]
  407fd6:	sbb    eax,0x8f2ac2c1
  407fdb:	mov    esp,0xa02e751a
  407fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe1:	mov    dh,0x62
  407fe3:	jns    0x407fb3
  407fe5:	ret    
  407fe6:	aas    
  407fe7:	jecxz  0x40800f
  407fe9:	mov    al,0x37
  407feb:	(bad)  
  407fec:	test   BYTE PTR [ebx-0x7d182159],cl
  407ff2:	icebp  
  407ff3:	cli    
  407ff4:	fiadd  WORD PTR [ebp-0x1a]
  407ff7:	mov    ds:0xd3f1fdf8,eax
  407ffc:	adc    edx,esi
  407ffe:	dec    edi
  407fff:	mov    bl,0x50
  408001:	mov    DWORD PTR [ebp+0x7f],ebx
  408004:	aam    0x26
  408006:	mov    cl,0x0
  408008:	mov    ah,0xfb
  40800a:	jge    0x407fa2
  40800c:	cmp    al,0x22
  40800e:	fcom   QWORD PTR [esi]
  408010:	call   0x9cf05340
  408015:	lahf   
  408016:	dec    esp
  408017:	pushf  
  408018:	stos   BYTE PTR es:[edi],al
  408019:	inc    eax
  40801a:	loop   0x407fc5
  40801c:	jae    0x40802b
  40801e:	scas   eax,DWORD PTR es:[edi]
  40801f:	cdq    
  408020:	or     al,0xc3
  408022:	push   ebx
  408023:	hlt    
  408024:	mov    esp,DWORD PTR [edx]
  408026:	rol    DWORD PTR [ecx-0x5f],1
  408029:	sbb    edi,ebp
  40802b:	test   BYTE PTR [esi+0x2d],al
  40802e:	mov    esi,0x9ddcc361
  408033:	not    DWORD PTR [edi-0x27]
  408036:	fs dec ebp
  408038:	stc    
  408039:	call   0x63ff:0x8a8d5d2a
  408040:	retf   0x2418
  408043:	sub    esp,DWORD PTR [ecx-0x59]
  408046:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408048:	test   edx,esp
  40804a:	lods   eax,DWORD PTR ds:[esi]
  40804b:	push   cs
  40804c:	les    ebx,FWORD PTR [ebp+eiz*4-0x30bbe6ce]
  408053:	dec    ch
  408055:	jns    0x407ffb
  408057:	jo     0x4080a2
  408059:	xchg   esp,eax
  40805a:	je     0x408020
  40805c:	popf   
  40805d:	aaa    
  40805e:	xlat   BYTE PTR ds:[ebx]
  40805f:	std    
  408060:	pop    edx
  408061:	mov    edx,0x919177d4
  408066:	outs   dx,DWORD PTR ds:[esi]
  408067:	and    eax,0xe4f72d7b
  40806c:	mov    eax,0xfd64b9c3
  408071:	mov    edx,0xe1ed406d
  408076:	repnz in eax,dx
  408078:	ret    
  408079:	cmp    BYTE PTR [eax+0x256f75c4],0x4b
  408080:	(bad)  
  408081:	ds nop
  408083:	xor    ebp,edx
  408085:	jl     0x408019
  408087:	dec    edx
  408088:	mov    ebx,fs
  40808a:	fs inc eax
  40808c:	or     BYTE PTR [esi],bh
  40808e:	mov    esp,0xe6fc9929
  408093:	sub    BYTE PTR [esi+0x20],0x2
  408097:	mov    cl,0x13
  408099:	addr16 aaa 
  40809b:	cmp    DWORD PTR [esi+0x5d],edi
  40809e:	loop   0x408043
  4080a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080a1:	mov    ebp,0x4d065e84
  4080a6:	cmp    al,0x2e
  4080a8:	jmp    0x4080b3
  4080aa:	push   es
  4080ab:	mov    cl,0xbc
  4080ad:	adc    al,0xa
  4080af:	or     ch,BYTE PTR [ecx+esi*2+0x4a04d19f]
  4080b6:	jae    0x40808e
  4080b8:	ret    0xeb0d
  4080bb:	sahf   
  4080bc:	imul   edx,DWORD PTR [edx-0x51],0x59e52456
  4080c3:	sar    ebx,1
  4080c5:	pusha  
  4080c6:	sub    edi,DWORD PTR [edi+0x5f]
  4080c9:	cmp    BYTE PTR [esi-0x14],bl
  4080cc:	push   ecx
  4080cd:	in     eax,0x96
  4080cf:	pop    ds
  4080d0:	int    0xe0
  4080d2:	jmp    0x876213bb
  4080d7:	dec    eax
  4080d8:	(bad)  
  4080d9:	pop    ds
  4080da:	pop    esi
  4080db:	push   ds
  4080dc:	ret    
  4080dd:	icebp  
  4080de:	and    DWORD PTR [ebx+0x67],ecx
  4080e1:	and    eax,0x4a48f0c8
  4080e6:	or     ah,BYTE PTR [ecx]
  4080e8:	dec    eax
  4080e9:	or     al,0xe5
  4080eb:	and    al,0xd4
  4080ed:	push   0x7e
  4080ef:	mov    BYTE PTR [eax+edx*1-0x5cbb7e21],ch
  4080f6:	cdq    
  4080f7:	shl    BYTE PTR [eax+ebp*4+0x339caab1],cl
  4080fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ff:	sbb    BYTE PTR ss:[esi+0x1b2418a8],0x1e
  408107:	outs   dx,BYTE PTR ds:[esi]
  408108:	stos   DWORD PTR es:[edi],eax
  408109:	cld    
  40810a:	shr    DWORD PTR [edx-0x8d659c5],1
  408110:	out    dx,eax
  408111:	mov    eax,ds:0xe8ed4a2a
  408116:	mov    ds:0x1d0862bb,eax
  40811b:	sar    BYTE PTR [edi+0x503f3285],cl
  408121:	test   al,0x97
  408123:	sbb    eax,eax
  408125:	sbb    DWORD PTR ds:0x91c6405,0xffffffcb
  40812c:	mov    edi,0x68bdcf7c
  408131:	pop    esi
  408132:	cmp    eax,0x223f938d
  408137:	call   0x17ebad9
  40813c:	sbb    DWORD PTR [eax],ecx
  40813e:	enter  0x2963,0x1c
  408142:	cmp    al,0x83
  408144:	pop    esi
  408145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408146:	gs jnp 0x408164
  408149:	into   
  40814a:	enter  0xee8d,0x20
  40814e:	mov    dh,0x94
  408150:	aad    0x7a
  408152:	or     eax,0xe738eb1e
  408157:	ret    0x6338
  40815a:	mov    dl,0x82
  40815c:	or     DWORD PTR [edi-0x4e0c95bf],ebx
  408162:	inc    edi
  408163:	hlt    
  408164:	pop    ss
  408165:	inc    ebp
  408166:	dec    DWORD PTR ds:0x9f291815
  40816c:	iret   
  40816d:	les    esi,FWORD PTR [ebx+0x37]
  408170:	and    eax,0x1e9fe57c
  408175:	cmp    DWORD PTR [ebp-0x2bb013c8],0xffffffc6
  40817c:	cwde   
  40817d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40817e:	pop    es
  40817f:	outs   dx,BYTE PTR ds:[esi]
  408180:	movzx  ecx,WORD PTR [edi+edx*8+0x78]
  408185:	push   esi
  408186:	dec    eax
  408187:	add    al,0x6c
  408189:	lods   eax,DWORD PTR ds:[esi]
  40818a:	aaa    
  40818b:	outs   dx,DWORD PTR ds:[esi]
  40818c:	inc    esi
  40818d:	jnp    0x40817c
  40818f:	inc    esp
  408190:	arpl   WORD PTR [eax-0xec6a1bd],si
  408196:	inc    esi
  408197:	sar    al,0xd1
  40819a:	push   edx
  40819b:	mov    eax,ds:0x2500f800
  4081a0:	mov    esp,0x3f2f6ef5
  4081a5:	je     0x408194
  4081a7:	fdivr  DWORD PTR [eax]
  4081a9:	add    al,0x54
  4081ab:	cmp    eax,0xee68af47
  4081b0:	fisubr WORD PTR cs:[ebx-0x5]
  4081b4:	add    DWORD PTR [esp+esi*2-0x77],eax
  4081b8:	sahf   
  4081b9:	pusha  
  4081ba:	mov    edx,0x79f2d1b5
  4081bf:	jmp    0x670deb0e
  4081c4:	(bad)  
  4081c5:	hlt    
  4081c6:	jmp    0x4081fe
  4081c8:	lock sti 
  4081ca:	loopne 0x408154
  4081cc:	and    al,0x41
  4081ce:	push   ds
  4081cf:	add    dh,ah
  4081d1:	repz cmc 
  4081d3:	jae    0x408206
  4081d5:	es jmp 0x5a67:0x680608da
  4081dd:	addr16 mov al,0x32
  4081e0:	mov    bl,0xa1
  4081e2:	jmp    0xcb6f2e8
  4081e7:	jns    0x408204
  4081e9:	push   ds
  4081ea:	test   BYTE PTR [ebx+0x30b0fc4f],dh
  4081f0:	pop    es
  4081f1:	pop    ss
  4081f2:	inc    esi
  4081f3:	add    al,0xbd
  4081f5:	int3   
  4081f6:	(bad)  
  4081f7:	stc    
  4081f8:	arpl   dx,di
  4081fa:	test   BYTE PTR [edx-0x77366604],0x56
  408201:	cmp    BYTE PTR [esi+0x5b],bh
  408204:	xor    dh,BYTE PTR ss:[edi-0x76]
  408208:	inc    edi
  408209:	push   edx
  40820a:	jge    0x4081a2
  40820c:	xor    dh,al
  40820e:	lods   al,BYTE PTR ds:[esi]
  40820f:	xor    al,0xf7
  408211:	xchg   ebx,eax
  408212:	push   eax
  408213:	mov    edx,0x1ec018ea
  408218:	mov    bl,ah
  40821a:	in     eax,0x79
  40821c:	bswap  ebp
  40821e:	ss pop ds
  408220:	dec    eax
  408221:	cmp    eax,0x74c2a108
  408226:	dec    esi
  408227:	mov    bh,0x5a
  408229:	int3   
  40822a:	pop    edi
  40822b:	nop
  40822c:	ror    BYTE PTR ds:0xba4ffebf,0xa0
  408233:	iret   
  408234:	(bad)  
  408235:	pop    ecx
  408236:	dec    esp
  408237:	jecxz  0x4081d1
  408239:	mov    dh,dh
  40823b:	sub    eax,0x22
  40823e:	fwait
  40823f:	and    BYTE PTR [ebp+0x56b547d8],dl
  408245:	xor    ah,cl
  408247:	xor    al,0xfe
  408249:	jne    0x40823c
  40824b:	sbb    al,0x80
  40824d:	mov    ds:0xf21bd16b,eax
  408252:	ins    DWORD PTR es:[edi],dx
  408253:	sahf   
  408254:	or     esp,DWORD PTR [eax-0x2c]
  408257:	ror    DWORD PTR [edx+0x5d],0x42
  40825b:	adc    edi,DWORD PTR [eax]
  40825d:	cmp    ebx,DWORD PTR [ebx]
  40825f:	xor    BYTE PTR [ebx+eiz*2-0x4b4feb29],ch
  408266:	daa    
  408267:	inc    eax
  408268:	retf   
  408269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40826a:	mov    eax,0x74af1f83
  40826f:	addr16 data16 clc 
  408272:	(bad)
  408275:	shl    BYTE PTR [ecx-0x47a8cc0a],1
  40827b:	pop    ebp
  40827c:	inc    edi
  40827d:	inc    ebp
  40827e:	sbb    BYTE PTR [edi+0x75b955b3],0x64
  408285:	push   ss
  408286:	dec    edi
  408287:	push   ecx
  408288:	int3   
  408289:	and    DWORD PTR [esi-0x1e468636],ecx
  40828f:	scas   eax,DWORD PTR es:[edi]
  408290:	and    eax,0x7cae2560
  408295:	ins    BYTE PTR es:[edi],dx
  408296:	addr16 retf 
  408298:	sar    DWORD PTR [ebp+0x79863052],cl
  40829e:	leave  
  40829f:	mov    eax,0x456bb6f5
  4082a4:	(bad)  
  4082a5:	mov    ecx,0xb6704811
  4082aa:	iret   
  4082ab:	stos   BYTE PTR es:[edi],al
  4082ac:	cmp    ch,BYTE PTR [edx-0x42f7249a]
  4082b2:	test   BYTE PTR [esi],ch
  4082b4:	xchg   ebx,eax
  4082b5:	std    
  4082b6:	repnz scas al,BYTE PTR es:[edi]
  4082b8:	push   ds
  4082b9:	cld    
  4082ba:	pop    eax
  4082bb:	lods   eax,DWORD PTR ds:[esi]
  4082bc:	pop    esi
  4082bd:	fs push es
  4082bf:	pop    ds
  4082c0:	xchg   esi,eax
  4082c1:	sbb    al,0x7a
  4082c3:	pop    ss
  4082c4:	push   ebx
  4082c5:	sub    eax,edi
  4082c7:	ins    BYTE PTR es:[edi],dx
  4082c8:	adc    eax,0x772d9b58
  4082cd:	in     al,dx
  4082ce:	and    ebp,DWORD PTR [ebx]
  4082d0:	pop    es
  4082d1:	icebp  
  4082d2:	sbb    edx,edi
  4082d4:	fiadd  WORD PTR gs:[edx]
  4082d7:	jnp    0x40826e
  4082d9:	mov    ds:0x81dfe903,al
  4082de:	xchg   esi,eax
  4082df:	mov    ds:0x90615e39,eax
  4082e4:	xor    DWORD PTR [edi+0x119cd3f5],edi
  4082ea:	test   eax,0x63a06d78
  4082ef:	adc    al,0xe9
  4082f1:	mov    al,0x2b
  4082f3:	fcomp  st(5)
  4082f5:	popa   
  4082f6:	or     BYTE PTR [ebx],ch
  4082f8:	scas   al,BYTE PTR es:[edi]
  4082f9:	mov    al,0x7c
  4082fb:	add    DWORD PTR [ebx-0x669c1bc0],esi
  408301:	ret    0x8e9
  408304:	dec    eax
  408305:	popf   
  408306:	bound  eax,QWORD PTR [edx+edi*8-0x5f372309]
  40830d:	lods   eax,DWORD PTR ds:[esi]
  40830e:	adc    DWORD PTR [ebx+0x73],0xffffffe7
  408312:	pop    edi
  408313:	bswap  edi
  408315:	push   ebx
  408316:	mov    bl,0x46
  408318:	push   cs
  408319:	jle    0x408319
  40831b:	mov    ah,0x79
  40831d:	jp     0x408324
  40831f:	mov    dl,0x36
  408321:	out    dx,al
  408322:	or     al,0xba
  408324:	(bad)  
  408325:	aam    0x16
  408327:	call   0xe747305b
  40832c:	sbb    DWORD PTR [ebx],ecx
  40832e:	fs ret 
  408330:	xor    al,0xf3
  408332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408333:	bound  edx,QWORD PTR [ebx]
  408335:	xchg   esi,eax
  408336:	mov    cl,0xc6
  408338:	(bad)  [edi+0x828a612]
  40833e:	fisttp QWORD PTR [edi-0x5e398cc7]
  408344:	or     dh,BYTE PTR [edi]
  408346:	pusha  
  408347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408348:	jo     0x4082eb
  40834a:	cld    
  40834b:	imul   edx,DWORD PTR [ebx+0x1f07002],0xffffffa9
  408352:	dec    esi
  408353:	outs   dx,BYTE PTR ds:[esi]
  408354:	or     ah,dl
  408356:	les    esi,FWORD PTR es:[esi+0x2a]
  40835a:	repz fs jns 0x4083cb
  40835e:	and    BYTE PTR [edx-0x2],0x67
  408362:	daa    
  408363:	cld    
  408364:	lds    ebx,FWORD PTR [esi+esi*8]
  408367:	lahf   
  408368:	mov    bl,BYTE PTR ds:0xe37cf285
  40836e:	and    dl,dl
  408370:	retf   0x14d9
  408373:	inc    esi
  408374:	inc    edi
  408375:	push   ss
  408376:	mov    esp,0xade5f876
  40837b:	push   edi
  40837c:	and    edi,DWORD PTR [ebx+0x77b688e0]
  408382:	adc    eax,0xb3a00d2e
  408387:	icebp  
  408388:	xchg   ebx,eax
  408389:	xor    ecx,esi
  40838b:	and    eax,0x76fbd647
  408390:	inc    esp
  408391:	mov    ebx,0xbf0b6bf4
  408396:	jnp    0x408377
  408398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408399:	jae    0x408408
  40839b:	push   eax
  40839c:	ds push es
  40839e:	pop    ecx
  40839f:	add    al,0x38
  4083a1:	cmp    DWORD PTR [esp+ebp*2+0x629a66b0],esp
  4083a8:	push   ecx
  4083a9:	stc    
  4083aa:	(bad)  
  4083ab:	test   eax,0x9885164
  4083b0:	add    eax,0x2b87dfdd
  4083b5:	inc    esi
  4083b6:	add    eax,0x12028901
  4083bb:	push   0xdb2d9b95
  4083c0:	fistp  WORD PTR [esi+0x24409be]
  4083c6:	(bad)  
  4083c7:	xor    dl,BYTE PTR [ecx-0x7077b972]
  4083cd:	mov    eax,0x3a224021
  4083d2:	sti    
  4083d3:	pop    es
  4083d4:	cmp    DWORD PTR [edx],0xe0c0917a
  4083da:	out    0x5c,eax
  4083dc:	sub    ebx,DWORD PTR [esi]
  4083de:	pop    esp
  4083df:	inc    edi
  4083e0:	or     esp,DWORD PTR [edx]
  4083e2:	neg    DWORD PTR [ecx+eiz*2-0x5b3ebcf4]
  4083e9:	or     bh,BYTE PTR ds:0x4791a64
  4083ef:	xchg   DWORD PTR [edi+0x1d],edx
  4083f2:	(bad)  
  4083f3:	sbb    ah,dh
  4083f5:	mov    al,ds:0x2ce292d0
  4083fa:	addr16 loop 0x408402
  4083fd:	jge    0x40839e
  4083ff:	xor    BYTE PTR [ebx-0x21db9fe1],bl
  408405:	aam    0x5d
  408407:	sbb    cl,dh
  408409:	and    al,0x20
  40840b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40840c:	ret    
  40840d:	add    BYTE PTR [esp+eiz*2+0x50a60bc7],bh
  408414:	cmp    al,0x3b
  408416:	jge    0x4083d6
  408418:	cmp    DWORD PTR [edi],edi
  40841a:	repz jbe 0x408475
  40841d:	aas    
  40841e:	dec    eax
  40841f:	pusha  
  408420:	cs gs mov esi,0xe12e168
  408427:	mov    ?,WORD PTR [esi-0x4e66c13]
  40842d:	mov    esi,ebx
  40842f:	dec    edx
  408430:	(bad)  
  408431:	fisttp QWORD PTR [esi-0x50]
  408434:	add    DWORD PTR [edx+0x495370be],0xe51e0560
  40843e:	call   0xf92:0xb0d1d635
  408445:	outs   dx,DWORD PTR ds:[esi]
  408446:	inc    ebp
  408447:	bound  ebx,QWORD PTR [ebp-0x7b]
  40844a:	ja     0x408485
  40844c:	enter  0xa45b,0xee
  408450:	push   esi
  408451:	xchg   ecx,eax
  408452:	cmp    eax,0x497bac
  408457:	jp     0x408401
  408459:	mov    DWORD PTR [eax],ebp
  40845b:	je     0x408473
  40845d:	lock into 
  40845f:	cli    
  408460:	ds in  eax,dx
  408462:	mov    cl,BYTE PTR [edi+0x2e]
  408465:	dec    edi
  408466:	aad    0x40
  408468:	mov    esp,0x382046c2
  40846d:	xor    cl,BYTE PTR [ecx]
  40846f:	(bad)  
  408470:	dec    eax
  408471:	int    0xbe
  408473:	and    al,dl
  408475:	jnp    0x4084ce
  408477:	and    BYTE PTR [eax+0x6d4ebabe],cl
  40847d:	fstp   TBYTE PTR [eax+0x65d11233]
  408483:	hlt    
  408484:	ret    0xd596
  408487:	mov    ds:0xe9dcb31c,eax
  40848c:	leave  
  40848d:	js     0x408455
  40848f:	jns    0x4084d1
  408491:	mov    ecx,DWORD PTR [eax-0x5a]
  408494:	pop    eax
  408495:	sub    BYTE PTR gs:[esi-0x479ac0dd],ah
  40849c:	fnstsw WORD PTR [esp+ebx*2]
  40849f:	in     eax,0xaa
  4084a1:	es ret 0x7bd9
  4084a5:	add    cl,BYTE PTR [ebp-0x35]
  4084a8:	mov    ecx,DWORD PTR [edi]
  4084aa:	sbb    dh,BYTE PTR [eax+0x55]
  4084ad:	(bad)  
  4084ae:	fsubrp st(4),st
  4084b0:	add    BYTE PTR cs:[edx],0x6c
  4084b4:	sub    eax,edx
  4084b6:	jmp    0x408521
  4084b8:	add    DWORD PTR [ecx],edi
  4084ba:	sbb    BYTE PTR [ecx+0x5864fdd0],cl
  4084c0:	xor    cl,BYTE PTR [eax+0x66]
  4084c3:	mov    ecx,0x2aba48b0
  4084c8:	loope  0x408482
  4084ca:	ds popf 
  4084cc:	(bad)  
  4084ce:	fld    TBYTE PTR [ecx-0x1911eb74]
  4084d4:	scas   al,BYTE PTR es:[edi]
  4084d5:	add    ebp,eax
  4084d7:	xchg   edi,eax
  4084d8:	push   ebp
  4084d9:	jl     0x408525
  4084db:	xchg   ebp,eax
  4084dc:	out    dx,al
  4084dd:	outs   dx,DWORD PTR ds:[esi]
  4084de:	sub    DWORD PTR [edi*4-0x7625c323],ebp
  4084e5:	jno    0x408478
  4084e7:	enter  0x308b,0x49
  4084eb:	jnp    0x408559
  4084ed:	shl    BYTE PTR [esi+0x1],1
  4084f0:	adc    edi,DWORD PTR [edx+eiz*2+0x1931688b]
  4084f7:	sbb    BYTE PTR ds:0x2b45a361,al
  4084fd:	xchg   edx,eax
  4084fe:	mov    cl,0x99
  408500:	aam    0x31
  408502:	popa   
  408503:	aas    
  408504:	adc    BYTE PTR [ecx+ebx*1-0x13451c47],dl
  40850b:	xor    eax,0xdc45f9c9
  408510:	call   0xb656fe13
  408515:	cmp    bl,BYTE PTR ds:0x15854bc9
  40851b:	inc    ecx
  40851c:	call   0x8efbf343
  408521:	mov    ?,WORD PTR [eax+0x40]
  408524:	mov    esi,DWORD PTR [edx-0x5f]
  408527:	ins    BYTE PTR es:[edi],dx
  408528:	push   edi
  408529:	xor    DWORD PTR [edx+0x24cd2d1f],edi
  40852f:	mov    eax,0x3c63034d
  408534:	or     DWORD PTR [edi-0x6fb0eaa3],ebx
  40853a:	aaa    
  40853b:	out    dx,al
  40853c:	daa    
  40853d:	xchg   ecx,eax
  40853e:	mov    esi,0xd6f55e09
  408543:	jp     0x4084ff
  408545:	test   BYTE PTR [edx],bh
  408547:	imul   edi,DWORD PTR [edx],0x28fe1724
  40854d:	jb     0x4085bb
  40854f:	ret    0x7da1
  408552:	inc    ebp
  408553:	in     al,dx
  408554:	in     eax,dx
  408555:	fdiv   st(2),st
  408557:	xor    al,0x86
  408559:	jo     0x4084f9
  40855b:	sub    dh,BYTE PTR [edi-0x39]
  40855e:	ret    
  40855f:	fistp  QWORD PTR [ebp+edi*2-0x78ffa182]
  408566:	ret    
  408567:	icebp  
  408568:	mov    edi,0xfa0339a3
  40856d:	mov    DWORD PTR [ebx+eax*2+0x1f4a43ec],esp
  408574:	aad    0x3e
  408576:	stos   BYTE PTR es:[edi],al
  408577:	jp     0x4085de
  408579:	mov    BYTE PTR [edi-0x4e],ah
  40857c:	push   ebp
  40857d:	adc    DWORD PTR [edi+0x567c3bcf],esi
  408583:	mov    eax,0xbf5d9f58
  408588:	sub    dh,BYTE PTR [esi]
  40858a:	ret    0x3a48
  40858d:	in     eax,0x32
  40858f:	retf   0x8c44
  408592:	call   0x2722209f
  408597:	push   esp
  408598:	pop    esi
  408599:	and    eax,0x21b055e0
  40859e:	mov    esp,0x35f26a17
  4085a3:	sub    dh,BYTE PTR [ebx+0x7122a2a2]
  4085a9:	out    0x40,al
  4085ab:	adc    DWORD PTR [eax-0x27],ecx
  4085ae:	out    dx,eax
  4085af:	xchg   ecx,eax
  4085b0:	xchg   esi,ebp
  4085b2:	dec    edx
  4085b3:	cmp    al,0x25
  4085b5:	sbb    al,0x3d
  4085b7:	aaa    
  4085b8:	pop    eax
  4085b9:	sar    BYTE PTR [ebx],0xdc
  4085bc:	nop
  4085bd:	or     DWORD PTR [eax+0x34],0x3fcfc4cb
  4085c4:	inc    edi
  4085c5:	push   eax
  4085c6:	cmp    esp,edi
  4085c8:	das    
  4085c9:	xchg   ebp,eax
  4085ca:	xor    al,0x7
  4085cc:	mov    bh,0xc3
  4085ce:	xor    BYTE PTR ds:0x5b3a81fb,cl
  4085d4:	and    al,0x56
  4085d6:	loopne 0x408623
  4085d8:	mov    esp,0xa82bfe3b
  4085dd:	pop    es
  4085de:	xchg   ebp,eax
  4085df:	rcr    bh,cl
  4085e1:	jno    0x40865c
  4085e3:	cs aad 0x9a
  4085e6:	pop    edi
  4085e7:	dec    edi
  4085e8:	mov    ecx,0x3e2595f7
  4085ed:	out    dx,al
  4085ee:	rep outs dx,BYTE PTR ds:[esi]
  4085f0:	mov    dl,0xf2
  4085f2:	mov    al,ds:0x292eff30
  4085f7:	sbb    esi,ebp
  4085f9:	or     dh,0x56
  4085fc:	sub    cl,BYTE PTR [ecx-0x78]
  4085ff:	adc    DWORD PTR [esi+0x66],edx
  408602:	sbb    DWORD PTR [ebx+0x4880f0f4],0x4b32079e
  40860c:	add    bh,ch
  40860e:	in     al,0xae
  408610:	sahf   
  408611:	inc    edi
  408612:	pop    ebp
  408613:	scas   eax,DWORD PTR es:[edi]
  408614:	mov    ch,0xb6
  408616:	cwde   
  408617:	(bad)  
  408618:	push   esi
  408619:	dec    eax
  40861a:	les    esp,FWORD PTR [edi]
  40861c:	mov    edi,0xfb58386a
  408621:	push   eax
  408622:	dec    edi
  408623:	pop    ebp
  408624:	pushf  
  408625:	xor    eax,0x3a726ddd
  40862a:	test   DWORD PTR [edx-0x515e6329],edi
  408630:	outs   dx,BYTE PTR ds:[esi]
  408631:	stos   BYTE PTR es:[edi],al
  408632:	mov    es,WORD PTR [edi+0x33]
  408635:	jb     0x4085c8
  408637:	out    dx,eax
  408638:	mov    ch,0x67
  40863a:	push   0xd4131998
  40863f:	jo     0x408633
  408641:	in     al,dx
  408642:	test   al,0x28
  408644:	mov    BYTE PTR [eax+eiz*2-0x97f0a16],al
  40864b:	mov    al,0xbd
  40864d:	and    eax,0xc012b331
  408652:	nop
  408653:	(bad)  
  408654:	sbb    eax,0xd595601
  408659:	gs inc edi
  40865b:	jno    0x4085ed
  40865d:	cmp    eax,0x985c860f
  408662:	out    dx,eax
  408663:	cmp    eax,0xa8dec2dd
  408668:	mov    sp,0xa91a
  40866c:	in     al,0x3c
  40866e:	sbb    al,0x16
  408670:	dec    edx
  408671:	mov    ds:0xac5d3f24,al
  408676:	mov    al,ds:0x7b46d008
  40867b:	pop    edi
  40867c:	adc    DWORD PTR [edx+0x14],eax
  40867f:	pop    edx
  408680:	ret    
  408681:	add    cl,BYTE PTR [eax-0x2]
  408684:	push   eax
  408685:	aas    
  408686:	mov    eax,0x1ac637be
  40868b:	sbb    al,0x8
  40868d:	call   0x688b7b25
  408692:	jecxz  0x4086a7
  408694:	jnp    0x408704
  408696:	push   0xffffffbb
  408698:	test   eax,0xde8730b0
  40869d:	jle    0x408684
  40869f:	ins    DWORD PTR es:[edi],dx
  4086a0:	jne    0x4086d3
  4086a2:	icebp  
  4086a3:	add    BYTE PTR [ecx],0xc
  4086a6:	fld    DWORD PTR [edx]
  4086a9:	mov    esp,0x6d6d2e37
  4086ae:	jl     0x4086bf
  4086b0:	ret    
  4086b1:	or     al,0x1c
  4086b3:	or     dh,BYTE PTR es:[eax]
  4086b6:	scas   al,BYTE PTR es:[edi]
  4086b7:	sbb    BYTE PTR [eax],dh
  4086b9:	mov    ecx,0x95c472b3
  4086be:	push   0xffffff8f
  4086c0:	data16 jge 0x4086c1
  4086c3:	mov    cl,0x7c
  4086c5:	jecxz  0x4086e3
  4086c7:	(bad)  
  4086c8:	shl    al,1
  4086ca:	in     al,0x4
  4086cc:	out    0x1c,eax
  4086ce:	pop    ebp
  4086cf:	ret    0x4fbf
  4086d2:	out    dx,al
  4086d3:	sbb    al,0x4b
  4086d5:	(bad)  
  4086d6:	imul   eax,DWORD PTR [esi],0xffffff86
  4086d9:	dec    eax
  4086da:	add    eax,0x3b973008
  4086df:	mov    ds:0x3ff27154,al
  4086e4:	rol    DWORD PTR [ecx],1
  4086e6:	jle    0x4086aa
  4086e8:	pop    es
  4086e9:	mov    ecx,0x9a4d9009
  4086ee:	push   ds
  4086ef:	ret    
  4086f0:	arpl   WORD PTR [ecx-0xef3d919],ax
  4086f6:	mov    al,0xa
  4086f8:	push   edi
  4086f9:	popa   
  4086fa:	and    eax,0xdae61395
  4086ff:	hlt    
  408700:	lahf   
  408701:	mov    edi,0x36e80771
  408706:	nop
  408707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408709:	adc    DWORD PTR [ebx-0x2c],esp
  40870c:	ds jne 0x408748
  40870f:	cwde   
  408710:	fwait
  408711:	icebp  
  408712:	dec    ecx
  408713:	push   esp
  408714:	xchg   ecx,eax
  408715:	pop    ebx
  408716:	sub    esp,edi
  408718:	add    al,0x50
  40871a:	fs popf 
  40871c:	mov    ch,0xbc
  40871e:	cmp    bl,BYTE PTR [eax]
  408720:	mov    ebp,0x89da798e
  408725:	(bad)  
  408726:	pop    ebp
  408727:	(bad)  
  408729:	mov    WORD PTR [ebp-0x3f],?
  40872c:	mov    esp,0x8fb60e5c
  408731:	jae    0x4086c6
  408733:	fwait
  408734:	push   edx
  408735:	add    dh,dl
  408737:	outs   dx,DWORD PTR ds:[esi]
  408738:	lods   eax,DWORD PTR ds:[esi]
  408739:	push   edi
  40873a:	xchg   DWORD PTR [edx-0x50d843a3],edx
  408740:	shr    ah,0xae
  408743:	div    BYTE PTR [ebx+ebx*2]
  408746:	or     eax,0xe0849927
  40874b:	mov    bh,dl
  40874d:	shr    BYTE PTR [ebp-0x67f8fd3e],0xab
  408754:	mov    ds:0x4a8b30d3,eax
  408759:	inc    edx
  40875a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40875b:	sar    DWORD PTR [edi+0x64ba5089],cl
  408761:	sbb    eax,0xfd3c9c8c
  408766:	lock scas al,BYTE PTR es:[edi]
  408768:	ins    BYTE PTR es:[edi],dx
  408769:	xchg   ebx,eax
  40876a:	mov    ebx,0x68f46feb
  40876f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408770:	(bad)  
  408771:	push   ebp
  408772:	pop    esi
  408773:	mov    esi,0xa34b7154
  408778:	mov    bl,0x37
  40877a:	inc    ebx
  40877b:	xchg   ebp,eax
  40877c:	cmp    BYTE PTR [esi],bh
  40877e:	out    0xfb,al
  408780:	call   0x25ac0598
  408785:	fcomp  DWORD PTR [ecx]
  408787:	xchg   edx,eax
  408788:	(bad)  
  408789:	push   esp
  40878a:	dec    eax
  40878b:	and    DWORD PTR [ebx-0x70],eax
  40878e:	inc    ebp
  40878f:	(bad)  
  408790:	aad    0x65
  408792:	bound  esp,QWORD PTR ds:0xf643a448
  408798:	adc    bh,BYTE PTR [edx]
  40879a:	jnp    0x408803
  40879c:	and    bh,BYTE PTR [edi-0x72]
  40879f:	scas   al,BYTE PTR es:[edi]
  4087a0:	addr16 dec edx
  4087a2:	xchg   DWORD PTR [esi-0x617c4d98],esi
  4087a8:	fsubr  QWORD PTR [ecx]
  4087aa:	div    esi
  4087ac:	jmp    0x4087af
  4087ae:	adc    esp,DWORD PTR [ebp-0x1e]
  4087b1:	push   ecx
  4087b2:	or     al,0xa6
  4087b4:	ja     0x408803
  4087b6:	jnp    0x4087ce
  4087b8:	std    
  4087b9:	pop    ss
  4087ba:	cmp    eax,0xb75fe76
  4087bf:	iret   
  4087c0:	pop    ss
  4087c1:	fs jo  0x40878c
  4087c4:	in     al,dx
  4087c5:	lds    ebx,FWORD PTR [ecx+0x4f39451e]
  4087cb:	cmove  edi,DWORD PTR [edx+esi*2+0x6e0db7ba]
  4087d3:	inc    ecx
  4087d4:	repz push edx
  4087d6:	bound  esp,QWORD PTR [edx+0x7c]
  4087d9:	mov    edx,0x667bc990
  4087de:	xchg   edx,eax
  4087df:	mov    ch,0xf4
  4087e1:	cmp    al,0x94
  4087e4:	adc    BYTE PTR [edx+ebp*1],ch
  4087e7:	cli    
  4087e8:	out    0x94,eax
  4087ea:	adc    BYTE PTR [edi+0x62],dl
  4087ed:	mov    BYTE PTR [eax],dl
  4087ef:	xor    eax,0xbcbf93b8
  4087f4:	and    ah,BYTE PTR [ecx+0x35]
  4087f7:	mov    bl,0x6
  4087f9:	test   BYTE PTR [ecx],dh
  4087fb:	inc    esi
  4087fc:	xchg   BYTE PTR [ebx+ecx*1],bl
  4087ff:	fwait
  408800:	imul   ebp,esi,0x32
  408803:	popf   
  408804:	mov    ds,WORD PTR [edx+0x49b56428]
  40880a:	mov    ebx,0x14c0265c
  40880f:	xlat   BYTE PTR ds:[ebx]
  408810:	mov    fs,WORD PTR [edx+ebp*1]
  408813:	dec    esi
  408814:	dec    esi
  408815:	js     0x40887f
  408817:	test   eax,0x687008ea
  40881c:	mov    eax,ds:0x8c8b1b3d
  408821:	push   ebp
  408822:	or     DWORD PTR [ebx+esi*1-0x71fa6222],0xcf61b257
  40882d:	cwde   
  40882e:	mov    BYTE PTR ds:0xbba9a07d,bl
  408834:	adc    ebp,DWORD PTR [edx+0x6ae79f6a]
  40883a:	ficom  DWORD PTR [edi]
  40883c:	(bad)  
  40883d:	mov    dh,0x51
  40883f:	sahf   
  408840:	xchg   edx,eax
  408841:	aam    0x84
  408843:	inc    esi
  408844:	cmp    bl,bh
  408846:	iret   
  408847:	popa   
  408848:	lds    ebx,FWORD PTR [ebx+ecx*1]
  40884b:	jno    0x408892
  40884d:	sub    al,0x78
  40884f:	std    
  408850:	add    al,0x19
  408852:	add    eax,0x98e01fb3
  408857:	int    0xdb
  408859:	sbb    eax,0x6164f9e6
  40885e:	rol    DWORD PTR [edx-0x56],0x4b
  408862:	push   edi
  408863:	call   0x6d40:0x13add425
  40886a:	xchg   BYTE PTR [edi],ah
  40886c:	ffreep st(7)
  40886e:	xchg   ebp,eax
  40886f:	test   DWORD PTR [edx+0x16],0x8a634104
  408876:	lods   al,BYTE PTR ds:[esi]
  408877:	dec    edi
  408878:	and    BYTE PTR [edi-0x68ddc6f1],ah
  40887e:	or     al,0xf1
  408880:	dec    edi
  408881:	call   DWORD PTR [ebx+0x17]
  408884:	jmp    0x955:0x4c3a0864
  40888b:	pushf  
  40888c:	sbb    al,0x38
  40888e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40888f:	cwde   
  408890:	sbb    edi,esp
  408892:	xchg   ecx,eax
  408893:	and    eax,0xd2188cd6
  408898:	popa   
  408899:	cmp    al,0xc5
  40889b:	(bad)  
  40889c:	jne    0x408878
  40889e:	mov    DWORD PTR [ecx-0x5547b2ce],esp
  4088a4:	ins    DWORD PTR es:[edi],dx
  4088a5:	mov    bl,0x70
  4088a7:	mul    DWORD PTR [ecx]
  4088a9:	mov    BYTE PTR [edi-0x4c],ch
  4088ac:	in     al,dx
  4088ad:	lods   al,BYTE PTR ds:[esi]
  4088ae:	push   edi
  4088af:	or     eax,0x22b896e1
  4088b4:	retf   0xb3e8
  4088b7:	sub    eax,DWORD PTR [ebp+0x123dc174]
  4088bd:	sbb    eax,0x16841794
  4088c2:	mov    BYTE PTR [ebx+0x38],0x8b
  4088c6:	stos   BYTE PTR es:[edi],al
  4088c7:	ins    BYTE PTR es:[edi],dx
  4088c8:	or     esp,DWORD PTR [eax+ebx*4+0x2bd0a657]
  4088cf:	jno    0x4088ad
  4088d1:	sbb    al,0x9d
  4088d3:	mov    bh,0x38
  4088d5:	popa   
  4088d6:	sub    esi,eax
  4088d8:	jge    0x40893a
  4088da:	cld    
  4088db:	ror    BYTE PTR [ecx-0x48],1
  4088de:	mov    ah,0xc0
  4088e0:	mov    ds:0xd19e4f1,al
  4088e5:	push   0xc882b2ae
  4088ea:	add    al,0xf3
  4088ec:	cmp    DWORD PTR [edx],ebx
  4088ee:	push   edx
  4088ef:	mov    edx,0x73ea7529
  4088f4:	mov    BYTE PTR [esi+0x1],al
  4088f7:	mov    ds:0xace1c7b7,eax
  4088fc:	fwait
  4088fd:	ss push ecx
  4088ff:	ins    BYTE PTR es:[edi],dx
  408900:	inc    eax
  408901:	fiadd  WORD PTR [ebx]
  408903:	cmp    eax,0x910e31f3
  408908:	or     al,0xc
  40890a:	sbb    eax,0x84472534
  40890f:	push   esi
  408910:	int3   
  408911:	and    esi,esi
  408913:	xchg   DWORD PTR [ebx-0x799ca1d3],ecx
  408919:	sti    
  40891a:	js     0x4088b2
  40891c:	fst    QWORD PTR [esi-0x5ffd99eb]
  408923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408924:	ins    BYTE PTR es:[edi],dx
  408925:	push   cs
  408926:	or     eax,0x4620f55f
  40892b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40892c:	cmp    edx,DWORD PTR [ebx-0x54018f8a]
  408932:	mov    ebp,0x40a13ecd
  408937:	lea    esp,[ecx]
  408939:	neg    DWORD PTR [ebx+0x5bc5f32b]
  40893f:	xchg   esi,eax
  408940:	and    ebp,DWORD PTR [esi-0x14]
  408943:	cmp    eax,0x4fe3b4c
  408948:	nop
  408949:	adc    BYTE PTR [edi-0x75833685],al
  40894f:	jge    0x4089a8
  408951:	jbe    0x408976
  408953:	push   es
  408954:	(bad)  
  408955:	xchg   edx,eax
  408956:	pop    es
  408957:	or     ch,dl
  408959:	mov    dl,0x39
  40895b:	outs   dx,DWORD PTR ds:[esi]
  40895c:	pushf  
  40895d:	and    al,0x80
  40895f:	jmp    0xc8ff507f
  408964:	jns    0x4088fe
  408966:	ja     0x408987
  408968:	(bad)  
  408969:	and    BYTE PTR gs:[ebx-0x42],ch
  40896d:	jecxz  0x4088f3
  40896f:	sbb    eax,0x306ef9e7
  408974:	dec    ebp
  408975:	scas   eax,DWORD PTR es:[edi]
  408976:	dec    ecx
  408977:	loop   0x40894e
  408979:	cmp    edx,DWORD PTR [edx-0x1d6c574]
  40897f:	jmp    0x4089e3
  408981:	inc    esi
  408982:	mov    dl,0x72
  408984:	xchg   esp,eax
  408985:	jno    0x4089b4
  408987:	dec    ebp
  408988:	sub    BYTE PTR [eax-0x28442d16],0xdc
  40898f:	mov    bl,0x7
  408991:	(bad)  
  408992:	and    edi,DWORD PTR [ebp-0x57d11ea5]
  408998:	mov    DWORD PTR [eax-0xe],ecx
  40899b:	cmc    
  40899c:	(bad)  
  40899d:	daa    
  40899e:	fst    DWORD PTR [edx-0x5418c90c]
  4089a4:	jg     0x408a04
  4089a6:	mov    ebx,0xb934da7e
  4089ab:	ds arpl cx,si
  4089ae:	retf   0x159f
  4089b1:	cmp    cl,dh
  4089b3:	test   al,0xfc
  4089b5:	xchg   edi,eax
  4089b7:	mov    ah,0x77
  4089b9:	(bad)  
  4089ba:	(bad)  
  4089bb:	ret    
  4089bc:	inc    esi
  4089bd:	ret    0x1ed3
  4089c0:	and    BYTE PTR [ecx+0x265b3784],bl
  4089c6:	scas   al,BYTE PTR es:[edi]
  4089c7:	or     dh,BYTE PTR [ebx]
  4089c9:	or     al,0x2e
  4089cc:	rol    BYTE PTR [ebp+0x4a],1
  4089cf:	out    0xb5,al
  4089d1:	retf   
  4089d2:	test   al,0x6b
  4089d4:	inc    esi
  4089d5:	lea    esp,[edi+0x49b98dba]
  4089db:	sub    al,0x24
  4089dd:	repz or BYTE PTR [edi],0xf0
  4089e1:	test   eax,0xd3db9415
  4089e6:	xchg   DWORD PTR [ebx-0x47],edx
  4089e9:	hlt    
  4089ea:	(bad)  
  4089eb:	cld    
  4089ec:	cmp    ebp,ecx
  4089ee:	cmp    BYTE PTR [edi+0x57],ch
  4089f1:	ins    BYTE PTR es:[edi],dx
  4089f2:	adc    DWORD PTR [eax-0x49],esi
  4089f5:	sar    DWORD PTR [ebx-0x42b1977b],0x65
  4089fc:	adc    cl,dl
  4089fe:	test   eax,0x48e9deff
  408a03:	int3   
  408a04:	les    edx,FWORD PTR [edi+0x7e]
  408a07:	(bad)  
  408a08:	hlt    
  408a09:	daa    
  408a0a:	push   es
  408a0b:	lock dec eax
  408a0d:	inc    ebp
  408a0e:	pop    ebx
  408a0f:	ins    BYTE PTR es:[edi],dx
  408a10:	fs addr16 jns 0x408a88
  408a14:	ror    BYTE PTR [edx-0x6b],0x36
  408a18:	jo     0x4089b7
  408a1a:	out    dx,eax
  408a1b:	ins    BYTE PTR es:[edi],dx
  408a1c:	jle    0x4089f2
  408a1e:	push   edi
  408a1f:	out    dx,al
  408a20:	add    BYTE PTR [esi],al
  408a22:	or     BYTE PTR [ebx-0x21e10a8e],ah
  408a28:	and    ebp,ebx
  408a2a:	sub    ecx,DWORD PTR [edi]
  408a2c:	xchg   esi,eax
  408a2d:	cmc    
  408a2e:	xor    bh,BYTE PTR [edx+esi*2-0x1b982caf]
  408a35:	in     eax,dx
  408a36:	das    
  408a37:	add    al,0xe1
  408a39:	or     esp,esi
  408a3b:	mov    ch,0x83
  408a3d:	jl     0x4089eb
  408a3f:	idiv   DWORD PTR [ebx-0x1c7d3f6d]
  408a45:	cmp    al,0xc9
  408a47:	outs   dx,BYTE PTR ds:[esi]
  408a48:	sbb    eax,0x2cd37c3e
  408a4d:	fild   QWORD PTR [eax-0x45]
  408a50:	lods   al,BYTE PTR ds:[esi]
  408a51:	(bad)  
  408a52:	out    0x3,eax
  408a54:	jle    0x408a64
  408a56:	or     BYTE PTR [edi+ebx*8],0xe9
  408a5a:	das    
  408a5b:	fs pop esp
  408a5d:	stos   BYTE PTR es:[edi],al
  408a5e:	xor    edi,DWORD PTR [ecx-0x68392eb1]
  408a64:	sub    al,0xf9
  408a66:	mov    fs,WORD PTR [ebx]
  408a68:	jnp    0x408a67
  408a6a:	jmp    0x408a25
  408a6c:	xor    edx,DWORD PTR [edx]
  408a6e:	clc    
  408a6f:	jg     0x408a8e
  408a71:	test   edx,0x4807397a
  408a77:	sub    eax,0x599e096e
  408a7c:	aad    0x8a
  408a7e:	mov    al,0x5
  408a80:	push   esp
  408a81:	cdq    
  408a82:	imul   edx,DWORD PTR [esp+edi*8],0x24
  408a86:	mov    gs,ecx
  408a88:	push   esi
  408a89:	mov    ch,0x0
  408a8b:	xor    BYTE PTR [eax+0x7d0ec5d8],bl
  408a91:	mov    BYTE PTR [ebp+0x379727c3],dh
  408a97:	neg    BYTE PTR [ebp-0x8]
  408a9a:	xor    eax,0xa47d4d3b
  408a9f:	push   0x13af78b4
  408aa4:	or     ch,bl
  408aa6:	push   esp
  408aa7:	mov    ebx,0x4050aab8
  408aac:	mov    edx,0x1a1fea42
  408ab1:	test   BYTE PTR [edi+0x1b],cl
  408ab4:	inc    ebx
  408ab5:	(bad)  
  408ab6:	stos   DWORD PTR es:[edi],eax
  408ab7:	rol    DWORD PTR [ecx-0x52],1
  408aba:	inc    ebp
  408abb:	fld    TBYTE PTR [ecx+0x79d34251]
  408ac1:	push   esp
  408ac2:	and    eax,DWORD PTR [esi+0x22]
  408ac5:	jp     0x408b19
  408ac7:	mov    ds:0xf4cb5b5f,al
  408acc:	dec    ebx
  408acd:	jle    0x408a67
  408acf:	les    ebx,FWORD PTR [edi-0x75]
  408ad2:	xor    al,0x2e
  408ad4:	pop    ds
  408ad5:	data16 fucomp st(1)
  408ad8:	push   0xf1d0fc1c
  408add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ade:	xchg   BYTE PTR [edx],bh
  408ae0:	ja     0x408b00
  408ae2:	push   eax
  408ae3:	jle    0x408afe
  408ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae6:	scas   eax,DWORD PTR es:[edi]
  408ae7:	lods   al,BYTE PTR ds:[esi]
  408ae8:	test   al,0x9d
  408aea:	jb     0x408aab
  408aec:	cmp    eax,0x4b7612d3
  408af1:	sub    esi,DWORD PTR [edx+0x4c]
  408af4:	xlat   BYTE PTR ds:[ebx]
  408af5:	push   ds
  408af6:	(bad)  
  408af7:	push   0x32
  408af9:	imul   ebx,DWORD PTR [ebx],0xd7545ad9
  408aff:	fwait
  408b00:	push   es
  408b01:	inc    eax
  408b02:	aaa    
  408b03:	mov    al,0xf8
  408b05:	mov    ebp,0x2bdeb3f9
  408b0a:	mov    ds:0x654332a7,eax
  408b0f:	ror    ecx,0xb0
  408b12:	repnz mov ebx,0xa1f9df50
  408b18:	xchg   edi,eax
  408b19:	aad    0xa9
  408b1b:	or     bh,dl
  408b1d:	add    esp,DWORD PTR [edi+ebx*4]
  408b20:	clc    
  408b21:	inc    esi
  408b22:	pusha  
  408b23:	dec    esi
  408b24:	in     al,0x9
  408b26:	ret    
  408b27:	sub    BYTE PTR [ebx+eax*8-0x31],0x1e
  408b2c:	(bad)  
  408b2d:	or     al,0xd7
  408b2f:	dec    ebx
  408b30:	ins    DWORD PTR es:[edi],dx
  408b31:	scas   eax,DWORD PTR es:[edi]
  408b32:	lods   eax,DWORD PTR ds:[esi]
  408b33:	out    dx,al
  408b34:	xor    ebp,DWORD PTR ds:0x5375244f
  408b3a:	mov    bl,0xbb
  408b3c:	xlat   BYTE PTR ds:[ebx]
  408b3d:	push   eax
  408b3e:	pushf  
  408b3f:	int3   
  408b40:	push   es
  408b41:	inc    edi
  408b42:	loop   0x408b55
  408b44:	aam    0x80
  408b46:	out    0x9a,al
  408b48:	ss in  al,0xa7
  408b4b:	int    0x84
  408b4d:	enter  0xf0cf,0x21
  408b51:	mov    ebx,0x5d3c6844
  408b56:	sar    eax,1
  408b58:	adc    esp,ebx
  408b5a:	sbb    DWORD PTR [ebx+edi*1+0x30],edi
  408b5e:	sahf   
  408b5f:	aam    0x71
  408b61:	loopne 0x408b2e
  408b63:	int3   
  408b64:	inc    ebx
  408b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b66:	jo     0x408b80
  408b68:	fdiv   QWORD PTR [ebx-0x67]
  408b6b:	clc    
  408b6c:	stc    
  408b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b6e:	xchg   DWORD PTR gs:[eax],edx
  408b71:	jmp    0xb7ba3b76
  408b76:	sub    DWORD PTR [ebx],ebp
  408b78:	mov    bh,0x92
  408b7a:	in     eax,dx
  408b7b:	cs xchg ebp,eax
  408b7d:	(bad)  
  408b7e:	rcl    DWORD PTR [edx-0x787d6e72],0x23
  408b85:	sbb    DWORD PTR [ebx+0x49de82f4],ecx
  408b8b:	pop    esp
  408b8c:	test   ebp,edx
  408b8e:	shl    DWORD PTR [esi+0x61ea4ba2],1
  408b94:	mov    DWORD PTR [ecx-0x1],ebp
  408b97:	ja     0x408b96
  408b99:	xor    eax,0xb18c11ce
  408b9e:	sbb    dh,al
  408ba0:	pop    eax
  408ba1:	scas   eax,DWORD PTR es:[edi]
  408ba2:	push   edi
  408ba3:	imul   eax,ecx,0xaeaa72c6
  408ba9:	inc    esi
  408baa:	push   ds
  408bab:	bound  esi,QWORD PTR [edi-0x1d]
  408bae:	sub    cl,BYTE PTR ds:0x7993323b
  408bb4:	xor    bh,0x31
  408bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb8:	mov    WORD PTR [ebp-0x4f],fs
  408bbb:	jp     0x408bbc
  408bbd:	shl    DWORD PTR [ebx],cl
  408bbf:	adc    eax,0x352290c5
  408bc4:	addr16 xor eax,eax
  408bc7:	pop    edx
  408bc8:	cmp    eax,0xc15c604e
  408bcd:	add    ecx,DWORD PTR [edx+esi*2]
  408bd0:	enter  0x4fcd,0xc1
  408bd4:	cli    
  408bd5:	push   edi
  408bd6:	mov    ?,edi
  408bd8:	sub    DWORD PTR [edi+0x15],ebp
  408bdb:	dec    esi
  408bdc:	popf   
  408bdd:	fcomp  QWORD PTR [edi+0xbce28b6]
  408be3:	mov    ds:0x75d6c796,al
  408be8:	jle    0x408b96
  408bea:	sub    cl,dh
  408bec:	icebp  
  408bed:	push   esi
  408bee:	mov    dh,0x35
  408bf0:	push   0xd90187c3
  408bf5:	sub    eax,0xcf87bd1b
  408bfa:	mov    cl,0x32
  408bfc:	xor    DWORD PTR [ecx],edi
  408bfe:	xchg   BYTE PTR [edi+edx*1],dh
  408c01:	aad    0x9f
  408c03:	and    eax,0xbea69dbf
  408c08:	add    al,0xa
  408c0a:	inc    edi
  408c0b:	ret    0xfaea
  408c0e:	cld    
  408c0f:	and    esp,DWORD PTR [eax+0x22c1b758]
  408c15:	jbe    0x408c78
  408c17:	adc    al,0x47
  408c19:	jae    0x408c95
  408c1b:	loopne 0x408be6
  408c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c1e:	xchg   edx,eax
  408c1f:	(bad)  
  408c20:	mov    bh,BYTE PTR [edx-0x5e]
  408c23:	retf   0x8a6
  408c26:	pop    esi
  408c27:	pop    DWORD PTR [ebx+0x33]
  408c2a:	dec    edx
  408c2b:	int3   
  408c2c:	imul   esi,DWORD PTR [edi-0x7e49f779],0xf7c1d1e9
  408c36:	dec    esi
  408c37:	cmp    ah,al
  408c39:	(bad)  
  408c3a:	out    dx,al
  408c3b:	call   0x5683:0xfb35fff1
  408c42:	add    BYTE PTR [edi],dh
  408c44:	mov    eax,ds:0x4e33fad9
  408c49:	or     al,0x79
  408c4b:	or     eax,0x554fa65b
  408c50:	add    ch,BYTE PTR ds:0x7775bcf7
  408c56:	fcom   DWORD PTR [edi-0x62eed638]
  408c5c:	sub    bl,dl
  408c5e:	mov    sp,0xb566
  408c62:	mov    DWORD PTR [edx-0x526cea29],esi
  408c68:	rcl    BYTE PTR [edx],1
  408c6a:	adc    BYTE PTR [ecx+0x3c],ah
  408c6d:	xor    eax,0xfeea3507
  408c72:	mov    bh,0x84
  408c74:	or     BYTE PTR [esi],ah
  408c76:	sbb    BYTE PTR [esi+0x77a8ed72],ah
  408c7c:	pop    ds
  408c7d:	jb     0x408c82
  408c7f:	xchg   esi,eax
  408c80:	popf   
  408c81:	dec    esi
  408c82:	cs push ebx
  408c84:	ss xor dl,al
  408c87:	mov    dl,0x7b
  408c89:	lahf   
  408c8a:	(bad)  
  408c8b:	out    dx,al
  408c8c:	jl     0x408cd3
  408c8e:	xlat   BYTE PTR ds:[ebx]
  408c8f:	sbb    DWORD PTR [ebx+0x4b],eax
  408c92:	(bad)  
  408c93:	scas   al,BYTE PTR es:[edi]
  408c94:	fmul   DWORD PTR [edi-0x6]
  408c97:	stos   DWORD PTR es:[edi],eax
  408c98:	xchg   ebp,eax
  408c99:	or     BYTE PTR [edi],bh
  408c9b:	xchg   edx,eax
  408c9c:	dec    ebp
  408c9d:	cmp    DWORD PTR [edi+ecx*1+0x6eb2d898],esp
  408ca4:	pop    eax
  408ca5:	mov    ecx,0xc8b6a471
  408caa:	(bad)  
  408cab:	mov    ebp,0x18075b84
  408cb0:	mov    ch,0x59
  408cb2:	lods   eax,DWORD PTR ds:[esi]
  408cb3:	imul   esp,DWORD PTR [ebp-0xe],0x7b78edd3
  408cba:	sbb    eax,0xc73d13
  408cbf:	sub    al,0xf1
  408cc1:	mov    cl,0x42
  408cc3:	pop    esi
  408cc4:	std    
  408cc5:	test   eax,0x9214919f
  408cca:	test   eax,0xe4415e20
  408ccf:	mov    ds:0xeb39d4b6,eax
  408cd4:	shr    dh,1
  408cd6:	scas   eax,DWORD PTR es:[edi]
  408cd7:	mov    ds:0x46f685ef,al
  408cdc:	push   edi
  408cdd:	add    al,0x95
  408cdf:	test   al,0xc7
  408ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce3:	adc    dh,al
  408ce5:	xchg   ebp,eax
  408ce6:	push   0xffffffdc
  408ce8:	shl    DWORD PTR [esi],cl
  408cea:	mov    esp,0x928ecd34
  408cef:	add    bh,BYTE PTR [eax]
  408cf1:	jmp    FWORD PTR [edi]
  408cf3:	gs (bad) 
  408cf5:	fidivr WORD PTR [esi-0x5ff01b4b]
  408cfb:	dec    edi
  408cfc:	mov    eax,0x6f663dc1
  408d01:	fimul  WORD PTR [eax-0x7ffc72ea]
  408d07:	clc    
  408d08:	mov    eax,0x3f7583b8
  408d0d:	dec    edi
  408d0e:	ss test eax,0xf6b54f84
  408d14:	xor    esi,esi
  408d16:	pop    esp
  408d17:	in     al,0x6c
  408d19:	add    al,0xd0
  408d1b:	pop    esp
  408d1c:	jl     0x408d1e
  408d1e:	mov    bl,0xaf
  408d20:	adc    al,0x96
  408d22:	mov    al,0x1c
  408d24:	ret    0x2445
  408d27:	and    DWORD PTR [ebx],0x25
  408d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d2b:	retf   
  408d2c:	add    BYTE PTR [ebp+0x2215f59e],dh
  408d32:	pop    esi
  408d33:	das    
  408d34:	and    ebp,DWORD PTR [edx]
  408d36:	ret    0x4298
  408d39:	push   0xda6656f4
  408d3e:	mov    ds:0x1bcb15f5,al
  408d43:	popa   
  408d44:	aam    0x6f
  408d46:	fwait
  408d47:	les    esi,FWORD PTR [esi]
  408d49:	imul   ecx,DWORD PTR [ebx+0x1e],0xad4203e
  408d50:	test   eax,0x528e6c47
  408d55:	xchg   edx,eax
  408d56:	jle    0x408dd6
  408d58:	sti    
  408d59:	mov    bl,0x5a
  408d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d5c:	cmp    ah,bh
  408d5e:	test   DWORD PTR [eax+0x77d7e3f2],edx
  408d64:	xor    DWORD PTR [edi-0x32],esi
  408d67:	sbb    BYTE PTR [ebx],dh
  408d69:	and    DWORD PTR [ebp-0x7188a244],edx
  408d6f:	push   ebp
  408d70:	inc    ah
  408d72:	mov    ds:0xeeb37df6,al
  408d77:	and    eax,0x39f996e8
  408d7c:	dec    ecx
  408d7e:	and    al,0xe8
  408d80:	out    dx,al
  408d81:	jmp    0xbcf9d9bd
  408d86:	bound  ecx,QWORD PTR [ecx]
  408d88:	not    edx
  408d8a:	xchg   ebp,eax
  408d8b:	std    
  408d8c:	das    
  408d8d:	pop    edx
  408d8e:	jno    0x408dc5
  408d90:	shr    DWORD PTR [ebx],1
  408d92:	fs pop ebp
  408d94:	sbb    dh,bl
  408d96:	test   edi,ebx
  408d98:	push   eax
  408d99:	adc    DWORD PTR [ecx+0x21a0fa48],ecx
  408d9f:	bound  ecx,QWORD PTR [ecx+0xc]
  408da2:	outs   dx,BYTE PTR ds:[esi]
  408da3:	int3   
  408da4:	adc    ebp,DWORD PTR [esi+0x612a8aed]
  408daa:	adc    eax,0xc952315d
  408daf:	inc    eax
  408db0:	push   ds
  408db1:	add    cl,BYTE PTR fs:[edi-0x77]
  408db5:	and    edi,DWORD PTR [ebx+eiz*4+0x2e]
  408db9:	rcr    DWORD PTR [ecx],0x50
  408dbc:	mov    ah,BYTE PTR [esi-0x7ea1346a]
  408dc2:	dec    ecx
  408dc3:	pop    ebx
  408dc4:	inc    eax
  408dc5:	add    BYTE PTR [ecx-0x7c],cl
  408dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc9:	add    DWORD PTR [eax-0xc],esp
  408dcc:	jnp    0x408d67
  408dce:	cs sub al,0x21
  408dd1:	push   cs
  408dd2:	xchg   ebx,eax
  408dd3:	bound  esi,QWORD PTR [ebx]
  408dd5:	popa   
  408dd6:	rcr    BYTE PTR [ebp-0x41f21ce8],cl
  408ddc:	xor    ecx,DWORD PTR [ebx+0x5e]
  408ddf:	into   
  408de0:	jns    0x408d8e
  408de2:	sub    al,0x97
  408de4:	mov    cl,0xe0
  408de6:	sbb    al,0x71
  408de8:	(bad)  
  408de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dea:	fs push 0xffffff9d
  408ded:	stos   BYTE PTR es:[edi],al
  408dee:	enter  0x5c57,0xbc
  408df2:	lock jmp 0x408db0
  408df5:	dec    edi
  408df6:	sbb    al,0x35
  408df8:	xlat   BYTE PTR ds:[ebx]
  408df9:	test   eax,0x576f1c15
  408dfe:	sbb    al,0x19
  408e00:	icebp  
  408e01:	and    ch,0x3a
  408e04:	ror    DWORD PTR [edx+0x41],1
  408e07:	nop
  408e08:	pushf  
  408e09:	imul   edi,DWORD PTR [ebp+ebx*1+0x38d0ad57],0xffffffd5
  408e11:	cmp    bh,bh
  408e13:	and    eax,0x3890e733
  408e18:	or     BYTE PTR [ecx-0x22],ah
  408e1b:	dec    esp
  408e1c:	or     al,0xd5
  408e1e:	xchg   ecx,eax
  408e1f:	fadd   QWORD PTR [edi]
  408e21:	in     eax,0xd9
  408e23:	jb     0x408e1f
  408e25:	loop   0x408e08
  408e27:	mov    bl,0xa4
  408e29:	cwde   
  408e2a:	inc    edx
  408e2b:	enter  0x4acf,0x29
  408e2f:	cmp    BYTE PTR [esi+0x46],cl
  408e32:	sbb    ebx,DWORD PTR [ebp-0x4def8fc]
  408e38:	lock and ch,dh
  408e3b:	je     0x408e22
  408e3d:	dec    esp
  408e3e:	xchg   ebx,eax
  408e3f:	pop    ebp
  408e40:	dec    edx
  408e41:	aad    0xb5
  408e43:	jnp    0x408e0d
  408e45:	jmp    0xd3278b0
  408e4a:	fnstenv [esi-0x37]
  408e4d:	xor    eax,0x59ce2320
  408e52:	xchg   edx,eax
  408e53:	cmp    edi,esi
  408e55:	fstp   QWORD PTR [ebx+0xf]
  408e58:	pop    es
  408e59:	mov    dh,0x15
  408e5b:	push   edx
  408e5c:	cli    
  408e5d:	stc    
  408e5e:	cdq    
  408e5f:	cmp    al,bl
  408e61:	add    dh,BYTE PTR [esi-0x61eedfc3]
  408e67:	stos   DWORD PTR es:[edi],eax
  408e68:	sbb    BYTE PTR [edi-0x5fd5fcdf],cl
  408e6e:	and    DWORD PTR ss:0xa2976c03,esp
  408e75:	jmp    0x408e92
  408e77:	and    al,0x2a
  408e79:	hlt    
  408e7a:	sar    DWORD PTR [eax+0x4bae8294],cl
  408e80:	stc    
  408e81:	xchg   ebx,eax
  408e82:	jo     0x408e42
  408e84:	inc    ebx
  408e85:	or     al,0xba
  408e87:	es cwde 
  408e89:	mov    dl,0x1a
  408e8b:	stos   BYTE PTR es:[edi],al
  408e8c:	or     ebx,ebx
  408e8e:	outs   dx,DWORD PTR ds:[esi]
  408e8f:	sbb    ebx,ecx
  408e91:	pop    ebp
  408e92:	push   ebp
  408e93:	pop    esi
  408e94:	xchg   edx,eax
  408e95:	fld    TBYTE PTR [eax]
  408e97:	(bad)  
  408e98:	mov    al,0x81
  408e9a:	addr16 pop esp
  408e9c:	and    al,BYTE PTR [eax+esi*4+0x8]
  408ea0:	call   0x34c06a55
  408ea5:	lock push cs
  408ea7:	iret   
  408ea8:	scas   al,BYTE PTR es:[edi]
  408ea9:	cmp    edi,DWORD PTR [edi-0x1c79aa5b]
  408eaf:	push   ss
  408eb0:	in     eax,0xb5
  408eb2:	push   es
  408eb3:	push   0xd05b5049
  408eb8:	nop
  408eb9:	add    DWORD PTR [eax],ebx
  408ebb:	cmp    DWORD PTR [edx-0x64],0x6d87426e
  408ec2:	das    
  408ec3:	loop   0x408e90
  408ec5:	test   BYTE PTR [eax+0x23332cdd],al
  408ecb:	adc    BYTE PTR [eax+ebp*1+0x1],ah
  408ecf:	and    edi,DWORD PTR [ebx+0x590014b4]
  408ed5:	int    0xc6
  408ed7:	or     eax,0xb74383f7
  408edc:	lods   eax,DWORD PTR ds:[esi]
  408edd:	xchg   esp,eax
  408ede:	out    0xa2,al
  408ee0:	pushf  
  408ee1:	loope  0x408ea7
  408ee3:	inc    eax
  408ee4:	mov    al,ch
  408ee6:	push   edx
  408ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee8:	sar    BYTE PTR [ebp-0xf],cl
  408eeb:	scas   eax,DWORD PTR es:[edi]
  408eec:	popf   
  408eed:	shl    DWORD PTR [ebp+0x12],cl
  408ef0:	or     ch,ah
  408ef2:	das    
  408ef3:	jmp    0xe470c850
  408ef8:	out    0x3d,eax
  408efa:	ret    0xc07c
  408efd:	div    al
  408eff:	jle    0x408f50
  408f01:	or     DWORD PTR [edx+0x16],0xffffff9a
  408f05:	ror    BYTE PTR [edx],1
  408f07:	xor    ch,0x89
  408f0a:	scas   eax,DWORD PTR es:[edi]
  408f0b:	sbb    esp,DWORD PTR [edi-0x1a6ad939]
  408f11:	mov    ds:0x9d72297d,al
  408f16:	push   ebp
  408f17:	mov    al,0x2b
  408f19:	scas   eax,DWORD PTR es:[edi]
  408f1a:	sbb    edi,DWORD PTR [ebp-0x1]
  408f1d:	cmp    edx,eax
  408f1f:	cmc    
  408f20:	and    bh,BYTE PTR [ebp-0x4f41410d]
  408f26:	or     ebx,esi
  408f28:	shl    DWORD PTR [edi+0x52],cl
  408f2b:	sbb    ecx,edi
  408f2d:	aaa    
  408f2e:	add    DWORD PTR [esi-0x6e],esp
  408f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f32:	xchg   esi,eax
  408f33:	popa   
  408f34:	ret    0x4faf
  408f37:	arpl   WORD PTR [ebx+0x51ce4fe2],dx
  408f3d:	daa    
  408f3e:	and    ch,BYTE PTR [ecx+0x365865af]
  408f44:	inc    esi
  408f45:	mov    eax,ds:0xe1d06d16
  408f4a:	clc    
  408f4b:	fiadd  WORD PTR [eax]
  408f4d:	pop    es
  408f4e:	add    DWORD PTR [eax+0x68],eax
  408f51:	mov    dh,0xbc
  408f53:	add    bl,BYTE PTR [edx+edx*1+0x73]
  408f57:	(bad)  
  408f58:	imul   edx,DWORD PTR [ebp-0x1d40a421],0xffffffa5
  408f5f:	jle    0x408f72
  408f61:	xor    ah,BYTE PTR [edx-0x20]
  408f64:	inc    edx
  408f65:	mov    DWORD PTR [esi-0x5],eax
  408f68:	adc    al,0xd9
  408f6a:	jbe    0x408f10
  408f6c:	push   eax
  408f6d:	sbb    eax,DWORD PTR [ebx]
  408f6f:	sub    DWORD PTR [esi-0x1a],ebp
  408f72:	(bad)  
  408f73:	in     eax,dx
  408f74:	mov    ebp,0xfed99177
  408f79:	push   ebx
  408f7a:	bound  eax,QWORD PTR [edx]
  408f7c:	pop    dx
  408f7e:	fsubr  DWORD PTR [edx-0x1]
  408f81:	sub    al,0x68
  408f83:	jmp    0x29032625
  408f88:	sbb    eax,0xe27d654b
  408f8d:	mov    ebx,0x9cee9d74
  408f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f93:	jmp    0x409004
  408f95:	xor    dl,dh
  408f97:	jp     0x409007
  408f99:	into   
  408f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f9b:	sub    BYTE PTR [edx],bl
  408f9d:	lods   al,BYTE PTR ds:[esi]
  408f9e:	rcr    DWORD PTR [ebx],1
  408fa0:	gs aas 
  408fa2:	stos   DWORD PTR es:[edi],eax
  408fa3:	test   eax,0x8e6edf7f
  408fa8:	jne    0x408f76
  408faa:	dec    ebx
  408fab:	inc    esi
  408fac:	mov    esi,0xdebae0a5
  408fb1:	shl    dl,cl
  408fb3:	jge    0x408f9b
  408fb5:	adc    BYTE PTR [eax+0x540e12bb],bh
  408fbb:	jne    0x408fe2
  408fbd:	push   edx
  408fbe:	retf   0xb72a
  408fc1:	enter  0x28c7,0x97
  408fc5:	icebp  
  408fc6:	xchg   edx,eax
  408fc7:	loop   0x409013
  408fc9:	xor    eax,0xf53cc4a9
  408fce:	push   ebp
  408fcf:	pop    edi
  408fd0:	push   es
  408fd1:	inc    esi
  408fd2:	cld    
  408fd3:	retf   0x1216
  408fd6:	jno    0x408f63
  408fd8:	out    0xc8,eax
  408fda:	stc    
  408fdb:	add    DWORD PTR [edi-0x4b],esi
  408fde:	je     0x409054
  408fe0:	lock enter 0xec0f,0xa9
  408fe5:	jge    0x408f9f
  408fe7:	dec    edi
  408fe8:	mov    bl,0x3f
  408fea:	call   eax
  408fec:	and    al,0xcc
  408fee:	(bad)  
  408fef:	stc    
  408ff0:	bound  esp,QWORD PTR ds:0x6fd4af44
  408ff6:	loopne 0x408f97
  408ff8:	nop
  408ff9:	loopne 0x408fde
  408ffb:	sub    BYTE PTR [ebx+ebp*8-0x8],ah
  408fff:	aad    0xdb
  409001:	or     edx,DWORD PTR [ecx+0x3d461a48]
  409007:	pushf  
  409008:	gs jae 0x408fd8
  40900b:	enter  0x7fd7,0x8e
  40900f:	jge    0x409065
  409011:	aaa    
  409012:	stc    
  409013:	bound  edi,QWORD PTR [edx+0x7a]
  409016:	ss fidiv WORD PTR cs:[edi-0x650ac63d]
  40901e:	xchg   DWORD PTR [eax+edx*2-0x68],esp
  409022:	outs   dx,BYTE PTR ds:[esi]
  409023:	sbb    eax,0xa9f6f53e
  409028:	xor    eax,0x25888a1c
  40902d:	xor    esp,eax
  40902f:	repnz ror DWORD PTR [esi+0x21a06e58],1
  409036:	dec    ecx
  409037:	(bad)  
  409038:	aaa    
  409039:	retf   0x5153
  40903c:	ret    
  40903d:	xchg   esi,eax
  40903e:	lea    ebp,[eax-0x51]
  409041:	pop    es
  409042:	jne    0x409087
  409044:	(bad)  [ebx-0x7fb1d2cd]
  40904a:	pop    eax
  40904b:	ret    0x2b46
  40904e:	push   0xe0a033b1
  409053:	mov    eax,ds:0x7fa4ac2a
  409058:	pop    esi
  409059:	add    al,0xc8
  40905b:	(bad)  
  40905c:	nop
  40905d:	xchg   esi,eax
  40905e:	out    0x34,eax
  409060:	fs jmp 0xcf6034a0
  409066:	sar    bl,0xdc
  409069:	cbw    
  40906b:	sub    eax,0x7dc84860
  409070:	sbb    eax,0x555b2fb5
  409075:	xchg   BYTE PTR [edx-0x5d142136],dl
  40907b:	jmp    0xe8e5:0x222c8abf
  409082:	pop    ss
  409083:	icebp  
  409084:	outs   dx,BYTE PTR ds:[esi]
  409085:	xor    BYTE PTR [edi],cl
  409087:	mov    al,0xd1
  409089:	lock sub DWORD PTR [edi+0x6280b932],edi
  409090:	cmc    
  409091:	dec    ecx
  409092:	ss dec eax
  409094:	inc    eax
  409095:	inc    ebx
  409096:	loop   0x409060
  409098:	int    0xc4
  40909a:	jne    0x409068
  40909c:	or     ah,0xd3
  40909f:	neg    bl
  4090a1:	out    0xd5,eax
  4090a3:	push   ebp
  4090a4:	inc    ebx
  4090a5:	scas   al,BYTE PTR es:[edi]
  4090a6:	loopne 0x409120
  4090a8:	icebp  
  4090a9:	xor    BYTE PTR [edi+0xf880384],0xca
  4090b0:	push   es
  4090b1:	inc    esi
  4090b2:	ja     0x4090da
  4090b4:	xor    al,0xa8
  4090b6:	push   edx
  4090b7:	fwait
  4090b8:	dec    esi
  4090b9:	jg     0x409100
  4090bb:	cmp    esi,DWORD PTR [ebx-0x75d33f13]
  4090c1:	sar    BYTE PTR [edx],0xb3
  4090c4:	je     0x4090c5
  4090c6:	cmp    al,0x26
  4090c8:	mov    ch,dl
  4090ca:	scas   eax,DWORD PTR es:[edi]
  4090cb:	mov    DWORD PTR [ecx+ebp*2],edi
  4090ce:	mov    edx,0x5a3c184c
  4090d3:	aad    0xd4
  4090d5:	ret    
  4090d6:	es push ss
  4090d8:	out    0x1d,al
  4090da:	jmp    0x223:0xbd7a2bd3
  4090e1:	ins    DWORD PTR es:[edi],dx
  4090e2:	pop    es
  4090e3:	pop    ss
  4090e4:	cmp    BYTE PTR [edi+0x7b45590e],0x59
  4090eb:	shl    BYTE PTR ds:0x9c833d96,1
  4090f1:	fidiv  WORD PTR [ecx+eiz*8+0x51]
  4090f5:	jmp    FWORD PTR [eax+0x1c3dac95]
  4090fb:	cmp    DWORD PTR [edx-0x76],edx
  4090fe:	(bad)  
  4090ff:	push   ds
  409100:	cwde   
  409101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409102:	cs pop edx
  409104:	(bad)  
  409105:	jl     0x4090f9
  409107:	mov    bl,0x8d
  409109:	push   ebp
  40910a:	push   ebp
  40910b:	retf   0x8d85
  40910e:	sbb    DWORD PTR [edi-0x2c],eax
  409111:	xchg   cl,al
  409113:	into   
  409114:	lods   al,BYTE PTR ds:[esi]
  409115:	mov    cl,0x2a
  409117:	inc    ecx
  409118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409119:	dec    ebx
  40911a:	jle    0x4090e1
  40911c:	lahf   
  40911d:	mov    ds:0x3cda69f2,eax
  409122:	in     eax,dx
  409123:	adc    esp,0xffffffa5
  409126:	je     0x4090e1
  409128:	jbe    0x409113
  40912a:	fucomi st,st(1)
  40912c:	push   ss
  40912d:	repnz cwde 
  40912f:	mov    ebp,0xe408b03b
  409134:	add    eax,0x4bf76d8c
  409139:	mov    bh,0xbf
  40913b:	xchg   ecx,eax
  40913c:	xchg   edx,eax
  40913d:	jns    0x4090cb
  40913f:	ins    DWORD PTR es:[edi],dx
  409140:	out    0x6a,eax
  409142:	xchg   ebx,ecx
  409144:	mov    ebp,0x111e8afe
  409149:	or     eax,0x9605d034
  40914e:	inc    edx
  40914f:	fyl2xp1 
  409151:	loopne 0x409121
  409153:	in     al,0xa0
  409155:	push   esp
  409156:	imul   DWORD PTR [edi-0x50]
  409159:	mov    ds:0x74222c2e,eax
  40915e:	adc    eax,0x47047762
  409163:	repz adc ebx,DWORD PTR [ebp-0x81c75ec]
  40916a:	ds das 
  40916c:	aad    0x65
  40916e:	sub    al,0xbb
  409170:	adc    bh,al
  409172:	cmp    DWORD PTR [ebp+0x47],0xe947bc20
  409179:	loopne 0x409169
  40917b:	mov    eax,0x79023ae5
  409180:	fwait
  409181:	aam    0xcc
  409183:	stc    
  409184:	enter  0xc7a5,0xf7
  409188:	pop    edx
  409189:	inc    edi
  40918a:	push   ebp
  40918b:	and    esi,ebx
  40918d:	out    dx,al
  40918e:	sub    BYTE PTR [eax+0x73],bh
  409191:	fnstcw WORD PTR [ecx]
  409193:	(bad)  
  409194:	xor    edx,edx
  409196:	jne    0x4091f7
  409198:	jb     0x409120
  40919a:	enter  0xd7b6,0x4f
  40919e:	mov    bl,0xdc
  4091a0:	cmc    
  4091a1:	sbb    BYTE PTR ds:0x1e145ca6,al
  4091a7:	cmp    BYTE PTR [edx],0x4f
  4091aa:	lea    eax,[eax+0x17]
  4091ad:	mov    eax,ds:0x78b1c110
  4091b2:	test   al,0x2c
  4091b4:	pop    esp
  4091b5:	stc    
  4091b6:	adc    eax,0xfdf1d439
  4091bb:	inc    ebp
  4091bc:	out    dx,eax
  4091bd:	adc    edx,DWORD PTR [esi+esi*1]
  4091c0:	mov    edx,edx
  4091c2:	test   al,0x1b
  4091c4:	sub    eax,0xf36a5f15
  4091c9:	test   DWORD PTR [eax+0x33ebdf67],ebx
  4091cf:	ret    0x5564
  4091d2:	inc    ecx
  4091d3:	pusha  
  4091d4:	push   ebx
  4091d5:	mov    ds:0x1a7b9f7a,eax
  4091da:	add    eax,ebx
  4091dc:	xor    al,0xfb
  4091de:	lock test DWORD PTR [esi+edx*1],edi
  4091e2:	hlt    
  4091e3:	push   ebx
  4091e4:	sub    ecx,DWORD PTR [ecx-0x5991281a]
  4091ea:	jmp    0xccc2:0x8f6e1e66
  4091f1:	cmp    ecx,DWORD PTR [eax]
  4091f3:	xchg   edi,eax
  4091f4:	imul   esi,eax,0xd384bc
  4091fa:	mov    ebx,0xa118bce5
  4091ff:	add    eax,0x424d2777
  409204:	pop    esp
  409205:	rcl    DWORD PTR [esi],1
  409207:	cli    
  409208:	or     di,WORD PTR [esi+0x2a]
  40920c:	std    
  40920d:	xor    al,0x1
  40920f:	sub    eax,DWORD PTR [esi-0x4ff1fbc]
  409215:	adc    edx,ecx
  409217:	dec    esi
  409218:	les    edx,FWORD PTR [ebp+0x18043501]
  40921e:	cmp    al,0xba
  409220:	repz cmc 
  409222:	add    eax,0xf8dbaad9
  409227:	nop
  409228:	fnsave [edi-0x68]
  40922b:	retf   
  40922c:	call   0x1349:0x4896e5d7
  409233:	ret    0x4629
  409236:	jnp    0x40921b
  409238:	addr16 jns 0x4092ad
  40923b:	aas    
  40923c:	inc    esp
  40923d:	fistp  QWORD PTR [esi-0x5e]
  409240:	mov    dh,bl
  409242:	pop    es
  409243:	jnp    0x4091d6
  409245:	gs jecxz 0x4091d1
  409248:	jl     0x4091e4
  40924a:	xchg   esp,eax
  40924b:	cmp    eax,DWORD PTR [ebx]
  40924d:	fnstcw WORD PTR [esp+esi*1-0x12]
  409251:	retf   
  409252:	adc    DWORD PTR [esi+esi*8],edi
  409255:	sub    DWORD PTR [ebx-0x73e8b800],0x42
  40925c:	dec    ebx
  40925d:	int    0xab
  40925f:	sub    ecx,edx
  409261:	push   ds
  409262:	fisttp DWORD PTR [esi]
  409264:	xchg   DWORD PTR [eax+ecx*1+0x41488989],ebx
  40926b:	sbb    esi,ebx
  40926d:	in     al,0xca
  40926f:	xor    BYTE PTR [edx+0x765d78ac],cl
  409275:	pop    edx
  409276:	dec    esi
  409277:	cs repz into 
  40927a:	fldenv [eax+0xb7132c1]
  409280:	cmp    al,0x79
  409282:	jmp    0x3073:0xef01e112
  409289:	push   esp
  40928a:	in     al,0x56
  40928c:	xlat   BYTE PTR ds:[ebx]
  40928d:	pop    bx
  40928f:	adc    eax,0x87790e6c
  409294:	imul   eax,DWORD PTR [eax+eiz*2+0x67],0xffffffac
  409299:	mov    ds,WORD PTR [ebx+0x31]
  40929c:	aam    0xc0
  40929e:	mov    ebp,0xade17425
  4092a3:	inc    esi
  4092a4:	xchg   ebp,eax
  4092a5:	mov    bl,0x51
  4092a7:	dec    ebp
  4092a8:	mov    edi,0x7551d972
  4092ad:	mov    ecx,0xe048dc71
  4092b2:	das    
  4092b3:	loop   0x409263
  4092b5:	inc    edi
  4092b6:	xor    al,0x3e
  4092b8:	stos   BYTE PTR es:[edi],al
  4092b9:	add    DWORD PTR [edx+ebp*2+0x5a],ebp
  4092bd:	adc    al,BYTE PTR [ecx]
  4092bf:	mov    ebp,DWORD PTR [edi-0x17838e7]
  4092c5:	sub    eax,0xa3251816
  4092ca:	popa   
  4092cb:	ins    DWORD PTR es:[edi],dx
  4092cc:	(bad)  
  4092cd:	or     al,0xd9
  4092cf:	cld    
  4092d0:	nop
  4092d1:	xor    eax,DWORD PTR [edx]
  4092d3:	rcr    DWORD PTR [ebp+0x41403225],cl
  4092d9:	mov    edx,0x66f666f4
  4092de:	es loope 0x40933e
  4092e1:	xor    ch,BYTE PTR [edx+edi*8]
  4092e4:	mov    bh,0x14
  4092e6:	lods   eax,DWORD PTR ds:[esi]
  4092e7:	sub    ch,BYTE PTR [edx-0x52]
  4092ea:	dec    eax
  4092eb:	dec    ebp
  4092ec:	mov    BYTE PTR [eax-0x40],ch
  4092ef:	call   0x608a3850
  4092f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f5:	sub    DWORD PTR [ecx+0x7121aa55],edi
  4092fb:	cmp    eax,0x1c742a52
  409300:	mov    bh,BYTE PTR [edx]
  409302:	jbe    0x409315
  409304:	cmp    al,0xda
  409306:	or     eax,0x59fc2af1
  40930b:	xor    al,0xf8
  40930d:	fs pop ebx
  40930f:	ss loopne 0x4092ed
  409312:	aam    0x5
  409314:	das    
  409315:	(bad)  
  409316:	scas   al,BYTE PTR es:[edi]
  409317:	shl    DWORD PTR [edi-0x6a403ba5],cl
  40931d:	and    BYTE PTR [ecx],dl
  40931f:	and    eax,0xfcad1942
  409324:	int3   
  409325:	in     al,0xc4
  409327:	xchg   esp,eax
  409328:	fidiv  WORD PTR [eax]
  40932a:	neg    DWORD PTR [edx*4-0x4f2ad02e]
  409331:	mov    bl,0xfa
  409333:	iret   
  409334:	push   cs
  409335:	ret    0xfbfd
  409338:	sti    
  409339:	push   ss
  40933a:	test   DWORD PTR [edx-0x70613f76],0x56c06b84
  409344:	or     BYTE PTR [esi-0x435c5fd5],cl
  40934a:	push   eax
  40934b:	(bad)  
  40934c:	iret   
  40934d:	fwait
  40934e:	cmp    DWORD PTR [ebp-0x33],ebp
  409351:	add    al,0x18
  409353:	js     0x4093bd
  409355:	shl    BYTE PTR [ebx+0x6436d538],cl
  40935b:	adc    al,0xa5
  40935d:	icebp  
  40935e:	(bad)  
  409362:	(bad)  
  409363:	dec    esi
  409364:	sub    BYTE PTR [edx+0x406dfb7c],0x1a
  40936b:	outs   dx,DWORD PTR ds:[esi]
  40936c:	xchg   ecx,eax
  40936d:	fldcw  WORD PTR [esi+0x42]
  409370:	fnstenv [edx]
  409372:	xlat   BYTE PTR ds:[ebx]
  409373:	(bad)  
  409375:	aad    0x59
  409377:	cmp    BYTE PTR [esi+0x43],dh
  40937a:	jecxz  0x409309
  40937c:	imul   ebp,DWORD PTR [ebx],0xdf72c61a
  409382:	mov    esi,0x3c1decd2
  409387:	mov    es,WORD PTR [ecx]
  409389:	push   0x428f9aaf
  40938e:	xor    bh,al
  409390:	inc    esi
  409391:	or     eax,0x6feff642
  409396:	(bad)  
  409397:	ficom  DWORD PTR [edi]
  409399:	mov    ds:0x68ac314a,al
  40939e:	pop    eax
  40939f:	mov    dh,0x86
  4093a1:	add    DWORD PTR [eax+0x2c86ad3],ebx
  4093a7:	shr    dh,1
  4093a9:	fcom   QWORD PTR [esi]
  4093ab:	fs and al,0x32
  4093ae:	adc    ah,BYTE PTR [eax-0x62868c9]
  4093b4:	push   esp
  4093b5:	or     BYTE PTR [edx],ch
  4093b7:	push   ecx
  4093b8:	mov    cl,0x14
  4093ba:	fcomp  DWORD PTR [ebp+0x5c26e19d]
  4093c0:	add    eax,0x59b8622c
  4093c5:	jmp    0x4093f4
  4093c7:	mov    dh,0xea
  4093c9:	mov    dl,0xb9
  4093cb:	inc    esi
  4093cc:	push   es
  4093cd:	mov    ebx,ebx
  4093cf:	lods   al,BYTE PTR ds:[esi]
  4093d0:	pop    edi
  4093d1:	mov    dl,0x2e
  4093d3:	aaa    
  4093d4:	and    eax,0x687fc7cb
  4093d9:	fldcw  WORD PTR [ebx]
  4093db:	pushf  
  4093dc:	xchg   ebx,eax
  4093dd:	cld    
  4093de:	pop    ebx
  4093df:	xchg   DWORD PTR [edi-0x205b13e6],eax
  4093e5:	mov    esp,0xb02b899
  4093ea:	mov    esp,edx
  4093ec:	or     DWORD PTR [edi],esi
  4093ee:	repnz repz scas al,BYTE PTR es:[edi]
  4093f1:	loop   0x409441
  4093f3:	push   eax
  4093f4:	cmp    eax,0x213eee8d
  4093f9:	and    al,0x7e
  4093fb:	outs   dx,BYTE PTR ds:[esi]
  4093fc:	mov    cl,0xd
  4093fe:	sub    al,BYTE PTR [edx+0x32daa6e]
  409404:	imul   ebp,DWORD PTR [ebx+0x1cfefa5c],0x56de8583
  40940e:	stos   DWORD PTR es:[edi],eax
  40940f:	inc    ebx
  409410:	popf   
  409411:	ins    DWORD PTR es:[edi],dx
  409412:	dec    ebp
  409413:	cdq    
  409414:	loope  0x4093c4
  409416:	jns    0x40942c
  409418:	daa    
  409419:	fisttp DWORD PTR [ecx-0x5baef7bb]
  40941f:	inc    edx
  409420:	and    BYTE PTR [esi+0x456f1af6],ah
  409426:	jns    0x4093dd
  409428:	lods   al,BYTE PTR ds:[esi]
  409429:	sar    ebp,cl
  40942b:	cli    
  40942c:	aas    
  40942d:	mov    ecx,0x8c634e45
  409432:	and    al,0x87
  409434:	daa    
  409435:	pop    ebx
  409436:	pop    esp
  409437:	icebp  
  409438:	jg     0x409448
  40943a:	xchg   edi,eax
  40943b:	dec    esp
  40943c:	dec    ebx
  40943d:	or     ch,BYTE PTR [ebx]
  40943f:	ret    0x35e7
  409442:	gs inc edx
  409444:	or     eax,DWORD PTR [ebx]
  409446:	xchg   esp,eax
  409448:	cmp    eax,0x94c487ee
  40944d:	(bad)  
  40944e:	stc    
  40944f:	dec    edx
  409450:	sub    ah,ch
  409452:	mov    ?,WORD PTR [esp+edx*2-0x7e]
  409456:	jb     0x4094cb
  409458:	mov    edi,0xd4a76507
  40945d:	dec    eax
  40945e:	imul   DWORD PTR [edx-0x7664eea4]
  409464:	pop    ds
  409465:	scas   eax,DWORD PTR es:[edi]
  409466:	shl    BYTE PTR [ebp+0x4b9777aa],1
  40946c:	lds    ecx,FWORD PTR [esi+0x3ff76ce4]
  409472:	or     eax,0x6cfb9afd
  409477:	inc    esp
  409478:	fmul   QWORD PTR [edx-0xd]
  40947b:	push   ebx
  40947c:	lds    esi,FWORD PTR [ecx]
  40947e:	inc    esp
  40947f:	cmp    dl,BYTE PTR [edi+0x23]
  409482:	xchg   ebx,eax
  409483:	mov    esp,0x3383d837
  409488:	xor    eax,0x1a205f06
  40948d:	mov    edi,0x3415ed24
  409492:	stos   DWORD PTR es:[edi],eax
  409493:	jne    0x409471
  409495:	pop    ds
  409496:	pop    ss
  409497:	in     al,0x6a
  409499:	sbb    esp,0xbd55cf61
  40949f:	sbb    eax,0x65291b14
  4094a4:	ret    0x69fd
  4094a7:	mov    dl,0x46
  4094a9:	fdiv   DWORD PTR [ebp+0x70]
  4094ac:	inc    edx
  4094ad:	dec    ecx
  4094ae:	out    dx,eax
  4094af:	loop   0x409435
  4094b1:	mov    cl,0x6d
  4094b3:	mov    eax,0x6ff5baa4
  4094b8:	mov    edi,0x4db9a81a
  4094bd:	jge    0x40947a
  4094bf:	stos   DWORD PTR es:[edi],eax
  4094c0:	in     eax,dx
  4094c1:	push   eax
  4094c2:	data16 sbb dl,dl
  4094c5:	jmp    0x40952f
  4094c7:	icebp  
  4094c8:	pop    es
  4094c9:	xor    al,0x72
  4094cb:	or     BYTE PTR [ebp+0x31],dh
  4094ce:	mov    ecx,0x6effb184
  4094d3:	pop    esi
  4094d4:	mov    eax,ds:0xdef6593
  4094d9:	pushf  
  4094da:	xor    ecx,DWORD PTR [eax-0x65]
  4094dd:	ins    BYTE PTR es:[edi],dx
  4094de:	test   al,0xb
  4094e0:	stos   BYTE PTR es:[edi],al
  4094e1:	pop    ss
  4094e2:	dec    ecx
  4094e3:	pop    ebp
  4094e4:	cmp    eax,0x9b8ec51e
  4094e9:	iret   
  4094ea:	or     ah,dl
  4094ec:	cmp    eax,eax
  4094ee:	in     eax,dx
  4094ef:	mov    ch,0x6a
  4094f1:	retf   
  4094f2:	retf   
  4094f3:	lods   al,BYTE PTR ds:[esi]
  4094f4:	sar    BYTE PTR gs:[eax-0x6007274],cl
  4094fb:	add    DWORD PTR [ebx+0x6d],edx
  4094fe:	(bad)  
  4094ff:	imul   DWORD PTR [ebx+ebp*8]
  409502:	xchg   edi,eax
  409503:	ret    0x5e5a
  409506:	leave  
  409507:	push   ebx
  409508:	adc    edi,DWORD PTR [eax]
  40950a:	cs (bad) 
  40950c:	adc    eax,DWORD PTR [esi-0xc]
  40950f:	retf   
  409510:	and    esi,DWORD PTR [ecx+0x2e60b4a7]
  409516:	retf   0xa29d
  409519:	xor    al,0xcc
  40951b:	lahf   
  40951c:	mov    cl,0x23
  40951e:	imul   ebx,edi,0x2a
  409521:	sub    edx,DWORD PTR [esi-0x60]
  409524:	mov    edx,0x77fde5f0
  40952a:	push   ss
  40952b:	pop    ds
  40952c:	les    ebp,FWORD PTR [edi+0x6f834bb0]
  409532:	jo     0x4094d2
  409534:	dec    ebx
  409535:	add    dh,BYTE PTR ds:0xed6dbc97
  40953b:	sbb    eax,0x1ca0c154
  409540:	push   cs
  409541:	mov    al,ds:0x3ed6ef86
  409546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409547:	xor    eax,0x27feb534
  40954c:	test   al,0x14
  40954e:	(bad)  
  40954f:	aad    0x31
  409551:	cmp    DWORD PTR [edx],edx
  409553:	jbe    0x4095cb
  409555:	sbb    BYTE PTR [ecx],bl
  409557:	xchg   esp,eax
  409558:	fnsave [esi-0x9da4c83]
  40955e:	mov    edi,0xe121f4b8
  409563:	sahf   
  409564:	stos   DWORD PTR es:[edi],eax
  409565:	xchg   edi,eax
  409566:	xchg   ecx,eax
  409567:	dec    edx
  409568:	daa    
  409569:	cmp    cl,BYTE PTR [ebx+0x2c]
  40956c:	data16 fwait
  40956e:	mov    ecx,0x671e0e9
  409573:	ja     0x4095be
  409575:	jnp    0x40950c
  409577:	or     BYTE PTR [ebx-0x11],bl
  40957a:	into   
  40957b:	sahf   
  40957c:	mov    fs,WORD PTR [eax+0x2]
  40957f:	bound  eax,QWORD PTR [ebp+eiz*4+0x31f39a9]
  409586:	adc    DWORD PTR [edx-0x38e14c3a],edx
  40958c:	or     al,0x58
  40958e:	inc    ebx
  40958f:	fld    DWORD PTR [esi-0x51]
  409592:	cmp    eax,0x2848cb73
  409597:	push   0xd925c51a
  40959c:	ss sub al,0xcd
  40959f:	push   ss
  4095a0:	das    
  4095a1:	and    dh,BYTE PTR ds:0x6030b8d9
  4095a7:	jmp    0x51e93936
  4095ac:	rcr    BYTE PTR [edi+0x6dbb289d],1
  4095b2:	popa   
  4095b3:	lea    ebx,[edx-0x7d]
  4095b6:	cmp    cl,BYTE PTR ds:0x8553e986
  4095bc:	repz test DWORD PTR [edi],esi
  4095bf:	call   0xf08197c0
  4095c4:	mov    esp,DWORD PTR [eax+0x52b274a6]
  4095ca:	es inc esi
  4095cc:	add    eax,0x85f2350b
  4095d1:	mov    DWORD PTR [eax-0x70],0x5a9893d6
  4095d8:	inc    eax
  4095d9:	fidiv  WORD PTR [ebx-0x6ec8b522]
  4095e0:	and    dh,bh
  4095e2:	test   BYTE PTR [edx],bl
  4095e4:	ds mov ch,0x56
  4095e7:	adc    ebx,ebx
  4095e9:	sub    ebp,DWORD PTR [ecx]
  4095eb:	js     0x40957d
  4095ed:	retf   
  4095ee:	mov    edx,0xbd4a95b0
  4095f3:	int3   
  4095f4:	fwait
  4095f5:	lods   al,BYTE PTR ds:[esi]
  4095f6:	jmp    0xcb1f04be
  4095fb:	cmp    al,0xd6
  4095fd:	call   0xe336:0xd71b16a4
  409604:	pusha  
  409605:	icebp  
  409606:	iret   
  409607:	test   DWORD PTR [ecx-0x2f444bb4],0x50ae00c6
  409611:	push   ebp
  409612:	push   0x3685369e
  409617:	inc    esp
  409618:	shl    BYTE PTR [ecx+eiz*4],cl
  40961b:	push   ebp
  40961c:	fstp   QWORD PTR [eax+0x64]
  40961f:	pop    edi
  409620:	or     eax,0xea0a74c2
  409625:	mov    ds:0xf3b5225e,eax
  40962a:	imul   BYTE PTR [edi-0x61d8bc6a]
  409630:	adc    ah,BYTE PTR [edi+0x54]
  409633:	inc    ecx
  409634:	scas   eax,DWORD PTR es:[edi]
  409635:	hlt    
  409636:	push   0x51
  409638:	mov    ch,0x1e
  40963a:	jbe    0x40962d
  40963c:	and    ebp,DWORD PTR [eax-0x2247ebf0]
  409642:	inc    eax
  409643:	in     al,0x6a
  409645:	sbb    BYTE PTR [ebx],ch
  409647:	out    dx,al
  409648:	scas   al,BYTE PTR es:[edi]
  409649:	nop
  40964a:	scas   eax,DWORD PTR es:[edi]
  40964b:	cld    
  40964c:	inc    eax
  40964d:	cmc    
  40964e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40964f:	jp     0x40969f
  409651:	inc    ebx
  409652:	xor    edi,DWORD PTR [edx]
  409654:	sub    DWORD PTR [edi],ebp
  409656:	jmp    0x93cd500f
  40965b:	out    0x25,eax
  40965d:	fs inc esp
  40965f:	jecxz  0x4096ba
  409661:	(bad)  [esi]
  409663:	js     0x40966f
  409665:	mov    ds:0x58e8b44a,al
  40966a:	pop    ebp
  40966b:	imul   ebx,ecx,0x70
  40966e:	sbb    DWORD PTR [ebp*8-0x58ee57ac],ecx
  409675:	cmp    cl,BYTE PTR [ecx]
  409677:	pop    ebx
  409678:	fwait
  409679:	adc    si,sp
  40967c:	sub    al,0x5d
  40967e:	dec    eax
  40967f:	call   0xb9e9:0x80e1524c
  409686:	pop    ecx
  409687:	jmp    0x40966a
  409689:	bound  esi,QWORD PTR [eax-0x1b]
  40968c:	dec    ecx
  40968d:	das    
  40968e:	sar    DWORD PTR [edi],0xe1
  409691:	lods   eax,DWORD PTR ds:[esi]
  409692:	and    DWORD PTR [edi-0x1f532c5c],edx
  409698:	mov    dl,0xfd
  40969a:	dec    edi
  40969b:	push   esp
  40969c:	jne    0x40970b
  40969e:	not    BYTE PTR [ecx-0xea6d4df]
  4096a4:	ins    BYTE PTR es:[edi],dx
  4096a5:	push   ebx
  4096a6:	xchg   edx,eax
  4096a7:	mov    eax,ds:0x1e8729a8
  4096ac:	(bad)  
  4096ad:	mov    edi,0xe52ba2e9
  4096b2:	mov    ebp,0x16dbc0e8
  4096b7:	sub    bl,BYTE PTR [ecx]
  4096b9:	jo     0x4096fe
  4096bb:	fdivr  st,st(3)
  4096bd:	mov    esp,0xc7727f1c
  4096c2:	xchg   ecx,eax
  4096c3:	mov    DWORD PTR [ebx-0x2f],edi
  4096c6:	cs pop edx
  4096c8:	mov    eax,0xc1134170
  4096cd:	aam    0xde
  4096cf:	call   0x2db28d70
  4096d4:	nop
  4096d5:	repz xor esp,DWORD PTR [ebp+edx*8-0x6840ac57]
  4096dd:	sbb    ch,BYTE PTR [ebx-0x34]
  4096e0:	inc    edx
  4096e1:	cli    
  4096e2:	pop    ds
  4096e3:	and    DWORD PTR fs:[edx+eax*8+0x364efaff],eax
  4096eb:	xchg   ecx,eax
  4096ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096ed:	dec    eax
  4096ee:	and    al,BYTE PTR [edi+0x73]
  4096f1:	cmp    bl,al
  4096f3:	push   0xffffffd5
  4096f5:	inc    eax
  4096f6:	(bad)  
  4096f8:	and    ah,BYTE PTR [eax]
  4096fa:	pusha  
  4096fb:	inc    edx
  4096fc:	gs cmp al,0xb6
  4096ff:	(bad)  
  409700:	ins    DWORD PTR es:[edi],dx
  409701:	jl     0x40973c
  409703:	shl    BYTE PTR [esi+0x9bb56dd],cl
  409709:	and    eax,DWORD PTR [ecx]
  40970b:	pop    edx
  40970c:	inc    ebp
  40970d:	ds mov bl,0x3e
  409710:	and    al,0xc3
  409712:	push   cs
  409713:	push   ebx
  409714:	iret   
  409715:	xor    al,0xf6
  409717:	push   edi
  409718:	fs mov ebx,ds
  40971b:	inc    ebx
  40971c:	xor    esp,DWORD PTR [eax+0x3197903e]
  409722:	and    eax,0x74c55807
  409727:	cmp    esp,ebx
  409729:	icebp  
  40972a:	sbb    eax,0x41be29ec
  40972f:	dec    eax
  409730:	icebp  
  409731:	stc    
  409732:	dec    edx
  409733:	fcmovb st,st(7)
  409735:	mov    eax,ds:0x3af4a0d9
  40973a:	shl    DWORD PTR [eax-0x793602fd],1
  409740:	xchg   esi,eax
  409741:	repnz cmp BYTE PTR [esi],0x8
  409745:	(bad)  
  409746:	push   ebx
  409747:	sub    DWORD PTR [ebx],0x6b
  40974a:	rcl    DWORD PTR [edi+0xd],1
  40974d:	lods   al,BYTE PTR ds:[esi]
  40974e:	clc    
  40974f:	xlat   BYTE PTR ds:[ebx]
  409750:	inc    ebx
  409751:	xchg   BYTE PTR [eax+0x4aca74c3],dh
  409757:	outs   dx,DWORD PTR ds:[esi]
  409758:	jae    0x40977f
  40975a:	xor    al,0xa
  40975c:	pop    edi
  40975d:	inc    ebx
  40975e:	mov    eax,DWORD PTR [ebp-0x1a]
  409761:	das    
  409762:	jmp    FWORD PTR [ebp+eax*2+0x17]
  409766:	aad    0xbf
  409768:	pop    esi
  409769:	sti    
  40976a:	jno    0x40979b
  40976c:	mov    dl,0x3b
  40976e:	ffreep st(6)
  409770:	xor    BYTE PTR [edx+0x0],al
  409773:	loope  0x4097d5
  409775:	shl    ah,0x83
  409778:	dec    eax
  409779:	clc    
  40977a:	and    eax,0x623b972b
  40977f:	(bad)  
  409780:	pushf  
  409781:	mov    bl,0xc9
  409783:	xor    eax,0x71c68f34
  409788:	outs   dx,BYTE PTR ds:[esi]
  409789:	dec    ebp
  40978a:	fwait
  40978b:	ja     0x4097df
  40978d:	mov    al,ds:0xf683fab
  409792:	cmp    eax,0x6be9bcd7
  409797:	cdq    
  409798:	(bad)  
  40979a:	neg    DWORD PTR [ecx-0x7e]
  40979d:	xchg   ebx,eax
  40979e:	ret    
  40979f:	into   
  4097a0:	popf   
  4097a1:	mov    ebp,0xa1cf63f4
  4097a6:	lock loope 0x409738
  4097a9:	lahf   
  4097aa:	jbe    0x409803
  4097ac:	pop    ebx
  4097ad:	pushf  
  4097ae:	push   edx
  4097af:	xchg   esp,eax
  4097b0:	xor    al,0x14
  4097b2:	add    DWORD PTR [ebx],eax
  4097b4:	jno    0x409799
  4097b6:	pushf  
  4097b7:	imul   eax,DWORD PTR [edx+0x8],0x6d2e3e0d
  4097be:	mov    BYTE PTR [ebp+0x7eb02cdc],0xf0
  4097c5:	dec    esp
  4097c6:	popf   
  4097c7:	cmp    ah,BYTE PTR cs:[ecx+0x39]
  4097cb:	sub    cl,BYTE PTR [edi]
  4097cd:	push   esi
  4097ce:	ror    BYTE PTR [esi+0x47f30b32],1
  4097d4:	aad    0xb3
  4097d6:	lea    esp,[eax+0x6825fbde]
  4097dc:	in     eax,dx
  4097dd:	mov    cl,cl
  4097df:	mov    al,0xfd
  4097e1:	pop    ebx
  4097e2:	jnp    0x4097d2
  4097e4:	mov    ecx,0x2405beaa
  4097e9:	jmp    0xc485:0x7f6cadfb
  4097f0:	xor    DWORD PTR [ecx],ebx
  4097f2:	les    esi,FWORD PTR [ebp-0x61]
  4097f5:	mov    bh,BYTE PTR [ecx-0x21]
  4097f8:	cld    
  4097f9:	xchg   ecx,eax
  4097fa:	jmp    0x409838
  4097fc:	sbb    cl,BYTE PTR [ebx]
  4097fe:	lods   al,BYTE PTR ds:[esi]
  4097ff:	xchg   esi,eax
  409800:	push   edx
  409801:	mov    al,ds:0x6452d5af
  409806:	sub    edx,DWORD PTR [eax-0x2988ba71]
  40980c:	pop    ss
  40980d:	adc    cl,BYTE PTR [ebp+0x1c]
  409810:	std    
  409811:	in     al,0x70
  409813:	or     ebp,ebp
  409815:	jg     0x4097ea
  409817:	dec    ebp
  409818:	in     eax,0x26
  40981a:	nop
  40981b:	sub    al,0xf9
  40981d:	push   esi
  40981e:	fwait
  40981f:	repz push edx
  409821:	inc    DWORD PTR [ebx+0x122ef164]
  409827:	addr16 out 0x68,eax
  40982a:	or     al,0x25
  40982c:	inc    edi
  40982d:	ds push esi
  40982f:	jae    0x4098a5
  409831:	iret   
  409832:	inc    ebp
  409833:	add    al,0xe7
  409835:	sbb    esp,esp
  409837:	shl    BYTE PTR [eax+0x498345f1],cl
  40983d:	push   ecx
  40983e:	sti    
  40983f:	xchg   edi,eax
  409840:	or     dh,BYTE PTR [ecx]
  409842:	daa    
  409843:	aas    
  409844:	xchg   DWORD PTR [esi-0x1d5b04db],ebx
  40984a:	xor    BYTE PTR [ebp+ecx*8+0x16e1729b],bl
  409851:	(bad)  
  409852:	push   ebx
  409853:	bound  ecx,QWORD PTR [ebp-0x12]
  409856:	sbb    DWORD PTR [ebx-0x1110544f],eax
  40985c:	fimul  DWORD PTR [esi-0x1602d27]
  409862:	nop
  409863:	outs   dx,DWORD PTR ds:[esi]
  409864:	sti    
  409865:	push   ebp
  409866:	sub    DWORD PTR [ebx-0x217f7079],esp
  40986c:	fdiv   QWORD PTR [ebp+0x4a]
  40986f:	jmp    0x409855
  409871:	and    eax,ebx
  409873:	loop   0x4098e5
  409875:	xlat   BYTE PTR ds:[ebx]
  409876:	sbb    bh,BYTE PTR [ebx-0x73]
  409879:	fisubr DWORD PTR [esi]
  40987b:	fcom   st(1)
  40987d:	lahf   
  40987e:	scas   eax,DWORD PTR es:[edi]
  40987f:	dec    esp
  409880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409881:	push   eax
  409882:	out    0x97,al
  409884:	lock sti 
  409886:	ret    0x789d
  409889:	inc    esi
  40988a:	test   eax,0x38889fd4
  40988f:	outs   dx,BYTE PTR ds:[esi]
  409890:	xchg   ecx,eax
  409891:	lahf   
  409892:	cmp    esp,DWORD PTR [ebx]
  409894:	push   ss
  409895:	pushf  
  409896:	test   al,0x84
  409898:	(bad)  
  409899:	das    
  40989a:	push   ds
  40989b:	test   eax,0xe487f6ee
  4098a0:	fwait
  4098a1:	cmc    
  4098a2:	rol    BYTE PTR [ebx+ebp*2-0x30],1
  4098a6:	cdq    
  4098a7:	leave  
  4098a8:	xor    eax,0x3cfcc01a
  4098ad:	aam    0xfa
  4098af:	jnp    0x40983a
  4098b1:	or     cl,BYTE PTR [esi+0x7112f77d]
  4098b7:	frstor [ebx]
  4098b9:	enter  0x1e94,0x4
  4098bd:	(bad)  
  4098be:	mov    esp,0x3709d5d3
  4098c3:	stos   DWORD PTR es:[edi],eax
  4098c4:	add    al,0x6c
  4098c6:	jp     0x4098f9
  4098c8:	adc    DWORD PTR [edi],esp
  4098ca:	fisttp QWORD PTR [ecx]
  4098cc:	(bad)  
  4098cd:	ss dec ecx
  4098cf:	xor    eax,0x9cdd2f89
  4098d4:	repnz pop ebx
  4098d6:	(bad)  
  4098d8:	fmul   QWORD PTR [ebp+0x1cea8174]
  4098de:	test   BYTE PTR [ecx],0x2c
  4098e1:	add    al,0xfe
  4098e3:	cmc    
  4098e4:	cmovae ebp,DWORD PTR [ecx-0xe7ee7d]
  4098eb:	loop   0x4098ef
  4098ed:	sbb    ah,0x29
  4098f0:	fistp  DWORD PTR [esi-0x40945ba4]
  4098f6:	dec    esp
  4098f7:	sar    BYTE PTR [ecx-0x53565702],1
  4098fd:	mov    esi,0x790951d7
  409902:	arpl   WORD PTR [esi],bp
  409904:	mov    dh,0x49
  409906:	div    DWORD PTR ds:0x2d3e006b
  40990c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40990d:	pop    esi
  40990e:	popa   
  40990f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409910:	jmp    0x4098bf
  409912:	ds (bad) 
  409914:	fwait
  409915:	imul   BYTE PTR [ecx+0x3f]
  409918:	std    
  409919:	push   es
  40991a:	icebp  
  40991b:	push   ss
  40991c:	shl    DWORD PTR [ebp-0x4ec9ba8b],0xbd
  409923:	cmp    ecx,DWORD PTR [edx+0x51]
  409926:	fild   DWORD PTR [edi-0x256901dd]
  40992c:	cdq    
  40992d:	jnp    0x409978
  40992f:	and    cl,dl
  409931:	adc    eax,0xc838e41f
  409936:	inc    ebx
  409937:	mov    edi,0x53c4928d
  40993c:	(bad)  
  40993d:	ficomp WORD PTR [eax-0x4f261d67]
  409943:	or     BYTE PTR [ebp+0x3d],ah
  409946:	adc    BYTE PTR [ecx+eiz*8-0x20],cl
  40994a:	stos   BYTE PTR es:[edi],al
  40994b:	pop    ebx
  40994c:	ficom  DWORD PTR [edi-0x38]
  40994f:	clc    
  409950:	push   ebp
  409951:	mov    esi,DWORD PTR [ebp+0x7e9165de]
  409957:	mov    ds:0x23f435df,al
  40995c:	and    eax,0xb3f5061a
  409961:	fstp   DWORD PTR [edx+0x46142b60]
  409967:	popf   
  409968:	aad    0xe4
  40996a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996b:	(bad)  
  40996c:	push   ss
  40996d:	mov    esi,0x42487a75
  409972:	push   ebp
  409973:	ja     0x4098f7
  409975:	jb     0x4099b7
  409977:	mov    edx,DWORD PTR [ecx]
  409979:	or     DWORD PTR [edi+edi*1-0x6a6cb6c],esi
  409980:	mov    bl,0xfa
  409982:	jmp    0x7c8145e4
  409987:	cwde   
  409988:	xchg   ebp,eax
  409989:	stc    
  40998a:	jmp    0x4099a0
  40998c:	adc    DWORD PTR [eax+0x42],ecx
  40998f:	aad    0xa
  409991:	sub    al,0x2c
  409993:	jl     0x4099bd
  409995:	xchg   edx,eax
  409996:	out    dx,al
  409997:	inc    edx
  409998:	jge    0x409939
  40999a:	enter  0x4859,0x91
  40999e:	xchg   esp,eax
  40999f:	fiadd  WORD PTR [eax]
  4099a1:	neg    BYTE PTR [edi-0x6d8eb848]
  4099a7:	retf   
  4099a8:	jb     0x40998d
  4099aa:	mov    ebx,0xbca2ada8
  4099af:	ss jl  0x409945
  4099b2:	jmp    0xdd04:0xc6a845a4
  4099b9:	and    DWORD PTR [edx+0x55a850cc],esp
  4099bf:	js     0x409a21
  4099c1:	inc    esp
  4099c2:	bound  ebx,QWORD PTR [ecx+ebp*4]
  4099c5:	int    0x9a
  4099c7:	cmp    BYTE PTR [ebp+0x46],0xc0
  4099cb:	nop
  4099cc:	in     al,dx
  4099cd:	xchg   ecx,eax
  4099ce:	cmp    DWORD PTR [edx],ebx
  4099d0:	call   0x798f5a7f
  4099d5:	push   ebp
  4099d6:	add    BYTE PTR [ecx+0x6e414bb8],dl
  4099dc:	pop    ss
  4099dd:	aad    0x2f
  4099df:	mov    dh,0xf5
  4099e1:	xchg   ebx,eax
  4099e2:	call   0x3e53cc39
  4099e7:	fmulp  st(2),st
  4099e9:	mov    dh,0x9c
  4099eb:	jbe    0x4099e4
  4099ed:	sub    eax,0x6c7b58e5
  4099f2:	push   esp
  4099f3:	leave  
  4099f4:	outs   dx,DWORD PTR ds:[esi]
  4099f5:	std    
  4099f6:	or     BYTE PTR [edx],bh
  4099f8:	xchg   edi,eax
  4099f9:	dec    eax
  4099fa:	and    DWORD PTR [edx+edx*1+0x7a51ed50],ebx
  409a01:	add    DWORD PTR [esi],ebx
  409a03:	fs out 0x1b,al
  409a06:	daa    
  409a07:	xchg   DWORD PTR ds:0x421f5df4,esi
  409a0d:	or     ebx,ecx
  409a0f:	push   es
  409a10:	(bad)
  409a13:	or     DWORD PTR [ebp+ebx*8-0x22953c1d],ecx
  409a1a:	aaa    
  409a1b:	not    edi
  409a1d:	arpl   WORD PTR [esi-0x56c6b7c1],cx
  409a23:	mov    ds:0x2b3cd500,eax
  409a28:	jae    0x4099cb
  409a2a:	lds    eax,FWORD PTR [ebx+0x578c969]
  409a30:	fsubrp st(1),st
  409a32:	xchg   BYTE PTR [ebx+0x6f],cl
  409a35:	outs   dx,DWORD PTR ds:[esi]
  409a36:	xchg   ebx,eax
  409a37:	add    DWORD PTR [edx],0x7
  409a3a:	jmp    0x48507218
  409a3f:	pop    ebp
  409a40:	leave  
  409a41:	pop    ebp
  409a42:	mov    bh,0xb2
  409a44:	(bad)  
  409a46:	pop    esi
  409a47:	loop   0x409a71
  409a49:	pusha  
  409a4a:	cs push 0x43580b7d
  409a50:	jno    0x409a26
  409a52:	mov    esi,0x66aa6f1e
  409a57:	adc    ch,BYTE PTR [ecx-0x11d45b78]
  409a5d:	pushf  
  409a5e:	shr    BYTE PTR [eax+0xc93b9e8],0x4f
  409a65:	inc    ebx
  409a66:	mov    WORD PTR [ebx],?
  409a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a69:	lahf   
  409a6a:	cmc    
  409a6b:	mov    DWORD PTR [eax],ebx
  409a6d:	mov    fs,ebx
  409a6f:	pop    ecx
  409a70:	aas    
  409a71:	rcl    ebp,0x3f
  409a74:	mov    DWORD PTR [ecx],ecx
  409a76:	popa   
  409a77:	jecxz  0x409ad5
  409a79:	mov    gs,WORD PTR [esp+eiz*2-0x6a5401f3]
  409a80:	stos   DWORD PTR es:[edi],eax
  409a81:	xor    cl,BYTE PTR [esi+0x4f]
  409a84:	bound  edx,QWORD PTR [ebp-0x7f]
  409a87:	or     BYTE PTR [ebp-0x7d7f6737],bh
  409a8d:	ins    BYTE PTR es:[edi],dx
  409a8e:	mov    WORD PTR [esi-0x29],fs
  409a91:	mov    cl,0x38
  409a93:	in     al,0x80
  409a95:	mov    ah,0x80
  409a97:	ins    BYTE PTR es:[edi],dx
  409a98:	fwait
  409a99:	mov    DWORD PTR [ebx+0x15],edi
  409a9c:	xor    eax,ecx
  409a9e:	pop    esi
  409a9f:	aaa    
  409aa0:	adc    edi,DWORD PTR [eax+ebp*8-0x6d65ac39]
  409aa7:	mov    ds:0x19367785,al
  409aac:	pop    es
  409aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aae:	push   ss
  409aaf:	test   BYTE PTR [ebp-0x1b],ch
  409ab2:	adc    DWORD PTR [edi+0x30],0x9c72b916
  409ab9:	pop    es
  409aba:	in     al,dx
  409abb:	xor    BYTE PTR [edi-0x146cce2e],0xde
  409ac2:	jae    0x409acb
  409ac4:	xchg   BYTE PTR [edi+0x75ccb7a2],bl
  409aca:	cmp    bh,BYTE PTR [edx]
  409acc:	mov    edx,eax
  409ace:	movhps xmm4,QWORD PTR [edx+eax*2+0x2d]
  409ad3:	cmp    al,0x92
  409ad5:	ret    
  409ad6:	push   ebx
  409ad7:	mov    ebp,0x44edac3
  409adc:	sbb    ch,BYTE PTR [edx+ecx*1]
  409adf:	lea    edx,[esi+0x609a5d36]
  409ae5:	cdq    
  409ae6:	push   edi
  409ae7:	sahf   
  409ae8:	arpl   WORD PTR [eax+0x6],ax
  409aeb:	adc    al,0x96
  409aed:	push   ebx
  409aee:	popa   
  409aef:	shl    BYTE PTR [edi+0x6e4ce664],cl
  409af5:	arpl   WORD PTR [edx],bp
  409af7:	push   ds
  409af8:	pop    ebp
  409af9:	add    BYTE PTR ds:0xd2091b,dl
  409aff:	jecxz  0x409ad8
  409b01:	jne    0x409b5c
  409b03:	rcr    BYTE PTR [esi+ecx*4+0x25570d0f],1
  409b0a:	sbb    DWORD PTR [esi],eax
  409b0c:	pop    ebx
  409b0d:	mov    eax,0x669cb1c5
  409b12:	shr    BYTE PTR [esi],1
  409b14:	daa    
  409b15:	test   DWORD PTR [edx+edx*2-0x39],eax
  409b19:	mov    al,ds:0xdabf4aff
  409b1e:	add    BYTE PTR [ebx-0x726b0866],0x87
  409b25:	stos   DWORD PTR es:[edi],eax
  409b26:	inc    ebx
  409b27:	call   0x33a6:0x1f9999
  409b2e:	mov    cl,0x6c
  409b30:	arpl   bp,ax
  409b32:	fidivr WORD PTR [edx+eiz*8+0xb]
  409b36:	jle    0x409b6b
  409b38:	ret    0xf5fa
  409b3b:	dec    eax
  409b3c:	(bad)  
  409b3d:	push   eax
  409b3e:	pop    esi
  409b3f:	push   ds
  409b40:	test   eax,0x8f811381
  409b45:	sub    ecx,DWORD PTR [ebp+0x7b]
  409b48:	fnstsw WORD PTR [edx]
  409b4a:	enter  0x1783,0x6
  409b4e:	adc    dh,BYTE PTR [edi-0x127225b9]
  409b54:	push   ecx
  409b55:	rcl    cl,0x17
  409b58:	sbb    ch,BYTE PTR [esi+0x75]
  409b5b:	retf   0x6b3d
  409b5e:	mov    ecx,DWORD PTR [ebp+edx*2-0x2e]
  409b62:	aam    0xf1
  409b64:	(bad)  
  409b66:	std    
  409b67:	clc    
  409b68:	jmp    0xe230dded
  409b6d:	push   ss
  409b6e:	push   eax
  409b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b70:	mov    al,ds:0x7814147
  409b75:	stos   BYTE PTR es:[edi],al
  409b76:	push   eax
  409b77:	and    ebp,DWORD PTR [ebp+0x33]
  409b7a:	(bad)  
  409b7b:	mov    bh,0x7d
  409b7d:	leave  
  409b7e:	pop    es
  409b7f:	mov    bh,0xf1
  409b81:	jb     0x409bfa
  409b83:	sub    eax,DWORD PTR [ebp+0x36]
  409b86:	mov    ebp,0x3063cfd8
  409b8b:	aaa    
  409b8c:	call   0xe308e964
  409b91:	call   0x2d6f3df9
  409b96:	or     al,0x23
  409b98:	and    eax,0x22338162
  409b9d:	stos   BYTE PTR es:[edi],al
  409b9e:	dec    esp
  409b9f:	je     0x409b75
  409ba1:	mov    dl,0x95
  409ba3:	pop    ss
  409ba4:	jp     0x409b9a
  409ba6:	dec    edi
  409ba7:	xor    BYTE PTR [eax],ah
  409ba9:	mov    eax,ds:0xb6af7121
  409bae:	push   ebx
  409baf:	js     0x409b6e
  409bb1:	xchg   esi,eax
  409bb2:	ret    0x43a0
  409bb5:	xchg   ecx,eax
  409bb6:	lahf   
  409bb7:	data16 aam 0x7d
  409bba:	inc    esp
  409bbb:	hlt    
  409bbc:	ret    
  409bbd:	fld    QWORD PTR [edi]
  409bbf:	lea    edx,[edi+0x17a364a7]
  409bc5:	test   BYTE PTR [ebx+0x320ff4e6],dl
  409bcb:	xchg   esi,eax
  409bcc:	cmp    DWORD PTR [ebx-0x23eff07],ecx
  409bd2:	mov    eax,ds:0xf08fbb65
  409bd7:	sub    BYTE PTR [esi+0x15],ch
  409bda:	test   DWORD PTR [ecx+eiz*4-0x32],ebx
  409bde:	push   edx
  409bdf:	add    ch,BYTE PTR [esi-0x66]
  409be2:	mov    bl,0x39
  409be4:	scas   al,BYTE PTR es:[edi]
  409be5:	cmp    ah,dh
  409be7:	les    edi,FWORD PTR [esi-0x2d]
  409bea:	lods   al,BYTE PTR ds:[esi]
  409beb:	aad    0xce
  409bed:	ja     0x409c58
  409bef:	das    
  409bf0:	loopne 0x409c70
  409bf2:	loopne 0x409bcb
  409bf4:	dec    esi
  409bf5:	les    bx,DWORD PTR [ecx+0x69]
  409bf9:	ret    
  409bfa:	imul   ebx,DWORD PTR [edi-0x29],0x3c78539
  409c01:	push   edx
  409c02:	jmp    0x409c6d
  409c04:	popf   
  409c05:	mov    eax,0x3dae92d1
  409c0a:	out    dx,al
  409c0b:	ret    
  409c0c:	jbe    0x409c26
  409c0e:	cmp    edi,0xec25d223
  409c14:	or     BYTE PTR [edi-0x25f4e71c],dl
  409c1a:	add    esp,DWORD PTR [ecx]
  409c1c:	adc    DWORD PTR [ebx],eax
  409c1e:	push   cs
  409c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c20:	(bad)  
  409c21:	(bad)  
  409c22:	enter  0x5077,0xd4
  409c26:	push   ds
  409c27:	adc    BYTE PTR [edi-0xe],al
  409c2a:	mov    eax,0xf674955
  409c2f:	in     eax,dx
  409c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c31:	cli    
  409c32:	out    0x41,eax
  409c34:	mov    bh,0x68
  409c36:	xchg   edx,edi
  409c38:	mov    al,BYTE PTR [ecx+0x4d]
  409c3b:	sbb    BYTE PTR [eax],bl
  409c3d:	or     esp,esp
  409c3f:	sub    al,0xe1
  409c41:	in     al,0x83
  409c43:	ds jmp 0x409c27
  409c46:	cmp    DWORD PTR ds:0x2fdc75f3,esi
  409c4c:	call   0x8e75e779
  409c51:	repz jmp 0x6dd1237e
  409c57:	mov    eax,ds:0xc04dc8d4
  409c5c:	sbb    edi,eax
  409c5e:	fiadd  WORD PTR [edx]
  409c60:	mov    bl,0xde
  409c62:	jl     0x409c7a
  409c64:	das    
  409c65:	das    
  409c66:	dec    ebp
  409c67:	inc    ebx
  409c68:	loope  0x409cc6
  409c6a:	push   ebp
  409c6b:	jae    0x409c0b
  409c6d:	(bad)  
  409c6e:	adc    al,0xf5
  409c70:	ds inc esi
  409c72:	adc    esp,DWORD PTR [ecx-0x24]
  409c75:	fdiv   QWORD PTR [ebx]
  409c77:	daa    
  409c78:	adc    eax,0x4719974f
  409c7d:	xor    dl,bh
  409c7f:	adc    ah,BYTE PTR [ebp-0x10a64083]
  409c85:	enter  0x4852,0xc0
  409c89:	scas   al,BYTE PTR es:[edi]
  409c8a:	fsub   QWORD PTR [eax-0x6e]
  409c8d:	call   0x4698f6fb
  409c92:	lea    eax,[eax]
  409c94:	cwde   
  409c95:	stc    
  409c96:	int    0x6b
  409c98:	ja     0x409cc0
  409c9a:	sub    dl,BYTE PTR [edi]
  409c9c:	cmp    BYTE PTR [ebx-0x46dfdee],dh
  409ca2:	pop    esp
  409ca3:	(bad)  
  409ca4:	sti    
  409ca5:	jae    0x409cf5
  409ca7:	loope  0x409c86
  409ca9:	add    BYTE PTR [edi+ebx*1],dl
  409cac:	inc    esi
  409cad:	loop   0x409ccd
  409caf:	or     eax,0x3ecc3479
  409cb4:	in     eax,0x5b
  409cb6:	test   DWORD PTR [eax-0x1e],edx
  409cb9:	sub    BYTE PTR [ebx],0x4d
  409cbc:	mov    al,BYTE PTR ds:0x50e221b5
  409cc2:	push   cs
  409cc3:	(bad)  [ebp-0x2d]
  409cc7:	popa   
  409cc8:	ror    BYTE PTR [ecx-0x7f],0x9d
  409ccc:	int3   
  409ccd:	outs   dx,DWORD PTR ds:[esi]
  409cce:	das    
  409ccf:	push   ebx
  409cd0:	sub    BYTE PTR gs:[ecx+edx*1+0x65dc3dbf],bl
  409cd8:	sbb    BYTE PTR [esi-0x5c],bh
  409cdb:	cmp    bl,BYTE PTR ds:0x860ef2be
  409ce1:	or     eax,esp
  409ce3:	jg     0x409d53
  409ce5:	enter  0x41dc,0x3f
  409ce9:	std    
  409cea:	dec    edi
  409ceb:	js     0x409c9e
  409ced:	(bad)  
  409cee:	xor    ecx,DWORD PTR [esi]
  409cf0:	jl     0x409d1c
  409cf2:	mov    bl,0x60
  409cf4:	(bad)  
  409cf5:	fsubr  DWORD PTR [eax]
  409cf7:	pop    ebp
  409cf8:	std    
  409cf9:	sbb    al,0x76
  409cfb:	enter  0x5d97,0x27
  409cff:	mov    esi,0x862481a3
  409d04:	outs   dx,DWORD PTR ds:[esi]
  409d05:	sahf   
  409d06:	lods   al,BYTE PTR ds:[esi]
  409d07:	(bad)  
  409d0a:	push   0x6d
  409d0c:	lods   eax,DWORD PTR ds:[esi]
  409d0d:	jle    0x409d57
  409d0f:	jne    0x409cd8
  409d11:	nop
  409d12:	test   DWORD PTR [esi-0x20002172],esp
  409d18:	les    ebp,FWORD PTR [edi]
  409d1a:	popf   
  409d1b:	int3   
  409d1c:	ins    BYTE PTR es:[edi],dx
  409d1d:	bound  ebx,QWORD PTR [eax-0x26]
  409d20:	cmp    eax,0x7249f33
  409d25:	sti    
  409d26:	inc    edx
  409d27:	ins    DWORD PTR es:[edi],dx
  409d28:	cwde   
  409d29:	loop   0x409d78
  409d2b:	jp     0x409d9a
  409d2d:	ret    
  409d2e:	sub    ah,BYTE PTR [eax+0x66]
  409d31:	push   edx
  409d32:	cmp    BYTE PTR [edx-0x1895f60b],al
  409d38:	jmp    0x409cf4
  409d3a:	and    bl,BYTE PTR ds:0x863f5f94
  409d40:	pop    esp
  409d41:	das    
  409d42:	int3   
  409d43:	popa   
  409d44:	push   cs
  409d45:	pop    ecx
  409d46:	cmp    al,BYTE PTR [edx+ebp*1]
  409d49:	bound  ebx,QWORD PTR [edx]
  409d4b:	stc    
  409d4c:	dec    esp
  409d4d:	dec    ebx
  409d4e:	cmp    bl,cl
  409d50:	fsubr  DWORD PTR [esi+0x70c313c7]
  409d56:	pop    ds
  409d57:	ins    DWORD PTR es:[edi],dx
  409d58:	xchg   edx,eax
  409d59:	cdq    
  409d5a:	sub    al,0x9a
  409d5c:	sub    al,dl
  409d5e:	idiv   BYTE PTR [ebp+0x16]
  409d61:	gs jge 0x409d15
  409d64:	add    ebx,DWORD PTR [ebp+0x2b]
  409d67:	dec    ecx
  409d68:	or     DWORD PTR [edi],edx
  409d6a:	xor    al,0x9
  409d6c:	test   eax,0x26581b8e
  409d71:	or     cl,dh
  409d73:	pop    esi
  409d74:	jnp    0x409da1
  409d76:	mov    cl,0xc5
  409d78:	push   eax
  409d79:	(bad)  
  409d7a:	in     eax,dx
  409d7b:	pop    edi
  409d7c:	dec    ebx
  409d7d:	push   0xffffff85
  409d7f:	mov    ds:0x4a630b6c,al
  409d84:	mov    eax,ds:0xc87bc3d7
  409d89:	call   0xb9a896df
  409d8e:	inc    ebx
  409d8f:	or     eax,0x3eb00a2c
  409d94:	or     ecx,DWORD PTR ss:[eax+eiz*1+0x19]
  409d99:	pop    ebx
  409d9a:	in     eax,0x36
  409d9c:	jns    0x409d80
  409d9e:	aaa    
  409d9f:	lahf   
  409da0:	into   
  409da1:	imul   BYTE PTR [esi-0x71]
  409da4:	jge    0x409d58
  409da6:	add    BYTE PTR [ebx],dh
  409da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409da9:	jmp    0x409e20
  409dab:	rcr    BYTE PTR [edi-0x5dfa0cd6],cl
  409db1:	ror    BYTE PTR [edx],cl
  409db3:	lods   al,BYTE PTR ds:[esi]
  409db4:	lahf   
  409db5:	push   esi
  409db6:	cmc    
  409db7:	push   edx
  409db8:	push   es
  409db9:	jne    0x409d5d
  409dbb:	scas   eax,DWORD PTR es:[edi]
  409dbc:	sub    esp,DWORD PTR fs:[edi+0x1d40de2a]
  409dc3:	inc    edx
  409dc4:	gs cmp al,0x4e
  409dc7:	std    
  409dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dc9:	iret   
  409dca:	cmp    al,0xb2
  409dcc:	call   0x1d4f1269
  409dd1:	and    cl,BYTE PTR [ecx-0x197f7508]
  409dd7:	sbb    DWORD PTR [esi],edi
  409dd9:	mov    eax,0xb179cfd7
  409dde:	aam    0x3f
  409de0:	sahf   
  409de1:	(bad)  
  409de2:	(bad)  
  409de3:	(bad)  
  409de4:	rcl    BYTE PTR [esp+edi*4+0x57c9c37b],cl
  409deb:	hlt    
  409dec:	les    edi,FWORD PTR [edx+0xf]
  409def:	sub    eax,0x36292a3b
  409df4:	jbe    0x409dfc
  409df6:	daa    
  409df7:	mov    eax,0xa2a35865
  409dfc:	ret    0x911e
  409dff:	loop   0x409ddf
  409e01:	xchg   esp,eax
  409e02:	pop    ds
  409e03:	js     0x409db1
  409e05:	and    BYTE PTR [eax+ecx*1-0x4cf7ab19],ah
  409e0c:	lea    ebx,ds:0xccf87a1f
  409e12:	leave  
  409e13:	jle    0x409e56
  409e15:	xchg   esi,eax
  409e16:	imul   eax,DWORD PTR [ecx],0x6079bf29
  409e1c:	cmp    edi,DWORD PTR [eax+edx*2+0x536dbb97]
  409e23:	push   0x84601d36
  409e28:	(bad)  
  409e29:	dec    esi
  409e2a:	pop    ecx
  409e2b:	xchg   DWORD PTR ds:0x6a86de8,ecx
  409e31:	push   esp
  409e32:	cmp    BYTE PTR [esi],ch
  409e34:	out    0xa9,eax
  409e36:	outs   dx,DWORD PTR ds:[esi]
  409e37:	repz icebp 
  409e39:	in     al,0xae
  409e3b:	jmp    0x84190eb4
  409e40:	dec    esp
  409e41:	mov    ah,0x59
  409e43:	sub    bl,cl
  409e45:	test   al,0x63
  409e47:	retf   
  409e48:	inc    ecx
  409e49:	push   edi
  409e4a:	add    edx,DWORD PTR [ecx+ebp*8+0x3f3eb57a]
  409e51:	loop   0x409e25
  409e53:	dec    ecx
  409e54:	mov    eax,0x47a4155e
  409e59:	push   esp
  409e5a:	test   eax,0xb0916363
  409e5f:	jge    0x409e33
  409e61:	out    0x17,al
  409e63:	shr    BYTE PTR [eax],cl
  409e65:	in     eax,dx
  409e66:	or     BYTE PTR ds:0xe212d313,dl
  409e6c:	dec    ecx
  409e6d:	loop   0x409ed2
  409e6f:	aaa    
  409e70:	pop    edi
  409e71:	stos   BYTE PTR es:[edi],al
  409e72:	mov    esp,0x96362a65
  409e77:	adc    BYTE PTR [ebp-0x11],ch
  409e7a:	test   DWORD PTR [eax-0x29],eax
  409e7d:	xchg   esi,eax
  409e7e:	pop    edi
  409e7f:	xchg   ebp,eax
  409e80:	xchg   edx,eax
  409e81:	cmp    ebp,DWORD PTR [esi-0x651bb574]
  409e87:	pop    es
  409e88:	gs in  al,0xf2
  409e8b:	sub    al,0x3e
  409e8d:	adc    DWORD PTR [ebp+0xe],ebx
  409e90:	or     esp,DWORD PTR [esi-0x6a]
  409e93:	retf   0xb921
  409e96:	out    dx,eax
  409e97:	lock add ebp,eax
  409e9a:	cli    
  409e9b:	adc    esi,DWORD PTR [eax+0x5f]
  409e9e:	iret   
  409e9f:	cld    
  409ea0:	aaa    
  409ea1:	je     0x409ebe
  409ea3:	mov    esi,0xc2ac70a6
  409ea8:	mov    ecx,0x3e26163d
  409ead:	mov    ch,0x3c
  409eaf:	out    dx,eax
  409eb0:	pushf  
  409eb1:	popa   
  409eb2:	fistp  QWORD PTR [ebp+0xd6f9daa]
  409eb8:	(bad)  
  409eb9:	fs cdq 
  409ebb:	hlt    
  409ebc:	or     DWORD PTR [edi-0x2cf610f3],esp
  409ec2:	out    dx,al
  409ec3:	daa    
  409ec4:	mov    dh,0xfd
  409ec6:	xchg   esp,eax
  409ec7:	ror    DWORD PTR [edi+0x74],1
  409eca:	and    eax,0x422b45e4
  409ecf:	mov    ebx,0xa10e1940
  409ed4:	sub    ebp,DWORD PTR [eax]
  409ed6:	ret    0x3b5e
  409ed9:	inc    eax
  409eda:	push   ecx
  409edb:	push   edi
  409edc:	jno    0x409e94
  409ede:	xchg   ebp,eax
  409edf:	dec    eax
  409ee0:	adc    DWORD PTR [ebp-0x161be3af],esp
  409ee6:	iret   
  409ee7:	xor    ah,BYTE PTR [edx]
  409ee9:	push   esp
  409eea:	pop    ss
  409eeb:	adc    eax,DWORD PTR [edi+ebx*2]
  409eee:	pushf  
  409eef:	cmp    BYTE PTR es:[eax-0x38c84072],0x6c
  409ef7:	dec    esi
  409ef8:	mov    bl,BYTE PTR [eax]
  409efa:	mov    DWORD PTR [eax+0x3],esp
  409efd:	test   eax,0xefe6de8d
  409f02:	jns    0x409eb1
  409f04:	sub    ecx,DWORD PTR [edi-0x342f6c70]
  409f0a:	cmp    eax,0x3cf21270
  409f0f:	fisttp DWORD PTR [ebp-0x4f]
  409f12:	loop   0x409ed7
  409f14:	xor    eax,0xaa8d0af1
  409f19:	mov    bl,bh
  409f1b:	stos   DWORD PTR es:[edi],eax
  409f1c:	std    
  409f1d:	xor    BYTE PTR es:[ebx+0x1e],ch
  409f21:	jae    0x409f6a
  409f23:	in     eax,dx
  409f24:	jmp    0xd248:0xc38935b7
  409f2b:	add    edx,ebx
  409f2d:	retf   
  409f2e:	jb     0x409f0a
  409f30:	rdpmc  
  409f32:	or     BYTE PTR [ebx+eiz*2-0x66377a92],bh
  409f39:	fmul   DWORD PTR [edi-0x69]
  409f3c:	xor    eax,0xdb00d7d4
  409f41:	xor    DWORD PTR [eax-0x40],ebp
  409f44:	stos   DWORD PTR es:[edi],eax
  409f45:	out    dx,eax
  409f46:	ss inc edx
  409f48:	add    edi,DWORD PTR es:[eax-0x3f2f3d8d]
  409f4f:	xlat   BYTE PTR ds:[ebx]
  409f50:	sbb    DWORD PTR [ebp+0x57],0x7e
  409f54:	retf   0x3f89
  409f57:	lock pop ecx
  409f59:	push   esp
  409f5a:	lahf   
  409f5b:	push   ecx
  409f5c:	dec    edi
  409f5d:	jge    0x409f4a
  409f5f:	dec    eax
  409f60:	in     eax,dx
  409f61:	ficom  DWORD PTR [ebp-0x40]
  409f64:	addr16 sub eax,0x50e63660
  409f6a:	cmp    ch,cl
  409f6c:	dec    edi
  409f6d:	xor    eax,0x342241d4
  409f72:	mov    edx,0x43ad8c1c
  409f77:	clc    
  409f78:	mov    ecx,0x7ca939d6
  409f7d:	repnz mov ah,0xc4
  409f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f81:	rol    DWORD PTR [esi],0x4a
  409f84:	je     0x409fca
  409f86:	loopne 0x409f56
  409f88:	cmp    eax,0x91665d2d
  409f8d:	mov    esp,0xae7fb7c3
  409f92:	mov    BYTE PTR [ebp-0x22],0xa0
  409f96:	imul   eax,DWORD PTR [esi-0x1ecbb0],0xcba5d453
  409fa0:	dec    esp
  409fa1:	adc    BYTE PTR [eax-0x5f7d1183],ah
  409fa7:	sub    eax,0x86fca587
  409fac:	or     esp,DWORD PTR [ebx+0x53]
  409faf:	repnz mov ebp,0x265e9fae
  409fb5:	sbb    eax,0x2e026bb9
  409fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fbb:	or     DWORD PTR [ecx+0x17ee4452],ebx
  409fc1:	push   ss
  409fc2:	mov    ebp,0x1022ea07
  409fc7:	mov    edx,esp
  409fc9:	js     0x409f93
  409fcb:	inc    ebx
  409fcc:	push   0x5e18afde
  409fd1:	push   ebx
  409fd2:	jle    0x409fd7
  409fd4:	sbb    al,BYTE PTR [edi]
  409fd6:	jle    0x409fb4
  409fd8:	(bad)  [edx-0x78]
  409fdb:	hlt    
  409fdc:	ret    0xf5b9
  409fdf:	cmp    eax,0x8d5e7d81
  409fe4:	sub    BYTE PTR [esi-0x4130cdbd],0x64
  409feb:	push   0x935a3cc8
  409ff0:	xor    BYTE PTR [edx+ecx*4-0x6e55440c],dh
  409ff7:	or     eax,0x71fe1b42
  409ffc:	pop    es
  409ffd:	rcl    ebp,1
  409fff:	add    DWORD PTR [edx],edi
  40a001:	aam    0xb6
  40a003:	dec    ebx
  40a004:	ins    DWORD PTR es:[edi],dx
  40a005:	lds    esi,FWORD PTR [edi-0x66]
  40a008:	push   0x935b409d
  40a00d:	test   al,0x83
  40a00f:	jecxz  0x40a01b
  40a011:	mov    cl,cl
  40a013:	inc    eax
  40a014:	in     eax,dx
  40a015:	sbb    DWORD PTR [ebp+ecx*1-0x2c],ebp
  40a019:	popa   
  40a01a:	jecxz  0x409fda
  40a01c:	fisttp DWORD PTR [ebp+eiz*2-0x65]
  40a020:	test   eax,0x5ea91200
  40a025:	test   al,0xa
  40a027:	cmp    eax,0x9cd4ab0f
  40a02c:	dec    edi
  40a02d:	addr16 pop ebx
  40a02f:	pop    ds
  40a030:	add    dl,BYTE PTR [esi+0x3a078dbb]
  40a036:	mov    cl,0xfb
  40a038:	sar    edi,1
  40a03a:	mov    al,ds:0x8a5d9bf
  40a03f:	out    dx,al
  40a040:	outs   dx,BYTE PTR ds:[esi]
  40a041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a042:	das    
  40a043:	nop
  40a044:	and    BYTE PTR [ebp-0x2e],ah
  40a047:	pop    ds
  40a048:	jo     0x40a0a7
  40a04a:	imul   esi,edi,0x77
  40a04d:	lea    ebx,[ebp-0x3f607e8]
  40a053:	jae    0x40a01d
  40a055:	enter  0x71bb,0xfc
  40a059:	push   edx
  40a05a:	mov    ebp,0xba4314ef
  40a05f:	mov    ebp,0x253b8f81
  40a064:	adc    DWORD PTR [ebx-0x7a],esi
  40a067:	push   eax
  40a068:	pop    eax
  40a069:	jmp    0xb514:0xcce356ce
  40a070:	fcom   QWORD PTR [ebx-0x668c6355]
  40a076:	jmp    0x40a04a
  40a078:	aaa    
  40a079:	jnp    0x40a0ce
  40a07b:	mov    edi,0xe8fc4a63
  40a081:	call   DWORD PTR [esi]
  40a083:	jo     0x40a049
  40a085:	imul   esp,DWORD PTR [ecx],0x69
  40a088:	popf   
  40a089:	imul   edi,edx,0xffffffc5
  40a08c:	push   ss
  40a08d:	femms  
  40a08f:	mov    eax,ds:0xbdb2b0a9
  40a094:	adc    al,0x5a
  40a096:	lock ds cwde 
  40a099:	test   ebx,0x14ef297b
  40a09f:	cmp    eax,0x90f69754
  40a0a4:	add    ebp,0x6ed4486d
  40a0aa:	jge    0x40a0cf
  40a0ac:	inc    ecx
  40a0ad:	dec    eax
  40a0ae:	pop    edx
  40a0af:	sbb    eax,0x7219de78
  40a0b4:	push   ds
  40a0b5:	push   ebx
  40a0b6:	xchg   esi,eax
  40a0b7:	fcom   DWORD PTR [esi-0x47c769e6]
  40a0bd:	mov    bh,cl
  40a0bf:	jo     0x40a055
  40a0c1:	mov    dh,BYTE PTR [edx+0x1e]
  40a0c4:	mov    edi,0xf5201f6b
  40a0c9:	adc    eax,0xdf8b2024
  40a0ce:	dec    ebp
  40a0cf:	push   ebp
  40a0d0:	sub    BYTE PTR [ebp+0x4],dh
  40a0d3:	ins    BYTE PTR es:[edi],dx
  40a0d4:	sbb    eax,0x1f4d25fa
  40a0d9:	mov    edi,0x44583a32
  40a0de:	xor    edi,DWORD PTR [ecx-0x3f]
  40a0e1:	test   eax,0x6e68b11a
  40a0e6:	inc    ebp
  40a0e7:	ins    BYTE PTR es:[edi],dx
  40a0e8:	jns    0x40a0ea
  40a0ea:	push   eax
  40a0eb:	les    edx,FWORD PTR [edi+0x17]
  40a0ee:	imul   edx,edi,0x2c
  40a0f1:	mov    cl,0xdd
  40a0f3:	sub    al,0x61
  40a0f5:	ss aaa 
  40a0f7:	cmp    dh,0xfe
  40a0fa:	test   al,0xb3
  40a0fc:	mov    ds:0x4d9c47e,eax
  40a101:	ja     0x40a169
  40a103:	push   0xffffffb8
  40a105:	xchg   edx,eax
  40a106:	aam    0x69
  40a108:	scas   eax,DWORD PTR es:[edi]
  40a109:	loopne 0x40a117
  40a10b:	mov    esp,0xb1505b88
  40a110:	jmp    DWORD PTR [eax+0x62]
  40a113:	nop
  40a114:	pop    es
  40a115:	fucom  st(1)
  40a117:	jne    0x40a185
  40a119:	jmp    0x75cf:0x8c88120f
  40a120:	sbb    eax,0x51d70f4d
  40a126:	test   DWORD PTR [ebp-0x655ad17c],0xeec16c1d
  40a130:	jp     0x40a0ba
  40a132:	out    dx,eax
  40a133:	das    
  40a134:	and    al,0x5d
  40a136:	push   edx
  40a137:	mov    ds:0x79944a74,al
  40a13c:	std    
  40a13d:	imul   ebp,DWORD PTR [ebx+eiz*8],0xf97747dd
  40a144:	pop    edi
  40a145:	mov    ecx,0xb28e850
  40a14a:	aas    
  40a14b:	shr    ah,1
  40a14d:	sbb    DWORD PTR [edx+ebp*8],edx
  40a150:	mov    eax,ds:0x1e3dbdd
  40a155:	mov    edx,0x58ae4271
  40a15a:	sub    ecx,esi
  40a15c:	fldcw  WORD PTR [ecx-0x38e0eb9c]
  40a162:	outs   dx,BYTE PTR ds:[esi]
  40a163:	cmp    al,0x16
  40a165:	sbb    ch,BYTE PTR [ebp+0xb]
  40a168:	cmp    BYTE PTR ds:0xfb115d5,dh
  40a16e:	fistp  WORD PTR [ecx+0x62]
  40a171:	aad    0x8f
  40a173:	shl    esi,cl
  40a175:	add    DWORD PTR [ecx],ebp
  40a177:	retf   0x7d54
  40a17a:	mov    DWORD PTR [ebx+0x5e],edx
  40a17d:	les    edi,FWORD PTR cs:[esi+0x64]
  40a181:	ins    BYTE PTR es:[edi],dx
  40a182:	push   esi
  40a183:	ja     0x40a125
  40a185:	push   es
  40a186:	add    ah,BYTE PTR [edi+eiz*4]
  40a189:	das    
  40a18a:	xchg   esp,eax
  40a18b:	jl     0x40a116
  40a18d:	add    BYTE PTR [edx+0x36],0xfd
  40a191:	mov    ebp,0x16f9434a
  40a196:	and    al,0x21
  40a198:	fisub  WORD PTR [edi]
  40a19a:	push   es
  40a19b:	jle    0x40a137
  40a19d:	icebp  
  40a19e:	icebp  
  40a19f:	add    DWORD PTR [ecx-0x138dfa58],0x5e
  40a1a6:	scas   eax,DWORD PTR es:[edi]
  40a1a7:	ins    BYTE PTR es:[edi],dx
  40a1a8:	imul   esi,DWORD PTR [esi],0xffffffcf
  40a1ab:	cli    
  40a1ac:	mov    ah,BYTE PTR [edx+eax*1]
  40a1af:	xchg   ebp,eax
  40a1b0:	jg     0x40a14b
  40a1b2:	push   esi
  40a1b3:	and    esi,ecx
  40a1b5:	sub    dl,BYTE PTR [esi+0x40a7ce7c]
  40a1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1bc:	loopne 0x40a160
  40a1be:	das    
  40a1bf:	cmp    bl,dh
  40a1c1:	in     eax,dx
  40a1c2:	mov    ?,WORD PTR [eax+ebx*2-0x6d]
  40a1c6:	xor    BYTE PTR [eax-0x1527baa9],dh
  40a1cc:	or     BYTE PTR [ecx-0x34],0x7e
  40a1d0:	mov    BYTE PTR [eax+0xb],dh
  40a1d3:	sbb    eax,0x365d840e
  40a1d8:	scas   eax,DWORD PTR es:[edi]
  40a1d9:	out    0xf5,al
  40a1db:	xchg   esp,eax
  40a1dc:	daa    
  40a1dd:	jp     0x40a1fb
  40a1df:	cli    
  40a1e0:	cmp    eax,0x6291b9c7
  40a1e5:	add    dh,dh
  40a1e7:	lock mov bl,0xac
  40a1ea:	aam    0x4c
  40a1ec:	aas    
  40a1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ee:	pusha  
  40a1ef:	fwait
  40a1f0:	outs   dx,BYTE PTR ds:[esi]
  40a1f1:	lock and DWORD PTR [ebx-0x4a],edx
  40a1f5:	pop    DWORD PTR [edi]
  40a1f7:	jne    0x40a218
  40a1f9:	test   eax,0x760ac19f
  40a1fe:	add    ebx,ebx
  40a200:	fbld   TBYTE PTR [edx+ecx*8+0x77c0cd98]
  40a207:	xor    BYTE PTR [ecx],dh
  40a209:	jbe    0x40a28a
  40a20b:	fdivr  QWORD PTR [ecx-0x349f1302]
  40a211:	test   al,0x95
  40a213:	test   DWORD PTR [ebp-0x65b29f46],0x1884a88b
  40a21d:	call   0xf26c:0x43163ae2
  40a224:	pop    ds
  40a225:	loop   0x40a1e4
  40a227:	fnsave [esi+edx*8]
  40a22a:	out    0x5d,eax
  40a22c:	sub    bl,BYTE PTR [edi]
  40a22e:	mov    cl,0x4b
  40a230:	or     al,0x27
  40a232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a233:	js     0x40a29c
  40a235:	xchg   esi,eax
  40a236:	loopne 0x40a297
  40a238:	jge    0x40a219
  40a23a:	rcl    DWORD PTR [esi+0x5aea78a7],0x89
  40a241:	sahf   
  40a242:	sar    BYTE PTR [ebx-0x4ccaaf27],0x4c
  40a249:	in     al,0x3f
  40a24b:	dec    ebp
  40a24c:	sbb    DWORD PTR [esp+edi*4+0x6d],ebx
  40a250:	retf   
  40a251:	leave  
  40a252:	ret    0xa4d4
  40a255:	ss scas al,BYTE PTR es:[edi]
  40a257:	and    BYTE PTR [esi],0xa8
  40a25a:	push   ss
  40a25b:	dec    edx
  40a25c:	inc    DWORD PTR [edi]
  40a25e:	scas   al,BYTE PTR es:[edi]
  40a25f:	ret    0x20dc
  40a262:	mov    bl,0xb9
  40a264:	push   0x4c38a80d
  40a269:	push   ebp
  40a26a:	lea    ecx,[ebx-0x14]
  40a26d:	pop    edx
  40a26e:	imul   edx,DWORD PTR [ecx],0x5c73bf76
  40a274:	adc    edi,DWORD PTR ds:0xcd354bd8
  40a27a:	push   eax
  40a27b:	dec    edi
  40a27c:	pop    ebp
  40a27d:	fcom   QWORD PTR [edi+0xc]
  40a280:	aaa    
  40a281:	mov    ebp,0x3bfa2fdd
  40a286:	push   cs
  40a287:	pop    esp
  40a288:	mov    eax,0x855ff750
  40a28d:	(bad)  
  40a28e:	pop    ebp
  40a28f:	aad    0x1a
  40a291:	xor    eax,0x5d9474fd
  40a296:	test   ebx,eax
  40a298:	mov    edi,edi
  40a29a:	cwde   
  40a29b:	mov    esi,0x1600c25
  40a2a0:	sbb    eax,0xa5ce9bd8
  40a2a5:	shl    BYTE PTR [edi-0x5c24978d],cl
  40a2ab:	dec    BYTE PTR [eax+esi*8-0x62629be3]
  40a2b2:	sbb    ecx,DWORD PTR [edx+0x34]
  40a2b5:	mov    ah,0x25
  40a2b7:	(bad)  
  40a2b8:	push   edx
  40a2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ba:	jns    0x40a2cb
  40a2bc:	mov    ecx,0xd4640557
  40a2c1:	into   
  40a2c2:	pop    esi
  40a2c3:	jmp    0x40a2c5
  40a2c5:	mov    dl,0x90
  40a2c7:	icebp  
  40a2c8:	(bad)  
  40a2c9:	in     eax,0x5c
  40a2cb:	inc    edx
  40a2cc:	das    
  40a2cd:	loopne 0x40a263
  40a2cf:	nop
  40a2d0:	dec    ebp
  40a2d1:	repz dec ebx
  40a2d3:	sbb    eax,ecx
  40a2d5:	ret    
  40a2d6:	mov    esi,0x198e2860
  40a2db:	imul   edx,DWORD PTR [ecx],0x67
  40a2de:	fstp   TBYTE PTR ds:0x3ab3f852
  40a2e4:	cdq    
  40a2e5:	xchg   ebx,eax
  40a2e6:	push   esi
  40a2e7:	push   eax
  40a2e8:	in     eax,0x2e
  40a2ea:	sti    
  40a2eb:	add    ch,BYTE PTR [edi-0x24]
  40a2ee:	inc    edx
  40a2ef:	in     eax,0x89
  40a2f1:	add    al,BYTE PTR [ecx]
  40a2f3:	adc    al,0xc5
  40a2f5:	jmp    0x40a347
  40a2f7:	stos   BYTE PTR es:[edi],al
  40a2f8:	sub    bl,bl
  40a2fa:	or     DWORD PTR [edi+ebp*4-0x31216d8d],0x69
  40a302:	lahf   
  40a303:	xchg   DWORD PTR [ebp+0x3],esi
  40a306:	call   0xb8e5:0xb07f2c29
  40a30d:	ins    DWORD PTR es:[edi],dx
  40a30e:	xchg   edi,eax
  40a30f:	dec    ecx
  40a310:	jmp    0xa763:0xbae0366d
  40a317:	mov    ah,0x71
  40a319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a31a:	sbb    al,0x94
  40a31c:	popf   
  40a31d:	or     ebx,DWORD PTR [ecx+0x3daf7201]
  40a323:	xchg   edx,eax
  40a324:	and    DWORD PTR ds:0xb18f920e,0xffffffb5
  40a32b:	push   ebx
  40a32c:	xchg   ebx,eax
  40a32d:	(bad)  
  40a32e:	stos   DWORD PTR es:[edi],eax
  40a32f:	enter  0x1e3c,0xb
  40a333:	cdq    
  40a334:	ins    DWORD PTR es:[edi],dx
  40a335:	and    al,dl
  40a337:	push   edx
  40a338:	mov    ebx,edi
  40a33a:	(bad)  
  40a33b:	ffreep st(3)
  40a33d:	push   ebx
  40a33e:	clc    
  40a33f:	and    DWORD PTR [edx+0x37],edx
  40a342:	ja     0x40a310
  40a344:	mov    edx,0x1ea35dfa
  40a349:	sar    ah,cl
  40a34b:	inc    ebx
  40a34c:	fistp  DWORD PTR [eax-0x7d]
  40a34f:	es popf 
  40a351:	test   BYTE PTR [eax-0xd],cl
  40a354:	mov    edi,0xa6d1a899
  40a359:	cs jge 0x40a2dd
  40a35c:	int    0xd2
  40a35e:	hlt    
  40a35f:	xchg   edi,eax
  40a360:	loope  0x40a340
  40a362:	les    edi,FWORD PTR ds:0x5f9884d3
  40a368:	(bad)  [edi+0x655aa34f]
  40a36e:	call   0x3fcc:0x5941c2dc
  40a375:	push   ebp
  40a376:	push   ss
  40a377:	dec    edi
  40a378:	jno    0x40a39a
  40a37a:	dec    edx
  40a37b:	mov    ds:0x509a5d9d,al
  40a380:	sub    eax,0x8e24e6ca
  40a385:	inc    ebx
  40a386:	iret   
  40a387:	mov    ebp,0xe1c05a78
  40a38c:	arpl   WORD PTR [ebx+0x76c31506],sp
  40a392:	push   esi
  40a393:	mov    bl,0x97
  40a395:	inc    eax
  40a396:	aad    0x3a
  40a398:	mov    ebp,0xbf2bd195
  40a39d:	imul   ecx,DWORD PTR es:[edx+ebp*1+0x47],0x32
  40a3a3:	jmp    0x8dc3:0x75f20786
  40a3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ac:	sub    edi,0xffffffbc
  40a3af:	inc    ecx
  40a3b0:	inc    eax
  40a3b1:	lock (bad) 
  40a3b3:	sbb    esp,DWORD PTR ds:0xcd775a07
  40a3b9:	and    eax,0x6cd03294
  40a3be:	sbb    BYTE PTR [esi-0x2a],0xaf
  40a3c2:	push   ss
  40a3c3:	into   
  40a3c4:	in     eax,dx
  40a3c5:	pusha  
  40a3c6:	jle    0x40a3d1
  40a3c8:	loop   0x40a36f
  40a3ca:	je     0x40a365
  40a3cc:	add    eax,0x17e2ec2d
  40a3d1:	xchg   al,dl
  40a3d3:	or     eax,0x50e7a25f
  40a3d8:	(bad)
  40a3db:	out    0x52,eax
  40a3dd:	xor    cl,BYTE PTR [edi-0x7544d1d1]
  40a3e3:	pop    esp
  40a3e4:	fdivr  QWORD PTR [ecx]
  40a3e6:	dec    ecx
  40a3e7:	lods   eax,DWORD PTR ds:[esi]
  40a3e8:	mov    bl,0xf
  40a3ea:	jg     0x40a38e
  40a3ec:	or     eax,0xed0ee01d
  40a3f1:	ja     0x40a37a
  40a3f3:	cs fwait
  40a3f5:	sub    bl,BYTE PTR ds:0xde8fbf69
  40a3fb:	xor    esp,DWORD PTR [esi*4-0x286fa74b]
  40a402:	push   edi
  40a403:	sbb    DWORD PTR [edx-0x452059fe],0x42
  40a40a:	pop    eax
  40a40b:	mov    DWORD PTR [eax-0x5b4ea59a],eax
  40a411:	leave  
  40a412:	pop    ds
  40a413:	cs push ss
  40a415:	or     BYTE PTR [edx],al
  40a417:	ds mov ah,0x90
  40a41a:	jecxz  0x40a41c
  40a41c:	push   es
  40a41d:	jmp    0x5dbd:0x6f077cf8
  40a424:	aam    0x25
  40a426:	sub    DWORD PTR [edi],0x854976ee
  40a42c:	or     dl,BYTE PTR [ebp+esi*2+0x4e95aa90]
  40a433:	ins    BYTE PTR es:[edi],dx
  40a434:	fwait
  40a435:	dec    ebx
  40a436:	ss xchg ebx,eax
  40a438:	gs std 
  40a43a:	sub    BYTE PTR gs:[ecx+0x23e07fb0],bh
  40a441:	add    DWORD PTR [ebx+esi*8+0x4],ecx
  40a445:	sbb    bh,BYTE PTR [eax-0x4445168f]
  40a44b:	adc    eax,0x40058dfe
  40a450:	sub    BYTE PTR [eax+0x1a],cl
  40a453:	push   es
  40a454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a455:	add    BYTE PTR [edi],bh
  40a457:	outs   dx,BYTE PTR ds:[esi]
  40a458:	push   ds
  40a459:	and    BYTE PTR [ecx+eiz*2-0x7c75186a],bh
  40a460:	inc    eax
  40a461:	push   ebx
  40a462:	mov    ecx,DWORD PTR [edx+0x420c49a8]
  40a468:	pop    ss
  40a469:	jno    0x40a497
  40a46b:	dec    edi
  40a46c:	push   cs
  40a46d:	and    DWORD PTR [edx+edi*1+0x4d],edi
  40a471:	out    dx,eax
  40a472:	push   esp
  40a473:	sbb    bh,BYTE PTR [ebp+0x72]
  40a476:	ins    DWORD PTR es:[edi],dx
  40a477:	xchg   esi,eax
  40a478:	jecxz  0x40a4d4
  40a47a:	inc    eax
  40a47b:	out    0x8,eax
  40a47d:	call   0xfa0d:0xc6bba61d
  40a484:	out    dx,eax
  40a485:	nop
  40a486:	sbb    BYTE PTR [edx-0x10],ah
  40a489:	gs jge 0x40a42a
  40a48c:	je     0x40a4c6
  40a48e:	stc    
  40a48f:	fnstsw WORD PTR [edi]
  40a491:	sbb    WORD PTR [esi+0x46],di
  40a495:	sar    BYTE PTR [ebx-0x3cc0c4a1],cl
  40a49b:	loop   0x40a4da
  40a49d:	push   0xe3e191a0
  40a4a2:	inc    BYTE PTR [ecx+ebx*4+0x68bc44e1]
  40a4a9:	add    BYTE PTR [ebx],ah
  40a4ab:	sbb    DWORD PTR [ebx+0x21],ecx
  40a4ae:	adc    BYTE PTR [eax-0x84f2631],ah
  40a4b4:	ret    
  40a4b5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a4b7:	addr16 mov bl,0x66
  40a4ba:	or     eax,0xf86a0609
  40a4bf:	stc    
  40a4c0:	adc    al,0xca
  40a4c2:	leave  
  40a4c3:	mov    DWORD PTR [edx],ecx
  40a4c5:	cli    
  40a4c6:	dec    ebx
  40a4c7:	add    eax,0x9a2dd3ef
  40a4cc:	jmp    0x3bee4463
  40a4d1:	pop    ebp
  40a4d2:	ss scas eax,DWORD PTR es:[edi]
  40a4d4:	dec    edi
  40a4d5:	mov    gs,WORD PTR [ebp-0x54]
  40a4d8:	push   cs
  40a4d9:	mov    al,0x19
  40a4db:	or     BYTE PTR [esi+0x47],cl
  40a4de:	push   ds
  40a4df:	fistp  WORD PTR [ebp-0x5df8b9ca]
  40a4e5:	(bad)  [ecx+edi*4]
  40a4e8:	inc    ebx
  40a4e9:	mov    edi,0xf35f8d0f
  40a4ee:	mov    bh,0xcf
  40a4f0:	sbb    eax,0x8d341493
  40a4f5:	sbb    ebx,DWORD PTR [ebx-0x4e]
  40a4f8:	ds jno 0x40a47d
  40a4fb:	jecxz  0x40a4e7
  40a4fd:	xchg   BYTE PTR [esp+edi*4-0x74ed044e],cl
  40a504:	sbb    ecx,DWORD PTR [edi]
  40a506:	dec    ecx
  40a507:	aam    0x57
  40a509:	push   ebp
  40a50a:	sbb    esi,DWORD PTR [ebx-0x4253de53]
  40a510:	pop    eax
  40a511:	aaa    
  40a512:	adc    ch,al
  40a514:	(bad)  
  40a515:	push   ebp
  40a516:	in     al,dx
  40a517:	rcr    bh,1
  40a519:	push   eax
  40a51a:	push   ebp
  40a51b:	jno    0x40a4aa
  40a51d:	xchg   esi,eax
  40a51e:	or     al,0x3a
  40a520:	nop
  40a521:	sbb    edx,esi
  40a523:	in     al,0x43
  40a525:	mov    ebx,0xd9542cf8
  40a52a:	or     eax,0xf806d219
  40a52f:	sbb    eax,0xd7f908b5
  40a534:	into   
  40a535:	(bad)  
  40a536:	dec    ebx
  40a537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a538:	add    BYTE PTR [ecx],al
  40a53a:	pop    DWORD PTR [ebp-0x1b4a054a]
  40a540:	pusha  
  40a541:	push   esi
  40a542:	nop
  40a543:	lods   al,BYTE PTR ds:[esi]
  40a544:	enter  0xb7c,0x7e
  40a548:	add    al,0xd7
  40a54a:	retf   
  40a54b:	and    al,0x64
  40a54d:	jmp    0xd150:0x621e6f2
  40a554:	adc    al,0xaf
  40a556:	cdq    
  40a557:	dec    ecx
  40a558:	xlat   BYTE PTR ds:[ebx]
  40a559:	sti    
  40a55a:	int3   
  40a55b:	inc    esi
  40a55c:	pop    ds
  40a55d:	inc    ecx
  40a55e:	in     eax,dx
  40a55f:	jno    0x40a58b
  40a561:	scas   eax,DWORD PTR es:[edi]
  40a562:	sbb    al,0x46
  40a564:	jmp    0x4e8e:0x493bf3bf
  40a56b:	mov    eax,ds:0x7a2f5d2a
  40a570:	stos   DWORD PTR es:[edi],eax
  40a571:	lea    eax,ds:[edi]
  40a574:	loope  0x40a5ac
  40a576:	sub    ebx,DWORD PTR [ecx-0x6f]
  40a579:	aad    0x22
  40a57b:	jmp    0x40a5ec
  40a57d:	add    BYTE PTR [edx],dl
  40a57f:	xor    ebp,edi
  40a581:	jmp    0x99a0:0x2adfc381
  40a588:	outs   dx,DWORD PTR ds:[esi]
  40a589:	push   ebx
  40a58a:	ror    BYTE PTR [ecx+ecx*2],1
  40a58d:	pushf  
  40a58e:	rcl    DWORD PTR [esi+0xca84447],0x38
  40a595:	cmc    
  40a596:	ret    
  40a597:	lods   al,BYTE PTR ds:[esi]
  40a598:	sub    ebp,ecx
  40a59a:	pop    ebx
  40a59b:	mov    edx,0xb7c5985b
  40a5a0:	cmpxchg dh,dh
  40a5a3:	push   ss
  40a5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a5:	out    dx,eax
  40a5a6:	and    al,0x40
  40a5a8:	hlt    
  40a5a9:	sub    al,0x75
  40a5ab:	mov    esp,0x6ba35055
  40a5b0:	and    al,0xae
  40a5b2:	push   edx
  40a5b3:	xor    BYTE PTR ds:0xfcced938,bl
  40a5b9:	xor    edx,DWORD PTR [edi+0x34c4f906]
  40a5bf:	add    BYTE PTR [esi-0x4d],al
  40a5c2:	inc    edi
  40a5c3:	mov    DWORD PTR [ebp-0x4b],esi
  40a5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5c7:	cmp    eax,0xb8d3a169
  40a5cc:	mov    esi,0x536db067
  40a5d1:	(bad)  
  40a5d2:	lahf   
  40a5d3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40a5d5:	dec    esp
  40a5d6:	loope  0x40a576
  40a5d8:	(bad)  
  40a5d9:	stos   DWORD PTR es:[edi],eax
  40a5da:	adc    BYTE PTR [edi+0x5e7e05e4],cl
  40a5e0:	jb     0x40a58a
  40a5e2:	fistp  WORD PTR [edi]
  40a5e4:	ins    WORD PTR es:[edi],dx
  40a5e6:	inc    ebx
  40a5e7:	dec    eax
  40a5e8:	into   
  40a5e9:	outs   dx,DWORD PTR ds:[esi]
  40a5ea:	das    
  40a5eb:	addr16 je 0x40a649
  40a5ee:	dec    esi
  40a5ef:	push   ds
  40a5f0:	sbb    al,0xf
  40a5f2:	add    BYTE PTR [eax],dh
  40a5f4:	push   edi
  40a5f5:	mov    esp,0x8d12586f
  40a5fa:	adc    al,bh
  40a5fc:	and    eax,0x98a96c59
  40a601:	ins    BYTE PTR es:[edi],dx
  40a602:	call   0xaa2b4b0f
  40a607:	fld    TBYTE PTR [esi+edi*8]
  40a60a:	retf   0x6140
  40a60d:	adc    DWORD PTR [esi],0x1f
  40a610:	scas   al,BYTE PTR es:[edi]
  40a611:	fisttp DWORD PTR [ebx-0x4faf21d2]
  40a617:	(bad)  
  40a619:	adc    al,0x21
  40a61b:	enter  0x710a,0xe8
  40a61f:	dec    eax
  40a620:	push   esp
  40a621:	hlt    
  40a622:	stos   BYTE PTR es:[edi],al
  40a623:	int3   
  40a624:	lods   al,BYTE PTR ds:[esi]
  40a625:	js     0x40a65e
  40a627:	push   0xc455fbb7
  40a62c:	mov    dl,0xaf
  40a62e:	ret    
  40a62f:	leave  
  40a630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a631:	(bad)  
  40a632:	pop    ebx
  40a633:	xor    ah,cl
  40a635:	test   DWORD PTR [edi+esi*2+0x43],esp
  40a639:	add    BYTE PTR [eax+0x4e4488e7],0xf9
  40a640:	pop    esp
  40a641:	rcr    BYTE PTR ds:0x96b93112,cl
  40a647:	and    eax,0xa74deaa3
  40a64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a64d:	push   ds
  40a64e:	aam    0x40
  40a650:	retf   0xf298
  40a653:	push   ss
  40a654:	mov    ah,BYTE PTR [esi-0x64d288a4]
  40a65a:	pop    ecx
  40a65b:	out    0x77,al
  40a65d:	mov    ebx,0xf230f6b3
  40a662:	ret    
  40a663:	mov    ds:0x112aaf70,eax
  40a668:	sbb    bl,ch
  40a66a:	clc    
  40a66b:	pop    esi
  40a66c:	mov    es,ecx
  40a66e:	pop    ecx
  40a66f:	cwde   
  40a670:	stos   DWORD PTR es:[edi],eax
  40a671:	add    al,0xbf
  40a673:	xchg   ebp,eax
  40a674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a675:	pop    es
  40a676:	sahf   
  40a677:	shl    DWORD PTR [edx],0x7a
  40a67a:	cwde   
  40a67b:	jecxz  0x40a6fa
  40a67d:	inc    edx
  40a67e:	xlat   BYTE PTR ds:[ebx]
  40a67f:	cs hlt 
  40a681:	xchg   DWORD PTR [ebx],edx
  40a683:	outs   dx,DWORD PTR ds:[esi]
  40a684:	cmp    dh,bh
  40a686:	and    al,0xcc
  40a688:	pop    eax
  40a689:	mov    eax,0x22f3e01a
  40a68e:	loop   0x40a6a3
  40a690:	jge    0x40a708
  40a692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a693:	lahf   
  40a694:	mov    ch,0xf1
  40a696:	ja     0x40a623
  40a698:	lea    esi,[ecx]
  40a69a:	adc    DWORD PTR [eax+0x63],eax
  40a69d:	in     eax,0x20
  40a69f:	pushw  cs
  40a6a1:	mov    al,0xb5
  40a6a3:	jecxz  0x40a721
  40a6a5:	cmp    eax,0xdaddc02a
  40a6aa:	das    
  40a6ab:	and    edx,esp
  40a6ad:	cld    
  40a6ae:	mov    ah,0x7c
  40a6b0:	and    DWORD PTR [edi-0xc],ecx
  40a6b3:	pushf  
  40a6b4:	or     eax,DWORD PTR [ecx+eiz*1+0x66]
  40a6b8:	inc    eax
  40a6b9:	inc    esp
  40a6ba:	shl    bh,0xf1
  40a6bd:	or     al,0x81
  40a6bf:	push   edi
  40a6c0:	leave  
  40a6c1:	inc    edx
  40a6c2:	cmp    al,0x34
  40a6c4:	daa    
  40a6c5:	mov    dl,0x32
  40a6c7:	sahf   
  40a6c8:	lock xlat BYTE PTR ds:[ebx]
  40a6cb:	imul   ecx,DWORD PTR [esi-0x5b],0x4beb213d
  40a6d2:	xor    al,0xa7
  40a6d4:	aaa    
  40a6d5:	repz pop edx
  40a6d7:	cmp    ebp,DWORD PTR [edi+eiz*4-0x58]
  40a6db:	icebp  
  40a6dc:	dec    eax
  40a6dd:	add    bl,ch
  40a6df:	retf   0x2d79
  40a6e2:	and    dl,BYTE PTR [ebp-0xca8db7a]
  40a6e8:	arpl   WORD PTR [edi-0x7e317697],ax
  40a6ee:	xor    esi,DWORD PTR fs:[eax+0x75]
  40a6f2:	es into 
  40a6f4:	sub    DWORD PTR [ebp+ebp*8+0x34],0xffffffc7
  40a6f9:	jae    0x40a713
  40a6fb:	into   
  40a6fc:	ret    
  40a6fd:	in     al,dx
  40a6fe:	and    edi,DWORD PTR [ebx+0x6b]
  40a701:	cdq    
  40a702:	and    BYTE PTR [ecx-0x1c3d1086],cl
  40a708:	repnz cs out dx,al
  40a70b:	test   eax,0x92e965f3
  40a710:	xor    eax,DWORD PTR [ecx]
  40a712:	daa    
  40a713:	fidiv  DWORD PTR [edi+0x2ef993e]
  40a719:	inc    esp
  40a71a:	lds    ebx,FWORD PTR [ecx-0x1c58ebef]
  40a720:	mov    esp,0x3b57543
  40a725:	leave  
  40a726:	sub    eax,0xbb12630c
  40a72b:	pop    ecx
  40a72c:	mov    esp,0x20285759
  40a731:	pop    ebp
  40a732:	dec    edi
  40a733:	jbe    0x40a705
  40a735:	ds push edx
  40a737:	aam    0x83
  40a739:	imul   eax,DWORD PTR [edx],0x8c91e929
  40a73f:	push   cs
  40a740:	sbb    BYTE PTR [ebx-0xffb1aba],cl
  40a746:	fnstsw WORD PTR [edx-0x4c]
  40a749:	dec    edi
  40a74a:	jns    0x40a6f2
  40a74c:	mov    cs,WORD PTR [esi]
  40a74e:	test   BYTE PTR [ebp-0x6d],bl
  40a751:	cdq    
  40a752:	mov    esi,0xee4c9d9b
  40a757:	sub    al,0xc5
  40a759:	in     eax,0x71
  40a75b:	dec    edx
  40a75c:	aad    0x36
  40a75e:	scas   eax,DWORD PTR es:[edi]
  40a75f:	icebp  
  40a760:	xchg   dh,cl
  40a762:	jmp    0x61af995a
  40a767:	mov    bl,0xaf
  40a769:	aas    
  40a76a:	adc    eax,esp
  40a76c:	in     al,dx
  40a76d:	mov    DWORD PTR [ebp+0x4e],esi
  40a770:	mov    dh,0x71
  40a772:	mov    ebx,0x25a7b1db
  40a777:	or     al,0xd7
  40a779:	ficomp DWORD PTR [esi+0x357b8d2e]
  40a77f:	out    0x1e,al
  40a781:	adc    BYTE PTR [edi],0xe8
  40a784:	fstp   DWORD PTR [edx]
  40a786:	pushf  
  40a787:	lahf   
  40a788:	and    al,0x20
  40a78a:	iret   
  40a78b:	xchg   esp,eax
  40a78c:	not    DWORD PTR [edi-0x52]
  40a78f:	xchg   edx,eax
  40a790:	ror    BYTE PTR [esi+0x0],1
  40a793:	sbb    BYTE PTR [ebx+0x37b4c0d],ch
  40a799:	imul   eax,DWORD PTR ds:0x56301b19,0x2e
  40a7a0:	mov    ebp,DWORD PTR [eax+edi*1-0x502eca5]
  40a7a7:	shl    BYTE PTR [edx],cl
  40a7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7aa:	xchg   DWORD PTR [esp+eax*2-0x22],ecx
  40a7ae:	dec    ebx
  40a7af:	out    0x99,eax
  40a7b1:	aam    0x74
  40a7b3:	sti    
  40a7b4:	mov    eax,0x54edcc85
  40a7b9:	scas   eax,DWORD PTR es:[edi]
  40a7ba:	push   ds
  40a7bb:	mov    dl,0xd1
  40a7bd:	adc    cl,0xdc
  40a7c0:	ret    0x6471
  40a7c3:	and    DWORD PTR [ebx-0x59],ebp
  40a7c6:	push   edi
  40a7c7:	add    DWORD PTR ds:0xb5a2050c,esp
  40a7cd:	mov    ax,WORD PTR [edx-0x12]
  40a7d1:	in     eax,dx
  40a7d2:	cdq    
  40a7d3:	shl    DWORD PTR [ebp+eiz*2+0x1a],1
  40a7d7:	dec    ebx
  40a7d8:	div    DWORD PTR [ebp-0x75]
  40a7db:	inc    ebx
  40a7dc:	out    dx,al
  40a7dd:	int    0xf0
  40a7df:	xchg   ecx,eax
  40a7e0:	or     al,0x8f
  40a7e2:	lods   al,BYTE PTR ds:[esi]
  40a7e3:	jnp    0x40a7cd
  40a7e5:	mov    DWORD PTR [esp+edi*4+0x49],ebx
  40a7e9:	fwait
  40a7ea:	icebp  
  40a7eb:	xchg   DWORD PTR [ebx-0x1d],esi
  40a7ee:	sbb    al,0x9c
  40a7f0:	rcl    BYTE PTR [ebp+0x26e645d7],0xb0
  40a7f7:	test   eax,0xf960cd70
  40a7fc:	mov    ebx,ebp
  40a7fe:	mov    dh,BYTE PTR [eax]
  40a800:	or     BYTE PTR [edi-0x46],cl
  40a803:	out    dx,eax
  40a804:	hlt    
  40a805:	mov    cl,0x79
  40a807:	mov    ecx,0x75f8a3e3
  40a80c:	outs   dx,BYTE PTR ds:[esi]
  40a80d:	pop    ebp
  40a80e:	shl    BYTE PTR [edx+0x65],cl
  40a811:	cmp    al,0xa7
  40a813:	add    ch,BYTE PTR [esi-0x4e]
  40a816:	(bad)  
  40a817:	out    dx,eax
  40a818:	sub    cl,dh
  40a81a:	jo     0x40a86b
  40a81c:	ja     0x40a85c
  40a81e:	xor    al,0x99
  40a820:	outs   dx,DWORD PTR ds:[esi]
  40a821:	lock bound esi,QWORD PTR gs:[edi]
  40a825:	inc    ecx
  40a826:	xchg   dx,ax
  40a828:	push   es
  40a829:	xchg   esi,eax
  40a82a:	dec    esp
  40a82b:	mov    BYTE PTR [ecx],al
  40a82d:	hlt    
  40a82e:	rcr    DWORD PTR [edi+0x2a],0x46
  40a832:	adc    edi,eax
  40a834:	and    al,0x61
  40a836:	add    ah,BYTE PTR [ecx+0x2bdf0724]
  40a83c:	jp     0x40a861
  40a83e:	imul   edx,edx,0xdacfc75d
  40a844:	xor    eax,0xef5faaf9
  40a849:	shl    BYTE PTR [eax+0x73],0x65
  40a84d:	cdq    
  40a84e:	or     BYTE PTR [esi],0x58
  40a851:	test   DWORD PTR [edi+ebx*2],eax
  40a854:	stos   DWORD PTR es:[edi],eax
  40a855:	in     eax,0xf7
  40a857:	cmc    
  40a858:	int3   
  40a859:	les    ebx,FWORD PTR [ecx+edx*1+0x691e8182]
  40a860:	mov    ebp,0xc246610f
  40a865:	mov    ebx,0xf14811c4
  40a86a:	mov    eax,0x733b88c2
  40a86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a870:	in     eax,dx
  40a871:	loope  0x40a80d
  40a873:	daa    
  40a874:	cs mov ebp,?
  40a877:	or     eax,0x988119d1
  40a87c:	leave  
  40a87d:	sub    DWORD PTR [edx+0x5803048d],0x66457531
  40a887:	inc    edx
  40a888:	inc    edx
  40a889:	xor    al,0x61
  40a88b:	inc    esi
  40a88c:	fist   WORD PTR [edi+0x4c865606]
  40a892:	jmp    0x40a8b9
  40a894:	in     al,0xa2
  40a896:	xor    al,al
  40a898:	pushf  
  40a899:	and    DWORD PTR [ecx],ebp
  40a89b:	and    DWORD PTR [edx+0x1328da4c],edi
  40a8a1:	add    DWORD PTR [ebx],0xab6c9680
  40a8a7:	pop    ss
  40a8a8:	outs   dx,BYTE PTR ds:[esi]
  40a8a9:	xor    DWORD PTR [ebp+0x97f52ae],0x58a8b29b
  40a8b3:	jns    0x40a8e4
  40a8b5:	aaa    
  40a8b6:	repz pop es
  40a8b8:	aam    0xdb
  40a8ba:	jp     0x40a8ed
  40a8bc:	dec    edx
  40a8bd:	fdiv   DWORD PTR [ebx+0x68]
  40a8c0:	lds    esi,FWORD PTR [ecx]
  40a8c2:	sub    DWORD PTR [edi],0x3b60091f
  40a8c8:	aad    0xb9
  40a8ca:	sub    DWORD PTR [esi],0x68a80031
  40a8d0:	pusha  
  40a8d1:	sahf   
  40a8d2:	mov    ds:0xd84157cd,al
  40a8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d8:	sbb    dh,BYTE PTR [esi+edx*8+0x3bffed0b]
  40a8df:	jne    0x40a949
  40a8e1:	jp     0x40a8e0
  40a8e3:	mov    bl,0x4e
  40a8e5:	or     esp,0x3a
  40a8e8:	mov    edi,DWORD PTR [ebx-0x4f]
  40a8eb:	mul    DWORD PTR [edi-0x4b7e2491]
  40a8f1:	push   DWORD PTR [ecx]
  40a8f3:	adc    cl,ch
  40a8f5:	sahf   
  40a8f6:	push   ebp
  40a8f7:	or     cl,BYTE PTR [ecx]
  40a8f9:	or     DWORD PTR [ecx-0x75],0xffffffc7
  40a8fd:	outs   dx,DWORD PTR ds:[esi]
  40a8fe:	or     dh,BYTE PTR [esi-0x6026fcfe]
  40a904:	jmp    0x40a980
  40a906:	jmp    0xf80c:0x7557c5b6
  40a90d:	out    dx,al
  40a90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a90f:	add    al,0xbb
  40a911:	mov    ebp,0xf6723ab2
  40a916:	mov    DWORD PTR [edi-0x39f5bab],esi
  40a91c:	mov    edi,0x97b21831
  40a921:	test   BYTE PTR [ebp+0x45dd8697],cl
  40a927:	mov    cl,0x3c
  40a929:	or     cl,BYTE PTR [edx+ecx*4]
  40a92c:	rcl    ch,1
  40a92e:	es inc edi
  40a930:	pop    esi
  40a931:	add    dl,BYTE PTR [edx+0x4843e3b0]
  40a937:	icebp  
  40a938:	sub    eax,0xa4ec0e13
  40a93d:	retf   0x83e4
  40a940:	lea    ebx,[ebx+0x6f]
  40a943:	pop    ss
  40a944:	inc    ecx
  40a945:	xlat   BYTE PTR ds:[ebx]
  40a946:	xchg   edx,eax
  40a947:	stos   BYTE PTR es:[edi],al
  40a948:	or     eax,0x622b4b25
  40a94d:	(bad)  
  40a94f:	inc    esi
  40a950:	xor    eax,0xa68d2f9a
  40a955:	ins    BYTE PTR es:[edi],dx
  40a956:	push   es
  40a957:	das    
  40a958:	cmp    DWORD PTR [ebp-0x7e0f07c4],esi
  40a95e:	rol    BYTE PTR [esi],cl
  40a960:	aam    0x6b
  40a962:	mov    DWORD PTR [edx-0x64],esi
  40a965:	cmp    al,0xbd
  40a967:	and    BYTE PTR [edi-0x7c],0xda
  40a96b:	out    dx,eax
  40a96c:	sub    edx,DWORD PTR [esi-0x7ac643da]
  40a972:	cmp    ah,BYTE PTR [ebx+edx*2+0x79]
  40a976:	xor    DWORD PTR [ebx+edi*8+0x37],0x6a
  40a97b:	jae    0x40a997
  40a97d:	iret   
  40a97e:	sbb    eax,0xc459396a
  40a983:	int3   
  40a984:	int    0x67
  40a986:	adc    DWORD PTR [ecx],ebp
  40a988:	adc    DWORD PTR [esi+eiz*2],0xffffffc9
  40a98c:	xor    BYTE PTR [esp+eiz*4-0x37],bl
  40a990:	sahf   
  40a991:	dec    esp
  40a992:	xchg   ebp,eax
  40a993:	sbb    dl,BYTE PTR [ebp-0x25747266]
  40a999:	retf   
  40a99a:	add    al,BYTE PTR [ecx+0x1e]
  40a99d:	pushf  
  40a99e:	add    BYTE PTR [edx+0x2],bh
  40a9a1:	fnstenv [ebp-0x41c19ae9]
  40a9a7:	adc    eax,DWORD PTR [ecx]
  40a9a9:	retf   
  40a9aa:	imul   esi,DWORD PTR [ebx+eax*4+0x7b2b39d4],0xffffff9a
  40a9b2:	xor    eax,0x712b0d91
  40a9b7:	jnp    0x40a963
  40a9b9:	inc    BYTE PTR [ebx+0x1cf0a277]
  40a9bf:	adc    esp,DWORD PTR [edx+0xebd0729]
  40a9c5:	or     ah,BYTE PTR [ecx+0x17]
  40a9c8:	stos   DWORD PTR es:[edi],eax
  40a9c9:	sub    eax,0x9a21bb87
  40a9ce:	and    BYTE PTR [edi+0x6b148219],ah
  40a9d4:	push   esp
  40a9d6:	inc    esp
  40a9d7:	int    0xf4
  40a9d9:	lock jo 0x40a9c9
  40a9dc:	jl     0x40aa32
  40a9de:	mov    BYTE PTR [esi],bl
  40a9e0:	leave  
  40a9e1:	sti    
  40a9e2:	in     al,0xb9
  40a9e4:	push   edi
  40a9e5:	repz pop ebx
  40a9e7:	dec    eax
  40a9e8:	ret    0x3552
  40a9eb:	adc    eax,0xfdb4ede4
  40a9f0:	xor    ebp,ecx
  40a9f2:	cmp    cl,BYTE PTR [edx-0x31d90308]
  40a9f8:	cmp    DWORD PTR [ebp+0x55],0xffffff90
  40a9fc:	dec    edi
  40a9fd:	call   0x6d96:0x2835eb75
  40aa04:	out    0xb2,eax
  40aa06:	jb     0x40a99c
  40aa08:	adc    ah,BYTE PTR [esi]
  40aa0a:	push   ecx
  40aa0b:	mov    bh,0x4d
  40aa0d:	adc    DWORD PTR [edx],esp
  40aa0f:	pop    esi
  40aa10:	push   ebx
  40aa11:	dec    ebp
  40aa12:	sti    
  40aa13:	repnz mov bh,BYTE PTR [ecx]
  40aa16:	ret    0x54d
  40aa19:	ror    ch,cl
  40aa1b:	xchg   esi,edi
  40aa1d:	imul   ecx,DWORD PTR [edi-0x4a],0xafab4567
  40aa24:	push   cs
  40aa25:	mov    eax,0xdef2b2ef
  40aa2a:	jns    0x40a9c2
  40aa2c:	sub    DWORD PTR [eax+0x64208e0d],esi
  40aa32:	jae    0x40aa47
  40aa34:	repnz rcr BYTE PTR [esi-0x242c9c8d],0x85
  40aa3c:	ret    
  40aa3d:	add    ch,0xb5
  40aa40:	outs   dx,DWORD PTR ds:[esi]
  40aa41:	out    dx,eax
  40aa42:	mov    ebp,0x3f9b5f07
  40aa47:	cmp    dh,BYTE PTR [eax]
  40aa49:	sub    BYTE PTR [ecx+0x7359c12a],ah
  40aa4f:	adc    edx,DWORD PTR [edx]
  40aa51:	mov    ch,0xd5
  40aa53:	adc    eax,0x6738b370
  40aa58:	pop    es
  40aa59:	push   ecx
  40aa5a:	hlt    
  40aa5b:	pop    ebp
  40aa5c:	into   
  40aa5d:	(bad)  
  40aa5f:	in     eax,0xd8
  40aa61:	xchg   DWORD PTR [ecx+0x32],esp
  40aa64:	sti    
  40aa65:	adc    al,0x49
  40aa67:	pop    es
  40aa68:	pop    ecx
  40aa69:	pusha  
  40aa6a:	enter  0x3df2,0xea
  40aa6e:	pop    edi
  40aa6f:	cdq    
  40aa70:	rol    edi,0xcc
  40aa73:	xchg   DWORD PTR [edx+edi*2-0x42a1300e],esp
  40aa7a:	(bad)  
  40aa7b:	mov    WORD PTR [eax],fs
  40aa7d:	out    0x88,eax
  40aa7f:	sahf   
  40aa80:	shr    BYTE PTR [eax-0x7070cdc8],0x27
  40aa87:	int    0xc3
  40aa89:	mov    dl,0x1b
  40aa8b:	aad    0x30
  40aa8d:	nop    DWORD PTR [ebx-0x598ac15]
  40aa94:	and    edi,DWORD PTR [ebx+0x5f963f0c]
  40aa9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa9b:	xchg   BYTE PTR [edx+0x592f5ac6],al
  40aaa1:	clc    
  40aaa2:	sbb    ebp,ecx
  40aaa4:	aad    0xd8
  40aaa6:	add    eax,0x7f961b2a
  40aaab:	out    dx,eax
  40aaac:	lahf   
  40aaad:	sub    bh,BYTE PTR [esi]
  40aaaf:	mov    al,0x94
  40aab1:	pop    ss
  40aab2:	scas   al,BYTE PTR es:[edi]
  40aab3:	cmp    eax,0x66693fe2
  40aab8:	mov    esi,esp
  40aaba:	mov    BYTE PTR [ecx],al
  40aabc:	mov    ds:0xc16e3bde,al
  40aac1:	lods   al,BYTE PTR ds:[esi]
  40aac2:	pop    esp
  40aac3:	(bad)  
  40aac4:	and    al,0xd0
  40aac6:	repnz rcr ebp,1
  40aac9:	jnp    0x40ab13
  40aacb:	inc    esp
  40aacc:	fidiv  WORD PTR [edi+0x73]
  40aacf:	je     0x40ab2f
  40aad1:	cmp    eax,0xaf22f47f
  40aad6:	(bad)  
  40aad7:	mov    bl,0x4c
  40aad9:	shl    DWORD PTR [eax],0x36
  40aadc:	test   DWORD PTR [ebx-0x17528709],ebp
  40aae2:	mov    WORD PTR [edi-0x5d],fs
  40aae5:	aaa    
  40aae6:	aaa    
  40aae7:	dec    ebp
  40aae8:	ins    DWORD PTR es:[edi],dx
  40aae9:	add    ch,dh
  40aaeb:	jp     0x40aad6
  40aaed:	mov    DWORD PTR [esi-0x5cf1c99c],0x6da2a9e8
  40aaf7:	xchg   ebp,eax
  40aaf8:	(bad)  
  40aaf9:	shl    ch,1
  40aafb:	pop    edi
  40aafc:	popa   
  40aafd:	dec    ebx
  40aafe:	shl    edx,1
  40ab00:	jne    0x40aadc
  40ab02:	xchg   edx,eax
  40ab03:	add    eax,0xc3186412
  40ab08:	cwde   
  40ab09:	imul   edx,DWORD PTR [eax+esi*1-0x65],0x15
  40ab0e:	cmp    BYTE PTR [edi],0xef
  40ab11:	mov    cl,0x69
  40ab13:	push   ebx
  40ab14:	jmp    0xb90f:0x60199fc3
  40ab1b:	(bad)  
  40ab1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab1d:	adc    bh,BYTE PTR [eax]
  40ab1f:	mov    edx,fs
  40ab21:	in     eax,0x79
  40ab23:	in     al,dx
  40ab24:	fistp  DWORD PTR [edi]
  40ab26:	jmp    0xc899:0x830654be
  40ab2d:	push   ds
  40ab2e:	mov    eax,0x3571048
  40ab33:	daa    
  40ab34:	out    dx,eax
  40ab35:	jp     0x40abb6
  40ab37:	ror    DWORD PTR ds:0xeb48ff4b,cl
  40ab3d:	dec    esi
  40ab3e:	data16 arpl WORD PTR [ecx-0x61b7e13f],sp
  40ab45:	in     al,dx
  40ab46:	lods   al,BYTE PTR ds:[esi]
  40ab47:	out    0x7a,al
  40ab49:	push   0xfafe1eea
  40ab4e:	or     edx,eax
  40ab50:	mov    ds:0x8aeca43c,ax
  40ab56:	jno    0x40ab33
  40ab58:	xor    dh,cl
  40ab5a:	jp     0x40ab99
  40ab5c:	add    eax,0x6a44e9ca
  40ab61:	call   0x9a19:0x9f8a98cb
  40ab68:	pop    esi
  40ab69:	and    eax,0x267b7e40
  40ab6e:	sub    DWORD PTR cs:[ebp+0xd3ee844],0xffffffa6
  40ab76:	or     BYTE PTR [ecx+0x27e3801a],bh
  40ab7c:	rol    DWORD PTR [edx-0x24393bca],cl
  40ab82:	retf   0x91d
  40ab85:	cmp    eax,0x82250a2c
  40ab8a:	into   
  40ab8b:	mov    eax,0x5508011
  40ab90:	in     al,dx
  40ab91:	push   edi
  40ab92:	push   es
  40ab93:	icebp  
  40ab94:	and    bl,BYTE PTR [esi-0x72]
  40ab97:	adc    ah,ah
  40ab99:	jmp    0x40ab3c
  40ab9b:	js     0x40ac00
  40ab9d:	or     edx,0xef13f11e
  40aba3:	iret   
  40aba4:	xchg   ebp,eax
  40aba5:	cmp    eax,0x7fb76f8b
  40abaa:	dec    edx
  40abab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abac:	jo     0x40ab9e
  40abae:	les    ebp,FWORD PTR [ecx]
  40abb0:	ja     0x40ac28
  40abb2:	mov    al,ds:0x1fcdc5db
  40abb7:	int3   
  40abb8:	sar    eax,1
  40abba:	daa    
  40abbb:	mov    eax,0x2355c4b9
  40abc0:	or     DWORD PTR [edx-0x58],eax
  40abc3:	and    bl,BYTE PTR [eax-0x4b]
  40abc6:	lea    esp,[edx+0x4f2e2a9b]
  40abcc:	push   0xaad01926
  40abd1:	icebp  
  40abd2:	and    BYTE PTR [edi],ch
  40abd4:	aas    
  40abd5:	cdq    
  40abd6:	add    edi,DWORD PTR [edi]
  40abd8:	sub    al,BYTE PTR ds:0x716d4130
  40abde:	sbb    al,BYTE PTR [ecx+ecx*4-0x3d83716f]
  40abe5:	jmp    0xb5821b2d
  40abea:	imul   eax,ebx,0x16e4e106
  40abf0:	mov    ch,0x97
  40abf2:	aad    0x6b
  40abf4:	pusha  
  40abf5:	pop    edx
  40abf6:	pusha  
  40abf7:	dec    ebp
  40abf8:	mov    edx,0xe994c241
  40abfd:	icebp  
  40abfe:	jmp    0x40abe0
  40ac00:	clc    
  40ac01:	sahf   
  40ac02:	lahf   
  40ac03:	adc    esp,DWORD PTR [eax+0x72]
  40ac06:	imul   edi,DWORD PTR [eax+ebp*8+0x70566e49],0xa79f58eb
  40ac11:	out    0x52,eax
  40ac13:	cld    
  40ac14:	push   0x2a5350dd
  40ac19:	das    
  40ac1a:	inc    ecx
  40ac1b:	jge    0x40ac55
  40ac1d:	sub    bh,BYTE PTR [edx]
  40ac1f:	jns    0x40ac81
  40ac21:	push   0xffffffb0
  40ac23:	ja     0x40abba
  40ac25:	fldcw  WORD PTR [edx+0x63]
  40ac28:	adc    eax,0x708d2b6b
  40ac2d:	adc    eax,0xe87bfdd7
  40ac32:	push   edx
  40ac33:	test   BYTE PTR [esi+eiz*4-0x9],0x61
  40ac38:	cdq    
  40ac39:	push   ss
  40ac3a:	mov    dh,0xdb
  40ac3c:	in     al,dx
  40ac3d:	sahf   
  40ac3e:	push   0xc222b783
  40ac43:	stos   DWORD PTR es:[edi],eax
  40ac44:	out    dx,eax
  40ac45:	mov    edx,0x13b7a474
  40ac4a:	mov    ebp,0x962aead0
  40ac4f:	icebp  
  40ac50:	adc    eax,DWORD PTR [edx-0x1fc08dd5]
  40ac56:	mov    dl,0xfc
  40ac58:	cdq    
  40ac59:	pop    ebx
  40ac5a:	jge    0x40ac75
  40ac5c:	add    BYTE PTR [eax],ch
  40ac5e:	pop    esi
  40ac5f:	test   eax,0xd2d791a8
  40ac64:	jo     0x40ac2a
  40ac66:	adc    ah,bl
  40ac68:	mov    ebx,0xa0cd0e6e
  40ac6d:	outs   dx,BYTE PTR ds:[esi]
  40ac6e:	adc    ah,BYTE PTR [edi+0x7c]
  40ac71:	dec    edi
  40ac72:	fisubr DWORD PTR [eax]
  40ac74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac75:	sbb    ebp,0x48
  40ac78:	fs jnp 0x40ac97
  40ac7b:	sub    DWORD PTR [ebx+0xe],edi
  40ac7e:	mov    dl,0x56
  40ac80:	sub    DWORD PTR [esi-0x2b036143],esp
  40ac86:	mov    ebx,0x5fc4dc80
  40ac8b:	xor    ecx,DWORD PTR ds:0xdcaf9719
  40ac91:	adc    BYTE PTR [ebp-0x70397d17],ch
  40ac97:	icebp  
  40ac98:	xchg   BYTE PTR [eax+esi*2+0x23f35b06],bh
  40ac9f:	push   cs
  40aca0:	dec    esi
  40aca1:	add    BYTE PTR [edi+ebx*8],cl
  40aca4:	jo     0x40ac97
  40aca6:	xor    bh,BYTE PTR [ebp-0x3a778937]
  40acac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acad:	adc    ch,BYTE PTR ds:0x2feca5b
  40acb3:	xlat   BYTE PTR ds:[ebx]
  40acb4:	pop    es
  40acb5:	mov    ebx,0x7831ad3e
  40acba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acbb:	mov    bh,BYTE PTR [edx-0x63]
  40acbe:	pop    esp
  40acbf:	das    
  40acc0:	retf   
  40acc1:	out    0xc,eax
  40acc3:	jecxz  0x40ad12
  40acc5:	je     0x40ad3c
  40acc7:	push   esi
  40acc8:	rcl    BYTE PTR [ebp-0x44b74cf0],0x8c
  40accf:	adc    DWORD PTR [ebx-0x2d6422b1],edx
  40acd5:	inc    edx
  40acd6:	jo     0x40acb2
  40acd8:	(bad)  
  40acd9:	cmp    eax,eax
  40acdb:	bound  ecx,QWORD PTR [ebp+edi*2+0x2739e417]
  40ace2:	or     BYTE PTR [edx-0x6ffe0cf6],dl
  40ace8:	test   BYTE PTR [edi],0xff
  40aceb:	and    ah,ch
  40aced:	or     al,0xb5
  40acef:	daa    
  40acf0:	aaa    
  40acf1:	outs   dx,BYTE PTR ds:[esi]
  40acf2:	dec    edi
  40acf3:	repnz leave 
  40acf5:	ss out 0x1d,eax
  40acf8:	sbb    eax,0xafe47189
  40acfd:	add    BYTE PTR [edx],dh
  40acff:	cmp    edi,DWORD PTR [ecx+0x2ff6217a]
  40ad05:	pop    ebx
  40ad06:	aad    0xd9
  40ad08:	(bad)  [eax-0x4d]
  40ad0b:	adc    ch,BYTE PTR [edi]
  40ad0d:	xchg   ecx,eax
  40ad0e:	lock nop
  40ad10:	push   ebx
  40ad11:	shl    ecx,cl
  40ad13:	pop    ss
  40ad14:	scas   al,BYTE PTR es:[edi]
  40ad15:	sar    BYTE PTR [ecx-0x7],0x62
  40ad19:	(bad)  
  40ad1a:	test   DWORD PTR es:[ebx+eax*8+0x44],edi
  40ad1f:	iret   
  40ad20:	dec    esp
  40ad21:	adc    eax,0x4c06915d
  40ad26:	lods   eax,DWORD PTR ds:[esi]
  40ad27:	and    DWORD PTR [ecx-0x4aec1195],ebx
  40ad2d:	cs jp  0x40acc3
  40ad30:	xchg   esi,eax
  40ad31:	inc    esi
  40ad32:	mov    edx,0x7500cbe1
  40ad37:	sti    
  40ad38:	push   eax
  40ad39:	xchg   ebp,eax
  40ad3a:	pusha  
  40ad3b:	xchg   bl,bl
  40ad3d:	jecxz  0x40ad55
  40ad3f:	pushf  
  40ad40:	jo     0x40ad14
  40ad42:	push   eax
  40ad43:	add    DWORD PTR [edi-0x45],0x2c6dde18
  40ad4a:	(bad)  
  40ad4b:	fcmovnbe st,st(3)
  40ad4d:	jmp    0xedf6:0x8a499d83
  40ad54:	cwde   
  40ad55:	inc    edi
  40ad56:	sub    eax,0x74c81e81
  40ad5b:	sbb    DWORD PTR [esi-0x2c],eax
  40ad5e:	int    0xb3
  40ad60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad61:	sub    al,0x8a
  40ad63:	pop    edi
  40ad64:	xor    DWORD PTR [esi+0x66],ebx
  40ad67:	or     ebp,DWORD PTR [ebx+0x61]
  40ad6a:	mov    ah,0x5d
  40ad6c:	pshufw mm5,QWORD PTR [ebp*8+0xfcd70e2],0xdc
  40ad75:	fdiv   QWORD PTR [ecx+edi*4]
  40ad78:	lods   eax,DWORD PTR ds:[esi]
  40ad79:	mov    ds:0x56985028,eax
  40ad7e:	mov    ecx,0xd941a9c4
  40ad83:	pop    ebx
  40ad84:	cmp    eax,0x2cdd0033
  40ad89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad8a:	cmc    
  40ad8b:	daa    
  40ad8c:	addr16 das 
  40ad8e:	aaa    
  40ad8f:	inc    esi
  40ad90:	addr16 mov eax,0xf6a517d7
  40ad96:	scas   eax,DWORD PTR es:[edi]
  40ad97:	sub    al,0xb
  40ad99:	xchg   ebx,eax
  40ad9a:	lock les ebx,FWORD PTR [edi]
  40ad9d:	jb     0x40ad26
  40ad9f:	pop    edi
  40ada0:	and    DWORD PTR [esi+0x2e],esp
  40ada3:	sub    eax,0xf7c71788
  40ada8:	or     eax,0x73b87747
  40adad:	(bad)  
  40adaf:	sbb    BYTE PTR [eax],0xeb
  40adb2:	dec    ebx
  40adb3:	pop    ss
  40adb4:	mov    eax,DWORD PTR [ebx]
  40adb6:	or     eax,0x9235c361
  40adbb:	or     ch,dl
  40adbd:	loope  0x40ad58
  40adbf:	les    ecx,FWORD PTR [ecx-0xf]
  40adc2:	aad    0x16
  40adc4:	jmp    0x62530126
  40adc9:	jo     0x40addc
  40adcb:	inc    ebp
  40adcc:	adc    DWORD PTR [esi+0x17287276],esp
  40add2:	mov    al,0x1b
  40add4:	idiv   al
  40add6:	leave  
  40add7:	and    DWORD PTR [ebx-0x2f3829c9],0x368e5322
  40ade1:	xchg   BYTE PTR [edx],ah
  40ade3:	jmp    0x40ad76
  40ade5:	aaa    
  40ade6:	scas   al,BYTE PTR es:[edi]
  40ade7:	inc    edx
  40ade8:	(bad)  
  40ade9:	mov    dh,0x72
  40adeb:	in     eax,0xab
  40aded:	clc    
  40adee:	dec    esp
  40adef:	mov    fs,WORD PTR [edx]
  40adf1:	mov    dh,0x22
  40adf3:	jno    0x40ad9d
  40adf5:	mov    esi,gs
  40adf7:	outs   dx,DWORD PTR ds:[esi]
  40adf8:	in     al,0xca
  40adfa:	enter  0x2159,0xe4
  40adfe:	sub    ebp,DWORD PTR [edi]
  40ae00:	sbb    DWORD PTR [ecx-0x48d36251],0x1bc1cda
  40ae0a:	ror    BYTE PTR [ebp-0x46402d94],1
  40ae10:	aad    0xb0
  40ae12:	sub    BYTE PTR [ecx-0x63d46e40],dl
  40ae18:	lea    edi,[esi+esi*4]
  40ae1b:	jae    0x40ae69
  40ae1d:	pop    esp
  40ae1e:	mov    eax,0x77e7d478
  40ae23:	arpl   sp,bp
  40ae25:	in     al,dx
  40ae26:	pop    edi
  40ae27:	ret    0x8c72
  40ae2a:	sub    edi,eax
  40ae2c:	or     al,dh
  40ae2e:	icebp  
  40ae2f:	mov    edi,0xe392178
  40ae34:	outs   dx,BYTE PTR ds:[esi]
  40ae35:	inc    eax
  40ae36:	mov    al,ds:0xa4542d0d
  40ae3b:	shl    BYTE PTR [ebp+eax*8+0x47c9183e],0x7b
  40ae43:	nop
  40ae44:	fidiv  DWORD PTR ss:[ebx]
  40ae47:	ds push esi
  40ae49:	inc    ecx
  40ae4a:	imul   BYTE PTR [ebp+0x2b56852b]
  40ae50:	jl     0x40ae26
  40ae52:	cmp    dl,bh
  40ae54:	lods   al,BYTE PTR ds:[esi]
  40ae55:	in     al,dx
  40ae56:	cmc    
  40ae57:	sub    ah,BYTE PTR [ecx-0x2c]
  40ae5a:	xor    al,0xde
  40ae5c:	scas   al,BYTE PTR es:[edi]
  40ae5d:	and    BYTE PTR [esi-0x2d50352b],bh
  40ae63:	(bad)  
  40ae64:	stc    
  40ae65:	out    dx,al
  40ae66:	ds test al,0x27
  40ae69:	jecxz  0x40ae62
  40ae6b:	retf   
  40ae6c:	jecxz  0x40ae48
  40ae6e:	test   al,0x18
  40ae70:	xor    BYTE PTR [ecx+0x593e9745],dh
  40ae76:	cmp    eax,0xdad2b2cb
  40ae7b:	sti    
  40ae7c:	inc    ecx
  40ae7d:	pop    ebp
  40ae7e:	ror    DWORD PTR [ecx-0x6d],cl
  40ae81:	dec    esp
  40ae82:	jo     0x40aec1
  40ae84:	add    eax,0x95729d66
  40ae89:	test   eax,0xe645d80f
  40ae8e:	std    
  40ae8f:	aad    0xfb
  40ae91:	and    ch,dl
  40ae93:	mov    dl,0x39
  40ae95:	arpl   WORD PTR [eax+ebp*1-0x5],bx
  40ae99:	out    0x4c,al
  40ae9b:	dec    BYTE PTR ds:0x427c7a46
  40aea1:	lahf   
  40aea2:	retf   0x1973
  40aea5:	xor    esp,edx
  40aea7:	loop   0x40ae7e
  40aea9:	pop    ss
  40aeaa:	cwde   
  40aeab:	idiv   DWORD PTR gs:[esi-0x8]
  40aeaf:	xor    edi,ebx
  40aeb1:	mov    ebx,0x89dabe7c
  40aeb6:	jb     0x40af06
  40aeb8:	aaa    
  40aeb9:	mov    edi,0x456152fd
  40aebe:	aas    
  40aebf:	jle    0x40aea7
  40aec1:	mov    ?,WORD PTR [ebp+edx*2+0x47]
  40aec5:	cmp    eax,0x62ee6f69
  40aeca:	push   ebp
  40aecb:	imul   edx,DWORD PTR [edi+0x2c],0xa2e72ee2
  40aed2:	popf   
  40aed3:	nop
  40aed4:	and    esi,DWORD PTR [edx-0x76184a81]
  40aeda:	mov    esp,0x38afacd1
  40aedf:	push   esi
  40aee0:	in     eax,dx
  40aee1:	out    dx,al
  40aee2:	adc    cl,ch
  40aee4:	mov    esi,0x69517b7
  40aee9:	ror    BYTE PTR [edi],1
  40aeeb:	dec    esp
  40aeec:	loop   0x40af1f
  40aeee:	push   ebx
  40aeef:	leave  
  40aef0:	fsub   QWORD PTR [eax+0x7acb5bee]
  40aef6:	mov    esi,0xb9ff3ea4
  40aefb:	iret   
  40aefc:	fimul  WORD PTR [ecx+ecx*8]
  40aeff:	fiadd  WORD PTR [ecx+0x10b29b67]
  40af05:	push   ebx
  40af06:	lock jp 0x40aee5
  40af09:	aad    0x85
  40af0b:	xchg   edx,eax
  40af0c:	std    
  40af0d:	lods   al,BYTE PTR ds:[esi]
  40af0e:	xor    DWORD PTR [ebx-0x3681021],ecx
  40af14:	mov    ebx,0xfedce97f
  40af19:	mov    ebp,0xa24bf618
  40af1e:	add    eax,DWORD PTR [ebp+0x35]
  40af21:	sbb    BYTE PTR ds:0xb243979b,0x3
  40af28:	ins    DWORD PTR es:[edi],dx
  40af29:	iret   
  40af2a:	mov    bl,0xfe
  40af2c:	mov    bh,0xae
  40af2e:	add    al,0x57
  40af30:	xchg   ebx,eax
  40af31:	fisubr DWORD PTR [eax+0x3feef696]
  40af37:	int3   
  40af38:	mov    BYTE PTR [ebp-0x55],ch
  40af3b:	cmp    cl,BYTE PTR [ecx+0x6d]
  40af3e:	retf   0xb341
  40af41:	call   0x25721e2
  40af46:	dec    esi
  40af47:	jae    0x40aedf
  40af49:	rol    BYTE PTR [edi-0x4bc27c59],1
  40af4f:	inc    edi
  40af50:	add    ah,BYTE PTR [edi-0x168ef30c]
  40af56:	sar    BYTE PTR [esi],cl
  40af58:	or     esp,DWORD PTR [edx]
  40af5a:	gs repnz sbb al,0xbb
  40af5e:	fmul   QWORD PTR [ecx]
  40af60:	xor    eax,0xdaaeba2e
  40af65:	lea    edi,[esi]
  40af67:	loope  0x40afb0
  40af69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af6a:	jbe    0x40afb4
  40af6c:	stos   DWORD PTR es:[edi],eax
  40af6d:	ins    BYTE PTR es:[edi],dx
  40af6e:	xchg   ebx,eax
  40af6f:	mov    cl,0xf3
  40af71:	jmp    0xc0cc3160
  40af76:	mov    WORD PTR [edx],cs
  40af78:	adc    eax,0xdba1d848
  40af7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af7e:	push   es
  40af7f:	(bad)  
  40af80:	test   eax,0x326ddd9
  40af85:	add    ecx,esp
  40af87:	mov    ss,WORD PTR [edi+0x4d]
  40af8a:	and    bh,BYTE PTR [esi+0x180a85db]
  40af90:	adc    al,0xac
  40af92:	push   ebp
  40af93:	es sbb eax,0x3274fe25
  40af99:	inc    esi
  40af9a:	(bad)  
  40af9b:	call   0xea3e7c61
  40afa0:	in     al,dx
  40afa1:	stc    
  40afa2:	jg     0x40afab
  40afa4:	push   ss
  40afa5:	cmp    bl,BYTE PTR [esi+ebp*2+0x20]
  40afa9:	shr    DWORD PTR [edi-0x73],0x8a
  40afad:	repz add dh,ch
  40afb0:	popf   
  40afb1:	xor    BYTE PTR [ecx-0x5ba00e11],0x19
  40afb8:	mov    al,0x7
  40afba:	push   esi
  40afbb:	add    eax,0x476de7b6
  40afc0:	mov    BYTE PTR [eax],bl
  40afc2:	js     0x40af5d
  40afc4:	out    dx,al
  40afc5:	mov    ?,edx
  40afc7:	fild   QWORD PTR [eax+eiz*2]
  40afca:	cmp    BYTE PTR [ebx+0x1a],bh
  40afcd:	pop    ebp
  40afce:	adc    al,0x21
  40afd0:	add    bl,BYTE PTR [edx]
  40afd2:	(bad)  
  40afd3:	and    eax,0xb9eefdfe
  40afd8:	repnz and eax,DWORD PTR [edi-0x750b04cd]
  40afdf:	inc    BYTE PTR [edx+0x73]
  40afe2:	or     eax,0xa42d4789
  40afe7:	xor    BYTE PTR [esi+0x5836264c],al
  40afed:	pusha  
  40afee:	mov    ds,esi
  40aff0:	mov    ebp,0x378fca8e
  40aff5:	adc    DWORD PTR [ebp-0x7b94e920],esi
  40affb:	jmp    0x7f04:0x790ff573
  40b002:	cmp    al,0x76
  40b004:	ds lock dec dx
  40b008:	or     esp,ebp
  40b00a:	sub    al,0x2c
  40b00c:	sub    bl,ah
  40b00e:	inc    ecx
  40b00f:	cwde   
  40b010:	push   ds
  40b011:	mov    ds:0xcf2bbf48,al
  40b016:	fidivr WORD PTR [edi+0x4988251a]
  40b01c:	xchg   esi,esi
  40b01e:	jg     0x40afe5
  40b020:	sub    DWORD PTR [edi+eiz*2-0x5d],edx
  40b024:	adc    eax,0x481042c8
  40b029:	jnp    0x40afe0
  40b02b:	cmp    DWORD PTR [eax+esi*1],ebx
  40b02e:	nop
  40b02f:	cmp    eax,0x6bef0c37
  40b034:	mov    bl,0xa8
  40b036:	in     eax,0xfa
  40b038:	sub    BYTE PTR [edi+0x55d99d66],ah
  40b03e:	out    0x8d,eax
  40b040:	xchg   ebp,eax
  40b041:	stos   BYTE PTR es:[edi],al
  40b042:	loope  0x40b0ae
  40b044:	mov    bh,0x63
  40b046:	fimul  WORD PTR [ebx+0x243a2ea7]
  40b04c:	shl    DWORD PTR [ebp+0x2720ce1e],0x12
  40b053:	stos   DWORD PTR es:[edi],eax
  40b054:	mov    ds:0xc5929738,al
  40b059:	push   ebx
  40b05a:	jge    0x40b0a1
  40b05c:	test   al,0x79
  40b05e:	dec    eax
  40b05f:	and    dh,al
  40b061:	mov    dh,0xef
  40b063:	call   0x2726:0x97ebe18f
  40b06a:	xchg   edi,eax
  40b06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b06c:	aad    0x2b
  40b06e:	dec    ebp
  40b06f:	adc    eax,0x8bb49717
  40b074:	xchg   ecx,eax
  40b075:	ins    BYTE PTR es:[edi],dx
  40b076:	inc    eax
  40b077:	sti    
  40b078:	stos   BYTE PTR es:[edi],al
  40b079:	dec    ebp
  40b07a:	push   ss
  40b07b:	aas    
  40b07c:	jg     0x40b0b7
  40b07e:	inc    BYTE PTR [ecx+esi*2+0x22]
  40b082:	sub    eax,0x73cca755
  40b087:	mov    bl,0x83
  40b089:	mov    dh,0xe5
  40b08b:	rcl    ch,cl
  40b08d:	inc    eax
  40b08e:	xlat   BYTE PTR ds:[ebx]
  40b08f:	dec    eax
  40b090:	test   al,0x5b
  40b092:	pop    ss
  40b093:	push   ss
  40b094:	inc    ebx
  40b095:	jge    0x40b0fa
  40b097:	dec    ebp
  40b098:	in     eax,dx
  40b099:	add    al,0x3c
  40b09b:	adc    ah,BYTE PTR [eax+ecx*4]
  40b09e:	inc    esp
  40b09f:	mov    eax,ds:0x8ab166b0
  40b0a4:	add    BYTE PTR [ecx+0x119dfb16],bh
  40b0aa:	cmc    
  40b0ab:	cmp    eax,0xa2e2b89f
  40b0b0:	xor    DWORD PTR [edx+0x25f85c03],ecx
  40b0b6:	xchg   ebx,esp
  40b0b8:	out    dx,al
  40b0b9:	pop    edx
  40b0ba:	stc    
  40b0bb:	imul   ebp,DWORD PTR [edi-0x2c5b4cbd],0xdd882a6f
  40b0c5:	ins    DWORD PTR es:[edi],dx
  40b0c6:	fwait
  40b0c7:	test   eax,0xcd667087
  40b0cc:	leave  
  40b0cd:	push   cs
  40b0ce:	xchg   ecx,eax
  40b0cf:	nop
  40b0d0:	div    BYTE PTR [edx-0x1c]
  40b0d3:	sbb    bh,BYTE PTR [edx+eiz*8]
  40b0d6:	aas    
  40b0d7:	adc    al,0xf1
  40b0d9:	out    0x63,al
  40b0db:	ror    BYTE PTR [edx-0x6878fca2],0x46
  40b0e2:	mov    bh,0xec
  40b0e4:	mov    bh,0xb1
  40b0e6:	outs   dx,BYTE PTR ds:[esi]
  40b0e7:	pop    es
  40b0e8:	or     al,0x1f
  40b0ea:	ins    BYTE PTR es:[edi],dx
  40b0eb:	add    ecx,esi
  40b0ed:	sbb    esp,DWORD PTR [ebx+0x3f9ae302]
  40b0f3:	lods   al,BYTE PTR ds:[esi]
  40b0f4:	push   eax
  40b0f5:	aas    
  40b0f6:	dec    ecx
  40b0f7:	push   ecx
  40b0f8:	outs   dx,DWORD PTR ds:[esi]
  40b0f9:	jmp    0x40b105
  40b0fb:	dec    eax
  40b0fc:	mov    WORD PTR [esi],?
  40b0fe:	ins    DWORD PTR es:[edi],dx
  40b0ff:	shl    BYTE PTR [edx-0xe],cl
  40b102:	push   es
  40b103:	push   ebp
  40b104:	mov    eax,0xf882e3eb
  40b109:	into   
  40b10a:	xor    ebp,DWORD PTR [edx]
  40b10c:	mov    eax,0x4c59c7b1
  40b111:	lea    eax,[edi-0x7f]
  40b114:	add    cl,al
  40b116:	jo     0x40b0e4
  40b118:	mov    ?,WORD PTR [ecx+0x7057bddb]
  40b11e:	dec    ebx
  40b11f:	imul   eax,DWORD PTR [ebp+0x7299c4b8],0x48
  40b126:	sub    ecx,DWORD PTR [esi-0x47e626d5]
  40b12c:	pop    ecx
  40b12d:	pop    ebx
  40b12e:	xchg   ebp,eax
  40b12f:	mov    dl,0x35
  40b131:	dec    ecx
  40b132:	push   ecx
  40b133:	add    al,0x1b
  40b135:	imul   eax,DWORD PTR [eax-0x53],0xffffffb6
  40b139:	mov    ch,0xfe
  40b13b:	fdivp  st(0),st
  40b13d:	xchg   eax,ebp
  40b13f:	pop    ss
  40b140:	and    BYTE PTR [edi-0x6a],bl
  40b143:	(bad)  
  40b144:	jmp    0x40b0dd
  40b146:	pop    eax
  40b147:	adc    BYTE PTR [edi-0x744eb25a],al
  40b14d:	push   cs
  40b14e:	mov    BYTE PTR [eax-0x32d50ccc],dh
  40b154:	je     0x40b1b6
  40b156:	daa    
  40b157:	cmp    BYTE PTR [edx],ch
  40b159:	xor    eax,0x70c95b06
  40b15e:	lds    edi,FWORD PTR [eax]
  40b160:	and    bl,bh
  40b162:	fimul  WORD PTR [ecx-0x3f273fd8]
  40b168:	enter  0x1552,0x6d
  40b16c:	enter  0x3a3b,0x1f
  40b170:	mov    es,WORD PTR [edx+0x4c]
  40b173:	inc    esi
  40b174:	jp     0x40b158
  40b176:	mov    cl,0x50
  40b178:	pop    edi
  40b179:	pop    eax
  40b17a:	push   es
  40b17b:	cmp    BYTE PTR [edx-0x58e865c4],cl
  40b181:	rcl    bh,1
  40b183:	and    eax,0x2bafae54
  40b188:	ret    
  40b189:	push   ss
  40b18a:	xor    BYTE PTR ds:0x9dfc0d44,cl
  40b190:	test   BYTE PTR [ebx+0x25d5dc85],bh
  40b196:	test   BYTE PTR [edx],dl
  40b198:	mov    cs:0xe9cd8570,al
  40b19e:	jns    0x40b202
  40b1a0:	clc    
  40b1a1:	mov    ds:0x2ead6f7b,eax
  40b1a6:	rcr    BYTE PTR [ebp+0x4c],0xd5
  40b1aa:	mov    ecx,0x4e08469d
  40b1af:	aad    0x63
  40b1b1:	add    ebp,ecx
  40b1b3:	jg     0x40b214
  40b1b5:	imul   DWORD PTR [ecx-0x5df37940]
  40b1bb:	mov    esp,0x76353b33
  40b1c0:	std    
  40b1c1:	inc    edx
  40b1c2:	sub    al,0x8f
  40b1c4:	push   ecx
  40b1c5:	sub    eax,0x95b63075
  40b1ca:	jne    0x40b1ac
  40b1cc:	mov    dh,0x59
  40b1ce:	fst    QWORD PTR [eax]
  40b1d0:	pop    esp
  40b1d1:	test   BYTE PTR [ebx*2+0x5d67e8db],ah
  40b1d8:	cmp    DWORD PTR [ebx],esp
  40b1da:	retf   0xb6dc
  40b1dd:	out    dx,eax
  40b1de:	jl     0x40b22f
  40b1e0:	dec    edx
  40b1e1:	push   ss
  40b1e2:	add    BYTE PTR [ebx+0x3dd83ed8],al
  40b1e8:	cmp    DWORD PTR es:[ecx],0x2a
  40b1ec:	ins    BYTE PTR es:[edi],dx
  40b1ed:	adc    ah,ah
  40b1ef:	test   eax,0xc38bf720
  40b1f4:	sub    DWORD PTR [esi],edi
  40b1f6:	push   ecx
  40b1f7:	icebp  
  40b1f8:	and    ecx,DWORD PTR [edi+0x6c87f0d2]
  40b1fe:	ret    
  40b1ff:	jb     0x40b1fd
  40b201:	out    dx,eax
  40b202:	pop    edx
  40b203:	mov    eax,0x3b0c8d67
  40b208:	xor    ch,dh
  40b20a:	dec    esp
  40b20b:	pop    esi
  40b20c:	cmc    
  40b20d:	imul   esi,DWORD PTR [edx-0x51],0xff0c2dd0
  40b214:	ret    
  40b215:	leave  
  40b216:	push   ds
  40b217:	retf   
  40b218:	adc    al,0x57
  40b21a:	pop    ecx
  40b21b:	imul   esi,DWORD PTR [eax],0x60
  40b21e:	leave  
  40b21f:	cmp    ebx,ebx
  40b221:	mov    ds:0x2466ff82,al
  40b226:	fsub   QWORD PTR [ebx+edi*4+0x4a8e36a0]
  40b22d:	mul    DWORD PTR [ebx]
  40b22f:	scas   al,BYTE PTR es:[edi]
  40b230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b231:	add    DWORD PTR [ebp+0x21],ebp
  40b234:	(bad)  
  40b236:	xchg   ebp,eax
  40b237:	test   BYTE PTR [ebx-0x3516cb46],dl
  40b23d:	cmp    dl,al
  40b23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b240:	pop    ss
  40b241:	popa   
  40b242:	inc    eax
  40b243:	xchg   ecx,eax
  40b244:	repnz in al,0x5d
  40b247:	inc    eax
  40b248:	popf   
  40b249:	pop    ebp
  40b24a:	es adc dh,ch
  40b24d:	jmp    0x40b1e2
  40b24f:	jmp    0xb6a:0x4352d427
  40b256:	pop    esp
  40b257:	adc    DWORD PTR [esi+ecx*4+0x5a29845],0x1aeb53db
  40b262:	imul   edx,DWORD PTR [esi],0xffffffc8
  40b265:	(bad)  
  40b266:	mov    eax,0x445e622b
  40b26b:	stos   DWORD PTR es:[edi],eax
  40b26c:	xchg   ecx,eax
  40b26d:	(bad)  
  40b26e:	mov    esi,0x7a201a18
  40b273:	xor    al,0x69
  40b275:	(bad)  
  40b276:	fcmovnbe st,st(7)
  40b278:	rol    BYTE PTR [eax],1
  40b27a:	xchg   edx,eax
  40b27b:	push   edi
  40b27c:	xor    edi,DWORD PTR [ecx-0x7adebb99]
  40b282:	and    al,0xc3
  40b284:	test   ch,dh
  40b286:	xchg   ah,ch
  40b288:	xor    al,0xb3
  40b28a:	mov    ?,WORD PTR [edx-0x8605de0]
  40b290:	add    BYTE PTR [edx-0x723dbcd5],dh
  40b296:	aam    0xfd
  40b298:	repz pop ds
  40b29a:	scas   eax,DWORD PTR es:[edi]
  40b29b:	push   esp
  40b29c:	sti    
  40b29d:	pop    ebx
  40b29e:	lahf   
  40b29f:	xor    BYTE PTR [ecx+0x24],ah
  40b2a2:	adc    ecx,DWORD PTR [ecx]
  40b2a4:	sti    
  40b2a5:	ja     0x40b24c
  40b2a7:	fmul   QWORD PTR [ecx+0x2199207d]
  40b2ad:	xchg   edx,eax
  40b2ae:	adc    al,0xf4
  40b2b0:	mov    ebx,0xcaf3bb85
  40b2b5:	adc    DWORD PTR [ecx+0x2abf3c2f],ebx
  40b2bb:	xor    dh,BYTE PTR [eax+eiz*1]
  40b2be:	sbb    eax,DWORD PTR [esi]
  40b2c0:	test   BYTE PTR [edx-0x3eeb6456],cl
  40b2c6:	xlat   BYTE PTR ds:[ebx]
  40b2c7:	mov    esp,0x754c3c91
  40b2cc:	popf   
  40b2cd:	sbb    eax,0x89ecf496
  40b2d2:	jmp    0x40b281
  40b2d4:	cdq    
  40b2d5:	cmc    
  40b2d6:	fiadd  WORD PTR [eax+esi*4]
  40b2d9:	clc    
  40b2da:	jmp    0x40b272
  40b2dc:	xor    BYTE PTR [edx],bl
  40b2de:	out    dx,al
  40b2df:	or     ch,bh
  40b2e1:	fisttp QWORD PTR [esi]
  40b2e3:	lahf   
  40b2e4:	clc    
  40b2e5:	ret    
  40b2e6:	push   ds
  40b2e7:	shl    BYTE PTR [ebp-0x36],0xfb
  40b2eb:	js     0x40b34f
  40b2ed:	je     0x40b302
  40b2ef:	xchg   esi,eax
  40b2f0:	or     esp,DWORD PTR [edi-0x44]
  40b2f3:	imul   eax,DWORD PTR [edx],0x55
  40b2f6:	shl    bh,1
  40b2f8:	call   ebx
  40b2fa:	mov    dh,0x5f
  40b2fc:	imul   ebx,edi,0x2f020961
  40b302:	imul   ecx,DWORD PTR ds:0xfe235c7b,0x6e
  40b309:	outs   dx,BYTE PTR ds:[esi]
  40b30a:	(bad)  
  40b30d:	mov    esi,0xd17e0e93
  40b312:	cmp    al,ah
  40b314:	sub    DWORD PTR [esi-0x4e2f345],eax
  40b31a:	(bad)  
  40b31b:	ret    0xc2e5
  40b31e:	pop    eax
  40b31f:	mov    BYTE PTR [eax+0x4a3e4631],dl
  40b325:	mov    al,0x1d
  40b327:	xor    eax,0x267e1c11
  40b32c:	data16 and BYTE PTR [ecx+eiz*4],bl
  40b330:	nop
  40b331:	ja     0x40b345
  40b333:	(bad)  
  40b334:	out    0x53,eax
  40b336:	mov    DWORD PTR [edx-0x45b6daaa],eax
  40b33c:	jb     0x40b382
  40b33e:	ds mov ecx,0x8cfbb914
  40b344:	xchg   edx,eax
  40b345:	aaa    
  40b346:	xor    eax,0x7f865971
  40b34b:	loop   0x40b382
  40b34d:	inc    esi
  40b34e:	xor    al,0x8f
  40b350:	xchg   esp,eax
  40b351:	mov    bh,BYTE PTR ds:0xbf53bbce
  40b357:	push   es
  40b358:	push   ecx
  40b359:	aad    0x78
  40b35b:	cld    
  40b35c:	dec    ebx
  40b35d:	addr16 dec esi
  40b35f:	ins    DWORD PTR es:[edi],dx
  40b360:	mov    DWORD PTR [ecx-0x66],edx
  40b363:	xor    al,0xb0
  40b365:	fidivr WORD PTR cs:[edi+0xf7d67c4]
  40b36c:	cmp    al,0x4e
  40b36e:	xor    al,ah
  40b370:	or     eax,0x117edf26
  40b375:	loope  0x40b390
  40b377:	dec    esi
  40b378:	push   ecx
  40b379:	lds    edi,FWORD PTR [edx-0x1b58fb16]
  40b37f:	ja     0x40b3fd
  40b381:	xlat   BYTE PTR ds:[ebx]
  40b382:	cdq    
  40b383:	mov    ecx,0xc6dd8fc2
  40b388:	mov    ecx,0xd67f82d3
  40b38d:	mov    WORD PTR [edi+0x382a8b5c],es
  40b393:	cld    
  40b394:	int    0xb0
  40b396:	mov    edx,0x3b025be2
  40b39b:	inc    eax
  40b39c:	pop    ss
  40b39d:	mov    ecx,0xb65251cf
  40b3a2:	dec    ebx
  40b3a3:	ror    dh,0x6c
  40b3a6:	and    ebp,DWORD PTR [ebp-0x65]
  40b3a9:	(bad)  [eax-0x56a30a90]
  40b3af:	pop    edx
  40b3b0:	mov    edx,0xbeff9a2b
  40b3b5:	dec    eax
  40b3b6:	pop    ecx
  40b3b7:	das    
  40b3b8:	test   ebp,ecx
  40b3ba:	shr    eax,1
  40b3bc:	lods   al,BYTE PTR ds:[esi]
  40b3bd:	xor    BYTE PTR [eax+0x2b],bh
  40b3c0:	mov    edi,0xf5bbdac5
  40b3c5:	sub    ah,BYTE PTR [ecx-0xc]
  40b3c8:	jne    0x40b41c
  40b3ca:	cdq    
  40b3cb:	outs   dx,BYTE PTR ds:[esi]
  40b3cc:	push   esi
  40b3cd:	cmp    cl,BYTE PTR [ebx+0x57]
  40b3d0:	cmp    DWORD PTR [ebp-0x3],ebp
  40b3d3:	mov    dl,0x2e
  40b3d5:	xor    ah,bh
  40b3d7:	ss push ss
  40b3d9:	mov    DWORD PTR [edx-0x51],eax
  40b3dc:	jno    0x40b375
  40b3de:	jmp    0x40b369
  40b3e0:	(bad)  
  40b3e2:	aas    
  40b3e3:	cmc    
  40b3e4:	mov    DWORD PTR [esi+eiz*4-0x19],ebp
  40b3e8:	sbb    al,0x32
  40b3ea:	mov    ecx,0x1e4e6145
  40b3ef:	dec    edi
  40b3f0:	sbb    bl,BYTE PTR [esi+0x2deec24c]
  40b3f6:	mov    al,ds:0xfa253263
  40b3fb:	xchg   BYTE PTR [edx+0x4],cl
  40b3fe:	stos   DWORD PTR es:[edi],eax
  40b3ff:	lods   eax,DWORD PTR ds:[si]
  40b401:	clc    
  40b402:	xor    eax,DWORD PTR [ecx*1-0x586fd910]
  40b409:	or     DWORD PTR [esi-0x71],0xffffff90
  40b40d:	jp     0x40b43d
  40b40f:	aam    0x73
  40b411:	sub    al,0xbf
  40b413:	and    dl,dh
  40b415:	mov    bh,0x26
  40b417:	xchg   esi,eax
  40b418:	mov    ebx,0x8d39a7fc
  40b41d:	imul   BYTE PTR [ebx+0x55]
  40b420:	ins    BYTE PTR es:[edi],dx
  40b421:	aaa    
  40b422:	jb     0x40b3da
  40b424:	mov    ecx,0x1bf30a20
  40b429:	fild   DWORD PTR [ebp-0x65]
  40b42c:	mov    ebx,0xef4b0aee
  40b431:	mov    cl,0xcc
  40b433:	jns    0x40b411
  40b435:	mov    al,0xaf
  40b437:	mov    ch,BYTE PTR [ebx+0x3a]
  40b43a:	mov    ds:0x47358efc,al
  40b43f:	cld    
  40b440:	jl     0x40b3c8
  40b442:	mov    ch,0xab
  40b444:	pop    esi
  40b445:	push   es
  40b446:	push   edi
  40b447:	jbe    0x40b3d8
  40b449:	push   esp
  40b44a:	sbb    BYTE PTR [ecx-0x7f],al
  40b44d:	mov    edi,0x5ca503b1
  40b452:	jb     0x40b46a
  40b454:	(bad)  
  40b455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b456:	outs   dx,BYTE PTR ds:[esi]
  40b457:	mov    ch,0xf8
  40b459:	rcl    ebx,1
  40b45b:	mov    esp,0x9b08aff3
  40b460:	dec    ebx
  40b461:	aam    0xc9
  40b463:	push   edi
  40b464:	in     al,dx
  40b465:	test   bl,dh
  40b467:	xchg   edx,eax
  40b468:	pop    edx
  40b469:	and    DWORD PTR [esi+0xfcc0979],edx
  40b46f:	sti    
  40b470:	xchg   ebx,eax
  40b471:	clc    
  40b472:	sar    BYTE PTR [esi+0x65534f38],cl
  40b478:	and    al,0x2
  40b47a:	shl    DWORD PTR [edi],cl
  40b47c:	retf   0xff26
  40b47f:	or     eax,0x712a4939
  40b484:	fistp  QWORD PTR ds:0xb6aa8bf3
  40b48a:	inc    ecx
  40b48b:	repnz push 0x5a
  40b48e:	loope  0x40b47f
  40b490:	mov    ecx,0x8484e1a6
  40b495:	idiv   bh
  40b497:	pop    ecx
  40b498:	fneni(8087 only) 
  40b49a:	cmp    DWORD PTR [edx+0x6],ebp
  40b49d:	cld    
  40b49e:	loope  0x40b513
  40b4a0:	pop    esp
  40b4a1:	loopne 0x40b51e
  40b4a3:	xor    eax,0x922c200d
  40b4a8:	sub    ebp,esi
  40b4aa:	mov    ebx,0x82c8cf12
  40b4af:	push   ss
  40b4b0:	or     dl,bl
  40b4b2:	push   ecx
  40b4b3:	icebp  
  40b4b4:	stos   BYTE PTR es:[edi],al
  40b4b5:	jmp    0x4e0b:0x30184295
  40b4bc:	push   es
  40b4bd:	in     eax,0x5d
  40b4bf:	cmp    BYTE PTR [ecx-0x7f2a76ba],bh
  40b4c5:	sub    BYTE PTR [ebp-0x78e3e0ed],al
  40b4cb:	mov    ebp,0xa0501be6
  40b4d0:	mov    ds:0x26871985,al
  40b4d5:	and    DWORD PTR [edx],ebx
  40b4d7:	or     bh,bh
  40b4d9:	stos   DWORD PTR es:[edi],eax
  40b4da:	inc    ebx
  40b4db:	xchg   ebp,eax
  40b4dc:	mov    esi,0xaa6b2b17
  40b4e1:	jmp    0x40b536
  40b4e3:	(bad)  
  40b4e4:	xchg   ecx,eax
  40b4e5:	cmc    
  40b4e6:	ss ins DWORD PTR es:[edi],dx
  40b4e8:	add    eax,0xae650153
  40b4ed:	jl     0x40b52a
  40b4ef:	mov    eax,0xcdd7aab1
  40b4f4:	js     0x40b496
  40b4f6:	mov    fs:0xa42b548f,al
  40b4fc:	dec    ebx
  40b4fd:	les    esp,FWORD PTR [edi-0x195f9e50]
  40b503:	jp     0x40b4d6
  40b505:	(bad)  
  40b506:	mov    ds:0x44933b69,eax
  40b50b:	test   eax,0x83b14978
  40b510:	dec    ebp
  40b511:	push   eax
  40b512:	loop   0x40b547
  40b514:	(bad)  
  40b515:	fdivr  st(5),st
  40b517:	cmc    
  40b518:	push   0x9667cef
  40b51d:	cmp    ebx,ebp
  40b51f:	sti    
  40b520:	xor    edi,eax
  40b522:	in     eax,dx
  40b523:	push   ebp
  40b524:	lahf   
  40b525:	in     al,dx
  40b526:	je     0x40b4aa
  40b528:	push   0x20
  40b52a:	cmp    eax,0xb82d608
  40b52f:	int    0x9d
  40b531:	ja     0x40b58c
  40b533:	cwde   
  40b534:	jo     0x40b4e3
  40b536:	mov    ecx,ebp
  40b538:	push   es
  40b539:	lds    esi,FWORD PTR [ebp-0x13]
  40b53c:	xor    al,0xe0
  40b53e:	pop    esi
  40b53f:	lods   al,BYTE PTR ds:[esi]
  40b540:	mov    ebp,0x81ccf975
  40b545:	mov    dl,0x57
  40b547:	repz mov ds:0x7ce1881e,al
  40b54d:	or     al,0xf1
  40b54f:	rcr    DWORD PTR [ebp+0x1bb38fa5],0xb0
  40b556:	push   ebx
  40b557:	and    DWORD PTR [esi+0x2d6a5cea],ebp
  40b55d:	sbb    edi,ebp
  40b55f:	cwde   
  40b560:	xchg   DWORD PTR [eax+0x57d32d64],esp
  40b566:	es push edi
  40b568:	or     dl,al
  40b56a:	sbb    DWORD PTR [eiz*4+0x458b8921],edi
  40b571:	cmp    cl,BYTE PTR [eax-0x1d03586c]
  40b577:	cld    
  40b578:	or     dh,0x17
  40b57b:	ja     0x40b562
  40b57d:	xchg   BYTE PTR [esp+edx*8+0x2a],al
  40b581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b582:	(bad)  [edi-0x6393cf20]
  40b588:	int3   
  40b589:	hlt    
  40b58a:	add    ah,cl
  40b58c:	and    ecx,esp
  40b58e:	repnz rol DWORD PTR [ebx+0x428b9e0d],cl
  40b595:	(bad)  
  40b596:	mov    bl,0xc5
  40b598:	imul   ebx,ecx,0x9a3a0e60
  40b59e:	into   
  40b59f:	push   esi
  40b5a0:	pushf  
  40b5a1:	xor    BYTE PTR [ebp+0x53],dh
  40b5a4:	mov    ds:0x28e28533,al
  40b5aa:	test   BYTE PTR [edx+0x44],dh
  40b5ad:	cmp    al,0x31
  40b5af:	daa    
  40b5b0:	mov    eax,ds:0x9a8041bb
  40b5b5:	sbb    edx,ecx
  40b5b7:	call   0x3334:0xfe4de7a9
  40b5be:	arpl   WORD PTR [edi],bx
  40b5c0:	cmc    
  40b5c1:	dec    ebx
  40b5c2:	bound  ebp,QWORD PTR ds:[ebx+0x6886a48c]
  40b5c9:	js     0x40b559
  40b5cb:	xchg   BYTE PTR [esi],dl
  40b5cd:	xchg   esp,eax
  40b5ce:	jmp    0x582e0035
  40b5d3:	push   0xffffffa8
  40b5d5:	xchg   edi,eax
  40b5d6:	push   edx
  40b5d7:	rol    BYTE PTR fs:[esi-0x1d],cl
  40b5db:	je     0x40b632
  40b5dd:	dec    esi
  40b5de:	ds aaa 
  40b5e0:	neg    BYTE PTR [ebx+ebp*8-0x3f2bf7b0]
  40b5e7:	sbb    eax,DWORD PTR [edi+0x63]
  40b5ea:	clc    
  40b5eb:	sub    DWORD PTR [edx],ebx
  40b5ed:	mov    al,ds:0x5cd151f7
  40b5f2:	jno    0x40b57f
  40b5f4:	jge    0x40b5b3
  40b5f6:	jmp    0x40b5a3
  40b5f8:	dec    edi
  40b5f9:	and    al,0xc6
  40b5fb:	(bad)  [ecx]
  40b5fd:	mov    bl,0x5c
  40b5ff:	(bad)  
  40b600:	retf   0xdf0
  40b603:	mov    BYTE PTR [esi+0x65ba942c],0xc2
  40b60a:	xor    cl,BYTE PTR [edx+esi*8+0xb62792c]
  40b611:	mov    ah,0x15
  40b613:	cmp    BYTE PTR [ebx+0x41eaa084],bh
  40b619:	jle    0x40b681
  40b61b:	(bad)  
  40b61c:	jl     0x40b5bd
  40b61e:	and    dl,BYTE PTR [eax]
  40b620:	stos   BYTE PTR es:[edi],al
  40b621:	push   esi
  40b622:	inc    ebp
  40b623:	xchg   edx,eax
  40b624:	mov    ch,0x97
  40b626:	dec    ecx
  40b627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b628:	(bad)  
  40b62a:	sub    eax,0x1fec8491
  40b62f:	nop
  40b630:	out    0x47,al
  40b632:	mov    ds:0x707eb7e1,eax
  40b637:	mov    ds:0x127d7e91,al
  40b63c:	lea    edi,[esi]
  40b63e:	test   BYTE PTR [eax],dl
  40b640:	mov    ah,0xbb
  40b642:	jmp    0x40b68b
  40b644:	jno    0x40b687
  40b646:	sbb    eax,0x6d6fc87d
  40b64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b64c:	cmp    al,0x84
  40b64e:	cmp    DWORD PTR [esi+ebx*1+0x65a93dae],ecx
  40b655:	fcmovne st,st(6)
  40b657:	jp     0x40b609
  40b659:	or     eax,0xfe6a1be1
  40b65e:	fild   QWORD PTR [ebx+eax*8-0x65]
  40b662:	iret   
  40b663:	nop
  40b664:	push   ss
  40b665:	test   eax,0x4115c4fc
  40b66a:	addr16 pop eax
  40b66c:	adc    dh,al
  40b66e:	mov    dl,BYTE PTR [ebp-0x6a2e05cc]
  40b674:	aad    0x74
  40b676:	adc    BYTE PTR [edx+0x3ab0babc],bl
  40b67c:	les    eax,FWORD PTR [edi+0x1af74f02]
  40b682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b683:	outs   dx,DWORD PTR ds:[esi]
  40b684:	pushf  
  40b685:	add    cl,BYTE PTR [esi-0x7e5ec92d]
  40b68b:	sub    esi,edi
  40b68d:	popa   
  40b68e:	in     eax,dx
  40b68f:	es xchg edx,eax
  40b691:	mov    esp,0xb5453998
  40b696:	or     al,0x91
  40b698:	jae    0x40b6c9
  40b69a:	sti    
  40b69b:	aas    
  40b69c:	pop    ss
  40b69d:	adc    BYTE PTR [eax],ah
  40b69f:	cli    
  40b6a0:	(bad)  
  40b6a1:	jmp    0xad32:0x87ff8204
  40b6a8:	xor    al,0xd4
  40b6aa:	jno    0x40b6a2
  40b6ac:	sbb    edx,eax
  40b6ae:	mov    ecx,0x4fb30421
  40b6b3:	mov    dl,0x9f
  40b6b5:	fsub   st,st(6)
  40b6b7:	xchg   ebp,eax
  40b6b8:	test   BYTE PTR [ebx+ebx*4],al
  40b6bb:	out    0x69,al
  40b6bd:	lock idiv BYTE PTR [ebx+eiz*8-0x6c]
  40b6c2:	cmp    cl,BYTE PTR [edi]
  40b6c4:	adc    eax,0x11fdf1a2
  40b6c9:	div    DWORD PTR [ebx+0x78]
  40b6cc:	outs   dx,DWORD PTR ds:[esi]
  40b6cd:	out    0x83,al
  40b6cf:	jae    0x40b6fd
  40b6d1:	(bad)
  40b6d4:	test   BYTE PTR [ecx-0x45],0xe1
  40b6d8:	mov    al,ds:0x1b62f217
  40b6dd:	dec    ecx
  40b6de:	mov    eax,0xd271a76d
  40b6e3:	imul   esi,DWORD PTR [ecx],0x12
  40b6e6:	mov    dl,0x87
  40b6e8:	jge    0x40b72b
  40b6ea:	mov    BYTE PTR [edx-0x54],cl
  40b6ed:	in     al,dx
  40b6ee:	test   eax,0x2a419e9e
  40b6f3:	mov    BYTE PTR [eax],bl
  40b6f5:	sub    dl,cl
  40b6f7:	aas    
  40b6f8:	dec    ebp
  40b6f9:	data16 jno 0x40b6f3
  40b6fc:	mov    al,0x48
  40b6fe:	push   ecx
  40b6ff:	xchg   edi,eax
  40b700:	retf   0x9a7f
  40b703:	ret    0xcb95
  40b706:	iret   
  40b707:	int    0xfc
  40b709:	aam    0x61
  40b70b:	lds    ebp,FWORD PTR [edi+0x26]
  40b70e:	push   0xffffff9f
  40b710:	sbb    DWORD PTR [ebp-0x3bed5168],esp
  40b716:	pop    ebx
  40b717:	sar    BYTE PTR [edx-0x7],1
  40b71a:	sbb    al,ah
  40b71c:	push   0x59a5e8a1
  40b721:	js     0x40b72d
  40b723:	jb     0x40b6ca
  40b725:	add    DWORD PTR [edi+0x26],esp
  40b728:	cmp    eax,0xf64d990c
  40b72d:	dec    ebx
  40b72e:	jle    0x40b720
  40b730:	adc    edx,esi
  40b732:	push   ss
  40b733:	pop    esp
  40b734:	xor    al,ah
  40b736:	call   0xb7d8:0x4f0701e7
  40b73d:	stos   DWORD PTR es:[edi],eax
  40b73e:	sahf   
  40b73f:	mov    ch,0x5e
  40b741:	lea    edi,ss:[edi]
  40b744:	(bad)  
  40b745:	imul   BYTE PTR [eax-0x72]
  40b748:	pop    edx
  40b749:	sbb    eax,0x4d5f7c3d
  40b74e:	fdivr  QWORD PTR [ebp+ecx*2-0x53]
  40b752:	fcomp  QWORD PTR [eax+0x6795cb1c]
  40b758:	xchg   ebp,eax
  40b759:	outs   dx,DWORD PTR ds:[esi]
  40b75a:	(bad)  
  40b75c:	popf   
  40b75d:	pop    esp
  40b75e:	inc    edx
  40b75f:	mov    eax,ds:0xcc8156c9
  40b764:	test   BYTE PTR [ebx+0x2],0x9b
  40b768:	int    0x64
  40b76a:	adc    al,0xc9
  40b76c:	jb     0x40b799
  40b76e:	add    BYTE PTR [ebx],cl
  40b770:	add    ecx,ecx
  40b772:	inc    ebx
  40b773:	jl     0x40b7d9
  40b775:	fimul  WORD PTR ds:0x369b1642
  40b77b:	jmp    0xf609:0x272a45c4
  40b782:	jae    0x40b713
  40b784:	mov    eax,0xd3c75a85
  40b789:	add    cl,ch
  40b78b:	adc    dl,BYTE PTR [ecx]
  40b78d:	inc    ecx
  40b78e:	dec    eax
  40b78f:	and    dl,BYTE PTR [ebp-0x1deab884]
  40b795:	cmp    dh,ch
  40b797:	push   ss
  40b798:	ficom  DWORD PTR [esi-0x36]
  40b79b:	mov    DWORD PTR [edi+ecx*8-0x2a29b90],eax
  40b7a2:	jl     0x40b782
  40b7a4:	lock (bad) 
  40b7a6:	cmp    BYTE PTR [edi+edi*4-0x790351d5],ah
  40b7ad:	sbb    al,0x61
  40b7af:	int    0x5d
  40b7b1:	popf   
  40b7b2:	mov    esp,es
  40b7b4:	sbb    DWORD PTR [ecx-0x79],0x2f8b025
  40b7bb:	rcr    DWORD PTR [ebp+0x74bdcd48],0xf8
  40b7c2:	push   es
  40b7c3:	inc    eax
  40b7c4:	popa   
  40b7c5:	cmp    al,0xd5
  40b7c7:	xlat   BYTE PTR ds:[ebx]
  40b7c8:	jne    0x40b7ba
  40b7ca:	aam    0x83
  40b7cc:	push   ds
  40b7cd:	(bad)  
  40b7ce:	jge    0x40b793
  40b7d0:	mov    esi,0xe4d37dbb
  40b7d5:	call   0xd90f2956
  40b7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7db:	push   ebp
  40b7dc:	push   es
  40b7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7de:	push   0x54
  40b7e0:	lods   eax,DWORD PTR ds:[esi]
  40b7e1:	cwde   
  40b7e2:	or     bl,BYTE PTR [ebp-0x32b6f051]
  40b7e8:	rol    DWORD PTR [ebx+0x8],0x8c
  40b7ec:	xor    eax,0xea2da29f
  40b7f1:	loope  0x40b860
  40b7f3:	xor    esi,ebx
  40b7f5:	jno    0x40b815
  40b7f7:	fs ins DWORD PTR es:[edi],dx
  40b7f9:	mov    eax,ecx
  40b7fb:	xor    bl,BYTE PTR [edx+0x31]
  40b7fe:	inc    esp
  40b7ff:	out    dx,eax
  40b800:	inc    ecx
  40b801:	xor    bh,BYTE PTR [ebx-0x6b]
  40b804:	cmp    BYTE PTR [esi+0x5a],0xaf
  40b808:	xor    DWORD PTR [ecx+0x17],ebp
  40b80b:	stos   DWORD PTR es:[edi],eax
  40b80c:	gs mov ch,0xb3
  40b80f:	add    esi,eax
  40b811:	adc    eax,0x205e99ba
  40b816:	test   al,0x10
  40b818:	fwait
  40b819:	jae    0x40b824
  40b81b:	mov    ebp,0xd277c429
  40b820:	out    dx,al
  40b821:	mov    al,ds:0xd5e1a764
  40b826:	push   ebp
  40b827:	xchg   ebx,eax
  40b828:	test   DWORD PTR [ecx],ecx
  40b82a:	clc    
  40b82b:	push   ds
  40b82c:	dec    eax
  40b82d:	inc    esp
  40b82e:	jb     0x40b7cc
  40b830:	lods   al,BYTE PTR ds:[esi]
  40b831:	xor    ah,BYTE PTR [esi+0xa57575c]
  40b837:	lods   eax,DWORD PTR ds:[esi]
  40b838:	loop   0x40b88f
  40b83a:	dec    ecx
  40b83b:	in     eax,dx
  40b83c:	retf   0x202f
  40b83f:	sbb    ebx,DWORD PTR [esi-0x1]
  40b842:	or     eax,0x6b63266e
  40b847:	jns    0x40b8c8
  40b849:	push   eax
  40b84a:	mov    ebx,0x6cc0244d
  40b84f:	add    al,0x63
  40b851:	add    esi,edx
  40b853:	nop
  40b854:	adc    edi,eax
  40b856:	dec    eax
  40b857:	hlt    
  40b858:	mov    al,BYTE PTR [edi]
  40b85a:	inc    esi
  40b85b:	cmp    edx,edi
  40b85d:	sub    DWORD PTR [ecx+0x8752d23],esi
  40b863:	fisubr WORD PTR [ecx]
  40b865:	pusha  
  40b866:	test   eax,0x99c023a2
  40b86b:	dec    eax
  40b86c:	xchg   edi,eax
  40b86d:	push   ss
  40b86e:	xchg   ecx,eax
  40b86f:	jge    0x40b8ea
  40b871:	imul   ecx,DWORD PTR [ecx+0x14b7ae7b],0x4c
  40b878:	stos   BYTE PTR es:[edi],al
  40b879:	adc    eax,0x497e609c
  40b87e:	scas   eax,DWORD PTR es:[edi]
  40b87f:	mov    ah,0xb
  40b881:	jge    0x40b842
  40b883:	xlat   BYTE PTR ds:[ebx]
  40b884:	adc    al,0x57
  40b886:	xor    dh,BYTE PTR [esi]
  40b888:	xchg   edx,eax
  40b889:	test   DWORD PTR [edi+0x56182b49],esp
  40b88f:	sub    BYTE PTR [ecx+0x5bd240a],dh
  40b895:	pop    ebp
  40b896:	(bad)  
  40b897:	gs in  eax,dx
  40b899:	cwde   
  40b89a:	into   
  40b89b:	or     esi,DWORD PTR [esp+ecx*2]
  40b89e:	dec    eax
  40b89f:	jmp    0x40b8dc
  40b8a1:	pushf  
  40b8a2:	mov    cl,0x8f
  40b8a4:	mov    bl,0x89
  40b8a6:	and    edi,ecx
  40b8a8:	mov    ebp,0x964f91ec
  40b8ad:	pop    ebx
  40b8ae:	fidivr DWORD PTR [eax+0x6f]
  40b8b1:	aam    0x9e
  40b8b3:	jle    0x40b87c
  40b8b5:	jns    0x40b85b
  40b8b7:	aam    0x71
  40b8b9:	scas   eax,DWORD PTR es:[edi]
  40b8ba:	xor    DWORD PTR [edx],edx
  40b8bc:	jo     0x40b846
  40b8be:	jl     0x40b859
  40b8c0:	jbe    0x40b927
  40b8c2:	aad    0x73
  40b8c4:	rcpps  xmm5,xmm6
  40b8c7:	aad    0x37
  40b8c9:	pushf  
  40b8ca:	cmp    edx,DWORD PTR [ebp+0x53]
  40b8cd:	(bad)  
  40b8ce:	icebp  
  40b8cf:	ja     0x40b8b5
  40b8d1:	cmp    eax,edx
  40b8d3:	mov    ebx,0x3cc51ed8
  40b8d8:	jp     0x40b922
  40b8da:	in     al,0xf1
  40b8dc:	lods   eax,DWORD PTR ds:[esi]
  40b8dd:	jno    0x40b91d
  40b8df:	adc    DWORD PTR [edx-0x5c],0x138ab6aa
  40b8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e7:	les    esp,FWORD PTR [ebp+0x2d]
  40b8ea:	cli    
  40b8eb:	mov    esp,0x28f325c4
  40b8f0:	(bad)  
  40b8f1:	pop    edx
  40b8f2:	mov    ch,0x61
  40b8f4:	xor    esi,DWORD PTR [eax+ebp*8]
  40b8f7:	loope  0x40b89c
  40b8f9:	nop
  40b8fa:	ins    BYTE PTR es:[edi],dx
  40b8fb:	push   edx
  40b8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8fd:	test   al,0xb4
  40b8ff:	test   eax,0x5f9e5b87
  40b904:	push   0x20
  40b906:	pop    esp
  40b907:	jmp    0x8c1bb585
  40b90c:	daa    
  40b90d:	mov    ch,BYTE PTR [ebx-0x7e6a5990]
  40b913:	push   DWORD PTR [edi]
  40b915:	shr    BYTE PTR ds:0xd13f3963,0xdd
  40b91c:	dec    ebx
  40b91d:	pop    esi
  40b91e:	jmp    0x40b973
  40b920:	iret   
  40b921:	mov    DWORD PTR [ebx-0x2b09cc90],ecx
  40b927:	cmp    edx,DWORD PTR [ebp+0x4c48ffcf]
  40b92d:	stc    
  40b92e:	cmp    eax,0xa418ff49
  40b933:	jle    0x40b96a
  40b935:	sbb    dl,BYTE PTR [ebp-0x2d9d8c06]
  40b93b:	lock jbe 0x40b8ca
  40b93e:	loop   0x40b96e
  40b940:	xor    dh,ah
  40b942:	mov    esp,0xb9c7096c
  40b947:	popa   
  40b948:	or     BYTE PTR [ecx+0x427755fd],0xc2
  40b94f:	int    0x7f
  40b951:	rol    BYTE PTR [esi],1
  40b953:	imul   ebx,DWORD PTR [edx],0xae50344a
  40b959:	xchg   ebp,eax
  40b95a:	in     al,0x4a
  40b95c:	push   esp
  40b95d:	lods   eax,DWORD PTR ds:[esi]
  40b95e:	mov    eax,ds:0x4ec2000b
  40b963:	xlat   BYTE PTR ds:[ebx]
  40b964:	mov    esp,0x12e7550b
  40b969:	imul   esi,DWORD PTR [esp+edi*1],0xffffffa7
  40b96d:	mov    DWORD PTR [edi],esp
  40b96f:	inc    ebx
  40b970:	push   esp
  40b971:	pop    edx
  40b972:	jae    0x40b9c5
  40b974:	outs   dx,DWORD PTR ds:[esi]
  40b975:	retf   
  40b976:	jmp    0xbde305cf
  40b97b:	adc    al,0xa3
  40b97d:	sub    esi,DWORD PTR [edi]
  40b97f:	push   eax
  40b980:	sbb    DWORD PTR [eax+0x3],0x525ffd00
  40b987:	push   eax
  40b988:	mov    al,ds:0xd6cc607e
  40b98d:	jg     0x40ba0d
  40b98f:	pop    es
  40b990:	sti    
  40b991:	and    esp,esp
  40b993:	jmp    0x40b918
  40b995:	sub    dh,dl
  40b997:	aas    
  40b998:	jns    0x40b9f5
  40b99a:	jge    0x40b96c
  40b99c:	jl     0x40b91f
  40b99e:	cmp    DWORD PTR [ecx],eax
  40b9a0:	daa    
  40b9a1:	add    ah,0x90
  40b9a4:	pushf  
  40b9a5:	mov    WORD PTR [ebp-0x1d],ss
  40b9a8:	leave  
  40b9a9:	stos   BYTE PTR es:[edi],al
  40b9aa:	lock jb 0x40b9c2
  40b9ad:	pop    ebp
  40b9ae:	nop
  40b9af:	popa   
  40b9b0:	inc    eax
  40b9b1:	pop    edx
  40b9b2:	fimul  DWORD PTR [edi-0x5dd9a58d]
  40b9b8:	imul   esp,ecx,0xfffffffa
  40b9bb:	rol    BYTE PTR [edx],1
  40b9bd:	outs   dx,BYTE PTR ds:[esi]
  40b9be:	inc    ecx
  40b9bf:	icebp  
  40b9c0:	std    
  40b9c1:	adc    dh,BYTE PTR [esi+ebp*4-0x545acf2a]
  40b9c8:	ror    dl,1
  40b9ca:	dec    ebp
  40b9cb:	xor    DWORD PTR ss:[esi],edi
  40b9ce:	leave  
  40b9cf:	sub    al,0x36
  40b9d1:	xor    BYTE PTR [ebp+ebx*2-0x72],ch
  40b9d5:	cmc    
  40b9d6:	shr    ch,0xb5
  40b9d9:	sbb    DWORD PTR [ebp+eax*1+0x34],edi
  40b9dd:	inc    ebx
  40b9de:	add    DWORD PTR [ebx+0x16],esp
  40b9e1:	mov    edx,0x496c4f3f
  40b9e6:	push   ecx
  40b9e7:	daa    
  40b9e8:	adc    bl,BYTE PTR [edi+0x249d55ad]
  40b9ee:	dec    ebp
  40b9ef:	in     eax,0xa1
  40b9f1:	sbb    eax,esi
  40b9f3:	sbb    DWORD PTR [ebp-0x58],edx
  40b9f6:	shl    BYTE PTR [ecx-0x7f],0xfa
  40b9fa:	cmp    DWORD PTR [ebx-0x2770b34c],edx
  40ba00:	mov    cl,0x3e
  40ba02:	(bad)  
  40ba04:	sbb    esi,edx
  40ba06:	xor    al,0xa7
  40ba08:	and    DWORD PTR [eax-0x42],edx
  40ba0b:	cmc    
  40ba0c:	or     BYTE PTR [edx-0x42],al
  40ba0f:	popa   
  40ba10:	and    BYTE PTR [eax],bl
  40ba12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba13:	repz test BYTE PTR [edi],0x31
  40ba17:	inc    ebx
  40ba18:	mov    ds:0xa2e8b9a1,eax
  40ba1d:	ror    BYTE PTR [edx-0x7897b1ab],1
  40ba23:	pushf  
  40ba24:	mov    ebx,0x4840f840
  40ba29:	lock mov eax,0xaad9dbcf
  40ba2f:	sbb    DWORD PTR [edx-0x20],ebx
  40ba32:	mov    edx,0x2fa46b7c
  40ba37:	cs ins DWORD PTR es:[edi],dx
  40ba39:	pop    edi
  40ba3a:	mov    bl,0xc8
  40ba3c:	lock xchg ebx,eax
  40ba3e:	pop    esi
  40ba3f:	aas    
  40ba40:	leave  
  40ba41:	lock add bl,BYTE PTR [ebx]
  40ba44:	jp     0x40bab9
  40ba46:	xchg   ecx,eax
  40ba47:	je     0x40bab1
  40ba49:	inc    edi
  40ba4a:	lods   eax,DWORD PTR ds:[esi]
  40ba4b:	pop    ds
  40ba4c:	cld    
  40ba4d:	xchg   dh,bh
  40ba4f:	jae    0x40b9fb
  40ba51:	cli    
  40ba52:	push   edx
  40ba53:	lea    ecx,[edx-0x3710f68d]
  40ba59:	scas   eax,DWORD PTR es:[edi]
  40ba5a:	push   edi
  40ba5b:	adc    al,0x4d
  40ba5d:	scas   eax,DWORD PTR es:[edi]
  40ba5e:	test   al,0xea
  40ba60:	jmp    0x49a5c07d
  40ba65:	in     al,0x98
  40ba67:	js     0x40ba34
  40ba69:	addr16 addr16 arpl bp,cx
  40ba6d:	pop    ss
  40ba6e:	adc    al,0x97
  40ba70:	mov    dh,0xe9
  40ba72:	stc    
  40ba73:	outs   dx,BYTE PTR ds:[esi]
  40ba74:	mov    edi,0x1477c933
  40ba79:	loopne 0x40ba4c
  40ba7b:	cld    
  40ba7c:	out    0xf,al
  40ba7e:	test   edx,ebp
  40ba80:	sub    cl,BYTE PTR [ebx+0x78a7e9fa]
  40ba86:	sub    DWORD PTR [ecx+edi*2-0x4d],0xffffffa8
  40ba8b:	inc    eax
  40ba8c:	xor    esi,DWORD PTR [eax]
  40ba8e:	or     dl,ch
  40ba90:	stos   DWORD PTR es:[edi],eax
  40ba91:	jmp    0x50abea83
  40ba96:	xchg   esp,eax
  40ba97:	shl    BYTE PTR [esi],1
  40ba99:	sahf   
  40ba9a:	push   ds
  40ba9b:	scas   al,BYTE PTR es:[edi]
  40ba9c:	stc    
  40ba9d:	out    0xeb,al
  40ba9f:	inc    ecx
  40baa0:	call   0x1d66:0xb1000530
  40baa7:	xchg   ebp,eax
  40baa8:	xor    BYTE PTR ds:0x20c00459,0x84
  40baaf:	pop    esi
  40bab0:	add    eax,0x25662c6e
  40bab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab6:	test   esp,0x2f710ed4
  40babc:	mov    al,ds:0x5e5f9c48
  40bac1:	cwde   
  40bac2:	retf   0x8e2e
  40bac5:	sub    BYTE PTR [edx+0x18bde5d7],bh
  40bacb:	xor    eax,ecx
  40bacd:	dec    eax
  40bace:	xchg   DWORD PTR [ebp+0x5005f0ed],ecx
  40bad4:	outs   dx,DWORD PTR ds:[esi]
  40bad5:	mov    DWORD PTR [ebp+esi*1+0x5d],ebp
  40bad9:	(bad)  
  40bada:	enter  0x53f8,0xb4
  40bade:	test   DWORD PTR [eax+0x23],ebp
  40bae1:	jae    0x40bb1e
  40bae3:	mov    bl,0x3b
  40bae5:	sub    ecx,DWORD PTR [ecx+0x135b219]
  40baeb:	(bad)  
  40baec:	inc    eax
  40baed:	mov    bl,0x92
  40baef:	stos   DWORD PTR es:[edi],eax
  40baf0:	dec    ebp
  40baf1:	cmp    dl,ch
  40baf3:	mov    BYTE PTR [esi+0x40d72fe0],bl
  40baf9:	mov    dl,0x7e
  40bafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bafc:	xchg   esi,eax
  40bafd:	pop    ecx
  40bafe:	arpl   ax,cx
  40bb00:	inc    ebp
  40bb01:	mov    ds:0x53d16c01,eax
  40bb06:	out    0x78,al
  40bb08:	or     edi,esi
  40bb0a:	jl     0x40bafa
  40bb0c:	dec    eax
  40bb0d:	push   0x8655215f
  40bb12:	dec    ebx
  40bb13:	sbb    dl,BYTE PTR [edi+0x4f]
  40bb16:	(bad)  
  40bb17:	in     eax,dx
  40bb18:	pop    ecx
  40bb19:	add    BYTE PTR [edx],bh
  40bb1b:	aaa    
  40bb1c:	add    dh,0xff
  40bb1f:	cwde   
  40bb20:	xchg   edi,eax
  40bb21:	cli    
  40bb22:	lahf   
  40bb23:	ror    DWORD PTR [esi-0xf],0x12
  40bb27:	sbb    al,0x89
  40bb29:	int    0x60
  40bb2b:	mov    al,ds:0x88e40b23
  40bb30:	pop    eax
  40bb31:	push   esp
  40bb32:	push   esp
  40bb33:	stos   DWORD PTR es:[edi],eax
  40bb34:	mov    bh,0xb
  40bb36:	sub    esp,DWORD PTR [ecx-0x5e1e1317]
  40bb3c:	and    al,0xd2
  40bb3e:	mov    ah,0xf9
  40bb40:	ret    0x28af
  40bb43:	sbb    eax,0x877036f8
  40bb48:	repz sub al,0x5e
  40bb4b:	inc    esp
  40bb4c:	mov    WORD PTR [esi],cs
  40bb4e:	out    0xdf,al
  40bb50:	mov    bh,BYTE PTR [ecx]
  40bb52:	stos   DWORD PTR es:[edi],eax
  40bb53:	mov    ebx,0x7611833b
  40bb58:	mov    ss,WORD PTR [ebx]
  40bb5a:	pop    eax
  40bb5b:	mov    eax,ds:0x215cbc8b
  40bb60:	sbb    DWORD PTR [ebx-0x6],ebx
  40bb63:	sub    ebp,0xa23a75ed
  40bb69:	xor    DWORD PTR [ebp-0x23],ebx
  40bb6c:	sub    dl,BYTE PTR ds:[edx+edi*2-0xa]
  40bb71:	mov    al,0xad
  40bb73:	frstor [edx+0x281ad13d]
  40bb79:	fstp   DWORD PTR [ecx-0x734e4170]
  40bb7f:	or     al,0xf6
  40bb81:	es cmp bl,cl
  40bb84:	jge    0x40bbbb
  40bb86:	scas   al,BYTE PTR es:[edi]
  40bb87:	lods   eax,DWORD PTR ds:[esi]
  40bb88:	mov    bl,0x21
  40bb8b:	jp     0x40bb56
  40bb8d:	push   esi
  40bb8e:	outs   dx,BYTE PTR ds:[esi]
  40bb8f:	mov    dh,0xdc
  40bb91:	cmp    eax,0x18f67ac2
  40bb96:	add    dl,BYTE PTR [edi-0x3a49b242]
  40bb9c:	retf   
  40bb9d:	mov    dl,0xaa
  40bb9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba0:	mov    bl,0xf9
  40bba2:	(bad)  
  40bba3:	imul   esi,DWORD PTR [ecx+0x3c],0x2b22b9d5
  40bbaa:	lahf   
  40bbab:	call   0xfc6cada9
  40bbb0:	push   0xaf2a38d7
  40bbb5:	pop    esp
  40bbb6:	in     eax,dx
  40bbb7:	fbld   TBYTE PTR [edi+0x6d]
  40bbba:	adc    ebx,ecx
  40bbbc:	aaa    
  40bbbd:	cld    
  40bbbe:	lock xchg esp,eax
  40bbc0:	mov    ds:0x348048cf,eax
  40bbc5:	loop   0x40bb96
  40bbc7:	lock jbe 0x40bc24
  40bbca:	adc    ah,BYTE PTR cs:[esi+ebx*2-0x38]
  40bbcf:	scas   eax,DWORD PTR es:[edi]
  40bbd0:	dec    ebx
  40bbd1:	shr    BYTE PTR [ebx+edi*1+0x1317937],0x26
  40bbd9:	cwde   
  40bbda:	sub    BYTE PTR [esi-0x327b7a2b],0xbc
  40bbe1:	cmp    ah,BYTE PTR [eax+0x118e33ba]
  40bbe7:	out    0x46,al
  40bbe9:	shl    BYTE PTR [edx+edx*8+0xa],cl
  40bbed:	sbb    dh,bh
  40bbef:	adc    al,0xaf
  40bbf1:	xlat   BYTE PTR ds:[ebx]
  40bbf2:	push   esp
  40bbf3:	jecxz  0x40bba9
  40bbf5:	pop    es
  40bbf6:	retf   
  40bbf7:	sbb    BYTE PTR [eax],cl
  40bbf9:	jbe    0x40bc06
  40bbfb:	adc    ebx,esp
  40bbfd:	push   0xd7a786b7
  40bc02:	enter  0x3d85,0x50
  40bc06:	sbb    DWORD PTR [eax+edi*4],eax
  40bc09:	and    BYTE PTR [ebp+0x23],0x4f
  40bc0d:	cs dec edi
  40bc0f:	rcl    ecx,cl
  40bc11:	popf   
  40bc12:	sub    eax,0xbff24af1
  40bc17:	mov    ebp,0x7e904b7
  40bc1c:	sbb    eax,0x12ce8725
  40bc21:	push   edi
  40bc22:	lods   al,BYTE PTR ds:[esi]
  40bc23:	data16 lock jno 0x40bbed
  40bc27:	dec    edi
  40bc28:	jl     0x40bbf3
  40bc2a:	jo     0x40bc23
  40bc2c:	leave  
  40bc2d:	jo     0x40bc8b
  40bc2f:	sahf   
  40bc30:	and    eax,0x5cb00028
  40bc35:	rol    ch,cl
  40bc37:	aam    0x12
  40bc39:	dec    ebp
  40bc3a:	loop   0x40bbcc
  40bc3c:	popa   
  40bc3d:	jge    0x40bc2f
  40bc3f:	mov    ebp,0x17014795
  40bc44:	js     0x40bbe8
  40bc46:	inc    edx
  40bc47:	sub    cl,BYTE PTR [edi+0x29880786]
  40bc4d:	mov    bl,0xb1
  40bc4f:	pop    ebp
  40bc50:	cmc    
  40bc51:	jo     0x40bc53
  40bc53:	out    dx,eax
  40bc54:	bound  ebp,QWORD PTR [edx+ebp*2+0x41]
  40bc58:	pop    es
  40bc59:	(bad)
  40bc5d:	pusha  
  40bc5e:	shl    DWORD PTR [eax-0x73915f4b],cl
  40bc64:	push   ecx
  40bc65:	mov    ah,0xb5
  40bc67:	or     dh,dh
  40bc69:	loop   0x40bc06
  40bc6b:	loop   0x40bc3f
  40bc6d:	pushf  
  40bc6e:	mov    esp,0x3f174042
  40bc73:	push   edx
  40bc74:	jne    0x40bce1
  40bc76:	in     al,0xf6
  40bc78:	not    eax
  40bc7a:	enter  0xe5ab,0x91
  40bc7e:	(bad)  [esi]
  40bc80:	push   ds
  40bc81:	sahf   
  40bc82:	inc    ecx
  40bc83:	pop    ds
  40bc84:	mov    dl,BYTE PTR [ecx+0x1f0c7e38]
  40bc8a:	fwait
  40bc8b:	jmp    0x40bcb0
  40bc8d:	std    
  40bc8e:	xchg   edi,eax
  40bc8f:	xor    eax,0x466a44d4
  40bc94:	ins    DWORD PTR es:[edi],dx
  40bc95:	sbb    al,0x45
  40bc97:	jb     0x40bca8
  40bc99:	mov    edx,edx
  40bc9b:	mov    ds:0xb5baf22f,al
  40bca0:	pop    ecx
  40bca1:	clc    
  40bca2:	aaa    
  40bca3:	imul   ebp,DWORD PTR [eax],0x67a8465e
  40bca9:	ret    
  40bcaa:	and    eax,0x3ac49252
  40bcaf:	imul   DWORD PTR [ebp+0x51]
  40bcb2:	inc    ecx
  40bcb3:	add    ecx,DWORD PTR [ecx+0x37]
  40bcb6:	mov    eax,ds:0xa17f8f78
  40bcbb:	out    dx,eax
  40bcbc:	leavew 
  40bcbe:	push   esi
  40bcbf:	mov    bh,bh
  40bcc1:	and    DWORD PTR [eax],edx
  40bcc3:	xchg   ecx,eax
  40bcc4:	jns    0x40bcd1
  40bcc6:	push   ss
  40bcc7:	push   cs
  40bcc8:	sub    al,0x5d
  40bcca:	cmp    eax,0x2657c129
  40bccf:	ins    BYTE PTR es:[edi],dx
  40bcd0:	mov    bh,0xb6
  40bcd2:	loop   0x40bcf6
  40bcd4:	imul   ebp,DWORD PTR [edx-0x40],0xffffff98
  40bcd8:	retf   
  40bcd9:	jb     0x40bcf5
  40bcdb:	mov    ebx,0x5dc61b12
  40bce0:	fmulp  st(4),st
  40bce2:	(bad)
  40bce6:	xlat   BYTE PTR ds:[ebx]
  40bce7:	out    0xf8,eax
  40bce9:	aam    0xe3
  40bceb:	retf   0xe14a
  40bcee:	lock sbb DWORD PTR [edx],esp
  40bcf1:	out    dx,al
  40bcf2:	push   es
  40bcf3:	(bad)  
  40bcf4:	std    
  40bcf5:	scas   al,BYTE PTR es:[edi]
  40bcf6:	push   esp
  40bcf7:	pxor   mm1,mm4
  40bcfa:	and    BYTE PTR [edx-0x79],al
  40bcfd:	adc    eax,DWORD PTR [eax+0x21c90078]
  40bd03:	mov    ah,0x1b
  40bd05:	inc    esp
  40bd06:	shl    BYTE PTR [ebp+0x2734add3],1
  40bd0c:	cmp    ah,cl
  40bd0e:	sbb    ah,dh
  40bd10:	mov    dl,0xeb
  40bd12:	inc    ecx
  40bd13:	jae    0x40bd0e
  40bd15:	or     al,0x6d
  40bd17:	test   BYTE PTR [ebp-0x62],dl
  40bd1a:	mov    ch,0x7c
  40bd1c:	pop    ecx
  40bd1d:	cld    
  40bd1e:	push   edx
  40bd1f:	jae    0x40bd97
  40bd21:	push   ebp
  40bd22:	xor    esi,DWORD PTR [ecx]
  40bd24:	repz adc dl,ah
  40bd27:	pop    ebx
  40bd28:	sbb    BYTE PTR [edi-0x6956c5b6],al
  40bd2e:	dec    ecx
  40bd2f:	fidiv  WORD PTR [ebp+0x46]
  40bd32:	jle    0x40bd51
  40bd34:	xchg   dl,dl
  40bd36:	mov    ah,BYTE PTR [edx+ecx*8+0x65]
  40bd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3b:	cmp    al,bh
  40bd3d:	cs xchg ebp,eax
  40bd3f:	mov    al,0x7
  40bd41:	xchg   esp,eax
  40bd42:	push   esp
  40bd43:	xlat   BYTE PTR ds:[ebx]
  40bd44:	push   ds
  40bd45:	or     eax,0x9776f4fe
  40bd4a:	dec    edi
  40bd4b:	pop    esi
  40bd4c:	add    BYTE PTR [edx-0x1901ec3],al
  40bd52:	repz pusha 
  40bd54:	mov    ah,0x43
  40bd56:	hlt    
  40bd57:	(bad)
  40bd5b:	mov    cl,0x6b
  40bd5d:	add    al,0x58
  40bd5f:	and    edi,0x2bb674
  40bd65:	(bad)  
  40bd66:	sub    eax,0x4cd2e1a0
  40bd6b:	ins    BYTE PTR es:[edi],dx
  40bd6c:	pop    ebp
  40bd6d:	out    0x1d,eax
  40bd6f:	mov    esi,ebp
  40bd71:	mov    eax,0xc1a4f639
  40bd76:	ret    0xdbd3
  40bd79:	jno    0x40bd0f
  40bd7b:	inc    esp
  40bd7c:	push   esp
  40bd7d:	outs   dx,DWORD PTR ds:[esi]
  40bd7e:	popf   
  40bd7f:	gs scas eax,DWORD PTR es:[edi]
  40bd81:	pop    es
  40bd82:	stos   DWORD PTR es:[edi],eax
  40bd83:	xor    DWORD PTR ds:0x19c9d5ca,ebp
  40bd89:	pop    eax
  40bd8a:	imul   ebx,DWORD PTR [ebp+0x5267604f],0x44ea955f
  40bd94:	into   
  40bd95:	add    ecx,DWORD PTR ds:0x6c6525ce
  40bd9b:	data16 js 0x40bdf9
  40bd9e:	add    BYTE PTR [ebp+eax*1-0x386651ab],ch
  40bda5:	and    DWORD PTR [ecx-0x64],0x1b43f36b
  40bdac:	add    ebx,DWORD PTR [edx-0xf]
  40bdaf:	mov    bh,0xf7
  40bdb1:	ins    BYTE PTR es:[edi],dx
  40bdb2:	fwait
  40bdb3:	or     eax,0x444a5fad
  40bdb8:	mov    bh,0xb
  40bdba:	adc    BYTE PTR [eax+eiz*4-0x3e92f16],0x8c
  40bdc2:	lea    ebp,[edi]
  40bdc4:	dec    ebx
  40bdc5:	fistp  QWORD PTR [edx+eiz*1+0xb]
  40bdc9:	shl    DWORD PTR [edx+0x77],cl
  40bdcc:	pop    esi
  40bdcd:	loopne 0x40bdeb
  40bdcf:	sbb    DWORD PTR [ecx],ebx
  40bdd1:	test   al,0xcd
  40bdd3:	jns    0x40bd6e
  40bdd5:	sar    BYTE PTR [eax+0x34],1
  40bdd8:	mov    dl,0x7f
  40bdda:	shr    BYTE PTR ds:0x69d93e15,cl
  40bde0:	imul   ecx,DWORD PTR [ecx-0x70b07d5e],0x5e87b815
  40bdea:	pop    ebx
  40bdeb:	out    dx,al
  40bdec:	leave  
  40bded:	sbb    BYTE PTR [ecx+0x7761dbc7],0xb7
  40bdf4:	imul   eax,DWORD PTR [ebx-0x23],0x48
  40bdf8:	push   esi
  40bdf9:	pop    edx
  40bdfa:	inc    ebp
  40bdfb:	mov    gs,esi
  40bdfd:	arpl   cx,dx
  40bdff:	das    
  40be00:	jg     0x40be3a
  40be02:	cmp    ecx,esi
  40be04:	dec    eax
  40be05:	inc    ecx
  40be06:	aad    0xa5
  40be08:	dec    eax
  40be09:	xor    bl,ch
  40be0b:	in     al,dx
  40be0c:	dec    edx
  40be0d:	jb     0x40be16
  40be0f:	xor    al,0xb1
  40be11:	dec    eax
  40be12:	and    DWORD PTR [ecx-0x2c031ecc],eax
  40be18:	data16 add al,0xe3
  40be1b:	jne    0x40be65
  40be1d:	adc    eax,0x143bdaf2
  40be22:	lods   eax,DWORD PTR ds:[esi]
  40be23:	jo     0x40bdbd
  40be25:	adc    al,0x9
  40be27:	mov    al,BYTE PTR [esi-0x59]
  40be2a:	cs rol ebx,0xa6
  40be2e:	fisttp WORD PTR [edi-0x1f6a52ce]
  40be34:	ins    BYTE PTR es:[edi],dx
  40be35:	xchg   ebx,eax
  40be36:	mov    bh,0x64
  40be38:	or     eax,0xf46a653f
  40be3d:	out    0x7b,al
  40be3f:	scas   eax,DWORD PTR es:[edi]
  40be40:	cmp    eax,0x565d901d
  40be45:	cmp    eax,0x8fcf24e0
  40be4a:	imul   esi,DWORD PTR [eax-0x7e],0x6a
  40be4e:	mov    ch,0xb0
  40be50:	sahf   
  40be51:	pop    ebp
  40be52:	jne    0x40bea8
  40be54:	sub    BYTE PTR [ebp-0x72],cl
  40be57:	dec    esp
  40be58:	xchg   BYTE PTR [ebx-0x38a0b6e3],cl
  40be5e:	aaa    
  40be5f:	loop   0x40be11
  40be61:	ffreep st(1)
  40be63:	sbb    BYTE PTR [eax],0x6c
  40be66:	pop    ecx
  40be67:	loop   0x40beb3
  40be69:	popf   
  40be6a:	cld    
  40be6b:	das    
  40be6c:	imul   ebx,ebx,0x1b
  40be6f:	mov    eax,0x50897256
  40be74:	scas   al,BYTE PTR es:[edi]
  40be75:	add    bl,BYTE PTR [edi]
  40be77:	adc    ebp,DWORD PTR [ebp-0xe]
  40be7a:	(bad)  
  40be7b:	aam    0xd2
  40be7d:	stc    
  40be7e:	push   es
  40be7f:	xor    ch,BYTE PTR [esi-0x7397a67d]
  40be85:	(bad)  
  40be86:	into   
  40be87:	lahf   
  40be88:	in     al,dx
  40be89:	lds    esi,FWORD PTR [esi-0x4d]
  40be8c:	retf   
  40be8d:	gs mov dl,0x3b
  40be90:	shl    DWORD PTR [edi],cl
  40be92:	mov    dh,0x13
  40be94:	je     0x40be24
  40be96:	push   ds
  40be97:	xchg   edx,eax
  40be98:	xor    al,0x5e
  40be9a:	or     DWORD PTR [edx+0x6a],0xf5677959
  40bea1:	inc    edx
  40bea2:	ficom  WORD PTR [edx+ecx*2]
  40bea5:	lock xchg ebx,eax
  40bea7:	xchg   ebp,eax
  40bea8:	and    ch,BYTE PTR [ebx*8-0x2215ffab]
  40beaf:	or     al,0x7
  40beb1:	scas   al,BYTE PTR es:[edi]
  40beb2:	xchg   edi,eax
  40beb3:	sbb    ecx,DWORD PTR [edx-0x43]
  40beb6:	popf   
  40beb7:	push   esp
  40beb8:	jmp    0x224a:0xc973002f
  40bebf:	jo     0x40bf25
  40bec1:	(bad)  
  40bec3:	pushf  
  40bec4:	pop    eax
  40bec5:	push   0xffffffd5
  40bec7:	xchg   edx,eax
  40bec8:	rol    DWORD PTR [edx+0x5f9c0f50],1
  40bece:	aam    0x72
  40bed0:	mov    DWORD PTR [ebx+0x67c78b7a],esi
  40bed6:	cli    
  40bed7:	xlat   BYTE PTR ds:[ebx]
  40bed8:	jae    0x40bef3
  40beda:	jl     0x40bec2
  40bedc:	mov    cs,esp
  40bede:	push   ebp
  40bedf:	(bad)  
  40bee1:	retf   0x1117
  40bee4:	inc    edx
  40bee5:	and    bh,bh
  40bee7:	adc    DWORD PTR [edx-0x78940c6f],eax
  40beed:	pop    ebx
  40beee:	pop    esp
  40beef:	add    BYTE PTR [ecx+edx*8-0x21],dl
  40bef3:	cdq    
  40bef4:	mov    cl,0xf2
  40bef6:	fadd   DWORD PTR [ecx-0x54]
  40bef9:	or     ecx,DWORD PTR [ebp+0x1989a1be]
  40beff:	aam    0x6e
  40bf01:	add    BYTE PTR [esi-0x1edd619a],cl
  40bf07:	aas    
  40bf08:	fild   WORD PTR [eax+eax*4-0x5b]
  40bf0c:	pop    edx
  40bf0d:	in     eax,0xe6
  40bf0f:	sbb    ebp,DWORD PTR [esi+0x56]
  40bf12:	(bad)  
  40bf13:	sub    bh,BYTE PTR [ebx]
  40bf15:	mov    ebp,0x2c7a623f
  40bf1a:	fimul  WORD PTR [esi+0x7f997a89]
  40bf20:	out    0xe6,al
  40bf22:	and    ebp,ebp
  40bf24:	pop    esi
  40bf25:	ja     0x40bf9a
  40bf27:	push   ebp
  40bf28:	sti    
  40bf29:	pop    eax
  40bf2a:	xor    al,0x98
  40bf2c:	test   al,0x31
  40bf2e:	cmp    cl,BYTE PTR [edx+0x487d3fb]
  40bf34:	lea    ecx,[edi-0x2ae9855f]
  40bf3a:	mov    ds:0xfdc1798,eax
  40bf3f:	ffree  st(2)
  40bf41:	pop    eax
  40bf42:	pop    ds
  40bf43:	add    DWORD PTR [esi-0x6d],edi
  40bf46:	push   edi
  40bf47:	jmp    0x40bf2f
  40bf49:	xlat   BYTE PTR ds:[ebx]
  40bf4a:	jecxz  0x40bf39
  40bf4c:	dec    esp
  40bf4d:	jae    0x40bf22
  40bf4f:	and    ch,BYTE PTR [ecx+edx*4]
  40bf52:	and    eax,0xcc5b813c
  40bf57:	add    BYTE PTR [esi-0x27],0x95
  40bf5b:	mov    dl,BYTE PTR [edi+0x78e4986]
  40bf61:	cmp    ecx,eax
  40bf63:	push   0xffffffa5
  40bf65:	cmp    DWORD PTR [esi],ebx
  40bf67:	pop    edi
  40bf68:	cmp    al,0x5e
  40bf6a:	sbb    al,0x17
  40bf6c:	(bad)  
  40bf6d:	and    DWORD PTR [edi],ecx
  40bf6f:	xlat   BYTE PTR ds:[ebx]
  40bf70:	sti    
  40bf71:	sub    dl,BYTE PTR [ecx-0x61]
  40bf74:	add    eax,0x484cd103
  40bf79:	fstp   QWORD PTR [edi-0x58]
  40bf7c:	and    BYTE PTR [edx-0x71],al
  40bf7f:	inc    ebp
  40bf80:	std    
  40bf81:	in     al,dx
  40bf82:	and    al,0x8c
  40bf84:	inc    esi
  40bf85:	mov    eax,ds:0x79f94ff
  40bf8a:	int    0xc1
  40bf8c:	repz loop 0x40bf14
  40bf8f:	sbb    eax,0x845c61b9
  40bf94:	fild   DWORD PTR [ebp+0x47]
  40bf97:	mov    edx,0x9d8f9259
  40bf9c:	and    DWORD PTR [edx+0x1f4c73f0],ebp
  40bfa2:	add    DWORD PTR ds:0xc4e9e835,edx
  40bfa8:	add    esi,eax
  40bfaa:	retf   0x458b
  40bfad:	xchg   ebp,eax
  40bfae:	sub    eax,DWORD PTR [esi+ebx*8]
  40bfb1:	adc    al,0x4
  40bfb3:	in     al,0xd0
  40bfb5:	inc    ecx
  40bfb6:	push   edi
  40bfb7:	out    0xd,al
  40bfb9:	mov    dh,0x1c
  40bfbb:	add    bh,cl
  40bfbd:	mov    ah,0x4c
  40bfbf:	inc    ebx
  40bfc0:	in     eax,0xfb
  40bfc2:	mov    bl,0xa5
  40bfc4:	bnd ds jns 0x40bf93
  40bfc8:	and    BYTE PTR [eax+0x89832aa],dl
  40bfce:	imul   esi,edx,0xb4743664
  40bfd4:	rol    DWORD PTR [ebx-0x66],cl
  40bfd7:	jp     0x40bf88
  40bfd9:	ret    0x49a3
  40bfdc:	or     BYTE PTR [edi+0x76],0xdb
  40bfe0:	pop    esi
  40bfe1:	xchg   edx,eax
  40bfe2:	js     0x40bf80
  40bfe4:	xchg   ebp,eax
  40bfe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe6:	jmp    0x3ee8:0x664b2721
  40bfed:	ins    BYTE PTR es:[edi],dx
  40bfee:	ror    BYTE PTR [edx+ebp*1+0x74],cl
  40bff2:	fld    QWORD PTR [edx+0x60]
  40bff5:	mov    dl,0xce
  40bff7:	cdq    
  40bff8:	mov    BYTE PTR [edi-0x3dff23df],dh
  40bffe:	cwde   
  40bfff:	inc    edi
  40c000:	(bad)  
  40c001:	nop    DWORD PTR ds:0xd580a522
  40c008:	cmp    al,0x63
  40c00a:	arpl   dx,cx
  40c00c:	or     dh,al
  40c00e:	std    
  40c00f:	mov    BYTE PTR [edi],cl
  40c011:	fidivr WORD PTR [eax+0x52c30e90]
  40c017:	iret   
  40c018:	test   BYTE PTR [ebp-0x4c6abd52],dh
  40c01e:	pushf  
  40c01f:	push   eax
  40c020:	js     0x40c00a
  40c022:	sti    
  40c023:	sub    eax,0xfe7a92d4
  40c028:	aad    0x6f
  40c02a:	imul   ebp,DWORD PTR [ecx-0x2f732ae6],0xffffffb8
  40c031:	jmp    0x40c05a
  40c033:	sbb    ch,ch
  40c035:	or     BYTE PTR [ebx-0x1dc77910],al
  40c03b:	jg     0x40c022
  40c03d:	lock xchg esi,eax
  40c03f:	mov    dl,dl
  40c041:	sahf   
  40c042:	add    DWORD PTR [esi+0x1f5daf7f],esp
  40c048:	xchg   edx,eax
  40c049:	ret    
  40c04a:	leave  
  40c04b:	dec    eax
  40c04c:	cdq    
  40c04d:	fcomi  st,st(4)
  40c04f:	mov    ebp,0x5eeb5090
  40c054:	loop   0x40c05a
  40c056:	int    0x1c
  40c058:	lock (bad) [eax]
  40c05b:	mov    al,ds:0xf4db54e7
  40c060:	pop    ecx
  40c061:	lods   al,BYTE PTR ds:[esi]
  40c062:	popa   
  40c063:	(bad)  
  40c064:	in     al,dx
  40c065:	stos   DWORD PTR es:[edi],eax
  40c066:	cli    
  40c067:	jo     0x40c0c3
  40c069:	std    
  40c06a:	xor    bh,BYTE PTR gs:[edi]
  40c06d:	pop    ebx
  40c06e:	loope  0x40c022
  40c070:	shr    DWORD PTR [ecx-0x6b16ce17],1
  40c076:	aas    
  40c077:	sub    DWORD PTR [ebx+0x6e],0xffffff9b
  40c07b:	je     0x40c0ea
  40c07d:	dec    ebx
  40c07e:	cmp    eax,0xc4876323
  40c083:	cmp    cl,bh
  40c085:	int    0x12
  40c087:	hlt    
  40c088:	mov    bh,0x1e
  40c08a:	loopne 0x40c0c7
  40c08c:	mov    esi,0xda2b6c54
  40c091:	test   bh,0xde
  40c094:	add    eax,0xcc7eaf0e
  40c099:	sbb    eax,0xf1e6978e
  40c09e:	sbb    BYTE PTR [eax],0xa
  40c0a1:	test   eax,0x2412c5c8
  40c0a6:	xchg   ebp,eax
  40c0a7:	sar    bl,0x2d
  40c0aa:	sbb    ch,0x94
  40c0ad:	ss ds stos BYTE PTR es:[edi],al
  40c0b0:	xchg   ebp,eax
  40c0b1:	or     BYTE PTR [ebx],bh
  40c0b3:	jle    0x40c05d
  40c0b5:	add    eax,0x6f5a1bd0
  40c0ba:	mov    dl,0x69
  40c0bc:	out    0xf3,al
  40c0be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0bf:	pop    ds
  40c0c0:	add    al,0x4
  40c0c2:	jmp    0x17df:0x47bbbf12
  40c0c9:	sbb    bl,ah
  40c0cb:	stos   BYTE PTR es:[edi],al
  40c0cc:	test   eax,0x104ea46a
  40c0d1:	pop    eax
  40c0d2:	fwait
  40c0d3:	mov    ss:0xb68436b5,al
  40c0d9:	jmp    0xf210:0x72a3ca06
  40c0e0:	xchg   esp,eax
  40c0e1:	jns    0x40c102
  40c0e3:	add    BYTE PTR [ecx+0x3507c9e7],dl
  40c0e9:	push   esp
  40c0ea:	and    al,0xb1
  40c0ec:	dec    ebx
  40c0ed:	stos   DWORD PTR es:[edi],eax
  40c0ee:	ss out dx,al
  40c0f0:	in     eax,0x25
  40c0f2:	or     eax,0xf0dc9197
  40c0f7:	mov    WORD PTR [edx-0x20b0edf2],ds
  40c0fd:	and    DWORD PTR [ebx],esp
  40c0ff:	or     ch,BYTE PTR [edx-0xf56ba9b]
  40c105:	xchg   esp,eax
  40c106:	outs   dx,DWORD PTR ds:[esi]
  40c107:	add    ah,bl
  40c109:	xchg   DWORD PTR [edi],ebp
  40c10b:	(bad)  
  40c10c:	pop    edx
  40c10d:	mov    gs,WORD PTR [ecx-0x7c]
  40c110:	mov    BYTE PTR [edi+ecx*4],ch
  40c113:	test   eax,0x9207af6b
  40c118:	aam    0x31
  40c11a:	mov    ebx,0x82f819ed
  40c11f:	jp     0x40c0b9
  40c121:	inc    edx
  40c122:	(bad)  
  40c123:	cmp    ebp,DWORD PTR [edx]
  40c125:	cld    
  40c126:	mov    al,0x3a
  40c128:	lods   eax,DWORD PTR ds:[esi]
  40c129:	xor    edi,DWORD PTR [edi]
  40c12b:	jno    0x40c0ee
  40c12d:	or     BYTE PTR [ecx-0x3b6562a],ch
  40c133:	mov    esi,0xa12af9a1
  40c138:	(bad)  
  40c139:	test   al,0xda
  40c13b:	mov    ch,0x67
  40c13d:	outs   dx,DWORD PTR ds:[esi]
  40c13e:	aaa    
  40c13f:	push   edx
  40c140:	or     dh,BYTE PTR [ebp+0x36]
  40c143:	add    eax,0x145f6521
  40c148:	mov    ds:0xc1d12659,eax
  40c14d:	stos   BYTE PTR es:[edi],al
  40c14e:	sub    esp,edi
  40c150:	adc    eax,0x1500f1aa
  40c155:	cmc    
  40c156:	loop   0x40c0e0
  40c158:	dec    esp
  40c159:	aad    0x23
  40c15b:	js     0x40c13a
  40c15d:	jge    0x40c1da
  40c15f:	mov    fs:0xa2a55deb,eax
  40c165:	imul   edi,DWORD PTR [edi],0x46
  40c168:	daa    
  40c169:	lods   eax,DWORD PTR ds:[esi]
  40c16a:	ins    DWORD PTR es:[edi],dx
  40c16b:	mov    ecx,0x2b7b2406
  40c170:	loope  0x40c12e
  40c172:	mov    esp,0x1f5702db
  40c177:	push   0xb7fec63c
  40c17c:	lea    ebp,[ecx]
  40c17e:	xlat   BYTE PTR ds:[ebx]
  40c17f:	loope  0x40c138
  40c181:	fistp  WORD PTR [eax]
  40c183:	ror    BYTE PTR [ebp+eax*4-0x875c9ad],1
  40c18a:	xor    eax,DWORD PTR [edx]
  40c18c:	mov    bl,0x7a
  40c18e:	jl     0x40c145
  40c190:	and    DWORD PTR [esi-0x4a],edx
  40c193:	sbb    BYTE PTR [ebx+0x4b],dl
  40c196:	test   eax,0x52015605
  40c19b:	loop   0x40c16d
  40c19d:	push   es
  40c19e:	in     eax,0xc
  40c1a0:	mov    bh,0x4f
  40c1a2:	mov    ds:0xedd9c675,eax
  40c1a7:	stos   BYTE PTR es:[edi],al
  40c1a8:	add    dh,cl
  40c1aa:	mov    al,ds:0x1a44059c
  40c1af:	cmp    ebp,edi
  40c1b1:	dec    eax
  40c1b2:	dec    edi
  40c1b3:	and    cl,cl
  40c1b5:	sub    dh,bh
  40c1b7:	cmp    dl,bl
  40c1b9:	in     al,0x5c
  40c1bb:	mov    esp,0x750b6d04
  40c1c0:	mov    ebp,esi
  40c1c2:	xchg   ebp,eax
  40c1c3:	pop    ecx
  40c1c4:	dec    eax
  40c1c5:	dec    ebx
  40c1c6:	fs and eax,0xfbfeb05e
  40c1cc:	lahf   
  40c1cd:	(bad)  
  40c1cf:	add    al,0x2b
  40c1d1:	loope  0x40c200
  40c1d3:	cmp    BYTE PTR [edx-0x4b],cl
  40c1d6:	inc    ebp
  40c1d7:	cmp    ch,BYTE PTR [ecx+0x3e]
  40c1da:	pop    esi
  40c1db:	mov    ah,0x77
  40c1dd:	enter  0x5078,0x6f
  40c1e1:	ins    BYTE PTR es:[edi],dx
  40c1e2:	cs mov eax,0x36d1704b
  40c1e8:	test   edi,0x30902551
  40c1ee:	pop    ss
  40c1ef:	xchg   esi,eax
  40c1f0:	mov    esi,0x581122fc
  40c1f5:	in     al,0x7e
  40c1f7:	je     0x40c251
  40c1f9:	jg     0x40c17b
  40c1fb:	inc    BYTE PTR ds:0xae53c566
  40c201:	push   cs
  40c202:	aam    0x10
  40c204:	cmp    DWORD PTR [edi-0x431bb37a],edx
  40c20a:	fwait
  40c20b:	lods   eax,DWORD PTR ds:[esi]
  40c20c:	sbb    BYTE PTR [edx-0x33],ah
  40c20f:	xor    BYTE PTR [esi+0x19cf04cc],al
  40c215:	sub    DWORD PTR [edi+0x22],edx
  40c218:	test   BYTE PTR [esi+esi*2-0x28],ah
  40c21c:	mov    ch,BYTE PTR [edx-0x45bfcc37]
  40c222:	push   esi
  40c223:	dec    esi
  40c224:	popa   
  40c225:	cmp    ecx,DWORD PTR [esi-0x1b]
  40c228:	inc    edx
  40c229:	bound  esi,QWORD PTR [ebx]
  40c22b:	pop    ds
  40c22c:	pop    ss
  40c22d:	fadd   QWORD PTR [edx]
  40c22f:	inc    BYTE PTR [ecx-0x31]
  40c232:	pop    es
  40c233:	xchg   ebx,eax
  40c234:	xchg   ebx,eax
  40c235:	test   BYTE PTR [ebp+0xe],0x14
  40c239:	cdq    
  40c23a:	jle    0x40c1ec
  40c23c:	outs   dx,DWORD PTR ds:[esi]
  40c23d:	sub    eax,0xb18bcfab
  40c242:	mov    ebp,0x9e9fe33b
  40c247:	and    ebx,DWORD PTR [edx+0x5bc5cbaa]
  40c24d:	fdiv   DWORD PTR [edi+0x0]
  40c250:	cmc    
  40c251:	(bad)  
  40c252:	repz test al,0xc1
  40c255:	mov    eax,fs:0x813d44ed
  40c25b:	pop    esi
  40c25c:	in     al,dx
  40c25d:	and    al,0x24
  40c25f:	ins    DWORD PTR es:[edi],dx
  40c260:	inc    esi
  40c261:	je     0x40c293
  40c263:	mov    dh,0xdb
  40c265:	leave  
  40c266:	aad    0x75
  40c268:	mov    DWORD PTR [eax-0x32],esp
  40c26b:	(bad)  
  40c26c:	cli    
  40c26d:	pop    ss
  40c26e:	enter  0x48f0,0xb
  40c272:	jae    0x40c2bd
  40c274:	dec    ebp
  40c275:	push   ss
  40c276:	adc    BYTE PTR [ebp+0x4e],bh
  40c279:	xchg   ebx,eax
  40c27a:	stos   BYTE PTR es:[edi],al
  40c27b:	popa   
  40c27c:	dec    esi
  40c27d:	dec    ecx
  40c27e:	mov    edi,0x68af197d
  40c283:	es int3 
  40c285:	dec    edx
  40c286:	sbb    eax,ebp
  40c288:	inc    edi
  40c289:	add    bl,bl
  40c28b:	xlat   BYTE PTR ds:[ebx]
  40c28c:	jge    0x40c275
  40c28e:	inc    eax
  40c28f:	enter  0xc7a9,0x93
  40c293:	sub    ecx,DWORD PTR [ebx+0x11]
  40c296:	add    edi,DWORD PTR [edx+0x6a0777f2]
  40c29c:	pusha  
  40c29d:	jae    0x40c311
  40c29f:	sub    DWORD PTR [ebp-0x6f35cfd2],ecx
  40c2a5:	mov    dl,0xfe
  40c2a7:	inc    DWORD PTR ss:[ebp+0x1f]
  40c2ab:	test   eax,0x374c1f8b
  40c2b0:	mov    BYTE PTR [eax+0x636468d4],dh
  40c2b6:	cmp    BYTE PTR [esi],dl
  40c2b8:	add    ah,BYTE PTR [ecx-0x72c740bc]
  40c2be:	xchg   ebx,eax
  40c2bf:	xchg   esp,eax
  40c2c0:	rcl    DWORD PTR [ecx-0x50],cl
  40c2c3:	fisubr DWORD PTR ds:0xfb532b1f
  40c2c9:	inc    ecx
  40c2ca:	js     0x40c332
  40c2cc:	aad    0x79
  40c2ce:	and    ch,BYTE PTR [eax-0x2a17175f]
  40c2d4:	lods   al,BYTE PTR ds:[esi]
  40c2d5:	mov    bh,0xb8
  40c2d7:	mov    ecx,esp
  40c2d9:	(bad)  
  40c2da:	not    DWORD PTR [ebx-0x42]
  40c2dd:	ins    BYTE PTR es:[edi],dx
  40c2de:	inc    esi
  40c2df:	xor    ch,bl
  40c2e1:	daa    
  40c2e2:	inc    esi
  40c2e3:	inc    edx
  40c2e4:	or     al,0x91
  40c2e6:	enter  0xa6bc,0x29
  40c2ea:	mov    ds:0xbcb8777,eax
  40c2ef:	scas   al,BYTE PTR es:[edi]
  40c2f0:	leave  
  40c2f1:	mov    ebp,0x9cadbf57
  40c2f6:	inc    esi
  40c2f7:	gs sbb edx,esi
  40c2fa:	push   0x77b2227c
  40c2ff:	repnz sub al,0x56
  40c302:	mov    al,0xaa
  40c304:	(bad)  
  40c305:	fwait
  40c306:	cli    
  40c307:	dec    edi
  40c308:	add    al,0x4a
  40c30a:	call   0xe903:0x841af124
  40c311:	mov    dh,0x8f
  40c313:	lahf   
  40c314:	cmp    DWORD PTR [ebx+0x31],0xca5052a
  40c31b:	mov    dl,0x5c
  40c31d:	adc    bl,cl
  40c31f:	loop   0x40c2ec
  40c321:	push   ebx
  40c322:	loope  0x40c359
  40c324:	jecxz  0x40c2db
  40c326:	xchg   ebx,eax
  40c327:	aad    0x7
  40c329:	int    0x51
  40c32b:	xor    BYTE PTR [ebp-0x3dca3210],al
  40c331:	sar    ch,cl
  40c333:	shr    esp,1
  40c335:	inc    ebp
  40c336:	clc    
  40c337:	mov    ds:0x8bd5a707,al
  40c33c:	push   ebp
  40c33d:	shl    DWORD PTR [edx+0x6d4de372],0x2
  40c344:	test   al,0x7e
  40c346:	in     al,0x19
  40c348:	sub    ah,ah
  40c34a:	mov    ecx,0x169c5b7d
  40c34f:	scas   eax,DWORD PTR es:[edi]
  40c350:	pop    edx
  40c351:	mov    ds:0x8f090e0a,al
  40c356:	dec    edx
  40c357:	cmp    eax,0x321623d0
  40c35c:	pop    eax
  40c35d:	arpl   WORD PTR [eax],cx
  40c35f:	sbb    DWORD PTR [ecx],ebx
  40c361:	cmc    
  40c362:	or     dh,BYTE PTR [edi]
  40c364:	xchg   ebp,eax
  40c365:	pop    ds
  40c366:	jmp    0xf374:0x4d66e5b1
  40c36d:	mov    ecx,0xd726212c
  40c372:	jge    0x40c3f3
  40c374:	xchg   ebp,eax
  40c375:	scas   eax,DWORD PTR es:[edi]
  40c376:	cmp    bl,BYTE PTR [eax-0x3f]
  40c379:	xor    BYTE PTR ds:0x1cf5,0x91
  40c37f:	push   eax
  40c380:	fidiv  WORD PTR [edi-0x6bef05bd]
  40c386:	test   al,0xbc
  40c388:	dec    eax
  40c389:	nop
  40c38a:	mov    eax,ds:0x170842f3
  40c38f:	push   edx
  40c390:	adc    dl,dl
  40c392:	arpl   WORD PTR [ebx],bp
  40c394:	inc    ebx
  40c395:	in     al,dx
  40c396:	jle    0x40c37d
  40c398:	push   ss
  40c399:	jp     0x40c3f2
  40c39b:	call   0xb534026a
  40c3a0:	cmp    DWORD PTR [ebp+0x48079f84],edi
  40c3a6:	clc    
  40c3a7:	rcl    BYTE PTR [ebp+0x5cfa1d0],1
  40c3ad:	cld    
  40c3ae:	xor    bl,BYTE PTR [eax-0x3]
  40c3b1:	jecxz  0x40c41f
  40c3b3:	and    DWORD PTR [edx-0x4121541b],ecx
  40c3b9:	retf   
  40c3ba:	add    eax,0x267c1cb4
  40c3bf:	shr    DWORD PTR [esi],0x13
  40c3c2:	mov    DWORD PTR [ebp-0x15],edx
  40c3c5:	mov    al,0xf6
  40c3c7:	or     BYTE PTR [esp+ecx*2+0x9c2555d],bl
  40c3ce:	add    ebp,DWORD PTR [esi*4+0x225870bf]
  40c3d5:	jae    0x40c39c
  40c3d7:	out    dx,eax
  40c3d8:	ret    0x98ee
  40c3db:	mov    esi,0xce6deddf
  40c3e0:	out    0xcd,al
  40c3e2:	clc    
  40c3e3:	inc    ebp
  40c3e4:	cmp    eax,0xb37dedc9
  40c3e9:	leave  
  40c3ea:	cmp    BYTE PTR [edx-0x10e50f4e],bh
  40c3f0:	dec    eax
  40c3f1:	xchg   ebx,eax
  40c3f2:	jp     0x40c375
  40c3f4:	lods   al,BYTE PTR ds:[esi]
  40c3f5:	daa    
  40c3f6:	mov    eax,ds:0x1fd2700f
  40c3fb:	sub    DWORD PTR [esi+0x35],edx
  40c3fe:	jmp    0x40c397
  40c400:	lods   al,BYTE PTR ds:[esi]
  40c401:	cmp    BYTE PTR [edx+0xc],bh
  40c404:	and    esp,DWORD PTR [eax+0x1f]
  40c407:	sbb    eax,0x874d49c4
  40c40c:	xor    DWORD PTR [ebp+edi*4-0x54d96062],esi
  40c413:	adc    eax,0xf4fb30ae
  40c418:	shl    DWORD PTR [ebx+0x69],1
  40c41b:	cdq    
  40c41c:	push   edx
  40c41d:	test   al,0xe9
  40c41f:	sub    bl,cl
  40c421:	cmc    
  40c422:	out    dx,al
  40c423:	inc    ebx
  40c424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c425:	(bad)  
  40c426:	pop    ebx
  40c427:	sbb    edi,DWORD PTR [edi+0x570c977d]
  40c42d:	rcl    DWORD PTR [edx-0x51b8d3fc],1
  40c433:	cdq    
  40c434:	cmp    DWORD PTR [ebx+eax*1],edi
  40c437:	shr    BYTE PTR [esi],1
  40c439:	iret   
  40c43a:	xchg   ecx,eax
  40c43b:	jg     0x40c400
  40c43d:	lock push edx
  40c43f:	out    dx,eax
  40c440:	or     si,ax
  40c443:	(bad)  
  40c444:	stc    
  40c445:	outs   dx,BYTE PTR ds:[esi]
  40c446:	push   edi
  40c447:	pop    eax
  40c448:	mov    esp,0x7fa9b357
  40c44d:	es xchg esi,eax
  40c44f:	imul   edx,DWORD PTR [ebp-0x7f],0x70be73ee
  40c456:	and    eax,0x8248dda8
  40c45b:	jle    0x40c4bd
  40c45d:	stos   BYTE PTR es:[edi],al
  40c45e:	push   0xd3b442b3
  40c463:	imul   ecx,DWORD PTR [eax+edx*1],0x4bbec350
  40c46a:	aaa    
  40c46b:	xor    DWORD PTR [ecx],ebx
  40c46d:	and    DWORD PTR [esi-0x50668dec],esi
  40c473:	ficomp WORD PTR [ebx]
  40c475:	sbb    bh,BYTE PTR [ebx-0x2a5e2632]
  40c47b:	adc    eax,0x951692c1
  40c480:	pop    ebx
  40c481:	or     cl,BYTE PTR [esi]
  40c483:	cmovl  ecx,DWORD PTR [eax+0x41837c90]
  40c48a:	imul   edx,DWORD PTR [ebx+ebp*2+0x5],0x23
  40c48f:	(bad)  
  40c491:	(bad)  
  40c492:	sar    BYTE PTR [esi-0x5f],1
  40c495:	adc    DWORD PTR [edi+edx*1-0x683d76d7],esi
  40c49c:	test   BYTE PTR [eax-0x11],0x43
  40c4a0:	arpl   ax,dx
  40c4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4a3:	add    DWORD PTR [edi-0x2a],ebx
  40c4a6:	retf   0x3a7b
  40c4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4aa:	jo     0x40c4ad
  40c4ac:	stos   BYTE PTR es:[edi],al
  40c4ad:	jns    0x40c448
  40c4af:	fs je  0x40c51c
  40c4b2:	dec    ecx
  40c4b3:	cmp    al,0x50
  40c4b5:	jp     0x40c471
  40c4b7:	fldenv [ebx-0x9]
  40c4ba:	xchg   edx,eax
  40c4bb:	sar    DWORD PTR [ecx-0x3d0144be],0xe7
  40c4c2:	icebp  
  40c4c3:	pusha  
  40c4c4:	jae    0x40c464
  40c4c6:	push   ss
  40c4c7:	mov    ebp,0xf01c7893
  40c4cc:	imul   edx,DWORD PTR es:[eax],0x7b
  40c4d0:	xchg   edx,eax
  40c4d1:	and    al,dl
  40c4d3:	std    
  40c4d4:	and    ebp,DWORD PTR [esp+edx*1]
  40c4d7:	ror    edx,1
  40c4d9:	ficom  DWORD PTR [eax]
  40c4db:	stos   BYTE PTR es:[edi],al
  40c4dc:	jne    0x40c541
  40c4de:	or     eax,DWORD PTR [edx-0x31a91732]
  40c4e4:	aam    0x82
  40c4e6:	bound  esi,QWORD PTR [edx-0x5e]
  40c4e9:	stc    
  40c4ea:	lahf   
  40c4eb:	jge    0x40c486
  40c4ed:	sub    ah,BYTE PTR [eax]
  40c4ef:	out    dx,eax
  40c4f0:	jno    0x40c48b
  40c4f2:	out    dx,al
  40c4f3:	xor    BYTE PTR ds:0x4469a14d,al
  40c4f9:	test   eax,0xd07f4309
  40c4fe:	jl     0x40c53c
  40c500:	inc    ecx
  40c501:	sar    DWORD PTR [ebp+0x41],1
  40c504:	test   BYTE PTR [eax+0x44],0xfe
  40c508:	dec    esi
  40c509:	and    cl,BYTE PTR [ebx]
  40c50b:	aaa    
  40c50c:	dec    esp
  40c50d:	gs jg  0x40c4f6
  40c510:	dec    edx
  40c511:	cmp    dh,BYTE PTR [edi+0x2d]
  40c514:	lea    ecx,[edx+eax*2]
  40c517:	rol    DWORD PTR [edi+0x4a],cl
  40c51a:	in     eax,0x7d
  40c51c:	out    dx,eax
  40c51d:	cmp    eax,0x7c3e7f9f
  40c522:	sub    ch,ch
  40c524:	pop    ds
  40c525:	stc    
  40c526:	sub    eax,0xcb70b2ef
  40c52b:	fist   WORD PTR [ebx+0x23]
  40c52e:	mov    ch,0x49
  40c530:	je     0x40c54e
  40c532:	dec    ecx
  40c533:	sbb    BYTE PTR [edi+0x42],ch
  40c536:	pop    esi
  40c537:	sub    al,0x3a
  40c539:	rcl    BYTE PTR [ebx+edx*2+0x59],cl
  40c53d:	shl    BYTE PTR [eax-0x47],1
  40c540:	push   ecx
  40c541:	sub    ecx,DWORD PTR [edx]
  40c543:	retf   
  40c544:	and    cl,bl
  40c546:	cmp    al,0x9a
  40c548:	sub    DWORD PTR [esi-0x41d375d2],ebx
  40c54e:	fnsave [edx]
  40c550:	test   bh,bh
  40c552:	dec    edx
  40c553:	in     eax,0x2c
  40c555:	sub    BYTE PTR [ebx],0xde
  40c558:	jnp    0x40c507
  40c55a:	jno    0x40c537
  40c55c:	rol    DWORD PTR [esi],cl
  40c55e:	lds    ebp,FWORD PTR [esi+0x4a]
  40c561:	and    bl,cl
  40c563:	pop    eax
  40c564:	cmp    DWORD PTR [ecx],0x9b22f6f1
  40c56a:	mov    bl,0x13
  40c56c:	sub    edx,DWORD PTR [ebp+0x74]
  40c56f:	or     DWORD PTR [edx-0x5b140513],ebp
  40c575:	loop   0x40c5eb
  40c577:	adc    ebx,DWORD PTR [esi+edx*8-0x7ceaaacc]
  40c57e:	mul    bl
  40c580:	cmc    
  40c581:	xor    al,0xcb
  40c583:	and    esp,ecx
  40c585:	std    
  40c586:	dec    ebx
  40c587:	lods   eax,DWORD PTR ds:[esi]
  40c588:	mov    bl,BYTE PTR [ebx+0x5df14948]
  40c58e:	nop
  40c58f:	imul   ebp,DWORD PTR [ebp-0x12],0x3f
  40c593:	dec    eax
  40c594:	lea    edx,[edx+0x2e]
  40c597:	or     bl,bh
  40c599:	lds    ebx,FWORD PTR [edi+0x31d97023]
  40c59f:	(bad)  
  40c5a0:	fistp  DWORD PTR [edi]
  40c5a2:	pop    esp
  40c5a3:	mov    bh,0x24
  40c5a5:	popf   
  40c5a6:	dec    esp
  40c5a7:	sti    
  40c5a8:	mov    ds:0x21efa83f,al
  40c5ad:	test   DWORD PTR [ebx+0x37634449],eax
  40c5b3:	aad    0x4a
  40c5b5:	nop
  40c5b6:	or     BYTE PTR [edi+0x6172197],cl
  40c5bc:	aam    0x2c
  40c5be:	aaa    
  40c5bf:	add    cl,BYTE PTR [bp+si-0x49]
  40c5c3:	dec    eax
  40c5c4:	shr    DWORD PTR [ebx+0x5feda33a],1
  40c5ca:	mov    edx,0x32759268
  40c5cf:	or     ebx,DWORD PTR [eax]
  40c5d1:	call   0xf588:0xff555135
  40c5d8:	dec    DWORD PTR [ebp-0x5d]
  40c5db:	mov    ds:0xa5a57da4,eax
  40c5e0:	push   eax
  40c5e1:	mov    ah,0x25
  40c5e3:	cmp    al,ch
  40c5e5:	outs   dx,BYTE PTR ds:[esi]
  40c5e6:	fld    st(7)
  40c5e8:	jl     0x40c5f7
  40c5ea:	idiv   DWORD PTR [ebp-0x5be6fadd]
  40c5f0:	aaa    
  40c5f1:	lods   eax,DWORD PTR ds:[esi]
  40c5f2:	test   BYTE PTR [edi-0x1e],al
  40c5f5:	jmp    0x40c5d1
  40c5f7:	mov    es,WORD PTR [eax+0x29]
  40c5fa:	add    ch,al
  40c5fc:	mov    cl,0x2a
  40c5fe:	mov    ecx,ebx
  40c600:	jns    0x40c5e1
  40c602:	(bad)  
  40c604:	loope  0x40c586
  40c606:	cmp    DWORD PTR [eax+0x4b],edx
  40c609:	retf   0xa1c7
  40c60c:	mov    ebx,DWORD PTR [edx]
  40c60e:	mov    ah,0xdb
  40c610:	sbb    edi,eax
  40c612:	call   0xf5d:0x38634346
  40c619:	and    eax,0xaabaf59c
  40c61e:	or     al,BYTE PTR [ebx+0x3dd2b30]
  40c624:	fwait
  40c625:	push   ebx
  40c626:	enter  0x9f1e,0x29
  40c62a:	push   esp
  40c62b:	mov    edx,0x9800f56e
  40c630:	and    dh,BYTE PTR [esi+eiz*2+0x6d]
  40c634:	fstp   TBYTE PTR es:[edi]
  40c637:	leave  
  40c638:	sub    bh,BYTE PTR [ecx]
  40c63a:	sub    BYTE PTR [edi],0x4c
  40c63d:	jmp    0x2b3b2cb2
  40c642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c643:	in     al,dx
  40c644:	or     ebx,DWORD PTR [eax+edi*4+0x6bbf793]
  40c64b:	repz mov gs,WORD PTR [esi]
  40c64e:	fimul  DWORD PTR [esi-0x306bc7e8]
  40c654:	int3   
  40c655:	sbb    al,dh
  40c657:	or     ebx,DWORD PTR [edx]
  40c659:	pop    edi
  40c65a:	pop    ss
  40c65b:	hlt    
  40c65c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c65d:	mov    esi,0xa6a4907d
  40c662:	int3   
  40c663:	inc    eax
  40c664:	cmp    al,0x73
  40c666:	mov    es,WORD PTR ds:0xcd9522ad
  40c66c:	adc    eax,0xe5336527
  40c671:	stos   BYTE PTR es:[edi],al
  40c672:	adc    DWORD PTR [ebx-0x29],eax
  40c675:	jl     0x40c6c5
  40c677:	pop    ecx
  40c678:	lock in al,0x2
  40c67b:	cld    
  40c67c:	push   cs
  40c67d:	outs   dx,DWORD PTR ds:[esi]
  40c67e:	call   0x3416:0xb0104df
  40c685:	mov    ah,0x7e
  40c687:	push   0xffffffb5
  40c689:	jae    0x40c633
  40c68b:	mov    esi,0x925c992b
  40c690:	pop    edi
  40c691:	cmp    al,0xc4
  40c693:	pop    ecx
  40c694:	aaa    
  40c695:	add    ebp,eax
  40c697:	jb     0x40c6fd
  40c699:	out    0x85,eax
  40c69b:	inc    ebp
  40c69c:	inc    esi
  40c69d:	cmp    ebp,DWORD PTR [ebx]
  40c69f:	or     al,0xc2
  40c6a1:	inc    ebx
  40c6a2:	push   ss
  40c6a3:	vpandn xmm2,xmm6,XMMWORD PTR [edx+0x7d]
  40c6a8:	xchg   ebx,eax
  40c6a9:	rcr    ch,cl
  40c6ab:	sub    DWORD PTR [edx+0x1dca53e3],ebx
  40c6b1:	int    0x8a
  40c6b3:	jmp    0xf289:0xee3454cd
  40c6ba:	jbe    0x40c716
  40c6bc:	sub    DWORD PTR [eax+0x1c],0x6597783d
  40c6c3:	xchg   edi,eax
  40c6c4:	pop    edi
  40c6c5:	pop    edx
  40c6c6:	jge    0x40c73e
  40c6c8:	push   edi
  40c6c9:	stos   DWORD PTR es:[edi],eax
  40c6ca:	push   0xffffff82
  40c6cc:	(bad)  
  40c6cd:	in     al,0x50
  40c6cf:	into   
  40c6d0:	test   DWORD PTR [esi+ecx*1+0x7b],edx
  40c6d4:	add    eax,0xe47afc03
  40c6d9:	mov    eax,0x5db461e5
  40c6de:	icebp  
  40c6df:	fdiv   DWORD PTR [edx-0x193b5e2a]
  40c6e5:	mov    ds:0x609b033a,eax
  40c6ea:	sbb    al,0x47
  40c6ec:	push   0xffffffef
  40c6ee:	fcmovb st,st(3)
  40c6f0:	test   bl,al
  40c6f2:	mov    esp,0xa405eab5
  40c6f7:	pushf  
  40c6f8:	fcom   QWORD PTR [eax+0x3d]
  40c6fb:	aas    
  40c6fc:	add    BYTE PTR [ebp+0x74e74afd],bh
  40c702:	aam    0x98
  40c704:	mov    ebx,0x2eceafdb
  40c709:	xor    eax,0xa7f01a85
  40c70e:	ins    DWORD PTR es:[edi],dx
  40c70f:	adc    ch,BYTE PTR [edx+0x7b520b62]
  40c715:	cmp    ah,dl
  40c717:	mov    DWORD PTR [ecx],edx
  40c719:	dec    edi
  40c71a:	and    DWORD PTR [ecx+0x3dd69e99],0x53
  40c721:	imul   ebp,eax,0x34
  40c724:	mov    edi,0xab9e4cb7
  40c729:	leave  
  40c72a:	xor    al,0xc7
  40c72c:	cwde   
  40c72d:	cs cmp al,0x6b
  40c730:	int    0x90
  40c732:	mov    eax,0x6bbfa0b0
  40c737:	dec    edx
  40c738:	out    0xba,al
  40c73a:	xchg   ecx,eax
  40c73b:	xchg   ebp,edx
  40c73d:	mov    ah,0xb7
  40c73f:	jp     0x40c6f7
  40c741:	retf   
  40c742:	shl    BYTE PTR [ecx+0x32],0xfe
  40c746:	ret    0x5469
  40c749:	cmp    eax,0xc7d9beb6
  40c74e:	test   DWORD PTR [ebx-0x76],edx
  40c751:	fimul  WORD PTR [edi]
  40c753:	dec    ecx
  40c754:	call   FWORD PTR [edi+0x67]
  40c757:	cld    
  40c758:	mov    ah,0x28
  40c75a:	sahf   
  40c75b:	sti    
  40c75c:	adc    BYTE PTR [ebx+0x3c10d7c3],0x1f
  40c763:	sti    
  40c764:	cmp    BYTE PTR [ecx-0x112ca152],bl
  40c76a:	and    ch,BYTE PTR [ebx+0x5578dc61]
  40c770:	ins    BYTE PTR es:[edi],dx
  40c771:	and    BYTE PTR [bp+di+0x10dc],ah
  40c776:	cwde   
  40c777:	out    0x5b,al
  40c779:	pushf  
  40c77a:	mov    al,ds:0x3f7ec102
  40c77f:	(bad)  
  40c780:	ss push ds
  40c782:	and    eax,0xf5c5f98a
  40c787:	push   edi
  40c788:	xor    BYTE PTR [edi+edi*8-0x57eee64e],bl
  40c78f:	push   edx
  40c790:	in     eax,dx
  40c791:	(bad)  
  40c792:	loope  0x40c7ec
  40c794:	(bad)  
  40c795:	xor    edi,ecx
  40c797:	daa    
  40c798:	pop    ds
  40c799:	mov    ah,BYTE PTR [ebx]
  40c79b:	iret   
  40c79c:	pop    esp
  40c79d:	cs dec esp
  40c79f:	mov    ds:0x4962cfc9,eax
  40c7a4:	nop
  40c7a5:	xlat   BYTE PTR ds:[ebx]
  40c7a6:	lods   eax,DWORD PTR ds:[esi]
  40c7a7:	pusha  
  40c7a8:	adc    DWORD PTR [ebx-0x6d],ebp
  40c7ab:	aad    0x6a
  40c7ad:	inc    BYTE PTR [edx-0x5c61521f]
  40c7b3:	push   0xfffffff4
  40c7b5:	pmullw mm4,mm7
  40c7b8:	imul   eax,DWORD PTR [esp+eax*2],0xa77ac678
  40c7bf:	cmp    DWORD PTR [eax+edi*1+0x71],ebx
  40c7c3:	push   eax
  40c7c4:	adc    eax,0xff0e83c2
  40c7c9:	jl     0x40c7a9
  40c7cb:	inc    DWORD PTR [edx]
  40c7cd:	aad    0xfa
  40c7cf:	lock add dh,BYTE PTR [eax+0x4c]
  40c7d3:	mov    ecx,DWORD PTR [ebx+0xf]
  40c7d6:	call   0x7ae1b7c7
  40c7db:	xlat   BYTE PTR ds:[ebx]
  40c7dc:	cmpps  xmm1,XMMWORD PTR [ecx],0x68
  40c7e0:	xor    dl,cl
  40c7e2:	add    al,ch
  40c7e4:	daa    
  40c7e5:	fcom   DWORD PTR [esi+0x6a]
  40c7e8:	mul    DWORD PTR [edx-0x1cffb8fb]
  40c7ee:	push   cs
  40c7ef:	pop    esi
  40c7f0:	cmp    BYTE PTR [ecx],0x94
  40c7f3:	stos   DWORD PTR es:[edi],eax
  40c7f4:	jmp    0x5bb6:0xde326d6
  40c7fb:	ja     0x40c7ea
  40c7fd:	in     al,dx
  40c7fe:	test   eax,0x8e7b859
  40c803:	int3   
  40c804:	clc    
  40c805:	imul   ebx,ebp,0xffffffe3
  40c808:	mov    ecx,0x15712741
  40c80d:	xor    DWORD PTR [ebx],edi
  40c80f:	jnp    0x40c82a
  40c811:	mov    edi,0x4aad682
  40c816:	sub    eax,DWORD PTR [edi+esi*4-0x10]
  40c81a:	mov    ebp,0x62e6b1e8
  40c81f:	xor    BYTE PTR [esi+0x33],0xed
  40c823:	imul   ebp,DWORD PTR [eax-0x58],0x74638341
  40c82a:	cmp    eax,0x8761827
  40c82f:	leave  
  40c830:	xchg   ecx,eax
  40c831:	(bad)  [esi]
  40c833:	mov    ah,0x4b
  40c835:	cdq    
  40c836:	scas   al,BYTE PTR es:[edi]
  40c837:	div    DWORD PTR [ecx-0x6cf844c0]
  40c83d:	mov    ds:0xe57613c1,al
  40c842:	jo     0x40c894
  40c844:	das    
  40c845:	imul   esi,DWORD PTR [edx],0x76
  40c848:	push   cs
  40c849:	jle    0x40c810
  40c84b:	test   al,0x80
  40c84d:	lods   al,BYTE PTR ds:[esi]
  40c84e:	lods   eax,DWORD PTR ds:[esi]
  40c84f:	imul   ebx,DWORD PTR [eax],0x6bc1b101
  40c855:	(bad)  
  40c857:	inc    ebp
  40c858:	(bad)  
  40c859:	xor    ah,BYTE PTR [edi]
  40c85b:	xchg   ebx,eax
  40c85c:	add    eax,0xc35b593d
  40c861:	push   edi
  40c862:	arpl   WORD PTR [ebp-0x2449349e],bp
  40c868:	xor    bl,BYTE PTR [ecx]
  40c86a:	mov    eax,ds:0x9b6d13b
  40c86f:	loop   0x40c832
  40c871:	mov    es:0x1719b840,al
  40c877:	sbb    al,0x38
  40c879:	pop    ss
  40c87a:	les    ecx,FWORD PTR [esi-0x12]
  40c87d:	sahf   
  40c87e:	(bad)  
  40c87f:	adc    al,0x2a
  40c881:	pop    esp
  40c882:	popf   
  40c883:	xchg   ecx,eax
  40c884:	mov    ebx,0xcfbc9685
  40c889:	popf   
  40c88a:	sbb    ebx,DWORD PTR [esi-0x21715e09]
  40c890:	int3   
  40c891:	push   esi
  40c892:	mov    dh,0xfd
  40c894:	fsubrp st(6),st
  40c896:	mov    ebp,0x16998e9e
  40c89b:	xchg   ecx,eax
  40c89c:	and    eax,0x216dfc8
  40c8a1:	stc    
  40c8a2:	jae    0x40c919
  40c8a4:	xchg   edi,eax
  40c8a5:	arpl   bp,bp
  40c8a7:	add    BYTE PTR [eax-0x3f9da916],bl
  40c8ad:	js     0x40c8f4
  40c8af:	retf   0x8ebd
  40c8b2:	hlt    
  40c8b3:	xor    al,0x81
  40c8b5:	pop    ebx
  40c8b6:	pop    edx
  40c8b7:	sbb    DWORD PTR [edx+0x871acbc],eax
  40c8bd:	ret    
  40c8be:	jmp    0x40c8c5
  40c8c0:	mov    edx,DWORD PTR [edx+0x6a]
  40c8c3:	shl    bl,cl
  40c8c5:	out    0x99,eax
  40c8c7:	into   
  40c8c8:	test   dh,dl
  40c8ca:	outs   dx,DWORD PTR ds:[esi]
  40c8cb:	push   ebx
  40c8cc:	scas   al,BYTE PTR es:[edi]
  40c8cd:	lahf   
  40c8ce:	jmp    0x40c947
  40c8d0:	mov    dl,0xcc
  40c8d2:	(bad)  
  40c8d3:	arpl   dx,di
  40c8d5:	push   ss
  40c8d6:	sbb    bh,bh
  40c8d8:	fiadd  DWORD PTR [edi+ebx*8+0x7d]
  40c8dc:	repz shl DWORD PTR [edx+0x17babeec],0x2
  40c8e4:	ffree  st(5)
  40c8e6:	inc    ebx
  40c8e7:	addr16 lock pop esi
  40c8ea:	les    ecx,FWORD PTR [edx]
  40c8ec:	or     eax,0x6f9439d8
  40c8f1:	aad    0x6d
  40c8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f4:	cmc    
  40c8f5:	push   esi
  40c8f6:	popa   
  40c8f7:	push   eax
  40c8f8:	call   0xb9632cbd
  40c8fd:	sbb    edi,esp
  40c8ff:	pop    esi
  40c900:	add    eax,0xd769310d
  40c905:	fs or  dh,al
  40c908:	xor    eax,0xabdd1b11
  40c90d:	jle    0x40c966
  40c90f:	ja     0x40c8ee
  40c911:	sub    ebx,DWORD PTR [esi+0x32e56147]
  40c917:	pop    eax
  40c918:	popf   
  40c919:	sbb    DWORD PTR [ecx+eiz*2],esp
  40c91c:	loope  0x40c972
  40c91e:	cs jmp 0x40c8eb
  40c921:	inc    ebp
  40c922:	lods   al,BYTE PTR ds:[esi]
  40c923:	or     BYTE PTR [edi+0x125eaa28],al
  40c929:	jl     0x40c935
  40c92b:	(bad)  
  40c92d:	popf   
  40c92e:	jo     0x40c8d1
  40c930:	in     al,0xd9
  40c932:	sub    ah,BYTE PTR [edx-0x27e43de2]
  40c938:	pop    ebp
  40c939:	aas    
  40c93a:	ss out 0xee,al
  40c93d:	push   ss
  40c93e:	sbb    BYTE PTR [esi+0x65ea1e86],al
  40c944:	and    dl,BYTE PTR [ecx-0x5f]
  40c947:	test   al,0xea
  40c949:	mov    esp,DWORD PTR [ebx-0x19]
  40c94c:	stc    
  40c94d:	sbb    al,0x80
  40c94f:	push   0x79
  40c951:	or     DWORD PTR [ebx-0x32838528],ecx
  40c957:	(bad)  
  40c958:	data16 std 
  40c95a:	std    
  40c95b:	xchg   ebp,eax
  40c95c:	jbe    0x40c972
  40c95e:	mov    BYTE PTR [esi-0x5a535b9d],dl
  40c964:	popa   
  40c965:	mov    al,0xea
  40c967:	stc    
  40c968:	xchg   ebp,eax
  40c969:	or     esi,ebp
  40c96b:	daa    
  40c96c:	or     bl,BYTE PTR [esi]
  40c96e:	test   BYTE PTR [ebx+0x3408f529],ah
  40c974:	test   eax,ebp
  40c976:	aam    0x88
  40c978:	mov    ch,0x9d
  40c97a:	scas   eax,DWORD PTR es:[edi]
  40c97b:	sub    ah,al
  40c97d:	mov    al,ds:0xc568df66
  40c982:	jge    0x40ca03
  40c984:	gs stc 
  40c986:	adc    al,0xd2
  40c988:	cmp    DWORD PTR [ecx+0x817f841],0x5f057564
  40c992:	repz icebp 
  40c994:	jo     0x40c927
  40c996:	xchg   ecx,eax
  40c997:	ret    0x2b85
  40c99a:	pop    edi
  40c99b:	aam    0x6c
  40c99d:	pop    ecx
  40c99e:	fimul  DWORD PTR [eax-0x6b5af2ce]
  40c9a4:	dec    esp
  40c9a5:	mov    al,ds:0x7356b88b
  40c9aa:	push   0x31
  40c9ac:	xchg   edx,eax
  40c9ad:	adc    DWORD PTR [ebx+0x6],0xffffff8c
  40c9b1:	mov    ebx,0xdbc0c234
  40c9b6:	push   cs
  40c9b7:	hlt    
  40c9b8:	sub    DWORD PTR [edx-0x17acd3cf],eax
  40c9be:	adc    eax,0x6d5ed2b
  40c9c4:	push   ds
  40c9c5:	cmp    eax,0x58b8c5f4
  40c9ca:	sbb    dh,dl
  40c9cc:	loopne 0x40ca10
  40c9ce:	jnp    0x40c9e3
  40c9d0:	dec    ebp
  40c9d1:	mov    ebp,0x4e6a802b
  40c9d6:	adc    al,0xe7
  40c9d8:	inc    ebp
  40c9d9:	push   ds
  40c9da:	inc    esp
  40c9db:	push   ebx
  40c9dc:	aas    
  40c9dd:	pusha  
  40c9de:	jne    0x40c99d
  40c9e0:	(bad)  
  40c9e1:	mov    ecx,0xdc40075c
  40c9e6:	popf   
  40c9e7:	xlat   BYTE PTR ds:[ebx]
  40c9e8:	sbb    BYTE PTR [edi+ebx*1],al
  40c9eb:	mov    eax,ds:0xb6ea6b68
  40c9f0:	sub    DWORD PTR [eax-0x1c0183d6],ebx
  40c9f6:	xchg   edx,eax
  40c9f7:	add    esi,DWORD PTR [edi]
  40c9f9:	sbb    eax,0x33c8561a
  40c9fe:	dec    ebp
  40c9ff:	adc    DWORD PTR [esi-0x52],edi
  40ca02:	and    edx,0x6a
  40ca05:	jmp    0xd7d4:0x17df1602
  40ca0c:	xor    eax,0x27f20d5
  40ca11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca12:	into   
  40ca13:	inc    ebp
  40ca14:	mov    ebx,edi
  40ca16:	aam    0x31
  40ca18:	mov    eax,0x8a6a4c4b
  40ca1d:	fiadd  WORD PTR [eax+0x6d]
  40ca20:	jg     0x40ca01
  40ca22:	cmp    ebx,DWORD PTR [edx+0x2]
  40ca25:	mov    DWORD PTR [ebp+0x69],0x8878abe7
  40ca2c:	rcr    DWORD PTR [ecx-0x2f327e24],0x4c
  40ca33:	dec    BYTE PTR [edi-0xcb7368d]
  40ca39:	sbb    edx,esp
  40ca3b:	sbb    ecx,DWORD PTR [ecx-0x64e36378]
  40ca41:	mov    edi,0x719ff63b
  40ca46:	fsub   QWORD PTR [edi+0x5b]
  40ca49:	in     al,dx
  40ca4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca4b:	outs   dx,BYTE PTR ds:[esi]
  40ca4c:	pop    ecx
  40ca4d:	iret   
  40ca4e:	scas   al,BYTE PTR es:[edi]
  40ca4f:	push   ebp
  40ca50:	clc    
  40ca51:	or     eax,0x6f326de5
  40ca56:	mov    al,ds:0x3ef2decd
  40ca5b:	stos   DWORD PTR es:[edi],eax
  40ca5c:	bound  esp,QWORD PTR [ecx]
  40ca5e:	rcr    bl,0x98
  40ca61:	enter  0xf507,0x7b
  40ca65:	xor    al,BYTE PTR [ebp+0x5548215e]
  40ca6b:	push   esi
  40ca6c:	mul    DWORD PTR [edi-0x65fc3e97]
  40ca72:	and    al,0x77
  40ca74:	xor    cl,BYTE PTR [ebp+0x0]
  40ca77:	pop    eax
  40ca78:	sub    al,0xcc
  40ca7a:	xor    eax,0x7fe92dbd
  40ca7f:	pop    ecx
  40ca80:	fistp  WORD PTR [esi]
  40ca82:	cmp    bl,BYTE PTR [esi+0x368f18b3]
  40ca88:	aad    0xd6
  40ca8a:	aas    
  40ca8b:	dec    ebx
  40ca8c:	adc    edi,DWORD PTR [edi+0x43]
  40ca8f:	push   ebx
  40ca90:	loope  0x40cb00
  40ca92:	sbb    eax,0x6f172e55
  40ca97:	into   
  40ca98:	push   edx
  40ca99:	mov    ds:0xcf147b81,eax
  40ca9e:	fnsave [edi]
  40caa0:	out    0xef,eax
  40caa2:	fdivrp st(3),st
  40caa4:	cld    
  40caa5:	sar    BYTE PTR [ecx+0x14093910],1
  40caab:	adc    al,0x91
  40caad:	push   ds
  40caae:	sbb    DWORD PTR [esi+0x65],ecx
  40cab1:	cmp    DWORD PTR [edi+0x79618f2e],0x53f46996
  40cabb:	lock jecxz 0x40cb0e
  40cabe:	lods   al,BYTE PTR ds:[esi]
  40cabf:	xor    DWORD PTR [ebx+eiz*4+0x661ef426],eax
  40cac6:	adc    eax,0x3008cc34
  40cacb:	(bad)  
  40cacc:	xchg   ebx,eax
  40cacd:	das    
  40cace:	mov    ebx,0xbb12d057
  40cad3:	push   0x71381823
  40cad8:	xchg   esp,eax
  40cad9:	xchg   ecx,eax
  40cada:	and    eax,0x411a6cb1
  40cadf:	fistp  QWORD PTR [ebx-0x44]
  40cae2:	mov    esi,0x1aa1c2f1
  40cae7:	and    al,0xb4
  40cae9:	xchg   ebp,ebx
  40caeb:	xor    dh,BYTE PTR [ebp+0x55534ddb]
  40caf1:	mov    ebp,0x2541f054
  40caf7:	pop    esp
  40caf8:	mov    ebx,0xe723852f
  40cafd:	pusha  
  40cafe:	out    0xe,al
  40cb00:	mov    al,ds:0xc3afe1c3
  40cb05:	xor    al,0x3e
  40cb07:	and    DWORD PTR [edx-0x721d3d4d],esi
  40cb0d:	sub    eax,0xd91f9fca
  40cb12:	sbb    DWORD PTR [edi-0x7ae85a99],ebp
  40cb18:	jecxz  0x40ca9a
  40cb1a:	stos   DWORD PTR es:[edi],eax
  40cb1b:	or     bl,BYTE PTR [edx]
  40cb1d:	dec    DWORD PTR [ecx+eiz*8]
  40cb20:	cmp    dh,dh
  40cb22:	or     ebx,ebx
  40cb24:	and    al,0xd3
  40cb26:	xchg   edi,eax
  40cb27:	cmp    eax,0xceca1410
  40cb2c:	hlt    
  40cb2d:	loop   0x40cb82
  40cb2f:	mov    ch,al
  40cb31:	outs   dx,BYTE PTR ds:[esi]
  40cb32:	aam    0xef
  40cb34:	pop    ds
  40cb35:	add    DWORD PTR [ebp-0x66de82b4],ebx
  40cb3b:	jmp    0xed55:0x21806f28
  40cb42:	test   DWORD PTR [ebx+0xece4cc0],esp
  40cb48:	jle    0x40cb9c
  40cb4a:	outs   dx,BYTE PTR ds:[esi]
  40cb4b:	and    edx,DWORD PTR [edx]
  40cb4d:	fs call 0xbf78b480
  40cb53:	neg    edx
  40cb55:	cmp    DWORD PTR [edi+0x31219fc1],eax
  40cb5b:	xchg   BYTE PTR ds:0x50a48d35,ah
  40cb61:	mov    al,ds:0xf362c7c2
  40cb66:	daa    
  40cb67:	add    eax,0x89db7846
  40cb6c:	and    BYTE PTR [ecx+0xadb7943],0x89
  40cb73:	test   dh,0x62
  40cb76:	jmp    0x1098:0xf9070a38
  40cb7d:	jp     0x40cb81
  40cb7f:	cmp    ebx,DWORD PTR [edi-0x377dd3b]
  40cb85:	int3   
  40cb86:	popa   
  40cb87:	inc    ebx
  40cb88:	xor    BYTE PTR [edi],cl
  40cb8a:	imul   edi,DWORD PTR [ebp-0x32],0xa9866cf6
  40cb91:	push   edx
  40cb92:	bound  eax,QWORD PTR ds:0xc9159bab
  40cb98:	dec    ecx
  40cb99:	xchg   BYTE PTR [ebx],ch
  40cb9b:	jnp    0x40cbf3
  40cb9d:	mov    cl,0xf3
  40cb9f:	sub    DWORD PTR [eax-0x30],esp
  40cba2:	inc    esi
  40cba3:	fdiv   DWORD PTR [edx-0x49]
  40cba6:	pop    edx
  40cba7:	outs   dx,BYTE PTR ds:[esi]
  40cba8:	jnp    0x40cbeb
  40cbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbab:	mov    edi,0xa21f285b
  40cbb0:	clc    
  40cbb1:	jp     0x40cb5b
  40cbb3:	mov    edx,0xd9abe5c2
  40cbb8:	adc    al,0x58
  40cbba:	sub    edx,eax
  40cbbc:	dec    edi
  40cbbd:	and    edx,ebx
  40cbbf:	sahf   
  40cbc0:	pmaxsw mm7,mm1
  40cbc3:	jmp    0xf79bdeea
  40cbc8:	outs   dx,BYTE PTR ds:[esi]
  40cbc9:	shl    DWORD PTR [ecx],cl
  40cbcb:	fcom   QWORD PTR [esi-0x5d5300f4]
  40cbd1:	or     ebx,DWORD PTR [ecx+0x23]
  40cbd4:	inc    esp
  40cbd5:	cmp    eax,0x401e557
  40cbda:	stc    
  40cbdb:	mov    ebx,0x69fe41c1
  40cbe0:	enter  0xa91,0x0
  40cbe4:	or     DWORD PTR [edx-0x5],ecx
  40cbe7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40cbe9:	in     eax,0xcb
  40cbeb:	inc    ebp
  40cbec:	xor    dl,BYTE PTR [esi]
  40cbee:	jle    0x40cbe7
  40cbf0:	loope  0x40cbfc
  40cbf2:	mov    edx,0xb98f8165
  40cbf7:	repnz sub edi,DWORD PTR [eax]
  40cbfa:	xchg   DWORD PTR [ecx+0x36],esi
  40cbfd:	pop    ebx
  40cbfe:	mov    ds:0x5bf3123b,al
  40cc03:	ins    BYTE PTR es:[edi],dx
  40cc04:	loop   0x40cc09
  40cc06:	jl     0x40cc69
  40cc08:	repnz push esp
  40cc0a:	jnp    0x40cbc5
  40cc0c:	push   es
  40cc0d:	and    eax,0xb6892828
  40cc12:	xor    eax,0x55b6152e
  40cc17:	cmp    DWORD PTR [ebx-0x21a0dd4b],edx
  40cc1d:	mov    ds:0x5908395f,eax
  40cc22:	add    BYTE PTR [ebp-0xa],ch
  40cc25:	pop    esi
  40cc26:	pop    ecx
  40cc27:	inc    ebx
  40cc28:	xor    al,0x3b
  40cc2a:	popa   
  40cc2b:	jae    0x40cc27
  40cc2d:	stos   BYTE PTR es:[edi],al
  40cc2e:	jo     0x40cbde
  40cc30:	sar    BYTE PTR [edi],cl
  40cc32:	ficomp DWORD PTR [edi+0xe38262e]
  40cc38:	mov    ch,0x6f
  40cc3a:	sbb    ebx,0x7f4103cf
  40cc40:	ins    BYTE PTR es:[edi],dx
  40cc41:	ins    BYTE PTR es:[edi],dx
  40cc42:	repnz fsubr DWORD PTR [edx+0x5d]
  40cc46:	push   edi
  40cc47:	and    ebx,DWORD PTR ds:0xf57f1fe9
  40cc4d:	fsubr  DWORD PTR [ebx+0x7ccfbc60]
  40cc53:	cmp    eax,DWORD PTR [ebx+0xd]
  40cc56:	push   edi
  40cc57:	mov    al,ds:0x69677d28
  40cc5c:	xor    BYTE PTR [esi+0x2fa85527],bl
  40cc62:	popa   
  40cc63:	adc    al,0xc8
  40cc65:	dec    ebx
  40cc66:	cmp    al,0xd0
  40cc68:	jne    0x40cc28
  40cc6a:	or     ah,BYTE PTR [ecx+0x7751a371]
  40cc70:	dec    ecx
  40cc71:	cmp    bh,bh
  40cc73:	or     DWORD PTR [ecx-0x6e],edx
  40cc76:	mov    BYTE PTR [edi+ebx*2+0x13381184],dl
  40cc7d:	test   DWORD PTR [edx-0x75],esi
  40cc80:	test   eax,0xd8dabd55
  40cc85:	sub    eax,0xa4f7cf35
  40cc8a:	mov    bl,0xe3
  40cc8c:	xchg   DWORD PTR [ebx],ebp
  40cc8e:	dec    esp
  40cc8f:	sub    eax,0x15f73461
  40cc94:	je     0x40cc72
  40cc96:	inc    esi
  40cc97:	inc    esi
  40cc98:	shl    DWORD PTR [ecx],1
  40cc9a:	add    ah,dl
  40cc9c:	mov    ecx,0xf98455e3
  40cca1:	xor    ebp,DWORD PTR [edi]
  40cca3:	shld   DWORD PTR [edx],ecx,cl
  40cca6:	pop    eax
  40cca7:	pushf  
  40cca8:	rcl    ebp,0x15
  40ccab:	dec    esi
  40ccac:	sbb    al,0x94
  40ccae:	lods   al,BYTE PTR ds:[esi]
  40ccaf:	xor    bl,al
  40ccb1:	out    dx,eax
  40ccb2:	clc    
  40ccb3:	fs dec esp
  40ccb5:	mov    esi,0x71529e6c
  40ccba:	xor    DWORD PTR [ebp+0x15],esp
  40ccbd:	mov    ?,edx
  40ccbf:	jmp    0x4e59:0xa32ee7d5
  40ccc6:	shl    DWORD PTR [ebx],0xb2
  40ccc9:	int3   
  40ccca:	mov    bh,BYTE PTR [ebp+0x241c21c4]
  40ccd0:	xchg   esp,eax
  40ccd1:	add    esp,DWORD PTR [ebp-0x1f]
  40ccd4:	adc    BYTE PTR [esi],0x49
  40ccd7:	inc    eax
  40ccd8:	int    0x8c
  40ccda:	and    dh,BYTE PTR gs:[ebp-0x7d]
  40ccde:	popa   
  40ccdf:	pop    ds
  40cce0:	xchg   edi,eax
  40cce1:	fs cmp al,0x5d
  40cce4:	or     eax,0x153fbf2c
  40cce9:	inc    ebp
  40ccea:	mov    edx,0xc50c49c2
  40ccef:	loopne 0x40cd00
  40ccf1:	adc    eax,0x5ae8c6e9
  40ccf6:	mov    edx,DWORD PTR [esi+0x2b]
  40ccf9:	in     al,dx
  40ccfa:	pop    edx
  40ccfb:	call   0x409c6594
  40cd00:	inc    ebx
  40cd01:	icebp  
  40cd02:	add    DWORD PTR [edi+0x632ede14],esi
  40cd08:	cwde   
  40cd09:	repnz inc edx
  40cd0b:	mov    bh,0xdc
  40cd0d:	ja     0x40cc9a
  40cd0f:	stos   DWORD PTR es:[edi],eax
  40cd10:	test   eax,0xf7c56ba0
  40cd15:	nop
  40cd16:	rol    DWORD PTR [ebx+eiz*4-0x54],cl
  40cd1a:	push   ss
  40cd1b:	mov    bl,0x4f
  40cd1d:	dec    ebx
  40cd1e:	aas    
  40cd1f:	scas   al,BYTE PTR es:[edi]
  40cd20:	cmp    edi,DWORD PTR [ebx]
  40cd22:	std    
  40cd23:	sbb    BYTE PTR [ebx+0x52],0xbf
  40cd27:	jmp    0x9d0bb98e
  40cd2c:	inc    edi
  40cd2d:	dec    esi
  40cd2e:	enter  0xc58d,0x30
  40cd32:	cmp    eax,0xe135e8ef
  40cd37:	frstor [edx]
  40cd39:	cs push es
  40cd3b:	inc    ecx
  40cd3c:	into   
  40cd3d:	mov    al,bl
  40cd3f:	xchg   ecx,eax
  40cd40:	sahf   
  40cd41:	push   ecx
  40cd42:	pop    edi
  40cd43:	xchg   esp,eax
  40cd44:	push   edx
  40cd45:	mov    eax,0x7fcb7444
  40cd4a:	loopne 0x40cd31
  40cd4c:	jo     0x40ccd7
  40cd4e:	in     al,0x40
  40cd50:	inc    edx
  40cd51:	aas    
  40cd52:	push   es
  40cd53:	cmp    edi,DWORD PTR [edx+0xa]
  40cd56:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40cd58:	push   ebp
  40cd59:	dec    edi
  40cd5a:	out    dx,eax
  40cd5b:	into   
  40cd5c:	aas    
  40cd5d:	cmp    bl,ah
  40cd5f:	popf   
  40cd60:	or     ch,BYTE PTR [esi-0xd]
  40cd63:	add    bl,BYTE PTR [ecx-0x7bdb1d21]
  40cd69:	push   ds
  40cd6a:	stos   BYTE PTR es:[edi],al
  40cd6b:	data16 or ah,ch
  40cd6e:	(bad)  
  40cd6f:	pop    ebx
  40cd70:	sbb    ebp,DWORD PTR ds:0x17cb3123
  40cd76:	add    DWORD PTR [edi],0x8e7c22e1
  40cd7c:	sbb    BYTE PTR [edx],dh
  40cd7e:	adc    eax,0xcfa52427
  40cd83:	imul   eax,DWORD PTR [eax+0x3c],0xea9fdf9f
  40cd8a:	rcr    BYTE PTR [ebx+0x31],0x70
  40cd8e:	mov    dh,BYTE PTR [ebp+0x35]
  40cd91:	pop    esi
  40cd92:	in     eax,0x36
  40cd94:	sbb    eax,0x17c9a353
  40cd99:	mov    eax,0xaf123ece
  40cd9e:	push   edi
  40cd9f:	inc    esi
  40cda0:	mul    BYTE PTR [ebp+ebp*1-0x7b25c4de]
  40cda7:	dec    esi
  40cda8:	and    eax,0x8aa60a9f
  40cdad:	add    eax,0xb8f3d127
  40cdb2:	xchg   DWORD PTR [ebp+0x5e],edx
  40cdb5:	pop    ebx
  40cdb6:	mov    ah,0x77
  40cdb8:	sub    cl,cl
  40cdba:	ja     0x40cdb5
  40cdbc:	xchg   ebp,eax
  40cdbd:	test   BYTE PTR [esi-0x50],ch
  40cdc0:	or     DWORD PTR [esi+0x58],0xffffff83
  40cdc4:	dec    edx
  40cdc5:	sbb    ah,BYTE PTR [edi]
  40cdc7:	jg     0x40cdf5
  40cdc9:	push   es
  40cdca:	outs   dx,DWORD PTR ds:[esi]
  40cdcb:	xor    ebx,DWORD PTR [edx]
  40cdcd:	sbb    esp,ecx
  40cdcf:	mov    BYTE PTR [eax-0x2e],dl
  40cdd2:	push   ebx
  40cdd3:	call   DWORD PTR [ebp-0x38]
  40cdd6:	es clc 
  40cdd8:	fs retf 0x24d5
  40cddc:	cmp    ebp,ecx
  40cdde:	adc    ebx,DWORD PTR [eax]
  40cde0:	rcl    BYTE PTR [edx],0x4
  40cde3:	das    
  40cde4:	add    ecx,esp
  40cde6:	xor    dl,BYTE PTR [ebx+0x10]
  40cde9:	pushf  
  40cdea:	clc    
  40cdeb:	(bad)  
  40cdec:	mov    edx,0x13a0b690
  40cdf1:	sbb    BYTE PTR [ebx-0x6c],0x28
  40cdf5:	pop    ecx
  40cdf6:	and    cl,BYTE PTR [edx+0xe]
  40cdf9:	int    0x56
  40cdfb:	test   esp,ecx
  40cdfd:	push   esp
  40cdfe:	xor    eax,0x67954d4c
  40ce03:	mov    al,0xfa
  40ce05:	inc    ebx
  40ce06:	fbld   TBYTE PTR [edx+ebx*8]
  40ce09:	div    DWORD PTR ds:0x4909f5b7
  40ce0f:	scas   eax,DWORD PTR es:[edi]
  40ce10:	shl    BYTE PTR [edx],cl
  40ce12:	adc    bl,BYTE PTR [esi-0x4b]
  40ce15:	in     al,dx
  40ce16:	ds and eax,0xf6a62fea
  40ce1c:	xchg   ebp,eax
  40ce1d:	cdq    
  40ce1e:	inc    ecx
  40ce1f:	std    
  40ce20:	mov    cl,bl
  40ce22:	push   es
  40ce23:	test   eax,0x8b0a9661
  40ce28:	fstp   QWORD PTR [eax+0x77aea811]
  40ce2e:	pop    edi
  40ce2f:	adc    dl,cl
  40ce31:	ins    DWORD PTR es:[edi],dx
  40ce32:	adc    eax,0x242d5403
  40ce37:	add    eax,0x7f81359d
  40ce3c:	out    dx,al
  40ce3d:	pusha  
  40ce3e:	rcr    BYTE PTR [esi-0x24ecf8d8],1
  40ce44:	sti    
  40ce45:	shl    BYTE PTR [esi-0x4cb553b4],0xf2
  40ce4c:	retf   0xe732
  40ce4f:	ins    BYTE PTR es:[edi],dx
  40ce50:	xor    cl,0x9
  40ce53:	inc    edx
  40ce54:	sbb    DWORD PTR [edx],esp
  40ce56:	mov    ecx,ebp
  40ce58:	push   cs
  40ce59:	shl    ecx,0x4e
  40ce5c:	push   ecx
  40ce5d:	das    
  40ce5e:	pop    esp
  40ce5f:	jp     0x40ce13
  40ce61:	dec    ebx
  40ce62:	in     al,0xe5
  40ce64:	call   0x5d00a3d5
  40ce69:	jge    0x40ce89
  40ce6b:	or     al,0xa2
  40ce6d:	or     dh,BYTE PTR [ebx]
  40ce6f:	jnp    0x40ce9d
  40ce71:	ret    0x734f
  40ce74:	ficom  DWORD PTR [ebx+0x50950535]
  40ce7a:	or     bl,BYTE PTR [eax+0x11]
  40ce7d:	xor    DWORD PTR [ebp+0x1d5f4b66],0x81401c14
  40ce87:	stc    
  40ce88:	xchg   BYTE PTR [ebx-0x46],bl
  40ce8b:	or     al,0xb2
  40ce8d:	scas   eax,DWORD PTR es:[edi]
  40ce8e:	xor    BYTE PTR [edi+0xc],ah
  40ce91:	sub    ebx,DWORD PTR [ebp-0x15e9cc54]
  40ce97:	jmp    0x40ce5a
  40ce99:	sbb    BYTE PTR [esi-0x25],al
  40ce9c:	rcpps  xmm7,XMMWORD PTR [eax]
  40ce9f:	push   ecx
  40cea0:	jp     0x40ce41
  40cea2:	xchg   esp,eax
  40cea3:	inc    ecx
  40cea4:	bound  ecx,QWORD PTR [edx-0x1]
  40cea7:	push   esi
  40cea8:	jl     0x40ce5e
  40ceaa:	add    edi,DWORD PTR [esi-0x53]
  40cead:	sbb    BYTE PTR es:[ebx],ah
  40ceb0:	stos   DWORD PTR es:[edi],eax
  40ceb1:	sbb    eax,0x555cbf2b
  40ceb6:	mov    cl,0xb
  40ceb8:	jmp    0x40cea7
  40ceba:	xchg   ebx,eax
  40cebb:	rcr    bl,0xd
  40cebe:	icebp  
  40cebf:	sbb    DWORD PTR [ebx-0xf87e747],ecx
  40cec5:	cwde   
  40cec6:	sbb    DWORD PTR [edx],esp
  40cec8:	fwait
  40cec9:	in     al,dx
  40ceca:	xchg   ecx,eax
  40cecb:	mov    ds:0xdd230877,eax
  40ced0:	out    dx,eax
  40ced1:	enter  0xad5a,0x64
  40ced5:	dec    esp
  40ced6:	mov    ecx,0x1b4dcfaf
  40cedb:	cwde   
  40cedc:	mov    ds:0xd8302971,eax
  40cee1:	sbb    dh,BYTE PTR [ebx-0x3d]
  40cee4:	les    edx,FWORD PTR ds:0xd68f539f
  40ceea:	push   edi
  40ceeb:	nop
  40ceec:	leave  
  40ceed:	fidivr DWORD PTR ds:0xa27b1cc0
  40cef3:	pop    eax
  40cef4:	adc    ebx,DWORD PTR [edi-0x4c58dc9b]
  40cefa:	push   es
  40cefb:	mov    edi,0xffcc8ea3
  40cf00:	xchg   ecx,eax
  40cf01:	inc    edi
  40cf02:	push   es
  40cf03:	push   0xac571bf3
  40cf08:	aad    0x3f
  40cf0a:	repnz imul esi,DWORD PTR [esp+ebp*2-0x60080616],0x98103261
  40cf16:	mov    bl,ch
  40cf18:	test   DWORD PTR [edi],ebp
  40cf1a:	test   BYTE PTR [esi+0x69],dl
  40cf1d:	jge    0x40cecc
  40cf1f:	into   
  40cf20:	xor    DWORD PTR [ebx],edx
  40cf22:	(bad)  
  40cf23:	int3   
  40cf24:	es test eax,0x109c8251
  40cf2a:	mov    bl,0x32
  40cf2c:	dec    esp
  40cf2d:	ret    
  40cf2e:	popf   
  40cf2f:	arpl   WORD PTR [eax-0x3e77a8bc],bp
  40cf35:	stos   DWORD PTR es:[edi],eax
  40cf36:	and    al,BYTE PTR [edi]
  40cf38:	mov    al,0xa2
  40cf3a:	and    al,0xcd
  40cf3c:	(bad)  
  40cf3e:	xchg   ebx,eax
  40cf3f:	xchg   edi,eax
  40cf40:	sub    eax,0x1cf774c3
  40cf45:	and    dh,bl
  40cf47:	ss or  al,0x90
  40cf4a:	dec    eax
  40cf4b:	or     al,0xfe
  40cf4d:	cli    
  40cf4e:	jno    0x40cf83
  40cf50:	(bad)  
  40cf51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf52:	mov    bh,0x9d
  40cf54:	pop    ds
  40cf55:	adc    al,BYTE PTR [edx]
  40cf57:	xor    ebp,0x3
  40cf5a:	and    dh,BYTE PTR [ebx-0x4ed4a1de]
  40cf60:	xrelease xchg BYTE PTR [edx],dl
  40cf63:	add    eax,0x8697e549
  40cf68:	jbe    0x40cf79
  40cf6a:	stos   DWORD PTR es:[edi],eax
  40cf6b:	std    
  40cf6c:	sub    BYTE PTR [edx-0x112eb1fc],dh
  40cf72:	call   0x3592396a
  40cf77:	xchg   BYTE PTR [edx],bl
  40cf79:	or     eax,0xeb7e3c94
  40cf7e:	jbe    0x40cf62
  40cf80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf81:	pop    es
  40cf82:	adc    BYTE PTR [edx],ch
  40cf84:	add    eax,0x2cc59a8b
  40cf89:	loope  0x40cf54
  40cf8b:	adc    bh,BYTE PTR [ecx-0x51]
  40cf8e:	xor    DWORD PTR [ecx],eax
  40cf90:	sbb    eax,0x5391e195
  40cf95:	aaa    
  40cf96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf97:	and    esi,DWORD PTR [eax]
  40cf99:	pop    es
  40cf9a:	or     BYTE PTR ds:0xef24d35d,dh
  40cfa0:	mov    esp,0x5c037496
  40cfa5:	add    bh,BYTE PTR [edx]
  40cfa7:	lock pop esp
  40cfa9:	sbb    ecx,DWORD PTR [esi]
  40cfab:	jno    0x40d013
  40cfad:	fs or  bl,dh
  40cfb0:	jne    0x40cf3d
  40cfb2:	retf   0xf658
  40cfb5:	add    bl,ch
  40cfb7:	dec    ebp
  40cfb8:	(bad)  
  40cfb9:	into   
  40cfba:	cmp    ebp,DWORD PTR [edi-0x68]
  40cfbd:	gs retf 0x4fbf
  40cfc1:	push   ss
  40cfc2:	fxch   st(4)
  40cfc4:	adc    dl,cl
  40cfc6:	dec    esi
  40cfc7:	jl     0x40cfa4
  40cfc9:	mov    ch,al
  40cfcb:	inc    edi
  40cfcc:	call   0x153b956f
  40cfd1:	mov    edi,0x4d2f5b6d
  40cfd6:	clc    
  40cfd7:	stos   BYTE PTR es:[edi],al
  40cfd8:	push   edi
  40cfd9:	mov    bh,0x1a
  40cfdb:	pusha  
  40cfdc:	adc    DWORD PTR [ecx+0x10],ecx
  40cfdf:	add    bh,BYTE PTR [esi-0x546bb1fd]
  40cfe5:	call   0xe21e6214
  40cfea:	nop
  40cfeb:	fnstenv [eax]
  40cfed:	mov    dl,0x90
  40cfef:	clc    
  40cff0:	push   edi
  40cff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cff2:	cmp    al,0x97
  40cff4:	loope  0x40cfe5
  40cff6:	repz jp 0x40cffb
  40cff9:	mov    dl,0xa2
  40cffb:	jmp    0x40d045
  40cffd:	sub    DWORD PTR [edi+0x60b6efaf],edx
  40d003:	xchg   ecx,eax
  40d004:	sbb    bl,BYTE PTR [edi+0x10908c4e]
  40d00a:	and    cl,ah
  40d00c:	pop    ss
  40d00d:	pop    es
  40d00e:	pop    esi
  40d00f:	addr16 dec esi
  40d011:	push   edx
  40d012:	pushf  
  40d013:	cs adc al,0xa5
  40d016:	inc    ebx
  40d017:	xor    eax,0x99680893
  40d01c:	mov    bl,0xf2
  40d01e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d020:	jbe    0x40cfa3
  40d022:	mov    eax,ds:0x17ce0b9d
  40d027:	leave  
  40d028:	xchg   esi,eax
  40d029:	mov    DWORD PTR [edi-0x19],edx
  40d02c:	cmp    esi,DWORD PTR [ecx-0x3d1bfac8]
  40d032:	and    ah,dl
  40d034:	and    al,0xe
  40d036:	jge    0x40d092
  40d038:	cli    
  40d039:	xchg   BYTE PTR [edx+0x5],cl
  40d03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03d:	inc    edi
  40d03e:	sbb    ch,BYTE PTR [edi-0x80]
  40d041:	add    dh,ch
  40d043:	dec    esp
  40d044:	cmp    BYTE PTR [edx],bl
  40d046:	pop    ebx
  40d047:	rol    DWORD PTR [eax],1
  40d049:	cmp    BYTE PTR [eax-0xe30a160],bl
  40d04f:	daa    
  40d050:	test   al,0x85
  40d052:	(bad)  
  40d053:	jns    0x40d0ce
  40d055:	add    ebp,DWORD PTR [ebx+0x23]
  40d058:	cmp    DWORD PTR [edx-0x16],ebp
  40d05b:	std    
  40d05c:	cmp    eax,DWORD PTR ds:0xc9131e97
  40d062:	cs cmc 
  40d064:	bound  eax,QWORD PTR [ebp-0x63]
  40d067:	test   al,0x70
  40d069:	push   ecx
  40d06a:	retf   0xeae4
  40d06d:	lods   al,BYTE PTR ds:[esi]
  40d06e:	or     ah,ah
  40d070:	clc    
  40d071:	add    eax,0xe4fb1187
  40d076:	and    edx,DWORD PTR [ebx-0x7b1bb20f]
  40d07c:	or     esi,DWORD PTR [eax-0x3500310a]
  40d082:	fsub   QWORD PTR [edx+0x68]
  40d085:	fadd   DWORD PTR [edx+ebp*8+0x7a6fa3]
  40d08c:	cmp    al,BYTE PTR [edx-0x67]
  40d08f:	xor    dh,BYTE PTR [eax+ecx*4+0x4c]
  40d093:	inc    esp
  40d094:	fimul  DWORD PTR [eax+0x44ddd169]
  40d09a:	jnp    0x40d0b5
  40d09c:	stos   BYTE PTR es:[edi],al
  40d09d:	sbb    esp,DWORD PTR [ebx-0x68d06b79]
  40d0a3:	sbb    al,0x13
  40d0a5:	(bad)  
  40d0a6:	pop    ebp
  40d0a7:	aad    0xf7
  40d0a9:	aaa    
  40d0aa:	popa   
  40d0ab:	imul   ebx,DWORD PTR [esp+edx*1-0xc8aba1a],0xffffffa7
  40d0b3:	xchg   ebx,eax
  40d0b4:	mov    dh,0xb5
  40d0b6:	push   0x42
  40d0b8:	mov    eax,ds:0x4e54b735
  40d0be:	push   ds
  40d0bf:	jle    0x40d04d
  40d0c1:	int3   
  40d0c2:	fimul  DWORD PTR [edi]
  40d0c4:	sub    bh,BYTE PTR [edx]
  40d0c6:	sub    al,0x5f
  40d0c8:	fild   WORD PTR [esi+0x4e2ddb31]
  40d0ce:	jl     0x40d0f6
  40d0d0:	jne    0x40d107
  40d0d2:	icebp  
  40d0d3:	cmc    
  40d0d4:	pop    esp
  40d0d5:	or     eax,0x7d8e9bbc
  40d0da:	clc    
  40d0db:	aaa    
  40d0dc:	arpl   WORD PTR [edx],cx
  40d0de:	clc    
  40d0df:	push   ds
  40d0e0:	cmp    DWORD PTR [edx+ecx*1],edx
  40d0e3:	adc    edi,ecx
  40d0e5:	aam    0x7
  40d0e7:	sub    edi,esi
  40d0e9:	or     esi,DWORD PTR [ebp-0x27]
  40d0ec:	pop    eax
  40d0ed:	add    ah,ch
  40d0ef:	push   0xd4861b76
  40d0f4:	aaa    
  40d0f5:	mov    al,ds:0x84c59478
  40d0fa:	xchg   ebp,eax
  40d0fb:	ss cwde 
  40d0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0fe:	mov    ?,ecx
  40d100:	in     al,dx
  40d101:	retf   
  40d102:	adc    BYTE PTR [edi+0x6c09ed07],bl
  40d108:	stos   BYTE PTR es:[edi],al
  40d109:	mov    gs,WORD PTR [esi-0x76]
  40d10c:	in     eax,0x6
  40d10e:	push   0x4055b6a5
  40d113:	hlt    
  40d114:	sub    al,0x42
  40d116:	popa   
  40d117:	jb     0x40d13f
  40d119:	xchg   BYTE PTR [eax+0x4c],bl
  40d11c:	fidiv  WORD PTR [esi]
  40d11e:	pop    ds
  40d11f:	inc    esp
  40d120:	dec    BYTE PTR [ecx+0x17862b65]
  40d126:	sbb    ah,BYTE PTR [edi+0x5bebf809]
  40d12c:	test   BYTE PTR ds:0xeec4db7c,bh
  40d132:	mov    dl,0xcc
  40d134:	jg     0x40d134
  40d136:	retf   
  40d137:	nop
  40d138:	jle    0x40d15c
  40d13a:	push   ss
  40d13b:	mov    edx,0x43824fa9
  40d140:	shl    DWORD PTR [edx],0xa6
  40d143:	test   al,0x95
  40d145:	scas   al,BYTE PTR es:[edi]
  40d146:	nop
  40d147:	popf   
  40d148:	add    bl,BYTE PTR [ebx+0x1c]
  40d14b:	or     eax,0x7a08a6f9
  40d150:	not    DWORD PTR [ebx+0x2805ca15]
  40d156:	mov    eax,ds:0xde1b405f
  40d15b:	stos   BYTE PTR es:[edi],al
  40d15c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d15d:	mov    al,0x96
  40d15f:	adc    al,0xba
  40d161:	pop    fs
  40d163:	jne    0x40d1dc
  40d165:	fldenv [edx]
  40d167:	leave  
  40d168:	dec    ecx
  40d169:	jb     0x40d0ff
  40d16b:	outs   dx,BYTE PTR ds:[esi]
  40d16c:	lods   al,BYTE PTR ds:[esi]
  40d16d:	jo     0x40d1d0
  40d16f:	add    eax,0x3875d997
  40d174:	cmp    dl,BYTE PTR [edi+0xc8b8b3d]
  40d17a:	cmp    eax,0x5bbdb1ff
  40d17f:	loop   0x40d1d4
  40d181:	stos   DWORD PTR es:[edi],eax
  40d182:	pop    ss
  40d183:	fs jp  0x40d110
  40d186:	lea    esi,[ebp-0x3b]
  40d189:	jge    0x40d1fb
  40d18b:	jmp    0x40d1b3
  40d18d:	dec    esi
  40d18e:	sar    DWORD PTR [esi+0x4d],cl
  40d191:	call   0xbfd1393a
  40d196:	push   ds
  40d197:	mov    WORD PTR [eax-0x55],cs
  40d19a:	pushf  
  40d19b:	(bad)  
  40d19d:	jo     0x40d16c
  40d19f:	add    esp,DWORD PTR [ebp-0x26f40762]
  40d1a5:	stos   BYTE PTR es:[edi],al
  40d1a6:	mov    ecx,0xb0d64843
  40d1ab:	ret    
  40d1ac:	adc    dh,dh
  40d1ae:	fadd   QWORD PTR [eax-0x84ad67e]
  40d1b4:	mov    ch,0x92
  40d1b6:	jns    0x40d235
  40d1b8:	mov    bh,0xd2
  40d1ba:	mov    BYTE PTR [edx+0x6b4efd5],cl
  40d1c0:	daa    
  40d1c1:	int    0xab
  40d1c3:	outs   dx,DWORD PTR ds:[si]
  40d1c5:	mov    ch,0xd9
  40d1c7:	xchg   ebp,eax
  40d1c8:	xchg   ebx,eax
  40d1c9:	rcr    DWORD PTR [edx],cl
  40d1cb:	push   edi
  40d1cc:	mov    dh,0xcd
  40d1ce:	or     DWORD PTR ds:[ebx+0xd35d533],ebp
  40d1d5:	mov    dh,0x86
  40d1d7:	lods   al,BYTE PTR ds:[esi]
  40d1d8:	jbe    0x40d1f5
  40d1da:	push   edx
  40d1db:	cmp    edx,DWORD PTR [eax-0x6f732a53]
  40d1e1:	mov    ds,WORD PTR [esi]
  40d1e3:	push   cs
  40d1e4:	fdivr  DWORD PTR [ebp+0x10a1d199]
  40d1ea:	clc    
  40d1eb:	cmp    eax,0x91b4330a
  40d1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f1:	outs   dx,DWORD PTR ds:[esi]
  40d1f2:	pop    esp
  40d1f3:	repz or BYTE PTR [esi-0x7b3c0773],ah
  40d1fa:	jae    0x40d18d
  40d1fc:	xchg   ecx,eax
  40d1fd:	pop    ds
  40d1fe:	cld    
  40d1ff:	push   ecx
  40d200:	dec    edx
  40d201:	cs jle 0x40d262
  40d204:	test   al,0x18
  40d206:	add    BYTE PTR [edi+ebx*4-0x5d],al
  40d20a:	jmp    FWORD PTR ds:0xc50673ef
  40d210:	and    al,0xe9
  40d212:	aad    0x4a
  40d214:	retf   0x8727
  40d217:	leave  
  40d218:	jmp    0x359f4a09
  40d21d:	add    al,0x2b
  40d21f:	test   DWORD PTR [edx+0x174dd959],eax
  40d225:	xchg   edx,eax
  40d226:	push   ebp
  40d227:	mov    al,0x6a
  40d229:	dec    ebx
  40d22a:	imul   edi,DWORD PTR [ebp-0xc],0xffffffd7
  40d22e:	call   0xee9b2ada
  40d233:	outs   dx,DWORD PTR ds:[esi]
  40d234:	iret   
  40d235:	stos   BYTE PTR es:[edi],al
  40d236:	ret    0x8d13
  40d239:	imul   ecx,DWORD PTR [esi-0x76],0x4efa9876
  40d240:	sub    al,0xce
  40d242:	enter  0xd16a,0x5c
  40d246:	es push 0xffffffa6
  40d249:	or     bh,BYTE PTR [esi]
  40d24b:	mov    dl,0xa8
  40d24d:	jno    0x40d224
  40d24f:	div    DWORD PTR [ebp+0x11]
  40d252:	sub    ch,BYTE PTR [esi]
  40d254:	cmc    
  40d255:	adc    BYTE PTR [esi+0x3539aa],al
  40d25b:	push   edi
  40d25c:	(bad)  
  40d25d:	scas   eax,DWORD PTR es:[edi]
  40d25e:	or     BYTE PTR [ebp-0x40],cl
  40d261:	test   al,0xe0
  40d263:	pop    eax
  40d264:	inc    ebp
  40d265:	imul   eax,esi,0x40
  40d268:	inc    esi
  40d269:	in     eax,dx
  40d26a:	popf   
  40d26b:	push   ebp
  40d26c:	fs enter 0x2dc5,0xb4
  40d271:	mov    BYTE PTR [edx-0x288205f2],0x9b
  40d278:	sbb    DWORD PTR [esi+0xa6f173c],0xa846db0
  40d282:	fisttp WORD PTR [ebx-0x4af39d4e]
  40d288:	(bad)  
  40d28a:	or     BYTE PTR [esi+0x4a],dh
  40d28d:	inc    esp
  40d28e:	hlt    
  40d28f:	fbstp  TBYTE PTR [eax+edi*8]
  40d292:	lock mov ebx,0x29d10cd4
  40d298:	or     BYTE PTR [ebp+0x1f483b2f],bl
  40d29e:	pop    eax
  40d29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a0:	pushf  
  40d2a1:	mov    ecx,0x4b226d9f
  40d2a6:	jl     0x40d22a
  40d2a8:	repz out 0xa,eax
  40d2ab:	dec    ecx
  40d2ac:	imul   ebp,DWORD PTR [edx],0xec2ed0d8
  40d2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2b3:	cs sbb dh,bl
  40d2b6:	ficomp WORD PTR [ebx+0x3f940ac3]
  40d2bc:	or     DWORD PTR [ecx+0x4a],ebx
  40d2bf:	inc    esp
  40d2c0:	adc    BYTE PTR [edi],bl
  40d2c2:	jne    0x40d31a
  40d2c4:	push   ebp
  40d2c5:	inc    esi
  40d2c6:	jp     0x40d293
  40d2c8:	ret    
  40d2c9:	scas   al,BYTE PTR es:[edi]
  40d2ca:	in     al,dx
  40d2cb:	setg   bl
  40d2ce:	xor    edi,DWORD PTR ds:[ebx]
  40d2d1:	and    al,0x29
  40d2d3:	sbb    eax,0xfa635d0b
  40d2d8:	mov    al,0x81
  40d2da:	nop
  40d2db:	daa    
  40d2dc:	sahf   
  40d2dd:	push   ss
  40d2de:	inc    edi
  40d2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2e0:	(bad)  
  40d2e1:	test   DWORD PTR [edi+0x4d],0xe7c856c0
  40d2e8:	fcomp  QWORD PTR [ebx+0x323198cd]
  40d2ee:	shl    BYTE PTR [esi],cl
  40d2f0:	xor    DWORD PTR [edx],ebx
  40d2f2:	daa    
  40d2f3:	jmp    0xcffe:0x4a0e9cc7
  40d2fa:	cdq    
  40d2fb:	and    BYTE PTR [esi],bh
  40d2fd:	xchg   esi,eax
  40d2fe:	loopne 0x40d2b7
  40d300:	in     eax,0xe7
  40d302:	push   ds
  40d303:	xchg   esi,eax
  40d304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d305:	loope  0x40d381
  40d307:	dec    eax
  40d308:	loope  0x40d2ec
  40d30a:	cmc    
  40d30b:	jle    0x40d36b
  40d30d:	ins    BYTE PTR es:[edi],dx
  40d30e:	dec    ebx
  40d30f:	mov    ecx,DWORD PTR ds:0x6e3f79b5
  40d315:	ja     0x40d2c2
  40d317:	jno    0x40d2a5
  40d319:	adc    BYTE PTR [edx+eax*2-0x52e8675e],cl
  40d320:	fcom   QWORD PTR [eax]
  40d322:	xor    eax,0x15a52426
  40d327:	and    BYTE PTR [ebx-0x8f05e86],bl
  40d32d:	jmp    0x40d38a
  40d32f:	stc    
  40d330:	lds    esi,FWORD PTR [eax]
  40d332:	sbb    edx,esi
  40d334:	push   ss
  40d335:	out    dx,al
  40d336:	or     ebx,DWORD PTR [ebx-0x4]
  40d339:	test   DWORD PTR [ebp+ebp*8+0x30],ebx
  40d33d:	mov    eax,ds:0x4071ded8
  40d342:	test   esi,0xa8f4a9cb
  40d348:	imul   edi,DWORD PTR [ebp+edi*4+0x5c817434],0xffffff98
  40d350:	lahf   
  40d351:	xor    eax,0x31660e8c
  40d356:	mov    cl,BYTE PTR [eax]
  40d358:	inc    eax
  40d359:	neg    DWORD PTR [edx+0x35]
  40d35c:	push   esi
  40d35d:	mov    esp,0x44ec4f78
  40d362:	sbb    eax,0xeb4763f7
  40d367:	sbb    ebx,DWORD PTR [ecx-0x59]
  40d36a:	pop    ebx
  40d36b:	mov    ds:0x8908878f,al
  40d370:	(bad)  
  40d371:	inc    DWORD PTR [ebx-0x2bb05c51]
  40d377:	xor    al,0x5d
  40d379:	and    edi,edx
  40d37b:	in     eax,0xc7
  40d37d:	cmp    al,0x98
  40d37f:	push   es
  40d380:	pop    ds
  40d381:	push   ds
  40d382:	jb     0x40d3f0
  40d384:	cmp    esi,esp
  40d386:	pop    es
  40d387:	mov    ds:0xcf2dac1,al
  40d38c:	xchg   edx,eax
  40d38d:	in     al,0x97
  40d38f:	je     0x40d373
  40d391:	add    eax,0x84c936bc
  40d396:	push   edi
  40d397:	cmc    
  40d398:	repnz out 0x9e,al
  40d39b:	xor    edi,DWORD PTR [edi+0x3f]
  40d39e:	jl     0x40d40a
  40d3a0:	dec    edi
  40d3a1:	retf   0x5032
  40d3a4:	leave  
  40d3a5:	mov    edi,0x2fca8ee5
  40d3aa:	je     0x40d387
  40d3ac:	rcl    edx,1
  40d3ae:	int3   
  40d3af:	pop    ebp
  40d3b0:	retf   
  40d3b1:	xor    eax,0x5bff378f
  40d3b6:	jmp    0x40d345
  40d3b8:	das    
  40d3b9:	data16 rcr cl,cl
  40d3bc:	js     0x40d359
  40d3be:	jecxz  0x40d360
  40d3c0:	pop    ecx
  40d3c1:	pusha  
  40d3c2:	outs   dx,DWORD PTR ds:[esi]
  40d3c3:	icebp  
  40d3c4:	sbb    BYTE PTR [edi],ah
  40d3c6:	dec    edx
  40d3c7:	int3   
  40d3c8:	and    al,0xb0
  40d3ca:	xor    BYTE PTR [esi-0x6d],ch
  40d3cd:	iret   
  40d3ce:	ins    DWORD PTR es:[edi],dx
  40d3cf:	mov    cl,0xe3
  40d3d1:	jns    0x40d40e
  40d3d3:	push   ss
  40d3d4:	test   BYTE PTR [eax],dh
  40d3d6:	mov    ds:0x7446719d,eax
  40d3db:	mov    dh,0x56
  40d3dd:	out    0x94,al
  40d3df:	(bad)  
  40d3e0:	pop    ebx
  40d3e1:	cli    
  40d3e2:	dec    edi
  40d3e3:	retf   
  40d3e4:	add    al,BYTE PTR [esi-0x56b5a3]
  40d3ea:	pop    ss
  40d3eb:	in     eax,dx
  40d3ec:	(bad)  
  40d3ed:	mov    esp,0xa0a8178b
  40d3f2:	xchg   DWORD PTR [esp+edi*4],edx
  40d3f5:	loopne 0x40d43c
  40d3f7:	xor    BYTE PTR [ebp+0x11],0xa5
  40d3fb:	mov    ah,0xdd
  40d3fd:	sub    eax,0x6db1408
  40d402:	sub    DWORD PTR [eax+0x52139810],ecx
  40d408:	cli    
  40d409:	(bad)  
  40d40a:	xchg   ebp,eax
  40d40b:	aam    0x1a
  40d40d:	dec    ecx
  40d40e:	rcl    BYTE PTR [eax-0x76],0x78
  40d412:	ja     0x40d47f
  40d414:	je     0x40d418
  40d416:	das    
  40d417:	imul   edi,DWORD PTR [ecx],0xe4c4284
  40d41d:	mov    ebp,esp
  40d41f:	adc    edx,esp
  40d421:	sub    BYTE PTR [eax],al
  40d423:	or     DWORD PTR [edi],0xa70cf115
  40d429:	rol    BYTE PTR [edx-0xeab3f3b],1
  40d42f:	stos   BYTE PTR es:[edi],al
  40d430:	frstor [esi+ecx*1+0xea3cf5a]
  40d437:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d439:	rcl    DWORD PTR [edx+0x6743b8d8],1
  40d43f:	adc    al,0xec
  40d441:	inc    eax
  40d442:	arpl   WORD PTR [esi-0x69f441ea],ax
  40d448:	cmp    eax,0x93076f4c
  40d44d:	pop    ebp
  40d44e:	arpl   cx,bp
  40d450:	jecxz  0x40d4a0
  40d452:	and    cl,al
  40d454:	cdq    
  40d455:	sbb    eax,0x6180faca
  40d45a:	push   ds
  40d45b:	sti    
  40d45c:	ss xchg esp,eax
  40d45e:	lahf   
  40d45f:	int    0x65
  40d461:	vrsqrtss xmm0,xmm1,DWORD PTR [edi-0x5a79fde9]
  40d469:	mov    ecx,0xffdc5a6a
  40d46e:	jae    0x40d4b4
  40d470:	loopne 0x40d491
  40d472:	dec    eax
  40d473:	xchg   ebp,eax
  40d474:	and    BYTE PTR [edx-0x10],bl
  40d477:	repz or eax,0xc1dbc297
  40d47d:	push   ecx
  40d47e:	mov    al,ds:0x31037ff3
  40d483:	push   es
  40d484:	sbb    eax,0x4a7137d8
  40d489:	xlat   BYTE PTR ds:[ebx]
  40d48a:	inc    ebx
  40d48b:	fmul   DWORD PTR [eax]
  40d48d:	cmc    
  40d48e:	mov    DWORD PTR [esi-0x33de71dd],edx
  40d494:	inc    eax
  40d495:	push   eax
  40d496:	dec    ax
  40d498:	bound  ecx,QWORD PTR [edx-0x569413b0]
  40d49e:	mov    ebx,0x349ed536
  40d4a3:	pop    esi
  40d4a4:	cwde   
  40d4a5:	mov    ebx,0x10939f5a
  40d4aa:	or     al,0x14
  40d4ac:	pop    esp
  40d4ad:	add    ebp,edi
  40d4af:	mov    DWORD PTR [edx],edi
  40d4b1:	test   eax,0x533d91d
  40d4b6:	aam    0x4c
  40d4b8:	mov    eax,0xb32afb2
  40d4bd:	push   edi
  40d4be:	sbb    ah,ah
  40d4c0:	(bad)  
  40d4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4c2:	xchg   DWORD PTR [ebx],ebp
  40d4c4:	jl     0x40d4ce
  40d4c6:	retf   0x6c12
  40d4c9:	(bad)  
  40d4ca:	(bad)  [ebx]
  40d4cc:	xchg   edx,eax
  40d4cd:	mov    dh,0xb7
  40d4cf:	sti    
  40d4d0:	xchg   bh,ch
  40d4d2:	dec    edx
  40d4d3:	mov    ds:0x95a816b,eax
  40d4d8:	xchg   edi,eax
  40d4d9:	inc    eax
  40d4da:	jmp    0x233ca93d
  40d4df:	or     BYTE PTR [ebx-0x4f],dh
  40d4e2:	arpl   WORD PTR [ebp+0x4f],bx
  40d4e5:	shr    DWORD PTR [eax+edx*1-0x40],cl
  40d4e9:	call   0xa194da14
  40d4ee:	and    eax,0x3b1eba65
  40d4f3:	lock inc ecx
  40d4f5:	xchg   ebx,eax
  40d4f6:	imul   esi,DWORD PTR [ebp+0x4b],0xfcce83cb
  40d4fd:	mov    ebp,0x91204a1
  40d502:	idiv   BYTE PTR [ecx+0x79693449]
  40d508:	iret   
  40d509:	add    BYTE PTR [edx+0x35],0xf8
  40d50d:	std    
  40d50e:	xchg   ecx,eax
  40d50f:	or     edi,DWORD PTR [esp+edx*2+0x51dc3c16]
  40d516:	aam    0x84
  40d518:	imul   esi,DWORD PTR [esi],0x49
  40d51b:	xchg   ebx,eax
  40d51c:	pop    edi
  40d51d:	cdq    
  40d51e:	adc    DWORD PTR [ecx],esp
  40d520:	jns    0x40d575
  40d522:	std    
  40d523:	sub    ebx,DWORD PTR [ebx-0x11]
  40d526:	cwde   
  40d527:	pop    esp
  40d528:	outs   dx,DWORD PTR ds:[esi]
  40d529:	add    bh,BYTE PTR [esi+0xe5fa4c8]
  40d52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d530:	lods   al,BYTE PTR ds:[esi]
  40d531:	jno    0x40d536
  40d533:	loope  0x40d537
  40d535:	inc    edx
  40d536:	fs repz xor al,0x7c
  40d53a:	or     al,BYTE PTR [edx+0x4d]
  40d53d:	adc    al,0xc8
  40d53f:	stos   BYTE PTR es:[edi],al
  40d540:	or     DWORD PTR [eax],edi
  40d542:	inc    ebx
  40d543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d544:	sbb    al,0x18
  40d546:	ret    0x6163
  40d549:	pop    esi
  40d54a:	icebp  
  40d54b:	cmp    al,0x61
  40d54d:	pop    ss
  40d54e:	add    DWORD PTR [ecx+0x2c5f2d2b],0x249b4324
  40d558:	mov    dh,0x1d
  40d55a:	sub    ah,BYTE PTR [edi]
  40d55c:	jbe    0x40d502
  40d55e:	fnstcw WORD PTR [ebp-0x79]
  40d561:	mov    ebx,0x714949a0
  40d567:	jg     0x40d4f0
  40d569:	ins    DWORD PTR es:[edi],dx
  40d56a:	push   edx
  40d56b:	inc    esp
  40d56c:	js     0x40d500
  40d56e:	outs   dx,BYTE PTR ds:[esi]
  40d56f:	stos   BYTE PTR es:[edi],al
  40d570:	js     0x40d5ac
  40d572:	push   ebp
  40d573:	and    eax,0x5d3f52a
  40d578:	aam    0x88
  40d57a:	neg    DWORD PTR [esp+ecx*8-0x5]
  40d57e:	mov    eax,ds:0xcede5dab
  40d583:	dec    edx
  40d584:	mov    ebx,0x1e6d3b3a
  40d589:	out    0xd9,al
  40d58b:	cmp    ah,BYTE PTR ds:0x791c09f6
  40d591:	sub    eax,0xf0bf7f02
  40d596:	sbb    eax,0x3993249c
  40d59b:	pop    esi
  40d59c:	into   
  40d59d:	pop    eax
  40d59e:	in     al,dx
  40d59f:	xor    ebx,ecx
  40d5a1:	cmp    eax,DWORD PTR [esp+edx*4+0x21ea4a8f]
  40d5a8:	mov    cl,0xca
  40d5aa:	dec    esi
  40d5ab:	fisttp WORD PTR [ebp+edx*1-0x66]
  40d5af:	lock scas eax,DWORD PTR es:[edi]
  40d5b1:	popa   
  40d5b2:	and    BYTE PTR [ecx+0x16b5e922],ch
  40d5b8:	pop    ebp
  40d5b9:	out    dx,al
  40d5ba:	dec    ebx
  40d5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5bc:	shr    DWORD PTR [ecx+0x42],cl
  40d5bf:	inc    ebp
  40d5c0:	xchg   ebp,eax
  40d5c1:	add    DWORD PTR [esp+edx*8],ecx
  40d5c4:	es add eax,0x6b2e8070
  40d5ca:	pop    ebp
  40d5cb:	movhps QWORD PTR [edi+ebp*8+0x451bade3],xmm0
  40d5d3:	mov    esi,0xd2727b47
  40d5d8:	lods   al,BYTE PTR ds:[esi]
  40d5d9:	push   edi
  40d5da:	xchg   edx,eax
  40d5db:	fisub  DWORD PTR [ebx-0x448dca2d]
  40d5e1:	cmp    al,0x1
  40d5e3:	retf   0x194a
  40d5e6:	repz enter 0xffd5,0xdb
  40d5eb:	add    al,0x95
  40d5ed:	mov    bh,0x71
  40d5ef:	jae    0x40d5c7
  40d5f1:	xor    ecx,DWORD PTR [ebp-0x75]
  40d5f4:	fmul   DWORD PTR [ebp-0x67207cc6]
  40d5fa:	inc    edi
  40d5fb:	das    
  40d5fc:	and    eax,0x6b26c7f
  40d601:	rcl    DWORD PTR [esi],cl
  40d603:	fcmovnb st,st(4)
  40d605:	popa   
  40d606:	das    
  40d607:	pop    edx
  40d608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d609:	data16 sub BYTE PTR [ebp-0xecb239],al
  40d610:	mov    ebx,DWORD PTR [edx+0x5d]
  40d613:	pop    ebx
  40d614:	pop    ebx
  40d615:	or     al,bl
  40d617:	je     0x40d651
  40d619:	mov    cl,0x68
  40d61b:	mov    esi,0x19ef12ed
  40d620:	das    
  40d621:	adc    ebp,edx
  40d623:	mov    ah,bh
  40d625:	sbb    ch,BYTE PTR [edx-0x4dcead4c]
  40d62b:	popa   
  40d62c:	fsub   DWORD PTR [eax-0x417d0f56]
  40d632:	aam    0x92
  40d634:	push   cs
  40d635:	jge    0x40d5c8
  40d637:	xchg   ebp,eax
  40d638:	scas   eax,DWORD PTR es:[edi]
  40d639:	loope  0x40d612
  40d63b:	mov    edi,0x17a88965
  40d640:	mov    al,ds:0x5b277bfa
  40d645:	add    BYTE PTR [eax-0x53],bl
  40d648:	and    eax,0xd9ba1412
  40d64d:	dec    esi
  40d64e:	bound  edi,QWORD PTR [ebx-0x70730e6]
  40d654:	dec    ebx
  40d655:	xchg   BYTE PTR [eax],bl
  40d657:	icebp  
  40d658:	xlat   BYTE PTR ds:[ebx]
  40d659:	jns    0x40d5e0
  40d65b:	not    BYTE PTR [ecx+0x24]
  40d65e:	(bad)  
  40d65f:	xor    eax,0x2fb6b372
  40d664:	lds    edi,FWORD PTR [edi*2-0x42f5c70b]
  40d66b:	pusha  
  40d66c:	sti    
  40d66d:	int3   
  40d66e:	push   edx
  40d66f:	(bad)  
  40d671:	push   esi
  40d672:	fs out 0xb3,al
  40d675:	adc    eax,eax
  40d677:	mov    esi,DWORD PTR [ebp+edi*1+0x43]
  40d67b:	stos   BYTE PTR es:[edi],al
  40d67c:	ins    DWORD PTR es:[edi],dx
  40d67d:	adc    al,0xf7
  40d67f:	enter  0x4df5,0x7b
  40d683:	rcr    BYTE PTR [eax+0x57],cl
  40d686:	pop    ecx
  40d687:	xor    dh,cl
  40d689:	das    
  40d68a:	jae    0x40d6e4
  40d68c:	daa    
  40d68d:	add    al,0x8b
  40d68f:	mov    cs,eax
  40d691:	scas   al,BYTE PTR es:[edi]
  40d692:	mov    eax,ds:0xcd39fe6e
  40d697:	test   eax,0x71f380d5
  40d69c:	scas   al,BYTE PTR es:[edi]
  40d69d:	push   esi
  40d69e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d69f:	mov    bl,0x6c
  40d6a1:	jg     0x40d6a3
  40d6a3:	add    al,ah
  40d6a5:	test   ebp,esp
  40d6a7:	jl     0x40d700
  40d6a9:	or     dl,BYTE PTR [ecx*8+0x66ececfe]
  40d6b0:	or     BYTE PTR [esi+0x58],0xe2
  40d6b4:	inc    eax
  40d6b5:	cmp    cl,BYTE PTR [eax+0x1b207cf8]
  40d6bb:	mov    DWORD PTR [esi+0x8978ff5],0x1f7aeff7
  40d6c5:	or     dh,ah
  40d6c7:	adc    ebp,DWORD PTR [ecx-0x5f3e49a2]
  40d6cd:	iret   
  40d6ce:	sar    DWORD PTR [edx],cl
  40d6d0:	inc    ecx
  40d6d1:	and    ebp,esi
  40d6d3:	retf   
  40d6d4:	dec    edi
  40d6d5:	loop   0x40d664
  40d6d7:	inc    edx
  40d6d8:	shl    DWORD PTR [bx+di],0x7a
  40d6dc:	std    
  40d6dd:	dec    esi
  40d6de:	and    ebx,0xc96ff3e1
  40d6e4:	sbb    BYTE PTR [edx+0x70],al
  40d6e7:	jg     0x40d755
  40d6e9:	jb     0x40d713
  40d6eb:	push   0x65653a60
  40d6f0:	sar    bh,cl
  40d6f2:	rol    ah,1
  40d6f4:	jmp    0x40d68f
  40d6f6:	aas    
  40d6f7:	lea    edi,[ebx-0x488054e8]
  40d6fd:	add    al,0x8c
  40d6ff:	mov    dh,0xc6
  40d701:	(bad)  
  40d702:	scas   eax,DWORD PTR es:[edi]
  40d703:	cwde   
  40d704:	xchg   ebp,eax
  40d705:	call   0x813f:0x59a1c8ec
  40d70c:	iret   
  40d70d:	or     DWORD PTR [edi-0x42],0x9d70df68
  40d714:	imul   eax,DWORD PTR [ecx-0x2b990fe3],0x47
  40d71b:	out    0x4f,al
  40d71d:	sub    al,BYTE PTR [ebp+0x2d]
  40d720:	xor    BYTE PTR [edi],ch
  40d722:	pop    ecx
  40d723:	or     ch,BYTE PTR [ebp-0x11]
  40d726:	sub    eax,0x8648a7f8
  40d72b:	neg    edx
  40d72d:	adc    cl,0xb2
  40d730:	xor    edi,DWORD PTR [eax]
  40d732:	push   cs
  40d733:	aas    
  40d734:	adc    BYTE PTR [ebx+0x36],bh
  40d737:	or     edi,esp
  40d739:	in     eax,0xbd
  40d73b:	shr    BYTE PTR [edx-0x377576ee],0x5
  40d742:	shl    BYTE PTR [ecx+0x51],0xb1
  40d746:	pop    esp
  40d747:	dec    ecx
  40d748:	inc    ebp
  40d749:	into   
  40d74a:	aaa    
  40d74b:	cmc    
  40d74c:	xchg   edi,eax
  40d74d:	xchg   ecx,eax
  40d74e:	jl     0x40d6e4
  40d750:	xchg   ecx,eax
  40d751:	and    al,0x9f
  40d753:	dec    esp
  40d754:	sbb    eax,0x49289089
  40d759:	inc    esp
  40d75a:	mov    ah,0x1a
  40d75c:	xor    esp,ebp
  40d75e:	dec    ebp
  40d75f:	aad    0xf
  40d761:	add    al,0x73
  40d763:	xchg   edi,eax
  40d764:	sbb    DWORD PTR [esi+0x6e],edx
  40d767:	enter  0x25e0,0xaa
  40d76b:	push   ecx
  40d76d:	mov    DWORD PTR [eax+0x43],edx
  40d770:	jmp    0xd11:0x15f2e418
  40d777:	mov    dh,BYTE PTR [ebp+edx*8-0x72]
  40d77b:	push   ds
  40d77c:	push   0xaf5fe06f
  40d781:	imul   edx,DWORD PTR [edi+edi*4+0x6fb578e7],0x4f
  40d789:	dec    ecx
  40d78a:	lods   eax,DWORD PTR ds:[esi]
  40d78b:	(bad)  
  40d78c:	call   DWORD PTR [eax-0x20]
  40d78f:	out    dx,al
  40d790:	dec    edx
  40d791:	in     eax,dx
  40d792:	mov    al,0x4
  40d794:	es inc sp
  40d797:	mov    WORD PTR [ebx],gs
  40d799:	xchg   edi,eax
  40d79a:	in     al,0x4d
  40d79c:	push   ebx
  40d79d:	std    
  40d79e:	mov    bl,0x4f
  40d7a0:	add    BYTE PTR [edx+esi*8-0x5070e01f],dl
  40d7a7:	in     eax,dx
  40d7a8:	xor    ebx,DWORD PTR [ecx+0x7f]
  40d7ab:	ins    DWORD PTR es:[edi],dx
  40d7ac:	cmc    
  40d7ad:	not    DWORD PTR [edx-0x3]
  40d7b0:	jnp    0x40d7cf
  40d7b2:	enter  0x5c4e,0xe7
  40d7b6:	nop
  40d7b7:	sub    al,0xc1
  40d7b9:	inc    esp
  40d7ba:	cdq    
  40d7bb:	int3   
  40d7bc:	out    0xd9,eax
  40d7be:	stc    
  40d7bf:	add    al,0xf0
  40d7c1:	jecxz  0x40d825
  40d7c3:	ins    DWORD PTR es:[edi],dx
  40d7c4:	pusha  
  40d7c5:	inc    esi
  40d7c6:	xchg   ebp,eax
  40d7c7:	stc    
  40d7c8:	mov    eax,0xedcdffcc
  40d7cd:	pop    ss
  40d7ce:	dec    ebp
  40d7cf:	mov    ah,0xc2
  40d7d1:	add    dh,BYTE PTR [esp+edx*8]
  40d7d4:	push   esi
  40d7d5:	add    cl,BYTE PTR [ebp+0x4200e0c5]
  40d7db:	data16 (bad) 
  40d7dd:	aad    0x2d
  40d7df:	scas   al,BYTE PTR es:[edi]
  40d7e0:	(bad)  [ebx-0x51]
  40d7e3:	test   BYTE PTR [ebx+0x2a],ch
  40d7e6:	ins    BYTE PTR es:[edi],dx
  40d7e7:	add    al,0xf5
  40d7e9:	pmulhw mm6,QWORD PTR [ebx]
  40d7ec:	loope  0x40d7da
  40d7ee:	bound  ebp,QWORD PTR [edi+0x2f]
  40d7f1:	out    dx,al
  40d7f2:	ror    BYTE PTR [eax],0x67
  40d7f5:	out    0xe9,eax
  40d7f7:	cwde   
  40d7f8:	add    DWORD PTR [edx+0x1f4b549b],esi
  40d7fe:	xor    eax,0x8a640d87
  40d803:	cdq    
  40d804:	push   edi
  40d805:	or     ah,BYTE PTR [edx]
  40d807:	xor    eax,0xc9be7508
  40d80c:	mov    BYTE PTR [ecx+edx*1+0x453b7a7],bl
  40d813:	fdiv   QWORD PTR [edi]
  40d815:	aas    
  40d816:	loop   0x40d833
  40d818:	push   cs
  40d819:	call   0x36cb2b47
  40d81e:	imul   ebx,ebp,0xff26c70a
  40d824:	jnp    0x40d7d0
  40d826:	pop    ebx
  40d827:	fmul   QWORD PTR [ecx+0x6a]
  40d82a:	les    edi,FWORD PTR [edi-0x5488431f]
  40d830:	sub    ebx,DWORD PTR [esi-0x9]
  40d833:	inc    esi
  40d834:	jp     0x40d82c
  40d836:	mov    ch,0xbe
  40d838:	clc    
  40d839:	gs mov edx,0x2e81506b
  40d83f:	push   ss
  40d840:	call   FWORD PTR [eax+0x2e9b7f79]
  40d846:	push   edx
  40d847:	hlt    
  40d848:	push   esi
  40d849:	dec    esi
  40d84a:	mov    DWORD PTR [edx+0x41],ebx
  40d84d:	jb     0x40d831
  40d84f:	sti    
  40d850:	inc    ecx
  40d851:	adc    DWORD PTR [ebx+0x596fc8a7],ebx
  40d857:	cld    
  40d858:	cld    
  40d859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d85a:	out    dx,eax
  40d85b:	and    al,0x11
  40d85d:	mov    eax,0x90e10ca9
  40d862:	sub    al,0x43
  40d864:	lock mov ah,0x77
  40d867:	fisttp DWORD PTR [eax]
  40d869:	das    
  40d86a:	xchg   edx,eax
  40d86b:	cli    
  40d86c:	dec    eax
  40d86d:	push   cs
  40d86e:	xchg   esp,edi
  40d870:	mov    al,ds:0xfa907b75
  40d875:	popa   
  40d876:	cmc    
  40d877:	popa   
  40d878:	pop    ebp
  40d879:	dec    ebx
  40d87a:	or     esi,DWORD PTR [esi+0x6]
  40d87d:	call   0x305c042a
  40d882:	scas   al,BYTE PTR es:[edi]
  40d883:	pop    es
  40d884:	push   ds
  40d885:	aaa    
  40d886:	outs   dx,DWORD PTR ds:[esi]
  40d887:	pop    ebp
  40d888:	mov    ebp,0x414e69b8
  40d88d:	inc    esi
  40d88e:	shl    BYTE PTR [ebx],0xc0
  40d891:	dec    edi
  40d892:	jg     0x40d87d
  40d894:	sbb    DWORD PTR [edx-0x2cc6b287],esi
  40d89a:	cmp    dl,al
  40d89c:	and    ebp,DWORD PTR [ecx]
  40d89e:	push   ss
  40d89f:	push   ss
  40d8a0:	mov    ds:0xea778d3,al
  40d8a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8a6:	sub    eax,0x8b4a6d97
  40d8ab:	dec    eax
  40d8ac:	pop    ds
  40d8ad:	(bad)  
  40d8ae:	mov    ecx,0xd70ce2fd
  40d8b3:	cmp    BYTE PTR cs:0x93439f50,bl
  40d8ba:	cwde   
  40d8bb:	and    eax,0x4c63afd3
  40d8c0:	js     0x40d89c
  40d8c2:	fisubr DWORD PTR [edi+ebx*2]
  40d8c5:	add    al,0x8f
  40d8c7:	cmp    DWORD PTR [edi],edi
  40d8c9:	mov    ds:0xe8a0283d,eax
  40d8ce:	and    DWORD PTR [edx+0x187338b7],ebp
  40d8d4:	push   edx
  40d8d5:	into   
  40d8d6:	dec    esi
  40d8d7:	mov    ch,0x5e
  40d8d9:	repz repnz lea ecx,[ecx-0x64]
  40d8de:	jmp    0xba6e7292
  40d8e3:	push   esp
  40d8e4:	dec    edi
  40d8e5:	add    ah,BYTE PTR [eax-0x279ea63d]
  40d8eb:	scas   eax,DWORD PTR es:[edi]
  40d8ec:	retf   
  40d8ed:	sahf   
  40d8ee:	jno    0x40d8cb
  40d8f0:	test   al,0x52
  40d8f2:	retf   0xe567
  40d8f5:	cmp    BYTE PTR [ebx+0x13],bl
  40d8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f9:	imul   esi,ebp,0x81a71db9
  40d8ff:	pusha  
  40d900:	rol    DWORD PTR [edi],cl
  40d902:	mov    ch,BYTE PTR [edx-0x3c]
  40d905:	test   BYTE PTR [edi+eax*8+0x60],0x47
  40d90a:	fmulp  st(0),st
  40d90c:	dec    esp
  40d90d:	jecxz  0x40d973
  40d90f:	jnp    0x40d978
  40d911:	ins    DWORD PTR es:[edi],dx
  40d912:	add    BYTE PTR [esi-0x78],ah
  40d915:	loope  0x40d8c7
  40d917:	cld    
  40d918:	sub    DWORD PTR [edi+0x61d79b0d],ebp
  40d91e:	out    dx,eax
  40d91f:	mov    esi,0xef7b94b0
  40d924:	shl    BYTE PTR [ebx-0x1e2eac66],cl
  40d92a:	cmp    DWORD PTR [edx+0x4b6bbcb5],esi
  40d930:	jmp    0xfabb:0xdcac8074
  40d937:	mov    bl,BYTE PTR [esi]
  40d939:	push   ebp
  40d93a:	mov    BYTE PTR [ecx+0x4b],dl
  40d93d:	mul    BYTE PTR [edx-0x7]
  40d940:	pop    esp
  40d941:	mov    ?,WORD PTR [ebp+0x66]
  40d944:	push   0x50
  40d946:	aad    0xdf
  40d948:	out    0x22,al
  40d94a:	xor    bh,BYTE PTR [edx]
  40d94c:	sub    BYTE PTR [ebx-0x12],bl
  40d94f:	aas    
  40d950:	popf   
  40d951:	inc    ebx
  40d952:	gs adc dl,0x25
  40d956:	mov    eax,0xd9d44985
  40d95b:	dec    edx
  40d95c:	rol    DWORD PTR [edx],1
  40d95e:	cli    
  40d95f:	mov    dh,0x94
  40d961:	jns    0x40d8ff
  40d963:	repnz int 0xed
  40d966:	retf   0x3c9d
  40d969:	pop    ebx
  40d96a:	xchg   BYTE PTR [edi],cl
  40d96c:	out    dx,eax
  40d96d:	mov    BYTE PTR [ebx],cl
  40d96f:	out    dx,al
  40d970:	jb     0x40d93a
  40d972:	loope  0x40d91b
  40d974:	fbld   TBYTE PTR [ecx]
  40d976:	mov    bl,0x58
  40d978:	shl    edx,cl
  40d97a:	sub    al,0x44
  40d97c:	sbb    BYTE PTR [ebx+0x43e0c61f],dl
  40d982:	pop    ecx
  40d983:	test   eax,0x233d45e1
  40d988:	add    eax,esi
  40d98a:	push   edi
  40d98b:	mov    dl,0x65
  40d98d:	adc    dl,BYTE PTR [esi]
  40d98f:	rcl    DWORD PTR [esi+0x508f3591],0xcc
  40d996:	xchg   DWORD PTR [ecx+0x42],ecx
  40d999:	mov    DWORD PTR [esi+esi*8],esi
  40d99c:	jmp    DWORD PTR [esi]
  40d99e:	out    dx,al
  40d99f:	jge    0x40da18
  40d9a1:	inc    esp
  40d9a2:	cmp    eax,0x1b87a16f
  40d9a7:	cmp    esp,ebp
  40d9a9:	inc    edi
  40d9aa:	xlat   BYTE PTR ds:[ebx]
  40d9ab:	jg     0x40d97b
  40d9ad:	sub    BYTE PTR [ebp-0x1fe8e08c],0xa2
  40d9b4:	pop    eax
  40d9b5:	push   cs
  40d9b6:	push   cs
  40d9b7:	mov    esp,DWORD PTR ds:0x21ce7c4b
  40d9bd:	cdq    
  40d9be:	inc    eax
  40d9bf:	jecxz  0x40da0d
  40d9c1:	pop    esi
  40d9c2:	mov    ebp,0x9e344b5e
  40d9c7:	sub    BYTE PTR [edi],dh
  40d9c9:	aaa    
  40d9ca:	fs ret 0xf857
  40d9ce:	pop    ecx
  40d9cf:	or     BYTE PTR [ecx-0x42c5ef33],dh
  40d9d5:	mov    ebp,0xeab54e83
  40d9da:	retf   0x3d20
  40d9dd:	push   eax
  40d9de:	jb     0x40da0b
  40d9e0:	inc    ecx
  40d9e1:	inc    ebx
  40d9e2:	cmp    DWORD PTR [ecx],ecx
  40d9e4:	mov    edx,edi
  40d9e6:	sub    BYTE PTR [edi+0x4902e09a],0xb4
  40d9ed:	fdivr  QWORD PTR ds:0xc1f0b76b
  40d9f3:	clc    
  40d9f4:	jnp    0x40da1d
  40d9f6:	fnstenv [edi]
  40d9f8:	mov    edx,0xc193afaa
  40d9fd:	mov    eax,ds:0x114f2c58
  40da02:	xchg   esp,eax
  40da03:	push   ecx
  40da04:	sbb    ebx,esi
  40da06:	jnp    0x40da52
  40da08:	int    0x6e
  40da0a:	mov    esp,0x8e32fc6a
  40da0f:	ret    0x7ec6
  40da12:	xchg   bl,dh
  40da14:	repnz mov ecx,0x870982f3
  40da1a:	push   edx
  40da1b:	mov    edx,0x6251b9e5
  40da20:	in     eax,0x24
  40da22:	jo     0x40da3f
  40da24:	push   esi
  40da25:	and    eax,0x85b018ef
  40da2a:	jne    0x40daa9
  40da2c:	sub    eax,0xcbaebf61
  40da31:	sub    eax,0xa13fd4bb
  40da36:	inc    eax
  40da37:	push   ebp
  40da38:	push   ecx
  40da39:	pminsw mm1,QWORD PTR [ecx]
  40da3c:	jne    0x40da18
  40da3e:	std    
  40da3f:	in     eax,0xbb
  40da41:	pop    eax
  40da42:	and    BYTE PTR [edx],ah
  40da44:	add    cl,BYTE PTR [eax+0x16264ae9]
  40da4a:	es xchg edi,eax
  40da4c:	and    eax,0x8825a84e
  40da51:	mov    cl,0x0
  40da53:	jno    0x40da9c
  40da55:	add    eax,0x9bafc382
  40da5a:	(bad)  
  40da5b:	sbb    dh,ch
  40da5d:	aaa    
  40da5e:	add    eax,0xa29dbbfc
  40da63:	stc    
  40da64:	ja     0x40dacd
  40da66:	and    DWORD PTR [edi+eiz*1],edx
  40da69:	das    
  40da6a:	jmp    0xfbdd:0x1a921c97
  40da71:	xchg   ecx,eax
  40da72:	push   ss
  40da73:	push   ebp
  40da74:	xor    al,0xe7
  40da76:	repnz xor dl,dh
  40da79:	push   ds
  40da7a:	cli    
  40da7b:	sbb    dl,BYTE PTR [eax+edi*8]
  40da7e:	adc    ebx,DWORD PTR [ecx]
  40da80:	lahf   
  40da81:	sbb    BYTE PTR [ecx+0x60],bh
  40da84:	mov    esp,0x20866264
  40da89:	popa   
  40da8a:	and    BYTE PTR [esi-0x9],bh
  40da8d:	aaa    
  40da8e:	adc    al,ah
  40da90:	xchg   ebx,eax
  40da91:	stos   DWORD PTR es:[edi],eax
  40da92:	retf   0xcb87
  40da95:	sub    al,0x4c
  40da97:	sahf   
  40da98:	int3   
  40da99:	je     0x40da3e
  40da9b:	add    al,al
  40da9d:	fwait
  40da9e:	adc    al,0x2a
  40daa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa1:	dec    esi
  40daa2:	dec    ecx
  40daa3:	mov    WORD PTR ds:0x99d191e2,gs
  40daa9:	cmp    dl,BYTE PTR [ebx]
  40daab:	inc    edi
  40daac:	test   ebp,ecx
  40daae:	out    dx,eax
  40daaf:	mov    dh,0x57
  40dab1:	adc    ebp,ebx
  40dab3:	add    al,0xf9
  40dab5:	or     DWORD PTR [ebx],ebp
  40dab7:	dec    ebx
  40dab8:	or     eax,0x24eaf1a2
  40dabd:	sar    ebx,cl
  40dabf:	jbe    0x40dabe
  40dac1:	mov    ebx,DWORD PTR [ebx]
  40dac3:	mov    al,ds:0xf25807b3
  40dac8:	push   es
  40dac9:	adc    ch,BYTE PTR [edx-0x2d]
  40dacc:	xlat   BYTE PTR ds:[ebx]
  40dacd:	push   eax
  40dace:	test   BYTE PTR [edi+0x7bd0d8],bh
  40dad4:	sbb    edi,ecx
  40dad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad7:	mul    esp
  40dad9:	(bad)
  40dadc:	not    BYTE PTR [ebx]
  40dade:	outs   dx,DWORD PTR ds:[esi]
  40dadf:	xchg   edi,eax
  40dae0:	xchg   ecx,eax
  40dae1:	adc    bl,al
  40dae3:	(bad)  
  40dae5:	push   ebx
  40dae6:	adc    al,0x22
  40dae8:	add    ch,cl
  40daea:	mov    eax,ds:0xfce50168
  40daef:	sti    
  40daf0:	inc    edx
  40daf1:	sub    eax,0xa92d3ed0
  40daf6:	push   esi
  40daf7:	xor    al,0x3
  40daf9:	test   DWORD PTR [esi-0x2921a8e],0xcb6bd984
  40db03:	daa    
  40db04:	xor    dh,0xf
  40db07:	mov    ecx,0x57ede239
  40db0c:	gs push 0xffffffa0
  40db0f:	retf   0x9c1c
  40db12:	jb     0x40db8e
  40db14:	adc    esi,DWORD PTR [eax+0x360f8d7c]
  40db1a:	add    ecx,ecx
  40db1c:	and    cl,BYTE PTR [edx-0x4bb3e512]
  40db22:	mov    ecx,0x7bab6159
  40db27:	or     edi,eax
  40db29:	xor    esp,edx
  40db2b:	inc    eax
  40db2c:	xor    BYTE PTR [bx],0xfd
  40db30:	and    eax,0x6a15998
  40db35:	sub    BYTE PTR [eax+0x30],cl
  40db38:	xlat   BYTE PTR ds:[ebx]
  40db39:	jle    0x40dabf
  40db3b:	scas   eax,DWORD PTR es:[edi]
  40db3c:	(bad)  
  40db3d:	icebp  
  40db3e:	lahf   
  40db3f:	mov    ebp,DWORD PTR [eax+0x2f9e9494]
  40db45:	jle    0x40daf2
  40db47:	cmp    DWORD PTR [edx+0x7bf7db6c],esp
  40db4d:	sub    al,BYTE PTR [edx]
  40db4f:	mul    BYTE PTR [edx-0x4d]
  40db52:	cmp    DWORD PTR [edx],eax
  40db54:	int3   
  40db55:	sub    eax,0x95324396
  40db5a:	sahf   
  40db5b:	and    ecx,esp
  40db5d:	mov    cl,0x6a
  40db5f:	push   edi
  40db60:	xchg   esi,eax
  40db61:	xchg   esp,eax
  40db62:	pop    ecx
  40db63:	pop    ds
  40db64:	xchg   esi,eax
  40db65:	mov    al,ds:0x2839bc54
  40db6a:	add    al,0x59
  40db6c:	(bad)  
  40db6d:	pop    edx
  40db6e:	nop
  40db6f:	sbb    ch,bh
  40db71:	cmp    bl,BYTE PTR [esi*8+0x5ceba02a]
  40db78:	sub    eax,edx
  40db7a:	aaa    
  40db7b:	xchg   esp,eax
  40db7c:	jmp    0x5cac459
  40db81:	adc    ecx,esp
  40db83:	pop    edi
  40db84:	adc    ebp,DWORD PTR [esi-0x17]
  40db87:	ret    0xd5b
  40db8a:	ss jnp 0x40db4d
  40db8d:	popa   
  40db8e:	push   cs
  40db8f:	fdecstp 
  40db91:	adc    BYTE PTR [ebx],al
  40db93:	push   0xffffffc6
  40db95:	mov    cl,0x74
  40db97:	mov    edx,0xbacf03b0
  40db9c:	loop   0x40db7c
  40db9e:	add    eax,0xaae1f5fa
  40dba3:	pop    es
  40dba4:	push   es
  40dba5:	test   al,0xf7
  40dba7:	stos   BYTE PTR es:[edi],al
  40dba8:	mov    DWORD PTR [eax],eax
  40dbaa:	pop    ds
  40dbab:	mov    ds:0xcef8bbd1,al
  40dbb0:	pop    ebx
  40dbb1:	pop    edx
  40dbb2:	mov    ds:0xde23423a,al
  40dbb7:	and    bl,BYTE PTR [ebx-0xc5abd2a]
  40dbbd:	mov    eax,0x8d237a22
  40dbc2:	add    al,0x1
  40dbc4:	loope  0x40dc0c
  40dbc6:	test   DWORD PTR [edx+0x4d],ecx
  40dbc9:	mov    ch,ch
  40dbcb:	add    BYTE PTR [ecx-0x56],ch
  40dbce:	fisttp DWORD PTR [edi]
  40dbd0:	cmp    DWORD PTR [esi-0x751f0742],0xffffffcf
  40dbd7:	ss or  eax,0xb4dbf61e
  40dbdd:	mov    ds:0x3715d5fe,al
  40dbe2:	push   ebp
  40dbe3:	sub    dl,ch
  40dbe5:	sub    al,0x53
  40dbe7:	fnstcw WORD PTR [esp+eiz*8+0x75]
  40dbeb:	adc    al,0xd8
  40dbed:	inc    ebx
  40dbee:	int    0x1e
  40dbf0:	sbb    BYTE PTR [eax-0xf7c9c78],bh
  40dbf6:	sahf   
  40dbf7:	cs mov dh,0xf4
  40dbfa:	xor    eax,DWORD PTR [edi]
  40dbfc:	cdq    
  40dbfd:	dec    ecx
  40dbfe:	mov    eax,ds:0x194cfcbb
  40dc03:	test   DWORD PTR [ecx],ebp
  40dc05:	imul   ebx,DWORD PTR [ebx-0x71],0x5535f18d
  40dc0c:	mov    bl,BYTE PTR [ebp+0x456a0dd8]
  40dc12:	dec    edi
  40dc13:	jp     0x40dc34
  40dc15:	ds mov ss,edi
  40dc18:	lock les esi,FWORD PTR [ebx]
  40dc1b:	adc    bh,ch
  40dc1d:	cmp    BYTE PTR [eax-0x50],dl
  40dc20:	add    al,0x29
  40dc22:	sahf   
  40dc23:	das    
  40dc24:	in     eax,0xe9
  40dc26:	(bad)  
  40dc27:	out    0x2e,al
  40dc29:	pop    ebp
  40dc2a:	and    BYTE PTR [ecx+esi*1],bh
  40dc2d:	cs popa 
  40dc2f:	push   edx
  40dc30:	lods   eax,DWORD PTR ds:[esi]
  40dc31:	add    bh,BYTE PTR [edx+0x6cfda960]
  40dc37:	pop    es
  40dc38:	xchg   edx,eax
  40dc39:	xor    al,0xe9
  40dc3b:	inc    ebx
  40dc3c:	jns    0x40dbc4
  40dc3e:	loopne 0x40dc29
  40dc40:	lods   eax,DWORD PTR ds:[esi]
  40dc41:	add    BYTE PTR [edi+ebx*8+0x557f7211],ah
  40dc48:	fiadd  WORD PTR ds:0x1a3ce1bd
  40dc4e:	adc    eax,0xdf6f4e34
  40dc53:	fnstenv [ebp+esi*8+0x379af874]
  40dc5a:	and    al,0x1c
  40dc5c:	mov    ebp,0x7502c9ed
  40dc61:	mov    bh,0x91
  40dc63:	mov    WORD PTR [ebx+0x66],gs
  40dc66:	test   DWORD PTR [esi],edx
  40dc68:	ss dec edi
  40dc6a:	xor    DWORD PTR [edx+0x2bd79db2],0x4f
  40dc71:	jg     0x40dcb3
  40dc73:	ins    BYTE PTR es:[edi],dx
  40dc74:	dec    ebx
  40dc75:	xchg   esp,eax
  40dc76:	sar    DWORD PTR [ebx+0xf],0x5c
  40dc7a:	mov    esp,0x9cebcbb8
  40dc7f:	dec    edi
  40dc80:	pop    esi
  40dc81:	(bad)  
  40dc82:	mov    al,0xb0
  40dc84:	mov    eax,0x128230c
  40dc89:	js     0x40dcdb
  40dc8b:	xchg   edi,eax
  40dc8c:	jnp    0x40dc78
  40dc8e:	xchg   edi,eax
  40dc8f:	mov    ah,0xa2
  40dc91:	fnsave [ecx+edi*2-0x4cc91381]
  40dc98:	retf   0x3218
  40dc9b:	xor    DWORD PTR [ecx-0x480956c2],edi
  40dca1:	cmc    
  40dca2:	in     al,dx
  40dca3:	loop   0x40dc70
  40dca5:	ret    0x79df
  40dca8:	ja     0x40dc2c
  40dcaa:	call   0x489b:0x2f4a9520
  40dcb1:	sbb    eax,eax
  40dcb3:	ja     0x40dc8e
  40dcb5:	hlt    
  40dcb6:	lods   eax,DWORD PTR ds:[esi]
  40dcb7:	jle    0x40dcb5
  40dcb9:	out    dx,eax
  40dcba:	mov    dh,0x6f
  40dcbc:	repnz mov ah,BYTE PTR [ebx]
  40dcbf:	fbld   TBYTE PTR [esi+0x6379e08a]
  40dcc5:	adc    bh,BYTE PTR [ecx+0x2bd46990]
  40dccb:	push   es
  40dccc:	mov    eax,0x2939a05
  40dcd1:	jns    0x40dcac
  40dcd3:	push   cs
  40dcd4:	sub    ecx,DWORD PTR [edi-0x42c6d3fd]
  40dcda:	adc    eax,0x9
  40dcdd:	add    DWORD PTR [edi+0x12],0xffffffdb
  40dce1:	(bad)  
  40dce2:	pop    ecx
  40dce3:	clc    
  40dce4:	xchg   ebx,eax
  40dce5:	jmp    0x543766bd
  40dcea:	call   FWORD PTR [ebp+0x22]
  40dced:	and    al,BYTE PTR [bp+si]
  40dcf0:	sar    DWORD PTR [ebx],cl
  40dcf2:	mov    dh,0x41
  40dcf4:	jno    0x40dd6d
  40dcf6:	sar    edi,cl
  40dcf8:	cmp    eax,0x3dc9e1fc
  40dcfd:	mov    ecx,DWORD PTR [ecx+0x6712eb45]
  40dd03:	xchg   esi,eax
  40dd04:	mov    WORD PTR [edi-0x55ce2fd0],cs
  40dd0a:	add    al,0xab
  40dd0c:	inc    esi
  40dd0d:	(bad)  
  40dd0e:	jecxz  0x40dd35
  40dd10:	mov    edi,0x6ba4d947
  40dd15:	push   edx
  40dd16:	cmp    al,0x6
  40dd18:	pop    esi
  40dd19:	cmp    DWORD PTR [eax+0x26],esp
  40dd1c:	dec    ecx
  40dd1d:	dec    ebx
  40dd1e:	fimul  DWORD PTR [ebp-0x13]
  40dd21:	add    ecx,DWORD PTR [edi+ebp*2+0x29]
  40dd25:	popf   
  40dd26:	popa   
  40dd27:	rol    eax,1
  40dd29:	or     ch,bl
  40dd2b:	shl    DWORD PTR [esi+eax*8-0xa],cl
  40dd2f:	inc    ebp
  40dd30:	icebp  
  40dd31:	push   es
  40dd32:	cdq    
  40dd33:	js     0x40dd11
  40dd35:	jl     0x40dd28
  40dd37:	in     eax,0x31
  40dd39:	repnz inc esi
  40dd3c:	fwait
  40dd3d:	sbb    eax,0xf4e396f3
  40dd42:	inc    edx
  40dd43:	adc    DWORD PTR [edi+0x1e569f2e],ebx
  40dd49:	fld    DWORD PTR [edi]
  40dd4b:	jmp    0x9998df44
  40dd50:	jecxz  0x40dd6e
  40dd52:	dec    esp
  40dd53:	dec    ebp
  40dd54:	add    DWORD PTR [ebx-0x663ad260],esp
  40dd5a:	fsub   QWORD PTR [edx]
  40dd5c:	fwait
  40dd5d:	and    al,0x15
  40dd5f:	aad    0x7f
  40dd61:	xlat   BYTE PTR ds:[ebx]
  40dd62:	ror    DWORD PTR [ecx-0x38],1
  40dd65:	call   DWORD PTR [esp+eax*1+0x4767d2d7]
  40dd6c:	imul   ebp,DWORD PTR [ecx+0x39bddb1e],0x6f
  40dd73:	cmp    eax,0x5e25c0ee
  40dd78:	and    esi,edx
  40dd7a:	jmp    0xd6252e23
  40dd7f:	jmp    0x5c8feb1b
  40dd84:	adc    eax,0x157d7ae8
  40dd89:	addr16 or al,0x34
  40dd8c:	jnp    0x40dd52
  40dd8e:	push   ebx
  40dd8f:	xor    eax,0xb6bb61f4
  40dd94:	mov    dl,0xaa
  40dd96:	dec    ebp
  40dd97:	xchg   edi,eax
  40dd98:	inc    eax
  40dd99:	fdiv   DWORD PTR [ebp+ebp*2+0x12f642d]
  40dda0:	aaa    
  40dda1:	sbb    ch,cl
  40dda3:	push   edi
  40dda4:	mov    dl,0x7a
  40dda6:	add    bl,ch
  40dda8:	push   0xd3479fff
  40ddad:	xchg   edx,eax
  40ddae:	out    0x40,al
  40ddb0:	fimul  WORD PTR [ebx-0x72a8c151]
  40ddb6:	outs   dx,BYTE PTR ds:[esi]
  40ddb7:	push   ebx
  40ddb8:	mov    esi,0x2c5092ad
  40ddbd:	and    dh,BYTE PTR [edx+esi*2-0x50]
  40ddc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddc2:	stc    
  40ddc3:	mov    ebp,0xabf59362
  40ddc8:	in     eax,dx
  40ddc9:	outs   dx,BYTE PTR ds:[esi]
  40ddca:	mov    cl,0xe2
  40ddcc:	xor    DWORD PTR [ecx+0x35eaa0f5],ebp
  40ddd2:	jmp    0x2cd84fb2
  40ddd7:	push   cs
  40ddd8:	mov    edi,0xf999a980
  40dddd:	sbb    BYTE PTR [ecx+0x5f684090],al
  40dde3:	hlt    
  40dde4:	add    edi,DWORD PTR [esi+esi*2+0x18]
  40dde8:	jl     0x40dd7d
  40ddea:	jns    0x40dd8a
  40ddec:	cmc    
  40dded:	loop   0x40de2a
  40ddef:	out    dx,eax
  40ddf0:	mov    ah,0xd5
  40ddf2:	mov    ?,WORD PTR [eax+0xb]
  40ddf5:	and    edx,ebx
  40ddf7:	enter  0x1d5e,0x46
  40ddfb:	jg     0x40de0e
  40ddfd:	cdq    
  40ddfe:	xchg   BYTE PTR [esp+ebp*1+0x32],al
  40de02:	mov    ch,bh
  40de04:	sub    DWORD PTR [ebx-0x354b06c9],ebx
  40de0a:	(bad)  
  40de0b:	inc    eax
  40de0c:	push   ds
  40de0d:	cmp    DWORD PTR [esi],edi
  40de0f:	and    BYTE PTR [edx+0x151cf7af],cl
  40de15:	inc    edi
  40de16:	jae    0x40de7f
  40de18:	aas    
  40de19:	inc    ecx
  40de1a:	xchg   edx,eax
  40de1b:	add    al,0xbb
  40de1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de1e:	fcmovbe st,st(5)
  40de20:	cdq    
  40de21:	cld    
  40de22:	fist   WORD PTR [eax+edi*8+0x44]
  40de26:	pushf  
  40de27:	ficomp DWORD PTR [eax-0x57]
  40de2a:	retf   
  40de2b:	not    BYTE PTR [ebx]
  40de2d:	mov    dh,0xe6
  40de2f:	inc    esi
  40de30:	aam    0xa0
  40de32:	xchg   edx,eax
  40de33:	add    DWORD PTR [edx-0x5c2fabda],edx
  40de39:	xchg   esi,eax
  40de3a:	xor    al,0xe9
  40de3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de3d:	xchg   edx,eax
  40de3e:	add    DWORD PTR [esp+eax*2],ebp
  40de41:	dec    esp
  40de42:	shr    esi,cl
  40de44:	imul   edi,esp,0xa5334718
  40de4a:	xchg   esi,eax
  40de4b:	rcl    BYTE PTR [esi+0x7bd9d605],1
  40de51:	mov    bh,0xae
  40de53:	pop    edx
  40de54:	cmp    BYTE PTR [ebx],dl
  40de56:	out    0x91,eax
  40de58:	jmp    0x40de5c
  40de5a:	dec    esi
  40de5b:	pop    ss
  40de5c:	push   cs
  40de5d:	stos   BYTE PTR es:[edi],al
  40de5e:	shr    bh,0x4b
  40de61:	add    cl,BYTE PTR [ebx]
  40de63:	sub    eax,0x587207d
  40de68:	pop    esp
  40de69:	and    bh,BYTE PTR [eax]
  40de6b:	fbld   TBYTE PTR [edi]
  40de6d:	dec    ebp
  40de6e:	add    BYTE PTR [ecx+ecx*1+0x52],bh
  40de72:	adc    DWORD PTR [edi+0x53],eax
  40de75:	aad    0x66
  40de77:	add    ebx,esp
  40de79:	mov    ah,0x47
  40de7b:	dec    ebp
  40de7c:	sar    DWORD PTR [edx-0x3c0bed49],0xa1
  40de83:	or     ebx,DWORD PTR ds:0x3df5cadf
  40de89:	jl     0x40deb3
  40de8b:	int    0x31
  40de8d:	pop    ds
  40de8e:	jo     0x40de26
  40de90:	xchg   ebx,eax
  40de91:	xor    al,0xaf
  40de93:	mov    DWORD PTR [ebp-0x35],edx
  40de96:	xchg   ebp,edx
  40de98:	cdq    
  40de99:	das    
  40de9a:	xor    eax,0xcd27978e
  40de9f:	fcom   DWORD PTR [eax]
  40dea1:	hlt    
  40dea2:	inc    esp
  40dea3:	or     BYTE PTR [edi-0x1d],dl
  40dea6:	ret    0xd601
  40dea9:	add    al,ah
  40deab:	and    esi,DWORD PTR [eax-0x67]
  40deae:	xchg   ecx,eax
  40deaf:	es fadd st(0),st
  40deb2:	loopne 0x40de64
  40deb4:	adc    al,0x2e
  40deb6:	sbb    BYTE PTR [edx],cl
  40deb8:	stc    
  40deb9:	rcl    DWORD PTR [esi+0x52],0x71
  40debd:	jbe    0x40deda
  40debf:	add    eax,0xe868472c
  40dec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec5:	fs mov dh,0x55
  40dec8:	mov    dh,0x9a
  40deca:	ja     0x40deca
  40decc:	test   DWORD PTR [ecx-0x29],ebx
  40decf:	and    al,0x91
  40ded1:	jecxz  0x40df32
  40ded3:	pushf  
  40ded4:	xchg   esi,eax
  40ded5:	push   edx
  40ded6:	shr    esp,cl
  40ded8:	mov    ecx,0x3c9c99cd
  40dedd:	fstp   QWORD PTR [ecx-0x125bb827]
  40dee3:	dec    eax
  40dee4:	and    DWORD PTR [ecx+0x29cb4056],ebx
  40deea:	test   BYTE PTR [esi-0xcdeb692],dl
  40def0:	hlt    
  40def1:	fptan  
  40def3:	loope  0x40de7b
  40def5:	add    BYTE PTR [ebx+eax*4-0x7abc0d5e],al
  40defc:	dec    ebp
  40defd:	and    edx,0xbda486ce
  40df03:	pusha  
  40df04:	pop    esi
  40df05:	sub    ecx,edi
  40df07:	fs jmp 0x8226:0x8325051a
  40df0f:	xor    DWORD PTR [ecx+0x76],0x51
  40df13:	pop    edx
  40df14:	fnsave [eax]
  40df16:	fucomp st(2)
  40df18:	xor    DWORD PTR [esi],edi
  40df1a:	jge    0x40deae
  40df1c:	dec    ecx
  40df1d:	iret   
  40df1e:	inc    ebx
  40df1f:	daa    
  40df20:	mov    cl,0xa3
  40df22:	push   0x3e7a583a
  40df27:	jmp    0x40df0e
  40df29:	xor    eax,0x83c9971f
  40df2e:	jmp    0xca0b7a3b
  40df33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df34:	sbb    eax,0xafb026ba
  40df39:	andps  xmm0,XMMWORD PTR [eax+0x3f482e24]
  40df40:	nop
  40df41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df42:	int3   
  40df43:	into   
  40df44:	inc    edi
  40df45:	in     eax,dx
  40df46:	jl     0x40df45
  40df48:	jns    0x40df3b
  40df4a:	ret    
  40df4b:	in     eax,0xb0
  40df4d:	xor    BYTE PTR [ecx],ah
  40df4f:	mov    al,ds:0xc17c6b76
  40df54:	call   0x7aa6:0xd217bb3b
  40df5b:	jle    0x40dfd8
  40df5d:	in     eax,0x69
  40df5f:	dec    ebp
  40df60:	jns    0x40df14
  40df62:	push   esp
  40df63:	jnp    0x40df4a
  40df65:	or     dh,BYTE PTR [ebp+0x1ad9601a]
  40df6b:	xlat   BYTE PTR ds:[ebx]
  40df6c:	and    bh,dl
  40df6e:	push   ss
  40df6f:	sar    ch,1
  40df71:	fstp   QWORD PTR [ecx-0x4e]
  40df74:	xchg   DWORD PTR [edx],ecx
  40df76:	mov    ebp,0xaa502524
  40df7b:	xchg   ecx,eax
  40df7c:	in     eax,0x50
  40df7e:	or     bl,dh
  40df80:	fcomip st,st(0)
  40df82:	mov    dl,0x78
  40df84:	mov    esp,0x350415cd
  40df89:	in     al,0x65
  40df8b:	push   es
  40df8c:	sub    BYTE PTR [ecx+0xc],0x13
  40df90:	jb     0x40df8e
  40df92:	addr16 or al,0x2d
  40df95:	mov    bh,0xf7
  40df97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df98:	cld    
  40df99:	push   ecx
  40df9a:	mov    ebx,0xfbe3ab34
  40df9f:	add    DWORD PTR [ecx],edi
  40dfa1:	pushf  
  40dfa2:	sahf   
  40dfa3:	push   esp
  40dfa4:	or     BYTE PTR [ebx],0x9
  40dfa7:	jbe    0x40df8c
  40dfa9:	mov    ds:0x2ee4b22b,eax
  40dfae:	dec    eax
  40dfaf:	pop    edi
  40dfb0:	outs   dx,DWORD PTR ds:[esi]
  40dfb1:	jmp    0x1cdc14f5
  40dfb6:	jns    0x40e032
  40dfb8:	jno    0x40e009
  40dfba:	adc    eax,0x517f81d1
  40dfbf:	fnstsw WORD PTR [ecx+0x21]
  40dfc2:	mov    al,0xa6
  40dfc4:	mov    eax,ds:0x719a4de
  40dfc9:	in     al,0xa2
  40dfcb:	hlt    
  40dfcc:	scas   al,BYTE PTR es:[edi]
  40dfcd:	jb     0x40dfa4
  40dfcf:	adc    ebp,DWORD PTR [eax-0x21a21054]
  40dfd5:	inc    edx
  40dfd6:	mov    ds:0x4c3ccb6f,al
  40dfdb:	add    DWORD PTR ds:0x3e5577a1,ebx
  40dfe1:	jmp    0x40e002
  40dfe3:	dec    eax
  40dfe4:	loopne 0x40dff7
  40dfe6:	sbb    edx,ebx
  40dfe8:	adc    bl,BYTE PTR [ebp+0x1d535160]
  40dfee:	xchg   esp,eax
  40dfef:	sub    al,0x96
  40dff1:	inc    ecx
  40dff2:	je     0x40dfa5
  40dff4:	nop
  40dff5:	xchg   edi,eax
  40dff6:	not    esi
  40dff8:	aad    0xb5
  40dffa:	jmp    0x40e044
  40dffc:	loopne 0x40e014
  40dffe:	outs   dx,DWORD PTR ds:[esi]
  40dfff:	cmp    eax,0xbcba5d92
  40e004:	int3   
  40e005:	adc    BYTE PTR [ebx+0x65],0x4a
  40e009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e00a:	mov    DWORD PTR [edi-0x3584dbfd],ecx
  40e010:	jne    0x40e089
  40e012:	dec    edx
  40e013:	pop    edi
  40e014:	pop    ebx
  40e015:	mov    eax,0x65282b04
  40e01a:	test   DWORD PTR [ecx-0x1fa6aea4],ecx
  40e020:	mov    ebp,0xaa810586
  40e025:	xchg   al,dl
  40e027:	xchg   esi,eax
  40e028:	js     0x40e07a
  40e02a:	scas   al,BYTE PTR es:[edi]
  40e02b:	mov    ecx,0x4f4a300b
  40e030:	add    DWORD PTR [ebx+0xbf9d7ba],0xffffffca
  40e037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e038:	repz int 0x90
  40e03b:	inc    esi
  40e03c:	aas    
  40e03d:	pop    ds
  40e03e:	and    esi,0xffffffd8
  40e041:	push   edx
  40e042:	add    dh,bh
  40e044:	inc    ebp
  40e045:	aam    0x61
  40e047:	add    eax,0xeffbc6cc
  40e04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e04d:	fldenv [ecx-0x5d]
  40e050:	xor    cl,al
  40e052:	shr    BYTE PTR [ebx-0x4ea73421],1
  40e058:	scas   al,BYTE PTR es:[edi]
  40e059:	pop    eax
  40e05a:	inc    ecx
  40e05b:	dec    ebx
  40e05c:	xor    dl,BYTE PTR [edi+0x74a1037]
  40e062:	leave  
  40e063:	fucom  st(2)
  40e065:	push   eax
  40e066:	ret    0xb700
  40e069:	inc    ecx
  40e06a:	in     eax,dx
  40e06b:	sbb    esi,ebx
  40e06d:	mov    ch,0x13
  40e06f:	xlat   BYTE PTR ds:[ebx]
  40e070:	popa   
  40e071:	or     eax,0x993ee502
  40e076:	adc    eax,0x89bb416c
  40e07b:	xchg   edi,eax
  40e07c:	es jnp 0x40e038
  40e07f:	es jae 0x40e055
  40e082:	adc    dh,ah
  40e084:	add    eax,0x78a9ad7f
  40e089:	xlat   BYTE PTR ds:[ebx]
  40e08a:	outs   dx,DWORD PTR ds:[esi]
  40e08b:	push   eax
  40e08c:	pop    esp
  40e08d:	jl     0x40e0d4
  40e08f:	sahf   
  40e090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e091:	cmp    bh,BYTE PTR [edi+0x1b38d80c]
  40e097:	call   0x808b:0x10dfc7e0
  40e09e:	js     0x40e09b
  40e0a0:	cld    
  40e0a1:	pop    edx
  40e0a2:	je     0x40e0f2
  40e0a4:	sub    ebx,ecx
  40e0a6:	(bad)  
  40e0a8:	xchg   DWORD PTR [ebp-0x19b7e426],ebp
  40e0ae:	mov    al,0x8e
  40e0b0:	dec    edi
  40e0b1:	mov    al,0xab
  40e0b3:	loop   0x40e0cf
  40e0b5:	outs   dx,DWORD PTR ds:[esi]
  40e0b6:	mov    ecx,0x8bf3aa
  40e0bb:	jmp    0x40e0a3
  40e0bd:	add    eax,0x687d8cce
  40e0c2:	(bad)  
  40e0c3:	fadd   DWORD PTR [ebp-0x7d]
  40e0c6:	enter  0x501e,0xfa
  40e0ca:	dec    eax
  40e0cb:	hlt    
  40e0cc:	std    
  40e0cd:	mov    bl,0x1b
  40e0cf:	mov    al,bl
  40e0d1:	push   edi
  40e0d2:	es pop es
  40e0d4:	imul   ecx,DWORD PTR [ebx+0x1928cae2],0x7d
  40e0db:	adc    bl,bl
  40e0dd:	cwde   
  40e0de:	and    esi,DWORD PTR [edi+ebx*2+0x7655c067]
  40e0e5:	mov    dh,0x57
  40e0e7:	sbb    ah,BYTE PTR [ebx+ecx*8+0x58]
  40e0eb:	inc    ecx
  40e0ec:	aaa    
  40e0ed:	inc    edx
  40e0ee:	sub    dl,dl
  40e0f0:	sbb    edi,edi
  40e0f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f3:	push   0x15974db5
  40e0f8:	dec    esi
  40e0f9:	ins    BYTE PTR es:[edi],dx
  40e0fa:	fs dec ebx
  40e0fc:	xchg   ebp,eax
  40e0fd:	cs fucomp st(1)
  40e100:	add    BYTE PTR [esi],bh
  40e102:	adc    ebx,DWORD PTR [ecx-0x28]
  40e105:	mov    bl,0xd3
  40e107:	ds je  0x40e08d
  40e10a:	stc    
  40e10b:	mov    ebp,DWORD PTR [edi]
  40e10d:	(bad)  
  40e10e:	dec    ebx
  40e10f:	dec    ebx
  40e110:	ins    DWORD PTR es:[edi],dx
  40e111:	(bad)  
  40e112:	and    DWORD PTR [edx+ebx*8+0x7cdb8b5f],ecx
  40e119:	std    
  40e11a:	jb     0x40e197
  40e11c:	mov    eax,0x6982429
  40e121:	mov    eax,ds:0x7abe4fa7
  40e126:	or     cl,BYTE PTR [edx-0x7a]
  40e129:	inc    edi
  40e12a:	into   
  40e12b:	mov    ah,0x8f
  40e12d:	enter  0x6774,0xa1
  40e131:	loopne 0x40e1aa
  40e133:	(bad)  
  40e134:	sub    BYTE PTR [ebx-0x63],ah
  40e137:	idiv   DWORD PTR [ebp+0x4a]
  40e13a:	inc    eax
  40e13b:	shr    BYTE PTR [ebp-0x790e5ce4],0x77
  40e142:	push   es
  40e143:	sti    
  40e144:	jae    0x40e164
  40e146:	jb     0x40e0d0
  40e148:	pusha  
  40e149:	fidiv  DWORD PTR [esi-0x26]
  40e14c:	pop    ds
  40e14d:	pop    ss
  40e14e:	les    ebx,FWORD PTR [edx+0x52]
  40e151:	push   ds
  40e152:	mov    ds:0x8b8b2b64,eax
  40e157:	jmp    0x6e30919a
  40e15c:	jp     0x40e140
  40e15e:	mov    ah,0x46
  40e160:	ret    0x9e30
  40e163:	inc    esp
  40e164:	push   es
  40e165:	test   DWORD PTR [bp+0x53d6],0x8060abcf
  40e16e:	out    dx,eax
  40e16f:	jmp    0x4593019a
  40e174:	sahf   
  40e175:	and    DWORD PTR [eax+0x12],ebx
  40e178:	jge    0x40e16f
  40e17a:	jge    0x40e170
  40e17c:	add    al,0x6f
  40e17e:	cmc    
  40e17f:	cmp    DWORD PTR [eax+ecx*8-0x58],ebx
  40e183:	or     edi,esi
  40e185:	daa    
  40e186:	push   ecx
  40e187:	jle    0x40e178
  40e189:	icebp  
  40e18a:	iret   
  40e18b:	aam    0x95
  40e18d:	inc    edx
  40e18e:	stos   BYTE PTR es:[edi],al
  40e18f:	out    0x50,al
  40e191:	mov    al,0xf
  40e193:	jmp    0x40e127
  40e195:	sub    dh,BYTE PTR [eax-0x577618b9]
  40e19b:	div    DWORD PTR [edx]
  40e19d:	je     0x40e1c5
  40e19f:	sbb    eax,0x307e39cb
  40e1a4:	sbb    al,0xd
  40e1a6:	cmp    DWORD PTR [eax],ecx
  40e1a8:	and    esi,ebp
  40e1aa:	xchg   esp,ebx
  40e1ac:	pop    edx
  40e1ad:	jmp    0x40e1ea
  40e1af:	outs   dx,BYTE PTR cs:[esi]
  40e1b1:	or     BYTE PTR [edx+eiz*1-0x15],0x41
  40e1b6:	dec    ebp
  40e1b7:	adc    ch,bh
  40e1b9:	pop    esp
  40e1ba:	stc    
  40e1bb:	xor    BYTE PTR [edx+0x25],0x67
  40e1bf:	xchg   eax,ebp
  40e1c1:	dec    esp
  40e1c2:	push   ebx
  40e1c3:	dec    edi
  40e1c4:	sub    BYTE PTR [ebp+0x22beebad],bl
  40e1ca:	sbb    dl,dh
  40e1cc:	jb     0x40e19d
  40e1ce:	adc    eax,DWORD PTR [ebp+0x26]
  40e1d1:	into   
  40e1d2:	sbb    al,0x66
  40e1d4:	hlt    
  40e1d5:	dec    ebp
  40e1d6:	pop    ecx
  40e1d7:	int3   
  40e1d8:	ja     0x40e17e
  40e1da:	call   0xab8a11d2
  40e1df:	or     al,0xa9
  40e1e1:	mov    ch,BYTE PTR [ebp-0x19]
  40e1e4:	out    dx,al
  40e1e5:	lahf   
  40e1e6:	sti    
  40e1e7:	jne    0x40e236
  40e1e9:	addr16 mov ds:0x5d0d,al
  40e1ed:	inc    ebx
  40e1ee:	movq   QWORD PTR [ebp+ebp*4+0x1042821e],mm4
  40e1f6:	inc    esp
  40e1f7:	mov    esp,0xfda31a7
  40e1fc:	jp     0x40e271
  40e1fe:	adc    BYTE PTR [eax-0x31],cl
  40e201:	jl     0x40e1f3
  40e203:	push   ebx
  40e204:	jmp    0x1da198bf
  40e209:	rcl    BYTE PTR [ebx],1
  40e20b:	cmc    
  40e20c:	xchg   ebx,eax
  40e20d:	sahf   
  40e20e:	sbb    dh,BYTE PTR [edx-0x15]
  40e211:	jge    0x40e1e8
  40e213:	call   0x9362:0x91f5119
  40e21a:	jmp    0x40e279
  40e21c:	and    al,0xc9
  40e21e:	sbb    esp,ebp
  40e220:	pop    esi
  40e221:	mov    al,ds:0x1d540053
  40e226:	push   edi
  40e227:	nop
  40e228:	(bad)  
  40e229:	shl    DWORD PTR [ebp+0x73],cl
  40e22c:	fwait
  40e22d:	stc    
  40e22e:	ins    DWORD PTR es:[edi],dx
  40e22f:	dec    ecx
  40e230:	in     eax,dx
  40e231:	pusha  
  40e232:	push   0xffffffd4
  40e234:	jmp    0x40e1f5
  40e236:	pop    esp
  40e237:	fbstp  TBYTE PTR [esi-0x1d]
  40e23a:	and    al,0xf8
  40e23c:	and    edi,DWORD PTR [esi+0x73]
  40e23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e240:	neg    DWORD PTR [eax+0x10364eaf]
  40e246:	(bad)  
  40e247:	adc    BYTE PTR [eax-0x3f],al
  40e24a:	inc    esp
  40e24b:	or     dh,BYTE PTR [edi+0x5f]
  40e24e:	xor    eax,esp
  40e250:	dec    edx
  40e251:	push   ds
  40e252:	dec    ecx
  40e253:	aas    
  40e254:	int3   
  40e255:	into   
  40e256:	pushf  
  40e257:	xchg   ebp,eax
  40e258:	test   al,0xba
  40e25a:	sahf   
  40e25b:	xor    al,0x9a
  40e25d:	adc    BYTE PTR [ecx-0x60],ch
  40e260:	xchg   DWORD PTR [eax-0x15],ebx
  40e263:	adc    al,0xb5
  40e265:	(bad)  
  40e267:	(bad)  
  40e268:	sbb    al,0xce
  40e26a:	sub    ebp,DWORD PTR [esi+0x20f0d60e]
  40e270:	dec    ecx
  40e271:	mov    esi,0xfb58f038
  40e276:	cwde   
  40e277:	adc    al,dl
  40e279:	sar    DWORD PTR [ebp-0x26],1
  40e27c:	add    dl,dl
  40e27e:	iret   
  40e27f:	or     ch,bh
  40e281:	cmp    ebp,DWORD PTR [ebx]
  40e283:	out    dx,al
  40e284:	mov    edi,0x96ba9eb
  40e289:	sub    DWORD PTR [eax+edi*1-0x46],0xffffffa1
  40e28e:	cmp    al,0x11
  40e290:	mov    dl,0x55
  40e292:	(bad)  
  40e293:	jae    0x40e280
  40e295:	cmp    edx,DWORD PTR [esi-0x48]
  40e298:	sar    DWORD PTR [ecx],cl
  40e29a:	adc    eax,0x2afdce3e
  40e29f:	popf   
  40e2a0:	ins    BYTE PTR es:[edi],dx
  40e2a1:	cmp    al,0x91
  40e2a3:	call   0xf5adb2de
  40e2a8:	jbe    0x40e2c0
  40e2aa:	icebp  
  40e2ab:	test   ebp,esi
  40e2ad:	in     eax,0x15
  40e2af:	iret   
  40e2b0:	test   bh,al
  40e2b2:	gs nop
  40e2b4:	into   
  40e2b5:	repz mov esi,0x3e75ed83
  40e2bb:	aam    0xc2
  40e2bd:	push   esp
  40e2be:	cli    
  40e2bf:	sbb    DWORD PTR [ecx+0x4b63d08b],eax
  40e2c5:	pushf  
  40e2c6:	pop    eax
  40e2c7:	mov    edi,0xafbd61d
  40e2cc:	into   
  40e2cd:	loop   0x40e2de
  40e2cf:	jno    0x40e282
  40e2d1:	mov    BYTE PTR [edi+0x7f9442a5],dl
  40e2d7:	es xchg esp,eax
  40e2d9:	sbb    al,0x44
  40e2db:	mov    bl,0x1d
  40e2dd:	mov    ch,0x81
  40e2df:	add    BYTE PTR [esi],0x1d
  40e2e2:	std    
  40e2e3:	sub    bl,BYTE PTR [edi]
  40e2e5:	fwait
  40e2e6:	cdq    
  40e2e7:	aaa    
  40e2e8:	adc    DWORD PTR ds:0xc820598b,edi
  40e2ee:	mov    al,0x2a
  40e2f0:	icebp  
  40e2f1:	jge    0x40e27b
  40e2f3:	stos   DWORD PTR es:[edi],eax
  40e2f4:	xor    eax,0x7dd4a54
  40e2f9:	push   ebx
  40e2fa:	aad    0x84
  40e2fc:	frstor [ebx+0x64687789]
  40e302:	ds pop esp
  40e304:	mov    ch,0xe9
  40e306:	mov    eax,ds:0xaee2f6a7
  40e30b:	stc    
  40e30c:	jmp    0x40e2f6
  40e30e:	push   esp
  40e30f:	fistp  WORD PTR [edi-0x77e07e0f]
  40e315:	fadd   DWORD PTR ds:0xa81ad607
  40e31b:	jmp    0x40e360
  40e31d:	test   eax,0x6c308245
  40e322:	xchg   ebp,eax
  40e323:	dec    eax
  40e324:	dec    esi
  40e325:	(bad)  
  40e327:	mov    esi,0x168b1359
  40e32c:	sahf   
  40e32d:	cwde   
  40e32e:	xchg   ecx,eax
  40e32f:	in     eax,dx
  40e330:	aam    0xf2
  40e332:	pop    es
  40e333:	or     BYTE PTR [eax-0x7f6615b8],cl
  40e339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33a:	icebp  
  40e33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33c:	mov    ch,0x7e
  40e33e:	inc    ebx
  40e33f:	jl     0x40e338
  40e341:	popa   
  40e342:	lods   eax,DWORD PTR ds:[esi]
  40e343:	scas   al,BYTE PTR es:[edi]
  40e344:	jge    0x40e31a
  40e346:	cmp    BYTE PTR [ecx-0x5a],0xf0
  40e34a:	xchg   ecx,eax
  40e34b:	rol    BYTE PTR [edi+0x75b8a84e],cl
  40e351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e352:	lods   eax,DWORD PTR ds:[esi]
  40e353:	mov    al,0x62
  40e355:	sahf   
  40e356:	pop    esi
  40e357:	cld    
  40e358:	and    al,0xc7
  40e35a:	sbb    DWORD PTR [ecx+0x477d5159],ebp
  40e360:	mov    cl,BYTE PTR ds:0x57f52eb
  40e366:	ins    BYTE PTR es:[edi],dx
  40e367:	push   ebx
  40e368:	mov    ebx,0x80f877b5
  40e36d:	adc    eax,0x6428c7bc
  40e372:	out    dx,eax
  40e373:	xchg   edx,eax
  40e374:	adc    bl,BYTE PTR [ebp+eax*2+0x2a660450]
  40e37b:	mov    edi,0x3a0ce122
  40e380:	jle    0x40e391
  40e382:	sub    ecx,DWORD PTR [edi+0x2bd07dca]
  40e388:	xchg   ebp,eax
  40e389:	sbb    esi,esi
  40e38b:	scas   eax,DWORD PTR es:[edi]
  40e38c:	sbb    BYTE PTR [ebx-0x5a],dh
  40e38f:	cmp    edx,DWORD PTR [ebp-0x1c566db8]
  40e395:	ins    DWORD PTR es:[edi],dx
  40e396:	inc    ebp
  40e397:	mov    ebx,0x391aeb3d
  40e39c:	test   BYTE PTR [esi],al
  40e39e:	addr16 out dx,eax
  40e3a0:	inc    edx
  40e3a1:	dec    edi
  40e3a2:	jg     0x40e39b
  40e3a4:	(bad)  
  40e3a5:	out    0x6c,al
  40e3a7:	add    al,BYTE PTR [edx]
  40e3a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3aa:	push   eax
  40e3ab:	mov    edx,0xb9aea586
  40e3b0:	rcr    DWORD PTR ds:0x42ef6f85,0x77
  40e3b7:	mov    al,0x7b
  40e3b9:	adc    BYTE PTR [ebx+0x7e2e38f],dh
  40e3bf:	test   DWORD PTR [ecx-0x23],edi
  40e3c2:	stos   DWORD PTR es:[edi],eax
  40e3c3:	dec    eax
  40e3c4:	lds    edx,FWORD PTR [ebx-0x209afe7]
  40e3ca:	je     0x40e379
  40e3cc:	dec    ebx
  40e3cd:	cmc    
  40e3ce:	(bad)  
  40e3cf:	aam    0xe8
  40e3d1:	and    DWORD PTR [ebp+0x1],edi
  40e3d4:	inc    eax
  40e3d5:	sbb    DWORD PTR [eax+ebx*1-0x4f1e39f7],ecx
  40e3dc:	into   
  40e3dd:	cdq    
  40e3de:	jae    0x40e406
  40e3e0:	std    
  40e3e1:	jae    0x40e3b9
  40e3e3:	ror    dl,0x48
  40e3e6:	mov    ebx,DWORD PTR [ecx+0x325c91ab]
  40e3ec:	mov    ebx,DWORD PTR [ebx-0x79]
  40e3ef:	nop
  40e3f0:	xchg   ecx,eax
  40e3f1:	cmp    eax,0x84d8c346
  40e3f6:	push   ds
  40e3f7:	les    esp,FWORD PTR [eax]
  40e3f9:	mov    ecx,0x5419177e
  40e3fe:	adc    eax,0x9a4e0d5d
  40e403:	push   es
  40e404:	iret   
  40e405:	jp     0x40e44c
  40e407:	fcomp  DWORD PTR [edi-0x35]
  40e40a:	(bad)  
  40e40b:	jns    0x40e424
  40e40d:	stos   DWORD PTR es:[edi],eax
  40e40e:	es in  eax,dx
  40e410:	mov    ebp,DWORD PTR ds:0x590127c3
  40e416:	iret   
  40e417:	sbb    DWORD PTR [ecx-0x2dd1a2f0],esi
  40e41d:	mov    ebp,cs
  40e41f:	push   0x8d14e2a0
  40e424:	ja     0x40e457
  40e426:	jmp    0x40e422
  40e428:	push   ebx
  40e429:	ins    DWORD PTR es:[edi],dx
  40e42a:	push   ebp
  40e42b:	outs   dx,BYTE PTR ds:[esi]
  40e42c:	popf   
  40e42d:	inc    ecx
  40e42e:	jo     0x40e47b
  40e430:	test   dl,al
  40e432:	cmp    BYTE PTR [ecx+ebp*8+0x2a3ceb92],bl
  40e439:	test   eax,0x3c19efd0
  40e43e:	leave  
  40e43f:	test   DWORD PTR [esi+ecx*1],ebp
  40e442:	mov    ds:0x34cb37cd,al
  40e447:	(bad)  
  40e448:	cmp    DWORD PTR [edi+ecx*4-0x24],edi
  40e44c:	mov    ecx,DWORD PTR [edx+0x15dd0930]
  40e452:	mov    ebx,0x2fd241b6
  40e457:	adc    al,BYTE PTR [edx-0x1c67589b]
  40e45d:	inc    esp
  40e45e:	in     eax,dx
  40e45f:	adc    ebx,edx
  40e461:	and    esi,DWORD PTR [esi+0x11]
  40e464:	cmp    al,0xd3
  40e466:	adc    eax,0x371bee05
  40e46b:	imul   ebp,edx,0x3bf760c2
  40e471:	cwde   
  40e472:	xchg   esi,eax
  40e473:	repnz mov BYTE PTR [eax],al
  40e476:	sbb    ebx,DWORD PTR [edx+0x14]
  40e479:	adc    ch,BYTE PTR [edi]
  40e47b:	fwait
  40e47c:	test   bh,0xb1
  40e47f:	pop    edx
  40e480:	jae    0x40e46e
  40e482:	and    ebx,DWORD PTR es:[ebx-0x19fac0e]
  40e489:	pop    es
  40e48a:	inc    edi
  40e48b:	jnp    0x40e4f0
  40e48d:	int    0x70
  40e48f:	int3   
  40e490:	sub    DWORD PTR [ecx-0x26],eax
  40e493:	xchg   esp,eax
  40e494:	push   ebp
  40e495:	mov    bl,0xb3
  40e497:	mov    edx,ecx
  40e499:	inc    BYTE PTR [edi-0x21]
  40e49c:	sbb    cl,dh
  40e49e:	dec    eax
  40e49f:	fucomp st(6)
  40e4a1:	cdq    
  40e4a2:	push   esp
  40e4a3:	outs   dx,DWORD PTR ds:[esi]
  40e4a4:	and    ah,BYTE PTR [edx-0x1f709f1f]
  40e4aa:	xchg   ecx,eax
  40e4ab:	xchg   edi,eax
  40e4ac:	stos   BYTE PTR es:[edi],al
  40e4ad:	or     eax,0xe770e22b
  40e4b2:	jno    0x40e4be
  40e4b4:	pusha  
  40e4b5:	retf   0x5a7e
  40e4b8:	mov    ebp,0x7788702c
  40e4bd:	arpl   WORD PTR [ebp-0x106a8d9a],cx
  40e4c3:	mov    edi,0x22732e7c
  40e4c8:	aad    0xa
  40e4ca:	pop    ebp
  40e4cb:	repnz xor edi,DWORD PTR [ecx-0x44e85e69]
  40e4d2:	xor    al,0x33
  40e4d4:	inc    edi
  40e4d5:	jp     0x40e53d
  40e4d7:	xchg   edi,eax
  40e4d8:	fimul  DWORD PTR [edx-0x624a5936]
  40e4de:	mov    ds:0xcce22230,eax
  40e4e3:	test   BYTE PTR [ecx],al
  40e4e5:	out    dx,eax
  40e4e6:	mov    edx,0xed2ad547
  40e4eb:	imul   esp,DWORD PTR ss:0x49821c2c,0x1b317b7f
  40e4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4f7:	xchg   esp,eax
  40e4f8:	mov    ds:0xbd6784e,eax
  40e4fd:	sub    ecx,DWORD PTR [ebx+edx*8]
  40e500:	xchg   DWORD PTR [eax+0x75],esp
  40e503:	pop    esi
  40e504:	inc    eax
  40e505:	or     esi,edi
  40e507:	inc    ebx
  40e508:	mov    dl,0x20
  40e50a:	lds    esi,FWORD PTR [esi]
  40e50c:	ficomp WORD PTR gs:[edi]
  40e50f:	cmp    BYTE PTR [esi-0x51200502],ah
  40e515:	mov    ebp,0x5364d48b
  40e51a:	cmc    
  40e51b:	(bad)  
  40e51c:	xlat   BYTE PTR ds:[ebx]
  40e51d:	in     al,0x38
  40e51f:	pop    edx
  40e520:	ficom  WORD PTR [edx+ebx*1]
  40e523:	pop    DWORD PTR [edx-0x3]
  40e526:	(bad)  
  40e527:	mov    ebp,0x83709d94
  40e52c:	mov    ecx,0x6cc2f423
  40e531:	pop    edi
  40e532:	ret    0xbbac
  40e535:	mov    ch,0xd7
  40e537:	and    ch,bl
  40e539:	push   0xffffffa8
  40e53b:	lods   eax,DWORD PTR ds:[esi]
  40e53c:	pusha  
  40e53d:	mov    bl,0x21
  40e53f:	and    BYTE PTR [esp+edx*1],cl
  40e542:	sbb    al,dl
  40e544:	(bad)  
  40e545:	jbe    0x40e4f2
  40e547:	call   0xe210:0xb7a0538d
  40e54e:	loope  0x40e51a
  40e550:	push   edx
  40e551:	adc    al,0xed
  40e553:	push   ebx
  40e554:	sbb    dl,dh
  40e556:	lahf   
  40e557:	std    
  40e558:	sub    eax,0x7d7e9f42
  40e55d:	jl     0x40e58e
  40e55f:	push   esp
  40e560:	add    DWORD PTR [edx],0xffffffef
  40e563:	(bad)  
  40e565:	pop    eax
  40e566:	fs inc esi
  40e568:	sub    BYTE PTR [edi],dh
  40e56a:	adc    ecx,DWORD PTR [edi]
  40e56c:	inc    ecx
  40e56d:	pushf  
  40e56e:	adc    al,0x7d
  40e570:	push   DWORD PTR [edi+0x1de14e51]
  40e576:	(bad)  
  40e577:	enter  0x7c19,0xa8
  40e57b:	retf   
  40e57c:	enter  0x5c7b,0xc3
  40e580:	mov    BYTE PTR [eax+0xe83ab48],bl
  40e586:	cmc    
  40e587:	lods   al,BYTE PTR ds:[esi]
  40e588:	mov    al,ds:0xe070c77a
  40e58d:	add    BYTE PTR [eax+0x1c],ah
  40e590:	or     al,0x9d
  40e592:	das    
  40e593:	inc    esi
  40e594:	pushf  
  40e595:	out    dx,al
  40e596:	repz int 0x66
  40e599:	jmp    0x40e5ab
  40e59b:	and    dl,BYTE PTR [ebx-0x1b]
  40e59e:	mov    ebp,0x26f650ec
  40e5a3:	ja     0x40e604
  40e5a5:	pop    ebp
  40e5a6:	and    eax,DWORD PTR [edi-0x72]
  40e5a9:	jb     0x40e537
  40e5ab:	sar    BYTE PTR [ebx+esi*2+0x3acc72bd],1
  40e5b2:	sbb    eax,DWORD PTR [ebx-0x3390dfda]
  40e5b8:	add    bl,BYTE PTR fs:[edx+ebx*1+0x3261bc63]
  40e5c0:	and    eax,DWORD PTR [esi-0x7e]
  40e5c3:	repnz loope 0x40e552
  40e5c6:	xor    eax,0x874e1082
  40e5cb:	adc    al,BYTE PTR [eax-0x2a]
  40e5ce:	sbb    bl,ah
  40e5d0:	mov    esi,0x6ba5e4f2
  40e5d5:	push   ecx
  40e5d6:	aam    0x14
  40e5d8:	aad    0xb4
  40e5da:	pop    ecx
  40e5db:	(bad)  
  40e5dc:	push   ebp
  40e5dd:	(bad)  
  40e5df:	cmp    BYTE PTR [ebp-0x63],ch
  40e5e2:	test   al,0xfc
  40e5e4:	out    0x3a,al
  40e5e6:	call   0xa1be:0xad3aa526
  40e5ed:	imul   ecx,DWORD PTR [ecx],0xb29ea2e
  40e5f3:	cs std 
  40e5f5:	fcom   DWORD PTR [ecx+0x67b0c9ca]
  40e5fb:	lock addr16 mov ds:0x5ed8,eax
  40e600:	pop    ds
  40e601:	pushf  
  40e602:	jecxz  0x40e598
  40e604:	push   ds
  40e605:	jbe    0x40e60a
  40e607:	sub    DWORD PTR [edx+0x1f],edi
  40e60a:	fdivr  QWORD PTR [edx+esi*2]
  40e60d:	pop    ds
  40e60e:	dec    ecx
  40e60f:	ror    BYTE PTR [ebp-0x37ea861],1
  40e615:	adc    ebp,DWORD PTR [ebp+0x16]
  40e618:	outs   dx,BYTE PTR ds:[esi]
  40e619:	inc    BYTE PTR [ecx+0x4b1cba22]
  40e61f:	mov    esp,0x1f6bf56c
  40e624:	frstor [edi+0x32]
  40e627:	mov    dl,BYTE PTR [edx+0x38e2255e]
  40e62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62e:	sub    BYTE PTR [eax],dl
  40e630:	iret   
  40e631:	pop    ebp
  40e632:	push   ds
  40e633:	iret   
  40e634:	pop    edi
  40e635:	push   ebx
  40e636:	rcl    ebx,0x8f
  40e639:	adc    BYTE PTR [ebp+edi*8-0x12],cl
  40e63d:	adc    ecx,ecx
  40e63f:	cmp    ecx,esp
  40e641:	hlt    
  40e642:	or     DWORD PTR [ecx-0x29],ecx
  40e645:	dec    esp
  40e646:	lahf   
  40e647:	sub    DWORD PTR [ecx-0x3b],0x6166881a
  40e64e:	xor    ebx,esi
  40e650:	leave  
  40e651:	loopne 0x40e5f4
  40e653:	and    edx,DWORD PTR [eax]
  40e655:	fwait
  40e656:	and    edi,esi
  40e658:	setb   al
  40e65b:	test   eax,0x126c5770
  40e660:	sbb    ebp,DWORD PTR [edx-0xb]
  40e663:	inc    ecx
  40e664:	mov    bh,0x19
  40e666:	outs   dx,BYTE PTR ds:[esi]
  40e667:	pop    ds
  40e668:	cli    
  40e669:	inc    eax
  40e66a:	inc    esi
  40e66b:	scas   eax,DWORD PTR es:[edi]
  40e66c:	cmp    dh,BYTE PTR [esi-0x50]
  40e66f:	test   DWORD PTR [edi+0x51],edi
  40e672:	loope  0x40e5fb
  40e674:	xchg   esp,eax
  40e675:	or     eax,0x1d787786
  40e67a:	inc    BYTE PTR [edx]
  40e67c:	in     al,0x84
  40e67e:	jb     0x40e656
  40e680:	into   
  40e681:	je     0x40e6fe
  40e683:	popa   
  40e684:	sbb    BYTE PTR [edi+0x6d],dh
  40e687:	mov    bl,0x9
  40e689:	mov    ecx,0x79577fd1
  40e68e:	pusha  
  40e68f:	jb     0x40e619
  40e691:	fcomp  DWORD PTR [eax+ebx*2-0x3905b631]
  40e698:	or     dl,BYTE PTR [edx]
  40e69a:	stos   BYTE PTR es:[edi],al
  40e69b:	stos   BYTE PTR es:[edi],al
  40e69c:	dec    edx
  40e69d:	mov    bh,0xfb
  40e69f:	mov    ds:0x5c30b3cc,al
  40e6a4:	push   ebx
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	(bad)  
  40e6a7:	mov    dl,0x5e
  40e6a9:	iret   
  40e6aa:	fwait
  40e6ab:	ret    0x1476
  40e6ae:	loopne 0x40e703
  40e6b0:	adc    ebp,DWORD PTR [edx-0x40f0983c]
  40e6b6:	imul   ecx,DWORD PTR [ebx+0x7f],0xe982324b
  40e6bd:	icebp  
  40e6be:	mov    al,0x8f
  40e6c0:	fs xchg esp,eax
  40e6c2:	dec    ecx
  40e6c3:	push   edx
  40e6c4:	call   0xbe8d9f15
  40e6c9:	jl     0x40e72a
  40e6cb:	lahf   
  40e6cc:	jnp    0x40e703
  40e6ce:	cmp    BYTE PTR [esi],0xb6
  40e6d1:	mov    BYTE PTR [ebx+ecx*4+0x13],bl
  40e6d5:	mov    eax,0x97966366
  40e6da:	push   edi
  40e6db:	pop    edx
  40e6dc:	inc    esp
  40e6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6de:	rcr    BYTE PTR [esp+eax*8-0x5a6f99c8],0x1e
  40e6e6:	jmp    0x2bd:0x18d3a9e9
  40e6ed:	mov    bh,0x15
  40e6ef:	loope  0x40e717
  40e6f1:	es cwde 
  40e6f3:	pushf  
  40e6f4:	popa   
  40e6f5:	rcr    DWORD PTR [eax+0x45f1ff25],cl
  40e6fb:	pusha  
  40e6fc:	and    dh,dh
  40e6fe:	shl    BYTE PTR [ecx+edx*1+0x436ae30c],cl
  40e705:	test   bh,bh
  40e707:	cld    
  40e708:	push   0xe377b4e1
  40e70d:	test   BYTE PTR [edx+0x7c9dbb42],cl
  40e713:	out    0x5a,al
  40e715:	inc    ebx
  40e716:	mov    ebp,0x4f9806ab
  40e71b:	mov    edx,0xfc20509f
  40e720:	ins    DWORD PTR es:[edi],dx
  40e721:	sub    edi,DWORD PTR [ecx+0x2e]
  40e724:	icebp  
  40e725:	ins    BYTE PTR es:[edi],dx
  40e726:	icebp  
  40e727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e728:	das    
  40e729:	dec    ebx
  40e72a:	mov    cl,0x28
  40e72c:	xchg   esp,eax
  40e72d:	mov    bh,BYTE PTR [esi]
  40e72f:	adc    DWORD PTR [eax],esp
  40e731:	cmp    al,0x11
  40e733:	ror    DWORD PTR [eax-0x4],cl
  40e736:	adc    BYTE PTR [esi+0x6f03832e],ch
  40e73c:	stos   BYTE PTR es:[edi],al
  40e73d:	lahf   
  40e73e:	and    eax,0x21ad18b2
  40e743:	push   eax
  40e744:	add    al,0x33
  40e746:	fild   DWORD PTR [ecx+0x6c]
  40e749:	aad    0x9a
  40e74b:	test   DWORD PTR [eax],esi
  40e74d:	mov    es,WORD PTR [esi+edx*1-0x1e35eaab]
  40e754:	push   ds
  40e755:	inc    ebp
  40e757:	sbb    al,0xc1
  40e759:	push   ecx
  40e75a:	or     DWORD PTR [ecx+0x1b],eax
  40e75d:	fimul  DWORD PTR [ecx-0x53]
  40e760:	pop    ds
  40e761:	dec    edi
  40e762:	dec    edx
  40e763:	(bad)  
  40e764:	sub    eax,0xe47b9efb
  40e769:	xor    bh,dh
  40e76b:	leave  
  40e76c:	inc    ebx
  40e76d:	sbb    BYTE PTR [edx+0x27ea03c7],al
  40e773:	fidivr DWORD PTR [ecx]
  40e775:	sbb    BYTE PTR [edx+0x5b559603],0xf5
  40e77c:	add    BYTE PTR [eax+0x7a],ch
  40e77f:	cmp    al,0xe6
  40e781:	and    al,BYTE PTR [ecx+0x66]
  40e784:	add    al,0xfd
  40e786:	mov    al,BYTE PTR [ebp+0x6b]
  40e789:	fimul  WORD PTR [ebp+0x28c7f7ff]
  40e78f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e790:	out    dx,eax
  40e791:	popa   
  40e792:	fidivr DWORD PTR [ecx]
  40e794:	fwait
  40e795:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e797:	aaa    
  40e798:	adc    BYTE PTR [edi+ecx*1+0x5],dl
  40e79c:	pop    ss
  40e79d:	cmp    al,0x82
  40e79f:	jbe    0x40e7f4
  40e7a1:	jmp    0x6d5e:0xcf17b6ce
  40e7a8:	inc    edi
  40e7a9:	cmc    
  40e7aa:	(bad)  
  40e7ab:	xlat   BYTE PTR ds:[ebx]
  40e7ac:	enter  0xed34,0xfe
  40e7b0:	stos   BYTE PTR es:[edi],al
  40e7b1:	(bad)  
  40e7b2:	xor    BYTE PTR [edi+0x21],ah
  40e7b5:	jle    0x40e795
  40e7b7:	jp     0x40e7b5
  40e7b9:	sbb    eax,0x3a183d5b
  40e7be:	push   ebp
  40e7bf:	fs leave 
  40e7c1:	adc    eax,DWORD PTR [ecx-0x490e1d30]
  40e7c7:	shl    BYTE PTR [eax-0x1c],0xd6
  40e7cb:	test   al,0xb8
  40e7cd:	nop
  40e7ce:	pushf  
  40e7cf:	daa    
  40e7d0:	icebp  
  40e7d1:	or     edi,esp
  40e7d3:	jns    0x40e802
  40e7d5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e7d7:	mov    eax,ds:0x95dffc1a
  40e7dc:	ror    DWORD PTR [ecx-0xb],cl
  40e7df:	jb     0x40e855
  40e7e1:	pop    ss
  40e7e2:	pop    ds
  40e7e3:	jp     0x40e841
  40e7e5:	(bad)  
  40e7e6:	scas   eax,DWORD PTR es:[edi]
  40e7e7:	(bad)  
  40e7e8:	mov    eax,ds:0x16b4baa2
  40e7ed:	inc    esi
  40e7ee:	call   0x75b4:0x6b949e46
  40e7f5:	or     dh,bl
  40e7f7:	mov    ebx,0xd02621cc
  40e7fc:	gs mov edi,0x6afc9b9e
  40e802:	pop    es
  40e803:	lahf   
  40e804:	std    
  40e805:	and    eax,0x74b15e3
  40e80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e80b:	mov    dl,0xd6
  40e80d:	test   al,0x4b
  40e80f:	ins    BYTE PTR es:[edi],dx
  40e810:	lods   eax,DWORD PTR ds:[esi]
  40e811:	dec    ebp
  40e812:	popf   
  40e813:	jno    0x40e859
  40e815:	add    al,0x28
  40e817:	into   
  40e818:	out    0xdc,al
  40e81a:	push   edx
  40e81b:	std    
  40e81c:	ficomp DWORD PTR [edi-0x21a4ca89]
  40e822:	add    al,0xa9
  40e824:	inc    ecx
  40e825:	(bad)  
  40e826:	popf   
  40e827:	pop    DWORD PTR ss:[ebx-0x5cf990b3]
  40e82e:	test   eax,0xa7392927
  40e833:	jmp    0x94b63828
  40e838:	mov    ch,0x2
  40e83a:	xor    dl,dh
  40e83c:	shl    BYTE PTR [edi+0x6c54aaf7],1
  40e842:	cmc    
  40e843:	and    edx,DWORD PTR [ebx-0x2d]
  40e846:	int    0x90
  40e848:	dec    ecx
  40e849:	dec    ecx
  40e84a:	mov    al,ds:0xbdf29bf2
  40e84f:	push   edx
  40e850:	cmp    cl,BYTE PTR [esi+ebp*1]
  40e853:	cmp    BYTE PTR [ebx],bh
  40e855:	dec    eax
  40e856:	sub    eax,0x36797ed3
  40e85b:	outs   dx,DWORD PTR ds:[esi]
  40e85c:	jno    0x40e813
  40e85e:	push   esi
  40e85f:	cmp    BYTE PTR [edx],cl
  40e861:	add    al,0xc7
  40e863:	popf   
  40e864:	pop    ebx
  40e865:	fstp   DWORD PTR [eax-0x80]
  40e868:	dec    esi
  40e869:	idiv   DWORD PTR [eax+0x77]
  40e86c:	xor    eax,DWORD PTR [eax-0x9]
  40e86f:	sahf   
  40e870:	sub    BYTE PTR [edx],dh
  40e872:	mov    cl,0x10
  40e874:	into   
  40e875:	mov    ds:0xd3c09fc3,eax
  40e87a:	inc    edx
  40e87b:	adc    ebx,DWORD PTR [ebp-0xa8a1f13]
  40e881:	call   0xd9c49fd0
  40e886:	sbb    esi,ebx
  40e888:	sbb    DWORD PTR ds:0x11ea1d98,esi
  40e88e:	retf   
  40e88f:	xchg   DWORD PTR ds:0xcfc31b5d,eax
  40e895:	test   BYTE PTR [ecx],0x4
  40e898:	popf   
  40e899:	xchg   ebx,eax
  40e89a:	add    BYTE PTR [edi],0xfb
  40e89d:	push   ds
  40e89e:	pop    ebp
  40e89f:	pop    esp
  40e8a0:	sub    al,BYTE PTR [esi+ebp*8+0x32]
  40e8a4:	scas   eax,DWORD PTR es:[edi]
  40e8a5:	mov    ch,0x1f
  40e8a7:	inc    edi
  40e8a8:	inc    edi
  40e8a9:	jbe    0x40e8b3
  40e8ab:	pop    edi
  40e8ac:	xor    edx,DWORD PTR [edi]
  40e8ae:	int3   
  40e8af:	and    eax,0xe972701
  40e8b4:	pop    ebp
  40e8b5:	mov    bl,0x38
  40e8b7:	xor    DWORD PTR [edi+0x0],ecx
  40e8ba:	sti    
  40e8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8bc:	pop    es
  40e8bd:	jb     0x40e872
  40e8bf:	xchg   DWORD PTR [esi+0x14],esi
  40e8c2:	cmp    al,0x54
  40e8c4:	bound  ebp,QWORD PTR [ecx+0x7dc31c32]
  40e8ca:	es pop ss
  40e8cc:	(bad)
  40e8d0:	adc    DWORD PTR [esi],edx
  40e8d2:	mov    esi,0x26a0d1e1
  40e8d7:	call   0xb204232d
  40e8dc:	cmc    
  40e8dd:	outs   dx,DWORD PTR ds:[esi]
  40e8de:	dec    ebx
  40e8df:	cmp    BYTE PTR [eax],0x50
  40e8e2:	out    dx,eax
  40e8e3:	dec    ecx
  40e8e4:	mov    WORD PTR [ebp+0x6990e09f],ds
  40e8ea:	lds    ecx,FWORD PTR [ebx+ebx*4]
  40e8ed:	sub    al,0x82
  40e8ef:	adc    DWORD PTR [edi],eax
  40e8f1:	int    0x77
  40e8f3:	jae    0x40e950
  40e8f5:	and    cl,ch
  40e8f7:	xchg   esi,eax
  40e8f8:	push   edi
  40e8f9:	sub    edx,ebx
  40e8fb:	or     al,0x58
  40e8fd:	cld    
  40e8fe:	push   DWORD PTR [edx-0x7c072402]
  40e904:	lods   eax,DWORD PTR ds:[esi]
  40e905:	test   al,0xac
  40e907:	jp     0x40e8c6
  40e909:	fwait
  40e90a:	pop    ss
  40e90b:	cmp    esi,DWORD PTR ds:0xe30121b8
  40e911:	imul   DWORD PTR [ebx+0x26]
  40e914:	and    DWORD PTR [ecx-0x46c5e13f],ebx
  40e91a:	scas   al,BYTE PTR es:[edi]
  40e91b:	in     eax,dx
  40e91c:	push   0x1c
  40e91e:	sbb    eax,0x8a83a33b
  40e923:	cmp    ebx,eax
  40e925:	adc    eax,0x530801d0
  40e92a:	jae    0x40e90c
  40e92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92d:	jg     0x40e962
  40e92f:	push   cs
  40e930:	lds    ecx,FWORD PTR [ebx-0xa]
  40e933:	mov    WORD PTR [edx],ds
  40e935:	rcr    DWORD PTR fs:[edx],0x9
  40e939:	fld    TBYTE PTR [ebx+0x45]
  40e93d:	adc    al,0x63
  40e93f:	jp     0x40e962
  40e941:	sbb    esp,DWORD PTR [eax-0x6c]
  40e944:	stos   DWORD PTR es:[edi],eax
  40e945:	sbb    DWORD PTR [edx+0x3c],0x48b5a73f
  40e94c:	ret    
  40e94d:	stos   DWORD PTR es:[edi],eax
  40e94e:	xchg   edi,eax
  40e94f:	movups XMMWORD PTR [ecx],xmm6
  40e952:	xchg   ebx,eax
  40e953:	and    ah,BYTE PTR [edx-0x5794d9ef]
  40e959:	push   eax
  40e95a:	xchg   ebp,eax
  40e95b:	push   ecx
  40e95c:	je     0x40e9bf
  40e95e:	scas   eax,DWORD PTR es:[edi]
  40e95f:	test   al,0x5c
  40e961:	test   eax,0x718a7ab6
  40e966:	pop    edi
  40e967:	dec    edx
  40e968:	outs   dx,BYTE PTR ds:[esi]
  40e969:	fld    DWORD PTR [edx-0x25]
  40e96c:	in     al,dx
  40e96d:	rcl    dh,0x5e
  40e970:	jecxz  0x40e944
  40e972:	sbb    BYTE PTR [eax+0x54],dh
  40e975:	pop    ds
  40e976:	jmp    0x40e9c0
  40e978:	sbb    DWORD PTR [esp+edi*4+0x598ff041],ebx
  40e97f:	(bad)  
  40e980:	xor    edx,DWORD PTR [esi+0x14]
  40e983:	push   esi
  40e984:	sbb    cl,BYTE PTR [esp+edx*4]
  40e987:	xchg   ebp,eax
  40e988:	dec    edi
  40e989:	push   ebx
  40e98a:	aad    0xa
  40e98c:	xor    BYTE PTR ss:[edi],bl
  40e98f:	xor    eax,0x91fb650b
  40e994:	mov    edi,0x68d20c7d
  40e999:	sbb    DWORD PTR [edx-0x86b2082],edi
  40e99f:	ins    BYTE PTR es:[edi],dx
  40e9a0:	outs   dx,DWORD PTR ds:[esi]
  40e9a1:	sub    al,0x89
  40e9a3:	adc    DWORD PTR [ebx],ebp
  40e9a5:	jns    0x40e9a3
  40e9a7:	dec    edx
  40e9a8:	sub    eax,0x99ec3666
  40e9ad:	add    al,BYTE PTR [esi+edx*1]
  40e9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b1:	add    al,0xc1
  40e9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b4:	sub    edx,esi
  40e9b6:	sbb    al,0x27
  40e9b8:	ins    BYTE PTR es:[edi],dx
  40e9b9:	and    BYTE PTR [edi+0x16],ah
  40e9bc:	inc    eax
  40e9bd:	das    
  40e9be:	js     0x40ea38
  40e9c0:	pop    ebx
  40e9c1:	imul   BYTE PTR [edx]
  40e9c3:	jbe    0x40e988
  40e9c5:	hlt    
  40e9c6:	and    dl,dh
  40e9c8:	dec    edi
  40e9c9:	aad    0xd
  40e9cb:	push   edi
  40e9cc:	(bad)  
  40e9cd:	stos   DWORD PTR es:[edi],eax
  40e9ce:	xor    DWORD PTR [ecx+0x76],ebx
  40e9d1:	mov    ds:0xafb4d265,eax
  40e9d6:	stc    
  40e9d7:	adc    bh,BYTE PTR [eax-0x26]
  40e9da:	sbb    eax,0xa393454c
  40e9df:	test   al,0x42
  40e9e1:	imul   ebx,DWORD PTR [ecx+0x3e96ed6a],0x38
  40e9e8:	mov    esi,0x47f2791
  40e9ed:	mov    ds:0x41d063e2,eax
  40e9f2:	icebp  
  40e9f3:	bound  edx,QWORD PTR [esi+0x3900a457]
  40e9f9:	std    
  40e9fa:	pop    ss
  40e9fb:	mov    es,WORD PTR [eax+eax*1]
  40e9fe:	xor    edx,ecx
  40ea00:	or     BYTE PTR [ebx-0x71],cl
  40ea03:	imul   ebp,DWORD PTR [edi],0x28391fa3
  40ea09:	nop
  40ea0a:	les    ebp,FWORD PTR [esi+0x3d6f0a83]
  40ea10:	xbegin 0x35e3b720
  40ea16:	mov    eax,ds:0x222f973e
  40ea1b:	out    dx,al
  40ea1c:	sub    BYTE PTR [edx],0x5e
  40ea1f:	lods   al,BYTE PTR ds:[esi]
  40ea20:	push   0x14e91580
  40ea25:	addr16 jl 0x40e9d1
  40ea28:	jno    0x40ea0e
  40ea2a:	fimul  WORD PTR [edx+0xb]
  40ea2d:	dec    ecx
  40ea2e:	aaa    
  40ea2f:	mov    bh,0x62
  40ea31:	das    
  40ea32:	repnz test DWORD PTR [edx-0xc4db818],esi
  40ea39:	or     bl,al
  40ea3b:	sti    
  40ea3c:	inc    ebx
  40ea3d:	xor    BYTE PTR [eax+0x2186d017],dh
  40ea43:	hlt    
  40ea44:	pusha  
  40ea45:	push   ds
  40ea46:	mov    esi,0xa27d3a7f
  40ea4b:	mov    edi,DWORD PTR [eax-0x5c]
  40ea4e:	gs aaa 
  40ea50:	push   ds
  40ea51:	sbb    al,0x36
  40ea53:	rol    BYTE PTR [esi+0x4],cl
  40ea56:	(bad)  
  40ea57:	repnz loopne 0x40eaba
  40ea5a:	rcr    BYTE PTR [edi+eax*8-0x64],1
  40ea5e:	scas   al,BYTE PTR es:[edi]
  40ea5f:	test   BYTE PTR [edi+0x1129fac5],dl
  40ea65:	xchg   edi,eax
  40ea66:	outs   dx,DWORD PTR ds:[esi]
  40ea67:	pop    es
  40ea68:	mov    DWORD PTR [esi+0x609ff2e],ebx
  40ea6e:	push   eax
  40ea6f:	jo     0x40ea82
  40ea71:	pop    esp
  40ea72:	sub    DWORD PTR [edx-0x9581d12],ecx
  40ea78:	mov    cl,0x9a
  40ea7a:	sub    eax,0x370f3e12
  40ea7f:	fbld   TBYTE PTR [ebp+0x79]
  40ea82:	xchg   edx,eax
  40ea83:	jmp    0xbecc:0x9dbf71fb
  40ea8a:	rcl    BYTE PTR [ebx+0x7e],0x93
  40ea8e:	sbb    al,0x6b
  40ea90:	cdq    
  40ea91:	adc    eax,0xcd72c354
  40ea96:	push   0xffffff8e
  40ea98:	and    BYTE PTR [esi-0x6acfb9fe],bl
  40ea9e:	repz xor al,0x6c
  40eaa1:	mov    dl,0xfb
  40eaa3:	mov    eax,ds:0x251e9487
  40eaa8:	aad    0x5b
  40eaaa:	xlat   BYTE PTR ds:[ebx]
  40eaab:	mov    al,0x17
  40eaad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaae:	sub    al,0xd4
  40eab0:	jle    0x40eb28
  40eab2:	ins    DWORD PTR es:[edi],dx
  40eab3:	cmp    al,0x83
  40eab5:	dec    edi
  40eab6:	inc    edi
  40eab7:	xchg   ebp,eax
  40eab8:	cdq    
  40eab9:	add    cl,BYTE PTR [ecx+edi*4]
  40eabc:	inc    esi
  40eabd:	lods   al,BYTE PTR ds:[esi]
  40eabe:	xchg   edx,eax
  40eabf:	push   ds
  40eac0:	fld    DWORD PTR [esi]
  40eac2:	shl    DWORD PTR [ebx+0x7383cf00],cl
  40eac8:	inc    esi
  40eac9:	in     eax,0xe7
  40eacb:	jecxz  0x40eae4
  40eacd:	jne    0x40eacd
  40eacf:	xchg   ebp,eax
  40ead0:	int    0xb7
  40ead2:	sub    dl,ch
  40ead4:	mul    BYTE PTR [eax]
  40ead6:	out    dx,eax
  40ead7:	test   al,0xdf
  40ead9:	push   edx
  40eada:	test   DWORD PTR [ebx],esp
  40eadc:	jl     0x40ea60
  40eade:	mov    esi,DWORD PTR [edx]
  40eae0:	seto   BYTE PTR [esi]
  40eae3:	pop    esi
  40eae4:	call   0xbeca:0xb6821310
  40eaeb:	mov    ebx,0xdfb453f1
  40eaf0:	int    0x43
  40eaf2:	cmp    al,BYTE PTR [edx+0x1b883e50]
  40eaf8:	push   ebp
  40eaf9:	out    0x3f,eax
  40eafb:	cs jmp 0x6e47:0x3497e271
  40eb03:	frstor [eax+edx*2+0x2a]
  40eb07:	dec    esp
  40eb08:	retf   0xeac1
  40eb0b:	stc    
  40eb0c:	repnz push 0xffffffe0
  40eb0f:	fwait
  40eb10:	push   0xcb978ba0
  40eb15:	retf   0x7b70
  40eb18:	daa    
  40eb19:	pop    esp
  40eb1a:	sub    cl,ah
  40eb1c:	dec    esp
  40eb1d:	sbb    ch,BYTE PTR [edx]
  40eb1f:	add    eax,0x3733df70
  40eb24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb25:	jns    0x40eb59
  40eb27:	mov    dl,al
  40eb29:	mov    DWORD PTR [esp+esi*2],eax
  40eb2c:	jae    0x40eb1a
  40eb2e:	int    0x3e
  40eb30:	popf   
  40eb31:	xchg   dh,dl
  40eb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb34:	rol    BYTE PTR [eax+ebx*4+0xe365240],1
  40eb3b:	cmp    cl,BYTE PTR [eax]
  40eb3d:	mov    dl,0x85
  40eb3f:	push   0x2bb61b5c
  40eb44:	in     al,0x7d
  40eb46:	js     0x40eb59
  40eb48:	push   0x5d
  40eb4a:	ds xor al,0xcc
  40eb4d:	jo     0x40eb44
  40eb4f:	dec    ebp
  40eb50:	in     al,0x26
  40eb52:	imul   edx,DWORD PTR [ebx+0x1f5221b0],0x50f3602a
  40eb5c:	icebp  
  40eb5d:	adc    DWORD PTR [eax-0x78],edx
  40eb60:	mov    al,0xc7
  40eb62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb63:	fsubr  st,st(3)
  40eb65:	and    eax,esp
  40eb67:	cmp    BYTE PTR [edx-0x17f63ef4],bh
  40eb6d:	mov    bl,0xa6
  40eb6f:	xchg   ebp,eax
  40eb70:	(bad)  
  40eb71:	aas    
  40eb72:	xchg   ecx,eax
  40eb73:	sbb    esi,DWORD PTR [bx+si]
  40eb76:	fcomp  QWORD PTR [edi+edi*4-0x1ea61b6c]
  40eb7d:	popf   
  40eb7e:	jl     0x40ebc0
  40eb80:	sub    ebx,DWORD PTR [bx+di+0x2a]
  40eb84:	sbb    DWORD PTR [ebx+0x5a],esi
  40eb87:	jno    0x40ebd0
  40eb89:	jnp    0x40eb7f
  40eb8b:	retf   0x5a80
  40eb8e:	lods   eax,DWORD PTR ds:[esi]
  40eb8f:	iret   
  40eb90:	mov    edx,0x17b6974
  40eb95:	xchg   BYTE PTR [eax-0x7bd5fc91],al
  40eb9b:	and    DWORD PTR [esi+0x66],0xffffffd6
  40eb9f:	add    DWORD PTR [ebx+0x455b1d8d],0xcd0b6c4
  40eba9:	cmp    DWORD PTR [esi+0x72ca2c1e],edx
  40ebaf:	lods   al,BYTE PTR ds:[esi]
  40ebb0:	sbb    esi,DWORD PTR [ecx+0x60]
  40ebb3:	push   edi
  40ebb4:	cdq    
  40ebb5:	or     BYTE PTR [eax+ecx*4+0x2c6caf2f],ah
  40ebbc:	jae    0x40eb50
  40ebbe:	out    dx,eax
  40ebbf:	jae    0x40eb69
  40ebc1:	(bad)  
  40ebc2:	jecxz  0x40ebd1
  40ebc4:	repz and BYTE PTR [esi],bl
  40ebc7:	push   ebp
  40ebc8:	repz arpl WORD PTR ss:[esi],bx
  40ebcc:	pushf  
  40ebcd:	xchg   esi,eax
  40ebce:	or     BYTE PTR ds:0xc442e236,al
  40ebd4:	mov    eax,ds:0xa22af579
  40ebd9:	xchg   edx,esi
  40ebdb:	mov    BYTE PTR [edi-0x6617cdf9],dl
  40ebe1:	jmp    0x1c4e297a
  40ebe6:	jmp    0x40ec14
  40ebe8:	xchg   esi,eax
  40ebe9:	push   ds
  40ebea:	jae    0x40eb97
  40ebec:	pop    esi
  40ebed:	repz mov al,0xa4
  40ebf0:	mov    gs,WORD PTR [ebx]
  40ebf2:	sbb    eax,0x7d79e30
  40ebf7:	pop    edx
  40ebf8:	int    0xcb
  40ebfa:	push   ebp
  40ebfb:	and    BYTE PTR [ecx-0x18],dh
  40ebfe:	jecxz  0x40ebc4
  40ec00:	xor    BYTE PTR [eax],ah
  40ec02:	pusha  
  40ec03:	leave  
  40ec04:	(bad)  
  40ec05:	mov    ch,0x32
  40ec07:	hlt    
  40ec08:	sbb    eax,0x5319909f
  40ec0d:	je     0x40ec0b
  40ec0f:	retf   
  40ec10:	mov    WORD PTR [esi],?
  40ec12:	scas   eax,DWORD PTR es:[edi]
  40ec13:	mov    edx,0x3012155
  40ec18:	mov    eax,0x94f6bba5
  40ec1d:	add    esi,DWORD PTR [ecx-0x4759c0ab]
  40ec23:	(bad)  
  40ec24:	iret   
  40ec25:	or     BYTE PTR [esi-0x358127d3],dl
  40ec2b:	mov    es,WORD PTR [esi-0x34]
  40ec2e:	sub    DWORD PTR [edi+0x5364c7c2],0xe91371f2
  40ec38:	mov    bh,0xc8
  40ec3a:	jb     0x40ec5f
  40ec3c:	mov    ds:0x33e9963a,al
  40ec41:	inc    edi
  40ec42:	leave  
  40ec43:	xor    eax,ecx
  40ec45:	test   cl,ah
  40ec47:	xor    DWORD PTR [esi-0x6f],0x7f
  40ec4b:	scas   al,BYTE PTR es:[edi]
  40ec4c:	mov    cl,0x99
  40ec4e:	mov    ecx,0x8549f41f
  40ec53:	and    eax,0xae00b835
  40ec58:	pusha  
  40ec59:	aas    
  40ec5a:	and    dl,bl
  40ec5c:	rcl    BYTE PTR [eax-0x7e4456a3],0x73
  40ec63:	mov    eax,ds:0x1cc8a8cd
  40ec68:	jmp    0xed8cc317
  40ec6d:	loop   0x40ece2
  40ec6f:	mov    esi,?
  40ec71:	push   ebp
  40ec72:	test   edi,ebx
  40ec74:	les    eax,FWORD PTR [eax]
  40ec76:	(bad)  
  40ec77:	shl    BYTE PTR [ebx+0x6a],1
  40ec7a:	add    eax,0xf3ea1653
  40ec7f:	ja     0x40ecc9
  40ec81:	dec    esp
  40ec82:	inc    edx
  40ec83:	jge    0x40ec9e
  40ec85:	stos   DWORD PTR es:[edi],eax
  40ec86:	pushf  
  40ec87:	data16 mov al,0xca
  40ec8a:	push   es
  40ec8b:	stos   DWORD PTR es:[edi],eax
  40ec8c:	sub    BYTE PTR [edi],al
  40ec8e:	ret    0x50c3
  40ec91:	int    0x8b
  40ec93:	call   FWORD PTR [esi+0x3cf61c12]
  40ec99:	cmp    ah,al
  40ec9b:	inc    eax
  40ec9c:	pop    esp
  40ec9d:	shl    BYTE PTR [edx-0x51],1
  40eca0:	sub    ch,BYTE PTR [edx]
  40eca2:	pusha  
  40eca3:	sbb    bl,cl
  40eca5:	pusha  
  40eca6:	out    dx,eax
  40eca7:	(bad)  [edi+eiz*4+0x6be08e2c]
  40ecae:	xchg   edi,eax
  40ecaf:	jp     0x40ecb1
  40ecb1:	fsubp  st(2),st
  40ecb3:	mov    ah,0x6c
  40ecb5:	scas   al,BYTE PTR es:[edi]
  40ecb6:	shl    cl,0x59
  40ecb9:	in     eax,dx
  40ecba:	mov    cl,0x5f
  40ecbc:	xchg   edi,eax
  40ecbd:	(bad)  
  40ecbe:	mov    edx,0xd8165efc
  40ecc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc4:	and    al,0xae
  40ecc6:	repnz push eax
  40ecc8:	sahf   
  40ecc9:	add    edi,DWORD PTR [esi+0x4c]
  40eccc:	and    ch,dl
  40ecce:	xchg   edi,eax
  40eccf:	pop    esi
  40ecd0:	dec    eax
  40ecd1:	xor    eax,0x2d267362
  40ecd6:	bnd jne 0x40ed37
  40ecd9:	mov    ah,0x86
  40ecdb:	mov    edi,0x89afaa2a
  40ece0:	jnp    0x40ecb4
  40ece2:	mov    dl,ah
  40ece4:	jb     0x40ec9b
  40ece6:	jae    0x40ecf0
  40ece8:	add    DWORD PTR [esi+0x4d77133d],ebx
  40ecee:	loopne 0x40ed00
  40ecf0:	mov    edi,0xd3d3eed0
  40ecf5:	int3   
  40ecf6:	arpl   WORD PTR [esi],sp
  40ecf8:	div    esi
  40ecfa:	js     0x40ed47
  40ecfc:	pop    ebp
  40ecfd:	stos   BYTE PTR es:[edi],al
  40ecfe:	cli    
  40ecff:	and    DWORD PTR [edx-0x45],0x15
  40ed03:	aaa    
  40ed04:	push   0x31
  40ed06:	or     al,0x53
  40ed08:	xchg   ecx,eax
  40ed09:	sub    BYTE PTR [edx],dl
  40ed0b:	cli    
  40ed0c:	xor    ebp,DWORD PTR [esi]
  40ed0e:	leave  
  40ed0f:	inc    ebp
  40ed10:	add    dh,BYTE PTR [ecx+0xc0dce24]
  40ed16:	push   esp
  40ed17:	jno    0x40ec9b
  40ed19:	mov    dl,0x4d
  40ed1b:	jmp    0x201336b5
  40ed20:	sbb    BYTE PTR [ebx-0x60],bh
  40ed23:	imul   esp,DWORD PTR [ebx+ebp*4],0x14
  40ed27:	loope  0x40ecdb
  40ed29:	ret    0x764d
  40ed2c:	jnp    0x40ecf5
  40ed2e:	mov    eax,0x1b68aed
  40ed33:	ds cmp al,0x1a
  40ed36:	leave  
  40ed37:	sub    BYTE PTR [esi-0x50ef0ea2],cl
  40ed3d:	mov    DWORD PTR [esi+ebp*8+0x6a5f779],ebx
  40ed44:	das    
  40ed45:	and    dh,0x4a
  40ed48:	fistp  WORD PTR [edi+ebp*1+0x502d0e38]
  40ed4f:	jmp    0x8f860c11
  40ed54:	push   esp
  40ed55:	mov    cs,WORD PTR [ebx-0x5e]
  40ed58:	call   DWORD PTR [ecx]
  40ed5a:	sub    eax,0x3caa1507
  40ed5f:	add    edx,DWORD PTR [ecx]
  40ed61:	fadd   QWORD PTR [ecx]
  40ed63:	pop    edx
  40ed64:	inc    ecx
  40ed65:	pop    esi
  40ed66:	fisttp QWORD PTR [ebx-0x3e81d219]
  40ed6c:	xchg   edx,eax
  40ed6d:	dec    ebx
  40ed6e:	fild   QWORD PTR [edi-0x60]
  40ed71:	mov    ch,0x4
  40ed73:	mov    eax,0x5affc2a
  40ed78:	jmp    0xb157:0x9fdec90e
  40ed7f:	jne    0x40eddc
  40ed81:	xchg   ebp,eax
  40ed82:	rep ins DWORD PTR es:[edi],dx
  40ed84:	jo     0x40edac
  40ed86:	sti    
  40ed87:	lods   eax,DWORD PTR ds:[esi]
  40ed88:	dec    eax
  40ed89:	push   ebx
  40ed8a:	adc    eax,0xe48ed161
  40ed8f:	or     DWORD PTR [ecx],esp
  40ed91:	clc    
  40ed92:	cmp    BYTE PTR ds:0x7ab1a8e8,bl
  40ed98:	add    BYTE PTR [edi],dh
  40ed9a:	push   ecx
  40ed9b:	dec    ebx
  40ed9c:	cmp    BYTE PTR [esi],0xcd
  40ed9f:	jle    0x40edbc
  40eda1:	or     DWORD PTR [ebp+0x2c3c8b47],esi
  40eda7:	push   eax
  40eda8:	int3   
  40eda9:	out    dx,al
  40edaa:	push   es
  40edab:	lods   eax,DWORD PTR ds:[esi]
  40edac:	jae    0x40ed4c
  40edae:	add    eax,DWORD PTR [esp+eiz*2+0x4432120d]
  40edb5:	cmp    al,dl
  40edb7:	cwde   
  40edb8:	lods   eax,DWORD PTR ds:[esi]
  40edb9:	ret    
  40edba:	out    dx,al
  40edbb:	add    cl,ch
  40edbd:	ror    ebx,1
  40edbf:	fistp  WORD PTR [ebx]
  40edc1:	les    esi,FWORD PTR [esi+edi*2-0x7a]
  40edc5:	inc    ebp
  40edc6:	test   eax,0xacc2aa8d
  40edcb:	pop    es
  40edcc:	inc    ecx
  40edcd:	xchg   bx,ax
  40edcf:	sahf   
  40edd0:	sub    esp,edi
  40edd2:	leave  
  40edd3:	out    dx,eax
  40edd4:	outs   dx,BYTE PTR ds:[esi]
  40edd5:	jns    0x40ee06
  40edd7:	in     eax,dx
  40edd8:	cmp    eax,0x876a8495
  40eddd:	inc    ebx
  40edde:	repz out dx,eax
  40ede0:	(bad)  
  40ede1:	fiadd  WORD PTR [ebp-0x3fa58cc4]
  40ede7:	xchg   edi,eax
  40ede8:	xor    dl,BYTE PTR [edx]
  40edea:	ss mov ch,0xd5
  40eded:	out    0x1f,eax
  40edef:	enter  0x3806,0xa3
  40edf3:	xchg   edx,eax
  40edf4:	and    al,0xa8
  40edf6:	mov    eax,0x779fb57
  40edfb:	dec    ebp
  40edfc:	js     0x40eda1
  40edfe:	mov    cl,0x66
  40ee00:	js     0x40edc8
  40ee02:	inc    ebx
  40ee03:	push   es
  40ee04:	xor    BYTE PTR [ebx],bl
  40ee06:	push   ebp
  40ee07:	adc    bl,ch
  40ee09:	stc    
  40ee0a:	rcl    BYTE PTR [edx+ebp*2],1
  40ee0d:	mov    ds:0x1f39f080,eax
  40ee12:	mov    esp,0x6beebec6
  40ee17:	leave  
  40ee18:	and    al,0x68
  40ee1a:	jb     0x40ee8c
  40ee1c:	and    BYTE PTR [esi-0x1dfb6e3a],bh
  40ee22:	cld    
  40ee23:	or     al,0x39
  40ee25:	mov    bh,0x31
  40ee27:	sub    edx,DWORD PTR [ecx]
  40ee29:	adc    al,0x58
  40ee2b:	int    0x56
  40ee2d:	push   DWORD PTR [ebp-0xe]
  40ee30:	jge    0x40eddc
  40ee32:	xor    DWORD PTR [eax+0x66],ebx
  40ee35:	iret   
  40ee36:	cmovg  ebp,ecx
  40ee39:	retf   
  40ee3a:	iret   
  40ee3b:	rcr    DWORD PTR [edi],1
  40ee3d:	sbb    ah,BYTE PTR [ebp-0x26f59509]
  40ee43:	inc    ebx
  40ee44:	bswap  esp
  40ee46:	in     eax,dx
  40ee47:	test   BYTE PTR [eax],dh
  40ee49:	cmp    al,0xd9
  40ee4b:	mov    ebx,0x6188777b
  40ee50:	xchg   esp,eax
  40ee51:	push   es
  40ee52:	cdq    
  40ee53:	sbb    DWORD PTR [edi-0x5d873875],ebp
  40ee59:	mov    ebp,0xdb2c072a
  40ee5e:	pop    eax
  40ee5f:	stos   DWORD PTR es:[edi],eax
  40ee60:	inc    edx
  40ee61:	and    al,0xb1
  40ee63:	sti    
  40ee64:	push   DWORD PTR [edi-0x14]
  40ee67:	xchg   ebx,eax
  40ee68:	dec    esi
  40ee69:	jbe    0x40eebd
  40ee6b:	repnz (bad) 
  40ee6d:	sahf   
  40ee6e:	das    
  40ee6f:	dec    edi
  40ee70:	push   ds
  40ee71:	mov    esp,DWORD PTR [esi]
  40ee73:	shr    BYTE PTR [eax],0x56
  40ee76:	dec    esi
  40ee77:	mov    ecx,0x2a428e0f
  40ee7c:	test   esp,edi
  40ee7e:	das    
  40ee7f:	push   edi
  40ee80:	dec    eax
  40ee81:	ins    BYTE PTR es:[edi],dx
  40ee82:	outs   dx,BYTE PTR ds:[esi]
  40ee83:	pushf  
  40ee84:	lods   al,BYTE PTR ds:[esi]
  40ee85:	push   ebx
  40ee86:	sub    BYTE PTR [esi-0x21],ah
  40ee89:	loope  0x40ee18
  40ee8b:	add    al,dh
  40ee8d:	or     BYTE PTR [edi-0x3f],cl
  40ee90:	adc    DWORD PTR [ebx-0x4951f967],0x93b8be6c
  40ee9a:	and    al,0x88
  40ee9c:	add    DWORD PTR [ecx+0x7a1af69d],0xffffffd9
  40eea3:	and    al,0x8d
  40eea5:	stc    
  40eea6:	xchg   esp,eax
  40eea7:	gs test ebp,ebx
  40eeaa:	ret    0xbb77
  40eead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeae:	int3   
  40eeaf:	out    0x68,al
  40eeb1:	mov    esi,0xc80b8535
  40eeb6:	and    al,0x27
  40eeb8:	test   esp,edi
  40eeba:	out    0xdd,eax
  40eebc:	inc    ebx
  40eebd:	fldcw  WORD PTR [ecx]
  40eebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec0:	mov    ch,BYTE PTR [esp+eax*4+0x7f04f97f]
  40eec7:	aaa    
  40eec8:	jge    0x40ef3b
  40eeca:	cmp    bh,BYTE PTR [ecx+0x1e20be99]
  40eed0:	mov    dl,0x5b
  40eed2:	mov    ebx,0x294352b8
  40eed7:	outs   dx,DWORD PTR ds:[esi]
  40eed8:	and    ch,al
  40eeda:	and    bl,cl
  40eedc:	push   ebx
  40eedd:	sub    BYTE PTR [esi],cl
  40eedf:	jecxz  0x40eedb
  40eee1:	jp     0x40ef58
  40eee3:	gs pop eax
  40eee5:	or     bl,dl
  40eee7:	mov    ?,WORD PTR ds:0x80bd49bf
  40eeed:	xor    esp,DWORD PTR [esi-0x4b]
  40eef0:	cmp    al,0x8c
  40eef2:	xchg   esi,eax
  40eef3:	pop    es
  40eef4:	dec    ebx
  40eef5:	fld    QWORD PTR [ebx+0x21]
  40eef8:	push   ss
  40eef9:	imul   edx,edi,0xffffffd4
  40eefc:	jg     0x40ef12
  40eefe:	je     0x40ef2a
  40ef00:	push   ebx
  40ef01:	lods   eax,DWORD PTR ds:[esi]
  40ef02:	daa    
  40ef03:	pop    es
  40ef04:	xchg   ebx,eax
  40ef05:	retf   0xc6e
  40ef08:	xchg   edx,eax
  40ef09:	js     0x40ef2a
  40ef0b:	repnz push edi
  40ef0d:	add    BYTE PTR [ecx-0x9],dh
  40ef10:	out    0x1,eax
  40ef12:	and    eax,0xc7ed0743
  40ef17:	stos   BYTE PTR es:[edi],al
  40ef18:	test   eax,0x49dda4c9
  40ef1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1e:	push   0x73
  40ef20:	outs   dx,DWORD PTR ds:[esi]
  40ef21:	ins    DWORD PTR es:[edi],dx
  40ef22:	adc    DWORD PTR [ebx-0x1e525700],0x63832736
  40ef2c:	pop    ds
  40ef2d:	in     al,dx
  40ef2e:	or     al,0x3
  40ef30:	pop    eax
  40ef31:	mov    ebp,0x5c82540a
  40ef36:	xchg   BYTE PTR [ebp-0x64],al
  40ef39:	sub    BYTE PTR [edx+ecx*8+0x364fcd05],bl
  40ef40:	push   ebp
  40ef41:	mov    ah,0x89
  40ef43:	and    eax,0xe32ea97d
  40ef48:	imul   eax,DWORD PTR [edx],0x5ed39277
  40ef4e:	mov    DWORD PTR [eax*1-0x55b74893],edi
  40ef55:	stos   BYTE PTR es:[edi],al
  40ef56:	je     0x40ef72
  40ef58:	sbb    eax,0xb2a3b4d2
  40ef5d:	div    BYTE PTR [ecx+0x7e]
  40ef60:	aas    
  40ef61:	aaa    
  40ef62:	das    
  40ef63:	cmp    DWORD PTR [ebx+ecx*4],ecx
  40ef66:	into   
  40ef67:	js     0x40ef42
  40ef69:	pop    edx
  40ef6a:	rcl    BYTE PTR [ebx-0x20],1
  40ef6d:	stos   DWORD PTR es:[edi],eax
  40ef6e:	clc    
  40ef6f:	adc    eax,0xfe73c142
  40ef74:	mov    dl,0xfd
  40ef76:	aam    0x36
  40ef78:	jnp    0x40efc6
  40ef7a:	pushf  
  40ef7b:	mov    ch,0x52
  40ef7d:	aam    0x3a
  40ef7f:	adc    BYTE PTR ds:0xa72b0c9,0x9c
  40ef86:	test   al,0xb8
  40ef88:	mov    eax,0x44516cee
  40ef8d:	out    0x60,al
  40ef8f:	(bad)  
  40ef91:	push   0x2e8dd9c9
  40ef96:	fld    TBYTE PTR [edx+0x6f]
  40ef99:	pusha  
  40ef9a:	add    BYTE PTR [eax+ebp*1+0x42c72119],cl
  40efa1:	pop    ebp
  40efa2:	pop    es
  40efa3:	scas   eax,DWORD PTR es:[edi]
  40efa4:	imul   esi,edx,0x698a64e0
  40efaa:	in     eax,0x70
  40efac:	cld    
  40efad:	or     al,0x32
  40efaf:	pop    es
  40efb0:	pop    ebx
  40efb1:	and    DWORD PTR [edi+0x5],esi
  40efb4:	ss or  al,0xed
  40efb7:	push   esp
  40efb8:	inc    edx
  40efb9:	(bad)  
  40efba:	stos   DWORD PTR es:[edi],eax
  40efbb:	call   0x15a11c39
  40efc0:	mov    ds:0x15d8e6f0,eax
  40efc5:	xchg   edx,eax
  40efc6:	ret    0x3436
  40efc9:	pop    ss
  40efca:	xor    esi,DWORD PTR [edx-0x5f]
  40efcd:	les    ebx,FWORD PTR [esi]
  40efcf:	repz xor dh,0x2
  40efd3:	out    dx,al
  40efd4:	pusha  
  40efd5:	sub    al,0xe7
  40efd7:	xchg   edx,eax
  40efd8:	test   bh,ah
  40efda:	sahf   
  40efdb:	jb     0x40ef66
  40efdd:	sub    DWORD PTR [edx-0x6e6ccc1e],esp
  40efe3:	xor    eax,0xec298c26
  40efe8:	and    BYTE PTR [ebp-0x4ba6a789],0x5b
  40efef:	popa   
  40eff0:	aad    0x93
  40eff2:	inc    ch
  40eff4:	cli    
  40eff5:	call   0xddc2:0xb5ff5736
  40effc:	and    ah,BYTE PTR [edi-0xf]
  40efff:	loop   0x40efbc
  40f001:	xchg   edx,eax
  40f002:	xchg   esi,eax
  40f003:	xor    BYTE PTR [esi-0x28ab4b55],0x5e
  40f00a:	ja     0x40f063
  40f00c:	pushf  
  40f00d:	xchg   ebp,eax
  40f00e:	call   0xd8f1260b
  40f013:	mov    eax,ds:0x5784662c
  40f018:	inc    ebx
  40f019:	cmp    DWORD PTR [edx+0xd694506],ebx
  40f01f:	mov    eax,0xc9ad5910
  40f024:	arpl   WORD PTR [eax+ecx*2+0xaa045e5],bp
  40f02b:	mov    bh,0xf4
  40f02d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f02e:	cli    
  40f02f:	or     ecx,DWORD PTR [esi]
  40f031:	xchg   ecx,eax
  40f032:	jl     0x40efd8
  40f034:	mov    al,BYTE PTR [edx]
  40f036:	inc    esi
  40f037:	jl     0x40f049
  40f039:	xor    BYTE PTR [esi],ch
  40f03b:	in     eax,dx
  40f03c:	je     0x40eff3
  40f03e:	test   ah,ch
  40f040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f041:	(bad)  
  40f042:	iret   
  40f043:	push   esp
  40f044:	push   ss
  40f045:	pushf  
  40f046:	xor    eax,0xb28df543
  40f04b:	push   cs
  40f04c:	push   0xa29cce41
  40f051:	or     eax,0xda1cf746
  40f056:	ss push es
  40f058:	call   0x396:0x6656a1e3
  40f05f:	sub    al,0x59
  40f061:	popf   
  40f062:	xchg   esi,eax
  40f063:	jp     0x40f0a5
  40f065:	gs push esi
  40f067:	cmp    esp,ecx
  40f069:	clc    
  40f06a:	std    
  40f06b:	inc    ebx
  40f06c:	dec    ebx
  40f06d:	pop    ss
  40f06e:	xor    BYTE PTR [edx+0x5b0a41b3],ch
  40f074:	dec    ebp
  40f075:	aaa    
  40f076:	in     eax,0x8e
  40f078:	outs   dx,BYTE PTR es:[esi]
  40f07a:	ins    BYTE PTR es:[edi],dx
  40f07b:	aas    
  40f07c:	sub    al,0x30
  40f07e:	call   0xd825a8c
  40f083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f084:	outs   dx,BYTE PTR ds:[esi]
  40f085:	dec    ebx
  40f086:	retf   
  40f087:	mov    ecx,?
  40f089:	(bad)  
  40f08a:	pop    ebx
  40f08b:	cmp    cl,al
  40f08d:	push   esp
  40f08e:	ret    0xf623
  40f091:	add    al,ch
  40f093:	sbb    DWORD PTR [edi],0x56a38445
  40f099:	mov    al,ds:0xbbb48ccd
  40f09e:	test   BYTE PTR [esi-0x74],bl
  40f0a1:	popa   
  40f0a2:	mov    esi,0x2d0b7293
  40f0a7:	daa    
  40f0a8:	jmp    0x91ea:0x290d68ff
  40f0af:	nop
  40f0b0:	(bad)  
  40f0b1:	push   ebp
  40f0b2:	loop   0x40f05f
  40f0b4:	adc    eax,0xf9280560
  40f0b9:	jns    0x40f0e5
  40f0bb:	push   edi
  40f0bc:	cmp    esp,edi
  40f0be:	test   BYTE PTR [ebx+0x1a51a254],0x9d
  40f0c5:	xor    al,0xa3
  40f0c7:	frstor [eax+0x6e]
  40f0ca:	push   ebx
  40f0cb:	stc    
  40f0cc:	push   edx
  40f0cd:	lds    ebx,FWORD PTR [esi]
  40f0cf:	adc    DWORD PTR [ecx],ebx
  40f0d1:	pop    edi
  40f0d2:	inc    ecx
  40f0d3:	mov    ds:0x34007241,al
  40f0d8:	je     0x40f0d0
  40f0da:	fs sub eax,0x32c7235
  40f0e0:	push   ecx
  40f0e1:	or     BYTE PTR [eax+0x24dac760],dh
  40f0e7:	adc    ecx,edx
  40f0e9:	dec    edx
  40f0ea:	popf   
  40f0eb:	ins    BYTE PTR es:[edi],dx
  40f0ec:	lea    ebx,[ebp+0x38e64f4c]
  40f0f2:	lods   al,BYTE PTR ds:[esi]
  40f0f3:	inc    eax
  40f0f4:	into   
  40f0f5:	loopne 0x40f136
  40f0f7:	test   eax,0x3abe779e
  40f0fc:	or     DWORD PTR [edx-0x12],edi
  40f0ff:	(bad)  
  40f100:	dec    edi
  40f101:	mov    edx,DWORD PTR [ecx-0x2d9c9539]
  40f107:	cmp    eax,0x7f6821c4
  40f10c:	jp     0x40f114
  40f10e:	jle    0x40f0b1
  40f110:	out    0xec,eax
  40f112:	and    esi,DWORD PTR [eax]
  40f114:	xchg   ebp,esi
  40f116:	jg     0x40f18b
  40f118:	(bad)
  40f11c:	dec    edx
  40f11d:	or     eax,0xbd1fe6c0
  40f122:	fisub  WORD PTR [ecx+0x1035710a]
  40f128:	mov    esp,0x3f4bafd1
  40f12d:	sahf   
  40f12e:	jecxz  0x40f0c6
  40f130:	sub    eax,0xd8f8dd26
  40f135:	into   
  40f136:	les    esp,FWORD PTR [ebp-0x67]
  40f139:	xor    DWORD PTR [ebp-0x2c],edx
  40f13c:	sub    edi,ecx
  40f13e:	mov    ds:0xde8949b3,eax
  40f143:	add    BYTE PTR [esi+esi*8-0xe93f71e],bl
  40f14a:	add    bh,ch
  40f14c:	sbb    BYTE PTR [edx+ebx*1+0x5903cf49],bl
  40f153:	jne    0x40f0f9
  40f155:	push   ds
  40f156:	mov    cl,BYTE PTR [eax+eiz*1+0x49c333aa]
  40f15d:	inc    esi
  40f15e:	add    al,0xba
  40f160:	xchg   edx,eax
  40f161:	call   0xa9a3cfed
  40f166:	jns    0x40f162
  40f168:	mov    esp,0x4a5eb0b5
  40f16d:	push   cs
  40f16e:	sub    eax,0x49404108
  40f173:	ret    
  40f174:	or     al,BYTE PTR [edx+eax*4+0x46a42132]
  40f17b:	push   0xe9c9653b
  40f180:	sbb    BYTE PTR [ecx],0xd8
  40f183:	push   ds
  40f184:	cli    
  40f185:	jmp    0x27da71a7
  40f18a:	leave  
  40f18b:	inc    esp
  40f18c:	push   edx
  40f18d:	(bad)  
  40f18f:	cli    
  40f190:	ins    BYTE PTR es:[edi],dx
  40f191:	data16 loope 0x40f148
  40f194:	sar    BYTE PTR [eax],1
  40f196:	sub    cl,BYTE PTR [esi+0x2812c0b4]
  40f19c:	cmp    DWORD PTR [ecx+0x4b67370f],ebx
  40f1a2:	aaa    
  40f1a3:	dec    esp
  40f1a4:	push   esi
  40f1a5:	cmp    cl,dh
  40f1a7:	div    BYTE PTR [edx-0x40]
  40f1aa:	mov    ds:0x48f2d37e,al
  40f1af:	mov    ah,0x97
  40f1b1:	clc    
  40f1b2:	and    cl,bl
  40f1b4:	stos   DWORD PTR es:[edi],eax
  40f1b5:	or     ch,0xfd
  40f1b8:	mov    edi,0x379ef611
  40f1bd:	jb     0x40f169
  40f1bf:	enter  0xa433,0xe
  40f1c3:	fldcw  WORD PTR [esi]
  40f1c5:	xor    eax,edx
  40f1c7:	rcl    BYTE PTR [ecx],cl
  40f1c9:	stc    
  40f1ca:	adc    al,0x6a
  40f1cc:	into   
  40f1cd:	push   es
  40f1ce:	xor    bh,bl
  40f1d0:	push   esi
  40f1d1:	les    ebp,FWORD PTR [edi-0x27]
  40f1d4:	push   esi
  40f1d5:	mov    edx,0x942a7760
  40f1da:	push   ds
  40f1db:	xor    DWORD PTR [esi],ebp
  40f1dd:	call   0x3d52:0x3bf2820
  40f1e4:	inc    ebp
  40f1e5:	pop    ebx
  40f1e6:	scas   eax,DWORD PTR es:[edi]
  40f1e7:	and    DWORD PTR [esi+eax*2-0x317fa8f2],0xffffffaf
  40f1ef:	jne    0x40f1ef
  40f1f1:	and    al,0x72
  40f1f3:	iret   
  40f1f4:	mov    ebp,0x6828820a
  40f1f9:	mov    edx,0x21c8dd82
  40f1fe:	fiadd  DWORD PTR [ecx+esi*2]
  40f201:	sbb    edi,edx
  40f203:	add    BYTE PTR [eax-0xfca8afa],ch
  40f209:	outs   dx,DWORD PTR ds:[esi]
  40f20a:	xchg   ebp,eax
  40f20b:	mov    ebp,DWORD PTR [ebx]
  40f20d:	push   edx
  40f20e:	mov    ebp,0x5d9b8863
  40f213:	push   ss
  40f214:	pop    esp
  40f215:	and    BYTE PTR [esp+ebx*1],ah
  40f218:	push   0x603bd04
  40f21d:	and    BYTE PTR [esi],bh
  40f21f:	div    edx
  40f221:	aam    0x5a
  40f223:	rol    BYTE PTR ds:0xba646ed3,0xe5
  40f22a:	ja     0x40f1f1
  40f22c:	retf   0x31af
  40f22f:	retf   0xba9b
  40f232:	psubd  mm5,QWORD PTR [edx-0x6c]
  40f236:	mov    esp,0x3bbd57db
  40f23b:	xchg   esp,eax
  40f23c:	xor    BYTE PTR [esi+0x56049f20],0x12
  40f243:	jnp    0x40f211
  40f245:	xchg   edx,eax
  40f246:	std    
  40f247:	add    eax,DWORD PTR [eax-0x1b]
  40f24a:	or     edi,DWORD PTR [ebp-0x52]
  40f24d:	adc    al,BYTE PTR [ecx+0xb3b4fc9]
  40f253:	(bad)  
  40f255:	pop    eax
  40f256:	sbb    al,0xd6
  40f258:	loopne 0x40f20a
  40f25a:	xor    BYTE PTR [ecx-0x25e63ed3],bh
  40f260:	push   ds
  40f261:	mov    ch,0x4e
  40f263:	cli    
  40f264:	rol    DWORD PTR ds:0xdf31858c,cl
  40f26a:	adc    dh,dh
  40f26c:	idiv   BYTE PTR [ebx]
  40f26e:	imul   edi,DWORD PTR [ebp-0x33f54540],0xffffffa0
  40f275:	outs   dx,DWORD PTR ds:[esi]
  40f276:	add    al,0x4e
  40f278:	fs aas 
  40f27a:	ins    BYTE PTR es:[edi],dx
  40f27b:	fwait
  40f27c:	push   ecx
  40f27d:	jecxz  0x40f2d6
  40f27f:	push   ss
  40f280:	jle    0x40f241
  40f282:	add    esi,ebx
  40f284:	xchg   edx,eax
  40f285:	arpl   ax,di
  40f287:	cli    
  40f288:	sub    esi,edi
  40f28a:	mov    al,ds:0xcae5f2a5
  40f28f:	mov    edi,0xef319813
  40f294:	(bad)  
  40f295:	aaa    
  40f296:	jecxz  0x40f2d3
  40f298:	sbb    eax,0x3fe866ef
  40f29d:	xchg   edx,eax
  40f29e:	scas   eax,DWORD PTR es:[edi]
  40f29f:	jmp    0x40e4:0x9286fcbb
  40f2a6:	xchg   edi,eax
  40f2a7:	or     esp,edi
  40f2a9:	mov    DWORD PTR [eax-0x45],edi
  40f2ac:	rcr    ecx,cl
  40f2ae:	rcl    al,cl
  40f2b0:	cmp    ecx,esp
  40f2b2:	mov    ebp,cr0
  40f2b5:	cwde   
  40f2b6:	xchg   esp,eax
  40f2b7:	sahf   
  40f2b8:	sbb    al,0xf3
  40f2ba:	mov    dh,cl
  40f2bc:	outs   dx,BYTE PTR ds:[esi]
  40f2bd:	imul   ecx,DWORD PTR cs:[esi],0x8628c0b
  40f2c4:	and    edi,DWORD PTR [ebp+0x35]
  40f2c7:	push   0x6defde49
  40f2cc:	inc    edi
  40f2cd:	jmp    0xb014:0x837ad42e
  40f2d4:	xor    eax,0xc6a5723b
  40f2d9:	jb     0x40f2f3
  40f2db:	push   esp
  40f2dc:	(bad)  
  40f2dd:	loop   0x40f2b0
  40f2df:	mov    ah,0x9f
  40f2e1:	fcomp  st(0)
  40f2e3:	repnz lods al,BYTE PTR ds:[esi]
  40f2e5:	mov    edi,0x26d77532
  40f2ea:	pop    edx
  40f2eb:	push   cs
  40f2ec:	push   edi
  40f2ed:	push   ebp
  40f2ee:	test   eax,0x75cd1613
  40f2f3:	je     0x40f345
  40f2f5:	mov    bh,0x8b
  40f2f7:	cmp    bl,al
  40f2f9:	xchg   edx,eax
  40f2fa:	xor    al,0xde
  40f2fc:	and    ebp,edx
  40f2fe:	jmp    0xc5fa:0xd267b923
  40f305:	jp     0x40f36b
  40f307:	sbb    dl,BYTE PTR [ebp-0x72322cfa]
  40f30d:	dec    edx
  40f30e:	mov    ah,0xa2
  40f310:	fcomp  DWORD PTR [esi+0x6d8430af]
  40f316:	mov    al,0xe5
  40f318:	sub    BYTE PTR [si-0x6039],0xca
  40f31e:	push   edi
  40f31f:	inc    ebx
  40f320:	jmp    0xc2079241
  40f325:	outs   dx,BYTE PTR ds:[esi]
  40f326:	cs mov WORD PTR gs:[esi],?
  40f32a:	clc    
  40f32b:	add    cl,dh
  40f32d:	(bad)  
  40f32e:	inc    ebp
  40f32f:	jecxz  0x40f2f4
  40f331:	test   bh,0xe5
  40f334:	xchg   edi,eax
  40f335:	mov    bh,0xf5
  40f337:	jl     0x40f334
  40f339:	shl    BYTE PTR [edi+edi*1],1
  40f33c:	ins    BYTE PTR es:[edi],dx
  40f33d:	jge    0x224404c2
  40f343:	push   edi
  40f344:	xor    BYTE PTR [edi-0x46],bh
  40f347:	cmp    DWORD PTR [ecx-0x54],esp
  40f34a:	in     eax,dx
  40f34b:	fmul   DWORD PTR [edx+0x6f]
  40f34e:	sbb    BYTE PTR [eax-0x75],bh
  40f351:	cmc    
  40f352:	pop    ds
  40f353:	pushf  
  40f354:	loop   0x40f308
  40f356:	cmp    al,0x9a
  40f358:	mov    dh,0x2b
  40f35a:	adc    eax,0xa68f818f
  40f35f:	adc    bh,BYTE PTR [eax+0x14147ae5]
  40f365:	mov    ds:0x99f0ee05,eax
  40f36a:	adc    esp,DWORD PTR [ecx]
  40f36c:	(bad)  
  40f36d:	jo     0x40f36c
  40f36f:	jmp    0x40f368
  40f371:	cmc    
  40f372:	dec    ecx
  40f373:	jg     0x40f370
  40f375:	sub    BYTE PTR [esp+ebp*2],bh
  40f378:	xchg   ecx,eax
  40f379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f37a:	mov    WORD PTR [ebx],?
  40f37c:	out    dx,al
  40f37d:	adc    ch,0xb0
  40f380:	test   BYTE PTR [ecx+0x2be92e9],0x8a
  40f387:	pop    esp
  40f388:	daa    
  40f389:	in     eax,0x2f
  40f38b:	jnp    0x40f388
  40f38d:	cdq    
  40f38e:	shl    DWORD PTR [eax-0x71],cl
  40f391:	jbe    0x40f32a
  40f393:	xchg   BYTE PTR ds:0xb041daaa,bh
  40f399:	jl     0x40f3bf
  40f39b:	inc    esi
  40f39c:	test   BYTE PTR [esi-0x61],0x9d
  40f3a0:	sar    DWORD PTR [edi+0x14],0xcd
  40f3a4:	out    0xdd,al
  40f3a6:	inc    esp
  40f3a7:	call   edx
  40f3a9:	(bad)  
  40f3ab:	mov    bl,0x98
  40f3ad:	push   es
  40f3ae:	fld    TBYTE PTR [ecx+ebx*8+0x53227d17]
  40f3b5:	xchg   BYTE PTR ds:0xe52af950,cl
  40f3bb:	adc    BYTE PTR [ecx],ch
  40f3bd:	adc    eax,0x7d0e0395
  40f3c2:	fdivp  st(6),st
  40f3c4:	shr    DWORD PTR [ebx],0x61
  40f3c7:	jp     0x40f35e
  40f3c9:	cld    
  40f3ca:	fimul  DWORD PTR [ecx-0x2d]
  40f3cd:	aad    0x76
  40f3cf:	idiv   BYTE PTR [esi+ebx*1-0x22e39f10]
  40f3d6:	adc    BYTE PTR [ecx+0x6de6cdf2],bl
  40f3dc:	jmp    0x500c:0x891b281b
  40f3e3:	xor    cl,cl
  40f3e5:	jb     0x40f37c
  40f3e7:	inc    edx
  40f3e8:	inc    esi
  40f3e9:	idiv   DWORD PTR ds:0xd68488e5
  40f3ef:	icebp  
  40f3f0:	mov    bh,0x3
  40f3f2:	mov    dh,0xa6
  40f3f4:	and    ecx,edx
  40f3f6:	fisub  DWORD PTR [ebx-0xd]
  40f3f9:	ficom  DWORD PTR ds:0x6534d50a
  40f3ff:	ret    0xc7f7
  40f402:	jnp    0x40f465
  40f404:	jge    0x40f467
  40f406:	fisubr WORD PTR [esi+0x10]
  40f409:	call   0xe0a1d998
  40f40e:	xchg   ebx,eax
  40f40f:	push   esi
  40f410:	push   ds
  40f411:	(bad)  
  40f412:	sbb    bh,dl
  40f414:	repnz lahf 
  40f416:	bound  edx,QWORD PTR ds:0x3479aa17
  40f41c:	lods   al,BYTE PTR ds:[esi]
  40f41d:	inc    esp
  40f41e:	dec    ebx
  40f41f:	jp     0x40f3c2
  40f421:	pop    eax
  40f422:	push   ebp
  40f423:	xchg   ecx,eax
  40f424:	xchg   esp,eax
  40f425:	mov    al,ds:0x3a095600
  40f42a:	aam    0x47
  40f42c:	and    al,0xad
  40f42e:	psubq  mm3,QWORD PTR [edi+0x31]
  40f432:	ds (bad) 
  40f434:	cdq    
  40f435:	adc    eax,0x4079e1a7
  40f43a:	sbb    BYTE PTR [ebx],dl
  40f43c:	xchg   ebp,eax
  40f43d:	test   al,0x29
  40f43f:	sbb    al,0x58
  40f441:	sar    dl,1
  40f443:	inc    edx
  40f444:	jl     0x40f45c
  40f446:	fild   QWORD PTR [ebx+0x33]
  40f449:	icebp  
  40f44a:	loope  0x40f3dc
  40f44c:	iret   
  40f44d:	je     0x40f3e0
  40f44f:	dec    ecx
  40f450:	int    0x15
  40f452:	and    al,0x11
  40f454:	fild   QWORD PTR [ebp-0x35]
  40f457:	mov    ch,0x91
  40f459:	or     DWORD PTR [edx+0x68],0xfd3feefd
  40f460:	jo     0x40f422
  40f462:	fstp   st(2)
  40f464:	sbb    al,0x32
  40f466:	and    al,0x30
  40f468:	or     esp,DWORD PTR [esi-0x4da58db5]
  40f46e:	cli    
  40f46f:	mov    ebx,0xa3d995e
  40f474:	or     DWORD PTR [edx-0x37ae9a6a],ebp
  40f47a:	ja     0x40f4e6
  40f47c:	cdq    
  40f47d:	in     al,0xa8
  40f47f:	stos   DWORD PTR es:[edi],eax
  40f480:	(bad)  
  40f481:	retf   
  40f482:	mov    ds:0xcfce1845,al
  40f487:	ins    BYTE PTR es:[edi],dx
  40f488:	jne    0x40f442
  40f48a:	pop    eax
  40f48b:	sbb    BYTE PTR [eax-0x11],bl
  40f48e:	dec    esp
  40f48f:	dec    ecx
  40f490:	jno    0x40f501
  40f492:	fsub   QWORD PTR [ebx-0xc]
  40f495:	jns    0x40f463
  40f497:	pop    ds
  40f498:	data16 sub dh,BYTE PTR [esi+0x2e]
  40f49c:	out    dx,al
  40f49d:	clc    
  40f49e:	push   eax
  40f49f:	int    0xdf
  40f4a1:	inc    BYTE PTR [ecx-0x3e]
  40f4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4a5:	fwait
  40f4a6:	in     al,0xfa
  40f4a8:	inc    edx
  40f4a9:	or     edi,DWORD PTR [edi+eax*2-0x721b553f]
  40f4b0:	mov    ebp,0xae95839a
  40f4b5:	addr16 inc edx
  40f4b7:	pop    ebp
  40f4b8:	pop    ecx
  40f4b9:	out    0xd,al
  40f4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4bc:	and    edx,DWORD PTR [edx]
  40f4be:	adc    esi,DWORD PTR [edi-0x654f1f23]
  40f4c4:	mov    ebx,0x4295a44c
  40f4ca:	jne    0x40f4ee
  40f4cc:	pusha  
  40f4cd:	lahf   
  40f4ce:	scas   al,BYTE PTR es:[edi]
  40f4cf:	xchg   DWORD PTR [edi-0x11],eax
  40f4d2:	sar    BYTE PTR gs:[esi],cl
  40f4d5:	cwde   
  40f4d6:	xor    dh,bh
  40f4d8:	push   edx
  40f4d9:	and    BYTE PTR [ebp+0x244f0f7e],dl
  40f4df:	pop    ss
  40f4e0:	pop    ecx
  40f4e1:	adc    DWORD PTR [ebx+0x25],esp
  40f4e4:	inc    ebp
  40f4e5:	mov    dh,0x32
  40f4e7:	rol    DWORD PTR ds:[ebx+edi*8],cl
  40f4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ec:	and    bh,BYTE PTR [eax-0x7f]
  40f4ef:	mov    ebp,0xff0fdc38
  40f4f4:	mov    DWORD PTR [ebx+0x2b],ebp
  40f4f7:	sbb    BYTE PTR [ebx],0x9c
  40f4fa:	frstor [edx]
  40f4fc:	pop    ss
  40f4fd:	ins    DWORD PTR es:[edi],dx
  40f4fe:	dec    eax
  40f4ff:	mov    ebp,0xd0e55416
  40f504:	rol    DWORD PTR [edi-0x3],cl
  40f507:	mov    WORD PTR [ebx+0x2b],ss
  40f50a:	jl     0x40f4a9
  40f50c:	ss mov edi,0xf5697542
  40f512:	fdivr  QWORD PTR [eax-0x1bf499e3]
  40f518:	inc    esi
  40f519:	cmc    
  40f51a:	mov    bl,0x82
  40f51c:	add    DWORD PTR [ebx],edx
  40f51e:	inc    esi
  40f51f:	and    bl,BYTE PTR [edx-0x4d]
  40f522:	push   ss
  40f523:	cmp    eax,0x3ff589ea
  40f528:	mov    eax,0xa70b29f2
  40f52d:	not    BYTE PTR [ecx-0x43]
  40f530:	push   cs
  40f531:	jbe    0x40f508
  40f533:	rcr    DWORD PTR [eax+esi*1+0x6a9e0bd6],cl
  40f53a:	nop
  40f53b:	and    DWORD PTR [edi-0x3e],esi
  40f53e:	push   es
  40f53f:	scas   al,BYTE PTR es:[edi]
  40f540:	pop    es
  40f541:	mov    esi,0x64e0d084
  40f546:	or     eax,0x23ff8706
  40f54b:	rcl    DWORD PTR [ecx],0x21
  40f54e:	out    0xf5,al
  40f550:	out    dx,eax
  40f551:	lea    edx,[edi]
  40f553:	aas    
  40f554:	cmp    al,0xeb
  40f556:	add    DWORD PTR [ebp-0x36],esp
  40f559:	jge    0x40f5bf
  40f55b:	loop   0x40f5d9
  40f55d:	push   ss
  40f55e:	mov    ebp,0x1ee7930
  40f563:	pop    ecx
  40f564:	std    
  40f565:	adc    ch,BYTE PTR [eax]
  40f567:	dec    edi
  40f568:	dec    si
  40f56a:	daa    
  40f56b:	fdivr  DWORD PTR [edx-0x22]
  40f56e:	mov    cl,0xf1
  40f570:	xchg   ebx,eax
  40f571:	sahf   
  40f572:	jno    0x40f541
  40f574:	pop    ebx
  40f575:	aad    0x13
  40f577:	sub    bh,BYTE PTR [edx+0x46]
  40f57a:	cmp    BYTE PTR [esi-0x6c],ch
  40f57d:	xchg   ecx,eax
  40f57e:	xchg   BYTE PTR [ebp-0x353638f5],ch
  40f584:	stc    
  40f585:	in     eax,dx
  40f586:	or     eax,0xe812a5df
  40f58b:	xor    ah,ah
  40f58d:	ucomiss xmm7,DWORD PTR [edx-0x40]
  40f591:	mov    edi,0xf6c9f345
  40f596:	inc    edx
  40f597:	pop    ebx
  40f598:	pop    esi
  40f599:	or     al,BYTE PTR [edi]
  40f59b:	dec    edx
  40f59c:	cmp    dl,BYTE PTR ds:0x72b6092d
  40f5a2:	cmp    eax,edx
  40f5a4:	arpl   cx,si
  40f5a6:	test   eax,0x2e18971a
  40f5ab:	mov    ds:0xf899d31f,eax
  40f5b0:	loop   0x40f562
  40f5b2:	mov    ebp,0xabccc78
  40f5b7:	mov    DWORD PTR [esi-0x3b],ecx
  40f5ba:	in     al,0x9e
  40f5bc:	jae    0x40f59e
  40f5be:	or     al,0x6b
  40f5c0:	push   esp
  40f5c1:	rol    DWORD PTR [ecx],cl
  40f5c3:	xor    DWORD PTR [eax],0x53
  40f5c6:	push   ecx
  40f5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5c8:	(bad)  
  40f5c9:	mov    edx,0x9c248918
  40f5ce:	sbb    dl,0xb8
  40f5d1:	das    
  40f5d2:	loope  0x40f64c
  40f5d4:	imul   eax,DWORD PTR [esi-0xe725c04],0xffffff81
  40f5db:	dec    ecx
  40f5dc:	jmp    DWORD PTR [ecx+0x50a5b335]
  40f5e2:	jmp    0x1935b72e
  40f5e7:	cwde   
  40f5e8:	xor    DWORD PTR cs:[eax],edi
  40f5eb:	jge    0x40f5ad
  40f5ed:	in     al,0xe7
  40f5ef:	test   eax,0x1824949b
  40f5f4:	popf   
  40f5f5:	cmc    
  40f5f6:	add    eax,0x7323b9dd
  40f5fb:	daa    
  40f5fc:	sub    al,0xfa
  40f5fe:	xor    DWORD PTR ds:0x45458549,esp
  40f604:	jb     0x40f5cf
  40f606:	arpl   WORD PTR [ecx+0x7a],si
  40f609:	dec    edx
  40f60a:	pop    esp
  40f60b:	mov    cl,BYTE PTR [edi+ecx*4]
  40f60e:	pop    ds
  40f60f:	ds mov ah,0x11
  40f612:	lods   al,BYTE PTR ds:[esi]
  40f613:	ins    BYTE PTR es:[edi],dx
  40f614:	or     DWORD PTR [edx-0x12],ebp
  40f617:	cmp    bl,0xe5
  40f61a:	mov    ah,dl
  40f61c:	sub    BYTE PTR [ecx-0x33230d82],0x8d
  40f623:	(bad)  
  40f625:	cmp    edx,DWORD PTR [ebp-0x34]
  40f628:	sar    DWORD PTR [edi],0x7f
  40f62b:	test   edx,0x2f5c63ab
  40f631:	fmulp  st(4),st
  40f633:	popf   
  40f634:	mov    edx,0xca89886a
  40f63a:	(bad)  
  40f63b:	fmul   st,st(7)
  40f63d:	push   ds
  40f63e:	(bad)  
  40f63f:	rcr    BYTE PTR [eax+0x51fed62f],cl
  40f645:	bswap  esp
  40f647:	jae    0x40f5e4
  40f649:	add    eax,0x9caf317e
  40f64e:	pop    esp
  40f64f:	aaa    
  40f650:	add    eax,0x165b6dd9
  40f655:	pop    es
  40f656:	stos   BYTE PTR es:[edi],al
  40f657:	mov    ecx,0xf17424c1
  40f65c:	or     BYTE PTR [esi+0x764a349d],al
  40f662:	aaa    
  40f663:	inc    esp
  40f664:	iret   
  40f665:	icebp  
  40f666:	sahf   
  40f667:	sbb    ecx,DWORD PTR [ebx+esi*4+0x3640d689]
  40f66e:	xchg   ecx,eax
  40f66f:	aaa    
  40f670:	call   0xa526:0xc831bf40
  40f677:	dec    edx
  40f678:	and    ch,BYTE PTR [eax-0x3822123b]
  40f67e:	cmc    
  40f67f:	and    esp,DWORD PTR [edi]
  40f681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f682:	and    ax,0xff5b
  40f686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f687:	test   BYTE PTR [eax-0xc],ch
  40f68a:	in     al,dx
  40f68b:	inc    esp
  40f68c:	in     al,dx
  40f68d:	bound  ebp,QWORD PTR [edi-0x52]
  40f690:	mov    dh,0xa9
  40f692:	leave  
  40f693:	iret   
  40f694:	push   edx
  40f695:	cmp    eax,0xfc9bc66d
  40f69a:	test   DWORD PTR [ebx-0x9],esp
  40f69d:	rcr    BYTE PTR [ecx+0x5581224b],0x9e
  40f6a4:	inc    ebx
  40f6a5:	aad    0x6
  40f6a7:	int    0x8a
  40f6a9:	(bad)  
  40f6aa:	js     0x40f6c1
  40f6ac:	cwde   
  40f6ad:	pop    edx
  40f6ae:	sub    dl,cl
  40f6b0:	add    esp,DWORD PTR [ecx+0x250c949d]
  40f6b6:	xor    DWORD PTR [edi],edx
  40f6b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b9:	clc    
  40f6ba:	add    BYTE PTR [edx+0x33470d61],0x68
  40f6c1:	out    dx,eax
  40f6c2:	jmp    0xf43:0x8b029b12
  40f6c9:	out    dx,al
  40f6ca:	rcl    BYTE PTR [ecx-0x23],cl
  40f6cd:	dec    eax
  40f6ce:	mov    eax,0xb38a7f88
  40f6d3:	cs jge 0x40f745
  40f6d6:	addr16 xchg ebx,eax
  40f6d8:	and    eax,0xf62d4ea6
  40f6dd:	leave  
  40f6de:	jl     0x40f6f3
  40f6e0:	addr16 pop es
  40f6e2:	xor    ah,dh
  40f6e4:	add    eax,0x12210c2b
  40f6e9:	(bad)  
  40f6ea:	idiv   DWORD PTR ds:0x86d9064f
  40f6f0:	mov    gs,WORD PTR [bx+0x55e2]
  40f6f5:	ja     0x40f6de
  40f6f7:	pop    ebp
  40f6f8:	jns    0x40f72b
  40f6fa:	fs sbb dh,ch
  40f6fd:	(bad)  
  40f6fe:	lock mov ch,0x3d
  40f701:	sar    BYTE PTR [ebp-0x24],cl
  40f704:	cmp    BYTE PTR [ebx-0x67],al
  40f707:	stos   DWORD PTR es:[edi],eax
  40f708:	jp     0x40f748
  40f70a:	popa   
  40f70b:	out    dx,eax
  40f70c:	xchg   edi,eax
  40f70d:	sub    cl,BYTE PTR [ebp+esi*2-0x4d]
  40f711:	push   esi
  40f712:	or     cl,cl
  40f714:	mov    al,0xc
  40f716:	inc    esp
  40f717:	js     0x40f6f1
  40f719:	outs   dx,DWORD PTR ds:[esi]
  40f71a:	pop    esp
  40f71b:	div    BYTE PTR [esi-0x54]
  40f71e:	repz stc 
  40f720:	and    DWORD PTR [ebx],ebx
  40f722:	mov    edx,0x52e638a
  40f727:	cmp    cl,BYTE PTR [edx+0x410c27a7]
  40f72d:	ja     0x40f742
  40f72f:	mov    edi,0x28523f64
  40f734:	je     0x40f76d
  40f736:	mov    al,0xe3
  40f738:	idiv   DWORD PTR [eax]
  40f73a:	out    dx,al
  40f73b:	sbb    BYTE PTR [ecx],0x18
  40f73e:	dec    esp
  40f73f:	dec    edi
  40f740:	test   BYTE PTR [ebx],cl
  40f742:	lds    ebx,FWORD PTR [eax+0xe93601b]
  40f748:	fistp  QWORD PTR ds:0x916bf26c
  40f74e:	adc    DWORD PTR [edi+0x27],ebx
  40f751:	outs   dx,DWORD PTR ds:[esi]
  40f752:	pop    edx
  40f753:	repz dec esp
  40f755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f756:	push   esi
  40f757:	in     al,0xca
  40f759:	lea    ebx,[edx]
  40f75b:	xchg   ebp,eax
  40f75c:	ss enter 0x4c00,0xe
  40f761:	iret   
  40f762:	rol    DWORD PTR [ebp+0x1f],cl
  40f765:	mov    ecx,ebp
  40f767:	xchg   ecx,eax
  40f768:	ret    0xc802
  40f76b:	out    0x6d,eax
  40f76d:	icebp  
  40f76e:	sbb    BYTE PTR [ebp-0x5580bb4],0xb1
  40f775:	inc    ecx
  40f776:	pop    ds
  40f777:	mov    dh,0x83
  40f779:	sbb    eax,0xe75d6706
  40f77e:	xchg   ebp,eax
  40f77f:	test   al,0x7b
  40f781:	(bad)  
  40f782:	nop
  40f783:	inc    ecx
  40f784:	enter  0xb8ef,0xea
  40f788:	mov    bl,BYTE PTR [ecx-0x64]
  40f78b:	and    eax,DWORD PTR [ecx+esi*2-0x4c78bdaa]
  40f792:	inc    esi
  40f793:	mov    edi,0x72f68283
  40f798:	xchg   ebp,eax
  40f799:	dec    esp
  40f79a:	xchg   esp,eax
  40f79b:	and    eax,DWORD PTR [eax+0x7f]
  40f79e:	dec    esp
  40f79f:	push   edi
  40f7a0:	div    ebp
  40f7a2:	pop    ds
  40f7a3:	retf   0xc380
  40f7a6:	mov    esi,0x37857815
  40f7ab:	sub    bl,ch
  40f7ad:	inc    eax
  40f7ae:	ficomp WORD PTR ds:[esi+0x41]
  40f7b2:	jecxz  0x40f7c9
  40f7b4:	sbb    al,0x7e
  40f7b6:	call   0xf8f7:0x34c8014b
  40f7bd:	inc    edi
  40f7be:	mov    DWORD PTR [ebx+0x48],edi
  40f7c1:	dec    eax
  40f7c2:	xchg   dh,al
  40f7c4:	mov    bh,0x2b
  40f7c6:	push   ss
  40f7c7:	xor    esi,DWORD PTR [esi]
  40f7c9:	lods   eax,DWORD PTR ds:[esi]
  40f7ca:	xor    dh,BYTE PTR [ebp+0x3e2a64d2]
  40f7d0:	lock add eax,0xe7b1fd3f
  40f7d6:	xchg   esi,eax
  40f7d7:	pop    ebp
  40f7d8:	int3   
  40f7d9:	jmp    0x1e20ff11
  40f7de:	fcom   st(4)
  40f7e0:	adc    al,0x37
  40f7e2:	push   es
  40f7e3:	mov    esp,0x135394ad
  40f7e8:	popf   
  40f7e9:	mov    ebp,0x93f4cb35
  40f7ee:	das    
  40f7ef:	jmp    0x831e6bba
  40f7f4:	loopne 0x40f7f2
  40f7f6:	test   DWORD PTR [esi-0x7],ecx
  40f7f9:	call   DWORD PTR [edx+0x79]
  40f7fc:	cli    
  40f7fd:	js     0x40f7d3
  40f7ff:	adc    dh,BYTE PTR [ebx]
  40f801:	retf   
  40f802:	sub    eax,0x1583d052
  40f807:	(bad)  
  40f808:	cld    
  40f809:	mov    ebp,0xaf02813d
  40f80e:	mov    ah,BYTE PTR [edx+0x4223807b]
  40f814:	loopne 0x40f894
  40f816:	and    al,0x68
  40f818:	fdivr  QWORD PTR [ebx]
  40f81a:	push   ds
  40f81b:	ins    DWORD PTR es:[edi],dx
  40f81c:	stos   DWORD PTR es:[edi],eax
  40f81d:	cmp    ah,BYTE PTR [ebx+edx*1]
  40f820:	out    0xde,al
  40f822:	mov    dh,0x26
  40f824:	xor    al,0x94
  40f826:	mov    cl,BYTE PTR [edx-0x53be65bc]
  40f82c:	pop    esi
  40f82d:	(bad)  
  40f82e:	xchg   BYTE PTR [edx+0x7a],bh
  40f831:	addr16 cs push 0x63
  40f835:	sbb    BYTE PTR [eax+ebx*4+0x47598af5],dl
  40f83c:	aas    
  40f83d:	xchg   edi,eax
  40f83e:	mov    ecx,DWORD PTR ds:0x1759547d
  40f844:	adc    BYTE PTR [eax-0x3f],ch
  40f847:	mov    cl,0xd6
  40f849:	sub    eax,0x47d1440e
  40f84e:	mov    ds:0x2758e5ab,eax
  40f853:	sbb    edx,DWORD PTR [edi]
  40f855:	sbb    bl,ah
  40f857:	pop    edi
  40f858:	jle    0x40f7f7
  40f85a:	xor    ch,BYTE PTR [edi]
  40f85c:	and    al,0xfa
  40f85e:	mov    ebx,0x4667815b
  40f863:	arpl   WORD PTR [edx+0x57],ax
  40f866:	xor    bh,al
  40f868:	xor    DWORD PTR [edx],eax
  40f86a:	cmp    ecx,DWORD PTR [ecx]
  40f86c:	xchg   esp,eax
  40f86d:	inc    ebx
  40f86e:	mov    cl,0x30
  40f870:	nop
  40f871:	inc    esp
  40f872:	clc    
  40f873:	sub    dl,BYTE PTR [ebp+0x26]
  40f876:	(bad)  
  40f877:	inc    ebx
  40f878:	inc    esi
  40f879:	into   
  40f87a:	js     0x40f8db
  40f87c:	adc    eax,0x2c27991c
  40f881:	adc    BYTE PTR ds:[esi-0x32674ca9],cl
  40f888:	shl    BYTE PTR [esi+ecx*4],1
  40f88b:	xchg   DWORD PTR [esi+esi*8-0x533d39e5],edi
  40f892:	repz ret 0x8c5
  40f896:	sbb    ecx,DWORD PTR [ecx+0x5ea3c58c]
  40f89c:	std    
  40f89d:	jp     0x40f911
  40f89f:	cmp    al,0x11
  40f8a1:	or     BYTE PTR [esi],ch
  40f8a3:	cmp    al,0x2c
  40f8a5:	fstp   st(4)
  40f8a7:	mov    dh,0xe3
  40f8a9:	jecxz  0x40f8e8
  40f8ab:	mov    cl,0xd5
  40f8ad:	out    dx,al
  40f8ae:	lods   al,BYTE PTR ds:[esi]
  40f8af:	xchg   ebp,eax
  40f8b0:	pop    edi
  40f8b2:	push   ss
  40f8b3:	xor    ch,BYTE PTR [edx+0x50]
  40f8b6:	mov    ecx,0x810564cc
  40f8bb:	sub    DWORD PTR [edx*1-0x43bbdf6c],ebx
  40f8c2:	mov    eax,ds:0x7bb6d919
  40f8c7:	adc    al,0xcd
  40f8c9:	push   edi
  40f8ca:	mov    gs,WORD PTR ds:0x8ddf732f
  40f8d0:	neg    DWORD PTR [esi]
  40f8d2:	lods   al,BYTE PTR ds:[esi]
  40f8d3:	mov    WORD PTR [eax-0x77],fs
  40f8d6:	and    DWORD PTR [esi+0x519f73f3],edx
  40f8dc:	js     0x40f890
  40f8de:	repnz xor eax,0x1655a09e
  40f8e4:	adc    dh,0xa8
  40f8e7:	repnz sti 
  40f8e9:	pusha  
  40f8ea:	cmp    DWORD PTR [ebx],0x9e6d3168
  40f8f0:	mov    al,0x0
  40f8f2:	(bad)  
  40f8f3:	fwait
  40f8f4:	inc    esp
  40f8f5:	jl     0x40f8ba
  40f8f7:	mov    al,0xe3
  40f8f9:	mov    cl,BYTE PTR [ebx+0x78]
  40f8fc:	pusha  
  40f8fd:	and    esp,DWORD PTR [edi+0x6a]
  40f900:	mov    es,WORD PTR [edx+0x32]
  40f903:	xor    eax,0x8775d67b
  40f908:	imul   esi,DWORD PTR [edx+ecx*1],0xd1e963cc
  40f90f:	div    DWORD PTR [ebx-0x36]
  40f912:	scas   al,BYTE PTR es:[edi]
  40f913:	mov    esi,0x46c550b4
  40f918:	jmp    0xdb8d:0x8edf30be
  40f91f:	xor    esp,DWORD PTR ds:0xb78b5adf
  40f925:	pop    eax
  40f926:	ficomp DWORD PTR [eax+0x5ca8b3f8]
  40f92c:	jns    0x40f91f
  40f92e:	dec    ebp
  40f92f:	call   0xdba00771
  40f934:	dec    edx
  40f935:	xchg   esi,eax
  40f936:	xor    eax,0x888a9580
  40f93b:	popf   
  40f93c:	mov    ebx,DWORD PTR [edi+esi*4]
  40f93f:	fwait
  40f940:	aaa    
  40f941:	jnp    0x40f8ed
  40f943:	pusha  
  40f944:	jg     0x40f94d
  40f946:	sar    BYTE PTR [edi-0x7c42e732],0x58
  40f94d:	jno    0x40f92d
  40f94f:	xchg   ebx,eax
  40f950:	repz cmp al,0x56
  40f953:	arpl   sp,dx
  40f955:	mov    ah,0xf
  40f957:	icebp  
  40f958:	stos   BYTE PTR es:[edi],al
  40f959:	shr    BYTE PTR [esi+ecx*2-0x62],cl
  40f95d:	cmp    ch,BYTE PTR [edi-0x6c]
  40f960:	dec    ecx
  40f961:	outs   dx,DWORD PTR ds:[esi]
  40f962:	pop    ds
  40f963:	pushf  
  40f964:	pop    ebp
  40f965:	jne    0x40f939
  40f967:	inc    eax
  40f968:	bound  ebx,QWORD PTR [edi+0x54276c34]
  40f96e:	fs pop edi
  40f970:	sub    al,0x8c
  40f972:	daa    
  40f973:	icebp  
  40f974:	stos   BYTE PTR es:[edi],al
  40f975:	cmp    al,0xb3
  40f977:	fsub   DWORD PTR ds:0xd60d95c
  40f97d:	push   0xb1e97a98
  40f982:	dec    esp
  40f983:	mov    WORD PTR [ebx],ss
  40f985:	inc    edx
  40f986:	icebp  
  40f987:	(bad)  
  40f988:	iret   
  40f989:	sbb    esp,DWORD PTR [esi*2+0x980356f]
  40f990:	je     0x40f99a
  40f992:	inc    esi
  40f993:	jae    0x40f9d6
  40f995:	mov    al,BYTE PTR [esi+0x1c0023c5]
  40f99b:	mov    dl,0x8e
  40f99d:	cmp    BYTE PTR [eax-0x43b05565],0xb
  40f9a4:	int    0x4a
  40f9a6:	call   0xd045:0x42858a8e
  40f9ad:	lds    ebx,FWORD PTR [ecx+0x6d61ad18]
  40f9b3:	pop    ds
  40f9b4:	pop    edx
  40f9b5:	xlat   BYTE PTR ds:[ebx]
  40f9b6:	gs aam 0x11
  40f9b9:	ss xchg edi,eax
  40f9bb:	sub    al,0xc1
  40f9bd:	nop
  40f9be:	mov    ecx,0x72fa7495
  40f9c3:	popf   
  40f9c4:	mov    dh,0x65
  40f9c6:	fadd   QWORD PTR [edi]
  40f9c8:	test   BYTE PTR [ebx-0x49640b21],0x34
  40f9cf:	and    ebx,ebp
  40f9d1:	jne    0x40fa21
  40f9d3:	push   eax
  40f9d4:	inc    esp
  40f9d5:	pop    eax
  40f9d6:	test   al,0xe4
  40f9d9:	(bad)  
  40f9da:	js     0x40fa0b
  40f9dc:	test   al,0x63
  40f9de:	dec    ecx
  40f9df:	jle    0x40f9ae
  40f9e1:	int    0xd1
  40f9e3:	and    al,0xce
  40f9e5:	push   ds
  40f9e6:	jb     0x40f9dd
  40f9e8:	fsubr  DWORD PTR ds:0xd68bae06
  40f9ee:	xor    edx,DWORD PTR [eax-0x60d96a30]
  40f9f4:	cld    
  40f9f5:	ss jg  0x40fa25
  40f9f8:	jns    0x40fa72
  40f9fa:	in     al,dx
  40f9fb:	dec    edx
  40f9fc:	inc    esi
  40f9fd:	mov    cl,0x8b
  40f9ff:	inc    edx
  40fa00:	cmp    DWORD PTR [esi-0x38],esp
  40fa03:	inc    ebx
  40fa04:	bound  esp,QWORD PTR fs:[ecx+eax*4+0x53]
  40fa09:	dec    esi
  40fa0a:	and    BYTE PTR [ecx-0x6032865e],bl
  40fa10:	push   0xfffffffc
  40fa12:	jnp    0x40fa91
  40fa14:	pop    edi
  40fa15:	jmp    0x40f9ac
  40fa17:	sbb    ah,dl
  40fa19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1a:	dec    edx
  40fa1b:	ficom  DWORD PTR [ecx+0x20]
  40fa1e:	js     0x40fa54
  40fa20:	popa   
  40fa21:	jns    0x40fa32
  40fa23:	mov    dl,0x68
  40fa25:	sbb    BYTE PTR [esi],bh
  40fa27:	(bad)  
  40fa28:	sub    al,cl
  40fa2a:	xor    eax,DWORD PTR [esi+0x2ac99dfe]
  40fa30:	ja     0x40fa19
  40fa32:	mov    bh,0x50
  40fa34:	leave  
  40fa35:	lock ja 0x40fa77
  40fa38:	aaa    
  40fa39:	cdq    
  40fa3a:	mov    ecx,0x5afe086f
  40fa3f:	xchg   ecx,eax
  40fa40:	sbb    al,0xd4
  40fa42:	fmul   st(0),st
  40fa44:	cmp    al,0xbf
  40fa46:	cmp    eax,0x759b02c6
  40fa4b:	inc    ecx
  40fa4c:	dec    edx
  40fa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa4e:	and    al,0x42
  40fa50:	sbb    eax,DWORD PTR [ebx-0x7250108]
  40fa56:	rol    DWORD PTR [ebx],cl
  40fa58:	sbb    eax,0x8d74ddfd
  40fa5d:	xor    bh,BYTE PTR [ebx+0x38]
  40fa60:	icebp  
  40fa61:	or     cl,BYTE PTR [edx]
  40fa63:	jbe    0x40fa04
  40fa65:	add    al,0x35
  40fa67:	scas   al,BYTE PTR es:[edi]
  40fa68:	adc    al,BYTE PTR [eax-0x41]
  40fa6b:	or     cl,BYTE PTR [ebx]
  40fa6d:	push   eax
  40fa6e:	xchg   DWORD PTR [edx-0x581bd7aa],esp
  40fa74:	mov    ecx,DWORD PTR [ecx-0x4]
  40fa77:	shl    al,cl
  40fa79:	dec    edi
  40fa7a:	add    ch,BYTE PTR [ecx+0x6]
  40fa7d:	and    eax,0x8a2aefcd
  40fa82:	add    eax,0xe1596c65
  40fa87:	int3   
  40fa88:	dec    ecx
  40fa89:	mov    dh,dh
  40fa8b:	aad    0x1e
  40fa8d:	out    dx,eax
  40fa8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa8f:	pop    esp
  40fa90:	scas   eax,DWORD PTR es:[edi]
  40fa91:	stc    
  40fa92:	pop    ebx
  40fa93:	push   ebx
  40fa94:	xor    DWORD PTR [eax+0x589af694],eax
  40fa9a:	out    dx,eax
  40fa9b:	test   al,dh
  40fa9d:	push   ss
  40fa9e:	das    
  40fa9f:	inc    ebp
  40faa0:	mov    ds:0x6b573943,al
  40faa5:	xchg   ecx,ebp
  40faa7:	pop    ebp
  40faa8:	das    
  40faa9:	leave  
  40faaa:	dec    ecx
  40faab:	add    BYTE PTR [ebp+0x17],0x88
  40faaf:	in     al,0x18
  40fab1:	icebp  
  40fab2:	push   cs
  40fab3:	mov    eax,gs:0xff511187
  40fab9:	or     eax,0x4c8429ad
  40fabe:	sahf   
  40fabf:	nop
  40fac0:	xor    eax,0xcf324367
  40fac5:	or     eax,eax
  40fac7:	mov    al,0x3c
  40fac9:	and    BYTE PTR [esi+esi*1+0x27],cl
  40facd:	(bad)  
  40face:	les    edi,FWORD PTR [edx-0x5e]
  40fad1:	shr    bl,0x32
  40fad4:	iret   
  40fad5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40fad7:	inc    ebx
  40fad8:	add    BYTE PTR gs:[edx-0x66],0xe7
  40fadd:	push   edi
  40fade:	jp     0x40fa6d
  40fae0:	div    DWORD PTR [ebx-0x5f27a66c]
  40fae6:	test   BYTE PTR ds:0xe137081c,cl
  40faec:	push   ebx
  40faed:	mov    ds:0x170a5691,eax
  40faf2:	cmp    cl,bh
  40faf4:	cs imul edx,eax,0x1a
  40faf8:	cmp    BYTE PTR [esi],0xb5
  40fafb:	das    
  40fafc:	cmp    ebx,edi
  40fafe:	cmp    esi,ebp
  40fb00:	jns    0x40fae3
  40fb02:	mov    WORD PTR [ebx-0x1d],fs
  40fb05:	(bad)  
  40fb06:	out    0x1f,al
  40fb08:	sahf   
  40fb09:	mov    cl,0x96
  40fb0b:	sahf   
  40fb0c:	dec    ecx
  40fb0d:	(bad)  
  40fb0e:	push   ecx
  40fb0f:	jbe    0x40fb60
  40fb11:	fild   WORD PTR [ecx+0x2f]
  40fb14:	mov    esp,0xc7d300f8
  40fb19:	out    0x8,al
  40fb1b:	cmp    eax,0x933e2234
  40fb20:	ror    DWORD PTR [edx+0x4e7c67da],1
  40fb26:	or     BYTE PTR [edx],bl
  40fb28:	add    DWORD PTR [esi-0x49],esp
  40fb2b:	jae    0x40fb7b
  40fb2d:	xchg   edx,eax
  40fb2e:	pusha  
  40fb2f:	xor    BYTE PTR [ebp+0x1d],ah
  40fb32:	pop    edi
  40fb33:	xlat   BYTE PTR ds:[ebx]
  40fb34:	or     al,0xc3
  40fb36:	push   ecx
  40fb37:	or     al,0x9
  40fb39:	xchg   ecx,eax
  40fb3a:	ret    0x5976
  40fb3d:	dec    ecx
  40fb3e:	out    0xa4,eax
  40fb40:	loopne 0x40fadb
  40fb42:	jnp    0x40fb17
  40fb44:	xor    dl,al
  40fb46:	sub    BYTE PTR [esi+ebp*4+0x165200d7],0x79
  40fb4e:	adc    eax,0x5a686c18
  40fb53:	push   edx
  40fb54:	out    0x25,al
  40fb56:	sti    
  40fb57:	mov    al,0x4a
  40fb59:	jge    0x40fb2c
  40fb5b:	das    
  40fb5c:	jecxz  0x40fb69
  40fb5e:	push   ecx
  40fb5f:	cmp    eax,0x97fd7358
  40fb64:	movzx  edx,WORD PTR [edx+0x76]
  40fb68:	int    0x1
  40fb6a:	adc    BYTE PTR [ebx-0x52273782],dl
  40fb70:	jbe    0x40fb62
  40fb72:	sbb    BYTE PTR [esi+ecx*4],0x20
  40fb76:	ds aaa 
  40fb78:	mov    al,0xfe
  40fb7a:	ss stos DWORD PTR es:[di],eax
  40fb7d:	inc    edx
  40fb7e:	pushf  
  40fb7f:	imul   ebp,DWORD PTR ds:[edx+0x2c95c9ac],0xffffffb4
  40fb87:	scas   al,BYTE PTR es:[edi]
  40fb88:	push   ebp
  40fb89:	pop    ds
  40fb8a:	pop    ebp
  40fb8b:	jle    0x40fbc7
  40fb8d:	pop    esp
  40fb8e:	fnstcw WORD PTR [edx]
  40fb90:	sti    
  40fb91:	nop
  40fb92:	inc    eax
  40fb93:	scas   eax,DWORD PTR es:[edi]
  40fb94:	loop   0x40fbea
  40fb96:	cmp    DWORD PTR [ebx+0x24eba0ba],esp
  40fb9c:	out    dx,eax
  40fb9d:	lea    edx,[eax+eax*2-0x10f068b2]
  40fba4:	jno    0x40fbc0
  40fba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fba7:	aas    
  40fba8:	mov    al,0x29
  40fbaa:	and    dh,BYTE PTR [eax-0x24]
  40fbad:	jae    0x40fb5f
  40fbaf:	cmp    dl,BYTE PTR [edi-0x6]
  40fbb2:	pop    ebp
  40fbb3:	out    dx,al
  40fbb4:	mov    esp,0xe7a22371
  40fbb9:	mov    ch,0x36
  40fbbb:	mov    dh,0x17
  40fbbd:	or     eax,0x8bbdbaf5
  40fbc2:	sbb    al,cl
  40fbc4:	xor    BYTE PTR [ecx],al
  40fbc6:	push   edx
  40fbc7:	cmc    
  40fbc8:	in     al,dx
  40fbc9:	fcomp  QWORD PTR [ebx+0x5e88956c]
  40fbcf:	xchg   edi,eax
  40fbd0:	sbb    esp,ecx
  40fbd2:	inc    edx
  40fbd3:	and    DWORD PTR ds:0x93e703d5,esp
  40fbd9:	loop   0x40fbc9
  40fbdb:	jnp    0x40fc1c
  40fbdd:	mov    eax,ds:0xff75276f
  40fbe2:	out    dx,eax
  40fbe3:	arpl   WORD PTR [eax-0x55795065],bx
  40fbe9:	(bad)  
  40fbea:	and    eax,0x9892b003
  40fbef:	pop    edi
  40fbf0:	dec    edx
  40fbf1:	aas    
  40fbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf3:	jg     0x40fb9c
  40fbf5:	scas   al,BYTE PTR es:[edi]
  40fbf6:	loope  0x40fba0
  40fbf8:	xchg   esp,eax
  40fbf9:	xchg   DWORD PTR [ebp-0x3eace547],esp
  40fbff:	jno    0x40fb8f
  40fc01:	inc    ebx
  40fc02:	(bad)  
  40fc03:	jp     0x40fba7
  40fc05:	cmp    eax,0xce8b3889
  40fc0a:	sbb    ch,BYTE PTR [ebx+eiz*4+0x244fba89]
  40fc11:	pop    esi
  40fc12:	jbe    0x40fc91
  40fc14:	ret    
  40fc15:	mov    dh,0xbd
  40fc17:	inc    ebp
  40fc18:	test   ah,ah
  40fc1a:	mov    eax,ds:0x760e2799
  40fc1f:	jns    0x40fc9a
  40fc21:	sub    al,al
  40fc23:	xor    BYTE PTR [esi-0x1],bh
  40fc26:	jnp    0x40fc40
  40fc28:	sub    ebx,DWORD PTR [esi]
  40fc2a:	es inc edi
  40fc2c:	mov    eax,0x8d466817
  40fc31:	mov    ds,WORD PTR [edx-0x6314a23d]
  40fc37:	jns    0x40fc28
  40fc39:	xchg   esi,eax
  40fc3a:	push   ecx
  40fc3b:	stc    
  40fc3c:	int3   
  40fc3d:	arpl   cx,di
  40fc3f:	mov    al,ah
  40fc41:	add    al,0x6b
  40fc43:	es or  eax,0x6bb44ec6
  40fc49:	jb     0x40fc2c
  40fc4b:	daa    
  40fc4c:	cmp    ebp,DWORD PTR [ebp-0x4f]
  40fc4f:	jg     0x40fca7
  40fc51:	mov    ah,0x29
  40fc53:	push   ss
  40fc54:	xor    ch,0x23
  40fc57:	inc    eax
  40fc58:	shl    BYTE PTR [esi+esi*2],cl
  40fc5b:	mov    WORD PTR [ebx+0x23],fs
  40fc5e:	test   bh,al
  40fc60:	popf   
  40fc61:	in     al,0xb4
  40fc63:	jnp    0x40fcd1
  40fc65:	test   al,0x9a
  40fc67:	ror    DWORD PTR [edx-0x11],cl
  40fc6a:	pop    edx
  40fc6b:	adc    eax,0xf127fbfd
  40fc70:	ss mov bh,0x3d
  40fc73:	jmp    0x2f48fd04
  40fc78:	mov    ?,WORD PTR [ecx+0x5e31885a]
  40fc7e:	iret   
  40fc7f:	sub    DWORD PTR [eax-0x115e46],ebp
  40fc85:	shr    ebx,0x5a
  40fc88:	sub    BYTE PTR [ebx],cl
  40fc8a:	sbb    al,0x3a
  40fc8c:	mov    gs,WORD PTR ds:[ebp+0x37]
  40fc90:	pop    edi
  40fc91:	imul   ah
  40fc93:	ret    
  40fc94:	test   DWORD PTR [edx],esp
  40fc96:	adc    eax,0x8b700f39
  40fc9b:	bound  esi,QWORD PTR [ebx-0x9]
  40fc9e:	mov    ds:0x5dde8f63,eax
  40fca3:	or     al,0x36
  40fca5:	mov    dh,0x42
  40fca7:	push   esp
  40fca8:	jmp    0x7ad84bea
  40fcad:	push   edi
  40fcae:	repz dec eax
  40fcb0:	mov    bh,0xd
  40fcb2:	jo     0x40fc6b
  40fcb4:	ja     0x40fc8f
  40fcb6:	jmp    0xf941c885
  40fcbb:	mul    BYTE PTR [eax]
  40fcbd:	pushf  
  40fcbe:	pop    es
  40fcbf:	in     eax,0x36
  40fcc1:	sbb    BYTE PTR [ebx+0x66850d09],dl
  40fcc7:	or     BYTE PTR [ebp-0x2a43e616],bl
  40fccd:	push   ebp
  40fcce:	push   ebx
  40fccf:	push   cs
  40fcd0:	sbb    al,0x87
  40fcd2:	inc    edx
  40fcd3:	sbb    al,0xe3
  40fcd5:	xor    al,0x2b
  40fcd7:	mov    dh,0x5e
  40fcd9:	jmp    0x40fd2e
  40fcdb:	lods   al,BYTE PTR ds:[esi]
  40fcdc:	jmp    0x4d5e:0x9ccb4e80
  40fce3:	cmp    edi,DWORD PTR [eax]
  40fce5:	and    BYTE PTR [eax-0x55],bh
  40fce8:	mov    dh,0x6e
  40fcea:	xor    eax,DWORD PTR ds:0xfe27a0ff
  40fcf0:	add    DWORD PTR [esi],ecx
  40fcf2:	in     eax,0xab
  40fcf4:	pop    ds
  40fcf5:	(bad)  
  40fcf6:	dec    esi
  40fcf7:	bound  esi,QWORD PTR [ecx+0x37edbb75]
  40fcfd:	cdq    
  40fcfe:	mov    edx,0x2aa47a00
  40fd03:	push   0x2661740
  40fd08:	daa    
  40fd09:	enter  0x7f3e,0x8d
  40fd0d:	push   ecx
  40fd0e:	div    BYTE PTR [esi]
  40fd10:	test   DWORD PTR [edx+esi*4+0x14],0x9495b304
  40fd18:	mov    dh,0x86
  40fd1a:	inc    ebx
  40fd1b:	rcr    BYTE PTR [esi],cl
  40fd1d:	sub    eax,0xda14c2cb
  40fd22:	xchg   esp,eax
  40fd23:	push   ds
  40fd24:	shr    BYTE PTR [edi],cl
  40fd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd27:	fmul   DWORD PTR [esi]
  40fd29:	retf   
  40fd2a:	bound  esp,QWORD PTR [edi+edi*2-0x1b1daa72]
  40fd31:	cmp    eax,0x6ebb899
  40fd36:	mov    edi,fs
  40fd38:	jo     0x40fd9b
  40fd3a:	sbb    al,0xd1
  40fd3c:	pop    edx
  40fd3d:	test   cl,0x7
  40fd40:	mov    ah,0xb9
  40fd42:	daa    
  40fd43:	dec    BYTE PTR [esi+ebx*2+0x35]
  40fd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd48:	xchg   esi,eax
  40fd49:	mov    edi,0x58ef21be
  40fd4e:	sbb    al,dl
  40fd50:	scas   eax,DWORD PTR es:[edi]
  40fd51:	lods   eax,DWORD PTR ds:[esi]
  40fd52:	pop    esi
  40fd53:	(bad)  
  40fd54:	sub    cl,BYTE PTR [edx]
  40fd56:	sar    DWORD PTR [esi-0x19],0x55
  40fd5a:	pop    ax
  40fd5c:	retf   
  40fd5d:	lods   al,BYTE PTR ds:[esi]
  40fd5e:	in     al,dx
  40fd5f:	out    0x66,eax
  40fd61:	in     al,0xe0
  40fd63:	jle    0x40fdb1
  40fd65:	syscall 
  40fd67:	adc    eax,0x26bdc88a
  40fd6c:	add    BYTE PTR [edi],bh
  40fd6e:	jmp    0x40fcf0
  40fd70:	sub    bl,BYTE PTR [eax+0x1a144262]
  40fd76:	adc    al,0xb4
  40fd78:	ds dec ecx
  40fd7a:	inc    edi
  40fd7b:	lock adc ebx,esp
  40fd7e:	mov    al,0x8a
  40fd80:	cli    
  40fd81:	popa   
  40fd82:	popa   
  40fd83:	ins    DWORD PTR es:[edi],dx
  40fd84:	(bad)  
  40fd85:	scas   al,BYTE PTR es:[edi]
  40fd86:	pop    ss
  40fd87:	xchg   esp,eax
  40fd88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd89:	inc    eax
  40fd8a:	in     eax,dx
  40fd8b:	jo     0x40fde5
  40fd8d:	xchg   ebp,eax
  40fd8e:	cwde   
  40fd8f:	lahf   
  40fd90:	xor    DWORD PTR [ecx],esp
  40fd92:	jl     0x40fd1d
  40fd94:	int    0xc
  40fd96:	xchg   ebx,eax
  40fd97:	xor    ah,dh
  40fd99:	ja     0x40fe0c
  40fd9b:	mov    bh,0x6a
  40fd9d:	push   edi
  40fd9e:	mov    edi,0x38e2a359
  40fda3:	push   0x7e46662e
  40fda8:	add    DWORD PTR [edi],esp
  40fdaa:	cli    
  40fdab:	sar    ch,cl
  40fdad:	neg    DWORD PTR [edi+0x4d]
  40fdb0:	or     edi,DWORD PTR [ecx+0x7e]
  40fdb3:	push   ss
  40fdb4:	dec    ecx
  40fdb5:	and    BYTE PTR [eax-0x4f],ch
  40fdb8:	sbb    eax,ecx
  40fdba:	adc    BYTE PTR [ecx+0x12ab6d21],ah
  40fdc0:	daa    
  40fdc1:	dec    esp
  40fdc2:	xchg   ecx,eax
  40fdc3:	jecxz  0x40fd7b
  40fdc5:	out    dx,eax
  40fdc6:	fcmove st,st(4)
  40fdc8:	lods   al,BYTE PTR ds:[esi]
  40fdc9:	aam    0xdc
  40fdcb:	and    DWORD PTR [eax+0x3c],esi
  40fdce:	das    
  40fdcf:	add    ch,BYTE PTR [edi]
  40fdd1:	push   edx
  40fdd2:	imul   esi,DWORD PTR [edx+0x68f52a4c],0x3
  40fdd9:	inc    ecx
  40fdda:	push   esp
  40fddb:	jae    0x40fe32
  40fddd:	xor    ebp,eax
  40fddf:	sub    eax,0xdb6ea6a6
  40fde4:	mov    bh,0xb
  40fde6:	cli    
  40fde7:	jbe    0x40fdd6
  40fde9:	outs   dx,DWORD PTR ds:[esi]
  40fdea:	inc    esi
  40fdeb:	adc    al,0x63
  40fded:	or     DWORD PTR [ecx],0x2a
  40fdf0:	add    eax,0xa5d3bf6b
  40fdf5:	enter  0x4518,0x97
  40fdf9:	add    BYTE PTR [ecx],ah
  40fdfb:	mov    ds:0x7e69bf50,eax
  40fe00:	xchg   esp,eax
  40fe01:	fdiv   st(6),st
  40fe03:	xchg   dh,cl
  40fe05:	ins    DWORD PTR es:[edi],dx
  40fe06:	(bad)  
  40fe07:	lds    ecx,FWORD PTR [edx-0x67]
  40fe0a:	lods   al,BYTE PTR ds:[esi]
  40fe0b:	popa   
  40fe0c:	pop    eax
  40fe0d:	sub    DWORD PTR [esi],ecx
  40fe0f:	je     0x40fdad
  40fe11:	cli    
  40fe12:	imul   edi,DWORD PTR [edi],0xb760ca5a
  40fe18:	jg     0x40fdab
  40fe1a:	cmp    eax,0x3b67bbb7
  40fe1f:	outs   dx,DWORD PTR ds:[esi]
  40fe20:	pushaw 
  40fe22:	stos   BYTE PTR es:[edi],al
  40fe23:	mov    cl,ah
  40fe25:	es std 
  40fe27:	dec    ebp
  40fe28:	jp     0x40fe03
  40fe2a:	mov    al,ds:0x25bfe592
  40fe2f:	fnstenv [ecx+0x12]
  40fe32:	pop    eax
  40fe33:	rol    ebp,1
  40fe35:	ss push ecx
  40fe37:	shr    DWORD PTR [ebx-0x7c19a4fd],0xd7
  40fe3e:	xchg   edi,eax
  40fe3f:	or     ebx,DWORD PTR [edi+0x7f]
  40fe42:	inc    eax
  40fe43:	dec    edx
  40fe44:	xchg   edi,eax
  40fe45:	sub    BYTE PTR [ecx-0x7e095d12],bh
  40fe4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe4c:	mov    ch,al
  40fe4e:	into   
  40fe4f:	inc    ebp
  40fe50:	xor    BYTE PTR ds:0xefd188d3,ch
  40fe56:	jge    0x40fe30
  40fe58:	call   0x24f5:0xb1be5160
  40fe5f:	addr16 cmc 
  40fe61:	fs jae 0x40fde4
  40fe64:	sar    DWORD PTR [esi-0x627d36f9],1
  40fe6a:	fisttp WORD PTR [edx+0x5e96aefe]
  40fe70:	dec    ebx
  40fe71:	add    BYTE PTR [esi+0x5d2230d9],0x4b
  40fe78:	lods   al,BYTE PTR ds:[esi]
  40fe79:	and    BYTE PTR [esi],ch
  40fe7b:	xchg   esp,eax
  40fe7c:	sbb    esi,esi
  40fe7e:	jns    0x40fe5a
  40fe80:	retf   0xafef
  40fe83:	(bad)  
  40fe84:	and    eax,ecx
  40fe86:	sbb    dh,BYTE PTR [ebx+0x1d22a0d2]
  40fe8c:	mov    ah,0xf1
  40fe8e:	xchg   edx,eax
  40fe8f:	jb     0x40fe2a
  40fe91:	in     al,0x71
  40fe93:	add    eax,0x68d363be
  40fe98:	inc    ecx
  40fe99:	add    esp,DWORD PTR [ebx]
  40fe9b:	jp     0x40fe25
  40fe9d:	xchg   ebx,eax
  40fe9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe9f:	cmp    al,0x1a
  40fea1:	iret   
  40fea2:	jae    0x40fea2
  40fea4:	mov    ds:0x7b797e8d,al
  40fea9:	jge    0x40fefc
  40feab:	scas   eax,DWORD PTR es:[edi]
  40feac:	fbld   TBYTE PTR [ebx+0x2cb9460b]
  40feb2:	cli    
  40feb3:	imul   al
  40feb5:	xchg   DWORD PTR [eax-0x5f],edx
  40feb8:	out    dx,eax
  40feb9:	mov    ebp,0x15d9ff08
  40febe:	pusha  
  40febf:	push   ecx
  40fec0:	out    0xf3,eax
  40fec2:	cmp    esi,DWORD PTR [eax-0x80]
  40fec5:	(bad)
  40fec8:	dec    ebx
  40fec9:	xchg   esp,eax
  40feca:	loop   0x40fe64
  40fecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fecd:	test   bh,0x58
  40fed0:	mov    dh,0x2
  40fed2:	inc    ebx
  40fed3:	sbb    al,0x2b
  40fed5:	or     ebp,0x30f62e0f
  40fedb:	push   cs
  40fedc:	sbb    esi,DWORD PTR ds:0x1693a370
  40fee2:	lds    edi,FWORD PTR [edi]
  40fee4:	leave  
  40fee5:	imul   esp
  40fee7:	iret   
  40fee8:	jne    0x40ff65
  40feea:	int3   
  40feeb:	stc    
  40feec:	in     eax,dx
  40feed:	xor    eax,DWORD PTR [edi]
  40feef:	bound  esi,QWORD PTR [esi]
  40fef1:	pop    es
  40fef2:	(bad)  
  40fef3:	and    DWORD PTR [ebx-0x6177a341],edi
  40fef9:	cmp    edi,DWORD PTR [edx-0x5c]
  40fefc:	and    eax,0x61de6694
  40ff01:	hlt    
  40ff02:	sysenter 
  40ff04:	(bad)  
  40ff05:	adc    eax,0xcf4bb307
  40ff0a:	and    eax,0x5b34a4ce
  40ff0f:	push   eax
  40ff10:	adc    BYTE PTR [edx],ch
  40ff12:	cmp    dh,BYTE PTR [ebx-0x3e]
  40ff15:	retf   
  40ff16:	adc    al,0x12
  40ff18:	stos   BYTE PTR es:[edi],al
  40ff19:	xchg   ebx,eax
  40ff1a:	dec    ebp
  40ff1b:	or     BYTE PTR [ecx+0x2e3e0746],cl
  40ff21:	dec    esi
  40ff22:	adc    DWORD PTR [edi+0x71],0x68
  40ff26:	scas   eax,DWORD PTR es:[edi]
  40ff27:	jl     0x40ff2c
  40ff29:	fcomp  DWORD PTR [ebx-0x4a5e05cb]
  40ff2f:	fcomp  QWORD PTR [ebp+0x1831cb7f]
  40ff35:	mov    esp,0xf4857e58
  40ff3a:	scas   eax,DWORD PTR es:[edi]
  40ff3b:	inc    esp
  40ff3c:	outs   dx,BYTE PTR ds:[esi]
  40ff3d:	or     esi,esi
  40ff3f:	fisttp DWORD PTR [eax+0x21f5be0]
  40ff45:	xor    dl,BYTE PTR [ecx-0x3095368f]
  40ff4b:	xor    esi,ebp
  40ff4d:	pop    edi
  40ff4e:	or     dl,BYTE PTR [esi+0x4c4b76bd]
  40ff54:	fistp  WORD PTR [ebx+0x7cee4dd4]
  40ff5a:	xor    ch,BYTE PTR [edi+eax*1-0x42]
  40ff5e:	arpl   WORD PTR [edi],ax
  40ff60:	das    
  40ff61:	mov    ch,0x1f
  40ff63:	adc    DWORD PTR [ebx-0x185b2007],edi
  40ff69:	mov    esi,0x2e72cba2
  40ff6e:	in     al,dx
  40ff6f:	xor    edi,edi
  40ff71:	dec    ebp
  40ff72:	(bad)  
  40ff73:	mov    eax,ds:0x58224bab
  40ff78:	pop    ecx
  40ff79:	repz enter 0x409a,0xad
  40ff7e:	jmp    0x88a01087
  40ff83:	es dec ebx
  40ff85:	xchg   edx,eax
  40ff86:	xlat   BYTE PTR es:[ebx]
  40ff88:	mov    bl,0xec
  40ff8a:	cmp    DWORD PTR [ebx+0x7c479a3d],esp
  40ff90:	mov    ah,0xe7
  40ff92:	sbb    eax,0x3dd71c25
  40ff97:	adc    DWORD PTR [ebp+edi*2+0x63de51d9],0xf76f3fc9
  40ffa2:	pusha  
  40ffa3:	xchg   edx,eax
  40ffa4:	stos   DWORD PTR es:[edi],eax
  40ffa5:	xchg   ebx,eax
  40ffa6:	push   cs
  40ffa7:	mov    esp,0x24453789
  40ffac:	adc    BYTE PTR [ebx],al
  40ffae:	xlat   BYTE PTR ds:[ebx]
  40ffaf:	dec    eax
  40ffb0:	cmp    DWORD PTR [ebp+edx*1+0x687898ae],ebx
  40ffb7:	dec    esi
  40ffb8:	sub    BYTE PTR [ebp-0x626b393b],al
  40ffbe:	push   eax
  40ffbf:	xor    al,0x53
  40ffc1:	in     al,dx
  40ffc2:	inc    esp
  40ffc3:	loope  0x40ffd8
  40ffc5:	std    
  40ffc6:	pop    ds
  40ffc7:	pop    ecx
  40ffc8:	lea    edi,[ebx-0x57]
  40ffcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffcc:	xchg   ebp,eax
  40ffcd:	sub    BYTE PTR [edx+0x636f74ba],dl
  40ffd3:	sub    al,0xd
  40ffd5:	push   ds
  40ffd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffd7:	mov    esp,DWORD PTR [ecx+0x4e4fe57a]
  40ffdd:	add    bh,dh
  40ffdf:	clc    
  40ffe0:	daa    
  40ffe1:	fidivr DWORD PTR [edi-0xc]
  40ffe4:	sub    ecx,eax
  40ffe6:	push   eax
  40ffe7:	dec    eax
  40ffe8:	retf   0x9d2b
  40ffeb:	popa   
  40ffec:	ins    BYTE PTR es:[edi],dx
  40ffed:	mov    ds:0x1a830700,al
  40fff2:	inc    ebx
  40fff3:	out    0x79,al
  40fff5:	pop    ecx
  40fff6:	jmp    0xf529:0x94485c1d
  40fffd:	nop
  40fffe:	mov    DWORD PTR [edx],eax
  410000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410001:	mov    esi,0x3a1f3284
  410006:	inc    ecx
  410007:	scas   al,BYTE PTR es:[edi]
  410008:	or     esp,ecx
  41000a:	mov    dh,BYTE PTR [ebx+edi*2+0x27]
  41000e:	mov    ah,0x3e
  410010:	(bad)  
  410011:	retf   
  410012:	mov    eax,0xad722268
  410017:	test   DWORD PTR [esi+0x7b89405d],edx
  41001d:	loopne 0x40ffcc
  41001f:	mov    BYTE PTR [esp+edi*8+0x4f],bh
  410023:	and    al,0x35
  410025:	sub    BYTE PTR [ecx+0x1eed28ec],ah
  41002b:	sbb    al,0x3c
  41002d:	cmc    
  41002e:	in     eax,dx
  41002f:	mov    bh,0x6c
  410031:	and    al,0xe8
  410033:	repnz int3 
  410035:	outs   dx,DWORD PTR ds:[esi]
  410036:	cli    
  410037:	aad    0x84
  410039:	iret   
  41003a:	fisttp DWORD PTR [edx-0x4bba7a88]
  410040:	(bad)  
  410041:	or     eax,DWORD PTR [ebp-0x6d]
  410044:	sub    esi,DWORD PTR [ecx-0x27]
  410047:	clc    
  410048:	jns    0x410015
  41004a:	in     eax,dx
  41004b:	repz push edx
  41004d:	jo     0x4100b7
  41004f:	mov    dh,0xb5
  410051:	jecxz  0x410087
  410053:	jmp    0x5d8ac08a
  410058:	outs   dx,DWORD PTR ds:[esi]
  410059:	in     eax,dx
  41005a:	mov    edi,0x2ef56750
  41005f:	pop    esp
  410060:	mov    BYTE PTR [esi+eax*2-0x53d137c],bh
  410067:	or     DWORD PTR [ecx-0x43b555a],esp
  41006d:	scas   eax,DWORD PTR es:[edi]
  41006e:	xchg   esp,eax
  41006f:	pop    ss
  410070:	and    edi,DWORD PTR [eax]
  410072:	in     al,dx
  410073:	lahf   
  410074:	mov    edi,ds
  410076:	jne    0x4100e9
  410078:	lods   eax,DWORD PTR ds:[esi]
  410079:	jno    0x4100d4
  41007b:	dec    ebx
  41007c:	mov    esp,0x4851de94
  410081:	mov    BYTE PTR [edi],al
  410083:	pop    es
  410084:	ss (bad) 
  410086:	xor    eax,DWORD PTR [eax+0x22]
  410089:	scas   eax,DWORD PTR es:[edi]
  41008a:	stos   DWORD PTR es:[edi],eax
  41008b:	push   edx
  41008c:	cwde   
  41008d:	sbb    al,0x84
  41008f:	mov    eax,0x7d376ef1
  410094:	fdiv   DWORD PTR [esi]
  410096:	jbe    0x4100c1
  410098:	xchg   ebp,eax
  410099:	psubw  mm3,QWORD PTR [edi-0x50]
  41009d:	xlat   BYTE PTR fs:[ebx]
  41009f:	(bad)  
  4100a0:	aaa    
  4100a1:	add    eax,0xa2c29e80
  4100a6:	mov    bl,0xe4
  4100a8:	and    ch,BYTE PTR [esi]
  4100aa:	push   ss
  4100ab:	or     al,0xfb
  4100ad:	retf   0x1b9d
  4100b0:	pusha  
  4100b1:	jmp    FWORD PTR [edi-0x32220b0f]
  4100b7:	dec    edi
  4100b8:	arpl   WORD PTR [eax-0x6f],ax
  4100bb:	jmp    0x4b53:0x298324fd
  4100c2:	repz jbe 0x410106
  4100c5:	fidivr WORD PTR [eax]
  4100c7:	fisub  DWORD PTR [ecx+0x69]
  4100ca:	xor    edx,ebp
  4100cc:	(bad)  
  4100cd:	mov    ebx,0xde65d555
  4100d2:	repz cmp eax,0xe38c3b9d
  4100d8:	push   ds
  4100d9:	imul   edx,DWORD PTR [edi-0x32],0xffffffb7
  4100dd:	jle    0x4100a2
  4100df:	xor    al,0xe0
  4100e1:	adc    dh,BYTE PTR [ebp-0x1]
  4100e4:	xchg   BYTE PTR [esi],dl
  4100e6:	pusha  
  4100e7:	enter  0x6349,0x9c
  4100eb:	cdq    
  4100ec:	nop
  4100ed:	jg     0x4100bd
  4100ef:	test   eax,0x1fcc9cb
  4100f4:	sbb    al,0x56
  4100f6:	(bad)  
  4100f8:	inc    eax
  4100f9:	outs   dx,DWORD PTR ds:[esi]
  4100fa:	and    ebp,ebx
  4100fc:	test   eax,0x12ea226e
  410101:	jnp    0x41012e
  410103:	loop   0x4100b9
  410105:	sbb    dh,BYTE PTR ds:0x322e4464
  41010b:	and    DWORD PTR [edi+0x3d],0x17
  41010f:	cli    
  410110:	xor    al,0x7d
  410112:	adc    DWORD PTR [edx+0x6bed8180],ecx
  410118:	pop    eax
  410119:	push   esi
  41011a:	popf   
  41011b:	and    BYTE PTR [eax+0x2e6c3528],0xbd
  410122:	std    
  410123:	mov    edi,0x9286576e
  410128:	mov    cl,ah
  41012a:	mov    WORD PTR [edi+0x64],?
  41012d:	pop    esi
  41012e:	add    DWORD PTR [edi-0x50482a58],edi
  410134:	adc    edx,DWORD PTR [ebx]
  410136:	lods   eax,DWORD PTR ds:[esi]
  410137:	mov    esi,0x828ee054
  41013c:	sub    al,0x31
  41013e:	push   0x13
  410140:	push   cs
  410141:	stos   BYTE PTR es:[edi],al
  410142:	bt     DWORD PTR [edx],eax
  410145:	sub    BYTE PTR [ecx],cl
  410147:	inc    esp
  410148:	aas    
  410149:	imul   esp,DWORD PTR [edi-0x7d],0xfffffff4
  41014d:	mov    esp,0x1ef78a2
  410152:	test   eax,0xb24f0380
  410157:	mov    eax,ds:0x124e9f6c
  41015c:	adc    al,0x9
  41015e:	ss inc esi
  410160:	loop   0x4101c6
  410162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410163:	mov    al,ds:0x842dd47f
  410168:	ret    
  410169:	jmp    DWORD PTR [esp+ecx*4+0x5f]
  41016d:	mov    ch,BYTE PTR [eax+0x3c8f734]
  410173:	fld    TBYTE PTR [ebp-0x3f]
  410176:	imul   eax,DWORD PTR [ebx+0x36],0x6bbf8a21
  41017d:	mov    cl,0x8e
  41017f:	shl    bh,0xbd
  410182:	pop    ebx
  410183:	and    eax,0xe2f60a6f
  410188:	fdiv   DWORD PTR [edx+0x2f5c2e5b]
  41018e:	ins    DWORD PTR es:[edi],dx
  41018f:	leave  
  410190:	out    dx,eax
  410191:	sub    DWORD PTR [ecx],0xe3796ff9
  410197:	push   0x7f0ef96b
  41019c:	pop    edx
  41019d:	ficom  WORD PTR [eax+0x73]
  4101a0:	push   DWORD PTR [esi+0x7921a525]
  4101a6:	and    ebx,DWORD PTR [esi+ebp*2+0x50774477]
  4101ad:	pop    edx
  4101ae:	cdq    
  4101af:	push   esp
  4101b0:	and    DWORD PTR [edi],esi
  4101b2:	sub    al,0x62
  4101b4:	gs fdivr st(7),st
  4101b7:	and    eax,0x9fc6e18e
  4101bc:	xor    BYTE PTR [ecx+eiz*1],0x17
  4101c0:	addr16 mov dh,0x73
  4101c3:	sub    esp,DWORD PTR ds:0xde0c3420
  4101c9:	xor    dh,BYTE PTR [edx]
  4101cb:	sub    bl,ch
  4101cd:	sub    eax,0xcfa70757
  4101d2:	mov    bl,0x5b
  4101d4:	gs push 0x5f3a3066
  4101da:	xchg   esp,eax
  4101db:	int3   
  4101dc:	mov    ds:0x89be706c,al
  4101e1:	sub    al,0x1a
  4101e3:	mov    dl,0xd8
  4101e5:	sub    eax,0x41bfc5ea
  4101ea:	fwait
  4101eb:	je     0x410210
  4101ed:	xchg   edx,eax
  4101ee:	mov    eax,0xa42a5420
  4101f3:	outs   dx,BYTE PTR ds:[esi]
  4101f4:	pop    eax
  4101f5:	mov    ebp,0x70f7fc3e
  4101fa:	cs jnp 0x410251
  4101fd:	inc    ebx
  4101fe:	dec    ebp
  4101ff:	or     DWORD PTR [ebp+0x40],0xffffffe0
  410203:	xor    BYTE PTR [ebx-0x7707c538],bh
  410209:	jecxz  0x410286
  41020b:	(bad)  
  41020c:	push   ebp
  41020d:	cld    
  41020e:	mov    al,ds:0xc24b9e5a
  410213:	mov    bh,0xc8
  410215:	ret    
  410216:	jle    0x410272
  410218:	add    DWORD PTR [ebx],ecx
  41021a:	push   esi
  41021b:	jge    0x410269
  41021d:	mov    cl,0xbe
  41021f:	and    BYTE PTR [ebp+0x32],dh
  410222:	aad    0xbf
  410224:	jmp    0x17aa8c50
  410229:	daa    
  41022a:	popa   
  41022b:	sahf   
  41022c:	sub    ah,cl
  41022e:	dec    esi
  41022f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410230:	outs   dx,DWORD PTR ds:[esi]
  410231:	push   ecx
  410232:	nop
  410233:	loopne 0x4101bd
  410235:	dec    edx
  410236:	inc    esp
  410237:	stos   BYTE PTR es:[edi],al
  410238:	sub    DWORD PTR [edi-0xb08f248],eax
  41023e:	xchg   ebp,eax
  41023f:	cwde   
  410240:	jecxz  0x4102a5
  410242:	fistp  QWORD PTR [ecx+0x62]
  410245:	(bad)  
  410246:	adc    esi,DWORD PTR [esi+eiz*1+0x13]
  41024a:	outs   dx,DWORD PTR ds:[esi]
  41024b:	cmp    BYTE PTR [esi],ch
  41024d:	push   ebx
  41024e:	int3   
  41024f:	fbstp  TBYTE PTR [edx+0x55b8b0a5]
  410255:	stc    
  410256:	cld    
  410257:	mov    gs,WORD PTR [ecx+0x27]
  41025a:	lahf   
  41025b:	xchg   esp,eax
  41025c:	fs loopne 0x4102ce
  41025f:	stos   BYTE PTR es:[edi],al
  410260:	push   ecx
  410261:	stc    
  410262:	cmp    dl,BYTE PTR [ecx]
  410264:	out    dx,al
  410265:	add    BYTE PTR [bp+0x40],bl
  410269:	in     eax,dx
  41026a:	mov    eax,0xd9c6c47d
  41026f:	xchg   esp,ecx
  410271:	sub    eax,0xd901f342
  410276:	addr16 mov ah,0xae
  410279:	fild   WORD PTR [ecx+0x1b]
  41027c:	cwde   
  41027d:	outs   dx,DWORD PTR ds:[esi]
  41027e:	loope  0x410292
  410280:	dec    ebp
  410281:	add    DWORD PTR [edx],esi
  410283:	sti    
  410284:	cwde   
  410285:	out    0xc6,al
  410287:	sub    eax,0x40619a5c
  41028c:	dec    ecx
  41028d:	adc    esi,DWORD PTR [edi]
  41028f:	cmp    al,0x44
  410291:	loop   0x410213
  410293:	mov    ah,0x6c
  410295:	inc    esi
  410296:	jmp    0x1ca7:0x9ce47461
  41029d:	out    dx,eax
  41029e:	and    ecx,DWORD PTR [ecx-0x4f]
  4102a1:	sar    BYTE PTR [ebp+0x198e9dc1],cl
  4102a7:	pop    eax
  4102a8:	mov    WORD PTR [edx+0x7c],?
  4102ab:	test   al,0xd9
  4102ad:	adc    BYTE PTR [edi+0x19],0xe4
  4102b1:	aad    0x70
  4102b3:	and    DWORD PTR [edx-0x5c],edx
  4102b6:	test   DWORD PTR [edi],0x43a594a0
  4102bc:	push   es
  4102bd:	test   DWORD PTR ds:0x7958cc1,ecx
  4102c3:	fidivr WORD PTR [ecx]
  4102c5:	xchg   ebp,eax
  4102c6:	push   ds
  4102c7:	(bad)  
  4102c8:	loopne 0x410326
  4102ca:	pop    ss
  4102cb:	lock shrd ebp,eax,0x76
  4102d0:	inc    eax
  4102d1:	sbb    bl,BYTE PTR [ebp-0x242f4d04]
  4102d7:	mov    esi,0x255d047e
  4102dc:	(bad)  
  4102dd:	mov    ah,0xd2
  4102df:	out    0x91,eax
  4102e1:	push   esi
  4102e2:	jbe    0x410277
  4102e4:	mov    dh,0xcf
  4102e6:	xor    BYTE PTR [ebp-0x29ea271b],ch
  4102ec:	jb     0x4102e3
  4102ee:	push   edx
  4102ef:	inc    edi
  4102f0:	lock mov ecx,0x57c290e8
  4102f6:	or     ah,BYTE PTR [edi-0x64c02e97]
  4102fc:	xor    esi,DWORD PTR [ebx+0x5d]
  4102ff:	sub    al,0x39
  410301:	div    dh
  410303:	loope  0x4102b3
  410305:	je     0x410301
  410307:	pusha  
  410308:	std    
  410309:	push   ds
  41030a:	and    bh,ch
  41030c:	leave  
  41030d:	sub    eax,0x8164cb66
  410312:	xchg   dh,bl
  410314:	mov    ecx,0x31810f99
  410319:	(bad)  
  41031a:	jecxz  0x4102d3
  41031c:	inc    esp
  41031d:	pop    ds
  41031e:	shl    ch,1
  410320:	sub    DWORD PTR [edi],0x52
  410323:	adc    BYTE PTR [ebx-0x16],ch
  410326:	jmp    0xfde1:0xa650af53
  41032d:	mov    al,0xe
  41032f:	lock int3 
  410331:	push   ebx
  410332:	dec    edi
  410333:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410335:	push   0xcc043f93
  41033a:	call   0xc9300c19
  41033f:	shl    DWORD PTR [eax],cl
  410341:	mov    ch,0x43
  410343:	jp     0x410391
  410345:	addr16 mov al,0x35
  410348:	inc    edi
  410349:	ret    
  41034a:	xchg   DWORD PTR ds:0x3f8d2055,eax
  410350:	fsub   st(3),st
  410352:	cmp    DWORD PTR [eax],esi
  410354:	sar    ch,1
  410356:	popa   
  410357:	mov    edi,0xad453cd2
  41035c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41035d:	push   edx
  41035e:	pushf  
  41035f:	mov    ecx,0xbdc5cb34
  410364:	es aam 0xde
  410367:	mov    edi,0x365de38d
  41036c:	shl    DWORD PTR ds:0x6431d111,cl
  410372:	jbe    0x410322
  410374:	xchg   ebp,eax
  410375:	xor    eax,0x5920c1a0
  41037b:	loope  0x4103fa
  41037d:	xchg   edx,eax
  41037e:	mov    ah,0x70
  410380:	xlat   BYTE PTR ds:[ebx]
  410381:	push   0x9d8c0596
  410386:	clc    
  410387:	adc    al,0xce
  410389:	cmp    eax,edx
  41038b:	cwde   
  41038c:	int3   
  41038d:	xchg   BYTE PTR [edi],dl
  41038f:	sbb    DWORD PTR [eiz*8+0x4710055b],edi
  410396:	xchg   edx,eax
  410397:	jmp    0x69943974
  41039c:	ins    BYTE PTR es:[edi],dx
  41039d:	inc    eax
  41039e:	jnp    0x410370
  4103a0:	outs   dx,DWORD PTR ds:[esi]
  4103a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103a2:	js     0x410384
  4103a4:	cmc    
  4103a5:	sbb    BYTE PTR es:[ecx],0x45
  4103a9:	cmp    eax,0x7b58dfbe
  4103ae:	sbb    bh,ah
  4103b0:	in     eax,dx
  4103b1:	ja     0x410427
  4103b3:	lds    edx,FWORD PTR [edi]
  4103b5:	add    ecx,edx
  4103b7:	jo     0x410342
  4103b9:	inc    ebp
  4103ba:	pusha  
  4103bb:	mov    dh,BYTE PTR [eax]
  4103bd:	stc    
  4103be:	ret    0xf7a3
  4103c1:	out    dx,al
  4103c2:	xlat   BYTE PTR ds:[ebx]
  4103c3:	inc    ebx
  4103c4:	into   
  4103c5:	retf   0x83e
  4103c8:	push   esi
  4103c9:	or     al,0x80
  4103cb:	sub    ebp,DWORD PTR [esi-0x38f86bc4]
  4103d1:	xor    ebp,esi
  4103d3:	jne    0x410379
  4103d5:	popa   
  4103d6:	and    esp,edx
  4103d8:	(bad)  
  4103d9:	inc    ebx
  4103da:	add    BYTE PTR [ebp-0x63],0xb5
  4103de:	mov    ch,BYTE PTR [edi+0x4]
  4103e1:	inc    edx
  4103e2:	pop    edx
  4103e3:	retf   
  4103e4:	cmc    
  4103e5:	cmp    BYTE PTR [eax-0x7a],ah
  4103e8:	aaa    
  4103e9:	push   ss
  4103ea:	dec    ecx
  4103eb:	mov    ebx,0xbd22dbbe
  4103f0:	adc    al,BYTE PTR [esi-0x64]
  4103f3:	jecxz  0x410390
  4103f5:	test   eax,0x40bc32ef
  4103fa:	jmp    0x877c:0x927303f5
  410401:	pop    edi
  410402:	(bad)  
  410403:	jmp    0x410466
  410405:	pop    ss
  410406:	mov    ecx,0x662504a9
  41040b:	inc    esp
  41040c:	mov    esi,0xd3460f6f
  410411:	mov    al,ds:0x626b34fb
  410416:	data16 loopne 0x4103a4
  410419:	mov    dh,0x5e
  41041b:	push   edi
  41041c:	push   eax
  41041d:	pop    ebx
  41041e:	mov    ah,BYTE PTR [ecx]
  410420:	es dec ebx
  410422:	dec    edi
  410423:	ja     0x410438
  410425:	jno    0x4103ad
  410427:	add    eax,0x5781b459
  41042c:	xor    DWORD PTR [ebx+0x4f],esi
  41042f:	ss xchg ebp,eax
  410431:	dec    esp
  410432:	sub    edx,DWORD PTR [eax-0x49]
  410435:	push   esi
  410436:	xlat   BYTE PTR ds:[ebx]
  410437:	inc    edx
  410438:	add    BYTE PTR [ecx],bh
  41043a:	mov    ds:0xefa1e499,al
  41043f:	xor    dl,ah
  410441:	repz xchg ebp,eax
  410443:	push   ecx
  410444:	push   0x5b
  410446:	sbb    BYTE PTR [eax+0x7c917800],ch
  41044c:	and    edi,DWORD PTR [esi-0x4d3ce1c1]
  410452:	pop    esp
  410453:	aaa    
  410454:	clc    
  410455:	mov    eax,0xc261d9a6
  41045a:	stos   BYTE PTR es:[edi],al
  41045b:	ins    BYTE PTR es:[edi],dx
  41045c:	pop    esi
  41045d:	mov    ds:0x83114c12,eax
  410462:	xchg   edx,eax
  410463:	mov    ebp,0x282fc60a
  410468:	ja     0x4103ec
  41046a:	mov    esi,0xd6cdfb2a
  41046f:	jecxz  0x410494
  410471:	jecxz  0x410419
  410473:	push   esp
  410474:	sbb    eax,0x6a5ff5b4
  410479:	rcl    DWORD PTR [ecx-0x18],cl
  41047c:	sti    
  41047d:	mov    dh,0x92
  41047f:	in     al,0x5a
  410481:	addr16 icebp 
  410483:	repnz imul eax,DWORD PTR [eax-0x5d],0x6c86f3a2
  41048b:	or     BYTE PTR [edi-0x533df345],ch
  410491:	out    dx,al
  410492:	and    eax,DWORD PTR ds:0xf4206dee
  410498:	imul   eax,DWORD PTR [edx-0x6],0xc
  41049c:	dec    ecx
  41049d:	(bad)  
  41049e:	dec    esi
  41049f:	xchg   esp,eax
  4104a0:	call   0xf655:0x1e502a60
  4104a7:	sub    BYTE PTR [edi+0xa1adc9f],dl
  4104ad:	sar    BYTE PTR [edx],1
  4104af:	add    esp,ecx
  4104b1:	sub    BYTE PTR ds:0xef2cf086,al
  4104b7:	out    0x9f,eax
  4104b9:	sub    BYTE PTR [edi+0x41],ah
  4104bc:	fst    DWORD PTR [ebp-0x1c]
  4104bf:	pop    ecx
  4104c0:	in     al,0xb5
  4104c2:	out    0xe7,al
  4104c4:	and    bl,BYTE PTR [edi]
  4104c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c7:	iret   
  4104c8:	ret    0x3518
  4104cb:	inc    esi
  4104cc:	shr    esi,cl
  4104ce:	push   esp
  4104cf:	push   0x16
  4104d1:	or     ecx,DWORD PTR [esi-0x140a8161]
  4104d7:	pmaxub mm5,mm6
  4104da:	xor    edx,DWORD PTR [eax+0x5d65223c]
  4104e0:	cmp    eax,0xbdb322f4
  4104e5:	and    DWORD PTR [edx],edx
  4104e7:	xchg   edx,eax
  4104e8:	iret   
  4104e9:	lds    esp,FWORD PTR [esp+edx*2+0x58e80e83]
  4104f0:	enter  0x5902,0xe9
  4104f4:	mov    ah,ah
  4104f6:	fisubr DWORD PTR [ebx+0x79]
  4104f9:	js     0x410527
  4104fb:	mov    edx,0x935270ba
  410500:	pop    ds
  410501:	sbb    esp,ebp
  410503:	adc    al,0xc5
  410505:	ret    0x95d4
  410508:	out    dx,al
  410509:	and    BYTE PTR [ecx],dl
  41050b:	push   ss
  41050c:	out    dx,eax
  41050d:	sub    ebp,edi
  41050f:	jo     0x410579
  410511:	mov    esi,0xdcae5486
  410516:	xchg   ebp,eax
  410517:	fstp   TBYTE PTR [esi-0x1348a6c]
  41051d:	inc    ebx
  41051e:	inc    edx
  41051f:	sub    BYTE PTR [eax+0x31a74a7f],bl
  410525:	cmp    ch,BYTE PTR [edx-0x24]
  410528:	cs ins BYTE PTR es:[edi],dx
  41052a:	xor    eax,0x9f769d24
  41052f:	mov    ebx,0x2c495515
  410534:	in     al,0xd3
  410536:	xchg   DWORD PTR ds:0xa0d6c1eb,ecx
  41053c:	stos   BYTE PTR es:[edi],al
  41053d:	pop    ebp
  41053e:	stc    
  41053f:	retf   
  410540:	pop    eax
  410541:	xchg   ebp,eax
  410542:	rcl    BYTE PTR [edi-0x205854f3],0x4b
  410549:	lods   eax,DWORD PTR ds:[esi]
  41054a:	dec    edi
  41054b:	adc    al,0xa3
  41054d:	(bad)
  410550:	out    dx,eax
  410551:	scas   eax,DWORD PTR es:[edi]
  410552:	sub    al,0x59
  410554:	sbb    BYTE PTR [ebp+0x51],bh
  410557:	or     DWORD PTR [ebp+0x16],eax
  41055a:	mov    DWORD PTR [esi+0x7b049cd],esi
  410560:	test   BYTE PTR [ecx],0x59
  410563:	and    edx,DWORD PTR ds:0x91eff097
  410569:	aam    0x8c
  41056b:	inc    esp
  41056c:	pusha  
  41056d:	in     al,dx
  41056e:	enter  0x1114,0x8b
  410572:	or     al,0x2b
  410574:	test   eax,0xeda7a8c0
  410579:	icebp  
  41057a:	(bad)  
  41057b:	mov    al,0x2d
  41057d:	pop    ebp
  41057e:	pop    eax
  41057f:	mov    dh,0x9
  410581:	xchg   esi,eax
  410582:	jne    0x4105a2
  410584:	push   edx
  410585:	and    esp,DWORD PTR [ebp-0x566590d]
  41058b:	xchg   ebx,eax
  41058c:	sbb    BYTE PTR [edi-0x6a5bb6bb],bh
  410592:	lds    ecx,FWORD PTR [edx+ecx*8]
  410595:	xchg   ecx,eax
  410596:	(bad)  
  410597:	(bad)  
  410598:	sub    DWORD PTR [edx-0x15],esi
  41059b:	fs retf 
  41059d:	xor    edi,DWORD PTR cs:[eax+ebp*4]
  4105a1:	nop
  4105a2:	xor    dl,BYTE PTR cs:[eax]
  4105a5:	cmp    eax,0x22f24290
  4105aa:	push   esp
  4105ab:	add    al,0xdd
  4105ad:	jbe    0x41056a
  4105af:	js     0x41062e
  4105b1:	stc    
  4105b2:	xor    DWORD PTR [eax-0x110f70ee],0x9e4b6ebc
  4105bc:	jb     0x41061b
  4105be:	mov    dh,0x82
  4105c0:	sbb    esi,ebx
  4105c2:	xchg   BYTE PTR [edi+0x3e],cl
  4105c5:	mov    ch,0x84
  4105c7:	push   eax
  4105c8:	and    ah,BYTE PTR [ebx-0x7701de70]
  4105ce:	pushf  
  4105cf:	jb     0x4105bc
  4105d1:	or     ecx,DWORD PTR [ebp-0x3c]
  4105d4:	cmp    BYTE PTR [edx+eax*4-0x7e],bh
  4105d8:	push   es
  4105d9:	gs mov ch,0xbb
  4105dc:	iret   
  4105dd:	jle    0x4105b1
  4105df:	fsub   DWORD PTR [bp+di]
  4105e2:	retf   0xa46b
  4105e5:	adc    BYTE PTR [esi-0x73],al
  4105e8:	test   DWORD PTR [edx-0x2d],esi
  4105eb:	xchg   edx,eax
  4105ec:	or     BYTE PTR [esi],cl
  4105ee:	sub    cl,BYTE PTR [ecx-0x6549a34c]
  4105f4:	and    dh,BYTE PTR [eax-0x5b]
  4105f7:	(bad)  
  4105f8:	sbb    ebx,DWORD PTR [esi-0x7ae436]
  4105fe:	aam    0x80
  410600:	push   ebp
  410601:	and    bh,BYTE PTR [ecx+0x3c]
  410604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410605:	xor    DWORD PTR [ecx+0x3735b3fd],esp
  41060b:	jmp    0x4050:0x704da73b
  410612:	xchg   ecx,eax
  410613:	push   ds
  410614:	fmul   DWORD PTR ds:0x5178a0b2
  41061a:	(bad)  
  41061b:	jnp    0x4105c0
  41061d:	mov    ebp,0xa0c45e06
  410622:	sbb    cl,BYTE PTR [esp+ebx*8+0x20]
  410626:	cmp    BYTE PTR [edi+0x6a2a0c47],0x69
  41062d:	adc    DWORD PTR [ebx],ecx
  41062f:	jnp    0x4105bf
  410631:	xchg   ebx,eax
  410632:	xor    eax,0x4b820ede
  410637:	test   al,0x92
  410639:	pop    ebx
  41063a:	adc    DWORD PTR [esi],esi
  41063c:	mov    DWORD PTR ds:[edx],edi
  41063f:	mov    ebp,0x4a5438a5
  410644:	pop    ds
  410645:	xchg   esp,eax
  410646:	and    dl,BYTE PTR [esi+0x4f38e093]
  41064c:	dec    ebx
  41064d:	mov    cl,0x2d
  41064f:	cs sub ch,ch
  410652:	add    al,0xb7
  410654:	sbb    al,cl
  410656:	fisttp DWORD PTR [edx+0x33b59baf]
  41065c:	xor    ah,bh
  41065e:	es inc ebx
  410660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410661:	ret    
  410662:	fiadd  DWORD PTR [eax+edi*4-0x54]
  410666:	je     0x41069c
  410668:	mov    bh,0xae
  41066a:	xor    al,0x58
  41066c:	mov    ah,0x75
  41066e:	rol    DWORD PTR [eax-0x4d85a36],cl
  410674:	mov    bh,0x26
  410676:	repz adc dl,BYTE PTR [eax]
  410679:	inc    esi
  41067a:	shl    bl,1
  41067c:	push   esi
  41067d:	sbb    ah,BYTE PTR [ebx]
  41067f:	loope  0x410616
  410681:	push   ebx
  410682:	(bad)  
  410683:	lods   eax,DWORD PTR ds:[esi]
  410684:	fcom   DWORD PTR [ecx+0x58e30318]
  41068a:	xchg   ecx,eax
  41068b:	imul   edx,esp,0xffffffb3
  41068e:	ret    0xc6b2
  410691:	sbb    dl,bh
  410693:	adc    esi,DWORD PTR [edx-0x371ff26f]
  410699:	mov    al,ds:0x20543a87
  41069e:	dec    edi
  41069f:	in     eax,dx
  4106a0:	pusha  
  4106a1:	aad    0x48
  4106a3:	xor    dl,BYTE PTR [eax-0x54]
  4106a6:	xchg   ecx,eax
  4106a7:	mov    esi,0x37482698
  4106ac:	sar    al,cl
  4106ae:	(bad)  
  4106af:	jmp    0x4106a7
  4106b1:	pop    ecx
  4106b2:	jne    0x4106da
  4106b4:	lods   eax,DWORD PTR ds:[esi]
  4106b5:	jle    0x410669
  4106b7:	xor    eax,0x79bb65b1
  4106bc:	mov    ds:0xb27bb737,eax
  4106c1:	mov    esi,0x8d12f785
  4106c6:	(bad)  
  4106c7:	mov    al,ds:0x9b3bca32
  4106cc:	rol    esp,0xbb
  4106cf:	popa   
  4106d0:	paddd  mm6,QWORD PTR ds:0xe5e702c0
  4106d7:	rcl    DWORD PTR [ebx-0x76d99604],1
  4106dd:	aam    0x3
  4106df:	ds jns 0x4106e2
  4106e2:	inc    DWORD PTR [ebx]
  4106e4:	mov    esi,0xf7a3d5bb
  4106e9:	adc    BYTE PTR [ebp-0x18451e9f],ah
  4106ef:	inc    edx
  4106f0:	fnstenv [ecx-0x3c1056e5]
  4106f6:	fmul   DWORD PTR [edx-0x16c531b4]
  4106fc:	je     0x410729
  4106fe:	in     eax,0xd1
  410700:	pop    ds
  410701:	pop    esp
  410702:	dec    ecx
  410703:	cld    
  410704:	add    BYTE PTR [ebx-0x6c],bl
  410707:	xchg   ecx,eax
  410708:	and    eax,0x80758c64
  41070d:	outs   dx,DWORD PTR ds:[esi]
  41070e:	das    
  41070f:	push   esi
  410710:	jnp    0x410772
  410712:	cmp    eax,0xa81eebdc
  410717:	inc    ebx
  410718:	sub    ecx,DWORD PTR [ebp+ecx*8+0x65]
  41071c:	inc    esi
  41071d:	cmp    ebp,edi
  41071f:	in     al,0x32
  410721:	aas    
  410722:	int3   
  410723:	xchg   edx,eax
  410724:	ret    0x5cc8
  410727:	xor    al,0x44
  410729:	fld    DWORD PTR [ebx+0x15648724]
  41072f:	mov    ds:0x488041d2,eax
  410734:	or     eax,0xb38b36a5
  410739:	pop    ss
  41073a:	sub    edx,DWORD PTR [esi+0x3]
  41073d:	push   esp
  41073e:	and    al,0x19
  410740:	fnsave [edx+0x74]
  410743:	fwait
  410744:	add    ah,BYTE PTR [eax]
  410746:	test   BYTE PTR [esp+eax*2],ch
  410749:	mov    esi,0x9f749796
  41074e:	cmp    al,0xe7
  410750:	xor    DWORD PTR [edx-0x46],0x10
  410754:	daa    
  410755:	xor    ecx,DWORD PTR [ecx-0x2151165a]
  41075b:	push   ds
  41075c:	mov    ebp,0x1475d0e6
  410761:	add    ebx,DWORD PTR [esi]
  410763:	(bad)  
  410764:	and    ah,BYTE PTR [ebp+0x50]
  410767:	lock in al,dx
  410769:	rcr    BYTE PTR [ecx+0x51],cl
  41076c:	pop    ebx
  41076d:	cwde   
  41076e:	xchg   ebx,eax
  41076f:	adc    BYTE PTR [ebp-0x2d],bl
  410772:	jmp    0x575d:0x1d7a8ddc
  410779:	jae    0x410736
  41077b:	mov    ebp,DWORD PTR [ebp+0xd8d3a15]
  410781:	call   0xc2b25df8
  410786:	dec    ebp
  410787:	jnp    0x41070b
  410789:	xchg   edi,eax
  41078a:	repnz mov dh,0xe1
  41078d:	push   ecx
  41078e:	push   0x76
  410790:	int    0xde
  410792:	in     al,0xcb
  410794:	mov    WORD PTR [esi-0x55958913],fs
  41079a:	pushf  
  41079b:	mov    esi,DWORD PTR [edx]
  41079d:	mov    BYTE PTR [edi-0x4],ch
  4107a0:	adc    eax,0x29e20236
  4107a5:	lock and eax,0x7a9cbcc8
  4107ab:	inc    esp
  4107ac:	inc    ecx
  4107ad:	fisub  DWORD PTR [edx]
  4107af:	sbb    al,0x4c
  4107b1:	mov    WORD PTR [edx-0x2dff8f71],?
  4107b7:	pop    edx
  4107b8:	cmp    eax,0x6fd999c4
  4107bd:	pop    eax
  4107be:	imul   esp,DWORD PTR [ebp+0x71c11dc2],0xffffffad
  4107c5:	cdq    
  4107c6:	pushf  
  4107c7:	in     al,0x7
  4107c9:	ja     0x41078f
  4107cb:	push   esi
  4107cc:	lea    eax,[ebp-0x50]
  4107cf:	daa    
  4107d0:	inc    ebp
  4107d1:	retf   
  4107d2:	fldenv [eax]
  4107d4:	pop    edi
  4107d5:	out    0xb4,eax
  4107d7:	std    
  4107d8:	aam    0xaf
  4107da:	pop    ebx
  4107db:	xor    DWORD PTR [ecx],ebx
  4107dd:	popf   
  4107de:	aam    0x11
  4107e0:	mul    ecx
  4107e2:	ret    0x29d6
  4107e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e6:	popa   
  4107e7:	cmp    eax,0xeb943d80
  4107ec:	pop    es
  4107ed:	mov    bl,0x1
  4107ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107f0:	das    
  4107f1:	mov    al,ds:0xafdfd322
  4107f6:	xchg   esp,eax
  4107f7:	out    dx,al
  4107f8:	enter  0x20f,0xbb
  4107fc:	or     dl,BYTE PTR [ecx+0x39]
  4107ff:	mov    ebp,0x942c0f31
  410804:	test   eax,0xdf337803
  410809:	adc    eax,0xe1e65bcc
  41080e:	or     ebx,esp
  410810:	cmp    esp,DWORD PTR [edi+0x15b6191e]
  410816:	push   ss
  410817:	popf   
  410818:	in     eax,dx
  410819:	sub    BYTE PTR [ebp+0x31ce0cf],ch
  41081f:	stc    
  410820:	lods   al,BYTE PTR ds:[esi]
  410821:	cs popf 
  410823:	xor    eax,0xcc0b4d7f
  410828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410829:	daa    
  41082a:	test   eax,0x7f7503fa
  41082f:	leave  
  410830:	(bad)  
  410831:	clc    
  410832:	jle    0x410868
  410834:	sahf   
  410835:	test   eax,0xc1085582
  41083a:	xchg   ebp,eax
  41083b:	repz cmp ebp,DWORD PTR [eax+0x67]
  41083f:	dec    eax
  410840:	(bad)  
  410841:	clc    
  410842:	shr    BYTE PTR [edx-0x277417de],0x1b
  410849:	xchg   BYTE PTR [ebx+0x66],ah
  41084c:	xchg   esp,eax
  41084d:	cmp    DWORD PTR ds:0xe1108aab,ebp
  410853:	xor    al,0xbc
  410855:	inc    ebp
  410856:	mov    ah,0xbc
  410858:	js     0x410897
  41085a:	xchg   ebp,eax
  41085b:	(bad)  
  41085c:	out    dx,eax
  41085d:	gs fcmovu st,st(2)
  410860:	or     DWORD PTR [ecx-0xf4456b7],eax
  410866:	sub    al,0x63
  410868:	call   0xa7b23fa7
  41086d:	xchg   edx,eax
  41086e:	pop    ebx
  41086f:	leave  
  410870:	jno    0x4108e5
  410872:	pop    ss
  410873:	xor    al,0x80
  410875:	out    0x2,al
  410877:	out    0xbf,eax
  410879:	pop    ss
  41087a:	adc    al,0x36
  41087c:	js     0x4108e4
  41087e:	and    ebp,esi
  410880:	pop    eax
  410881:	jl     0x4108a5
  410883:	mov    esp,0xc8237187
  410888:	mov    esp,0xc50aac14
  41088d:	lods   al,BYTE PTR ds:[esi]
  41088e:	cmp    DWORD PTR [edi-0x9],edi
  410891:	add    ebx,DWORD PTR [ebx]
  410893:	ins    DWORD PTR es:[edi],dx
  410894:	sbb    al,BYTE PTR [edx-0x7c]
  410897:	fnstcw WORD PTR [esi+0x6c]
  41089a:	push   0xce0c762f
  41089f:	(bad)  
  4108a0:	xchg   ebx,eax
  4108a1:	fild   QWORD PTR [ebx+0x38]
  4108a4:	push   eax
  4108a5:	xor    eax,DWORD PTR [edx-0x2c2c11d6]
  4108ab:	repz inc ecx
  4108ad:	and    DWORD PTR [esi-0x50],ebp
  4108b0:	mulps  xmm7,XMMWORD PTR [ebx+0x1b]
  4108b4:	cdq    
  4108b5:	jmp    0x187:0x6c0d46f9
  4108bc:	in     al,0xc6
  4108be:	mov    WORD PTR [ebp-0x67],?
  4108c1:	cli    
  4108c2:	mov    edi,0xc775d2b5
  4108c7:	sub    dh,BYTE PTR [ebp-0x79]
  4108ca:	push   es
  4108cb:	jecxz  0x410946
  4108cd:	and    BYTE PTR [ebx-0x10],bh
  4108d0:	mov    al,ds:0x501f9a89
  4108d5:	in     al,0x1f
  4108d7:	out    0x4c,eax
  4108d9:	in     al,0x4e
  4108db:	jae    0x4108ff
  4108dd:	stos   BYTE PTR es:[edi],al
  4108de:	ds dec ebx
  4108e0:	and    esp,DWORD PTR ds:0xc3b519c9
  4108e6:	dec    eax
  4108e7:	cmp    cl,BYTE PTR [edi-0x30]
  4108ea:	ds pop edx
  4108ec:	inc    ebp
  4108ed:	(bad)  
  4108ee:	push   ebx
  4108ef:	mov    ebp,0xdcd7ae2c
  4108f4:	adc    ebx,DWORD PTR [edi+0x6]
  4108f7:	stos   DWORD PTR es:[edi],eax
  4108f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f9:	loope  0x410909
  4108fb:	not    BYTE PTR [edi]
  4108fd:	cmp    DWORD PTR [edx-0x21b40a44],edi
  410903:	or     al,BYTE PTR [ebp-0x7e860f9f]
  410909:	shl    DWORD PTR [edi-0x36],1
  41090c:	push   edi
  41090d:	pop    ss
  41090e:	sbb    bl,BYTE PTR [edi-0x5b02f271]
  410914:	pop    esi
  410915:	jnp    0x4108f9
  410917:	sub    edi,esi
  410919:	mov    edi,0x1d73c480
  41091e:	out    dx,al
  41091f:	fwait
  410920:	jno    0x410919
  410922:	cmp    DWORD PTR [ebp+0x5ca699ed],eax
  410928:	push   ss
  410929:	jle    0x41095c
  41092b:	stos   DWORD PTR es:[edi],eax
  41092c:	aaa    
  41092d:	push   ebp
  41092e:	push   DWORD PTR [edi+0x1019e57f]
  410934:	inc    ecx
  410935:	or     al,0x74
  410937:	loop   0x410909
  410939:	adc    esi,DWORD PTR [ebx-0x7b0b05a6]
  41093f:	cmp    ch,al
  410941:	nop
  410942:	sub    BYTE PTR [edi],al
  410944:	or     eax,0x6780273a
  410949:	adc    DWORD PTR [edi+esi*8+0x65],eax
  41094d:	shr    BYTE PTR [ecx+0x6d],1
  410950:	mov    BYTE PTR [esi+0x20],al
  410953:	lahf   
  410954:	test   edx,0xee045608
  41095a:	clc    
  41095b:	adc    al,0x56
  41095d:	pop    es
  41095e:	sub    edi,ebp
  410960:	or     DWORD PTR [eax-0x5099c5e3],esp
  410966:	iret   
  410967:	xchg   esi,eax
  410968:	inc    eax
  410969:	in     eax,dx
  41096a:	das    
  41096b:	pop    eax
  41096c:	mov    ecx,0x957ad51a
  410971:	add    DWORD PTR [edx-0xec7cf95],ecx
  410977:	mov    eax,0xbc95d970
  41097c:	jo     0x41099e
  41097e:	pop    es
  41097f:	pop    edi
  410980:	(bad)  
  410982:	or     eax,0xfde094c2
  410987:	int    0x67
  410989:	inc    edi
  41098a:	xchg   edx,eax
  41098b:	xchg   edx,eax
  41098c:	fild   QWORD PTR [esi]
  41098e:	push   0x84e99b27
  410993:	mov    al,ds:0xcf24740e
  410998:	jb     0x4109ba
  41099a:	out    dx,al
  41099b:	fs (bad) 
  41099d:	adc    dh,BYTE PTR [ebx+0x5f39063a]
  4109a3:	mov    ecx,0xa347e2b3
  4109a8:	mov    edi,?
  4109aa:	imul   eax,DWORD PTR [ebx-0x33],0xaea1e06b
  4109b1:	js     0x410a10
  4109b3:	in     al,dx
  4109b4:	shr    BYTE PTR [eax+edi*4-0x30b7f848],1
  4109bb:	in     eax,dx
  4109bc:	popf   
  4109bd:	sbb    cl,BYTE PTR ds:0x9991385c
  4109c3:	sub    ebx,DWORD PTR [edx-0x17f7e5f9]
  4109c9:	inc    edx
  4109ca:	cmp    BYTE PTR [ebp-0x1e91cf68],dh
  4109d0:	pop    edi
  4109d1:	cmc    
  4109d2:	jnp    0x410954
  4109d4:	les    esi,FWORD PTR [esi+0x59]
  4109d7:	inc    ebp
  4109d8:	xlat   BYTE PTR ds:[ebx]
  4109d9:	loope  0x410a50
  4109db:	pop    ecx
  4109dc:	fisubr WORD PTR [edx+0x19]
  4109df:	lea    ebp,[eax]
  4109e1:	lea    edi,[ebx]
  4109e3:	rol    BYTE PTR [esi+0x375be7aa],0x2b
  4109ea:	xchg   ecx,eax
  4109eb:	outs   dx,DWORD PTR ds:[esi]
  4109ec:	in     eax,dx
  4109ed:	or     edx,esp
  4109ef:	push   ds
  4109f0:	outs   dx,BYTE PTR ds:[esi]
  4109f1:	jbe    0x4109e2
  4109f3:	in     al,0x2e
  4109f5:	scas   al,BYTE PTR es:[edi]
  4109f6:	inc    ebx
  4109f7:	adc    al,0xc
  4109f9:	aaa    
  4109fa:	xor    dh,BYTE PTR [ecx]
  4109fc:	rol    DWORD PTR [ebx],1
  4109fe:	cmp    esi,DWORD PTR [ebp-0x68dfa0fd]
  410a04:	jb     0x4109a3
  410a06:	idiv   DWORD PTR [ebp-0x3cecb960]
  410a0c:	cmp    eax,0xaf9c6798
  410a11:	stos   BYTE PTR es:[edi],al
  410a12:	jne    0x4109f4
  410a14:	mov    ebp,0xfb9ce408
  410a19:	sti    
  410a1a:	enter  0x6647,0x19
  410a1e:	inc    edx
  410a1f:	imul   edx,DWORD PTR ds:0x7e1799dc,0x413924d7
  410a29:	jns    0x410a87
  410a2b:	les    ebx,FWORD PTR [eax-0xb]
  410a2e:	lods   eax,DWORD PTR ds:[esi]
  410a2f:	ret    0x12b8
  410a32:	cmp    eax,0xe1580086
  410a37:	cld    
  410a38:	mov    BYTE PTR [edi+0x41],cl
  410a3b:	and    eax,0xab278ae3
  410a40:	out    dx,eax
  410a41:	sbb    DWORD PTR [eax+edi*2+0x3d],eax
  410a45:	xlat   BYTE PTR ds:[ebx]
  410a46:	inc    edx
  410a47:	sbb    BYTE PTR [esi-0x65],ah
  410a4a:	fdiv   DWORD PTR [ebp-0x72e19866]
  410a50:	aaa    
  410a51:	push   ds
  410a52:	pop    esi
  410a53:	mov    dh,0x93
  410a55:	xor    bl,BYTE PTR [ebx]
  410a57:	dec    eax
  410a58:	(bad)  
  410a59:	out    dx,al
  410a5a:	push   edi
  410a5b:	leave  
  410a5c:	cmp    DWORD PTR [ebx-0x1],ebp
  410a5f:	or     eax,DWORD PTR [edx-0x73dc4400]
  410a65:	add    dh,al
  410a67:	jmp    0xbb781037
  410a6c:	mov    edx,0x926b70ea
  410a71:	dec    eax
  410a72:	lea    esi,[ecx+0x5a0bef36]
  410a78:	ins    DWORD PTR es:[edi],dx
  410a79:	mov    esi,0x9c435088
  410a7e:	js     0x410a3a
  410a80:	icebp  
  410a81:	sub    eax,DWORD PTR [esi]
  410a83:	int3   
  410a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a85:	rcl    DWORD PTR [ebp+ebp*4+0x5],cl
  410a89:	and    ah,BYTE PTR [esi]
  410a8b:	xor    bl,BYTE PTR [edi+ecx*2-0x67]
  410a8f:	fst    DWORD PTR [edi+0x72]
  410a92:	adc    al,0x8e
  410a94:	scas   al,BYTE PTR es:[edi]
  410a95:	cmp    al,0x51
  410a97:	lahf   
  410a98:	xor    DWORD PTR [ecx+eax*1+0x51],edx
  410a9c:	mov    al,ds:0x440064c0
  410aa1:	into   
  410aa2:	or     al,0x64
  410aa4:	(bad)  
  410aa6:	push   ds
  410aa7:	(bad)  
  410aa8:	push   cs
  410aa9:	(bad)  
  410aaa:	pop    ebx
  410aab:	mov    es,ebp
  410aad:	es out 0x1e,al
  410ab0:	pop    edx
  410ab1:	retf   0xa4a9
  410ab4:	add    DWORD PTR [ebp+ecx*2+0x43a54c1a],eax
  410abb:	dec    eax
  410abc:	jge    0x410a46
  410abe:	pop    ds
  410abf:	inc    esp
  410ac0:	mov    ebp,0xb67c1a10
  410ac5:	sbb    dl,bl
  410ac7:	sbb    BYTE PTR [ebx],cl
  410ac9:	jmp    0xd63e587b
  410ace:	jno    0x410b1b
  410ad0:	adc    edx,esi
  410ad2:	mov    fs,WORD PTR [edx-0x2b]
  410ad5:	sahf   
  410ad6:	or     eax,0x7e3413c6
  410adb:	or     esi,edx
  410add:	add    BYTE PTR [edi],dh
  410adf:	push   0x6c
  410ae1:	pop    es
  410ae2:	sub    dl,BYTE PTR [ebp-0xf]
  410ae5:	ins    BYTE PTR es:[edi],dx
  410ae6:	and    BYTE PTR [ebx-0x6e],dl
  410ae9:	shl    BYTE PTR [eax+0x46d57af0],1
  410aef:	sti    
  410af0:	ret    0x5dc5
  410af3:	(bad)  
  410af4:	fcom   DWORD PTR [ebp+0x54]
  410af7:	xor    ah,BYTE PTR [ebx]
  410af9:	or     esi,ebp
  410afb:	or     cl,BYTE PTR [ecx+0x25]
  410afe:	outs   dx,DWORD PTR ds:[esi]
  410aff:	pop    ebx
  410b00:	dec    ebx
  410b01:	fs ret 0x7d5d
  410b05:	sbb    ch,BYTE PTR [edx]
  410b07:	loopne 0x410abd
  410b09:	(bad)  
  410b0a:	js     0x410b29
  410b0c:	fldcw  WORD PTR [ebx]
  410b0e:	out    0x44,al
  410b10:	or     DWORD PTR ds:0x3e056bca,0xfffffff0
  410b17:	in     al,dx
  410b18:	ficomp DWORD PTR ds:0x4263c84e
  410b1e:	jecxz  0x410b1b
  410b20:	ins    DWORD PTR es:[edi],dx
  410b21:	aas    
  410b22:	jno    0x410b55
  410b24:	fisubr DWORD PTR [eax]
  410b26:	sub    eax,0x6b7893fa
  410b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b2c:	out    0xc7,eax
  410b2e:	lods   eax,DWORD PTR ds:[esi]
  410b2f:	sbb    edi,DWORD PTR [edi+0x47]
  410b32:	cmp    DWORD PTR [ecx-0x43],0xffffffbc
  410b36:	or     BYTE PTR [ecx+0x34],dh
  410b39:	jl     0x410ba5
  410b3b:	adc    ebx,eax
  410b3d:	push   edx
  410b3e:	adc    al,0x59
  410b40:	sub    DWORD PTR [edx],esp
  410b42:	push   0x1f
  410b44:	ja     0x410b47
  410b46:	loopne 0x410af5
  410b48:	jge    0x410bc4
  410b4a:	and    DWORD PTR [ecx],0x82b5d3db
  410b50:	xchg   ecx,eax
  410b51:	jb     0x410b86
  410b53:	xchg   edi,eax
  410b54:	dec    ecx
  410b55:	jle    0x410ae9
  410b57:	int    0x61
  410b59:	xchg   ebx,eax
  410b5a:	adc    eax,0x6b1cbb0b
  410b5f:	adc    eax,0xc04009ed
  410b64:	jne    0x410b71
  410b66:	mov    ds:0x7c49efdf,al
  410b6b:	xchg   ecx,eax
  410b6c:	shl    edi,0x30
  410b6f:	inc    esp
  410b70:	cmp    DWORD PTR [esi],eax
  410b72:	ss jo  0x410b6e
  410b75:	jno    0x410b9e
  410b77:	sbb    BYTE PTR [ecx],bh
  410b79:	ret    0xb696
  410b7c:	ficom  DWORD PTR [edi+0x29]
  410b7f:	push   ebp
  410b80:	pop    ds
  410b81:	call   0x6124e3fc
  410b86:	cs xor eax,0x2454f123
  410b8c:	mov    al,BYTE PTR [esi]
  410b8e:	xor    al,0x58
  410b90:	mov    DWORD PTR [eax+eiz*1+0x6b488184],esi
  410b97:	push   ss
  410b98:	push   ebx
  410b99:	popf   
  410b9a:	xchg   edx,eax
  410b9b:	xchg   ecx,eax
  410b9c:	bnd call DWORD PTR [eax+0x6b]
  410ba0:	push   ss
  410ba1:	pop    ss
  410ba2:	mov    ebx,esi
  410ba4:	test   BYTE PTR [eax+0x1d6fd756],ah
  410baa:	or     dh,BYTE PTR [edx]
  410bac:	fs and eax,0xc8551f59
  410bb2:	lods   al,BYTE PTR ds:[esi]
  410bb3:	mov    ch,0xb5
  410bb5:	mov    eax,0xdc8d552d
  410bba:	out    0xef,al
  410bbc:	mov    eax,0x7e7ecbf
  410bc1:	cmp    BYTE PTR [ecx-0x5],dh
  410bc4:	cmp    edi,DWORD PTR [esi-0x58]
  410bc7:	imul   ecx,DWORD PTR ds:0x253f43cb,0xfffffffe
  410bce:	mov    al,0xa
  410bd0:	test   eax,0x5936c07
  410bd5:	inc    ecx
  410bd6:	jo     0x410bb6
  410bd8:	inc    esp
  410bd9:	mov    DWORD PTR [ecx],ebp
  410bdb:	int    0x9d
  410bdd:	out    dx,eax
  410bde:	in     al,dx
  410bdf:	in     eax,0xa7
  410be1:	jp     0x410c62
  410be3:	jnp    0x410c4f
  410be5:	loop   0x410b8d
  410be7:	mov    dl,0x85
  410be9:	mov    edx,0x53d78339
  410bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bef:	mov    WORD PTR [ecx+ebp*1-0x51],ds
  410bf3:	inc    esi
  410bf4:	out    0x15,al
  410bf6:	or     al,0xbb
  410bf8:	fisub  DWORD PTR [ebx-0x3cb4e921]
  410bfe:	mov    esp,0xb25c51b8
  410c03:	push   eax
  410c04:	or     al,0x39
  410c06:	inc    eax
  410c07:	mov    esi,DWORD PTR [ebx]
  410c09:	xor    ebp,DWORD PTR [esi]
  410c0b:	jle    0x410ba1
  410c0d:	and    bh,bl
  410c0f:	mov    cl,0xd7
  410c11:	mov    edx,0x50210faa
  410c16:	out    0x15,eax
  410c18:	push   0xffffffb5
  410c1a:	xor    al,0xbf
  410c1c:	jge    0x410bbc
  410c1e:	dec    esp
  410c1f:	lds    ebp,FWORD PTR [ecx+ebp*2-0x4716d0ef]
  410c26:	shl    DWORD PTR [esi+ebp*1-0x114ce1c9],0xcf
  410c2e:	pop    eax
  410c2f:	iret   
  410c30:	test   DWORD PTR [eax+0x3636ce42],eax
  410c36:	fcmovne st,st(7)
  410c38:	xor    DWORD PTR [edi+0x593cc44a],eax
  410c3e:	adc    ebx,DWORD PTR [ebx]
  410c40:	jge    0x410c0a
  410c42:	leave  
  410c43:	mov    ebx,0xb8123f0d
  410c48:	pop    esp
  410c49:	push   edx
  410c4a:	rcr    DWORD PTR [ebx-0x1d],0xc8
  410c4e:	bswap  edi
  410c50:	pop    ecx
  410c51:	hlt    
  410c52:	imul   esp,edx,0x41e8a0f8
  410c58:	lods   eax,DWORD PTR ds:[esi]
  410c59:	mov    eax,0x396e1b2a
  410c5e:	fidiv  WORD PTR [eax-0x67]
  410c61:	sti    
  410c62:	fidiv  DWORD PTR [ebx-0x71]
  410c66:	pop    ebp
  410c67:	pop    ecx
  410c68:	adc    cl,BYTE PTR [eax]
  410c6a:	sub    al,0x15
  410c6c:	repz pop ss
  410c6e:	dec    ecx
  410c6f:	(bad)  
  410c70:	jmp    0x838ce2b0
  410c75:	leave  
  410c76:	adc    bl,BYTE PTR [esi-0x1d]
  410c79:	cmp    dl,BYTE PTR [esi+eiz*1]
  410c7c:	lahf   
  410c7d:	repz mov bl,bl
  410c80:	mov    dh,0x37
  410c82:	jo     0x410c5b
  410c84:	xchg   edi,eax
  410c85:	mov    esp,ebx
  410c87:	aad    0x1
  410c89:	scas   al,BYTE PTR es:[edi]
  410c8a:	fisub  DWORD PTR ds:0xbb682aff
  410c90:	bound  ebp,QWORD PTR [ebp+0x31]
  410c93:	mov    ah,0x88
  410c95:	mov    al,ds:0xb2f25a55
  410c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c9b:	(bad)
  410c9f:	and    edi,DWORD PTR [eax+edi*8]
  410ca2:	push   ebp
  410ca3:	mov    ah,0xac
  410ca5:	jecxz  0x410c62
  410ca7:	test   al,0xa8
  410ca9:	push   0x4
  410cab:	arpl   WORD PTR [esi],sp
  410cad:	push   0x4e
  410caf:	add    edx,DWORD PTR [ecx+0x5344f214]
  410cb5:	lds    esp,FWORD PTR [edx-0x12]
  410cb8:	lds    ecx,FWORD PTR [ebp-0x7f]
  410cbb:	pop    ds
  410cbc:	fild   WORD PTR [ebx+0x24]
  410cbf:	mov    edx,0xde0fbffc
  410cc4:	mov    edi,0xfb1cd1f1
  410cc9:	and    ecx,edx
  410ccb:	pop    eax
  410ccc:	(bad)  
  410ccd:	out    0xe1,al
  410ccf:	jmp    0x87061be6
  410cd4:	mov    ebp,0x61976251
  410cd9:	dec    esi
  410cda:	fidivr DWORD PTR [ebx+ebx*2]
  410cdd:	mov    esp,0x8846fdb7
  410ce2:	and    ecx,DWORD PTR [esi+eiz*2]
  410ce5:	xchg   ebp,eax
  410ce6:	arpl   WORD PTR [ebp+0x686fb25],si
  410cec:	loope  0x410d14
  410cee:	fnsave [edi+0x1bc6d8f5]
  410cf4:	shl    BYTE PTR [edx+0x55cc6f5a],cl
  410cfa:	push   ecx
  410cfb:	mov    bh,0x6c
  410cfd:	sbb    al,0x3a
  410cff:	test   al,0x69
  410d01:	xor    dh,BYTE PTR [ebp-0x37add106]
  410d07:	fdiv   DWORD PTR [edx+0x71]
  410d0a:	mov    al,ds:0x3469784a
  410d0f:	fwait
  410d10:	push   ds
  410d11:	pop    eax
  410d12:	imul   cl
  410d14:	xor    edx,DWORD PTR [edx-0x106f8fbe]
  410d1a:	jecxz  0x410c9c
  410d1c:	jb     0x410d89
  410d1e:	sub    ebx,esi
  410d20:	out    0x49,al
  410d22:	lods   al,BYTE PTR ds:[esi]
  410d23:	or     BYTE PTR [ebx+0x45],bh
  410d26:	push   cs
  410d27:	popa   
  410d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d29:	ret    
  410d2a:	test   eax,0x8040b8ad
  410d2f:	out    dx,al
  410d30:	imul   esp,DWORD PTR [ebx-0x9],0x4b79f0ad
  410d37:	jmp    0x8603:0x5c500e34
  410d3e:	xchg   ebx,eax
  410d3f:	popa   
  410d40:	idiv   DWORD PTR [ebp-0x25f64101]
  410d46:	int    0xb0
  410d48:	and    DWORD PTR [eax-0x5ad58969],eax
  410d4e:	ins    BYTE PTR es:[edi],dx
  410d4f:	add    eax,ebp
  410d51:	test   DWORD PTR [esi-0x54],esi
  410d54:	dec    esi
  410d55:	call   FWORD PTR [eax]
  410d57:	sar    BYTE PTR [ebx-0x4895ecfd],0x5f
  410d5e:	out    dx,al
  410d5f:	leave  
  410d60:	in     eax,0xc1
  410d62:	xor    al,0x29
  410d64:	ja     0x410d31
  410d66:	sub    BYTE PTR [edi+0x2e03ec65],al
  410d6c:	add    esp,ebp
  410d6e:	sar    ah,1
  410d70:	push   ebx
  410d71:	mov    cl,0x28
  410d73:	rcr    DWORD PTR [esi],1
  410d75:	aaa    
  410d76:	mov    dl,0xbb
  410d78:	jns    0x410d80
  410d7a:	inc    ebx
  410d7b:	hlt    
  410d7c:	cwde   
  410d7d:	mov    dh,0x69
  410d7f:	and    dl,BYTE PTR [ecx]
  410d81:	mov    esi,0xdfe6e012
  410d86:	repz in eax,0xeb
  410d89:	cwde   
  410d8a:	mov    ecx,0xbbb758f2
  410d8f:	cli    
  410d90:	and    eax,DWORD PTR [eax-0x4e944e43]
  410d96:	add    BYTE PTR [ebx-0xfbdbbaf],bl
  410d9c:	mov    ds:0x77265a21,al
  410da2:	scas   al,BYTE PTR es:[edi]
  410da3:	fldcw  WORD PTR [ecx]
  410da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da6:	pop    ss
  410da7:	(bad)  
  410da8:	mov    edx,0x1b63f26e
  410dad:	xchg   DWORD PTR [ecx],edx
  410daf:	pop    DWORD PTR [ebp+edx*2+0x27]
  410db3:	and    bl,BYTE PTR [esi]
  410db5:	imul   esp,DWORD PTR [edi],0x85ceafe3
  410dbb:	xor    al,0x97
  410dbd:	rcr    BYTE PTR [ecx-0xcd99022],1
  410dc3:	clc    
  410dc4:	or     BYTE PTR [esi+ebx*1-0xef03f7a],0xae
  410dcc:	sbb    al,0x89
  410dce:	add    eax,DWORD PTR [ebx-0x4]
  410dd1:	fcmovbe st,st(6)
  410dd3:	sti    
  410dd4:	xor    al,0x23
  410dd6:	dec    edi
  410dd7:	xchg   ebx,ebp
  410dd9:	in     eax,0xb7
  410ddb:	pop    eax
  410ddc:	ds rcl ebx,cl
  410ddf:	mov    ebp,0x20a12c12
  410de4:	in     eax,0x60
  410de6:	outs   dx,DWORD PTR ds:[esi]
  410de7:	push   cs
  410de8:	outs   dx,BYTE PTR ds:[esi]
  410de9:	inc    ebx
  410dea:	cmp    al,BYTE PTR [ecx-0x140b64a3]
  410df0:	mov    esp,0xe586c7dd
  410df5:	loope  0x410e6d
  410df7:	cmc    
  410df8:	jb     0x410e5e
  410dfa:	and    DWORD PTR [ebp-0x7e],edi
  410dfd:	xor    ah,BYTE PTR [edx-0x2359611f]
  410e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e04:	scas   al,BYTE PTR es:[edi]
  410e05:	out    dx,al
  410e06:	and    eax,0x711420ef
  410e0b:	lock push ecx
  410e0d:	mov    ds:0x67418a40,al
  410e12:	outs   dx,DWORD PTR ds:[esi]
  410e13:	xor    al,0xfa
  410e15:	push   ebx
  410e16:	cmc    
  410e17:	push   cs
  410e18:	in     eax,0x67
  410e1a:	mov    BYTE PTR [eax],dh
  410e1c:	mov    ch,0x8e
  410e1e:	int3   
  410e1f:	adc    al,0x51
  410e21:	mov    al,0x2d
  410e23:	adc    eax,0xa284ff11
  410e28:	mov    bl,0xeb
  410e2a:	ret    0xa55b
  410e2d:	xor    esi,DWORD PTR fs:[eax-0x3be27ac6]
  410e34:	inc    esp
  410e35:	jl     0x410e2b
  410e37:	cmp    eax,0x2cc6da5d
  410e3c:	vpminsw xmm4,xmm3,XMMWORD PTR [edi-0x1]
  410e41:	sub    DWORD PTR [esi],edx
  410e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e44:	push   ds
  410e45:	aam    0x85
  410e47:	(bad)  
  410e48:	adc    edi,ebp
  410e4a:	rcr    BYTE PTR cs:[ebp+0x7e],0xba
  410e4f:	fdiv   QWORD PTR ds:0xe05e1556
  410e55:	mov    cl,ch
  410e57:	fsubrp st(2),st
  410e59:	jle    0x410ea3
  410e5b:	inc    edx
  410e5c:	and    al,0x91
  410e5e:	ffree  st(2)
  410e60:	loope  0x410eb5
  410e62:	aam    0x17
  410e64:	mov    al,ds:0x98889139
  410e69:	out    0x8a,al
  410e6b:	jecxz  0x410ebc
  410e6d:	test   DWORD PTR [esi+0x3c],esi
  410e70:	add    ch,BYTE PTR [edx-0x5b]
  410e73:	(bad)  
  410e74:	call   0x889d060a
  410e79:	(bad)  
  410e7a:	shr    BYTE PTR [ecx+0x56],0xc6
  410e7e:	push   ds
  410e7f:	add    al,0x9f
  410e81:	fmul   QWORD PTR [ecx+edi*1-0x6]
  410e85:	pop    ebp
  410e86:	scas   eax,DWORD PTR es:[edi]
  410e87:	out    dx,al
  410e88:	hlt    
  410e89:	dec    ebp
  410e8a:	js     0x410e37
  410e8c:	popa   
  410e8d:	jecxz  0x410eff
  410e8f:	cmp    DWORD PTR [ecx-0x60eafea7],esi
  410e95:	adc    al,0x27
  410e97:	inc    esi
  410e98:	jb     0x410e52
  410e9a:	jae    0x410ec3
  410e9c:	clc    
  410e9d:	inc    esi
  410e9e:	push   esi
  410e9f:	test   edi,edi
  410ea1:	out    0xb6,eax
  410ea3:	mov    bh,0x30
  410ea5:	loope  0x410e88
  410ea7:	adc    BYTE PTR [edx-0x75],ch
  410eaa:	cmc    
  410eab:	inc    edx
  410eac:	rol    DWORD PTR [ecx-0x5b493dda],1
  410eb2:	and    al,0x93
  410eb4:	test   eax,0xa7bc5988
  410eb9:	add    BYTE PTR [edi+0xb],bh
  410ebc:	outs   dx,BYTE PTR ds:[esi]
  410ebd:	lahf   
  410ebe:	add    DWORD PTR [edx],edx
  410ec0:	xchg   esi,eax
  410ec1:	or     cl,BYTE PTR [ebx]
  410ec3:	cli    
  410ec4:	mov    ecx,?
  410ec6:	pop    eax
  410ec7:	mov    ebp,DWORD PTR [ebx+edi*2+0x6bb475c0]
  410ece:	xor    BYTE PTR [esi+0x2f866619],bh
  410ed4:	adc    BYTE PTR [edx+ebx*2-0x20],bh
  410ed8:	cld    
  410ed9:	outs   dx,DWORD PTR ds:[esi]
  410eda:	in     al,0x63
  410edc:	cmp    BYTE PTR [esi],ch
  410ede:	aam    0xa7
  410ee0:	fnstcw WORD PTR [edx+edi*2]
  410ee3:	add    al,0x76
  410ee5:	mov    bh,0xf2
  410ee7:	test   eax,0x94d011f7
  410eec:	clc    
  410eed:	popf   
  410eee:	(bad)  
  410eef:	call   0xd188:0x98395cb9
  410ef6:	pop    esi
  410ef7:	aad    0x6f
  410ef9:	pop    esi
  410efa:	sub    esi,ebx
  410efc:	test   eax,0xbc5dae19
  410f01:	cmc    
  410f02:	sub    eax,edi
  410f04:	push   ds
  410f05:	jbe    0x410eb9
  410f07:	retf   
  410f08:	cmp    BYTE PTR [ecx-0x6dea2951],ch
  410f0e:	add    al,BYTE PTR [ecx+0x5b0f2805]
  410f14:	test   BYTE PTR [eax],ch
  410f16:	cld    
  410f17:	call   0x27688344
  410f1c:	push   0x43712b41
  410f21:	loope  0x410f86
  410f23:	add    BYTE PTR [edx+0x598b4d39],dl
  410f29:	ins    DWORD PTR es:[edi],dx
  410f2a:	in     al,0x7f
  410f2c:	and    ch,bl
  410f2e:	adc    al,0xbf
  410f30:	and    edx,DWORD PTR [edi-0x58]
  410f33:	cwde   
  410f34:	xor    eax,0xc5e54d8d
  410f39:	sbb    bl,bl
  410f3b:	int    0xc4
  410f3d:	jp     0x410fbc
  410f3f:	push   eax
  410f40:	int3   
  410f41:	mov    cl,ch
  410f43:	scas   eax,DWORD PTR es:[edi]
  410f44:	jmp    0x128d:0x2f159b42
  410f4b:	sub    DWORD PTR [ebp-0x59],esp
  410f4e:	call   FWORD PTR [ebp+esi*1+0x42e79d94]
  410f55:	div    dl
  410f57:	mov    DWORD PTR [edx-0x7f],esi
  410f5a:	pop    esi
  410f5b:	iret   
  410f5c:	icebp  
  410f5d:	fstp   TBYTE PTR [edi+eiz*8]
  410f60:	aas    
  410f61:	or     al,0xe8
  410f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f64:	jbe    0x410fa1
  410f66:	into   
  410f67:	jmp    0x6553:0xa5264fb6
  410f6e:	retf   
  410f6f:	cmc    
  410f70:	jnp    0x410fa7
  410f72:	test   al,0x2d
  410f74:	out    dx,al
  410f75:	(bad)  
  410f76:	push   ss
  410f77:	adc    bh,dh
  410f79:	fild   DWORD PTR [eax+ebx*1+0x6a]
  410f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7e:	adc    ch,BYTE PTR [eax+0x3c]
  410f81:	stc    
  410f82:	sub    esp,eax
  410f84:	in     eax,0x75
  410f86:	mov    DWORD PTR [ebp-0x19],ebp
  410f89:	add    al,0x4e
  410f8b:	jmp    FWORD PTR [eax+0x30]
  410f8e:	dec    eax
  410f8f:	mov    eax,ds:0xc738837a
  410f94:	scas   eax,DWORD PTR es:[edi]
  410f95:	int3   
  410f96:	test   al,0x18
  410f98:	aam    0x23
  410f9a:	stc    
  410f9b:	mov    eax,0x3c60118c
  410fa0:	shr    DWORD PTR [ecx],cl
  410fa2:	and    eax,0xafd27059
  410fa7:	mov    eax,ds:0xf1faa312
  410fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fad:	bound  ebp,QWORD PTR [edx-0x6ea2dad1]
  410fb3:	lods   al,BYTE PTR ds:[esi]
  410fb4:	arpl   sp,bx
  410fb6:	gs mov cl,0xad
  410fb9:	icebp  
  410fba:	fsubr  DWORD PTR [edx]
  410fbc:	sbb    esp,edx
  410fbe:	xor    al,0xca
  410fc0:	lds    ecx,FWORD PTR [esi]
  410fc2:	inc    ebp
  410fc3:	mov    DWORD PTR [edx],esi
  410fc5:	sar    BYTE PTR [eax+0x2c2753a7],1
  410fcb:	inc    esi
  410fcc:	sahf   
  410fcd:	or     ebx,ebp
  410fcf:	mov    bl,0xc9
  410fd1:	jb     0x410f5f
  410fd3:	test   DWORD PTR [ebx],0xca0af3d2
  410fd9:	daa    
  410fda:	call   0x6f83:0x89e4bcf0
  410fe1:	mov    DWORD PTR [ebp-0x7b113e5d],ecx
  410fe7:	sub    BYTE PTR [edi-0x5f],ch
  410fea:	xchg   ecx,eax
  410feb:	xor    BYTE PTR [edi],0x94
  410fee:	push   eax
  410fef:	aam    0xb5
  410ff1:	adc    edi,edx
  410ff3:	aad    0xea
  410ff5:	add    cl,0xe8
  410ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff9:	sub    ebx,DWORD PTR ds:0x9cfd4fe4
  410fff:	(bad)  
  411000:	pushf  
  411001:	addr16 jge 0x410f8d
  411004:	(bad)  
  411006:	in     eax,dx
  411007:	or     eax,0xac03a83c
  41100c:	in     al,dx
  41100d:	adc    BYTE PTR [ebp*1-0x5270564b],bl
  411014:	cs in  eax,0x3a
  411017:	push   ebp
  411018:	xor    al,0x3e
  41101a:	and    dh,BYTE PTR [ecx+0x301f3d46]
  411020:	sub    bl,dl
  411022:	shl    ebp,cl
  411024:	(bad)  
  411026:	mov    eax,ds:0xfbbee0b7
  41102b:	xchg   esp,eax
  41102c:	fbld   TBYTE PTR [ecx+eax*4-0x14]
  411030:	pop    ss
  411031:	sti    
  411032:	add    al,0x53
  411034:	in     eax,dx
  411035:	fcmovu st,st(2)
  411037:	retf   
  411038:	out    dx,eax
  411039:	cmp    BYTE PTR [ebx+0xe],ch
  41103c:	push   edx
  41103d:	inc    eax
  41103e:	imul   eax,DWORD PTR ds:0x1dbc3b4d,0x2fd24911
  411048:	aam    0x84
  41104a:	or     cl,bh
  41104c:	jp     0x411035
  41104e:	mov    esp,ds
  411050:	aas    
  411051:	not    DWORD PTR [esi]
  411053:	std    
  411054:	jnp    0x411056
  411056:	test   DWORD PTR [edi+0x28],0xbdf2cbbe
  41105d:	and    BYTE PTR [eax],0xa6
  411060:	lds    ebp,FWORD PTR [ecx+0x44f96c72]
  411066:	xor    ch,al
  411068:	mov    bl,0xd7
  41106a:	and    bl,BYTE PTR [ebp-0x47]
  41106d:	pusha  
  41106e:	and    DWORD PTR [esi-0x5477b2bf],esp
  411074:	lea    esi,[edx]
  411076:	mov    ds:0x66ceceb0,al
  41107b:	sbb    BYTE PTR [edi-0x4dd7b73],cl
  411081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411082:	rol    DWORD PTR [edi+eiz*4],cl
  411085:	cmp    BYTE PTR [esi-0x508f947b],bl
  41108b:	(bad)  
  41108c:	and    ecx,DWORD PTR [ecx+0x2616291c]
  411092:	repz cmp ebx,DWORD PTR [ebx]
  411095:	rcl    BYTE PTR [esi],0xc8
  411098:	inc    ebx
  411099:	retf   0xfd38
  41109c:	mov    eax,ds:0x4870474b
  4110a1:	mov    al,0xbc
  4110a3:	xor    BYTE PTR [ebp-0x75ff8354],0xab
  4110aa:	mov    ch,0xc6
  4110ac:	mov    bl,0x32
  4110ae:	aaa    
  4110af:	repz rcl ch,cl
  4110b2:	lds    edi,FWORD PTR [ebx]
  4110b4:	jo     0x411055
  4110b6:	push   esi
  4110b7:	mov    eax,0xbb3a0b03
  4110bc:	(bad)  
  4110bd:	shr    DWORD PTR [edx],1
  4110bf:	mov    ebx,0x899db7f5
  4110c4:	cmp    eax,0xada3fe06
  4110c9:	adc    bl,BYTE PTR [ebp+0x26]
  4110cc:	shl    BYTE PTR [ecx+0x41a25df],1
  4110d2:	mov    cl,0x4a
  4110d4:	or     DWORD PTR [edx],eax
  4110d6:	mov    dh,0x6e
  4110d8:	xor    edx,DWORD PTR [edi]
  4110da:	mov    al,0xef
  4110dc:	and    edi,edi
  4110de:	pusha  
  4110df:	in     al,dx
  4110e0:	or     al,0xad
  4110e2:	(bad)  
  4110e3:	iret   
  4110e4:	stc    
  4110e5:	add    eax,0xf98686b8
  4110ea:	sub    eax,0x32b0b0f5
  4110ef:	test   eax,0xd30767ee
  4110f4:	or     ebx,DWORD PTR [esi+edi*1+0x28]
  4110f8:	ret    0x7a8
  4110fb:	pop    ebp
  4110fc:	jecxz  0x411085
  4110fe:	push   edi
  4110ff:	test   al,0x41
  411101:	and    al,0x72
  411103:	leave  
  411104:	rol    DWORD PTR [ebp+0x11ffbc9b],0x88
  41110b:	ins    BYTE PTR es:[edi],dx
  41110c:	adc    DWORD PTR [ebx+0x1b0615c9],0xe0961593
  411116:	and    DWORD PTR [esi+esi*4],edi
  411119:	adc    bl,BYTE PTR [ebp-0x5d]
  41111c:	add    al,0x8
  41111e:	scas   al,BYTE PTR es:[edi]
  41111f:	mov    ebp,0x8e1cb1f2
  411124:	stos   DWORD PTR es:[edi],eax
  411125:	xor    BYTE PTR [edi-0x7c],dl
  411128:	fisubr WORD PTR [ebx]
  41112a:	fnstsw WORD PTR [esi-0x1875f17a]
  411130:	mov    al,0xa5
  411132:	bound  esp,QWORD PTR [esi]
  411134:	sub    ah,BYTE PTR [ebx+0x38]
  411137:	xchg   ebx,eax
  411138:	or     ebp,edx
  41113a:	(bad)  
  41113b:	scas   al,BYTE PTR es:[edi]
  41113c:	add    eax,0xc6cb275
  411141:	add    al,0xec
  411143:	aam    0x4b
  411145:	hlt    
  411146:	fld    TBYTE PTR [eax-0x2e]
  411149:	in     al,dx
  41114a:	loopne 0x411199
  41114c:	fcomi  st,st(5)
  41114e:	lds    ebp,FWORD PTR [ebx-0x499c1448]
  411154:	les    esp,FWORD PTR [ebx]
  411156:	xchg   ecx,eax
  411157:	push   0x88cf7386
  41115c:	xor    BYTE PTR [eax+0x5c],cl
  41115f:	(bad)  
  411160:	push   ebp
  411161:	call   0x9246:0x6026e4c5
  411168:	jl     0x4111b4
  41116a:	xchg   edi,eax
  41116b:	cmp    al,BYTE PTR [ecx]
  41116d:	adc    bh,BYTE PTR [eax+0x1a]
  411170:	mov    eax,ds:0x6694bfaa
  411175:	sbb    ebx,DWORD PTR [edx+0x5d772bef]
  41117b:	xor    DWORD PTR [edx+0x229f50e2],ecx
  411181:	pop    ecx
  411182:	mov    esp,0x9399d46b
  411187:	(bad)  
  411188:	lods   eax,DWORD PTR ds:[esi]
  411189:	sahf   
  41118a:	sub    eax,0x8374b65a
  41118f:	push   ecx
  411190:	imul   ebx,DWORD PTR [edx+0x4bb46273],0x3155d281
  41119a:	and    eax,0x35b0be1a
  41119f:	add    esi,DWORD PTR [esi+eax*4-0x34]
  4111a3:	jbe    0x411132
  4111a5:	inc    edx
  4111a6:	ret    
  4111a7:	cwde   
  4111a8:	call   0x8d3a:0x78e694d1
  4111af:	fs dec esp
  4111b1:	cld    
  4111b2:	leave  
  4111b3:	sub    BYTE PTR [edx+eax*8-0x64ba1db],al
  4111ba:	int    0x98
  4111bc:	imul   esi,DWORD PTR [eax],0x4a
  4111bf:	stos   BYTE PTR es:[edi],al
  4111c0:	imul   ebp,edx,0x40b62055
  4111c6:	mov    eax,0x322ac81a
  4111cb:	push   es
  4111cc:	sub    DWORD PTR [edx],edi
  4111ce:	and    eax,0x4ed6b48d
  4111d3:	daa    
  4111d4:	inc    ebx
  4111d5:	sub    al,0xe
  4111d7:	lods   eax,DWORD PTR ds:[esi]
  4111d8:	outs   dx,BYTE PTR ds:[esi]
  4111d9:	xor    al,0x2d
  4111db:	(bad)  
  4111dc:	mov    al,0x31
  4111de:	(bad)  
  4111df:	in     eax,dx
  4111e0:	inc    DWORD PTR [esi+0x51]
  4111e3:	adc    al,0xa0
  4111e5:	xchg   DWORD PTR [edx],esp
  4111e7:	cs xor eax,0x46737aa4
  4111ed:	sbb    BYTE PTR [esi+0x4c],bh
  4111f0:	and    eax,0x7e495d8d
  4111f5:	sub    al,0x9a
  4111f7:	stos   BYTE PTR es:[edi],al
  4111f8:	ins    DWORD PTR es:[edi],dx
  4111f9:	sbb    BYTE PTR [eax+0x489b669e],ch
  4111ff:	outs   dx,DWORD PTR ds:[esi]
  411200:	xchg   edi,eax
  411201:	push   edx
  411202:	stc    
  411203:	addr16 mov bl,0x36
  411206:	sub    DWORD PTR [eax],ecx
  411208:	xor    eax,0xef1b2f2c
  41120d:	jmp    0x411218
  41120f:	fxch   st(1)
  411211:	mov    ds:0xb01963f9,eax
  411216:	xor    DWORD PTR [edi],eax
  411218:	sbb    ch,BYTE PTR [ebp-0xaadf233]
  41121e:	push   es
  41121f:	pop    ebx
  411220:	pop    esp
  411221:	cmp    dh,dl
  411223:	pusha  
  411224:	xor    eax,0xa2984a77
  411229:	mov    ebp,0xda3b2e3d
  41122e:	mov    dl,0xcf
  411230:	pop    ss
  411231:	jnp    0x411227
  411233:	arpl   WORD PTR [edx],si
  411235:	push   ebx
  411236:	fld    TBYTE PTR [esi]
  411238:	lods   al,BYTE PTR ds:[esi]
  411239:	jmp    0x62b7b50
  41123e:	jns    0x411280
  411240:	mov    eax,ds:0xd42cd9cf
  411245:	sbb    BYTE PTR [ebp+0x1c],cl
  411248:	jns    0x411225
  41124a:	int    0xac
  41124c:	test   esi,0xe9730eed
  411252:	retf   
  411253:	popf   
  411254:	pop    ecx
  411255:	aad    0x24
  411257:	push   0x11fa6882
  41125c:	retf   
  41125d:	xor    eax,DWORD PTR [ebx+0x7647c996]
  411263:	jo     0x411256
  411265:	les    ebx,FWORD PTR [edi]
  411267:	sbb    DWORD PTR [eax-0x305ee0ea],edi
  41126d:	mov    eax,DWORD PTR [ebp-0x7f]
  411270:	xor    edi,DWORD PTR [eax]
  411272:	and    DWORD PTR [ecx-0x21aba46f],ebx
  411278:	or     eax,0x3ba44fd6
  41127d:	xor    ebp,DWORD PTR [edx]
  41127f:	xor    eax,ebx
  411281:	xlat   BYTE PTR ds:[ebx]
  411282:	dec    edi
  411283:	es (bad) 
  411285:	mov    ecx,0xfe50d54c
  41128a:	pop    eax
  41128b:	ror    DWORD PTR [ecx-0x26],1
  41128e:	add    esi,ebx
  411290:	inc    esi
  411291:	push   ecx
  411292:	rol    BYTE PTR [ebx],1
  411294:	sub    eax,ebx
  411296:	iret   
  411297:	jns    0x41124f
  411299:	jg     0x41121c
  41129b:	dec    eax
  41129c:	xchg   ebp,eax
  41129d:	xchg   ebp,eax
  41129e:	int3   
  41129f:	add    BYTE PTR [ebx+0x30bcdee8],dl
  4112a5:	mov    eax,ds:0xd93738c1
  4112aa:	lock sar BYTE PTR [edi+0x3bdea650],cl
  4112b1:	xor    eax,0x9eef6077
  4112b6:	js     0x4112ca
  4112b8:	sub    DWORD PTR [edi],eax
  4112ba:	xchg   ecx,eax
  4112bb:	fwait
  4112bc:	xchg   cx,ax
  4112be:	jge    0x411253
  4112c0:	sub    dl,cl
  4112c2:	ins    DWORD PTR es:[edi],dx
  4112c3:	sub    eax,0xd79b570b
  4112c8:	inc    ecx
  4112c9:	in     eax,dx
  4112ca:	fnstcw WORD PTR [edi-0x3f1b2dbf]
  4112d0:	jg     0x41129d
  4112d2:	jbe    0x41131b
  4112d4:	cli    
  4112d5:	(bad)  
  4112d6:	xor    BYTE PTR [eax],cl
  4112d8:	stos   DWORD PTR es:[edi],eax
  4112d9:	sbb    al,0x7d
  4112db:	inc    esi
  4112dc:	ss (bad) 
  4112de:	mov    ecx,0xc6d01d70
  4112e3:	or     cl,bh
  4112e5:	adc    DWORD PTR cs:[edx],esp
  4112e8:	pushf  
  4112e9:	stos   DWORD PTR es:[edi],eax
  4112ea:	mov    esi,0x829a2456
  4112ef:	adc    al,0x8
  4112f1:	mov    ecx,0xbddf170d
  4112f6:	or     eax,DWORD PTR [esp-0x4a]
  4112fa:	stos   DWORD PTR es:[edi],eax
  4112fb:	xchg   ebx,eax
  4112fc:	cdq    
  4112fd:	enter  0x7e58,0x64
  411301:	cs pop ebx
  411303:	outs   dx,DWORD PTR ds:[esi]
  411304:	mov    eax,ds:0x19c6b3db
  411309:	xor    ebp,DWORD PTR [ecx+0x58f0d909]
  41130f:	jb     0x41135a
  411311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411312:	imul   esi,DWORD PTR ds:0x89bff744,0x8ff09d2e
  41131c:	mul    BYTE PTR [esi+0x5f]
  41131f:	test   eax,0x5f93b7bc
  411324:	mov    DWORD PTR [esi+0x51578020],0x61e4956a
  41132e:	dec    esp
  41132f:	cld    
  411330:	cmp    eax,0xab53f2e5
  411335:	sahf   
  411336:	push   esp
  411337:	cdq    
  411338:	lods   eax,DWORD PTR ds:[esi]
  411339:	add    al,BYTE PTR [edx+0x5ade17f0]
  41133f:	sub    cl,ch
  411341:	push   0xffffffbd
  411343:	pop    eax
  411344:	(bad)  
  411345:	dec    ebx
  411346:	mov    ebp,0x589df9df
  41134b:	sub    DWORD PTR [esi+0x20ee2d00],esp
  411351:	mov    bl,0xda
  411353:	adc    DWORD PTR [ecx],0xffffffa4
  411356:	cmc    
  411357:	ror    BYTE PTR [ebx+0x14],1
  41135a:	xchg   edx,eax
  41135b:	adc    bl,BYTE PTR [edi]
  41135d:	xchg   esp,eax
  41135e:	adc    cl,BYTE PTR [ebx-0x33]
  411361:	sub    bl,BYTE PTR [edi+0x50]
  411364:	mov    esi,0x7098a334
  411369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41136a:	xor    BYTE PTR [ebx],0x66
  41136d:	xchg   ebp,eax
  41136e:	mov    cl,0x5e
  411370:	rcl    DWORD PTR [ecx-0x80],cl
  411373:	sub    DWORD PTR [edx+0x39003be9],ecx
  411379:	mov    bh,0x9d
  41137b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41137c:	xchg   esi,eax
  41137d:	cmp    DWORD PTR [esi+0x3a],esp
  411380:	mov    ecx,0x8f29a803
  411385:	dec    edx
  411386:	xchg   DWORD PTR [edx],eax
  411388:	sub    al,0x7
  41138a:	scas   eax,DWORD PTR es:[edi]
  41138b:	das    
  41138c:	fbld   TBYTE PTR [esi+ebx*2+0x53bb8b99]
  411393:	cli    
  411394:	(bad)  [di-0x16]
  411398:	sti    
  411399:	pop    edx
  41139a:	mov    eax,0x7e4e296c
  41139f:	scas   al,BYTE PTR es:[edi]
  4113a0:	xchg   esi,eax
  4113a1:	or     al,0x31
  4113a3:	div    dh
  4113a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a6:	jecxz  0x4113cb
  4113a8:	sub    dl,BYTE PTR [eax+0x7a]
  4113ab:	xor    ebp,DWORD PTR [edx]
  4113ad:	xchg   ebx,eax
  4113ae:	cmovae ebp,DWORD PTR [ebx+ecx*8+0x6bcd3bf7]
  4113b6:	test   al,0xef
  4113b8:	mov    ebx,DWORD PTR [esi-0x6b3c6c0a]
  4113be:	dec    ebx
  4113bf:	jno    0x4113e4
  4113c1:	cli    
  4113c2:	imul   eax,DWORD PTR [esi-0x6e],0xe735c110
  4113c9:	xchg   esp,eax
  4113ca:	mov    ds:0xd089f485,eax
  4113cf:	aas    
  4113d0:	push   esi
  4113d1:	xchg   edx,eax
  4113d2:	repnz or bl,BYTE PTR [edi]
  4113d5:	sbb    bh,dl
  4113d7:	ret    
  4113d8:	mov    DWORD PTR [edi-0x5ddd5703],ebx
  4113de:	pop    edx
  4113df:	ins    BYTE PTR es:[edi],dx
  4113e0:	jns    0x4113a5
  4113e2:	and    DWORD PTR [ebx],0x2
  4113e5:	aad    0x99
  4113e7:	jb     0x4113b1
  4113e9:	daa    
  4113ea:	jno    0x4113cf
  4113ec:	sti    
  4113ed:	aad    0x64
  4113ef:	bound  esp,QWORD PTR [edi]
  4113f1:	inc    ebx
  4113f2:	inc    ecx
  4113f3:	adc    eax,0xfa1febdc
  4113f8:	cdq    
  4113f9:	jp     0x4113e2
  4113fb:	jg     0x4113da
  4113fd:	fwait
  4113fe:	sub    DWORD PTR [eax],ebx
  411400:	push   edx
  411401:	push   ecx
  411402:	gs call 0x8b31a341
  411408:	xor    ah,BYTE PTR [ecx+eax*8-0x2a]
  41140c:	push   es
  41140d:	cmp    DWORD PTR [edi+0x75c5820c],0xfffffff0
  411414:	out    dx,al
  411415:	sbb    al,0xac
  411417:	pushf  
  411418:	mov    edx,0x362477d3
  41141d:	pop    ds
  41141e:	sar    dh,0x42
  411421:	mov    ds:0x599d1da0,al
  411426:	jle    0x4113de
  411428:	xchg   ebp,eax
  411429:	test   DWORD PTR [edx],ebx
  41142b:	add    ch,BYTE PTR [edx-0x1b1a9b26]
  411431:	mov    eax,esi
  411433:	and    DWORD PTR [ebx+0x2e],edx
  411436:	scas   al,BYTE PTR es:[edi]
  411437:	and    BYTE PTR [ecx-0x6f],bl
  41143a:	xor    al,0x58
  41143c:	dec    ecx
  41143d:	and    esi,DWORD PTR [ebp+0x12153e4a]
  411443:	pop    edx
  411444:	inc    ecx
  411445:	adc    eax,0xc568d39b
  41144a:	in     eax,0xac
  41144c:	mov    dh,0x35
  41144e:	sar    BYTE PTR [edi],1
  411450:	out    0x9a,al
  411452:	mov    ch,0xd4
  411454:	lods   eax,DWORD PTR ds:[esi]
  411455:	xchg   edi,eax
  411456:	aas    
  411457:	neg    BYTE PTR [edx]
  411459:	xor    DWORD PTR [edx+0xf193d7f],0x82fa9307
  411463:	mov    edx,ecx
  411465:	dec    DWORD PTR [bp+di-0x6300]
  41146a:	(bad)  [eax]
  41146c:	dec    ebp
  41146d:	daa    
  41146e:	cli    
  41146f:	add    BYTE PTR [ebp*8+0x58c2e892],dl
  411476:	pop    eax
  411477:	jb     0x411494
  411479:	call   esp
  41147b:	xchg   edx,eax
  41147c:	leave  
  41147d:	cmc    
  41147e:	push   edx
  41147f:	retf   
  411480:	cmp    edx,DWORD PTR [edx+edx*4]
  411483:	sbb    BYTE PTR [ebp-0x60],cl
  411486:	or     ah,dl
  411488:	sub    eax,0xf7813420
  41148d:	sub    eax,DWORD PTR [edx-0x7d824605]
  411493:	rcr    BYTE PTR [edi],1
  411495:	inc    DWORD PTR [edx+0x3360c5a7]
  41149b:	in     eax,dx
  41149c:	adc    ch,dl
  41149e:	inc    ecx
  41149f:	popf   
  4114a0:	xchg   edi,eax
  4114a1:	into   
  4114a2:	cmp    esi,0x4bfee7b3
  4114a8:	mov    ebp,0xff9768a8
  4114ad:	fimul  DWORD PTR [ecx]
  4114af:	mov    al,0xa0
  4114b1:	mov    ss,esp
  4114b3:	scas   al,BYTE PTR es:[edi]
  4114b4:	lds    ebx,FWORD PTR [eax+0x23]
  4114b7:	pop    ebp
  4114b8:	sahf   
  4114b9:	lea    ecx,[eax]
  4114bb:	or     eax,ebp
  4114bd:	int    0x7f
  4114bf:	mov    edi,0x835e5629
  4114c4:	jns    0x41148d
  4114c6:	enter  0x9401,0x8d
  4114ca:	pop    edx
  4114cb:	or     edx,edi
  4114cd:	xor    esi,ecx
  4114cf:	fdiv   QWORD PTR [esi+eax*8]
  4114d2:	retf   0x770a
  4114d5:	das    
  4114d6:	rol    BYTE PTR [edx],1
  4114d8:	rcl    esi,1
  4114da:	shr    BYTE PTR [edx+0x4bd34812],1
  4114e0:	mov    ?,WORD PTR [ebx]
  4114e2:	retf   
  4114e3:	(bad)  
  4114e4:	mov    ecx,0x764beb0b
  4114e9:	leave  
  4114ea:	adc    al,0x81
  4114ec:	mov    cl,dl
  4114ee:	arpl   WORD PTR [ebp+0x4afc5c96],bp
  4114f4:	and    DWORD PTR [esi],0xffffff98
  4114f7:	and    al,0x1f
  4114f9:	inc    edi
  4114fa:	mov    esi,0xb4127a29
  4114ff:	addr16 test eax,0x29ca0c68
  411505:	sub    ecx,eax
  411507:	push   edi
  411508:	dec    ebp
  411509:	cmc    
  41150a:	(bad)
  41150e:	dec    edi
  41150f:	or     DWORD PTR fs:[ecx],ebp
  411512:	cli    
  411513:	frstor [eax+0x70]
  411516:	or     DWORD PTR [eax-0x1fe4a33e],0x2d9a6bde
  411520:	loop   0x4114a2
  411522:	fs mov esi,0x6c3ac19e
  411528:	xchg   ebx,eax
  411529:	in     al,0x60
  41152b:	pop    es
  41152c:	ds test eax,0xe4869f89
  411532:	pop    ecx
  411533:	test   BYTE PTR [edi+0x7d],cl
  411536:	shl    BYTE PTR [ebx+0x65],1
  411539:	sub    al,0xa
  41153b:	retf   0x1007
  41153e:	sub    ecx,DWORD PTR [edi+0x3c]
  411541:	stos   BYTE PTR es:[edi],al
  411542:	loope  0x4114cb
  411544:	xor    eax,0x490fbed0
  411549:	cmp    DWORD PTR [ebx+edi*8],edx
  41154c:	add    al,bl
  41154e:	xor    BYTE PTR [ebp+0x45e9ca64],cl
  411554:	sbb    esp,edx
  411556:	xchg   edx,eax
  411557:	bound  edi,QWORD PTR [edx-0x16470cca]
  41155d:	inc    edx
  41155e:	ret    
  41155f:	(bad)  
  411561:	push   edi
  411562:	popa   
  411563:	jge    0x411540
  411565:	(bad)  
  411566:	test   al,0x41
  411568:	mov    ecx,0x6d80babf
  41156d:	sbb    ch,BYTE PTR [ebp+0x73]
  411570:	ret    
  411571:	cmp    BYTE PTR [edi+0xe],bl
  411574:	ds jbe 0x4115e5
  411577:	hlt    
  411578:	and    ebx,DWORD PTR [eax]
  41157a:	pop    edi
  41157b:	and    ch,dh
  41157d:	inc    edi
  41157e:	push   es
  41157f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411580:	cmp    cl,BYTE PTR [edi*1+0x40c9b101]
  411587:	pop    ebx
  411588:	das    
  411589:	pop    ebx
  41158a:	xor    ebp,ebx
  41158c:	(bad)  
  41158e:	(bad)  
  41158f:	sbb    DWORD PTR [esi-0x55],esi
  411592:	mov    edx,ebx
  411594:	mov    esi,DWORD PTR [eax-0x6a]
  411597:	int3   
  411598:	sbb    eax,0x4e3e72c1
  41159d:	xchg   edx,eax
  41159e:	cmp    esi,DWORD PTR ds:0x6ff0de49
  4115a4:	retf   0x8525
  4115a7:	inc    ebp
  4115a8:	inc    ebx
  4115a9:	neg    DWORD PTR [ebx]
  4115ab:	mov    cl,0xe7
  4115ad:	jns    0x41154b
  4115af:	je     0x411605
  4115b1:	push   es
  4115b2:	repz jbe 0x4115bd
  4115b5:	fldenv [ecx]
  4115b7:	idiv   DWORD PTR [ebp+0x77]
  4115ba:	jp     0x41160f
  4115bc:	mov    ch,0x7b
  4115be:	push   esp
  4115bf:	fdivr  DWORD PTR [eax]
  4115c1:	dec    esp
  4115c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115c3:	popa   
  4115c4:	inc    ebx
  4115c5:	enter  0xa5b9,0xcc
  4115c9:	and    ah,0xd2
  4115cc:	(bad)  
  4115cd:	rcl    BYTE PTR [ebp-0x12],0xec
  4115d1:	repz or dh,BYTE PTR [eax-0x31]
  4115d5:	sti    
  4115d6:	repnz and eax,0x41521dfe
  4115dc:	sti    
  4115dd:	test   eax,0xf7dccefd
  4115e2:	xor    BYTE PTR [edi+0x5d],dl
  4115e5:	jae    0x41160d
  4115e7:	mov    eax,0x18da74ee
  4115ec:	gs pop ds
  4115ee:	pop    esi
  4115ef:	sub    dh,ch
  4115f1:	add    DWORD PTR [ecx+0x7f],esp
  4115f4:	fdiv   DWORD PTR [esi]
  4115f6:	sub    cl,al
  4115f8:	test   BYTE PTR [eax-0x58],al
  4115fb:	mov    ds:0x68c3eb95,al
  411600:	jle    0x41160c
  411602:	cld    
  411603:	dec    edi
  411604:	sbb    ecx,0x41238cdd
  41160a:	sbb    al,0x6d
  41160c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41160d:	ret    0xefcc
  411610:	mov    BYTE PTR [edx+0x44cabeb],ah
  411616:	mov    ebp,0x6bf6b009
  41161b:	int    0xdc
  41161d:	pusha  
  41161e:	cld    
  41161f:	mov    edx,0x2f294bbd
  411624:	stos   BYTE PTR es:[edi],al
  411625:	jne    0x4115db
  411627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411628:	dec    edi
  411629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41162a:	cmp    dh,ch
  41162c:	stos   BYTE PTR es:[edi],al
  41162d:	push   edi
  41162e:	out    dx,al
  41162f:	xor    BYTE PTR [eax+0x2d735d67],bl
  411635:	jmp    0x9bb98395
  41163a:	add    al,0xa0
  41163c:	adc    BYTE PTR [ebx-0x7e],bh
  41163f:	mov    WORD PTR [esi+0x1d8975f],es
  411645:	jl     0x411614
  411647:	mov    ah,0x88
  411649:	arpl   WORD PTR [ebp-0x20b11987],ax
  41164f:	xor    eax,0xd3249fdc
  411654:	xrstors [ebx+0x28]
  411658:	cmp    ebx,DWORD PTR [edi-0x5]
  41165b:	cmp    DWORD PTR [edi+edi*2],0x6686cd24
  411662:	mov    eax,ds:0x1bab98a1
  411667:	cmp    edi,eax
  411669:	push   ebx
  41166a:	je     0x411659
  41166c:	and    BYTE PTR [edi],bh
  41166e:	adc    DWORD PTR [eax+0x4e],edx
  411671:	(bad)  
  411672:	fistp  WORD PTR [ebp+0x95ce7c2]
  411678:	push   eax
  411679:	mov    al,ds:0x5d94092c
  41167e:	add    eax,0x3355332d
  411683:	repnz (bad) 
  411685:	dec    esp
  411686:	or     eax,DWORD PTR [esi+esi*4+0x20]
  41168a:	mov    ebp,0x399e068a
  41168f:	aam    0xe5
  411691:	(bad)  
  411692:	fidiv  DWORD PTR [edi+0x36]
  411695:	and    eax,0xc0b2cb3c
  41169a:	dec    ebp
  41169b:	das    
  41169c:	into   
  41169d:	dec    edi
  41169e:	pop    DWORD PTR [esi-0x3f6fe765]
  4116a4:	mov    eax,ds:0x20a921be
  4116a9:	xchg   esi,eax
  4116aa:	dec    ebx
  4116ab:	out    0xd1,eax
  4116ad:	mul    bl
  4116af:	sbb    BYTE PTR [edx],0x2d
  4116b2:	retf   0xa15b
  4116b5:	mov    ebp,0x82ebde06
  4116ba:	cmp    esi,DWORD PTR [edx]
  4116bc:	jl     0x411642
  4116be:	sub    al,0x86
  4116c0:	fisub  WORD PTR ds:0x6a42f248
  4116c6:	shr    DWORD PTR [edx+0x5ce3c532],1
  4116cc:	push   0xb59e623
  4116d1:	push   cs
  4116d2:	adc    eax,0x482b8f35
  4116d7:	jmp    0x41a4:0x5b33cd76
  4116de:	pop    ds
  4116df:	jbe    0x411682
  4116e1:	test   eax,0xe198a1a7
  4116e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e7:	mov    ds:0x7e1bb61a,al
  4116ec:	pushf  
  4116ed:	pop    esp
  4116ee:	inc    ebx
  4116ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f1:	jmp    0x1446:0x2ba5815
  4116f8:	mov    BYTE PTR [ebx],bl
  4116fa:	jae    0x4116f4
  4116fc:	lock fsubr st(4),st
  4116ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411700:	aad    0x75
  411702:	mov    edi,0xc5669613
  411707:	jo     0x411786
  411709:	out    dx,al
  41170a:	xor    BYTE PTR [edi+ebx*2],0x90
  41170e:	mov    DWORD PTR [eax+0x71a28dcb],edx
  411714:	popa   
  411715:	add    ecx,DWORD PTR [esi+0x77]
  411718:	clc    
  411719:	ret    0xcdd4
  41171c:	xor    dl,BYTE PTR [ecx]
  41171e:	and    BYTE PTR [edx+0x7084b72d],0xdf
  411725:	add    DWORD PTR [eax],edi
  411727:	lea    edi,[ebx-0x3e]
  41172a:	imul   ebx,esp,0x855a43ad
  411730:	mov    DWORD PTR [ebx-0x63],ebx
  411733:	sahf   
  411734:	inc    ebp
  411735:	xor    al,0x28
  411737:	adc    eax,0xd8923d25
  41173c:	out    0x6f,eax
  41173e:	aad    0xaf
  411740:	fwait
  411741:	xchg   ebp,eax
  411742:	test   al,0xa5
  411744:	mov    eax,ds:0x25d089d5
  411749:	xor    edi,eax
  41174b:	inc    ebp
  41174c:	ret    
  41174d:	push   edx
  41174e:	pop    ebp
  41174f:	inc    edi
  411750:	inc    ecx
  411751:	sbb    dl,BYTE PTR [edi-0x339b272a]
  411757:	push   edx
  411758:	inc    esp
  411759:	pop    ss
  41175a:	loope  0x411744
  41175c:	cli    
  41175d:	(bad)  
  41175e:	jmp    0x41174f
  411760:	fsubr  DWORD PTR [edi-0x4972d1e8]
  411766:	ret    0x31a5
  411769:	iret   
  41176a:	add    BYTE PTR [edi+0x2a],ch
  41176d:	mov    ebx,0x5883773
  411772:	pop    ds
  411773:	jle    0x4117aa
  411775:	xlat   BYTE PTR ds:[ebx]
  411776:	jne    0x411728
  411778:	jbe    0x41170a
  41177a:	ins    DWORD PTR es:[edi],dx
  41177b:	shl    ch,cl
  41177d:	test   DWORD PTR [ebp+0x71a1bbd],0x1669ce0
  411787:	fucom  st(4)
  411789:	shr    BYTE PTR [esp+esi*4-0x55],cl
  41178d:	push   0xffffffda
  41178f:	and    BYTE PTR es:[ebx+0x49f63a4a],0xa3
  411797:	sub    dh,BYTE PTR cs:[ebx+ebp*4]
  41179b:	mov    eax,ds:0x84e26900
  4117a0:	sahf   
  4117a1:	pop    ebp
  4117a2:	mov    dh,0xcb
  4117a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a5:	mov    ebx,0x60af944a
  4117aa:	xchg   esp,eax
  4117ab:	bound  ebx,QWORD PTR ds:[eax-0x54]
  4117af:	jl     0x4117ef
  4117b1:	imul   eax,DWORD PTR [ecx],0x22f34f2c
  4117b7:	jmp    0x15047b6a
  4117bc:	pusha  
  4117bd:	sysexit 
  4117bf:	push   0x66
  4117c1:	cmp    bl,BYTE PTR ds:0xdb49234e
  4117c7:	mov    dh,0xc8
  4117c9:	xor    al,0xb2
  4117cb:	sti    
  4117cc:	pushw  0x14
  4117cf:	sar    bh,0x55
  4117d2:	repnz es (bad) 
  4117d5:	mov    ebp,0x8273bcce
  4117da:	and    dl,BYTE PTR [ebp-0x6f49c5eb]
  4117e0:	jns    0x41181b
  4117e2:	pop    ebp
  4117e3:	dec    ebp
  4117e4:	push   ecx
  4117e5:	mov    ah,0x9
  4117e7:	iret   
  4117e8:	ins    BYTE PTR es:[edi],dx
  4117e9:	xchg   esp,eax
  4117ea:	or     al,ch
  4117ec:	dec    ebp
  4117ed:	inc    esp
  4117ee:	and    al,0x8f
  4117f0:	xchg   ebx,eax
  4117f1:	xor    BYTE PTR [edx+0x2d],cl
  4117f4:	xchg   ebx,eax
  4117f5:	add    ebx,0xe4b27a04
  4117fb:	inc    ebp
  4117fc:	jmp    0x746:0x5811a3b5
  411803:	shl    al,0xed
  411806:	push   0xc6b1c787
  41180b:	xchg   edx,eax
  41180c:	mov    ecx,0x4c3c6993
  411811:	jno    0x411892
  411813:	cmp    edi,ecx
  411815:	imul   ecx,DWORD PTR [ebx+0x76],0x21149f31
  41181c:	mov    edi,0xb3f82ded
  411821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411822:	shl    edx,1
  411824:	mov    edi,0x709a1bf3
  411829:	xchg   edx,eax
  41182a:	jmp    0x2867:0xd6ad92f2
  411831:	xchg   DWORD PTR [ebx],eax
  411833:	cld    
  411834:	and    ah,ah
  411836:	enter  0x174a,0x68
  41183a:	pop    ecx
  41183b:	repz in eax,0x28
  41183e:	mov    edi,DWORD PTR [eax]
  411840:	iret   
  411841:	pop    edi
  411842:	jmp    0x25729dd6
  411847:	push   edx
  411848:	leave  
  411849:	int3   
  41184a:	popf   
  41184b:	or     ecx,ebp
  41184d:	mov    ebp,0xb7b5513c
  411852:	hlt    
  411853:	ror    esi,0x5b
  411856:	push   ss
  411857:	and    BYTE PTR [edi],0xd5
  41185a:	jb     0x411844
  41185c:	sti    
  41185d:	push   esp
  41185e:	sbb    BYTE PTR [ecx+0x19],cl
  411861:	mov    WORD PTR [edx],es
  411863:	and    BYTE PTR [ecx-0x7bd31226],dl
  411869:	jp     0x411800
  41186b:	loope  0x411836
  41186d:	daa    
  41186e:	inc    edx
  41186f:	in     al,0x9
  411871:	mov    DWORD PTR [eax-0x38],edi
  411874:	ins    DWORD PTR es:[edi],dx
  411875:	fmulp  st(5),st
  411877:	jl     0x4117fc
  411879:	dec    ebx
  41187a:	push   ebx
  41187b:	dec    ebp
  41187c:	mov    edx,0x57c90c09
  411881:	ret    0x5d41
  411884:	pop    esi
  411885:	jnp    0x411807
  411887:	ret    0xfd59
  41188a:	sbb    ah,al
  41188c:	mov    ebx,0x5723f16b
  411891:	adc    esp,ecx
  411893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411894:	inc    edx
  411895:	aas    
  411896:	mov    esp,DWORD PTR [edx+0xf]
  411899:	mov    dl,0xfd
  41189b:	jp     0x41191b
  41189d:	dec    eax
  41189e:	ins    BYTE PTR es:[edi],dx
  41189f:	inc    edx
  4118a0:	clc    
  4118a1:	or     eax,0x439f0863
  4118a6:	test   al,0x11
  4118a8:	jge    0x4118e0
  4118aa:	xchg   ebp,eax
  4118ab:	pop    edx
  4118ac:	lea    esp,[eax]
  4118ae:	xchg   esi,eax
  4118af:	and    DWORD PTR [esi],edi
  4118b1:	sub    eax,0x7ff6365e
  4118b6:	(bad)  
  4118b7:	jne    0x41185b
  4118b9:	or     esi,esp
  4118bb:	(bad)  
  4118bc:	fsubr  st,st(7)
  4118be:	rcl    BYTE PTR [ebp+0x6f],0x22
  4118c2:	mov    ah,0x9b
  4118c4:	sar    BYTE PTR [esp+edi*8+0x6a],cl
  4118c8:	mov    WORD PTR [eax-0x141fc5a3],?
  4118ce:	repnz cmp eax,0xa89574d2
  4118d4:	aaa    
  4118d5:	jne    0x4118f2
  4118d7:	test   DWORD PTR [ebx+0x1ccc2152],edx
  4118dd:	inc    ebx
  4118de:	jmp    0x26e3:0xfb4abc0a
  4118e5:	retf   
  4118e6:	cmp    ebp,0xa08eb9fb
  4118ec:	push   esp
  4118ed:	fbld   TBYTE PTR [ebp-0x6a]
  4118f0:	mov    BYTE PTR [esi+0x15d89298],ah
  4118f6:	imul   eax,DWORD PTR [edx-0x7d],0xffffffc3
  4118fa:	sar    DWORD PTR [esi+0xd24202b],cl
  411900:	lahf   
  411901:	js     0x41188d
  411903:	jge    0x41188d
  411905:	dec    esp
  411906:	(bad)  
  411908:	jge    0x411908
  41190a:	sub    DWORD PTR [ebx+0x3e],0x3fa90d58
  411911:	stc    
  411912:	inc    bx
  411914:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411916:	or     al,0x2d
  411918:	fild   WORD PTR [eax]
  41191a:	mov    edx,0x88c6dcde
  41191f:	stos   BYTE PTR es:[edi],al
  411920:	dec    edi
  411921:	int3   
  411922:	jne    0x411988
  411924:	ret    0xfb96
  411927:	dec    edi
  411928:	jle    0x41196f
  41192a:	(bad)  
  41192b:	adc    ch,dh
  41192d:	out    dx,eax
  41192e:	xor    al,BYTE PTR [ecx+0x21]
  411931:	inc    edx
  411932:	xor    al,0x5d
  411934:	inc    ebp
  411935:	jl     0x411947
  411937:	sbb    ah,BYTE PTR fs:[edi+0x6bf8a9]
  41193e:	ins    BYTE PTR es:[edi],dx
  41193f:	push   ss
  411940:	jl     0x411991
  411942:	mov    bh,0xd3
  411944:	mov    ah,0xa5
  411946:	sub    eax,0x2f80c1ca
  41194b:	icebp  
  41194c:	xchg   ebp,eax
  41194d:	mov    al,0x9b
  41194f:	sbb    DWORD PTR [edx+0x42],0x18
  411953:	das    
  411954:	jb     0x411934
  411956:	mov    dh,0x64
  411958:	and    bh,BYTE PTR [esi+0x55]
  41195b:	push   esp
  41195c:	pusha  
  41195d:	mov    ds:0xbc965d3e,al
  411962:	push   esi
  411963:	sbb    DWORD PTR [ebp+esi*8+0x161299c7],edi
  41196a:	xor    al,0x33
  41196c:	mov    ecx,0x65481082
  411971:	lds    ebp,FWORD PTR [esi-0x3044d7ee]
  411977:	adc    BYTE PTR [ecx+0x12],dl
  41197a:	add    dh,BYTE PTR [ebp-0x5b]
  41197d:	mov    esp,DWORD PTR [eax-0x38bc84d4]
  411983:	jmp    0xd7f301b2
  411988:	jmp    0x41199b
  41198a:	js     0x411996
  41198c:	jne    0x4119be
  41198e:	inc    edi
  41198f:	test   BYTE PTR [ecx-0x33f1c062],dh
  411995:	jle    0x41196a
  411997:	cmc    
  411998:	dec    esp
  411999:	add    BYTE PTR ds:0xf5c7e1bf,ah
  41199f:	lahf   
  4119a0:	pop    ecx
  4119a1:	push   ecx
  4119a2:	push   ss
  4119a3:	aas    
  4119a4:	mov    eax,0x5d11373
  4119a9:	cmp    DWORD PTR [ecx+0x78f6bf88],ebp
  4119af:	and    ebp,DWORD PTR [esi-0x31f105c]
  4119b5:	pop    esi
  4119b6:	add    eax,0xfb2bb67b
  4119bb:	cmp    DWORD PTR [ecx+0x745d4a28],edi
  4119c1:	popa   
  4119c2:	lock and al,0x3c
  4119c5:	repz inc ecx
  4119c7:	cld    
  4119c8:	xlat   BYTE PTR ds:[ebx]
  4119c9:	imul   eax,DWORD PTR [edx-0xf],0xffffffe6
  4119cd:	lods   eax,DWORD PTR ds:[esi]
  4119ce:	int3   
  4119cf:	and    BYTE PTR [ebp+ebp*4-0x49],ch
  4119d3:	mov    bh,bh
  4119d5:	pop    esp
  4119d6:	or     BYTE PTR [ecx],dl
  4119d8:	test   DWORD PTR [eax],esi
  4119da:	jmp    0x41197d
  4119dc:	pop    edi
  4119dd:	mov    WORD PTR [ebp-0x32],ss
  4119e0:	js     0x4119e2
  4119e2:	adc    edi,DWORD PTR [ecx-0x761e017b]
  4119e8:	sub    esp,edi
  4119ea:	imul   edx,DWORD PTR [ecx+ebp*4-0x6d],0xffffffaa
  4119ef:	xchg   ebp,eax
  4119f0:	stos   BYTE PTR es:[edi],al
  4119f1:	push   0x5b
  4119f3:	inc    edi
  4119f4:	out    0xd,al
  4119f6:	mov    esp,0x42e0bbf3
  4119fb:	and    al,dl
  4119fd:	scas   al,BYTE PTR es:[edi]
  4119fe:	or     esi,DWORD PTR [edi-0x11b9bc4a]
  411a04:	inc    ebp
  411a05:	or     al,0x8a
  411a07:	mov    ds:0x2b1fbf91,al
  411a0c:	xchg   edi,eax
  411a0d:	out    0xa1,eax
  411a0f:	(bad)
  411a12:	mov    eax,ds:0x72e5d88e
  411a17:	bound  edx,QWORD PTR [ebp+0x35]
  411a1a:	scas   al,BYTE PTR es:[edi]
  411a1b:	loope  0x411a93
  411a1d:	fbstp  TBYTE PTR [ebx+0x3b]
  411a20:	cdq    
  411a21:	sub    BYTE PTR [ecx],ch
  411a23:	neg    DWORD PTR [ebp-0x57]
  411a26:	push   ds
  411a27:	neg    bh
  411a29:	jl     0x411a23
  411a2b:	loopne 0x4119b7
  411a2d:	pop    ds
  411a2e:	loopne 0x411aad
  411a30:	pcmpgtw mm2,QWORD PTR [eax-0x42168e31]
  411a37:	and    ebp,DWORD PTR [edi-0x3f224538]
  411a3d:	shl    DWORD PTR fs:0xb1fbcafe,cl
  411a44:	jle    0x411a50
  411a46:	add    edx,DWORD PTR [ecx+0x2d]
  411a49:	jb     0x411a38
  411a4b:	fwait
  411a4c:	xchg   ecx,eax
  411a4d:	loope  0x411a7d
  411a4f:	mov    ds:0x39470e7b,eax
  411a54:	sbb    ebp,eax
  411a56:	inc    eax
  411a57:	cmp    al,0xf1
  411a59:	daa    
  411a5a:	test   BYTE PTR [ecx+0x29],al
  411a5d:	je     0x411a65
  411a5f:	ret    0x8c5b
  411a62:	adc    BYTE PTR [ebp+0x1f],al
  411a65:	dec    ebx
  411a66:	dec    ebp
  411a67:	jne    0x411ac1
  411a69:	call   0x75d835e2
  411a6e:	faddp  st(5),st
  411a70:	inc    esp
  411a71:	rcl    DWORD PTR [esi],1
  411a73:	jge    0x411a32
  411a75:	jmp    0x102d26f5
  411a7a:	retf   
  411a7b:	retf   0xccb6
  411a7e:	adc    DWORD PTR [eax+0x5e00032a],ecx
  411a84:	rcr    ebp,0x63
  411a87:	dec    ecx
  411a88:	outs   dx,DWORD PTR ds:[esi]
  411a89:	dec    edx
  411a8a:	push   ebp
  411a8b:	enter  0xb8ee,0x5e
  411a8f:	clc    
  411a90:	shl    BYTE PTR [edx-0x6f0bb6db],1
  411a96:	mov    cl,0x20
  411a98:	ins    BYTE PTR es:[edi],dx
  411a99:	sub    DWORD PTR [ecx],esp
  411a9b:	mov    edx,0x4643bb64
  411aa0:	(bad)  
  411aa1:	lds    ebp,FWORD PTR [edi+0x6b79cc40]
  411aa7:	sar    DWORD PTR [edx],cl
  411aa9:	fcom   QWORD PTR [ebx-0x75]
  411aac:	ja     0x411ad2
  411aae:	les    edx,FWORD PTR ds:0xed8cfded
  411ab4:	ja     0x411aaa
  411ab6:	xchg   bl,cl
  411ab8:	aaa    
  411ab9:	paddd  mm0,mm0
  411abc:	pop    ss
  411abd:	cwde   
  411abe:	mov    edx,0xb352bbdb
  411ac3:	sub    BYTE PTR [esi-0x68],dl
  411ac6:	adc    DWORD PTR [edi+ebx*8],0xcbce905b
  411acd:	mov    ch,0x3e
  411acf:	sbb    cl,BYTE PTR [ebx-0x74fd884d]
  411ad5:	jb     0x411af7
  411ad7:	pop    ebp
  411ad8:	fsubrp st(2),st
  411ada:	xchg   esp,eax
  411adb:	out    dx,al
  411adc:	mov    es,WORD PTR [ebx-0x72]
  411adf:	or     ecx,DWORD PTR [esi+0x72]
  411ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ae3:	mov    ebp,ecx
  411ae5:	fisttp WORD PTR [edi]
  411ae7:	xor    eax,DWORD PTR [edi+0x4b]
  411aea:	mov    al,dh
  411aec:	addr16 pop edi
  411aee:	icebp  
  411aef:	mov    bh,BYTE PTR [esi+0x226dc8d6]
  411af5:	xlat   BYTE PTR ds:[ebx]
  411af6:	or     ah,BYTE PTR [ebx+0x64]
  411af9:	xchg   DWORD PTR [edi-0xfee4908],edx
  411aff:	push   esp
  411b00:	jns    0x411a83
  411b02:	iret   
  411b03:	add    DWORD PTR [edx+0x5],0x6a
  411b07:	cdq    
  411b08:	xchg   ecx,eax
  411b09:	nop
  411b0a:	test   ah,0x1e
  411b0d:	and    BYTE PTR [eax+0x70],0xe5
  411b11:	mov    bl,0xce
  411b13:	(bad)  
  411b14:	mov    dh,0x9
  411b16:	pop    ebp
  411b17:	(bad)  
  411b18:	fld    TBYTE PTR [ebp-0x1f885f8e]
  411b1e:	and    edx,DWORD PTR ds:0x604982a5
  411b24:	sub    ecx,DWORD PTR [edi]
  411b26:	mov    esi,0x8116c091
  411b2b:	sbb    DWORD PTR [ecx+0x3c557b6a],ebx
  411b31:	push   cs
  411b32:	inc    esp
  411b33:	fmul   QWORD PTR [ebp+0x67e9d832]
  411b39:	loopne 0x411ac0
  411b3b:	call   0xadaa:0xa29ad4eb
  411b42:	lods   al,BYTE PTR ds:[esi]
  411b43:	idiv   cl
  411b45:	icebp  
  411b46:	jno    0x411bc6
  411b48:	xor    al,0x34
  411b4a:	fld    QWORD PTR [ebx+0xf25416e]
  411b50:	adc    DWORD PTR [edx+0x64ef26cb],esi
  411b56:	scas   al,BYTE PTR es:[edi]
  411b57:	add    esp,DWORD PTR [ecx+ebx*4-0x2e468124]
  411b5e:	push   ecx
  411b5f:	xor    DWORD PTR [ebp+0x26bd1a9d],ecx
  411b65:	mov    esp,0x7b29779c
  411b6a:	hlt    
  411b6b:	int    0x85
  411b6d:	lea    edx,[ebx]
  411b6f:	jge    0x411b74
  411b71:	shr    DWORD PTR [eax],1
  411b73:	jb     0x411b49
  411b75:	add    al,BYTE PTR [ebx]
  411b77:	pop    ebx
  411b78:	or     DWORD PTR [esi-0x18],0x2b4f10a8
  411b7f:	mov    eax,0x8a5bd695
  411b84:	(bad)  
  411b85:	sub    ebx,ebx
  411b87:	push   es
  411b88:	rol    BYTE PTR [ecx-0x21],1
  411b8b:	mov    ebx,0x173f41fc
  411b90:	fsub   QWORD PTR [esp+ebp*8]
  411b93:	cmp    al,0x42
  411b95:	cmp    al,BYTE PTR es:0xdacb9a00
  411b9c:	jecxz  0x411b78
  411b9e:	cli    
  411b9f:	mov    ds:0xe83a1ad7,eax
  411ba4:	mov    esp,0x2bf35e02
  411ba9:	jb     0x411c17
  411bab:	sbb    edi,esi
  411bad:	inc    ebp
  411bae:	jmp    0x82319983
  411bb3:	aas    
  411bb4:	mov    ecx,0x912e551b
  411bb9:	mov    esi,0xc1e7bf45
  411bbe:	mov    ah,BYTE PTR [edx+0x57cfa6a8]
  411bc4:	push   esi
  411bc5:	cmp    BYTE PTR [ecx+0x53acdf12],dl
  411bcb:	pop    edx
  411bcc:	dec    edx
  411bcd:	push   ebx
  411bce:	add    DWORD PTR [esi-0x75110255],eax
  411bd4:	shr    DWORD PTR [esi],1
  411bd6:	pop    es
  411bd7:	dec    edi
  411bd8:	jno    0x411ba9
  411bda:	cmp    al,0xa9
  411bdc:	pop    ds
  411bdd:	adc    BYTE PTR [ecx],al
  411bdf:	xlat   BYTE PTR ds:[ebx]
  411be0:	cs in  eax,0x32
  411be3:	loope  0x411c07
  411be5:	cmp    DWORD PTR [eax+0x5c0e4fd2],eax
  411beb:	leave  
  411bec:	dec    ebp
  411bed:	stc    
  411bee:	xchg   ebx,eax
  411bef:	cld    
  411bf0:	loop   0x411c61
  411bf2:	aaa    
  411bf3:	mov    al,0x5c
  411bf5:	pop    edx
  411bf6:	test   BYTE PTR [edi+0xb34e3f4],cl
  411bfc:	or     al,0x7b
  411bfe:	jmp    0x2757:0x4fc94d08
  411c05:	jmp    0xffe7e22b
  411c0a:	xor    al,BYTE PTR [ecx]
  411c0c:	sbb    al,0xc5
  411c0e:	arpl   dx,cx
  411c10:	pop    ds
  411c11:	sub    eax,edx
  411c13:	inc    edx
  411c14:	(bad)  
  411c15:	mov    eax,0x6164d23e
  411c1a:	mov    esi,0xf1b90690
  411c1f:	test   BYTE PTR [ebp-0x79e04287],0x72
  411c26:	push   ds
  411c27:	push   esi
  411c28:	fsubrp st(1),st
  411c2a:	lock push edi
  411c2c:	mov    ecx,0xca8443da
  411c31:	mov    ds:0x580cd665,eax
  411c36:	addr16 push 0x7f
  411c39:	call   0xe106:0x64694a63
  411c40:	lds    ecx,FWORD PTR [ecx-0x5e795e41]
  411c46:	push   esi
  411c47:	and    ah,BYTE PTR [ecx]
  411c49:	inc    ecx
  411c4a:	dec    esp
  411c4b:	and    dl,ch
  411c4d:	outs   dx,DWORD PTR ds:[esi]
  411c4e:	enter  0x5d8,0x73
  411c52:	mov    ah,0xd0
  411c54:	jns    0x411bfb
  411c56:	mov    DWORD PTR [edi],edi
  411c58:	scas   eax,DWORD PTR es:[edi]
  411c59:	and    DWORD PTR [edi],ebp
  411c5b:	sahf   
  411c5c:	sub    eax,0x77a51450
  411c61:	sbb    dl,BYTE PTR [edx-0x69c214e8]
  411c67:	mov    dh,0x13
  411c69:	mov    esi,0x5414ac55
  411c6e:	ret    0xa8a1
  411c71:	xchg   ebx,eax
  411c72:	mov    edx,0x898ede13
  411c77:	fidiv  DWORD PTR [ebx+0x7103ecff]
  411c7d:	fs nop
  411c7f:	xor    al,0x13
  411c81:	jns    0x411c1e
  411c83:	pop    esi
  411c84:	cwde   
  411c85:	rcr    BYTE PTR [ebx+0x25baec4c],0x1f
  411c8c:	sti    
  411c8d:	sbb    eax,0x33c9231
  411c92:	ror    BYTE PTR [ebp*2+0x41f55476],0xbb
  411c9a:	push   ebp
  411c9b:	jne    0x411cf3
  411c9d:	add    DWORD PTR [ecx+0x28],esp
  411ca0:	xchg   esi,eax
  411ca1:	int    0x9a
  411ca3:	dec    ecx
  411ca4:	mov    edx,0xd06feaea
  411ca9:	and    al,0x23
  411cab:	fistp  DWORD PTR [ebp+0x4a217e18]
  411cb1:	scas   eax,DWORD PTR es:[edi]
  411cb2:	ror    edx,1
  411cb4:	mov    edx,0x5ea8e630
  411cb9:	mov    ch,0xa1
  411cbb:	mov    BYTE PTR [edi+0x230ce9bb],bl
  411cc1:	mov    bh,0x5c
  411cc3:	inc    esi
  411cc4:	aaa    
  411cc5:	mov    bl,BYTE PTR [ebp-0x1d]
  411cc8:	outs   dx,DWORD PTR ds:[esi]
  411cc9:	add    al,0xf7
  411ccb:	push   0x32f867fc
  411cd0:	shl    BYTE PTR [edx-0x6414e8f4],1
  411cd6:	aas    
  411cd7:	out    0x31,eax
  411cd9:	fcomip st,st(5)
  411cdb:	xchg   esp,eax
  411cdc:	dec    ebx
  411cdd:	lods   al,BYTE PTR ds:[esi]
  411cde:	rol    BYTE PTR ds:[eax+0x2e],0x9f
  411ce3:	mov    bh,0xab
  411ce5:	pop    bx
  411ce7:	add    DWORD PTR gs:[eax],ebp
  411cea:	mov    edx,0x944ae164
  411cef:	and    BYTE PTR [edi+ebx*2],cl
  411cf2:	cmp    ebx,DWORD PTR [edx]
  411cf4:	pop    ds
  411cf5:	push   esp
  411cf6:	and    ch,ch
  411cf8:	mov    DWORD PTR [ebx+0x21],esp
  411cfb:	lock mov ecx,0xedd7807
  411d01:	into   
  411d02:	arpl   dx,di
  411d04:	out    dx,al
  411d05:	test   eax,0xf0ef4e80
  411d0a:	mov    ch,0xef
  411d0c:	or     BYTE PTR [ebx-0x75fbae49],dh
  411d12:	jmp    0xf620495f
  411d17:	push   esi
  411d18:	cmc    
  411d19:	daa    
  411d1a:	xchg   esi,eax
  411d1b:	inc    ecx
  411d1c:	scas   eax,DWORD PTR es:[edi]
  411d1d:	shr    BYTE PTR [ecx+0x2],cl
  411d20:	mov    esi,?
  411d22:	es xchg esi,eax
  411d24:	nop
  411d25:	jge    0x411cf4
  411d27:	inc    edi
  411d28:	call   0x3325:0x74fb3cd6
  411d2f:	(bad)  
  411d30:	jbe    0x411d17
  411d32:	mov    dh,BYTE PTR [ecx-0x59]
  411d35:	sbb    bl,BYTE PTR ds:0x5fa926f5
  411d3b:	add    esi,ebp
  411d3d:	pop    ds
  411d3e:	pop    ds
  411d3f:	sbb    ebx,DWORD PTR [ebx+0x1d207f10]
  411d45:	ja     0x411d4b
  411d47:	ds mov eax,0x5f6533d0
  411d4d:	popa   
  411d4e:	cmp    DWORD PTR [eax+0x7aa0f6b2],esp
  411d54:	clc    
  411d55:	dec    edi
  411d56:	je     0x411d1d
  411d58:	mov    eax,0xf4d1633a
  411d5d:	leave  
  411d5e:	or     BYTE PTR ds:0x8adaf921,bl
  411d64:	and    ebp,DWORD PTR [edx]
  411d66:	imul   ebp,DWORD PTR [edi],0xb7d6acf4
  411d6c:	in     al,dx
  411d6d:	popf   
  411d6e:	(bad)
  411d71:	test   BYTE PTR [esi+0x65a07488],0xbe
  411d78:	cs dec edi
  411d7a:	nop
  411d7b:	push   0x26b8926c
  411d80:	in     eax,dx
  411d81:	xor    DWORD PTR [ebx],edi
  411d83:	push   edi
  411d84:	ins    BYTE PTR es:[edi],dx
  411d85:	test   DWORD PTR [eax-0x67],eax
  411d88:	(bad)  
  411d89:	dec    ebp
  411d8a:	and    bl,BYTE PTR [ecx]
  411d8c:	push   edx
  411d8d:	push   ebx
  411d8e:	rol    BYTE PTR [ebx],0x55
  411d91:	jo     0x411e10
  411d93:	or     bh,bl
  411d95:	test   al,0x4d
  411d97:	shl    DWORD PTR [edx+0x749f1078],cl
  411d9d:	nop
  411d9e:	xor    al,0x23
  411da0:	push   ds
  411da1:	test   al,0x41
  411da3:	mov    eax,ds:0x483bcb5f
  411da8:	test   al,0xbd
  411daa:	mov    bl,0x25
  411dac:	pop    ss
  411dad:	mov    eax,0xe49cd1c
  411db2:	cmp    eax,0x1784a3bf
  411db7:	cmp    DWORD PTR [edi+0x1a66fd49],ebx
  411dbd:	sub    DWORD PTR ds:0x15916e02,eax
  411dc3:	add    DWORD PTR [edx],eax
  411dc5:	cdq    
  411dc6:	out    dx,al
  411dc7:	adc    ecx,DWORD PTR [ebp-0x313ab0c9]
  411dcd:	repz inc edx
  411dcf:	call   0xb33a66ba
  411dd4:	ja     0x411d78
  411dd6:	add    BYTE PTR [ebx+0x38],bh
  411dd9:	cmp    BYTE PTR [esi-0x623039d8],bl
  411ddf:	leave  
  411de0:	xor    eax,0x920873cd
  411de5:	pushf  
  411de6:	push   0x61
  411de8:	ins    DWORD PTR es:[edi],dx
  411de9:	icebp  
  411dea:	(bad)  
  411deb:	mov    al,0x1b
  411ded:	and    DWORD PTR [ebx+esi*8+0x1dd1b846],0x20640057
  411df8:	(bad)  
  411df9:	in     eax,dx
  411dfa:	dec    esi
  411dfb:	dec    esi
  411dfc:	jb     0x411dbf
  411dfe:	jg     0x411df3
  411e00:	inc    ebp
  411e01:	shl    BYTE PTR [eax],0x6
  411e04:	cmp    al,BYTE PTR [esi+0x18]
  411e07:	dec    edi
  411e08:	retf   0x2c1e
  411e0b:	add    DWORD PTR ds:0x7e7484cf,0xea70a9d2
  411e15:	lock imul edi,DWORD PTR [ecx],0x9c9fe01
  411e1c:	shl    bl,1
  411e1e:	add    DWORD PTR [edi+0x5be209ee],0xffffffdf
  411e25:	cmc    
  411e26:	mov    ebx,0x56d1e2c5
  411e2b:	push   ds
  411e2c:	popa   
  411e2d:	push   ecx
  411e2e:	push   ds
  411e2f:	xchg   esi,eax
  411e30:	mov    DWORD PTR [ebx+0x1c],0x44970460
  411e37:	call   esi
  411e39:	sbb    eax,0x60ed7527
  411e3e:	(bad)  
  411e3f:	repz cmp al,0xa4
  411e42:	jo     0x411dcc
  411e44:	push   ss
  411e45:	out    0xad,eax
  411e47:	ficom  WORD PTR [esi+0x6f]
  411e4a:	lock ror cl,0x58
  411e4e:	and    bl,ch
  411e50:	mov    ch,0x19
  411e52:	test   BYTE PTR cs:[edi],dl
  411e55:	enter  0x166b,0x0
  411e59:	add    DWORD PTR [esi],ecx
  411e5b:	xor    al,0x61
  411e5d:	adc    BYTE PTR ds:0x5a10b9df,dh
  411e63:	int3   
  411e64:	rcl    ebp,cl
  411e66:	cli    
  411e67:	inc    ecx
  411e68:	jmp    0x6161:0x6df43ca8
  411e6f:	inc    esp
  411e70:	test   al,0xe5
  411e72:	push   edx
  411e73:	xchg   ecx,eax
  411e74:	cmp    ebp,DWORD PTR [ebp+0x4a8149dc]
  411e7a:	(bad)  
  411e7b:	fxch   st(1)
  411e7d:	call   0x991efe52
  411e82:	mov    al,ds:0x617c0a63
  411e87:	mov    ah,0xf5
  411e89:	inc    ch
  411e8b:	jb     0x411edb
  411e8d:	inc    eax
  411e8e:	cmc    
  411e8f:	inc    esp
  411e90:	arpl   WORD PTR [edx],bx
  411e92:	pop    eax
  411e93:	mov    bl,0x6f
  411e95:	sti    
  411e96:	jns    0x411edf
  411e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e99:	stc    
  411e9a:	(bad)  
  411e9b:	mov    eax,ds:0xe8c72e85
  411ea0:	or     eax,0xc6033538
  411ea5:	ret    
  411ea6:	mov    ds:0x40136a7d,eax
  411eab:	test   eax,0x4d90232c
  411eb0:	push   esi
  411eb1:	imul   ebp,DWORD PTR [eax-0x26],0x4a
  411eb5:	fwait
  411eb6:	adc    edi,DWORD PTR [ecx-0x72]
  411eb9:	pushf  
  411eba:	cmp    eax,0x87146c49
  411ebf:	outs   dx,DWORD PTR ds:[esi]
  411ec0:	and    eax,0xe1f19ce2
  411ec5:	dec    esi
  411ec6:	(bad)  
  411ec7:	fnsave [ecx+esi*8+0x5a831924]
  411ece:	pop    esp
  411ecf:	cli    
  411ed0:	in     al,0xf8
  411ed2:	inc    ebp
  411ed3:	jnp    0x411e5d
  411ed5:	dec    edi
  411ed6:	jge    0x411ea9
  411ed8:	or     cl,BYTE PTR [ebx]
  411eda:	pop    edi
  411edb:	xchg   esi,eax
  411edc:	and    al,0x98
  411ede:	scas   eax,DWORD PTR es:[edi]
  411edf:	and    DWORD PTR [esi-0x4913efa5],edi
  411ee5:	add    esp,esp
  411ee7:	pop    edi
  411ee8:	jmp    0x411f58
  411eea:	aam    0x7b
  411eec:	cdq    
  411eed:	cmc    
  411eee:	test   eax,0xa3bf54b0
  411ef3:	ror    BYTE PTR [ebx-0x222b0ace],cl
  411ef9:	js     0x411efc
  411efb:	mov    cs,WORD PTR [edx]
  411efd:	pop    eax
  411efe:	jmp    0x11db728a
  411f03:	mov    BYTE PTR [edx-0x28],bl
  411f06:	push   esp
  411f07:	push   eax
  411f08:	jl     0x411ef6
  411f0a:	test   eax,0x7e59aaf7
  411f0f:	sbb    al,0xd3
  411f11:	xchg   BYTE PTR [edx],dh
  411f13:	or     esp,DWORD PTR [ebx+esi*1]
  411f16:	mov    esp,0x111331bc
  411f1b:	call   0x278434ba
  411f20:	(bad)  
  411f21:	outs   dx,DWORD PTR ds:[esi]
  411f22:	mov    edi,0x67375d45
  411f27:	jbe    0x411f8d
  411f29:	xchg   esp,eax
  411f2a:	shl    DWORD PTR [edx-0x2ff12046],cl
  411f30:	or     DWORD PTR [esi-0x2317a5ec],esi
  411f36:	shl    DWORD PTR [edx+0x337cc3b6],cl
  411f3c:	mov    ebx,0x5d37b5f9
  411f41:	(bad)  [ebx-0x4b1f944b]
  411f47:	mov    bl,0xa3
  411f49:	std    
  411f4a:	call   0x1263ccf5
  411f4f:	lock jnp 0x411f38
  411f52:	push   ss
  411f53:	and    esp,edx
  411f55:	and    al,0x3a
  411f57:	add    ch,bh
  411f59:	mov    al,ds:0xfbcf353d
  411f5e:	fild   DWORD PTR [ebp+0x347631b8]
  411f64:	cld    
  411f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f66:	jb     0x411f5c
  411f68:	push   ebx
  411f69:	je     0x411f05
  411f6b:	leave  
  411f6c:	cmp    DWORD PTR [esi-0x27],0x608d42a5
  411f73:	imul   edx,DWORD PTR [edx],0x9f3508aa
  411f79:	push   ds
  411f7a:	test   BYTE PTR [eax+0x4a],bl
  411f7d:	xor    BYTE PTR [ebp+0x176b8adf],0x5e
  411f84:	sbb    al,0xcb
  411f86:	cmp    al,0x96
  411f88:	jg     0x411f73
  411f8a:	or     al,0xf8
  411f8c:	jno    0x411f20
  411f8e:	jge    0x411f2e
  411f90:	out    dx,al
  411f91:	mov    bh,0x1f
  411f93:	rol    edx,1
  411f95:	pop    ebx
  411f96:	xchg   BYTE PTR cs:[esi+0x40cd37f9],al
  411f9d:	out    dx,eax
  411f9e:	or     dl,0xaa
  411fa1:	add    eax,eax
  411fa3:	aad    0xba
  411fa5:	add    esp,DWORD PTR ds:0xe18e2205
  411fab:	dec    ecx
  411fac:	jo     0x411fb7
  411fae:	adc    esi,DWORD PTR [ebx]
  411fb0:	mov    ebx,0x236c3f1
  411fb5:	jecxz  0x411f45
  411fb7:	or     eax,0xd032e4e4
  411fbc:	and    esp,DWORD PTR [eax+edi*4+0x8]
  411fc0:	icebp  
  411fc1:	jecxz  0x411fea
  411fc3:	test   BYTE PTR [edx-0x49],al
  411fc6:	jne    0x41200e
  411fc8:	test   eax,0xb667dcbe
  411fcd:	jl     0x411f63
  411fcf:	stos   DWORD PTR es:[edi],eax
  411fd0:	pop    ds
  411fd1:	adc    dl,cl
  411fd3:	retf   
  411fd4:	movd   mm1,DWORD PTR [esi+0x67]
  411fd8:	or     ebp,DWORD PTR [ecx-0x326cab7d]
  411fde:	inc    esi
  411fdf:	push   ss
  411fe0:	pop    ebp
  411fe1:	add    ch,0x8d
  411fe4:	lods   al,BYTE PTR ds:[esi]
  411fe5:	pop    es
  411fe6:	pushf  
  411fe7:	test   cl,cl
  411fe9:	es sbb ah,cl
  411fec:	or     esp,DWORD PTR [ebp+0x31a43977]
  411ff2:	fs push 0x1d12fe8f
  411ff8:	mov    esi,0xa061568b
  411ffd:	hlt    
  411ffe:	push   edi
  411fff:	xchg   edi,eax
  412000:	(bad)  
  412001:	push   ebp
  412002:	pusha  
  412003:	xor    BYTE PTR [ecx+ecx*8-0x6f],bh
  412007:	adc    DWORD PTR [ecx+ebp*1-0x405fb196],edi
  41200e:	ss fwait
  412010:	adc    bl,0x16
  412013:	adc    ah,BYTE PTR [eax+0x51e86cb2]
  412019:	push   0xffffffa8
  41201b:	mov    ds:0xdadad17d,al
  412020:	pop    edx
  412021:	lahf   
  412022:	cmp    BYTE PTR [ecx-0x41],cl
  412025:	push   esi
  412026:	sahf   
  412027:	cld    
  412028:	mov    edi,0x284cd0b9
  41202d:	in     eax,dx
  41202e:	ret    0x373d
  412031:	xor    BYTE PTR [eax-0x3bbb0974],bh
  412037:	adc    eax,0x7412b781
  41203c:	push   esi
  41203d:	fucomip st,st(1)
  41203f:	mov    al,ds:0xb8b7952c
  412044:	mov    ecx,0xf5025f3a
  412049:	add    eax,0x850f987b
  41204e:	add    DWORD PTR [ebx+0x76908e5f],0xffffffd4
  412055:	cli    
  412056:	imul   DWORD PTR [eax-0x39b87640]
  41205c:	test   ch,0x4c
  41205f:	xchg   edi,eax
  412060:	sahf   
  412061:	adc    esi,ebp
  412063:	xor    eax,0x4f87da82
  412069:	jbe    0x41202a
  41206b:	cmp    ecx,ecx
  41206d:	enter  0xe31e,0xd
  412071:	in     al,0x2f
  412073:	dec    edx
  412074:	gs adc cl,al
  412077:	pop    edx
  412078:	sar    DWORD PTR [ecx-0x22],0xf
  41207c:	test   cl,ch
  41207e:	xor    eax,0x2f7b6e4b
  412083:	repnz test dh,dl
  412086:	cmp    al,0xde
  412088:	cmp    ah,BYTE PTR [esi*1-0x2dc9bd6f]
  41208f:	add    al,0xaf
  412091:	cmp    bh,BYTE PTR [eax]
  412093:	iret   
  412094:	xchg   DWORD PTR [esi+ecx*8-0x3e],ebp
  412098:	or     BYTE PTR [edx+0x64],bl
  41209b:	shr    BYTE PTR es:[esi-0x3b3d09b8],0x47
  4120a3:	mov    ecx,0xb9f85e40
  4120a8:	xchg   edx,eax
  4120a9:	aas    
  4120aa:	or     DWORD PTR [esi],edx
  4120ac:	jl     0x412068
  4120ae:	mov    eax,ds:0x322af99e
  4120b3:	leave  
  4120b4:	pop    ebp
  4120b5:	enter  0x7df7,0x49
  4120b9:	push   esp
  4120ba:	sbb    al,0xfc
  4120bc:	add    ch,BYTE PTR [edi+eax*8+0x6540043c]
  4120c3:	jns    0x4120dc
  4120c5:	mov    dl,BYTE PTR [ebx+0x6403c0c1]
  4120cb:	iret   
  4120cc:	push   cs
  4120cd:	es fmul st(0),st
  4120d0:	and    bl,BYTE PTR [ecx]
  4120d2:	mov    WORD PTR [ecx+0x70],fs
  4120d5:	jns    0x41209a
  4120d7:	inc    eax
  4120d8:	div    DWORD PTR [ebx]
  4120da:	xlat   BYTE PTR ds:[ebx]
  4120db:	fisubr DWORD PTR [ebx+0xb]
  4120de:	push   eax
  4120df:	jo     0x412160
  4120e1:	aad    0x45
  4120e3:	add    dl,al
  4120e5:	mov    dh,0x41
  4120e7:	mov    ebp,0x9f55bdd1
  4120ec:	mov    ds:0xce2ead33,al
  4120f1:	xor    al,0x5d
  4120f3:	add    al,0xf8
  4120f5:	sbb    BYTE PTR ds:0x2d0dc511,0xc8
  4120fc:	jne    0x412173
  4120fe:	test   BYTE PTR [eax-0xf],bl
  412101:	cmp    ah,bh
  412103:	call   0xba6f:0xe671c74c
  41210a:	stos   BYTE PTR es:[edi],al
  41210b:	pop    es
  41210c:	mov    dh,BYTE PTR [ebp+0x631874ff]
  412112:	cmp    ebx,DWORD PTR [ebx-0x14]
  412115:	or     eax,0x5726de62
  41211a:	or     ch,dh
  41211c:	mov    al,ds:0x6ebfa836
  412121:	push   edi
  412122:	enter  0xcac4,0x29
  412126:	jbe    0x41213f
  412128:	not    BYTE PTR [ecx]
  41212a:	lahf   
  41212b:	nop
  41212c:	stos   DWORD PTR es:[edi],eax
  41212d:	mov    dl,BYTE PTR ds:0x587c7545
  412133:	push   es
  412134:	(bad)  
  412135:	adc    al,0x3e
  412137:	pop    ss
  412138:	or     edi,DWORD PTR [esi+0x6c]
  41213b:	shl    ebp,1
  41213d:	pop    esp
  41213e:	inc    eax
  41213f:	out    dx,eax
  412140:	sub    eax,0x3a676ba2
  412145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412146:	xchg   esi,eax
  412147:	aad    0xec
  412149:	std    
  41214a:	dec    esi
  41214b:	add    DWORD PTR [esi+0x4b],0xfffffffe
  41214f:	in     al,0xa9
  412151:	pop    ecx
  412152:	pop    esp
  412153:	int3   
  412154:	(bad)  
  412155:	jge    0x412152
  412157:	std    
  412158:	arpl   bp,si
  41215a:	leave  
  41215b:	add    eax,DWORD PTR [ecx+0x21]
  41215e:	popa   
  41215f:	clc    
  412160:	lea    esp,[esi-0x79f141b9]
  412166:	jae    0x4121df
  412168:	cli    
  412169:	popf   
  41216a:	in     eax,0xbc
  41216c:	inc    edi
  41216d:	test   DWORD PTR [ecx-0x29],ebp
  412170:	jecxz  0x412122
  412172:	jp     0x41217d
  412174:	repnz fst st(0)
  412177:	cmp    DWORD PTR [ecx-0x22],0x2c
  41217b:	xor    BYTE PTR [ebx+0x32],dl
  41217e:	fs mov edi,edx
  412181:	jp     0x4121a7
  412183:	xchg   ebp,eax
  412184:	xchg   ecx,eax
  412185:	and    eax,0x8ee4cc5d
  41218a:	adc    cl,BYTE PTR [esi+ecx*1]
  41218d:	fiadd  DWORD PTR [esi-0x7369cf93]
  412193:	sub    ch,BYTE PTR [ebp+0x14270e89]
  412199:	call   0x6ad1:0xce7cc55
  4121a0:	jge    0x41219a
  4121a2:	mov    eax,0x72f9e8a1
  4121a7:	stos   DWORD PTR es:[edi],eax
  4121a8:	loopne 0x412193
  4121aa:	or     ah,BYTE PTR [eax-0x6f]
  4121ad:	mov    DWORD PTR [edx-0x6e],ebx
  4121b0:	in     al,dx
  4121b1:	nop
  4121b2:	gs adc eax,0x437a837f
  4121b8:	stc    
  4121b9:	xor    al,0x2d
  4121bb:	pop    edx
  4121bc:	(bad)  
  4121bd:	pushf  
  4121be:	push   eax
  4121bf:	mov    al,ds:0x9a7f0099
  4121c4:	outs   dx,BYTE PTR ds:[esi]
  4121c5:	jecxz  0x412202
  4121c7:	xor    eax,0x1a582f1
  4121cc:	in     eax,dx
  4121cd:	lea    ecx,[edx+edi*2-0x780210e0]
  4121d4:	pop    ss
  4121d5:	mov    DWORD PTR [edi],ebx
  4121d7:	jge    0x4121a5
  4121d9:	dec    edx
  4121da:	mov    ecx,0xbb9042eb
  4121df:	stos   DWORD PTR es:[edi],eax
  4121e0:	push   eax
  4121e1:	adc    esp,eax
  4121e3:	dec    edi
  4121e4:	xchg   cl,al
  4121e6:	call   DWORD PTR [ebp+0x3ab87dfb]
  4121ec:	push   es
  4121ed:	lahf   
  4121ee:	and    al,0x9d
  4121f0:	sub    al,ah
  4121f2:	setle  BYTE PTR [esi-0x47]
  4121f6:	xlat   BYTE PTR ds:[ebx]
  4121f7:	je     0x412179
  4121f9:	mov    bl,0xaa
  4121fb:	sbb    dh,BYTE PTR [ebx-0x5f0d3d50]
  412201:	or     eax,0xb034a1e4
  412206:	fbstp  TBYTE PTR [edx]
  412208:	jne    0x4121bb
  41220a:	(bad)  
  41220b:	push   edx
  41220c:	jg     0x412195
  41220e:	(bad)  
  412210:	sub    al,0x79
  412212:	les    esi,FWORD PTR [ebx]
  412214:	imul   edi,DWORD PTR [edx],0x972f2e42
  41221a:	(bad)  
  41221b:	fxam   
  41221d:	push   cs
  41221e:	fimul  WORD PTR [ecx+0x4a]
  412221:	xchg   esp,eax
  412222:	fisub  DWORD PTR [ebx]
  412224:	repz cmp al,0xa1
  412227:	fisub  DWORD PTR [ebp-0x1c0659e8]
  41222d:	inc    ebp
  41222e:	call   0xe61b356c
  412233:	mov    ah,0x58
  412235:	popa   
  412236:	jge    0x4121cd
  412238:	stc    
  412239:	rcl    BYTE PTR ds:0x1412db01,1
  41223f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412240:	leave  
  412241:	xchg   ebx,eax
  412242:	or     ecx,ebp
  412244:	retf   
  412245:	add    esi,DWORD PTR [ebx-0x1a]
  412248:	push   0x3
  41224a:	add    eax,0x57f2a0f
  41224f:	ja     0x412273
  412251:	mov    esp,0x15338e05
  412256:	fild   WORD PTR [edi-0x2a]
  412259:	mov    ebp,0xcdb03445
  41225e:	adc    edx,DWORD PTR [edi+0x64]
  412261:	dec    eax
  412262:	mov    eax,ds:0xc6a813fc
  412267:	mov    ebx,0x2a01cba4
  41226c:	stc    
  41226d:	jnp    0x412283
  41226f:	outs   dx,BYTE PTR ds:[esi]
  412270:	inc    eax
  412271:	jg     0x412293
  412273:	push   ebp
  412274:	mov    ?,WORD PTR [esi]
  412276:	dec    edi
  412277:	not    DWORD PTR [edi+0x78]
  41227a:	xchg   esp,eax
  41227b:	in     al,0xbe
  41227d:	bound  esi,QWORD PTR [edx+0xde9d3d7]
  412283:	push   0xffffffbd
  412285:	xchg   ecx,eax
  412286:	or     DWORD PTR [ecx-0x27],ebp
  412289:	xchg   DWORD PTR [ebx],ecx
  41228b:	lds    eax,FWORD PTR [eax+ecx*1-0x7]
  41228f:	adc    al,0xf9
  412291:	pop    edx
  412292:	and    BYTE PTR [ebx+0xc],bl
  412295:	mov    dl,dh
  412297:	inc    edx
  412298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412299:	call   0xe16a857c
  41229e:	dec    edi
  41229f:	(bad)  
  4122a0:	and    DWORD PTR [eax-0x61],edx
  4122a3:	clc    
  4122a4:	or     ebx,DWORD PTR [ebx-0x75]
  4122a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122a8:	(bad)  
  4122aa:	pop    ecx
  4122ab:	xchg   dl,ah
  4122ad:	xor    edx,edi
  4122af:	aaa    
  4122b0:	fcmove st,st(3)
  4122b2:	ror    BYTE PTR [ebx+0x13],1
  4122b5:	dec    BYTE PTR [ecx-0x6e]
  4122b8:	test   eax,0xd89cf704
  4122bd:	mov    ebx,0x762998fc
  4122c2:	sub    DWORD PTR [ebx-0x52],ecx
  4122c5:	(bad)  
  4122c6:	rcr    BYTE PTR [ecx+0x7382a230],cl
  4122cc:	icebp  
  4122cd:	xchg   edx,eax
  4122ce:	mov    ecx,0x62c9d80b
  4122d3:	adc    eax,0x22033cff
  4122d8:	cmp    BYTE PTR [esi+edx*2+0x63],bl
  4122dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122dd:	ret    0xbadb
  4122e0:	sub    DWORD PTR [eax],0x15393b75
  4122e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e7:	inc    eax
  4122e8:	fist   WORD PTR [ebx+eax*8+0x78605ac8]
  4122ef:	scas   al,BYTE PTR es:[edi]
  4122f0:	lods   al,BYTE PTR ds:[esi]
  4122f1:	sub    al,0x45
  4122f3:	out    0x53,al
  4122f5:	leave  
  4122f6:	mov    esp,0xfe934ef
  4122fb:	popf   
  4122fc:	ja     0x41229e
  4122fe:	call   0x7d0f:0xd1890d57
  412305:	adc    ebx,edi
  412307:	sub    al,0x9f
  412309:	scas   eax,DWORD PTR es:[edi]
  41230a:	push   0x1c
  41230c:	int3   
  41230d:	mov    ecx,0xbd0d688c
  412312:	pop    ebp
  412313:	sub    ebx,0xffffffff
  412316:	pusha  
  412317:	jl     0x41230c
  412319:	and    al,0xa0
  41231b:	fst    DWORD PTR [eax+ebx*4+0x62e1c99f]
  412322:	fwait
  412323:	bound  eax,QWORD PTR [edi]
  412325:	loop   0x4122d8
  412327:	fcom   st(2)
  412329:	sub    bl,bh
  41232b:	cmp    eax,edi
  41232d:	push   ss
  41232e:	jle    0x4122fc
  412330:	retf   
  412331:	call   0xccf1a618
  412336:	leave  
  412337:	xlat   BYTE PTR ds:[ebx]
  412338:	adc    eax,DWORD PTR [eax+0x3d]
  41233b:	xlat   BYTE PTR ds:[ebx]
  41233c:	out    0xe2,eax
  41233e:	stos   BYTE PTR es:[edi],al
  41233f:	(bad)  
  412341:	into   
  412342:	clc    
  412343:	dec    ecx
  412344:	cmp    al,0x26
  412346:	mov    bh,0x67
  412348:	jmp    DWORD PTR [edi]
  41234a:	sbb    dh,BYTE PTR [ebx+esi*2]
  41234d:	xchg   ebx,eax
  41234e:	push   ebx
  41234f:	shr    DWORD PTR [ecx+ebx*4],1
  412352:	pop    ss
  412353:	mov    DWORD PTR [edx+0x5f],edi
  412356:	jne    0x412378
  412358:	fcompp 
  41235a:	pop    ebx
  41235b:	sub    ecx,DWORD PTR [edi-0x7e]
  41235e:	or     BYTE PTR [ebx-0x4f3822c8],ch
  412364:	dec    BYTE PTR [esi]
  412366:	push   cs
  412367:	mov    edi,0xefea1e60
  41236c:	ds lock es dec bp
  412371:	fimul  DWORD PTR [ebx-0xc0f4d81]
  412377:	(bad)  
  412379:	scas   eax,DWORD PTR es:[edi]
  41237a:	mov    dl,0x50
  41237c:	mov    edi,edi
  41237e:	mov    edi,0xc6db9c12
  412383:	xor    BYTE PTR [ebx],dh
  412385:	stos   BYTE PTR es:[edi],al
  412386:	fcmovu st,st(5)
  412388:	pop    ecx
  412389:	mov    edi,0xa4f36de4
  41238e:	xchg   esp,eax
  41238f:	pop    ds
  412390:	mov    ebp,0xf693832d
  412395:	push   ecx
  412396:	xor    eax,DWORD PTR [ecx+0x36]
  412399:	(bad)  
  41239a:	fsub   DWORD PTR [edi-0x34f388ba]
  4123a0:	sti    
  4123a1:	hlt    
  4123a2:	in     al,0xcc
  4123a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123a5:	pop    ds
  4123a6:	dec    esp
  4123a7:	mov    eax,0xef867933
  4123ac:	(bad)  
  4123ad:	jp     0x41233d
  4123af:	(bad)  
  4123b0:	call   0xbe94:0xbcc28209
  4123b7:	ret    0x112e
  4123ba:	mov    edx,0xe64ea33c
  4123bf:	or     BYTE PTR [si-0x34],0x1e
  4123c4:	pop    edx
  4123c5:	push   edx
  4123c6:	popa   
  4123c7:	mov    ds:0xa4570562,eax
  4123cc:	fcom   DWORD PTR [esi-0x764bcd24]
  4123d2:	sub    edx,edx
  4123d4:	lock xchg esp,eax
  4123d6:	lahf   
  4123d7:	push   eax
  4123d8:	fdivp  st(7),st
  4123da:	lea    esi,[esi+ecx*1-0x62]
  4123de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123df:	mov    esp,DWORD PTR [edx]
  4123e1:	int3   
  4123e2:	cmp    al,0x43
  4123e4:	jo     0x4123c6
  4123e6:	add    al,BYTE PTR [ecx]
  4123e8:	fidiv  WORD PTR [eax+0xd9fccba]
  4123ee:	mov    cl,0xbf
  4123f1:	test   BYTE PTR [ecx+0x1038d62a],bl
  4123f7:	shr    BYTE PTR [ecx+0x5b394415],cl
  4123fd:	mov    dh,0x64
  4123ff:	mov    ecx,0x2bd34cb8
  412404:	push   ebp
  412405:	shr    DWORD PTR [edi],cl
  412407:	std    
  412408:	xchg   esp,eax
  412409:	cdq    
  41240a:	stc    
  41240b:	loop   0x41244e
  41240d:	mov    al,0xcf
  41240f:	mov    ch,0x61
  412411:	je     0x4123d5
  412413:	inc    ecx
  412414:	add    eax,0xc758cf6e
  412419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41241a:	xchg   esp,eax
  41241b:	aas    
  41241c:	mov    al,0x1f
  41241e:	cmovnp edx,DWORD PTR [ecx]
  412421:	retf   0xda02
  412424:	xlat   BYTE PTR ds:[ebx]
  412425:	xchg   DWORD PTR [esi+0x1ca495c4],ebx
  41242b:	lods   eax,DWORD PTR ds:[esi]
  41242c:	add    DWORD PTR [esp+esi*8+0x56],0x37
  412431:	sub    ebp,DWORD PTR [eax-0x4961dff4]
  412437:	fmul   DWORD PTR [edx]
  412439:	out    dx,al
  41243a:	aad    0x62
  41243c:	loope  0x4123f3
  41243e:	aas    
  41243f:	xchg   ebx,eax
  412440:	mov    fs,WORD PTR [esi-0x55]
  412443:	sahf   
  412444:	outs   dx,BYTE PTR ds:[esi]
  412445:	xchg   esi,eax
  412446:	inc    ebx
  412447:	sbb    ecx,DWORD PTR [ecx]
  412449:	and    bh,BYTE PTR [eax]
  41244b:	lea    ebp,[ebx]
  41244d:	push   ecx
  41244e:	in     eax,dx
  41244f:	into   
  412450:	xor    eax,0x871a888
  412455:	aad    0x5f
  412457:	inc    ecx
  412458:	out    0x5b,al
  41245a:	fimul  DWORD PTR [esi]
  41245c:	mov    fs,WORD PTR [eax+0x60]
  41245f:	or     BYTE PTR [ecx*8+0x120a720e],0xa3
  412467:	mov    ds:0x299fd248,al
  41246c:	ins    DWORD PTR es:[edi],dx
  41246d:	test   eax,0x205221ca
  412472:	xor    BYTE PTR [ecx],ah
  412474:	sbb    BYTE PTR [esi+0x4b],cl
  412477:	fstp   QWORD PTR [edx+0x74]
  41247a:	shl    DWORD PTR [edx+0x64d6ada],cl
  412480:	xor    al,BYTE PTR [edx-0x9d00f1d]
  412486:	cwde   
  412487:	test   al,0xe7
  412489:	ins    BYTE PTR es:[edi],dx
  41248a:	push   ebx
  41248b:	jo     0x41244e
  41248d:	pop    ebx
  41248e:	(bad)  
  41248f:	fdivr  DWORD PTR [ebp+0x160164f0]
  412495:	add    bl,bl
  412497:	int    0xec
  412499:	push   0x1c7d71bb
  41249e:	repz hlt 
  4124a0:	mov    eax,0x4d51aa17
  4124a5:	arpl   WORD PTR [edx],bp
  4124a7:	stos   BYTE PTR es:[edi],al
  4124a8:	push   es
  4124a9:	and    eax,DWORD PTR [eax+ebp*2-0x61]
  4124ad:	jmp    0x3107cbe
  4124b2:	mov    edi,0x8e8a3bea
  4124b7:	inc    esi
  4124b8:	inc    ebp
  4124b9:	push   ds
  4124ba:	inc    DWORD PTR [ecx+0x345a516b]
  4124c0:	sub    eax,0xba2c35b7
  4124c5:	sbb    BYTE PTR [edx],dl
  4124c7:	adc    BYTE PTR [edx-0x1f],dl
  4124ca:	icebp  
  4124cb:	or     eax,0xfd0d81b8
  4124d0:	jnp    0x41246b
  4124d2:	shr    ch,1
  4124d4:	call   ebp
  4124d6:	addr16 (bad) 
  4124d8:	cmp    BYTE PTR [ecx],dl
  4124da:	jmp    0x2ae5:0x1d7fa576
  4124e1:	mov    dl,0xc0
  4124e3:	push   ecx
  4124e4:	dec    ebx
  4124e5:	pop    es
  4124e6:	stc    
  4124e7:	retf   
  4124e8:	jg     0x4124f1
  4124ea:	xlat   BYTE PTR ds:[ebx]
  4124eb:	and    edx,0xffffff90
  4124ee:	in     eax,dx
  4124ef:	(bad)  
  4124f1:	call   0x11ba:0xf18a16df
  4124f8:	iret   
  4124f9:	mov    al,0x3a
  4124fb:	mov    ebp,0x4a70e9a1
  412500:	loopne 0x412579
  412502:	pop    ds
  412503:	popa   
  412504:	cwde   
  412505:	(bad)  
  412506:	pop    edx
  412507:	ins    BYTE PTR es:[edi],dx
  412508:	icebp  
  412509:	jle    0x4124ce
  41250b:	inc    ebx
  41250c:	cmc    
  41250d:	push   ebp
  41250e:	sub    eax,0xc92032f9
  412513:	mov    cl,0xac
  412515:	mov    dl,0x27
  412517:	iret   
  412518:	loopne 0x4124a6
  41251a:	push   ebp
  41251b:	inc    edi
  41251c:	or     eax,0xc748dc88
  412521:	lods   eax,DWORD PTR ds:[esi]
  412522:	or     ecx,edx
  412524:	pop    esi
  412525:	push   edx
  412526:	in     eax,0x61
  412528:	jno    0x41257e
  41252a:	and    BYTE PTR [esi+0x53313d99],bh
  412530:	xchg   ebx,eax
  412531:	xor    eax,DWORD PTR [ebx-0x33132a0b]
  412537:	fsub   DWORD PTR [ebp-0x51c3564f]
  41253d:	cs dec edi
  41253f:	xor    ah,al
  412541:	loope  0x41250f
  412543:	test   dl,bh
  412545:	pushf  
  412546:	ror    esp,cl
  412548:	push   ebp
  412549:	pop    esp
  41254a:	or     esp,ebx
  41254c:	repnz dec esi
  41254e:	pop    esi
  41254f:	lahf   
  412550:	cmc    
  412551:	(bad)  
  412552:	mov    eax,0x98d65fe6
  412557:	ins    BYTE PTR es:[edi],dx
  412558:	in     eax,dx
  412559:	inc    edx
  41255a:	mov    ecx,0x5af2cf8b
  412560:	into   
  412561:	scas   eax,DWORD PTR es:[edi]
  412562:	cs jne 0x412527
  412565:	xchg   edi,eax
  412566:	push   eax
  412567:	mov    eax,ds:0xae3bff3
  41256c:	mov    esi,0x4fd4cf8
  412571:	mov    bh,0x32
  412573:	imul   ebx,DWORD PTR [ecx],0xffffffb9
  412576:	shl    ebp,0x4
  412579:	lods   al,BYTE PTR ds:[esi]
  41257a:	cmp    dh,al
  41257c:	mov    ds:0x145dddbb,al
  412581:	mov    ebp,0x22253a3a
  412586:	daa    
  412587:	push   0x55
  412589:	pop    ebx
  41258a:	jne    0x412582
  41258c:	dec    edi
  41258d:	xchg   edx,eax
  41258e:	nop
  41258f:	push   edx
  412590:	mov    esp,0xf1c3d6c1
  412595:	jge    0x412543
  412597:	aas    
  412598:	jp     0x41251b
  41259a:	cmp    eax,0x7913bdde
  41259f:	dec    eax
  4125a0:	push   edx
  4125a1:	sbb    edx,edi
  4125a3:	dec    ecx
  4125a4:	mov    WORD PTR [eax],?
  4125a6:	and    al,0xd5
  4125a8:	lods   eax,DWORD PTR ds:[esi]
  4125a9:	nop
  4125aa:	(bad)  
  4125ab:	sbb    DWORD PTR [eax+0x1e4eafb6],0x8c50a9ed
  4125b5:	xor    eax,DWORD PTR [eax]
  4125b7:	imul   eax,DWORD PTR [ebx-0x6211ca72],0x551960d3
  4125c1:	sub    ebp,DWORD PTR [ebp-0x17]
  4125c4:	mov    bl,0xb0
  4125c6:	or     eax,0x2358c7a5
  4125cb:	inc    esp
  4125cc:	add    BYTE PTR [eax-0x2f],bl
  4125cf:	mov    al,0xce
  4125d1:	lahf   
  4125d2:	fimul  DWORD PTR [ecx]
  4125d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d5:	xor    al,0x5
  4125d7:	aaa    
  4125d8:	mov    cl,0x9b
  4125da:	sbb    esp,DWORD PTR [ecx-0x51]
  4125dd:	shr    WORD PTR fs:[eax],cl
  4125e1:	mov    dh,BYTE PTR [ebx+esi*4]
  4125e4:	mov    al,ds:0x3e4a54ac
  4125e9:	pop    es
  4125ea:	cmp    DWORD PTR [edx-0x1208da47],eax
  4125f0:	cdq    
  4125f1:	mov    ebx,esi
  4125f3:	pop    ebp
  4125f4:	lods   al,BYTE PTR ds:[esi]
  4125f5:	add    edx,0xad0aac25
  4125fb:	jne    0x4125f0
  4125fd:	push   esi
  4125fe:	int    0xc9
  412600:	mov    BYTE PTR [edx-0x32],ah
  412603:	mov    esi,0x6c8a5d4b
  412608:	outs   dx,DWORD PTR ds:[esi]
  412609:	(bad)  
  41260a:	jb     0x4125fa
  41260c:	cmp    al,0xfa
  41260e:	aad    0x2d
  412610:	jb     0x4125ba
  412612:	sbb    DWORD PTR [eax],esi
  412614:	and    eax,0x28f09df
  412619:	xor    al,0x89
  41261b:	leave  
  41261c:	pop    eax
  41261d:	pop    ebp
  41261e:	pop    ecx
  41261f:	push   0x71
  412621:	inc    eax
  412622:	js     0x4125b8
  412624:	out    dx,eax
  412625:	inc    ebx
  412626:	jge    0x4126a5
  412628:	mov    esi,0x7f016700
  41262d:	fst    DWORD PTR [edx-0x4f]
  412630:	pop    ecx
  412631:	sti    
  412632:	fisttp WORD PTR [ebx+0x43]
  412635:	daa    
  412636:	jo     0x412692
  412638:	dec    edx
  412639:	pushf  
  41263a:	sub    al,0x52
  41263c:	mov    ss,WORD PTR [ecx]
  41263e:	ja     0x41264a
  412640:	mov    esp,0xa357b8b0
  412645:	mov    esi,0xe3f65d12
  41264a:	sbb    DWORD PTR [edi-0x700f2ef3],ebx
  412650:	aas    
  412651:	aam    0x98
  412653:	rcr    BYTE PTR [edx+0x50],1
  412656:	jmp    FWORD PTR [ebp+0x11f88e7f]
  41265c:	in     al,0x3e
  41265e:	leave  
  41265f:	sbb    cl,BYTE PTR [ebp+eiz*1+0x41]
  412663:	aam    0xbd
  412665:	(bad)  
  412666:	push   ss
  412667:	sbb    eax,0x9e6ce583
  41266c:	dec    DWORD PTR [edx+esi*8+0x2f89f81a]
  412673:	test   eax,0xc87026dd
  412678:	xchg   esp,eax
  412679:	sbb    ch,BYTE PTR [eax-0xbc9e26a]
  41267f:	lods   eax,DWORD PTR ds:[esi]
  412680:	adc    DWORD PTR [esi-0x6342d340],edi
  412686:	loopne 0x412670
  412688:	xlat   BYTE PTR ds:[ebx]
  412689:	push   edx
  41268a:	icebp  
  41268b:	mov    cl,0x9e
  41268d:	(bad)  
  41268e:	xchg   ebx,eax
  41268f:	stos   DWORD PTR es:[edi],eax
  412690:	les    edx,FWORD PTR [edi+edi*8-0x52]
  412694:	dec    ebx
  412695:	mov    ch,0x78
  412697:	jne    0x412705
  412699:	xor    BYTE PTR [ebx-0x30b965e7],ch
  41269f:	mov    ebx,0xcad78eef
  4126a4:	out    0xaa,eax
  4126a6:	in     eax,dx
  4126a7:	lock je 0x4126c1
  4126aa:	(bad)  
  4126ac:	ret    
  4126ad:	pop    ebx
  4126ae:	cli    
  4126af:	jmp    0x41269e
  4126b1:	lods   al,BYTE PTR ds:[esi]
  4126b2:	ins    DWORD PTR es:[edi],dx
  4126b3:	jecxz  0x412713
  4126b5:	call   0xa01c7774
  4126ba:	dec    ebp
  4126bb:	mov    eax,0x11fb1f05
  4126c0:	pusha  
  4126c1:	inc    ebx
  4126c2:	stos   DWORD PTR es:[edi],eax
  4126c3:	ja     0x4126e1
  4126c5:	xor    DWORD PTR [edi+esi*2],edx
  4126c8:	test   eax,0x3a0d6838
  4126cd:	test   al,0x8e
  4126cf:	test   al,0xe
  4126d1:	pop    es
  4126d2:	test   al,0xc5
  4126d4:	xor    bh,al
  4126d6:	or     eax,0x4356f1e8
  4126db:	jmp    0x412672
  4126dd:	dec    eax
  4126de:	aad    0x3f
  4126e0:	pop    eax
  4126e1:	jno    0x412753
  4126e3:	push   es
  4126e4:	fmul   DWORD PTR [esi]
  4126e6:	(bad)  [ebx+0x46]
  4126e9:	in     al,dx
  4126ea:	rol    DWORD PTR [ebp+0x1e],1
  4126ed:	inc    ebx
  4126ee:	xchg   ebx,eax
  4126ef:	dec    ebx
  4126f0:	push   eax
  4126f1:	pop    esp
  4126f2:	shr    DWORD PTR [edx-0x11ecf29a],cl
  4126f8:	add    esp,esi
  4126fa:	push   edi
  4126fb:	jo     0x412729
  4126fd:	push   esp
  4126fe:	dec    ebx
  4126ff:	and    eax,0xf15f99eb
  412704:	lock push esi
  412706:	dec    esp
  412707:	call   0xe5922e9a
  41270c:	lahf   
  41270d:	cmp    ch,0x7
  412710:	scas   al,BYTE PTR es:[edi]
  412711:	stos   DWORD PTR es:[edi],eax
  412712:	adc    eax,0x74de5aa0
  412717:	enter  0xbd8a,0x93
  41271b:	arpl   WORD PTR [ecx-0x27],bp
  41271e:	push   esp
  41271f:	clc    
  412720:	xchg   DWORD PTR cs:[esi],edi
  412723:	cmp    al,bl
  412725:	adc    DWORD PTR [ebp+0x2c],esp
  412728:	jge    0x412704
  41272a:	fnstsw WORD PTR [edi+0x6c]
  41272d:	jmp    0xea27:0x35989d6e
  412734:	aam    0x28
  412736:	lods   eax,DWORD PTR ds:[esi]
  412737:	jb     0x41270b
  412739:	pop    es
  41273a:	daa    
  41273b:	in     eax,0x9a
  41273d:	dec    eax
  41273e:	lds    esi,FWORD PTR [ecx-0x2b]
  412741:	sbb    BYTE PTR [edi+0x3ca4141d],ch
  412747:	add    edx,ebp
  412749:	outs   dx,BYTE PTR ds:[esi]
  41274a:	retf   0x5cd9
  41274d:	les    edx,FWORD PTR [ecx+0x25052abf]
  412753:	and    ecx,DWORD PTR [edx+ebp*1-0x7d]
  412757:	push   ss
  412758:	bound  eax,QWORD PTR [ebp-0x4042e4ce]
  41275e:	aam    0xbd
  412760:	or     ecx,DWORD PTR [ecx+eax*4+0x63]
  412764:	aaa    
  412765:	jne    0x412730
  412767:	shl    DWORD PTR [edi],cl
  412769:	stos   BYTE PTR es:[edi],al
  41276a:	scas   eax,DWORD PTR es:[edi]
  41276b:	push   es
  41276c:	add    al,0x8d
  41276e:	sbb    eax,0xc762d96a
  412773:	popa   
  412774:	jge    0x4127bf
  412776:	pop    ecx
  412777:	mov    DWORD PTR [edx+0x77],ebx
  41277a:	ficom  DWORD PTR [edx-0x4b]
  41277d:	loopne 0x41273e
  41277f:	pop    edx
  412780:	adc    DWORD PTR [eax],eax
  412782:	pop    eax
  412783:	cmc    
  412784:	and    dh,cl
  412786:	inc    eax
  412787:	xchg   edx,eax
  412788:	pop    ecx
  412789:	in     eax,dx
  41278a:	push   cs
  41278b:	mov    eax,ds:0x8ce43959
  412790:	push   edi
  412791:	neg    eax
  412793:	xor    dl,dl
  412795:	jge    0x412782
  412797:	mov    esi,0xf578c7f3
  41279c:	mov    edx,esi
  41279e:	mov    bl,0x83
  4127a0:	or     dl,al
  4127a2:	dec    edi
  4127a3:	mov    eax,0x4d0d6d86
  4127a8:	mov    ebx,0x671d2665
  4127ad:	in     al,0x94
  4127af:	out    dx,al
  4127b0:	scas   eax,DWORD PTR es:[edi]
  4127b1:	inc    esi
  4127b2:	inc    esp
  4127b3:	iret   
  4127b4:	xchg   esp,eax
  4127b5:	sbb    ch,al
  4127b7:	mov    eax,0xdb19bf3f
  4127bc:	pmaxub mm2,mm0
  4127bf:	push   edi
  4127c0:	das    
  4127c1:	push   edi
  4127c2:	iret   
  4127c3:	sbb    ebp,ebx
  4127c5:	imul   ebp,esp,0x7a
  4127c8:	jmp    0x90a3a0d4
  4127cd:	fwait
  4127ce:	mov    al,BYTE PTR [ebx-0x14bc10e]
  4127d4:	fcmovnbe st,st(5)
  4127d6:	xchg   esp,eax
  4127d7:	xchg   edi,eax
  4127d8:	push   ebp
  4127d9:	jmp    0x2beb74c9
  4127de:	xlat   BYTE PTR ds:[ebx]
  4127df:	imul   edi,DWORD PTR [ebp+0xd],0xffffffa8
  4127e3:	test   al,0xd1
  4127e5:	out    0x66,eax
  4127e7:	ja     0x41280d
  4127e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ea:	hlt    
  4127eb:	int    0xae
  4127ed:	sbb    al,0x38
  4127ef:	xor    dh,BYTE PTR [ebp+0x60f0aa5]
  4127f5:	dec    eax
  4127f6:	sub    eax,0xcbdfb6b8
  4127fb:	xlat   BYTE PTR ds:[ebx]
  4127fc:	or     DWORD PTR [edx-0x17b3169e],0x509ffa10
  412806:	and    DWORD PTR ds:[edx-0x52f6f6a6],ebp
  41280d:	cld    
  41280e:	shr    DWORD PTR [edx],1
  412810:	xchg   ecx,eax
  412811:	mov    DWORD PTR [ecx+0x1a2a8096],esp
  412817:	inc    esi
  412818:	f2xm1  
  41281a:	add    esp,edx
  41281c:	mov    cl,0x49
  41281e:	push   ds
  41281f:	mov    bl,ch
  412821:	inc    esp
  412822:	lds    eax,FWORD PTR cs:0xf22dd8ee
  412829:	test   al,al
  41282b:	xor    BYTE PTR [ebp+0x2e],dl
  41282e:	xchg   esp,eax
  41282f:	out    dx,eax
  412830:	fmul   DWORD PTR [eax+0x67]
  412833:	and    DWORD PTR [eax+ecx*4],ebx
  412836:	jmp    0x4372:0xf1a9bce7
  41283d:	mov    cl,0xd4
  41283f:	hlt    
  412840:	stos   BYTE PTR es:[edi],al
  412841:	inc    esi
  412842:	(bad)  
  412844:	cld    
  412845:	in     al,0xef
  412847:	ins    BYTE PTR es:[edi],dx
  412848:	and    BYTE PTR [ecx],ch
  41284a:	aam    0xe4
  41284c:	xor    BYTE PTR [edi+0x65],ah
  41284f:	xchg   ecx,eax
  412850:	add    al,0xf5
  412852:	lahf   
  412853:	push   di
  412855:	xlat   BYTE PTR ds:[ebx]
  412856:	rcr    BYTE PTR [ecx],0x10
  412859:	adc    al,0x9b
  41285b:	ja     0x41286d
  41285d:	ret    
  41285e:	js     0x412817
  412860:	pop    ebp
  412861:	pop    ss
  412862:	(bad)  
  412863:	fistp  QWORD PTR [ecx+0x5041c014]
  412869:	add    al,0xaf
  41286b:	sub    edx,DWORD PTR [ebx+0x2295f6a6]
  412871:	(bad)  
  412872:	jns    0x41289b
  412874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412875:	mov    ch,0x3d
  412877:	jns    0x4128c6
  412879:	pop    ebp
  41287a:	or     DWORD PTR [ebx-0x2c],edx
  41287d:	xchg   ebp,eax
  41287e:	call   0xd270:0x898ba4e0
  412885:	push   0xb6005da0
  41288a:	xor    eax,0x4158a30f
  41288f:	int    0xe7
  412891:	into   
  412892:	popf   
  412893:	out    0x34,eax
  412895:	push   ecx
  412896:	mov    edx,0x99e50dfe
  41289b:	push   esi
  41289c:	cmp    BYTE PTR [esi-0xc49503a],0xca
  4128a3:	dec    edx
  4128a4:	sub    al,bh
  4128a6:	push   ebp
  4128a7:	cwde   
  4128a8:	ss into 
  4128aa:	mov    bl,0x58
  4128ac:	add    eax,0xadfa9a3f
  4128b1:	or     ecx,eax
  4128b3:	jbe    0x41284d
  4128b5:	inc    ebp
  4128b6:	daa    
  4128b7:	dec    edi
  4128b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128b9:	test   DWORD PTR [edi-0x2e],esp
  4128bc:	les    edi,FWORD PTR [esi+0x2d865ae4]
  4128c2:	cs or  eax,0x6a3dda1d
  4128c8:	out    dx,eax
  4128c9:	and    eax,0xa783aa1d
  4128ce:	push   ss
  4128cf:	imul   edi,DWORD PTR [eax+0x4b75e08e],0xbc18df2d
  4128d9:	cdq    
  4128da:	mov    BYTE PTR [esi],dh
  4128dc:	leave  
  4128dd:	mov    ebx,0xfad1c331
  4128e2:	lock test eax,0x626b9ea2
  4128e8:	and    dl,BYTE PTR [edx+0x42e86eef]
  4128ee:	xchg   edx,eax
  4128ef:	sub    ch,BYTE PTR ds:0x65a06393
  4128f5:	rcr    BYTE PTR [edi+ebx*8],cl
  4128f8:	and    ebx,DWORD PTR [edx-0x148304a3]
  4128fe:	mov    ebx,0x22b77df8
  412903:	repnz les ebp,FWORD PTR [esi]
  412906:	xor    al,0x4f
  412908:	arpl   WORD PTR [edi],bp
  41290a:	inc    ebp
  41290b:	int    0xc4
  41290d:	dec    esi
  41290e:	push   eax
  41290f:	jge    0x4128ee
  412911:	sub    DWORD PTR [edx-0x19],ebx
  412914:	fld    QWORD PTR [eax]
  412916:	xor    eax,0x733f6d14
  41291b:	cli    
  41291c:	jecxz  0x4128a5
  41291e:	and    al,0x5e
  412920:	dec    eax
  412921:	clc    
  412922:	adc    BYTE PTR [ecx-0x31],dh
  412925:	sub    DWORD PTR [edi+0x4a],esp
  412928:	mov    DWORD PTR [esp+edx*8-0x62],esi
  41292c:	lock and bh,BYTE PTR es:[ecx]
  412930:	pop    esp
  412931:	imul   edi,DWORD PTR [esi+0x45e13f75],0xfffffff3
  412938:	sub    DWORD PTR [ebp+0x267eb3f4],esp
  41293e:	in     eax,0xcc
  412940:	push   ss
  412941:	push   0x23030a0e
  412946:	(bad)  
  412948:	jo     0x412912
  41294a:	add    BYTE PTR [ebx-0x22],ah
  41294d:	retf   0x5ef3
  412950:	std    
  412951:	pop    ebx
  412952:	push   es
  412953:	cli    
  412954:	xlat   BYTE PTR ds:[ebx]
  412955:	mov    ah,al
  412957:	std    
  412958:	jge    0x4128e2
  41295a:	ins    BYTE PTR es:[edi],dx
  41295b:	or     eax,DWORD PTR ds:0xc7d2e9da
  412961:	inc    edi
  412962:	adc    ebp,ebx
  412964:	gs das 
  412966:	daa    
  412967:	ror    BYTE PTR [esi-0x57e97ae2],0x54
  41296e:	mov    DWORD PTR [esi-0x42],eax
  412971:	push   ss
  412972:	into   
  412973:	je     0x412969
  412975:	pop    ebp
  412976:	pop    esi
  412977:	and    ecx,DWORD PTR [ecx+0x641aba81]
  41297d:	jle    0x412928
  41297f:	xchg   esi,eax
  412980:	inc    esi
  412982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412983:	xchg   ebx,eax
  412984:	xlat   BYTE PTR ds:[ebx]
  412985:	ret    0x833f
  412988:	int3   
  412989:	fdiv   st,st(0)
  41298b:	mul    dl
  41298d:	test   al,0x92
  41298f:	in     al,dx
  412990:	imul   ebx,DWORD PTR [ebp-0x2c6ff22b],0x6d
  412997:	(bad)  
  412999:	jo     0x41292b
  41299b:	jne    0x412a0f
  41299d:	mov    al,cl
  41299f:	out    dx,eax
  4129a0:	sti    
  4129a1:	(bad)  [edi]
  4129a3:	in     eax,0xc9
  4129a5:	mov    ecx,0x1d80a9d2
  4129aa:	adc    ecx,DWORD PTR [esi-0x4b]
  4129ad:	outs   dx,BYTE PTR ds:[esi]
  4129ae:	mov    ebp,DWORD PTR [edx]
  4129b0:	(bad)  
  4129b2:	test   BYTE PTR [edi],cl
  4129b4:	shr    BYTE PTR [eax-0x58fcf6c0],cl
  4129ba:	add    edi,edx
  4129bc:	push   esi
  4129bd:	out    0x70,al
  4129bf:	sbb    al,0xe4
  4129c1:	dec    ebx
  4129c2:	jae    0x4129ea
  4129c4:	repz inc di
  4129c7:	outs   dx,DWORD PTR ds:[esi]
  4129c8:	add    al,bh
  4129ca:	sub    al,0x55
  4129cc:	add    DWORD PTR [edx],esp
  4129ce:	push   cs
  4129cf:	push   es
  4129d0:	mov    esp,0x557f1b8c
  4129d5:	xchg   ebp,eax
  4129d6:	not    BYTE PTR [ebp-0x37]
  4129d9:	(bad)  [ebp-0x38d8f8dc]
  4129df:	add    al,0xa0
  4129e1:	(bad)  
  4129e2:	xor    al,0xa9
  4129e4:	xchg   ecx,eax
  4129e5:	cld    
  4129e6:	cs gs popf 
  4129e9:	sub    BYTE PTR [edx],al
  4129eb:	aaa    
  4129ec:	inc    esi
  4129ed:	ficomp WORD PTR [edx+0x7c]
  4129f0:	out    0xcf,eax
  4129f2:	push   ds
  4129f3:	xor    eax,DWORD PTR ds:0xe47048df
  4129f9:	stos   DWORD PTR es:[edi],eax
  4129fa:	fdiv   QWORD PTR [eax+0xa0c7ba7]
  412a00:	or     al,0x2c
  412a02:	sub    eax,0x941fd2e2
  412a07:	mov    WORD PTR [ebx],ds
  412a09:	push   ebx
  412a0a:	and    BYTE PTR [eax],ch
  412a0c:	call   0xd609:0x9d7ad07a
  412a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a14:	xor    esi,DWORD PTR [esi]
  412a16:	mov    ebp,DWORD PTR [esi+0x28]
  412a19:	mov    ch,0x8d
  412a1b:	out    dx,eax
  412a1c:	popf   
  412a1d:	in     al,0xce
  412a1f:	imul   ecx,DWORD PTR [ecx+0x71833af4],0x2f8d0a3f
  412a29:	pop    ss
  412a2a:	in     al,0xb2
  412a2c:	adc    ebp,edi
  412a2e:	pop    es
  412a2f:	inc    ecx
  412a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a31:	pusha  
  412a32:	jmp    0x774cca6c
  412a37:	cmp    dh,BYTE PTR [esi+0x6b]
  412a3a:	xchg   edi,eax
  412a3b:	dec    esi
  412a3c:	mov    al,ds:0x8a76396f
  412a41:	(bad)  
  412a42:	cmp    eax,0xc97e241e
  412a47:	ins    DWORD PTR es:[edi],dx
  412a48:	mov    dh,0xe2
  412a4a:	push   edx
  412a4b:	enter  0x3bf7,0x92
  412a4f:	or     eax,0xe0cbfbe6
  412a54:	ds push cs
  412a56:	cmc    
  412a57:	loopne 0x412a0c
  412a59:	mov    edi,0x25f0f94
  412a5e:	mov    ch,0xff
  412a60:	aaa    
  412a61:	cmp    ecx,DWORD PTR [esi+eiz*2+0x7e]
  412a65:	imul   esi,DWORD PTR [ebp-0x61],0xe5c83dbe
  412a6c:	pusha  
  412a6d:	cwde   
  412a6e:	cmp    edi,DWORD PTR [edx]
  412a70:	mul    BYTE PTR [ecx]
  412a72:	(bad)  
  412a73:	cli    
  412a74:	adc    ebx,DWORD PTR [ebx]
  412a76:	call   0xcdfd:0x7742ab1
  412a7d:	push   edx
  412a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a80:	cmp    ecx,DWORD PTR [esi]
  412a82:	call   0xcad69900
  412a87:	mov    esi,0x994f12b2
  412a8c:	shl    edx,cl
  412a8e:	clc    
  412a8f:	sub    esp,edx
  412a91:	or     DWORD PTR [edx-0x6ccd962f],ecx
  412a97:	clc    
  412a98:	out    0xd2,al
  412a9a:	sub    DWORD PTR [ecx-0xf5b22ce],ebp
  412aa0:	push   esi
  412aa1:	retf   0x1920
  412aa4:	clc    
  412aa5:	cwde   
  412aa6:	cld    
  412aa7:	hlt    
  412aa8:	fisttp WORD PTR [ebp+0x210b959b]
  412aae:	(bad)  
  412aaf:	add    BYTE PTR [ecx],dh
  412ab1:	shl    BYTE PTR [ebp+edi*8+0x16],1
  412ab5:	push   esp
  412ab6:	push   edx
  412ab7:	dec    ebx
  412ab8:	and    bh,BYTE PTR [edi-0x7a2ec2b2]
  412abe:	iret   
  412abf:	sub    dl,ch
  412ac1:	xchg   esp,eax
  412ac2:	retf   
  412ac3:	mov    ebp,0x77c6419f
  412ac8:	mov    ch,0x11
  412aca:	rcl    esi,1
  412acc:	(bad)  
  412acd:	jmp    0xdab7b9d3
  412ad2:	aaa    
  412ad3:	gs add edx,esi
  412ad6:	adc    ecx,esp
  412ad8:	pop    ebx
  412ad9:	mov    esi,0xc7c85e23
  412ade:	aas    
  412adf:	fsubr  DWORD PTR [edx-0x494aba0e]
  412ae5:	cs ror al,0xc7
  412ae9:	pop    esp
  412aea:	icebp  
  412aeb:	jg     0x412b32
  412aed:	loop   0x412ae0
  412aef:	jp     0x412abc
  412af1:	je     0x412ada
  412af3:	inc    esp
  412af4:	sub    esi,DWORD PTR [ebx-0x7e09096a]
  412afa:	inc    ebp
  412afb:	jp     0x412a83
  412afd:	and    eax,0x4d5f09ce
  412b02:	dec    edi
  412b03:	ret    
  412b04:	(bad)  
  412b06:	or     dh,BYTE PTR [ecx-0x2b58b04e]
  412b0c:	cs pop edx
  412b0e:	push   ss
  412b0f:	pop    ebp
  412b10:	push   es
  412b11:	in     eax,0x36
  412b13:	(bad)  
  412b15:	or     ah,ah
  412b17:	fist   WORD PTR [ebx]
  412b19:	or     al,0xe9
  412b1b:	loope  0x412b7f
  412b1d:	aam    0x12
  412b1f:	jo     0x412b2d
  412b21:	mov    edx,0xd87216b3
  412b26:	sbb    BYTE PTR [ebp-0x772054ed],0x51
  412b2d:	xchg   esi,eax
  412b2e:	jns    0x412b3a
  412b30:	ss mov bh,0x2b
  412b33:	dec    edi
  412b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b35:	jo     0x412b68
  412b37:	int3   
  412b38:	jns    0x412b1e
  412b3a:	jae    0x412b0f
  412b3c:	add    al,0xa4
  412b3e:	push   esp
  412b3f:	cs jno 0x412bc0
  412b42:	jmp    0x412ae3
  412b44:	sti    
  412b45:	mov    ds:0xe9cd6e89,eax
  412b4a:	pop    esp
  412b4b:	sbb    DWORD PTR [ecx+0x12],ebx
  412b4e:	or     edi,DWORD PTR [edx]
  412b50:	ret    
  412b51:	xchg   ebx,eax
  412b52:	lds    ebp,FWORD PTR [ebp*2-0x32196b4e]
  412b59:	out    dx,al
  412b5a:	mov    ah,0x84
  412b5c:	iret   
  412b5d:	xchg   ebp,eax
  412b5e:	push   ecx
  412b5f:	pop    esi
  412b60:	lock push esi
  412b62:	jl     0x412b2f
  412b64:	jl     0x412bb4
  412b66:	push   ecx
  412b67:	push   0xffffff9f
  412b69:	inc    eax
  412b6a:	xchg   ecx,eax
  412b6b:	into   
  412b6c:	jecxz  0x412b00
  412b6e:	call   0xd074:0x4cd64b31
  412b75:	pop    ebp
  412b76:	out    0x1c,al
  412b78:	out    dx,al
  412b79:	ds sbb al,0x75
  412b7c:	dec    eax
  412b7d:	xlat   BYTE PTR ds:[ebx]
  412b7e:	psubusw mm7,QWORD PTR [ebp+0x2b]
  412b82:	mov    edx,0x8890661e
  412b87:	sbb    eax,0xc2d60f6a
  412b8c:	rcr    BYTE PTR [edi+0x45624f2],1
  412b92:	ret    
  412b93:	jmp    0x412b65
  412b95:	fstp   TBYTE PTR [ecx]
  412b97:	mov    ch,0x91
  412b99:	not    DWORD PTR [ebp+0x428919e8]
  412b9f:	and    ebp,esi
  412ba1:	jne    0x412b25
  412ba3:	shl    DWORD PTR [edi+0x791ab787],cl
  412ba9:	bound  esi,QWORD PTR [ecx+0x689fb4d2]
  412baf:	inc    ebp
  412bb0:	push   edx
  412bb1:	dec    edi
  412bb2:	jmp    0x412b72
  412bb4:	mov    ds:0xdd8b3867,eax
  412bb9:	push   eax
  412bba:	stos   DWORD PTR es:[edi],eax
  412bbb:	mov    ebx,0xfb3d0464
  412bc0:	arpl   WORD PTR [ebp-0x65],sp
  412bc3:	push   eax
  412bc4:	ficomp DWORD PTR [esi-0x74a073da]
  412bca:	iret   
  412bcb:	sub    ah,BYTE PTR [ebx]
  412bcd:	cdq    
  412bce:	loop   0x412b8d
  412bd0:	call   0xac94:0x638089ad
  412bd7:	repz les edx,FWORD PTR [ecx-0x7f5adcd2]
  412bde:	cmp    BYTE PTR [eax+ebp*4-0x27],0x1c
  412be3:	push   edx
  412be4:	xor    al,0xd
  412be6:	xchg   ebp,eax
  412be7:	int    0xfc
  412be9:	mov    ss,WORD PTR [ebx-0x4979ad26]
  412bef:	mov    ebp,0x1fc3595
  412bf4:	sbb    BYTE PTR [ebx-0xc354a05],0xeb
  412bfb:	mov    esp,0x574e64f4
  412c00:	(bad)  
  412c02:	jl     0x412b91
  412c04:	sar    DWORD PTR [edx],cl
  412c06:	jp     0x412c43
  412c08:	pop    esi
  412c09:	xchg   esp,eax
  412c0a:	gs popa 
  412c0c:	pop    ebx
  412c0d:	mov    esp,DWORD PTR [ecx+0x0]
  412c10:	ins    DWORD PTR es:[edi],dx
  412c11:	(bad)  
  412c12:	pusha  
  412c13:	jb     0x412c61
  412c15:	retf   0xa906
  412c18:	jmp    0x412bb7
  412c1a:	dec    ecx
  412c1b:	sub    al,ah
  412c1d:	aam    0x11
  412c1f:	cmc    
  412c20:	or     ebx,eax
  412c22:	mov    BYTE PTR [eax-0x5c8939e3],dh
  412c28:	int3   
  412c29:	inc    esi
  412c2a:	retf   0xc912
  412c2d:	jg     0x412c51
  412c2f:	(bad)
  412c34:	gs addr16 and al,0xec
  412c38:	add    eax,0x8773be58
  412c3d:	sti    
  412c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c3f:	sahf   
  412c40:	or     eax,0xbbf9d819
  412c45:	aad    0x5f
  412c47:	pop    es
  412c48:	sub    eax,0x787d738a
  412c4d:	sbb    DWORD PTR [ecx-0xb],ebp
  412c50:	push   es
  412c51:	push   esi
  412c52:	arpl   WORD PTR [ecx+0x78d369ee],si
  412c58:	call   0x7263e98c
  412c5d:	pusha  
  412c5e:	jp     0x412c8d
  412c60:	xor    ebp,edx
  412c62:	push   0xffffffa9
  412c64:	mov    WORD PTR ds:0xda8860a7,fs
  412c6a:	xor    eax,0xf83f355d
  412c6f:	sub    ebx,DWORD PTR es:[ebx-0x1dce24d3]
  412c76:	push   0xffffffa0
  412c78:	(bad)  
  412c79:	(bad)  
  412c7a:	and    al,0xf1
  412c7c:	pop    esp
  412c7d:	test   BYTE PTR [esi+0x40],0x7b
  412c81:	or     esi,DWORD PTR [esi]
  412c83:	push   eax
  412c84:	sbb    DWORD PTR [ecx-0x7c],ecx
  412c87:	push   cs
  412c88:	push   ds
  412c89:	fcomp  DWORD PTR [ebx+ecx*8]
  412c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c8d:	hlt    
  412c8e:	pop    eax
  412c8f:	call   FWORD PTR ds:0xabcf6956
  412c95:	inc    ebp
  412c96:	push   ss
  412c97:	adc    ah,BYTE PTR [ebp-0x71]
  412c9a:	cmp    eax,ebp
  412c9c:	lods   al,BYTE PTR ds:[esi]
  412c9d:	jp     0x412cfb
  412c9f:	cli    
  412ca0:	dec    ebx
  412ca1:	out    dx,eax
  412ca2:	retf   0xaca5
  412ca5:	idiv   BYTE PTR [esi+ecx*8-0x67de4122]
  412cac:	add    esi,DWORD PTR [ebp+ecx*4-0x4b]
  412cb0:	ret    0x39fb
  412cb3:	pop    edx
  412cb4:	sbb    al,0x8a
  412cb6:	xlat   BYTE PTR ds:[ebx]
  412cb7:	push   esp
  412cb8:	fstp   QWORD PTR [ebp+edx*8+0x2c]
  412cbc:	idiv   edi
  412cbe:	push   es
  412cbf:	add    DWORD PTR [ebp-0x25406207],eax
  412cc5:	in     al,0x97
  412cc7:	lock shl DWORD PTR [ecx+0x57],0xe1
  412ccc:	xor    ch,dl
  412cce:	push   0x56dd6f20
  412cd3:	sbb    dh,bl
  412cd5:	adc    ebx,eax
  412cd7:	(bad)  
  412cd8:	mov    dh,0x99
  412cda:	jbe    0x412cee
  412cdc:	call   0xb440:0x8ae7bfc7
  412ce3:	or     BYTE PTR [eax+ebx*4-0x1b8a1f47],ah
  412cea:	loope  0x412caa
  412cec:	addr16 (bad) 
  412cee:	mov    ch,0x5e
  412cf0:	xor    esp,0x77
  412cf3:	das    
  412cf4:	retf   
  412cf5:	add    bl,0xcf
  412cf8:	adc    al,0x77
  412cfa:	push   edx
  412cfb:	test   DWORD PTR [esi+ecx*1],ebp
  412cfe:	push   es
  412cff:	clc    
  412d00:	retf   0xf659
  412d03:	pop    es
  412d04:	les    ecx,FWORD PTR [eax-0x7]
  412d07:	fld    QWORD PTR [ebp+0x6d14d35c]
  412d0d:	leave  
  412d0e:	xor    eax,eax
  412d10:	pop    es
  412d11:	(bad)  
  412d12:	sbb    edx,edi
  412d14:	fiadd  DWORD PTR [ebp+0x49c5885d]
  412d1a:	push   cs
  412d1b:	lock inc ebp
  412d1d:	jp     0x412d75
  412d1f:	dec    edx
  412d20:	test   eax,0x1a001575
  412d25:	pop    esp
  412d26:	xchg   ecx,eax
  412d27:	pop    ebx
  412d28:	(bad)  
  412d29:	fcmovnu st,st(3)
  412d2b:	ret    
  412d2c:	nop
  412d2d:	jecxz  0x412cda
  412d2f:	push   edx
  412d30:	sub    DWORD PTR [edx-0x545706b6],edi
  412d36:	arpl   WORD PTR [esp+ecx*4-0x6a201242],cx
  412d3d:	retf   0x9e67
  412d40:	jbe    0x412d35
  412d42:	bound  ecx,QWORD PTR [edx+0x4948fa6a]
  412d48:	arpl   WORD PTR [edi],sp
  412d4a:	stos   DWORD PTR es:[edi],eax
  412d4b:	mul    ah
  412d4d:	leave  
  412d4e:	sbb    eax,eax
  412d50:	fwait
  412d51:	cwde   
  412d52:	pop    edx
  412d53:	push   0xffffffec
  412d55:	out    dx,eax
  412d56:	jecxz  0x412cf5
  412d58:	in     al,dx
  412d59:	aaa    
  412d5a:	cmc    
  412d5b:	mov    eax,ds:0xbbeae3d4
  412d60:	pop    esp
  412d61:	in     al,0x39
  412d63:	xor    DWORD PTR [eax],esi
  412d65:	sub    bl,cl
  412d67:	ins    BYTE PTR es:[edi],dx
  412d68:	mov    dh,0xe2
  412d6a:	js     0x412d78
  412d6c:	and    esp,DWORD PTR [edi+esi*8]
  412d6f:	(bad)  
  412d70:	shl    DWORD PTR [ebx+0x65],1
  412d73:	retf   
  412d74:	fldenv [ebp+0x5550b658]
  412d7a:	cwde   
  412d7b:	jmp    0x412d09
  412d7d:	xchg   ebx,eax
  412d7e:	les    esi,FWORD PTR [edi]
  412d80:	push   esi
  412d81:	sub    al,0x83
  412d83:	fwait
  412d84:	mov    eax,ds:0x865ac119
  412d89:	pop    ss
  412d8a:	test   al,0x0
  412d8c:	pop    eax
  412d8d:	or     DWORD PTR [ebx+0x4995448e],eax
  412d93:	pop    ds
  412d94:	jne    0x412d89
  412d96:	sbb    DWORD PTR [ebx+eiz*4],esp
  412d99:	mov    ecx,0xd1d8e960
  412d9e:	add    esp,DWORD PTR [eax]
  412da0:	xlat   BYTE PTR ds:[ebx]
  412da1:	dec    eax
  412da2:	(bad)  
  412da3:	ja     0x412e04
  412da5:	xchg   esp,eax
  412da6:	jb     0x412df6
  412da8:	aaa    
  412da9:	stos   BYTE PTR es:[edi],al
  412daa:	jmp    0x7016:0x9d3fa9d0
  412db1:	and    eax,0xb4f1b339
  412db6:	pop    ss
  412db7:	push   0x3d2b08d7
  412dbc:	adc    ecx,eax
  412dbe:	mov    ebp,0xf59b00b5
  412dc3:	xchg   esp,eax
  412dc4:	pusha  
  412dc5:	shr    DWORD PTR [ebx+0x8af2f3b],cl
  412dcb:	imul   esi,DWORD PTR [esi-0x69278e2f],0x899dff8b
  412dd5:	mov    DWORD PTR [ebx-0x490e8ced],ebx
  412ddb:	adc    eax,0x66a238e8
  412de0:	mov    bh,BYTE PTR [ebx-0x702b0e6a]
  412de6:	gs ja  0x412e08
  412de9:	fwait
  412dea:	sti    
  412deb:	jnp    0x412e56
  412ded:	pop    esi
  412dee:	test   BYTE PTR [ebx+0x350b4227],dh
  412df4:	inc    ebp
  412df5:	(bad)  
  412df6:	retf   0x9361
  412df9:	xchg   DWORD PTR [ebx+0x3b],edi
  412dfc:	jnp    0x6a52ac7e
  412e02:	pusha  
  412e03:	xchg   DWORD PTR [eax-0x76],ecx
  412e06:	inc    ebx
  412e07:	rcl    edx,0xdb
  412e0a:	cmp    DWORD PTR [ebx],ebx
  412e0c:	fcomp  QWORD PTR [eax+0x4a]
  412e0f:	push   ebx
  412e10:	nop
  412e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e12:	xchg   edi,eax
  412e13:	jnp    0x412e93
  412e15:	ds jbe 0x412dfd
  412e18:	dec    esp
  412e19:	mov    WORD PTR [eax+0x1da15be5],?
  412e1f:	adc    al,0x29
  412e21:	cmp    ecx,DWORD PTR [ecx-0x5b]
  412e24:	mov    gs,ebp
  412e26:	rcr    DWORD PTR [edi],1
  412e28:	loope  0x412e11
  412e2a:	sti    
  412e2b:	mov    ecx,0x2c89a36f
  412e30:	jmp    0x1d55ca21
  412e35:	add    al,0xc5
  412e37:	lds    ebx,FWORD PTR [edi+esi*1+0x4521e78f]
  412e3e:	add    edx,DWORD PTR [edx]
  412e40:	out    dx,al
  412e41:	(bad)  
  412e43:	clc    
  412e44:	xchg   esp,eax
  412e45:	mov    ecx,0xf33d0c23
  412e4a:	clc    
  412e4b:	test   BYTE PTR [edx+eiz*4-0xf],0x8b
  412e50:	ret    
  412e51:	mov    ecx,ds
  412e53:	and    dh,BYTE PTR [ecx]
  412e55:	rcl    BYTE PTR [esi+0x90f5327],0x81
  412e5c:	sbb    BYTE PTR [ebx],cl
  412e5e:	push   0xffffffc7
  412e60:	sub    BYTE PTR [esi-0x63abc1bb],al
  412e66:	sbb    BYTE PTR [esi],ah
  412e68:	pop    es
  412e69:	xchg   esi,eax
  412e6a:	sub    al,0x7f
  412e6c:	repnz fadd st,st(4)
  412e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e70:	ret    0x42ba
  412e73:	mov    ds,WORD PTR [ecx]
  412e75:	pop    ds
  412e76:	sbb    dh,ah
  412e78:	add    BYTE PTR [ecx],0x37
  412e7b:	punpckhwd mm7,QWORD PTR [ecx-0x41c8b1b3]
  412e82:	std    
  412e83:	dec    ebp
  412e84:	xchg   ecx,eax
  412e85:	push   edi
  412e86:	pop    esp
  412e87:	aam    0x7a
  412e89:	xchg   edi,eax
  412e8a:	daa    
  412e8b:	ret    0x2aba
  412e8e:	nop
  412e8f:	adc    edi,ebp
  412e91:	push   edx
  412e92:	mov    dh,0x60
  412e94:	into   
  412e95:	stos   DWORD PTR es:[edi],eax
  412e96:	in     al,0x27
  412e98:	or     al,BYTE PTR [edi-0x50]
  412e9b:	mov    cs,edi
  412e9d:	sbb    al,BYTE PTR [esi]
  412e9f:	xchg   edx,eax
  412ea0:	rcl    DWORD PTR ds:0x56e26b3d,1
  412ea6:	iret   
  412ea7:	push   ebx
  412ea8:	push   esp
  412ea9:	out    0x5d,al
  412eab:	(bad)  
  412eac:	arpl   WORD PTR [edi],ax
  412eae:	push   0x63
  412eb0:	fwait
  412eb1:	push   edi
  412eb2:	int3   
  412eb3:	pop    ebx
  412eb4:	dec    esi
  412eb5:	jmp    0xfd7a:0xddeead64
  412ebc:	mov    bl,BYTE PTR gs:0xab8f0f88
  412ec3:	into   
  412ec4:	mov    DWORD PTR [ebx+0x6912ce20],eax
  412eca:	mov    esp,0xb1a5561c
  412ecf:	inc    eax
  412ed0:	pop    ebx
  412ed1:	and    DWORD PTR [esi],0x68
  412ed4:	(bad)  
  412ed5:	call   0x8b310f76
  412eda:	mov    ecx,0x7cdc0228
  412edf:	xor    ch,BYTE PTR [eax+0x76044bb1]
  412ee5:	out    dx,al
  412ee6:	jns    0x412ea4
  412ee8:	sub    cl,ah
  412eea:	jb     0x412f32
  412eec:	jb     0x412f20
  412eee:	ja     0x412efc
  412ef0:	add    BYTE PTR [edx+esi*1],ch
  412ef3:	outs   dx,BYTE PTR ds:[esi]
  412ef4:	cmp    ebx,eax
  412ef6:	mov    ch,0x1a
  412ef8:	mov    ebx,0xdf9fe3ed
  412efd:	addr16 mov dh,0x3c
  412f00:	xor    dh,BYTE PTR [ecx]
  412f02:	pop    esp
  412f03:	dec    ecx
  412f04:	push   edi
  412f05:	lahf   
  412f06:	daa    
  412f07:	(bad)  
  412f08:	cli    
  412f09:	jge    0x412ecb
  412f0b:	pop    ds
  412f0c:	add    BYTE PTR [ecx],ch
  412f0e:	ficom  WORD PTR [ebx]
  412f10:	push   cs
  412f11:	call   0xbf9fee4a
  412f16:	cwde   
  412f17:	mov    ebp,0x879708e6
  412f1c:	jecxz  0x412f9b
  412f1e:	outs   dx,BYTE PTR ds:[esi]
  412f1f:	into   
  412f20:	xor    al,0x16
  412f22:	inc    edi
  412f23:	jnp    0x412f3f
  412f25:	xchg   DWORD PTR [eax-0x29],esi
  412f28:	sub    BYTE PTR [eax],ch
  412f2a:	push   edx
  412f2b:	inc    ebx
  412f2c:	fdivr  QWORD PTR [eax]
  412f2e:	in     al,0xae
  412f30:	(bad)  
  412f31:	xchg   edx,eax
  412f32:	mov    gs,WORD PTR [edx+eax*8+0x68619f87]
  412f39:	jecxz  0x412f2c
  412f3b:	add    eax,0x296b872c
  412f40:	popa   
  412f41:	outs   dx,DWORD PTR ds:[esi]
  412f42:	xor    BYTE PTR [edx-0x69],bh
  412f45:	aam    0x77
  412f47:	pusha  
  412f48:	add    BYTE PTR [eax],cl
  412f4a:	outs   dx,BYTE PTR ds:[esi]
  412f4b:	out    0x65,eax
  412f4d:	rol    eax,0xa
  412f50:	daa    
  412f51:	add    DWORD PTR [edx-0x42],edx
  412f54:	int3   
  412f55:	mov    dl,0xb1
  412f57:	push   ss
  412f58:	dec    eax
  412f59:	push   ss
  412f5a:	mov    bh,0xe7
  412f5c:	call   0xd4bc0d3d
  412f61:	shl    BYTE PTR [edi+0x53cc47ec],0x9d
  412f68:	popf   
  412f69:	push   ss
  412f6a:	push   ebp
  412f6b:	out    0x7a,al
  412f6d:	xchg   esi,eax
  412f6e:	xchg   edi,eax
  412f6f:	mov    edx,0x170777e4
  412f74:	rol    BYTE PTR [edx],cl
  412f76:	push   cs
  412f77:	or     eax,0x7326e7d7
  412f7c:	leave  
  412f7d:	hlt    
  412f7e:	shl    DWORD PTR [ecx],0x13
  412f81:	mov    edi,0xb4c734
  412f86:	dec    ebp
  412f87:	push   ecx
  412f88:	rol    dh,1
  412f8a:	jmp    0x7f4f:0x2b9d450
  412f91:	enter  0xf4d2,0xb2
  412f95:	das    
  412f96:	lods   eax,DWORD PTR ds:[esi]
  412f97:	push   ds
  412f98:	push   edx
  412f99:	xor    al,0x1a
  412f9b:	repz shl DWORD PTR [ebx-0x6],cl
  412f9f:	mov    al,ds:0x4a54b0b1
  412fa4:	cmp    BYTE PTR [ebx+0x2],al
  412fa7:	adc    DWORD PTR [ebx],ecx
  412fa9:	mov    ds:0x2076df28,al
  412fae:	jae    0x412fb5
  412fb0:	fbstp  TBYTE PTR [edx-0x263a39d5]
  412fb6:	and    ch,BYTE PTR [eax+0x72]
  412fb9:	in     al,dx
  412fba:	nop
  412fbb:	test   al,0x17
  412fbd:	dec    edx
  412fbe:	retf   
  412fbf:	push   ebp
  412fc0:	add    BYTE PTR [edx-0x9],0x36
  412fc4:	pop    es
  412fc5:	pushf  
  412fc6:	stos   BYTE PTR es:[edi],al
  412fc7:	cmp    al,dh
  412fc9:	sub    esi,DWORD PTR [edi]
  412fcb:	(bad)  
  412fcc:	std    
  412fcd:	int3   
  412fce:	fsubr  DWORD PTR [edx+edx*2]
  412fd1:	and    al,0x1d
  412fd3:	cmp    bl,bh
  412fd5:	jne    0x412f80
  412fd7:	jb     0x412f89
  412fd9:	rcr    BYTE PTR [edi-0x20],0x95
  412fdd:	dec    edx
  412fde:	icebp  
  412fdf:	sbb    ah,al
  412fe1:	cld    
  412fe2:	ins    BYTE PTR es:[edi],dx
  412fe3:	(bad)  
  412fe4:	push   ds
  412fe5:	pop    esp
  412fe6:	adc    DWORD PTR [edx],edi
  412fe8:	dec    eax
  412fe9:	or     DWORD PTR [edx-0x8c9f5f5],esi
  412fef:	repnz mov ebx,0xcc1cde2f
  412ff5:	fsubp  st(3),st
  412ff7:	add    eax,0x258de95c
  412ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ffd:	into   
  412ffe:	data16 aaa 
  413000:	stos   BYTE PTR es:[edi],al
  413001:	sbb    al,BYTE PTR [esi]
  413003:	cmp    al,al
  413005:	in     eax,dx
  413006:	in     eax,0x90
  413008:	data16 xlat BYTE PTR ds:[ebx]
  41300a:	lock pop ds
  41300c:	retf   
  41300d:	(bad)  
  41300e:	enter  0xbf4b,0x70
  413012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413013:	mov    al,0x2c
  413015:	pop    esp
  413016:	xor    cl,BYTE PTR [ebx]
  413018:	out    0x8d,eax
  41301a:	ret    0x90b7
  41301d:	adc    bh,BYTE PTR [ecx+edx*2+0x5e6a969e]
  413024:	call   0x7c932fbb
  413029:	in     al,dx
  41302a:	pop    ebx
  41302b:	out    0xa0,al
  41302d:	push   cs
  41302e:	ja     0x412fd7
  413030:	shr    BYTE PTR [ebx+0x4c],cl
  413033:	in     eax,0x3f
  413035:	sbb    esi,DWORD PTR [ebx]
  413037:	adc    al,0xab
  413039:	lods   eax,DWORD PTR ds:[esi]
  41303a:	xchg   esp,eax
  41303b:	loopne 0x413045
  41303d:	dec    esp
  41303e:	sti    
  41303f:	pop    ds
  413040:	call   0xf4460112
  413045:	(bad)
  413049:	lds    esi,FWORD PTR [edx-0x9]
  41304c:	cmp    dl,cl
  41304e:	daa    
  41304f:	(bad)  
  413050:	hlt    
  413051:	out    0xb3,eax
  413053:	ret    
  413054:	sub    BYTE PTR [eax+edx*8+0x16],bl
  413058:	imul   DWORD PTR [edx+0x7e]
  41305b:	adc    BYTE PTR [edx],dl
  41305d:	lahf   
  41305e:	in     al,0xfe
  413060:	clc    
  413061:	(bad)  
  413063:	or     ecx,DWORD PTR [edx]
  413065:	fcmovbe st,st(1)
  413067:	frstor [edx-0x86b4d66]
  41306d:	loope  0x413081
  41306f:	pop    ecx
  413070:	adc    al,0xd8
  413072:	mov    ebp,0xf6b53ea6
  413077:	mov    ebx,0xf2cb9b19
  41307c:	out    0x40,eax
  41307e:	(bad)  [esp+edx*1]
  413081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413082:	or     al,0x20
  413084:	popa   
  413085:	jnp    0x4130e1
  413087:	out    0xda,al
  413089:	rol    DWORD PTR [edx+0x76],1
  41308c:	sar    bh,cl
  41308e:	pop    ds
  41308f:	mov    ch,0x5
  413091:	sub    ch,BYTE PTR [esp+ebp*4+0x6cee6c9e]
  413098:	jl     0x4130dc
  41309a:	add    ebx,eax
  41309c:	fisubr DWORD PTR ds:0xd4b5c998
  4130a2:	push   ebx
  4130a3:	pop    edi
  4130a4:	cmp    al,0xf6
  4130a6:	xor    eax,0xcd9f00ae
  4130ab:	cli    
  4130ac:	dec    edi
  4130ad:	mov    bh,0x23
  4130af:	popa   
  4130b0:	stc    
  4130b1:	sbb    al,0xd1
  4130b3:	inc    esp
  4130b4:	push   edi
  4130b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b6:	aas    
  4130b7:	dec    ebx
  4130b8:	cdq    
  4130b9:	jb     0x413111
  4130bb:	sbb    ch,BYTE PTR [ecx-0x7bfcf0cd]
  4130c1:	in     eax,dx
  4130c2:	xchg   esi,eax
  4130c3:	and    bl,BYTE PTR [edx+edi*1-0xd]
  4130c7:	jge    0x413069
  4130c9:	lock push ecx
  4130cb:	lahf   
  4130cc:	(bad)  
  4130cd:	outs   dx,DWORD PTR ds:[esi]
  4130ce:	jp     0x41305e
  4130d0:	add    eax,0x9b1ae98
  4130d5:	push   ebp
  4130d6:	inc    ecx
  4130d7:	es sbb eax,0x4006e585
  4130dd:	and    DWORD PTR [edx],ebx
  4130df:	pop    es
  4130e0:	pop    DWORD PTR [edi]
  4130e2:	es adc eax,0x9003453b
  4130e8:	outs   dx,DWORD PTR ds:[esi]
  4130e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ea:	in     al,0x61
  4130ec:	push   ss
  4130ed:	in     eax,0x4b
  4130ef:	mov    ds:0xd2b84178,eax
  4130f4:	add    BYTE PTR [esi+0x49],ch
  4130f7:	or     BYTE PTR [ebp+0xf],0x1a
  4130fb:	jae    0x4130e8
  4130fd:	(bad)  
  4130fe:	fld    TBYTE PTR [edx]
  413100:	or     eax,0x7b188696
  413105:	arpl   WORD PTR [ebp*4+0x220e0d66],si
  41310c:	out    0x25,eax
  41310e:	jnp    0x41318c
  413110:	fisub  WORD PTR [esp+edi*8+0x7b893a42]
  413117:	xor    BYTE PTR [eax-0x4378e4e0],dh
  41311d:	add    esi,DWORD PTR [edi+0x6d]
  413120:	loop   0x41318b
  413122:	jecxz  0x41313e
  413124:	xchg   esi,eax
  413125:	cwde   
  413126:	pop    ecx
  413127:	adc    BYTE PTR [esp+ebx*2],cl
  41312a:	out    dx,al
  41312b:	push   0x2369dd03
  413130:	push   es
  413131:	mov    edi,0x5de70047
  413136:	outs   dx,DWORD PTR ds:[esi]
  413137:	adc    cl,BYTE PTR [edi]
  413139:	mov    cl,0x4e
  41313b:	(bad)  [esi-0x31]
  41313e:	cmp    al,0x92
  413140:	sub    BYTE PTR [edi],ch
  413142:	mov    DWORD PTR [esi],ecx
  413144:	and    eax,0xb8893fa8
  413149:	mov    BYTE PTR [edx],dh
  41314b:	and    BYTE PTR [bx+di-0x4],dh
  41314f:	cdq    
  413150:	les    eax,FWORD PTR [esi+0x1edee914]
  413156:	pop    ds
  413157:	std    
  413158:	push   eax
  413159:	jecxz  0x413133
  41315b:	jne    0x41315e
  41315d:	mov    al,0xe6
  41315f:	aad    0x8
  413161:	mov    ebx,0xb23cff23
  413166:	out    dx,al
  413167:	mov    bh,BYTE PTR [edx-0x2f]
  41316a:	mov    edi,0x179d57b0
  41316f:	and    al,0x1c
  413171:	mov    al,ds:0x271b3a72
  413176:	xor    dh,BYTE PTR [eax]
  413178:	and    al,0x5b
  41317a:	add    eax,0x92661558
  41317f:	retf   0x5ab7
  413182:	jmp    0x413121
  413184:	inc    eax
  413185:	imul   eax,DWORD PTR [ebx+0x310d748f],0x59
  41318c:	repz pop eax
  41318e:	push   edi
  41318f:	mov    dh,ah
  413191:	loopne 0x413144
  413193:	es ds es (bad) 
  413197:	into   
  413198:	or     DWORD PTR [edi-0x20d7f849],esi
  41319e:	inc    edi
  41319f:	iret   
  4131a0:	stc    
  4131a1:	repnz fwait
  4131a3:	and    bh,bl
  4131a5:	push   ebp
  4131a6:	adc    DWORD PTR [ebx+0x57],esi
  4131a9:	mov    esi,0x4bb62976
  4131ae:	cs push ebx
  4131b0:	ins    DWORD PTR es:[edi],dx
  4131b1:	and    esi,DWORD PTR [ecx-0x23]
  4131b4:	sar    DWORD PTR [ebx-0x26950e3d],cl
  4131ba:	dec    ecx
  4131bb:	cmc    
  4131bc:	ss gs call 0x74f8:0x2c378954
  4131c5:	ins    DWORD PTR es:[edi],dx
  4131c6:	add    DWORD PTR [eax],esi
  4131c8:	push   ebp
  4131c9:	pop    esi
  4131ca:	dec    eax
  4131cb:	adc    BYTE PTR [esi-0x6ecd705d],dl
  4131d1:	ror    BYTE PTR [ecx],0x8d
  4131d4:	or     eax,0x68e71dcd
  4131d9:	mov    bl,0x5e
  4131db:	fiadd  WORD PTR [ecx+0x651c9ada]
  4131e1:	imul   DWORD PTR [edi]
  4131e3:	(bad)  
  4131e4:	or     eax,0xa8c420a9
  4131e9:	aas    
  4131ea:	into   
  4131eb:	out    0xec,al
  4131ed:	mov    ebp,0x2085096d
  4131f2:	(bad)  
  4131f3:	leave  
  4131f4:	add    bl,BYTE PTR [ebp-0x5c2f09a4]
  4131fa:	adc    DWORD PTR [eax],ebp
  4131fc:	aad    0x8b
  4131fe:	mov    dh,0x47
  413200:	dec    edi
  413201:	int    0xf5
  413203:	sub    al,ch
  413205:	into   
  413206:	fs loope 0x413263
  413209:	lods   eax,DWORD PTR ds:[esi]
  41320a:	and    al,0xa9
  41320c:	cmc    
  41320d:	push   edx
  41320e:	or     DWORD PTR [edx+0x7238b282],eax
  413214:	jb     0x413226
  413216:	mov    WORD PTR [edx+0x3fda280e],es
  41321c:	xchg   DWORD PTR ds:0xbac2c173,ecx
  413222:	imul   esp,DWORD PTR [esi-0x39],0x261965bb
  413229:	sbb    BYTE PTR [ebx+edi*2-0x2b],al
  41322d:	xchg   ebp,eax
  41322e:	mov    ebp,0x175abc71
  413233:	(bad)  
  413234:	push   0x4e
  413236:	inc    ebx
  413237:	cmc    
  413238:	aad    0xa1
  41323a:	faddp  st(2),st
  41323c:	pop    ebx
  41323d:	out    0x6c,al
  41323f:	scas   al,BYTE PTR es:[edi]
  413240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413241:	sbb    esi,DWORD PTR [ecx-0x1e196d93]
  413247:	jmp    0x7cb4:0x6fcedf18
  41324e:	popf   
  41324f:	mov    ds:0x78ba33eb,al
  413254:	cmp    DWORD PTR [ebp+0x34e53583],ebp
  41325a:	or     BYTE PTR [ebx+0x55],0x36
  41325e:	mov    ds:0x506865ed,al
  413263:	call   0xe31be28e
  413268:	es test eax,0xaf4b1ad7
  41326e:	dec    edx
  41326f:	mov    al,ds:0x99d6555c
  413274:	and    al,0x66
  413276:	retf   
  413277:	imul   esi,DWORD PTR [edx+0x5f],0x42
  41327b:	and    DWORD PTR [edx+0x30],ebp
  41327e:	data16 loopne 0x413214
  413281:	sub    eax,esp
  413283:	adc    BYTE PTR [eax-0x3c65ef17],cl
  413289:	and    DWORD PTR [edx-0x29],ebp
  41328c:	repnz sub edx,ebx
  41328f:	dec    edi
  413290:	dec    ecx
  413291:	fst    QWORD PTR [esi+0xd]
  413294:	inc    edi
  413295:	call   0x2b4c0a91
  41329a:	inc    ebx
  41329b:	or     BYTE PTR [edi],bl
  41329d:	stos   DWORD PTR es:[edi],eax
  41329e:	mov    ecx,0x27bca84a
  4132a3:	outs   dx,DWORD PTR ds:[esi]
  4132a4:	add    eax,0x3a7c5eba
  4132a9:	and    esp,DWORD PTR [ecx-0x6a]
  4132ac:	add    bh,cl
  4132ae:	imul   ebx,DWORD PTR [eax+0x22],0x5dca3bb6
  4132b5:	sti    
  4132b6:	out    0x32,eax
  4132b8:	gs add esp,eax
  4132bb:	loope  0x413315
  4132bd:	dec    edi
  4132be:	xor    DWORD PTR [ecx-0x2c],ebx
  4132c1:	xor    cl,ah
  4132c3:	pop    esi
  4132c4:	fsub   st(3),st
  4132c6:	aad    0xc3
  4132c8:	push   0x7d64d5a0
  4132cd:	pop    ss
  4132ce:	mov    ebp,0x422abc55
  4132d3:	iret   
  4132d4:	stc    
  4132d5:	fsub   QWORD PTR [eax+edx*1]
  4132d8:	fisubr DWORD PTR [ecx+0xf]
  4132db:	rcl    edi,cl
  4132dd:	retf   
  4132de:	sbb    eax,DWORD PTR ds:0x6e850069
  4132e4:	mov    edx,0xff4abe69
  4132e9:	xor    al,0x46
  4132eb:	adc    cl,BYTE PTR [edx-0x3d]
  4132ee:	mov    bl,0xda
  4132f0:	adc    esi,ecx
  4132f2:	outs   dx,DWORD PTR ds:[esi]
  4132f3:	pushf  
  4132f4:	rcl    DWORD PTR [ebp+0x4a],1
  4132f7:	push   eax
  4132f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f9:	lahf   
  4132fa:	call   0xe0a614a6
  4132ff:	clc    
  413300:	rcr    BYTE PTR [edx+0x2d675e3f],0x1c
  413307:	cmp    DWORD PTR [ecx],ebx
  413309:	js     0x41330b
  41330b:	dec    ebx
  41330c:	push   ss
  41330d:	imul   eax,DWORD PTR [esi+0x565eb647],0x890fa119
  413317:	aaa    
  413318:	in     al,0xbb
  41331a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41331b:	sub    eax,0x3dbf5c5c
  413320:	call   0xb97c:0x94ebc9b4
  413327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413328:	adc    esi,DWORD PTR [esi+0x73]
  41332b:	fisubr DWORD PTR [eax+0x6fdaeceb]
  413331:	aad    0xa4
  413333:	jo     0x41335c
  413335:	sub    esi,DWORD PTR [esi+0x70]
  413338:	xor    BYTE PTR [ebx],al
  41333a:	cmp    eax,0x85d96efe
  41333f:	cmp    eax,0xbbae07d5
  413344:	cmp    dl,ch
  413346:	mov    ds:0x7ba1278f,eax
  41334b:	lods   eax,DWORD PTR ds:[esi]
  41334c:	mov    eax,0xb7e48716
  413351:	sbb    BYTE PTR [edx],ah
  413353:	mov    ebx,0xa11486a2
  413358:	arpl   WORD PTR [esi],si
  41335a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41335b:	inc    ecx
  41335c:	or     eax,0x4c99547f
  413361:	push   esi
  413362:	dec    esi
  413363:	or     al,BYTE PTR [eax]
  413365:	add    edx,DWORD PTR [ecx-0x1c]
  413368:	and    dl,bh
  41336a:	xchg   ecx,eax
  41336b:	sub    al,0xbf
  41336d:	mov    ecx,DWORD PTR [eax]
  41336f:	pop    edx
  413370:	adc    eax,DWORD PTR [edi+eax*1-0x3b4780bb]
  413377:	mov    eax,0x692f9778
  41337c:	jo     0x4133ae
  41337e:	loop   0x41336b
  413380:	outs   dx,BYTE PTR ds:[esi]
  413381:	addr16 mov dx,0xde35
  413386:	popf   
  413387:	jmp    0x413396
  413389:	mov    ds:0x1a17461f,al
  41338e:	xchg   edi,eax
  41338f:	sub    al,0x2e
  413391:	imul   esi,DWORD PTR [edi],0xffffffde
  413394:	in     eax,0xae
  413396:	xchg   esi,eax
  413397:	mov    ebx,ecx
  413399:	add    DWORD PTR [edi+0x221560fb],0xffffffb3
  4133a0:	lds    esi,FWORD PTR [ebp-0x46]
  4133a3:	into   
  4133a4:	cmp    eax,0x6df1ef1f
  4133a9:	cli    
  4133aa:	dec    edx
  4133ab:	fild   WORD PTR [ebp-0x4f]
  4133ae:	mov    ebp,0xcb3e1100
  4133b3:	call   0x99d8a8ea
  4133b8:	and    al,BYTE PTR ds:0x14296357
  4133be:	repnz mov eax,ds:0x7acbd6eb
  4133c4:	enter  0xdef3,0xc3
  4133c8:	cmp    esp,edi
  4133ca:	push   edx
  4133cb:	fsub   QWORD PTR [ebx]
  4133cd:	and    DWORD PTR [esi],ebx
  4133cf:	sub    ebp,ebx
  4133d1:	dec    eax
  4133d2:	push   ss
  4133d3:	cmp    edi,DWORD PTR ds:[eax]
  4133d6:	(bad)  
  4133d7:	lea    edx,[esi+0x4408e0cc]
  4133dd:	out    0x13,al
  4133df:	mov    bl,0x38
  4133e1:	mov    ch,0x6e
  4133e3:	js     0x413449
  4133e5:	fwait
  4133e6:	cmp    edi,DWORD PTR [edx-0x73df60c6]
  4133ec:	or     eax,DWORD PTR [edx]
  4133ee:	jnp    0x4133ca
  4133f0:	mov    eax,0xa193a79b
  4133f5:	pop    eax
  4133f6:	adc    ebx,DWORD PTR [ebx+esi*4]
  4133f9:	lahf   
  4133fa:	fisttp WORD PTR [eax-0x2e]
  4133fd:	mov    edx,0x86399adc
  413402:	(bad)  
  413403:	push   cs
  413404:	xchg   BYTE PTR [esp+esi*8-0xc],al
  413408:	or     al,0x3b
  41340a:	int    0x77
  41340c:	fdivr  DWORD PTR [edx]
  41340e:	or     al,BYTE PTR [esp+ebp*2]
  413411:	cmp    ecx,DWORD PTR [esi]
  413413:	pop    ebx
  413415:	add    DWORD PTR [ecx],ecx
  413417:	xchg   esp,eax
  413418:	mov    ah,BYTE PTR [edx+ebx*4+0x35]
  41341c:	mov    edx,fs
  41341e:	adc    BYTE PTR [edi-0x55],ch
  413421:	mov    ebx,gs
  413423:	ret    0x44b6
  413426:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413428:	addr16 mov dh,0x39
  41342b:	ss mov dl,0x70
  41342e:	fsave  [eax+0x32]
  413432:	arpl   si,cx
  413434:	inc    esp
  413435:	scas   eax,DWORD PTR es:[edi]
  413436:	test   eax,0x9ab00bfa
  41343c:	mov    ah,0x45
  41343e:	int    0xac
  413440:	(bad)  
  413441:	mov    di,WORD PTR [ebx]
  413444:	add    bl,BYTE PTR [ebx+0x4]
  413447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413448:	lods   al,BYTE PTR ds:[esi]
  413449:	out    dx,eax
  41344a:	ret    0x27ce
  41344d:	outs   dx,BYTE PTR ds:[esi]
  41344e:	and    dh,BYTE PTR [esi-0x63]
  413451:	jmp    0x750c:0xe4d4a544
  413458:	dec    ebx
  413459:	jge    0x4133fe
  41345b:	and    dl,al
  41345d:	clc    
  41345e:	je     0x413494
  413460:	loopne 0x41344c
  413462:	iret   
  413463:	push   eax
  413464:	lods   al,BYTE PTR ds:[esi]
  413465:	inc    edi
  413466:	cli    
  413467:	mov    gs,WORD PTR [ebp+ebx*2+0x1c]
  41346b:	sbb    ecx,DWORD PTR [ebx+0x61]
  41346e:	in     eax,0xcc
  413470:	je     0x4134de
  413472:	cmp    bl,BYTE PTR [edi+0x1c]
  413475:	fdivr  QWORD PTR [ebx+0x3aa1a12f]
  41347b:	inc    ebp
  41347c:	pop    esp
  41347d:	cli    
  41347e:	cmp    edi,DWORD PTR [ebx+0x79]
  413481:	bound  esp,QWORD PTR [ebx]
  413483:	push   ds
  413484:	imul   edi,DWORD PTR [ebx-0x786683e7],0xffffff8a
  41348b:	scas   al,BYTE PTR es:[edi]
  41348c:	mov    ecx,0x890e8e62
  413491:	or     bh,cl
  413493:	xor    al,0x25
  413495:	cli    
  413496:	loopne 0x4134fe
  413498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413499:	mov    ch,0xde
  41349b:	jmp    0xf9b5:0x212240ea
  4134a2:	addr16 mov edx,0xa3e9c903
  4134a8:	test   DWORD PTR [edx-0x22fa645d],ecx
  4134ae:	std    
  4134af:	mov    bl,0xa5
  4134b1:	sub    BYTE PTR [ebp+0x40],bl
  4134b4:	dec    ebx
  4134b5:	dec    ebx
  4134b6:	mov    edi,0xc623452c
  4134bb:	aad    0x1a
  4134bd:	cmp    BYTE PTR [edx],dh
  4134bf:	loopne 0x413466
  4134c1:	leave  
  4134c2:	pop    ebx
  4134c3:	out    dx,eax
  4134c4:	loope  0x41352a
  4134c6:	cmp    BYTE PTR [ecx+0x481c5d4b],ch
  4134cc:	jmp    0x413477
  4134ce:	push   ebx
  4134cf:	pop    ebx
  4134d0:	jl     0x4134e2
  4134d2:	xor    bl,BYTE PTR [ebp+0x3e]
  4134d5:	cmc    
  4134d6:	sub    edx,DWORD PTR [edx]
  4134d8:	jp     0x4134f1
  4134da:	cli    
  4134db:	(bad)
  4134df:	jno    0x4134b8
  4134e1:	fldcw  WORD PTR [esi+0x738c8f0c]
  4134e7:	leave  
  4134e8:	pop    edx
  4134e9:	inc    edx
  4134ea:	dec    ecx
  4134eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ec:	(bad)  
  4134ed:	jg     0x413523
  4134ef:	lods   eax,DWORD PTR ds:[esi]
  4134f0:	(bad)  
  4134f1:	in     al,0xc
  4134f3:	mov    DWORD PTR [ecx+esi*4],eax
  4134f6:	cwde   
  4134f7:	and    dh,al
  4134f9:	into   
  4134fa:	or     BYTE PTR [edi-0x641a1965],ah
  413500:	std    
  413501:	repnz and ecx,DWORD PTR [edx+ebx*4]
  413505:	sbb    al,0x1
  413507:	jg     0x4134f9
  413509:	mov    fs,WORD PTR [eax]
  41350b:	fcmovnu st,st(4)
  41350d:	cdq    
  41350e:	mov    al,BYTE PTR [edx+ebp*2]
  413511:	and    eax,0x147aba3b
  413516:	xchg   ebp,eax
  413517:	push   edi
  413518:	pop    esi
  413519:	mov    ds:0x23ef3be,eax
  41351e:	xor    ecx,edi
  413520:	out    dx,al
  413521:	dec    ebx
  413522:	mov    esi,DWORD PTR [edi]
  413524:	call   0x5013e628
  413529:	mov    dl,0xae
  41352b:	outs   dx,DWORD PTR ds:[esi]
  41352c:	pop    eax
  41352d:	js     0x413588
  41352f:	xor    ch,ah
  413531:	gs popf 
  413533:	or     eax,0xe3ab129
  413538:	sbb    bl,BYTE PTR [ebx-0x5a]
  41353b:	out    dx,eax
  41353c:	sub    edx,DWORD PTR [eax+0x2c8402e8]
  413542:	hlt    
  413543:	xor    BYTE PTR [edi+ebx*4+0x68],0x5f
  413548:	sti    
  413549:	add    ecx,ebx
  41354b:	ret    
  41354c:	or     al,BYTE PTR [edi+esi*8]
  41354f:	xchg   esp,eax
  413550:	sub    ebp,edi
  413552:	out    0x51,eax
  413554:	mov    al,BYTE PTR [edx-0x45b3742b]
  41355a:	test   DWORD PTR [eax+0x5b49fa52],0x630fba12
  413564:	and    ch,BYTE PTR [eax+0x4d]
  413567:	mov    esp,0x993993b9
  41356c:	pop    esp
  41356d:	mov    eax,ds:0x36af86db
  413572:	push   ecx
  413573:	daa    
  413574:	scas   al,BYTE PTR es:[edi]
  413575:	sbb    BYTE PTR ds:0xc2e7e79e,dl
  41357b:	or     ebx,DWORD PTR [edi-0x7aa5599b]
  413581:	pop    ds
  413582:	jb     0x4135cf
  413584:	out    dx,eax
  413585:	mov    ebp,0x29611313
  41358a:	cmp    al,0x4f
  41358c:	call   0x1b89af47
  413591:	cmp    ebx,0x457a0c29
  413597:	iret   
  413598:	xchg   edi,eax
  413599:	ror    DWORD PTR [ebx-0x7cc8bff3],0x1d
  4135a0:	mov    eax,0xec0ad8b9
  4135a5:	cmp    ah,BYTE PTR [edi-0x7e]
  4135a8:	xchg   BYTE PTR [edi],dl
  4135aa:	jnp    0x41361f
  4135ac:	loop   0x4135e4
  4135ae:	dec    edi
  4135af:	sub    al,0x79
  4135b1:	mov    esi,0xe92571bb
  4135b6:	sbb    DWORD PTR [ebp+0x24],esi
  4135b9:	test   al,0xc5
  4135bb:	aam    0x15
  4135bd:	add    DWORD PTR [esi+esi*8+0x7a],0x6b
  4135c2:	add    eax,0x5a61c655
  4135c7:	int    0x4f
  4135c9:	push   ss
  4135ca:	ja     0x4135fe
  4135cc:	add    al,0x9f
  4135ce:	push   eax
  4135cf:	jecxz  0x41355d
  4135d1:	sub    al,0x21
  4135d3:	xor    DWORD PTR [ebp+0x42],esp
  4135d6:	fimul  WORD PTR [edx]
  4135d8:	sbb    eax,0x838806c4
  4135dd:	ins    DWORD PTR es:[edi],dx
  4135de:	pop    ecx
  4135df:	adc    eax,0x3b98cb2e
  4135e4:	jns    0x4135cc
  4135e6:	in     eax,0x46
  4135e8:	(bad)  
  4135ea:	jmp    0xccd4514a
  4135ef:	add    ebx,eax
  4135f1:	mov    esp,0x154712ed
  4135f6:	pushf  
  4135f7:	push   0xffffffbb
  4135f9:	adc    eax,0x30a819cb
  4135fe:	fdivp  st(4),st
  413600:	push   ecx
  413601:	jo     0x41359c
  413603:	nop
  413604:	add    DWORD PTR [ebx+0x7e8beb63],esi
  41360a:	add    dh,dh
  41360c:	scas   eax,DWORD PTR es:[edi]
  41360d:	sbb    bh,0x93
  413610:	or     al,BYTE PTR [ecx+0x7a859e5b]
  413616:	arpl   WORD PTR [esi],dx
  413618:	fnstcw WORD PTR [eax+0x79]
  41361b:	dec    ebx
  41361c:	inc    ebp
  41361d:	or     ebx,ecx
  41361f:	jne    0x41368b
  413621:	cli    
  413622:	les    esp,FWORD PTR [ecx]
  413624:	xchg   ebx,eax
  413625:	test   eax,0xdfef77ac
  41362a:	fstp   TBYTE PTR [edi]
  41362c:	rcl    DWORD PTR [edi],1
  41362e:	mov    ah,BYTE PTR [edx]
  413630:	mov    esp,0xd6ba5659
  413635:	clc    
  413636:	out    0x40,al
  413638:	lahf   
  413639:	or     eax,0x81314847
  41363e:	mov    WORD PTR [edx+0x4a],cs
  413641:	push   ecx
  413642:	cmp    al,0xde
  413644:	inc    esp
  413645:	in     al,0x60
  413647:	fwait
  413648:	and    al,0xbc
  41364a:	cmp    ebx,edx
  41364c:	add    al,0xbd
  41364e:	sub    DWORD PTR [edx+esi*1],esp
  413651:	out    0x83,eax
  413653:	jg     0x413648
  413655:	mov    ch,0xaa
  413657:	push   es
  413658:	and    DWORD PTR ds:0xe2a88815,ebp
  41365e:	add    edx,edi
  413660:	xor    cl,BYTE PTR [esi-0x7821f8ac]
  413666:	loopne 0x41366f
  413668:	xor    DWORD PTR [edx],esp
  41366a:	iret   
  41366b:	ja     0x41368a
  41366d:	xor    al,0x7d
  41366f:	cld    
  413670:	repz pop es
  413672:	popf   
  413673:	adc    al,0x0
  413675:	pop    ss
  413676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413677:	jl     0x41364c
  413679:	das    
  41367a:	xor    eax,edx
  41367c:	aad    0x2c
  41367e:	mov    al,ds:0xcceca646
  413683:	mov    edx,0x38e5fc5
  413688:	retf   0x4a38
  41368b:	loope  0x41361f
  41368d:	jle    0x413673
  41368f:	sub    eax,0x60d2bc98
  413694:	call   0xcebc9b45
  413699:	stc    
  41369a:	out    0xd9,al
  41369c:	or     edx,DWORD PTR [ecx+esi*1]
  41369f:	out    dx,al
  4136a0:	out    0x33,eax
  4136a2:	add    al,0xa9
  4136a4:	push   ebx
  4136a5:	lahf   
  4136a6:	jmp    0x520d:0xa582
  4136ac:	xchg   edx,eax
  4136ad:	packssdw mm0,QWORD PTR [eax]
  4136b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b1:	adc    bl,dl
  4136b3:	outs   dx,DWORD PTR ds:[esi]
  4136b4:	push   ds
  4136b5:	push   ss
  4136b6:	lods   al,BYTE PTR ds:[esi]
  4136b7:	mov    eax,DWORD PTR [edi+0x6da058b8]
  4136bd:	test   DWORD PTR [ecx*4+0xcfc74c4],edx
  4136c4:	xchg   edx,eax
  4136c5:	push   ss
  4136c6:	mov    DWORD PTR [ecx],esi
  4136c8:	cmp    edi,edx
  4136ca:	mov    esp,0xacde8759
  4136cf:	fidivr DWORD PTR ds:0x17797fba
  4136d5:	jnp    0x4136d6
  4136d7:	pop    ss
  4136d8:	fcomp  QWORD PTR [ebp-0x25]
  4136db:	in     al,dx
  4136dc:	cwde   
  4136dd:	and    DWORD PTR [ebx-0x36],0xffffffe6
  4136e1:	xchg   DWORD PTR [esi-0x60],ebx
  4136e4:	scas   eax,DWORD PTR es:[edi]
  4136e5:	mov    BYTE PTR [ebx+0x7530698],0x74
  4136ec:	xlat   BYTE PTR ds:[ebx]
  4136ed:	fdivr  QWORD PTR [ecx]
  4136ef:	jl     0x413732
  4136f1:	jp     0x4136f4
  4136f3:	mov    esp,0x23877d5e
  4136f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136f9:	sbb    eax,0xffa5f8d7
  4136fe:	scas   al,BYTE PTR es:[edi]
  4136ff:	adc    esp,DWORD PTR [ecx]
  413701:	retf   0xc2ef
  413704:	aam    0xcc
  413706:	dec    eax
  413707:	aam    0xbc
  413709:	pop    ecx
  41370b:	shl    DWORD PTR [ebp-0x4cda49b0],1
  413711:	xor    eax,DWORD PTR [edx+eax*4]
  413714:	sbb    BYTE PTR [edi+edx*1-0x22],ah
  413718:	or     eax,DWORD PTR [esi+0xb]
  41371b:	jo     0x413796
  41371d:	or     ch,BYTE PTR [ebp-0x6a7f0b46]
  413723:	or     BYTE PTR [esi+0x58],bh
  413726:	inc    edi
  413727:	iret   
  413728:	jle    0x413743
  41372a:	adc    ecx,DWORD PTR ds:0xf13de1ec
  413730:	xchg   esp,eax
  413731:	bound  esi,QWORD PTR [edi+ecx*4+0x24]
  413735:	lea    esp,[edx]
  413737:	dec    esi
  413738:	add    eax,0x4b1bcdb
  41373d:	out    dx,eax
  41373e:	or     DWORD PTR ds:0x6d5afec6,ecx
  413744:	sub    DWORD PTR [ebx],edx
  413746:	fcmovb st,st(3)
  413748:	ins    BYTE PTR es:[edi],dx
  413749:	push   eax
  41374a:	repnz sbb al,0x26
  41374d:	push   esp
  41374e:	pusha  
  41374f:	aam    0xff
  413751:	and    esi,DWORD PTR [edx]
  413753:	xlat   BYTE PTR ds:[ebx]
  413754:	xor    edi,DWORD PTR [esi]
  413756:	popa   
  413757:	retf   
  413758:	test   eax,0x7c8ce316
  41375d:	jae    0x413717
  41375f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413760:	jle    0x41377b
  413762:	pavgw  mm6,QWORD PTR [esp+ecx*8-0x13]
  413767:	ins    BYTE PTR es:[edi],dx
  413768:	in     eax,dx
  413769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41376a:	add    al,dl
  41376c:	jae    0x4136ff
  41376e:	sar    BYTE PTR [eax-0x72d14608],0x9b
  413775:	ret    
  413776:	cmp    al,0x41
  413778:	add    bl,BYTE PTR [esi]
  41377a:	repz xor BYTE PTR [edi+esi*8-0x68f2b360],0xc1
  413783:	mov    bh,0x34
  413785:	mov    esi,0x421686b9
  41378a:	push   esi
  41378b:	mov    ch,0x4e
  41378d:	les    eax,FWORD PTR [eax+0x7b]
  413790:	cmp    esi,ebx
  413792:	test   eax,0x8c0bad95
  413797:	mov    eax,0x6117ba7c
  41379c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41379d:	shl    esi,1
  41379f:	cmp    al,0x30
  4137a1:	ficomp WORD PTR ds:0xaa52d5d5
  4137a7:	mov    ebp,0x2940b964
  4137ac:	mov    bh,0xa1
  4137ae:	int3   
  4137af:	jae    0x413742
  4137b1:	jne    0x41374b
  4137b3:	popf   
  4137b4:	adc    ebp,esp
  4137b6:	xor    bl,dl
  4137b8:	ror    BYTE PTR [esi+0xe97b0b6],0x73
  4137bf:	je     0x4137dc
  4137c1:	or     edx,DWORD PTR [ebx]
  4137c3:	leave  
  4137c4:	lds    edx,FWORD PTR [eax+0x7]
  4137c7:	in     al,0x3d
  4137c9:	pop    ss
  4137ca:	and    ch,0x6e
  4137cd:	inc    esp
  4137ce:	cmp    al,0xcb
  4137d0:	jle    0x413846
  4137d2:	pop    esi
  4137d3:	and    eax,0xd3186541
  4137d8:	xor    eax,0x37a56410
  4137dd:	ret    0x859e
  4137e0:	adc    bl,BYTE PTR [esi]
  4137e2:	stc    
  4137e3:	ror    DWORD PTR [ecx-0x62],1
  4137e6:	adc    eax,0xd4f9597e
  4137eb:	jl     0x4137e6
  4137ed:	outs   dx,BYTE PTR ds:[esi]
  4137ee:	ret    0x71dd
  4137f1:	xor    esi,esp
  4137f3:	jmp    0x769b:0x7ecd91aa
  4137fa:	scas   eax,DWORD PTR es:[edi]
  4137fb:	stos   DWORD PTR es:[edi],eax
  4137fc:	sbb    eax,0x51764686
  413801:	dec    ebp
  413802:	arpl   bp,di
  413804:	or     edx,DWORD PTR [edi]
  413806:	loopne 0x413859
  413808:	dec    ecx
  413809:	imul   DWORD PTR [esi+edi*1]
  41380c:	clc    
  41380d:	dec    esp
  41380e:	fwait
  41380f:	jle    0x41385f
  413811:	jo     0x413837
  413813:	in     eax,dx
  413814:	sbb    ch,BYTE PTR [ebx+edx*4+0x45]
  413818:	daa    
  413819:	push   ss
  41381a:	xchg   ecx,eax
  41381b:	enter  0x519a,0x94
  41381f:	adc    al,0xf0
  413821:	pop    esi
  413822:	inc    ebp
  413823:	xor    al,0x9f
  413825:	cmp    bh,bl
  413827:	push   esp
  413828:	or     bh,dh
  41382a:	push   esi
  41382b:	add    DWORD PTR [edi-0x359af1d],ebp
  413831:	outs   dx,BYTE PTR ds:[esi]
  413832:	setge  BYTE PTR [ebp+0x13]
  413836:	cs xor al,0x6a
  413839:	call   0xf8c8b1e
  41383e:	lds    ebp,FWORD PTR [ebx+0x5f3943c6]
  413844:	and    BYTE PTR [edi-0x39f82e8e],al
  41384a:	fistp  WORD PTR [ebp+0x7d]
  41384d:	jb     0x413895
  41384f:	pop    esp
  413850:	dec    ecx
  413851:	pop    ebx
  413852:	jmp    0x634:0x2528e7b9
  413859:	mov    dh,0x24
  41385b:	lods   eax,DWORD PTR ds:[esi]
  41385c:	js     0x413865
  41385e:	(bad)  
  41385f:	mov    esi,?
  413861:	outs   dx,BYTE PTR ds:[esi]
  413862:	cmp    dh,bh
  413864:	xor    BYTE PTR [edx-0x17],dh
  413867:	adc    ah,0xa
  41386a:	sar    dh,cl
  41386c:	sahf   
  41386d:	sbb    eax,0x401ea480
  413872:	popf   
  413873:	pop    ecx
  413874:	mov    edx,0xb56e5684
  413879:	sar    BYTE PTR [esi-0x65],0x1b
  41387d:	dec    esi
  41387e:	fisttp QWORD PTR [edi+eax*1-0x6b8fc4bb]
  413885:	cmp    DWORD PTR [edx-0x246f8e00],0xfffffff6
  41388c:	rol    DWORD PTR [ebx+edx*2],1
  41388f:	sahf   
  413890:	outs   dx,DWORD PTR ss:[esi]
  413892:	fnstsw ax
  413894:	or     eax,0xd9dfaf93
  413899:	call   0x473a5171
  41389e:	sbb    DWORD PTR [edx],esi
  4138a0:	cld    
  4138a1:	mov    ch,0xfb
  4138a3:	into   
  4138a4:	iret   
  4138a5:	and    BYTE PTR ds:0x4296af14,0x14
  4138ac:	cld    
  4138ad:	icebp  
  4138ae:	adc    eax,0xbbe75918
  4138b3:	imul   ebp,DWORD PTR [ebx-0x70],0x172ab118
  4138ba:	sub    edx,DWORD PTR [eax+0x44]
  4138bd:	dec    ecx
  4138be:	jge    0x41386a
  4138c0:	push   0xd2b27891
  4138c5:	retf   
  4138c6:	ins    DWORD PTR es:[edi],dx
  4138c7:	mul    DWORD PTR [edx]
  4138c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ca:	sar    BYTE PTR [ebp-0x12986846],0x1d
  4138d1:	mov    ebx,DWORD PTR [ebx-0x2f]
  4138d4:	jns    0x413902
  4138d6:	gs ret 
  4138d8:	mov    edx,fs
  4138da:	ss in  al,dx
  4138dc:	ret    0x9ec8
  4138df:	mov    esp,0xf0aa4227
  4138e4:	shl    DWORD PTR [edx+esi*8],0xc9
  4138e8:	adc    ecx,DWORD PTR [ecx+0x6aeeb482]
  4138ee:	jp     0x413936
  4138f0:	sahf   
  4138f1:	popa   
  4138f2:	mov    ebx,0x43424ce0
  4138f7:	in     al,dx
  4138f8:	scas   eax,DWORD PTR es:[edi]
  4138f9:	mov    al,0x3c
  4138fb:	(bad)  
  4138fd:	mov    ebx,DWORD PTR [eax-0x7fdd06a2]
  413903:	mov    cl,0xa2
  413905:	sbb    eax,0xbe7e1458
  41390a:	mov    ds:0x2cc3bf6e,eax
  41390f:	cdq    
  413910:	push   ebx
  413911:	in     eax,0x24
  413913:	push   eax
  413914:	jbe    0x413907
  413916:	popa   
  413917:	cdq    
  413918:	mov    al,ds:0x9919c990
  41391d:	pop    edi
  41391e:	retf   
  41391f:	stos   BYTE PTR es:[edi],al
  413920:	arpl   WORD PTR [esi-0x32],bp
  413923:	jecxz  0x413922
  413925:	aas    
  413926:	loope  0x41397c
  413928:	fadd   DWORD PTR [edx+0x2a]
  41392b:	gs push ecx
  41392d:	and    esp,DWORD PTR [ecx+0x40]
  413930:	dec    BYTE PTR [ebx]
  413932:	cmp    ch,ah
  413934:	and    edi,DWORD PTR [ebx+esi*4+0x5c3bc4a1]
  41393b:	into   
  41393c:	aad    0x97
  41393e:	inc    ebx
  41393f:	(bad)  [esi]
  413941:	mov    BYTE PTR [edi+0x127020ee],dh
  413947:	call   0xdb1ec79b
  41394c:	loope  0x413903
  41394e:	dec    ebx
  41394f:	dec    ebp
  413950:	mov    edx,0x8a81c9a2
  413955:	jae    0x413914
  413957:	sar    DWORD PTR [edi+0x49],0xa7
  41395b:	xchg   DWORD PTR [esi],ebp
  41395d:	mov    ebx,0xd4b19895
  413962:	xor    DWORD PTR [ecx+0x3724e75a],esi
  413968:	adc    edx,DWORD PTR [edi-0x7b43bd68]
  41396e:	repz pop ds
  413970:	popa   
  413971:	inc    ebx
  413972:	dec    esi
  413973:	add    ebp,DWORD PTR [ecx+0x1e66b788]
  413979:	sbb    dh,BYTE PTR [ebx+0x1a57cb50]
  41397f:	add    al,0x70
  413981:	mov    eax,ds:0xa4f2406f
  413986:	and    ebx,DWORD PTR [ebp-0x21]
  413989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398a:	loope  0x41396e
  41398c:	jae    0x413961
  41398e:	inc    edx
  41398f:	imul   esi,DWORD PTR [edx+0x5d1f95ed],0xffffffcd
  413996:	(bad)  [eax+0x48]
  413999:	add    DWORD PTR [ebx-0x3ff1ad50],ecx
  41399f:	mov    ds:0x48070d98,al
  4139a4:	xor    eax,0x25029f84
  4139a9:	mov    ss,WORD PTR [ecx+0x5ec53ce9]
  4139af:	add    eax,0x55bc4051
  4139b4:	scas   al,BYTE PTR es:[edi]
  4139b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b6:	mov    dl,0xfe
  4139b8:	mov    BYTE PTR [ebp+ebx*4-0xd6a36d7],ch
  4139bf:	jno    0x41398a
  4139c1:	fwait
  4139c2:	leave  
  4139c3:	jns    0x413a05
  4139c5:	mov    dh,0x4
  4139c7:	or     BYTE PTR [ebx-0x75],0x4c
  4139cb:	or     BYTE PTR [ebx+0x24],ch
  4139ce:	cli    
  4139cf:	iret   
  4139d0:	adc    DWORD PTR [ecx],ebx
  4139d2:	icebp  
  4139d3:	in     eax,0x60
  4139d5:	mov    edi,0x474d2ecb
  4139da:	rcr    DWORD PTR [ebp+0x16],0xeb
  4139de:	cmovg  ecx,DWORD PTR [eax+0x4da2372c]
  4139e5:	xchg   DWORD PTR [edi+ebp*8-0x1d44ce7a],ebx
  4139ec:	pop    esi
  4139ed:	xchg   edi,eax
  4139ee:	test   al,0xdc
  4139f0:	mov    ah,0x22
  4139f2:	(bad)  
  4139f3:	xor    ebx,DWORD PTR [ecx+0x66731669]
  4139f9:	sti    
  4139fa:	(bad)  
  4139fb:	mov    esi,0xeebb59eb
  413a00:	test   BYTE PTR [ecx],bl
  413a02:	cmp    BYTE PTR [eax-0x595508f2],bl
  413a08:	popf   
  413a09:	sbb    DWORD PTR [esi-0x76],edx
  413a0c:	(bad)  
  413a0d:	adc    DWORD PTR [esi+edi*2+0x7a0075c2],eax
  413a14:	mov    eax,0x7285b786
  413a19:	mov    dh,0x77
  413a1b:	xchg   esp,eax
  413a1c:	mov    edi,0xbe16f37a
  413a21:	mov    ecx,0xa86328c1
  413a26:	or     BYTE PTR [edi+0x6ebec4f],ch
  413a2c:	xor    BYTE PTR [ecx],cl
  413a2e:	ins    DWORD PTR es:[edi],dx
  413a2f:	jne    0x413a66
  413a31:	push   ebp
  413a32:	mov    eax,0x495500e6
  413a37:	cmp    esp,DWORD PTR [ebp+0x79]
  413a3a:	call   0x5e8:0x6a17ce93
  413a41:	mov    cl,0x7e
  413a43:	adc    DWORD PTR [esi],ebx
  413a45:	test   BYTE PTR [ebx+0x4d],0xc5
  413a49:	push   ss
  413a4a:	fidivr WORD PTR [edx+0xe1db1b5]
  413a50:	inc    esp
  413a51:	inc    ebx
  413a52:	xchg   edx,eax
  413a53:	clc    
  413a54:	mov    edx,0xec6a5ae
  413a59:	(bad)  
  413a5a:	out    dx,al
  413a5b:	jle    0x413a0d
  413a5d:	mov    cs,WORD PTR es:[edi+0x2fb7a52]
  413a64:	aam    0x5d
  413a66:	jns    0x413a3e
  413a68:	and    ch,dh
  413a6a:	or     edx,DWORD PTR [edx]
  413a6c:	mov    cl,0xfc
  413a6e:	scas   eax,DWORD PTR es:[edi]
  413a6f:	push   es
  413a70:	jg     0x413ab1
  413a72:	mov    eax,0xb75073ce
  413a77:	outs   dx,BYTE PTR ds:[esi]
  413a78:	jp     0x413ac1
  413a7a:	push   es
  413a7b:	fwait
  413a7c:	adc    eax,0x6b6942cc
  413a81:	(bad)  
  413a82:	cmp    esp,DWORD PTR [ebp-0x18e36f64]
  413a88:	add    al,0xc1
  413a8a:	xor    eax,0x371a8623
  413a8f:	fstp   DWORD PTR [ebp-0x48d39d9]
  413a95:	sub    BYTE PTR [edx+0x45],0xc4
  413a99:	lahf   
  413a9a:	imul   ebp,esp,0xffffffce
  413a9d:	pop    edx
  413a9e:	adc    eax,DWORD PTR [eax+0x1e1b30b9]
  413aa4:	js     0x413a91
  413aa6:	imul   ebx,DWORD PTR [ebx+0x3f532589],0xffffff84
  413aad:	mov    esp,0x7afab5da
  413ab2:	mov    ds:0xe5933974,al
  413ab7:	mov    al,ds:0x40d39b6a
  413abc:	fucomi st,st(2)
  413abe:	je     0x413aaa
  413ac0:	sbb    edx,DWORD PTR [ecx-0x109f52f3]
  413ac6:	jg     0x413a67
  413ac8:	xchg   edi,eax
  413ac9:	mov    bl,0x1c
  413acb:	adc    edi,DWORD PTR fs:[edx]
  413ace:	dec    esp
  413acf:	mov    ds:0xdd176e12,al
  413ad4:	add    esp,DWORD PTR [ebp-0x41]
  413ad7:	sahf   
  413ad8:	lods   al,BYTE PTR ds:[esi]
  413ad9:	jnp    0x413a99
  413adb:	in     eax,dx
  413adc:	in     al,0x7f
  413ade:	hlt    
  413adf:	push   ebp
  413ae0:	mov    dl,ah
  413ae2:	dec    eax
  413ae3:	push   esi
  413ae4:	pushf  
  413ae5:	xchg   esp,eax
  413ae6:	outs   dx,DWORD PTR ds:[esi]
  413ae7:	fbld   TBYTE PTR [ebp-0x4fd1510b]
  413aed:	inc    ecx
  413aee:	sbb    eax,0xad09eabe
  413af3:	push   ecx
  413af4:	mov    bl,0x5e
  413af6:	jb     0x413b23
  413af8:	loop   0x413ad0
  413afa:	ins    BYTE PTR es:[edi],dx
  413afb:	and    dh,ch
  413afd:	int    0x43
  413aff:	fucomi st,st(1)
  413b01:	jmp    0xf373706
  413b06:	dec    edi
  413b08:	daa    
  413b09:	ins    DWORD PTR es:[edi],dx
  413b0a:	xor    eax,0x9d12c8a8
  413b0f:	add    al,0x13
  413b11:	rol    BYTE PTR [edx+0x71],1
  413b14:	mov    ebx,0xec65d214
  413b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b1a:	ror    ebp,1
  413b1c:	(bad)  
  413b1d:	fst    DWORD PTR [ebx+edx*4-0x2134f0a9]
  413b24:	mov    ch,0x6
  413b26:	(bad)  [ebp+0x4a7f5b9b]
  413b2c:	push   edi
  413b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b2e:	ret    0xa588
  413b31:	mov    ecx,0x8547d9e
  413b36:	jecxz  0x413ad1
  413b38:	cli    
  413b39:	js     0x413ad9
  413b3b:	pop    ecx
  413b3c:	pop    ss
  413b3d:	cli    
  413b3e:	jecxz  0x413af3
  413b40:	xchg   esp,eax
  413b41:	dec    esp
  413b42:	shl    BYTE PTR [edi-0x13],1
  413b45:	movq   mm2,QWORD PTR ds:[ebx-0x2e]
  413b4a:	and    DWORD PTR [ebx+0x59d7f35a],edi
  413b50:	pop    ecx
  413b51:	fbld   TBYTE PTR [edi+0x680a5b01]
  413b57:	pusha  
  413b58:	sub    esi,DWORD PTR [eax+eax*8]
  413b5b:	mov    dh,0x96
  413b5d:	mov    ebx,0x19edf9d6
  413b62:	aaa    
  413b63:	popf   
  413b64:	jno    0x413ba2
  413b66:	jae    0x413b84
  413b68:	mov    ecx,0xdddd75ce
  413b6d:	cdq    
  413b6e:	jmp    0x413bdd
  413b70:	test   al,0x8e
  413b72:	mov    al,ds:0x445f09e2
  413b77:	mov    ?,WORD PTR [esi]
  413b79:	jp     0x413aff
  413b7b:	ds mov eax,0x974c27b3
  413b81:	loope  0x413bab
  413b83:	mov    bh,BYTE PTR [edi-0x79848491]
  413b89:	lods   al,BYTE PTR ds:[esi]
  413b8a:	push   esp
  413b8b:	add    ebp,DWORD PTR [esi+0x3bec4a85]
  413b91:	push   ebp
  413b92:	jge    0x413b8d
  413b94:	js     0x413bbc
  413b96:	adc    dh,BYTE PTR ds:0xed60b1e0
  413b9c:	sub    BYTE PTR [esi],ch
  413b9e:	loop   0x413b37
  413ba0:	icebp  
  413ba1:	inc    esp
  413ba2:	inc    eax
  413ba3:	sub    dh,bl
  413ba5:	fiadd  WORD PTR [edx+eax*4]
  413ba8:	retf   0x7582
  413bab:	xor    BYTE PTR [eax],dl
  413bad:	push   ss
  413bae:	in     al,0xe9
  413bb0:	inc    ebp
  413bb1:	push   esp
  413bb2:	inc    ebp
  413bb3:	jg     0x413bfa
  413bb5:	cli    
  413bb6:	pop    edx
  413bb7:	dec    eax
  413bb8:	cmp    BYTE PTR [esi-0x38],0x66
  413bbc:	xor    DWORD PTR [edx-0x68],ebx
  413bbf:	addr16 aam 0x84
  413bc2:	retf   
  413bc3:	bound  ebp,QWORD PTR [ecx]
  413bc5:	push   cs
  413bc6:	inc    ebp
  413bc7:	fistp  WORD PTR [ecx]
  413bc9:	push   edx
  413bca:	into   
  413bcb:	aas    
  413bcc:	arpl   bp,ax
  413bce:	aaa    
  413bcf:	cs out 0xec,eax
  413bd2:	xchg   DWORD PTR [eax-0x3cb1cee5],ecx
  413bd8:	call   0x7165:0xf43bf1c2
  413bdf:	mov    dh,0x2e
  413be1:	popa   
  413be2:	lods   al,BYTE PTR ds:[esi]
  413be3:	sub    eax,0x4ddaa98a
  413be8:	sbb    BYTE PTR [edx],ch
  413bea:	pop    esi
  413beb:	std    
  413bec:	call   0x7927:0x81d11481
  413bf3:	iret   
  413bf4:	(bad)
  413bf7:	jo     0x413b7f
  413bf9:	ror    BYTE PTR [ecx-0x6ff94c03],cl
  413bff:	(bad)  
  413c01:	add    bh,ah
  413c03:	sar    BYTE PTR [ecx-0x2c4d34b2],cl
  413c09:	adc    eax,0x46538adb
  413c0e:	(bad)  
  413c0f:	in     eax,0xad
  413c11:	int3   
  413c12:	jne    0x413c51
  413c14:	ss push esi
  413c16:	inc    edx
  413c17:	in     al,0x69
  413c19:	sar    DWORD PTR [ecx],1
  413c1b:	scas   al,BYTE PTR es:[edi]
  413c1c:	xchg   edx,eax
  413c1d:	call   FWORD PTR [edi+0x65]
  413c20:	adc    edx,DWORD PTR [ebx+0x158a3ec1]
  413c26:	add    eax,DWORD PTR [eax+0x1a]
  413c29:	sbb    eax,0x94d29aba
  413c2e:	push   ecx
  413c2f:	or     ebx,DWORD PTR [eax+0x5fc9a0e]
  413c35:	dec    ebx
  413c36:	pusha  
  413c37:	mov    ds:0xe35c48f8,eax
  413c3c:	dec    edi
  413c3d:	test   eax,0x67a1783c
  413c42:	addr16 sub al,0x14
  413c45:	inc    ebx
  413c46:	iret   
  413c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c48:	into   
  413c49:	out    dx,eax
  413c4a:	cli    
  413c4b:	popf   
  413c4c:	repnz push edi
  413c4e:	mov    ch,0x7
  413c50:	cmp    eax,0x6ebc21cb
  413c55:	jbe    0x413c32
  413c57:	cs sub al,0x65
  413c5a:	push   ss
  413c5b:	pop    esi
  413c5c:	or     esi,esi
  413c5e:	retf   
  413c5f:	inc    ebp
  413c60:	int    0x5e
  413c62:	clc    
  413c63:	inc    edi
  413c64:	sahf   
  413c65:	fldl2e 
  413c67:	push   ecx
  413c68:	in     al,0xe3
  413c6a:	dec    esi
  413c6b:	cld    
  413c6c:	test   dl,ch
  413c6e:	retf   0xa5d9
  413c71:	xor    al,0x76
  413c73:	cs jo  0x413c29
  413c76:	cmp    BYTE PTR [edx+0x2d638714],dl
  413c7c:	sub    esi,DWORD PTR ds:0x95e41350
  413c82:	mov    ds:0x2097ebf1,al
  413c87:	int    0xcb
  413c89:	add    DWORD PTR [ecx-0x49cfc6f9],esp
  413c8f:	rol    BYTE PTR [ecx],1
  413c91:	arpl   WORD PTR [ecx+0x3d],ax
  413c94:	inc    ebp
  413c95:	push   0x73fa21e3
  413c9a:	add    BYTE PTR [eax],0xde
  413c9d:	dec    esi
  413c9e:	push   ds
  413c9f:	pop    esi
  413ca0:	adc    al,0xf2
  413ca2:	shr    ch,0xde
  413ca5:	fs out 0xb6,al
  413ca8:	lods   al,BYTE PTR ds:[esi]
  413ca9:	xchg   ebx,eax
  413caa:	xor    BYTE PTR [eax-0x1b335e7d],bh
  413cb0:	gs mul bl
  413cb3:	sub    ebx,edx
  413cb5:	sahf   
  413cb6:	test   ebp,esi
  413cb8:	jp     0x413c51
  413cba:	repnz pushf 
  413cbc:	push   eax
  413cbd:	ffree  st(3)
  413cbf:	and    bh,dh
  413cc1:	cmp    edi,DWORD PTR [ecx]
  413cc3:	(bad)  
  413cc4:	fiadd  WORD PTR [edi-0x25]
  413cc7:	pop    es
  413cc8:	adc    DWORD PTR [ecx],ecx
  413cca:	jmp    0x89a8:0x1d6a6a44
  413cd1:	jl     0x413c59
  413cd3:	hlt    
  413cd4:	ins    DWORD PTR es:[edi],dx
  413cd5:	sbb    bl,bl
  413cd7:	mov    al,0x14
  413cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cda:	leave  
  413cdb:	sti    
  413cdc:	push   ebx
  413cdd:	stos   DWORD PTR es:[edi],eax
  413cde:	dec    edx
  413cdf:	retf   
  413ce0:	int3   
  413ce1:	xor    esi,DWORD PTR [edi+0x6084e6a]
  413ce7:	ja     0x413ccc
  413ce9:	lds    edi,FWORD PTR [edi]
  413ceb:	lock push ecx
  413ced:	dec    eax
  413cee:	test   al,0x9a
  413cf0:	push   eax
  413cf1:	loopne 0x413cdb
  413cf3:	add    DWORD PTR [ecx+0x2b6f3c66],esi
  413cf9:	sbb    al,BYTE PTR [eax+0x4e0dcda7]
  413cff:	adc    ebp,esp
  413d01:	loopne 0x413cd3
  413d03:	mov    ds:0xfeeccb44,eax
  413d08:	push   ebx
  413d09:	stc    
  413d0a:	das    
  413d0b:	dec    ecx
  413d0c:	inc    edx
  413d0d:	sub    ch,BYTE PTR [ecx-0xe]
  413d10:	xchg   esi,eax
  413d11:	loop   0x413d77
  413d13:	sub    al,0x80
  413d15:	retf   0x6aa9
  413d18:	sbb    DWORD PTR [edx+0x375d888e],ebx
  413d1e:	data16 jb 0x413d5f
  413d21:	test   eax,0x961aadc9
  413d26:	test   al,0x17
  413d28:	dec    ecx
  413d29:	jo     0x413d04
  413d2b:	add    ecx,DWORD PTR [edx+0x35]
  413d2e:	std    
  413d2f:	loope  0x413d1f
  413d31:	rcl    cl,cl
  413d33:	ret    0x45e7
  413d36:	out    dx,eax
  413d37:	jb     0x413cc7
  413d39:	rcr    BYTE PTR [eax+0x4f540694],cl
  413d3f:	cmp    eax,0x60c0775c
  413d44:	pushf  
  413d45:	and    bh,0xca
  413d48:	rcl    al,0x72
  413d4b:	xor    al,0x94
  413d4d:	icebp  
  413d4e:	cmp    DWORD PTR [ecx],eax
  413d50:	jg     0x413d9a
  413d52:	dec    esi
  413d53:	in     eax,0x2f
  413d55:	mov    ecx,0x9139265f
  413d5a:	cmc    
  413d5b:	test   al,0xc6
  413d5d:	in     eax,dx
  413d5e:	dec    esp
  413d5f:	jg     0x413d15
  413d61:	stc    
  413d62:	dec    ecx
  413d63:	scas   al,BYTE PTR es:[edi]
  413d64:	mov    bh,0x76
  413d66:	inc    eax
  413d67:	imul   ebp,DWORD PTR [edx-0x1e],0x8fa397b
  413d6e:	mov    WORD PTR [edx+0x15d2274f],cs
  413d74:	and    cl,BYTE PTR [ebx-0x67]
  413d77:	adc    edx,edx
  413d79:	ret    0x52b2
  413d7c:	ins    DWORD PTR es:[edi],dx
  413d7d:	fsubr  DWORD PTR [ebp-0x4051a7d3]
  413d83:	or     BYTE PTR [esi+0x63],bl
  413d86:	fldenv [ecx]
  413d88:	mov    bh,0xda
  413d8a:	fwait
  413d8b:	or     edx,eax
  413d8d:	ret    0x3cd2
  413d90:	(bad)  
  413d91:	pop    ds
  413d92:	adc    al,0x12
  413d94:	and    edi,DWORD PTR [ebx-0x13]
  413d97:	cld    
  413d98:	clc    
  413d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d9a:	jmp    0xfe4d56b
  413d9f:	push   es
  413da0:	inc    esi
  413da1:	call   0x473a:0xf0678039
  413da8:	dec    esi
  413da9:	les    edi,FWORD PTR ds:0xcdc23dbc
  413daf:	in     al,0x5b
  413db1:	jbe    0x413e0a
  413db3:	mov    dh,0xe8
  413db5:	add    ecx,eax
  413db7:	xlat   BYTE PTR ds:[ebx]
  413db8:	fnstcw WORD PTR [ebp+0x35]
  413dbb:	pop    edx
  413dbc:	dec    ecx
  413dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dbe:	mov    ds:0xafc8561f,al
  413dc3:	sbb    ch,cl
  413dc5:	mov    eax,0x69259999
  413dca:	xchg   ecx,eax
  413dcb:	loope  0x413e23
  413dcd:	cmp    ah,BYTE PTR [ebp+0x3c]
  413dd0:	loope  0x413e33
  413dd2:	outs   dx,DWORD PTR ds:[esi]
  413dd3:	pop    ebx
  413dd4:	popf   
  413dd5:	adc    eax,0x24e2fe65
  413dda:	in     al,dx
  413ddb:	mov    dl,BYTE PTR [edx+0x468988df]
  413de1:	mov    bl,0xb1
  413de3:	scas   al,BYTE PTR es:[edi]
  413de4:	push   ecx
  413de5:	jecxz  0x413ddf
  413de7:	adc    DWORD PTR [edx-0x28],ecx
  413dea:	imul   esp,DWORD PTR [edi+edi*8-0x1359c63],0x5a
  413df2:	out    dx,al
  413df3:	pop    edx
  413df4:	cmp    dl,cl
  413df6:	test   BYTE PTR [edi],0x36
  413df9:	dec    ecx
  413dfa:	pushf  
  413dfb:	call   0x7ea5:0x94258039
  413e02:	into   
  413e03:	mov    edi,0x5f717445
  413e08:	(bad)  
  413e09:	cmc    
  413e0a:	and    eax,ebp
  413e0c:	fcom   DWORD PTR [ecx-0x5cd32731]
  413e12:	sbb    al,0x6e
  413e14:	dec    ebx
  413e15:	ror    BYTE PTR [edx],1
  413e17:	push   esp
  413e18:	jbe    0x413df3
  413e1a:	and    al,0x5a
  413e1c:	pop    edi
  413e1d:	(bad)  
  413e1e:	mov    dh,0xb1
  413e20:	jne    0x413df5
  413e22:	mov    ecx,0xbd76890b
  413e27:	xchg   esp,eax
  413e28:	adc    BYTE PTR [esi+0x3ce90b5e],dh
  413e2e:	mov    WORD PTR gs:[edi-0x3f9b4873],cs
  413e35:	and    DWORD PTR [ebx-0xc0ad9db],edx
  413e3b:	lock loop 0x413e3c
  413e3e:	and    ch,bl
  413e40:	loopne 0x413e5f
  413e42:	aad    0x8f
  413e44:	ja     0x413e8d
  413e46:	in     al,dx
  413e47:	outs   dx,DWORD PTR ds:[esi]
  413e48:	mov    ebx,0xd53716a9
  413e4d:	dec    ecx
  413e4e:	jne    0x413e61
  413e50:	sub    BYTE PTR [edi],0xe
  413e53:	inc    eax
  413e54:	cli    
  413e55:	maxps  xmm1,XMMWORD PTR [edi]
  413e58:	call   0xd099bee5
  413e5d:	nop
  413e5e:	mov    ch,0x4c
  413e60:	das    
  413e61:	je     0x413e3c
  413e63:	mov    ah,0x2a
  413e65:	lahf   
  413e66:	in     al,dx
  413e67:	test   BYTE PTR [ecx-0x38faebbe],cl
  413e6d:	lods   eax,DWORD PTR ds:[esi]
  413e6e:	jns    0x413e43
  413e70:	test   edx,0x4d73cd15
  413e76:	adc    BYTE PTR [edi+eiz*1],ah
  413e79:	inc    ebp
  413e7a:	cmp    al,0x36
  413e7c:	test   al,0x55
  413e7e:	jns    0x413ed9
  413e80:	mov    ebp,0xd189d016
  413e85:	mov    bl,0x9c
  413e87:	xlat   BYTE PTR ds:[ebx]
  413e88:	test   DWORD PTR [esi-0x3a15dc6f],eax
  413e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e8f:	add    eax,0x38ca57e6
  413e94:	mov    bh,0xbd
  413e96:	dec    ebp
  413e97:	fdivr  QWORD PTR [ebx+0x22]
  413e9a:	neg    esi
  413e9c:	inc    eax
  413e9d:	mov    esp,0x61de6ebd
  413ea2:	mov    ds:0x312e07ab,eax
  413ea7:	data16 xor bh,al
  413eaa:	mov    ebp,0x94367958
  413eaf:	shr    eax,1
  413eb1:	mov    ds:0x3853767,eax
  413eb6:	pop    esi
  413eb7:	mov    ebp,0x7230f7d6
  413ebc:	push   edi
  413ebd:	sbb    eax,0x418d42eb
  413ec2:	add    eax,0xa2b49811
  413ec7:	cmp    ah,ch
  413ec9:	inc    edx
  413eca:	repz push ecx
  413ecc:	jle    0x413e54
  413ece:	pop    ss
  413ecf:	or     BYTE PTR [edi-0x30],0x9e
  413ed3:	add    ebx,ecx
  413ed5:	adc    ebp,edi
  413ed7:	(bad)  
  413ed9:	test   edi,ebp
  413edb:	xchg   ebx,eax
  413edc:	push   0x700b67ad
  413ee1:	adc    BYTE PTR [ebx+0x5b8de9f],bh
  413ee7:	retf   0x92bd
  413eea:	bound  esi,QWORD PTR [esi]
  413eec:	pop    ds
  413eed:	mov    dh,0xb5
  413eef:	adc    edx,DWORD PTR [ecx]
  413ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef2:	sti    
  413ef3:	je     0x413f3b
  413ef5:	popa   
  413ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ef7:	lock mov esp,0x61b0b312
  413efd:	out    0xf8,eax
  413eff:	sub    al,0xbc
  413f01:	shl    BYTE PTR [edx+0x16c81c73],0x8a
  413f08:	push   0x951b7b57
  413f0d:	mov    ebx,0x48dd2e43
  413f12:	out    dx,eax
  413f13:	nop
  413f14:	scas   eax,DWORD PTR es:[edi]
  413f15:	adc    ebp,DWORD PTR [edi+esi*2]
  413f18:	hlt    
  413f19:	mov    eax,0xfb25b86d
  413f1e:	xchg   ebp,eax
  413f1f:	in     al,dx
  413f20:	or     dl,bh
  413f22:	ret    
  413f23:	neg    bl
  413f25:	pop    esp
  413f26:	pop    esp
  413f27:	jo     0x413eee
  413f29:	repz sbb esp,0x59b25dda
  413f30:	mov    bh,ch
  413f32:	mov    al,0xbd
  413f34:	lock fst DWORD PTR [eax-0x8]
  413f38:	add    eax,0xad791124
  413f3d:	(bad)  
  413f3e:	sbb    eax,0x51d2b182
  413f43:	(bad)  
  413f44:	sbb    ebp,DWORD PTR [ebx-0x1bdff9d]
  413f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f4b:	jmp    0xf5cb:0x420dfff2
  413f52:	enter  0x6c90,0x84
  413f56:	or     ah,BYTE PTR [edx+0x43]
  413f59:	mov    dl,0xe7
  413f5b:	cld    
  413f5c:	ror    DWORD PTR [eax-0x3d],cl
  413f5f:	xor    eax,0x929434df
  413f64:	cld    
  413f65:	jbe    0x413f51
  413f67:	jl     0x413fe7
  413f69:	(bad)  
  413f6a:	push   0xffffff92
  413f6c:	popa   
  413f6d:	es loope 0x413efe
  413f70:	sub    cl,BYTE PTR [ecx+edi*8-0x22]
  413f74:	sub    BYTE PTR [eax+eax*4-0x4a],bh
  413f78:	addr16 mov al,ds:0xf473
  413f7c:	push   0x7ee50d76
  413f81:	icebp  
  413f82:	add    eax,DWORD PTR ds:0x7493d88d
  413f88:	and    edi,DWORD PTR [edx]
  413f8a:	dec    ecx
  413f8b:	pop    ds
  413f8c:	xor    DWORD PTR [ebx+0x5b269400],ebp
  413f92:	and    bh,BYTE PTR [edi+0x41]
  413f95:	pop    ebp
  413f96:	stc    
  413f97:	sub    dh,BYTE PTR [bx]
  413f9a:	sub    eax,0xbbca83fa
  413f9f:	into   
  413fa0:	mov    edi,0x957fb95a
  413fa5:	jg     0x413f88
  413fa7:	xor    DWORD PTR [esi],ecx
  413fa9:	sbb    BYTE PTR [eax],ch
  413fab:	pop    esp
  413fac:	in     eax,0x95
  413fae:	xchg   DWORD PTR [edx+0x71ff0b3d],ecx
  413fb4:	ret    
  413fb5:	hlt    
  413fb6:	sbb    ecx,ebx
  413fb8:	push   ecx
  413fb9:	mov    esi,DWORD PTR [edx+0x71566eb1]
  413fbf:	out    dx,eax
  413fc0:	out    0x11,al
  413fc2:	ss jnp 0x413fb6
  413fc5:	xor    bh,BYTE PTR [ebp+0x73dc876a]
  413fcb:	icebp  
  413fcc:	ret    0x9703
  413fcf:	addr16 popa 
  413fd1:	test   BYTE PTR [ecx+0x4e9b26bd],bh
  413fd7:	adc    DWORD PTR [ecx-0x29c0bc30],ecx
  413fdd:	rcr    ebx,cl
  413fdf:	adc    ah,BYTE PTR [ebx-0x767886dd]
  413fe5:	push   eax
  413fe6:	std    
  413fe7:	jg     0x414061
  413fe9:	mov    esp,0xadefc90c
  413fee:	in     al,0xd7
  413ff0:	imul   ebp,DWORD PTR [ebp+0x6f],0xfffffff6
  413ff4:	or     ecx,DWORD PTR [eax+ecx*2+0x5ffc6b80]
  413ffb:	(bad)  
  413ffc:	icebp  
  413ffd:	(bad)  
  413ffe:	sti    
  413fff:	push   eax
  414000:	rcl    eax,0x88
  414003:	xchg   ebp,eax
  414004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414006:	jle    0x413fdd
  414008:	dec    esi
  414009:	data16 add al,0xf6
  41400c:	mov    edx,0xbf0851f8
  414011:	ret    
  414012:	lahf   
  414013:	and    eax,0x401085b7
  414018:	or     edx,ebx
  41401a:	sbb    DWORD PTR gs:[esi],ebp
  41401d:	dec    eax
  41401e:	fnstcw WORD PTR [ebx]
  414020:	push   ds
  414021:	pusha  
  414022:	ins    BYTE PTR es:[edi],dx
  414023:	mov    edx,db7
  414026:	cmc    
  414027:	push   esp
  414028:	push   ss
  414029:	lea    ebp,[eax+0x144277fe]
  41402f:	inc    esp
  414030:	dec    esi
  414031:	cmp    eax,0x1736ec44
  414036:	aas    
  414037:	or     ah,BYTE PTR [edx]
  414039:	mov    eax,0x15c22d5f
  41403e:	xor    BYTE PTR [ebp-0x52],dl
  414041:	or     dl,al
  414043:	fisub  WORD PTR [edx+edi*2-0x42]
  414047:	and    DWORD PTR [ebx],edi
  414049:	mov    BYTE PTR [eax+0x501258a8],al
  41404f:	sbb    al,0xc3
  414051:	jp     0x4140ad
  414053:	xchg   ebx,eax
  414054:	lds    edx,FWORD PTR [ecx-0x40]
  414057:	xor    DWORD PTR [edi-0x60fcba5e],ebp
  41405d:	sub    eax,0x635eafad
  414062:	sti    
  414063:	xor    DWORD PTR ds:0x937d78cd,edx
  414069:	dec    edi
  41406a:	xchg   esi,eax
  41406b:	xor    BYTE PTR [edx-0x3959e3c4],bl
  414071:	icebp  
  414072:	mov    al,0xb6
  414074:	mov    ds:0xc68542ca,eax
  414079:	cmp    eax,0x8869c477
  41407e:	xor    BYTE PTR [edi+0x65c3c06a],bl
  414084:	mov    ah,0xf6
  414086:	pop    esi
  414087:	adc    DWORD PTR [edx-0x9132acc],ecx
  41408d:	fild   WORD PTR [esi-0x1517f409]
  414093:	bnd jmp 0x4140c4
  414096:	pusha  
  414097:	in     al,dx
  414098:	das    
  414099:	push   ebx
  41409a:	hlt    
  41409b:	in     eax,0x61
  41409d:	stc    
  41409e:	sbb    BYTE PTR [edx],cl
  4140a0:	pop    ebx
  4140a1:	adc    dh,BYTE PTR [esi+0x15]
  4140a4:	aad    0xaf
  4140a6:	retf   
  4140a7:	out    0x6e,eax
  4140a9:	or     esi,DWORD PTR [edi+0x6b61b807]
  4140af:	or     esp,DWORD PTR [ebp-0x1a]
  4140b2:	and    BYTE PTR [edx],ch
  4140b4:	shr    DWORD PTR [esi+edx*2],1
  4140b7:	xor    eax,0x130b86d5
  4140bc:	mov    eax,ds:0xeaf96b4f
  4140c1:	push   edi
  4140c2:	mov    edi,0x623191c
  4140c7:	addr16 mov edx,0x672fc004
  4140cd:	add    ecx,DWORD PTR [edx+esi*4+0x0]
  4140d1:	pop    ecx
  4140d2:	outs   dx,BYTE PTR ds:[esi]
  4140d3:	cmp    DWORD PTR [esp+eiz*2-0x79],ecx
  4140d7:	xchg   edi,eax
  4140d8:	xchg   ebx,eax
  4140d9:	jae    0x41413a
  4140db:	ja     0x4140ae
  4140dd:	sbb    esi,edi
  4140df:	dec    eax
  4140e0:	adc    dh,BYTE PTR [ebp+0x51]
  4140e3:	add    edx,DWORD PTR [ebp-0x10]
  4140e6:	jl     0x414100
  4140e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e9:	loopne 0x4140de
  4140eb:	test   DWORD PTR [ebx],0x36a941da
  4140f1:	or     dh,bh
  4140f3:	dec    ecx
  4140f4:	call   0x9875a20b
  4140f9:	outs   dx,DWORD PTR ds:[esi]
  4140fa:	fwait
  4140fb:	outs   dx,BYTE PTR ds:[esi]
  4140fc:	test   edi,0x4935ed70
  414102:	ins    DWORD PTR es:[edi],dx
  414103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414104:	sbb    eax,0x2aaf6af
  414109:	inc    edx
  41410a:	or     al,0x4b
  41410c:	sbb    BYTE PTR [ebx],bl
  41410e:	test   eax,0x46b24e5a
  414113:	ror    DWORD PTR ds:0xd9ec40df,cl
  414119:	mov    edx,edi
  41411b:	enter  0xfa09,0x72
  41411f:	fs mov esp,0x8c245bc4
  414125:	jmp    0x41410c
  414127:	out    dx,eax
  414128:	fwait
  414129:	push   es
  41412a:	in     eax,0x49
  41412c:	sub    esp,ebp
  41412e:	mov    ecx,0x18f9be49
  414133:	stos   DWORD PTR es:[edi],eax
  414134:	inc    ecx
  414135:	in     eax,dx
  414136:	mov    ecx,0x8449dcab
  41413b:	fnstsw WORD PTR [esi-0x746db2bc]
  414141:	shr    BYTE PTR [ebx-0x485bc48e],cl
  414147:	mov    edx,0x1338b04d
  41414c:	dec    ebx
  41414d:	out    dx,eax
  41414e:	sti    
  41414f:	sub    eax,DWORD PTR [eax+0x29]
  414152:	push   ecx
  414153:	js     0x41418e
  414155:	cmp    bh,BYTE PTR [edi]
  414157:	pop    edi
  414158:	sbb    BYTE PTR [esi+0x3a00f27a],dl
  41415e:	rcl    DWORD PTR [edi+0x4c],cl
  414161:	pop    esp
  414162:	cmp    DWORD PTR [ecx],esi
  414164:	imul   edi,esi,0xcf264652
  41416a:	int3   
  41416b:	pop    ss
  41416c:	jne    0x4141b3
  41416e:	popa   
  41416f:	rol    BYTE PTR ds:0xeecb733a,1
  414175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414176:	jno    0x4141a6
  414178:	lods   eax,DWORD PTR ds:[esi]
  414179:	xchg   esi,eax
  41417a:	test   al,0x9d
  41417c:	or     BYTE PTR ds:0x539a4c2,dh
  414182:	jns    0x4141a1
  414184:	sbb    eax,0x98224631
  414189:	in     eax,dx
  41418a:	xor    DWORD PTR [esi+0x75],eax
  41418d:	sahf   
  41418e:	mov    eax,0x4ea931dc
  414193:	add    eax,0x32a02b50
  414198:	imul   ebx,DWORD PTR [esi-0x2c21224a],0x8366d0e6
  4141a2:	mov    ecx,0x78048a39
  4141a7:	xchg   esp,eax
  4141a8:	div    DWORD PTR [ecx+ebp*8+0x72]
  4141ac:	sub    al,0xbd
  4141ae:	or     al,BYTE PTR [esi]
  4141b0:	push   es
  4141b1:	cmp    bl,ch
  4141b3:	xchg   ebx,eax
  4141b4:	clc    
  4141b5:	sub    al,0xb6
  4141b7:	repz div BYTE PTR [edx-0x5d]
  4141bb:	hlt    
  4141bc:	pop    ds
  4141bd:	mov    al,ds:0x4280110f
  4141c2:	or     ecx,DWORD PTR [eax+eax*2+0x5e]
  4141c6:	push   esp
  4141c7:	test   al,0xd6
  4141c9:	shr    BYTE PTR ss:[esi+0x40],0x5d
  4141ce:	push   0x3
  4141d0:	(bad)  
  4141d1:	cmp    al,0x56
  4141d3:	je     0x4141e9
  4141d5:	out    dx,eax
  4141d6:	out    0x5e,eax
  4141d8:	hlt    
  4141d9:	popa   
  4141da:	push   0x9ebf8fac
  4141df:	push   cs
  4141e0:	sub    BYTE PTR [edx+0x49],dl
  4141e3:	xchg   esi,eax
  4141e4:	je     0x41416d
  4141e6:	adc    dl,BYTE PTR [edx+esi*8+0x506bd74e]
  4141ed:	jecxz  0x4141ea
  4141ef:	and    al,BYTE PTR [ebx]
  4141f1:	loop   0x4141ca
  4141f3:	fist   DWORD PTR [ecx]
  4141f5:	mov    al,BYTE PTR [edx-0x24863ba4]
  4141fb:	fucom  st(1)
  4141fd:	pop    eax
  4141fe:	icebp  
  4141ff:	aam    0xce
  414201:	sub    BYTE PTR [ebx+0x11],0x29
  414205:	xor    eax,0x277ad567
  41420a:	in     eax,dx
  41420b:	inc    esp
  41420c:	outs   dx,BYTE PTR ds:[esi]
  41420d:	into   
  41420e:	dec    edx
  41420f:	sub    dh,ch
  414211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414212:	mov    bl,0xe5
  414214:	push   es
  414215:	or     eax,0x38a3ca1e
  41421a:	adc    ch,BYTE PTR [eax-0x55]
  41421d:	inc    ecx
  41421e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41421f:	div    BYTE PTR [ecx+0x71]
  414222:	or     eax,0xf7b2d3b8
  414227:	ror    edi,cl
  414229:	lea    ecx,[ecx]
  41422b:	sub    eax,0x7922eb8e
  414230:	and    ebx,DWORD PTR [esi+ecx*1]
  414233:	adc    cl,BYTE PTR [eax-0x455ccfd8]
  414239:	jbe    0x4141e5
  41423b:	cli    
  41423c:	mov    esi,0x939c04fd
  414241:	rol    BYTE PTR [edx+0x7862a7df],1
  414247:	xchg   ecx,eax
  414248:	cmp    BYTE PTR [edx+0x5f],ch
  41424b:	pop    edi
  41424c:	push   ebp
  41424d:	mov    ch,0x8e
  41424f:	push   ds
  414250:	das    
  414251:	rol    dh,0xf4
  414254:	call   0x65bdccbd
  414259:	jmp    0x414238
  41425b:	lock (bad) 
  41425d:	xchg   ebp,eax
  41425e:	sbb    DWORD PTR [ecx-0x27392b7a],ebx
  414264:	sub    eax,DWORD PTR [esi+0x2b038f5f]
  41426a:	push   es
  41426b:	push   edi
  41426c:	adc    eax,0xb4871911
  414271:	or     DWORD PTR [eax+0x12],0xe74b4295
  414278:	ins    DWORD PTR es:[edi],dx
  414279:	jae    0x4142bd
  41427b:	dec    ebp
  41427c:	mov    edi,0x7cab1d16
  414281:	in     al,dx
  414282:	in     al,dx
  414283:	ss scas al,BYTE PTR es:[edi]
  414285:	jecxz  0x4142b0
  414287:	in     al,dx
  414288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414289:	bound  ebx,QWORD PTR [ebx]
  41428b:	(bad)  
  41428c:	(bad)  
  41428d:	push   ss
  41428e:	xchg   ebx,eax
  41428f:	fimul  WORD PTR [ebx-0x2d]
  414292:	ins    DWORD PTR es:[edi],dx
  414293:	xor    al,0xea
  414295:	jbe    0x414313
  414297:	frstor ds:0x43bf1dfd
  41429d:	cld    
  41429e:	out    dx,al
  41429f:	dec    ebx
  4142a0:	cmc    
  4142a1:	add    BYTE PTR [esi-0x7e8456ff],ch
  4142a7:	and    eax,0x389539fb
  4142ac:	mov    ch,BYTE PTR es:[edi+0x17c8e05f]
  4142b3:	and    DWORD PTR [edx+0x32],ecx
  4142b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b7:	mov    ebp,0x1a587deb
  4142bc:	inc    ebx
  4142bd:	retf   
  4142be:	cld    
  4142bf:	cld    
  4142c0:	outs   dx,BYTE PTR ds:[esi]
  4142c1:	cmp    ebp,DWORD PTR [esi+0x30]
  4142c4:	and    bh,BYTE PTR [ecx+0x45f7264f]
  4142ca:	popf   
  4142cb:	add    dl,BYTE PTR [ecx+0x33]
  4142ce:	xlat   BYTE PTR ds:[ebx]
  4142cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142d0:	mov    ds:0xdbd0db8f,al
  4142d5:	dec    eax
  4142d6:	xchg   ebx,eax
  4142d7:	in     eax,dx
  4142d8:	pop    ds
  4142d9:	scas   al,BYTE PTR es:[edi]
  4142da:	fld    TBYTE PTR [ebx]
  4142dc:	outs   dx,DWORD PTR ds:[esi]
  4142dd:	xchg   DWORD PTR [esi+esi*1+0x52],esp
  4142e1:	add    BYTE PTR [ebx+0x57],cl
  4142e4:	jmp    0xfd60:0xbabf5af0
  4142eb:	aam    0x7f
  4142ed:	int3   
  4142ee:	into   
  4142ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f0:	inc    edi
  4142f1:	retf   
  4142f2:	add    BYTE PTR [ecx],ah
  4142f4:	ror    bl,1
  4142f6:	lahf   
  4142f7:	inc    eax
  4142f8:	or     esp,DWORD PTR [edi]
  4142fa:	cmp    DWORD PTR [edx],esi
  4142fc:	mov    bl,0xa5
  4142fe:	jg     0x4142dd
  414300:	add    BYTE PTR [ecx+ebp*8+0x33],0x29
  414305:	sar    DWORD PTR [ebp-0x2ba8e8cf],cl
  41430b:	std    
  41430c:	add    BYTE PTR [edx-0x34619064],0xb1
  414313:	imul   esi,DWORD PTR [esi+0x24],0xffffffaf
  414317:	adc    BYTE PTR [eax],dh
  414319:	jge    0x414317
  41431b:	and    ecx,ebx
  41431d:	sub    DWORD PTR [eax+0x56f3aa59],esp
  414323:	out    0xb2,eax
  414325:	int3   
  414326:	ins    BYTE PTR es:[edi],dx
  414327:	test   BYTE PTR [edx],0x7d
  41432a:	ret    0xe681
  41432d:	and    eax,0x24d1d559
  414332:	cmp    DWORD PTR [ebp-0x50],ebp
  414335:	push   esi
  414336:	xor    bl,BYTE PTR [eax-0x6d2434e5]
  41433c:	and    al,0x66
  41433e:	ins    DWORD PTR es:[edi],dx
  41433f:	sbb    ah,BYTE PTR [ebx]
  414341:	bound  esi,QWORD PTR [ecx-0x3e]
  414344:	cmp    al,0x8f
  414346:	loopne 0x4143b7
  414348:	pop    ds
  414349:	mov    dh,BYTE PTR cs:[esi+0x40]
  41434d:	xor    DWORD PTR [ebx+edi*1+0x505722db],0xd09908e8
  414358:	push   edi
  414359:	fisttp DWORD PTR [edi+0x78]
  41435c:	hlt    
  41435d:	cmp    al,bh
  41435f:	mov    BYTE PTR ds:0x8335ce42,dl
  414365:	out    dx,eax
  414366:	dec    esi
  414367:	and    ah,0x5a
  41436a:	movnti DWORD PTR ds:0x6f330d15,edi
  414371:	jo     0x4143a7
  414373:	aas    
  414374:	add    ebx,0x850e5e39
  41437a:	and    al,0xb3
  41437c:	push   edx
  41437d:	sahf   
  41437e:	rcl    BYTE PTR [ebp-0x7e90552a],0x5e
  414385:	pop    edx
  414386:	test   BYTE PTR [eax+0x47],al
  414389:	sbb    edx,DWORD PTR [ecx+ebp*2]
  41438c:	icebp  
  41438d:	sub    ecx,ebx
  41438f:	(bad)  
  414390:	xchg   edx,eax
  414391:	popf   
  414392:	jmp    0x414345
  414394:	cwde   
  414395:	es into 
  414397:	test   BYTE PTR [ebx],cl
  414399:	inc    ecx
  41439b:	dec    edi
  41439c:	inc    ecx
  41439d:	mov    ah,0xd0
  41439f:	push   es
  4143a0:	fcomp  QWORD PTR [edi+eiz*8-0x13d2f33b]
  4143a7:	mov    BYTE PTR [ebx],dl
  4143a9:	push   ebp
  4143aa:	and    esp,eax
  4143ac:	jecxz  0x414399
  4143ae:	sub    DWORD PTR [ebp+0x36],edi
  4143b1:	js     0x414366
  4143b3:	xor    al,cl
  4143b5:	loop   0x4143fb
  4143b7:	lea    ebp,[ecx-0x685cee94]
  4143bd:	daa    
  4143be:	sbb    eax,0xa0a34991
  4143c3:	mov    ebx,0xc03cdf2a
  4143c8:	mov    ebx,0xe8cad1b7
  4143cd:	push   eax
  4143ce:	mov    edi,0x7a696186
  4143d3:	int    0x6c
  4143d5:	lea    edi,[edi-0xf288ec9]
  4143db:	push   0x48a0cff9
  4143e0:	and    eax,0xbb92c0ac
  4143e5:	mov    ds:0x91585381,al
  4143ea:	add    ecx,esi
  4143ec:	xor    DWORD PTR [edi+0x360446b3],edx
  4143f2:	mov    eax,ds:0xfa8adc26
  4143f7:	ins    BYTE PTR es:[edi],dx
  4143f8:	hlt    
  4143f9:	daa    
  4143fa:	fdivr  st,st(1)
  4143fc:	sbb    al,0x26
  4143fe:	jle    0x41440f
  414400:	aam    0x39
  414402:	push   0x94c946bd
  414407:	pop    eax
  414408:	cs xchg edi,eax
  41440a:	and    esp,DWORD PTR [ecx+0x323e3cf8]
  414410:	aas    
  414411:	jmp    0x41447a
  414413:	add    ecx,DWORD PTR [edi]
  414415:	push   eax
  414416:	dec    ecx
  414417:	sar    BYTE PTR [edi+ecx*2-0x57],cl
  41441b:	sub    BYTE PTR [ebp-0x35dd3eec],al
  414421:	xor    edx,ebx
  414423:	bound  ebx,QWORD PTR [eax+ebp*1-0xd]
  414427:	ds aas 
  414429:	inc    eax
  41442a:	add    bh,BYTE PTR [edi+0x6e3eb1ed]
  414430:	sub    BYTE PTR [ecx],al
  414432:	inc    eax
  414433:	jne    0x414406
  414435:	cmp    DWORD PTR [eax-0x4643f346],ebp
  41443b:	mov    dh,BYTE PTR es:[ebx]
  41443e:	lods   eax,DWORD PTR ds:[esi]
  41443f:	aas    
  414440:	lds    esi,FWORD PTR [ebx]
  414442:	inc    edx
  414443:	fcom   st(5)
  414445:	mov    WORD PTR [ebx+0xd],?
  414448:	test   cl,dh
  41444a:	cmp    edx,eax
  41444c:	in     eax,dx
  41444d:	dec    edx
  41444e:	dec    edi
  41444f:	push   0x663291c0
  414454:	xchg   ecx,eax
  414455:	(bad)
  414459:	jo     0x41449e
  41445b:	push   es
  41445c:	mov    ecx,0x56fd3c62
  414461:	push   ss
  414462:	xchg   esp,eax
  414463:	popf   
  414464:	loop   0x414436
  414466:	jno    0x41446b
  414468:	add    dh,BYTE PTR [ebp+0x78]
  41446b:	jge    0x4143f1
  41446d:	test   BYTE PTR [esp+eiz*2-0x47],0x35
  414472:	nop
  414473:	fcmovbe st,st(5)
  414475:	xor    BYTE PTR [ecx-0x13068a2f],bl
  41447b:	fsubr  QWORD PTR [edx+0x51]
  41447e:	repz fnsave [ecx+0x27f03de7]
  414485:	outs   dx,DWORD PTR ds:[esi]
  414486:	mov    bh,0x3
  414488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414489:	lods   al,BYTE PTR ds:[esi]
  41448a:	fcmove st,st(2)
  41448c:	push   0x5b7f9145
  414491:	ds ja  0x414470
  414494:	and    ch,BYTE PTR [ebp+0x626be86a]
  41449a:	fistp  WORD PTR [ecx+eiz*4+0xf68faf6]
  4144a1:	mov    ch,0xa1
  4144a3:	addr16 sub ebp,ebx
  4144a6:	je     0x4144ac
  4144a8:	out    dx,al
  4144a9:	sbb    al,0x83
  4144ab:	bnd jb 0x4144a0
  4144ae:	retf   0x6316
  4144b1:	test   al,0x10
  4144b3:	adc    al,ch
  4144b5:	neg    edi
  4144b7:	xor    eax,0xc5fbdb5a
  4144bc:	call   0x48eb:0x96f39b45
  4144c3:	adc    DWORD PTR [eax+0x7d],ebx
  4144c6:	shl    DWORD PTR [edx],cl
  4144c8:	mov    esi,DWORD PTR [eax+0x6c]
  4144cb:	pop    ss
  4144cc:	sahf   
  4144cd:	retf   0xc34
  4144d0:	pop    ecx
  4144d1:	jae    0x4144a0
  4144d3:	repz xchg ebp,eax
  4144d5:	adc    DWORD PTR [edx+0xf],ebp
  4144d8:	test   DWORD PTR [ebx],edx
  4144da:	xchg   BYTE PTR [ecx-0x44],dh
  4144dd:	(bad)  
  4144de:	push   ebx
  4144df:	dec    edi
  4144e0:	jge    0x4144ba
  4144e2:	and    BYTE PTR ds:0x1af659d8,al
  4144e8:	mov    edx,0xc8253bae
  4144ed:	mov    WORD PTR [ecx],fs
  4144ef:	popa   
  4144f0:	int3   
  4144f1:	ror    BYTE PTR [eax-0x90a8cb0],0x39
  4144f8:	dec    esi
  4144f9:	popf   
  4144fa:	in     eax,dx
  4144fb:	sar    BYTE PTR [edx-0x2d],1
  4144fe:	int3   
  4144ff:	js     0x41455e
  414501:	ret    
  414502:	inc    eax
  414503:	call   0x3efa:0xf6fc75ea
  41450a:	and    DWORD PTR [ebx-0x2ec5189d],ecx
  414510:	push   0x4d93ae92
  414515:	mov    eax,ds:0xca5b2dd9
  41451a:	rcl    DWORD PTR [bx-0x1b],cl
  41451e:	pop    ebp
  41451f:	and    BYTE PTR [esi-0x300d4c2a],bh
  414525:	mov    bl,0xf0
  414527:	fwait
  414528:	test   esp,ebp
  41452a:	pop    ebp
  41452b:	ret    0x9a31
  41452e:	adc    DWORD PTR [edi],ebp
  414530:	in     al,0x41
  414532:	sub    al,0x71
  414534:	loopne 0x414557
  414536:	xor    esi,0x0
  414539:	(bad)  
  41453a:	aam    0x78
  41453c:	pop    ecx
  41453d:	cli    
  41453e:	xchg   esi,eax
  41453f:	nop
  414540:	sbb    eax,0x40d30a6f
  414545:	push   ds
  414546:	mov    ch,0xf0
  414548:	call   0x13a9d6d9
  41454d:	lods   al,BYTE PTR ds:[esi]
  41454e:	lea    ecx,[esi+ecx*2-0x47d9b263]
  414555:	int3   
  414556:	jl     0x5939da92
  41455c:	cdq    
  41455d:	cmp    ebx,0x3a6fab2
  414563:	push   0xc5e9ca81
  414568:	ror    DWORD PTR [esi-0x3f],1
  41456b:	sbb    cl,BYTE PTR [edi-0x5d]
  41456e:	imul   ebp
  414570:	loop   0x41453e
  414572:	and    ebx,DWORD PTR [ebx-0x7554cb46]
  414578:	jb     0x414563
  41457a:	retf   0x7db0
  41457d:	push   eax
  41457e:	pop    es
  41457f:	je     0x414545
  414581:	jmp    0x414525
  414583:	dec    edx
  414584:	lods   al,BYTE PTR ds:[esi]
  414585:	jmp    0x3880:0xf51a2bff
  41458c:	(bad)  
  41458d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458e:	pop    ss
  41458f:	(bad)  
  414590:	push   0xffffff8c
  414592:	mov    bl,0x5b
  414594:	in     eax,dx
  414595:	call   0xce5fc226
  41459a:	mov    esp,DWORD PTR [ebx+ebx*1-0x44]
  41459e:	or     ebp,0xdd7a0e4b
  4145a4:	adc    BYTE PTR [ecx-0x1136f799],cl
  4145aa:	in     al,dx
  4145ab:	in     eax,dx
  4145ac:	ins    DWORD PTR es:[edi],dx
  4145ad:	and    di,WORD PTR [eax-0x69]
  4145b1:	lahf   
  4145b2:	aad    0x7a
  4145b4:	out    0xad,al
  4145b6:	mov    al,ds:0x9ace04e3
  4145bb:	cli    
  4145bc:	ja     0x4145c3
  4145be:	int3   
  4145bf:	push   cs
  4145c0:	pop    ebp
  4145c1:	repnz push edx
  4145c3:	push   esi
  4145c4:	pusha  
  4145c5:	mov    ds:0x8bfd4527,eax
  4145ca:	mov    ds:0xce8546cb,al
  4145cf:	sbb    dl,BYTE PTR [esi]
  4145d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d3:	aas    
  4145d4:	out    0x6b,eax
  4145d6:	test   eax,0xeb08b9ae
  4145db:	inc    ebp
  4145dc:	jl     0x41464a
  4145de:	and    eax,0x3ed121fc
  4145e3:	jge    0x41464c
  4145e5:	in     al,dx
  4145e6:	dec    ebx
  4145e7:	inc    eax
  4145e8:	pop    ss
  4145e9:	aad    0xfe
  4145eb:	cmp    eax,0x1a5364eb
  4145f0:	push   es
  4145f1:	or     BYTE PTR [ebx-0x3def830f],cl
  4145f7:	pop    ecx
  4145f8:	aas    
  4145f9:	xor    ebp,ebp
  4145fb:	out    dx,al
  4145fc:	dec    eax
  4145fd:	pop    ss
  4145fe:	dec    ebp
  4145ff:	xchg   ebp,eax
  414600:	jo     0x414613
  414602:	push   es
  414603:	cld    
  414604:	mov    cl,0x1f
  414606:	sub    DWORD PTR [edx],esp
  414608:	enter  0xd593,0x40
  41460c:	jb     0x414593
  41460e:	sub    cl,BYTE PTR [eax]
  414610:	add    BYTE PTR [ebx],bh
  414612:	(bad)  
  414613:	in     eax,dx
  414614:	jns    0x4145b3
  414616:	add    DWORD PTR [ebx+0x6e1721b],edx
  41461c:	test   DWORD PTR [ebx+0x6dd824d6],edx
  414622:	ror    edx,1
  414624:	xchg   ebp,eax
  414625:	mov    DWORD PTR [eax-0x36],esi
  414628:	fild   WORD PTR [edx-0x1c58c99f]
  41462e:	out    dx,eax
  41462f:	mov    ebp,0x1614d984
  414634:	pop    ecx
  414635:	inc    esi
  414636:	outs   dx,DWORD PTR ds:[esi]
  414637:	push   esp
  414638:	xchg   cl,dh
  41463a:	inc    edi
  41463b:	lgs    ebp,FWORD PTR [edx-0x48]
  41463f:	or     ch,bh
  414641:	ja     0x414651
  414643:	cs retf 0xf8e2
  414647:	jmp    0xbdf69179
  41464c:	addr16 push cs
  41464e:	sbb    BYTE PTR [ecx+0x4ae52b96],ch
  414654:	int3   
  414655:	loop   0x41467a
  414657:	push   edx
  414658:	fs dec eax
  41465a:	cli    
  41465b:	fst    QWORD PTR [edx]
  41465d:	addr16 pop ecx
  41465f:	sub    eax,0xb5cb2f70
  414664:	cmp    al,0xe7
  414666:	xchg   edi,eax
  414667:	fstp   QWORD PTR [eax+0x32]
  41466a:	jl     0x414627
  41466c:	jb     0x4146a2
  41466e:	xchg   esi,eax
  41466f:	in     eax,0xe2
  414671:	js     0x414622
  414673:	pop    edx
  414674:	clc    
  414675:	jno    0x4146e6
  414677:	bnd jae 0x414675
  41467a:	loope  0x414678
  41467c:	std    
  41467d:	shl    DWORD PTR [esi+edi*4+0x63],cl
  414681:	out    dx,eax
  414682:	je     0x4146ac
  414684:	push   es
  414685:	adc    esp,DWORD PTR ds:0x1845c354
  41468b:	xchg   edi,eax
  41468c:	adc    esi,esp
  41468e:	dec    ecx
  41468f:	or     DWORD PTR [edi],ecx
  414691:	sbb    al,0xfb
  414693:	push   0xb4a94e7c
  414698:	mov    bh,0x17
  41469a:	stc    
  41469b:	xor    edx,DWORD PTR [ecx]
  41469d:	out    0x17,eax
  41469f:	xchg   edx,eax
  4146a0:	pushf  
  4146a1:	pop    ebp
  4146a2:	dec    edi
  4146a3:	or     DWORD PTR [ecx],0x295241f2
  4146a9:	xchg   edx,eax
  4146aa:	scas   eax,DWORD PTR es:[edi]
  4146ab:	add    cl,0x5f
  4146ae:	xchg   DWORD PTR [ebp-0x34133717],edi
  4146b4:	out    dx,eax
  4146b5:	mov    esi,0x827abd5a
  4146ba:	mov    ah,bh
  4146bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146bd:	out    dx,al
  4146be:	pop    edx
  4146bf:	out    0x41,eax
  4146c1:	xchg   edx,eax
  4146c2:	out    dx,al
  4146c3:	popf   
  4146c4:	rcl    DWORD PTR ds:0x7075f90,0x16
  4146cb:	pop    edx
  4146cc:	mov    DWORD PTR [edi-0x2b],ecx
  4146cf:	mov    edx,0x26ab8714
  4146d4:	inc    ebp
  4146d5:	fmulp  st(4),st
  4146d7:	outs   dx,DWORD PTR ds:[esi]
  4146d8:	cdq    
  4146d9:	test   al,0x8
  4146db:	xor    edi,DWORD PTR [ebx+0x72]
  4146de:	sub    BYTE PTR [edi],al
  4146e0:	or     eax,edi
  4146e2:	adc    al,0x24
  4146e4:	mov    cl,0xc1
  4146e6:	popf   
  4146e7:	pop    ebp
  4146e8:	and    DWORD PTR ds:0xd4459fb,ebp
  4146ee:	xlat   BYTE PTR ds:[ebx]
  4146ef:	cmp    eax,0xebea1413
  4146f4:	mov    eax,ds:0x1cfcd8f6
  4146f9:	mov    dl,BYTE PTR [ebp-0x639cf23a]
  4146ff:	leave  
  414700:	push   esp
  414701:	fimul  DWORD PTR [edx+0x61]
  414704:	call   0x8812:0xa76063cb
  41470b:	and    BYTE PTR [eax+0x209ca83d],ah
  414711:	add    BYTE PTR [ebx-0x2d5f75cf],dh
  414717:	jae    0x414747
  414719:	dec    eax
  41471a:	and    BYTE PTR [edi-0x4e],bl
  41471d:	cmp    ebx,DWORD PTR [ebx]
  41471f:	std    
  414720:	(bad)  
  414721:	push   esi
  414722:	pusha  
  414723:	mov    bh,0xe7
  414725:	cmp    DWORD PTR [edx+0x1d],edx
  414728:	pop    ds
  414729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41472a:	sbb    BYTE PTR [esi+0x7b9b20ce],0x44
  414731:	pop    ecx
  414732:	stos   BYTE PTR es:[edi],al
  414733:	push   esi
  414734:	add    al,0x83
  414736:	jge    0x4146cb
  414738:	mov    dh,0xbf
  41473a:	pop    es
  41473b:	mov    bl,0x9e
  41473d:	aas    
  41473e:	(bad)  
  41473f:	xchg   esi,eax
  414740:	or     esi,ebx
  414742:	mov    bl,0x34
  414744:	push   es
  414745:	xchg   edx,eax
  414746:	sub    BYTE PTR [esi],ch
  414748:	add    esi,DWORD PTR [ebx-0x2559cf8b]
  41474e:	sti    
  41474f:	ret    0xfdce
  414752:	mov    edi,cs
  414754:	and    eax,0xd7ced7bc
  414759:	push   edx
  41475a:	inc    edx
  41475b:	push   ebx
  41475c:	ror    cl,cl
  41475e:	in     eax,dx
  41475f:	xor    BYTE PTR [esp+edi*4+0x54],dh
  414763:	mov    ebx,0x958d5102
  414768:	mov    ds:0xc2eb6f3e,al
  41476d:	mov    edx,0xf885ccee
  414772:	sbb    DWORD PTR [esi-0x19c038d],0xffffffae
  414779:	ins    DWORD PTR es:[edi],dx
  41477a:	sub    al,0x28
  41477c:	mov    dh,0x3c
  41477e:	outs   dx,BYTE PTR ds:[esi]
  41477f:	mov    ecx,0x32258c53
  414784:	ins    BYTE PTR es:[edi],dx
  414785:	in     eax,dx
  414786:	int3   
  414787:	and    al,0xc0
  414789:	push   esp
  41478a:	iret   
  41478b:	jb     0x414803
  41478d:	cli    
  41478e:	add    DWORD PTR [edi],0xffffffeb
  414791:	pop    ebp
  414792:	fld    QWORD PTR [esi]
  414794:	test   BYTE PTR [edi],0x61
  414797:	push   ebp
  414798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414799:	add    ch,BYTE PTR [edx+ebp*2-0x6c]
  41479d:	cdq    
  41479e:	in     eax,0x59
  4147a0:	rcr    BYTE PTR [edi+0x172bb2af],1
  4147a6:	dec    ecx
  4147a7:	aad    0x6b
  4147a9:	and    esp,DWORD PTR [ecx]
  4147ab:	jmp    0x811b:0xdf391a65
  4147b2:	or     BYTE PTR [edx+0x523ff317],bh
  4147b8:	repnz sub al,bh
  4147bb:	mov    ?,WORD PTR [ecx]
  4147bd:	dec    edx
  4147be:	sar    ah,0x7d
  4147c1:	test   al,0xfc
  4147c3:	sahf   
  4147c4:	ret    0x27a4
  4147c7:	adc    edx,DWORD PTR [ecx]
  4147c9:	(bad)  
  4147cb:	(bad)  
  4147ce:	and    ebx,DWORD PTR [ebp+eax*4-0x36]
  4147d2:	add    al,0x4b
  4147d4:	xchg   DWORD PTR [edi+0x4f],edx
  4147d7:	mov    edx,0x6cdebc3f
  4147dc:	mov    ds:0x35fc9fab,al
  4147e1:	fcmovnb st,st(2)
  4147e3:	jle    0x414842
  4147e5:	dec    esp
  4147e6:	xchg   esp,eax
  4147e7:	dec    edi
  4147e8:	repnz pop edx
  4147ea:	push   ss
  4147eb:	inc    esp
  4147ec:	add    BYTE PTR [edi],ch
  4147ee:	inc    edi
  4147ef:	loopne 0x41481a
  4147f1:	in     al,0x89
  4147f3:	dec    edi
  4147f4:	mov    WORD PTR [edx+0x75],?
  4147f7:	ins    BYTE PTR es:[edi],dx
  4147f8:	push   es
  4147f9:	jmp    0xb4a:0x44f70ca
  414800:	pop    esi
  414801:	ret    0x896c
  414804:	mov    esi,0x40e64403
  414809:	push   ecx
  41480a:	xor    esp,DWORD PTR [ebp+0x1d958520]
  414810:	xchg   esi,eax
  414811:	mov    ch,0xd0
  414813:	out    0x60,al
  414815:	cmp    eax,DWORD PTR [ebp-0x66]
  414818:	mov    ch,0xd1
  41481a:	pop    es
  41481b:	jge    0x41485b
  41481d:	and    DWORD PTR [ecx],ebp
  41481f:	fidiv  DWORD PTR [ecx+0x10f4999a]
  414825:	pushf  
  414826:	push   0x9e451fa7
  41482b:	and    edi,ebx
  41482d:	dec    ebp
  41482e:	in     eax,dx
  41482f:	in     al,dx
  414830:	cmp    ch,BYTE PTR ds:0x2fc81c8c
  414836:	jno    0x414883
  414838:	fisub  DWORD PTR ss:[ecx+0x3adbfe2a]
  41483f:	and    DWORD PTR ds:0xe1744066,eax
  414845:	xor    bh,ah
  414847:	or     BYTE PTR [edi],bh
  414849:	js     0x4147cb
  41484b:	fidivr DWORD PTR [ebp+0x57]
  41484e:	xchg   esp,eax
  41484f:	push   0xfffffff7
  414851:	mov    ebx,DWORD PTR [edi]
  414853:	leave  
  414854:	xchg   BYTE PTR [eax],bl
  414856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414857:	dec    ebp
  414858:	mov    ch,0xce
  41485a:	inc    ebp
  41485b:	or     ch,BYTE PTR [edi+edx*2-0x2d]
  41485f:	retf   0xabd9
  414862:	jl     0x41485e
  414864:	daa    
  414865:	dec    edi
  414866:	ror    eax,0x1f
  414869:	mov    dh,0xa5
  41486b:	outs   dx,BYTE PTR ds:[esi]
  41486c:	outs   dx,DWORD PTR ds:[esi]
  41486d:	inc    ebp
  41486e:	add    al,0x57
  414870:	les    edi,FWORD PTR [esi-0x5c]
  414873:	sub    ecx,DWORD PTR [ebx-0x5e]
  414876:	and    eax,0x24634360
  41487b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41487c:	add    edx,esp
  41487e:	mov    esp,0x10ba8f0f
  414883:	fs sub al,0xc2
  414886:	test   BYTE PTR [edx+0x57],dl
  414889:	daa    
  41488a:	icebp  
  41488b:	mov    ah,0x6c
  41488d:	jp     0x4148bd
  41488f:	sahf   
  414890:	and    BYTE PTR [edi],ah
  414892:	jb     0x414882
  414894:	fdivr  QWORD PTR [ebp-0x5c]
  414897:	add    BYTE PTR [ecx],al
  414899:	pop    esi
  41489a:	sahf   
  41489b:	mov    cl,0xc3
  41489d:	mov    dl,0xc3
  41489f:	sbb    BYTE PTR [edi-0x323d6eb0],dh
  4148a5:	fs dec edi
  4148a7:	out    dx,al
  4148a8:	scas   al,BYTE PTR es:[edi]
  4148a9:	jg     0x41485d
  4148ab:	inc    esi
  4148ac:	push   edx
  4148ad:	ins    DWORD PTR es:[edi],dx
  4148ae:	into   
  4148af:	ins    BYTE PTR es:[edi],dx
  4148b0:	or     edi,0xffffffe3
  4148b3:	in     al,0x19
  4148b5:	test   al,0x5f
  4148b7:	push   0xffffffa7
  4148b9:	jbe    0x414844
  4148bb:	aas    
  4148bc:	pop    ebp
  4148bd:	(bad)  
  4148bf:	pop    edi
  4148c0:	fdiv   DWORD PTR [ecx]
  4148c2:	and    DWORD PTR [eax-0x34],ebx
  4148c5:	ret    
  4148c6:	stc    
  4148c7:	(bad)  
  4148c8:	cdq    
  4148c9:	stc    
  4148ca:	in     al,0xd1
  4148cc:	sub    ebp,DWORD PTR [edx-0x5c]
  4148cf:	int3   
  4148d0:	fld    QWORD PTR [edx]
  4148d2:	rcr    edx,1
  4148d4:	xchg   esp,eax
  4148d5:	in     eax,dx
  4148d6:	push   es
  4148d7:	std    
  4148d8:	add    al,0xc9
  4148da:	mov    dh,0x5b
  4148dc:	mov    cl,0x7c
  4148de:	mov    esi,0x22b90aa9
  4148e3:	pop    esp
  4148e4:	outs   dx,DWORD PTR ds:[esi]
  4148e5:	pop    es
  4148e6:	(bad)  
  4148e7:	jmp    FWORD PTR [edi+eax*2+0x70]
  4148eb:	xor    bl,BYTE PTR [eax]
  4148ed:	jbe    0x41492c
  4148ef:	or     ecx,DWORD PTR [ecx-0x84d2638]
  4148f5:	cdq    
  4148f6:	pop    edx
  4148f7:	dec    edi
  4148f8:	push   cs
  4148f9:	mov    ds,WORD PTR [eax]
  4148fb:	call   0x4fc3:0x5a6c0098
  414902:	add    al,0x5
  414904:	pushf  
  414905:	test   edx,ebp
  414907:	xchg   edi,eax
  414908:	shl    DWORD PTR [edi+0x62],0x20
  41490c:	push   esi
  41490d:	cmp    eax,0x3381a963
  414912:	dec    edx
  414913:	pop    ebx
  414914:	jmp    0x6472bb18
  414919:	push   0x5dff4470
  41491e:	push   ebp
  41491f:	lahf   
  414920:	stos   DWORD PTR es:[edi],eax
  414921:	je     0x414942
  414923:	push   esi
  414924:	out    0x4c,al
  414926:	ret    0x9a1e
  414929:	dec    ebp
  41492a:	push   eax
  41492b:	sub    bh,BYTE PTR [edi+0x223757c6]
  414931:	mov    eax,ds:0x2359bb98
  414936:	cmp    ecx,ecx
  414938:	xchg   ebp,eax
  414939:	jo     0x414976
  41493b:	sub    ch,al
  41493d:	data16 stc 
  41493f:	xor    DWORD PTR [ebx+0x41],0xffffffa5
  414943:	clc    
  414944:	mov    dl,0xa8
  414946:	ins    BYTE PTR es:[edi],dx
  414947:	jns    0x41496f
  414949:	xchg   edi,eax
  41494a:	mov    bh,0x82
  41494c:	es in  eax,dx
  41494e:	or     DWORD PTR [eax+0x1c],ebx
  414951:	xlat   BYTE PTR ds:[ebx]
  414952:	inc    esi
  414953:	jecxz  0x4149be
  414955:	mov    ds:0x19f7a240,eax
  41495a:	shr    bh,0x1a
  41495d:	mov    ebp,0x8469d248
  414962:	ror    DWORD PTR [eax+eiz*8],1
  414965:	push   0x9770ccc9
  41496a:	les    esp,FWORD PTR [eax+0x2e]
  41496d:	sbb    ebp,DWORD PTR [edx+0xc6d053e]
  414973:	call   0xce40:0xa2ebd568
  41497a:	cmp    ecx,DWORD PTR [eax+edi*2-0x2c]
  41497e:	stos   BYTE PTR es:[edi],al
  41497f:	leave  
  414980:	dec    esi
  414981:	add    DWORD PTR [eax],edi
  414983:	push   ebx
  414984:	push   edi
  414985:	mov    edx,0x1c5f7df9
  41498a:	push   0x13
  41498c:	aas    
  41498d:	rcr    BYTE PTR ds:0xed347b83,cl
  414993:	cmp    DWORD PTR [edi-0x63],esi
  414996:	mov    WORD PTR cs:[ebx],cs
  414999:	fs adc bh,dl
  41499c:	mov    ds:0x9e37c929,al
  4149a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a2:	jecxz  0x4149af
  4149a4:	addr16 scas al,BYTE PTR es:[di]
  4149a7:	mov    eax,ds:0x399cb874
  4149ac:	mov    ds:0x75b31232,al
  4149b1:	adc    BYTE PTR [esp+ebx*4],dl
  4149b4:	test   BYTE PTR [ecx+0x6f],ch
  4149b7:	mov    bl,0x14
  4149b9:	shl    DWORD PTR [edx],1
  4149bb:	and    esp,DWORD PTR [eax+0x75]
  4149be:	fcmovnb st,st(2)
  4149c0:	mov    al,ds:0xdcf05a10
  4149c5:	outs   dx,DWORD PTR ds:[esi]
  4149c7:	test   DWORD PTR [esi],ecx
  4149c9:	lea    eax,[esi+esi*2+0x6aa26927]
  4149d0:	adc    DWORD PTR [ebp+0x66],0xfd58fbd6
  4149d7:	ja     0x414976
  4149d9:	dec    ebx
  4149da:	(bad)  
  4149db:	imul   edx,DWORD PTR [ebx-0xc],0x7f
  4149df:	sahf   
  4149e0:	pop    eax
  4149e1:	and    edx,DWORD PTR [esi]
  4149e3:	xor    BYTE PTR [ebp-0x6a3cdf22],cl
  4149e9:	push   0xffffffb4
  4149eb:	sub    ebp,edi
  4149ed:	jmp    0x4c26de61
  4149f2:	loopne 0x414a56
  4149f4:	icebp  
  4149f5:	jnp    0x4149b3
  4149f7:	test   DWORD PTR [ecx+0x136f7072],edi
  4149fd:	mov    dl,0x26
  4149ff:	inc    ecx
  414a00:	rcl    BYTE PTR [ebx+0x3f],0x76
  414a04:	mov    eax,ds:0x97ed59d7
  414a09:	je     0x414a38
  414a0b:	and    bl,BYTE PTR [eax-0x68]
  414a0e:	mov    BYTE PTR [ebx+0x181a34bb],ah
  414a14:	aam    0x80
  414a16:	(bad)  
  414a17:	hlt    
  414a18:	stos   DWORD PTR es:[edi],eax
  414a19:	adc    eax,0xf45c3dec
  414a1e:	cmp    dh,dl
  414a20:	mov    WORD PTR [esi+esi*8-0x72],es
  414a24:	mov    ds:0x4e125199,eax
  414a29:	dec    esp
  414a2a:	jne    0x414a64
  414a2c:	mov    ch,0x59
  414a2e:	pop    eax
  414a2f:	pushf  
  414a30:	(bad)  
  414a32:	xchg   ecx,eax
  414a33:	fs cmp al,0x0
  414a36:	dec    esi
  414a37:	mov    edx,0xbdfafe7c
  414a3c:	call   0xb90d840
  414a41:	(bad)  
  414a42:	mov    ah,0x23
  414a44:	je     0x4149ce
  414a46:	sub    cl,BYTE PTR [ebx-0x70]
  414a49:	cdq    
  414a4a:	push   esi
  414a4b:	aaa    
  414a4c:	je     0x414a90
  414a4e:	mov    WORD PTR ds:0x1c72c278,ds
  414a54:	push   ds
  414a55:	lds    ecx,FWORD PTR [edi]
  414a57:	push   edx
  414a58:	xor    ecx,DWORD PTR [esi-0x55eb6d30]
  414a5e:	mov    cl,0xa6
  414a60:	pop    ecx
  414a61:	adc    al,0xa1
  414a63:	shl    ch,0xe
  414a66:	adc    ch,BYTE PTR [edx]
  414a68:	(bad)  
  414a69:	ror    BYTE PTR [ebp+0x732ca3c1],1
  414a6f:	fist   DWORD PTR [esi]
  414a71:	and    BYTE PTR [edx-0x2d2932ff],ah
  414a77:	push   esi
  414a78:	out    0x63,al
  414a7a:	outs   dx,BYTE PTR ds:[esi]
  414a7b:	pop    esp
  414a7c:	lahf   
  414a7d:	retf   0x3be2
  414a80:	(bad)
  414a83:	out    0xaa,al
  414a85:	aaa    
  414a86:	adc    bh,ah
  414a88:	pushf  
  414a89:	pop    ss
  414a8a:	xchg   ebx,eax
  414a8b:	jnp    0x414a38
  414a8d:	repnz lods al,BYTE PTR ds:[esi]
  414a8f:	into   
  414a90:	inc    eax
  414a91:	out    dx,eax
  414a92:	lods   al,BYTE PTR ds:[esi]
  414a93:	xchg   edx,eax
  414a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a95:	xchg   edi,eax
  414a96:	jmp    0x39f06cba
  414a9b:	retf   0x8f88
  414a9e:	shl    DWORD PTR [eax],cl
  414aa0:	xchg   ebp,eax
  414aa1:	std    
  414aa2:	mov    bh,0x49
  414aa4:	push   ss
  414aa5:	(bad)  
  414aa6:	nop
  414aa7:	mov    bh,0x43
  414aa9:	sbb    cl,BYTE PTR [eax]
  414aab:	loopne 0x414aae
  414aad:	jmp    0x414a74
  414aaf:	loop   0x414a8c
  414ab1:	jmp    DWORD PTR [ebx+ebx*4+0x12bbea18]
  414ab8:	(bad)  
  414ab9:	int    0xca
  414abb:	and    dh,BYTE PTR [ebx-0x195fdb86]
  414ac1:	inc    ebp
  414ac2:	mov    eax,ds:0x4eca44ed
  414ac7:	stos   DWORD PTR es:[edi],eax
  414ac8:	and    DWORD PTR [ecx],esp
  414aca:	cmp    ch,dl
  414acc:	mov    dl,BYTE PTR [edi-0x80]
  414acf:	push   es
  414ad0:	fstp   QWORD PTR [edx+0x55]
  414ad3:	fiadd  DWORD PTR [edx+0x31248236]
  414ad9:	jne    0x414b09
  414adb:	pop    eax
  414adc:	mov    ebx,0x4a3b1de6
  414ae1:	sahf   
  414ae2:	jg     0x414aad
  414ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ae5:	push   edx
  414ae6:	lds    esp,FWORD PTR [edi-0x5801fec4]
  414aec:	mov    esp,0xd659b679
  414af1:	retf   
  414af2:	jmp    FWORD PTR [ecx+0x21]
  414af5:	nop
  414af6:	cli    
  414af7:	scas   eax,DWORD PTR es:[edi]
  414af8:	pop    es
  414af9:	mov    al,ds:0x11ec0688
  414afe:	xchg   DWORD PTR [ecx+0x2f],esp
  414b01:	scas   al,BYTE PTR es:[edi]
  414b02:	fcom   DWORD PTR [ebp-0xa]
  414b06:	pop    ds
  414b07:	dec    edx
  414b08:	or     bh,bl
  414b0a:	jb     0x414b85
  414b0c:	into   
  414b0d:	fwait
  414b0e:	pop    ebp
  414b0f:	into   
  414b10:	jne    0x414aaf
  414b12:	mov    edx,0xeeb72f66
  414b17:	mov    bl,0xe4
  414b19:	mov    cs,WORD PTR [edi-0x32e9d34b]
  414b1f:	(bad)  
  414b20:	add    BYTE PTR [edx],0x6b
  414b23:	sub    ebp,DWORD PTR [ebp+0x3]
  414b26:	inc    DWORD PTR [edx]
  414b28:	in     eax,0xef
  414b2a:	enter  0x1727,0x82
  414b2e:	sbb    ch,cl
  414b30:	cwde   
  414b31:	(bad)  
  414b32:	shr    DWORD PTR [ebx-0x4222c393],1
  414b38:	pop    ebx
  414b39:	xlat   BYTE PTR ds:[ebx]
  414b3a:	call   DWORD PTR [ebx]
  414b3c:	js     0x414b48
  414b3e:	lods   eax,DWORD PTR ds:[esi]
  414b3f:	imul   edx,DWORD PTR [ecx],0xfffffffe
  414b42:	xchg   edi,eax
  414b43:	and    ebx,DWORD PTR [ebp-0x35]
  414b46:	jmpw   0x93e9
  414b4a:	call   0xc5e2:0xf84feb57
  414b51:	clc    
  414b52:	jmp    0xe81f:0x58deb354
  414b59:	call   0x3ae2:0x9d0ae036
  414b60:	jl     0x414af7
  414b62:	repnz fwait
  414b64:	jg     0x414b45
  414b66:	ror    ah,0x81
  414b69:	pusha  
  414b6a:	ja     0x414ba5
  414b6c:	pop    ds
  414b6d:	xchg   ecx,eax
  414b6e:	add    al,0xdf
  414b70:	imul   BYTE PTR [edi]
  414b72:	call   0xc27d:0x9476c697
  414b79:	mov    edx,0x4084e2fa
  414b7e:	and    dh,ch
  414b80:	adc    al,0xc7
  414b82:	mov    cs,WORD PTR [eax-0x73]
  414b85:	mov    bl,0xf1
  414b87:	cmp    BYTE PTR [ecx],ah
  414b89:	(bad)  
  414b8a:	adc    eax,DWORD PTR [ebp+0x4ee1fadc]
  414b90:	scas   al,BYTE PTR es:[edi]
  414b91:	aaa    
  414b92:	or     DWORD PTR [ebx-0x41],edx
  414b95:	lods   eax,DWORD PTR ds:[esi]
  414b96:	and    al,0x33
  414b98:	cmp    bl,0x3b
  414b9b:	mov    al,0x1f
  414b9d:	jnp    0x414bbe
  414b9f:	mov    ah,0x23
  414ba1:	test   eax,0xec751b17
  414ba6:	stc    
  414ba7:	dec    esp
  414ba8:	mov    dh,0xc1
  414baa:	jge    0x414b43
  414bac:	cdq    
  414bad:	inc    ecx
  414bae:	rol    DWORD PTR [ebx],cl
  414bb0:	popf   
  414bb1:	xor    al,0xcd
  414bb3:	jecxz  0x414bcb
  414bb5:	cmp    al,0x6f
  414bb7:	js     0x414bd7
  414bb9:	sub    ch,BYTE PTR [esi+ebp*2+0x5f]
  414bbd:	and    eax,0x8aada1b6
  414bc2:	sub    eax,DWORD PTR [esi-0x1]
  414bc5:	inc    eax
  414bc6:	jno    0x414bf5
  414bc8:	popf   
  414bc9:	js     0x414b4b
  414bcb:	cmp    al,BYTE PTR [ecx]
  414bcd:	or     eax,0x1d0609eb
  414bd2:	mov    ebp,0x25c42438
  414bd7:	aad    0xc1
  414bd9:	iret   
  414bda:	cmp    DWORD PTR [bp+si],esi
  414bdd:	in     eax,dx
  414bde:	sub    edx,0x41a6937f
  414be4:	call   0x46f7:0x88da8285
  414beb:	inc    esi
  414bec:	xchg   ebp,eax
  414bed:	imul   esp,edi,0xec6e1018
  414bf3:	aas    
  414bf4:	jns    0x414c50
  414bf6:	fsubr  QWORD PTR [ebp-0x2023501e]
  414bfc:	and    BYTE PTR [edx],bh
  414bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bff:	mov    ebx,0xea5f4e4c
  414c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c05:	cld    
  414c06:	inc    BYTE PTR [edi+0x68f62bf0]
  414c0c:	stc    
  414c0d:	test   eax,0x43cf25f2
  414c12:	sub    al,0xce
  414c14:	xchg   esp,ecx
  414c16:	adc    ebp,DWORD PTR [edx-0x1ed24698]
  414c1c:	mov    ds:0xe19ac9f7,eax
  414c21:	cmp    bl,dh
  414c23:	retf   
  414c24:	push   cs
  414c25:	enter  0x68b9,0x44
  414c29:	sub    eax,0x14853241
  414c2e:	lock (bad) 
  414c30:	pop    edi
  414c31:	cwde   
  414c32:	inc    edx
  414c33:	outs   dx,BYTE PTR ds:[esi]
  414c34:	shl    DWORD PTR ds:0x40ebe6ee,0x24
  414c3b:	jg     0x414c94
  414c3d:	scas   eax,DWORD PTR es:[edi]
  414c3e:	sub    eax,0x75cad6e6
  414c43:	push   esp
  414c44:	xor    eax,0x6c62b60d
  414c49:	dec    edx
  414c4a:	and    eax,0x1c565c20
  414c4f:	jo     0x414bec
  414c51:	pop    edi
  414c52:	hlt    
  414c53:	mov    WORD PTR [edx],fs
  414c55:	mov    WORD PTR [ebx+eax*4],?
  414c58:	(bad)  
  414c59:	rcl    BYTE PTR [edi+eiz*1],0x1b
  414c5d:	mov    al,0x24
  414c5f:	and    BYTE PTR [ecx-0x3c7f4b81],dl
  414c65:	or     ebx,edx
  414c67:	adc    BYTE PTR ds:0x6eaa5d56,al
  414c6d:	mov    es,WORD PTR [edi-0x71]
  414c70:	aaa    
  414c71:	pop    edi
  414c72:	xchg   esi,ecx
  414c74:	inc    esi
  414c75:	inc    eax
  414c76:	dec    edi
  414c77:	inc    ebx
  414c78:	push   cs
  414c79:	xor    BYTE PTR [edx+edx*8+0x10],bh
  414c7d:	or     DWORD PTR [edx+0x4],ebx
  414c80:	add    eax,0x7a1d1f1e
  414c85:	xchg   ecx,eax
  414c86:	xor    edi,esp
  414c88:	es lahf 
  414c8a:	cwde   
  414c8b:	stos   DWORD PTR es:[edi],eax
  414c8c:	xor    DWORD PTR [ecx+0x44],ebp
  414c8f:	cmp    al,0xbe
  414c91:	push   ebp
  414c92:	test   DWORD PTR [eax+0x54],0x5704846d
  414c99:	dec    ecx
  414c9a:	and    DWORD PTR [edi+0x73],0x24574c2b
  414ca1:	pop    esp
  414ca2:	inc    esp
  414ca3:	mov    esp,0xf939a4f8
  414ca8:	or     DWORD PTR [esi+0x17],0x4967a22b
  414caf:	mov    al,ds:0x6d8f1661
  414cb4:	cmp    al,0xeb
  414cb6:	imul   BYTE PTR [edi]
  414cb8:	sub    bh,cl
  414cba:	pop    edx
  414cbb:	add    DWORD PTR [esi+ebp*1],ebx
  414cbe:	fcom   QWORD PTR [esi-0x7f]
  414cc1:	mov    ch,0x67
  414cc3:	test   eax,0xaa90ea1b
  414cc8:	(bad)  
  414cc9:	(bad)  
  414cca:	int3   
  414ccb:	frstor [ecx-0x6e]
  414cce:	fcmovnu st,st(0)
  414cd0:	or     esp,DWORD PTR [ecx+0x59]
  414cd3:	mov    ah,0xde
  414cd5:	push   ds
  414cd6:	loopne 0x414c7d
  414cd8:	jmp    0xfa07:0x47a5a315
  414cdf:	mov    ebp,0xdca1e168
  414ce4:	adc    al,0xfc
  414ce6:	mov    al,ds:0x720d6f38
  414ceb:	push   es
  414cec:	xchg   edx,eax
  414ced:	cmovne eax,DWORD PTR [ecx]
  414cf0:	push   cs
  414cf1:	and    DWORD PTR ds:0xd1cd1915,ecx
  414cf7:	clc    
  414cf8:	jbe    0x414ceb
  414cfa:	pop    edi
  414cfb:	push   0xd79e9925
  414d00:	inc    esi
  414d01:	mov    al,0x7c
  414d03:	dec    ebp
  414d04:	jle    0x414cec
  414d06:	push   ecx
  414d07:	jecxz  0x414d00
  414d09:	adc    al,0x5c
  414d0b:	sbb    DWORD PTR [edx+0x39a34a3c],esp
  414d11:	mov    edi,0xd13f5d22
  414d16:	repz cld 
  414d18:	call   0x29fb:0xbad21ec9
  414d1f:	fld    TBYTE PTR [edi-0x50d6d9a9]
  414d25:	jne    0x414d87
  414d27:	sbb    DWORD PTR [esi-0x550c8bd],ecx
  414d2d:	lea    edx,[eax+0x42]
  414d30:	outs   dx,BYTE PTR ds:[esi]
  414d31:	pusha  
  414d32:	push   0x61700a13
  414d37:	hlt    
  414d38:	les    edi,FWORD PTR [edx]
  414d3a:	xchg   edx,eax
  414d3b:	test   eax,0xe113a7ea
  414d40:	push   ecx
  414d41:	sbb    DWORD PTR [edi],0x1c0cefbc
  414d47:	add    dh,dl
  414d49:	sub    al,0x9a
  414d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d4c:	sub    eax,0xb6c6c57a
  414d51:	or     DWORD PTR [esi],ecx
  414d53:	adc    eax,0xc853854b
  414d58:	loop   0x414dc0
  414d5a:	fnstsw WORD PTR [ecx-0x2a]
  414d5d:	inc    esp
  414d5e:	push   esi
  414d5f:	add    DWORD PTR [esi+0x1d8741fe],0x3c7b00d0
  414d69:	pop    es
  414d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d6b:	std    
  414d6c:	push   0x55
  414d6e:	test   BYTE PTR [edx+edx*2-0x5a],ah
  414d72:	(bad)  
  414d73:	or     edx,DWORD PTR [ebp+0x66c5ce8e]
  414d79:	cld    
  414d7a:	add    ch,al
  414d7c:	das    
  414d7d:	stos   WORD PTR es:[edi],ax
  414d7f:	daa    
  414d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d81:	test   al,0x8b
  414d83:	mov    al,0xb8
  414d85:	mov    eax,0xf7f4b20f
  414d8a:	lods   eax,DWORD PTR ds:[esi]
  414d8b:	sbb    dh,BYTE PTR [edi-0x32163de5]
  414d91:	call   0xb93c:0x251ffdbd
  414d98:	outs   dx,BYTE PTR ds:[esi]
  414d99:	pop    ebp
  414d9a:	jg     0x414dff
  414d9c:	pop    ebx
  414d9d:	jecxz  0x414dfc
  414d9f:	push   edx
  414da0:	fidiv  WORD PTR [ebx-0x6c]
  414da3:	mov    ebx,0x774ad498
  414da8:	cmp    ch,BYTE PTR [esi+edx*8+0x45]
  414dac:	enter  0x41bf,0xb3
  414db0:	mov    dl,0xfc
  414db2:	cs scas eax,DWORD PTR es:[edi]
  414db4:	pop    ss
  414db5:	mov    ebx,0x4813d806
  414dba:	addr16 push ebp
  414dbc:	ins    BYTE PTR es:[edi],dx
  414dbd:	jg     0x414d9a
  414dbf:	inc    esi
  414dc0:	popa   
  414dc1:	retf   0x6e6e
  414dc4:	xor    esi,DWORD PTR [ecx-0x4000459a]
  414dca:	ret    
  414dcb:	nop
  414dcc:	(bad)  [edi+ebp*1]
  414dcf:	pop    ecx
  414dd0:	xor    esp,edi
  414dd2:	xor    ebx,DWORD PTR [eax+0x38]
  414dd5:	(bad)  
  414dd6:	fs or  al,0x7
  414dd9:	lods   al,BYTE PTR ds:[esi]
  414dda:	adc    ebp,DWORD PTR [ebp-0x49]
  414ddd:	popf   
  414dde:	(bad)  
  414ddf:	psrad  mm4,QWORD PTR [edx+0x2a]
  414de3:	retf   
  414de4:	test   DWORD PTR [edi-0x5e420f2d],esi
  414dea:	mov    ah,0x1d
  414dec:	dec    ebp
  414ded:	movlps xmm2,QWORD PTR [ebx]
  414df0:	sub    edi,DWORD PTR [ebx]
  414df2:	(bad)  
  414df3:	icebp  
  414df4:	or     al,ah
  414df6:	loopne 0x414e55
  414df8:	loope  0x414e71
  414dfa:	cwde   
  414dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dfc:	xchg   ecx,eax
  414dfd:	stos   BYTE PTR es:[edi],al
  414dfe:	inc    ecx
  414dff:	inc    ecx
  414e00:	xor    DWORD PTR [eax-0x40f25af0],edi
  414e06:	and    eax,0xb19979a
  414e0b:	imul   edx,DWORD PTR [ebx-0xf0ca5dc],0xef4e7069
  414e15:	shl    ecx,0x4a
  414e18:	stc    
  414e19:	in     al,0x7c
  414e1b:	add    BYTE PTR [edi],bl
  414e1d:	xor    al,0xaa
  414e1f:	mov    ah,ch
  414e21:	rol    DWORD PTR [esi+eax*4],1
  414e24:	stc    
  414e25:	dec    ecx
  414e26:	dec    esi
  414e27:	inc    edi
  414e28:	cwde   
  414e29:	jl     0x414e52
  414e2b:	mov    ah,0xb1
  414e2d:	sub    dh,al
  414e2f:	add    BYTE PTR [ebx],ah
  414e31:	jge    0x414df9
  414e33:	add    eax,0x7761a524
  414e38:	aas    
  414e39:	js     0x414e5e
  414e3b:	add    esi,DWORD PTR [ebp+0x63]
  414e3e:	xor    DWORD PTR [edi+edi*4+0xdd3f9d6],esp
  414e45:	jp     0x414e2e
  414e47:	jecxz  0x414deb
  414e49:	repz sub eax,0xcecc6024
  414e4f:	enter  0x2d1d,0x41
  414e53:	and    DWORD PTR [ecx],ebx
  414e55:	lea    esp,[ebp+0x17]
  414e58:	ins    BYTE PTR es:[edi],dx
  414e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e5a:	mov    BYTE PTR [edx+0x47],dl
  414e5d:	dec    esp
  414e5e:	movaps XMMWORD PTR [ecx],xmm7
  414e61:	and    al,0x66
  414e63:	sbb    dh,al
  414e65:	cld    
  414e66:	shr    BYTE PTR [esi],cl
  414e68:	out    dx,eax
  414e69:	lea    esp,[ecx-0x613fe189]
  414e6f:	push   ecx
  414e70:	xor    eax,0x713a88a7
  414e75:	out    0xd2,eax
  414e77:	into   
  414e78:	dec    esp
  414e79:	cdq    
  414e7a:	jmp    0x414eac
  414e7c:	dec    ebx
  414e7d:	cld    
  414e7e:	push   ebx
  414e7f:	in     al,0x4f
  414e81:	and    dh,BYTE PTR gs:[edi-0xa5551c2]
  414e88:	les    eax,FWORD PTR [edi+edx*2]
  414e8b:	fwait
  414e8c:	pop    eax
  414e8d:	xchg   DWORD PTR [ebp+0x18],ebp
  414e90:	add    bl,bh
  414e92:	xlat   BYTE PTR ds:[ebx]
  414e93:	mov    edi,0xb1cc323d
  414e98:	div    DWORD PTR ds:[edx-0x2a]
  414e9c:	mov    ebx,0x572dd414
  414ea1:	das    
  414ea2:	xchg   ebp,eax
  414ea3:	(bad)  
  414ea4:	nop
  414ea5:	shl    ah,1
  414ea7:	out    0xa6,al
  414ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eaa:	nop
  414eab:	lods   al,BYTE PTR ds:[esi]
  414eac:	inc    ebx
  414ead:	retf   
  414eae:	add    edx,0xd4f49253
  414eb4:	cmp    eax,0xc0fb90a8
  414eb9:	sbb    ebx,0xf6f51e8d
  414ebf:	enter  0xc9c,0xa8
  414ec3:	outs   dx,BYTE PTR ds:[esi]
  414ec4:	fwait
  414ec5:	xor    bh,BYTE PTR [esi-0x12]
  414ec8:	mov    bl,0x62
  414eca:	sbb    eax,0x92f9bdf2
  414ecf:	and    eax,0x6d0f88b2
  414ed4:	add    eax,0xeabcad64
  414ed9:	scas   al,BYTE PTR es:[edi]
  414eda:	add    eax,0xa631ba60
  414edf:	dec    eax
  414ee0:	jns    0x414f24
  414ee2:	jmp    0x414e86
  414ee4:	inc    esi
  414ee5:	imul   esp,DWORD PTR [ecx],0xffffff8b
  414ee8:	sar    DWORD PTR [eax+0x75df3c9f],1
  414eee:	mov    ds:0x8435e1,eax
  414ef3:	sahf   
  414ef4:	sbb    edx,esi
  414ef6:	jle    0x414f65
  414ef8:	shl    DWORD PTR [ecx-0x71e86b41],cl
  414efe:	cmp    BYTE PTR [esi+0x53ff74ee],bl
  414f04:	mov    edx,ecx
  414f06:	push   0x59
  414f08:	sti    
  414f09:	jmp    0x414f3f
  414f0b:	pop    ds
  414f0c:	imul   edx,DWORD PTR [esi+0x52a4490],0x4b
  414f13:	pop    DWORD PTR fs:[ebx]
  414f16:	mov    DWORD PTR [esi+0x55],edx
  414f19:	leave  
  414f1a:	jb     0x414f65
  414f1c:	test   BYTE PTR [ecx+0x2],ch
  414f1f:	stos   BYTE PTR es:[edi],al
  414f20:	mov    esp,0xf8876925
  414f25:	push   esp
  414f26:	mov    ?,WORD PTR [ebx+0x64]
  414f29:	ror    BYTE PTR [ebp-0x7e],1
  414f2c:	sub    edi,edi
  414f2e:	mov    bl,0xde
  414f30:	fidiv  DWORD PTR [esi-0x31]
  414f33:	push   edx
  414f34:	adc    BYTE PTR [ecx+0x6],dl
  414f37:	repnz or ch,bl
  414f3a:	es call 0xd74cc35e
  414f40:	xor    edx,esp
  414f42:	fisttp QWORD PTR [esi+eax*1+0xe797d2f]
  414f49:	add    eax,0xb50876d
  414f4e:	int    0x3f
  414f50:	mov    al,BYTE PTR [esi-0x65cf73cb]
  414f56:	cmp    ah,BYTE PTR [ebx+edi*2]
  414f59:	imul   eax,DWORD PTR [esi+0x58d48b6a],0xfc44204d
  414f63:	in     al,dx
  414f64:	mov    al,0x41
  414f66:	jb     0x414f49
  414f68:	fs enter 0xb7d7,0xfd
  414f6d:	inc    eax
  414f6e:	ret    
  414f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f70:	imul   ecx,DWORD PTR [ecx],0xffffffca
  414f73:	or     eax,DWORD PTR [edi-0x363e1b13]
  414f79:	sbb    esi,DWORD PTR [ebx-0xbb88f95]
  414f7f:	int    0x22
  414f81:	mov    eax,ds:0xbff71164
  414f86:	rcr    dl,1
  414f88:	nop
  414f89:	mov    dh,0x98
  414f8b:	fdivr  DWORD PTR [esi+0x1da7869e]
  414f91:	mov    edx,0x83a604e8
  414f96:	call   DWORD PTR [ecx+0x5cdedee0]
  414f9c:	cmp    BYTE PTR [ecx],al
  414f9e:	jle    0x414f70
  414fa0:	js     0x414f80
  414fa2:	sub    al,0xf
  414fa4:	(bad)  
  414fa5:	ss jnp 0x414ff9
  414fa8:	leave  
  414fa9:	shl    DWORD PTR [ebp+0x3d8bcc96],0x95
  414fb0:	ins    DWORD PTR es:[edi],dx
  414fb1:	ins    BYTE PTR es:[edi],dx
  414fb2:	adc    al,0x4c
  414fb4:	and    eax,0xcddbe41e
  414fb9:	call   0x7077701a
  414fbe:	test   DWORD PTR [ecx+ecx*2],esp
  414fc1:	retf   
  414fc2:	and    ah,bl
  414fc4:	leave  
  414fc5:	xchg   ecx,eax
  414fc6:	dec    edi
  414fc7:	pop    esp
  414fc8:	jo     0x414f58
  414fca:	and    al,0x29
  414fcc:	mov    eax,ds:0x3e860405
  414fd1:	jg     0x414ff0
  414fd3:	stos   BYTE PTR es:[edi],al
  414fd4:	ret    0x3c8e
  414fd7:	add    al,0xc0
  414fd9:	xchg   edx,eax
  414fda:	int3   
  414fdb:	pop    ebp
  414fdc:	shl    BYTE PTR [eax+0x7f056267],0xa
  414fe3:	mov    al,ds:0x9f1553d7
  414fe8:	out    0xf4,eax
  414fea:	xchg   esp,ecx
  414fec:	clc    
  414fed:	sub    DWORD PTR [edi+0x10bb0609],ecx
  414ff3:	jmp    0x415055
  414ff5:	push   0x7d
  414ff7:	mov    ebp,0xd208268f
  414ffc:	push   ebp
  414ffd:	sbb    DWORD PTR [edi+0x7a082b13],edx
  415003:	aaa    
  415004:	enter  0xbb56,0x12
  415008:	adc    al,0xdc
  41500a:	adc    al,0x7f
  41500c:	test   DWORD PTR [edi-0x3],esi
  41500f:	pop    esi
  415010:	test   al,ah
  415012:	std    
  415013:	xor    al,0xda
  415015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415016:	push   ebx
  415017:	and    BYTE PTR [ebp+edx*4-0x6b1c3c20],0xfb
  41501f:	pusha  
  415020:	(bad)  
  415021:	cwde   
  415022:	mov    edi,0x9a5d6538
  415027:	stc    
  415028:	daa    
  415029:	mov    DWORD PTR [esi],edi
  41502b:	xor    edi,DWORD PTR [eax]
  41502d:	sar    BYTE PTR [eax-0x78],1
  415030:	out    dx,eax
  415031:	adc    eax,0xc6a66402
  415036:	leave  
  415037:	(bad)  
  415038:	xchg   esi,eax
  415039:	ror    esp,0xab
  41503c:	pop    edx
  41503d:	shl    BYTE PTR [edx+ebx*1+0xa],1
  415041:	mov    dh,0xcf
  415043:	(bad)  
  415044:	ficom  DWORD PTR [ebp+0xbc2492d]
  41504a:	adc    eax,0x3020f08d
  41504f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415050:	dec    ebx
  415051:	sbb    ebp,DWORD PTR ds:0x185f0e1d
  415057:	dec    ebx
  415058:	pop    esi
  415059:	add    eax,0x388bfd2a
  41505e:	xchg   edx,eax
  41505f:	dec    esp
  415060:	fwait
  415061:	xor    esp,DWORD PTR ss:[ecx]
  415064:	ja     0x41508d
  415066:	mov    DWORD PTR [ecx+0x7f02011c],esp
  41506c:	jl     0x4150da
  41506e:	enter  0x1d3b,0x11
  415072:	jle    0x415071
  415074:	test   eax,0x4dcdf67
  415079:	dec    ebp
  41507a:	fsubr  QWORD PTR [ebx]
  41507c:	addr16 pop ds
  41507e:	cmp    al,0xb9
  415080:	cmp    esp,eax
  415082:	sti    
  415083:	pop    edx
  415084:	pop    es
  415085:	in     al,0x8c
  415087:	cmp    dl,BYTE PTR [ecx-0xce206ab]
  41508d:	enter  0x65d1,0x4f
  415091:	adc    eax,0xe744c3ac
  415096:	xchg   esp,eax
  415097:	push   DWORD PTR [ebx-0x17172bf8]
  41509d:	stos   BYTE PTR es:[edi],al
  41509e:	jp     0x41503d
  4150a0:	jmp    0x415095
  4150a2:	mov    DWORD PTR [edx+0x1a],0xcf412202
  4150a9:	add    ebx,ebp
  4150ab:	and    eax,0x95873c3
  4150b0:	enter  0x73d3,0xf0
  4150b4:	loopne 0x4150ae
  4150b6:	sub    DWORD PTR [edx],eax
  4150b8:	js     0x4150ee
  4150ba:	sbb    esp,DWORD PTR [ebp+0x16]
  4150bd:	lea    esi,[edx+0xdf8bebd]
  4150c3:	(bad)  
  4150c4:	pop    esp
  4150c5:	xlat   BYTE PTR ds:[ebx]
  4150c6:	xchg   ebp,eax
  4150c7:	cmp    eax,0xb788fc0c
  4150cc:	jmp    0x104a75a4
  4150d1:	sub    bh,BYTE PTR [esi+edi*4+0x62]
  4150d5:	stos   BYTE PTR es:[edi],al
  4150d6:	xchg   ebp,eax
  4150d7:	or     ecx,edi
  4150d9:	iret   
  4150da:	iret   
  4150db:	push   cs
  4150dc:	cmp    dh,BYTE PTR [ecx-0x2e9be5e4]
  4150e2:	xor    DWORD PTR [ebx+0x433bb82a],ebp
  4150e8:	or     ch,bl
  4150ea:	dec    eax
  4150eb:	cld    
  4150ec:	mov    ecx,0x84c379fd
  4150f1:	bound  esp,QWORD PTR [eax]
  4150f3:	stc    
  4150f4:	scas   eax,DWORD PTR es:[edi]
  4150f5:	ret    0x6c7c
  4150f8:	push   0xa
  4150fa:	(bad)  
  4150fb:	cmp    DWORD PTR cs:[eax],ebp
  4150fe:	add    edi,DWORD PTR [esi+0x2a]
  415101:	aad    0x37
  415103:	sbb    bh,BYTE PTR [esi-0x4edc8e07]
  415109:	jp     0x4150b3
  41510b:	sub    BYTE PTR [ebx+eiz*8],ah
  41510e:	fwait
  41510f:	xchg   ebp,eax
  415110:	cmp    ecx,ecx
  415112:	cld    
  415113:	push   ecx
  415114:	aam    0xa6
  415116:	pop    edx
  415117:	in     eax,dx
  415118:	add    eax,0x491aebbc
  41511d:	(bad)  
  41511f:	push   0x86c626d1
  415124:	aas    
  415125:	inc    ebp
  415126:	mov    bl,0x1
  415128:	or     ah,ah
  41512a:	js     0x415196
  41512c:	mov    al,ds:0x80634cb
  415131:	jnp    0x415111
  415133:	add    ebx,DWORD PTR [esi-0x4f8e6c6e]
  415139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41513b:	mov    bl,dl
  41513d:	and    edi,esi
  41513f:	cmp    ah,BYTE PTR [ebx]
  415141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415142:	retf   
  415143:	fild   WORD PTR [ebx]
  415145:	xor    BYTE PTR [ebp+0x42a71bfc],cl
  41514b:	xchg   ecx,eax
  41514c:	je     0x4150f9
  41514e:	leave  
  41514f:	lods   eax,DWORD PTR ds:[esi]
  415150:	and    BYTE PTR [eax+0x74aee073],cl
  415156:	aam    0x74
  415158:	xchg   bl,bl
  41515a:	fbstp  TBYTE PTR [ebp+0x58af305c]
  415160:	or     eax,0x387f1c9b
  415165:	adc    al,0x34
  415167:	xor    ch,cl
  415169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41516a:	in     eax,0x45
  41516c:	or     cl,BYTE PTR [edi+0x228c2fe]
  415172:	jp     0x4150f4
  415174:	cmp    al,0x24
  415176:	and    BYTE PTR [eax-0x25],ah
  415179:	enter  0x8fd0,0x7d
  41517d:	outs   dx,DWORD PTR ds:[esi]
  41517e:	lahf   
  41517f:	xchg   esp,eax
  415180:	sbb    BYTE PTR [ecx-0x56],ah
  415183:	ret    0x5c0b
  415186:	fidiv  WORD PTR [ebx+eiz*8+0x5b551d03]
  41518d:	pop    edx
  41518e:	les    ecx,FWORD PTR [eax]
  415190:	jbe    0x41512b
  415192:	mov    esp,0x57be2f0
  415197:	or     al,0x7f
  415199:	imul   edi,DWORD PTR [ebx-0x70],0x5d
  41519d:	pop    ebp
  41519e:	imul   edi,DWORD PTR [edi+0x7e4e7a4],0x43a68b5c
  4151a8:	test   BYTE PTR [ebx],0x2e
  4151ab:	in     eax,dx
  4151ac:	mov    ds:0x9195f5f0,al
  4151b1:	dec    ebx
  4151b2:	xor    dh,BYTE PTR [ebp+0x5]
  4151b5:	fsub   DWORD PTR [eax]
  4151b7:	ja     0x4151ad
  4151b9:	jl     0x415140
  4151bb:	mov    WORD PTR [ebp-0x79],ds
  4151be:	sbb    BYTE PTR [edx-0x624cb348],cl
  4151c4:	retf   
  4151c5:	pop    es
  4151c6:	aas    
  4151c7:	retf   
  4151c8:	ret    
  4151c9:	cmp    al,BYTE PTR [ebp-0x64a7a6b3]
  4151cf:	push   esi
  4151d0:	es sbb al,0x15
  4151d3:	inc    bl
  4151d5:	mov    ecx,0xd8ec97f2
  4151da:	rol    DWORD PTR [edx],1
  4151dc:	xchg   esp,eax
  4151dd:	bound  esp,QWORD PTR [ebx]
  4151df:	outs   dx,BYTE PTR ds:[esi]
  4151e0:	adc    eax,0x8
  4151e3:	sbb    bh,cl
  4151e5:	push   ebp
  4151e6:	push   edi
  4151e7:	pop    ebp
  4151e8:	arpl   WORD PTR [edx+0x9],si
  4151eb:	inc    BYTE PTR [ebx+0x46ae9ad3]
  4151f1:	and    ebx,edx
  4151f3:	sahf   
  4151f4:	retf   
  4151f5:	push   0xb7491274
  4151fa:	sbb    BYTE PTR [esi-0x65d403ce],0x31
  415201:	in     eax,0x5
  415203:	scas   al,BYTE PTR es:[edi]
  415204:	(bad)  
  415206:	into   
  415207:	test   BYTE PTR [edx+ebp*4],0x24
  41520b:	pusha  
  41520c:	arpl   WORD PTR [ecx-0x51036562],dx
  415212:	xchg   DWORD PTR [eax-0x56],esi
  415215:	clc    
  415216:	inc    edi
  415217:	dec    ecx
  415218:	cmp    al,0xe4
  41521a:	sbb    DWORD PTR [edi+ebx*4-0x10160694],ebx
  415221:	clc    
  415222:	mov    dh,BYTE PTR [ebp-0x789447e5]
  415228:	xor    dh,BYTE PTR [esi]
  41522a:	cmp    ah,BYTE PTR [esi-0x1a]
  41522d:	pop    ecx
  41522e:	test   eax,0x2c857097
  415233:	retf   
  415234:	inc    ecx
  415235:	sbb    BYTE PTR [ebx],cl
  415237:	mov    ebp,0x463f08aa
  41523c:	push   eax
  41523d:	lds    esi,FWORD PTR [edx-0x31a3a20f]
  415243:	mov    al,ds:0x78a63358
  415248:	or     esp,DWORD PTR [eax]
  41524a:	adc    cl,BYTE PTR [ebx-0x6f]
  41524d:	icebp  
  41524e:	and    ch,BYTE PTR [eax-0x23]
  415251:	leave  
  415252:	cwde   
  415253:	mov    bh,0x53
  415255:	jl     0x415238
  415257:	js     0x41527d
  415259:	adc    ecx,DWORD PTR [edx+0x1d53c37c]
  41525f:	sti    
  415260:	pusha  
  415261:	adc    BYTE PTR [esi+0x5d],ch
  415264:	pusha  
  415265:	out    dx,eax
  415266:	mov    WORD PTR [edi],fs
  415268:	jns    0x41520c
  41526a:	and    eax,0xd9ba7368
  41526f:	dec    edi
  415270:	rcr    BYTE PTR [ebx],0x2a
  415273:	jo     0x41527d
  415275:	push   edx
  415276:	mov    eax,0xefd545c9
  41527b:	pop    ds
  41527c:	xchg   ebx,eax
  41527d:	cmp    BYTE PTR [ebp+0x5748d1ed],dh
  415283:	lahf   
  415284:	xor    DWORD PTR [ebp-0x7d],edi
  415287:	sub    DWORD PTR [esi+0x49],0x7743d037
  41528e:	and    DWORD PTR [edi],esi
  415290:	pop    es
  415291:	mov    ds:0x3b251864,eax
  415296:	lods   al,BYTE PTR ds:[esi]
  415297:	sbb    eax,0x841c410
  41529c:	add    al,0xfb
  41529e:	jmp    FWORD PTR [edi+0x12]
  4152a1:	sti    
  4152a2:	push   cs
  4152a3:	or     al,0xd0
  4152a5:	jp     0x415246
  4152a7:	call   0xeb7746dd
  4152ac:	xor    eax,0xc3711475
  4152b1:	enter  0x3ed8,0xc5
  4152b5:	mov    gs,WORD PTR [edx+0x9]
  4152b8:	mov    ecx,0xb57e8e2b
  4152bd:	bound  eax,QWORD PTR [edi]
  4152bf:	leave  
  4152c0:	pop    ds
  4152c1:	sub    DWORD PTR [esi],ebp
  4152c3:	dec    edi
  4152c4:	lods   eax,DWORD PTR ds:[esi]
  4152c5:	pop    ds
  4152c6:	clc    
  4152c7:	push   cs
  4152c8:	shl    BYTE PTR [esi],1
  4152ca:	mov    dh,0x6e
  4152cc:	mov    al,0x77
  4152ce:	ret    0xd01e
  4152d1:	mov    esi,0xf1a140
  4152d6:	call   0x5fc8:0x595411c0
  4152dd:	mov    BYTE PTR [ecx],dl
  4152df:	aaa    
  4152e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152e1:	push   0x79c54c57
  4152e6:	retf   0x1ff9
  4152e9:	jl     0x4152f8
  4152eb:	sub    al,0x8c
  4152ed:	(bad)  
  4152ee:	dec    edi
  4152ef:	ret    
  4152f0:	mov    eax,0x6013f9aa
  4152f5:	scas   eax,DWORD PTR es:[edi]
  4152f6:	(bad)  
  4152f7:	push   0xffffffac
  4152f9:	(bad)  
  4152fa:	fstp   DWORD PTR [esi+0x3fdd76bb]
  415300:	dec    eax
  415301:	fcmovnb st,st(1)
  415303:	xchg   bh,dh
  415305:	xchg   DWORD PTR [eax+0x623b6161],eax
  41530b:	gs xchg esi,eax
  41530d:	test   BYTE PTR [ebp+0x46],0x28
  415311:	es into 
  415313:	and    BYTE PTR [edx],bl
  415315:	or     bl,dh
  415317:	ds sahf 
  415319:	pusha  
  41531a:	cmc    
  41531b:	leave  
  41531c:	popf   
  41531d:	aas    
  41531e:	sbb    ah,BYTE PTR [eax-0x4e2ba4be]
  415324:	cli    
  415325:	fcomp  QWORD PTR [esi+0x17]
  415328:	in     al,dx
  415329:	out    dx,eax
  41532a:	aas    
  41532b:	or     al,0x6f
  41532d:	ins    BYTE PTR es:[edi],dx
  41532e:	test   esi,edx
  415330:	pop    ebx
  415331:	icebp  
  415332:	(bad)  [ebx-0x355d20f5]
  415338:	imul   esi,edi,0x8d776ed0
  41533e:	or     al,0x52
  415340:	xchg   ebp,eax
  415341:	mov    ch,0x34
  415343:	fsub   st(3),st
  415345:	sti    
  415346:	icebp  
  415347:	cld    
  415348:	mov    edx,0xa3eb6ed4
  41534d:	mov    ebx,0x621979a6
  415352:	fnstenv [edx-0x41]
  415355:	add    al,0xe5
  415357:	sub    eax,0xc2ec3c9b
  41535c:	test   eax,0x455f0254
  415361:	push   ebx
  415362:	cs sbb eax,0x1f9994bd
  415368:	adc    eax,0x7c2c819
  41536d:	dec    edi
  41536e:	xchg   ecx,eax
  41536f:	cmp    DWORD PTR ds:0x47835d,0x9a3f7ae
  415379:	fcomp  DWORD PTR [edi]
  41537b:	fistp  QWORD PTR [eax+ebx*2]
  41537e:	mov    BYTE PTR [edi],cl
  415380:	cmc    
  415381:	lock mov dh,0xff
  415384:	imul   ebx,DWORD PTR [ebp-0x1a3a56c9],0x743803af
  41538e:	pop    es
  41538f:	inc    edx
  415390:	pop    edx
  415391:	inc    ebp
  415392:	xchg   ebx,eax
  415393:	jo     0x41531d
  415395:	add    al,0xf1
  415397:	test   al,0x71
  415399:	dec    esp
  41539a:	test   BYTE PTR gs:[ebx-0x18d4e2c9],bl
  4153a1:	cmp    edx,ecx
  4153a3:	xchg   esp,eax
  4153a4:	add    eax,0x568eda8
  4153a9:	ja     0x415341
  4153ab:	out    dx,eax
  4153ac:	mov    esi,0x6d8630f9
  4153b1:	mov    dl,0x1c
  4153b3:	sub    al,0x74
  4153b5:	retf   0x471e
  4153b8:	push   0x20
  4153ba:	mov    bh,0x73
  4153bc:	and    eax,ebp
  4153be:	dec    esi
  4153bf:	in     eax,0x33
  4153c1:	mov    bh,BYTE PTR [ecx+eiz*1+0x49566f6a]
  4153c8:	leave  
  4153c9:	fisub  WORD PTR [edx]
  4153cb:	xor    al,0xa5
  4153cd:	inc    ecx
  4153ce:	lds    esp,FWORD PTR [ebx]
  4153d0:	inc    esi
  4153d1:	sub    edi,eax
  4153d3:	add    eax,0xd86c857d
  4153d8:	call   DWORD PTR [edx]
  4153da:	and    ch,BYTE PTR [eax]
  4153dc:	and    eax,0xd6fd286b
  4153e1:	mov    esp,0x6c80a7c5
  4153e6:	in     eax,0x57
  4153e8:	mov    al,0xcb
  4153ea:	nop
  4153eb:	jbe    0x415385
  4153ed:	out    dx,eax
  4153ee:	mov    es,WORD PTR [eax+0x12]
  4153f1:	push   ecx
  4153f2:	dec    esi
  4153f3:	adc    BYTE PTR [eax-0x75],bh
  4153f6:	sub    eax,0x7bd03641
  4153fb:	add    al,0xca
  4153fd:	fwait
  4153fe:	pop    ecx
  4153ff:	out    dx,al
  415400:	mov    BYTE PTR [ebx+esi*4-0x53],al
  415404:	aad    0x43
  415406:	mov    ebp,cs
  415408:	dec    esp
  415409:	or     al,0x11
  41540b:	or     DWORD PTR [edx+0x16],ecx
  41540e:	adc    ebp,DWORD PTR [edx-0x68]
  415411:	and    ebp,0x1d0213a2
  415417:	sbb    eax,0x38446b22
  41541c:	inc    ebx
  41541d:	jo     0x415443
  41541f:	dec    DWORD PTR [eax]
  415421:	repz xor ecx,0xd4944d13
  415428:	dec    esi
  415429:	sar    BYTE PTR [edx],1
  41542b:	in     eax,dx
  41542c:	xchg   edi,eax
  41542d:	mov    edx,0x442a379f
  415432:	cmp    ch,ch
  415434:	mov    ds:0x19863b3a,al
  415439:	repz test eax,0x57ea823d
  41543f:	loope  0x4154bd
  415441:	in     eax,0xf
  415443:	cli    
  415444:	mov    bh,0xf1
  415446:	xchg   edi,eax
  415447:	push   edx
  415448:	xlat   BYTE PTR ds:[ebx]
  415449:	and    al,0xdd
  41544b:	jnp    0x4154aa
  41544d:	add    DWORD PTR ds:0xf869a642,0x5e
  415454:	in     eax,0x49
  415456:	cmp    al,0xc1
  415458:	jbe    0x415426
  41545a:	cmp    DWORD PTR [edx+0x35c08921],esp
  415460:	cmp    BYTE PTR [edx-0x249346ca],dl
  415466:	add    DWORD PTR [ebp-0x53],ebx
  415469:	std    
  41546a:	loop   0x4154c7
  41546c:	ret    
  41546d:	je     0x415460
  41546f:	add    edi,DWORD PTR [edi]
  415471:	sti    
  415472:	mov    dh,0x52
  415474:	or     DWORD PTR [esi],esi
  415476:	pop    edi
  415477:	push   cs
  415478:	cmp    cl,ah
  41547a:	test   eax,0xaa4e51a8
  41547f:	sbb    dh,BYTE PTR [ebx]
  415481:	repz mov dl,0x4
  415484:	test   ebx,edx
  415486:	sub    DWORD PTR [esp+ecx*8-0x76],esp
  41548a:	adc    eax,0xd4e81575
  41548f:	bound  eax,QWORD PTR [esi]
  415491:	aam    0xb
  415493:	sub    BYTE PTR [edi],bh
  415495:	sahf   
  415496:	push   ecx
  415497:	pusha  
  415498:	xor    cl,BYTE PTR [ebx+0x51]
  41549b:	fistp  WORD PTR [ebx-0x1199a1a0]
  4154a1:	sub    al,0xde
  4154a3:	outs   dx,BYTE PTR ds:[esi]
  4154a4:	sbb    al,BYTE PTR [edi+0x74]
  4154a7:	cli    
  4154a8:	stc    
  4154a9:	bound  edx,QWORD PTR [esi-0x32]
  4154ac:	jp     0x41548f
  4154ae:	mov    al,0x50
  4154b0:	adc    eax,0xd97856e4
  4154b5:	xor    al,0x8d
  4154b7:	mov    edi,0xbc86733c
  4154bc:	ds es out 0xd9,al
  4154c0:	jns    0x41547e
  4154c2:	jnp    0x4154f6
  4154c4:	add    ecx,esp
  4154c6:	adc    BYTE PTR [ecx-0x3f],ah
  4154c9:	add    edx,ecx
  4154cb:	(bad)  
  4154cc:	jae    0x415483
  4154ce:	or     DWORD PTR [ecx+0x5d],edx
  4154d1:	fcomp  QWORD PTR [ecx+0x0]
  4154d4:	stc    
  4154d5:	add    edx,DWORD PTR [edx]
  4154d7:	xor    eax,0xd4f52ea
  4154dc:	dec    eax
  4154dd:	test   eax,0x26b9a7cf
  4154e2:	sbb    DWORD PTR [ebx-0x58ceced8],0xa9052328
  4154ec:	in     al,dx
  4154ed:	pop    eax
  4154ee:	add    eax,0xdd62726a
  4154f3:	mov    ds:0x752dac88,al
  4154f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154f9:	mov    ecx,0x34a7650c
  4154fe:	dec    esi
  4154ff:	push   ds
  415500:	jg     0x415553
  415502:	out    dx,al
  415503:	push   ds
  415504:	aam    0xcf
  415506:	and    eax,0x40df92fa
  41550b:	das    
  41550c:	cmp    bl,cl
  41550e:	mov    ebx,0x7f5b30f6
  415513:	add    eax,0x4dbe253
  415518:	xor    bh,BYTE PTR [eax+0x641835a9]
  41551e:	fistp  WORD PTR [edx-0x38]
  415521:	mov    bl,0x39
  415523:	das    
  415524:	test   BYTE PTR [edx+0x61d2636d],0x68
  41552b:	aaa    
  41552c:	fxch   st(3)
  41552e:	ss jecxz 0x4154e6
  415531:	push   cs
  415532:	scas   eax,DWORD PTR es:[edi]
  415533:	adc    al,0xd
  415535:	aam    0xcc
  415537:	dec    esi
  415538:	mov    al,ds:0x4abcd220
  41553d:	mov    ecx,0x4968b29a
  415542:	int3   
  415543:	test   DWORD PTR [edx-0x1e0ab7b9],edi
  415549:	jnp    0x415591
  41554b:	popa   
  41554c:	(bad)  
  41554d:	mov    eax,0x8c7c5b0f
  415552:	inc    edi
  415553:	or     al,0x3e
  415555:	call   FWORD PTR [ebp-0x2fc3c864]
  41555b:	xlat   BYTE PTR ds:[ebx]
  41555c:	pop    ebp
  41555d:	mov    bh,0x87
  41555f:	sbb    al,0xeb
  415561:	fwait
  415562:	xchg   edi,eax
  415563:	pop    esi
  415564:	daa    
  415565:	out    dx,al
  415566:	xor    BYTE PTR [edx+0x5e],cl
  415569:	cmp    BYTE PTR [esi],ch
  41556b:	gs mov edi,0x3a000397
  415571:	out    dx,eax
  415572:	rol    BYTE PTR [edi],0xf7
  415575:	mov    bh,0xca
  415577:	mov    ds:0xe3c95736,eax
  41557c:	mov    gs,WORD PTR [esi]
  41557e:	dec    ebp
  41557f:	jl     0x415525
  415581:	mov    ebp,0x8c843229
  415586:	pop    ebp
  415587:	rcr    DWORD PTR ds:0xe289c7,0x46
  41558e:	stos   DWORD PTR es:[edi],eax
  41558f:	ficomp WORD PTR [edx+0x39]
  415592:	repz out dx,al
  415594:	xchg   edx,eax
  415595:	jne    0x415602
  415597:	mov    DWORD PTR [ebx+0x3a],edi
  41559a:	fild   WORD PTR [esi+0x5ff9bb8a]
  4155a0:	pusha  
  4155a1:	ds adc cl,al
  4155a4:	xor    BYTE PTR ds:0xc45092df,bh
  4155aa:	shl    BYTE PTR [edi],cl
  4155ac:	shl    eax,0xf4
  4155af:	mov    esi,0x96b5e5a
  4155b4:	push   ds
  4155b5:	out    dx,eax
  4155b6:	int3   
  4155b7:	push   edx
  4155b8:	push   edi
  4155b9:	cmp    DWORD PTR [ebx+ebx*1-0x18719eb4],ebp
  4155c0:	sub    al,0xb3
  4155c2:	jmp    0x415626
  4155c4:	jl     0x4155fd
  4155c6:	xchg   esp,eax
  4155c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c9:	xchg   edx,eax
  4155ca:	pop    ecx
  4155cb:	clc    
  4155cc:	jae    0x41555f
  4155ce:	adc    BYTE PTR [bp+si-0x63],0x36
  4155d3:	and    eax,0xce680e83
  4155d8:	leave  
  4155d9:	enter  0x9d23,0x50
  4155dd:	and    BYTE PTR [edi+0x1fa86e78],0x8c
  4155e4:	or     esp,DWORD PTR [ecx-0x59e4243c]
  4155ea:	scas   al,BYTE PTR es:[edi]
  4155eb:	add    al,0xbc
  4155ed:	daa    
  4155ee:	cmp    ch,BYTE PTR gs:0xb371b9ee
  4155f5:	cdq    
  4155f6:	stos   DWORD PTR es:[edi],eax
  4155f7:	dec    esi
  4155f8:	sbb    BYTE PTR [edx],cl
  4155fa:	fstp   DWORD PTR [ecx-0x3dc53322]
  415600:	pop    edx
  415601:	jne    0x4155be
  415603:	les    esp,FWORD PTR [edx+0x29fe1bf0]
  415609:	and    DWORD PTR [ebp-0x38],edi
  41560c:	popa   
  41560d:	adc    DWORD PTR [ecx+0x5f],ecx
  415610:	mov    BYTE PTR [ecx-0x1aba3c9f],ah
  415616:	jmp    0xe379:0x18d4e369
  41561d:	test   DWORD PTR [ecx-0x36],ecx
  415620:	adc    eax,0x1ef7012b
  415625:	xchg   BYTE PTR [esi+ebp*4+0x48f436a9],bl
  41562c:	xor    eax,0x666072fe
  415631:	sub    al,0x46
  415633:	adc    eax,0x335658a3
  415638:	fcomi  st,st(7)
  41563a:	mov    dh,0x8
  41563c:	jno    0x41566f
  41563e:	xor    al,0xc6
  415640:	add    BYTE PTR [ecx+ebx*4+0x3],ah
  415644:	adc    al,0x2a
  415646:	xor    BYTE PTR ds:0xfb9be909,bl
  41564c:	sti    
  41564d:	test   ecx,0x27dd6738
  415653:	jae    0x41560d
  415655:	cmp    al,ch
  415657:	and    eax,0x26def5ed
  41565c:	xchg   ecx,eax
  41565d:	jge    0x415672
  41565f:	mov    bh,0x8f
  415661:	arpl   cx,bx
  415663:	test   al,0xd1
  415665:	lds    ebp,FWORD PTR [esi-0x35638a5b]
  41566b:	scas   al,BYTE PTR es:[edi]
  41566c:	inc    ecx
  41566d:	inc    esp
  41566e:	xlat   BYTE PTR ds:[ebx]
  41566f:	add    eax,0x4c5291d0
  415674:	aas    
  415675:	les    ecx,FWORD PTR [ecx-0x70f77e35]
  41567b:	mov    ecx,0x4cc3b393
  415680:	and    BYTE PTR [edx+eax*1+0x50],ch
  415684:	cmp    al,0xf9
  415686:	or     al,0xdb
  415688:	cmc    
  415689:	or     al,0x7b
  41568b:	mov    esp,0x3ff4740f
  415690:	retf   
  415691:	push   cs
  415692:	add    BYTE PTR [esi-0x3f],0xfb
  415696:	jecxz  0x41563e
  415698:	(bad)  
  415699:	dec    edi
  41569a:	sub    BYTE PTR [ecx+0x3c],dh
  41569d:	inc    edi
  41569e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41569f:	and    BYTE PTR [esi-0x30ab38c7],dl
  4156a5:	retf   0x3df1
  4156a8:	shl    BYTE PTR [edx-0x77],0x4b
  4156ac:	std    
  4156ad:	pop    eax
  4156ae:	mov    cs,esi
  4156b0:	add    esp,esi
  4156b2:	sub    ecx,DWORD PTR ds:0x906a8d0e
  4156b8:	add    eax,esi
  4156ba:	ret    0xa7ad
  4156bd:	test   bl,ch
  4156bf:	in     al,dx
  4156c0:	dec    BYTE PTR [ebx-0x3f]
  4156c3:	or     al,0x19
  4156c5:	rcr    BYTE PTR [edi+0x48],1
  4156c8:	loopne 0x4156c2
  4156ca:	jmp    0xa37ee5d8
  4156cf:	cwde   
  4156d0:	jb     0x41571c
  4156d2:	mov    dh,0xf3
  4156d4:	test   al,0x20
  4156d6:	push   esi
  4156d7:	test   BYTE PTR [edx+ebx*4-0x627468b5],bl
  4156de:	or     al,0xd0
  4156e0:	adc    eax,0x42b15f66
  4156e5:	fcmovbe st,st(2)
  4156e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156e8:	xchg   ebx,eax
  4156e9:	xlat   BYTE PTR ds:[ebx]
  4156ea:	(bad)  
  4156eb:	outs   dx,BYTE PTR ds:[esi]
  4156ec:	pop    ebp
  4156ed:	hlt    
  4156ee:	xor    BYTE PTR [esi],al
  4156f0:	repnz sub DWORD PTR [eax+0x43],edi
  4156f4:	sar    ecx,cl
  4156f6:	pop    es
  4156f7:	(bad)  
  4156f8:	push   edi
  4156f9:	push   ss
  4156fa:	je     0x41571f
  4156fc:	pop    ebx
  4156fd:	xchg   edx,eax
  4156fe:	ret    
  4156ff:	push   esp
  415700:	jb     0x4156e1
  415702:	sbb    BYTE PTR [ecx+0x2678658f],al
  415708:	cmp    dl,ah
  41570a:	cld    
  41570b:	pusha  
  41570c:	pop    esi
  41570d:	ja     0x41573a
  41570f:	mov    DWORD PTR [eax-0x2f],ebp
  415712:	rol    BYTE PTR [edi+0x2ffad5f1],0x95
  415719:	test   BYTE PTR [ebx+esi*1-0x7c85543c],al
  415720:	pop    ebp
  415721:	loop   0x41570a
  415723:	jecxz  0x415730
  415725:	retf   
  415726:	jnp    0x4156e6
  415728:	push   esp
  415729:	popa   
  41572a:	dec    edx
  41572b:	and    dh,cl
  41572d:	dec    eax
  41572e:	into   
  41572f:	in     al,dx
  415730:	cdq    
  415731:	inc    esp
  415732:	adc    eax,0x912039a
  415737:	or     eax,0xfe5169f1
  41573c:	jmp    0x415759
  41573e:	(bad)  
  41573f:	adc    edx,DWORD PTR [ebp+0x74ef546f]
  415745:	mov    eax,fs:0xa249152c
  41574b:	mov    dh,0x7
  41574d:	(bad)  
  41574e:	call   0x56e2:0x69753222
  415755:	lds    ebp,FWORD PTR [ebx-0x49]
  415758:	mov    ebx,0xac1a970c
  41575d:	bound  esp,QWORD PTR [eax-0x694a151e]
  415763:	aas    
  415764:	mov    bh,0xb2
  415766:	mov    edx,0x6c94b230
  41576b:	dec    edi
  41576c:	inc    edx
  41576d:	daa    
  41576e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41576f:	fcomp  DWORD PTR [esi]
  415771:	rol    BYTE PTR [ebx],1
  415773:	mov    ah,0xb4
  415775:	iret   
  415776:	dec    ecx
  415777:	mov    ah,0x3a
  415779:	cmp    esp,DWORD PTR [eax-0x45]
  41577c:	fcom   QWORD PTR [ebp-0x172670f7]
  415782:	call   FWORD PTR [edi-0x1ae87963]
  415788:	cmp    DWORD PTR [esi],edx
  41578a:	and    bh,BYTE PTR ds:0x45ef4316
  415790:	(bad)  
  415791:	mov    ebp,0x4109be13
  415796:	jno    0x41576f
  415798:	call   0xf3de:0xdd68a347
  41579f:	stc    
  4157a0:	(bad)  
  4157a1:	jb     0x4157ba
  4157a3:	jnp    0x41575b
  4157a5:	mov    cl,0x6b
  4157a7:	imul   esp,DWORD PTR [esp+eax*2-0x7a],0x290a9cd
  4157af:	icebp  
  4157b0:	and    eax,0xf5891b13
  4157b5:	ss stos BYTE PTR es:[edi],al
  4157b7:	test   BYTE PTR [ebp-0x4618ef53],0x89
  4157be:	jle    0x415837
  4157c0:	pop    ss
  4157c1:	ss push es
  4157c3:	mov    ah,0x15
  4157c5:	stos   BYTE PTR es:[edi],al
  4157c6:	push   ebx
  4157c7:	adc    ebx,ebp
  4157c9:	mov    DWORD PTR [edx-0x4cbf0e26],esi
  4157cf:	ins    BYTE PTR es:[edi],dx
  4157d0:	cmp    edx,eax
  4157d2:	out    0xee,al
  4157d4:	ds (bad) 
  4157d6:	adc    DWORD PTR [ebp-0x382a1b9b],esp
  4157dc:	(bad)  
  4157dd:	mov    eax,ds:0x632c9193
  4157e2:	rol    ecx,1
  4157e4:	repnz fnop 
  4157e7:	push   es
  4157e8:	int    0x35
  4157ea:	or     BYTE PTR [edx+edi*4-0x5b57a81c],0x75
  4157f2:	cwde   
  4157f3:	push   0xffffffd4
  4157f5:	aad    0x84
  4157f7:	das    
  4157f8:	frstor [ebp-0xf3242a]
  4157fe:	jp     0x415805
  415800:	sbb    DWORD PTR [esi+eax*4],edi
  415803:	int    0xe9
  415805:	or     bl,BYTE PTR [ecx+0xfcdb98c]
  41580b:	stos   BYTE PTR es:[edi],al
  41580c:	inc    edi
  41580d:	call   WORD PTR [ebx+0x43c5d063]
  415814:	(bad)  [edx+0x184daecf]
  41581a:	imul   edi,DWORD PTR [edx+0x11],0xffffffc0
  41581e:	cmp    al,0x1a
  415820:	push   ds
  415821:	hlt    
  415822:	hlt    
  415823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415824:	inc    esp
  415825:	mov    al,ds:0x35638107
  41582a:	shr    DWORD PTR [eax+0x366a89df],1
  415830:	sbb    DWORD PTR [ebp+0x1dd88d0c],edx
  415836:	jmp    FWORD PTR [esi+0x73]
  415839:	mov    dh,0x98
  41583b:	mov    ch,0x53
  41583d:	fist   WORD PTR [ebp-0x793692cd]
  415843:	not    DWORD PTR [ebp+0x40]
  415846:	mov    eax,ds:0x6725e339
  41584b:	pop    eax
  41584c:	mov    ah,0xae
  41584e:	inc    ecx
  41584f:	mov    ecx,0x59ff8719
  415854:	mov    esp,DWORD PTR [ebp+0x52a10b1e]
  41585a:	inc    eax
  41585b:	lods   al,BYTE PTR ds:[esi]
  41585c:	mov    eax,0xfe2139c5
  415861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415862:	and    DWORD PTR [edx+ebp*2-0x44],edi
  415866:	aas    
  415867:	xlat   BYTE PTR ds:[ebx]
  415868:	mov    ds:0x35685159,al
  41586d:	jl     0x4158ab
  41586f:	adc    BYTE PTR [edx+0x64],al
  415872:	lods   eax,DWORD PTR ds:[esi]
  415873:	pop    ebx
  415874:	stc    
  415875:	repnz or eax,DWORD PTR [edx]
  415878:	cmp    al,0x9d
  41587a:	cdq    
  41587b:	(bad)  [edi-0x4f]
  41587e:	scas   al,BYTE PTR es:[edi]
  41587f:	cdq    
  415880:	xchg   edi,eax
  415881:	mov    dh,0x55
  415883:	and    DWORD PTR [si-0x6],0x40
  415888:	stos   BYTE PTR es:[edi],al
  415889:	scas   eax,DWORD PTR es:[edi]
  41588a:	fistp  DWORD PTR [ebx-0x19]
  41588d:	pop    es
  41588e:	mov    ds:0x125487af,al
  415893:	xlat   BYTE PTR ds:[ebx]
  415894:	mov    ebp,edi
  415896:	imul   esi,DWORD PTR [edi+eiz*8],0x62ee27c0
  41589d:	pop    ecx
  41589e:	sub    al,BYTE PTR [eax]
  4158a0:	sbb    BYTE PTR [edx],bh
  4158a2:	add    eax,0xf8988c9c
  4158a7:	dec    esi
  4158a8:	(bad)  
  4158a9:	jl     0x415860
  4158ab:	(bad)  
  4158ac:	neg    ah
  4158ae:	mov    eax,ds:0x66a90e08
  4158b3:	fnstsw WORD PTR [esi+esi*4]
  4158b6:	enter  0xfed8,0x8a
  4158ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158bb:	rcr    DWORD PTR [esi+0xe99fb57],0x50
  4158c2:	mov    al,0x7f
  4158c4:	sub    BYTE PTR [ebx],0xbe
  4158c7:	mov    ebp,es
  4158c9:	jae    0x4158a2
  4158cb:	sub    al,BYTE PTR [ecx]
  4158cd:	mov    bh,0xf9
  4158d0:	mov    ebp,0x1e70d74d
  4158d5:	pop    ebx
  4158d6:	mov    edx,0xf58f50a0
  4158db:	repnz adc eax,0x225eb864
  4158e1:	adc    al,0xca
  4158e3:	fisub  DWORD PTR [ebx-0x7a7ae818]
  4158e9:	(bad)  
  4158ea:	dec    BYTE PTR [esi]
  4158ec:	or     eax,0x9262e0b7
  4158f1:	pop    ebx
  4158f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158f3:	dec    esi
  4158f4:	mov    ah,0xab
  4158f6:	mov    esi,0x5c027ed8
  4158fb:	lock xchg edx,eax
  4158fd:	and    al,0x65
  4158ff:	in     eax,dx
  415900:	adc    BYTE PTR [ecx],cl
  415902:	jmp    0xcc6d4b82
  415907:	imul   edi,DWORD PTR [ecx],0x80930613
  41590d:	jno    0x415951
  41590f:	add    al,0x18
  415911:	jne    0x4158ca
  415913:	add    al,0xd4
  415915:	dec    ebx
  415916:	repnz mov cl,0xaf
  415919:	repz pop ss
  41591b:	movzx  ebp,ax
  41591e:	cmp    esp,edi
  415920:	sbb    DWORD PTR [edi],0xc2eee247
  415926:	rol    DWORD PTR [ebp+0xbaa08f0],1
  41592c:	inc    esp
  41592d:	enter  0x153a,0x40
  415931:	fnstcw WORD PTR [eax]
  415933:	js     0x4158d1
  415935:	dec    esi
  415936:	sub    eax,0x8b47fe6
  41593b:	in     eax,0xb4
  41593d:	jl     0x4158d2
  41593f:	pop    ss
  415940:	adc    al,0x4b
  415942:	pop    esp
  415943:	dec    esp
  415944:	ror    DWORD PTR [ecx+0xc8c69b3],0x3e
  41594b:	mov    eax,ds:0x286b2dc4
  415950:	jge    0x415959
  415952:	mov    ecx,0x3a33d966
  415957:	jp     0x415909
  415959:	daa    
  41595a:	call   0x7c4d4a7f
  41595f:	add    edi,DWORD PTR [esi]
  415961:	data16 sahf 
  415963:	scas   al,BYTE PTR es:[edi]
  415964:	arpl   si,sp
  415966:	sub    edx,DWORD PTR [ebp-0x2e]
  415969:	xor    bh,0x73
  41596c:	jae    0x415938
  41596e:	and    BYTE PTR [edi],0x26
  415971:	xchg   edi,eax
  415972:	in     al,dx
  415973:	aad    0x69
  415975:	jae    0x415963
  415977:	out    dx,al
  415978:	cdq    
  415979:	push   eax
  41597a:	mov    ds:0x2f55b732,al
  41597f:	xor    DWORD PTR [esi-0x2e],esp
  415982:	mov    edi,0x74ed75f1
  415987:	jo     0x4159e5
  415989:	jno    0x4159f9
  41598b:	cmp    BYTE PTR [edx-0x61ffffda],ah
  415991:	inc    edi
  415992:	popa   
  415993:	push   0xaf79ca7a
  415998:	out    dx,eax
  415999:	cmp    al,0x22
  41599b:	daa    
  41599c:	xchg   ecx,eax
  41599d:	cdq    
  41599e:	or     al,0x7b
  4159a0:	scas   eax,DWORD PTR es:[edi]
  4159a1:	dec    eax
  4159a2:	sub    DWORD PTR [ecx-0x1504748e],esi
  4159a8:	int    0x7d
  4159aa:	jne    0x4159de
  4159ac:	xchg   edx,eax
  4159ad:	fmul   QWORD PTR [edi]
  4159af:	sbb    DWORD PTR [esi-0x17],esi
  4159b2:	mov    ?,WORD PTR [ebx-0x2a]
  4159b5:	jmp    0x415a1e
  4159b7:	stos   DWORD PTR es:[edi],eax
  4159b8:	cdq    
  4159b9:	pop    esp
  4159ba:	or     BYTE PTR [edi-0x15b6672c],0x97
  4159c1:	pop    esi
  4159c2:	xchg   ecx,eax
  4159c3:	pop    esp
  4159c4:	mul    ecx
  4159c6:	test   eax,0x57d2c2b0
  4159cb:	cs mov al,0x3
  4159ce:	push   esi
  4159cf:	ja     0x415988
  4159d1:	out    0x9e,eax
  4159d3:	call   0x771bcb03
  4159d8:	mov    dl,0xc7
  4159da:	or     eax,0xdb83b6cb
  4159df:	cmp    BYTE PTR [eax],bl
  4159e1:	push   esp
  4159e2:	in     eax,0x35
  4159e4:	pop    esp
  4159e5:	fstp   QWORD PTR [esi+0x29]
  4159e8:	ja     0x4159e9
  4159ea:	pop    esi
  4159eb:	adc    dh,dl
  4159ed:	sbb    BYTE PTR [edi+0x3a8f95da],dl
  4159f3:	mov    dl,0xda
  4159f5:	mov    DWORD PTR [ecx],edi
  4159f7:	xchg   ebx,eax
  4159f8:	adc    DWORD PTR [edi-0x65],ebx
  4159fb:	aaa    
  4159fc:	test   eax,0x1b9a5f74
  415a01:	pop    es
  415a02:	(bad)  
  415a03:	or     edi,DWORD PTR [esi+ecx*8+0x5b84617a]
  415a0a:	gs or  bh,BYTE PTR ds:[edi+0x54]
  415a0f:	js     0x4159bf
  415a11:	mov    ch,0x7a
  415a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a14:	mov    ah,0xd2
  415a16:	mov    ds:0x5d51818c,eax
  415a1b:	dec    ebx
  415a1c:	and    bh,BYTE PTR ss:[ecx+0x2329f823]
  415a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a24:	mov    dl,0x57
  415a26:	or     ebx,DWORD PTR [esi-0x7ea0e554]
  415a2c:	mov    ebx,0x9ce58646
  415a31:	mov    edx,0xd41db73
  415a36:	push   ds
  415a37:	daa    
  415a38:	fimul  WORD PTR [ecx]
  415a3a:	icebp  
  415a3b:	or     DWORD PTR [ecx+ebx*1-0x27],esi
  415a3f:	stos   BYTE PTR es:[edi],al
  415a40:	jecxz  0x415abf
  415a42:	pop    edx
  415a43:	add    al,0xd2
  415a45:	adc    eax,0xa6282dff
  415a4a:	or     BYTE PTR [edi+0x61213903],0x5
  415a51:	push   es
  415a52:	mov    DWORD PTR [ecx],esi
  415a54:	jg     0x415a30
  415a56:	in     al,0x84
  415a58:	adc    edx,DWORD PTR [esi]
  415a5a:	hlt    
  415a5b:	sub    al,0x3
  415a5d:	hlt    
  415a5e:	xor    dh,ch
  415a60:	jg     0x415a6b
  415a62:	outs   dx,DWORD PTR ds:[esi]
  415a63:	jo     0x415abe
  415a65:	lods   al,BYTE PTR ds:[esi]
  415a66:	test   ebp,0x561ba0a9
  415a6c:	out    dx,eax
  415a6d:	std    
  415a6e:	(bad)  
  415a6f:	retf   
  415a70:	xor    eax,0x518e0ad1
  415a75:	pusha  
  415a76:	stos   BYTE PTR es:[edi],al
  415a77:	jnp    0x415a0f
  415a79:	das    
  415a7a:	fstp   TBYTE PTR ds:0x1169dce7
  415a80:	das    
  415a81:	sbb    bh,BYTE PTR [ebp+0xceb4d23]
  415a87:	ss loopne 0x415a5e
  415a8a:	or     ebp,DWORD PTR [ebx+esi*8-0x77]
  415a8e:	mov    esp,0xfcd199d5
  415a93:	clc    
  415a94:	retf   
  415a95:	call   0x15da:0xf64a9873
  415a9c:	add    DWORD PTR [edx+0x6d],0x769f2253
  415aa3:	call   0xb388:0xf4395876
  415aaa:	xchg   esp,eax
  415aab:	jnp    0x415a99
  415aad:	cld    
  415aae:	add    BYTE PTR [edi+ebx*8+0x15],dh
  415ab2:	popa   
  415ab3:	add    dl,BYTE PTR [edi+0x6c096087]
  415ab9:	mov    bh,0xdd
  415abb:	and    BYTE PTR [esi+0x72],dl
  415abe:	cmp    cl,BYTE PTR [edx+0x12]
  415ac1:	mov    ds:0x39d57dcb,al
  415ac6:	enter  0xe311,0xfc
  415aca:	call   0x22d7da29
  415acf:	inc    ebx
  415ad0:	jl     0x415ade
  415ad2:	in     al,dx
  415ad3:	mov    ds:0xd7d55a1f,eax
  415ad8:	(bad)  
  415ad9:	stos   DWORD PTR es:[edi],eax
  415ada:	push   es
  415adb:	ins    DWORD PTR es:[edi],dx
  415adc:	retf   
  415add:	pop    edi
  415ade:	adc    al,0xf5
  415ae0:	pop    edi
  415ae1:	mov    WORD PTR [edx],ds
  415ae3:	xchg   ah,bl
  415ae5:	jno    0x415b2e
  415ae7:	aaa    
  415ae8:	dec    edi
  415ae9:	fisttp DWORD PTR [ecx+0x53db0418]
  415aef:	in     al,0xf3
  415af1:	sbb    BYTE PTR [esi+edx*1+0x73],bh
  415af5:	inc    ecx
  415af6:	mov    edi,0x6f0df649
  415afb:	loope  0x415a96
  415afd:	mov    ds:0x130c3c0c,al
  415b02:	lds    edx,FWORD PTR [esi+0x67bd505]
  415b08:	pop    ss
  415b09:	jle    0x415ab8
  415b0b:	pop    ecx
  415b0c:	mov    DWORD PTR [esi],ebx
  415b0e:	pop    edi
  415b0f:	pop    esp
  415b10:	mov    dh,0xb5
  415b12:	adc    eax,0x8f5f2145
  415b17:	push   eax
  415b18:	adc    BYTE PTR [edx+0x6c],dl
  415b1b:	jb     0x415ae9
  415b1d:	mov    ah,0x61
  415b1f:	add    DWORD PTR [ebx+0x7b],0xb2fc8c8d
  415b26:	dec    esp
  415b27:	mov    eax,ds:0xb8a72490
  415b2c:	sub    BYTE PTR [esp+edi*8],cl
  415b2f:	mov    ebx,0x9c850cb4
  415b34:	retf   
  415b35:	aaa    
  415b36:	les    ebx,FWORD PTR [ebx-0xbada217]
  415b3c:	test   BYTE PTR [edi-0x1a31cd71],0x8b
  415b43:	and    DWORD PTR [ecx-0x26],edi
  415b46:	xor    DWORD PTR [ebx+0xb21d0a],0x21
  415b4d:	and    eax,0x2336378d
  415b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b53:	jae    0x415b23
  415b55:	call   0xfdb3332f
  415b5a:	xor    eax,DWORD PTR [edx+edi*1+0x21]
  415b5e:	pop    ebx
  415b5f:	fild   DWORD PTR [edx+0xf4f125b]
  415b65:	mov    ds:0x75312299,eax
  415b6a:	js     0x415bc3
  415b6c:	pop    ecx
  415b6d:	in     al,dx
  415b6e:	hlt    
  415b6f:	stc    
  415b70:	shl    DWORD PTR [edx-0x28],cl
  415b73:	push   esp
  415b74:	cmp    DWORD PTR [eax-0x18b9c114],esi
  415b7a:	sub    dl,BYTE PTR [ebx+ebp*4-0x48]
  415b7e:	or     al,BYTE PTR [edi+0x1a]
  415b81:	jne    0x415b6c
  415b83:	lods   al,BYTE PTR ds:[esi]
  415b84:	xor    BYTE PTR [ebx+0x79],ah
  415b87:	xor    eax,0x9110a091
  415b8c:	stos   BYTE PTR es:[edi],al
  415b8d:	popf   
  415b8e:	mov    ah,0x68
  415b90:	inc    ebx
  415b91:	cmp    BYTE PTR [ecx],al
  415b93:	lock pusha 
  415b95:	cmp    ebp,DWORD PTR [ecx-0x5f0abd46]
  415b9b:	adc    esp,edi
  415b9d:	xchg   ecx,eax
  415b9e:	and    ch,BYTE PTR [edi]
  415ba0:	(bad)  
  415ba2:	cwde   
  415ba3:	popf   
  415ba4:	inc    ebp
  415ba5:	fidivr WORD PTR [edi+0x643fed97]
  415bab:	(bad)  
  415bac:	lds    ecx,FWORD PTR [edx+0x192d3179]
  415bb2:	mov    ?,ecx
  415bb4:	repz mov ds:0x3b7dd51e,al
  415bba:	jmp    0x415bcd
  415bbc:	mov    ecx,0x576fe02e
  415bc1:	add    BYTE PTR [esi],cl
  415bc3:	(bad)  
  415bc4:	das    
  415bc5:	mov    dh,0xd5
  415bc7:	(bad)  
  415bc8:	cwde   
  415bc9:	test   DWORD PTR [edx],edx
  415bcb:	jecxz  0x415c4a
  415bcd:	cmc    
  415bce:	je     0x415b88
  415bd0:	jmp    0xfd7db534
  415bd5:	add    edi,DWORD PTR [ecx+0x43d06abd]
  415bdb:	stc    
  415bdc:	je     0x415c1d
  415bde:	xlat   BYTE PTR ds:[ebx]
  415bdf:	in     al,dx
  415be0:	in     al,0x73
  415be2:	pop    ds
  415be3:	retf   0x9342
  415be6:	push   ds
  415be7:	mov    dl,0xc
  415be9:	or     DWORD PTR [ebp-0x64],eax
  415bec:	outs   dx,BYTE PTR ds:[esi]
  415bed:	jp     0x415bec
  415bef:	push   eax
  415bf0:	sub    eax,0x6872fe2d
  415bf5:	je     0x415c71
  415bf7:	jg     0x415b86
  415bf9:	aad    0x2
  415bfb:	sub    eax,0x75cc1419
  415c00:	les    ebp,FWORD PTR [eax+0x7b]
  415c03:	mov    WORD PTR ds:0xb0cd91d3,?
  415c09:	shl    bh,0x1
  415c0c:	iret   
  415c0d:	mov    eax,ds:0xc8d558b1
  415c12:	dec    edx
  415c13:	cmp    edi,DWORD PTR [edx+0x650b76cd]
  415c19:	int3   
  415c1a:	lods   al,BYTE PTR ds:[esi]
  415c1b:	pop    ss
  415c1c:	leave  
  415c1d:	ja     0x415bf4
  415c1f:	repnz mov DWORD PTR ds:0xf529d2ae,ecx
  415c26:	xchg   esp,eax
  415c27:	popf   
  415c28:	inc    ebp
  415c29:	jnp    0x415ca9
  415c2b:	lahf   
  415c2c:	cmp    DWORD PTR [ebp-0x779e8f63],ebp
  415c32:	daa    
  415c33:	cmc    
  415c34:	test   eax,0x8a947ef7
  415c39:	mov    al,0x82
  415c3b:	fwait
  415c3c:	pop    ebp
  415c3d:	(bad)  
  415c3e:	dec    edi
  415c3f:	loop   0x415c9a
  415c41:	adc    ah,bh
  415c43:	dec    esp
  415c44:	or     eax,0x9ec879e4
  415c49:	popa   
  415c4a:	mov    ds:0xce041b2f,al
  415c4f:	or     bl,ch
  415c51:	pop    ss
  415c52:	and    esi,DWORD PTR [edx-0x21e15db3]
  415c58:	ss stos DWORD PTR es:[edi],eax
  415c5a:	or     al,0x2b
  415c5c:	adc    cl,BYTE PTR [esi]
  415c5e:	sbb    eax,0x48d85dcd
  415c63:	mov    ah,0x9d
  415c65:	in     eax,dx
  415c66:	xchg   edi,eax
  415c67:	mov    ch,0x4a
  415c69:	or     edi,DWORD PTR [edx]
  415c6b:	test   eax,0x63fcfd78
  415c70:	jbe    0x415c25
  415c72:	and    ecx,DWORD PTR [eax-0x60]
  415c75:	sbb    DWORD PTR ds:0xbc634bb,esp
  415c7b:	pop    ebx
  415c7c:	cmp    ah,BYTE PTR [eax+0x18]
  415c7f:	xor    bh,BYTE PTR [eax-0x4bf809ac]
  415c85:	stc    
  415c86:	nop
  415c87:	sub    eax,DWORD PTR [ebx]
  415c89:	push   es
  415c8a:	mov    ch,0xaf
  415c8c:	push   cs
  415c8d:	add    al,0x94
  415c8f:	ins    BYTE PTR es:[edi],dx
  415c90:	mov    ecx,0xbd2cc9ef
  415c95:	and    eax,0xc51ce31f
  415c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c9b:	inc    esi
  415c9c:	mov    WORD PTR [ebx-0xd545779],ss
  415ca2:	push   cs
  415ca3:	lahf   
  415ca4:	mov    BYTE PTR [eax],cl
  415ca6:	or     al,0xc1
  415ca8:	daa    
  415ca9:	mov    edx,0x95bff85c
  415cae:	cmp    ebp,eax
  415cb0:	je     0x415cbb
  415cb2:	aas    
  415cb3:	pop    edi
  415cb4:	lahf   
  415cb5:	mov    ah,0xf
  415cb7:	xor    BYTE PTR [ecx+ebx*8+0x19],bl
  415cbb:	scas   eax,DWORD PTR es:[edi]
  415cbc:	sbb    eax,0x804dabeb
  415cc1:	push   edi
  415cc2:	jle    0x415d3f
  415cc4:	mov    eax,ds:0x4be6454a
  415cc9:	mov    ecx,0x93aea895
  415cce:	daa    
  415ccf:	push   ebp
  415cd0:	retf   
  415cd1:	fdivr  st,st(5)
  415cd3:	sti    
  415cd4:	cs mov edx,0x4ec31660
  415cda:	pushf  
  415cdb:	or     ah,BYTE PTR [esi-0x63]
  415cde:	popa   
  415cdf:	nop
  415ce0:	call   0x4b951975
  415ce5:	adc    DWORD PTR [eax+ebp*8+0x6a],0xffffffb6
  415cea:	jl     0x415ce0
  415cec:	dec    esi
  415ced:	push   cs
  415cee:	add    DWORD PTR [esi+0xd26e129],0x98a4638a
  415cf8:	xor    eax,0xebde516a
  415cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cfe:	ds ss leave 
  415d01:	in     al,dx
  415d02:	sbb    eax,DWORD PTR [edi-0x1bc4e219]
  415d08:	(bad)  
  415d09:	adc    eax,0x3b3a5d8c
  415d0e:	and    DWORD PTR [eax-0x5b],ecx
  415d11:	xchg   ebx,eax
  415d12:	add    esp,DWORD PTR [edi-0xc]
  415d15:	adc    eax,0xcc55451f
  415d1a:	push   esp
  415d1b:	mov    ds:0x8ff81587,eax
  415d20:	xchg   BYTE PTR ss:[edx],bh
  415d23:	jmp    0x7607:0xdbe4eac7
  415d2a:	sbb    DWORD PTR [ebx+edi*1+0xeeb0bd1],0x92b45dc8
  415d35:	lds    edx,FWORD PTR [ebp+0x3c9d8248]
  415d3b:	pop    ecx
  415d3c:	sti    
  415d3d:	sbb    BYTE PTR ds:[edx-0x73],cl
  415d41:	int    0x38
  415d43:	(bad)  
  415d44:	mov    fs,WORD PTR [edx-0x7e]
  415d47:	sbb    eax,0xc60d77ba
  415d4c:	fistp  QWORD PTR [edi-0x70]
  415d4f:	test   eax,0xaaad60b9
  415d54:	(bad)  [ebp+0x30]
  415d57:	mov    ah,0x69
  415d59:	lea    edi,[esi+0x63]
  415d5c:	or     BYTE PTR [ebp-0x5e],bl
  415d5f:	sbb    ch,dh
  415d61:	outs   dx,BYTE PTR ds:[esi]
  415d62:	inc    ebp
  415d63:	out    0xe4,eax
  415d65:	test   DWORD PTR [eax+0x74],0x72e98788
  415d6c:	jae    0x415d4a
  415d6e:	mov    cl,BYTE PTR [esi+ebp*1+0x41]
  415d72:	xor    ecx,DWORD PTR [eax-0x54]
  415d75:	shl    BYTE PTR [edi+0x5dfd9ecd],cl
  415d7b:	test   DWORD PTR [esi+0x17],ebx
  415d7e:	call   0xd3c:0x6f97a00f
  415d85:	xchg   ebp,eax
  415d86:	push   0x65
  415d88:	in     al,dx
  415d89:	aam    0xd2
  415d8b:	add    ebx,DWORD PTR [eax]
  415d8d:	push   0xffffffe5
  415d8f:	je     0x415dd8
  415d91:	lock cwde 
  415d93:	sub    BYTE PTR [ecx+0x2b8c1f57],0x2a
  415d9a:	dec    edi
  415d9b:	jbe    0x415d4d
  415d9d:	sub    DWORD PTR [ebp+0x3d],esp
  415da0:	xchg   edi,eax
  415da1:	(bad)  
  415da2:	lods   al,BYTE PTR ds:[esi]
  415da3:	xor    ah,ch
  415da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da6:	xchg   ebx,eax
  415da7:	movups xmm6,xmm7
  415daa:	(bad)  
  415dab:	enter  0x71d5,0xd4
  415daf:	lock sbb eax,esi
  415db2:	and    eax,0x531eebed
  415db7:	push   esi
  415db8:	push   ecx
  415db9:	inc    eax
  415dba:	cmp    BYTE PTR [ebx-0x54dcbb29],ah
  415dc0:	mov    dl,0xe
  415dc2:	push   ds
  415dc3:	mov    dh,0xf2
  415dc5:	add    bh,BYTE PTR [ebx]
  415dc7:	out    0x9f,al
  415dc9:	sub    esi,DWORD PTR [ebx]
  415dcb:	sbb    BYTE PTR [ebx],0x94
  415dce:	xchg   esp,eax
  415dcf:	push   cs
  415dd0:	int    0x1e
  415dd2:	xchg   esp,eax
  415dd3:	stos   DWORD PTR es:[edi],eax
  415dd4:	jbe    0x415df1
  415dd6:	dec    ecx
  415dd7:	sub    bh,dh
  415dd9:	into   
  415dda:	mov    al,0xc0
  415ddc:	rcr    BYTE PTR [ebp-0x307046e4],0x5d
  415de3:	pop    edi
  415de4:	push   esp
  415de5:	sti    
  415de6:	or     BYTE PTR [edx+0xa],bh
  415de9:	fcom   QWORD PTR [esi]
  415deb:	fmul   st,st(1)
  415ded:	into   
  415dee:	shr    BYTE PTR [edi-0x582aba4],0x99
  415df5:	in     eax,0x47
  415df7:	cmp    bh,BYTE PTR [edx+ebp*4-0x44]
  415dfb:	ja     0x415dbb
  415dfd:	push   ds
  415dfe:	cmp    BYTE PTR [esi+0x34],ah
  415e01:	xchg   esp,eax
  415e02:	int3   
  415e03:	mov    gs,WORD PTR [ecx-0x4f190f00]
  415e09:	xchg   ebx,eax
  415e0a:	push   cs
  415e0b:	leave  
  415e0c:	jge    0x415e05
  415e0e:	push   ds
  415e0f:	mov    ebp,0x9e2d23eb
  415e14:	outs   dx,DWORD PTR ds:[esi]
  415e15:	cwde   
  415e16:	ja     0x415e37
  415e18:	jno    0x415de4
  415e1a:	pushf  
  415e1b:	fwait
  415e1c:	stc    
  415e1d:	mov    esi,0xf148f659
  415e22:	out    dx,eax
  415e23:	push   ebp
  415e25:	mov    WORD PTR [esi-0x11],cs
  415e28:	pop    ebx
  415e29:	cdq    
  415e2a:	jns    0x415de4
  415e2c:	aas    
  415e2d:	test   DWORD PTR [edi+ebx*4],0xe2533216
  415e34:	jbe    0x415ddf
  415e36:	jmp    0x7fac:0x8495908b
  415e3d:	fistp  DWORD PTR [edx+eax*2+0x5c63e658]
  415e44:	out    0x3b,eax
  415e46:	retf   
  415e47:	fsubr  st,st(7)
  415e49:	jns    0x415e7c
  415e4b:	xlat   BYTE PTR ds:[ebx]
  415e4c:	and    edi,edx
  415e4e:	js     0x415e46
  415e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e51:	xchg   edi,eax
  415e52:	aas    
  415e53:	and    al,0x71
  415e55:	out    0x2,eax
  415e57:	das    
  415e58:	cmp    eax,0x74be8da4
  415e5d:	inc    esp
  415e5e:	loop   0x415e82
  415e60:	not    BYTE PTR [edi-0x618f4661]
  415e66:	lmsw   WORD PTR [ebx]
  415e69:	hlt    
  415e6a:	rcr    DWORD PTR [ebp-0x4441c10],0x99
  415e71:	push   ecx
  415e72:	push   ecx
  415e73:	lock jmp 0x415e85
  415e76:	icebp  
  415e77:	mov    bl,0xd1
  415e79:	lahf   
  415e7a:	ins    BYTE PTR es:[edi],dx
  415e7b:	imul   ecx,esi,0xffffffef
  415e7e:	or     bh,BYTE PTR [esi-0x59299ba7]
  415e84:	inc    eax
  415e85:	sub    BYTE PTR [edx+ebp*1+0x248c4c93],ah
  415e8c:	jmp    0x415e1d
  415e8e:	scas   eax,DWORD PTR es:[edi]
  415e8f:	ret    0x8c45
  415e92:	push   ebp
  415e93:	div    BYTE PTR [ebp+0xe]
  415e96:	mov    ch,0xd1
  415e98:	xor    eax,ecx
  415e9a:	cmp    DWORD PTR [edx],edx
  415e9c:	lock sbb BYTE PTR [edi+0x165f1140],dh
  415ea3:	add    al,dh
  415ea5:	loop   0x415ecf
  415ea7:	mov    eax,0x9b0bf55e
  415eac:	leave  
  415ead:	mov    ecx,0xd95dd4ad
  415eb2:	push   ecx
  415eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb4:	and    eax,0x30cd8ff2
  415eb9:	and    eax,0x9642f499
  415ebe:	xchg   ecx,eax
  415ebf:	and    edx,edi
  415ec1:	sbb    ebx,DWORD PTR [eax+0x10ecdfad]
  415ec7:	(bad)  
  415ec8:	mov    al,0xbd
  415eca:	jl     0x415eb4
  415ecc:	stos   BYTE PTR es:[edi],al
  415ecd:	jno    0x415e63
  415ecf:	mov    ds:0x38a4fef6,eax
  415ed4:	sub    DWORD PTR [ebx-0x2a],0x37
  415ed8:	shr    DWORD PTR [ecx],0xdf
  415edb:	es retf 0x8269
  415edf:	or     esp,DWORD PTR [esi+0x3a]
  415ee2:	push   es
  415ee3:	pop    eax
  415ee4:	lock adc eax,0xe0bb58e5
  415eea:	push   es
  415eeb:	loop   0x415f30
  415eed:	clc    
  415eee:	mov    ch,0x23
  415ef1:	repnz test DWORD PTR [edx],ecx
  415ef4:	mov    ecx,0x8e0f86e0
  415ef9:	nop
  415efa:	sub    eax,0x490ba61d
  415eff:	or     eax,0x62db1e4f
  415f04:	mov    bh,0xd6
  415f06:	mov    edi,0x39f68c43
  415f0b:	rcl    BYTE PTR [esi+0x6],1
  415f0e:	mov    ebp,0xefd913ae
  415f13:	ins    DWORD PTR es:[edi],dx
  415f14:	push   0xaddb379e
  415f19:	sbb    BYTE PTR [edx-0xf],al
  415f1c:	jecxz  0x415f2e
  415f1e:	pop    ecx
  415f1f:	cli    
  415f20:	fmul   QWORD PTR [ebx+0x741e4d5e]
  415f26:	lds    edx,FWORD PTR [eax-0x387161df]
  415f2c:	ficom  DWORD PTR [edx-0x14922ead]
  415f32:	add    DWORD PTR [edi+esi*1-0xd906bef],ebp
  415f39:	add    eax,0x4d9e3470
  415f3e:	sub    eax,0xc5e14b22
  415f43:	mov    edi,0x27b80bd1
  415f48:	mov    esi,0x2b9c044e
  415f4d:	xor    BYTE PTR [ebx-0x419307a8],0xd1
  415f54:	inc    ebp
  415f55:	rcl    DWORD PTR [edi+0x30],0x6
  415f59:	(bad)  [ebp-0x745706d0]
  415f5f:	sub    ecx,eax
  415f61:	push   edi
  415f62:	scas   eax,DWORD PTR es:[edi]
  415f63:	fwait
  415f64:	push   edx
  415f65:	fwait
  415f66:	bound  ebp,QWORD PTR [edx-0x41129f04]
  415f6c:	sbb    BYTE PTR [esi+edi*8],0xc6
  415f70:	and    ch,BYTE PTR [esp+eiz*4+0x565d8332]
  415f77:	loope  0x415faf
  415f79:	jne    0x415f11
  415f7b:	mov    ds:0x408e8e5f,eax
  415f80:	dec    DWORD PTR [ecx]
  415f82:	add    BYTE PTR [esp+eax*1],al
  415f85:	enter  0xcfd0,0xc7
  415f89:	shl    al,0x9
  415f8c:	pop    ds
  415f8d:	jl     0x415feb
  415f8f:	rcr    DWORD PTR [edi-0xb],1
  415f92:	aad    0xea
  415f94:	push   edi
  415f95:	sti    
  415f96:	push   edx
  415f97:	mov    ebp,DWORD PTR ss:[ebx-0x6283199f]
  415f9e:	lock repnz cmp bh,BYTE PTR [eax]
  415fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fa3:	jecxz  0x415f2d
  415fa5:	pop    edi
  415fa6:	adc    DWORD PTR [ebx],eax
  415fa8:	xchg   ecx,eax
  415fa9:	pushf  
  415faa:	dec    esi
  415fab:	dec    eax
  415fac:	fs pop ds
  415fae:	sbb    edi,ebp
  415fb0:	rol    DWORD PTR [eax+0x4d],cl
  415fb3:	add    eax,0x4528de09
  415fb8:	jae    0x415f7e
  415fba:	test   eax,0xe4933328
  415fbf:	push   ebp
  415fc0:	xor    eax,DWORD PTR [ebx]
  415fc2:	push   ebp
  415fc3:	fwait
  415fc4:	mov    edx,0x4e9c8757
  415fc9:	xor    edi,DWORD PTR [edx+ebp*4-0x79fee107]
  415fd0:	inc    esi
  415fd1:	test   dl,0x52
  415fd4:	xor    esp,DWORD PTR [edi+0x68]
  415fd7:	sub    dh,al
  415fd9:	clc    
  415fda:	inc    eax
  415fdb:	pusha  
  415fdc:	gs aad 0xbe
  415fdf:	(bad)  
  415fe0:	dec    bl
  415fe2:	mov    bh,0x30
  415fe4:	sub    DWORD PTR [ebx+0xc],eax
  415fe7:	or     BYTE PTR [edi+0x404aeeb6],ah
  415fed:	ins    BYTE PTR es:[edi],dx
  415fee:	dec    ebp
  415fef:	enter  0x4eeb,0x53
  415ff3:	mov    bh,0x67
  415ff5:	test   al,0x1e
  415ff7:	mov    edi,0xe57a0a78
  415ffc:	ret    
  415ffd:	les    esp,FWORD PTR [esi+edi*4]
  416000:	or     al,BYTE PTR [eax-0x6e]
  416003:	add    eax,0x47a47088
  416008:	addr16 push ecx
  41600a:	(bad)  
  41600b:	mov    bl,BYTE PTR [edi+0xf66cff7]
  416011:	inc    ebp
  416012:	out    dx,eax
  416013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416014:	push   esp
  416015:	adc    eax,0x169200f7
  41601a:	cmp    BYTE PTR [ebp-0x2f],dl
  41601d:	or     eax,0x92ec7513
  416022:	sub    ebx,DWORD PTR [eax+eax*2-0xa]
  416026:	mov    cs,WORD PTR [ebp-0x48]
  416029:	push   edx
  41602a:	fidivr DWORD PTR [ebp+0x1379262e]
  416030:	(bad)  
  416031:	out    dx,al
  416032:	adc    ah,BYTE PTR [eax]
  416034:	xchg   BYTE PTR [edx-0x1ae426d3],dl
  41603a:	aam    0xbb
  41603c:	mov    ebx,ebp
  41603e:	retf   
  41603f:	(bad)  
  416041:	jl     0x416015
  416043:	lahf   
  416044:	add    cl,BYTE PTR ss:[eax+0x1e503775]
  41604b:	loope  0x416033
  41604d:	loope  0x416081
  41604f:	or     BYTE PTR [ebx-0x38c85a45],cl
  416055:	pop    esp
  416056:	cmp    BYTE PTR [ebp-0x1d],0xc8
  41605a:	shl    DWORD PTR [eax+0x51c6ebd4],cl
  416060:	add    al,0xc8
  416062:	popa   
  416063:	paddsw mm0,QWORD PTR [ebx]
  416066:	arpl   WORD PTR [esi+0x182de813],bp
  41606c:	jb     0x4160cc
  41606e:	inc    ecx
  41606f:	daa    
  416070:	cmp    eax,0xe69cd348
  416075:	or     ebx,DWORD PTR [esi+0xe]
  416078:	stc    
  416079:	popf   
  41607a:	leave  
  41607b:	jmp    0x4160c1
  41607d:	dec    esi
  41607e:	inc    esp
  41607f:	loopne 0x4160ce
  416081:	scas   al,BYTE PTR es:[edi]
  416082:	xchg   esi,eax
  416083:	or     ah,0x4c
  416086:	jmp    0x4160a5
  416088:	cdq    
  416089:	aad    0xa3
  41608b:	(bad)  
  41608c:	js     0x416017
  41608e:	outs   dx,BYTE PTR ds:[esi]
  41608f:	cmp    ch,ah
  416091:	stc    
  416092:	(bad)  
  416093:	and    eax,0xadbe29c8
  416098:	xor    BYTE PTR [ecx+eax*2],dl
  41609b:	dec    ecx
  41609c:	addr16 cmc 
  41609e:	fstp   DWORD PTR [ebx-0x55]
  4160a1:	push   edx
  4160a2:	mov    ch,0xfa
  4160a4:	sti    
  4160a5:	adc    al,0xd1
  4160a7:	gs xor eax,0xe5aceb96
  4160ad:	outs   dx,BYTE PTR ds:[esi]
  4160ae:	jno    0x4160c2
  4160b0:	in     al,0x56
  4160b2:	cwde   
  4160b3:	fdivrp st(3),st
  4160b5:	push   edi
  4160b6:	xchg   edx,edi
  4160b8:	cmp    DWORD PTR [ecx-0x5dea49e9],edx
  4160be:	cmp    al,0xeb
  4160c0:	add    edi,DWORD PTR [ebx+0x54ace2a]
  4160c6:	push   eax
  4160c7:	loop   0x416131
  4160c9:	and    DWORD PTR [ecx+esi*2],eax
  4160cc:	cli    
  4160cd:	adc    eax,0x1b91e96c
  4160d2:	adc    esi,edi
  4160d4:	and    DWORD PTR [ecx+ebp*1],esi
  4160d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d8:	jb     0x416116
  4160da:	mov    eax,0x9552232d
  4160df:	or     BYTE PTR [ebx+0x58cf5282],cl
  4160e5:	xchg   DWORD PTR [esi],edi
  4160e7:	pop    eax
  4160e8:	and    eax,DWORD PTR [ebx]
  4160ea:	in     al,0xcb
  4160ec:	push   edi
  4160ed:	fsubr  QWORD PTR [edi+0x6a]
  4160f0:	(bad)  
  4160f1:	mov    ebx,0x826ce181
  4160f6:	inc    ebx
  4160f7:	jo     0x4160be
  4160f9:	cld    
  4160fa:	sub    dl,cl
  4160fc:	push   esi
  4160fd:	addr16 sub ebp,esp
  416100:	ror    BYTE PTR [ecx+0x62],0xee
  416104:	jle    0x416103
  416106:	fist   WORD PTR [ecx-0x7b16be2d]
  41610c:	mov    edi,0x2328580e
  416111:	in     al,0x51
  416113:	aam    0x48
  416115:	mov    cx,dx
  416118:	pop    ecx
  416119:	std    
  41611a:	add    DWORD PTR [edx+0x5a],edi
  41611d:	mov    esi,0x75234681
  416122:	mov    al,0xc2
  416124:	loop   0x4160f0
  416126:	aas    
  416127:	and    eax,0x2b14870d
  41612c:	inc    edx
  41612d:	int3   
  41612e:	(bad)  
  41612f:	(bad)  
  416131:	dec    esi
  416133:	ss shr cl,1
  416136:	mov    ds:0xa32a15fe,eax
  41613b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41613c:	add    BYTE PTR [ebp+esi*2-0x1b666f71],ch
  416143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416144:	retf   
  416145:	mov    ah,0x9
  416147:	mov    WORD PTR [ecx-0x1c],es
  41614a:	add    al,0x76
  41614c:	imul   esp,DWORD PTR [edx+0x3cdaac52],0x3520d960
  416156:	popa   
  416157:	scas   al,BYTE PTR es:[edi]
  416158:	es cli 
  41615a:	push   ss
  41615b:	add    DWORD PTR [ecx],0x5778f2de
  416161:	push   es
  416162:	push   esp
  416163:	call   0x82be1562
  416168:	mov    ds:0xf3166ed6,al
  41616d:	xor    ch,ah
  41616f:	test   al,0x6
  416171:	call   0xc7be:0x82d7c15c
  416178:	adc    eax,DWORD PTR [eax+0x65deed53]
  41617e:	cld    
  41617f:	daa    
  416180:	iret   
  416181:	mov    esp,0x6c6bb866
  416186:	push   ecx
  416187:	adc    eax,0x868aad81
  41618c:	test   esi,eax
  41618e:	xchg   esp,eax
  41618f:	dec    ebp
  416190:	test   al,0xe8
  416192:	retf   
  416193:	arpl   WORD PTR [edx-0x19],sp
  416196:	jmp    DWORD PTR [edi]
  416198:	dec    esi
  416199:	inc    ebx
  41619a:	sub    edx,DWORD PTR [edi-0x64]
  41619d:	out    dx,al
  41619e:	dec    ebx
  41619f:	inc    edx
  4161a0:	fild   DWORD PTR [esi]
  4161a2:	push   edx
  4161a3:	sbb    al,0x12
  4161a5:	inc    ebp
  4161a6:	xor    DWORD PTR [ecx+0x5f],ebx
  4161a9:	mov    al,ds:0x48883c4d
  4161ae:	adc    al,0x71
  4161b0:	loopne 0x41620c
  4161b2:	shl    DWORD PTR [esi+eax*1+0x61bd9fad],1
  4161b9:	in     al,dx
  4161ba:	mov    BYTE PTR [ebx],ch
  4161bc:	inc    ebx
  4161bd:	cmp    eax,0xfa5f67a1
  4161c2:	xchg   edi,eax
  4161c3:	mov    ebp,0xd16e5440
  4161c8:	rcl    dl,1
  4161ca:	call   edx
  4161cc:	jmp    0x7b13cc97
  4161d1:	lea    ebx,[edi+0x2e3c31e4]
  4161d7:	enter  0xfdc7,0x43
  4161db:	add    ah,bh
  4161dd:	push   ss
  4161de:	out    0x67,eax
  4161e0:	add    ch,al
  4161e2:	adc    DWORD PTR [ecx+0x1bb0b4da],ecx
  4161e8:	loopne 0x4161db
  4161ea:	jecxz  0x41620b
  4161ec:	jb     0x416188
  4161ee:	pop    ecx
  4161ef:	inc    ecx
  4161f0:	ror    bl,0x87
  4161f3:	cmp    esp,DWORD PTR [ebp-0x5b0049b5]
  4161f9:	ins    BYTE PTR es:[edi],dx
  4161fa:	or     al,0x8c
  4161fc:	mov    al,0xe5
  4161fe:	push   es
  4161ff:	or     eax,0xe8b34775
  416204:	shl    ebp,cl
  416206:	or     ebx,DWORD PTR [ebp-0x47]
  416209:	stc    
  41620a:	push   ecx
  41620b:	into   
  41620c:	jne    0x4161bb
  41620e:	pushf  
  41620f:	mov    ah,BYTE PTR [ebx-0x3e]
  416212:	stos   BYTE PTR es:[edi],al
  416213:	inc    esp
  416214:	inc    ebx
  416215:	dec    edx
  416216:	or     eax,0x946f4645
  41621b:	mov    esi,0xd3b12402
  416220:	xor    eax,0x99a10918
  416225:	rol    BYTE PTR [ebx],0x21
  416228:	outs   dx,BYTE PTR ds:[esi]
  416229:	inc    ebx
  41622a:	pop    esi
  41622b:	and    esi,edx
  41622d:	imul   DWORD PTR [ecx-0x49]
  416230:	mov    DWORD PTR [eax+0x3a89359e],edx
  416236:	push   eax
  416237:	xchg   ebp,eax
  416238:	(bad)  
  416239:	jne    0x416218
  41623b:	nop
  41623c:	xchg   edi,eax
  41623d:	sbb    BYTE PTR [ebx],bh
  41623f:	mov    dh,0xde
  416241:	add    ecx,DWORD PTR [ebp-0x34]
  416244:	in     eax,dx
  416245:	push   edi
  416246:	inc    ebp
  416247:	pop    es
  416248:	sbb    al,0xa7
  41624a:	repnz dec ebx
  41624c:	lea    eax,[esi+0x6d]
  41624f:	es sbb eax,0x97f98dc5
  416255:	repnz enter 0x3017,0xe0
  41625a:	fcmovbe st,st(6)
  41625c:	and    DWORD PTR [ebp-0x38d05338],edi
  416262:	mov    esp,0x30f1d6e7
  416267:	jnp    0x416235
  416269:	mov    al,0x50
  41626b:	test   edi,eax
  41626d:	loope  0x4162d9
  41626f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416270:	inc    ecx
  416271:	(bad)  
  416272:	cmovo  ebp,DWORD PTR [eax+0x1599282e]
  416279:	hlt    
  41627a:	add    ch,bl
  41627c:	fsub   QWORD PTR [edx]
  41627e:	xchg   edi,eax
  41627f:	add    dl,BYTE PTR ds:0x4c1eb1ea
  416285:	jne    0x41625a
  416287:	(bad)  
  416289:	dec    ecx
  41628a:	push   esp
  41628b:	mov    esp,0x35d45c68
  416290:	jp     0x4162a8
  416292:	popf   
  416293:	std    
  416294:	push   ecx
  416295:	in     al,0x7d
  416297:	sub    BYTE PTR [ebp+0x31d01825],al
  41629d:	sub    DWORD PTR [eax-0x45f315af],0xffffff84
  4162a4:	push   0x66
  4162a6:	mov    ds:0xe22fe6f,eax
  4162ab:	cmp    cl,BYTE PTR [eax-0xd]
  4162ae:	int    0xef
  4162b0:	outs   dx,DWORD PTR ds:[esi]
  4162b1:	mov    ch,0xa6
  4162b3:	adc    ecx,ebx
  4162b5:	push   esi
  4162b6:	dec    BYTE PTR [edx+0x2ffdf30b]
  4162bc:	pop    ss
  4162bd:	and    al,0xff
  4162bf:	or     bh,BYTE PTR [ecx]
  4162c1:	inc    esi
  4162c2:	cmp    bh,dh
  4162c4:	ins    BYTE PTR es:[edi],dx
  4162c5:	daa    
  4162c6:	mov    ch,0x3
  4162c8:	adc    DWORD PTR [eax-0x66f8dba1],esp
  4162ce:	xchg   BYTE PTR [edx+0x62],al
  4162d1:	ret    
  4162d2:	stos   DWORD PTR es:[edi],eax
  4162d3:	stc    
  4162d4:	std    
  4162d5:	int    0x46
  4162d7:	mov    dh,0x39
  4162d9:	cmp    al,0x96
  4162db:	sub    BYTE PTR [edx-0x5820df33],bh
  4162e1:	inc    ebp
  4162e2:	pop    edx
  4162e3:	dec    esi
  4162e4:	xchg   esp,eax
  4162e5:	cli    
  4162e6:	xor    dl,dh
  4162e8:	out    0xa2,eax
  4162ea:	push   edi
  4162eb:	mov    ebx,0xd4857d28
  4162f0:	cmp    ecx,ebx
  4162f2:	dec    eax
  4162f3:	fnstsw WORD PTR [edx-0x79]
  4162f6:	xor    ah,BYTE PTR [edi]
  4162f8:	xchg   esp,eax
  4162f9:	and    BYTE PTR [ebx+0x1b],ah
  4162fc:	cmp    ecx,DWORD PTR [edx+0x18]
  4162ff:	jge    0x416321
  416301:	pop    edi
  416302:	mov    WORD PTR [edi],?
  416304:	dec    DWORD PTR [ebx+0x3cd37d0e]
  41630a:	push   edi
  41630b:	sub    eax,ebp
  41630d:	and    esp,DWORD PTR [esi]
  41630f:	in     al,dx
  416310:	sbb    DWORD PTR [esi+0x2897edad],ecx
  416316:	hlt    
  416317:	push   eax
  416318:	fisubr DWORD PTR [ecx+0x7c]
  41631b:	into   
  41631c:	loopne 0x41631b
  41631e:	ss or  edx,ebx
  416321:	in     eax,0x5e
  416323:	push   edi
  416324:	push   ebx
  416325:	fstp   DWORD PTR [edx-0x532136a6]
  41632b:	fcmovnb st,st(0)
  41632d:	ret    
  41632e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41632f:	adc    BYTE PTR [eax-0x401f7084],al
  416335:	test   DWORD PTR [esi+0x70a9b8c4],eax
  41633b:	xlat   BYTE PTR ds:[ebx]
  41633c:	xor    ebx,DWORD PTR [ebx]
  41633e:	push   ds
  41633f:	and    DWORD PTR [edx],edx
  416341:	jge    0x416304
  416343:	test   al,0xf2
  416345:	ret    0x142
  416348:	and    edi,DWORD PTR [ecx-0x1425ad37]
  41634e:	js     0x4163a2
  416350:	xor    al,0x50
  416352:	int    0x61
  416354:	data16 and dl,BYTE PTR es:[ecx+0x4bceab73]
  41635c:	ins    DWORD PTR es:[edi],dx
  41635d:	fwait
  41635e:	sti    
  41635f:	out    dx,eax
  416360:	or     al,0x21
  416362:	out    0x12,eax
  416364:	outs   dx,BYTE PTR ds:[esi]
  416365:	leave  
  416366:	dec    eax
  416367:	mov    es,WORD PTR [ebx]
  416369:	and    al,BYTE PTR [edx+0x5e52a1cc]
  41636f:	shl    DWORD PTR [eax],0x59
  416372:	push   edi
  416373:	in     al,dx
  416374:	inc    ebx
  416375:	push   ss
  416376:	stc    
  416377:	cmp    BYTE PTR [edi-0x5f],0xa7
  41637b:	xor    bh,BYTE PTR [eax+0x44]
  41637e:	pop    es
  41637f:	dec    edi
  416380:	mov    BYTE PTR [ebx],bh
  416382:	call   0xdcfe:0x747be584
  416389:	lock cdq 
  41638b:	mov    eax,0xc877de53
  416390:	in     al,dx
  416391:	dec    ebp
  416392:	adc    esp,DWORD PTR [edi]
  416394:	(bad)
  416398:	cwde   
  416399:	or     DWORD PTR [edx+ebp*8+0x1b],edi
  41639d:	sbb    BYTE PTR [ebx],cl
  41639f:	aad    0x78
  4163a1:	inc    ebp
  4163a2:	scas   al,BYTE PTR es:[edi]
  4163a3:	cwde   
  4163a4:	or     al,0xdd
  4163a6:	xchg   ebx,eax
  4163a7:	cmp    BYTE PTR [edi],dl
  4163a9:	fstp   QWORD PTR [esi+ebx*8]
  4163ac:	ds pop ebp
  4163ae:	inc    eax
  4163af:	into   
  4163b0:	mov    esi,0xda0a3179
  4163b5:	inc    ebp
  4163b6:	(bad)  
  4163b7:	sbb    esi,edx
  4163b9:	mov    edx,0xdbfde683
  4163be:	not    bl
  4163c0:	and    ecx,esi
  4163c2:	adc    bl,ah
  4163c4:	mov    ds:0x4211c440,eax
  4163c9:	jno    0x4163a9
  4163cb:	and    DWORD PTR [edx-0xe],0xa5dc7dd7
  4163d2:	aam    0xd4
  4163d4:	aas    
  4163d5:	leave  
  4163d6:	clc    
  4163d7:	ret    
  4163d8:	shl    BYTE PTR [edx+0x5fd31f1b],cl
  4163de:	push   ds
  4163df:	sub    eax,0xf29577bf
  4163e4:	mov    eax,0xe740e05e
  4163e9:	push   cx
  4163eb:	inc    edx
  4163ec:	mov    dl,BYTE PTR [eax-0x79]
  4163ef:	aaa    
  4163f0:	fcomp  DWORD PTR [edx-0x65]
  4163f3:	popf   
  4163f4:	(bad)  
  4163f6:	add    al,BYTE PTR [eax]
  4163f8:	mov    ecx,0xf3abb8c4
  4163fd:	iret   
  4163fe:	cli    
  4163ff:	push   ebx
  416400:	sub    BYTE PTR [ecx-0x67e51757],ah
  416406:	pushf  
  416407:	ret    0x4a0e
  41640a:	in     eax,dx
  41640b:	mov    ds:0x5e38abd1,eax
  416410:	push   esi
  416411:	lods   al,BYTE PTR ds:[esi]
  416412:	adc    dl,BYTE PTR [edx-0x46b40df4]
  416418:	mov    ebp,0x56310750
  41641d:	rol    BYTE PTR [esi],1
  41641f:	push   ebx
  416420:	jb     0x416469
  416422:	mov    ebp,0x268ce6e1
  416427:	lea    ecx,[ebx-0x3a]
  41642a:	jmp    0x40e4f213
  41642f:	retf   0x4e5b
  416432:	pop    ecx
  416433:	mov    bh,0x1
  416435:	loope  0x416401
  416437:	sahf   
  416438:	or     DWORD PTR [ecx],esp
  41643a:	inc    ebp
  41643b:	inc    esp
  41643c:	into   
  41643d:	pop    eax
  41643e:	cmp    cl,BYTE PTR [eax-0x51ed183]
  416444:	pop    es
  416445:	js     0x4163f9
  416447:	dec    ebx
  416448:	pusha  
  416449:	lock cmp eax,0x1e14a0ca
  41644f:	(bad)  
  416450:	xchg   edx,eax
  416451:	or     dl,BYTE PTR [eax-0x123148e3]
  416457:	sbb    al,0xe7
  416459:	mov    al,BYTE PTR [ecx]
  41645b:	inc    ebp
  41645c:	cmp    eax,0x40bea057
  416461:	pushf  
  416462:	pop    esi
  416463:	xchg   esp,ecx
  416465:	mov    al,0x1d
  416467:	test   eax,0x1da82ab1
  41646c:	push   edx
  41646d:	pop    eax
  41646e:	ins    DWORD PTR es:[edi],dx
  41646f:	out    dx,al
  416470:	mov    cl,0x28
  416472:	ss dec ebx
  416474:	stos   DWORD PTR es:[edi],eax
  416475:	das    
  416476:	bound  esp,QWORD PTR [edi]
  416478:	les    esi,FWORD PTR [ecx+0x34]
  41647b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41647c:	push   cs
  41647d:	stc    
  41647e:	add    bh,BYTE PTR es:[edx]
  416481:	jno    0x416441
  416483:	jne    0x416415
  416485:	(bad)  
  416487:	jmp    0xbde1:0x46cea9dc
  41648e:	cmp    ebx,DWORD PTR ds:0x973b89b5
  416494:	xchg   ecx,eax
  416495:	aas    
  416496:	scas   eax,DWORD PTR es:[edi]
  416497:	je     0x416425
  416499:	xchg   edi,eax
  41649a:	div    BYTE PTR [eax+eiz*2]
  41649d:	out    0x5d,al
  41649f:	mov    dh,0xc7
  4164a1:	into   
  4164a2:	arpl   WORD PTR [ecx],bp
  4164a4:	ret    0x2787
  4164a7:	add    al,dh
  4164a9:	jb     0x41647c
  4164ab:	sbb    BYTE PTR [ebx-0x38],ch
  4164ae:	xor    DWORD PTR [edx],ecx
  4164b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b1:	pop    ebx
  4164b2:	fs xchg edi,ecx
  4164b5:	jle    0x4164a0
  4164b7:	mov    esi,0xee849cc8
  4164bc:	xor    cl,BYTE PTR [edi]
  4164be:	fist   DWORD PTR [edx+0x7d]
  4164c1:	ja     0x416511
  4164c3:	mov    BYTE PTR [ecx+0x54],bh
  4164c6:	nop
  4164c7:	sbb    edi,ebp
  4164c9:	arpl   WORD PTR [ebp+0x0],ax
  4164cc:	cmp    eax,0x2769af60
  4164d1:	ins    DWORD PTR es:[edi],dx
  4164d2:	sub    esp,DWORD PTR [ebx-0x3f52ede4]
  4164d8:	ins    DWORD PTR es:[edi],dx
  4164d9:	(bad)  
  4164da:	cwde   
  4164db:	sub    dl,BYTE PTR [edi-0x7b]
  4164de:	xor    al,0xc0
  4164e0:	ja     0x416516
  4164e2:	pop    eax
  4164e3:	lock (bad) 
  4164e5:	(bad)  
  4164e6:	pop    ecx
  4164e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e8:	ins    BYTE PTR es:[edi],dx
  4164e9:	dec    esp
  4164ea:	icebp  
  4164eb:	xchg   ecx,eax
  4164ec:	fidivr DWORD PTR [eax]
  4164ee:	xchg   BYTE PTR [esi],cl
  4164f0:	add    BYTE PTR ds:0x15d90d57,bl
  4164f6:	out    dx,eax
  4164f7:	cdq    
  4164f8:	ja     0x4164a0
  4164fa:	scas   eax,DWORD PTR es:[edi]
  4164fb:	out    0x73,al
  4164fd:	add    eax,0x630fadd5
  416502:	popa   
  416503:	xchg   ebx,eax
  416504:	and    cl,BYTE PTR [ebx-0x15dd023b]
  41650a:	sub    bh,dh
  41650c:	sub    BYTE PTR [ecx-0xf],bl
  41650f:	mov    dl,BYTE PTR [ecx+0x78809e7b]
  416515:	adc    DWORD PTR [eax-0x5dcbd54],0x23
  41651c:	int    0xe0
  41651e:	sub    DWORD PTR [ebp+edx*1+0x6d4fa720],0x91ff5399
  416529:	xor    DWORD PTR [esi],0xffffffd9
  41652c:	add    DWORD PTR [edi],edx
  41652e:	sub    al,0xef
  416530:	dec    ebx
  416531:	shl    DWORD PTR [esp+ecx*1+0x7667f9eb],0x72
  416539:	stc    
  41653a:	test   DWORD PTR [edi+0x3b],eax
  41653d:	pop    esi
  41653e:	pop    ebp
  41653f:	or     al,0xce
  416541:	inc    eax
  416542:	in     al,dx
  416543:	fs leave 
  416545:	xor    ch,ch
  416547:	add    al,0x9a
  416549:	mov    ebx,0xf9cb77ef
  41654e:	sbb    dl,bl
  416550:	mov    al,ds:0xadbe622c
  416555:	mov    ch,0x89
  416557:	cmc    
  416558:	ss ret 0x10d8
  41655c:	cs add eax,0x4338a143
  416562:	pop    esi
  416563:	mov    esp,esp
  416565:	mov    ds:0x4bf7278b,al
  41656a:	cmp    eax,ebx
  41656c:	pop    es
  41656d:	push   cs
  41656e:	bound  eax,QWORD PTR [ecx-0xcfd6731]
  416574:	aaa    
  416575:	test   eax,0xa1485312
  41657a:	loopne 0x416535
  41657c:	sbb    esi,DWORD PTR [edx+ebp*8+0x4c]
  416580:	pop    ebp
  416581:	xor    cl,cl
  416583:	add    DWORD PTR [eax+ecx*8],edi
  416586:	dec    ecx
  416587:	cmp    DWORD PTR [esi],edx
  416589:	(bad)  
  41658a:	sub    ebp,edx
  41658c:	imul   edi,DWORD PTR [esi+0x13433adc],0x6a
  416593:	mov    ebp,ebx
  416595:	push   ds
  416596:	mov    edx,0xbe57d017
  41659b:	sahf   
  41659c:	adc    ebx,DWORD PTR [ecx-0x18]
  41659f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a0:	mov    dl,ch
  4165a2:	outs   dx,BYTE PTR ds:[esi]
  4165a3:	xor    eax,0x763dcd11
  4165a8:	push   ebx
  4165a9:	out    0xe5,eax
  4165ab:	xor    DWORD PTR ds:0x6dea73e2,edx
  4165b1:	aam    0x65
  4165b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165b4:	test   al,0xd
  4165b6:	stos   BYTE PTR es:[edi],al
  4165b7:	fcomp  QWORD PTR [ebx+esi*2+0x14395af9]
  4165be:	loop   0x4165ab
  4165c0:	mov    BYTE PTR [ebp-0x69],bl
  4165c3:	jns    0x416601
  4165c5:	cmp    al,0xef
  4165c7:	cmp    dl,bl
  4165c9:	mov    ch,0x33
  4165cb:	mov    edx,0xa559a5c9
  4165d0:	adc    al,0xeb
  4165d2:	xor    al,0x42
  4165d4:	inc    ecx
  4165d5:	fwait
  4165d6:	ret    
  4165d7:	popa   
  4165d8:	mov    edx,fs
  4165da:	xchg   ebx,eax
  4165db:	xchg   edi,eax
  4165dc:	xlat   BYTE PTR ds:[ebx]
  4165dd:	(bad)  
  4165de:	add    ebx,DWORD PTR ds:0xf6dfc69f
  4165e4:	add    DWORD PTR [ecx],ecx
  4165e6:	xor    DWORD PTR [esp+eiz*4],0x298a4254
  4165ed:	scas   eax,DWORD PTR es:[edi]
  4165ee:	(bad)  
  4165f0:	xor    eax,0x121ebda7
  4165f5:	push   ds
  4165f6:	jp     0x416619
  4165f8:	les    eax,FWORD PTR [edx]
  4165fa:	push   esp
  4165fb:	test   al,0x1
  4165fd:	xor    eax,0x5c3f6bed
  416602:	adc    eax,0xbfa60d4c
  416607:	test   BYTE PTR [edx+0x1d],bl
  41660a:	mov    al,0xc8
  41660c:	mov    ebx,esp
  41660e:	jns    0x4165b2
  416610:	add    edi,ebx
  416612:	jp     0x41664d
  416614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416615:	xchg   esi,eax
  416616:	dec    edi
  416617:	sub    edx,esi
  416619:	xor    edi,ecx
  41661b:	xchg   BYTE PTR [ebp-0xa5576aa],dh
  416621:	mov    al,ds:0x1b479827
  416626:	stc    
  416627:	pop    edx
  416628:	push   0xa2660ccf
  41662d:	icebp  
  41662e:	lods   al,BYTE PTR ds:[esi]
  41662f:	mov    ah,0x81
  416631:	clc    
  416632:	mov    cl,0xb
  416634:	pop    es
  416635:	test   DWORD PTR [eax+0xb],esi
  416638:	and    eax,0xf4454618
  41663d:	add    eax,DWORD PTR [edi]
  41663f:	inc    edi
  416640:	mov    dl,0x89
  416642:	push   ss
  416643:	aaa    
  416644:	mov    bl,0x31
  416646:	iret   
  416647:	lods   al,BYTE PTR ds:[esi]
  416648:	add    eax,0xb02a1118
  41664d:	rcr    DWORD PTR [edi+0x4e71ac62],cl
  416653:	pop    ebx
  416654:	(bad)  [esp+edi*8-0x7a295089]
  41665b:	inc    edx
  41665c:	scas   eax,DWORD PTR es:[edi]
  41665d:	add    bl,0x4b
  416660:	xchg   ecx,eax
  416661:	test   eax,0x1ee19d7e
  416666:	fnstcw WORD PTR [esi]
  416668:	icebp  
  416669:	dec    esp
  41666a:	mov    ch,0x54
  41666c:	and    dh,BYTE PTR [ecx-0x2f5197d3]
  416672:	push   ebx
  416673:	(bad)  
  416674:	mov    eax,ds:0xe624899f
  416679:	cmp    ecx,DWORD PTR cs:[edx-0x16b5145]
  416680:	addr16 iret 
  416682:	out    0x50,eax
  416684:	mov    esi,DWORD PTR [ebp-0x64]
  416687:	mov    ds:0x9489ff83,al
  41668c:	inc    esi
  41668d:	mov    dl,0x93
  41668f:	jb     0x41661d
  416691:	add    cl,dl
  416693:	(bad)  
  416694:	dec    ebp
  416695:	fistp  WORD PTR [ecx]
  416697:	mov    ch,0xcf
  416699:	jne    0x4166cd
  41669b:	fbstp  TBYTE PTR [edi+0xb6cec56]
  4166a1:	sbb    BYTE PTR [ebx-0x27],0xa6
  4166a5:	sub    edi,DWORD PTR [esi-0x3b]
  4166a8:	stos   DWORD PTR es:[edi],eax
  4166a9:	jb     0x41668e
  4166ab:	mov    al,ds:0x9ee9f29a
  4166b0:	or     dl,BYTE PTR [ebx+0x14]
  4166b3:	pop    ss
  4166b4:	js     0x41664e
  4166b6:	sub    ebx,DWORD PTR gs:[ebp+0x0]
  4166ba:	ds call 0xe7760292
  4166c0:	jmp    0xb815:0x203be40d
  4166c7:	mov    ebp,DWORD PTR [esi]
  4166c9:	lock jge 0x416729
  4166cc:	mov    DWORD PTR [eax+0x2e],eax
  4166cf:	(bad)  
  4166d0:	sti    
  4166d1:	or     BYTE PTR [ebx+0x6e],ah
  4166d4:	push   ss
  4166d5:	jmp    0x41667a
  4166d7:	inc    esi
  4166d8:	mov    ecx,gs
  4166da:	(bad)  
  4166dc:	jmp    0x4166ca
  4166de:	sub    BYTE PTR ds:[edi],0x63
  4166e2:	mov    ds:0xd4d40ff3,eax
  4166e7:	or     edx,DWORD PTR [ecx]
  4166e9:	xchg   edi,eax
  4166ea:	and    eax,0x9e51466f
  4166ef:	mov    ebx,edx
  4166f1:	jnp    0x4166d7
  4166f3:	mov    bl,0x52
  4166f5:	push   esi
  4166f6:	sbb    cl,BYTE PTR [ebx-0x55]
  4166f9:	mov    al,0xfd
  4166fb:	mov    DWORD PTR [eax+0x79],edi
  4166fe:	pop    esi
  4166ff:	inc    eax
  416700:	cmp    eax,0xba60796e
  416705:	aas    
  416706:	ret    
  416707:	ror    DWORD PTR [esi-0x2e3a4673],cl
  41670d:	ret    0xa552
  416710:	in     al,dx
  416711:	dec    ecx
  416712:	adc    BYTE PTR [ecx],0xed
  416715:	std    
  416716:	add    eax,DWORD PTR [ebx]
  416718:	sbb    esi,ebx
  41671a:	inc    edx
  41671b:	(bad)  
  41671c:	ftst   
  41671e:	adc    ebp,DWORD PTR ds:0x749e5793
  416724:	lea    esi,[ebx-0x27]
  416727:	jbe    0x416772
  416729:	loope  0x416785
  41672b:	mov    cl,0x34
  41672d:	and    ecx,edi
  41672f:	jb     0x416746
  416731:	cwde   
  416732:	pop    ecx
  416733:	shr    BYTE PTR [edx-0x51],cl
  416736:	sub    BYTE PTR [edi],cl
  416738:	dec    eax
  416739:	arpl   WORD PTR [edx-0x15],dx
  41673c:	call   DWORD PTR [ebp-0x2e]
  41673f:	in     al,dx
  416740:	aas    
  416741:	test   DWORD PTR [edx+0x54],ebx
  416744:	pop    ss
  416745:	jge    0x416708
  416747:	jns    0x41677a
  416749:	pop    es
  41674a:	and    eax,0x91263f94
  41674f:	sub    al,0x45
  416751:	pop    es
  416752:	loope  0x41670f
  416754:	jo     0x416748
  416756:	sub    DWORD PTR [eax-0x13],0xffffffa4
  41675a:	mov    bh,0xba
  41675c:	or     esi,DWORD PTR ds:0xf227b9f5
  416762:	(bad)  
  416763:	ins    BYTE PTR es:[edi],dx
  416764:	fsubr  st,st(0)
  416766:	outs   dx,DWORD PTR ds:[esi]
  416767:	add    eax,DWORD PTR [edx+0x1a9d8977]
  41676d:	adc    bh,BYTE PTR [ebp-0x5f]
  416770:	cli    
  416771:	jge    0x416730
  416773:	adc    eax,0xdd421859
  416778:	std    
  416779:	in     al,0x3
  41677b:	and    BYTE PTR [eax+ecx*4+0x7d583344],ch
  416782:	xlat   BYTE PTR ds:[ebx]
  416783:	aad    0x89
  416785:	jae    0x416797
  416787:	sub    BYTE PTR [ecx-0x2bbd9f87],cl
  41678d:	ret    0x2ce
  416790:	fmul   DWORD PTR [edi*1+0x42203e52]
  416797:	and    DWORD PTR [edi-0x44],ebp
  41679a:	cmp    bl,bh
  41679c:	popa   
  41679d:	sub    BYTE PTR [ebp+0x7588f038],bh
  4167a3:	out    0x9e,eax
  4167a5:	and    cl,BYTE PTR [esi+0x39]
  4167a8:	jg     0x416783
  4167aa:	in     eax,0xb2
  4167ac:	pop    esi
  4167ad:	mov    esi,0x24af8039
  4167b2:	sbb    esp,DWORD PTR [edi+0x1415ff40]
  4167b8:	add    BYTE PTR [ecx+0x0],0x89
  4167bc:	inc    ebp
  4167bd:	aam    0xf
  4167bf:	mov    bh,0x45
  4167c1:	aam    0x3d
  4167c3:	cmp    DWORD PTR ds:0x2f750000,eax
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x2b08bb9b
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0x5bda6723
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	shl    BYTE PTR [esi+0x26],0x40
  4169d1:	(bad)  
  4169d2:	aad    0xb0
  4169d4:	sub    BYTE PTR [ebp+0x630e18a4],dl
  4169da:	jb     0x416a18
  4169dc:	mov    dh,0xf8
  4169de:	mov    ebp,ss
  4169e0:	mov    al,0x28
  4169e2:	xchg   ecx,eax
  4169e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e4:	sbb    BYTE PTR [esi-0x64],cl
  4169e7:	lea    edi,[esi+esi*4]
  4169ea:	inc    eax
  4169eb:	mov    ebp,ss
  4169ed:	mov    al,0x28
  4169ef:	xchg   ecx,eax
  4169f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169f1:	sbb    BYTE PTR [esi],cl
  4169f3:	pushf  
  4169f4:	lea    edi,[esi+esi*4]
  4169f7:	inc    eax
  4169f8:	mov    ebp,ss
  4169fa:	mov    al,0x28
  4169fc:	xchg   ecx,eax
  4169fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169fe:	sbb    BYTE PTR [esi],cl
  416a00:	pushf  
  416a01:	lea    edi,[esi+esi*4]
  416a04:	inc    eax
  416a05:	mov    ebp,ss
  416a07:	mov    al,0x28
  416a09:	cdq    
  416a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0b:	sbb    BYTE PTR [esi],cl
  416a0d:	xchg   edx,eax
  416a0e:	xchg   edx,eax
  416a0f:	xchg   BYTE PTR [eax+0x7ddc3840],bh
  416a15:	or     DWORD PTR [ecx],ebp
  416a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a18:	push   esp
  416a19:	ret    
  416a1a:	mov    ebp,0x33df54d9
  416a1f:	lods   al,BYTE PTR ds:[esi]
  416a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a21:	ret    0xf647
  416a24:	(bad)  
  416a25:	jns    0x416a8a
  416a27:	mov    esp,0x2ed85dee
  416a2c:	jecxz  0x4169cf
  416a2e:	nop
  416a2f:	dec    edx
  416a30:	hlt    
  416a31:	test   BYTE PTR [edx+0x7b],ch
  416a34:	repnz lods eax,DWORD PTR ds:[esi]
  416a36:	push   ebp
  416a37:	fsub   DWORD PTR [eax-0x38]
  416a3a:	call   0x6b7c:0xcbfc08e3
  416a41:	mov    dl,0x80
  416a43:	xor    DWORD PTR [esp+eiz*2+0x28b0d58c],edi
  416a4a:	xchg   ecx,eax
  416a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4c:	sbb    BYTE PTR [ebx+edx*2-0x65],dh
  416a50:	mov    dl,0x88
  416a52:	out    dx,al
  416a53:	hlt    
  416a54:	or     BYTE PTR [esi+0x2679e986],cl
  416a5a:	mov    al,ds:0x851950e4
  416a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a60:	push   ecx
  416a61:	neg    DWORD PTR [esi]
  416a63:	push   eax
  416a64:	dec    esp
  416a65:	sub    DWORD PTR [ebx],0x923241dc
  416a6b:	into   
  416a6c:	popf   
  416a6d:	test   eax,0x84f563e6
  416a72:	or     ah,BYTE PTR [eax-0x2d]
  416a75:	int    0x55
  416a77:	out    dx,eax
  416a78:	imul   edi,DWORD PTR [ebx+0x22],0xffffffad
  416a7c:	ins    DWORD PTR es:[edi],dx
  416a7d:	pop    ds
  416a7e:	inc    edi
  416a7f:	pop    edi
  416a80:	lds    edi,FWORD PTR [ecx]
  416a82:	xor    dh,ch
  416a84:	loope  0x416a07
  416a86:	xchg   esi,eax
  416a87:	or     BYTE PTR [di-0x167a],dl
  416a8c:	jns    0x416ab4
  416a8e:	mov    al,ds:0x197550e5
  416a93:	cmp    BYTE PTR [ecx+0x17],dl
  416a96:	ds inc edx
  416a98:	dec    esp
  416a99:	xchg   esp,eax
  416a9a:	mov    dh,0x76
  416a9c:	inc    ecx
  416a9d:	test   al,0xf
  416a9f:	popa   
  416aa0:	popf   
  416aa1:	cmc    
  416aa2:	jnp    0x416a6c
  416aa4:	cmc    
  416aa5:	mov    ah,0x97
  416aa7:	cli    
  416aa8:	shl    DWORD PTR [ebx+0x656b4423],cl
  416aae:	mov    edi,0x3f176d30
  416ab3:	fadd   st(5),st
  416ab5:	pop    esp
  416ab6:	cmc    
  416ab7:	out    dx,al
  416ab8:	push   esp
  416ab9:	mov    dh,ch
  416abb:	hlt    
  416abc:	or     BYTE PTR [eax+0x18a49128],dh
  416ac2:	push   cs
  416ac3:	pushf  
  416ac4:	lea    edi,[esi+esi*4]
  416ac7:	inc    eax
  416ac8:	mov    ebp,ss
  416aca:	mov    al,0x28
  416acc:	xchg   ecx,eax
  416acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ace:	sbb    BYTE PTR [esi],cl
  416ad0:	pushf  
  416ad1:	lea    edi,[esi+esi*4]
  416ad4:	inc    eax
  416ad5:	fcom   QWORD PTR [eax-0x5a22d750]
  416adb:	sbb    ecx,DWORD PTR [esi]
  416add:	cli    
  416ade:	ret    
  416adf:	jno    0x416ada
  416ae1:	inc    eax
  416ae2:	mov    ebp,ss
  416ae4:	mov    al,0x28
  416ae6:	xchg   ecx,eax
  416ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ae8:	sbb    dh,ch
  416aea:	pushf  
  416aeb:	(bad)  
  416aec:	cmp    eax,0xd58641bd
  416af1:	mov    al,0xca
  416af3:	xchg   ebp,eax
  416af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af5:	sbb    BYTE PTR [edx-0x49c37266],cl
  416afb:	inc    eax
  416afc:	mov    WORD PTR [esi-0x5b6ed7f3],ss
  416b02:	or     BYTE PTR [esi],cl
  416b04:	pushf  
  416b05:	lea    edi,[ebx+esi*4]
  416b08:	inc    eax
  416b09:	mov    ebp,ss
  416b0b:	lock sub BYTE PTR [ecx-0x63f1e74c],dl
  416b12:	(bad)  
  416b13:	cmp    al,0xb6
  416b15:	inc    ebp
  416b16:	mov    esp,ss
  416b18:	mov    al,0x28
  416b1a:	xchg   ecx,eax
  416b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b1c:	sbb    BYTE PTR [ebx],cl
  416b1e:	pushf  
  416b1f:	mov    WORD PTR [esi+esi*4],?
  416b22:	inc    eax
  416b23:	mov    ebp,ss
  416b25:	mov    al,0x18
  416b27:	popf   
  416b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b29:	sbb    BYTE PTR [edx],cl
  416b2b:	pushf  
  416b2c:	lea    esi,[esi]
  416b2e:	dec    eax
  416b2f:	inc    esp
  416b30:	mov    edi,ss
  416b32:	mov    al,0x68
  416b34:	adc    BYTE PTR [eax+ebx*1+0x2c8d9c1e],ah
  416b3b:	mov    dh,0x40
  416b3d:	mov    ebp,ss
  416b3f:	mov    al,ds:0x18b49128
  416b44:	push   cs
  416b45:	pushf  
  416b46:	lea    edi,[esi+esi*4]
  416b49:	push   eax
  416b4a:	mov    ebp,ss
  416b4c:	mov    al,0x28
  416b4e:	xchg   ecx,eax
  416b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b50:	sbb    BYTE PTR [esi],cl
  416b52:	pushf  
  416b53:	lea    edi,[edx+esi*4]
  416b56:	inc    eax
  416b57:	adc    ch,0xe9
  416b5a:	sub    edx,DWORD PTR [ecx-0x6831e75c]
  416b60:	lea    ebp,[ecx-0x77]
  416b63:	inc    eax
  416b64:	mov    ebp,ss
  416b66:	mov    al,0x28
  416b68:	xchg   ecx,eax
  416b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b6a:	sbb    BYTE PTR [esi],cl
  416b6c:	pushf  
  416b6d:	lea    edi,[esi+esi*4]
  416b70:	inc    eax
  416b71:	mov    ebp,ss
  416b73:	mov    al,0x28
  416b75:	xchg   ecx,eax
  416b76:	test   BYTE PTR [esi+ecx*1],dl
  416b79:	test   BYTE PTR [ebp-0x73bf49c4],cl
  416b7f:	aad    0xb0
  416b81:	sub    BYTE PTR [ecx-0x63f1e75c],dl
  416b87:	lea    edi,[esi+esi*4]
  416b8a:	inc    eax
  416b8b:	mov    ebp,ss
  416b8d:	mov    al,0x28
  416b8f:	xchg   ecx,eax
  416b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b91:	sbb    BYTE PTR [esi],cl
  416b93:	pushf  
  416b94:	lea    edi,[esi+esi*4]
  416b97:	inc    eax
  416b98:	mov    ebp,ss
  416b9a:	mov    al,0x28
  416b9c:	xchg   ecx,eax
  416b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b9e:	sbb    BYTE PTR [esi],cl
  416ba0:	pushf  
  416ba1:	lea    edi,[esi+esi*4]
  416ba4:	inc    eax
  416ba5:	mov    ebp,ss
  416ba7:	mov    al,0x28
  416ba9:	xchg   ecx,eax
  416baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bab:	sbb    BYTE PTR [esi],cl
  416bad:	pushf  
  416bae:	lea    edi,[esi+esi*4]
  416bb1:	inc    eax
  416bb2:	mov    ebp,ss
  416bb4:	mov    al,0x28
  416bb6:	xchg   ecx,eax
  416bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bb8:	sbb    BYTE PTR [esi],cl
  416bba:	pushf  
  416bbb:	lea    edi,[esi+esi*4]
  416bbe:	inc    eax
  416bbf:	mov    ebp,ss
  416bc1:	mov    al,0x28
  416bc3:	xchg   ecx,eax
  416bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bc5:	sbb    BYTE PTR [esi],cl
  416bc7:	pushf  
  416bc8:	lea    edi,[esi+esi*4]
  416bcb:	inc    eax
  416bcc:	mov    ebx,?
  416bce:	les    ecx,FWORD PTR [ebp-0x17]
  416bd1:	rcr    BYTE PTR [eax],1
  416bd3:	push   cs
  416bd4:	pushf  
  416bd5:	lea    ecx,[ebp+edi*4-0x4f3a73c0]
  416bdc:	sub    BYTE PTR [ecx-0x63f1e33e],dl
  416be2:	mov    DWORD PTR [esi+esi*4],edi
  416be5:	adc    cl,cl
  416be7:	xchg   esi,eax
  416be8:	cmp    BYTE PTR [esi+ebx*8-0x5c],0x18
  416bed:	push   cs
  416bee:	pushf  
  416bef:	lea    edi,[esi+edx*4]
  416bf2:	inc    eax
  416bf3:	mov    WORD PTR ds:0xd6e25a9e,?
  416bf9:	jnp    0x416c09
  416bfb:	pushf  
  416bfc:	lea    edi,[esi+edx*8]
  416bff:	inc    eax
  416c00:	mov    ebp,ss
  416c02:	jo     0x416c27
  416c04:	xchg   ecx,eax
  416c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c06:	dec    edx
  416c07:	push   cs
  416c08:	pushf  
  416c09:	lea    edx,[esi-0x4e]
  416c0c:	inc    eax
  416c0d:	mov    ebp,ss
  416c0f:	mov    al,0x28
  416c11:	xchg   ecx,eax
  416c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c13:	sbb    BYTE PTR [esi],cl
  416c15:	pushf  
  416c16:	lea    edi,[esi+esi*4]
  416c19:	pusha  
  416c1a:	mov    ebp,ss
  416c1c:	push   eax
  416c1d:	push   es
  416c1e:	jecxz  0x416be1
  416c20:	je     0x416c83
  416c22:	dec    DWORD PTR [ebp-0x73bd49c4]
  416c28:	aad    0xb0
  416c2a:	or     BYTE PTR [ebp-0x63f3e75c],bl
  416c30:	lea    edi,[edx+ecx*1]
  416c33:	inc    esp
  416c34:	mov    ebp,ss
  416c36:	mov    al,0x28
  416c38:	xchg   ecx,eax
  416c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c3a:	sbb    BYTE PTR [esi],cl
  416c3c:	pushf  
  416c3d:	lea    edi,[esi+esi*4]
  416c40:	inc    eax
  416c41:	int3   
  416c42:	aad    0xb0
  416c44:	call   0xe5a10da
  416c49:	pushf  
  416c4a:	lea    edi,[esi+esi*4]
  416c4d:	inc    eax
  416c4e:	mov    ebp,ss
  416c50:	mov    al,0x28
  416c52:	xchg   ecx,eax
  416c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c54:	sbb    BYTE PTR [esi],cl
  416c56:	pushf  
  416c57:	lea    edi,[esi+esi*4]
  416c5a:	inc    eax
  416c5b:	mov    ebp,ss
  416c5d:	mov    al,0x28
  416c5f:	xchg   ecx,eax
  416c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c61:	sbb    BYTE PTR [esi],cl
  416c63:	pushf  
  416c64:	lea    edi,[esi+esi*4]
  416c67:	inc    eax
  416c68:	mov    ebp,ss
  416c6a:	mov    al,0x28
  416c6c:	xchg   ecx,eax
  416c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c6e:	sbb    BYTE PTR [esi],cl
  416c70:	pushf  
  416c71:	lea    edi,[esi+esi*4]
  416c74:	inc    eax
  416c75:	mov    ebp,ss
  416c77:	mov    al,0x28
  416c79:	xchg   ecx,eax
  416c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c7b:	sbb    BYTE PTR [esi],cl
  416c7d:	pushf  
  416c7e:	lea    edi,[esi+esi*4]
  416c81:	inc    eax
  416c82:	mov    ebp,ss
  416c84:	mov    al,0x28
  416c86:	xchg   ecx,eax
  416c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c88:	sbb    BYTE PTR [esi],cl
  416c8a:	pushf  
  416c8b:	lea    edi,[esi+esi*4]
  416c8e:	inc    eax
  416c8f:	mov    ebp,ss
  416c91:	mov    al,0x28
  416c93:	xchg   ecx,eax
  416c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c95:	sbb    BYTE PTR [esi],cl
  416c97:	pushf  
  416c98:	lea    edi,[esi+esi*4]
  416c9b:	inc    eax
  416c9c:	mov    ebp,ss
  416c9e:	mov    al,0x28
  416ca0:	xchg   ecx,eax
  416ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca2:	sbb    BYTE PTR [esi],cl
  416ca4:	pushf  
  416ca5:	lea    edi,[esi+esi*4]
  416ca8:	inc    eax
  416ca9:	mov    ebp,ss
  416cab:	mov    al,0x28
  416cad:	xchg   ecx,eax
  416cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416caf:	sbb    BYTE PTR [esi],cl
  416cb1:	pushf  
  416cb2:	lea    edi,[esi+esi*4]
  416cb5:	inc    eax
  416cb6:	mov    ebp,ss
  416cb8:	mov    al,0x28
  416cba:	xchg   ecx,eax
  416cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cbc:	sbb    BYTE PTR [esi],cl
  416cbe:	pushf  
  416cbf:	lea    edi,[esi+esi*4]
  416cc2:	inc    eax
  416cc3:	mov    ebp,ss
  416cc5:	mov    al,0x28
  416cc7:	xchg   ecx,eax
  416cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cc9:	sbb    BYTE PTR [esi],cl
  416ccb:	pushf  
  416ccc:	lea    edi,[esi+esi*4]
  416ccf:	inc    eax
  416cd0:	mov    ebp,ss
  416cd2:	mov    al,0x28
  416cd4:	xchg   ecx,eax
  416cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd6:	sbb    BYTE PTR [esi],cl
  416cd8:	pushf  
  416cd9:	lea    edi,[esi+esi*4]
  416cdc:	inc    eax
  416cdd:	mov    ebp,ss
  416cdf:	mov    al,0x28
  416ce1:	xchg   ecx,eax
  416ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ce3:	sbb    BYTE PTR [esi],cl
  416ce5:	pushf  
  416ce6:	lea    edi,[esi+esi*4]
  416ce9:	inc    eax
  416cea:	mov    ebp,ss
  416cec:	mov    al,0x28
  416cee:	xchg   ecx,eax
  416cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf0:	sbb    BYTE PTR [esi],cl
  416cf2:	pushf  
  416cf3:	lea    edi,[esi+esi*4]
  416cf6:	inc    eax
  416cf7:	mov    ebp,ss
  416cf9:	mov    al,0x28
  416cfb:	xchg   ecx,eax
  416cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cfd:	sbb    BYTE PTR [esi],cl
  416cff:	pushf  
  416d00:	lea    edi,[esi+esi*4]
  416d03:	inc    eax
  416d04:	mov    ebp,ss
  416d06:	mov    al,0x28
  416d08:	xchg   ecx,eax
  416d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d0a:	sbb    BYTE PTR [esi],cl
  416d0c:	pushf  
  416d0d:	lea    edi,[esi+esi*4]
  416d10:	inc    eax
  416d11:	mov    ebp,ss
  416d13:	mov    al,0x28
  416d15:	xchg   ecx,eax
  416d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d17:	sbb    BYTE PTR [esi],cl
  416d19:	pushf  
  416d1a:	lea    edi,[esi+esi*4]
  416d1d:	inc    eax
  416d1e:	mov    ebp,ss
  416d20:	mov    al,0x28
  416d22:	xchg   ecx,eax
  416d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d24:	sbb    BYTE PTR [esi],cl
  416d26:	pushf  
  416d27:	lea    edi,[esi+esi*4]
  416d2a:	inc    eax
  416d2b:	mov    ebp,ss
  416d2d:	mov    al,0x28
  416d2f:	xchg   ecx,eax
  416d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d31:	sbb    BYTE PTR [esi],cl
  416d33:	pushf  
  416d34:	lea    edi,[esi+esi*4]
  416d37:	inc    eax
  416d38:	mov    ebp,ss
  416d3a:	mov    al,0x28
  416d3c:	xchg   ecx,eax
  416d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3e:	sbb    BYTE PTR [esi],cl
  416d40:	pushf  
  416d41:	lea    edi,[esi+esi*4]
  416d44:	inc    eax
  416d45:	mov    ebp,ss
  416d47:	mov    al,0x28
  416d49:	xchg   ecx,eax
  416d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d4b:	sbb    BYTE PTR [esi],cl
  416d4d:	pushf  
  416d4e:	lea    edi,[esi+esi*4]
  416d51:	inc    eax
  416d52:	mov    ebp,ss
  416d54:	mov    al,0x28
  416d56:	xchg   ecx,eax
  416d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d58:	sbb    BYTE PTR [esi],cl
  416d5a:	pushf  
  416d5b:	lea    edi,[esi+esi*4]
  416d5e:	inc    eax
  416d5f:	mov    ebp,ss
  416d61:	mov    al,0x28
  416d63:	xchg   ecx,eax
  416d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d65:	sbb    BYTE PTR [esi],cl
  416d67:	pushf  
  416d68:	lea    edi,[esi+esi*4]
  416d6b:	inc    eax
  416d6c:	mov    ebp,ss
  416d6e:	mov    al,0x28
  416d70:	xchg   ecx,eax
  416d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d72:	sbb    BYTE PTR [esi],cl
  416d74:	pushf  
  416d75:	lea    edi,[esi+esi*4]
  416d78:	inc    eax
  416d79:	mov    ebp,ss
  416d7b:	mov    al,0x28
  416d7d:	xchg   ecx,eax
  416d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d7f:	sbb    BYTE PTR [esi],cl
  416d81:	pushf  
  416d82:	lea    edi,[esi+esi*4]
  416d85:	inc    eax
  416d86:	mov    ebp,ss
  416d88:	mov    al,0x28
  416d8a:	xchg   ecx,eax
  416d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d8c:	sbb    BYTE PTR [esi],cl
  416d8e:	pushf  
  416d8f:	lea    edi,[esi+esi*4]
  416d92:	inc    eax
  416d93:	mov    ebp,ss
  416d95:	mov    al,0x28
  416d97:	xchg   ecx,eax
  416d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d99:	sbb    BYTE PTR [esi],cl
  416d9b:	pushf  
  416d9c:	lea    edi,[esi+esi*4]
  416d9f:	inc    eax
  416da0:	mov    ebp,ss
  416da2:	mov    al,0x28
  416da4:	xchg   ecx,eax
  416da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da6:	sbb    BYTE PTR [esi],cl
  416da8:	pushf  
  416da9:	lea    edi,[esi+esi*4]
  416dac:	inc    eax
  416dad:	mov    ebp,ss
  416daf:	mov    al,0x28
  416db1:	xchg   ecx,eax
  416db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db3:	sbb    BYTE PTR [esi],cl
  416db5:	pushf  
  416db6:	lea    edi,[esi+esi*4]
  416db9:	inc    eax
  416dba:	mov    ebp,ss
  416dbc:	mov    al,0x28
  416dbe:	xchg   ecx,eax
  416dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dc0:	sbb    BYTE PTR [esi],cl
  416dc2:	pushf  
  416dc3:	lea    edi,[esi+esi*4]
  416dc6:	inc    eax
  416dc7:	mov    ebp,ss
  416dc9:	mov    al,0x28
  416dcb:	xchg   ecx,eax
  416dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dcd:	mov    bl,0x40
  416dcf:	xchg   edi,eax
  416dd0:	lea    edx,[ebx]
  416dd2:	mov    dh,0x40
  416dd4:	pushf  
  416dd5:	aad    0xb0
  416dd7:	add    dh,BYTE PTR [ebx]
  416dd9:	jle    0x416e47
  416ddb:	mov    bl,0xd3
  416ddd:	mov    esi,0xb17b9d2e
  416de2:	cmp    al,BYTE PTR ds:0x41ed97ba
  416de8:	inc    DWORD PTR [eax+0x3e]
  416deb:	das    
  416dec:	icebp  
  416ded:	jnp    0x416e54
  416def:	or     eax,0x66e06a3b
  416df4:	loop   0x416e37
  416df6:	or     edx,ebx
  416df8:	jecxz  0x416e5c
  416dfa:	add    bh,ch
  416dfc:	mov    eax,0x81409353
  416e01:	pop    ebx
  416e02:	pop    es
  416e03:	adc    al,0xd
  416e05:	sub    ecx,DWORD PTR [ebx+0x60]
  416e08:	mov    ch,0xed
  416e0a:	repz sub bl,ch
  416e0d:	jecxz  0x416dcf
  416e0f:	xchg   edx,eax
  416e10:	dec    ebx
  416e11:	ret    0x502
  416e14:	mov    dh,0x78
  416e16:	int3   
  416e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e18:	pushaw 
  416e1a:	div    BYTE PTR [edi-0x6e]
  416e1d:	jnp    0x416dbc
  416e1f:	mov    ds:0x78b6ea46,eax
  416e24:	xor    eax,0xf70e6d63
  416e29:	call   0x582188eb
  416e2e:	fld    TBYTE PTR [ebx-0x2ed37a79]
  416e34:	push   ecx
  416e35:	ds push 0x21
  416e38:	bound  eax,QWORD PTR [ecx-0x72]
  416e3b:	adc    eax,0x79cc213b
  416e40:	mov    DWORD PTR [ebp+ecx*1+0x18073e6b],edi
  416e47:	xchg   ebp,eax
  416e48:	shr    BYTE PTR [eax+0x4e],cl
  416e4b:	rcl    BYTE PTR [ebx-0x78],cl
  416e4e:	inc    edi
  416e4f:	(bad)
  416e53:	xchg   edi,eax
  416e54:	inc    esp
  416e55:	(bad)  
  416e57:	mov    bl,0x96
  416e59:	jle    0x416e6a
  416e5b:	and    BYTE PTR [ebp+0x8741549],cl
  416e61:	mov    DWORD PTR [eax+0x16],esp
  416e64:	mov    ds:0x73623b9c,eax
  416e69:	sub    eax,0x1ecb8620
  416e6e:	dec    ebp
  416e6f:	sbb    BYTE PTR [esi+0x1c],al
  416e72:	jg     0x416e4f
  416e74:	cmp    ebp,DWORD PTR [edx-0xc]
  416e77:	fld    TBYTE PTR [eax+0x5d7748d1]
  416e7d:	mov    cl,0x11
  416e7f:	fwait
  416e80:	cmp    ecx,0x1483f010
  416e86:	dec    eax
  416e87:	jmp    0x416e1e
  416e89:	sub    al,0xbc
  416e8b:	jb     0x416ea5
  416e8d:	jno    0x416ec1
  416e8f:	inc    ebx
  416e90:	mov    esp,ebx
  416e92:	sub    al,0xd2
  416e94:	das    
  416e95:	cmp    eax,0x697d516b
  416e9a:	pop    edi
  416e9b:	pop    eax
  416e9c:	hlt    
  416e9d:	mov    ds:0x5f459d9f,al
  416ea2:	push   ss
  416ea3:	les    eax,FWORD PTR [ecx-0x4cd2bd42]
  416ea9:	retf   
  416eaa:	in     al,dx
  416eab:	xchg   esp,eax
  416eac:	ja     0x416e68
  416eae:	pop    edi
  416eaf:	outs   dx,DWORD PTR ds:[esi]
  416eb0:	add    DWORD PTR [ebp+0x5d],esp
  416eb3:	pop    eax
  416eb4:	in     al,0x3d
  416eb6:	mov    ebx,0x6b048098
  416ebb:	adc    al,0x30
  416ebd:	pushf  
  416ebe:	mov    cl,0x93
  416ec0:	shl    esi,0x2b
  416ec3:	add    esi,DWORD PTR [ebx-0x5e]
  416ec6:	push   esi
  416ec7:	imul   edx,DWORD PTR [ecx],0x69
  416eca:	jo     0x416f24
  416ecc:	lock je 0x416e53
  416ecf:	jg     0x416f0f
  416ed1:	out    0xe1,al
  416ed3:	test   eax,0xaab72f22
  416ed8:	mov    ss,WORD PTR ds:0x41539615
  416ede:	mov    eax,0xf0a7560e
  416ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ee4:	jle    0x416ee1
  416ee6:	pushf  
  416ee7:	push   0xffffff83
  416ee9:	fcom   QWORD PTR [ebx+0x5e22b175]
  416eef:	loop   0x416f14
  416ef1:	xchg   ebp,eax
  416ef2:	in     al,dx
  416ef3:	aam    0x49
  416ef5:	mov    eax,ds:0x67a86450
  416efa:	cmp    ecx,eax
  416efc:	pop    eax
  416efd:	ins    BYTE PTR es:[edi],dx
  416efe:	pop    es
  416eff:	push   ecx
  416f00:	fucom  st(6)
  416f02:	fdivrp st(3),st
  416f04:	mov    ds:0xc90cd26b,al
  416f09:	fild   WORD PTR [ecx+esi*4+0x60]
  416f0d:	add    esi,0xc8152de5
  416f13:	jns    0x416ea1
  416f15:	fwait
  416f16:	mov    cl,0x65
  416f18:	clc    
  416f19:	ins    BYTE PTR es:[edi],dx
  416f1a:	loope  0x416f49
  416f1c:	arpl   bp,dx
  416f1e:	data16 repz mov al,ds:0x55def8eb
  416f25:	sbb    BYTE PTR [edx+0xb],cl
  416f28:	call   0x266b8b34
  416f2d:	jnp    0x416f60
  416f2f:	push   ebp
  416f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f31:	sub    al,0x14
  416f33:	enter  0x5c33,0x5c
  416f37:	push   ds
  416f38:	sub    bh,BYTE PTR [edi]
  416f3a:	data16 aad 0x16
  416f3d:	in     al,dx
  416f3e:	cmp    eax,0xc863740f
  416f43:	adc    eax,0xaec8feae
  416f48:	sti    
  416f49:	gs shl ah,cl
  416f4c:	cmp    eax,0x5ce13b8a
  416f51:	jae    0x416fc7
  416f53:	adc    ebx,0xffffff88
  416f56:	adc    cl,dl
  416f58:	inc    esp
  416f59:	out    dx,al
  416f5a:	ret    
  416f5b:	sub    dh,al
  416f5d:	in     eax,0x62
  416f5f:	hlt    
  416f60:	sub    bh,dl
  416f62:	js     0x416faa
  416f64:	adc    ebx,DWORD PTR [edx-0x27]
  416f67:	jae    0x416f9c
  416f69:	retf   
  416f6a:	cld    
  416f6b:	sub    DWORD PTR [edi+0x5ce2c45a],esp
  416f71:	jne    0x416fe8
  416f73:	les    ecx,FWORD PTR [ebx+0x47]
  416f76:	jge    0x416f27
  416f78:	adc    eax,0x366a44bd
  416f7d:	jmp    0x50338e4f
  416f82:	stos   DWORD PTR es:[edi],eax
  416f83:	xor    edx,esi
  416f85:	jnp    0x416fad
  416f87:	inc    ebp
  416f88:	lock cmp cl,BYTE PTR [edi-0x53ca1168]
  416f8f:	aad    0x65
  416f91:	ret    0xc3c6
  416f94:	add    edx,DWORD PTR [eax]
  416f96:	jmp    0xb20:0x1dcc6339
  416f9d:	cdq    
  416f9e:	xchg   esp,eax
  416f9f:	inc    esi
  416fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fa1:	and    eax,ebx
  416fa3:	jb     0x416f72
  416fa5:	daa    
  416fa6:	fst    DWORD PTR [eax+ebx*2+0x2b]
  416faa:	pushf  
  416fab:	jle    0x41701c
  416fad:	xchg   ebx,eax
  416fae:	push   ss
  416faf:	push   es
  416fb0:	add    dl,BYTE PTR [edi]
  416fb2:	inc    esp
  416fb3:	xchg   edx,eax
  416fb4:	ror    BYTE PTR [esi+0x15fe7ecb],0xb1
  416fbb:	int    0x55
  416fbd:	ss mov edx,0xf647792e
  416fc3:	aas    
  416fc4:	mov    al,0xed
  416fc6:	mov    ebp,0xbb10bbf9
  416fcb:	fisubr WORD PTR [ebx-0x55496f36]
  416fd1:	jne    0x416fad
  416fd3:	jb     0x416fec
  416fd5:	(bad)  
  416fd6:	retf   
  416fd7:	mov    ebp,0xcb6cccde
  416fdc:	popa   
  416fdd:	xor    al,0xd0
  416fdf:	xlat   BYTE PTR ds:[ebx]
  416fe0:	inc    edi
  416fe1:	jnp    0x417000
  416fe3:	mov    dl,0xcf
  416fe5:	xor    eax,0xb6223d41
  416fea:	loope  0x416fa5
  416fec:	xchg   edx,eax
  416fed:	add    al,0x11
  416fef:	retf   
  416ff0:	test   BYTE PTR [ecx+0x5bdbeb54],bl
  416ff6:	xlat   BYTE PTR ds:[ebx]
  416ff7:	aas    
  416ff8:	mov    edi,0x3d1bd2cc
  416ffd:	sar    BYTE PTR [esp+ebx*1-0x1],cl
  417001:	jle    0x417003
  417003:	int    0x6
  417005:	jo     0x417062
  417007:	int    0x17
  417009:	or     esp,DWORD PTR [edi+0x4dc02726]
  41700f:	popa   
  417010:	sbb    cl,BYTE PTR [ebx]
  417012:	mov    al,0x5f
  417014:	adc    al,BYTE PTR [eax-0x592618ef]
  41701a:	call   0xbf97:0x4837d805
  417021:	pop    esp
  417022:	retf   
  417023:	mov    al,ds:0xd568effd
  417028:	lock xor dh,bl
  41702b:	and    edx,esp
  41702d:	icebp  
  41702e:	in     eax,0x96
  417030:	(bad)  [ebx]
  417032:	cld    
  417033:	ret    
  417034:	adc    DWORD PTR ds:0xc6c70bd,esp
  41703a:	cmp    eax,0xd7866725
  41703f:	jmp    0x99fe:0x70dc7639
  417046:	clc    
  417047:	cdq    
  417048:	and    al,0x21
  41704a:	jnp    0x41701b
  41704c:	mov    al,0x4f
  41704e:	lods   eax,DWORD PTR ds:[esi]
  41704f:	fisttp QWORD PTR [edi-0x17]
  417052:	je     0x417029
  417054:	ins    BYTE PTR es:[edi],dx
  417055:	int    0x88
  417057:	pop    eax
  417058:	jns    0x417059
  41705a:	mov    dh,0xbb
  41705c:	xchg   esi,eax
  41705d:	sahf   
  41705e:	xor    al,0x17
  417060:	push   ds
  417061:	xor    BYTE PTR [ecx],dh
  417063:	enter  0xe0cc,0xe7
  417067:	dec    edi
  417068:	adc    eax,ebx
  41706a:	xchg   esp,eax
  41706b:	jp     0x41704a
  41706d:	jmp    0x8fe0:0xe8979add
  417074:	inc    edi
  417075:	xchg   ecx,eax
  417076:	mov    ebp,0x887fec41
  41707b:	and    dh,BYTE PTR [esi+0x171f1c43]
  417081:	cs data16 loopne 0x417084
  417085:	retf   0x9645
  417088:	popf   
  417089:	pop    eax
  41708a:	cmp    al,0xe0
  41708c:	out    0xf1,al
  41708e:	adc    BYTE PTR [eax-0x70],ah
  417091:	add    esi,ebx
  417093:	pop    es
  417094:	(bad)  
  417096:	xchg   BYTE PTR [ecx],cl
  417098:	fidiv  DWORD PTR [edi+0x6c]
  41709b:	pop    ebp
  41709c:	xchg   edi,eax
  41709d:	cdq    
  41709e:	dec    edx
  41709f:	std    
  4170a0:	and    edi,ebx
  4170a2:	scas   al,BYTE PTR es:[edi]
  4170a3:	mov    eax,ds:0x75466fbf
  4170a8:	loopne 0x4170ae
  4170aa:	inc    esi
  4170ab:	mov    eax,0xc4e43c7a
  4170b0:	stc    
  4170b1:	pop    ebx
  4170b2:	js     0x4170a3
  4170b4:	xor    eax,0x8809dda5
  4170b9:	xor    BYTE PTR [ecx*8+0x7ffaf6df],al
  4170c0:	jno    0x4170d0
  4170c2:	jl     0x4170f7
  4170c4:	xor    ecx,DWORD PTR ds:0x5074631
  4170ca:	pop    eax
  4170cb:	pop    ebp
  4170cc:	mov    eax,ds:0xbda54bbb
  4170d1:	add    DWORD PTR [edi-0x55],ecx
  4170d4:	sub    edi,esp
  4170d6:	mov    eax,ds:0xf598b72
  4170db:	in     al,0x64
  4170dd:	jno    0x417150
  4170df:	inc    edx
  4170e0:	sbb    ah,bh
  4170e2:	repnz cmc 
  4170e4:	mov    ebp,0x5366332f
  4170e9:	sbb    eax,0xd8ae1b05
  4170ee:	mov    esi,0xbd611ed9
  4170f3:	inc    eax
  4170f4:	inc    esp
  4170f5:	out    dx,al
  4170f6:	loop   0x417091
  4170f8:	mov    ecx,0x592c523b
  4170fd:	ficomp DWORD PTR [edi-0x5eca6351]
  417103:	push   es
  417104:	dec    ecx
  417105:	data16 sub BYTE PTR [edx-0x3e003f7e],ch
  41710c:	pushf  
  41710d:	xor    al,0xb9
  41710f:	sub    eax,0xda68f7c3
  417114:	cmp    al,0x9b
  417116:	dec    edx
  417117:	dec    esi
  417118:	add    al,0xbb
  41711a:	sbb    eax,0xfd12936b
  41711f:	sub    eax,0xba126bba
  417124:	mov    al,0xd4
  417126:	pop    ss
  417127:	xchg   ch,ah
  417129:	lock pusha 
  41712b:	mov    eax,0xa1b31740
  417130:	retf   
  417131:	mov    eax,ds:0xc4ad1a46
  417136:	dec    ecx
  417137:	lods   eax,DWORD PTR ds:[esi]
  417138:	pop    edi
  417139:	push   esi
  41713a:	aam    0x1a
  41713c:	rcl    edx,1
  41713e:	pop    ebp
  41713f:	pop    ebx
  417140:	jmp    0x4b491e3d
  417145:	add    al,0x28
  417147:	idiv   BYTE PTR [ebx-0x20200037]
  41714d:	loope  0x41719b
  41714f:	push   ebx
  417150:	(bad)  
  417152:	in     eax,0x65
  417154:	mov    ch,0x28
  417156:	(bad)  
  417157:	stos   BYTE PTR es:[edi],al
  417158:	cwde   
  417159:	add    al,0x90
  41715b:	xchg   edx,eax
  41715c:	out    0xbe,al
  41715e:	jbe    0x4170fa
  417160:	mov    eax,0xa09d5a97
  417165:	popf   
  417166:	jge    0x4171cb
  417168:	ins    BYTE PTR es:[edi],dx
  417169:	pop    edx
  41716a:	ss sbb cl,al
  41716d:	push   0xffffffa3
  41716f:	and    eax,0x805b98ca
  417174:	pop    edx
  417175:	or     bl,BYTE PTR [ebp+0x297981e4]
  41717b:	out    0x6e,al
  41717d:	jno    0x417162
  41717f:	xor    eax,0x5f4a4a52
  417184:	into   
  417185:	stc    
  417186:	loope  0x4171bd
  417188:	addr16 clc 
  41718a:	push   eax
  41718b:	mov    esi,DWORD PTR [ebx]
  41718d:	adc    eax,0x6fe7d27e
  417192:	clc    
  417193:	mov    DWORD PTR [ebx-0x43],ecx
  417196:	popa   
  417197:	push   0x6ce2baa3
  41719c:	mov    ebx,0xaaf912da
  4171a1:	pop    ebp
  4171a2:	bound  edx,QWORD PTR [edx+0x65730abd]
  4171a8:	ins    DWORD PTR es:[edi],dx
  4171a9:	dec    ebx
  4171aa:	shl    BYTE PTR [ebx],0xe2
  4171ad:	jge    0x4171c7
  4171af:	jmp    FWORD PTR [ebx]
  4171b1:	fimul  WORD PTR [edi-0x79]
  4171b4:	inc    edx
  4171b5:	adc    BYTE PTR [eax+0x15611fb5],0x12
  4171bc:	mov    cl,dl
  4171be:	call   DWORD PTR [ebx-0x3f]
  4171c1:	rcr    BYTE PTR [ebp-0x33],1
  4171c4:	mul    esi
  4171c6:	inc    ebx
  4171c7:	cmp    edx,DWORD PTR [ecx+0x7125c1ac]
  4171cd:	int3   
  4171ce:	ror    DWORD PTR [ecx+0x6796e612],0xe3
  4171d5:	adc    eax,DWORD PTR ds:0x3abf5ccd
  4171db:	ins    BYTE PTR es:[edi],dx
  4171dc:	add    al,0xcf
  4171de:	sbb    al,BYTE PTR [edi-0x4653f3bc]
  4171e4:	repnz or al,0xec
  4171e7:	lahf   
  4171e8:	pop    esp
  4171e9:	rcl    BYTE PTR [esi],1
  4171eb:	shr    BYTE PTR [ebx+edx*8-0x3e978a85],1
  4171f2:	sbb    al,0x2e
  4171f4:	inc    ebx
  4171f5:	pop    esp
  4171f6:	mov    al,BYTE PTR [ebp+0x33ce0e59]
  4171fc:	or     edx,DWORD PTR [edi+ecx*1]
  4171ff:	cmp    DWORD PTR ds:0xed061663,edx
  417205:	sbb    eax,0xf6cb17e1
  41720a:	jge    0x4171b7
  41720c:	and    edx,DWORD PTR [edx+0x6532867f]
  417212:	sub    eax,0x34e3b1bf
  417217:	add    edi,ebx
  417219:	sbb    BYTE PTR [esi+0x7f],dh
  41721c:	xor    al,0x88
  41721e:	inc    edi
  41721f:	sub    BYTE PTR [esi+0x63],bh
  417222:	xor    al,0xee
  417224:	stc    
  417225:	cmp    BYTE PTR [edi+edi*1],dh
  417228:	adc    BYTE PTR [eax+0x50],dh
  41722b:	jbe    0x417248
  41722d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41722e:	inc    eax
  41722f:	test   DWORD PTR [eax],esi
  417231:	sub    DWORD PTR [ecx+0x37],0x71
  417235:	repz repnz xor BYTE PTR [edx+0x77b2df56],bl
  41723d:	mov    ch,0xc2
  41723f:	jnp    0x41720f
  417241:	in     eax,dx
  417242:	xor    BYTE PTR [ecx+0x5bce0c56],dl
  417248:	mov    dh,0x41
  41724a:	add    cl,BYTE PTR [ecx-0x4a]
  41724d:	push   ds
  41724e:	pop    eax
  41724f:	js     0x41724a
  417251:	or     al,0xf0
  417253:	in     eax,dx
  417254:	add    ecx,DWORD PTR [ebp-0x44]
  417257:	ins    BYTE PTR es:[edi],dx
  417258:	psadbw mm2,QWORD PTR [ebp-0x6e]
  41725c:	mov    eax,ds:0xf5fbfe8b
  417261:	pop    edx
  417262:	cmp    eax,0xb45ad228
  417267:	pop    esi
  417268:	sbb    BYTE PTR [esi+0x518c0994],bh
  41726e:	inc    edi
  41726f:	cmc    
  417270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417271:	xchg   esp,eax
  417272:	lahf   
  417273:	push   edx
  417274:	inc    ebp
  417275:	jp     0x41722a
  417277:	popf   
  417278:	jge    0x417224
  41727a:	in     al,dx
  41727b:	jl     0x41727c
  41727d:	dec    ebp
  41727e:	push   esp
  41727f:	xchg   DWORD PTR [esi],ebx
  417281:	mov    al,ds:0x327da342
  417286:	out    0x82,eax
  417288:	lahf   
  417289:	imul   edi,esi,0xfd5acc3c
  41728f:	sub    al,ah
  417291:	cmc    
  417292:	sti    
  417293:	mov    BYTE PTR [edi+eax*1-0x66],0x85
  417298:	(bad)  
  417299:	(bad)  
  41729b:	mov    edi,0xaa3b9f41
  4172a0:	add    bl,dl
  4172a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a3:	fsubp  st(7),st
  4172a5:	jle    0x417285
  4172a7:	int    0x3b
  4172a9:	jns    0x4172e2
  4172ab:	or     edx,DWORD PTR [esi]
  4172ad:	jecxz  0x41723d
  4172af:	ror    ebx,0xa7
  4172b2:	gs push ecx
  4172b4:	sub    BYTE PTR [esi],ah
  4172b6:	jbe    0x417282
  4172b8:	fld    TBYTE PTR [edi]
  4172ba:	inc    eax
  4172bb:	outs   dx,BYTE PTR ds:[esi]
  4172bc:	pusha  
  4172bd:	bound  esp,QWORD PTR [ebx+ebp*4+0x1b]
  4172c1:	push   edi
  4172c2:	jmp    FWORD PTR ds:0x66738c30
  4172c8:	jae    0x41731b
  4172ca:	lea    ebx,[ebp+0x756e3833]
  4172d0:	aad    0x2c
  4172d2:	ror    DWORD PTR [esi-0x69],cl
  4172d5:	cmp    eax,0x57fffc19
  4172da:	jge    0x417309
  4172dc:	mov    DWORD PTR [edx-0x79453366],edi
  4172e2:	or     DWORD PTR [esi],edx
  4172e4:	popf   
  4172e5:	xchg   esi,eax
  4172e6:	lods   al,BYTE PTR ds:[esi]
  4172e7:	mov    ecx,DWORD PTR [ecx+0x7e4bbdde]
  4172ed:	mov    ecx,0xbd43ba86
  4172f2:	outs   dx,BYTE PTR ds:[esi]
  4172f3:	adc    ah,BYTE PTR [ecx-0x104a3ad1]
  4172f9:	or     ebp,ebp
  4172fb:	add    eax,DWORD PTR [esp+edx*1-0x8]
  4172ff:	leave  
  417300:	mov    dh,0x9
  417302:	fimul  WORD PTR [esi]
  417304:	ds cdq 
  417306:	arpl   WORD PTR [ebx+edx*2+0x44],bp
  41730a:	cli    
  41730b:	jecxz  0x4172da
  41730d:	push   edi
  41730e:	out    dx,eax
  41730f:	mov    DWORD PTR [ecx-0x4d],esp
  417312:	test   BYTE PTR [ebp-0x64],dl
  417315:	dec    ecx
  417316:	or     eax,0xa0f411a1
  41731b:	or     eax,0x54511374
  417320:	add    eax,0xb58e67f4
  417325:	test   DWORD PTR [esi+0x7b],0x27bd5d0
  41732c:	pop    eax
  41732d:	mov    eax,ds:0xdcfc0625
  417332:	xchg   edx,eax
  417333:	xor    al,0xcc
  417335:	push   0x33
  417337:	mov    bl,0xc7
  417339:	mov    dh,0xc
  41733b:	dec    edx
  41733c:	loop   0x4172eb
  41733e:	xor    eax,0x3e96d00e
  417343:	cld    
  417344:	mov    dh,0x15
  417346:	popa   
  417347:	repnz inc ecx
  417349:	xchg   edi,eax
  41734a:	push   ebp
  41734b:	(bad)  
  41734c:	aad    0x5c
  41734e:	push   cs
  41734f:	push   esp
  417350:	xor    ebp,eax
  417352:	lods   eax,DWORD PTR ds:[esi]
  417353:	fdiv   QWORD PTR cs:[ecx+0x211078d6]
  41735a:	add    BYTE PTR [edi+0x45],dh
  41735d:	stc    
  41735e:	test   BYTE PTR [ebx+0x2a],dh
  417361:	(bad)  
  417363:	mov    bh,0x5b
  417365:	bound  eax,QWORD PTR [eax-0x72]
  417368:	leave  
  417369:	xchg   ebp,eax
  41736a:	repnz int3 
  41736c:	jle    0x4173e8
  41736e:	mov    eax,ds:0x10b4dc80
  417373:	and    al,0xc6
  417375:	stos   DWORD PTR es:[edi],eax
  417376:	cdq    
  417377:	sbb    dl,BYTE PTR [ebx]
  417379:	fild   DWORD PTR [ebx]
  41737b:	aad    0xf1
  41737d:	dec    esp
  41737e:	push   edi
  41737f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417380:	out    0xd6,al
  417382:	adc    edi,DWORD PTR [edx+0x68]
  417385:	ret    
  417386:	(bad)  [esi+0x6c]
  417389:	(bad)  
  41738a:	fmul   DWORD PTR [edi+0x4d]
  41738d:	mov    edx,0x622df139
  417392:	inc    esp
  417393:	adc    ch,BYTE PTR ds:0x1570e271
  417399:	inc    esi
  41739a:	fmul   DWORD PTR [ebx+0x587457b4]
  4173a0:	xchg   DWORD PTR [eax+edx*1-0x832b53a],edi
  4173a7:	inc    edx
  4173a8:	fild   DWORD PTR [edx-0x80]
  4173ab:	jae    0x41732d
  4173ad:	fs into 
  4173af:	stc    
  4173b0:	push   ecx
  4173b1:	imul   ebp,DWORD PTR [esi],0xfcf9a73e
  4173b7:	lock in al,dx
  4173b9:	in     eax,dx
  4173ba:	icebp  
  4173bb:	push   0x47
  4173bd:	and    eax,0xf8d29800
  4173c2:	stos   DWORD PTR es:[edi],eax
  4173c3:	jl     0x4173c7
  4173c5:	inc    esi
  4173c6:	les    esi,FWORD PTR [ebx]
  4173c8:	pop    es
  4173c9:	ja     0x417401
  4173cb:	pop    ebp
  4173cc:	jmp    0x3f79:0xbd40
  4173d2:	cmp    al,0x35
  4173d4:	outs   dx,BYTE PTR ds:[esi]
  4173d5:	punpckhdq mm4,QWORD PTR [edi-0x7d]
  4173d9:	idiv   DWORD PTR [edi]
  4173db:	mov    edi,0x6ea61ebf
  4173e0:	fsub   QWORD PTR [eax]
  4173e2:	sub    eax,0x2b254ea3
  4173e7:	lods   al,BYTE PTR ds:[esi]
  4173e8:	(bad)  [esp+eiz*8-0x42]
  4173ec:	std    
  4173ed:	cmp    ebx,DWORD PTR [edx]
  4173ef:	xlat   BYTE PTR ds:[ebx]
  4173f0:	sbb    al,al
  4173f2:	test   DWORD PTR [edi+0x4d462299],0xf44fade9
  4173fc:	(bad)  
  4173fd:	push   ds
  4173fe:	ss ins BYTE PTR es:[edi],dx
  417400:	pop    esp
  417401:	lahf   
  417402:	loope  0x417393
  417404:	mov    esp,0xf9662851
  417409:	fcomp  QWORD PTR [eax-0x59bdb5eb]
  41740f:	retf   0x2be6
  417412:	sub    BYTE PTR [esi-0xddced9f],0x92
  417419:	push   0x410940a7
  41741e:	call   0x6f39b3ce
  417423:	ins    BYTE PTR es:[edi],dx
  417424:	adc    eax,0x43b29f
  417429:	js     0x417416
  41742b:	push   esi
  41742c:	push   esp
  41742d:	sbb    al,0x7
  41742f:	in     eax,dx
  417430:	rol    DWORD PTR [eax-0x74b20e8a],0x14
  417437:	es cs call 0x6321987a
  41743e:	leave  
  41743f:	stc    
  417440:	cmp    esi,ecx
  417442:	sbb    al,BYTE PTR [ecx-0x261dfd57]
  417448:	adc    dl,BYTE PTR [esi]
  41744a:	addr16 cmc 
  41744c:	xor    bh,BYTE PTR ds:0x780f2761
  417452:	mov    al,BYTE PTR [edx-0x7]
  417455:	sub    edi,DWORD PTR [ecx+0x4b]
  417458:	push   eax
  417459:	xor    al,BYTE PTR [ebx-0x121be48e]
  41745f:	mov    ds:0xd10e5e36,eax
  417464:	jo     0x417436
  417466:	jae    0x417415
  417468:	pop    ebx
  417469:	cwde   
  41746a:	fstp   DWORD PTR [esi]
  41746c:	adc    DWORD PTR [ebp-0x7a],esp
  41746f:	mov    bh,0x6b
  417471:	xor    BYTE PTR [ecx+0x5a95825a],dl
  417477:	(bad)  [edi+0x495b3734]
  41747d:	add    al,0x38
  41747f:	pop    ebx
  417480:	lock push ss
  417482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417483:	aad    0xd4
  417485:	cli    
  417486:	lea    edx,[ecx]
  417488:	sar    DWORD PTR [ebp-0x7ef95d62],1
  41748e:	mov    cl,0x11
  417490:	arpl   WORD PTR [eax-0x4b46e4c3],si
  417496:	xchg   DWORD PTR [edx],edi
  417498:	xlat   BYTE PTR ds:[ebx]
  417499:	push   cs
  41749a:	sub    eax,0xc9afa1ba
  41749f:	imul   eax,eax,0xd91aaf76
  4174a5:	xor    ebp,DWORD PTR [ecx-0x24f26d08]
  4174ab:	(bad)  fs:[ebp+eiz*1-0x14cc4e94]
  4174b3:	stos   BYTE PTR es:[edi],al
  4174b4:	test   eax,0x946347fe
  4174b9:	dec    edx
  4174ba:	jge    0x417498
  4174bc:	fisub  DWORD PTR [edi+0x1f7bc1f3]
  4174c2:	popw   ds
  4174c4:	dec    edx
  4174c5:	popa   
  4174c6:	(bad)  
  4174c8:	sbb    DWORD PTR [ebx+0x51],eax
  4174cb:	inc    edx
  4174cc:	fs out dx,al
  4174ce:	sbb    BYTE PTR [edx-0x2d87b7ae],0xc6
  4174d5:	es mov dh,0xbf
  4174d8:	pusha  
  4174d9:	outs   dx,DWORD PTR ds:[esi]
  4174da:	mov    ds,WORD PTR [ebp-0x40]
  4174dd:	aam    0xf6
  4174df:	xor    eax,0xfa0a4455
  4174e4:	xchg   ebp,eax
  4174e5:	stos   DWORD PTR es:[edi],eax
  4174e6:	fiadd  WORD PTR [eax-0x5d]
  4174e9:	jb     0x4174c9
  4174eb:	sbb    ecx,ebx
  4174ed:	add    dh,ah
  4174ef:	int3   
  4174f0:	(bad)  
  4174f1:	out    dx,al
  4174f2:	mov    ch,0x1e
  4174f4:	jle    0x4174ea
  4174f6:	fwait
  4174f7:	adc    eax,0x62823a51
  4174fc:	push   ds
  4174fd:	adc    al,0xd2
  4174ff:	lock pop ss
  417501:	(bad)  [ebx]
  417503:	jg     0x4174a1
  417505:	adc    DWORD PTR [esi+0x763403d8],0x6aebc71
  41750f:	dec    ebx
  417510:	lds    edx,FWORD PTR [edi-0x6b1fed2b]
  417516:	inc    ecx
  417517:	pop    esi
  417518:	xor    ch,0xd7
  41751b:	add    ebp,DWORD PTR [eax+0x3e]
  41751e:	es xchg ebp,eax
  417520:	call   0xc27a58f8
  417525:	mov    eax,ds:0x1113e991
  41752a:	stos   DWORD PTR es:[edi],eax
  41752b:	fstp   QWORD PTR [ebx+0x70]
  41752e:	add    ah,bh
  417530:	push   0x3d7bb09c
  417535:	hlt    
  417536:	push   edi
  417537:	fist   DWORD PTR [edi-0x75]
  41753a:	sti    
  41753b:	lds    ecx,FWORD PTR [ebx]
  41753d:	xchg   DWORD PTR es:[esi-0x117e1eb7],edx
  417544:	jmp    0x62fd:0x305f0dce
  41754b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754c:	or     eax,0xfce20e99
  417551:	addr16 inc esi
  417553:	div    DWORD PTR [ebx]
  417555:	dec    eax
  417556:	mov    cl,BYTE PTR [edi+0x32ec8212]
  41755c:	cli    
  41755d:	pop    ds
  41755e:	shl    dl,cl
  417560:	cmp    ebx,DWORD PTR [eax-0x68d78063]
  417566:	sbb    DWORD PTR [edi+0x6718f29a],ebp
  41756c:	cs out dx,al
  41756e:	mov    ebx,0xd15f78e3
  417573:	or     BYTE PTR [edi-0x57],ch
  417576:	imul   ebx,DWORD PTR [esi+0xe],0x4840e07
  41757d:	pushf  
  41757e:	add    ah,al
  417580:	inc    edi
  417581:	and    BYTE PTR [ebx],dl
  417583:	mov    edx,0x7dcf86bc
  417588:	mov    edi,edx
  41758a:	pop    edx
  41758b:	inc    ebx
  41758c:	dec    eax
  41758d:	stos   DWORD PTR es:[edi],eax
  41758e:	pop    es
  41758f:	xchg   esp,eax
  417590:	xchg   edi,eax
  417591:	ret    0x805d
  417594:	xchg   edi,eax
  417595:	xor    dl,BYTE PTR [eax]
  417597:	mov    bh,0x86
  417599:	dec    esp
  41759a:	pop    ds
  41759b:	test   bh,ah
  41759d:	jmp    0x798dd194
  4175a2:	leave  
  4175a3:	(bad)  
  4175a4:	jnp    0x41759b
  4175a6:	jl     0x417529
  4175a8:	inc    ebp
  4175a9:	retf   0x158b
  4175ac:	mov    ebx,DWORD PTR [esi+esi*2]
  4175af:	loop   0x4175af
  4175b1:	lods   al,BYTE PTR ds:[esi]
  4175b2:	inc    ebx
  4175b3:	adc    al,0x17
  4175b5:	fdivp  st(3),st
  4175b7:	cld    
  4175b8:	adc    eax,DWORD PTR [edi]
  4175ba:	test   al,0xc8
  4175bc:	out    0x49,eax
  4175be:	ret    
  4175bf:	xor    BYTE PTR [edi-0x75],cl
  4175c2:	xchg   ebp,eax
  4175c3:	or     cl,BYTE PTR [eax+0x18480fc7]
  4175c9:	fs ins DWORD PTR es:[edi],dx
  4175cb:	shl    bh,cl
  4175cd:	jae    0x417639
  4175cf:	loop   0x417637
  4175d1:	loop   0x4175f4
  4175d3:	(bad)  
  4175d4:	iret   
  4175d5:	shl    esp,cl
  4175d7:	ficom  WORD PTR [esi+eax*2-0x6c8c0e1f]
  4175de:	repnz enter 0x5340,0x18
  4175e3:	inc    ecx
  4175e4:	xchg   edx,eax
  4175e5:	mov    dh,0xa7
  4175e7:	out    dx,eax
  4175e8:	cmp    DWORD PTR [ebp-0x77],esp
  4175eb:	xor    al,al
  4175ed:	adc    ch,BYTE PTR [eax+0x417df397]
  4175f3:	add    al,0x20
  4175f5:	or     ah,BYTE PTR [ecx+0x45]
  4175f8:	push   esi
  4175f9:	popa   
  4175fa:	pop    eax
  4175fb:	mov    al,ds:0x9ef89517
  417600:	or     edx,DWORD PTR ds:0x26887531
  417606:	daa    
  417607:	jbe    0x417625
  417609:	ror    DWORD PTR [ecx],0x7e
  41760c:	pushf  
  41760d:	test   DWORD PTR [eax],ebp
  41760f:	jmp    0xb1ca:0xc3d83a8e
  417616:	adc    al,0xf7
  417618:	cmp    al,0x19
  41761a:	mov    WORD PTR [edi+0x5d],gs
  41761d:	dec    ebx
  41761e:	jmp    0x926:0x56694180
  417625:	inc    esi
  417626:	mov    al,0x87
  417628:	pop    edi
  417629:	fiadd  WORD PTR [edi-0x5e]
  41762c:	mov    ah,0xaa
  41762e:	bound  ebx,QWORD PTR [edi+edx*4-0x3f2d7ea9]
  417635:	xchg   edx,eax
  417636:	addr16 retf 0xaf76
  41763a:	pop    edi
  41763b:	in     eax,dx
  41763c:	imul   ebp,esi,0xffffffb4
  41763f:	nop
  417640:	ss sub eax,0x459213b7
  417646:	dec    edi
  417647:	ret    0x4c48
  41764a:	sbb    eax,0x37617b7
  41764f:	push   cs
  417650:	push   ecx
  417651:	xor    ch,BYTE PTR [eax]
  417653:	or     eax,0x9e21c278
  417658:	xchg   esp,eax
  417659:	inc    eax
  41765a:	gs stc 
  41765c:	push   es
  41765d:	call   0x182c178b
  417662:	loop   0x4176de
  417664:	xchg   ecx,eax
  417665:	or     DWORD PTR [ebx],edi
  417667:	jle    0x417698
  417669:	into   
  41766a:	jp     0x41762c
  41766c:	mov    ds:0x81420b14,al
  417671:	sbb    BYTE PTR [edx-0x4cfc491c],bh
  417677:	int3   
  417678:	das    
  417679:	adc    al,BYTE PTR [edx+ecx*8+0x9]
  41767d:	ins    DWORD PTR es:[edi],dx
  41767e:	add    al,BYTE PTR [edx+0x2b]
  417681:	ret    0xde32
  417684:	clc    
  417685:	mov    esp,0x706d548f
  41768a:	out    dx,al
  41768b:	(bad)  
  41768d:	inc    esp
  41768e:	ficomp DWORD PTR [ebx+0x6b1d2c69]
  417694:	jo     0x41768d
  417696:	jne    0x417708
  417698:	or     ch,BYTE PTR [edi]
  41769a:	jmp    0x4f8:0xacd481a0
  4176a1:	xchg   BYTE PTR [edx],bh
  4176a3:	mov    cs,WORD PTR ds:0x9c0f7aab
  4176a9:	out    0xd3,eax
  4176ab:	test   al,0x86
  4176ad:	mov    ?,esi
  4176af:	xchg   edx,eax
  4176b0:	int3   
  4176b1:	lods   al,BYTE PTR ds:[esi]
  4176b2:	xchg   edi,eax
  4176b3:	sbb    BYTE PTR [ebp+0x5359fcd],bh
  4176b9:	sub    DWORD PTR [edx],edx
  4176bb:	adc    eax,0x12095782
  4176c0:	out    dx,al
  4176c1:	mov    ebp,0xb1b39697
  4176c6:	adc    ebp,DWORD PTR [ecx+0x15794760]
  4176cc:	call   FWORD PTR [edi-0x1bb33af2]
  4176d2:	sar    eax,0x62
  4176d5:	mov    bh,0xe1
  4176d7:	inc    esi
  4176d8:	push   es
  4176d9:	mov    ebx,0x8a054359
  4176de:	and    edx,DWORD PTR ds:0x1f24b9c0
  4176e4:	add    ebx,DWORD PTR gs:[edi+0x39]
  4176e8:	cmp    DWORD PTR [eax-0x24c1fbce],ebx
  4176ee:	sbb    dl,BYTE PTR [ecx-0x331c7902]
  4176f4:	popf   
  4176f5:	pop    ds
  4176f6:	lock adc al,dl
  4176f9:	repz jne 0x417691
  4176fc:	jne    0x417771
  4176fe:	fistp  QWORD PTR ds:0x5da61925
  417704:	inc    ebx
  417705:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417707:	popf   
  417708:	pop    esp
  417709:	mov    eax,ds:0x56202649
  41770e:	push   es
  41770f:	jb     0x4176b9
  417711:	out    dx,al
  417712:	jnp    0x4176c5
  417714:	div    bl
  417716:	iret   
  417717:	mov    al,0xf5
  417719:	popf   
  41771a:	out    dx,al
  41771b:	(bad)  [eax-0x1433e04e]
  417721:	sub    BYTE PTR [esi+0x13824e9f],bl
  417727:	jle    0x4176fe
  417729:	xor    DWORD PTR [esi+0x12],edx
  41772c:	call   0xd6d3:0x2c156aad
  417733:	les    ebx,FWORD PTR [esi+0x7b345ac8]
  417739:	sbb    al,0xf4
  41773b:	xchg   edi,eax
  41773c:	and    cl,BYTE PTR [edi-0x37305542]
  417742:	dec    ebx
  417743:	nop
  417744:	test   eax,0x4004a7b2
  417749:	call   0x625e:0x91bcc1ef
  417750:	int3   
  417751:	stos   BYTE PTR es:[edi],al
  417752:	xor    esi,DWORD PTR [eax]
  417754:	mov    al,0x7c
  417756:	test   BYTE PTR [esp+ecx*8-0x5f1f113d],bl
  41775d:	sbb    esp,DWORD PTR [edx-0x61]
  417760:	dec    ebp
  417761:	add    eax,0xaab8a8be
  417766:	sub    al,0x9f
  417768:	dec    esp
  417769:	fsubr  DWORD PTR [edx+esi*4+0x1b]
  41776d:	test   al,0x2c
  41776f:	mov    bh,0x80
  417771:	cmc    
  417772:	adc    al,0x90
  417774:	add    dl,0x3f
  417777:	addr16 mov edi,0x2fbc2818
  41777d:	pop    esp
  41777e:	retf   
  41777f:	and    ebx,DWORD PTR [esi]
  417781:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417783:	mul    DWORD PTR [edx-0x26305b72]
  417789:	js     0x4177be
  41778b:	rcr    DWORD PTR [esi+0x52],0x55
  41778f:	adc    al,0x12
  417791:	(bad)  
  417792:	repnz daa 
  417794:	xor    BYTE PTR [eax-0x40],bl
  417797:	ret    
  417798:	mov    bh,0x72
  41779a:	add    eax,DWORD PTR [edx+0x2dc0d870]
  4177a0:	jbe    0x417749
  4177a2:	lahf   
  4177a3:	mov    WORD PTR [edi+0x75],?
  4177a6:	loopne 0x4177a2
  4177a8:	mov    esi,0x3655edea
  4177ad:	sub    ch,BYTE PTR [ebx]
  4177af:	les    edx,FWORD PTR [ecx+edi*8-0x6d]
  4177b3:	(bad)  [esi+ebp*4]
  4177b6:	stc    
  4177b7:	mov    ebp,0x533688fd
  4177bc:	jb     0x41781f
  4177be:	pop    ecx
  4177bf:	popa   
  4177c0:	loopne 0x4177a1
  4177c2:	vdivps ymm2,ymm6,ymm6
  4177c6:	add    al,0x8d
  4177c8:	pop    ss
  4177c9:	test   DWORD PTR [ebp-0x56],edi
  4177cc:	dec    BYTE PTR [ebp+0x1e]
  4177cf:	shl    eax,0x27
  4177d2:	cmp    eax,DWORD PTR [edx+ebp*8-0x53]
  4177d6:	mov    ecx,0x1ed255da
  4177db:	push   ss
  4177dc:	jge    0x417806
  4177de:	iret   
  4177df:	call   0xec40:0xe178d852
  4177e6:	fwait
  4177e7:	xlat   BYTE PTR ds:[ebx]
  4177e8:	cli    
  4177e9:	jns    0x41783e
  4177eb:	loope  0x4177c8
  4177ed:	addr16 mov ah,0x5
  4177f0:	popa   
  4177f1:	jg     0x4177fd
  4177f3:	test   bl,ch
  4177f5:	mov    ecx,0x45749df1
  4177fa:	lea    ebx,[esp+ebp*1]
  4177fd:	loopne 0x4177dd
  4177ff:	(bad)  
  417800:	push   edx
  417801:	and    BYTE PTR [ecx-0x6931fb7],dh
  417807:	xor    ecx,DWORD PTR [ecx+0x59a78772]
  41780d:	jns    0x4177d5
  41780f:	sub    eax,0xa43fcb69
  417814:	inc    eax
  417815:	or     cl,BYTE PTR [eax-0x12affba9]
  41781b:	xor    BYTE PTR es:[edx],ah
  41781e:	xchg   ebx,eax
  41781f:	sbb    al,BYTE PTR [ecx]
  417821:	mov    ch,0xf
  417823:	std    
  417824:	add    edi,DWORD PTR [edi-0x32]
  417827:	out    0xa9,eax
  417829:	jo     0x4177e7
  41782b:	pop    ds
  41782c:	cdq    
  41782d:	mov    al,ds:0xce61fb55
  417832:	cmp    al,0xe
  417834:	push   ecx
  417835:	mov    edx,0x108d9e39
  41783a:	rcr    BYTE PTR [bp+si],1
  41783d:	stos   DWORD PTR es:[edi],eax
  41783e:	cmp    BYTE PTR [esi+0x1b],bh
  417841:	mov    al,BYTE PTR [edi+0x42]
  417844:	xor    DWORD PTR [edi],edi
  417846:	sar    BYTE PTR [edx+0x2808aae9],0xbc
  41784d:	cmp    eax,0xe10e1206
  417852:	push   edx
  417853:	sub    DWORD PTR [edi],esp
  417855:	(bad)  
  417856:	hlt    
  417857:	hlt    
  417858:	jg     0x41789e
  41785a:	or     eax,0xa74b86c9
  41785f:	outs   dx,DWORD PTR ds:[esi]
  417861:	sti    
  417862:	push   0x4f45e829
  417867:	repnz add eax,0xc4290f3b
  41786d:	pop    ebx
  41786e:	push   ecx
  41786f:	xchg   edi,eax
  417870:	outs   dx,BYTE PTR ds:[esi]
  417871:	rcl    DWORD PTR [edx],cl
  417873:	push   edi
  417874:	adc    al,0xbc
  417876:	jnp    0x417852
  417878:	inc    ebp
  417879:	jns    0x417810
  41787b:	fwait
  41787c:	pop    ss
  41787d:	in     eax,dx
  41787e:	cmp    ebx,edx
  417880:	or     dl,BYTE PTR [ebx+0x3c82e368]
  417886:	cmc    
  417887:	(bad)  
  417888:	mov    ecx,0x98eefa28
  41788d:	xchg   DWORD PTR [ebp+ebp*1+0x70],ebp
  417891:	fsub   QWORD PTR [ebx-0x37a12c45]
  417897:	and    esi,DWORD PTR [ebp-0x17856a1e]
  41789d:	xchg   ebp,eax
  41789e:	sbb    dh,BYTE PTR ds:0x7eeda48b
  4178a4:	bound  ebp,QWORD PTR [eax+ebx*4]
  4178a7:	push   edx
  4178a8:	pop    edx
  4178a9:	sti    
  4178aa:	push   cs
  4178ab:	shr    BYTE PTR [edi+0x7a],cl
  4178ae:	dec    ecx
  4178af:	(bad)  
  4178b0:	into   
  4178b1:	and    bh,BYTE PTR [esp+esi*4+0x6f8144ab]
  4178b8:	loope  0x417921
  4178ba:	dec    ebx
  4178bb:	inc    esp
  4178bc:	mov    dl,0x9a
  4178be:	xor    BYTE PTR [esi+ebp*4],dl
  4178c1:	sbb    cl,BYTE PTR [ebp-0x1076e8fa]
  4178c7:	loopne 0x417858
  4178c9:	in     al,0xad
  4178cb:	cmp    cl,BYTE PTR [edx-0x10]
  4178ce:	jl     0x417949
  4178d0:	inc    edi
  4178d1:	sahf   
  4178d2:	lahf   
  4178d3:	stc    
  4178d4:	aaa    
  4178d5:	ins    BYTE PTR es:[edi],dx
  4178d6:	and    al,0x54
  4178d8:	adc    eax,0xe298a6d4
  4178dd:	mov    al,0xbe
  4178df:	push   0xffffffce
  4178e1:	add    BYTE PTR [ebx+0x17ea8c76],bh
  4178e7:	popa   
  4178e8:	xchg   ebx,eax
  4178e9:	cs mov al,0xec
  4178ec:	pop    edx
  4178ed:	shl    dh,1
  4178ef:	ret    
  4178f0:	popw   es
  4178f2:	iret   
  4178f3:	mov    DWORD PTR [eax+eiz*4-0x1663342b],ebx
  4178fa:	xchg   esp,eax
  4178fb:	or     DWORD PTR [edx+0x15a185a2],ebp
  417901:	fnsave [ecx]
  417903:	lods   al,BYTE PTR ds:[esi]
  417904:	xor    bh,BYTE PTR [ebx+esi*8-0x3f]
  417908:	ficom  DWORD PTR [ebp+eiz*8+0x0]
  41790c:	inc    ebx
  41790d:	xor    al,BYTE PTR [ebx]
  41790f:	and    dh,al
  417911:	mov    bh,BYTE PTR ds:0xf4ec2160
  417917:	dec    esp
  417918:	fwait
  417919:	xchg   edi,eax
  41791a:	rcl    DWORD PTR [ebp+esi*1-0x21],cl
  41791e:	jp     0x41795f
  417920:	scas   eax,DWORD PTR es:[edi]
  417921:	jb     0x417900
  417923:	les    esi,FWORD PTR [eax]
  417925:	xchg   DWORD PTR [edx+ecx*1],esi
  417928:	xchg   esi,eax
  417929:	popa   
  41792a:	sub    DWORD PTR [esi+0x35],esi
  41792d:	jnp    0x417900
  41792f:	mov    ah,0xeb
  417931:	adc    al,dh
  417933:	and    cl,BYTE PTR [esi+eax*2+0x44]
  417937:	fcmovnu st,st(1)
  417939:	push   0x3c740cbe
  41793e:	pop    ss
  41793f:	lock je 0x41794d
  417942:	pop    ecx
  417943:	mov    eax,0x1761253b
  417948:	paddq  mm0,QWORD PTR [esi-0x1b]
  41794c:	(bad)  
  41794d:	xchg   edi,eax
  41794e:	mov    bl,BYTE PTR [eax-0x42ae495]
  417954:	adc    esp,DWORD PTR [ecx+0xdcda97d]
  41795a:	(bad)  
  41795b:	mov    cl,0x1
  41795d:	and    BYTE PTR ss:[ecx+0x7106937],al
  417964:	push   cs
  417965:	mov    bl,0x11
  417967:	cwde   
  417968:	leave  
  417969:	sbb    eax,0xd365187d
  41796e:	scas   al,BYTE PTR es:[edi]
  41796f:	mov    bl,0xa1
  417971:	(bad)  
  417972:	fcmovb st,st(1)
  417974:	jg     0x41790a
  417976:	mul    DWORD PTR [edi-0x72]
  417979:	mov    ecx,0x5fba76
  41797e:	jle    0x417949
  417980:	push   edx
  417981:	into   
  417982:	fisub  DWORD PTR [esi+0x31]
  417985:	or     esi,DWORD PTR [ebp-0x3d]
  417988:	and    BYTE PTR [ecx],ah
  41798a:	push   eax
  41798b:	dec    ebx
  41798c:	call   0xb09a46af
  417991:	in     al,dx
  417992:	sub    eax,0x9c8346c9
  417997:	enterw 0x74c5,0x29
  41799c:	into   
  41799d:	mov    eax,0x341ca37e
  4179a2:	jmp    0xac9e6d8
  4179a7:	hlt    
  4179a8:	inc    eax
  4179a9:	mov    al,0xe7
  4179ab:	adc    ebx,DWORD PTR ds:0x414b31df
  4179b1:	mov    ebp,0xb2d3b284
  4179b6:	pushf  
  4179b7:	mov    ecx,0x6b7096d9
  4179bc:	ins    BYTE PTR es:[edi],dx
  4179bd:	jo     0x417a0d
  4179bf:	inc    esi
  4179c0:	mov    ah,0x33
  4179c2:	pusha  
  4179c3:	inc    ebp
  4179c4:	add    edx,ebx
  4179c6:	or     eax,0xd2c3cf30
  4179cb:	push   ebp
  4179cc:	jge    0x4179b0
  4179ce:	inc    eax
  4179cf:	jno    0x4179f9
  4179d1:	daa    
  4179d2:	fst    DWORD PTR [esi+0x49]
  4179d5:	xor    bl,BYTE PTR [edx]
  4179d7:	sub    eax,0x979d4906
  4179dc:	les    esi,FWORD PTR [esi+0x5e]
  4179df:	imul   esp,DWORD PTR [eax+0x1],0xab88a1a6
  4179e6:	cdq    
  4179e7:	ins    DWORD PTR es:[edi],dx
  4179e8:	mov    ecx,0x2e930ecc
  4179ed:	jp     0x417a23
  4179ef:	loop   0x417a18
  4179f1:	call   ebp
  4179f3:	leave  
  4179f4:	jg     0x417a56
  4179f6:	icebp  
  4179f7:	js     0x417a38
  4179f9:	(bad)  
  4179fa:	push   ss
  4179fb:	and    eax,0xab4eb55d
  417a00:	dec    ecx
  417a01:	mov    bl,0x70
  417a03:	ret    0xced3
  417a06:	pushf  
  417a07:	xlat   BYTE PTR ds:[ebx]
  417a08:	dec    ebx
  417a09:	mov    ch,0xe3
  417a0b:	adc    DWORD PTR [ebx-0x3c],edi
  417a0e:	or     cl,ah
  417a10:	xor    ah,0x19
  417a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a14:	rol    DWORD PTR [ecx+0x44e95a67],cl
  417a1a:	(bad)  
  417a1b:	nop
  417a1c:	ins    DWORD PTR es:[edi],dx
  417a1d:	adc    al,bh
  417a1f:	retf   0x3dce
  417a22:	dec    edi
  417a23:	jbe    0x417a40
  417a25:	push   esp
  417a26:	push   ebp
  417a27:	push   esp
  417a28:	nop
  417a29:	fs push ebx
  417a2b:	xchg   ecx,eax
  417a2c:	in     al,dx
  417a2d:	outs   dx,DWORD PTR ds:[esi]
  417a2e:	int    0x44
  417a30:	test   BYTE PTR [ebx],0xe9
  417a33:	test   dl,bl
  417a35:	in     al,0x1a
  417a37:	mov    dl,0x5e
  417a39:	mov    cl,0x59
  417a3b:	pusha  
  417a3c:	pop    esi
  417a3d:	push   eax
  417a3e:	imul   eax,DWORD PTR [esp+ebp*1],0xffffffd3
  417a42:	addr16 mov esp,0x7c7ce2ab
  417a48:	lahf   
  417a49:	dec    edi
  417a4a:	mov    ebx,0xbb55b5dc
  417a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a50:	adc    dh,BYTE PTR [esi-0x42]
  417a53:	jmp    0x4179e1
  417a55:	mov    ch,0x8d
  417a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a58:	mov    DWORD PTR [esi+0x6e778c7f],eax
  417a5e:	push   0xffffff81
  417a60:	hlt    
  417a61:	xor    eax,0x5c47db16
  417a66:	sub    al,0x2e
  417a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a69:	lock fcmovnu st,st(3)
  417a6d:	lods   eax,DWORD PTR ds:[esi]
  417a6e:	in     al,dx
  417a6f:	push   edx
  417a70:	inc    ebx
  417a71:	inc    ebp
  417a72:	sub    BYTE PTR [esi+0x55],bh
  417a75:	or     DWORD PTR [ebx+0x6ba1be65],0x67
  417a7c:	mov    cl,0x84
  417a7e:	add    ebx,ebx
  417a80:	or     esi,0xaa1c0a49
  417a86:	sbb    ecx,edx
  417a88:	xchg   esi,eax
  417a89:	rol    BYTE PTR [esp+edi*8],1
  417a8c:	inc    edx
  417a8d:	ds pop es
  417a8f:	mov    BYTE PTR [edx],ah
  417a91:	xlat   BYTE PTR ds:[ebx]
  417a92:	dec    edi
  417a93:	adc    eax,0x3c9618ab
  417a98:	call   0xa613116d
  417a9d:	or     BYTE PTR [ecx-0x65],ch
  417aa0:	fs pop esp
  417aa2:	popa   
  417aa3:	mov    ebx,0x162dab6
  417aa8:	hlt    
  417aa9:	mov    esp,0x31d04057
  417aae:	in     al,0xf7
  417ab0:	jmp    edx
  417ab2:	int    0x3c
  417ab4:	and    BYTE PTR [edi-0x39bf4975],dl
  417aba:	xchg   esp,eax
  417abb:	mov    dl,0xdf
  417abd:	ret    
  417abe:	cmp    eax,0x54edb368
  417ac3:	push   es
  417ac4:	mov    esp,0x48fb1e2c
  417ac9:	xchg   esi,eax
  417aca:	add    bl,dh
  417acc:	pop    esi
  417acd:	stc    
  417ace:	scas   eax,DWORD PTR es:[edi]
  417acf:	js     0x417a79
  417ad1:	dec    esp
  417ad2:	out    0xc2,eax
  417ad4:	imul   ecx,DWORD PTR ds:0xd64107e5,0x294b1842
  417ade:	adc    BYTE PTR [ebx+0x41],dl
  417ae1:	loope  0x417a6c
  417ae3:	in     al,dx
  417ae4:	pushf  
  417ae5:	fstp   QWORD PTR [eax-0x68]
  417ae8:	dec    ebx
  417ae9:	dec    ebp
  417aea:	sbb    BYTE PTR [ebp-0x6a454b06],dh
  417af0:	and    al,0x6f
  417af2:	and    BYTE PTR [ebx+0x15],dh
  417af5:	ja     0x417b26
  417af7:	xor    ebx,DWORD PTR [ebx-0x3d7fbeb7]
  417afd:	ins    BYTE PTR es:[edi],dx
  417afe:	push   0x44
  417b00:	mov    bl,0xb7
  417b02:	adc    al,BYTE PTR [eax-0x79]
  417b05:	pop    es
  417b06:	lock mov WORD PTR [esi+0x642f48af],gs
  417b0d:	inc    edi
  417b0e:	call   0x869d:0xb97098d
  417b15:	sti    
  417b16:	jb     0x417abe
  417b18:	shl    ebx,1
  417b1a:	lock mov al,ds:0x1ab4e068
  417b20:	outs   dx,DWORD PTR ds:[esi]
  417b21:	cli    
  417b22:	dec    eax
  417b23:	cs dec edi
  417b25:	test   eax,0x9626664e
  417b2a:	idiv   cl
  417b2c:	mov    al,ds:0xe14213e9
  417b31:	mov    esp,0xb6a5cc0d
  417b36:	ror    BYTE PTR gs:[ebx],1
  417b39:	fld    TBYTE PTR [esi-0x65]
  417b3c:	lock imul eax,DWORD PTR [ebp+0x63],0xf9b86272
  417b44:	jmp    0x12d033f4
  417b49:	aas    
  417b4a:	enter  0x888f,0xf4
  417b4e:	call   0x481c:0x3ee34aa5
  417b55:	dec    eax
  417b56:	arpl   WORD PTR [edx+0x29],ax
  417b59:	cmc    
  417b5a:	ret    
  417b5b:	adc    al,0x13
  417b5d:	add    BYTE PTR [ebx],cl
  417b5f:	sbb    BYTE PTR [edi+0x794cd5b3],cl
  417b65:	xor    DWORD PTR [edx],ebx
  417b67:	adc    dh,BYTE PTR ds:0xc9a3bc9b
  417b6d:	mov    WORD PTR [edx+ecx*4+0x22a158f6],cs
  417b74:	sub    al,0x87
  417b76:	imul   edi,ebp,0x4583abdb
  417b7c:	jne    0x417bde
  417b7e:	call   0xf231:0x2d681b81
  417b85:	dec    ecx
  417b86:	inc    BYTE PTR [ecx+edx*2+0x1b]
  417b8a:	mov    esp,DWORD PTR [eax-0x93ecd4e]
  417b90:	adc    ebx,ebp
  417b92:	aas    
  417b93:	dec    ebp
  417b94:	mov    DWORD PTR [esi],ecx
  417b96:	loop   0x417ba3
  417b98:	imul   edi,edi,0xffffffd3
  417b9b:	icebp  
  417b9c:	loope  0x417bcc
  417b9e:	add    al,0x62
  417ba0:	in     al,0x5f
  417ba2:	fidivr DWORD PTR [eax+0x3396bc11]
  417ba8:	add    eax,0xe04983db
  417bad:	sbb    al,0x6f
  417baf:	adc    BYTE PTR [edx-0x7b],cl
  417bb2:	test   al,0x44
  417bb4:	iret   
  417bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb6:	in     eax,0x3f
  417bb8:	ins    DWORD PTR es:[edi],dx
  417bb9:	mov    edx,DWORD PTR [esi+0xd]
  417bbc:	lea    eax,[ebx+0x3db41a24]
  417bc2:	sahf   
  417bc3:	sbb    BYTE PTR [edx-0x67],cl
  417bc6:	add    eax,esi
  417bc8:	push   es
  417bc9:	lds    esi,FWORD PTR [eax-0x481d1ed5]
  417bcf:	pop    es
  417bd0:	push   ecx
  417bd1:	fdivr  QWORD PTR [esi+0x8]
  417bd4:	xlat   BYTE PTR ds:[ebx]
  417bd5:	xor    ebx,DWORD PTR [edi-0x3e]
  417bd8:	push   ebp
  417bd9:	and    edi,DWORD PTR [ecx+0x50ea4383]
  417bdf:	ret    
  417be0:	test   BYTE PTR [ecx+0x595f1b94],0x46
  417be7:	ja     0x417c09
  417be9:	(bad)  
  417bea:	push   edx
  417beb:	daa    
  417bec:	add    cl,BYTE PTR [eax]
  417bee:	loope  0x417c5f
  417bf0:	add    eax,0x2c17ab78
  417bf5:	adc    edi,ecx
  417bf7:	adc    DWORD PTR [ebx],ecx
  417bf9:	sahf   
  417bfa:	push   eax
  417bfb:	ins    BYTE PTR es:[edi],dx
  417bfc:	jns    0x417c6b
  417bfe:	jnp    0x417c11
  417c00:	sub    ebp,0xffffff95
  417c03:	ret    0xf3ab
  417c06:	ja     0x417c51
  417c08:	xchg   eax,ebp
  417c0a:	mov    dl,0xc5
  417c0c:	xor    esp,DWORD PTR [edx]
  417c0e:	in     al,dx
  417c0f:	xor    DWORD PTR [ecx-0x367a351e],esi
  417c15:	jns    0x417be8
  417c17:	adc    ah,al
  417c19:	cs das 
  417c1b:	jb     0x417c2b
  417c1d:	mov    eax,ds:0x8d1fa5a
  417c22:	push   0x7b
  417c24:	dec    esp
  417c25:	add    al,0x8a
  417c27:	fucomip st,st(6)
  417c29:	mov    al,0x74
  417c2b:	fdivr  DWORD PTR [ebp+0x16338eb0]
  417c31:	fwait
  417c32:	repnz xchg si,ax
  417c35:	out    0xc8,eax
  417c37:	ds xchg ebp,eax
  417c39:	mov    eax,ds:0xf3523f15
  417c3e:	xchg   DWORD PTR [ecx+ebx*1+0x28],ebx
  417c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c43:	out    0x5,eax
  417c45:	adc    eax,0x2f520754
  417c4a:	push   ds
  417c4b:	pop    edi
  417c4c:	cld    
  417c4d:	ret    
  417c4e:	xchg   ebp,eax
  417c4f:	adc    al,0xfa
  417c51:	sti    
  417c52:	mov    ebp,0x2dcc31b2
  417c57:	inc    edi
  417c58:	add    edx,DWORD PTR [ecx+0x5c]
  417c5b:	je     0x417ccf
  417c5d:	sbb    eax,0xffffffc9
  417c60:	and    al,0x86
  417c62:	xlat   BYTE PTR ds:[ebx]
  417c63:	add    al,0x4f
  417c65:	daa    
  417c66:	mov    ah,0x54
  417c68:	dec    edi
  417c69:	push   ebp
  417c6a:	ds rol ebx,cl
  417c6d:	faddp  st(4),st
  417c6f:	dec    esp
  417c70:	sub    bh,BYTE PTR [ebx+0x4ff20ea0]
  417c76:	ja     0x417caf
  417c78:	sti    
  417c79:	in     eax,0x93
  417c7b:	mov    dh,0xe6
  417c7d:	pop    ds
  417c7e:	inc    esp
  417c7f:	push   0x34
  417c81:	push   edx
  417c82:	push   ebx
  417c83:	adc    BYTE PTR [esi+0x35],bl
  417c86:	sub    BYTE PTR [eax-0x11],bl
  417c89:	lods   al,BYTE PTR ds:[esi]
  417c8a:	sub    BYTE PTR [ebx-0x69e87381],ah
  417c90:	mov    eax,ds:0xf7b8ac39
  417c95:	out    0x31,al
  417c97:	ja     0x417cea
  417c99:	fisub  WORD PTR [esi]
  417c9b:	xchg   BYTE PTR [edx+edx*1-0x9],bl
  417c9f:	loope  0x417ce6
  417ca1:	sbb    ch,BYTE PTR [edx]
  417ca3:	ja     0x417c50
  417ca5:	(bad)  
  417ca6:	fdivr  QWORD PTR [esi-0x78]
  417ca9:	pop    ebp
  417caa:	adc    al,0x5
  417cac:	jne    0x417d02
  417cae:	aad    0x5
  417cb0:	pop    ss
  417cb1:	stos   BYTE PTR es:[edi],al
  417cb2:	or     al,0xcc
  417cb4:	ja     0x417c87
  417cb6:	mov    esp,0xb57c1a65
  417cbb:	xlat   BYTE PTR ds:[ebx]
  417cbc:	inc    ebp
  417cbd:	mov    edx,0xe7581343
  417cc2:	iret   
  417cc3:	dec    ecx
  417cc4:	es dec edx
  417cc6:	dec    eax
  417cc7:	psrlw  mm2,QWORD PTR [edx]
  417cca:	mov    ebp,0xb913106c
  417ccf:	lods   eax,DWORD PTR ds:[esi]
  417cd0:	pop    ds
  417cd1:	jle    0x417d48
  417cd3:	and    BYTE PTR [ebp+0x34],bh
  417cd6:	mov    cl,0xda
  417cd8:	mov    ds:0x165120b1,eax
  417cdd:	inc    esp
  417cde:	xor    al,0x9c
  417ce0:	add    ch,dh
  417ce2:	jb     0x417c7a
  417ce4:	add    BYTE PTR [eax],al
  417ce6:	or     al,0x1f
  417ce8:	(bad)  
  417ce9:	dec    eax
  417cea:	shl    BYTE PTR [edi+eax*1+0x3a],0xce
  417cef:	test   al,0xe5
  417cf1:	dec    esi
  417cf2:	or     bl,dl
  417cf4:	inc    edi
  417cf5:	inc    edi
  417cf6:	inc    esp
  417cf7:	pop    esp
  417cf8:	enter  0x4688,0xde
  417cfc:	aad    0x68
  417cfe:	dec    eax
  417cff:	int3   
  417d00:	pop    ss
  417d01:	push   edi
  417d02:	fdivp  st(4),st
  417d04:	add    DWORD PTR ds:0xdcb37c6c,edi
  417d0a:	outs   dx,DWORD PTR ds:[esi]
  417d0b:	call   0xbbd8b5be
  417d10:	mov    ebx,DWORD PTR ds:[edi-0x2]
  417d14:	push   ecx
  417d15:	jns    0x417d46
  417d17:	int3   
  417d18:	pop    ebx
  417d19:	push   edi
  417d1a:	out    dx,al
  417d1b:	mov    edi,fs
  417d1d:	push   ss
  417d1e:	mov    esi,0xd3a9e7da
  417d23:	(bad)  
  417d25:	push   0x42
  417d27:	add    al,0x52
  417d29:	cmp    al,0xe8
  417d2b:	push   0x41bcc9c7
  417d30:	cmp    ebp,DWORD PTR [bp+0x18f6]
  417d35:	retf   0xf8f2
  417d38:	cmp    eax,ebx
  417d3a:	jnp    0x417d71
  417d3c:	add    ebx,DWORD PTR [eax+0x2b2eec38]
  417d42:	dec    esp
  417d43:	or     eax,DWORD PTR [ecx-0x1e]
  417d46:	inc    eax
  417d47:	sub    DWORD PTR [esi],ebp
  417d49:	arpl   WORD PTR ds:[esi],sp
  417d4c:	sbb    BYTE PTR [ecx-0x2f],0xcf
  417d50:	sub    bl,BYTE PTR [esi+0x6c72a9a3]
  417d56:	ror    DWORD PTR [esi-0x14],cl
  417d59:	xor    eax,0xf8eddeb4
  417d5e:	inc    esp
  417d5f:	in     eax,dx
  417d60:	mov    WORD PTR [edx-0x70],ss
  417d63:	cmp    eax,0xabbdc392
  417d68:	xor    DWORD PTR [eax+0x62],ebp
  417d6b:	es retf 0x617f
  417d6f:	push   edi
  417d70:	je     0x417d38
  417d72:	mov    edi,0x597fd56c
  417d77:	arpl   sp,ax
  417d79:	rol    edi,1
  417d7b:	call   0xe2ad:0x1b70a990
  417d82:	push   DWORD PTR [eax+0x26f28a0b]
  417d88:	iret   
  417d89:	pop    eax
  417d8a:	rcl    DWORD PTR [eax+0x46],0xcd
  417d8e:	cmp    edx,0x74a8555f
  417d94:	jnp    0x417dde
  417d96:	(bad)  
  417d97:	sahf   
  417d98:	cmc    
  417d99:	lods   eax,DWORD PTR ds:[esi]
  417d9a:	mov    ecx,0xde9655c5
  417d9f:	push   es
  417da0:	sbb    DWORD PTR [eax],esi
  417da2:	sbb    DWORD PTR [ebx],esp
  417da4:	icebp  
  417da5:	mov    eax,0x511cd4cc
  417daa:	inc    al
  417dac:	cmp    ebx,DWORD PTR [ecx+ecx*2-0x77]
  417db0:	clc    
  417db1:	jp     0x417d5f
  417db3:	loopne 0x417e33
  417db5:	jo     0x417e06
  417db7:	inc    eax
  417db8:	lahf   
  417db9:	dec    eax
  417dba:	cmp    ah,BYTE PTR [eax+ebp*4]
  417dbd:	lahf   
  417dbe:	mov    dl,0xe6
  417dc0:	imul   edx,edx,0xedeabc5
  417dc6:	(bad)  
  417dc7:	adc    eax,0x3de19d63
  417dcc:	mov    esi,0x13ca7016
  417dd1:	or     al,0x20
  417dd3:	cld    
  417dd4:	adc    eax,0x75eef9b7
  417dd9:	inc    eax
  417dda:	cwde   
  417ddb:	test   eax,0x3e3dfaf0
  417de0:	clc    
  417de1:	jecxz  0x417db3
  417de3:	jo     0x417e63
  417de5:	leave  
  417de6:	push   esp
  417de7:	(bad)  
  417de8:	sahf   
  417de9:	cmc    
  417dea:	xchg   edi,eax
  417deb:	mov    ah,0x27
  417ded:	outs   dx,BYTE PTR ds:[esi]
  417dee:	mov    cl,0x10
  417df0:	aaa    
  417df1:	push   ebx
  417df2:	or     DWORD PTR [edi-0x48],eax
  417df5:	dec    ebx
  417df6:	mov    BYTE PTR [ecx+0x21],dh
  417df9:	outs   dx,DWORD PTR ds:[esi]
  417dfa:	inc    ecx
  417dfb:	cmp    ecx,esi
  417dfd:	shl    BYTE PTR [edx+eax*1+0x536ebbc2],cl
  417e04:	mov    esi,DWORD PTR [ebp-0x4]
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
